
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-udevd_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

000000000040a2f8 <_init>:
  40a2f8:	stp	x29, x30, [sp, #-16]!
  40a2fc:	mov	x29, sp
  40a300:	bl	40c160 <call_weak_fn>
  40a304:	ldp	x29, x30, [sp], #16
  40a308:	ret

Disassembly of section .plt:

000000000040a310 <__libc_start_main@plt-0x20>:
  40a310:	stp	x16, x30, [sp, #-16]!
  40a314:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a318:	ldr	x17, [x16, #264]
  40a31c:	add	x16, x16, #0x108
  40a320:	br	x17
  40a324:	nop
  40a328:	nop
  40a32c:	nop

000000000040a330 <__libc_start_main@plt>:
  40a330:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a334:	ldr	x17, [x16, #272]
  40a338:	add	x16, x16, #0x110
  40a33c:	br	x17

000000000040a340 <abort@plt>:
  40a340:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a344:	ldr	x17, [x16, #280]
  40a348:	add	x16, x16, #0x118
  40a34c:	br	x17

000000000040a350 <__gmon_start__@plt>:
  40a350:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a354:	ldr	x17, [x16, #288]
  40a358:	add	x16, x16, #0x120
  40a35c:	br	x17

000000000040a360 <ask_password_agent_close@plt>:
  40a360:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a364:	ldr	x17, [x16, #296]
  40a368:	add	x16, x16, #0x128
  40a36c:	br	x17

000000000040a370 <polkit_agent_close@plt>:
  40a370:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a374:	ldr	x17, [x16, #304]
  40a378:	add	x16, x16, #0x130
  40a37c:	br	x17

000000000040a380 <pager_close@plt>:
  40a380:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a384:	ldr	x17, [x16, #312]
  40a388:	add	x16, x16, #0x138
  40a38c:	br	x17

000000000040a390 <mac_selinux_finish@plt>:
  40a390:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a394:	ldr	x17, [x16, #320]
  40a398:	add	x16, x16, #0x140
  40a39c:	br	x17

000000000040a3a0 <log_set_target@plt>:
  40a3a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3a4:	ldr	x17, [x16, #328]
  40a3a8:	add	x16, x16, #0x148
  40a3ac:	br	x17

000000000040a3b0 <log_open@plt>:
  40a3b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3b4:	ldr	x17, [x16, #336]
  40a3b8:	add	x16, x16, #0x150
  40a3bc:	br	x17

000000000040a3c0 <udev_parse_config_full@plt>:
  40a3c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3c4:	ldr	x17, [x16, #344]
  40a3c8:	add	x16, x16, #0x158
  40a3cc:	br	x17

000000000040a3d0 <log_parse_environment_realm@plt>:
  40a3d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3d4:	ldr	x17, [x16, #352]
  40a3d8:	add	x16, x16, #0x160
  40a3dc:	br	x17

000000000040a3e0 <proc_cmdline_parse@plt>:
  40a3e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3e4:	ldr	x17, [x16, #360]
  40a3e8:	add	x16, x16, #0x168
  40a3ec:	br	x17

000000000040a3f0 <log_get_max_level_realm@plt>:
  40a3f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a3f4:	ldr	x17, [x16, #368]
  40a3f8:	add	x16, x16, #0x170
  40a3fc:	br	x17

000000000040a400 <log_internal_realm@plt>:
  40a400:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a404:	ldr	x17, [x16, #376]
  40a408:	add	x16, x16, #0x178
  40a40c:	br	x17

000000000040a410 <abs@plt>:
  40a410:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a414:	ldr	x17, [x16, #384]
  40a418:	add	x16, x16, #0x180
  40a41c:	br	x17

000000000040a420 <log_set_max_level_realm@plt>:
  40a420:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a424:	ldr	x17, [x16, #392]
  40a428:	add	x16, x16, #0x188
  40a42c:	br	x17

000000000040a430 <must_be_root@plt>:
  40a430:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a434:	ldr	x17, [x16, #400]
  40a438:	add	x16, x16, #0x190
  40a43c:	br	x17

000000000040a440 <sched_getaffinity@plt>:
  40a440:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a444:	ldr	x17, [x16, #408]
  40a448:	add	x16, x16, #0x198
  40a44c:	br	x17

000000000040a450 <__sched_cpucount@plt>:
  40a450:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a454:	ldr	x17, [x16, #416]
  40a458:	add	x16, x16, #0x1a0
  40a45c:	br	x17

000000000040a460 <physical_memory@plt>:
  40a460:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a464:	ldr	x17, [x16, #424]
  40a468:	add	x16, x16, #0x1a8
  40a46c:	br	x17

000000000040a470 <chdir@plt>:
  40a470:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a474:	ldr	x17, [x16, #432]
  40a478:	add	x16, x16, #0x1b0
  40a47c:	br	x17

000000000040a480 <__errno_location@plt>:
  40a480:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a484:	ldr	x17, [x16, #440]
  40a488:	add	x16, x16, #0x1b8
  40a48c:	br	x17

000000000040a490 <umask@plt>:
  40a490:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a494:	ldr	x17, [x16, #448]
  40a498:	add	x16, x16, #0x1c0
  40a49c:	br	x17

000000000040a4a0 <mac_selinux_init@plt>:
  40a4a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4a4:	ldr	x17, [x16, #456]
  40a4a8:	add	x16, x16, #0x1c8
  40a4ac:	br	x17

000000000040a4b0 <mkdir_errno_wrapper@plt>:
  40a4b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4b4:	ldr	x17, [x16, #464]
  40a4b8:	add	x16, x16, #0x1d0
  40a4bc:	br	x17

000000000040a4c0 <dev_setup@plt>:
  40a4c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4c4:	ldr	x17, [x16, #472]
  40a4c8:	add	x16, x16, #0x1d8
  40a4cc:	br	x17

000000000040a4d0 <getppid@plt>:
  40a4d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4d4:	ldr	x17, [x16, #480]
  40a4d8:	add	x16, x16, #0x1e0
  40a4dc:	br	x17

000000000040a4e0 <sd_booted@plt>:
  40a4e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4e4:	ldr	x17, [x16, #488]
  40a4e8:	add	x16, x16, #0x1e8
  40a4ec:	br	x17

000000000040a4f0 <cg_pid_get_path@plt>:
  40a4f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a4f4:	ldr	x17, [x16, #496]
  40a4f8:	add	x16, x16, #0x1f0
  40a4fc:	br	x17

000000000040a500 <fork@plt>:
  40a500:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a504:	ldr	x17, [x16, #504]
  40a508:	add	x16, x16, #0x1f8
  40a50c:	br	x17

000000000040a510 <setsid@plt>:
  40a510:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a514:	ldr	x17, [x16, #512]
  40a518:	add	x16, x16, #0x200
  40a51c:	br	x17

000000000040a520 <set_oom_score_adjust@plt>:
  40a520:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a524:	ldr	x17, [x16, #520]
  40a528:	add	x16, x16, #0x208
  40a52c:	br	x17

000000000040a530 <free@plt>:
  40a530:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a534:	ldr	x17, [x16, #528]
  40a538:	add	x16, x16, #0x210
  40a53c:	br	x17

000000000040a540 <log_assert_failed_realm@plt>:
  40a540:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a544:	ldr	x17, [x16, #536]
  40a548:	add	x16, x16, #0x218
  40a54c:	br	x17

000000000040a550 <getopt_long@plt>:
  40a550:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a554:	ldr	x17, [x16, #544]
  40a558:	add	x16, x16, #0x220
  40a55c:	br	x17

000000000040a560 <parse_sec@plt>:
  40a560:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a564:	ldr	x17, [x16, #552]
  40a568:	add	x16, x16, #0x228
  40a56c:	br	x17

000000000040a570 <resolve_name_timing_from_string@plt>:
  40a570:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a574:	ldr	x17, [x16, #560]
  40a578:	add	x16, x16, #0x230
  40a57c:	br	x17

000000000040a580 <printf@plt>:
  40a580:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a584:	ldr	x17, [x16, #568]
  40a588:	add	x16, x16, #0x238
  40a58c:	br	x17

000000000040a590 <log_assert_failed_unreachable_realm@plt>:
  40a590:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a594:	ldr	x17, [x16, #576]
  40a598:	add	x16, x16, #0x240
  40a59c:	br	x17

000000000040a5a0 <proc_cmdline_key_streq@plt>:
  40a5a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5a4:	ldr	x17, [x16, #584]
  40a5a8:	add	x16, x16, #0x248
  40a5ac:	br	x17

000000000040a5b0 <log_level_from_string@plt>:
  40a5b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5b4:	ldr	x17, [x16, #592]
  40a5b8:	add	x16, x16, #0x250
  40a5bc:	br	x17

000000000040a5c0 <sd_listen_fds@plt>:
  40a5c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5c4:	ldr	x17, [x16, #600]
  40a5c8:	add	x16, x16, #0x258
  40a5cc:	br	x17

000000000040a5d0 <sd_is_socket@plt>:
  40a5d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5d4:	ldr	x17, [x16, #608]
  40a5d8:	add	x16, x16, #0x260
  40a5dc:	br	x17

000000000040a5e0 <log_oom_internal@plt>:
  40a5e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5e4:	ldr	x17, [x16, #616]
  40a5e8:	add	x16, x16, #0x268
  40a5ec:	br	x17

000000000040a5f0 <memset@plt>:
  40a5f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a5f4:	ldr	x17, [x16, #624]
  40a5f8:	add	x16, x16, #0x270
  40a5fc:	br	x17

000000000040a600 <memcpy@plt>:
  40a600:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a604:	ldr	x17, [x16, #632]
  40a608:	add	x16, x16, #0x278
  40a60c:	br	x17

000000000040a610 <device_monitor_new_full@plt>:
  40a610:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a614:	ldr	x17, [x16, #640]
  40a618:	add	x16, x16, #0x280
  40a61c:	br	x17

000000000040a620 <sd_device_monitor_set_receive_buffer_size@plt>:
  40a620:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a624:	ldr	x17, [x16, #648]
  40a628:	add	x16, x16, #0x288
  40a62c:	br	x17

000000000040a630 <device_monitor_enable_receiving@plt>:
  40a630:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a634:	ldr	x17, [x16, #656]
  40a638:	add	x16, x16, #0x290
  40a63c:	br	x17

000000000040a640 <rearrange_stdio@plt>:
  40a640:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a644:	ldr	x17, [x16, #664]
  40a648:	add	x16, x16, #0x298
  40a64c:	br	x17

000000000040a650 <getpid_cached@plt>:
  40a650:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a654:	ldr	x17, [x16, #672]
  40a658:	add	x16, x16, #0x2a0
  40a65c:	br	x17

000000000040a660 <socketpair@plt>:
  40a660:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a664:	ldr	x17, [x16, #680]
  40a668:	add	x16, x16, #0x2a8
  40a66c:	br	x17

000000000040a670 <sigprocmask_many@plt>:
  40a670:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a674:	ldr	x17, [x16, #688]
  40a678:	add	x16, x16, #0x2b0
  40a67c:	br	x17

000000000040a680 <sd_event_default@plt>:
  40a680:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a684:	ldr	x17, [x16, #696]
  40a688:	add	x16, x16, #0x2b8
  40a68c:	br	x17

000000000040a690 <sd_event_add_signal@plt>:
  40a690:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a694:	ldr	x17, [x16, #704]
  40a698:	add	x16, x16, #0x2c0
  40a69c:	br	x17

000000000040a6a0 <sd_event_set_watchdog@plt>:
  40a6a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6a4:	ldr	x17, [x16, #712]
  40a6a8:	add	x16, x16, #0x2c8
  40a6ac:	br	x17

000000000040a6b0 <sd_event_source_set_priority@plt>:
  40a6b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6b4:	ldr	x17, [x16, #720]
  40a6b8:	add	x16, x16, #0x2d0
  40a6bc:	br	x17

000000000040a6c0 <sd_event_add_io@plt>:
  40a6c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6c4:	ldr	x17, [x16, #728]
  40a6c8:	add	x16, x16, #0x2d8
  40a6cc:	br	x17

000000000040a6d0 <sd_device_monitor_attach_event@plt>:
  40a6d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6d4:	ldr	x17, [x16, #736]
  40a6d8:	add	x16, x16, #0x2e0
  40a6dc:	br	x17

000000000040a6e0 <sd_device_monitor_start@plt>:
  40a6e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6e4:	ldr	x17, [x16, #744]
  40a6e8:	add	x16, x16, #0x2e8
  40a6ec:	br	x17

000000000040a6f0 <sd_device_monitor_get_event_source@plt>:
  40a6f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a6f4:	ldr	x17, [x16, #752]
  40a6f8:	add	x16, x16, #0x2f0
  40a6fc:	br	x17

000000000040a700 <sd_event_source_set_description@plt>:
  40a700:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a704:	ldr	x17, [x16, #760]
  40a708:	add	x16, x16, #0x2f8
  40a70c:	br	x17

000000000040a710 <sd_event_add_post@plt>:
  40a710:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a714:	ldr	x17, [x16, #768]
  40a718:	add	x16, x16, #0x300
  40a71c:	br	x17

000000000040a720 <sd_notifyf@plt>:
  40a720:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a724:	ldr	x17, [x16, #776]
  40a728:	add	x16, x16, #0x308
  40a72c:	br	x17

000000000040a730 <sd_event_loop@plt>:
  40a730:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a734:	ldr	x17, [x16, #784]
  40a738:	add	x16, x16, #0x310
  40a73c:	br	x17

000000000040a740 <sd_notify@plt>:
  40a740:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a744:	ldr	x17, [x16, #792]
  40a748:	add	x16, x16, #0x318
  40a74c:	br	x17

000000000040a750 <sd_netlink_unref@plt>:
  40a750:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a754:	ldr	x17, [x16, #800]
  40a758:	add	x16, x16, #0x320
  40a75c:	br	x17

000000000040a760 <safe_close@plt>:
  40a760:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a764:	ldr	x17, [x16, #808]
  40a768:	add	x16, x16, #0x328
  40a76c:	br	x17

000000000040a770 <safe_close_pair@plt>:
  40a770:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a774:	ldr	x17, [x16, #816]
  40a778:	add	x16, x16, #0x330
  40a77c:	br	x17

000000000040a780 <sd_event_source_unref@plt>:
  40a780:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a784:	ldr	x17, [x16, #824]
  40a788:	add	x16, x16, #0x338
  40a78c:	br	x17

000000000040a790 <sd_event_unref@plt>:
  40a790:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a794:	ldr	x17, [x16, #832]
  40a798:	add	x16, x16, #0x340
  40a79c:	br	x17

000000000040a7a0 <sd_device_monitor_unref@plt>:
  40a7a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7a4:	ldr	x17, [x16, #840]
  40a7a8:	add	x16, x16, #0x348
  40a7ac:	br	x17

000000000040a7b0 <internal_hashmap_free@plt>:
  40a7b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7b4:	ldr	x17, [x16, #848]
  40a7b8:	add	x16, x16, #0x350
  40a7bc:	br	x17

000000000040a7c0 <sd_device_unref@plt>:
  40a7c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7c4:	ldr	x17, [x16, #856]
  40a7c8:	add	x16, x16, #0x358
  40a7cc:	br	x17

000000000040a7d0 <unlink@plt>:
  40a7d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7d4:	ldr	x17, [x16, #864]
  40a7d8:	add	x16, x16, #0x360
  40a7dc:	br	x17

000000000040a7e0 <safe_atou_full@plt>:
  40a7e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7e4:	ldr	x17, [x16, #872]
  40a7e8:	add	x16, x16, #0x368
  40a7ec:	br	x17

000000000040a7f0 <terminal_urlify_man@plt>:
  40a7f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a7f4:	ldr	x17, [x16, #880]
  40a7f8:	add	x16, x16, #0x370
  40a7fc:	br	x17

000000000040a800 <strlen@plt>:
  40a800:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a804:	ldr	x17, [x16, #888]
  40a808:	add	x16, x16, #0x378
  40a80c:	br	x17

000000000040a810 <strncmp@plt>:
  40a810:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a814:	ldr	x17, [x16, #896]
  40a818:	add	x16, x16, #0x380
  40a81c:	br	x17

000000000040a820 <malloc@plt>:
  40a820:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a824:	ldr	x17, [x16, #904]
  40a828:	add	x16, x16, #0x388
  40a82c:	br	x17

000000000040a830 <setsockopt@plt>:
  40a830:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a834:	ldr	x17, [x16, #912]
  40a838:	add	x16, x16, #0x390
  40a83c:	br	x17

000000000040a840 <waitpid@plt>:
  40a840:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a844:	ldr	x17, [x16, #920]
  40a848:	add	x16, x16, #0x398
  40a84c:	br	x17

000000000040a850 <signal_to_string@plt>:
  40a850:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a854:	ldr	x17, [x16, #928]
  40a858:	add	x16, x16, #0x3a0
  40a85c:	br	x17

000000000040a860 <sd_device_get_sysname@plt>:
  40a860:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a864:	ldr	x17, [x16, #936]
  40a868:	add	x16, x16, #0x3a8
  40a86c:	br	x17

000000000040a870 <log_object_internal@plt>:
  40a870:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a874:	ldr	x17, [x16, #944]
  40a878:	add	x16, x16, #0x3b0
  40a87c:	br	x17

000000000040a880 <device_delete_db@plt>:
  40a880:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a884:	ldr	x17, [x16, #952]
  40a888:	add	x16, x16, #0x3b8
  40a88c:	br	x17

000000000040a890 <device_tag_index@plt>:
  40a890:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a894:	ldr	x17, [x16, #960]
  40a898:	add	x16, x16, #0x3c0
  40a89c:	br	x17

000000000040a8a0 <device_monitor_send_device@plt>:
  40a8a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8a4:	ldr	x17, [x16, #968]
  40a8a8:	add	x16, x16, #0x3c8
  40a8ac:	br	x17

000000000040a8b0 <event_source_disable@plt>:
  40a8b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8b4:	ldr	x17, [x16, #976]
  40a8b8:	add	x16, x16, #0x3d0
  40a8bc:	br	x17

000000000040a8c0 <strchr@plt>:
  40a8c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8c4:	ldr	x17, [x16, #984]
  40a8c8:	add	x16, x16, #0x3d8
  40a8cc:	br	x17

000000000040a8d0 <strndup@plt>:
  40a8d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8d4:	ldr	x17, [x16, #992]
  40a8d8:	add	x16, x16, #0x3e0
  40a8dc:	br	x17

000000000040a8e0 <hashmap_remove2@plt>:
  40a8e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8e4:	ldr	x17, [x16, #1000]
  40a8e8:	add	x16, x16, #0x3e8
  40a8ec:	br	x17

000000000040a8f0 <internal_hashmap_ensure_allocated@plt>:
  40a8f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a8f4:	ldr	x17, [x16, #1008]
  40a8f8:	add	x16, x16, #0x3f0
  40a8fc:	br	x17

000000000040a900 <hashmap_put@plt>:
  40a900:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a904:	ldr	x17, [x16, #1016]
  40a908:	add	x16, x16, #0x3f8
  40a90c:	br	x17

000000000040a910 <strdup@plt>:
  40a910:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a914:	ldr	x17, [x16, #1024]
  40a918:	add	x16, x16, #0x400
  40a91c:	br	x17

000000000040a920 <read@plt>:
  40a920:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a924:	ldr	x17, [x16, #1032]
  40a928:	add	x16, x16, #0x408
  40a92c:	br	x17

000000000040a930 <sd_device_get_devname@plt>:
  40a930:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a934:	ldr	x17, [x16, #1040]
  40a938:	add	x16, x16, #0x410
  40a93c:	br	x17

000000000040a940 <device_ensure_usec_initialized@plt>:
  40a940:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a944:	ldr	x17, [x16, #1048]
  40a948:	add	x16, x16, #0x418
  40a94c:	br	x17

000000000040a950 <recvmsg@plt>:
  40a950:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a954:	ldr	x17, [x16, #1056]
  40a958:	add	x16, x16, #0x420
  40a95c:	br	x17

000000000040a960 <__cmsg_nxthdr@plt>:
  40a960:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a964:	ldr	x17, [x16, #1064]
  40a968:	add	x16, x16, #0x428
  40a96c:	br	x17

000000000040a970 <now@plt>:
  40a970:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a974:	ldr	x17, [x16, #1072]
  40a978:	add	x16, x16, #0x430
  40a97c:	br	x17

000000000040a980 <event_reset_time@plt>:
  40a980:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a984:	ldr	x17, [x16, #1080]
  40a988:	add	x16, x16, #0x438
  40a98c:	br	x17

000000000040a990 <sd_event_exit@plt>:
  40a990:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a994:	ldr	x17, [x16, #1088]
  40a998:	add	x16, x16, #0x440
  40a99c:	br	x17

000000000040a9a0 <cg_kill@plt>:
  40a9a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9a4:	ldr	x17, [x16, #1096]
  40a9a8:	add	x16, x16, #0x448
  40a9ac:	br	x17

000000000040a9b0 <kill@plt>:
  40a9b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9b4:	ldr	x17, [x16, #1104]
  40a9b8:	add	x16, x16, #0x450
  40a9bc:	br	x17

000000000040a9c0 <internal_hashmap_iterate@plt>:
  40a9c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9c4:	ldr	x17, [x16, #1112]
  40a9c8:	add	x16, x16, #0x458
  40a9cc:	br	x17

000000000040a9d0 <internal_hashmap_get@plt>:
  40a9d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9d4:	ldr	x17, [x16, #1120]
  40a9d8:	add	x16, x16, #0x460
  40a9dc:	br	x17

000000000040a9e0 <sd_event_now@plt>:
  40a9e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9e4:	ldr	x17, [x16, #1128]
  40a9e8:	add	x16, x16, #0x468
  40a9ec:	br	x17

000000000040a9f0 <internal_hashmap_remove@plt>:
  40a9f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40a9f4:	ldr	x17, [x16, #1136]
  40a9f8:	add	x16, x16, #0x470
  40a9fc:	br	x17

000000000040aa00 <gnu_dev_makedev@plt>:
  40aa00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa04:	ldr	x17, [x16, #1144]
  40aa08:	add	x16, x16, #0x478
  40aa0c:	br	x17

000000000040aa10 <sd_device_get_subsystem@plt>:
  40aa10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa14:	ldr	x17, [x16, #1152]
  40aa18:	add	x16, x16, #0x480
  40aa1c:	br	x17

000000000040aa20 <strcmp@plt>:
  40aa20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa24:	ldr	x17, [x16, #1160]
  40aa28:	add	x16, x16, #0x488
  40aa2c:	br	x17

000000000040aa30 <sd_device_get_devpath@plt>:
  40aa30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa34:	ldr	x17, [x16, #1168]
  40aa38:	add	x16, x16, #0x490
  40aa3c:	br	x17

000000000040aa40 <sd_device_get_property_value@plt>:
  40aa40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa44:	ldr	x17, [x16, #1176]
  40aa48:	add	x16, x16, #0x498
  40aa4c:	br	x17

000000000040aa50 <sd_device_get_devnum@plt>:
  40aa50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa54:	ldr	x17, [x16, #1184]
  40aa58:	add	x16, x16, #0x4a0
  40aa5c:	br	x17

000000000040aa60 <sd_device_get_ifindex@plt>:
  40aa60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa64:	ldr	x17, [x16, #1192]
  40aa68:	add	x16, x16, #0x4a8
  40aa6c:	br	x17

000000000040aa70 <gnu_dev_major@plt>:
  40aa70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa74:	ldr	x17, [x16, #1200]
  40aa78:	add	x16, x16, #0x4b0
  40aa7c:	br	x17

000000000040aa80 <sd_event_add_time@plt>:
  40aa80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa84:	ldr	x17, [x16, #1208]
  40aa88:	add	x16, x16, #0x4b8
  40aa8c:	br	x17

000000000040aa90 <internal_hashmap_size@plt>:
  40aa90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aa94:	ldr	x17, [x16, #1216]
  40aa98:	add	x16, x16, #0x4c0
  40aa9c:	br	x17

000000000040aaa0 <device_monitor_allow_unicast_sender@plt>:
  40aaa0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aaa4:	ldr	x17, [x16, #1224]
  40aaa8:	add	x16, x16, #0x4c8
  40aaac:	br	x17

000000000040aab0 <sd_device_ref@plt>:
  40aab0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aab4:	ldr	x17, [x16, #1232]
  40aab8:	add	x16, x16, #0x4d0
  40aabc:	br	x17

000000000040aac0 <log_close@plt>:
  40aac0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aac4:	ldr	x17, [x16, #1240]
  40aac8:	add	x16, x16, #0x4d8
  40aacc:	br	x17

000000000040aad0 <_exit@plt>:
  40aad0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aad4:	ldr	x17, [x16, #1248]
  40aad8:	add	x16, x16, #0x4e0
  40aadc:	br	x17

000000000040aae0 <kill_and_sigcont@plt>:
  40aae0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aae4:	ldr	x17, [x16, #1256]
  40aae8:	add	x16, x16, #0x4e8
  40aaec:	br	x17

000000000040aaf0 <safe_fork_full@plt>:
  40aaf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aaf4:	ldr	x17, [x16, #1264]
  40aaf8:	add	x16, x16, #0x4f0
  40aafc:	br	x17

000000000040ab00 <unsetenv@plt>:
  40ab00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab04:	ldr	x17, [x16, #1272]
  40ab08:	add	x16, x16, #0x4f8
  40ab0c:	br	x17

000000000040ab10 <sd_event_new@plt>:
  40ab10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab14:	ldr	x17, [x16, #1280]
  40ab18:	add	x16, x16, #0x500
  40ab1c:	br	x17

000000000040ab20 <device_monitor_disconnect@plt>:
  40ab20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab24:	ldr	x17, [x16, #1288]
  40ab28:	add	x16, x16, #0x508
  40ab2c:	br	x17

000000000040ab30 <sd_device_monitor_ref@plt>:
  40ab30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab34:	ldr	x17, [x16, #1296]
  40ab38:	add	x16, x16, #0x510
  40ab3c:	br	x17

000000000040ab40 <device_get_seqnum@plt>:
  40ab40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab44:	ldr	x17, [x16, #1304]
  40ab48:	add	x16, x16, #0x518
  40ab4c:	br	x17

000000000040ab50 <device_get_action@plt>:
  40ab50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab54:	ldr	x17, [x16, #1312]
  40ab58:	add	x16, x16, #0x520
  40ab5c:	br	x17

000000000040ab60 <device_action_to_string@plt>:
  40ab60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab64:	ldr	x17, [x16, #1320]
  40ab68:	add	x16, x16, #0x528
  40ab6c:	br	x17

000000000040ab70 <sd_netlink_ref@plt>:
  40ab70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab74:	ldr	x17, [x16, #1328]
  40ab78:	add	x16, x16, #0x530
  40ab7c:	br	x17

000000000040ab80 <device_update_db@plt>:
  40ab80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab84:	ldr	x17, [x16, #1336]
  40ab88:	add	x16, x16, #0x538
  40ab8c:	br	x17

000000000040ab90 <loop_write@plt>:
  40ab90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ab94:	ldr	x17, [x16, #1344]
  40ab98:	add	x16, x16, #0x540
  40ab9c:	br	x17

000000000040aba0 <device_for_action@plt>:
  40aba0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aba4:	ldr	x17, [x16, #1352]
  40aba8:	add	x16, x16, #0x548
  40abac:	br	x17

000000000040abb0 <sd_device_get_devtype@plt>:
  40abb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40abb4:	ldr	x17, [x16, #1360]
  40abb8:	add	x16, x16, #0x550
  40abbc:	br	x17

000000000040abc0 <sd_device_get_parent@plt>:
  40abc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40abc4:	ldr	x17, [x16, #1368]
  40abc8:	add	x16, x16, #0x558
  40abcc:	br	x17

000000000040abd0 <open64@plt>:
  40abd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40abd4:	ldr	x17, [x16, #1376]
  40abd8:	add	x16, x16, #0x560
  40abdc:	br	x17

000000000040abe0 <flock@plt>:
  40abe0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40abe4:	ldr	x17, [x16, #1384]
  40abe8:	add	x16, x16, #0x568
  40abec:	br	x17

000000000040abf0 <sd_device_get_syspath@plt>:
  40abf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40abf4:	ldr	x17, [x16, #1392]
  40abf8:	add	x16, x16, #0x570
  40abfc:	br	x17

000000000040ac00 <ioctl@plt>:
  40ac00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac04:	ldr	x17, [x16, #1400]
  40ac08:	add	x16, x16, #0x578
  40ac0c:	br	x17

000000000040ac10 <close@plt>:
  40ac10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac14:	ldr	x17, [x16, #1408]
  40ac18:	add	x16, x16, #0x580
  40ac1c:	br	x17

000000000040ac20 <sd_device_enumerator_new@plt>:
  40ac20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac24:	ldr	x17, [x16, #1416]
  40ac28:	add	x16, x16, #0x588
  40ac2c:	br	x17

000000000040ac30 <sd_device_enumerator_allow_uninitialized@plt>:
  40ac30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac34:	ldr	x17, [x16, #1424]
  40ac38:	add	x16, x16, #0x590
  40ac3c:	br	x17

000000000040ac40 <sd_device_enumerator_add_match_parent@plt>:
  40ac40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac44:	ldr	x17, [x16, #1432]
  40ac48:	add	x16, x16, #0x598
  40ac4c:	br	x17

000000000040ac50 <sd_device_enumerator_add_match_subsystem@plt>:
  40ac50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac54:	ldr	x17, [x16, #1440]
  40ac58:	add	x16, x16, #0x5a0
  40ac5c:	br	x17

000000000040ac60 <sd_device_enumerator_get_device_first@plt>:
  40ac60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac64:	ldr	x17, [x16, #1448]
  40ac68:	add	x16, x16, #0x5a8
  40ac6c:	br	x17

000000000040ac70 <sd_device_enumerator_get_device_next@plt>:
  40ac70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac74:	ldr	x17, [x16, #1456]
  40ac78:	add	x16, x16, #0x5b0
  40ac7c:	br	x17

000000000040ac80 <strcmp_ptr@plt>:
  40ac80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac84:	ldr	x17, [x16, #1464]
  40ac88:	add	x16, x16, #0x5b8
  40ac8c:	br	x17

000000000040ac90 <sd_device_enumerator_unref@plt>:
  40ac90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ac94:	ldr	x17, [x16, #1472]
  40ac98:	add	x16, x16, #0x5c0
  40ac9c:	br	x17

000000000040aca0 <stpcpy@plt>:
  40aca0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aca4:	ldr	x17, [x16, #1480]
  40aca8:	add	x16, x16, #0x5c8
  40acac:	br	x17

000000000040acb0 <write_string_file_ts@plt>:
  40acb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40acb4:	ldr	x17, [x16, #1488]
  40acb8:	add	x16, x16, #0x5d0
  40acbc:	br	x17

000000000040acc0 <device_shallow_clone@plt>:
  40acc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40acc4:	ldr	x17, [x16, #1496]
  40acc8:	add	x16, x16, #0x5d8
  40accc:	br	x17

000000000040acd0 <device_copy_properties@plt>:
  40acd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40acd4:	ldr	x17, [x16, #1504]
  40acd8:	add	x16, x16, #0x5e0
  40acdc:	br	x17

000000000040ace0 <touch@plt>:
  40ace0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ace4:	ldr	x17, [x16, #1512]
  40ace8:	add	x16, x16, #0x5e8
  40acec:	br	x17

000000000040acf0 <trivial_hash_func@plt>:
  40acf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40acf4:	ldr	x17, [x16, #1520]
  40acf8:	add	x16, x16, #0x5f0
  40acfc:	br	x17

000000000040ad00 <trivial_compare_func@plt>:
  40ad00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad04:	ldr	x17, [x16, #1528]
  40ad08:	add	x16, x16, #0x5f8
  40ad0c:	br	x17

000000000040ad10 <socket@plt>:
  40ad10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad14:	ldr	x17, [x16, #1536]
  40ad18:	add	x16, x16, #0x600
  40ad1c:	br	x17

000000000040ad20 <strnlen@plt>:
  40ad20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad24:	ldr	x17, [x16, #1544]
  40ad28:	add	x16, x16, #0x608
  40ad2c:	br	x17

000000000040ad30 <bind@plt>:
  40ad30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad34:	ldr	x17, [x16, #1552]
  40ad38:	add	x16, x16, #0x610
  40ad3c:	br	x17

000000000040ad40 <sockaddr_un_unlink@plt>:
  40ad40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad44:	ldr	x17, [x16, #1560]
  40ad48:	add	x16, x16, #0x618
  40ad4c:	br	x17

000000000040ad50 <listen@plt>:
  40ad50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad54:	ldr	x17, [x16, #1568]
  40ad58:	add	x16, x16, #0x620
  40ad5c:	br	x17

000000000040ad60 <log_assert_failed_return_realm@plt>:
  40ad60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad64:	ldr	x17, [x16, #1576]
  40ad68:	add	x16, x16, #0x628
  40ad6c:	br	x17

000000000040ad70 <sd_event_ref@plt>:
  40ad70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad74:	ldr	x17, [x16, #1584]
  40ad78:	add	x16, x16, #0x630
  40ad7c:	br	x17

000000000040ad80 <accept4@plt>:
  40ad80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad84:	ldr	x17, [x16, #1592]
  40ad88:	add	x16, x16, #0x638
  40ad8c:	br	x17

000000000040ad90 <getpeercred@plt>:
  40ad90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ad94:	ldr	x17, [x16, #1600]
  40ad98:	add	x16, x16, #0x640
  40ad9c:	br	x17

000000000040ada0 <sd_event_source_set_enabled@plt>:
  40ada0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ada4:	ldr	x17, [x16, #1608]
  40ada8:	add	x16, x16, #0x648
  40adac:	br	x17

000000000040adb0 <strscpy@plt>:
  40adb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40adb4:	ldr	x17, [x16, #1616]
  40adb8:	add	x16, x16, #0x650
  40adbc:	br	x17

000000000040adc0 <connect@plt>:
  40adc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40adc4:	ldr	x17, [x16, #1624]
  40adc8:	add	x16, x16, #0x658
  40adcc:	br	x17

000000000040add0 <send@plt>:
  40add0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40add4:	ldr	x17, [x16, #1632]
  40add8:	add	x16, x16, #0x660
  40addc:	br	x17

000000000040ade0 <clock_boottime_or_monotonic@plt>:
  40ade0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ade4:	ldr	x17, [x16, #1640]
  40ade8:	add	x16, x16, #0x668
  40adec:	br	x17

000000000040adf0 <sd_event_source_get_event@plt>:
  40adf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40adf4:	ldr	x17, [x16, #1648]
  40adf8:	add	x16, x16, #0x670
  40adfc:	br	x17

000000000040ae00 <next_datagram_size_fd@plt>:
  40ae00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae04:	ldr	x17, [x16, #1656]
  40ae08:	add	x16, x16, #0x678
  40ae0c:	br	x17

000000000040ae10 <cmsg_close_all@plt>:
  40ae10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae14:	ldr	x17, [x16, #1664]
  40ae18:	add	x16, x16, #0x680
  40ae1c:	br	x17

000000000040ae20 <util_replace_whitespace@plt>:
  40ae20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae24:	ldr	x17, [x16, #1672]
  40ae28:	add	x16, x16, #0x688
  40ae2c:	br	x17

000000000040ae30 <strnscpy@plt>:
  40ae30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae34:	ldr	x17, [x16, #1680]
  40ae38:	add	x16, x16, #0x690
  40ae3c:	br	x17

000000000040ae40 <strpcpy@plt>:
  40ae40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae44:	ldr	x17, [x16, #1688]
  40ae48:	add	x16, x16, #0x698
  40ae4c:	br	x17

000000000040ae50 <sd_device_get_sysnum@plt>:
  40ae50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae54:	ldr	x17, [x16, #1696]
  40ae58:	add	x16, x16, #0x6a0
  40ae5c:	br	x17

000000000040ae60 <sd_device_get_driver@plt>:
  40ae60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae64:	ldr	x17, [x16, #1704]
  40ae68:	add	x16, x16, #0x6a8
  40ae6c:	br	x17

000000000040ae70 <gnu_dev_minor@plt>:
  40ae70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae74:	ldr	x17, [x16, #1712]
  40ae78:	add	x16, x16, #0x6b0
  40ae7c:	br	x17

000000000040ae80 <strpcpyf@plt>:
  40ae80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae84:	ldr	x17, [x16, #1720]
  40ae88:	add	x16, x16, #0x6b8
  40ae8c:	br	x17

000000000040ae90 <strnpcpy@plt>:
  40ae90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ae94:	ldr	x17, [x16, #1728]
  40ae98:	add	x16, x16, #0x6c0
  40ae9c:	br	x17

000000000040aea0 <util_resolve_subsys_kernel@plt>:
  40aea0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aea4:	ldr	x17, [x16, #1736]
  40aea8:	add	x16, x16, #0x6c8
  40aeac:	br	x17

000000000040aeb0 <sd_device_get_sysattr_value@plt>:
  40aeb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aeb4:	ldr	x17, [x16, #1744]
  40aeb8:	add	x16, x16, #0x6d0
  40aebc:	br	x17

000000000040aec0 <delete_trailing_chars@plt>:
  40aec0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aec4:	ldr	x17, [x16, #1752]
  40aec8:	add	x16, x16, #0x6d8
  40aecc:	br	x17

000000000040aed0 <util_replace_chars@plt>:
  40aed0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aed4:	ldr	x17, [x16, #1760]
  40aed8:	add	x16, x16, #0x6e0
  40aedc:	br	x17

000000000040aee0 <sd_device_get_devlink_first@plt>:
  40aee0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aee4:	ldr	x17, [x16, #1768]
  40aee8:	add	x16, x16, #0x6e8
  40aeec:	br	x17

000000000040aef0 <strpcpyl@plt>:
  40aef0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aef4:	ldr	x17, [x16, #1776]
  40aef8:	add	x16, x16, #0x6f0
  40aefc:	br	x17

000000000040af00 <sd_device_get_devlink_next@plt>:
  40af00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af04:	ldr	x17, [x16, #1784]
  40af08:	add	x16, x16, #0x6f8
  40af0c:	br	x17

000000000040af10 <endswith@plt>:
  40af10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af14:	ldr	x17, [x16, #1792]
  40af18:	add	x16, x16, #0x700
  40af1c:	br	x17

000000000040af20 <pipe2@plt>:
  40af20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af24:	ldr	x17, [x16, #1800]
  40af28:	add	x16, x16, #0x708
  40af2c:	br	x17

000000000040af30 <strv_split_full@plt>:
  40af30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af34:	ldr	x17, [x16, #1808]
  40af38:	add	x16, x16, #0x710
  40af3c:	br	x17

000000000040af40 <path_is_absolute@plt>:
  40af40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af44:	ldr	x17, [x16, #1816]
  40af48:	add	x16, x16, #0x718
  40af4c:	br	x17

000000000040af50 <path_join_internal@plt>:
  40af50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af54:	ldr	x17, [x16, #1824]
  40af58:	add	x16, x16, #0x720
  40af5c:	br	x17

000000000040af60 <device_get_properties_strv@plt>:
  40af60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af64:	ldr	x17, [x16, #1832]
  40af68:	add	x16, x16, #0x728
  40af6c:	br	x17

000000000040af70 <close_all_fds@plt>:
  40af70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af74:	ldr	x17, [x16, #1840]
  40af78:	add	x16, x16, #0x730
  40af7c:	br	x17

000000000040af80 <rlimit_nofile_safe@plt>:
  40af80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af84:	ldr	x17, [x16, #1848]
  40af88:	add	x16, x16, #0x738
  40af8c:	br	x17

000000000040af90 <execve@plt>:
  40af90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40af94:	ldr	x17, [x16, #1856]
  40af98:	add	x16, x16, #0x740
  40af9c:	br	x17

000000000040afa0 <strv_free@plt>:
  40afa0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40afa4:	ldr	x17, [x16, #1864]
  40afa8:	add	x16, x16, #0x748
  40afac:	br	x17

000000000040afb0 <sd_event_add_child@plt>:
  40afb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40afb4:	ldr	x17, [x16, #1872]
  40afb8:	add	x16, x16, #0x750
  40afbc:	br	x17

000000000040afc0 <device_clone_with_db@plt>:
  40afc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40afc4:	ldr	x17, [x16, #1880]
  40afc8:	add	x16, x16, #0x758
  40afcc:	br	x17

000000000040afd0 <device_set_is_initialized@plt>:
  40afd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40afd4:	ldr	x17, [x16, #1888]
  40afd8:	add	x16, x16, #0x760
  40afdc:	br	x17

000000000040afe0 <device_read_db_internal@plt>:
  40afe0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40afe4:	ldr	x17, [x16, #1896]
  40afe8:	add	x16, x16, #0x768
  40afec:	br	x17

000000000040aff0 <device_add_property@plt>:
  40aff0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40aff4:	ldr	x17, [x16, #1904]
  40aff8:	add	x16, x16, #0x770
  40affc:	br	x17

000000000040b000 <rtnl_set_link_name@plt>:
  40b000:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b004:	ldr	x17, [x16, #1912]
  40b008:	add	x16, x16, #0x778
  40b00c:	br	x17

000000000040b010 <device_rename@plt>:
  40b010:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b014:	ldr	x17, [x16, #1920]
  40b018:	add	x16, x16, #0x780
  40b01c:	br	x17

000000000040b020 <uid_is_valid@plt>:
  40b020:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b024:	ldr	x17, [x16, #1928]
  40b028:	add	x16, x16, #0x788
  40b02c:	br	x17

000000000040b030 <device_get_devnode_uid@plt>:
  40b030:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b034:	ldr	x17, [x16, #1936]
  40b038:	add	x16, x16, #0x790
  40b03c:	br	x17

000000000040b040 <device_get_devnode_gid@plt>:
  40b040:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b044:	ldr	x17, [x16, #1944]
  40b048:	add	x16, x16, #0x798
  40b04c:	br	x17

000000000040b050 <device_get_devnode_mode@plt>:
  40b050:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b054:	ldr	x17, [x16, #1952]
  40b058:	add	x16, x16, #0x7a0
  40b05c:	br	x17

000000000040b060 <format_timespan@plt>:
  40b060:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b064:	ldr	x17, [x16, #1960]
  40b068:	add	x16, x16, #0x7a8
  40b06c:	br	x17

000000000040b070 <usleep@plt>:
  40b070:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b074:	ldr	x17, [x16, #1968]
  40b078:	add	x16, x16, #0x7b0
  40b07c:	br	x17

000000000040b080 <strspn@plt>:
  40b080:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b084:	ldr	x17, [x16, #1976]
  40b088:	add	x16, x16, #0x7b8
  40b08c:	br	x17

000000000040b090 <strv_split_newlines@plt>:
  40b090:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b094:	ldr	x17, [x16, #1984]
  40b098:	add	x16, x16, #0x7c0
  40b09c:	br	x17

000000000040b0a0 <device_get_id_filename@plt>:
  40b0a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0a4:	ldr	x17, [x16, #1992]
  40b0a8:	add	x16, x16, #0x7c8
  40b0ac:	br	x17

000000000040b0b0 <util_path_encode@plt>:
  40b0b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0b4:	ldr	x17, [x16, #2000]
  40b0b8:	add	x16, x16, #0x7d0
  40b0bc:	br	x17

000000000040b0c0 <rmdir@plt>:
  40b0c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0c4:	ldr	x17, [x16, #2008]
  40b0c8:	add	x16, x16, #0x7d8
  40b0cc:	br	x17

000000000040b0d0 <rmdir_parents@plt>:
  40b0d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0d4:	ldr	x17, [x16, #2016]
  40b0d8:	add	x16, x16, #0x7e0
  40b0dc:	br	x17

000000000040b0e0 <mkdir_parents@plt>:
  40b0e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0e4:	ldr	x17, [x16, #2024]
  40b0e8:	add	x16, x16, #0x7e8
  40b0ec:	br	x17

000000000040b0f0 <chmod_and_chown@plt>:
  40b0f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b0f4:	ldr	x17, [x16, #2032]
  40b0f8:	add	x16, x16, #0x7f0
  40b0fc:	br	x17

000000000040b100 <mac_selinux_apply@plt>:
  40b100:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b104:	ldr	x17, [x16, #2040]
  40b108:	add	x16, x16, #0x7f8
  40b10c:	br	x17

000000000040b110 <mac_smack_apply@plt>:
  40b110:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b114:	ldr	x17, [x16, #2048]
  40b118:	add	x16, x16, #0x800
  40b11c:	br	x17

000000000040b120 <mac_selinux_fix@plt>:
  40b120:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b124:	ldr	x17, [x16, #2056]
  40b128:	add	x16, x16, #0x808
  40b12c:	br	x17

000000000040b130 <utimensat@plt>:
  40b130:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b134:	ldr	x17, [x16, #2064]
  40b138:	add	x16, x16, #0x810
  40b13c:	br	x17

000000000040b140 <snprintf@plt>:
  40b140:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b144:	ldr	x17, [x16, #2072]
  40b148:	add	x16, x16, #0x818
  40b14c:	br	x17

000000000040b150 <dirname_malloc@plt>:
  40b150:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b154:	ldr	x17, [x16, #2080]
  40b158:	add	x16, x16, #0x820
  40b15c:	br	x17

000000000040b160 <path_make_relative@plt>:
  40b160:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b164:	ldr	x17, [x16, #2088]
  40b168:	add	x16, x16, #0x828
  40b16c:	br	x17

000000000040b170 <readlink_malloc@plt>:
  40b170:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b174:	ldr	x17, [x16, #2096]
  40b178:	add	x16, x16, #0x830
  40b17c:	br	x17

000000000040b180 <label_fix@plt>:
  40b180:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b184:	ldr	x17, [x16, #2104]
  40b188:	add	x16, x16, #0x838
  40b18c:	br	x17

000000000040b190 <mkdir_parents_label@plt>:
  40b190:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b194:	ldr	x17, [x16, #2112]
  40b198:	add	x16, x16, #0x840
  40b19c:	br	x17

000000000040b1a0 <mac_selinux_create_file_prepare@plt>:
  40b1a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1a4:	ldr	x17, [x16, #2120]
  40b1a8:	add	x16, x16, #0x848
  40b1ac:	br	x17

000000000040b1b0 <symlink@plt>:
  40b1b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1b4:	ldr	x17, [x16, #2128]
  40b1b8:	add	x16, x16, #0x850
  40b1bc:	br	x17

000000000040b1c0 <mac_selinux_create_file_clear@plt>:
  40b1c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1c4:	ldr	x17, [x16, #2136]
  40b1c8:	add	x16, x16, #0x858
  40b1cc:	br	x17

000000000040b1d0 <rename@plt>:
  40b1d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1d4:	ldr	x17, [x16, #2144]
  40b1d8:	add	x16, x16, #0x860
  40b1dc:	br	x17

000000000040b1e0 <device_get_devlink_priority@plt>:
  40b1e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1e4:	ldr	x17, [x16, #2152]
  40b1e8:	add	x16, x16, #0x868
  40b1ec:	br	x17

000000000040b1f0 <opendir@plt>:
  40b1f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b1f4:	ldr	x17, [x16, #2160]
  40b1f8:	add	x16, x16, #0x870
  40b1fc:	br	x17

000000000040b200 <readdir64@plt>:
  40b200:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b204:	ldr	x17, [x16, #2168]
  40b208:	add	x16, x16, #0x878
  40b20c:	br	x17

000000000040b210 <sd_device_new_from_device_id@plt>:
  40b210:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b214:	ldr	x17, [x16, #2176]
  40b218:	add	x16, x16, #0x880
  40b21c:	br	x17

000000000040b220 <free_and_strdup@plt>:
  40b220:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b224:	ldr	x17, [x16, #2184]
  40b228:	add	x16, x16, #0x888
  40b22c:	br	x17

000000000040b230 <closedir@plt>:
  40b230:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b234:	ldr	x17, [x16, #2192]
  40b238:	add	x16, x16, #0x890
  40b23c:	br	x17

000000000040b240 <conf_files_list_strv@plt>:
  40b240:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b244:	ldr	x17, [x16, #2200]
  40b248:	add	x16, x16, #0x898
  40b24c:	br	x17

000000000040b250 <paths_check_timestamp@plt>:
  40b250:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b254:	ldr	x17, [x16, #2208]
  40b258:	add	x16, x16, #0x8a0
  40b25c:	br	x17

000000000040b260 <fopen64@plt>:
  40b260:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b264:	ldr	x17, [x16, #2216]
  40b268:	add	x16, x16, #0x8a8
  40b26c:	br	x17

000000000040b270 <fileno@plt>:
  40b270:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b274:	ldr	x17, [x16, #2224]
  40b278:	add	x16, x16, #0x8b0
  40b27c:	br	x17

000000000040b280 <fd_warn_permissions@plt>:
  40b280:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b284:	ldr	x17, [x16, #2232]
  40b288:	add	x16, x16, #0x8b8
  40b28c:	br	x17

000000000040b290 <null_or_empty_fd@plt>:
  40b290:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b294:	ldr	x17, [x16, #2240]
  40b298:	add	x16, x16, #0x8c0
  40b29c:	br	x17

000000000040b2a0 <strextend_with_separator@plt>:
  40b2a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2a4:	ldr	x17, [x16, #2248]
  40b2a8:	add	x16, x16, #0x8c8
  40b2ac:	br	x17

000000000040b2b0 <strv_extend@plt>:
  40b2b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2b4:	ldr	x17, [x16, #2256]
  40b2b8:	add	x16, x16, #0x8d0
  40b2bc:	br	x17

000000000040b2c0 <safe_fclose@plt>:
  40b2c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2c4:	ldr	x17, [x16, #2264]
  40b2c8:	add	x16, x16, #0x8d8
  40b2cc:	br	x17

000000000040b2d0 <read_line_full@plt>:
  40b2d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2d4:	ldr	x17, [x16, #2272]
  40b2d8:	add	x16, x16, #0x8e0
  40b2dc:	br	x17

000000000040b2e0 <strv_find@plt>:
  40b2e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2e4:	ldr	x17, [x16, #2280]
  40b2e8:	add	x16, x16, #0x8e8
  40b2ec:	br	x17

000000000040b2f0 <strstr@plt>:
  40b2f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b2f4:	ldr	x17, [x16, #2288]
  40b2f8:	add	x16, x16, #0x8f0
  40b2fc:	br	x17

000000000040b300 <parse_mode@plt>:
  40b300:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b304:	ldr	x17, [x16, #2296]
  40b308:	add	x16, x16, #0x8f8
  40b30c:	br	x17

000000000040b310 <safe_atoi@plt>:
  40b310:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b314:	ldr	x17, [x16, #2304]
  40b318:	add	x16, x16, #0x900
  40b31c:	br	x17

000000000040b320 <parse_uid@plt>:
  40b320:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b324:	ldr	x17, [x16, #2312]
  40b328:	add	x16, x16, #0x908
  40b32c:	br	x17

000000000040b330 <__ctype_b_loc@plt>:
  40b330:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b334:	ldr	x17, [x16, #2320]
  40b338:	add	x16, x16, #0x910
  40b33c:	br	x17

000000000040b340 <get_user_creds@plt>:
  40b340:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b344:	ldr	x17, [x16, #2328]
  40b348:	add	x16, x16, #0x918
  40b34c:	br	x17

000000000040b350 <get_group_creds@plt>:
  40b350:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b354:	ldr	x17, [x16, #2336]
  40b358:	add	x16, x16, #0x920
  40b35c:	br	x17

000000000040b360 <strpbrk@plt>:
  40b360:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b364:	ldr	x17, [x16, #2344]
  40b368:	add	x16, x16, #0x928
  40b36c:	br	x17

000000000040b370 <uname_architecture@plt>:
  40b370:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b374:	ldr	x17, [x16, #2352]
  40b378:	add	x16, x16, #0x930
  40b37c:	br	x17

000000000040b380 <architecture_to_string@plt>:
  40b380:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b384:	ldr	x17, [x16, #2360]
  40b388:	add	x16, x16, #0x938
  40b38c:	br	x17

000000000040b390 <detect_virtualization@plt>:
  40b390:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b394:	ldr	x17, [x16, #2368]
  40b398:	add	x16, x16, #0x940
  40b39c:	br	x17

000000000040b3a0 <virtualization_to_string@plt>:
  40b3a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3a4:	ldr	x17, [x16, #2376]
  40b3a8:	add	x16, x16, #0x948
  40b3ac:	br	x17

000000000040b3b0 <sd_device_get_tag_first@plt>:
  40b3b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3b4:	ldr	x17, [x16, #2384]
  40b3b8:	add	x16, x16, #0x950
  40b3bc:	br	x17

000000000040b3c0 <sd_device_get_tag_next@plt>:
  40b3c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3c4:	ldr	x17, [x16, #2392]
  40b3c8:	add	x16, x16, #0x958
  40b3cc:	br	x17

000000000040b3d0 <sysctl_normalize@plt>:
  40b3d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3d4:	ldr	x17, [x16, #2400]
  40b3d8:	add	x16, x16, #0x960
  40b3dc:	br	x17

000000000040b3e0 <sysctl_read@plt>:
  40b3e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3e4:	ldr	x17, [x16, #2408]
  40b3e8:	add	x16, x16, #0x968
  40b3ec:	br	x17

000000000040b3f0 <strstrip@plt>:
  40b3f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b3f4:	ldr	x17, [x16, #2416]
  40b3f8:	add	x16, x16, #0x970
  40b3fc:	br	x17

000000000040b400 <strscpyl@plt>:
  40b400:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b404:	ldr	x17, [x16, #2424]
  40b408:	add	x16, x16, #0x978
  40b40c:	br	x17

000000000040b410 <proc_cmdline_get_key@plt>:
  40b410:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b414:	ldr	x17, [x16, #2432]
  40b418:	add	x16, x16, #0x980
  40b41c:	br	x17

000000000040b420 <device_set_db_persist@plt>:
  40b420:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b424:	ldr	x17, [x16, #2440]
  40b428:	add	x16, x16, #0x988
  40b42c:	br	x17

000000000040b430 <device_set_devlink_priority@plt>:
  40b430:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b434:	ldr	x17, [x16, #2448]
  40b438:	add	x16, x16, #0x990
  40b43c:	br	x17

000000000040b440 <internal_ordered_hashmap_ensure_allocated@plt>:
  40b440:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b444:	ldr	x17, [x16, #2456]
  40b448:	add	x16, x16, #0x998
  40b44c:	br	x17

000000000040b450 <device_cleanup_tags@plt>:
  40b450:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b454:	ldr	x17, [x16, #2464]
  40b458:	add	x16, x16, #0x9a0
  40b45c:	br	x17

000000000040b460 <device_remove_tag@plt>:
  40b460:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b464:	ldr	x17, [x16, #2472]
  40b468:	add	x16, x16, #0x9a8
  40b46c:	br	x17

000000000040b470 <device_add_tag@plt>:
  40b470:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b474:	ldr	x17, [x16, #2480]
  40b478:	add	x16, x16, #0x9b0
  40b47c:	br	x17

000000000040b480 <device_cleanup_devlinks@plt>:
  40b480:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b484:	ldr	x17, [x16, #2488]
  40b488:	add	x16, x16, #0x9b8
  40b48c:	br	x17

000000000040b490 <device_add_devlink@plt>:
  40b490:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b494:	ldr	x17, [x16, #2496]
  40b498:	add	x16, x16, #0x9c0
  40b49c:	br	x17

000000000040b4a0 <sysctl_write@plt>:
  40b4a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4a4:	ldr	x17, [x16, #2504]
  40b4a8:	add	x16, x16, #0x9c8
  40b4ac:	br	x17

000000000040b4b0 <fnmatch@plt>:
  40b4b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4b4:	ldr	x17, [x16, #2512]
  40b4b8:	add	x16, x16, #0x9d0
  40b4bc:	br	x17

000000000040b4c0 <dirfd@plt>:
  40b4c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4c4:	ldr	x17, [x16, #2520]
  40b4c8:	add	x16, x16, #0x9d8
  40b4cc:	br	x17

000000000040b4d0 <faccessat@plt>:
  40b4d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4d4:	ldr	x17, [x16, #2528]
  40b4d8:	add	x16, x16, #0x9e0
  40b4dc:	br	x17

000000000040b4e0 <strcpy@plt>:
  40b4e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4e4:	ldr	x17, [x16, #2536]
  40b4e8:	add	x16, x16, #0x9e8
  40b4ec:	br	x17

000000000040b4f0 <sd_device_get_property_first@plt>:
  40b4f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b4f4:	ldr	x17, [x16, #2544]
  40b4f8:	add	x16, x16, #0x9f0
  40b4fc:	br	x17

000000000040b500 <sd_device_get_property_next@plt>:
  40b500:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b504:	ldr	x17, [x16, #2552]
  40b508:	add	x16, x16, #0x9f8
  40b50c:	br	x17

000000000040b510 <internal_hashmap_clear@plt>:
  40b510:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b514:	ldr	x17, [x16, #2560]
  40b518:	add	x16, x16, #0xa00
  40b51c:	br	x17

000000000040b520 <mkdir_p@plt>:
  40b520:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b524:	ldr	x17, [x16, #2568]
  40b528:	add	x16, x16, #0xa08
  40b52c:	br	x17

000000000040b530 <xescape_full@plt>:
  40b530:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b534:	ldr	x17, [x16, #2576]
  40b538:	add	x16, x16, #0xa10
  40b53c:	br	x17

000000000040b540 <inotify_init1@plt>:
  40b540:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b544:	ldr	x17, [x16, #2584]
  40b548:	add	x16, x16, #0xa18
  40b54c:	br	x17

000000000040b550 <readlinkat_malloc@plt>:
  40b550:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b554:	ldr	x17, [x16, #2592]
  40b558:	add	x16, x16, #0xa20
  40b55c:	br	x17

000000000040b560 <unlinkat@plt>:
  40b560:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b564:	ldr	x17, [x16, #2600]
  40b568:	add	x16, x16, #0xa28
  40b56c:	br	x17

000000000040b570 <inotify_add_watch@plt>:
  40b570:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b574:	ldr	x17, [x16, #2608]
  40b578:	add	x16, x16, #0xa30
  40b57c:	br	x17

000000000040b580 <device_set_watch_handle@plt>:
  40b580:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b584:	ldr	x17, [x16, #2616]
  40b588:	add	x16, x16, #0xa38
  40b58c:	br	x17

000000000040b590 <device_get_watch_handle@plt>:
  40b590:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b594:	ldr	x17, [x16, #2624]
  40b598:	add	x16, x16, #0xa40
  40b59c:	br	x17

000000000040b5a0 <inotify_rm_watch@plt>:
  40b5a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5a4:	ldr	x17, [x16, #2632]
  40b5a8:	add	x16, x16, #0xa48
  40b5ac:	br	x17

000000000040b5b0 <fprintf@plt>:
  40b5b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5b4:	ldr	x17, [x16, #2640]
  40b5b8:	add	x16, x16, #0xa50
  40b5bc:	br	x17

000000000040b5c0 <strcspn@plt>:
  40b5c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5c4:	ldr	x17, [x16, #2648]
  40b5c8:	add	x16, x16, #0xa58
  40b5cc:	br	x17

000000000040b5d0 <strv_length@plt>:
  40b5d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5d4:	ldr	x17, [x16, #2656]
  40b5d8:	add	x16, x16, #0xa60
  40b5dc:	br	x17

000000000040b5e0 <strjoin_real@plt>:
  40b5e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5e4:	ldr	x17, [x16, #2664]
  40b5e8:	add	x16, x16, #0xa68
  40b5ec:	br	x17

000000000040b5f0 <sd_hwdb_seek@plt>:
  40b5f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b5f4:	ldr	x17, [x16, #2672]
  40b5f8:	add	x16, x16, #0xa70
  40b5fc:	br	x17

000000000040b600 <sd_hwdb_enumerate@plt>:
  40b600:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b604:	ldr	x17, [x16, #2680]
  40b608:	add	x16, x16, #0xa78
  40b60c:	br	x17

000000000040b610 <sd_hwdb_new@plt>:
  40b610:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b614:	ldr	x17, [x16, #2688]
  40b618:	add	x16, x16, #0xa80
  40b61c:	br	x17

000000000040b620 <sd_hwdb_unref@plt>:
  40b620:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b624:	ldr	x17, [x16, #2696]
  40b628:	add	x16, x16, #0xa88
  40b62c:	br	x17

000000000040b630 <hwdb_validate@plt>:
  40b630:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b634:	ldr	x17, [x16, #2704]
  40b638:	add	x16, x16, #0xa90
  40b63c:	br	x17

000000000040b640 <safe_atou16_full@plt>:
  40b640:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b644:	ldr	x17, [x16, #2712]
  40b648:	add	x16, x16, #0xa98
  40b64c:	br	x17

000000000040b650 <sd_device_get_parent_with_subsystem_devtype@plt>:
  40b650:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b654:	ldr	x17, [x16, #2720]
  40b658:	add	x16, x16, #0xaa0
  40b65c:	br	x17

000000000040b660 <strrchr@plt>:
  40b660:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b664:	ldr	x17, [x16, #2728]
  40b668:	add	x16, x16, #0xaa8
  40b66c:	br	x17

000000000040b670 <strtoul@plt>:
  40b670:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b674:	ldr	x17, [x16, #2736]
  40b678:	add	x16, x16, #0xab0
  40b67c:	br	x17

000000000040b680 <sd_device_set_sysattr_value@plt>:
  40b680:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b684:	ldr	x17, [x16, #2744]
  40b688:	add	x16, x16, #0xab8
  40b68c:	br	x17

000000000040b690 <strtol@plt>:
  40b690:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b694:	ldr	x17, [x16, #2752]
  40b698:	add	x16, x16, #0xac0
  40b69c:	br	x17

000000000040b6a0 <__isoc99_sscanf@plt>:
  40b6a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6a4:	ldr	x17, [x16, #2760]
  40b6a8:	add	x16, x16, #0xac8
  40b6ac:	br	x17

000000000040b6b0 <memcmp@plt>:
  40b6b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6b4:	ldr	x17, [x16, #2768]
  40b6b8:	add	x16, x16, #0xad0
  40b6bc:	br	x17

000000000040b6c0 <ascii_strlower@plt>:
  40b6c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6c4:	ldr	x17, [x16, #2776]
  40b6c8:	add	x16, x16, #0xad8
  40b6cc:	br	x17

000000000040b6d0 <chase_symlinks@plt>:
  40b6d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6d4:	ldr	x17, [x16, #2784]
  40b6d8:	add	x16, x16, #0xae0
  40b6dc:	br	x17

000000000040b6e0 <sd_device_new_from_syspath@plt>:
  40b6e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6e4:	ldr	x17, [x16, #2792]
  40b6e8:	add	x16, x16, #0xae8
  40b6ec:	br	x17

000000000040b6f0 <strncpy@plt>:
  40b6f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b6f4:	ldr	x17, [x16, #2800]
  40b6f8:	add	x16, x16, #0xaf0
  40b6fc:	br	x17

000000000040b700 <sd_device_new_from_subsystem_sysname@plt>:
  40b700:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b704:	ldr	x17, [x16, #2808]
  40b708:	add	x16, x16, #0xaf8
  40b70c:	br	x17

000000000040b710 <read_one_line_file@plt>:
  40b710:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b714:	ldr	x17, [x16, #2816]
  40b718:	add	x16, x16, #0xb00
  40b71c:	br	x17

000000000040b720 <rewinddir@plt>:
  40b720:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b724:	ldr	x17, [x16, #2824]
  40b728:	add	x16, x16, #0xb08
  40b72c:	br	x17

000000000040b730 <safe_atollu@plt>:
  40b730:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b734:	ldr	x17, [x16, #2832]
  40b738:	add	x16, x16, #0xb10
  40b73c:	br	x17

000000000040b740 <vasprintf@plt>:
  40b740:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b744:	ldr	x17, [x16, #2840]
  40b748:	add	x16, x16, #0xb18
  40b74c:	br	x17

000000000040b750 <exit@plt>:
  40b750:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b754:	ldr	x17, [x16, #2848]
  40b758:	add	x16, x16, #0xb20
  40b75c:	br	x17

000000000040b760 <udev_util_encode_string@plt>:
  40b760:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b764:	ldr	x17, [x16, #2856]
  40b768:	add	x16, x16, #0xb28
  40b76c:	br	x17

000000000040b770 <sprintf@plt>:
  40b770:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b774:	ldr	x17, [x16, #2864]
  40b778:	add	x16, x16, #0xb30
  40b77c:	br	x17

000000000040b780 <calloc@plt>:
  40b780:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b784:	ldr	x17, [x16, #2872]
  40b788:	add	x16, x16, #0xb38
  40b78c:	br	x17

000000000040b790 <config_parse@plt>:
  40b790:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b794:	ldr	x17, [x16, #2880]
  40b798:	add	x16, x16, #0xb40
  40b79c:	br	x17

000000000040b7a0 <condition_test_list@plt>:
  40b7a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7a4:	ldr	x17, [x16, #2888]
  40b7a8:	add	x16, x16, #0xb48
  40b7ac:	br	x17

000000000040b7b0 <proc_cmdline_get_bool@plt>:
  40b7b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7b4:	ldr	x17, [x16, #2896]
  40b7b8:	add	x16, x16, #0xb50
  40b7bc:	br	x17

000000000040b7c0 <ethtool_set_glinksettings@plt>:
  40b7c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7c4:	ldr	x17, [x16, #2904]
  40b7c8:	add	x16, x16, #0xb58
  40b7cc:	br	x17

000000000040b7d0 <port_to_string@plt>:
  40b7d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7d4:	ldr	x17, [x16, #2912]
  40b7d8:	add	x16, x16, #0xb60
  40b7dc:	br	x17

000000000040b7e0 <memeqzero@plt>:
  40b7e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7e4:	ldr	x17, [x16, #2920]
  40b7e8:	add	x16, x16, #0xb68
  40b7ec:	br	x17

000000000040b7f0 <ethtool_set_speed@plt>:
  40b7f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b7f4:	ldr	x17, [x16, #2928]
  40b7f8:	add	x16, x16, #0xb70
  40b7fc:	br	x17

000000000040b800 <duplex_to_string@plt>:
  40b800:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b804:	ldr	x17, [x16, #2936]
  40b808:	add	x16, x16, #0xb78
  40b80c:	br	x17

000000000040b810 <ethtool_set_wol@plt>:
  40b810:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b814:	ldr	x17, [x16, #2944]
  40b818:	add	x16, x16, #0xb80
  40b81c:	br	x17

000000000040b820 <wol_to_string@plt>:
  40b820:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b824:	ldr	x17, [x16, #2952]
  40b828:	add	x16, x16, #0xb88
  40b82c:	br	x17

000000000040b830 <ethtool_set_features@plt>:
  40b830:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b834:	ldr	x17, [x16, #2960]
  40b838:	add	x16, x16, #0xb90
  40b83c:	br	x17

000000000040b840 <ethtool_set_channels@plt>:
  40b840:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b844:	ldr	x17, [x16, #2968]
  40b848:	add	x16, x16, #0xb98
  40b84c:	br	x17

000000000040b850 <ethtool_set_nic_buffer_size@plt>:
  40b850:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b854:	ldr	x17, [x16, #2976]
  40b858:	add	x16, x16, #0xba0
  40b85c:	br	x17

000000000040b860 <rtnl_set_link_properties@plt>:
  40b860:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b864:	ldr	x17, [x16, #2984]
  40b868:	add	x16, x16, #0xba8
  40b86c:	br	x17

000000000040b870 <random_bytes@plt>:
  40b870:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b874:	ldr	x17, [x16, #2992]
  40b878:	add	x16, x16, #0xbb0
  40b87c:	br	x17

000000000040b880 <ethtool_get_driver@plt>:
  40b880:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b884:	ldr	x17, [x16, #3000]
  40b888:	add	x16, x16, #0xbb8
  40b88c:	br	x17

000000000040b890 <string_table_lookup@plt>:
  40b890:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b894:	ldr	x17, [x16, #3008]
  40b898:	add	x16, x16, #0xbc0
  40b89c:	br	x17

000000000040b8a0 <log_syntax_internal@plt>:
  40b8a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8a4:	ldr	x17, [x16, #3016]
  40b8a8:	add	x16, x16, #0xbc8
  40b8ac:	br	x17

000000000040b8b0 <split@plt>:
  40b8b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8b4:	ldr	x17, [x16, #3024]
  40b8b8:	add	x16, x16, #0xbd0
  40b8bc:	br	x17

000000000040b8c0 <realloc@plt>:
  40b8c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8c4:	ldr	x17, [x16, #3032]
  40b8c8:	add	x16, x16, #0xbd8
  40b8cc:	br	x17

000000000040b8d0 <condition_free_list_type@plt>:
  40b8d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8d4:	ldr	x17, [x16, #3040]
  40b8d8:	add	x16, x16, #0xbe0
  40b8dc:	br	x17

000000000040b8e0 <getenv@plt>:
  40b8e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8e4:	ldr	x17, [x16, #3048]
  40b8e8:	add	x16, x16, #0xbe8
  40b8ec:	br	x17

000000000040b8f0 <module_load_and_warn@plt>:
  40b8f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b8f4:	ldr	x17, [x16, #3056]
  40b8f8:	add	x16, x16, #0xbf0
  40b8fc:	br	x17

000000000040b900 <kmod_new@plt>:
  40b900:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b904:	ldr	x17, [x16, #3064]
  40b908:	add	x16, x16, #0xbf8
  40b90c:	br	x17

000000000040b910 <kmod_set_log_fn@plt>:
  40b910:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b914:	ldr	x17, [x16, #3072]
  40b918:	add	x16, x16, #0xc00
  40b91c:	br	x17

000000000040b920 <kmod_load_resources@plt>:
  40b920:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b924:	ldr	x17, [x16, #3080]
  40b928:	add	x16, x16, #0xc08
  40b92c:	br	x17

000000000040b930 <kmod_unref@plt>:
  40b930:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b934:	ldr	x17, [x16, #3088]
  40b938:	add	x16, x16, #0xc10
  40b93c:	br	x17

000000000040b940 <kmod_validate_resources@plt>:
  40b940:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b944:	ldr	x17, [x16, #3096]
  40b948:	add	x16, x16, #0xc18
  40b94c:	br	x17

000000000040b950 <log_internalv_realm@plt>:
  40b950:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b954:	ldr	x17, [x16, #3104]
  40b958:	add	x16, x16, #0xc20
  40b95c:	br	x17

000000000040b960 <blkid_new_probe@plt>:
  40b960:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b964:	ldr	x17, [x16, #3112]
  40b968:	add	x16, x16, #0xc28
  40b96c:	br	x17

000000000040b970 <blkid_probe_set_superblocks_flags@plt>:
  40b970:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b974:	ldr	x17, [x16, #3120]
  40b978:	add	x16, x16, #0xc30
  40b97c:	br	x17

000000000040b980 <blkid_probe_filter_superblocks_usage@plt>:
  40b980:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b984:	ldr	x17, [x16, #3128]
  40b988:	add	x16, x16, #0xc38
  40b98c:	br	x17

000000000040b990 <blkid_probe_set_device@plt>:
  40b990:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b994:	ldr	x17, [x16, #3136]
  40b998:	add	x16, x16, #0xc40
  40b99c:	br	x17

000000000040b9a0 <blkid_probe_numof_values@plt>:
  40b9a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9a4:	ldr	x17, [x16, #3144]
  40b9a8:	add	x16, x16, #0xc48
  40b9ac:	br	x17

000000000040b9b0 <blkid_probe_get_value@plt>:
  40b9b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9b4:	ldr	x17, [x16, #3152]
  40b9b8:	add	x16, x16, #0xc50
  40b9bc:	br	x17

000000000040b9c0 <blkid_free_probe@plt>:
  40b9c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9c4:	ldr	x17, [x16, #3160]
  40b9c8:	add	x16, x16, #0xc58
  40b9cc:	br	x17

000000000040b9d0 <safe_atolli@plt>:
  40b9d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9d4:	ldr	x17, [x16, #3168]
  40b9d8:	add	x16, x16, #0xc60
  40b9dc:	br	x17

000000000040b9e0 <blkid_probe_get_fd@plt>:
  40b9e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9e4:	ldr	x17, [x16, #3176]
  40b9e8:	add	x16, x16, #0xc68
  40b9ec:	br	x17

000000000040b9f0 <blkid_probe_enable_partitions@plt>:
  40b9f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40b9f4:	ldr	x17, [x16, #3184]
  40b9f8:	add	x16, x16, #0xc70
  40b9fc:	br	x17

000000000040ba00 <blkid_probe_get_size@plt>:
  40ba00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba04:	ldr	x17, [x16, #3192]
  40ba08:	add	x16, x16, #0xc78
  40ba0c:	br	x17

000000000040ba10 <blkid_probe_is_wholedisk@plt>:
  40ba10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba14:	ldr	x17, [x16, #3200]
  40ba18:	add	x16, x16, #0xc80
  40ba1c:	br	x17

000000000040ba20 <blkid_probe_enable_superblocks@plt>:
  40ba20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba24:	ldr	x17, [x16, #3208]
  40ba28:	add	x16, x16, #0xc88
  40ba2c:	br	x17

000000000040ba30 <blkid_do_fullprobe@plt>:
  40ba30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba34:	ldr	x17, [x16, #3216]
  40ba38:	add	x16, x16, #0xc90
  40ba3c:	br	x17

000000000040ba40 <blkid_probe_lookup_value@plt>:
  40ba40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba44:	ldr	x17, [x16, #3224]
  40ba48:	add	x16, x16, #0xc98
  40ba4c:	br	x17

000000000040ba50 <blkid_probe_set_partitions_flags@plt>:
  40ba50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba54:	ldr	x17, [x16, #3232]
  40ba58:	add	x16, x16, #0xca0
  40ba5c:	br	x17

000000000040ba60 <blkid_do_safeprobe@plt>:
  40ba60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba64:	ldr	x17, [x16, #3240]
  40ba68:	add	x16, x16, #0xca8
  40ba6c:	br	x17

000000000040ba70 <blkid_safe_string@plt>:
  40ba70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba74:	ldr	x17, [x16, #3248]
  40ba78:	add	x16, x16, #0xcb0
  40ba7c:	br	x17

000000000040ba80 <blkid_encode_string@plt>:
  40ba80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba84:	ldr	x17, [x16, #3256]
  40ba88:	add	x16, x16, #0xcb8
  40ba8c:	br	x17

000000000040ba90 <blkid_probe_get_partitions@plt>:
  40ba90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40ba94:	ldr	x17, [x16, #3264]
  40ba98:	add	x16, x16, #0xcc0
  40ba9c:	br	x17

000000000040baa0 <blkid_partlist_numof_partitions@plt>:
  40baa0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40baa4:	ldr	x17, [x16, #3272]
  40baa8:	add	x16, x16, #0xcc8
  40baac:	br	x17

000000000040bab0 <blkid_partlist_get_partition@plt>:
  40bab0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bab4:	ldr	x17, [x16, #3280]
  40bab8:	add	x16, x16, #0xcd0
  40babc:	br	x17

000000000040bac0 <blkid_partition_get_uuid@plt>:
  40bac0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bac4:	ldr	x17, [x16, #3288]
  40bac8:	add	x16, x16, #0xcd8
  40bacc:	br	x17

000000000040bad0 <blkid_partition_get_type_string@plt>:
  40bad0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bad4:	ldr	x17, [x16, #3296]
  40bad8:	add	x16, x16, #0xce0
  40badc:	br	x17

000000000040bae0 <sd_id128_from_string@plt>:
  40bae0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bae4:	ldr	x17, [x16, #3304]
  40bae8:	add	x16, x16, #0xce8
  40baec:	br	x17

000000000040baf0 <efi_loader_get_device_part_uuid@plt>:
  40baf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40baf4:	ldr	x17, [x16, #3312]
  40baf8:	add	x16, x16, #0xcf0
  40bafc:	br	x17

000000000040bb00 <blkid_partition_get_flags@plt>:
  40bb00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb04:	ldr	x17, [x16, #3320]
  40bb08:	add	x16, x16, #0xcf8
  40bb0c:	br	x17

000000000040bb10 <access@plt>:
  40bb10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb14:	ldr	x17, [x16, #3328]
  40bb18:	add	x16, x16, #0xd00
  40bb1c:	br	x17

000000000040bb20 <acl_get_file@plt>:
  40bb20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb24:	ldr	x17, [x16, #3336]
  40bb28:	add	x16, x16, #0xd08
  40bb2c:	br	x17

000000000040bb30 <acl_find_uid@plt>:
  40bb30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb34:	ldr	x17, [x16, #3344]
  40bb38:	add	x16, x16, #0xd10
  40bb3c:	br	x17

000000000040bb40 <acl_delete_entry@plt>:
  40bb40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb44:	ldr	x17, [x16, #3352]
  40bb48:	add	x16, x16, #0xd18
  40bb4c:	br	x17

000000000040bb50 <acl_create_entry@plt>:
  40bb50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb54:	ldr	x17, [x16, #3360]
  40bb58:	add	x16, x16, #0xd20
  40bb5c:	br	x17

000000000040bb60 <acl_set_tag_type@plt>:
  40bb60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb64:	ldr	x17, [x16, #3368]
  40bb68:	add	x16, x16, #0xd28
  40bb6c:	br	x17

000000000040bb70 <acl_set_qualifier@plt>:
  40bb70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb74:	ldr	x17, [x16, #3376]
  40bb78:	add	x16, x16, #0xd30
  40bb7c:	br	x17

000000000040bb80 <acl_get_permset@plt>:
  40bb80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb84:	ldr	x17, [x16, #3384]
  40bb88:	add	x16, x16, #0xd38
  40bb8c:	br	x17

000000000040bb90 <acl_get_perm@plt>:
  40bb90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bb94:	ldr	x17, [x16, #3392]
  40bb98:	add	x16, x16, #0xd40
  40bb9c:	br	x17

000000000040bba0 <acl_add_perm@plt>:
  40bba0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bba4:	ldr	x17, [x16, #3400]
  40bba8:	add	x16, x16, #0xd48
  40bbac:	br	x17

000000000040bbb0 <acl_calc_mask@plt>:
  40bbb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bbb4:	ldr	x17, [x16, #3408]
  40bbb8:	add	x16, x16, #0xd50
  40bbbc:	br	x17

000000000040bbc0 <acl_set_file@plt>:
  40bbc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bbc4:	ldr	x17, [x16, #3416]
  40bbc8:	add	x16, x16, #0xd58
  40bbcc:	br	x17

000000000040bbd0 <acl_free@plt>:
  40bbd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bbd4:	ldr	x17, [x16, #3424]
  40bbd8:	add	x16, x16, #0xd60
  40bbdc:	br	x17

000000000040bbe0 <acl_get_entry@plt>:
  40bbe0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bbe4:	ldr	x17, [x16, #3432]
  40bbe8:	add	x16, x16, #0xd68
  40bbec:	br	x17

000000000040bbf0 <acl_get_tag_type@plt>:
  40bbf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bbf4:	ldr	x17, [x16, #3440]
  40bbf8:	add	x16, x16, #0xd70
  40bbfc:	br	x17

000000000040bc00 <internal_set_new@plt>:
  40bc00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc04:	ldr	x17, [x16, #3448]
  40bc08:	add	x16, x16, #0xd78
  40bc0c:	br	x17

000000000040bc10 <sd_device_enumerator_add_match_tag@plt>:
  40bc10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc14:	ldr	x17, [x16, #3456]
  40bc18:	add	x16, x16, #0xd80
  40bc1c:	br	x17

000000000040bc20 <set_put_strdup@plt>:
  40bc20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc24:	ldr	x17, [x16, #3464]
  40bc28:	add	x16, x16, #0xd88
  40bc2c:	br	x17

000000000040bc30 <hidden_or_backup_file@plt>:
  40bc30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc34:	ldr	x17, [x16, #3472]
  40bc38:	add	x16, x16, #0xd90
  40bc3c:	br	x17

000000000040bc40 <cunescape@plt>:
  40bc40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc44:	ldr	x17, [x16, #3480]
  40bc48:	add	x16, x16, #0xd98
  40bc4c:	br	x17

000000000040bc50 <set_consume@plt>:
  40bc50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc54:	ldr	x17, [x16, #3488]
  40bc58:	add	x16, x16, #0xda0
  40bc5c:	br	x17

000000000040bc60 <set_iterate@plt>:
  40bc60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc64:	ldr	x17, [x16, #3496]
  40bc68:	add	x16, x16, #0xda8
  40bc6c:	br	x17

000000000040bc70 <cg_pid_get_session@plt>:
  40bc70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc74:	ldr	x17, [x16, #3504]
  40bc78:	add	x16, x16, #0xdb0
  40bc7c:	br	x17

000000000040bc80 <cg_pid_get_unit@plt>:
  40bc80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc84:	ldr	x17, [x16, #3512]
  40bc88:	add	x16, x16, #0xdb8
  40bc8c:	br	x17

000000000040bc90 <cg_pid_get_user_unit@plt>:
  40bc90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bc94:	ldr	x17, [x16, #3520]
  40bc98:	add	x16, x16, #0xdc0
  40bc9c:	br	x17

000000000040bca0 <cg_pid_get_machine_name@plt>:
  40bca0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bca4:	ldr	x17, [x16, #3528]
  40bca8:	add	x16, x16, #0xdc8
  40bcac:	br	x17

000000000040bcb0 <cg_pid_get_slice@plt>:
  40bcb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bcb4:	ldr	x17, [x16, #3536]
  40bcb8:	add	x16, x16, #0xdd0
  40bcbc:	br	x17

000000000040bcc0 <cg_pid_get_user_slice@plt>:
  40bcc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bcc4:	ldr	x17, [x16, #3544]
  40bcc8:	add	x16, x16, #0xdd8
  40bccc:	br	x17

000000000040bcd0 <cg_pid_get_owner_uid@plt>:
  40bcd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bcd4:	ldr	x17, [x16, #3552]
  40bcd8:	add	x16, x16, #0xde0
  40bcdc:	br	x17

000000000040bce0 <parse_env_file_sentinel@plt>:
  40bce0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bce4:	ldr	x17, [x16, #3560]
  40bce8:	add	x16, x16, #0xde8
  40bcec:	br	x17

000000000040bcf0 <asprintf@plt>:
  40bcf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bcf4:	ldr	x17, [x16, #3568]
  40bcf8:	add	x16, x16, #0xdf0
  40bcfc:	br	x17

000000000040bd00 <filename_is_valid@plt>:
  40bd00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd04:	ldr	x17, [x16, #3576]
  40bd08:	add	x16, x16, #0xdf8
  40bd0c:	br	x17

000000000040bd10 <strv_uniq@plt>:
  40bd10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd14:	ldr	x17, [x16, #3584]
  40bd18:	add	x16, x16, #0xe00
  40bd1c:	br	x17

000000000040bd20 <parse_boolean@plt>:
  40bd20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd24:	ldr	x17, [x16, #3592]
  40bd28:	add	x16, x16, #0xe08
  40bd2c:	br	x17

000000000040bd30 <session_id_valid@plt>:
  40bd30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd34:	ldr	x17, [x16, #3600]
  40bd38:	add	x16, x16, #0xe10
  40bd3c:	br	x17

000000000040bd40 <get_files_in_directory@plt>:
  40bd40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd44:	ldr	x17, [x16, #3608]
  40bd48:	add	x16, x16, #0xe18
  40bd4c:	br	x17

000000000040bd50 <dirent_ensure_type@plt>:
  40bd50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd54:	ldr	x17, [x16, #3616]
  40bd58:	add	x16, x16, #0xe20
  40bd5c:	br	x17

000000000040bd60 <dirent_is_file@plt>:
  40bd60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd64:	ldr	x17, [x16, #3624]
  40bd68:	add	x16, x16, #0xe28
  40bd6c:	br	x17

000000000040bd70 <reallocarray@plt>:
  40bd70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd74:	ldr	x17, [x16, #3632]
  40bd78:	add	x16, x16, #0xe30
  40bd7c:	br	x17

000000000040bd80 <hostname_is_valid@plt>:
  40bd80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd84:	ldr	x17, [x16, #3640]
  40bd88:	add	x16, x16, #0xe38
  40bd8c:	br	x17

000000000040bd90 <parse_ifindex@plt>:
  40bd90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bd94:	ldr	x17, [x16, #3648]
  40bd98:	add	x16, x16, #0xe40
  40bd9c:	br	x17

000000000040bda0 <greedy_realloc@plt>:
  40bda0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bda4:	ldr	x17, [x16, #3656]
  40bda8:	add	x16, x16, #0xe48
  40bdac:	br	x17

000000000040bdb0 <close_nointr@plt>:
  40bdb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bdb4:	ldr	x17, [x16, #3664]
  40bdb8:	add	x16, x16, #0xe50
  40bdbc:	br	x17

000000000040bdc0 <flush_fd@plt>:
  40bdc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bdc4:	ldr	x17, [x16, #3672]
  40bdc8:	add	x16, x16, #0xe58
  40bdcc:	br	x17

000000000040bdd0 <config_parse_mtu@plt>:
  40bdd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bdd4:	ldr	x17, [x16, #3680]
  40bdd8:	add	x16, x16, #0xe60
  40bddc:	br	x17

000000000040bde0 <config_parse_advertise@plt>:
  40bde0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bde4:	ldr	x17, [x16, #3688]
  40bde8:	add	x16, x16, #0xe68
  40bdec:	br	x17

000000000040bdf0 <config_parse_ifname@plt>:
  40bdf0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bdf4:	ldr	x17, [x16, #3696]
  40bdf8:	add	x16, x16, #0xe70
  40bdfc:	br	x17

000000000040be00 <config_parse_string@plt>:
  40be00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be04:	ldr	x17, [x16, #3704]
  40be08:	add	x16, x16, #0xe78
  40be0c:	br	x17

000000000040be10 <config_parse_tristate@plt>:
  40be10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be14:	ldr	x17, [x16, #3712]
  40be18:	add	x16, x16, #0xe80
  40be1c:	br	x17

000000000040be20 <config_parse_port@plt>:
  40be20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be24:	ldr	x17, [x16, #3720]
  40be28:	add	x16, x16, #0xe88
  40be2c:	br	x17

000000000040be30 <config_parse_channel@plt>:
  40be30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be34:	ldr	x17, [x16, #3728]
  40be38:	add	x16, x16, #0xe90
  40be3c:	br	x17

000000000040be40 <config_parse_nic_buffer_size@plt>:
  40be40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be44:	ldr	x17, [x16, #3736]
  40be48:	add	x16, x16, #0xe98
  40be4c:	br	x17

000000000040be50 <config_parse_duplex@plt>:
  40be50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be54:	ldr	x17, [x16, #3744]
  40be58:	add	x16, x16, #0xea0
  40be5c:	br	x17

000000000040be60 <config_parse_wol@plt>:
  40be60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be64:	ldr	x17, [x16, #3752]
  40be68:	add	x16, x16, #0xea8
  40be6c:	br	x17

000000000040be70 <config_parse_warn_compat@plt>:
  40be70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be74:	ldr	x17, [x16, #3760]
  40be78:	add	x16, x16, #0xeb0
  40be7c:	br	x17

000000000040be80 <config_parse_si_size@plt>:
  40be80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be84:	ldr	x17, [x16, #3768]
  40be88:	add	x16, x16, #0xeb8
  40be8c:	br	x17

000000000040be90 <sd_id128_get_machine@plt>:
  40be90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40be94:	ldr	x17, [x16, #3776]
  40be98:	add	x16, x16, #0xec0
  40be9c:	br	x17

000000000040bea0 <siphash24@plt>:
  40bea0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bea4:	ldr	x17, [x16, #3784]
  40bea8:	add	x16, x16, #0xec8
  40beac:	br	x17

000000000040beb0 <ether_aton@plt>:
  40beb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40beb4:	ldr	x17, [x16, #3792]
  40beb8:	add	x16, x16, #0xed0
  40bebc:	br	x17

000000000040bec0 <internal_hashmap_contains@plt>:
  40bec0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bec4:	ldr	x17, [x16, #3800]
  40bec8:	add	x16, x16, #0xed8
  40becc:	br	x17

000000000040bed0 <condition_new@plt>:
  40bed0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bed4:	ldr	x17, [x16, #3808]
  40bed8:	add	x16, x16, #0xee0
  40bedc:	br	x17

000000000040bee0 <extract_first_word@plt>:
  40bee0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bee4:	ldr	x17, [x16, #3816]
  40bee8:	add	x16, x16, #0xee8
  40beec:	br	x17

000000000040bef0 <strv_consume@plt>:
  40bef0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bef4:	ldr	x17, [x16, #3824]
  40bef8:	add	x16, x16, #0xef0
  40befc:	br	x17

000000000040bf00 <ifname_valid@plt>:
  40bf00:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf04:	ldr	x17, [x16, #3832]
  40bf08:	add	x16, x16, #0xef8
  40bf0c:	br	x17

000000000040bf10 <env_assignment_is_valid@plt>:
  40bf10:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf14:	ldr	x17, [x16, #3840]
  40bf18:	add	x16, x16, #0xf00
  40bf1c:	br	x17

000000000040bf20 <ascii_is_valid@plt>:
  40bf20:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf24:	ldr	x17, [x16, #3848]
  40bf28:	add	x16, x16, #0xf08
  40bf2c:	br	x17

000000000040bf30 <ether_addr_from_string@plt>:
  40bf30:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf34:	ldr	x17, [x16, #3856]
  40bf38:	add	x16, x16, #0xf10
  40bf3c:	br	x17

000000000040bf40 <set_put@plt>:
  40bf40:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf44:	ldr	x17, [x16, #3864]
  40bf48:	add	x16, x16, #0xf18
  40bf4c:	br	x17

000000000040bf50 <internal_set_ensure_allocated@plt>:
  40bf50:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf54:	ldr	x17, [x16, #3872]
  40bf58:	add	x16, x16, #0xf20
  40bf5c:	br	x17

000000000040bf60 <internal_hashmap_move@plt>:
  40bf60:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf64:	ldr	x17, [x16, #3880]
  40bf68:	add	x16, x16, #0xf28
  40bf6c:	br	x17

000000000040bf70 <fputc@plt>:
  40bf70:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf74:	ldr	x17, [x16, #3888]
  40bf78:	add	x16, x16, #0xf30
  40bf7c:	br	x17

000000000040bf80 <inet_ntop@plt>:
  40bf80:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf84:	ldr	x17, [x16, #3896]
  40bf88:	add	x16, x16, #0xf38
  40bf8c:	br	x17

000000000040bf90 <fputs@plt>:
  40bf90:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bf94:	ldr	x17, [x16, #3904]
  40bf98:	add	x16, x16, #0xf40
  40bf9c:	br	x17

000000000040bfa0 <inet_pton@plt>:
  40bfa0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bfa4:	ldr	x17, [x16, #3912]
  40bfa8:	add	x16, x16, #0xf48
  40bfac:	br	x17

000000000040bfb0 <inet_aton@plt>:
  40bfb0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bfb4:	ldr	x17, [x16, #3920]
  40bfb8:	add	x16, x16, #0xf50
  40bfbc:	br	x17

000000000040bfc0 <hexmem@plt>:
  40bfc0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bfc4:	ldr	x17, [x16, #3928]
  40bfc8:	add	x16, x16, #0xf58
  40bfcc:	br	x17

000000000040bfd0 <timezone_is_valid@plt>:
  40bfd0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bfd4:	ldr	x17, [x16, #3936]
  40bfd8:	add	x16, x16, #0xf60
  40bfdc:	br	x17

000000000040bfe0 <memdup@plt>:
  40bfe0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bfe4:	ldr	x17, [x16, #3944]
  40bfe8:	add	x16, x16, #0xf68
  40bfec:	br	x17

000000000040bff0 <in4_addr_default_prefixlen@plt>:
  40bff0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40bff4:	ldr	x17, [x16, #3952]
  40bff8:	add	x16, x16, #0xf70
  40bffc:	br	x17

000000000040c000 <inet_netof@plt>:
  40c000:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c004:	ldr	x17, [x16, #3960]
  40c008:	add	x16, x16, #0xf78
  40c00c:	br	x17

000000000040c010 <inet_makeaddr@plt>:
  40c010:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c014:	ldr	x17, [x16, #3968]
  40c018:	add	x16, x16, #0xf80
  40c01c:	br	x17

000000000040c020 <is_localhost@plt>:
  40c020:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c024:	ldr	x17, [x16, #3976]
  40c028:	add	x16, x16, #0xf88
  40c02c:	br	x17

000000000040c030 <dns_name_is_root@plt>:
  40c030:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c034:	ldr	x17, [x16, #3984]
  40c038:	add	x16, x16, #0xf90
  40c03c:	br	x17

000000000040c040 <dns_label_escape@plt>:
  40c040:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c044:	ldr	x17, [x16, #3992]
  40c048:	add	x16, x16, #0xf98
  40c04c:	br	x17

000000000040c050 <memchr@plt>:
  40c050:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c054:	ldr	x17, [x16, #4000]
  40c058:	add	x16, x16, #0xfa0
  40c05c:	br	x17

000000000040c060 <memdup_suffix0@plt>:
  40c060:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c064:	ldr	x17, [x16, #4008]
  40c068:	add	x16, x16, #0xfa8
  40c06c:	br	x17

000000000040c070 <fopen_temporary@plt>:
  40c070:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c074:	ldr	x17, [x16, #4016]
  40c078:	add	x16, x16, #0xfb0
  40c07c:	br	x17

000000000040c080 <fchmod@plt>:
  40c080:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c084:	ldr	x17, [x16, #4024]
  40c088:	add	x16, x16, #0xfb8
  40c08c:	br	x17

000000000040c090 <fputstrv@plt>:
  40c090:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c094:	ldr	x17, [x16, #4032]
  40c098:	add	x16, x16, #0xfc0
  40c09c:	br	x17

000000000040c0a0 <fflush_and_check@plt>:
  40c0a0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0a4:	ldr	x17, [x16, #4040]
  40c0a8:	add	x16, x16, #0xfc8
  40c0ac:	br	x17

000000000040c0b0 <unhexmem_full@plt>:
  40c0b0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0b4:	ldr	x17, [x16, #4048]
  40c0b8:	add	x16, x16, #0xfd0
  40c0bc:	br	x17

000000000040c0c0 <in4_addr_default_subnet_mask@plt>:
  40c0c0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0c4:	ldr	x17, [x16, #4056]
  40c0c8:	add	x16, x16, #0xfd8
  40c0cc:	br	x17

000000000040c0d0 <dns_name_concat@plt>:
  40c0d0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0d4:	ldr	x17, [x16, #4064]
  40c0d8:	add	x16, x16, #0xfe0
  40c0dc:	br	x17

000000000040c0e0 <__xstat64@plt>:
  40c0e0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0e4:	ldr	x17, [x16, #4072]
  40c0e8:	add	x16, x16, #0xfe8
  40c0ec:	br	x17

000000000040c0f0 <__fxstat64@plt>:
  40c0f0:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c0f4:	ldr	x17, [x16, #4080]
  40c0f8:	add	x16, x16, #0xff0
  40c0fc:	br	x17

000000000040c100 <__lxstat64@plt>:
  40c100:	adrp	x16, 49f000 <_DYNAMIC+0x1d0>
  40c104:	ldr	x17, [x16, #4088]
  40c108:	add	x16, x16, #0xff8
  40c10c:	br	x17

Disassembly of section .text:

000000000040c110 <_start>:
  40c110:	mov	x29, #0x0                   	// #0
  40c114:	mov	x30, #0x0                   	// #0
  40c118:	mov	x5, x0
  40c11c:	ldr	x1, [sp]
  40c120:	add	x2, sp, #0x8
  40c124:	mov	x6, sp
  40c128:	movz	x0, #0x0, lsl #48
  40c12c:	movk	x0, #0x0, lsl #32
  40c130:	movk	x0, #0x40, lsl #16
  40c134:	movk	x0, #0xc2d8
  40c138:	movz	x3, #0x0, lsl #48
  40c13c:	movk	x3, #0x0, lsl #32
  40c140:	movk	x3, #0x46, lsl #16
  40c144:	movk	x3, #0x3780
  40c148:	movz	x4, #0x0, lsl #48
  40c14c:	movk	x4, #0x0, lsl #32
  40c150:	movk	x4, #0x46, lsl #16
  40c154:	movk	x4, #0x3800
  40c158:	bl	40a330 <__libc_start_main@plt>
  40c15c:	bl	40a340 <abort@plt>

000000000040c160 <call_weak_fn>:
  40c160:	adrp	x0, 49f000 <_DYNAMIC+0x1d0>
  40c164:	ldr	x0, [x0, #152]
  40c168:	cbz	x0, 40c170 <call_weak_fn+0x10>
  40c16c:	b	40a350 <__gmon_start__@plt>
  40c170:	ret

000000000040c174 <deregister_tm_clones>:
  40c174:	stp	x29, x30, [sp, #-32]!
  40c178:	mov	x29, sp
  40c17c:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c180:	add	x0, x0, #0x0
  40c184:	str	x0, [sp, #24]
  40c188:	ldr	x0, [sp, #24]
  40c18c:	str	x0, [sp, #24]
  40c190:	ldr	x1, [sp, #24]
  40c194:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c198:	add	x0, x0, #0x0
  40c19c:	cmp	x1, x0
  40c1a0:	b.eq	40c1dc <deregister_tm_clones+0x68>  // b.none
  40c1a4:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40c1a8:	add	x0, x0, #0x850
  40c1ac:	ldr	x0, [x0]
  40c1b0:	str	x0, [sp, #16]
  40c1b4:	ldr	x0, [sp, #16]
  40c1b8:	str	x0, [sp, #16]
  40c1bc:	ldr	x0, [sp, #16]
  40c1c0:	cmp	x0, #0x0
  40c1c4:	b.eq	40c1e0 <deregister_tm_clones+0x6c>  // b.none
  40c1c8:	ldr	x1, [sp, #16]
  40c1cc:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c1d0:	add	x0, x0, #0x0
  40c1d4:	blr	x1
  40c1d8:	b	40c1e0 <deregister_tm_clones+0x6c>
  40c1dc:	nop
  40c1e0:	ldp	x29, x30, [sp], #32
  40c1e4:	ret

000000000040c1e8 <register_tm_clones>:
  40c1e8:	stp	x29, x30, [sp, #-48]!
  40c1ec:	mov	x29, sp
  40c1f0:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c1f4:	add	x0, x0, #0x0
  40c1f8:	str	x0, [sp, #40]
  40c1fc:	ldr	x0, [sp, #40]
  40c200:	str	x0, [sp, #40]
  40c204:	ldr	x1, [sp, #40]
  40c208:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c20c:	add	x0, x0, #0x0
  40c210:	sub	x0, x1, x0
  40c214:	asr	x0, x0, #3
  40c218:	lsr	x1, x0, #63
  40c21c:	add	x0, x1, x0
  40c220:	asr	x0, x0, #1
  40c224:	str	x0, [sp, #32]
  40c228:	ldr	x0, [sp, #32]
  40c22c:	cmp	x0, #0x0
  40c230:	b.eq	40c270 <register_tm_clones+0x88>  // b.none
  40c234:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40c238:	add	x0, x0, #0x858
  40c23c:	ldr	x0, [x0]
  40c240:	str	x0, [sp, #24]
  40c244:	ldr	x0, [sp, #24]
  40c248:	str	x0, [sp, #24]
  40c24c:	ldr	x0, [sp, #24]
  40c250:	cmp	x0, #0x0
  40c254:	b.eq	40c274 <register_tm_clones+0x8c>  // b.none
  40c258:	ldr	x2, [sp, #24]
  40c25c:	ldr	x1, [sp, #32]
  40c260:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c264:	add	x0, x0, #0x0
  40c268:	blr	x2
  40c26c:	b	40c274 <register_tm_clones+0x8c>
  40c270:	nop
  40c274:	ldp	x29, x30, [sp], #48
  40c278:	ret

000000000040c27c <__do_global_dtors_aux>:
  40c27c:	stp	x29, x30, [sp, #-16]!
  40c280:	mov	x29, sp
  40c284:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c288:	add	x0, x0, #0x210
  40c28c:	ldrb	w0, [x0]
  40c290:	and	x0, x0, #0xff
  40c294:	cmp	x0, #0x0
  40c298:	b.ne	40c2b4 <__do_global_dtors_aux+0x38>  // b.any
  40c29c:	bl	40c174 <deregister_tm_clones>
  40c2a0:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  40c2a4:	add	x0, x0, #0x210
  40c2a8:	mov	w1, #0x1                   	// #1
  40c2ac:	strb	w1, [x0]
  40c2b0:	b	40c2b8 <__do_global_dtors_aux+0x3c>
  40c2b4:	nop
  40c2b8:	ldp	x29, x30, [sp], #16
  40c2bc:	ret

000000000040c2c0 <frame_dummy>:
  40c2c0:	stp	x29, x30, [sp, #-16]!
  40c2c4:	mov	x29, sp
  40c2c8:	bl	40c1e8 <register_tm_clones>
  40c2cc:	nop
  40c2d0:	ldp	x29, x30, [sp], #16
  40c2d4:	ret

000000000040c2d8 <main>:
  40c2d8:	sub	sp, sp, #0x30
  40c2dc:	stp	x29, x30, [sp, #32]
  40c2e0:	add	x29, sp, #0x20
  40c2e4:	mov	w8, wzr
  40c2e8:	mov	w9, #0x1                   	// #1
  40c2ec:	stur	wzr, [x29, #-4]
  40c2f0:	stur	w0, [x29, #-8]
  40c2f4:	str	x1, [sp, #16]
  40c2f8:	ldur	w0, [x29, #-8]
  40c2fc:	ldr	x1, [sp, #16]
  40c300:	str	w8, [sp, #8]
  40c304:	str	w9, [sp, #4]
  40c308:	bl	40c350 <save_argc_argv>
  40c30c:	ldur	w0, [x29, #-8]
  40c310:	ldr	x1, [sp, #16]
  40c314:	bl	40c384 <run>
  40c318:	str	w0, [sp, #12]
  40c31c:	bl	40a360 <ask_password_agent_close@plt>
  40c320:	bl	40a370 <polkit_agent_close@plt>
  40c324:	bl	40a380 <pager_close@plt>
  40c328:	bl	40a390 <mac_selinux_finish@plt>
  40c32c:	bl	40cf94 <static_destruct>
  40c330:	ldr	w8, [sp, #12]
  40c334:	cmp	w8, #0x0
  40c338:	ldr	w8, [sp, #4]
  40c33c:	ldr	w9, [sp, #8]
  40c340:	csel	w0, w8, w9, lt  // lt = tstop
  40c344:	ldp	x29, x30, [sp, #32]
  40c348:	add	sp, sp, #0x30
  40c34c:	ret

000000000040c350 <save_argc_argv>:
  40c350:	sub	sp, sp, #0x10
  40c354:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40c358:	add	x8, x8, #0x258
  40c35c:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  40c360:	add	x9, x9, #0x260
  40c364:	str	w0, [sp, #12]
  40c368:	str	x1, [sp]
  40c36c:	ldr	w10, [sp, #12]
  40c370:	str	w10, [x8]
  40c374:	ldr	x8, [sp]
  40c378:	str	x8, [x9]
  40c37c:	add	sp, sp, #0x10
  40c380:	ret

000000000040c384 <run>:
  40c384:	stp	x29, x30, [sp, #-32]!
  40c388:	str	x28, [sp, #16]
  40c38c:	mov	x29, sp
  40c390:	sub	sp, sp, #0x270
  40c394:	add	x8, sp, #0x168
  40c398:	mov	x9, xzr
  40c39c:	mov	w10, #0xffffffff            	// #-1
  40c3a0:	mov	w11, #0x7                   	// #7
  40c3a4:	adrp	x12, 4a0000 <arg_event_timeout_usec>
  40c3a8:	add	x12, x12, #0x218
  40c3ac:	adrp	x13, 4a0000 <arg_event_timeout_usec>
  40c3b0:	add	x13, x13, #0x220
  40c3b4:	adrp	x2, 4a0000 <arg_event_timeout_usec>
  40c3b8:	add	x2, x2, #0x0
  40c3bc:	adrp	x3, 4a0000 <arg_event_timeout_usec>
  40c3c0:	add	x3, x3, #0x8
  40c3c4:	mov	w14, #0x1                   	// #1
  40c3c8:	adrp	x15, 463000 <dhcp_lease_set_client_id+0xc4>
  40c3cc:	add	x15, x15, #0xae0
  40c3d0:	add	x15, x15, #0x3
  40c3d4:	adrp	x16, 463000 <dhcp_lease_set_client_id+0xc4>
  40c3d8:	add	x16, x16, #0xaf4
  40c3dc:	stur	w0, [x29, #-8]
  40c3e0:	str	x1, [x8, #248]
  40c3e4:	str	x9, [x8, #240]
  40c3e8:	str	x9, [x8, #232]
  40c3ec:	stur	w10, [x29, #-36]
  40c3f0:	stur	w10, [x29, #-40]
  40c3f4:	mov	w0, w11
  40c3f8:	str	x8, [sp, #136]
  40c3fc:	str	x12, [sp, #128]
  40c400:	str	x13, [sp, #120]
  40c404:	str	x2, [sp, #112]
  40c408:	str	x3, [sp, #104]
  40c40c:	str	w14, [sp, #100]
  40c410:	str	x15, [sp, #88]
  40c414:	str	x16, [sp, #80]
  40c418:	bl	40a3a0 <log_set_target@plt>
  40c41c:	bl	40a3b0 <log_open@plt>
  40c420:	ldr	x8, [sp, #128]
  40c424:	mov	x0, x8
  40c428:	ldr	x1, [sp, #120]
  40c42c:	ldr	x2, [sp, #112]
  40c430:	ldr	x3, [sp, #104]
  40c434:	bl	40a3c0 <udev_parse_config_full@plt>
  40c438:	ldr	w10, [sp, #100]
  40c43c:	mov	w0, w10
  40c440:	bl	40a3d0 <log_parse_environment_realm@plt>
  40c444:	bl	40a3b0 <log_open@plt>
  40c448:	ldur	w10, [x29, #-8]
  40c44c:	ldr	x8, [sp, #136]
  40c450:	ldr	x1, [x8, #248]
  40c454:	mov	w0, w10
  40c458:	bl	40d070 <parse_argv>
  40c45c:	stur	w0, [x29, #-44]
  40c460:	ldur	w10, [x29, #-44]
  40c464:	cmp	w10, #0x0
  40c468:	cset	w10, gt
  40c46c:	tbnz	w10, #0, 40c484 <run+0x100>
  40c470:	ldur	w8, [x29, #-44]
  40c474:	stur	w8, [x29, #-4]
  40c478:	mov	w8, #0x1                   	// #1
  40c47c:	stur	w8, [x29, #-48]
  40c480:	b	40cf70 <run+0xbec>
  40c484:	adrp	x0, 40d000 <static_destruct+0x6c>
  40c488:	add	x0, x0, #0x50c
  40c48c:	mov	x8, xzr
  40c490:	mov	x1, x8
  40c494:	mov	w2, #0x1                   	// #1
  40c498:	bl	40a3e0 <proc_cmdline_parse@plt>
  40c49c:	stur	w0, [x29, #-44]
  40c4a0:	ldur	w9, [x29, #-44]
  40c4a4:	cmp	w9, #0x0
  40c4a8:	cset	w9, ge  // ge = tcont
  40c4ac:	tbnz	w9, #0, 40c52c <run+0x1a8>
  40c4b0:	mov	w8, #0x4                   	// #4
  40c4b4:	stur	w8, [x29, #-52]
  40c4b8:	ldur	w8, [x29, #-44]
  40c4bc:	stur	w8, [x29, #-56]
  40c4c0:	mov	w8, #0x1                   	// #1
  40c4c4:	stur	w8, [x29, #-60]
  40c4c8:	ldur	w0, [x29, #-60]
  40c4cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c4d0:	ldur	w8, [x29, #-52]
  40c4d4:	and	w8, w8, #0x7
  40c4d8:	cmp	w0, w8
  40c4dc:	b.lt	40c510 <run+0x18c>  // b.tstop
  40c4e0:	ldur	w8, [x29, #-60]
  40c4e4:	ldur	w9, [x29, #-52]
  40c4e8:	orr	w0, w9, w8, lsl #10
  40c4ec:	ldur	w1, [x29, #-56]
  40c4f0:	ldr	x2, [sp, #88]
  40c4f4:	mov	w3, #0x6b9                 	// #1721
  40c4f8:	ldr	x4, [sp, #80]
  40c4fc:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40c500:	add	x5, x5, #0xaf8
  40c504:	bl	40a400 <log_internal_realm@plt>
  40c508:	str	w0, [sp, #76]
  40c50c:	b	40c524 <run+0x1a0>
  40c510:	ldur	w0, [x29, #-56]
  40c514:	bl	40a410 <abs@plt>
  40c518:	mov	w8, wzr
  40c51c:	subs	w8, w8, w0, uxtb
  40c520:	str	w8, [sp, #76]
  40c524:	ldr	w8, [sp, #76]
  40c528:	stur	w8, [x29, #-64]
  40c52c:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40c530:	add	x8, x8, #0x228
  40c534:	ldrb	w9, [x8]
  40c538:	tbnz	w9, #0, 40c540 <run+0x1bc>
  40c53c:	b	40c558 <run+0x1d4>
  40c540:	mov	w8, wzr
  40c544:	mov	w0, w8
  40c548:	bl	40a3a0 <log_set_target@plt>
  40c54c:	mov	w0, #0x1                   	// #1
  40c550:	mov	w1, #0x7                   	// #7
  40c554:	bl	40a420 <log_set_max_level_realm@plt>
  40c558:	mov	w0, #0x1                   	// #1
  40c55c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c560:	mov	w8, wzr
  40c564:	str	w0, [sp, #72]
  40c568:	mov	w0, w8
  40c56c:	ldr	w1, [sp, #72]
  40c570:	bl	40a420 <log_set_max_level_realm@plt>
  40c574:	bl	40a430 <must_be_root@plt>
  40c578:	stur	w0, [x29, #-44]
  40c57c:	ldur	w8, [x29, #-44]
  40c580:	cmp	w8, #0x0
  40c584:	cset	w8, ge  // ge = tcont
  40c588:	tbnz	w8, #0, 40c5a0 <run+0x21c>
  40c58c:	ldur	w8, [x29, #-44]
  40c590:	stur	w8, [x29, #-4]
  40c594:	mov	w8, #0x1                   	// #1
  40c598:	stur	w8, [x29, #-48]
  40c59c:	b	40cf70 <run+0xbec>
  40c5a0:	ldr	x8, [sp, #128]
  40c5a4:	ldr	w9, [x8]
  40c5a8:	cbnz	w9, 40c770 <run+0x3ec>
  40c5ac:	mov	x8, #0x1                   	// #1
  40c5b0:	ldr	x9, [sp, #136]
  40c5b4:	str	x8, [x9, #176]
  40c5b8:	mov	w10, wzr
  40c5bc:	mov	w0, w10
  40c5c0:	mov	x1, #0x80                  	// #128
  40c5c4:	sub	x2, x29, #0xd8
  40c5c8:	bl	40a440 <sched_getaffinity@plt>
  40c5cc:	cbnz	w0, 40c5ec <run+0x268>
  40c5d0:	mov	x0, #0x80                  	// #128
  40c5d4:	sub	x1, x29, #0xd8
  40c5d8:	bl	40a450 <__sched_cpucount@plt>
  40c5dc:	mov	w1, w0
  40c5e0:	sxtw	x8, w1
  40c5e4:	ldr	x9, [sp, #136]
  40c5e8:	str	x8, [x9, #176]
  40c5ec:	ldr	x8, [sp, #136]
  40c5f0:	ldr	x9, [x8, #176]
  40c5f4:	mov	x10, #0x2                   	// #2
  40c5f8:	mul	x9, x9, x10
  40c5fc:	add	x9, x9, #0x10
  40c600:	str	x9, [x8, #192]
  40c604:	bl	40a460 <physical_memory@plt>
  40c608:	mov	x8, #0x8000000             	// #134217728
  40c60c:	udiv	x8, x0, x8
  40c610:	ldr	x9, [sp, #136]
  40c614:	str	x8, [x9, #40]
  40c618:	mov	w11, #0xa                   	// #10
  40c61c:	stur	w11, [x29, #-228]
  40c620:	ldr	x8, [x9, #40]
  40c624:	cmp	x8, #0xa
  40c628:	b.ls	40c63c <run+0x2b8>  // b.plast
  40c62c:	ldr	x8, [sp, #136]
  40c630:	ldr	x9, [x8, #40]
  40c634:	str	x9, [sp, #64]
  40c638:	b	40c644 <run+0x2c0>
  40c63c:	mov	x8, #0xa                   	// #10
  40c640:	str	x8, [sp, #64]
  40c644:	ldr	x8, [sp, #64]
  40c648:	ldr	x9, [sp, #136]
  40c64c:	str	x8, [x9, #24]
  40c650:	ldr	x8, [x9, #24]
  40c654:	str	x8, [x9, #184]
  40c658:	ldr	x8, [x9, #192]
  40c65c:	str	x8, [x9, #16]
  40c660:	ldr	x8, [x9, #184]
  40c664:	str	x8, [x9, #8]
  40c668:	ldr	x8, [x9, #16]
  40c66c:	ldr	x10, [x9, #8]
  40c670:	cmp	x8, x10
  40c674:	b.cs	40c688 <run+0x304>  // b.hs, b.nlast
  40c678:	ldr	x8, [sp, #136]
  40c67c:	ldr	x9, [x8, #16]
  40c680:	str	x9, [sp, #56]
  40c684:	b	40c694 <run+0x310>
  40c688:	ldr	x8, [sp, #136]
  40c68c:	ldr	x9, [x8, #8]
  40c690:	str	x9, [sp, #56]
  40c694:	ldr	x8, [sp, #56]
  40c698:	ldr	x9, [sp, #136]
  40c69c:	str	x8, [x9]
  40c6a0:	ldr	x8, [x9]
  40c6a4:	ldr	x10, [sp, #128]
  40c6a8:	str	w8, [x10]
  40c6ac:	mov	w8, #0x800                 	// #2048
  40c6b0:	str	w8, [sp, #356]
  40c6b4:	ldr	w11, [x10]
  40c6b8:	str	w11, [sp, #352]
  40c6bc:	ldr	w11, [sp, #352]
  40c6c0:	cmp	w8, w11
  40c6c4:	b.cs	40c6d4 <run+0x350>  // b.hs, b.nlast
  40c6c8:	mov	w8, #0x800                 	// #2048
  40c6cc:	str	w8, [sp, #52]
  40c6d0:	b	40c6dc <run+0x358>
  40c6d4:	ldr	w8, [sp, #352]
  40c6d8:	str	w8, [sp, #52]
  40c6dc:	ldr	w8, [sp, #52]
  40c6e0:	str	w8, [sp, #348]
  40c6e4:	ldr	w8, [sp, #348]
  40c6e8:	ldr	x9, [sp, #128]
  40c6ec:	str	w8, [x9]
  40c6f0:	mov	w8, #0x7                   	// #7
  40c6f4:	str	w8, [sp, #344]
  40c6f8:	str	wzr, [sp, #340]
  40c6fc:	mov	w8, #0x1                   	// #1
  40c700:	str	w8, [sp, #336]
  40c704:	ldr	w0, [sp, #336]
  40c708:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c70c:	ldr	w8, [sp, #344]
  40c710:	and	w8, w8, #0x7
  40c714:	cmp	w0, w8
  40c718:	b.lt	40c754 <run+0x3d0>  // b.tstop
  40c71c:	ldr	w8, [sp, #336]
  40c720:	ldr	w9, [sp, #344]
  40c724:	orr	w0, w9, w8, lsl #10
  40c728:	ldr	w1, [sp, #340]
  40c72c:	ldr	x10, [sp, #128]
  40c730:	ldr	w6, [x10]
  40c734:	ldr	x2, [sp, #88]
  40c738:	mov	w3, #0x6d4                 	// #1748
  40c73c:	ldr	x4, [sp, #80]
  40c740:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40c744:	add	x5, x5, #0xb2a
  40c748:	bl	40a400 <log_internal_realm@plt>
  40c74c:	str	w0, [sp, #48]
  40c750:	b	40c768 <run+0x3e4>
  40c754:	ldr	w0, [sp, #340]
  40c758:	bl	40a410 <abs@plt>
  40c75c:	mov	w8, wzr
  40c760:	subs	w8, w8, w0, uxtb
  40c764:	str	w8, [sp, #48]
  40c768:	ldr	w8, [sp, #48]
  40c76c:	str	w8, [sp, #332]
  40c770:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40c774:	add	x0, x0, #0xb41
  40c778:	bl	40a470 <chdir@plt>
  40c77c:	stur	w0, [x29, #-44]
  40c780:	ldur	w8, [x29, #-44]
  40c784:	cmp	w8, #0x0
  40c788:	cset	w8, ge  // ge = tcont
  40c78c:	tbnz	w8, #0, 40c824 <run+0x4a0>
  40c790:	mov	w8, #0x3                   	// #3
  40c794:	str	w8, [sp, #328]
  40c798:	bl	40a480 <__errno_location@plt>
  40c79c:	ldr	w8, [x0]
  40c7a0:	str	w8, [sp, #324]
  40c7a4:	mov	w8, #0x1                   	// #1
  40c7a8:	str	w8, [sp, #320]
  40c7ac:	ldr	w0, [sp, #320]
  40c7b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c7b4:	ldr	w8, [sp, #328]
  40c7b8:	and	w8, w8, #0x7
  40c7bc:	cmp	w0, w8
  40c7c0:	b.lt	40c7f4 <run+0x470>  // b.tstop
  40c7c4:	ldr	w8, [sp, #320]
  40c7c8:	ldr	w9, [sp, #328]
  40c7cc:	orr	w0, w9, w8, lsl #10
  40c7d0:	ldr	w1, [sp, #324]
  40c7d4:	ldr	x2, [sp, #88]
  40c7d8:	mov	w3, #0x6da                 	// #1754
  40c7dc:	ldr	x4, [sp, #80]
  40c7e0:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40c7e4:	add	x5, x5, #0xb43
  40c7e8:	bl	40a400 <log_internal_realm@plt>
  40c7ec:	str	w0, [sp, #44]
  40c7f0:	b	40c808 <run+0x484>
  40c7f4:	ldr	w0, [sp, #324]
  40c7f8:	bl	40a410 <abs@plt>
  40c7fc:	mov	w8, wzr
  40c800:	subs	w8, w8, w0, uxtb
  40c804:	str	w8, [sp, #44]
  40c808:	ldr	w8, [sp, #44]
  40c80c:	str	w8, [sp, #316]
  40c810:	ldr	w8, [sp, #316]
  40c814:	stur	w8, [x29, #-4]
  40c818:	mov	w8, #0x1                   	// #1
  40c81c:	stur	w8, [x29, #-48]
  40c820:	b	40cf70 <run+0xbec>
  40c824:	mov	w0, #0x12                  	// #18
  40c828:	bl	40a490 <umask@plt>
  40c82c:	bl	40a4a0 <mac_selinux_init@plt>
  40c830:	stur	w0, [x29, #-44]
  40c834:	ldur	w8, [x29, #-44]
  40c838:	cmp	w8, #0x0
  40c83c:	cset	w8, ge  // ge = tcont
  40c840:	tbnz	w8, #0, 40c8d4 <run+0x550>
  40c844:	mov	w8, #0x3                   	// #3
  40c848:	str	w8, [sp, #312]
  40c84c:	ldur	w8, [x29, #-44]
  40c850:	str	w8, [sp, #308]
  40c854:	mov	w8, #0x1                   	// #1
  40c858:	str	w8, [sp, #304]
  40c85c:	ldr	w0, [sp, #304]
  40c860:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c864:	ldr	w8, [sp, #312]
  40c868:	and	w8, w8, #0x7
  40c86c:	cmp	w0, w8
  40c870:	b.lt	40c8a4 <run+0x520>  // b.tstop
  40c874:	ldr	w8, [sp, #304]
  40c878:	ldr	w9, [sp, #312]
  40c87c:	orr	w0, w9, w8, lsl #10
  40c880:	ldr	w1, [sp, #308]
  40c884:	ldr	x2, [sp, #88]
  40c888:	mov	w3, #0x6e0                 	// #1760
  40c88c:	ldr	x4, [sp, #80]
  40c890:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40c894:	add	x5, x5, #0xb63
  40c898:	bl	40a400 <log_internal_realm@plt>
  40c89c:	str	w0, [sp, #40]
  40c8a0:	b	40c8b8 <run+0x534>
  40c8a4:	ldr	w0, [sp, #308]
  40c8a8:	bl	40a410 <abs@plt>
  40c8ac:	mov	w8, wzr
  40c8b0:	subs	w8, w8, w0, uxtb
  40c8b4:	str	w8, [sp, #40]
  40c8b8:	ldr	w8, [sp, #40]
  40c8bc:	str	w8, [sp, #300]
  40c8c0:	ldr	w8, [sp, #300]
  40c8c4:	stur	w8, [x29, #-4]
  40c8c8:	mov	w8, #0x1                   	// #1
  40c8cc:	stur	w8, [x29, #-48]
  40c8d0:	b	40cf70 <run+0xbec>
  40c8d4:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40c8d8:	add	x0, x0, #0xb86
  40c8dc:	mov	w1, #0x1ed                 	// #493
  40c8e0:	bl	40a4b0 <mkdir_errno_wrapper@plt>
  40c8e4:	stur	w0, [x29, #-44]
  40c8e8:	ldur	w8, [x29, #-44]
  40c8ec:	cmp	w8, #0x0
  40c8f0:	cset	w8, ge  // ge = tcont
  40c8f4:	tbnz	w8, #0, 40c998 <run+0x614>
  40c8f8:	ldur	w8, [x29, #-44]
  40c8fc:	mov	w9, #0xffffffef            	// #-17
  40c900:	cmp	w8, w9
  40c904:	b.eq	40c998 <run+0x614>  // b.none
  40c908:	mov	w8, #0x3                   	// #3
  40c90c:	str	w8, [sp, #296]
  40c910:	ldur	w8, [x29, #-44]
  40c914:	str	w8, [sp, #292]
  40c918:	mov	w8, #0x1                   	// #1
  40c91c:	str	w8, [sp, #288]
  40c920:	ldr	w0, [sp, #288]
  40c924:	bl	40a3f0 <log_get_max_level_realm@plt>
  40c928:	ldr	w8, [sp, #296]
  40c92c:	and	w8, w8, #0x7
  40c930:	cmp	w0, w8
  40c934:	b.lt	40c968 <run+0x5e4>  // b.tstop
  40c938:	ldr	w8, [sp, #288]
  40c93c:	ldr	w9, [sp, #296]
  40c940:	orr	w0, w9, w8, lsl #10
  40c944:	ldr	w1, [sp, #292]
  40c948:	ldr	x2, [sp, #88]
  40c94c:	mov	w3, #0x6e4                 	// #1764
  40c950:	ldr	x4, [sp, #80]
  40c954:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40c958:	add	x5, x5, #0xb90
  40c95c:	bl	40a400 <log_internal_realm@plt>
  40c960:	str	w0, [sp, #36]
  40c964:	b	40c97c <run+0x5f8>
  40c968:	ldr	w0, [sp, #292]
  40c96c:	bl	40a410 <abs@plt>
  40c970:	mov	w8, wzr
  40c974:	subs	w8, w8, w0, uxtb
  40c978:	str	w8, [sp, #36]
  40c97c:	ldr	w8, [sp, #36]
  40c980:	str	w8, [sp, #284]
  40c984:	ldr	w8, [sp, #284]
  40c988:	stur	w8, [x29, #-4]
  40c98c:	mov	w8, #0x1                   	// #1
  40c990:	stur	w8, [x29, #-48]
  40c994:	b	40cf70 <run+0xbec>
  40c998:	mov	x8, xzr
  40c99c:	mov	x0, x8
  40c9a0:	mov	w9, #0xffffffff            	// #-1
  40c9a4:	mov	w1, w9
  40c9a8:	mov	w2, w9
  40c9ac:	bl	40a4c0 <dev_setup@plt>
  40c9b0:	bl	40a4d0 <getppid@plt>
  40c9b4:	cmp	w0, #0x1
  40c9b8:	b.ne	40cb54 <run+0x7d0>  // b.any
  40c9bc:	bl	40a4e0 <sd_booted@plt>
  40c9c0:	cmp	w0, #0x0
  40c9c4:	cset	w8, le
  40c9c8:	tbnz	w8, #0, 40cb54 <run+0x7d0>
  40c9cc:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40c9d0:	add	x0, x0, #0xbaf
  40c9d4:	mov	w8, wzr
  40c9d8:	mov	w1, w8
  40c9dc:	sub	x2, x29, #0x18
  40c9e0:	bl	40a4f0 <cg_pid_get_path@plt>
  40c9e4:	stur	w0, [x29, #-44]
  40c9e8:	ldur	w8, [x29, #-44]
  40c9ec:	cmp	w8, #0x0
  40c9f0:	cset	w8, ge  // ge = tcont
  40c9f4:	tbnz	w8, #0, 40cb54 <run+0x7d0>
  40c9f8:	mov	w8, #0x0                   	// #0
  40c9fc:	strb	w8, [sp, #283]
  40ca00:	ldur	w8, [x29, #-44]
  40ca04:	mov	w9, #0xffffff85            	// #-123
  40ca08:	cmp	w8, w9
  40ca0c:	str	w8, [sp, #32]
  40ca10:	b.eq	40ca34 <run+0x6b0>  // b.none
  40ca14:	b	40ca18 <run+0x694>
  40ca18:	mov	w8, #0xfffffffe            	// #-2
  40ca1c:	ldr	w9, [sp, #32]
  40ca20:	cmp	w9, w8
  40ca24:	cset	w8, eq  // eq = none
  40ca28:	eor	w8, w8, #0x1
  40ca2c:	tbnz	w8, #0, 40ca40 <run+0x6bc>
  40ca30:	b	40ca34 <run+0x6b0>
  40ca34:	mov	w8, #0x1                   	// #1
  40ca38:	strb	w8, [sp, #283]
  40ca3c:	b	40ca40 <run+0x6bc>
  40ca40:	ldrb	w8, [sp, #283]
  40ca44:	and	w8, w8, #0x1
  40ca48:	strb	w8, [sp, #282]
  40ca4c:	ldrb	w8, [sp, #282]
  40ca50:	tbnz	w8, #0, 40ca58 <run+0x6d4>
  40ca54:	b	40cad8 <run+0x754>
  40ca58:	mov	w8, #0x7                   	// #7
  40ca5c:	str	w8, [sp, #276]
  40ca60:	ldur	w8, [x29, #-44]
  40ca64:	str	w8, [sp, #272]
  40ca68:	mov	w8, #0x1                   	// #1
  40ca6c:	str	w8, [sp, #268]
  40ca70:	ldr	w0, [sp, #268]
  40ca74:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ca78:	ldr	w8, [sp, #276]
  40ca7c:	and	w8, w8, #0x7
  40ca80:	cmp	w0, w8
  40ca84:	b.lt	40cab8 <run+0x734>  // b.tstop
  40ca88:	ldr	w8, [sp, #268]
  40ca8c:	ldr	w9, [sp, #276]
  40ca90:	orr	w0, w9, w8, lsl #10
  40ca94:	ldr	w1, [sp, #272]
  40ca98:	ldr	x2, [sp, #88]
  40ca9c:	mov	w3, #0x6ef                 	// #1775
  40caa0:	ldr	x4, [sp, #80]
  40caa4:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40caa8:	add	x5, x5, #0xbb8
  40caac:	bl	40a400 <log_internal_realm@plt>
  40cab0:	str	w0, [sp, #28]
  40cab4:	b	40cacc <run+0x748>
  40cab8:	ldr	w0, [sp, #272]
  40cabc:	bl	40a410 <abs@plt>
  40cac0:	mov	w8, wzr
  40cac4:	subs	w8, w8, w0, uxtb
  40cac8:	str	w8, [sp, #28]
  40cacc:	ldr	w8, [sp, #28]
  40cad0:	str	w8, [sp, #264]
  40cad4:	b	40cb54 <run+0x7d0>
  40cad8:	mov	w8, #0x4                   	// #4
  40cadc:	str	w8, [sp, #260]
  40cae0:	ldur	w8, [x29, #-44]
  40cae4:	str	w8, [sp, #256]
  40cae8:	mov	w8, #0x1                   	// #1
  40caec:	str	w8, [sp, #252]
  40caf0:	ldr	w0, [sp, #252]
  40caf4:	bl	40a3f0 <log_get_max_level_realm@plt>
  40caf8:	ldr	w8, [sp, #260]
  40cafc:	and	w8, w8, #0x7
  40cb00:	cmp	w0, w8
  40cb04:	b.lt	40cb38 <run+0x7b4>  // b.tstop
  40cb08:	ldr	w8, [sp, #252]
  40cb0c:	ldr	w9, [sp, #260]
  40cb10:	orr	w0, w9, w8, lsl #10
  40cb14:	ldr	w1, [sp, #256]
  40cb18:	ldr	x2, [sp, #88]
  40cb1c:	mov	w3, #0x6f1                 	// #1777
  40cb20:	ldr	x4, [sp, #80]
  40cb24:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cb28:	add	x5, x5, #0xbd7
  40cb2c:	bl	40a400 <log_internal_realm@plt>
  40cb30:	str	w0, [sp, #24]
  40cb34:	b	40cb4c <run+0x7c8>
  40cb38:	ldr	w0, [sp, #256]
  40cb3c:	bl	40a410 <abs@plt>
  40cb40:	mov	w8, wzr
  40cb44:	subs	w8, w8, w0, uxtb
  40cb48:	str	w8, [sp, #24]
  40cb4c:	ldr	w8, [sp, #24]
  40cb50:	str	w8, [sp, #248]
  40cb54:	sub	x0, x29, #0x24
  40cb58:	sub	x1, x29, #0x28
  40cb5c:	bl	40d818 <listen_fds>
  40cb60:	stur	w0, [x29, #-44]
  40cb64:	ldur	w8, [x29, #-44]
  40cb68:	cmp	w8, #0x0
  40cb6c:	cset	w8, ge  // ge = tcont
  40cb70:	tbnz	w8, #0, 40cc04 <run+0x880>
  40cb74:	mov	w8, #0x3                   	// #3
  40cb78:	str	w8, [sp, #244]
  40cb7c:	ldur	w8, [x29, #-44]
  40cb80:	str	w8, [sp, #240]
  40cb84:	mov	w8, #0x1                   	// #1
  40cb88:	str	w8, [sp, #236]
  40cb8c:	ldr	w0, [sp, #236]
  40cb90:	bl	40a3f0 <log_get_max_level_realm@plt>
  40cb94:	ldr	w8, [sp, #244]
  40cb98:	and	w8, w8, #0x7
  40cb9c:	cmp	w0, w8
  40cba0:	b.lt	40cbd4 <run+0x850>  // b.tstop
  40cba4:	ldr	w8, [sp, #236]
  40cba8:	ldr	w9, [sp, #244]
  40cbac:	orr	w0, w9, w8, lsl #10
  40cbb0:	ldr	w1, [sp, #240]
  40cbb4:	ldr	x2, [sp, #88]
  40cbb8:	mov	w3, #0x6f7                 	// #1783
  40cbbc:	ldr	x4, [sp, #80]
  40cbc0:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cbc4:	add	x5, x5, #0xbf0
  40cbc8:	bl	40a400 <log_internal_realm@plt>
  40cbcc:	str	w0, [sp, #20]
  40cbd0:	b	40cbe8 <run+0x864>
  40cbd4:	ldr	w0, [sp, #240]
  40cbd8:	bl	40a410 <abs@plt>
  40cbdc:	mov	w8, wzr
  40cbe0:	subs	w8, w8, w0, uxtb
  40cbe4:	str	w8, [sp, #20]
  40cbe8:	ldr	w8, [sp, #20]
  40cbec:	str	w8, [sp, #232]
  40cbf0:	ldr	w8, [sp, #232]
  40cbf4:	stur	w8, [x29, #-4]
  40cbf8:	mov	w8, #0x1                   	// #1
  40cbfc:	stur	w8, [x29, #-48]
  40cc00:	b	40cf70 <run+0xbec>
  40cc04:	ldur	w1, [x29, #-36]
  40cc08:	ldur	w2, [x29, #-40]
  40cc0c:	ldr	x8, [sp, #136]
  40cc10:	ldr	x3, [x8, #240]
  40cc14:	sub	x0, x29, #0x20
  40cc18:	bl	40d9fc <manager_new>
  40cc1c:	stur	w0, [x29, #-44]
  40cc20:	ldur	w9, [x29, #-44]
  40cc24:	cmp	w9, #0x0
  40cc28:	cset	w9, ge  // ge = tcont
  40cc2c:	tbnz	w9, #0, 40ccc0 <run+0x93c>
  40cc30:	mov	w8, #0x3                   	// #3
  40cc34:	str	w8, [sp, #228]
  40cc38:	ldur	w8, [x29, #-44]
  40cc3c:	str	w8, [sp, #224]
  40cc40:	mov	w8, #0x1                   	// #1
  40cc44:	str	w8, [sp, #220]
  40cc48:	ldr	w0, [sp, #220]
  40cc4c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40cc50:	ldr	w8, [sp, #228]
  40cc54:	and	w8, w8, #0x7
  40cc58:	cmp	w0, w8
  40cc5c:	b.lt	40cc90 <run+0x90c>  // b.tstop
  40cc60:	ldr	w8, [sp, #220]
  40cc64:	ldr	w9, [sp, #228]
  40cc68:	orr	w0, w9, w8, lsl #10
  40cc6c:	ldr	w1, [sp, #224]
  40cc70:	ldr	x2, [sp, #88]
  40cc74:	mov	w3, #0x6fb                 	// #1787
  40cc78:	ldr	x4, [sp, #80]
  40cc7c:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cc80:	add	x5, x5, #0xc0c
  40cc84:	bl	40a400 <log_internal_realm@plt>
  40cc88:	str	w0, [sp, #16]
  40cc8c:	b	40cca4 <run+0x920>
  40cc90:	ldr	w0, [sp, #224]
  40cc94:	bl	40a410 <abs@plt>
  40cc98:	mov	w8, wzr
  40cc9c:	subs	w8, w8, w0, uxtb
  40cca0:	str	w8, [sp, #16]
  40cca4:	ldr	w8, [sp, #16]
  40cca8:	str	w8, [sp, #216]
  40ccac:	ldr	w8, [sp, #216]
  40ccb0:	stur	w8, [x29, #-4]
  40ccb4:	mov	w8, #0x1                   	// #1
  40ccb8:	stur	w8, [x29, #-48]
  40ccbc:	b	40cf70 <run+0xbec>
  40ccc0:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40ccc4:	add	x8, x8, #0x22c
  40ccc8:	ldr	w9, [x8]
  40cccc:	cbz	w9, 40cf58 <run+0xbd4>
  40ccd0:	mov	w8, #0x6                   	// #6
  40ccd4:	str	w8, [sp, #208]
  40ccd8:	str	wzr, [sp, #204]
  40ccdc:	mov	w8, #0x1                   	// #1
  40cce0:	str	w8, [sp, #200]
  40cce4:	ldr	w0, [sp, #200]
  40cce8:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ccec:	ldr	w8, [sp, #208]
  40ccf0:	and	w8, w8, #0x7
  40ccf4:	cmp	w0, w8
  40ccf8:	b.lt	40cd2c <run+0x9a8>  // b.tstop
  40ccfc:	ldr	w8, [sp, #200]
  40cd00:	ldr	w9, [sp, #208]
  40cd04:	orr	w0, w9, w8, lsl #10
  40cd08:	ldr	w1, [sp, #204]
  40cd0c:	ldr	x2, [sp, #88]
  40cd10:	mov	w3, #0x700                 	// #1792
  40cd14:	ldr	x4, [sp, #80]
  40cd18:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cd1c:	add	x5, x5, #0xc29
  40cd20:	bl	40a400 <log_internal_realm@plt>
  40cd24:	str	w0, [sp, #12]
  40cd28:	b	40cd40 <run+0x9bc>
  40cd2c:	ldr	w0, [sp, #204]
  40cd30:	bl	40a410 <abs@plt>
  40cd34:	mov	w8, wzr
  40cd38:	subs	w8, w8, w0, uxtb
  40cd3c:	str	w8, [sp, #12]
  40cd40:	ldr	w8, [sp, #12]
  40cd44:	str	w8, [sp, #196]
  40cd48:	mov	w0, #0x1                   	// #1
  40cd4c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40cd50:	cmp	w0, #0x7
  40cd54:	b.ge	40cdec <run+0xa68>  // b.tcont
  40cd58:	bl	40de54 <make_null_stdio>
  40cd5c:	stur	w0, [x29, #-44]
  40cd60:	ldur	w8, [x29, #-44]
  40cd64:	cmp	w8, #0x0
  40cd68:	cset	w8, ge  // ge = tcont
  40cd6c:	tbnz	w8, #0, 40cdec <run+0xa68>
  40cd70:	mov	w8, #0x4                   	// #4
  40cd74:	str	w8, [sp, #192]
  40cd78:	ldur	w8, [x29, #-44]
  40cd7c:	str	w8, [sp, #188]
  40cd80:	mov	w8, #0x1                   	// #1
  40cd84:	str	w8, [sp, #184]
  40cd88:	ldr	w0, [sp, #184]
  40cd8c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40cd90:	ldr	w8, [sp, #192]
  40cd94:	and	w8, w8, #0x7
  40cd98:	cmp	w0, w8
  40cd9c:	b.lt	40cdd0 <run+0xa4c>  // b.tstop
  40cda0:	ldr	w8, [sp, #184]
  40cda4:	ldr	w9, [sp, #192]
  40cda8:	orr	w0, w9, w8, lsl #10
  40cdac:	ldr	w1, [sp, #188]
  40cdb0:	ldr	x2, [sp, #88]
  40cdb4:	mov	w3, #0x706                 	// #1798
  40cdb8:	ldr	x4, [sp, #80]
  40cdbc:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cdc0:	add	x5, x5, #0xc3e
  40cdc4:	bl	40a400 <log_internal_realm@plt>
  40cdc8:	str	w0, [sp, #8]
  40cdcc:	b	40cde4 <run+0xa60>
  40cdd0:	ldr	w0, [sp, #188]
  40cdd4:	bl	40a410 <abs@plt>
  40cdd8:	mov	w8, wzr
  40cddc:	subs	w8, w8, w0, uxtb
  40cde0:	str	w8, [sp, #8]
  40cde4:	ldr	w8, [sp, #8]
  40cde8:	str	w8, [sp, #180]
  40cdec:	bl	40a500 <fork@plt>
  40cdf0:	str	w0, [sp, #212]
  40cdf4:	ldr	w8, [sp, #212]
  40cdf8:	cmp	w8, #0x0
  40cdfc:	cset	w8, ge  // ge = tcont
  40ce00:	tbnz	w8, #0, 40ce98 <run+0xb14>
  40ce04:	mov	w8, #0x3                   	// #3
  40ce08:	str	w8, [sp, #176]
  40ce0c:	bl	40a480 <__errno_location@plt>
  40ce10:	ldr	w8, [x0]
  40ce14:	str	w8, [sp, #172]
  40ce18:	mov	w8, #0x1                   	// #1
  40ce1c:	str	w8, [sp, #168]
  40ce20:	ldr	w0, [sp, #168]
  40ce24:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ce28:	ldr	w8, [sp, #176]
  40ce2c:	and	w8, w8, #0x7
  40ce30:	cmp	w0, w8
  40ce34:	b.lt	40ce68 <run+0xae4>  // b.tstop
  40ce38:	ldr	w8, [sp, #168]
  40ce3c:	ldr	w9, [sp, #176]
  40ce40:	orr	w0, w9, w8, lsl #10
  40ce44:	ldr	w1, [sp, #172]
  40ce48:	ldr	x2, [sp, #88]
  40ce4c:	mov	w3, #0x70b                 	// #1803
  40ce50:	ldr	x4, [sp, #80]
  40ce54:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40ce58:	add	x5, x5, #0xc73
  40ce5c:	bl	40a400 <log_internal_realm@plt>
  40ce60:	str	w0, [sp, #4]
  40ce64:	b	40ce7c <run+0xaf8>
  40ce68:	ldr	w0, [sp, #172]
  40ce6c:	bl	40a410 <abs@plt>
  40ce70:	mov	w8, wzr
  40ce74:	subs	w8, w8, w0, uxtb
  40ce78:	str	w8, [sp, #4]
  40ce7c:	ldr	w8, [sp, #4]
  40ce80:	str	w8, [sp, #164]
  40ce84:	ldr	w8, [sp, #164]
  40ce88:	stur	w8, [x29, #-4]
  40ce8c:	mov	w8, #0x1                   	// #1
  40ce90:	stur	w8, [x29, #-48]
  40ce94:	b	40cf70 <run+0xbec>
  40ce98:	ldr	w8, [sp, #212]
  40ce9c:	cmp	w8, #0x0
  40cea0:	cset	w8, le
  40cea4:	tbnz	w8, #0, 40ceb8 <run+0xb34>
  40cea8:	stur	wzr, [x29, #-4]
  40ceac:	mov	w8, #0x1                   	// #1
  40ceb0:	stur	w8, [x29, #-48]
  40ceb4:	b	40cf70 <run+0xbec>
  40ceb8:	bl	40a510 <setsid@plt>
  40cebc:	mov	w8, #0xfffffc18            	// #-1000
  40cec0:	mov	w0, w8
  40cec4:	bl	40a520 <set_oom_score_adjust@plt>
  40cec8:	stur	w0, [x29, #-44]
  40cecc:	ldur	w8, [x29, #-44]
  40ced0:	cmp	w8, #0x0
  40ced4:	cset	w8, ge  // ge = tcont
  40ced8:	tbnz	w8, #0, 40cf58 <run+0xbd4>
  40cedc:	mov	w8, #0x7                   	// #7
  40cee0:	str	w8, [sp, #160]
  40cee4:	ldur	w8, [x29, #-44]
  40cee8:	str	w8, [sp, #156]
  40ceec:	mov	w8, #0x1                   	// #1
  40cef0:	str	w8, [sp, #152]
  40cef4:	ldr	w0, [sp, #152]
  40cef8:	bl	40a3f0 <log_get_max_level_realm@plt>
  40cefc:	ldr	w8, [sp, #160]
  40cf00:	and	w8, w8, #0x7
  40cf04:	cmp	w0, w8
  40cf08:	b.lt	40cf3c <run+0xbb8>  // b.tstop
  40cf0c:	ldr	w8, [sp, #152]
  40cf10:	ldr	w9, [sp, #160]
  40cf14:	orr	w0, w9, w8, lsl #10
  40cf18:	ldr	w1, [sp, #156]
  40cf1c:	ldr	x2, [sp, #88]
  40cf20:	mov	w3, #0x715                 	// #1813
  40cf24:	ldr	x4, [sp, #80]
  40cf28:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40cf2c:	add	x5, x5, #0xc8d
  40cf30:	bl	40a400 <log_internal_realm@plt>
  40cf34:	str	w0, [sp]
  40cf38:	b	40cf50 <run+0xbcc>
  40cf3c:	ldr	w0, [sp, #156]
  40cf40:	bl	40a410 <abs@plt>
  40cf44:	mov	w8, wzr
  40cf48:	subs	w8, w8, w0, uxtb
  40cf4c:	str	w8, [sp]
  40cf50:	ldr	w8, [sp]
  40cf54:	str	w8, [sp, #148]
  40cf58:	ldr	x8, [sp, #136]
  40cf5c:	ldr	x0, [x8, #232]
  40cf60:	bl	40de78 <main_loop>
  40cf64:	stur	w0, [x29, #-4]
  40cf68:	mov	w9, #0x1                   	// #1
  40cf6c:	stur	w9, [x29, #-48]
  40cf70:	sub	x0, x29, #0x20
  40cf74:	bl	40d03c <manager_freep>
  40cf78:	sub	x0, x29, #0x18
  40cf7c:	bl	40d014 <freep>
  40cf80:	ldur	w0, [x29, #-4]
  40cf84:	add	sp, sp, #0x270
  40cf88:	ldr	x28, [sp, #16]
  40cf8c:	ldp	x29, x30, [sp], #32
  40cf90:	ret

000000000040cf94 <static_destruct>:
  40cf94:	sub	sp, sp, #0x20
  40cf98:	stp	x29, x30, [sp, #16]
  40cf9c:	add	x29, sp, #0x10
  40cfa0:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  40cfa4:	ldr	x8, [x8, #160]
  40cfa8:	str	x8, [sp]
  40cfac:	cbnz	x8, 40cfb4 <static_destruct+0x20>
  40cfb0:	b	40d008 <static_destruct+0x74>
  40cfb4:	ldr	x0, [sp]
  40cfb8:	mov	x1, #0x8                   	// #8
  40cfbc:	bl	4160f0 <ALIGN_TO>
  40cfc0:	str	x0, [sp, #8]
  40cfc4:	ldr	x8, [sp, #8]
  40cfc8:	adrp	x9, 49f000 <_DYNAMIC+0x1d0>
  40cfcc:	ldr	x9, [x9, #168]
  40cfd0:	cmp	x8, x9
  40cfd4:	b.cs	40d008 <static_destruct+0x74>  // b.hs, b.nlast
  40cfd8:	ldr	x8, [sp, #8]
  40cfdc:	ldr	x8, [x8, #8]
  40cfe0:	ldr	x9, [sp, #8]
  40cfe4:	ldr	x0, [x9]
  40cfe8:	blr	x8
  40cfec:	ldr	x8, [sp, #8]
  40cff0:	add	x8, x8, #0x10
  40cff4:	mov	x0, x8
  40cff8:	mov	x1, #0x8                   	// #8
  40cffc:	bl	4160f0 <ALIGN_TO>
  40d000:	str	x0, [sp, #8]
  40d004:	b	40cfc4 <static_destruct+0x30>
  40d008:	ldp	x29, x30, [sp, #16]
  40d00c:	add	sp, sp, #0x20
  40d010:	ret

000000000040d014 <freep>:
  40d014:	sub	sp, sp, #0x20
  40d018:	stp	x29, x30, [sp, #16]
  40d01c:	add	x29, sp, #0x10
  40d020:	str	x0, [sp, #8]
  40d024:	ldr	x8, [sp, #8]
  40d028:	ldr	x0, [x8]
  40d02c:	bl	40a530 <free@plt>
  40d030:	ldp	x29, x30, [sp, #16]
  40d034:	add	sp, sp, #0x20
  40d038:	ret

000000000040d03c <manager_freep>:
  40d03c:	sub	sp, sp, #0x20
  40d040:	stp	x29, x30, [sp, #16]
  40d044:	add	x29, sp, #0x10
  40d048:	str	x0, [sp, #8]
  40d04c:	ldr	x8, [sp, #8]
  40d050:	ldr	x8, [x8]
  40d054:	cbz	x8, 40d064 <manager_freep+0x28>
  40d058:	ldr	x8, [sp, #8]
  40d05c:	ldr	x0, [x8]
  40d060:	bl	40edd4 <manager_free>
  40d064:	ldp	x29, x30, [sp, #16]
  40d068:	add	sp, sp, #0x20
  40d06c:	ret

000000000040d070 <parse_argv>:
  40d070:	sub	sp, sp, #0xb0
  40d074:	stp	x29, x30, [sp, #160]
  40d078:	add	x29, sp, #0xa0
  40d07c:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40d080:	add	x8, x8, #0x268
  40d084:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40d088:	add	x9, x9, #0xae0
  40d08c:	add	x9, x9, #0x3
  40d090:	adrp	x10, 463000 <dhcp_lease_set_client_id+0xc4>
  40d094:	add	x10, x10, #0xdf3
  40d098:	adrp	x11, 463000 <dhcp_lease_set_client_id+0xc4>
  40d09c:	add	x11, x11, #0xdc4
  40d0a0:	stur	w0, [x29, #-8]
  40d0a4:	stur	x1, [x29, #-16]
  40d0a8:	str	x8, [sp, #56]
  40d0ac:	str	x9, [sp, #48]
  40d0b0:	str	x10, [sp, #40]
  40d0b4:	str	x11, [sp, #32]
  40d0b8:	ldur	w8, [x29, #-8]
  40d0bc:	cmp	w8, #0x0
  40d0c0:	cset	w8, ge  // ge = tcont
  40d0c4:	mov	w9, #0x1                   	// #1
  40d0c8:	eor	w8, w8, #0x1
  40d0cc:	eor	w8, w8, w9
  40d0d0:	eor	w8, w8, w9
  40d0d4:	and	w8, w8, #0x1
  40d0d8:	mov	w0, w8
  40d0dc:	sxtw	x10, w0
  40d0e0:	cbz	x10, 40d100 <parse_argv+0x90>
  40d0e4:	mov	w0, #0x1                   	// #1
  40d0e8:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40d0ec:	add	x1, x1, #0xdba
  40d0f0:	ldr	x2, [sp, #48]
  40d0f4:	mov	w3, #0x5db                 	// #1499
  40d0f8:	ldr	x4, [sp, #32]
  40d0fc:	bl	40a540 <log_assert_failed_realm@plt>
  40d100:	ldur	x8, [x29, #-16]
  40d104:	cmp	x8, #0x0
  40d108:	cset	w9, ne  // ne = any
  40d10c:	mov	w10, #0x1                   	// #1
  40d110:	eor	w9, w9, #0x1
  40d114:	eor	w9, w9, w10
  40d118:	eor	w9, w9, w10
  40d11c:	and	w9, w9, #0x1
  40d120:	mov	w0, w9
  40d124:	sxtw	x8, w0
  40d128:	cbz	x8, 40d148 <parse_argv+0xd8>
  40d12c:	mov	w0, #0x1                   	// #1
  40d130:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40d134:	add	x1, x1, #0xde1
  40d138:	ldr	x2, [sp, #48]
  40d13c:	mov	w3, #0x5dc                 	// #1500
  40d140:	ldr	x4, [sp, #32]
  40d144:	bl	40a540 <log_assert_failed_realm@plt>
  40d148:	ldur	w0, [x29, #-8]
  40d14c:	ldur	x1, [x29, #-16]
  40d150:	adrp	x2, 463000 <dhcp_lease_set_client_id+0xc4>
  40d154:	add	x2, x2, #0xde6
  40d158:	adrp	x3, 463000 <dhcp_lease_set_client_id+0xc4>
  40d15c:	add	x3, x3, #0x980
  40d160:	mov	x8, xzr
  40d164:	mov	x4, x8
  40d168:	bl	40a550 <getopt_long@plt>
  40d16c:	stur	w0, [x29, #-20]
  40d170:	cmp	w0, #0x0
  40d174:	cset	w9, lt  // lt = tstop
  40d178:	tbnz	w9, #0, 40d4f4 <parse_argv+0x484>
  40d17c:	ldur	w8, [x29, #-20]
  40d180:	subs	w8, w8, #0x3f
  40d184:	mov	w9, w8
  40d188:	ubfx	x9, x9, #0, #32
  40d18c:	cmp	x9, #0x35
  40d190:	str	x9, [sp, #24]
  40d194:	b.hi	40d4d4 <parse_argv+0x464>  // b.pmore
  40d198:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40d19c:	add	x8, x8, #0x860
  40d1a0:	ldr	x11, [sp, #24]
  40d1a4:	ldrsw	x10, [x8, x11, lsl #2]
  40d1a8:	add	x9, x8, x10
  40d1ac:	br	x9
  40d1b0:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40d1b4:	add	x8, x8, #0x22c
  40d1b8:	mov	w9, #0x1                   	// #1
  40d1bc:	str	w9, [x8]
  40d1c0:	b	40d4f0 <parse_argv+0x480>
  40d1c4:	ldr	x8, [sp, #56]
  40d1c8:	ldr	x0, [x8]
  40d1cc:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d1d0:	add	x1, x1, #0x218
  40d1d4:	bl	40f360 <safe_atou>
  40d1d8:	stur	w0, [x29, #-24]
  40d1dc:	ldur	w9, [x29, #-24]
  40d1e0:	cmp	w9, #0x0
  40d1e4:	cset	w9, ge  // ge = tcont
  40d1e8:	tbnz	w9, #0, 40d270 <parse_argv+0x200>
  40d1ec:	mov	w8, #0x4                   	// #4
  40d1f0:	stur	w8, [x29, #-28]
  40d1f4:	ldur	w8, [x29, #-24]
  40d1f8:	stur	w8, [x29, #-32]
  40d1fc:	mov	w8, #0x1                   	// #1
  40d200:	stur	w8, [x29, #-36]
  40d204:	ldur	w0, [x29, #-36]
  40d208:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d20c:	ldur	w8, [x29, #-28]
  40d210:	and	w8, w8, #0x7
  40d214:	cmp	w0, w8
  40d218:	b.lt	40d254 <parse_argv+0x1e4>  // b.tstop
  40d21c:	ldur	w8, [x29, #-36]
  40d220:	ldur	w9, [x29, #-28]
  40d224:	orr	w0, w9, w8, lsl #10
  40d228:	ldur	w1, [x29, #-32]
  40d22c:	ldr	x10, [sp, #56]
  40d230:	ldr	x6, [x10]
  40d234:	ldr	x2, [sp, #48]
  40d238:	mov	w3, #0x5e7                 	// #1511
  40d23c:	ldr	x4, [sp, #40]
  40d240:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40d244:	add	x5, x5, #0xdfe
  40d248:	bl	40a400 <log_internal_realm@plt>
  40d24c:	str	w0, [sp, #20]
  40d250:	b	40d268 <parse_argv+0x1f8>
  40d254:	ldur	w0, [x29, #-32]
  40d258:	bl	40a410 <abs@plt>
  40d25c:	mov	w8, wzr
  40d260:	subs	w8, w8, w0, uxtb
  40d264:	str	w8, [sp, #20]
  40d268:	ldr	w8, [sp, #20]
  40d26c:	stur	w8, [x29, #-40]
  40d270:	b	40d4f0 <parse_argv+0x480>
  40d274:	ldr	x8, [sp, #56]
  40d278:	ldr	x0, [x8]
  40d27c:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d280:	add	x1, x1, #0x220
  40d284:	bl	40a560 <parse_sec@plt>
  40d288:	stur	w0, [x29, #-24]
  40d28c:	ldur	w9, [x29, #-24]
  40d290:	cmp	w9, #0x0
  40d294:	cset	w9, ge  // ge = tcont
  40d298:	tbnz	w9, #0, 40d320 <parse_argv+0x2b0>
  40d29c:	mov	w8, #0x4                   	// #4
  40d2a0:	stur	w8, [x29, #-44]
  40d2a4:	ldur	w8, [x29, #-24]
  40d2a8:	stur	w8, [x29, #-48]
  40d2ac:	mov	w8, #0x1                   	// #1
  40d2b0:	stur	w8, [x29, #-52]
  40d2b4:	ldur	w0, [x29, #-52]
  40d2b8:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d2bc:	ldur	w8, [x29, #-44]
  40d2c0:	and	w8, w8, #0x7
  40d2c4:	cmp	w0, w8
  40d2c8:	b.lt	40d304 <parse_argv+0x294>  // b.tstop
  40d2cc:	ldur	w8, [x29, #-52]
  40d2d0:	ldur	w9, [x29, #-44]
  40d2d4:	orr	w0, w9, w8, lsl #10
  40d2d8:	ldur	w1, [x29, #-48]
  40d2dc:	ldr	x10, [sp, #56]
  40d2e0:	ldr	x6, [x10]
  40d2e4:	ldr	x2, [sp, #48]
  40d2e8:	mov	w3, #0x5ec                 	// #1516
  40d2ec:	ldr	x4, [sp, #40]
  40d2f0:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40d2f4:	add	x5, x5, #0xe37
  40d2f8:	bl	40a400 <log_internal_realm@plt>
  40d2fc:	str	w0, [sp, #16]
  40d300:	b	40d318 <parse_argv+0x2a8>
  40d304:	ldur	w0, [x29, #-48]
  40d308:	bl	40a410 <abs@plt>
  40d30c:	mov	w8, wzr
  40d310:	subs	w8, w8, w0, uxtb
  40d314:	str	w8, [sp, #16]
  40d318:	ldr	w8, [sp, #16]
  40d31c:	stur	w8, [x29, #-56]
  40d320:	b	40d4f0 <parse_argv+0x480>
  40d324:	ldr	x8, [sp, #56]
  40d328:	ldr	x0, [x8]
  40d32c:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d330:	add	x1, x1, #0x0
  40d334:	bl	40a560 <parse_sec@plt>
  40d338:	stur	w0, [x29, #-24]
  40d33c:	ldur	w9, [x29, #-24]
  40d340:	cmp	w9, #0x0
  40d344:	cset	w9, ge  // ge = tcont
  40d348:	tbnz	w9, #0, 40d3d0 <parse_argv+0x360>
  40d34c:	mov	w8, #0x4                   	// #4
  40d350:	stur	w8, [x29, #-60]
  40d354:	ldur	w8, [x29, #-24]
  40d358:	stur	w8, [x29, #-64]
  40d35c:	mov	w8, #0x1                   	// #1
  40d360:	stur	w8, [x29, #-68]
  40d364:	ldur	w0, [x29, #-68]
  40d368:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d36c:	ldur	w8, [x29, #-60]
  40d370:	and	w8, w8, #0x7
  40d374:	cmp	w0, w8
  40d378:	b.lt	40d3b4 <parse_argv+0x344>  // b.tstop
  40d37c:	ldur	w8, [x29, #-68]
  40d380:	ldur	w9, [x29, #-60]
  40d384:	orr	w0, w9, w8, lsl #10
  40d388:	ldur	w1, [x29, #-64]
  40d38c:	ldr	x10, [sp, #56]
  40d390:	ldr	x6, [x10]
  40d394:	ldr	x2, [sp, #48]
  40d398:	mov	w3, #0x5f1                 	// #1521
  40d39c:	ldr	x4, [sp, #40]
  40d3a0:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40d3a4:	add	x5, x5, #0xe6e
  40d3a8:	bl	40a400 <log_internal_realm@plt>
  40d3ac:	str	w0, [sp, #12]
  40d3b0:	b	40d3c8 <parse_argv+0x358>
  40d3b4:	ldur	w0, [x29, #-64]
  40d3b8:	bl	40a410 <abs@plt>
  40d3bc:	mov	w8, wzr
  40d3c0:	subs	w8, w8, w0, uxtb
  40d3c4:	str	w8, [sp, #12]
  40d3c8:	ldr	w8, [sp, #12]
  40d3cc:	stur	w8, [x29, #-72]
  40d3d0:	b	40d4f0 <parse_argv+0x480>
  40d3d4:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40d3d8:	add	x8, x8, #0x228
  40d3dc:	mov	w9, #0x1                   	// #1
  40d3e0:	strb	w9, [x8]
  40d3e4:	b	40d4f0 <parse_argv+0x480>
  40d3e8:	ldr	x8, [sp, #56]
  40d3ec:	ldr	x0, [x8]
  40d3f0:	bl	40a570 <resolve_name_timing_from_string@plt>
  40d3f4:	stur	w0, [x29, #-76]
  40d3f8:	ldur	w9, [x29, #-76]
  40d3fc:	cmp	w9, #0x0
  40d400:	cset	w9, ge  // ge = tcont
  40d404:	tbnz	w9, #0, 40d48c <parse_argv+0x41c>
  40d408:	mov	w8, #0x4                   	// #4
  40d40c:	str	w8, [sp, #80]
  40d410:	str	wzr, [sp, #76]
  40d414:	mov	w8, #0x1                   	// #1
  40d418:	str	w8, [sp, #72]
  40d41c:	ldr	w0, [sp, #72]
  40d420:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d424:	ldr	w8, [sp, #80]
  40d428:	and	w8, w8, #0x7
  40d42c:	cmp	w0, w8
  40d430:	b.lt	40d46c <parse_argv+0x3fc>  // b.tstop
  40d434:	ldr	w8, [sp, #72]
  40d438:	ldr	w9, [sp, #80]
  40d43c:	orr	w0, w9, w8, lsl #10
  40d440:	ldr	w1, [sp, #76]
  40d444:	ldr	x10, [sp, #56]
  40d448:	ldr	x6, [x10]
  40d44c:	ldr	x2, [sp, #48]
  40d450:	mov	w3, #0x5fb                 	// #1531
  40d454:	ldr	x4, [sp, #40]
  40d458:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40d45c:	add	x5, x5, #0xea8
  40d460:	bl	40a400 <log_internal_realm@plt>
  40d464:	str	w0, [sp, #8]
  40d468:	b	40d480 <parse_argv+0x410>
  40d46c:	ldr	w0, [sp, #76]
  40d470:	bl	40a410 <abs@plt>
  40d474:	mov	w8, wzr
  40d478:	subs	w8, w8, w0, uxtb
  40d47c:	str	w8, [sp, #8]
  40d480:	ldr	w8, [sp, #8]
  40d484:	str	w8, [sp, #68]
  40d488:	b	40d49c <parse_argv+0x42c>
  40d48c:	ldur	w8, [x29, #-76]
  40d490:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  40d494:	add	x9, x9, #0x8
  40d498:	str	w8, [x9]
  40d49c:	b	40d4f0 <parse_argv+0x480>
  40d4a0:	bl	40f394 <help>
  40d4a4:	stur	w0, [x29, #-4]
  40d4a8:	b	40d4fc <parse_argv+0x48c>
  40d4ac:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40d4b0:	add	x0, x0, #0xed7
  40d4b4:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40d4b8:	add	x1, x1, #0xedb
  40d4bc:	bl	40a580 <printf@plt>
  40d4c0:	stur	wzr, [x29, #-4]
  40d4c4:	b	40d4fc <parse_argv+0x48c>
  40d4c8:	mov	w8, #0xffffffea            	// #-22
  40d4cc:	stur	w8, [x29, #-4]
  40d4d0:	b	40d4fc <parse_argv+0x48c>
  40d4d4:	mov	w0, #0x1                   	// #1
  40d4d8:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40d4dc:	add	x1, x1, #0xedf
  40d4e0:	ldr	x2, [sp, #48]
  40d4e4:	mov	w3, #0x608                 	// #1544
  40d4e8:	ldr	x4, [sp, #32]
  40d4ec:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  40d4f0:	b	40d148 <parse_argv+0xd8>
  40d4f4:	mov	w8, #0x1                   	// #1
  40d4f8:	stur	w8, [x29, #-4]
  40d4fc:	ldur	w0, [x29, #-4]
  40d500:	ldp	x29, x30, [sp, #160]
  40d504:	add	sp, sp, #0xb0
  40d508:	ret

000000000040d50c <parse_proc_cmdline_item>:
  40d50c:	sub	sp, sp, #0x70
  40d510:	stp	x29, x30, [sp, #96]
  40d514:	add	x29, sp, #0x60
  40d518:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40d51c:	add	x8, x8, #0xae0
  40d520:	add	x8, x8, #0x3
  40d524:	stur	x0, [x29, #-16]
  40d528:	stur	x1, [x29, #-24]
  40d52c:	stur	x2, [x29, #-32]
  40d530:	stur	wzr, [x29, #-36]
  40d534:	str	x8, [sp, #16]
  40d538:	ldur	x8, [x29, #-16]
  40d53c:	cmp	x8, #0x0
  40d540:	cset	w9, ne  // ne = any
  40d544:	mov	w10, #0x1                   	// #1
  40d548:	eor	w9, w9, #0x1
  40d54c:	eor	w9, w9, w10
  40d550:	eor	w9, w9, w10
  40d554:	and	w9, w9, #0x1
  40d558:	mov	w0, w9
  40d55c:	sxtw	x8, w0
  40d560:	cbz	x8, 40d584 <parse_proc_cmdline_item+0x78>
  40d564:	mov	w0, #0x1                   	// #1
  40d568:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d56c:	add	x1, x1, #0x151
  40d570:	ldr	x2, [sp, #16]
  40d574:	mov	w3, #0x585                 	// #1413
  40d578:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40d57c:	add	x4, x4, #0x155
  40d580:	bl	40a540 <log_assert_failed_realm@plt>
  40d584:	ldur	x8, [x29, #-24]
  40d588:	cbnz	x8, 40d594 <parse_proc_cmdline_item+0x88>
  40d58c:	stur	wzr, [x29, #-4]
  40d590:	b	40d808 <parse_proc_cmdline_item+0x2fc>
  40d594:	ldur	x0, [x29, #-16]
  40d598:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d59c:	add	x1, x1, #0x195
  40d5a0:	bl	40a5a0 <proc_cmdline_key_streq@plt>
  40d5a4:	tbnz	w0, #0, 40d5ac <parse_proc_cmdline_item+0xa0>
  40d5a8:	b	40d5f4 <parse_proc_cmdline_item+0xe8>
  40d5ac:	ldur	x0, [x29, #-16]
  40d5b0:	ldur	x1, [x29, #-24]
  40d5b4:	bl	40f454 <proc_cmdline_value_missing>
  40d5b8:	tbnz	w0, #0, 40d5c0 <parse_proc_cmdline_item+0xb4>
  40d5bc:	b	40d5c8 <parse_proc_cmdline_item+0xbc>
  40d5c0:	stur	wzr, [x29, #-4]
  40d5c4:	b	40d808 <parse_proc_cmdline_item+0x2fc>
  40d5c8:	ldur	x0, [x29, #-24]
  40d5cc:	bl	40a5b0 <log_level_from_string@plt>
  40d5d0:	stur	w0, [x29, #-36]
  40d5d4:	ldur	w8, [x29, #-36]
  40d5d8:	cmp	w8, #0x0
  40d5dc:	cset	w8, lt  // lt = tstop
  40d5e0:	tbnz	w8, #0, 40d5f0 <parse_proc_cmdline_item+0xe4>
  40d5e4:	ldur	w1, [x29, #-36]
  40d5e8:	mov	w0, #0x1                   	// #1
  40d5ec:	bl	40a420 <log_set_max_level_realm@plt>
  40d5f0:	b	40d76c <parse_proc_cmdline_item+0x260>
  40d5f4:	ldur	x0, [x29, #-16]
  40d5f8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d5fc:	add	x1, x1, #0x1a7
  40d600:	bl	40a5a0 <proc_cmdline_key_streq@plt>
  40d604:	tbnz	w0, #0, 40d60c <parse_proc_cmdline_item+0x100>
  40d608:	b	40d640 <parse_proc_cmdline_item+0x134>
  40d60c:	ldur	x0, [x29, #-16]
  40d610:	ldur	x1, [x29, #-24]
  40d614:	bl	40f454 <proc_cmdline_value_missing>
  40d618:	tbnz	w0, #0, 40d620 <parse_proc_cmdline_item+0x114>
  40d61c:	b	40d628 <parse_proc_cmdline_item+0x11c>
  40d620:	stur	wzr, [x29, #-4]
  40d624:	b	40d808 <parse_proc_cmdline_item+0x2fc>
  40d628:	ldur	x0, [x29, #-24]
  40d62c:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d630:	add	x1, x1, #0x0
  40d634:	bl	40a560 <parse_sec@plt>
  40d638:	stur	w0, [x29, #-36]
  40d63c:	b	40d76c <parse_proc_cmdline_item+0x260>
  40d640:	ldur	x0, [x29, #-16]
  40d644:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d648:	add	x1, x1, #0x1ba
  40d64c:	bl	40a5a0 <proc_cmdline_key_streq@plt>
  40d650:	tbnz	w0, #0, 40d658 <parse_proc_cmdline_item+0x14c>
  40d654:	b	40d68c <parse_proc_cmdline_item+0x180>
  40d658:	ldur	x0, [x29, #-16]
  40d65c:	ldur	x1, [x29, #-24]
  40d660:	bl	40f454 <proc_cmdline_value_missing>
  40d664:	tbnz	w0, #0, 40d66c <parse_proc_cmdline_item+0x160>
  40d668:	b	40d674 <parse_proc_cmdline_item+0x168>
  40d66c:	stur	wzr, [x29, #-4]
  40d670:	b	40d808 <parse_proc_cmdline_item+0x2fc>
  40d674:	ldur	x0, [x29, #-24]
  40d678:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d67c:	add	x1, x1, #0x218
  40d680:	bl	40f360 <safe_atou>
  40d684:	stur	w0, [x29, #-36]
  40d688:	b	40d76c <parse_proc_cmdline_item+0x260>
  40d68c:	ldur	x0, [x29, #-16]
  40d690:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d694:	add	x1, x1, #0x1cc
  40d698:	bl	40a5a0 <proc_cmdline_key_streq@plt>
  40d69c:	tbnz	w0, #0, 40d6a4 <parse_proc_cmdline_item+0x198>
  40d6a0:	b	40d6d8 <parse_proc_cmdline_item+0x1cc>
  40d6a4:	ldur	x0, [x29, #-16]
  40d6a8:	ldur	x1, [x29, #-24]
  40d6ac:	bl	40f454 <proc_cmdline_value_missing>
  40d6b0:	tbnz	w0, #0, 40d6b8 <parse_proc_cmdline_item+0x1ac>
  40d6b4:	b	40d6c0 <parse_proc_cmdline_item+0x1b4>
  40d6b8:	stur	wzr, [x29, #-4]
  40d6bc:	b	40d808 <parse_proc_cmdline_item+0x2fc>
  40d6c0:	ldur	x0, [x29, #-24]
  40d6c4:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  40d6c8:	add	x1, x1, #0x220
  40d6cc:	bl	40a560 <parse_sec@plt>
  40d6d0:	stur	w0, [x29, #-36]
  40d6d4:	b	40d76c <parse_proc_cmdline_item+0x260>
  40d6d8:	ldur	x0, [x29, #-16]
  40d6dc:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d6e0:	add	x1, x1, #0x1dc
  40d6e4:	bl	40f530 <startswith>
  40d6e8:	cbz	x0, 40d76c <parse_proc_cmdline_item+0x260>
  40d6ec:	mov	w8, #0x4                   	// #4
  40d6f0:	stur	w8, [x29, #-40]
  40d6f4:	stur	wzr, [x29, #-44]
  40d6f8:	mov	w8, #0x1                   	// #1
  40d6fc:	str	w8, [sp, #48]
  40d700:	ldr	w0, [sp, #48]
  40d704:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d708:	ldur	w8, [x29, #-40]
  40d70c:	and	w8, w8, #0x7
  40d710:	cmp	w0, w8
  40d714:	b.lt	40d750 <parse_proc_cmdline_item+0x244>  // b.tstop
  40d718:	ldr	w8, [sp, #48]
  40d71c:	ldur	w9, [x29, #-40]
  40d720:	orr	w0, w9, w8, lsl #10
  40d724:	ldur	w1, [x29, #-44]
  40d728:	ldur	x6, [x29, #-16]
  40d72c:	ldr	x2, [sp, #16]
  40d730:	mov	w3, #0x5a9                 	// #1449
  40d734:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40d738:	add	x4, x4, #0x1e2
  40d73c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40d740:	add	x5, x5, #0x1fa
  40d744:	bl	40a400 <log_internal_realm@plt>
  40d748:	str	w0, [sp, #12]
  40d74c:	b	40d764 <parse_proc_cmdline_item+0x258>
  40d750:	ldur	w0, [x29, #-44]
  40d754:	bl	40a410 <abs@plt>
  40d758:	mov	w8, wzr
  40d75c:	subs	w8, w8, w0, uxtb
  40d760:	str	w8, [sp, #12]
  40d764:	ldr	w8, [sp, #12]
  40d768:	str	w8, [sp, #44]
  40d76c:	ldur	w8, [x29, #-36]
  40d770:	cmp	w8, #0x0
  40d774:	cset	w8, ge  // ge = tcont
  40d778:	tbnz	w8, #0, 40d804 <parse_proc_cmdline_item+0x2f8>
  40d77c:	mov	w8, #0x4                   	// #4
  40d780:	str	w8, [sp, #40]
  40d784:	ldur	w8, [x29, #-36]
  40d788:	str	w8, [sp, #36]
  40d78c:	mov	w8, #0x1                   	// #1
  40d790:	str	w8, [sp, #32]
  40d794:	ldr	w0, [sp, #32]
  40d798:	bl	40a3f0 <log_get_max_level_realm@plt>
  40d79c:	ldr	w8, [sp, #40]
  40d7a0:	and	w8, w8, #0x7
  40d7a4:	cmp	w0, w8
  40d7a8:	b.lt	40d7e8 <parse_proc_cmdline_item+0x2dc>  // b.tstop
  40d7ac:	ldr	w8, [sp, #32]
  40d7b0:	ldr	w9, [sp, #40]
  40d7b4:	orr	w0, w9, w8, lsl #10
  40d7b8:	ldr	w1, [sp, #36]
  40d7bc:	ldur	x6, [x29, #-16]
  40d7c0:	ldur	x7, [x29, #-24]
  40d7c4:	ldr	x2, [sp, #16]
  40d7c8:	mov	w3, #0x5ac                 	// #1452
  40d7cc:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40d7d0:	add	x4, x4, #0x1e2
  40d7d4:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40d7d8:	add	x5, x5, #0x231
  40d7dc:	bl	40a400 <log_internal_realm@plt>
  40d7e0:	str	w0, [sp, #8]
  40d7e4:	b	40d7fc <parse_proc_cmdline_item+0x2f0>
  40d7e8:	ldr	w0, [sp, #36]
  40d7ec:	bl	40a410 <abs@plt>
  40d7f0:	mov	w8, wzr
  40d7f4:	subs	w8, w8, w0, uxtb
  40d7f8:	str	w8, [sp, #8]
  40d7fc:	ldr	w8, [sp, #8]
  40d800:	str	w8, [sp, #28]
  40d804:	stur	wzr, [x29, #-4]
  40d808:	ldur	w0, [x29, #-4]
  40d80c:	ldp	x29, x30, [sp, #96]
  40d810:	add	sp, sp, #0x70
  40d814:	ret

000000000040d818 <listen_fds>:
  40d818:	sub	sp, sp, #0x40
  40d81c:	stp	x29, x30, [sp, #48]
  40d820:	add	x29, sp, #0x30
  40d824:	mov	w8, #0xffffffff            	// #-1
  40d828:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40d82c:	add	x9, x9, #0xae0
  40d830:	add	x9, x9, #0x3
  40d834:	stur	x0, [x29, #-16]
  40d838:	str	x1, [sp, #24]
  40d83c:	str	w8, [sp, #20]
  40d840:	str	w8, [sp, #16]
  40d844:	str	x9, [sp]
  40d848:	ldur	x8, [x29, #-16]
  40d84c:	cmp	x8, #0x0
  40d850:	cset	w9, ne  // ne = any
  40d854:	mov	w10, #0x1                   	// #1
  40d858:	eor	w9, w9, #0x1
  40d85c:	eor	w9, w9, w10
  40d860:	eor	w9, w9, w10
  40d864:	and	w9, w9, #0x1
  40d868:	mov	w0, w9
  40d86c:	sxtw	x8, w0
  40d870:	cbz	x8, 40d894 <listen_fds+0x7c>
  40d874:	mov	w0, #0x1                   	// #1
  40d878:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d87c:	add	x1, x1, #0x2cd
  40d880:	ldr	x2, [sp]
  40d884:	mov	w3, #0x55c                 	// #1372
  40d888:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40d88c:	add	x4, x4, #0x2d6
  40d890:	bl	40a540 <log_assert_failed_realm@plt>
  40d894:	ldr	x8, [sp, #24]
  40d898:	cmp	x8, #0x0
  40d89c:	cset	w9, ne  // ne = any
  40d8a0:	mov	w10, #0x1                   	// #1
  40d8a4:	eor	w9, w9, #0x1
  40d8a8:	eor	w9, w9, w10
  40d8ac:	eor	w9, w9, w10
  40d8b0:	and	w9, w9, #0x1
  40d8b4:	mov	w0, w9
  40d8b8:	sxtw	x8, w0
  40d8bc:	cbz	x8, 40d8e0 <listen_fds+0xc8>
  40d8c0:	mov	w0, #0x1                   	// #1
  40d8c4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40d8c8:	add	x1, x1, #0x2f3
  40d8cc:	ldr	x2, [sp]
  40d8d0:	mov	w3, #0x55d                 	// #1373
  40d8d4:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40d8d8:	add	x4, x4, #0x2d6
  40d8dc:	bl	40a540 <log_assert_failed_realm@plt>
  40d8e0:	mov	w0, #0x1                   	// #1
  40d8e4:	bl	40a5c0 <sd_listen_fds@plt>
  40d8e8:	str	w0, [sp, #8]
  40d8ec:	ldr	w8, [sp, #8]
  40d8f0:	cmp	w8, #0x0
  40d8f4:	cset	w8, ge  // ge = tcont
  40d8f8:	tbnz	w8, #0, 40d908 <listen_fds+0xf0>
  40d8fc:	ldr	w8, [sp, #8]
  40d900:	stur	w8, [x29, #-4]
  40d904:	b	40d9ec <listen_fds+0x1d4>
  40d908:	mov	w8, #0x3                   	// #3
  40d90c:	str	w8, [sp, #12]
  40d910:	ldr	w8, [sp, #12]
  40d914:	ldr	w9, [sp, #8]
  40d918:	add	w9, w9, #0x3
  40d91c:	cmp	w8, w9
  40d920:	b.ge	40d9d0 <listen_fds+0x1b8>  // b.tcont
  40d924:	ldr	w0, [sp, #12]
  40d928:	mov	w1, #0x1                   	// #1
  40d92c:	mov	w2, #0x5                   	// #5
  40d930:	mov	w3, #0xffffffff            	// #-1
  40d934:	bl	40a5d0 <sd_is_socket@plt>
  40d938:	cmp	w0, #0x0
  40d93c:	cset	w8, le
  40d940:	tbnz	w8, #0, 40d96c <listen_fds+0x154>
  40d944:	ldr	w8, [sp, #20]
  40d948:	cmp	w8, #0x0
  40d94c:	cset	w8, lt  // lt = tstop
  40d950:	tbnz	w8, #0, 40d960 <listen_fds+0x148>
  40d954:	mov	w8, #0xffffffea            	// #-22
  40d958:	stur	w8, [x29, #-4]
  40d95c:	b	40d9ec <listen_fds+0x1d4>
  40d960:	ldr	w8, [sp, #12]
  40d964:	str	w8, [sp, #20]
  40d968:	b	40d9c0 <listen_fds+0x1a8>
  40d96c:	ldr	w0, [sp, #12]
  40d970:	mov	w1, #0x10                  	// #16
  40d974:	mov	w2, #0x3                   	// #3
  40d978:	mov	w3, #0xffffffff            	// #-1
  40d97c:	bl	40a5d0 <sd_is_socket@plt>
  40d980:	cmp	w0, #0x0
  40d984:	cset	w8, le
  40d988:	tbnz	w8, #0, 40d9b4 <listen_fds+0x19c>
  40d98c:	ldr	w8, [sp, #16]
  40d990:	cmp	w8, #0x0
  40d994:	cset	w8, lt  // lt = tstop
  40d998:	tbnz	w8, #0, 40d9a8 <listen_fds+0x190>
  40d99c:	mov	w8, #0xffffffea            	// #-22
  40d9a0:	stur	w8, [x29, #-4]
  40d9a4:	b	40d9ec <listen_fds+0x1d4>
  40d9a8:	ldr	w8, [sp, #12]
  40d9ac:	str	w8, [sp, #16]
  40d9b0:	b	40d9c0 <listen_fds+0x1a8>
  40d9b4:	mov	w8, #0xffffffea            	// #-22
  40d9b8:	stur	w8, [x29, #-4]
  40d9bc:	b	40d9ec <listen_fds+0x1d4>
  40d9c0:	ldr	w8, [sp, #12]
  40d9c4:	add	w8, w8, #0x1
  40d9c8:	str	w8, [sp, #12]
  40d9cc:	b	40d910 <listen_fds+0xf8>
  40d9d0:	ldr	w8, [sp, #20]
  40d9d4:	ldur	x9, [x29, #-16]
  40d9d8:	str	w8, [x9]
  40d9dc:	ldr	w8, [sp, #16]
  40d9e0:	ldr	x9, [sp, #24]
  40d9e4:	str	w8, [x9]
  40d9e8:	stur	wzr, [x29, #-4]
  40d9ec:	ldur	w0, [x29, #-4]
  40d9f0:	ldp	x29, x30, [sp, #48]
  40d9f4:	add	sp, sp, #0x40
  40d9f8:	ret

000000000040d9fc <manager_new>:
  40d9fc:	sub	sp, sp, #0x160
  40da00:	stp	x29, x30, [sp, #320]
  40da04:	str	x28, [sp, #336]
  40da08:	add	x29, sp, #0x140
  40da0c:	mov	x8, xzr
  40da10:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40da14:	add	x9, x9, #0xae0
  40da18:	add	x9, x9, #0x3
  40da1c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  40da20:	add	x10, x10, #0x337
  40da24:	stur	x0, [x29, #-16]
  40da28:	stur	w1, [x29, #-20]
  40da2c:	stur	w2, [x29, #-24]
  40da30:	stur	x3, [x29, #-32]
  40da34:	stur	x8, [x29, #-40]
  40da38:	str	x9, [sp, #56]
  40da3c:	str	x10, [sp, #48]
  40da40:	ldur	x8, [x29, #-16]
  40da44:	cmp	x8, #0x0
  40da48:	cset	w9, ne  // ne = any
  40da4c:	mov	w10, #0x1                   	// #1
  40da50:	eor	w9, w9, #0x1
  40da54:	eor	w9, w9, w10
  40da58:	eor	w9, w9, w10
  40da5c:	and	w9, w9, #0x1
  40da60:	mov	w0, w9
  40da64:	sxtw	x8, w0
  40da68:	cbz	x8, 40da8c <manager_new+0x90>
  40da6c:	mov	w0, #0x1                   	// #1
  40da70:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40da74:	add	x1, x1, #0x2ff
  40da78:	ldr	x2, [sp, #56]
  40da7c:	mov	w3, #0x614                 	// #1556
  40da80:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40da84:	add	x4, x4, #0x303
  40da88:	bl	40a540 <log_assert_failed_realm@plt>
  40da8c:	mov	x0, #0x80                  	// #128
  40da90:	mov	x1, #0x1                   	// #1
  40da94:	bl	40f590 <malloc_multiply>
  40da98:	stur	x0, [x29, #-40]
  40da9c:	ldur	x8, [x29, #-40]
  40daa0:	cbnz	x8, 40dad0 <manager_new+0xd4>
  40daa4:	mov	w8, #0x1                   	// #1
  40daa8:	mov	w0, w8
  40daac:	ldr	x1, [sp, #56]
  40dab0:	mov	w2, #0x618                 	// #1560
  40dab4:	ldr	x3, [sp, #48]
  40dab8:	str	w8, [sp, #44]
  40dabc:	bl	40a5e0 <log_oom_internal@plt>
  40dac0:	stur	w0, [x29, #-4]
  40dac4:	ldr	w8, [sp, #44]
  40dac8:	stur	w8, [x29, #-48]
  40dacc:	b	40de38 <manager_new+0x43c>
  40dad0:	ldur	x0, [x29, #-40]
  40dad4:	add	x8, sp, #0x90
  40dad8:	str	x0, [sp, #32]
  40dadc:	mov	x0, x8
  40dae0:	mov	w9, wzr
  40dae4:	mov	w1, w9
  40dae8:	mov	x10, #0x80                  	// #128
  40daec:	mov	x2, x10
  40daf0:	str	x8, [sp, #24]
  40daf4:	str	x10, [sp, #16]
  40daf8:	bl	40a5f0 <memset@plt>
  40dafc:	ldur	x8, [x29, #-32]
  40db00:	ldr	x10, [sp, #24]
  40db04:	str	x8, [x10, #24]
  40db08:	mov	w9, #0xffffffff            	// #-1
  40db0c:	str	w9, [sp, #224]
  40db10:	str	w9, [sp, #228]
  40db14:	str	w9, [sp, #232]
  40db18:	ldr	x0, [sp, #32]
  40db1c:	mov	x1, x10
  40db20:	ldr	x2, [sp, #16]
  40db24:	bl	40a600 <memcpy@plt>
  40db28:	ldur	x8, [x29, #-40]
  40db2c:	add	x0, x8, #0x48
  40db30:	ldur	w1, [x29, #-20]
  40db34:	bl	416120 <udev_ctrl_new_from_fd>
  40db38:	stur	w0, [x29, #-44]
  40db3c:	ldur	w9, [x29, #-44]
  40db40:	cmp	w9, #0x0
  40db44:	cset	w9, ge  // ge = tcont
  40db48:	tbnz	w9, #0, 40dbdc <manager_new+0x1e0>
  40db4c:	mov	w8, #0x3                   	// #3
  40db50:	str	w8, [sp, #140]
  40db54:	ldur	w8, [x29, #-44]
  40db58:	str	w8, [sp, #136]
  40db5c:	mov	w8, #0x1                   	// #1
  40db60:	str	w8, [sp, #132]
  40db64:	ldr	w0, [sp, #132]
  40db68:	bl	40a3f0 <log_get_max_level_realm@plt>
  40db6c:	ldr	w8, [sp, #140]
  40db70:	and	w8, w8, #0x7
  40db74:	cmp	w0, w8
  40db78:	b.lt	40dbac <manager_new+0x1b0>  // b.tstop
  40db7c:	ldr	w8, [sp, #132]
  40db80:	ldr	w9, [sp, #140]
  40db84:	orr	w0, w9, w8, lsl #10
  40db88:	ldr	w1, [sp, #136]
  40db8c:	ldr	x2, [sp, #56]
  40db90:	mov	w3, #0x622                 	// #1570
  40db94:	ldr	x4, [sp, #48]
  40db98:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40db9c:	add	x5, x5, #0x343
  40dba0:	bl	40a400 <log_internal_realm@plt>
  40dba4:	str	w0, [sp, #12]
  40dba8:	b	40dbc0 <manager_new+0x1c4>
  40dbac:	ldr	w0, [sp, #136]
  40dbb0:	bl	40a410 <abs@plt>
  40dbb4:	mov	w8, wzr
  40dbb8:	subs	w8, w8, w0, uxtb
  40dbbc:	str	w8, [sp, #12]
  40dbc0:	ldr	w8, [sp, #12]
  40dbc4:	str	w8, [sp, #128]
  40dbc8:	ldr	w8, [sp, #128]
  40dbcc:	stur	w8, [x29, #-4]
  40dbd0:	mov	w8, #0x1                   	// #1
  40dbd4:	stur	w8, [x29, #-48]
  40dbd8:	b	40de38 <manager_new+0x43c>
  40dbdc:	ldur	x8, [x29, #-40]
  40dbe0:	ldr	x0, [x8, #72]
  40dbe4:	bl	41664c <udev_ctrl_enable_receiving>
  40dbe8:	stur	w0, [x29, #-44]
  40dbec:	ldur	w9, [x29, #-44]
  40dbf0:	cmp	w9, #0x0
  40dbf4:	cset	w9, ge  // ge = tcont
  40dbf8:	tbnz	w9, #0, 40dc8c <manager_new+0x290>
  40dbfc:	mov	w8, #0x3                   	// #3
  40dc00:	str	w8, [sp, #124]
  40dc04:	ldur	w8, [x29, #-44]
  40dc08:	str	w8, [sp, #120]
  40dc0c:	mov	w8, #0x1                   	// #1
  40dc10:	str	w8, [sp, #116]
  40dc14:	ldr	w0, [sp, #116]
  40dc18:	bl	40a3f0 <log_get_max_level_realm@plt>
  40dc1c:	ldr	w8, [sp, #124]
  40dc20:	and	w8, w8, #0x7
  40dc24:	cmp	w0, w8
  40dc28:	b.lt	40dc5c <manager_new+0x260>  // b.tstop
  40dc2c:	ldr	w8, [sp, #116]
  40dc30:	ldr	w9, [sp, #124]
  40dc34:	orr	w0, w9, w8, lsl #10
  40dc38:	ldr	w1, [sp, #120]
  40dc3c:	ldr	x2, [sp, #56]
  40dc40:	mov	w3, #0x626                 	// #1574
  40dc44:	ldr	x4, [sp, #48]
  40dc48:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40dc4c:	add	x5, x5, #0x370
  40dc50:	bl	40a400 <log_internal_realm@plt>
  40dc54:	str	w0, [sp, #8]
  40dc58:	b	40dc70 <manager_new+0x274>
  40dc5c:	ldr	w0, [sp, #120]
  40dc60:	bl	40a410 <abs@plt>
  40dc64:	mov	w8, wzr
  40dc68:	subs	w8, w8, w0, uxtb
  40dc6c:	str	w8, [sp, #8]
  40dc70:	ldr	w8, [sp, #8]
  40dc74:	str	w8, [sp, #112]
  40dc78:	ldr	w8, [sp, #112]
  40dc7c:	stur	w8, [x29, #-4]
  40dc80:	mov	w8, #0x1                   	// #1
  40dc84:	stur	w8, [x29, #-48]
  40dc88:	b	40de38 <manager_new+0x43c>
  40dc8c:	ldur	x8, [x29, #-40]
  40dc90:	add	x0, x8, #0x40
  40dc94:	ldur	w2, [x29, #-24]
  40dc98:	mov	w1, #0x1                   	// #1
  40dc9c:	bl	40a610 <device_monitor_new_full@plt>
  40dca0:	stur	w0, [x29, #-44]
  40dca4:	ldur	w9, [x29, #-44]
  40dca8:	cmp	w9, #0x0
  40dcac:	cset	w9, ge  // ge = tcont
  40dcb0:	tbnz	w9, #0, 40dd44 <manager_new+0x348>
  40dcb4:	mov	w8, #0x3                   	// #3
  40dcb8:	str	w8, [sp, #108]
  40dcbc:	ldur	w8, [x29, #-44]
  40dcc0:	str	w8, [sp, #104]
  40dcc4:	mov	w8, #0x1                   	// #1
  40dcc8:	str	w8, [sp, #100]
  40dccc:	ldr	w0, [sp, #100]
  40dcd0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40dcd4:	ldr	w8, [sp, #108]
  40dcd8:	and	w8, w8, #0x7
  40dcdc:	cmp	w0, w8
  40dce0:	b.lt	40dd14 <manager_new+0x318>  // b.tstop
  40dce4:	ldr	w8, [sp, #100]
  40dce8:	ldr	w9, [sp, #108]
  40dcec:	orr	w0, w9, w8, lsl #10
  40dcf0:	ldr	w1, [sp, #104]
  40dcf4:	ldr	x2, [sp, #56]
  40dcf8:	mov	w3, #0x62a                 	// #1578
  40dcfc:	ldr	x4, [sp, #48]
  40dd00:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40dd04:	add	x5, x5, #0x397
  40dd08:	bl	40a400 <log_internal_realm@plt>
  40dd0c:	str	w0, [sp, #4]
  40dd10:	b	40dd28 <manager_new+0x32c>
  40dd14:	ldr	w0, [sp, #104]
  40dd18:	bl	40a410 <abs@plt>
  40dd1c:	mov	w8, wzr
  40dd20:	subs	w8, w8, w0, uxtb
  40dd24:	str	w8, [sp, #4]
  40dd28:	ldr	w8, [sp, #4]
  40dd2c:	str	w8, [sp, #96]
  40dd30:	ldr	w8, [sp, #96]
  40dd34:	stur	w8, [x29, #-4]
  40dd38:	mov	w8, #0x1                   	// #1
  40dd3c:	stur	w8, [x29, #-48]
  40dd40:	b	40de38 <manager_new+0x43c>
  40dd44:	ldur	x8, [x29, #-40]
  40dd48:	ldr	x0, [x8, #64]
  40dd4c:	mov	x1, #0x8000000             	// #134217728
  40dd50:	bl	40a620 <sd_device_monitor_set_receive_buffer_size@plt>
  40dd54:	ldur	x8, [x29, #-40]
  40dd58:	ldr	x8, [x8, #64]
  40dd5c:	mov	x0, x8
  40dd60:	bl	40a630 <device_monitor_enable_receiving@plt>
  40dd64:	stur	w0, [x29, #-44]
  40dd68:	ldur	w9, [x29, #-44]
  40dd6c:	cmp	w9, #0x0
  40dd70:	cset	w9, ge  // ge = tcont
  40dd74:	tbnz	w9, #0, 40de08 <manager_new+0x40c>
  40dd78:	mov	w8, #0x3                   	// #3
  40dd7c:	str	w8, [sp, #92]
  40dd80:	ldur	w8, [x29, #-44]
  40dd84:	str	w8, [sp, #88]
  40dd88:	mov	w8, #0x1                   	// #1
  40dd8c:	str	w8, [sp, #84]
  40dd90:	ldr	w0, [sp, #84]
  40dd94:	bl	40a3f0 <log_get_max_level_realm@plt>
  40dd98:	ldr	w8, [sp, #92]
  40dd9c:	and	w8, w8, #0x7
  40dda0:	cmp	w0, w8
  40dda4:	b.lt	40ddd8 <manager_new+0x3dc>  // b.tstop
  40dda8:	ldr	w8, [sp, #84]
  40ddac:	ldr	w9, [sp, #92]
  40ddb0:	orr	w0, w9, w8, lsl #10
  40ddb4:	ldr	w1, [sp, #88]
  40ddb8:	ldr	x2, [sp, #56]
  40ddbc:	mov	w3, #0x630                 	// #1584
  40ddc0:	ldr	x4, [sp, #48]
  40ddc4:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40ddc8:	add	x5, x5, #0x3bf
  40ddcc:	bl	40a400 <log_internal_realm@plt>
  40ddd0:	str	w0, [sp]
  40ddd4:	b	40ddec <manager_new+0x3f0>
  40ddd8:	ldr	w0, [sp, #88]
  40dddc:	bl	40a410 <abs@plt>
  40dde0:	mov	w8, wzr
  40dde4:	subs	w8, w8, w0, uxtb
  40dde8:	str	w8, [sp]
  40ddec:	ldr	w8, [sp]
  40ddf0:	str	w8, [sp, #80]
  40ddf4:	ldr	w8, [sp, #80]
  40ddf8:	stur	w8, [x29, #-4]
  40ddfc:	mov	w8, #0x1                   	// #1
  40de00:	stur	w8, [x29, #-48]
  40de04:	b	40de38 <manager_new+0x43c>
  40de08:	ldur	x8, [x29, #-40]
  40de0c:	str	x8, [sp, #72]
  40de10:	mov	x8, xzr
  40de14:	stur	x8, [x29, #-40]
  40de18:	ldr	x8, [sp, #72]
  40de1c:	str	x8, [sp, #64]
  40de20:	ldr	x8, [sp, #64]
  40de24:	ldur	x9, [x29, #-16]
  40de28:	str	x8, [x9]
  40de2c:	stur	wzr, [x29, #-4]
  40de30:	mov	w10, #0x1                   	// #1
  40de34:	stur	w10, [x29, #-48]
  40de38:	sub	x0, x29, #0x28
  40de3c:	bl	40d03c <manager_freep>
  40de40:	ldur	w0, [x29, #-4]
  40de44:	ldr	x28, [sp, #336]
  40de48:	ldp	x29, x30, [sp, #320]
  40de4c:	add	sp, sp, #0x160
  40de50:	ret

000000000040de54 <make_null_stdio>:
  40de54:	stp	x29, x30, [sp, #-16]!
  40de58:	mov	x29, sp
  40de5c:	mov	w8, #0xffffffff            	// #-1
  40de60:	mov	w0, w8
  40de64:	mov	w1, w8
  40de68:	mov	w2, w8
  40de6c:	bl	40a640 <rearrange_stdio@plt>
  40de70:	ldp	x29, x30, [sp], #16
  40de74:	ret

000000000040de78 <main_loop>:
  40de78:	sub	sp, sp, #0x1f0
  40de7c:	stp	x29, x30, [sp, #464]
  40de80:	str	x28, [sp, #480]
  40de84:	add	x29, sp, #0x1d0
  40de88:	mov	w8, #0x1                   	// #1
  40de8c:	mov	w1, #0x2                   	// #2
  40de90:	movk	w1, #0x8, lsl #16
  40de94:	mov	w9, wzr
  40de98:	adrp	x10, 463000 <dhcp_lease_set_client_id+0xc4>
  40de9c:	add	x10, x10, #0xae0
  40dea0:	add	x10, x10, #0x3
  40dea4:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  40dea8:	add	x11, x11, #0x3e1
  40deac:	stur	x0, [x29, #-16]
  40deb0:	str	w8, [sp, #116]
  40deb4:	str	w1, [sp, #112]
  40deb8:	str	w9, [sp, #108]
  40debc:	str	x10, [sp, #96]
  40dec0:	str	x11, [sp, #88]
  40dec4:	bl	40a650 <getpid_cached@plt>
  40dec8:	ldur	x10, [x29, #-16]
  40decc:	str	w0, [x10, #32]
  40ded0:	ldur	x10, [x29, #-16]
  40ded4:	add	x3, x10, #0x54
  40ded8:	ldr	w0, [sp, #116]
  40dedc:	ldr	w1, [sp, #112]
  40dee0:	ldr	w2, [sp, #108]
  40dee4:	bl	40a660 <socketpair@plt>
  40dee8:	stur	w0, [x29, #-24]
  40deec:	ldur	w8, [x29, #-24]
  40def0:	cmp	w8, #0x0
  40def4:	cset	w8, ge  // ge = tcont
  40def8:	tbnz	w8, #0, 40df88 <main_loop+0x110>
  40defc:	mov	w8, #0x3                   	// #3
  40df00:	stur	w8, [x29, #-28]
  40df04:	bl	40a480 <__errno_location@plt>
  40df08:	ldr	w8, [x0]
  40df0c:	stur	w8, [x29, #-32]
  40df10:	mov	w8, #0x1                   	// #1
  40df14:	stur	w8, [x29, #-36]
  40df18:	ldur	w0, [x29, #-36]
  40df1c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40df20:	ldur	w8, [x29, #-28]
  40df24:	and	w8, w8, #0x7
  40df28:	cmp	w0, w8
  40df2c:	b.lt	40df60 <main_loop+0xe8>  // b.tstop
  40df30:	ldur	w8, [x29, #-36]
  40df34:	ldur	w9, [x29, #-28]
  40df38:	orr	w0, w9, w8, lsl #10
  40df3c:	ldur	w1, [x29, #-32]
  40df40:	ldr	x2, [sp, #96]
  40df44:	mov	w3, #0x63f                 	// #1599
  40df48:	ldr	x4, [sp, #88]
  40df4c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40df50:	add	x5, x5, #0x3eb
  40df54:	bl	40a400 <log_internal_realm@plt>
  40df58:	str	w0, [sp, #84]
  40df5c:	b	40df74 <main_loop+0xfc>
  40df60:	ldur	w0, [x29, #-32]
  40df64:	bl	40a410 <abs@plt>
  40df68:	mov	w8, wzr
  40df6c:	subs	w8, w8, w0, uxtb
  40df70:	str	w8, [sp, #84]
  40df74:	ldr	w8, [sp, #84]
  40df78:	stur	w8, [x29, #-40]
  40df7c:	ldur	w8, [x29, #-40]
  40df80:	stur	w8, [x29, #-4]
  40df84:	b	40edc0 <main_loop+0xf48>
  40df88:	ldur	x8, [x29, #-16]
  40df8c:	ldr	w9, [x8, #84]
  40df90:	stur	w9, [x29, #-20]
  40df94:	ldur	w0, [x29, #-20]
  40df98:	mov	w9, #0x1                   	// #1
  40df9c:	mov	w1, w9
  40dfa0:	mov	w2, #0x10                  	// #16
  40dfa4:	mov	w3, w9
  40dfa8:	bl	40f674 <setsockopt_int>
  40dfac:	stur	w0, [x29, #-24]
  40dfb0:	ldur	w9, [x29, #-24]
  40dfb4:	cmp	w9, #0x0
  40dfb8:	cset	w9, ge  // ge = tcont
  40dfbc:	tbnz	w9, #0, 40e048 <main_loop+0x1d0>
  40dfc0:	mov	w8, #0x3                   	// #3
  40dfc4:	stur	w8, [x29, #-44]
  40dfc8:	ldur	w8, [x29, #-24]
  40dfcc:	stur	w8, [x29, #-48]
  40dfd0:	mov	w8, #0x1                   	// #1
  40dfd4:	stur	w8, [x29, #-52]
  40dfd8:	ldur	w0, [x29, #-52]
  40dfdc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40dfe0:	ldur	w8, [x29, #-44]
  40dfe4:	and	w8, w8, #0x7
  40dfe8:	cmp	w0, w8
  40dfec:	b.lt	40e020 <main_loop+0x1a8>  // b.tstop
  40dff0:	ldur	w8, [x29, #-52]
  40dff4:	ldur	w9, [x29, #-44]
  40dff8:	orr	w0, w9, w8, lsl #10
  40dffc:	ldur	w1, [x29, #-48]
  40e000:	ldr	x2, [sp, #96]
  40e004:	mov	w3, #0x645                 	// #1605
  40e008:	ldr	x4, [sp, #88]
  40e00c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e010:	add	x5, x5, #0x42a
  40e014:	bl	40a400 <log_internal_realm@plt>
  40e018:	str	w0, [sp, #80]
  40e01c:	b	40e034 <main_loop+0x1bc>
  40e020:	ldur	w0, [x29, #-48]
  40e024:	bl	40a410 <abs@plt>
  40e028:	mov	w8, wzr
  40e02c:	subs	w8, w8, w0, uxtb
  40e030:	str	w8, [sp, #80]
  40e034:	ldr	w8, [sp, #80]
  40e038:	stur	w8, [x29, #-56]
  40e03c:	ldur	w8, [x29, #-56]
  40e040:	stur	w8, [x29, #-4]
  40e044:	b	40edc0 <main_loop+0xf48>
  40e048:	bl	43cdb8 <udev_watch_init>
  40e04c:	stur	w0, [x29, #-24]
  40e050:	ldur	w8, [x29, #-24]
  40e054:	cmp	w8, #0x0
  40e058:	cset	w8, ge  // ge = tcont
  40e05c:	tbnz	w8, #0, 40e0e8 <main_loop+0x270>
  40e060:	mov	w8, #0x3                   	// #3
  40e064:	stur	w8, [x29, #-60]
  40e068:	ldur	w8, [x29, #-24]
  40e06c:	stur	w8, [x29, #-64]
  40e070:	mov	w8, #0x1                   	// #1
  40e074:	stur	w8, [x29, #-68]
  40e078:	ldur	w0, [x29, #-68]
  40e07c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e080:	ldur	w8, [x29, #-60]
  40e084:	and	w8, w8, #0x7
  40e088:	cmp	w0, w8
  40e08c:	b.lt	40e0c0 <main_loop+0x248>  // b.tstop
  40e090:	ldur	w8, [x29, #-68]
  40e094:	ldur	w9, [x29, #-60]
  40e098:	orr	w0, w9, w8, lsl #10
  40e09c:	ldur	w1, [x29, #-64]
  40e0a0:	ldr	x2, [sp, #96]
  40e0a4:	mov	w3, #0x649                 	// #1609
  40e0a8:	ldr	x4, [sp, #88]
  40e0ac:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e0b0:	add	x5, x5, #0x44b
  40e0b4:	bl	40a400 <log_internal_realm@plt>
  40e0b8:	str	w0, [sp, #76]
  40e0bc:	b	40e0d4 <main_loop+0x25c>
  40e0c0:	ldur	w0, [x29, #-64]
  40e0c4:	bl	40a410 <abs@plt>
  40e0c8:	mov	w8, wzr
  40e0cc:	subs	w8, w8, w0, uxtb
  40e0d0:	str	w8, [sp, #76]
  40e0d4:	ldr	w8, [sp, #76]
  40e0d8:	stur	w8, [x29, #-72]
  40e0dc:	ldur	w8, [x29, #-72]
  40e0e0:	stur	w8, [x29, #-4]
  40e0e4:	b	40edc0 <main_loop+0xf48>
  40e0e8:	ldur	w8, [x29, #-24]
  40e0ec:	ldur	x9, [x29, #-16]
  40e0f0:	str	w8, [x9, #80]
  40e0f4:	bl	43ce24 <udev_watch_restore>
  40e0f8:	mov	w8, wzr
  40e0fc:	mov	w0, w8
  40e100:	mov	x9, xzr
  40e104:	mov	x1, x9
  40e108:	mov	w2, #0xf                   	// #15
  40e10c:	mov	w3, #0x2                   	// #2
  40e110:	mov	w4, #0x1                   	// #1
  40e114:	mov	w5, #0x11                  	// #17
  40e118:	mov	w6, #0xffffffff            	// #-1
  40e11c:	bl	40a670 <sigprocmask_many@plt>
  40e120:	cmp	w0, #0x0
  40e124:	cset	w8, ge  // ge = tcont
  40e128:	mov	w10, #0x1                   	// #1
  40e12c:	eor	w8, w8, #0x1
  40e130:	eor	w8, w8, w10
  40e134:	eor	w8, w8, w10
  40e138:	and	w8, w8, #0x1
  40e13c:	mov	w1, w8
  40e140:	sxtw	x9, w1
  40e144:	cbz	x9, 40e168 <main_loop+0x2f0>
  40e148:	mov	w0, #0x1                   	// #1
  40e14c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40e150:	add	x1, x1, #0x473
  40e154:	ldr	x2, [sp, #96]
  40e158:	mov	w3, #0x64f                 	// #1615
  40e15c:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40e160:	add	x4, x4, #0x4c0
  40e164:	bl	40a540 <log_assert_failed_realm@plt>
  40e168:	ldur	x0, [x29, #-16]
  40e16c:	bl	40a680 <sd_event_default@plt>
  40e170:	stur	w0, [x29, #-24]
  40e174:	ldur	w8, [x29, #-24]
  40e178:	cmp	w8, #0x0
  40e17c:	cset	w8, ge  // ge = tcont
  40e180:	tbnz	w8, #0, 40e20c <main_loop+0x394>
  40e184:	mov	w8, #0x3                   	// #3
  40e188:	stur	w8, [x29, #-76]
  40e18c:	ldur	w8, [x29, #-24]
  40e190:	stur	w8, [x29, #-80]
  40e194:	mov	w8, #0x1                   	// #1
  40e198:	stur	w8, [x29, #-84]
  40e19c:	ldur	w0, [x29, #-84]
  40e1a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e1a4:	ldur	w8, [x29, #-76]
  40e1a8:	and	w8, w8, #0x7
  40e1ac:	cmp	w0, w8
  40e1b0:	b.lt	40e1e4 <main_loop+0x36c>  // b.tstop
  40e1b4:	ldur	w8, [x29, #-84]
  40e1b8:	ldur	w9, [x29, #-76]
  40e1bc:	orr	w0, w9, w8, lsl #10
  40e1c0:	ldur	w1, [x29, #-80]
  40e1c4:	ldr	x2, [sp, #96]
  40e1c8:	mov	w3, #0x653                 	// #1619
  40e1cc:	ldr	x4, [sp, #88]
  40e1d0:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e1d4:	add	x5, x5, #0x4d9
  40e1d8:	bl	40a400 <log_internal_realm@plt>
  40e1dc:	str	w0, [sp, #72]
  40e1e0:	b	40e1f8 <main_loop+0x380>
  40e1e4:	ldur	w0, [x29, #-80]
  40e1e8:	bl	40a410 <abs@plt>
  40e1ec:	mov	w8, wzr
  40e1f0:	subs	w8, w8, w0, uxtb
  40e1f4:	str	w8, [sp, #72]
  40e1f8:	ldr	w8, [sp, #72]
  40e1fc:	stur	w8, [x29, #-88]
  40e200:	ldur	w8, [x29, #-88]
  40e204:	stur	w8, [x29, #-4]
  40e208:	b	40edc0 <main_loop+0xf48>
  40e20c:	ldur	x8, [x29, #-16]
  40e210:	ldr	x0, [x8]
  40e214:	ldur	x4, [x29, #-16]
  40e218:	mov	x8, xzr
  40e21c:	mov	x1, x8
  40e220:	mov	w2, #0x2                   	// #2
  40e224:	adrp	x3, 40f000 <event_queue_cleanup+0x4>
  40e228:	add	x3, x3, #0x6e4
  40e22c:	bl	40a690 <sd_event_add_signal@plt>
  40e230:	stur	w0, [x29, #-24]
  40e234:	ldur	w9, [x29, #-24]
  40e238:	cmp	w9, #0x0
  40e23c:	cset	w9, ge  // ge = tcont
  40e240:	tbnz	w9, #0, 40e2cc <main_loop+0x454>
  40e244:	mov	w8, #0x3                   	// #3
  40e248:	stur	w8, [x29, #-92]
  40e24c:	ldur	w8, [x29, #-24]
  40e250:	stur	w8, [x29, #-96]
  40e254:	mov	w8, #0x1                   	// #1
  40e258:	stur	w8, [x29, #-100]
  40e25c:	ldur	w0, [x29, #-100]
  40e260:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e264:	ldur	w8, [x29, #-92]
  40e268:	and	w8, w8, #0x7
  40e26c:	cmp	w0, w8
  40e270:	b.lt	40e2a4 <main_loop+0x42c>  // b.tstop
  40e274:	ldur	w8, [x29, #-100]
  40e278:	ldur	w9, [x29, #-92]
  40e27c:	orr	w0, w9, w8, lsl #10
  40e280:	ldur	w1, [x29, #-96]
  40e284:	ldr	x2, [sp, #96]
  40e288:	mov	w3, #0x657                 	// #1623
  40e28c:	ldr	x4, [sp, #88]
  40e290:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e294:	add	x5, x5, #0x4fb
  40e298:	bl	40a400 <log_internal_realm@plt>
  40e29c:	str	w0, [sp, #68]
  40e2a0:	b	40e2b8 <main_loop+0x440>
  40e2a4:	ldur	w0, [x29, #-96]
  40e2a8:	bl	40a410 <abs@plt>
  40e2ac:	mov	w8, wzr
  40e2b0:	subs	w8, w8, w0, uxtb
  40e2b4:	str	w8, [sp, #68]
  40e2b8:	ldr	w8, [sp, #68]
  40e2bc:	stur	w8, [x29, #-104]
  40e2c0:	ldur	w8, [x29, #-104]
  40e2c4:	stur	w8, [x29, #-4]
  40e2c8:	b	40edc0 <main_loop+0xf48>
  40e2cc:	ldur	x8, [x29, #-16]
  40e2d0:	ldr	x0, [x8]
  40e2d4:	ldur	x4, [x29, #-16]
  40e2d8:	mov	x8, xzr
  40e2dc:	mov	x1, x8
  40e2e0:	mov	w2, #0xf                   	// #15
  40e2e4:	adrp	x3, 40f000 <event_queue_cleanup+0x4>
  40e2e8:	add	x3, x3, #0x6e4
  40e2ec:	bl	40a690 <sd_event_add_signal@plt>
  40e2f0:	stur	w0, [x29, #-24]
  40e2f4:	ldur	w9, [x29, #-24]
  40e2f8:	cmp	w9, #0x0
  40e2fc:	cset	w9, ge  // ge = tcont
  40e300:	tbnz	w9, #0, 40e38c <main_loop+0x514>
  40e304:	mov	w8, #0x3                   	// #3
  40e308:	stur	w8, [x29, #-108]
  40e30c:	ldur	w8, [x29, #-24]
  40e310:	stur	w8, [x29, #-112]
  40e314:	mov	w8, #0x1                   	// #1
  40e318:	stur	w8, [x29, #-116]
  40e31c:	ldur	w0, [x29, #-116]
  40e320:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e324:	ldur	w8, [x29, #-108]
  40e328:	and	w8, w8, #0x7
  40e32c:	cmp	w0, w8
  40e330:	b.lt	40e364 <main_loop+0x4ec>  // b.tstop
  40e334:	ldur	w8, [x29, #-116]
  40e338:	ldur	w9, [x29, #-108]
  40e33c:	orr	w0, w9, w8, lsl #10
  40e340:	ldur	w1, [x29, #-112]
  40e344:	ldr	x2, [sp, #96]
  40e348:	mov	w3, #0x65b                 	// #1627
  40e34c:	ldr	x4, [sp, #88]
  40e350:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e354:	add	x5, x5, #0x524
  40e358:	bl	40a400 <log_internal_realm@plt>
  40e35c:	str	w0, [sp, #64]
  40e360:	b	40e378 <main_loop+0x500>
  40e364:	ldur	w0, [x29, #-112]
  40e368:	bl	40a410 <abs@plt>
  40e36c:	mov	w8, wzr
  40e370:	subs	w8, w8, w0, uxtb
  40e374:	str	w8, [sp, #64]
  40e378:	ldr	w8, [sp, #64]
  40e37c:	stur	w8, [x29, #-120]
  40e380:	ldur	w8, [x29, #-120]
  40e384:	stur	w8, [x29, #-4]
  40e388:	b	40edc0 <main_loop+0xf48>
  40e38c:	ldur	x8, [x29, #-16]
  40e390:	ldr	x0, [x8]
  40e394:	ldur	x4, [x29, #-16]
  40e398:	mov	x8, xzr
  40e39c:	mov	x1, x8
  40e3a0:	mov	w2, #0x1                   	// #1
  40e3a4:	adrp	x3, 40f000 <event_queue_cleanup+0x4>
  40e3a8:	add	x3, x3, #0x778
  40e3ac:	bl	40a690 <sd_event_add_signal@plt>
  40e3b0:	stur	w0, [x29, #-24]
  40e3b4:	ldur	w9, [x29, #-24]
  40e3b8:	cmp	w9, #0x0
  40e3bc:	cset	w9, ge  // ge = tcont
  40e3c0:	tbnz	w9, #0, 40e44c <main_loop+0x5d4>
  40e3c4:	mov	w8, #0x3                   	// #3
  40e3c8:	stur	w8, [x29, #-124]
  40e3cc:	ldur	w8, [x29, #-24]
  40e3d0:	stur	w8, [x29, #-128]
  40e3d4:	mov	w8, #0x1                   	// #1
  40e3d8:	stur	w8, [x29, #-132]
  40e3dc:	ldur	w0, [x29, #-132]
  40e3e0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e3e4:	ldur	w8, [x29, #-124]
  40e3e8:	and	w8, w8, #0x7
  40e3ec:	cmp	w0, w8
  40e3f0:	b.lt	40e424 <main_loop+0x5ac>  // b.tstop
  40e3f4:	ldur	w8, [x29, #-132]
  40e3f8:	ldur	w9, [x29, #-124]
  40e3fc:	orr	w0, w9, w8, lsl #10
  40e400:	ldur	w1, [x29, #-128]
  40e404:	ldr	x2, [sp, #96]
  40e408:	mov	w3, #0x65f                 	// #1631
  40e40c:	ldr	x4, [sp, #88]
  40e410:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e414:	add	x5, x5, #0x54e
  40e418:	bl	40a400 <log_internal_realm@plt>
  40e41c:	str	w0, [sp, #60]
  40e420:	b	40e438 <main_loop+0x5c0>
  40e424:	ldur	w0, [x29, #-128]
  40e428:	bl	40a410 <abs@plt>
  40e42c:	mov	w8, wzr
  40e430:	subs	w8, w8, w0, uxtb
  40e434:	str	w8, [sp, #60]
  40e438:	ldr	w8, [sp, #60]
  40e43c:	stur	w8, [x29, #-136]
  40e440:	ldur	w8, [x29, #-136]
  40e444:	stur	w8, [x29, #-4]
  40e448:	b	40edc0 <main_loop+0xf48>
  40e44c:	ldur	x8, [x29, #-16]
  40e450:	ldr	x0, [x8]
  40e454:	ldur	x4, [x29, #-16]
  40e458:	mov	x8, xzr
  40e45c:	mov	x1, x8
  40e460:	mov	w2, #0x11                  	// #17
  40e464:	adrp	x3, 40f000 <event_queue_cleanup+0x4>
  40e468:	add	x3, x3, #0x80c
  40e46c:	bl	40a690 <sd_event_add_signal@plt>
  40e470:	stur	w0, [x29, #-24]
  40e474:	ldur	w9, [x29, #-24]
  40e478:	cmp	w9, #0x0
  40e47c:	cset	w9, ge  // ge = tcont
  40e480:	tbnz	w9, #0, 40e50c <main_loop+0x694>
  40e484:	mov	w8, #0x3                   	// #3
  40e488:	stur	w8, [x29, #-140]
  40e48c:	ldur	w8, [x29, #-24]
  40e490:	stur	w8, [x29, #-144]
  40e494:	mov	w8, #0x1                   	// #1
  40e498:	stur	w8, [x29, #-148]
  40e49c:	ldur	w0, [x29, #-148]
  40e4a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e4a4:	ldur	w8, [x29, #-140]
  40e4a8:	and	w8, w8, #0x7
  40e4ac:	cmp	w0, w8
  40e4b0:	b.lt	40e4e4 <main_loop+0x66c>  // b.tstop
  40e4b4:	ldur	w8, [x29, #-148]
  40e4b8:	ldur	w9, [x29, #-140]
  40e4bc:	orr	w0, w9, w8, lsl #10
  40e4c0:	ldur	w1, [x29, #-144]
  40e4c4:	ldr	x2, [sp, #96]
  40e4c8:	mov	w3, #0x663                 	// #1635
  40e4cc:	ldr	x4, [sp, #88]
  40e4d0:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e4d4:	add	x5, x5, #0x577
  40e4d8:	bl	40a400 <log_internal_realm@plt>
  40e4dc:	str	w0, [sp, #56]
  40e4e0:	b	40e4f8 <main_loop+0x680>
  40e4e4:	ldur	w0, [x29, #-144]
  40e4e8:	bl	40a410 <abs@plt>
  40e4ec:	mov	w8, wzr
  40e4f0:	subs	w8, w8, w0, uxtb
  40e4f4:	str	w8, [sp, #56]
  40e4f8:	ldr	w8, [sp, #56]
  40e4fc:	stur	w8, [x29, #-152]
  40e500:	ldur	w8, [x29, #-152]
  40e504:	stur	w8, [x29, #-4]
  40e508:	b	40edc0 <main_loop+0xf48>
  40e50c:	ldur	x8, [x29, #-16]
  40e510:	ldr	x0, [x8]
  40e514:	mov	w1, #0x1                   	// #1
  40e518:	bl	40a6a0 <sd_event_set_watchdog@plt>
  40e51c:	stur	w0, [x29, #-24]
  40e520:	ldur	w9, [x29, #-24]
  40e524:	cmp	w9, #0x0
  40e528:	cset	w9, ge  // ge = tcont
  40e52c:	tbnz	w9, #0, 40e5b8 <main_loop+0x740>
  40e530:	mov	w8, #0x3                   	// #3
  40e534:	stur	w8, [x29, #-156]
  40e538:	ldur	w8, [x29, #-24]
  40e53c:	stur	w8, [x29, #-160]
  40e540:	mov	w8, #0x1                   	// #1
  40e544:	stur	w8, [x29, #-164]
  40e548:	ldur	w0, [x29, #-164]
  40e54c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e550:	ldur	w8, [x29, #-156]
  40e554:	and	w8, w8, #0x7
  40e558:	cmp	w0, w8
  40e55c:	b.lt	40e590 <main_loop+0x718>  // b.tstop
  40e560:	ldur	w8, [x29, #-164]
  40e564:	ldur	w9, [x29, #-156]
  40e568:	orr	w0, w9, w8, lsl #10
  40e56c:	ldur	w1, [x29, #-160]
  40e570:	ldr	x2, [sp, #96]
  40e574:	mov	w3, #0x667                 	// #1639
  40e578:	ldr	x4, [sp, #88]
  40e57c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e580:	add	x5, x5, #0x5a1
  40e584:	bl	40a400 <log_internal_realm@plt>
  40e588:	str	w0, [sp, #52]
  40e58c:	b	40e5a4 <main_loop+0x72c>
  40e590:	ldur	w0, [x29, #-160]
  40e594:	bl	40a410 <abs@plt>
  40e598:	mov	w8, wzr
  40e59c:	subs	w8, w8, w0, uxtb
  40e5a0:	str	w8, [sp, #52]
  40e5a4:	ldr	w8, [sp, #52]
  40e5a8:	stur	w8, [x29, #-168]
  40e5ac:	ldur	w8, [x29, #-168]
  40e5b0:	stur	w8, [x29, #-4]
  40e5b4:	b	40edc0 <main_loop+0xf48>
  40e5b8:	ldur	x8, [x29, #-16]
  40e5bc:	ldr	x0, [x8, #72]
  40e5c0:	ldur	x8, [x29, #-16]
  40e5c4:	ldr	x1, [x8]
  40e5c8:	bl	416b70 <udev_ctrl_attach_event>
  40e5cc:	stur	w0, [x29, #-24]
  40e5d0:	ldur	w9, [x29, #-24]
  40e5d4:	cmp	w9, #0x0
  40e5d8:	cset	w9, ge  // ge = tcont
  40e5dc:	tbnz	w9, #0, 40e668 <main_loop+0x7f0>
  40e5e0:	mov	w8, #0x3                   	// #3
  40e5e4:	stur	w8, [x29, #-172]
  40e5e8:	ldur	w8, [x29, #-24]
  40e5ec:	stur	w8, [x29, #-176]
  40e5f0:	mov	w8, #0x1                   	// #1
  40e5f4:	stur	w8, [x29, #-180]
  40e5f8:	ldur	w0, [x29, #-180]
  40e5fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e600:	ldur	w8, [x29, #-172]
  40e604:	and	w8, w8, #0x7
  40e608:	cmp	w0, w8
  40e60c:	b.lt	40e640 <main_loop+0x7c8>  // b.tstop
  40e610:	ldur	w8, [x29, #-180]
  40e614:	ldur	w9, [x29, #-172]
  40e618:	orr	w0, w9, w8, lsl #10
  40e61c:	ldur	w1, [x29, #-176]
  40e620:	ldr	x2, [sp, #96]
  40e624:	mov	w3, #0x66b                 	// #1643
  40e628:	ldr	x4, [sp, #88]
  40e62c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e630:	add	x5, x5, #0x5cc
  40e634:	bl	40a400 <log_internal_realm@plt>
  40e638:	str	w0, [sp, #48]
  40e63c:	b	40e654 <main_loop+0x7dc>
  40e640:	ldur	w0, [x29, #-176]
  40e644:	bl	40a410 <abs@plt>
  40e648:	mov	w8, wzr
  40e64c:	subs	w8, w8, w0, uxtb
  40e650:	str	w8, [sp, #48]
  40e654:	ldr	w8, [sp, #48]
  40e658:	stur	w8, [x29, #-184]
  40e65c:	ldur	w8, [x29, #-184]
  40e660:	stur	w8, [x29, #-4]
  40e664:	b	40edc0 <main_loop+0xf48>
  40e668:	ldur	x8, [x29, #-16]
  40e66c:	ldr	x0, [x8, #72]
  40e670:	ldur	x2, [x29, #-16]
  40e674:	adrp	x1, 410000 <on_sigchld+0x7f4>
  40e678:	add	x1, x1, #0x70
  40e67c:	bl	416d58 <udev_ctrl_start>
  40e680:	stur	w0, [x29, #-24]
  40e684:	ldur	w9, [x29, #-24]
  40e688:	cmp	w9, #0x0
  40e68c:	cset	w9, ge  // ge = tcont
  40e690:	tbnz	w9, #0, 40e71c <main_loop+0x8a4>
  40e694:	mov	w8, #0x3                   	// #3
  40e698:	stur	w8, [x29, #-188]
  40e69c:	ldur	w8, [x29, #-24]
  40e6a0:	stur	w8, [x29, #-192]
  40e6a4:	mov	w8, #0x1                   	// #1
  40e6a8:	stur	w8, [x29, #-196]
  40e6ac:	ldur	w0, [x29, #-196]
  40e6b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e6b4:	ldur	w8, [x29, #-188]
  40e6b8:	and	w8, w8, #0x7
  40e6bc:	cmp	w0, w8
  40e6c0:	b.lt	40e6f4 <main_loop+0x87c>  // b.tstop
  40e6c4:	ldur	w8, [x29, #-196]
  40e6c8:	ldur	w9, [x29, #-188]
  40e6cc:	orr	w0, w9, w8, lsl #10
  40e6d0:	ldur	w1, [x29, #-192]
  40e6d4:	ldr	x2, [sp, #96]
  40e6d8:	mov	w3, #0x66f                 	// #1647
  40e6dc:	ldr	x4, [sp, #88]
  40e6e0:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e6e4:	add	x5, x5, #0x5f7
  40e6e8:	bl	40a400 <log_internal_realm@plt>
  40e6ec:	str	w0, [sp, #44]
  40e6f0:	b	40e708 <main_loop+0x890>
  40e6f4:	ldur	w0, [x29, #-192]
  40e6f8:	bl	40a410 <abs@plt>
  40e6fc:	mov	w8, wzr
  40e700:	subs	w8, w8, w0, uxtb
  40e704:	str	w8, [sp, #44]
  40e708:	ldr	w8, [sp, #44]
  40e70c:	stur	w8, [x29, #-200]
  40e710:	ldur	w8, [x29, #-200]
  40e714:	stur	w8, [x29, #-4]
  40e718:	b	40edc0 <main_loop+0xf48>
  40e71c:	ldur	x8, [x29, #-16]
  40e720:	ldr	x0, [x8, #72]
  40e724:	bl	416cd8 <udev_ctrl_get_event_source>
  40e728:	mov	x1, #0x64                  	// #100
  40e72c:	bl	40a6b0 <sd_event_source_set_priority@plt>
  40e730:	stur	w0, [x29, #-24]
  40e734:	ldur	w9, [x29, #-24]
  40e738:	cmp	w9, #0x0
  40e73c:	cset	w9, ge  // ge = tcont
  40e740:	tbnz	w9, #0, 40e7cc <main_loop+0x954>
  40e744:	mov	w8, #0x3                   	// #3
  40e748:	stur	w8, [x29, #-204]
  40e74c:	ldur	w8, [x29, #-24]
  40e750:	stur	w8, [x29, #-208]
  40e754:	mov	w8, #0x1                   	// #1
  40e758:	stur	w8, [x29, #-212]
  40e75c:	ldur	w0, [x29, #-212]
  40e760:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e764:	ldur	w8, [x29, #-204]
  40e768:	and	w8, w8, #0x7
  40e76c:	cmp	w0, w8
  40e770:	b.lt	40e7a4 <main_loop+0x92c>  // b.tstop
  40e774:	ldur	w8, [x29, #-212]
  40e778:	ldur	w9, [x29, #-204]
  40e77c:	orr	w0, w9, w8, lsl #10
  40e780:	ldur	w1, [x29, #-208]
  40e784:	ldr	x2, [sp, #96]
  40e788:	mov	w3, #0x677                 	// #1655
  40e78c:	ldr	x4, [sp, #88]
  40e790:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e794:	add	x5, x5, #0x61a
  40e798:	bl	40a400 <log_internal_realm@plt>
  40e79c:	str	w0, [sp, #40]
  40e7a0:	b	40e7b8 <main_loop+0x940>
  40e7a4:	ldur	w0, [x29, #-208]
  40e7a8:	bl	40a410 <abs@plt>
  40e7ac:	mov	w8, wzr
  40e7b0:	subs	w8, w8, w0, uxtb
  40e7b4:	str	w8, [sp, #40]
  40e7b8:	ldr	w8, [sp, #40]
  40e7bc:	stur	w8, [x29, #-216]
  40e7c0:	ldur	w8, [x29, #-216]
  40e7c4:	stur	w8, [x29, #-4]
  40e7c8:	b	40edc0 <main_loop+0xf48>
  40e7cc:	ldur	x8, [x29, #-16]
  40e7d0:	ldr	x0, [x8]
  40e7d4:	ldur	x8, [x29, #-16]
  40e7d8:	add	x1, x8, #0x60
  40e7dc:	ldur	x8, [x29, #-16]
  40e7e0:	ldr	w2, [x8, #80]
  40e7e4:	ldur	x5, [x29, #-16]
  40e7e8:	mov	w3, #0x1                   	// #1
  40e7ec:	adrp	x4, 410000 <on_sigchld+0x7f4>
  40e7f0:	add	x4, x4, #0xafc
  40e7f4:	bl	40a6c0 <sd_event_add_io@plt>
  40e7f8:	stur	w0, [x29, #-24]
  40e7fc:	ldur	w9, [x29, #-24]
  40e800:	cmp	w9, #0x0
  40e804:	cset	w9, ge  // ge = tcont
  40e808:	tbnz	w9, #0, 40e894 <main_loop+0xa1c>
  40e80c:	mov	w8, #0x3                   	// #3
  40e810:	stur	w8, [x29, #-220]
  40e814:	ldur	w8, [x29, #-24]
  40e818:	stur	w8, [x29, #-224]
  40e81c:	mov	w8, #0x1                   	// #1
  40e820:	stur	w8, [x29, #-228]
  40e824:	ldur	w0, [x29, #-228]
  40e828:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e82c:	ldur	w8, [x29, #-220]
  40e830:	and	w8, w8, #0x7
  40e834:	cmp	w0, w8
  40e838:	b.lt	40e86c <main_loop+0x9f4>  // b.tstop
  40e83c:	ldur	w8, [x29, #-228]
  40e840:	ldur	w9, [x29, #-220]
  40e844:	orr	w0, w9, w8, lsl #10
  40e848:	ldur	w1, [x29, #-224]
  40e84c:	ldr	x2, [sp, #96]
  40e850:	mov	w3, #0x67b                 	// #1659
  40e854:	ldr	x4, [sp, #88]
  40e858:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e85c:	add	x5, x5, #0x65e
  40e860:	bl	40a400 <log_internal_realm@plt>
  40e864:	str	w0, [sp, #36]
  40e868:	b	40e880 <main_loop+0xa08>
  40e86c:	ldur	w0, [x29, #-224]
  40e870:	bl	40a410 <abs@plt>
  40e874:	mov	w8, wzr
  40e878:	subs	w8, w8, w0, uxtb
  40e87c:	str	w8, [sp, #36]
  40e880:	ldr	w8, [sp, #36]
  40e884:	str	w8, [sp, #232]
  40e888:	ldr	w8, [sp, #232]
  40e88c:	stur	w8, [x29, #-4]
  40e890:	b	40edc0 <main_loop+0xf48>
  40e894:	ldur	x8, [x29, #-16]
  40e898:	ldr	x0, [x8, #64]
  40e89c:	ldur	x8, [x29, #-16]
  40e8a0:	ldr	x1, [x8]
  40e8a4:	bl	40a6d0 <sd_device_monitor_attach_event@plt>
  40e8a8:	stur	w0, [x29, #-24]
  40e8ac:	ldur	w9, [x29, #-24]
  40e8b0:	cmp	w9, #0x0
  40e8b4:	cset	w9, ge  // ge = tcont
  40e8b8:	tbnz	w9, #0, 40e944 <main_loop+0xacc>
  40e8bc:	mov	w8, #0x3                   	// #3
  40e8c0:	str	w8, [sp, #228]
  40e8c4:	ldur	w8, [x29, #-24]
  40e8c8:	str	w8, [sp, #224]
  40e8cc:	mov	w8, #0x1                   	// #1
  40e8d0:	str	w8, [sp, #220]
  40e8d4:	ldr	w0, [sp, #220]
  40e8d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e8dc:	ldr	w8, [sp, #228]
  40e8e0:	and	w8, w8, #0x7
  40e8e4:	cmp	w0, w8
  40e8e8:	b.lt	40e91c <main_loop+0xaa4>  // b.tstop
  40e8ec:	ldr	w8, [sp, #220]
  40e8f0:	ldr	w9, [sp, #228]
  40e8f4:	orr	w0, w9, w8, lsl #10
  40e8f8:	ldr	w1, [sp, #224]
  40e8fc:	ldr	x2, [sp, #96]
  40e900:	mov	w3, #0x67f                 	// #1663
  40e904:	ldr	x4, [sp, #88]
  40e908:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e90c:	add	x5, x5, #0x688
  40e910:	bl	40a400 <log_internal_realm@plt>
  40e914:	str	w0, [sp, #32]
  40e918:	b	40e930 <main_loop+0xab8>
  40e91c:	ldr	w0, [sp, #224]
  40e920:	bl	40a410 <abs@plt>
  40e924:	mov	w8, wzr
  40e928:	subs	w8, w8, w0, uxtb
  40e92c:	str	w8, [sp, #32]
  40e930:	ldr	w8, [sp, #32]
  40e934:	str	w8, [sp, #216]
  40e938:	ldr	w8, [sp, #216]
  40e93c:	stur	w8, [x29, #-4]
  40e940:	b	40edc0 <main_loop+0xf48>
  40e944:	ldur	x8, [x29, #-16]
  40e948:	ldr	x0, [x8, #64]
  40e94c:	ldur	x2, [x29, #-16]
  40e950:	adrp	x1, 410000 <on_sigchld+0x7f4>
  40e954:	add	x1, x1, #0xf20
  40e958:	bl	40a6e0 <sd_device_monitor_start@plt>
  40e95c:	stur	w0, [x29, #-24]
  40e960:	ldur	w9, [x29, #-24]
  40e964:	cmp	w9, #0x0
  40e968:	cset	w9, ge  // ge = tcont
  40e96c:	tbnz	w9, #0, 40e9f8 <main_loop+0xb80>
  40e970:	mov	w8, #0x3                   	// #3
  40e974:	str	w8, [sp, #212]
  40e978:	ldur	w8, [x29, #-24]
  40e97c:	str	w8, [sp, #208]
  40e980:	mov	w8, #0x1                   	// #1
  40e984:	str	w8, [sp, #204]
  40e988:	ldr	w0, [sp, #204]
  40e98c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40e990:	ldr	w8, [sp, #212]
  40e994:	and	w8, w8, #0x7
  40e998:	cmp	w0, w8
  40e99c:	b.lt	40e9d0 <main_loop+0xb58>  // b.tstop
  40e9a0:	ldr	w8, [sp, #204]
  40e9a4:	ldr	w9, [sp, #212]
  40e9a8:	orr	w0, w9, w8, lsl #10
  40e9ac:	ldr	w1, [sp, #208]
  40e9b0:	ldr	x2, [sp, #96]
  40e9b4:	mov	w3, #0x683                 	// #1667
  40e9b8:	ldr	x4, [sp, #88]
  40e9bc:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40e9c0:	add	x5, x5, #0x5f7
  40e9c4:	bl	40a400 <log_internal_realm@plt>
  40e9c8:	str	w0, [sp, #28]
  40e9cc:	b	40e9e4 <main_loop+0xb6c>
  40e9d0:	ldr	w0, [sp, #208]
  40e9d4:	bl	40a410 <abs@plt>
  40e9d8:	mov	w8, wzr
  40e9dc:	subs	w8, w8, w0, uxtb
  40e9e0:	str	w8, [sp, #28]
  40e9e4:	ldr	w8, [sp, #28]
  40e9e8:	str	w8, [sp, #200]
  40e9ec:	ldr	w8, [sp, #200]
  40e9f0:	stur	w8, [x29, #-4]
  40e9f4:	b	40edc0 <main_loop+0xf48>
  40e9f8:	ldur	x8, [x29, #-16]
  40e9fc:	ldr	x0, [x8, #64]
  40ea00:	bl	40a6f0 <sd_device_monitor_get_event_source@plt>
  40ea04:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40ea08:	add	x1, x1, #0x6b5
  40ea0c:	bl	40a700 <sd_event_source_set_description@plt>
  40ea10:	ldur	x8, [x29, #-16]
  40ea14:	ldr	x8, [x8]
  40ea18:	ldur	w2, [x29, #-20]
  40ea1c:	ldur	x5, [x29, #-16]
  40ea20:	mov	x0, x8
  40ea24:	mov	x8, xzr
  40ea28:	mov	x1, x8
  40ea2c:	mov	w3, #0x1                   	// #1
  40ea30:	adrp	x4, 411000 <on_uevent+0xe0>
  40ea34:	add	x4, x4, #0xb8
  40ea38:	bl	40a6c0 <sd_event_add_io@plt>
  40ea3c:	stur	w0, [x29, #-24]
  40ea40:	ldur	w9, [x29, #-24]
  40ea44:	cmp	w9, #0x0
  40ea48:	cset	w9, ge  // ge = tcont
  40ea4c:	tbnz	w9, #0, 40ead8 <main_loop+0xc60>
  40ea50:	mov	w8, #0x3                   	// #3
  40ea54:	str	w8, [sp, #196]
  40ea58:	ldur	w8, [x29, #-24]
  40ea5c:	str	w8, [sp, #192]
  40ea60:	mov	w8, #0x1                   	// #1
  40ea64:	str	w8, [sp, #188]
  40ea68:	ldr	w0, [sp, #188]
  40ea6c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ea70:	ldr	w8, [sp, #196]
  40ea74:	and	w8, w8, #0x7
  40ea78:	cmp	w0, w8
  40ea7c:	b.lt	40eab0 <main_loop+0xc38>  // b.tstop
  40ea80:	ldr	w8, [sp, #188]
  40ea84:	ldr	w9, [sp, #196]
  40ea88:	orr	w0, w9, w8, lsl #10
  40ea8c:	ldr	w1, [sp, #192]
  40ea90:	ldr	x2, [sp, #96]
  40ea94:	mov	w3, #0x689                 	// #1673
  40ea98:	ldr	x4, [sp, #88]
  40ea9c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40eaa0:	add	x5, x5, #0x6c4
  40eaa4:	bl	40a400 <log_internal_realm@plt>
  40eaa8:	str	w0, [sp, #24]
  40eaac:	b	40eac4 <main_loop+0xc4c>
  40eab0:	ldr	w0, [sp, #192]
  40eab4:	bl	40a410 <abs@plt>
  40eab8:	mov	w8, wzr
  40eabc:	subs	w8, w8, w0, uxtb
  40eac0:	str	w8, [sp, #24]
  40eac4:	ldr	w8, [sp, #24]
  40eac8:	str	w8, [sp, #184]
  40eacc:	ldr	w8, [sp, #184]
  40ead0:	stur	w8, [x29, #-4]
  40ead4:	b	40edc0 <main_loop+0xf48>
  40ead8:	ldur	x8, [x29, #-16]
  40eadc:	ldr	x0, [x8]
  40eae0:	ldur	x3, [x29, #-16]
  40eae4:	mov	x8, xzr
  40eae8:	mov	x1, x8
  40eaec:	adrp	x2, 411000 <on_uevent+0xe0>
  40eaf0:	add	x2, x2, #0x53c
  40eaf4:	bl	40a710 <sd_event_add_post@plt>
  40eaf8:	stur	w0, [x29, #-24]
  40eafc:	ldur	w9, [x29, #-24]
  40eb00:	cmp	w9, #0x0
  40eb04:	cset	w9, ge  // ge = tcont
  40eb08:	tbnz	w9, #0, 40eb94 <main_loop+0xd1c>
  40eb0c:	mov	w8, #0x3                   	// #3
  40eb10:	str	w8, [sp, #180]
  40eb14:	ldur	w8, [x29, #-24]
  40eb18:	str	w8, [sp, #176]
  40eb1c:	mov	w8, #0x1                   	// #1
  40eb20:	str	w8, [sp, #172]
  40eb24:	ldr	w0, [sp, #172]
  40eb28:	bl	40a3f0 <log_get_max_level_realm@plt>
  40eb2c:	ldr	w8, [sp, #180]
  40eb30:	and	w8, w8, #0x7
  40eb34:	cmp	w0, w8
  40eb38:	b.lt	40eb6c <main_loop+0xcf4>  // b.tstop
  40eb3c:	ldr	w8, [sp, #172]
  40eb40:	ldr	w9, [sp, #180]
  40eb44:	orr	w0, w9, w8, lsl #10
  40eb48:	ldr	w1, [sp, #176]
  40eb4c:	ldr	x2, [sp, #96]
  40eb50:	mov	w3, #0x68d                 	// #1677
  40eb54:	ldr	x4, [sp, #88]
  40eb58:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40eb5c:	add	x5, x5, #0x6ed
  40eb60:	bl	40a400 <log_internal_realm@plt>
  40eb64:	str	w0, [sp, #20]
  40eb68:	b	40eb80 <main_loop+0xd08>
  40eb6c:	ldr	w0, [sp, #176]
  40eb70:	bl	40a410 <abs@plt>
  40eb74:	mov	w8, wzr
  40eb78:	subs	w8, w8, w0, uxtb
  40eb7c:	str	w8, [sp, #20]
  40eb80:	ldr	w8, [sp, #20]
  40eb84:	str	w8, [sp, #168]
  40eb88:	ldr	w8, [sp, #168]
  40eb8c:	stur	w8, [x29, #-4]
  40eb90:	b	40edc0 <main_loop+0xf48>
  40eb94:	bl	43e238 <udev_builtin_init>
  40eb98:	ldur	x8, [x29, #-16]
  40eb9c:	add	x0, x8, #0x28
  40eba0:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40eba4:	add	x8, x8, #0x8
  40eba8:	ldr	w1, [x8]
  40ebac:	bl	421a54 <udev_rules_new>
  40ebb0:	stur	w0, [x29, #-24]
  40ebb4:	ldur	x8, [x29, #-16]
  40ebb8:	ldr	x8, [x8, #40]
  40ebbc:	cbnz	x8, 40ec48 <main_loop+0xdd0>
  40ebc0:	mov	w8, #0x3                   	// #3
  40ebc4:	str	w8, [sp, #164]
  40ebc8:	ldur	w8, [x29, #-24]
  40ebcc:	str	w8, [sp, #160]
  40ebd0:	mov	w8, #0x1                   	// #1
  40ebd4:	str	w8, [sp, #156]
  40ebd8:	ldr	w0, [sp, #156]
  40ebdc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ebe0:	ldr	w8, [sp, #164]
  40ebe4:	and	w8, w8, #0x7
  40ebe8:	cmp	w0, w8
  40ebec:	b.lt	40ec20 <main_loop+0xda8>  // b.tstop
  40ebf0:	ldr	w8, [sp, #156]
  40ebf4:	ldr	w9, [sp, #164]
  40ebf8:	orr	w0, w9, w8, lsl #10
  40ebfc:	ldr	w1, [sp, #160]
  40ec00:	ldr	x2, [sp, #96]
  40ec04:	mov	w3, #0x693                 	// #1683
  40ec08:	ldr	x4, [sp, #88]
  40ec0c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40ec10:	add	x5, x5, #0x714
  40ec14:	bl	40a400 <log_internal_realm@plt>
  40ec18:	str	w0, [sp, #16]
  40ec1c:	b	40ec34 <main_loop+0xdbc>
  40ec20:	ldr	w0, [sp, #160]
  40ec24:	bl	40a410 <abs@plt>
  40ec28:	mov	w8, wzr
  40ec2c:	subs	w8, w8, w0, uxtb
  40ec30:	str	w8, [sp, #16]
  40ec34:	ldr	w8, [sp, #16]
  40ec38:	str	w8, [sp, #152]
  40ec3c:	ldr	w8, [sp, #152]
  40ec40:	stur	w8, [x29, #-4]
  40ec44:	b	40edc0 <main_loop+0xf48>
  40ec48:	ldur	x8, [x29, #-16]
  40ec4c:	ldr	x0, [x8, #40]
  40ec50:	bl	422a8c <udev_rules_apply_static_dev_perms>
  40ec54:	stur	w0, [x29, #-24]
  40ec58:	ldur	w9, [x29, #-24]
  40ec5c:	cmp	w9, #0x0
  40ec60:	cset	w9, ge  // ge = tcont
  40ec64:	tbnz	w9, #0, 40ece4 <main_loop+0xe6c>
  40ec68:	mov	w8, #0x3                   	// #3
  40ec6c:	str	w8, [sp, #148]
  40ec70:	ldur	w8, [x29, #-24]
  40ec74:	str	w8, [sp, #144]
  40ec78:	mov	w8, #0x1                   	// #1
  40ec7c:	str	w8, [sp, #140]
  40ec80:	ldr	w0, [sp, #140]
  40ec84:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ec88:	ldr	w8, [sp, #148]
  40ec8c:	and	w8, w8, #0x7
  40ec90:	cmp	w0, w8
  40ec94:	b.lt	40ecc8 <main_loop+0xe50>  // b.tstop
  40ec98:	ldr	w8, [sp, #140]
  40ec9c:	ldr	w9, [sp, #148]
  40eca0:	orr	w0, w9, w8, lsl #10
  40eca4:	ldr	w1, [sp, #144]
  40eca8:	ldr	x2, [sp, #96]
  40ecac:	mov	w3, #0x697                 	// #1687
  40ecb0:	ldr	x4, [sp, #88]
  40ecb4:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40ecb8:	add	x5, x5, #0x732
  40ecbc:	bl	40a400 <log_internal_realm@plt>
  40ecc0:	str	w0, [sp, #12]
  40ecc4:	b	40ecdc <main_loop+0xe64>
  40ecc8:	ldr	w0, [sp, #144]
  40eccc:	bl	40a410 <abs@plt>
  40ecd0:	mov	w8, wzr
  40ecd4:	subs	w8, w8, w0, uxtb
  40ecd8:	str	w8, [sp, #12]
  40ecdc:	ldr	w8, [sp, #12]
  40ece0:	str	w8, [sp, #136]
  40ece4:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40ece8:	add	x8, x8, #0x218
  40ecec:	ldr	w2, [x8]
  40ecf0:	mov	w9, wzr
  40ecf4:	mov	w0, w9
  40ecf8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40ecfc:	add	x1, x1, #0x769
  40ed00:	bl	40a720 <sd_notifyf@plt>
  40ed04:	ldur	x8, [x29, #-16]
  40ed08:	ldr	x8, [x8]
  40ed0c:	mov	x0, x8
  40ed10:	bl	40a730 <sd_event_loop@plt>
  40ed14:	stur	w0, [x29, #-24]
  40ed18:	ldur	w9, [x29, #-24]
  40ed1c:	cmp	w9, #0x0
  40ed20:	cset	w9, ge  // ge = tcont
  40ed24:	tbnz	w9, #0, 40eda4 <main_loop+0xf2c>
  40ed28:	mov	w8, #0x3                   	// #3
  40ed2c:	str	w8, [sp, #132]
  40ed30:	ldur	w8, [x29, #-24]
  40ed34:	str	w8, [sp, #128]
  40ed38:	mov	w8, #0x1                   	// #1
  40ed3c:	str	w8, [sp, #124]
  40ed40:	ldr	w0, [sp, #124]
  40ed44:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ed48:	ldr	w8, [sp, #132]
  40ed4c:	and	w8, w8, #0x7
  40ed50:	cmp	w0, w8
  40ed54:	b.lt	40ed88 <main_loop+0xf10>  // b.tstop
  40ed58:	ldr	w8, [sp, #124]
  40ed5c:	ldr	w9, [sp, #132]
  40ed60:	orr	w0, w9, w8, lsl #10
  40ed64:	ldr	w1, [sp, #128]
  40ed68:	ldr	x2, [sp, #96]
  40ed6c:	mov	w3, #0x69f                 	// #1695
  40ed70:	ldr	x4, [sp, #88]
  40ed74:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40ed78:	add	x5, x5, #0x79b
  40ed7c:	bl	40a400 <log_internal_realm@plt>
  40ed80:	str	w0, [sp, #8]
  40ed84:	b	40ed9c <main_loop+0xf24>
  40ed88:	ldr	w0, [sp, #128]
  40ed8c:	bl	40a410 <abs@plt>
  40ed90:	mov	w8, wzr
  40ed94:	subs	w8, w8, w0, uxtb
  40ed98:	str	w8, [sp, #8]
  40ed9c:	ldr	w8, [sp, #8]
  40eda0:	str	w8, [sp, #120]
  40eda4:	mov	w8, wzr
  40eda8:	mov	w0, w8
  40edac:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  40edb0:	add	x1, x1, #0x7b1
  40edb4:	bl	40a740 <sd_notify@plt>
  40edb8:	ldur	w8, [x29, #-24]
  40edbc:	stur	w8, [x29, #-4]
  40edc0:	ldur	w0, [x29, #-4]
  40edc4:	ldr	x28, [sp, #480]
  40edc8:	ldp	x29, x30, [sp, #464]
  40edcc:	add	sp, sp, #0x1f0
  40edd0:	ret

000000000040edd4 <manager_free>:
  40edd4:	sub	sp, sp, #0x20
  40edd8:	stp	x29, x30, [sp, #16]
  40eddc:	add	x29, sp, #0x10
  40ede0:	str	x0, [sp, #8]
  40ede4:	ldr	x8, [sp, #8]
  40ede8:	cbnz	x8, 40edf0 <manager_free+0x1c>
  40edec:	b	40ee78 <manager_free+0xa4>
  40edf0:	bl	43e30c <udev_builtin_exit>
  40edf4:	ldr	x8, [sp, #8]
  40edf8:	ldr	w9, [x8, #32]
  40edfc:	str	w9, [sp, #4]
  40ee00:	bl	40a650 <getpid_cached@plt>
  40ee04:	ldr	w9, [sp, #4]
  40ee08:	cmp	w9, w0
  40ee0c:	b.ne	40ee1c <manager_free+0x48>  // b.any
  40ee10:	ldr	x8, [sp, #8]
  40ee14:	ldr	x0, [x8, #72]
  40ee18:	bl	416b14 <udev_ctrl_cleanup>
  40ee1c:	ldr	x0, [sp, #8]
  40ee20:	bl	40ee84 <manager_clear_for_worker>
  40ee24:	ldr	x8, [sp, #8]
  40ee28:	ldr	x0, [x8, #56]
  40ee2c:	bl	40a750 <sd_netlink_unref@plt>
  40ee30:	ldr	x8, [sp, #8]
  40ee34:	ldr	x8, [x8, #48]
  40ee38:	mov	x0, x8
  40ee3c:	bl	40ef98 <hashmap_free_free_free>
  40ee40:	ldr	x8, [sp, #8]
  40ee44:	ldr	x8, [x8, #40]
  40ee48:	mov	x0, x8
  40ee4c:	bl	4218b4 <udev_rules_free>
  40ee50:	ldr	x8, [sp, #8]
  40ee54:	ldr	w9, [x8, #80]
  40ee58:	mov	w0, w9
  40ee5c:	bl	40a760 <safe_close@plt>
  40ee60:	ldr	x8, [sp, #8]
  40ee64:	add	x8, x8, #0x54
  40ee68:	mov	x0, x8
  40ee6c:	bl	40a770 <safe_close_pair@plt>
  40ee70:	ldr	x0, [sp, #8]
  40ee74:	bl	40a530 <free@plt>
  40ee78:	ldp	x29, x30, [sp, #16]
  40ee7c:	add	sp, sp, #0x20
  40ee80:	ret

000000000040ee84 <manager_clear_for_worker>:
  40ee84:	sub	sp, sp, #0x20
  40ee88:	stp	x29, x30, [sp, #16]
  40ee8c:	add	x29, sp, #0x10
  40ee90:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40ee94:	add	x8, x8, #0xae0
  40ee98:	add	x2, x8, #0x3
  40ee9c:	str	x0, [sp, #8]
  40eea0:	str	x2, [sp]
  40eea4:	ldr	x8, [sp, #8]
  40eea8:	cmp	x8, #0x0
  40eeac:	cset	w9, ne  // ne = any
  40eeb0:	mov	w10, #0x1                   	// #1
  40eeb4:	eor	w9, w9, #0x1
  40eeb8:	eor	w9, w9, w10
  40eebc:	eor	w9, w9, w10
  40eec0:	and	w9, w9, #0x1
  40eec4:	mov	w0, w9
  40eec8:	sxtw	x8, w0
  40eecc:	cbz	x8, 40eef0 <manager_clear_for_worker+0x6c>
  40eed0:	mov	w0, #0x1                   	// #1
  40eed4:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40eed8:	add	x1, x1, #0xcb6
  40eedc:	ldr	x2, [sp]
  40eee0:	mov	w3, #0x114                 	// #276
  40eee4:	adrp	x4, 463000 <dhcp_lease_set_client_id+0xc4>
  40eee8:	add	x4, x4, #0xcbe
  40eeec:	bl	40a540 <log_assert_failed_realm@plt>
  40eef0:	ldr	x8, [sp, #8]
  40eef4:	ldr	x0, [x8, #96]
  40eef8:	bl	40a780 <sd_event_source_unref@plt>
  40eefc:	ldr	x8, [sp, #8]
  40ef00:	str	x0, [x8, #96]
  40ef04:	ldr	x8, [sp, #8]
  40ef08:	ldr	x0, [x8, #104]
  40ef0c:	bl	40a780 <sd_event_source_unref@plt>
  40ef10:	ldr	x8, [sp, #8]
  40ef14:	str	x0, [x8, #104]
  40ef18:	ldr	x8, [sp, #8]
  40ef1c:	ldr	x0, [x8]
  40ef20:	bl	40a790 <sd_event_unref@plt>
  40ef24:	ldr	x8, [sp, #8]
  40ef28:	str	x0, [x8]
  40ef2c:	ldr	x8, [sp, #8]
  40ef30:	ldr	x0, [x8, #8]
  40ef34:	bl	40efcc <hashmap_free>
  40ef38:	ldr	x8, [sp, #8]
  40ef3c:	str	x0, [x8, #8]
  40ef40:	ldr	x0, [sp, #8]
  40ef44:	mov	w9, wzr
  40ef48:	mov	w1, w9
  40ef4c:	bl	40effc <event_queue_cleanup>
  40ef50:	ldr	x8, [sp, #8]
  40ef54:	ldr	x0, [x8, #64]
  40ef58:	bl	40a7a0 <sd_device_monitor_unref@plt>
  40ef5c:	ldr	x8, [sp, #8]
  40ef60:	str	x0, [x8, #64]
  40ef64:	ldr	x8, [sp, #8]
  40ef68:	ldr	x0, [x8, #72]
  40ef6c:	bl	41698c <udev_ctrl_unref>
  40ef70:	ldr	x8, [sp, #8]
  40ef74:	str	x0, [x8, #72]
  40ef78:	ldr	x8, [sp, #8]
  40ef7c:	ldr	w0, [x8, #84]
  40ef80:	bl	40a760 <safe_close@plt>
  40ef84:	ldr	x8, [sp, #8]
  40ef88:	str	w0, [x8, #84]
  40ef8c:	ldp	x29, x30, [sp, #16]
  40ef90:	add	sp, sp, #0x20
  40ef94:	ret

000000000040ef98 <hashmap_free_free_free>:
  40ef98:	sub	sp, sp, #0x20
  40ef9c:	stp	x29, x30, [sp, #16]
  40efa0:	add	x29, sp, #0x10
  40efa4:	adrp	x8, 40a000 <_init-0x2f8>
  40efa8:	add	x8, x8, #0x530
  40efac:	str	x0, [sp, #8]
  40efb0:	ldr	x0, [sp, #8]
  40efb4:	mov	x1, x8
  40efb8:	mov	x2, x8
  40efbc:	bl	40a7b0 <internal_hashmap_free@plt>
  40efc0:	ldp	x29, x30, [sp, #16]
  40efc4:	add	sp, sp, #0x20
  40efc8:	ret

000000000040efcc <hashmap_free>:
  40efcc:	sub	sp, sp, #0x20
  40efd0:	stp	x29, x30, [sp, #16]
  40efd4:	add	x29, sp, #0x10
  40efd8:	mov	x8, xzr
  40efdc:	str	x0, [sp, #8]
  40efe0:	ldr	x0, [sp, #8]
  40efe4:	mov	x1, x8
  40efe8:	mov	x2, x8
  40efec:	bl	40a7b0 <internal_hashmap_free@plt>
  40eff0:	ldp	x29, x30, [sp, #16]
  40eff4:	add	sp, sp, #0x20
  40eff8:	ret

000000000040effc <event_queue_cleanup>:
  40effc:	sub	sp, sp, #0x40
  40f000:	stp	x29, x30, [sp, #48]
  40f004:	add	x29, sp, #0x30
  40f008:	stur	x0, [x29, #-8]
  40f00c:	stur	w1, [x29, #-12]
  40f010:	ldur	x8, [x29, #-8]
  40f014:	ldr	x8, [x8, #16]
  40f018:	str	x8, [sp, #24]
  40f01c:	ldr	x8, [sp, #24]
  40f020:	mov	w9, #0x0                   	// #0
  40f024:	str	w9, [sp, #12]
  40f028:	cbz	x8, 40f040 <event_queue_cleanup+0x44>
  40f02c:	ldr	x8, [sp, #24]
  40f030:	ldr	x8, [x8, #72]
  40f034:	str	x8, [sp, #16]
  40f038:	mov	w9, #0x1                   	// #1
  40f03c:	str	w9, [sp, #12]
  40f040:	ldr	w8, [sp, #12]
  40f044:	tbnz	w8, #0, 40f04c <event_queue_cleanup+0x50>
  40f048:	b	40f080 <event_queue_cleanup+0x84>
  40f04c:	ldur	w8, [x29, #-12]
  40f050:	cbz	w8, 40f06c <event_queue_cleanup+0x70>
  40f054:	ldur	w8, [x29, #-12]
  40f058:	ldr	x9, [sp, #24]
  40f05c:	ldr	w10, [x9, #16]
  40f060:	cmp	w8, w10
  40f064:	b.eq	40f06c <event_queue_cleanup+0x70>  // b.none
  40f068:	b	40f074 <event_queue_cleanup+0x78>
  40f06c:	ldr	x0, [sp, #24]
  40f070:	bl	40f08c <event_free>
  40f074:	ldr	x8, [sp, #16]
  40f078:	str	x8, [sp, #24]
  40f07c:	b	40f01c <event_queue_cleanup+0x20>
  40f080:	ldp	x29, x30, [sp, #48]
  40f084:	add	sp, sp, #0x40
  40f088:	ret

000000000040f08c <event_free>:
  40f08c:	sub	sp, sp, #0x50
  40f090:	stp	x29, x30, [sp, #64]
  40f094:	add	x29, sp, #0x40
  40f098:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40f09c:	add	x8, x8, #0xae0
  40f0a0:	add	x8, x8, #0x3
  40f0a4:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40f0a8:	add	x9, x9, #0xcf6
  40f0ac:	stur	x0, [x29, #-8]
  40f0b0:	ldur	x10, [x29, #-8]
  40f0b4:	str	x8, [sp, #16]
  40f0b8:	str	x9, [sp, #8]
  40f0bc:	cbnz	x10, 40f0c4 <event_free+0x38>
  40f0c0:	b	40f354 <event_free+0x2c8>
  40f0c4:	ldur	x8, [x29, #-8]
  40f0c8:	ldr	x8, [x8]
  40f0cc:	cmp	x8, #0x0
  40f0d0:	cset	w9, ne  // ne = any
  40f0d4:	mov	w10, #0x1                   	// #1
  40f0d8:	eor	w9, w9, #0x1
  40f0dc:	eor	w9, w9, w10
  40f0e0:	eor	w9, w9, w10
  40f0e4:	and	w9, w9, #0x1
  40f0e8:	mov	w0, w9
  40f0ec:	sxtw	x8, w0
  40f0f0:	cbz	x8, 40f110 <event_free+0x84>
  40f0f4:	mov	w0, #0x1                   	// #1
  40f0f8:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f0fc:	add	x1, x1, #0xce7
  40f100:	ldr	x2, [sp, #16]
  40f104:	mov	w3, #0x98                  	// #152
  40f108:	ldr	x4, [sp, #8]
  40f10c:	bl	40a540 <log_assert_failed_realm@plt>
  40f110:	ldur	x8, [x29, #-8]
  40f114:	ldr	x8, [x8]
  40f118:	add	x8, x8, #0x10
  40f11c:	stur	x8, [x29, #-16]
  40f120:	ldur	x8, [x29, #-8]
  40f124:	stur	x8, [x29, #-24]
  40f128:	ldur	x8, [x29, #-24]
  40f12c:	cmp	x8, #0x0
  40f130:	cset	w9, ne  // ne = any
  40f134:	mov	w10, #0x1                   	// #1
  40f138:	eor	w9, w9, #0x1
  40f13c:	eor	w9, w9, w10
  40f140:	eor	w9, w9, w10
  40f144:	and	w9, w9, #0x1
  40f148:	mov	w0, w9
  40f14c:	sxtw	x8, w0
  40f150:	cbz	x8, 40f170 <event_free+0xe4>
  40f154:	mov	w0, #0x1                   	// #1
  40f158:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f15c:	add	x1, x1, #0xd16
  40f160:	ldr	x2, [sp, #16]
  40f164:	mov	w3, #0x9a                  	// #154
  40f168:	ldr	x4, [sp, #8]
  40f16c:	bl	40a540 <log_assert_failed_realm@plt>
  40f170:	ldur	x8, [x29, #-24]
  40f174:	ldr	x8, [x8, #72]
  40f178:	cbz	x8, 40f190 <event_free+0x104>
  40f17c:	ldur	x8, [x29, #-24]
  40f180:	ldr	x8, [x8, #80]
  40f184:	ldur	x9, [x29, #-24]
  40f188:	ldr	x9, [x9, #72]
  40f18c:	str	x8, [x9, #80]
  40f190:	ldur	x8, [x29, #-24]
  40f194:	ldr	x8, [x8, #80]
  40f198:	cbz	x8, 40f1b4 <event_free+0x128>
  40f19c:	ldur	x8, [x29, #-24]
  40f1a0:	ldr	x8, [x8, #72]
  40f1a4:	ldur	x9, [x29, #-24]
  40f1a8:	ldr	x9, [x9, #80]
  40f1ac:	str	x8, [x9, #72]
  40f1b0:	b	40f214 <event_free+0x188>
  40f1b4:	ldur	x8, [x29, #-16]
  40f1b8:	ldr	x8, [x8]
  40f1bc:	ldur	x9, [x29, #-24]
  40f1c0:	cmp	x8, x9
  40f1c4:	cset	w10, eq  // eq = none
  40f1c8:	mov	w11, #0x1                   	// #1
  40f1cc:	eor	w10, w10, #0x1
  40f1d0:	eor	w10, w10, w11
  40f1d4:	eor	w10, w10, w11
  40f1d8:	and	w10, w10, #0x1
  40f1dc:	mov	w0, w10
  40f1e0:	sxtw	x8, w0
  40f1e4:	cbz	x8, 40f204 <event_free+0x178>
  40f1e8:	mov	w0, #0x1                   	// #1
  40f1ec:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f1f0:	add	x1, x1, #0xd1c
  40f1f4:	ldr	x2, [sp, #16]
  40f1f8:	mov	w3, #0x9a                  	// #154
  40f1fc:	ldr	x4, [sp, #8]
  40f200:	bl	40a540 <log_assert_failed_realm@plt>
  40f204:	ldur	x8, [x29, #-24]
  40f208:	ldr	x8, [x8, #72]
  40f20c:	ldur	x9, [x29, #-16]
  40f210:	str	x8, [x9]
  40f214:	ldur	x8, [x29, #-24]
  40f218:	mov	x9, xzr
  40f21c:	str	x9, [x8, #80]
  40f220:	ldur	x8, [x29, #-24]
  40f224:	str	x9, [x8, #72]
  40f228:	ldur	x8, [x29, #-8]
  40f22c:	ldr	x0, [x8, #24]
  40f230:	bl	40a7c0 <sd_device_unref@plt>
  40f234:	ldur	x8, [x29, #-8]
  40f238:	ldr	x8, [x8, #32]
  40f23c:	mov	x0, x8
  40f240:	bl	40a7c0 <sd_device_unref@plt>
  40f244:	ldur	x8, [x29, #-8]
  40f248:	ldr	x8, [x8, #56]
  40f24c:	mov	x0, x8
  40f250:	bl	40a780 <sd_event_source_unref@plt>
  40f254:	ldur	x8, [x29, #-8]
  40f258:	ldr	x8, [x8, #64]
  40f25c:	mov	x0, x8
  40f260:	bl	40a780 <sd_event_source_unref@plt>
  40f264:	ldur	x8, [x29, #-8]
  40f268:	ldr	x8, [x8, #8]
  40f26c:	cbz	x8, 40f280 <event_free+0x1f4>
  40f270:	ldur	x8, [x29, #-8]
  40f274:	ldr	x8, [x8, #8]
  40f278:	mov	x9, xzr
  40f27c:	str	x9, [x8, #32]
  40f280:	ldur	x8, [x29, #-8]
  40f284:	ldr	x8, [x8]
  40f288:	ldr	x8, [x8, #16]
  40f28c:	cbnz	x8, 40f34c <event_free+0x2c0>
  40f290:	ldur	x8, [x29, #-8]
  40f294:	ldr	x8, [x8]
  40f298:	ldr	w9, [x8, #32]
  40f29c:	str	w9, [sp, #4]
  40f2a0:	bl	40a650 <getpid_cached@plt>
  40f2a4:	ldr	w9, [sp, #4]
  40f2a8:	cmp	w9, w0
  40f2ac:	b.ne	40f34c <event_free+0x2c0>  // b.any
  40f2b0:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40f2b4:	add	x0, x0, #0xd2c
  40f2b8:	bl	40a7d0 <unlink@plt>
  40f2bc:	cmp	w0, #0x0
  40f2c0:	cset	w8, ge  // ge = tcont
  40f2c4:	tbnz	w8, #0, 40f34c <event_free+0x2c0>
  40f2c8:	mov	w8, #0x4                   	// #4
  40f2cc:	stur	w8, [x29, #-28]
  40f2d0:	bl	40a480 <__errno_location@plt>
  40f2d4:	ldr	w8, [x0]
  40f2d8:	str	w8, [sp, #32]
  40f2dc:	mov	w8, #0x1                   	// #1
  40f2e0:	str	w8, [sp, #28]
  40f2e4:	ldr	w0, [sp, #28]
  40f2e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  40f2ec:	ldur	w8, [x29, #-28]
  40f2f0:	and	w8, w8, #0x7
  40f2f4:	cmp	w0, w8
  40f2f8:	b.lt	40f330 <event_free+0x2a4>  // b.tstop
  40f2fc:	ldr	w8, [sp, #28]
  40f300:	ldur	w9, [x29, #-28]
  40f304:	orr	w0, w9, w8, lsl #10
  40f308:	ldr	w1, [sp, #32]
  40f30c:	ldr	x2, [sp, #16]
  40f310:	mov	w3, #0xa8                  	// #168
  40f314:	adrp	x4, 463000 <dhcp_lease_set_client_id+0xc4>
  40f318:	add	x4, x4, #0xd3c
  40f31c:	adrp	x5, 463000 <dhcp_lease_set_client_id+0xc4>
  40f320:	add	x5, x5, #0xd47
  40f324:	bl	40a400 <log_internal_realm@plt>
  40f328:	str	w0, [sp]
  40f32c:	b	40f344 <event_free+0x2b8>
  40f330:	ldr	w0, [sp, #32]
  40f334:	bl	40a410 <abs@plt>
  40f338:	mov	w8, wzr
  40f33c:	subs	w8, w8, w0, uxtb
  40f340:	str	w8, [sp]
  40f344:	ldr	w8, [sp]
  40f348:	str	w8, [sp, #24]
  40f34c:	ldur	x0, [x29, #-8]
  40f350:	bl	40a530 <free@plt>
  40f354:	ldp	x29, x30, [sp, #64]
  40f358:	add	sp, sp, #0x50
  40f35c:	ret

000000000040f360 <safe_atou>:
  40f360:	sub	sp, sp, #0x20
  40f364:	stp	x29, x30, [sp, #16]
  40f368:	add	x29, sp, #0x10
  40f36c:	mov	w8, wzr
  40f370:	str	x0, [sp, #8]
  40f374:	str	x1, [sp]
  40f378:	ldr	x0, [sp, #8]
  40f37c:	ldr	x2, [sp]
  40f380:	mov	w1, w8
  40f384:	bl	40a7e0 <safe_atou_full@plt>
  40f388:	ldp	x29, x30, [sp, #16]
  40f38c:	add	sp, sp, #0x20
  40f390:	ret

000000000040f394 <help>:
  40f394:	sub	sp, sp, #0x40
  40f398:	stp	x29, x30, [sp, #48]
  40f39c:	add	x29, sp, #0x30
  40f3a0:	mov	x8, xzr
  40f3a4:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40f3a8:	add	x0, x0, #0xef0
  40f3ac:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f3b0:	add	x1, x1, #0xf06
  40f3b4:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40f3b8:	add	x9, x9, #0xae0
  40f3bc:	add	x9, x9, #0x3
  40f3c0:	sub	x2, x29, #0x10
  40f3c4:	stur	x8, [x29, #-16]
  40f3c8:	str	x9, [sp, #16]
  40f3cc:	bl	40a7f0 <terminal_urlify_man@plt>
  40f3d0:	stur	w0, [x29, #-20]
  40f3d4:	ldur	w10, [x29, #-20]
  40f3d8:	cmp	w10, #0x0
  40f3dc:	cset	w10, ge  // ge = tcont
  40f3e0:	tbnz	w10, #0, 40f414 <help+0x80>
  40f3e4:	mov	w8, #0x1                   	// #1
  40f3e8:	mov	w0, w8
  40f3ec:	ldr	x1, [sp, #16]
  40f3f0:	mov	w2, #0x5b7                 	// #1463
  40f3f4:	adrp	x3, 463000 <dhcp_lease_set_client_id+0xc4>
  40f3f8:	add	x3, x3, #0xdad
  40f3fc:	str	w8, [sp, #12]
  40f400:	bl	40a5e0 <log_oom_internal@plt>
  40f404:	stur	w0, [x29, #-4]
  40f408:	ldr	w8, [sp, #12]
  40f40c:	str	w8, [sp, #24]
  40f410:	b	40f43c <help+0xa8>
  40f414:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  40f418:	add	x8, x8, #0x270
  40f41c:	ldr	x1, [x8]
  40f420:	ldur	x2, [x29, #-16]
  40f424:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  40f428:	add	x0, x0, #0xf08
  40f42c:	bl	40a580 <printf@plt>
  40f430:	stur	wzr, [x29, #-4]
  40f434:	mov	w9, #0x1                   	// #1
  40f438:	str	w9, [sp, #24]
  40f43c:	sub	x0, x29, #0x10
  40f440:	bl	40d014 <freep>
  40f444:	ldur	w0, [x29, #-4]
  40f448:	ldp	x29, x30, [sp, #48]
  40f44c:	add	sp, sp, #0x40
  40f450:	ret

000000000040f454 <proc_cmdline_value_missing>:
  40f454:	sub	sp, sp, #0x50
  40f458:	stp	x29, x30, [sp, #64]
  40f45c:	add	x29, sp, #0x40
  40f460:	adrp	x8, 464000 <on_inotify.__assert_in_set+0x540>
  40f464:	add	x8, x8, #0x257
  40f468:	add	x2, x8, #0x3
  40f46c:	stur	x0, [x29, #-16]
  40f470:	stur	x1, [x29, #-24]
  40f474:	ldur	x8, [x29, #-24]
  40f478:	str	x2, [sp, #16]
  40f47c:	cbnz	x8, 40f510 <proc_cmdline_value_missing+0xbc>
  40f480:	mov	w8, #0x4                   	// #4
  40f484:	stur	w8, [x29, #-28]
  40f488:	str	wzr, [sp, #32]
  40f48c:	mov	w8, #0x1                   	// #1
  40f490:	str	w8, [sp, #28]
  40f494:	ldr	w0, [sp, #28]
  40f498:	bl	40a3f0 <log_get_max_level_realm@plt>
  40f49c:	ldur	w8, [x29, #-28]
  40f4a0:	and	w8, w8, #0x7
  40f4a4:	cmp	w0, w8
  40f4a8:	b.lt	40f4e4 <proc_cmdline_value_missing+0x90>  // b.tstop
  40f4ac:	ldr	w8, [sp, #28]
  40f4b0:	ldur	w9, [x29, #-28]
  40f4b4:	orr	w0, w9, w8, lsl #10
  40f4b8:	ldr	w1, [sp, #32]
  40f4bc:	ldur	x6, [x29, #-16]
  40f4c0:	ldr	x2, [sp, #16]
  40f4c4:	mov	w3, #0x21                  	// #33
  40f4c8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40f4cc:	add	x4, x4, #0x273
  40f4d0:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40f4d4:	add	x5, x5, #0x28e
  40f4d8:	bl	40a400 <log_internal_realm@plt>
  40f4dc:	str	w0, [sp, #12]
  40f4e0:	b	40f4f8 <proc_cmdline_value_missing+0xa4>
  40f4e4:	ldr	w0, [sp, #32]
  40f4e8:	bl	40a410 <abs@plt>
  40f4ec:	mov	w8, wzr
  40f4f0:	subs	w8, w8, w0, uxtb
  40f4f4:	str	w8, [sp, #12]
  40f4f8:	ldr	w8, [sp, #12]
  40f4fc:	str	w8, [sp, #24]
  40f500:	mov	w8, #0x1                   	// #1
  40f504:	and	w8, w8, #0x1
  40f508:	sturb	w8, [x29, #-1]
  40f50c:	b	40f51c <proc_cmdline_value_missing+0xc8>
  40f510:	mov	w8, wzr
  40f514:	and	w8, w8, #0x1
  40f518:	sturb	w8, [x29, #-1]
  40f51c:	ldurb	w8, [x29, #-1]
  40f520:	and	w0, w8, #0x1
  40f524:	ldp	x29, x30, [sp, #64]
  40f528:	add	sp, sp, #0x50
  40f52c:	ret

000000000040f530 <startswith>:
  40f530:	sub	sp, sp, #0x30
  40f534:	stp	x29, x30, [sp, #32]
  40f538:	add	x29, sp, #0x20
  40f53c:	str	x0, [sp, #16]
  40f540:	str	x1, [sp, #8]
  40f544:	ldr	x0, [sp, #8]
  40f548:	bl	40a800 <strlen@plt>
  40f54c:	str	x0, [sp]
  40f550:	ldr	x0, [sp, #16]
  40f554:	ldr	x1, [sp, #8]
  40f558:	ldr	x2, [sp]
  40f55c:	bl	40a810 <strncmp@plt>
  40f560:	cbnz	w0, 40f578 <startswith+0x48>
  40f564:	ldr	x8, [sp, #16]
  40f568:	ldr	x9, [sp]
  40f56c:	add	x8, x8, x9
  40f570:	stur	x8, [x29, #-8]
  40f574:	b	40f580 <startswith+0x50>
  40f578:	mov	x8, xzr
  40f57c:	stur	x8, [x29, #-8]
  40f580:	ldur	x0, [x29, #-8]
  40f584:	ldp	x29, x30, [sp, #32]
  40f588:	add	sp, sp, #0x30
  40f58c:	ret

000000000040f590 <malloc_multiply>:
  40f590:	sub	sp, sp, #0x40
  40f594:	stp	x29, x30, [sp, #48]
  40f598:	add	x29, sp, #0x30
  40f59c:	stur	x0, [x29, #-16]
  40f5a0:	str	x1, [sp, #24]
  40f5a4:	ldur	x0, [x29, #-16]
  40f5a8:	ldr	x1, [sp, #24]
  40f5ac:	bl	40f60c <size_multiply_overflow>
  40f5b0:	tbnz	w0, #0, 40f5b8 <malloc_multiply+0x28>
  40f5b4:	b	40f5c4 <malloc_multiply+0x34>
  40f5b8:	mov	x8, xzr
  40f5bc:	stur	x8, [x29, #-8]
  40f5c0:	b	40f5fc <malloc_multiply+0x6c>
  40f5c4:	ldur	x8, [x29, #-16]
  40f5c8:	ldr	x9, [sp, #24]
  40f5cc:	mul	x8, x8, x9
  40f5d0:	str	x8, [sp, #16]
  40f5d4:	cbz	x8, 40f5e4 <malloc_multiply+0x54>
  40f5d8:	ldr	x8, [sp, #16]
  40f5dc:	str	x8, [sp, #8]
  40f5e0:	b	40f5ec <malloc_multiply+0x5c>
  40f5e4:	mov	x8, #0x1                   	// #1
  40f5e8:	str	x8, [sp, #8]
  40f5ec:	ldr	x8, [sp, #8]
  40f5f0:	mov	x0, x8
  40f5f4:	bl	40a820 <malloc@plt>
  40f5f8:	stur	x0, [x29, #-8]
  40f5fc:	ldur	x0, [x29, #-8]
  40f600:	ldp	x29, x30, [sp, #48]
  40f604:	add	sp, sp, #0x40
  40f608:	ret

000000000040f60c <size_multiply_overflow>:
  40f60c:	sub	sp, sp, #0x20
  40f610:	str	x0, [sp, #24]
  40f614:	str	x1, [sp, #16]
  40f618:	ldr	x8, [sp, #16]
  40f61c:	mov	w9, #0x0                   	// #0
  40f620:	str	w9, [sp, #12]
  40f624:	cbz	x8, 40f644 <size_multiply_overflow+0x38>
  40f628:	ldr	x8, [sp, #24]
  40f62c:	ldr	x9, [sp, #16]
  40f630:	mov	x10, #0xffffffffffffffff    	// #-1
  40f634:	udiv	x9, x10, x9
  40f638:	cmp	x8, x9
  40f63c:	cset	w11, hi  // hi = pmore
  40f640:	str	w11, [sp, #12]
  40f644:	ldr	w8, [sp, #12]
  40f648:	mov	w9, #0x1                   	// #1
  40f64c:	eor	w8, w8, #0x1
  40f650:	eor	w8, w8, w9
  40f654:	and	w8, w8, #0x1
  40f658:	mov	w0, w8
  40f65c:	sxtw	x10, w0
  40f660:	cmp	x10, #0x0
  40f664:	cset	w8, ne  // ne = any
  40f668:	and	w0, w8, #0x1
  40f66c:	add	sp, sp, #0x20
  40f670:	ret

000000000040f674 <setsockopt_int>:
  40f674:	sub	sp, sp, #0x30
  40f678:	stp	x29, x30, [sp, #32]
  40f67c:	add	x29, sp, #0x20
  40f680:	mov	w4, #0x4                   	// #4
  40f684:	add	x8, sp, #0xc
  40f688:	stur	w0, [x29, #-8]
  40f68c:	stur	w1, [x29, #-12]
  40f690:	str	w2, [sp, #16]
  40f694:	str	w3, [sp, #12]
  40f698:	ldur	w0, [x29, #-8]
  40f69c:	ldur	w1, [x29, #-12]
  40f6a0:	ldr	w2, [sp, #16]
  40f6a4:	mov	x3, x8
  40f6a8:	bl	40a830 <setsockopt@plt>
  40f6ac:	cmp	w0, #0x0
  40f6b0:	cset	w9, ge  // ge = tcont
  40f6b4:	tbnz	w9, #0, 40f6d0 <setsockopt_int+0x5c>
  40f6b8:	bl	40a480 <__errno_location@plt>
  40f6bc:	ldr	w8, [x0]
  40f6c0:	mov	w9, wzr
  40f6c4:	subs	w8, w9, w8
  40f6c8:	stur	w8, [x29, #-4]
  40f6cc:	b	40f6d4 <setsockopt_int+0x60>
  40f6d0:	stur	wzr, [x29, #-4]
  40f6d4:	ldur	w0, [x29, #-4]
  40f6d8:	ldp	x29, x30, [sp, #32]
  40f6dc:	add	sp, sp, #0x30
  40f6e0:	ret

000000000040f6e4 <on_sigterm>:
  40f6e4:	sub	sp, sp, #0x40
  40f6e8:	stp	x29, x30, [sp, #48]
  40f6ec:	add	x29, sp, #0x30
  40f6f0:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40f6f4:	add	x8, x8, #0xae0
  40f6f8:	add	x8, x8, #0x3
  40f6fc:	stur	x0, [x29, #-8]
  40f700:	stur	x1, [x29, #-16]
  40f704:	str	x2, [sp, #24]
  40f708:	ldr	x9, [sp, #24]
  40f70c:	str	x9, [sp, #16]
  40f710:	str	x8, [sp, #8]
  40f714:	ldr	x8, [sp, #16]
  40f718:	cmp	x8, #0x0
  40f71c:	cset	w9, ne  // ne = any
  40f720:	mov	w10, #0x1                   	// #1
  40f724:	eor	w9, w9, #0x1
  40f728:	eor	w9, w9, w10
  40f72c:	eor	w9, w9, w10
  40f730:	and	w9, w9, #0x1
  40f734:	mov	w0, w9
  40f738:	sxtw	x8, w0
  40f73c:	cbz	x8, 40f760 <on_sigterm+0x7c>
  40f740:	mov	w0, #0x1                   	// #1
  40f744:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f748:	add	x1, x1, #0xcb6
  40f74c:	ldr	x2, [sp, #8]
  40f750:	mov	w3, #0x4e5                 	// #1253
  40f754:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40f758:	add	x4, x4, #0x7d4
  40f75c:	bl	40a540 <log_assert_failed_realm@plt>
  40f760:	ldr	x0, [sp, #16]
  40f764:	bl	4116f0 <manager_exit>
  40f768:	mov	w0, #0x1                   	// #1
  40f76c:	ldp	x29, x30, [sp, #48]
  40f770:	add	sp, sp, #0x40
  40f774:	ret

000000000040f778 <on_sighup>:
  40f778:	sub	sp, sp, #0x40
  40f77c:	stp	x29, x30, [sp, #48]
  40f780:	add	x29, sp, #0x30
  40f784:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  40f788:	add	x8, x8, #0xae0
  40f78c:	add	x8, x8, #0x3
  40f790:	stur	x0, [x29, #-8]
  40f794:	stur	x1, [x29, #-16]
  40f798:	str	x2, [sp, #24]
  40f79c:	ldr	x9, [sp, #24]
  40f7a0:	str	x9, [sp, #16]
  40f7a4:	str	x8, [sp, #8]
  40f7a8:	ldr	x8, [sp, #16]
  40f7ac:	cmp	x8, #0x0
  40f7b0:	cset	w9, ne  // ne = any
  40f7b4:	mov	w10, #0x1                   	// #1
  40f7b8:	eor	w9, w9, #0x1
  40f7bc:	eor	w9, w9, w10
  40f7c0:	eor	w9, w9, w10
  40f7c4:	and	w9, w9, #0x1
  40f7c8:	mov	w0, w9
  40f7cc:	sxtw	x8, w0
  40f7d0:	cbz	x8, 40f7f4 <on_sighup+0x7c>
  40f7d4:	mov	w0, #0x1                   	// #1
  40f7d8:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f7dc:	add	x1, x1, #0xcb6
  40f7e0:	ldr	x2, [sp, #8]
  40f7e4:	mov	w3, #0x4ef                 	// #1263
  40f7e8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40f7ec:	add	x4, x4, #0x888
  40f7f0:	bl	40a540 <log_assert_failed_realm@plt>
  40f7f4:	ldr	x0, [sp, #16]
  40f7f8:	bl	411924 <manager_reload>
  40f7fc:	mov	w0, #0x1                   	// #1
  40f800:	ldp	x29, x30, [sp, #48]
  40f804:	add	sp, sp, #0x40
  40f808:	ret

000000000040f80c <on_sigchld>:
  40f80c:	sub	sp, sp, #0x1a0
  40f810:	stp	x29, x30, [sp, #384]
  40f814:	str	x28, [sp, #400]
  40f818:	add	x29, sp, #0x180
  40f81c:	sub	x8, x29, #0x38
  40f820:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  40f824:	add	x9, x9, #0xae0
  40f828:	add	x9, x9, #0x3
  40f82c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  40f830:	add	x10, x10, #0x969
  40f834:	str	x0, [x8, #48]
  40f838:	str	x1, [x8, #40]
  40f83c:	str	x2, [x8, #32]
  40f840:	ldr	x11, [x8, #32]
  40f844:	str	x11, [x8, #24]
  40f848:	str	x8, [sp, #128]
  40f84c:	str	x9, [sp, #120]
  40f850:	str	x10, [sp, #112]
  40f854:	ldr	x8, [sp, #128]
  40f858:	ldr	x9, [x8, #24]
  40f85c:	cmp	x9, #0x0
  40f860:	cset	w10, ne  // ne = any
  40f864:	mov	w11, #0x1                   	// #1
  40f868:	eor	w10, w10, #0x1
  40f86c:	eor	w10, w10, w11
  40f870:	eor	w10, w10, w11
  40f874:	and	w10, w10, #0x1
  40f878:	mov	w0, w10
  40f87c:	sxtw	x9, w0
  40f880:	cbz	x9, 40f8a4 <on_sigchld+0x98>
  40f884:	mov	w0, #0x1                   	// #1
  40f888:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  40f88c:	add	x1, x1, #0xcb6
  40f890:	ldr	x2, [sp, #120]
  40f894:	mov	w3, #0x4fa                 	// #1274
  40f898:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  40f89c:	add	x4, x4, #0x91e
  40f8a0:	bl	40a540 <log_assert_failed_realm@plt>
  40f8a4:	mov	w0, #0xffffffff            	// #-1
  40f8a8:	sub	x1, x29, #0x2c
  40f8ac:	mov	w2, #0x1                   	// #1
  40f8b0:	bl	40a840 <waitpid@plt>
  40f8b4:	stur	w0, [x29, #-40]
  40f8b8:	ldur	w8, [x29, #-40]
  40f8bc:	cmp	w8, #0x0
  40f8c0:	cset	w8, gt
  40f8c4:	tbnz	w8, #0, 40f8cc <on_sigchld+0xc0>
  40f8c8:	b	40ff98 <on_sigchld+0x78c>
  40f8cc:	ldr	x8, [sp, #128]
  40f8d0:	ldr	x9, [x8, #24]
  40f8d4:	ldr	x0, [x9, #8]
  40f8d8:	ldur	w10, [x29, #-40]
  40f8dc:	str	x0, [sp, #104]
  40f8e0:	mov	w0, w10
  40f8e4:	bl	411a20 <PID_TO_PTR>
  40f8e8:	ldr	x8, [sp, #104]
  40f8ec:	str	x0, [sp, #96]
  40f8f0:	mov	x0, x8
  40f8f4:	ldr	x1, [sp, #96]
  40f8f8:	bl	4119f4 <hashmap_get>
  40f8fc:	ldr	x8, [sp, #128]
  40f900:	str	x0, [x8]
  40f904:	ldr	x9, [x8]
  40f908:	cbnz	x9, 40f98c <on_sigchld+0x180>
  40f90c:	mov	w8, #0x4                   	// #4
  40f910:	stur	w8, [x29, #-60]
  40f914:	stur	wzr, [x29, #-64]
  40f918:	mov	w8, #0x1                   	// #1
  40f91c:	stur	w8, [x29, #-68]
  40f920:	ldur	w0, [x29, #-68]
  40f924:	bl	40a3f0 <log_get_max_level_realm@plt>
  40f928:	ldur	w8, [x29, #-60]
  40f92c:	and	w8, w8, #0x7
  40f930:	cmp	w0, w8
  40f934:	b.lt	40f96c <on_sigchld+0x160>  // b.tstop
  40f938:	ldur	w8, [x29, #-68]
  40f93c:	ldur	w9, [x29, #-60]
  40f940:	orr	w0, w9, w8, lsl #10
  40f944:	ldur	w1, [x29, #-64]
  40f948:	ldur	w6, [x29, #-40]
  40f94c:	ldr	x2, [sp, #120]
  40f950:	mov	w3, #0x507                 	// #1287
  40f954:	ldr	x4, [sp, #112]
  40f958:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40f95c:	add	x5, x5, #0x974
  40f960:	bl	40a400 <log_internal_realm@plt>
  40f964:	str	w0, [sp, #92]
  40f968:	b	40f980 <on_sigchld+0x174>
  40f96c:	ldur	w0, [x29, #-64]
  40f970:	bl	40a410 <abs@plt>
  40f974:	mov	w8, wzr
  40f978:	subs	w8, w8, w0, uxtb
  40f97c:	str	w8, [sp, #92]
  40f980:	ldr	w8, [sp, #92]
  40f984:	stur	w8, [x29, #-72]
  40f988:	b	40f8a4 <on_sigchld+0x98>
  40f98c:	ldur	w8, [x29, #-44]
  40f990:	and	w8, w8, #0x7f
  40f994:	cbnz	w8, 40fab4 <on_sigchld+0x2a8>
  40f998:	ldur	w8, [x29, #-44]
  40f99c:	and	w8, w8, #0xff00
  40f9a0:	asr	w8, w8, #8
  40f9a4:	cbnz	w8, 40fa28 <on_sigchld+0x21c>
  40f9a8:	mov	w8, #0x7                   	// #7
  40f9ac:	stur	w8, [x29, #-76]
  40f9b0:	stur	wzr, [x29, #-80]
  40f9b4:	mov	w8, #0x1                   	// #1
  40f9b8:	stur	w8, [x29, #-84]
  40f9bc:	ldur	w0, [x29, #-84]
  40f9c0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40f9c4:	ldur	w8, [x29, #-76]
  40f9c8:	and	w8, w8, #0x7
  40f9cc:	cmp	w0, w8
  40f9d0:	b.lt	40fa08 <on_sigchld+0x1fc>  // b.tstop
  40f9d4:	ldur	w8, [x29, #-84]
  40f9d8:	ldur	w9, [x29, #-76]
  40f9dc:	orr	w0, w9, w8, lsl #10
  40f9e0:	ldur	w1, [x29, #-80]
  40f9e4:	ldur	w6, [x29, #-40]
  40f9e8:	ldr	x2, [sp, #120]
  40f9ec:	mov	w3, #0x50d                 	// #1293
  40f9f0:	ldr	x4, [sp, #112]
  40f9f4:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40f9f8:	add	x5, x5, #0x995
  40f9fc:	bl	40a400 <log_internal_realm@plt>
  40fa00:	str	w0, [sp, #88]
  40fa04:	b	40fa1c <on_sigchld+0x210>
  40fa08:	ldur	w0, [x29, #-80]
  40fa0c:	bl	40a410 <abs@plt>
  40fa10:	mov	w8, wzr
  40fa14:	subs	w8, w8, w0, uxtb
  40fa18:	str	w8, [sp, #88]
  40fa1c:	ldr	w8, [sp, #88]
  40fa20:	stur	w8, [x29, #-88]
  40fa24:	b	40fab0 <on_sigchld+0x2a4>
  40fa28:	mov	w8, #0x4                   	// #4
  40fa2c:	stur	w8, [x29, #-92]
  40fa30:	stur	wzr, [x29, #-96]
  40fa34:	mov	w8, #0x1                   	// #1
  40fa38:	stur	w8, [x29, #-100]
  40fa3c:	ldur	w0, [x29, #-100]
  40fa40:	bl	40a3f0 <log_get_max_level_realm@plt>
  40fa44:	ldur	w8, [x29, #-92]
  40fa48:	and	w8, w8, #0x7
  40fa4c:	cmp	w0, w8
  40fa50:	b.lt	40fa94 <on_sigchld+0x288>  // b.tstop
  40fa54:	ldur	w8, [x29, #-100]
  40fa58:	ldur	w9, [x29, #-92]
  40fa5c:	orr	w0, w9, w8, lsl #10
  40fa60:	ldur	w1, [x29, #-96]
  40fa64:	ldur	w6, [x29, #-40]
  40fa68:	ldur	w8, [x29, #-44]
  40fa6c:	and	w8, w8, #0xff00
  40fa70:	asr	w7, w8, #8
  40fa74:	ldr	x2, [sp, #120]
  40fa78:	mov	w3, #0x50f                 	// #1295
  40fa7c:	ldr	x4, [sp, #112]
  40fa80:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40fa84:	add	x5, x5, #0x9a8
  40fa88:	bl	40a400 <log_internal_realm@plt>
  40fa8c:	str	w0, [sp, #84]
  40fa90:	b	40faa8 <on_sigchld+0x29c>
  40fa94:	ldur	w0, [x29, #-96]
  40fa98:	bl	40a410 <abs@plt>
  40fa9c:	mov	w8, wzr
  40faa0:	subs	w8, w8, w0, uxtb
  40faa4:	str	w8, [sp, #84]
  40faa8:	ldr	w8, [sp, #84]
  40faac:	stur	w8, [x29, #-104]
  40fab0:	b	40fd44 <on_sigchld+0x538>
  40fab4:	ldur	w8, [x29, #-44]
  40fab8:	and	w8, w8, #0x7f
  40fabc:	add	w8, w8, #0x1
  40fac0:	lsl	w8, w8, #24
  40fac4:	asr	w8, w8, #24
  40fac8:	asr	w8, w8, #1
  40facc:	cmp	w8, #0x0
  40fad0:	cset	w8, le
  40fad4:	tbnz	w8, #0, 40fba4 <on_sigchld+0x398>
  40fad8:	mov	w8, #0x4                   	// #4
  40fadc:	stur	w8, [x29, #-108]
  40fae0:	stur	wzr, [x29, #-112]
  40fae4:	mov	w8, #0x1                   	// #1
  40fae8:	stur	w8, [x29, #-116]
  40faec:	ldur	w0, [x29, #-116]
  40faf0:	bl	40a3f0 <log_get_max_level_realm@plt>
  40faf4:	ldur	w8, [x29, #-108]
  40faf8:	and	w8, w8, #0x7
  40fafc:	cmp	w0, w8
  40fb00:	b.lt	40fb84 <on_sigchld+0x378>  // b.tstop
  40fb04:	ldur	w8, [x29, #-116]
  40fb08:	ldur	w9, [x29, #-108]
  40fb0c:	orr	w0, w9, w8, lsl #10
  40fb10:	ldur	w1, [x29, #-112]
  40fb14:	ldur	w6, [x29, #-40]
  40fb18:	ldur	w8, [x29, #-44]
  40fb1c:	and	w7, w8, #0x7f
  40fb20:	ldur	w8, [x29, #-44]
  40fb24:	and	w8, w8, #0x7f
  40fb28:	str	w0, [sp, #80]
  40fb2c:	mov	w0, w8
  40fb30:	str	w1, [sp, #76]
  40fb34:	str	w6, [sp, #72]
  40fb38:	str	w7, [sp, #68]
  40fb3c:	bl	40a850 <signal_to_string@plt>
  40fb40:	ldr	w8, [sp, #80]
  40fb44:	str	x0, [sp, #56]
  40fb48:	mov	w0, w8
  40fb4c:	ldr	w1, [sp, #76]
  40fb50:	ldr	x2, [sp, #120]
  40fb54:	mov	w3, #0x511                 	// #1297
  40fb58:	ldr	x4, [sp, #112]
  40fb5c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40fb60:	add	x5, x5, #0x9cf
  40fb64:	ldr	w6, [sp, #72]
  40fb68:	ldr	w7, [sp, #68]
  40fb6c:	mov	x10, sp
  40fb70:	ldr	x11, [sp, #56]
  40fb74:	str	x11, [x10]
  40fb78:	bl	40a400 <log_internal_realm@plt>
  40fb7c:	str	w0, [sp, #52]
  40fb80:	b	40fb98 <on_sigchld+0x38c>
  40fb84:	ldur	w0, [x29, #-112]
  40fb88:	bl	40a410 <abs@plt>
  40fb8c:	mov	w8, wzr
  40fb90:	subs	w8, w8, w0, uxtb
  40fb94:	str	w8, [sp, #52]
  40fb98:	ldr	w8, [sp, #52]
  40fb9c:	stur	w8, [x29, #-120]
  40fba0:	b	40fd44 <on_sigchld+0x538>
  40fba4:	ldur	w8, [x29, #-44]
  40fba8:	and	w8, w8, #0xff
  40fbac:	cmp	w8, #0x7f
  40fbb0:	b.ne	40fc34 <on_sigchld+0x428>  // b.any
  40fbb4:	mov	w8, #0x6                   	// #6
  40fbb8:	stur	w8, [x29, #-124]
  40fbbc:	stur	wzr, [x29, #-128]
  40fbc0:	mov	w8, #0x1                   	// #1
  40fbc4:	stur	w8, [x29, #-132]
  40fbc8:	ldur	w0, [x29, #-132]
  40fbcc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40fbd0:	ldur	w8, [x29, #-124]
  40fbd4:	and	w8, w8, #0x7
  40fbd8:	cmp	w0, w8
  40fbdc:	b.lt	40fc14 <on_sigchld+0x408>  // b.tstop
  40fbe0:	ldur	w8, [x29, #-132]
  40fbe4:	ldur	w9, [x29, #-124]
  40fbe8:	orr	w0, w9, w8, lsl #10
  40fbec:	ldur	w1, [x29, #-128]
  40fbf0:	ldur	w6, [x29, #-40]
  40fbf4:	ldr	x2, [sp, #120]
  40fbf8:	mov	w3, #0x513                 	// #1299
  40fbfc:	ldr	x4, [sp, #112]
  40fc00:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40fc04:	add	x5, x5, #0x9f8
  40fc08:	bl	40a400 <log_internal_realm@plt>
  40fc0c:	str	w0, [sp, #48]
  40fc10:	b	40fc28 <on_sigchld+0x41c>
  40fc14:	ldur	w0, [x29, #-128]
  40fc18:	bl	40a410 <abs@plt>
  40fc1c:	mov	w8, wzr
  40fc20:	subs	w8, w8, w0, uxtb
  40fc24:	str	w8, [sp, #48]
  40fc28:	ldr	w8, [sp, #48]
  40fc2c:	stur	w8, [x29, #-136]
  40fc30:	b	40f8a4 <on_sigchld+0x98>
  40fc34:	ldur	w8, [x29, #-44]
  40fc38:	mov	w9, #0xffff                	// #65535
  40fc3c:	cmp	w8, w9
  40fc40:	b.ne	40fcc4 <on_sigchld+0x4b8>  // b.any
  40fc44:	mov	w8, #0x6                   	// #6
  40fc48:	stur	w8, [x29, #-140]
  40fc4c:	stur	wzr, [x29, #-144]
  40fc50:	mov	w8, #0x1                   	// #1
  40fc54:	stur	w8, [x29, #-148]
  40fc58:	ldur	w0, [x29, #-148]
  40fc5c:	bl	40a3f0 <log_get_max_level_realm@plt>
  40fc60:	ldur	w8, [x29, #-140]
  40fc64:	and	w8, w8, #0x7
  40fc68:	cmp	w0, w8
  40fc6c:	b.lt	40fca4 <on_sigchld+0x498>  // b.tstop
  40fc70:	ldur	w8, [x29, #-148]
  40fc74:	ldur	w9, [x29, #-140]
  40fc78:	orr	w0, w9, w8, lsl #10
  40fc7c:	ldur	w1, [x29, #-144]
  40fc80:	ldur	w6, [x29, #-40]
  40fc84:	ldr	x2, [sp, #120]
  40fc88:	mov	w3, #0x516                 	// #1302
  40fc8c:	ldr	x4, [sp, #112]
  40fc90:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40fc94:	add	x5, x5, #0xa0c
  40fc98:	bl	40a400 <log_internal_realm@plt>
  40fc9c:	str	w0, [sp, #44]
  40fca0:	b	40fcb8 <on_sigchld+0x4ac>
  40fca4:	ldur	w0, [x29, #-144]
  40fca8:	bl	40a410 <abs@plt>
  40fcac:	mov	w8, wzr
  40fcb0:	subs	w8, w8, w0, uxtb
  40fcb4:	str	w8, [sp, #44]
  40fcb8:	ldr	w8, [sp, #44]
  40fcbc:	stur	w8, [x29, #-152]
  40fcc0:	b	40f8a4 <on_sigchld+0x98>
  40fcc4:	mov	w8, #0x4                   	// #4
  40fcc8:	stur	w8, [x29, #-156]
  40fccc:	stur	wzr, [x29, #-160]
  40fcd0:	mov	w8, #0x1                   	// #1
  40fcd4:	stur	w8, [x29, #-164]
  40fcd8:	ldur	w0, [x29, #-164]
  40fcdc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40fce0:	ldur	w8, [x29, #-156]
  40fce4:	and	w8, w8, #0x7
  40fce8:	cmp	w0, w8
  40fcec:	b.lt	40fd28 <on_sigchld+0x51c>  // b.tstop
  40fcf0:	ldur	w8, [x29, #-164]
  40fcf4:	ldur	w9, [x29, #-156]
  40fcf8:	orr	w0, w9, w8, lsl #10
  40fcfc:	ldur	w1, [x29, #-160]
  40fd00:	ldur	w6, [x29, #-40]
  40fd04:	ldur	w7, [x29, #-44]
  40fd08:	ldr	x2, [sp, #120]
  40fd0c:	mov	w3, #0x519                 	// #1305
  40fd10:	ldr	x4, [sp, #112]
  40fd14:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  40fd18:	add	x5, x5, #0xa22
  40fd1c:	bl	40a400 <log_internal_realm@plt>
  40fd20:	str	w0, [sp, #40]
  40fd24:	b	40fd3c <on_sigchld+0x530>
  40fd28:	ldur	w0, [x29, #-160]
  40fd2c:	bl	40a410 <abs@plt>
  40fd30:	mov	w8, wzr
  40fd34:	subs	w8, w8, w0, uxtb
  40fd38:	str	w8, [sp, #40]
  40fd3c:	ldr	w8, [sp, #40]
  40fd40:	stur	w8, [x29, #-168]
  40fd44:	ldur	w8, [x29, #-44]
  40fd48:	and	w8, w8, #0x7f
  40fd4c:	cbnz	w8, 40fd60 <on_sigchld+0x554>
  40fd50:	ldur	w8, [x29, #-44]
  40fd54:	and	w8, w8, #0xff00
  40fd58:	asr	w8, w8, #8
  40fd5c:	cbz	w8, 40ff88 <on_sigchld+0x77c>
  40fd60:	ldr	x8, [sp, #128]
  40fd64:	ldr	x9, [x8]
  40fd68:	ldr	x9, [x9, #32]
  40fd6c:	cbz	x9, 40ff88 <on_sigchld+0x77c>
  40fd70:	mov	x8, xzr
  40fd74:	stur	x8, [x29, #-176]
  40fd78:	ldr	x8, [sp, #128]
  40fd7c:	ldr	x9, [x8]
  40fd80:	ldr	x9, [x9, #32]
  40fd84:	ldr	x9, [x9, #24]
  40fd88:	stur	x9, [x29, #-184]
  40fd8c:	mov	w10, #0x3                   	// #3
  40fd90:	stur	w10, [x29, #-188]
  40fd94:	str	wzr, [sp, #192]
  40fd98:	ldur	x9, [x29, #-184]
  40fd9c:	cbz	x9, 40fddc <on_sigchld+0x5d0>
  40fda0:	mov	w0, #0x1                   	// #1
  40fda4:	bl	40a3f0 <log_get_max_level_realm@plt>
  40fda8:	ldur	w8, [x29, #-188]
  40fdac:	cmp	w0, w8
  40fdb0:	cset	w8, ge  // ge = tcont
  40fdb4:	mov	w9, #0x1                   	// #1
  40fdb8:	eor	w8, w8, #0x1
  40fdbc:	eor	w8, w8, w9
  40fdc0:	and	w8, w8, #0x1
  40fdc4:	mov	w1, w8
  40fdc8:	sxtw	x10, w1
  40fdcc:	cbz	x10, 40fddc <on_sigchld+0x5d0>
  40fdd0:	ldur	x0, [x29, #-184]
  40fdd4:	sub	x1, x29, #0xb0
  40fdd8:	bl	40a860 <sd_device_get_sysname@plt>
  40fddc:	ldur	w0, [x29, #-188]
  40fde0:	ldr	w1, [sp, #192]
  40fde4:	ldur	x8, [x29, #-176]
  40fde8:	mov	x9, xzr
  40fdec:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  40fdf0:	add	x10, x10, #0xa46
  40fdf4:	cmp	x8, #0x0
  40fdf8:	csel	x5, x10, x9, ne  // ne = any
  40fdfc:	ldur	x6, [x29, #-176]
  40fe00:	ldur	w11, [x29, #-40]
  40fe04:	ldr	x2, [sp, #120]
  40fe08:	mov	w3, #0x51c                 	// #1308
  40fe0c:	ldr	x4, [sp, #112]
  40fe10:	mov	x7, x9
  40fe14:	mov	x8, sp
  40fe18:	str	x9, [x8]
  40fe1c:	mov	x8, sp
  40fe20:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  40fe24:	add	x10, x10, #0xa4e
  40fe28:	str	x10, [x8, #8]
  40fe2c:	mov	x8, sp
  40fe30:	str	w11, [x8, #16]
  40fe34:	str	x9, [sp, #32]
  40fe38:	bl	40a870 <log_object_internal@plt>
  40fe3c:	str	w0, [sp, #188]
  40fe40:	ldr	x8, [sp, #128]
  40fe44:	ldr	x9, [x8]
  40fe48:	ldr	x9, [x9, #32]
  40fe4c:	ldr	x0, [x9, #24]
  40fe50:	bl	40a880 <device_delete_db@plt>
  40fe54:	ldr	x8, [sp, #128]
  40fe58:	ldr	x9, [x8]
  40fe5c:	ldr	x9, [x9, #32]
  40fe60:	ldr	x9, [x9, #24]
  40fe64:	mov	x0, x9
  40fe68:	ldr	x9, [sp, #32]
  40fe6c:	mov	x1, x9
  40fe70:	mov	w11, wzr
  40fe74:	and	w2, w11, #0x1
  40fe78:	bl	40a890 <device_tag_index@plt>
  40fe7c:	ldr	x8, [sp, #128]
  40fe80:	ldr	x9, [x8, #24]
  40fe84:	ldr	x9, [x9, #64]
  40fe88:	cbz	x9, 40ff88 <on_sigchld+0x77c>
  40fe8c:	ldr	x8, [sp, #128]
  40fe90:	ldr	x9, [x8, #24]
  40fe94:	ldr	x0, [x9, #64]
  40fe98:	ldr	x9, [x8]
  40fe9c:	ldr	x9, [x9, #32]
  40fea0:	ldr	x2, [x9, #32]
  40fea4:	mov	x9, xzr
  40fea8:	mov	x1, x9
  40feac:	bl	40a8a0 <device_monitor_send_device@plt>
  40feb0:	stur	w0, [x29, #-36]
  40feb4:	ldur	w10, [x29, #-36]
  40feb8:	cmp	w10, #0x0
  40febc:	cset	w10, ge  // ge = tcont
  40fec0:	tbnz	w10, #0, 40ff88 <on_sigchld+0x77c>
  40fec4:	mov	x8, xzr
  40fec8:	str	x8, [sp, #176]
  40fecc:	ldr	x8, [sp, #128]
  40fed0:	ldr	x9, [x8]
  40fed4:	ldr	x9, [x9, #32]
  40fed8:	ldr	x9, [x9, #32]
  40fedc:	str	x9, [sp, #168]
  40fee0:	mov	w10, #0x3                   	// #3
  40fee4:	str	w10, [sp, #164]
  40fee8:	ldur	w10, [x29, #-36]
  40feec:	str	w10, [sp, #160]
  40fef0:	ldr	x9, [sp, #168]
  40fef4:	cbz	x9, 40ff34 <on_sigchld+0x728>
  40fef8:	mov	w0, #0x1                   	// #1
  40fefc:	bl	40a3f0 <log_get_max_level_realm@plt>
  40ff00:	ldr	w8, [sp, #164]
  40ff04:	cmp	w0, w8
  40ff08:	cset	w8, ge  // ge = tcont
  40ff0c:	mov	w9, #0x1                   	// #1
  40ff10:	eor	w8, w8, #0x1
  40ff14:	eor	w8, w8, w9
  40ff18:	and	w8, w8, #0x1
  40ff1c:	mov	w1, w8
  40ff20:	sxtw	x10, w1
  40ff24:	cbz	x10, 40ff34 <on_sigchld+0x728>
  40ff28:	ldr	x0, [sp, #168]
  40ff2c:	add	x1, sp, #0xb0
  40ff30:	bl	40a860 <sd_device_get_sysname@plt>
  40ff34:	ldr	w0, [sp, #164]
  40ff38:	ldr	w1, [sp, #160]
  40ff3c:	ldr	x8, [sp, #176]
  40ff40:	mov	x9, xzr
  40ff44:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  40ff48:	add	x10, x10, #0xa46
  40ff4c:	cmp	x8, #0x0
  40ff50:	csel	x5, x10, x9, ne  // ne = any
  40ff54:	ldr	x6, [sp, #176]
  40ff58:	ldr	x2, [sp, #120]
  40ff5c:	mov	w3, #0x526                 	// #1318
  40ff60:	ldr	x4, [sp, #112]
  40ff64:	mov	x7, x9
  40ff68:	mov	x8, sp
  40ff6c:	str	x9, [x8]
  40ff70:	mov	x8, sp
  40ff74:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  40ff78:	add	x9, x9, #0xa61
  40ff7c:	str	x9, [x8, #8]
  40ff80:	bl	40a870 <log_object_internal@plt>
  40ff84:	str	w0, [sp, #156]
  40ff88:	ldr	x8, [sp, #128]
  40ff8c:	ldr	x0, [x8]
  40ff90:	bl	411a38 <worker_free>
  40ff94:	b	40f8a4 <on_sigchld+0x98>
  40ff98:	ldr	x8, [sp, #128]
  40ff9c:	ldr	x0, [x8, #24]
  40ffa0:	bl	411b1c <event_queue_start>
  40ffa4:	ldr	x8, [sp, #128]
  40ffa8:	ldr	x9, [x8, #24]
  40ffac:	ldr	x0, [x9, #8]
  40ffb0:	bl	411e40 <hashmap_isempty>
  40ffb4:	tbnz	w0, #0, 40ffbc <on_sigchld+0x7b0>
  40ffb8:	b	41005c <on_sigchld+0x850>
  40ffbc:	ldr	x8, [sp, #128]
  40ffc0:	ldr	x9, [x8, #24]
  40ffc4:	ldr	x0, [x9, #104]
  40ffc8:	bl	40a8b0 <event_source_disable@plt>
  40ffcc:	stur	w0, [x29, #-36]
  40ffd0:	ldur	w10, [x29, #-36]
  40ffd4:	cmp	w10, #0x0
  40ffd8:	cset	w10, ge  // ge = tcont
  40ffdc:	tbnz	w10, #0, 41005c <on_sigchld+0x850>
  40ffe0:	mov	w8, #0x4                   	// #4
  40ffe4:	str	w8, [sp, #152]
  40ffe8:	ldur	w8, [x29, #-36]
  40ffec:	str	w8, [sp, #148]
  40fff0:	mov	w8, #0x1                   	// #1
  40fff4:	str	w8, [sp, #144]
  40fff8:	ldr	w0, [sp, #144]
  40fffc:	bl	40a3f0 <log_get_max_level_realm@plt>
  410000:	ldr	w8, [sp, #152]
  410004:	and	w8, w8, #0x7
  410008:	cmp	w0, w8
  41000c:	b.lt	410040 <on_sigchld+0x834>  // b.tstop
  410010:	ldr	w8, [sp, #144]
  410014:	ldr	w9, [sp, #152]
  410018:	orr	w0, w9, w8, lsl #10
  41001c:	ldr	w1, [sp, #148]
  410020:	ldr	x2, [sp, #120]
  410024:	mov	w3, #0x534                 	// #1332
  410028:	ldr	x4, [sp, #112]
  41002c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  410030:	add	x5, x5, #0xa8a
  410034:	bl	40a400 <log_internal_realm@plt>
  410038:	str	w0, [sp, #28]
  41003c:	b	410054 <on_sigchld+0x848>
  410040:	ldr	w0, [sp, #148]
  410044:	bl	40a410 <abs@plt>
  410048:	mov	w8, wzr
  41004c:	subs	w8, w8, w0, uxtb
  410050:	str	w8, [sp, #28]
  410054:	ldr	w8, [sp, #28]
  410058:	str	w8, [sp, #140]
  41005c:	mov	w0, #0x1                   	// #1
  410060:	ldr	x28, [sp, #400]
  410064:	ldp	x29, x30, [sp, #384]
  410068:	add	sp, sp, #0x1a0
  41006c:	ret

0000000000410070 <on_ctrl_msg>:
  410070:	sub	sp, sp, #0x1b0
  410074:	stp	x29, x30, [sp, #400]
  410078:	str	x28, [sp, #416]
  41007c:	add	x29, sp, #0x190
  410080:	sub	x8, x29, #0xa0
  410084:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  410088:	add	x9, x9, #0xae0
  41008c:	add	x9, x9, #0x3
  410090:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  410094:	add	x10, x10, #0x3a4
  410098:	str	x0, [x8, #144]
  41009c:	stur	w1, [x29, #-20]
  4100a0:	str	x2, [x8, #128]
  4100a4:	str	x3, [x8, #120]
  4100a8:	ldr	x11, [x8, #120]
  4100ac:	str	x11, [x8, #112]
  4100b0:	str	x8, [sp, #96]
  4100b4:	str	x9, [sp, #88]
  4100b8:	str	x10, [sp, #80]
  4100bc:	ldr	x8, [sp, #96]
  4100c0:	ldr	x9, [x8, #128]
  4100c4:	cmp	x9, #0x0
  4100c8:	cset	w10, ne  // ne = any
  4100cc:	mov	w11, #0x1                   	// #1
  4100d0:	eor	w10, w10, #0x1
  4100d4:	eor	w10, w10, w11
  4100d8:	eor	w10, w10, w11
  4100dc:	and	w10, w10, #0x1
  4100e0:	mov	w0, w10
  4100e4:	sxtw	x9, w0
  4100e8:	cbz	x9, 41010c <on_ctrl_msg+0x9c>
  4100ec:	mov	w0, #0x1                   	// #1
  4100f0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4100f4:	add	x1, x1, #0x336
  4100f8:	ldr	x2, [sp, #88]
  4100fc:	mov	w3, #0x3d7                 	// #983
  410100:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  410104:	add	x4, x4, #0x33c
  410108:	bl	40a540 <log_assert_failed_realm@plt>
  41010c:	ldr	x8, [sp, #96]
  410110:	ldr	x9, [x8, #112]
  410114:	cmp	x9, #0x0
  410118:	cset	w10, ne  // ne = any
  41011c:	mov	w11, #0x1                   	// #1
  410120:	eor	w10, w10, #0x1
  410124:	eor	w10, w10, w11
  410128:	eor	w10, w10, w11
  41012c:	and	w10, w10, #0x1
  410130:	mov	w0, w10
  410134:	sxtw	x9, w0
  410138:	cbz	x9, 41015c <on_ctrl_msg+0xec>
  41013c:	mov	w0, #0x1                   	// #1
  410140:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  410144:	add	x1, x1, #0xcb6
  410148:	ldr	x2, [sp, #88]
  41014c:	mov	w3, #0x3d8                 	// #984
  410150:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  410154:	add	x4, x4, #0x33c
  410158:	bl	40a540 <log_assert_failed_realm@plt>
  41015c:	ldur	w8, [x29, #-20]
  410160:	subs	w8, w8, #0x1
  410164:	mov	w9, w8
  410168:	ubfx	x9, x9, #0, #32
  41016c:	cmp	x9, #0x7
  410170:	str	x9, [sp, #72]
  410174:	b.hi	410a68 <on_ctrl_msg+0x9f8>  // b.pmore
  410178:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  41017c:	add	x8, x8, #0x938
  410180:	ldr	x11, [sp, #72]
  410184:	ldrsw	x10, [x8, x11, lsl #2]
  410188:	add	x9, x8, x10
  41018c:	br	x9
  410190:	mov	w8, #0x7                   	// #7
  410194:	stur	w8, [x29, #-56]
  410198:	stur	wzr, [x29, #-60]
  41019c:	mov	w8, #0x1                   	// #1
  4101a0:	stur	w8, [x29, #-64]
  4101a4:	ldur	w0, [x29, #-64]
  4101a8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4101ac:	ldur	w8, [x29, #-56]
  4101b0:	and	w8, w8, #0x7
  4101b4:	cmp	w0, w8
  4101b8:	b.lt	4101f8 <on_ctrl_msg+0x188>  // b.tstop
  4101bc:	ldur	w8, [x29, #-64]
  4101c0:	ldur	w9, [x29, #-56]
  4101c4:	orr	w0, w9, w8, lsl #10
  4101c8:	ldur	w1, [x29, #-60]
  4101cc:	ldr	x10, [sp, #96]
  4101d0:	ldr	x11, [x10, #128]
  4101d4:	ldr	w6, [x11]
  4101d8:	ldr	x2, [sp, #88]
  4101dc:	mov	w3, #0x3dc                 	// #988
  4101e0:	ldr	x4, [sp, #80]
  4101e4:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4101e8:	add	x5, x5, #0x3b0
  4101ec:	bl	40a400 <log_internal_realm@plt>
  4101f0:	str	w0, [sp, #68]
  4101f4:	b	41020c <on_ctrl_msg+0x19c>
  4101f8:	ldur	w0, [x29, #-60]
  4101fc:	bl	40a410 <abs@plt>
  410200:	mov	w8, wzr
  410204:	subs	w8, w8, w0, uxtb
  410208:	str	w8, [sp, #68]
  41020c:	ldr	w8, [sp, #68]
  410210:	stur	w8, [x29, #-68]
  410214:	ldr	x9, [sp, #96]
  410218:	ldr	x10, [x9, #128]
  41021c:	ldr	w1, [x10]
  410220:	mov	w0, #0x1                   	// #1
  410224:	bl	40a420 <log_set_max_level_realm@plt>
  410228:	ldr	x9, [sp, #96]
  41022c:	ldr	x10, [x9, #128]
  410230:	ldr	w1, [x10]
  410234:	mov	w8, wzr
  410238:	mov	w0, w8
  41023c:	bl	40a420 <log_set_max_level_realm@plt>
  410240:	ldr	x9, [sp, #96]
  410244:	ldr	x0, [x9, #112]
  410248:	bl	4117f8 <manager_kill_workers>
  41024c:	b	410ae0 <on_ctrl_msg+0xa70>
  410250:	mov	w8, #0x7                   	// #7
  410254:	stur	w8, [x29, #-72]
  410258:	stur	wzr, [x29, #-76]
  41025c:	mov	w8, #0x1                   	// #1
  410260:	stur	w8, [x29, #-80]
  410264:	ldur	w0, [x29, #-80]
  410268:	bl	40a3f0 <log_get_max_level_realm@plt>
  41026c:	ldur	w8, [x29, #-72]
  410270:	and	w8, w8, #0x7
  410274:	cmp	w0, w8
  410278:	b.lt	4102ac <on_ctrl_msg+0x23c>  // b.tstop
  41027c:	ldur	w8, [x29, #-80]
  410280:	ldur	w9, [x29, #-72]
  410284:	orr	w0, w9, w8, lsl #10
  410288:	ldur	w1, [x29, #-76]
  41028c:	ldr	x2, [sp, #88]
  410290:	mov	w3, #0x3e2                 	// #994
  410294:	ldr	x4, [sp, #80]
  410298:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  41029c:	add	x5, x5, #0x3f7
  4102a0:	bl	40a400 <log_internal_realm@plt>
  4102a4:	str	w0, [sp, #64]
  4102a8:	b	4102c0 <on_ctrl_msg+0x250>
  4102ac:	ldur	w0, [x29, #-76]
  4102b0:	bl	40a410 <abs@plt>
  4102b4:	mov	w8, wzr
  4102b8:	subs	w8, w8, w0, uxtb
  4102bc:	str	w8, [sp, #64]
  4102c0:	ldr	w8, [sp, #64]
  4102c4:	stur	w8, [x29, #-84]
  4102c8:	ldr	x9, [sp, #96]
  4102cc:	ldr	x10, [x9, #112]
  4102d0:	ldrb	w8, [x10, #120]
  4102d4:	and	w8, w8, #0xfffffffe
  4102d8:	orr	w8, w8, #0x1
  4102dc:	strb	w8, [x10, #120]
  4102e0:	b	410ae0 <on_ctrl_msg+0xa70>
  4102e4:	mov	w8, #0x7                   	// #7
  4102e8:	stur	w8, [x29, #-88]
  4102ec:	stur	wzr, [x29, #-92]
  4102f0:	mov	w8, #0x1                   	// #1
  4102f4:	stur	w8, [x29, #-96]
  4102f8:	ldur	w0, [x29, #-96]
  4102fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  410300:	ldur	w8, [x29, #-88]
  410304:	and	w8, w8, #0x7
  410308:	cmp	w0, w8
  41030c:	b.lt	410340 <on_ctrl_msg+0x2d0>  // b.tstop
  410310:	ldur	w8, [x29, #-96]
  410314:	ldur	w9, [x29, #-88]
  410318:	orr	w0, w9, w8, lsl #10
  41031c:	ldur	w1, [x29, #-92]
  410320:	ldr	x2, [sp, #88]
  410324:	mov	w3, #0x3e6                 	// #998
  410328:	ldr	x4, [sp, #80]
  41032c:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410330:	add	x5, x5, #0x427
  410334:	bl	40a400 <log_internal_realm@plt>
  410338:	str	w0, [sp, #60]
  41033c:	b	410354 <on_ctrl_msg+0x2e4>
  410340:	ldur	w0, [x29, #-92]
  410344:	bl	40a410 <abs@plt>
  410348:	mov	w8, wzr
  41034c:	subs	w8, w8, w0, uxtb
  410350:	str	w8, [sp, #60]
  410354:	ldr	w8, [sp, #60]
  410358:	stur	w8, [x29, #-100]
  41035c:	ldr	x9, [sp, #96]
  410360:	ldr	x10, [x9, #112]
  410364:	ldrb	w8, [x10, #120]
  410368:	and	w8, w8, #0xfffffffe
  41036c:	strb	w8, [x10, #120]
  410370:	ldr	x0, [x9, #112]
  410374:	bl	411b1c <event_queue_start>
  410378:	b	410ae0 <on_ctrl_msg+0xa70>
  41037c:	mov	w8, #0x7                   	// #7
  410380:	stur	w8, [x29, #-104]
  410384:	stur	wzr, [x29, #-108]
  410388:	mov	w8, #0x1                   	// #1
  41038c:	stur	w8, [x29, #-112]
  410390:	ldur	w0, [x29, #-112]
  410394:	bl	40a3f0 <log_get_max_level_realm@plt>
  410398:	ldur	w8, [x29, #-104]
  41039c:	and	w8, w8, #0x7
  4103a0:	cmp	w0, w8
  4103a4:	b.lt	4103d8 <on_ctrl_msg+0x368>  // b.tstop
  4103a8:	ldur	w8, [x29, #-112]
  4103ac:	ldur	w9, [x29, #-104]
  4103b0:	orr	w0, w9, w8, lsl #10
  4103b4:	ldur	w1, [x29, #-108]
  4103b8:	ldr	x2, [sp, #88]
  4103bc:	mov	w3, #0x3eb                 	// #1003
  4103c0:	ldr	x4, [sp, #80]
  4103c4:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4103c8:	add	x5, x5, #0x458
  4103cc:	bl	40a400 <log_internal_realm@plt>
  4103d0:	str	w0, [sp, #56]
  4103d4:	b	4103ec <on_ctrl_msg+0x37c>
  4103d8:	ldur	w0, [x29, #-108]
  4103dc:	bl	40a410 <abs@plt>
  4103e0:	mov	w8, wzr
  4103e4:	subs	w8, w8, w0, uxtb
  4103e8:	str	w8, [sp, #56]
  4103ec:	ldr	w8, [sp, #56]
  4103f0:	stur	w8, [x29, #-116]
  4103f4:	ldr	x9, [sp, #96]
  4103f8:	ldr	x0, [x9, #112]
  4103fc:	bl	411924 <manager_reload>
  410400:	b	410ae0 <on_ctrl_msg+0xa70>
  410404:	mov	x8, xzr
  410408:	ldr	x9, [sp, #96]
  41040c:	str	x8, [x9, #32]
  410410:	str	x8, [x9, #24]
  410414:	str	x8, [x9, #16]
  410418:	str	x8, [x9, #8]
  41041c:	ldr	x0, [x9, #128]
  410420:	mov	w1, #0x3d                  	// #61
  410424:	bl	40a8c0 <strchr@plt>
  410428:	ldr	x8, [sp, #96]
  41042c:	str	x0, [x8]
  410430:	ldr	x9, [x8]
  410434:	cbnz	x9, 4104c8 <on_ctrl_msg+0x458>
  410438:	mov	w8, #0x3                   	// #3
  41043c:	stur	w8, [x29, #-164]
  410440:	stur	wzr, [x29, #-168]
  410444:	mov	w8, #0x1                   	// #1
  410448:	stur	w8, [x29, #-172]
  41044c:	ldur	w0, [x29, #-172]
  410450:	bl	40a3f0 <log_get_max_level_realm@plt>
  410454:	ldur	w8, [x29, #-164]
  410458:	and	w8, w8, #0x7
  41045c:	cmp	w0, w8
  410460:	b.lt	41049c <on_ctrl_msg+0x42c>  // b.tstop
  410464:	ldur	w8, [x29, #-172]
  410468:	ldur	w9, [x29, #-164]
  41046c:	orr	w0, w9, w8, lsl #10
  410470:	ldur	w1, [x29, #-168]
  410474:	ldr	x10, [sp, #96]
  410478:	ldr	x6, [x10, #128]
  41047c:	ldr	x2, [sp, #88]
  410480:	mov	w3, #0x3f4                 	// #1012
  410484:	ldr	x4, [sp, #80]
  410488:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  41048c:	add	x5, x5, #0x47f
  410490:	bl	40a400 <log_internal_realm@plt>
  410494:	str	w0, [sp, #52]
  410498:	b	4104b0 <on_ctrl_msg+0x440>
  41049c:	ldur	w0, [x29, #-168]
  4104a0:	bl	40a410 <abs@plt>
  4104a4:	mov	w8, wzr
  4104a8:	subs	w8, w8, w0, uxtb
  4104ac:	str	w8, [sp, #52]
  4104b0:	ldr	w8, [sp, #52]
  4104b4:	stur	w8, [x29, #-176]
  4104b8:	mov	w8, #0x1                   	// #1
  4104bc:	stur	w8, [x29, #-4]
  4104c0:	stur	w8, [x29, #-180]
  4104c4:	b	4107d4 <on_ctrl_msg+0x764>
  4104c8:	ldr	x8, [sp, #96]
  4104cc:	ldr	x0, [x8, #128]
  4104d0:	ldr	x9, [x8]
  4104d4:	ldr	x10, [x8, #128]
  4104d8:	subs	x1, x9, x10
  4104dc:	bl	40a8d0 <strndup@plt>
  4104e0:	ldr	x8, [sp, #96]
  4104e4:	str	x0, [x8, #32]
  4104e8:	ldr	x9, [x8, #32]
  4104ec:	cbnz	x9, 41051c <on_ctrl_msg+0x4ac>
  4104f0:	mov	w8, #0x1                   	// #1
  4104f4:	mov	w0, w8
  4104f8:	ldr	x1, [sp, #88]
  4104fc:	mov	w2, #0x3fa                 	// #1018
  410500:	ldr	x3, [sp, #80]
  410504:	str	w8, [sp, #48]
  410508:	bl	40a5e0 <log_oom_internal@plt>
  41050c:	ldr	w8, [sp, #48]
  410510:	stur	w8, [x29, #-4]
  410514:	stur	w8, [x29, #-180]
  410518:	b	4107d4 <on_ctrl_msg+0x764>
  41051c:	ldr	x8, [sp, #96]
  410520:	ldr	x9, [x8, #112]
  410524:	ldr	x0, [x9, #48]
  410528:	ldr	x1, [x8, #32]
  41052c:	sub	x2, x29, #0x90
  410530:	bl	40a8e0 <hashmap_remove2@plt>
  410534:	ldr	x8, [sp, #96]
  410538:	str	x0, [x8, #8]
  41053c:	ldr	x9, [x8, #112]
  410540:	add	x0, x9, #0x30
  410544:	adrp	x1, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  410548:	add	x1, x1, #0xe10
  41054c:	bl	40a8f0 <internal_hashmap_ensure_allocated@plt>
  410550:	stur	w0, [x29, #-52]
  410554:	ldur	w10, [x29, #-52]
  410558:	cmp	w10, #0x0
  41055c:	cset	w10, ge  // ge = tcont
  410560:	tbnz	w10, #0, 410590 <on_ctrl_msg+0x520>
  410564:	mov	w8, #0x1                   	// #1
  410568:	mov	w0, w8
  41056c:	ldr	x1, [sp, #88]
  410570:	mov	w2, #0x402                 	// #1026
  410574:	ldr	x3, [sp, #80]
  410578:	str	w8, [sp, #44]
  41057c:	bl	40a5e0 <log_oom_internal@plt>
  410580:	ldr	w8, [sp, #44]
  410584:	stur	w8, [x29, #-4]
  410588:	stur	w8, [x29, #-180]
  41058c:	b	4107d4 <on_ctrl_msg+0x764>
  410590:	ldr	x8, [sp, #96]
  410594:	ldr	x9, [x8]
  410598:	add	x9, x9, #0x1
  41059c:	str	x9, [x8]
  4105a0:	ldr	x0, [x8]
  4105a4:	bl	4150b4 <isempty>
  4105a8:	tbnz	w0, #0, 4105b0 <on_ctrl_msg+0x540>
  4105ac:	b	410690 <on_ctrl_msg+0x620>
  4105b0:	mov	w8, #0x7                   	// #7
  4105b4:	stur	w8, [x29, #-184]
  4105b8:	stur	wzr, [x29, #-188]
  4105bc:	mov	w8, #0x1                   	// #1
  4105c0:	stur	w8, [x29, #-192]
  4105c4:	ldur	w0, [x29, #-192]
  4105c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4105cc:	ldur	w8, [x29, #-184]
  4105d0:	and	w8, w8, #0x7
  4105d4:	cmp	w0, w8
  4105d8:	b.lt	410614 <on_ctrl_msg+0x5a4>  // b.tstop
  4105dc:	ldur	w8, [x29, #-192]
  4105e0:	ldur	w9, [x29, #-184]
  4105e4:	orr	w0, w9, w8, lsl #10
  4105e8:	ldur	w1, [x29, #-188]
  4105ec:	ldr	x10, [sp, #96]
  4105f0:	ldr	x6, [x10, #32]
  4105f4:	ldr	x2, [sp, #88]
  4105f8:	mov	w3, #0x408                 	// #1032
  4105fc:	ldr	x4, [sp, #80]
  410600:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410604:	add	x5, x5, #0x497
  410608:	bl	40a400 <log_internal_realm@plt>
  41060c:	str	w0, [sp, #40]
  410610:	b	410628 <on_ctrl_msg+0x5b8>
  410614:	ldur	w0, [x29, #-188]
  410618:	bl	40a410 <abs@plt>
  41061c:	mov	w8, wzr
  410620:	subs	w8, w8, w0, uxtb
  410624:	str	w8, [sp, #40]
  410628:	ldr	w8, [sp, #40]
  41062c:	stur	w8, [x29, #-196]
  410630:	ldr	x9, [sp, #96]
  410634:	ldr	x10, [x9, #112]
  410638:	ldr	x0, [x10, #48]
  41063c:	ldr	x1, [x9, #32]
  410640:	mov	x10, xzr
  410644:	mov	x2, x10
  410648:	bl	40a900 <hashmap_put@plt>
  41064c:	stur	w0, [x29, #-52]
  410650:	ldur	w8, [x29, #-52]
  410654:	cmp	w8, #0x0
  410658:	cset	w8, ge  // ge = tcont
  41065c:	tbnz	w8, #0, 41068c <on_ctrl_msg+0x61c>
  410660:	mov	w8, #0x1                   	// #1
  410664:	mov	w0, w8
  410668:	ldr	x1, [sp, #88]
  41066c:	mov	w2, #0x40c                 	// #1036
  410670:	ldr	x3, [sp, #80]
  410674:	str	w8, [sp, #36]
  410678:	bl	40a5e0 <log_oom_internal@plt>
  41067c:	ldr	w8, [sp, #36]
  410680:	stur	w8, [x29, #-4]
  410684:	stur	w8, [x29, #-180]
  410688:	b	4107d4 <on_ctrl_msg+0x764>
  41068c:	b	4107b4 <on_ctrl_msg+0x744>
  410690:	ldr	x8, [sp, #96]
  410694:	ldr	x0, [x8]
  410698:	bl	40a910 <strdup@plt>
  41069c:	ldr	x8, [sp, #96]
  4106a0:	str	x0, [x8, #24]
  4106a4:	ldr	x9, [x8, #24]
  4106a8:	cbnz	x9, 4106d8 <on_ctrl_msg+0x668>
  4106ac:	mov	w8, #0x1                   	// #1
  4106b0:	mov	w0, w8
  4106b4:	ldr	x1, [sp, #88]
  4106b8:	mov	w2, #0x412                 	// #1042
  4106bc:	ldr	x3, [sp, #80]
  4106c0:	str	w8, [sp, #32]
  4106c4:	bl	40a5e0 <log_oom_internal@plt>
  4106c8:	ldr	w8, [sp, #32]
  4106cc:	stur	w8, [x29, #-4]
  4106d0:	stur	w8, [x29, #-180]
  4106d4:	b	4107d4 <on_ctrl_msg+0x764>
  4106d8:	mov	w8, #0x7                   	// #7
  4106dc:	str	w8, [sp, #200]
  4106e0:	str	wzr, [sp, #196]
  4106e4:	mov	w8, #0x1                   	// #1
  4106e8:	str	w8, [sp, #192]
  4106ec:	ldr	w0, [sp, #192]
  4106f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4106f4:	ldr	w8, [sp, #200]
  4106f8:	and	w8, w8, #0x7
  4106fc:	cmp	w0, w8
  410700:	b.lt	410740 <on_ctrl_msg+0x6d0>  // b.tstop
  410704:	ldr	w8, [sp, #192]
  410708:	ldr	w9, [sp, #200]
  41070c:	orr	w0, w9, w8, lsl #10
  410710:	ldr	w1, [sp, #196]
  410714:	ldr	x10, [sp, #96]
  410718:	ldr	x6, [x10, #32]
  41071c:	ldr	x7, [x10, #24]
  410720:	ldr	x2, [sp, #88]
  410724:	mov	w3, #0x416                 	// #1046
  410728:	ldr	x4, [sp, #80]
  41072c:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410730:	add	x5, x5, #0x4cb
  410734:	bl	40a400 <log_internal_realm@plt>
  410738:	str	w0, [sp, #28]
  41073c:	b	410754 <on_ctrl_msg+0x6e4>
  410740:	ldr	w0, [sp, #196]
  410744:	bl	40a410 <abs@plt>
  410748:	mov	w8, wzr
  41074c:	subs	w8, w8, w0, uxtb
  410750:	str	w8, [sp, #28]
  410754:	ldr	w8, [sp, #28]
  410758:	str	w8, [sp, #188]
  41075c:	ldr	x9, [sp, #96]
  410760:	ldr	x10, [x9, #112]
  410764:	ldr	x0, [x10, #48]
  410768:	ldr	x1, [x9, #32]
  41076c:	ldr	x2, [x9, #24]
  410770:	bl	40a900 <hashmap_put@plt>
  410774:	stur	w0, [x29, #-52]
  410778:	ldur	w8, [x29, #-52]
  41077c:	cmp	w8, #0x0
  410780:	cset	w8, ge  // ge = tcont
  410784:	tbnz	w8, #0, 4107b4 <on_ctrl_msg+0x744>
  410788:	mov	w8, #0x1                   	// #1
  41078c:	mov	w0, w8
  410790:	ldr	x1, [sp, #88]
  410794:	mov	w2, #0x41a                 	// #1050
  410798:	ldr	x3, [sp, #80]
  41079c:	str	w8, [sp, #24]
  4107a0:	bl	40a5e0 <log_oom_internal@plt>
  4107a4:	ldr	w8, [sp, #24]
  4107a8:	stur	w8, [x29, #-4]
  4107ac:	stur	w8, [x29, #-180]
  4107b0:	b	4107d4 <on_ctrl_msg+0x764>
  4107b4:	mov	x8, xzr
  4107b8:	ldr	x9, [sp, #96]
  4107bc:	str	x8, [x9, #24]
  4107c0:	str	x8, [x9, #32]
  4107c4:	ldr	x0, [x9, #112]
  4107c8:	bl	4117f8 <manager_kill_workers>
  4107cc:	mov	w10, #0x6                   	// #6
  4107d0:	stur	w10, [x29, #-180]
  4107d4:	sub	x0, x29, #0x98
  4107d8:	bl	40d014 <freep>
  4107dc:	sub	x0, x29, #0x90
  4107e0:	bl	40d014 <freep>
  4107e4:	sub	x0, x29, #0x88
  4107e8:	bl	40d014 <freep>
  4107ec:	sub	x0, x29, #0x80
  4107f0:	bl	40d014 <freep>
  4107f4:	ldur	w8, [x29, #-180]
  4107f8:	cmp	w8, #0x1
  4107fc:	b.eq	410ae8 <on_ctrl_msg+0xa78>  // b.none
  410800:	b	410804 <on_ctrl_msg+0x794>
  410804:	b	410ae0 <on_ctrl_msg+0xa70>
  410808:	ldr	x8, [sp, #96]
  41080c:	ldr	x9, [x8, #128]
  410810:	ldr	w10, [x9]
  410814:	cmp	w10, #0x0
  410818:	cset	w10, gt
  41081c:	tbnz	w10, #0, 4108ac <on_ctrl_msg+0x83c>
  410820:	mov	w8, #0x7                   	// #7
  410824:	str	w8, [sp, #184]
  410828:	str	wzr, [sp, #180]
  41082c:	mov	w8, #0x1                   	// #1
  410830:	str	w8, [sp, #176]
  410834:	ldr	w0, [sp, #176]
  410838:	bl	40a3f0 <log_get_max_level_realm@plt>
  41083c:	ldr	w8, [sp, #184]
  410840:	and	w8, w8, #0x7
  410844:	cmp	w0, w8
  410848:	b.lt	410888 <on_ctrl_msg+0x818>  // b.tstop
  41084c:	ldr	w8, [sp, #176]
  410850:	ldr	w9, [sp, #184]
  410854:	orr	w0, w9, w8, lsl #10
  410858:	ldr	w1, [sp, #180]
  41085c:	ldr	x10, [sp, #96]
  410860:	ldr	x11, [x10, #128]
  410864:	ldr	w6, [x11]
  410868:	ldr	x2, [sp, #88]
  41086c:	mov	w3, #0x425                 	// #1061
  410870:	ldr	x4, [sp, #80]
  410874:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410878:	add	x5, x5, #0x500
  41087c:	bl	40a400 <log_internal_realm@plt>
  410880:	str	w0, [sp, #20]
  410884:	b	41089c <on_ctrl_msg+0x82c>
  410888:	ldr	w0, [sp, #180]
  41088c:	bl	40a410 <abs@plt>
  410890:	mov	w8, wzr
  410894:	subs	w8, w8, w0, uxtb
  410898:	str	w8, [sp, #20]
  41089c:	ldr	w8, [sp, #20]
  4108a0:	str	w8, [sp, #172]
  4108a4:	stur	wzr, [x29, #-4]
  4108a8:	b	410ae8 <on_ctrl_msg+0xa78>
  4108ac:	mov	w8, #0x7                   	// #7
  4108b0:	str	w8, [sp, #168]
  4108b4:	str	wzr, [sp, #164]
  4108b8:	mov	w8, #0x1                   	// #1
  4108bc:	str	w8, [sp, #160]
  4108c0:	ldr	w0, [sp, #160]
  4108c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4108c8:	ldr	w8, [sp, #168]
  4108cc:	and	w8, w8, #0x7
  4108d0:	cmp	w0, w8
  4108d4:	b.lt	410914 <on_ctrl_msg+0x8a4>  // b.tstop
  4108d8:	ldr	w8, [sp, #160]
  4108dc:	ldr	w9, [sp, #168]
  4108e0:	orr	w0, w9, w8, lsl #10
  4108e4:	ldr	w1, [sp, #164]
  4108e8:	ldr	x10, [sp, #96]
  4108ec:	ldr	x11, [x10, #128]
  4108f0:	ldr	w6, [x11]
  4108f4:	ldr	x2, [sp, #88]
  4108f8:	mov	w3, #0x429                 	// #1065
  4108fc:	ldr	x4, [sp, #80]
  410900:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410904:	add	x5, x5, #0x548
  410908:	bl	40a400 <log_internal_realm@plt>
  41090c:	str	w0, [sp, #16]
  410910:	b	410928 <on_ctrl_msg+0x8b8>
  410914:	ldr	w0, [sp, #164]
  410918:	bl	40a410 <abs@plt>
  41091c:	mov	w8, wzr
  410920:	subs	w8, w8, w0, uxtb
  410924:	str	w8, [sp, #16]
  410928:	ldr	w8, [sp, #16]
  41092c:	str	w8, [sp, #156]
  410930:	ldr	x9, [sp, #96]
  410934:	ldr	x10, [x9, #128]
  410938:	ldr	w8, [x10]
  41093c:	adrp	x10, 4a0000 <arg_event_timeout_usec>
  410940:	add	x10, x10, #0x218
  410944:	str	w8, [x10]
  410948:	ldr	w2, [x10]
  41094c:	mov	w8, wzr
  410950:	mov	w0, w8
  410954:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  410958:	add	x1, x1, #0x769
  41095c:	bl	40a720 <sd_notifyf@plt>
  410960:	b	410ae0 <on_ctrl_msg+0xa70>
  410964:	mov	w8, #0x7                   	// #7
  410968:	str	w8, [sp, #152]
  41096c:	str	wzr, [sp, #148]
  410970:	mov	w8, #0x1                   	// #1
  410974:	str	w8, [sp, #144]
  410978:	ldr	w0, [sp, #144]
  41097c:	bl	40a3f0 <log_get_max_level_realm@plt>
  410980:	ldr	w8, [sp, #152]
  410984:	and	w8, w8, #0x7
  410988:	cmp	w0, w8
  41098c:	b.lt	4109c0 <on_ctrl_msg+0x950>  // b.tstop
  410990:	ldr	w8, [sp, #144]
  410994:	ldr	w9, [sp, #152]
  410998:	orr	w0, w9, w8, lsl #10
  41099c:	ldr	w1, [sp, #148]
  4109a0:	ldr	x2, [sp, #88]
  4109a4:	mov	w3, #0x431                 	// #1073
  4109a8:	ldr	x4, [sp, #80]
  4109ac:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4109b0:	add	x5, x5, #0x592
  4109b4:	bl	40a400 <log_internal_realm@plt>
  4109b8:	str	w0, [sp, #12]
  4109bc:	b	4109d4 <on_ctrl_msg+0x964>
  4109c0:	ldr	w0, [sp, #148]
  4109c4:	bl	40a410 <abs@plt>
  4109c8:	mov	w8, wzr
  4109cc:	subs	w8, w8, w0, uxtb
  4109d0:	str	w8, [sp, #12]
  4109d4:	ldr	w8, [sp, #12]
  4109d8:	str	w8, [sp, #140]
  4109dc:	b	410ae0 <on_ctrl_msg+0xa70>
  4109e0:	mov	w8, #0x7                   	// #7
  4109e4:	str	w8, [sp, #136]
  4109e8:	str	wzr, [sp, #132]
  4109ec:	mov	w8, #0x1                   	// #1
  4109f0:	str	w8, [sp, #128]
  4109f4:	ldr	w0, [sp, #128]
  4109f8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4109fc:	ldr	w8, [sp, #136]
  410a00:	and	w8, w8, #0x7
  410a04:	cmp	w0, w8
  410a08:	b.lt	410a3c <on_ctrl_msg+0x9cc>  // b.tstop
  410a0c:	ldr	w8, [sp, #128]
  410a10:	ldr	w9, [sp, #136]
  410a14:	orr	w0, w9, w8, lsl #10
  410a18:	ldr	w1, [sp, #132]
  410a1c:	ldr	x2, [sp, #88]
  410a20:	mov	w3, #0x434                 	// #1076
  410a24:	ldr	x4, [sp, #80]
  410a28:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410a2c:	add	x5, x5, #0x5b7
  410a30:	bl	40a400 <log_internal_realm@plt>
  410a34:	str	w0, [sp, #8]
  410a38:	b	410a50 <on_ctrl_msg+0x9e0>
  410a3c:	ldr	w0, [sp, #132]
  410a40:	bl	40a410 <abs@plt>
  410a44:	mov	w8, wzr
  410a48:	subs	w8, w8, w0, uxtb
  410a4c:	str	w8, [sp, #8]
  410a50:	ldr	w8, [sp, #8]
  410a54:	str	w8, [sp, #124]
  410a58:	ldr	x9, [sp, #96]
  410a5c:	ldr	x0, [x9, #112]
  410a60:	bl	4116f0 <manager_exit>
  410a64:	b	410ae0 <on_ctrl_msg+0xa70>
  410a68:	mov	w8, #0x7                   	// #7
  410a6c:	str	w8, [sp, #120]
  410a70:	str	wzr, [sp, #116]
  410a74:	mov	w8, #0x1                   	// #1
  410a78:	str	w8, [sp, #112]
  410a7c:	ldr	w0, [sp, #112]
  410a80:	bl	40a3f0 <log_get_max_level_realm@plt>
  410a84:	ldr	w8, [sp, #120]
  410a88:	and	w8, w8, #0x7
  410a8c:	cmp	w0, w8
  410a90:	b.lt	410ac4 <on_ctrl_msg+0xa54>  // b.tstop
  410a94:	ldr	w8, [sp, #112]
  410a98:	ldr	w9, [sp, #120]
  410a9c:	orr	w0, w9, w8, lsl #10
  410aa0:	ldr	w1, [sp, #116]
  410aa4:	ldr	x2, [sp, #88]
  410aa8:	mov	w3, #0x438                 	// #1080
  410aac:	ldr	x4, [sp, #80]
  410ab0:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410ab4:	add	x5, x5, #0x5dc
  410ab8:	bl	40a400 <log_internal_realm@plt>
  410abc:	str	w0, [sp, #4]
  410ac0:	b	410ad8 <on_ctrl_msg+0xa68>
  410ac4:	ldr	w0, [sp, #116]
  410ac8:	bl	40a410 <abs@plt>
  410acc:	mov	w8, wzr
  410ad0:	subs	w8, w8, w0, uxtb
  410ad4:	str	w8, [sp, #4]
  410ad8:	ldr	w8, [sp, #4]
  410adc:	str	w8, [sp, #108]
  410ae0:	mov	w8, #0x1                   	// #1
  410ae4:	stur	w8, [x29, #-4]
  410ae8:	ldur	w0, [x29, #-4]
  410aec:	ldr	x28, [sp, #416]
  410af0:	ldp	x29, x30, [sp, #400]
  410af4:	add	sp, sp, #0x1b0
  410af8:	ret

0000000000410afc <on_inotify>:
  410afc:	stp	x29, x30, [sp, #-32]!
  410b00:	str	x28, [sp, #16]
  410b04:	mov	x29, sp
  410b08:	sub	sp, sp, #0x1f0
  410b0c:	sub	x8, x29, #0x28
  410b10:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  410b14:	add	x9, x9, #0xae0
  410b18:	add	x9, x9, #0x3
  410b1c:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  410b20:	add	x10, x10, #0x645
  410b24:	str	x0, [x8, #24]
  410b28:	stur	w1, [x29, #-20]
  410b2c:	stur	w2, [x29, #-24]
  410b30:	str	x3, [x8, #8]
  410b34:	ldr	x11, [x8, #8]
  410b38:	str	x11, [x8]
  410b3c:	str	x8, [sp, #64]
  410b40:	str	x9, [sp, #56]
  410b44:	str	x10, [sp, #48]
  410b48:	ldr	x8, [sp, #64]
  410b4c:	ldr	x9, [x8]
  410b50:	cmp	x9, #0x0
  410b54:	cset	w10, ne  // ne = any
  410b58:	mov	w11, #0x1                   	// #1
  410b5c:	eor	w10, w10, #0x1
  410b60:	eor	w10, w10, w11
  410b64:	eor	w10, w10, w11
  410b68:	and	w10, w10, #0x1
  410b6c:	mov	w0, w10
  410b70:	sxtw	x9, w0
  410b74:	cbz	x9, 410b98 <on_inotify+0x9c>
  410b78:	mov	w0, #0x1                   	// #1
  410b7c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  410b80:	add	x1, x1, #0xcb6
  410b84:	ldr	x2, [sp, #56]
  410b88:	mov	w3, #0x4c0                 	// #1216
  410b8c:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  410b90:	add	x4, x4, #0x60c
  410b94:	bl	40a540 <log_assert_failed_realm@plt>
  410b98:	ldr	x8, [sp, #64]
  410b9c:	ldr	x9, [x8]
  410ba0:	ldr	x0, [x9, #104]
  410ba4:	bl	40a8b0 <event_source_disable@plt>
  410ba8:	str	w0, [sp, #164]
  410bac:	ldr	w10, [sp, #164]
  410bb0:	cmp	w10, #0x0
  410bb4:	cset	w10, ge  // ge = tcont
  410bb8:	tbnz	w10, #0, 410c38 <on_inotify+0x13c>
  410bbc:	mov	w8, #0x4                   	// #4
  410bc0:	str	w8, [sp, #160]
  410bc4:	ldr	w8, [sp, #164]
  410bc8:	str	w8, [sp, #156]
  410bcc:	mov	w8, #0x1                   	// #1
  410bd0:	str	w8, [sp, #152]
  410bd4:	ldr	w0, [sp, #152]
  410bd8:	bl	40a3f0 <log_get_max_level_realm@plt>
  410bdc:	ldr	w8, [sp, #160]
  410be0:	and	w8, w8, #0x7
  410be4:	cmp	w0, w8
  410be8:	b.lt	410c1c <on_inotify+0x120>  // b.tstop
  410bec:	ldr	w8, [sp, #152]
  410bf0:	ldr	w9, [sp, #160]
  410bf4:	orr	w0, w9, w8, lsl #10
  410bf8:	ldr	w1, [sp, #156]
  410bfc:	ldr	x2, [sp, #56]
  410c00:	mov	w3, #0x4c4                 	// #1220
  410c04:	ldr	x4, [sp, #48]
  410c08:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  410c0c:	add	x5, x5, #0xa8a
  410c10:	bl	40a400 <log_internal_realm@plt>
  410c14:	str	w0, [sp, #44]
  410c18:	b	410c30 <on_inotify+0x134>
  410c1c:	ldr	w0, [sp, #156]
  410c20:	bl	40a410 <abs@plt>
  410c24:	mov	w8, wzr
  410c28:	subs	w8, w8, w0, uxtb
  410c2c:	str	w8, [sp, #44]
  410c30:	ldr	w8, [sp, #44]
  410c34:	str	w8, [sp, #148]
  410c38:	ldur	w0, [x29, #-20]
  410c3c:	add	x1, sp, #0xb8
  410c40:	mov	x2, #0x110                 	// #272
  410c44:	bl	40a920 <read@plt>
  410c48:	str	x0, [sp, #168]
  410c4c:	ldr	x8, [sp, #168]
  410c50:	cmp	x8, #0x0
  410c54:	cset	w9, ge  // ge = tcont
  410c58:	tbnz	w9, #0, 410d50 <on_inotify+0x254>
  410c5c:	mov	w8, #0x0                   	// #0
  410c60:	strb	w8, [sp, #147]
  410c64:	bl	40a480 <__errno_location@plt>
  410c68:	ldr	w8, [x0]
  410c6c:	cmp	w8, #0x4
  410c70:	str	w8, [sp, #40]
  410c74:	b.eq	410c94 <on_inotify+0x198>  // b.none
  410c78:	b	410c7c <on_inotify+0x180>
  410c7c:	ldr	w8, [sp, #40]
  410c80:	cmp	w8, #0xb
  410c84:	cset	w9, eq  // eq = none
  410c88:	eor	w9, w9, #0x1
  410c8c:	tbnz	w9, #0, 410ca0 <on_inotify+0x1a4>
  410c90:	b	410c94 <on_inotify+0x198>
  410c94:	mov	w8, #0x1                   	// #1
  410c98:	strb	w8, [sp, #147]
  410c9c:	b	410ca0 <on_inotify+0x1a4>
  410ca0:	ldrb	w8, [sp, #147]
  410ca4:	and	w8, w8, #0x1
  410ca8:	strb	w8, [sp, #146]
  410cac:	ldrb	w8, [sp, #146]
  410cb0:	tbnz	w8, #0, 410cb8 <on_inotify+0x1bc>
  410cb4:	b	410cc4 <on_inotify+0x1c8>
  410cb8:	mov	w8, #0x1                   	// #1
  410cbc:	stur	w8, [x29, #-4]
  410cc0:	b	410f0c <on_inotify+0x410>
  410cc4:	mov	w8, #0x3                   	// #3
  410cc8:	str	w8, [sp, #140]
  410ccc:	bl	40a480 <__errno_location@plt>
  410cd0:	ldr	w8, [x0]
  410cd4:	str	w8, [sp, #136]
  410cd8:	mov	w8, #0x1                   	// #1
  410cdc:	str	w8, [sp, #132]
  410ce0:	ldr	w0, [sp, #132]
  410ce4:	bl	40a3f0 <log_get_max_level_realm@plt>
  410ce8:	ldr	w8, [sp, #140]
  410cec:	and	w8, w8, #0x7
  410cf0:	cmp	w0, w8
  410cf4:	b.lt	410d28 <on_inotify+0x22c>  // b.tstop
  410cf8:	ldr	w8, [sp, #132]
  410cfc:	ldr	w9, [sp, #140]
  410d00:	orr	w0, w9, w8, lsl #10
  410d04:	ldr	w1, [sp, #136]
  410d08:	ldr	x2, [sp, #56]
  410d0c:	mov	w3, #0x4cb                 	// #1227
  410d10:	ldr	x4, [sp, #48]
  410d14:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  410d18:	add	x5, x5, #0x650
  410d1c:	bl	40a400 <log_internal_realm@plt>
  410d20:	str	w0, [sp, #36]
  410d24:	b	410d3c <on_inotify+0x240>
  410d28:	ldr	w0, [sp, #136]
  410d2c:	bl	40a410 <abs@plt>
  410d30:	mov	w8, wzr
  410d34:	subs	w8, w8, w0, uxtb
  410d38:	str	w8, [sp, #36]
  410d3c:	ldr	w8, [sp, #36]
  410d40:	str	w8, [sp, #128]
  410d44:	ldr	w8, [sp, #128]
  410d48:	stur	w8, [x29, #-4]
  410d4c:	b	410f0c <on_inotify+0x410>
  410d50:	add	x8, sp, #0xb8
  410d54:	str	x8, [sp, #176]
  410d58:	ldr	x8, [sp, #176]
  410d5c:	ldr	x9, [sp, #168]
  410d60:	add	x10, sp, #0xb8
  410d64:	add	x9, x10, x9
  410d68:	cmp	x8, x9
  410d6c:	b.cs	410f04 <on_inotify+0x408>  // b.hs, b.nlast
  410d70:	add	x1, sp, #0x78
  410d74:	mov	x8, xzr
  410d78:	str	x8, [sp, #120]
  410d7c:	ldr	x8, [sp, #176]
  410d80:	ldr	w0, [x8]
  410d84:	bl	43de30 <udev_watch_lookup>
  410d88:	cmp	w0, #0x0
  410d8c:	cset	w9, gt
  410d90:	tbnz	w9, #0, 410da0 <on_inotify+0x2a4>
  410d94:	mov	w8, #0x7                   	// #7
  410d98:	str	w8, [sp, #108]
  410d9c:	b	410ecc <on_inotify+0x3d0>
  410da0:	ldr	x0, [sp, #120]
  410da4:	add	x1, sp, #0x70
  410da8:	bl	40a930 <sd_device_get_devname@plt>
  410dac:	cmp	w0, #0x0
  410db0:	cset	w8, ge  // ge = tcont
  410db4:	tbnz	w8, #0, 410dc4 <on_inotify+0x2c8>
  410db8:	mov	w8, #0x7                   	// #7
  410dbc:	str	w8, [sp, #108]
  410dc0:	b	410ecc <on_inotify+0x3d0>
  410dc4:	mov	x8, xzr
  410dc8:	str	x8, [sp, #96]
  410dcc:	ldr	x8, [sp, #120]
  410dd0:	str	x8, [sp, #88]
  410dd4:	mov	w9, #0x7                   	// #7
  410dd8:	str	w9, [sp, #84]
  410ddc:	str	wzr, [sp, #80]
  410de0:	ldr	x8, [sp, #88]
  410de4:	cbz	x8, 410e24 <on_inotify+0x328>
  410de8:	mov	w0, #0x1                   	// #1
  410dec:	bl	40a3f0 <log_get_max_level_realm@plt>
  410df0:	ldr	w8, [sp, #84]
  410df4:	cmp	w0, w8
  410df8:	cset	w8, ge  // ge = tcont
  410dfc:	mov	w9, #0x1                   	// #1
  410e00:	eor	w8, w8, #0x1
  410e04:	eor	w8, w8, w9
  410e08:	and	w8, w8, #0x1
  410e0c:	mov	w1, w8
  410e10:	sxtw	x10, w1
  410e14:	cbz	x10, 410e24 <on_inotify+0x328>
  410e18:	ldr	x0, [sp, #88]
  410e1c:	add	x1, sp, #0x60
  410e20:	bl	40a860 <sd_device_get_sysname@plt>
  410e24:	ldr	w0, [sp, #84]
  410e28:	ldr	w1, [sp, #80]
  410e2c:	ldr	x8, [sp, #96]
  410e30:	mov	x9, xzr
  410e34:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  410e38:	add	x10, x10, #0xa46
  410e3c:	cmp	x8, #0x0
  410e40:	csel	x5, x10, x9, ne  // ne = any
  410e44:	ldr	x6, [sp, #96]
  410e48:	ldr	x8, [sp, #176]
  410e4c:	ldr	w11, [x8, #4]
  410e50:	ldr	x8, [sp, #112]
  410e54:	ldr	x2, [sp, #56]
  410e58:	mov	w3, #0x4d8                 	// #1240
  410e5c:	ldr	x4, [sp, #48]
  410e60:	mov	x7, x9
  410e64:	mov	x10, sp
  410e68:	str	x9, [x10]
  410e6c:	mov	x9, sp
  410e70:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  410e74:	add	x10, x10, #0x66e
  410e78:	str	x10, [x9, #8]
  410e7c:	mov	x9, sp
  410e80:	str	w11, [x9, #16]
  410e84:	mov	x9, sp
  410e88:	str	x8, [x9, #24]
  410e8c:	bl	40a870 <log_object_internal@plt>
  410e90:	str	w0, [sp, #76]
  410e94:	ldr	x8, [sp, #176]
  410e98:	ldr	w11, [x8, #4]
  410e9c:	and	w11, w11, #0x8
  410ea0:	cbz	w11, 410eb0 <on_inotify+0x3b4>
  410ea4:	ldr	x0, [sp, #120]
  410ea8:	bl	4150f4 <synthesize_change>
  410eac:	b	410ec8 <on_inotify+0x3cc>
  410eb0:	ldr	x8, [sp, #176]
  410eb4:	ldr	w9, [x8, #4]
  410eb8:	and	w9, w9, #0x8000
  410ebc:	cbz	w9, 410ec8 <on_inotify+0x3cc>
  410ec0:	ldr	x0, [sp, #120]
  410ec4:	bl	43db08 <udev_watch_end>
  410ec8:	str	wzr, [sp, #108]
  410ecc:	add	x0, sp, #0x78
  410ed0:	bl	413b3c <sd_device_unrefp>
  410ed4:	ldr	w8, [sp, #108]
  410ed8:	cbz	w8, 410ee4 <on_inotify+0x3e8>
  410edc:	b	410ee0 <on_inotify+0x3e4>
  410ee0:	b	410ee4 <on_inotify+0x3e8>
  410ee4:	ldr	x8, [sp, #176]
  410ee8:	add	x8, x8, #0x10
  410eec:	ldr	x9, [sp, #176]
  410ef0:	ldr	w10, [x9, #12]
  410ef4:	mov	w9, w10
  410ef8:	add	x8, x8, x9
  410efc:	str	x8, [sp, #176]
  410f00:	b	410d58 <on_inotify+0x25c>
  410f04:	mov	w8, #0x1                   	// #1
  410f08:	stur	w8, [x29, #-4]
  410f0c:	ldur	w0, [x29, #-4]
  410f10:	add	sp, sp, #0x1f0
  410f14:	ldr	x28, [sp, #16]
  410f18:	ldp	x29, x30, [sp], #32
  410f1c:	ret

0000000000410f20 <on_uevent>:
  410f20:	sub	sp, sp, #0x80
  410f24:	stp	x29, x30, [sp, #112]
  410f28:	add	x29, sp, #0x70
  410f2c:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  410f30:	add	x8, x8, #0xae0
  410f34:	add	x8, x8, #0x3
  410f38:	stur	x0, [x29, #-16]
  410f3c:	stur	x1, [x29, #-24]
  410f40:	stur	x2, [x29, #-32]
  410f44:	ldur	x9, [x29, #-32]
  410f48:	stur	x9, [x29, #-40]
  410f4c:	str	x8, [sp, #24]
  410f50:	ldur	x8, [x29, #-40]
  410f54:	cmp	x8, #0x0
  410f58:	cset	w9, ne  // ne = any
  410f5c:	mov	w10, #0x1                   	// #1
  410f60:	eor	w9, w9, #0x1
  410f64:	eor	w9, w9, w10
  410f68:	eor	w9, w9, w10
  410f6c:	and	w9, w9, #0x1
  410f70:	mov	w0, w9
  410f74:	sxtw	x8, w0
  410f78:	cbz	x8, 410f9c <on_uevent+0x7c>
  410f7c:	mov	w0, #0x1                   	// #1
  410f80:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  410f84:	add	x1, x1, #0xcb6
  410f88:	ldr	x2, [sp, #24]
  410f8c:	mov	w3, #0x3c2                 	// #962
  410f90:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  410f94:	add	x4, x4, #0x781
  410f98:	bl	40a540 <log_assert_failed_realm@plt>
  410f9c:	ldur	x0, [x29, #-24]
  410fa0:	mov	x8, xzr
  410fa4:	mov	x1, x8
  410fa8:	bl	40a940 <device_ensure_usec_initialized@plt>
  410fac:	ldur	x8, [x29, #-40]
  410fb0:	ldur	x1, [x29, #-24]
  410fb4:	mov	x0, x8
  410fb8:	bl	4159d4 <event_queue_insert>
  410fbc:	stur	w0, [x29, #-44]
  410fc0:	ldur	w9, [x29, #-44]
  410fc4:	cmp	w9, #0x0
  410fc8:	cset	w9, ge  // ge = tcont
  410fcc:	tbnz	w9, #0, 411098 <on_uevent+0x178>
  410fd0:	mov	x8, xzr
  410fd4:	str	x8, [sp, #56]
  410fd8:	ldur	x8, [x29, #-24]
  410fdc:	str	x8, [sp, #48]
  410fe0:	mov	w9, #0x3                   	// #3
  410fe4:	str	w9, [sp, #44]
  410fe8:	ldur	w9, [x29, #-44]
  410fec:	str	w9, [sp, #40]
  410ff0:	ldr	x8, [sp, #48]
  410ff4:	cbz	x8, 411034 <on_uevent+0x114>
  410ff8:	mov	w0, #0x1                   	// #1
  410ffc:	bl	40a3f0 <log_get_max_level_realm@plt>
  411000:	ldr	w8, [sp, #44]
  411004:	cmp	w0, w8
  411008:	cset	w8, ge  // ge = tcont
  41100c:	mov	w9, #0x1                   	// #1
  411010:	eor	w8, w8, #0x1
  411014:	eor	w8, w8, w9
  411018:	and	w8, w8, #0x1
  41101c:	mov	w1, w8
  411020:	sxtw	x10, w1
  411024:	cbz	x10, 411034 <on_uevent+0x114>
  411028:	ldr	x0, [sp, #48]
  41102c:	add	x1, sp, #0x38
  411030:	bl	40a860 <sd_device_get_sysname@plt>
  411034:	ldr	w0, [sp, #44]
  411038:	ldr	w1, [sp, #40]
  41103c:	ldr	x8, [sp, #56]
  411040:	mov	x9, xzr
  411044:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  411048:	add	x10, x10, #0xa46
  41104c:	cmp	x8, #0x0
  411050:	csel	x5, x10, x9, ne  // ne = any
  411054:	ldr	x6, [sp, #56]
  411058:	ldr	x2, [sp, #24]
  41105c:	mov	w3, #0x3c8                 	// #968
  411060:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  411064:	add	x4, x4, #0x7b9
  411068:	mov	x7, x9
  41106c:	mov	x8, sp
  411070:	str	x9, [x8]
  411074:	mov	x8, sp
  411078:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  41107c:	add	x9, x9, #0x7c3
  411080:	str	x9, [x8, #8]
  411084:	bl	40a870 <log_object_internal@plt>
  411088:	str	w0, [sp, #36]
  41108c:	mov	w11, #0x1                   	// #1
  411090:	stur	w11, [x29, #-4]
  411094:	b	4110a8 <on_uevent+0x188>
  411098:	ldur	x0, [x29, #-40]
  41109c:	bl	411b1c <event_queue_start>
  4110a0:	mov	w8, #0x1                   	// #1
  4110a4:	stur	w8, [x29, #-4]
  4110a8:	ldur	w0, [x29, #-4]
  4110ac:	ldp	x29, x30, [sp, #112]
  4110b0:	add	sp, sp, #0x80
  4110b4:	ret

00000000004110b8 <on_worker>:
  4110b8:	sub	sp, sp, #0x160
  4110bc:	stp	x29, x30, [sp, #320]
  4110c0:	str	x28, [sp, #336]
  4110c4:	add	x29, sp, #0x140
  4110c8:	sub	x8, x29, #0x60
  4110cc:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  4110d0:	add	x9, x9, #0xae0
  4110d4:	add	x9, x9, #0x3
  4110d8:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4110dc:	add	x10, x10, #0x8da
  4110e0:	stur	x0, [x29, #-16]
  4110e4:	stur	w1, [x29, #-20]
  4110e8:	stur	w2, [x29, #-24]
  4110ec:	stur	x3, [x29, #-32]
  4110f0:	ldur	x11, [x29, #-32]
  4110f4:	stur	x11, [x29, #-40]
  4110f8:	str	x8, [sp, #64]
  4110fc:	str	x9, [sp, #56]
  411100:	str	x10, [sp, #48]
  411104:	ldur	x8, [x29, #-40]
  411108:	cmp	x8, #0x0
  41110c:	cset	w9, ne  // ne = any
  411110:	mov	w10, #0x1                   	// #1
  411114:	eor	w9, w9, #0x1
  411118:	eor	w9, w9, w10
  41111c:	eor	w9, w9, w10
  411120:	and	w9, w9, #0x1
  411124:	mov	w0, w9
  411128:	sxtw	x8, w0
  41112c:	cbz	x8, 411150 <on_worker+0x98>
  411130:	mov	w0, #0x1                   	// #1
  411134:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  411138:	add	x1, x1, #0xcb6
  41113c:	ldr	x2, [sp, #56]
  411140:	mov	w3, #0x37a                 	// #890
  411144:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  411148:	add	x4, x4, #0x8a2
  41114c:	bl	40a540 <log_assert_failed_realm@plt>
  411150:	sub	x8, x29, #0x40
  411154:	sub	x9, x29, #0x29
  411158:	stur	x9, [x29, #-64]
  41115c:	mov	x9, xzr
  411160:	stur	xzr, [x29, #-56]
  411164:	adrp	x10, 471000 <on_inotify.__assert_in_set+0xd540>
  411168:	add	x10, x10, #0xf40
  41116c:	ldr	q0, [x10]
  411170:	sub	x11, x29, #0x60
  411174:	ldr	x12, [sp, #64]
  411178:	str	q0, [x12]
  41117c:	ldr	q0, [x10, #16]
  411180:	str	q0, [x12, #16]
  411184:	sub	x10, x29, #0x98
  411188:	stur	x9, [x29, #-152]
  41118c:	stur	wzr, [x29, #-144]
  411190:	str	x8, [x10, #16]
  411194:	mov	x8, #0x1                   	// #1
  411198:	stur	x8, [x29, #-128]
  41119c:	str	x11, [x10, #32]
  4111a0:	mov	x8, #0x20                  	// #32
  4111a4:	stur	x8, [x29, #-112]
  4111a8:	stur	wzr, [x29, #-104]
  4111ac:	str	x9, [sp, #144]
  4111b0:	ldur	w0, [x29, #-20]
  4111b4:	mov	x1, x10
  4111b8:	mov	w2, #0x40                  	// #64
  4111bc:	bl	40a950 <recvmsg@plt>
  4111c0:	str	x0, [sp, #152]
  4111c4:	ldr	x8, [sp, #152]
  4111c8:	cmp	x8, #0x0
  4111cc:	cset	w13, ge  // ge = tcont
  4111d0:	tbnz	w13, #0, 411288 <on_worker+0x1d0>
  4111d4:	bl	40a480 <__errno_location@plt>
  4111d8:	ldr	w8, [x0]
  4111dc:	cmp	w8, #0x4
  4111e0:	b.ne	4111e8 <on_worker+0x130>  // b.any
  4111e4:	b	411150 <on_worker+0x98>
  4111e8:	bl	40a480 <__errno_location@plt>
  4111ec:	ldr	w8, [x0]
  4111f0:	cmp	w8, #0xb
  4111f4:	b.ne	4111fc <on_worker+0x144>  // b.any
  4111f8:	b	411518 <on_worker+0x460>
  4111fc:	mov	w8, #0x3                   	// #3
  411200:	str	w8, [sp, #132]
  411204:	bl	40a480 <__errno_location@plt>
  411208:	ldr	w8, [x0]
  41120c:	str	w8, [sp, #128]
  411210:	mov	w8, #0x1                   	// #1
  411214:	str	w8, [sp, #124]
  411218:	ldr	w0, [sp, #124]
  41121c:	bl	40a3f0 <log_get_max_level_realm@plt>
  411220:	ldr	w8, [sp, #132]
  411224:	and	w8, w8, #0x7
  411228:	cmp	w0, w8
  41122c:	b.lt	411260 <on_worker+0x1a8>  // b.tstop
  411230:	ldr	w8, [sp, #124]
  411234:	ldr	w9, [sp, #132]
  411238:	orr	w0, w9, w8, lsl #10
  41123c:	ldr	w1, [sp, #128]
  411240:	ldr	x2, [sp, #56]
  411244:	mov	w3, #0x399                 	// #921
  411248:	ldr	x4, [sp, #48]
  41124c:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  411250:	add	x5, x5, #0x8e4
  411254:	bl	40a400 <log_internal_realm@plt>
  411258:	str	w0, [sp, #44]
  41125c:	b	411274 <on_worker+0x1bc>
  411260:	ldr	w0, [sp, #128]
  411264:	bl	40a410 <abs@plt>
  411268:	mov	w8, wzr
  41126c:	subs	w8, w8, w0, uxtb
  411270:	str	w8, [sp, #44]
  411274:	ldr	w8, [sp, #44]
  411278:	str	w8, [sp, #120]
  41127c:	ldr	w8, [sp, #120]
  411280:	stur	w8, [x29, #-4]
  411284:	b	411528 <on_worker+0x470>
  411288:	ldr	x8, [sp, #152]
  41128c:	cbz	x8, 411310 <on_worker+0x258>
  411290:	mov	w8, #0x4                   	// #4
  411294:	str	w8, [sp, #116]
  411298:	str	wzr, [sp, #112]
  41129c:	mov	w8, #0x1                   	// #1
  4112a0:	str	w8, [sp, #108]
  4112a4:	ldr	w0, [sp, #108]
  4112a8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4112ac:	ldr	w8, [sp, #116]
  4112b0:	and	w8, w8, #0x7
  4112b4:	cmp	w0, w8
  4112b8:	b.lt	4112f0 <on_worker+0x238>  // b.tstop
  4112bc:	ldr	w8, [sp, #108]
  4112c0:	ldr	w9, [sp, #116]
  4112c4:	orr	w0, w9, w8, lsl #10
  4112c8:	ldr	w1, [sp, #112]
  4112cc:	ldr	x6, [sp, #152]
  4112d0:	ldr	x2, [sp, #56]
  4112d4:	mov	w3, #0x39b                 	// #923
  4112d8:	ldr	x4, [sp, #48]
  4112dc:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4112e0:	add	x5, x5, #0x902
  4112e4:	bl	40a400 <log_internal_realm@plt>
  4112e8:	str	w0, [sp, #40]
  4112ec:	b	411304 <on_worker+0x24c>
  4112f0:	ldr	w0, [sp, #112]
  4112f4:	bl	40a410 <abs@plt>
  4112f8:	mov	w8, wzr
  4112fc:	subs	w8, w8, w0, uxtb
  411300:	str	w8, [sp, #40]
  411304:	ldr	w8, [sp, #40]
  411308:	str	w8, [sp, #104]
  41130c:	b	411150 <on_worker+0x98>
  411310:	ldur	x8, [x29, #-112]
  411314:	cmp	x8, #0x10
  411318:	b.cc	41132c <on_worker+0x274>  // b.lo, b.ul, b.last
  41131c:	sub	x8, x29, #0x98
  411320:	ldr	x8, [x8, #32]
  411324:	str	x8, [sp, #32]
  411328:	b	411334 <on_worker+0x27c>
  41132c:	mov	x8, xzr
  411330:	str	x8, [sp, #32]
  411334:	ldr	x8, [sp, #32]
  411338:	str	x8, [sp, #160]
  41133c:	ldr	x8, [sp, #160]
  411340:	cbz	x8, 411394 <on_worker+0x2dc>
  411344:	ldr	x8, [sp, #160]
  411348:	ldr	w9, [x8, #8]
  41134c:	cmp	w9, #0x1
  411350:	b.ne	411380 <on_worker+0x2c8>  // b.any
  411354:	ldr	x8, [sp, #160]
  411358:	ldr	w9, [x8, #12]
  41135c:	cmp	w9, #0x2
  411360:	b.ne	411380 <on_worker+0x2c8>  // b.any
  411364:	ldr	x8, [sp, #160]
  411368:	ldr	x8, [x8]
  41136c:	cmp	x8, #0x1c
  411370:	b.ne	411380 <on_worker+0x2c8>  // b.any
  411374:	ldr	x8, [sp, #160]
  411378:	add	x8, x8, #0x10
  41137c:	str	x8, [sp, #144]
  411380:	ldr	x1, [sp, #160]
  411384:	sub	x0, x29, #0x98
  411388:	bl	40a960 <__cmsg_nxthdr@plt>
  41138c:	str	x0, [sp, #160]
  411390:	b	41133c <on_worker+0x284>
  411394:	ldr	x8, [sp, #144]
  411398:	cbz	x8, 4113b0 <on_worker+0x2f8>
  41139c:	ldr	x8, [sp, #144]
  4113a0:	ldr	w9, [x8]
  4113a4:	cmp	w9, #0x0
  4113a8:	cset	w9, gt
  4113ac:	tbnz	w9, #0, 41142c <on_worker+0x374>
  4113b0:	mov	w8, #0x4                   	// #4
  4113b4:	str	w8, [sp, #100]
  4113b8:	str	wzr, [sp, #96]
  4113bc:	mov	w8, #0x1                   	// #1
  4113c0:	str	w8, [sp, #92]
  4113c4:	ldr	w0, [sp, #92]
  4113c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4113cc:	ldr	w8, [sp, #100]
  4113d0:	and	w8, w8, #0x7
  4113d4:	cmp	w0, w8
  4113d8:	b.lt	41140c <on_worker+0x354>  // b.tstop
  4113dc:	ldr	w8, [sp, #92]
  4113e0:	ldr	w9, [sp, #100]
  4113e4:	orr	w0, w9, w8, lsl #10
  4113e8:	ldr	w1, [sp, #96]
  4113ec:	ldr	x2, [sp, #56]
  4113f0:	mov	w3, #0x3a6                 	// #934
  4113f4:	ldr	x4, [sp, #48]
  4113f8:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4113fc:	add	x5, x5, #0x936
  411400:	bl	40a400 <log_internal_realm@plt>
  411404:	str	w0, [sp, #28]
  411408:	b	411420 <on_worker+0x368>
  41140c:	ldr	w0, [sp, #96]
  411410:	bl	40a410 <abs@plt>
  411414:	mov	w8, wzr
  411418:	subs	w8, w8, w0, uxtb
  41141c:	str	w8, [sp, #28]
  411420:	ldr	w8, [sp, #28]
  411424:	str	w8, [sp, #88]
  411428:	b	411150 <on_worker+0x98>
  41142c:	ldur	x8, [x29, #-40]
  411430:	ldr	x0, [x8, #8]
  411434:	ldr	x8, [sp, #144]
  411438:	ldr	w9, [x8]
  41143c:	str	x0, [sp, #16]
  411440:	mov	w0, w9
  411444:	bl	411a20 <PID_TO_PTR>
  411448:	ldr	x8, [sp, #16]
  41144c:	str	x0, [sp, #8]
  411450:	mov	x0, x8
  411454:	ldr	x1, [sp, #8]
  411458:	bl	4119f4 <hashmap_get>
  41145c:	str	x0, [sp, #136]
  411460:	ldr	x8, [sp, #136]
  411464:	cbnz	x8, 4114ec <on_worker+0x434>
  411468:	mov	w8, #0x7                   	// #7
  41146c:	str	w8, [sp, #84]
  411470:	str	wzr, [sp, #80]
  411474:	mov	w8, #0x1                   	// #1
  411478:	str	w8, [sp, #76]
  41147c:	ldr	w0, [sp, #76]
  411480:	bl	40a3f0 <log_get_max_level_realm@plt>
  411484:	ldr	w8, [sp, #84]
  411488:	and	w8, w8, #0x7
  41148c:	cmp	w0, w8
  411490:	b.lt	4114cc <on_worker+0x414>  // b.tstop
  411494:	ldr	w8, [sp, #76]
  411498:	ldr	w9, [sp, #84]
  41149c:	orr	w0, w9, w8, lsl #10
  4114a0:	ldr	w1, [sp, #80]
  4114a4:	ldr	x10, [sp, #144]
  4114a8:	ldr	w6, [x10]
  4114ac:	ldr	x2, [sp, #56]
  4114b0:	mov	w3, #0x3ad                 	// #941
  4114b4:	ldr	x4, [sp, #48]
  4114b8:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4114bc:	add	x5, x5, #0x960
  4114c0:	bl	40a400 <log_internal_realm@plt>
  4114c4:	str	w0, [sp, #4]
  4114c8:	b	4114e0 <on_worker+0x428>
  4114cc:	ldr	w0, [sp, #80]
  4114d0:	bl	40a410 <abs@plt>
  4114d4:	mov	w8, wzr
  4114d8:	subs	w8, w8, w0, uxtb
  4114dc:	str	w8, [sp, #4]
  4114e0:	ldr	w8, [sp, #4]
  4114e4:	str	w8, [sp, #72]
  4114e8:	b	411150 <on_worker+0x98>
  4114ec:	ldr	x8, [sp, #136]
  4114f0:	ldr	w9, [x8, #24]
  4114f4:	cmp	w9, #0x3
  4114f8:	b.eq	411508 <on_worker+0x450>  // b.none
  4114fc:	ldr	x8, [sp, #136]
  411500:	mov	w9, #0x2                   	// #2
  411504:	str	w9, [x8, #24]
  411508:	ldr	x8, [sp, #136]
  41150c:	ldr	x0, [x8, #32]
  411510:	bl	40f08c <event_free>
  411514:	b	411150 <on_worker+0x98>
  411518:	ldur	x0, [x29, #-40]
  41151c:	bl	411b1c <event_queue_start>
  411520:	mov	w8, #0x1                   	// #1
  411524:	stur	w8, [x29, #-4]
  411528:	ldur	w0, [x29, #-4]
  41152c:	ldr	x28, [sp, #336]
  411530:	ldp	x29, x30, [sp, #320]
  411534:	add	sp, sp, #0x160
  411538:	ret

000000000041153c <on_post>:
  41153c:	sub	sp, sp, #0x60
  411540:	stp	x29, x30, [sp, #80]
  411544:	add	x29, sp, #0x50
  411548:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  41154c:	add	x8, x8, #0xae0
  411550:	add	x2, x8, #0x3
  411554:	stur	x0, [x29, #-16]
  411558:	stur	x1, [x29, #-24]
  41155c:	ldur	x8, [x29, #-24]
  411560:	stur	x8, [x29, #-32]
  411564:	str	x2, [sp, #40]
  411568:	ldur	x8, [x29, #-32]
  41156c:	cmp	x8, #0x0
  411570:	cset	w9, ne  // ne = any
  411574:	mov	w10, #0x1                   	// #1
  411578:	eor	w9, w9, #0x1
  41157c:	eor	w9, w9, w10
  411580:	eor	w9, w9, w10
  411584:	and	w9, w9, #0x1
  411588:	mov	w0, w9
  41158c:	sxtw	x8, w0
  411590:	cbz	x8, 4115b4 <on_post+0x78>
  411594:	mov	w0, #0x1                   	// #1
  411598:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  41159c:	add	x1, x1, #0xcb6
  4115a0:	ldr	x2, [sp, #40]
  4115a4:	mov	w3, #0x53d                 	// #1341
  4115a8:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4115ac:	add	x4, x4, #0x98f
  4115b0:	bl	40a540 <log_assert_failed_realm@plt>
  4115b4:	ldur	x8, [x29, #-32]
  4115b8:	ldr	x8, [x8, #16]
  4115bc:	cbz	x8, 4115cc <on_post+0x90>
  4115c0:	mov	w8, #0x1                   	// #1
  4115c4:	stur	w8, [x29, #-4]
  4115c8:	b	4116e0 <on_post+0x1a4>
  4115cc:	ldur	x8, [x29, #-32]
  4115d0:	ldr	x0, [x8, #8]
  4115d4:	bl	411e40 <hashmap_isempty>
  4115d8:	tbnz	w0, #0, 411668 <on_post+0x12c>
  4115dc:	ldur	x8, [x29, #-32]
  4115e0:	ldr	x0, [x8]
  4115e4:	ldur	x8, [x29, #-32]
  4115e8:	add	x1, x8, #0x68
  4115ec:	mov	w9, #0x1                   	// #1
  4115f0:	str	x0, [sp, #32]
  4115f4:	mov	w0, w9
  4115f8:	str	x1, [sp, #24]
  4115fc:	str	w9, [sp, #20]
  411600:	bl	40a970 <now@plt>
  411604:	mov	x8, #0xc6c0                	// #50880
  411608:	movk	x8, #0x2d, lsl #16
  41160c:	add	x3, x0, x8
  411610:	ldur	x6, [x29, #-32]
  411614:	ldr	x0, [sp, #32]
  411618:	ldr	x1, [sp, #24]
  41161c:	ldr	w2, [sp, #20]
  411620:	mov	x4, #0x4240                	// #16960
  411624:	movk	x4, #0xf, lsl #16
  411628:	adrp	x5, 415000 <worker_lock_block_device+0x924>
  41162c:	add	x5, x5, #0xfe0
  411630:	mov	x8, xzr
  411634:	mov	x7, x8
  411638:	mov	x8, sp
  41163c:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  411640:	add	x10, x10, #0x9b6
  411644:	str	x10, [x8]
  411648:	mov	x8, sp
  41164c:	mov	w9, wzr
  411650:	and	w9, w9, #0x1
  411654:	strb	w9, [x8, #8]
  411658:	bl	40a980 <event_reset_time@plt>
  41165c:	ldr	w9, [sp, #20]
  411660:	stur	w9, [x29, #-4]
  411664:	b	4116e0 <on_post+0x1a4>
  411668:	ldur	x8, [x29, #-32]
  41166c:	ldrb	w9, [x8, #120]
  411670:	mov	w10, #0x1                   	// #1
  411674:	lsr	w9, w9, w10
  411678:	and	w9, w9, w10
  41167c:	tbnz	w9, #0, 411684 <on_post+0x148>
  411680:	b	4116a0 <on_post+0x164>
  411684:	ldur	x8, [x29, #-32]
  411688:	ldr	x0, [x8]
  41168c:	mov	w9, wzr
  411690:	mov	w1, w9
  411694:	bl	40a990 <sd_event_exit@plt>
  411698:	stur	w0, [x29, #-4]
  41169c:	b	4116e0 <on_post+0x1a4>
  4116a0:	ldur	x8, [x29, #-32]
  4116a4:	ldr	x8, [x8, #24]
  4116a8:	cbz	x8, 4116d8 <on_post+0x19c>
  4116ac:	ldur	x8, [x29, #-32]
  4116b0:	ldr	x1, [x8, #24]
  4116b4:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  4116b8:	add	x0, x0, #0xbaf
  4116bc:	mov	w2, #0x9                   	// #9
  4116c0:	mov	w3, #0x2                   	// #2
  4116c4:	mov	x8, xzr
  4116c8:	mov	x4, x8
  4116cc:	mov	x5, x8
  4116d0:	mov	x6, x8
  4116d4:	bl	40a9a0 <cg_kill@plt>
  4116d8:	mov	w8, #0x1                   	// #1
  4116dc:	stur	w8, [x29, #-4]
  4116e0:	ldur	w0, [x29, #-4]
  4116e4:	ldp	x29, x30, [sp, #80]
  4116e8:	add	sp, sp, #0x60
  4116ec:	ret

00000000004116f0 <manager_exit>:
  4116f0:	sub	sp, sp, #0x20
  4116f4:	stp	x29, x30, [sp, #16]
  4116f8:	add	x29, sp, #0x10
  4116fc:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  411700:	add	x8, x8, #0xae0
  411704:	add	x2, x8, #0x3
  411708:	str	x0, [sp, #8]
  41170c:	str	x2, [sp]
  411710:	ldr	x8, [sp, #8]
  411714:	cmp	x8, #0x0
  411718:	cset	w9, ne  // ne = any
  41171c:	mov	w10, #0x1                   	// #1
  411720:	eor	w9, w9, #0x1
  411724:	eor	w9, w9, w10
  411728:	eor	w9, w9, w10
  41172c:	and	w9, w9, #0x1
  411730:	mov	w0, w9
  411734:	sxtw	x8, w0
  411738:	cbz	x8, 41175c <manager_exit+0x6c>
  41173c:	mov	w0, #0x1                   	// #1
  411740:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  411744:	add	x1, x1, #0xcb6
  411748:	ldr	x2, [sp]
  41174c:	mov	w3, #0x30a                 	// #778
  411750:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411754:	add	x4, x4, #0x81f
  411758:	bl	40a540 <log_assert_failed_realm@plt>
  41175c:	ldr	x8, [sp, #8]
  411760:	ldrb	w9, [x8, #120]
  411764:	and	w9, w9, #0xfffffffd
  411768:	orr	w9, w9, #0x2
  41176c:	strb	w9, [x8, #120]
  411770:	mov	w9, wzr
  411774:	mov	w0, w9
  411778:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41177c:	add	x1, x1, #0x83c
  411780:	bl	40a740 <sd_notify@plt>
  411784:	ldr	x8, [sp, #8]
  411788:	ldr	x8, [x8, #72]
  41178c:	mov	x0, x8
  411790:	bl	41698c <udev_ctrl_unref>
  411794:	ldr	x8, [sp, #8]
  411798:	str	x0, [x8, #72]
  41179c:	ldr	x8, [sp, #8]
  4117a0:	ldr	x0, [x8, #96]
  4117a4:	bl	40a780 <sd_event_source_unref@plt>
  4117a8:	ldr	x8, [sp, #8]
  4117ac:	str	x0, [x8, #96]
  4117b0:	ldr	x8, [sp, #8]
  4117b4:	ldr	w0, [x8, #80]
  4117b8:	bl	40a760 <safe_close@plt>
  4117bc:	ldr	x8, [sp, #8]
  4117c0:	str	w0, [x8, #80]
  4117c4:	ldr	x8, [sp, #8]
  4117c8:	ldr	x0, [x8, #64]
  4117cc:	bl	40a7a0 <sd_device_monitor_unref@plt>
  4117d0:	ldr	x8, [sp, #8]
  4117d4:	str	x0, [x8, #64]
  4117d8:	ldr	x0, [sp, #8]
  4117dc:	mov	w1, #0x1                   	// #1
  4117e0:	bl	40effc <event_queue_cleanup>
  4117e4:	ldr	x0, [sp, #8]
  4117e8:	bl	4117f8 <manager_kill_workers>
  4117ec:	ldp	x29, x30, [sp, #16]
  4117f0:	add	sp, sp, #0x20
  4117f4:	ret

00000000004117f8 <manager_kill_workers>:
  4117f8:	sub	sp, sp, #0x50
  4117fc:	stp	x29, x30, [sp, #64]
  411800:	add	x29, sp, #0x40
  411804:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  411808:	add	x8, x8, #0xae0
  41180c:	add	x2, x8, #0x3
  411810:	stur	x0, [x29, #-8]
  411814:	str	x2, [sp, #8]
  411818:	ldur	x8, [x29, #-8]
  41181c:	cmp	x8, #0x0
  411820:	cset	w9, ne  // ne = any
  411824:	mov	w10, #0x1                   	// #1
  411828:	eor	w9, w9, #0x1
  41182c:	eor	w9, w9, w10
  411830:	eor	w9, w9, w10
  411834:	and	w9, w9, #0x1
  411838:	mov	w0, w9
  41183c:	sxtw	x8, w0
  411840:	cbz	x8, 411864 <manager_kill_workers+0x6c>
  411844:	mov	w0, #0x1                   	// #1
  411848:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  41184c:	add	x1, x1, #0xcb6
  411850:	ldr	x2, [sp, #8]
  411854:	mov	w3, #0x292                 	// #658
  411858:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  41185c:	add	x4, x4, #0x863
  411860:	bl	40a540 <log_assert_failed_realm@plt>
  411864:	add	x8, sp, #0x10
  411868:	mov	w9, #0xfffffffe            	// #-2
  41186c:	str	w9, [sp, #16]
  411870:	mov	x10, xzr
  411874:	str	x10, [x8, #8]
  411878:	ldr	q0, [sp, #16]
  41187c:	str	q0, [sp, #32]
  411880:	ldur	x8, [x29, #-8]
  411884:	ldr	x0, [x8, #8]
  411888:	add	x1, sp, #0x20
  41188c:	sub	x2, x29, #0x10
  411890:	mov	x8, xzr
  411894:	mov	x3, x8
  411898:	bl	4118e4 <hashmap_iterate>
  41189c:	tbnz	w0, #0, 4118a4 <manager_kill_workers+0xac>
  4118a0:	b	4118d8 <manager_kill_workers+0xe0>
  4118a4:	ldur	x8, [x29, #-16]
  4118a8:	ldr	w9, [x8, #24]
  4118ac:	cmp	w9, #0x3
  4118b0:	b.ne	4118b8 <manager_kill_workers+0xc0>  // b.any
  4118b4:	b	411880 <manager_kill_workers+0x88>
  4118b8:	ldur	x8, [x29, #-16]
  4118bc:	mov	w9, #0x3                   	// #3
  4118c0:	str	w9, [x8, #24]
  4118c4:	ldur	x8, [x29, #-16]
  4118c8:	ldr	w0, [x8, #8]
  4118cc:	mov	w1, #0xf                   	// #15
  4118d0:	bl	40a9b0 <kill@plt>
  4118d4:	b	411880 <manager_kill_workers+0x88>
  4118d8:	ldp	x29, x30, [sp, #64]
  4118dc:	add	sp, sp, #0x50
  4118e0:	ret

00000000004118e4 <hashmap_iterate>:
  4118e4:	sub	sp, sp, #0x30
  4118e8:	stp	x29, x30, [sp, #32]
  4118ec:	add	x29, sp, #0x20
  4118f0:	stur	x0, [x29, #-8]
  4118f4:	str	x1, [sp, #16]
  4118f8:	str	x2, [sp, #8]
  4118fc:	str	x3, [sp]
  411900:	ldur	x0, [x29, #-8]
  411904:	ldr	x1, [sp, #16]
  411908:	ldr	x2, [sp, #8]
  41190c:	ldr	x3, [sp]
  411910:	bl	40a9c0 <internal_hashmap_iterate@plt>
  411914:	and	w0, w0, #0x1
  411918:	ldp	x29, x30, [sp, #32]
  41191c:	add	sp, sp, #0x30
  411920:	ret

0000000000411924 <manager_reload>:
  411924:	sub	sp, sp, #0x30
  411928:	stp	x29, x30, [sp, #32]
  41192c:	add	x29, sp, #0x20
  411930:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  411934:	add	x8, x8, #0xae0
  411938:	add	x2, x8, #0x3
  41193c:	stur	x0, [x29, #-8]
  411940:	str	x2, [sp, #16]
  411944:	ldur	x8, [x29, #-8]
  411948:	cmp	x8, #0x0
  41194c:	cset	w9, ne  // ne = any
  411950:	mov	w10, #0x1                   	// #1
  411954:	eor	w9, w9, #0x1
  411958:	eor	w9, w9, w10
  41195c:	eor	w9, w9, w10
  411960:	and	w9, w9, #0x1
  411964:	mov	w0, w9
  411968:	sxtw	x8, w0
  41196c:	cbz	x8, 411990 <manager_reload+0x6c>
  411970:	mov	w0, #0x1                   	// #1
  411974:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  411978:	add	x1, x1, #0xcb6
  41197c:	ldr	x2, [sp, #16]
  411980:	mov	w3, #0x322                 	// #802
  411984:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411988:	add	x4, x4, #0x8d2
  41198c:	bl	40a540 <log_assert_failed_realm@plt>
  411990:	mov	w8, wzr
  411994:	mov	w0, w8
  411998:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41199c:	add	x1, x1, #0x8f1
  4119a0:	str	w8, [sp, #12]
  4119a4:	bl	40a740 <sd_notify@plt>
  4119a8:	ldur	x9, [x29, #-8]
  4119ac:	mov	x0, x9
  4119b0:	bl	4117f8 <manager_kill_workers>
  4119b4:	ldur	x9, [x29, #-8]
  4119b8:	ldr	x0, [x9, #40]
  4119bc:	bl	4218b4 <udev_rules_free>
  4119c0:	ldur	x9, [x29, #-8]
  4119c4:	str	x0, [x9, #40]
  4119c8:	bl	43e30c <udev_builtin_exit>
  4119cc:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  4119d0:	add	x9, x9, #0x218
  4119d4:	ldr	w2, [x9]
  4119d8:	ldr	w0, [sp, #12]
  4119dc:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4119e0:	add	x1, x1, #0x769
  4119e4:	bl	40a720 <sd_notifyf@plt>
  4119e8:	ldp	x29, x30, [sp, #32]
  4119ec:	add	sp, sp, #0x30
  4119f0:	ret

00000000004119f4 <hashmap_get>:
  4119f4:	sub	sp, sp, #0x20
  4119f8:	stp	x29, x30, [sp, #16]
  4119fc:	add	x29, sp, #0x10
  411a00:	str	x0, [sp, #8]
  411a04:	str	x1, [sp]
  411a08:	ldr	x0, [sp, #8]
  411a0c:	ldr	x1, [sp]
  411a10:	bl	40a9d0 <internal_hashmap_get@plt>
  411a14:	ldp	x29, x30, [sp, #16]
  411a18:	add	sp, sp, #0x20
  411a1c:	ret

0000000000411a20 <PID_TO_PTR>:
  411a20:	sub	sp, sp, #0x10
  411a24:	str	w0, [sp, #12]
  411a28:	ldrsw	x8, [sp, #12]
  411a2c:	mov	x0, x8
  411a30:	add	sp, sp, #0x10
  411a34:	ret

0000000000411a38 <worker_free>:
  411a38:	sub	sp, sp, #0x30
  411a3c:	stp	x29, x30, [sp, #32]
  411a40:	add	x29, sp, #0x20
  411a44:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  411a48:	add	x8, x8, #0xae0
  411a4c:	add	x2, x8, #0x3
  411a50:	stur	x0, [x29, #-8]
  411a54:	ldur	x8, [x29, #-8]
  411a58:	str	x2, [sp, #16]
  411a5c:	cbnz	x8, 411a64 <worker_free+0x2c>
  411a60:	b	411b10 <worker_free+0xd8>
  411a64:	ldur	x8, [x29, #-8]
  411a68:	ldr	x8, [x8]
  411a6c:	cmp	x8, #0x0
  411a70:	cset	w9, ne  // ne = any
  411a74:	mov	w10, #0x1                   	// #1
  411a78:	eor	w9, w9, #0x1
  411a7c:	eor	w9, w9, w10
  411a80:	eor	w9, w9, w10
  411a84:	and	w9, w9, #0x1
  411a88:	mov	w0, w9
  411a8c:	sxtw	x8, w0
  411a90:	cbz	x8, 411ab4 <worker_free+0x7c>
  411a94:	mov	w0, #0x1                   	// #1
  411a98:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  411a9c:	add	x1, x1, #0xad4
  411aa0:	ldr	x2, [sp, #16]
  411aa4:	mov	w3, #0xb1                  	// #177
  411aa8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411aac:	add	x4, x4, #0xae4
  411ab0:	bl	40a540 <log_assert_failed_realm@plt>
  411ab4:	ldur	x8, [x29, #-8]
  411ab8:	ldr	x8, [x8]
  411abc:	ldr	x0, [x8, #8]
  411ac0:	ldur	x8, [x29, #-8]
  411ac4:	ldr	w9, [x8, #8]
  411ac8:	str	x0, [sp, #8]
  411acc:	mov	w0, w9
  411ad0:	bl	411a20 <PID_TO_PTR>
  411ad4:	ldr	x8, [sp, #8]
  411ad8:	str	x0, [sp]
  411adc:	mov	x0, x8
  411ae0:	ldr	x1, [sp]
  411ae4:	bl	411e70 <hashmap_remove>
  411ae8:	ldur	x8, [x29, #-8]
  411aec:	ldr	x8, [x8, #16]
  411af0:	mov	x0, x8
  411af4:	bl	40a7a0 <sd_device_monitor_unref@plt>
  411af8:	ldur	x8, [x29, #-8]
  411afc:	ldr	x8, [x8, #32]
  411b00:	mov	x0, x8
  411b04:	bl	40f08c <event_free>
  411b08:	ldur	x0, [x29, #-8]
  411b0c:	bl	40a530 <free@plt>
  411b10:	ldp	x29, x30, [sp, #32]
  411b14:	add	sp, sp, #0x30
  411b18:	ret

0000000000411b1c <event_queue_start>:
  411b1c:	sub	sp, sp, #0x60
  411b20:	stp	x29, x30, [sp, #80]
  411b24:	add	x29, sp, #0x50
  411b28:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  411b2c:	add	x8, x8, #0xae0
  411b30:	add	x8, x8, #0x3
  411b34:	stur	x0, [x29, #-8]
  411b38:	str	x8, [sp, #8]
  411b3c:	ldur	x8, [x29, #-8]
  411b40:	cmp	x8, #0x0
  411b44:	cset	w9, ne  // ne = any
  411b48:	mov	w10, #0x1                   	// #1
  411b4c:	eor	w9, w9, #0x1
  411b50:	eor	w9, w9, w10
  411b54:	eor	w9, w9, w10
  411b58:	and	w9, w9, #0x1
  411b5c:	mov	w0, w9
  411b60:	sxtw	x8, w0
  411b64:	cbz	x8, 411b88 <event_queue_start+0x6c>
  411b68:	mov	w0, #0x1                   	// #1
  411b6c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  411b70:	add	x1, x1, #0xcb6
  411b74:	ldr	x2, [sp, #8]
  411b78:	mov	w3, #0x341                 	// #833
  411b7c:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411b80:	add	x4, x4, #0xb06
  411b84:	bl	40a540 <log_assert_failed_realm@plt>
  411b88:	ldur	x8, [x29, #-8]
  411b8c:	ldr	x8, [x8, #16]
  411b90:	cbz	x8, 411bc0 <event_queue_start+0xa4>
  411b94:	ldur	x8, [x29, #-8]
  411b98:	ldrb	w9, [x8, #120]
  411b9c:	mov	w10, #0x1                   	// #1
  411ba0:	lsr	w9, w9, w10
  411ba4:	and	w9, w9, w10
  411ba8:	tbnz	w9, #0, 411bc0 <event_queue_start+0xa4>
  411bac:	ldur	x8, [x29, #-8]
  411bb0:	ldrb	w9, [x8, #120]
  411bb4:	and	w9, w9, #0x1
  411bb8:	tbnz	w9, #0, 411bc0 <event_queue_start+0xa4>
  411bbc:	b	411bc4 <event_queue_start+0xa8>
  411bc0:	b	411e34 <event_queue_start+0x318>
  411bc4:	ldur	x8, [x29, #-8]
  411bc8:	ldr	x0, [x8]
  411bcc:	mov	w1, #0x1                   	// #1
  411bd0:	sub	x2, x29, #0x18
  411bd4:	bl	40a9e0 <sd_event_now@plt>
  411bd8:	cmp	w0, #0x0
  411bdc:	cset	w9, ge  // ge = tcont
  411be0:	mov	w10, #0x1                   	// #1
  411be4:	eor	w9, w9, #0x1
  411be8:	eor	w9, w9, w10
  411bec:	eor	w9, w9, w10
  411bf0:	and	w9, w9, #0x1
  411bf4:	mov	w2, w9
  411bf8:	sxtw	x8, w2
  411bfc:	cbz	x8, 411c20 <event_queue_start+0x104>
  411c00:	mov	w0, #0x1                   	// #1
  411c04:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  411c08:	add	x1, x1, #0xb28
  411c0c:	ldr	x2, [sp, #8]
  411c10:	mov	w3, #0x347                 	// #839
  411c14:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411c18:	add	x4, x4, #0xb06
  411c1c:	bl	40a540 <log_assert_failed_realm@plt>
  411c20:	ldur	x8, [x29, #-8]
  411c24:	ldr	x8, [x8, #112]
  411c28:	cbz	x8, 411c4c <event_queue_start+0x130>
  411c2c:	ldur	x8, [x29, #-24]
  411c30:	ldur	x9, [x29, #-8]
  411c34:	ldr	x9, [x9, #112]
  411c38:	subs	x8, x8, x9
  411c3c:	mov	x9, #0xc6c0                	// #50880
  411c40:	movk	x9, #0x2d, lsl #16
  411c44:	cmp	x8, x9
  411c48:	b.ls	411c7c <event_queue_start+0x160>  // b.plast
  411c4c:	ldur	x8, [x29, #-8]
  411c50:	ldr	x0, [x8, #40]
  411c54:	bl	421ddc <udev_rules_check_timestamp>
  411c58:	tbnz	w0, #0, 411c68 <event_queue_start+0x14c>
  411c5c:	bl	43e3dc <udev_builtin_validate>
  411c60:	tbnz	w0, #0, 411c68 <event_queue_start+0x14c>
  411c64:	b	411c70 <event_queue_start+0x154>
  411c68:	ldur	x0, [x29, #-8]
  411c6c:	bl	411924 <manager_reload>
  411c70:	ldur	x8, [x29, #-24]
  411c74:	ldur	x9, [x29, #-8]
  411c78:	str	x8, [x9, #112]
  411c7c:	ldur	x8, [x29, #-8]
  411c80:	ldr	x0, [x8, #104]
  411c84:	bl	40a8b0 <event_source_disable@plt>
  411c88:	stur	w0, [x29, #-28]
  411c8c:	ldur	w9, [x29, #-28]
  411c90:	cmp	w9, #0x0
  411c94:	cset	w9, ge  // ge = tcont
  411c98:	tbnz	w9, #0, 411d1c <event_queue_start+0x200>
  411c9c:	mov	w8, #0x4                   	// #4
  411ca0:	stur	w8, [x29, #-32]
  411ca4:	ldur	w8, [x29, #-28]
  411ca8:	stur	w8, [x29, #-36]
  411cac:	mov	w8, #0x1                   	// #1
  411cb0:	str	w8, [sp, #40]
  411cb4:	ldr	w0, [sp, #40]
  411cb8:	bl	40a3f0 <log_get_max_level_realm@plt>
  411cbc:	ldur	w8, [x29, #-32]
  411cc0:	and	w8, w8, #0x7
  411cc4:	cmp	w0, w8
  411cc8:	b.lt	411d00 <event_queue_start+0x1e4>  // b.tstop
  411ccc:	ldr	w8, [sp, #40]
  411cd0:	ldur	w9, [x29, #-32]
  411cd4:	orr	w0, w9, w8, lsl #10
  411cd8:	ldur	w1, [x29, #-36]
  411cdc:	ldr	x2, [sp, #8]
  411ce0:	mov	w3, #0x354                 	// #852
  411ce4:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411ce8:	add	x4, x4, #0xb62
  411cec:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  411cf0:	add	x5, x5, #0xa8a
  411cf4:	bl	40a400 <log_internal_realm@plt>
  411cf8:	str	w0, [sp, #4]
  411cfc:	b	411d14 <event_queue_start+0x1f8>
  411d00:	ldur	w0, [x29, #-36]
  411d04:	bl	40a410 <abs@plt>
  411d08:	mov	w8, wzr
  411d0c:	subs	w8, w8, w0, uxtb
  411d10:	str	w8, [sp, #4]
  411d14:	ldr	w8, [sp, #4]
  411d18:	str	w8, [sp, #36]
  411d1c:	bl	43e238 <udev_builtin_init>
  411d20:	ldur	x8, [x29, #-8]
  411d24:	ldr	x8, [x8, #40]
  411d28:	cbnz	x8, 411ddc <event_queue_start+0x2c0>
  411d2c:	ldur	x8, [x29, #-8]
  411d30:	add	x0, x8, #0x28
  411d34:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  411d38:	add	x8, x8, #0x8
  411d3c:	ldr	w1, [x8]
  411d40:	bl	421a54 <udev_rules_new>
  411d44:	stur	w0, [x29, #-28]
  411d48:	ldur	w9, [x29, #-28]
  411d4c:	cmp	w9, #0x0
  411d50:	cset	w9, ge  // ge = tcont
  411d54:	tbnz	w9, #0, 411ddc <event_queue_start+0x2c0>
  411d58:	mov	w8, #0x4                   	// #4
  411d5c:	str	w8, [sp, #32]
  411d60:	ldur	w8, [x29, #-28]
  411d64:	str	w8, [sp, #28]
  411d68:	mov	w8, #0x1                   	// #1
  411d6c:	str	w8, [sp, #24]
  411d70:	ldr	w0, [sp, #24]
  411d74:	bl	40a3f0 <log_get_max_level_realm@plt>
  411d78:	ldr	w8, [sp, #32]
  411d7c:	and	w8, w8, #0x7
  411d80:	cmp	w0, w8
  411d84:	b.lt	411dbc <event_queue_start+0x2a0>  // b.tstop
  411d88:	ldr	w8, [sp, #24]
  411d8c:	ldr	w9, [sp, #32]
  411d90:	orr	w0, w9, w8, lsl #10
  411d94:	ldr	w1, [sp, #28]
  411d98:	ldr	x2, [sp, #8]
  411d9c:	mov	w3, #0x35b                 	// #859
  411da0:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  411da4:	add	x4, x4, #0xb62
  411da8:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  411dac:	add	x5, x5, #0x714
  411db0:	bl	40a400 <log_internal_realm@plt>
  411db4:	str	w0, [sp]
  411db8:	b	411dd0 <event_queue_start+0x2b4>
  411dbc:	ldr	w0, [sp, #28]
  411dc0:	bl	40a410 <abs@plt>
  411dc4:	mov	w8, wzr
  411dc8:	subs	w8, w8, w0, uxtb
  411dcc:	str	w8, [sp]
  411dd0:	ldr	w8, [sp]
  411dd4:	str	w8, [sp, #20]
  411dd8:	b	411e34 <event_queue_start+0x318>
  411ddc:	ldur	x8, [x29, #-8]
  411de0:	ldr	x8, [x8, #16]
  411de4:	stur	x8, [x29, #-16]
  411de8:	ldur	x8, [x29, #-16]
  411dec:	cbz	x8, 411e34 <event_queue_start+0x318>
  411df0:	ldur	x8, [x29, #-16]
  411df4:	ldr	w9, [x8, #16]
  411df8:	cmp	w9, #0x1
  411dfc:	b.eq	411e04 <event_queue_start+0x2e8>  // b.none
  411e00:	b	411e24 <event_queue_start+0x308>
  411e04:	ldur	x0, [x29, #-8]
  411e08:	ldur	x1, [x29, #-16]
  411e0c:	bl	411e9c <is_device_busy>
  411e10:	cbz	w0, 411e18 <event_queue_start+0x2fc>
  411e14:	b	411e24 <event_queue_start+0x308>
  411e18:	ldur	x0, [x29, #-8]
  411e1c:	ldur	x1, [x29, #-16]
  411e20:	bl	412294 <event_run>
  411e24:	ldur	x8, [x29, #-16]
  411e28:	ldr	x8, [x8, #72]
  411e2c:	stur	x8, [x29, #-16]
  411e30:	b	411de8 <event_queue_start+0x2cc>
  411e34:	ldp	x29, x30, [sp, #80]
  411e38:	add	sp, sp, #0x60
  411e3c:	ret

0000000000411e40 <hashmap_isempty>:
  411e40:	sub	sp, sp, #0x20
  411e44:	stp	x29, x30, [sp, #16]
  411e48:	add	x29, sp, #0x10
  411e4c:	str	x0, [sp, #8]
  411e50:	ldr	x0, [sp, #8]
  411e54:	bl	4128f4 <hashmap_size>
  411e58:	cmp	w0, #0x0
  411e5c:	cset	w8, eq  // eq = none
  411e60:	and	w0, w8, #0x1
  411e64:	ldp	x29, x30, [sp, #16]
  411e68:	add	sp, sp, #0x20
  411e6c:	ret

0000000000411e70 <hashmap_remove>:
  411e70:	sub	sp, sp, #0x20
  411e74:	stp	x29, x30, [sp, #16]
  411e78:	add	x29, sp, #0x10
  411e7c:	str	x0, [sp, #8]
  411e80:	str	x1, [sp]
  411e84:	ldr	x0, [sp, #8]
  411e88:	ldr	x1, [sp]
  411e8c:	bl	40a9f0 <internal_hashmap_remove@plt>
  411e90:	ldp	x29, x30, [sp, #16]
  411e94:	add	sp, sp, #0x20
  411e98:	ret

0000000000411e9c <is_device_busy>:
  411e9c:	sub	sp, sp, #0xd0
  411ea0:	stp	x29, x30, [sp, #192]
  411ea4:	add	x29, sp, #0xc0
  411ea8:	mov	x8, xzr
  411eac:	mov	w9, wzr
  411eb0:	sub	x10, x29, #0x20
  411eb4:	stur	x0, [x29, #-16]
  411eb8:	stur	x1, [x29, #-24]
  411ebc:	stur	x8, [x29, #-48]
  411ec0:	mov	w0, w9
  411ec4:	mov	w1, w9
  411ec8:	str	x10, [sp, #24]
  411ecc:	bl	40aa00 <gnu_dev_makedev@plt>
  411ed0:	stur	x0, [x29, #-56]
  411ed4:	stur	wzr, [x29, #-80]
  411ed8:	ldur	x8, [x29, #-24]
  411edc:	ldr	x0, [x8, #24]
  411ee0:	ldr	x1, [sp, #24]
  411ee4:	bl	40aa10 <sd_device_get_subsystem@plt>
  411ee8:	stur	w0, [x29, #-76]
  411eec:	ldur	w9, [x29, #-76]
  411ef0:	cmp	w9, #0x0
  411ef4:	cset	w9, ge  // ge = tcont
  411ef8:	tbnz	w9, #0, 411f08 <is_device_busy+0x6c>
  411efc:	ldur	w8, [x29, #-76]
  411f00:	stur	w8, [x29, #-4]
  411f04:	b	412284 <is_device_busy+0x3e8>
  411f08:	ldur	x0, [x29, #-32]
  411f0c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  411f10:	add	x1, x1, #0xb74
  411f14:	bl	40aa20 <strcmp@plt>
  411f18:	cmp	w0, #0x0
  411f1c:	cset	w8, eq  // eq = none
  411f20:	and	w8, w8, #0x1
  411f24:	sturb	w8, [x29, #-81]
  411f28:	ldur	x9, [x29, #-24]
  411f2c:	ldr	x0, [x9, #24]
  411f30:	sub	x1, x29, #0x28
  411f34:	bl	40aa30 <sd_device_get_devpath@plt>
  411f38:	stur	w0, [x29, #-76]
  411f3c:	ldur	w8, [x29, #-76]
  411f40:	cmp	w8, #0x0
  411f44:	cset	w8, ge  // ge = tcont
  411f48:	tbnz	w8, #0, 411f58 <is_device_busy+0xbc>
  411f4c:	ldur	w8, [x29, #-76]
  411f50:	stur	w8, [x29, #-4]
  411f54:	b	412284 <is_device_busy+0x3e8>
  411f58:	ldur	x0, [x29, #-40]
  411f5c:	bl	40a800 <strlen@plt>
  411f60:	stur	x0, [x29, #-72]
  411f64:	ldur	x8, [x29, #-24]
  411f68:	ldr	x0, [x8, #24]
  411f6c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  411f70:	add	x1, x1, #0xb7a
  411f74:	sub	x2, x29, #0x30
  411f78:	bl	40aa40 <sd_device_get_property_value@plt>
  411f7c:	stur	w0, [x29, #-76]
  411f80:	ldur	w9, [x29, #-76]
  411f84:	cmp	w9, #0x0
  411f88:	cset	w9, ge  // ge = tcont
  411f8c:	tbnz	w9, #0, 411fac <is_device_busy+0x110>
  411f90:	ldur	w8, [x29, #-76]
  411f94:	mov	w9, #0xfffffffe            	// #-2
  411f98:	cmp	w8, w9
  411f9c:	b.eq	411fac <is_device_busy+0x110>  // b.none
  411fa0:	ldur	w8, [x29, #-76]
  411fa4:	stur	w8, [x29, #-4]
  411fa8:	b	412284 <is_device_busy+0x3e8>
  411fac:	ldur	x8, [x29, #-24]
  411fb0:	ldr	x0, [x8, #24]
  411fb4:	sub	x1, x29, #0x38
  411fb8:	bl	40aa50 <sd_device_get_devnum@plt>
  411fbc:	stur	w0, [x29, #-76]
  411fc0:	ldur	w9, [x29, #-76]
  411fc4:	cmp	w9, #0x0
  411fc8:	cset	w9, ge  // ge = tcont
  411fcc:	tbnz	w9, #0, 411fec <is_device_busy+0x150>
  411fd0:	ldur	w8, [x29, #-76]
  411fd4:	mov	w9, #0xfffffffe            	// #-2
  411fd8:	cmp	w8, w9
  411fdc:	b.eq	411fec <is_device_busy+0x150>  // b.none
  411fe0:	ldur	w8, [x29, #-76]
  411fe4:	stur	w8, [x29, #-4]
  411fe8:	b	412284 <is_device_busy+0x3e8>
  411fec:	ldur	x8, [x29, #-24]
  411ff0:	ldr	x0, [x8, #24]
  411ff4:	sub	x1, x29, #0x50
  411ff8:	bl	40aa60 <sd_device_get_ifindex@plt>
  411ffc:	stur	w0, [x29, #-76]
  412000:	ldur	w9, [x29, #-76]
  412004:	cmp	w9, #0x0
  412008:	cset	w9, ge  // ge = tcont
  41200c:	tbnz	w9, #0, 41202c <is_device_busy+0x190>
  412010:	ldur	w8, [x29, #-76]
  412014:	mov	w9, #0xfffffffe            	// #-2
  412018:	cmp	w8, w9
  41201c:	b.eq	41202c <is_device_busy+0x190>  // b.none
  412020:	ldur	w8, [x29, #-76]
  412024:	stur	w8, [x29, #-4]
  412028:	b	412284 <is_device_busy+0x3e8>
  41202c:	ldur	x8, [x29, #-16]
  412030:	ldr	x8, [x8, #16]
  412034:	stur	x8, [x29, #-64]
  412038:	ldur	x8, [x29, #-64]
  41203c:	cbz	x8, 412264 <is_device_busy+0x3c8>
  412040:	ldur	x8, [x29, #-64]
  412044:	ldr	x8, [x8, #40]
  412048:	ldur	x9, [x29, #-24]
  41204c:	ldr	x9, [x9, #48]
  412050:	cmp	x8, x9
  412054:	b.cs	41205c <is_device_busy+0x1c0>  // b.hs, b.nlast
  412058:	b	412254 <is_device_busy+0x3b8>
  41205c:	ldur	x8, [x29, #-64]
  412060:	ldr	x8, [x8, #40]
  412064:	ldur	x9, [x29, #-24]
  412068:	ldr	x9, [x9, #48]
  41206c:	cmp	x8, x9
  412070:	b.ne	412080 <is_device_busy+0x1e4>  // b.any
  412074:	mov	w8, #0x1                   	// #1
  412078:	stur	w8, [x29, #-4]
  41207c:	b	412284 <is_device_busy+0x3e8>
  412080:	ldur	x8, [x29, #-64]
  412084:	ldr	x8, [x8, #40]
  412088:	ldur	x9, [x29, #-24]
  41208c:	ldr	x9, [x9, #40]
  412090:	cmp	x8, x9
  412094:	b.cc	41209c <is_device_busy+0x200>  // b.lo, b.ul, b.last
  412098:	b	412264 <is_device_busy+0x3c8>
  41209c:	ldur	x0, [x29, #-56]
  4120a0:	bl	40aa70 <gnu_dev_major@plt>
  4120a4:	cbz	w0, 41212c <is_device_busy+0x290>
  4120a8:	ldur	x8, [x29, #-64]
  4120ac:	ldr	x0, [x8, #24]
  4120b0:	add	x1, sp, #0x48
  4120b4:	bl	40aa10 <sd_device_get_subsystem@plt>
  4120b8:	cmp	w0, #0x0
  4120bc:	cset	w9, ge  // ge = tcont
  4120c0:	tbnz	w9, #0, 4120c8 <is_device_busy+0x22c>
  4120c4:	b	412254 <is_device_busy+0x3b8>
  4120c8:	ldur	x8, [x29, #-64]
  4120cc:	ldr	x0, [x8, #24]
  4120d0:	add	x1, sp, #0x40
  4120d4:	bl	40aa50 <sd_device_get_devnum@plt>
  4120d8:	cmp	w0, #0x0
  4120dc:	cset	w9, lt  // lt = tstop
  4120e0:	tbnz	w9, #0, 41212c <is_device_busy+0x290>
  4120e4:	ldur	x8, [x29, #-56]
  4120e8:	ldr	x9, [sp, #64]
  4120ec:	cmp	x8, x9
  4120f0:	b.ne	41212c <is_device_busy+0x290>  // b.any
  4120f4:	ldurb	w8, [x29, #-81]
  4120f8:	and	w8, w8, #0x1
  4120fc:	ldr	x0, [sp, #72]
  412100:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412104:	add	x1, x1, #0xb74
  412108:	str	w8, [sp, #20]
  41210c:	bl	40aa20 <strcmp@plt>
  412110:	cmp	w0, #0x0
  412114:	cset	w8, eq  // eq = none
  412118:	and	w8, w8, #0x1
  41211c:	ldr	w9, [sp, #20]
  412120:	cmp	w9, w8
  412124:	b.ne	41212c <is_device_busy+0x290>  // b.any
  412128:	b	41226c <is_device_busy+0x3d0>
  41212c:	ldur	w8, [x29, #-80]
  412130:	cmp	w8, #0x0
  412134:	cset	w8, le
  412138:	tbnz	w8, #0, 41216c <is_device_busy+0x2d0>
  41213c:	ldur	x8, [x29, #-64]
  412140:	ldr	x0, [x8, #24]
  412144:	add	x1, sp, #0x3c
  412148:	bl	40aa60 <sd_device_get_ifindex@plt>
  41214c:	cmp	w0, #0x0
  412150:	cset	w9, lt  // lt = tstop
  412154:	tbnz	w9, #0, 41216c <is_device_busy+0x2d0>
  412158:	ldur	w8, [x29, #-80]
  41215c:	ldr	w9, [sp, #60]
  412160:	cmp	w8, w9
  412164:	b.ne	41216c <is_device_busy+0x2d0>  // b.any
  412168:	b	41226c <is_device_busy+0x3d0>
  41216c:	ldur	x8, [x29, #-64]
  412170:	ldr	x0, [x8, #24]
  412174:	add	x1, sp, #0x50
  412178:	bl	40aa30 <sd_device_get_devpath@plt>
  41217c:	cmp	w0, #0x0
  412180:	cset	w9, ge  // ge = tcont
  412184:	tbnz	w9, #0, 41218c <is_device_busy+0x2f0>
  412188:	b	412254 <is_device_busy+0x3b8>
  41218c:	ldur	x8, [x29, #-48]
  412190:	cbz	x8, 4121a8 <is_device_busy+0x30c>
  412194:	ldur	x0, [x29, #-48]
  412198:	ldr	x1, [sp, #80]
  41219c:	bl	40aa20 <strcmp@plt>
  4121a0:	cbnz	w0, 4121a8 <is_device_busy+0x30c>
  4121a4:	b	41226c <is_device_busy+0x3d0>
  4121a8:	ldr	x0, [sp, #80]
  4121ac:	bl	40a800 <strlen@plt>
  4121b0:	str	x0, [sp, #96]
  4121b4:	ldur	x8, [x29, #-72]
  4121b8:	str	x8, [sp, #48]
  4121bc:	ldr	x8, [sp, #96]
  4121c0:	str	x8, [sp, #40]
  4121c4:	ldr	x8, [sp, #48]
  4121c8:	ldr	x9, [sp, #40]
  4121cc:	cmp	x8, x9
  4121d0:	b.cs	4121e0 <is_device_busy+0x344>  // b.hs, b.nlast
  4121d4:	ldr	x8, [sp, #48]
  4121d8:	str	x8, [sp, #8]
  4121dc:	b	4121e8 <is_device_busy+0x34c>
  4121e0:	ldr	x8, [sp, #40]
  4121e4:	str	x8, [sp, #8]
  4121e8:	ldr	x8, [sp, #8]
  4121ec:	str	x8, [sp, #32]
  4121f0:	ldr	x8, [sp, #32]
  4121f4:	str	x8, [sp, #88]
  4121f8:	ldur	x0, [x29, #-40]
  4121fc:	ldr	x1, [sp, #80]
  412200:	ldr	x2, [sp, #88]
  412204:	bl	40a810 <strncmp@plt>
  412208:	cbz	w0, 412210 <is_device_busy+0x374>
  41220c:	b	412254 <is_device_busy+0x3b8>
  412210:	ldur	x8, [x29, #-72]
  412214:	ldr	x9, [sp, #96]
  412218:	cmp	x8, x9
  41221c:	b.ne	412224 <is_device_busy+0x388>  // b.any
  412220:	b	41226c <is_device_busy+0x3d0>
  412224:	ldur	x8, [x29, #-40]
  412228:	ldr	x9, [sp, #88]
  41222c:	ldrb	w10, [x8, x9]
  412230:	cmp	w10, #0x2f
  412234:	b.ne	41223c <is_device_busy+0x3a0>  // b.any
  412238:	b	41226c <is_device_busy+0x3d0>
  41223c:	ldr	x8, [sp, #80]
  412240:	ldr	x9, [sp, #88]
  412244:	ldrb	w10, [x8, x9]
  412248:	cmp	w10, #0x2f
  41224c:	b.ne	412254 <is_device_busy+0x3b8>  // b.any
  412250:	b	41226c <is_device_busy+0x3d0>
  412254:	ldur	x8, [x29, #-64]
  412258:	ldr	x8, [x8, #72]
  41225c:	stur	x8, [x29, #-64]
  412260:	b	412038 <is_device_busy+0x19c>
  412264:	stur	wzr, [x29, #-4]
  412268:	b	412284 <is_device_busy+0x3e8>
  41226c:	ldur	x8, [x29, #-64]
  412270:	ldr	x8, [x8, #40]
  412274:	ldur	x9, [x29, #-24]
  412278:	str	x8, [x9, #48]
  41227c:	mov	w10, #0x1                   	// #1
  412280:	stur	w10, [x29, #-4]
  412284:	ldur	w0, [x29, #-4]
  412288:	ldp	x29, x30, [sp, #192]
  41228c:	add	sp, sp, #0xd0
  412290:	ret

0000000000412294 <event_run>:
  412294:	sub	sp, sp, #0xc0
  412298:	stp	x29, x30, [sp, #176]
  41229c:	add	x29, sp, #0xb0
  4122a0:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  4122a4:	add	x8, x8, #0xc
  4122a8:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  4122ac:	add	x9, x9, #0xae0
  4122b0:	add	x9, x9, #0x3
  4122b4:	stur	x0, [x29, #-8]
  4122b8:	stur	x1, [x29, #-16]
  4122bc:	str	x8, [sp, #48]
  4122c0:	str	x9, [sp, #40]
  4122c4:	ldur	x8, [x29, #-8]
  4122c8:	cmp	x8, #0x0
  4122cc:	cset	w9, ne  // ne = any
  4122d0:	mov	w10, #0x1                   	// #1
  4122d4:	eor	w9, w9, #0x1
  4122d8:	eor	w9, w9, w10
  4122dc:	eor	w9, w9, w10
  4122e0:	and	w9, w9, #0x1
  4122e4:	mov	w0, w9
  4122e8:	sxtw	x8, w0
  4122ec:	cbz	x8, 412310 <event_run+0x7c>
  4122f0:	mov	w0, #0x1                   	// #1
  4122f4:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  4122f8:	add	x1, x1, #0xcb6
  4122fc:	ldr	x2, [sp, #40]
  412300:	mov	w3, #0x22f                 	// #559
  412304:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412308:	add	x4, x4, #0xb86
  41230c:	bl	40a540 <log_assert_failed_realm@plt>
  412310:	ldur	x8, [x29, #-16]
  412314:	cmp	x8, #0x0
  412318:	cset	w9, ne  // ne = any
  41231c:	mov	w10, #0x1                   	// #1
  412320:	eor	w9, w9, #0x1
  412324:	eor	w9, w9, w10
  412328:	eor	w9, w9, w10
  41232c:	and	w9, w9, #0x1
  412330:	mov	w0, w9
  412334:	sxtw	x8, w0
  412338:	cbz	x8, 41235c <event_run+0xc8>
  41233c:	mov	w0, #0x1                   	// #1
  412340:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412344:	add	x1, x1, #0xbb0
  412348:	ldr	x2, [sp, #40]
  41234c:	mov	w3, #0x230                 	// #560
  412350:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412354:	add	x4, x4, #0xb86
  412358:	bl	40a540 <log_assert_failed_realm@plt>
  41235c:	sub	x8, x29, #0x48
  412360:	mov	w9, #0xfffffffe            	// #-2
  412364:	stur	w9, [x29, #-72]
  412368:	mov	x10, xzr
  41236c:	str	x10, [x8, #8]
  412370:	ldur	q0, [x29, #-72]
  412374:	stur	q0, [x29, #-48]
  412378:	ldur	x8, [x29, #-8]
  41237c:	ldr	x0, [x8, #8]
  412380:	sub	x1, x29, #0x30
  412384:	sub	x2, x29, #0x18
  412388:	mov	x8, xzr
  41238c:	mov	x3, x8
  412390:	bl	4118e4 <hashmap_iterate>
  412394:	tbnz	w0, #0, 41239c <event_run+0x108>
  412398:	b	4124e0 <event_run+0x24c>
  41239c:	ldur	x8, [x29, #-24]
  4123a0:	ldr	w9, [x8, #24]
  4123a4:	cmp	w9, #0x2
  4123a8:	b.eq	4123b0 <event_run+0x11c>  // b.none
  4123ac:	b	412378 <event_run+0xe4>
  4123b0:	ldur	x8, [x29, #-8]
  4123b4:	ldr	x0, [x8, #64]
  4123b8:	ldur	x8, [x29, #-24]
  4123bc:	ldr	x1, [x8, #16]
  4123c0:	ldur	x8, [x29, #-16]
  4123c4:	ldr	x2, [x8, #24]
  4123c8:	bl	40a8a0 <device_monitor_send_device@plt>
  4123cc:	stur	w0, [x29, #-52]
  4123d0:	ldur	w9, [x29, #-52]
  4123d4:	cmp	w9, #0x0
  4123d8:	cset	w9, ge  // ge = tcont
  4123dc:	tbnz	w9, #0, 4124d0 <event_run+0x23c>
  4123e0:	mov	x8, xzr
  4123e4:	stur	x8, [x29, #-80]
  4123e8:	ldur	x8, [x29, #-16]
  4123ec:	ldr	x8, [x8, #24]
  4123f0:	str	x8, [sp, #88]
  4123f4:	mov	w9, #0x3                   	// #3
  4123f8:	str	w9, [sp, #84]
  4123fc:	ldur	w9, [x29, #-52]
  412400:	str	w9, [sp, #80]
  412404:	ldr	x8, [sp, #88]
  412408:	cbz	x8, 412448 <event_run+0x1b4>
  41240c:	mov	w0, #0x1                   	// #1
  412410:	bl	40a3f0 <log_get_max_level_realm@plt>
  412414:	ldr	w8, [sp, #84]
  412418:	cmp	w0, w8
  41241c:	cset	w8, ge  // ge = tcont
  412420:	mov	w9, #0x1                   	// #1
  412424:	eor	w8, w8, #0x1
  412428:	eor	w8, w8, w9
  41242c:	and	w8, w8, #0x1
  412430:	mov	w1, w8
  412434:	sxtw	x10, w1
  412438:	cbz	x10, 412448 <event_run+0x1b4>
  41243c:	ldr	x0, [sp, #88]
  412440:	sub	x1, x29, #0x50
  412444:	bl	40a860 <sd_device_get_sysname@plt>
  412448:	ldr	w0, [sp, #84]
  41244c:	ldr	w1, [sp, #80]
  412450:	ldur	x8, [x29, #-80]
  412454:	mov	x9, xzr
  412458:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41245c:	add	x10, x10, #0xa46
  412460:	cmp	x8, #0x0
  412464:	csel	x5, x10, x9, ne  // ne = any
  412468:	ldur	x6, [x29, #-80]
  41246c:	ldur	x8, [x29, #-24]
  412470:	ldr	w11, [x8, #8]
  412474:	ldr	x2, [sp, #40]
  412478:	mov	w3, #0x239                 	// #569
  41247c:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412480:	add	x4, x4, #0xbb6
  412484:	mov	x7, x9
  412488:	mov	x8, sp
  41248c:	str	x9, [x8]
  412490:	mov	x8, sp
  412494:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  412498:	add	x9, x9, #0xbc0
  41249c:	str	x9, [x8, #8]
  4124a0:	mov	x8, sp
  4124a4:	str	w11, [x8, #16]
  4124a8:	bl	40a870 <log_object_internal@plt>
  4124ac:	str	w0, [sp, #76]
  4124b0:	ldur	x8, [x29, #-24]
  4124b4:	ldr	w0, [x8, #8]
  4124b8:	mov	w1, #0x9                   	// #9
  4124bc:	bl	40a9b0 <kill@plt>
  4124c0:	ldur	x8, [x29, #-24]
  4124c4:	mov	w11, #0x3                   	// #3
  4124c8:	str	w11, [x8, #24]
  4124cc:	b	412378 <event_run+0xe4>
  4124d0:	ldur	x0, [x29, #-24]
  4124d4:	ldur	x1, [x29, #-16]
  4124d8:	bl	412600 <worker_attach_event>
  4124dc:	b	4125f4 <event_run+0x360>
  4124e0:	ldur	x8, [x29, #-8]
  4124e4:	ldr	x0, [x8, #8]
  4124e8:	bl	4128f4 <hashmap_size>
  4124ec:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  4124f0:	add	x8, x8, #0x218
  4124f4:	ldr	w9, [x8]
  4124f8:	cmp	w0, w9
  4124fc:	b.cc	4125dc <event_run+0x348>  // b.lo, b.ul, b.last
  412500:	ldr	x8, [sp, #48]
  412504:	ldrb	w9, [x8]
  412508:	tbnz	w9, #0, 412510 <event_run+0x27c>
  41250c:	b	4125d8 <event_run+0x344>
  412510:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  412514:	add	x8, x8, #0x218
  412518:	ldr	w9, [x8]
  41251c:	cmp	w9, #0x1
  412520:	b.ls	4125d8 <event_run+0x344>  // b.plast
  412524:	mov	w8, #0x7                   	// #7
  412528:	str	w8, [sp, #72]
  41252c:	str	wzr, [sp, #68]
  412530:	mov	w8, #0x1                   	// #1
  412534:	str	w8, [sp, #64]
  412538:	ldr	w0, [sp, #64]
  41253c:	bl	40a3f0 <log_get_max_level_realm@plt>
  412540:	ldr	w8, [sp, #72]
  412544:	and	w8, w8, #0x7
  412548:	cmp	w0, w8
  41254c:	b.lt	4125b0 <event_run+0x31c>  // b.tstop
  412550:	ldr	w8, [sp, #64]
  412554:	ldr	w9, [sp, #72]
  412558:	orr	w0, w9, w8, lsl #10
  41255c:	ldr	w1, [sp, #68]
  412560:	ldur	x10, [x29, #-8]
  412564:	ldr	x10, [x10, #8]
  412568:	str	w0, [sp, #36]
  41256c:	mov	x0, x10
  412570:	str	w1, [sp, #32]
  412574:	bl	4128f4 <hashmap_size>
  412578:	ldr	w8, [sp, #36]
  41257c:	str	w0, [sp, #28]
  412580:	mov	w0, w8
  412584:	ldr	w1, [sp, #32]
  412588:	ldr	x2, [sp, #40]
  41258c:	mov	w3, #0x247                 	// #583
  412590:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412594:	add	x4, x4, #0xbb6
  412598:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  41259c:	add	x5, x5, #0xbfb
  4125a0:	ldr	w6, [sp, #28]
  4125a4:	bl	40a400 <log_internal_realm@plt>
  4125a8:	str	w0, [sp, #24]
  4125ac:	b	4125c4 <event_run+0x330>
  4125b0:	ldr	w0, [sp, #68]
  4125b4:	bl	40a410 <abs@plt>
  4125b8:	mov	w8, wzr
  4125bc:	subs	w8, w8, w0, uxtb
  4125c0:	str	w8, [sp, #24]
  4125c4:	ldr	w8, [sp, #24]
  4125c8:	str	w8, [sp, #60]
  4125cc:	mov	w8, #0x0                   	// #0
  4125d0:	ldr	x9, [sp, #48]
  4125d4:	strb	w8, [x9]
  4125d8:	b	4125f4 <event_run+0x360>
  4125dc:	mov	w8, #0x1                   	// #1
  4125e0:	ldr	x9, [sp, #48]
  4125e4:	strb	w8, [x9]
  4125e8:	ldur	x0, [x29, #-8]
  4125ec:	ldur	x1, [x29, #-16]
  4125f0:	bl	412918 <worker_spawn>
  4125f4:	ldp	x29, x30, [sp, #176]
  4125f8:	add	sp, sp, #0xc0
  4125fc:	ret

0000000000412600 <worker_attach_event>:
  412600:	sub	sp, sp, #0x70
  412604:	stp	x29, x30, [sp, #96]
  412608:	add	x29, sp, #0x60
  41260c:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  412610:	add	x8, x8, #0xae0
  412614:	add	x8, x8, #0x3
  412618:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  41261c:	add	x9, x9, #0xc2b
  412620:	stur	x0, [x29, #-8]
  412624:	stur	x1, [x29, #-16]
  412628:	stur	x8, [x29, #-40]
  41262c:	str	x9, [sp, #48]
  412630:	ldur	x8, [x29, #-8]
  412634:	cmp	x8, #0x0
  412638:	cset	w9, ne  // ne = any
  41263c:	mov	w10, #0x1                   	// #1
  412640:	eor	w9, w9, #0x1
  412644:	eor	w9, w9, w10
  412648:	eor	w9, w9, w10
  41264c:	and	w9, w9, #0x1
  412650:	mov	w0, w9
  412654:	sxtw	x8, w0
  412658:	cbz	x8, 412678 <worker_attach_event+0x78>
  41265c:	mov	w0, #0x1                   	// #1
  412660:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412664:	add	x1, x1, #0xc24
  412668:	ldur	x2, [x29, #-40]
  41266c:	mov	w3, #0xfd                  	// #253
  412670:	ldr	x4, [sp, #48]
  412674:	bl	40a540 <log_assert_failed_realm@plt>
  412678:	ldur	x8, [x29, #-8]
  41267c:	ldr	x8, [x8]
  412680:	cmp	x8, #0x0
  412684:	cset	w9, ne  // ne = any
  412688:	mov	w10, #0x1                   	// #1
  41268c:	eor	w9, w9, #0x1
  412690:	eor	w9, w9, w10
  412694:	eor	w9, w9, w10
  412698:	and	w9, w9, #0x1
  41269c:	mov	w0, w9
  4126a0:	sxtw	x8, w0
  4126a4:	cbz	x8, 4126c4 <worker_attach_event+0xc4>
  4126a8:	mov	w0, #0x1                   	// #1
  4126ac:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4126b0:	add	x1, x1, #0xad4
  4126b4:	ldur	x2, [x29, #-40]
  4126b8:	mov	w3, #0xfe                  	// #254
  4126bc:	ldr	x4, [sp, #48]
  4126c0:	bl	40a540 <log_assert_failed_realm@plt>
  4126c4:	ldur	x8, [x29, #-16]
  4126c8:	cmp	x8, #0x0
  4126cc:	cset	w9, ne  // ne = any
  4126d0:	mov	w10, #0x1                   	// #1
  4126d4:	eor	w9, w9, #0x1
  4126d8:	eor	w9, w9, w10
  4126dc:	eor	w9, w9, w10
  4126e0:	and	w9, w9, #0x1
  4126e4:	mov	w0, w9
  4126e8:	sxtw	x8, w0
  4126ec:	cbz	x8, 41270c <worker_attach_event+0x10c>
  4126f0:	mov	w0, #0x1                   	// #1
  4126f4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4126f8:	add	x1, x1, #0xbb0
  4126fc:	ldur	x2, [x29, #-40]
  412700:	mov	w3, #0xff                  	// #255
  412704:	ldr	x4, [sp, #48]
  412708:	bl	40a540 <log_assert_failed_realm@plt>
  41270c:	ldur	x8, [x29, #-16]
  412710:	ldr	x8, [x8, #8]
  412714:	cmp	x8, #0x0
  412718:	cset	w9, ne  // ne = any
  41271c:	mov	w10, #0x1                   	// #1
  412720:	eor	w9, w9, #0x1
  412724:	eor	w9, w9, w10
  412728:	eor	w9, w9, w10
  41272c:	eor	w9, w9, w10
  412730:	and	w9, w9, #0x1
  412734:	mov	w0, w9
  412738:	sxtw	x8, w0
  41273c:	cbz	x8, 41275c <worker_attach_event+0x15c>
  412740:	mov	w0, #0x1                   	// #1
  412744:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412748:	add	x1, x1, #0xc65
  41274c:	ldur	x2, [x29, #-40]
  412750:	mov	w3, #0x100                 	// #256
  412754:	ldr	x4, [sp, #48]
  412758:	bl	40a540 <log_assert_failed_realm@plt>
  41275c:	ldur	x8, [x29, #-8]
  412760:	ldr	x8, [x8, #32]
  412764:	cmp	x8, #0x0
  412768:	cset	w9, ne  // ne = any
  41276c:	mov	w10, #0x1                   	// #1
  412770:	eor	w9, w9, #0x1
  412774:	eor	w9, w9, w10
  412778:	eor	w9, w9, w10
  41277c:	eor	w9, w9, w10
  412780:	and	w9, w9, #0x1
  412784:	mov	w0, w9
  412788:	sxtw	x8, w0
  41278c:	cbz	x8, 4127ac <worker_attach_event+0x1ac>
  412790:	mov	w0, #0x1                   	// #1
  412794:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412798:	add	x1, x1, #0xc74
  41279c:	ldur	x2, [x29, #-40]
  4127a0:	mov	w3, #0x101                 	// #257
  4127a4:	ldr	x4, [sp, #48]
  4127a8:	bl	40a540 <log_assert_failed_realm@plt>
  4127ac:	ldur	x8, [x29, #-8]
  4127b0:	mov	w9, #0x1                   	// #1
  4127b4:	str	w9, [x8, #24]
  4127b8:	ldur	x8, [x29, #-16]
  4127bc:	ldur	x10, [x29, #-8]
  4127c0:	str	x8, [x10, #32]
  4127c4:	ldur	x8, [x29, #-16]
  4127c8:	mov	w9, #0x2                   	// #2
  4127cc:	str	w9, [x8, #16]
  4127d0:	ldur	x8, [x29, #-8]
  4127d4:	ldur	x10, [x29, #-16]
  4127d8:	str	x8, [x10, #8]
  4127dc:	ldur	x8, [x29, #-8]
  4127e0:	ldr	x8, [x8]
  4127e4:	ldr	x8, [x8]
  4127e8:	stur	x8, [x29, #-24]
  4127ec:	ldur	x0, [x29, #-24]
  4127f0:	mov	w1, #0x1                   	// #1
  4127f4:	sub	x2, x29, #0x20
  4127f8:	bl	40a9e0 <sd_event_now@plt>
  4127fc:	cmp	w0, #0x0
  412800:	cset	w8, ge  // ge = tcont
  412804:	mov	w9, #0x1                   	// #1
  412808:	eor	w8, w8, #0x1
  41280c:	eor	w8, w8, w9
  412810:	eor	w8, w8, w9
  412814:	and	w8, w8, #0x1
  412818:	mov	w2, w8
  41281c:	sxtw	x10, w2
  412820:	cbz	x10, 412840 <worker_attach_event+0x240>
  412824:	mov	w0, #0x1                   	// #1
  412828:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41282c:	add	x1, x1, #0xc83
  412830:	ldur	x2, [x29, #-40]
  412834:	mov	w3, #0x10a                 	// #266
  412838:	ldr	x4, [sp, #48]
  41283c:	bl	40a540 <log_assert_failed_realm@plt>
  412840:	ldur	x0, [x29, #-24]
  412844:	ldur	x8, [x29, #-16]
  412848:	add	x1, x8, #0x38
  41284c:	ldur	x8, [x29, #-32]
  412850:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  412854:	add	x9, x9, #0x0
  412858:	ldr	x10, [x9]
  41285c:	str	x0, [sp, #40]
  412860:	mov	x0, x10
  412864:	str	x1, [sp, #32]
  412868:	str	x8, [sp, #24]
  41286c:	str	x9, [sp, #16]
  412870:	bl	412de8 <udev_warn_timeout>
  412874:	ldr	x8, [sp, #24]
  412878:	add	x3, x8, x0
  41287c:	ldur	x6, [x29, #-16]
  412880:	ldr	x0, [sp, #40]
  412884:	ldr	x1, [sp, #32]
  412888:	mov	w11, #0x1                   	// #1
  41288c:	mov	w2, w11
  412890:	mov	x9, #0x4240                	// #16960
  412894:	movk	x9, #0xf, lsl #16
  412898:	mov	x4, x9
  41289c:	adrp	x5, 412000 <is_device_busy+0x164>
  4128a0:	add	x5, x5, #0xe48
  4128a4:	str	w11, [sp, #12]
  4128a8:	str	x9, [sp]
  4128ac:	bl	40aa80 <sd_event_add_time@plt>
  4128b0:	ldur	x8, [x29, #-24]
  4128b4:	ldur	x9, [x29, #-16]
  4128b8:	add	x1, x9, #0x40
  4128bc:	ldur	x9, [x29, #-32]
  4128c0:	ldr	x10, [sp, #16]
  4128c4:	ldr	x12, [x10]
  4128c8:	add	x3, x9, x12
  4128cc:	ldur	x6, [x29, #-16]
  4128d0:	mov	x0, x8
  4128d4:	ldr	w2, [sp, #12]
  4128d8:	ldr	x4, [sp]
  4128dc:	adrp	x5, 413000 <on_event_timeout_warning+0x1b8>
  4128e0:	add	x5, x5, #0x4
  4128e4:	bl	40aa80 <sd_event_add_time@plt>
  4128e8:	ldp	x29, x30, [sp, #96]
  4128ec:	add	sp, sp, #0x70
  4128f0:	ret

00000000004128f4 <hashmap_size>:
  4128f4:	sub	sp, sp, #0x20
  4128f8:	stp	x29, x30, [sp, #16]
  4128fc:	add	x29, sp, #0x10
  412900:	str	x0, [sp, #8]
  412904:	ldr	x0, [sp, #8]
  412908:	bl	40aa90 <internal_hashmap_size@plt>
  41290c:	ldp	x29, x30, [sp, #16]
  412910:	add	sp, sp, #0x20
  412914:	ret

0000000000412918 <worker_spawn>:
  412918:	sub	sp, sp, #0x120
  41291c:	stp	x29, x30, [sp, #256]
  412920:	str	x28, [sp, #272]
  412924:	add	x29, sp, #0x100
  412928:	sub	x8, x29, #0x10
  41292c:	mov	x9, xzr
  412930:	mov	w10, wzr
  412934:	mov	w2, #0xffffffff            	// #-1
  412938:	adrp	x11, 463000 <dhcp_lease_set_client_id+0xc4>
  41293c:	add	x11, x11, #0xae0
  412940:	add	x11, x11, #0x3
  412944:	adrp	x12, 464000 <on_inotify.__assert_in_set+0x540>
  412948:	add	x12, x12, #0xdc5
  41294c:	sub	x13, x29, #0x20
  412950:	str	x0, [x8]
  412954:	stur	x1, [x29, #-24]
  412958:	stur	x9, [x29, #-32]
  41295c:	mov	x0, x13
  412960:	mov	w1, w10
  412964:	str	x8, [sp, #96]
  412968:	str	x11, [sp, #88]
  41296c:	str	x12, [sp, #80]
  412970:	bl	40a610 <device_monitor_new_full@plt>
  412974:	stur	w0, [x29, #-48]
  412978:	ldur	w10, [x29, #-48]
  41297c:	cmp	w10, #0x0
  412980:	cset	w10, ge  // ge = tcont
  412984:	tbnz	w10, #0, 41299c <worker_spawn+0x84>
  412988:	ldur	w8, [x29, #-48]
  41298c:	stur	w8, [x29, #-4]
  412990:	mov	w8, #0x1                   	// #1
  412994:	stur	w8, [x29, #-52]
  412998:	b	412dcc <worker_spawn+0x4b4>
  41299c:	ldur	x0, [x29, #-32]
  4129a0:	ldr	x8, [sp, #96]
  4129a4:	ldr	x9, [x8]
  4129a8:	ldr	x1, [x9, #64]
  4129ac:	bl	40aaa0 <device_monitor_allow_unicast_sender@plt>
  4129b0:	stur	w0, [x29, #-48]
  4129b4:	ldur	w10, [x29, #-48]
  4129b8:	cmp	w10, #0x0
  4129bc:	cset	w10, ge  // ge = tcont
  4129c0:	tbnz	w10, #0, 412a54 <worker_spawn+0x13c>
  4129c4:	mov	w8, #0x3                   	// #3
  4129c8:	stur	w8, [x29, #-56]
  4129cc:	ldur	w8, [x29, #-48]
  4129d0:	stur	w8, [x29, #-60]
  4129d4:	mov	w8, #0x1                   	// #1
  4129d8:	stur	w8, [x29, #-64]
  4129dc:	ldur	w0, [x29, #-64]
  4129e0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4129e4:	ldur	w8, [x29, #-56]
  4129e8:	and	w8, w8, #0x7
  4129ec:	cmp	w0, w8
  4129f0:	b.lt	412a24 <worker_spawn+0x10c>  // b.tstop
  4129f4:	ldur	w8, [x29, #-64]
  4129f8:	ldur	w9, [x29, #-56]
  4129fc:	orr	w0, w9, w8, lsl #10
  412a00:	ldur	w1, [x29, #-60]
  412a04:	ldr	x2, [sp, #88]
  412a08:	mov	w3, #0x20d                 	// #525
  412a0c:	ldr	x4, [sp, #80]
  412a10:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  412a14:	add	x5, x5, #0xdd2
  412a18:	bl	40a400 <log_internal_realm@plt>
  412a1c:	str	w0, [sp, #76]
  412a20:	b	412a38 <worker_spawn+0x120>
  412a24:	ldur	w0, [x29, #-60]
  412a28:	bl	40a410 <abs@plt>
  412a2c:	mov	w8, wzr
  412a30:	subs	w8, w8, w0, uxtb
  412a34:	str	w8, [sp, #76]
  412a38:	ldr	w8, [sp, #76]
  412a3c:	stur	w8, [x29, #-68]
  412a40:	ldur	w8, [x29, #-68]
  412a44:	stur	w8, [x29, #-4]
  412a48:	mov	w8, #0x1                   	// #1
  412a4c:	stur	w8, [x29, #-52]
  412a50:	b	412dcc <worker_spawn+0x4b4>
  412a54:	ldur	x0, [x29, #-32]
  412a58:	bl	40a630 <device_monitor_enable_receiving@plt>
  412a5c:	stur	w0, [x29, #-48]
  412a60:	ldur	w8, [x29, #-48]
  412a64:	cmp	w8, #0x0
  412a68:	cset	w8, ge  // ge = tcont
  412a6c:	tbnz	w8, #0, 412b00 <worker_spawn+0x1e8>
  412a70:	mov	w8, #0x3                   	// #3
  412a74:	stur	w8, [x29, #-72]
  412a78:	ldur	w8, [x29, #-48]
  412a7c:	stur	w8, [x29, #-76]
  412a80:	mov	w8, #0x1                   	// #1
  412a84:	stur	w8, [x29, #-80]
  412a88:	ldur	w0, [x29, #-80]
  412a8c:	bl	40a3f0 <log_get_max_level_realm@plt>
  412a90:	ldur	w8, [x29, #-72]
  412a94:	and	w8, w8, #0x7
  412a98:	cmp	w0, w8
  412a9c:	b.lt	412ad0 <worker_spawn+0x1b8>  // b.tstop
  412aa0:	ldur	w8, [x29, #-80]
  412aa4:	ldur	w9, [x29, #-72]
  412aa8:	orr	w0, w9, w8, lsl #10
  412aac:	ldur	w1, [x29, #-76]
  412ab0:	ldr	x2, [sp, #88]
  412ab4:	mov	w3, #0x211                 	// #529
  412ab8:	ldr	x4, [sp, #80]
  412abc:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  412ac0:	add	x5, x5, #0xdfb
  412ac4:	bl	40a400 <log_internal_realm@plt>
  412ac8:	str	w0, [sp, #72]
  412acc:	b	412ae4 <worker_spawn+0x1cc>
  412ad0:	ldur	w0, [x29, #-76]
  412ad4:	bl	40a410 <abs@plt>
  412ad8:	mov	w8, wzr
  412adc:	subs	w8, w8, w0, uxtb
  412ae0:	str	w8, [sp, #72]
  412ae4:	ldr	w8, [sp, #72]
  412ae8:	stur	w8, [x29, #-84]
  412aec:	ldur	w8, [x29, #-84]
  412af0:	stur	w8, [x29, #-4]
  412af4:	mov	w8, #0x1                   	// #1
  412af8:	stur	w8, [x29, #-52]
  412afc:	b	412dcc <worker_spawn+0x4b4>
  412b00:	mov	x8, xzr
  412b04:	mov	x0, x8
  412b08:	mov	w1, #0x4                   	// #4
  412b0c:	sub	x2, x29, #0x2c
  412b10:	bl	413214 <safe_fork>
  412b14:	stur	w0, [x29, #-48]
  412b18:	ldur	w9, [x29, #-48]
  412b1c:	cmp	w9, #0x0
  412b20:	cset	w9, ge  // ge = tcont
  412b24:	tbnz	w9, #0, 412bc0 <worker_spawn+0x2a8>
  412b28:	ldur	x8, [x29, #-24]
  412b2c:	mov	w9, #0x1                   	// #1
  412b30:	str	w9, [x8, #16]
  412b34:	mov	w10, #0x3                   	// #3
  412b38:	stur	w10, [x29, #-88]
  412b3c:	ldur	w10, [x29, #-48]
  412b40:	stur	w10, [x29, #-92]
  412b44:	stur	w9, [x29, #-96]
  412b48:	ldur	w0, [x29, #-96]
  412b4c:	bl	40a3f0 <log_get_max_level_realm@plt>
  412b50:	ldur	w9, [x29, #-88]
  412b54:	and	w9, w9, #0x7
  412b58:	cmp	w0, w9
  412b5c:	b.lt	412b90 <worker_spawn+0x278>  // b.tstop
  412b60:	ldur	w8, [x29, #-96]
  412b64:	ldur	w9, [x29, #-88]
  412b68:	orr	w0, w9, w8, lsl #10
  412b6c:	ldur	w1, [x29, #-92]
  412b70:	ldr	x2, [sp, #88]
  412b74:	mov	w3, #0x216                 	// #534
  412b78:	ldr	x4, [sp, #80]
  412b7c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  412b80:	add	x5, x5, #0xe2c
  412b84:	bl	40a400 <log_internal_realm@plt>
  412b88:	str	w0, [sp, #68]
  412b8c:	b	412ba4 <worker_spawn+0x28c>
  412b90:	ldur	w0, [x29, #-92]
  412b94:	bl	40a410 <abs@plt>
  412b98:	mov	w8, wzr
  412b9c:	subs	w8, w8, w0, uxtb
  412ba0:	str	w8, [sp, #68]
  412ba4:	ldr	w8, [sp, #68]
  412ba8:	stur	w8, [x29, #-100]
  412bac:	ldur	w8, [x29, #-100]
  412bb0:	stur	w8, [x29, #-4]
  412bb4:	mov	w8, #0x1                   	// #1
  412bb8:	stur	w8, [x29, #-52]
  412bbc:	b	412dcc <worker_spawn+0x4b4>
  412bc0:	ldur	w8, [x29, #-48]
  412bc4:	cbnz	w8, 412c24 <worker_spawn+0x30c>
  412bc8:	ldr	x8, [sp, #96]
  412bcc:	ldr	x0, [x8]
  412bd0:	ldur	x1, [x29, #-32]
  412bd4:	ldur	x9, [x29, #-24]
  412bd8:	ldr	x9, [x9, #24]
  412bdc:	str	x0, [sp, #56]
  412be0:	mov	x0, x9
  412be4:	str	x1, [sp, #48]
  412be8:	bl	40aab0 <sd_device_ref@plt>
  412bec:	ldr	x8, [sp, #56]
  412bf0:	str	x0, [sp, #40]
  412bf4:	mov	x0, x8
  412bf8:	ldr	x1, [sp, #48]
  412bfc:	ldr	x2, [sp, #40]
  412c00:	bl	41325c <worker_main>
  412c04:	stur	w0, [x29, #-48]
  412c08:	bl	40aac0 <log_close@plt>
  412c0c:	ldur	w10, [x29, #-48]
  412c10:	mov	w11, wzr
  412c14:	mov	w12, #0x1                   	// #1
  412c18:	cmp	w10, #0x0
  412c1c:	csel	w0, w12, w11, lt  // lt = tstop
  412c20:	bl	40aad0 <_exit@plt>
  412c24:	ldr	x8, [sp, #96]
  412c28:	ldr	x1, [x8]
  412c2c:	ldur	x2, [x29, #-32]
  412c30:	ldur	w3, [x29, #-44]
  412c34:	sub	x0, x29, #0x28
  412c38:	bl	413878 <worker_new>
  412c3c:	stur	w0, [x29, #-48]
  412c40:	ldur	w9, [x29, #-48]
  412c44:	cmp	w9, #0x0
  412c48:	cset	w9, ge  // ge = tcont
  412c4c:	tbnz	w9, #0, 412ce0 <worker_spawn+0x3c8>
  412c50:	mov	w8, #0x3                   	// #3
  412c54:	stur	w8, [x29, #-104]
  412c58:	ldur	w8, [x29, #-48]
  412c5c:	stur	w8, [x29, #-108]
  412c60:	mov	w8, #0x1                   	// #1
  412c64:	stur	w8, [x29, #-112]
  412c68:	ldur	w0, [x29, #-112]
  412c6c:	bl	40a3f0 <log_get_max_level_realm@plt>
  412c70:	ldur	w8, [x29, #-104]
  412c74:	and	w8, w8, #0x7
  412c78:	cmp	w0, w8
  412c7c:	b.lt	412cb0 <worker_spawn+0x398>  // b.tstop
  412c80:	ldur	w8, [x29, #-112]
  412c84:	ldur	w9, [x29, #-104]
  412c88:	orr	w0, w9, w8, lsl #10
  412c8c:	ldur	w1, [x29, #-108]
  412c90:	ldr	x2, [sp, #88]
  412c94:	mov	w3, #0x221                 	// #545
  412c98:	ldr	x4, [sp, #80]
  412c9c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  412ca0:	add	x5, x5, #0xe48
  412ca4:	bl	40a400 <log_internal_realm@plt>
  412ca8:	str	w0, [sp, #36]
  412cac:	b	412cc4 <worker_spawn+0x3ac>
  412cb0:	ldur	w0, [x29, #-108]
  412cb4:	bl	40a410 <abs@plt>
  412cb8:	mov	w8, wzr
  412cbc:	subs	w8, w8, w0, uxtb
  412cc0:	str	w8, [sp, #36]
  412cc4:	ldr	w8, [sp, #36]
  412cc8:	stur	w8, [x29, #-116]
  412ccc:	ldur	w8, [x29, #-116]
  412cd0:	stur	w8, [x29, #-4]
  412cd4:	mov	w8, #0x1                   	// #1
  412cd8:	stur	w8, [x29, #-52]
  412cdc:	b	412dcc <worker_spawn+0x4b4>
  412ce0:	ldur	x0, [x29, #-40]
  412ce4:	ldur	x1, [x29, #-24]
  412ce8:	bl	412600 <worker_attach_event>
  412cec:	mov	x8, xzr
  412cf0:	str	x8, [sp, #128]
  412cf4:	ldur	x8, [x29, #-24]
  412cf8:	ldr	x8, [x8, #24]
  412cfc:	str	x8, [sp, #120]
  412d00:	mov	w9, #0x7                   	// #7
  412d04:	str	w9, [sp, #116]
  412d08:	str	wzr, [sp, #112]
  412d0c:	ldr	x8, [sp, #120]
  412d10:	cbz	x8, 412d50 <worker_spawn+0x438>
  412d14:	mov	w0, #0x1                   	// #1
  412d18:	bl	40a3f0 <log_get_max_level_realm@plt>
  412d1c:	ldr	w8, [sp, #116]
  412d20:	cmp	w0, w8
  412d24:	cset	w8, ge  // ge = tcont
  412d28:	mov	w9, #0x1                   	// #1
  412d2c:	eor	w8, w8, #0x1
  412d30:	eor	w8, w8, w9
  412d34:	and	w8, w8, #0x1
  412d38:	mov	w1, w8
  412d3c:	sxtw	x10, w1
  412d40:	cbz	x10, 412d50 <worker_spawn+0x438>
  412d44:	ldr	x0, [sp, #120]
  412d48:	add	x1, sp, #0x80
  412d4c:	bl	40a860 <sd_device_get_sysname@plt>
  412d50:	ldr	w0, [sp, #116]
  412d54:	ldr	w1, [sp, #112]
  412d58:	ldr	x8, [sp, #128]
  412d5c:	mov	x9, xzr
  412d60:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  412d64:	add	x10, x10, #0xa46
  412d68:	cmp	x8, #0x0
  412d6c:	csel	x5, x10, x9, ne  // ne = any
  412d70:	ldr	x6, [sp, #128]
  412d74:	ldur	w11, [x29, #-44]
  412d78:	ldur	x8, [x29, #-24]
  412d7c:	ldr	x8, [x8, #40]
  412d80:	ldr	x2, [sp, #88]
  412d84:	mov	w3, #0x225                 	// #549
  412d88:	ldr	x4, [sp, #80]
  412d8c:	mov	x7, x9
  412d90:	mov	x10, sp
  412d94:	str	x9, [x10]
  412d98:	mov	x9, sp
  412d9c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  412da0:	add	x10, x10, #0xe6b
  412da4:	str	x10, [x9, #8]
  412da8:	mov	x9, sp
  412dac:	str	w11, [x9, #16]
  412db0:	mov	x9, sp
  412db4:	str	x8, [x9, #24]
  412db8:	bl	40a870 <log_object_internal@plt>
  412dbc:	str	w0, [sp, #108]
  412dc0:	stur	wzr, [x29, #-4]
  412dc4:	mov	w11, #0x1                   	// #1
  412dc8:	stur	w11, [x29, #-52]
  412dcc:	sub	x0, x29, #0x20
  412dd0:	bl	4131e0 <sd_device_monitor_unrefp>
  412dd4:	ldur	w0, [x29, #-4]
  412dd8:	ldr	x28, [sp, #272]
  412ddc:	ldp	x29, x30, [sp, #256]
  412de0:	add	sp, sp, #0x120
  412de4:	ret

0000000000412de8 <udev_warn_timeout>:
  412de8:	sub	sp, sp, #0x20
  412dec:	mov	w8, #0x3                   	// #3
  412df0:	mov	x9, #0x3                   	// #3
  412df4:	str	x0, [sp, #24]
  412df8:	ldr	x10, [sp, #24]
  412dfc:	str	x10, [sp, #16]
  412e00:	str	w8, [sp, #12]
  412e04:	ldr	x10, [sp, #16]
  412e08:	udiv	x10, x10, x9
  412e0c:	ldr	x11, [sp, #16]
  412e10:	udiv	x12, x11, x9
  412e14:	mul	x9, x12, x9
  412e18:	subs	x9, x11, x9
  412e1c:	cmp	x9, #0x0
  412e20:	cset	w8, ne  // ne = any
  412e24:	mov	w13, #0x1                   	// #1
  412e28:	eor	w8, w8, #0x1
  412e2c:	eor	w8, w8, w13
  412e30:	and	w8, w8, #0x1
  412e34:	add	x9, x10, w8, sxtw
  412e38:	str	x9, [sp]
  412e3c:	ldr	x0, [sp]
  412e40:	add	sp, sp, #0x20
  412e44:	ret

0000000000412e48 <on_event_timeout_warning>:
  412e48:	sub	sp, sp, #0x80
  412e4c:	stp	x29, x30, [sp, #112]
  412e50:	add	x29, sp, #0x70
  412e54:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  412e58:	add	x8, x8, #0xae0
  412e5c:	add	x8, x8, #0x3
  412e60:	stur	x0, [x29, #-8]
  412e64:	stur	x1, [x29, #-16]
  412e68:	stur	x2, [x29, #-24]
  412e6c:	ldur	x9, [x29, #-24]
  412e70:	stur	x9, [x29, #-32]
  412e74:	str	x8, [sp, #40]
  412e78:	ldur	x8, [x29, #-32]
  412e7c:	cmp	x8, #0x0
  412e80:	cset	w9, ne  // ne = any
  412e84:	mov	w10, #0x1                   	// #1
  412e88:	eor	w9, w9, #0x1
  412e8c:	eor	w9, w9, w10
  412e90:	eor	w9, w9, w10
  412e94:	and	w9, w9, #0x1
  412e98:	mov	w0, w9
  412e9c:	sxtw	x8, w0
  412ea0:	cbz	x8, 412ec4 <on_event_timeout_warning+0x7c>
  412ea4:	mov	w0, #0x1                   	// #1
  412ea8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412eac:	add	x1, x1, #0xbb0
  412eb0:	ldr	x2, [sp, #40]
  412eb4:	mov	w3, #0xf1                  	// #241
  412eb8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412ebc:	add	x4, x4, #0xcb0
  412ec0:	bl	40a540 <log_assert_failed_realm@plt>
  412ec4:	ldur	x8, [x29, #-32]
  412ec8:	ldr	x8, [x8, #8]
  412ecc:	cmp	x8, #0x0
  412ed0:	cset	w9, ne  // ne = any
  412ed4:	mov	w10, #0x1                   	// #1
  412ed8:	eor	w9, w9, #0x1
  412edc:	eor	w9, w9, w10
  412ee0:	eor	w9, w9, w10
  412ee4:	and	w9, w9, #0x1
  412ee8:	mov	w0, w9
  412eec:	sxtw	x8, w0
  412ef0:	cbz	x8, 412f14 <on_event_timeout_warning+0xcc>
  412ef4:	mov	w0, #0x1                   	// #1
  412ef8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  412efc:	add	x1, x1, #0xcf2
  412f00:	ldr	x2, [sp, #40]
  412f04:	mov	w3, #0xf2                  	// #242
  412f08:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412f0c:	add	x4, x4, #0xcb0
  412f10:	bl	40a540 <log_assert_failed_realm@plt>
  412f14:	mov	x8, xzr
  412f18:	stur	x8, [x29, #-40]
  412f1c:	ldur	x8, [x29, #-32]
  412f20:	ldr	x8, [x8, #24]
  412f24:	stur	x8, [x29, #-48]
  412f28:	mov	w9, #0x4                   	// #4
  412f2c:	stur	w9, [x29, #-52]
  412f30:	str	wzr, [sp, #56]
  412f34:	ldur	x8, [x29, #-48]
  412f38:	cbz	x8, 412f78 <on_event_timeout_warning+0x130>
  412f3c:	mov	w0, #0x1                   	// #1
  412f40:	bl	40a3f0 <log_get_max_level_realm@plt>
  412f44:	ldur	w8, [x29, #-52]
  412f48:	cmp	w0, w8
  412f4c:	cset	w8, ge  // ge = tcont
  412f50:	mov	w9, #0x1                   	// #1
  412f54:	eor	w8, w8, #0x1
  412f58:	eor	w8, w8, w9
  412f5c:	and	w8, w8, #0x1
  412f60:	mov	w1, w8
  412f64:	sxtw	x10, w1
  412f68:	cbz	x10, 412f78 <on_event_timeout_warning+0x130>
  412f6c:	ldur	x0, [x29, #-48]
  412f70:	sub	x1, x29, #0x28
  412f74:	bl	40a860 <sd_device_get_sysname@plt>
  412f78:	ldur	w0, [x29, #-52]
  412f7c:	ldr	w1, [sp, #56]
  412f80:	ldur	x8, [x29, #-40]
  412f84:	mov	x9, xzr
  412f88:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  412f8c:	add	x10, x10, #0xa46
  412f90:	cmp	x8, #0x0
  412f94:	csel	x5, x10, x9, ne  // ne = any
  412f98:	ldur	x6, [x29, #-40]
  412f9c:	ldur	x8, [x29, #-32]
  412fa0:	ldr	x8, [x8, #8]
  412fa4:	ldr	w11, [x8, #8]
  412fa8:	ldur	x8, [x29, #-32]
  412fac:	ldr	x8, [x8, #40]
  412fb0:	ldr	x2, [sp, #40]
  412fb4:	mov	w3, #0xf4                  	// #244
  412fb8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  412fbc:	add	x4, x4, #0xd00
  412fc0:	mov	x7, x9
  412fc4:	mov	x10, sp
  412fc8:	str	x9, [x10]
  412fcc:	mov	x9, sp
  412fd0:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  412fd4:	add	x10, x10, #0xd19
  412fd8:	str	x10, [x9, #8]
  412fdc:	mov	x9, sp
  412fe0:	str	w11, [x9, #16]
  412fe4:	mov	x9, sp
  412fe8:	str	x8, [x9, #24]
  412fec:	bl	40a870 <log_object_internal@plt>
  412ff0:	str	w0, [sp, #52]
  412ff4:	mov	w0, #0x1                   	// #1
  412ff8:	ldp	x29, x30, [sp, #112]
  412ffc:	add	sp, sp, #0x80
  413000:	ret

0000000000413004 <on_event_timeout>:
  413004:	sub	sp, sp, #0x80
  413008:	stp	x29, x30, [sp, #112]
  41300c:	add	x29, sp, #0x70
  413010:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  413014:	add	x8, x8, #0xae0
  413018:	add	x8, x8, #0x3
  41301c:	stur	x0, [x29, #-8]
  413020:	stur	x1, [x29, #-16]
  413024:	stur	x2, [x29, #-24]
  413028:	ldur	x9, [x29, #-24]
  41302c:	stur	x9, [x29, #-32]
  413030:	str	x8, [sp, #40]
  413034:	ldur	x8, [x29, #-32]
  413038:	cmp	x8, #0x0
  41303c:	cset	w9, ne  // ne = any
  413040:	mov	w10, #0x1                   	// #1
  413044:	eor	w9, w9, #0x1
  413048:	eor	w9, w9, w10
  41304c:	eor	w9, w9, w10
  413050:	and	w9, w9, #0x1
  413054:	mov	w0, w9
  413058:	sxtw	x8, w0
  41305c:	cbz	x8, 413080 <on_event_timeout+0x7c>
  413060:	mov	w0, #0x1                   	// #1
  413064:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  413068:	add	x1, x1, #0xbb0
  41306c:	ldr	x2, [sp, #40]
  413070:	mov	w3, #0xe3                  	// #227
  413074:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  413078:	add	x4, x4, #0xd51
  41307c:	bl	40a540 <log_assert_failed_realm@plt>
  413080:	ldur	x8, [x29, #-32]
  413084:	ldr	x8, [x8, #8]
  413088:	cmp	x8, #0x0
  41308c:	cset	w9, ne  // ne = any
  413090:	mov	w10, #0x1                   	// #1
  413094:	eor	w9, w9, #0x1
  413098:	eor	w9, w9, w10
  41309c:	eor	w9, w9, w10
  4130a0:	and	w9, w9, #0x1
  4130a4:	mov	w0, w9
  4130a8:	sxtw	x8, w0
  4130ac:	cbz	x8, 4130d0 <on_event_timeout+0xcc>
  4130b0:	mov	w0, #0x1                   	// #1
  4130b4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4130b8:	add	x1, x1, #0xcf2
  4130bc:	ldr	x2, [sp, #40]
  4130c0:	mov	w3, #0xe4                  	// #228
  4130c4:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  4130c8:	add	x4, x4, #0xd51
  4130cc:	bl	40a540 <log_assert_failed_realm@plt>
  4130d0:	ldur	x8, [x29, #-32]
  4130d4:	ldr	x8, [x8, #8]
  4130d8:	ldr	w0, [x8, #8]
  4130dc:	mov	w1, #0x9                   	// #9
  4130e0:	bl	40aae0 <kill_and_sigcont@plt>
  4130e4:	ldur	x8, [x29, #-32]
  4130e8:	ldr	x8, [x8, #8]
  4130ec:	mov	w9, #0x3                   	// #3
  4130f0:	str	w9, [x8, #24]
  4130f4:	mov	x8, xzr
  4130f8:	stur	x8, [x29, #-40]
  4130fc:	ldur	x8, [x29, #-32]
  413100:	ldr	x8, [x8, #24]
  413104:	stur	x8, [x29, #-48]
  413108:	stur	w9, [x29, #-52]
  41310c:	str	wzr, [sp, #56]
  413110:	ldur	x8, [x29, #-48]
  413114:	cbz	x8, 413154 <on_event_timeout+0x150>
  413118:	mov	w0, #0x1                   	// #1
  41311c:	bl	40a3f0 <log_get_max_level_realm@plt>
  413120:	ldur	w8, [x29, #-52]
  413124:	cmp	w0, w8
  413128:	cset	w8, ge  // ge = tcont
  41312c:	mov	w9, #0x1                   	// #1
  413130:	eor	w8, w8, #0x1
  413134:	eor	w8, w8, w9
  413138:	and	w8, w8, #0x1
  41313c:	mov	w1, w8
  413140:	sxtw	x10, w1
  413144:	cbz	x10, 413154 <on_event_timeout+0x150>
  413148:	ldur	x0, [x29, #-48]
  41314c:	sub	x1, x29, #0x28
  413150:	bl	40a860 <sd_device_get_sysname@plt>
  413154:	ldur	w0, [x29, #-52]
  413158:	ldr	w1, [sp, #56]
  41315c:	ldur	x8, [x29, #-40]
  413160:	mov	x9, xzr
  413164:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  413168:	add	x10, x10, #0xa46
  41316c:	cmp	x8, #0x0
  413170:	csel	x5, x10, x9, ne  // ne = any
  413174:	ldur	x6, [x29, #-40]
  413178:	ldur	x8, [x29, #-32]
  41317c:	ldr	x8, [x8, #8]
  413180:	ldr	w11, [x8, #8]
  413184:	ldur	x8, [x29, #-32]
  413188:	ldr	x8, [x8, #40]
  41318c:	ldr	x2, [sp, #40]
  413190:	mov	w3, #0xe9                  	// #233
  413194:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  413198:	add	x4, x4, #0xd8b
  41319c:	mov	x7, x9
  4131a0:	mov	x10, sp
  4131a4:	str	x9, [x10]
  4131a8:	mov	x9, sp
  4131ac:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4131b0:	add	x10, x10, #0xd9c
  4131b4:	str	x10, [x9, #8]
  4131b8:	mov	x9, sp
  4131bc:	str	w11, [x9, #16]
  4131c0:	mov	x9, sp
  4131c4:	str	x8, [x9, #24]
  4131c8:	bl	40a870 <log_object_internal@plt>
  4131cc:	str	w0, [sp, #52]
  4131d0:	mov	w0, #0x1                   	// #1
  4131d4:	ldp	x29, x30, [sp, #112]
  4131d8:	add	sp, sp, #0x80
  4131dc:	ret

00000000004131e0 <sd_device_monitor_unrefp>:
  4131e0:	sub	sp, sp, #0x20
  4131e4:	stp	x29, x30, [sp, #16]
  4131e8:	add	x29, sp, #0x10
  4131ec:	str	x0, [sp, #8]
  4131f0:	ldr	x8, [sp, #8]
  4131f4:	ldr	x8, [x8]
  4131f8:	cbz	x8, 413208 <sd_device_monitor_unrefp+0x28>
  4131fc:	ldr	x8, [sp, #8]
  413200:	ldr	x0, [x8]
  413204:	bl	40a7a0 <sd_device_monitor_unref@plt>
  413208:	ldp	x29, x30, [sp, #16]
  41320c:	add	sp, sp, #0x20
  413210:	ret

0000000000413214 <safe_fork>:
  413214:	sub	sp, sp, #0x30
  413218:	stp	x29, x30, [sp, #32]
  41321c:	add	x29, sp, #0x20
  413220:	mov	x8, xzr
  413224:	mov	x3, x8
  413228:	stur	x0, [x29, #-8]
  41322c:	stur	w1, [x29, #-12]
  413230:	str	x2, [sp, #8]
  413234:	ldur	x0, [x29, #-8]
  413238:	ldur	w9, [x29, #-12]
  41323c:	ldr	x4, [sp, #8]
  413240:	mov	x1, x3
  413244:	mov	x2, x8
  413248:	mov	w3, w9
  41324c:	bl	40aaf0 <safe_fork_full@plt>
  413250:	ldp	x29, x30, [sp, #32]
  413254:	add	sp, sp, #0x30
  413258:	ret

000000000041325c <worker_main>:
  41325c:	sub	sp, sp, #0xe0
  413260:	stp	x29, x30, [sp, #208]
  413264:	add	x29, sp, #0xd0
  413268:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  41326c:	add	x8, x8, #0xae0
  413270:	add	x8, x8, #0x3
  413274:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  413278:	add	x9, x9, #0xf27
  41327c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  413280:	add	x10, x10, #0xe9c
  413284:	stur	x0, [x29, #-16]
  413288:	stur	x1, [x29, #-24]
  41328c:	stur	x2, [x29, #-32]
  413290:	ldur	x11, [x29, #-32]
  413294:	stur	x11, [x29, #-40]
  413298:	ldur	x11, [x29, #-16]
  41329c:	stur	x11, [x29, #-48]
  4132a0:	str	x8, [sp, #48]
  4132a4:	str	x9, [sp, #40]
  4132a8:	str	x10, [sp, #32]
  4132ac:	ldur	x8, [x29, #-48]
  4132b0:	cmp	x8, #0x0
  4132b4:	cset	w9, ne  // ne = any
  4132b8:	mov	w10, #0x1                   	// #1
  4132bc:	eor	w9, w9, #0x1
  4132c0:	eor	w9, w9, w10
  4132c4:	eor	w9, w9, w10
  4132c8:	and	w9, w9, #0x1
  4132cc:	mov	w0, w9
  4132d0:	sxtw	x8, w0
  4132d4:	cbz	x8, 4132f4 <worker_main+0x98>
  4132d8:	mov	w0, #0x1                   	// #1
  4132dc:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  4132e0:	add	x1, x1, #0xcb6
  4132e4:	ldr	x2, [sp, #48]
  4132e8:	mov	w3, #0x1d3                 	// #467
  4132ec:	ldr	x4, [sp, #32]
  4132f0:	bl	40a540 <log_assert_failed_realm@plt>
  4132f4:	ldur	x8, [x29, #-24]
  4132f8:	cmp	x8, #0x0
  4132fc:	cset	w9, ne  // ne = any
  413300:	mov	w10, #0x1                   	// #1
  413304:	eor	w9, w9, #0x1
  413308:	eor	w9, w9, w10
  41330c:	eor	w9, w9, w10
  413310:	and	w9, w9, #0x1
  413314:	mov	w0, w9
  413318:	sxtw	x8, w0
  41331c:	cbz	x8, 41333c <worker_main+0xe0>
  413320:	mov	w0, #0x1                   	// #1
  413324:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  413328:	add	x1, x1, #0xed9
  41332c:	ldr	x2, [sp, #48]
  413330:	mov	w3, #0x1d4                 	// #468
  413334:	ldr	x4, [sp, #32]
  413338:	bl	40a540 <log_assert_failed_realm@plt>
  41333c:	ldur	x8, [x29, #-40]
  413340:	cmp	x8, #0x0
  413344:	cset	w9, ne  // ne = any
  413348:	mov	w10, #0x1                   	// #1
  41334c:	eor	w9, w9, #0x1
  413350:	eor	w9, w9, w10
  413354:	eor	w9, w9, w10
  413358:	and	w9, w9, #0x1
  41335c:	mov	w0, w9
  413360:	sxtw	x8, w0
  413364:	cbz	x8, 413384 <worker_main+0x128>
  413368:	mov	w0, #0x1                   	// #1
  41336c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  413370:	add	x1, x1, #0xee1
  413374:	ldr	x2, [sp, #48]
  413378:	mov	w3, #0x1d5                 	// #469
  41337c:	ldr	x4, [sp, #32]
  413380:	bl	40a540 <log_assert_failed_realm@plt>
  413384:	adrp	x0, 464000 <on_inotify.__assert_in_set+0x540>
  413388:	add	x0, x0, #0xee5
  41338c:	bl	40ab00 <unsetenv@plt>
  413390:	mov	w8, wzr
  413394:	mov	w0, w8
  413398:	mov	x9, xzr
  41339c:	mov	x1, x9
  4133a0:	mov	w2, #0xf                   	// #15
  4133a4:	mov	w3, #0xffffffff            	// #-1
  4133a8:	bl	40a670 <sigprocmask_many@plt>
  4133ac:	cmp	w0, #0x0
  4133b0:	cset	w8, ge  // ge = tcont
  4133b4:	mov	w10, #0x1                   	// #1
  4133b8:	eor	w8, w8, #0x1
  4133bc:	eor	w8, w8, w10
  4133c0:	eor	w8, w8, w10
  4133c4:	and	w8, w8, #0x1
  4133c8:	mov	w1, w8
  4133cc:	sxtw	x9, w1
  4133d0:	cbz	x9, 4133f0 <worker_main+0x194>
  4133d4:	mov	w0, #0x1                   	// #1
  4133d8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4133dc:	add	x1, x1, #0xef3
  4133e0:	ldr	x2, [sp, #48]
  4133e4:	mov	w3, #0x1d9                 	// #473
  4133e8:	ldr	x4, [sp, #32]
  4133ec:	bl	40a540 <log_assert_failed_realm@plt>
  4133f0:	mov	w8, wzr
  4133f4:	mov	w0, w8
  4133f8:	bl	40a520 <set_oom_score_adjust@plt>
  4133fc:	stur	w0, [x29, #-52]
  413400:	ldur	w8, [x29, #-52]
  413404:	cmp	w8, #0x0
  413408:	cset	w8, ge  // ge = tcont
  41340c:	tbnz	w8, #0, 41348c <worker_main+0x230>
  413410:	mov	w8, #0x7                   	// #7
  413414:	stur	w8, [x29, #-56]
  413418:	ldur	w8, [x29, #-52]
  41341c:	stur	w8, [x29, #-60]
  413420:	mov	w8, #0x1                   	// #1
  413424:	stur	w8, [x29, #-64]
  413428:	ldur	w0, [x29, #-64]
  41342c:	bl	40a3f0 <log_get_max_level_realm@plt>
  413430:	ldur	w8, [x29, #-56]
  413434:	and	w8, w8, #0x7
  413438:	cmp	w0, w8
  41343c:	b.lt	413470 <worker_main+0x214>  // b.tstop
  413440:	ldur	w8, [x29, #-64]
  413444:	ldur	w9, [x29, #-56]
  413448:	orr	w0, w9, w8, lsl #10
  41344c:	ldur	w1, [x29, #-60]
  413450:	ldr	x2, [sp, #48]
  413454:	mov	w3, #0x1de                 	// #478
  413458:	ldr	x4, [sp, #40]
  41345c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  413460:	add	x5, x5, #0xf33
  413464:	bl	40a400 <log_internal_realm@plt>
  413468:	str	w0, [sp, #28]
  41346c:	b	413484 <worker_main+0x228>
  413470:	ldur	w0, [x29, #-60]
  413474:	bl	40a410 <abs@plt>
  413478:	mov	w8, wzr
  41347c:	subs	w8, w8, w0, uxtb
  413480:	str	w8, [sp, #28]
  413484:	ldr	w8, [sp, #28]
  413488:	stur	w8, [x29, #-68]
  41348c:	ldur	x0, [x29, #-48]
  413490:	bl	40ee84 <manager_clear_for_worker>
  413494:	ldur	x0, [x29, #-48]
  413498:	bl	40ab10 <sd_event_new@plt>
  41349c:	stur	w0, [x29, #-52]
  4134a0:	ldur	w8, [x29, #-52]
  4134a4:	cmp	w8, #0x0
  4134a8:	cset	w8, ge  // ge = tcont
  4134ac:	tbnz	w8, #0, 413540 <worker_main+0x2e4>
  4134b0:	mov	w8, #0x3                   	// #3
  4134b4:	stur	w8, [x29, #-72]
  4134b8:	ldur	w8, [x29, #-52]
  4134bc:	stur	w8, [x29, #-76]
  4134c0:	mov	w8, #0x1                   	// #1
  4134c4:	stur	w8, [x29, #-80]
  4134c8:	ldur	w0, [x29, #-80]
  4134cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  4134d0:	ldur	w8, [x29, #-72]
  4134d4:	and	w8, w8, #0x7
  4134d8:	cmp	w0, w8
  4134dc:	b.lt	413510 <worker_main+0x2b4>  // b.tstop
  4134e0:	ldur	w8, [x29, #-80]
  4134e4:	ldur	w9, [x29, #-72]
  4134e8:	orr	w0, w9, w8, lsl #10
  4134ec:	ldur	w1, [x29, #-76]
  4134f0:	ldr	x2, [sp, #48]
  4134f4:	mov	w3, #0x1e5                 	// #485
  4134f8:	ldr	x4, [sp, #40]
  4134fc:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  413500:	add	x5, x5, #0x4d9
  413504:	bl	40a400 <log_internal_realm@plt>
  413508:	str	w0, [sp, #24]
  41350c:	b	413524 <worker_main+0x2c8>
  413510:	ldur	w0, [x29, #-76]
  413514:	bl	40a410 <abs@plt>
  413518:	mov	w8, wzr
  41351c:	subs	w8, w8, w0, uxtb
  413520:	str	w8, [sp, #24]
  413524:	ldr	w8, [sp, #24]
  413528:	stur	w8, [x29, #-84]
  41352c:	ldur	w8, [x29, #-84]
  413530:	stur	w8, [x29, #-4]
  413534:	mov	w8, #0x1                   	// #1
  413538:	stur	w8, [x29, #-88]
  41353c:	b	413858 <worker_main+0x5fc>
  413540:	ldur	x8, [x29, #-48]
  413544:	ldr	x0, [x8]
  413548:	mov	x8, xzr
  41354c:	mov	x1, x8
  413550:	mov	w2, #0xf                   	// #15
  413554:	mov	x3, x8
  413558:	mov	x4, x8
  41355c:	bl	40a690 <sd_event_add_signal@plt>
  413560:	stur	w0, [x29, #-52]
  413564:	ldur	w9, [x29, #-52]
  413568:	cmp	w9, #0x0
  41356c:	cset	w9, ge  // ge = tcont
  413570:	tbnz	w9, #0, 413604 <worker_main+0x3a8>
  413574:	mov	w8, #0x3                   	// #3
  413578:	stur	w8, [x29, #-92]
  41357c:	ldur	w8, [x29, #-52]
  413580:	stur	w8, [x29, #-96]
  413584:	mov	w8, #0x1                   	// #1
  413588:	stur	w8, [x29, #-100]
  41358c:	ldur	w0, [x29, #-100]
  413590:	bl	40a3f0 <log_get_max_level_realm@plt>
  413594:	ldur	w8, [x29, #-92]
  413598:	and	w8, w8, #0x7
  41359c:	cmp	w0, w8
  4135a0:	b.lt	4135d4 <worker_main+0x378>  // b.tstop
  4135a4:	ldur	w8, [x29, #-100]
  4135a8:	ldur	w9, [x29, #-92]
  4135ac:	orr	w0, w9, w8, lsl #10
  4135b0:	ldur	w1, [x29, #-96]
  4135b4:	ldr	x2, [sp, #48]
  4135b8:	mov	w3, #0x1e9                 	// #489
  4135bc:	ldr	x4, [sp, #40]
  4135c0:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  4135c4:	add	x5, x5, #0xf5b
  4135c8:	bl	40a400 <log_internal_realm@plt>
  4135cc:	str	w0, [sp, #20]
  4135d0:	b	4135e8 <worker_main+0x38c>
  4135d4:	ldur	w0, [x29, #-96]
  4135d8:	bl	40a410 <abs@plt>
  4135dc:	mov	w8, wzr
  4135e0:	subs	w8, w8, w0, uxtb
  4135e4:	str	w8, [sp, #20]
  4135e8:	ldr	w8, [sp, #20]
  4135ec:	str	w8, [sp, #104]
  4135f0:	ldr	w8, [sp, #104]
  4135f4:	stur	w8, [x29, #-4]
  4135f8:	mov	w8, #0x1                   	// #1
  4135fc:	stur	w8, [x29, #-88]
  413600:	b	413858 <worker_main+0x5fc>
  413604:	ldur	x0, [x29, #-24]
  413608:	ldur	x8, [x29, #-48]
  41360c:	ldr	x1, [x8]
  413610:	bl	40a6d0 <sd_device_monitor_attach_event@plt>
  413614:	stur	w0, [x29, #-52]
  413618:	ldur	w9, [x29, #-52]
  41361c:	cmp	w9, #0x0
  413620:	cset	w9, ge  // ge = tcont
  413624:	tbnz	w9, #0, 4136b8 <worker_main+0x45c>
  413628:	mov	w8, #0x3                   	// #3
  41362c:	str	w8, [sp, #100]
  413630:	ldur	w8, [x29, #-52]
  413634:	str	w8, [sp, #96]
  413638:	mov	w8, #0x1                   	// #1
  41363c:	str	w8, [sp, #92]
  413640:	ldr	w0, [sp, #92]
  413644:	bl	40a3f0 <log_get_max_level_realm@plt>
  413648:	ldr	w8, [sp, #100]
  41364c:	and	w8, w8, #0x7
  413650:	cmp	w0, w8
  413654:	b.lt	413688 <worker_main+0x42c>  // b.tstop
  413658:	ldr	w8, [sp, #92]
  41365c:	ldr	w9, [sp, #100]
  413660:	orr	w0, w9, w8, lsl #10
  413664:	ldr	w1, [sp, #96]
  413668:	ldr	x2, [sp, #48]
  41366c:	mov	w3, #0x1ed                 	// #493
  413670:	ldr	x4, [sp, #40]
  413674:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  413678:	add	x5, x5, #0xf7b
  41367c:	bl	40a400 <log_internal_realm@plt>
  413680:	str	w0, [sp, #16]
  413684:	b	41369c <worker_main+0x440>
  413688:	ldr	w0, [sp, #96]
  41368c:	bl	40a410 <abs@plt>
  413690:	mov	w8, wzr
  413694:	subs	w8, w8, w0, uxtb
  413698:	str	w8, [sp, #16]
  41369c:	ldr	w8, [sp, #16]
  4136a0:	str	w8, [sp, #88]
  4136a4:	ldr	w8, [sp, #88]
  4136a8:	stur	w8, [x29, #-4]
  4136ac:	mov	w8, #0x1                   	// #1
  4136b0:	stur	w8, [x29, #-88]
  4136b4:	b	413858 <worker_main+0x5fc>
  4136b8:	ldur	x0, [x29, #-24]
  4136bc:	ldur	x2, [x29, #-48]
  4136c0:	adrp	x1, 413000 <on_event_timeout_warning+0x1b8>
  4136c4:	add	x1, x1, #0xb70
  4136c8:	bl	40a6e0 <sd_device_monitor_start@plt>
  4136cc:	stur	w0, [x29, #-52]
  4136d0:	ldur	w8, [x29, #-52]
  4136d4:	cmp	w8, #0x0
  4136d8:	cset	w8, ge  // ge = tcont
  4136dc:	tbnz	w8, #0, 413770 <worker_main+0x514>
  4136e0:	mov	w8, #0x3                   	// #3
  4136e4:	str	w8, [sp, #84]
  4136e8:	ldur	w8, [x29, #-52]
  4136ec:	str	w8, [sp, #80]
  4136f0:	mov	w8, #0x1                   	// #1
  4136f4:	str	w8, [sp, #76]
  4136f8:	ldr	w0, [sp, #76]
  4136fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  413700:	ldr	w8, [sp, #84]
  413704:	and	w8, w8, #0x7
  413708:	cmp	w0, w8
  41370c:	b.lt	413740 <worker_main+0x4e4>  // b.tstop
  413710:	ldr	w8, [sp, #76]
  413714:	ldr	w9, [sp, #84]
  413718:	orr	w0, w9, w8, lsl #10
  41371c:	ldr	w1, [sp, #80]
  413720:	ldr	x2, [sp, #48]
  413724:	mov	w3, #0x1f1                 	// #497
  413728:	ldr	x4, [sp, #40]
  41372c:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  413730:	add	x5, x5, #0x5f7
  413734:	bl	40a400 <log_internal_realm@plt>
  413738:	str	w0, [sp, #12]
  41373c:	b	413754 <worker_main+0x4f8>
  413740:	ldr	w0, [sp, #80]
  413744:	bl	40a410 <abs@plt>
  413748:	mov	w8, wzr
  41374c:	subs	w8, w8, w0, uxtb
  413750:	str	w8, [sp, #12]
  413754:	ldr	w8, [sp, #12]
  413758:	str	w8, [sp, #72]
  41375c:	ldr	w8, [sp, #72]
  413760:	stur	w8, [x29, #-4]
  413764:	mov	w8, #0x1                   	// #1
  413768:	stur	w8, [x29, #-88]
  41376c:	b	413858 <worker_main+0x5fc>
  413770:	ldur	x0, [x29, #-24]
  413774:	bl	40a6f0 <sd_device_monitor_get_event_source@plt>
  413778:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41377c:	add	x1, x1, #0xfad
  413780:	bl	40a700 <sd_event_source_set_description@plt>
  413784:	ldur	x8, [x29, #-24]
  413788:	ldur	x1, [x29, #-40]
  41378c:	ldur	x2, [x29, #-48]
  413790:	mov	x0, x8
  413794:	bl	413b70 <worker_device_monitor_handler>
  413798:	ldur	x8, [x29, #-48]
  41379c:	ldr	x8, [x8]
  4137a0:	mov	x0, x8
  4137a4:	bl	40a730 <sd_event_loop@plt>
  4137a8:	stur	w0, [x29, #-52]
  4137ac:	ldur	w9, [x29, #-52]
  4137b0:	cmp	w9, #0x0
  4137b4:	cset	w9, ge  // ge = tcont
  4137b8:	tbnz	w9, #0, 41384c <worker_main+0x5f0>
  4137bc:	mov	w8, #0x3                   	// #3
  4137c0:	str	w8, [sp, #68]
  4137c4:	ldur	w8, [x29, #-52]
  4137c8:	str	w8, [sp, #64]
  4137cc:	mov	w8, #0x1                   	// #1
  4137d0:	str	w8, [sp, #60]
  4137d4:	ldr	w0, [sp, #60]
  4137d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4137dc:	ldr	w8, [sp, #68]
  4137e0:	and	w8, w8, #0x7
  4137e4:	cmp	w0, w8
  4137e8:	b.lt	41381c <worker_main+0x5c0>  // b.tstop
  4137ec:	ldr	w8, [sp, #60]
  4137f0:	ldr	w9, [sp, #68]
  4137f4:	orr	w0, w9, w8, lsl #10
  4137f8:	ldr	w1, [sp, #64]
  4137fc:	ldr	x2, [sp, #48]
  413800:	mov	w3, #0x1fa                 	// #506
  413804:	ldr	x4, [sp, #40]
  413808:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  41380c:	add	x5, x5, #0x79b
  413810:	bl	40a400 <log_internal_realm@plt>
  413814:	str	w0, [sp, #8]
  413818:	b	413830 <worker_main+0x5d4>
  41381c:	ldr	w0, [sp, #64]
  413820:	bl	40a410 <abs@plt>
  413824:	mov	w8, wzr
  413828:	subs	w8, w8, w0, uxtb
  41382c:	str	w8, [sp, #8]
  413830:	ldr	w8, [sp, #8]
  413834:	str	w8, [sp, #56]
  413838:	ldr	w8, [sp, #56]
  41383c:	stur	w8, [x29, #-4]
  413840:	mov	w8, #0x1                   	// #1
  413844:	stur	w8, [x29, #-88]
  413848:	b	413858 <worker_main+0x5fc>
  41384c:	stur	wzr, [x29, #-4]
  413850:	mov	w8, #0x1                   	// #1
  413854:	stur	w8, [x29, #-88]
  413858:	sub	x0, x29, #0x30
  41385c:	bl	40d03c <manager_freep>
  413860:	sub	x0, x29, #0x28
  413864:	bl	413b3c <sd_device_unrefp>
  413868:	ldur	w0, [x29, #-4]
  41386c:	ldp	x29, x30, [sp, #208]
  413870:	add	sp, sp, #0xe0
  413874:	ret

0000000000413878 <worker_new>:
  413878:	sub	sp, sp, #0xb0
  41387c:	stp	x29, x30, [sp, #160]
  413880:	add	x29, sp, #0xa0
  413884:	mov	x8, xzr
  413888:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  41388c:	add	x9, x9, #0xae0
  413890:	add	x9, x9, #0x3
  413894:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  413898:	add	x10, x10, #0x2d7
  41389c:	stur	x0, [x29, #-16]
  4138a0:	stur	x1, [x29, #-24]
  4138a4:	stur	x2, [x29, #-32]
  4138a8:	stur	w3, [x29, #-36]
  4138ac:	stur	x8, [x29, #-48]
  4138b0:	str	x9, [sp, #40]
  4138b4:	str	x10, [sp, #32]
  4138b8:	ldur	x8, [x29, #-16]
  4138bc:	cmp	x8, #0x0
  4138c0:	cset	w9, ne  // ne = any
  4138c4:	mov	w10, #0x1                   	// #1
  4138c8:	eor	w9, w9, #0x1
  4138cc:	eor	w9, w9, w10
  4138d0:	eor	w9, w9, w10
  4138d4:	and	w9, w9, #0x1
  4138d8:	mov	w0, w9
  4138dc:	sxtw	x8, w0
  4138e0:	cbz	x8, 413900 <worker_new+0x88>
  4138e4:	mov	w0, #0x1                   	// #1
  4138e8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4138ec:	add	x1, x1, #0x2ff
  4138f0:	ldr	x2, [sp, #40]
  4138f4:	mov	w3, #0xc1                  	// #193
  4138f8:	ldr	x4, [sp, #32]
  4138fc:	bl	40a540 <log_assert_failed_realm@plt>
  413900:	ldur	x8, [x29, #-24]
  413904:	cmp	x8, #0x0
  413908:	cset	w9, ne  // ne = any
  41390c:	mov	w10, #0x1                   	// #1
  413910:	eor	w9, w9, #0x1
  413914:	eor	w9, w9, w10
  413918:	eor	w9, w9, w10
  41391c:	and	w9, w9, #0x1
  413920:	mov	w0, w9
  413924:	sxtw	x8, w0
  413928:	cbz	x8, 413948 <worker_new+0xd0>
  41392c:	mov	w0, #0x1                   	// #1
  413930:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  413934:	add	x1, x1, #0xcb6
  413938:	ldr	x2, [sp, #40]
  41393c:	mov	w3, #0xc2                  	// #194
  413940:	ldr	x4, [sp, #32]
  413944:	bl	40a540 <log_assert_failed_realm@plt>
  413948:	ldur	x8, [x29, #-32]
  41394c:	cmp	x8, #0x0
  413950:	cset	w9, ne  // ne = any
  413954:	mov	w10, #0x1                   	// #1
  413958:	eor	w9, w9, #0x1
  41395c:	eor	w9, w9, w10
  413960:	eor	w9, w9, w10
  413964:	and	w9, w9, #0x1
  413968:	mov	w0, w9
  41396c:	sxtw	x8, w0
  413970:	cbz	x8, 413990 <worker_new+0x118>
  413974:	mov	w0, #0x1                   	// #1
  413978:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  41397c:	add	x1, x1, #0x31f
  413980:	ldr	x2, [sp, #40]
  413984:	mov	w3, #0xc3                  	// #195
  413988:	ldr	x4, [sp, #32]
  41398c:	bl	40a540 <log_assert_failed_realm@plt>
  413990:	ldur	w8, [x29, #-36]
  413994:	cmp	w8, #0x1
  413998:	cset	w8, gt
  41399c:	mov	w9, #0x1                   	// #1
  4139a0:	eor	w8, w8, #0x1
  4139a4:	eor	w8, w8, w9
  4139a8:	eor	w8, w8, w9
  4139ac:	and	w8, w8, #0x1
  4139b0:	mov	w0, w8
  4139b4:	sxtw	x10, w0
  4139b8:	cbz	x10, 4139d8 <worker_new+0x160>
  4139bc:	mov	w0, #0x1                   	// #1
  4139c0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4139c4:	add	x1, x1, #0x32e
  4139c8:	ldr	x2, [sp, #40]
  4139cc:	mov	w3, #0xc4                  	// #196
  4139d0:	ldr	x4, [sp, #32]
  4139d4:	bl	40a540 <log_assert_failed_realm@plt>
  4139d8:	ldur	x0, [x29, #-32]
  4139dc:	bl	40ab20 <device_monitor_disconnect@plt>
  4139e0:	mov	x8, #0x28                  	// #40
  4139e4:	mov	x0, x8
  4139e8:	mov	x1, #0x1                   	// #1
  4139ec:	bl	40f590 <malloc_multiply>
  4139f0:	stur	x0, [x29, #-48]
  4139f4:	ldur	x8, [x29, #-48]
  4139f8:	cbnz	x8, 413a10 <worker_new+0x198>
  4139fc:	mov	w8, #0xfffffff4            	// #-12
  413a00:	stur	w8, [x29, #-4]
  413a04:	mov	w8, #0x1                   	// #1
  413a08:	stur	w8, [x29, #-56]
  413a0c:	b	413b24 <worker_new+0x2ac>
  413a10:	ldur	x0, [x29, #-48]
  413a14:	ldur	x8, [x29, #-24]
  413a18:	add	x9, sp, #0x40
  413a1c:	str	x8, [sp, #64]
  413a20:	ldur	w10, [x29, #-36]
  413a24:	str	w10, [sp, #72]
  413a28:	ldur	x8, [x29, #-32]
  413a2c:	str	x0, [sp, #24]
  413a30:	mov	x0, x8
  413a34:	str	x9, [sp, #16]
  413a38:	bl	40ab30 <sd_device_monitor_ref@plt>
  413a3c:	ldr	x8, [sp, #16]
  413a40:	str	x0, [x8, #16]
  413a44:	str	wzr, [sp, #88]
  413a48:	mov	x9, xzr
  413a4c:	str	x9, [x8, #32]
  413a50:	ldr	x0, [sp, #24]
  413a54:	mov	x1, x8
  413a58:	mov	x2, #0x28                  	// #40
  413a5c:	bl	40a600 <memcpy@plt>
  413a60:	ldur	x8, [x29, #-24]
  413a64:	add	x0, x8, #0x8
  413a68:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  413a6c:	add	x1, x1, #0xaa0
  413a70:	bl	40a8f0 <internal_hashmap_ensure_allocated@plt>
  413a74:	stur	w0, [x29, #-52]
  413a78:	ldur	w10, [x29, #-52]
  413a7c:	cmp	w10, #0x0
  413a80:	cset	w10, ge  // ge = tcont
  413a84:	tbnz	w10, #0, 413a9c <worker_new+0x224>
  413a88:	ldur	w8, [x29, #-52]
  413a8c:	stur	w8, [x29, #-4]
  413a90:	mov	w8, #0x1                   	// #1
  413a94:	stur	w8, [x29, #-56]
  413a98:	b	413b24 <worker_new+0x2ac>
  413a9c:	ldur	x8, [x29, #-24]
  413aa0:	ldr	x0, [x8, #8]
  413aa4:	ldur	w9, [x29, #-36]
  413aa8:	str	x0, [sp, #8]
  413aac:	mov	w0, w9
  413ab0:	bl	411a20 <PID_TO_PTR>
  413ab4:	ldur	x2, [x29, #-48]
  413ab8:	ldr	x8, [sp, #8]
  413abc:	str	x0, [sp]
  413ac0:	mov	x0, x8
  413ac4:	ldr	x1, [sp]
  413ac8:	bl	40a900 <hashmap_put@plt>
  413acc:	stur	w0, [x29, #-52]
  413ad0:	ldur	w9, [x29, #-52]
  413ad4:	cmp	w9, #0x0
  413ad8:	cset	w9, ge  // ge = tcont
  413adc:	tbnz	w9, #0, 413af4 <worker_new+0x27c>
  413ae0:	ldur	w8, [x29, #-52]
  413ae4:	stur	w8, [x29, #-4]
  413ae8:	mov	w8, #0x1                   	// #1
  413aec:	stur	w8, [x29, #-56]
  413af0:	b	413b24 <worker_new+0x2ac>
  413af4:	ldur	x8, [x29, #-48]
  413af8:	str	x8, [sp, #56]
  413afc:	mov	x8, xzr
  413b00:	stur	x8, [x29, #-48]
  413b04:	ldr	x8, [sp, #56]
  413b08:	str	x8, [sp, #48]
  413b0c:	ldr	x8, [sp, #48]
  413b10:	ldur	x9, [x29, #-16]
  413b14:	str	x8, [x9]
  413b18:	stur	wzr, [x29, #-4]
  413b1c:	mov	w10, #0x1                   	// #1
  413b20:	stur	w10, [x29, #-56]
  413b24:	sub	x0, x29, #0x30
  413b28:	bl	415054 <worker_freep>
  413b2c:	ldur	w0, [x29, #-4]
  413b30:	ldp	x29, x30, [sp, #160]
  413b34:	add	sp, sp, #0xb0
  413b38:	ret

0000000000413b3c <sd_device_unrefp>:
  413b3c:	sub	sp, sp, #0x20
  413b40:	stp	x29, x30, [sp, #16]
  413b44:	add	x29, sp, #0x10
  413b48:	str	x0, [sp, #8]
  413b4c:	ldr	x8, [sp, #8]
  413b50:	ldr	x8, [x8]
  413b54:	cbz	x8, 413b64 <sd_device_unrefp+0x28>
  413b58:	ldr	x8, [sp, #8]
  413b5c:	ldr	x0, [x8]
  413b60:	bl	40a7c0 <sd_device_unref@plt>
  413b64:	ldp	x29, x30, [sp, #16]
  413b68:	add	sp, sp, #0x20
  413b6c:	ret

0000000000413b70 <worker_device_monitor_handler>:
  413b70:	sub	sp, sp, #0xc0
  413b74:	stp	x29, x30, [sp, #176]
  413b78:	add	x29, sp, #0xb0
  413b7c:	adrp	x8, 464000 <on_inotify.__assert_in_set+0x540>
  413b80:	add	x8, x8, #0xa46
  413b84:	adrp	x9, 463000 <dhcp_lease_set_client_id+0xc4>
  413b88:	add	x9, x9, #0xae0
  413b8c:	add	x9, x9, #0x3
  413b90:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  413b94:	add	x10, x10, #0xf
  413b98:	stur	x0, [x29, #-8]
  413b9c:	stur	x1, [x29, #-16]
  413ba0:	stur	x2, [x29, #-24]
  413ba4:	ldur	x11, [x29, #-24]
  413ba8:	stur	x11, [x29, #-32]
  413bac:	str	x8, [sp, #32]
  413bb0:	str	x9, [sp, #24]
  413bb4:	str	x10, [sp, #16]
  413bb8:	ldur	x8, [x29, #-16]
  413bbc:	cmp	x8, #0x0
  413bc0:	cset	w9, ne  // ne = any
  413bc4:	mov	w10, #0x1                   	// #1
  413bc8:	eor	w9, w9, #0x1
  413bcc:	eor	w9, w9, w10
  413bd0:	eor	w9, w9, w10
  413bd4:	and	w9, w9, #0x1
  413bd8:	mov	w0, w9
  413bdc:	sxtw	x8, w0
  413be0:	cbz	x8, 413c04 <worker_device_monitor_handler+0x94>
  413be4:	mov	w0, #0x1                   	// #1
  413be8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  413bec:	add	x1, x1, #0xee1
  413bf0:	ldr	x2, [sp, #24]
  413bf4:	mov	w3, #0x1ba                 	// #442
  413bf8:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  413bfc:	add	x4, x4, #0xfc3
  413c00:	bl	40a540 <log_assert_failed_realm@plt>
  413c04:	ldur	x8, [x29, #-32]
  413c08:	cmp	x8, #0x0
  413c0c:	cset	w9, ne  // ne = any
  413c10:	mov	w10, #0x1                   	// #1
  413c14:	eor	w9, w9, #0x1
  413c18:	eor	w9, w9, w10
  413c1c:	eor	w9, w9, w10
  413c20:	and	w9, w9, #0x1
  413c24:	mov	w0, w9
  413c28:	sxtw	x8, w0
  413c2c:	cbz	x8, 413c50 <worker_device_monitor_handler+0xe0>
  413c30:	mov	w0, #0x1                   	// #1
  413c34:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  413c38:	add	x1, x1, #0xcb6
  413c3c:	ldr	x2, [sp, #24]
  413c40:	mov	w3, #0x1bb                 	// #443
  413c44:	adrp	x4, 464000 <on_inotify.__assert_in_set+0x540>
  413c48:	add	x4, x4, #0xfc3
  413c4c:	bl	40a540 <log_assert_failed_realm@plt>
  413c50:	ldur	x0, [x29, #-32]
  413c54:	ldur	x1, [x29, #-16]
  413c58:	bl	413ee4 <worker_process_device>
  413c5c:	stur	w0, [x29, #-36]
  413c60:	ldur	w8, [x29, #-36]
  413c64:	cmp	w8, #0x0
  413c68:	cset	w8, ge  // ge = tcont
  413c6c:	tbnz	w8, #0, 413d24 <worker_device_monitor_handler+0x1b4>
  413c70:	mov	x8, xzr
  413c74:	stur	x8, [x29, #-48]
  413c78:	ldur	x8, [x29, #-16]
  413c7c:	stur	x8, [x29, #-56]
  413c80:	mov	w9, #0x4                   	// #4
  413c84:	stur	w9, [x29, #-60]
  413c88:	ldur	w9, [x29, #-36]
  413c8c:	stur	w9, [x29, #-64]
  413c90:	ldur	x8, [x29, #-56]
  413c94:	cbz	x8, 413cd4 <worker_device_monitor_handler+0x164>
  413c98:	mov	w0, #0x1                   	// #1
  413c9c:	bl	40a3f0 <log_get_max_level_realm@plt>
  413ca0:	ldur	w8, [x29, #-60]
  413ca4:	cmp	w0, w8
  413ca8:	cset	w8, ge  // ge = tcont
  413cac:	mov	w9, #0x1                   	// #1
  413cb0:	eor	w8, w8, #0x1
  413cb4:	eor	w8, w8, w9
  413cb8:	and	w8, w8, #0x1
  413cbc:	mov	w1, w8
  413cc0:	sxtw	x10, w1
  413cc4:	cbz	x10, 413cd4 <worker_device_monitor_handler+0x164>
  413cc8:	ldur	x0, [x29, #-56]
  413ccc:	sub	x1, x29, #0x30
  413cd0:	bl	40a860 <sd_device_get_sysname@plt>
  413cd4:	ldur	w0, [x29, #-60]
  413cd8:	ldur	w1, [x29, #-64]
  413cdc:	ldur	x8, [x29, #-48]
  413ce0:	mov	x9, xzr
  413ce4:	cmp	x8, #0x0
  413ce8:	ldr	x8, [sp, #32]
  413cec:	csel	x5, x8, x9, ne  // ne = any
  413cf0:	ldur	x6, [x29, #-48]
  413cf4:	ldr	x2, [sp, #24]
  413cf8:	mov	w3, #0x1bf                 	// #447
  413cfc:	ldr	x4, [sp, #16]
  413d00:	mov	x7, x9
  413d04:	mov	x10, sp
  413d08:	str	x9, [x10]
  413d0c:	mov	x9, sp
  413d10:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  413d14:	add	x10, x10, #0x2d
  413d18:	str	x10, [x9, #8]
  413d1c:	bl	40a870 <log_object_internal@plt>
  413d20:	stur	w0, [x29, #-68]
  413d24:	ldur	x0, [x29, #-8]
  413d28:	ldur	x2, [x29, #-16]
  413d2c:	mov	x8, xzr
  413d30:	mov	x1, x8
  413d34:	bl	40a8a0 <device_monitor_send_device@plt>
  413d38:	stur	w0, [x29, #-36]
  413d3c:	ldur	w9, [x29, #-36]
  413d40:	cmp	w9, #0x0
  413d44:	cset	w9, ge  // ge = tcont
  413d48:	tbnz	w9, #0, 413e00 <worker_device_monitor_handler+0x290>
  413d4c:	mov	x8, xzr
  413d50:	stur	x8, [x29, #-80]
  413d54:	ldur	x8, [x29, #-16]
  413d58:	str	x8, [sp, #88]
  413d5c:	mov	w9, #0x4                   	// #4
  413d60:	str	w9, [sp, #84]
  413d64:	ldur	w9, [x29, #-36]
  413d68:	str	w9, [sp, #80]
  413d6c:	ldr	x8, [sp, #88]
  413d70:	cbz	x8, 413db0 <worker_device_monitor_handler+0x240>
  413d74:	mov	w0, #0x1                   	// #1
  413d78:	bl	40a3f0 <log_get_max_level_realm@plt>
  413d7c:	ldr	w8, [sp, #84]
  413d80:	cmp	w0, w8
  413d84:	cset	w8, ge  // ge = tcont
  413d88:	mov	w9, #0x1                   	// #1
  413d8c:	eor	w8, w8, #0x1
  413d90:	eor	w8, w8, w9
  413d94:	and	w8, w8, #0x1
  413d98:	mov	w1, w8
  413d9c:	sxtw	x10, w1
  413da0:	cbz	x10, 413db0 <worker_device_monitor_handler+0x240>
  413da4:	ldr	x0, [sp, #88]
  413da8:	sub	x1, x29, #0x50
  413dac:	bl	40a860 <sd_device_get_sysname@plt>
  413db0:	ldr	w0, [sp, #84]
  413db4:	ldr	w1, [sp, #80]
  413db8:	ldur	x8, [x29, #-80]
  413dbc:	mov	x9, xzr
  413dc0:	cmp	x8, #0x0
  413dc4:	ldr	x8, [sp, #32]
  413dc8:	csel	x5, x8, x9, ne  // ne = any
  413dcc:	ldur	x6, [x29, #-80]
  413dd0:	ldr	x2, [sp, #24]
  413dd4:	mov	w3, #0x1c4                 	// #452
  413dd8:	ldr	x4, [sp, #16]
  413ddc:	mov	x7, x9
  413de0:	mov	x10, sp
  413de4:	str	x9, [x10]
  413de8:	mov	x9, sp
  413dec:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  413df0:	add	x10, x10, #0x54
  413df4:	str	x10, [x9, #8]
  413df8:	bl	40a870 <log_object_internal@plt>
  413dfc:	str	w0, [sp, #76]
  413e00:	ldur	x8, [x29, #-32]
  413e04:	ldr	w0, [x8, #88]
  413e08:	bl	414648 <worker_send_message>
  413e0c:	stur	w0, [x29, #-36]
  413e10:	ldur	w9, [x29, #-36]
  413e14:	cmp	w9, #0x0
  413e18:	cset	w9, ge  // ge = tcont
  413e1c:	tbnz	w9, #0, 413ed4 <worker_device_monitor_handler+0x364>
  413e20:	mov	x8, xzr
  413e24:	str	x8, [sp, #64]
  413e28:	ldur	x8, [x29, #-16]
  413e2c:	str	x8, [sp, #56]
  413e30:	mov	w9, #0x4                   	// #4
  413e34:	str	w9, [sp, #52]
  413e38:	ldur	w9, [x29, #-36]
  413e3c:	str	w9, [sp, #48]
  413e40:	ldr	x8, [sp, #56]
  413e44:	cbz	x8, 413e84 <worker_device_monitor_handler+0x314>
  413e48:	mov	w0, #0x1                   	// #1
  413e4c:	bl	40a3f0 <log_get_max_level_realm@plt>
  413e50:	ldr	w8, [sp, #52]
  413e54:	cmp	w0, w8
  413e58:	cset	w8, ge  // ge = tcont
  413e5c:	mov	w9, #0x1                   	// #1
  413e60:	eor	w8, w8, #0x1
  413e64:	eor	w8, w8, w9
  413e68:	and	w8, w8, #0x1
  413e6c:	mov	w1, w8
  413e70:	sxtw	x10, w1
  413e74:	cbz	x10, 413e84 <worker_device_monitor_handler+0x314>
  413e78:	ldr	x0, [sp, #56]
  413e7c:	add	x1, sp, #0x40
  413e80:	bl	40a860 <sd_device_get_sysname@plt>
  413e84:	ldr	w0, [sp, #52]
  413e88:	ldr	w1, [sp, #48]
  413e8c:	ldr	x8, [sp, #64]
  413e90:	mov	x9, xzr
  413e94:	cmp	x8, #0x0
  413e98:	ldr	x8, [sp, #32]
  413e9c:	csel	x5, x8, x9, ne  // ne = any
  413ea0:	ldr	x6, [sp, #64]
  413ea4:	ldr	x2, [sp, #24]
  413ea8:	mov	w3, #0x1c9                 	// #457
  413eac:	ldr	x4, [sp, #16]
  413eb0:	mov	x7, x9
  413eb4:	mov	x10, sp
  413eb8:	str	x9, [x10]
  413ebc:	mov	x9, sp
  413ec0:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  413ec4:	add	x10, x10, #0x78
  413ec8:	str	x10, [x9, #8]
  413ecc:	bl	40a870 <log_object_internal@plt>
  413ed0:	str	w0, [sp, #44]
  413ed4:	mov	w0, #0x1                   	// #1
  413ed8:	ldp	x29, x30, [sp, #176]
  413edc:	add	sp, sp, #0xc0
  413ee0:	ret

0000000000413ee4 <worker_process_device>:
  413ee4:	sub	sp, sp, #0x1a0
  413ee8:	stp	x29, x30, [sp, #384]
  413eec:	str	x28, [sp, #400]
  413ef0:	add	x29, sp, #0x180
  413ef4:	sub	x8, x29, #0x48
  413ef8:	mov	x9, xzr
  413efc:	mov	w10, #0xffffffff            	// #-1
  413f00:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  413f04:	add	x11, x11, #0xa46
  413f08:	adrp	x12, 463000 <dhcp_lease_set_client_id+0xc4>
  413f0c:	add	x12, x12, #0xae0
  413f10:	add	x12, x12, #0x3
  413f14:	adrp	x13, 465000 <on_inotify.__assert_in_set+0x1540>
  413f18:	add	x13, x13, #0xdd
  413f1c:	str	x0, [x8, #56]
  413f20:	str	x1, [x8, #48]
  413f24:	str	x9, [x8, #40]
  413f28:	stur	w10, [x29, #-36]
  413f2c:	str	x8, [sp, #160]
  413f30:	str	x11, [sp, #152]
  413f34:	str	x12, [sp, #144]
  413f38:	str	x13, [sp, #136]
  413f3c:	ldr	x8, [sp, #160]
  413f40:	ldr	x9, [x8, #56]
  413f44:	cmp	x9, #0x0
  413f48:	cset	w10, ne  // ne = any
  413f4c:	mov	w11, #0x1                   	// #1
  413f50:	eor	w10, w10, #0x1
  413f54:	eor	w10, w10, w11
  413f58:	eor	w10, w10, w11
  413f5c:	and	w10, w10, #0x1
  413f60:	mov	w0, w10
  413f64:	sxtw	x9, w0
  413f68:	cbz	x9, 413f8c <worker_process_device+0xa8>
  413f6c:	mov	w0, #0x1                   	// #1
  413f70:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  413f74:	add	x1, x1, #0xcb6
  413f78:	ldr	x2, [sp, #144]
  413f7c:	mov	w3, #0x187                 	// #391
  413f80:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  413f84:	add	x4, x4, #0xab
  413f88:	bl	40a540 <log_assert_failed_realm@plt>
  413f8c:	ldr	x8, [sp, #160]
  413f90:	ldr	x9, [x8, #48]
  413f94:	cmp	x9, #0x0
  413f98:	cset	w10, ne  // ne = any
  413f9c:	mov	w11, #0x1                   	// #1
  413fa0:	eor	w10, w10, #0x1
  413fa4:	eor	w10, w10, w11
  413fa8:	eor	w10, w10, w11
  413fac:	and	w10, w10, #0x1
  413fb0:	mov	w0, w10
  413fb4:	sxtw	x9, w0
  413fb8:	cbz	x9, 413fdc <worker_process_device+0xf8>
  413fbc:	mov	w0, #0x1                   	// #1
  413fc0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  413fc4:	add	x1, x1, #0xee1
  413fc8:	ldr	x2, [sp, #144]
  413fcc:	mov	w3, #0x188                 	// #392
  413fd0:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  413fd4:	add	x4, x4, #0xab
  413fd8:	bl	40a540 <log_assert_failed_realm@plt>
  413fdc:	ldr	x8, [sp, #160]
  413fe0:	ldr	x0, [x8, #48]
  413fe4:	sub	x1, x29, #0x30
  413fe8:	bl	40ab40 <device_get_seqnum@plt>
  413fec:	stur	w0, [x29, #-52]
  413ff0:	ldur	w9, [x29, #-52]
  413ff4:	cmp	w9, #0x0
  413ff8:	cset	w9, ge  // ge = tcont
  413ffc:	tbnz	w9, #0, 4140d4 <worker_process_device+0x1f0>
  414000:	mov	x8, xzr
  414004:	ldr	x9, [sp, #160]
  414008:	str	x8, [x9, #8]
  41400c:	ldr	x8, [x9, #48]
  414010:	str	x8, [x9]
  414014:	mov	w10, #0x7                   	// #7
  414018:	stur	w10, [x29, #-76]
  41401c:	ldur	w10, [x29, #-52]
  414020:	stur	w10, [x29, #-80]
  414024:	ldr	x8, [x9]
  414028:	cbz	x8, 41406c <worker_process_device+0x188>
  41402c:	mov	w0, #0x1                   	// #1
  414030:	bl	40a3f0 <log_get_max_level_realm@plt>
  414034:	ldur	w8, [x29, #-76]
  414038:	cmp	w0, w8
  41403c:	cset	w8, ge  // ge = tcont
  414040:	mov	w9, #0x1                   	// #1
  414044:	eor	w8, w8, #0x1
  414048:	eor	w8, w8, w9
  41404c:	and	w8, w8, #0x1
  414050:	mov	w1, w8
  414054:	sxtw	x10, w1
  414058:	cbz	x10, 41406c <worker_process_device+0x188>
  41405c:	ldr	x8, [sp, #160]
  414060:	ldr	x0, [x8]
  414064:	sub	x1, x29, #0x40
  414068:	bl	40a860 <sd_device_get_sysname@plt>
  41406c:	ldur	w0, [x29, #-76]
  414070:	ldur	w1, [x29, #-80]
  414074:	ldr	x8, [sp, #160]
  414078:	ldr	x9, [x8, #8]
  41407c:	mov	x10, xzr
  414080:	cmp	x9, #0x0
  414084:	ldr	x9, [sp, #152]
  414088:	csel	x5, x9, x10, ne  // ne = any
  41408c:	ldr	x6, [x8, #8]
  414090:	ldr	x2, [sp, #144]
  414094:	mov	w3, #0x18c                 	// #396
  414098:	ldr	x4, [sp, #136]
  41409c:	mov	x7, x10
  4140a0:	mov	x11, sp
  4140a4:	str	x10, [x11]
  4140a8:	mov	x10, sp
  4140ac:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  4140b0:	add	x11, x11, #0xf3
  4140b4:	str	x11, [x10, #8]
  4140b8:	bl	40a870 <log_object_internal@plt>
  4140bc:	stur	w0, [x29, #-84]
  4140c0:	ldur	w12, [x29, #-84]
  4140c4:	stur	w12, [x29, #-4]
  4140c8:	mov	w12, #0x1                   	// #1
  4140cc:	stur	w12, [x29, #-88]
  4140d0:	b	414624 <worker_process_device+0x740>
  4140d4:	ldr	x8, [sp, #160]
  4140d8:	ldr	x0, [x8, #48]
  4140dc:	sub	x1, x29, #0x28
  4140e0:	bl	40ab50 <device_get_action@plt>
  4140e4:	stur	w0, [x29, #-52]
  4140e8:	ldur	w9, [x29, #-52]
  4140ec:	cmp	w9, #0x0
  4140f0:	cset	w9, ge  // ge = tcont
  4140f4:	tbnz	w9, #0, 4141c4 <worker_process_device+0x2e0>
  4140f8:	mov	x8, xzr
  4140fc:	stur	x8, [x29, #-96]
  414100:	ldr	x8, [sp, #160]
  414104:	ldr	x9, [x8, #48]
  414108:	stur	x9, [x29, #-104]
  41410c:	mov	w10, #0x7                   	// #7
  414110:	stur	w10, [x29, #-108]
  414114:	ldur	w10, [x29, #-52]
  414118:	stur	w10, [x29, #-112]
  41411c:	ldur	x9, [x29, #-104]
  414120:	cbz	x9, 414160 <worker_process_device+0x27c>
  414124:	mov	w0, #0x1                   	// #1
  414128:	bl	40a3f0 <log_get_max_level_realm@plt>
  41412c:	ldur	w8, [x29, #-108]
  414130:	cmp	w0, w8
  414134:	cset	w8, ge  // ge = tcont
  414138:	mov	w9, #0x1                   	// #1
  41413c:	eor	w8, w8, #0x1
  414140:	eor	w8, w8, w9
  414144:	and	w8, w8, #0x1
  414148:	mov	w1, w8
  41414c:	sxtw	x10, w1
  414150:	cbz	x10, 414160 <worker_process_device+0x27c>
  414154:	ldur	x0, [x29, #-104]
  414158:	sub	x1, x29, #0x60
  41415c:	bl	40a860 <sd_device_get_sysname@plt>
  414160:	ldur	w0, [x29, #-108]
  414164:	ldur	w1, [x29, #-112]
  414168:	ldur	x8, [x29, #-96]
  41416c:	mov	x9, xzr
  414170:	cmp	x8, #0x0
  414174:	ldr	x8, [sp, #152]
  414178:	csel	x5, x8, x9, ne  // ne = any
  41417c:	ldur	x6, [x29, #-96]
  414180:	ldr	x2, [sp, #144]
  414184:	mov	w3, #0x190                 	// #400
  414188:	ldr	x4, [sp, #136]
  41418c:	mov	x7, x9
  414190:	mov	x10, sp
  414194:	str	x9, [x10]
  414198:	mov	x9, sp
  41419c:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4141a0:	add	x10, x10, #0x10c
  4141a4:	str	x10, [x9, #8]
  4141a8:	bl	40a870 <log_object_internal@plt>
  4141ac:	stur	w0, [x29, #-116]
  4141b0:	ldur	w11, [x29, #-116]
  4141b4:	stur	w11, [x29, #-4]
  4141b8:	mov	w11, #0x1                   	// #1
  4141bc:	stur	w11, [x29, #-88]
  4141c0:	b	414624 <worker_process_device+0x740>
  4141c4:	mov	x8, xzr
  4141c8:	stur	x8, [x29, #-128]
  4141cc:	ldr	x8, [sp, #160]
  4141d0:	ldr	x9, [x8, #48]
  4141d4:	stur	x9, [x29, #-136]
  4141d8:	mov	w10, #0x7                   	// #7
  4141dc:	stur	w10, [x29, #-140]
  4141e0:	stur	wzr, [x29, #-144]
  4141e4:	ldur	x9, [x29, #-136]
  4141e8:	cbz	x9, 414228 <worker_process_device+0x344>
  4141ec:	mov	w0, #0x1                   	// #1
  4141f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4141f4:	ldur	w8, [x29, #-140]
  4141f8:	cmp	w0, w8
  4141fc:	cset	w8, ge  // ge = tcont
  414200:	mov	w9, #0x1                   	// #1
  414204:	eor	w8, w8, #0x1
  414208:	eor	w8, w8, w9
  41420c:	and	w8, w8, #0x1
  414210:	mov	w1, w8
  414214:	sxtw	x10, w1
  414218:	cbz	x10, 414228 <worker_process_device+0x344>
  41421c:	ldur	x0, [x29, #-136]
  414220:	sub	x1, x29, #0x80
  414224:	bl	40a860 <sd_device_get_sysname@plt>
  414228:	ldur	w0, [x29, #-140]
  41422c:	ldur	w1, [x29, #-144]
  414230:	ldur	x8, [x29, #-128]
  414234:	mov	x9, xzr
  414238:	cmp	x8, #0x0
  41423c:	ldr	x8, [sp, #152]
  414240:	csel	x5, x8, x9, ne  // ne = any
  414244:	ldur	x6, [x29, #-128]
  414248:	ldr	x10, [sp, #160]
  41424c:	ldr	x11, [x10, #24]
  414250:	ldur	w12, [x29, #-40]
  414254:	str	w0, [sp, #132]
  414258:	mov	w0, w12
  41425c:	str	w1, [sp, #128]
  414260:	str	x9, [sp, #120]
  414264:	str	x5, [sp, #112]
  414268:	str	x6, [sp, #104]
  41426c:	str	x11, [sp, #96]
  414270:	bl	40ab60 <device_action_to_string@plt>
  414274:	ldr	w12, [sp, #132]
  414278:	str	x0, [sp, #88]
  41427c:	mov	w0, w12
  414280:	ldr	w1, [sp, #128]
  414284:	ldr	x2, [sp, #144]
  414288:	mov	w3, #0x193                 	// #403
  41428c:	ldr	x4, [sp, #136]
  414290:	ldr	x5, [sp, #112]
  414294:	ldr	x6, [sp, #104]
  414298:	ldr	x7, [sp, #120]
  41429c:	mov	x8, sp
  4142a0:	ldr	x9, [sp, #120]
  4142a4:	str	x9, [x8]
  4142a8:	mov	x8, sp
  4142ac:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4142b0:	add	x10, x10, #0x125
  4142b4:	str	x10, [x8, #8]
  4142b8:	mov	x8, sp
  4142bc:	ldr	x10, [sp, #96]
  4142c0:	str	x10, [x8, #16]
  4142c4:	mov	x8, sp
  4142c8:	ldr	x11, [sp, #88]
  4142cc:	str	x11, [x8, #24]
  4142d0:	bl	40a870 <log_object_internal@plt>
  4142d4:	stur	w0, [x29, #-148]
  4142d8:	ldr	x8, [sp, #160]
  4142dc:	ldr	x0, [x8, #48]
  4142e0:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  4142e4:	add	x9, x9, #0x220
  4142e8:	ldr	x1, [x9]
  4142ec:	ldr	x9, [x8, #56]
  4142f0:	ldr	x2, [x9, #56]
  4142f4:	bl	418060 <udev_event_new>
  4142f8:	ldr	x8, [sp, #160]
  4142fc:	str	x0, [x8, #40]
  414300:	ldr	x9, [x8, #40]
  414304:	cbnz	x9, 41431c <worker_process_device+0x438>
  414308:	mov	w8, #0xfffffff4            	// #-12
  41430c:	stur	w8, [x29, #-4]
  414310:	mov	w8, #0x1                   	// #1
  414314:	stur	w8, [x29, #-88]
  414318:	b	414624 <worker_process_device+0x740>
  41431c:	ldr	x8, [sp, #160]
  414320:	ldr	x0, [x8, #48]
  414324:	sub	x1, x29, #0x24
  414328:	bl	4146dc <worker_lock_block_device>
  41432c:	stur	w0, [x29, #-52]
  414330:	ldur	w9, [x29, #-52]
  414334:	cmp	w9, #0x0
  414338:	cset	w9, ge  // ge = tcont
  41433c:	tbnz	w9, #0, 414354 <worker_process_device+0x470>
  414340:	ldur	w8, [x29, #-52]
  414344:	stur	w8, [x29, #-4]
  414348:	mov	w8, #0x1                   	// #1
  41434c:	stur	w8, [x29, #-88]
  414350:	b	414624 <worker_process_device+0x740>
  414354:	ldr	x8, [sp, #160]
  414358:	ldr	x0, [x8, #40]
  41435c:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  414360:	add	x9, x9, #0x0
  414364:	ldr	x1, [x9]
  414368:	ldr	x9, [x8, #56]
  41436c:	ldr	x2, [x9, #48]
  414370:	ldr	x9, [x8, #56]
  414374:	ldr	x3, [x9, #40]
  414378:	bl	41addc <udev_event_execute_rules>
  41437c:	stur	w0, [x29, #-52]
  414380:	ldur	w10, [x29, #-52]
  414384:	cmp	w10, #0x0
  414388:	cset	w10, ge  // ge = tcont
  41438c:	tbnz	w10, #0, 4143a4 <worker_process_device+0x4c0>
  414390:	ldur	w8, [x29, #-52]
  414394:	stur	w8, [x29, #-4]
  414398:	mov	w8, #0x1                   	// #1
  41439c:	stur	w8, [x29, #-88]
  4143a0:	b	414624 <worker_process_device+0x740>
  4143a4:	ldr	x8, [sp, #160]
  4143a8:	ldr	x0, [x8, #40]
  4143ac:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  4143b0:	add	x9, x9, #0x0
  4143b4:	ldr	x1, [x9]
  4143b8:	bl	41c87c <udev_event_execute_run>
  4143bc:	ldr	x8, [sp, #160]
  4143c0:	ldr	x9, [x8, #56]
  4143c4:	ldr	x9, [x9, #56]
  4143c8:	cbnz	x9, 4143e8 <worker_process_device+0x504>
  4143cc:	ldr	x8, [sp, #160]
  4143d0:	ldr	x9, [x8, #40]
  4143d4:	ldr	x0, [x9, #88]
  4143d8:	bl	40ab70 <sd_netlink_ref@plt>
  4143dc:	ldr	x8, [sp, #160]
  4143e0:	ldr	x9, [x8, #56]
  4143e4:	str	x0, [x9, #56]
  4143e8:	ldr	x8, [sp, #160]
  4143ec:	ldr	x9, [x8, #40]
  4143f0:	ldrh	w10, [x9, #104]
  4143f4:	mov	w11, #0x8                   	// #8
  4143f8:	lsr	w10, w10, w11
  4143fc:	and	w10, w10, #0x1
  414400:	tbnz	w10, #0, 414408 <worker_process_device+0x524>
  414404:	b	414504 <worker_process_device+0x620>
  414408:	ldr	x8, [sp, #160]
  41440c:	ldr	x0, [x8, #48]
  414410:	bl	43d3e8 <udev_watch_begin>
  414414:	ldr	x8, [sp, #160]
  414418:	ldr	x9, [x8, #48]
  41441c:	mov	x0, x9
  414420:	bl	40ab80 <device_update_db@plt>
  414424:	stur	w0, [x29, #-52]
  414428:	ldur	w10, [x29, #-52]
  41442c:	cmp	w10, #0x0
  414430:	cset	w10, ge  // ge = tcont
  414434:	tbnz	w10, #0, 414504 <worker_process_device+0x620>
  414438:	mov	x8, xzr
  41443c:	stur	x8, [x29, #-160]
  414440:	ldr	x8, [sp, #160]
  414444:	ldr	x9, [x8, #48]
  414448:	stur	x9, [x29, #-168]
  41444c:	mov	w10, #0x7                   	// #7
  414450:	stur	w10, [x29, #-172]
  414454:	ldur	w10, [x29, #-52]
  414458:	stur	w10, [x29, #-176]
  41445c:	ldur	x9, [x29, #-168]
  414460:	cbz	x9, 4144a0 <worker_process_device+0x5bc>
  414464:	mov	w0, #0x1                   	// #1
  414468:	bl	40a3f0 <log_get_max_level_realm@plt>
  41446c:	ldur	w8, [x29, #-172]
  414470:	cmp	w0, w8
  414474:	cset	w8, ge  // ge = tcont
  414478:	mov	w9, #0x1                   	// #1
  41447c:	eor	w8, w8, #0x1
  414480:	eor	w8, w8, w9
  414484:	and	w8, w8, #0x1
  414488:	mov	w1, w8
  41448c:	sxtw	x10, w1
  414490:	cbz	x10, 4144a0 <worker_process_device+0x5bc>
  414494:	ldur	x0, [x29, #-168]
  414498:	sub	x1, x29, #0xa0
  41449c:	bl	40a860 <sd_device_get_sysname@plt>
  4144a0:	ldur	w0, [x29, #-172]
  4144a4:	ldur	w1, [x29, #-176]
  4144a8:	ldur	x8, [x29, #-160]
  4144ac:	mov	x9, xzr
  4144b0:	cmp	x8, #0x0
  4144b4:	ldr	x8, [sp, #152]
  4144b8:	csel	x5, x8, x9, ne  // ne = any
  4144bc:	ldur	x6, [x29, #-160]
  4144c0:	ldr	x2, [sp, #144]
  4144c4:	mov	w3, #0x1ad                 	// #429
  4144c8:	ldr	x4, [sp, #136]
  4144cc:	mov	x7, x9
  4144d0:	mov	x10, sp
  4144d4:	str	x9, [x10]
  4144d8:	mov	x9, sp
  4144dc:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4144e0:	add	x10, x10, #0x14f
  4144e4:	str	x10, [x9, #8]
  4144e8:	bl	40a870 <log_object_internal@plt>
  4144ec:	stur	w0, [x29, #-180]
  4144f0:	ldur	w11, [x29, #-180]
  4144f4:	stur	w11, [x29, #-4]
  4144f8:	mov	w11, #0x1                   	// #1
  4144fc:	stur	w11, [x29, #-88]
  414500:	b	414624 <worker_process_device+0x740>
  414504:	mov	x8, xzr
  414508:	str	x8, [sp, #192]
  41450c:	ldr	x8, [sp, #160]
  414510:	ldr	x9, [x8, #48]
  414514:	str	x9, [sp, #184]
  414518:	mov	w10, #0x7                   	// #7
  41451c:	str	w10, [sp, #180]
  414520:	str	wzr, [sp, #176]
  414524:	ldr	x9, [sp, #184]
  414528:	cbz	x9, 414568 <worker_process_device+0x684>
  41452c:	mov	w0, #0x1                   	// #1
  414530:	bl	40a3f0 <log_get_max_level_realm@plt>
  414534:	ldr	w8, [sp, #180]
  414538:	cmp	w0, w8
  41453c:	cset	w8, ge  // ge = tcont
  414540:	mov	w9, #0x1                   	// #1
  414544:	eor	w8, w8, #0x1
  414548:	eor	w8, w8, w9
  41454c:	and	w8, w8, #0x1
  414550:	mov	w1, w8
  414554:	sxtw	x10, w1
  414558:	cbz	x10, 414568 <worker_process_device+0x684>
  41455c:	ldr	x0, [sp, #184]
  414560:	add	x1, sp, #0xc0
  414564:	bl	40a860 <sd_device_get_sysname@plt>
  414568:	ldr	w0, [sp, #180]
  41456c:	ldr	w1, [sp, #176]
  414570:	ldr	x8, [sp, #192]
  414574:	mov	x9, xzr
  414578:	cmp	x8, #0x0
  41457c:	ldr	x8, [sp, #152]
  414580:	csel	x5, x8, x9, ne  // ne = any
  414584:	ldr	x6, [sp, #192]
  414588:	ldr	x10, [sp, #160]
  41458c:	ldr	x11, [x10, #24]
  414590:	ldur	w12, [x29, #-40]
  414594:	str	w0, [sp, #84]
  414598:	mov	w0, w12
  41459c:	str	w1, [sp, #80]
  4145a0:	str	x9, [sp, #72]
  4145a4:	str	x5, [sp, #64]
  4145a8:	str	x6, [sp, #56]
  4145ac:	str	x11, [sp, #48]
  4145b0:	bl	40ab60 <device_action_to_string@plt>
  4145b4:	ldr	w12, [sp, #84]
  4145b8:	str	x0, [sp, #40]
  4145bc:	mov	w0, w12
  4145c0:	ldr	w1, [sp, #80]
  4145c4:	ldr	x2, [sp, #144]
  4145c8:	mov	w3, #0x1b1                 	// #433
  4145cc:	ldr	x4, [sp, #136]
  4145d0:	ldr	x5, [sp, #64]
  4145d4:	ldr	x6, [sp, #56]
  4145d8:	ldr	x7, [sp, #72]
  4145dc:	mov	x8, sp
  4145e0:	ldr	x9, [sp, #72]
  4145e4:	str	x9, [x8]
  4145e8:	mov	x8, sp
  4145ec:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4145f0:	add	x10, x10, #0x183
  4145f4:	str	x10, [x8, #8]
  4145f8:	mov	x8, sp
  4145fc:	ldr	x10, [sp, #48]
  414600:	str	x10, [x8, #16]
  414604:	mov	x8, sp
  414608:	ldr	x11, [sp, #40]
  41460c:	str	x11, [x8, #24]
  414610:	bl	40a870 <log_object_internal@plt>
  414614:	str	w0, [sp, #172]
  414618:	stur	wzr, [x29, #-4]
  41461c:	mov	w12, #0x1                   	// #1
  414620:	stur	w12, [x29, #-88]
  414624:	sub	x0, x29, #0x24
  414628:	bl	4146b4 <closep>
  41462c:	sub	x0, x29, #0x20
  414630:	bl	414680 <udev_event_freep>
  414634:	ldur	w0, [x29, #-4]
  414638:	ldr	x28, [sp, #400]
  41463c:	ldp	x29, x30, [sp, #384]
  414640:	add	sp, sp, #0x1a0
  414644:	ret

0000000000414648 <worker_send_message>:
  414648:	sub	sp, sp, #0x20
  41464c:	stp	x29, x30, [sp, #16]
  414650:	add	x29, sp, #0x10
  414654:	mov	x8, xzr
  414658:	sub	x1, x29, #0x5
  41465c:	stur	w0, [x29, #-4]
  414660:	ldur	w0, [x29, #-4]
  414664:	mov	x2, x8
  414668:	mov	w9, wzr
  41466c:	and	w3, w9, #0x1
  414670:	bl	40ab90 <loop_write@plt>
  414674:	ldp	x29, x30, [sp, #16]
  414678:	add	sp, sp, #0x20
  41467c:	ret

0000000000414680 <udev_event_freep>:
  414680:	sub	sp, sp, #0x20
  414684:	stp	x29, x30, [sp, #16]
  414688:	add	x29, sp, #0x10
  41468c:	str	x0, [sp, #8]
  414690:	ldr	x8, [sp, #8]
  414694:	ldr	x8, [x8]
  414698:	cbz	x8, 4146a8 <udev_event_freep+0x28>
  41469c:	ldr	x8, [sp, #8]
  4146a0:	ldr	x0, [x8]
  4146a4:	bl	418280 <udev_event_free>
  4146a8:	ldp	x29, x30, [sp, #16]
  4146ac:	add	sp, sp, #0x20
  4146b0:	ret

00000000004146b4 <closep>:
  4146b4:	sub	sp, sp, #0x20
  4146b8:	stp	x29, x30, [sp, #16]
  4146bc:	add	x29, sp, #0x10
  4146c0:	str	x0, [sp, #8]
  4146c4:	ldr	x8, [sp, #8]
  4146c8:	ldr	w0, [x8]
  4146cc:	bl	40a760 <safe_close@plt>
  4146d0:	ldp	x29, x30, [sp, #16]
  4146d4:	add	sp, sp, #0x20
  4146d8:	ret

00000000004146dc <worker_lock_block_device>:
  4146dc:	sub	sp, sp, #0x1c0
  4146e0:	stp	x29, x30, [sp, #416]
  4146e4:	str	x28, [sp, #432]
  4146e8:	add	x29, sp, #0x1a0
  4146ec:	sub	x8, x29, #0xc8
  4146f0:	mov	w9, #0xffffffff            	// #-1
  4146f4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4146f8:	add	x10, x10, #0xa46
  4146fc:	adrp	x11, 463000 <dhcp_lease_set_client_id+0xc4>
  414700:	add	x11, x11, #0xae0
  414704:	add	x11, x11, #0x3
  414708:	adrp	x12, 465000 <on_inotify.__assert_in_set+0x1540>
  41470c:	add	x12, x12, #0x1e4
  414710:	str	x0, [x8, #184]
  414714:	str	x1, [x8, #176]
  414718:	stur	w9, [x29, #-28]
  41471c:	str	x8, [sp, #56]
  414720:	str	x10, [sp, #48]
  414724:	str	x11, [sp, #40]
  414728:	str	x12, [sp, #32]
  41472c:	ldr	x8, [sp, #56]
  414730:	ldr	x9, [x8, #184]
  414734:	cmp	x9, #0x0
  414738:	cset	w10, ne  // ne = any
  41473c:	mov	w11, #0x1                   	// #1
  414740:	eor	w10, w10, #0x1
  414744:	eor	w10, w10, w11
  414748:	eor	w10, w10, w11
  41474c:	and	w10, w10, #0x1
  414750:	mov	w0, w10
  414754:	sxtw	x9, w0
  414758:	cbz	x9, 41477c <worker_lock_block_device+0xa0>
  41475c:	mov	w0, #0x1                   	// #1
  414760:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  414764:	add	x1, x1, #0xee1
  414768:	ldr	x2, [sp, #40]
  41476c:	mov	w3, #0x147                 	// #327
  414770:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  414774:	add	x4, x4, #0x1ac
  414778:	bl	40a540 <log_assert_failed_realm@plt>
  41477c:	ldr	x8, [sp, #56]
  414780:	ldr	x9, [x8, #176]
  414784:	cmp	x9, #0x0
  414788:	cset	w10, ne  // ne = any
  41478c:	mov	w11, #0x1                   	// #1
  414790:	eor	w10, w10, #0x1
  414794:	eor	w10, w10, w11
  414798:	eor	w10, w10, w11
  41479c:	and	w10, w10, #0x1
  4147a0:	mov	w0, w10
  4147a4:	sxtw	x9, w0
  4147a8:	cbz	x9, 4147cc <worker_lock_block_device+0xf0>
  4147ac:	mov	w0, #0x1                   	// #1
  4147b0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4147b4:	add	x1, x1, #0x1dd
  4147b8:	ldr	x2, [sp, #40]
  4147bc:	mov	w3, #0x148                 	// #328
  4147c0:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4147c4:	add	x4, x4, #0x1ac
  4147c8:	bl	40a540 <log_assert_failed_realm@plt>
  4147cc:	ldr	x8, [sp, #56]
  4147d0:	ldr	x0, [x8, #184]
  4147d4:	mov	w1, #0x1                   	// #1
  4147d8:	bl	40aba0 <device_for_action@plt>
  4147dc:	tbnz	w0, #0, 4147e4 <worker_lock_block_device+0x108>
  4147e0:	b	4147f4 <worker_lock_block_device+0x118>
  4147e4:	stur	wzr, [x29, #-4]
  4147e8:	mov	w8, #0x1                   	// #1
  4147ec:	stur	w8, [x29, #-48]
  4147f0:	b	415038 <worker_lock_block_device+0x95c>
  4147f4:	ldr	x8, [sp, #56]
  4147f8:	ldr	x0, [x8, #184]
  4147fc:	sub	x1, x29, #0x28
  414800:	bl	40aa10 <sd_device_get_subsystem@plt>
  414804:	stur	w0, [x29, #-44]
  414808:	ldur	w9, [x29, #-44]
  41480c:	cmp	w9, #0x0
  414810:	cset	w9, ge  // ge = tcont
  414814:	tbnz	w9, #0, 4148ec <worker_lock_block_device+0x210>
  414818:	mov	x8, xzr
  41481c:	ldr	x9, [sp, #56]
  414820:	str	x8, [x9, #144]
  414824:	ldr	x8, [x9, #184]
  414828:	str	x8, [x9, #136]
  41482c:	mov	w10, #0x7                   	// #7
  414830:	stur	w10, [x29, #-68]
  414834:	ldur	w10, [x29, #-44]
  414838:	stur	w10, [x29, #-72]
  41483c:	ldr	x8, [x9, #136]
  414840:	cbz	x8, 414884 <worker_lock_block_device+0x1a8>
  414844:	mov	w0, #0x1                   	// #1
  414848:	bl	40a3f0 <log_get_max_level_realm@plt>
  41484c:	ldur	w8, [x29, #-68]
  414850:	cmp	w0, w8
  414854:	cset	w8, ge  // ge = tcont
  414858:	mov	w9, #0x1                   	// #1
  41485c:	eor	w8, w8, #0x1
  414860:	eor	w8, w8, w9
  414864:	and	w8, w8, #0x1
  414868:	mov	w1, w8
  41486c:	sxtw	x10, w1
  414870:	cbz	x10, 414884 <worker_lock_block_device+0x1a8>
  414874:	ldr	x8, [sp, #56]
  414878:	ldr	x0, [x8, #136]
  41487c:	sub	x1, x29, #0x38
  414880:	bl	40a860 <sd_device_get_sysname@plt>
  414884:	ldur	w0, [x29, #-68]
  414888:	ldur	w1, [x29, #-72]
  41488c:	ldr	x8, [sp, #56]
  414890:	ldr	x9, [x8, #144]
  414894:	mov	x10, xzr
  414898:	cmp	x9, #0x0
  41489c:	ldr	x9, [sp, #48]
  4148a0:	csel	x5, x9, x10, ne  // ne = any
  4148a4:	ldr	x6, [x8, #144]
  4148a8:	ldr	x2, [sp, #40]
  4148ac:	mov	w3, #0x158                 	// #344
  4148b0:	ldr	x4, [sp, #32]
  4148b4:	mov	x7, x10
  4148b8:	mov	x11, sp
  4148bc:	str	x10, [x11]
  4148c0:	mov	x10, sp
  4148c4:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  4148c8:	add	x11, x11, #0x1fd
  4148cc:	str	x11, [x10, #8]
  4148d0:	bl	40a870 <log_object_internal@plt>
  4148d4:	stur	w0, [x29, #-76]
  4148d8:	ldur	w12, [x29, #-76]
  4148dc:	stur	w12, [x29, #-4]
  4148e0:	mov	w12, #0x1                   	// #1
  4148e4:	stur	w12, [x29, #-48]
  4148e8:	b	415038 <worker_lock_block_device+0x95c>
  4148ec:	ldr	x8, [sp, #56]
  4148f0:	ldr	x0, [x8, #160]
  4148f4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4148f8:	add	x1, x1, #0xb74
  4148fc:	bl	40aa20 <strcmp@plt>
  414900:	cbz	w0, 414914 <worker_lock_block_device+0x238>
  414904:	stur	wzr, [x29, #-4]
  414908:	mov	w8, #0x1                   	// #1
  41490c:	stur	w8, [x29, #-48]
  414910:	b	415038 <worker_lock_block_device+0x95c>
  414914:	ldr	x8, [sp, #56]
  414918:	ldr	x0, [x8, #184]
  41491c:	sub	x1, x29, #0x28
  414920:	bl	40a860 <sd_device_get_sysname@plt>
  414924:	stur	w0, [x29, #-44]
  414928:	ldur	w9, [x29, #-44]
  41492c:	cmp	w9, #0x0
  414930:	cset	w9, ge  // ge = tcont
  414934:	tbnz	w9, #0, 414a0c <worker_lock_block_device+0x330>
  414938:	mov	x8, xzr
  41493c:	ldr	x9, [sp, #56]
  414940:	str	x8, [x9, #112]
  414944:	ldr	x8, [x9, #184]
  414948:	str	x8, [x9, #104]
  41494c:	mov	w10, #0x7                   	// #7
  414950:	stur	w10, [x29, #-100]
  414954:	ldur	w10, [x29, #-44]
  414958:	stur	w10, [x29, #-104]
  41495c:	ldr	x8, [x9, #104]
  414960:	cbz	x8, 4149a4 <worker_lock_block_device+0x2c8>
  414964:	mov	w0, #0x1                   	// #1
  414968:	bl	40a3f0 <log_get_max_level_realm@plt>
  41496c:	ldur	w8, [x29, #-100]
  414970:	cmp	w0, w8
  414974:	cset	w8, ge  // ge = tcont
  414978:	mov	w9, #0x1                   	// #1
  41497c:	eor	w8, w8, #0x1
  414980:	eor	w8, w8, w9
  414984:	and	w8, w8, #0x1
  414988:	mov	w1, w8
  41498c:	sxtw	x10, w1
  414990:	cbz	x10, 4149a4 <worker_lock_block_device+0x2c8>
  414994:	ldr	x8, [sp, #56]
  414998:	ldr	x0, [x8, #104]
  41499c:	sub	x1, x29, #0x58
  4149a0:	bl	40a860 <sd_device_get_sysname@plt>
  4149a4:	ldur	w0, [x29, #-100]
  4149a8:	ldur	w1, [x29, #-104]
  4149ac:	ldr	x8, [sp, #56]
  4149b0:	ldr	x9, [x8, #112]
  4149b4:	mov	x10, xzr
  4149b8:	cmp	x9, #0x0
  4149bc:	ldr	x9, [sp, #48]
  4149c0:	csel	x5, x9, x10, ne  // ne = any
  4149c4:	ldr	x6, [x8, #112]
  4149c8:	ldr	x2, [sp, #40]
  4149cc:	mov	w3, #0x15f                 	// #351
  4149d0:	ldr	x4, [sp, #32]
  4149d4:	mov	x7, x10
  4149d8:	mov	x11, sp
  4149dc:	str	x10, [x11]
  4149e0:	mov	x10, sp
  4149e4:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  4149e8:	add	x11, x11, #0x219
  4149ec:	str	x11, [x10, #8]
  4149f0:	bl	40a870 <log_object_internal@plt>
  4149f4:	stur	w0, [x29, #-108]
  4149f8:	ldur	w12, [x29, #-108]
  4149fc:	stur	w12, [x29, #-4]
  414a00:	mov	w12, #0x1                   	// #1
  414a04:	stur	w12, [x29, #-48]
  414a08:	b	415038 <worker_lock_block_device+0x95c>
  414a0c:	ldr	x8, [sp, #56]
  414a10:	ldr	x9, [x8, #160]
  414a14:	str	x9, [x8, #80]
  414a18:	mov	x9, xzr
  414a1c:	str	x9, [x8, #72]
  414a20:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  414a24:	add	x9, x9, #0x10
  414a28:	ldr	q0, [x9]
  414a2c:	sub	x10, x29, #0xb0
  414a30:	stur	q0, [x8, #24]
  414a34:	ldr	q0, [x9, #16]
  414a38:	stur	q0, [x8, #40]
  414a3c:	str	x10, [x8, #64]
  414a40:	ldr	x8, [sp, #56]
  414a44:	ldr	x9, [x8, #64]
  414a48:	mov	w10, #0x0                   	// #0
  414a4c:	str	w10, [sp, #28]
  414a50:	cbz	x9, 414a6c <worker_lock_block_device+0x390>
  414a54:	ldr	x8, [sp, #56]
  414a58:	ldr	x9, [x8, #64]
  414a5c:	ldr	x9, [x9]
  414a60:	cmp	x9, #0x0
  414a64:	cset	w10, ne  // ne = any
  414a68:	str	w10, [sp, #28]
  414a6c:	ldr	w8, [sp, #28]
  414a70:	tbnz	w8, #0, 414a78 <worker_lock_block_device+0x39c>
  414a74:	b	414ab4 <worker_lock_block_device+0x3d8>
  414a78:	ldr	x8, [sp, #56]
  414a7c:	ldr	x0, [x8, #80]
  414a80:	ldr	x9, [x8, #64]
  414a84:	ldr	x1, [x9]
  414a88:	bl	40f530 <startswith>
  414a8c:	ldr	x8, [sp, #56]
  414a90:	str	x0, [x8, #72]
  414a94:	ldr	x9, [x8, #72]
  414a98:	cbz	x9, 414aa0 <worker_lock_block_device+0x3c4>
  414a9c:	b	414ab4 <worker_lock_block_device+0x3d8>
  414aa0:	ldr	x8, [sp, #56]
  414aa4:	ldr	x9, [x8, #64]
  414aa8:	add	x9, x9, #0x8
  414aac:	str	x9, [x8, #64]
  414ab0:	b	414a40 <worker_lock_block_device+0x364>
  414ab4:	ldr	x8, [sp, #56]
  414ab8:	ldr	x9, [x8, #72]
  414abc:	str	x9, [x8, #16]
  414ac0:	ldr	x9, [x8, #16]
  414ac4:	cbz	x9, 414ad8 <worker_lock_block_device+0x3fc>
  414ac8:	stur	wzr, [x29, #-4]
  414acc:	mov	w8, #0x1                   	// #1
  414ad0:	stur	w8, [x29, #-48]
  414ad4:	b	415038 <worker_lock_block_device+0x95c>
  414ad8:	ldr	x8, [sp, #56]
  414adc:	ldr	x0, [x8, #184]
  414ae0:	sub	x1, x29, #0x28
  414ae4:	bl	40abb0 <sd_device_get_devtype@plt>
  414ae8:	stur	w0, [x29, #-44]
  414aec:	ldur	w9, [x29, #-44]
  414af0:	cmp	w9, #0x0
  414af4:	cset	w9, ge  // ge = tcont
  414af8:	tbnz	w9, #0, 414be0 <worker_lock_block_device+0x504>
  414afc:	ldur	w8, [x29, #-44]
  414b00:	mov	w9, #0xfffffffe            	// #-2
  414b04:	cmp	w8, w9
  414b08:	b.eq	414be0 <worker_lock_block_device+0x504>  // b.none
  414b0c:	mov	x8, xzr
  414b10:	ldr	x9, [sp, #56]
  414b14:	str	x8, [x9, #8]
  414b18:	ldr	x8, [x9, #184]
  414b1c:	str	x8, [x9]
  414b20:	mov	w10, #0x7                   	// #7
  414b24:	stur	w10, [x29, #-204]
  414b28:	ldur	w10, [x29, #-44]
  414b2c:	str	w10, [sp, #208]
  414b30:	ldr	x8, [x9]
  414b34:	cbz	x8, 414b78 <worker_lock_block_device+0x49c>
  414b38:	mov	w0, #0x1                   	// #1
  414b3c:	bl	40a3f0 <log_get_max_level_realm@plt>
  414b40:	ldur	w8, [x29, #-204]
  414b44:	cmp	w0, w8
  414b48:	cset	w8, ge  // ge = tcont
  414b4c:	mov	w9, #0x1                   	// #1
  414b50:	eor	w8, w8, #0x1
  414b54:	eor	w8, w8, w9
  414b58:	and	w8, w8, #0x1
  414b5c:	mov	w1, w8
  414b60:	sxtw	x10, w1
  414b64:	cbz	x10, 414b78 <worker_lock_block_device+0x49c>
  414b68:	ldr	x8, [sp, #56]
  414b6c:	ldr	x0, [x8]
  414b70:	sub	x1, x29, #0xc0
  414b74:	bl	40a860 <sd_device_get_sysname@plt>
  414b78:	ldur	w0, [x29, #-204]
  414b7c:	ldr	w1, [sp, #208]
  414b80:	ldr	x8, [sp, #56]
  414b84:	ldr	x9, [x8, #8]
  414b88:	mov	x10, xzr
  414b8c:	cmp	x9, #0x0
  414b90:	ldr	x9, [sp, #48]
  414b94:	csel	x5, x9, x10, ne  // ne = any
  414b98:	ldr	x6, [x8, #8]
  414b9c:	ldr	x2, [sp, #40]
  414ba0:	mov	w3, #0x166                 	// #358
  414ba4:	ldr	x4, [sp, #32]
  414ba8:	mov	x7, x10
  414bac:	mov	x11, sp
  414bb0:	str	x10, [x11]
  414bb4:	mov	x10, sp
  414bb8:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  414bbc:	add	x11, x11, #0x23f
  414bc0:	str	x11, [x10, #8]
  414bc4:	bl	40a870 <log_object_internal@plt>
  414bc8:	str	w0, [sp, #204]
  414bcc:	ldr	w12, [sp, #204]
  414bd0:	stur	w12, [x29, #-4]
  414bd4:	mov	w12, #0x1                   	// #1
  414bd8:	stur	w12, [x29, #-48]
  414bdc:	b	415038 <worker_lock_block_device+0x95c>
  414be0:	ldur	w8, [x29, #-44]
  414be4:	cmp	w8, #0x0
  414be8:	cset	w8, lt  // lt = tstop
  414bec:	tbnz	w8, #0, 414cf8 <worker_lock_block_device+0x61c>
  414bf0:	ldr	x8, [sp, #56]
  414bf4:	ldr	x0, [x8, #160]
  414bf8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  414bfc:	add	x1, x1, #0x259
  414c00:	bl	40aa20 <strcmp@plt>
  414c04:	cbnz	w0, 414cf8 <worker_lock_block_device+0x61c>
  414c08:	sub	x1, x29, #0x10
  414c0c:	ldr	x8, [sp, #56]
  414c10:	ldr	x0, [x8, #184]
  414c14:	bl	40abc0 <sd_device_get_parent@plt>
  414c18:	stur	w0, [x29, #-44]
  414c1c:	ldur	w9, [x29, #-44]
  414c20:	cmp	w9, #0x0
  414c24:	cset	w9, ge  // ge = tcont
  414c28:	tbnz	w9, #0, 414cf8 <worker_lock_block_device+0x61c>
  414c2c:	mov	x8, xzr
  414c30:	str	x8, [sp, #192]
  414c34:	ldr	x8, [sp, #56]
  414c38:	ldr	x9, [x8, #184]
  414c3c:	str	x9, [sp, #184]
  414c40:	mov	w10, #0x7                   	// #7
  414c44:	str	w10, [sp, #180]
  414c48:	ldur	w10, [x29, #-44]
  414c4c:	str	w10, [sp, #176]
  414c50:	ldr	x9, [sp, #184]
  414c54:	cbz	x9, 414c94 <worker_lock_block_device+0x5b8>
  414c58:	mov	w0, #0x1                   	// #1
  414c5c:	bl	40a3f0 <log_get_max_level_realm@plt>
  414c60:	ldr	w8, [sp, #180]
  414c64:	cmp	w0, w8
  414c68:	cset	w8, ge  // ge = tcont
  414c6c:	mov	w9, #0x1                   	// #1
  414c70:	eor	w8, w8, #0x1
  414c74:	eor	w8, w8, w9
  414c78:	and	w8, w8, #0x1
  414c7c:	mov	w1, w8
  414c80:	sxtw	x10, w1
  414c84:	cbz	x10, 414c94 <worker_lock_block_device+0x5b8>
  414c88:	ldr	x0, [sp, #184]
  414c8c:	add	x1, sp, #0xc0
  414c90:	bl	40a860 <sd_device_get_sysname@plt>
  414c94:	ldr	w0, [sp, #180]
  414c98:	ldr	w1, [sp, #176]
  414c9c:	ldr	x8, [sp, #192]
  414ca0:	mov	x9, xzr
  414ca4:	cmp	x8, #0x0
  414ca8:	ldr	x8, [sp, #48]
  414cac:	csel	x5, x8, x9, ne  // ne = any
  414cb0:	ldr	x6, [sp, #192]
  414cb4:	ldr	x2, [sp, #40]
  414cb8:	mov	w3, #0x16a                 	// #362
  414cbc:	ldr	x4, [sp, #32]
  414cc0:	mov	x7, x9
  414cc4:	mov	x10, sp
  414cc8:	str	x9, [x10]
  414ccc:	mov	x9, sp
  414cd0:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  414cd4:	add	x10, x10, #0x263
  414cd8:	str	x10, [x9, #8]
  414cdc:	bl	40a870 <log_object_internal@plt>
  414ce0:	str	w0, [sp, #172]
  414ce4:	ldr	w11, [sp, #172]
  414ce8:	stur	w11, [x29, #-4]
  414cec:	mov	w11, #0x1                   	// #1
  414cf0:	stur	w11, [x29, #-48]
  414cf4:	b	415038 <worker_lock_block_device+0x95c>
  414cf8:	ldr	x8, [sp, #56]
  414cfc:	ldr	x0, [x8, #184]
  414d00:	sub	x1, x29, #0x28
  414d04:	bl	40a930 <sd_device_get_devname@plt>
  414d08:	stur	w0, [x29, #-44]
  414d0c:	ldur	w9, [x29, #-44]
  414d10:	mov	w10, #0xfffffffe            	// #-2
  414d14:	cmp	w9, w10
  414d18:	b.ne	414d2c <worker_lock_block_device+0x650>  // b.any
  414d1c:	stur	wzr, [x29, #-4]
  414d20:	mov	w8, #0x1                   	// #1
  414d24:	stur	w8, [x29, #-48]
  414d28:	b	415038 <worker_lock_block_device+0x95c>
  414d2c:	ldur	w8, [x29, #-44]
  414d30:	cmp	w8, #0x0
  414d34:	cset	w8, ge  // ge = tcont
  414d38:	tbnz	w8, #0, 414e08 <worker_lock_block_device+0x72c>
  414d3c:	mov	x8, xzr
  414d40:	str	x8, [sp, #160]
  414d44:	ldr	x8, [sp, #56]
  414d48:	ldr	x9, [x8, #184]
  414d4c:	str	x9, [sp, #152]
  414d50:	mov	w10, #0x7                   	// #7
  414d54:	str	w10, [sp, #148]
  414d58:	ldur	w10, [x29, #-44]
  414d5c:	str	w10, [sp, #144]
  414d60:	ldr	x9, [sp, #152]
  414d64:	cbz	x9, 414da4 <worker_lock_block_device+0x6c8>
  414d68:	mov	w0, #0x1                   	// #1
  414d6c:	bl	40a3f0 <log_get_max_level_realm@plt>
  414d70:	ldr	w8, [sp, #148]
  414d74:	cmp	w0, w8
  414d78:	cset	w8, ge  // ge = tcont
  414d7c:	mov	w9, #0x1                   	// #1
  414d80:	eor	w8, w8, #0x1
  414d84:	eor	w8, w8, w9
  414d88:	and	w8, w8, #0x1
  414d8c:	mov	w1, w8
  414d90:	sxtw	x10, w1
  414d94:	cbz	x10, 414da4 <worker_lock_block_device+0x6c8>
  414d98:	ldr	x0, [sp, #152]
  414d9c:	add	x1, sp, #0xa0
  414da0:	bl	40a860 <sd_device_get_sysname@plt>
  414da4:	ldr	w0, [sp, #148]
  414da8:	ldr	w1, [sp, #144]
  414dac:	ldr	x8, [sp, #160]
  414db0:	mov	x9, xzr
  414db4:	cmp	x8, #0x0
  414db8:	ldr	x8, [sp, #48]
  414dbc:	csel	x5, x8, x9, ne  // ne = any
  414dc0:	ldr	x6, [sp, #160]
  414dc4:	ldr	x2, [sp, #40]
  414dc8:	mov	w3, #0x171                 	// #369
  414dcc:	ldr	x4, [sp, #32]
  414dd0:	mov	x7, x9
  414dd4:	mov	x10, sp
  414dd8:	str	x9, [x10]
  414ddc:	mov	x9, sp
  414de0:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  414de4:	add	x10, x10, #0x283
  414de8:	str	x10, [x9, #8]
  414dec:	bl	40a870 <log_object_internal@plt>
  414df0:	str	w0, [sp, #140]
  414df4:	ldr	w11, [sp, #140]
  414df8:	stur	w11, [x29, #-4]
  414dfc:	mov	w11, #0x1                   	// #1
  414e00:	stur	w11, [x29, #-48]
  414e04:	b	415038 <worker_lock_block_device+0x95c>
  414e08:	ldr	x8, [sp, #56]
  414e0c:	ldr	x0, [x8, #160]
  414e10:	mov	w1, #0x8800                	// #34816
  414e14:	movk	w1, #0x8, lsl #16
  414e18:	bl	40abd0 <open64@plt>
  414e1c:	stur	w0, [x29, #-28]
  414e20:	ldur	w9, [x29, #-28]
  414e24:	cmp	w9, #0x0
  414e28:	cset	w9, ge  // ge = tcont
  414e2c:	tbnz	w9, #0, 414f0c <worker_lock_block_device+0x830>
  414e30:	mov	x8, xzr
  414e34:	str	x8, [sp, #128]
  414e38:	ldr	x8, [sp, #56]
  414e3c:	ldr	x9, [x8, #184]
  414e40:	str	x9, [sp, #120]
  414e44:	mov	w10, #0x7                   	// #7
  414e48:	str	w10, [sp, #116]
  414e4c:	bl	40a480 <__errno_location@plt>
  414e50:	ldr	w10, [x0]
  414e54:	str	w10, [sp, #112]
  414e58:	ldr	x8, [sp, #120]
  414e5c:	cbz	x8, 414e9c <worker_lock_block_device+0x7c0>
  414e60:	mov	w0, #0x1                   	// #1
  414e64:	bl	40a3f0 <log_get_max_level_realm@plt>
  414e68:	ldr	w8, [sp, #116]
  414e6c:	cmp	w0, w8
  414e70:	cset	w8, ge  // ge = tcont
  414e74:	mov	w9, #0x1                   	// #1
  414e78:	eor	w8, w8, #0x1
  414e7c:	eor	w8, w8, w9
  414e80:	and	w8, w8, #0x1
  414e84:	mov	w1, w8
  414e88:	sxtw	x10, w1
  414e8c:	cbz	x10, 414e9c <worker_lock_block_device+0x7c0>
  414e90:	ldr	x0, [sp, #120]
  414e94:	add	x1, sp, #0x80
  414e98:	bl	40a860 <sd_device_get_sysname@plt>
  414e9c:	ldr	w0, [sp, #116]
  414ea0:	ldr	w1, [sp, #112]
  414ea4:	ldr	x8, [sp, #128]
  414ea8:	mov	x9, xzr
  414eac:	cmp	x8, #0x0
  414eb0:	ldr	x8, [sp, #48]
  414eb4:	csel	x5, x8, x9, ne  // ne = any
  414eb8:	ldr	x6, [sp, #128]
  414ebc:	ldr	x10, [sp, #56]
  414ec0:	ldr	x11, [x10, #160]
  414ec4:	ldr	x2, [sp, #40]
  414ec8:	mov	w3, #0x175                 	// #373
  414ecc:	ldr	x4, [sp, #32]
  414ed0:	mov	x7, x9
  414ed4:	mov	x12, sp
  414ed8:	str	x9, [x12]
  414edc:	mov	x9, sp
  414ee0:	adrp	x12, 465000 <on_inotify.__assert_in_set+0x1540>
  414ee4:	add	x12, x12, #0x29d
  414ee8:	str	x12, [x9, #8]
  414eec:	mov	x9, sp
  414ef0:	str	x11, [x9, #16]
  414ef4:	bl	40a870 <log_object_internal@plt>
  414ef8:	str	w0, [sp, #108]
  414efc:	stur	wzr, [x29, #-4]
  414f00:	mov	w13, #0x1                   	// #1
  414f04:	stur	w13, [x29, #-48]
  414f08:	b	415038 <worker_lock_block_device+0x95c>
  414f0c:	ldur	w0, [x29, #-28]
  414f10:	mov	w1, #0x5                   	// #5
  414f14:	bl	40abe0 <flock@plt>
  414f18:	cmp	w0, #0x0
  414f1c:	cset	w8, ge  // ge = tcont
  414f20:	tbnz	w8, #0, 415004 <worker_lock_block_device+0x928>
  414f24:	mov	x8, xzr
  414f28:	str	x8, [sp, #96]
  414f2c:	ldr	x8, [sp, #56]
  414f30:	ldr	x9, [x8, #184]
  414f34:	str	x9, [sp, #88]
  414f38:	mov	w10, #0x7                   	// #7
  414f3c:	str	w10, [sp, #84]
  414f40:	bl	40a480 <__errno_location@plt>
  414f44:	ldr	w10, [x0]
  414f48:	str	w10, [sp, #80]
  414f4c:	ldr	x8, [sp, #88]
  414f50:	cbz	x8, 414f90 <worker_lock_block_device+0x8b4>
  414f54:	mov	w0, #0x1                   	// #1
  414f58:	bl	40a3f0 <log_get_max_level_realm@plt>
  414f5c:	ldr	w8, [sp, #84]
  414f60:	cmp	w0, w8
  414f64:	cset	w8, ge  // ge = tcont
  414f68:	mov	w9, #0x1                   	// #1
  414f6c:	eor	w8, w8, #0x1
  414f70:	eor	w8, w8, w9
  414f74:	and	w8, w8, #0x1
  414f78:	mov	w1, w8
  414f7c:	sxtw	x10, w1
  414f80:	cbz	x10, 414f90 <worker_lock_block_device+0x8b4>
  414f84:	ldr	x0, [sp, #88]
  414f88:	add	x1, sp, #0x60
  414f8c:	bl	40a860 <sd_device_get_sysname@plt>
  414f90:	ldr	w0, [sp, #84]
  414f94:	ldr	w1, [sp, #80]
  414f98:	ldr	x8, [sp, #96]
  414f9c:	mov	x9, xzr
  414fa0:	cmp	x8, #0x0
  414fa4:	ldr	x8, [sp, #48]
  414fa8:	csel	x5, x8, x9, ne  // ne = any
  414fac:	ldr	x6, [sp, #96]
  414fb0:	ldr	x10, [sp, #56]
  414fb4:	ldr	x11, [x10, #160]
  414fb8:	ldr	x2, [sp, #40]
  414fbc:	mov	w3, #0x17a                 	// #378
  414fc0:	ldr	x4, [sp, #32]
  414fc4:	mov	x7, x9
  414fc8:	mov	x12, sp
  414fcc:	str	x9, [x12]
  414fd0:	mov	x9, sp
  414fd4:	adrp	x12, 465000 <on_inotify.__assert_in_set+0x1540>
  414fd8:	add	x12, x12, #0x2bf
  414fdc:	str	x12, [x9, #8]
  414fe0:	mov	x9, sp
  414fe4:	str	x11, [x9, #16]
  414fe8:	bl	40a870 <log_object_internal@plt>
  414fec:	str	w0, [sp, #76]
  414ff0:	ldr	w13, [sp, #76]
  414ff4:	stur	w13, [x29, #-4]
  414ff8:	mov	w13, #0x1                   	// #1
  414ffc:	stur	w13, [x29, #-48]
  415000:	b	415038 <worker_lock_block_device+0x95c>
  415004:	ldur	w8, [x29, #-28]
  415008:	str	w8, [sp, #72]
  41500c:	mov	w8, #0xffffffff            	// #-1
  415010:	stur	w8, [x29, #-28]
  415014:	ldr	w8, [sp, #72]
  415018:	str	w8, [sp, #68]
  41501c:	ldr	w8, [sp, #68]
  415020:	ldr	x9, [sp, #56]
  415024:	ldr	x10, [x9, #176]
  415028:	str	w8, [x10]
  41502c:	mov	w8, #0x1                   	// #1
  415030:	stur	w8, [x29, #-4]
  415034:	stur	w8, [x29, #-48]
  415038:	sub	x0, x29, #0x1c
  41503c:	bl	4146b4 <closep>
  415040:	ldur	w0, [x29, #-4]
  415044:	ldr	x28, [sp, #432]
  415048:	ldp	x29, x30, [sp, #416]
  41504c:	add	sp, sp, #0x1c0
  415050:	ret

0000000000415054 <worker_freep>:
  415054:	sub	sp, sp, #0x20
  415058:	stp	x29, x30, [sp, #16]
  41505c:	add	x29, sp, #0x10
  415060:	str	x0, [sp, #8]
  415064:	ldr	x8, [sp, #8]
  415068:	ldr	x8, [x8]
  41506c:	cbz	x8, 41507c <worker_freep+0x28>
  415070:	ldr	x8, [sp, #8]
  415074:	ldr	x0, [x8]
  415078:	bl	411a38 <worker_free>
  41507c:	ldp	x29, x30, [sp, #16]
  415080:	add	sp, sp, #0x20
  415084:	ret

0000000000415088 <__unique_prefix_static_free_wrapper4>:
  415088:	sub	sp, sp, #0x20
  41508c:	stp	x29, x30, [sp, #16]
  415090:	add	x29, sp, #0x10
  415094:	str	x0, [sp, #8]
  415098:	ldr	x8, [sp, #8]
  41509c:	str	x8, [sp]
  4150a0:	ldr	x0, [sp]
  4150a4:	bl	411a38 <worker_free>
  4150a8:	ldp	x29, x30, [sp, #16]
  4150ac:	add	sp, sp, #0x20
  4150b0:	ret

00000000004150b4 <isempty>:
  4150b4:	sub	sp, sp, #0x10
  4150b8:	str	x0, [sp, #8]
  4150bc:	ldr	x8, [sp, #8]
  4150c0:	mov	w9, #0x1                   	// #1
  4150c4:	str	w9, [sp, #4]
  4150c8:	cbz	x8, 4150e4 <isempty+0x30>
  4150cc:	ldr	x8, [sp, #8]
  4150d0:	ldrb	w9, [x8]
  4150d4:	cmp	w9, #0x0
  4150d8:	cset	w9, ne  // ne = any
  4150dc:	eor	w9, w9, #0x1
  4150e0:	str	w9, [sp, #4]
  4150e4:	ldr	w8, [sp, #4]
  4150e8:	and	w0, w8, #0x1
  4150ec:	add	sp, sp, #0x10
  4150f0:	ret

00000000004150f4 <synthesize_change>:
  4150f4:	sub	sp, sp, #0x90
  4150f8:	stp	x29, x30, [sp, #128]
  4150fc:	add	x29, sp, #0x80
  415100:	sub	x1, x29, #0x18
  415104:	stur	x0, [x29, #-16]
  415108:	ldur	x0, [x29, #-16]
  41510c:	bl	40aa10 <sd_device_get_subsystem@plt>
  415110:	stur	w0, [x29, #-60]
  415114:	ldur	w8, [x29, #-60]
  415118:	cmp	w8, #0x0
  41511c:	cset	w8, ge  // ge = tcont
  415120:	tbnz	w8, #0, 415130 <synthesize_change+0x3c>
  415124:	ldur	w8, [x29, #-60]
  415128:	stur	w8, [x29, #-4]
  41512c:	b	4154e0 <synthesize_change+0x3ec>
  415130:	ldur	x0, [x29, #-16]
  415134:	sub	x1, x29, #0x20
  415138:	bl	40a860 <sd_device_get_sysname@plt>
  41513c:	stur	w0, [x29, #-60]
  415140:	ldur	w8, [x29, #-60]
  415144:	cmp	w8, #0x0
  415148:	cset	w8, ge  // ge = tcont
  41514c:	tbnz	w8, #0, 41515c <synthesize_change+0x68>
  415150:	ldur	w8, [x29, #-60]
  415154:	stur	w8, [x29, #-4]
  415158:	b	4154e0 <synthesize_change+0x3ec>
  41515c:	ldur	x0, [x29, #-16]
  415160:	sub	x1, x29, #0x28
  415164:	bl	40a930 <sd_device_get_devname@plt>
  415168:	stur	w0, [x29, #-60]
  41516c:	ldur	w8, [x29, #-60]
  415170:	cmp	w8, #0x0
  415174:	cset	w8, ge  // ge = tcont
  415178:	tbnz	w8, #0, 415188 <synthesize_change+0x94>
  41517c:	ldur	w8, [x29, #-60]
  415180:	stur	w8, [x29, #-4]
  415184:	b	4154e0 <synthesize_change+0x3ec>
  415188:	ldur	x0, [x29, #-16]
  41518c:	sub	x1, x29, #0x30
  415190:	bl	40abf0 <sd_device_get_syspath@plt>
  415194:	stur	w0, [x29, #-60]
  415198:	ldur	w8, [x29, #-60]
  41519c:	cmp	w8, #0x0
  4151a0:	cset	w8, ge  // ge = tcont
  4151a4:	tbnz	w8, #0, 4151b4 <synthesize_change+0xc0>
  4151a8:	ldur	w8, [x29, #-60]
  4151ac:	stur	w8, [x29, #-4]
  4151b0:	b	4154e0 <synthesize_change+0x3ec>
  4151b4:	ldur	x0, [x29, #-16]
  4151b8:	sub	x1, x29, #0x38
  4151bc:	bl	40abb0 <sd_device_get_devtype@plt>
  4151c0:	stur	w0, [x29, #-60]
  4151c4:	ldur	w8, [x29, #-60]
  4151c8:	cmp	w8, #0x0
  4151cc:	cset	w8, ge  // ge = tcont
  4151d0:	tbnz	w8, #0, 4151e0 <synthesize_change+0xec>
  4151d4:	ldur	w8, [x29, #-60]
  4151d8:	stur	w8, [x29, #-4]
  4151dc:	b	4154e0 <synthesize_change+0x3ec>
  4151e0:	ldur	x1, [x29, #-24]
  4151e4:	adrp	x0, 464000 <on_inotify.__assert_in_set+0x540>
  4151e8:	add	x0, x0, #0xb74
  4151ec:	bl	4154f0 <streq_ptr>
  4151f0:	tbnz	w0, #0, 4151f8 <synthesize_change+0x104>
  4151f4:	b	4154d0 <synthesize_change+0x3dc>
  4151f8:	ldur	x1, [x29, #-56]
  4151fc:	adrp	x0, 465000 <on_inotify.__assert_in_set+0x1540>
  415200:	add	x0, x0, #0x687
  415204:	bl	4154f0 <streq_ptr>
  415208:	tbnz	w0, #0, 415210 <synthesize_change+0x11c>
  41520c:	b	4154d0 <synthesize_change+0x3dc>
  415210:	ldur	x0, [x29, #-32]
  415214:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  415218:	add	x1, x1, #0x233
  41521c:	bl	40f530 <startswith>
  415220:	cbnz	x0, 4154d0 <synthesize_change+0x3dc>
  415224:	mov	x8, xzr
  415228:	str	x8, [sp, #56]
  41522c:	mov	w9, #0x0                   	// #0
  415230:	strb	w9, [sp, #55]
  415234:	strb	w9, [sp, #54]
  415238:	ldur	x0, [x29, #-40]
  41523c:	mov	w1, #0x8800                	// #34816
  415240:	movk	w1, #0x8, lsl #16
  415244:	bl	40abd0 <open64@plt>
  415248:	str	w0, [sp, #36]
  41524c:	ldr	w9, [sp, #36]
  415250:	cmp	w9, #0x0
  415254:	cset	w9, lt  // lt = tstop
  415258:	tbnz	w9, #0, 4152b4 <synthesize_change+0x1c0>
  41525c:	ldr	w0, [sp, #36]
  415260:	mov	w1, #0x6                   	// #6
  415264:	bl	40abe0 <flock@plt>
  415268:	stur	w0, [x29, #-60]
  41526c:	ldur	w8, [x29, #-60]
  415270:	cmp	w8, #0x0
  415274:	cset	w8, lt  // lt = tstop
  415278:	tbnz	w8, #0, 415294 <synthesize_change+0x1a0>
  41527c:	ldr	w0, [sp, #36]
  415280:	mov	x1, #0x125f                	// #4703
  415284:	mov	w8, wzr
  415288:	mov	w2, w8
  41528c:	bl	40ac00 <ioctl@plt>
  415290:	stur	w0, [x29, #-60]
  415294:	ldr	w0, [sp, #36]
  415298:	bl	40ac10 <close@plt>
  41529c:	ldur	w8, [x29, #-60]
  4152a0:	cmp	w8, #0x0
  4152a4:	cset	w8, lt  // lt = tstop
  4152a8:	tbnz	w8, #0, 4152b4 <synthesize_change+0x1c0>
  4152ac:	mov	w8, #0x1                   	// #1
  4152b0:	strb	w8, [sp, #55]
  4152b4:	add	x0, sp, #0x38
  4152b8:	bl	40ac20 <sd_device_enumerator_new@plt>
  4152bc:	stur	w0, [x29, #-60]
  4152c0:	ldur	w8, [x29, #-60]
  4152c4:	cmp	w8, #0x0
  4152c8:	cset	w8, ge  // ge = tcont
  4152cc:	tbnz	w8, #0, 4152e4 <synthesize_change+0x1f0>
  4152d0:	ldur	w8, [x29, #-60]
  4152d4:	stur	w8, [x29, #-4]
  4152d8:	mov	w8, #0x1                   	// #1
  4152dc:	str	w8, [sp, #32]
  4152e0:	b	4154b4 <synthesize_change+0x3c0>
  4152e4:	ldr	x0, [sp, #56]
  4152e8:	bl	40ac30 <sd_device_enumerator_allow_uninitialized@plt>
  4152ec:	stur	w0, [x29, #-60]
  4152f0:	ldur	w8, [x29, #-60]
  4152f4:	cmp	w8, #0x0
  4152f8:	cset	w8, ge  // ge = tcont
  4152fc:	tbnz	w8, #0, 415314 <synthesize_change+0x220>
  415300:	ldur	w8, [x29, #-60]
  415304:	stur	w8, [x29, #-4]
  415308:	mov	w8, #0x1                   	// #1
  41530c:	str	w8, [sp, #32]
  415310:	b	4154b4 <synthesize_change+0x3c0>
  415314:	ldr	x0, [sp, #56]
  415318:	ldur	x1, [x29, #-16]
  41531c:	bl	40ac40 <sd_device_enumerator_add_match_parent@plt>
  415320:	stur	w0, [x29, #-60]
  415324:	ldur	w8, [x29, #-60]
  415328:	cmp	w8, #0x0
  41532c:	cset	w8, ge  // ge = tcont
  415330:	tbnz	w8, #0, 415348 <synthesize_change+0x254>
  415334:	ldur	w8, [x29, #-60]
  415338:	stur	w8, [x29, #-4]
  41533c:	mov	w8, #0x1                   	// #1
  415340:	str	w8, [sp, #32]
  415344:	b	4154b4 <synthesize_change+0x3c0>
  415348:	ldr	x0, [sp, #56]
  41534c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  415350:	add	x1, x1, #0xb74
  415354:	mov	w2, #0x1                   	// #1
  415358:	bl	40ac50 <sd_device_enumerator_add_match_subsystem@plt>
  41535c:	stur	w0, [x29, #-60]
  415360:	ldur	w8, [x29, #-60]
  415364:	cmp	w8, #0x0
  415368:	cset	w8, ge  // ge = tcont
  41536c:	tbnz	w8, #0, 415384 <synthesize_change+0x290>
  415370:	ldur	w8, [x29, #-60]
  415374:	stur	w8, [x29, #-4]
  415378:	mov	w8, #0x1                   	// #1
  41537c:	str	w8, [sp, #32]
  415380:	b	4154b4 <synthesize_change+0x3c0>
  415384:	ldr	x0, [sp, #56]
  415388:	bl	40ac60 <sd_device_enumerator_get_device_first@plt>
  41538c:	str	x0, [sp, #40]
  415390:	ldr	x8, [sp, #40]
  415394:	cbz	x8, 4153e4 <synthesize_change+0x2f0>
  415398:	ldr	x0, [sp, #40]
  41539c:	add	x1, sp, #0x18
  4153a0:	bl	40abb0 <sd_device_get_devtype@plt>
  4153a4:	cmp	w0, #0x0
  4153a8:	cset	w8, lt  // lt = tstop
  4153ac:	tbnz	w8, #0, 4153c4 <synthesize_change+0x2d0>
  4153b0:	ldr	x1, [sp, #24]
  4153b4:	adrp	x0, 465000 <on_inotify.__assert_in_set+0x1540>
  4153b8:	add	x0, x0, #0x259
  4153bc:	bl	40aa20 <strcmp@plt>
  4153c0:	cbz	w0, 4153c8 <synthesize_change+0x2d4>
  4153c4:	b	4153d4 <synthesize_change+0x2e0>
  4153c8:	mov	w8, #0x1                   	// #1
  4153cc:	strb	w8, [sp, #54]
  4153d0:	b	4153e4 <synthesize_change+0x2f0>
  4153d4:	ldr	x0, [sp, #56]
  4153d8:	bl	40ac70 <sd_device_enumerator_get_device_next@plt>
  4153dc:	str	x0, [sp, #40]
  4153e0:	b	415390 <synthesize_change+0x29c>
  4153e4:	ldrb	w8, [sp, #55]
  4153e8:	tbnz	w8, #0, 4153f0 <synthesize_change+0x2fc>
  4153ec:	b	41540c <synthesize_change+0x318>
  4153f0:	ldrb	w8, [sp, #54]
  4153f4:	tbnz	w8, #0, 4153fc <synthesize_change+0x308>
  4153f8:	b	41540c <synthesize_change+0x318>
  4153fc:	stur	wzr, [x29, #-4]
  415400:	mov	w8, #0x1                   	// #1
  415404:	str	w8, [sp, #32]
  415408:	b	4154b4 <synthesize_change+0x3c0>
  41540c:	ldur	x0, [x29, #-16]
  415410:	ldur	x1, [x29, #-48]
  415414:	bl	41555c <synthesize_change_one>
  415418:	ldr	x8, [sp, #56]
  41541c:	mov	x0, x8
  415420:	bl	40ac60 <sd_device_enumerator_get_device_first@plt>
  415424:	str	x0, [sp, #40]
  415428:	ldr	x8, [sp, #40]
  41542c:	cbz	x8, 4154b0 <synthesize_change+0x3bc>
  415430:	ldr	x0, [sp, #40]
  415434:	add	x1, sp, #0x10
  415438:	bl	40abb0 <sd_device_get_devtype@plt>
  41543c:	cmp	w0, #0x0
  415440:	cset	w8, lt  // lt = tstop
  415444:	tbnz	w8, #0, 41545c <synthesize_change+0x368>
  415448:	ldr	x1, [sp, #16]
  41544c:	adrp	x0, 465000 <on_inotify.__assert_in_set+0x1540>
  415450:	add	x0, x0, #0x259
  415454:	bl	40aa20 <strcmp@plt>
  415458:	cbz	w0, 415460 <synthesize_change+0x36c>
  41545c:	b	4154a0 <synthesize_change+0x3ac>
  415460:	ldr	x0, [sp, #40]
  415464:	add	x1, sp, #0x8
  415468:	bl	40a930 <sd_device_get_devname@plt>
  41546c:	cmp	w0, #0x0
  415470:	cset	w8, lt  // lt = tstop
  415474:	tbnz	w8, #0, 415490 <synthesize_change+0x39c>
  415478:	ldr	x0, [sp, #40]
  41547c:	mov	x1, sp
  415480:	bl	40abf0 <sd_device_get_syspath@plt>
  415484:	cmp	w0, #0x0
  415488:	cset	w8, ge  // ge = tcont
  41548c:	tbnz	w8, #0, 415494 <synthesize_change+0x3a0>
  415490:	b	4154a0 <synthesize_change+0x3ac>
  415494:	ldur	x0, [x29, #-16]
  415498:	ldr	x1, [sp]
  41549c:	bl	41555c <synthesize_change_one>
  4154a0:	ldr	x0, [sp, #56]
  4154a4:	bl	40ac70 <sd_device_enumerator_get_device_next@plt>
  4154a8:	str	x0, [sp, #40]
  4154ac:	b	415428 <synthesize_change+0x334>
  4154b0:	str	wzr, [sp, #32]
  4154b4:	add	x0, sp, #0x38
  4154b8:	bl	415528 <sd_device_enumerator_unrefp>
  4154bc:	ldr	w8, [sp, #32]
  4154c0:	cbz	w8, 4154cc <synthesize_change+0x3d8>
  4154c4:	b	4154c8 <synthesize_change+0x3d4>
  4154c8:	b	4154e0 <synthesize_change+0x3ec>
  4154cc:	b	4154dc <synthesize_change+0x3e8>
  4154d0:	ldur	x0, [x29, #-16]
  4154d4:	ldur	x1, [x29, #-48]
  4154d8:	bl	41555c <synthesize_change_one>
  4154dc:	stur	wzr, [x29, #-4]
  4154e0:	ldur	w0, [x29, #-4]
  4154e4:	ldp	x29, x30, [sp, #128]
  4154e8:	add	sp, sp, #0x90
  4154ec:	ret

00000000004154f0 <streq_ptr>:
  4154f0:	sub	sp, sp, #0x20
  4154f4:	stp	x29, x30, [sp, #16]
  4154f8:	add	x29, sp, #0x10
  4154fc:	str	x0, [sp, #8]
  415500:	str	x1, [sp]
  415504:	ldr	x0, [sp, #8]
  415508:	ldr	x1, [sp]
  41550c:	bl	40ac80 <strcmp_ptr@plt>
  415510:	cmp	w0, #0x0
  415514:	cset	w8, eq  // eq = none
  415518:	and	w0, w8, #0x1
  41551c:	ldp	x29, x30, [sp, #16]
  415520:	add	sp, sp, #0x20
  415524:	ret

0000000000415528 <sd_device_enumerator_unrefp>:
  415528:	sub	sp, sp, #0x20
  41552c:	stp	x29, x30, [sp, #16]
  415530:	add	x29, sp, #0x10
  415534:	str	x0, [sp, #8]
  415538:	ldr	x8, [sp, #8]
  41553c:	ldr	x8, [x8]
  415540:	cbz	x8, 415550 <sd_device_enumerator_unrefp+0x28>
  415544:	ldr	x8, [sp, #8]
  415548:	ldr	x0, [x8]
  41554c:	bl	40ac90 <sd_device_enumerator_unref@plt>
  415550:	ldp	x29, x30, [sp, #16]
  415554:	add	sp, sp, #0x20
  415558:	ret

000000000041555c <synthesize_change_one>:
  41555c:	stp	x29, x30, [sp, #-16]!
  415560:	mov	x29, sp
  415564:	sub	sp, sp, #0xd0
  415568:	sub	x8, x29, #0x20
  41556c:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  415570:	add	x9, x9, #0x68c
  415574:	adrp	x10, 463000 <dhcp_lease_set_client_id+0xc4>
  415578:	add	x10, x10, #0xae0
  41557c:	add	x10, x10, #0x3
  415580:	sub	x11, x29, #0x38
  415584:	str	x0, [x8, #16]
  415588:	str	x1, [x8, #8]
  41558c:	ldr	x12, [x8, #8]
  415590:	stur	x12, [x29, #-56]
  415594:	str	x9, [x11, #8]
  415598:	stur	xzr, [x29, #-80]
  41559c:	stur	xzr, [x29, #-88]
  4155a0:	stur	x8, [x29, #-184]
  4155a4:	stur	x10, [x29, #-192]
  4155a8:	ldur	x8, [x29, #-88]
  4155ac:	mov	w9, #0x0                   	// #0
  4155b0:	cmp	x8, #0x2
  4155b4:	stur	w9, [x29, #-196]
  4155b8:	b.cs	4155e0 <synthesize_change_one+0x84>  // b.hs, b.nlast
  4155bc:	ldur	x8, [x29, #-88]
  4155c0:	mov	x9, #0x8                   	// #8
  4155c4:	mul	x8, x9, x8
  4155c8:	sub	x9, x29, #0x38
  4155cc:	add	x8, x9, x8
  4155d0:	ldr	x8, [x8]
  4155d4:	cmp	x8, #0x0
  4155d8:	cset	w10, ne  // ne = any
  4155dc:	stur	w10, [x29, #-196]
  4155e0:	ldur	w8, [x29, #-196]
  4155e4:	tbnz	w8, #0, 4155ec <synthesize_change_one+0x90>
  4155e8:	b	415624 <synthesize_change_one+0xc8>
  4155ec:	ldur	x8, [x29, #-88]
  4155f0:	mov	x9, #0x8                   	// #8
  4155f4:	mul	x8, x9, x8
  4155f8:	sub	x9, x29, #0x38
  4155fc:	add	x8, x9, x8
  415600:	ldr	x0, [x8]
  415604:	bl	40a800 <strlen@plt>
  415608:	ldur	x8, [x29, #-80]
  41560c:	add	x8, x8, x0
  415610:	stur	x8, [x29, #-80]
  415614:	ldur	x8, [x29, #-88]
  415618:	add	x8, x8, #0x1
  41561c:	stur	x8, [x29, #-88]
  415620:	b	4155a8 <synthesize_change_one+0x4c>
  415624:	ldur	x8, [x29, #-80]
  415628:	add	x8, x8, #0x1
  41562c:	stur	x8, [x29, #-96]
  415630:	ldur	x1, [x29, #-96]
  415634:	mov	x0, #0x1                   	// #1
  415638:	bl	40f60c <size_multiply_overflow>
  41563c:	mov	w8, #0x1                   	// #1
  415640:	eor	w9, w0, #0x1
  415644:	eor	w9, w9, w8
  415648:	eor	w9, w9, w8
  41564c:	eor	w8, w9, w8
  415650:	and	w8, w8, #0x1
  415654:	mov	w1, w8
  415658:	sxtw	x10, w1
  41565c:	cbz	x10, 415680 <synthesize_change_one+0x124>
  415660:	mov	w0, #0x1                   	// #1
  415664:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  415668:	add	x1, x1, #0x694
  41566c:	ldur	x2, [x29, #-192]
  415670:	mov	w3, #0x442                 	// #1090
  415674:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  415678:	add	x4, x4, #0x6bf
  41567c:	bl	40a540 <log_assert_failed_realm@plt>
  415680:	ldur	x8, [x29, #-96]
  415684:	mov	x9, #0x1                   	// #1
  415688:	mul	x8, x9, x8
  41568c:	cmp	x8, #0x400, lsl #12
  415690:	cset	w10, ls  // ls = plast
  415694:	mov	w11, #0x1                   	// #1
  415698:	eor	w10, w10, #0x1
  41569c:	eor	w10, w10, w11
  4156a0:	eor	w10, w10, w11
  4156a4:	and	w10, w10, #0x1
  4156a8:	mov	w0, w10
  4156ac:	sxtw	x8, w0
  4156b0:	cbz	x8, 4156d4 <synthesize_change_one+0x178>
  4156b4:	mov	w0, #0x1                   	// #1
  4156b8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4156bc:	add	x1, x1, #0x6f4
  4156c0:	ldur	x2, [x29, #-192]
  4156c4:	mov	w3, #0x442                 	// #1090
  4156c8:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4156cc:	add	x4, x4, #0x6bf
  4156d0:	bl	40a540 <log_assert_failed_realm@plt>
  4156d4:	ldur	x8, [x29, #-96]
  4156d8:	mov	x9, #0x1                   	// #1
  4156dc:	mul	x8, x9, x8
  4156e0:	mul	x8, x8, x9
  4156e4:	add	x8, x8, #0xf
  4156e8:	and	x8, x8, #0xfffffffffffffff0
  4156ec:	mov	x9, sp
  4156f0:	subs	x8, x9, x8
  4156f4:	mov	sp, x8
  4156f8:	stur	x8, [x29, #-104]
  4156fc:	ldur	x8, [x29, #-104]
  415700:	stur	x8, [x29, #-64]
  415704:	stur	x8, [x29, #-72]
  415708:	stur	xzr, [x29, #-88]
  41570c:	ldur	x8, [x29, #-88]
  415710:	mov	w9, #0x0                   	// #0
  415714:	cmp	x8, #0x2
  415718:	stur	w9, [x29, #-200]
  41571c:	b.cs	415744 <synthesize_change_one+0x1e8>  // b.hs, b.nlast
  415720:	ldur	x8, [x29, #-88]
  415724:	mov	x9, #0x8                   	// #8
  415728:	mul	x8, x9, x8
  41572c:	sub	x9, x29, #0x38
  415730:	add	x8, x9, x8
  415734:	ldr	x8, [x8]
  415738:	cmp	x8, #0x0
  41573c:	cset	w10, ne  // ne = any
  415740:	stur	w10, [x29, #-200]
  415744:	ldur	w8, [x29, #-200]
  415748:	tbnz	w8, #0, 415750 <synthesize_change_one+0x1f4>
  41574c:	b	415784 <synthesize_change_one+0x228>
  415750:	ldur	x0, [x29, #-72]
  415754:	ldur	x8, [x29, #-88]
  415758:	mov	x9, #0x8                   	// #8
  41575c:	mul	x8, x9, x8
  415760:	sub	x9, x29, #0x38
  415764:	add	x8, x9, x8
  415768:	ldr	x1, [x8]
  41576c:	bl	40aca0 <stpcpy@plt>
  415770:	stur	x0, [x29, #-72]
  415774:	ldur	x8, [x29, #-88]
  415778:	add	x8, x8, #0x1
  41577c:	stur	x8, [x29, #-88]
  415780:	b	41570c <synthesize_change_one+0x1b0>
  415784:	ldur	x8, [x29, #-72]
  415788:	mov	w9, #0x0                   	// #0
  41578c:	strb	w9, [x8]
  415790:	ldur	x8, [x29, #-64]
  415794:	stur	x8, [x29, #-112]
  415798:	ldur	x8, [x29, #-112]
  41579c:	ldur	x10, [x29, #-184]
  4157a0:	str	x8, [x10]
  4157a4:	mov	x8, xzr
  4157a8:	stur	x8, [x29, #-120]
  4157ac:	ldr	x8, [x10, #16]
  4157b0:	stur	x8, [x29, #-128]
  4157b4:	mov	w9, #0x7                   	// #7
  4157b8:	stur	w9, [x29, #-132]
  4157bc:	stur	wzr, [x29, #-136]
  4157c0:	ldur	x8, [x29, #-128]
  4157c4:	cbz	x8, 415804 <synthesize_change_one+0x2a8>
  4157c8:	mov	w0, #0x1                   	// #1
  4157cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  4157d0:	ldur	w8, [x29, #-132]
  4157d4:	cmp	w0, w8
  4157d8:	cset	w8, ge  // ge = tcont
  4157dc:	mov	w9, #0x1                   	// #1
  4157e0:	eor	w8, w8, #0x1
  4157e4:	eor	w8, w8, w9
  4157e8:	and	w8, w8, #0x1
  4157ec:	mov	w1, w8
  4157f0:	sxtw	x10, w1
  4157f4:	cbz	x10, 415804 <synthesize_change_one+0x2a8>
  4157f8:	ldur	x0, [x29, #-128]
  4157fc:	sub	x1, x29, #0x78
  415800:	bl	40a860 <sd_device_get_sysname@plt>
  415804:	ldur	w0, [x29, #-132]
  415808:	ldur	w1, [x29, #-136]
  41580c:	ldur	x8, [x29, #-120]
  415810:	mov	x9, xzr
  415814:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  415818:	add	x10, x10, #0xa46
  41581c:	cmp	x8, #0x0
  415820:	csel	x5, x10, x9, ne  // ne = any
  415824:	ldur	x6, [x29, #-120]
  415828:	ldur	x8, [x29, #-184]
  41582c:	ldr	x10, [x8, #8]
  415830:	sub	sp, sp, #0x20
  415834:	ldur	x2, [x29, #-192]
  415838:	mov	w3, #0x443                 	// #1091
  41583c:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  415840:	add	x4, x4, #0x713
  415844:	mov	x7, x9
  415848:	mov	x11, sp
  41584c:	str	x9, [x11]
  415850:	mov	x9, sp
  415854:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  415858:	add	x11, x11, #0x729
  41585c:	str	x11, [x9, #8]
  415860:	mov	x9, sp
  415864:	str	x10, [x9, #16]
  415868:	bl	40a870 <log_object_internal@plt>
  41586c:	add	sp, sp, #0x20
  415870:	stur	w0, [x29, #-140]
  415874:	ldur	x8, [x29, #-184]
  415878:	ldr	x0, [x8]
  41587c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  415880:	add	x1, x1, #0x757
  415884:	mov	w2, #0x20                  	// #32
  415888:	bl	415998 <write_string_file>
  41588c:	stur	w0, [x29, #-36]
  415890:	ldur	w12, [x29, #-36]
  415894:	cmp	w12, #0x0
  415898:	cset	w12, ge  // ge = tcont
  41589c:	tbnz	w12, #0, 415984 <synthesize_change_one+0x428>
  4158a0:	mov	x8, xzr
  4158a4:	stur	x8, [x29, #-152]
  4158a8:	ldur	x8, [x29, #-184]
  4158ac:	ldr	x9, [x8, #16]
  4158b0:	stur	x9, [x29, #-160]
  4158b4:	mov	w10, #0x7                   	// #7
  4158b8:	stur	w10, [x29, #-164]
  4158bc:	ldur	w10, [x29, #-36]
  4158c0:	stur	w10, [x29, #-168]
  4158c4:	ldur	x9, [x29, #-160]
  4158c8:	cbz	x9, 415908 <synthesize_change_one+0x3ac>
  4158cc:	mov	w0, #0x1                   	// #1
  4158d0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4158d4:	ldur	w8, [x29, #-164]
  4158d8:	cmp	w0, w8
  4158dc:	cset	w8, ge  // ge = tcont
  4158e0:	mov	w9, #0x1                   	// #1
  4158e4:	eor	w8, w8, #0x1
  4158e8:	eor	w8, w8, w9
  4158ec:	and	w8, w8, #0x1
  4158f0:	mov	w1, w8
  4158f4:	sxtw	x10, w1
  4158f8:	cbz	x10, 415908 <synthesize_change_one+0x3ac>
  4158fc:	ldur	x0, [x29, #-160]
  415900:	sub	x1, x29, #0x98
  415904:	bl	40a860 <sd_device_get_sysname@plt>
  415908:	ldur	w0, [x29, #-164]
  41590c:	ldur	w1, [x29, #-168]
  415910:	ldur	x8, [x29, #-152]
  415914:	mov	x9, xzr
  415918:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41591c:	add	x10, x10, #0xa46
  415920:	cmp	x8, #0x0
  415924:	csel	x5, x10, x9, ne  // ne = any
  415928:	ldur	x6, [x29, #-152]
  41592c:	ldur	x8, [x29, #-184]
  415930:	ldr	x10, [x8]
  415934:	sub	sp, sp, #0x20
  415938:	ldur	x2, [x29, #-192]
  41593c:	mov	w3, #0x446                 	// #1094
  415940:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  415944:	add	x4, x4, #0x713
  415948:	mov	x7, x9
  41594c:	mov	x11, sp
  415950:	str	x9, [x11]
  415954:	mov	x9, sp
  415958:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41595c:	add	x11, x11, #0x75e
  415960:	str	x11, [x9, #8]
  415964:	mov	x9, sp
  415968:	str	x10, [x9, #16]
  41596c:	bl	40a870 <log_object_internal@plt>
  415970:	add	sp, sp, #0x20
  415974:	stur	w0, [x29, #-172]
  415978:	ldur	w12, [x29, #-172]
  41597c:	stur	w12, [x29, #-4]
  415980:	b	415988 <synthesize_change_one+0x42c>
  415984:	stur	wzr, [x29, #-4]
  415988:	ldur	w0, [x29, #-4]
  41598c:	mov	sp, x29
  415990:	ldp	x29, x30, [sp], #16
  415994:	ret

0000000000415998 <write_string_file>:
  415998:	sub	sp, sp, #0x30
  41599c:	stp	x29, x30, [sp, #32]
  4159a0:	add	x29, sp, #0x20
  4159a4:	mov	x8, xzr
  4159a8:	stur	x0, [x29, #-8]
  4159ac:	str	x1, [sp, #16]
  4159b0:	str	w2, [sp, #12]
  4159b4:	ldur	x0, [x29, #-8]
  4159b8:	ldr	x1, [sp, #16]
  4159bc:	ldr	w2, [sp, #12]
  4159c0:	mov	x3, x8
  4159c4:	bl	40acb0 <write_string_file_ts@plt>
  4159c8:	ldp	x29, x30, [sp, #32]
  4159cc:	add	sp, sp, #0x30
  4159d0:	ret

00000000004159d4 <event_queue_insert>:
  4159d4:	sub	sp, sp, #0x1c0
  4159d8:	stp	x29, x30, [sp, #416]
  4159dc:	str	x28, [sp, #432]
  4159e0:	add	x29, sp, #0x1a0
  4159e4:	sub	x8, x29, #0x98
  4159e8:	mov	x9, xzr
  4159ec:	adrp	x10, 463000 <dhcp_lease_set_client_id+0xc4>
  4159f0:	add	x10, x10, #0xae0
  4159f4:	add	x10, x10, #0x3
  4159f8:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  4159fc:	add	x11, x11, #0x7f0
  415a00:	str	x0, [x8, #136]
  415a04:	str	x1, [x8, #128]
  415a08:	str	x9, [x8, #120]
  415a0c:	str	x8, [sp, #144]
  415a10:	str	x10, [sp, #136]
  415a14:	str	x11, [sp, #128]
  415a18:	ldr	x8, [sp, #144]
  415a1c:	ldr	x9, [x8, #136]
  415a20:	cmp	x9, #0x0
  415a24:	cset	w10, ne  // ne = any
  415a28:	mov	w11, #0x1                   	// #1
  415a2c:	eor	w10, w10, #0x1
  415a30:	eor	w10, w10, w11
  415a34:	eor	w10, w10, w11
  415a38:	and	w10, w10, #0x1
  415a3c:	mov	w0, w10
  415a40:	sxtw	x9, w0
  415a44:	cbz	x9, 415a64 <event_queue_insert+0x90>
  415a48:	mov	w0, #0x1                   	// #1
  415a4c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  415a50:	add	x1, x1, #0xcb6
  415a54:	ldr	x2, [sp, #136]
  415a58:	mov	w3, #0x25b                 	// #603
  415a5c:	ldr	x4, [sp, #128]
  415a60:	bl	40a540 <log_assert_failed_realm@plt>
  415a64:	ldr	x8, [sp, #144]
  415a68:	ldr	x9, [x8, #128]
  415a6c:	cmp	x9, #0x0
  415a70:	cset	w10, ne  // ne = any
  415a74:	mov	w11, #0x1                   	// #1
  415a78:	eor	w10, w10, #0x1
  415a7c:	eor	w10, w10, w11
  415a80:	eor	w10, w10, w11
  415a84:	and	w10, w10, #0x1
  415a88:	mov	w0, w10
  415a8c:	sxtw	x9, w0
  415a90:	cbz	x9, 415ab0 <event_queue_insert+0xdc>
  415a94:	mov	w0, #0x1                   	// #1
  415a98:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  415a9c:	add	x1, x1, #0xee1
  415aa0:	ldr	x2, [sp, #136]
  415aa4:	mov	w3, #0x25c                 	// #604
  415aa8:	ldr	x4, [sp, #128]
  415aac:	bl	40a540 <log_assert_failed_realm@plt>
  415ab0:	ldr	x8, [sp, #144]
  415ab4:	ldr	x9, [x8, #136]
  415ab8:	ldr	w10, [x9, #32]
  415abc:	str	w10, [sp, #124]
  415ac0:	bl	40a650 <getpid_cached@plt>
  415ac4:	ldr	w10, [sp, #124]
  415ac8:	cmp	w10, w0
  415acc:	cset	w11, eq  // eq = none
  415ad0:	mov	w12, #0x1                   	// #1
  415ad4:	eor	w11, w11, #0x1
  415ad8:	eor	w11, w11, w12
  415adc:	eor	w11, w11, w12
  415ae0:	and	w11, w11, #0x1
  415ae4:	mov	w1, w11
  415ae8:	sxtw	x8, w1
  415aec:	cbz	x8, 415b0c <event_queue_insert+0x138>
  415af0:	mov	w0, #0x1                   	// #1
  415af4:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  415af8:	add	x1, x1, #0x81f
  415afc:	ldr	x2, [sp, #136]
  415b00:	mov	w3, #0x25f                 	// #607
  415b04:	ldr	x4, [sp, #128]
  415b08:	bl	40a540 <log_assert_failed_realm@plt>
  415b0c:	ldr	x8, [sp, #144]
  415b10:	ldr	x0, [x8, #128]
  415b14:	sub	x1, x29, #0x38
  415b18:	bl	40ab40 <device_get_seqnum@plt>
  415b1c:	stur	w0, [x29, #-60]
  415b20:	ldur	w9, [x29, #-60]
  415b24:	cmp	w9, #0x0
  415b28:	cset	w9, ge  // ge = tcont
  415b2c:	tbnz	w9, #0, 415b44 <event_queue_insert+0x170>
  415b30:	ldur	w8, [x29, #-60]
  415b34:	stur	w8, [x29, #-4]
  415b38:	mov	w8, #0x1                   	// #1
  415b3c:	stur	w8, [x29, #-64]
  415b40:	b	415fc4 <event_queue_insert+0x5f0>
  415b44:	ldr	x8, [sp, #144]
  415b48:	ldr	x0, [x8, #128]
  415b4c:	sub	x1, x29, #0x2c
  415b50:	bl	40ab50 <device_get_action@plt>
  415b54:	stur	w0, [x29, #-60]
  415b58:	ldur	w9, [x29, #-60]
  415b5c:	cmp	w9, #0x0
  415b60:	cset	w9, ge  // ge = tcont
  415b64:	tbnz	w9, #0, 415b7c <event_queue_insert+0x1a8>
  415b68:	ldur	w8, [x29, #-60]
  415b6c:	stur	w8, [x29, #-4]
  415b70:	mov	w8, #0x1                   	// #1
  415b74:	stur	w8, [x29, #-64]
  415b78:	b	415fc4 <event_queue_insert+0x5f0>
  415b7c:	ldr	x8, [sp, #144]
  415b80:	ldr	x0, [x8, #128]
  415b84:	sub	x1, x29, #0x20
  415b88:	bl	40acc0 <device_shallow_clone@plt>
  415b8c:	stur	w0, [x29, #-60]
  415b90:	ldur	w9, [x29, #-60]
  415b94:	cmp	w9, #0x0
  415b98:	cset	w9, ge  // ge = tcont
  415b9c:	tbnz	w9, #0, 415bb4 <event_queue_insert+0x1e0>
  415ba0:	ldur	w8, [x29, #-60]
  415ba4:	stur	w8, [x29, #-4]
  415ba8:	mov	w8, #0x1                   	// #1
  415bac:	stur	w8, [x29, #-64]
  415bb0:	b	415fc4 <event_queue_insert+0x5f0>
  415bb4:	ldr	x8, [sp, #144]
  415bb8:	ldr	x0, [x8, #120]
  415bbc:	ldr	x1, [x8, #128]
  415bc0:	bl	40acd0 <device_copy_properties@plt>
  415bc4:	stur	w0, [x29, #-60]
  415bc8:	ldur	w9, [x29, #-60]
  415bcc:	cmp	w9, #0x0
  415bd0:	cset	w9, ge  // ge = tcont
  415bd4:	tbnz	w9, #0, 415bec <event_queue_insert+0x218>
  415bd8:	ldur	w8, [x29, #-60]
  415bdc:	stur	w8, [x29, #-4]
  415be0:	mov	w8, #0x1                   	// #1
  415be4:	stur	w8, [x29, #-64]
  415be8:	b	415fc4 <event_queue_insert+0x5f0>
  415bec:	mov	x0, #0x58                  	// #88
  415bf0:	mov	x1, #0x1                   	// #1
  415bf4:	bl	40f590 <malloc_multiply>
  415bf8:	ldr	x8, [sp, #144]
  415bfc:	str	x0, [x8, #112]
  415c00:	ldr	x9, [x8, #112]
  415c04:	cbnz	x9, 415c1c <event_queue_insert+0x248>
  415c08:	mov	w8, #0xfffffff4            	// #-12
  415c0c:	stur	w8, [x29, #-4]
  415c10:	mov	w8, #0x1                   	// #1
  415c14:	stur	w8, [x29, #-64]
  415c18:	b	415fc4 <event_queue_insert+0x5f0>
  415c1c:	ldr	x8, [sp, #144]
  415c20:	ldr	x0, [x8, #112]
  415c24:	ldr	x9, [x8, #136]
  415c28:	sub	x10, x29, #0x98
  415c2c:	stur	x9, [x29, #-152]
  415c30:	mov	x9, xzr
  415c34:	str	x9, [x10, #8]
  415c38:	mov	w11, #0x1                   	// #1
  415c3c:	stur	w11, [x29, #-136]
  415c40:	ldr	x12, [x8, #128]
  415c44:	str	x0, [sp, #112]
  415c48:	mov	x0, x12
  415c4c:	str	x10, [sp, #104]
  415c50:	str	x9, [sp, #96]
  415c54:	bl	40aab0 <sd_device_ref@plt>
  415c58:	ldr	x8, [sp, #104]
  415c5c:	str	x0, [x8, #24]
  415c60:	ldr	x9, [sp, #144]
  415c64:	ldr	x10, [x9, #120]
  415c68:	stur	x10, [x29, #-160]
  415c6c:	ldr	x10, [sp, #96]
  415c70:	str	x10, [x9, #120]
  415c74:	ldur	x12, [x29, #-160]
  415c78:	stur	x12, [x29, #-168]
  415c7c:	ldur	x12, [x29, #-168]
  415c80:	str	x12, [x8, #32]
  415c84:	ldr	x12, [x9, #96]
  415c88:	str	x12, [x9, #40]
  415c8c:	str	xzr, [x9, #48]
  415c90:	str	x10, [x8, #56]
  415c94:	str	x10, [x8, #64]
  415c98:	str	x10, [x8, #72]
  415c9c:	str	x10, [x8, #80]
  415ca0:	ldr	x0, [sp, #112]
  415ca4:	mov	x1, x8
  415ca8:	mov	x2, #0x58                  	// #88
  415cac:	bl	40a600 <memcpy@plt>
  415cb0:	ldr	x8, [sp, #144]
  415cb4:	ldr	x9, [x8, #136]
  415cb8:	ldr	x9, [x9, #16]
  415cbc:	cbnz	x9, 415d60 <event_queue_insert+0x38c>
  415cc0:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  415cc4:	add	x0, x0, #0xd2c
  415cc8:	bl	40ace0 <touch@plt>
  415ccc:	stur	w0, [x29, #-60]
  415cd0:	ldur	w8, [x29, #-60]
  415cd4:	cmp	w8, #0x0
  415cd8:	cset	w8, ge  // ge = tcont
  415cdc:	tbnz	w8, #0, 415d60 <event_queue_insert+0x38c>
  415ce0:	mov	w8, #0x4                   	// #4
  415ce4:	stur	w8, [x29, #-172]
  415ce8:	ldur	w8, [x29, #-60]
  415cec:	stur	w8, [x29, #-176]
  415cf0:	mov	w8, #0x1                   	// #1
  415cf4:	stur	w8, [x29, #-180]
  415cf8:	ldur	w0, [x29, #-180]
  415cfc:	bl	40a3f0 <log_get_max_level_realm@plt>
  415d00:	ldur	w8, [x29, #-172]
  415d04:	and	w8, w8, #0x7
  415d08:	cmp	w0, w8
  415d0c:	b.lt	415d44 <event_queue_insert+0x370>  // b.tstop
  415d10:	ldur	w8, [x29, #-180]
  415d14:	ldur	w9, [x29, #-172]
  415d18:	orr	w0, w9, w8, lsl #10
  415d1c:	ldur	w1, [x29, #-176]
  415d20:	ldr	x2, [sp, #136]
  415d24:	mov	w3, #0x283                 	// #643
  415d28:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  415d2c:	add	x4, x4, #0x83f
  415d30:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  415d34:	add	x5, x5, #0x852
  415d38:	bl	40a400 <log_internal_realm@plt>
  415d3c:	str	w0, [sp, #92]
  415d40:	b	415d58 <event_queue_insert+0x384>
  415d44:	ldur	w0, [x29, #-176]
  415d48:	bl	40a410 <abs@plt>
  415d4c:	mov	w8, wzr
  415d50:	subs	w8, w8, w0, uxtb
  415d54:	str	w8, [sp, #92]
  415d58:	ldr	w8, [sp, #92]
  415d5c:	stur	w8, [x29, #-184]
  415d60:	ldr	x8, [sp, #144]
  415d64:	ldr	x9, [x8, #136]
  415d68:	add	x9, x9, #0x10
  415d6c:	stur	x9, [x29, #-192]
  415d70:	ldur	x8, [x29, #-192]
  415d74:	ldr	x8, [x8]
  415d78:	str	x8, [sp, #208]
  415d7c:	ldr	x8, [sp, #208]
  415d80:	cbnz	x8, 415d90 <event_queue_insert+0x3bc>
  415d84:	mov	x8, xzr
  415d88:	stur	x8, [x29, #-200]
  415d8c:	b	415db4 <event_queue_insert+0x3e0>
  415d90:	ldr	x8, [sp, #208]
  415d94:	ldr	x8, [x8, #72]
  415d98:	cbz	x8, 415dac <event_queue_insert+0x3d8>
  415d9c:	ldr	x8, [sp, #208]
  415da0:	ldr	x8, [x8, #72]
  415da4:	str	x8, [sp, #208]
  415da8:	b	415d90 <event_queue_insert+0x3bc>
  415dac:	ldr	x8, [sp, #208]
  415db0:	stur	x8, [x29, #-200]
  415db4:	ldur	x8, [x29, #-192]
  415db8:	str	x8, [sp, #200]
  415dbc:	ldur	x8, [x29, #-200]
  415dc0:	str	x8, [sp, #192]
  415dc4:	ldr	x8, [sp, #144]
  415dc8:	ldr	x9, [x8, #112]
  415dcc:	str	x9, [sp, #184]
  415dd0:	ldr	x8, [sp, #184]
  415dd4:	cmp	x8, #0x0
  415dd8:	cset	w9, ne  // ne = any
  415ddc:	mov	w10, #0x1                   	// #1
  415de0:	eor	w9, w9, #0x1
  415de4:	eor	w9, w9, w10
  415de8:	eor	w9, w9, w10
  415dec:	and	w9, w9, #0x1
  415df0:	mov	w0, w9
  415df4:	sxtw	x8, w0
  415df8:	cbz	x8, 415e18 <event_queue_insert+0x444>
  415dfc:	mov	w0, #0x1                   	// #1
  415e00:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  415e04:	add	x1, x1, #0x876
  415e08:	ldr	x2, [sp, #136]
  415e0c:	mov	w3, #0x286                 	// #646
  415e10:	ldr	x4, [sp, #128]
  415e14:	bl	40a540 <log_assert_failed_realm@plt>
  415e18:	ldr	x8, [sp, #192]
  415e1c:	cbnz	x8, 415e60 <event_queue_insert+0x48c>
  415e20:	ldr	x8, [sp, #200]
  415e24:	ldr	x8, [x8]
  415e28:	ldr	x9, [sp, #184]
  415e2c:	str	x8, [x9, #72]
  415e30:	cbz	x8, 415e44 <event_queue_insert+0x470>
  415e34:	ldr	x8, [sp, #184]
  415e38:	ldr	x9, [sp, #184]
  415e3c:	ldr	x9, [x9, #72]
  415e40:	str	x8, [x9, #80]
  415e44:	ldr	x8, [sp, #184]
  415e48:	mov	x9, xzr
  415e4c:	str	x9, [x8, #80]
  415e50:	ldr	x8, [sp, #184]
  415e54:	ldr	x9, [sp, #200]
  415e58:	str	x8, [x9]
  415e5c:	b	415e9c <event_queue_insert+0x4c8>
  415e60:	ldr	x8, [sp, #192]
  415e64:	ldr	x8, [x8, #72]
  415e68:	ldr	x9, [sp, #184]
  415e6c:	str	x8, [x9, #72]
  415e70:	cbz	x8, 415e84 <event_queue_insert+0x4b0>
  415e74:	ldr	x8, [sp, #184]
  415e78:	ldr	x9, [sp, #184]
  415e7c:	ldr	x9, [x9, #72]
  415e80:	str	x8, [x9, #80]
  415e84:	ldr	x8, [sp, #192]
  415e88:	ldr	x9, [sp, #184]
  415e8c:	str	x8, [x9, #80]
  415e90:	ldr	x8, [sp, #184]
  415e94:	ldr	x9, [sp, #192]
  415e98:	str	x8, [x9, #72]
  415e9c:	mov	x8, xzr
  415ea0:	str	x8, [sp, #176]
  415ea4:	ldr	x8, [sp, #144]
  415ea8:	ldr	x9, [x8, #128]
  415eac:	str	x9, [sp, #168]
  415eb0:	mov	w10, #0x7                   	// #7
  415eb4:	str	w10, [sp, #164]
  415eb8:	str	wzr, [sp, #160]
  415ebc:	ldr	x9, [sp, #168]
  415ec0:	cbz	x9, 415f00 <event_queue_insert+0x52c>
  415ec4:	mov	w0, #0x1                   	// #1
  415ec8:	bl	40a3f0 <log_get_max_level_realm@plt>
  415ecc:	ldr	w8, [sp, #164]
  415ed0:	cmp	w0, w8
  415ed4:	cset	w8, ge  // ge = tcont
  415ed8:	mov	w9, #0x1                   	// #1
  415edc:	eor	w8, w8, #0x1
  415ee0:	eor	w8, w8, w9
  415ee4:	and	w8, w8, #0x1
  415ee8:	mov	w1, w8
  415eec:	sxtw	x10, w1
  415ef0:	cbz	x10, 415f00 <event_queue_insert+0x52c>
  415ef4:	ldr	x0, [sp, #168]
  415ef8:	add	x1, sp, #0xb0
  415efc:	bl	40a860 <sd_device_get_sysname@plt>
  415f00:	ldr	w0, [sp, #164]
  415f04:	ldr	w1, [sp, #160]
  415f08:	ldr	x8, [sp, #176]
  415f0c:	mov	x9, xzr
  415f10:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  415f14:	add	x10, x10, #0xa46
  415f18:	cmp	x8, #0x0
  415f1c:	csel	x5, x10, x9, ne  // ne = any
  415f20:	ldr	x6, [sp, #176]
  415f24:	ldr	x8, [sp, #144]
  415f28:	ldr	x10, [x8, #96]
  415f2c:	ldur	w11, [x29, #-44]
  415f30:	str	w0, [sp, #88]
  415f34:	mov	w0, w11
  415f38:	str	w1, [sp, #84]
  415f3c:	str	x9, [sp, #72]
  415f40:	str	x5, [sp, #64]
  415f44:	str	x6, [sp, #56]
  415f48:	str	x10, [sp, #48]
  415f4c:	bl	40ab60 <device_action_to_string@plt>
  415f50:	ldr	w11, [sp, #88]
  415f54:	str	x0, [sp, #40]
  415f58:	mov	w0, w11
  415f5c:	ldr	w1, [sp, #84]
  415f60:	ldr	x2, [sp, #136]
  415f64:	mov	w3, #0x289                 	// #649
  415f68:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  415f6c:	add	x4, x4, #0x83f
  415f70:	ldr	x5, [sp, #64]
  415f74:	ldr	x6, [sp, #56]
  415f78:	ldr	x7, [sp, #72]
  415f7c:	mov	x8, sp
  415f80:	ldr	x9, [sp, #72]
  415f84:	str	x9, [x8]
  415f88:	mov	x8, sp
  415f8c:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  415f90:	add	x10, x10, #0x879
  415f94:	str	x10, [x8, #8]
  415f98:	mov	x8, sp
  415f9c:	ldr	x10, [sp, #48]
  415fa0:	str	x10, [x8, #16]
  415fa4:	mov	x8, sp
  415fa8:	ldr	x12, [sp, #40]
  415fac:	str	x12, [x8, #24]
  415fb0:	bl	40a870 <log_object_internal@plt>
  415fb4:	str	w0, [sp, #156]
  415fb8:	stur	wzr, [x29, #-4]
  415fbc:	mov	w11, #0x1                   	// #1
  415fc0:	stur	w11, [x29, #-64]
  415fc4:	sub	x0, x29, #0x20
  415fc8:	bl	413b3c <sd_device_unrefp>
  415fcc:	ldur	w0, [x29, #-4]
  415fd0:	ldr	x28, [sp, #432]
  415fd4:	ldp	x29, x30, [sp, #416]
  415fd8:	add	sp, sp, #0x1c0
  415fdc:	ret

0000000000415fe0 <on_kill_workers_event>:
  415fe0:	sub	sp, sp, #0x50
  415fe4:	stp	x29, x30, [sp, #64]
  415fe8:	add	x29, sp, #0x40
  415fec:	adrp	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  415ff0:	add	x8, x8, #0xae0
  415ff4:	add	x8, x8, #0x3
  415ff8:	stur	x0, [x29, #-8]
  415ffc:	stur	x1, [x29, #-16]
  416000:	stur	x2, [x29, #-24]
  416004:	ldur	x9, [x29, #-24]
  416008:	str	x9, [sp, #32]
  41600c:	str	x8, [sp, #8]
  416010:	ldr	x8, [sp, #32]
  416014:	cmp	x8, #0x0
  416018:	cset	w9, ne  // ne = any
  41601c:	mov	w10, #0x1                   	// #1
  416020:	eor	w9, w9, #0x1
  416024:	eor	w9, w9, w10
  416028:	eor	w9, w9, w10
  41602c:	and	w9, w9, #0x1
  416030:	mov	w0, w9
  416034:	sxtw	x8, w0
  416038:	cbz	x8, 41605c <on_kill_workers_event+0x7c>
  41603c:	mov	w0, #0x1                   	// #1
  416040:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  416044:	add	x1, x1, #0xcb6
  416048:	ldr	x2, [sp, #8]
  41604c:	mov	w3, #0x334                 	// #820
  416050:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416054:	add	x4, x4, #0x9c9
  416058:	bl	40a540 <log_assert_failed_realm@plt>
  41605c:	mov	w8, #0x7                   	// #7
  416060:	str	w8, [sp, #28]
  416064:	str	wzr, [sp, #24]
  416068:	mov	w8, #0x1                   	// #1
  41606c:	str	w8, [sp, #20]
  416070:	ldr	w0, [sp, #20]
  416074:	bl	40a3f0 <log_get_max_level_realm@plt>
  416078:	ldr	w8, [sp, #28]
  41607c:	and	w8, w8, #0x7
  416080:	cmp	w0, w8
  416084:	b.lt	4160bc <on_kill_workers_event+0xdc>  // b.tstop
  416088:	ldr	w8, [sp, #20]
  41608c:	ldr	w9, [sp, #28]
  416090:	orr	w0, w9, w8, lsl #10
  416094:	ldr	w1, [sp, #24]
  416098:	ldr	x2, [sp, #8]
  41609c:	mov	w3, #0x336                 	// #822
  4160a0:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4160a4:	add	x4, x4, #0xa08
  4160a8:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4160ac:	add	x5, x5, #0xa1e
  4160b0:	bl	40a400 <log_internal_realm@plt>
  4160b4:	str	w0, [sp, #4]
  4160b8:	b	4160d0 <on_kill_workers_event+0xf0>
  4160bc:	ldr	w0, [sp, #24]
  4160c0:	bl	40a410 <abs@plt>
  4160c4:	mov	w8, wzr
  4160c8:	subs	w8, w8, w0, uxtb
  4160cc:	str	w8, [sp, #4]
  4160d0:	ldr	w8, [sp, #4]
  4160d4:	str	w8, [sp, #16]
  4160d8:	ldr	x0, [sp, #32]
  4160dc:	bl	4117f8 <manager_kill_workers>
  4160e0:	mov	w0, #0x1                   	// #1
  4160e4:	ldp	x29, x30, [sp, #64]
  4160e8:	add	sp, sp, #0x50
  4160ec:	ret

00000000004160f0 <ALIGN_TO>:
  4160f0:	sub	sp, sp, #0x10
  4160f4:	str	x0, [sp, #8]
  4160f8:	str	x1, [sp]
  4160fc:	ldr	x8, [sp, #8]
  416100:	ldr	x9, [sp]
  416104:	add	x8, x8, x9
  416108:	subs	x8, x8, #0x1
  41610c:	ldr	x9, [sp]
  416110:	subs	x9, x9, #0x1
  416114:	bic	x0, x8, x9
  416118:	add	sp, sp, #0x10
  41611c:	ret

0000000000416120 <udev_ctrl_new_from_fd>:
  416120:	stp	x29, x30, [sp, #-32]!
  416124:	str	x28, [sp, #16]
  416128:	mov	x29, sp
  41612c:	sub	sp, sp, #0x1e0
  416130:	mov	w8, #0xffffffff            	// #-1
  416134:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  416138:	add	x9, x9, #0xa33
  41613c:	add	x9, x9, #0x3
  416140:	stur	x0, [x29, #-16]
  416144:	stur	w1, [x29, #-20]
  416148:	stur	w8, [x29, #-24]
  41614c:	str	x9, [sp, #56]
  416150:	ldur	x8, [x29, #-16]
  416154:	cmp	x8, #0x0
  416158:	cset	w9, ne  // ne = any
  41615c:	mov	w10, #0x1                   	// #1
  416160:	eor	w9, w9, #0x1
  416164:	eor	w9, w9, w10
  416168:	eor	w9, w9, w10
  41616c:	and	w9, w9, #0x1
  416170:	mov	w0, w9
  416174:	sxtw	x8, w0
  416178:	cbz	x8, 41619c <udev_ctrl_new_from_fd+0x7c>
  41617c:	mov	w0, #0x1                   	// #1
  416180:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  416184:	add	x1, x1, #0x2ff
  416188:	ldr	x2, [sp, #56]
  41618c:	mov	w3, #0x3f                  	// #63
  416190:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416194:	add	x4, x4, #0xa4b
  416198:	bl	40a540 <log_assert_failed_realm@plt>
  41619c:	ldur	w8, [x29, #-20]
  4161a0:	cmp	w8, #0x0
  4161a4:	cset	w8, ge  // ge = tcont
  4161a8:	tbnz	w8, #0, 416270 <udev_ctrl_new_from_fd+0x150>
  4161ac:	mov	w0, #0x1                   	// #1
  4161b0:	mov	w1, #0x805                 	// #2053
  4161b4:	movk	w1, #0x8, lsl #16
  4161b8:	mov	w8, wzr
  4161bc:	mov	w2, w8
  4161c0:	bl	40ad10 <socket@plt>
  4161c4:	stur	w0, [x29, #-24]
  4161c8:	ldur	w8, [x29, #-24]
  4161cc:	cmp	w8, #0x0
  4161d0:	cset	w8, ge  // ge = tcont
  4161d4:	tbnz	w8, #0, 416270 <udev_ctrl_new_from_fd+0x150>
  4161d8:	mov	w8, #0x3                   	// #3
  4161dc:	stur	w8, [x29, #-40]
  4161e0:	bl	40a480 <__errno_location@plt>
  4161e4:	ldr	w8, [x0]
  4161e8:	stur	w8, [x29, #-44]
  4161ec:	mov	w8, #0x1                   	// #1
  4161f0:	stur	w8, [x29, #-48]
  4161f4:	ldur	w0, [x29, #-48]
  4161f8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4161fc:	ldur	w8, [x29, #-40]
  416200:	and	w8, w8, #0x7
  416204:	cmp	w0, w8
  416208:	b.lt	416240 <udev_ctrl_new_from_fd+0x120>  // b.tstop
  41620c:	ldur	w8, [x29, #-48]
  416210:	ldur	w9, [x29, #-40]
  416214:	orr	w0, w9, w8, lsl #10
  416218:	ldur	w1, [x29, #-44]
  41621c:	ldr	x2, [sp, #56]
  416220:	mov	w3, #0x44                  	// #68
  416224:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416228:	add	x4, x4, #0xa7f
  41622c:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  416230:	add	x5, x5, #0xa95
  416234:	bl	40a400 <log_internal_realm@plt>
  416238:	str	w0, [sp, #52]
  41623c:	b	416254 <udev_ctrl_new_from_fd+0x134>
  416240:	ldur	w0, [x29, #-44]
  416244:	bl	40a410 <abs@plt>
  416248:	mov	w8, wzr
  41624c:	subs	w8, w8, w0, uxtb
  416250:	str	w8, [sp, #52]
  416254:	ldr	w8, [sp, #52]
  416258:	stur	w8, [x29, #-52]
  41625c:	ldur	w8, [x29, #-52]
  416260:	stur	w8, [x29, #-4]
  416264:	mov	w8, #0x1                   	// #1
  416268:	stur	w8, [x29, #-56]
  41626c:	b	41651c <udev_ctrl_new_from_fd+0x3fc>
  416270:	mov	x0, #0xc0                  	// #192
  416274:	mov	x1, #0x1                   	// #1
  416278:	bl	416560 <malloc_multiply>
  41627c:	stur	x0, [x29, #-32]
  416280:	ldur	x8, [x29, #-32]
  416284:	cbnz	x8, 41629c <udev_ctrl_new_from_fd+0x17c>
  416288:	mov	w8, #0xfffffff4            	// #-12
  41628c:	stur	w8, [x29, #-4]
  416290:	mov	w8, #0x1                   	// #1
  416294:	stur	w8, [x29, #-56]
  416298:	b	41651c <udev_ctrl_new_from_fd+0x3fc>
  41629c:	ldur	x0, [x29, #-32]
  4162a0:	add	x8, sp, #0xe8
  4162a4:	str	x0, [sp, #40]
  4162a8:	mov	x0, x8
  4162ac:	mov	w9, wzr
  4162b0:	mov	w1, w9
  4162b4:	mov	x2, #0xc0                  	// #192
  4162b8:	bl	40a5f0 <memset@plt>
  4162bc:	mov	w9, #0x1                   	// #1
  4162c0:	str	w9, [sp, #232]
  4162c4:	ldur	w9, [x29, #-20]
  4162c8:	cmp	w9, #0x0
  4162cc:	cset	w9, lt  // lt = tstop
  4162d0:	tbnz	w9, #0, 4162e0 <udev_ctrl_new_from_fd+0x1c0>
  4162d4:	ldur	w8, [x29, #-20]
  4162d8:	str	w8, [sp, #36]
  4162dc:	b	416300 <udev_ctrl_new_from_fd+0x1e0>
  4162e0:	ldur	w8, [x29, #-24]
  4162e4:	str	w8, [sp, #228]
  4162e8:	mov	w8, #0xffffffff            	// #-1
  4162ec:	stur	w8, [x29, #-24]
  4162f0:	ldr	w8, [sp, #228]
  4162f4:	str	w8, [sp, #224]
  4162f8:	ldr	w8, [sp, #224]
  4162fc:	str	w8, [sp, #36]
  416300:	ldr	w8, [sp, #36]
  416304:	str	w8, [sp, #236]
  416308:	add	x9, sp, #0xe8
  41630c:	mov	w8, #0xffffffff            	// #-1
  416310:	str	w8, [sp, #240]
  416314:	ldur	w8, [x29, #-20]
  416318:	cmp	w8, #0x0
  41631c:	cset	w8, ge  // ge = tcont
  416320:	ldrb	w10, [x9, #148]
  416324:	and	w10, w10, #0xfffffffe
  416328:	and	w8, w8, #0x1
  41632c:	orr	w8, w10, w8
  416330:	strb	w8, [x9, #148]
  416334:	ldr	x0, [sp, #40]
  416338:	mov	x1, x9
  41633c:	mov	x2, #0xc0                  	// #192
  416340:	bl	40a600 <memcpy@plt>
  416344:	ldur	x9, [x29, #-32]
  416348:	ldr	w0, [x9, #4]
  41634c:	mov	w8, #0x1                   	// #1
  416350:	mov	w1, w8
  416354:	mov	w2, #0x10                  	// #16
  416358:	mov	w3, w8
  41635c:	bl	4165dc <setsockopt_int>
  416360:	stur	w0, [x29, #-36]
  416364:	ldur	w8, [x29, #-36]
  416368:	cmp	w8, #0x0
  41636c:	cset	w8, ge  // ge = tcont
  416370:	tbnz	w8, #0, 4163f4 <udev_ctrl_new_from_fd+0x2d4>
  416374:	mov	w8, #0x4                   	// #4
  416378:	str	w8, [sp, #220]
  41637c:	ldur	w8, [x29, #-36]
  416380:	str	w8, [sp, #216]
  416384:	mov	w8, #0x1                   	// #1
  416388:	str	w8, [sp, #212]
  41638c:	ldr	w0, [sp, #212]
  416390:	bl	40a3f0 <log_get_max_level_realm@plt>
  416394:	ldr	w8, [sp, #220]
  416398:	and	w8, w8, #0x7
  41639c:	cmp	w0, w8
  4163a0:	b.lt	4163d8 <udev_ctrl_new_from_fd+0x2b8>  // b.tstop
  4163a4:	ldr	w8, [sp, #212]
  4163a8:	ldr	w9, [sp, #220]
  4163ac:	orr	w0, w9, w8, lsl #10
  4163b0:	ldr	w1, [sp, #216]
  4163b4:	ldr	x2, [sp, #56]
  4163b8:	mov	w3, #0x58                  	// #88
  4163bc:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4163c0:	add	x4, x4, #0xa7f
  4163c4:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4163c8:	add	x5, x5, #0xab1
  4163cc:	bl	40a400 <log_internal_realm@plt>
  4163d0:	str	w0, [sp, #32]
  4163d4:	b	4163ec <udev_ctrl_new_from_fd+0x2cc>
  4163d8:	ldr	w0, [sp, #216]
  4163dc:	bl	40a410 <abs@plt>
  4163e0:	mov	w8, wzr
  4163e4:	subs	w8, w8, w0, uxtb
  4163e8:	str	w8, [sp, #32]
  4163ec:	ldr	w8, [sp, #32]
  4163f0:	str	w8, [sp, #208]
  4163f4:	ldur	x8, [x29, #-32]
  4163f8:	add	x0, x8, #0x10
  4163fc:	add	x8, sp, #0x62
  416400:	mov	w9, #0x1                   	// #1
  416404:	strh	w9, [sp, #98]
  416408:	add	x10, x8, #0x2
  41640c:	str	x0, [sp, #24]
  416410:	mov	x0, x10
  416414:	adrp	x1, 472000 <on_inotify.__assert_in_set+0xe540>
  416418:	add	x1, x1, #0xa8
  41641c:	mov	x2, #0x6c                  	// #108
  416420:	str	x8, [sp, #16]
  416424:	bl	40a600 <memcpy@plt>
  416428:	ldr	x0, [sp, #24]
  41642c:	ldr	x1, [sp, #16]
  416430:	mov	x2, #0x6e                  	// #110
  416434:	bl	40a600 <memcpy@plt>
  416438:	ldur	x8, [x29, #-32]
  41643c:	add	x8, x8, #0x10
  416440:	str	x8, [sp, #88]
  416444:	ldr	x8, [sp, #88]
  416448:	ldrh	w9, [x8]
  41644c:	cmp	w9, #0x1
  416450:	cset	w9, eq  // eq = none
  416454:	mov	w10, #0x1                   	// #1
  416458:	eor	w9, w9, #0x1
  41645c:	eor	w9, w9, w10
  416460:	eor	w9, w9, w10
  416464:	and	w9, w9, #0x1
  416468:	mov	w0, w9
  41646c:	sxtw	x8, w0
  416470:	cbz	x8, 416494 <udev_ctrl_new_from_fd+0x374>
  416474:	mov	w0, #0x1                   	// #1
  416478:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  41647c:	add	x1, x1, #0xacf
  416480:	ldr	x2, [sp, #56]
  416484:	mov	w3, #0x5f                  	// #95
  416488:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  41648c:	add	x4, x4, #0xa4b
  416490:	bl	40a540 <log_assert_failed_realm@plt>
  416494:	ldr	x8, [sp, #88]
  416498:	ldrb	w9, [x8, #2]
  41649c:	cbnz	w9, 4164bc <udev_ctrl_new_from_fd+0x39c>
  4164a0:	ldr	x8, [sp, #88]
  4164a4:	add	x0, x8, #0x3
  4164a8:	mov	x1, #0x6b                  	// #107
  4164ac:	bl	40ad20 <strnlen@plt>
  4164b0:	add	x8, x0, #0x1
  4164b4:	str	x8, [sp, #8]
  4164b8:	b	4164d4 <udev_ctrl_new_from_fd+0x3b4>
  4164bc:	ldr	x8, [sp, #88]
  4164c0:	add	x0, x8, #0x2
  4164c4:	mov	x1, #0x6c                  	// #108
  4164c8:	bl	40ad20 <strnlen@plt>
  4164cc:	add	x8, x0, #0x1
  4164d0:	str	x8, [sp, #8]
  4164d4:	ldr	x8, [sp, #8]
  4164d8:	add	x8, x8, #0x2
  4164dc:	str	x8, [sp, #80]
  4164e0:	ldr	x8, [sp, #80]
  4164e4:	ldur	x9, [x29, #-32]
  4164e8:	str	w8, [x9, #144]
  4164ec:	ldur	x9, [x29, #-32]
  4164f0:	str	x9, [sp, #72]
  4164f4:	mov	x9, xzr
  4164f8:	stur	x9, [x29, #-32]
  4164fc:	ldr	x9, [sp, #72]
  416500:	str	x9, [sp, #64]
  416504:	ldr	x9, [sp, #64]
  416508:	ldur	x10, [x29, #-16]
  41650c:	str	x9, [x10]
  416510:	stur	wzr, [x29, #-4]
  416514:	mov	w8, #0x1                   	// #1
  416518:	stur	w8, [x29, #-56]
  41651c:	sub	x0, x29, #0x18
  416520:	bl	416538 <closep>
  416524:	ldur	w0, [x29, #-4]
  416528:	add	sp, sp, #0x1e0
  41652c:	ldr	x28, [sp, #16]
  416530:	ldp	x29, x30, [sp], #32
  416534:	ret

0000000000416538 <closep>:
  416538:	sub	sp, sp, #0x20
  41653c:	stp	x29, x30, [sp, #16]
  416540:	add	x29, sp, #0x10
  416544:	str	x0, [sp, #8]
  416548:	ldr	x8, [sp, #8]
  41654c:	ldr	w0, [x8]
  416550:	bl	40a760 <safe_close@plt>
  416554:	ldp	x29, x30, [sp, #16]
  416558:	add	sp, sp, #0x20
  41655c:	ret

0000000000416560 <malloc_multiply>:
  416560:	sub	sp, sp, #0x40
  416564:	stp	x29, x30, [sp, #48]
  416568:	add	x29, sp, #0x30
  41656c:	stur	x0, [x29, #-16]
  416570:	str	x1, [sp, #24]
  416574:	ldur	x0, [x29, #-16]
  416578:	ldr	x1, [sp, #24]
  41657c:	bl	4178a0 <size_multiply_overflow>
  416580:	tbnz	w0, #0, 416588 <malloc_multiply+0x28>
  416584:	b	416594 <malloc_multiply+0x34>
  416588:	mov	x8, xzr
  41658c:	stur	x8, [x29, #-8]
  416590:	b	4165cc <malloc_multiply+0x6c>
  416594:	ldur	x8, [x29, #-16]
  416598:	ldr	x9, [sp, #24]
  41659c:	mul	x8, x8, x9
  4165a0:	str	x8, [sp, #16]
  4165a4:	cbz	x8, 4165b4 <malloc_multiply+0x54>
  4165a8:	ldr	x8, [sp, #16]
  4165ac:	str	x8, [sp, #8]
  4165b0:	b	4165bc <malloc_multiply+0x5c>
  4165b4:	mov	x8, #0x1                   	// #1
  4165b8:	str	x8, [sp, #8]
  4165bc:	ldr	x8, [sp, #8]
  4165c0:	mov	x0, x8
  4165c4:	bl	40a820 <malloc@plt>
  4165c8:	stur	x0, [x29, #-8]
  4165cc:	ldur	x0, [x29, #-8]
  4165d0:	ldp	x29, x30, [sp, #48]
  4165d4:	add	sp, sp, #0x40
  4165d8:	ret

00000000004165dc <setsockopt_int>:
  4165dc:	sub	sp, sp, #0x30
  4165e0:	stp	x29, x30, [sp, #32]
  4165e4:	add	x29, sp, #0x20
  4165e8:	mov	w4, #0x4                   	// #4
  4165ec:	add	x8, sp, #0xc
  4165f0:	stur	w0, [x29, #-8]
  4165f4:	stur	w1, [x29, #-12]
  4165f8:	str	w2, [sp, #16]
  4165fc:	str	w3, [sp, #12]
  416600:	ldur	w0, [x29, #-8]
  416604:	ldur	w1, [x29, #-12]
  416608:	ldr	w2, [sp, #16]
  41660c:	mov	x3, x8
  416610:	bl	40a830 <setsockopt@plt>
  416614:	cmp	w0, #0x0
  416618:	cset	w9, ge  // ge = tcont
  41661c:	tbnz	w9, #0, 416638 <setsockopt_int+0x5c>
  416620:	bl	40a480 <__errno_location@plt>
  416624:	ldr	w8, [x0]
  416628:	mov	w9, wzr
  41662c:	subs	w8, w9, w8
  416630:	stur	w8, [x29, #-4]
  416634:	b	41663c <setsockopt_int+0x60>
  416638:	stur	wzr, [x29, #-4]
  41663c:	ldur	w0, [x29, #-4]
  416640:	ldp	x29, x30, [sp, #32]
  416644:	add	sp, sp, #0x30
  416648:	ret

000000000041664c <udev_ctrl_enable_receiving>:
  41664c:	sub	sp, sp, #0x70
  416650:	stp	x29, x30, [sp, #96]
  416654:	add	x29, sp, #0x60
  416658:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  41665c:	add	x8, x8, #0xa33
  416660:	add	x8, x8, #0x3
  416664:	stur	x0, [x29, #-16]
  416668:	str	x8, [sp, #16]
  41666c:	ldur	x8, [x29, #-16]
  416670:	cmp	x8, #0x0
  416674:	cset	w9, ne  // ne = any
  416678:	mov	w10, #0x1                   	// #1
  41667c:	eor	w9, w9, #0x1
  416680:	eor	w9, w9, w10
  416684:	eor	w9, w9, w10
  416688:	and	w9, w9, #0x1
  41668c:	mov	w0, w9
  416690:	sxtw	x8, w0
  416694:	cbz	x8, 4166b8 <udev_ctrl_enable_receiving+0x6c>
  416698:	mov	w0, #0x1                   	// #1
  41669c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4166a0:	add	x1, x1, #0xaea
  4166a4:	ldr	x2, [sp, #16]
  4166a8:	mov	w3, #0x68                  	// #104
  4166ac:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4166b0:	add	x4, x4, #0xaf0
  4166b4:	bl	40a540 <log_assert_failed_realm@plt>
  4166b8:	ldur	x8, [x29, #-16]
  4166bc:	ldrb	w9, [x8, #148]
  4166c0:	and	w9, w9, #0x1
  4166c4:	tbnz	w9, #0, 4166cc <udev_ctrl_enable_receiving+0x80>
  4166c8:	b	4166d4 <udev_ctrl_enable_receiving+0x88>
  4166cc:	stur	wzr, [x29, #-4]
  4166d0:	b	4168d0 <udev_ctrl_enable_receiving+0x284>
  4166d4:	ldur	x8, [x29, #-16]
  4166d8:	ldr	w0, [x8, #4]
  4166dc:	ldur	x8, [x29, #-16]
  4166e0:	add	x8, x8, #0x10
  4166e4:	stur	x8, [x29, #-32]
  4166e8:	ldur	x8, [x29, #-16]
  4166ec:	ldr	w2, [x8, #144]
  4166f0:	ldur	x1, [x29, #-32]
  4166f4:	bl	40ad30 <bind@plt>
  4166f8:	stur	w0, [x29, #-20]
  4166fc:	ldur	w9, [x29, #-20]
  416700:	cmp	w9, #0x0
  416704:	cset	w9, ge  // ge = tcont
  416708:	tbnz	w9, #0, 416754 <udev_ctrl_enable_receiving+0x108>
  41670c:	bl	40a480 <__errno_location@plt>
  416710:	ldr	w8, [x0]
  416714:	cmp	w8, #0x62
  416718:	b.ne	416754 <udev_ctrl_enable_receiving+0x108>  // b.any
  41671c:	ldur	x8, [x29, #-16]
  416720:	add	x0, x8, #0x10
  416724:	bl	40ad40 <sockaddr_un_unlink@plt>
  416728:	ldur	x8, [x29, #-16]
  41672c:	ldr	w9, [x8, #4]
  416730:	ldur	x8, [x29, #-16]
  416734:	add	x8, x8, #0x10
  416738:	stur	x8, [x29, #-40]
  41673c:	ldur	x8, [x29, #-16]
  416740:	ldr	w2, [x8, #144]
  416744:	ldur	x1, [x29, #-40]
  416748:	mov	w0, w9
  41674c:	bl	40ad30 <bind@plt>
  416750:	stur	w0, [x29, #-20]
  416754:	ldur	w8, [x29, #-20]
  416758:	cmp	w8, #0x0
  41675c:	cset	w8, ge  // ge = tcont
  416760:	tbnz	w8, #0, 4167f4 <udev_ctrl_enable_receiving+0x1a8>
  416764:	mov	w8, #0x3                   	// #3
  416768:	stur	w8, [x29, #-44]
  41676c:	bl	40a480 <__errno_location@plt>
  416770:	ldr	w8, [x0]
  416774:	str	w8, [sp, #48]
  416778:	mov	w8, #0x1                   	// #1
  41677c:	str	w8, [sp, #44]
  416780:	ldr	w0, [sp, #44]
  416784:	bl	40a3f0 <log_get_max_level_realm@plt>
  416788:	ldur	w8, [x29, #-44]
  41678c:	and	w8, w8, #0x7
  416790:	cmp	w0, w8
  416794:	b.lt	4167cc <udev_ctrl_enable_receiving+0x180>  // b.tstop
  416798:	ldr	w8, [sp, #44]
  41679c:	ldur	w9, [x29, #-44]
  4167a0:	orr	w0, w9, w8, lsl #10
  4167a4:	ldr	w1, [sp, #48]
  4167a8:	ldr	x2, [sp, #16]
  4167ac:	mov	w3, #0x74                  	// #116
  4167b0:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  4167b4:	add	x4, x4, #0xb23
  4167b8:	adrp	x5, 464000 <on_inotify.__assert_in_set+0x540>
  4167bc:	add	x5, x5, #0x370
  4167c0:	bl	40a400 <log_internal_realm@plt>
  4167c4:	str	w0, [sp, #12]
  4167c8:	b	4167e0 <udev_ctrl_enable_receiving+0x194>
  4167cc:	ldr	w0, [sp, #48]
  4167d0:	bl	40a410 <abs@plt>
  4167d4:	mov	w8, wzr
  4167d8:	subs	w8, w8, w0, uxtb
  4167dc:	str	w8, [sp, #12]
  4167e0:	ldr	w8, [sp, #12]
  4167e4:	str	w8, [sp, #40]
  4167e8:	ldr	w8, [sp, #40]
  4167ec:	stur	w8, [x29, #-4]
  4167f0:	b	4168d0 <udev_ctrl_enable_receiving+0x284>
  4167f4:	ldur	x8, [x29, #-16]
  4167f8:	ldr	w0, [x8, #4]
  4167fc:	mov	w9, wzr
  416800:	mov	w1, w9
  416804:	bl	40ad50 <listen@plt>
  416808:	cmp	w0, #0x0
  41680c:	cset	w9, ge  // ge = tcont
  416810:	tbnz	w9, #0, 4168a4 <udev_ctrl_enable_receiving+0x258>
  416814:	mov	w8, #0x3                   	// #3
  416818:	str	w8, [sp, #36]
  41681c:	bl	40a480 <__errno_location@plt>
  416820:	ldr	w8, [x0]
  416824:	str	w8, [sp, #32]
  416828:	mov	w8, #0x1                   	// #1
  41682c:	str	w8, [sp, #28]
  416830:	ldr	w0, [sp, #28]
  416834:	bl	40a3f0 <log_get_max_level_realm@plt>
  416838:	ldr	w8, [sp, #36]
  41683c:	and	w8, w8, #0x7
  416840:	cmp	w0, w8
  416844:	b.lt	41687c <udev_ctrl_enable_receiving+0x230>  // b.tstop
  416848:	ldr	w8, [sp, #28]
  41684c:	ldr	w9, [sp, #36]
  416850:	orr	w0, w9, w8, lsl #10
  416854:	ldr	w1, [sp, #32]
  416858:	ldr	x2, [sp, #16]
  41685c:	mov	w3, #0x77                  	// #119
  416860:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416864:	add	x4, x4, #0xb23
  416868:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  41686c:	add	x5, x5, #0xb3e
  416870:	bl	40a400 <log_internal_realm@plt>
  416874:	str	w0, [sp, #8]
  416878:	b	416890 <udev_ctrl_enable_receiving+0x244>
  41687c:	ldr	w0, [sp, #32]
  416880:	bl	40a410 <abs@plt>
  416884:	mov	w8, wzr
  416888:	subs	w8, w8, w0, uxtb
  41688c:	str	w8, [sp, #8]
  416890:	ldr	w8, [sp, #8]
  416894:	str	w8, [sp, #24]
  416898:	ldr	w8, [sp, #24]
  41689c:	stur	w8, [x29, #-4]
  4168a0:	b	4168d0 <udev_ctrl_enable_receiving+0x284>
  4168a4:	ldur	x8, [x29, #-16]
  4168a8:	ldrb	w9, [x8, #148]
  4168ac:	and	w9, w9, #0xfffffffe
  4168b0:	orr	w9, w9, #0x1
  4168b4:	strb	w9, [x8, #148]
  4168b8:	ldur	x8, [x29, #-16]
  4168bc:	ldrb	w9, [x8, #148]
  4168c0:	and	w9, w9, #0xfffffffd
  4168c4:	orr	w9, w9, #0x2
  4168c8:	strb	w9, [x8, #148]
  4168cc:	stur	wzr, [x29, #-4]
  4168d0:	ldur	w0, [x29, #-4]
  4168d4:	ldp	x29, x30, [sp, #96]
  4168d8:	add	sp, sp, #0x70
  4168dc:	ret

00000000004168e0 <udev_ctrl_ref>:
  4168e0:	sub	sp, sp, #0x30
  4168e4:	stp	x29, x30, [sp, #32]
  4168e8:	add	x29, sp, #0x20
  4168ec:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  4168f0:	add	x8, x8, #0xa33
  4168f4:	add	x2, x8, #0x3
  4168f8:	str	x0, [sp, #16]
  4168fc:	ldr	x8, [sp, #16]
  416900:	str	x2, [sp, #8]
  416904:	cbnz	x8, 416914 <udev_ctrl_ref+0x34>
  416908:	mov	x8, xzr
  41690c:	stur	x8, [x29, #-8]
  416910:	b	41697c <udev_ctrl_ref+0x9c>
  416914:	ldr	x8, [sp, #16]
  416918:	ldr	w9, [x8]
  41691c:	cmp	w9, #0x0
  416920:	cset	w9, hi  // hi = pmore
  416924:	mov	w10, #0x1                   	// #1
  416928:	eor	w9, w9, #0x1
  41692c:	eor	w9, w9, w10
  416930:	eor	w9, w9, w10
  416934:	and	w9, w9, #0x1
  416938:	mov	w0, w9
  41693c:	sxtw	x8, w0
  416940:	cbz	x8, 416964 <udev_ctrl_ref+0x84>
  416944:	mov	w0, #0x1                   	// #1
  416948:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  41694c:	add	x1, x1, #0xb67
  416950:	ldr	x2, [sp, #8]
  416954:	mov	w3, #0x93                  	// #147
  416958:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  41695c:	add	x4, x4, #0xb74
  416960:	bl	40a540 <log_assert_failed_realm@plt>
  416964:	ldr	x8, [sp, #16]
  416968:	ldr	w9, [x8]
  41696c:	add	w9, w9, #0x1
  416970:	str	w9, [x8]
  416974:	ldr	x8, [sp, #16]
  416978:	stur	x8, [x29, #-8]
  41697c:	ldur	x0, [x29, #-8]
  416980:	ldp	x29, x30, [sp, #32]
  416984:	add	sp, sp, #0x30
  416988:	ret

000000000041698c <udev_ctrl_unref>:
  41698c:	sub	sp, sp, #0x30
  416990:	stp	x29, x30, [sp, #32]
  416994:	add	x29, sp, #0x20
  416998:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  41699c:	add	x8, x8, #0xa33
  4169a0:	add	x2, x8, #0x3
  4169a4:	str	x0, [sp, #16]
  4169a8:	ldr	x8, [sp, #16]
  4169ac:	str	x2, [sp, #8]
  4169b0:	cbnz	x8, 4169c0 <udev_ctrl_unref+0x34>
  4169b4:	mov	x8, xzr
  4169b8:	stur	x8, [x29, #-8]
  4169bc:	b	416a4c <udev_ctrl_unref+0xc0>
  4169c0:	ldr	x8, [sp, #16]
  4169c4:	ldr	w9, [x8]
  4169c8:	cmp	w9, #0x0
  4169cc:	cset	w9, hi  // hi = pmore
  4169d0:	mov	w10, #0x1                   	// #1
  4169d4:	eor	w9, w9, #0x1
  4169d8:	eor	w9, w9, w10
  4169dc:	eor	w9, w9, w10
  4169e0:	and	w9, w9, #0x1
  4169e4:	mov	w0, w9
  4169e8:	sxtw	x8, w0
  4169ec:	cbz	x8, 416a10 <udev_ctrl_unref+0x84>
  4169f0:	mov	w0, #0x1                   	// #1
  4169f4:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4169f8:	add	x1, x1, #0xb67
  4169fc:	ldr	x2, [sp, #8]
  416a00:	mov	w3, #0x93                  	// #147
  416a04:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416a08:	add	x4, x4, #0xba8
  416a0c:	bl	40a540 <log_assert_failed_realm@plt>
  416a10:	ldr	x8, [sp, #16]
  416a14:	ldr	w9, [x8]
  416a18:	subs	w9, w9, #0x1
  416a1c:	str	w9, [x8]
  416a20:	ldr	x8, [sp, #16]
  416a24:	ldr	w9, [x8]
  416a28:	cmp	w9, #0x0
  416a2c:	cset	w9, ls  // ls = plast
  416a30:	tbnz	w9, #0, 416a40 <udev_ctrl_unref+0xb4>
  416a34:	mov	x8, xzr
  416a38:	stur	x8, [x29, #-8]
  416a3c:	b	416a4c <udev_ctrl_unref+0xc0>
  416a40:	ldr	x0, [sp, #16]
  416a44:	bl	416a5c <udev_ctrl_free>
  416a48:	stur	x0, [x29, #-8]
  416a4c:	ldur	x0, [x29, #-8]
  416a50:	ldp	x29, x30, [sp, #32]
  416a54:	add	sp, sp, #0x30
  416a58:	ret

0000000000416a5c <udev_ctrl_free>:
  416a5c:	sub	sp, sp, #0x20
  416a60:	stp	x29, x30, [sp, #16]
  416a64:	add	x29, sp, #0x10
  416a68:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  416a6c:	add	x8, x8, #0xa33
  416a70:	add	x2, x8, #0x3
  416a74:	str	x0, [sp, #8]
  416a78:	str	x2, [sp]
  416a7c:	ldr	x8, [sp, #8]
  416a80:	cmp	x8, #0x0
  416a84:	cset	w9, ne  // ne = any
  416a88:	mov	w10, #0x1                   	// #1
  416a8c:	eor	w9, w9, #0x1
  416a90:	eor	w9, w9, w10
  416a94:	eor	w9, w9, w10
  416a98:	and	w9, w9, #0x1
  416a9c:	mov	w0, w9
  416aa0:	sxtw	x8, w0
  416aa4:	cbz	x8, 416ac8 <udev_ctrl_free+0x6c>
  416aa8:	mov	w0, #0x1                   	// #1
  416aac:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416ab0:	add	x1, x1, #0xaea
  416ab4:	ldr	x2, [sp]
  416ab8:	mov	w3, #0x88                  	// #136
  416abc:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416ac0:	add	x4, x4, #0xd0e
  416ac4:	bl	40a540 <log_assert_failed_realm@plt>
  416ac8:	ldr	x0, [sp, #8]
  416acc:	bl	417908 <udev_ctrl_disconnect>
  416ad0:	ldr	x8, [sp, #8]
  416ad4:	ldr	x0, [x8, #160]
  416ad8:	bl	40a780 <sd_event_source_unref@plt>
  416adc:	ldr	x8, [sp, #8]
  416ae0:	ldr	w9, [x8, #4]
  416ae4:	mov	w0, w9
  416ae8:	bl	40a760 <safe_close@plt>
  416aec:	ldr	x8, [sp, #8]
  416af0:	ldr	x8, [x8, #152]
  416af4:	mov	x0, x8
  416af8:	bl	40a790 <sd_event_unref@plt>
  416afc:	ldr	x8, [sp, #8]
  416b00:	mov	x0, x8
  416b04:	bl	417958 <mfree>
  416b08:	ldp	x29, x30, [sp, #16]
  416b0c:	add	sp, sp, #0x20
  416b10:	ret

0000000000416b14 <udev_ctrl_cleanup>:
  416b14:	sub	sp, sp, #0x20
  416b18:	stp	x29, x30, [sp, #16]
  416b1c:	add	x29, sp, #0x10
  416b20:	str	x0, [sp]
  416b24:	ldr	x8, [sp]
  416b28:	cbnz	x8, 416b34 <udev_ctrl_cleanup+0x20>
  416b2c:	stur	wzr, [x29, #-4]
  416b30:	b	416b60 <udev_ctrl_cleanup+0x4c>
  416b34:	ldr	x8, [sp]
  416b38:	ldrb	w9, [x8, #148]
  416b3c:	mov	w10, #0x1                   	// #1
  416b40:	lsr	w9, w9, w10
  416b44:	and	w9, w9, w10
  416b48:	tbnz	w9, #0, 416b50 <udev_ctrl_cleanup+0x3c>
  416b4c:	b	416b5c <udev_ctrl_cleanup+0x48>
  416b50:	ldr	x8, [sp]
  416b54:	add	x0, x8, #0x10
  416b58:	bl	40ad40 <sockaddr_un_unlink@plt>
  416b5c:	stur	wzr, [x29, #-4]
  416b60:	ldur	w0, [x29, #-4]
  416b64:	ldp	x29, x30, [sp, #16]
  416b68:	add	sp, sp, #0x20
  416b6c:	ret

0000000000416b70 <udev_ctrl_attach_event>:
  416b70:	sub	sp, sp, #0x40
  416b74:	stp	x29, x30, [sp, #48]
  416b78:	add	x29, sp, #0x30
  416b7c:	mov	w8, #0x1                   	// #1
  416b80:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  416b84:	add	x9, x9, #0xa33
  416b88:	add	x9, x9, #0x3
  416b8c:	mov	w10, #0x0                   	// #0
  416b90:	stur	x0, [x29, #-16]
  416b94:	str	x1, [sp, #24]
  416b98:	str	w8, [sp, #16]
  416b9c:	str	x9, [sp, #8]
  416ba0:	str	w10, [sp, #4]
  416ba4:	ldur	x8, [x29, #-16]
  416ba8:	cmp	x8, #0x0
  416bac:	cset	w9, ne  // ne = any
  416bb0:	mov	w10, #0x1                   	// #1
  416bb4:	eor	w9, w9, #0x1
  416bb8:	eor	w9, w9, w10
  416bbc:	and	w9, w9, #0x1
  416bc0:	mov	w0, w9
  416bc4:	sxtw	x8, w0
  416bc8:	cbz	x8, 416bd8 <udev_ctrl_attach_event+0x68>
  416bcc:	ldr	w8, [sp, #16]
  416bd0:	tbnz	w8, #0, 416c0c <udev_ctrl_attach_event+0x9c>
  416bd4:	b	416c00 <udev_ctrl_attach_event+0x90>
  416bd8:	mov	w0, #0x1                   	// #1
  416bdc:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416be0:	add	x1, x1, #0xaea
  416be4:	ldr	x2, [sp, #8]
  416be8:	mov	w3, #0xa0                  	// #160
  416bec:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416bf0:	add	x4, x4, #0xbde
  416bf4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  416bf8:	ldr	w8, [sp, #4]
  416bfc:	tbnz	w8, #0, 416c0c <udev_ctrl_attach_event+0x9c>
  416c00:	mov	w8, #0xffffffea            	// #-22
  416c04:	stur	w8, [x29, #-4]
  416c08:	b	416cc8 <udev_ctrl_attach_event+0x158>
  416c0c:	ldur	x8, [x29, #-16]
  416c10:	ldr	x8, [x8, #152]
  416c14:	cmp	x8, #0x0
  416c18:	cset	w9, ne  // ne = any
  416c1c:	mov	w10, #0x1                   	// #1
  416c20:	eor	w9, w9, #0x1
  416c24:	eor	w9, w9, w10
  416c28:	eor	w9, w9, w10
  416c2c:	and	w9, w9, #0x1
  416c30:	mov	w0, w9
  416c34:	sxtw	x8, w0
  416c38:	cbz	x8, 416c48 <udev_ctrl_attach_event+0xd8>
  416c3c:	ldr	w8, [sp, #16]
  416c40:	tbnz	w8, #0, 416c7c <udev_ctrl_attach_event+0x10c>
  416c44:	b	416c70 <udev_ctrl_attach_event+0x100>
  416c48:	mov	w0, #0x1                   	// #1
  416c4c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416c50:	add	x1, x1, #0xc19
  416c54:	ldr	x2, [sp, #8]
  416c58:	mov	w3, #0xa1                  	// #161
  416c5c:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416c60:	add	x4, x4, #0xbde
  416c64:	bl	40ad60 <log_assert_failed_return_realm@plt>
  416c68:	ldr	w8, [sp, #4]
  416c6c:	tbnz	w8, #0, 416c7c <udev_ctrl_attach_event+0x10c>
  416c70:	mov	w8, #0xfffffff0            	// #-16
  416c74:	stur	w8, [x29, #-4]
  416c78:	b	416cc8 <udev_ctrl_attach_event+0x158>
  416c7c:	ldr	x8, [sp, #24]
  416c80:	cbz	x8, 416c98 <udev_ctrl_attach_event+0x128>
  416c84:	ldr	x0, [sp, #24]
  416c88:	bl	40ad70 <sd_event_ref@plt>
  416c8c:	ldur	x8, [x29, #-16]
  416c90:	str	x0, [x8, #152]
  416c94:	b	416cc4 <udev_ctrl_attach_event+0x154>
  416c98:	ldur	x8, [x29, #-16]
  416c9c:	add	x0, x8, #0x98
  416ca0:	bl	40a680 <sd_event_default@plt>
  416ca4:	str	w0, [sp, #20]
  416ca8:	ldr	w9, [sp, #20]
  416cac:	cmp	w9, #0x0
  416cb0:	cset	w9, ge  // ge = tcont
  416cb4:	tbnz	w9, #0, 416cc4 <udev_ctrl_attach_event+0x154>
  416cb8:	ldr	w8, [sp, #20]
  416cbc:	stur	w8, [x29, #-4]
  416cc0:	b	416cc8 <udev_ctrl_attach_event+0x158>
  416cc4:	stur	wzr, [x29, #-4]
  416cc8:	ldur	w0, [x29, #-4]
  416ccc:	ldp	x29, x30, [sp, #48]
  416cd0:	add	sp, sp, #0x40
  416cd4:	ret

0000000000416cd8 <udev_ctrl_get_event_source>:
  416cd8:	sub	sp, sp, #0x20
  416cdc:	stp	x29, x30, [sp, #16]
  416ce0:	add	x29, sp, #0x10
  416ce4:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  416ce8:	add	x8, x8, #0xa33
  416cec:	add	x2, x8, #0x3
  416cf0:	str	x0, [sp, #8]
  416cf4:	str	x2, [sp]
  416cf8:	ldr	x8, [sp, #8]
  416cfc:	cmp	x8, #0x0
  416d00:	cset	w9, ne  // ne = any
  416d04:	mov	w10, #0x1                   	// #1
  416d08:	eor	w9, w9, #0x1
  416d0c:	eor	w9, w9, w10
  416d10:	eor	w9, w9, w10
  416d14:	and	w9, w9, #0x1
  416d18:	mov	w0, w9
  416d1c:	sxtw	x8, w0
  416d20:	cbz	x8, 416d44 <udev_ctrl_get_event_source+0x6c>
  416d24:	mov	w0, #0x1                   	// #1
  416d28:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416d2c:	add	x1, x1, #0xaea
  416d30:	ldr	x2, [sp]
  416d34:	mov	w3, #0xaf                  	// #175
  416d38:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416d3c:	add	x4, x4, #0xc27
  416d40:	bl	40a540 <log_assert_failed_realm@plt>
  416d44:	ldr	x8, [sp, #8]
  416d48:	ldr	x0, [x8, #160]
  416d4c:	ldp	x29, x30, [sp, #16]
  416d50:	add	sp, sp, #0x20
  416d54:	ret

0000000000416d58 <udev_ctrl_start>:
  416d58:	sub	sp, sp, #0x40
  416d5c:	stp	x29, x30, [sp, #48]
  416d60:	add	x29, sp, #0x30
  416d64:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  416d68:	add	x8, x8, #0xa33
  416d6c:	add	x8, x8, #0x3
  416d70:	stur	x0, [x29, #-16]
  416d74:	str	x1, [sp, #24]
  416d78:	str	x2, [sp, #16]
  416d7c:	str	x8, [sp]
  416d80:	ldur	x8, [x29, #-16]
  416d84:	cmp	x8, #0x0
  416d88:	cset	w9, ne  // ne = any
  416d8c:	mov	w10, #0x1                   	// #1
  416d90:	eor	w9, w9, #0x1
  416d94:	eor	w9, w9, w10
  416d98:	eor	w9, w9, w10
  416d9c:	and	w9, w9, #0x1
  416da0:	mov	w0, w9
  416da4:	sxtw	x8, w0
  416da8:	cbz	x8, 416dcc <udev_ctrl_start+0x74>
  416dac:	mov	w0, #0x1                   	// #1
  416db0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416db4:	add	x1, x1, #0xaea
  416db8:	ldr	x2, [sp]
  416dbc:	mov	w3, #0x132                 	// #306
  416dc0:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416dc4:	add	x4, x4, #0xc67
  416dc8:	bl	40a540 <log_assert_failed_realm@plt>
  416dcc:	ldur	x8, [x29, #-16]
  416dd0:	ldr	x8, [x8, #152]
  416dd4:	cbnz	x8, 416e08 <udev_ctrl_start+0xb0>
  416dd8:	ldur	x0, [x29, #-16]
  416ddc:	mov	x8, xzr
  416de0:	mov	x1, x8
  416de4:	bl	416b70 <udev_ctrl_attach_event>
  416de8:	str	w0, [sp, #12]
  416dec:	ldr	w9, [sp, #12]
  416df0:	cmp	w9, #0x0
  416df4:	cset	w9, ge  // ge = tcont
  416df8:	tbnz	w9, #0, 416e08 <udev_ctrl_start+0xb0>
  416dfc:	ldr	w8, [sp, #12]
  416e00:	stur	w8, [x29, #-4]
  416e04:	b	416eac <udev_ctrl_start+0x154>
  416e08:	ldur	x0, [x29, #-16]
  416e0c:	bl	41664c <udev_ctrl_enable_receiving>
  416e10:	str	w0, [sp, #12]
  416e14:	ldr	w8, [sp, #12]
  416e18:	cmp	w8, #0x0
  416e1c:	cset	w8, ge  // ge = tcont
  416e20:	tbnz	w8, #0, 416e30 <udev_ctrl_start+0xd8>
  416e24:	ldr	w8, [sp, #12]
  416e28:	stur	w8, [x29, #-4]
  416e2c:	b	416eac <udev_ctrl_start+0x154>
  416e30:	ldr	x8, [sp, #24]
  416e34:	ldur	x9, [x29, #-16]
  416e38:	str	x8, [x9, #176]
  416e3c:	ldr	x8, [sp, #16]
  416e40:	ldur	x9, [x29, #-16]
  416e44:	str	x8, [x9, #184]
  416e48:	ldur	x8, [x29, #-16]
  416e4c:	ldr	x0, [x8, #152]
  416e50:	ldur	x8, [x29, #-16]
  416e54:	add	x1, x8, #0xa0
  416e58:	ldur	x8, [x29, #-16]
  416e5c:	ldr	w2, [x8, #4]
  416e60:	ldur	x5, [x29, #-16]
  416e64:	mov	w3, #0x1                   	// #1
  416e68:	adrp	x4, 416000 <on_kill_workers_event+0x20>
  416e6c:	add	x4, x4, #0xebc
  416e70:	bl	40a6c0 <sd_event_add_io@plt>
  416e74:	str	w0, [sp, #12]
  416e78:	ldr	w10, [sp, #12]
  416e7c:	cmp	w10, #0x0
  416e80:	cset	w10, ge  // ge = tcont
  416e84:	tbnz	w10, #0, 416e94 <udev_ctrl_start+0x13c>
  416e88:	ldr	w8, [sp, #12]
  416e8c:	stur	w8, [x29, #-4]
  416e90:	b	416eac <udev_ctrl_start+0x154>
  416e94:	ldur	x8, [x29, #-16]
  416e98:	ldr	x0, [x8, #160]
  416e9c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416ea0:	add	x1, x1, #0xcac
  416ea4:	bl	40a700 <sd_event_source_set_description@plt>
  416ea8:	stur	wzr, [x29, #-4]
  416eac:	ldur	w0, [x29, #-4]
  416eb0:	ldp	x29, x30, [sp, #48]
  416eb4:	add	sp, sp, #0x40
  416eb8:	ret

0000000000416ebc <udev_ctrl_event_handler>:
  416ebc:	sub	sp, sp, #0xe0
  416ec0:	stp	x29, x30, [sp, #208]
  416ec4:	add	x29, sp, #0xd0
  416ec8:	sub	x8, x29, #0x20
  416ecc:	mov	w9, #0xffffffff            	// #-1
  416ed0:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  416ed4:	add	x10, x10, #0xa33
  416ed8:	add	x10, x10, #0x3
  416edc:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  416ee0:	add	x11, x11, #0xd89
  416ee4:	str	x0, [x8, #16]
  416ee8:	stur	w1, [x29, #-20]
  416eec:	stur	w2, [x29, #-24]
  416ef0:	str	x3, [x8]
  416ef4:	ldr	x8, [x8]
  416ef8:	stur	x8, [x29, #-40]
  416efc:	stur	w9, [x29, #-44]
  416f00:	str	x10, [sp, #32]
  416f04:	str	x11, [sp, #24]
  416f08:	ldur	x8, [x29, #-40]
  416f0c:	cmp	x8, #0x0
  416f10:	cset	w9, ne  // ne = any
  416f14:	mov	w10, #0x1                   	// #1
  416f18:	eor	w9, w9, #0x1
  416f1c:	eor	w9, w9, w10
  416f20:	eor	w9, w9, w10
  416f24:	and	w9, w9, #0x1
  416f28:	mov	w0, w9
  416f2c:	sxtw	x8, w0
  416f30:	cbz	x8, 416f54 <udev_ctrl_event_handler+0x98>
  416f34:	mov	w0, #0x1                   	// #1
  416f38:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  416f3c:	add	x1, x1, #0xaea
  416f40:	ldr	x2, [sp, #32]
  416f44:	mov	w3, #0x105                 	// #261
  416f48:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  416f4c:	add	x4, x4, #0xd43
  416f50:	bl	40a540 <log_assert_failed_realm@plt>
  416f54:	ldur	w0, [x29, #-20]
  416f58:	mov	x8, xzr
  416f5c:	stur	x8, [x29, #-72]
  416f60:	ldur	x1, [x29, #-72]
  416f64:	mov	x2, x8
  416f68:	mov	w3, #0x800                 	// #2048
  416f6c:	movk	w3, #0x8, lsl #16
  416f70:	bl	40ad80 <accept4@plt>
  416f74:	stur	w0, [x29, #-44]
  416f78:	ldur	w9, [x29, #-44]
  416f7c:	cmp	w9, #0x0
  416f80:	cset	w9, ge  // ge = tcont
  416f84:	tbnz	w9, #0, 417040 <udev_ctrl_event_handler+0x184>
  416f88:	bl	40a480 <__errno_location@plt>
  416f8c:	ldr	w0, [x0]
  416f90:	bl	417988 <ERRNO_IS_ACCEPT_AGAIN>
  416f94:	tbnz	w0, #0, 416f9c <udev_ctrl_event_handler+0xe0>
  416f98:	b	416fac <udev_ctrl_event_handler+0xf0>
  416f9c:	stur	wzr, [x29, #-4]
  416fa0:	mov	w8, #0x1                   	// #1
  416fa4:	stur	w8, [x29, #-76]
  416fa8:	b	417354 <udev_ctrl_event_handler+0x498>
  416fac:	mov	w8, #0x3                   	// #3
  416fb0:	stur	w8, [x29, #-80]
  416fb4:	bl	40a480 <__errno_location@plt>
  416fb8:	ldr	w8, [x0]
  416fbc:	stur	w8, [x29, #-84]
  416fc0:	mov	w8, #0x1                   	// #1
  416fc4:	stur	w8, [x29, #-88]
  416fc8:	ldur	w0, [x29, #-88]
  416fcc:	bl	40a3f0 <log_get_max_level_realm@plt>
  416fd0:	ldur	w8, [x29, #-80]
  416fd4:	and	w8, w8, #0x7
  416fd8:	cmp	w0, w8
  416fdc:	b.lt	417010 <udev_ctrl_event_handler+0x154>  // b.tstop
  416fe0:	ldur	w8, [x29, #-88]
  416fe4:	ldur	w9, [x29, #-80]
  416fe8:	orr	w0, w9, w8, lsl #10
  416fec:	ldur	w1, [x29, #-84]
  416ff0:	ldr	x2, [sp, #32]
  416ff4:	mov	w3, #0x10c                 	// #268
  416ff8:	ldr	x4, [sp, #24]
  416ffc:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417000:	add	x5, x5, #0xda1
  417004:	bl	40a400 <log_internal_realm@plt>
  417008:	str	w0, [sp, #20]
  41700c:	b	417024 <udev_ctrl_event_handler+0x168>
  417010:	ldur	w0, [x29, #-84]
  417014:	bl	40a410 <abs@plt>
  417018:	mov	w8, wzr
  41701c:	subs	w8, w8, w0, uxtb
  417020:	str	w8, [sp, #20]
  417024:	ldr	w8, [sp, #20]
  417028:	stur	w8, [x29, #-92]
  41702c:	ldur	w8, [x29, #-92]
  417030:	stur	w8, [x29, #-4]
  417034:	mov	w8, #0x1                   	// #1
  417038:	stur	w8, [x29, #-76]
  41703c:	b	417354 <udev_ctrl_event_handler+0x498>
  417040:	ldur	w0, [x29, #-44]
  417044:	sub	x1, x29, #0x38
  417048:	bl	40ad90 <getpeercred@plt>
  41704c:	stur	w0, [x29, #-60]
  417050:	ldur	w8, [x29, #-60]
  417054:	cmp	w8, #0x0
  417058:	cset	w8, ge  // ge = tcont
  41705c:	tbnz	w8, #0, 4170ec <udev_ctrl_event_handler+0x230>
  417060:	mov	w8, #0x3                   	// #3
  417064:	stur	w8, [x29, #-96]
  417068:	ldur	w8, [x29, #-60]
  41706c:	stur	w8, [x29, #-100]
  417070:	mov	w8, #0x1                   	// #1
  417074:	str	w8, [sp, #104]
  417078:	ldr	w0, [sp, #104]
  41707c:	bl	40a3f0 <log_get_max_level_realm@plt>
  417080:	ldur	w8, [x29, #-96]
  417084:	and	w8, w8, #0x7
  417088:	cmp	w0, w8
  41708c:	b.lt	4170c0 <udev_ctrl_event_handler+0x204>  // b.tstop
  417090:	ldr	w8, [sp, #104]
  417094:	ldur	w9, [x29, #-96]
  417098:	orr	w0, w9, w8, lsl #10
  41709c:	ldur	w1, [x29, #-100]
  4170a0:	ldr	x2, [sp, #32]
  4170a4:	mov	w3, #0x112                 	// #274
  4170a8:	ldr	x4, [sp, #24]
  4170ac:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4170b0:	add	x5, x5, #0xdc6
  4170b4:	bl	40a400 <log_internal_realm@plt>
  4170b8:	str	w0, [sp, #16]
  4170bc:	b	4170d4 <udev_ctrl_event_handler+0x218>
  4170c0:	ldur	w0, [x29, #-100]
  4170c4:	bl	40a410 <abs@plt>
  4170c8:	mov	w8, wzr
  4170cc:	subs	w8, w8, w0, uxtb
  4170d0:	str	w8, [sp, #16]
  4170d4:	ldr	w8, [sp, #16]
  4170d8:	str	w8, [sp, #100]
  4170dc:	stur	wzr, [x29, #-4]
  4170e0:	mov	w8, #0x1                   	// #1
  4170e4:	stur	w8, [x29, #-76]
  4170e8:	b	417354 <udev_ctrl_event_handler+0x498>
  4170ec:	ldur	w8, [x29, #-52]
  4170f0:	cmp	w8, #0x0
  4170f4:	cset	w8, ls  // ls = plast
  4170f8:	tbnz	w8, #0, 417188 <udev_ctrl_event_handler+0x2cc>
  4170fc:	mov	w8, #0x3                   	// #3
  417100:	str	w8, [sp, #96]
  417104:	str	wzr, [sp, #92]
  417108:	mov	w8, #0x1                   	// #1
  41710c:	str	w8, [sp, #88]
  417110:	ldr	w0, [sp, #88]
  417114:	bl	40a3f0 <log_get_max_level_realm@plt>
  417118:	ldr	w8, [sp, #96]
  41711c:	and	w8, w8, #0x7
  417120:	cmp	w0, w8
  417124:	b.lt	41715c <udev_ctrl_event_handler+0x2a0>  // b.tstop
  417128:	ldr	w8, [sp, #88]
  41712c:	ldr	w9, [sp, #96]
  417130:	orr	w0, w9, w8, lsl #10
  417134:	ldr	w1, [sp, #92]
  417138:	ldur	w6, [x29, #-52]
  41713c:	ldr	x2, [sp, #32]
  417140:	mov	w3, #0x117                 	// #279
  417144:	ldr	x4, [sp, #24]
  417148:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  41714c:	add	x5, x5, #0xdfb
  417150:	bl	40a400 <log_internal_realm@plt>
  417154:	str	w0, [sp, #12]
  417158:	b	417170 <udev_ctrl_event_handler+0x2b4>
  41715c:	ldr	w0, [sp, #92]
  417160:	bl	40a410 <abs@plt>
  417164:	mov	w8, wzr
  417168:	subs	w8, w8, w0, uxtb
  41716c:	str	w8, [sp, #12]
  417170:	ldr	w8, [sp, #12]
  417174:	str	w8, [sp, #84]
  417178:	stur	wzr, [x29, #-4]
  41717c:	mov	w8, #0x1                   	// #1
  417180:	stur	w8, [x29, #-76]
  417184:	b	417354 <udev_ctrl_event_handler+0x498>
  417188:	ldur	w0, [x29, #-44]
  41718c:	mov	w8, #0x1                   	// #1
  417190:	mov	w1, w8
  417194:	mov	w2, #0x10                  	// #16
  417198:	mov	w3, w8
  41719c:	bl	4165dc <setsockopt_int>
  4171a0:	stur	w0, [x29, #-60]
  4171a4:	ldur	w8, [x29, #-60]
  4171a8:	cmp	w8, #0x0
  4171ac:	cset	w8, ge  // ge = tcont
  4171b0:	tbnz	w8, #0, 417230 <udev_ctrl_event_handler+0x374>
  4171b4:	mov	w8, #0x4                   	// #4
  4171b8:	str	w8, [sp, #80]
  4171bc:	ldur	w8, [x29, #-60]
  4171c0:	str	w8, [sp, #76]
  4171c4:	mov	w8, #0x1                   	// #1
  4171c8:	str	w8, [sp, #72]
  4171cc:	ldr	w0, [sp, #72]
  4171d0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4171d4:	ldr	w8, [sp, #80]
  4171d8:	and	w8, w8, #0x7
  4171dc:	cmp	w0, w8
  4171e0:	b.lt	417214 <udev_ctrl_event_handler+0x358>  // b.tstop
  4171e4:	ldr	w8, [sp, #72]
  4171e8:	ldr	w9, [sp, #80]
  4171ec:	orr	w0, w9, w8, lsl #10
  4171f0:	ldr	w1, [sp, #76]
  4171f4:	ldr	x2, [sp, #32]
  4171f8:	mov	w3, #0x11e                 	// #286
  4171fc:	ldr	x4, [sp, #24]
  417200:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417204:	add	x5, x5, #0xe25
  417208:	bl	40a400 <log_internal_realm@plt>
  41720c:	str	w0, [sp, #8]
  417210:	b	417228 <udev_ctrl_event_handler+0x36c>
  417214:	ldr	w0, [sp, #76]
  417218:	bl	40a410 <abs@plt>
  41721c:	mov	w8, wzr
  417220:	subs	w8, w8, w0, uxtb
  417224:	str	w8, [sp, #8]
  417228:	ldr	w8, [sp, #8]
  41722c:	str	w8, [sp, #68]
  417230:	ldur	x8, [x29, #-40]
  417234:	ldr	x0, [x8, #152]
  417238:	ldur	x8, [x29, #-40]
  41723c:	add	x1, x8, #0xa8
  417240:	ldur	w2, [x29, #-44]
  417244:	ldur	x5, [x29, #-40]
  417248:	mov	w3, #0x1                   	// #1
  41724c:	adrp	x4, 417000 <udev_ctrl_event_handler+0x144>
  417250:	add	x4, x4, #0xa28
  417254:	bl	40a6c0 <sd_event_add_io@plt>
  417258:	stur	w0, [x29, #-60]
  41725c:	ldur	w9, [x29, #-60]
  417260:	cmp	w9, #0x0
  417264:	cset	w9, ge  // ge = tcont
  417268:	tbnz	w9, #0, 4172f8 <udev_ctrl_event_handler+0x43c>
  41726c:	mov	w8, #0x3                   	// #3
  417270:	str	w8, [sp, #64]
  417274:	ldur	w8, [x29, #-60]
  417278:	str	w8, [sp, #60]
  41727c:	mov	w8, #0x1                   	// #1
  417280:	str	w8, [sp, #56]
  417284:	ldr	w0, [sp, #56]
  417288:	bl	40a3f0 <log_get_max_level_realm@plt>
  41728c:	ldr	w8, [sp, #64]
  417290:	and	w8, w8, #0x7
  417294:	cmp	w0, w8
  417298:	b.lt	4172cc <udev_ctrl_event_handler+0x410>  // b.tstop
  41729c:	ldr	w8, [sp, #56]
  4172a0:	ldr	w9, [sp, #64]
  4172a4:	orr	w0, w9, w8, lsl #10
  4172a8:	ldr	w1, [sp, #60]
  4172ac:	ldr	x2, [sp, #32]
  4172b0:	mov	w3, #0x122                 	// #290
  4172b4:	ldr	x4, [sp, #24]
  4172b8:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  4172bc:	add	x5, x5, #0xe4d
  4172c0:	bl	40a400 <log_internal_realm@plt>
  4172c4:	str	w0, [sp, #4]
  4172c8:	b	4172e0 <udev_ctrl_event_handler+0x424>
  4172cc:	ldr	w0, [sp, #60]
  4172d0:	bl	40a410 <abs@plt>
  4172d4:	mov	w8, wzr
  4172d8:	subs	w8, w8, w0, uxtb
  4172dc:	str	w8, [sp, #4]
  4172e0:	ldr	w8, [sp, #4]
  4172e4:	str	w8, [sp, #52]
  4172e8:	stur	wzr, [x29, #-4]
  4172ec:	mov	w8, #0x1                   	// #1
  4172f0:	stur	w8, [x29, #-76]
  4172f4:	b	417354 <udev_ctrl_event_handler+0x498>
  4172f8:	ldur	x8, [x29, #-40]
  4172fc:	ldr	x0, [x8, #168]
  417300:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  417304:	add	x1, x1, #0xe8b
  417308:	bl	40a700 <sd_event_source_set_description@plt>
  41730c:	ldur	x8, [x29, #-40]
  417310:	ldr	x8, [x8, #160]
  417314:	mov	x0, x8
  417318:	mov	w9, wzr
  41731c:	mov	w1, w9
  417320:	bl	40ada0 <sd_event_source_set_enabled@plt>
  417324:	ldur	w9, [x29, #-44]
  417328:	str	w9, [sp, #48]
  41732c:	mov	w9, #0xffffffff            	// #-1
  417330:	stur	w9, [x29, #-44]
  417334:	ldr	w9, [sp, #48]
  417338:	str	w9, [sp, #44]
  41733c:	ldr	w9, [sp, #44]
  417340:	ldur	x8, [x29, #-40]
  417344:	str	w9, [x8, #8]
  417348:	stur	wzr, [x29, #-4]
  41734c:	mov	w9, #0x1                   	// #1
  417350:	stur	w9, [x29, #-76]
  417354:	sub	x0, x29, #0x2c
  417358:	bl	416538 <closep>
  41735c:	ldur	w0, [x29, #-4]
  417360:	ldp	x29, x30, [sp, #208]
  417364:	add	sp, sp, #0xe0
  417368:	ret

000000000041736c <udev_ctrl_send>:
  41736c:	sub	sp, sp, #0x180
  417370:	stp	x29, x30, [sp, #352]
  417374:	str	x28, [sp, #368]
  417378:	add	x29, sp, #0x160
  41737c:	mov	x8, #0x118                 	// #280
  417380:	adrp	x9, 472000 <on_inotify.__assert_in_set+0xe540>
  417384:	add	x9, x9, #0x230
  417388:	mov	w10, #0x1dea                	// #7658
  41738c:	movk	w10, #0xdead, lsl #16
  417390:	mov	w11, wzr
  417394:	add	x12, sp, #0x20
  417398:	stur	x0, [x29, #-16]
  41739c:	stur	w1, [x29, #-20]
  4173a0:	stur	w2, [x29, #-24]
  4173a4:	stur	x3, [x29, #-32]
  4173a8:	mov	x0, x12
  4173ac:	mov	w1, w11
  4173b0:	mov	x2, x8
  4173b4:	str	x9, [sp, #16]
  4173b8:	str	w10, [sp, #12]
  4173bc:	bl	40a5f0 <memset@plt>
  4173c0:	ldr	x8, [sp, #16]
  4173c4:	ldr	q0, [x8]
  4173c8:	str	q0, [sp, #32]
  4173cc:	ldr	w10, [sp, #12]
  4173d0:	str	w10, [sp, #48]
  4173d4:	ldur	w11, [x29, #-20]
  4173d8:	str	w11, [sp, #52]
  4173dc:	ldur	x9, [x29, #-16]
  4173e0:	ldrb	w11, [x9, #148]
  4173e4:	mov	w13, #0x3                   	// #3
  4173e8:	lsr	w11, w11, w13
  4173ec:	and	w11, w11, #0x1
  4173f0:	tbnz	w11, #0, 4173f8 <udev_ctrl_send+0x8c>
  4173f4:	b	417404 <udev_ctrl_send+0x98>
  4173f8:	mov	w8, #0xffffffc9            	// #-55
  4173fc:	stur	w8, [x29, #-4]
  417400:	b	417504 <udev_ctrl_send+0x198>
  417404:	ldur	x8, [x29, #-32]
  417408:	cbz	x8, 417424 <udev_ctrl_send+0xb8>
  41740c:	add	x8, sp, #0x20
  417410:	add	x0, x8, #0x18
  417414:	ldur	x2, [x29, #-32]
  417418:	mov	x1, #0x100                 	// #256
  41741c:	bl	40adb0 <strscpy@plt>
  417420:	b	41742c <udev_ctrl_send+0xc0>
  417424:	ldur	w8, [x29, #-24]
  417428:	str	w8, [sp, #56]
  41742c:	ldur	x8, [x29, #-16]
  417430:	ldrb	w9, [x8, #148]
  417434:	mov	w10, #0x2                   	// #2
  417438:	lsr	w9, w9, w10
  41743c:	and	w9, w9, #0x1
  417440:	tbnz	w9, #0, 4174a0 <udev_ctrl_send+0x134>
  417444:	ldur	x8, [x29, #-16]
  417448:	ldr	w0, [x8, #4]
  41744c:	ldur	x8, [x29, #-16]
  417450:	add	x8, x8, #0x10
  417454:	str	x8, [sp, #24]
  417458:	ldur	x8, [x29, #-16]
  41745c:	ldr	w2, [x8, #144]
  417460:	ldr	x1, [sp, #24]
  417464:	bl	40adc0 <connect@plt>
  417468:	cmp	w0, #0x0
  41746c:	cset	w9, ge  // ge = tcont
  417470:	tbnz	w9, #0, 41748c <udev_ctrl_send+0x120>
  417474:	bl	40a480 <__errno_location@plt>
  417478:	ldr	w8, [x0]
  41747c:	mov	w9, wzr
  417480:	subs	w8, w9, w8
  417484:	stur	w8, [x29, #-4]
  417488:	b	417504 <udev_ctrl_send+0x198>
  41748c:	ldur	x8, [x29, #-16]
  417490:	ldrb	w9, [x8, #148]
  417494:	and	w9, w9, #0xfffffffb
  417498:	orr	w9, w9, #0x4
  41749c:	strb	w9, [x8, #148]
  4174a0:	ldur	x8, [x29, #-16]
  4174a4:	ldr	w0, [x8, #4]
  4174a8:	add	x1, sp, #0x20
  4174ac:	mov	x2, #0x118                 	// #280
  4174b0:	mov	w9, wzr
  4174b4:	mov	w3, w9
  4174b8:	bl	40add0 <send@plt>
  4174bc:	cmp	x0, #0x0
  4174c0:	cset	w9, ge  // ge = tcont
  4174c4:	tbnz	w9, #0, 4174e0 <udev_ctrl_send+0x174>
  4174c8:	bl	40a480 <__errno_location@plt>
  4174cc:	ldr	w8, [x0]
  4174d0:	mov	w9, wzr
  4174d4:	subs	w8, w9, w8
  4174d8:	stur	w8, [x29, #-4]
  4174dc:	b	417504 <udev_ctrl_send+0x198>
  4174e0:	ldur	w8, [x29, #-20]
  4174e4:	cmp	w8, #0x8
  4174e8:	b.ne	417500 <udev_ctrl_send+0x194>  // b.any
  4174ec:	ldur	x8, [x29, #-16]
  4174f0:	ldrb	w9, [x8, #148]
  4174f4:	and	w9, w9, #0xfffffff7
  4174f8:	orr	w9, w9, #0x8
  4174fc:	strb	w9, [x8, #148]
  417500:	stur	wzr, [x29, #-4]
  417504:	ldur	w0, [x29, #-4]
  417508:	ldr	x28, [sp, #368]
  41750c:	ldp	x29, x30, [sp, #352]
  417510:	add	sp, sp, #0x180
  417514:	ret

0000000000417518 <udev_ctrl_wait>:
  417518:	sub	sp, sp, #0x60
  41751c:	stp	x29, x30, [sp, #80]
  417520:	add	x29, sp, #0x50
  417524:	mov	x8, xzr
  417528:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  41752c:	add	x9, x9, #0xa33
  417530:	add	x2, x9, #0x3
  417534:	stur	x0, [x29, #-16]
  417538:	stur	x1, [x29, #-24]
  41753c:	stur	x8, [x29, #-32]
  417540:	str	x8, [sp, #40]
  417544:	str	x2, [sp, #24]
  417548:	ldur	x8, [x29, #-16]
  41754c:	cmp	x8, #0x0
  417550:	cset	w9, ne  // ne = any
  417554:	mov	w10, #0x1                   	// #1
  417558:	eor	w9, w9, #0x1
  41755c:	eor	w9, w9, w10
  417560:	eor	w9, w9, w10
  417564:	and	w9, w9, #0x1
  417568:	mov	w0, w9
  41756c:	sxtw	x8, w0
  417570:	cbz	x8, 417594 <udev_ctrl_wait+0x7c>
  417574:	mov	w0, #0x1                   	// #1
  417578:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  41757c:	add	x1, x1, #0xaea
  417580:	ldr	x2, [sp, #24]
  417584:	mov	w3, #0x170                 	// #368
  417588:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  41758c:	add	x4, x4, #0xcb6
  417590:	bl	40a540 <log_assert_failed_realm@plt>
  417594:	ldur	x8, [x29, #-16]
  417598:	ldr	w9, [x8, #4]
  41759c:	cmp	w9, #0x0
  4175a0:	cset	w9, ge  // ge = tcont
  4175a4:	tbnz	w9, #0, 4175b8 <udev_ctrl_wait+0xa0>
  4175a8:	stur	wzr, [x29, #-4]
  4175ac:	mov	w8, #0x1                   	// #1
  4175b0:	str	w8, [sp, #32]
  4175b4:	b	4177b0 <udev_ctrl_wait+0x298>
  4175b8:	ldur	x8, [x29, #-16]
  4175bc:	ldrb	w9, [x8, #148]
  4175c0:	mov	w10, #0x2                   	// #2
  4175c4:	lsr	w9, w9, w10
  4175c8:	and	w9, w9, #0x1
  4175cc:	tbnz	w9, #0, 4175e0 <udev_ctrl_wait+0xc8>
  4175d0:	stur	wzr, [x29, #-4]
  4175d4:	mov	w8, #0x1                   	// #1
  4175d8:	str	w8, [sp, #32]
  4175dc:	b	4177b0 <udev_ctrl_wait+0x298>
  4175e0:	ldur	x8, [x29, #-16]
  4175e4:	ldrb	w9, [x8, #148]
  4175e8:	mov	w10, #0x3                   	// #3
  4175ec:	lsr	w9, w9, w10
  4175f0:	and	w9, w9, #0x1
  4175f4:	tbnz	w9, #0, 41763c <udev_ctrl_wait+0x124>
  4175f8:	ldur	x0, [x29, #-16]
  4175fc:	mov	w8, wzr
  417600:	mov	w1, w8
  417604:	mov	w2, w8
  417608:	mov	x9, xzr
  41760c:	mov	x3, x9
  417610:	bl	41736c <udev_ctrl_send>
  417614:	str	w0, [sp, #36]
  417618:	ldr	w8, [sp, #36]
  41761c:	cmp	w8, #0x0
  417620:	cset	w8, ge  // ge = tcont
  417624:	tbnz	w8, #0, 41763c <udev_ctrl_wait+0x124>
  417628:	ldr	w8, [sp, #36]
  41762c:	stur	w8, [x29, #-4]
  417630:	mov	w8, #0x1                   	// #1
  417634:	str	w8, [sp, #32]
  417638:	b	4177b0 <udev_ctrl_wait+0x298>
  41763c:	ldur	x8, [x29, #-24]
  417640:	cbnz	x8, 417654 <udev_ctrl_wait+0x13c>
  417644:	stur	wzr, [x29, #-4]
  417648:	mov	w8, #0x1                   	// #1
  41764c:	str	w8, [sp, #32]
  417650:	b	4177b0 <udev_ctrl_wait+0x298>
  417654:	ldur	x8, [x29, #-16]
  417658:	ldr	x8, [x8, #152]
  41765c:	cbnz	x8, 417698 <udev_ctrl_wait+0x180>
  417660:	ldur	x0, [x29, #-16]
  417664:	mov	x8, xzr
  417668:	mov	x1, x8
  41766c:	bl	416b70 <udev_ctrl_attach_event>
  417670:	str	w0, [sp, #36]
  417674:	ldr	w9, [sp, #36]
  417678:	cmp	w9, #0x0
  41767c:	cset	w9, ge  // ge = tcont
  417680:	tbnz	w9, #0, 417698 <udev_ctrl_wait+0x180>
  417684:	ldr	w8, [sp, #36]
  417688:	stur	w8, [x29, #-4]
  41768c:	mov	w8, #0x1                   	// #1
  417690:	str	w8, [sp, #32]
  417694:	b	4177b0 <udev_ctrl_wait+0x298>
  417698:	ldur	x8, [x29, #-16]
  41769c:	ldr	x0, [x8, #152]
  4176a0:	ldur	x8, [x29, #-16]
  4176a4:	ldr	w2, [x8, #4]
  4176a8:	sub	x1, x29, #0x20
  4176ac:	mov	w3, #0x1                   	// #1
  4176b0:	adrp	x4, 417000 <udev_ctrl_event_handler+0x144>
  4176b4:	add	x4, x4, #0x804
  4176b8:	mov	x8, xzr
  4176bc:	mov	x5, x8
  4176c0:	bl	40a6c0 <sd_event_add_io@plt>
  4176c4:	str	w0, [sp, #36]
  4176c8:	ldr	w9, [sp, #36]
  4176cc:	cmp	w9, #0x0
  4176d0:	cset	w9, ge  // ge = tcont
  4176d4:	tbnz	w9, #0, 4176ec <udev_ctrl_wait+0x1d4>
  4176d8:	ldr	w8, [sp, #36]
  4176dc:	stur	w8, [x29, #-4]
  4176e0:	mov	w8, #0x1                   	// #1
  4176e4:	str	w8, [sp, #32]
  4176e8:	b	4177b0 <udev_ctrl_wait+0x298>
  4176ec:	ldur	x0, [x29, #-32]
  4176f0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4176f4:	add	x1, x1, #0xce5
  4176f8:	bl	40a700 <sd_event_source_set_description@plt>
  4176fc:	ldur	x8, [x29, #-24]
  417700:	mov	x9, #0xffffffffffffffff    	// #-1
  417704:	cmp	x8, x9
  417708:	b.eq	417798 <udev_ctrl_wait+0x280>  // b.none
  41770c:	ldur	x8, [x29, #-16]
  417710:	ldr	x0, [x8, #152]
  417714:	str	x0, [sp, #16]
  417718:	bl	40ade0 <clock_boottime_or_monotonic@plt>
  41771c:	str	w0, [sp, #12]
  417720:	bl	40ade0 <clock_boottime_or_monotonic@plt>
  417724:	bl	40a970 <now@plt>
  417728:	ldur	x1, [x29, #-24]
  41772c:	bl	417844 <usec_add>
  417730:	ldr	x8, [sp, #16]
  417734:	str	x0, [sp]
  417738:	mov	x0, x8
  41773c:	add	x1, sp, #0x28
  417740:	ldr	w2, [sp, #12]
  417744:	ldr	x3, [sp]
  417748:	mov	x9, xzr
  41774c:	mov	x4, x9
  417750:	mov	x5, x9
  417754:	mov	x9, #0xffffffffffffff92    	// #-110
  417758:	mov	x6, x9
  41775c:	bl	40aa80 <sd_event_add_time@plt>
  417760:	str	w0, [sp, #36]
  417764:	ldr	w10, [sp, #36]
  417768:	cmp	w10, #0x0
  41776c:	cset	w10, ge  // ge = tcont
  417770:	tbnz	w10, #0, 417788 <udev_ctrl_wait+0x270>
  417774:	ldr	w8, [sp, #36]
  417778:	stur	w8, [x29, #-4]
  41777c:	mov	w8, #0x1                   	// #1
  417780:	str	w8, [sp, #32]
  417784:	b	4177b0 <udev_ctrl_wait+0x298>
  417788:	ldr	x0, [sp, #40]
  41778c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  417790:	add	x1, x1, #0xcf7
  417794:	bl	40a700 <sd_event_source_set_description@plt>
  417798:	ldur	x8, [x29, #-16]
  41779c:	ldr	x0, [x8, #152]
  4177a0:	bl	40a730 <sd_event_loop@plt>
  4177a4:	stur	w0, [x29, #-4]
  4177a8:	mov	w9, #0x1                   	// #1
  4177ac:	str	w9, [sp, #32]
  4177b0:	add	x0, sp, #0x28
  4177b4:	bl	4177d0 <sd_event_source_unrefp>
  4177b8:	sub	x0, x29, #0x20
  4177bc:	bl	4177d0 <sd_event_source_unrefp>
  4177c0:	ldur	w0, [x29, #-4]
  4177c4:	ldp	x29, x30, [sp, #80]
  4177c8:	add	sp, sp, #0x60
  4177cc:	ret

00000000004177d0 <sd_event_source_unrefp>:
  4177d0:	sub	sp, sp, #0x20
  4177d4:	stp	x29, x30, [sp, #16]
  4177d8:	add	x29, sp, #0x10
  4177dc:	str	x0, [sp, #8]
  4177e0:	ldr	x8, [sp, #8]
  4177e4:	ldr	x8, [x8]
  4177e8:	cbz	x8, 4177f8 <sd_event_source_unrefp+0x28>
  4177ec:	ldr	x8, [sp, #8]
  4177f0:	ldr	x0, [x8]
  4177f4:	bl	40a780 <sd_event_source_unref@plt>
  4177f8:	ldp	x29, x30, [sp, #16]
  4177fc:	add	sp, sp, #0x20
  417800:	ret

0000000000417804 <udev_ctrl_wait_io_handler>:
  417804:	sub	sp, sp, #0x30
  417808:	stp	x29, x30, [sp, #32]
  41780c:	add	x29, sp, #0x20
  417810:	mov	w8, wzr
  417814:	stur	x0, [x29, #-8]
  417818:	stur	w1, [x29, #-12]
  41781c:	str	w2, [sp, #16]
  417820:	str	x3, [sp, #8]
  417824:	ldur	x0, [x29, #-8]
  417828:	str	w8, [sp, #4]
  41782c:	bl	40adf0 <sd_event_source_get_event@plt>
  417830:	ldr	w1, [sp, #4]
  417834:	bl	40a990 <sd_event_exit@plt>
  417838:	ldp	x29, x30, [sp, #32]
  41783c:	add	sp, sp, #0x30
  417840:	ret

0000000000417844 <usec_add>:
  417844:	sub	sp, sp, #0x20
  417848:	str	x0, [sp, #16]
  41784c:	str	x1, [sp, #8]
  417850:	ldr	x8, [sp, #16]
  417854:	ldr	x9, [sp, #8]
  417858:	add	x8, x8, x9
  41785c:	str	x8, [sp]
  417860:	ldr	x8, [sp]
  417864:	ldr	x9, [sp, #16]
  417868:	cmp	x8, x9
  41786c:	b.cc	417880 <usec_add+0x3c>  // b.lo, b.ul, b.last
  417870:	ldr	x8, [sp]
  417874:	ldr	x9, [sp, #8]
  417878:	cmp	x8, x9
  41787c:	b.cs	41788c <usec_add+0x48>  // b.hs, b.nlast
  417880:	mov	x8, #0xffffffffffffffff    	// #-1
  417884:	str	x8, [sp, #24]
  417888:	b	417894 <usec_add+0x50>
  41788c:	ldr	x8, [sp]
  417890:	str	x8, [sp, #24]
  417894:	ldr	x0, [sp, #24]
  417898:	add	sp, sp, #0x20
  41789c:	ret

00000000004178a0 <size_multiply_overflow>:
  4178a0:	sub	sp, sp, #0x20
  4178a4:	str	x0, [sp, #24]
  4178a8:	str	x1, [sp, #16]
  4178ac:	ldr	x8, [sp, #16]
  4178b0:	mov	w9, #0x0                   	// #0
  4178b4:	str	w9, [sp, #12]
  4178b8:	cbz	x8, 4178d8 <size_multiply_overflow+0x38>
  4178bc:	ldr	x8, [sp, #24]
  4178c0:	ldr	x9, [sp, #16]
  4178c4:	mov	x10, #0xffffffffffffffff    	// #-1
  4178c8:	udiv	x9, x10, x9
  4178cc:	cmp	x8, x9
  4178d0:	cset	w11, hi  // hi = pmore
  4178d4:	str	w11, [sp, #12]
  4178d8:	ldr	w8, [sp, #12]
  4178dc:	mov	w9, #0x1                   	// #1
  4178e0:	eor	w8, w8, #0x1
  4178e4:	eor	w8, w8, w9
  4178e8:	and	w8, w8, #0x1
  4178ec:	mov	w0, w8
  4178f0:	sxtw	x10, w0
  4178f4:	cmp	x10, #0x0
  4178f8:	cset	w8, ne  // ne = any
  4178fc:	and	w0, w8, #0x1
  417900:	add	sp, sp, #0x20
  417904:	ret

0000000000417908 <udev_ctrl_disconnect>:
  417908:	sub	sp, sp, #0x20
  41790c:	stp	x29, x30, [sp, #16]
  417910:	add	x29, sp, #0x10
  417914:	str	x0, [sp, #8]
  417918:	ldr	x8, [sp, #8]
  41791c:	cbnz	x8, 417924 <udev_ctrl_disconnect+0x1c>
  417920:	b	41794c <udev_ctrl_disconnect+0x44>
  417924:	ldr	x8, [sp, #8]
  417928:	ldr	x0, [x8, #168]
  41792c:	bl	40a780 <sd_event_source_unref@plt>
  417930:	ldr	x8, [sp, #8]
  417934:	str	x0, [x8, #168]
  417938:	ldr	x8, [sp, #8]
  41793c:	ldr	w0, [x8, #8]
  417940:	bl	40a760 <safe_close@plt>
  417944:	ldr	x8, [sp, #8]
  417948:	str	w0, [x8, #8]
  41794c:	ldp	x29, x30, [sp, #16]
  417950:	add	sp, sp, #0x20
  417954:	ret

0000000000417958 <mfree>:
  417958:	sub	sp, sp, #0x20
  41795c:	stp	x29, x30, [sp, #16]
  417960:	add	x29, sp, #0x10
  417964:	mov	x8, xzr
  417968:	str	x0, [sp, #8]
  41796c:	ldr	x0, [sp, #8]
  417970:	str	x8, [sp]
  417974:	bl	40a530 <free@plt>
  417978:	ldr	x0, [sp]
  41797c:	ldp	x29, x30, [sp, #16]
  417980:	add	sp, sp, #0x20
  417984:	ret

0000000000417988 <ERRNO_IS_ACCEPT_AGAIN>:
  417988:	sub	sp, sp, #0x20
  41798c:	stp	x29, x30, [sp, #16]
  417990:	add	x29, sp, #0x10
  417994:	stur	w0, [x29, #-4]
  417998:	ldur	w0, [x29, #-4]
  41799c:	bl	417f64 <ERRNO_IS_DISCONNECT>
  4179a0:	mov	w8, #0x1                   	// #1
  4179a4:	str	w8, [sp, #4]
  4179a8:	tbnz	w0, #0, 417a14 <ERRNO_IS_ACCEPT_AGAIN+0x8c>
  4179ac:	mov	w8, #0x0                   	// #0
  4179b0:	sturb	w8, [x29, #-5]
  4179b4:	ldur	w0, [x29, #-4]
  4179b8:	bl	40a410 <abs@plt>
  4179bc:	cmp	w0, #0x4
  4179c0:	str	w0, [sp]
  4179c4:	b.eq	4179f4 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  4179c8:	b	4179cc <ERRNO_IS_ACCEPT_AGAIN+0x44>
  4179cc:	ldr	w8, [sp]
  4179d0:	cmp	w8, #0xb
  4179d4:	b.eq	4179f4 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  4179d8:	b	4179dc <ERRNO_IS_ACCEPT_AGAIN+0x54>
  4179dc:	ldr	w8, [sp]
  4179e0:	cmp	w8, #0x5f
  4179e4:	cset	w9, eq  // eq = none
  4179e8:	eor	w9, w9, #0x1
  4179ec:	tbnz	w9, #0, 417a00 <ERRNO_IS_ACCEPT_AGAIN+0x78>
  4179f0:	b	4179f4 <ERRNO_IS_ACCEPT_AGAIN+0x6c>
  4179f4:	mov	w8, #0x1                   	// #1
  4179f8:	sturb	w8, [x29, #-5]
  4179fc:	b	417a00 <ERRNO_IS_ACCEPT_AGAIN+0x78>
  417a00:	ldurb	w8, [x29, #-5]
  417a04:	and	w8, w8, #0x1
  417a08:	sturb	w8, [x29, #-6]
  417a0c:	ldurb	w8, [x29, #-6]
  417a10:	str	w8, [sp, #4]
  417a14:	ldr	w8, [sp, #4]
  417a18:	and	w0, w8, #0x1
  417a1c:	ldp	x29, x30, [sp, #16]
  417a20:	add	sp, sp, #0x20
  417a24:	ret

0000000000417a28 <udev_ctrl_connection_event_handler>:
  417a28:	stp	x29, x30, [sp, #-32]!
  417a2c:	str	x28, [sp, #16]
  417a30:	mov	x29, sp
  417a34:	sub	sp, sp, #0x250
  417a38:	add	x8, sp, #0xa8
  417a3c:	mov	x9, xzr
  417a40:	mov	x10, #0x118                 	// #280
  417a44:	mov	x11, #0x1                   	// #1
  417a48:	mov	x12, #0x20                  	// #32
  417a4c:	adrp	x13, 465000 <on_inotify.__assert_in_set+0x1540>
  417a50:	add	x13, x13, #0xa33
  417a54:	add	x13, x13, #0x3
  417a58:	adrp	x14, 465000 <on_inotify.__assert_in_set+0x1540>
  417a5c:	add	x14, x14, #0xefa
  417a60:	add	x15, sp, #0x110
  417a64:	add	x16, sp, #0x100
  417a68:	add	x17, sp, #0xe0
  417a6c:	add	x18, sp, #0xa8
  417a70:	str	x0, [x8, #408]
  417a74:	stur	w1, [x29, #-20]
  417a78:	stur	w2, [x29, #-24]
  417a7c:	str	x3, [x8, #392]
  417a80:	str	x9, [x8, #384]
  417a84:	str	x15, [x8, #88]
  417a88:	str	x10, [x8, #96]
  417a8c:	str	x9, [sp, #168]
  417a90:	str	wzr, [sp, #176]
  417a94:	str	x16, [x18, #16]
  417a98:	str	x11, [x8, #24]
  417a9c:	str	x17, [x18, #32]
  417aa0:	str	x12, [x8, #40]
  417aa4:	str	wzr, [sp, #216]
  417aa8:	str	x8, [sp, #48]
  417aac:	str	x13, [sp, #40]
  417ab0:	str	x14, [sp, #32]
  417ab4:	ldr	x8, [sp, #48]
  417ab8:	ldr	x9, [x8, #392]
  417abc:	cmp	x9, #0x0
  417ac0:	cset	w10, ne  // ne = any
  417ac4:	mov	w11, #0x1                   	// #1
  417ac8:	eor	w10, w10, #0x1
  417acc:	eor	w10, w10, w11
  417ad0:	eor	w10, w10, w11
  417ad4:	and	w10, w10, #0x1
  417ad8:	mov	w0, w10
  417adc:	sxtw	x9, w0
  417ae0:	cbz	x9, 417b04 <udev_ctrl_connection_event_handler+0xdc>
  417ae4:	mov	w0, #0x1                   	// #1
  417ae8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  417aec:	add	x1, x1, #0xea0
  417af0:	ldr	x2, [sp, #40]
  417af4:	mov	w3, #0xcb                  	// #203
  417af8:	adrp	x4, 465000 <on_inotify.__assert_in_set+0x1540>
  417afc:	add	x4, x4, #0xea9
  417b00:	bl	40a540 <log_assert_failed_realm@plt>
  417b04:	ldr	x8, [sp, #48]
  417b08:	ldr	x0, [x8, #392]
  417b0c:	bl	4168e0 <udev_ctrl_ref>
  417b10:	ldr	x8, [sp, #48]
  417b14:	str	x0, [x8, #384]
  417b18:	ldur	w0, [x29, #-20]
  417b1c:	bl	40ae00 <next_datagram_size_fd@plt>
  417b20:	str	x0, [sp, #144]
  417b24:	ldr	x8, [sp, #144]
  417b28:	cmp	x8, #0x0
  417b2c:	cset	w9, ge  // ge = tcont
  417b30:	tbnz	w9, #0, 417bc4 <udev_ctrl_connection_event_handler+0x19c>
  417b34:	mov	w8, #0x3                   	// #3
  417b38:	str	w8, [sp, #140]
  417b3c:	ldr	x9, [sp, #144]
  417b40:	str	w9, [sp, #136]
  417b44:	mov	w8, #0x1                   	// #1
  417b48:	str	w8, [sp, #132]
  417b4c:	ldr	w0, [sp, #132]
  417b50:	bl	40a3f0 <log_get_max_level_realm@plt>
  417b54:	ldr	w8, [sp, #140]
  417b58:	and	w8, w8, #0x7
  417b5c:	cmp	w0, w8
  417b60:	b.lt	417b94 <udev_ctrl_connection_event_handler+0x16c>  // b.tstop
  417b64:	ldr	w8, [sp, #132]
  417b68:	ldr	w9, [sp, #140]
  417b6c:	orr	w0, w9, w8, lsl #10
  417b70:	ldr	w1, [sp, #136]
  417b74:	ldr	x2, [sp, #40]
  417b78:	mov	w3, #0xd3                  	// #211
  417b7c:	ldr	x4, [sp, #32]
  417b80:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417b84:	add	x5, x5, #0xf1d
  417b88:	bl	40a400 <log_internal_realm@plt>
  417b8c:	str	w0, [sp, #28]
  417b90:	b	417ba8 <udev_ctrl_connection_event_handler+0x180>
  417b94:	ldr	w0, [sp, #136]
  417b98:	bl	40a410 <abs@plt>
  417b9c:	mov	w8, wzr
  417ba0:	subs	w8, w8, w0, uxtb
  417ba4:	str	w8, [sp, #28]
  417ba8:	ldr	w8, [sp, #28]
  417bac:	str	w8, [sp, #128]
  417bb0:	ldr	w8, [sp, #128]
  417bb4:	stur	w8, [x29, #-4]
  417bb8:	mov	w8, #0x1                   	// #1
  417bbc:	str	w8, [sp, #124]
  417bc0:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417bc4:	ldr	x8, [sp, #144]
  417bc8:	cbnz	x8, 417bdc <udev_ctrl_connection_event_handler+0x1b4>
  417bcc:	stur	wzr, [x29, #-4]
  417bd0:	mov	w8, #0x1                   	// #1
  417bd4:	str	w8, [sp, #124]
  417bd8:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417bdc:	ldur	w0, [x29, #-20]
  417be0:	add	x1, sp, #0xa8
  417be4:	mov	w8, wzr
  417be8:	mov	w2, w8
  417bec:	bl	40a950 <recvmsg@plt>
  417bf0:	str	x0, [sp, #144]
  417bf4:	ldr	x9, [sp, #144]
  417bf8:	cmp	x9, #0x0
  417bfc:	cset	w8, ge  // ge = tcont
  417c00:	tbnz	w8, #0, 417cb8 <udev_ctrl_connection_event_handler+0x290>
  417c04:	bl	40a480 <__errno_location@plt>
  417c08:	ldr	w8, [x0]
  417c0c:	cmp	w8, #0x4
  417c10:	b.eq	417ca8 <udev_ctrl_connection_event_handler+0x280>  // b.none
  417c14:	mov	w8, #0x3                   	// #3
  417c18:	str	w8, [sp, #120]
  417c1c:	bl	40a480 <__errno_location@plt>
  417c20:	ldr	w8, [x0]
  417c24:	str	w8, [sp, #116]
  417c28:	mov	w8, #0x1                   	// #1
  417c2c:	str	w8, [sp, #112]
  417c30:	ldr	w0, [sp, #112]
  417c34:	bl	40a3f0 <log_get_max_level_realm@plt>
  417c38:	ldr	w8, [sp, #120]
  417c3c:	and	w8, w8, #0x7
  417c40:	cmp	w0, w8
  417c44:	b.lt	417c78 <udev_ctrl_connection_event_handler+0x250>  // b.tstop
  417c48:	ldr	w8, [sp, #112]
  417c4c:	ldr	w9, [sp, #120]
  417c50:	orr	w0, w9, w8, lsl #10
  417c54:	ldr	w1, [sp, #116]
  417c58:	ldr	x2, [sp, #40]
  417c5c:	mov	w3, #0xda                  	// #218
  417c60:	ldr	x4, [sp, #32]
  417c64:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417c68:	add	x5, x5, #0xf3f
  417c6c:	bl	40a400 <log_internal_realm@plt>
  417c70:	str	w0, [sp, #24]
  417c74:	b	417c8c <udev_ctrl_connection_event_handler+0x264>
  417c78:	ldr	w0, [sp, #116]
  417c7c:	bl	40a410 <abs@plt>
  417c80:	mov	w8, wzr
  417c84:	subs	w8, w8, w0, uxtb
  417c88:	str	w8, [sp, #24]
  417c8c:	ldr	w8, [sp, #24]
  417c90:	str	w8, [sp, #108]
  417c94:	ldr	w8, [sp, #108]
  417c98:	stur	w8, [x29, #-4]
  417c9c:	mov	w8, #0x1                   	// #1
  417ca0:	str	w8, [sp, #124]
  417ca4:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417ca8:	stur	wzr, [x29, #-4]
  417cac:	mov	w8, #0x1                   	// #1
  417cb0:	str	w8, [sp, #124]
  417cb4:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417cb8:	add	x0, sp, #0xa8
  417cbc:	bl	40ae10 <cmsg_close_all@plt>
  417cc0:	ldr	x8, [sp, #48]
  417cc4:	ldr	x9, [x8, #40]
  417cc8:	cmp	x9, #0x10
  417ccc:	b.cc	417ce0 <udev_ctrl_connection_event_handler+0x2b8>  // b.lo, b.ul, b.last
  417cd0:	add	x8, sp, #0xa8
  417cd4:	ldr	x8, [x8, #32]
  417cd8:	str	x8, [sp, #16]
  417cdc:	b	417ce8 <udev_ctrl_connection_event_handler+0x2c0>
  417ce0:	mov	x8, xzr
  417ce4:	str	x8, [sp, #16]
  417ce8:	ldr	x8, [sp, #16]
  417cec:	str	x8, [sp, #160]
  417cf0:	ldr	x8, [sp, #160]
  417cf4:	cbz	x8, 417d08 <udev_ctrl_connection_event_handler+0x2e0>
  417cf8:	ldr	x8, [sp, #160]
  417cfc:	ldr	w9, [x8, #12]
  417d00:	cmp	w9, #0x2
  417d04:	b.eq	417d90 <udev_ctrl_connection_event_handler+0x368>  // b.none
  417d08:	mov	w8, #0x3                   	// #3
  417d0c:	str	w8, [sp, #104]
  417d10:	str	wzr, [sp, #100]
  417d14:	mov	w8, #0x1                   	// #1
  417d18:	str	w8, [sp, #96]
  417d1c:	ldr	w0, [sp, #96]
  417d20:	bl	40a3f0 <log_get_max_level_realm@plt>
  417d24:	ldr	w8, [sp, #104]
  417d28:	and	w8, w8, #0x7
  417d2c:	cmp	w0, w8
  417d30:	b.lt	417d64 <udev_ctrl_connection_event_handler+0x33c>  // b.tstop
  417d34:	ldr	w8, [sp, #96]
  417d38:	ldr	w9, [sp, #104]
  417d3c:	orr	w0, w9, w8, lsl #10
  417d40:	ldr	w1, [sp, #100]
  417d44:	ldr	x2, [sp, #40]
  417d48:	mov	w3, #0xe4                  	// #228
  417d4c:	ldr	x4, [sp, #32]
  417d50:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417d54:	add	x5, x5, #0xf62
  417d58:	bl	40a400 <log_internal_realm@plt>
  417d5c:	str	w0, [sp, #12]
  417d60:	b	417d78 <udev_ctrl_connection_event_handler+0x350>
  417d64:	ldr	w0, [sp, #100]
  417d68:	bl	40a410 <abs@plt>
  417d6c:	mov	w8, wzr
  417d70:	subs	w8, w8, w0, uxtb
  417d74:	str	w8, [sp, #12]
  417d78:	ldr	w8, [sp, #12]
  417d7c:	str	w8, [sp, #92]
  417d80:	stur	wzr, [x29, #-4]
  417d84:	mov	w8, #0x1                   	// #1
  417d88:	str	w8, [sp, #124]
  417d8c:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417d90:	ldr	x8, [sp, #160]
  417d94:	add	x8, x8, #0x10
  417d98:	str	x8, [sp, #152]
  417d9c:	ldr	x8, [sp, #152]
  417da0:	ldr	w9, [x8, #4]
  417da4:	cbz	w9, 417e38 <udev_ctrl_connection_event_handler+0x410>
  417da8:	mov	w8, #0x3                   	// #3
  417dac:	str	w8, [sp, #88]
  417db0:	str	wzr, [sp, #84]
  417db4:	mov	w8, #0x1                   	// #1
  417db8:	str	w8, [sp, #80]
  417dbc:	ldr	w0, [sp, #80]
  417dc0:	bl	40a3f0 <log_get_max_level_realm@plt>
  417dc4:	ldr	w8, [sp, #88]
  417dc8:	and	w8, w8, #0x7
  417dcc:	cmp	w0, w8
  417dd0:	b.lt	417e0c <udev_ctrl_connection_event_handler+0x3e4>  // b.tstop
  417dd4:	ldr	w8, [sp, #80]
  417dd8:	ldr	w9, [sp, #88]
  417ddc:	orr	w0, w9, w8, lsl #10
  417de0:	ldr	w1, [sp, #84]
  417de4:	ldr	x10, [sp, #152]
  417de8:	ldr	w6, [x10, #4]
  417dec:	ldr	x2, [sp, #40]
  417df0:	mov	w3, #0xeb                  	// #235
  417df4:	ldr	x4, [sp, #32]
  417df8:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417dfc:	add	x5, x5, #0xf93
  417e00:	bl	40a400 <log_internal_realm@plt>
  417e04:	str	w0, [sp, #8]
  417e08:	b	417e20 <udev_ctrl_connection_event_handler+0x3f8>
  417e0c:	ldr	w0, [sp, #84]
  417e10:	bl	40a410 <abs@plt>
  417e14:	mov	w8, wzr
  417e18:	subs	w8, w8, w0, uxtb
  417e1c:	str	w8, [sp, #8]
  417e20:	ldr	w8, [sp, #8]
  417e24:	str	w8, [sp, #76]
  417e28:	stur	wzr, [x29, #-4]
  417e2c:	mov	w8, #0x1                   	// #1
  417e30:	str	w8, [sp, #124]
  417e34:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417e38:	ldr	w8, [sp, #288]
  417e3c:	mov	w9, #0x1dea                	// #7658
  417e40:	movk	w9, #0xdead, lsl #16
  417e44:	cmp	w8, w9
  417e48:	b.eq	417ed8 <udev_ctrl_connection_event_handler+0x4b0>  // b.none
  417e4c:	mov	w8, #0x3                   	// #3
  417e50:	str	w8, [sp, #72]
  417e54:	str	wzr, [sp, #68]
  417e58:	mov	w8, #0x1                   	// #1
  417e5c:	str	w8, [sp, #64]
  417e60:	ldr	w0, [sp, #64]
  417e64:	bl	40a3f0 <log_get_max_level_realm@plt>
  417e68:	ldr	w8, [sp, #72]
  417e6c:	and	w8, w8, #0x7
  417e70:	cmp	w0, w8
  417e74:	b.lt	417eac <udev_ctrl_connection_event_handler+0x484>  // b.tstop
  417e78:	ldr	w8, [sp, #64]
  417e7c:	ldr	w9, [sp, #72]
  417e80:	orr	w0, w9, w8, lsl #10
  417e84:	ldr	w1, [sp, #68]
  417e88:	ldr	w6, [sp, #288]
  417e8c:	ldr	x2, [sp, #40]
  417e90:	mov	w3, #0xf0                  	// #240
  417e94:	ldr	x4, [sp, #32]
  417e98:	adrp	x5, 465000 <on_inotify.__assert_in_set+0x1540>
  417e9c:	add	x5, x5, #0xfbb
  417ea0:	bl	40a400 <log_internal_realm@plt>
  417ea4:	str	w0, [sp, #4]
  417ea8:	b	417ec0 <udev_ctrl_connection_event_handler+0x498>
  417eac:	ldr	w0, [sp, #68]
  417eb0:	bl	40a410 <abs@plt>
  417eb4:	mov	w8, wzr
  417eb8:	subs	w8, w8, w0, uxtb
  417ebc:	str	w8, [sp, #4]
  417ec0:	ldr	w8, [sp, #4]
  417ec4:	str	w8, [sp, #60]
  417ec8:	stur	wzr, [x29, #-4]
  417ecc:	mov	w8, #0x1                   	// #1
  417ed0:	str	w8, [sp, #124]
  417ed4:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417ed8:	ldr	w8, [sp, #292]
  417edc:	cbnz	w8, 417ef0 <udev_ctrl_connection_event_handler+0x4c8>
  417ee0:	stur	wzr, [x29, #-4]
  417ee4:	mov	w8, #0x1                   	// #1
  417ee8:	str	w8, [sp, #124]
  417eec:	b	417f48 <udev_ctrl_connection_event_handler+0x520>
  417ef0:	ldr	x8, [sp, #48]
  417ef4:	ldr	x9, [x8, #384]
  417ef8:	ldr	x9, [x9, #176]
  417efc:	cbz	x9, 417f28 <udev_ctrl_connection_event_handler+0x500>
  417f00:	ldr	x8, [sp, #48]
  417f04:	ldr	x9, [x8, #384]
  417f08:	ldr	x9, [x9, #176]
  417f0c:	ldr	x0, [x8, #384]
  417f10:	add	x10, sp, #0x110
  417f14:	ldr	w1, [sp, #292]
  417f18:	add	x2, x10, #0x18
  417f1c:	ldr	x10, [x8, #384]
  417f20:	ldr	x3, [x10, #184]
  417f24:	blr	x9
  417f28:	ldr	x8, [sp, #48]
  417f2c:	ldr	x0, [x8, #384]
  417f30:	bl	41698c <udev_ctrl_unref>
  417f34:	ldr	x8, [sp, #48]
  417f38:	str	x0, [x8, #384]
  417f3c:	stur	wzr, [x29, #-4]
  417f40:	mov	w9, #0x1                   	// #1
  417f44:	str	w9, [sp, #124]
  417f48:	sub	x0, x29, #0x28
  417f4c:	bl	417fe4 <udev_ctrl_disconnect_and_listen_againp>
  417f50:	ldur	w0, [x29, #-4]
  417f54:	add	sp, sp, #0x250
  417f58:	ldr	x28, [sp, #16]
  417f5c:	ldp	x29, x30, [sp], #32
  417f60:	ret

0000000000417f64 <ERRNO_IS_DISCONNECT>:
  417f64:	sub	sp, sp, #0x20
  417f68:	stp	x29, x30, [sp, #16]
  417f6c:	add	x29, sp, #0x10
  417f70:	mov	w8, #0x0                   	// #0
  417f74:	stur	w0, [x29, #-4]
  417f78:	sturb	w8, [x29, #-5]
  417f7c:	ldur	w0, [x29, #-4]
  417f80:	bl	40a410 <abs@plt>
  417f84:	subs	w8, w0, #0x20
  417f88:	mov	w9, w8
  417f8c:	ubfx	x9, x9, #0, #32
  417f90:	cmp	x9, #0x51
  417f94:	str	x9, [sp]
  417f98:	b.hi	417fc0 <ERRNO_IS_DISCONNECT+0x5c>  // b.pmore
  417f9c:	adrp	x8, 471000 <on_inotify.__assert_in_set+0xd540>
  417fa0:	add	x8, x8, #0xf60
  417fa4:	ldr	x11, [sp]
  417fa8:	ldrsw	x10, [x8, x11, lsl #2]
  417fac:	add	x9, x8, x10
  417fb0:	br	x9
  417fb4:	mov	w8, #0x1                   	// #1
  417fb8:	sturb	w8, [x29, #-5]
  417fbc:	b	417fc0 <ERRNO_IS_DISCONNECT+0x5c>
  417fc0:	ldurb	w8, [x29, #-5]
  417fc4:	mov	w9, #0x1                   	// #1
  417fc8:	and	w8, w8, w9
  417fcc:	sturb	w8, [x29, #-6]
  417fd0:	ldurb	w8, [x29, #-6]
  417fd4:	and	w0, w8, #0x1
  417fd8:	ldp	x29, x30, [sp, #16]
  417fdc:	add	sp, sp, #0x20
  417fe0:	ret

0000000000417fe4 <udev_ctrl_disconnect_and_listen_againp>:
  417fe4:	sub	sp, sp, #0x20
  417fe8:	stp	x29, x30, [sp, #16]
  417fec:	add	x29, sp, #0x10
  417ff0:	str	x0, [sp, #8]
  417ff4:	ldr	x8, [sp, #8]
  417ff8:	ldr	x8, [x8]
  417ffc:	cbz	x8, 41800c <udev_ctrl_disconnect_and_listen_againp+0x28>
  418000:	ldr	x8, [sp, #8]
  418004:	ldr	x0, [x8]
  418008:	bl	418018 <udev_ctrl_disconnect_and_listen_again>
  41800c:	ldp	x29, x30, [sp, #16]
  418010:	add	sp, sp, #0x20
  418014:	ret

0000000000418018 <udev_ctrl_disconnect_and_listen_again>:
  418018:	sub	sp, sp, #0x20
  41801c:	stp	x29, x30, [sp, #16]
  418020:	add	x29, sp, #0x10
  418024:	mov	w1, #0x1                   	// #1
  418028:	str	x0, [sp, #8]
  41802c:	ldr	x0, [sp, #8]
  418030:	str	w1, [sp, #4]
  418034:	bl	417908 <udev_ctrl_disconnect>
  418038:	ldr	x0, [sp, #8]
  41803c:	bl	41698c <udev_ctrl_unref>
  418040:	ldr	x8, [sp, #8]
  418044:	ldr	x8, [x8, #160]
  418048:	mov	x0, x8
  41804c:	ldr	w1, [sp, #4]
  418050:	bl	40ada0 <sd_event_source_set_enabled@plt>
  418054:	ldp	x29, x30, [sp, #16]
  418058:	add	sp, sp, #0x20
  41805c:	ret

0000000000418060 <udev_event_new>:
  418060:	sub	sp, sp, #0xc0
  418064:	stp	x29, x30, [sp, #176]
  418068:	add	x29, sp, #0xb0
  41806c:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  418070:	add	x8, x8, #0xff0
  418074:	add	x8, x8, #0x3
  418078:	stur	x0, [x29, #-16]
  41807c:	stur	x1, [x29, #-24]
  418080:	stur	x2, [x29, #-32]
  418084:	str	x8, [sp, #16]
  418088:	ldur	x8, [x29, #-16]
  41808c:	cmp	x8, #0x0
  418090:	cset	w9, ne  // ne = any
  418094:	mov	w10, #0x1                   	// #1
  418098:	eor	w9, w9, #0x1
  41809c:	eor	w9, w9, w10
  4180a0:	eor	w9, w9, w10
  4180a4:	and	w9, w9, #0x1
  4180a8:	mov	w0, w9
  4180ac:	sxtw	x8, w0
  4180b0:	cbz	x8, 4180d4 <udev_event_new+0x74>
  4180b4:	mov	w0, #0x1                   	// #1
  4180b8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4180bc:	add	x1, x1, #0xee1
  4180c0:	ldr	x2, [sp, #16]
  4180c4:	mov	w3, #0x38                  	// #56
  4180c8:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  4180cc:	add	x4, x4, #0x9
  4180d0:	bl	40a540 <log_assert_failed_realm@plt>
  4180d4:	mov	x0, #0x70                  	// #112
  4180d8:	mov	x1, #0x1                   	// #1
  4180dc:	bl	418204 <malloc_multiply>
  4180e0:	stur	x0, [x29, #-40]
  4180e4:	ldur	x8, [x29, #-40]
  4180e8:	cbnz	x8, 4180f8 <udev_event_new+0x98>
  4180ec:	mov	x8, xzr
  4180f0:	stur	x8, [x29, #-8]
  4180f4:	b	4181f4 <udev_event_new+0x194>
  4180f8:	ldur	x0, [x29, #-40]
  4180fc:	ldur	x8, [x29, #-16]
  418100:	str	x0, [sp, #8]
  418104:	mov	x0, x8
  418108:	bl	40aab0 <sd_device_ref@plt>
  41810c:	add	x8, sp, #0x18
  418110:	str	x0, [sp, #24]
  418114:	mov	x9, xzr
  418118:	str	x9, [x8, #8]
  41811c:	str	x9, [x8, #16]
  418120:	str	x9, [x8, #24]
  418124:	str	x9, [x8, #32]
  418128:	mov	w10, #0xffffffff            	// #-1
  41812c:	str	w10, [sp, #64]
  418130:	str	w10, [sp, #68]
  418134:	str	w10, [sp, #72]
  418138:	str	x9, [x8, #56]
  41813c:	str	x9, [x8, #64]
  418140:	ldur	x9, [x29, #-24]
  418144:	str	x9, [sp, #96]
  418148:	mov	w0, #0x1                   	// #1
  41814c:	str	x8, [sp]
  418150:	bl	40a970 <now@plt>
  418154:	str	x0, [sp, #104]
  418158:	ldur	x0, [x29, #-32]
  41815c:	bl	40ab70 <sd_netlink_ref@plt>
  418160:	ldr	x8, [sp]
  418164:	str	x0, [x8, #88]
  418168:	str	wzr, [sp, #120]
  41816c:	str	wzr, [sp, #124]
  418170:	ldrh	w10, [x8, #104]
  418174:	and	w10, w10, #0xffffff00
  418178:	strh	w10, [x8, #104]
  41817c:	ldrh	w10, [x8, #104]
  418180:	and	w10, w10, #0xfffffeff
  418184:	strh	w10, [x8, #104]
  418188:	ldrh	w10, [x8, #104]
  41818c:	and	w10, w10, #0xfffffdff
  418190:	strh	w10, [x8, #104]
  418194:	ldrh	w10, [x8, #104]
  418198:	and	w10, w10, #0xfffffbff
  41819c:	strh	w10, [x8, #104]
  4181a0:	ldrh	w10, [x8, #104]
  4181a4:	and	w10, w10, #0xfffff7ff
  4181a8:	strh	w10, [x8, #104]
  4181ac:	ldrh	w10, [x8, #104]
  4181b0:	and	w10, w10, #0xffffefff
  4181b4:	strh	w10, [x8, #104]
  4181b8:	ldrh	w10, [x8, #104]
  4181bc:	and	w10, w10, #0xffffdfff
  4181c0:	strh	w10, [x8, #104]
  4181c4:	ldrh	w10, [x8, #104]
  4181c8:	and	w10, w10, #0xffffbfff
  4181cc:	strh	w10, [x8, #104]
  4181d0:	ldrh	w10, [x8, #104]
  4181d4:	and	w10, w10, #0x7fff
  4181d8:	strh	w10, [x8, #104]
  4181dc:	ldr	x0, [sp, #8]
  4181e0:	mov	x1, x8
  4181e4:	mov	x2, #0x70                  	// #112
  4181e8:	bl	40a600 <memcpy@plt>
  4181ec:	ldur	x8, [x29, #-40]
  4181f0:	stur	x8, [x29, #-8]
  4181f4:	ldur	x0, [x29, #-8]
  4181f8:	ldp	x29, x30, [sp, #176]
  4181fc:	add	sp, sp, #0xc0
  418200:	ret

0000000000418204 <malloc_multiply>:
  418204:	sub	sp, sp, #0x40
  418208:	stp	x29, x30, [sp, #48]
  41820c:	add	x29, sp, #0x30
  418210:	stur	x0, [x29, #-16]
  418214:	str	x1, [sp, #24]
  418218:	ldur	x0, [x29, #-16]
  41821c:	ldr	x1, [sp, #24]
  418220:	bl	41cf60 <size_multiply_overflow>
  418224:	tbnz	w0, #0, 41822c <malloc_multiply+0x28>
  418228:	b	418238 <malloc_multiply+0x34>
  41822c:	mov	x8, xzr
  418230:	stur	x8, [x29, #-8]
  418234:	b	418270 <malloc_multiply+0x6c>
  418238:	ldur	x8, [x29, #-16]
  41823c:	ldr	x9, [sp, #24]
  418240:	mul	x8, x8, x9
  418244:	str	x8, [sp, #16]
  418248:	cbz	x8, 418258 <malloc_multiply+0x54>
  41824c:	ldr	x8, [sp, #16]
  418250:	str	x8, [sp, #8]
  418254:	b	418260 <malloc_multiply+0x5c>
  418258:	mov	x8, #0x1                   	// #1
  41825c:	str	x8, [sp, #8]
  418260:	ldr	x8, [sp, #8]
  418264:	mov	x0, x8
  418268:	bl	40a820 <malloc@plt>
  41826c:	stur	x0, [x29, #-8]
  418270:	ldur	x0, [x29, #-8]
  418274:	ldp	x29, x30, [sp, #48]
  418278:	add	sp, sp, #0x40
  41827c:	ret

0000000000418280 <udev_event_free>:
  418280:	sub	sp, sp, #0x20
  418284:	stp	x29, x30, [sp, #16]
  418288:	add	x29, sp, #0x10
  41828c:	str	x0, [sp]
  418290:	ldr	x8, [sp]
  418294:	cbnz	x8, 4182a4 <udev_event_free+0x24>
  418298:	mov	x8, xzr
  41829c:	str	x8, [sp, #8]
  4182a0:	b	418318 <udev_event_free+0x98>
  4182a4:	ldr	x8, [sp]
  4182a8:	ldr	x0, [x8]
  4182ac:	bl	40a7c0 <sd_device_unref@plt>
  4182b0:	ldr	x8, [sp]
  4182b4:	ldr	x8, [x8, #16]
  4182b8:	mov	x0, x8
  4182bc:	bl	40a7c0 <sd_device_unref@plt>
  4182c0:	ldr	x8, [sp]
  4182c4:	ldr	x8, [x8, #88]
  4182c8:	mov	x0, x8
  4182cc:	bl	40a750 <sd_netlink_unref@plt>
  4182d0:	ldr	x8, [sp]
  4182d4:	ldr	x8, [x8, #64]
  4182d8:	mov	x0, x8
  4182dc:	bl	418328 <ordered_hashmap_free_free_key>
  4182e0:	ldr	x8, [sp]
  4182e4:	ldr	x8, [x8, #56]
  4182e8:	mov	x0, x8
  4182ec:	bl	41835c <ordered_hashmap_free_free_free>
  4182f0:	ldr	x8, [sp]
  4182f4:	ldr	x8, [x8, #32]
  4182f8:	mov	x0, x8
  4182fc:	bl	40a530 <free@plt>
  418300:	ldr	x8, [sp]
  418304:	ldr	x0, [x8, #24]
  418308:	bl	40a530 <free@plt>
  41830c:	ldr	x0, [sp]
  418310:	bl	418390 <mfree>
  418314:	str	x0, [sp, #8]
  418318:	ldr	x0, [sp, #8]
  41831c:	ldp	x29, x30, [sp, #16]
  418320:	add	sp, sp, #0x20
  418324:	ret

0000000000418328 <ordered_hashmap_free_free_key>:
  418328:	sub	sp, sp, #0x20
  41832c:	stp	x29, x30, [sp, #16]
  418330:	add	x29, sp, #0x10
  418334:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  418338:	ldr	x1, [x1, #176]
  41833c:	mov	x8, xzr
  418340:	str	x0, [sp, #8]
  418344:	ldr	x0, [sp, #8]
  418348:	mov	x2, x8
  41834c:	bl	40a7b0 <internal_hashmap_free@plt>
  418350:	ldp	x29, x30, [sp, #16]
  418354:	add	sp, sp, #0x20
  418358:	ret

000000000041835c <ordered_hashmap_free_free_free>:
  41835c:	sub	sp, sp, #0x20
  418360:	stp	x29, x30, [sp, #16]
  418364:	add	x29, sp, #0x10
  418368:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  41836c:	ldr	x8, [x8, #176]
  418370:	str	x0, [sp, #8]
  418374:	ldr	x0, [sp, #8]
  418378:	mov	x1, x8
  41837c:	mov	x2, x8
  418380:	bl	40a7b0 <internal_hashmap_free@plt>
  418384:	ldp	x29, x30, [sp, #16]
  418388:	add	sp, sp, #0x20
  41838c:	ret

0000000000418390 <mfree>:
  418390:	sub	sp, sp, #0x20
  418394:	stp	x29, x30, [sp, #16]
  418398:	add	x29, sp, #0x10
  41839c:	mov	x8, xzr
  4183a0:	str	x0, [sp, #8]
  4183a4:	ldr	x0, [sp, #8]
  4183a8:	str	x8, [sp]
  4183ac:	bl	40a530 <free@plt>
  4183b0:	ldr	x0, [sp]
  4183b4:	ldp	x29, x30, [sp, #16]
  4183b8:	add	sp, sp, #0x20
  4183bc:	ret

00000000004183c0 <udev_event_apply_format>:
  4183c0:	stp	x29, x30, [sp, #-32]!
  4183c4:	str	x28, [sp, #16]
  4183c8:	mov	x29, sp
  4183cc:	sub	sp, sp, #0x4f0
  4183d0:	sub	x8, x29, #0x38
  4183d4:	mov	w9, #0x1                   	// #1
  4183d8:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  4183dc:	add	x10, x10, #0xff0
  4183e0:	add	x10, x10, #0x3
  4183e4:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  4183e8:	add	x11, x11, #0x46
  4183ec:	str	x0, [x8, #40]
  4183f0:	str	x1, [x8, #32]
  4183f4:	str	x2, [x8, #24]
  4183f8:	str	x3, [x8, #16]
  4183fc:	and	w9, w4, w9
  418400:	sturb	w9, [x29, #-41]
  418404:	ldr	x12, [x8, #32]
  418408:	str	x12, [x8]
  41840c:	str	x8, [sp, #96]
  418410:	str	x10, [sp, #88]
  418414:	str	x11, [sp, #80]
  418418:	ldr	x8, [sp, #96]
  41841c:	ldr	x9, [x8, #40]
  418420:	cmp	x9, #0x0
  418424:	cset	w10, ne  // ne = any
  418428:	mov	w11, #0x1                   	// #1
  41842c:	eor	w10, w10, #0x1
  418430:	eor	w10, w10, w11
  418434:	eor	w10, w10, w11
  418438:	and	w10, w10, #0x1
  41843c:	mov	w0, w10
  418440:	sxtw	x9, w0
  418444:	cbz	x9, 418464 <udev_event_apply_format+0xa4>
  418448:	mov	w0, #0x1                   	// #1
  41844c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  418450:	add	x1, x1, #0xbb0
  418454:	ldr	x2, [sp, #88]
  418458:	mov	w3, #0x1bd                 	// #445
  41845c:	ldr	x4, [sp, #80]
  418460:	bl	40a540 <log_assert_failed_realm@plt>
  418464:	ldr	x8, [sp, #96]
  418468:	ldr	x9, [x8, #40]
  41846c:	ldr	x9, [x9]
  418470:	cmp	x9, #0x0
  418474:	cset	w10, ne  // ne = any
  418478:	mov	w11, #0x1                   	// #1
  41847c:	eor	w10, w10, #0x1
  418480:	eor	w10, w10, w11
  418484:	eor	w10, w10, w11
  418488:	and	w10, w10, #0x1
  41848c:	mov	w0, w10
  418490:	sxtw	x9, w0
  418494:	cbz	x9, 4184b4 <udev_event_apply_format+0xf4>
  418498:	mov	w0, #0x1                   	// #1
  41849c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4184a0:	add	x1, x1, #0x98
  4184a4:	ldr	x2, [sp, #88]
  4184a8:	mov	w3, #0x1be                 	// #446
  4184ac:	ldr	x4, [sp, #80]
  4184b0:	bl	40a540 <log_assert_failed_realm@plt>
  4184b4:	ldr	x8, [sp, #96]
  4184b8:	ldr	x9, [x8, #32]
  4184bc:	cmp	x9, #0x0
  4184c0:	cset	w10, ne  // ne = any
  4184c4:	mov	w11, #0x1                   	// #1
  4184c8:	eor	w10, w10, #0x1
  4184cc:	eor	w10, w10, w11
  4184d0:	eor	w10, w10, w11
  4184d4:	and	w10, w10, #0x1
  4184d8:	mov	w0, w10
  4184dc:	sxtw	x9, w0
  4184e0:	cbz	x9, 418500 <udev_event_apply_format+0x140>
  4184e4:	mov	w0, #0x1                   	// #1
  4184e8:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4184ec:	add	x1, x1, #0xa3
  4184f0:	ldr	x2, [sp, #88]
  4184f4:	mov	w3, #0x1bf                 	// #447
  4184f8:	ldr	x4, [sp, #80]
  4184fc:	bl	40a540 <log_assert_failed_realm@plt>
  418500:	ldr	x8, [sp, #96]
  418504:	ldr	x9, [x8, #24]
  418508:	cmp	x9, #0x0
  41850c:	cset	w10, ne  // ne = any
  418510:	mov	w11, #0x1                   	// #1
  418514:	eor	w10, w10, #0x1
  418518:	eor	w10, w10, w11
  41851c:	eor	w10, w10, w11
  418520:	and	w10, w10, #0x1
  418524:	mov	w0, w10
  418528:	sxtw	x9, w0
  41852c:	cbz	x9, 41854c <udev_event_apply_format+0x18c>
  418530:	mov	w0, #0x1                   	// #1
  418534:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  418538:	add	x1, x1, #0xa7
  41853c:	ldr	x2, [sp, #88]
  418540:	mov	w3, #0x1c0                 	// #448
  418544:	ldr	x4, [sp, #80]
  418548:	bl	40a540 <log_assert_failed_realm@plt>
  41854c:	ldr	x8, [sp, #96]
  418550:	ldr	x9, [x8, #16]
  418554:	cmp	x9, #0x0
  418558:	cset	w10, hi  // hi = pmore
  41855c:	mov	w11, #0x1                   	// #1
  418560:	eor	w10, w10, #0x1
  418564:	eor	w10, w10, w11
  418568:	eor	w10, w10, w11
  41856c:	and	w10, w10, #0x1
  418570:	mov	w0, w10
  418574:	sxtw	x9, w0
  418578:	cbz	x9, 418598 <udev_event_apply_format+0x1d8>
  41857c:	mov	w0, #0x1                   	// #1
  418580:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  418584:	add	x1, x1, #0xac
  418588:	ldr	x2, [sp, #88]
  41858c:	mov	w3, #0x1c1                 	// #449
  418590:	ldr	x4, [sp, #80]
  418594:	bl	40a540 <log_assert_failed_realm@plt>
  418598:	ldr	x8, [sp, #96]
  41859c:	ldr	x9, [x8]
  4185a0:	ldrb	w10, [x9]
  4185a4:	cbz	w10, 4188c0 <udev_event_apply_format+0x500>
  4185a8:	sub	x0, x29, #0x38
  4185ac:	mov	w8, wzr
  4185b0:	and	w1, w8, #0x1
  4185b4:	sub	x2, x29, #0x40
  4185b8:	add	x3, sp, #0xb0
  4185bc:	bl	41893c <get_subst_type>
  4185c0:	stur	w0, [x29, #-60]
  4185c4:	ldur	w8, [x29, #-60]
  4185c8:	cmp	w8, #0x0
  4185cc:	cset	w8, ge  // ge = tcont
  4185d0:	tbnz	w8, #0, 4186b8 <udev_event_apply_format+0x2f8>
  4185d4:	mov	x8, xzr
  4185d8:	str	x8, [sp, #160]
  4185dc:	ldr	x8, [sp, #96]
  4185e0:	ldr	x9, [x8, #40]
  4185e4:	ldr	x9, [x9]
  4185e8:	str	x9, [sp, #152]
  4185ec:	mov	w10, #0x4                   	// #4
  4185f0:	str	w10, [sp, #148]
  4185f4:	ldur	w10, [x29, #-60]
  4185f8:	str	w10, [sp, #144]
  4185fc:	ldr	x9, [sp, #152]
  418600:	cbz	x9, 418640 <udev_event_apply_format+0x280>
  418604:	mov	w0, #0x1                   	// #1
  418608:	bl	40a3f0 <log_get_max_level_realm@plt>
  41860c:	ldr	w8, [sp, #148]
  418610:	cmp	w0, w8
  418614:	cset	w8, ge  // ge = tcont
  418618:	mov	w9, #0x1                   	// #1
  41861c:	eor	w8, w8, #0x1
  418620:	eor	w8, w8, w9
  418624:	and	w8, w8, #0x1
  418628:	mov	w1, w8
  41862c:	sxtw	x10, w1
  418630:	cbz	x10, 418640 <udev_event_apply_format+0x280>
  418634:	ldr	x0, [sp, #152]
  418638:	add	x1, sp, #0xa0
  41863c:	bl	40a860 <sd_device_get_sysname@plt>
  418640:	ldr	w0, [sp, #148]
  418644:	ldr	w1, [sp, #144]
  418648:	ldr	x8, [sp, #160]
  41864c:	mov	x9, xzr
  418650:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  418654:	add	x10, x10, #0xa46
  418658:	cmp	x8, #0x0
  41865c:	csel	x5, x10, x9, ne  // ne = any
  418660:	ldr	x6, [sp, #160]
  418664:	ldr	x8, [sp, #96]
  418668:	ldr	x10, [x8, #32]
  41866c:	ldr	x2, [sp, #88]
  418670:	mov	w3, #0x1ca                 	// #458
  418674:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  418678:	add	x4, x4, #0xb5
  41867c:	mov	x7, x9
  418680:	mov	x11, sp
  418684:	str	x9, [x11]
  418688:	mov	x9, sp
  41868c:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  418690:	add	x11, x11, #0xcd
  418694:	str	x11, [x9, #8]
  418698:	mov	x9, sp
  41869c:	str	x10, [x9, #16]
  4186a0:	bl	40a870 <log_object_internal@plt>
  4186a4:	str	w0, [sp, #140]
  4186a8:	ldrsw	x8, [sp, #140]
  4186ac:	ldr	x9, [sp, #96]
  4186b0:	str	x8, [x9, #48]
  4186b4:	b	418924 <udev_event_apply_format+0x564>
  4186b8:	ldur	w8, [x29, #-60]
  4186bc:	cbnz	w8, 418708 <udev_event_apply_format+0x348>
  4186c0:	ldr	x8, [sp, #96]
  4186c4:	ldr	x9, [x8, #16]
  4186c8:	cmp	x9, #0x2
  4186cc:	b.cs	4186d4 <udev_event_apply_format+0x314>  // b.hs, b.nlast
  4186d0:	b	4188c0 <udev_event_apply_format+0x500>
  4186d4:	ldr	x8, [sp, #96]
  4186d8:	ldr	x9, [x8]
  4186dc:	add	x10, x9, #0x1
  4186e0:	str	x10, [x8]
  4186e4:	ldrb	w11, [x9]
  4186e8:	ldr	x9, [x8, #24]
  4186ec:	add	x10, x9, #0x1
  4186f0:	str	x10, [x8, #24]
  4186f4:	strb	w11, [x9]
  4186f8:	ldr	x9, [x8, #16]
  4186fc:	subs	x9, x9, #0x1
  418700:	str	x9, [x8, #16]
  418704:	b	418598 <udev_event_apply_format+0x1d8>
  418708:	ldr	x8, [sp, #96]
  41870c:	ldr	x0, [x8, #40]
  418710:	ldur	w1, [x29, #-64]
  418714:	ldr	x3, [x8, #24]
  418718:	ldr	x4, [x8, #16]
  41871c:	add	x2, sp, #0xb0
  418720:	bl	418cfc <udev_event_subst_format>
  418724:	str	x0, [sp, #168]
  418728:	ldr	x8, [sp, #168]
  41872c:	cmp	x8, #0x0
  418730:	cset	w9, ge  // ge = tcont
  418734:	tbnz	w9, #0, 418868 <udev_event_apply_format+0x4a8>
  418738:	mov	x8, xzr
  41873c:	str	x8, [sp, #128]
  418740:	ldr	x8, [sp, #96]
  418744:	ldr	x9, [x8, #40]
  418748:	ldr	x9, [x9]
  41874c:	str	x9, [sp, #120]
  418750:	mov	w10, #0x4                   	// #4
  418754:	str	w10, [sp, #116]
  418758:	ldr	x9, [sp, #168]
  41875c:	str	w9, [sp, #112]
  418760:	ldr	x11, [sp, #120]
  418764:	cbz	x11, 4187a4 <udev_event_apply_format+0x3e4>
  418768:	mov	w0, #0x1                   	// #1
  41876c:	bl	40a3f0 <log_get_max_level_realm@plt>
  418770:	ldr	w8, [sp, #116]
  418774:	cmp	w0, w8
  418778:	cset	w8, ge  // ge = tcont
  41877c:	mov	w9, #0x1                   	// #1
  418780:	eor	w8, w8, #0x1
  418784:	eor	w8, w8, w9
  418788:	and	w8, w8, #0x1
  41878c:	mov	w1, w8
  418790:	sxtw	x10, w1
  418794:	cbz	x10, 4187a4 <udev_event_apply_format+0x3e4>
  418798:	ldr	x0, [sp, #120]
  41879c:	add	x1, sp, #0x80
  4187a0:	bl	40a860 <sd_device_get_sysname@plt>
  4187a4:	ldr	w0, [sp, #116]
  4187a8:	ldr	w1, [sp, #112]
  4187ac:	ldr	x8, [sp, #128]
  4187b0:	mov	x9, xzr
  4187b4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4187b8:	add	x10, x10, #0xa46
  4187bc:	cmp	x8, #0x0
  4187c0:	csel	x5, x10, x9, ne  // ne = any
  4187c4:	ldr	x6, [sp, #128]
  4187c8:	ldur	w11, [x29, #-64]
  4187cc:	str	w0, [sp, #76]
  4187d0:	mov	w0, w11
  4187d4:	str	w1, [sp, #72]
  4187d8:	str	x9, [sp, #64]
  4187dc:	str	x5, [sp, #56]
  4187e0:	str	x6, [sp, #48]
  4187e4:	bl	419954 <format_type_to_string>
  4187e8:	ldur	w11, [x29, #-64]
  4187ec:	str	x0, [sp, #40]
  4187f0:	mov	w0, w11
  4187f4:	bl	4199dc <format_type_to_char>
  4187f8:	and	w11, w0, #0xff
  4187fc:	ldr	w0, [sp, #76]
  418800:	ldr	w1, [sp, #72]
  418804:	ldr	x2, [sp, #88]
  418808:	mov	w3, #0x1d7                 	// #471
  41880c:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  418810:	add	x4, x4, #0xb5
  418814:	ldr	x5, [sp, #56]
  418818:	ldr	x6, [sp, #48]
  41881c:	ldr	x7, [sp, #64]
  418820:	mov	x8, sp
  418824:	ldr	x9, [sp, #64]
  418828:	str	x9, [x8]
  41882c:	mov	x8, sp
  418830:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  418834:	add	x10, x10, #0xf1
  418838:	str	x10, [x8, #8]
  41883c:	mov	x8, sp
  418840:	ldr	x10, [sp, #40]
  418844:	str	x10, [x8, #16]
  418848:	mov	x8, sp
  41884c:	str	w11, [x8, #24]
  418850:	bl	40a870 <log_object_internal@plt>
  418854:	str	w0, [sp, #108]
  418858:	ldrsw	x8, [sp, #108]
  41885c:	ldr	x9, [sp, #96]
  418860:	str	x8, [x9, #48]
  418864:	b	418924 <udev_event_apply_format+0x564>
  418868:	ldurb	w8, [x29, #-41]
  41886c:	tbnz	w8, #0, 418874 <udev_event_apply_format+0x4b4>
  418870:	b	418898 <udev_event_apply_format+0x4d8>
  418874:	ldur	w8, [x29, #-64]
  418878:	cmp	w8, #0xa
  41887c:	b.eq	418898 <udev_event_apply_format+0x4d8>  // b.none
  418880:	ldr	x8, [sp, #96]
  418884:	ldr	x0, [x8, #24]
  418888:	ldr	x1, [x8, #24]
  41888c:	ldr	x2, [sp, #168]
  418890:	bl	40ae20 <util_replace_whitespace@plt>
  418894:	str	x0, [sp, #168]
  418898:	ldr	x8, [sp, #168]
  41889c:	ldr	x9, [sp, #96]
  4188a0:	ldr	x10, [x9, #24]
  4188a4:	add	x8, x10, x8
  4188a8:	str	x8, [x9, #24]
  4188ac:	ldr	x8, [sp, #168]
  4188b0:	ldr	x10, [x9, #16]
  4188b4:	subs	x8, x10, x8
  4188b8:	str	x8, [x9, #16]
  4188bc:	b	418598 <udev_event_apply_format+0x1d8>
  4188c0:	ldr	x8, [sp, #96]
  4188c4:	ldr	x9, [x8, #16]
  4188c8:	cmp	x9, #0x1
  4188cc:	cset	w10, cs  // cs = hs, nlast
  4188d0:	mov	w11, #0x1                   	// #1
  4188d4:	eor	w10, w10, #0x1
  4188d8:	eor	w10, w10, w11
  4188dc:	eor	w10, w10, w11
  4188e0:	and	w10, w10, #0x1
  4188e4:	mov	w0, w10
  4188e8:	sxtw	x9, w0
  4188ec:	cbz	x9, 41890c <udev_event_apply_format+0x54c>
  4188f0:	mov	w0, #0x1                   	// #1
  4188f4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4188f8:	add	x1, x1, #0x13a
  4188fc:	ldr	x2, [sp, #88]
  418900:	mov	w3, #0x1e3                 	// #483
  418904:	ldr	x4, [sp, #80]
  418908:	bl	40a540 <log_assert_failed_realm@plt>
  41890c:	ldr	x8, [sp, #96]
  418910:	ldr	x9, [x8, #24]
  418914:	mov	w10, #0x0                   	// #0
  418918:	strb	w10, [x9]
  41891c:	ldr	x9, [x8, #16]
  418920:	str	x9, [x8, #48]
  418924:	ldr	x8, [sp, #96]
  418928:	ldr	x0, [x8, #48]
  41892c:	add	sp, sp, #0x4f0
  418930:	ldr	x28, [sp, #16]
  418934:	ldp	x29, x30, [sp], #32
  418938:	ret

000000000041893c <get_subst_type>:
  41893c:	sub	sp, sp, #0x80
  418940:	stp	x29, x30, [sp, #112]
  418944:	add	x29, sp, #0x70
  418948:	mov	x8, xzr
  41894c:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  418950:	add	x9, x9, #0x278
  418954:	mov	w10, #0x1                   	// #1
  418958:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41895c:	add	x11, x11, #0xff0
  418960:	add	x11, x11, #0x3
  418964:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  418968:	add	x12, x12, #0x4e4
  41896c:	stur	x0, [x29, #-16]
  418970:	and	w10, w1, w10
  418974:	sturb	w10, [x29, #-17]
  418978:	stur	x2, [x29, #-32]
  41897c:	stur	x3, [x29, #-40]
  418980:	ldur	x13, [x29, #-16]
  418984:	ldr	x13, [x13]
  418988:	stur	x13, [x29, #-48]
  41898c:	str	x8, [sp, #56]
  418990:	str	x9, [sp, #16]
  418994:	str	x11, [sp, #8]
  418998:	str	x12, [sp]
  41899c:	ldur	x8, [x29, #-16]
  4189a0:	cmp	x8, #0x0
  4189a4:	cset	w9, ne  // ne = any
  4189a8:	mov	w10, #0x1                   	// #1
  4189ac:	eor	w9, w9, #0x1
  4189b0:	eor	w9, w9, w10
  4189b4:	eor	w9, w9, w10
  4189b8:	and	w9, w9, #0x1
  4189bc:	mov	w0, w9
  4189c0:	sxtw	x8, w0
  4189c4:	cbz	x8, 4189e4 <get_subst_type+0xa8>
  4189c8:	mov	w0, #0x1                   	// #1
  4189cc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4189d0:	add	x1, x1, #0x4e0
  4189d4:	ldr	x2, [sp, #8]
  4189d8:	mov	w3, #0x9c                  	// #156
  4189dc:	ldr	x4, [sp]
  4189e0:	bl	40a540 <log_assert_failed_realm@plt>
  4189e4:	ldur	x8, [x29, #-16]
  4189e8:	ldr	x8, [x8]
  4189ec:	cmp	x8, #0x0
  4189f0:	cset	w9, ne  // ne = any
  4189f4:	mov	w10, #0x1                   	// #1
  4189f8:	eor	w9, w9, #0x1
  4189fc:	eor	w9, w9, w10
  418a00:	eor	w9, w9, w10
  418a04:	and	w9, w9, #0x1
  418a08:	mov	w0, w9
  418a0c:	sxtw	x8, w0
  418a10:	cbz	x8, 418a30 <get_subst_type+0xf4>
  418a14:	mov	w0, #0x1                   	// #1
  418a18:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  418a1c:	add	x1, x1, #0x52f
  418a20:	ldr	x2, [sp, #8]
  418a24:	mov	w3, #0x9d                  	// #157
  418a28:	ldr	x4, [sp]
  418a2c:	bl	40a540 <log_assert_failed_realm@plt>
  418a30:	ldur	x8, [x29, #-32]
  418a34:	cmp	x8, #0x0
  418a38:	cset	w9, ne  // ne = any
  418a3c:	mov	w10, #0x1                   	// #1
  418a40:	eor	w9, w9, #0x1
  418a44:	eor	w9, w9, w10
  418a48:	eor	w9, w9, w10
  418a4c:	and	w9, w9, #0x1
  418a50:	mov	w0, w9
  418a54:	sxtw	x8, w0
  418a58:	cbz	x8, 418a78 <get_subst_type+0x13c>
  418a5c:	mov	w0, #0x1                   	// #1
  418a60:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  418a64:	add	x1, x1, #0x534
  418a68:	ldr	x2, [sp, #8]
  418a6c:	mov	w3, #0x9e                  	// #158
  418a70:	ldr	x4, [sp]
  418a74:	bl	40a540 <log_assert_failed_realm@plt>
  418a78:	ldur	x8, [x29, #-40]
  418a7c:	cmp	x8, #0x0
  418a80:	cset	w9, ne  // ne = any
  418a84:	mov	w10, #0x1                   	// #1
  418a88:	eor	w9, w9, #0x1
  418a8c:	eor	w9, w9, w10
  418a90:	eor	w9, w9, w10
  418a94:	and	w9, w9, #0x1
  418a98:	mov	w0, w9
  418a9c:	sxtw	x8, w0
  418aa0:	cbz	x8, 418ac0 <get_subst_type+0x184>
  418aa4:	mov	w0, #0x1                   	// #1
  418aa8:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  418aac:	add	x1, x1, #0x53d
  418ab0:	ldr	x2, [sp, #8]
  418ab4:	mov	w3, #0x9f                  	// #159
  418ab8:	ldr	x4, [sp]
  418abc:	bl	40a540 <log_assert_failed_realm@plt>
  418ac0:	ldur	x8, [x29, #-48]
  418ac4:	ldrb	w9, [x8]
  418ac8:	cmp	w9, #0x24
  418acc:	b.ne	418b50 <get_subst_type+0x214>  // b.any
  418ad0:	ldur	x8, [x29, #-48]
  418ad4:	add	x8, x8, #0x1
  418ad8:	stur	x8, [x29, #-48]
  418adc:	ldur	x8, [x29, #-48]
  418ae0:	ldrb	w9, [x8]
  418ae4:	cmp	w9, #0x24
  418ae8:	b.ne	418b00 <get_subst_type+0x1c4>  // b.any
  418aec:	ldur	x8, [x29, #-48]
  418af0:	ldur	x9, [x29, #-16]
  418af4:	str	x8, [x9]
  418af8:	stur	wzr, [x29, #-4]
  418afc:	b	418cec <get_subst_type+0x3b0>
  418b00:	str	xzr, [sp, #48]
  418b04:	ldr	x8, [sp, #48]
  418b08:	cmp	x8, #0x12
  418b0c:	b.cs	418b4c <get_subst_type+0x210>  // b.hs, b.nlast
  418b10:	ldur	x0, [x29, #-48]
  418b14:	ldr	x8, [sp, #48]
  418b18:	mov	x9, #0x10                  	// #16
  418b1c:	mul	x8, x9, x8
  418b20:	ldr	x9, [sp, #16]
  418b24:	add	x8, x9, x8
  418b28:	ldr	x1, [x8]
  418b2c:	bl	41cfc8 <startswith>
  418b30:	str	x0, [sp, #56]
  418b34:	cbz	x0, 418b3c <get_subst_type+0x200>
  418b38:	b	418b4c <get_subst_type+0x210>
  418b3c:	ldr	x8, [sp, #48]
  418b40:	add	x8, x8, #0x1
  418b44:	str	x8, [sp, #48]
  418b48:	b	418b04 <get_subst_type+0x1c8>
  418b4c:	b	418bf4 <get_subst_type+0x2b8>
  418b50:	ldur	x8, [x29, #-48]
  418b54:	ldrb	w9, [x8]
  418b58:	cmp	w9, #0x25
  418b5c:	b.ne	418bec <get_subst_type+0x2b0>  // b.any
  418b60:	ldur	x8, [x29, #-48]
  418b64:	add	x8, x8, #0x1
  418b68:	stur	x8, [x29, #-48]
  418b6c:	ldur	x8, [x29, #-48]
  418b70:	ldrb	w9, [x8]
  418b74:	cmp	w9, #0x25
  418b78:	b.ne	418b90 <get_subst_type+0x254>  // b.any
  418b7c:	ldur	x8, [x29, #-48]
  418b80:	ldur	x9, [x29, #-16]
  418b84:	str	x8, [x9]
  418b88:	stur	wzr, [x29, #-4]
  418b8c:	b	418cec <get_subst_type+0x3b0>
  418b90:	str	xzr, [sp, #48]
  418b94:	ldr	x8, [sp, #48]
  418b98:	cmp	x8, #0x12
  418b9c:	b.cs	418be8 <get_subst_type+0x2ac>  // b.hs, b.nlast
  418ba0:	ldur	x8, [x29, #-48]
  418ba4:	ldrb	w9, [x8]
  418ba8:	ldr	x8, [sp, #48]
  418bac:	mov	x10, #0x10                  	// #16
  418bb0:	mul	x8, x10, x8
  418bb4:	ldr	x10, [sp, #16]
  418bb8:	add	x8, x10, x8
  418bbc:	ldrb	w11, [x8, #8]
  418bc0:	cmp	w9, w11
  418bc4:	b.ne	418bd8 <get_subst_type+0x29c>  // b.any
  418bc8:	ldur	x8, [x29, #-48]
  418bcc:	add	x8, x8, #0x1
  418bd0:	str	x8, [sp, #56]
  418bd4:	b	418be8 <get_subst_type+0x2ac>
  418bd8:	ldr	x8, [sp, #48]
  418bdc:	add	x8, x8, #0x1
  418be0:	str	x8, [sp, #48]
  418be4:	b	418b94 <get_subst_type+0x258>
  418be8:	b	418bf4 <get_subst_type+0x2b8>
  418bec:	stur	wzr, [x29, #-4]
  418bf0:	b	418cec <get_subst_type+0x3b0>
  418bf4:	ldr	x8, [sp, #56]
  418bf8:	cbnz	x8, 418c18 <get_subst_type+0x2dc>
  418bfc:	ldurb	w8, [x29, #-17]
  418c00:	mov	w9, #0xffffffea            	// #-22
  418c04:	mov	w10, wzr
  418c08:	tst	w8, #0x1
  418c0c:	csel	w8, w9, w10, ne  // ne = any
  418c10:	stur	w8, [x29, #-4]
  418c14:	b	418cec <get_subst_type+0x3b0>
  418c18:	ldr	x8, [sp, #56]
  418c1c:	ldrb	w9, [x8]
  418c20:	cmp	w9, #0x7b
  418c24:	b.ne	418cac <get_subst_type+0x370>  // b.any
  418c28:	ldr	x8, [sp, #56]
  418c2c:	add	x8, x8, #0x1
  418c30:	str	x8, [sp, #40]
  418c34:	ldr	x0, [sp, #40]
  418c38:	mov	w1, #0x7d                  	// #125
  418c3c:	bl	40a8c0 <strchr@plt>
  418c40:	str	x0, [sp, #32]
  418c44:	ldr	x8, [sp, #32]
  418c48:	cbnz	x8, 418c58 <get_subst_type+0x31c>
  418c4c:	mov	w8, #0xffffffea            	// #-22
  418c50:	stur	w8, [x29, #-4]
  418c54:	b	418cec <get_subst_type+0x3b0>
  418c58:	ldr	x8, [sp, #32]
  418c5c:	ldr	x9, [sp, #40]
  418c60:	subs	x8, x8, x9
  418c64:	str	x8, [sp, #24]
  418c68:	ldr	x8, [sp, #24]
  418c6c:	cbz	x8, 418c7c <get_subst_type+0x340>
  418c70:	ldr	x8, [sp, #24]
  418c74:	cmp	x8, #0x400
  418c78:	b.cc	418c88 <get_subst_type+0x34c>  // b.lo, b.ul, b.last
  418c7c:	mov	w8, #0xffffffea            	// #-22
  418c80:	stur	w8, [x29, #-4]
  418c84:	b	418cec <get_subst_type+0x3b0>
  418c88:	ldur	x0, [x29, #-40]
  418c8c:	ldr	x2, [sp, #40]
  418c90:	ldr	x3, [sp, #24]
  418c94:	mov	x1, #0x400                 	// #1024
  418c98:	bl	40ae30 <strnscpy@plt>
  418c9c:	ldr	x8, [sp, #32]
  418ca0:	add	x8, x8, #0x1
  418ca4:	str	x8, [sp, #56]
  418ca8:	b	418cb8 <get_subst_type+0x37c>
  418cac:	ldur	x8, [x29, #-40]
  418cb0:	mov	w9, #0x0                   	// #0
  418cb4:	strb	w9, [x8]
  418cb8:	ldr	x8, [sp, #56]
  418cbc:	ldur	x9, [x29, #-16]
  418cc0:	str	x8, [x9]
  418cc4:	ldr	x8, [sp, #48]
  418cc8:	mov	x9, #0x10                  	// #16
  418ccc:	mul	x8, x9, x8
  418cd0:	ldr	x9, [sp, #16]
  418cd4:	add	x8, x9, x8
  418cd8:	ldr	w10, [x8, #12]
  418cdc:	ldur	x8, [x29, #-32]
  418ce0:	str	w10, [x8]
  418ce4:	mov	w10, #0x1                   	// #1
  418ce8:	stur	w10, [x29, #-4]
  418cec:	ldur	w0, [x29, #-4]
  418cf0:	ldp	x29, x30, [sp, #112]
  418cf4:	add	sp, sp, #0x80
  418cf8:	ret

0000000000418cfc <udev_event_subst_format>:
  418cfc:	stp	x29, x30, [sp, #-32]!
  418d00:	str	x28, [sp, #16]
  418d04:	mov	x29, sp
  418d08:	sub	sp, sp, #0x310
  418d0c:	sub	x8, x29, #0x90
  418d10:	mov	x9, xzr
  418d14:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  418d18:	add	x10, x10, #0xff0
  418d1c:	add	x10, x10, #0x3
  418d20:	str	x0, [x8, #128]
  418d24:	stur	w1, [x29, #-20]
  418d28:	str	x2, [x8, #112]
  418d2c:	str	x3, [x8, #104]
  418d30:	str	x4, [x8, #96]
  418d34:	ldr	x11, [x8, #128]
  418d38:	ldr	x11, [x11]
  418d3c:	str	x11, [x8, #80]
  418d40:	str	x9, [x8, #72]
  418d44:	ldr	x9, [x8, #104]
  418d48:	str	x9, [x8, #64]
  418d4c:	ldur	w12, [x29, #-20]
  418d50:	subs	w12, w12, #0x0
  418d54:	mov	w9, w12
  418d58:	ubfx	x9, x9, #0, #32
  418d5c:	cmp	x9, #0xf
  418d60:	str	x8, [sp, #72]
  418d64:	str	x10, [sp, #64]
  418d68:	str	x9, [sp, #56]
  418d6c:	b.hi	4198f0 <udev_event_subst_format+0xbf4>  // b.pmore
  418d70:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  418d74:	add	x8, x8, #0x240
  418d78:	ldr	x11, [sp, #56]
  418d7c:	ldrsw	x10, [x8, x11, lsl #2]
  418d80:	add	x9, x8, x10
  418d84:	br	x9
  418d88:	ldr	x8, [sp, #72]
  418d8c:	ldr	x0, [x8, #80]
  418d90:	sub	x1, x29, #0x48
  418d94:	bl	40aa30 <sd_device_get_devpath@plt>
  418d98:	stur	w0, [x29, #-84]
  418d9c:	ldur	w9, [x29, #-84]
  418da0:	cmp	w9, #0x0
  418da4:	cset	w9, ge  // ge = tcont
  418da8:	tbnz	w9, #0, 418dbc <udev_event_subst_format+0xc0>
  418dac:	ldursw	x8, [x29, #-84]
  418db0:	ldr	x9, [sp, #72]
  418db4:	str	x8, [x9, #136]
  418db8:	b	41993c <udev_event_subst_format+0xc40>
  418dbc:	ldr	x8, [sp, #72]
  418dc0:	ldr	x1, [x8, #96]
  418dc4:	ldr	x2, [x8, #72]
  418dc8:	sub	x0, x29, #0x50
  418dcc:	bl	40ae40 <strpcpy@plt>
  418dd0:	ldr	x8, [sp, #72]
  418dd4:	str	x0, [x8, #96]
  418dd8:	b	419910 <udev_event_subst_format+0xc14>
  418ddc:	ldr	x8, [sp, #72]
  418de0:	ldr	x0, [x8, #80]
  418de4:	sub	x1, x29, #0x48
  418de8:	bl	40a860 <sd_device_get_sysname@plt>
  418dec:	stur	w0, [x29, #-84]
  418df0:	ldur	w9, [x29, #-84]
  418df4:	cmp	w9, #0x0
  418df8:	cset	w9, ge  // ge = tcont
  418dfc:	tbnz	w9, #0, 418e10 <udev_event_subst_format+0x114>
  418e00:	ldursw	x8, [x29, #-84]
  418e04:	ldr	x9, [sp, #72]
  418e08:	str	x8, [x9, #136]
  418e0c:	b	41993c <udev_event_subst_format+0xc40>
  418e10:	ldr	x8, [sp, #72]
  418e14:	ldr	x1, [x8, #96]
  418e18:	ldr	x2, [x8, #72]
  418e1c:	sub	x0, x29, #0x50
  418e20:	bl	40ae40 <strpcpy@plt>
  418e24:	ldr	x8, [sp, #72]
  418e28:	str	x0, [x8, #96]
  418e2c:	b	419910 <udev_event_subst_format+0xc14>
  418e30:	ldr	x8, [sp, #72]
  418e34:	ldr	x0, [x8, #80]
  418e38:	sub	x1, x29, #0x48
  418e3c:	bl	40ae50 <sd_device_get_sysnum@plt>
  418e40:	stur	w0, [x29, #-84]
  418e44:	ldur	w9, [x29, #-84]
  418e48:	mov	w10, #0xfffffffe            	// #-2
  418e4c:	cmp	w9, w10
  418e50:	b.ne	418e58 <udev_event_subst_format+0x15c>  // b.any
  418e54:	b	419928 <udev_event_subst_format+0xc2c>
  418e58:	ldur	w8, [x29, #-84]
  418e5c:	cmp	w8, #0x0
  418e60:	cset	w8, ge  // ge = tcont
  418e64:	tbnz	w8, #0, 418e78 <udev_event_subst_format+0x17c>
  418e68:	ldursw	x8, [x29, #-84]
  418e6c:	ldr	x9, [sp, #72]
  418e70:	str	x8, [x9, #136]
  418e74:	b	41993c <udev_event_subst_format+0xc40>
  418e78:	ldr	x8, [sp, #72]
  418e7c:	ldr	x1, [x8, #96]
  418e80:	ldr	x2, [x8, #72]
  418e84:	sub	x0, x29, #0x50
  418e88:	bl	40ae40 <strpcpy@plt>
  418e8c:	ldr	x8, [sp, #72]
  418e90:	str	x0, [x8, #96]
  418e94:	b	419910 <udev_event_subst_format+0xc14>
  418e98:	ldr	x8, [sp, #72]
  418e9c:	ldr	x9, [x8, #128]
  418ea0:	ldr	x9, [x9, #8]
  418ea4:	cbnz	x9, 418eac <udev_event_subst_format+0x1b0>
  418ea8:	b	419928 <udev_event_subst_format+0xc2c>
  418eac:	ldr	x8, [sp, #72]
  418eb0:	ldr	x9, [x8, #128]
  418eb4:	ldr	x0, [x9, #8]
  418eb8:	sub	x1, x29, #0x48
  418ebc:	bl	40a860 <sd_device_get_sysname@plt>
  418ec0:	stur	w0, [x29, #-84]
  418ec4:	ldur	w10, [x29, #-84]
  418ec8:	cmp	w10, #0x0
  418ecc:	cset	w10, ge  // ge = tcont
  418ed0:	tbnz	w10, #0, 418ee4 <udev_event_subst_format+0x1e8>
  418ed4:	ldursw	x8, [x29, #-84]
  418ed8:	ldr	x9, [sp, #72]
  418edc:	str	x8, [x9, #136]
  418ee0:	b	41993c <udev_event_subst_format+0xc40>
  418ee4:	ldr	x8, [sp, #72]
  418ee8:	ldr	x1, [x8, #96]
  418eec:	ldr	x2, [x8, #72]
  418ef0:	sub	x0, x29, #0x50
  418ef4:	bl	40ae40 <strpcpy@plt>
  418ef8:	ldr	x8, [sp, #72]
  418efc:	str	x0, [x8, #96]
  418f00:	b	419910 <udev_event_subst_format+0xc14>
  418f04:	ldr	x8, [sp, #72]
  418f08:	ldr	x9, [x8, #128]
  418f0c:	ldr	x9, [x9, #8]
  418f10:	cbnz	x9, 418f18 <udev_event_subst_format+0x21c>
  418f14:	b	419928 <udev_event_subst_format+0xc2c>
  418f18:	ldr	x8, [sp, #72]
  418f1c:	ldr	x9, [x8, #128]
  418f20:	ldr	x0, [x9, #8]
  418f24:	sub	x1, x29, #0x48
  418f28:	bl	40ae60 <sd_device_get_driver@plt>
  418f2c:	stur	w0, [x29, #-84]
  418f30:	ldur	w10, [x29, #-84]
  418f34:	mov	w11, #0xfffffffe            	// #-2
  418f38:	cmp	w10, w11
  418f3c:	b.ne	418f44 <udev_event_subst_format+0x248>  // b.any
  418f40:	b	419928 <udev_event_subst_format+0xc2c>
  418f44:	ldur	w8, [x29, #-84]
  418f48:	cmp	w8, #0x0
  418f4c:	cset	w8, ge  // ge = tcont
  418f50:	tbnz	w8, #0, 418f64 <udev_event_subst_format+0x268>
  418f54:	ldursw	x8, [x29, #-84]
  418f58:	ldr	x9, [sp, #72]
  418f5c:	str	x8, [x9, #136]
  418f60:	b	41993c <udev_event_subst_format+0xc40>
  418f64:	ldr	x8, [sp, #72]
  418f68:	ldr	x1, [x8, #96]
  418f6c:	ldr	x2, [x8, #72]
  418f70:	sub	x0, x29, #0x50
  418f74:	bl	40ae40 <strpcpy@plt>
  418f78:	ldr	x8, [sp, #72]
  418f7c:	str	x0, [x8, #96]
  418f80:	b	419910 <udev_event_subst_format+0xc14>
  418f84:	ldr	x8, [sp, #72]
  418f88:	ldr	x0, [x8, #80]
  418f8c:	sub	x1, x29, #0x60
  418f90:	bl	40aa50 <sd_device_get_devnum@plt>
  418f94:	stur	w0, [x29, #-84]
  418f98:	ldur	w9, [x29, #-84]
  418f9c:	cmp	w9, #0x0
  418fa0:	cset	w9, ge  // ge = tcont
  418fa4:	tbnz	w9, #0, 418fc8 <udev_event_subst_format+0x2cc>
  418fa8:	ldur	w8, [x29, #-84]
  418fac:	mov	w9, #0xfffffffe            	// #-2
  418fb0:	cmp	w8, w9
  418fb4:	b.eq	418fc8 <udev_event_subst_format+0x2cc>  // b.none
  418fb8:	ldursw	x8, [x29, #-84]
  418fbc:	ldr	x9, [sp, #72]
  418fc0:	str	x8, [x9, #136]
  418fc4:	b	41993c <udev_event_subst_format+0xc40>
  418fc8:	ldr	x8, [sp, #72]
  418fcc:	ldr	x1, [x8, #96]
  418fd0:	ldur	w9, [x29, #-84]
  418fd4:	cmp	w9, #0x0
  418fd8:	cset	w9, ge  // ge = tcont
  418fdc:	str	x1, [sp, #48]
  418fe0:	tbnz	w9, #0, 418ff0 <udev_event_subst_format+0x2f4>
  418fe4:	mov	w8, wzr
  418fe8:	str	w8, [sp, #44]
  418fec:	b	419028 <udev_event_subst_format+0x32c>
  418ff0:	ldur	w8, [x29, #-20]
  418ff4:	cmp	w8, #0x8
  418ff8:	b.ne	419010 <udev_event_subst_format+0x314>  // b.any
  418ffc:	ldr	x8, [sp, #72]
  419000:	ldr	x0, [x8, #48]
  419004:	bl	40aa70 <gnu_dev_major@plt>
  419008:	str	w0, [sp, #40]
  41900c:	b	419020 <udev_event_subst_format+0x324>
  419010:	ldr	x8, [sp, #72]
  419014:	ldr	x0, [x8, #48]
  419018:	bl	40ae70 <gnu_dev_minor@plt>
  41901c:	str	w0, [sp, #40]
  419020:	ldr	w8, [sp, #40]
  419024:	str	w8, [sp, #44]
  419028:	ldr	w8, [sp, #44]
  41902c:	sub	x0, x29, #0x50
  419030:	ldr	x1, [sp, #48]
  419034:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  419038:	add	x2, x2, #0x5b4
  41903c:	mov	w3, w8
  419040:	bl	40ae80 <strpcpyf@plt>
  419044:	ldr	x9, [sp, #72]
  419048:	str	x0, [x9, #96]
  41904c:	b	419910 <udev_event_subst_format+0xc14>
  419050:	stur	wzr, [x29, #-100]
  419054:	ldr	x8, [sp, #72]
  419058:	ldr	x9, [x8, #128]
  41905c:	ldr	x9, [x9, #32]
  419060:	cbnz	x9, 419068 <udev_event_subst_format+0x36c>
  419064:	b	419928 <udev_event_subst_format+0xc2c>
  419068:	ldr	x8, [sp, #72]
  41906c:	ldr	x0, [x8, #112]
  419070:	bl	419c88 <isempty>
  419074:	tbnz	w0, #0, 4190c0 <udev_event_subst_format+0x3c4>
  419078:	ldr	x8, [sp, #72]
  41907c:	ldr	x0, [x8, #112]
  419080:	sub	x1, x29, #0x64
  419084:	bl	419cc8 <safe_atou_optional_plus>
  419088:	stur	w0, [x29, #-84]
  41908c:	ldur	w9, [x29, #-84]
  419090:	cmp	w9, #0x0
  419094:	cset	w9, ge  // ge = tcont
  419098:	tbnz	w9, #0, 4190ac <udev_event_subst_format+0x3b0>
  41909c:	ldursw	x8, [x29, #-84]
  4190a0:	ldr	x9, [sp, #72]
  4190a4:	str	x8, [x9, #136]
  4190a8:	b	41993c <udev_event_subst_format+0xc40>
  4190ac:	ldur	w8, [x29, #-84]
  4190b0:	cmp	w8, #0x0
  4190b4:	cset	w8, ne  // ne = any
  4190b8:	and	w8, w8, #0x1
  4190bc:	sturb	w8, [x29, #-101]
  4190c0:	ldur	w8, [x29, #-100]
  4190c4:	cbnz	w8, 4190ec <udev_event_subst_format+0x3f0>
  4190c8:	ldr	x8, [sp, #72]
  4190cc:	ldr	x1, [x8, #96]
  4190d0:	ldr	x9, [x8, #128]
  4190d4:	ldr	x2, [x9, #32]
  4190d8:	sub	x0, x29, #0x50
  4190dc:	bl	40ae40 <strpcpy@plt>
  4190e0:	ldr	x8, [sp, #72]
  4190e4:	str	x0, [x8, #96]
  4190e8:	b	419358 <udev_event_subst_format+0x65c>
  4190ec:	ldr	x8, [sp, #72]
  4190f0:	ldr	x9, [x8, #128]
  4190f4:	ldr	x0, [x9, #32]
  4190f8:	mov	x9, xzr
  4190fc:	mov	x1, x9
  419100:	bl	41d028 <skip_leading_chars>
  419104:	ldr	x8, [sp, #72]
  419108:	str	x0, [x8, #24]
  41910c:	mov	w10, #0x1                   	// #1
  419110:	stur	w10, [x29, #-124]
  419114:	ldur	w8, [x29, #-124]
  419118:	ldur	w9, [x29, #-100]
  41911c:	cmp	w8, w9
  419120:	b.cs	4191c0 <udev_event_subst_format+0x4c4>  // b.hs, b.nlast
  419124:	ldr	x8, [sp, #72]
  419128:	ldr	x9, [x8, #24]
  41912c:	ldrb	w10, [x9]
  419130:	mov	w11, #0x0                   	// #0
  419134:	str	w11, [sp, #36]
  419138:	cbz	w10, 419164 <udev_event_subst_format+0x468>
  41913c:	ldr	x8, [sp, #72]
  419140:	ldr	x9, [x8, #24]
  419144:	ldrb	w1, [x9]
  419148:	adrp	x0, 466000 <on_inotify.__assert_in_set+0x2540>
  41914c:	add	x0, x0, #0x5b7
  419150:	bl	40a8c0 <strchr@plt>
  419154:	cmp	x0, #0x0
  419158:	cset	w10, ne  // ne = any
  41915c:	eor	w10, w10, #0x1
  419160:	str	w10, [sp, #36]
  419164:	ldr	w8, [sp, #36]
  419168:	tbnz	w8, #0, 419170 <udev_event_subst_format+0x474>
  41916c:	b	419184 <udev_event_subst_format+0x488>
  419170:	ldr	x8, [sp, #72]
  419174:	ldr	x9, [x8, #24]
  419178:	add	x9, x9, #0x1
  41917c:	str	x9, [x8, #24]
  419180:	b	419124 <udev_event_subst_format+0x428>
  419184:	ldr	x8, [sp, #72]
  419188:	ldr	x0, [x8, #24]
  41918c:	mov	x9, xzr
  419190:	mov	x1, x9
  419194:	bl	41d028 <skip_leading_chars>
  419198:	ldr	x8, [sp, #72]
  41919c:	str	x0, [x8, #24]
  4191a0:	ldr	x9, [x8, #24]
  4191a4:	ldrb	w10, [x9]
  4191a8:	cbnz	w10, 4191b0 <udev_event_subst_format+0x4b4>
  4191ac:	b	4191c0 <udev_event_subst_format+0x4c4>
  4191b0:	ldur	w8, [x29, #-124]
  4191b4:	add	w8, w8, #0x1
  4191b8:	stur	w8, [x29, #-124]
  4191bc:	b	419114 <udev_event_subst_format+0x418>
  4191c0:	ldur	w8, [x29, #-124]
  4191c4:	ldur	w9, [x29, #-100]
  4191c8:	cmp	w8, w9
  4191cc:	b.eq	419298 <udev_event_subst_format+0x59c>  // b.none
  4191d0:	mov	x8, xzr
  4191d4:	ldr	x9, [sp, #72]
  4191d8:	str	x8, [x9, #8]
  4191dc:	ldr	x8, [x9, #80]
  4191e0:	str	x8, [x9]
  4191e4:	mov	w10, #0x7                   	// #7
  4191e8:	stur	w10, [x29, #-148]
  4191ec:	stur	wzr, [x29, #-152]
  4191f0:	ldr	x8, [x9]
  4191f4:	cbz	x8, 419238 <udev_event_subst_format+0x53c>
  4191f8:	mov	w0, #0x1                   	// #1
  4191fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  419200:	ldur	w8, [x29, #-148]
  419204:	cmp	w0, w8
  419208:	cset	w8, ge  // ge = tcont
  41920c:	mov	w9, #0x1                   	// #1
  419210:	eor	w8, w8, #0x1
  419214:	eor	w8, w8, w9
  419218:	and	w8, w8, #0x1
  41921c:	mov	w1, w8
  419220:	sxtw	x10, w1
  419224:	cbz	x10, 419238 <udev_event_subst_format+0x53c>
  419228:	ldr	x8, [sp, #72]
  41922c:	ldr	x0, [x8]
  419230:	sub	x1, x29, #0x88
  419234:	bl	40a860 <sd_device_get_sysname@plt>
  419238:	ldur	w0, [x29, #-148]
  41923c:	ldur	w1, [x29, #-152]
  419240:	ldr	x8, [sp, #72]
  419244:	ldr	x9, [x8, #8]
  419248:	mov	x10, xzr
  41924c:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  419250:	add	x11, x11, #0xa46
  419254:	cmp	x9, #0x0
  419258:	csel	x5, x11, x10, ne  // ne = any
  41925c:	ldr	x6, [x8, #8]
  419260:	ldr	x2, [sp, #64]
  419264:	mov	w3, #0x142                 	// #322
  419268:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41926c:	add	x4, x4, #0x5bc
  419270:	mov	x7, x10
  419274:	mov	x9, sp
  419278:	str	x10, [x9]
  41927c:	mov	x9, sp
  419280:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  419284:	add	x10, x10, #0x5d4
  419288:	str	x10, [x9, #8]
  41928c:	bl	40a870 <log_object_internal@plt>
  419290:	stur	w0, [x29, #-156]
  419294:	b	419928 <udev_event_subst_format+0xc2c>
  419298:	ldr	x8, [sp, #72]
  41929c:	ldr	x9, [x8, #24]
  4192a0:	str	x9, [x8, #32]
  4192a4:	ldurb	w10, [x29, #-101]
  4192a8:	tbnz	w10, #0, 4192b0 <udev_event_subst_format+0x5b4>
  4192ac:	b	4192d0 <udev_event_subst_format+0x5d4>
  4192b0:	ldr	x8, [sp, #72]
  4192b4:	ldr	x1, [x8, #96]
  4192b8:	ldr	x2, [x8, #32]
  4192bc:	sub	x0, x29, #0x50
  4192c0:	bl	40ae40 <strpcpy@plt>
  4192c4:	ldr	x8, [sp, #72]
  4192c8:	str	x0, [x8, #96]
  4192cc:	b	419358 <udev_event_subst_format+0x65c>
  4192d0:	ldr	x8, [sp, #72]
  4192d4:	ldr	x9, [x8, #24]
  4192d8:	ldrb	w10, [x9]
  4192dc:	mov	w11, #0x0                   	// #0
  4192e0:	str	w11, [sp, #32]
  4192e4:	cbz	w10, 419310 <udev_event_subst_format+0x614>
  4192e8:	ldr	x8, [sp, #72]
  4192ec:	ldr	x9, [x8, #24]
  4192f0:	ldrb	w1, [x9]
  4192f4:	adrp	x0, 466000 <on_inotify.__assert_in_set+0x2540>
  4192f8:	add	x0, x0, #0x5b7
  4192fc:	bl	40a8c0 <strchr@plt>
  419300:	cmp	x0, #0x0
  419304:	cset	w10, ne  // ne = any
  419308:	eor	w10, w10, #0x1
  41930c:	str	w10, [sp, #32]
  419310:	ldr	w8, [sp, #32]
  419314:	tbnz	w8, #0, 41931c <udev_event_subst_format+0x620>
  419318:	b	419330 <udev_event_subst_format+0x634>
  41931c:	ldr	x8, [sp, #72]
  419320:	ldr	x9, [x8, #24]
  419324:	add	x9, x9, #0x1
  419328:	str	x9, [x8, #24]
  41932c:	b	4192d0 <udev_event_subst_format+0x5d4>
  419330:	ldr	x8, [sp, #72]
  419334:	ldr	x1, [x8, #96]
  419338:	ldr	x2, [x8, #32]
  41933c:	ldr	x9, [x8, #24]
  419340:	ldr	x10, [x8, #32]
  419344:	subs	x3, x9, x10
  419348:	sub	x0, x29, #0x50
  41934c:	bl	40ae90 <strnpcpy@plt>
  419350:	ldr	x8, [sp, #72]
  419354:	str	x0, [x8, #96]
  419358:	b	419910 <udev_event_subst_format+0xc14>
  41935c:	ldr	x8, [sp, #72]
  419360:	ldr	x0, [x8, #112]
  419364:	bl	419c88 <isempty>
  419368:	tbnz	w0, #0, 419370 <udev_event_subst_format+0x674>
  41936c:	b	419380 <udev_event_subst_format+0x684>
  419370:	mov	x8, #0xffffffffffffffea    	// #-22
  419374:	ldr	x9, [sp, #72]
  419378:	str	x8, [x9, #136]
  41937c:	b	41993c <udev_event_subst_format+0xc40>
  419380:	ldr	x8, [sp, #72]
  419384:	ldr	x0, [x8, #112]
  419388:	add	x1, sp, #0x74
  41938c:	mov	x2, #0x200                 	// #512
  419390:	mov	w9, #0x1                   	// #1
  419394:	and	w3, w9, #0x1
  419398:	bl	40aea0 <util_resolve_subsys_kernel@plt>
  41939c:	cbnz	w0, 4193ac <udev_event_subst_format+0x6b0>
  4193a0:	add	x8, sp, #0x74
  4193a4:	ldr	x9, [sp, #72]
  4193a8:	str	x8, [x9, #72]
  4193ac:	ldr	x8, [sp, #72]
  4193b0:	ldr	x9, [x8, #72]
  4193b4:	cbnz	x9, 4193cc <udev_event_subst_format+0x6d0>
  4193b8:	ldr	x8, [sp, #72]
  4193bc:	ldr	x0, [x8, #80]
  4193c0:	ldr	x1, [x8, #112]
  4193c4:	sub	x2, x29, #0x48
  4193c8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4193cc:	ldr	x8, [sp, #72]
  4193d0:	ldr	x9, [x8, #72]
  4193d4:	cbnz	x9, 419418 <udev_event_subst_format+0x71c>
  4193d8:	ldr	x8, [sp, #72]
  4193dc:	ldr	x9, [x8, #128]
  4193e0:	ldr	x9, [x9, #8]
  4193e4:	cbz	x9, 419418 <udev_event_subst_format+0x71c>
  4193e8:	ldr	x8, [sp, #72]
  4193ec:	ldr	x9, [x8, #128]
  4193f0:	ldr	x9, [x9, #8]
  4193f4:	ldr	x10, [x8, #80]
  4193f8:	cmp	x9, x10
  4193fc:	b.eq	419418 <udev_event_subst_format+0x71c>  // b.none
  419400:	ldr	x8, [sp, #72]
  419404:	ldr	x9, [x8, #128]
  419408:	ldr	x0, [x9, #8]
  41940c:	ldr	x1, [x8, #112]
  419410:	sub	x2, x29, #0x48
  419414:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  419418:	ldr	x8, [sp, #72]
  41941c:	ldr	x9, [x8, #72]
  419420:	cbnz	x9, 419428 <udev_event_subst_format+0x72c>
  419424:	b	419928 <udev_event_subst_format+0xc2c>
  419428:	ldr	x8, [sp, #72]
  41942c:	ldr	x9, [x8, #72]
  419430:	add	x10, sp, #0x74
  419434:	cmp	x9, x10
  419438:	b.eq	419450 <udev_event_subst_format+0x754>  // b.none
  41943c:	ldr	x8, [sp, #72]
  419440:	ldr	x2, [x8, #72]
  419444:	add	x0, sp, #0x74
  419448:	mov	x1, #0x200                 	// #512
  41944c:	bl	40adb0 <strscpy@plt>
  419450:	add	x8, sp, #0x74
  419454:	mov	x0, x8
  419458:	mov	x9, xzr
  41945c:	mov	x1, x9
  419460:	str	x8, [sp, #24]
  419464:	bl	40aec0 <delete_trailing_chars@plt>
  419468:	ldr	x8, [sp, #24]
  41946c:	mov	x0, x8
  419470:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  419474:	add	x1, x1, #0x5fe
  419478:	bl	40aed0 <util_replace_chars@plt>
  41947c:	str	w0, [sp, #112]
  419480:	ldr	w10, [sp, #112]
  419484:	cmp	w10, #0x0
  419488:	cset	w10, le
  41948c:	tbnz	w10, #0, 419558 <udev_event_subst_format+0x85c>
  419490:	mov	x8, xzr
  419494:	str	x8, [sp, #104]
  419498:	ldr	x8, [sp, #72]
  41949c:	ldr	x9, [x8, #80]
  4194a0:	str	x9, [sp, #96]
  4194a4:	mov	w10, #0x7                   	// #7
  4194a8:	str	w10, [sp, #92]
  4194ac:	str	wzr, [sp, #88]
  4194b0:	ldr	x9, [sp, #96]
  4194b4:	cbz	x9, 4194f4 <udev_event_subst_format+0x7f8>
  4194b8:	mov	w0, #0x1                   	// #1
  4194bc:	bl	40a3f0 <log_get_max_level_realm@plt>
  4194c0:	ldr	w8, [sp, #92]
  4194c4:	cmp	w0, w8
  4194c8:	cset	w8, ge  // ge = tcont
  4194cc:	mov	w9, #0x1                   	// #1
  4194d0:	eor	w8, w8, #0x1
  4194d4:	eor	w8, w8, w9
  4194d8:	and	w8, w8, #0x1
  4194dc:	mov	w1, w8
  4194e0:	sxtw	x10, w1
  4194e4:	cbz	x10, 4194f4 <udev_event_subst_format+0x7f8>
  4194e8:	ldr	x0, [sp, #96]
  4194ec:	add	x1, sp, #0x68
  4194f0:	bl	40a860 <sd_device_get_sysname@plt>
  4194f4:	ldr	w0, [sp, #92]
  4194f8:	ldr	w1, [sp, #88]
  4194fc:	ldr	x8, [sp, #104]
  419500:	mov	x9, xzr
  419504:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  419508:	add	x10, x10, #0xa46
  41950c:	cmp	x8, #0x0
  419510:	csel	x5, x10, x9, ne  // ne = any
  419514:	ldr	x6, [sp, #104]
  419518:	ldr	w11, [sp, #112]
  41951c:	ldr	x2, [sp, #64]
  419520:	mov	w3, #0x16e                 	// #366
  419524:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  419528:	add	x4, x4, #0x5bc
  41952c:	mov	x7, x9
  419530:	mov	x8, sp
  419534:	str	x9, [x8]
  419538:	mov	x8, sp
  41953c:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  419540:	add	x9, x9, #0x605
  419544:	str	x9, [x8, #8]
  419548:	mov	x8, sp
  41954c:	str	w11, [x8, #16]
  419550:	bl	40a870 <log_object_internal@plt>
  419554:	str	w0, [sp, #84]
  419558:	ldr	x8, [sp, #72]
  41955c:	ldr	x1, [x8, #96]
  419560:	sub	x0, x29, #0x50
  419564:	add	x2, sp, #0x74
  419568:	bl	40ae40 <strpcpy@plt>
  41956c:	ldr	x8, [sp, #72]
  419570:	str	x0, [x8, #96]
  419574:	b	419910 <udev_event_subst_format+0xc14>
  419578:	ldr	x8, [sp, #72]
  41957c:	ldr	x0, [x8, #80]
  419580:	sub	x1, x29, #0x38
  419584:	bl	40abc0 <sd_device_get_parent@plt>
  419588:	stur	w0, [x29, #-84]
  41958c:	ldur	w9, [x29, #-84]
  419590:	mov	w10, #0xffffffed            	// #-19
  419594:	cmp	w9, w10
  419598:	b.ne	4195a0 <udev_event_subst_format+0x8a4>  // b.any
  41959c:	b	419928 <udev_event_subst_format+0xc2c>
  4195a0:	ldur	w8, [x29, #-84]
  4195a4:	cmp	w8, #0x0
  4195a8:	cset	w8, ge  // ge = tcont
  4195ac:	tbnz	w8, #0, 4195c0 <udev_event_subst_format+0x8c4>
  4195b0:	ldursw	x8, [x29, #-84]
  4195b4:	ldr	x9, [sp, #72]
  4195b8:	str	x8, [x9, #136]
  4195bc:	b	41993c <udev_event_subst_format+0xc40>
  4195c0:	ldr	x8, [sp, #72]
  4195c4:	ldr	x0, [x8, #88]
  4195c8:	sub	x1, x29, #0x48
  4195cc:	bl	40a930 <sd_device_get_devname@plt>
  4195d0:	stur	w0, [x29, #-84]
  4195d4:	ldur	w9, [x29, #-84]
  4195d8:	mov	w10, #0xfffffffe            	// #-2
  4195dc:	cmp	w9, w10
  4195e0:	b.ne	4195e8 <udev_event_subst_format+0x8ec>  // b.any
  4195e4:	b	419928 <udev_event_subst_format+0xc2c>
  4195e8:	ldur	w8, [x29, #-84]
  4195ec:	cmp	w8, #0x0
  4195f0:	cset	w8, ge  // ge = tcont
  4195f4:	tbnz	w8, #0, 419608 <udev_event_subst_format+0x90c>
  4195f8:	ldursw	x8, [x29, #-84]
  4195fc:	ldr	x9, [sp, #72]
  419600:	str	x8, [x9, #136]
  419604:	b	41993c <udev_event_subst_format+0xc40>
  419608:	ldr	x8, [sp, #72]
  41960c:	ldr	x1, [x8, #96]
  419610:	ldr	x9, [x8, #72]
  419614:	add	x2, x9, #0x5
  419618:	sub	x0, x29, #0x50
  41961c:	bl	40ae40 <strpcpy@plt>
  419620:	ldr	x8, [sp, #72]
  419624:	str	x0, [x8, #96]
  419628:	b	419910 <udev_event_subst_format+0xc14>
  41962c:	ldr	x8, [sp, #72]
  419630:	ldr	x0, [x8, #80]
  419634:	sub	x1, x29, #0x48
  419638:	bl	40a930 <sd_device_get_devname@plt>
  41963c:	stur	w0, [x29, #-84]
  419640:	ldur	w9, [x29, #-84]
  419644:	mov	w10, #0xfffffffe            	// #-2
  419648:	cmp	w9, w10
  41964c:	b.ne	419654 <udev_event_subst_format+0x958>  // b.any
  419650:	b	419928 <udev_event_subst_format+0xc2c>
  419654:	ldur	w8, [x29, #-84]
  419658:	cmp	w8, #0x0
  41965c:	cset	w8, ge  // ge = tcont
  419660:	tbnz	w8, #0, 419674 <udev_event_subst_format+0x978>
  419664:	ldursw	x8, [x29, #-84]
  419668:	ldr	x9, [sp, #72]
  41966c:	str	x8, [x9, #136]
  419670:	b	41993c <udev_event_subst_format+0xc40>
  419674:	ldr	x8, [sp, #72]
  419678:	ldr	x1, [x8, #96]
  41967c:	ldr	x2, [x8, #72]
  419680:	sub	x0, x29, #0x50
  419684:	bl	40ae40 <strpcpy@plt>
  419688:	ldr	x8, [sp, #72]
  41968c:	str	x0, [x8, #96]
  419690:	b	419910 <udev_event_subst_format+0xc14>
  419694:	ldr	x8, [sp, #72]
  419698:	ldr	x9, [x8, #128]
  41969c:	ldr	x9, [x9, #24]
  4196a0:	cbz	x9, 4196c8 <udev_event_subst_format+0x9cc>
  4196a4:	ldr	x8, [sp, #72]
  4196a8:	ldr	x1, [x8, #96]
  4196ac:	ldr	x9, [x8, #128]
  4196b0:	ldr	x2, [x9, #24]
  4196b4:	sub	x0, x29, #0x50
  4196b8:	bl	40ae40 <strpcpy@plt>
  4196bc:	ldr	x8, [sp, #72]
  4196c0:	str	x0, [x8, #96]
  4196c4:	b	419758 <udev_event_subst_format+0xa5c>
  4196c8:	ldr	x8, [sp, #72]
  4196cc:	ldr	x0, [x8, #80]
  4196d0:	sub	x1, x29, #0x48
  4196d4:	bl	40a930 <sd_device_get_devname@plt>
  4196d8:	cmp	w0, #0x0
  4196dc:	cset	w9, lt  // lt = tstop
  4196e0:	tbnz	w9, #0, 419708 <udev_event_subst_format+0xa0c>
  4196e4:	ldr	x8, [sp, #72]
  4196e8:	ldr	x1, [x8, #96]
  4196ec:	ldr	x9, [x8, #72]
  4196f0:	add	x2, x9, #0x5
  4196f4:	sub	x0, x29, #0x50
  4196f8:	bl	40ae40 <strpcpy@plt>
  4196fc:	ldr	x8, [sp, #72]
  419700:	str	x0, [x8, #96]
  419704:	b	419758 <udev_event_subst_format+0xa5c>
  419708:	ldr	x8, [sp, #72]
  41970c:	ldr	x0, [x8, #80]
  419710:	sub	x1, x29, #0x48
  419714:	bl	40a860 <sd_device_get_sysname@plt>
  419718:	stur	w0, [x29, #-84]
  41971c:	ldur	w9, [x29, #-84]
  419720:	cmp	w9, #0x0
  419724:	cset	w9, ge  // ge = tcont
  419728:	tbnz	w9, #0, 41973c <udev_event_subst_format+0xa40>
  41972c:	ldursw	x8, [x29, #-84]
  419730:	ldr	x9, [sp, #72]
  419734:	str	x8, [x9, #136]
  419738:	b	41993c <udev_event_subst_format+0xc40>
  41973c:	ldr	x8, [sp, #72]
  419740:	ldr	x1, [x8, #96]
  419744:	ldr	x2, [x8, #72]
  419748:	sub	x0, x29, #0x50
  41974c:	bl	40ae40 <strpcpy@plt>
  419750:	ldr	x8, [sp, #72]
  419754:	str	x0, [x8, #96]
  419758:	b	419910 <udev_event_subst_format+0xc14>
  41975c:	ldr	x8, [sp, #72]
  419760:	ldr	x0, [x8, #80]
  419764:	bl	40aee0 <sd_device_get_devlink_first@plt>
  419768:	ldr	x8, [sp, #72]
  41976c:	str	x0, [x8, #72]
  419770:	ldr	x8, [sp, #72]
  419774:	ldr	x9, [x8, #72]
  419778:	cbz	x9, 4197fc <udev_event_subst_format+0xb00>
  41977c:	ldr	x8, [sp, #72]
  419780:	ldr	x9, [x8, #64]
  419784:	ldr	x10, [x8, #104]
  419788:	cmp	x9, x10
  41978c:	b.ne	4197b4 <udev_event_subst_format+0xab8>  // b.any
  419790:	ldr	x8, [sp, #72]
  419794:	ldr	x1, [x8, #96]
  419798:	ldr	x9, [x8, #72]
  41979c:	add	x2, x9, #0x5
  4197a0:	sub	x0, x29, #0x50
  4197a4:	bl	40ae40 <strpcpy@plt>
  4197a8:	ldr	x8, [sp, #72]
  4197ac:	str	x0, [x8, #96]
  4197b0:	b	4197e4 <udev_event_subst_format+0xae8>
  4197b4:	ldr	x8, [sp, #72]
  4197b8:	ldr	x1, [x8, #96]
  4197bc:	ldr	x9, [x8, #72]
  4197c0:	add	x3, x9, #0x5
  4197c4:	sub	x0, x29, #0x50
  4197c8:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  4197cc:	add	x2, x2, #0x61e
  4197d0:	mov	x9, xzr
  4197d4:	mov	x4, x9
  4197d8:	bl	40aef0 <strpcpyl@plt>
  4197dc:	ldr	x8, [sp, #72]
  4197e0:	str	x0, [x8, #96]
  4197e4:	ldr	x8, [sp, #72]
  4197e8:	ldr	x0, [x8, #80]
  4197ec:	bl	40af00 <sd_device_get_devlink_next@plt>
  4197f0:	ldr	x8, [sp, #72]
  4197f4:	str	x0, [x8, #72]
  4197f8:	b	419770 <udev_event_subst_format+0xa74>
  4197fc:	ldr	x8, [sp, #72]
  419800:	ldr	x9, [x8, #64]
  419804:	ldr	x10, [x8, #104]
  419808:	cmp	x9, x10
  41980c:	b.ne	419814 <udev_event_subst_format+0xb18>  // b.any
  419810:	b	419928 <udev_event_subst_format+0xc2c>
  419814:	b	419910 <udev_event_subst_format+0xc14>
  419818:	ldr	x8, [sp, #72]
  41981c:	ldr	x1, [x8, #96]
  419820:	sub	x0, x29, #0x50
  419824:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  419828:	add	x2, x2, #0x620
  41982c:	bl	40ae40 <strpcpy@plt>
  419830:	ldr	x8, [sp, #72]
  419834:	str	x0, [x8, #96]
  419838:	b	419910 <udev_event_subst_format+0xc14>
  41983c:	ldr	x8, [sp, #72]
  419840:	ldr	x1, [x8, #96]
  419844:	sub	x0, x29, #0x50
  419848:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  41984c:	add	x2, x2, #0x625
  419850:	bl	40ae40 <strpcpy@plt>
  419854:	ldr	x8, [sp, #72]
  419858:	str	x0, [x8, #96]
  41985c:	b	419910 <udev_event_subst_format+0xc14>
  419860:	ldr	x8, [sp, #72]
  419864:	ldr	x0, [x8, #112]
  419868:	bl	419c88 <isempty>
  41986c:	tbnz	w0, #0, 419874 <udev_event_subst_format+0xb78>
  419870:	b	419884 <udev_event_subst_format+0xb88>
  419874:	mov	x8, #0xffffffffffffffea    	// #-22
  419878:	ldr	x9, [sp, #72]
  41987c:	str	x8, [x9, #136]
  419880:	b	41993c <udev_event_subst_format+0xc40>
  419884:	ldr	x8, [sp, #72]
  419888:	ldr	x0, [x8, #80]
  41988c:	ldr	x1, [x8, #112]
  419890:	sub	x2, x29, #0x48
  419894:	bl	40aa40 <sd_device_get_property_value@plt>
  419898:	stur	w0, [x29, #-84]
  41989c:	ldur	w9, [x29, #-84]
  4198a0:	mov	w10, #0xfffffffe            	// #-2
  4198a4:	cmp	w9, w10
  4198a8:	b.ne	4198b0 <udev_event_subst_format+0xbb4>  // b.any
  4198ac:	b	419928 <udev_event_subst_format+0xc2c>
  4198b0:	ldur	w8, [x29, #-84]
  4198b4:	cmp	w8, #0x0
  4198b8:	cset	w8, ge  // ge = tcont
  4198bc:	tbnz	w8, #0, 4198d0 <udev_event_subst_format+0xbd4>
  4198c0:	ldursw	x8, [x29, #-84]
  4198c4:	ldr	x9, [sp, #72]
  4198c8:	str	x8, [x9, #136]
  4198cc:	b	41993c <udev_event_subst_format+0xc40>
  4198d0:	ldr	x8, [sp, #72]
  4198d4:	ldr	x1, [x8, #96]
  4198d8:	ldr	x2, [x8, #72]
  4198dc:	sub	x0, x29, #0x50
  4198e0:	bl	40ae40 <strpcpy@plt>
  4198e4:	ldr	x8, [sp, #72]
  4198e8:	str	x0, [x8, #96]
  4198ec:	b	419910 <udev_event_subst_format+0xc14>
  4198f0:	mov	w0, #0x1                   	// #1
  4198f4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4198f8:	add	x1, x1, #0x62a
  4198fc:	ldr	x2, [sp, #64]
  419900:	mov	w3, #0x1ad                 	// #429
  419904:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  419908:	add	x4, x4, #0x64b
  41990c:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  419910:	ldr	x8, [sp, #72]
  419914:	ldr	x9, [x8, #64]
  419918:	ldr	x10, [x8, #104]
  41991c:	subs	x9, x9, x10
  419920:	str	x9, [x8, #136]
  419924:	b	41993c <udev_event_subst_format+0xc40>
  419928:	ldr	x8, [sp, #72]
  41992c:	ldr	x9, [x8, #64]
  419930:	mov	w10, #0x0                   	// #0
  419934:	strb	w10, [x9]
  419938:	str	xzr, [x8, #136]
  41993c:	ldr	x8, [sp, #72]
  419940:	ldr	x0, [x8, #136]
  419944:	add	sp, sp, #0x310
  419948:	ldr	x28, [sp, #16]
  41994c:	ldp	x29, x30, [sp], #32
  419950:	ret

0000000000419954 <format_type_to_string>:
  419954:	sub	sp, sp, #0x20
  419958:	str	w0, [sp, #20]
  41995c:	str	xzr, [sp, #8]
  419960:	ldr	x8, [sp, #8]
  419964:	cmp	x8, #0x12
  419968:	b.cs	4199c8 <format_type_to_string+0x74>  // b.hs, b.nlast
  41996c:	ldr	x8, [sp, #8]
  419970:	mov	x9, #0x10                  	// #16
  419974:	mul	x8, x9, x8
  419978:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  41997c:	add	x9, x9, #0x278
  419980:	add	x8, x9, x8
  419984:	ldr	w10, [x8, #12]
  419988:	ldr	w11, [sp, #20]
  41998c:	cmp	w10, w11
  419990:	b.ne	4199b8 <format_type_to_string+0x64>  // b.any
  419994:	ldr	x8, [sp, #8]
  419998:	mov	x9, #0x10                  	// #16
  41999c:	mul	x8, x9, x8
  4199a0:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  4199a4:	add	x9, x9, #0x278
  4199a8:	add	x8, x9, x8
  4199ac:	ldr	x8, [x8]
  4199b0:	str	x8, [sp, #24]
  4199b4:	b	4199d0 <format_type_to_string+0x7c>
  4199b8:	ldr	x8, [sp, #8]
  4199bc:	add	x8, x8, #0x1
  4199c0:	str	x8, [sp, #8]
  4199c4:	b	419960 <format_type_to_string+0xc>
  4199c8:	mov	x8, xzr
  4199cc:	str	x8, [sp, #24]
  4199d0:	ldr	x0, [sp, #24]
  4199d4:	add	sp, sp, #0x20
  4199d8:	ret

00000000004199dc <format_type_to_char>:
  4199dc:	sub	sp, sp, #0x10
  4199e0:	str	w0, [sp, #8]
  4199e4:	str	xzr, [sp]
  4199e8:	ldr	x8, [sp]
  4199ec:	cmp	x8, #0x12
  4199f0:	b.cs	419a50 <format_type_to_char+0x74>  // b.hs, b.nlast
  4199f4:	ldr	x8, [sp]
  4199f8:	mov	x9, #0x10                  	// #16
  4199fc:	mul	x8, x9, x8
  419a00:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  419a04:	add	x9, x9, #0x278
  419a08:	add	x8, x9, x8
  419a0c:	ldr	w10, [x8, #12]
  419a10:	ldr	w11, [sp, #8]
  419a14:	cmp	w10, w11
  419a18:	b.ne	419a40 <format_type_to_char+0x64>  // b.any
  419a1c:	ldr	x8, [sp]
  419a20:	mov	x9, #0x10                  	// #16
  419a24:	mul	x8, x9, x8
  419a28:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  419a2c:	add	x9, x9, #0x278
  419a30:	add	x8, x9, x8
  419a34:	ldrb	w10, [x8, #8]
  419a38:	strb	w10, [sp, #15]
  419a3c:	b	419a58 <format_type_to_char+0x7c>
  419a40:	ldr	x8, [sp]
  419a44:	add	x8, x8, #0x1
  419a48:	str	x8, [sp]
  419a4c:	b	4199e8 <format_type_to_char+0xc>
  419a50:	mov	w8, #0x0                   	// #0
  419a54:	strb	w8, [sp, #15]
  419a58:	ldrb	w0, [sp, #15]
  419a5c:	add	sp, sp, #0x10
  419a60:	ret

0000000000419a64 <udev_check_format>:
  419a64:	stp	x29, x30, [sp, #-32]!
  419a68:	str	x28, [sp, #16]
  419a6c:	mov	x29, sp
  419a70:	sub	sp, sp, #0x450
  419a74:	sub	x8, x29, #0x30
  419a78:	str	x0, [x8, #32]
  419a7c:	str	x1, [x8, #24]
  419a80:	str	x2, [x8, #16]
  419a84:	ldr	x9, [x8, #32]
  419a88:	str	x9, [x8]
  419a8c:	str	x8, [sp, #8]
  419a90:	ldr	x8, [sp, #8]
  419a94:	ldr	x9, [x8]
  419a98:	ldrb	w10, [x9]
  419a9c:	cbz	w10, 419c70 <udev_check_format+0x20c>
  419aa0:	sub	x0, x29, #0x30
  419aa4:	mov	w8, #0x1                   	// #1
  419aa8:	and	w1, w8, #0x1
  419aac:	sub	x2, x29, #0x24
  419ab0:	add	x3, sp, #0x20
  419ab4:	bl	41893c <get_subst_type>
  419ab8:	str	w0, [sp, #28]
  419abc:	ldr	w8, [sp, #28]
  419ac0:	cmp	w8, #0x0
  419ac4:	cset	w8, ge  // ge = tcont
  419ac8:	tbnz	w8, #0, 419b1c <udev_check_format+0xb8>
  419acc:	ldr	x8, [sp, #8]
  419ad0:	ldr	x9, [x8, #24]
  419ad4:	cbz	x9, 419af0 <udev_check_format+0x8c>
  419ad8:	ldr	x8, [sp, #8]
  419adc:	ldr	x9, [x8]
  419ae0:	ldr	x10, [x8, #32]
  419ae4:	subs	x9, x9, x10
  419ae8:	ldr	x10, [x8, #24]
  419aec:	str	x9, [x10]
  419af0:	ldr	x8, [sp, #8]
  419af4:	ldr	x9, [x8, #16]
  419af8:	cbz	x9, 419b10 <udev_check_format+0xac>
  419afc:	ldr	x8, [sp, #8]
  419b00:	ldr	x9, [x8, #16]
  419b04:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  419b08:	add	x10, x10, #0x144
  419b0c:	str	x10, [x9]
  419b10:	ldr	w8, [sp, #28]
  419b14:	stur	w8, [x29, #-4]
  419b18:	b	419c74 <udev_check_format+0x210>
  419b1c:	ldr	w8, [sp, #28]
  419b20:	cbnz	w8, 419b38 <udev_check_format+0xd4>
  419b24:	ldr	x8, [sp, #8]
  419b28:	ldr	x9, [x8]
  419b2c:	add	x9, x9, #0x1
  419b30:	str	x9, [x8]
  419b34:	b	419a90 <udev_check_format+0x2c>
  419b38:	mov	w8, #0x0                   	// #0
  419b3c:	strb	w8, [sp, #27]
  419b40:	ldur	w8, [x29, #-36]
  419b44:	subs	w8, w8, #0x1
  419b48:	mov	w9, #0x1                   	// #1
  419b4c:	cmp	w8, #0x1
  419b50:	cset	w8, ls  // ls = plast
  419b54:	eor	w8, w8, w9
  419b58:	tbnz	w8, #0, 419b6c <udev_check_format+0x108>
  419b5c:	b	419b60 <udev_check_format+0xfc>
  419b60:	mov	w8, #0x1                   	// #1
  419b64:	strb	w8, [sp, #27]
  419b68:	b	419b6c <udev_check_format+0x108>
  419b6c:	ldrb	w8, [sp, #27]
  419b70:	and	w8, w8, #0x1
  419b74:	strb	w8, [sp, #26]
  419b78:	ldrb	w8, [sp, #26]
  419b7c:	tbnz	w8, #0, 419b84 <udev_check_format+0x120>
  419b80:	b	419be4 <udev_check_format+0x180>
  419b84:	add	x0, sp, #0x20
  419b88:	bl	419c88 <isempty>
  419b8c:	tbnz	w0, #0, 419b94 <udev_check_format+0x130>
  419b90:	b	419be4 <udev_check_format+0x180>
  419b94:	ldr	x8, [sp, #8]
  419b98:	ldr	x9, [x8, #24]
  419b9c:	cbz	x9, 419bb8 <udev_check_format+0x154>
  419ba0:	ldr	x8, [sp, #8]
  419ba4:	ldr	x9, [x8]
  419ba8:	ldr	x10, [x8, #32]
  419bac:	subs	x9, x9, x10
  419bb0:	ldr	x10, [x8, #24]
  419bb4:	str	x9, [x10]
  419bb8:	ldr	x8, [sp, #8]
  419bbc:	ldr	x9, [x8, #16]
  419bc0:	cbz	x9, 419bd8 <udev_check_format+0x174>
  419bc4:	ldr	x8, [sp, #8]
  419bc8:	ldr	x9, [x8, #16]
  419bcc:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  419bd0:	add	x10, x10, #0x15e
  419bd4:	str	x10, [x9]
  419bd8:	mov	w8, #0xffffffea            	// #-22
  419bdc:	stur	w8, [x29, #-4]
  419be0:	b	419c74 <udev_check_format+0x210>
  419be4:	ldur	w8, [x29, #-36]
  419be8:	cmp	w8, #0xa
  419bec:	b.ne	419c6c <udev_check_format+0x208>  // b.any
  419bf0:	add	x0, sp, #0x20
  419bf4:	bl	419c88 <isempty>
  419bf8:	tbnz	w0, #0, 419c6c <udev_check_format+0x208>
  419bfc:	add	x0, sp, #0x20
  419c00:	add	x1, sp, #0x14
  419c04:	bl	419cc8 <safe_atou_optional_plus>
  419c08:	str	w0, [sp, #28]
  419c0c:	ldr	w8, [sp, #28]
  419c10:	cmp	w8, #0x0
  419c14:	cset	w8, ge  // ge = tcont
  419c18:	tbnz	w8, #0, 419c6c <udev_check_format+0x208>
  419c1c:	ldr	x8, [sp, #8]
  419c20:	ldr	x9, [x8, #24]
  419c24:	cbz	x9, 419c40 <udev_check_format+0x1dc>
  419c28:	ldr	x8, [sp, #8]
  419c2c:	ldr	x9, [x8]
  419c30:	ldr	x10, [x8, #32]
  419c34:	subs	x9, x9, x10
  419c38:	ldr	x10, [x8, #24]
  419c3c:	str	x9, [x10]
  419c40:	ldr	x8, [sp, #8]
  419c44:	ldr	x9, [x8, #16]
  419c48:	cbz	x9, 419c60 <udev_check_format+0x1fc>
  419c4c:	ldr	x8, [sp, #8]
  419c50:	ldr	x9, [x8, #16]
  419c54:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  419c58:	add	x10, x10, #0x176
  419c5c:	str	x10, [x9]
  419c60:	ldr	w8, [sp, #28]
  419c64:	stur	w8, [x29, #-4]
  419c68:	b	419c74 <udev_check_format+0x210>
  419c6c:	b	419a90 <udev_check_format+0x2c>
  419c70:	stur	wzr, [x29, #-4]
  419c74:	ldur	w0, [x29, #-4]
  419c78:	add	sp, sp, #0x450
  419c7c:	ldr	x28, [sp, #16]
  419c80:	ldp	x29, x30, [sp], #32
  419c84:	ret

0000000000419c88 <isempty>:
  419c88:	sub	sp, sp, #0x10
  419c8c:	str	x0, [sp, #8]
  419c90:	ldr	x8, [sp, #8]
  419c94:	mov	w9, #0x1                   	// #1
  419c98:	str	w9, [sp, #4]
  419c9c:	cbz	x8, 419cb8 <isempty+0x30>
  419ca0:	ldr	x8, [sp, #8]
  419ca4:	ldrb	w9, [x8]
  419ca8:	cmp	w9, #0x0
  419cac:	cset	w9, ne  // ne = any
  419cb0:	eor	w9, w9, #0x1
  419cb4:	str	w9, [sp, #4]
  419cb8:	ldr	w8, [sp, #4]
  419cbc:	and	w0, w8, #0x1
  419cc0:	add	sp, sp, #0x10
  419cc4:	ret

0000000000419cc8 <safe_atou_optional_plus>:
  419cc8:	stp	x29, x30, [sp, #-16]!
  419ccc:	mov	x29, sp
  419cd0:	sub	sp, sp, #0x60
  419cd4:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  419cd8:	add	x8, x8, #0xff0
  419cdc:	add	x8, x8, #0x3
  419ce0:	stur	x0, [x29, #-16]
  419ce4:	stur	x1, [x29, #-24]
  419ce8:	stur	x8, [x29, #-80]
  419cec:	ldur	x8, [x29, #-16]
  419cf0:	cmp	x8, #0x0
  419cf4:	cset	w9, ne  // ne = any
  419cf8:	mov	w10, #0x1                   	// #1
  419cfc:	eor	w9, w9, #0x1
  419d00:	eor	w9, w9, w10
  419d04:	eor	w9, w9, w10
  419d08:	and	w9, w9, #0x1
  419d0c:	mov	w0, w9
  419d10:	sxtw	x8, w0
  419d14:	cbz	x8, 419d38 <safe_atou_optional_plus+0x70>
  419d18:	mov	w0, #0x1                   	// #1
  419d1c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  419d20:	add	x1, x1, #0x6ae
  419d24:	ldur	x2, [x29, #-80]
  419d28:	mov	w3, #0xd7                  	// #215
  419d2c:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  419d30:	add	x4, x4, #0x6b0
  419d34:	bl	40a540 <log_assert_failed_realm@plt>
  419d38:	ldur	x8, [x29, #-24]
  419d3c:	cmp	x8, #0x0
  419d40:	cset	w9, ne  // ne = any
  419d44:	mov	w10, #0x1                   	// #1
  419d48:	eor	w9, w9, #0x1
  419d4c:	eor	w9, w9, w10
  419d50:	eor	w9, w9, w10
  419d54:	and	w9, w9, #0x1
  419d58:	mov	w0, w9
  419d5c:	sxtw	x8, w0
  419d60:	cbz	x8, 419d84 <safe_atou_optional_plus+0xbc>
  419d64:	mov	w0, #0x1                   	// #1
  419d68:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  419d6c:	add	x1, x1, #0x2ff
  419d70:	ldur	x2, [x29, #-80]
  419d74:	mov	w3, #0xd8                  	// #216
  419d78:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  419d7c:	add	x4, x4, #0x6b0
  419d80:	bl	40a540 <log_assert_failed_realm@plt>
  419d84:	ldur	x0, [x29, #-16]
  419d88:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  419d8c:	add	x1, x1, #0x6ea
  419d90:	bl	40af10 <endswith@plt>
  419d94:	stur	x0, [x29, #-32]
  419d98:	ldur	x8, [x29, #-32]
  419d9c:	cbz	x8, 419e24 <safe_atou_optional_plus+0x15c>
  419da0:	ldur	x8, [x29, #-16]
  419da4:	stur	x8, [x29, #-48]
  419da8:	ldur	x0, [x29, #-48]
  419dac:	ldur	x8, [x29, #-32]
  419db0:	ldur	x9, [x29, #-16]
  419db4:	subs	x1, x8, x9
  419db8:	bl	40ad20 <strnlen@plt>
  419dbc:	stur	x0, [x29, #-56]
  419dc0:	ldur	x8, [x29, #-56]
  419dc4:	mov	x9, #0x1                   	// #1
  419dc8:	add	x8, x8, #0x1
  419dcc:	mul	x8, x8, x9
  419dd0:	add	x8, x8, #0xf
  419dd4:	and	x8, x8, #0xfffffffffffffff0
  419dd8:	mov	x9, sp
  419ddc:	subs	x8, x9, x8
  419de0:	mov	sp, x8
  419de4:	stur	x8, [x29, #-64]
  419de8:	ldur	x8, [x29, #-64]
  419dec:	ldur	x9, [x29, #-56]
  419df0:	add	x8, x8, x9
  419df4:	mov	w10, #0x0                   	// #0
  419df8:	strb	w10, [x8]
  419dfc:	ldur	x8, [x29, #-64]
  419e00:	ldur	x1, [x29, #-48]
  419e04:	ldur	x2, [x29, #-56]
  419e08:	mov	x0, x8
  419e0c:	stur	x8, [x29, #-88]
  419e10:	bl	40a600 <memcpy@plt>
  419e14:	ldur	x8, [x29, #-88]
  419e18:	stur	x8, [x29, #-72]
  419e1c:	ldur	x9, [x29, #-72]
  419e20:	stur	x9, [x29, #-16]
  419e24:	ldur	x0, [x29, #-16]
  419e28:	ldur	x1, [x29, #-24]
  419e2c:	bl	41d094 <safe_atou>
  419e30:	stur	w0, [x29, #-36]
  419e34:	ldur	w8, [x29, #-36]
  419e38:	cmp	w8, #0x0
  419e3c:	cset	w8, ge  // ge = tcont
  419e40:	tbnz	w8, #0, 419e50 <safe_atou_optional_plus+0x188>
  419e44:	ldur	w8, [x29, #-36]
  419e48:	stur	w8, [x29, #-4]
  419e4c:	b	419e70 <safe_atou_optional_plus+0x1a8>
  419e50:	ldur	x8, [x29, #-32]
  419e54:	cmp	x8, #0x0
  419e58:	cset	w9, ne  // ne = any
  419e5c:	mov	w10, #0x1                   	// #1
  419e60:	eor	w9, w9, #0x1
  419e64:	eor	w9, w9, w10
  419e68:	and	w9, w9, #0x1
  419e6c:	stur	w9, [x29, #-4]
  419e70:	ldur	w0, [x29, #-4]
  419e74:	mov	sp, x29
  419e78:	ldp	x29, x30, [sp], #16
  419e7c:	ret

0000000000419e80 <udev_event_spawn>:
  419e80:	stp	x29, x30, [sp, #-32]!
  419e84:	str	x28, [sp, #16]
  419e88:	mov	x29, sp
  419e8c:	sub	sp, sp, #0x260
  419e90:	add	x8, sp, #0xe8
  419e94:	adrp	x9, 472000 <on_inotify.__assert_in_set+0xe540>
  419e98:	add	x9, x9, #0x2a0
  419e9c:	adrp	x10, 472000 <on_inotify.__assert_in_set+0xe540>
  419ea0:	add	x10, x10, #0x2a0
  419ea4:	mov	x11, xzr
  419ea8:	mov	w12, #0x1                   	// #1
  419eac:	adrp	x13, 465000 <on_inotify.__assert_in_set+0x1540>
  419eb0:	add	x13, x13, #0xff0
  419eb4:	add	x13, x13, #0x3
  419eb8:	adrp	x14, 466000 <on_inotify.__assert_in_set+0x2540>
  419ebc:	add	x14, x14, #0x1ff
  419ec0:	adrp	x15, 464000 <on_inotify.__assert_in_set+0x540>
  419ec4:	add	x15, x15, #0xa46
  419ec8:	adrp	x16, 466000 <on_inotify.__assert_in_set+0x2540>
  419ecc:	add	x16, x16, #0x199
  419ed0:	str	x0, [x8, #360]
  419ed4:	str	x1, [x8, #352]
  419ed8:	and	w12, w2, w12
  419edc:	sturb	w12, [x29, #-25]
  419ee0:	str	x3, [x8, #336]
  419ee4:	str	x4, [x8, #328]
  419ee8:	str	x5, [x8, #320]
  419eec:	ldr	x9, [x9]
  419ef0:	str	x9, [x8, #312]
  419ef4:	ldr	x9, [x10]
  419ef8:	str	x9, [x8, #304]
  419efc:	str	x11, [x8, #296]
  419f00:	str	x11, [x8, #288]
  419f04:	str	x8, [sp, #88]
  419f08:	str	x13, [sp, #80]
  419f0c:	str	x14, [sp, #72]
  419f10:	str	x15, [sp, #64]
  419f14:	str	x16, [sp, #56]
  419f18:	ldr	x8, [sp, #88]
  419f1c:	ldr	x9, [x8, #360]
  419f20:	cmp	x9, #0x0
  419f24:	cset	w10, ne  // ne = any
  419f28:	mov	w11, #0x1                   	// #1
  419f2c:	eor	w10, w10, #0x1
  419f30:	eor	w10, w10, w11
  419f34:	eor	w10, w10, w11
  419f38:	and	w10, w10, #0x1
  419f3c:	mov	w0, w10
  419f40:	sxtw	x9, w0
  419f44:	cbz	x9, 419f64 <udev_event_spawn+0xe4>
  419f48:	mov	w0, #0x1                   	// #1
  419f4c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  419f50:	add	x1, x1, #0xbb0
  419f54:	ldr	x2, [sp, #80]
  419f58:	mov	w3, #0x2bf                 	// #703
  419f5c:	ldr	x4, [sp, #56]
  419f60:	bl	40a540 <log_assert_failed_realm@plt>
  419f64:	ldr	x8, [sp, #88]
  419f68:	ldr	x9, [x8, #360]
  419f6c:	ldr	x9, [x9]
  419f70:	cmp	x9, #0x0
  419f74:	cset	w10, ne  // ne = any
  419f78:	mov	w11, #0x1                   	// #1
  419f7c:	eor	w10, w10, #0x1
  419f80:	eor	w10, w10, w11
  419f84:	eor	w10, w10, w11
  419f88:	and	w10, w10, #0x1
  419f8c:	mov	w0, w10
  419f90:	sxtw	x9, w0
  419f94:	cbz	x9, 419fb4 <udev_event_spawn+0x134>
  419f98:	mov	w0, #0x1                   	// #1
  419f9c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  419fa0:	add	x1, x1, #0x98
  419fa4:	ldr	x2, [sp, #80]
  419fa8:	mov	w3, #0x2c0                 	// #704
  419fac:	ldr	x4, [sp, #56]
  419fb0:	bl	40a540 <log_assert_failed_realm@plt>
  419fb4:	ldr	x8, [sp, #88]
  419fb8:	ldr	x9, [x8, #328]
  419fbc:	mov	w10, #0x1                   	// #1
  419fc0:	str	w10, [sp, #52]
  419fc4:	cbnz	x9, 419fdc <udev_event_spawn+0x15c>
  419fc8:	ldr	x8, [sp, #88]
  419fcc:	ldr	x9, [x8, #320]
  419fd0:	cmp	x9, #0x0
  419fd4:	cset	w10, eq  // eq = none
  419fd8:	str	w10, [sp, #52]
  419fdc:	ldr	w8, [sp, #52]
  419fe0:	mov	w9, #0x1                   	// #1
  419fe4:	eor	w8, w8, #0x1
  419fe8:	eor	w8, w8, w9
  419fec:	eor	w8, w8, w9
  419ff0:	and	w8, w8, #0x1
  419ff4:	mov	w0, w8
  419ff8:	sxtw	x10, w0
  419ffc:	cbz	x10, 41a01c <udev_event_spawn+0x19c>
  41a000:	mov	w0, #0x1                   	// #1
  41a004:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41a008:	add	x1, x1, #0x1e8
  41a00c:	ldr	x2, [sp, #80]
  41a010:	mov	w3, #0x2c1                 	// #705
  41a014:	ldr	x4, [sp, #56]
  41a018:	bl	40a540 <log_assert_failed_realm@plt>
  41a01c:	ldr	x8, [sp, #88]
  41a020:	ldr	x9, [x8, #328]
  41a024:	cbnz	x9, 41a038 <udev_event_spawn+0x1b8>
  41a028:	mov	w0, #0x1                   	// #1
  41a02c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a030:	cmp	w0, #0x6
  41a034:	b.lt	41a138 <udev_event_spawn+0x2b8>  // b.tstop
  41a038:	sub	x0, x29, #0x40
  41a03c:	mov	w1, #0x800                 	// #2048
  41a040:	movk	w1, #0x8, lsl #16
  41a044:	bl	40af20 <pipe2@plt>
  41a048:	cbz	w0, 41a138 <udev_event_spawn+0x2b8>
  41a04c:	mov	x8, xzr
  41a050:	ldr	x9, [sp, #88]
  41a054:	str	x8, [x9, #184]
  41a058:	ldr	x8, [x9, #360]
  41a05c:	ldr	x8, [x8]
  41a060:	str	x8, [x9, #176]
  41a064:	mov	w10, #0x3                   	// #3
  41a068:	stur	w10, [x29, #-204]
  41a06c:	bl	40a480 <__errno_location@plt>
  41a070:	ldr	w10, [x0]
  41a074:	stur	w10, [x29, #-208]
  41a078:	ldr	x8, [sp, #88]
  41a07c:	ldr	x9, [x8, #176]
  41a080:	cbz	x9, 41a0c4 <udev_event_spawn+0x244>
  41a084:	mov	w0, #0x1                   	// #1
  41a088:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a08c:	ldur	w8, [x29, #-204]
  41a090:	cmp	w0, w8
  41a094:	cset	w8, ge  // ge = tcont
  41a098:	mov	w9, #0x1                   	// #1
  41a09c:	eor	w8, w8, #0x1
  41a0a0:	eor	w8, w8, w9
  41a0a4:	and	w8, w8, #0x1
  41a0a8:	mov	w1, w8
  41a0ac:	sxtw	x10, w1
  41a0b0:	cbz	x10, 41a0c4 <udev_event_spawn+0x244>
  41a0b4:	ldr	x8, [sp, #88]
  41a0b8:	ldr	x0, [x8, #176]
  41a0bc:	sub	x1, x29, #0xc0
  41a0c0:	bl	40a860 <sd_device_get_sysname@plt>
  41a0c4:	ldur	w0, [x29, #-204]
  41a0c8:	ldur	w1, [x29, #-208]
  41a0cc:	ldr	x8, [sp, #88]
  41a0d0:	ldr	x9, [x8, #184]
  41a0d4:	mov	x10, xzr
  41a0d8:	cmp	x9, #0x0
  41a0dc:	ldr	x9, [sp, #64]
  41a0e0:	csel	x5, x9, x10, ne  // ne = any
  41a0e4:	ldr	x6, [x8, #184]
  41a0e8:	ldr	x11, [x8, #336]
  41a0ec:	ldr	x2, [sp, #80]
  41a0f0:	mov	w3, #0x2c7                 	// #711
  41a0f4:	ldr	x4, [sp, #72]
  41a0f8:	mov	x7, x10
  41a0fc:	mov	x12, sp
  41a100:	str	x10, [x12]
  41a104:	mov	x10, sp
  41a108:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a10c:	add	x12, x12, #0x210
  41a110:	str	x12, [x10, #8]
  41a114:	mov	x10, sp
  41a118:	str	x11, [x10, #16]
  41a11c:	bl	40a870 <log_object_internal@plt>
  41a120:	stur	w0, [x29, #-212]
  41a124:	ldur	w13, [x29, #-212]
  41a128:	stur	w13, [x29, #-4]
  41a12c:	mov	w13, #0x1                   	// #1
  41a130:	stur	w13, [x29, #-216]
  41a134:	b	41a958 <udev_event_spawn+0xad8>
  41a138:	mov	w0, #0x1                   	// #1
  41a13c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a140:	cmp	w0, #0x6
  41a144:	b.lt	41a248 <udev_event_spawn+0x3c8>  // b.tstop
  41a148:	sub	x0, x29, #0x48
  41a14c:	mov	w1, #0x800                 	// #2048
  41a150:	movk	w1, #0x8, lsl #16
  41a154:	bl	40af20 <pipe2@plt>
  41a158:	cbz	w0, 41a248 <udev_event_spawn+0x3c8>
  41a15c:	mov	x8, xzr
  41a160:	ldr	x9, [sp, #88]
  41a164:	str	x8, [x9, #152]
  41a168:	ldr	x8, [x9, #360]
  41a16c:	ldr	x8, [x8]
  41a170:	str	x8, [x9, #144]
  41a174:	mov	w10, #0x3                   	// #3
  41a178:	stur	w10, [x29, #-236]
  41a17c:	bl	40a480 <__errno_location@plt>
  41a180:	ldr	w10, [x0]
  41a184:	stur	w10, [x29, #-240]
  41a188:	ldr	x8, [sp, #88]
  41a18c:	ldr	x9, [x8, #144]
  41a190:	cbz	x9, 41a1d4 <udev_event_spawn+0x354>
  41a194:	mov	w0, #0x1                   	// #1
  41a198:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a19c:	ldur	w8, [x29, #-236]
  41a1a0:	cmp	w0, w8
  41a1a4:	cset	w8, ge  // ge = tcont
  41a1a8:	mov	w9, #0x1                   	// #1
  41a1ac:	eor	w8, w8, #0x1
  41a1b0:	eor	w8, w8, w9
  41a1b4:	and	w8, w8, #0x1
  41a1b8:	mov	w1, w8
  41a1bc:	sxtw	x10, w1
  41a1c0:	cbz	x10, 41a1d4 <udev_event_spawn+0x354>
  41a1c4:	ldr	x8, [sp, #88]
  41a1c8:	ldr	x0, [x8, #144]
  41a1cc:	sub	x1, x29, #0xe0
  41a1d0:	bl	40a860 <sd_device_get_sysname@plt>
  41a1d4:	ldur	w0, [x29, #-236]
  41a1d8:	ldur	w1, [x29, #-240]
  41a1dc:	ldr	x8, [sp, #88]
  41a1e0:	ldr	x9, [x8, #152]
  41a1e4:	mov	x10, xzr
  41a1e8:	cmp	x9, #0x0
  41a1ec:	ldr	x9, [sp, #64]
  41a1f0:	csel	x5, x9, x10, ne  // ne = any
  41a1f4:	ldr	x6, [x8, #152]
  41a1f8:	ldr	x11, [x8, #336]
  41a1fc:	ldr	x2, [sp, #80]
  41a200:	mov	w3, #0x2cc                 	// #716
  41a204:	ldr	x4, [sp, #72]
  41a208:	mov	x7, x10
  41a20c:	mov	x12, sp
  41a210:	str	x10, [x12]
  41a214:	mov	x10, sp
  41a218:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a21c:	add	x12, x12, #0x210
  41a220:	str	x12, [x10, #8]
  41a224:	mov	x10, sp
  41a228:	str	x11, [x10, #16]
  41a22c:	bl	40a870 <log_object_internal@plt>
  41a230:	stur	w0, [x29, #-244]
  41a234:	ldur	w13, [x29, #-244]
  41a238:	stur	w13, [x29, #-4]
  41a23c:	mov	w13, #0x1                   	// #1
  41a240:	stur	w13, [x29, #-216]
  41a244:	b	41a958 <udev_event_spawn+0xad8>
  41a248:	ldr	x8, [sp, #88]
  41a24c:	ldr	x0, [x8, #336]
  41a250:	mov	x9, xzr
  41a254:	mov	x1, x9
  41a258:	mov	w2, #0x3                   	// #3
  41a25c:	bl	40af30 <strv_split_full@plt>
  41a260:	ldr	x8, [sp, #88]
  41a264:	str	x0, [x8, #296]
  41a268:	ldr	x9, [x8, #296]
  41a26c:	cbnz	x9, 41a29c <udev_event_spawn+0x41c>
  41a270:	mov	w8, #0x1                   	// #1
  41a274:	mov	w0, w8
  41a278:	ldr	x1, [sp, #80]
  41a27c:	mov	w2, #0x2d0                 	// #720
  41a280:	ldr	x3, [sp, #72]
  41a284:	str	w8, [sp, #48]
  41a288:	bl	40a5e0 <log_oom_internal@plt>
  41a28c:	stur	w0, [x29, #-4]
  41a290:	ldr	w8, [sp, #48]
  41a294:	stur	w8, [x29, #-216]
  41a298:	b	41a958 <udev_event_spawn+0xad8>
  41a29c:	ldr	x8, [sp, #88]
  41a2a0:	ldr	x9, [x8, #296]
  41a2a4:	ldr	x0, [x9]
  41a2a8:	bl	419c88 <isempty>
  41a2ac:	tbnz	w0, #0, 41a2b4 <udev_event_spawn+0x434>
  41a2b0:	b	41a39c <udev_event_spawn+0x51c>
  41a2b4:	mov	x8, xzr
  41a2b8:	ldr	x9, [sp, #88]
  41a2bc:	str	x8, [x9, #120]
  41a2c0:	ldr	x8, [x9, #360]
  41a2c4:	ldr	x8, [x8]
  41a2c8:	str	x8, [x9, #112]
  41a2cc:	mov	w10, #0x3                   	// #3
  41a2d0:	str	w10, [sp, #340]
  41a2d4:	mov	w10, #0x16                  	// #22
  41a2d8:	movk	w10, #0x4000, lsl #16
  41a2dc:	str	w10, [sp, #336]
  41a2e0:	ldr	x8, [x9, #112]
  41a2e4:	cbz	x8, 41a328 <udev_event_spawn+0x4a8>
  41a2e8:	mov	w0, #0x1                   	// #1
  41a2ec:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a2f0:	ldr	w8, [sp, #340]
  41a2f4:	cmp	w0, w8
  41a2f8:	cset	w8, ge  // ge = tcont
  41a2fc:	mov	w9, #0x1                   	// #1
  41a300:	eor	w8, w8, #0x1
  41a304:	eor	w8, w8, w9
  41a308:	and	w8, w8, #0x1
  41a30c:	mov	w1, w8
  41a310:	sxtw	x10, w1
  41a314:	cbz	x10, 41a328 <udev_event_spawn+0x4a8>
  41a318:	ldr	x8, [sp, #88]
  41a31c:	ldr	x0, [x8, #112]
  41a320:	sub	x1, x29, #0x100
  41a324:	bl	40a860 <sd_device_get_sysname@plt>
  41a328:	ldr	w0, [sp, #340]
  41a32c:	ldr	w1, [sp, #336]
  41a330:	ldr	x8, [sp, #88]
  41a334:	ldr	x9, [x8, #120]
  41a338:	mov	x10, xzr
  41a33c:	cmp	x9, #0x0
  41a340:	ldr	x9, [sp, #64]
  41a344:	csel	x5, x9, x10, ne  // ne = any
  41a348:	ldr	x6, [x8, #120]
  41a34c:	ldr	x11, [x8, #336]
  41a350:	ldr	x2, [sp, #80]
  41a354:	mov	w3, #0x2d4                 	// #724
  41a358:	ldr	x4, [sp, #72]
  41a35c:	mov	x7, x10
  41a360:	mov	x12, sp
  41a364:	str	x10, [x12]
  41a368:	mov	x10, sp
  41a36c:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a370:	add	x12, x12, #0x23b
  41a374:	str	x12, [x10, #8]
  41a378:	mov	x10, sp
  41a37c:	str	x11, [x10, #16]
  41a380:	bl	40a870 <log_object_internal@plt>
  41a384:	str	w0, [sp, #332]
  41a388:	ldr	w13, [sp, #332]
  41a38c:	stur	w13, [x29, #-4]
  41a390:	mov	w13, #0x1                   	// #1
  41a394:	stur	w13, [x29, #-216]
  41a398:	b	41a958 <udev_event_spawn+0xad8>
  41a39c:	ldr	x8, [sp, #88]
  41a3a0:	ldr	x9, [x8, #296]
  41a3a4:	ldr	x0, [x9]
  41a3a8:	bl	40af40 <path_is_absolute@plt>
  41a3ac:	tbnz	w0, #0, 41a438 <udev_event_spawn+0x5b8>
  41a3b0:	ldr	x8, [sp, #88]
  41a3b4:	ldr	x9, [x8, #296]
  41a3b8:	ldr	x1, [x9]
  41a3bc:	adrp	x0, 466000 <on_inotify.__assert_in_set+0x2540>
  41a3c0:	add	x0, x0, #0x250
  41a3c4:	mov	x9, #0xffffffffffffffff    	// #-1
  41a3c8:	mov	x2, x9
  41a3cc:	bl	40af50 <path_join_internal@plt>
  41a3d0:	ldr	x8, [sp, #88]
  41a3d4:	str	x0, [x8, #88]
  41a3d8:	ldr	x9, [x8, #88]
  41a3dc:	cbnz	x9, 41a40c <udev_event_spawn+0x58c>
  41a3e0:	mov	w8, #0x1                   	// #1
  41a3e4:	mov	w0, w8
  41a3e8:	ldr	x1, [sp, #80]
  41a3ec:	mov	w2, #0x2dc                 	// #732
  41a3f0:	ldr	x3, [sp, #72]
  41a3f4:	str	w8, [sp, #44]
  41a3f8:	bl	40a5e0 <log_oom_internal@plt>
  41a3fc:	stur	w0, [x29, #-4]
  41a400:	ldr	w8, [sp, #44]
  41a404:	stur	w8, [x29, #-216]
  41a408:	b	41a958 <udev_event_spawn+0xad8>
  41a40c:	ldr	x8, [sp, #88]
  41a410:	ldr	x9, [x8, #296]
  41a414:	ldr	x0, [x9]
  41a418:	bl	40a530 <free@plt>
  41a41c:	ldr	x8, [sp, #88]
  41a420:	ldr	x9, [x8, #88]
  41a424:	ldr	x10, [x8, #296]
  41a428:	str	x9, [x10]
  41a42c:	mov	x9, xzr
  41a430:	str	x9, [x8, #88]
  41a434:	str	wzr, [sp, #316]
  41a438:	ldr	x8, [sp, #88]
  41a43c:	ldr	x9, [x8, #360]
  41a440:	ldr	x0, [x9]
  41a444:	sub	x1, x29, #0x58
  41a448:	bl	40af60 <device_get_properties_strv@plt>
  41a44c:	stur	w0, [x29, #-184]
  41a450:	ldur	w10, [x29, #-184]
  41a454:	cmp	w10, #0x0
  41a458:	cset	w10, ge  // ge = tcont
  41a45c:	tbnz	w10, #0, 41a538 <udev_event_spawn+0x6b8>
  41a460:	mov	x8, xzr
  41a464:	ldr	x9, [sp, #88]
  41a468:	str	x8, [x9, #72]
  41a46c:	ldr	x8, [x9, #360]
  41a470:	ldr	x8, [x8]
  41a474:	str	x8, [x9, #64]
  41a478:	mov	w10, #0x3                   	// #3
  41a47c:	str	w10, [sp, #292]
  41a480:	ldur	w10, [x29, #-184]
  41a484:	str	w10, [sp, #288]
  41a488:	ldr	x8, [x9, #64]
  41a48c:	cbz	x8, 41a4d0 <udev_event_spawn+0x650>
  41a490:	mov	w0, #0x1                   	// #1
  41a494:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a498:	ldr	w8, [sp, #292]
  41a49c:	cmp	w0, w8
  41a4a0:	cset	w8, ge  // ge = tcont
  41a4a4:	mov	w9, #0x1                   	// #1
  41a4a8:	eor	w8, w8, #0x1
  41a4ac:	eor	w8, w8, w9
  41a4b0:	and	w8, w8, #0x1
  41a4b4:	mov	w1, w8
  41a4b8:	sxtw	x10, w1
  41a4bc:	cbz	x10, 41a4d0 <udev_event_spawn+0x650>
  41a4c0:	ldr	x8, [sp, #88]
  41a4c4:	ldr	x0, [x8, #64]
  41a4c8:	add	x1, sp, #0x130
  41a4cc:	bl	40a860 <sd_device_get_sysname@plt>
  41a4d0:	ldr	w0, [sp, #292]
  41a4d4:	ldr	w1, [sp, #288]
  41a4d8:	ldr	x8, [sp, #88]
  41a4dc:	ldr	x9, [x8, #72]
  41a4e0:	mov	x10, xzr
  41a4e4:	cmp	x9, #0x0
  41a4e8:	ldr	x9, [sp, #64]
  41a4ec:	csel	x5, x9, x10, ne  // ne = any
  41a4f0:	ldr	x6, [x8, #72]
  41a4f4:	ldr	x2, [sp, #80]
  41a4f8:	mov	w3, #0x2e3                 	// #739
  41a4fc:	ldr	x4, [sp, #72]
  41a500:	mov	x7, x10
  41a504:	mov	x11, sp
  41a508:	str	x10, [x11]
  41a50c:	mov	x10, sp
  41a510:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41a514:	add	x11, x11, #0x25a
  41a518:	str	x11, [x10, #8]
  41a51c:	bl	40a870 <log_object_internal@plt>
  41a520:	str	w0, [sp, #284]
  41a524:	ldr	w12, [sp, #284]
  41a528:	stur	w12, [x29, #-4]
  41a52c:	mov	w12, #0x1                   	// #1
  41a530:	stur	w12, [x29, #-216]
  41a534:	b	41a958 <udev_event_spawn+0xad8>
  41a538:	mov	x8, xzr
  41a53c:	ldr	x9, [sp, #88]
  41a540:	str	x8, [x9, #40]
  41a544:	ldr	x8, [x9, #360]
  41a548:	ldr	x8, [x8]
  41a54c:	str	x8, [x9, #32]
  41a550:	mov	w10, #0x7                   	// #7
  41a554:	str	w10, [sp, #260]
  41a558:	str	wzr, [sp, #256]
  41a55c:	ldr	x8, [x9, #32]
  41a560:	cbz	x8, 41a5a4 <udev_event_spawn+0x724>
  41a564:	mov	w0, #0x1                   	// #1
  41a568:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a56c:	ldr	w8, [sp, #260]
  41a570:	cmp	w0, w8
  41a574:	cset	w8, ge  // ge = tcont
  41a578:	mov	w9, #0x1                   	// #1
  41a57c:	eor	w8, w8, #0x1
  41a580:	eor	w8, w8, w9
  41a584:	and	w8, w8, #0x1
  41a588:	mov	w1, w8
  41a58c:	sxtw	x10, w1
  41a590:	cbz	x10, 41a5a4 <udev_event_spawn+0x724>
  41a594:	ldr	x8, [sp, #88]
  41a598:	ldr	x0, [x8, #32]
  41a59c:	add	x1, sp, #0x110
  41a5a0:	bl	40a860 <sd_device_get_sysname@plt>
  41a5a4:	ldr	w0, [sp, #260]
  41a5a8:	ldr	w1, [sp, #256]
  41a5ac:	ldr	x8, [sp, #88]
  41a5b0:	ldr	x9, [x8, #40]
  41a5b4:	mov	x10, xzr
  41a5b8:	cmp	x9, #0x0
  41a5bc:	ldr	x9, [sp, #64]
  41a5c0:	csel	x5, x9, x10, ne  // ne = any
  41a5c4:	ldr	x6, [x8, #40]
  41a5c8:	ldr	x11, [x8, #336]
  41a5cc:	ldr	x2, [sp, #80]
  41a5d0:	mov	w3, #0x2e5                 	// #741
  41a5d4:	ldr	x4, [sp, #72]
  41a5d8:	mov	x7, x10
  41a5dc:	mov	x12, sp
  41a5e0:	str	x10, [x12]
  41a5e4:	mov	x10, sp
  41a5e8:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a5ec:	add	x12, x12, #0x27a
  41a5f0:	str	x12, [x10, #8]
  41a5f4:	mov	x10, sp
  41a5f8:	str	x11, [x10, #16]
  41a5fc:	bl	40a870 <log_object_internal@plt>
  41a600:	str	w0, [sp, #252]
  41a604:	adrp	x0, 466000 <on_inotify.__assert_in_set+0x2540>
  41a608:	add	x0, x0, #0x288
  41a60c:	mov	w1, #0x25                  	// #37
  41a610:	sub	x2, x29, #0xb4
  41a614:	bl	41a9dc <safe_fork>
  41a618:	stur	w0, [x29, #-184]
  41a61c:	ldur	w13, [x29, #-184]
  41a620:	cmp	w13, #0x0
  41a624:	cset	w13, ge  // ge = tcont
  41a628:	tbnz	w13, #0, 41a710 <udev_event_spawn+0x890>
  41a62c:	mov	x8, xzr
  41a630:	ldr	x9, [sp, #88]
  41a634:	str	x8, [x9, #8]
  41a638:	ldr	x8, [x9, #360]
  41a63c:	ldr	x8, [x8]
  41a640:	str	x8, [x9]
  41a644:	mov	w10, #0x3                   	// #3
  41a648:	str	w10, [sp, #228]
  41a64c:	ldur	w10, [x29, #-184]
  41a650:	str	w10, [sp, #224]
  41a654:	ldr	x8, [x9]
  41a658:	cbz	x8, 41a69c <udev_event_spawn+0x81c>
  41a65c:	mov	w0, #0x1                   	// #1
  41a660:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a664:	ldr	w8, [sp, #228]
  41a668:	cmp	w0, w8
  41a66c:	cset	w8, ge  // ge = tcont
  41a670:	mov	w9, #0x1                   	// #1
  41a674:	eor	w8, w8, #0x1
  41a678:	eor	w8, w8, w9
  41a67c:	and	w8, w8, #0x1
  41a680:	mov	w1, w8
  41a684:	sxtw	x10, w1
  41a688:	cbz	x10, 41a69c <udev_event_spawn+0x81c>
  41a68c:	ldr	x8, [sp, #88]
  41a690:	ldr	x0, [x8]
  41a694:	add	x1, sp, #0xf0
  41a698:	bl	40a860 <sd_device_get_sysname@plt>
  41a69c:	ldr	w0, [sp, #228]
  41a6a0:	ldr	w1, [sp, #224]
  41a6a4:	ldr	x8, [sp, #88]
  41a6a8:	ldr	x9, [x8, #8]
  41a6ac:	mov	x10, xzr
  41a6b0:	cmp	x9, #0x0
  41a6b4:	ldr	x9, [sp, #64]
  41a6b8:	csel	x5, x9, x10, ne  // ne = any
  41a6bc:	ldr	x6, [x8, #8]
  41a6c0:	ldr	x11, [x8, #336]
  41a6c4:	ldr	x2, [sp, #80]
  41a6c8:	mov	w3, #0x2ea                 	// #746
  41a6cc:	ldr	x4, [sp, #72]
  41a6d0:	mov	x7, x10
  41a6d4:	mov	x12, sp
  41a6d8:	str	x10, [x12]
  41a6dc:	mov	x10, sp
  41a6e0:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a6e4:	add	x12, x12, #0x290
  41a6e8:	str	x12, [x10, #8]
  41a6ec:	mov	x10, sp
  41a6f0:	str	x11, [x10, #16]
  41a6f4:	bl	40a870 <log_object_internal@plt>
  41a6f8:	str	w0, [sp, #220]
  41a6fc:	ldr	w13, [sp, #220]
  41a700:	stur	w13, [x29, #-4]
  41a704:	mov	w13, #0x1                   	// #1
  41a708:	stur	w13, [x29, #-216]
  41a70c:	b	41a958 <udev_event_spawn+0xad8>
  41a710:	ldur	w8, [x29, #-184]
  41a714:	cbnz	w8, 41a778 <udev_event_spawn+0x8f8>
  41a718:	ldur	w1, [x29, #-60]
  41a71c:	ldur	w2, [x29, #-68]
  41a720:	mov	w0, #0xffffffff            	// #-1
  41a724:	bl	40a640 <rearrange_stdio@plt>
  41a728:	cmp	w0, #0x0
  41a72c:	cset	w8, ge  // ge = tcont
  41a730:	tbnz	w8, #0, 41a73c <udev_event_spawn+0x8bc>
  41a734:	mov	w0, #0x1                   	// #1
  41a738:	bl	40aad0 <_exit@plt>
  41a73c:	mov	x8, xzr
  41a740:	mov	x0, x8
  41a744:	mov	x1, x8
  41a748:	bl	40af70 <close_all_fds@plt>
  41a74c:	bl	40af80 <rlimit_nofile_safe@plt>
  41a750:	ldr	x8, [sp, #88]
  41a754:	ldr	x9, [x8, #296]
  41a758:	ldr	x9, [x9]
  41a75c:	ldr	x1, [x8, #296]
  41a760:	ldr	x2, [x8, #288]
  41a764:	mov	x0, x9
  41a768:	bl	40af90 <execve@plt>
  41a76c:	mov	w10, #0x1                   	// #1
  41a770:	mov	w0, w10
  41a774:	bl	40aad0 <_exit@plt>
  41a778:	ldur	w0, [x29, #-60]
  41a77c:	bl	40a760 <safe_close@plt>
  41a780:	stur	w0, [x29, #-60]
  41a784:	ldur	w0, [x29, #-68]
  41a788:	bl	40a760 <safe_close@plt>
  41a78c:	stur	w0, [x29, #-68]
  41a790:	ldr	x8, [sp, #88]
  41a794:	ldr	x9, [x8, #360]
  41a798:	ldr	x9, [x9]
  41a79c:	add	x10, sp, #0x80
  41a7a0:	str	x9, [sp, #128]
  41a7a4:	ldr	x9, [x8, #336]
  41a7a8:	str	x9, [x10, #8]
  41a7ac:	ldur	w11, [x29, #-180]
  41a7b0:	str	w11, [sp, #144]
  41a7b4:	ldr	x0, [x8, #352]
  41a7b8:	str	x10, [sp, #32]
  41a7bc:	bl	41aa24 <udev_warn_timeout>
  41a7c0:	str	x0, [sp, #152]
  41a7c4:	ldr	x8, [sp, #88]
  41a7c8:	ldr	x9, [x8, #352]
  41a7cc:	str	x9, [sp, #160]
  41a7d0:	ldr	x9, [x8, #360]
  41a7d4:	ldr	x9, [x9, #80]
  41a7d8:	str	x9, [sp, #168]
  41a7dc:	ldurb	w11, [x29, #-25]
  41a7e0:	and	w11, w11, #0x1
  41a7e4:	ldr	x9, [sp, #32]
  41a7e8:	strb	w11, [x9, #48]
  41a7ec:	ldur	w11, [x29, #-64]
  41a7f0:	str	w11, [sp, #180]
  41a7f4:	ldur	w11, [x29, #-72]
  41a7f8:	str	w11, [sp, #184]
  41a7fc:	ldr	x10, [x8, #328]
  41a800:	str	x10, [x9, #64]
  41a804:	ldr	x10, [x8, #320]
  41a808:	str	x10, [sp, #200]
  41a80c:	str	xzr, [sp, #208]
  41a810:	sub	x10, x29, #0xb0
  41a814:	mov	x0, x10
  41a818:	mov	x1, x9
  41a81c:	mov	x2, #0x58                  	// #88
  41a820:	str	x10, [sp, #24]
  41a824:	bl	40a600 <memcpy@plt>
  41a828:	ldr	x0, [sp, #24]
  41a82c:	bl	41aa84 <spawn_wait>
  41a830:	stur	w0, [x29, #-184]
  41a834:	ldur	w11, [x29, #-184]
  41a838:	cmp	w11, #0x0
  41a83c:	cset	w11, ge  // ge = tcont
  41a840:	tbnz	w11, #0, 41a924 <udev_event_spawn+0xaa4>
  41a844:	mov	x8, xzr
  41a848:	str	x8, [sp, #120]
  41a84c:	ldr	x8, [sp, #88]
  41a850:	ldr	x9, [x8, #360]
  41a854:	ldr	x9, [x9]
  41a858:	str	x9, [sp, #112]
  41a85c:	mov	w10, #0x3                   	// #3
  41a860:	str	w10, [sp, #108]
  41a864:	ldur	w10, [x29, #-184]
  41a868:	str	w10, [sp, #104]
  41a86c:	ldr	x9, [sp, #112]
  41a870:	cbz	x9, 41a8b0 <udev_event_spawn+0xa30>
  41a874:	mov	w0, #0x1                   	// #1
  41a878:	bl	40a3f0 <log_get_max_level_realm@plt>
  41a87c:	ldr	w8, [sp, #108]
  41a880:	cmp	w0, w8
  41a884:	cset	w8, ge  // ge = tcont
  41a888:	mov	w9, #0x1                   	// #1
  41a88c:	eor	w8, w8, #0x1
  41a890:	eor	w8, w8, w9
  41a894:	and	w8, w8, #0x1
  41a898:	mov	w1, w8
  41a89c:	sxtw	x10, w1
  41a8a0:	cbz	x10, 41a8b0 <udev_event_spawn+0xa30>
  41a8a4:	ldr	x0, [sp, #112]
  41a8a8:	add	x1, sp, #0x78
  41a8ac:	bl	40a860 <sd_device_get_sysname@plt>
  41a8b0:	ldr	w0, [sp, #108]
  41a8b4:	ldr	w1, [sp, #104]
  41a8b8:	ldr	x8, [sp, #120]
  41a8bc:	mov	x9, xzr
  41a8c0:	cmp	x8, #0x0
  41a8c4:	ldr	x8, [sp, #64]
  41a8c8:	csel	x5, x8, x9, ne  // ne = any
  41a8cc:	ldr	x6, [sp, #120]
  41a8d0:	ldr	x10, [sp, #88]
  41a8d4:	ldr	x11, [x10, #336]
  41a8d8:	ldr	x2, [sp, #80]
  41a8dc:	mov	w3, #0x30a                 	// #778
  41a8e0:	ldr	x4, [sp, #72]
  41a8e4:	mov	x7, x9
  41a8e8:	mov	x12, sp
  41a8ec:	str	x9, [x12]
  41a8f0:	mov	x9, sp
  41a8f4:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41a8f8:	add	x12, x12, #0x2bd
  41a8fc:	str	x12, [x9, #8]
  41a900:	mov	x9, sp
  41a904:	str	x11, [x9, #16]
  41a908:	bl	40a870 <log_object_internal@plt>
  41a90c:	str	w0, [sp, #100]
  41a910:	ldr	w13, [sp, #100]
  41a914:	stur	w13, [x29, #-4]
  41a918:	mov	w13, #0x1                   	// #1
  41a91c:	stur	w13, [x29, #-216]
  41a920:	b	41a958 <udev_event_spawn+0xad8>
  41a924:	ldr	x8, [sp, #88]
  41a928:	ldr	x9, [x8, #328]
  41a92c:	cbz	x9, 41a948 <udev_event_spawn+0xac8>
  41a930:	ldr	x8, [sp, #88]
  41a934:	ldr	x9, [x8, #328]
  41a938:	ldr	x10, [x8, #280]
  41a93c:	add	x9, x9, x10
  41a940:	mov	w11, #0x0                   	// #0
  41a944:	strb	w11, [x9]
  41a948:	ldur	w8, [x29, #-184]
  41a94c:	stur	w8, [x29, #-4]
  41a950:	mov	w8, #0x1                   	// #1
  41a954:	stur	w8, [x29, #-216]
  41a958:	sub	x0, x29, #0x50
  41a95c:	bl	41a9a8 <strv_freep>
  41a960:	sub	x0, x29, #0x48
  41a964:	bl	41a984 <close_pairp>
  41a968:	sub	x0, x29, #0x40
  41a96c:	bl	41a984 <close_pairp>
  41a970:	ldur	w0, [x29, #-4]
  41a974:	add	sp, sp, #0x260
  41a978:	ldr	x28, [sp, #16]
  41a97c:	ldp	x29, x30, [sp], #32
  41a980:	ret

000000000041a984 <close_pairp>:
  41a984:	sub	sp, sp, #0x20
  41a988:	stp	x29, x30, [sp, #16]
  41a98c:	add	x29, sp, #0x10
  41a990:	str	x0, [sp, #8]
  41a994:	ldr	x0, [sp, #8]
  41a998:	bl	40a770 <safe_close_pair@plt>
  41a99c:	ldp	x29, x30, [sp, #16]
  41a9a0:	add	sp, sp, #0x20
  41a9a4:	ret

000000000041a9a8 <strv_freep>:
  41a9a8:	sub	sp, sp, #0x20
  41a9ac:	stp	x29, x30, [sp, #16]
  41a9b0:	add	x29, sp, #0x10
  41a9b4:	str	x0, [sp, #8]
  41a9b8:	ldr	x8, [sp, #8]
  41a9bc:	ldr	x8, [x8]
  41a9c0:	cbz	x8, 41a9d0 <strv_freep+0x28>
  41a9c4:	ldr	x8, [sp, #8]
  41a9c8:	ldr	x0, [x8]
  41a9cc:	bl	40afa0 <strv_free@plt>
  41a9d0:	ldp	x29, x30, [sp, #16]
  41a9d4:	add	sp, sp, #0x20
  41a9d8:	ret

000000000041a9dc <safe_fork>:
  41a9dc:	sub	sp, sp, #0x30
  41a9e0:	stp	x29, x30, [sp, #32]
  41a9e4:	add	x29, sp, #0x20
  41a9e8:	mov	x8, xzr
  41a9ec:	mov	x3, x8
  41a9f0:	stur	x0, [x29, #-8]
  41a9f4:	stur	w1, [x29, #-12]
  41a9f8:	str	x2, [sp, #8]
  41a9fc:	ldur	x0, [x29, #-8]
  41aa00:	ldur	w9, [x29, #-12]
  41aa04:	ldr	x4, [sp, #8]
  41aa08:	mov	x1, x3
  41aa0c:	mov	x2, x8
  41aa10:	mov	w3, w9
  41aa14:	bl	40aaf0 <safe_fork_full@plt>
  41aa18:	ldp	x29, x30, [sp, #32]
  41aa1c:	add	sp, sp, #0x30
  41aa20:	ret

000000000041aa24 <udev_warn_timeout>:
  41aa24:	sub	sp, sp, #0x20
  41aa28:	mov	w8, #0x3                   	// #3
  41aa2c:	mov	x9, #0x3                   	// #3
  41aa30:	str	x0, [sp, #24]
  41aa34:	ldr	x10, [sp, #24]
  41aa38:	str	x10, [sp, #16]
  41aa3c:	str	w8, [sp, #12]
  41aa40:	ldr	x10, [sp, #16]
  41aa44:	udiv	x10, x10, x9
  41aa48:	ldr	x11, [sp, #16]
  41aa4c:	udiv	x12, x11, x9
  41aa50:	mul	x9, x12, x9
  41aa54:	subs	x9, x11, x9
  41aa58:	cmp	x9, #0x0
  41aa5c:	cset	w8, ne  // ne = any
  41aa60:	mov	w13, #0x1                   	// #1
  41aa64:	eor	w8, w8, #0x1
  41aa68:	eor	w8, w8, w13
  41aa6c:	and	w8, w8, #0x1
  41aa70:	add	x9, x10, w8, sxtw
  41aa74:	str	x9, [sp]
  41aa78:	ldr	x0, [sp]
  41aa7c:	add	sp, sp, #0x20
  41aa80:	ret

000000000041aa84 <spawn_wait>:
  41aa84:	sub	sp, sp, #0x50
  41aa88:	stp	x29, x30, [sp, #64]
  41aa8c:	add	x29, sp, #0x40
  41aa90:	mov	x8, xzr
  41aa94:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  41aa98:	add	x9, x9, #0xff0
  41aa9c:	add	x2, x9, #0x3
  41aaa0:	stur	x0, [x29, #-16]
  41aaa4:	stur	x8, [x29, #-24]
  41aaa8:	str	x2, [sp, #8]
  41aaac:	ldur	x8, [x29, #-16]
  41aab0:	cmp	x8, #0x0
  41aab4:	cset	w9, ne  // ne = any
  41aab8:	mov	w10, #0x1                   	// #1
  41aabc:	eor	w9, w9, #0x1
  41aac0:	eor	w9, w9, w10
  41aac4:	eor	w9, w9, w10
  41aac8:	and	w9, w9, #0x1
  41aacc:	mov	w0, w9
  41aad0:	sxtw	x8, w0
  41aad4:	cbz	x8, 41aaf8 <spawn_wait+0x74>
  41aad8:	mov	w0, #0x1                   	// #1
  41aadc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41aae0:	add	x1, x1, #0x6ec
  41aae4:	ldr	x2, [sp, #8]
  41aae8:	mov	w3, #0x27f                 	// #639
  41aaec:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41aaf0:	add	x4, x4, #0x6f2
  41aaf4:	bl	40a540 <log_assert_failed_realm@plt>
  41aaf8:	sub	x0, x29, #0x18
  41aafc:	bl	40ab10 <sd_event_new@plt>
  41ab00:	stur	w0, [x29, #-28]
  41ab04:	ldur	w8, [x29, #-28]
  41ab08:	cmp	w8, #0x0
  41ab0c:	cset	w8, ge  // ge = tcont
  41ab10:	tbnz	w8, #0, 41ab28 <spawn_wait+0xa4>
  41ab14:	ldur	w8, [x29, #-28]
  41ab18:	stur	w8, [x29, #-4]
  41ab1c:	mov	w8, #0x1                   	// #1
  41ab20:	str	w8, [sp, #32]
  41ab24:	b	41adc4 <spawn_wait+0x340>
  41ab28:	ldur	x8, [x29, #-16]
  41ab2c:	ldr	x8, [x8, #32]
  41ab30:	cmp	x8, #0x0
  41ab34:	cset	w9, ls  // ls = plast
  41ab38:	tbnz	w9, #0, 41ac98 <spawn_wait+0x214>
  41ab3c:	mov	w0, #0x1                   	// #1
  41ab40:	bl	40a970 <now@plt>
  41ab44:	str	x0, [sp, #24]
  41ab48:	ldr	x8, [sp, #24]
  41ab4c:	ldur	x9, [x29, #-16]
  41ab50:	ldr	x9, [x9, #40]
  41ab54:	subs	x8, x8, x9
  41ab58:	str	x8, [sp, #16]
  41ab5c:	ldr	x8, [sp, #16]
  41ab60:	ldur	x9, [x29, #-16]
  41ab64:	ldr	x9, [x9, #32]
  41ab68:	cmp	x8, x9
  41ab6c:	b.cs	41ac98 <spawn_wait+0x214>  // b.hs, b.nlast
  41ab70:	ldur	x8, [x29, #-16]
  41ab74:	ldr	x8, [x8, #24]
  41ab78:	cmp	x8, #0x0
  41ab7c:	cset	w9, ls  // ls = plast
  41ab80:	tbnz	w9, #0, 41ac24 <spawn_wait+0x1a0>
  41ab84:	ldur	x8, [x29, #-16]
  41ab88:	ldr	x8, [x8, #24]
  41ab8c:	ldur	x9, [x29, #-16]
  41ab90:	ldr	x9, [x9, #32]
  41ab94:	cmp	x8, x9
  41ab98:	b.cs	41ac24 <spawn_wait+0x1a0>  // b.hs, b.nlast
  41ab9c:	ldur	x8, [x29, #-16]
  41aba0:	ldr	x8, [x8, #24]
  41aba4:	ldr	x9, [sp, #16]
  41aba8:	cmp	x8, x9
  41abac:	b.ls	41ac24 <spawn_wait+0x1a0>  // b.plast
  41abb0:	ldr	x8, [sp, #16]
  41abb4:	ldur	x9, [x29, #-16]
  41abb8:	ldr	x10, [x9, #24]
  41abbc:	subs	x8, x10, x8
  41abc0:	str	x8, [x9, #24]
  41abc4:	ldur	x0, [x29, #-24]
  41abc8:	ldr	x8, [sp, #24]
  41abcc:	ldur	x9, [x29, #-16]
  41abd0:	ldr	x9, [x9, #24]
  41abd4:	add	x3, x8, x9
  41abd8:	ldur	x6, [x29, #-16]
  41abdc:	mov	x8, xzr
  41abe0:	mov	x1, x8
  41abe4:	mov	w2, #0x1                   	// #1
  41abe8:	mov	x4, #0x4240                	// #16960
  41abec:	movk	x4, #0xf, lsl #16
  41abf0:	adrp	x5, 41d000 <startswith+0x38>
  41abf4:	add	x5, x5, #0xfc
  41abf8:	bl	40aa80 <sd_event_add_time@plt>
  41abfc:	stur	w0, [x29, #-28]
  41ac00:	ldur	w11, [x29, #-28]
  41ac04:	cmp	w11, #0x0
  41ac08:	cset	w11, ge  // ge = tcont
  41ac0c:	tbnz	w11, #0, 41ac24 <spawn_wait+0x1a0>
  41ac10:	ldur	w8, [x29, #-28]
  41ac14:	stur	w8, [x29, #-4]
  41ac18:	mov	w8, #0x1                   	// #1
  41ac1c:	str	w8, [sp, #32]
  41ac20:	b	41adc4 <spawn_wait+0x340>
  41ac24:	ldr	x8, [sp, #16]
  41ac28:	ldur	x9, [x29, #-16]
  41ac2c:	ldr	x10, [x9, #32]
  41ac30:	subs	x8, x10, x8
  41ac34:	str	x8, [x9, #32]
  41ac38:	ldur	x0, [x29, #-24]
  41ac3c:	ldr	x8, [sp, #24]
  41ac40:	ldur	x9, [x29, #-16]
  41ac44:	ldr	x9, [x9, #32]
  41ac48:	add	x3, x8, x9
  41ac4c:	ldur	x6, [x29, #-16]
  41ac50:	mov	x8, xzr
  41ac54:	mov	x1, x8
  41ac58:	mov	w2, #0x1                   	// #1
  41ac5c:	mov	x4, #0x4240                	// #16960
  41ac60:	movk	x4, #0xf, lsl #16
  41ac64:	adrp	x5, 41d000 <startswith+0x38>
  41ac68:	add	x5, x5, #0x2d4
  41ac6c:	bl	40aa80 <sd_event_add_time@plt>
  41ac70:	stur	w0, [x29, #-28]
  41ac74:	ldur	w11, [x29, #-28]
  41ac78:	cmp	w11, #0x0
  41ac7c:	cset	w11, ge  // ge = tcont
  41ac80:	tbnz	w11, #0, 41ac98 <spawn_wait+0x214>
  41ac84:	ldur	w8, [x29, #-28]
  41ac88:	stur	w8, [x29, #-4]
  41ac8c:	mov	w8, #0x1                   	// #1
  41ac90:	str	w8, [sp, #32]
  41ac94:	b	41adc4 <spawn_wait+0x340>
  41ac98:	ldur	x8, [x29, #-16]
  41ac9c:	ldr	w9, [x8, #52]
  41aca0:	cmp	w9, #0x0
  41aca4:	cset	w9, lt  // lt = tstop
  41aca8:	tbnz	w9, #0, 41acfc <spawn_wait+0x278>
  41acac:	ldur	x0, [x29, #-24]
  41acb0:	ldur	x8, [x29, #-16]
  41acb4:	ldr	w2, [x8, #52]
  41acb8:	ldur	x5, [x29, #-16]
  41acbc:	mov	x8, xzr
  41acc0:	mov	x1, x8
  41acc4:	mov	w3, #0x1                   	// #1
  41acc8:	adrp	x4, 41d000 <startswith+0x38>
  41accc:	add	x4, x4, #0x4bc
  41acd0:	bl	40a6c0 <sd_event_add_io@plt>
  41acd4:	stur	w0, [x29, #-28]
  41acd8:	ldur	w9, [x29, #-28]
  41acdc:	cmp	w9, #0x0
  41ace0:	cset	w9, ge  // ge = tcont
  41ace4:	tbnz	w9, #0, 41acfc <spawn_wait+0x278>
  41ace8:	ldur	w8, [x29, #-28]
  41acec:	stur	w8, [x29, #-4]
  41acf0:	mov	w8, #0x1                   	// #1
  41acf4:	str	w8, [sp, #32]
  41acf8:	b	41adc4 <spawn_wait+0x340>
  41acfc:	ldur	x8, [x29, #-16]
  41ad00:	ldr	w9, [x8, #56]
  41ad04:	cmp	w9, #0x0
  41ad08:	cset	w9, lt  // lt = tstop
  41ad0c:	tbnz	w9, #0, 41ad60 <spawn_wait+0x2dc>
  41ad10:	ldur	x0, [x29, #-24]
  41ad14:	ldur	x8, [x29, #-16]
  41ad18:	ldr	w2, [x8, #56]
  41ad1c:	ldur	x5, [x29, #-16]
  41ad20:	mov	x8, xzr
  41ad24:	mov	x1, x8
  41ad28:	mov	w3, #0x1                   	// #1
  41ad2c:	adrp	x4, 41d000 <startswith+0x38>
  41ad30:	add	x4, x4, #0x4bc
  41ad34:	bl	40a6c0 <sd_event_add_io@plt>
  41ad38:	stur	w0, [x29, #-28]
  41ad3c:	ldur	w9, [x29, #-28]
  41ad40:	cmp	w9, #0x0
  41ad44:	cset	w9, ge  // ge = tcont
  41ad48:	tbnz	w9, #0, 41ad60 <spawn_wait+0x2dc>
  41ad4c:	ldur	w8, [x29, #-28]
  41ad50:	stur	w8, [x29, #-4]
  41ad54:	mov	w8, #0x1                   	// #1
  41ad58:	str	w8, [sp, #32]
  41ad5c:	b	41adc4 <spawn_wait+0x340>
  41ad60:	ldur	x0, [x29, #-24]
  41ad64:	ldur	x8, [x29, #-16]
  41ad68:	ldr	w2, [x8, #16]
  41ad6c:	ldur	x5, [x29, #-16]
  41ad70:	mov	x8, xzr
  41ad74:	mov	x1, x8
  41ad78:	mov	w3, #0x4                   	// #4
  41ad7c:	adrp	x4, 41d000 <startswith+0x38>
  41ad80:	add	x4, x4, #0xa10
  41ad84:	bl	40afb0 <sd_event_add_child@plt>
  41ad88:	stur	w0, [x29, #-28]
  41ad8c:	ldur	w9, [x29, #-28]
  41ad90:	cmp	w9, #0x0
  41ad94:	cset	w9, ge  // ge = tcont
  41ad98:	tbnz	w9, #0, 41adb0 <spawn_wait+0x32c>
  41ad9c:	ldur	w8, [x29, #-28]
  41ada0:	stur	w8, [x29, #-4]
  41ada4:	mov	w8, #0x1                   	// #1
  41ada8:	str	w8, [sp, #32]
  41adac:	b	41adc4 <spawn_wait+0x340>
  41adb0:	ldur	x0, [x29, #-24]
  41adb4:	bl	40a730 <sd_event_loop@plt>
  41adb8:	stur	w0, [x29, #-4]
  41adbc:	mov	w8, #0x1                   	// #1
  41adc0:	str	w8, [sp, #32]
  41adc4:	sub	x0, x29, #0x18
  41adc8:	bl	41d0c8 <sd_event_unrefp>
  41adcc:	ldur	w0, [x29, #-4]
  41add0:	ldp	x29, x30, [sp, #64]
  41add4:	add	sp, sp, #0x50
  41add8:	ret

000000000041addc <udev_event_execute_rules>:
  41addc:	sub	sp, sp, #0x180
  41ade0:	stp	x29, x30, [sp, #352]
  41ade4:	str	x28, [sp, #368]
  41ade8:	add	x29, sp, #0x160
  41adec:	sub	x8, x29, #0x98
  41adf0:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  41adf4:	add	x9, x9, #0xa46
  41adf8:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  41adfc:	add	x10, x10, #0xff0
  41ae00:	add	x10, x10, #0x3
  41ae04:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41ae08:	add	x11, x11, #0x339
  41ae0c:	str	x0, [x8, #136]
  41ae10:	str	x1, [x8, #128]
  41ae14:	str	x2, [x8, #120]
  41ae18:	str	x3, [x8, #112]
  41ae1c:	str	x8, [sp, #48]
  41ae20:	str	x9, [sp, #40]
  41ae24:	str	x10, [sp, #32]
  41ae28:	str	x11, [sp, #24]
  41ae2c:	ldr	x8, [sp, #48]
  41ae30:	ldr	x9, [x8, #136]
  41ae34:	cmp	x9, #0x0
  41ae38:	cset	w10, ne  // ne = any
  41ae3c:	mov	w11, #0x1                   	// #1
  41ae40:	eor	w10, w10, #0x1
  41ae44:	eor	w10, w10, w11
  41ae48:	eor	w10, w10, w11
  41ae4c:	and	w10, w10, #0x1
  41ae50:	mov	w0, w10
  41ae54:	sxtw	x9, w0
  41ae58:	cbz	x9, 41ae7c <udev_event_execute_rules+0xa0>
  41ae5c:	mov	w0, #0x1                   	// #1
  41ae60:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41ae64:	add	x1, x1, #0xbb0
  41ae68:	ldr	x2, [sp, #32]
  41ae6c:	mov	w3, #0x39f                 	// #927
  41ae70:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41ae74:	add	x4, x4, #0x2e9
  41ae78:	bl	40a540 <log_assert_failed_realm@plt>
  41ae7c:	ldr	x8, [sp, #48]
  41ae80:	ldr	x9, [x8, #112]
  41ae84:	cmp	x9, #0x0
  41ae88:	cset	w10, ne  // ne = any
  41ae8c:	mov	w11, #0x1                   	// #1
  41ae90:	eor	w10, w10, #0x1
  41ae94:	eor	w10, w10, w11
  41ae98:	eor	w10, w10, w11
  41ae9c:	and	w10, w10, #0x1
  41aea0:	mov	w0, w10
  41aea4:	sxtw	x9, w0
  41aea8:	cbz	x9, 41aecc <udev_event_execute_rules+0xf0>
  41aeac:	mov	w0, #0x1                   	// #1
  41aeb0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41aeb4:	add	x1, x1, #0x333
  41aeb8:	ldr	x2, [sp, #32]
  41aebc:	mov	w3, #0x3a0                 	// #928
  41aec0:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41aec4:	add	x4, x4, #0x2e9
  41aec8:	bl	40a540 <log_assert_failed_realm@plt>
  41aecc:	ldr	x8, [sp, #48]
  41aed0:	ldr	x9, [x8, #136]
  41aed4:	ldr	x9, [x9]
  41aed8:	str	x9, [x8, #88]
  41aedc:	ldr	x0, [x8, #88]
  41aee0:	sub	x1, x29, #0x30
  41aee4:	bl	40aa10 <sd_device_get_subsystem@plt>
  41aee8:	stur	w0, [x29, #-68]
  41aeec:	ldur	w10, [x29, #-68]
  41aef0:	cmp	w10, #0x0
  41aef4:	cset	w10, ge  // ge = tcont
  41aef8:	tbnz	w10, #0, 41afc8 <udev_event_execute_rules+0x1ec>
  41aefc:	mov	x8, xzr
  41af00:	ldr	x9, [sp, #48]
  41af04:	str	x8, [x9, #72]
  41af08:	ldr	x8, [x9, #88]
  41af0c:	str	x8, [x9, #64]
  41af10:	mov	w10, #0x3                   	// #3
  41af14:	stur	w10, [x29, #-92]
  41af18:	ldur	w10, [x29, #-68]
  41af1c:	stur	w10, [x29, #-96]
  41af20:	ldr	x8, [x9, #64]
  41af24:	cbz	x8, 41af68 <udev_event_execute_rules+0x18c>
  41af28:	mov	w0, #0x1                   	// #1
  41af2c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41af30:	ldur	w8, [x29, #-92]
  41af34:	cmp	w0, w8
  41af38:	cset	w8, ge  // ge = tcont
  41af3c:	mov	w9, #0x1                   	// #1
  41af40:	eor	w8, w8, #0x1
  41af44:	eor	w8, w8, w9
  41af48:	and	w8, w8, #0x1
  41af4c:	mov	w1, w8
  41af50:	sxtw	x10, w1
  41af54:	cbz	x10, 41af68 <udev_event_execute_rules+0x18c>
  41af58:	ldr	x8, [sp, #48]
  41af5c:	ldr	x0, [x8, #64]
  41af60:	sub	x1, x29, #0x50
  41af64:	bl	40a860 <sd_device_get_sysname@plt>
  41af68:	ldur	w0, [x29, #-92]
  41af6c:	ldur	w1, [x29, #-96]
  41af70:	ldr	x8, [sp, #48]
  41af74:	ldr	x9, [x8, #72]
  41af78:	mov	x10, xzr
  41af7c:	cmp	x9, #0x0
  41af80:	ldr	x9, [sp, #40]
  41af84:	csel	x5, x9, x10, ne  // ne = any
  41af88:	ldr	x6, [x8, #72]
  41af8c:	ldr	x2, [sp, #32]
  41af90:	mov	w3, #0x3a6                 	// #934
  41af94:	ldr	x4, [sp, #24]
  41af98:	mov	x7, x10
  41af9c:	mov	x11, sp
  41afa0:	str	x10, [x11]
  41afa4:	mov	x10, sp
  41afa8:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41afac:	add	x11, x11, #0x1fd
  41afb0:	str	x11, [x10, #8]
  41afb4:	bl	40a870 <log_object_internal@plt>
  41afb8:	stur	w0, [x29, #-100]
  41afbc:	ldur	w12, [x29, #-100]
  41afc0:	stur	w12, [x29, #-4]
  41afc4:	b	41b688 <udev_event_execute_rules+0x8ac>
  41afc8:	ldr	x8, [sp, #48]
  41afcc:	ldr	x0, [x8, #88]
  41afd0:	sub	x1, x29, #0x34
  41afd4:	bl	40ab50 <device_get_action@plt>
  41afd8:	stur	w0, [x29, #-68]
  41afdc:	ldur	w9, [x29, #-68]
  41afe0:	cmp	w9, #0x0
  41afe4:	cset	w9, ge  // ge = tcont
  41afe8:	tbnz	w9, #0, 41b0b8 <udev_event_execute_rules+0x2dc>
  41afec:	mov	x8, xzr
  41aff0:	ldr	x9, [sp, #48]
  41aff4:	str	x8, [x9, #40]
  41aff8:	ldr	x8, [x9, #88]
  41affc:	str	x8, [x9, #32]
  41b000:	mov	w10, #0x3                   	// #3
  41b004:	stur	w10, [x29, #-124]
  41b008:	ldur	w10, [x29, #-68]
  41b00c:	stur	w10, [x29, #-128]
  41b010:	ldr	x8, [x9, #32]
  41b014:	cbz	x8, 41b058 <udev_event_execute_rules+0x27c>
  41b018:	mov	w0, #0x1                   	// #1
  41b01c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b020:	ldur	w8, [x29, #-124]
  41b024:	cmp	w0, w8
  41b028:	cset	w8, ge  // ge = tcont
  41b02c:	mov	w9, #0x1                   	// #1
  41b030:	eor	w8, w8, #0x1
  41b034:	eor	w8, w8, w9
  41b038:	and	w8, w8, #0x1
  41b03c:	mov	w1, w8
  41b040:	sxtw	x10, w1
  41b044:	cbz	x10, 41b058 <udev_event_execute_rules+0x27c>
  41b048:	ldr	x8, [sp, #48]
  41b04c:	ldr	x0, [x8, #32]
  41b050:	sub	x1, x29, #0x70
  41b054:	bl	40a860 <sd_device_get_sysname@plt>
  41b058:	ldur	w0, [x29, #-124]
  41b05c:	ldur	w1, [x29, #-128]
  41b060:	ldr	x8, [sp, #48]
  41b064:	ldr	x9, [x8, #40]
  41b068:	mov	x10, xzr
  41b06c:	cmp	x9, #0x0
  41b070:	ldr	x9, [sp, #40]
  41b074:	csel	x5, x9, x10, ne  // ne = any
  41b078:	ldr	x6, [x8, #40]
  41b07c:	ldr	x2, [sp, #32]
  41b080:	mov	w3, #0x3aa                 	// #938
  41b084:	ldr	x4, [sp, #24]
  41b088:	mov	x7, x10
  41b08c:	mov	x11, sp
  41b090:	str	x10, [x11]
  41b094:	mov	x10, sp
  41b098:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41b09c:	add	x11, x11, #0x10c
  41b0a0:	str	x11, [x10, #8]
  41b0a4:	bl	40a870 <log_object_internal@plt>
  41b0a8:	stur	w0, [x29, #-132]
  41b0ac:	ldur	w12, [x29, #-132]
  41b0b0:	stur	w12, [x29, #-4]
  41b0b4:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b0b8:	ldur	w8, [x29, #-52]
  41b0bc:	cmp	w8, #0x1
  41b0c0:	b.ne	41b0e4 <udev_event_execute_rules+0x308>  // b.any
  41b0c4:	ldr	x8, [sp, #48]
  41b0c8:	ldr	x0, [x8, #136]
  41b0cc:	ldr	x1, [x8, #128]
  41b0d0:	ldr	x2, [x8, #120]
  41b0d4:	ldr	x3, [x8, #112]
  41b0d8:	bl	41b69c <event_execute_rules_on_remove>
  41b0dc:	stur	wzr, [x29, #-4]
  41b0e0:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b0e4:	ldr	x8, [sp, #48]
  41b0e8:	ldr	x0, [x8, #88]
  41b0ec:	ldr	x9, [x8, #136]
  41b0f0:	add	x1, x9, #0x10
  41b0f4:	bl	40afc0 <device_clone_with_db@plt>
  41b0f8:	stur	w0, [x29, #-68]
  41b0fc:	ldur	w10, [x29, #-68]
  41b100:	cmp	w10, #0x0
  41b104:	cset	w10, ge  // ge = tcont
  41b108:	tbnz	w10, #0, 41b1d8 <udev_event_execute_rules+0x3fc>
  41b10c:	mov	x8, xzr
  41b110:	ldr	x9, [sp, #48]
  41b114:	str	x8, [x9, #8]
  41b118:	ldr	x8, [x9, #88]
  41b11c:	str	x8, [x9]
  41b120:	mov	w10, #0x7                   	// #7
  41b124:	stur	w10, [x29, #-156]
  41b128:	ldur	w10, [x29, #-68]
  41b12c:	stur	w10, [x29, #-160]
  41b130:	ldr	x8, [x9]
  41b134:	cbz	x8, 41b178 <udev_event_execute_rules+0x39c>
  41b138:	mov	w0, #0x1                   	// #1
  41b13c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b140:	ldur	w8, [x29, #-156]
  41b144:	cmp	w0, w8
  41b148:	cset	w8, ge  // ge = tcont
  41b14c:	mov	w9, #0x1                   	// #1
  41b150:	eor	w8, w8, #0x1
  41b154:	eor	w8, w8, w9
  41b158:	and	w8, w8, #0x1
  41b15c:	mov	w1, w8
  41b160:	sxtw	x10, w1
  41b164:	cbz	x10, 41b178 <udev_event_execute_rules+0x39c>
  41b168:	ldr	x8, [sp, #48]
  41b16c:	ldr	x0, [x8]
  41b170:	sub	x1, x29, #0x90
  41b174:	bl	40a860 <sd_device_get_sysname@plt>
  41b178:	ldur	w0, [x29, #-156]
  41b17c:	ldur	w1, [x29, #-160]
  41b180:	ldr	x8, [sp, #48]
  41b184:	ldr	x9, [x8, #8]
  41b188:	mov	x10, xzr
  41b18c:	cmp	x9, #0x0
  41b190:	ldr	x9, [sp, #40]
  41b194:	csel	x5, x9, x10, ne  // ne = any
  41b198:	ldr	x6, [x8, #8]
  41b19c:	ldr	x2, [sp, #32]
  41b1a0:	mov	w3, #0x3b3                 	// #947
  41b1a4:	ldr	x4, [sp, #24]
  41b1a8:	mov	x7, x10
  41b1ac:	mov	x11, sp
  41b1b0:	str	x10, [x11]
  41b1b4:	mov	x10, sp
  41b1b8:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41b1bc:	add	x11, x11, #0x352
  41b1c0:	str	x11, [x10, #8]
  41b1c4:	bl	40a870 <log_object_internal@plt>
  41b1c8:	stur	w0, [x29, #-164]
  41b1cc:	ldur	w12, [x29, #-164]
  41b1d0:	stur	w12, [x29, #-4]
  41b1d4:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b1d8:	ldr	x8, [sp, #48]
  41b1dc:	ldr	x9, [x8, #136]
  41b1e0:	ldr	x9, [x9, #16]
  41b1e4:	cbz	x9, 41b218 <udev_event_execute_rules+0x43c>
  41b1e8:	ldr	x8, [sp, #48]
  41b1ec:	ldr	x0, [x8, #88]
  41b1f0:	mov	x9, xzr
  41b1f4:	mov	x1, x9
  41b1f8:	bl	40aa50 <sd_device_get_devnum@plt>
  41b1fc:	cmp	w0, #0x0
  41b200:	cset	w10, lt  // lt = tstop
  41b204:	tbnz	w10, #0, 41b218 <udev_event_execute_rules+0x43c>
  41b208:	ldr	x8, [sp, #48]
  41b20c:	ldr	x9, [x8, #136]
  41b210:	ldr	x0, [x9, #16]
  41b214:	bl	43db08 <udev_watch_end>
  41b218:	ldur	w8, [x29, #-52]
  41b21c:	cmp	w8, #0x3
  41b220:	b.ne	41b250 <udev_event_execute_rules+0x474>  // b.any
  41b224:	ldr	x8, [sp, #48]
  41b228:	ldr	x0, [x8, #136]
  41b22c:	bl	41b9ec <udev_event_on_move>
  41b230:	stur	w0, [x29, #-68]
  41b234:	ldur	w9, [x29, #-68]
  41b238:	cmp	w9, #0x0
  41b23c:	cset	w9, ge  // ge = tcont
  41b240:	tbnz	w9, #0, 41b250 <udev_event_execute_rules+0x474>
  41b244:	ldur	w8, [x29, #-68]
  41b248:	stur	w8, [x29, #-4]
  41b24c:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b250:	ldr	x8, [sp, #48]
  41b254:	ldr	x0, [x8, #112]
  41b258:	ldr	x1, [x8, #136]
  41b25c:	ldr	x2, [x8, #128]
  41b260:	ldr	x3, [x8, #120]
  41b264:	bl	4226d8 <udev_rules_apply_to_event>
  41b268:	stur	w0, [x29, #-68]
  41b26c:	ldur	w9, [x29, #-68]
  41b270:	cmp	w9, #0x0
  41b274:	cset	w9, ge  // ge = tcont
  41b278:	tbnz	w9, #0, 41b340 <udev_event_execute_rules+0x564>
  41b27c:	mov	x8, xzr
  41b280:	str	x8, [sp, #176]
  41b284:	ldr	x8, [sp, #48]
  41b288:	ldr	x9, [x8, #88]
  41b28c:	str	x9, [sp, #168]
  41b290:	mov	w10, #0x7                   	// #7
  41b294:	str	w10, [sp, #164]
  41b298:	ldur	w10, [x29, #-68]
  41b29c:	str	w10, [sp, #160]
  41b2a0:	ldr	x9, [sp, #168]
  41b2a4:	cbz	x9, 41b2e4 <udev_event_execute_rules+0x508>
  41b2a8:	mov	w0, #0x1                   	// #1
  41b2ac:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b2b0:	ldr	w8, [sp, #164]
  41b2b4:	cmp	w0, w8
  41b2b8:	cset	w8, ge  // ge = tcont
  41b2bc:	mov	w9, #0x1                   	// #1
  41b2c0:	eor	w8, w8, #0x1
  41b2c4:	eor	w8, w8, w9
  41b2c8:	and	w8, w8, #0x1
  41b2cc:	mov	w1, w8
  41b2d0:	sxtw	x10, w1
  41b2d4:	cbz	x10, 41b2e4 <udev_event_execute_rules+0x508>
  41b2d8:	ldr	x0, [sp, #168]
  41b2dc:	add	x1, sp, #0xb0
  41b2e0:	bl	40a860 <sd_device_get_sysname@plt>
  41b2e4:	ldr	w0, [sp, #164]
  41b2e8:	ldr	w1, [sp, #160]
  41b2ec:	ldr	x8, [sp, #176]
  41b2f0:	mov	x9, xzr
  41b2f4:	cmp	x8, #0x0
  41b2f8:	ldr	x8, [sp, #40]
  41b2fc:	csel	x5, x8, x9, ne  // ne = any
  41b300:	ldr	x6, [sp, #176]
  41b304:	ldr	x2, [sp, #32]
  41b308:	mov	w3, #0x3c1                 	// #961
  41b30c:	ldr	x4, [sp, #24]
  41b310:	mov	x7, x9
  41b314:	mov	x10, sp
  41b318:	str	x9, [x10]
  41b31c:	mov	x9, sp
  41b320:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b324:	add	x10, x10, #0x377
  41b328:	str	x10, [x9, #8]
  41b32c:	bl	40a870 <log_object_internal@plt>
  41b330:	str	w0, [sp, #156]
  41b334:	ldr	w11, [sp, #156]
  41b338:	stur	w11, [x29, #-4]
  41b33c:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b340:	ldr	x8, [sp, #48]
  41b344:	ldr	x0, [x8, #136]
  41b348:	bl	41bc28 <rename_netif>
  41b34c:	stur	w0, [x29, #-68]
  41b350:	ldur	w9, [x29, #-68]
  41b354:	cmp	w9, #0x0
  41b358:	cset	w9, ge  // ge = tcont
  41b35c:	tbnz	w9, #0, 41b36c <udev_event_execute_rules+0x590>
  41b360:	ldur	w8, [x29, #-68]
  41b364:	stur	w8, [x29, #-4]
  41b368:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b36c:	ldr	x8, [sp, #48]
  41b370:	ldr	x0, [x8, #136]
  41b374:	bl	41c2d4 <update_devnode>
  41b378:	stur	w0, [x29, #-68]
  41b37c:	ldur	w9, [x29, #-68]
  41b380:	cmp	w9, #0x0
  41b384:	cset	w9, ge  // ge = tcont
  41b388:	tbnz	w9, #0, 41b398 <udev_event_execute_rules+0x5bc>
  41b38c:	ldur	w8, [x29, #-68]
  41b390:	stur	w8, [x29, #-4]
  41b394:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b398:	ldr	x8, [sp, #48]
  41b39c:	ldr	x0, [x8, #88]
  41b3a0:	ldr	x9, [x8, #136]
  41b3a4:	ldr	x1, [x9, #16]
  41b3a8:	bl	40a940 <device_ensure_usec_initialized@plt>
  41b3ac:	stur	w0, [x29, #-68]
  41b3b0:	ldur	w10, [x29, #-68]
  41b3b4:	cmp	w10, #0x0
  41b3b8:	cset	w10, ge  // ge = tcont
  41b3bc:	tbnz	w10, #0, 41b484 <udev_event_execute_rules+0x6a8>
  41b3c0:	mov	x8, xzr
  41b3c4:	str	x8, [sp, #144]
  41b3c8:	ldr	x8, [sp, #48]
  41b3cc:	ldr	x9, [x8, #88]
  41b3d0:	str	x9, [sp, #136]
  41b3d4:	mov	w10, #0x7                   	// #7
  41b3d8:	str	w10, [sp, #132]
  41b3dc:	ldur	w10, [x29, #-68]
  41b3e0:	str	w10, [sp, #128]
  41b3e4:	ldr	x9, [sp, #136]
  41b3e8:	cbz	x9, 41b428 <udev_event_execute_rules+0x64c>
  41b3ec:	mov	w0, #0x1                   	// #1
  41b3f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b3f4:	ldr	w8, [sp, #132]
  41b3f8:	cmp	w0, w8
  41b3fc:	cset	w8, ge  // ge = tcont
  41b400:	mov	w9, #0x1                   	// #1
  41b404:	eor	w8, w8, #0x1
  41b408:	eor	w8, w8, w9
  41b40c:	and	w8, w8, #0x1
  41b410:	mov	w1, w8
  41b414:	sxtw	x10, w1
  41b418:	cbz	x10, 41b428 <udev_event_execute_rules+0x64c>
  41b41c:	ldr	x0, [sp, #136]
  41b420:	add	x1, sp, #0x90
  41b424:	bl	40a860 <sd_device_get_sysname@plt>
  41b428:	ldr	w0, [sp, #132]
  41b42c:	ldr	w1, [sp, #128]
  41b430:	ldr	x8, [sp, #144]
  41b434:	mov	x9, xzr
  41b438:	cmp	x8, #0x0
  41b43c:	ldr	x8, [sp, #40]
  41b440:	csel	x5, x8, x9, ne  // ne = any
  41b444:	ldr	x6, [sp, #144]
  41b448:	ldr	x2, [sp, #32]
  41b44c:	mov	w3, #0x3ce                 	// #974
  41b450:	ldr	x4, [sp, #24]
  41b454:	mov	x7, x9
  41b458:	mov	x10, sp
  41b45c:	str	x9, [x10]
  41b460:	mov	x9, sp
  41b464:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b468:	add	x10, x10, #0x396
  41b46c:	str	x10, [x9, #8]
  41b470:	bl	40a870 <log_object_internal@plt>
  41b474:	str	w0, [sp, #124]
  41b478:	ldr	w11, [sp, #124]
  41b47c:	stur	w11, [x29, #-4]
  41b480:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b484:	ldr	x8, [sp, #48]
  41b488:	ldr	x0, [x8, #88]
  41b48c:	ldr	x9, [x8, #136]
  41b490:	ldr	x1, [x9, #16]
  41b494:	mov	w10, #0x1                   	// #1
  41b498:	and	w2, w10, #0x1
  41b49c:	bl	40a890 <device_tag_index@plt>
  41b4a0:	stur	w0, [x29, #-68]
  41b4a4:	ldur	w10, [x29, #-68]
  41b4a8:	cmp	w10, #0x0
  41b4ac:	cset	w10, ge  // ge = tcont
  41b4b0:	tbnz	w10, #0, 41b578 <udev_event_execute_rules+0x79c>
  41b4b4:	mov	x8, xzr
  41b4b8:	str	x8, [sp, #112]
  41b4bc:	ldr	x8, [sp, #48]
  41b4c0:	ldr	x9, [x8, #88]
  41b4c4:	str	x9, [sp, #104]
  41b4c8:	mov	w10, #0x7                   	// #7
  41b4cc:	str	w10, [sp, #100]
  41b4d0:	ldur	w10, [x29, #-68]
  41b4d4:	str	w10, [sp, #96]
  41b4d8:	ldr	x9, [sp, #104]
  41b4dc:	cbz	x9, 41b51c <udev_event_execute_rules+0x740>
  41b4e0:	mov	w0, #0x1                   	// #1
  41b4e4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b4e8:	ldr	w8, [sp, #100]
  41b4ec:	cmp	w0, w8
  41b4f0:	cset	w8, ge  // ge = tcont
  41b4f4:	mov	w9, #0x1                   	// #1
  41b4f8:	eor	w8, w8, #0x1
  41b4fc:	eor	w8, w8, w9
  41b500:	and	w8, w8, #0x1
  41b504:	mov	w1, w8
  41b508:	sxtw	x10, w1
  41b50c:	cbz	x10, 41b51c <udev_event_execute_rules+0x740>
  41b510:	ldr	x0, [sp, #104]
  41b514:	add	x1, sp, #0x70
  41b518:	bl	40a860 <sd_device_get_sysname@plt>
  41b51c:	ldr	w0, [sp, #100]
  41b520:	ldr	w1, [sp, #96]
  41b524:	ldr	x8, [sp, #112]
  41b528:	mov	x9, xzr
  41b52c:	cmp	x8, #0x0
  41b530:	ldr	x8, [sp, #40]
  41b534:	csel	x5, x8, x9, ne  // ne = any
  41b538:	ldr	x6, [sp, #112]
  41b53c:	ldr	x2, [sp, #32]
  41b540:	mov	w3, #0x3d3                 	// #979
  41b544:	ldr	x4, [sp, #24]
  41b548:	mov	x7, x9
  41b54c:	mov	x10, sp
  41b550:	str	x9, [x10]
  41b554:	mov	x9, sp
  41b558:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b55c:	add	x10, x10, #0x3c1
  41b560:	str	x10, [x9, #8]
  41b564:	bl	40a870 <log_object_internal@plt>
  41b568:	str	w0, [sp, #92]
  41b56c:	ldr	w11, [sp, #92]
  41b570:	stur	w11, [x29, #-4]
  41b574:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b578:	ldr	x8, [sp, #48]
  41b57c:	ldr	x0, [x8, #88]
  41b580:	bl	40ab80 <device_update_db@plt>
  41b584:	stur	w0, [x29, #-68]
  41b588:	ldur	w9, [x29, #-68]
  41b58c:	cmp	w9, #0x0
  41b590:	cset	w9, ge  // ge = tcont
  41b594:	tbnz	w9, #0, 41b65c <udev_event_execute_rules+0x880>
  41b598:	mov	x8, xzr
  41b59c:	str	x8, [sp, #80]
  41b5a0:	ldr	x8, [sp, #48]
  41b5a4:	ldr	x9, [x8, #88]
  41b5a8:	str	x9, [sp, #72]
  41b5ac:	mov	w10, #0x7                   	// #7
  41b5b0:	str	w10, [sp, #68]
  41b5b4:	ldur	w10, [x29, #-68]
  41b5b8:	str	w10, [sp, #64]
  41b5bc:	ldr	x9, [sp, #72]
  41b5c0:	cbz	x9, 41b600 <udev_event_execute_rules+0x824>
  41b5c4:	mov	w0, #0x1                   	// #1
  41b5c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b5cc:	ldr	w8, [sp, #68]
  41b5d0:	cmp	w0, w8
  41b5d4:	cset	w8, ge  // ge = tcont
  41b5d8:	mov	w9, #0x1                   	// #1
  41b5dc:	eor	w8, w8, #0x1
  41b5e0:	eor	w8, w8, w9
  41b5e4:	and	w8, w8, #0x1
  41b5e8:	mov	w1, w8
  41b5ec:	sxtw	x10, w1
  41b5f0:	cbz	x10, 41b600 <udev_event_execute_rules+0x824>
  41b5f4:	ldr	x0, [sp, #72]
  41b5f8:	add	x1, sp, #0x50
  41b5fc:	bl	40a860 <sd_device_get_sysname@plt>
  41b600:	ldr	w0, [sp, #68]
  41b604:	ldr	w1, [sp, #64]
  41b608:	ldr	x8, [sp, #80]
  41b60c:	mov	x9, xzr
  41b610:	cmp	x8, #0x0
  41b614:	ldr	x8, [sp, #40]
  41b618:	csel	x5, x8, x9, ne  // ne = any
  41b61c:	ldr	x6, [sp, #80]
  41b620:	ldr	x2, [sp, #32]
  41b624:	mov	w3, #0x3d7                 	// #983
  41b628:	ldr	x4, [sp, #24]
  41b62c:	mov	x7, x9
  41b630:	mov	x10, sp
  41b634:	str	x9, [x10]
  41b638:	mov	x9, sp
  41b63c:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  41b640:	add	x10, x10, #0x14f
  41b644:	str	x10, [x9, #8]
  41b648:	bl	40a870 <log_object_internal@plt>
  41b64c:	str	w0, [sp, #60]
  41b650:	ldr	w11, [sp, #60]
  41b654:	stur	w11, [x29, #-4]
  41b658:	b	41b688 <udev_event_execute_rules+0x8ac>
  41b65c:	ldr	x8, [sp, #48]
  41b660:	ldr	x0, [x8, #88]
  41b664:	bl	40afd0 <device_set_is_initialized@plt>
  41b668:	ldr	x8, [sp, #48]
  41b66c:	ldr	x9, [x8, #136]
  41b670:	ldr	x0, [x9, #16]
  41b674:	bl	40a7c0 <sd_device_unref@plt>
  41b678:	ldr	x8, [sp, #48]
  41b67c:	ldr	x9, [x8, #136]
  41b680:	str	x0, [x9, #16]
  41b684:	stur	wzr, [x29, #-4]
  41b688:	ldur	w0, [x29, #-4]
  41b68c:	ldr	x28, [sp, #368]
  41b690:	ldp	x29, x30, [sp, #352]
  41b694:	add	sp, sp, #0x180
  41b698:	ret

000000000041b69c <event_execute_rules_on_remove>:
  41b69c:	sub	sp, sp, #0xd0
  41b6a0:	stp	x29, x30, [sp, #192]
  41b6a4:	add	x29, sp, #0xc0
  41b6a8:	sub	x8, x29, #0x8
  41b6ac:	mov	w9, #0x1                   	// #1
  41b6b0:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41b6b4:	add	x10, x10, #0xa46
  41b6b8:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41b6bc:	add	x11, x11, #0xff0
  41b6c0:	add	x11, x11, #0x3
  41b6c4:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41b6c8:	add	x12, x12, #0x9f1
  41b6cc:	str	x0, [x8]
  41b6d0:	stur	x1, [x29, #-16]
  41b6d4:	stur	x2, [x29, #-24]
  41b6d8:	stur	x3, [x29, #-32]
  41b6dc:	ldr	x13, [x8]
  41b6e0:	ldr	x13, [x13]
  41b6e4:	stur	x13, [x29, #-40]
  41b6e8:	ldur	x0, [x29, #-40]
  41b6ec:	and	w1, w9, #0x1
  41b6f0:	str	x8, [sp, #40]
  41b6f4:	str	x10, [sp, #32]
  41b6f8:	str	x11, [sp, #24]
  41b6fc:	str	x12, [sp, #16]
  41b700:	bl	40afe0 <device_read_db_internal@plt>
  41b704:	stur	w0, [x29, #-44]
  41b708:	ldur	w9, [x29, #-44]
  41b70c:	cmp	w9, #0x0
  41b710:	cset	w9, ge  // ge = tcont
  41b714:	tbnz	w9, #0, 41b7cc <event_execute_rules_on_remove+0x130>
  41b718:	mov	x8, xzr
  41b71c:	stur	x8, [x29, #-56]
  41b720:	ldur	x8, [x29, #-40]
  41b724:	stur	x8, [x29, #-64]
  41b728:	mov	w9, #0x7                   	// #7
  41b72c:	stur	w9, [x29, #-68]
  41b730:	ldur	w9, [x29, #-44]
  41b734:	stur	w9, [x29, #-72]
  41b738:	ldur	x8, [x29, #-64]
  41b73c:	cbz	x8, 41b77c <event_execute_rules_on_remove+0xe0>
  41b740:	mov	w0, #0x1                   	// #1
  41b744:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b748:	ldur	w8, [x29, #-68]
  41b74c:	cmp	w0, w8
  41b750:	cset	w8, ge  // ge = tcont
  41b754:	mov	w9, #0x1                   	// #1
  41b758:	eor	w8, w8, #0x1
  41b75c:	eor	w8, w8, w9
  41b760:	and	w8, w8, #0x1
  41b764:	mov	w1, w8
  41b768:	sxtw	x10, w1
  41b76c:	cbz	x10, 41b77c <event_execute_rules_on_remove+0xe0>
  41b770:	ldur	x0, [x29, #-64]
  41b774:	sub	x1, x29, #0x38
  41b778:	bl	40a860 <sd_device_get_sysname@plt>
  41b77c:	ldur	w0, [x29, #-68]
  41b780:	ldur	w1, [x29, #-72]
  41b784:	ldur	x8, [x29, #-56]
  41b788:	mov	x9, xzr
  41b78c:	cmp	x8, #0x0
  41b790:	ldr	x8, [sp, #32]
  41b794:	csel	x5, x8, x9, ne  // ne = any
  41b798:	ldur	x6, [x29, #-56]
  41b79c:	ldr	x2, [sp, #24]
  41b7a0:	mov	w3, #0x370                 	// #880
  41b7a4:	ldr	x4, [sp, #16]
  41b7a8:	mov	x7, x9
  41b7ac:	mov	x10, sp
  41b7b0:	str	x9, [x10]
  41b7b4:	mov	x9, sp
  41b7b8:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b7bc:	add	x10, x10, #0xa0f
  41b7c0:	str	x10, [x9, #8]
  41b7c4:	bl	40a870 <log_object_internal@plt>
  41b7c8:	stur	w0, [x29, #-76]
  41b7cc:	ldur	x0, [x29, #-40]
  41b7d0:	mov	x8, xzr
  41b7d4:	mov	x1, x8
  41b7d8:	mov	w9, wzr
  41b7dc:	and	w2, w9, #0x1
  41b7e0:	bl	40a890 <device_tag_index@plt>
  41b7e4:	stur	w0, [x29, #-44]
  41b7e8:	ldur	w9, [x29, #-44]
  41b7ec:	cmp	w9, #0x0
  41b7f0:	cset	w9, ge  // ge = tcont
  41b7f4:	tbnz	w9, #0, 41b8ac <event_execute_rules_on_remove+0x210>
  41b7f8:	mov	x8, xzr
  41b7fc:	stur	x8, [x29, #-88]
  41b800:	ldur	x8, [x29, #-40]
  41b804:	str	x8, [sp, #96]
  41b808:	mov	w9, #0x7                   	// #7
  41b80c:	str	w9, [sp, #92]
  41b810:	ldur	w9, [x29, #-44]
  41b814:	str	w9, [sp, #88]
  41b818:	ldr	x8, [sp, #96]
  41b81c:	cbz	x8, 41b85c <event_execute_rules_on_remove+0x1c0>
  41b820:	mov	w0, #0x1                   	// #1
  41b824:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b828:	ldr	w8, [sp, #92]
  41b82c:	cmp	w0, w8
  41b830:	cset	w8, ge  // ge = tcont
  41b834:	mov	w9, #0x1                   	// #1
  41b838:	eor	w8, w8, #0x1
  41b83c:	eor	w8, w8, w9
  41b840:	and	w8, w8, #0x1
  41b844:	mov	w1, w8
  41b848:	sxtw	x10, w1
  41b84c:	cbz	x10, 41b85c <event_execute_rules_on_remove+0x1c0>
  41b850:	ldr	x0, [sp, #96]
  41b854:	sub	x1, x29, #0x58
  41b858:	bl	40a860 <sd_device_get_sysname@plt>
  41b85c:	ldr	w0, [sp, #92]
  41b860:	ldr	w1, [sp, #88]
  41b864:	ldur	x8, [x29, #-88]
  41b868:	mov	x9, xzr
  41b86c:	cmp	x8, #0x0
  41b870:	ldr	x8, [sp, #32]
  41b874:	csel	x5, x8, x9, ne  // ne = any
  41b878:	ldur	x6, [x29, #-88]
  41b87c:	ldr	x2, [sp, #24]
  41b880:	mov	w3, #0x374                 	// #884
  41b884:	ldr	x4, [sp, #16]
  41b888:	mov	x7, x9
  41b88c:	mov	x10, sp
  41b890:	str	x9, [x10]
  41b894:	mov	x9, sp
  41b898:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b89c:	add	x10, x10, #0xa41
  41b8a0:	str	x10, [x9, #8]
  41b8a4:	bl	40a870 <log_object_internal@plt>
  41b8a8:	str	w0, [sp, #84]
  41b8ac:	ldur	x0, [x29, #-40]
  41b8b0:	bl	40a880 <device_delete_db@plt>
  41b8b4:	stur	w0, [x29, #-44]
  41b8b8:	ldur	w8, [x29, #-44]
  41b8bc:	cmp	w8, #0x0
  41b8c0:	cset	w8, ge  // ge = tcont
  41b8c4:	tbnz	w8, #0, 41b97c <event_execute_rules_on_remove+0x2e0>
  41b8c8:	mov	x8, xzr
  41b8cc:	str	x8, [sp, #72]
  41b8d0:	ldur	x8, [x29, #-40]
  41b8d4:	str	x8, [sp, #64]
  41b8d8:	mov	w9, #0x7                   	// #7
  41b8dc:	str	w9, [sp, #60]
  41b8e0:	ldur	w9, [x29, #-44]
  41b8e4:	str	w9, [sp, #56]
  41b8e8:	ldr	x8, [sp, #64]
  41b8ec:	cbz	x8, 41b92c <event_execute_rules_on_remove+0x290>
  41b8f0:	mov	w0, #0x1                   	// #1
  41b8f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41b8f8:	ldr	w8, [sp, #60]
  41b8fc:	cmp	w0, w8
  41b900:	cset	w8, ge  // ge = tcont
  41b904:	mov	w9, #0x1                   	// #1
  41b908:	eor	w8, w8, #0x1
  41b90c:	eor	w8, w8, w9
  41b910:	and	w8, w8, #0x1
  41b914:	mov	w1, w8
  41b918:	sxtw	x10, w1
  41b91c:	cbz	x10, 41b92c <event_execute_rules_on_remove+0x290>
  41b920:	ldr	x0, [sp, #64]
  41b924:	add	x1, sp, #0x48
  41b928:	bl	40a860 <sd_device_get_sysname@plt>
  41b92c:	ldr	w0, [sp, #60]
  41b930:	ldr	w1, [sp, #56]
  41b934:	ldr	x8, [sp, #72]
  41b938:	mov	x9, xzr
  41b93c:	cmp	x8, #0x0
  41b940:	ldr	x8, [sp, #32]
  41b944:	csel	x5, x8, x9, ne  // ne = any
  41b948:	ldr	x6, [sp, #72]
  41b94c:	ldr	x2, [sp, #24]
  41b950:	mov	w3, #0x378                 	// #888
  41b954:	ldr	x4, [sp, #16]
  41b958:	mov	x7, x9
  41b95c:	mov	x10, sp
  41b960:	str	x9, [x10]
  41b964:	mov	x9, sp
  41b968:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41b96c:	add	x10, x10, #0xa8d
  41b970:	str	x10, [x9, #8]
  41b974:	bl	40a870 <log_object_internal@plt>
  41b978:	str	w0, [sp, #52]
  41b97c:	ldur	x0, [x29, #-40]
  41b980:	mov	x8, xzr
  41b984:	mov	x1, x8
  41b988:	bl	40aa50 <sd_device_get_devnum@plt>
  41b98c:	cmp	w0, #0x0
  41b990:	cset	w9, lt  // lt = tstop
  41b994:	tbnz	w9, #0, 41b9a0 <event_execute_rules_on_remove+0x304>
  41b998:	ldur	x0, [x29, #-40]
  41b99c:	bl	43db08 <udev_watch_end>
  41b9a0:	ldur	x0, [x29, #-32]
  41b9a4:	ldr	x8, [sp, #40]
  41b9a8:	ldr	x1, [x8]
  41b9ac:	ldur	x2, [x29, #-16]
  41b9b0:	ldur	x3, [x29, #-24]
  41b9b4:	bl	4226d8 <udev_rules_apply_to_event>
  41b9b8:	ldur	x8, [x29, #-40]
  41b9bc:	mov	x0, x8
  41b9c0:	mov	x8, xzr
  41b9c4:	mov	x1, x8
  41b9c8:	bl	40aa50 <sd_device_get_devnum@plt>
  41b9cc:	cmp	w0, #0x0
  41b9d0:	cset	w9, lt  // lt = tstop
  41b9d4:	tbnz	w9, #0, 41b9e0 <event_execute_rules_on_remove+0x344>
  41b9d8:	ldur	x0, [x29, #-40]
  41b9dc:	bl	420f44 <udev_node_remove>
  41b9e0:	ldp	x29, x30, [sp, #192]
  41b9e4:	add	sp, sp, #0xd0
  41b9e8:	ret

000000000041b9ec <udev_event_on_move>:
  41b9ec:	sub	sp, sp, #0x90
  41b9f0:	stp	x29, x30, [sp, #128]
  41b9f4:	add	x29, sp, #0x80
  41b9f8:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  41b9fc:	add	x8, x8, #0xff0
  41ba00:	add	x8, x8, #0x3
  41ba04:	stur	x0, [x29, #-16]
  41ba08:	ldur	x9, [x29, #-16]
  41ba0c:	ldr	x9, [x9]
  41ba10:	stur	x9, [x29, #-24]
  41ba14:	ldur	x9, [x29, #-16]
  41ba18:	ldr	x9, [x9, #16]
  41ba1c:	str	x8, [sp, #24]
  41ba20:	cbz	x9, 41bb20 <udev_event_on_move+0x134>
  41ba24:	ldur	x0, [x29, #-24]
  41ba28:	mov	x8, xzr
  41ba2c:	mov	x1, x8
  41ba30:	bl	40aa50 <sd_device_get_devnum@plt>
  41ba34:	cmp	w0, #0x0
  41ba38:	cset	w9, ge  // ge = tcont
  41ba3c:	tbnz	w9, #0, 41bb20 <udev_event_on_move+0x134>
  41ba40:	ldur	x0, [x29, #-24]
  41ba44:	ldur	x8, [x29, #-16]
  41ba48:	ldr	x1, [x8, #16]
  41ba4c:	bl	40acd0 <device_copy_properties@plt>
  41ba50:	stur	w0, [x29, #-28]
  41ba54:	ldur	w9, [x29, #-28]
  41ba58:	cmp	w9, #0x0
  41ba5c:	cset	w9, ge  // ge = tcont
  41ba60:	tbnz	w9, #0, 41bb20 <udev_event_on_move+0x134>
  41ba64:	mov	x8, xzr
  41ba68:	stur	x8, [x29, #-40]
  41ba6c:	ldur	x8, [x29, #-24]
  41ba70:	stur	x8, [x29, #-48]
  41ba74:	mov	w9, #0x7                   	// #7
  41ba78:	stur	w9, [x29, #-52]
  41ba7c:	ldur	w9, [x29, #-28]
  41ba80:	stur	w9, [x29, #-56]
  41ba84:	ldur	x8, [x29, #-48]
  41ba88:	cbz	x8, 41bac8 <udev_event_on_move+0xdc>
  41ba8c:	mov	w0, #0x1                   	// #1
  41ba90:	bl	40a3f0 <log_get_max_level_realm@plt>
  41ba94:	ldur	w8, [x29, #-52]
  41ba98:	cmp	w0, w8
  41ba9c:	cset	w8, ge  // ge = tcont
  41baa0:	mov	w9, #0x1                   	// #1
  41baa4:	eor	w8, w8, #0x1
  41baa8:	eor	w8, w8, w9
  41baac:	and	w8, w8, #0x1
  41bab0:	mov	w1, w8
  41bab4:	sxtw	x10, w1
  41bab8:	cbz	x10, 41bac8 <udev_event_on_move+0xdc>
  41babc:	ldur	x0, [x29, #-48]
  41bac0:	sub	x1, x29, #0x28
  41bac4:	bl	40a860 <sd_device_get_sysname@plt>
  41bac8:	ldur	w0, [x29, #-52]
  41bacc:	ldur	w1, [x29, #-56]
  41bad0:	ldur	x8, [x29, #-40]
  41bad4:	mov	x9, xzr
  41bad8:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41badc:	add	x10, x10, #0xa46
  41bae0:	cmp	x8, #0x0
  41bae4:	csel	x5, x10, x9, ne  // ne = any
  41bae8:	ldur	x6, [x29, #-40]
  41baec:	ldr	x2, [sp, #24]
  41baf0:	mov	w3, #0x38b                 	// #907
  41baf4:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41baf8:	add	x4, x4, #0xacb
  41bafc:	mov	x7, x9
  41bb00:	mov	x8, sp
  41bb04:	str	x9, [x8]
  41bb08:	mov	x8, sp
  41bb0c:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  41bb10:	add	x9, x9, #0xade
  41bb14:	str	x9, [x8, #8]
  41bb18:	bl	40a870 <log_object_internal@plt>
  41bb1c:	stur	w0, [x29, #-60]
  41bb20:	ldur	x0, [x29, #-24]
  41bb24:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41bb28:	add	x1, x1, #0xb23
  41bb2c:	mov	x8, xzr
  41bb30:	mov	x2, x8
  41bb34:	bl	40aff0 <device_add_property@plt>
  41bb38:	stur	w0, [x29, #-28]
  41bb3c:	ldur	w9, [x29, #-28]
  41bb40:	cmp	w9, #0x0
  41bb44:	cset	w9, ge  // ge = tcont
  41bb48:	tbnz	w9, #0, 41bc14 <udev_event_on_move+0x228>
  41bb4c:	mov	x8, xzr
  41bb50:	str	x8, [sp, #56]
  41bb54:	ldur	x8, [x29, #-24]
  41bb58:	str	x8, [sp, #48]
  41bb5c:	mov	w9, #0x7                   	// #7
  41bb60:	str	w9, [sp, #44]
  41bb64:	ldur	w9, [x29, #-28]
  41bb68:	str	w9, [sp, #40]
  41bb6c:	ldr	x8, [sp, #48]
  41bb70:	cbz	x8, 41bbb0 <udev_event_on_move+0x1c4>
  41bb74:	mov	w0, #0x1                   	// #1
  41bb78:	bl	40a3f0 <log_get_max_level_realm@plt>
  41bb7c:	ldr	w8, [sp, #44]
  41bb80:	cmp	w0, w8
  41bb84:	cset	w8, ge  // ge = tcont
  41bb88:	mov	w9, #0x1                   	// #1
  41bb8c:	eor	w8, w8, #0x1
  41bb90:	eor	w8, w8, w9
  41bb94:	and	w8, w8, #0x1
  41bb98:	mov	w1, w8
  41bb9c:	sxtw	x10, w1
  41bba0:	cbz	x10, 41bbb0 <udev_event_on_move+0x1c4>
  41bba4:	ldr	x0, [sp, #48]
  41bba8:	add	x1, sp, #0x38
  41bbac:	bl	40a860 <sd_device_get_sysname@plt>
  41bbb0:	ldr	w0, [sp, #44]
  41bbb4:	ldr	w1, [sp, #40]
  41bbb8:	ldr	x8, [sp, #56]
  41bbbc:	mov	x9, xzr
  41bbc0:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41bbc4:	add	x10, x10, #0xa46
  41bbc8:	cmp	x8, #0x0
  41bbcc:	csel	x5, x10, x9, ne  // ne = any
  41bbd0:	ldr	x6, [sp, #56]
  41bbd4:	ldr	x2, [sp, #24]
  41bbd8:	mov	w3, #0x391                 	// #913
  41bbdc:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41bbe0:	add	x4, x4, #0xacb
  41bbe4:	mov	x7, x9
  41bbe8:	mov	x8, sp
  41bbec:	str	x9, [x8]
  41bbf0:	mov	x8, sp
  41bbf4:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  41bbf8:	add	x9, x9, #0xb2f
  41bbfc:	str	x9, [x8, #8]
  41bc00:	bl	40a870 <log_object_internal@plt>
  41bc04:	str	w0, [sp, #36]
  41bc08:	ldr	w11, [sp, #36]
  41bc0c:	stur	w11, [x29, #-4]
  41bc10:	b	41bc18 <udev_event_on_move+0x22c>
  41bc14:	stur	wzr, [x29, #-4]
  41bc18:	ldur	w0, [x29, #-4]
  41bc1c:	ldp	x29, x30, [sp, #128]
  41bc20:	add	sp, sp, #0x90
  41bc24:	ret

000000000041bc28 <rename_netif>:
  41bc28:	sub	sp, sp, #0x150
  41bc2c:	stp	x29, x30, [sp, #304]
  41bc30:	str	x28, [sp, #320]
  41bc34:	add	x29, sp, #0x130
  41bc38:	sub	x8, x29, #0x58
  41bc3c:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  41bc40:	add	x9, x9, #0xa46
  41bc44:	adrp	x10, 465000 <on_inotify.__assert_in_set+0x1540>
  41bc48:	add	x10, x10, #0xff0
  41bc4c:	add	x10, x10, #0x3
  41bc50:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41bc54:	add	x11, x11, #0xb5b
  41bc58:	str	x0, [x8, #72]
  41bc5c:	ldr	x12, [x8, #72]
  41bc60:	ldr	x12, [x12]
  41bc64:	str	x12, [x8, #64]
  41bc68:	ldr	x12, [x8, #72]
  41bc6c:	ldr	x12, [x12, #24]
  41bc70:	str	x8, [sp, #64]
  41bc74:	str	x9, [sp, #56]
  41bc78:	str	x10, [sp, #48]
  41bc7c:	str	x11, [sp, #40]
  41bc80:	cbnz	x12, 41bc8c <rename_netif+0x64>
  41bc84:	stur	wzr, [x29, #-4]
  41bc88:	b	41c2c0 <rename_netif+0x698>
  41bc8c:	ldr	x8, [sp, #64]
  41bc90:	ldr	x0, [x8, #64]
  41bc94:	sub	x1, x29, #0x20
  41bc98:	bl	40a860 <sd_device_get_sysname@plt>
  41bc9c:	stur	w0, [x29, #-40]
  41bca0:	ldur	w9, [x29, #-40]
  41bca4:	cmp	w9, #0x0
  41bca8:	cset	w9, ge  // ge = tcont
  41bcac:	tbnz	w9, #0, 41bd7c <rename_netif+0x154>
  41bcb0:	mov	x8, xzr
  41bcb4:	ldr	x9, [sp, #64]
  41bcb8:	str	x8, [x9, #40]
  41bcbc:	ldr	x8, [x9, #64]
  41bcc0:	str	x8, [x9, #32]
  41bcc4:	mov	w10, #0x3                   	// #3
  41bcc8:	stur	w10, [x29, #-60]
  41bccc:	ldur	w10, [x29, #-40]
  41bcd0:	stur	w10, [x29, #-64]
  41bcd4:	ldr	x8, [x9, #32]
  41bcd8:	cbz	x8, 41bd1c <rename_netif+0xf4>
  41bcdc:	mov	w0, #0x1                   	// #1
  41bce0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41bce4:	ldur	w8, [x29, #-60]
  41bce8:	cmp	w0, w8
  41bcec:	cset	w8, ge  // ge = tcont
  41bcf0:	mov	w9, #0x1                   	// #1
  41bcf4:	eor	w8, w8, #0x1
  41bcf8:	eor	w8, w8, w9
  41bcfc:	and	w8, w8, #0x1
  41bd00:	mov	w1, w8
  41bd04:	sxtw	x10, w1
  41bd08:	cbz	x10, 41bd1c <rename_netif+0xf4>
  41bd0c:	ldr	x8, [sp, #64]
  41bd10:	ldr	x0, [x8, #32]
  41bd14:	sub	x1, x29, #0x30
  41bd18:	bl	40a860 <sd_device_get_sysname@plt>
  41bd1c:	ldur	w0, [x29, #-60]
  41bd20:	ldur	w1, [x29, #-64]
  41bd24:	ldr	x8, [sp, #64]
  41bd28:	ldr	x9, [x8, #40]
  41bd2c:	mov	x10, xzr
  41bd30:	cmp	x9, #0x0
  41bd34:	ldr	x9, [sp, #56]
  41bd38:	csel	x5, x9, x10, ne  // ne = any
  41bd3c:	ldr	x6, [x8, #40]
  41bd40:	ldr	x2, [sp, #48]
  41bd44:	mov	w3, #0x31c                 	// #796
  41bd48:	ldr	x4, [sp, #40]
  41bd4c:	mov	x7, x10
  41bd50:	mov	x11, sp
  41bd54:	str	x10, [x11]
  41bd58:	mov	x10, sp
  41bd5c:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41bd60:	add	x11, x11, #0x219
  41bd64:	str	x11, [x10, #8]
  41bd68:	bl	40a870 <log_object_internal@plt>
  41bd6c:	stur	w0, [x29, #-68]
  41bd70:	ldur	w12, [x29, #-68]
  41bd74:	stur	w12, [x29, #-4]
  41bd78:	b	41c2c0 <rename_netif+0x698>
  41bd7c:	ldr	x8, [sp, #64]
  41bd80:	ldr	x9, [x8, #72]
  41bd84:	ldr	x0, [x9, #24]
  41bd88:	ldr	x1, [x8, #56]
  41bd8c:	bl	40aa20 <strcmp@plt>
  41bd90:	cbnz	w0, 41bd9c <rename_netif+0x174>
  41bd94:	stur	wzr, [x29, #-4]
  41bd98:	b	41c2c0 <rename_netif+0x698>
  41bd9c:	ldr	x8, [sp, #64]
  41bda0:	ldr	x0, [x8, #64]
  41bda4:	mov	w9, wzr
  41bda8:	mov	w1, w9
  41bdac:	bl	40aba0 <device_for_action@plt>
  41bdb0:	tbnz	w0, #0, 41bdbc <rename_netif+0x194>
  41bdb4:	stur	wzr, [x29, #-4]
  41bdb8:	b	41c2c0 <rename_netif+0x698>
  41bdbc:	ldr	x8, [sp, #64]
  41bdc0:	ldr	x0, [x8, #64]
  41bdc4:	sub	x1, x29, #0x24
  41bdc8:	bl	40aa60 <sd_device_get_ifindex@plt>
  41bdcc:	stur	w0, [x29, #-40]
  41bdd0:	ldur	w9, [x29, #-40]
  41bdd4:	mov	w10, #0xfffffffe            	// #-2
  41bdd8:	cmp	w9, w10
  41bddc:	b.ne	41bde8 <rename_netif+0x1c0>  // b.any
  41bde0:	stur	wzr, [x29, #-4]
  41bde4:	b	41c2c0 <rename_netif+0x698>
  41bde8:	ldur	w8, [x29, #-40]
  41bdec:	cmp	w8, #0x0
  41bdf0:	cset	w8, ge  // ge = tcont
  41bdf4:	tbnz	w8, #0, 41bec4 <rename_netif+0x29c>
  41bdf8:	mov	x8, xzr
  41bdfc:	ldr	x9, [sp, #64]
  41be00:	str	x8, [x9, #8]
  41be04:	ldr	x8, [x9, #64]
  41be08:	str	x8, [x9]
  41be0c:	mov	w10, #0x3                   	// #3
  41be10:	stur	w10, [x29, #-92]
  41be14:	ldur	w10, [x29, #-40]
  41be18:	stur	w10, [x29, #-96]
  41be1c:	ldr	x8, [x9]
  41be20:	cbz	x8, 41be64 <rename_netif+0x23c>
  41be24:	mov	w0, #0x1                   	// #1
  41be28:	bl	40a3f0 <log_get_max_level_realm@plt>
  41be2c:	ldur	w8, [x29, #-92]
  41be30:	cmp	w0, w8
  41be34:	cset	w8, ge  // ge = tcont
  41be38:	mov	w9, #0x1                   	// #1
  41be3c:	eor	w8, w8, #0x1
  41be40:	eor	w8, w8, w9
  41be44:	and	w8, w8, #0x1
  41be48:	mov	w1, w8
  41be4c:	sxtw	x10, w1
  41be50:	cbz	x10, 41be64 <rename_netif+0x23c>
  41be54:	ldr	x8, [sp, #64]
  41be58:	ldr	x0, [x8]
  41be5c:	sub	x1, x29, #0x50
  41be60:	bl	40a860 <sd_device_get_sysname@plt>
  41be64:	ldur	w0, [x29, #-92]
  41be68:	ldur	w1, [x29, #-96]
  41be6c:	ldr	x8, [sp, #64]
  41be70:	ldr	x9, [x8, #8]
  41be74:	mov	x10, xzr
  41be78:	cmp	x9, #0x0
  41be7c:	ldr	x9, [sp, #56]
  41be80:	csel	x5, x9, x10, ne  // ne = any
  41be84:	ldr	x6, [x8, #8]
  41be88:	ldr	x2, [sp, #48]
  41be8c:	mov	w3, #0x328                 	// #808
  41be90:	ldr	x4, [sp, #40]
  41be94:	mov	x7, x10
  41be98:	mov	x11, sp
  41be9c:	str	x10, [x11]
  41bea0:	mov	x10, sp
  41bea4:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41bea8:	add	x11, x11, #0xb68
  41beac:	str	x11, [x10, #8]
  41beb0:	bl	40a870 <log_object_internal@plt>
  41beb4:	stur	w0, [x29, #-100]
  41beb8:	ldur	w12, [x29, #-100]
  41bebc:	stur	w12, [x29, #-4]
  41bec0:	b	41c2c0 <rename_netif+0x698>
  41bec4:	ldr	x8, [sp, #64]
  41bec8:	ldr	x9, [x8, #72]
  41becc:	add	x0, x9, #0x58
  41bed0:	ldur	w1, [x29, #-36]
  41bed4:	ldr	x9, [x8, #72]
  41bed8:	ldr	x2, [x9, #24]
  41bedc:	bl	40b000 <rtnl_set_link_name@plt>
  41bee0:	stur	w0, [x29, #-40]
  41bee4:	ldur	w10, [x29, #-40]
  41bee8:	cmp	w10, #0x0
  41beec:	cset	w10, ge  // ge = tcont
  41bef0:	tbnz	w10, #0, 41bfe4 <rename_netif+0x3bc>
  41bef4:	mov	x8, xzr
  41bef8:	stur	x8, [x29, #-112]
  41befc:	ldr	x8, [sp, #64]
  41bf00:	ldr	x9, [x8, #64]
  41bf04:	stur	x9, [x29, #-120]
  41bf08:	mov	w10, #0x3                   	// #3
  41bf0c:	stur	w10, [x29, #-124]
  41bf10:	ldur	w10, [x29, #-40]
  41bf14:	stur	w10, [x29, #-128]
  41bf18:	ldur	x9, [x29, #-120]
  41bf1c:	cbz	x9, 41bf5c <rename_netif+0x334>
  41bf20:	mov	w0, #0x1                   	// #1
  41bf24:	bl	40a3f0 <log_get_max_level_realm@plt>
  41bf28:	ldur	w8, [x29, #-124]
  41bf2c:	cmp	w0, w8
  41bf30:	cset	w8, ge  // ge = tcont
  41bf34:	mov	w9, #0x1                   	// #1
  41bf38:	eor	w8, w8, #0x1
  41bf3c:	eor	w8, w8, w9
  41bf40:	and	w8, w8, #0x1
  41bf44:	mov	w1, w8
  41bf48:	sxtw	x10, w1
  41bf4c:	cbz	x10, 41bf5c <rename_netif+0x334>
  41bf50:	ldur	x0, [x29, #-120]
  41bf54:	sub	x1, x29, #0x70
  41bf58:	bl	40a860 <sd_device_get_sysname@plt>
  41bf5c:	ldur	w0, [x29, #-124]
  41bf60:	ldur	w1, [x29, #-128]
  41bf64:	ldur	x8, [x29, #-112]
  41bf68:	mov	x9, xzr
  41bf6c:	cmp	x8, #0x0
  41bf70:	ldr	x8, [sp, #56]
  41bf74:	csel	x5, x8, x9, ne  // ne = any
  41bf78:	ldur	x6, [x29, #-112]
  41bf7c:	ldur	w10, [x29, #-36]
  41bf80:	ldr	x11, [sp, #64]
  41bf84:	ldr	x12, [x11, #56]
  41bf88:	ldr	x13, [x11, #72]
  41bf8c:	ldr	x13, [x13, #24]
  41bf90:	ldr	x2, [sp, #48]
  41bf94:	mov	w3, #0x32d                 	// #813
  41bf98:	ldr	x4, [sp, #40]
  41bf9c:	mov	x7, x9
  41bfa0:	mov	x14, sp
  41bfa4:	str	x9, [x14]
  41bfa8:	mov	x9, sp
  41bfac:	adrp	x14, 466000 <on_inotify.__assert_in_set+0x2540>
  41bfb0:	add	x14, x14, #0xb82
  41bfb4:	str	x14, [x9, #8]
  41bfb8:	mov	x9, sp
  41bfbc:	str	w10, [x9, #16]
  41bfc0:	mov	x9, sp
  41bfc4:	str	x12, [x9, #24]
  41bfc8:	mov	x9, sp
  41bfcc:	str	x13, [x9, #32]
  41bfd0:	bl	40a870 <log_object_internal@plt>
  41bfd4:	stur	w0, [x29, #-132]
  41bfd8:	ldur	w10, [x29, #-132]
  41bfdc:	stur	w10, [x29, #-4]
  41bfe0:	b	41c2c0 <rename_netif+0x698>
  41bfe4:	ldr	x8, [sp, #64]
  41bfe8:	ldr	x0, [x8, #64]
  41bfec:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41bff0:	add	x1, x1, #0xb23
  41bff4:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  41bff8:	add	x2, x2, #0xbbe
  41bffc:	bl	40aff0 <device_add_property@plt>
  41c000:	stur	w0, [x29, #-40]
  41c004:	ldur	w9, [x29, #-40]
  41c008:	cmp	w9, #0x0
  41c00c:	cset	w9, ge  // ge = tcont
  41c010:	tbnz	w9, #0, 41c0d8 <rename_netif+0x4b0>
  41c014:	mov	x8, xzr
  41c018:	stur	x8, [x29, #-144]
  41c01c:	ldr	x8, [sp, #64]
  41c020:	ldr	x9, [x8, #64]
  41c024:	str	x9, [sp, #152]
  41c028:	mov	w10, #0x4                   	// #4
  41c02c:	str	w10, [sp, #148]
  41c030:	ldur	w10, [x29, #-40]
  41c034:	str	w10, [sp, #144]
  41c038:	ldr	x9, [sp, #152]
  41c03c:	cbz	x9, 41c07c <rename_netif+0x454>
  41c040:	mov	w0, #0x1                   	// #1
  41c044:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c048:	ldr	w8, [sp, #148]
  41c04c:	cmp	w0, w8
  41c050:	cset	w8, ge  // ge = tcont
  41c054:	mov	w9, #0x1                   	// #1
  41c058:	eor	w8, w8, #0x1
  41c05c:	eor	w8, w8, w9
  41c060:	and	w8, w8, #0x1
  41c064:	mov	w1, w8
  41c068:	sxtw	x10, w1
  41c06c:	cbz	x10, 41c07c <rename_netif+0x454>
  41c070:	ldr	x0, [sp, #152]
  41c074:	sub	x1, x29, #0x90
  41c078:	bl	40a860 <sd_device_get_sysname@plt>
  41c07c:	ldr	w0, [sp, #148]
  41c080:	ldr	w1, [sp, #144]
  41c084:	ldur	x8, [x29, #-144]
  41c088:	mov	x9, xzr
  41c08c:	cmp	x8, #0x0
  41c090:	ldr	x8, [sp, #56]
  41c094:	csel	x5, x8, x9, ne  // ne = any
  41c098:	ldur	x6, [x29, #-144]
  41c09c:	ldr	x2, [sp, #48]
  41c0a0:	mov	w3, #0x332                 	// #818
  41c0a4:	ldr	x4, [sp, #40]
  41c0a8:	mov	x7, x9
  41c0ac:	mov	x10, sp
  41c0b0:	str	x9, [x10]
  41c0b4:	mov	x9, sp
  41c0b8:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41c0bc:	add	x10, x10, #0xbc0
  41c0c0:	str	x10, [x9, #8]
  41c0c4:	bl	40a870 <log_object_internal@plt>
  41c0c8:	str	w0, [sp, #140]
  41c0cc:	ldr	w11, [sp, #140]
  41c0d0:	stur	w11, [x29, #-4]
  41c0d4:	b	41c2c0 <rename_netif+0x698>
  41c0d8:	ldr	x8, [sp, #64]
  41c0dc:	ldr	x0, [x8, #64]
  41c0e0:	ldr	x9, [x8, #72]
  41c0e4:	ldr	x1, [x9, #24]
  41c0e8:	bl	40b010 <device_rename@plt>
  41c0ec:	stur	w0, [x29, #-40]
  41c0f0:	ldur	w10, [x29, #-40]
  41c0f4:	cmp	w10, #0x0
  41c0f8:	cset	w10, ge  // ge = tcont
  41c0fc:	tbnz	w10, #0, 41c1d8 <rename_netif+0x5b0>
  41c100:	mov	x8, xzr
  41c104:	str	x8, [sp, #128]
  41c108:	ldr	x8, [sp, #64]
  41c10c:	ldr	x9, [x8, #64]
  41c110:	str	x9, [sp, #120]
  41c114:	mov	w10, #0x4                   	// #4
  41c118:	str	w10, [sp, #116]
  41c11c:	ldur	w10, [x29, #-40]
  41c120:	str	w10, [sp, #112]
  41c124:	ldr	x9, [sp, #120]
  41c128:	cbz	x9, 41c168 <rename_netif+0x540>
  41c12c:	mov	w0, #0x1                   	// #1
  41c130:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c134:	ldr	w8, [sp, #116]
  41c138:	cmp	w0, w8
  41c13c:	cset	w8, ge  // ge = tcont
  41c140:	mov	w9, #0x1                   	// #1
  41c144:	eor	w8, w8, #0x1
  41c148:	eor	w8, w8, w9
  41c14c:	and	w8, w8, #0x1
  41c150:	mov	w1, w8
  41c154:	sxtw	x10, w1
  41c158:	cbz	x10, 41c168 <rename_netif+0x540>
  41c15c:	ldr	x0, [sp, #120]
  41c160:	add	x1, sp, #0x80
  41c164:	bl	40a860 <sd_device_get_sysname@plt>
  41c168:	ldr	w0, [sp, #116]
  41c16c:	ldr	w1, [sp, #112]
  41c170:	ldr	x8, [sp, #128]
  41c174:	mov	x9, xzr
  41c178:	cmp	x8, #0x0
  41c17c:	ldr	x8, [sp, #56]
  41c180:	csel	x5, x8, x9, ne  // ne = any
  41c184:	ldr	x6, [sp, #128]
  41c188:	ldr	x10, [sp, #64]
  41c18c:	ldr	x11, [x10, #72]
  41c190:	ldr	x11, [x11, #24]
  41c194:	ldr	x2, [sp, #48]
  41c198:	mov	w3, #0x336                 	// #822
  41c19c:	ldr	x4, [sp, #40]
  41c1a0:	mov	x7, x9
  41c1a4:	mov	x12, sp
  41c1a8:	str	x9, [x12]
  41c1ac:	mov	x9, sp
  41c1b0:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41c1b4:	add	x12, x12, #0xbe9
  41c1b8:	str	x12, [x9, #8]
  41c1bc:	mov	x9, sp
  41c1c0:	str	x11, [x9, #16]
  41c1c4:	bl	40a870 <log_object_internal@plt>
  41c1c8:	str	w0, [sp, #108]
  41c1cc:	ldr	w13, [sp, #108]
  41c1d0:	stur	w13, [x29, #-4]
  41c1d4:	b	41c2c0 <rename_netif+0x698>
  41c1d8:	mov	x8, xzr
  41c1dc:	str	x8, [sp, #96]
  41c1e0:	ldr	x8, [sp, #64]
  41c1e4:	ldr	x9, [x8, #64]
  41c1e8:	str	x9, [sp, #88]
  41c1ec:	mov	w10, #0x7                   	// #7
  41c1f0:	str	w10, [sp, #84]
  41c1f4:	str	wzr, [sp, #80]
  41c1f8:	ldr	x9, [sp, #88]
  41c1fc:	cbz	x9, 41c23c <rename_netif+0x614>
  41c200:	mov	w0, #0x1                   	// #1
  41c204:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c208:	ldr	w8, [sp, #84]
  41c20c:	cmp	w0, w8
  41c210:	cset	w8, ge  // ge = tcont
  41c214:	mov	w9, #0x1                   	// #1
  41c218:	eor	w8, w8, #0x1
  41c21c:	eor	w8, w8, w9
  41c220:	and	w8, w8, #0x1
  41c224:	mov	w1, w8
  41c228:	sxtw	x10, w1
  41c22c:	cbz	x10, 41c23c <rename_netif+0x614>
  41c230:	ldr	x0, [sp, #88]
  41c234:	add	x1, sp, #0x60
  41c238:	bl	40a860 <sd_device_get_sysname@plt>
  41c23c:	ldr	w0, [sp, #84]
  41c240:	ldr	w1, [sp, #80]
  41c244:	ldr	x8, [sp, #96]
  41c248:	mov	x9, xzr
  41c24c:	cmp	x8, #0x0
  41c250:	ldr	x8, [sp, #56]
  41c254:	csel	x5, x8, x9, ne  // ne = any
  41c258:	ldr	x6, [sp, #96]
  41c25c:	ldur	w10, [x29, #-36]
  41c260:	ldr	x11, [sp, #64]
  41c264:	ldr	x12, [x11, #56]
  41c268:	ldr	x13, [x11, #72]
  41c26c:	ldr	x13, [x13, #24]
  41c270:	ldr	x2, [sp, #48]
  41c274:	mov	w3, #0x338                 	// #824
  41c278:	ldr	x4, [sp, #40]
  41c27c:	mov	x7, x9
  41c280:	mov	x14, sp
  41c284:	str	x9, [x14]
  41c288:	mov	x9, sp
  41c28c:	adrp	x14, 466000 <on_inotify.__assert_in_set+0x2540>
  41c290:	add	x14, x14, #0xc1c
  41c294:	str	x14, [x9, #8]
  41c298:	mov	x9, sp
  41c29c:	str	w10, [x9, #16]
  41c2a0:	mov	x9, sp
  41c2a4:	str	x12, [x9, #24]
  41c2a8:	mov	x9, sp
  41c2ac:	str	x13, [x9, #32]
  41c2b0:	bl	40a870 <log_object_internal@plt>
  41c2b4:	str	w0, [sp, #76]
  41c2b8:	mov	w10, #0x1                   	// #1
  41c2bc:	stur	w10, [x29, #-4]
  41c2c0:	ldur	w0, [x29, #-4]
  41c2c4:	ldr	x28, [sp, #320]
  41c2c8:	ldp	x29, x30, [sp, #304]
  41c2cc:	add	sp, sp, #0x150
  41c2d0:	ret

000000000041c2d4 <update_devnode>:
  41c2d4:	sub	sp, sp, #0xf0
  41c2d8:	stp	x29, x30, [sp, #224]
  41c2dc:	add	x29, sp, #0xe0
  41c2e0:	sub	x8, x29, #0x1c
  41c2e4:	mov	x9, xzr
  41c2e8:	mov	w10, #0xfffffffe            	// #-2
  41c2ec:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  41c2f0:	add	x11, x11, #0xa46
  41c2f4:	adrp	x12, 465000 <on_inotify.__assert_in_set+0x1540>
  41c2f8:	add	x12, x12, #0xff0
  41c2fc:	add	x12, x12, #0x3
  41c300:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  41c304:	add	x13, x13, #0xc4e
  41c308:	stur	x0, [x8, #12]
  41c30c:	ldur	x14, [x8, #12]
  41c310:	ldr	x14, [x14]
  41c314:	stur	x14, [x8, #4]
  41c318:	ldur	x0, [x8, #4]
  41c31c:	mov	x1, x9
  41c320:	str	x8, [sp, #56]
  41c324:	str	w10, [sp, #52]
  41c328:	str	x11, [sp, #40]
  41c32c:	str	x12, [sp, #32]
  41c330:	str	x13, [sp, #24]
  41c334:	bl	40aa50 <sd_device_get_devnum@plt>
  41c338:	ldr	x8, [sp, #56]
  41c33c:	str	w0, [x8]
  41c340:	ldr	w10, [x8]
  41c344:	ldr	w15, [sp, #52]
  41c348:	cmp	w10, w15
  41c34c:	b.ne	41c35c <update_devnode+0x88>  // b.any
  41c350:	ldr	x8, [sp, #56]
  41c354:	str	wzr, [x8, #24]
  41c358:	b	41c868 <update_devnode+0x594>
  41c35c:	ldr	x8, [sp, #56]
  41c360:	ldr	w9, [x8]
  41c364:	cmp	w9, #0x0
  41c368:	cset	w9, ge  // ge = tcont
  41c36c:	tbnz	w9, #0, 41c438 <update_devnode+0x164>
  41c370:	mov	x8, xzr
  41c374:	stur	x8, [x29, #-40]
  41c378:	ldr	x8, [sp, #56]
  41c37c:	ldur	x9, [x8, #4]
  41c380:	stur	x9, [x29, #-48]
  41c384:	mov	w10, #0x3                   	// #3
  41c388:	stur	w10, [x29, #-52]
  41c38c:	ldr	w10, [x8]
  41c390:	stur	w10, [x29, #-56]
  41c394:	ldur	x9, [x29, #-48]
  41c398:	cbz	x9, 41c3d8 <update_devnode+0x104>
  41c39c:	mov	w0, #0x1                   	// #1
  41c3a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c3a4:	ldur	w8, [x29, #-52]
  41c3a8:	cmp	w0, w8
  41c3ac:	cset	w8, ge  // ge = tcont
  41c3b0:	mov	w9, #0x1                   	// #1
  41c3b4:	eor	w8, w8, #0x1
  41c3b8:	eor	w8, w8, w9
  41c3bc:	and	w8, w8, #0x1
  41c3c0:	mov	w1, w8
  41c3c4:	sxtw	x10, w1
  41c3c8:	cbz	x10, 41c3d8 <update_devnode+0x104>
  41c3cc:	ldur	x0, [x29, #-48]
  41c3d0:	sub	x1, x29, #0x28
  41c3d4:	bl	40a860 <sd_device_get_sysname@plt>
  41c3d8:	ldur	w0, [x29, #-52]
  41c3dc:	ldur	w1, [x29, #-56]
  41c3e0:	ldur	x8, [x29, #-40]
  41c3e4:	mov	x9, xzr
  41c3e8:	cmp	x8, #0x0
  41c3ec:	ldr	x8, [sp, #40]
  41c3f0:	csel	x5, x8, x9, ne  // ne = any
  41c3f4:	ldur	x6, [x29, #-40]
  41c3f8:	ldr	x2, [sp, #32]
  41c3fc:	mov	w3, #0x345                 	// #837
  41c400:	ldr	x4, [sp, #24]
  41c404:	mov	x7, x9
  41c408:	mov	x10, sp
  41c40c:	str	x9, [x10]
  41c410:	mov	x9, sp
  41c414:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41c418:	add	x10, x10, #0xc5d
  41c41c:	str	x10, [x9, #8]
  41c420:	bl	40a870 <log_object_internal@plt>
  41c424:	stur	w0, [x29, #-60]
  41c428:	ldur	w11, [x29, #-60]
  41c42c:	ldr	x8, [sp, #56]
  41c430:	str	w11, [x8, #24]
  41c434:	b	41c868 <update_devnode+0x594>
  41c438:	ldr	x8, [sp, #56]
  41c43c:	ldur	x9, [x8, #12]
  41c440:	ldr	x9, [x9, #16]
  41c444:	cbz	x9, 41c45c <update_devnode+0x188>
  41c448:	ldr	x8, [sp, #56]
  41c44c:	ldur	x0, [x8, #4]
  41c450:	ldur	x9, [x8, #12]
  41c454:	ldr	x1, [x9, #16]
  41c458:	bl	41df14 <udev_node_update_old_links>
  41c45c:	ldr	x8, [sp, #56]
  41c460:	ldur	x9, [x8, #12]
  41c464:	ldr	w0, [x9, #44]
  41c468:	bl	40b020 <uid_is_valid@plt>
  41c46c:	tbnz	w0, #0, 41c578 <update_devnode+0x2a4>
  41c470:	ldr	x8, [sp, #56]
  41c474:	ldur	x0, [x8, #4]
  41c478:	ldur	x9, [x8, #12]
  41c47c:	add	x1, x9, #0x2c
  41c480:	bl	40b030 <device_get_devnode_uid@plt>
  41c484:	ldr	x8, [sp, #56]
  41c488:	str	w0, [x8]
  41c48c:	ldr	w10, [x8]
  41c490:	cmp	w10, #0x0
  41c494:	cset	w10, ge  // ge = tcont
  41c498:	tbnz	w10, #0, 41c578 <update_devnode+0x2a4>
  41c49c:	ldr	x8, [sp, #56]
  41c4a0:	ldr	w9, [x8]
  41c4a4:	mov	w10, #0xfffffffe            	// #-2
  41c4a8:	cmp	w9, w10
  41c4ac:	b.eq	41c578 <update_devnode+0x2a4>  // b.none
  41c4b0:	mov	x8, xzr
  41c4b4:	stur	x8, [x29, #-72]
  41c4b8:	ldr	x8, [sp, #56]
  41c4bc:	ldur	x9, [x8, #4]
  41c4c0:	stur	x9, [x29, #-80]
  41c4c4:	mov	w10, #0x3                   	// #3
  41c4c8:	stur	w10, [x29, #-84]
  41c4cc:	ldr	w10, [x8]
  41c4d0:	stur	w10, [x29, #-88]
  41c4d4:	ldur	x9, [x29, #-80]
  41c4d8:	cbz	x9, 41c518 <update_devnode+0x244>
  41c4dc:	mov	w0, #0x1                   	// #1
  41c4e0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c4e4:	ldur	w8, [x29, #-84]
  41c4e8:	cmp	w0, w8
  41c4ec:	cset	w8, ge  // ge = tcont
  41c4f0:	mov	w9, #0x1                   	// #1
  41c4f4:	eor	w8, w8, #0x1
  41c4f8:	eor	w8, w8, w9
  41c4fc:	and	w8, w8, #0x1
  41c500:	mov	w1, w8
  41c504:	sxtw	x10, w1
  41c508:	cbz	x10, 41c518 <update_devnode+0x244>
  41c50c:	ldur	x0, [x29, #-80]
  41c510:	sub	x1, x29, #0x48
  41c514:	bl	40a860 <sd_device_get_sysname@plt>
  41c518:	ldur	w0, [x29, #-84]
  41c51c:	ldur	w1, [x29, #-88]
  41c520:	ldur	x8, [x29, #-72]
  41c524:	mov	x9, xzr
  41c528:	cmp	x8, #0x0
  41c52c:	ldr	x8, [sp, #40]
  41c530:	csel	x5, x8, x9, ne  // ne = any
  41c534:	ldur	x6, [x29, #-72]
  41c538:	ldr	x2, [sp, #32]
  41c53c:	mov	w3, #0x34e                 	// #846
  41c540:	ldr	x4, [sp, #24]
  41c544:	mov	x7, x9
  41c548:	mov	x10, sp
  41c54c:	str	x9, [x10]
  41c550:	mov	x9, sp
  41c554:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41c558:	add	x10, x10, #0xc76
  41c55c:	str	x10, [x9, #8]
  41c560:	bl	40a870 <log_object_internal@plt>
  41c564:	stur	w0, [x29, #-92]
  41c568:	ldur	w11, [x29, #-92]
  41c56c:	ldr	x8, [sp, #56]
  41c570:	str	w11, [x8, #24]
  41c574:	b	41c868 <update_devnode+0x594>
  41c578:	ldr	x8, [sp, #56]
  41c57c:	ldur	x9, [x8, #12]
  41c580:	ldr	w0, [x9, #48]
  41c584:	bl	41deec <gid_is_valid>
  41c588:	tbnz	w0, #0, 41c694 <update_devnode+0x3c0>
  41c58c:	ldr	x8, [sp, #56]
  41c590:	ldur	x0, [x8, #4]
  41c594:	ldur	x9, [x8, #12]
  41c598:	add	x1, x9, #0x30
  41c59c:	bl	40b040 <device_get_devnode_gid@plt>
  41c5a0:	ldr	x8, [sp, #56]
  41c5a4:	str	w0, [x8]
  41c5a8:	ldr	w10, [x8]
  41c5ac:	cmp	w10, #0x0
  41c5b0:	cset	w10, ge  // ge = tcont
  41c5b4:	tbnz	w10, #0, 41c694 <update_devnode+0x3c0>
  41c5b8:	ldr	x8, [sp, #56]
  41c5bc:	ldr	w9, [x8]
  41c5c0:	mov	w10, #0xfffffffe            	// #-2
  41c5c4:	cmp	w9, w10
  41c5c8:	b.eq	41c694 <update_devnode+0x3c0>  // b.none
  41c5cc:	mov	x8, xzr
  41c5d0:	stur	x8, [x29, #-104]
  41c5d4:	ldr	x8, [sp, #56]
  41c5d8:	ldur	x9, [x8, #4]
  41c5dc:	str	x9, [sp, #112]
  41c5e0:	mov	w10, #0x3                   	// #3
  41c5e4:	str	w10, [sp, #108]
  41c5e8:	ldr	w10, [x8]
  41c5ec:	str	w10, [sp, #104]
  41c5f0:	ldr	x9, [sp, #112]
  41c5f4:	cbz	x9, 41c634 <update_devnode+0x360>
  41c5f8:	mov	w0, #0x1                   	// #1
  41c5fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c600:	ldr	w8, [sp, #108]
  41c604:	cmp	w0, w8
  41c608:	cset	w8, ge  // ge = tcont
  41c60c:	mov	w9, #0x1                   	// #1
  41c610:	eor	w8, w8, #0x1
  41c614:	eor	w8, w8, w9
  41c618:	and	w8, w8, #0x1
  41c61c:	mov	w1, w8
  41c620:	sxtw	x10, w1
  41c624:	cbz	x10, 41c634 <update_devnode+0x360>
  41c628:	ldr	x0, [sp, #112]
  41c62c:	sub	x1, x29, #0x68
  41c630:	bl	40a860 <sd_device_get_sysname@plt>
  41c634:	ldr	w0, [sp, #108]
  41c638:	ldr	w1, [sp, #104]
  41c63c:	ldur	x8, [x29, #-104]
  41c640:	mov	x9, xzr
  41c644:	cmp	x8, #0x0
  41c648:	ldr	x8, [sp, #40]
  41c64c:	csel	x5, x8, x9, ne  // ne = any
  41c650:	ldur	x6, [x29, #-104]
  41c654:	ldr	x2, [sp, #32]
  41c658:	mov	w3, #0x354                 	// #852
  41c65c:	ldr	x4, [sp, #24]
  41c660:	mov	x7, x9
  41c664:	mov	x10, sp
  41c668:	str	x9, [x10]
  41c66c:	mov	x9, sp
  41c670:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41c674:	add	x10, x10, #0xc94
  41c678:	str	x10, [x9, #8]
  41c67c:	bl	40a870 <log_object_internal@plt>
  41c680:	str	w0, [sp, #100]
  41c684:	ldr	w11, [sp, #100]
  41c688:	ldr	x8, [sp, #56]
  41c68c:	str	w11, [x8, #24]
  41c690:	b	41c868 <update_devnode+0x594>
  41c694:	ldr	x8, [sp, #56]
  41c698:	ldur	x9, [x8, #12]
  41c69c:	ldr	w10, [x9, #40]
  41c6a0:	mov	w11, #0xffffffff            	// #-1
  41c6a4:	cmp	w10, w11
  41c6a8:	b.ne	41c7b4 <update_devnode+0x4e0>  // b.any
  41c6ac:	ldr	x8, [sp, #56]
  41c6b0:	ldur	x0, [x8, #4]
  41c6b4:	ldur	x9, [x8, #12]
  41c6b8:	add	x1, x9, #0x28
  41c6bc:	bl	40b050 <device_get_devnode_mode@plt>
  41c6c0:	ldr	x8, [sp, #56]
  41c6c4:	str	w0, [x8]
  41c6c8:	ldr	w10, [x8]
  41c6cc:	cmp	w10, #0x0
  41c6d0:	cset	w10, ge  // ge = tcont
  41c6d4:	tbnz	w10, #0, 41c7b4 <update_devnode+0x4e0>
  41c6d8:	ldr	x8, [sp, #56]
  41c6dc:	ldr	w9, [x8]
  41c6e0:	mov	w10, #0xfffffffe            	// #-2
  41c6e4:	cmp	w9, w10
  41c6e8:	b.eq	41c7b4 <update_devnode+0x4e0>  // b.none
  41c6ec:	mov	x8, xzr
  41c6f0:	str	x8, [sp, #88]
  41c6f4:	ldr	x8, [sp, #56]
  41c6f8:	ldur	x9, [x8, #4]
  41c6fc:	str	x9, [sp, #80]
  41c700:	mov	w10, #0x3                   	// #3
  41c704:	str	w10, [sp, #76]
  41c708:	ldr	w10, [x8]
  41c70c:	str	w10, [sp, #72]
  41c710:	ldr	x9, [sp, #80]
  41c714:	cbz	x9, 41c754 <update_devnode+0x480>
  41c718:	mov	w0, #0x1                   	// #1
  41c71c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c720:	ldr	w8, [sp, #76]
  41c724:	cmp	w0, w8
  41c728:	cset	w8, ge  // ge = tcont
  41c72c:	mov	w9, #0x1                   	// #1
  41c730:	eor	w8, w8, #0x1
  41c734:	eor	w8, w8, w9
  41c738:	and	w8, w8, #0x1
  41c73c:	mov	w1, w8
  41c740:	sxtw	x10, w1
  41c744:	cbz	x10, 41c754 <update_devnode+0x480>
  41c748:	ldr	x0, [sp, #80]
  41c74c:	add	x1, sp, #0x58
  41c750:	bl	40a860 <sd_device_get_sysname@plt>
  41c754:	ldr	w0, [sp, #76]
  41c758:	ldr	w1, [sp, #72]
  41c75c:	ldr	x8, [sp, #88]
  41c760:	mov	x9, xzr
  41c764:	cmp	x8, #0x0
  41c768:	ldr	x8, [sp, #40]
  41c76c:	csel	x5, x8, x9, ne  // ne = any
  41c770:	ldr	x6, [sp, #88]
  41c774:	ldr	x2, [sp, #32]
  41c778:	mov	w3, #0x35a                 	// #858
  41c77c:	ldr	x4, [sp, #24]
  41c780:	mov	x7, x9
  41c784:	mov	x10, sp
  41c788:	str	x9, [x10]
  41c78c:	mov	x9, sp
  41c790:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41c794:	add	x10, x10, #0xcb2
  41c798:	str	x10, [x9, #8]
  41c79c:	bl	40a870 <log_object_internal@plt>
  41c7a0:	str	w0, [sp, #68]
  41c7a4:	ldr	w11, [sp, #68]
  41c7a8:	ldr	x8, [sp, #56]
  41c7ac:	str	w11, [x8, #24]
  41c7b0:	b	41c868 <update_devnode+0x594>
  41c7b4:	ldr	x8, [sp, #56]
  41c7b8:	ldur	x9, [x8, #12]
  41c7bc:	ldr	w10, [x9, #40]
  41c7c0:	mov	w11, #0xffffffff            	// #-1
  41c7c4:	cmp	w10, w11
  41c7c8:	b.ne	41c80c <update_devnode+0x538>  // b.any
  41c7cc:	ldr	x8, [sp, #56]
  41c7d0:	ldur	x9, [x8, #12]
  41c7d4:	ldr	w0, [x9, #48]
  41c7d8:	bl	41deec <gid_is_valid>
  41c7dc:	tbnz	w0, #0, 41c7e4 <update_devnode+0x510>
  41c7e0:	b	41c80c <update_devnode+0x538>
  41c7e4:	ldr	x8, [sp, #56]
  41c7e8:	ldur	x9, [x8, #12]
  41c7ec:	ldr	w10, [x9, #48]
  41c7f0:	cmp	w10, #0x0
  41c7f4:	cset	w10, ls  // ls = plast
  41c7f8:	tbnz	w10, #0, 41c80c <update_devnode+0x538>
  41c7fc:	ldr	x8, [sp, #56]
  41c800:	ldur	x9, [x8, #12]
  41c804:	mov	w10, #0x1b0                 	// #432
  41c808:	str	w10, [x9, #40]
  41c80c:	ldr	x8, [sp, #56]
  41c810:	ldur	x0, [x8, #4]
  41c814:	mov	w9, wzr
  41c818:	mov	w1, w9
  41c81c:	bl	40aba0 <device_for_action@plt>
  41c820:	mov	w9, #0x1                   	// #1
  41c824:	and	w9, w0, w9
  41c828:	strb	w9, [sp, #67]
  41c82c:	ldr	x8, [sp, #56]
  41c830:	ldur	x0, [x8, #4]
  41c834:	ldrb	w9, [sp, #67]
  41c838:	ldur	x10, [x8, #12]
  41c83c:	ldr	w2, [x10, #40]
  41c840:	ldur	x10, [x8, #12]
  41c844:	ldr	w3, [x10, #44]
  41c848:	ldur	x10, [x8, #12]
  41c84c:	ldr	w4, [x10, #48]
  41c850:	ldur	x10, [x8, #12]
  41c854:	ldr	x5, [x10, #56]
  41c858:	and	w1, w9, #0x1
  41c85c:	bl	41e794 <udev_node_add>
  41c860:	ldr	x8, [sp, #56]
  41c864:	str	w0, [x8, #24]
  41c868:	ldr	x8, [sp, #56]
  41c86c:	ldr	w0, [x8, #24]
  41c870:	ldp	x29, x30, [sp, #224]
  41c874:	add	sp, sp, #0xf0
  41c878:	ret

000000000041c87c <udev_event_execute_run>:
  41c87c:	sub	sp, sp, #0x1f0
  41c880:	stp	x29, x30, [sp, #464]
  41c884:	str	x28, [sp, #480]
  41c888:	add	x29, sp, #0x1d0
  41c88c:	sub	x8, x29, #0x80
  41c890:	mov	w9, #0xfffffffe            	// #-2
  41c894:	mov	x10, xzr
  41c898:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  41c89c:	add	x11, x11, #0xa46
  41c8a0:	adrp	x12, 465000 <on_inotify.__assert_in_set+0x1540>
  41c8a4:	add	x12, x12, #0xff0
  41c8a8:	add	x12, x12, #0x3
  41c8ac:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  41c8b0:	add	x13, x13, #0x3f0
  41c8b4:	sub	x14, x29, #0x48
  41c8b8:	str	x0, [x8, #120]
  41c8bc:	str	x1, [x8, #112]
  41c8c0:	stur	w9, [x29, #-72]
  41c8c4:	str	x10, [x14, #8]
  41c8c8:	ldur	q0, [x8, #56]
  41c8cc:	str	q0, [x8, #80]
  41c8d0:	str	x8, [sp, #120]
  41c8d4:	str	x11, [sp, #112]
  41c8d8:	str	x12, [sp, #104]
  41c8dc:	str	x13, [sp, #96]
  41c8e0:	ldr	x8, [sp, #120]
  41c8e4:	ldr	x9, [x8, #120]
  41c8e8:	ldr	x0, [x9, #64]
  41c8ec:	sub	x1, x29, #0x30
  41c8f0:	sub	x2, x29, #0x20
  41c8f4:	sub	x3, x29, #0x18
  41c8f8:	bl	41cf20 <ordered_hashmap_iterate>
  41c8fc:	tbnz	w0, #0, 41c904 <udev_event_execute_run+0x88>
  41c900:	b	41cf10 <udev_event_execute_run+0x694>
  41c904:	ldr	x8, [sp, #120]
  41c908:	ldr	x9, [x8, #96]
  41c90c:	subs	x9, x9, #0x1
  41c910:	stur	w9, [x29, #-76]
  41c914:	ldur	w9, [x29, #-76]
  41c918:	mov	w10, #0xffffffff            	// #-1
  41c91c:	cmp	w9, w10
  41c920:	b.eq	41caf8 <udev_event_execute_run+0x27c>  // b.none
  41c924:	mov	x8, xzr
  41c928:	ldr	x9, [sp, #120]
  41c92c:	str	x8, [x9, #40]
  41c930:	ldr	x8, [x9, #120]
  41c934:	ldr	x8, [x8]
  41c938:	str	x8, [x9, #32]
  41c93c:	mov	w10, #0x7                   	// #7
  41c940:	stur	w10, [x29, #-100]
  41c944:	stur	wzr, [x29, #-104]
  41c948:	ldr	x8, [x9, #32]
  41c94c:	cbz	x8, 41c990 <udev_event_execute_run+0x114>
  41c950:	mov	w0, #0x1                   	// #1
  41c954:	bl	40a3f0 <log_get_max_level_realm@plt>
  41c958:	ldur	w8, [x29, #-100]
  41c95c:	cmp	w0, w8
  41c960:	cset	w8, ge  // ge = tcont
  41c964:	mov	w9, #0x1                   	// #1
  41c968:	eor	w8, w8, #0x1
  41c96c:	eor	w8, w8, w9
  41c970:	and	w8, w8, #0x1
  41c974:	mov	w1, w8
  41c978:	sxtw	x10, w1
  41c97c:	cbz	x10, 41c990 <udev_event_execute_run+0x114>
  41c980:	ldr	x8, [sp, #120]
  41c984:	ldr	x0, [x8, #32]
  41c988:	sub	x1, x29, #0x58
  41c98c:	bl	40a860 <sd_device_get_sysname@plt>
  41c990:	ldur	w0, [x29, #-100]
  41c994:	ldur	w1, [x29, #-104]
  41c998:	ldr	x8, [sp, #120]
  41c99c:	ldr	x9, [x8, #40]
  41c9a0:	mov	x10, xzr
  41c9a4:	cmp	x9, #0x0
  41c9a8:	ldr	x9, [sp, #112]
  41c9ac:	csel	x5, x9, x10, ne  // ne = any
  41c9b0:	ldr	x6, [x8, #40]
  41c9b4:	ldr	x11, [x8, #104]
  41c9b8:	ldr	x2, [sp, #104]
  41c9bc:	mov	w3, #0x3ea                 	// #1002
  41c9c0:	ldr	x4, [sp, #96]
  41c9c4:	mov	x7, x10
  41c9c8:	mov	x12, sp
  41c9cc:	str	x10, [x12]
  41c9d0:	mov	x10, sp
  41c9d4:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41c9d8:	add	x12, x12, #0x407
  41c9dc:	str	x12, [x10, #8]
  41c9e0:	mov	x10, sp
  41c9e4:	str	x11, [x10, #16]
  41c9e8:	bl	40a870 <log_object_internal@plt>
  41c9ec:	stur	w0, [x29, #-108]
  41c9f0:	ldr	x8, [sp, #120]
  41c9f4:	ldr	x9, [x8, #120]
  41c9f8:	ldr	x0, [x9]
  41c9fc:	ldur	w1, [x29, #-76]
  41ca00:	ldr	x2, [x8, #104]
  41ca04:	mov	w13, wzr
  41ca08:	and	w3, w13, #0x1
  41ca0c:	bl	43e880 <udev_builtin_run>
  41ca10:	stur	w0, [x29, #-52]
  41ca14:	ldur	w13, [x29, #-52]
  41ca18:	cmp	w13, #0x0
  41ca1c:	cset	w13, ge  // ge = tcont
  41ca20:	tbnz	w13, #0, 41caf4 <udev_event_execute_run+0x278>
  41ca24:	mov	x8, xzr
  41ca28:	ldr	x9, [sp, #120]
  41ca2c:	str	x8, [x9, #8]
  41ca30:	ldr	x8, [x9, #120]
  41ca34:	ldr	x8, [x8]
  41ca38:	str	x8, [x9]
  41ca3c:	mov	w10, #0x7                   	// #7
  41ca40:	stur	w10, [x29, #-132]
  41ca44:	ldur	w10, [x29, #-52]
  41ca48:	stur	w10, [x29, #-136]
  41ca4c:	ldr	x8, [x9]
  41ca50:	cbz	x8, 41ca94 <udev_event_execute_run+0x218>
  41ca54:	mov	w0, #0x1                   	// #1
  41ca58:	bl	40a3f0 <log_get_max_level_realm@plt>
  41ca5c:	ldur	w8, [x29, #-132]
  41ca60:	cmp	w0, w8
  41ca64:	cset	w8, ge  // ge = tcont
  41ca68:	mov	w9, #0x1                   	// #1
  41ca6c:	eor	w8, w8, #0x1
  41ca70:	eor	w8, w8, w9
  41ca74:	and	w8, w8, #0x1
  41ca78:	mov	w1, w8
  41ca7c:	sxtw	x10, w1
  41ca80:	cbz	x10, 41ca94 <udev_event_execute_run+0x218>
  41ca84:	ldr	x8, [sp, #120]
  41ca88:	ldr	x0, [x8]
  41ca8c:	sub	x1, x29, #0x78
  41ca90:	bl	40a860 <sd_device_get_sysname@plt>
  41ca94:	ldur	w0, [x29, #-132]
  41ca98:	ldur	w1, [x29, #-136]
  41ca9c:	ldr	x8, [sp, #120]
  41caa0:	ldr	x9, [x8, #8]
  41caa4:	mov	x10, xzr
  41caa8:	cmp	x9, #0x0
  41caac:	ldr	x9, [sp, #112]
  41cab0:	csel	x5, x9, x10, ne  // ne = any
  41cab4:	ldr	x6, [x8, #8]
  41cab8:	ldr	x11, [x8, #104]
  41cabc:	ldr	x2, [sp, #104]
  41cac0:	mov	w3, #0x3ed                 	// #1005
  41cac4:	ldr	x4, [sp, #96]
  41cac8:	mov	x7, x10
  41cacc:	mov	x12, sp
  41cad0:	str	x10, [x12]
  41cad4:	mov	x10, sp
  41cad8:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41cadc:	add	x12, x12, #0x425
  41cae0:	str	x12, [x10, #8]
  41cae4:	mov	x10, sp
  41cae8:	str	x11, [x10, #16]
  41caec:	bl	40a870 <log_object_internal@plt>
  41caf0:	stur	w0, [x29, #-140]
  41caf4:	b	41cf0c <udev_event_execute_run+0x690>
  41caf8:	ldr	x8, [sp, #120]
  41cafc:	ldr	x9, [x8, #120]
  41cb00:	ldr	x9, [x9, #72]
  41cb04:	cmp	x9, #0x0
  41cb08:	cset	w10, ls  // ls = plast
  41cb0c:	tbnz	w10, #0, 41cc54 <udev_event_execute_run+0x3d8>
  41cb10:	mov	x8, xzr
  41cb14:	stur	x8, [x29, #-216]
  41cb18:	ldr	x8, [sp, #120]
  41cb1c:	ldr	x9, [x8, #120]
  41cb20:	ldr	x9, [x9]
  41cb24:	stur	x9, [x29, #-224]
  41cb28:	mov	w10, #0x7                   	// #7
  41cb2c:	stur	w10, [x29, #-228]
  41cb30:	str	wzr, [sp, #232]
  41cb34:	ldur	x9, [x29, #-224]
  41cb38:	cbz	x9, 41cb78 <udev_event_execute_run+0x2fc>
  41cb3c:	mov	w0, #0x1                   	// #1
  41cb40:	bl	40a3f0 <log_get_max_level_realm@plt>
  41cb44:	ldur	w8, [x29, #-228]
  41cb48:	cmp	w0, w8
  41cb4c:	cset	w8, ge  // ge = tcont
  41cb50:	mov	w9, #0x1                   	// #1
  41cb54:	eor	w8, w8, #0x1
  41cb58:	eor	w8, w8, w9
  41cb5c:	and	w8, w8, #0x1
  41cb60:	mov	w1, w8
  41cb64:	sxtw	x10, w1
  41cb68:	cbz	x10, 41cb78 <udev_event_execute_run+0x2fc>
  41cb6c:	ldur	x0, [x29, #-224]
  41cb70:	sub	x1, x29, #0xd8
  41cb74:	bl	40a860 <sd_device_get_sysname@plt>
  41cb78:	ldur	w0, [x29, #-228]
  41cb7c:	ldr	w1, [sp, #232]
  41cb80:	ldur	x8, [x29, #-216]
  41cb84:	mov	x9, xzr
  41cb88:	cmp	x8, #0x0
  41cb8c:	ldr	x8, [sp, #112]
  41cb90:	csel	x5, x8, x9, ne  // ne = any
  41cb94:	ldur	x6, [x29, #-216]
  41cb98:	ldr	x10, [sp, #120]
  41cb9c:	ldr	x11, [x10, #104]
  41cba0:	ldr	x12, [x10, #120]
  41cba4:	ldr	x2, [x12, #72]
  41cba8:	sub	x12, x29, #0xcc
  41cbac:	str	w0, [sp, #92]
  41cbb0:	mov	x0, x12
  41cbb4:	mov	x12, #0x40                  	// #64
  41cbb8:	str	w1, [sp, #88]
  41cbbc:	mov	x1, x12
  41cbc0:	mov	x3, #0x4240                	// #16960
  41cbc4:	movk	x3, #0xf, lsl #16
  41cbc8:	str	x9, [sp, #80]
  41cbcc:	str	x5, [sp, #72]
  41cbd0:	str	x6, [sp, #64]
  41cbd4:	str	x11, [sp, #56]
  41cbd8:	bl	40b060 <format_timespan@plt>
  41cbdc:	ldr	w13, [sp, #92]
  41cbe0:	str	x0, [sp, #48]
  41cbe4:	mov	w0, w13
  41cbe8:	ldr	w1, [sp, #88]
  41cbec:	ldr	x2, [sp, #104]
  41cbf0:	mov	w3, #0x3f3                 	// #1011
  41cbf4:	ldr	x4, [sp, #96]
  41cbf8:	ldr	x5, [sp, #72]
  41cbfc:	ldr	x6, [sp, #64]
  41cc00:	ldr	x7, [sp, #80]
  41cc04:	mov	x8, sp
  41cc08:	ldr	x9, [sp, #80]
  41cc0c:	str	x9, [x8]
  41cc10:	mov	x8, sp
  41cc14:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41cc18:	add	x10, x10, #0x457
  41cc1c:	str	x10, [x8, #8]
  41cc20:	mov	x8, sp
  41cc24:	ldr	x10, [sp, #56]
  41cc28:	str	x10, [x8, #16]
  41cc2c:	mov	x8, sp
  41cc30:	ldr	x11, [sp, #48]
  41cc34:	str	x11, [x8, #24]
  41cc38:	bl	40a870 <log_object_internal@plt>
  41cc3c:	str	w0, [sp, #228]
  41cc40:	ldr	x8, [sp, #120]
  41cc44:	ldr	x9, [x8, #120]
  41cc48:	ldr	x9, [x9, #72]
  41cc4c:	mov	w0, w9
  41cc50:	bl	40b070 <usleep@plt>
  41cc54:	mov	x8, xzr
  41cc58:	str	x8, [sp, #216]
  41cc5c:	ldr	x8, [sp, #120]
  41cc60:	ldr	x9, [x8, #120]
  41cc64:	ldr	x9, [x9]
  41cc68:	str	x9, [sp, #208]
  41cc6c:	mov	w10, #0x7                   	// #7
  41cc70:	str	w10, [sp, #204]
  41cc74:	str	wzr, [sp, #200]
  41cc78:	ldr	x9, [sp, #208]
  41cc7c:	cbz	x9, 41ccbc <udev_event_execute_run+0x440>
  41cc80:	mov	w0, #0x1                   	// #1
  41cc84:	bl	40a3f0 <log_get_max_level_realm@plt>
  41cc88:	ldr	w8, [sp, #204]
  41cc8c:	cmp	w0, w8
  41cc90:	cset	w8, ge  // ge = tcont
  41cc94:	mov	w9, #0x1                   	// #1
  41cc98:	eor	w8, w8, #0x1
  41cc9c:	eor	w8, w8, w9
  41cca0:	and	w8, w8, #0x1
  41cca4:	mov	w1, w8
  41cca8:	sxtw	x10, w1
  41ccac:	cbz	x10, 41ccbc <udev_event_execute_run+0x440>
  41ccb0:	ldr	x0, [sp, #208]
  41ccb4:	add	x1, sp, #0xd8
  41ccb8:	bl	40a860 <sd_device_get_sysname@plt>
  41ccbc:	ldr	w0, [sp, #204]
  41ccc0:	ldr	w1, [sp, #200]
  41ccc4:	ldr	x8, [sp, #216]
  41ccc8:	mov	x9, xzr
  41cccc:	cmp	x8, #0x0
  41ccd0:	ldr	x8, [sp, #112]
  41ccd4:	csel	x5, x8, x9, ne  // ne = any
  41ccd8:	ldr	x6, [sp, #216]
  41ccdc:	ldr	x10, [sp, #120]
  41cce0:	ldr	x11, [x10, #104]
  41cce4:	ldr	x2, [sp, #104]
  41cce8:	mov	w3, #0x3f7                 	// #1015
  41ccec:	ldr	x4, [sp, #96]
  41ccf0:	mov	x7, x9
  41ccf4:	mov	x12, sp
  41ccf8:	str	x9, [x12]
  41ccfc:	mov	x12, sp
  41cd00:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  41cd04:	add	x13, x13, #0x47a
  41cd08:	str	x13, [x12, #8]
  41cd0c:	mov	x12, sp
  41cd10:	str	x11, [x12, #16]
  41cd14:	str	x9, [sp, #40]
  41cd18:	bl	40a870 <log_object_internal@plt>
  41cd1c:	str	w0, [sp, #196]
  41cd20:	ldr	x8, [sp, #120]
  41cd24:	ldr	x0, [x8, #120]
  41cd28:	ldr	x1, [x8, #112]
  41cd2c:	ldr	x3, [x8, #104]
  41cd30:	mov	w14, wzr
  41cd34:	and	w2, w14, #0x1
  41cd38:	ldr	x4, [sp, #40]
  41cd3c:	ldr	x5, [sp, #40]
  41cd40:	bl	419e80 <udev_event_spawn>
  41cd44:	stur	w0, [x29, #-52]
  41cd48:	ldur	w14, [x29, #-52]
  41cd4c:	cmp	w14, #0x0
  41cd50:	cset	w14, ge  // ge = tcont
  41cd54:	tbnz	w14, #0, 41ce28 <udev_event_execute_run+0x5ac>
  41cd58:	mov	x8, xzr
  41cd5c:	str	x8, [sp, #184]
  41cd60:	ldr	x8, [sp, #120]
  41cd64:	ldr	x9, [x8, #120]
  41cd68:	ldr	x9, [x9]
  41cd6c:	str	x9, [sp, #176]
  41cd70:	mov	w10, #0x4                   	// #4
  41cd74:	str	w10, [sp, #172]
  41cd78:	ldur	w10, [x29, #-52]
  41cd7c:	str	w10, [sp, #168]
  41cd80:	ldr	x9, [sp, #176]
  41cd84:	cbz	x9, 41cdc4 <udev_event_execute_run+0x548>
  41cd88:	mov	w0, #0x1                   	// #1
  41cd8c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41cd90:	ldr	w8, [sp, #172]
  41cd94:	cmp	w0, w8
  41cd98:	cset	w8, ge  // ge = tcont
  41cd9c:	mov	w9, #0x1                   	// #1
  41cda0:	eor	w8, w8, #0x1
  41cda4:	eor	w8, w8, w9
  41cda8:	and	w8, w8, #0x1
  41cdac:	mov	w1, w8
  41cdb0:	sxtw	x10, w1
  41cdb4:	cbz	x10, 41cdc4 <udev_event_execute_run+0x548>
  41cdb8:	ldr	x0, [sp, #176]
  41cdbc:	add	x1, sp, #0xb8
  41cdc0:	bl	40a860 <sd_device_get_sysname@plt>
  41cdc4:	ldr	w0, [sp, #172]
  41cdc8:	ldr	w1, [sp, #168]
  41cdcc:	ldr	x8, [sp, #184]
  41cdd0:	mov	x9, xzr
  41cdd4:	cmp	x8, #0x0
  41cdd8:	ldr	x8, [sp, #112]
  41cddc:	csel	x5, x8, x9, ne  // ne = any
  41cde0:	ldr	x6, [sp, #184]
  41cde4:	ldr	x10, [sp, #120]
  41cde8:	ldr	x11, [x10, #104]
  41cdec:	ldr	x2, [sp, #104]
  41cdf0:	mov	w3, #0x3fa                 	// #1018
  41cdf4:	ldr	x4, [sp, #96]
  41cdf8:	mov	x7, x9
  41cdfc:	mov	x12, sp
  41ce00:	str	x9, [x12]
  41ce04:	mov	x9, sp
  41ce08:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41ce0c:	add	x12, x12, #0x48f
  41ce10:	str	x12, [x9, #8]
  41ce14:	mov	x9, sp
  41ce18:	str	x11, [x9, #16]
  41ce1c:	bl	40a870 <log_object_internal@plt>
  41ce20:	str	w0, [sp, #164]
  41ce24:	b	41cf0c <udev_event_execute_run+0x690>
  41ce28:	ldur	w8, [x29, #-52]
  41ce2c:	cmp	w8, #0x0
  41ce30:	cset	w8, le
  41ce34:	tbnz	w8, #0, 41cf0c <udev_event_execute_run+0x690>
  41ce38:	mov	x8, xzr
  41ce3c:	str	x8, [sp, #152]
  41ce40:	ldr	x8, [sp, #120]
  41ce44:	ldr	x9, [x8, #120]
  41ce48:	ldr	x9, [x9]
  41ce4c:	str	x9, [sp, #144]
  41ce50:	mov	w10, #0x7                   	// #7
  41ce54:	str	w10, [sp, #140]
  41ce58:	str	wzr, [sp, #136]
  41ce5c:	ldr	x9, [sp, #144]
  41ce60:	cbz	x9, 41cea0 <udev_event_execute_run+0x624>
  41ce64:	mov	w0, #0x1                   	// #1
  41ce68:	bl	40a3f0 <log_get_max_level_realm@plt>
  41ce6c:	ldr	w8, [sp, #140]
  41ce70:	cmp	w0, w8
  41ce74:	cset	w8, ge  // ge = tcont
  41ce78:	mov	w9, #0x1                   	// #1
  41ce7c:	eor	w8, w8, #0x1
  41ce80:	eor	w8, w8, w9
  41ce84:	and	w8, w8, #0x1
  41ce88:	mov	w1, w8
  41ce8c:	sxtw	x10, w1
  41ce90:	cbz	x10, 41cea0 <udev_event_execute_run+0x624>
  41ce94:	ldr	x0, [sp, #144]
  41ce98:	add	x1, sp, #0x98
  41ce9c:	bl	40a860 <sd_device_get_sysname@plt>
  41cea0:	ldr	w0, [sp, #140]
  41cea4:	ldr	w1, [sp, #136]
  41cea8:	ldr	x8, [sp, #152]
  41ceac:	mov	x9, xzr
  41ceb0:	cmp	x8, #0x0
  41ceb4:	ldr	x8, [sp, #112]
  41ceb8:	csel	x5, x8, x9, ne  // ne = any
  41cebc:	ldr	x6, [sp, #152]
  41cec0:	ldr	x10, [sp, #120]
  41cec4:	ldr	x11, [x10, #104]
  41cec8:	ldur	w12, [x29, #-52]
  41cecc:	ldr	x2, [sp, #104]
  41ced0:	mov	w3, #0x3fc                 	// #1020
  41ced4:	ldr	x4, [sp, #96]
  41ced8:	mov	x7, x9
  41cedc:	mov	x13, sp
  41cee0:	str	x9, [x13]
  41cee4:	mov	x9, sp
  41cee8:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  41ceec:	add	x13, x13, #0x4b4
  41cef0:	str	x13, [x9, #8]
  41cef4:	mov	x9, sp
  41cef8:	str	x11, [x9, #16]
  41cefc:	mov	x9, sp
  41cf00:	str	w12, [x9, #24]
  41cf04:	bl	40a870 <log_object_internal@plt>
  41cf08:	str	w0, [sp, #132]
  41cf0c:	b	41c8e0 <udev_event_execute_run+0x64>
  41cf10:	ldr	x28, [sp, #480]
  41cf14:	ldp	x29, x30, [sp, #464]
  41cf18:	add	sp, sp, #0x1f0
  41cf1c:	ret

000000000041cf20 <ordered_hashmap_iterate>:
  41cf20:	sub	sp, sp, #0x30
  41cf24:	stp	x29, x30, [sp, #32]
  41cf28:	add	x29, sp, #0x20
  41cf2c:	stur	x0, [x29, #-8]
  41cf30:	str	x1, [sp, #16]
  41cf34:	str	x2, [sp, #8]
  41cf38:	str	x3, [sp]
  41cf3c:	ldur	x0, [x29, #-8]
  41cf40:	ldr	x1, [sp, #16]
  41cf44:	ldr	x2, [sp, #8]
  41cf48:	ldr	x3, [sp]
  41cf4c:	bl	40a9c0 <internal_hashmap_iterate@plt>
  41cf50:	and	w0, w0, #0x1
  41cf54:	ldp	x29, x30, [sp, #32]
  41cf58:	add	sp, sp, #0x30
  41cf5c:	ret

000000000041cf60 <size_multiply_overflow>:
  41cf60:	sub	sp, sp, #0x20
  41cf64:	str	x0, [sp, #24]
  41cf68:	str	x1, [sp, #16]
  41cf6c:	ldr	x8, [sp, #16]
  41cf70:	mov	w9, #0x0                   	// #0
  41cf74:	str	w9, [sp, #12]
  41cf78:	cbz	x8, 41cf98 <size_multiply_overflow+0x38>
  41cf7c:	ldr	x8, [sp, #24]
  41cf80:	ldr	x9, [sp, #16]
  41cf84:	mov	x10, #0xffffffffffffffff    	// #-1
  41cf88:	udiv	x9, x10, x9
  41cf8c:	cmp	x8, x9
  41cf90:	cset	w11, hi  // hi = pmore
  41cf94:	str	w11, [sp, #12]
  41cf98:	ldr	w8, [sp, #12]
  41cf9c:	mov	w9, #0x1                   	// #1
  41cfa0:	eor	w8, w8, #0x1
  41cfa4:	eor	w8, w8, w9
  41cfa8:	and	w8, w8, #0x1
  41cfac:	mov	w0, w8
  41cfb0:	sxtw	x10, w0
  41cfb4:	cmp	x10, #0x0
  41cfb8:	cset	w8, ne  // ne = any
  41cfbc:	and	w0, w8, #0x1
  41cfc0:	add	sp, sp, #0x20
  41cfc4:	ret

000000000041cfc8 <startswith>:
  41cfc8:	sub	sp, sp, #0x30
  41cfcc:	stp	x29, x30, [sp, #32]
  41cfd0:	add	x29, sp, #0x20
  41cfd4:	str	x0, [sp, #16]
  41cfd8:	str	x1, [sp, #8]
  41cfdc:	ldr	x0, [sp, #8]
  41cfe0:	bl	40a800 <strlen@plt>
  41cfe4:	str	x0, [sp]
  41cfe8:	ldr	x0, [sp, #16]
  41cfec:	ldr	x1, [sp, #8]
  41cff0:	ldr	x2, [sp]
  41cff4:	bl	40a810 <strncmp@plt>
  41cff8:	cbnz	w0, 41d010 <startswith+0x48>
  41cffc:	ldr	x8, [sp, #16]
  41d000:	ldr	x9, [sp]
  41d004:	add	x8, x8, x9
  41d008:	stur	x8, [x29, #-8]
  41d00c:	b	41d018 <startswith+0x50>
  41d010:	mov	x8, xzr
  41d014:	stur	x8, [x29, #-8]
  41d018:	ldur	x0, [x29, #-8]
  41d01c:	ldp	x29, x30, [sp, #32]
  41d020:	add	sp, sp, #0x30
  41d024:	ret

000000000041d028 <skip_leading_chars>:
  41d028:	sub	sp, sp, #0x30
  41d02c:	stp	x29, x30, [sp, #32]
  41d030:	add	x29, sp, #0x20
  41d034:	str	x0, [sp, #16]
  41d038:	str	x1, [sp, #8]
  41d03c:	ldr	x8, [sp, #16]
  41d040:	cbnz	x8, 41d050 <skip_leading_chars+0x28>
  41d044:	mov	x8, xzr
  41d048:	stur	x8, [x29, #-8]
  41d04c:	b	41d084 <skip_leading_chars+0x5c>
  41d050:	ldr	x8, [sp, #8]
  41d054:	cbnz	x8, 41d064 <skip_leading_chars+0x3c>
  41d058:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  41d05c:	add	x8, x8, #0x5b7
  41d060:	str	x8, [sp, #8]
  41d064:	ldr	x8, [sp, #16]
  41d068:	ldr	x0, [sp, #16]
  41d06c:	ldr	x1, [sp, #8]
  41d070:	str	x8, [sp]
  41d074:	bl	40b080 <strspn@plt>
  41d078:	ldr	x8, [sp]
  41d07c:	add	x9, x8, x0
  41d080:	stur	x9, [x29, #-8]
  41d084:	ldur	x0, [x29, #-8]
  41d088:	ldp	x29, x30, [sp, #32]
  41d08c:	add	sp, sp, #0x30
  41d090:	ret

000000000041d094 <safe_atou>:
  41d094:	sub	sp, sp, #0x20
  41d098:	stp	x29, x30, [sp, #16]
  41d09c:	add	x29, sp, #0x10
  41d0a0:	mov	w8, wzr
  41d0a4:	str	x0, [sp, #8]
  41d0a8:	str	x1, [sp]
  41d0ac:	ldr	x0, [sp, #8]
  41d0b0:	ldr	x2, [sp]
  41d0b4:	mov	w1, w8
  41d0b8:	bl	40a7e0 <safe_atou_full@plt>
  41d0bc:	ldp	x29, x30, [sp, #16]
  41d0c0:	add	sp, sp, #0x20
  41d0c4:	ret

000000000041d0c8 <sd_event_unrefp>:
  41d0c8:	sub	sp, sp, #0x20
  41d0cc:	stp	x29, x30, [sp, #16]
  41d0d0:	add	x29, sp, #0x10
  41d0d4:	str	x0, [sp, #8]
  41d0d8:	ldr	x8, [sp, #8]
  41d0dc:	ldr	x8, [x8]
  41d0e0:	cbz	x8, 41d0f0 <sd_event_unrefp+0x28>
  41d0e4:	ldr	x8, [sp, #8]
  41d0e8:	ldr	x0, [x8]
  41d0ec:	bl	40a790 <sd_event_unref@plt>
  41d0f0:	ldp	x29, x30, [sp, #16]
  41d0f4:	add	sp, sp, #0x20
  41d0f8:	ret

000000000041d0fc <on_spawn_timeout_warning>:
  41d0fc:	sub	sp, sp, #0x100
  41d100:	stp	x29, x30, [sp, #240]
  41d104:	add	x29, sp, #0xf0
  41d108:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  41d10c:	add	x8, x8, #0xff0
  41d110:	add	x8, x8, #0x3
  41d114:	stur	x0, [x29, #-8]
  41d118:	stur	x1, [x29, #-16]
  41d11c:	stur	x2, [x29, #-24]
  41d120:	ldur	x9, [x29, #-24]
  41d124:	stur	x9, [x29, #-32]
  41d128:	str	x8, [sp, #104]
  41d12c:	ldur	x8, [x29, #-32]
  41d130:	cmp	x8, #0x0
  41d134:	cset	w9, ne  // ne = any
  41d138:	mov	w10, #0x1                   	// #1
  41d13c:	eor	w9, w9, #0x1
  41d140:	eor	w9, w9, w10
  41d144:	eor	w9, w9, w10
  41d148:	and	w9, w9, #0x1
  41d14c:	mov	w0, w9
  41d150:	sxtw	x8, w0
  41d154:	cbz	x8, 41d178 <on_spawn_timeout_warning+0x7c>
  41d158:	mov	w0, #0x1                   	// #1
  41d15c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41d160:	add	x1, x1, #0x6ec
  41d164:	ldr	x2, [sp, #104]
  41d168:	mov	w3, #0x257                 	// #599
  41d16c:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d170:	add	x4, x4, #0x70a
  41d174:	bl	40a540 <log_assert_failed_realm@plt>
  41d178:	mov	x8, xzr
  41d17c:	stur	x8, [x29, #-104]
  41d180:	ldur	x8, [x29, #-32]
  41d184:	ldr	x8, [x8]
  41d188:	stur	x8, [x29, #-112]
  41d18c:	mov	w9, #0x4                   	// #4
  41d190:	stur	w9, [x29, #-116]
  41d194:	str	wzr, [sp, #120]
  41d198:	ldur	x8, [x29, #-112]
  41d19c:	cbz	x8, 41d1dc <on_spawn_timeout_warning+0xe0>
  41d1a0:	mov	w0, #0x1                   	// #1
  41d1a4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41d1a8:	ldur	w8, [x29, #-116]
  41d1ac:	cmp	w0, w8
  41d1b0:	cset	w8, ge  // ge = tcont
  41d1b4:	mov	w9, #0x1                   	// #1
  41d1b8:	eor	w8, w8, #0x1
  41d1bc:	eor	w8, w8, w9
  41d1c0:	and	w8, w8, #0x1
  41d1c4:	mov	w1, w8
  41d1c8:	sxtw	x10, w1
  41d1cc:	cbz	x10, 41d1dc <on_spawn_timeout_warning+0xe0>
  41d1d0:	ldur	x0, [x29, #-112]
  41d1d4:	sub	x1, x29, #0x68
  41d1d8:	bl	40a860 <sd_device_get_sysname@plt>
  41d1dc:	ldur	w0, [x29, #-116]
  41d1e0:	ldr	w1, [sp, #120]
  41d1e4:	ldur	x8, [x29, #-104]
  41d1e8:	mov	x9, xzr
  41d1ec:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41d1f0:	add	x10, x10, #0xa46
  41d1f4:	cmp	x8, #0x0
  41d1f8:	csel	x5, x10, x9, ne  // ne = any
  41d1fc:	ldur	x6, [x29, #-104]
  41d200:	ldur	x8, [x29, #-32]
  41d204:	ldr	x8, [x8, #8]
  41d208:	ldur	x10, [x29, #-32]
  41d20c:	ldr	w11, [x10, #16]
  41d210:	ldur	x10, [x29, #-32]
  41d214:	ldr	x2, [x10, #24]
  41d218:	sub	x10, x29, #0x60
  41d21c:	str	w0, [sp, #100]
  41d220:	mov	x0, x10
  41d224:	mov	x10, #0x40                  	// #64
  41d228:	str	w1, [sp, #96]
  41d22c:	mov	x1, x10
  41d230:	mov	x3, #0x4240                	// #16960
  41d234:	movk	x3, #0xf, lsl #16
  41d238:	str	x9, [sp, #88]
  41d23c:	str	x5, [sp, #80]
  41d240:	str	x6, [sp, #72]
  41d244:	str	x8, [sp, #64]
  41d248:	str	w11, [sp, #60]
  41d24c:	bl	40b060 <format_timespan@plt>
  41d250:	ldr	w11, [sp, #100]
  41d254:	str	x0, [sp, #48]
  41d258:	mov	w0, w11
  41d25c:	ldr	w1, [sp, #96]
  41d260:	ldr	x2, [sp, #104]
  41d264:	mov	w3, #0x25b                 	// #603
  41d268:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d26c:	add	x4, x4, #0x74c
  41d270:	ldr	x5, [sp, #80]
  41d274:	ldr	x6, [sp, #72]
  41d278:	ldr	x7, [sp, #88]
  41d27c:	mov	x8, sp
  41d280:	ldr	x9, [sp, #88]
  41d284:	str	x9, [x8]
  41d288:	mov	x8, sp
  41d28c:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41d290:	add	x10, x10, #0x765
  41d294:	str	x10, [x8, #8]
  41d298:	mov	x8, sp
  41d29c:	ldr	x10, [sp, #64]
  41d2a0:	str	x10, [x8, #16]
  41d2a4:	mov	x8, sp
  41d2a8:	ldr	w12, [sp, #60]
  41d2ac:	str	w12, [x8, #24]
  41d2b0:	mov	x8, sp
  41d2b4:	ldr	x13, [sp, #48]
  41d2b8:	str	x13, [x8, #32]
  41d2bc:	bl	40a870 <log_object_internal@plt>
  41d2c0:	str	w0, [sp, #116]
  41d2c4:	mov	w0, #0x1                   	// #1
  41d2c8:	ldp	x29, x30, [sp, #240]
  41d2cc:	add	sp, sp, #0x100
  41d2d0:	ret

000000000041d2d4 <on_spawn_timeout>:
  41d2d4:	sub	sp, sp, #0x100
  41d2d8:	stp	x29, x30, [sp, #240]
  41d2dc:	add	x29, sp, #0xf0
  41d2e0:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  41d2e4:	add	x8, x8, #0xff0
  41d2e8:	add	x8, x8, #0x3
  41d2ec:	stur	x0, [x29, #-8]
  41d2f0:	stur	x1, [x29, #-16]
  41d2f4:	stur	x2, [x29, #-24]
  41d2f8:	ldur	x9, [x29, #-24]
  41d2fc:	stur	x9, [x29, #-32]
  41d300:	str	x8, [sp, #104]
  41d304:	ldur	x8, [x29, #-32]
  41d308:	cmp	x8, #0x0
  41d30c:	cset	w9, ne  // ne = any
  41d310:	mov	w10, #0x1                   	// #1
  41d314:	eor	w9, w9, #0x1
  41d318:	eor	w9, w9, w10
  41d31c:	eor	w9, w9, w10
  41d320:	and	w9, w9, #0x1
  41d324:	mov	w0, w9
  41d328:	sxtw	x8, w0
  41d32c:	cbz	x8, 41d350 <on_spawn_timeout+0x7c>
  41d330:	mov	w0, #0x1                   	// #1
  41d334:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41d338:	add	x1, x1, #0x6ec
  41d33c:	ldr	x2, [sp, #104]
  41d340:	mov	w3, #0x248                 	// #584
  41d344:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d348:	add	x4, x4, #0x7a4
  41d34c:	bl	40a540 <log_assert_failed_realm@plt>
  41d350:	ldur	x8, [x29, #-32]
  41d354:	ldr	w0, [x8, #16]
  41d358:	mov	w1, #0x9                   	// #9
  41d35c:	bl	40aae0 <kill_and_sigcont@plt>
  41d360:	mov	x8, xzr
  41d364:	stur	x8, [x29, #-104]
  41d368:	ldur	x8, [x29, #-32]
  41d36c:	ldr	x8, [x8]
  41d370:	stur	x8, [x29, #-112]
  41d374:	mov	w9, #0x3                   	// #3
  41d378:	stur	w9, [x29, #-116]
  41d37c:	str	wzr, [sp, #120]
  41d380:	ldur	x8, [x29, #-112]
  41d384:	cbz	x8, 41d3c4 <on_spawn_timeout+0xf0>
  41d388:	mov	w0, #0x1                   	// #1
  41d38c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41d390:	ldur	w8, [x29, #-116]
  41d394:	cmp	w0, w8
  41d398:	cset	w8, ge  // ge = tcont
  41d39c:	mov	w9, #0x1                   	// #1
  41d3a0:	eor	w8, w8, #0x1
  41d3a4:	eor	w8, w8, w9
  41d3a8:	and	w8, w8, #0x1
  41d3ac:	mov	w1, w8
  41d3b0:	sxtw	x10, w1
  41d3b4:	cbz	x10, 41d3c4 <on_spawn_timeout+0xf0>
  41d3b8:	ldur	x0, [x29, #-112]
  41d3bc:	sub	x1, x29, #0x68
  41d3c0:	bl	40a860 <sd_device_get_sysname@plt>
  41d3c4:	ldur	w0, [x29, #-116]
  41d3c8:	ldr	w1, [sp, #120]
  41d3cc:	ldur	x8, [x29, #-104]
  41d3d0:	mov	x9, xzr
  41d3d4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41d3d8:	add	x10, x10, #0xa46
  41d3dc:	cmp	x8, #0x0
  41d3e0:	csel	x5, x10, x9, ne  // ne = any
  41d3e4:	ldur	x6, [x29, #-104]
  41d3e8:	ldur	x8, [x29, #-32]
  41d3ec:	ldr	x8, [x8, #8]
  41d3f0:	ldur	x10, [x29, #-32]
  41d3f4:	ldr	w11, [x10, #16]
  41d3f8:	ldur	x10, [x29, #-32]
  41d3fc:	ldr	x2, [x10, #32]
  41d400:	sub	x10, x29, #0x60
  41d404:	str	w0, [sp, #100]
  41d408:	mov	x0, x10
  41d40c:	mov	x10, #0x40                  	// #64
  41d410:	str	w1, [sp, #96]
  41d414:	mov	x1, x10
  41d418:	mov	x3, #0x4240                	// #16960
  41d41c:	movk	x3, #0xf, lsl #16
  41d420:	str	x9, [sp, #88]
  41d424:	str	x5, [sp, #80]
  41d428:	str	x6, [sp, #72]
  41d42c:	str	x8, [sp, #64]
  41d430:	str	w11, [sp, #60]
  41d434:	bl	40b060 <format_timespan@plt>
  41d438:	ldr	w11, [sp, #100]
  41d43c:	str	x0, [sp, #48]
  41d440:	mov	w0, w11
  41d444:	ldr	w1, [sp, #96]
  41d448:	ldr	x2, [sp, #104]
  41d44c:	mov	w3, #0x24e                 	// #590
  41d450:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d454:	add	x4, x4, #0x7de
  41d458:	ldr	x5, [sp, #80]
  41d45c:	ldr	x6, [sp, #72]
  41d460:	ldr	x7, [sp, #88]
  41d464:	mov	x8, sp
  41d468:	ldr	x9, [sp, #88]
  41d46c:	str	x9, [x8]
  41d470:	mov	x8, sp
  41d474:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41d478:	add	x10, x10, #0x7ef
  41d47c:	str	x10, [x8, #8]
  41d480:	mov	x8, sp
  41d484:	ldr	x10, [sp, #64]
  41d488:	str	x10, [x8, #16]
  41d48c:	mov	x8, sp
  41d490:	ldr	w12, [sp, #60]
  41d494:	str	w12, [x8, #24]
  41d498:	mov	x8, sp
  41d49c:	ldr	x13, [sp, #48]
  41d4a0:	str	x13, [x8, #32]
  41d4a4:	bl	40a870 <log_object_internal@plt>
  41d4a8:	str	w0, [sp, #116]
  41d4ac:	mov	w0, #0x1                   	// #1
  41d4b0:	ldp	x29, x30, [sp, #240]
  41d4b4:	add	sp, sp, #0x100
  41d4b8:	ret

000000000041d4bc <on_spawn_io>:
  41d4bc:	stp	x29, x30, [sp, #-32]!
  41d4c0:	str	x28, [sp, #16]
  41d4c4:	mov	x29, sp
  41d4c8:	sub	sp, sp, #0x1, lsl #12
  41d4cc:	sub	sp, sp, #0xf0
  41d4d0:	sub	x8, x29, #0x28
  41d4d4:	adrp	x9, 465000 <on_inotify.__assert_in_set+0x1540>
  41d4d8:	add	x9, x9, #0xff0
  41d4dc:	add	x9, x9, #0x3
  41d4e0:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41d4e4:	add	x10, x10, #0x825
  41d4e8:	str	x0, [x8, #24]
  41d4ec:	stur	w1, [x29, #-20]
  41d4f0:	stur	w2, [x29, #-24]
  41d4f4:	str	x3, [x8, #8]
  41d4f8:	ldr	x11, [x8, #8]
  41d4fc:	str	x11, [x8]
  41d500:	str	x8, [sp, #80]
  41d504:	str	x9, [sp, #72]
  41d508:	str	x10, [sp, #64]
  41d50c:	ldr	x8, [sp, #80]
  41d510:	ldr	x9, [x8]
  41d514:	cmp	x9, #0x0
  41d518:	cset	w10, ne  // ne = any
  41d51c:	mov	w11, #0x1                   	// #1
  41d520:	eor	w10, w10, #0x1
  41d524:	eor	w10, w10, w11
  41d528:	eor	w10, w10, w11
  41d52c:	and	w10, w10, #0x1
  41d530:	mov	w0, w10
  41d534:	sxtw	x9, w0
  41d538:	cbz	x9, 41d558 <on_spawn_io+0x9c>
  41d53c:	mov	w0, #0x1                   	// #1
  41d540:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41d544:	add	x1, x1, #0x6ec
  41d548:	ldr	x2, [sp, #72]
  41d54c:	mov	w3, #0x21a                 	// #538
  41d550:	ldr	x4, [sp, #64]
  41d554:	bl	40a540 <log_assert_failed_realm@plt>
  41d558:	ldur	w8, [x29, #-20]
  41d55c:	ldr	x9, [sp, #80]
  41d560:	ldr	x10, [x9]
  41d564:	ldr	w11, [x10, #52]
  41d568:	mov	w12, #0x1                   	// #1
  41d56c:	cmp	w8, w11
  41d570:	str	w12, [sp, #60]
  41d574:	b.eq	41d594 <on_spawn_io+0xd8>  // b.none
  41d578:	ldur	w8, [x29, #-20]
  41d57c:	ldr	x9, [sp, #80]
  41d580:	ldr	x10, [x9]
  41d584:	ldr	w11, [x10, #56]
  41d588:	cmp	w8, w11
  41d58c:	cset	w8, eq  // eq = none
  41d590:	str	w8, [sp, #60]
  41d594:	ldr	w8, [sp, #60]
  41d598:	mov	w9, #0x1                   	// #1
  41d59c:	eor	w8, w8, #0x1
  41d5a0:	eor	w8, w8, w9
  41d5a4:	eor	w8, w8, w9
  41d5a8:	and	w8, w8, #0x1
  41d5ac:	mov	w0, w8
  41d5b0:	sxtw	x10, w0
  41d5b4:	cbz	x10, 41d5d4 <on_spawn_io+0x118>
  41d5b8:	mov	w0, #0x1                   	// #1
  41d5bc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41d5c0:	add	x1, x1, #0x85f
  41d5c4:	ldr	x2, [sp, #72]
  41d5c8:	mov	w3, #0x21b                 	// #539
  41d5cc:	ldr	x4, [sp, #64]
  41d5d0:	bl	40a540 <log_assert_failed_realm@plt>
  41d5d4:	ldr	x8, [sp, #80]
  41d5d8:	ldr	x9, [x8]
  41d5dc:	ldr	x9, [x9, #64]
  41d5e0:	mov	w10, #0x1                   	// #1
  41d5e4:	str	w10, [sp, #56]
  41d5e8:	cbz	x9, 41d60c <on_spawn_io+0x150>
  41d5ec:	ldr	x8, [sp, #80]
  41d5f0:	ldr	x9, [x8]
  41d5f4:	ldr	x9, [x9, #80]
  41d5f8:	ldr	x10, [x8]
  41d5fc:	ldr	x10, [x10, #72]
  41d600:	cmp	x9, x10
  41d604:	cset	w11, cc  // cc = lo, ul, last
  41d608:	str	w11, [sp, #56]
  41d60c:	ldr	w8, [sp, #56]
  41d610:	mov	w9, #0x1                   	// #1
  41d614:	eor	w8, w8, #0x1
  41d618:	eor	w8, w8, w9
  41d61c:	eor	w8, w8, w9
  41d620:	and	w8, w8, #0x1
  41d624:	mov	w0, w8
  41d628:	sxtw	x10, w0
  41d62c:	cbz	x10, 41d64c <on_spawn_io+0x190>
  41d630:	mov	w0, #0x1                   	// #1
  41d634:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41d638:	add	x1, x1, #0x890
  41d63c:	ldr	x2, [sp, #72]
  41d640:	mov	w3, #0x21c                 	// #540
  41d644:	ldr	x4, [sp, #64]
  41d648:	bl	40a540 <log_assert_failed_realm@plt>
  41d64c:	ldur	w8, [x29, #-20]
  41d650:	ldr	x9, [sp, #80]
  41d654:	ldr	x10, [x9]
  41d658:	ldr	w11, [x10, #52]
  41d65c:	cmp	w8, w11
  41d660:	b.ne	41d6ac <on_spawn_io+0x1f0>  // b.any
  41d664:	ldr	x8, [sp, #80]
  41d668:	ldr	x9, [x8]
  41d66c:	ldr	x9, [x9, #64]
  41d670:	cbz	x9, 41d6ac <on_spawn_io+0x1f0>
  41d674:	ldr	x8, [sp, #80]
  41d678:	ldr	x9, [x8]
  41d67c:	ldr	x9, [x9, #64]
  41d680:	ldr	x10, [x8]
  41d684:	ldr	x10, [x10, #80]
  41d688:	add	x9, x9, x10
  41d68c:	str	x9, [sp, #192]
  41d690:	ldr	x9, [x8]
  41d694:	ldr	x9, [x9, #72]
  41d698:	ldr	x10, [x8]
  41d69c:	ldr	x10, [x10, #80]
  41d6a0:	subs	x9, x9, x10
  41d6a4:	str	x9, [sp, #184]
  41d6a8:	b	41d6bc <on_spawn_io+0x200>
  41d6ac:	add	x8, sp, #0xc8
  41d6b0:	str	x8, [sp, #192]
  41d6b4:	mov	x8, #0x1000                	// #4096
  41d6b8:	str	x8, [sp, #184]
  41d6bc:	ldur	w0, [x29, #-20]
  41d6c0:	ldr	x1, [sp, #192]
  41d6c4:	ldr	x8, [sp, #184]
  41d6c8:	subs	x2, x8, #0x1
  41d6cc:	bl	40a920 <read@plt>
  41d6d0:	str	x0, [sp, #176]
  41d6d4:	ldr	x8, [sp, #176]
  41d6d8:	cmp	x8, #0x0
  41d6dc:	cset	w9, ge  // ge = tcont
  41d6e0:	tbnz	w9, #0, 41d7d8 <on_spawn_io+0x31c>
  41d6e4:	bl	40a480 <__errno_location@plt>
  41d6e8:	ldr	w8, [x0]
  41d6ec:	cmp	w8, #0xb
  41d6f0:	b.eq	41d7d0 <on_spawn_io+0x314>  // b.none
  41d6f4:	mov	x8, xzr
  41d6f8:	str	x8, [sp, #168]
  41d6fc:	ldr	x8, [sp, #80]
  41d700:	ldr	x9, [x8]
  41d704:	ldr	x9, [x9]
  41d708:	str	x9, [sp, #160]
  41d70c:	mov	w10, #0x3                   	// #3
  41d710:	str	w10, [sp, #156]
  41d714:	bl	40a480 <__errno_location@plt>
  41d718:	ldr	w10, [x0]
  41d71c:	str	w10, [sp, #152]
  41d720:	ldr	x8, [sp, #160]
  41d724:	cbz	x8, 41d764 <on_spawn_io+0x2a8>
  41d728:	mov	w0, #0x1                   	// #1
  41d72c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41d730:	ldr	w8, [sp, #156]
  41d734:	cmp	w0, w8
  41d738:	cset	w8, ge  // ge = tcont
  41d73c:	mov	w9, #0x1                   	// #1
  41d740:	eor	w8, w8, #0x1
  41d744:	eor	w8, w8, w9
  41d748:	and	w8, w8, #0x1
  41d74c:	mov	w1, w8
  41d750:	sxtw	x10, w1
  41d754:	cbz	x10, 41d764 <on_spawn_io+0x2a8>
  41d758:	ldr	x0, [sp, #160]
  41d75c:	add	x1, sp, #0xa8
  41d760:	bl	40a860 <sd_device_get_sysname@plt>
  41d764:	ldr	w0, [sp, #156]
  41d768:	ldr	w1, [sp, #152]
  41d76c:	ldr	x8, [sp, #168]
  41d770:	mov	x9, xzr
  41d774:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41d778:	add	x10, x10, #0xa46
  41d77c:	cmp	x8, #0x0
  41d780:	csel	x5, x10, x9, ne  // ne = any
  41d784:	ldr	x6, [sp, #168]
  41d788:	ldr	x8, [sp, #80]
  41d78c:	ldr	x10, [x8]
  41d790:	ldr	x10, [x10, #8]
  41d794:	ldr	x2, [sp, #72]
  41d798:	mov	w3, #0x22a                 	// #554
  41d79c:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d7a0:	add	x4, x4, #0x8c9
  41d7a4:	mov	x7, x9
  41d7a8:	mov	x11, sp
  41d7ac:	str	x9, [x11]
  41d7b0:	mov	x9, sp
  41d7b4:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41d7b8:	add	x11, x11, #0x8d5
  41d7bc:	str	x11, [x9, #8]
  41d7c0:	mov	x9, sp
  41d7c4:	str	x10, [x9, #16]
  41d7c8:	bl	40a870 <log_object_internal@plt>
  41d7cc:	str	w0, [sp, #148]
  41d7d0:	stur	wzr, [x29, #-4]
  41d7d4:	b	41d9f8 <on_spawn_io+0x53c>
  41d7d8:	ldr	x8, [sp, #192]
  41d7dc:	ldr	x9, [sp, #176]
  41d7e0:	add	x8, x8, x9
  41d7e4:	mov	w10, #0x0                   	// #0
  41d7e8:	strb	w10, [x8]
  41d7ec:	ldur	w10, [x29, #-20]
  41d7f0:	ldr	x8, [sp, #80]
  41d7f4:	ldr	x9, [x8]
  41d7f8:	ldr	w11, [x9, #52]
  41d7fc:	cmp	w10, w11
  41d800:	b.ne	41d82c <on_spawn_io+0x370>  // b.any
  41d804:	ldr	x8, [sp, #80]
  41d808:	ldr	x9, [x8]
  41d80c:	ldr	x9, [x9, #64]
  41d810:	cbz	x9, 41d82c <on_spawn_io+0x370>
  41d814:	ldr	x8, [sp, #176]
  41d818:	ldr	x9, [sp, #80]
  41d81c:	ldr	x10, [x9]
  41d820:	ldr	x11, [x10, #80]
  41d824:	add	x8, x11, x8
  41d828:	str	x8, [x10, #80]
  41d82c:	ldr	x8, [sp, #176]
  41d830:	cmp	x8, #0x0
  41d834:	cset	w9, le
  41d838:	tbnz	w9, #0, 41d9f4 <on_spawn_io+0x538>
  41d83c:	ldr	x8, [sp, #80]
  41d840:	ldr	x9, [x8]
  41d844:	ldr	w10, [x9, #56]
  41d848:	cmp	w10, #0x0
  41d84c:	cset	w10, lt  // lt = tstop
  41d850:	tbnz	w10, #0, 41d9f4 <on_spawn_io+0x538>
  41d854:	mov	x8, xzr
  41d858:	str	x8, [sp, #136]
  41d85c:	ldr	x0, [sp, #192]
  41d860:	bl	40b090 <strv_split_newlines@plt>
  41d864:	str	x0, [sp, #136]
  41d868:	ldr	x8, [sp, #136]
  41d86c:	cbnz	x8, 41d880 <on_spawn_io+0x3c4>
  41d870:	stur	wzr, [x29, #-4]
  41d874:	mov	w8, #0x1                   	// #1
  41d878:	str	w8, [sp, #124]
  41d87c:	b	41d9dc <on_spawn_io+0x520>
  41d880:	ldr	x8, [sp, #136]
  41d884:	str	x8, [sp, #128]
  41d888:	ldr	x8, [sp, #128]
  41d88c:	mov	w9, #0x0                   	// #0
  41d890:	str	w9, [sp, #52]
  41d894:	cbz	x8, 41d8ac <on_spawn_io+0x3f0>
  41d898:	ldr	x8, [sp, #128]
  41d89c:	ldr	x8, [x8]
  41d8a0:	cmp	x8, #0x0
  41d8a4:	cset	w9, ne  // ne = any
  41d8a8:	str	w9, [sp, #52]
  41d8ac:	ldr	w8, [sp, #52]
  41d8b0:	tbnz	w8, #0, 41d8b8 <on_spawn_io+0x3fc>
  41d8b4:	b	41d9d8 <on_spawn_io+0x51c>
  41d8b8:	mov	x8, xzr
  41d8bc:	str	x8, [sp, #112]
  41d8c0:	ldr	x8, [sp, #80]
  41d8c4:	ldr	x9, [x8]
  41d8c8:	ldr	x9, [x9]
  41d8cc:	str	x9, [sp, #104]
  41d8d0:	mov	w10, #0x7                   	// #7
  41d8d4:	str	w10, [sp, #100]
  41d8d8:	str	wzr, [sp, #96]
  41d8dc:	ldr	x9, [sp, #104]
  41d8e0:	cbz	x9, 41d920 <on_spawn_io+0x464>
  41d8e4:	mov	w0, #0x1                   	// #1
  41d8e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  41d8ec:	ldr	w8, [sp, #100]
  41d8f0:	cmp	w0, w8
  41d8f4:	cset	w8, ge  // ge = tcont
  41d8f8:	mov	w9, #0x1                   	// #1
  41d8fc:	eor	w8, w8, #0x1
  41d900:	eor	w8, w8, w9
  41d904:	and	w8, w8, #0x1
  41d908:	mov	w1, w8
  41d90c:	sxtw	x10, w1
  41d910:	cbz	x10, 41d920 <on_spawn_io+0x464>
  41d914:	ldr	x0, [sp, #104]
  41d918:	add	x1, sp, #0x70
  41d91c:	bl	40a860 <sd_device_get_sysname@plt>
  41d920:	ldr	w0, [sp, #100]
  41d924:	ldr	w1, [sp, #96]
  41d928:	ldr	x8, [sp, #112]
  41d92c:	mov	x9, xzr
  41d930:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41d934:	add	x10, x10, #0xa46
  41d938:	cmp	x8, #0x0
  41d93c:	csel	x5, x10, x9, ne  // ne = any
  41d940:	ldr	x6, [sp, #112]
  41d944:	ldr	x8, [sp, #80]
  41d948:	ldr	x10, [x8]
  41d94c:	ldr	x10, [x10, #8]
  41d950:	ldur	w11, [x29, #-20]
  41d954:	ldr	x12, [x8]
  41d958:	ldr	w13, [x12, #52]
  41d95c:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41d960:	add	x12, x12, #0x909
  41d964:	adrp	x14, 466000 <on_inotify.__assert_in_set+0x2540>
  41d968:	add	x14, x14, #0x905
  41d96c:	cmp	w11, w13
  41d970:	csel	x12, x14, x12, eq  // eq = none
  41d974:	ldr	x14, [sp, #128]
  41d978:	ldr	x14, [x14]
  41d97c:	ldr	x2, [sp, #72]
  41d980:	mov	w3, #0x23e                 	// #574
  41d984:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41d988:	add	x4, x4, #0x8c9
  41d98c:	mov	x7, x9
  41d990:	mov	x15, sp
  41d994:	str	x9, [x15]
  41d998:	mov	x9, sp
  41d99c:	adrp	x15, 466000 <on_inotify.__assert_in_set+0x2540>
  41d9a0:	add	x15, x15, #0x8f7
  41d9a4:	str	x15, [x9, #8]
  41d9a8:	mov	x9, sp
  41d9ac:	str	x10, [x9, #16]
  41d9b0:	mov	x9, sp
  41d9b4:	str	x12, [x9, #24]
  41d9b8:	mov	x9, sp
  41d9bc:	str	x14, [x9, #32]
  41d9c0:	bl	40a870 <log_object_internal@plt>
  41d9c4:	str	w0, [sp, #92]
  41d9c8:	ldr	x8, [sp, #128]
  41d9cc:	add	x8, x8, #0x8
  41d9d0:	str	x8, [sp, #128]
  41d9d4:	b	41d888 <on_spawn_io+0x3cc>
  41d9d8:	str	wzr, [sp, #124]
  41d9dc:	add	x0, sp, #0x88
  41d9e0:	bl	41a9a8 <strv_freep>
  41d9e4:	ldr	w8, [sp, #124]
  41d9e8:	cbz	w8, 41d9f4 <on_spawn_io+0x538>
  41d9ec:	b	41d9f0 <on_spawn_io+0x534>
  41d9f0:	b	41d9f8 <on_spawn_io+0x53c>
  41d9f4:	stur	wzr, [x29, #-4]
  41d9f8:	ldur	w0, [x29, #-4]
  41d9fc:	add	sp, sp, #0x1, lsl #12
  41da00:	add	sp, sp, #0xf0
  41da04:	ldr	x28, [sp, #16]
  41da08:	ldp	x29, x30, [sp], #32
  41da0c:	ret

000000000041da10 <on_spawn_sigchld>:
  41da10:	sub	sp, sp, #0x140
  41da14:	stp	x29, x30, [sp, #288]
  41da18:	str	x28, [sp, #304]
  41da1c:	add	x29, sp, #0x120
  41da20:	sub	x8, x29, #0x20
  41da24:	mov	w9, #0xfffffffb            	// #-5
  41da28:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41da2c:	add	x10, x10, #0xa46
  41da30:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41da34:	add	x11, x11, #0xff0
  41da38:	add	x11, x11, #0x3
  41da3c:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41da40:	add	x12, x12, #0x950
  41da44:	str	x0, [x8, #24]
  41da48:	str	x1, [x8, #16]
  41da4c:	str	x2, [x8, #8]
  41da50:	ldr	x13, [x8, #8]
  41da54:	str	x13, [x8]
  41da58:	stur	w9, [x29, #-36]
  41da5c:	str	x8, [sp, #112]
  41da60:	str	x10, [sp, #104]
  41da64:	str	x11, [sp, #96]
  41da68:	str	x12, [sp, #88]
  41da6c:	ldr	x8, [sp, #112]
  41da70:	ldr	x9, [x8]
  41da74:	cmp	x9, #0x0
  41da78:	cset	w10, ne  // ne = any
  41da7c:	mov	w11, #0x1                   	// #1
  41da80:	eor	w10, w10, #0x1
  41da84:	eor	w10, w10, w11
  41da88:	eor	w10, w10, w11
  41da8c:	and	w10, w10, #0x1
  41da90:	mov	w0, w10
  41da94:	sxtw	x9, w0
  41da98:	cbz	x9, 41dabc <on_spawn_sigchld+0xac>
  41da9c:	mov	w0, #0x1                   	// #1
  41daa0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41daa4:	add	x1, x1, #0x6ec
  41daa8:	ldr	x2, [sp, #96]
  41daac:	mov	w3, #0x264                 	// #612
  41dab0:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41dab4:	add	x4, x4, #0x90d
  41dab8:	bl	40a540 <log_assert_failed_realm@plt>
  41dabc:	ldr	x8, [sp, #112]
  41dac0:	ldr	x9, [x8, #16]
  41dac4:	ldr	w10, [x9, #8]
  41dac8:	cmp	w10, #0x1
  41dacc:	str	w10, [sp, #84]
  41dad0:	b.eq	41daec <on_spawn_sigchld+0xdc>  // b.none
  41dad4:	b	41dad8 <on_spawn_sigchld+0xc8>
  41dad8:	ldr	w8, [sp, #84]
  41dadc:	subs	w9, w8, #0x2
  41dae0:	cmp	w9, #0x1
  41dae4:	b.ls	41dcd0 <on_spawn_sigchld+0x2c0>  // b.plast
  41dae8:	b	41ddf4 <on_spawn_sigchld+0x3e4>
  41daec:	ldr	x8, [sp, #112]
  41daf0:	ldr	x9, [x8, #16]
  41daf4:	ldr	w10, [x9, #24]
  41daf8:	cbnz	w10, 41dbcc <on_spawn_sigchld+0x1bc>
  41dafc:	mov	x8, xzr
  41db00:	stur	x8, [x29, #-48]
  41db04:	ldr	x8, [sp, #112]
  41db08:	ldr	x9, [x8]
  41db0c:	ldr	x9, [x9]
  41db10:	stur	x9, [x29, #-56]
  41db14:	mov	w10, #0x7                   	// #7
  41db18:	stur	w10, [x29, #-60]
  41db1c:	stur	wzr, [x29, #-64]
  41db20:	ldur	x9, [x29, #-56]
  41db24:	cbz	x9, 41db64 <on_spawn_sigchld+0x154>
  41db28:	mov	w0, #0x1                   	// #1
  41db2c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41db30:	ldur	w8, [x29, #-60]
  41db34:	cmp	w0, w8
  41db38:	cset	w8, ge  // ge = tcont
  41db3c:	mov	w9, #0x1                   	// #1
  41db40:	eor	w8, w8, #0x1
  41db44:	eor	w8, w8, w9
  41db48:	and	w8, w8, #0x1
  41db4c:	mov	w1, w8
  41db50:	sxtw	x10, w1
  41db54:	cbz	x10, 41db64 <on_spawn_sigchld+0x154>
  41db58:	ldur	x0, [x29, #-56]
  41db5c:	sub	x1, x29, #0x30
  41db60:	bl	40a860 <sd_device_get_sysname@plt>
  41db64:	ldur	w0, [x29, #-60]
  41db68:	ldur	w1, [x29, #-64]
  41db6c:	ldur	x8, [x29, #-48]
  41db70:	mov	x9, xzr
  41db74:	cmp	x8, #0x0
  41db78:	ldr	x8, [sp, #104]
  41db7c:	csel	x5, x8, x9, ne  // ne = any
  41db80:	ldur	x6, [x29, #-48]
  41db84:	ldr	x10, [sp, #112]
  41db88:	ldr	x11, [x10]
  41db8c:	ldr	x11, [x11, #8]
  41db90:	ldr	x2, [sp, #96]
  41db94:	mov	w3, #0x269                 	// #617
  41db98:	ldr	x4, [sp, #88]
  41db9c:	mov	x7, x9
  41dba0:	mov	x12, sp
  41dba4:	str	x9, [x12]
  41dba8:	mov	x9, sp
  41dbac:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41dbb0:	add	x12, x12, #0x961
  41dbb4:	str	x12, [x9, #8]
  41dbb8:	mov	x9, sp
  41dbbc:	str	x11, [x9, #16]
  41dbc0:	bl	40a870 <log_object_internal@plt>
  41dbc4:	stur	w0, [x29, #-68]
  41dbc8:	b	41dcbc <on_spawn_sigchld+0x2ac>
  41dbcc:	mov	x8, xzr
  41dbd0:	stur	x8, [x29, #-80]
  41dbd4:	ldr	x8, [sp, #112]
  41dbd8:	ldr	x9, [x8]
  41dbdc:	ldr	x9, [x9]
  41dbe0:	stur	x9, [x29, #-88]
  41dbe4:	ldr	x9, [x8]
  41dbe8:	ldrb	w10, [x9, #48]
  41dbec:	mov	w11, #0x4                   	// #4
  41dbf0:	mov	w12, #0x7                   	// #7
  41dbf4:	tst	w10, #0x1
  41dbf8:	csel	w10, w12, w11, ne  // ne = any
  41dbfc:	stur	w10, [x29, #-92]
  41dc00:	stur	wzr, [x29, #-96]
  41dc04:	ldur	x9, [x29, #-88]
  41dc08:	cbz	x9, 41dc48 <on_spawn_sigchld+0x238>
  41dc0c:	mov	w0, #0x1                   	// #1
  41dc10:	bl	40a3f0 <log_get_max_level_realm@plt>
  41dc14:	ldur	w8, [x29, #-92]
  41dc18:	cmp	w0, w8
  41dc1c:	cset	w8, ge  // ge = tcont
  41dc20:	mov	w9, #0x1                   	// #1
  41dc24:	eor	w8, w8, #0x1
  41dc28:	eor	w8, w8, w9
  41dc2c:	and	w8, w8, #0x1
  41dc30:	mov	w1, w8
  41dc34:	sxtw	x10, w1
  41dc38:	cbz	x10, 41dc48 <on_spawn_sigchld+0x238>
  41dc3c:	ldur	x0, [x29, #-88]
  41dc40:	sub	x1, x29, #0x50
  41dc44:	bl	40a860 <sd_device_get_sysname@plt>
  41dc48:	ldur	w0, [x29, #-92]
  41dc4c:	ldur	w1, [x29, #-96]
  41dc50:	ldur	x8, [x29, #-80]
  41dc54:	mov	x9, xzr
  41dc58:	cmp	x8, #0x0
  41dc5c:	ldr	x8, [sp, #104]
  41dc60:	csel	x5, x8, x9, ne  // ne = any
  41dc64:	ldur	x6, [x29, #-80]
  41dc68:	ldr	x10, [sp, #112]
  41dc6c:	ldr	x11, [x10]
  41dc70:	ldr	x11, [x11, #8]
  41dc74:	ldr	x12, [x10, #16]
  41dc78:	ldr	w13, [x12, #24]
  41dc7c:	ldr	x2, [sp, #96]
  41dc80:	mov	w3, #0x26c                 	// #620
  41dc84:	ldr	x4, [sp, #88]
  41dc88:	mov	x7, x9
  41dc8c:	mov	x12, sp
  41dc90:	str	x9, [x12]
  41dc94:	mov	x9, sp
  41dc98:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41dc9c:	add	x12, x12, #0x979
  41dca0:	str	x12, [x9, #8]
  41dca4:	mov	x9, sp
  41dca8:	str	x11, [x9, #16]
  41dcac:	mov	x9, sp
  41dcb0:	str	w13, [x9, #24]
  41dcb4:	bl	40a870 <log_object_internal@plt>
  41dcb8:	stur	w0, [x29, #-100]
  41dcbc:	ldr	x8, [sp, #112]
  41dcc0:	ldr	x9, [x8, #16]
  41dcc4:	ldr	w10, [x9, #24]
  41dcc8:	stur	w10, [x29, #-36]
  41dccc:	b	41dec0 <on_spawn_sigchld+0x4b0>
  41dcd0:	mov	x8, xzr
  41dcd4:	stur	x8, [x29, #-112]
  41dcd8:	ldr	x8, [sp, #112]
  41dcdc:	ldr	x9, [x8]
  41dce0:	ldr	x9, [x9]
  41dce4:	stur	x9, [x29, #-120]
  41dce8:	mov	w10, #0x3                   	// #3
  41dcec:	stur	w10, [x29, #-124]
  41dcf0:	stur	wzr, [x29, #-128]
  41dcf4:	ldur	x9, [x29, #-120]
  41dcf8:	cbz	x9, 41dd38 <on_spawn_sigchld+0x328>
  41dcfc:	mov	w0, #0x1                   	// #1
  41dd00:	bl	40a3f0 <log_get_max_level_realm@plt>
  41dd04:	ldur	w8, [x29, #-124]
  41dd08:	cmp	w0, w8
  41dd0c:	cset	w8, ge  // ge = tcont
  41dd10:	mov	w9, #0x1                   	// #1
  41dd14:	eor	w8, w8, #0x1
  41dd18:	eor	w8, w8, w9
  41dd1c:	and	w8, w8, #0x1
  41dd20:	mov	w1, w8
  41dd24:	sxtw	x10, w1
  41dd28:	cbz	x10, 41dd38 <on_spawn_sigchld+0x328>
  41dd2c:	ldur	x0, [x29, #-120]
  41dd30:	sub	x1, x29, #0x70
  41dd34:	bl	40a860 <sd_device_get_sysname@plt>
  41dd38:	ldur	w0, [x29, #-124]
  41dd3c:	ldur	w1, [x29, #-128]
  41dd40:	ldur	x8, [x29, #-112]
  41dd44:	mov	x9, xzr
  41dd48:	cmp	x8, #0x0
  41dd4c:	ldr	x8, [sp, #104]
  41dd50:	csel	x5, x8, x9, ne  // ne = any
  41dd54:	ldur	x6, [x29, #-112]
  41dd58:	ldr	x10, [sp, #112]
  41dd5c:	ldr	x11, [x10]
  41dd60:	ldr	x11, [x11, #8]
  41dd64:	ldr	x12, [x10, #16]
  41dd68:	ldr	w13, [x12, #24]
  41dd6c:	str	w0, [sp, #80]
  41dd70:	mov	w0, w13
  41dd74:	str	w1, [sp, #76]
  41dd78:	str	x9, [sp, #64]
  41dd7c:	str	x5, [sp, #56]
  41dd80:	str	x6, [sp, #48]
  41dd84:	str	x11, [sp, #40]
  41dd88:	bl	40a850 <signal_to_string@plt>
  41dd8c:	ldr	w13, [sp, #80]
  41dd90:	str	x0, [sp, #32]
  41dd94:	mov	w0, w13
  41dd98:	ldr	w1, [sp, #76]
  41dd9c:	ldr	x2, [sp, #96]
  41dda0:	mov	w3, #0x271                 	// #625
  41dda4:	ldr	x4, [sp, #88]
  41dda8:	ldr	x5, [sp, #56]
  41ddac:	ldr	x6, [sp, #48]
  41ddb0:	ldr	x7, [sp, #64]
  41ddb4:	mov	x8, sp
  41ddb8:	ldr	x9, [sp, #64]
  41ddbc:	str	x9, [x8]
  41ddc0:	mov	x8, sp
  41ddc4:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41ddc8:	add	x10, x10, #0x9a0
  41ddcc:	str	x10, [x8, #8]
  41ddd0:	mov	x8, sp
  41ddd4:	ldr	x10, [sp, #40]
  41ddd8:	str	x10, [x8, #16]
  41dddc:	mov	x8, sp
  41dde0:	ldr	x11, [sp, #32]
  41dde4:	str	x11, [x8, #24]
  41dde8:	bl	40a870 <log_object_internal@plt>
  41ddec:	stur	w0, [x29, #-132]
  41ddf0:	b	41dec0 <on_spawn_sigchld+0x4b0>
  41ddf4:	mov	x8, xzr
  41ddf8:	str	x8, [sp, #144]
  41ddfc:	ldr	x8, [sp, #112]
  41de00:	ldr	x9, [x8]
  41de04:	ldr	x9, [x9]
  41de08:	str	x9, [sp, #136]
  41de0c:	mov	w10, #0x3                   	// #3
  41de10:	str	w10, [sp, #132]
  41de14:	str	wzr, [sp, #128]
  41de18:	ldr	x9, [sp, #136]
  41de1c:	cbz	x9, 41de5c <on_spawn_sigchld+0x44c>
  41de20:	mov	w0, #0x1                   	// #1
  41de24:	bl	40a3f0 <log_get_max_level_realm@plt>
  41de28:	ldr	w8, [sp, #132]
  41de2c:	cmp	w0, w8
  41de30:	cset	w8, ge  // ge = tcont
  41de34:	mov	w9, #0x1                   	// #1
  41de38:	eor	w8, w8, #0x1
  41de3c:	eor	w8, w8, w9
  41de40:	and	w8, w8, #0x1
  41de44:	mov	w1, w8
  41de48:	sxtw	x10, w1
  41de4c:	cbz	x10, 41de5c <on_spawn_sigchld+0x44c>
  41de50:	ldr	x0, [sp, #136]
  41de54:	add	x1, sp, #0x90
  41de58:	bl	40a860 <sd_device_get_sysname@plt>
  41de5c:	ldr	w0, [sp, #132]
  41de60:	ldr	w1, [sp, #128]
  41de64:	ldr	x8, [sp, #144]
  41de68:	mov	x9, xzr
  41de6c:	cmp	x8, #0x0
  41de70:	ldr	x8, [sp, #104]
  41de74:	csel	x5, x8, x9, ne  // ne = any
  41de78:	ldr	x6, [sp, #144]
  41de7c:	ldr	x10, [sp, #112]
  41de80:	ldr	x11, [x10]
  41de84:	ldr	x11, [x11, #8]
  41de88:	ldr	x2, [sp, #96]
  41de8c:	mov	w3, #0x274                 	// #628
  41de90:	ldr	x4, [sp, #88]
  41de94:	mov	x7, x9
  41de98:	mov	x12, sp
  41de9c:	str	x9, [x12]
  41dea0:	mov	x9, sp
  41dea4:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41dea8:	add	x12, x12, #0x9c6
  41deac:	str	x12, [x9, #8]
  41deb0:	mov	x9, sp
  41deb4:	str	x11, [x9, #16]
  41deb8:	bl	40a870 <log_object_internal@plt>
  41debc:	str	w0, [sp, #124]
  41dec0:	ldr	x8, [sp, #112]
  41dec4:	ldr	x0, [x8, #24]
  41dec8:	bl	40adf0 <sd_event_source_get_event@plt>
  41decc:	ldur	w1, [x29, #-36]
  41ded0:	bl	40a990 <sd_event_exit@plt>
  41ded4:	mov	w9, #0x1                   	// #1
  41ded8:	mov	w0, w9
  41dedc:	ldr	x28, [sp, #304]
  41dee0:	ldp	x29, x30, [sp, #288]
  41dee4:	add	sp, sp, #0x140
  41dee8:	ret

000000000041deec <gid_is_valid>:
  41deec:	sub	sp, sp, #0x20
  41def0:	stp	x29, x30, [sp, #16]
  41def4:	add	x29, sp, #0x10
  41def8:	stur	w0, [x29, #-4]
  41defc:	ldur	w0, [x29, #-4]
  41df00:	bl	40b020 <uid_is_valid@plt>
  41df04:	and	w0, w0, #0x1
  41df08:	ldp	x29, x30, [sp, #16]
  41df0c:	add	sp, sp, #0x20
  41df10:	ret

000000000041df14 <udev_node_update_old_links>:
  41df14:	sub	sp, sp, #0xc0
  41df18:	stp	x29, x30, [sp, #176]
  41df1c:	add	x29, sp, #0xb0
  41df20:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  41df24:	add	x8, x8, #0xcd1
  41df28:	add	x8, x8, #0x3
  41df2c:	stur	x0, [x29, #-16]
  41df30:	stur	x1, [x29, #-24]
  41df34:	str	x8, [sp, #40]
  41df38:	ldur	x8, [x29, #-16]
  41df3c:	cmp	x8, #0x0
  41df40:	cset	w9, ne  // ne = any
  41df44:	mov	w10, #0x1                   	// #1
  41df48:	eor	w9, w9, #0x1
  41df4c:	eor	w9, w9, w10
  41df50:	eor	w9, w9, w10
  41df54:	and	w9, w9, #0x1
  41df58:	mov	w0, w9
  41df5c:	sxtw	x8, w0
  41df60:	cbz	x8, 41df84 <udev_node_update_old_links+0x70>
  41df64:	mov	w0, #0x1                   	// #1
  41df68:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41df6c:	add	x1, x1, #0xee1
  41df70:	ldr	x2, [sp, #40]
  41df74:	mov	w3, #0xf2                  	// #242
  41df78:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41df7c:	add	x4, x4, #0xce9
  41df80:	bl	40a540 <log_assert_failed_realm@plt>
  41df84:	ldur	x8, [x29, #-24]
  41df88:	cmp	x8, #0x0
  41df8c:	cset	w9, ne  // ne = any
  41df90:	mov	w10, #0x1                   	// #1
  41df94:	eor	w9, w9, #0x1
  41df98:	eor	w9, w9, w10
  41df9c:	eor	w9, w9, w10
  41dfa0:	and	w9, w9, #0x1
  41dfa4:	mov	w0, w9
  41dfa8:	sxtw	x8, w0
  41dfac:	cbz	x8, 41dfd0 <udev_node_update_old_links+0xbc>
  41dfb0:	mov	w0, #0x1                   	// #1
  41dfb4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41dfb8:	add	x1, x1, #0xd22
  41dfbc:	ldr	x2, [sp, #40]
  41dfc0:	mov	w3, #0xf3                  	// #243
  41dfc4:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41dfc8:	add	x4, x4, #0xce9
  41dfcc:	bl	40a540 <log_assert_failed_realm@plt>
  41dfd0:	ldur	x0, [x29, #-16]
  41dfd4:	sub	x1, x29, #0x28
  41dfd8:	bl	40aa30 <sd_device_get_devpath@plt>
  41dfdc:	stur	w0, [x29, #-44]
  41dfe0:	ldur	w8, [x29, #-44]
  41dfe4:	cmp	w8, #0x0
  41dfe8:	cset	w8, ge  // ge = tcont
  41dfec:	tbnz	w8, #0, 41e0b8 <udev_node_update_old_links+0x1a4>
  41dff0:	mov	x8, xzr
  41dff4:	stur	x8, [x29, #-56]
  41dff8:	ldur	x8, [x29, #-16]
  41dffc:	stur	x8, [x29, #-64]
  41e000:	mov	w9, #0x7                   	// #7
  41e004:	stur	w9, [x29, #-68]
  41e008:	ldur	w9, [x29, #-44]
  41e00c:	stur	w9, [x29, #-72]
  41e010:	ldur	x8, [x29, #-64]
  41e014:	cbz	x8, 41e054 <udev_node_update_old_links+0x140>
  41e018:	mov	w0, #0x1                   	// #1
  41e01c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e020:	ldur	w8, [x29, #-68]
  41e024:	cmp	w0, w8
  41e028:	cset	w8, ge  // ge = tcont
  41e02c:	mov	w9, #0x1                   	// #1
  41e030:	eor	w8, w8, #0x1
  41e034:	eor	w8, w8, w9
  41e038:	and	w8, w8, #0x1
  41e03c:	mov	w1, w8
  41e040:	sxtw	x10, w1
  41e044:	cbz	x10, 41e054 <udev_node_update_old_links+0x140>
  41e048:	ldur	x0, [x29, #-64]
  41e04c:	sub	x1, x29, #0x38
  41e050:	bl	40a860 <sd_device_get_sysname@plt>
  41e054:	ldur	w0, [x29, #-68]
  41e058:	ldur	w1, [x29, #-72]
  41e05c:	ldur	x8, [x29, #-56]
  41e060:	mov	x9, xzr
  41e064:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41e068:	add	x10, x10, #0xa46
  41e06c:	cmp	x8, #0x0
  41e070:	csel	x5, x10, x9, ne  // ne = any
  41e074:	ldur	x6, [x29, #-56]
  41e078:	ldr	x2, [sp, #40]
  41e07c:	mov	w3, #0xf7                  	// #247
  41e080:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41e084:	add	x4, x4, #0xd2a
  41e088:	mov	x7, x9
  41e08c:	mov	x8, sp
  41e090:	str	x9, [x8]
  41e094:	mov	x8, sp
  41e098:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  41e09c:	add	x9, x9, #0xd45
  41e0a0:	str	x9, [x8, #8]
  41e0a4:	bl	40a870 <log_object_internal@plt>
  41e0a8:	stur	w0, [x29, #-76]
  41e0ac:	ldur	w11, [x29, #-76]
  41e0b0:	stur	w11, [x29, #-4]
  41e0b4:	b	41e21c <udev_node_update_old_links+0x308>
  41e0b8:	ldur	x0, [x29, #-24]
  41e0bc:	bl	40aee0 <sd_device_get_devlink_first@plt>
  41e0c0:	stur	x0, [x29, #-32]
  41e0c4:	ldur	x8, [x29, #-32]
  41e0c8:	cbz	x8, 41e218 <udev_node_update_old_links+0x304>
  41e0cc:	mov	w8, #0x0                   	// #0
  41e0d0:	strb	w8, [sp, #87]
  41e0d4:	ldur	x0, [x29, #-16]
  41e0d8:	bl	40aee0 <sd_device_get_devlink_first@plt>
  41e0dc:	str	x0, [sp, #88]
  41e0e0:	ldr	x8, [sp, #88]
  41e0e4:	cbz	x8, 41e114 <udev_node_update_old_links+0x200>
  41e0e8:	ldur	x0, [x29, #-32]
  41e0ec:	ldr	x1, [sp, #88]
  41e0f0:	bl	40aa20 <strcmp@plt>
  41e0f4:	cbnz	w0, 41e104 <udev_node_update_old_links+0x1f0>
  41e0f8:	mov	w8, #0x1                   	// #1
  41e0fc:	strb	w8, [sp, #87]
  41e100:	b	41e114 <udev_node_update_old_links+0x200>
  41e104:	ldur	x0, [x29, #-16]
  41e108:	bl	40af00 <sd_device_get_devlink_next@plt>
  41e10c:	str	x0, [sp, #88]
  41e110:	b	41e0e0 <udev_node_update_old_links+0x1cc>
  41e114:	ldrb	w8, [sp, #87]
  41e118:	tbnz	w8, #0, 41e120 <udev_node_update_old_links+0x20c>
  41e11c:	b	41e124 <udev_node_update_old_links+0x210>
  41e120:	b	41e208 <udev_node_update_old_links+0x2f4>
  41e124:	mov	x8, xzr
  41e128:	str	x8, [sp, #72]
  41e12c:	ldur	x8, [x29, #-16]
  41e130:	str	x8, [sp, #64]
  41e134:	mov	w9, #0x7                   	// #7
  41e138:	str	w9, [sp, #60]
  41e13c:	str	wzr, [sp, #56]
  41e140:	ldr	x8, [sp, #64]
  41e144:	cbz	x8, 41e184 <udev_node_update_old_links+0x270>
  41e148:	mov	w0, #0x1                   	// #1
  41e14c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e150:	ldr	w8, [sp, #60]
  41e154:	cmp	w0, w8
  41e158:	cset	w8, ge  // ge = tcont
  41e15c:	mov	w9, #0x1                   	// #1
  41e160:	eor	w8, w8, #0x1
  41e164:	eor	w8, w8, w9
  41e168:	and	w8, w8, #0x1
  41e16c:	mov	w1, w8
  41e170:	sxtw	x10, w1
  41e174:	cbz	x10, 41e184 <udev_node_update_old_links+0x270>
  41e178:	ldr	x0, [sp, #64]
  41e17c:	add	x1, sp, #0x48
  41e180:	bl	40a860 <sd_device_get_sysname@plt>
  41e184:	ldr	w0, [sp, #60]
  41e188:	ldr	w1, [sp, #56]
  41e18c:	ldr	x8, [sp, #72]
  41e190:	mov	x9, xzr
  41e194:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41e198:	add	x10, x10, #0xa46
  41e19c:	cmp	x8, #0x0
  41e1a0:	csel	x5, x10, x9, ne  // ne = any
  41e1a4:	ldr	x6, [sp, #72]
  41e1a8:	ldur	x8, [x29, #-32]
  41e1ac:	ldur	x10, [x29, #-40]
  41e1b0:	ldr	x2, [sp, #40]
  41e1b4:	mov	w3, #0x109                 	// #265
  41e1b8:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41e1bc:	add	x4, x4, #0xd2a
  41e1c0:	mov	x7, x9
  41e1c4:	mov	x11, sp
  41e1c8:	str	x9, [x11]
  41e1cc:	mov	x9, sp
  41e1d0:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41e1d4:	add	x11, x11, #0xd5f
  41e1d8:	str	x11, [x9, #8]
  41e1dc:	mov	x9, sp
  41e1e0:	str	x8, [x9, #16]
  41e1e4:	mov	x8, sp
  41e1e8:	str	x10, [x8, #24]
  41e1ec:	bl	40a870 <log_object_internal@plt>
  41e1f0:	str	w0, [sp, #52]
  41e1f4:	ldur	x0, [x29, #-16]
  41e1f8:	ldur	x1, [x29, #-32]
  41e1fc:	mov	w12, wzr
  41e200:	and	w2, w12, #0x1
  41e204:	bl	41e22c <link_update>
  41e208:	ldur	x0, [x29, #-24]
  41e20c:	bl	40af00 <sd_device_get_devlink_next@plt>
  41e210:	stur	x0, [x29, #-32]
  41e214:	b	41e0c4 <udev_node_update_old_links+0x1b0>
  41e218:	stur	wzr, [x29, #-4]
  41e21c:	ldur	w0, [x29, #-4]
  41e220:	ldp	x29, x30, [sp, #176]
  41e224:	add	sp, sp, #0xc0
  41e228:	ret

000000000041e22c <link_update>:
  41e22c:	stp	x29, x30, [sp, #-32]!
  41e230:	str	x28, [sp, #16]
  41e234:	mov	x29, sp
  41e238:	sub	sp, sp, #0x1, lsl #12
  41e23c:	sub	sp, sp, #0xe0
  41e240:	sub	x8, x29, #0x38
  41e244:	mov	x9, xzr
  41e248:	mov	w10, #0x1                   	// #1
  41e24c:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41e250:	add	x11, x11, #0xcd1
  41e254:	add	x11, x11, #0x3
  41e258:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41e25c:	add	x12, x12, #0xeb7
  41e260:	str	x0, [x8, #40]
  41e264:	str	x1, [x8, #32]
  41e268:	and	w10, w2, w10
  41e26c:	strb	w10, [x8, #31]
  41e270:	str	x9, [x8, #16]
  41e274:	str	x9, [x8, #8]
  41e278:	str	x9, [x8]
  41e27c:	str	x8, [sp, #72]
  41e280:	str	x11, [sp, #64]
  41e284:	str	x12, [sp, #56]
  41e288:	ldr	x8, [sp, #72]
  41e28c:	ldr	x9, [x8, #40]
  41e290:	cmp	x9, #0x0
  41e294:	cset	w10, ne  // ne = any
  41e298:	mov	w11, #0x1                   	// #1
  41e29c:	eor	w10, w10, #0x1
  41e2a0:	eor	w10, w10, w11
  41e2a4:	eor	w10, w10, w11
  41e2a8:	and	w10, w10, #0x1
  41e2ac:	mov	w0, w10
  41e2b0:	sxtw	x9, w0
  41e2b4:	cbz	x9, 41e2d8 <link_update+0xac>
  41e2b8:	mov	w0, #0x1                   	// #1
  41e2bc:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41e2c0:	add	x1, x1, #0xee1
  41e2c4:	ldr	x2, [sp, #64]
  41e2c8:	mov	w3, #0xc5                  	// #197
  41e2cc:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41e2d0:	add	x4, x4, #0xe7f
  41e2d4:	bl	40a540 <log_assert_failed_realm@plt>
  41e2d8:	ldr	x8, [sp, #72]
  41e2dc:	ldr	x9, [x8, #32]
  41e2e0:	cmp	x9, #0x0
  41e2e4:	cset	w10, ne  // ne = any
  41e2e8:	mov	w11, #0x1                   	// #1
  41e2ec:	eor	w10, w10, #0x1
  41e2f0:	eor	w10, w10, w11
  41e2f4:	eor	w10, w10, w11
  41e2f8:	and	w10, w10, #0x1
  41e2fc:	mov	w0, w10
  41e300:	sxtw	x9, w0
  41e304:	cbz	x9, 41e328 <link_update+0xfc>
  41e308:	mov	w0, #0x1                   	// #1
  41e30c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  41e310:	add	x1, x1, #0xeb1
  41e314:	ldr	x2, [sp, #64]
  41e318:	mov	w3, #0xc6                  	// #198
  41e31c:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41e320:	add	x4, x4, #0xe7f
  41e324:	bl	40a540 <log_assert_failed_realm@plt>
  41e328:	ldr	x8, [sp, #72]
  41e32c:	ldr	x0, [x8, #40]
  41e330:	add	x1, sp, #0xa0
  41e334:	bl	40b0a0 <device_get_id_filename@plt>
  41e338:	str	w0, [sp, #156]
  41e33c:	ldr	w9, [sp, #156]
  41e340:	cmp	w9, #0x0
  41e344:	cset	w9, ge  // ge = tcont
  41e348:	tbnz	w9, #0, 41e420 <link_update+0x1f4>
  41e34c:	mov	x8, xzr
  41e350:	str	x8, [sp, #144]
  41e354:	ldr	x8, [sp, #72]
  41e358:	ldr	x9, [x8, #40]
  41e35c:	str	x9, [sp, #136]
  41e360:	mov	w10, #0x7                   	// #7
  41e364:	str	w10, [sp, #132]
  41e368:	ldr	w10, [sp, #156]
  41e36c:	str	w10, [sp, #128]
  41e370:	ldr	x9, [sp, #136]
  41e374:	cbz	x9, 41e3b4 <link_update+0x188>
  41e378:	mov	w0, #0x1                   	// #1
  41e37c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e380:	ldr	w8, [sp, #132]
  41e384:	cmp	w0, w8
  41e388:	cset	w8, ge  // ge = tcont
  41e38c:	mov	w9, #0x1                   	// #1
  41e390:	eor	w8, w8, #0x1
  41e394:	eor	w8, w8, w9
  41e398:	and	w8, w8, #0x1
  41e39c:	mov	w1, w8
  41e3a0:	sxtw	x10, w1
  41e3a4:	cbz	x10, 41e3b4 <link_update+0x188>
  41e3a8:	ldr	x0, [sp, #136]
  41e3ac:	add	x1, sp, #0x90
  41e3b0:	bl	40a860 <sd_device_get_sysname@plt>
  41e3b4:	ldr	w0, [sp, #132]
  41e3b8:	ldr	w1, [sp, #128]
  41e3bc:	ldr	x8, [sp, #144]
  41e3c0:	mov	x9, xzr
  41e3c4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41e3c8:	add	x10, x10, #0xa46
  41e3cc:	cmp	x8, #0x0
  41e3d0:	csel	x5, x10, x9, ne  // ne = any
  41e3d4:	ldr	x6, [sp, #144]
  41e3d8:	ldr	x2, [sp, #64]
  41e3dc:	mov	w3, #0xca                  	// #202
  41e3e0:	ldr	x4, [sp, #56]
  41e3e4:	mov	x7, x9
  41e3e8:	mov	x8, sp
  41e3ec:	str	x9, [x8]
  41e3f0:	mov	x8, sp
  41e3f4:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  41e3f8:	add	x9, x9, #0xec3
  41e3fc:	str	x9, [x8, #8]
  41e400:	bl	40a870 <log_object_internal@plt>
  41e404:	str	w0, [sp, #124]
  41e408:	ldr	w11, [sp, #124]
  41e40c:	ldr	x8, [sp, #72]
  41e410:	str	w11, [x8, #52]
  41e414:	mov	w11, #0x1                   	// #1
  41e418:	str	w11, [sp, #120]
  41e41c:	b	41e760 <link_update+0x534>
  41e420:	ldr	x8, [sp, #72]
  41e424:	ldr	x9, [x8, #32]
  41e428:	add	x0, x9, #0x4
  41e42c:	add	x9, sp, #0xa8
  41e430:	mov	x1, x9
  41e434:	mov	x2, #0x1000                	// #4096
  41e438:	str	x9, [sp, #48]
  41e43c:	bl	40b0b0 <util_path_encode@plt>
  41e440:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  41e444:	add	x8, x8, #0xee1
  41e448:	mov	x0, x8
  41e44c:	ldr	x1, [sp, #48]
  41e450:	mov	x8, #0xffffffffffffffff    	// #-1
  41e454:	mov	x2, x8
  41e458:	bl	40af50 <path_join_internal@plt>
  41e45c:	ldr	x8, [sp, #72]
  41e460:	str	x0, [x8]
  41e464:	ldr	x9, [x8]
  41e468:	cbnz	x9, 41e49c <link_update+0x270>
  41e46c:	mov	w8, #0x1                   	// #1
  41e470:	mov	w0, w8
  41e474:	ldr	x1, [sp, #64]
  41e478:	mov	w2, #0xcf                  	// #207
  41e47c:	ldr	x3, [sp, #56]
  41e480:	str	w8, [sp, #44]
  41e484:	bl	40a5e0 <log_oom_internal@plt>
  41e488:	ldr	x9, [sp, #72]
  41e48c:	str	w0, [x9, #52]
  41e490:	ldr	w8, [sp, #44]
  41e494:	str	w8, [sp, #120]
  41e498:	b	41e760 <link_update+0x534>
  41e49c:	ldr	x8, [sp, #72]
  41e4a0:	ldr	x0, [x8]
  41e4a4:	ldr	x1, [sp, #160]
  41e4a8:	mov	x9, #0xffffffffffffffff    	// #-1
  41e4ac:	mov	x2, x9
  41e4b0:	bl	40af50 <path_join_internal@plt>
  41e4b4:	ldr	x8, [sp, #72]
  41e4b8:	str	x0, [x8, #8]
  41e4bc:	ldr	x9, [x8, #8]
  41e4c0:	cbnz	x9, 41e4f4 <link_update+0x2c8>
  41e4c4:	mov	w8, #0x1                   	// #1
  41e4c8:	mov	w0, w8
  41e4cc:	ldr	x1, [sp, #64]
  41e4d0:	mov	w2, #0xd2                  	// #210
  41e4d4:	ldr	x3, [sp, #56]
  41e4d8:	str	w8, [sp, #40]
  41e4dc:	bl	40a5e0 <log_oom_internal@plt>
  41e4e0:	ldr	x9, [sp, #72]
  41e4e4:	str	w0, [x9, #52]
  41e4e8:	ldr	w8, [sp, #40]
  41e4ec:	str	w8, [sp, #120]
  41e4f0:	b	41e760 <link_update+0x534>
  41e4f4:	ldr	x8, [sp, #72]
  41e4f8:	ldrb	w9, [x8, #31]
  41e4fc:	tbnz	w9, #0, 41e51c <link_update+0x2f0>
  41e500:	ldr	x8, [sp, #72]
  41e504:	ldr	x0, [x8, #8]
  41e508:	bl	40a7d0 <unlink@plt>
  41e50c:	cbnz	w0, 41e51c <link_update+0x2f0>
  41e510:	ldr	x8, [sp, #72]
  41e514:	ldr	x0, [x8]
  41e518:	bl	40b0c0 <rmdir@plt>
  41e51c:	ldr	x8, [sp, #72]
  41e520:	ldr	x0, [x8, #40]
  41e524:	ldrb	w9, [x8, #31]
  41e528:	ldr	x2, [x8]
  41e52c:	and	w1, w9, #0x1
  41e530:	sub	x3, x29, #0x28
  41e534:	bl	42110c <link_find_prioritized>
  41e538:	str	w0, [sp, #156]
  41e53c:	ldr	w9, [sp, #156]
  41e540:	cmp	w9, #0x0
  41e544:	cset	w9, ge  // ge = tcont
  41e548:	tbnz	w9, #0, 41e63c <link_update+0x410>
  41e54c:	mov	x8, xzr
  41e550:	str	x8, [sp, #112]
  41e554:	ldr	x8, [sp, #72]
  41e558:	ldr	x9, [x8, #40]
  41e55c:	str	x9, [sp, #104]
  41e560:	mov	w10, #0x7                   	// #7
  41e564:	str	w10, [sp, #100]
  41e568:	str	wzr, [sp, #96]
  41e56c:	ldr	x9, [sp, #104]
  41e570:	cbz	x9, 41e5b0 <link_update+0x384>
  41e574:	mov	w0, #0x1                   	// #1
  41e578:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e57c:	ldr	w8, [sp, #100]
  41e580:	cmp	w0, w8
  41e584:	cset	w8, ge  // ge = tcont
  41e588:	mov	w9, #0x1                   	// #1
  41e58c:	eor	w8, w8, #0x1
  41e590:	eor	w8, w8, w9
  41e594:	and	w8, w8, #0x1
  41e598:	mov	w1, w8
  41e59c:	sxtw	x10, w1
  41e5a0:	cbz	x10, 41e5b0 <link_update+0x384>
  41e5a4:	ldr	x0, [sp, #104]
  41e5a8:	add	x1, sp, #0x70
  41e5ac:	bl	40a860 <sd_device_get_sysname@plt>
  41e5b0:	ldr	w0, [sp, #100]
  41e5b4:	ldr	w1, [sp, #96]
  41e5b8:	ldr	x8, [sp, #112]
  41e5bc:	mov	x9, xzr
  41e5c0:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  41e5c4:	add	x10, x10, #0xa46
  41e5c8:	cmp	x8, #0x0
  41e5cc:	csel	x5, x10, x9, ne  // ne = any
  41e5d0:	ldr	x6, [sp, #112]
  41e5d4:	ldr	x8, [sp, #72]
  41e5d8:	ldr	x10, [x8, #32]
  41e5dc:	ldr	x2, [sp, #64]
  41e5e0:	mov	w3, #0xd9                  	// #217
  41e5e4:	ldr	x4, [sp, #56]
  41e5e8:	mov	x7, x9
  41e5ec:	mov	x11, sp
  41e5f0:	str	x9, [x11]
  41e5f4:	mov	x9, sp
  41e5f8:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41e5fc:	add	x11, x11, #0xef2
  41e600:	str	x11, [x9, #8]
  41e604:	mov	x9, sp
  41e608:	str	x10, [x9, #16]
  41e60c:	bl	40a870 <log_object_internal@plt>
  41e610:	str	w0, [sp, #92]
  41e614:	ldr	x8, [sp, #72]
  41e618:	ldr	x0, [x8, #32]
  41e61c:	bl	40a7d0 <unlink@plt>
  41e620:	cbnz	w0, 41e638 <link_update+0x40c>
  41e624:	ldr	x8, [sp, #72]
  41e628:	ldr	x0, [x8, #32]
  41e62c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  41e630:	add	x1, x1, #0xb41
  41e634:	bl	40b0d0 <rmdir_parents@plt>
  41e638:	b	41e650 <link_update+0x424>
  41e63c:	ldr	x8, [sp, #72]
  41e640:	ldr	x0, [x8, #40]
  41e644:	ldr	x1, [x8, #16]
  41e648:	ldr	x2, [x8, #32]
  41e64c:	bl	42001c <node_symlink>
  41e650:	ldr	x8, [sp, #72]
  41e654:	ldrb	w9, [x8, #31]
  41e658:	tbnz	w9, #0, 41e660 <link_update+0x434>
  41e65c:	b	41e74c <link_update+0x520>
  41e660:	mov	w8, #0xffffffff            	// #-1
  41e664:	str	w8, [sp, #88]
  41e668:	ldr	x9, [sp, #72]
  41e66c:	ldr	x0, [x9, #8]
  41e670:	mov	w1, #0x1ed                 	// #493
  41e674:	bl	40b0e0 <mkdir_parents@plt>
  41e678:	str	w0, [sp, #156]
  41e67c:	mov	w8, #0x0                   	// #0
  41e680:	strb	w8, [sp, #87]
  41e684:	ldr	w8, [sp, #156]
  41e688:	mov	w10, #0xfffffffe            	// #-2
  41e68c:	cmp	w8, w10
  41e690:	str	w8, [sp, #36]
  41e694:	b.eq	41e6b4 <link_update+0x488>  // b.none
  41e698:	b	41e69c <link_update+0x470>
  41e69c:	ldr	w8, [sp, #36]
  41e6a0:	cmp	w8, #0x0
  41e6a4:	cset	w9, eq  // eq = none
  41e6a8:	eor	w9, w9, #0x1
  41e6ac:	tbnz	w9, #0, 41e6c0 <link_update+0x494>
  41e6b0:	b	41e6b4 <link_update+0x488>
  41e6b4:	mov	w8, #0x1                   	// #1
  41e6b8:	strb	w8, [sp, #87]
  41e6bc:	b	41e6c0 <link_update+0x494>
  41e6c0:	ldrb	w8, [sp, #87]
  41e6c4:	and	w8, w8, #0x1
  41e6c8:	strb	w8, [sp, #86]
  41e6cc:	ldrb	w8, [sp, #86]
  41e6d0:	tbnz	w8, #0, 41e6e0 <link_update+0x4b4>
  41e6d4:	mov	w8, #0x6                   	// #6
  41e6d8:	str	w8, [sp, #120]
  41e6dc:	b	41e724 <link_update+0x4f8>
  41e6e0:	ldr	x8, [sp, #72]
  41e6e4:	ldr	x0, [x8, #8]
  41e6e8:	mov	w1, #0x8241                	// #33345
  41e6ec:	movk	w1, #0x8, lsl #16
  41e6f0:	mov	w2, #0x124                 	// #292
  41e6f4:	bl	40abd0 <open64@plt>
  41e6f8:	str	w0, [sp, #88]
  41e6fc:	ldr	w9, [sp, #88]
  41e700:	cmp	w9, #0x0
  41e704:	cset	w9, ge  // ge = tcont
  41e708:	tbnz	w9, #0, 41e720 <link_update+0x4f4>
  41e70c:	bl	40a480 <__errno_location@plt>
  41e710:	ldr	w8, [x0]
  41e714:	mov	w9, wzr
  41e718:	subs	w8, w9, w8
  41e71c:	str	w8, [sp, #156]
  41e720:	str	wzr, [sp, #120]
  41e724:	add	x0, sp, #0x58
  41e728:	bl	421754 <closep>
  41e72c:	ldr	w8, [sp, #120]
  41e730:	cbz	w8, 41e73c <link_update+0x510>
  41e734:	b	41e738 <link_update+0x50c>
  41e738:	b	41e74c <link_update+0x520>
  41e73c:	ldr	w8, [sp, #156]
  41e740:	mov	w9, #0xfffffffe            	// #-2
  41e744:	cmp	w8, w9
  41e748:	b.eq	41e660 <link_update+0x434>  // b.none
  41e74c:	ldr	w8, [sp, #156]
  41e750:	ldr	x9, [sp, #72]
  41e754:	str	w8, [x9, #52]
  41e758:	mov	w8, #0x1                   	// #1
  41e75c:	str	w8, [sp, #120]
  41e760:	sub	x0, x29, #0x38
  41e764:	bl	41ec54 <freep>
  41e768:	sub	x0, x29, #0x30
  41e76c:	bl	41ec54 <freep>
  41e770:	sub	x0, x29, #0x28
  41e774:	bl	41ec54 <freep>
  41e778:	ldr	x8, [sp, #72]
  41e77c:	ldr	w0, [x8, #52]
  41e780:	add	sp, sp, #0x1, lsl #12
  41e784:	add	sp, sp, #0xe0
  41e788:	ldr	x28, [sp, #16]
  41e78c:	ldp	x29, x30, [sp], #32
  41e790:	ret

000000000041e794 <udev_node_add>:
  41e794:	sub	sp, sp, #0x150
  41e798:	stp	x29, x30, [sp, #304]
  41e79c:	str	x28, [sp, #320]
  41e7a0:	add	x29, sp, #0x130
  41e7a4:	sub	x8, x29, #0x28
  41e7a8:	mov	x9, xzr
  41e7ac:	mov	w10, #0x1                   	// #1
  41e7b0:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  41e7b4:	add	x11, x11, #0xa46
  41e7b8:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41e7bc:	add	x12, x12, #0xcd1
  41e7c0:	add	x12, x12, #0x3
  41e7c4:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  41e7c8:	add	x13, x13, #0xde1
  41e7cc:	str	x0, [x8, #24]
  41e7d0:	and	w10, w1, w10
  41e7d4:	sturb	w10, [x29, #-17]
  41e7d8:	stur	w2, [x29, #-24]
  41e7dc:	stur	w3, [x29, #-28]
  41e7e0:	stur	w4, [x29, #-32]
  41e7e4:	str	x5, [x8]
  41e7e8:	stur	x9, [x29, #-64]
  41e7ec:	str	x8, [sp, #120]
  41e7f0:	str	x11, [sp, #112]
  41e7f4:	str	x12, [sp, #104]
  41e7f8:	str	x13, [sp, #96]
  41e7fc:	ldr	x8, [sp, #120]
  41e800:	ldr	x9, [x8, #24]
  41e804:	cmp	x9, #0x0
  41e808:	cset	w10, ne  // ne = any
  41e80c:	mov	w11, #0x1                   	// #1
  41e810:	eor	w10, w10, #0x1
  41e814:	eor	w10, w10, w11
  41e818:	eor	w10, w10, w11
  41e81c:	and	w10, w10, #0x1
  41e820:	mov	w0, w10
  41e824:	sxtw	x9, w0
  41e828:	cbz	x9, 41e84c <udev_node_add+0xb8>
  41e82c:	mov	w0, #0x1                   	// #1
  41e830:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41e834:	add	x1, x1, #0xee1
  41e838:	ldr	x2, [sp, #104]
  41e83c:	mov	w3, #0x1a2                 	// #418
  41e840:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41e844:	add	x4, x4, #0xd93
  41e848:	bl	40a540 <log_assert_failed_realm@plt>
  41e84c:	ldr	x8, [sp, #120]
  41e850:	ldr	x0, [x8, #24]
  41e854:	sub	x1, x29, #0x30
  41e858:	bl	40a930 <sd_device_get_devname@plt>
  41e85c:	stur	w0, [x29, #-68]
  41e860:	ldur	w9, [x29, #-68]
  41e864:	cmp	w9, #0x0
  41e868:	cset	w9, ge  // ge = tcont
  41e86c:	tbnz	w9, #0, 41e93c <udev_node_add+0x1a8>
  41e870:	mov	x8, xzr
  41e874:	stur	x8, [x29, #-80]
  41e878:	ldr	x8, [sp, #120]
  41e87c:	ldr	x9, [x8, #24]
  41e880:	stur	x9, [x29, #-88]
  41e884:	mov	w10, #0x7                   	// #7
  41e888:	stur	w10, [x29, #-92]
  41e88c:	ldur	w10, [x29, #-68]
  41e890:	stur	w10, [x29, #-96]
  41e894:	ldur	x9, [x29, #-88]
  41e898:	cbz	x9, 41e8d8 <udev_node_add+0x144>
  41e89c:	mov	w0, #0x1                   	// #1
  41e8a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e8a4:	ldur	w8, [x29, #-92]
  41e8a8:	cmp	w0, w8
  41e8ac:	cset	w8, ge  // ge = tcont
  41e8b0:	mov	w9, #0x1                   	// #1
  41e8b4:	eor	w8, w8, #0x1
  41e8b8:	eor	w8, w8, w9
  41e8bc:	and	w8, w8, #0x1
  41e8c0:	mov	w1, w8
  41e8c4:	sxtw	x10, w1
  41e8c8:	cbz	x10, 41e8d8 <udev_node_add+0x144>
  41e8cc:	ldur	x0, [x29, #-88]
  41e8d0:	sub	x1, x29, #0x50
  41e8d4:	bl	40a860 <sd_device_get_sysname@plt>
  41e8d8:	ldur	w0, [x29, #-92]
  41e8dc:	ldur	w1, [x29, #-96]
  41e8e0:	ldur	x8, [x29, #-80]
  41e8e4:	mov	x9, xzr
  41e8e8:	cmp	x8, #0x0
  41e8ec:	ldr	x8, [sp, #112]
  41e8f0:	csel	x5, x8, x9, ne  // ne = any
  41e8f4:	ldur	x6, [x29, #-80]
  41e8f8:	ldr	x2, [sp, #104]
  41e8fc:	mov	w3, #0x1a6                 	// #422
  41e900:	ldr	x4, [sp, #96]
  41e904:	mov	x7, x9
  41e908:	mov	x10, sp
  41e90c:	str	x9, [x10]
  41e910:	mov	x9, sp
  41e914:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41e918:	add	x10, x10, #0xdef
  41e91c:	str	x10, [x9, #8]
  41e920:	bl	40a870 <log_object_internal@plt>
  41e924:	stur	w0, [x29, #-100]
  41e928:	ldur	w11, [x29, #-100]
  41e92c:	stur	w11, [x29, #-4]
  41e930:	mov	w11, #0x1                   	// #1
  41e934:	stur	w11, [x29, #-104]
  41e938:	b	41ec38 <udev_node_add+0x4a4>
  41e93c:	mov	w0, #0x1                   	// #1
  41e940:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e944:	cmp	w0, #0x7
  41e948:	cset	w8, ge  // ge = tcont
  41e94c:	mov	w9, #0x1                   	// #1
  41e950:	eor	w8, w8, #0x1
  41e954:	eor	w8, w8, w9
  41e958:	and	w8, w8, #0x1
  41e95c:	mov	w1, w8
  41e960:	sxtw	x10, w1
  41e964:	cbz	x10, 41ea94 <udev_node_add+0x300>
  41e968:	sub	x1, x29, #0x70
  41e96c:	mov	x8, xzr
  41e970:	stur	x8, [x29, #-112]
  41e974:	ldr	x9, [sp, #120]
  41e978:	ldr	x0, [x9, #24]
  41e97c:	str	x8, [sp, #88]
  41e980:	bl	40b0a0 <device_get_id_filename@plt>
  41e984:	ldr	x8, [sp, #88]
  41e988:	stur	x8, [x29, #-120]
  41e98c:	ldr	x9, [sp, #120]
  41e990:	ldr	x10, [x9, #24]
  41e994:	stur	x10, [x29, #-128]
  41e998:	mov	w11, #0x7                   	// #7
  41e99c:	stur	w11, [x29, #-132]
  41e9a0:	stur	wzr, [x29, #-136]
  41e9a4:	ldur	x10, [x29, #-128]
  41e9a8:	cbz	x10, 41e9e8 <udev_node_add+0x254>
  41e9ac:	mov	w0, #0x1                   	// #1
  41e9b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  41e9b4:	ldur	w8, [x29, #-132]
  41e9b8:	cmp	w0, w8
  41e9bc:	cset	w8, ge  // ge = tcont
  41e9c0:	mov	w9, #0x1                   	// #1
  41e9c4:	eor	w8, w8, #0x1
  41e9c8:	eor	w8, w8, w9
  41e9cc:	and	w8, w8, #0x1
  41e9d0:	mov	w1, w8
  41e9d4:	sxtw	x10, w1
  41e9d8:	cbz	x10, 41e9e8 <udev_node_add+0x254>
  41e9dc:	ldur	x0, [x29, #-128]
  41e9e0:	sub	x1, x29, #0x78
  41e9e4:	bl	40a860 <sd_device_get_sysname@plt>
  41e9e8:	ldur	w0, [x29, #-132]
  41e9ec:	ldur	w1, [x29, #-136]
  41e9f0:	ldur	x8, [x29, #-120]
  41e9f4:	mov	x9, xzr
  41e9f8:	cmp	x8, #0x0
  41e9fc:	ldr	x8, [sp, #112]
  41ea00:	csel	x5, x8, x9, ne  // ne = any
  41ea04:	ldur	x6, [x29, #-120]
  41ea08:	ldur	x10, [x29, #-48]
  41ea0c:	ldur	x11, [x29, #-112]
  41ea10:	str	w0, [sp, #84]
  41ea14:	mov	x0, x11
  41ea18:	str	w1, [sp, #80]
  41ea1c:	str	x9, [sp, #72]
  41ea20:	str	x5, [sp, #64]
  41ea24:	str	x6, [sp, #56]
  41ea28:	str	x10, [sp, #48]
  41ea2c:	bl	41ec7c <strnull>
  41ea30:	ldr	w12, [sp, #84]
  41ea34:	str	x0, [sp, #40]
  41ea38:	mov	w0, w12
  41ea3c:	ldr	w1, [sp, #80]
  41ea40:	ldr	x2, [sp, #104]
  41ea44:	mov	w3, #0x1ac                 	// #428
  41ea48:	ldr	x4, [sp, #96]
  41ea4c:	ldr	x5, [sp, #64]
  41ea50:	ldr	x6, [sp, #56]
  41ea54:	ldr	x7, [sp, #72]
  41ea58:	mov	x8, sp
  41ea5c:	ldr	x9, [sp, #72]
  41ea60:	str	x9, [x8]
  41ea64:	mov	x8, sp
  41ea68:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41ea6c:	add	x10, x10, #0xe09
  41ea70:	str	x10, [x8, #8]
  41ea74:	mov	x8, sp
  41ea78:	ldr	x10, [sp, #48]
  41ea7c:	str	x10, [x8, #16]
  41ea80:	mov	x8, sp
  41ea84:	ldr	x11, [sp, #40]
  41ea88:	str	x11, [x8, #24]
  41ea8c:	bl	40a870 <log_object_internal@plt>
  41ea90:	stur	w0, [x29, #-140]
  41ea94:	ldr	x8, [sp, #120]
  41ea98:	ldr	x0, [x8, #24]
  41ea9c:	ldurb	w9, [x29, #-17]
  41eaa0:	ldur	w2, [x29, #-24]
  41eaa4:	ldur	w3, [x29, #-28]
  41eaa8:	ldur	w4, [x29, #-32]
  41eaac:	ldr	x5, [x8]
  41eab0:	and	w1, w9, #0x1
  41eab4:	bl	41ecb8 <node_permissions_apply>
  41eab8:	stur	w0, [x29, #-68]
  41eabc:	ldur	w9, [x29, #-68]
  41eac0:	cmp	w9, #0x0
  41eac4:	cset	w9, ge  // ge = tcont
  41eac8:	tbnz	w9, #0, 41eae0 <udev_node_add+0x34c>
  41eacc:	ldur	w8, [x29, #-68]
  41ead0:	stur	w8, [x29, #-4]
  41ead4:	mov	w8, #0x1                   	// #1
  41ead8:	stur	w8, [x29, #-104]
  41eadc:	b	41ec38 <udev_node_add+0x4a4>
  41eae0:	ldr	x8, [sp, #120]
  41eae4:	ldr	x0, [x8, #24]
  41eae8:	sub	x1, x29, #0x40
  41eaec:	bl	41fe54 <xsprintf_dev_num_path_from_sd_device>
  41eaf0:	stur	w0, [x29, #-68]
  41eaf4:	ldur	w9, [x29, #-68]
  41eaf8:	cmp	w9, #0x0
  41eafc:	cset	w9, ge  // ge = tcont
  41eb00:	tbnz	w9, #0, 41ebd0 <udev_node_add+0x43c>
  41eb04:	mov	x8, xzr
  41eb08:	str	x8, [sp, #152]
  41eb0c:	ldr	x8, [sp, #120]
  41eb10:	ldr	x9, [x8, #24]
  41eb14:	str	x9, [sp, #144]
  41eb18:	mov	w10, #0x7                   	// #7
  41eb1c:	str	w10, [sp, #140]
  41eb20:	ldur	w10, [x29, #-68]
  41eb24:	str	w10, [sp, #136]
  41eb28:	ldr	x9, [sp, #144]
  41eb2c:	cbz	x9, 41eb6c <udev_node_add+0x3d8>
  41eb30:	mov	w0, #0x1                   	// #1
  41eb34:	bl	40a3f0 <log_get_max_level_realm@plt>
  41eb38:	ldr	w8, [sp, #140]
  41eb3c:	cmp	w0, w8
  41eb40:	cset	w8, ge  // ge = tcont
  41eb44:	mov	w9, #0x1                   	// #1
  41eb48:	eor	w8, w8, #0x1
  41eb4c:	eor	w8, w8, w9
  41eb50:	and	w8, w8, #0x1
  41eb54:	mov	w1, w8
  41eb58:	sxtw	x10, w1
  41eb5c:	cbz	x10, 41eb6c <udev_node_add+0x3d8>
  41eb60:	ldr	x0, [sp, #144]
  41eb64:	add	x1, sp, #0x98
  41eb68:	bl	40a860 <sd_device_get_sysname@plt>
  41eb6c:	ldr	w0, [sp, #140]
  41eb70:	ldr	w1, [sp, #136]
  41eb74:	ldr	x8, [sp, #152]
  41eb78:	mov	x9, xzr
  41eb7c:	cmp	x8, #0x0
  41eb80:	ldr	x8, [sp, #112]
  41eb84:	csel	x5, x8, x9, ne  // ne = any
  41eb88:	ldr	x6, [sp, #152]
  41eb8c:	ldr	x2, [sp, #104]
  41eb90:	mov	w3, #0x1b5                 	// #437
  41eb94:	ldr	x4, [sp, #96]
  41eb98:	mov	x7, x9
  41eb9c:	mov	x10, sp
  41eba0:	str	x9, [x10]
  41eba4:	mov	x9, sp
  41eba8:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  41ebac:	add	x10, x10, #0xe2e
  41ebb0:	str	x10, [x9, #8]
  41ebb4:	bl	40a870 <log_object_internal@plt>
  41ebb8:	str	w0, [sp, #132]
  41ebbc:	ldr	w11, [sp, #132]
  41ebc0:	stur	w11, [x29, #-4]
  41ebc4:	mov	w11, #0x1                   	// #1
  41ebc8:	stur	w11, [x29, #-104]
  41ebcc:	b	41ec38 <udev_node_add+0x4a4>
  41ebd0:	ldr	x8, [sp, #120]
  41ebd4:	ldr	x0, [x8, #24]
  41ebd8:	ldur	x1, [x29, #-48]
  41ebdc:	ldur	x2, [x29, #-64]
  41ebe0:	bl	42001c <node_symlink>
  41ebe4:	ldr	x8, [sp, #120]
  41ebe8:	ldr	x9, [x8, #24]
  41ebec:	mov	x0, x9
  41ebf0:	bl	40aee0 <sd_device_get_devlink_first@plt>
  41ebf4:	stur	x0, [x29, #-56]
  41ebf8:	ldur	x8, [x29, #-56]
  41ebfc:	cbz	x8, 41ec2c <udev_node_add+0x498>
  41ec00:	ldr	x8, [sp, #120]
  41ec04:	ldr	x0, [x8, #24]
  41ec08:	ldur	x1, [x29, #-56]
  41ec0c:	mov	w9, #0x1                   	// #1
  41ec10:	and	w2, w9, #0x1
  41ec14:	bl	41e22c <link_update>
  41ec18:	ldr	x8, [sp, #120]
  41ec1c:	ldr	x0, [x8, #24]
  41ec20:	bl	40af00 <sd_device_get_devlink_next@plt>
  41ec24:	stur	x0, [x29, #-56]
  41ec28:	b	41ebf8 <udev_node_add+0x464>
  41ec2c:	stur	wzr, [x29, #-4]
  41ec30:	mov	w8, #0x1                   	// #1
  41ec34:	stur	w8, [x29, #-104]
  41ec38:	sub	x0, x29, #0x40
  41ec3c:	bl	41ec54 <freep>
  41ec40:	ldur	w0, [x29, #-4]
  41ec44:	ldr	x28, [sp, #320]
  41ec48:	ldp	x29, x30, [sp, #304]
  41ec4c:	add	sp, sp, #0x150
  41ec50:	ret

000000000041ec54 <freep>:
  41ec54:	sub	sp, sp, #0x20
  41ec58:	stp	x29, x30, [sp, #16]
  41ec5c:	add	x29, sp, #0x10
  41ec60:	str	x0, [sp, #8]
  41ec64:	ldr	x8, [sp, #8]
  41ec68:	ldr	x0, [x8]
  41ec6c:	bl	40a530 <free@plt>
  41ec70:	ldp	x29, x30, [sp, #16]
  41ec74:	add	sp, sp, #0x20
  41ec78:	ret

000000000041ec7c <strnull>:
  41ec7c:	sub	sp, sp, #0x20
  41ec80:	str	x0, [sp, #24]
  41ec84:	ldr	x8, [sp, #24]
  41ec88:	str	x8, [sp, #16]
  41ec8c:	cbz	x8, 41ec9c <strnull+0x20>
  41ec90:	ldr	x8, [sp, #16]
  41ec94:	str	x8, [sp, #8]
  41ec98:	b	41eca8 <strnull+0x2c>
  41ec9c:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  41eca0:	add	x8, x8, #0xfbf
  41eca4:	str	x8, [sp, #8]
  41eca8:	ldr	x8, [sp, #8]
  41ecac:	mov	x0, x8
  41ecb0:	add	sp, sp, #0x20
  41ecb4:	ret

000000000041ecb8 <node_permissions_apply>:
  41ecb8:	stp	x29, x30, [sp, #-32]!
  41ecbc:	str	x28, [sp, #16]
  41ecc0:	mov	x29, sp
  41ecc4:	sub	sp, sp, #0x3b0
  41ecc8:	add	x8, sp, #0x198
  41eccc:	mov	x9, xzr
  41ecd0:	mov	w10, #0x1                   	// #1
  41ecd4:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  41ecd8:	add	x11, x11, #0xa46
  41ecdc:	adrp	x12, 466000 <on_inotify.__assert_in_set+0x2540>
  41ece0:	add	x12, x12, #0xcd1
  41ece4:	add	x12, x12, #0x3
  41ece8:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  41ecec:	add	x13, x13, #0x1d
  41ecf0:	str	x0, [x8, #520]
  41ecf4:	and	w10, w1, w10
  41ecf8:	sturb	w10, [x29, #-17]
  41ecfc:	stur	w2, [x29, #-24]
  41ed00:	stur	w3, [x29, #-28]
  41ed04:	stur	w4, [x29, #-32]
  41ed08:	str	x5, [x8, #496]
  41ed0c:	str	x9, [x8, #472]
  41ed10:	str	x8, [sp, #256]
  41ed14:	str	x11, [sp, #248]
  41ed18:	str	x12, [sp, #240]
  41ed1c:	str	x13, [sp, #232]
  41ed20:	ldr	x8, [sp, #256]
  41ed24:	ldr	x9, [x8, #520]
  41ed28:	cmp	x9, #0x0
  41ed2c:	cset	w10, ne  // ne = any
  41ed30:	mov	w11, #0x1                   	// #1
  41ed34:	eor	w10, w10, #0x1
  41ed38:	eor	w10, w10, w11
  41ed3c:	eor	w10, w10, w11
  41ed40:	and	w10, w10, #0x1
  41ed44:	mov	w0, w10
  41ed48:	sxtw	x9, w0
  41ed4c:	cbz	x9, 41ed70 <node_permissions_apply+0xb8>
  41ed50:	mov	w0, #0x1                   	// #1
  41ed54:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41ed58:	add	x1, x1, #0xee1
  41ed5c:	ldr	x2, [sp, #240]
  41ed60:	mov	w3, #0x119                 	// #281
  41ed64:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  41ed68:	add	x4, x4, #0xfc6
  41ed6c:	bl	40a540 <log_assert_failed_realm@plt>
  41ed70:	ldr	x8, [sp, #256]
  41ed74:	ldr	x0, [x8, #520]
  41ed78:	sub	x1, x29, #0x30
  41ed7c:	bl	40a930 <sd_device_get_devname@plt>
  41ed80:	stur	w0, [x29, #-208]
  41ed84:	ldur	w9, [x29, #-208]
  41ed88:	cmp	w9, #0x0
  41ed8c:	cset	w9, ge  // ge = tcont
  41ed90:	tbnz	w9, #0, 41ee60 <node_permissions_apply+0x1a8>
  41ed94:	mov	x8, xzr
  41ed98:	ldr	x9, [sp, #256]
  41ed9c:	str	x8, [x9, #320]
  41eda0:	ldr	x8, [x9, #520]
  41eda4:	str	x8, [x9, #312]
  41eda8:	mov	w10, #0x7                   	// #7
  41edac:	stur	w10, [x29, #-228]
  41edb0:	ldur	w10, [x29, #-208]
  41edb4:	stur	w10, [x29, #-232]
  41edb8:	ldr	x8, [x9, #312]
  41edbc:	cbz	x8, 41ee00 <node_permissions_apply+0x148>
  41edc0:	mov	w0, #0x1                   	// #1
  41edc4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41edc8:	ldur	w8, [x29, #-228]
  41edcc:	cmp	w0, w8
  41edd0:	cset	w8, ge  // ge = tcont
  41edd4:	mov	w9, #0x1                   	// #1
  41edd8:	eor	w8, w8, #0x1
  41eddc:	eor	w8, w8, w9
  41ede0:	and	w8, w8, #0x1
  41ede4:	mov	w1, w8
  41ede8:	sxtw	x10, w1
  41edec:	cbz	x10, 41ee00 <node_permissions_apply+0x148>
  41edf0:	ldr	x8, [sp, #256]
  41edf4:	ldr	x0, [x8, #312]
  41edf8:	sub	x1, x29, #0xd8
  41edfc:	bl	40a860 <sd_device_get_sysname@plt>
  41ee00:	ldur	w0, [x29, #-228]
  41ee04:	ldur	w1, [x29, #-232]
  41ee08:	ldr	x8, [sp, #256]
  41ee0c:	ldr	x9, [x8, #320]
  41ee10:	mov	x10, xzr
  41ee14:	cmp	x9, #0x0
  41ee18:	ldr	x9, [sp, #248]
  41ee1c:	csel	x5, x9, x10, ne  // ne = any
  41ee20:	ldr	x6, [x8, #320]
  41ee24:	ldr	x2, [sp, #240]
  41ee28:	mov	w3, #0x11d                 	// #285
  41ee2c:	ldr	x4, [sp, #232]
  41ee30:	mov	x7, x10
  41ee34:	mov	x11, sp
  41ee38:	str	x10, [x11]
  41ee3c:	mov	x10, sp
  41ee40:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41ee44:	add	x11, x11, #0x283
  41ee48:	str	x11, [x10, #8]
  41ee4c:	bl	40a870 <log_object_internal@plt>
  41ee50:	stur	w0, [x29, #-236]
  41ee54:	ldur	w12, [x29, #-236]
  41ee58:	stur	w12, [x29, #-4]
  41ee5c:	b	41fe40 <node_permissions_apply+0x1188>
  41ee60:	ldr	x8, [sp, #256]
  41ee64:	ldr	x0, [x8, #520]
  41ee68:	sub	x1, x29, #0x38
  41ee6c:	bl	40aa10 <sd_device_get_subsystem@plt>
  41ee70:	stur	w0, [x29, #-208]
  41ee74:	ldur	w9, [x29, #-208]
  41ee78:	cmp	w9, #0x0
  41ee7c:	cset	w9, ge  // ge = tcont
  41ee80:	tbnz	w9, #0, 41ef50 <node_permissions_apply+0x298>
  41ee84:	mov	x8, xzr
  41ee88:	ldr	x9, [sp, #256]
  41ee8c:	str	x8, [x9, #288]
  41ee90:	ldr	x8, [x9, #520]
  41ee94:	str	x8, [x9, #280]
  41ee98:	mov	w10, #0x7                   	// #7
  41ee9c:	str	w10, [sp, #684]
  41eea0:	ldur	w10, [x29, #-208]
  41eea4:	str	w10, [sp, #680]
  41eea8:	ldr	x8, [x9, #280]
  41eeac:	cbz	x8, 41eef0 <node_permissions_apply+0x238>
  41eeb0:	mov	w0, #0x1                   	// #1
  41eeb4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41eeb8:	ldr	w8, [sp, #684]
  41eebc:	cmp	w0, w8
  41eec0:	cset	w8, ge  // ge = tcont
  41eec4:	mov	w9, #0x1                   	// #1
  41eec8:	eor	w8, w8, #0x1
  41eecc:	eor	w8, w8, w9
  41eed0:	and	w8, w8, #0x1
  41eed4:	mov	w1, w8
  41eed8:	sxtw	x10, w1
  41eedc:	cbz	x10, 41eef0 <node_permissions_apply+0x238>
  41eee0:	ldr	x8, [sp, #256]
  41eee4:	ldr	x0, [x8, #280]
  41eee8:	sub	x1, x29, #0xf8
  41eeec:	bl	40a860 <sd_device_get_sysname@plt>
  41eef0:	ldr	w0, [sp, #684]
  41eef4:	ldr	w1, [sp, #680]
  41eef8:	ldr	x8, [sp, #256]
  41eefc:	ldr	x9, [x8, #288]
  41ef00:	mov	x10, xzr
  41ef04:	cmp	x9, #0x0
  41ef08:	ldr	x9, [sp, #248]
  41ef0c:	csel	x5, x9, x10, ne  // ne = any
  41ef10:	ldr	x6, [x8, #288]
  41ef14:	ldr	x2, [sp, #240]
  41ef18:	mov	w3, #0x120                 	// #288
  41ef1c:	ldr	x4, [sp, #232]
  41ef20:	mov	x7, x10
  41ef24:	mov	x11, sp
  41ef28:	str	x10, [x11]
  41ef2c:	mov	x10, sp
  41ef30:	adrp	x11, 465000 <on_inotify.__assert_in_set+0x1540>
  41ef34:	add	x11, x11, #0x1fd
  41ef38:	str	x11, [x10, #8]
  41ef3c:	bl	40a870 <log_object_internal@plt>
  41ef40:	str	w0, [sp, #676]
  41ef44:	ldr	w12, [sp, #676]
  41ef48:	stur	w12, [x29, #-4]
  41ef4c:	b	41fe40 <node_permissions_apply+0x1188>
  41ef50:	ldr	x8, [sp, #256]
  41ef54:	ldr	x0, [x8, #520]
  41ef58:	sub	x1, x29, #0xc8
  41ef5c:	bl	40aa50 <sd_device_get_devnum@plt>
  41ef60:	stur	w0, [x29, #-208]
  41ef64:	ldur	w9, [x29, #-208]
  41ef68:	cmp	w9, #0x0
  41ef6c:	cset	w9, ge  // ge = tcont
  41ef70:	tbnz	w9, #0, 41f040 <node_permissions_apply+0x388>
  41ef74:	mov	x8, xzr
  41ef78:	ldr	x9, [sp, #256]
  41ef7c:	str	x8, [x9, #256]
  41ef80:	ldr	x8, [x9, #520]
  41ef84:	str	x8, [x9, #248]
  41ef88:	mov	w10, #0x7                   	// #7
  41ef8c:	str	w10, [sp, #652]
  41ef90:	ldur	w10, [x29, #-208]
  41ef94:	str	w10, [sp, #648]
  41ef98:	ldr	x8, [x9, #248]
  41ef9c:	cbz	x8, 41efe0 <node_permissions_apply+0x328>
  41efa0:	mov	w0, #0x1                   	// #1
  41efa4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41efa8:	ldr	w8, [sp, #652]
  41efac:	cmp	w0, w8
  41efb0:	cset	w8, ge  // ge = tcont
  41efb4:	mov	w9, #0x1                   	// #1
  41efb8:	eor	w8, w8, #0x1
  41efbc:	eor	w8, w8, w9
  41efc0:	and	w8, w8, #0x1
  41efc4:	mov	w1, w8
  41efc8:	sxtw	x10, w1
  41efcc:	cbz	x10, 41efe0 <node_permissions_apply+0x328>
  41efd0:	ldr	x8, [sp, #256]
  41efd4:	ldr	x0, [x8, #248]
  41efd8:	add	x1, sp, #0x298
  41efdc:	bl	40a860 <sd_device_get_sysname@plt>
  41efe0:	ldr	w0, [sp, #652]
  41efe4:	ldr	w1, [sp, #648]
  41efe8:	ldr	x8, [sp, #256]
  41efec:	ldr	x9, [x8, #256]
  41eff0:	mov	x10, xzr
  41eff4:	cmp	x9, #0x0
  41eff8:	ldr	x9, [sp, #248]
  41effc:	csel	x5, x9, x10, ne  // ne = any
  41f000:	ldr	x6, [x8, #256]
  41f004:	ldr	x2, [sp, #240]
  41f008:	mov	w3, #0x123                 	// #291
  41f00c:	ldr	x4, [sp, #232]
  41f010:	mov	x7, x10
  41f014:	mov	x11, sp
  41f018:	str	x10, [x11]
  41f01c:	mov	x10, sp
  41f020:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  41f024:	add	x11, x11, #0xc5d
  41f028:	str	x11, [x10, #8]
  41f02c:	bl	40a870 <log_object_internal@plt>
  41f030:	str	w0, [sp, #644]
  41f034:	ldr	w12, [sp, #644]
  41f038:	stur	w12, [x29, #-4]
  41f03c:	b	41fe40 <node_permissions_apply+0x1188>
  41f040:	ldr	x8, [sp, #256]
  41f044:	ldr	x0, [x8, #520]
  41f048:	sub	x1, x29, #0x40
  41f04c:	bl	40b0a0 <device_get_id_filename@plt>
  41f050:	ldr	x8, [sp, #256]
  41f054:	ldr	x9, [x8, #480]
  41f058:	mov	x0, x9
  41f05c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41f060:	add	x1, x1, #0xb74
  41f064:	bl	40aa20 <strcmp@plt>
  41f068:	cbnz	w0, 41f07c <node_permissions_apply+0x3c4>
  41f06c:	ldur	w8, [x29, #-24]
  41f070:	orr	w8, w8, #0x6000
  41f074:	stur	w8, [x29, #-24]
  41f078:	b	41f088 <node_permissions_apply+0x3d0>
  41f07c:	ldur	w8, [x29, #-24]
  41f080:	orr	w8, w8, #0x2000
  41f084:	stur	w8, [x29, #-24]
  41f088:	ldr	x8, [sp, #256]
  41f08c:	ldr	x0, [x8, #488]
  41f090:	sub	x1, x29, #0xc0
  41f094:	bl	463828 <lstat64>
  41f098:	cmp	w0, #0x0
  41f09c:	cset	w9, ge  // ge = tcont
  41f0a0:	tbnz	w9, #0, 41f19c <node_permissions_apply+0x4e4>
  41f0a4:	bl	40a480 <__errno_location@plt>
  41f0a8:	ldr	w8, [x0]
  41f0ac:	cmp	w8, #0x2
  41f0b0:	b.ne	41f0bc <node_permissions_apply+0x404>  // b.any
  41f0b4:	stur	wzr, [x29, #-4]
  41f0b8:	b	41fe40 <node_permissions_apply+0x1188>
  41f0bc:	mov	x8, xzr
  41f0c0:	ldr	x9, [sp, #256]
  41f0c4:	str	x8, [x9, #224]
  41f0c8:	ldr	x8, [x9, #520]
  41f0cc:	str	x8, [x9, #216]
  41f0d0:	mov	w10, #0x7                   	// #7
  41f0d4:	str	w10, [sp, #620]
  41f0d8:	bl	40a480 <__errno_location@plt>
  41f0dc:	ldr	w10, [x0]
  41f0e0:	str	w10, [sp, #616]
  41f0e4:	ldr	x8, [sp, #256]
  41f0e8:	ldr	x9, [x8, #216]
  41f0ec:	cbz	x9, 41f130 <node_permissions_apply+0x478>
  41f0f0:	mov	w0, #0x1                   	// #1
  41f0f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f0f8:	ldr	w8, [sp, #620]
  41f0fc:	cmp	w0, w8
  41f100:	cset	w8, ge  // ge = tcont
  41f104:	mov	w9, #0x1                   	// #1
  41f108:	eor	w8, w8, #0x1
  41f10c:	eor	w8, w8, w9
  41f110:	and	w8, w8, #0x1
  41f114:	mov	w1, w8
  41f118:	sxtw	x10, w1
  41f11c:	cbz	x10, 41f130 <node_permissions_apply+0x478>
  41f120:	ldr	x8, [sp, #256]
  41f124:	ldr	x0, [x8, #216]
  41f128:	add	x1, sp, #0x278
  41f12c:	bl	40a860 <sd_device_get_sysname@plt>
  41f130:	ldr	w0, [sp, #620]
  41f134:	ldr	w1, [sp, #616]
  41f138:	ldr	x8, [sp, #256]
  41f13c:	ldr	x9, [x8, #224]
  41f140:	mov	x10, xzr
  41f144:	cmp	x9, #0x0
  41f148:	ldr	x9, [sp, #248]
  41f14c:	csel	x5, x9, x10, ne  // ne = any
  41f150:	ldr	x6, [x8, #224]
  41f154:	ldr	x11, [x8, #488]
  41f158:	ldr	x2, [sp, #240]
  41f15c:	mov	w3, #0x12e                 	// #302
  41f160:	ldr	x4, [sp, #232]
  41f164:	mov	x7, x10
  41f168:	mov	x12, sp
  41f16c:	str	x10, [x12]
  41f170:	mov	x10, sp
  41f174:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  41f178:	add	x12, x12, #0x34
  41f17c:	str	x12, [x10, #8]
  41f180:	mov	x10, sp
  41f184:	str	x11, [x10, #16]
  41f188:	bl	40a870 <log_object_internal@plt>
  41f18c:	str	w0, [sp, #612]
  41f190:	ldr	w13, [sp, #612]
  41f194:	stur	w13, [x29, #-4]
  41f198:	b	41fe40 <node_permissions_apply+0x1188>
  41f19c:	ldur	w8, [x29, #-24]
  41f1a0:	mov	w9, #0xffffffff            	// #-1
  41f1a4:	cmp	w8, w9
  41f1a8:	b.eq	41f1c4 <node_permissions_apply+0x50c>  // b.none
  41f1ac:	ldur	w8, [x29, #-176]
  41f1b0:	and	w8, w8, #0xf000
  41f1b4:	ldur	w9, [x29, #-24]
  41f1b8:	and	w9, w9, #0xf000
  41f1bc:	cmp	w8, w9
  41f1c0:	b.ne	41f1d8 <node_permissions_apply+0x520>  // b.any
  41f1c4:	ldr	x8, [sp, #256]
  41f1c8:	ldr	x9, [x8, #376]
  41f1cc:	ldr	x10, [x8, #336]
  41f1d0:	cmp	x9, x10
  41f1d4:	b.eq	41f2c0 <node_permissions_apply+0x608>  // b.none
  41f1d8:	mov	x8, xzr
  41f1dc:	ldr	x9, [sp, #256]
  41f1e0:	str	x8, [x9, #192]
  41f1e4:	ldr	x8, [x9, #520]
  41f1e8:	str	x8, [x9, #184]
  41f1ec:	mov	w10, #0x7                   	// #7
  41f1f0:	str	w10, [sp, #588]
  41f1f4:	mov	w10, #0x11                  	// #17
  41f1f8:	movk	w10, #0x4000, lsl #16
  41f1fc:	str	w10, [sp, #584]
  41f200:	ldr	x8, [x9, #184]
  41f204:	cbz	x8, 41f248 <node_permissions_apply+0x590>
  41f208:	mov	w0, #0x1                   	// #1
  41f20c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f210:	ldr	w8, [sp, #588]
  41f214:	cmp	w0, w8
  41f218:	cset	w8, ge  // ge = tcont
  41f21c:	mov	w9, #0x1                   	// #1
  41f220:	eor	w8, w8, #0x1
  41f224:	eor	w8, w8, w9
  41f228:	and	w8, w8, #0x1
  41f22c:	mov	w1, w8
  41f230:	sxtw	x10, w1
  41f234:	cbz	x10, 41f248 <node_permissions_apply+0x590>
  41f238:	ldr	x8, [sp, #256]
  41f23c:	ldr	x0, [x8, #184]
  41f240:	add	x1, sp, #0x258
  41f244:	bl	40a860 <sd_device_get_sysname@plt>
  41f248:	ldr	w0, [sp, #588]
  41f24c:	ldr	w1, [sp, #584]
  41f250:	ldr	x8, [sp, #256]
  41f254:	ldr	x9, [x8, #192]
  41f258:	mov	x10, xzr
  41f25c:	cmp	x9, #0x0
  41f260:	ldr	x9, [sp, #248]
  41f264:	csel	x5, x9, x10, ne  // ne = any
  41f268:	ldr	x6, [x8, #192]
  41f26c:	ldr	x11, [x8, #488]
  41f270:	ldr	x12, [x8, #472]
  41f274:	ldr	x2, [sp, #240]
  41f278:	mov	w3, #0x134                 	// #308
  41f27c:	ldr	x4, [sp, #232]
  41f280:	mov	x7, x10
  41f284:	mov	x13, sp
  41f288:	str	x10, [x13]
  41f28c:	mov	x10, sp
  41f290:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  41f294:	add	x13, x13, #0x4e
  41f298:	str	x13, [x10, #8]
  41f29c:	mov	x10, sp
  41f2a0:	str	x11, [x10, #16]
  41f2a4:	mov	x10, sp
  41f2a8:	str	x12, [x10, #24]
  41f2ac:	bl	40a870 <log_object_internal@plt>
  41f2b0:	str	w0, [sp, #580]
  41f2b4:	ldr	w14, [sp, #580]
  41f2b8:	stur	w14, [x29, #-4]
  41f2bc:	b	41fe40 <node_permissions_apply+0x1188>
  41f2c0:	ldur	w8, [x29, #-24]
  41f2c4:	mov	w9, #0xffffffff            	// #-1
  41f2c8:	mov	w10, #0x0                   	// #0
  41f2cc:	cmp	w8, w9
  41f2d0:	str	w10, [sp, #228]
  41f2d4:	b.eq	41f2f4 <node_permissions_apply+0x63c>  // b.none
  41f2d8:	ldur	w8, [x29, #-176]
  41f2dc:	and	w8, w8, #0x1ff
  41f2e0:	ldur	w9, [x29, #-24]
  41f2e4:	and	w9, w9, #0x1ff
  41f2e8:	cmp	w8, w9
  41f2ec:	cset	w8, ne  // ne = any
  41f2f0:	str	w8, [sp, #228]
  41f2f4:	ldr	w8, [sp, #228]
  41f2f8:	and	w8, w8, #0x1
  41f2fc:	sturb	w8, [x29, #-201]
  41f300:	ldur	w0, [x29, #-28]
  41f304:	bl	40b020 <uid_is_valid@plt>
  41f308:	mov	w8, #0x0                   	// #0
  41f30c:	str	w8, [sp, #224]
  41f310:	tbnz	w0, #0, 41f318 <node_permissions_apply+0x660>
  41f314:	b	41f32c <node_permissions_apply+0x674>
  41f318:	ldur	w8, [x29, #-168]
  41f31c:	ldur	w9, [x29, #-28]
  41f320:	cmp	w8, w9
  41f324:	cset	w8, ne  // ne = any
  41f328:	str	w8, [sp, #224]
  41f32c:	ldr	w8, [sp, #224]
  41f330:	and	w8, w8, #0x1
  41f334:	sturb	w8, [x29, #-202]
  41f338:	ldur	w0, [x29, #-32]
  41f33c:	bl	4217e4 <gid_is_valid>
  41f340:	mov	w8, #0x0                   	// #0
  41f344:	str	w8, [sp, #220]
  41f348:	tbnz	w0, #0, 41f350 <node_permissions_apply+0x698>
  41f34c:	b	41f364 <node_permissions_apply+0x6ac>
  41f350:	ldur	w8, [x29, #-164]
  41f354:	ldur	w9, [x29, #-32]
  41f358:	cmp	w8, w9
  41f35c:	cset	w8, ne  // ne = any
  41f360:	str	w8, [sp, #220]
  41f364:	ldr	w8, [sp, #220]
  41f368:	and	w8, w8, #0x1
  41f36c:	sturb	w8, [x29, #-203]
  41f370:	ldurb	w8, [x29, #-201]
  41f374:	tbnz	w8, #0, 41f394 <node_permissions_apply+0x6dc>
  41f378:	ldurb	w8, [x29, #-202]
  41f37c:	tbnz	w8, #0, 41f394 <node_permissions_apply+0x6dc>
  41f380:	ldurb	w8, [x29, #-203]
  41f384:	tbnz	w8, #0, 41f394 <node_permissions_apply+0x6dc>
  41f388:	ldurb	w8, [x29, #-17]
  41f38c:	tbnz	w8, #0, 41f394 <node_permissions_apply+0x6dc>
  41f390:	b	41fe18 <node_permissions_apply+0x1160>
  41f394:	mov	w8, #0x0                   	// #0
  41f398:	strb	w8, [sp, #579]
  41f39c:	strb	w8, [sp, #578]
  41f3a0:	ldurb	w8, [x29, #-201]
  41f3a4:	tbnz	w8, #0, 41f3bc <node_permissions_apply+0x704>
  41f3a8:	ldurb	w8, [x29, #-202]
  41f3ac:	tbnz	w8, #0, 41f3bc <node_permissions_apply+0x704>
  41f3b0:	ldurb	w8, [x29, #-203]
  41f3b4:	tbnz	w8, #0, 41f3bc <node_permissions_apply+0x704>
  41f3b8:	b	41f744 <node_permissions_apply+0xa8c>
  41f3bc:	mov	x8, xzr
  41f3c0:	ldr	x9, [sp, #256]
  41f3c4:	str	x8, [x9, #128]
  41f3c8:	ldr	x8, [x9, #520]
  41f3cc:	str	x8, [x9, #120]
  41f3d0:	mov	w10, #0x7                   	// #7
  41f3d4:	str	w10, [sp, #524]
  41f3d8:	str	wzr, [sp, #520]
  41f3dc:	ldr	x8, [x9, #120]
  41f3e0:	cbz	x8, 41f424 <node_permissions_apply+0x76c>
  41f3e4:	mov	w0, #0x1                   	// #1
  41f3e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f3ec:	ldr	w8, [sp, #524]
  41f3f0:	cmp	w0, w8
  41f3f4:	cset	w8, ge  // ge = tcont
  41f3f8:	mov	w9, #0x1                   	// #1
  41f3fc:	eor	w8, w8, #0x1
  41f400:	eor	w8, w8, w9
  41f404:	and	w8, w8, #0x1
  41f408:	mov	w1, w8
  41f40c:	sxtw	x10, w1
  41f410:	cbz	x10, 41f424 <node_permissions_apply+0x76c>
  41f414:	ldr	x8, [sp, #256]
  41f418:	ldr	x0, [x8, #120]
  41f41c:	add	x1, sp, #0x218
  41f420:	bl	40a860 <sd_device_get_sysname@plt>
  41f424:	ldr	w0, [sp, #524]
  41f428:	ldr	w1, [sp, #520]
  41f42c:	ldr	x8, [sp, #256]
  41f430:	ldr	x9, [x8, #128]
  41f434:	mov	x10, xzr
  41f438:	cmp	x9, #0x0
  41f43c:	ldr	x9, [sp, #248]
  41f440:	csel	x5, x9, x10, ne  // ne = any
  41f444:	ldr	x6, [x8, #128]
  41f448:	ldr	x10, [x8, #488]
  41f44c:	ldur	w11, [x29, #-28]
  41f450:	str	w0, [sp, #216]
  41f454:	mov	w0, w11
  41f458:	str	w1, [sp, #212]
  41f45c:	str	x5, [sp, #200]
  41f460:	str	x6, [sp, #192]
  41f464:	str	x10, [sp, #184]
  41f468:	bl	40b020 <uid_is_valid@plt>
  41f46c:	tbnz	w0, #0, 41f474 <node_permissions_apply+0x7bc>
  41f470:	b	41f480 <node_permissions_apply+0x7c8>
  41f474:	ldur	w8, [x29, #-28]
  41f478:	str	w8, [sp, #180]
  41f47c:	b	41f488 <node_permissions_apply+0x7d0>
  41f480:	ldur	w8, [x29, #-168]
  41f484:	str	w8, [sp, #180]
  41f488:	ldr	w8, [sp, #180]
  41f48c:	ldur	w0, [x29, #-32]
  41f490:	str	w8, [sp, #176]
  41f494:	bl	4217e4 <gid_is_valid>
  41f498:	tbnz	w0, #0, 41f4a0 <node_permissions_apply+0x7e8>
  41f49c:	b	41f4ac <node_permissions_apply+0x7f4>
  41f4a0:	ldur	w8, [x29, #-32]
  41f4a4:	str	w8, [sp, #172]
  41f4a8:	b	41f4b4 <node_permissions_apply+0x7fc>
  41f4ac:	ldur	w8, [x29, #-164]
  41f4b0:	str	w8, [sp, #172]
  41f4b4:	ldr	w8, [sp, #172]
  41f4b8:	ldur	w9, [x29, #-24]
  41f4bc:	mov	w10, #0xffffffff            	// #-1
  41f4c0:	cmp	w9, w10
  41f4c4:	str	w8, [sp, #168]
  41f4c8:	b.eq	41f4dc <node_permissions_apply+0x824>  // b.none
  41f4cc:	ldur	w8, [x29, #-24]
  41f4d0:	and	w8, w8, #0x1ff
  41f4d4:	str	w8, [sp, #164]
  41f4d8:	b	41f4e8 <node_permissions_apply+0x830>
  41f4dc:	ldur	w8, [x29, #-176]
  41f4e0:	and	w8, w8, #0x1ff
  41f4e4:	str	w8, [sp, #164]
  41f4e8:	ldr	w8, [sp, #164]
  41f4ec:	ldr	w0, [sp, #216]
  41f4f0:	ldr	w1, [sp, #212]
  41f4f4:	ldr	x2, [sp, #240]
  41f4f8:	mov	w3, #0x144                 	// #324
  41f4fc:	ldr	x4, [sp, #232]
  41f500:	ldr	x5, [sp, #200]
  41f504:	ldr	x6, [sp, #192]
  41f508:	mov	x9, xzr
  41f50c:	mov	x7, x9
  41f510:	mov	x10, sp
  41f514:	str	x9, [x10]
  41f518:	mov	x9, sp
  41f51c:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  41f520:	add	x10, x10, #0x89
  41f524:	str	x10, [x9, #8]
  41f528:	mov	x9, sp
  41f52c:	ldr	x10, [sp, #184]
  41f530:	str	x10, [x9, #16]
  41f534:	mov	x9, sp
  41f538:	ldr	w11, [sp, #176]
  41f53c:	str	w11, [x9, #24]
  41f540:	mov	x9, sp
  41f544:	ldr	w12, [sp, #168]
  41f548:	str	w12, [x9, #32]
  41f54c:	mov	x9, sp
  41f550:	str	w8, [x9, #40]
  41f554:	bl	40a870 <log_object_internal@plt>
  41f558:	str	w0, [sp, #516]
  41f55c:	ldr	x9, [sp, #256]
  41f560:	ldr	x0, [x9, #488]
  41f564:	ldur	w1, [x29, #-24]
  41f568:	ldur	w2, [x29, #-28]
  41f56c:	ldur	w3, [x29, #-32]
  41f570:	bl	40b0f0 <chmod_and_chown@plt>
  41f574:	stur	w0, [x29, #-208]
  41f578:	ldur	w8, [x29, #-208]
  41f57c:	cmp	w8, #0x0
  41f580:	cset	w8, ge  // ge = tcont
  41f584:	tbnz	w8, #0, 41f740 <node_permissions_apply+0xa88>
  41f588:	mov	x8, xzr
  41f58c:	ldr	x9, [sp, #256]
  41f590:	str	x8, [x9, #96]
  41f594:	ldr	x8, [x9, #520]
  41f598:	str	x8, [x9, #88]
  41f59c:	ldur	w10, [x29, #-208]
  41f5a0:	mov	w11, #0xfffffffe            	// #-2
  41f5a4:	mov	w12, #0x3                   	// #3
  41f5a8:	mov	w13, #0x7                   	// #7
  41f5ac:	cmp	w10, w11
  41f5b0:	csel	w10, w13, w12, eq  // eq = none
  41f5b4:	str	w10, [sp, #492]
  41f5b8:	ldur	w10, [x29, #-208]
  41f5bc:	str	w10, [sp, #488]
  41f5c0:	ldr	x8, [x9, #88]
  41f5c4:	cbz	x8, 41f608 <node_permissions_apply+0x950>
  41f5c8:	mov	w0, #0x1                   	// #1
  41f5cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f5d0:	ldr	w8, [sp, #492]
  41f5d4:	cmp	w0, w8
  41f5d8:	cset	w8, ge  // ge = tcont
  41f5dc:	mov	w9, #0x1                   	// #1
  41f5e0:	eor	w8, w8, #0x1
  41f5e4:	eor	w8, w8, w9
  41f5e8:	and	w8, w8, #0x1
  41f5ec:	mov	w1, w8
  41f5f0:	sxtw	x10, w1
  41f5f4:	cbz	x10, 41f608 <node_permissions_apply+0x950>
  41f5f8:	ldr	x8, [sp, #256]
  41f5fc:	ldr	x0, [x8, #88]
  41f600:	add	x1, sp, #0x1f8
  41f604:	bl	40a860 <sd_device_get_sysname@plt>
  41f608:	ldr	w0, [sp, #492]
  41f60c:	ldr	w1, [sp, #488]
  41f610:	ldr	x8, [sp, #256]
  41f614:	ldr	x9, [x8, #96]
  41f618:	mov	x10, xzr
  41f61c:	cmp	x9, #0x0
  41f620:	ldr	x9, [sp, #248]
  41f624:	csel	x5, x9, x10, ne  // ne = any
  41f628:	ldr	x6, [x8, #96]
  41f62c:	ldr	x10, [x8, #488]
  41f630:	ldur	w11, [x29, #-28]
  41f634:	str	w0, [sp, #160]
  41f638:	mov	w0, w11
  41f63c:	str	w1, [sp, #156]
  41f640:	str	x5, [sp, #144]
  41f644:	str	x6, [sp, #136]
  41f648:	str	x10, [sp, #128]
  41f64c:	bl	40b020 <uid_is_valid@plt>
  41f650:	tbnz	w0, #0, 41f658 <node_permissions_apply+0x9a0>
  41f654:	b	41f664 <node_permissions_apply+0x9ac>
  41f658:	ldur	w8, [x29, #-28]
  41f65c:	str	w8, [sp, #124]
  41f660:	b	41f66c <node_permissions_apply+0x9b4>
  41f664:	ldur	w8, [x29, #-168]
  41f668:	str	w8, [sp, #124]
  41f66c:	ldr	w8, [sp, #124]
  41f670:	ldur	w0, [x29, #-32]
  41f674:	str	w8, [sp, #120]
  41f678:	bl	4217e4 <gid_is_valid>
  41f67c:	tbnz	w0, #0, 41f684 <node_permissions_apply+0x9cc>
  41f680:	b	41f690 <node_permissions_apply+0x9d8>
  41f684:	ldur	w8, [x29, #-32]
  41f688:	str	w8, [sp, #116]
  41f68c:	b	41f698 <node_permissions_apply+0x9e0>
  41f690:	ldur	w8, [x29, #-164]
  41f694:	str	w8, [sp, #116]
  41f698:	ldr	w8, [sp, #116]
  41f69c:	ldur	w9, [x29, #-24]
  41f6a0:	mov	w10, #0xffffffff            	// #-1
  41f6a4:	cmp	w9, w10
  41f6a8:	str	w8, [sp, #112]
  41f6ac:	b.eq	41f6c0 <node_permissions_apply+0xa08>  // b.none
  41f6b0:	ldur	w8, [x29, #-24]
  41f6b4:	and	w8, w8, #0x1ff
  41f6b8:	str	w8, [sp, #108]
  41f6bc:	b	41f6cc <node_permissions_apply+0xa14>
  41f6c0:	ldur	w8, [x29, #-176]
  41f6c4:	and	w8, w8, #0x1ff
  41f6c8:	str	w8, [sp, #108]
  41f6cc:	ldr	w8, [sp, #108]
  41f6d0:	ldr	w0, [sp, #160]
  41f6d4:	ldr	w1, [sp, #156]
  41f6d8:	ldr	x2, [sp, #240]
  41f6dc:	mov	w3, #0x14e                 	// #334
  41f6e0:	ldr	x4, [sp, #232]
  41f6e4:	ldr	x5, [sp, #144]
  41f6e8:	ldr	x6, [sp, #136]
  41f6ec:	mov	x9, xzr
  41f6f0:	mov	x7, x9
  41f6f4:	mov	x10, sp
  41f6f8:	str	x9, [x10]
  41f6fc:	mov	x9, sp
  41f700:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  41f704:	add	x10, x10, #0xba
  41f708:	str	x10, [x9, #8]
  41f70c:	mov	x9, sp
  41f710:	ldr	x10, [sp, #128]
  41f714:	str	x10, [x9, #16]
  41f718:	mov	x9, sp
  41f71c:	ldr	w11, [sp, #120]
  41f720:	str	w11, [x9, #24]
  41f724:	mov	x9, sp
  41f728:	ldr	w12, [sp, #112]
  41f72c:	str	w12, [x9, #32]
  41f730:	mov	x9, sp
  41f734:	str	w8, [x9, #40]
  41f738:	bl	40a870 <log_object_internal@plt>
  41f73c:	str	w0, [sp, #484]
  41f740:	b	41f8e4 <node_permissions_apply+0xc2c>
  41f744:	mov	x8, xzr
  41f748:	ldr	x9, [sp, #256]
  41f74c:	str	x8, [x9, #64]
  41f750:	ldr	x8, [x9, #520]
  41f754:	str	x8, [x9, #56]
  41f758:	mov	w10, #0x7                   	// #7
  41f75c:	str	w10, [sp, #460]
  41f760:	str	wzr, [sp, #456]
  41f764:	ldr	x8, [x9, #56]
  41f768:	cbz	x8, 41f7ac <node_permissions_apply+0xaf4>
  41f76c:	mov	w0, #0x1                   	// #1
  41f770:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f774:	ldr	w8, [sp, #460]
  41f778:	cmp	w0, w8
  41f77c:	cset	w8, ge  // ge = tcont
  41f780:	mov	w9, #0x1                   	// #1
  41f784:	eor	w8, w8, #0x1
  41f788:	eor	w8, w8, w9
  41f78c:	and	w8, w8, #0x1
  41f790:	mov	w1, w8
  41f794:	sxtw	x10, w1
  41f798:	cbz	x10, 41f7ac <node_permissions_apply+0xaf4>
  41f79c:	ldr	x8, [sp, #256]
  41f7a0:	ldr	x0, [x8, #56]
  41f7a4:	add	x1, sp, #0x1d8
  41f7a8:	bl	40a860 <sd_device_get_sysname@plt>
  41f7ac:	ldr	w0, [sp, #460]
  41f7b0:	ldr	w1, [sp, #456]
  41f7b4:	ldr	x8, [sp, #256]
  41f7b8:	ldr	x9, [x8, #64]
  41f7bc:	mov	x10, xzr
  41f7c0:	cmp	x9, #0x0
  41f7c4:	ldr	x9, [sp, #248]
  41f7c8:	csel	x5, x9, x10, ne  // ne = any
  41f7cc:	ldr	x6, [x8, #64]
  41f7d0:	ldr	x10, [x8, #488]
  41f7d4:	ldur	w11, [x29, #-28]
  41f7d8:	str	w0, [sp, #104]
  41f7dc:	mov	w0, w11
  41f7e0:	str	w1, [sp, #100]
  41f7e4:	str	x5, [sp, #88]
  41f7e8:	str	x6, [sp, #80]
  41f7ec:	str	x10, [sp, #72]
  41f7f0:	bl	40b020 <uid_is_valid@plt>
  41f7f4:	tbnz	w0, #0, 41f7fc <node_permissions_apply+0xb44>
  41f7f8:	b	41f808 <node_permissions_apply+0xb50>
  41f7fc:	ldur	w8, [x29, #-28]
  41f800:	str	w8, [sp, #68]
  41f804:	b	41f810 <node_permissions_apply+0xb58>
  41f808:	ldur	w8, [x29, #-168]
  41f80c:	str	w8, [sp, #68]
  41f810:	ldr	w8, [sp, #68]
  41f814:	ldur	w0, [x29, #-32]
  41f818:	str	w8, [sp, #64]
  41f81c:	bl	4217e4 <gid_is_valid>
  41f820:	tbnz	w0, #0, 41f828 <node_permissions_apply+0xb70>
  41f824:	b	41f834 <node_permissions_apply+0xb7c>
  41f828:	ldur	w8, [x29, #-32]
  41f82c:	str	w8, [sp, #60]
  41f830:	b	41f83c <node_permissions_apply+0xb84>
  41f834:	ldur	w8, [x29, #-164]
  41f838:	str	w8, [sp, #60]
  41f83c:	ldr	w8, [sp, #60]
  41f840:	ldur	w9, [x29, #-24]
  41f844:	mov	w10, #0xffffffff            	// #-1
  41f848:	cmp	w9, w10
  41f84c:	str	w8, [sp, #56]
  41f850:	b.eq	41f864 <node_permissions_apply+0xbac>  // b.none
  41f854:	ldur	w8, [x29, #-24]
  41f858:	and	w8, w8, #0x1ff
  41f85c:	str	w8, [sp, #52]
  41f860:	b	41f870 <node_permissions_apply+0xbb8>
  41f864:	ldur	w8, [x29, #-176]
  41f868:	and	w8, w8, #0x1ff
  41f86c:	str	w8, [sp, #52]
  41f870:	ldr	w8, [sp, #52]
  41f874:	ldr	w0, [sp, #104]
  41f878:	ldr	w1, [sp, #100]
  41f87c:	ldr	x2, [sp, #240]
  41f880:	mov	w3, #0x154                 	// #340
  41f884:	ldr	x4, [sp, #232]
  41f888:	ldr	x5, [sp, #88]
  41f88c:	ldr	x6, [sp, #80]
  41f890:	mov	x9, xzr
  41f894:	mov	x7, x9
  41f898:	mov	x10, sp
  41f89c:	str	x9, [x10]
  41f8a0:	mov	x9, sp
  41f8a4:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  41f8a8:	add	x10, x10, #0xf9
  41f8ac:	str	x10, [x9, #8]
  41f8b0:	mov	x9, sp
  41f8b4:	ldr	x10, [sp, #72]
  41f8b8:	str	x10, [x9, #16]
  41f8bc:	mov	x9, sp
  41f8c0:	ldr	w11, [sp, #64]
  41f8c4:	str	w11, [x9, #24]
  41f8c8:	mov	x9, sp
  41f8cc:	ldr	w12, [sp, #56]
  41f8d0:	str	w12, [x9, #32]
  41f8d4:	mov	x9, sp
  41f8d8:	str	w8, [x9, #40]
  41f8dc:	bl	40a870 <log_object_internal@plt>
  41f8e0:	str	w0, [sp, #452]
  41f8e4:	add	x8, sp, #0x1b0
  41f8e8:	mov	w9, #0xfffffffe            	// #-2
  41f8ec:	str	w9, [sp, #432]
  41f8f0:	mov	x10, xzr
  41f8f4:	str	x10, [x8, #8]
  41f8f8:	ldr	x8, [sp, #256]
  41f8fc:	ldur	q0, [x8, #24]
  41f900:	stur	q0, [x8, #136]
  41f904:	ldr	x8, [sp, #256]
  41f908:	ldr	x0, [x8, #496]
  41f90c:	add	x1, sp, #0x220
  41f910:	add	x2, sp, #0x230
  41f914:	add	x3, sp, #0x238
  41f918:	bl	42180c <ordered_hashmap_iterate>
  41f91c:	tbnz	w0, #0, 41f924 <node_permissions_apply+0xc6c>
  41f920:	b	41fddc <node_permissions_apply+0x1124>
  41f924:	ldr	x8, [sp, #256]
  41f928:	ldr	x0, [x8, #160]
  41f92c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  41f930:	add	x1, x1, #0x12e
  41f934:	bl	40aa20 <strcmp@plt>
  41f938:	cbnz	w0, 41fb14 <node_permissions_apply+0xe5c>
  41f93c:	mov	w8, #0x1                   	// #1
  41f940:	strb	w8, [sp, #579]
  41f944:	ldr	x9, [sp, #256]
  41f948:	ldr	x0, [x9, #488]
  41f94c:	ldr	x1, [x9, #152]
  41f950:	bl	40b100 <mac_selinux_apply@plt>
  41f954:	str	w0, [sp, #428]
  41f958:	ldr	w8, [sp, #428]
  41f95c:	cmp	w8, #0x0
  41f960:	cset	w8, ge  // ge = tcont
  41f964:	tbnz	w8, #0, 41fa4c <node_permissions_apply+0xd94>
  41f968:	mov	x8, xzr
  41f96c:	ldr	x9, [sp, #256]
  41f970:	str	x8, [x9, #8]
  41f974:	ldr	x8, [x9, #520]
  41f978:	str	x8, [x9]
  41f97c:	ldr	w10, [sp, #428]
  41f980:	mov	w11, #0xfffffffe            	// #-2
  41f984:	mov	w12, #0x3                   	// #3
  41f988:	mov	w13, #0x7                   	// #7
  41f98c:	cmp	w10, w11
  41f990:	csel	w10, w13, w12, eq  // eq = none
  41f994:	str	w10, [sp, #404]
  41f998:	ldr	w10, [sp, #428]
  41f99c:	str	w10, [sp, #400]
  41f9a0:	ldr	x8, [x9]
  41f9a4:	cbz	x8, 41f9e8 <node_permissions_apply+0xd30>
  41f9a8:	mov	w0, #0x1                   	// #1
  41f9ac:	bl	40a3f0 <log_get_max_level_realm@plt>
  41f9b0:	ldr	w8, [sp, #404]
  41f9b4:	cmp	w0, w8
  41f9b8:	cset	w8, ge  // ge = tcont
  41f9bc:	mov	w9, #0x1                   	// #1
  41f9c0:	eor	w8, w8, #0x1
  41f9c4:	eor	w8, w8, w9
  41f9c8:	and	w8, w8, #0x1
  41f9cc:	mov	w1, w8
  41f9d0:	sxtw	x10, w1
  41f9d4:	cbz	x10, 41f9e8 <node_permissions_apply+0xd30>
  41f9d8:	ldr	x8, [sp, #256]
  41f9dc:	ldr	x0, [x8]
  41f9e0:	add	x1, sp, #0x1a0
  41f9e4:	bl	40a860 <sd_device_get_sysname@plt>
  41f9e8:	ldr	w0, [sp, #404]
  41f9ec:	ldr	w1, [sp, #400]
  41f9f0:	ldr	x8, [sp, #256]
  41f9f4:	ldr	x9, [x8, #8]
  41f9f8:	mov	x10, xzr
  41f9fc:	cmp	x9, #0x0
  41fa00:	ldr	x9, [sp, #248]
  41fa04:	csel	x5, x9, x10, ne  // ne = any
  41fa08:	ldr	x6, [x8, #8]
  41fa0c:	ldr	x11, [x8, #152]
  41fa10:	ldr	x2, [sp, #240]
  41fa14:	mov	w3, #0x160                 	// #352
  41fa18:	ldr	x4, [sp, #232]
  41fa1c:	mov	x7, x10
  41fa20:	mov	x12, sp
  41fa24:	str	x10, [x12]
  41fa28:	mov	x10, sp
  41fa2c:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  41fa30:	add	x12, x12, #0x136
  41fa34:	str	x12, [x10, #8]
  41fa38:	mov	x10, sp
  41fa3c:	str	x11, [x10, #16]
  41fa40:	bl	40a870 <log_object_internal@plt>
  41fa44:	str	w0, [sp, #396]
  41fa48:	b	41fb10 <node_permissions_apply+0xe58>
  41fa4c:	mov	x8, xzr
  41fa50:	str	x8, [sp, #384]
  41fa54:	ldr	x8, [sp, #256]
  41fa58:	ldr	x9, [x8, #520]
  41fa5c:	str	x9, [sp, #376]
  41fa60:	mov	w10, #0x7                   	// #7
  41fa64:	str	w10, [sp, #372]
  41fa68:	str	wzr, [sp, #368]
  41fa6c:	ldr	x9, [sp, #376]
  41fa70:	cbz	x9, 41fab0 <node_permissions_apply+0xdf8>
  41fa74:	mov	w0, #0x1                   	// #1
  41fa78:	bl	40a3f0 <log_get_max_level_realm@plt>
  41fa7c:	ldr	w8, [sp, #372]
  41fa80:	cmp	w0, w8
  41fa84:	cset	w8, ge  // ge = tcont
  41fa88:	mov	w9, #0x1                   	// #1
  41fa8c:	eor	w8, w8, #0x1
  41fa90:	eor	w8, w8, w9
  41fa94:	and	w8, w8, #0x1
  41fa98:	mov	w1, w8
  41fa9c:	sxtw	x10, w1
  41faa0:	cbz	x10, 41fab0 <node_permissions_apply+0xdf8>
  41faa4:	ldr	x0, [sp, #376]
  41faa8:	add	x1, sp, #0x180
  41faac:	bl	40a860 <sd_device_get_sysname@plt>
  41fab0:	ldr	w0, [sp, #372]
  41fab4:	ldr	w1, [sp, #368]
  41fab8:	ldr	x8, [sp, #384]
  41fabc:	mov	x9, xzr
  41fac0:	cmp	x8, #0x0
  41fac4:	ldr	x8, [sp, #248]
  41fac8:	csel	x5, x8, x9, ne  // ne = any
  41facc:	ldr	x6, [sp, #384]
  41fad0:	ldr	x10, [sp, #256]
  41fad4:	ldr	x11, [x10, #152]
  41fad8:	ldr	x2, [sp, #240]
  41fadc:	mov	w3, #0x162                 	// #354
  41fae0:	ldr	x4, [sp, #232]
  41fae4:	mov	x7, x9
  41fae8:	mov	x12, sp
  41faec:	str	x9, [x12]
  41faf0:	mov	x9, sp
  41faf4:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  41faf8:	add	x12, x12, #0x165
  41fafc:	str	x12, [x9, #8]
  41fb00:	mov	x9, sp
  41fb04:	str	x11, [x9, #16]
  41fb08:	bl	40a870 <log_object_internal@plt>
  41fb0c:	str	w0, [sp, #364]
  41fb10:	b	41fdd8 <node_permissions_apply+0x1120>
  41fb14:	ldr	x8, [sp, #256]
  41fb18:	ldr	x0, [x8, #160]
  41fb1c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  41fb20:	add	x1, x1, #0x186
  41fb24:	bl	40aa20 <strcmp@plt>
  41fb28:	cbnz	w0, 41fd08 <node_permissions_apply+0x1050>
  41fb2c:	mov	w8, #0x1                   	// #1
  41fb30:	strb	w8, [sp, #578]
  41fb34:	ldr	x9, [sp, #256]
  41fb38:	ldr	x0, [x9, #488]
  41fb3c:	ldr	x2, [x9, #152]
  41fb40:	mov	w8, wzr
  41fb44:	mov	w1, w8
  41fb48:	bl	40b110 <mac_smack_apply@plt>
  41fb4c:	str	w0, [sp, #428]
  41fb50:	ldr	w8, [sp, #428]
  41fb54:	cmp	w8, #0x0
  41fb58:	cset	w8, ge  // ge = tcont
  41fb5c:	tbnz	w8, #0, 41fc40 <node_permissions_apply+0xf88>
  41fb60:	mov	x8, xzr
  41fb64:	str	x8, [sp, #352]
  41fb68:	ldr	x8, [sp, #256]
  41fb6c:	ldr	x9, [x8, #520]
  41fb70:	str	x9, [sp, #344]
  41fb74:	ldr	w10, [sp, #428]
  41fb78:	mov	w11, #0xfffffffe            	// #-2
  41fb7c:	mov	w12, #0x3                   	// #3
  41fb80:	mov	w13, #0x7                   	// #7
  41fb84:	cmp	w10, w11
  41fb88:	csel	w10, w13, w12, eq  // eq = none
  41fb8c:	str	w10, [sp, #340]
  41fb90:	ldr	w10, [sp, #428]
  41fb94:	str	w10, [sp, #336]
  41fb98:	ldr	x9, [sp, #344]
  41fb9c:	cbz	x9, 41fbdc <node_permissions_apply+0xf24>
  41fba0:	mov	w0, #0x1                   	// #1
  41fba4:	bl	40a3f0 <log_get_max_level_realm@plt>
  41fba8:	ldr	w8, [sp, #340]
  41fbac:	cmp	w0, w8
  41fbb0:	cset	w8, ge  // ge = tcont
  41fbb4:	mov	w9, #0x1                   	// #1
  41fbb8:	eor	w8, w8, #0x1
  41fbbc:	eor	w8, w8, w9
  41fbc0:	and	w8, w8, #0x1
  41fbc4:	mov	w1, w8
  41fbc8:	sxtw	x10, w1
  41fbcc:	cbz	x10, 41fbdc <node_permissions_apply+0xf24>
  41fbd0:	ldr	x0, [sp, #344]
  41fbd4:	add	x1, sp, #0x160
  41fbd8:	bl	40a860 <sd_device_get_sysname@plt>
  41fbdc:	ldr	w0, [sp, #340]
  41fbe0:	ldr	w1, [sp, #336]
  41fbe4:	ldr	x8, [sp, #352]
  41fbe8:	mov	x9, xzr
  41fbec:	cmp	x8, #0x0
  41fbf0:	ldr	x8, [sp, #248]
  41fbf4:	csel	x5, x8, x9, ne  // ne = any
  41fbf8:	ldr	x6, [sp, #352]
  41fbfc:	ldr	x10, [sp, #256]
  41fc00:	ldr	x11, [x10, #152]
  41fc04:	ldr	x2, [sp, #240]
  41fc08:	mov	w3, #0x16a                 	// #362
  41fc0c:	ldr	x4, [sp, #232]
  41fc10:	mov	x7, x9
  41fc14:	mov	x12, sp
  41fc18:	str	x9, [x12]
  41fc1c:	mov	x9, sp
  41fc20:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  41fc24:	add	x12, x12, #0x18c
  41fc28:	str	x12, [x9, #8]
  41fc2c:	mov	x9, sp
  41fc30:	str	x11, [x9, #16]
  41fc34:	bl	40a870 <log_object_internal@plt>
  41fc38:	str	w0, [sp, #332]
  41fc3c:	b	41fd04 <node_permissions_apply+0x104c>
  41fc40:	mov	x8, xzr
  41fc44:	str	x8, [sp, #320]
  41fc48:	ldr	x8, [sp, #256]
  41fc4c:	ldr	x9, [x8, #520]
  41fc50:	str	x9, [sp, #312]
  41fc54:	mov	w10, #0x7                   	// #7
  41fc58:	str	w10, [sp, #308]
  41fc5c:	str	wzr, [sp, #304]
  41fc60:	ldr	x9, [sp, #312]
  41fc64:	cbz	x9, 41fca4 <node_permissions_apply+0xfec>
  41fc68:	mov	w0, #0x1                   	// #1
  41fc6c:	bl	40a3f0 <log_get_max_level_realm@plt>
  41fc70:	ldr	w8, [sp, #308]
  41fc74:	cmp	w0, w8
  41fc78:	cset	w8, ge  // ge = tcont
  41fc7c:	mov	w9, #0x1                   	// #1
  41fc80:	eor	w8, w8, #0x1
  41fc84:	eor	w8, w8, w9
  41fc88:	and	w8, w8, #0x1
  41fc8c:	mov	w1, w8
  41fc90:	sxtw	x10, w1
  41fc94:	cbz	x10, 41fca4 <node_permissions_apply+0xfec>
  41fc98:	ldr	x0, [sp, #312]
  41fc9c:	add	x1, sp, #0x140
  41fca0:	bl	40a860 <sd_device_get_sysname@plt>
  41fca4:	ldr	w0, [sp, #308]
  41fca8:	ldr	w1, [sp, #304]
  41fcac:	ldr	x8, [sp, #320]
  41fcb0:	mov	x9, xzr
  41fcb4:	cmp	x8, #0x0
  41fcb8:	ldr	x8, [sp, #248]
  41fcbc:	csel	x5, x8, x9, ne  // ne = any
  41fcc0:	ldr	x6, [sp, #320]
  41fcc4:	ldr	x10, [sp, #256]
  41fcc8:	ldr	x11, [x10, #152]
  41fccc:	ldr	x2, [sp, #240]
  41fcd0:	mov	w3, #0x16c                 	// #364
  41fcd4:	ldr	x4, [sp, #232]
  41fcd8:	mov	x7, x9
  41fcdc:	mov	x12, sp
  41fce0:	str	x9, [x12]
  41fce4:	mov	x9, sp
  41fce8:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  41fcec:	add	x12, x12, #0x1b9
  41fcf0:	str	x12, [x9, #8]
  41fcf4:	mov	x9, sp
  41fcf8:	str	x11, [x9, #16]
  41fcfc:	bl	40a870 <log_object_internal@plt>
  41fd00:	str	w0, [sp, #300]
  41fd04:	b	41fdd8 <node_permissions_apply+0x1120>
  41fd08:	mov	x8, xzr
  41fd0c:	str	x8, [sp, #288]
  41fd10:	ldr	x8, [sp, #256]
  41fd14:	ldr	x9, [x8, #520]
  41fd18:	str	x9, [sp, #280]
  41fd1c:	mov	w10, #0x3                   	// #3
  41fd20:	str	w10, [sp, #276]
  41fd24:	str	wzr, [sp, #272]
  41fd28:	ldr	x9, [sp, #280]
  41fd2c:	cbz	x9, 41fd6c <node_permissions_apply+0x10b4>
  41fd30:	mov	w0, #0x1                   	// #1
  41fd34:	bl	40a3f0 <log_get_max_level_realm@plt>
  41fd38:	ldr	w8, [sp, #276]
  41fd3c:	cmp	w0, w8
  41fd40:	cset	w8, ge  // ge = tcont
  41fd44:	mov	w9, #0x1                   	// #1
  41fd48:	eor	w8, w8, #0x1
  41fd4c:	eor	w8, w8, w9
  41fd50:	and	w8, w8, #0x1
  41fd54:	mov	w1, w8
  41fd58:	sxtw	x10, w1
  41fd5c:	cbz	x10, 41fd6c <node_permissions_apply+0x10b4>
  41fd60:	ldr	x0, [sp, #280]
  41fd64:	add	x1, sp, #0x120
  41fd68:	bl	40a860 <sd_device_get_sysname@plt>
  41fd6c:	ldr	w0, [sp, #276]
  41fd70:	ldr	w1, [sp, #272]
  41fd74:	ldr	x8, [sp, #288]
  41fd78:	mov	x9, xzr
  41fd7c:	cmp	x8, #0x0
  41fd80:	ldr	x8, [sp, #248]
  41fd84:	csel	x5, x8, x9, ne  // ne = any
  41fd88:	ldr	x6, [sp, #288]
  41fd8c:	ldr	x10, [sp, #256]
  41fd90:	ldr	x11, [x10, #160]
  41fd94:	ldr	x12, [x10, #152]
  41fd98:	ldr	x2, [sp, #240]
  41fd9c:	mov	w3, #0x16f                 	// #367
  41fda0:	ldr	x4, [sp, #232]
  41fda4:	mov	x7, x9
  41fda8:	mov	x13, sp
  41fdac:	str	x9, [x13]
  41fdb0:	mov	x9, sp
  41fdb4:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  41fdb8:	add	x13, x13, #0x1d8
  41fdbc:	str	x13, [x9, #8]
  41fdc0:	mov	x9, sp
  41fdc4:	str	x11, [x9, #16]
  41fdc8:	mov	x9, sp
  41fdcc:	str	x12, [x9, #24]
  41fdd0:	bl	40a870 <log_object_internal@plt>
  41fdd4:	str	w0, [sp, #268]
  41fdd8:	b	41f904 <node_permissions_apply+0xc4c>
  41fddc:	ldrb	w8, [sp, #579]
  41fde0:	tbnz	w8, #0, 41fdf4 <node_permissions_apply+0x113c>
  41fde4:	ldr	x8, [sp, #256]
  41fde8:	ldr	x0, [x8, #488]
  41fdec:	mov	w1, #0x1                   	// #1
  41fdf0:	bl	40b120 <mac_selinux_fix@plt>
  41fdf4:	ldrb	w8, [sp, #578]
  41fdf8:	tbnz	w8, #0, 41fe18 <node_permissions_apply+0x1160>
  41fdfc:	ldr	x8, [sp, #256]
  41fe00:	ldr	x0, [x8, #488]
  41fe04:	mov	w9, wzr
  41fe08:	mov	w1, w9
  41fe0c:	mov	x10, xzr
  41fe10:	mov	x2, x10
  41fe14:	bl	40b110 <mac_smack_apply@plt>
  41fe18:	ldr	x8, [sp, #256]
  41fe1c:	ldr	x1, [x8, #488]
  41fe20:	mov	w0, #0xffffff9c            	// #-100
  41fe24:	mov	x9, xzr
  41fe28:	mov	x2, x9
  41fe2c:	mov	w10, wzr
  41fe30:	mov	w3, w10
  41fe34:	bl	40b130 <utimensat@plt>
  41fe38:	ldur	w10, [x29, #-208]
  41fe3c:	stur	w10, [x29, #-4]
  41fe40:	ldur	w0, [x29, #-4]
  41fe44:	add	sp, sp, #0x3b0
  41fe48:	ldr	x28, [sp, #16]
  41fe4c:	ldp	x29, x30, [sp], #32
  41fe50:	ret

000000000041fe54 <xsprintf_dev_num_path_from_sd_device>:
  41fe54:	sub	sp, sp, #0xa0
  41fe58:	stp	x29, x30, [sp, #144]
  41fe5c:	add	x29, sp, #0x90
  41fe60:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  41fe64:	add	x8, x8, #0xcd1
  41fe68:	add	x8, x8, #0x3
  41fe6c:	stur	x0, [x29, #-16]
  41fe70:	stur	x1, [x29, #-24]
  41fe74:	str	x8, [sp, #24]
  41fe78:	ldur	x8, [x29, #-24]
  41fe7c:	cmp	x8, #0x0
  41fe80:	cset	w9, ne  // ne = any
  41fe84:	mov	w10, #0x1                   	// #1
  41fe88:	eor	w9, w9, #0x1
  41fe8c:	eor	w9, w9, w10
  41fe90:	eor	w9, w9, w10
  41fe94:	and	w9, w9, #0x1
  41fe98:	mov	w0, w9
  41fe9c:	sxtw	x8, w0
  41fea0:	cbz	x8, 41fec4 <xsprintf_dev_num_path_from_sd_device+0x70>
  41fea4:	mov	w0, #0x1                   	// #1
  41fea8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  41feac:	add	x1, x1, #0x2ff
  41feb0:	ldr	x2, [sp, #24]
  41feb4:	mov	w3, #0x185                 	// #389
  41feb8:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  41febc:	add	x4, x4, #0x208
  41fec0:	bl	40a540 <log_assert_failed_realm@plt>
  41fec4:	ldur	x0, [x29, #-16]
  41fec8:	add	x1, sp, #0x30
  41fecc:	bl	40aa10 <sd_device_get_subsystem@plt>
  41fed0:	str	w0, [sp, #36]
  41fed4:	ldr	w8, [sp, #36]
  41fed8:	cmp	w8, #0x0
  41fedc:	cset	w8, ge  // ge = tcont
  41fee0:	tbnz	w8, #0, 41fef0 <xsprintf_dev_num_path_from_sd_device+0x9c>
  41fee4:	ldr	w8, [sp, #36]
  41fee8:	stur	w8, [x29, #-4]
  41feec:	b	42000c <xsprintf_dev_num_path_from_sd_device+0x1b8>
  41fef0:	ldur	x0, [x29, #-16]
  41fef4:	add	x1, sp, #0x28
  41fef8:	bl	40aa50 <sd_device_get_devnum@plt>
  41fefc:	str	w0, [sp, #36]
  41ff00:	ldr	w8, [sp, #36]
  41ff04:	cmp	w8, #0x0
  41ff08:	cset	w8, ge  // ge = tcont
  41ff0c:	tbnz	w8, #0, 41ff1c <xsprintf_dev_num_path_from_sd_device+0xc8>
  41ff10:	ldr	w8, [sp, #36]
  41ff14:	stur	w8, [x29, #-4]
  41ff18:	b	42000c <xsprintf_dev_num_path_from_sd_device+0x1b8>
  41ff1c:	ldr	x0, [sp, #48]
  41ff20:	adrp	x8, 464000 <on_inotify.__assert_in_set+0x540>
  41ff24:	add	x8, x8, #0xb74
  41ff28:	mov	x1, x8
  41ff2c:	str	x8, [sp, #16]
  41ff30:	bl	40aa20 <strcmp@plt>
  41ff34:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  41ff38:	add	x8, x8, #0x255
  41ff3c:	cmp	w0, #0x0
  41ff40:	ldr	x9, [sp, #16]
  41ff44:	csel	x3, x9, x8, eq  // eq = none
  41ff48:	ldr	x0, [sp, #40]
  41ff4c:	str	x3, [sp, #8]
  41ff50:	bl	40aa70 <gnu_dev_major@plt>
  41ff54:	ldr	x8, [sp, #40]
  41ff58:	str	w0, [sp, #4]
  41ff5c:	mov	x0, x8
  41ff60:	bl	40ae70 <gnu_dev_minor@plt>
  41ff64:	add	x8, sp, #0x40
  41ff68:	str	w0, [sp]
  41ff6c:	mov	x0, x8
  41ff70:	mov	x1, #0x38                  	// #56
  41ff74:	adrp	x2, 467000 <on_inotify.__assert_in_set+0x3540>
  41ff78:	add	x2, x2, #0x247
  41ff7c:	ldr	x3, [sp, #8]
  41ff80:	ldr	w4, [sp, #4]
  41ff84:	ldr	w5, [sp]
  41ff88:	bl	40b140 <snprintf@plt>
  41ff8c:	mov	w1, w0
  41ff90:	sxtw	x8, w1
  41ff94:	cmp	x8, #0x38
  41ff98:	cset	w10, cc  // cc = lo, ul, last
  41ff9c:	mov	w11, #0x1                   	// #1
  41ffa0:	eor	w10, w10, #0x1
  41ffa4:	eor	w10, w10, w11
  41ffa8:	eor	w10, w10, w11
  41ffac:	and	w10, w10, #0x1
  41ffb0:	mov	w1, w10
  41ffb4:	sxtw	x8, w1
  41ffb8:	cbz	x8, 41ffdc <xsprintf_dev_num_path_from_sd_device+0x188>
  41ffbc:	mov	w0, #0x1                   	// #1
  41ffc0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  41ffc4:	add	x1, x1, #0x25a
  41ffc8:	ldr	x2, [sp, #24]
  41ffcc:	mov	w3, #0x191                 	// #401
  41ffd0:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  41ffd4:	add	x4, x4, #0x208
  41ffd8:	bl	40a540 <log_assert_failed_realm@plt>
  41ffdc:	add	x0, sp, #0x40
  41ffe0:	bl	40a910 <strdup@plt>
  41ffe4:	str	x0, [sp, #56]
  41ffe8:	ldr	x8, [sp, #56]
  41ffec:	cbnz	x8, 41fffc <xsprintf_dev_num_path_from_sd_device+0x1a8>
  41fff0:	mov	w8, #0xfffffff4            	// #-12
  41fff4:	stur	w8, [x29, #-4]
  41fff8:	b	42000c <xsprintf_dev_num_path_from_sd_device+0x1b8>
  41fffc:	ldr	x8, [sp, #56]
  420000:	ldur	x9, [x29, #-24]
  420004:	str	x8, [x9]
  420008:	stur	wzr, [x29, #-4]
  42000c:	ldur	w0, [x29, #-4]
  420010:	ldp	x29, x30, [sp, #144]
  420014:	add	sp, sp, #0xa0
  420018:	ret

000000000042001c <node_symlink>:
  42001c:	stp	x29, x30, [sp, #-32]!
  420020:	stp	x28, x19, [sp, #16]
  420024:	mov	x29, sp
  420028:	sub	sp, sp, #0x2a0
  42002c:	mov	x19, sp
  420030:	add	x8, x19, #0x100
  420034:	mov	x9, xzr
  420038:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  42003c:	add	x10, x10, #0xcd1
  420040:	add	x10, x10, #0x3
  420044:	adrp	x11, 467000 <on_inotify.__assert_in_set+0x3540>
  420048:	add	x11, x11, #0x2c1
  42004c:	adrp	x12, 464000 <on_inotify.__assert_in_set+0x540>
  420050:	add	x12, x12, #0xa46
  420054:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  420058:	add	x13, x13, #0x282
  42005c:	str	x0, [x8, #400]
  420060:	str	x1, [x8, #392]
  420064:	str	x2, [x8, #384]
  420068:	str	x9, [x8, #376]
  42006c:	str	x9, [x8, #368]
  420070:	str	x8, [x19, #80]
  420074:	str	x10, [x19, #72]
  420078:	str	x11, [x19, #64]
  42007c:	str	x12, [x19, #56]
  420080:	str	x13, [x19, #48]
  420084:	ldr	x8, [x19, #80]
  420088:	ldr	x9, [x8, #400]
  42008c:	cmp	x9, #0x0
  420090:	cset	w10, ne  // ne = any
  420094:	mov	w11, #0x1                   	// #1
  420098:	eor	w10, w10, #0x1
  42009c:	eor	w10, w10, w11
  4200a0:	eor	w10, w10, w11
  4200a4:	and	w10, w10, #0x1
  4200a8:	mov	w0, w10
  4200ac:	sxtw	x9, w0
  4200b0:	cbz	x9, 4200d0 <node_symlink+0xb4>
  4200b4:	mov	w0, #0x1                   	// #1
  4200b8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4200bc:	add	x1, x1, #0xee1
  4200c0:	ldr	x2, [x19, #72]
  4200c4:	mov	w3, #0x23                  	// #35
  4200c8:	ldr	x4, [x19, #48]
  4200cc:	bl	40a540 <log_assert_failed_realm@plt>
  4200d0:	ldr	x8, [x19, #80]
  4200d4:	ldr	x9, [x8, #392]
  4200d8:	cmp	x9, #0x0
  4200dc:	cset	w10, ne  // ne = any
  4200e0:	mov	w11, #0x1                   	// #1
  4200e4:	eor	w10, w10, #0x1
  4200e8:	eor	w10, w10, w11
  4200ec:	eor	w10, w10, w11
  4200f0:	and	w10, w10, #0x1
  4200f4:	mov	w0, w10
  4200f8:	sxtw	x9, w0
  4200fc:	cbz	x9, 42011c <node_symlink+0x100>
  420100:	mov	w0, #0x1                   	// #1
  420104:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  420108:	add	x1, x1, #0x2bc
  42010c:	ldr	x2, [x19, #72]
  420110:	mov	w3, #0x24                  	// #36
  420114:	ldr	x4, [x19, #48]
  420118:	bl	40a540 <log_assert_failed_realm@plt>
  42011c:	ldr	x8, [x19, #80]
  420120:	ldr	x9, [x8, #384]
  420124:	cmp	x9, #0x0
  420128:	cset	w10, ne  // ne = any
  42012c:	mov	w11, #0x1                   	// #1
  420130:	eor	w10, w10, #0x1
  420134:	eor	w10, w10, w11
  420138:	eor	w10, w10, w11
  42013c:	and	w10, w10, #0x1
  420140:	mov	w0, w10
  420144:	sxtw	x9, w0
  420148:	cbz	x9, 420168 <node_symlink+0x14c>
  42014c:	mov	w0, #0x1                   	// #1
  420150:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  420154:	add	x1, x1, #0xeb1
  420158:	ldr	x2, [x19, #72]
  42015c:	mov	w3, #0x25                  	// #37
  420160:	ldr	x4, [x19, #48]
  420164:	bl	40a540 <log_assert_failed_realm@plt>
  420168:	ldr	x8, [x19, #80]
  42016c:	ldr	x0, [x8, #384]
  420170:	bl	40b150 <dirname_malloc@plt>
  420174:	ldr	x8, [x19, #80]
  420178:	str	x0, [x8, #376]
  42017c:	ldr	x9, [x8, #376]
  420180:	cbnz	x9, 4201b0 <node_symlink+0x194>
  420184:	mov	w8, #0x1                   	// #1
  420188:	mov	w0, w8
  42018c:	ldr	x1, [x19, #72]
  420190:	mov	w2, #0x29                  	// #41
  420194:	ldr	x3, [x19, #64]
  420198:	str	w8, [x19, #44]
  42019c:	bl	40a5e0 <log_oom_internal@plt>
  4201a0:	stur	w0, [x29, #-4]
  4201a4:	ldr	w8, [x19, #44]
  4201a8:	stur	w8, [x29, #-200]
  4201ac:	b	420f20 <node_symlink+0xf04>
  4201b0:	ldr	x8, [x19, #80]
  4201b4:	ldr	x0, [x8, #376]
  4201b8:	ldr	x1, [x8, #392]
  4201bc:	sub	x2, x29, #0x30
  4201c0:	bl	40b160 <path_make_relative@plt>
  4201c4:	stur	w0, [x29, #-196]
  4201c8:	ldur	w9, [x29, #-196]
  4201cc:	cmp	w9, #0x0
  4201d0:	cset	w9, ge  // ge = tcont
  4201d4:	tbnz	w9, #0, 4202cc <node_symlink+0x2b0>
  4201d8:	mov	x8, xzr
  4201dc:	ldr	x9, [x19, #80]
  4201e0:	str	x8, [x9, #208]
  4201e4:	ldr	x8, [x9, #400]
  4201e8:	str	x8, [x9, #200]
  4201ec:	mov	w10, #0x3                   	// #3
  4201f0:	stur	w10, [x29, #-220]
  4201f4:	ldur	w10, [x29, #-196]
  4201f8:	stur	w10, [x29, #-224]
  4201fc:	ldr	x8, [x9, #200]
  420200:	cbz	x8, 420244 <node_symlink+0x228>
  420204:	mov	w0, #0x1                   	// #1
  420208:	bl	40a3f0 <log_get_max_level_realm@plt>
  42020c:	ldur	w8, [x29, #-220]
  420210:	cmp	w0, w8
  420214:	cset	w8, ge  // ge = tcont
  420218:	mov	w9, #0x1                   	// #1
  42021c:	eor	w8, w8, #0x1
  420220:	eor	w8, w8, w9
  420224:	and	w8, w8, #0x1
  420228:	mov	w1, w8
  42022c:	sxtw	x10, w1
  420230:	cbz	x10, 420244 <node_symlink+0x228>
  420234:	ldr	x8, [x19, #80]
  420238:	ldr	x0, [x8, #200]
  42023c:	sub	x1, x29, #0xd0
  420240:	bl	40a860 <sd_device_get_sysname@plt>
  420244:	ldur	w0, [x29, #-220]
  420248:	ldur	w1, [x29, #-224]
  42024c:	ldr	x8, [x19, #80]
  420250:	ldr	x9, [x8, #208]
  420254:	mov	x10, xzr
  420258:	cmp	x9, #0x0
  42025c:	ldr	x9, [x19, #56]
  420260:	csel	x5, x9, x10, ne  // ne = any
  420264:	ldr	x6, [x8, #208]
  420268:	ldr	x11, [x8, #384]
  42026c:	ldr	x12, [x8, #392]
  420270:	sub	sp, sp, #0x20
  420274:	ldr	x2, [x19, #72]
  420278:	mov	w3, #0x2e                  	// #46
  42027c:	ldr	x4, [x19, #64]
  420280:	mov	x7, x10
  420284:	mov	x13, sp
  420288:	str	x10, [x13]
  42028c:	mov	x10, sp
  420290:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  420294:	add	x13, x13, #0x2ce
  420298:	str	x13, [x10, #8]
  42029c:	mov	x10, sp
  4202a0:	str	x11, [x10, #16]
  4202a4:	mov	x10, sp
  4202a8:	str	x12, [x10, #24]
  4202ac:	bl	40a870 <log_object_internal@plt>
  4202b0:	add	sp, sp, #0x20
  4202b4:	stur	w0, [x29, #-228]
  4202b8:	ldur	w14, [x29, #-228]
  4202bc:	stur	w14, [x29, #-4]
  4202c0:	mov	w14, #0x1                   	// #1
  4202c4:	stur	w14, [x29, #-200]
  4202c8:	b	420f20 <node_symlink+0xf04>
  4202cc:	ldr	x8, [x19, #80]
  4202d0:	ldr	x0, [x8, #384]
  4202d4:	sub	x1, x29, #0xc0
  4202d8:	bl	463828 <lstat64>
  4202dc:	cbnz	w0, 420588 <node_symlink+0x56c>
  4202e0:	ldur	w8, [x29, #-176]
  4202e4:	and	w8, w8, #0xf000
  4202e8:	cmp	w8, #0x6, lsl #12
  4202ec:	b.eq	420300 <node_symlink+0x2e4>  // b.none
  4202f0:	ldur	w8, [x29, #-176]
  4202f4:	and	w8, w8, #0xf000
  4202f8:	cmp	w8, #0x2, lsl #12
  4202fc:	b.ne	4203f0 <node_symlink+0x3d4>  // b.any
  420300:	mov	x8, xzr
  420304:	ldr	x9, [x19, #80]
  420308:	str	x8, [x9, #176]
  42030c:	ldr	x8, [x9, #400]
  420310:	str	x8, [x9, #168]
  420314:	mov	w10, #0x3                   	// #3
  420318:	stur	w10, [x29, #-252]
  42031c:	stur	wzr, [x29, #-256]
  420320:	ldr	x8, [x9, #168]
  420324:	cbz	x8, 420368 <node_symlink+0x34c>
  420328:	mov	w0, #0x1                   	// #1
  42032c:	bl	40a3f0 <log_get_max_level_realm@plt>
  420330:	ldur	w8, [x29, #-252]
  420334:	cmp	w0, w8
  420338:	cset	w8, ge  // ge = tcont
  42033c:	mov	w9, #0x1                   	// #1
  420340:	eor	w8, w8, #0x1
  420344:	eor	w8, w8, w9
  420348:	and	w8, w8, #0x1
  42034c:	mov	w1, w8
  420350:	sxtw	x10, w1
  420354:	cbz	x10, 420368 <node_symlink+0x34c>
  420358:	ldr	x8, [x19, #80]
  42035c:	ldr	x0, [x8, #168]
  420360:	sub	x1, x29, #0xf0
  420364:	bl	40a860 <sd_device_get_sysname@plt>
  420368:	ldur	w0, [x29, #-252]
  42036c:	ldur	w1, [x29, #-256]
  420370:	ldr	x8, [x19, #80]
  420374:	ldr	x9, [x8, #176]
  420378:	mov	x10, xzr
  42037c:	cmp	x9, #0x0
  420380:	ldr	x9, [x19, #56]
  420384:	csel	x5, x9, x10, ne  // ne = any
  420388:	ldr	x6, [x8, #176]
  42038c:	ldr	x11, [x8, #384]
  420390:	ldr	x12, [x8, #392]
  420394:	sub	sp, sp, #0x20
  420398:	ldr	x2, [x19, #72]
  42039c:	mov	w3, #0x33                  	// #51
  4203a0:	ldr	x4, [x19, #64]
  4203a4:	mov	x7, x10
  4203a8:	mov	x13, sp
  4203ac:	str	x10, [x13]
  4203b0:	mov	x10, sp
  4203b4:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  4203b8:	add	x13, x13, #0x300
  4203bc:	str	x13, [x10, #8]
  4203c0:	mov	x10, sp
  4203c4:	str	x11, [x10, #16]
  4203c8:	mov	x10, sp
  4203cc:	str	x12, [x10, #24]
  4203d0:	bl	40a870 <log_object_internal@plt>
  4203d4:	add	sp, sp, #0x20
  4203d8:	str	w0, [x19, #412]
  4203dc:	mov	w14, #0xffffffa1            	// #-95
  4203e0:	stur	w14, [x29, #-4]
  4203e4:	mov	w14, #0x1                   	// #1
  4203e8:	stur	w14, [x29, #-200]
  4203ec:	b	420f20 <node_symlink+0xf04>
  4203f0:	ldur	w8, [x29, #-176]
  4203f4:	and	w8, w8, #0xf000
  4203f8:	cmp	w8, #0xa, lsl #12
  4203fc:	b.ne	420584 <node_symlink+0x568>  // b.any
  420400:	add	x1, x19, #0x190
  420404:	mov	x8, xzr
  420408:	ldr	x9, [x19, #80]
  42040c:	str	x8, [x9, #144]
  420410:	ldr	x0, [x9, #384]
  420414:	bl	40b170 <readlink_malloc@plt>
  420418:	cmp	w0, #0x0
  42041c:	cset	w10, lt  // lt = tstop
  420420:	tbnz	w10, #0, 420560 <node_symlink+0x544>
  420424:	ldr	x8, [x19, #80]
  420428:	ldr	x0, [x8, #368]
  42042c:	ldr	x1, [x8, #144]
  420430:	bl	40aa20 <strcmp@plt>
  420434:	cbnz	w0, 420560 <node_symlink+0x544>
  420438:	mov	x8, xzr
  42043c:	ldr	x9, [x19, #80]
  420440:	str	x8, [x9, #136]
  420444:	ldr	x8, [x9, #400]
  420448:	str	x8, [x9, #128]
  42044c:	mov	w10, #0x7                   	// #7
  420450:	str	w10, [x19, #380]
  420454:	str	wzr, [x19, #376]
  420458:	ldr	x8, [x9, #128]
  42045c:	cbz	x8, 4204a0 <node_symlink+0x484>
  420460:	mov	w0, #0x1                   	// #1
  420464:	bl	40a3f0 <log_get_max_level_realm@plt>
  420468:	ldr	w8, [x19, #380]
  42046c:	cmp	w0, w8
  420470:	cset	w8, ge  // ge = tcont
  420474:	mov	w9, #0x1                   	// #1
  420478:	eor	w8, w8, #0x1
  42047c:	eor	w8, w8, w9
  420480:	and	w8, w8, #0x1
  420484:	mov	w1, w8
  420488:	sxtw	x10, w1
  42048c:	cbz	x10, 4204a0 <node_symlink+0x484>
  420490:	ldr	x8, [x19, #80]
  420494:	ldr	x0, [x8, #128]
  420498:	add	x1, x19, #0x188
  42049c:	bl	40a860 <sd_device_get_sysname@plt>
  4204a0:	ldr	w0, [x19, #380]
  4204a4:	ldr	w1, [x19, #376]
  4204a8:	ldr	x8, [x19, #80]
  4204ac:	ldr	x9, [x8, #136]
  4204b0:	mov	x10, xzr
  4204b4:	cmp	x9, #0x0
  4204b8:	ldr	x9, [x19, #56]
  4204bc:	csel	x5, x9, x10, ne  // ne = any
  4204c0:	ldr	x6, [x8, #136]
  4204c4:	ldr	x11, [x8, #384]
  4204c8:	ldr	x12, [x8, #368]
  4204cc:	sub	sp, sp, #0x20
  4204d0:	ldr	x2, [x19, #72]
  4204d4:	mov	w3, #0x3a                  	// #58
  4204d8:	ldr	x4, [x19, #64]
  4204dc:	mov	x7, x10
  4204e0:	mov	x13, sp
  4204e4:	str	x10, [x13]
  4204e8:	mov	x13, sp
  4204ec:	adrp	x14, 467000 <on_inotify.__assert_in_set+0x3540>
  4204f0:	add	x14, x14, #0x346
  4204f4:	str	x14, [x13, #8]
  4204f8:	mov	x13, sp
  4204fc:	str	x11, [x13, #16]
  420500:	mov	x11, sp
  420504:	str	x12, [x11, #24]
  420508:	str	x10, [x19, #32]
  42050c:	bl	40a870 <log_object_internal@plt>
  420510:	add	sp, sp, #0x20
  420514:	str	w0, [x19, #372]
  420518:	ldr	x8, [x19, #80]
  42051c:	ldr	x0, [x8, #384]
  420520:	mov	w15, #0x1                   	// #1
  420524:	mov	w1, w15
  420528:	str	w15, [x19, #28]
  42052c:	bl	40b180 <label_fix@plt>
  420530:	ldr	x8, [x19, #80]
  420534:	ldr	x1, [x8, #384]
  420538:	mov	w15, #0xffffff9c            	// #-100
  42053c:	mov	w0, w15
  420540:	ldr	x9, [x19, #32]
  420544:	mov	x2, x9
  420548:	mov	w3, #0x100                 	// #256
  42054c:	bl	40b130 <utimensat@plt>
  420550:	stur	wzr, [x29, #-4]
  420554:	ldr	w15, [x19, #28]
  420558:	stur	w15, [x29, #-200]
  42055c:	b	420564 <node_symlink+0x548>
  420560:	stur	wzr, [x29, #-200]
  420564:	add	x0, x19, #0x190
  420568:	bl	41ec54 <freep>
  42056c:	ldur	w8, [x29, #-200]
  420570:	cmp	w8, #0x0
  420574:	cset	w8, eq  // eq = none
  420578:	eor	w8, w8, #0x1
  42057c:	tbnz	w8, #0, 420f20 <node_symlink+0xf04>
  420580:	b	420584 <node_symlink+0x568>
  420584:	b	420840 <node_symlink+0x824>
  420588:	mov	x8, xzr
  42058c:	ldr	x9, [x19, #80]
  420590:	str	x8, [x9, #104]
  420594:	ldr	x8, [x9, #400]
  420598:	str	x8, [x9, #96]
  42059c:	mov	w10, #0x7                   	// #7
  4205a0:	str	w10, [x19, #348]
  4205a4:	str	wzr, [x19, #344]
  4205a8:	ldr	x8, [x9, #96]
  4205ac:	cbz	x8, 4205f0 <node_symlink+0x5d4>
  4205b0:	mov	w0, #0x1                   	// #1
  4205b4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4205b8:	ldr	w8, [x19, #348]
  4205bc:	cmp	w0, w8
  4205c0:	cset	w8, ge  // ge = tcont
  4205c4:	mov	w9, #0x1                   	// #1
  4205c8:	eor	w8, w8, #0x1
  4205cc:	eor	w8, w8, w9
  4205d0:	and	w8, w8, #0x1
  4205d4:	mov	w1, w8
  4205d8:	sxtw	x10, w1
  4205dc:	cbz	x10, 4205f0 <node_symlink+0x5d4>
  4205e0:	ldr	x8, [x19, #80]
  4205e4:	ldr	x0, [x8, #96]
  4205e8:	add	x1, x19, #0x168
  4205ec:	bl	40a860 <sd_device_get_sysname@plt>
  4205f0:	ldr	w0, [x19, #348]
  4205f4:	ldr	w1, [x19, #344]
  4205f8:	ldr	x8, [x19, #80]
  4205fc:	ldr	x9, [x8, #104]
  420600:	mov	x10, xzr
  420604:	cmp	x9, #0x0
  420608:	ldr	x9, [x19, #56]
  42060c:	csel	x5, x9, x10, ne  // ne = any
  420610:	ldr	x6, [x8, #104]
  420614:	ldr	x11, [x8, #384]
  420618:	ldr	x12, [x8, #368]
  42061c:	sub	sp, sp, #0x20
  420620:	ldr	x2, [x19, #72]
  420624:	mov	w3, #0x41                  	// #65
  420628:	ldr	x4, [x19, #64]
  42062c:	mov	x7, x10
  420630:	mov	x13, sp
  420634:	str	x10, [x13]
  420638:	mov	x10, sp
  42063c:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  420640:	add	x13, x13, #0x375
  420644:	str	x13, [x10, #8]
  420648:	mov	x10, sp
  42064c:	str	x11, [x10, #16]
  420650:	mov	x10, sp
  420654:	str	x12, [x10, #24]
  420658:	bl	40a870 <log_object_internal@plt>
  42065c:	add	sp, sp, #0x20
  420660:	str	w0, [x19, #340]
  420664:	ldr	x8, [x19, #80]
  420668:	ldr	x0, [x8, #384]
  42066c:	mov	w1, #0x1ed                 	// #493
  420670:	bl	40b190 <mkdir_parents_label@plt>
  420674:	stur	w0, [x29, #-196]
  420678:	mov	w9, #0x0                   	// #0
  42067c:	strb	w9, [x19, #339]
  420680:	ldur	w9, [x29, #-196]
  420684:	mov	w10, #0xfffffffe            	// #-2
  420688:	cmp	w9, w10
  42068c:	str	w9, [x19, #24]
  420690:	b.eq	4206b0 <node_symlink+0x694>  // b.none
  420694:	b	420698 <node_symlink+0x67c>
  420698:	ldr	w8, [x19, #24]
  42069c:	cmp	w8, #0x0
  4206a0:	cset	w9, eq  // eq = none
  4206a4:	eor	w9, w9, #0x1
  4206a8:	tbnz	w9, #0, 4206bc <node_symlink+0x6a0>
  4206ac:	b	4206b0 <node_symlink+0x694>
  4206b0:	mov	w8, #0x1                   	// #1
  4206b4:	strb	w8, [x19, #339]
  4206b8:	b	4206bc <node_symlink+0x6a0>
  4206bc:	ldrb	w8, [x19, #339]
  4206c0:	and	w8, w8, #0x1
  4206c4:	strb	w8, [x19, #338]
  4206c8:	ldrb	w8, [x19, #338]
  4206cc:	tbnz	w8, #0, 4206d4 <node_symlink+0x6b8>
  4206d0:	b	42072c <node_symlink+0x710>
  4206d4:	ldr	x8, [x19, #80]
  4206d8:	ldr	x0, [x8, #384]
  4206dc:	mov	w1, #0xa000                	// #40960
  4206e0:	bl	40b1a0 <mac_selinux_create_file_prepare@plt>
  4206e4:	ldr	x8, [x19, #80]
  4206e8:	ldr	x9, [x8, #368]
  4206ec:	ldr	x1, [x8, #384]
  4206f0:	mov	x0, x9
  4206f4:	bl	40b1b0 <symlink@plt>
  4206f8:	cmp	w0, #0x0
  4206fc:	cset	w10, ge  // ge = tcont
  420700:	tbnz	w10, #0, 420718 <node_symlink+0x6fc>
  420704:	bl	40a480 <__errno_location@plt>
  420708:	ldr	w8, [x0]
  42070c:	mov	w9, wzr
  420710:	subs	w8, w9, w8
  420714:	stur	w8, [x29, #-196]
  420718:	bl	40b1c0 <mac_selinux_create_file_clear@plt>
  42071c:	ldur	w8, [x29, #-196]
  420720:	mov	w9, #0xfffffffe            	// #-2
  420724:	cmp	w8, w9
  420728:	b.eq	420664 <node_symlink+0x648>  // b.none
  42072c:	ldur	w8, [x29, #-196]
  420730:	cbnz	w8, 420744 <node_symlink+0x728>
  420734:	stur	wzr, [x29, #-4]
  420738:	mov	w8, #0x1                   	// #1
  42073c:	stur	w8, [x29, #-200]
  420740:	b	420f20 <node_symlink+0xf04>
  420744:	ldur	w8, [x29, #-196]
  420748:	cmp	w8, #0x0
  42074c:	cset	w8, ge  // ge = tcont
  420750:	tbnz	w8, #0, 420840 <node_symlink+0x824>
  420754:	mov	x8, xzr
  420758:	ldr	x9, [x19, #80]
  42075c:	str	x8, [x9, #72]
  420760:	ldr	x8, [x9, #400]
  420764:	str	x8, [x9, #64]
  420768:	mov	w10, #0x7                   	// #7
  42076c:	str	w10, [x19, #316]
  420770:	ldur	w10, [x29, #-196]
  420774:	str	w10, [x19, #312]
  420778:	ldr	x8, [x9, #64]
  42077c:	cbz	x8, 4207c0 <node_symlink+0x7a4>
  420780:	mov	w0, #0x1                   	// #1
  420784:	bl	40a3f0 <log_get_max_level_realm@plt>
  420788:	ldr	w8, [x19, #316]
  42078c:	cmp	w0, w8
  420790:	cset	w8, ge  // ge = tcont
  420794:	mov	w9, #0x1                   	// #1
  420798:	eor	w8, w8, #0x1
  42079c:	eor	w8, w8, w9
  4207a0:	and	w8, w8, #0x1
  4207a4:	mov	w1, w8
  4207a8:	sxtw	x10, w1
  4207ac:	cbz	x10, 4207c0 <node_symlink+0x7a4>
  4207b0:	ldr	x8, [x19, #80]
  4207b4:	ldr	x0, [x8, #64]
  4207b8:	add	x1, x19, #0x148
  4207bc:	bl	40a860 <sd_device_get_sysname@plt>
  4207c0:	ldr	w0, [x19, #316]
  4207c4:	ldr	w1, [x19, #312]
  4207c8:	ldr	x8, [x19, #80]
  4207cc:	ldr	x9, [x8, #72]
  4207d0:	mov	x10, xzr
  4207d4:	cmp	x9, #0x0
  4207d8:	ldr	x9, [x19, #56]
  4207dc:	csel	x5, x9, x10, ne  // ne = any
  4207e0:	ldr	x6, [x8, #72]
  4207e4:	ldr	x11, [x8, #384]
  4207e8:	ldr	x12, [x8, #368]
  4207ec:	ldr	x13, [x8, #384]
  4207f0:	sub	sp, sp, #0x30
  4207f4:	ldr	x2, [x19, #72]
  4207f8:	mov	w3, #0x4e                  	// #78
  4207fc:	ldr	x4, [x19, #64]
  420800:	mov	x7, x10
  420804:	mov	x14, sp
  420808:	str	x10, [x14]
  42080c:	mov	x10, sp
  420810:	adrp	x14, 467000 <on_inotify.__assert_in_set+0x3540>
  420814:	add	x14, x14, #0x393
  420818:	str	x14, [x10, #8]
  42081c:	mov	x10, sp
  420820:	str	x11, [x10, #16]
  420824:	mov	x10, sp
  420828:	str	x12, [x10, #24]
  42082c:	mov	x10, sp
  420830:	str	x13, [x10, #32]
  420834:	bl	40a870 <log_object_internal@plt>
  420838:	add	sp, sp, #0x30
  42083c:	str	w0, [x19, #308]
  420840:	mov	x8, xzr
  420844:	ldr	x9, [x19, #80]
  420848:	str	x8, [x9, #40]
  42084c:	ldr	x8, [x9, #400]
  420850:	str	x8, [x9, #32]
  420854:	mov	w10, #0x7                   	// #7
  420858:	str	w10, [x19, #284]
  42085c:	str	wzr, [x19, #280]
  420860:	ldr	x8, [x9, #32]
  420864:	cbz	x8, 4208a8 <node_symlink+0x88c>
  420868:	mov	w0, #0x1                   	// #1
  42086c:	bl	40a3f0 <log_get_max_level_realm@plt>
  420870:	ldr	w8, [x19, #284]
  420874:	cmp	w0, w8
  420878:	cset	w8, ge  // ge = tcont
  42087c:	mov	w9, #0x1                   	// #1
  420880:	eor	w8, w8, #0x1
  420884:	eor	w8, w8, w9
  420888:	and	w8, w8, #0x1
  42088c:	mov	w1, w8
  420890:	sxtw	x10, w1
  420894:	cbz	x10, 4208a8 <node_symlink+0x88c>
  420898:	ldr	x8, [x19, #80]
  42089c:	ldr	x0, [x8, #32]
  4208a0:	add	x1, x19, #0x128
  4208a4:	bl	40a860 <sd_device_get_sysname@plt>
  4208a8:	ldr	w0, [x19, #284]
  4208ac:	ldr	w1, [x19, #280]
  4208b0:	ldr	x8, [x19, #80]
  4208b4:	ldr	x9, [x8, #40]
  4208b8:	mov	x10, xzr
  4208bc:	cmp	x9, #0x0
  4208c0:	ldr	x9, [x19, #56]
  4208c4:	csel	x5, x9, x10, ne  // ne = any
  4208c8:	ldr	x6, [x8, #40]
  4208cc:	ldr	x11, [x8, #384]
  4208d0:	sub	sp, sp, #0x20
  4208d4:	ldr	x2, [x19, #72]
  4208d8:	mov	w3, #0x51                  	// #81
  4208dc:	ldr	x4, [x19, #64]
  4208e0:	mov	x7, x10
  4208e4:	mov	x12, sp
  4208e8:	str	x10, [x12]
  4208ec:	mov	x10, sp
  4208f0:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  4208f4:	add	x12, x12, #0x3d5
  4208f8:	str	x12, [x10, #8]
  4208fc:	mov	x10, sp
  420900:	str	x11, [x10, #16]
  420904:	bl	40a870 <log_object_internal@plt>
  420908:	add	sp, sp, #0x20
  42090c:	str	w0, [x19, #276]
  420910:	ldr	x8, [x19, #80]
  420914:	ldr	x0, [x8, #400]
  420918:	sub	x1, x29, #0x38
  42091c:	bl	40b0a0 <device_get_id_filename@plt>
  420920:	stur	w0, [x29, #-196]
  420924:	ldur	w13, [x29, #-196]
  420928:	cmp	w13, #0x0
  42092c:	cset	w13, ge  // ge = tcont
  420930:	tbnz	w13, #0, 420a10 <node_symlink+0x9f4>
  420934:	mov	x8, xzr
  420938:	ldr	x9, [x19, #80]
  42093c:	str	x8, [x9, #8]
  420940:	ldr	x8, [x9, #400]
  420944:	str	x8, [x9]
  420948:	mov	w10, #0x3                   	// #3
  42094c:	str	w10, [x19, #252]
  420950:	ldur	w10, [x29, #-196]
  420954:	str	w10, [x19, #248]
  420958:	ldr	x8, [x9]
  42095c:	cbz	x8, 4209a0 <node_symlink+0x984>
  420960:	mov	w0, #0x1                   	// #1
  420964:	bl	40a3f0 <log_get_max_level_realm@plt>
  420968:	ldr	w8, [x19, #252]
  42096c:	cmp	w0, w8
  420970:	cset	w8, ge  // ge = tcont
  420974:	mov	w9, #0x1                   	// #1
  420978:	eor	w8, w8, #0x1
  42097c:	eor	w8, w8, w9
  420980:	and	w8, w8, #0x1
  420984:	mov	w1, w8
  420988:	sxtw	x10, w1
  42098c:	cbz	x10, 4209a0 <node_symlink+0x984>
  420990:	ldr	x8, [x19, #80]
  420994:	ldr	x0, [x8]
  420998:	add	x1, x19, #0x108
  42099c:	bl	40a860 <sd_device_get_sysname@plt>
  4209a0:	ldr	w0, [x19, #252]
  4209a4:	ldr	w1, [x19, #248]
  4209a8:	ldr	x8, [x19, #80]
  4209ac:	ldr	x9, [x8, #8]
  4209b0:	mov	x10, xzr
  4209b4:	cmp	x9, #0x0
  4209b8:	ldr	x9, [x19, #56]
  4209bc:	csel	x5, x9, x10, ne  // ne = any
  4209c0:	ldr	x6, [x8, #8]
  4209c4:	sub	sp, sp, #0x10
  4209c8:	ldr	x2, [x19, #72]
  4209cc:	mov	w3, #0x54                  	// #84
  4209d0:	ldr	x4, [x19, #64]
  4209d4:	mov	x7, x10
  4209d8:	mov	x11, sp
  4209dc:	str	x10, [x11]
  4209e0:	mov	x10, sp
  4209e4:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  4209e8:	add	x11, x11, #0xec3
  4209ec:	str	x11, [x10, #8]
  4209f0:	bl	40a870 <log_object_internal@plt>
  4209f4:	add	sp, sp, #0x10
  4209f8:	str	w0, [x19, #244]
  4209fc:	ldr	w12, [x19, #244]
  420a00:	stur	w12, [x29, #-4]
  420a04:	mov	w12, #0x1                   	// #1
  420a08:	stur	w12, [x29, #-200]
  420a0c:	b	420f20 <node_symlink+0xf04>
  420a10:	ldr	x8, [x19, #80]
  420a14:	ldr	x9, [x8, #384]
  420a18:	add	x10, x19, #0xd8
  420a1c:	str	x9, [x19, #216]
  420a20:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  420a24:	add	x9, x9, #0x3ed
  420a28:	str	x9, [x10, #8]
  420a2c:	ldr	x9, [x8, #360]
  420a30:	str	x9, [x10, #16]
  420a34:	str	xzr, [x19, #192]
  420a38:	str	xzr, [x19, #184]
  420a3c:	ldr	x8, [x19, #184]
  420a40:	mov	w9, #0x0                   	// #0
  420a44:	cmp	x8, #0x3
  420a48:	str	w9, [x19, #20]
  420a4c:	b.cs	420a74 <node_symlink+0xa58>  // b.hs, b.nlast
  420a50:	ldr	x8, [x19, #184]
  420a54:	mov	x9, #0x8                   	// #8
  420a58:	mul	x8, x9, x8
  420a5c:	add	x9, x19, #0xd8
  420a60:	add	x8, x9, x8
  420a64:	ldr	x8, [x8]
  420a68:	cmp	x8, #0x0
  420a6c:	cset	w10, ne  // ne = any
  420a70:	str	w10, [x19, #20]
  420a74:	ldr	w8, [x19, #20]
  420a78:	tbnz	w8, #0, 420a80 <node_symlink+0xa64>
  420a7c:	b	420ab8 <node_symlink+0xa9c>
  420a80:	ldr	x8, [x19, #184]
  420a84:	mov	x9, #0x8                   	// #8
  420a88:	mul	x8, x9, x8
  420a8c:	add	x9, x19, #0xd8
  420a90:	add	x8, x9, x8
  420a94:	ldr	x0, [x8]
  420a98:	bl	40a800 <strlen@plt>
  420a9c:	ldr	x8, [x19, #192]
  420aa0:	add	x8, x8, x0
  420aa4:	str	x8, [x19, #192]
  420aa8:	ldr	x8, [x19, #184]
  420aac:	add	x8, x8, #0x1
  420ab0:	str	x8, [x19, #184]
  420ab4:	b	420a3c <node_symlink+0xa20>
  420ab8:	ldr	x8, [x19, #192]
  420abc:	add	x8, x8, #0x1
  420ac0:	str	x8, [x19, #176]
  420ac4:	ldr	x1, [x19, #176]
  420ac8:	mov	x0, #0x1                   	// #1
  420acc:	bl	42184c <size_multiply_overflow>
  420ad0:	mov	w8, #0x1                   	// #1
  420ad4:	eor	w9, w0, #0x1
  420ad8:	eor	w9, w9, w8
  420adc:	eor	w9, w9, w8
  420ae0:	eor	w8, w9, w8
  420ae4:	and	w8, w8, #0x1
  420ae8:	mov	w1, w8
  420aec:	sxtw	x10, w1
  420af0:	cbz	x10, 420b10 <node_symlink+0xaf4>
  420af4:	mov	w0, #0x1                   	// #1
  420af8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  420afc:	add	x1, x1, #0x694
  420b00:	ldr	x2, [x19, #72]
  420b04:	mov	w3, #0x55                  	// #85
  420b08:	ldr	x4, [x19, #48]
  420b0c:	bl	40a540 <log_assert_failed_realm@plt>
  420b10:	ldr	x8, [x19, #176]
  420b14:	mov	x9, #0x1                   	// #1
  420b18:	mul	x8, x9, x8
  420b1c:	cmp	x8, #0x400, lsl #12
  420b20:	cset	w10, ls  // ls = plast
  420b24:	mov	w11, #0x1                   	// #1
  420b28:	eor	w10, w10, #0x1
  420b2c:	eor	w10, w10, w11
  420b30:	eor	w10, w10, w11
  420b34:	and	w10, w10, #0x1
  420b38:	mov	w0, w10
  420b3c:	sxtw	x8, w0
  420b40:	cbz	x8, 420b60 <node_symlink+0xb44>
  420b44:	mov	w0, #0x1                   	// #1
  420b48:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  420b4c:	add	x1, x1, #0x6f4
  420b50:	ldr	x2, [x19, #72]
  420b54:	mov	w3, #0x55                  	// #85
  420b58:	ldr	x4, [x19, #48]
  420b5c:	bl	40a540 <log_assert_failed_realm@plt>
  420b60:	ldr	x8, [x19, #176]
  420b64:	mov	x9, #0x1                   	// #1
  420b68:	mul	x8, x9, x8
  420b6c:	mul	x8, x8, x9
  420b70:	add	x8, x8, #0xf
  420b74:	and	x8, x8, #0xfffffffffffffff0
  420b78:	mov	x9, sp
  420b7c:	subs	x8, x9, x8
  420b80:	mov	sp, x8
  420b84:	str	x8, [x19, #168]
  420b88:	ldr	x8, [x19, #168]
  420b8c:	str	x8, [x19, #208]
  420b90:	str	x8, [x19, #200]
  420b94:	str	xzr, [x19, #184]
  420b98:	ldr	x8, [x19, #184]
  420b9c:	mov	w9, #0x0                   	// #0
  420ba0:	cmp	x8, #0x3
  420ba4:	str	w9, [x19, #16]
  420ba8:	b.cs	420bd0 <node_symlink+0xbb4>  // b.hs, b.nlast
  420bac:	ldr	x8, [x19, #184]
  420bb0:	mov	x9, #0x8                   	// #8
  420bb4:	mul	x8, x9, x8
  420bb8:	add	x9, x19, #0xd8
  420bbc:	add	x8, x9, x8
  420bc0:	ldr	x8, [x8]
  420bc4:	cmp	x8, #0x0
  420bc8:	cset	w10, ne  // ne = any
  420bcc:	str	w10, [x19, #16]
  420bd0:	ldr	w8, [x19, #16]
  420bd4:	tbnz	w8, #0, 420bdc <node_symlink+0xbc0>
  420bd8:	b	420c10 <node_symlink+0xbf4>
  420bdc:	ldr	x0, [x19, #200]
  420be0:	ldr	x8, [x19, #184]
  420be4:	mov	x9, #0x8                   	// #8
  420be8:	mul	x8, x9, x8
  420bec:	add	x9, x19, #0xd8
  420bf0:	add	x8, x9, x8
  420bf4:	ldr	x1, [x8]
  420bf8:	bl	40aca0 <stpcpy@plt>
  420bfc:	str	x0, [x19, #200]
  420c00:	ldr	x8, [x19, #184]
  420c04:	add	x8, x8, #0x1
  420c08:	str	x8, [x19, #184]
  420c0c:	b	420b98 <node_symlink+0xb7c>
  420c10:	ldr	x8, [x19, #200]
  420c14:	mov	w9, #0x0                   	// #0
  420c18:	strb	w9, [x8]
  420c1c:	ldr	x8, [x19, #208]
  420c20:	str	x8, [x19, #160]
  420c24:	ldr	x8, [x19, #160]
  420c28:	ldr	x10, [x19, #80]
  420c2c:	str	x8, [x10, #352]
  420c30:	ldr	x0, [x10, #352]
  420c34:	bl	40a7d0 <unlink@plt>
  420c38:	ldr	x8, [x19, #80]
  420c3c:	ldr	x0, [x8, #352]
  420c40:	mov	w1, #0x1ed                 	// #493
  420c44:	bl	40b190 <mkdir_parents_label@plt>
  420c48:	stur	w0, [x29, #-196]
  420c4c:	mov	w9, #0x0                   	// #0
  420c50:	strb	w9, [x19, #159]
  420c54:	ldur	w9, [x29, #-196]
  420c58:	mov	w10, #0xfffffffe            	// #-2
  420c5c:	cmp	w9, w10
  420c60:	str	w9, [x19, #12]
  420c64:	b.eq	420c84 <node_symlink+0xc68>  // b.none
  420c68:	b	420c6c <node_symlink+0xc50>
  420c6c:	ldr	w8, [x19, #12]
  420c70:	cmp	w8, #0x0
  420c74:	cset	w9, eq  // eq = none
  420c78:	eor	w9, w9, #0x1
  420c7c:	tbnz	w9, #0, 420c90 <node_symlink+0xc74>
  420c80:	b	420c84 <node_symlink+0xc68>
  420c84:	mov	w8, #0x1                   	// #1
  420c88:	strb	w8, [x19, #159]
  420c8c:	b	420c90 <node_symlink+0xc74>
  420c90:	ldrb	w8, [x19, #159]
  420c94:	and	w8, w8, #0x1
  420c98:	strb	w8, [x19, #158]
  420c9c:	ldrb	w8, [x19, #158]
  420ca0:	tbnz	w8, #0, 420ca8 <node_symlink+0xc8c>
  420ca4:	b	420d00 <node_symlink+0xce4>
  420ca8:	ldr	x8, [x19, #80]
  420cac:	ldr	x0, [x8, #352]
  420cb0:	mov	w1, #0xa000                	// #40960
  420cb4:	bl	40b1a0 <mac_selinux_create_file_prepare@plt>
  420cb8:	ldr	x8, [x19, #80]
  420cbc:	ldr	x9, [x8, #368]
  420cc0:	ldr	x1, [x8, #352]
  420cc4:	mov	x0, x9
  420cc8:	bl	40b1b0 <symlink@plt>
  420ccc:	cmp	w0, #0x0
  420cd0:	cset	w10, ge  // ge = tcont
  420cd4:	tbnz	w10, #0, 420cec <node_symlink+0xcd0>
  420cd8:	bl	40a480 <__errno_location@plt>
  420cdc:	ldr	w8, [x0]
  420ce0:	mov	w9, wzr
  420ce4:	subs	w8, w9, w8
  420ce8:	stur	w8, [x29, #-196]
  420cec:	bl	40b1c0 <mac_selinux_create_file_clear@plt>
  420cf0:	ldur	w8, [x29, #-196]
  420cf4:	mov	w9, #0xfffffffe            	// #-2
  420cf8:	cmp	w8, w9
  420cfc:	b.eq	420c38 <node_symlink+0xc1c>  // b.none
  420d00:	ldur	w8, [x29, #-196]
  420d04:	cmp	w8, #0x0
  420d08:	cset	w8, ge  // ge = tcont
  420d0c:	tbnz	w8, #0, 420e00 <node_symlink+0xde4>
  420d10:	mov	x8, xzr
  420d14:	str	x8, [x19, #144]
  420d18:	ldr	x8, [x19, #80]
  420d1c:	ldr	x9, [x8, #400]
  420d20:	str	x9, [x19, #136]
  420d24:	mov	w10, #0x3                   	// #3
  420d28:	str	w10, [x19, #132]
  420d2c:	ldur	w10, [x29, #-196]
  420d30:	str	w10, [x19, #128]
  420d34:	ldr	x9, [x19, #136]
  420d38:	cbz	x9, 420d78 <node_symlink+0xd5c>
  420d3c:	mov	w0, #0x1                   	// #1
  420d40:	bl	40a3f0 <log_get_max_level_realm@plt>
  420d44:	ldr	w8, [x19, #132]
  420d48:	cmp	w0, w8
  420d4c:	cset	w8, ge  // ge = tcont
  420d50:	mov	w9, #0x1                   	// #1
  420d54:	eor	w8, w8, #0x1
  420d58:	eor	w8, w8, w9
  420d5c:	and	w8, w8, #0x1
  420d60:	mov	w1, w8
  420d64:	sxtw	x10, w1
  420d68:	cbz	x10, 420d78 <node_symlink+0xd5c>
  420d6c:	ldr	x0, [x19, #136]
  420d70:	add	x1, x19, #0x90
  420d74:	bl	40a860 <sd_device_get_sysname@plt>
  420d78:	ldr	w0, [x19, #132]
  420d7c:	ldr	w1, [x19, #128]
  420d80:	ldr	x8, [x19, #144]
  420d84:	mov	x9, xzr
  420d88:	cmp	x8, #0x0
  420d8c:	ldr	x8, [x19, #56]
  420d90:	csel	x5, x8, x9, ne  // ne = any
  420d94:	ldr	x6, [x19, #144]
  420d98:	ldr	x10, [x19, #80]
  420d9c:	ldr	x11, [x10, #352]
  420da0:	ldr	x12, [x10, #368]
  420da4:	sub	sp, sp, #0x20
  420da8:	ldr	x2, [x19, #72]
  420dac:	mov	w3, #0x61                  	// #97
  420db0:	ldr	x4, [x19, #64]
  420db4:	mov	x7, x9
  420db8:	mov	x13, sp
  420dbc:	str	x9, [x13]
  420dc0:	mov	x9, sp
  420dc4:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  420dc8:	add	x13, x13, #0x3f3
  420dcc:	str	x13, [x9, #8]
  420dd0:	mov	x9, sp
  420dd4:	str	x11, [x9, #16]
  420dd8:	mov	x9, sp
  420ddc:	str	x12, [x9, #24]
  420de0:	bl	40a870 <log_object_internal@plt>
  420de4:	add	sp, sp, #0x20
  420de8:	str	w0, [x19, #124]
  420dec:	ldr	w14, [x19, #124]
  420df0:	stur	w14, [x29, #-4]
  420df4:	mov	w14, #0x1                   	// #1
  420df8:	stur	w14, [x29, #-200]
  420dfc:	b	420f20 <node_symlink+0xf04>
  420e00:	ldr	x8, [x19, #80]
  420e04:	ldr	x0, [x8, #352]
  420e08:	ldr	x1, [x8, #384]
  420e0c:	bl	40b1d0 <rename@plt>
  420e10:	cmp	w0, #0x0
  420e14:	cset	w9, ge  // ge = tcont
  420e18:	tbnz	w9, #0, 420f10 <node_symlink+0xef4>
  420e1c:	mov	x8, xzr
  420e20:	str	x8, [x19, #112]
  420e24:	ldr	x8, [x19, #80]
  420e28:	ldr	x9, [x8, #400]
  420e2c:	str	x9, [x19, #104]
  420e30:	mov	w10, #0x3                   	// #3
  420e34:	str	w10, [x19, #100]
  420e38:	bl	40a480 <__errno_location@plt>
  420e3c:	ldr	w10, [x0]
  420e40:	str	w10, [x19, #96]
  420e44:	ldr	x8, [x19, #104]
  420e48:	cbz	x8, 420e88 <node_symlink+0xe6c>
  420e4c:	mov	w0, #0x1                   	// #1
  420e50:	bl	40a3f0 <log_get_max_level_realm@plt>
  420e54:	ldr	w8, [x19, #100]
  420e58:	cmp	w0, w8
  420e5c:	cset	w8, ge  // ge = tcont
  420e60:	mov	w9, #0x1                   	// #1
  420e64:	eor	w8, w8, #0x1
  420e68:	eor	w8, w8, w9
  420e6c:	and	w8, w8, #0x1
  420e70:	mov	w1, w8
  420e74:	sxtw	x10, w1
  420e78:	cbz	x10, 420e88 <node_symlink+0xe6c>
  420e7c:	ldr	x0, [x19, #104]
  420e80:	add	x1, x19, #0x70
  420e84:	bl	40a860 <sd_device_get_sysname@plt>
  420e88:	ldr	w0, [x19, #100]
  420e8c:	ldr	w1, [x19, #96]
  420e90:	ldr	x8, [x19, #112]
  420e94:	mov	x9, xzr
  420e98:	cmp	x8, #0x0
  420e9c:	ldr	x8, [x19, #56]
  420ea0:	csel	x5, x8, x9, ne  // ne = any
  420ea4:	ldr	x6, [x19, #112]
  420ea8:	ldr	x10, [x19, #80]
  420eac:	ldr	x11, [x10, #352]
  420eb0:	ldr	x12, [x10, #384]
  420eb4:	sub	sp, sp, #0x20
  420eb8:	ldr	x2, [x19, #72]
  420ebc:	mov	w3, #0x64                  	// #100
  420ec0:	ldr	x4, [x19, #64]
  420ec4:	mov	x7, x9
  420ec8:	mov	x13, sp
  420ecc:	str	x9, [x13]
  420ed0:	mov	x9, sp
  420ed4:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  420ed8:	add	x13, x13, #0x41d
  420edc:	str	x13, [x9, #8]
  420ee0:	mov	x9, sp
  420ee4:	str	x11, [x9, #16]
  420ee8:	mov	x9, sp
  420eec:	str	x12, [x9, #24]
  420ef0:	bl	40a870 <log_object_internal@plt>
  420ef4:	add	sp, sp, #0x20
  420ef8:	str	w0, [x19, #92]
  420efc:	ldr	w14, [x19, #92]
  420f00:	stur	w14, [x29, #-196]
  420f04:	ldr	x8, [x19, #80]
  420f08:	ldr	x0, [x8, #352]
  420f0c:	bl	40a7d0 <unlink@plt>
  420f10:	ldur	w8, [x29, #-196]
  420f14:	stur	w8, [x29, #-4]
  420f18:	mov	w8, #0x1                   	// #1
  420f1c:	stur	w8, [x29, #-200]
  420f20:	sub	x0, x29, #0x30
  420f24:	bl	41ec54 <freep>
  420f28:	sub	x0, x29, #0x28
  420f2c:	bl	41ec54 <freep>
  420f30:	ldur	w0, [x29, #-4]
  420f34:	mov	sp, x29
  420f38:	ldp	x28, x19, [sp, #16]
  420f3c:	ldp	x29, x30, [sp], #32
  420f40:	ret

0000000000420f44 <udev_node_remove>:
  420f44:	sub	sp, sp, #0x70
  420f48:	stp	x29, x30, [sp, #96]
  420f4c:	add	x29, sp, #0x60
  420f50:	mov	x8, xzr
  420f54:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  420f58:	add	x9, x9, #0xcd1
  420f5c:	add	x9, x9, #0x3
  420f60:	stur	x0, [x29, #-16]
  420f64:	stur	x8, [x29, #-24]
  420f68:	str	x9, [sp, #16]
  420f6c:	ldur	x8, [x29, #-16]
  420f70:	cmp	x8, #0x0
  420f74:	cset	w9, ne  // ne = any
  420f78:	mov	w10, #0x1                   	// #1
  420f7c:	eor	w9, w9, #0x1
  420f80:	eor	w9, w9, w10
  420f84:	eor	w9, w9, w10
  420f88:	and	w9, w9, #0x1
  420f8c:	mov	w0, w9
  420f90:	sxtw	x8, w0
  420f94:	cbz	x8, 420fb8 <udev_node_remove+0x74>
  420f98:	mov	w0, #0x1                   	// #1
  420f9c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  420fa0:	add	x1, x1, #0xee1
  420fa4:	ldr	x2, [sp, #16]
  420fa8:	mov	w3, #0x1c6                 	// #454
  420fac:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  420fb0:	add	x4, x4, #0xe4c
  420fb4:	bl	40a540 <log_assert_failed_realm@plt>
  420fb8:	ldur	x0, [x29, #-16]
  420fbc:	bl	40aee0 <sd_device_get_devlink_first@plt>
  420fc0:	stur	x0, [x29, #-32]
  420fc4:	ldur	x8, [x29, #-32]
  420fc8:	cbz	x8, 420ff0 <udev_node_remove+0xac>
  420fcc:	ldur	x0, [x29, #-16]
  420fd0:	ldur	x1, [x29, #-32]
  420fd4:	mov	w8, wzr
  420fd8:	and	w2, w8, #0x1
  420fdc:	bl	41e22c <link_update>
  420fe0:	ldur	x0, [x29, #-16]
  420fe4:	bl	40af00 <sd_device_get_devlink_next@plt>
  420fe8:	stur	x0, [x29, #-32]
  420fec:	b	420fc4 <udev_node_remove+0x80>
  420ff0:	ldur	x0, [x29, #-16]
  420ff4:	sub	x1, x29, #0x18
  420ff8:	bl	41fe54 <xsprintf_dev_num_path_from_sd_device>
  420ffc:	stur	w0, [x29, #-36]
  421000:	ldur	w8, [x29, #-36]
  421004:	cmp	w8, #0x0
  421008:	cset	w8, ge  // ge = tcont
  42100c:	tbnz	w8, #0, 4210e0 <udev_node_remove+0x19c>
  421010:	mov	x8, xzr
  421014:	str	x8, [sp, #48]
  421018:	ldur	x8, [x29, #-16]
  42101c:	str	x8, [sp, #40]
  421020:	mov	w9, #0x7                   	// #7
  421024:	str	w9, [sp, #36]
  421028:	ldur	w9, [x29, #-36]
  42102c:	str	w9, [sp, #32]
  421030:	ldr	x8, [sp, #40]
  421034:	cbz	x8, 421074 <udev_node_remove+0x130>
  421038:	mov	w0, #0x1                   	// #1
  42103c:	bl	40a3f0 <log_get_max_level_realm@plt>
  421040:	ldr	w8, [sp, #36]
  421044:	cmp	w0, w8
  421048:	cset	w8, ge  // ge = tcont
  42104c:	mov	w9, #0x1                   	// #1
  421050:	eor	w8, w8, #0x1
  421054:	eor	w8, w8, w9
  421058:	and	w8, w8, #0x1
  42105c:	mov	w1, w8
  421060:	sxtw	x10, w1
  421064:	cbz	x10, 421074 <udev_node_remove+0x130>
  421068:	ldr	x0, [sp, #40]
  42106c:	add	x1, sp, #0x30
  421070:	bl	40a860 <sd_device_get_sysname@plt>
  421074:	ldr	w0, [sp, #36]
  421078:	ldr	w1, [sp, #32]
  42107c:	ldr	x8, [sp, #48]
  421080:	mov	x9, xzr
  421084:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  421088:	add	x10, x10, #0xa46
  42108c:	cmp	x8, #0x0
  421090:	csel	x5, x10, x9, ne  // ne = any
  421094:	ldr	x6, [sp, #48]
  421098:	ldr	x2, [sp, #16]
  42109c:	mov	w3, #0x1ce                 	// #462
  4210a0:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  4210a4:	add	x4, x4, #0xe6e
  4210a8:	mov	x7, x9
  4210ac:	mov	x8, sp
  4210b0:	str	x9, [x8]
  4210b4:	mov	x8, sp
  4210b8:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  4210bc:	add	x9, x9, #0xe2e
  4210c0:	str	x9, [x8, #8]
  4210c4:	bl	40a870 <log_object_internal@plt>
  4210c8:	str	w0, [sp, #28]
  4210cc:	ldr	w11, [sp, #28]
  4210d0:	stur	w11, [x29, #-4]
  4210d4:	mov	w11, #0x1                   	// #1
  4210d8:	str	w11, [sp, #24]
  4210dc:	b	4210f4 <udev_node_remove+0x1b0>
  4210e0:	ldur	x0, [x29, #-24]
  4210e4:	bl	40a7d0 <unlink@plt>
  4210e8:	stur	wzr, [x29, #-4]
  4210ec:	mov	w8, #0x1                   	// #1
  4210f0:	str	w8, [sp, #24]
  4210f4:	sub	x0, x29, #0x18
  4210f8:	bl	41ec54 <freep>
  4210fc:	ldur	w0, [x29, #-4]
  421100:	ldp	x29, x30, [sp, #96]
  421104:	add	sp, sp, #0x70
  421108:	ret

000000000042110c <link_find_prioritized>:
  42110c:	sub	sp, sp, #0x130
  421110:	stp	x29, x30, [sp, #272]
  421114:	str	x28, [sp, #288]
  421118:	add	x29, sp, #0x110
  42111c:	mov	x8, xzr
  421120:	mov	w9, #0x1                   	// #1
  421124:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  421128:	add	x10, x10, #0xcd1
  42112c:	add	x10, x10, #0x3
  421130:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  421134:	add	x11, x11, #0xf1f
  421138:	stur	x0, [x29, #-16]
  42113c:	and	w9, w1, w9
  421140:	sturb	w9, [x29, #-17]
  421144:	stur	x2, [x29, #-32]
  421148:	stur	x3, [x29, #-40]
  42114c:	stur	x8, [x29, #-48]
  421150:	stur	x8, [x29, #-56]
  421154:	stur	wzr, [x29, #-72]
  421158:	str	x10, [sp, #48]
  42115c:	str	x11, [sp, #40]
  421160:	ldurb	w8, [x29, #-17]
  421164:	mov	w9, #0x1                   	// #1
  421168:	str	w9, [sp, #36]
  42116c:	tbnz	w8, #0, 421174 <link_find_prioritized+0x68>
  421170:	b	421184 <link_find_prioritized+0x78>
  421174:	ldur	x8, [x29, #-16]
  421178:	cmp	x8, #0x0
  42117c:	cset	w9, ne  // ne = any
  421180:	str	w9, [sp, #36]
  421184:	ldr	w8, [sp, #36]
  421188:	mov	w9, #0x1                   	// #1
  42118c:	eor	w8, w8, #0x1
  421190:	eor	w8, w8, w9
  421194:	eor	w8, w8, w9
  421198:	and	w8, w8, #0x1
  42119c:	mov	w0, w8
  4211a0:	sxtw	x10, w0
  4211a4:	cbz	x10, 4211c4 <link_find_prioritized+0xb8>
  4211a8:	mov	w0, #0x1                   	// #1
  4211ac:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4211b0:	add	x1, x1, #0xf13
  4211b4:	ldr	x2, [sp, #48]
  4211b8:	mov	w3, #0x72                  	// #114
  4211bc:	ldr	x4, [sp, #40]
  4211c0:	bl	40a540 <log_assert_failed_realm@plt>
  4211c4:	ldur	x8, [x29, #-32]
  4211c8:	cmp	x8, #0x0
  4211cc:	cset	w9, ne  // ne = any
  4211d0:	mov	w10, #0x1                   	// #1
  4211d4:	eor	w9, w9, #0x1
  4211d8:	eor	w9, w9, w10
  4211dc:	eor	w9, w9, w10
  4211e0:	and	w9, w9, #0x1
  4211e4:	mov	w0, w9
  4211e8:	sxtw	x8, w0
  4211ec:	cbz	x8, 42120c <link_find_prioritized+0x100>
  4211f0:	mov	w0, #0x1                   	// #1
  4211f4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4211f8:	add	x1, x1, #0xf64
  4211fc:	ldr	x2, [sp, #48]
  421200:	mov	w3, #0x73                  	// #115
  421204:	ldr	x4, [sp, #40]
  421208:	bl	40a540 <log_assert_failed_realm@plt>
  42120c:	ldur	x8, [x29, #-40]
  421210:	cmp	x8, #0x0
  421214:	cset	w9, ne  // ne = any
  421218:	mov	w10, #0x1                   	// #1
  42121c:	eor	w9, w9, #0x1
  421220:	eor	w9, w9, w10
  421224:	eor	w9, w9, w10
  421228:	and	w9, w9, #0x1
  42122c:	mov	w0, w9
  421230:	sxtw	x8, w0
  421234:	cbz	x8, 421254 <link_find_prioritized+0x148>
  421238:	mov	w0, #0x1                   	// #1
  42123c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  421240:	add	x1, x1, #0x2ff
  421244:	ldr	x2, [sp, #48]
  421248:	mov	w3, #0x74                  	// #116
  42124c:	ldr	x4, [sp, #40]
  421250:	bl	40a540 <log_assert_failed_realm@plt>
  421254:	ldurb	w8, [x29, #-17]
  421258:	tbnz	w8, #0, 421260 <link_find_prioritized+0x154>
  42125c:	b	4212f0 <link_find_prioritized+0x1e4>
  421260:	ldur	x0, [x29, #-16]
  421264:	sub	x1, x29, #0x48
  421268:	bl	40b1e0 <device_get_devlink_priority@plt>
  42126c:	stur	w0, [x29, #-68]
  421270:	ldur	w8, [x29, #-68]
  421274:	cmp	w8, #0x0
  421278:	cset	w8, ge  // ge = tcont
  42127c:	tbnz	w8, #0, 421294 <link_find_prioritized+0x188>
  421280:	ldur	w8, [x29, #-68]
  421284:	stur	w8, [x29, #-4]
  421288:	mov	w8, #0x1                   	// #1
  42128c:	stur	w8, [x29, #-84]
  421290:	b	421730 <link_find_prioritized+0x624>
  421294:	ldur	x0, [x29, #-16]
  421298:	sub	x1, x29, #0x50
  42129c:	bl	40a930 <sd_device_get_devname@plt>
  4212a0:	stur	w0, [x29, #-68]
  4212a4:	ldur	w8, [x29, #-68]
  4212a8:	cmp	w8, #0x0
  4212ac:	cset	w8, ge  // ge = tcont
  4212b0:	tbnz	w8, #0, 4212c8 <link_find_prioritized+0x1bc>
  4212b4:	ldur	w8, [x29, #-68]
  4212b8:	stur	w8, [x29, #-4]
  4212bc:	mov	w8, #0x1                   	// #1
  4212c0:	stur	w8, [x29, #-84]
  4212c4:	b	421730 <link_find_prioritized+0x624>
  4212c8:	ldur	x0, [x29, #-80]
  4212cc:	bl	40a910 <strdup@plt>
  4212d0:	stur	x0, [x29, #-56]
  4212d4:	ldur	x8, [x29, #-56]
  4212d8:	cbnz	x8, 4212f0 <link_find_prioritized+0x1e4>
  4212dc:	mov	w8, #0xfffffff4            	// #-12
  4212e0:	stur	w8, [x29, #-4]
  4212e4:	mov	w8, #0x1                   	// #1
  4212e8:	stur	w8, [x29, #-84]
  4212ec:	b	421730 <link_find_prioritized+0x624>
  4212f0:	ldur	x0, [x29, #-32]
  4212f4:	bl	40b1f0 <opendir@plt>
  4212f8:	stur	x0, [x29, #-48]
  4212fc:	ldur	x8, [x29, #-48]
  421300:	cbnz	x8, 421360 <link_find_prioritized+0x254>
  421304:	ldur	x8, [x29, #-56]
  421308:	cbz	x8, 421340 <link_find_prioritized+0x234>
  42130c:	ldur	x8, [x29, #-56]
  421310:	stur	x8, [x29, #-96]
  421314:	mov	x8, xzr
  421318:	stur	x8, [x29, #-56]
  42131c:	ldur	x8, [x29, #-96]
  421320:	stur	x8, [x29, #-104]
  421324:	ldur	x8, [x29, #-104]
  421328:	ldur	x9, [x29, #-40]
  42132c:	str	x8, [x9]
  421330:	stur	wzr, [x29, #-4]
  421334:	mov	w10, #0x1                   	// #1
  421338:	stur	w10, [x29, #-84]
  42133c:	b	421730 <link_find_prioritized+0x624>
  421340:	bl	40a480 <__errno_location@plt>
  421344:	ldr	w8, [x0]
  421348:	mov	w9, wzr
  42134c:	subs	w8, w9, w8
  421350:	stur	w8, [x29, #-4]
  421354:	mov	w8, #0x1                   	// #1
  421358:	stur	w8, [x29, #-84]
  42135c:	b	421730 <link_find_prioritized+0x624>
  421360:	bl	40a480 <__errno_location@plt>
  421364:	str	wzr, [x0]
  421368:	ldur	x0, [x29, #-48]
  42136c:	bl	40b200 <readdir64@plt>
  421370:	stur	x0, [x29, #-64]
  421374:	ldur	x8, [x29, #-64]
  421378:	cbnz	x8, 421398 <link_find_prioritized+0x28c>
  42137c:	bl	40a480 <__errno_location@plt>
  421380:	ldr	w8, [x0]
  421384:	cmp	w8, #0x0
  421388:	cset	w8, le
  42138c:	tbnz	w8, #0, 421394 <link_find_prioritized+0x288>
  421390:	b	4216e4 <link_find_prioritized+0x5d8>
  421394:	b	4216e4 <link_find_prioritized+0x5d8>
  421398:	mov	x8, xzr
  42139c:	stur	x8, [x29, #-112]
  4213a0:	stur	wzr, [x29, #-132]
  4213a4:	ldur	x8, [x29, #-64]
  4213a8:	ldrb	w9, [x8, #19]
  4213ac:	cbnz	w9, 4213bc <link_find_prioritized+0x2b0>
  4213b0:	mov	w8, #0x8                   	// #8
  4213b4:	stur	w8, [x29, #-84]
  4213b8:	b	421694 <link_find_prioritized+0x588>
  4213bc:	ldur	x8, [x29, #-64]
  4213c0:	ldrb	w9, [x8, #19]
  4213c4:	cmp	w9, #0x2e
  4213c8:	b.ne	4213d8 <link_find_prioritized+0x2cc>  // b.any
  4213cc:	mov	w8, #0xa                   	// #10
  4213d0:	stur	w8, [x29, #-84]
  4213d4:	b	421694 <link_find_prioritized+0x588>
  4213d8:	mov	x8, xzr
  4213dc:	str	x8, [sp, #128]
  4213e0:	ldur	x8, [x29, #-16]
  4213e4:	str	x8, [sp, #120]
  4213e8:	mov	w9, #0x7                   	// #7
  4213ec:	str	w9, [sp, #116]
  4213f0:	str	wzr, [sp, #112]
  4213f4:	ldr	x8, [sp, #120]
  4213f8:	cbz	x8, 421438 <link_find_prioritized+0x32c>
  4213fc:	mov	w0, #0x1                   	// #1
  421400:	bl	40a3f0 <log_get_max_level_realm@plt>
  421404:	ldr	w8, [sp, #116]
  421408:	cmp	w0, w8
  42140c:	cset	w8, ge  // ge = tcont
  421410:	mov	w9, #0x1                   	// #1
  421414:	eor	w8, w8, #0x1
  421418:	eor	w8, w8, w9
  42141c:	and	w8, w8, #0x1
  421420:	mov	w1, w8
  421424:	sxtw	x10, w1
  421428:	cbz	x10, 421438 <link_find_prioritized+0x32c>
  42142c:	ldr	x0, [sp, #120]
  421430:	add	x1, sp, #0x80
  421434:	bl	40a860 <sd_device_get_sysname@plt>
  421438:	ldr	w0, [sp, #116]
  42143c:	ldr	w1, [sp, #112]
  421440:	ldr	x8, [sp, #128]
  421444:	mov	x9, xzr
  421448:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  42144c:	add	x10, x10, #0xa46
  421450:	cmp	x8, #0x0
  421454:	csel	x5, x10, x9, ne  // ne = any
  421458:	ldr	x6, [sp, #128]
  42145c:	ldur	x8, [x29, #-64]
  421460:	add	x8, x8, #0x13
  421464:	ldur	x10, [x29, #-32]
  421468:	ldr	x2, [sp, #48]
  42146c:	mov	w3, #0x9a                  	// #154
  421470:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  421474:	add	x4, x4, #0xf6d
  421478:	mov	x7, x9
  42147c:	mov	x11, sp
  421480:	str	x9, [x11]
  421484:	mov	x9, sp
  421488:	adrp	x11, 466000 <on_inotify.__assert_in_set+0x2540>
  42148c:	add	x11, x11, #0xf83
  421490:	str	x11, [x9, #8]
  421494:	mov	x9, sp
  421498:	str	x8, [x9, #16]
  42149c:	mov	x8, sp
  4214a0:	str	x10, [x8, #24]
  4214a4:	bl	40a870 <log_object_internal@plt>
  4214a8:	str	w0, [sp, #108]
  4214ac:	ldur	x0, [x29, #-16]
  4214b0:	sub	x1, x29, #0x80
  4214b4:	bl	40b0a0 <device_get_id_filename@plt>
  4214b8:	cmp	w0, #0x0
  4214bc:	cset	w12, ge  // ge = tcont
  4214c0:	tbnz	w12, #0, 4214d0 <link_find_prioritized+0x3c4>
  4214c4:	mov	w8, #0xa                   	// #10
  4214c8:	stur	w8, [x29, #-84]
  4214cc:	b	421694 <link_find_prioritized+0x588>
  4214d0:	ldur	x8, [x29, #-64]
  4214d4:	add	x0, x8, #0x13
  4214d8:	ldur	x1, [x29, #-128]
  4214dc:	bl	40aa20 <strcmp@plt>
  4214e0:	cbnz	w0, 4214f0 <link_find_prioritized+0x3e4>
  4214e4:	mov	w8, #0xa                   	// #10
  4214e8:	stur	w8, [x29, #-84]
  4214ec:	b	421694 <link_find_prioritized+0x588>
  4214f0:	ldur	x8, [x29, #-64]
  4214f4:	add	x1, x8, #0x13
  4214f8:	sub	x0, x29, #0x70
  4214fc:	bl	40b210 <sd_device_new_from_device_id@plt>
  421500:	cmp	w0, #0x0
  421504:	cset	w9, ge  // ge = tcont
  421508:	tbnz	w9, #0, 421518 <link_find_prioritized+0x40c>
  42150c:	mov	w8, #0xa                   	// #10
  421510:	stur	w8, [x29, #-84]
  421514:	b	421694 <link_find_prioritized+0x588>
  421518:	ldur	x0, [x29, #-112]
  42151c:	sub	x1, x29, #0x78
  421520:	bl	40a930 <sd_device_get_devname@plt>
  421524:	cmp	w0, #0x0
  421528:	cset	w8, ge  // ge = tcont
  42152c:	tbnz	w8, #0, 42153c <link_find_prioritized+0x430>
  421530:	mov	w8, #0xa                   	// #10
  421534:	stur	w8, [x29, #-84]
  421538:	b	421694 <link_find_prioritized+0x588>
  42153c:	ldur	x0, [x29, #-112]
  421540:	sub	x1, x29, #0x84
  421544:	bl	40b1e0 <device_get_devlink_priority@plt>
  421548:	cmp	w0, #0x0
  42154c:	cset	w8, ge  // ge = tcont
  421550:	tbnz	w8, #0, 421560 <link_find_prioritized+0x454>
  421554:	mov	w8, #0xa                   	// #10
  421558:	stur	w8, [x29, #-84]
  42155c:	b	421694 <link_find_prioritized+0x588>
  421560:	ldur	x8, [x29, #-56]
  421564:	cbz	x8, 421584 <link_find_prioritized+0x478>
  421568:	ldur	w8, [x29, #-132]
  42156c:	ldur	w9, [x29, #-72]
  421570:	cmp	w8, w9
  421574:	b.gt	421584 <link_find_prioritized+0x478>
  421578:	mov	w8, #0xa                   	// #10
  42157c:	stur	w8, [x29, #-84]
  421580:	b	421694 <link_find_prioritized+0x588>
  421584:	mov	x8, xzr
  421588:	str	x8, [sp, #96]
  42158c:	ldur	x8, [x29, #-112]
  421590:	str	x8, [sp, #88]
  421594:	mov	w9, #0x7                   	// #7
  421598:	str	w9, [sp, #84]
  42159c:	str	wzr, [sp, #80]
  4215a0:	ldr	x8, [sp, #88]
  4215a4:	cbz	x8, 4215e4 <link_find_prioritized+0x4d8>
  4215a8:	mov	w0, #0x1                   	// #1
  4215ac:	bl	40a3f0 <log_get_max_level_realm@plt>
  4215b0:	ldr	w8, [sp, #84]
  4215b4:	cmp	w0, w8
  4215b8:	cset	w8, ge  // ge = tcont
  4215bc:	mov	w9, #0x1                   	// #1
  4215c0:	eor	w8, w8, #0x1
  4215c4:	eor	w8, w8, w9
  4215c8:	and	w8, w8, #0x1
  4215cc:	mov	w1, w8
  4215d0:	sxtw	x10, w1
  4215d4:	cbz	x10, 4215e4 <link_find_prioritized+0x4d8>
  4215d8:	ldr	x0, [sp, #88]
  4215dc:	add	x1, sp, #0x60
  4215e0:	bl	40a860 <sd_device_get_sysname@plt>
  4215e4:	ldr	w0, [sp, #84]
  4215e8:	ldr	w1, [sp, #80]
  4215ec:	ldr	x8, [sp, #96]
  4215f0:	mov	x9, xzr
  4215f4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4215f8:	add	x10, x10, #0xa46
  4215fc:	cmp	x8, #0x0
  421600:	csel	x5, x10, x9, ne  // ne = any
  421604:	ldr	x6, [sp, #96]
  421608:	ldur	w11, [x29, #-132]
  42160c:	ldur	x8, [x29, #-32]
  421610:	ldr	x2, [sp, #48]
  421614:	mov	w3, #0xaf                  	// #175
  421618:	adrp	x4, 466000 <on_inotify.__assert_in_set+0x2540>
  42161c:	add	x4, x4, #0xf6d
  421620:	mov	x7, x9
  421624:	mov	x10, sp
  421628:	str	x9, [x10]
  42162c:	mov	x9, sp
  421630:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  421634:	add	x10, x10, #0xf9c
  421638:	str	x10, [x9, #8]
  42163c:	mov	x9, sp
  421640:	str	w11, [x9, #16]
  421644:	mov	x9, sp
  421648:	str	x8, [x9, #24]
  42164c:	bl	40a870 <log_object_internal@plt>
  421650:	str	w0, [sp, #76]
  421654:	ldur	x1, [x29, #-120]
  421658:	sub	x0, x29, #0x38
  42165c:	bl	40b220 <free_and_strdup@plt>
  421660:	stur	w0, [x29, #-68]
  421664:	ldur	w11, [x29, #-68]
  421668:	cmp	w11, #0x0
  42166c:	cset	w11, ge  // ge = tcont
  421670:	tbnz	w11, #0, 421688 <link_find_prioritized+0x57c>
  421674:	ldur	w8, [x29, #-68]
  421678:	stur	w8, [x29, #-4]
  42167c:	mov	w8, #0x1                   	// #1
  421680:	stur	w8, [x29, #-84]
  421684:	b	421694 <link_find_prioritized+0x588>
  421688:	ldur	w8, [x29, #-132]
  42168c:	stur	w8, [x29, #-72]
  421690:	stur	wzr, [x29, #-84]
  421694:	sub	x0, x29, #0x70
  421698:	bl	4217b0 <sd_device_unrefp>
  42169c:	ldur	w8, [x29, #-84]
  4216a0:	str	w8, [sp, #32]
  4216a4:	cbz	w8, 4216cc <link_find_prioritized+0x5c0>
  4216a8:	b	4216ac <link_find_prioritized+0x5a0>
  4216ac:	ldr	w8, [sp, #32]
  4216b0:	cmp	w8, #0x8
  4216b4:	b.eq	4216e4 <link_find_prioritized+0x5d8>  // b.none
  4216b8:	b	4216bc <link_find_prioritized+0x5b0>
  4216bc:	ldr	w8, [sp, #32]
  4216c0:	cmp	w8, #0xa
  4216c4:	b.eq	4216cc <link_find_prioritized+0x5c0>  // b.none
  4216c8:	b	421730 <link_find_prioritized+0x624>
  4216cc:	bl	40a480 <__errno_location@plt>
  4216d0:	str	wzr, [x0]
  4216d4:	ldur	x0, [x29, #-48]
  4216d8:	bl	40b200 <readdir64@plt>
  4216dc:	stur	x0, [x29, #-64]
  4216e0:	b	421374 <link_find_prioritized+0x268>
  4216e4:	ldur	x8, [x29, #-56]
  4216e8:	cbnz	x8, 421700 <link_find_prioritized+0x5f4>
  4216ec:	mov	w8, #0xfffffffe            	// #-2
  4216f0:	stur	w8, [x29, #-4]
  4216f4:	mov	w8, #0x1                   	// #1
  4216f8:	stur	w8, [x29, #-84]
  4216fc:	b	421730 <link_find_prioritized+0x624>
  421700:	ldur	x8, [x29, #-56]
  421704:	str	x8, [sp, #64]
  421708:	mov	x8, xzr
  42170c:	stur	x8, [x29, #-56]
  421710:	ldr	x8, [sp, #64]
  421714:	str	x8, [sp, #56]
  421718:	ldr	x8, [sp, #56]
  42171c:	ldur	x9, [x29, #-40]
  421720:	str	x8, [x9]
  421724:	stur	wzr, [x29, #-4]
  421728:	mov	w10, #0x1                   	// #1
  42172c:	stur	w10, [x29, #-84]
  421730:	sub	x0, x29, #0x38
  421734:	bl	41ec54 <freep>
  421738:	sub	x0, x29, #0x30
  42173c:	bl	42177c <closedirp>
  421740:	ldur	w0, [x29, #-4]
  421744:	ldr	x28, [sp, #288]
  421748:	ldp	x29, x30, [sp, #272]
  42174c:	add	sp, sp, #0x130
  421750:	ret

0000000000421754 <closep>:
  421754:	sub	sp, sp, #0x20
  421758:	stp	x29, x30, [sp, #16]
  42175c:	add	x29, sp, #0x10
  421760:	str	x0, [sp, #8]
  421764:	ldr	x8, [sp, #8]
  421768:	ldr	w0, [x8]
  42176c:	bl	40a760 <safe_close@plt>
  421770:	ldp	x29, x30, [sp, #16]
  421774:	add	sp, sp, #0x20
  421778:	ret

000000000042177c <closedirp>:
  42177c:	sub	sp, sp, #0x20
  421780:	stp	x29, x30, [sp, #16]
  421784:	add	x29, sp, #0x10
  421788:	str	x0, [sp, #8]
  42178c:	ldr	x8, [sp, #8]
  421790:	ldr	x8, [x8]
  421794:	cbz	x8, 4217a4 <closedirp+0x28>
  421798:	ldr	x8, [sp, #8]
  42179c:	ldr	x0, [x8]
  4217a0:	bl	40b230 <closedir@plt>
  4217a4:	ldp	x29, x30, [sp, #16]
  4217a8:	add	sp, sp, #0x20
  4217ac:	ret

00000000004217b0 <sd_device_unrefp>:
  4217b0:	sub	sp, sp, #0x20
  4217b4:	stp	x29, x30, [sp, #16]
  4217b8:	add	x29, sp, #0x10
  4217bc:	str	x0, [sp, #8]
  4217c0:	ldr	x8, [sp, #8]
  4217c4:	ldr	x8, [x8]
  4217c8:	cbz	x8, 4217d8 <sd_device_unrefp+0x28>
  4217cc:	ldr	x8, [sp, #8]
  4217d0:	ldr	x0, [x8]
  4217d4:	bl	40a7c0 <sd_device_unref@plt>
  4217d8:	ldp	x29, x30, [sp, #16]
  4217dc:	add	sp, sp, #0x20
  4217e0:	ret

00000000004217e4 <gid_is_valid>:
  4217e4:	sub	sp, sp, #0x20
  4217e8:	stp	x29, x30, [sp, #16]
  4217ec:	add	x29, sp, #0x10
  4217f0:	stur	w0, [x29, #-4]
  4217f4:	ldur	w0, [x29, #-4]
  4217f8:	bl	40b020 <uid_is_valid@plt>
  4217fc:	and	w0, w0, #0x1
  421800:	ldp	x29, x30, [sp, #16]
  421804:	add	sp, sp, #0x20
  421808:	ret

000000000042180c <ordered_hashmap_iterate>:
  42180c:	sub	sp, sp, #0x30
  421810:	stp	x29, x30, [sp, #32]
  421814:	add	x29, sp, #0x20
  421818:	stur	x0, [x29, #-8]
  42181c:	str	x1, [sp, #16]
  421820:	str	x2, [sp, #8]
  421824:	str	x3, [sp]
  421828:	ldur	x0, [x29, #-8]
  42182c:	ldr	x1, [sp, #16]
  421830:	ldr	x2, [sp, #8]
  421834:	ldr	x3, [sp]
  421838:	bl	40a9c0 <internal_hashmap_iterate@plt>
  42183c:	and	w0, w0, #0x1
  421840:	ldp	x29, x30, [sp, #32]
  421844:	add	sp, sp, #0x30
  421848:	ret

000000000042184c <size_multiply_overflow>:
  42184c:	sub	sp, sp, #0x20
  421850:	str	x0, [sp, #24]
  421854:	str	x1, [sp, #16]
  421858:	ldr	x8, [sp, #16]
  42185c:	mov	w9, #0x0                   	// #0
  421860:	str	w9, [sp, #12]
  421864:	cbz	x8, 421884 <size_multiply_overflow+0x38>
  421868:	ldr	x8, [sp, #24]
  42186c:	ldr	x9, [sp, #16]
  421870:	mov	x10, #0xffffffffffffffff    	// #-1
  421874:	udiv	x9, x10, x9
  421878:	cmp	x8, x9
  42187c:	cset	w11, hi  // hi = pmore
  421880:	str	w11, [sp, #12]
  421884:	ldr	w8, [sp, #12]
  421888:	mov	w9, #0x1                   	// #1
  42188c:	eor	w8, w8, #0x1
  421890:	eor	w8, w8, w9
  421894:	and	w8, w8, #0x1
  421898:	mov	w0, w8
  42189c:	sxtw	x10, w0
  4218a0:	cmp	x10, #0x0
  4218a4:	cset	w8, ne  // ne = any
  4218a8:	and	w0, w8, #0x1
  4218ac:	add	sp, sp, #0x20
  4218b0:	ret

00000000004218b4 <udev_rules_free>:
  4218b4:	sub	sp, sp, #0x40
  4218b8:	stp	x29, x30, [sp, #48]
  4218bc:	add	x29, sp, #0x30
  4218c0:	stur	x0, [x29, #-16]
  4218c4:	ldur	x8, [x29, #-16]
  4218c8:	cbnz	x8, 4218d8 <udev_rules_free+0x24>
  4218cc:	mov	x8, xzr
  4218d0:	stur	x8, [x29, #-8]
  4218d4:	b	421954 <udev_rules_free+0xa0>
  4218d8:	ldur	x8, [x29, #-16]
  4218dc:	ldr	x8, [x8, #40]
  4218e0:	str	x8, [sp, #24]
  4218e4:	ldr	x8, [sp, #24]
  4218e8:	mov	w9, #0x0                   	// #0
  4218ec:	str	w9, [sp, #12]
  4218f0:	cbz	x8, 421908 <udev_rules_free+0x54>
  4218f4:	ldr	x8, [sp, #24]
  4218f8:	ldr	x8, [x8, #24]
  4218fc:	str	x8, [sp, #16]
  421900:	mov	w9, #0x1                   	// #1
  421904:	str	w9, [sp, #12]
  421908:	ldr	w8, [sp, #12]
  42190c:	tbnz	w8, #0, 421914 <udev_rules_free+0x60>
  421910:	b	421928 <udev_rules_free+0x74>
  421914:	ldr	x0, [sp, #24]
  421918:	bl	421964 <udev_rule_file_free>
  42191c:	ldr	x8, [sp, #16]
  421920:	str	x8, [sp, #24]
  421924:	b	4218e4 <udev_rules_free+0x30>
  421928:	ldur	x8, [x29, #-16]
  42192c:	ldr	x0, [x8, #16]
  421930:	bl	4219f0 <hashmap_free_free_key>
  421934:	ldur	x8, [x29, #-16]
  421938:	ldr	x8, [x8, #24]
  42193c:	mov	x0, x8
  421940:	bl	4219f0 <hashmap_free_free_key>
  421944:	ldur	x8, [x29, #-16]
  421948:	mov	x0, x8
  42194c:	bl	421a24 <mfree>
  421950:	stur	x0, [x29, #-8]
  421954:	ldur	x0, [x29, #-8]
  421958:	ldp	x29, x30, [sp, #48]
  42195c:	add	sp, sp, #0x40
  421960:	ret

0000000000421964 <udev_rule_file_free>:
  421964:	sub	sp, sp, #0x30
  421968:	stp	x29, x30, [sp, #32]
  42196c:	add	x29, sp, #0x20
  421970:	stur	x0, [x29, #-8]
  421974:	ldur	x8, [x29, #-8]
  421978:	cbnz	x8, 421980 <udev_rule_file_free+0x1c>
  42197c:	b	4219e4 <udev_rule_file_free+0x80>
  421980:	ldur	x8, [x29, #-8]
  421984:	ldr	x8, [x8, #16]
  421988:	str	x8, [sp, #16]
  42198c:	ldr	x8, [sp, #16]
  421990:	mov	w9, #0x0                   	// #0
  421994:	str	w9, [sp, #4]
  421998:	cbz	x8, 4219b0 <udev_rule_file_free+0x4c>
  42199c:	ldr	x8, [sp, #16]
  4219a0:	ldr	x8, [x8, #64]
  4219a4:	str	x8, [sp, #8]
  4219a8:	mov	w9, #0x1                   	// #1
  4219ac:	str	w9, [sp, #4]
  4219b0:	ldr	w8, [sp, #4]
  4219b4:	tbnz	w8, #0, 4219bc <udev_rule_file_free+0x58>
  4219b8:	b	4219d0 <udev_rule_file_free+0x6c>
  4219bc:	ldr	x0, [sp, #16]
  4219c0:	bl	422dbc <udev_rule_line_free>
  4219c4:	ldr	x8, [sp, #8]
  4219c8:	str	x8, [sp, #16]
  4219cc:	b	42198c <udev_rule_file_free+0x28>
  4219d0:	ldur	x8, [x29, #-8]
  4219d4:	ldr	x0, [x8]
  4219d8:	bl	40a530 <free@plt>
  4219dc:	ldur	x0, [x29, #-8]
  4219e0:	bl	40a530 <free@plt>
  4219e4:	ldp	x29, x30, [sp, #32]
  4219e8:	add	sp, sp, #0x30
  4219ec:	ret

00000000004219f0 <hashmap_free_free_key>:
  4219f0:	sub	sp, sp, #0x20
  4219f4:	stp	x29, x30, [sp, #16]
  4219f8:	add	x29, sp, #0x10
  4219fc:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  421a00:	ldr	x1, [x1, #176]
  421a04:	mov	x8, xzr
  421a08:	str	x0, [sp, #8]
  421a0c:	ldr	x0, [sp, #8]
  421a10:	mov	x2, x8
  421a14:	bl	40a7b0 <internal_hashmap_free@plt>
  421a18:	ldp	x29, x30, [sp, #16]
  421a1c:	add	sp, sp, #0x20
  421a20:	ret

0000000000421a24 <mfree>:
  421a24:	sub	sp, sp, #0x20
  421a28:	stp	x29, x30, [sp, #16]
  421a2c:	add	x29, sp, #0x10
  421a30:	mov	x8, xzr
  421a34:	str	x0, [sp, #8]
  421a38:	ldr	x0, [sp, #8]
  421a3c:	str	x8, [sp]
  421a40:	bl	40a530 <free@plt>
  421a44:	ldr	x0, [sp]
  421a48:	ldp	x29, x30, [sp, #16]
  421a4c:	add	sp, sp, #0x20
  421a50:	ret

0000000000421a54 <udev_rules_new>:
  421a54:	sub	sp, sp, #0x100
  421a58:	stp	x29, x30, [sp, #240]
  421a5c:	add	x29, sp, #0xf0
  421a60:	mov	x8, xzr
  421a64:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  421a68:	add	x9, x9, #0x48a
  421a6c:	add	x9, x9, #0x3
  421a70:	stur	x0, [x29, #-16]
  421a74:	stur	w1, [x29, #-20]
  421a78:	stur	x8, [x29, #-32]
  421a7c:	stur	x8, [x29, #-40]
  421a80:	str	x9, [sp, #48]
  421a84:	ldur	w8, [x29, #-20]
  421a88:	cmp	w8, #0x0
  421a8c:	cset	w8, lt  // lt = tstop
  421a90:	mov	w9, #0x0                   	// #0
  421a94:	str	w9, [sp, #44]
  421a98:	tbnz	w8, #0, 421aac <udev_rules_new+0x58>
  421a9c:	ldur	w8, [x29, #-20]
  421aa0:	cmp	w8, #0x3
  421aa4:	cset	w8, lt  // lt = tstop
  421aa8:	str	w8, [sp, #44]
  421aac:	ldr	w8, [sp, #44]
  421ab0:	mov	w9, #0x1                   	// #1
  421ab4:	eor	w8, w8, #0x1
  421ab8:	eor	w8, w8, w9
  421abc:	eor	w8, w8, w9
  421ac0:	and	w8, w8, #0x1
  421ac4:	mov	w0, w8
  421ac8:	sxtw	x10, w0
  421acc:	cbz	x10, 421af0 <udev_rules_new+0x9c>
  421ad0:	mov	w0, #0x1                   	// #1
  421ad4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  421ad8:	add	x1, x1, #0x43f
  421adc:	ldr	x2, [sp, #48]
  421ae0:	mov	w3, #0x505                 	// #1285
  421ae4:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  421ae8:	add	x4, x4, #0x4a3
  421aec:	bl	40a540 <log_assert_failed_realm@plt>
  421af0:	mov	x0, #0x30                  	// #48
  421af4:	mov	x1, #0x1                   	// #1
  421af8:	bl	421d60 <malloc_multiply>
  421afc:	stur	x0, [x29, #-32]
  421b00:	ldur	x8, [x29, #-32]
  421b04:	cbnz	x8, 421b1c <udev_rules_new+0xc8>
  421b08:	mov	w8, #0xfffffff4            	// #-12
  421b0c:	stur	w8, [x29, #-4]
  421b10:	mov	w8, #0x1                   	// #1
  421b14:	stur	w8, [x29, #-56]
  421b18:	b	421cd8 <udev_rules_new+0x284>
  421b1c:	ldur	x0, [x29, #-32]
  421b20:	sub	x8, x29, #0x68
  421b24:	str	x0, [sp, #32]
  421b28:	mov	x0, x8
  421b2c:	mov	w9, wzr
  421b30:	mov	w1, w9
  421b34:	mov	x10, #0x30                  	// #48
  421b38:	mov	x2, x10
  421b3c:	str	x8, [sp, #24]
  421b40:	str	x10, [sp, #16]
  421b44:	bl	40a5f0 <memset@plt>
  421b48:	ldur	w9, [x29, #-20]
  421b4c:	stur	w9, [x29, #-96]
  421b50:	ldr	x0, [sp, #32]
  421b54:	ldr	x1, [sp, #24]
  421b58:	ldr	x2, [sp, #16]
  421b5c:	bl	40a600 <memcpy@plt>
  421b60:	ldur	x0, [x29, #-32]
  421b64:	bl	421ddc <udev_rules_check_timestamp>
  421b68:	add	x8, sp, #0x58
  421b6c:	mov	x0, x8
  421b70:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  421b74:	add	x1, x1, #0x30
  421b78:	ldr	x2, [sp, #16]
  421b7c:	str	x8, [sp, #8]
  421b80:	bl	40a600 <memcpy@plt>
  421b84:	sub	x0, x29, #0x28
  421b88:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  421b8c:	add	x1, x1, #0x4d7
  421b90:	mov	x8, xzr
  421b94:	mov	x2, x8
  421b98:	mov	w9, wzr
  421b9c:	mov	w3, w9
  421ba0:	ldr	x4, [sp, #8]
  421ba4:	bl	40b240 <conf_files_list_strv@plt>
  421ba8:	stur	w0, [x29, #-52]
  421bac:	ldur	w9, [x29, #-52]
  421bb0:	cmp	w9, #0x0
  421bb4:	cset	w9, ge  // ge = tcont
  421bb8:	tbnz	w9, #0, 421c50 <udev_rules_new+0x1fc>
  421bbc:	mov	w8, #0x3                   	// #3
  421bc0:	str	w8, [sp, #84]
  421bc4:	ldur	w8, [x29, #-52]
  421bc8:	str	w8, [sp, #80]
  421bcc:	mov	w8, #0x1                   	// #1
  421bd0:	str	w8, [sp, #76]
  421bd4:	ldr	w0, [sp, #76]
  421bd8:	bl	40a3f0 <log_get_max_level_realm@plt>
  421bdc:	ldr	w8, [sp, #84]
  421be0:	and	w8, w8, #0x7
  421be4:	cmp	w0, w8
  421be8:	b.lt	421c20 <udev_rules_new+0x1cc>  // b.tstop
  421bec:	ldr	w8, [sp, #76]
  421bf0:	ldr	w9, [sp, #84]
  421bf4:	orr	w0, w9, w8, lsl #10
  421bf8:	ldr	w1, [sp, #80]
  421bfc:	ldr	x2, [sp, #48]
  421c00:	mov	w3, #0x513                 	// #1299
  421c04:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  421c08:	add	x4, x4, #0x546
  421c0c:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  421c10:	add	x5, x5, #0x555
  421c14:	bl	40a400 <log_internal_realm@plt>
  421c18:	str	w0, [sp, #4]
  421c1c:	b	421c34 <udev_rules_new+0x1e0>
  421c20:	ldr	w0, [sp, #80]
  421c24:	bl	40a410 <abs@plt>
  421c28:	mov	w8, wzr
  421c2c:	subs	w8, w8, w0, uxtb
  421c30:	str	w8, [sp, #4]
  421c34:	ldr	w8, [sp, #4]
  421c38:	str	w8, [sp, #72]
  421c3c:	ldr	w8, [sp, #72]
  421c40:	stur	w8, [x29, #-4]
  421c44:	mov	w8, #0x1                   	// #1
  421c48:	stur	w8, [x29, #-56]
  421c4c:	b	421cd8 <udev_rules_new+0x284>
  421c50:	ldur	x8, [x29, #-40]
  421c54:	stur	x8, [x29, #-48]
  421c58:	ldur	x8, [x29, #-48]
  421c5c:	mov	w9, #0x0                   	// #0
  421c60:	str	w9, [sp]
  421c64:	cbz	x8, 421c7c <udev_rules_new+0x228>
  421c68:	ldur	x8, [x29, #-48]
  421c6c:	ldr	x8, [x8]
  421c70:	cmp	x8, #0x0
  421c74:	cset	w9, ne  // ne = any
  421c78:	str	w9, [sp]
  421c7c:	ldr	w8, [sp]
  421c80:	tbnz	w8, #0, 421c88 <udev_rules_new+0x234>
  421c84:	b	421ca8 <udev_rules_new+0x254>
  421c88:	ldur	x0, [x29, #-32]
  421c8c:	ldur	x8, [x29, #-48]
  421c90:	ldr	x1, [x8]
  421c94:	bl	421e58 <parse_file>
  421c98:	ldur	x8, [x29, #-48]
  421c9c:	add	x8, x8, #0x8
  421ca0:	stur	x8, [x29, #-48]
  421ca4:	b	421c58 <udev_rules_new+0x204>
  421ca8:	ldur	x8, [x29, #-32]
  421cac:	str	x8, [sp, #64]
  421cb0:	mov	x8, xzr
  421cb4:	stur	x8, [x29, #-32]
  421cb8:	ldr	x8, [sp, #64]
  421cbc:	str	x8, [sp, #56]
  421cc0:	ldr	x8, [sp, #56]
  421cc4:	ldur	x9, [x29, #-16]
  421cc8:	str	x8, [x9]
  421ccc:	stur	wzr, [x29, #-4]
  421cd0:	mov	w10, #0x1                   	// #1
  421cd4:	stur	w10, [x29, #-56]
  421cd8:	sub	x0, x29, #0x28
  421cdc:	bl	421d2c <strv_freep>
  421ce0:	sub	x0, x29, #0x20
  421ce4:	bl	421cf8 <udev_rules_freep>
  421ce8:	ldur	w0, [x29, #-4]
  421cec:	ldp	x29, x30, [sp, #240]
  421cf0:	add	sp, sp, #0x100
  421cf4:	ret

0000000000421cf8 <udev_rules_freep>:
  421cf8:	sub	sp, sp, #0x20
  421cfc:	stp	x29, x30, [sp, #16]
  421d00:	add	x29, sp, #0x10
  421d04:	str	x0, [sp, #8]
  421d08:	ldr	x8, [sp, #8]
  421d0c:	ldr	x8, [x8]
  421d10:	cbz	x8, 421d20 <udev_rules_freep+0x28>
  421d14:	ldr	x8, [sp, #8]
  421d18:	ldr	x0, [x8]
  421d1c:	bl	4218b4 <udev_rules_free>
  421d20:	ldp	x29, x30, [sp, #16]
  421d24:	add	sp, sp, #0x20
  421d28:	ret

0000000000421d2c <strv_freep>:
  421d2c:	sub	sp, sp, #0x20
  421d30:	stp	x29, x30, [sp, #16]
  421d34:	add	x29, sp, #0x10
  421d38:	str	x0, [sp, #8]
  421d3c:	ldr	x8, [sp, #8]
  421d40:	ldr	x8, [x8]
  421d44:	cbz	x8, 421d54 <strv_freep+0x28>
  421d48:	ldr	x8, [sp, #8]
  421d4c:	ldr	x0, [x8]
  421d50:	bl	40afa0 <strv_free@plt>
  421d54:	ldp	x29, x30, [sp, #16]
  421d58:	add	sp, sp, #0x20
  421d5c:	ret

0000000000421d60 <malloc_multiply>:
  421d60:	sub	sp, sp, #0x40
  421d64:	stp	x29, x30, [sp, #48]
  421d68:	add	x29, sp, #0x30
  421d6c:	stur	x0, [x29, #-16]
  421d70:	str	x1, [sp, #24]
  421d74:	ldur	x0, [x29, #-16]
  421d78:	ldr	x1, [sp, #24]
  421d7c:	bl	423060 <size_multiply_overflow>
  421d80:	tbnz	w0, #0, 421d88 <malloc_multiply+0x28>
  421d84:	b	421d94 <malloc_multiply+0x34>
  421d88:	mov	x8, xzr
  421d8c:	stur	x8, [x29, #-8]
  421d90:	b	421dcc <malloc_multiply+0x6c>
  421d94:	ldur	x8, [x29, #-16]
  421d98:	ldr	x9, [sp, #24]
  421d9c:	mul	x8, x8, x9
  421da0:	str	x8, [sp, #16]
  421da4:	cbz	x8, 421db4 <malloc_multiply+0x54>
  421da8:	ldr	x8, [sp, #16]
  421dac:	str	x8, [sp, #8]
  421db0:	b	421dbc <malloc_multiply+0x5c>
  421db4:	mov	x8, #0x1                   	// #1
  421db8:	str	x8, [sp, #8]
  421dbc:	ldr	x8, [sp, #8]
  421dc0:	mov	x0, x8
  421dc4:	bl	40a820 <malloc@plt>
  421dc8:	stur	x0, [x29, #-8]
  421dcc:	ldur	x0, [x29, #-8]
  421dd0:	ldp	x29, x30, [sp, #48]
  421dd4:	add	sp, sp, #0x40
  421dd8:	ret

0000000000421ddc <udev_rules_check_timestamp>:
  421ddc:	sub	sp, sp, #0x60
  421de0:	stp	x29, x30, [sp, #80]
  421de4:	add	x29, sp, #0x50
  421de8:	stur	x0, [x29, #-16]
  421dec:	ldur	x8, [x29, #-16]
  421df0:	cbnz	x8, 421e04 <udev_rules_check_timestamp+0x28>
  421df4:	mov	w8, wzr
  421df8:	and	w8, w8, #0x1
  421dfc:	sturb	w8, [x29, #-1]
  421e00:	b	421e44 <udev_rules_check_timestamp+0x68>
  421e04:	add	x8, sp, #0x10
  421e08:	mov	x0, x8
  421e0c:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  421e10:	add	x1, x1, #0x60
  421e14:	mov	x2, #0x30                  	// #48
  421e18:	str	x8, [sp, #8]
  421e1c:	bl	40a600 <memcpy@plt>
  421e20:	ldur	x1, [x29, #-16]
  421e24:	ldr	x0, [sp, #8]
  421e28:	mov	w9, #0x1                   	// #1
  421e2c:	and	w2, w9, #0x1
  421e30:	str	w9, [sp, #4]
  421e34:	bl	40b250 <paths_check_timestamp@plt>
  421e38:	ldr	w9, [sp, #4]
  421e3c:	and	w10, w0, w9
  421e40:	sturb	w10, [x29, #-1]
  421e44:	ldurb	w8, [x29, #-1]
  421e48:	and	w0, w8, #0x1
  421e4c:	ldp	x29, x30, [sp, #80]
  421e50:	add	sp, sp, #0x60
  421e54:	ret

0000000000421e58 <parse_file>:
  421e58:	sub	sp, sp, #0x1a0
  421e5c:	stp	x29, x30, [sp, #384]
  421e60:	str	x28, [sp, #400]
  421e64:	add	x29, sp, #0x180
  421e68:	mov	x8, xzr
  421e6c:	mov	w9, #0x0                   	// #0
  421e70:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  421e74:	add	x10, x10, #0x65b
  421e78:	adrp	x11, 467000 <on_inotify.__assert_in_set+0x3540>
  421e7c:	add	x11, x11, #0x48a
  421e80:	add	x11, x11, #0x3
  421e84:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  421e88:	add	x12, x12, #0x65e
  421e8c:	stur	x0, [x29, #-16]
  421e90:	stur	x1, [x29, #-24]
  421e94:	stur	x8, [x29, #-32]
  421e98:	stur	x8, [x29, #-40]
  421e9c:	stur	x8, [x29, #-48]
  421ea0:	sturb	w9, [x29, #-57]
  421ea4:	stur	wzr, [x29, #-64]
  421ea8:	ldur	x0, [x29, #-24]
  421eac:	mov	x1, x10
  421eb0:	str	x11, [sp, #80]
  421eb4:	str	x12, [sp, #72]
  421eb8:	bl	40b260 <fopen64@plt>
  421ebc:	stur	x0, [x29, #-48]
  421ec0:	ldur	x8, [x29, #-48]
  421ec4:	cbnz	x8, 421f08 <parse_file+0xb0>
  421ec8:	bl	40a480 <__errno_location@plt>
  421ecc:	ldr	w8, [x0]
  421ed0:	cmp	w8, #0x2
  421ed4:	b.ne	421ee8 <parse_file+0x90>  // b.any
  421ed8:	stur	wzr, [x29, #-4]
  421edc:	mov	w8, #0x1                   	// #1
  421ee0:	stur	w8, [x29, #-72]
  421ee4:	b	4226ac <parse_file+0x854>
  421ee8:	bl	40a480 <__errno_location@plt>
  421eec:	ldr	w8, [x0]
  421ef0:	mov	w9, wzr
  421ef4:	subs	w8, w9, w8
  421ef8:	stur	w8, [x29, #-4]
  421efc:	mov	w8, #0x1                   	// #1
  421f00:	stur	w8, [x29, #-72]
  421f04:	b	4226ac <parse_file+0x854>
  421f08:	ldur	x0, [x29, #-24]
  421f0c:	ldur	x8, [x29, #-48]
  421f10:	str	x0, [sp, #64]
  421f14:	mov	x0, x8
  421f18:	bl	40b270 <fileno@plt>
  421f1c:	ldr	x8, [sp, #64]
  421f20:	str	w0, [sp, #60]
  421f24:	mov	x0, x8
  421f28:	ldr	w1, [sp, #60]
  421f2c:	bl	40b280 <fd_warn_permissions@plt>
  421f30:	ldur	x8, [x29, #-48]
  421f34:	mov	x0, x8
  421f38:	bl	40b270 <fileno@plt>
  421f3c:	bl	40b290 <null_or_empty_fd@plt>
  421f40:	cbz	w0, 421fd0 <parse_file+0x178>
  421f44:	mov	w8, #0x7                   	// #7
  421f48:	stur	w8, [x29, #-76]
  421f4c:	stur	wzr, [x29, #-80]
  421f50:	mov	w8, #0x1                   	// #1
  421f54:	stur	w8, [x29, #-84]
  421f58:	ldur	w0, [x29, #-84]
  421f5c:	bl	40a3f0 <log_get_max_level_realm@plt>
  421f60:	ldur	w8, [x29, #-76]
  421f64:	and	w8, w8, #0x7
  421f68:	cmp	w0, w8
  421f6c:	b.lt	421fa4 <parse_file+0x14c>  // b.tstop
  421f70:	ldur	w8, [x29, #-84]
  421f74:	ldur	w9, [x29, #-76]
  421f78:	orr	w0, w9, w8, lsl #10
  421f7c:	ldur	w1, [x29, #-80]
  421f80:	ldur	x6, [x29, #-24]
  421f84:	ldr	x2, [sp, #80]
  421f88:	mov	w3, #0x4ab                 	// #1195
  421f8c:	ldr	x4, [sp, #72]
  421f90:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  421f94:	add	x5, x5, #0x669
  421f98:	bl	40a400 <log_internal_realm@plt>
  421f9c:	str	w0, [sp, #56]
  421fa0:	b	421fb8 <parse_file+0x160>
  421fa4:	ldur	w0, [x29, #-80]
  421fa8:	bl	40a410 <abs@plt>
  421fac:	mov	w8, wzr
  421fb0:	subs	w8, w8, w0, uxtb
  421fb4:	str	w8, [sp, #56]
  421fb8:	ldr	w8, [sp, #56]
  421fbc:	stur	w8, [x29, #-88]
  421fc0:	stur	wzr, [x29, #-4]
  421fc4:	mov	w8, #0x1                   	// #1
  421fc8:	stur	w8, [x29, #-72]
  421fcc:	b	4226ac <parse_file+0x854>
  421fd0:	mov	w8, #0x7                   	// #7
  421fd4:	stur	w8, [x29, #-92]
  421fd8:	stur	wzr, [x29, #-96]
  421fdc:	mov	w8, #0x1                   	// #1
  421fe0:	stur	w8, [x29, #-100]
  421fe4:	ldur	w0, [x29, #-100]
  421fe8:	bl	40a3f0 <log_get_max_level_realm@plt>
  421fec:	ldur	w8, [x29, #-92]
  421ff0:	and	w8, w8, #0x7
  421ff4:	cmp	w0, w8
  421ff8:	b.lt	422030 <parse_file+0x1d8>  // b.tstop
  421ffc:	ldur	w8, [x29, #-100]
  422000:	ldur	w9, [x29, #-92]
  422004:	orr	w0, w9, w8, lsl #10
  422008:	ldur	w1, [x29, #-96]
  42200c:	ldur	x6, [x29, #-24]
  422010:	ldr	x2, [sp, #80]
  422014:	mov	w3, #0x4af                 	// #1199
  422018:	ldr	x4, [sp, #72]
  42201c:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  422020:	add	x5, x5, #0x681
  422024:	bl	40a400 <log_internal_realm@plt>
  422028:	str	w0, [sp, #52]
  42202c:	b	422044 <parse_file+0x1ec>
  422030:	ldur	w0, [x29, #-96]
  422034:	bl	40a410 <abs@plt>
  422038:	mov	w8, wzr
  42203c:	subs	w8, w8, w0, uxtb
  422040:	str	w8, [sp, #52]
  422044:	ldr	w8, [sp, #52]
  422048:	stur	w8, [x29, #-104]
  42204c:	ldur	x0, [x29, #-24]
  422050:	bl	40a910 <strdup@plt>
  422054:	stur	x0, [x29, #-40]
  422058:	ldur	x9, [x29, #-40]
  42205c:	cbnz	x9, 42208c <parse_file+0x234>
  422060:	mov	w8, #0x1                   	// #1
  422064:	mov	w0, w8
  422068:	ldr	x1, [sp, #80]
  42206c:	mov	w2, #0x4b3                 	// #1203
  422070:	ldr	x3, [sp, #72]
  422074:	str	w8, [sp, #48]
  422078:	bl	40a5e0 <log_oom_internal@plt>
  42207c:	stur	w0, [x29, #-4]
  422080:	ldr	w8, [sp, #48]
  422084:	stur	w8, [x29, #-72]
  422088:	b	4226ac <parse_file+0x854>
  42208c:	mov	x0, #0x28                  	// #40
  422090:	mov	x1, #0x1                   	// #1
  422094:	bl	421d60 <malloc_multiply>
  422098:	stur	x0, [x29, #-56]
  42209c:	ldur	x8, [x29, #-56]
  4220a0:	cbnz	x8, 4220d0 <parse_file+0x278>
  4220a4:	mov	w8, #0x1                   	// #1
  4220a8:	mov	w0, w8
  4220ac:	ldr	x1, [sp, #80]
  4220b0:	mov	w2, #0x4b7                 	// #1207
  4220b4:	ldr	x3, [sp, #72]
  4220b8:	str	w8, [sp, #44]
  4220bc:	bl	40a5e0 <log_oom_internal@plt>
  4220c0:	stur	w0, [x29, #-4]
  4220c4:	ldr	w8, [sp, #44]
  4220c8:	stur	w8, [x29, #-72]
  4220cc:	b	4226ac <parse_file+0x854>
  4220d0:	ldur	x0, [x29, #-56]
  4220d4:	sub	x8, x29, #0x90
  4220d8:	str	x0, [sp, #32]
  4220dc:	mov	x0, x8
  4220e0:	mov	w9, wzr
  4220e4:	mov	w1, w9
  4220e8:	mov	x10, #0x28                  	// #40
  4220ec:	mov	x2, x10
  4220f0:	str	x8, [sp, #24]
  4220f4:	str	x10, [sp, #16]
  4220f8:	bl	40a5f0 <memset@plt>
  4220fc:	ldur	x8, [x29, #-40]
  422100:	stur	x8, [x29, #-152]
  422104:	mov	x8, xzr
  422108:	stur	x8, [x29, #-40]
  42210c:	ldur	x8, [x29, #-152]
  422110:	stur	x8, [x29, #-160]
  422114:	ldur	x8, [x29, #-160]
  422118:	stur	x8, [x29, #-144]
  42211c:	ldr	x0, [sp, #32]
  422120:	ldr	x1, [sp, #24]
  422124:	ldr	x2, [sp, #16]
  422128:	bl	40a600 <memcpy@plt>
  42212c:	ldur	x8, [x29, #-16]
  422130:	ldr	x8, [x8, #32]
  422134:	cbz	x8, 422274 <parse_file+0x41c>
  422138:	ldur	x8, [x29, #-16]
  42213c:	add	x8, x8, #0x20
  422140:	stur	x8, [x29, #-168]
  422144:	ldur	x8, [x29, #-168]
  422148:	ldr	x8, [x8]
  42214c:	stur	x8, [x29, #-184]
  422150:	ldur	x8, [x29, #-184]
  422154:	cbnz	x8, 422164 <parse_file+0x30c>
  422158:	mov	x8, xzr
  42215c:	stur	x8, [x29, #-176]
  422160:	b	422188 <parse_file+0x330>
  422164:	ldur	x8, [x29, #-184]
  422168:	ldr	x8, [x8, #24]
  42216c:	cbz	x8, 422180 <parse_file+0x328>
  422170:	ldur	x8, [x29, #-184]
  422174:	ldr	x8, [x8, #24]
  422178:	stur	x8, [x29, #-184]
  42217c:	b	422164 <parse_file+0x30c>
  422180:	ldur	x8, [x29, #-184]
  422184:	stur	x8, [x29, #-176]
  422188:	ldur	x8, [x29, #-168]
  42218c:	str	x8, [sp, #192]
  422190:	ldur	x8, [x29, #-176]
  422194:	str	x8, [sp, #184]
  422198:	ldur	x8, [x29, #-56]
  42219c:	str	x8, [sp, #176]
  4221a0:	ldr	x8, [sp, #176]
  4221a4:	cmp	x8, #0x0
  4221a8:	cset	w9, ne  // ne = any
  4221ac:	mov	w10, #0x1                   	// #1
  4221b0:	eor	w9, w9, #0x1
  4221b4:	eor	w9, w9, w10
  4221b8:	eor	w9, w9, w10
  4221bc:	and	w9, w9, #0x1
  4221c0:	mov	w0, w9
  4221c4:	sxtw	x8, w0
  4221c8:	cbz	x8, 4221ec <parse_file+0x394>
  4221cc:	mov	w0, #0x1                   	// #1
  4221d0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4221d4:	add	x1, x1, #0x876
  4221d8:	ldr	x2, [sp, #80]
  4221dc:	mov	w3, #0x4be                 	// #1214
  4221e0:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  4221e4:	add	x4, x4, #0x698
  4221e8:	bl	40a540 <log_assert_failed_realm@plt>
  4221ec:	ldr	x8, [sp, #184]
  4221f0:	cbnz	x8, 422234 <parse_file+0x3dc>
  4221f4:	ldr	x8, [sp, #192]
  4221f8:	ldr	x8, [x8]
  4221fc:	ldr	x9, [sp, #176]
  422200:	str	x8, [x9, #24]
  422204:	cbz	x8, 422218 <parse_file+0x3c0>
  422208:	ldr	x8, [sp, #176]
  42220c:	ldr	x9, [sp, #176]
  422210:	ldr	x9, [x9, #24]
  422214:	str	x8, [x9, #32]
  422218:	ldr	x8, [sp, #176]
  42221c:	mov	x9, xzr
  422220:	str	x9, [x8, #32]
  422224:	ldr	x8, [sp, #176]
  422228:	ldr	x9, [sp, #192]
  42222c:	str	x8, [x9]
  422230:	b	422270 <parse_file+0x418>
  422234:	ldr	x8, [sp, #184]
  422238:	ldr	x8, [x8, #24]
  42223c:	ldr	x9, [sp, #176]
  422240:	str	x8, [x9, #24]
  422244:	cbz	x8, 422258 <parse_file+0x400>
  422248:	ldr	x8, [sp, #176]
  42224c:	ldr	x9, [sp, #176]
  422250:	ldr	x9, [x9, #24]
  422254:	str	x8, [x9, #32]
  422258:	ldr	x8, [sp, #184]
  42225c:	ldr	x9, [sp, #176]
  422260:	str	x8, [x9, #32]
  422264:	ldr	x8, [sp, #176]
  422268:	ldr	x9, [sp, #184]
  42226c:	str	x8, [x9, #24]
  422270:	b	4223ac <parse_file+0x554>
  422274:	ldur	x8, [x29, #-16]
  422278:	add	x8, x8, #0x28
  42227c:	str	x8, [sp, #168]
  422280:	ldr	x8, [sp, #168]
  422284:	ldr	x8, [x8]
  422288:	str	x8, [sp, #152]
  42228c:	ldr	x8, [sp, #152]
  422290:	cbnz	x8, 4222a0 <parse_file+0x448>
  422294:	mov	x8, xzr
  422298:	str	x8, [sp, #160]
  42229c:	b	4222c4 <parse_file+0x46c>
  4222a0:	ldr	x8, [sp, #152]
  4222a4:	ldr	x8, [x8, #24]
  4222a8:	cbz	x8, 4222bc <parse_file+0x464>
  4222ac:	ldr	x8, [sp, #152]
  4222b0:	ldr	x8, [x8, #24]
  4222b4:	str	x8, [sp, #152]
  4222b8:	b	4222a0 <parse_file+0x448>
  4222bc:	ldr	x8, [sp, #152]
  4222c0:	str	x8, [sp, #160]
  4222c4:	ldr	x8, [sp, #168]
  4222c8:	str	x8, [sp, #144]
  4222cc:	ldr	x8, [sp, #160]
  4222d0:	str	x8, [sp, #136]
  4222d4:	ldur	x8, [x29, #-56]
  4222d8:	str	x8, [sp, #128]
  4222dc:	ldr	x8, [sp, #128]
  4222e0:	cmp	x8, #0x0
  4222e4:	cset	w9, ne  // ne = any
  4222e8:	mov	w10, #0x1                   	// #1
  4222ec:	eor	w9, w9, #0x1
  4222f0:	eor	w9, w9, w10
  4222f4:	eor	w9, w9, w10
  4222f8:	and	w9, w9, #0x1
  4222fc:	mov	w0, w9
  422300:	sxtw	x8, w0
  422304:	cbz	x8, 422328 <parse_file+0x4d0>
  422308:	mov	w0, #0x1                   	// #1
  42230c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  422310:	add	x1, x1, #0x876
  422314:	ldr	x2, [sp, #80]
  422318:	mov	w3, #0x4c0                 	// #1216
  42231c:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422320:	add	x4, x4, #0x698
  422324:	bl	40a540 <log_assert_failed_realm@plt>
  422328:	ldr	x8, [sp, #136]
  42232c:	cbnz	x8, 422370 <parse_file+0x518>
  422330:	ldr	x8, [sp, #144]
  422334:	ldr	x8, [x8]
  422338:	ldr	x9, [sp, #128]
  42233c:	str	x8, [x9, #24]
  422340:	cbz	x8, 422354 <parse_file+0x4fc>
  422344:	ldr	x8, [sp, #128]
  422348:	ldr	x9, [sp, #128]
  42234c:	ldr	x9, [x9, #24]
  422350:	str	x8, [x9, #32]
  422354:	ldr	x8, [sp, #128]
  422358:	mov	x9, xzr
  42235c:	str	x9, [x8, #32]
  422360:	ldr	x8, [sp, #128]
  422364:	ldr	x9, [sp, #144]
  422368:	str	x8, [x9]
  42236c:	b	4223ac <parse_file+0x554>
  422370:	ldr	x8, [sp, #136]
  422374:	ldr	x8, [x8, #24]
  422378:	ldr	x9, [sp, #128]
  42237c:	str	x8, [x9, #24]
  422380:	cbz	x8, 422394 <parse_file+0x53c>
  422384:	ldr	x8, [sp, #128]
  422388:	ldr	x9, [sp, #128]
  42238c:	ldr	x9, [x9, #24]
  422390:	str	x8, [x9, #32]
  422394:	ldr	x8, [sp, #136]
  422398:	ldr	x9, [sp, #128]
  42239c:	str	x8, [x9, #32]
  4223a0:	ldr	x8, [sp, #128]
  4223a4:	ldr	x9, [sp, #136]
  4223a8:	str	x8, [x9, #24]
  4223ac:	ldur	x8, [x29, #-56]
  4223b0:	ldur	x9, [x29, #-16]
  4223b4:	str	x8, [x9, #32]
  4223b8:	add	x2, sp, #0x78
  4223bc:	mov	x8, xzr
  4223c0:	str	x8, [sp, #120]
  4223c4:	ldur	x0, [x29, #-48]
  4223c8:	mov	x1, #0x4000                	// #16384
  4223cc:	bl	423118 <read_line>
  4223d0:	stur	w0, [x29, #-68]
  4223d4:	ldur	w9, [x29, #-68]
  4223d8:	cmp	w9, #0x0
  4223dc:	cset	w9, ge  // ge = tcont
  4223e0:	tbnz	w9, #0, 4223f8 <parse_file+0x5a0>
  4223e4:	ldur	w8, [x29, #-68]
  4223e8:	stur	w8, [x29, #-4]
  4223ec:	mov	w8, #0x1                   	// #1
  4223f0:	stur	w8, [x29, #-72]
  4223f4:	b	42265c <parse_file+0x804>
  4223f8:	ldur	w8, [x29, #-68]
  4223fc:	cbnz	w8, 42240c <parse_file+0x5b4>
  422400:	mov	w8, #0x16                  	// #22
  422404:	stur	w8, [x29, #-72]
  422408:	b	42265c <parse_file+0x804>
  42240c:	ldur	w8, [x29, #-64]
  422410:	add	w8, w8, #0x1
  422414:	stur	w8, [x29, #-64]
  422418:	ldr	x0, [sp, #120]
  42241c:	mov	x9, xzr
  422420:	mov	x1, x9
  422424:	bl	423154 <skip_leading_chars>
  422428:	str	x0, [sp, #104]
  42242c:	ldr	x9, [sp, #104]
  422430:	ldrb	w8, [x9]
  422434:	cmp	w8, #0x23
  422438:	b.ne	422448 <parse_file+0x5f0>  // b.any
  42243c:	mov	w8, #0x17                  	// #23
  422440:	stur	w8, [x29, #-72]
  422444:	b	42265c <parse_file+0x804>
  422448:	ldr	x0, [sp, #104]
  42244c:	bl	40a800 <strlen@plt>
  422450:	str	x0, [sp, #112]
  422454:	ldur	x8, [x29, #-32]
  422458:	cbz	x8, 4224e8 <parse_file+0x690>
  42245c:	ldurb	w8, [x29, #-57]
  422460:	tbnz	w8, #0, 4224e8 <parse_file+0x690>
  422464:	ldur	x0, [x29, #-32]
  422468:	bl	40a800 <strlen@plt>
  42246c:	ldr	x8, [sp, #112]
  422470:	add	x8, x0, x8
  422474:	cmp	x8, #0x4, lsl #12
  422478:	b.cc	422484 <parse_file+0x62c>  // b.lo, b.ul, b.last
  42247c:	mov	w8, #0x1                   	// #1
  422480:	sturb	w8, [x29, #-57]
  422484:	ldr	x2, [sp, #104]
  422488:	sub	x0, x29, #0x20
  42248c:	mov	x8, xzr
  422490:	mov	x1, x8
  422494:	mov	x3, x8
  422498:	bl	40b2a0 <strextend_with_separator@plt>
  42249c:	cbnz	x0, 4224cc <parse_file+0x674>
  4224a0:	mov	w8, #0x1                   	// #1
  4224a4:	mov	w0, w8
  4224a8:	ldr	x1, [sp, #80]
  4224ac:	mov	w2, #0x4dc                 	// #1244
  4224b0:	ldr	x3, [sp, #72]
  4224b4:	str	w8, [sp, #12]
  4224b8:	bl	40a5e0 <log_oom_internal@plt>
  4224bc:	stur	w0, [x29, #-4]
  4224c0:	ldr	w8, [sp, #12]
  4224c4:	stur	w8, [x29, #-72]
  4224c8:	b	42265c <parse_file+0x804>
  4224cc:	ldurb	w8, [x29, #-57]
  4224d0:	tbnz	w8, #0, 4224e8 <parse_file+0x690>
  4224d4:	ldur	x8, [x29, #-32]
  4224d8:	str	x8, [sp, #104]
  4224dc:	ldr	x0, [sp, #104]
  4224e0:	bl	40a800 <strlen@plt>
  4224e4:	str	x0, [sp, #112]
  4224e8:	ldr	x8, [sp, #112]
  4224ec:	cmp	x8, #0x0
  4224f0:	cset	w9, ls  // ls = plast
  4224f4:	tbnz	w9, #0, 422594 <parse_file+0x73c>
  4224f8:	ldr	x8, [sp, #104]
  4224fc:	ldr	x9, [sp, #112]
  422500:	subs	x9, x9, #0x1
  422504:	ldrb	w10, [x8, x9]
  422508:	cmp	w10, #0x5c
  42250c:	b.ne	422594 <parse_file+0x73c>  // b.any
  422510:	ldurb	w8, [x29, #-57]
  422514:	tbnz	w8, #0, 42251c <parse_file+0x6c4>
  422518:	b	422528 <parse_file+0x6d0>
  42251c:	mov	w8, #0x17                  	// #23
  422520:	stur	w8, [x29, #-72]
  422524:	b	42265c <parse_file+0x804>
  422528:	ldr	x8, [sp, #104]
  42252c:	ldr	x9, [sp, #112]
  422530:	subs	x9, x9, #0x1
  422534:	add	x8, x8, x9
  422538:	mov	w10, #0x0                   	// #0
  42253c:	strb	w10, [x8]
  422540:	ldur	x8, [x29, #-32]
  422544:	cbnz	x8, 422588 <parse_file+0x730>
  422548:	ldr	x0, [sp, #104]
  42254c:	bl	40a910 <strdup@plt>
  422550:	stur	x0, [x29, #-32]
  422554:	ldur	x8, [x29, #-32]
  422558:	cbnz	x8, 422588 <parse_file+0x730>
  42255c:	mov	w8, #0x1                   	// #1
  422560:	mov	w0, w8
  422564:	ldr	x1, [sp, #80]
  422568:	mov	w2, #0x4ec                 	// #1260
  42256c:	ldr	x3, [sp, #72]
  422570:	str	w8, [sp, #8]
  422574:	bl	40a5e0 <log_oom_internal@plt>
  422578:	stur	w0, [x29, #-4]
  42257c:	ldr	w8, [sp, #8]
  422580:	stur	w8, [x29, #-72]
  422584:	b	42265c <parse_file+0x804>
  422588:	mov	w8, #0x17                  	// #23
  42258c:	stur	w8, [x29, #-72]
  422590:	b	42265c <parse_file+0x804>
  422594:	ldurb	w8, [x29, #-57]
  422598:	tbnz	w8, #0, 4225a0 <parse_file+0x748>
  42259c:	b	422624 <parse_file+0x7cc>
  4225a0:	mov	w8, #0x3                   	// #3
  4225a4:	str	w8, [sp, #100]
  4225a8:	str	wzr, [sp, #96]
  4225ac:	mov	w8, #0x1                   	// #1
  4225b0:	str	w8, [sp, #92]
  4225b4:	ldr	w0, [sp, #92]
  4225b8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4225bc:	ldr	w8, [sp, #100]
  4225c0:	and	w8, w8, #0x7
  4225c4:	cmp	w0, w8
  4225c8:	b.lt	422604 <parse_file+0x7ac>  // b.tstop
  4225cc:	ldr	w8, [sp, #92]
  4225d0:	ldr	w9, [sp, #100]
  4225d4:	orr	w0, w9, w8, lsl #10
  4225d8:	ldr	w1, [sp, #96]
  4225dc:	ldur	x6, [x29, #-24]
  4225e0:	ldur	w7, [x29, #-64]
  4225e4:	ldr	x2, [sp, #80]
  4225e8:	mov	w3, #0x4f3                 	// #1267
  4225ec:	ldr	x4, [sp, #72]
  4225f0:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  4225f4:	add	x5, x5, #0x6c2
  4225f8:	bl	40a400 <log_internal_realm@plt>
  4225fc:	str	w0, [sp, #4]
  422600:	b	422618 <parse_file+0x7c0>
  422604:	ldr	w0, [sp, #96]
  422608:	bl	40a410 <abs@plt>
  42260c:	mov	w8, wzr
  422610:	subs	w8, w8, w0, uxtb
  422614:	str	w8, [sp, #4]
  422618:	ldr	w8, [sp, #4]
  42261c:	str	w8, [sp, #88]
  422620:	b	422644 <parse_file+0x7ec>
  422624:	ldr	x8, [sp, #112]
  422628:	cmp	x8, #0x0
  42262c:	cset	w9, ls  // ls = plast
  422630:	tbnz	w9, #0, 422644 <parse_file+0x7ec>
  422634:	ldur	x0, [x29, #-16]
  422638:	ldr	x1, [sp, #104]
  42263c:	ldur	w2, [x29, #-64]
  422640:	bl	4231c0 <rule_add_line>
  422644:	ldur	x0, [x29, #-32]
  422648:	bl	421a24 <mfree>
  42264c:	stur	x0, [x29, #-32]
  422650:	mov	w8, #0x0                   	// #0
  422654:	sturb	w8, [x29, #-57]
  422658:	stur	wzr, [x29, #-72]
  42265c:	add	x0, sp, #0x78
  422660:	bl	4230c8 <freep>
  422664:	ldur	w8, [x29, #-72]
  422668:	str	w8, [sp]
  42266c:	cbz	w8, 422694 <parse_file+0x83c>
  422670:	b	422674 <parse_file+0x81c>
  422674:	ldr	w8, [sp]
  422678:	cmp	w8, #0x16
  42267c:	b.eq	422698 <parse_file+0x840>  // b.none
  422680:	b	422684 <parse_file+0x82c>
  422684:	ldr	w8, [sp]
  422688:	cmp	w8, #0x17
  42268c:	b.eq	4223b8 <parse_file+0x560>  // b.none
  422690:	b	4226ac <parse_file+0x854>
  422694:	b	4223b8 <parse_file+0x560>
  422698:	ldur	x0, [x29, #-56]
  42269c:	bl	423af8 <rule_resolve_goto>
  4226a0:	stur	wzr, [x29, #-4]
  4226a4:	mov	w8, #0x1                   	// #1
  4226a8:	stur	w8, [x29, #-72]
  4226ac:	sub	x0, x29, #0x30
  4226b0:	bl	4230f0 <fclosep>
  4226b4:	sub	x0, x29, #0x28
  4226b8:	bl	4230c8 <freep>
  4226bc:	sub	x0, x29, #0x20
  4226c0:	bl	4230c8 <freep>
  4226c4:	ldur	w0, [x29, #-4]
  4226c8:	ldr	x28, [sp, #400]
  4226cc:	ldp	x29, x30, [sp, #384]
  4226d0:	add	sp, sp, #0x1a0
  4226d4:	ret

00000000004226d8 <udev_rules_apply_to_event>:
  4226d8:	sub	sp, sp, #0x60
  4226dc:	stp	x29, x30, [sp, #80]
  4226e0:	add	x29, sp, #0x50
  4226e4:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  4226e8:	add	x8, x8, #0x48a
  4226ec:	add	x8, x8, #0x3
  4226f0:	stur	x0, [x29, #-16]
  4226f4:	stur	x1, [x29, #-24]
  4226f8:	stur	x2, [x29, #-32]
  4226fc:	str	x3, [sp, #40]
  422700:	str	x8, [sp, #8]
  422704:	ldur	x8, [x29, #-16]
  422708:	cmp	x8, #0x0
  42270c:	cset	w9, ne  // ne = any
  422710:	mov	w10, #0x1                   	// #1
  422714:	eor	w9, w9, #0x1
  422718:	eor	w9, w9, w10
  42271c:	eor	w9, w9, w10
  422720:	and	w9, w9, #0x1
  422724:	mov	w0, w9
  422728:	sxtw	x8, w0
  42272c:	cbz	x8, 422750 <udev_rules_apply_to_event+0x78>
  422730:	mov	w0, #0x1                   	// #1
  422734:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  422738:	add	x1, x1, #0x333
  42273c:	ldr	x2, [sp, #8]
  422740:	mov	w3, #0x8d7                 	// #2263
  422744:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422748:	add	x4, x4, #0x579
  42274c:	bl	40a540 <log_assert_failed_realm@plt>
  422750:	ldur	x8, [x29, #-24]
  422754:	cmp	x8, #0x0
  422758:	cset	w9, ne  // ne = any
  42275c:	mov	w10, #0x1                   	// #1
  422760:	eor	w9, w9, #0x1
  422764:	eor	w9, w9, w10
  422768:	eor	w9, w9, w10
  42276c:	and	w9, w9, #0x1
  422770:	mov	w0, w9
  422774:	sxtw	x8, w0
  422778:	cbz	x8, 42279c <udev_rules_apply_to_event+0xc4>
  42277c:	mov	w0, #0x1                   	// #1
  422780:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  422784:	add	x1, x1, #0xbb0
  422788:	ldr	x2, [sp, #8]
  42278c:	mov	w3, #0x8d8                 	// #2264
  422790:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422794:	add	x4, x4, #0x579
  422798:	bl	40a540 <log_assert_failed_realm@plt>
  42279c:	ldur	x8, [x29, #-16]
  4227a0:	ldr	x8, [x8, #40]
  4227a4:	str	x8, [sp, #32]
  4227a8:	ldr	x8, [sp, #32]
  4227ac:	cbz	x8, 42285c <udev_rules_apply_to_event+0x184>
  4227b0:	ldr	x8, [sp, #32]
  4227b4:	ldur	x9, [x29, #-16]
  4227b8:	str	x8, [x9, #32]
  4227bc:	ldr	x8, [sp, #32]
  4227c0:	ldr	x8, [x8, #16]
  4227c4:	ldr	x9, [sp, #32]
  4227c8:	str	x8, [x9, #8]
  4227cc:	ldr	x8, [sp, #32]
  4227d0:	ldr	x8, [x8, #8]
  4227d4:	mov	w9, #0x0                   	// #0
  4227d8:	str	w9, [sp, #4]
  4227dc:	cbz	x8, 4227f8 <udev_rules_apply_to_event+0x120>
  4227e0:	ldr	x8, [sp, #32]
  4227e4:	ldr	x8, [x8, #8]
  4227e8:	ldr	x8, [x8, #64]
  4227ec:	str	x8, [sp, #24]
  4227f0:	mov	w9, #0x1                   	// #1
  4227f4:	str	w9, [sp, #4]
  4227f8:	ldr	w8, [sp, #4]
  4227fc:	tbnz	w8, #0, 422804 <udev_rules_apply_to_event+0x12c>
  422800:	b	42284c <udev_rules_apply_to_event+0x174>
  422804:	ldur	x0, [x29, #-16]
  422808:	ldur	x1, [x29, #-24]
  42280c:	ldur	x2, [x29, #-32]
  422810:	ldr	x3, [sp, #40]
  422814:	add	x4, sp, #0x18
  422818:	bl	422870 <udev_rule_apply_line_to_event>
  42281c:	str	w0, [sp, #20]
  422820:	ldr	w8, [sp, #20]
  422824:	cmp	w8, #0x0
  422828:	cset	w8, ge  // ge = tcont
  42282c:	tbnz	w8, #0, 42283c <udev_rules_apply_to_event+0x164>
  422830:	ldr	w8, [sp, #20]
  422834:	stur	w8, [x29, #-4]
  422838:	b	422860 <udev_rules_apply_to_event+0x188>
  42283c:	ldr	x8, [sp, #24]
  422840:	ldr	x9, [sp, #32]
  422844:	str	x8, [x9, #8]
  422848:	b	4227cc <udev_rules_apply_to_event+0xf4>
  42284c:	ldr	x8, [sp, #32]
  422850:	ldr	x8, [x8, #24]
  422854:	str	x8, [sp, #32]
  422858:	b	4227a8 <udev_rules_apply_to_event+0xd0>
  42285c:	stur	wzr, [x29, #-4]
  422860:	ldur	w0, [x29, #-4]
  422864:	ldp	x29, x30, [sp, #80]
  422868:	add	sp, sp, #0x60
  42286c:	ret

0000000000422870 <udev_rule_apply_line_to_event>:
  422870:	sub	sp, sp, #0x70
  422874:	stp	x29, x30, [sp, #96]
  422878:	add	x29, sp, #0x60
  42287c:	mov	w8, #0x28                  	// #40
  422880:	mov	w9, #0x0                   	// #0
  422884:	add	x10, sp, #0x8
  422888:	stur	x0, [x29, #-16]
  42288c:	stur	x1, [x29, #-24]
  422890:	stur	x2, [x29, #-32]
  422894:	stur	x3, [x29, #-40]
  422898:	str	x4, [sp, #48]
  42289c:	ldur	x11, [x29, #-16]
  4228a0:	ldr	x11, [x11, #32]
  4228a4:	ldr	x11, [x11, #8]
  4228a8:	str	x11, [sp, #40]
  4228ac:	str	w8, [sp, #36]
  4228b0:	strb	w9, [sp, #15]
  4228b4:	ldur	x11, [x29, #-24]
  4228b8:	ldr	x0, [x11]
  4228bc:	mov	x1, x10
  4228c0:	bl	40ab50 <device_get_action@plt>
  4228c4:	str	w0, [sp, #4]
  4228c8:	ldr	w8, [sp, #4]
  4228cc:	cmp	w8, #0x0
  4228d0:	cset	w8, ge  // ge = tcont
  4228d4:	tbnz	w8, #0, 4228e4 <udev_rule_apply_line_to_event+0x74>
  4228d8:	ldr	w8, [sp, #4]
  4228dc:	stur	w8, [x29, #-4]
  4228e0:	b	422a7c <udev_rule_apply_line_to_event+0x20c>
  4228e4:	ldr	w8, [sp, #8]
  4228e8:	cmp	w8, #0x1
  4228ec:	b.eq	422948 <udev_rule_apply_line_to_event+0xd8>  // b.none
  4228f0:	ldur	x8, [x29, #-24]
  4228f4:	ldr	x0, [x8]
  4228f8:	mov	x8, xzr
  4228fc:	mov	x1, x8
  422900:	bl	40aa50 <sd_device_get_devnum@plt>
  422904:	cmp	w0, #0x0
  422908:	cset	w9, lt  // lt = tstop
  42290c:	tbnz	w9, #0, 42291c <udev_rule_apply_line_to_event+0xac>
  422910:	ldr	w8, [sp, #36]
  422914:	orr	w8, w8, #0x2
  422918:	str	w8, [sp, #36]
  42291c:	ldur	x8, [x29, #-24]
  422920:	ldr	x0, [x8]
  422924:	mov	x8, xzr
  422928:	mov	x1, x8
  42292c:	bl	40aa60 <sd_device_get_ifindex@plt>
  422930:	cmp	w0, #0x0
  422934:	cset	w9, lt  // lt = tstop
  422938:	tbnz	w9, #0, 422948 <udev_rule_apply_line_to_event+0xd8>
  42293c:	ldr	w8, [sp, #36]
  422940:	orr	w8, w8, #0x1
  422944:	str	w8, [sp, #36]
  422948:	ldr	x8, [sp, #40]
  42294c:	ldr	w9, [x8, #12]
  422950:	ldr	w10, [sp, #36]
  422954:	and	w9, w9, w10
  422958:	cbnz	w9, 422964 <udev_rule_apply_line_to_event+0xf4>
  42295c:	stur	wzr, [x29, #-4]
  422960:	b	422a7c <udev_rule_apply_line_to_event+0x20c>
  422964:	ldur	x8, [x29, #-24]
  422968:	ldrh	w9, [x8, #104]
  42296c:	and	w9, w9, #0xffffff00
  422970:	strh	w9, [x8, #104]
  422974:	ldr	x8, [sp, #40]
  422978:	ldr	x8, [x8, #56]
  42297c:	str	x8, [sp, #24]
  422980:	ldr	x8, [sp, #24]
  422984:	mov	w9, #0x0                   	// #0
  422988:	str	w9, [sp]
  42298c:	cbz	x8, 4229a4 <udev_rule_apply_line_to_event+0x134>
  422990:	ldr	x8, [sp, #24]
  422994:	ldr	x8, [x8, #24]
  422998:	str	x8, [sp, #16]
  42299c:	mov	w9, #0x1                   	// #1
  4229a0:	str	w9, [sp]
  4229a4:	ldr	w8, [sp]
  4229a8:	tbnz	w8, #0, 4229b0 <udev_rule_apply_line_to_event+0x140>
  4229ac:	b	422a5c <udev_rule_apply_line_to_event+0x1ec>
  4229b0:	ldr	x8, [sp, #24]
  4229b4:	ldr	x9, [sp, #40]
  4229b8:	str	x8, [x9, #48]
  4229bc:	ldr	x0, [sp, #24]
  4229c0:	bl	4323b4 <token_is_for_parents>
  4229c4:	tbnz	w0, #0, 4229cc <udev_rule_apply_line_to_event+0x15c>
  4229c8:	b	422a14 <udev_rule_apply_line_to_event+0x1a4>
  4229cc:	ldrb	w8, [sp, #15]
  4229d0:	tbnz	w8, #0, 4229d8 <udev_rule_apply_line_to_event+0x168>
  4229d4:	b	4229dc <udev_rule_apply_line_to_event+0x16c>
  4229d8:	b	422a50 <udev_rule_apply_line_to_event+0x1e0>
  4229dc:	ldur	x0, [x29, #-16]
  4229e0:	ldur	x1, [x29, #-24]
  4229e4:	bl	432408 <udev_rule_apply_parent_token_to_event>
  4229e8:	str	w0, [sp, #4]
  4229ec:	ldr	w8, [sp, #4]
  4229f0:	cmp	w8, #0x0
  4229f4:	cset	w8, gt
  4229f8:	tbnz	w8, #0, 422a08 <udev_rule_apply_line_to_event+0x198>
  4229fc:	ldr	w8, [sp, #4]
  422a00:	stur	w8, [x29, #-4]
  422a04:	b	422a7c <udev_rule_apply_line_to_event+0x20c>
  422a08:	mov	w8, #0x1                   	// #1
  422a0c:	strb	w8, [sp, #15]
  422a10:	b	422a50 <udev_rule_apply_line_to_event+0x1e0>
  422a14:	ldur	x0, [x29, #-16]
  422a18:	ldur	x8, [x29, #-24]
  422a1c:	ldr	x1, [x8]
  422a20:	ldur	x2, [x29, #-24]
  422a24:	ldur	x3, [x29, #-32]
  422a28:	ldur	x4, [x29, #-40]
  422a2c:	bl	432548 <udev_rule_apply_token_to_event>
  422a30:	str	w0, [sp, #4]
  422a34:	ldr	w9, [sp, #4]
  422a38:	cmp	w9, #0x0
  422a3c:	cset	w9, gt
  422a40:	tbnz	w9, #0, 422a50 <udev_rule_apply_line_to_event+0x1e0>
  422a44:	ldr	w8, [sp, #4]
  422a48:	stur	w8, [x29, #-4]
  422a4c:	b	422a7c <udev_rule_apply_line_to_event+0x20c>
  422a50:	ldr	x8, [sp, #16]
  422a54:	str	x8, [sp, #24]
  422a58:	b	422980 <udev_rule_apply_line_to_event+0x110>
  422a5c:	ldr	x8, [sp, #40]
  422a60:	ldr	x8, [x8, #32]
  422a64:	cbz	x8, 422a78 <udev_rule_apply_line_to_event+0x208>
  422a68:	ldr	x8, [sp, #40]
  422a6c:	ldr	x8, [x8, #32]
  422a70:	ldr	x9, [sp, #48]
  422a74:	str	x8, [x9]
  422a78:	stur	wzr, [x29, #-4]
  422a7c:	ldur	w0, [x29, #-4]
  422a80:	ldp	x29, x30, [sp, #96]
  422a84:	add	sp, sp, #0x70
  422a88:	ret

0000000000422a8c <udev_rules_apply_static_dev_perms>:
  422a8c:	sub	sp, sp, #0x40
  422a90:	stp	x29, x30, [sp, #48]
  422a94:	add	x29, sp, #0x30
  422a98:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  422a9c:	add	x8, x8, #0x48a
  422aa0:	add	x2, x8, #0x3
  422aa4:	stur	x0, [x29, #-16]
  422aa8:	str	x2, [sp]
  422aac:	ldur	x8, [x29, #-16]
  422ab0:	cmp	x8, #0x0
  422ab4:	cset	w9, ne  // ne = any
  422ab8:	mov	w10, #0x1                   	// #1
  422abc:	eor	w9, w9, #0x1
  422ac0:	eor	w9, w9, w10
  422ac4:	eor	w9, w9, w10
  422ac8:	and	w9, w9, #0x1
  422acc:	mov	w0, w9
  422ad0:	sxtw	x8, w0
  422ad4:	cbz	x8, 422af8 <udev_rules_apply_static_dev_perms+0x6c>
  422ad8:	mov	w0, #0x1                   	// #1
  422adc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  422ae0:	add	x1, x1, #0x333
  422ae4:	ldr	x2, [sp]
  422ae8:	mov	w3, #0x94f                 	// #2383
  422aec:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422af0:	add	x4, x4, #0x5c4
  422af4:	bl	40a540 <log_assert_failed_realm@plt>
  422af8:	ldur	x8, [x29, #-16]
  422afc:	ldr	x8, [x8, #40]
  422b00:	str	x8, [sp, #24]
  422b04:	ldr	x8, [sp, #24]
  422b08:	cbz	x8, 422b68 <udev_rules_apply_static_dev_perms+0xdc>
  422b0c:	ldr	x8, [sp, #24]
  422b10:	ldr	x8, [x8, #16]
  422b14:	str	x8, [sp, #16]
  422b18:	ldr	x8, [sp, #16]
  422b1c:	cbz	x8, 422b58 <udev_rules_apply_static_dev_perms+0xcc>
  422b20:	ldr	x0, [sp, #16]
  422b24:	bl	422b7c <udev_rule_line_apply_static_dev_perms>
  422b28:	str	w0, [sp, #12]
  422b2c:	ldr	w8, [sp, #12]
  422b30:	cmp	w8, #0x0
  422b34:	cset	w8, ge  // ge = tcont
  422b38:	tbnz	w8, #0, 422b48 <udev_rules_apply_static_dev_perms+0xbc>
  422b3c:	ldr	w8, [sp, #12]
  422b40:	stur	w8, [x29, #-4]
  422b44:	b	422b6c <udev_rules_apply_static_dev_perms+0xe0>
  422b48:	ldr	x8, [sp, #16]
  422b4c:	ldr	x8, [x8, #64]
  422b50:	str	x8, [sp, #16]
  422b54:	b	422b18 <udev_rules_apply_static_dev_perms+0x8c>
  422b58:	ldr	x8, [sp, #24]
  422b5c:	ldr	x8, [x8, #24]
  422b60:	str	x8, [sp, #24]
  422b64:	b	422b04 <udev_rules_apply_static_dev_perms+0x78>
  422b68:	stur	wzr, [x29, #-4]
  422b6c:	ldur	w0, [x29, #-4]
  422b70:	ldp	x29, x30, [sp, #48]
  422b74:	add	sp, sp, #0x40
  422b78:	ret

0000000000422b7c <udev_rule_line_apply_static_dev_perms>:
  422b7c:	sub	sp, sp, #0x60
  422b80:	stp	x29, x30, [sp, #80]
  422b84:	add	x29, sp, #0x50
  422b88:	mov	x8, xzr
  422b8c:	mov	w9, #0xffffffff            	// #-1
  422b90:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  422b94:	add	x10, x10, #0x48a
  422b98:	add	x10, x10, #0x3
  422b9c:	stur	x0, [x29, #-16]
  422ba0:	stur	x8, [x29, #-32]
  422ba4:	stur	w9, [x29, #-36]
  422ba8:	str	w9, [sp, #40]
  422bac:	str	w9, [sp, #36]
  422bb0:	str	x10, [sp, #16]
  422bb4:	ldur	x8, [x29, #-16]
  422bb8:	cmp	x8, #0x0
  422bbc:	cset	w9, ne  // ne = any
  422bc0:	mov	w10, #0x1                   	// #1
  422bc4:	eor	w9, w9, #0x1
  422bc8:	eor	w9, w9, w10
  422bcc:	eor	w9, w9, w10
  422bd0:	and	w9, w9, #0x1
  422bd4:	mov	w0, w9
  422bd8:	sxtw	x8, w0
  422bdc:	cbz	x8, 422c00 <udev_rule_line_apply_static_dev_perms+0x84>
  422be0:	mov	w0, #0x1                   	// #1
  422be4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  422be8:	add	x1, x1, #0x620
  422bec:	ldr	x2, [sp, #16]
  422bf0:	mov	w3, #0x931                 	// #2353
  422bf4:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  422bf8:	add	x4, x4, #0xdc2
  422bfc:	bl	40a540 <log_assert_failed_realm@plt>
  422c00:	ldur	x8, [x29, #-16]
  422c04:	ldr	w9, [x8, #12]
  422c08:	mvn	w9, w9
  422c0c:	and	w9, w9, #0x4
  422c10:	cbz	w9, 422c24 <udev_rule_line_apply_static_dev_perms+0xa8>
  422c14:	stur	wzr, [x29, #-4]
  422c18:	mov	w8, #0x1                   	// #1
  422c1c:	str	w8, [sp, #28]
  422c20:	b	422da4 <udev_rule_line_apply_static_dev_perms+0x228>
  422c24:	ldur	x8, [x29, #-16]
  422c28:	ldr	x8, [x8, #56]
  422c2c:	stur	x8, [x29, #-24]
  422c30:	ldur	x8, [x29, #-24]
  422c34:	cbz	x8, 422d98 <udev_rule_line_apply_static_dev_perms+0x21c>
  422c38:	ldur	x8, [x29, #-24]
  422c3c:	ldr	w9, [x8]
  422c40:	lsl	w9, w9, #24
  422c44:	asr	w9, w9, #24
  422c48:	cmp	w9, #0x22
  422c4c:	b.ne	422c64 <udev_rule_line_apply_static_dev_perms+0xe8>  // b.any
  422c50:	ldur	x8, [x29, #-24]
  422c54:	ldr	x8, [x8, #16]
  422c58:	subs	x8, x8, #0x1
  422c5c:	stur	w8, [x29, #-36]
  422c60:	b	422d88 <udev_rule_line_apply_static_dev_perms+0x20c>
  422c64:	ldur	x8, [x29, #-24]
  422c68:	ldr	w9, [x8]
  422c6c:	lsl	w9, w9, #24
  422c70:	asr	w9, w9, #24
  422c74:	cmp	w9, #0x23
  422c78:	b.ne	422c90 <udev_rule_line_apply_static_dev_perms+0x114>  // b.any
  422c7c:	ldur	x8, [x29, #-24]
  422c80:	ldr	x8, [x8, #16]
  422c84:	subs	x8, x8, #0x1
  422c88:	str	w8, [sp, #40]
  422c8c:	b	422d88 <udev_rule_line_apply_static_dev_perms+0x20c>
  422c90:	ldur	x8, [x29, #-24]
  422c94:	ldr	w9, [x8]
  422c98:	lsl	w9, w9, #24
  422c9c:	asr	w9, w9, #24
  422ca0:	cmp	w9, #0x24
  422ca4:	b.ne	422cbc <udev_rule_line_apply_static_dev_perms+0x140>  // b.any
  422ca8:	ldur	x8, [x29, #-24]
  422cac:	ldr	x8, [x8, #16]
  422cb0:	subs	x8, x8, #0x1
  422cb4:	str	w8, [sp, #36]
  422cb8:	b	422d88 <udev_rule_line_apply_static_dev_perms+0x20c>
  422cbc:	ldur	x8, [x29, #-24]
  422cc0:	ldr	w9, [x8]
  422cc4:	lsl	w9, w9, #24
  422cc8:	asr	w9, w9, #24
  422ccc:	cmp	w9, #0x25
  422cd0:	b.ne	422d2c <udev_rule_line_apply_static_dev_perms+0x1b0>  // b.any
  422cd4:	ldur	x8, [x29, #-24]
  422cd8:	ldr	x1, [x8, #8]
  422cdc:	sub	x0, x29, #0x20
  422ce0:	bl	40b2b0 <strv_extend@plt>
  422ce4:	str	w0, [sp, #32]
  422ce8:	ldr	w9, [sp, #32]
  422cec:	cmp	w9, #0x0
  422cf0:	cset	w9, ge  // ge = tcont
  422cf4:	tbnz	w9, #0, 422d28 <udev_rule_line_apply_static_dev_perms+0x1ac>
  422cf8:	mov	w8, #0x1                   	// #1
  422cfc:	mov	w0, w8
  422d00:	ldr	x1, [sp, #16]
  422d04:	mov	w2, #0x940                 	// #2368
  422d08:	adrp	x3, 468000 <on_inotify.__assert_in_set+0x4540>
  422d0c:	add	x3, x3, #0xdfc
  422d10:	str	w8, [sp, #12]
  422d14:	bl	40a5e0 <log_oom_internal@plt>
  422d18:	stur	w0, [x29, #-4]
  422d1c:	ldr	w8, [sp, #12]
  422d20:	str	w8, [sp, #28]
  422d24:	b	422da4 <udev_rule_line_apply_static_dev_perms+0x228>
  422d28:	b	422d88 <udev_rule_line_apply_static_dev_perms+0x20c>
  422d2c:	ldur	x8, [x29, #-24]
  422d30:	ldr	w9, [x8]
  422d34:	lsl	w9, w9, #24
  422d38:	asr	w9, w9, #24
  422d3c:	cmp	w9, #0x26
  422d40:	b.ne	422d88 <udev_rule_line_apply_static_dev_perms+0x20c>  // b.any
  422d44:	ldur	x8, [x29, #-24]
  422d48:	ldr	x0, [x8, #8]
  422d4c:	ldur	w1, [x29, #-36]
  422d50:	ldr	w2, [sp, #40]
  422d54:	ldr	w3, [sp, #36]
  422d58:	ldur	x4, [x29, #-32]
  422d5c:	bl	43c5c4 <apply_static_dev_perms>
  422d60:	str	w0, [sp, #32]
  422d64:	ldr	w9, [sp, #32]
  422d68:	cmp	w9, #0x0
  422d6c:	cset	w9, ge  // ge = tcont
  422d70:	tbnz	w9, #0, 422d88 <udev_rule_line_apply_static_dev_perms+0x20c>
  422d74:	ldr	w8, [sp, #32]
  422d78:	stur	w8, [x29, #-4]
  422d7c:	mov	w8, #0x1                   	// #1
  422d80:	str	w8, [sp, #28]
  422d84:	b	422da4 <udev_rule_line_apply_static_dev_perms+0x228>
  422d88:	ldur	x8, [x29, #-24]
  422d8c:	ldr	x8, [x8, #24]
  422d90:	stur	x8, [x29, #-24]
  422d94:	b	422c30 <udev_rule_line_apply_static_dev_perms+0xb4>
  422d98:	stur	wzr, [x29, #-4]
  422d9c:	mov	w8, #0x1                   	// #1
  422da0:	str	w8, [sp, #28]
  422da4:	sub	x0, x29, #0x20
  422da8:	bl	421d2c <strv_freep>
  422dac:	ldur	w0, [x29, #-4]
  422db0:	ldp	x29, x30, [sp, #80]
  422db4:	add	sp, sp, #0x60
  422db8:	ret

0000000000422dbc <udev_rule_line_free>:
  422dbc:	sub	sp, sp, #0x30
  422dc0:	stp	x29, x30, [sp, #32]
  422dc4:	add	x29, sp, #0x20
  422dc8:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  422dcc:	add	x8, x8, #0x48a
  422dd0:	add	x8, x8, #0x3
  422dd4:	stur	x0, [x29, #-8]
  422dd8:	ldur	x9, [x29, #-8]
  422ddc:	str	x8, [sp]
  422de0:	cbnz	x9, 422de8 <udev_rule_line_free+0x2c>
  422de4:	b	422f5c <udev_rule_line_free+0x1a0>
  422de8:	ldur	x0, [x29, #-8]
  422dec:	bl	422f68 <udev_rule_line_clear_tokens>
  422df0:	ldur	x8, [x29, #-8]
  422df4:	ldr	x8, [x8, #40]
  422df8:	cbz	x8, 422f48 <udev_rule_line_free+0x18c>
  422dfc:	ldur	x8, [x29, #-8]
  422e00:	ldr	x8, [x8, #40]
  422e04:	ldr	x8, [x8, #8]
  422e08:	ldur	x9, [x29, #-8]
  422e0c:	cmp	x8, x9
  422e10:	b.ne	422e28 <udev_rule_line_free+0x6c>  // b.any
  422e14:	ldur	x8, [x29, #-8]
  422e18:	ldr	x8, [x8, #72]
  422e1c:	ldur	x9, [x29, #-8]
  422e20:	ldr	x9, [x9, #40]
  422e24:	str	x8, [x9, #8]
  422e28:	ldur	x8, [x29, #-8]
  422e2c:	ldr	x8, [x8, #40]
  422e30:	add	x8, x8, #0x10
  422e34:	str	x8, [sp, #16]
  422e38:	ldur	x8, [x29, #-8]
  422e3c:	str	x8, [sp, #8]
  422e40:	ldr	x8, [sp, #8]
  422e44:	cmp	x8, #0x0
  422e48:	cset	w9, ne  // ne = any
  422e4c:	mov	w10, #0x1                   	// #1
  422e50:	eor	w9, w9, #0x1
  422e54:	eor	w9, w9, w10
  422e58:	eor	w9, w9, w10
  422e5c:	and	w9, w9, #0x1
  422e60:	mov	w0, w9
  422e64:	sxtw	x8, w0
  422e68:	cbz	x8, 422e8c <udev_rule_line_free+0xd0>
  422e6c:	mov	w0, #0x1                   	// #1
  422e70:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  422e74:	add	x1, x1, #0xd16
  422e78:	ldr	x2, [sp]
  422e7c:	mov	w3, #0x111                 	// #273
  422e80:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422e84:	add	x4, x4, #0x5f7
  422e88:	bl	40a540 <log_assert_failed_realm@plt>
  422e8c:	ldr	x8, [sp, #8]
  422e90:	ldr	x8, [x8, #64]
  422e94:	cbz	x8, 422eac <udev_rule_line_free+0xf0>
  422e98:	ldr	x8, [sp, #8]
  422e9c:	ldr	x8, [x8, #72]
  422ea0:	ldr	x9, [sp, #8]
  422ea4:	ldr	x9, [x9, #64]
  422ea8:	str	x8, [x9, #72]
  422eac:	ldr	x8, [sp, #8]
  422eb0:	ldr	x8, [x8, #72]
  422eb4:	cbz	x8, 422ed0 <udev_rule_line_free+0x114>
  422eb8:	ldr	x8, [sp, #8]
  422ebc:	ldr	x8, [x8, #64]
  422ec0:	ldr	x9, [sp, #8]
  422ec4:	ldr	x9, [x9, #72]
  422ec8:	str	x8, [x9, #64]
  422ecc:	b	422f34 <udev_rule_line_free+0x178>
  422ed0:	ldr	x8, [sp, #16]
  422ed4:	ldr	x8, [x8]
  422ed8:	ldr	x9, [sp, #8]
  422edc:	cmp	x8, x9
  422ee0:	cset	w10, eq  // eq = none
  422ee4:	mov	w11, #0x1                   	// #1
  422ee8:	eor	w10, w10, #0x1
  422eec:	eor	w10, w10, w11
  422ef0:	eor	w10, w10, w11
  422ef4:	and	w10, w10, #0x1
  422ef8:	mov	w0, w10
  422efc:	sxtw	x8, w0
  422f00:	cbz	x8, 422f24 <udev_rule_line_free+0x168>
  422f04:	mov	w0, #0x1                   	// #1
  422f08:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  422f0c:	add	x1, x1, #0xd1c
  422f10:	ldr	x2, [sp]
  422f14:	mov	w3, #0x111                 	// #273
  422f18:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422f1c:	add	x4, x4, #0x5f7
  422f20:	bl	40a540 <log_assert_failed_realm@plt>
  422f24:	ldr	x8, [sp, #8]
  422f28:	ldr	x8, [x8, #64]
  422f2c:	ldr	x9, [sp, #16]
  422f30:	str	x8, [x9]
  422f34:	ldr	x8, [sp, #8]
  422f38:	mov	x9, xzr
  422f3c:	str	x9, [x8, #72]
  422f40:	ldr	x8, [sp, #8]
  422f44:	str	x9, [x8, #64]
  422f48:	ldur	x8, [x29, #-8]
  422f4c:	ldr	x0, [x8]
  422f50:	bl	40a530 <free@plt>
  422f54:	ldur	x0, [x29, #-8]
  422f58:	bl	40a530 <free@plt>
  422f5c:	ldp	x29, x30, [sp, #32]
  422f60:	add	sp, sp, #0x30
  422f64:	ret

0000000000422f68 <udev_rule_line_clear_tokens>:
  422f68:	sub	sp, sp, #0x40
  422f6c:	stp	x29, x30, [sp, #48]
  422f70:	add	x29, sp, #0x30
  422f74:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  422f78:	add	x8, x8, #0x48a
  422f7c:	add	x2, x8, #0x3
  422f80:	stur	x0, [x29, #-8]
  422f84:	str	x2, [sp, #16]
  422f88:	ldur	x8, [x29, #-8]
  422f8c:	cmp	x8, #0x0
  422f90:	cset	w9, ne  // ne = any
  422f94:	mov	w10, #0x1                   	// #1
  422f98:	eor	w9, w9, #0x1
  422f9c:	eor	w9, w9, w10
  422fa0:	eor	w9, w9, w10
  422fa4:	and	w9, w9, #0x1
  422fa8:	mov	w0, w9
  422fac:	sxtw	x8, w0
  422fb0:	cbz	x8, 422fd4 <udev_rule_line_clear_tokens+0x6c>
  422fb4:	mov	w0, #0x1                   	// #1
  422fb8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  422fbc:	add	x1, x1, #0x620
  422fc0:	ldr	x2, [sp, #16]
  422fc4:	mov	w3, #0xff                  	// #255
  422fc8:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  422fcc:	add	x4, x4, #0x62a
  422fd0:	bl	40a540 <log_assert_failed_realm@plt>
  422fd4:	ldur	x8, [x29, #-8]
  422fd8:	ldr	x8, [x8, #56]
  422fdc:	stur	x8, [x29, #-16]
  422fe0:	ldur	x8, [x29, #-16]
  422fe4:	mov	w9, #0x0                   	// #0
  422fe8:	str	w9, [sp, #12]
  422fec:	cbz	x8, 423004 <udev_rule_line_clear_tokens+0x9c>
  422ff0:	ldur	x8, [x29, #-16]
  422ff4:	ldr	x8, [x8, #24]
  422ff8:	str	x8, [sp, #24]
  422ffc:	mov	w9, #0x1                   	// #1
  423000:	str	w9, [sp, #12]
  423004:	ldr	w8, [sp, #12]
  423008:	tbnz	w8, #0, 423010 <udev_rule_line_clear_tokens+0xa8>
  42300c:	b	423024 <udev_rule_line_clear_tokens+0xbc>
  423010:	ldur	x0, [x29, #-16]
  423014:	bl	42303c <udev_rule_token_free>
  423018:	ldr	x8, [sp, #24]
  42301c:	stur	x8, [x29, #-16]
  423020:	b	422fe0 <udev_rule_line_clear_tokens+0x78>
  423024:	ldur	x8, [x29, #-8]
  423028:	mov	x9, xzr
  42302c:	str	x9, [x8, #56]
  423030:	ldp	x29, x30, [sp, #48]
  423034:	add	sp, sp, #0x40
  423038:	ret

000000000042303c <udev_rule_token_free>:
  42303c:	sub	sp, sp, #0x20
  423040:	stp	x29, x30, [sp, #16]
  423044:	add	x29, sp, #0x10
  423048:	str	x0, [sp, #8]
  42304c:	ldr	x0, [sp, #8]
  423050:	bl	40a530 <free@plt>
  423054:	ldp	x29, x30, [sp, #16]
  423058:	add	sp, sp, #0x20
  42305c:	ret

0000000000423060 <size_multiply_overflow>:
  423060:	sub	sp, sp, #0x20
  423064:	str	x0, [sp, #24]
  423068:	str	x1, [sp, #16]
  42306c:	ldr	x8, [sp, #16]
  423070:	mov	w9, #0x0                   	// #0
  423074:	str	w9, [sp, #12]
  423078:	cbz	x8, 423098 <size_multiply_overflow+0x38>
  42307c:	ldr	x8, [sp, #24]
  423080:	ldr	x9, [sp, #16]
  423084:	mov	x10, #0xffffffffffffffff    	// #-1
  423088:	udiv	x9, x10, x9
  42308c:	cmp	x8, x9
  423090:	cset	w11, hi  // hi = pmore
  423094:	str	w11, [sp, #12]
  423098:	ldr	w8, [sp, #12]
  42309c:	mov	w9, #0x1                   	// #1
  4230a0:	eor	w8, w8, #0x1
  4230a4:	eor	w8, w8, w9
  4230a8:	and	w8, w8, #0x1
  4230ac:	mov	w0, w8
  4230b0:	sxtw	x10, w0
  4230b4:	cmp	x10, #0x0
  4230b8:	cset	w8, ne  // ne = any
  4230bc:	and	w0, w8, #0x1
  4230c0:	add	sp, sp, #0x20
  4230c4:	ret

00000000004230c8 <freep>:
  4230c8:	sub	sp, sp, #0x20
  4230cc:	stp	x29, x30, [sp, #16]
  4230d0:	add	x29, sp, #0x10
  4230d4:	str	x0, [sp, #8]
  4230d8:	ldr	x8, [sp, #8]
  4230dc:	ldr	x0, [x8]
  4230e0:	bl	40a530 <free@plt>
  4230e4:	ldp	x29, x30, [sp, #16]
  4230e8:	add	sp, sp, #0x20
  4230ec:	ret

00000000004230f0 <fclosep>:
  4230f0:	sub	sp, sp, #0x20
  4230f4:	stp	x29, x30, [sp, #16]
  4230f8:	add	x29, sp, #0x10
  4230fc:	str	x0, [sp, #8]
  423100:	ldr	x8, [sp, #8]
  423104:	ldr	x0, [x8]
  423108:	bl	40b2c0 <safe_fclose@plt>
  42310c:	ldp	x29, x30, [sp, #16]
  423110:	add	sp, sp, #0x20
  423114:	ret

0000000000423118 <read_line>:
  423118:	sub	sp, sp, #0x30
  42311c:	stp	x29, x30, [sp, #32]
  423120:	add	x29, sp, #0x20
  423124:	mov	w8, wzr
  423128:	stur	x0, [x29, #-8]
  42312c:	str	x1, [sp, #16]
  423130:	str	x2, [sp, #8]
  423134:	ldur	x0, [x29, #-8]
  423138:	ldr	x1, [sp, #16]
  42313c:	ldr	x3, [sp, #8]
  423140:	mov	w2, w8
  423144:	bl	40b2d0 <read_line_full@plt>
  423148:	ldp	x29, x30, [sp, #32]
  42314c:	add	sp, sp, #0x30
  423150:	ret

0000000000423154 <skip_leading_chars>:
  423154:	sub	sp, sp, #0x30
  423158:	stp	x29, x30, [sp, #32]
  42315c:	add	x29, sp, #0x20
  423160:	str	x0, [sp, #16]
  423164:	str	x1, [sp, #8]
  423168:	ldr	x8, [sp, #16]
  42316c:	cbnz	x8, 42317c <skip_leading_chars+0x28>
  423170:	mov	x8, xzr
  423174:	stur	x8, [x29, #-8]
  423178:	b	4231b0 <skip_leading_chars+0x5c>
  42317c:	ldr	x8, [sp, #8]
  423180:	cbnz	x8, 423190 <skip_leading_chars+0x3c>
  423184:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  423188:	add	x8, x8, #0x5b7
  42318c:	str	x8, [sp, #8]
  423190:	ldr	x8, [sp, #16]
  423194:	ldr	x0, [sp, #16]
  423198:	ldr	x1, [sp, #8]
  42319c:	str	x8, [sp]
  4231a0:	bl	40b080 <strspn@plt>
  4231a4:	ldr	x8, [sp]
  4231a8:	add	x9, x8, x0
  4231ac:	stur	x9, [x29, #-8]
  4231b0:	ldur	x0, [x29, #-8]
  4231b4:	ldp	x29, x30, [sp, #32]
  4231b8:	add	sp, sp, #0x30
  4231bc:	ret

00000000004231c0 <rule_add_line>:
  4231c0:	stp	x29, x30, [sp, #-32]!
  4231c4:	str	x28, [sp, #16]
  4231c8:	mov	x29, sp
  4231cc:	sub	sp, sp, #0x2a0
  4231d0:	mov	x8, xzr
  4231d4:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  4231d8:	add	x9, x9, #0x48a
  4231dc:	add	x9, x9, #0x3
  4231e0:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  4231e4:	add	x10, x10, #0x73b
  4231e8:	adrp	x11, 467000 <on_inotify.__assert_in_set+0x3540>
  4231ec:	add	x11, x11, #0x6e3
  4231f0:	stur	x0, [x29, #-16]
  4231f4:	stur	x1, [x29, #-24]
  4231f8:	stur	w2, [x29, #-28]
  4231fc:	stur	x8, [x29, #-40]
  423200:	stur	x8, [x29, #-48]
  423204:	str	x9, [sp, #208]
  423208:	str	x10, [sp, #200]
  42320c:	str	x11, [sp, #192]
  423210:	ldur	x8, [x29, #-16]
  423214:	cmp	x8, #0x0
  423218:	cset	w9, ne  // ne = any
  42321c:	mov	w10, #0x1                   	// #1
  423220:	eor	w9, w9, #0x1
  423224:	eor	w9, w9, w10
  423228:	eor	w9, w9, w10
  42322c:	and	w9, w9, #0x1
  423230:	mov	w0, w9
  423234:	sxtw	x8, w0
  423238:	cbz	x8, 423258 <rule_add_line+0x98>
  42323c:	mov	w0, #0x1                   	// #1
  423240:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  423244:	add	x1, x1, #0x333
  423248:	ldr	x2, [sp, #208]
  42324c:	mov	w3, #0x43e                 	// #1086
  423250:	ldr	x4, [sp, #192]
  423254:	bl	40a540 <log_assert_failed_realm@plt>
  423258:	ldur	x8, [x29, #-16]
  42325c:	ldr	x8, [x8, #32]
  423260:	cmp	x8, #0x0
  423264:	cset	w9, ne  // ne = any
  423268:	mov	w10, #0x1                   	// #1
  42326c:	eor	w9, w9, #0x1
  423270:	eor	w9, w9, w10
  423274:	eor	w9, w9, w10
  423278:	and	w9, w9, #0x1
  42327c:	mov	w0, w9
  423280:	sxtw	x8, w0
  423284:	cbz	x8, 4232a4 <rule_add_line+0xe4>
  423288:	mov	w0, #0x1                   	// #1
  42328c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423290:	add	x1, x1, #0x71e
  423294:	ldr	x2, [sp, #208]
  423298:	mov	w3, #0x43f                 	// #1087
  42329c:	ldr	x4, [sp, #192]
  4232a0:	bl	40a540 <log_assert_failed_realm@plt>
  4232a4:	ldur	x8, [x29, #-24]
  4232a8:	cmp	x8, #0x0
  4232ac:	cset	w9, ne  // ne = any
  4232b0:	mov	w10, #0x1                   	// #1
  4232b4:	eor	w9, w9, #0x1
  4232b8:	eor	w9, w9, w10
  4232bc:	eor	w9, w9, w10
  4232c0:	and	w9, w9, #0x1
  4232c4:	mov	w0, w9
  4232c8:	sxtw	x8, w0
  4232cc:	cbz	x8, 4232ec <rule_add_line+0x12c>
  4232d0:	mov	w0, #0x1                   	// #1
  4232d4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4232d8:	add	x1, x1, #0x732
  4232dc:	ldr	x2, [sp, #208]
  4232e0:	mov	w3, #0x440                 	// #1088
  4232e4:	ldr	x4, [sp, #192]
  4232e8:	bl	40a540 <log_assert_failed_realm@plt>
  4232ec:	ldur	x8, [x29, #-16]
  4232f0:	ldr	x8, [x8, #32]
  4232f4:	stur	x8, [x29, #-56]
  4232f8:	ldur	x0, [x29, #-24]
  4232fc:	bl	423ddc <isempty>
  423300:	tbnz	w0, #0, 423308 <rule_add_line+0x148>
  423304:	b	423318 <rule_add_line+0x158>
  423308:	stur	wzr, [x29, #-4]
  42330c:	mov	w8, #0x1                   	// #1
  423310:	stur	w8, [x29, #-72]
  423314:	b	423ad4 <rule_add_line+0x914>
  423318:	ldur	x0, [x29, #-24]
  42331c:	bl	40a910 <strdup@plt>
  423320:	stur	x0, [x29, #-48]
  423324:	ldur	x8, [x29, #-48]
  423328:	cbnz	x8, 423358 <rule_add_line+0x198>
  42332c:	mov	w8, #0x1                   	// #1
  423330:	mov	w0, w8
  423334:	ldr	x1, [sp, #208]
  423338:	mov	w2, #0x449                 	// #1097
  42333c:	ldr	x3, [sp, #200]
  423340:	str	w8, [sp, #188]
  423344:	bl	40a5e0 <log_oom_internal@plt>
  423348:	stur	w0, [x29, #-4]
  42334c:	ldr	w8, [sp, #188]
  423350:	stur	w8, [x29, #-72]
  423354:	b	423ad4 <rule_add_line+0x914>
  423358:	mov	x0, #0x50                  	// #80
  42335c:	mov	x1, #0x1                   	// #1
  423360:	bl	421d60 <malloc_multiply>
  423364:	stur	x0, [x29, #-40]
  423368:	ldur	x8, [x29, #-40]
  42336c:	cbnz	x8, 42339c <rule_add_line+0x1dc>
  423370:	mov	w8, #0x1                   	// #1
  423374:	mov	w0, w8
  423378:	ldr	x1, [sp, #208]
  42337c:	mov	w2, #0x44d                 	// #1101
  423380:	ldr	x3, [sp, #200]
  423384:	str	w8, [sp, #184]
  423388:	bl	40a5e0 <log_oom_internal@plt>
  42338c:	stur	w0, [x29, #-4]
  423390:	ldr	w8, [sp, #184]
  423394:	stur	w8, [x29, #-72]
  423398:	b	423ad4 <rule_add_line+0x914>
  42339c:	ldur	x0, [x29, #-40]
  4233a0:	sub	x8, x29, #0x98
  4233a4:	str	x0, [sp, #176]
  4233a8:	mov	x0, x8
  4233ac:	mov	w9, wzr
  4233b0:	mov	w1, w9
  4233b4:	mov	x10, #0x50                  	// #80
  4233b8:	mov	x2, x10
  4233bc:	str	x8, [sp, #168]
  4233c0:	str	x10, [sp, #160]
  4233c4:	bl	40a5f0 <memset@plt>
  4233c8:	ldur	x8, [x29, #-48]
  4233cc:	stur	x8, [x29, #-160]
  4233d0:	mov	x8, xzr
  4233d4:	stur	x8, [x29, #-48]
  4233d8:	ldur	x8, [x29, #-160]
  4233dc:	stur	x8, [x29, #-168]
  4233e0:	ldur	x8, [x29, #-168]
  4233e4:	stur	x8, [x29, #-152]
  4233e8:	ldur	w9, [x29, #-28]
  4233ec:	stur	w9, [x29, #-144]
  4233f0:	ldur	x8, [x29, #-56]
  4233f4:	ldr	x10, [sp, #168]
  4233f8:	str	x8, [x10, #40]
  4233fc:	ldr	x0, [sp, #176]
  423400:	mov	x1, x10
  423404:	ldr	x2, [sp, #160]
  423408:	bl	40a600 <memcpy@plt>
  42340c:	ldur	x8, [x29, #-56]
  423410:	ldr	x8, [x8, #8]
  423414:	cbz	x8, 423550 <rule_add_line+0x390>
  423418:	ldur	x8, [x29, #-56]
  42341c:	add	x8, x8, #0x8
  423420:	stur	x8, [x29, #-176]
  423424:	ldur	x8, [x29, #-176]
  423428:	ldr	x8, [x8]
  42342c:	stur	x8, [x29, #-192]
  423430:	ldur	x8, [x29, #-192]
  423434:	cbnz	x8, 423444 <rule_add_line+0x284>
  423438:	mov	x8, xzr
  42343c:	stur	x8, [x29, #-184]
  423440:	b	423468 <rule_add_line+0x2a8>
  423444:	ldur	x8, [x29, #-192]
  423448:	ldr	x8, [x8, #64]
  42344c:	cbz	x8, 423460 <rule_add_line+0x2a0>
  423450:	ldur	x8, [x29, #-192]
  423454:	ldr	x8, [x8, #64]
  423458:	stur	x8, [x29, #-192]
  42345c:	b	423444 <rule_add_line+0x284>
  423460:	ldur	x8, [x29, #-192]
  423464:	stur	x8, [x29, #-184]
  423468:	ldur	x8, [x29, #-176]
  42346c:	stur	x8, [x29, #-200]
  423470:	ldur	x8, [x29, #-184]
  423474:	stur	x8, [x29, #-208]
  423478:	ldur	x8, [x29, #-40]
  42347c:	stur	x8, [x29, #-216]
  423480:	ldur	x8, [x29, #-216]
  423484:	cmp	x8, #0x0
  423488:	cset	w9, ne  // ne = any
  42348c:	mov	w10, #0x1                   	// #1
  423490:	eor	w9, w9, #0x1
  423494:	eor	w9, w9, w10
  423498:	eor	w9, w9, w10
  42349c:	and	w9, w9, #0x1
  4234a0:	mov	w0, w9
  4234a4:	sxtw	x8, w0
  4234a8:	cbz	x8, 4234c8 <rule_add_line+0x308>
  4234ac:	mov	w0, #0x1                   	// #1
  4234b0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4234b4:	add	x1, x1, #0x876
  4234b8:	ldr	x2, [sp, #208]
  4234bc:	mov	w3, #0x456                 	// #1110
  4234c0:	ldr	x4, [sp, #192]
  4234c4:	bl	40a540 <log_assert_failed_realm@plt>
  4234c8:	ldur	x8, [x29, #-208]
  4234cc:	cbnz	x8, 423510 <rule_add_line+0x350>
  4234d0:	ldur	x8, [x29, #-200]
  4234d4:	ldr	x8, [x8]
  4234d8:	ldur	x9, [x29, #-216]
  4234dc:	str	x8, [x9, #64]
  4234e0:	cbz	x8, 4234f4 <rule_add_line+0x334>
  4234e4:	ldur	x8, [x29, #-216]
  4234e8:	ldur	x9, [x29, #-216]
  4234ec:	ldr	x9, [x9, #64]
  4234f0:	str	x8, [x9, #72]
  4234f4:	ldur	x8, [x29, #-216]
  4234f8:	mov	x9, xzr
  4234fc:	str	x9, [x8, #72]
  423500:	ldur	x8, [x29, #-216]
  423504:	ldur	x9, [x29, #-200]
  423508:	str	x8, [x9]
  42350c:	b	42354c <rule_add_line+0x38c>
  423510:	ldur	x8, [x29, #-208]
  423514:	ldr	x8, [x8, #64]
  423518:	ldur	x9, [x29, #-216]
  42351c:	str	x8, [x9, #64]
  423520:	cbz	x8, 423534 <rule_add_line+0x374>
  423524:	ldur	x8, [x29, #-216]
  423528:	ldur	x9, [x29, #-216]
  42352c:	ldr	x9, [x9, #64]
  423530:	str	x8, [x9, #72]
  423534:	ldur	x8, [x29, #-208]
  423538:	ldur	x9, [x29, #-216]
  42353c:	str	x8, [x9, #72]
  423540:	ldur	x8, [x29, #-216]
  423544:	ldur	x9, [x29, #-208]
  423548:	str	x8, [x9, #64]
  42354c:	b	423684 <rule_add_line+0x4c4>
  423550:	ldur	x8, [x29, #-56]
  423554:	add	x8, x8, #0x10
  423558:	stur	x8, [x29, #-224]
  42355c:	ldur	x8, [x29, #-224]
  423560:	ldr	x8, [x8]
  423564:	stur	x8, [x29, #-240]
  423568:	ldur	x8, [x29, #-240]
  42356c:	cbnz	x8, 42357c <rule_add_line+0x3bc>
  423570:	mov	x8, xzr
  423574:	stur	x8, [x29, #-232]
  423578:	b	4235a0 <rule_add_line+0x3e0>
  42357c:	ldur	x8, [x29, #-240]
  423580:	ldr	x8, [x8, #64]
  423584:	cbz	x8, 423598 <rule_add_line+0x3d8>
  423588:	ldur	x8, [x29, #-240]
  42358c:	ldr	x8, [x8, #64]
  423590:	stur	x8, [x29, #-240]
  423594:	b	42357c <rule_add_line+0x3bc>
  423598:	ldur	x8, [x29, #-240]
  42359c:	stur	x8, [x29, #-232]
  4235a0:	ldur	x8, [x29, #-224]
  4235a4:	stur	x8, [x29, #-248]
  4235a8:	ldur	x8, [x29, #-232]
  4235ac:	stur	x8, [x29, #-256]
  4235b0:	ldur	x8, [x29, #-40]
  4235b4:	str	x8, [sp, #408]
  4235b8:	ldr	x8, [sp, #408]
  4235bc:	cmp	x8, #0x0
  4235c0:	cset	w9, ne  // ne = any
  4235c4:	mov	w10, #0x1                   	// #1
  4235c8:	eor	w9, w9, #0x1
  4235cc:	eor	w9, w9, w10
  4235d0:	eor	w9, w9, w10
  4235d4:	and	w9, w9, #0x1
  4235d8:	mov	w0, w9
  4235dc:	sxtw	x8, w0
  4235e0:	cbz	x8, 423600 <rule_add_line+0x440>
  4235e4:	mov	w0, #0x1                   	// #1
  4235e8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4235ec:	add	x1, x1, #0x876
  4235f0:	ldr	x2, [sp, #208]
  4235f4:	mov	w3, #0x458                 	// #1112
  4235f8:	ldr	x4, [sp, #192]
  4235fc:	bl	40a540 <log_assert_failed_realm@plt>
  423600:	ldur	x8, [x29, #-256]
  423604:	cbnz	x8, 423648 <rule_add_line+0x488>
  423608:	ldur	x8, [x29, #-248]
  42360c:	ldr	x8, [x8]
  423610:	ldr	x9, [sp, #408]
  423614:	str	x8, [x9, #64]
  423618:	cbz	x8, 42362c <rule_add_line+0x46c>
  42361c:	ldr	x8, [sp, #408]
  423620:	ldr	x9, [sp, #408]
  423624:	ldr	x9, [x9, #64]
  423628:	str	x8, [x9, #72]
  42362c:	ldr	x8, [sp, #408]
  423630:	mov	x9, xzr
  423634:	str	x9, [x8, #72]
  423638:	ldr	x8, [sp, #408]
  42363c:	ldur	x9, [x29, #-248]
  423640:	str	x8, [x9]
  423644:	b	423684 <rule_add_line+0x4c4>
  423648:	ldur	x8, [x29, #-256]
  42364c:	ldr	x8, [x8, #64]
  423650:	ldr	x9, [sp, #408]
  423654:	str	x8, [x9, #64]
  423658:	cbz	x8, 42366c <rule_add_line+0x4ac>
  42365c:	ldr	x8, [sp, #408]
  423660:	ldr	x9, [sp, #408]
  423664:	ldr	x9, [x9, #64]
  423668:	str	x8, [x9, #72]
  42366c:	ldur	x8, [x29, #-256]
  423670:	ldr	x9, [sp, #408]
  423674:	str	x8, [x9, #72]
  423678:	ldr	x8, [sp, #408]
  42367c:	ldur	x9, [x29, #-256]
  423680:	str	x8, [x9, #64]
  423684:	ldur	x8, [x29, #-40]
  423688:	ldur	x9, [x29, #-56]
  42368c:	str	x8, [x9, #8]
  423690:	ldur	x8, [x29, #-40]
  423694:	ldr	x8, [x8]
  423698:	stur	x8, [x29, #-64]
  42369c:	ldur	x0, [x29, #-64]
  4236a0:	bl	423ddc <isempty>
  4236a4:	eor	w8, w0, #0x1
  4236a8:	tbnz	w8, #0, 4236b0 <rule_add_line+0x4f0>
  4236ac:	b	4238e8 <rule_add_line+0x728>
  4236b0:	sub	x0, x29, #0x40
  4236b4:	add	x1, sp, #0x190
  4236b8:	add	x2, sp, #0x188
  4236bc:	add	x3, sp, #0x17c
  4236c0:	add	x4, sp, #0x180
  4236c4:	bl	423e1c <parse_line>
  4236c8:	stur	w0, [x29, #-68]
  4236cc:	ldur	w8, [x29, #-68]
  4236d0:	cmp	w8, #0x0
  4236d4:	cset	w8, ge  // ge = tcont
  4236d8:	tbnz	w8, #0, 423898 <rule_add_line+0x6d8>
  4236dc:	ldur	x8, [x29, #-16]
  4236e0:	str	x8, [sp, #368]
  4236e4:	ldr	x8, [sp, #368]
  4236e8:	cbz	x8, 4236fc <rule_add_line+0x53c>
  4236ec:	ldr	x8, [sp, #368]
  4236f0:	ldr	x8, [x8, #32]
  4236f4:	str	x8, [sp, #152]
  4236f8:	b	423704 <rule_add_line+0x544>
  4236fc:	mov	x8, xzr
  423700:	str	x8, [sp, #152]
  423704:	ldr	x8, [sp, #152]
  423708:	str	x8, [sp, #360]
  42370c:	ldr	x8, [sp, #360]
  423710:	cbz	x8, 423724 <rule_add_line+0x564>
  423714:	ldr	x8, [sp, #360]
  423718:	ldr	x8, [x8, #8]
  42371c:	str	x8, [sp, #144]
  423720:	b	42372c <rule_add_line+0x56c>
  423724:	mov	x8, xzr
  423728:	str	x8, [sp, #144]
  42372c:	ldr	x8, [sp, #144]
  423730:	str	x8, [sp, #352]
  423734:	ldr	x8, [sp, #360]
  423738:	cbz	x8, 42374c <rule_add_line+0x58c>
  42373c:	ldr	x8, [sp, #360]
  423740:	ldr	x8, [x8]
  423744:	str	x8, [sp, #136]
  423748:	b	423754 <rule_add_line+0x594>
  42374c:	mov	x8, xzr
  423750:	str	x8, [sp, #136]
  423754:	ldr	x8, [sp, #136]
  423758:	str	x8, [sp, #344]
  42375c:	mov	x8, xzr
  423760:	str	x8, [sp, #328]
  423764:	str	x8, [sp, #320]
  423768:	mov	w9, #0x3                   	// #3
  42376c:	str	w9, [sp, #316]
  423770:	ldur	w9, [x29, #-68]
  423774:	str	w9, [sp, #312]
  423778:	ldr	x8, [sp, #320]
  42377c:	cbz	x8, 4237bc <rule_add_line+0x5fc>
  423780:	mov	w0, #0x1                   	// #1
  423784:	bl	40a3f0 <log_get_max_level_realm@plt>
  423788:	ldr	w8, [sp, #316]
  42378c:	cmp	w0, w8
  423790:	cset	w8, ge  // ge = tcont
  423794:	mov	w9, #0x1                   	// #1
  423798:	eor	w8, w8, #0x1
  42379c:	eor	w8, w8, w9
  4237a0:	and	w8, w8, #0x1
  4237a4:	mov	w1, w8
  4237a8:	sxtw	x10, w1
  4237ac:	cbz	x10, 4237bc <rule_add_line+0x5fc>
  4237b0:	ldr	x0, [sp, #320]
  4237b4:	add	x1, sp, #0x148
  4237b8:	bl	40a860 <sd_device_get_sysname@plt>
  4237bc:	ldr	w0, [sp, #316]
  4237c0:	ldr	w1, [sp, #312]
  4237c4:	ldr	x8, [sp, #328]
  4237c8:	mov	x9, xzr
  4237cc:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4237d0:	add	x10, x10, #0xa46
  4237d4:	cmp	x8, #0x0
  4237d8:	csel	x5, x10, x9, ne  // ne = any
  4237dc:	ldr	x6, [sp, #328]
  4237e0:	ldr	x8, [sp, #344]
  4237e4:	str	w0, [sp, #132]
  4237e8:	mov	x0, x8
  4237ec:	str	w1, [sp, #128]
  4237f0:	str	x5, [sp, #120]
  4237f4:	str	x6, [sp, #112]
  4237f8:	bl	424274 <strna>
  4237fc:	ldr	x8, [sp, #352]
  423800:	str	x0, [sp, #104]
  423804:	cbz	x8, 423818 <rule_add_line+0x658>
  423808:	ldr	x8, [sp, #352]
  42380c:	ldr	w9, [x8, #8]
  423810:	str	w9, [sp, #100]
  423814:	b	423820 <rule_add_line+0x660>
  423818:	mov	w8, wzr
  42381c:	str	w8, [sp, #100]
  423820:	ldr	w8, [sp, #100]
  423824:	ldr	w0, [sp, #132]
  423828:	ldr	w1, [sp, #128]
  42382c:	ldr	x2, [sp, #208]
  423830:	mov	w3, #0x462                 	// #1122
  423834:	ldr	x4, [sp, #200]
  423838:	ldr	x5, [sp, #120]
  42383c:	ldr	x6, [sp, #112]
  423840:	mov	x9, xzr
  423844:	mov	x7, x9
  423848:	mov	x10, sp
  42384c:	str	x9, [x10]
  423850:	mov	x9, sp
  423854:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  423858:	add	x10, x10, #0x749
  42385c:	str	x10, [x9, #8]
  423860:	mov	x9, sp
  423864:	ldr	x10, [sp, #104]
  423868:	str	x10, [x9, #16]
  42386c:	mov	x9, sp
  423870:	str	w8, [x9, #24]
  423874:	bl	40a870 <log_object_internal@plt>
  423878:	str	w0, [sp, #308]
  42387c:	ldr	w8, [sp, #308]
  423880:	str	w8, [sp, #340]
  423884:	ldr	w8, [sp, #340]
  423888:	stur	w8, [x29, #-4]
  42388c:	mov	w8, #0x1                   	// #1
  423890:	stur	w8, [x29, #-72]
  423894:	b	423ad4 <rule_add_line+0x914>
  423898:	ldur	w8, [x29, #-68]
  42389c:	cbnz	w8, 4238a4 <rule_add_line+0x6e4>
  4238a0:	b	4238e8 <rule_add_line+0x728>
  4238a4:	ldur	x0, [x29, #-16]
  4238a8:	ldr	x1, [sp, #400]
  4238ac:	ldr	x2, [sp, #392]
  4238b0:	ldr	w3, [sp, #380]
  4238b4:	ldr	x4, [sp, #384]
  4238b8:	bl	4242b0 <parse_token>
  4238bc:	stur	w0, [x29, #-68]
  4238c0:	ldur	w8, [x29, #-68]
  4238c4:	cmp	w8, #0x0
  4238c8:	cset	w8, ge  // ge = tcont
  4238cc:	tbnz	w8, #0, 4238e4 <rule_add_line+0x724>
  4238d0:	ldur	w8, [x29, #-68]
  4238d4:	stur	w8, [x29, #-4]
  4238d8:	mov	w8, #0x1                   	// #1
  4238dc:	stur	w8, [x29, #-72]
  4238e0:	b	423ad4 <rule_add_line+0x914>
  4238e4:	b	42369c <rule_add_line+0x4dc>
  4238e8:	ldur	x8, [x29, #-40]
  4238ec:	ldr	w9, [x8, #12]
  4238f0:	cbnz	w9, 423aa8 <rule_add_line+0x8e8>
  4238f4:	ldur	x8, [x29, #-16]
  4238f8:	str	x8, [sp, #296]
  4238fc:	ldr	x8, [sp, #296]
  423900:	cbz	x8, 423914 <rule_add_line+0x754>
  423904:	ldr	x8, [sp, #296]
  423908:	ldr	x8, [x8, #32]
  42390c:	str	x8, [sp, #88]
  423910:	b	42391c <rule_add_line+0x75c>
  423914:	mov	x8, xzr
  423918:	str	x8, [sp, #88]
  42391c:	ldr	x8, [sp, #88]
  423920:	str	x8, [sp, #288]
  423924:	ldr	x8, [sp, #288]
  423928:	cbz	x8, 42393c <rule_add_line+0x77c>
  42392c:	ldr	x8, [sp, #288]
  423930:	ldr	x8, [x8, #8]
  423934:	str	x8, [sp, #80]
  423938:	b	423944 <rule_add_line+0x784>
  42393c:	mov	x8, xzr
  423940:	str	x8, [sp, #80]
  423944:	ldr	x8, [sp, #80]
  423948:	str	x8, [sp, #280]
  42394c:	ldr	x8, [sp, #288]
  423950:	cbz	x8, 423964 <rule_add_line+0x7a4>
  423954:	ldr	x8, [sp, #288]
  423958:	ldr	x8, [x8]
  42395c:	str	x8, [sp, #72]
  423960:	b	42396c <rule_add_line+0x7ac>
  423964:	mov	x8, xzr
  423968:	str	x8, [sp, #72]
  42396c:	ldr	x8, [sp, #72]
  423970:	str	x8, [sp, #272]
  423974:	mov	x8, xzr
  423978:	str	x8, [sp, #256]
  42397c:	str	x8, [sp, #248]
  423980:	mov	w9, #0x4                   	// #4
  423984:	str	w9, [sp, #244]
  423988:	str	wzr, [sp, #240]
  42398c:	ldr	x8, [sp, #248]
  423990:	cbz	x8, 4239d0 <rule_add_line+0x810>
  423994:	mov	w0, #0x1                   	// #1
  423998:	bl	40a3f0 <log_get_max_level_realm@plt>
  42399c:	ldr	w8, [sp, #244]
  4239a0:	cmp	w0, w8
  4239a4:	cset	w8, ge  // ge = tcont
  4239a8:	mov	w9, #0x1                   	// #1
  4239ac:	eor	w8, w8, #0x1
  4239b0:	eor	w8, w8, w9
  4239b4:	and	w8, w8, #0x1
  4239b8:	mov	w1, w8
  4239bc:	sxtw	x10, w1
  4239c0:	cbz	x10, 4239d0 <rule_add_line+0x810>
  4239c4:	ldr	x0, [sp, #248]
  4239c8:	add	x1, sp, #0x100
  4239cc:	bl	40a860 <sd_device_get_sysname@plt>
  4239d0:	ldr	w0, [sp, #244]
  4239d4:	ldr	w1, [sp, #240]
  4239d8:	ldr	x8, [sp, #256]
  4239dc:	mov	x9, xzr
  4239e0:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4239e4:	add	x10, x10, #0xa46
  4239e8:	cmp	x8, #0x0
  4239ec:	csel	x5, x10, x9, ne  // ne = any
  4239f0:	ldr	x6, [sp, #256]
  4239f4:	ldr	x8, [sp, #272]
  4239f8:	str	w0, [sp, #68]
  4239fc:	mov	x0, x8
  423a00:	str	w1, [sp, #64]
  423a04:	str	x5, [sp, #56]
  423a08:	str	x6, [sp, #48]
  423a0c:	bl	424274 <strna>
  423a10:	ldr	x8, [sp, #280]
  423a14:	str	x0, [sp, #40]
  423a18:	cbz	x8, 423a2c <rule_add_line+0x86c>
  423a1c:	ldr	x8, [sp, #280]
  423a20:	ldr	w9, [x8, #8]
  423a24:	str	w9, [sp, #36]
  423a28:	b	423a34 <rule_add_line+0x874>
  423a2c:	mov	w8, wzr
  423a30:	str	w8, [sp, #36]
  423a34:	ldr	w8, [sp, #36]
  423a38:	ldr	w0, [sp, #68]
  423a3c:	ldr	w1, [sp, #64]
  423a40:	ldr	x2, [sp, #208]
  423a44:	mov	w3, #0x46c                 	// #1132
  423a48:	ldr	x4, [sp, #200]
  423a4c:	ldr	x5, [sp, #56]
  423a50:	ldr	x6, [sp, #48]
  423a54:	mov	x9, xzr
  423a58:	mov	x7, x9
  423a5c:	mov	x10, sp
  423a60:	str	x9, [x10]
  423a64:	mov	x9, sp
  423a68:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  423a6c:	add	x10, x10, #0x771
  423a70:	str	x10, [x9, #8]
  423a74:	mov	x9, sp
  423a78:	ldr	x10, [sp, #40]
  423a7c:	str	x10, [x9, #16]
  423a80:	mov	x9, sp
  423a84:	str	w8, [x9, #24]
  423a88:	bl	40a870 <log_object_internal@plt>
  423a8c:	str	w0, [sp, #236]
  423a90:	ldr	w8, [sp, #236]
  423a94:	str	w8, [sp, #268]
  423a98:	stur	wzr, [x29, #-4]
  423a9c:	mov	w8, #0x1                   	// #1
  423aa0:	stur	w8, [x29, #-72]
  423aa4:	b	423ad4 <rule_add_line+0x914>
  423aa8:	ldur	x0, [x29, #-40]
  423aac:	bl	430110 <sort_tokens>
  423ab0:	ldur	x8, [x29, #-40]
  423ab4:	str	x8, [sp, #224]
  423ab8:	mov	x8, xzr
  423abc:	stur	x8, [x29, #-40]
  423ac0:	ldr	x8, [sp, #224]
  423ac4:	str	x8, [sp, #216]
  423ac8:	stur	wzr, [x29, #-4]
  423acc:	mov	w9, #0x1                   	// #1
  423ad0:	stur	w9, [x29, #-72]
  423ad4:	sub	x0, x29, #0x30
  423ad8:	bl	4230c8 <freep>
  423adc:	sub	x0, x29, #0x28
  423ae0:	bl	423da8 <udev_rule_line_freep>
  423ae4:	ldur	w0, [x29, #-4]
  423ae8:	add	sp, sp, #0x2a0
  423aec:	ldr	x28, [sp, #16]
  423af0:	ldp	x29, x30, [sp], #32
  423af4:	ret

0000000000423af8 <rule_resolve_goto>:
  423af8:	sub	sp, sp, #0x70
  423afc:	stp	x29, x30, [sp, #96]
  423b00:	add	x29, sp, #0x60
  423b04:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  423b08:	add	x8, x8, #0x48a
  423b0c:	add	x8, x8, #0x3
  423b10:	stur	x0, [x29, #-8]
  423b14:	str	x8, [sp, #24]
  423b18:	ldur	x8, [x29, #-8]
  423b1c:	cmp	x8, #0x0
  423b20:	cset	w9, ne  // ne = any
  423b24:	mov	w10, #0x1                   	// #1
  423b28:	eor	w9, w9, #0x1
  423b2c:	eor	w9, w9, w10
  423b30:	eor	w9, w9, w10
  423b34:	and	w9, w9, #0x1
  423b38:	mov	w0, w9
  423b3c:	sxtw	x8, w0
  423b40:	cbz	x8, 423b64 <rule_resolve_goto+0x6c>
  423b44:	mov	w0, #0x1                   	// #1
  423b48:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  423b4c:	add	x1, x1, #0x3aa
  423b50:	ldr	x2, [sp, #24]
  423b54:	mov	w3, #0x478                 	// #1144
  423b58:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  423b5c:	add	x4, x4, #0x3b4
  423b60:	bl	40a540 <log_assert_failed_realm@plt>
  423b64:	ldur	x8, [x29, #-8]
  423b68:	ldr	x8, [x8, #16]
  423b6c:	stur	x8, [x29, #-16]
  423b70:	ldur	x8, [x29, #-16]
  423b74:	mov	w9, #0x0                   	// #0
  423b78:	str	w9, [sp, #20]
  423b7c:	cbz	x8, 423b94 <rule_resolve_goto+0x9c>
  423b80:	ldur	x8, [x29, #-16]
  423b84:	ldr	x8, [x8, #64]
  423b88:	stur	x8, [x29, #-24]
  423b8c:	mov	w9, #0x1                   	// #1
  423b90:	str	w9, [sp, #20]
  423b94:	ldr	w8, [sp, #20]
  423b98:	tbnz	w8, #0, 423ba0 <rule_resolve_goto+0xa8>
  423b9c:	b	423d9c <rule_resolve_goto+0x2a4>
  423ba0:	ldur	x8, [x29, #-16]
  423ba4:	ldr	w9, [x8, #12]
  423ba8:	mvn	w9, w9
  423bac:	and	w9, w9, #0x8
  423bb0:	cbz	w9, 423bb8 <rule_resolve_goto+0xc0>
  423bb4:	b	423d90 <rule_resolve_goto+0x298>
  423bb8:	ldur	x8, [x29, #-16]
  423bbc:	ldr	x8, [x8, #64]
  423bc0:	stur	x8, [x29, #-32]
  423bc4:	ldur	x8, [x29, #-32]
  423bc8:	cbz	x8, 423c08 <rule_resolve_goto+0x110>
  423bcc:	ldur	x8, [x29, #-32]
  423bd0:	ldr	x0, [x8, #16]
  423bd4:	ldur	x8, [x29, #-16]
  423bd8:	ldr	x1, [x8, #24]
  423bdc:	bl	43237c <streq_ptr>
  423be0:	tbnz	w0, #0, 423be8 <rule_resolve_goto+0xf0>
  423be4:	b	423bf8 <rule_resolve_goto+0x100>
  423be8:	ldur	x8, [x29, #-32]
  423bec:	ldur	x9, [x29, #-16]
  423bf0:	str	x8, [x9, #32]
  423bf4:	b	423c08 <rule_resolve_goto+0x110>
  423bf8:	ldur	x8, [x29, #-32]
  423bfc:	ldr	x8, [x8, #64]
  423c00:	stur	x8, [x29, #-32]
  423c04:	b	423bc4 <rule_resolve_goto+0xcc>
  423c08:	ldur	x8, [x29, #-16]
  423c0c:	ldr	x8, [x8, #32]
  423c10:	cbnz	x8, 423d90 <rule_resolve_goto+0x298>
  423c14:	mov	w8, #0x3                   	// #3
  423c18:	stur	w8, [x29, #-36]
  423c1c:	stur	wzr, [x29, #-40]
  423c20:	mov	w8, #0x1                   	// #1
  423c24:	stur	w8, [x29, #-44]
  423c28:	ldur	w0, [x29, #-44]
  423c2c:	bl	40a3f0 <log_get_max_level_realm@plt>
  423c30:	ldur	w8, [x29, #-36]
  423c34:	and	w8, w8, #0x7
  423c38:	cmp	w0, w8
  423c3c:	b.lt	423c94 <rule_resolve_goto+0x19c>  // b.tstop
  423c40:	ldur	w8, [x29, #-44]
  423c44:	ldur	w9, [x29, #-36]
  423c48:	orr	w0, w9, w8, lsl #10
  423c4c:	ldur	w1, [x29, #-40]
  423c50:	ldur	x10, [x29, #-8]
  423c54:	ldr	x6, [x10]
  423c58:	ldur	x10, [x29, #-16]
  423c5c:	ldr	w7, [x10, #8]
  423c60:	ldur	x10, [x29, #-16]
  423c64:	ldr	x10, [x10, #24]
  423c68:	ldr	x2, [sp, #24]
  423c6c:	mov	w3, #0x487                 	// #1159
  423c70:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  423c74:	add	x4, x4, #0x3db
  423c78:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  423c7c:	add	x5, x5, #0x3ed
  423c80:	mov	x11, sp
  423c84:	str	x10, [x11]
  423c88:	bl	40a400 <log_internal_realm@plt>
  423c8c:	str	w0, [sp, #16]
  423c90:	b	423ca8 <rule_resolve_goto+0x1b0>
  423c94:	ldur	w0, [x29, #-40]
  423c98:	bl	40a410 <abs@plt>
  423c9c:	mov	w8, wzr
  423ca0:	subs	w8, w8, w0, uxtb
  423ca4:	str	w8, [sp, #16]
  423ca8:	ldr	w8, [sp, #16]
  423cac:	str	w8, [sp, #48]
  423cb0:	ldur	x9, [x29, #-16]
  423cb4:	ldr	w8, [x9, #12]
  423cb8:	and	w8, w8, #0xfffffff7
  423cbc:	ldur	x9, [x29, #-16]
  423cc0:	str	w8, [x9, #12]
  423cc4:	ldur	x9, [x29, #-16]
  423cc8:	mov	x10, xzr
  423ccc:	str	x10, [x9, #24]
  423cd0:	ldur	x9, [x29, #-16]
  423cd4:	ldr	w8, [x9, #12]
  423cd8:	and	w8, w8, #0xffffffef
  423cdc:	cbnz	w8, 423d90 <rule_resolve_goto+0x298>
  423ce0:	mov	w8, #0x5                   	// #5
  423ce4:	str	w8, [sp, #44]
  423ce8:	str	wzr, [sp, #40]
  423cec:	mov	w8, #0x1                   	// #1
  423cf0:	str	w8, [sp, #36]
  423cf4:	ldr	w0, [sp, #36]
  423cf8:	bl	40a3f0 <log_get_max_level_realm@plt>
  423cfc:	ldr	w8, [sp, #44]
  423d00:	and	w8, w8, #0x7
  423d04:	cmp	w0, w8
  423d08:	b.lt	423d50 <rule_resolve_goto+0x258>  // b.tstop
  423d0c:	ldr	w8, [sp, #36]
  423d10:	ldr	w9, [sp, #44]
  423d14:	orr	w0, w9, w8, lsl #10
  423d18:	ldr	w1, [sp, #40]
  423d1c:	ldur	x10, [x29, #-8]
  423d20:	ldr	x6, [x10]
  423d24:	ldur	x10, [x29, #-16]
  423d28:	ldr	w7, [x10, #8]
  423d2c:	ldr	x2, [sp, #24]
  423d30:	mov	w3, #0x48e                 	// #1166
  423d34:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  423d38:	add	x4, x4, #0x3db
  423d3c:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  423d40:	add	x5, x5, #0x41e
  423d44:	bl	40a400 <log_internal_realm@plt>
  423d48:	str	w0, [sp, #12]
  423d4c:	b	423d64 <rule_resolve_goto+0x26c>
  423d50:	ldr	w0, [sp, #40]
  423d54:	bl	40a410 <abs@plt>
  423d58:	mov	w8, wzr
  423d5c:	subs	w8, w8, w0, uxtb
  423d60:	str	w8, [sp, #12]
  423d64:	ldr	w8, [sp, #12]
  423d68:	str	w8, [sp, #32]
  423d6c:	ldur	x9, [x29, #-16]
  423d70:	ldr	w8, [x9, #12]
  423d74:	cmp	w8, #0x10
  423d78:	b.ne	423d88 <rule_resolve_goto+0x290>  // b.any
  423d7c:	ldur	x0, [x29, #-16]
  423d80:	bl	422f68 <udev_rule_line_clear_tokens>
  423d84:	b	423d90 <rule_resolve_goto+0x298>
  423d88:	ldur	x0, [x29, #-16]
  423d8c:	bl	422dbc <udev_rule_line_free>
  423d90:	ldur	x8, [x29, #-24]
  423d94:	stur	x8, [x29, #-16]
  423d98:	b	423b70 <rule_resolve_goto+0x78>
  423d9c:	ldp	x29, x30, [sp, #96]
  423da0:	add	sp, sp, #0x70
  423da4:	ret

0000000000423da8 <udev_rule_line_freep>:
  423da8:	sub	sp, sp, #0x20
  423dac:	stp	x29, x30, [sp, #16]
  423db0:	add	x29, sp, #0x10
  423db4:	str	x0, [sp, #8]
  423db8:	ldr	x8, [sp, #8]
  423dbc:	ldr	x8, [x8]
  423dc0:	cbz	x8, 423dd0 <udev_rule_line_freep+0x28>
  423dc4:	ldr	x8, [sp, #8]
  423dc8:	ldr	x0, [x8]
  423dcc:	bl	422dbc <udev_rule_line_free>
  423dd0:	ldp	x29, x30, [sp, #16]
  423dd4:	add	sp, sp, #0x20
  423dd8:	ret

0000000000423ddc <isempty>:
  423ddc:	sub	sp, sp, #0x10
  423de0:	str	x0, [sp, #8]
  423de4:	ldr	x8, [sp, #8]
  423de8:	mov	w9, #0x1                   	// #1
  423dec:	str	w9, [sp, #4]
  423df0:	cbz	x8, 423e0c <isempty+0x30>
  423df4:	ldr	x8, [sp, #8]
  423df8:	ldrb	w9, [x8]
  423dfc:	cmp	w9, #0x0
  423e00:	cset	w9, ne  // ne = any
  423e04:	eor	w9, w9, #0x1
  423e08:	str	w9, [sp, #4]
  423e0c:	ldr	w8, [sp, #4]
  423e10:	and	w0, w8, #0x1
  423e14:	add	sp, sp, #0x10
  423e18:	ret

0000000000423e1c <parse_line>:
  423e1c:	sub	sp, sp, #0x90
  423e20:	stp	x29, x30, [sp, #128]
  423e24:	add	x29, sp, #0x80
  423e28:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  423e2c:	add	x8, x8, #0x48a
  423e30:	add	x8, x8, #0x3
  423e34:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  423e38:	add	x9, x9, #0x7a0
  423e3c:	stur	x0, [x29, #-16]
  423e40:	stur	x1, [x29, #-24]
  423e44:	stur	x2, [x29, #-32]
  423e48:	stur	x3, [x29, #-40]
  423e4c:	stur	x4, [x29, #-48]
  423e50:	str	x8, [sp, #8]
  423e54:	str	x9, [sp]
  423e58:	ldur	x8, [x29, #-16]
  423e5c:	cmp	x8, #0x0
  423e60:	cset	w9, ne  // ne = any
  423e64:	mov	w10, #0x1                   	// #1
  423e68:	eor	w9, w9, #0x1
  423e6c:	eor	w9, w9, w10
  423e70:	eor	w9, w9, w10
  423e74:	and	w9, w9, #0x1
  423e78:	mov	w0, w9
  423e7c:	sxtw	x8, w0
  423e80:	cbz	x8, 423ea0 <parse_line+0x84>
  423e84:	mov	w0, #0x1                   	// #1
  423e88:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423e8c:	add	x1, x1, #0x79b
  423e90:	ldr	x2, [sp, #8]
  423e94:	mov	w3, #0x3e2                 	// #994
  423e98:	ldr	x4, [sp]
  423e9c:	bl	40a540 <log_assert_failed_realm@plt>
  423ea0:	ldur	x8, [x29, #-16]
  423ea4:	ldr	x8, [x8]
  423ea8:	cmp	x8, #0x0
  423eac:	cset	w9, ne  // ne = any
  423eb0:	mov	w10, #0x1                   	// #1
  423eb4:	eor	w9, w9, #0x1
  423eb8:	eor	w9, w9, w10
  423ebc:	eor	w9, w9, w10
  423ec0:	and	w9, w9, #0x1
  423ec4:	mov	w0, w9
  423ec8:	sxtw	x8, w0
  423ecc:	cbz	x8, 423eec <parse_line+0xd0>
  423ed0:	mov	w0, #0x1                   	// #1
  423ed4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423ed8:	add	x1, x1, #0x7eb
  423edc:	ldr	x2, [sp, #8]
  423ee0:	mov	w3, #0x3e3                 	// #995
  423ee4:	ldr	x4, [sp]
  423ee8:	bl	40a540 <log_assert_failed_realm@plt>
  423eec:	ldur	x8, [x29, #-24]
  423ef0:	cmp	x8, #0x0
  423ef4:	cset	w9, ne  // ne = any
  423ef8:	mov	w10, #0x1                   	// #1
  423efc:	eor	w9, w9, #0x1
  423f00:	eor	w9, w9, w10
  423f04:	eor	w9, w9, w10
  423f08:	and	w9, w9, #0x1
  423f0c:	mov	w0, w9
  423f10:	sxtw	x8, w0
  423f14:	cbz	x8, 423f34 <parse_line+0x118>
  423f18:	mov	w0, #0x1                   	// #1
  423f1c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423f20:	add	x1, x1, #0x7f1
  423f24:	ldr	x2, [sp, #8]
  423f28:	mov	w3, #0x3e4                 	// #996
  423f2c:	ldr	x4, [sp]
  423f30:	bl	40a540 <log_assert_failed_realm@plt>
  423f34:	ldur	x8, [x29, #-40]
  423f38:	cmp	x8, #0x0
  423f3c:	cset	w9, ne  // ne = any
  423f40:	mov	w10, #0x1                   	// #1
  423f44:	eor	w9, w9, #0x1
  423f48:	eor	w9, w9, w10
  423f4c:	eor	w9, w9, w10
  423f50:	and	w9, w9, #0x1
  423f54:	mov	w0, w9
  423f58:	sxtw	x8, w0
  423f5c:	cbz	x8, 423f7c <parse_line+0x160>
  423f60:	mov	w0, #0x1                   	// #1
  423f64:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423f68:	add	x1, x1, #0x7f9
  423f6c:	ldr	x2, [sp, #8]
  423f70:	mov	w3, #0x3e5                 	// #997
  423f74:	ldr	x4, [sp]
  423f78:	bl	40a540 <log_assert_failed_realm@plt>
  423f7c:	ldur	x8, [x29, #-48]
  423f80:	cmp	x8, #0x0
  423f84:	cset	w9, ne  // ne = any
  423f88:	mov	w10, #0x1                   	// #1
  423f8c:	eor	w9, w9, #0x1
  423f90:	eor	w9, w9, w10
  423f94:	eor	w9, w9, w10
  423f98:	and	w9, w9, #0x1
  423f9c:	mov	w0, w9
  423fa0:	sxtw	x8, w0
  423fa4:	cbz	x8, 423fc4 <parse_line+0x1a8>
  423fa8:	mov	w0, #0x1                   	// #1
  423fac:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423fb0:	add	x1, x1, #0x800
  423fb4:	ldr	x2, [sp, #8]
  423fb8:	mov	w3, #0x3e6                 	// #998
  423fbc:	ldr	x4, [sp]
  423fc0:	bl	40a540 <log_assert_failed_realm@plt>
  423fc4:	ldur	x8, [x29, #-16]
  423fc8:	ldr	x0, [x8]
  423fcc:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  423fd0:	add	x1, x1, #0x80a
  423fd4:	bl	423154 <skip_leading_chars>
  423fd8:	stur	x0, [x29, #-56]
  423fdc:	ldur	x0, [x29, #-56]
  423fe0:	bl	423ddc <isempty>
  423fe4:	tbnz	w0, #0, 423fec <parse_line+0x1d0>
  423fe8:	b	423ff4 <parse_line+0x1d8>
  423fec:	stur	wzr, [x29, #-4]
  423ff0:	b	424264 <parse_line+0x448>
  423ff4:	ldur	x8, [x29, #-56]
  423ff8:	str	x8, [sp, #64]
  423ffc:	ldr	x8, [sp, #64]
  424000:	ldrb	w9, [x8]
  424004:	cbnz	w9, 424014 <parse_line+0x1f8>
  424008:	mov	w8, #0xffffffea            	// #-22
  42400c:	stur	w8, [x29, #-4]
  424010:	b	424264 <parse_line+0x448>
  424014:	ldr	x8, [sp, #64]
  424018:	ldrb	w1, [x8]
  42401c:	adrp	x0, 467000 <on_inotify.__assert_in_set+0x3540>
  424020:	add	x0, x0, #0x810
  424024:	bl	40a8c0 <strchr@plt>
  424028:	cbz	x0, 424030 <parse_line+0x214>
  42402c:	b	42406c <parse_line+0x250>
  424030:	ldr	x8, [sp, #64]
  424034:	ldrb	w1, [x8]
  424038:	adrp	x0, 467000 <on_inotify.__assert_in_set+0x3540>
  42403c:	add	x0, x0, #0x817
  424040:	bl	40a8c0 <strchr@plt>
  424044:	cbz	x0, 42405c <parse_line+0x240>
  424048:	ldr	x8, [sp, #64]
  42404c:	ldrb	w9, [x8, #1]
  424050:	cmp	w9, #0x3d
  424054:	b.ne	42405c <parse_line+0x240>  // b.any
  424058:	b	42406c <parse_line+0x250>
  42405c:	ldr	x8, [sp, #64]
  424060:	add	x8, x8, #0x1
  424064:	str	x8, [sp, #64]
  424068:	b	423ffc <parse_line+0x1e0>
  42406c:	ldr	x8, [sp, #64]
  424070:	ldrb	w9, [x8]
  424074:	cmp	w9, #0x7b
  424078:	b.ne	4240c4 <parse_line+0x2a8>  // b.any
  42407c:	ldr	x8, [sp, #64]
  424080:	add	x8, x8, #0x1
  424084:	str	x8, [sp, #56]
  424088:	ldr	x0, [sp, #56]
  42408c:	mov	w1, #0x7d                  	// #125
  424090:	bl	40a8c0 <strchr@plt>
  424094:	str	x0, [sp, #48]
  424098:	ldr	x8, [sp, #48]
  42409c:	cbnz	x8, 4240ac <parse_line+0x290>
  4240a0:	mov	w8, #0xffffffea            	// #-22
  4240a4:	stur	w8, [x29, #-4]
  4240a8:	b	424264 <parse_line+0x448>
  4240ac:	ldr	x8, [sp, #48]
  4240b0:	add	x9, x8, #0x1
  4240b4:	str	x9, [sp, #48]
  4240b8:	mov	w10, #0x0                   	// #0
  4240bc:	strb	w10, [x8]
  4240c0:	b	4240d4 <parse_line+0x2b8>
  4240c4:	mov	x8, xzr
  4240c8:	str	x8, [sp, #56]
  4240cc:	ldr	x8, [sp, #64]
  4240d0:	str	x8, [sp, #48]
  4240d4:	ldr	x0, [sp, #48]
  4240d8:	mov	x8, xzr
  4240dc:	mov	x1, x8
  4240e0:	bl	423154 <skip_leading_chars>
  4240e4:	str	x0, [sp, #48]
  4240e8:	ldr	x0, [sp, #48]
  4240ec:	bl	430364 <parse_operator>
  4240f0:	str	w0, [sp, #20]
  4240f4:	ldr	w9, [sp, #20]
  4240f8:	cmp	w9, #0x0
  4240fc:	cset	w9, ge  // ge = tcont
  424100:	tbnz	w9, #0, 424110 <parse_line+0x2f4>
  424104:	mov	w8, #0xffffffea            	// #-22
  424108:	stur	w8, [x29, #-4]
  42410c:	b	424264 <parse_line+0x448>
  424110:	ldr	x8, [sp, #64]
  424114:	mov	w9, #0x0                   	// #0
  424118:	strb	w9, [x8]
  42411c:	ldr	w9, [sp, #20]
  424120:	mov	w10, #0x2                   	// #2
  424124:	mov	w11, #0x1                   	// #1
  424128:	cmp	w9, #0x4
  42412c:	csel	w9, w11, w10, eq  // eq = none
  424130:	ldr	x8, [sp, #48]
  424134:	mov	w0, w9
  424138:	sxtw	x12, w0
  42413c:	add	x8, x8, x12
  424140:	str	x8, [sp, #48]
  424144:	ldr	x0, [sp, #48]
  424148:	mov	x8, xzr
  42414c:	mov	x1, x8
  424150:	bl	423154 <skip_leading_chars>
  424154:	str	x0, [sp, #40]
  424158:	ldr	x8, [sp, #40]
  42415c:	ldrb	w9, [x8]
  424160:	cmp	w9, #0x22
  424164:	b.eq	424174 <parse_line+0x358>  // b.none
  424168:	mov	w8, #0xffffffea            	// #-22
  42416c:	stur	w8, [x29, #-4]
  424170:	b	424264 <parse_line+0x448>
  424174:	ldr	x8, [sp, #40]
  424178:	add	x8, x8, #0x1
  42417c:	str	x8, [sp, #40]
  424180:	ldr	x8, [sp, #40]
  424184:	str	x8, [sp, #24]
  424188:	str	x8, [sp, #32]
  42418c:	ldr	x8, [sp, #32]
  424190:	ldrb	w9, [x8]
  424194:	cmp	w9, #0x22
  424198:	b.ne	4241a0 <parse_line+0x384>  // b.any
  42419c:	b	424210 <parse_line+0x3f4>
  4241a0:	ldr	x8, [sp, #32]
  4241a4:	ldrb	w9, [x8]
  4241a8:	cbnz	w9, 4241b8 <parse_line+0x39c>
  4241ac:	mov	w8, #0xffffffea            	// #-22
  4241b0:	stur	w8, [x29, #-4]
  4241b4:	b	424264 <parse_line+0x448>
  4241b8:	ldr	x8, [sp, #32]
  4241bc:	ldrb	w9, [x8]
  4241c0:	cmp	w9, #0x5c
  4241c4:	b.ne	4241e4 <parse_line+0x3c8>  // b.any
  4241c8:	ldr	x8, [sp, #32]
  4241cc:	ldrb	w9, [x8, #1]
  4241d0:	cmp	w9, #0x22
  4241d4:	b.ne	4241e4 <parse_line+0x3c8>  // b.any
  4241d8:	ldr	x8, [sp, #32]
  4241dc:	add	x8, x8, #0x1
  4241e0:	str	x8, [sp, #32]
  4241e4:	ldr	x8, [sp, #32]
  4241e8:	ldrb	w9, [x8]
  4241ec:	ldr	x8, [sp, #24]
  4241f0:	strb	w9, [x8]
  4241f4:	ldr	x8, [sp, #32]
  4241f8:	add	x8, x8, #0x1
  4241fc:	str	x8, [sp, #32]
  424200:	ldr	x8, [sp, #24]
  424204:	add	x8, x8, #0x1
  424208:	str	x8, [sp, #24]
  42420c:	b	42418c <parse_line+0x370>
  424210:	ldr	x8, [sp, #24]
  424214:	mov	w9, #0x0                   	// #0
  424218:	strb	w9, [x8]
  42421c:	ldr	x8, [sp, #32]
  424220:	add	x8, x8, #0x1
  424224:	ldur	x10, [x29, #-16]
  424228:	str	x8, [x10]
  42422c:	ldur	x8, [x29, #-56]
  424230:	ldur	x10, [x29, #-24]
  424234:	str	x8, [x10]
  424238:	ldr	x8, [sp, #56]
  42423c:	ldur	x10, [x29, #-32]
  424240:	str	x8, [x10]
  424244:	ldr	w9, [sp, #20]
  424248:	ldur	x8, [x29, #-40]
  42424c:	str	w9, [x8]
  424250:	ldr	x8, [sp, #40]
  424254:	ldur	x10, [x29, #-48]
  424258:	str	x8, [x10]
  42425c:	mov	w9, #0x1                   	// #1
  424260:	stur	w9, [x29, #-4]
  424264:	ldur	w0, [x29, #-4]
  424268:	ldp	x29, x30, [sp, #128]
  42426c:	add	sp, sp, #0x90
  424270:	ret

0000000000424274 <strna>:
  424274:	sub	sp, sp, #0x20
  424278:	str	x0, [sp, #24]
  42427c:	ldr	x8, [sp, #24]
  424280:	str	x8, [sp, #16]
  424284:	cbz	x8, 424294 <strna+0x20>
  424288:	ldr	x8, [sp, #16]
  42428c:	str	x8, [sp, #8]
  424290:	b	4242a0 <strna+0x2c>
  424294:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  424298:	add	x8, x8, #0x862
  42429c:	str	x8, [sp, #8]
  4242a0:	ldr	x8, [sp, #8]
  4242a4:	mov	x0, x8
  4242a8:	add	sp, sp, #0x20
  4242ac:	ret

00000000004242b0 <parse_token>:
  4242b0:	stp	x29, x30, [sp, #-32]!
  4242b4:	str	x28, [sp, #16]
  4242b8:	mov	x29, sp
  4242bc:	sub	sp, sp, #0x2, lsl #12
  4242c0:	sub	sp, sp, #0xe20
  4242c4:	add	x8, sp, #0x2, lsl #12
  4242c8:	add	x8, x8, #0x6c0
  4242cc:	add	x9, sp, #0x1, lsl #12
  4242d0:	add	x9, x9, #0x618
  4242d4:	mov	w10, #0x0                   	// #0
  4242d8:	mov	w11, #0x1                   	// #1
  4242dc:	adrp	x12, 464000 <on_inotify.__assert_in_set+0x540>
  4242e0:	add	x12, x12, #0xa46
  4242e4:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  4242e8:	add	x13, x13, #0x48a
  4242ec:	add	x13, x13, #0x3
  4242f0:	adrp	x14, 467000 <on_inotify.__assert_in_set+0x3540>
  4242f4:	add	x14, x14, #0x8e0
  4242f8:	adrp	x15, 467000 <on_inotify.__assert_in_set+0x3540>
  4242fc:	add	x15, x15, #0x8ec
  424300:	adrp	x16, 467000 <on_inotify.__assert_in_set+0x3540>
  424304:	add	x16, x16, #0x90f
  424308:	adrp	x17, 467000 <on_inotify.__assert_in_set+0x3540>
  42430c:	add	x17, x17, #0x905
  424310:	adrp	x18, 467000 <on_inotify.__assert_in_set+0x3540>
  424314:	add	x18, x18, #0xe7a
  424318:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  42431c:	add	x5, x5, #0x866
  424320:	str	x0, [x8, #1872]
  424324:	str	x1, [x8, #1864]
  424328:	str	x2, [x8, #1856]
  42432c:	stur	w3, [x29, #-36]
  424330:	str	x4, [x8, #1840]
  424334:	strb	w10, [x8, #1838]
  424338:	ldur	w10, [x29, #-36]
  42433c:	subs	w10, w10, #0x0
  424340:	cmp	w10, #0x1
  424344:	cset	w10, ls  // ls = plast
  424348:	eor	w10, w10, w11
  42434c:	str	x8, [sp, #5512]
  424350:	str	x9, [sp, #5504]
  424354:	str	x12, [sp, #5496]
  424358:	str	x13, [sp, #5488]
  42435c:	str	x14, [sp, #5480]
  424360:	str	x15, [sp, #5472]
  424364:	str	x16, [sp, #5464]
  424368:	str	x17, [sp, #5456]
  42436c:	str	x18, [sp, #5448]
  424370:	str	x5, [sp, #5440]
  424374:	tbnz	w10, #0, 42438c <parse_token+0xdc>
  424378:	b	42437c <parse_token+0xcc>
  42437c:	mov	w8, #0x1                   	// #1
  424380:	ldr	x9, [sp, #5512]
  424384:	strb	w8, [x9, #1838]
  424388:	b	42438c <parse_token+0xdc>
  42438c:	ldr	x8, [sp, #5512]
  424390:	ldrb	w9, [x8, #1838]
  424394:	mov	w10, #0x1                   	// #1
  424398:	and	w9, w9, w10
  42439c:	strb	w9, [x8, #1837]
  4243a0:	ldrb	w9, [x8, #1837]
  4243a4:	and	w9, w9, #0x1
  4243a8:	strb	w9, [x8, #1839]
  4243ac:	ldr	x8, [sp, #5512]
  4243b0:	ldr	x9, [x8, #1872]
  4243b4:	cmp	x9, #0x0
  4243b8:	cset	w10, ne  // ne = any
  4243bc:	mov	w11, #0x1                   	// #1
  4243c0:	eor	w10, w10, #0x1
  4243c4:	eor	w10, w10, w11
  4243c8:	eor	w10, w10, w11
  4243cc:	and	w10, w10, #0x1
  4243d0:	mov	w0, w10
  4243d4:	sxtw	x9, w0
  4243d8:	cbz	x9, 4243f8 <parse_token+0x148>
  4243dc:	mov	w0, #0x1                   	// #1
  4243e0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4243e4:	add	x1, x1, #0x333
  4243e8:	ldr	x2, [sp, #5488]
  4243ec:	mov	w3, #0x21c                 	// #540
  4243f0:	ldr	x4, [sp, #5440]
  4243f4:	bl	40a540 <log_assert_failed_realm@plt>
  4243f8:	ldr	x8, [sp, #5512]
  4243fc:	ldr	x9, [x8, #1872]
  424400:	ldr	x9, [x9, #32]
  424404:	cmp	x9, #0x0
  424408:	cset	w10, ne  // ne = any
  42440c:	mov	w11, #0x1                   	// #1
  424410:	eor	w10, w10, #0x1
  424414:	eor	w10, w10, w11
  424418:	eor	w10, w10, w11
  42441c:	and	w10, w10, #0x1
  424420:	mov	w0, w10
  424424:	sxtw	x9, w0
  424428:	cbz	x9, 424448 <parse_token+0x198>
  42442c:	mov	w0, #0x1                   	// #1
  424430:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  424434:	add	x1, x1, #0x71e
  424438:	ldr	x2, [sp, #5488]
  42443c:	mov	w3, #0x21d                 	// #541
  424440:	ldr	x4, [sp, #5440]
  424444:	bl	40a540 <log_assert_failed_realm@plt>
  424448:	ldr	x8, [sp, #5512]
  42444c:	ldr	x9, [x8, #1872]
  424450:	ldr	x9, [x9, #32]
  424454:	ldr	x9, [x9, #8]
  424458:	cmp	x9, #0x0
  42445c:	cset	w10, ne  // ne = any
  424460:	mov	w11, #0x1                   	// #1
  424464:	eor	w10, w10, #0x1
  424468:	eor	w10, w10, w11
  42446c:	eor	w10, w10, w11
  424470:	and	w10, w10, #0x1
  424474:	mov	w0, w10
  424478:	sxtw	x9, w0
  42447c:	cbz	x9, 42449c <parse_token+0x1ec>
  424480:	mov	w0, #0x1                   	// #1
  424484:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  424488:	add	x1, x1, #0x8b7
  42448c:	ldr	x2, [sp, #5488]
  424490:	mov	w3, #0x21e                 	// #542
  424494:	ldr	x4, [sp, #5440]
  424498:	bl	40a540 <log_assert_failed_realm@plt>
  42449c:	ldr	x8, [sp, #5512]
  4244a0:	ldr	x9, [x8, #1864]
  4244a4:	cmp	x9, #0x0
  4244a8:	cset	w10, ne  // ne = any
  4244ac:	mov	w11, #0x1                   	// #1
  4244b0:	eor	w10, w10, #0x1
  4244b4:	eor	w10, w10, w11
  4244b8:	eor	w10, w10, w11
  4244bc:	and	w10, w10, #0x1
  4244c0:	mov	w0, w10
  4244c4:	sxtw	x9, w0
  4244c8:	cbz	x9, 4244e8 <parse_token+0x238>
  4244cc:	mov	w0, #0x1                   	// #1
  4244d0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4244d4:	add	x1, x1, #0x151
  4244d8:	ldr	x2, [sp, #5488]
  4244dc:	mov	w3, #0x21f                 	// #543
  4244e0:	ldr	x4, [sp, #5440]
  4244e4:	bl	40a540 <log_assert_failed_realm@plt>
  4244e8:	ldr	x8, [sp, #5512]
  4244ec:	ldr	x9, [x8, #1840]
  4244f0:	cmp	x9, #0x0
  4244f4:	cset	w10, ne  // ne = any
  4244f8:	mov	w11, #0x1                   	// #1
  4244fc:	eor	w10, w10, #0x1
  424500:	eor	w10, w10, w11
  424504:	eor	w10, w10, w11
  424508:	and	w10, w10, #0x1
  42450c:	mov	w0, w10
  424510:	sxtw	x9, w0
  424514:	cbz	x9, 424534 <parse_token+0x284>
  424518:	mov	w0, #0x1                   	// #1
  42451c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  424520:	add	x1, x1, #0x336
  424524:	ldr	x2, [sp, #5488]
  424528:	mov	w3, #0x220                 	// #544
  42452c:	ldr	x4, [sp, #5440]
  424530:	bl	40a540 <log_assert_failed_realm@plt>
  424534:	ldr	x8, [sp, #5512]
  424538:	ldr	x9, [x8, #1872]
  42453c:	ldr	x9, [x9, #32]
  424540:	ldr	x9, [x9, #8]
  424544:	str	x9, [x8, #1824]
  424548:	ldr	x0, [x8, #1864]
  42454c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  424550:	add	x1, x1, #0x8d9
  424554:	bl	40aa20 <strcmp@plt>
  424558:	cbnz	w0, 424990 <parse_token+0x6e0>
  42455c:	ldr	x8, [sp, #5512]
  424560:	ldr	x9, [x8, #1856]
  424564:	cbz	x9, 424760 <parse_token+0x4b0>
  424568:	ldr	x8, [sp, #5512]
  42456c:	ldr	x9, [x8, #1872]
  424570:	str	x9, [x8, #1808]
  424574:	ldr	x9, [x8, #1808]
  424578:	cbz	x9, 424590 <parse_token+0x2e0>
  42457c:	ldr	x8, [sp, #5512]
  424580:	ldr	x9, [x8, #1808]
  424584:	ldr	x9, [x9, #32]
  424588:	str	x9, [sp, #5432]
  42458c:	b	424598 <parse_token+0x2e8>
  424590:	mov	x8, xzr
  424594:	str	x8, [sp, #5432]
  424598:	ldr	x8, [sp, #5432]
  42459c:	ldr	x9, [sp, #5512]
  4245a0:	str	x8, [x9, #1800]
  4245a4:	ldr	x8, [x9, #1800]
  4245a8:	cbz	x8, 4245c0 <parse_token+0x310>
  4245ac:	ldr	x8, [sp, #5512]
  4245b0:	ldr	x9, [x8, #1800]
  4245b4:	ldr	x9, [x9, #8]
  4245b8:	str	x9, [sp, #5424]
  4245bc:	b	4245c8 <parse_token+0x318>
  4245c0:	mov	x8, xzr
  4245c4:	str	x8, [sp, #5424]
  4245c8:	ldr	x8, [sp, #5424]
  4245cc:	ldr	x9, [sp, #5512]
  4245d0:	str	x8, [x9, #1792]
  4245d4:	ldr	x8, [x9, #1800]
  4245d8:	cbz	x8, 4245f0 <parse_token+0x340>
  4245dc:	ldr	x8, [sp, #5512]
  4245e0:	ldr	x9, [x8, #1800]
  4245e4:	ldr	x9, [x9]
  4245e8:	str	x9, [sp, #5416]
  4245ec:	b	4245f8 <parse_token+0x348>
  4245f0:	mov	x8, xzr
  4245f4:	str	x8, [sp, #5416]
  4245f8:	ldr	x8, [sp, #5416]
  4245fc:	ldr	x9, [sp, #5512]
  424600:	str	x8, [x9, #1784]
  424604:	mov	x8, xzr
  424608:	str	x8, [x9, #1768]
  42460c:	str	x8, [x9, #1760]
  424610:	mov	w10, #0x3                   	// #3
  424614:	stur	w10, [x29, #-132]
  424618:	mov	w10, #0x16                  	// #22
  42461c:	movk	w10, #0x4000, lsl #16
  424620:	stur	w10, [x29, #-136]
  424624:	ldr	x8, [x9, #1760]
  424628:	cbz	x8, 42466c <parse_token+0x3bc>
  42462c:	mov	w0, #0x1                   	// #1
  424630:	bl	40a3f0 <log_get_max_level_realm@plt>
  424634:	ldur	w8, [x29, #-132]
  424638:	cmp	w0, w8
  42463c:	cset	w8, ge  // ge = tcont
  424640:	mov	w9, #0x1                   	// #1
  424644:	eor	w8, w8, #0x1
  424648:	eor	w8, w8, w9
  42464c:	and	w8, w8, #0x1
  424650:	mov	w1, w8
  424654:	sxtw	x10, w1
  424658:	cbz	x10, 42466c <parse_token+0x3bc>
  42465c:	ldr	x8, [sp, #5512]
  424660:	ldr	x0, [x8, #1760]
  424664:	sub	x1, x29, #0x78
  424668:	bl	40a860 <sd_device_get_sysname@plt>
  42466c:	ldur	w0, [x29, #-132]
  424670:	ldur	w1, [x29, #-136]
  424674:	ldr	x8, [sp, #5512]
  424678:	ldr	x9, [x8, #1768]
  42467c:	mov	x10, xzr
  424680:	cmp	x9, #0x0
  424684:	ldr	x9, [sp, #5496]
  424688:	csel	x5, x9, x10, ne  // ne = any
  42468c:	ldr	x6, [x8, #1768]
  424690:	ldr	x10, [x8, #1784]
  424694:	str	w0, [sp, #5412]
  424698:	mov	x0, x10
  42469c:	str	w1, [sp, #5408]
  4246a0:	str	x5, [sp, #5400]
  4246a4:	str	x6, [sp, #5392]
  4246a8:	bl	424274 <strna>
  4246ac:	ldr	x8, [sp, #5512]
  4246b0:	ldr	x9, [x8, #1792]
  4246b4:	str	x0, [sp, #5384]
  4246b8:	cbz	x9, 4246d0 <parse_token+0x420>
  4246bc:	ldr	x8, [sp, #5512]
  4246c0:	ldr	x9, [x8, #1792]
  4246c4:	ldr	w10, [x9, #8]
  4246c8:	str	w10, [sp, #5380]
  4246cc:	b	4246d8 <parse_token+0x428>
  4246d0:	mov	w8, wzr
  4246d4:	str	w8, [sp, #5380]
  4246d8:	ldr	w8, [sp, #5380]
  4246dc:	ldr	x9, [sp, #5512]
  4246e0:	ldr	x10, [x9, #1864]
  4246e4:	ldr	w0, [sp, #5412]
  4246e8:	ldr	w1, [sp, #5408]
  4246ec:	ldr	x2, [sp, #5488]
  4246f0:	mov	w3, #0x226                 	// #550
  4246f4:	ldr	x4, [sp, #5480]
  4246f8:	ldr	x5, [sp, #5400]
  4246fc:	ldr	x6, [sp, #5392]
  424700:	mov	x11, xzr
  424704:	mov	x7, x11
  424708:	mov	x12, sp
  42470c:	str	x11, [x12]
  424710:	mov	x11, sp
  424714:	ldr	x12, [sp, #5472]
  424718:	str	x12, [x11, #8]
  42471c:	mov	x11, sp
  424720:	ldr	x13, [sp, #5384]
  424724:	str	x13, [x11, #16]
  424728:	mov	x11, sp
  42472c:	str	w8, [x11, #24]
  424730:	mov	x11, sp
  424734:	ldr	x14, [sp, #5456]
  424738:	str	x14, [x11, #32]
  42473c:	mov	x11, sp
  424740:	str	x10, [x11, #40]
  424744:	bl	40a870 <log_object_internal@plt>
  424748:	stur	w0, [x29, #-140]
  42474c:	ldur	w8, [x29, #-140]
  424750:	stur	w8, [x29, #-108]
  424754:	ldur	w8, [x29, #-108]
  424758:	stur	w8, [x29, #-4]
  42475c:	b	4300f8 <parse_token+0xbe48>
  424760:	ldr	x8, [sp, #5512]
  424764:	ldrb	w9, [x8, #1839]
  424768:	tbnz	w9, #0, 424964 <parse_token+0x6b4>
  42476c:	ldr	x8, [sp, #5512]
  424770:	ldr	x9, [x8, #1872]
  424774:	str	x9, [x8, #1736]
  424778:	ldr	x9, [x8, #1736]
  42477c:	cbz	x9, 424794 <parse_token+0x4e4>
  424780:	ldr	x8, [sp, #5512]
  424784:	ldr	x9, [x8, #1736]
  424788:	ldr	x9, [x9, #32]
  42478c:	str	x9, [sp, #5368]
  424790:	b	42479c <parse_token+0x4ec>
  424794:	mov	x8, xzr
  424798:	str	x8, [sp, #5368]
  42479c:	ldr	x8, [sp, #5368]
  4247a0:	ldr	x9, [sp, #5512]
  4247a4:	str	x8, [x9, #1728]
  4247a8:	ldr	x8, [x9, #1728]
  4247ac:	cbz	x8, 4247c4 <parse_token+0x514>
  4247b0:	ldr	x8, [sp, #5512]
  4247b4:	ldr	x9, [x8, #1728]
  4247b8:	ldr	x9, [x9, #8]
  4247bc:	str	x9, [sp, #5360]
  4247c0:	b	4247cc <parse_token+0x51c>
  4247c4:	mov	x8, xzr
  4247c8:	str	x8, [sp, #5360]
  4247cc:	ldr	x8, [sp, #5360]
  4247d0:	ldr	x9, [sp, #5512]
  4247d4:	str	x8, [x9, #1720]
  4247d8:	ldr	x8, [x9, #1728]
  4247dc:	cbz	x8, 4247f4 <parse_token+0x544>
  4247e0:	ldr	x8, [sp, #5512]
  4247e4:	ldr	x9, [x8, #1728]
  4247e8:	ldr	x9, [x9]
  4247ec:	str	x9, [sp, #5352]
  4247f0:	b	4247fc <parse_token+0x54c>
  4247f4:	mov	x8, xzr
  4247f8:	str	x8, [sp, #5352]
  4247fc:	ldr	x8, [sp, #5352]
  424800:	ldr	x9, [sp, #5512]
  424804:	str	x8, [x9, #1712]
  424808:	mov	x8, xzr
  42480c:	str	x8, [x9, #1696]
  424810:	str	x8, [x9, #1688]
  424814:	mov	w10, #0x3                   	// #3
  424818:	stur	w10, [x29, #-204]
  42481c:	mov	w10, #0x16                  	// #22
  424820:	movk	w10, #0x4000, lsl #16
  424824:	stur	w10, [x29, #-208]
  424828:	ldr	x8, [x9, #1688]
  42482c:	cbz	x8, 424870 <parse_token+0x5c0>
  424830:	mov	w0, #0x1                   	// #1
  424834:	bl	40a3f0 <log_get_max_level_realm@plt>
  424838:	ldur	w8, [x29, #-204]
  42483c:	cmp	w0, w8
  424840:	cset	w8, ge  // ge = tcont
  424844:	mov	w9, #0x1                   	// #1
  424848:	eor	w8, w8, #0x1
  42484c:	eor	w8, w8, w9
  424850:	and	w8, w8, #0x1
  424854:	mov	w1, w8
  424858:	sxtw	x10, w1
  42485c:	cbz	x10, 424870 <parse_token+0x5c0>
  424860:	ldr	x8, [sp, #5512]
  424864:	ldr	x0, [x8, #1688]
  424868:	sub	x1, x29, #0xc0
  42486c:	bl	40a860 <sd_device_get_sysname@plt>
  424870:	ldur	w0, [x29, #-204]
  424874:	ldur	w1, [x29, #-208]
  424878:	ldr	x8, [sp, #5512]
  42487c:	ldr	x9, [x8, #1696]
  424880:	mov	x10, xzr
  424884:	cmp	x9, #0x0
  424888:	ldr	x9, [sp, #5496]
  42488c:	csel	x5, x9, x10, ne  // ne = any
  424890:	ldr	x6, [x8, #1696]
  424894:	ldr	x10, [x8, #1712]
  424898:	str	w0, [sp, #5348]
  42489c:	mov	x0, x10
  4248a0:	str	w1, [sp, #5344]
  4248a4:	str	x5, [sp, #5336]
  4248a8:	str	x6, [sp, #5328]
  4248ac:	bl	424274 <strna>
  4248b0:	ldr	x8, [sp, #5512]
  4248b4:	ldr	x9, [x8, #1720]
  4248b8:	str	x0, [sp, #5320]
  4248bc:	cbz	x9, 4248d4 <parse_token+0x624>
  4248c0:	ldr	x8, [sp, #5512]
  4248c4:	ldr	x9, [x8, #1720]
  4248c8:	ldr	w10, [x9, #8]
  4248cc:	str	w10, [sp, #5316]
  4248d0:	b	4248dc <parse_token+0x62c>
  4248d4:	mov	w8, wzr
  4248d8:	str	w8, [sp, #5316]
  4248dc:	ldr	w8, [sp, #5316]
  4248e0:	ldr	x9, [sp, #5512]
  4248e4:	ldr	x10, [x9, #1864]
  4248e8:	ldr	w0, [sp, #5348]
  4248ec:	ldr	w1, [sp, #5344]
  4248f0:	ldr	x2, [sp, #5488]
  4248f4:	mov	w3, #0x228                 	// #552
  4248f8:	ldr	x4, [sp, #5480]
  4248fc:	ldr	x5, [sp, #5336]
  424900:	ldr	x6, [sp, #5328]
  424904:	mov	x11, xzr
  424908:	mov	x7, x11
  42490c:	mov	x12, sp
  424910:	str	x11, [x12]
  424914:	mov	x11, sp
  424918:	ldr	x12, [sp, #5472]
  42491c:	str	x12, [x11, #8]
  424920:	mov	x11, sp
  424924:	ldr	x13, [sp, #5320]
  424928:	str	x13, [x11, #16]
  42492c:	mov	x11, sp
  424930:	str	w8, [x11, #24]
  424934:	mov	x11, sp
  424938:	ldr	x14, [sp, #5464]
  42493c:	str	x14, [x11, #32]
  424940:	mov	x11, sp
  424944:	str	x10, [x11, #40]
  424948:	bl	40a870 <log_object_internal@plt>
  42494c:	stur	w0, [x29, #-212]
  424950:	ldur	w8, [x29, #-212]
  424954:	stur	w8, [x29, #-180]
  424958:	ldur	w8, [x29, #-180]
  42495c:	stur	w8, [x29, #-4]
  424960:	b	4300f8 <parse_token+0xbe48>
  424964:	ldr	x8, [sp, #5512]
  424968:	ldr	x0, [x8, #1824]
  42496c:	ldur	w2, [x29, #-36]
  424970:	ldr	x3, [x8, #1840]
  424974:	mov	w9, wzr
  424978:	mov	w1, w9
  42497c:	mov	x10, xzr
  424980:	mov	x4, x10
  424984:	bl	430504 <rule_line_add_token>
  424988:	stur	w0, [x29, #-68]
  42498c:	b	4300c4 <parse_token+0xbe14>
  424990:	ldr	x8, [sp, #5512]
  424994:	ldr	x0, [x8, #1864]
  424998:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42499c:	add	x1, x1, #0x918
  4249a0:	bl	40aa20 <strcmp@plt>
  4249a4:	cbnz	w0, 424de0 <parse_token+0xb30>
  4249a8:	ldr	x8, [sp, #5512]
  4249ac:	ldr	x9, [x8, #1856]
  4249b0:	cbz	x9, 424bb0 <parse_token+0x900>
  4249b4:	ldr	x8, [sp, #5512]
  4249b8:	ldr	x9, [x8, #1872]
  4249bc:	str	x9, [x8, #1664]
  4249c0:	ldr	x9, [x8, #1664]
  4249c4:	cbz	x9, 4249dc <parse_token+0x72c>
  4249c8:	ldr	x8, [sp, #5512]
  4249cc:	ldr	x9, [x8, #1664]
  4249d0:	ldr	x9, [x9, #32]
  4249d4:	str	x9, [sp, #5304]
  4249d8:	b	4249e4 <parse_token+0x734>
  4249dc:	mov	x8, xzr
  4249e0:	str	x8, [sp, #5304]
  4249e4:	ldr	x8, [sp, #5304]
  4249e8:	ldr	x9, [sp, #5512]
  4249ec:	str	x8, [x9, #1656]
  4249f0:	ldr	x8, [x9, #1656]
  4249f4:	cbz	x8, 424a0c <parse_token+0x75c>
  4249f8:	ldr	x8, [sp, #5512]
  4249fc:	ldr	x9, [x8, #1656]
  424a00:	ldr	x9, [x9, #8]
  424a04:	str	x9, [sp, #5296]
  424a08:	b	424a14 <parse_token+0x764>
  424a0c:	mov	x8, xzr
  424a10:	str	x8, [sp, #5296]
  424a14:	ldr	x8, [sp, #5296]
  424a18:	ldr	x9, [sp, #5512]
  424a1c:	str	x8, [x9, #1648]
  424a20:	ldr	x8, [x9, #1656]
  424a24:	cbz	x8, 424a3c <parse_token+0x78c>
  424a28:	ldr	x8, [sp, #5512]
  424a2c:	ldr	x9, [x8, #1656]
  424a30:	ldr	x9, [x9]
  424a34:	str	x9, [sp, #5288]
  424a38:	b	424a44 <parse_token+0x794>
  424a3c:	mov	x8, xzr
  424a40:	str	x8, [sp, #5288]
  424a44:	ldr	x8, [sp, #5288]
  424a48:	ldr	x9, [sp, #5512]
  424a4c:	str	x8, [x9, #1640]
  424a50:	mov	x8, xzr
  424a54:	str	x8, [x9, #1624]
  424a58:	str	x8, [x9, #1616]
  424a5c:	mov	w10, #0x3                   	// #3
  424a60:	str	w10, [sp, #11532]
  424a64:	mov	w10, #0x16                  	// #22
  424a68:	movk	w10, #0x4000, lsl #16
  424a6c:	str	w10, [sp, #11528]
  424a70:	ldr	x8, [x9, #1616]
  424a74:	cbz	x8, 424abc <parse_token+0x80c>
  424a78:	mov	w0, #0x1                   	// #1
  424a7c:	bl	40a3f0 <log_get_max_level_realm@plt>
  424a80:	ldr	w8, [sp, #11532]
  424a84:	cmp	w0, w8
  424a88:	cset	w8, ge  // ge = tcont
  424a8c:	mov	w9, #0x1                   	// #1
  424a90:	eor	w8, w8, #0x1
  424a94:	eor	w8, w8, w9
  424a98:	and	w8, w8, #0x1
  424a9c:	mov	w1, w8
  424aa0:	sxtw	x10, w1
  424aa4:	cbz	x10, 424abc <parse_token+0x80c>
  424aa8:	ldr	x8, [sp, #5512]
  424aac:	ldr	x0, [x8, #1616]
  424ab0:	add	x1, sp, #0x2, lsl #12
  424ab4:	add	x1, x1, #0xd18
  424ab8:	bl	40a860 <sd_device_get_sysname@plt>
  424abc:	ldr	w0, [sp, #11532]
  424ac0:	ldr	w1, [sp, #11528]
  424ac4:	ldr	x8, [sp, #5512]
  424ac8:	ldr	x9, [x8, #1624]
  424acc:	mov	x10, xzr
  424ad0:	cmp	x9, #0x0
  424ad4:	ldr	x9, [sp, #5496]
  424ad8:	csel	x5, x9, x10, ne  // ne = any
  424adc:	ldr	x6, [x8, #1624]
  424ae0:	ldr	x10, [x8, #1640]
  424ae4:	str	w0, [sp, #5284]
  424ae8:	mov	x0, x10
  424aec:	str	w1, [sp, #5280]
  424af0:	str	x5, [sp, #5272]
  424af4:	str	x6, [sp, #5264]
  424af8:	bl	424274 <strna>
  424afc:	ldr	x8, [sp, #5512]
  424b00:	ldr	x9, [x8, #1648]
  424b04:	str	x0, [sp, #5256]
  424b08:	cbz	x9, 424b20 <parse_token+0x870>
  424b0c:	ldr	x8, [sp, #5512]
  424b10:	ldr	x9, [x8, #1648]
  424b14:	ldr	w10, [x9, #8]
  424b18:	str	w10, [sp, #5252]
  424b1c:	b	424b28 <parse_token+0x878>
  424b20:	mov	w8, wzr
  424b24:	str	w8, [sp, #5252]
  424b28:	ldr	w8, [sp, #5252]
  424b2c:	ldr	x9, [sp, #5512]
  424b30:	ldr	x10, [x9, #1864]
  424b34:	ldr	w0, [sp, #5284]
  424b38:	ldr	w1, [sp, #5280]
  424b3c:	ldr	x2, [sp, #5488]
  424b40:	mov	w3, #0x22d                 	// #557
  424b44:	ldr	x4, [sp, #5480]
  424b48:	ldr	x5, [sp, #5272]
  424b4c:	ldr	x6, [sp, #5264]
  424b50:	mov	x11, xzr
  424b54:	mov	x7, x11
  424b58:	mov	x12, sp
  424b5c:	str	x11, [x12]
  424b60:	mov	x11, sp
  424b64:	ldr	x12, [sp, #5472]
  424b68:	str	x12, [x11, #8]
  424b6c:	mov	x11, sp
  424b70:	ldr	x13, [sp, #5256]
  424b74:	str	x13, [x11, #16]
  424b78:	mov	x11, sp
  424b7c:	str	w8, [x11, #24]
  424b80:	mov	x11, sp
  424b84:	ldr	x14, [sp, #5456]
  424b88:	str	x14, [x11, #32]
  424b8c:	mov	x11, sp
  424b90:	str	x10, [x11, #40]
  424b94:	bl	40a870 <log_object_internal@plt>
  424b98:	str	w0, [sp, #11524]
  424b9c:	ldr	w8, [sp, #11524]
  424ba0:	stur	w8, [x29, #-252]
  424ba4:	ldur	w8, [x29, #-252]
  424ba8:	stur	w8, [x29, #-4]
  424bac:	b	4300f8 <parse_token+0xbe48>
  424bb0:	ldr	x8, [sp, #5512]
  424bb4:	ldrb	w9, [x8, #1839]
  424bb8:	tbnz	w9, #0, 424db8 <parse_token+0xb08>
  424bbc:	ldr	x8, [sp, #5512]
  424bc0:	ldr	x9, [x8, #1872]
  424bc4:	str	x9, [x8, #1592]
  424bc8:	ldr	x9, [x8, #1592]
  424bcc:	cbz	x9, 424be4 <parse_token+0x934>
  424bd0:	ldr	x8, [sp, #5512]
  424bd4:	ldr	x9, [x8, #1592]
  424bd8:	ldr	x9, [x9, #32]
  424bdc:	str	x9, [sp, #5240]
  424be0:	b	424bec <parse_token+0x93c>
  424be4:	mov	x8, xzr
  424be8:	str	x8, [sp, #5240]
  424bec:	ldr	x8, [sp, #5240]
  424bf0:	ldr	x9, [sp, #5512]
  424bf4:	str	x8, [x9, #1584]
  424bf8:	ldr	x8, [x9, #1584]
  424bfc:	cbz	x8, 424c14 <parse_token+0x964>
  424c00:	ldr	x8, [sp, #5512]
  424c04:	ldr	x9, [x8, #1584]
  424c08:	ldr	x9, [x9, #8]
  424c0c:	str	x9, [sp, #5232]
  424c10:	b	424c1c <parse_token+0x96c>
  424c14:	mov	x8, xzr
  424c18:	str	x8, [sp, #5232]
  424c1c:	ldr	x8, [sp, #5232]
  424c20:	ldr	x9, [sp, #5512]
  424c24:	str	x8, [x9, #1576]
  424c28:	ldr	x8, [x9, #1584]
  424c2c:	cbz	x8, 424c44 <parse_token+0x994>
  424c30:	ldr	x8, [sp, #5512]
  424c34:	ldr	x9, [x8, #1584]
  424c38:	ldr	x9, [x9]
  424c3c:	str	x9, [sp, #5224]
  424c40:	b	424c4c <parse_token+0x99c>
  424c44:	mov	x8, xzr
  424c48:	str	x8, [sp, #5224]
  424c4c:	ldr	x8, [sp, #5224]
  424c50:	ldr	x9, [sp, #5512]
  424c54:	str	x8, [x9, #1568]
  424c58:	mov	x8, xzr
  424c5c:	str	x8, [x9, #1552]
  424c60:	str	x8, [x9, #1544]
  424c64:	mov	w10, #0x3                   	// #3
  424c68:	str	w10, [sp, #11460]
  424c6c:	mov	w10, #0x16                  	// #22
  424c70:	movk	w10, #0x4000, lsl #16
  424c74:	str	w10, [sp, #11456]
  424c78:	ldr	x8, [x9, #1544]
  424c7c:	cbz	x8, 424cc4 <parse_token+0xa14>
  424c80:	mov	w0, #0x1                   	// #1
  424c84:	bl	40a3f0 <log_get_max_level_realm@plt>
  424c88:	ldr	w8, [sp, #11460]
  424c8c:	cmp	w0, w8
  424c90:	cset	w8, ge  // ge = tcont
  424c94:	mov	w9, #0x1                   	// #1
  424c98:	eor	w8, w8, #0x1
  424c9c:	eor	w8, w8, w9
  424ca0:	and	w8, w8, #0x1
  424ca4:	mov	w1, w8
  424ca8:	sxtw	x10, w1
  424cac:	cbz	x10, 424cc4 <parse_token+0xa14>
  424cb0:	ldr	x8, [sp, #5512]
  424cb4:	ldr	x0, [x8, #1544]
  424cb8:	add	x1, sp, #0x2, lsl #12
  424cbc:	add	x1, x1, #0xcd0
  424cc0:	bl	40a860 <sd_device_get_sysname@plt>
  424cc4:	ldr	w0, [sp, #11460]
  424cc8:	ldr	w1, [sp, #11456]
  424ccc:	ldr	x8, [sp, #5512]
  424cd0:	ldr	x9, [x8, #1552]
  424cd4:	mov	x10, xzr
  424cd8:	cmp	x9, #0x0
  424cdc:	ldr	x9, [sp, #5496]
  424ce0:	csel	x5, x9, x10, ne  // ne = any
  424ce4:	ldr	x6, [x8, #1552]
  424ce8:	ldr	x10, [x8, #1568]
  424cec:	str	w0, [sp, #5220]
  424cf0:	mov	x0, x10
  424cf4:	str	w1, [sp, #5216]
  424cf8:	str	x5, [sp, #5208]
  424cfc:	str	x6, [sp, #5200]
  424d00:	bl	424274 <strna>
  424d04:	ldr	x8, [sp, #5512]
  424d08:	ldr	x9, [x8, #1576]
  424d0c:	str	x0, [sp, #5192]
  424d10:	cbz	x9, 424d28 <parse_token+0xa78>
  424d14:	ldr	x8, [sp, #5512]
  424d18:	ldr	x9, [x8, #1576]
  424d1c:	ldr	w10, [x9, #8]
  424d20:	str	w10, [sp, #5188]
  424d24:	b	424d30 <parse_token+0xa80>
  424d28:	mov	w8, wzr
  424d2c:	str	w8, [sp, #5188]
  424d30:	ldr	w8, [sp, #5188]
  424d34:	ldr	x9, [sp, #5512]
  424d38:	ldr	x10, [x9, #1864]
  424d3c:	ldr	w0, [sp, #5220]
  424d40:	ldr	w1, [sp, #5216]
  424d44:	ldr	x2, [sp, #5488]
  424d48:	mov	w3, #0x22f                 	// #559
  424d4c:	ldr	x4, [sp, #5480]
  424d50:	ldr	x5, [sp, #5208]
  424d54:	ldr	x6, [sp, #5200]
  424d58:	mov	x11, xzr
  424d5c:	mov	x7, x11
  424d60:	mov	x12, sp
  424d64:	str	x11, [x12]
  424d68:	mov	x11, sp
  424d6c:	ldr	x12, [sp, #5472]
  424d70:	str	x12, [x11, #8]
  424d74:	mov	x11, sp
  424d78:	ldr	x13, [sp, #5192]
  424d7c:	str	x13, [x11, #16]
  424d80:	mov	x11, sp
  424d84:	str	w8, [x11, #24]
  424d88:	mov	x11, sp
  424d8c:	ldr	x14, [sp, #5464]
  424d90:	str	x14, [x11, #32]
  424d94:	mov	x11, sp
  424d98:	str	x10, [x11, #40]
  424d9c:	bl	40a870 <log_object_internal@plt>
  424da0:	str	w0, [sp, #11452]
  424da4:	ldr	w8, [sp, #11452]
  424da8:	str	w8, [sp, #11484]
  424dac:	ldr	w8, [sp, #11484]
  424db0:	stur	w8, [x29, #-4]
  424db4:	b	4300f8 <parse_token+0xbe48>
  424db8:	ldr	x8, [sp, #5512]
  424dbc:	ldr	x0, [x8, #1824]
  424dc0:	ldur	w2, [x29, #-36]
  424dc4:	ldr	x3, [x8, #1840]
  424dc8:	mov	w1, #0x1                   	// #1
  424dcc:	mov	x9, xzr
  424dd0:	mov	x4, x9
  424dd4:	bl	430504 <rule_line_add_token>
  424dd8:	stur	w0, [x29, #-68]
  424ddc:	b	4300c4 <parse_token+0xbe14>
  424de0:	ldr	x8, [sp, #5512]
  424de4:	ldr	x0, [x8, #1864]
  424de8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  424dec:	add	x1, x1, #0x920
  424df0:	bl	40aa20 <strcmp@plt>
  424df4:	cbnz	w0, 425230 <parse_token+0xf80>
  424df8:	ldr	x8, [sp, #5512]
  424dfc:	ldr	x9, [x8, #1856]
  424e00:	cbz	x9, 425000 <parse_token+0xd50>
  424e04:	ldr	x8, [sp, #5512]
  424e08:	ldr	x9, [x8, #1872]
  424e0c:	str	x9, [x8, #1520]
  424e10:	ldr	x9, [x8, #1520]
  424e14:	cbz	x9, 424e2c <parse_token+0xb7c>
  424e18:	ldr	x8, [sp, #5512]
  424e1c:	ldr	x9, [x8, #1520]
  424e20:	ldr	x9, [x9, #32]
  424e24:	str	x9, [sp, #5176]
  424e28:	b	424e34 <parse_token+0xb84>
  424e2c:	mov	x8, xzr
  424e30:	str	x8, [sp, #5176]
  424e34:	ldr	x8, [sp, #5176]
  424e38:	ldr	x9, [sp, #5512]
  424e3c:	str	x8, [x9, #1512]
  424e40:	ldr	x8, [x9, #1512]
  424e44:	cbz	x8, 424e5c <parse_token+0xbac>
  424e48:	ldr	x8, [sp, #5512]
  424e4c:	ldr	x9, [x8, #1512]
  424e50:	ldr	x9, [x9, #8]
  424e54:	str	x9, [sp, #5168]
  424e58:	b	424e64 <parse_token+0xbb4>
  424e5c:	mov	x8, xzr
  424e60:	str	x8, [sp, #5168]
  424e64:	ldr	x8, [sp, #5168]
  424e68:	ldr	x9, [sp, #5512]
  424e6c:	str	x8, [x9, #1504]
  424e70:	ldr	x8, [x9, #1512]
  424e74:	cbz	x8, 424e8c <parse_token+0xbdc>
  424e78:	ldr	x8, [sp, #5512]
  424e7c:	ldr	x9, [x8, #1512]
  424e80:	ldr	x9, [x9]
  424e84:	str	x9, [sp, #5160]
  424e88:	b	424e94 <parse_token+0xbe4>
  424e8c:	mov	x8, xzr
  424e90:	str	x8, [sp, #5160]
  424e94:	ldr	x8, [sp, #5160]
  424e98:	ldr	x9, [sp, #5512]
  424e9c:	str	x8, [x9, #1496]
  424ea0:	mov	x8, xzr
  424ea4:	str	x8, [x9, #1480]
  424ea8:	str	x8, [x9, #1472]
  424eac:	mov	w10, #0x3                   	// #3
  424eb0:	str	w10, [sp, #11388]
  424eb4:	mov	w10, #0x16                  	// #22
  424eb8:	movk	w10, #0x4000, lsl #16
  424ebc:	str	w10, [sp, #11384]
  424ec0:	ldr	x8, [x9, #1472]
  424ec4:	cbz	x8, 424f0c <parse_token+0xc5c>
  424ec8:	mov	w0, #0x1                   	// #1
  424ecc:	bl	40a3f0 <log_get_max_level_realm@plt>
  424ed0:	ldr	w8, [sp, #11388]
  424ed4:	cmp	w0, w8
  424ed8:	cset	w8, ge  // ge = tcont
  424edc:	mov	w9, #0x1                   	// #1
  424ee0:	eor	w8, w8, #0x1
  424ee4:	eor	w8, w8, w9
  424ee8:	and	w8, w8, #0x1
  424eec:	mov	w1, w8
  424ef0:	sxtw	x10, w1
  424ef4:	cbz	x10, 424f0c <parse_token+0xc5c>
  424ef8:	ldr	x8, [sp, #5512]
  424efc:	ldr	x0, [x8, #1472]
  424f00:	add	x1, sp, #0x2, lsl #12
  424f04:	add	x1, x1, #0xc88
  424f08:	bl	40a860 <sd_device_get_sysname@plt>
  424f0c:	ldr	w0, [sp, #11388]
  424f10:	ldr	w1, [sp, #11384]
  424f14:	ldr	x8, [sp, #5512]
  424f18:	ldr	x9, [x8, #1480]
  424f1c:	mov	x10, xzr
  424f20:	cmp	x9, #0x0
  424f24:	ldr	x9, [sp, #5496]
  424f28:	csel	x5, x9, x10, ne  // ne = any
  424f2c:	ldr	x6, [x8, #1480]
  424f30:	ldr	x10, [x8, #1496]
  424f34:	str	w0, [sp, #5156]
  424f38:	mov	x0, x10
  424f3c:	str	w1, [sp, #5152]
  424f40:	str	x5, [sp, #5144]
  424f44:	str	x6, [sp, #5136]
  424f48:	bl	424274 <strna>
  424f4c:	ldr	x8, [sp, #5512]
  424f50:	ldr	x9, [x8, #1504]
  424f54:	str	x0, [sp, #5128]
  424f58:	cbz	x9, 424f70 <parse_token+0xcc0>
  424f5c:	ldr	x8, [sp, #5512]
  424f60:	ldr	x9, [x8, #1504]
  424f64:	ldr	w10, [x9, #8]
  424f68:	str	w10, [sp, #5124]
  424f6c:	b	424f78 <parse_token+0xcc8>
  424f70:	mov	w8, wzr
  424f74:	str	w8, [sp, #5124]
  424f78:	ldr	w8, [sp, #5124]
  424f7c:	ldr	x9, [sp, #5512]
  424f80:	ldr	x10, [x9, #1864]
  424f84:	ldr	w0, [sp, #5156]
  424f88:	ldr	w1, [sp, #5152]
  424f8c:	ldr	x2, [sp, #5488]
  424f90:	mov	w3, #0x234                 	// #564
  424f94:	ldr	x4, [sp, #5480]
  424f98:	ldr	x5, [sp, #5144]
  424f9c:	ldr	x6, [sp, #5136]
  424fa0:	mov	x11, xzr
  424fa4:	mov	x7, x11
  424fa8:	mov	x12, sp
  424fac:	str	x11, [x12]
  424fb0:	mov	x11, sp
  424fb4:	ldr	x12, [sp, #5472]
  424fb8:	str	x12, [x11, #8]
  424fbc:	mov	x11, sp
  424fc0:	ldr	x13, [sp, #5128]
  424fc4:	str	x13, [x11, #16]
  424fc8:	mov	x11, sp
  424fcc:	str	w8, [x11, #24]
  424fd0:	mov	x11, sp
  424fd4:	ldr	x14, [sp, #5456]
  424fd8:	str	x14, [x11, #32]
  424fdc:	mov	x11, sp
  424fe0:	str	x10, [x11, #40]
  424fe4:	bl	40a870 <log_object_internal@plt>
  424fe8:	str	w0, [sp, #11380]
  424fec:	ldr	w8, [sp, #11380]
  424ff0:	str	w8, [sp, #11412]
  424ff4:	ldr	w8, [sp, #11412]
  424ff8:	stur	w8, [x29, #-4]
  424ffc:	b	4300f8 <parse_token+0xbe48>
  425000:	ldr	x8, [sp, #5512]
  425004:	ldrb	w9, [x8, #1839]
  425008:	tbnz	w9, #0, 425208 <parse_token+0xf58>
  42500c:	ldr	x8, [sp, #5512]
  425010:	ldr	x9, [x8, #1872]
  425014:	str	x9, [x8, #1448]
  425018:	ldr	x9, [x8, #1448]
  42501c:	cbz	x9, 425034 <parse_token+0xd84>
  425020:	ldr	x8, [sp, #5512]
  425024:	ldr	x9, [x8, #1448]
  425028:	ldr	x9, [x9, #32]
  42502c:	str	x9, [sp, #5112]
  425030:	b	42503c <parse_token+0xd8c>
  425034:	mov	x8, xzr
  425038:	str	x8, [sp, #5112]
  42503c:	ldr	x8, [sp, #5112]
  425040:	ldr	x9, [sp, #5512]
  425044:	str	x8, [x9, #1440]
  425048:	ldr	x8, [x9, #1440]
  42504c:	cbz	x8, 425064 <parse_token+0xdb4>
  425050:	ldr	x8, [sp, #5512]
  425054:	ldr	x9, [x8, #1440]
  425058:	ldr	x9, [x9, #8]
  42505c:	str	x9, [sp, #5104]
  425060:	b	42506c <parse_token+0xdbc>
  425064:	mov	x8, xzr
  425068:	str	x8, [sp, #5104]
  42506c:	ldr	x8, [sp, #5104]
  425070:	ldr	x9, [sp, #5512]
  425074:	str	x8, [x9, #1432]
  425078:	ldr	x8, [x9, #1440]
  42507c:	cbz	x8, 425094 <parse_token+0xde4>
  425080:	ldr	x8, [sp, #5512]
  425084:	ldr	x9, [x8, #1440]
  425088:	ldr	x9, [x9]
  42508c:	str	x9, [sp, #5096]
  425090:	b	42509c <parse_token+0xdec>
  425094:	mov	x8, xzr
  425098:	str	x8, [sp, #5096]
  42509c:	ldr	x8, [sp, #5096]
  4250a0:	ldr	x9, [sp, #5512]
  4250a4:	str	x8, [x9, #1424]
  4250a8:	mov	x8, xzr
  4250ac:	str	x8, [x9, #1408]
  4250b0:	str	x8, [x9, #1400]
  4250b4:	mov	w10, #0x3                   	// #3
  4250b8:	str	w10, [sp, #11316]
  4250bc:	mov	w10, #0x16                  	// #22
  4250c0:	movk	w10, #0x4000, lsl #16
  4250c4:	str	w10, [sp, #11312]
  4250c8:	ldr	x8, [x9, #1400]
  4250cc:	cbz	x8, 425114 <parse_token+0xe64>
  4250d0:	mov	w0, #0x1                   	// #1
  4250d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4250d8:	ldr	w8, [sp, #11316]
  4250dc:	cmp	w0, w8
  4250e0:	cset	w8, ge  // ge = tcont
  4250e4:	mov	w9, #0x1                   	// #1
  4250e8:	eor	w8, w8, #0x1
  4250ec:	eor	w8, w8, w9
  4250f0:	and	w8, w8, #0x1
  4250f4:	mov	w1, w8
  4250f8:	sxtw	x10, w1
  4250fc:	cbz	x10, 425114 <parse_token+0xe64>
  425100:	ldr	x8, [sp, #5512]
  425104:	ldr	x0, [x8, #1400]
  425108:	add	x1, sp, #0x2, lsl #12
  42510c:	add	x1, x1, #0xc40
  425110:	bl	40a860 <sd_device_get_sysname@plt>
  425114:	ldr	w0, [sp, #11316]
  425118:	ldr	w1, [sp, #11312]
  42511c:	ldr	x8, [sp, #5512]
  425120:	ldr	x9, [x8, #1408]
  425124:	mov	x10, xzr
  425128:	cmp	x9, #0x0
  42512c:	ldr	x9, [sp, #5496]
  425130:	csel	x5, x9, x10, ne  // ne = any
  425134:	ldr	x6, [x8, #1408]
  425138:	ldr	x10, [x8, #1424]
  42513c:	str	w0, [sp, #5092]
  425140:	mov	x0, x10
  425144:	str	w1, [sp, #5088]
  425148:	str	x5, [sp, #5080]
  42514c:	str	x6, [sp, #5072]
  425150:	bl	424274 <strna>
  425154:	ldr	x8, [sp, #5512]
  425158:	ldr	x9, [x8, #1432]
  42515c:	str	x0, [sp, #5064]
  425160:	cbz	x9, 425178 <parse_token+0xec8>
  425164:	ldr	x8, [sp, #5512]
  425168:	ldr	x9, [x8, #1432]
  42516c:	ldr	w10, [x9, #8]
  425170:	str	w10, [sp, #5060]
  425174:	b	425180 <parse_token+0xed0>
  425178:	mov	w8, wzr
  42517c:	str	w8, [sp, #5060]
  425180:	ldr	w8, [sp, #5060]
  425184:	ldr	x9, [sp, #5512]
  425188:	ldr	x10, [x9, #1864]
  42518c:	ldr	w0, [sp, #5092]
  425190:	ldr	w1, [sp, #5088]
  425194:	ldr	x2, [sp, #5488]
  425198:	mov	w3, #0x236                 	// #566
  42519c:	ldr	x4, [sp, #5480]
  4251a0:	ldr	x5, [sp, #5080]
  4251a4:	ldr	x6, [sp, #5072]
  4251a8:	mov	x11, xzr
  4251ac:	mov	x7, x11
  4251b0:	mov	x12, sp
  4251b4:	str	x11, [x12]
  4251b8:	mov	x11, sp
  4251bc:	ldr	x12, [sp, #5472]
  4251c0:	str	x12, [x11, #8]
  4251c4:	mov	x11, sp
  4251c8:	ldr	x13, [sp, #5064]
  4251cc:	str	x13, [x11, #16]
  4251d0:	mov	x11, sp
  4251d4:	str	w8, [x11, #24]
  4251d8:	mov	x11, sp
  4251dc:	ldr	x14, [sp, #5464]
  4251e0:	str	x14, [x11, #32]
  4251e4:	mov	x11, sp
  4251e8:	str	x10, [x11, #40]
  4251ec:	bl	40a870 <log_object_internal@plt>
  4251f0:	str	w0, [sp, #11308]
  4251f4:	ldr	w8, [sp, #11308]
  4251f8:	str	w8, [sp, #11340]
  4251fc:	ldr	w8, [sp, #11340]
  425200:	stur	w8, [x29, #-4]
  425204:	b	4300f8 <parse_token+0xbe48>
  425208:	ldr	x8, [sp, #5512]
  42520c:	ldr	x0, [x8, #1824]
  425210:	ldur	w2, [x29, #-36]
  425214:	ldr	x3, [x8, #1840]
  425218:	mov	w1, #0x2                   	// #2
  42521c:	mov	x9, xzr
  425220:	mov	x4, x9
  425224:	bl	430504 <rule_line_add_token>
  425228:	stur	w0, [x29, #-68]
  42522c:	b	4300c4 <parse_token+0xbe14>
  425230:	ldr	x8, [sp, #5512]
  425234:	ldr	x0, [x8, #1864]
  425238:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42523c:	add	x1, x1, #0x927
  425240:	bl	40aa20 <strcmp@plt>
  425244:	cbnz	w0, 4256d0 <parse_token+0x1420>
  425248:	ldr	x8, [sp, #5512]
  42524c:	ldr	x9, [x8, #1856]
  425250:	cbz	x9, 425450 <parse_token+0x11a0>
  425254:	ldr	x8, [sp, #5512]
  425258:	ldr	x9, [x8, #1872]
  42525c:	str	x9, [x8, #1376]
  425260:	ldr	x9, [x8, #1376]
  425264:	cbz	x9, 42527c <parse_token+0xfcc>
  425268:	ldr	x8, [sp, #5512]
  42526c:	ldr	x9, [x8, #1376]
  425270:	ldr	x9, [x9, #32]
  425274:	str	x9, [sp, #5048]
  425278:	b	425284 <parse_token+0xfd4>
  42527c:	mov	x8, xzr
  425280:	str	x8, [sp, #5048]
  425284:	ldr	x8, [sp, #5048]
  425288:	ldr	x9, [sp, #5512]
  42528c:	str	x8, [x9, #1368]
  425290:	ldr	x8, [x9, #1368]
  425294:	cbz	x8, 4252ac <parse_token+0xffc>
  425298:	ldr	x8, [sp, #5512]
  42529c:	ldr	x9, [x8, #1368]
  4252a0:	ldr	x9, [x9, #8]
  4252a4:	str	x9, [sp, #5040]
  4252a8:	b	4252b4 <parse_token+0x1004>
  4252ac:	mov	x8, xzr
  4252b0:	str	x8, [sp, #5040]
  4252b4:	ldr	x8, [sp, #5040]
  4252b8:	ldr	x9, [sp, #5512]
  4252bc:	str	x8, [x9, #1360]
  4252c0:	ldr	x8, [x9, #1368]
  4252c4:	cbz	x8, 4252dc <parse_token+0x102c>
  4252c8:	ldr	x8, [sp, #5512]
  4252cc:	ldr	x9, [x8, #1368]
  4252d0:	ldr	x9, [x9]
  4252d4:	str	x9, [sp, #5032]
  4252d8:	b	4252e4 <parse_token+0x1034>
  4252dc:	mov	x8, xzr
  4252e0:	str	x8, [sp, #5032]
  4252e4:	ldr	x8, [sp, #5032]
  4252e8:	ldr	x9, [sp, #5512]
  4252ec:	str	x8, [x9, #1352]
  4252f0:	mov	x8, xzr
  4252f4:	str	x8, [x9, #1336]
  4252f8:	str	x8, [x9, #1328]
  4252fc:	mov	w10, #0x3                   	// #3
  425300:	str	w10, [sp, #11244]
  425304:	mov	w10, #0x16                  	// #22
  425308:	movk	w10, #0x4000, lsl #16
  42530c:	str	w10, [sp, #11240]
  425310:	ldr	x8, [x9, #1328]
  425314:	cbz	x8, 42535c <parse_token+0x10ac>
  425318:	mov	w0, #0x1                   	// #1
  42531c:	bl	40a3f0 <log_get_max_level_realm@plt>
  425320:	ldr	w8, [sp, #11244]
  425324:	cmp	w0, w8
  425328:	cset	w8, ge  // ge = tcont
  42532c:	mov	w9, #0x1                   	// #1
  425330:	eor	w8, w8, #0x1
  425334:	eor	w8, w8, w9
  425338:	and	w8, w8, #0x1
  42533c:	mov	w1, w8
  425340:	sxtw	x10, w1
  425344:	cbz	x10, 42535c <parse_token+0x10ac>
  425348:	ldr	x8, [sp, #5512]
  42534c:	ldr	x0, [x8, #1328]
  425350:	add	x1, sp, #0x2, lsl #12
  425354:	add	x1, x1, #0xbf8
  425358:	bl	40a860 <sd_device_get_sysname@plt>
  42535c:	ldr	w0, [sp, #11244]
  425360:	ldr	w1, [sp, #11240]
  425364:	ldr	x8, [sp, #5512]
  425368:	ldr	x9, [x8, #1336]
  42536c:	mov	x10, xzr
  425370:	cmp	x9, #0x0
  425374:	ldr	x9, [sp, #5496]
  425378:	csel	x5, x9, x10, ne  // ne = any
  42537c:	ldr	x6, [x8, #1336]
  425380:	ldr	x10, [x8, #1352]
  425384:	str	w0, [sp, #5028]
  425388:	mov	x0, x10
  42538c:	str	w1, [sp, #5024]
  425390:	str	x5, [sp, #5016]
  425394:	str	x6, [sp, #5008]
  425398:	bl	424274 <strna>
  42539c:	ldr	x8, [sp, #5512]
  4253a0:	ldr	x9, [x8, #1360]
  4253a4:	str	x0, [sp, #5000]
  4253a8:	cbz	x9, 4253c0 <parse_token+0x1110>
  4253ac:	ldr	x8, [sp, #5512]
  4253b0:	ldr	x9, [x8, #1360]
  4253b4:	ldr	w10, [x9, #8]
  4253b8:	str	w10, [sp, #4996]
  4253bc:	b	4253c8 <parse_token+0x1118>
  4253c0:	mov	w8, wzr
  4253c4:	str	w8, [sp, #4996]
  4253c8:	ldr	w8, [sp, #4996]
  4253cc:	ldr	x9, [sp, #5512]
  4253d0:	ldr	x10, [x9, #1864]
  4253d4:	ldr	w0, [sp, #5028]
  4253d8:	ldr	w1, [sp, #5024]
  4253dc:	ldr	x2, [sp, #5488]
  4253e0:	mov	w3, #0x23b                 	// #571
  4253e4:	ldr	x4, [sp, #5480]
  4253e8:	ldr	x5, [sp, #5016]
  4253ec:	ldr	x6, [sp, #5008]
  4253f0:	mov	x11, xzr
  4253f4:	mov	x7, x11
  4253f8:	mov	x12, sp
  4253fc:	str	x11, [x12]
  425400:	mov	x11, sp
  425404:	ldr	x12, [sp, #5472]
  425408:	str	x12, [x11, #8]
  42540c:	mov	x11, sp
  425410:	ldr	x13, [sp, #5000]
  425414:	str	x13, [x11, #16]
  425418:	mov	x11, sp
  42541c:	str	w8, [x11, #24]
  425420:	mov	x11, sp
  425424:	ldr	x14, [sp, #5456]
  425428:	str	x14, [x11, #32]
  42542c:	mov	x11, sp
  425430:	str	x10, [x11, #40]
  425434:	bl	40a870 <log_object_internal@plt>
  425438:	str	w0, [sp, #11236]
  42543c:	ldr	w8, [sp, #11236]
  425440:	str	w8, [sp, #11268]
  425444:	ldr	w8, [sp, #11268]
  425448:	stur	w8, [x29, #-4]
  42544c:	b	4300f8 <parse_token+0xbe48>
  425450:	ldur	w8, [x29, #-36]
  425454:	cmp	w8, #0x3
  425458:	b.ne	425658 <parse_token+0x13a8>  // b.any
  42545c:	ldr	x8, [sp, #5512]
  425460:	ldr	x9, [x8, #1872]
  425464:	str	x9, [x8, #1304]
  425468:	ldr	x9, [x8, #1304]
  42546c:	cbz	x9, 425484 <parse_token+0x11d4>
  425470:	ldr	x8, [sp, #5512]
  425474:	ldr	x9, [x8, #1304]
  425478:	ldr	x9, [x9, #32]
  42547c:	str	x9, [sp, #4984]
  425480:	b	42548c <parse_token+0x11dc>
  425484:	mov	x8, xzr
  425488:	str	x8, [sp, #4984]
  42548c:	ldr	x8, [sp, #4984]
  425490:	ldr	x9, [sp, #5512]
  425494:	str	x8, [x9, #1296]
  425498:	ldr	x8, [x9, #1296]
  42549c:	cbz	x8, 4254b4 <parse_token+0x1204>
  4254a0:	ldr	x8, [sp, #5512]
  4254a4:	ldr	x9, [x8, #1296]
  4254a8:	ldr	x9, [x9, #8]
  4254ac:	str	x9, [sp, #4976]
  4254b0:	b	4254bc <parse_token+0x120c>
  4254b4:	mov	x8, xzr
  4254b8:	str	x8, [sp, #4976]
  4254bc:	ldr	x8, [sp, #4976]
  4254c0:	ldr	x9, [sp, #5512]
  4254c4:	str	x8, [x9, #1288]
  4254c8:	ldr	x8, [x9, #1296]
  4254cc:	cbz	x8, 4254e4 <parse_token+0x1234>
  4254d0:	ldr	x8, [sp, #5512]
  4254d4:	ldr	x9, [x8, #1296]
  4254d8:	ldr	x9, [x9]
  4254dc:	str	x9, [sp, #4968]
  4254e0:	b	4254ec <parse_token+0x123c>
  4254e4:	mov	x8, xzr
  4254e8:	str	x8, [sp, #4968]
  4254ec:	ldr	x8, [sp, #4968]
  4254f0:	ldr	x9, [sp, #5512]
  4254f4:	str	x8, [x9, #1280]
  4254f8:	mov	x8, xzr
  4254fc:	str	x8, [x9, #1264]
  425500:	str	x8, [x9, #1256]
  425504:	mov	w10, #0x3                   	// #3
  425508:	str	w10, [sp, #11172]
  42550c:	mov	w10, #0x16                  	// #22
  425510:	movk	w10, #0x4000, lsl #16
  425514:	str	w10, [sp, #11168]
  425518:	ldr	x8, [x9, #1256]
  42551c:	cbz	x8, 425564 <parse_token+0x12b4>
  425520:	mov	w0, #0x1                   	// #1
  425524:	bl	40a3f0 <log_get_max_level_realm@plt>
  425528:	ldr	w8, [sp, #11172]
  42552c:	cmp	w0, w8
  425530:	cset	w8, ge  // ge = tcont
  425534:	mov	w9, #0x1                   	// #1
  425538:	eor	w8, w8, #0x1
  42553c:	eor	w8, w8, w9
  425540:	and	w8, w8, #0x1
  425544:	mov	w1, w8
  425548:	sxtw	x10, w1
  42554c:	cbz	x10, 425564 <parse_token+0x12b4>
  425550:	ldr	x8, [sp, #5512]
  425554:	ldr	x0, [x8, #1256]
  425558:	add	x1, sp, #0x2, lsl #12
  42555c:	add	x1, x1, #0xbb0
  425560:	bl	40a860 <sd_device_get_sysname@plt>
  425564:	ldr	w0, [sp, #11172]
  425568:	ldr	w1, [sp, #11168]
  42556c:	ldr	x8, [sp, #5512]
  425570:	ldr	x9, [x8, #1264]
  425574:	mov	x10, xzr
  425578:	cmp	x9, #0x0
  42557c:	ldr	x9, [sp, #5496]
  425580:	csel	x5, x9, x10, ne  // ne = any
  425584:	ldr	x6, [x8, #1264]
  425588:	ldr	x10, [x8, #1280]
  42558c:	str	w0, [sp, #4964]
  425590:	mov	x0, x10
  425594:	str	w1, [sp, #4960]
  425598:	str	x5, [sp, #4952]
  42559c:	str	x6, [sp, #4944]
  4255a0:	bl	424274 <strna>
  4255a4:	ldr	x8, [sp, #5512]
  4255a8:	ldr	x9, [x8, #1288]
  4255ac:	str	x0, [sp, #4936]
  4255b0:	cbz	x9, 4255c8 <parse_token+0x1318>
  4255b4:	ldr	x8, [sp, #5512]
  4255b8:	ldr	x9, [x8, #1288]
  4255bc:	ldr	w10, [x9, #8]
  4255c0:	str	w10, [sp, #4932]
  4255c4:	b	4255d0 <parse_token+0x1320>
  4255c8:	mov	w8, wzr
  4255cc:	str	w8, [sp, #4932]
  4255d0:	ldr	w8, [sp, #4932]
  4255d4:	ldr	x9, [sp, #5512]
  4255d8:	ldr	x10, [x9, #1864]
  4255dc:	ldr	w0, [sp, #4964]
  4255e0:	ldr	w1, [sp, #4960]
  4255e4:	ldr	x2, [sp, #5488]
  4255e8:	mov	w3, #0x23d                 	// #573
  4255ec:	ldr	x4, [sp, #5480]
  4255f0:	ldr	x5, [sp, #4952]
  4255f4:	ldr	x6, [sp, #4944]
  4255f8:	mov	x11, xzr
  4255fc:	mov	x7, x11
  425600:	mov	x12, sp
  425604:	str	x11, [x12]
  425608:	mov	x11, sp
  42560c:	ldr	x12, [sp, #5472]
  425610:	str	x12, [x11, #8]
  425614:	mov	x11, sp
  425618:	ldr	x13, [sp, #4936]
  42561c:	str	x13, [x11, #16]
  425620:	mov	x11, sp
  425624:	str	w8, [x11, #24]
  425628:	mov	x11, sp
  42562c:	ldr	x14, [sp, #5464]
  425630:	str	x14, [x11, #32]
  425634:	mov	x11, sp
  425638:	str	x10, [x11, #40]
  42563c:	bl	40a870 <log_object_internal@plt>
  425640:	str	w0, [sp, #11164]
  425644:	ldr	w8, [sp, #11164]
  425648:	str	w8, [sp, #11196]
  42564c:	ldr	w8, [sp, #11196]
  425650:	stur	w8, [x29, #-4]
  425654:	b	4300f8 <parse_token+0xbe48>
  425658:	ldr	x8, [sp, #5512]
  42565c:	ldrb	w9, [x8, #1839]
  425660:	tbnz	w9, #0, 4256a8 <parse_token+0x13f8>
  425664:	ldr	x8, [sp, #5512]
  425668:	ldr	x0, [x8, #1872]
  42566c:	ldr	x1, [x8, #1864]
  425670:	ldr	x2, [x8, #1840]
  425674:	mov	w9, wzr
  425678:	and	w3, w9, #0x1
  42567c:	bl	430d00 <check_value_format_and_warn>
  425680:	ldr	x8, [sp, #5512]
  425684:	ldr	x0, [x8, #1824]
  425688:	ldur	w2, [x29, #-36]
  42568c:	ldr	x3, [x8, #1840]
  425690:	mov	w1, #0x2a                  	// #42
  425694:	mov	x10, xzr
  425698:	mov	x4, x10
  42569c:	bl	430504 <rule_line_add_token>
  4256a0:	stur	w0, [x29, #-68]
  4256a4:	b	4256cc <parse_token+0x141c>
  4256a8:	ldr	x8, [sp, #5512]
  4256ac:	ldr	x0, [x8, #1824]
  4256b0:	ldur	w2, [x29, #-36]
  4256b4:	ldr	x3, [x8, #1840]
  4256b8:	mov	w1, #0x3                   	// #3
  4256bc:	mov	x9, xzr
  4256c0:	mov	x4, x9
  4256c4:	bl	430504 <rule_line_add_token>
  4256c8:	stur	w0, [x29, #-68]
  4256cc:	b	4300c4 <parse_token+0xbe14>
  4256d0:	ldr	x8, [sp, #5512]
  4256d4:	ldr	x0, [x8, #1864]
  4256d8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4256dc:	add	x1, x1, #0x92f
  4256e0:	bl	40aa20 <strcmp@plt>
  4256e4:	cbnz	w0, 426158 <parse_token+0x1ea8>
  4256e8:	ldr	x8, [sp, #5512]
  4256ec:	ldr	x9, [x8, #1856]
  4256f0:	cbz	x9, 4258f0 <parse_token+0x1640>
  4256f4:	ldr	x8, [sp, #5512]
  4256f8:	ldr	x9, [x8, #1872]
  4256fc:	str	x9, [x8, #1232]
  425700:	ldr	x9, [x8, #1232]
  425704:	cbz	x9, 42571c <parse_token+0x146c>
  425708:	ldr	x8, [sp, #5512]
  42570c:	ldr	x9, [x8, #1232]
  425710:	ldr	x9, [x9, #32]
  425714:	str	x9, [sp, #4920]
  425718:	b	425724 <parse_token+0x1474>
  42571c:	mov	x8, xzr
  425720:	str	x8, [sp, #4920]
  425724:	ldr	x8, [sp, #4920]
  425728:	ldr	x9, [sp, #5512]
  42572c:	str	x8, [x9, #1224]
  425730:	ldr	x8, [x9, #1224]
  425734:	cbz	x8, 42574c <parse_token+0x149c>
  425738:	ldr	x8, [sp, #5512]
  42573c:	ldr	x9, [x8, #1224]
  425740:	ldr	x9, [x9, #8]
  425744:	str	x9, [sp, #4912]
  425748:	b	425754 <parse_token+0x14a4>
  42574c:	mov	x8, xzr
  425750:	str	x8, [sp, #4912]
  425754:	ldr	x8, [sp, #4912]
  425758:	ldr	x9, [sp, #5512]
  42575c:	str	x8, [x9, #1216]
  425760:	ldr	x8, [x9, #1224]
  425764:	cbz	x8, 42577c <parse_token+0x14cc>
  425768:	ldr	x8, [sp, #5512]
  42576c:	ldr	x9, [x8, #1224]
  425770:	ldr	x9, [x9]
  425774:	str	x9, [sp, #4904]
  425778:	b	425784 <parse_token+0x14d4>
  42577c:	mov	x8, xzr
  425780:	str	x8, [sp, #4904]
  425784:	ldr	x8, [sp, #4904]
  425788:	ldr	x9, [sp, #5512]
  42578c:	str	x8, [x9, #1208]
  425790:	mov	x8, xzr
  425794:	str	x8, [x9, #1192]
  425798:	str	x8, [x9, #1184]
  42579c:	mov	w10, #0x3                   	// #3
  4257a0:	str	w10, [sp, #11100]
  4257a4:	mov	w10, #0x16                  	// #22
  4257a8:	movk	w10, #0x4000, lsl #16
  4257ac:	str	w10, [sp, #11096]
  4257b0:	ldr	x8, [x9, #1184]
  4257b4:	cbz	x8, 4257fc <parse_token+0x154c>
  4257b8:	mov	w0, #0x1                   	// #1
  4257bc:	bl	40a3f0 <log_get_max_level_realm@plt>
  4257c0:	ldr	w8, [sp, #11100]
  4257c4:	cmp	w0, w8
  4257c8:	cset	w8, ge  // ge = tcont
  4257cc:	mov	w9, #0x1                   	// #1
  4257d0:	eor	w8, w8, #0x1
  4257d4:	eor	w8, w8, w9
  4257d8:	and	w8, w8, #0x1
  4257dc:	mov	w1, w8
  4257e0:	sxtw	x10, w1
  4257e4:	cbz	x10, 4257fc <parse_token+0x154c>
  4257e8:	ldr	x8, [sp, #5512]
  4257ec:	ldr	x0, [x8, #1184]
  4257f0:	add	x1, sp, #0x2, lsl #12
  4257f4:	add	x1, x1, #0xb68
  4257f8:	bl	40a860 <sd_device_get_sysname@plt>
  4257fc:	ldr	w0, [sp, #11100]
  425800:	ldr	w1, [sp, #11096]
  425804:	ldr	x8, [sp, #5512]
  425808:	ldr	x9, [x8, #1192]
  42580c:	mov	x10, xzr
  425810:	cmp	x9, #0x0
  425814:	ldr	x9, [sp, #5496]
  425818:	csel	x5, x9, x10, ne  // ne = any
  42581c:	ldr	x6, [x8, #1192]
  425820:	ldr	x10, [x8, #1208]
  425824:	str	w0, [sp, #4900]
  425828:	mov	x0, x10
  42582c:	str	w1, [sp, #4896]
  425830:	str	x5, [sp, #4888]
  425834:	str	x6, [sp, #4880]
  425838:	bl	424274 <strna>
  42583c:	ldr	x8, [sp, #5512]
  425840:	ldr	x9, [x8, #1216]
  425844:	str	x0, [sp, #4872]
  425848:	cbz	x9, 425860 <parse_token+0x15b0>
  42584c:	ldr	x8, [sp, #5512]
  425850:	ldr	x9, [x8, #1216]
  425854:	ldr	w10, [x9, #8]
  425858:	str	w10, [sp, #4868]
  42585c:	b	425868 <parse_token+0x15b8>
  425860:	mov	w8, wzr
  425864:	str	w8, [sp, #4868]
  425868:	ldr	w8, [sp, #4868]
  42586c:	ldr	x9, [sp, #5512]
  425870:	ldr	x10, [x9, #1864]
  425874:	ldr	w0, [sp, #4900]
  425878:	ldr	w1, [sp, #4896]
  42587c:	ldr	x2, [sp, #5488]
  425880:	mov	w3, #0x246                 	// #582
  425884:	ldr	x4, [sp, #5480]
  425888:	ldr	x5, [sp, #4888]
  42588c:	ldr	x6, [sp, #4880]
  425890:	mov	x11, xzr
  425894:	mov	x7, x11
  425898:	mov	x12, sp
  42589c:	str	x11, [x12]
  4258a0:	mov	x11, sp
  4258a4:	ldr	x12, [sp, #5472]
  4258a8:	str	x12, [x11, #8]
  4258ac:	mov	x11, sp
  4258b0:	ldr	x13, [sp, #4872]
  4258b4:	str	x13, [x11, #16]
  4258b8:	mov	x11, sp
  4258bc:	str	w8, [x11, #24]
  4258c0:	mov	x11, sp
  4258c4:	ldr	x14, [sp, #5456]
  4258c8:	str	x14, [x11, #32]
  4258cc:	mov	x11, sp
  4258d0:	str	x10, [x11, #40]
  4258d4:	bl	40a870 <log_object_internal@plt>
  4258d8:	str	w0, [sp, #11092]
  4258dc:	ldr	w8, [sp, #11092]
  4258e0:	str	w8, [sp, #11124]
  4258e4:	ldr	w8, [sp, #11124]
  4258e8:	stur	w8, [x29, #-4]
  4258ec:	b	4300f8 <parse_token+0xbe48>
  4258f0:	ldur	w8, [x29, #-36]
  4258f4:	cmp	w8, #0x3
  4258f8:	b.ne	425af8 <parse_token+0x1848>  // b.any
  4258fc:	ldr	x8, [sp, #5512]
  425900:	ldr	x9, [x8, #1872]
  425904:	str	x9, [x8, #1160]
  425908:	ldr	x9, [x8, #1160]
  42590c:	cbz	x9, 425924 <parse_token+0x1674>
  425910:	ldr	x8, [sp, #5512]
  425914:	ldr	x9, [x8, #1160]
  425918:	ldr	x9, [x9, #32]
  42591c:	str	x9, [sp, #4856]
  425920:	b	42592c <parse_token+0x167c>
  425924:	mov	x8, xzr
  425928:	str	x8, [sp, #4856]
  42592c:	ldr	x8, [sp, #4856]
  425930:	ldr	x9, [sp, #5512]
  425934:	str	x8, [x9, #1152]
  425938:	ldr	x8, [x9, #1152]
  42593c:	cbz	x8, 425954 <parse_token+0x16a4>
  425940:	ldr	x8, [sp, #5512]
  425944:	ldr	x9, [x8, #1152]
  425948:	ldr	x9, [x9, #8]
  42594c:	str	x9, [sp, #4848]
  425950:	b	42595c <parse_token+0x16ac>
  425954:	mov	x8, xzr
  425958:	str	x8, [sp, #4848]
  42595c:	ldr	x8, [sp, #4848]
  425960:	ldr	x9, [sp, #5512]
  425964:	str	x8, [x9, #1144]
  425968:	ldr	x8, [x9, #1152]
  42596c:	cbz	x8, 425984 <parse_token+0x16d4>
  425970:	ldr	x8, [sp, #5512]
  425974:	ldr	x9, [x8, #1152]
  425978:	ldr	x9, [x9]
  42597c:	str	x9, [sp, #4840]
  425980:	b	42598c <parse_token+0x16dc>
  425984:	mov	x8, xzr
  425988:	str	x8, [sp, #4840]
  42598c:	ldr	x8, [sp, #4840]
  425990:	ldr	x9, [sp, #5512]
  425994:	str	x8, [x9, #1136]
  425998:	mov	x8, xzr
  42599c:	str	x8, [x9, #1120]
  4259a0:	str	x8, [x9, #1112]
  4259a4:	mov	w10, #0x3                   	// #3
  4259a8:	str	w10, [sp, #11028]
  4259ac:	mov	w10, #0x16                  	// #22
  4259b0:	movk	w10, #0x4000, lsl #16
  4259b4:	str	w10, [sp, #11024]
  4259b8:	ldr	x8, [x9, #1112]
  4259bc:	cbz	x8, 425a04 <parse_token+0x1754>
  4259c0:	mov	w0, #0x1                   	// #1
  4259c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4259c8:	ldr	w8, [sp, #11028]
  4259cc:	cmp	w0, w8
  4259d0:	cset	w8, ge  // ge = tcont
  4259d4:	mov	w9, #0x1                   	// #1
  4259d8:	eor	w8, w8, #0x1
  4259dc:	eor	w8, w8, w9
  4259e0:	and	w8, w8, #0x1
  4259e4:	mov	w1, w8
  4259e8:	sxtw	x10, w1
  4259ec:	cbz	x10, 425a04 <parse_token+0x1754>
  4259f0:	ldr	x8, [sp, #5512]
  4259f4:	ldr	x0, [x8, #1112]
  4259f8:	add	x1, sp, #0x2, lsl #12
  4259fc:	add	x1, x1, #0xb20
  425a00:	bl	40a860 <sd_device_get_sysname@plt>
  425a04:	ldr	w0, [sp, #11028]
  425a08:	ldr	w1, [sp, #11024]
  425a0c:	ldr	x8, [sp, #5512]
  425a10:	ldr	x9, [x8, #1120]
  425a14:	mov	x10, xzr
  425a18:	cmp	x9, #0x0
  425a1c:	ldr	x9, [sp, #5496]
  425a20:	csel	x5, x9, x10, ne  // ne = any
  425a24:	ldr	x6, [x8, #1120]
  425a28:	ldr	x10, [x8, #1136]
  425a2c:	str	w0, [sp, #4836]
  425a30:	mov	x0, x10
  425a34:	str	w1, [sp, #4832]
  425a38:	str	x5, [sp, #4824]
  425a3c:	str	x6, [sp, #4816]
  425a40:	bl	424274 <strna>
  425a44:	ldr	x8, [sp, #5512]
  425a48:	ldr	x9, [x8, #1144]
  425a4c:	str	x0, [sp, #4808]
  425a50:	cbz	x9, 425a68 <parse_token+0x17b8>
  425a54:	ldr	x8, [sp, #5512]
  425a58:	ldr	x9, [x8, #1144]
  425a5c:	ldr	w10, [x9, #8]
  425a60:	str	w10, [sp, #4804]
  425a64:	b	425a70 <parse_token+0x17c0>
  425a68:	mov	w8, wzr
  425a6c:	str	w8, [sp, #4804]
  425a70:	ldr	w8, [sp, #4804]
  425a74:	ldr	x9, [sp, #5512]
  425a78:	ldr	x10, [x9, #1864]
  425a7c:	ldr	w0, [sp, #4836]
  425a80:	ldr	w1, [sp, #4832]
  425a84:	ldr	x2, [sp, #5488]
  425a88:	mov	w3, #0x248                 	// #584
  425a8c:	ldr	x4, [sp, #5480]
  425a90:	ldr	x5, [sp, #4824]
  425a94:	ldr	x6, [sp, #4816]
  425a98:	mov	x11, xzr
  425a9c:	mov	x7, x11
  425aa0:	mov	x12, sp
  425aa4:	str	x11, [x12]
  425aa8:	mov	x11, sp
  425aac:	ldr	x12, [sp, #5472]
  425ab0:	str	x12, [x11, #8]
  425ab4:	mov	x11, sp
  425ab8:	ldr	x13, [sp, #4808]
  425abc:	str	x13, [x11, #16]
  425ac0:	mov	x11, sp
  425ac4:	str	w8, [x11, #24]
  425ac8:	mov	x11, sp
  425acc:	ldr	x14, [sp, #5464]
  425ad0:	str	x14, [x11, #32]
  425ad4:	mov	x11, sp
  425ad8:	str	x10, [x11, #40]
  425adc:	bl	40a870 <log_object_internal@plt>
  425ae0:	str	w0, [sp, #11020]
  425ae4:	ldr	w8, [sp, #11020]
  425ae8:	str	w8, [sp, #11052]
  425aec:	ldr	w8, [sp, #11052]
  425af0:	stur	w8, [x29, #-4]
  425af4:	b	4300f8 <parse_token+0xbe48>
  425af8:	ldur	w8, [x29, #-36]
  425afc:	cmp	w8, #0x2
  425b00:	b.ne	425cec <parse_token+0x1a3c>  // b.any
  425b04:	ldr	x8, [sp, #5512]
  425b08:	ldr	x9, [x8, #1872]
  425b0c:	str	x9, [x8, #1088]
  425b10:	ldr	x9, [x8, #1088]
  425b14:	cbz	x9, 425b2c <parse_token+0x187c>
  425b18:	ldr	x8, [sp, #5512]
  425b1c:	ldr	x9, [x8, #1088]
  425b20:	ldr	x9, [x9, #32]
  425b24:	str	x9, [sp, #4792]
  425b28:	b	425b34 <parse_token+0x1884>
  425b2c:	mov	x8, xzr
  425b30:	str	x8, [sp, #4792]
  425b34:	ldr	x8, [sp, #4792]
  425b38:	ldr	x9, [sp, #5512]
  425b3c:	str	x8, [x9, #1080]
  425b40:	ldr	x8, [x9, #1080]
  425b44:	cbz	x8, 425b5c <parse_token+0x18ac>
  425b48:	ldr	x8, [sp, #5512]
  425b4c:	ldr	x9, [x8, #1080]
  425b50:	ldr	x9, [x9, #8]
  425b54:	str	x9, [sp, #4784]
  425b58:	b	425b64 <parse_token+0x18b4>
  425b5c:	mov	x8, xzr
  425b60:	str	x8, [sp, #4784]
  425b64:	ldr	x8, [sp, #4784]
  425b68:	ldr	x9, [sp, #5512]
  425b6c:	str	x8, [x9, #1072]
  425b70:	ldr	x8, [x9, #1080]
  425b74:	cbz	x8, 425b8c <parse_token+0x18dc>
  425b78:	ldr	x8, [sp, #5512]
  425b7c:	ldr	x9, [x8, #1080]
  425b80:	ldr	x9, [x9]
  425b84:	str	x9, [sp, #4776]
  425b88:	b	425b94 <parse_token+0x18e4>
  425b8c:	mov	x8, xzr
  425b90:	str	x8, [sp, #4776]
  425b94:	ldr	x8, [sp, #4776]
  425b98:	ldr	x9, [sp, #5512]
  425b9c:	str	x8, [x9, #1064]
  425ba0:	mov	x8, xzr
  425ba4:	str	x8, [x9, #1048]
  425ba8:	str	x8, [x9, #1040]
  425bac:	mov	w10, #0x4                   	// #4
  425bb0:	str	w10, [sp, #10956]
  425bb4:	str	wzr, [sp, #10952]
  425bb8:	ldr	x8, [x9, #1040]
  425bbc:	cbz	x8, 425c04 <parse_token+0x1954>
  425bc0:	mov	w0, #0x1                   	// #1
  425bc4:	bl	40a3f0 <log_get_max_level_realm@plt>
  425bc8:	ldr	w8, [sp, #10956]
  425bcc:	cmp	w0, w8
  425bd0:	cset	w8, ge  // ge = tcont
  425bd4:	mov	w9, #0x1                   	// #1
  425bd8:	eor	w8, w8, #0x1
  425bdc:	eor	w8, w8, w9
  425be0:	and	w8, w8, #0x1
  425be4:	mov	w1, w8
  425be8:	sxtw	x10, w1
  425bec:	cbz	x10, 425c04 <parse_token+0x1954>
  425bf0:	ldr	x8, [sp, #5512]
  425bf4:	ldr	x0, [x8, #1040]
  425bf8:	add	x1, sp, #0x2, lsl #12
  425bfc:	add	x1, x1, #0xad8
  425c00:	bl	40a860 <sd_device_get_sysname@plt>
  425c04:	ldr	w0, [sp, #10956]
  425c08:	ldr	w1, [sp, #10952]
  425c0c:	ldr	x8, [sp, #5512]
  425c10:	ldr	x9, [x8, #1048]
  425c14:	mov	x10, xzr
  425c18:	cmp	x9, #0x0
  425c1c:	ldr	x9, [sp, #5496]
  425c20:	csel	x5, x9, x10, ne  // ne = any
  425c24:	ldr	x6, [x8, #1048]
  425c28:	ldr	x10, [x8, #1064]
  425c2c:	str	w0, [sp, #4772]
  425c30:	mov	x0, x10
  425c34:	str	w1, [sp, #4768]
  425c38:	str	x5, [sp, #4760]
  425c3c:	str	x6, [sp, #4752]
  425c40:	bl	424274 <strna>
  425c44:	ldr	x8, [sp, #5512]
  425c48:	ldr	x9, [x8, #1072]
  425c4c:	str	x0, [sp, #4744]
  425c50:	cbz	x9, 425c68 <parse_token+0x19b8>
  425c54:	ldr	x8, [sp, #5512]
  425c58:	ldr	x9, [x8, #1072]
  425c5c:	ldr	w10, [x9, #8]
  425c60:	str	w10, [sp, #4740]
  425c64:	b	425c70 <parse_token+0x19c0>
  425c68:	mov	w8, wzr
  425c6c:	str	w8, [sp, #4740]
  425c70:	ldr	w8, [sp, #4740]
  425c74:	ldr	x9, [sp, #5512]
  425c78:	ldr	x10, [x9, #1864]
  425c7c:	ldr	w0, [sp, #4772]
  425c80:	ldr	w1, [sp, #4768]
  425c84:	ldr	x2, [sp, #5488]
  425c88:	mov	w3, #0x24a                 	// #586
  425c8c:	ldr	x4, [sp, #5480]
  425c90:	ldr	x5, [sp, #4760]
  425c94:	ldr	x6, [sp, #4752]
  425c98:	mov	x11, xzr
  425c9c:	mov	x7, x11
  425ca0:	mov	x12, sp
  425ca4:	str	x11, [x12]
  425ca8:	mov	x11, sp
  425cac:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  425cb0:	add	x12, x12, #0x934
  425cb4:	str	x12, [x11, #8]
  425cb8:	mov	x11, sp
  425cbc:	ldr	x12, [sp, #4744]
  425cc0:	str	x12, [x11, #16]
  425cc4:	mov	x11, sp
  425cc8:	str	w8, [x11, #24]
  425ccc:	mov	x11, sp
  425cd0:	str	x10, [x11, #32]
  425cd4:	bl	40a870 <log_object_internal@plt>
  425cd8:	str	w0, [sp, #10948]
  425cdc:	ldr	w8, [sp, #10948]
  425ce0:	str	w8, [sp, #10980]
  425ce4:	mov	w8, #0x4                   	// #4
  425ce8:	stur	w8, [x29, #-36]
  425cec:	ldr	x8, [sp, #5512]
  425cf0:	ldrb	w9, [x8, #1839]
  425cf4:	tbnz	w9, #0, 426130 <parse_token+0x1e80>
  425cf8:	ldr	x8, [sp, #5512]
  425cfc:	ldr	x0, [x8, #1840]
  425d00:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  425d04:	add	x1, x1, #0x98b
  425d08:	bl	40aa20 <strcmp@plt>
  425d0c:	cbnz	w0, 425ef4 <parse_token+0x1c44>
  425d10:	ldr	x8, [sp, #5512]
  425d14:	ldr	x9, [x8, #1872]
  425d18:	str	x9, [x8, #1016]
  425d1c:	ldr	x9, [x8, #1016]
  425d20:	cbz	x9, 425d38 <parse_token+0x1a88>
  425d24:	ldr	x8, [sp, #5512]
  425d28:	ldr	x9, [x8, #1016]
  425d2c:	ldr	x9, [x9, #32]
  425d30:	str	x9, [sp, #4728]
  425d34:	b	425d40 <parse_token+0x1a90>
  425d38:	mov	x8, xzr
  425d3c:	str	x8, [sp, #4728]
  425d40:	ldr	x8, [sp, #4728]
  425d44:	ldr	x9, [sp, #5512]
  425d48:	str	x8, [x9, #1008]
  425d4c:	ldr	x8, [x9, #1008]
  425d50:	cbz	x8, 425d68 <parse_token+0x1ab8>
  425d54:	ldr	x8, [sp, #5512]
  425d58:	ldr	x9, [x8, #1008]
  425d5c:	ldr	x9, [x9, #8]
  425d60:	str	x9, [sp, #4720]
  425d64:	b	425d70 <parse_token+0x1ac0>
  425d68:	mov	x8, xzr
  425d6c:	str	x8, [sp, #4720]
  425d70:	ldr	x8, [sp, #4720]
  425d74:	ldr	x9, [sp, #5512]
  425d78:	str	x8, [x9, #1000]
  425d7c:	ldr	x8, [x9, #1008]
  425d80:	cbz	x8, 425d98 <parse_token+0x1ae8>
  425d84:	ldr	x8, [sp, #5512]
  425d88:	ldr	x9, [x8, #1008]
  425d8c:	ldr	x9, [x9]
  425d90:	str	x9, [sp, #4712]
  425d94:	b	425da0 <parse_token+0x1af0>
  425d98:	mov	x8, xzr
  425d9c:	str	x8, [sp, #4712]
  425da0:	ldr	x8, [sp, #4712]
  425da4:	ldr	x9, [sp, #5512]
  425da8:	str	x8, [x9, #992]
  425dac:	mov	x8, xzr
  425db0:	str	x8, [x9, #976]
  425db4:	str	x8, [x9, #968]
  425db8:	mov	w10, #0x3                   	// #3
  425dbc:	str	w10, [sp, #10884]
  425dc0:	mov	w10, #0x16                  	// #22
  425dc4:	movk	w10, #0x4000, lsl #16
  425dc8:	str	w10, [sp, #10880]
  425dcc:	ldr	x8, [x9, #968]
  425dd0:	cbz	x8, 425e18 <parse_token+0x1b68>
  425dd4:	mov	w0, #0x1                   	// #1
  425dd8:	bl	40a3f0 <log_get_max_level_realm@plt>
  425ddc:	ldr	w8, [sp, #10884]
  425de0:	cmp	w0, w8
  425de4:	cset	w8, ge  // ge = tcont
  425de8:	mov	w9, #0x1                   	// #1
  425dec:	eor	w8, w8, #0x1
  425df0:	eor	w8, w8, w9
  425df4:	and	w8, w8, #0x1
  425df8:	mov	w1, w8
  425dfc:	sxtw	x10, w1
  425e00:	cbz	x10, 425e18 <parse_token+0x1b68>
  425e04:	ldr	x8, [sp, #5512]
  425e08:	ldr	x0, [x8, #968]
  425e0c:	add	x1, sp, #0x2, lsl #12
  425e10:	add	x1, x1, #0xa90
  425e14:	bl	40a860 <sd_device_get_sysname@plt>
  425e18:	ldr	w0, [sp, #10884]
  425e1c:	ldr	w1, [sp, #10880]
  425e20:	ldr	x8, [sp, #5512]
  425e24:	ldr	x9, [x8, #976]
  425e28:	mov	x10, xzr
  425e2c:	cmp	x9, #0x0
  425e30:	ldr	x9, [sp, #5496]
  425e34:	csel	x5, x9, x10, ne  // ne = any
  425e38:	ldr	x6, [x8, #976]
  425e3c:	ldr	x10, [x8, #992]
  425e40:	str	w0, [sp, #4708]
  425e44:	mov	x0, x10
  425e48:	str	w1, [sp, #4704]
  425e4c:	str	x5, [sp, #4696]
  425e50:	str	x6, [sp, #4688]
  425e54:	bl	424274 <strna>
  425e58:	ldr	x8, [sp, #5512]
  425e5c:	ldr	x9, [x8, #1000]
  425e60:	str	x0, [sp, #4680]
  425e64:	cbz	x9, 425e7c <parse_token+0x1bcc>
  425e68:	ldr	x8, [sp, #5512]
  425e6c:	ldr	x9, [x8, #1000]
  425e70:	ldr	w10, [x9, #8]
  425e74:	str	w10, [sp, #4676]
  425e78:	b	425e84 <parse_token+0x1bd4>
  425e7c:	mov	w8, wzr
  425e80:	str	w8, [sp, #4676]
  425e84:	ldr	w8, [sp, #4676]
  425e88:	ldr	w0, [sp, #4708]
  425e8c:	ldr	w1, [sp, #4704]
  425e90:	ldr	x2, [sp, #5488]
  425e94:	mov	w3, #0x251                 	// #593
  425e98:	ldr	x4, [sp, #5480]
  425e9c:	ldr	x5, [sp, #4696]
  425ea0:	ldr	x6, [sp, #4688]
  425ea4:	mov	x9, xzr
  425ea8:	mov	x7, x9
  425eac:	mov	x10, sp
  425eb0:	str	x9, [x10]
  425eb4:	mov	x9, sp
  425eb8:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  425ebc:	add	x10, x10, #0x98e
  425ec0:	str	x10, [x9, #8]
  425ec4:	mov	x9, sp
  425ec8:	ldr	x10, [sp, #4680]
  425ecc:	str	x10, [x9, #16]
  425ed0:	mov	x9, sp
  425ed4:	str	w8, [x9, #24]
  425ed8:	bl	40a870 <log_object_internal@plt>
  425edc:	str	w0, [sp, #10876]
  425ee0:	ldr	w8, [sp, #10876]
  425ee4:	str	w8, [sp, #10908]
  425ee8:	ldr	w8, [sp, #10908]
  425eec:	stur	w8, [x29, #-4]
  425ef0:	b	4300f8 <parse_token+0xbe48>
  425ef4:	ldr	x8, [sp, #5512]
  425ef8:	ldr	x0, [x8, #1840]
  425efc:	bl	423ddc <isempty>
  425f00:	tbnz	w0, #0, 425f08 <parse_token+0x1c58>
  425f04:	b	4260ec <parse_token+0x1e3c>
  425f08:	ldr	x8, [sp, #5512]
  425f0c:	ldr	x9, [x8, #1872]
  425f10:	str	x9, [x8, #944]
  425f14:	ldr	x9, [x8, #944]
  425f18:	cbz	x9, 425f30 <parse_token+0x1c80>
  425f1c:	ldr	x8, [sp, #5512]
  425f20:	ldr	x9, [x8, #944]
  425f24:	ldr	x9, [x9, #32]
  425f28:	str	x9, [sp, #4664]
  425f2c:	b	425f38 <parse_token+0x1c88>
  425f30:	mov	x8, xzr
  425f34:	str	x8, [sp, #4664]
  425f38:	ldr	x8, [sp, #4664]
  425f3c:	ldr	x9, [sp, #5512]
  425f40:	str	x8, [x9, #936]
  425f44:	ldr	x8, [x9, #936]
  425f48:	cbz	x8, 425f60 <parse_token+0x1cb0>
  425f4c:	ldr	x8, [sp, #5512]
  425f50:	ldr	x9, [x8, #936]
  425f54:	ldr	x9, [x9, #8]
  425f58:	str	x9, [sp, #4656]
  425f5c:	b	425f68 <parse_token+0x1cb8>
  425f60:	mov	x8, xzr
  425f64:	str	x8, [sp, #4656]
  425f68:	ldr	x8, [sp, #4656]
  425f6c:	ldr	x9, [sp, #5512]
  425f70:	str	x8, [x9, #928]
  425f74:	ldr	x8, [x9, #936]
  425f78:	cbz	x8, 425f90 <parse_token+0x1ce0>
  425f7c:	ldr	x8, [sp, #5512]
  425f80:	ldr	x9, [x8, #936]
  425f84:	ldr	x9, [x9]
  425f88:	str	x9, [sp, #4648]
  425f8c:	b	425f98 <parse_token+0x1ce8>
  425f90:	mov	x8, xzr
  425f94:	str	x8, [sp, #4648]
  425f98:	ldr	x8, [sp, #4648]
  425f9c:	ldr	x9, [sp, #5512]
  425fa0:	str	x8, [x9, #920]
  425fa4:	mov	x8, xzr
  425fa8:	str	x8, [x9, #904]
  425fac:	str	x8, [x9, #896]
  425fb0:	mov	w10, #0x3                   	// #3
  425fb4:	str	w10, [sp, #10812]
  425fb8:	mov	w10, #0x16                  	// #22
  425fbc:	movk	w10, #0x4000, lsl #16
  425fc0:	str	w10, [sp, #10808]
  425fc4:	ldr	x8, [x9, #896]
  425fc8:	cbz	x8, 426010 <parse_token+0x1d60>
  425fcc:	mov	w0, #0x1                   	// #1
  425fd0:	bl	40a3f0 <log_get_max_level_realm@plt>
  425fd4:	ldr	w8, [sp, #10812]
  425fd8:	cmp	w0, w8
  425fdc:	cset	w8, ge  // ge = tcont
  425fe0:	mov	w9, #0x1                   	// #1
  425fe4:	eor	w8, w8, #0x1
  425fe8:	eor	w8, w8, w9
  425fec:	and	w8, w8, #0x1
  425ff0:	mov	w1, w8
  425ff4:	sxtw	x10, w1
  425ff8:	cbz	x10, 426010 <parse_token+0x1d60>
  425ffc:	ldr	x8, [sp, #5512]
  426000:	ldr	x0, [x8, #896]
  426004:	add	x1, sp, #0x2, lsl #12
  426008:	add	x1, x1, #0xa48
  42600c:	bl	40a860 <sd_device_get_sysname@plt>
  426010:	ldr	w0, [sp, #10812]
  426014:	ldr	w1, [sp, #10808]
  426018:	ldr	x8, [sp, #5512]
  42601c:	ldr	x9, [x8, #904]
  426020:	mov	x10, xzr
  426024:	cmp	x9, #0x0
  426028:	ldr	x9, [sp, #5496]
  42602c:	csel	x5, x9, x10, ne  // ne = any
  426030:	ldr	x6, [x8, #904]
  426034:	ldr	x10, [x8, #920]
  426038:	str	w0, [sp, #4644]
  42603c:	mov	x0, x10
  426040:	str	w1, [sp, #4640]
  426044:	str	x5, [sp, #4632]
  426048:	str	x6, [sp, #4624]
  42604c:	bl	424274 <strna>
  426050:	ldr	x8, [sp, #5512]
  426054:	ldr	x9, [x8, #928]
  426058:	str	x0, [sp, #4616]
  42605c:	cbz	x9, 426074 <parse_token+0x1dc4>
  426060:	ldr	x8, [sp, #5512]
  426064:	ldr	x9, [x8, #928]
  426068:	ldr	w10, [x9, #8]
  42606c:	str	w10, [sp, #4612]
  426070:	b	42607c <parse_token+0x1dcc>
  426074:	mov	w8, wzr
  426078:	str	w8, [sp, #4612]
  42607c:	ldr	w8, [sp, #4612]
  426080:	ldr	w0, [sp, #4644]
  426084:	ldr	w1, [sp, #4640]
  426088:	ldr	x2, [sp, #5488]
  42608c:	mov	w3, #0x254                 	// #596
  426090:	ldr	x4, [sp, #5480]
  426094:	ldr	x5, [sp, #4632]
  426098:	ldr	x6, [sp, #4624]
  42609c:	mov	x9, xzr
  4260a0:	mov	x7, x9
  4260a4:	mov	x10, sp
  4260a8:	str	x9, [x10]
  4260ac:	mov	x9, sp
  4260b0:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  4260b4:	add	x10, x10, #0x9d8
  4260b8:	str	x10, [x9, #8]
  4260bc:	mov	x9, sp
  4260c0:	ldr	x10, [sp, #4616]
  4260c4:	str	x10, [x9, #16]
  4260c8:	mov	x9, sp
  4260cc:	str	w8, [x9, #24]
  4260d0:	bl	40a870 <log_object_internal@plt>
  4260d4:	str	w0, [sp, #10804]
  4260d8:	ldr	w8, [sp, #10804]
  4260dc:	str	w8, [sp, #10836]
  4260e0:	ldr	w8, [sp, #10836]
  4260e4:	stur	w8, [x29, #-4]
  4260e8:	b	4300f8 <parse_token+0xbe48>
  4260ec:	ldr	x8, [sp, #5512]
  4260f0:	ldr	x0, [x8, #1872]
  4260f4:	ldr	x1, [x8, #1864]
  4260f8:	ldr	x2, [x8, #1840]
  4260fc:	mov	w9, wzr
  426100:	and	w3, w9, #0x1
  426104:	bl	430d00 <check_value_format_and_warn>
  426108:	ldr	x8, [sp, #5512]
  42610c:	ldr	x0, [x8, #1824]
  426110:	ldur	w2, [x29, #-36]
  426114:	ldr	x3, [x8, #1840]
  426118:	mov	w1, #0x29                  	// #41
  42611c:	mov	x10, xzr
  426120:	mov	x4, x10
  426124:	bl	430504 <rule_line_add_token>
  426128:	stur	w0, [x29, #-68]
  42612c:	b	426154 <parse_token+0x1ea4>
  426130:	ldr	x8, [sp, #5512]
  426134:	ldr	x0, [x8, #1824]
  426138:	ldur	w2, [x29, #-36]
  42613c:	ldr	x3, [x8, #1840]
  426140:	mov	w1, #0x4                   	// #4
  426144:	mov	x9, xzr
  426148:	mov	x4, x9
  42614c:	bl	430504 <rule_line_add_token>
  426150:	stur	w0, [x29, #-68]
  426154:	b	4300c4 <parse_token+0xbe14>
  426158:	ldr	x8, [sp, #5512]
  42615c:	ldr	x0, [x8, #1864]
  426160:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  426164:	add	x1, x1, #0xa1a
  426168:	bl	40aa20 <strcmp@plt>
  42616c:	cbnz	w0, 426a14 <parse_token+0x2764>
  426170:	ldr	x8, [sp, #5512]
  426174:	ldr	x0, [x8, #1856]
  426178:	bl	423ddc <isempty>
  42617c:	tbnz	w0, #0, 426184 <parse_token+0x1ed4>
  426180:	b	426380 <parse_token+0x20d0>
  426184:	ldr	x8, [sp, #5512]
  426188:	ldr	x9, [x8, #1872]
  42618c:	str	x9, [x8, #872]
  426190:	ldr	x9, [x8, #872]
  426194:	cbz	x9, 4261ac <parse_token+0x1efc>
  426198:	ldr	x8, [sp, #5512]
  42619c:	ldr	x9, [x8, #872]
  4261a0:	ldr	x9, [x9, #32]
  4261a4:	str	x9, [sp, #4600]
  4261a8:	b	4261b4 <parse_token+0x1f04>
  4261ac:	mov	x8, xzr
  4261b0:	str	x8, [sp, #4600]
  4261b4:	ldr	x8, [sp, #4600]
  4261b8:	ldr	x9, [sp, #5512]
  4261bc:	str	x8, [x9, #864]
  4261c0:	ldr	x8, [x9, #864]
  4261c4:	cbz	x8, 4261dc <parse_token+0x1f2c>
  4261c8:	ldr	x8, [sp, #5512]
  4261cc:	ldr	x9, [x8, #864]
  4261d0:	ldr	x9, [x9, #8]
  4261d4:	str	x9, [sp, #4592]
  4261d8:	b	4261e4 <parse_token+0x1f34>
  4261dc:	mov	x8, xzr
  4261e0:	str	x8, [sp, #4592]
  4261e4:	ldr	x8, [sp, #4592]
  4261e8:	ldr	x9, [sp, #5512]
  4261ec:	str	x8, [x9, #856]
  4261f0:	ldr	x8, [x9, #864]
  4261f4:	cbz	x8, 42620c <parse_token+0x1f5c>
  4261f8:	ldr	x8, [sp, #5512]
  4261fc:	ldr	x9, [x8, #864]
  426200:	ldr	x9, [x9]
  426204:	str	x9, [sp, #4584]
  426208:	b	426214 <parse_token+0x1f64>
  42620c:	mov	x8, xzr
  426210:	str	x8, [sp, #4584]
  426214:	ldr	x8, [sp, #4584]
  426218:	ldr	x9, [sp, #5512]
  42621c:	str	x8, [x9, #848]
  426220:	mov	x8, xzr
  426224:	str	x8, [x9, #832]
  426228:	str	x8, [x9, #824]
  42622c:	mov	w10, #0x3                   	// #3
  426230:	str	w10, [sp, #10740]
  426234:	mov	w10, #0x16                  	// #22
  426238:	movk	w10, #0x4000, lsl #16
  42623c:	str	w10, [sp, #10736]
  426240:	ldr	x8, [x9, #824]
  426244:	cbz	x8, 42628c <parse_token+0x1fdc>
  426248:	mov	w0, #0x1                   	// #1
  42624c:	bl	40a3f0 <log_get_max_level_realm@plt>
  426250:	ldr	w8, [sp, #10740]
  426254:	cmp	w0, w8
  426258:	cset	w8, ge  // ge = tcont
  42625c:	mov	w9, #0x1                   	// #1
  426260:	eor	w8, w8, #0x1
  426264:	eor	w8, w8, w9
  426268:	and	w8, w8, #0x1
  42626c:	mov	w1, w8
  426270:	sxtw	x10, w1
  426274:	cbz	x10, 42628c <parse_token+0x1fdc>
  426278:	ldr	x8, [sp, #5512]
  42627c:	ldr	x0, [x8, #824]
  426280:	add	x1, sp, #0x2, lsl #12
  426284:	add	x1, x1, #0xa00
  426288:	bl	40a860 <sd_device_get_sysname@plt>
  42628c:	ldr	w0, [sp, #10740]
  426290:	ldr	w1, [sp, #10736]
  426294:	ldr	x8, [sp, #5512]
  426298:	ldr	x9, [x8, #832]
  42629c:	mov	x10, xzr
  4262a0:	cmp	x9, #0x0
  4262a4:	ldr	x9, [sp, #5496]
  4262a8:	csel	x5, x9, x10, ne  // ne = any
  4262ac:	ldr	x6, [x8, #832]
  4262b0:	ldr	x10, [x8, #848]
  4262b4:	str	w0, [sp, #4580]
  4262b8:	mov	x0, x10
  4262bc:	str	w1, [sp, #4576]
  4262c0:	str	x5, [sp, #4568]
  4262c4:	str	x6, [sp, #4560]
  4262c8:	bl	424274 <strna>
  4262cc:	ldr	x8, [sp, #5512]
  4262d0:	ldr	x9, [x8, #856]
  4262d4:	str	x0, [sp, #4552]
  4262d8:	cbz	x9, 4262f0 <parse_token+0x2040>
  4262dc:	ldr	x8, [sp, #5512]
  4262e0:	ldr	x9, [x8, #856]
  4262e4:	ldr	w10, [x9, #8]
  4262e8:	str	w10, [sp, #4548]
  4262ec:	b	4262f8 <parse_token+0x2048>
  4262f0:	mov	w8, wzr
  4262f4:	str	w8, [sp, #4548]
  4262f8:	ldr	w8, [sp, #4548]
  4262fc:	ldr	x9, [sp, #5512]
  426300:	ldr	x10, [x9, #1864]
  426304:	ldr	w0, [sp, #4580]
  426308:	ldr	w1, [sp, #4576]
  42630c:	ldr	x2, [sp, #5488]
  426310:	mov	w3, #0x25c                 	// #604
  426314:	ldr	x4, [sp, #5480]
  426318:	ldr	x5, [sp, #4568]
  42631c:	ldr	x6, [sp, #4560]
  426320:	mov	x11, xzr
  426324:	mov	x7, x11
  426328:	mov	x12, sp
  42632c:	str	x11, [x12]
  426330:	mov	x11, sp
  426334:	ldr	x12, [sp, #5472]
  426338:	str	x12, [x11, #8]
  42633c:	mov	x11, sp
  426340:	ldr	x13, [sp, #4552]
  426344:	str	x13, [x11, #16]
  426348:	mov	x11, sp
  42634c:	str	w8, [x11, #24]
  426350:	mov	x11, sp
  426354:	ldr	x14, [sp, #5456]
  426358:	str	x14, [x11, #32]
  42635c:	mov	x11, sp
  426360:	str	x10, [x11, #40]
  426364:	bl	40a870 <log_object_internal@plt>
  426368:	str	w0, [sp, #10732]
  42636c:	ldr	w8, [sp, #10732]
  426370:	str	w8, [sp, #10764]
  426374:	ldr	w8, [sp, #10764]
  426378:	stur	w8, [x29, #-4]
  42637c:	b	4300f8 <parse_token+0xbe48>
  426380:	ldur	w8, [x29, #-36]
  426384:	cmp	w8, #0x3
  426388:	b.ne	426588 <parse_token+0x22d8>  // b.any
  42638c:	ldr	x8, [sp, #5512]
  426390:	ldr	x9, [x8, #1872]
  426394:	str	x9, [x8, #800]
  426398:	ldr	x9, [x8, #800]
  42639c:	cbz	x9, 4263b4 <parse_token+0x2104>
  4263a0:	ldr	x8, [sp, #5512]
  4263a4:	ldr	x9, [x8, #800]
  4263a8:	ldr	x9, [x9, #32]
  4263ac:	str	x9, [sp, #4536]
  4263b0:	b	4263bc <parse_token+0x210c>
  4263b4:	mov	x8, xzr
  4263b8:	str	x8, [sp, #4536]
  4263bc:	ldr	x8, [sp, #4536]
  4263c0:	ldr	x9, [sp, #5512]
  4263c4:	str	x8, [x9, #792]
  4263c8:	ldr	x8, [x9, #792]
  4263cc:	cbz	x8, 4263e4 <parse_token+0x2134>
  4263d0:	ldr	x8, [sp, #5512]
  4263d4:	ldr	x9, [x8, #792]
  4263d8:	ldr	x9, [x9, #8]
  4263dc:	str	x9, [sp, #4528]
  4263e0:	b	4263ec <parse_token+0x213c>
  4263e4:	mov	x8, xzr
  4263e8:	str	x8, [sp, #4528]
  4263ec:	ldr	x8, [sp, #4528]
  4263f0:	ldr	x9, [sp, #5512]
  4263f4:	str	x8, [x9, #784]
  4263f8:	ldr	x8, [x9, #792]
  4263fc:	cbz	x8, 426414 <parse_token+0x2164>
  426400:	ldr	x8, [sp, #5512]
  426404:	ldr	x9, [x8, #792]
  426408:	ldr	x9, [x9]
  42640c:	str	x9, [sp, #4520]
  426410:	b	42641c <parse_token+0x216c>
  426414:	mov	x8, xzr
  426418:	str	x8, [sp, #4520]
  42641c:	ldr	x8, [sp, #4520]
  426420:	ldr	x9, [sp, #5512]
  426424:	str	x8, [x9, #776]
  426428:	mov	x8, xzr
  42642c:	str	x8, [x9, #760]
  426430:	str	x8, [x9, #752]
  426434:	mov	w10, #0x3                   	// #3
  426438:	str	w10, [sp, #10668]
  42643c:	mov	w10, #0x16                  	// #22
  426440:	movk	w10, #0x4000, lsl #16
  426444:	str	w10, [sp, #10664]
  426448:	ldr	x8, [x9, #752]
  42644c:	cbz	x8, 426494 <parse_token+0x21e4>
  426450:	mov	w0, #0x1                   	// #1
  426454:	bl	40a3f0 <log_get_max_level_realm@plt>
  426458:	ldr	w8, [sp, #10668]
  42645c:	cmp	w0, w8
  426460:	cset	w8, ge  // ge = tcont
  426464:	mov	w9, #0x1                   	// #1
  426468:	eor	w8, w8, #0x1
  42646c:	eor	w8, w8, w9
  426470:	and	w8, w8, #0x1
  426474:	mov	w1, w8
  426478:	sxtw	x10, w1
  42647c:	cbz	x10, 426494 <parse_token+0x21e4>
  426480:	ldr	x8, [sp, #5512]
  426484:	ldr	x0, [x8, #752]
  426488:	add	x1, sp, #0x2, lsl #12
  42648c:	add	x1, x1, #0x9b8
  426490:	bl	40a860 <sd_device_get_sysname@plt>
  426494:	ldr	w0, [sp, #10668]
  426498:	ldr	w1, [sp, #10664]
  42649c:	ldr	x8, [sp, #5512]
  4264a0:	ldr	x9, [x8, #760]
  4264a4:	mov	x10, xzr
  4264a8:	cmp	x9, #0x0
  4264ac:	ldr	x9, [sp, #5496]
  4264b0:	csel	x5, x9, x10, ne  // ne = any
  4264b4:	ldr	x6, [x8, #760]
  4264b8:	ldr	x10, [x8, #776]
  4264bc:	str	w0, [sp, #4516]
  4264c0:	mov	x0, x10
  4264c4:	str	w1, [sp, #4512]
  4264c8:	str	x5, [sp, #4504]
  4264cc:	str	x6, [sp, #4496]
  4264d0:	bl	424274 <strna>
  4264d4:	ldr	x8, [sp, #5512]
  4264d8:	ldr	x9, [x8, #784]
  4264dc:	str	x0, [sp, #4488]
  4264e0:	cbz	x9, 4264f8 <parse_token+0x2248>
  4264e4:	ldr	x8, [sp, #5512]
  4264e8:	ldr	x9, [x8, #784]
  4264ec:	ldr	w10, [x9, #8]
  4264f0:	str	w10, [sp, #4484]
  4264f4:	b	426500 <parse_token+0x2250>
  4264f8:	mov	w8, wzr
  4264fc:	str	w8, [sp, #4484]
  426500:	ldr	w8, [sp, #4484]
  426504:	ldr	x9, [sp, #5512]
  426508:	ldr	x10, [x9, #1864]
  42650c:	ldr	w0, [sp, #4516]
  426510:	ldr	w1, [sp, #4512]
  426514:	ldr	x2, [sp, #5488]
  426518:	mov	w3, #0x25e                 	// #606
  42651c:	ldr	x4, [sp, #5480]
  426520:	ldr	x5, [sp, #4504]
  426524:	ldr	x6, [sp, #4496]
  426528:	mov	x11, xzr
  42652c:	mov	x7, x11
  426530:	mov	x12, sp
  426534:	str	x11, [x12]
  426538:	mov	x11, sp
  42653c:	ldr	x12, [sp, #5472]
  426540:	str	x12, [x11, #8]
  426544:	mov	x11, sp
  426548:	ldr	x13, [sp, #4488]
  42654c:	str	x13, [x11, #16]
  426550:	mov	x11, sp
  426554:	str	w8, [x11, #24]
  426558:	mov	x11, sp
  42655c:	ldr	x14, [sp, #5464]
  426560:	str	x14, [x11, #32]
  426564:	mov	x11, sp
  426568:	str	x10, [x11, #40]
  42656c:	bl	40a870 <log_object_internal@plt>
  426570:	str	w0, [sp, #10660]
  426574:	ldr	w8, [sp, #10660]
  426578:	str	w8, [sp, #10692]
  42657c:	ldr	w8, [sp, #10692]
  426580:	stur	w8, [x29, #-4]
  426584:	b	4300f8 <parse_token+0xbe48>
  426588:	ldur	w8, [x29, #-36]
  42658c:	cmp	w8, #0x5
  426590:	b.ne	42677c <parse_token+0x24cc>  // b.any
  426594:	ldr	x8, [sp, #5512]
  426598:	ldr	x9, [x8, #1872]
  42659c:	str	x9, [x8, #728]
  4265a0:	ldr	x9, [x8, #728]
  4265a4:	cbz	x9, 4265bc <parse_token+0x230c>
  4265a8:	ldr	x8, [sp, #5512]
  4265ac:	ldr	x9, [x8, #728]
  4265b0:	ldr	x9, [x9, #32]
  4265b4:	str	x9, [sp, #4472]
  4265b8:	b	4265c4 <parse_token+0x2314>
  4265bc:	mov	x8, xzr
  4265c0:	str	x8, [sp, #4472]
  4265c4:	ldr	x8, [sp, #4472]
  4265c8:	ldr	x9, [sp, #5512]
  4265cc:	str	x8, [x9, #720]
  4265d0:	ldr	x8, [x9, #720]
  4265d4:	cbz	x8, 4265ec <parse_token+0x233c>
  4265d8:	ldr	x8, [sp, #5512]
  4265dc:	ldr	x9, [x8, #720]
  4265e0:	ldr	x9, [x9, #8]
  4265e4:	str	x9, [sp, #4464]
  4265e8:	b	4265f4 <parse_token+0x2344>
  4265ec:	mov	x8, xzr
  4265f0:	str	x8, [sp, #4464]
  4265f4:	ldr	x8, [sp, #4464]
  4265f8:	ldr	x9, [sp, #5512]
  4265fc:	str	x8, [x9, #712]
  426600:	ldr	x8, [x9, #720]
  426604:	cbz	x8, 42661c <parse_token+0x236c>
  426608:	ldr	x8, [sp, #5512]
  42660c:	ldr	x9, [x8, #720]
  426610:	ldr	x9, [x9]
  426614:	str	x9, [sp, #4456]
  426618:	b	426624 <parse_token+0x2374>
  42661c:	mov	x8, xzr
  426620:	str	x8, [sp, #4456]
  426624:	ldr	x8, [sp, #4456]
  426628:	ldr	x9, [sp, #5512]
  42662c:	str	x8, [x9, #704]
  426630:	mov	x8, xzr
  426634:	str	x8, [x9, #688]
  426638:	str	x8, [x9, #680]
  42663c:	mov	w10, #0x4                   	// #4
  426640:	str	w10, [sp, #10596]
  426644:	str	wzr, [sp, #10592]
  426648:	ldr	x8, [x9, #680]
  42664c:	cbz	x8, 426694 <parse_token+0x23e4>
  426650:	mov	w0, #0x1                   	// #1
  426654:	bl	40a3f0 <log_get_max_level_realm@plt>
  426658:	ldr	w8, [sp, #10596]
  42665c:	cmp	w0, w8
  426660:	cset	w8, ge  // ge = tcont
  426664:	mov	w9, #0x1                   	// #1
  426668:	eor	w8, w8, #0x1
  42666c:	eor	w8, w8, w9
  426670:	and	w8, w8, #0x1
  426674:	mov	w1, w8
  426678:	sxtw	x10, w1
  42667c:	cbz	x10, 426694 <parse_token+0x23e4>
  426680:	ldr	x8, [sp, #5512]
  426684:	ldr	x0, [x8, #680]
  426688:	add	x1, sp, #0x2, lsl #12
  42668c:	add	x1, x1, #0x970
  426690:	bl	40a860 <sd_device_get_sysname@plt>
  426694:	ldr	w0, [sp, #10596]
  426698:	ldr	w1, [sp, #10592]
  42669c:	ldr	x8, [sp, #5512]
  4266a0:	ldr	x9, [x8, #688]
  4266a4:	mov	x10, xzr
  4266a8:	cmp	x9, #0x0
  4266ac:	ldr	x9, [sp, #5496]
  4266b0:	csel	x5, x9, x10, ne  // ne = any
  4266b4:	ldr	x6, [x8, #688]
  4266b8:	ldr	x10, [x8, #704]
  4266bc:	str	w0, [sp, #4452]
  4266c0:	mov	x0, x10
  4266c4:	str	w1, [sp, #4448]
  4266c8:	str	x5, [sp, #4440]
  4266cc:	str	x6, [sp, #4432]
  4266d0:	bl	424274 <strna>
  4266d4:	ldr	x8, [sp, #5512]
  4266d8:	ldr	x9, [x8, #712]
  4266dc:	str	x0, [sp, #4424]
  4266e0:	cbz	x9, 4266f8 <parse_token+0x2448>
  4266e4:	ldr	x8, [sp, #5512]
  4266e8:	ldr	x9, [x8, #712]
  4266ec:	ldr	w10, [x9, #8]
  4266f0:	str	w10, [sp, #4420]
  4266f4:	b	426700 <parse_token+0x2450>
  4266f8:	mov	w8, wzr
  4266fc:	str	w8, [sp, #4420]
  426700:	ldr	w8, [sp, #4420]
  426704:	ldr	x9, [sp, #5512]
  426708:	ldr	x10, [x9, #1864]
  42670c:	ldr	w0, [sp, #4452]
  426710:	ldr	w1, [sp, #4448]
  426714:	ldr	x2, [sp, #5488]
  426718:	mov	w3, #0x260                 	// #608
  42671c:	ldr	x4, [sp, #5480]
  426720:	ldr	x5, [sp, #4440]
  426724:	ldr	x6, [sp, #4432]
  426728:	mov	x11, xzr
  42672c:	mov	x7, x11
  426730:	mov	x12, sp
  426734:	str	x11, [x12]
  426738:	mov	x11, sp
  42673c:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  426740:	add	x12, x12, #0xa1e
  426744:	str	x12, [x11, #8]
  426748:	mov	x11, sp
  42674c:	ldr	x12, [sp, #4424]
  426750:	str	x12, [x11, #16]
  426754:	mov	x11, sp
  426758:	str	w8, [x11, #24]
  42675c:	mov	x11, sp
  426760:	str	x10, [x11, #32]
  426764:	bl	40a870 <log_object_internal@plt>
  426768:	str	w0, [sp, #10588]
  42676c:	ldr	w8, [sp, #10588]
  426770:	str	w8, [sp, #10620]
  426774:	mov	w8, #0x4                   	// #4
  426778:	stur	w8, [x29, #-36]
  42677c:	ldr	x8, [sp, #5512]
  426780:	ldrb	w9, [x8, #1839]
  426784:	tbnz	w9, #0, 4269f0 <parse_token+0x2740>
  426788:	add	x8, sp, #0x2, lsl #12
  42678c:	add	x8, x8, #0x8f0
  426790:	mov	x0, x8
  426794:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  426798:	add	x1, x1, #0x90
  42679c:	mov	x2, #0x68                  	// #104
  4267a0:	str	x8, [sp, #4408]
  4267a4:	bl	40a600 <memcpy@plt>
  4267a8:	ldr	x8, [sp, #5512]
  4267ac:	ldr	x1, [x8, #1856]
  4267b0:	ldr	x0, [sp, #4408]
  4267b4:	bl	40b2e0 <strv_find@plt>
  4267b8:	cbz	x0, 4269b0 <parse_token+0x2700>
  4267bc:	ldr	x8, [sp, #5512]
  4267c0:	ldr	x9, [x8, #1872]
  4267c4:	str	x9, [x8, #552]
  4267c8:	ldr	x9, [x8, #552]
  4267cc:	cbz	x9, 4267e4 <parse_token+0x2534>
  4267d0:	ldr	x8, [sp, #5512]
  4267d4:	ldr	x9, [x8, #552]
  4267d8:	ldr	x9, [x9, #32]
  4267dc:	str	x9, [sp, #4400]
  4267e0:	b	4267ec <parse_token+0x253c>
  4267e4:	mov	x8, xzr
  4267e8:	str	x8, [sp, #4400]
  4267ec:	ldr	x8, [sp, #4400]
  4267f0:	ldr	x9, [sp, #5512]
  4267f4:	str	x8, [x9, #544]
  4267f8:	ldr	x8, [x9, #544]
  4267fc:	cbz	x8, 426814 <parse_token+0x2564>
  426800:	ldr	x8, [sp, #5512]
  426804:	ldr	x9, [x8, #544]
  426808:	ldr	x9, [x9, #8]
  42680c:	str	x9, [sp, #4392]
  426810:	b	42681c <parse_token+0x256c>
  426814:	mov	x8, xzr
  426818:	str	x8, [sp, #4392]
  42681c:	ldr	x8, [sp, #4392]
  426820:	ldr	x9, [sp, #5512]
  426824:	str	x8, [x9, #536]
  426828:	ldr	x8, [x9, #544]
  42682c:	cbz	x8, 426844 <parse_token+0x2594>
  426830:	ldr	x8, [sp, #5512]
  426834:	ldr	x9, [x8, #544]
  426838:	ldr	x9, [x9]
  42683c:	str	x9, [sp, #4384]
  426840:	b	42684c <parse_token+0x259c>
  426844:	mov	x8, xzr
  426848:	str	x8, [sp, #4384]
  42684c:	ldr	x8, [sp, #4384]
  426850:	ldr	x9, [sp, #5512]
  426854:	str	x8, [x9, #528]
  426858:	mov	x8, xzr
  42685c:	str	x8, [x9, #512]
  426860:	str	x8, [x9, #504]
  426864:	mov	w10, #0x3                   	// #3
  426868:	str	w10, [sp, #10420]
  42686c:	mov	w10, #0x16                  	// #22
  426870:	movk	w10, #0x4000, lsl #16
  426874:	str	w10, [sp, #10416]
  426878:	ldr	x8, [x9, #504]
  42687c:	cbz	x8, 4268c4 <parse_token+0x2614>
  426880:	mov	w0, #0x1                   	// #1
  426884:	bl	40a3f0 <log_get_max_level_realm@plt>
  426888:	ldr	w8, [sp, #10420]
  42688c:	cmp	w0, w8
  426890:	cset	w8, ge  // ge = tcont
  426894:	mov	w9, #0x1                   	// #1
  426898:	eor	w8, w8, #0x1
  42689c:	eor	w8, w8, w9
  4268a0:	and	w8, w8, #0x1
  4268a4:	mov	w1, w8
  4268a8:	sxtw	x10, w1
  4268ac:	cbz	x10, 4268c4 <parse_token+0x2614>
  4268b0:	ldr	x8, [sp, #5512]
  4268b4:	ldr	x0, [x8, #504]
  4268b8:	add	x1, sp, #0x2, lsl #12
  4268bc:	add	x1, x1, #0x8c0
  4268c0:	bl	40a860 <sd_device_get_sysname@plt>
  4268c4:	ldr	w0, [sp, #10420]
  4268c8:	ldr	w1, [sp, #10416]
  4268cc:	ldr	x8, [sp, #5512]
  4268d0:	ldr	x9, [x8, #512]
  4268d4:	mov	x10, xzr
  4268d8:	cmp	x9, #0x0
  4268dc:	ldr	x9, [sp, #5496]
  4268e0:	csel	x5, x9, x10, ne  // ne = any
  4268e4:	ldr	x6, [x8, #512]
  4268e8:	ldr	x10, [x8, #528]
  4268ec:	str	w0, [sp, #4380]
  4268f0:	mov	x0, x10
  4268f4:	str	w1, [sp, #4376]
  4268f8:	str	x5, [sp, #4368]
  4268fc:	str	x6, [sp, #4360]
  426900:	bl	424274 <strna>
  426904:	ldr	x8, [sp, #5512]
  426908:	ldr	x9, [x8, #536]
  42690c:	str	x0, [sp, #4352]
  426910:	cbz	x9, 426928 <parse_token+0x2678>
  426914:	ldr	x8, [sp, #5512]
  426918:	ldr	x9, [x8, #536]
  42691c:	ldr	w10, [x9, #8]
  426920:	str	w10, [sp, #4348]
  426924:	b	426930 <parse_token+0x2680>
  426928:	mov	w8, wzr
  42692c:	str	w8, [sp, #4348]
  426930:	ldr	w8, [sp, #4348]
  426934:	ldr	x9, [sp, #5512]
  426938:	ldr	x10, [x9, #1856]
  42693c:	ldr	w0, [sp, #4380]
  426940:	ldr	w1, [sp, #4376]
  426944:	ldr	x2, [sp, #5488]
  426948:	mov	w3, #0x269                 	// #617
  42694c:	ldr	x4, [sp, #5480]
  426950:	ldr	x5, [sp, #4368]
  426954:	ldr	x6, [sp, #4360]
  426958:	mov	x11, xzr
  42695c:	mov	x7, x11
  426960:	mov	x12, sp
  426964:	str	x11, [x12]
  426968:	mov	x11, sp
  42696c:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  426970:	add	x12, x12, #0xabf
  426974:	str	x12, [x11, #8]
  426978:	mov	x11, sp
  42697c:	ldr	x12, [sp, #4352]
  426980:	str	x12, [x11, #16]
  426984:	mov	x11, sp
  426988:	str	w8, [x11, #24]
  42698c:	mov	x11, sp
  426990:	str	x10, [x11, #32]
  426994:	bl	40a870 <log_object_internal@plt>
  426998:	str	w0, [sp, #10412]
  42699c:	ldr	w8, [sp, #10412]
  4269a0:	str	w8, [sp, #10444]
  4269a4:	ldr	w8, [sp, #10444]
  4269a8:	stur	w8, [x29, #-4]
  4269ac:	b	4300f8 <parse_token+0xbe48>
  4269b0:	ldr	x8, [sp, #5512]
  4269b4:	ldr	x0, [x8, #1872]
  4269b8:	ldr	x1, [x8, #1864]
  4269bc:	ldr	x2, [x8, #1840]
  4269c0:	mov	w9, wzr
  4269c4:	and	w3, w9, #0x1
  4269c8:	bl	430d00 <check_value_format_and_warn>
  4269cc:	ldr	x8, [sp, #5512]
  4269d0:	ldr	x0, [x8, #1824]
  4269d4:	ldur	w2, [x29, #-36]
  4269d8:	ldr	x3, [x8, #1840]
  4269dc:	ldr	x4, [x8, #1856]
  4269e0:	mov	w1, #0x28                  	// #40
  4269e4:	bl	430504 <rule_line_add_token>
  4269e8:	stur	w0, [x29, #-68]
  4269ec:	b	426a10 <parse_token+0x2760>
  4269f0:	ldr	x8, [sp, #5512]
  4269f4:	ldr	x0, [x8, #1824]
  4269f8:	ldur	w2, [x29, #-36]
  4269fc:	ldr	x3, [x8, #1840]
  426a00:	ldr	x4, [x8, #1856]
  426a04:	mov	w1, #0x5                   	// #5
  426a08:	bl	430504 <rule_line_add_token>
  426a0c:	stur	w0, [x29, #-68]
  426a10:	b	4300c4 <parse_token+0xbe14>
  426a14:	ldr	x8, [sp, #5512]
  426a18:	ldr	x0, [x8, #1864]
  426a1c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  426a20:	add	x1, x1, #0xaf0
  426a24:	bl	40aa20 <strcmp@plt>
  426a28:	cbnz	w0, 426e94 <parse_token+0x2be4>
  426a2c:	ldr	x8, [sp, #5512]
  426a30:	ldr	x0, [x8, #1856]
  426a34:	bl	423ddc <isempty>
  426a38:	tbnz	w0, #0, 426a6c <parse_token+0x27bc>
  426a3c:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  426a40:	add	x8, x8, #0xf8
  426a44:	ldr	q0, [x8]
  426a48:	add	x0, sp, #0x2, lsl #12
  426a4c:	add	x0, x0, #0x890
  426a50:	ldr	x9, [sp, #5512]
  426a54:	str	q0, [x9, #464]
  426a58:	ldr	x8, [x8, #16]
  426a5c:	str	x8, [x9, #480]
  426a60:	ldr	x1, [x9, #1856]
  426a64:	bl	40b2e0 <strv_find@plt>
  426a68:	cbnz	x0, 426c68 <parse_token+0x29b8>
  426a6c:	ldr	x8, [sp, #5512]
  426a70:	ldr	x9, [x8, #1872]
  426a74:	str	x9, [x8, #456]
  426a78:	ldr	x9, [x8, #456]
  426a7c:	cbz	x9, 426a94 <parse_token+0x27e4>
  426a80:	ldr	x8, [sp, #5512]
  426a84:	ldr	x9, [x8, #456]
  426a88:	ldr	x9, [x9, #32]
  426a8c:	str	x9, [sp, #4336]
  426a90:	b	426a9c <parse_token+0x27ec>
  426a94:	mov	x8, xzr
  426a98:	str	x8, [sp, #4336]
  426a9c:	ldr	x8, [sp, #4336]
  426aa0:	ldr	x9, [sp, #5512]
  426aa4:	str	x8, [x9, #448]
  426aa8:	ldr	x8, [x9, #448]
  426aac:	cbz	x8, 426ac4 <parse_token+0x2814>
  426ab0:	ldr	x8, [sp, #5512]
  426ab4:	ldr	x9, [x8, #448]
  426ab8:	ldr	x9, [x9, #8]
  426abc:	str	x9, [sp, #4328]
  426ac0:	b	426acc <parse_token+0x281c>
  426ac4:	mov	x8, xzr
  426ac8:	str	x8, [sp, #4328]
  426acc:	ldr	x8, [sp, #4328]
  426ad0:	ldr	x9, [sp, #5512]
  426ad4:	str	x8, [x9, #440]
  426ad8:	ldr	x8, [x9, #448]
  426adc:	cbz	x8, 426af4 <parse_token+0x2844>
  426ae0:	ldr	x8, [sp, #5512]
  426ae4:	ldr	x9, [x8, #448]
  426ae8:	ldr	x9, [x9]
  426aec:	str	x9, [sp, #4320]
  426af0:	b	426afc <parse_token+0x284c>
  426af4:	mov	x8, xzr
  426af8:	str	x8, [sp, #4320]
  426afc:	ldr	x8, [sp, #4320]
  426b00:	ldr	x9, [sp, #5512]
  426b04:	str	x8, [x9, #432]
  426b08:	mov	x8, xzr
  426b0c:	str	x8, [x9, #416]
  426b10:	str	x8, [x9, #408]
  426b14:	mov	w10, #0x3                   	// #3
  426b18:	str	w10, [sp, #10324]
  426b1c:	mov	w10, #0x16                  	// #22
  426b20:	movk	w10, #0x4000, lsl #16
  426b24:	str	w10, [sp, #10320]
  426b28:	ldr	x8, [x9, #408]
  426b2c:	cbz	x8, 426b74 <parse_token+0x28c4>
  426b30:	mov	w0, #0x1                   	// #1
  426b34:	bl	40a3f0 <log_get_max_level_realm@plt>
  426b38:	ldr	w8, [sp, #10324]
  426b3c:	cmp	w0, w8
  426b40:	cset	w8, ge  // ge = tcont
  426b44:	mov	w9, #0x1                   	// #1
  426b48:	eor	w8, w8, #0x1
  426b4c:	eor	w8, w8, w9
  426b50:	and	w8, w8, #0x1
  426b54:	mov	w1, w8
  426b58:	sxtw	x10, w1
  426b5c:	cbz	x10, 426b74 <parse_token+0x28c4>
  426b60:	ldr	x8, [sp, #5512]
  426b64:	ldr	x0, [x8, #408]
  426b68:	add	x1, sp, #0x2, lsl #12
  426b6c:	add	x1, x1, #0x860
  426b70:	bl	40a860 <sd_device_get_sysname@plt>
  426b74:	ldr	w0, [sp, #10324]
  426b78:	ldr	w1, [sp, #10320]
  426b7c:	ldr	x8, [sp, #5512]
  426b80:	ldr	x9, [x8, #416]
  426b84:	mov	x10, xzr
  426b88:	cmp	x9, #0x0
  426b8c:	ldr	x9, [sp, #5496]
  426b90:	csel	x5, x9, x10, ne  // ne = any
  426b94:	ldr	x6, [x8, #416]
  426b98:	ldr	x10, [x8, #432]
  426b9c:	str	w0, [sp, #4316]
  426ba0:	mov	x0, x10
  426ba4:	str	w1, [sp, #4312]
  426ba8:	str	x5, [sp, #4304]
  426bac:	str	x6, [sp, #4296]
  426bb0:	bl	424274 <strna>
  426bb4:	ldr	x8, [sp, #5512]
  426bb8:	ldr	x9, [x8, #440]
  426bbc:	str	x0, [sp, #4288]
  426bc0:	cbz	x9, 426bd8 <parse_token+0x2928>
  426bc4:	ldr	x8, [sp, #5512]
  426bc8:	ldr	x9, [x8, #440]
  426bcc:	ldr	w10, [x9, #8]
  426bd0:	str	w10, [sp, #4284]
  426bd4:	b	426be0 <parse_token+0x2930>
  426bd8:	mov	w8, wzr
  426bdc:	str	w8, [sp, #4284]
  426be0:	ldr	w8, [sp, #4284]
  426be4:	ldr	x9, [sp, #5512]
  426be8:	ldr	x10, [x9, #1864]
  426bec:	ldr	w0, [sp, #4316]
  426bf0:	ldr	w1, [sp, #4312]
  426bf4:	ldr	x2, [sp, #5488]
  426bf8:	mov	w3, #0x272                 	// #626
  426bfc:	ldr	x4, [sp, #5480]
  426c00:	ldr	x5, [sp, #4304]
  426c04:	ldr	x6, [sp, #4296]
  426c08:	mov	x11, xzr
  426c0c:	mov	x7, x11
  426c10:	mov	x12, sp
  426c14:	str	x11, [x12]
  426c18:	mov	x11, sp
  426c1c:	ldr	x12, [sp, #5472]
  426c20:	str	x12, [x11, #8]
  426c24:	mov	x11, sp
  426c28:	ldr	x13, [sp, #4288]
  426c2c:	str	x13, [x11, #16]
  426c30:	mov	x11, sp
  426c34:	str	w8, [x11, #24]
  426c38:	mov	x11, sp
  426c3c:	ldr	x14, [sp, #5456]
  426c40:	str	x14, [x11, #32]
  426c44:	mov	x11, sp
  426c48:	str	x10, [x11, #40]
  426c4c:	bl	40a870 <log_object_internal@plt>
  426c50:	str	w0, [sp, #10316]
  426c54:	ldr	w8, [sp, #10316]
  426c58:	str	w8, [sp, #10348]
  426c5c:	ldr	w8, [sp, #10348]
  426c60:	stur	w8, [x29, #-4]
  426c64:	b	4300f8 <parse_token+0xbe48>
  426c68:	ldr	x8, [sp, #5512]
  426c6c:	ldrb	w9, [x8, #1839]
  426c70:	tbnz	w9, #0, 426e70 <parse_token+0x2bc0>
  426c74:	ldr	x8, [sp, #5512]
  426c78:	ldr	x9, [x8, #1872]
  426c7c:	str	x9, [x8, #384]
  426c80:	ldr	x9, [x8, #384]
  426c84:	cbz	x9, 426c9c <parse_token+0x29ec>
  426c88:	ldr	x8, [sp, #5512]
  426c8c:	ldr	x9, [x8, #384]
  426c90:	ldr	x9, [x9, #32]
  426c94:	str	x9, [sp, #4272]
  426c98:	b	426ca4 <parse_token+0x29f4>
  426c9c:	mov	x8, xzr
  426ca0:	str	x8, [sp, #4272]
  426ca4:	ldr	x8, [sp, #4272]
  426ca8:	ldr	x9, [sp, #5512]
  426cac:	str	x8, [x9, #376]
  426cb0:	ldr	x8, [x9, #376]
  426cb4:	cbz	x8, 426ccc <parse_token+0x2a1c>
  426cb8:	ldr	x8, [sp, #5512]
  426cbc:	ldr	x9, [x8, #376]
  426cc0:	ldr	x9, [x9, #8]
  426cc4:	str	x9, [sp, #4264]
  426cc8:	b	426cd4 <parse_token+0x2a24>
  426ccc:	mov	x8, xzr
  426cd0:	str	x8, [sp, #4264]
  426cd4:	ldr	x8, [sp, #4264]
  426cd8:	ldr	x9, [sp, #5512]
  426cdc:	str	x8, [x9, #368]
  426ce0:	ldr	x8, [x9, #376]
  426ce4:	cbz	x8, 426cfc <parse_token+0x2a4c>
  426ce8:	ldr	x8, [sp, #5512]
  426cec:	ldr	x9, [x8, #376]
  426cf0:	ldr	x9, [x9]
  426cf4:	str	x9, [sp, #4256]
  426cf8:	b	426d04 <parse_token+0x2a54>
  426cfc:	mov	x8, xzr
  426d00:	str	x8, [sp, #4256]
  426d04:	ldr	x8, [sp, #4256]
  426d08:	ldr	x9, [sp, #5512]
  426d0c:	str	x8, [x9, #360]
  426d10:	mov	x8, xzr
  426d14:	str	x8, [x9, #344]
  426d18:	str	x8, [x9, #336]
  426d1c:	mov	w10, #0x3                   	// #3
  426d20:	str	w10, [sp, #10252]
  426d24:	mov	w10, #0x16                  	// #22
  426d28:	movk	w10, #0x4000, lsl #16
  426d2c:	str	w10, [sp, #10248]
  426d30:	ldr	x8, [x9, #336]
  426d34:	cbz	x8, 426d7c <parse_token+0x2acc>
  426d38:	mov	w0, #0x1                   	// #1
  426d3c:	bl	40a3f0 <log_get_max_level_realm@plt>
  426d40:	ldr	w8, [sp, #10252]
  426d44:	cmp	w0, w8
  426d48:	cset	w8, ge  // ge = tcont
  426d4c:	mov	w9, #0x1                   	// #1
  426d50:	eor	w8, w8, #0x1
  426d54:	eor	w8, w8, w9
  426d58:	and	w8, w8, #0x1
  426d5c:	mov	w1, w8
  426d60:	sxtw	x10, w1
  426d64:	cbz	x10, 426d7c <parse_token+0x2acc>
  426d68:	ldr	x8, [sp, #5512]
  426d6c:	ldr	x0, [x8, #336]
  426d70:	add	x1, sp, #0x2, lsl #12
  426d74:	add	x1, x1, #0x818
  426d78:	bl	40a860 <sd_device_get_sysname@plt>
  426d7c:	ldr	w0, [sp, #10252]
  426d80:	ldr	w1, [sp, #10248]
  426d84:	ldr	x8, [sp, #5512]
  426d88:	ldr	x9, [x8, #344]
  426d8c:	mov	x10, xzr
  426d90:	cmp	x9, #0x0
  426d94:	ldr	x9, [sp, #5496]
  426d98:	csel	x5, x9, x10, ne  // ne = any
  426d9c:	ldr	x6, [x8, #344]
  426da0:	ldr	x10, [x8, #360]
  426da4:	str	w0, [sp, #4252]
  426da8:	mov	x0, x10
  426dac:	str	w1, [sp, #4248]
  426db0:	str	x5, [sp, #4240]
  426db4:	str	x6, [sp, #4232]
  426db8:	bl	424274 <strna>
  426dbc:	ldr	x8, [sp, #5512]
  426dc0:	ldr	x9, [x8, #368]
  426dc4:	str	x0, [sp, #4224]
  426dc8:	cbz	x9, 426de0 <parse_token+0x2b30>
  426dcc:	ldr	x8, [sp, #5512]
  426dd0:	ldr	x9, [x8, #368]
  426dd4:	ldr	w10, [x9, #8]
  426dd8:	str	w10, [sp, #4220]
  426ddc:	b	426de8 <parse_token+0x2b38>
  426de0:	mov	w8, wzr
  426de4:	str	w8, [sp, #4220]
  426de8:	ldr	w8, [sp, #4220]
  426dec:	ldr	x9, [sp, #5512]
  426df0:	ldr	x10, [x9, #1864]
  426df4:	ldr	w0, [sp, #4252]
  426df8:	ldr	w1, [sp, #4248]
  426dfc:	ldr	x2, [sp, #5488]
  426e00:	mov	w3, #0x274                 	// #628
  426e04:	ldr	x4, [sp, #5480]
  426e08:	ldr	x5, [sp, #4240]
  426e0c:	ldr	x6, [sp, #4232]
  426e10:	mov	x11, xzr
  426e14:	mov	x7, x11
  426e18:	mov	x12, sp
  426e1c:	str	x11, [x12]
  426e20:	mov	x11, sp
  426e24:	ldr	x12, [sp, #5472]
  426e28:	str	x12, [x11, #8]
  426e2c:	mov	x11, sp
  426e30:	ldr	x13, [sp, #4224]
  426e34:	str	x13, [x11, #16]
  426e38:	mov	x11, sp
  426e3c:	str	w8, [x11, #24]
  426e40:	mov	x11, sp
  426e44:	ldr	x14, [sp, #5464]
  426e48:	str	x14, [x11, #32]
  426e4c:	mov	x11, sp
  426e50:	str	x10, [x11, #40]
  426e54:	bl	40a870 <log_object_internal@plt>
  426e58:	str	w0, [sp, #10244]
  426e5c:	ldr	w8, [sp, #10244]
  426e60:	str	w8, [sp, #10276]
  426e64:	ldr	w8, [sp, #10276]
  426e68:	stur	w8, [x29, #-4]
  426e6c:	b	4300f8 <parse_token+0xbe48>
  426e70:	ldr	x8, [sp, #5512]
  426e74:	ldr	x0, [x8, #1824]
  426e78:	ldur	w2, [x29, #-36]
  426e7c:	ldr	x3, [x8, #1840]
  426e80:	ldr	x4, [x8, #1856]
  426e84:	mov	w1, #0x6                   	// #6
  426e88:	bl	430504 <rule_line_add_token>
  426e8c:	stur	w0, [x29, #-68]
  426e90:	b	4300c4 <parse_token+0xbe14>
  426e94:	ldr	x8, [sp, #5512]
  426e98:	ldr	x0, [x8, #1864]
  426e9c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  426ea0:	add	x1, x1, #0xb00
  426ea4:	bl	40aa20 <strcmp@plt>
  426ea8:	cbnz	w0, 427320 <parse_token+0x3070>
  426eac:	ldr	x8, [sp, #5512]
  426eb0:	ldr	x9, [x8, #1856]
  426eb4:	cbz	x9, 4270b4 <parse_token+0x2e04>
  426eb8:	ldr	x8, [sp, #5512]
  426ebc:	ldr	x9, [x8, #1872]
  426ec0:	str	x9, [x8, #312]
  426ec4:	ldr	x9, [x8, #312]
  426ec8:	cbz	x9, 426ee0 <parse_token+0x2c30>
  426ecc:	ldr	x8, [sp, #5512]
  426ed0:	ldr	x9, [x8, #312]
  426ed4:	ldr	x9, [x9, #32]
  426ed8:	str	x9, [sp, #4208]
  426edc:	b	426ee8 <parse_token+0x2c38>
  426ee0:	mov	x8, xzr
  426ee4:	str	x8, [sp, #4208]
  426ee8:	ldr	x8, [sp, #4208]
  426eec:	ldr	x9, [sp, #5512]
  426ef0:	str	x8, [x9, #304]
  426ef4:	ldr	x8, [x9, #304]
  426ef8:	cbz	x8, 426f10 <parse_token+0x2c60>
  426efc:	ldr	x8, [sp, #5512]
  426f00:	ldr	x9, [x8, #304]
  426f04:	ldr	x9, [x9, #8]
  426f08:	str	x9, [sp, #4200]
  426f0c:	b	426f18 <parse_token+0x2c68>
  426f10:	mov	x8, xzr
  426f14:	str	x8, [sp, #4200]
  426f18:	ldr	x8, [sp, #4200]
  426f1c:	ldr	x9, [sp, #5512]
  426f20:	str	x8, [x9, #296]
  426f24:	ldr	x8, [x9, #304]
  426f28:	cbz	x8, 426f40 <parse_token+0x2c90>
  426f2c:	ldr	x8, [sp, #5512]
  426f30:	ldr	x9, [x8, #304]
  426f34:	ldr	x9, [x9]
  426f38:	str	x9, [sp, #4192]
  426f3c:	b	426f48 <parse_token+0x2c98>
  426f40:	mov	x8, xzr
  426f44:	str	x8, [sp, #4192]
  426f48:	ldr	x8, [sp, #4192]
  426f4c:	ldr	x9, [sp, #5512]
  426f50:	str	x8, [x9, #288]
  426f54:	mov	x8, xzr
  426f58:	str	x8, [x9, #272]
  426f5c:	str	x8, [x9, #264]
  426f60:	mov	w10, #0x3                   	// #3
  426f64:	str	w10, [sp, #10180]
  426f68:	mov	w10, #0x16                  	// #22
  426f6c:	movk	w10, #0x4000, lsl #16
  426f70:	str	w10, [sp, #10176]
  426f74:	ldr	x8, [x9, #264]
  426f78:	cbz	x8, 426fc0 <parse_token+0x2d10>
  426f7c:	mov	w0, #0x1                   	// #1
  426f80:	bl	40a3f0 <log_get_max_level_realm@plt>
  426f84:	ldr	w8, [sp, #10180]
  426f88:	cmp	w0, w8
  426f8c:	cset	w8, ge  // ge = tcont
  426f90:	mov	w9, #0x1                   	// #1
  426f94:	eor	w8, w8, #0x1
  426f98:	eor	w8, w8, w9
  426f9c:	and	w8, w8, #0x1
  426fa0:	mov	w1, w8
  426fa4:	sxtw	x10, w1
  426fa8:	cbz	x10, 426fc0 <parse_token+0x2d10>
  426fac:	ldr	x8, [sp, #5512]
  426fb0:	ldr	x0, [x8, #264]
  426fb4:	add	x1, sp, #0x2, lsl #12
  426fb8:	add	x1, x1, #0x7d0
  426fbc:	bl	40a860 <sd_device_get_sysname@plt>
  426fc0:	ldr	w0, [sp, #10180]
  426fc4:	ldr	w1, [sp, #10176]
  426fc8:	ldr	x8, [sp, #5512]
  426fcc:	ldr	x9, [x8, #272]
  426fd0:	mov	x10, xzr
  426fd4:	cmp	x9, #0x0
  426fd8:	ldr	x9, [sp, #5496]
  426fdc:	csel	x5, x9, x10, ne  // ne = any
  426fe0:	ldr	x6, [x8, #272]
  426fe4:	ldr	x10, [x8, #288]
  426fe8:	str	w0, [sp, #4188]
  426fec:	mov	x0, x10
  426ff0:	str	w1, [sp, #4184]
  426ff4:	str	x5, [sp, #4176]
  426ff8:	str	x6, [sp, #4168]
  426ffc:	bl	424274 <strna>
  427000:	ldr	x8, [sp, #5512]
  427004:	ldr	x9, [x8, #296]
  427008:	str	x0, [sp, #4160]
  42700c:	cbz	x9, 427024 <parse_token+0x2d74>
  427010:	ldr	x8, [sp, #5512]
  427014:	ldr	x9, [x8, #296]
  427018:	ldr	w10, [x9, #8]
  42701c:	str	w10, [sp, #4156]
  427020:	b	42702c <parse_token+0x2d7c>
  427024:	mov	w8, wzr
  427028:	str	w8, [sp, #4156]
  42702c:	ldr	w8, [sp, #4156]
  427030:	ldr	x9, [sp, #5512]
  427034:	ldr	x10, [x9, #1864]
  427038:	ldr	w0, [sp, #4188]
  42703c:	ldr	w1, [sp, #4184]
  427040:	ldr	x2, [sp, #5488]
  427044:	mov	w3, #0x278                 	// #632
  427048:	ldr	x4, [sp, #5480]
  42704c:	ldr	x5, [sp, #4176]
  427050:	ldr	x6, [sp, #4168]
  427054:	mov	x11, xzr
  427058:	mov	x7, x11
  42705c:	mov	x12, sp
  427060:	str	x11, [x12]
  427064:	mov	x11, sp
  427068:	ldr	x12, [sp, #5472]
  42706c:	str	x12, [x11, #8]
  427070:	mov	x11, sp
  427074:	ldr	x13, [sp, #4160]
  427078:	str	x13, [x11, #16]
  42707c:	mov	x11, sp
  427080:	str	w8, [x11, #24]
  427084:	mov	x11, sp
  427088:	ldr	x14, [sp, #5456]
  42708c:	str	x14, [x11, #32]
  427090:	mov	x11, sp
  427094:	str	x10, [x11, #40]
  427098:	bl	40a870 <log_object_internal@plt>
  42709c:	str	w0, [sp, #10172]
  4270a0:	ldr	w8, [sp, #10172]
  4270a4:	str	w8, [sp, #10204]
  4270a8:	ldr	w8, [sp, #10204]
  4270ac:	stur	w8, [x29, #-4]
  4270b0:	b	4300f8 <parse_token+0xbe48>
  4270b4:	ldur	w8, [x29, #-36]
  4270b8:	cmp	w8, #0x5
  4270bc:	b.ne	4272a8 <parse_token+0x2ff8>  // b.any
  4270c0:	ldr	x8, [sp, #5512]
  4270c4:	ldr	x9, [x8, #1872]
  4270c8:	str	x9, [x8, #240]
  4270cc:	ldr	x9, [x8, #240]
  4270d0:	cbz	x9, 4270e8 <parse_token+0x2e38>
  4270d4:	ldr	x8, [sp, #5512]
  4270d8:	ldr	x9, [x8, #240]
  4270dc:	ldr	x9, [x9, #32]
  4270e0:	str	x9, [sp, #4144]
  4270e4:	b	4270f0 <parse_token+0x2e40>
  4270e8:	mov	x8, xzr
  4270ec:	str	x8, [sp, #4144]
  4270f0:	ldr	x8, [sp, #4144]
  4270f4:	ldr	x9, [sp, #5512]
  4270f8:	str	x8, [x9, #232]
  4270fc:	ldr	x8, [x9, #232]
  427100:	cbz	x8, 427118 <parse_token+0x2e68>
  427104:	ldr	x8, [sp, #5512]
  427108:	ldr	x9, [x8, #232]
  42710c:	ldr	x9, [x9, #8]
  427110:	str	x9, [sp, #4136]
  427114:	b	427120 <parse_token+0x2e70>
  427118:	mov	x8, xzr
  42711c:	str	x8, [sp, #4136]
  427120:	ldr	x8, [sp, #4136]
  427124:	ldr	x9, [sp, #5512]
  427128:	str	x8, [x9, #224]
  42712c:	ldr	x8, [x9, #232]
  427130:	cbz	x8, 427148 <parse_token+0x2e98>
  427134:	ldr	x8, [sp, #5512]
  427138:	ldr	x9, [x8, #232]
  42713c:	ldr	x9, [x9]
  427140:	str	x9, [sp, #4128]
  427144:	b	427150 <parse_token+0x2ea0>
  427148:	mov	x8, xzr
  42714c:	str	x8, [sp, #4128]
  427150:	ldr	x8, [sp, #4128]
  427154:	ldr	x9, [sp, #5512]
  427158:	str	x8, [x9, #216]
  42715c:	mov	x8, xzr
  427160:	str	x8, [x9, #200]
  427164:	str	x8, [x9, #192]
  427168:	mov	w10, #0x4                   	// #4
  42716c:	str	w10, [sp, #10108]
  427170:	str	wzr, [sp, #10104]
  427174:	ldr	x8, [x9, #192]
  427178:	cbz	x8, 4271c0 <parse_token+0x2f10>
  42717c:	mov	w0, #0x1                   	// #1
  427180:	bl	40a3f0 <log_get_max_level_realm@plt>
  427184:	ldr	w8, [sp, #10108]
  427188:	cmp	w0, w8
  42718c:	cset	w8, ge  // ge = tcont
  427190:	mov	w9, #0x1                   	// #1
  427194:	eor	w8, w8, #0x1
  427198:	eor	w8, w8, w9
  42719c:	and	w8, w8, #0x1
  4271a0:	mov	w1, w8
  4271a4:	sxtw	x10, w1
  4271a8:	cbz	x10, 4271c0 <parse_token+0x2f10>
  4271ac:	ldr	x8, [sp, #5512]
  4271b0:	ldr	x0, [x8, #192]
  4271b4:	add	x1, sp, #0x2, lsl #12
  4271b8:	add	x1, x1, #0x788
  4271bc:	bl	40a860 <sd_device_get_sysname@plt>
  4271c0:	ldr	w0, [sp, #10108]
  4271c4:	ldr	w1, [sp, #10104]
  4271c8:	ldr	x8, [sp, #5512]
  4271cc:	ldr	x9, [x8, #200]
  4271d0:	mov	x10, xzr
  4271d4:	cmp	x9, #0x0
  4271d8:	ldr	x9, [sp, #5496]
  4271dc:	csel	x5, x9, x10, ne  // ne = any
  4271e0:	ldr	x6, [x8, #200]
  4271e4:	ldr	x10, [x8, #216]
  4271e8:	str	w0, [sp, #4124]
  4271ec:	mov	x0, x10
  4271f0:	str	w1, [sp, #4120]
  4271f4:	str	x5, [sp, #4112]
  4271f8:	str	x6, [sp, #4104]
  4271fc:	bl	424274 <strna>
  427200:	ldr	x8, [sp, #5512]
  427204:	ldr	x9, [x8, #224]
  427208:	str	x0, [sp, #4096]
  42720c:	cbz	x9, 427224 <parse_token+0x2f74>
  427210:	ldr	x8, [sp, #5512]
  427214:	ldr	x9, [x8, #224]
  427218:	ldr	w10, [x9, #8]
  42721c:	str	w10, [sp, #4092]
  427220:	b	42722c <parse_token+0x2f7c>
  427224:	mov	w8, wzr
  427228:	str	w8, [sp, #4092]
  42722c:	ldr	w8, [sp, #4092]
  427230:	ldr	x9, [sp, #5512]
  427234:	ldr	x10, [x9, #1864]
  427238:	ldr	w0, [sp, #4124]
  42723c:	ldr	w1, [sp, #4120]
  427240:	ldr	x2, [sp, #5488]
  427244:	mov	w3, #0x27a                 	// #634
  427248:	ldr	x4, [sp, #5480]
  42724c:	ldr	x5, [sp, #4112]
  427250:	ldr	x6, [sp, #4104]
  427254:	mov	x11, xzr
  427258:	mov	x7, x11
  42725c:	mov	x12, sp
  427260:	str	x11, [x12]
  427264:	mov	x11, sp
  427268:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42726c:	add	x12, x12, #0xa1e
  427270:	str	x12, [x11, #8]
  427274:	mov	x11, sp
  427278:	ldr	x12, [sp, #4096]
  42727c:	str	x12, [x11, #16]
  427280:	mov	x11, sp
  427284:	str	w8, [x11, #24]
  427288:	mov	x11, sp
  42728c:	str	x10, [x11, #32]
  427290:	bl	40a870 <log_object_internal@plt>
  427294:	str	w0, [sp, #10100]
  427298:	ldr	w8, [sp, #10100]
  42729c:	str	w8, [sp, #10132]
  4272a0:	mov	w8, #0x4                   	// #4
  4272a4:	stur	w8, [x29, #-36]
  4272a8:	ldr	x8, [sp, #5512]
  4272ac:	ldrb	w9, [x8, #1839]
  4272b0:	tbnz	w9, #0, 4272f8 <parse_token+0x3048>
  4272b4:	ldr	x8, [sp, #5512]
  4272b8:	ldr	x0, [x8, #1872]
  4272bc:	ldr	x1, [x8, #1864]
  4272c0:	ldr	x2, [x8, #1840]
  4272c4:	mov	w9, #0x1                   	// #1
  4272c8:	and	w3, w9, #0x1
  4272cc:	bl	430d00 <check_value_format_and_warn>
  4272d0:	ldr	x8, [sp, #5512]
  4272d4:	ldr	x0, [x8, #1824]
  4272d8:	ldur	w2, [x29, #-36]
  4272dc:	ldr	x3, [x8, #1840]
  4272e0:	mov	w1, #0x25                  	// #37
  4272e4:	mov	x10, xzr
  4272e8:	mov	x4, x10
  4272ec:	bl	430504 <rule_line_add_token>
  4272f0:	stur	w0, [x29, #-68]
  4272f4:	b	42731c <parse_token+0x306c>
  4272f8:	ldr	x8, [sp, #5512]
  4272fc:	ldr	x0, [x8, #1824]
  427300:	ldur	w2, [x29, #-36]
  427304:	ldr	x3, [x8, #1840]
  427308:	mov	w1, #0x7                   	// #7
  42730c:	mov	x9, xzr
  427310:	mov	x4, x9
  427314:	bl	430504 <rule_line_add_token>
  427318:	stur	w0, [x29, #-68]
  42731c:	b	4300c4 <parse_token+0xbe14>
  427320:	ldr	x8, [sp, #5512]
  427324:	ldr	x0, [x8, #1864]
  427328:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42732c:	add	x1, x1, #0xab0
  427330:	bl	40aa20 <strcmp@plt>
  427334:	cbnz	w0, 427984 <parse_token+0x36d4>
  427338:	ldr	x8, [sp, #5512]
  42733c:	ldr	x9, [x8, #1856]
  427340:	cbz	x9, 427540 <parse_token+0x3290>
  427344:	ldr	x8, [sp, #5512]
  427348:	ldr	x9, [x8, #1872]
  42734c:	str	x9, [x8, #168]
  427350:	ldr	x9, [x8, #168]
  427354:	cbz	x9, 42736c <parse_token+0x30bc>
  427358:	ldr	x8, [sp, #5512]
  42735c:	ldr	x9, [x8, #168]
  427360:	ldr	x9, [x9, #32]
  427364:	str	x9, [sp, #4080]
  427368:	b	427374 <parse_token+0x30c4>
  42736c:	mov	x8, xzr
  427370:	str	x8, [sp, #4080]
  427374:	ldr	x8, [sp, #4080]
  427378:	ldr	x9, [sp, #5512]
  42737c:	str	x8, [x9, #160]
  427380:	ldr	x8, [x9, #160]
  427384:	cbz	x8, 42739c <parse_token+0x30ec>
  427388:	ldr	x8, [sp, #5512]
  42738c:	ldr	x9, [x8, #160]
  427390:	ldr	x9, [x9, #8]
  427394:	str	x9, [sp, #4072]
  427398:	b	4273a4 <parse_token+0x30f4>
  42739c:	mov	x8, xzr
  4273a0:	str	x8, [sp, #4072]
  4273a4:	ldr	x8, [sp, #4072]
  4273a8:	ldr	x9, [sp, #5512]
  4273ac:	str	x8, [x9, #152]
  4273b0:	ldr	x8, [x9, #160]
  4273b4:	cbz	x8, 4273cc <parse_token+0x311c>
  4273b8:	ldr	x8, [sp, #5512]
  4273bc:	ldr	x9, [x8, #160]
  4273c0:	ldr	x9, [x9]
  4273c4:	str	x9, [sp, #4064]
  4273c8:	b	4273d4 <parse_token+0x3124>
  4273cc:	mov	x8, xzr
  4273d0:	str	x8, [sp, #4064]
  4273d4:	ldr	x8, [sp, #4064]
  4273d8:	ldr	x9, [sp, #5512]
  4273dc:	str	x8, [x9, #144]
  4273e0:	mov	x8, xzr
  4273e4:	str	x8, [x9, #128]
  4273e8:	str	x8, [x9, #120]
  4273ec:	mov	w10, #0x3                   	// #3
  4273f0:	str	w10, [sp, #10036]
  4273f4:	mov	w10, #0x16                  	// #22
  4273f8:	movk	w10, #0x4000, lsl #16
  4273fc:	str	w10, [sp, #10032]
  427400:	ldr	x8, [x9, #120]
  427404:	cbz	x8, 42744c <parse_token+0x319c>
  427408:	mov	w0, #0x1                   	// #1
  42740c:	bl	40a3f0 <log_get_max_level_realm@plt>
  427410:	ldr	w8, [sp, #10036]
  427414:	cmp	w0, w8
  427418:	cset	w8, ge  // ge = tcont
  42741c:	mov	w9, #0x1                   	// #1
  427420:	eor	w8, w8, #0x1
  427424:	eor	w8, w8, w9
  427428:	and	w8, w8, #0x1
  42742c:	mov	w1, w8
  427430:	sxtw	x10, w1
  427434:	cbz	x10, 42744c <parse_token+0x319c>
  427438:	ldr	x8, [sp, #5512]
  42743c:	ldr	x0, [x8, #120]
  427440:	add	x1, sp, #0x2, lsl #12
  427444:	add	x1, x1, #0x740
  427448:	bl	40a860 <sd_device_get_sysname@plt>
  42744c:	ldr	w0, [sp, #10036]
  427450:	ldr	w1, [sp, #10032]
  427454:	ldr	x8, [sp, #5512]
  427458:	ldr	x9, [x8, #128]
  42745c:	mov	x10, xzr
  427460:	cmp	x9, #0x0
  427464:	ldr	x9, [sp, #5496]
  427468:	csel	x5, x9, x10, ne  // ne = any
  42746c:	ldr	x6, [x8, #128]
  427470:	ldr	x10, [x8, #144]
  427474:	str	w0, [sp, #4060]
  427478:	mov	x0, x10
  42747c:	str	w1, [sp, #4056]
  427480:	str	x5, [sp, #4048]
  427484:	str	x6, [sp, #4040]
  427488:	bl	424274 <strna>
  42748c:	ldr	x8, [sp, #5512]
  427490:	ldr	x9, [x8, #152]
  427494:	str	x0, [sp, #4032]
  427498:	cbz	x9, 4274b0 <parse_token+0x3200>
  42749c:	ldr	x8, [sp, #5512]
  4274a0:	ldr	x9, [x8, #152]
  4274a4:	ldr	w10, [x9, #8]
  4274a8:	str	w10, [sp, #4028]
  4274ac:	b	4274b8 <parse_token+0x3208>
  4274b0:	mov	w8, wzr
  4274b4:	str	w8, [sp, #4028]
  4274b8:	ldr	w8, [sp, #4028]
  4274bc:	ldr	x9, [sp, #5512]
  4274c0:	ldr	x10, [x9, #1864]
  4274c4:	ldr	w0, [sp, #4060]
  4274c8:	ldr	w1, [sp, #4056]
  4274cc:	ldr	x2, [sp, #5488]
  4274d0:	mov	w3, #0x286                 	// #646
  4274d4:	ldr	x4, [sp, #5480]
  4274d8:	ldr	x5, [sp, #4048]
  4274dc:	ldr	x6, [sp, #4040]
  4274e0:	mov	x11, xzr
  4274e4:	mov	x7, x11
  4274e8:	mov	x12, sp
  4274ec:	str	x11, [x12]
  4274f0:	mov	x11, sp
  4274f4:	ldr	x12, [sp, #5472]
  4274f8:	str	x12, [x11, #8]
  4274fc:	mov	x11, sp
  427500:	ldr	x13, [sp, #4032]
  427504:	str	x13, [x11, #16]
  427508:	mov	x11, sp
  42750c:	str	w8, [x11, #24]
  427510:	mov	x11, sp
  427514:	ldr	x14, [sp, #5456]
  427518:	str	x14, [x11, #32]
  42751c:	mov	x11, sp
  427520:	str	x10, [x11, #40]
  427524:	bl	40a870 <log_object_internal@plt>
  427528:	str	w0, [sp, #10028]
  42752c:	ldr	w8, [sp, #10028]
  427530:	str	w8, [sp, #10060]
  427534:	ldr	w8, [sp, #10060]
  427538:	stur	w8, [x29, #-4]
  42753c:	b	4300f8 <parse_token+0xbe48>
  427540:	ldr	x8, [sp, #5512]
  427544:	ldrb	w9, [x8, #1839]
  427548:	tbnz	w9, #0, 427748 <parse_token+0x3498>
  42754c:	ldr	x8, [sp, #5512]
  427550:	ldr	x9, [x8, #1872]
  427554:	str	x9, [x8, #96]
  427558:	ldr	x9, [x8, #96]
  42755c:	cbz	x9, 427574 <parse_token+0x32c4>
  427560:	ldr	x8, [sp, #5512]
  427564:	ldr	x9, [x8, #96]
  427568:	ldr	x9, [x9, #32]
  42756c:	str	x9, [sp, #4016]
  427570:	b	42757c <parse_token+0x32cc>
  427574:	mov	x8, xzr
  427578:	str	x8, [sp, #4016]
  42757c:	ldr	x8, [sp, #4016]
  427580:	ldr	x9, [sp, #5512]
  427584:	str	x8, [x9, #88]
  427588:	ldr	x8, [x9, #88]
  42758c:	cbz	x8, 4275a4 <parse_token+0x32f4>
  427590:	ldr	x8, [sp, #5512]
  427594:	ldr	x9, [x8, #88]
  427598:	ldr	x9, [x9, #8]
  42759c:	str	x9, [sp, #4008]
  4275a0:	b	4275ac <parse_token+0x32fc>
  4275a4:	mov	x8, xzr
  4275a8:	str	x8, [sp, #4008]
  4275ac:	ldr	x8, [sp, #4008]
  4275b0:	ldr	x9, [sp, #5512]
  4275b4:	str	x8, [x9, #80]
  4275b8:	ldr	x8, [x9, #88]
  4275bc:	cbz	x8, 4275d4 <parse_token+0x3324>
  4275c0:	ldr	x8, [sp, #5512]
  4275c4:	ldr	x9, [x8, #88]
  4275c8:	ldr	x9, [x9]
  4275cc:	str	x9, [sp, #4000]
  4275d0:	b	4275dc <parse_token+0x332c>
  4275d4:	mov	x8, xzr
  4275d8:	str	x8, [sp, #4000]
  4275dc:	ldr	x8, [sp, #4000]
  4275e0:	ldr	x9, [sp, #5512]
  4275e4:	str	x8, [x9, #72]
  4275e8:	mov	x8, xzr
  4275ec:	str	x8, [x9, #56]
  4275f0:	str	x8, [x9, #48]
  4275f4:	mov	w10, #0x3                   	// #3
  4275f8:	str	w10, [sp, #9964]
  4275fc:	mov	w10, #0x16                  	// #22
  427600:	movk	w10, #0x4000, lsl #16
  427604:	str	w10, [sp, #9960]
  427608:	ldr	x8, [x9, #48]
  42760c:	cbz	x8, 427654 <parse_token+0x33a4>
  427610:	mov	w0, #0x1                   	// #1
  427614:	bl	40a3f0 <log_get_max_level_realm@plt>
  427618:	ldr	w8, [sp, #9964]
  42761c:	cmp	w0, w8
  427620:	cset	w8, ge  // ge = tcont
  427624:	mov	w9, #0x1                   	// #1
  427628:	eor	w8, w8, #0x1
  42762c:	eor	w8, w8, w9
  427630:	and	w8, w8, #0x1
  427634:	mov	w1, w8
  427638:	sxtw	x10, w1
  42763c:	cbz	x10, 427654 <parse_token+0x33a4>
  427640:	ldr	x8, [sp, #5512]
  427644:	ldr	x0, [x8, #48]
  427648:	add	x1, sp, #0x2, lsl #12
  42764c:	add	x1, x1, #0x6f8
  427650:	bl	40a860 <sd_device_get_sysname@plt>
  427654:	ldr	w0, [sp, #9964]
  427658:	ldr	w1, [sp, #9960]
  42765c:	ldr	x8, [sp, #5512]
  427660:	ldr	x9, [x8, #56]
  427664:	mov	x10, xzr
  427668:	cmp	x9, #0x0
  42766c:	ldr	x9, [sp, #5496]
  427670:	csel	x5, x9, x10, ne  // ne = any
  427674:	ldr	x6, [x8, #56]
  427678:	ldr	x10, [x8, #72]
  42767c:	str	w0, [sp, #3996]
  427680:	mov	x0, x10
  427684:	str	w1, [sp, #3992]
  427688:	str	x5, [sp, #3984]
  42768c:	str	x6, [sp, #3976]
  427690:	bl	424274 <strna>
  427694:	ldr	x8, [sp, #5512]
  427698:	ldr	x9, [x8, #80]
  42769c:	str	x0, [sp, #3968]
  4276a0:	cbz	x9, 4276b8 <parse_token+0x3408>
  4276a4:	ldr	x8, [sp, #5512]
  4276a8:	ldr	x9, [x8, #80]
  4276ac:	ldr	w10, [x9, #8]
  4276b0:	str	w10, [sp, #3964]
  4276b4:	b	4276c0 <parse_token+0x3410>
  4276b8:	mov	w8, wzr
  4276bc:	str	w8, [sp, #3964]
  4276c0:	ldr	w8, [sp, #3964]
  4276c4:	ldr	x9, [sp, #5512]
  4276c8:	ldr	x10, [x9, #1864]
  4276cc:	ldr	w0, [sp, #3996]
  4276d0:	ldr	w1, [sp, #3992]
  4276d4:	ldr	x2, [sp, #5488]
  4276d8:	mov	w3, #0x288                 	// #648
  4276dc:	ldr	x4, [sp, #5480]
  4276e0:	ldr	x5, [sp, #3984]
  4276e4:	ldr	x6, [sp, #3976]
  4276e8:	mov	x11, xzr
  4276ec:	mov	x7, x11
  4276f0:	mov	x12, sp
  4276f4:	str	x11, [x12]
  4276f8:	mov	x11, sp
  4276fc:	ldr	x12, [sp, #5472]
  427700:	str	x12, [x11, #8]
  427704:	mov	x11, sp
  427708:	ldr	x13, [sp, #3968]
  42770c:	str	x13, [x11, #16]
  427710:	mov	x11, sp
  427714:	str	w8, [x11, #24]
  427718:	mov	x11, sp
  42771c:	ldr	x14, [sp, #5464]
  427720:	str	x14, [x11, #32]
  427724:	mov	x11, sp
  427728:	str	x10, [x11, #40]
  42772c:	bl	40a870 <log_object_internal@plt>
  427730:	str	w0, [sp, #9956]
  427734:	ldr	w8, [sp, #9956]
  427738:	str	w8, [sp, #9988]
  42773c:	ldr	w8, [sp, #9988]
  427740:	stur	w8, [x29, #-4]
  427744:	b	4300f8 <parse_token+0xbe48>
  427748:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  42774c:	add	x8, x8, #0x110
  427750:	ldr	q0, [x8]
  427754:	add	x0, sp, #0x2, lsl #12
  427758:	add	x0, x0, #0x6c0
  42775c:	ldr	x9, [sp, #5512]
  427760:	str	q0, [x9]
  427764:	ldr	x8, [x8, #16]
  427768:	str	x8, [x9, #16]
  42776c:	ldr	x1, [x9, #1840]
  427770:	bl	40b2e0 <strv_find@plt>
  427774:	cbz	x0, 42795c <parse_token+0x36ac>
  427778:	ldr	x8, [sp, #5512]
  42777c:	ldr	x9, [x8, #1872]
  427780:	ldr	x10, [sp, #5504]
  427784:	str	x9, [x10, #4256]
  427788:	ldr	x9, [x10, #4256]
  42778c:	cbz	x9, 4277a4 <parse_token+0x34f4>
  427790:	ldr	x8, [sp, #5504]
  427794:	ldr	x9, [x8, #4256]
  427798:	ldr	x9, [x9, #32]
  42779c:	str	x9, [sp, #3952]
  4277a0:	b	4277ac <parse_token+0x34fc>
  4277a4:	mov	x8, xzr
  4277a8:	str	x8, [sp, #3952]
  4277ac:	ldr	x8, [sp, #3952]
  4277b0:	ldr	x9, [sp, #5504]
  4277b4:	str	x8, [x9, #4248]
  4277b8:	ldr	x8, [x9, #4248]
  4277bc:	cbz	x8, 4277d4 <parse_token+0x3524>
  4277c0:	ldr	x8, [sp, #5504]
  4277c4:	ldr	x9, [x8, #4248]
  4277c8:	ldr	x9, [x9, #8]
  4277cc:	str	x9, [sp, #3944]
  4277d0:	b	4277dc <parse_token+0x352c>
  4277d4:	mov	x8, xzr
  4277d8:	str	x8, [sp, #3944]
  4277dc:	ldr	x8, [sp, #3944]
  4277e0:	ldr	x9, [sp, #5504]
  4277e4:	str	x8, [x9, #4240]
  4277e8:	ldr	x8, [x9, #4248]
  4277ec:	cbz	x8, 427804 <parse_token+0x3554>
  4277f0:	ldr	x8, [sp, #5504]
  4277f4:	ldr	x9, [x8, #4248]
  4277f8:	ldr	x9, [x9]
  4277fc:	str	x9, [sp, #3936]
  427800:	b	42780c <parse_token+0x355c>
  427804:	mov	x8, xzr
  427808:	str	x8, [sp, #3936]
  42780c:	ldr	x8, [sp, #3936]
  427810:	ldr	x9, [sp, #5504]
  427814:	str	x8, [x9, #4232]
  427818:	mov	x8, xzr
  42781c:	str	x8, [x9, #4216]
  427820:	str	x8, [x9, #4208]
  427824:	mov	w10, #0x4                   	// #4
  427828:	str	w10, [sp, #9860]
  42782c:	str	wzr, [sp, #9856]
  427830:	ldr	x8, [x9, #4208]
  427834:	cbz	x8, 42787c <parse_token+0x35cc>
  427838:	mov	w0, #0x1                   	// #1
  42783c:	bl	40a3f0 <log_get_max_level_realm@plt>
  427840:	ldr	w8, [sp, #9860]
  427844:	cmp	w0, w8
  427848:	cset	w8, ge  // ge = tcont
  42784c:	mov	w9, #0x1                   	// #1
  427850:	eor	w8, w8, #0x1
  427854:	eor	w8, w8, w9
  427858:	and	w8, w8, #0x1
  42785c:	mov	w1, w8
  427860:	sxtw	x10, w1
  427864:	cbz	x10, 42787c <parse_token+0x35cc>
  427868:	ldr	x8, [sp, #5504]
  42786c:	ldr	x0, [x8, #4208]
  427870:	add	x1, sp, #0x2, lsl #12
  427874:	add	x1, x1, #0x690
  427878:	bl	40a860 <sd_device_get_sysname@plt>
  42787c:	ldr	w0, [sp, #9860]
  427880:	ldr	w1, [sp, #9856]
  427884:	ldr	x8, [sp, #5504]
  427888:	ldr	x9, [x8, #4216]
  42788c:	mov	x10, xzr
  427890:	cmp	x9, #0x0
  427894:	ldr	x9, [sp, #5496]
  427898:	csel	x5, x9, x10, ne  // ne = any
  42789c:	ldr	x6, [x8, #4216]
  4278a0:	ldr	x10, [x8, #4232]
  4278a4:	str	w0, [sp, #3932]
  4278a8:	mov	x0, x10
  4278ac:	str	w1, [sp, #3928]
  4278b0:	str	x5, [sp, #3920]
  4278b4:	str	x6, [sp, #3912]
  4278b8:	bl	424274 <strna>
  4278bc:	ldr	x8, [sp, #5504]
  4278c0:	ldr	x9, [x8, #4240]
  4278c4:	str	x0, [sp, #3904]
  4278c8:	cbz	x9, 4278e0 <parse_token+0x3630>
  4278cc:	ldr	x8, [sp, #5504]
  4278d0:	ldr	x9, [x8, #4240]
  4278d4:	ldr	w10, [x9, #8]
  4278d8:	str	w10, [sp, #3900]
  4278dc:	b	4278e8 <parse_token+0x3638>
  4278e0:	mov	w8, wzr
  4278e4:	str	w8, [sp, #3900]
  4278e8:	ldr	w8, [sp, #3900]
  4278ec:	ldr	x9, [sp, #5512]
  4278f0:	ldr	x10, [x9, #1840]
  4278f4:	ldr	w0, [sp, #3932]
  4278f8:	ldr	w1, [sp, #3928]
  4278fc:	ldr	x2, [sp, #5488]
  427900:	mov	w3, #0x28b                 	// #651
  427904:	ldr	x4, [sp, #5480]
  427908:	ldr	x5, [sp, #3920]
  42790c:	ldr	x6, [sp, #3912]
  427910:	mov	x11, xzr
  427914:	mov	x7, x11
  427918:	mov	x12, sp
  42791c:	str	x11, [x12]
  427920:	mov	x11, sp
  427924:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  427928:	add	x12, x12, #0xb0e
  42792c:	str	x12, [x11, #8]
  427930:	mov	x11, sp
  427934:	ldr	x12, [sp, #3904]
  427938:	str	x12, [x11, #16]
  42793c:	mov	x11, sp
  427940:	str	w8, [x11, #24]
  427944:	mov	x11, sp
  427948:	str	x10, [x11, #32]
  42794c:	bl	40a870 <log_object_internal@plt>
  427950:	str	w0, [sp, #9852]
  427954:	ldr	w8, [sp, #9852]
  427958:	str	w8, [sp, #9884]
  42795c:	ldr	x8, [sp, #5512]
  427960:	ldr	x0, [x8, #1824]
  427964:	ldur	w2, [x29, #-36]
  427968:	ldr	x3, [x8, #1840]
  42796c:	mov	w1, #0x8                   	// #8
  427970:	mov	x9, xzr
  427974:	mov	x4, x9
  427978:	bl	430504 <rule_line_add_token>
  42797c:	stur	w0, [x29, #-68]
  427980:	b	4300c4 <parse_token+0xbe14>
  427984:	ldr	x8, [sp, #5512]
  427988:	ldr	x0, [x8, #1864]
  42798c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  427990:	add	x1, x1, #0xa8e
  427994:	bl	40aa20 <strcmp@plt>
  427998:	cbnz	w0, 427ddc <parse_token+0x3b2c>
  42799c:	ldr	x8, [sp, #5512]
  4279a0:	ldr	x9, [x8, #1856]
  4279a4:	cbz	x9, 427ba8 <parse_token+0x38f8>
  4279a8:	ldr	x8, [sp, #5512]
  4279ac:	ldr	x9, [x8, #1872]
  4279b0:	ldr	x10, [sp, #5504]
  4279b4:	str	x9, [x10, #4184]
  4279b8:	ldr	x9, [x10, #4184]
  4279bc:	cbz	x9, 4279d4 <parse_token+0x3724>
  4279c0:	ldr	x8, [sp, #5504]
  4279c4:	ldr	x9, [x8, #4184]
  4279c8:	ldr	x9, [x9, #32]
  4279cc:	str	x9, [sp, #3888]
  4279d0:	b	4279dc <parse_token+0x372c>
  4279d4:	mov	x8, xzr
  4279d8:	str	x8, [sp, #3888]
  4279dc:	ldr	x8, [sp, #3888]
  4279e0:	ldr	x9, [sp, #5504]
  4279e4:	str	x8, [x9, #4176]
  4279e8:	ldr	x8, [x9, #4176]
  4279ec:	cbz	x8, 427a04 <parse_token+0x3754>
  4279f0:	ldr	x8, [sp, #5504]
  4279f4:	ldr	x9, [x8, #4176]
  4279f8:	ldr	x9, [x9, #8]
  4279fc:	str	x9, [sp, #3880]
  427a00:	b	427a0c <parse_token+0x375c>
  427a04:	mov	x8, xzr
  427a08:	str	x8, [sp, #3880]
  427a0c:	ldr	x8, [sp, #3880]
  427a10:	ldr	x9, [sp, #5504]
  427a14:	str	x8, [x9, #4168]
  427a18:	ldr	x8, [x9, #4176]
  427a1c:	cbz	x8, 427a34 <parse_token+0x3784>
  427a20:	ldr	x8, [sp, #5504]
  427a24:	ldr	x9, [x8, #4176]
  427a28:	ldr	x9, [x9]
  427a2c:	str	x9, [sp, #3872]
  427a30:	b	427a3c <parse_token+0x378c>
  427a34:	mov	x8, xzr
  427a38:	str	x8, [sp, #3872]
  427a3c:	ldr	x8, [sp, #3872]
  427a40:	ldr	x9, [sp, #5504]
  427a44:	str	x8, [x9, #4160]
  427a48:	mov	x8, xzr
  427a4c:	str	x8, [x9, #4144]
  427a50:	str	x8, [x9, #4136]
  427a54:	mov	w10, #0x3                   	// #3
  427a58:	str	w10, [sp, #9788]
  427a5c:	mov	w10, #0x16                  	// #22
  427a60:	movk	w10, #0x4000, lsl #16
  427a64:	str	w10, [sp, #9784]
  427a68:	ldr	x8, [x9, #4136]
  427a6c:	cbz	x8, 427ab4 <parse_token+0x3804>
  427a70:	mov	w0, #0x1                   	// #1
  427a74:	bl	40a3f0 <log_get_max_level_realm@plt>
  427a78:	ldr	w8, [sp, #9788]
  427a7c:	cmp	w0, w8
  427a80:	cset	w8, ge  // ge = tcont
  427a84:	mov	w9, #0x1                   	// #1
  427a88:	eor	w8, w8, #0x1
  427a8c:	eor	w8, w8, w9
  427a90:	and	w8, w8, #0x1
  427a94:	mov	w1, w8
  427a98:	sxtw	x10, w1
  427a9c:	cbz	x10, 427ab4 <parse_token+0x3804>
  427aa0:	ldr	x8, [sp, #5504]
  427aa4:	ldr	x0, [x8, #4136]
  427aa8:	add	x1, sp, #0x2, lsl #12
  427aac:	add	x1, x1, #0x648
  427ab0:	bl	40a860 <sd_device_get_sysname@plt>
  427ab4:	ldr	w0, [sp, #9788]
  427ab8:	ldr	w1, [sp, #9784]
  427abc:	ldr	x8, [sp, #5504]
  427ac0:	ldr	x9, [x8, #4144]
  427ac4:	mov	x10, xzr
  427ac8:	cmp	x9, #0x0
  427acc:	ldr	x9, [sp, #5496]
  427ad0:	csel	x5, x9, x10, ne  // ne = any
  427ad4:	ldr	x6, [x8, #4144]
  427ad8:	ldr	x10, [x8, #4160]
  427adc:	str	w0, [sp, #3868]
  427ae0:	mov	x0, x10
  427ae4:	str	w1, [sp, #3864]
  427ae8:	str	x5, [sp, #3856]
  427aec:	str	x6, [sp, #3848]
  427af0:	bl	424274 <strna>
  427af4:	ldr	x8, [sp, #5504]
  427af8:	ldr	x9, [x8, #4168]
  427afc:	str	x0, [sp, #3840]
  427b00:	cbz	x9, 427b18 <parse_token+0x3868>
  427b04:	ldr	x8, [sp, #5504]
  427b08:	ldr	x9, [x8, #4168]
  427b0c:	ldr	w10, [x9, #8]
  427b10:	str	w10, [sp, #3836]
  427b14:	b	427b20 <parse_token+0x3870>
  427b18:	mov	w8, wzr
  427b1c:	str	w8, [sp, #3836]
  427b20:	ldr	w8, [sp, #3836]
  427b24:	ldr	x9, [sp, #5512]
  427b28:	ldr	x10, [x9, #1864]
  427b2c:	ldr	w0, [sp, #3868]
  427b30:	ldr	w1, [sp, #3864]
  427b34:	ldr	x2, [sp, #5488]
  427b38:	mov	w3, #0x290                 	// #656
  427b3c:	ldr	x4, [sp, #5480]
  427b40:	ldr	x5, [sp, #3856]
  427b44:	ldr	x6, [sp, #3848]
  427b48:	mov	x11, xzr
  427b4c:	mov	x7, x11
  427b50:	mov	x12, sp
  427b54:	str	x11, [x12]
  427b58:	mov	x11, sp
  427b5c:	ldr	x12, [sp, #5472]
  427b60:	str	x12, [x11, #8]
  427b64:	mov	x11, sp
  427b68:	ldr	x13, [sp, #3840]
  427b6c:	str	x13, [x11, #16]
  427b70:	mov	x11, sp
  427b74:	str	w8, [x11, #24]
  427b78:	mov	x11, sp
  427b7c:	ldr	x14, [sp, #5456]
  427b80:	str	x14, [x11, #32]
  427b84:	mov	x11, sp
  427b88:	str	x10, [x11, #40]
  427b8c:	bl	40a870 <log_object_internal@plt>
  427b90:	str	w0, [sp, #9780]
  427b94:	ldr	w8, [sp, #9780]
  427b98:	str	w8, [sp, #9812]
  427b9c:	ldr	w8, [sp, #9812]
  427ba0:	stur	w8, [x29, #-4]
  427ba4:	b	4300f8 <parse_token+0xbe48>
  427ba8:	ldr	x8, [sp, #5512]
  427bac:	ldrb	w9, [x8, #1839]
  427bb0:	tbnz	w9, #0, 427db4 <parse_token+0x3b04>
  427bb4:	ldr	x8, [sp, #5512]
  427bb8:	ldr	x9, [x8, #1872]
  427bbc:	ldr	x10, [sp, #5504]
  427bc0:	str	x9, [x10, #4112]
  427bc4:	ldr	x9, [x10, #4112]
  427bc8:	cbz	x9, 427be0 <parse_token+0x3930>
  427bcc:	ldr	x8, [sp, #5504]
  427bd0:	ldr	x9, [x8, #4112]
  427bd4:	ldr	x9, [x9, #32]
  427bd8:	str	x9, [sp, #3824]
  427bdc:	b	427be8 <parse_token+0x3938>
  427be0:	mov	x8, xzr
  427be4:	str	x8, [sp, #3824]
  427be8:	ldr	x8, [sp, #3824]
  427bec:	ldr	x9, [sp, #5504]
  427bf0:	str	x8, [x9, #4104]
  427bf4:	ldr	x8, [x9, #4104]
  427bf8:	cbz	x8, 427c10 <parse_token+0x3960>
  427bfc:	ldr	x8, [sp, #5504]
  427c00:	ldr	x9, [x8, #4104]
  427c04:	ldr	x9, [x9, #8]
  427c08:	str	x9, [sp, #3816]
  427c0c:	b	427c18 <parse_token+0x3968>
  427c10:	mov	x8, xzr
  427c14:	str	x8, [sp, #3816]
  427c18:	ldr	x8, [sp, #3816]
  427c1c:	ldr	x9, [sp, #5504]
  427c20:	str	x8, [x9, #4096]
  427c24:	ldr	x8, [x9, #4104]
  427c28:	cbz	x8, 427c40 <parse_token+0x3990>
  427c2c:	ldr	x8, [sp, #5504]
  427c30:	ldr	x9, [x8, #4104]
  427c34:	ldr	x9, [x9]
  427c38:	str	x9, [sp, #3808]
  427c3c:	b	427c48 <parse_token+0x3998>
  427c40:	mov	x8, xzr
  427c44:	str	x8, [sp, #3808]
  427c48:	ldr	x8, [sp, #3808]
  427c4c:	ldr	x9, [sp, #5504]
  427c50:	str	x8, [x9, #4088]
  427c54:	mov	x8, xzr
  427c58:	str	x8, [x9, #4072]
  427c5c:	str	x8, [x9, #4064]
  427c60:	mov	w10, #0x3                   	// #3
  427c64:	str	w10, [sp, #9716]
  427c68:	mov	w10, #0x16                  	// #22
  427c6c:	movk	w10, #0x4000, lsl #16
  427c70:	str	w10, [sp, #9712]
  427c74:	ldr	x8, [x9, #4064]
  427c78:	cbz	x8, 427cc0 <parse_token+0x3a10>
  427c7c:	mov	w0, #0x1                   	// #1
  427c80:	bl	40a3f0 <log_get_max_level_realm@plt>
  427c84:	ldr	w8, [sp, #9716]
  427c88:	cmp	w0, w8
  427c8c:	cset	w8, ge  // ge = tcont
  427c90:	mov	w9, #0x1                   	// #1
  427c94:	eor	w8, w8, #0x1
  427c98:	eor	w8, w8, w9
  427c9c:	and	w8, w8, #0x1
  427ca0:	mov	w1, w8
  427ca4:	sxtw	x10, w1
  427ca8:	cbz	x10, 427cc0 <parse_token+0x3a10>
  427cac:	ldr	x8, [sp, #5504]
  427cb0:	ldr	x0, [x8, #4064]
  427cb4:	add	x1, sp, #0x2, lsl #12
  427cb8:	add	x1, x1, #0x600
  427cbc:	bl	40a860 <sd_device_get_sysname@plt>
  427cc0:	ldr	w0, [sp, #9716]
  427cc4:	ldr	w1, [sp, #9712]
  427cc8:	ldr	x8, [sp, #5504]
  427ccc:	ldr	x9, [x8, #4072]
  427cd0:	mov	x10, xzr
  427cd4:	cmp	x9, #0x0
  427cd8:	ldr	x9, [sp, #5496]
  427cdc:	csel	x5, x9, x10, ne  // ne = any
  427ce0:	ldr	x6, [x8, #4072]
  427ce4:	ldr	x10, [x8, #4088]
  427ce8:	str	w0, [sp, #3804]
  427cec:	mov	x0, x10
  427cf0:	str	w1, [sp, #3800]
  427cf4:	str	x5, [sp, #3792]
  427cf8:	str	x6, [sp, #3784]
  427cfc:	bl	424274 <strna>
  427d00:	ldr	x8, [sp, #5504]
  427d04:	ldr	x9, [x8, #4096]
  427d08:	str	x0, [sp, #3776]
  427d0c:	cbz	x9, 427d24 <parse_token+0x3a74>
  427d10:	ldr	x8, [sp, #5504]
  427d14:	ldr	x9, [x8, #4096]
  427d18:	ldr	w10, [x9, #8]
  427d1c:	str	w10, [sp, #3772]
  427d20:	b	427d2c <parse_token+0x3a7c>
  427d24:	mov	w8, wzr
  427d28:	str	w8, [sp, #3772]
  427d2c:	ldr	w8, [sp, #3772]
  427d30:	ldr	x9, [sp, #5512]
  427d34:	ldr	x10, [x9, #1864]
  427d38:	ldr	w0, [sp, #3804]
  427d3c:	ldr	w1, [sp, #3800]
  427d40:	ldr	x2, [sp, #5488]
  427d44:	mov	w3, #0x292                 	// #658
  427d48:	ldr	x4, [sp, #5480]
  427d4c:	ldr	x5, [sp, #3792]
  427d50:	ldr	x6, [sp, #3784]
  427d54:	mov	x11, xzr
  427d58:	mov	x7, x11
  427d5c:	mov	x12, sp
  427d60:	str	x11, [x12]
  427d64:	mov	x11, sp
  427d68:	ldr	x12, [sp, #5472]
  427d6c:	str	x12, [x11, #8]
  427d70:	mov	x11, sp
  427d74:	ldr	x13, [sp, #3776]
  427d78:	str	x13, [x11, #16]
  427d7c:	mov	x11, sp
  427d80:	str	w8, [x11, #24]
  427d84:	mov	x11, sp
  427d88:	ldr	x14, [sp, #5464]
  427d8c:	str	x14, [x11, #32]
  427d90:	mov	x11, sp
  427d94:	str	x10, [x11, #40]
  427d98:	bl	40a870 <log_object_internal@plt>
  427d9c:	str	w0, [sp, #9708]
  427da0:	ldr	w8, [sp, #9708]
  427da4:	str	w8, [sp, #9740]
  427da8:	ldr	w8, [sp, #9740]
  427dac:	stur	w8, [x29, #-4]
  427db0:	b	4300f8 <parse_token+0xbe48>
  427db4:	ldr	x8, [sp, #5512]
  427db8:	ldr	x0, [x8, #1824]
  427dbc:	ldur	w2, [x29, #-36]
  427dc0:	ldr	x3, [x8, #1840]
  427dc4:	mov	w1, #0x9                   	// #9
  427dc8:	mov	x9, xzr
  427dcc:	mov	x4, x9
  427dd0:	bl	430504 <rule_line_add_token>
  427dd4:	stur	w0, [x29, #-68]
  427dd8:	b	4300c4 <parse_token+0xbe14>
  427ddc:	ldr	x8, [sp, #5512]
  427de0:	ldr	x0, [x8, #1864]
  427de4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  427de8:	add	x1, x1, #0xb49
  427dec:	bl	40aa20 <strcmp@plt>
  427df0:	cbnz	w0, 4282f4 <parse_token+0x4044>
  427df4:	ldr	x8, [sp, #5512]
  427df8:	ldr	x0, [x8, #1872]
  427dfc:	ldr	x1, [x8, #1864]
  427e00:	ldr	x2, [x8, #1856]
  427e04:	bl	43116c <check_attr_format_and_warn>
  427e08:	stur	w0, [x29, #-68]
  427e0c:	ldur	w9, [x29, #-68]
  427e10:	cmp	w9, #0x0
  427e14:	cset	w9, ge  // ge = tcont
  427e18:	tbnz	w9, #0, 427e28 <parse_token+0x3b78>
  427e1c:	ldur	w8, [x29, #-68]
  427e20:	stur	w8, [x29, #-4]
  427e24:	b	4300f8 <parse_token+0xbe48>
  427e28:	ldur	w8, [x29, #-36]
  427e2c:	cmp	w8, #0x3
  427e30:	b.ne	428034 <parse_token+0x3d84>  // b.any
  427e34:	ldr	x8, [sp, #5512]
  427e38:	ldr	x9, [x8, #1872]
  427e3c:	ldr	x10, [sp, #5504]
  427e40:	str	x9, [x10, #4040]
  427e44:	ldr	x9, [x10, #4040]
  427e48:	cbz	x9, 427e60 <parse_token+0x3bb0>
  427e4c:	ldr	x8, [sp, #5504]
  427e50:	ldr	x9, [x8, #4040]
  427e54:	ldr	x9, [x9, #32]
  427e58:	str	x9, [sp, #3760]
  427e5c:	b	427e68 <parse_token+0x3bb8>
  427e60:	mov	x8, xzr
  427e64:	str	x8, [sp, #3760]
  427e68:	ldr	x8, [sp, #3760]
  427e6c:	ldr	x9, [sp, #5504]
  427e70:	str	x8, [x9, #4032]
  427e74:	ldr	x8, [x9, #4032]
  427e78:	cbz	x8, 427e90 <parse_token+0x3be0>
  427e7c:	ldr	x8, [sp, #5504]
  427e80:	ldr	x9, [x8, #4032]
  427e84:	ldr	x9, [x9, #8]
  427e88:	str	x9, [sp, #3752]
  427e8c:	b	427e98 <parse_token+0x3be8>
  427e90:	mov	x8, xzr
  427e94:	str	x8, [sp, #3752]
  427e98:	ldr	x8, [sp, #3752]
  427e9c:	ldr	x9, [sp, #5504]
  427ea0:	str	x8, [x9, #4024]
  427ea4:	ldr	x8, [x9, #4032]
  427ea8:	cbz	x8, 427ec0 <parse_token+0x3c10>
  427eac:	ldr	x8, [sp, #5504]
  427eb0:	ldr	x9, [x8, #4032]
  427eb4:	ldr	x9, [x9]
  427eb8:	str	x9, [sp, #3744]
  427ebc:	b	427ec8 <parse_token+0x3c18>
  427ec0:	mov	x8, xzr
  427ec4:	str	x8, [sp, #3744]
  427ec8:	ldr	x8, [sp, #3744]
  427ecc:	ldr	x9, [sp, #5504]
  427ed0:	str	x8, [x9, #4016]
  427ed4:	mov	x8, xzr
  427ed8:	str	x8, [x9, #4000]
  427edc:	str	x8, [x9, #3992]
  427ee0:	mov	w10, #0x3                   	// #3
  427ee4:	str	w10, [sp, #9644]
  427ee8:	mov	w10, #0x16                  	// #22
  427eec:	movk	w10, #0x4000, lsl #16
  427ef0:	str	w10, [sp, #9640]
  427ef4:	ldr	x8, [x9, #3992]
  427ef8:	cbz	x8, 427f40 <parse_token+0x3c90>
  427efc:	mov	w0, #0x1                   	// #1
  427f00:	bl	40a3f0 <log_get_max_level_realm@plt>
  427f04:	ldr	w8, [sp, #9644]
  427f08:	cmp	w0, w8
  427f0c:	cset	w8, ge  // ge = tcont
  427f10:	mov	w9, #0x1                   	// #1
  427f14:	eor	w8, w8, #0x1
  427f18:	eor	w8, w8, w9
  427f1c:	and	w8, w8, #0x1
  427f20:	mov	w1, w8
  427f24:	sxtw	x10, w1
  427f28:	cbz	x10, 427f40 <parse_token+0x3c90>
  427f2c:	ldr	x8, [sp, #5504]
  427f30:	ldr	x0, [x8, #3992]
  427f34:	add	x1, sp, #0x2, lsl #12
  427f38:	add	x1, x1, #0x5b8
  427f3c:	bl	40a860 <sd_device_get_sysname@plt>
  427f40:	ldr	w0, [sp, #9644]
  427f44:	ldr	w1, [sp, #9640]
  427f48:	ldr	x8, [sp, #5504]
  427f4c:	ldr	x9, [x8, #4000]
  427f50:	mov	x10, xzr
  427f54:	cmp	x9, #0x0
  427f58:	ldr	x9, [sp, #5496]
  427f5c:	csel	x5, x9, x10, ne  // ne = any
  427f60:	ldr	x6, [x8, #4000]
  427f64:	ldr	x10, [x8, #4016]
  427f68:	str	w0, [sp, #3740]
  427f6c:	mov	x0, x10
  427f70:	str	w1, [sp, #3736]
  427f74:	str	x5, [sp, #3728]
  427f78:	str	x6, [sp, #3720]
  427f7c:	bl	424274 <strna>
  427f80:	ldr	x8, [sp, #5504]
  427f84:	ldr	x9, [x8, #4024]
  427f88:	str	x0, [sp, #3712]
  427f8c:	cbz	x9, 427fa4 <parse_token+0x3cf4>
  427f90:	ldr	x8, [sp, #5504]
  427f94:	ldr	x9, [x8, #4024]
  427f98:	ldr	w10, [x9, #8]
  427f9c:	str	w10, [sp, #3708]
  427fa0:	b	427fac <parse_token+0x3cfc>
  427fa4:	mov	w8, wzr
  427fa8:	str	w8, [sp, #3708]
  427fac:	ldr	w8, [sp, #3708]
  427fb0:	ldr	x9, [sp, #5512]
  427fb4:	ldr	x10, [x9, #1864]
  427fb8:	ldr	w0, [sp, #3740]
  427fbc:	ldr	w1, [sp, #3736]
  427fc0:	ldr	x2, [sp, #5488]
  427fc4:	mov	w3, #0x29a                 	// #666
  427fc8:	ldr	x4, [sp, #5480]
  427fcc:	ldr	x5, [sp, #3728]
  427fd0:	ldr	x6, [sp, #3720]
  427fd4:	mov	x11, xzr
  427fd8:	mov	x7, x11
  427fdc:	mov	x12, sp
  427fe0:	str	x11, [x12]
  427fe4:	mov	x11, sp
  427fe8:	ldr	x12, [sp, #5472]
  427fec:	str	x12, [x11, #8]
  427ff0:	mov	x11, sp
  427ff4:	ldr	x13, [sp, #3712]
  427ff8:	str	x13, [x11, #16]
  427ffc:	mov	x11, sp
  428000:	str	w8, [x11, #24]
  428004:	mov	x11, sp
  428008:	ldr	x14, [sp, #5464]
  42800c:	str	x14, [x11, #32]
  428010:	mov	x11, sp
  428014:	str	x10, [x11, #40]
  428018:	bl	40a870 <log_object_internal@plt>
  42801c:	str	w0, [sp, #9636]
  428020:	ldr	w8, [sp, #9636]
  428024:	str	w8, [sp, #9668]
  428028:	ldr	w8, [sp, #9668]
  42802c:	stur	w8, [x29, #-4]
  428030:	b	4300f8 <parse_token+0xbe48>
  428034:	mov	w8, #0x0                   	// #0
  428038:	ldr	x9, [sp, #5504]
  42803c:	strb	w8, [x9, #3979]
  428040:	ldur	w8, [x29, #-36]
  428044:	cmp	w8, #0x2
  428048:	str	w8, [sp, #3704]
  42804c:	b.eq	42806c <parse_token+0x3dbc>  // b.none
  428050:	b	428054 <parse_token+0x3da4>
  428054:	ldr	w8, [sp, #3704]
  428058:	cmp	w8, #0x5
  42805c:	cset	w9, eq  // eq = none
  428060:	eor	w9, w9, #0x1
  428064:	tbnz	w9, #0, 42807c <parse_token+0x3dcc>
  428068:	b	42806c <parse_token+0x3dbc>
  42806c:	mov	w8, #0x1                   	// #1
  428070:	ldr	x9, [sp, #5504]
  428074:	strb	w8, [x9, #3979]
  428078:	b	42807c <parse_token+0x3dcc>
  42807c:	ldr	x8, [sp, #5504]
  428080:	ldrb	w9, [x8, #3979]
  428084:	and	w9, w9, #0x1
  428088:	strb	w9, [x8, #3978]
  42808c:	ldrb	w9, [x8, #3978]
  428090:	tbnz	w9, #0, 428098 <parse_token+0x3de8>
  428094:	b	428284 <parse_token+0x3fd4>
  428098:	ldr	x8, [sp, #5512]
  42809c:	ldr	x9, [x8, #1872]
  4280a0:	ldr	x10, [sp, #5504]
  4280a4:	str	x9, [x10, #3968]
  4280a8:	ldr	x9, [x10, #3968]
  4280ac:	cbz	x9, 4280c4 <parse_token+0x3e14>
  4280b0:	ldr	x8, [sp, #5504]
  4280b4:	ldr	x9, [x8, #3968]
  4280b8:	ldr	x9, [x9, #32]
  4280bc:	str	x9, [sp, #3696]
  4280c0:	b	4280cc <parse_token+0x3e1c>
  4280c4:	mov	x8, xzr
  4280c8:	str	x8, [sp, #3696]
  4280cc:	ldr	x8, [sp, #3696]
  4280d0:	ldr	x9, [sp, #5504]
  4280d4:	str	x8, [x9, #3960]
  4280d8:	ldr	x8, [x9, #3960]
  4280dc:	cbz	x8, 4280f4 <parse_token+0x3e44>
  4280e0:	ldr	x8, [sp, #5504]
  4280e4:	ldr	x9, [x8, #3960]
  4280e8:	ldr	x9, [x9, #8]
  4280ec:	str	x9, [sp, #3688]
  4280f0:	b	4280fc <parse_token+0x3e4c>
  4280f4:	mov	x8, xzr
  4280f8:	str	x8, [sp, #3688]
  4280fc:	ldr	x8, [sp, #3688]
  428100:	ldr	x9, [sp, #5504]
  428104:	str	x8, [x9, #3952]
  428108:	ldr	x8, [x9, #3960]
  42810c:	cbz	x8, 428124 <parse_token+0x3e74>
  428110:	ldr	x8, [sp, #5504]
  428114:	ldr	x9, [x8, #3960]
  428118:	ldr	x9, [x9]
  42811c:	str	x9, [sp, #3680]
  428120:	b	42812c <parse_token+0x3e7c>
  428124:	mov	x8, xzr
  428128:	str	x8, [sp, #3680]
  42812c:	ldr	x8, [sp, #3680]
  428130:	ldr	x9, [sp, #5504]
  428134:	str	x8, [x9, #3944]
  428138:	mov	x8, xzr
  42813c:	str	x8, [x9, #3928]
  428140:	str	x8, [x9, #3920]
  428144:	mov	w10, #0x4                   	// #4
  428148:	str	w10, [sp, #9572]
  42814c:	str	wzr, [sp, #9568]
  428150:	ldr	x8, [x9, #3920]
  428154:	cbz	x8, 42819c <parse_token+0x3eec>
  428158:	mov	w0, #0x1                   	// #1
  42815c:	bl	40a3f0 <log_get_max_level_realm@plt>
  428160:	ldr	w8, [sp, #9572]
  428164:	cmp	w0, w8
  428168:	cset	w8, ge  // ge = tcont
  42816c:	mov	w9, #0x1                   	// #1
  428170:	eor	w8, w8, #0x1
  428174:	eor	w8, w8, w9
  428178:	and	w8, w8, #0x1
  42817c:	mov	w1, w8
  428180:	sxtw	x10, w1
  428184:	cbz	x10, 42819c <parse_token+0x3eec>
  428188:	ldr	x8, [sp, #5504]
  42818c:	ldr	x0, [x8, #3920]
  428190:	add	x1, sp, #0x2, lsl #12
  428194:	add	x1, x1, #0x570
  428198:	bl	40a860 <sd_device_get_sysname@plt>
  42819c:	ldr	w0, [sp, #9572]
  4281a0:	ldr	w1, [sp, #9568]
  4281a4:	ldr	x8, [sp, #5504]
  4281a8:	ldr	x9, [x8, #3928]
  4281ac:	mov	x10, xzr
  4281b0:	cmp	x9, #0x0
  4281b4:	ldr	x9, [sp, #5496]
  4281b8:	csel	x5, x9, x10, ne  // ne = any
  4281bc:	ldr	x6, [x8, #3928]
  4281c0:	ldr	x10, [x8, #3944]
  4281c4:	str	w0, [sp, #3676]
  4281c8:	mov	x0, x10
  4281cc:	str	w1, [sp, #3672]
  4281d0:	str	x5, [sp, #3664]
  4281d4:	str	x6, [sp, #3656]
  4281d8:	bl	424274 <strna>
  4281dc:	ldr	x8, [sp, #5504]
  4281e0:	ldr	x9, [x8, #3952]
  4281e4:	str	x0, [sp, #3648]
  4281e8:	cbz	x9, 428200 <parse_token+0x3f50>
  4281ec:	ldr	x8, [sp, #5504]
  4281f0:	ldr	x9, [x8, #3952]
  4281f4:	ldr	w10, [x9, #8]
  4281f8:	str	w10, [sp, #3644]
  4281fc:	b	428208 <parse_token+0x3f58>
  428200:	mov	w8, wzr
  428204:	str	w8, [sp, #3644]
  428208:	ldr	w8, [sp, #3644]
  42820c:	ldr	x9, [sp, #5512]
  428210:	ldr	x10, [x9, #1864]
  428214:	ldr	w0, [sp, #3676]
  428218:	ldr	w1, [sp, #3672]
  42821c:	ldr	x2, [sp, #5488]
  428220:	mov	w3, #0x29c                 	// #668
  428224:	ldr	x4, [sp, #5480]
  428228:	ldr	x5, [sp, #3664]
  42822c:	ldr	x6, [sp, #3656]
  428230:	mov	x11, xzr
  428234:	mov	x7, x11
  428238:	mov	x12, sp
  42823c:	str	x11, [x12]
  428240:	mov	x11, sp
  428244:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  428248:	add	x12, x12, #0xb4e
  42824c:	str	x12, [x11, #8]
  428250:	mov	x11, sp
  428254:	ldr	x12, [sp, #3648]
  428258:	str	x12, [x11, #16]
  42825c:	mov	x11, sp
  428260:	str	w8, [x11, #24]
  428264:	mov	x11, sp
  428268:	str	x10, [x11, #32]
  42826c:	bl	40a870 <log_object_internal@plt>
  428270:	str	w0, [sp, #9564]
  428274:	ldr	w8, [sp, #9564]
  428278:	str	w8, [sp, #9596]
  42827c:	mov	w8, #0x4                   	// #4
  428280:	stur	w8, [x29, #-36]
  428284:	ldr	x8, [sp, #5512]
  428288:	ldrb	w9, [x8, #1839]
  42828c:	tbnz	w9, #0, 4282d0 <parse_token+0x4020>
  428290:	ldr	x8, [sp, #5512]
  428294:	ldr	x0, [x8, #1872]
  428298:	ldr	x1, [x8, #1864]
  42829c:	ldr	x2, [x8, #1840]
  4282a0:	mov	w9, wzr
  4282a4:	and	w3, w9, #0x1
  4282a8:	bl	430d00 <check_value_format_and_warn>
  4282ac:	ldr	x8, [sp, #5512]
  4282b0:	ldr	x0, [x8, #1824]
  4282b4:	ldur	w2, [x29, #-36]
  4282b8:	ldr	x3, [x8, #1840]
  4282bc:	ldr	x4, [x8, #1856]
  4282c0:	mov	w1, #0x2b                  	// #43
  4282c4:	bl	430504 <rule_line_add_token>
  4282c8:	stur	w0, [x29, #-68]
  4282cc:	b	4282f0 <parse_token+0x4040>
  4282d0:	ldr	x8, [sp, #5512]
  4282d4:	ldr	x0, [x8, #1824]
  4282d8:	ldur	w2, [x29, #-36]
  4282dc:	ldr	x3, [x8, #1840]
  4282e0:	ldr	x4, [x8, #1856]
  4282e4:	mov	w1, #0xa                   	// #10
  4282e8:	bl	430504 <rule_line_add_token>
  4282ec:	stur	w0, [x29, #-68]
  4282f0:	b	4300c4 <parse_token+0xbe14>
  4282f4:	ldr	x8, [sp, #5512]
  4282f8:	ldr	x0, [x8, #1864]
  4282fc:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  428300:	add	x1, x1, #0xb9f
  428304:	bl	40aa20 <strcmp@plt>
  428308:	cbnz	w0, 428828 <parse_token+0x4578>
  42830c:	ldr	x8, [sp, #5512]
  428310:	ldr	x0, [x8, #1872]
  428314:	ldr	x1, [x8, #1864]
  428318:	ldr	x2, [x8, #1856]
  42831c:	bl	43116c <check_attr_format_and_warn>
  428320:	stur	w0, [x29, #-68]
  428324:	ldur	w9, [x29, #-68]
  428328:	cmp	w9, #0x0
  42832c:	cset	w9, ge  // ge = tcont
  428330:	tbnz	w9, #0, 428340 <parse_token+0x4090>
  428334:	ldur	w8, [x29, #-68]
  428338:	stur	w8, [x29, #-4]
  42833c:	b	4300f8 <parse_token+0xbe48>
  428340:	ldur	w8, [x29, #-36]
  428344:	cmp	w8, #0x3
  428348:	b.ne	42854c <parse_token+0x429c>  // b.any
  42834c:	ldr	x8, [sp, #5512]
  428350:	ldr	x9, [x8, #1872]
  428354:	ldr	x10, [sp, #5504]
  428358:	str	x9, [x10, #3896]
  42835c:	ldr	x9, [x10, #3896]
  428360:	cbz	x9, 428378 <parse_token+0x40c8>
  428364:	ldr	x8, [sp, #5504]
  428368:	ldr	x9, [x8, #3896]
  42836c:	ldr	x9, [x9, #32]
  428370:	str	x9, [sp, #3632]
  428374:	b	428380 <parse_token+0x40d0>
  428378:	mov	x8, xzr
  42837c:	str	x8, [sp, #3632]
  428380:	ldr	x8, [sp, #3632]
  428384:	ldr	x9, [sp, #5504]
  428388:	str	x8, [x9, #3888]
  42838c:	ldr	x8, [x9, #3888]
  428390:	cbz	x8, 4283a8 <parse_token+0x40f8>
  428394:	ldr	x8, [sp, #5504]
  428398:	ldr	x9, [x8, #3888]
  42839c:	ldr	x9, [x9, #8]
  4283a0:	str	x9, [sp, #3624]
  4283a4:	b	4283b0 <parse_token+0x4100>
  4283a8:	mov	x8, xzr
  4283ac:	str	x8, [sp, #3624]
  4283b0:	ldr	x8, [sp, #3624]
  4283b4:	ldr	x9, [sp, #5504]
  4283b8:	str	x8, [x9, #3880]
  4283bc:	ldr	x8, [x9, #3888]
  4283c0:	cbz	x8, 4283d8 <parse_token+0x4128>
  4283c4:	ldr	x8, [sp, #5504]
  4283c8:	ldr	x9, [x8, #3888]
  4283cc:	ldr	x9, [x9]
  4283d0:	str	x9, [sp, #3616]
  4283d4:	b	4283e0 <parse_token+0x4130>
  4283d8:	mov	x8, xzr
  4283dc:	str	x8, [sp, #3616]
  4283e0:	ldr	x8, [sp, #3616]
  4283e4:	ldr	x9, [sp, #5504]
  4283e8:	str	x8, [x9, #3872]
  4283ec:	mov	x8, xzr
  4283f0:	str	x8, [x9, #3856]
  4283f4:	str	x8, [x9, #3848]
  4283f8:	mov	w10, #0x3                   	// #3
  4283fc:	str	w10, [sp, #9500]
  428400:	mov	w10, #0x16                  	// #22
  428404:	movk	w10, #0x4000, lsl #16
  428408:	str	w10, [sp, #9496]
  42840c:	ldr	x8, [x9, #3848]
  428410:	cbz	x8, 428458 <parse_token+0x41a8>
  428414:	mov	w0, #0x1                   	// #1
  428418:	bl	40a3f0 <log_get_max_level_realm@plt>
  42841c:	ldr	w8, [sp, #9500]
  428420:	cmp	w0, w8
  428424:	cset	w8, ge  // ge = tcont
  428428:	mov	w9, #0x1                   	// #1
  42842c:	eor	w8, w8, #0x1
  428430:	eor	w8, w8, w9
  428434:	and	w8, w8, #0x1
  428438:	mov	w1, w8
  42843c:	sxtw	x10, w1
  428440:	cbz	x10, 428458 <parse_token+0x41a8>
  428444:	ldr	x8, [sp, #5504]
  428448:	ldr	x0, [x8, #3848]
  42844c:	add	x1, sp, #0x2, lsl #12
  428450:	add	x1, x1, #0x528
  428454:	bl	40a860 <sd_device_get_sysname@plt>
  428458:	ldr	w0, [sp, #9500]
  42845c:	ldr	w1, [sp, #9496]
  428460:	ldr	x8, [sp, #5504]
  428464:	ldr	x9, [x8, #3856]
  428468:	mov	x10, xzr
  42846c:	cmp	x9, #0x0
  428470:	ldr	x9, [sp, #5496]
  428474:	csel	x5, x9, x10, ne  // ne = any
  428478:	ldr	x6, [x8, #3856]
  42847c:	ldr	x10, [x8, #3872]
  428480:	str	w0, [sp, #3612]
  428484:	mov	x0, x10
  428488:	str	w1, [sp, #3608]
  42848c:	str	x5, [sp, #3600]
  428490:	str	x6, [sp, #3592]
  428494:	bl	424274 <strna>
  428498:	ldr	x8, [sp, #5504]
  42849c:	ldr	x9, [x8, #3880]
  4284a0:	str	x0, [sp, #3584]
  4284a4:	cbz	x9, 4284bc <parse_token+0x420c>
  4284a8:	ldr	x8, [sp, #5504]
  4284ac:	ldr	x9, [x8, #3880]
  4284b0:	ldr	w10, [x9, #8]
  4284b4:	str	w10, [sp, #3580]
  4284b8:	b	4284c4 <parse_token+0x4214>
  4284bc:	mov	w8, wzr
  4284c0:	str	w8, [sp, #3580]
  4284c4:	ldr	w8, [sp, #3580]
  4284c8:	ldr	x9, [sp, #5512]
  4284cc:	ldr	x10, [x9, #1864]
  4284d0:	ldr	w0, [sp, #3612]
  4284d4:	ldr	w1, [sp, #3608]
  4284d8:	ldr	x2, [sp, #5488]
  4284dc:	mov	w3, #0x2aa                 	// #682
  4284e0:	ldr	x4, [sp, #5480]
  4284e4:	ldr	x5, [sp, #3600]
  4284e8:	ldr	x6, [sp, #3592]
  4284ec:	mov	x11, xzr
  4284f0:	mov	x7, x11
  4284f4:	mov	x12, sp
  4284f8:	str	x11, [x12]
  4284fc:	mov	x11, sp
  428500:	ldr	x12, [sp, #5472]
  428504:	str	x12, [x11, #8]
  428508:	mov	x11, sp
  42850c:	ldr	x13, [sp, #3584]
  428510:	str	x13, [x11, #16]
  428514:	mov	x11, sp
  428518:	str	w8, [x11, #24]
  42851c:	mov	x11, sp
  428520:	ldr	x14, [sp, #5464]
  428524:	str	x14, [x11, #32]
  428528:	mov	x11, sp
  42852c:	str	x10, [x11, #40]
  428530:	bl	40a870 <log_object_internal@plt>
  428534:	str	w0, [sp, #9492]
  428538:	ldr	w8, [sp, #9492]
  42853c:	str	w8, [sp, #9524]
  428540:	ldr	w8, [sp, #9524]
  428544:	stur	w8, [x29, #-4]
  428548:	b	4300f8 <parse_token+0xbe48>
  42854c:	mov	w8, #0x0                   	// #0
  428550:	add	x9, sp, #0x1, lsl #12
  428554:	add	x9, x9, #0x514
  428558:	strb	w8, [x9, #4095]
  42855c:	ldur	w8, [x29, #-36]
  428560:	cmp	w8, #0x2
  428564:	str	w8, [sp, #3576]
  428568:	b.eq	428588 <parse_token+0x42d8>  // b.none
  42856c:	b	428570 <parse_token+0x42c0>
  428570:	ldr	w8, [sp, #3576]
  428574:	cmp	w8, #0x5
  428578:	cset	w9, eq  // eq = none
  42857c:	eor	w9, w9, #0x1
  428580:	tbnz	w9, #0, 42859c <parse_token+0x42ec>
  428584:	b	428588 <parse_token+0x42d8>
  428588:	mov	w8, #0x1                   	// #1
  42858c:	add	x9, sp, #0x1, lsl #12
  428590:	add	x9, x9, #0x514
  428594:	strb	w8, [x9, #4095]
  428598:	b	42859c <parse_token+0x42ec>
  42859c:	add	x8, sp, #0x1, lsl #12
  4285a0:	add	x8, x8, #0x514
  4285a4:	ldrb	w8, [x8, #4095]
  4285a8:	and	w8, w8, #0x1
  4285ac:	add	x9, sp, #0x1, lsl #12
  4285b0:	add	x9, x9, #0x513
  4285b4:	strb	w8, [x9, #4095]
  4285b8:	add	x8, sp, #0x1, lsl #12
  4285bc:	add	x8, x8, #0x513
  4285c0:	ldrb	w8, [x8, #4095]
  4285c4:	tbnz	w8, #0, 4285cc <parse_token+0x431c>
  4285c8:	b	4287b8 <parse_token+0x4508>
  4285cc:	ldr	x8, [sp, #5512]
  4285d0:	ldr	x9, [x8, #1872]
  4285d4:	ldr	x10, [sp, #5504]
  4285d8:	str	x9, [x10, #3824]
  4285dc:	ldr	x9, [x10, #3824]
  4285e0:	cbz	x9, 4285f8 <parse_token+0x4348>
  4285e4:	ldr	x8, [sp, #5504]
  4285e8:	ldr	x9, [x8, #3824]
  4285ec:	ldr	x9, [x9, #32]
  4285f0:	str	x9, [sp, #3568]
  4285f4:	b	428600 <parse_token+0x4350>
  4285f8:	mov	x8, xzr
  4285fc:	str	x8, [sp, #3568]
  428600:	ldr	x8, [sp, #3568]
  428604:	ldr	x9, [sp, #5504]
  428608:	str	x8, [x9, #3816]
  42860c:	ldr	x8, [x9, #3816]
  428610:	cbz	x8, 428628 <parse_token+0x4378>
  428614:	ldr	x8, [sp, #5504]
  428618:	ldr	x9, [x8, #3816]
  42861c:	ldr	x9, [x9, #8]
  428620:	str	x9, [sp, #3560]
  428624:	b	428630 <parse_token+0x4380>
  428628:	mov	x8, xzr
  42862c:	str	x8, [sp, #3560]
  428630:	ldr	x8, [sp, #3560]
  428634:	ldr	x9, [sp, #5504]
  428638:	str	x8, [x9, #3808]
  42863c:	ldr	x8, [x9, #3816]
  428640:	cbz	x8, 428658 <parse_token+0x43a8>
  428644:	ldr	x8, [sp, #5504]
  428648:	ldr	x9, [x8, #3816]
  42864c:	ldr	x9, [x9]
  428650:	str	x9, [sp, #3552]
  428654:	b	428660 <parse_token+0x43b0>
  428658:	mov	x8, xzr
  42865c:	str	x8, [sp, #3552]
  428660:	ldr	x8, [sp, #3552]
  428664:	ldr	x9, [sp, #5504]
  428668:	str	x8, [x9, #3800]
  42866c:	mov	x8, xzr
  428670:	str	x8, [x9, #3784]
  428674:	str	x8, [x9, #3776]
  428678:	mov	w10, #0x4                   	// #4
  42867c:	str	w10, [sp, #9428]
  428680:	str	wzr, [sp, #9424]
  428684:	ldr	x8, [x9, #3776]
  428688:	cbz	x8, 4286d0 <parse_token+0x4420>
  42868c:	mov	w0, #0x1                   	// #1
  428690:	bl	40a3f0 <log_get_max_level_realm@plt>
  428694:	ldr	w8, [sp, #9428]
  428698:	cmp	w0, w8
  42869c:	cset	w8, ge  // ge = tcont
  4286a0:	mov	w9, #0x1                   	// #1
  4286a4:	eor	w8, w8, #0x1
  4286a8:	eor	w8, w8, w9
  4286ac:	and	w8, w8, #0x1
  4286b0:	mov	w1, w8
  4286b4:	sxtw	x10, w1
  4286b8:	cbz	x10, 4286d0 <parse_token+0x4420>
  4286bc:	ldr	x8, [sp, #5504]
  4286c0:	ldr	x0, [x8, #3776]
  4286c4:	add	x1, sp, #0x2, lsl #12
  4286c8:	add	x1, x1, #0x4e0
  4286cc:	bl	40a860 <sd_device_get_sysname@plt>
  4286d0:	ldr	w0, [sp, #9428]
  4286d4:	ldr	w1, [sp, #9424]
  4286d8:	ldr	x8, [sp, #5504]
  4286dc:	ldr	x9, [x8, #3784]
  4286e0:	mov	x10, xzr
  4286e4:	cmp	x9, #0x0
  4286e8:	ldr	x9, [sp, #5496]
  4286ec:	csel	x5, x9, x10, ne  // ne = any
  4286f0:	ldr	x6, [x8, #3784]
  4286f4:	ldr	x10, [x8, #3800]
  4286f8:	str	w0, [sp, #3548]
  4286fc:	mov	x0, x10
  428700:	str	w1, [sp, #3544]
  428704:	str	x5, [sp, #3536]
  428708:	str	x6, [sp, #3528]
  42870c:	bl	424274 <strna>
  428710:	ldr	x8, [sp, #5504]
  428714:	ldr	x9, [x8, #3808]
  428718:	str	x0, [sp, #3520]
  42871c:	cbz	x9, 428734 <parse_token+0x4484>
  428720:	ldr	x8, [sp, #5504]
  428724:	ldr	x9, [x8, #3808]
  428728:	ldr	w10, [x9, #8]
  42872c:	str	w10, [sp, #3516]
  428730:	b	42873c <parse_token+0x448c>
  428734:	mov	w8, wzr
  428738:	str	w8, [sp, #3516]
  42873c:	ldr	w8, [sp, #3516]
  428740:	ldr	x9, [sp, #5512]
  428744:	ldr	x10, [x9, #1864]
  428748:	ldr	w0, [sp, #3548]
  42874c:	ldr	w1, [sp, #3544]
  428750:	ldr	x2, [sp, #5488]
  428754:	mov	w3, #0x2ac                 	// #684
  428758:	ldr	x4, [sp, #5480]
  42875c:	ldr	x5, [sp, #3536]
  428760:	ldr	x6, [sp, #3528]
  428764:	mov	x11, xzr
  428768:	mov	x7, x11
  42876c:	mov	x12, sp
  428770:	str	x11, [x12]
  428774:	mov	x11, sp
  428778:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42877c:	add	x12, x12, #0xb4e
  428780:	str	x12, [x11, #8]
  428784:	mov	x11, sp
  428788:	ldr	x12, [sp, #3520]
  42878c:	str	x12, [x11, #16]
  428790:	mov	x11, sp
  428794:	str	w8, [x11, #24]
  428798:	mov	x11, sp
  42879c:	str	x10, [x11, #32]
  4287a0:	bl	40a870 <log_object_internal@plt>
  4287a4:	str	w0, [sp, #9420]
  4287a8:	ldr	w8, [sp, #9420]
  4287ac:	str	w8, [sp, #9452]
  4287b0:	mov	w8, #0x4                   	// #4
  4287b4:	stur	w8, [x29, #-36]
  4287b8:	ldr	x8, [sp, #5512]
  4287bc:	ldrb	w9, [x8, #1839]
  4287c0:	tbnz	w9, #0, 428804 <parse_token+0x4554>
  4287c4:	ldr	x8, [sp, #5512]
  4287c8:	ldr	x0, [x8, #1872]
  4287cc:	ldr	x1, [x8, #1864]
  4287d0:	ldr	x2, [x8, #1840]
  4287d4:	mov	w9, wzr
  4287d8:	and	w3, w9, #0x1
  4287dc:	bl	430d00 <check_value_format_and_warn>
  4287e0:	ldr	x8, [sp, #5512]
  4287e4:	ldr	x0, [x8, #1824]
  4287e8:	ldur	w2, [x29, #-36]
  4287ec:	ldr	x3, [x8, #1840]
  4287f0:	ldr	x4, [x8, #1856]
  4287f4:	mov	w1, #0x2c                  	// #44
  4287f8:	bl	430504 <rule_line_add_token>
  4287fc:	stur	w0, [x29, #-68]
  428800:	b	428824 <parse_token+0x4574>
  428804:	ldr	x8, [sp, #5512]
  428808:	ldr	x0, [x8, #1824]
  42880c:	ldur	w2, [x29, #-36]
  428810:	ldr	x3, [x8, #1840]
  428814:	ldr	x4, [x8, #1856]
  428818:	mov	w1, #0xb                   	// #11
  42881c:	bl	430504 <rule_line_add_token>
  428820:	stur	w0, [x29, #-68]
  428824:	b	4300c4 <parse_token+0xbe14>
  428828:	ldr	x8, [sp, #5512]
  42882c:	ldr	x0, [x8, #1864]
  428830:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  428834:	add	x1, x1, #0xba6
  428838:	bl	40aa20 <strcmp@plt>
  42883c:	cbnz	w0, 428c80 <parse_token+0x49d0>
  428840:	ldr	x8, [sp, #5512]
  428844:	ldr	x9, [x8, #1856]
  428848:	cbz	x9, 428a4c <parse_token+0x479c>
  42884c:	ldr	x8, [sp, #5512]
  428850:	ldr	x9, [x8, #1872]
  428854:	ldr	x10, [sp, #5504]
  428858:	str	x9, [x10, #3752]
  42885c:	ldr	x9, [x10, #3752]
  428860:	cbz	x9, 428878 <parse_token+0x45c8>
  428864:	ldr	x8, [sp, #5504]
  428868:	ldr	x9, [x8, #3752]
  42886c:	ldr	x9, [x9, #32]
  428870:	str	x9, [sp, #3504]
  428874:	b	428880 <parse_token+0x45d0>
  428878:	mov	x8, xzr
  42887c:	str	x8, [sp, #3504]
  428880:	ldr	x8, [sp, #3504]
  428884:	ldr	x9, [sp, #5504]
  428888:	str	x8, [x9, #3744]
  42888c:	ldr	x8, [x9, #3744]
  428890:	cbz	x8, 4288a8 <parse_token+0x45f8>
  428894:	ldr	x8, [sp, #5504]
  428898:	ldr	x9, [x8, #3744]
  42889c:	ldr	x9, [x9, #8]
  4288a0:	str	x9, [sp, #3496]
  4288a4:	b	4288b0 <parse_token+0x4600>
  4288a8:	mov	x8, xzr
  4288ac:	str	x8, [sp, #3496]
  4288b0:	ldr	x8, [sp, #3496]
  4288b4:	ldr	x9, [sp, #5504]
  4288b8:	str	x8, [x9, #3736]
  4288bc:	ldr	x8, [x9, #3744]
  4288c0:	cbz	x8, 4288d8 <parse_token+0x4628>
  4288c4:	ldr	x8, [sp, #5504]
  4288c8:	ldr	x9, [x8, #3744]
  4288cc:	ldr	x9, [x9]
  4288d0:	str	x9, [sp, #3488]
  4288d4:	b	4288e0 <parse_token+0x4630>
  4288d8:	mov	x8, xzr
  4288dc:	str	x8, [sp, #3488]
  4288e0:	ldr	x8, [sp, #3488]
  4288e4:	ldr	x9, [sp, #5504]
  4288e8:	str	x8, [x9, #3728]
  4288ec:	mov	x8, xzr
  4288f0:	str	x8, [x9, #3712]
  4288f4:	str	x8, [x9, #3704]
  4288f8:	mov	w10, #0x3                   	// #3
  4288fc:	str	w10, [sp, #9356]
  428900:	mov	w10, #0x16                  	// #22
  428904:	movk	w10, #0x4000, lsl #16
  428908:	str	w10, [sp, #9352]
  42890c:	ldr	x8, [x9, #3704]
  428910:	cbz	x8, 428958 <parse_token+0x46a8>
  428914:	mov	w0, #0x1                   	// #1
  428918:	bl	40a3f0 <log_get_max_level_realm@plt>
  42891c:	ldr	w8, [sp, #9356]
  428920:	cmp	w0, w8
  428924:	cset	w8, ge  // ge = tcont
  428928:	mov	w9, #0x1                   	// #1
  42892c:	eor	w8, w8, #0x1
  428930:	eor	w8, w8, w9
  428934:	and	w8, w8, #0x1
  428938:	mov	w1, w8
  42893c:	sxtw	x10, w1
  428940:	cbz	x10, 428958 <parse_token+0x46a8>
  428944:	ldr	x8, [sp, #5504]
  428948:	ldr	x0, [x8, #3704]
  42894c:	add	x1, sp, #0x2, lsl #12
  428950:	add	x1, x1, #0x498
  428954:	bl	40a860 <sd_device_get_sysname@plt>
  428958:	ldr	w0, [sp, #9356]
  42895c:	ldr	w1, [sp, #9352]
  428960:	ldr	x8, [sp, #5504]
  428964:	ldr	x9, [x8, #3712]
  428968:	mov	x10, xzr
  42896c:	cmp	x9, #0x0
  428970:	ldr	x9, [sp, #5496]
  428974:	csel	x5, x9, x10, ne  // ne = any
  428978:	ldr	x6, [x8, #3712]
  42897c:	ldr	x10, [x8, #3728]
  428980:	str	w0, [sp, #3484]
  428984:	mov	x0, x10
  428988:	str	w1, [sp, #3480]
  42898c:	str	x5, [sp, #3472]
  428990:	str	x6, [sp, #3464]
  428994:	bl	424274 <strna>
  428998:	ldr	x8, [sp, #5504]
  42899c:	ldr	x9, [x8, #3736]
  4289a0:	str	x0, [sp, #3456]
  4289a4:	cbz	x9, 4289bc <parse_token+0x470c>
  4289a8:	ldr	x8, [sp, #5504]
  4289ac:	ldr	x9, [x8, #3736]
  4289b0:	ldr	w10, [x9, #8]
  4289b4:	str	w10, [sp, #3452]
  4289b8:	b	4289c4 <parse_token+0x4714>
  4289bc:	mov	w8, wzr
  4289c0:	str	w8, [sp, #3452]
  4289c4:	ldr	w8, [sp, #3452]
  4289c8:	ldr	x9, [sp, #5512]
  4289cc:	ldr	x10, [x9, #1864]
  4289d0:	ldr	w0, [sp, #3484]
  4289d4:	ldr	w1, [sp, #3480]
  4289d8:	ldr	x2, [sp, #5488]
  4289dc:	mov	w3, #0x2b7                 	// #695
  4289e0:	ldr	x4, [sp, #5480]
  4289e4:	ldr	x5, [sp, #3472]
  4289e8:	ldr	x6, [sp, #3464]
  4289ec:	mov	x11, xzr
  4289f0:	mov	x7, x11
  4289f4:	mov	x12, sp
  4289f8:	str	x11, [x12]
  4289fc:	mov	x11, sp
  428a00:	ldr	x12, [sp, #5472]
  428a04:	str	x12, [x11, #8]
  428a08:	mov	x11, sp
  428a0c:	ldr	x13, [sp, #3456]
  428a10:	str	x13, [x11, #16]
  428a14:	mov	x11, sp
  428a18:	str	w8, [x11, #24]
  428a1c:	mov	x11, sp
  428a20:	ldr	x14, [sp, #5456]
  428a24:	str	x14, [x11, #32]
  428a28:	mov	x11, sp
  428a2c:	str	x10, [x11, #40]
  428a30:	bl	40a870 <log_object_internal@plt>
  428a34:	str	w0, [sp, #9348]
  428a38:	ldr	w8, [sp, #9348]
  428a3c:	str	w8, [sp, #9380]
  428a40:	ldr	w8, [sp, #9380]
  428a44:	stur	w8, [x29, #-4]
  428a48:	b	4300f8 <parse_token+0xbe48>
  428a4c:	ldr	x8, [sp, #5512]
  428a50:	ldrb	w9, [x8, #1839]
  428a54:	tbnz	w9, #0, 428c58 <parse_token+0x49a8>
  428a58:	ldr	x8, [sp, #5512]
  428a5c:	ldr	x9, [x8, #1872]
  428a60:	ldr	x10, [sp, #5504]
  428a64:	str	x9, [x10, #3680]
  428a68:	ldr	x9, [x10, #3680]
  428a6c:	cbz	x9, 428a84 <parse_token+0x47d4>
  428a70:	ldr	x8, [sp, #5504]
  428a74:	ldr	x9, [x8, #3680]
  428a78:	ldr	x9, [x9, #32]
  428a7c:	str	x9, [sp, #3440]
  428a80:	b	428a8c <parse_token+0x47dc>
  428a84:	mov	x8, xzr
  428a88:	str	x8, [sp, #3440]
  428a8c:	ldr	x8, [sp, #3440]
  428a90:	ldr	x9, [sp, #5504]
  428a94:	str	x8, [x9, #3672]
  428a98:	ldr	x8, [x9, #3672]
  428a9c:	cbz	x8, 428ab4 <parse_token+0x4804>
  428aa0:	ldr	x8, [sp, #5504]
  428aa4:	ldr	x9, [x8, #3672]
  428aa8:	ldr	x9, [x9, #8]
  428aac:	str	x9, [sp, #3432]
  428ab0:	b	428abc <parse_token+0x480c>
  428ab4:	mov	x8, xzr
  428ab8:	str	x8, [sp, #3432]
  428abc:	ldr	x8, [sp, #3432]
  428ac0:	ldr	x9, [sp, #5504]
  428ac4:	str	x8, [x9, #3664]
  428ac8:	ldr	x8, [x9, #3672]
  428acc:	cbz	x8, 428ae4 <parse_token+0x4834>
  428ad0:	ldr	x8, [sp, #5504]
  428ad4:	ldr	x9, [x8, #3672]
  428ad8:	ldr	x9, [x9]
  428adc:	str	x9, [sp, #3424]
  428ae0:	b	428aec <parse_token+0x483c>
  428ae4:	mov	x8, xzr
  428ae8:	str	x8, [sp, #3424]
  428aec:	ldr	x8, [sp, #3424]
  428af0:	ldr	x9, [sp, #5504]
  428af4:	str	x8, [x9, #3656]
  428af8:	mov	x8, xzr
  428afc:	str	x8, [x9, #3640]
  428b00:	str	x8, [x9, #3632]
  428b04:	mov	w10, #0x3                   	// #3
  428b08:	str	w10, [sp, #9284]
  428b0c:	mov	w10, #0x16                  	// #22
  428b10:	movk	w10, #0x4000, lsl #16
  428b14:	str	w10, [sp, #9280]
  428b18:	ldr	x8, [x9, #3632]
  428b1c:	cbz	x8, 428b64 <parse_token+0x48b4>
  428b20:	mov	w0, #0x1                   	// #1
  428b24:	bl	40a3f0 <log_get_max_level_realm@plt>
  428b28:	ldr	w8, [sp, #9284]
  428b2c:	cmp	w0, w8
  428b30:	cset	w8, ge  // ge = tcont
  428b34:	mov	w9, #0x1                   	// #1
  428b38:	eor	w8, w8, #0x1
  428b3c:	eor	w8, w8, w9
  428b40:	and	w8, w8, #0x1
  428b44:	mov	w1, w8
  428b48:	sxtw	x10, w1
  428b4c:	cbz	x10, 428b64 <parse_token+0x48b4>
  428b50:	ldr	x8, [sp, #5504]
  428b54:	ldr	x0, [x8, #3632]
  428b58:	add	x1, sp, #0x2, lsl #12
  428b5c:	add	x1, x1, #0x450
  428b60:	bl	40a860 <sd_device_get_sysname@plt>
  428b64:	ldr	w0, [sp, #9284]
  428b68:	ldr	w1, [sp, #9280]
  428b6c:	ldr	x8, [sp, #5504]
  428b70:	ldr	x9, [x8, #3640]
  428b74:	mov	x10, xzr
  428b78:	cmp	x9, #0x0
  428b7c:	ldr	x9, [sp, #5496]
  428b80:	csel	x5, x9, x10, ne  // ne = any
  428b84:	ldr	x6, [x8, #3640]
  428b88:	ldr	x10, [x8, #3656]
  428b8c:	str	w0, [sp, #3420]
  428b90:	mov	x0, x10
  428b94:	str	w1, [sp, #3416]
  428b98:	str	x5, [sp, #3408]
  428b9c:	str	x6, [sp, #3400]
  428ba0:	bl	424274 <strna>
  428ba4:	ldr	x8, [sp, #5504]
  428ba8:	ldr	x9, [x8, #3664]
  428bac:	str	x0, [sp, #3392]
  428bb0:	cbz	x9, 428bc8 <parse_token+0x4918>
  428bb4:	ldr	x8, [sp, #5504]
  428bb8:	ldr	x9, [x8, #3664]
  428bbc:	ldr	w10, [x9, #8]
  428bc0:	str	w10, [sp, #3388]
  428bc4:	b	428bd0 <parse_token+0x4920>
  428bc8:	mov	w8, wzr
  428bcc:	str	w8, [sp, #3388]
  428bd0:	ldr	w8, [sp, #3388]
  428bd4:	ldr	x9, [sp, #5512]
  428bd8:	ldr	x10, [x9, #1864]
  428bdc:	ldr	w0, [sp, #3420]
  428be0:	ldr	w1, [sp, #3416]
  428be4:	ldr	x2, [sp, #5488]
  428be8:	mov	w3, #0x2b9                 	// #697
  428bec:	ldr	x4, [sp, #5480]
  428bf0:	ldr	x5, [sp, #3408]
  428bf4:	ldr	x6, [sp, #3400]
  428bf8:	mov	x11, xzr
  428bfc:	mov	x7, x11
  428c00:	mov	x12, sp
  428c04:	str	x11, [x12]
  428c08:	mov	x11, sp
  428c0c:	ldr	x12, [sp, #5472]
  428c10:	str	x12, [x11, #8]
  428c14:	mov	x11, sp
  428c18:	ldr	x13, [sp, #3392]
  428c1c:	str	x13, [x11, #16]
  428c20:	mov	x11, sp
  428c24:	str	w8, [x11, #24]
  428c28:	mov	x11, sp
  428c2c:	ldr	x14, [sp, #5464]
  428c30:	str	x14, [x11, #32]
  428c34:	mov	x11, sp
  428c38:	str	x10, [x11, #40]
  428c3c:	bl	40a870 <log_object_internal@plt>
  428c40:	str	w0, [sp, #9276]
  428c44:	ldr	w8, [sp, #9276]
  428c48:	str	w8, [sp, #9308]
  428c4c:	ldr	w8, [sp, #9308]
  428c50:	stur	w8, [x29, #-4]
  428c54:	b	4300f8 <parse_token+0xbe48>
  428c58:	ldr	x8, [sp, #5512]
  428c5c:	ldr	x0, [x8, #1824]
  428c60:	ldur	w2, [x29, #-36]
  428c64:	ldr	x3, [x8, #1840]
  428c68:	mov	w1, #0xc                   	// #12
  428c6c:	mov	x9, xzr
  428c70:	mov	x4, x9
  428c74:	bl	430504 <rule_line_add_token>
  428c78:	stur	w0, [x29, #-68]
  428c7c:	b	4300c4 <parse_token+0xbe14>
  428c80:	ldr	x8, [sp, #5512]
  428c84:	ldr	x0, [x8, #1864]
  428c88:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  428c8c:	add	x1, x1, #0xbae
  428c90:	bl	40aa20 <strcmp@plt>
  428c94:	cbnz	w0, 4290d8 <parse_token+0x4e28>
  428c98:	ldr	x8, [sp, #5512]
  428c9c:	ldr	x9, [x8, #1856]
  428ca0:	cbz	x9, 428ea4 <parse_token+0x4bf4>
  428ca4:	ldr	x8, [sp, #5512]
  428ca8:	ldr	x9, [x8, #1872]
  428cac:	ldr	x10, [sp, #5504]
  428cb0:	str	x9, [x10, #3608]
  428cb4:	ldr	x9, [x10, #3608]
  428cb8:	cbz	x9, 428cd0 <parse_token+0x4a20>
  428cbc:	ldr	x8, [sp, #5504]
  428cc0:	ldr	x9, [x8, #3608]
  428cc4:	ldr	x9, [x9, #32]
  428cc8:	str	x9, [sp, #3376]
  428ccc:	b	428cd8 <parse_token+0x4a28>
  428cd0:	mov	x8, xzr
  428cd4:	str	x8, [sp, #3376]
  428cd8:	ldr	x8, [sp, #3376]
  428cdc:	ldr	x9, [sp, #5504]
  428ce0:	str	x8, [x9, #3600]
  428ce4:	ldr	x8, [x9, #3600]
  428ce8:	cbz	x8, 428d00 <parse_token+0x4a50>
  428cec:	ldr	x8, [sp, #5504]
  428cf0:	ldr	x9, [x8, #3600]
  428cf4:	ldr	x9, [x9, #8]
  428cf8:	str	x9, [sp, #3368]
  428cfc:	b	428d08 <parse_token+0x4a58>
  428d00:	mov	x8, xzr
  428d04:	str	x8, [sp, #3368]
  428d08:	ldr	x8, [sp, #3368]
  428d0c:	ldr	x9, [sp, #5504]
  428d10:	str	x8, [x9, #3592]
  428d14:	ldr	x8, [x9, #3600]
  428d18:	cbz	x8, 428d30 <parse_token+0x4a80>
  428d1c:	ldr	x8, [sp, #5504]
  428d20:	ldr	x9, [x8, #3600]
  428d24:	ldr	x9, [x9]
  428d28:	str	x9, [sp, #3360]
  428d2c:	b	428d38 <parse_token+0x4a88>
  428d30:	mov	x8, xzr
  428d34:	str	x8, [sp, #3360]
  428d38:	ldr	x8, [sp, #3360]
  428d3c:	ldr	x9, [sp, #5504]
  428d40:	str	x8, [x9, #3584]
  428d44:	mov	x8, xzr
  428d48:	str	x8, [x9, #3568]
  428d4c:	str	x8, [x9, #3560]
  428d50:	mov	w10, #0x3                   	// #3
  428d54:	str	w10, [sp, #9212]
  428d58:	mov	w10, #0x16                  	// #22
  428d5c:	movk	w10, #0x4000, lsl #16
  428d60:	str	w10, [sp, #9208]
  428d64:	ldr	x8, [x9, #3560]
  428d68:	cbz	x8, 428db0 <parse_token+0x4b00>
  428d6c:	mov	w0, #0x1                   	// #1
  428d70:	bl	40a3f0 <log_get_max_level_realm@plt>
  428d74:	ldr	w8, [sp, #9212]
  428d78:	cmp	w0, w8
  428d7c:	cset	w8, ge  // ge = tcont
  428d80:	mov	w9, #0x1                   	// #1
  428d84:	eor	w8, w8, #0x1
  428d88:	eor	w8, w8, w9
  428d8c:	and	w8, w8, #0x1
  428d90:	mov	w1, w8
  428d94:	sxtw	x10, w1
  428d98:	cbz	x10, 428db0 <parse_token+0x4b00>
  428d9c:	ldr	x8, [sp, #5504]
  428da0:	ldr	x0, [x8, #3560]
  428da4:	add	x1, sp, #0x2, lsl #12
  428da8:	add	x1, x1, #0x408
  428dac:	bl	40a860 <sd_device_get_sysname@plt>
  428db0:	ldr	w0, [sp, #9212]
  428db4:	ldr	w1, [sp, #9208]
  428db8:	ldr	x8, [sp, #5504]
  428dbc:	ldr	x9, [x8, #3568]
  428dc0:	mov	x10, xzr
  428dc4:	cmp	x9, #0x0
  428dc8:	ldr	x9, [sp, #5496]
  428dcc:	csel	x5, x9, x10, ne  // ne = any
  428dd0:	ldr	x6, [x8, #3568]
  428dd4:	ldr	x10, [x8, #3584]
  428dd8:	str	w0, [sp, #3356]
  428ddc:	mov	x0, x10
  428de0:	str	w1, [sp, #3352]
  428de4:	str	x5, [sp, #3344]
  428de8:	str	x6, [sp, #3336]
  428dec:	bl	424274 <strna>
  428df0:	ldr	x8, [sp, #5504]
  428df4:	ldr	x9, [x8, #3592]
  428df8:	str	x0, [sp, #3328]
  428dfc:	cbz	x9, 428e14 <parse_token+0x4b64>
  428e00:	ldr	x8, [sp, #5504]
  428e04:	ldr	x9, [x8, #3592]
  428e08:	ldr	w10, [x9, #8]
  428e0c:	str	w10, [sp, #3324]
  428e10:	b	428e1c <parse_token+0x4b6c>
  428e14:	mov	w8, wzr
  428e18:	str	w8, [sp, #3324]
  428e1c:	ldr	w8, [sp, #3324]
  428e20:	ldr	x9, [sp, #5512]
  428e24:	ldr	x10, [x9, #1864]
  428e28:	ldr	w0, [sp, #3356]
  428e2c:	ldr	w1, [sp, #3352]
  428e30:	ldr	x2, [sp, #5488]
  428e34:	mov	w3, #0x2be                 	// #702
  428e38:	ldr	x4, [sp, #5480]
  428e3c:	ldr	x5, [sp, #3344]
  428e40:	ldr	x6, [sp, #3336]
  428e44:	mov	x11, xzr
  428e48:	mov	x7, x11
  428e4c:	mov	x12, sp
  428e50:	str	x11, [x12]
  428e54:	mov	x11, sp
  428e58:	ldr	x12, [sp, #5472]
  428e5c:	str	x12, [x11, #8]
  428e60:	mov	x11, sp
  428e64:	ldr	x13, [sp, #3328]
  428e68:	str	x13, [x11, #16]
  428e6c:	mov	x11, sp
  428e70:	str	w8, [x11, #24]
  428e74:	mov	x11, sp
  428e78:	ldr	x14, [sp, #5456]
  428e7c:	str	x14, [x11, #32]
  428e80:	mov	x11, sp
  428e84:	str	x10, [x11, #40]
  428e88:	bl	40a870 <log_object_internal@plt>
  428e8c:	str	w0, [sp, #9204]
  428e90:	ldr	w8, [sp, #9204]
  428e94:	str	w8, [sp, #9236]
  428e98:	ldr	w8, [sp, #9236]
  428e9c:	stur	w8, [x29, #-4]
  428ea0:	b	4300f8 <parse_token+0xbe48>
  428ea4:	ldr	x8, [sp, #5512]
  428ea8:	ldrb	w9, [x8, #1839]
  428eac:	tbnz	w9, #0, 4290b0 <parse_token+0x4e00>
  428eb0:	ldr	x8, [sp, #5512]
  428eb4:	ldr	x9, [x8, #1872]
  428eb8:	ldr	x10, [sp, #5504]
  428ebc:	str	x9, [x10, #3536]
  428ec0:	ldr	x9, [x10, #3536]
  428ec4:	cbz	x9, 428edc <parse_token+0x4c2c>
  428ec8:	ldr	x8, [sp, #5504]
  428ecc:	ldr	x9, [x8, #3536]
  428ed0:	ldr	x9, [x9, #32]
  428ed4:	str	x9, [sp, #3312]
  428ed8:	b	428ee4 <parse_token+0x4c34>
  428edc:	mov	x8, xzr
  428ee0:	str	x8, [sp, #3312]
  428ee4:	ldr	x8, [sp, #3312]
  428ee8:	ldr	x9, [sp, #5504]
  428eec:	str	x8, [x9, #3528]
  428ef0:	ldr	x8, [x9, #3528]
  428ef4:	cbz	x8, 428f0c <parse_token+0x4c5c>
  428ef8:	ldr	x8, [sp, #5504]
  428efc:	ldr	x9, [x8, #3528]
  428f00:	ldr	x9, [x9, #8]
  428f04:	str	x9, [sp, #3304]
  428f08:	b	428f14 <parse_token+0x4c64>
  428f0c:	mov	x8, xzr
  428f10:	str	x8, [sp, #3304]
  428f14:	ldr	x8, [sp, #3304]
  428f18:	ldr	x9, [sp, #5504]
  428f1c:	str	x8, [x9, #3520]
  428f20:	ldr	x8, [x9, #3528]
  428f24:	cbz	x8, 428f3c <parse_token+0x4c8c>
  428f28:	ldr	x8, [sp, #5504]
  428f2c:	ldr	x9, [x8, #3528]
  428f30:	ldr	x9, [x9]
  428f34:	str	x9, [sp, #3296]
  428f38:	b	428f44 <parse_token+0x4c94>
  428f3c:	mov	x8, xzr
  428f40:	str	x8, [sp, #3296]
  428f44:	ldr	x8, [sp, #3296]
  428f48:	ldr	x9, [sp, #5504]
  428f4c:	str	x8, [x9, #3512]
  428f50:	mov	x8, xzr
  428f54:	str	x8, [x9, #3496]
  428f58:	str	x8, [x9, #3488]
  428f5c:	mov	w10, #0x3                   	// #3
  428f60:	str	w10, [sp, #9140]
  428f64:	mov	w10, #0x16                  	// #22
  428f68:	movk	w10, #0x4000, lsl #16
  428f6c:	str	w10, [sp, #9136]
  428f70:	ldr	x8, [x9, #3488]
  428f74:	cbz	x8, 428fbc <parse_token+0x4d0c>
  428f78:	mov	w0, #0x1                   	// #1
  428f7c:	bl	40a3f0 <log_get_max_level_realm@plt>
  428f80:	ldr	w8, [sp, #9140]
  428f84:	cmp	w0, w8
  428f88:	cset	w8, ge  // ge = tcont
  428f8c:	mov	w9, #0x1                   	// #1
  428f90:	eor	w8, w8, #0x1
  428f94:	eor	w8, w8, w9
  428f98:	and	w8, w8, #0x1
  428f9c:	mov	w1, w8
  428fa0:	sxtw	x10, w1
  428fa4:	cbz	x10, 428fbc <parse_token+0x4d0c>
  428fa8:	ldr	x8, [sp, #5504]
  428fac:	ldr	x0, [x8, #3488]
  428fb0:	add	x1, sp, #0x2, lsl #12
  428fb4:	add	x1, x1, #0x3c0
  428fb8:	bl	40a860 <sd_device_get_sysname@plt>
  428fbc:	ldr	w0, [sp, #9140]
  428fc0:	ldr	w1, [sp, #9136]
  428fc4:	ldr	x8, [sp, #5504]
  428fc8:	ldr	x9, [x8, #3496]
  428fcc:	mov	x10, xzr
  428fd0:	cmp	x9, #0x0
  428fd4:	ldr	x9, [sp, #5496]
  428fd8:	csel	x5, x9, x10, ne  // ne = any
  428fdc:	ldr	x6, [x8, #3496]
  428fe0:	ldr	x10, [x8, #3512]
  428fe4:	str	w0, [sp, #3292]
  428fe8:	mov	x0, x10
  428fec:	str	w1, [sp, #3288]
  428ff0:	str	x5, [sp, #3280]
  428ff4:	str	x6, [sp, #3272]
  428ff8:	bl	424274 <strna>
  428ffc:	ldr	x8, [sp, #5504]
  429000:	ldr	x9, [x8, #3520]
  429004:	str	x0, [sp, #3264]
  429008:	cbz	x9, 429020 <parse_token+0x4d70>
  42900c:	ldr	x8, [sp, #5504]
  429010:	ldr	x9, [x8, #3520]
  429014:	ldr	w10, [x9, #8]
  429018:	str	w10, [sp, #3260]
  42901c:	b	429028 <parse_token+0x4d78>
  429020:	mov	w8, wzr
  429024:	str	w8, [sp, #3260]
  429028:	ldr	w8, [sp, #3260]
  42902c:	ldr	x9, [sp, #5512]
  429030:	ldr	x10, [x9, #1864]
  429034:	ldr	w0, [sp, #3292]
  429038:	ldr	w1, [sp, #3288]
  42903c:	ldr	x2, [sp, #5488]
  429040:	mov	w3, #0x2c0                 	// #704
  429044:	ldr	x4, [sp, #5480]
  429048:	ldr	x5, [sp, #3280]
  42904c:	ldr	x6, [sp, #3272]
  429050:	mov	x11, xzr
  429054:	mov	x7, x11
  429058:	mov	x12, sp
  42905c:	str	x11, [x12]
  429060:	mov	x11, sp
  429064:	ldr	x12, [sp, #5472]
  429068:	str	x12, [x11, #8]
  42906c:	mov	x11, sp
  429070:	ldr	x13, [sp, #3264]
  429074:	str	x13, [x11, #16]
  429078:	mov	x11, sp
  42907c:	str	w8, [x11, #24]
  429080:	mov	x11, sp
  429084:	ldr	x14, [sp, #5464]
  429088:	str	x14, [x11, #32]
  42908c:	mov	x11, sp
  429090:	str	x10, [x11, #40]
  429094:	bl	40a870 <log_object_internal@plt>
  429098:	str	w0, [sp, #9132]
  42909c:	ldr	w8, [sp, #9132]
  4290a0:	str	w8, [sp, #9164]
  4290a4:	ldr	w8, [sp, #9164]
  4290a8:	stur	w8, [x29, #-4]
  4290ac:	b	4300f8 <parse_token+0xbe48>
  4290b0:	ldr	x8, [sp, #5512]
  4290b4:	ldr	x0, [x8, #1824]
  4290b8:	ldur	w2, [x29, #-36]
  4290bc:	ldr	x3, [x8, #1840]
  4290c0:	mov	w1, #0xd                   	// #13
  4290c4:	mov	x9, xzr
  4290c8:	mov	x4, x9
  4290cc:	bl	430504 <rule_line_add_token>
  4290d0:	stur	w0, [x29, #-68]
  4290d4:	b	4300c4 <parse_token+0xbe14>
  4290d8:	ldr	x8, [sp, #5512]
  4290dc:	ldr	x0, [x8, #1864]
  4290e0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4290e4:	add	x1, x1, #0xbb9
  4290e8:	bl	40aa20 <strcmp@plt>
  4290ec:	cbnz	w0, 429530 <parse_token+0x5280>
  4290f0:	ldr	x8, [sp, #5512]
  4290f4:	ldr	x9, [x8, #1856]
  4290f8:	cbz	x9, 4292fc <parse_token+0x504c>
  4290fc:	ldr	x8, [sp, #5512]
  429100:	ldr	x9, [x8, #1872]
  429104:	ldr	x10, [sp, #5504]
  429108:	str	x9, [x10, #3464]
  42910c:	ldr	x9, [x10, #3464]
  429110:	cbz	x9, 429128 <parse_token+0x4e78>
  429114:	ldr	x8, [sp, #5504]
  429118:	ldr	x9, [x8, #3464]
  42911c:	ldr	x9, [x9, #32]
  429120:	str	x9, [sp, #3248]
  429124:	b	429130 <parse_token+0x4e80>
  429128:	mov	x8, xzr
  42912c:	str	x8, [sp, #3248]
  429130:	ldr	x8, [sp, #3248]
  429134:	ldr	x9, [sp, #5504]
  429138:	str	x8, [x9, #3456]
  42913c:	ldr	x8, [x9, #3456]
  429140:	cbz	x8, 429158 <parse_token+0x4ea8>
  429144:	ldr	x8, [sp, #5504]
  429148:	ldr	x9, [x8, #3456]
  42914c:	ldr	x9, [x9, #8]
  429150:	str	x9, [sp, #3240]
  429154:	b	429160 <parse_token+0x4eb0>
  429158:	mov	x8, xzr
  42915c:	str	x8, [sp, #3240]
  429160:	ldr	x8, [sp, #3240]
  429164:	ldr	x9, [sp, #5504]
  429168:	str	x8, [x9, #3448]
  42916c:	ldr	x8, [x9, #3456]
  429170:	cbz	x8, 429188 <parse_token+0x4ed8>
  429174:	ldr	x8, [sp, #5504]
  429178:	ldr	x9, [x8, #3456]
  42917c:	ldr	x9, [x9]
  429180:	str	x9, [sp, #3232]
  429184:	b	429190 <parse_token+0x4ee0>
  429188:	mov	x8, xzr
  42918c:	str	x8, [sp, #3232]
  429190:	ldr	x8, [sp, #3232]
  429194:	ldr	x9, [sp, #5504]
  429198:	str	x8, [x9, #3440]
  42919c:	mov	x8, xzr
  4291a0:	str	x8, [x9, #3424]
  4291a4:	str	x8, [x9, #3416]
  4291a8:	mov	w10, #0x3                   	// #3
  4291ac:	str	w10, [sp, #9068]
  4291b0:	mov	w10, #0x16                  	// #22
  4291b4:	movk	w10, #0x4000, lsl #16
  4291b8:	str	w10, [sp, #9064]
  4291bc:	ldr	x8, [x9, #3416]
  4291c0:	cbz	x8, 429208 <parse_token+0x4f58>
  4291c4:	mov	w0, #0x1                   	// #1
  4291c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4291cc:	ldr	w8, [sp, #9068]
  4291d0:	cmp	w0, w8
  4291d4:	cset	w8, ge  // ge = tcont
  4291d8:	mov	w9, #0x1                   	// #1
  4291dc:	eor	w8, w8, #0x1
  4291e0:	eor	w8, w8, w9
  4291e4:	and	w8, w8, #0x1
  4291e8:	mov	w1, w8
  4291ec:	sxtw	x10, w1
  4291f0:	cbz	x10, 429208 <parse_token+0x4f58>
  4291f4:	ldr	x8, [sp, #5504]
  4291f8:	ldr	x0, [x8, #3416]
  4291fc:	add	x1, sp, #0x2, lsl #12
  429200:	add	x1, x1, #0x378
  429204:	bl	40a860 <sd_device_get_sysname@plt>
  429208:	ldr	w0, [sp, #9068]
  42920c:	ldr	w1, [sp, #9064]
  429210:	ldr	x8, [sp, #5504]
  429214:	ldr	x9, [x8, #3424]
  429218:	mov	x10, xzr
  42921c:	cmp	x9, #0x0
  429220:	ldr	x9, [sp, #5496]
  429224:	csel	x5, x9, x10, ne  // ne = any
  429228:	ldr	x6, [x8, #3424]
  42922c:	ldr	x10, [x8, #3440]
  429230:	str	w0, [sp, #3228]
  429234:	mov	x0, x10
  429238:	str	w1, [sp, #3224]
  42923c:	str	x5, [sp, #3216]
  429240:	str	x6, [sp, #3208]
  429244:	bl	424274 <strna>
  429248:	ldr	x8, [sp, #5504]
  42924c:	ldr	x9, [x8, #3448]
  429250:	str	x0, [sp, #3200]
  429254:	cbz	x9, 42926c <parse_token+0x4fbc>
  429258:	ldr	x8, [sp, #5504]
  42925c:	ldr	x9, [x8, #3448]
  429260:	ldr	w10, [x9, #8]
  429264:	str	w10, [sp, #3196]
  429268:	b	429274 <parse_token+0x4fc4>
  42926c:	mov	w8, wzr
  429270:	str	w8, [sp, #3196]
  429274:	ldr	w8, [sp, #3196]
  429278:	ldr	x9, [sp, #5512]
  42927c:	ldr	x10, [x9, #1864]
  429280:	ldr	w0, [sp, #3228]
  429284:	ldr	w1, [sp, #3224]
  429288:	ldr	x2, [sp, #5488]
  42928c:	mov	w3, #0x2c5                 	// #709
  429290:	ldr	x4, [sp, #5480]
  429294:	ldr	x5, [sp, #3216]
  429298:	ldr	x6, [sp, #3208]
  42929c:	mov	x11, xzr
  4292a0:	mov	x7, x11
  4292a4:	mov	x12, sp
  4292a8:	str	x11, [x12]
  4292ac:	mov	x11, sp
  4292b0:	ldr	x12, [sp, #5472]
  4292b4:	str	x12, [x11, #8]
  4292b8:	mov	x11, sp
  4292bc:	ldr	x13, [sp, #3200]
  4292c0:	str	x13, [x11, #16]
  4292c4:	mov	x11, sp
  4292c8:	str	w8, [x11, #24]
  4292cc:	mov	x11, sp
  4292d0:	ldr	x14, [sp, #5456]
  4292d4:	str	x14, [x11, #32]
  4292d8:	mov	x11, sp
  4292dc:	str	x10, [x11, #40]
  4292e0:	bl	40a870 <log_object_internal@plt>
  4292e4:	str	w0, [sp, #9060]
  4292e8:	ldr	w8, [sp, #9060]
  4292ec:	str	w8, [sp, #9092]
  4292f0:	ldr	w8, [sp, #9092]
  4292f4:	stur	w8, [x29, #-4]
  4292f8:	b	4300f8 <parse_token+0xbe48>
  4292fc:	ldr	x8, [sp, #5512]
  429300:	ldrb	w9, [x8, #1839]
  429304:	tbnz	w9, #0, 429508 <parse_token+0x5258>
  429308:	ldr	x8, [sp, #5512]
  42930c:	ldr	x9, [x8, #1872]
  429310:	ldr	x10, [sp, #5504]
  429314:	str	x9, [x10, #3392]
  429318:	ldr	x9, [x10, #3392]
  42931c:	cbz	x9, 429334 <parse_token+0x5084>
  429320:	ldr	x8, [sp, #5504]
  429324:	ldr	x9, [x8, #3392]
  429328:	ldr	x9, [x9, #32]
  42932c:	str	x9, [sp, #3184]
  429330:	b	42933c <parse_token+0x508c>
  429334:	mov	x8, xzr
  429338:	str	x8, [sp, #3184]
  42933c:	ldr	x8, [sp, #3184]
  429340:	ldr	x9, [sp, #5504]
  429344:	str	x8, [x9, #3384]
  429348:	ldr	x8, [x9, #3384]
  42934c:	cbz	x8, 429364 <parse_token+0x50b4>
  429350:	ldr	x8, [sp, #5504]
  429354:	ldr	x9, [x8, #3384]
  429358:	ldr	x9, [x9, #8]
  42935c:	str	x9, [sp, #3176]
  429360:	b	42936c <parse_token+0x50bc>
  429364:	mov	x8, xzr
  429368:	str	x8, [sp, #3176]
  42936c:	ldr	x8, [sp, #3176]
  429370:	ldr	x9, [sp, #5504]
  429374:	str	x8, [x9, #3376]
  429378:	ldr	x8, [x9, #3384]
  42937c:	cbz	x8, 429394 <parse_token+0x50e4>
  429380:	ldr	x8, [sp, #5504]
  429384:	ldr	x9, [x8, #3384]
  429388:	ldr	x9, [x9]
  42938c:	str	x9, [sp, #3168]
  429390:	b	42939c <parse_token+0x50ec>
  429394:	mov	x8, xzr
  429398:	str	x8, [sp, #3168]
  42939c:	ldr	x8, [sp, #3168]
  4293a0:	ldr	x9, [sp, #5504]
  4293a4:	str	x8, [x9, #3368]
  4293a8:	mov	x8, xzr
  4293ac:	str	x8, [x9, #3352]
  4293b0:	str	x8, [x9, #3344]
  4293b4:	mov	w10, #0x3                   	// #3
  4293b8:	str	w10, [sp, #8996]
  4293bc:	mov	w10, #0x16                  	// #22
  4293c0:	movk	w10, #0x4000, lsl #16
  4293c4:	str	w10, [sp, #8992]
  4293c8:	ldr	x8, [x9, #3344]
  4293cc:	cbz	x8, 429414 <parse_token+0x5164>
  4293d0:	mov	w0, #0x1                   	// #1
  4293d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4293d8:	ldr	w8, [sp, #8996]
  4293dc:	cmp	w0, w8
  4293e0:	cset	w8, ge  // ge = tcont
  4293e4:	mov	w9, #0x1                   	// #1
  4293e8:	eor	w8, w8, #0x1
  4293ec:	eor	w8, w8, w9
  4293f0:	and	w8, w8, #0x1
  4293f4:	mov	w1, w8
  4293f8:	sxtw	x10, w1
  4293fc:	cbz	x10, 429414 <parse_token+0x5164>
  429400:	ldr	x8, [sp, #5504]
  429404:	ldr	x0, [x8, #3344]
  429408:	add	x1, sp, #0x2, lsl #12
  42940c:	add	x1, x1, #0x330
  429410:	bl	40a860 <sd_device_get_sysname@plt>
  429414:	ldr	w0, [sp, #8996]
  429418:	ldr	w1, [sp, #8992]
  42941c:	ldr	x8, [sp, #5504]
  429420:	ldr	x9, [x8, #3352]
  429424:	mov	x10, xzr
  429428:	cmp	x9, #0x0
  42942c:	ldr	x9, [sp, #5496]
  429430:	csel	x5, x9, x10, ne  // ne = any
  429434:	ldr	x6, [x8, #3352]
  429438:	ldr	x10, [x8, #3368]
  42943c:	str	w0, [sp, #3164]
  429440:	mov	x0, x10
  429444:	str	w1, [sp, #3160]
  429448:	str	x5, [sp, #3152]
  42944c:	str	x6, [sp, #3144]
  429450:	bl	424274 <strna>
  429454:	ldr	x8, [sp, #5504]
  429458:	ldr	x9, [x8, #3376]
  42945c:	str	x0, [sp, #3136]
  429460:	cbz	x9, 429478 <parse_token+0x51c8>
  429464:	ldr	x8, [sp, #5504]
  429468:	ldr	x9, [x8, #3376]
  42946c:	ldr	w10, [x9, #8]
  429470:	str	w10, [sp, #3132]
  429474:	b	429480 <parse_token+0x51d0>
  429478:	mov	w8, wzr
  42947c:	str	w8, [sp, #3132]
  429480:	ldr	w8, [sp, #3132]
  429484:	ldr	x9, [sp, #5512]
  429488:	ldr	x10, [x9, #1864]
  42948c:	ldr	w0, [sp, #3164]
  429490:	ldr	w1, [sp, #3160]
  429494:	ldr	x2, [sp, #5488]
  429498:	mov	w3, #0x2c7                 	// #711
  42949c:	ldr	x4, [sp, #5480]
  4294a0:	ldr	x5, [sp, #3152]
  4294a4:	ldr	x6, [sp, #3144]
  4294a8:	mov	x11, xzr
  4294ac:	mov	x7, x11
  4294b0:	mov	x12, sp
  4294b4:	str	x11, [x12]
  4294b8:	mov	x11, sp
  4294bc:	ldr	x12, [sp, #5472]
  4294c0:	str	x12, [x11, #8]
  4294c4:	mov	x11, sp
  4294c8:	ldr	x13, [sp, #3136]
  4294cc:	str	x13, [x11, #16]
  4294d0:	mov	x11, sp
  4294d4:	str	w8, [x11, #24]
  4294d8:	mov	x11, sp
  4294dc:	ldr	x14, [sp, #5464]
  4294e0:	str	x14, [x11, #32]
  4294e4:	mov	x11, sp
  4294e8:	str	x10, [x11, #40]
  4294ec:	bl	40a870 <log_object_internal@plt>
  4294f0:	str	w0, [sp, #8988]
  4294f4:	ldr	w8, [sp, #8988]
  4294f8:	str	w8, [sp, #9020]
  4294fc:	ldr	w8, [sp, #9020]
  429500:	stur	w8, [x29, #-4]
  429504:	b	4300f8 <parse_token+0xbe48>
  429508:	ldr	x8, [sp, #5512]
  42950c:	ldr	x0, [x8, #1824]
  429510:	ldur	w2, [x29, #-36]
  429514:	ldr	x3, [x8, #1840]
  429518:	mov	w1, #0xe                   	// #14
  42951c:	mov	x9, xzr
  429520:	mov	x4, x9
  429524:	bl	430504 <rule_line_add_token>
  429528:	stur	w0, [x29, #-68]
  42952c:	b	4300c4 <parse_token+0xbe14>
  429530:	ldr	x8, [sp, #5512]
  429534:	ldr	x0, [x8, #1864]
  429538:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42953c:	add	x1, x1, #0xbc1
  429540:	bl	40aa20 <strcmp@plt>
  429544:	cbnz	w0, 429b84 <parse_token+0x58d4>
  429548:	ldr	x8, [sp, #5512]
  42954c:	ldr	x0, [x8, #1872]
  429550:	ldr	x1, [x8, #1864]
  429554:	ldr	x2, [x8, #1856]
  429558:	bl	43116c <check_attr_format_and_warn>
  42955c:	stur	w0, [x29, #-68]
  429560:	ldur	w9, [x29, #-68]
  429564:	cmp	w9, #0x0
  429568:	cset	w9, ge  // ge = tcont
  42956c:	tbnz	w9, #0, 42957c <parse_token+0x52cc>
  429570:	ldur	w8, [x29, #-68]
  429574:	stur	w8, [x29, #-4]
  429578:	b	4300f8 <parse_token+0xbe48>
  42957c:	ldr	x8, [sp, #5512]
  429580:	ldrb	w9, [x8, #1839]
  429584:	tbnz	w9, #0, 429788 <parse_token+0x54d8>
  429588:	ldr	x8, [sp, #5512]
  42958c:	ldr	x9, [x8, #1872]
  429590:	ldr	x10, [sp, #5504]
  429594:	str	x9, [x10, #3320]
  429598:	ldr	x9, [x10, #3320]
  42959c:	cbz	x9, 4295b4 <parse_token+0x5304>
  4295a0:	ldr	x8, [sp, #5504]
  4295a4:	ldr	x9, [x8, #3320]
  4295a8:	ldr	x9, [x9, #32]
  4295ac:	str	x9, [sp, #3120]
  4295b0:	b	4295bc <parse_token+0x530c>
  4295b4:	mov	x8, xzr
  4295b8:	str	x8, [sp, #3120]
  4295bc:	ldr	x8, [sp, #3120]
  4295c0:	ldr	x9, [sp, #5504]
  4295c4:	str	x8, [x9, #3312]
  4295c8:	ldr	x8, [x9, #3312]
  4295cc:	cbz	x8, 4295e4 <parse_token+0x5334>
  4295d0:	ldr	x8, [sp, #5504]
  4295d4:	ldr	x9, [x8, #3312]
  4295d8:	ldr	x9, [x9, #8]
  4295dc:	str	x9, [sp, #3112]
  4295e0:	b	4295ec <parse_token+0x533c>
  4295e4:	mov	x8, xzr
  4295e8:	str	x8, [sp, #3112]
  4295ec:	ldr	x8, [sp, #3112]
  4295f0:	ldr	x9, [sp, #5504]
  4295f4:	str	x8, [x9, #3304]
  4295f8:	ldr	x8, [x9, #3312]
  4295fc:	cbz	x8, 429614 <parse_token+0x5364>
  429600:	ldr	x8, [sp, #5504]
  429604:	ldr	x9, [x8, #3312]
  429608:	ldr	x9, [x9]
  42960c:	str	x9, [sp, #3104]
  429610:	b	42961c <parse_token+0x536c>
  429614:	mov	x8, xzr
  429618:	str	x8, [sp, #3104]
  42961c:	ldr	x8, [sp, #3104]
  429620:	ldr	x9, [sp, #5504]
  429624:	str	x8, [x9, #3296]
  429628:	mov	x8, xzr
  42962c:	str	x8, [x9, #3280]
  429630:	str	x8, [x9, #3272]
  429634:	mov	w10, #0x3                   	// #3
  429638:	str	w10, [sp, #8924]
  42963c:	mov	w10, #0x16                  	// #22
  429640:	movk	w10, #0x4000, lsl #16
  429644:	str	w10, [sp, #8920]
  429648:	ldr	x8, [x9, #3272]
  42964c:	cbz	x8, 429694 <parse_token+0x53e4>
  429650:	mov	w0, #0x1                   	// #1
  429654:	bl	40a3f0 <log_get_max_level_realm@plt>
  429658:	ldr	w8, [sp, #8924]
  42965c:	cmp	w0, w8
  429660:	cset	w8, ge  // ge = tcont
  429664:	mov	w9, #0x1                   	// #1
  429668:	eor	w8, w8, #0x1
  42966c:	eor	w8, w8, w9
  429670:	and	w8, w8, #0x1
  429674:	mov	w1, w8
  429678:	sxtw	x10, w1
  42967c:	cbz	x10, 429694 <parse_token+0x53e4>
  429680:	ldr	x8, [sp, #5504]
  429684:	ldr	x0, [x8, #3272]
  429688:	add	x1, sp, #0x2, lsl #12
  42968c:	add	x1, x1, #0x2e8
  429690:	bl	40a860 <sd_device_get_sysname@plt>
  429694:	ldr	w0, [sp, #8924]
  429698:	ldr	w1, [sp, #8920]
  42969c:	ldr	x8, [sp, #5504]
  4296a0:	ldr	x9, [x8, #3280]
  4296a4:	mov	x10, xzr
  4296a8:	cmp	x9, #0x0
  4296ac:	ldr	x9, [sp, #5496]
  4296b0:	csel	x5, x9, x10, ne  // ne = any
  4296b4:	ldr	x6, [x8, #3280]
  4296b8:	ldr	x10, [x8, #3296]
  4296bc:	str	w0, [sp, #3100]
  4296c0:	mov	x0, x10
  4296c4:	str	w1, [sp, #3096]
  4296c8:	str	x5, [sp, #3088]
  4296cc:	str	x6, [sp, #3080]
  4296d0:	bl	424274 <strna>
  4296d4:	ldr	x8, [sp, #5504]
  4296d8:	ldr	x9, [x8, #3304]
  4296dc:	str	x0, [sp, #3072]
  4296e0:	cbz	x9, 4296f8 <parse_token+0x5448>
  4296e4:	ldr	x8, [sp, #5504]
  4296e8:	ldr	x9, [x8, #3304]
  4296ec:	ldr	w10, [x9, #8]
  4296f0:	str	w10, [sp, #3068]
  4296f4:	b	429700 <parse_token+0x5450>
  4296f8:	mov	w8, wzr
  4296fc:	str	w8, [sp, #3068]
  429700:	ldr	w8, [sp, #3068]
  429704:	ldr	x9, [sp, #5512]
  429708:	ldr	x10, [x9, #1864]
  42970c:	ldr	w0, [sp, #3100]
  429710:	ldr	w1, [sp, #3096]
  429714:	ldr	x2, [sp, #5488]
  429718:	mov	w3, #0x2cf                 	// #719
  42971c:	ldr	x4, [sp, #5480]
  429720:	ldr	x5, [sp, #3088]
  429724:	ldr	x6, [sp, #3080]
  429728:	mov	x11, xzr
  42972c:	mov	x7, x11
  429730:	mov	x12, sp
  429734:	str	x11, [x12]
  429738:	mov	x11, sp
  42973c:	ldr	x12, [sp, #5472]
  429740:	str	x12, [x11, #8]
  429744:	mov	x11, sp
  429748:	ldr	x13, [sp, #3072]
  42974c:	str	x13, [x11, #16]
  429750:	mov	x11, sp
  429754:	str	w8, [x11, #24]
  429758:	mov	x11, sp
  42975c:	ldr	x14, [sp, #5464]
  429760:	str	x14, [x11, #32]
  429764:	mov	x11, sp
  429768:	str	x10, [x11, #40]
  42976c:	bl	40a870 <log_object_internal@plt>
  429770:	str	w0, [sp, #8916]
  429774:	ldr	w8, [sp, #8916]
  429778:	str	w8, [sp, #8948]
  42977c:	ldr	w8, [sp, #8948]
  429780:	stur	w8, [x29, #-4]
  429784:	b	4300f8 <parse_token+0xbe48>
  429788:	ldr	x8, [sp, #5512]
  42978c:	ldr	x0, [x8, #1856]
  429790:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  429794:	add	x1, x1, #0xbc7
  429798:	bl	4304a4 <startswith>
  42979c:	cbz	x0, 429974 <parse_token+0x56c4>
  4297a0:	ldr	x8, [sp, #5512]
  4297a4:	ldr	x9, [x8, #1872]
  4297a8:	ldr	x10, [sp, #5504]
  4297ac:	str	x9, [x10, #3248]
  4297b0:	ldr	x9, [x10, #3248]
  4297b4:	cbz	x9, 4297cc <parse_token+0x551c>
  4297b8:	ldr	x8, [sp, #5504]
  4297bc:	ldr	x9, [x8, #3248]
  4297c0:	ldr	x9, [x9, #32]
  4297c4:	str	x9, [sp, #3056]
  4297c8:	b	4297d4 <parse_token+0x5524>
  4297cc:	mov	x8, xzr
  4297d0:	str	x8, [sp, #3056]
  4297d4:	ldr	x8, [sp, #3056]
  4297d8:	ldr	x9, [sp, #5504]
  4297dc:	str	x8, [x9, #3240]
  4297e0:	ldr	x8, [x9, #3240]
  4297e4:	cbz	x8, 4297fc <parse_token+0x554c>
  4297e8:	ldr	x8, [sp, #5504]
  4297ec:	ldr	x9, [x8, #3240]
  4297f0:	ldr	x9, [x9, #8]
  4297f4:	str	x9, [sp, #3048]
  4297f8:	b	429804 <parse_token+0x5554>
  4297fc:	mov	x8, xzr
  429800:	str	x8, [sp, #3048]
  429804:	ldr	x8, [sp, #3048]
  429808:	ldr	x9, [sp, #5504]
  42980c:	str	x8, [x9, #3232]
  429810:	ldr	x8, [x9, #3240]
  429814:	cbz	x8, 42982c <parse_token+0x557c>
  429818:	ldr	x8, [sp, #5504]
  42981c:	ldr	x9, [x8, #3240]
  429820:	ldr	x9, [x9]
  429824:	str	x9, [sp, #3040]
  429828:	b	429834 <parse_token+0x5584>
  42982c:	mov	x8, xzr
  429830:	str	x8, [sp, #3040]
  429834:	ldr	x8, [sp, #3040]
  429838:	ldr	x9, [sp, #5504]
  42983c:	str	x8, [x9, #3224]
  429840:	mov	x8, xzr
  429844:	str	x8, [x9, #3208]
  429848:	str	x8, [x9, #3200]
  42984c:	mov	w10, #0x4                   	// #4
  429850:	str	w10, [sp, #8852]
  429854:	str	wzr, [sp, #8848]
  429858:	ldr	x8, [x9, #3200]
  42985c:	cbz	x8, 4298a4 <parse_token+0x55f4>
  429860:	mov	w0, #0x1                   	// #1
  429864:	bl	40a3f0 <log_get_max_level_realm@plt>
  429868:	ldr	w8, [sp, #8852]
  42986c:	cmp	w0, w8
  429870:	cset	w8, ge  // ge = tcont
  429874:	mov	w9, #0x1                   	// #1
  429878:	eor	w8, w8, #0x1
  42987c:	eor	w8, w8, w9
  429880:	and	w8, w8, #0x1
  429884:	mov	w1, w8
  429888:	sxtw	x10, w1
  42988c:	cbz	x10, 4298a4 <parse_token+0x55f4>
  429890:	ldr	x8, [sp, #5504]
  429894:	ldr	x0, [x8, #3200]
  429898:	add	x1, sp, #0x2, lsl #12
  42989c:	add	x1, x1, #0x2a0
  4298a0:	bl	40a860 <sd_device_get_sysname@plt>
  4298a4:	ldr	w0, [sp, #8852]
  4298a8:	ldr	w1, [sp, #8848]
  4298ac:	ldr	x8, [sp, #5504]
  4298b0:	ldr	x9, [x8, #3208]
  4298b4:	mov	x10, xzr
  4298b8:	cmp	x9, #0x0
  4298bc:	ldr	x9, [sp, #5496]
  4298c0:	csel	x5, x9, x10, ne  // ne = any
  4298c4:	ldr	x6, [x8, #3208]
  4298c8:	ldr	x10, [x8, #3224]
  4298cc:	str	w0, [sp, #3036]
  4298d0:	mov	x0, x10
  4298d4:	str	w1, [sp, #3032]
  4298d8:	str	x5, [sp, #3024]
  4298dc:	str	x6, [sp, #3016]
  4298e0:	bl	424274 <strna>
  4298e4:	ldr	x8, [sp, #5504]
  4298e8:	ldr	x9, [x8, #3232]
  4298ec:	str	x0, [sp, #3008]
  4298f0:	cbz	x9, 429908 <parse_token+0x5658>
  4298f4:	ldr	x8, [sp, #5504]
  4298f8:	ldr	x9, [x8, #3232]
  4298fc:	ldr	w10, [x9, #8]
  429900:	str	w10, [sp, #3004]
  429904:	b	429910 <parse_token+0x5660>
  429908:	mov	w8, wzr
  42990c:	str	w8, [sp, #3004]
  429910:	ldr	w8, [sp, #3004]
  429914:	ldr	w0, [sp, #3036]
  429918:	ldr	w1, [sp, #3032]
  42991c:	ldr	x2, [sp, #5488]
  429920:	mov	w3, #0x2d2                 	// #722
  429924:	ldr	x4, [sp, #5480]
  429928:	ldr	x5, [sp, #3024]
  42992c:	ldr	x6, [sp, #3016]
  429930:	mov	x9, xzr
  429934:	mov	x7, x9
  429938:	mov	x10, sp
  42993c:	str	x9, [x10]
  429940:	mov	x9, sp
  429944:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  429948:	add	x10, x10, #0xbcf
  42994c:	str	x10, [x9, #8]
  429950:	mov	x9, sp
  429954:	ldr	x10, [sp, #3008]
  429958:	str	x10, [x9, #16]
  42995c:	mov	x9, sp
  429960:	str	w8, [x9, #24]
  429964:	bl	40a870 <log_object_internal@plt>
  429968:	str	w0, [sp, #8844]
  42996c:	ldr	w8, [sp, #8844]
  429970:	str	w8, [sp, #8876]
  429974:	ldr	x8, [sp, #5512]
  429978:	ldr	x0, [x8, #1856]
  42997c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  429980:	add	x1, x1, #0xc1a
  429984:	bl	40b2f0 <strstr@plt>
  429988:	cbz	x0, 429b60 <parse_token+0x58b0>
  42998c:	ldr	x8, [sp, #5512]
  429990:	ldr	x9, [x8, #1872]
  429994:	ldr	x10, [sp, #5504]
  429998:	str	x9, [x10, #3176]
  42999c:	ldr	x9, [x10, #3176]
  4299a0:	cbz	x9, 4299b8 <parse_token+0x5708>
  4299a4:	ldr	x8, [sp, #5504]
  4299a8:	ldr	x9, [x8, #3176]
  4299ac:	ldr	x9, [x9, #32]
  4299b0:	str	x9, [sp, #2992]
  4299b4:	b	4299c0 <parse_token+0x5710>
  4299b8:	mov	x8, xzr
  4299bc:	str	x8, [sp, #2992]
  4299c0:	ldr	x8, [sp, #2992]
  4299c4:	ldr	x9, [sp, #5504]
  4299c8:	str	x8, [x9, #3168]
  4299cc:	ldr	x8, [x9, #3168]
  4299d0:	cbz	x8, 4299e8 <parse_token+0x5738>
  4299d4:	ldr	x8, [sp, #5504]
  4299d8:	ldr	x9, [x8, #3168]
  4299dc:	ldr	x9, [x9, #8]
  4299e0:	str	x9, [sp, #2984]
  4299e4:	b	4299f0 <parse_token+0x5740>
  4299e8:	mov	x8, xzr
  4299ec:	str	x8, [sp, #2984]
  4299f0:	ldr	x8, [sp, #2984]
  4299f4:	ldr	x9, [sp, #5504]
  4299f8:	str	x8, [x9, #3160]
  4299fc:	ldr	x8, [x9, #3168]
  429a00:	cbz	x8, 429a18 <parse_token+0x5768>
  429a04:	ldr	x8, [sp, #5504]
  429a08:	ldr	x9, [x8, #3168]
  429a0c:	ldr	x9, [x9]
  429a10:	str	x9, [sp, #2976]
  429a14:	b	429a20 <parse_token+0x5770>
  429a18:	mov	x8, xzr
  429a1c:	str	x8, [sp, #2976]
  429a20:	ldr	x8, [sp, #2976]
  429a24:	ldr	x9, [sp, #5504]
  429a28:	str	x8, [x9, #3152]
  429a2c:	mov	x8, xzr
  429a30:	str	x8, [x9, #3136]
  429a34:	str	x8, [x9, #3128]
  429a38:	mov	w10, #0x4                   	// #4
  429a3c:	str	w10, [sp, #8780]
  429a40:	str	wzr, [sp, #8776]
  429a44:	ldr	x8, [x9, #3128]
  429a48:	cbz	x8, 429a90 <parse_token+0x57e0>
  429a4c:	mov	w0, #0x1                   	// #1
  429a50:	bl	40a3f0 <log_get_max_level_realm@plt>
  429a54:	ldr	w8, [sp, #8780]
  429a58:	cmp	w0, w8
  429a5c:	cset	w8, ge  // ge = tcont
  429a60:	mov	w9, #0x1                   	// #1
  429a64:	eor	w8, w8, #0x1
  429a68:	eor	w8, w8, w9
  429a6c:	and	w8, w8, #0x1
  429a70:	mov	w1, w8
  429a74:	sxtw	x10, w1
  429a78:	cbz	x10, 429a90 <parse_token+0x57e0>
  429a7c:	ldr	x8, [sp, #5504]
  429a80:	ldr	x0, [x8, #3128]
  429a84:	add	x1, sp, #0x2, lsl #12
  429a88:	add	x1, x1, #0x258
  429a8c:	bl	40a860 <sd_device_get_sysname@plt>
  429a90:	ldr	w0, [sp, #8780]
  429a94:	ldr	w1, [sp, #8776]
  429a98:	ldr	x8, [sp, #5504]
  429a9c:	ldr	x9, [x8, #3136]
  429aa0:	mov	x10, xzr
  429aa4:	cmp	x9, #0x0
  429aa8:	ldr	x9, [sp, #5496]
  429aac:	csel	x5, x9, x10, ne  // ne = any
  429ab0:	ldr	x6, [x8, #3136]
  429ab4:	ldr	x10, [x8, #3152]
  429ab8:	str	w0, [sp, #2972]
  429abc:	mov	x0, x10
  429ac0:	str	w1, [sp, #2968]
  429ac4:	str	x5, [sp, #2960]
  429ac8:	str	x6, [sp, #2952]
  429acc:	bl	424274 <strna>
  429ad0:	ldr	x8, [sp, #5504]
  429ad4:	ldr	x9, [x8, #3160]
  429ad8:	str	x0, [sp, #2944]
  429adc:	cbz	x9, 429af4 <parse_token+0x5844>
  429ae0:	ldr	x8, [sp, #5504]
  429ae4:	ldr	x9, [x8, #3160]
  429ae8:	ldr	w10, [x9, #8]
  429aec:	str	w10, [sp, #2940]
  429af0:	b	429afc <parse_token+0x584c>
  429af4:	mov	w8, wzr
  429af8:	str	w8, [sp, #2940]
  429afc:	ldr	w8, [sp, #2940]
  429b00:	ldr	w0, [sp, #2972]
  429b04:	ldr	w1, [sp, #2968]
  429b08:	ldr	x2, [sp, #5488]
  429b0c:	mov	w3, #0x2d4                 	// #724
  429b10:	ldr	x4, [sp, #5480]
  429b14:	ldr	x5, [sp, #2960]
  429b18:	ldr	x6, [sp, #2952]
  429b1c:	mov	x9, xzr
  429b20:	mov	x7, x9
  429b24:	mov	x10, sp
  429b28:	str	x9, [x10]
  429b2c:	mov	x9, sp
  429b30:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  429b34:	add	x10, x10, #0xc1e
  429b38:	str	x10, [x9, #8]
  429b3c:	mov	x9, sp
  429b40:	ldr	x10, [sp, #2944]
  429b44:	str	x10, [x9, #16]
  429b48:	mov	x9, sp
  429b4c:	str	w8, [x9, #24]
  429b50:	bl	40a870 <log_object_internal@plt>
  429b54:	str	w0, [sp, #8772]
  429b58:	ldr	w8, [sp, #8772]
  429b5c:	str	w8, [sp, #8804]
  429b60:	ldr	x8, [sp, #5512]
  429b64:	ldr	x0, [x8, #1824]
  429b68:	ldur	w2, [x29, #-36]
  429b6c:	ldr	x3, [x8, #1840]
  429b70:	ldr	x4, [x8, #1856]
  429b74:	mov	w1, #0xf                   	// #15
  429b78:	bl	430504 <rule_line_add_token>
  429b7c:	stur	w0, [x29, #-68]
  429b80:	b	4300c4 <parse_token+0xbe14>
  429b84:	ldr	x8, [sp, #5512]
  429b88:	ldr	x0, [x8, #1864]
  429b8c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  429b90:	add	x1, x1, #0xaba
  429b94:	bl	40aa20 <strcmp@plt>
  429b98:	cbnz	w0, 429fdc <parse_token+0x5d2c>
  429b9c:	ldr	x8, [sp, #5512]
  429ba0:	ldr	x9, [x8, #1856]
  429ba4:	cbz	x9, 429da8 <parse_token+0x5af8>
  429ba8:	ldr	x8, [sp, #5512]
  429bac:	ldr	x9, [x8, #1872]
  429bb0:	ldr	x10, [sp, #5504]
  429bb4:	str	x9, [x10, #3104]
  429bb8:	ldr	x9, [x10, #3104]
  429bbc:	cbz	x9, 429bd4 <parse_token+0x5924>
  429bc0:	ldr	x8, [sp, #5504]
  429bc4:	ldr	x9, [x8, #3104]
  429bc8:	ldr	x9, [x9, #32]
  429bcc:	str	x9, [sp, #2928]
  429bd0:	b	429bdc <parse_token+0x592c>
  429bd4:	mov	x8, xzr
  429bd8:	str	x8, [sp, #2928]
  429bdc:	ldr	x8, [sp, #2928]
  429be0:	ldr	x9, [sp, #5504]
  429be4:	str	x8, [x9, #3096]
  429be8:	ldr	x8, [x9, #3096]
  429bec:	cbz	x8, 429c04 <parse_token+0x5954>
  429bf0:	ldr	x8, [sp, #5504]
  429bf4:	ldr	x9, [x8, #3096]
  429bf8:	ldr	x9, [x9, #8]
  429bfc:	str	x9, [sp, #2920]
  429c00:	b	429c0c <parse_token+0x595c>
  429c04:	mov	x8, xzr
  429c08:	str	x8, [sp, #2920]
  429c0c:	ldr	x8, [sp, #2920]
  429c10:	ldr	x9, [sp, #5504]
  429c14:	str	x8, [x9, #3088]
  429c18:	ldr	x8, [x9, #3096]
  429c1c:	cbz	x8, 429c34 <parse_token+0x5984>
  429c20:	ldr	x8, [sp, #5504]
  429c24:	ldr	x9, [x8, #3096]
  429c28:	ldr	x9, [x9]
  429c2c:	str	x9, [sp, #2912]
  429c30:	b	429c3c <parse_token+0x598c>
  429c34:	mov	x8, xzr
  429c38:	str	x8, [sp, #2912]
  429c3c:	ldr	x8, [sp, #2912]
  429c40:	ldr	x9, [sp, #5504]
  429c44:	str	x8, [x9, #3080]
  429c48:	mov	x8, xzr
  429c4c:	str	x8, [x9, #3064]
  429c50:	str	x8, [x9, #3056]
  429c54:	mov	w10, #0x3                   	// #3
  429c58:	str	w10, [sp, #8708]
  429c5c:	mov	w10, #0x16                  	// #22
  429c60:	movk	w10, #0x4000, lsl #16
  429c64:	str	w10, [sp, #8704]
  429c68:	ldr	x8, [x9, #3056]
  429c6c:	cbz	x8, 429cb4 <parse_token+0x5a04>
  429c70:	mov	w0, #0x1                   	// #1
  429c74:	bl	40a3f0 <log_get_max_level_realm@plt>
  429c78:	ldr	w8, [sp, #8708]
  429c7c:	cmp	w0, w8
  429c80:	cset	w8, ge  // ge = tcont
  429c84:	mov	w9, #0x1                   	// #1
  429c88:	eor	w8, w8, #0x1
  429c8c:	eor	w8, w8, w9
  429c90:	and	w8, w8, #0x1
  429c94:	mov	w1, w8
  429c98:	sxtw	x10, w1
  429c9c:	cbz	x10, 429cb4 <parse_token+0x5a04>
  429ca0:	ldr	x8, [sp, #5504]
  429ca4:	ldr	x0, [x8, #3056]
  429ca8:	add	x1, sp, #0x2, lsl #12
  429cac:	add	x1, x1, #0x210
  429cb0:	bl	40a860 <sd_device_get_sysname@plt>
  429cb4:	ldr	w0, [sp, #8708]
  429cb8:	ldr	w1, [sp, #8704]
  429cbc:	ldr	x8, [sp, #5504]
  429cc0:	ldr	x9, [x8, #3064]
  429cc4:	mov	x10, xzr
  429cc8:	cmp	x9, #0x0
  429ccc:	ldr	x9, [sp, #5496]
  429cd0:	csel	x5, x9, x10, ne  // ne = any
  429cd4:	ldr	x6, [x8, #3064]
  429cd8:	ldr	x10, [x8, #3080]
  429cdc:	str	w0, [sp, #2908]
  429ce0:	mov	x0, x10
  429ce4:	str	w1, [sp, #2904]
  429ce8:	str	x5, [sp, #2896]
  429cec:	str	x6, [sp, #2888]
  429cf0:	bl	424274 <strna>
  429cf4:	ldr	x8, [sp, #5504]
  429cf8:	ldr	x9, [x8, #3088]
  429cfc:	str	x0, [sp, #2880]
  429d00:	cbz	x9, 429d18 <parse_token+0x5a68>
  429d04:	ldr	x8, [sp, #5504]
  429d08:	ldr	x9, [x8, #3088]
  429d0c:	ldr	w10, [x9, #8]
  429d10:	str	w10, [sp, #2876]
  429d14:	b	429d20 <parse_token+0x5a70>
  429d18:	mov	w8, wzr
  429d1c:	str	w8, [sp, #2876]
  429d20:	ldr	w8, [sp, #2876]
  429d24:	ldr	x9, [sp, #5512]
  429d28:	ldr	x10, [x9, #1864]
  429d2c:	ldr	w0, [sp, #2908]
  429d30:	ldr	w1, [sp, #2904]
  429d34:	ldr	x2, [sp, #5488]
  429d38:	mov	w3, #0x2d9                 	// #729
  429d3c:	ldr	x4, [sp, #5480]
  429d40:	ldr	x5, [sp, #2896]
  429d44:	ldr	x6, [sp, #2888]
  429d48:	mov	x11, xzr
  429d4c:	mov	x7, x11
  429d50:	mov	x12, sp
  429d54:	str	x11, [x12]
  429d58:	mov	x11, sp
  429d5c:	ldr	x12, [sp, #5472]
  429d60:	str	x12, [x11, #8]
  429d64:	mov	x11, sp
  429d68:	ldr	x13, [sp, #2880]
  429d6c:	str	x13, [x11, #16]
  429d70:	mov	x11, sp
  429d74:	str	w8, [x11, #24]
  429d78:	mov	x11, sp
  429d7c:	ldr	x14, [sp, #5456]
  429d80:	str	x14, [x11, #32]
  429d84:	mov	x11, sp
  429d88:	str	x10, [x11, #40]
  429d8c:	bl	40a870 <log_object_internal@plt>
  429d90:	str	w0, [sp, #8700]
  429d94:	ldr	w8, [sp, #8700]
  429d98:	str	w8, [sp, #8732]
  429d9c:	ldr	w8, [sp, #8732]
  429da0:	stur	w8, [x29, #-4]
  429da4:	b	4300f8 <parse_token+0xbe48>
  429da8:	ldr	x8, [sp, #5512]
  429dac:	ldrb	w9, [x8, #1839]
  429db0:	tbnz	w9, #0, 429fb4 <parse_token+0x5d04>
  429db4:	ldr	x8, [sp, #5512]
  429db8:	ldr	x9, [x8, #1872]
  429dbc:	ldr	x10, [sp, #5504]
  429dc0:	str	x9, [x10, #3032]
  429dc4:	ldr	x9, [x10, #3032]
  429dc8:	cbz	x9, 429de0 <parse_token+0x5b30>
  429dcc:	ldr	x8, [sp, #5504]
  429dd0:	ldr	x9, [x8, #3032]
  429dd4:	ldr	x9, [x9, #32]
  429dd8:	str	x9, [sp, #2864]
  429ddc:	b	429de8 <parse_token+0x5b38>
  429de0:	mov	x8, xzr
  429de4:	str	x8, [sp, #2864]
  429de8:	ldr	x8, [sp, #2864]
  429dec:	ldr	x9, [sp, #5504]
  429df0:	str	x8, [x9, #3024]
  429df4:	ldr	x8, [x9, #3024]
  429df8:	cbz	x8, 429e10 <parse_token+0x5b60>
  429dfc:	ldr	x8, [sp, #5504]
  429e00:	ldr	x9, [x8, #3024]
  429e04:	ldr	x9, [x9, #8]
  429e08:	str	x9, [sp, #2856]
  429e0c:	b	429e18 <parse_token+0x5b68>
  429e10:	mov	x8, xzr
  429e14:	str	x8, [sp, #2856]
  429e18:	ldr	x8, [sp, #2856]
  429e1c:	ldr	x9, [sp, #5504]
  429e20:	str	x8, [x9, #3016]
  429e24:	ldr	x8, [x9, #3024]
  429e28:	cbz	x8, 429e40 <parse_token+0x5b90>
  429e2c:	ldr	x8, [sp, #5504]
  429e30:	ldr	x9, [x8, #3024]
  429e34:	ldr	x9, [x9]
  429e38:	str	x9, [sp, #2848]
  429e3c:	b	429e48 <parse_token+0x5b98>
  429e40:	mov	x8, xzr
  429e44:	str	x8, [sp, #2848]
  429e48:	ldr	x8, [sp, #2848]
  429e4c:	ldr	x9, [sp, #5504]
  429e50:	str	x8, [x9, #3008]
  429e54:	mov	x8, xzr
  429e58:	str	x8, [x9, #2992]
  429e5c:	str	x8, [x9, #2984]
  429e60:	mov	w10, #0x3                   	// #3
  429e64:	str	w10, [sp, #8636]
  429e68:	mov	w10, #0x16                  	// #22
  429e6c:	movk	w10, #0x4000, lsl #16
  429e70:	str	w10, [sp, #8632]
  429e74:	ldr	x8, [x9, #2984]
  429e78:	cbz	x8, 429ec0 <parse_token+0x5c10>
  429e7c:	mov	w0, #0x1                   	// #1
  429e80:	bl	40a3f0 <log_get_max_level_realm@plt>
  429e84:	ldr	w8, [sp, #8636]
  429e88:	cmp	w0, w8
  429e8c:	cset	w8, ge  // ge = tcont
  429e90:	mov	w9, #0x1                   	// #1
  429e94:	eor	w8, w8, #0x1
  429e98:	eor	w8, w8, w9
  429e9c:	and	w8, w8, #0x1
  429ea0:	mov	w1, w8
  429ea4:	sxtw	x10, w1
  429ea8:	cbz	x10, 429ec0 <parse_token+0x5c10>
  429eac:	ldr	x8, [sp, #5504]
  429eb0:	ldr	x0, [x8, #2984]
  429eb4:	add	x1, sp, #0x2, lsl #12
  429eb8:	add	x1, x1, #0x1c8
  429ebc:	bl	40a860 <sd_device_get_sysname@plt>
  429ec0:	ldr	w0, [sp, #8636]
  429ec4:	ldr	w1, [sp, #8632]
  429ec8:	ldr	x8, [sp, #5504]
  429ecc:	ldr	x9, [x8, #2992]
  429ed0:	mov	x10, xzr
  429ed4:	cmp	x9, #0x0
  429ed8:	ldr	x9, [sp, #5496]
  429edc:	csel	x5, x9, x10, ne  // ne = any
  429ee0:	ldr	x6, [x8, #2992]
  429ee4:	ldr	x10, [x8, #3008]
  429ee8:	str	w0, [sp, #2844]
  429eec:	mov	x0, x10
  429ef0:	str	w1, [sp, #2840]
  429ef4:	str	x5, [sp, #2832]
  429ef8:	str	x6, [sp, #2824]
  429efc:	bl	424274 <strna>
  429f00:	ldr	x8, [sp, #5504]
  429f04:	ldr	x9, [x8, #3016]
  429f08:	str	x0, [sp, #2816]
  429f0c:	cbz	x9, 429f24 <parse_token+0x5c74>
  429f10:	ldr	x8, [sp, #5504]
  429f14:	ldr	x9, [x8, #3016]
  429f18:	ldr	w10, [x9, #8]
  429f1c:	str	w10, [sp, #2812]
  429f20:	b	429f2c <parse_token+0x5c7c>
  429f24:	mov	w8, wzr
  429f28:	str	w8, [sp, #2812]
  429f2c:	ldr	w8, [sp, #2812]
  429f30:	ldr	x9, [sp, #5512]
  429f34:	ldr	x10, [x9, #1864]
  429f38:	ldr	w0, [sp, #2844]
  429f3c:	ldr	w1, [sp, #2840]
  429f40:	ldr	x2, [sp, #5488]
  429f44:	mov	w3, #0x2db                 	// #731
  429f48:	ldr	x4, [sp, #5480]
  429f4c:	ldr	x5, [sp, #2832]
  429f50:	ldr	x6, [sp, #2824]
  429f54:	mov	x11, xzr
  429f58:	mov	x7, x11
  429f5c:	mov	x12, sp
  429f60:	str	x11, [x12]
  429f64:	mov	x11, sp
  429f68:	ldr	x12, [sp, #5472]
  429f6c:	str	x12, [x11, #8]
  429f70:	mov	x11, sp
  429f74:	ldr	x13, [sp, #2816]
  429f78:	str	x13, [x11, #16]
  429f7c:	mov	x11, sp
  429f80:	str	w8, [x11, #24]
  429f84:	mov	x11, sp
  429f88:	ldr	x14, [sp, #5464]
  429f8c:	str	x14, [x11, #32]
  429f90:	mov	x11, sp
  429f94:	str	x10, [x11, #40]
  429f98:	bl	40a870 <log_object_internal@plt>
  429f9c:	str	w0, [sp, #8628]
  429fa0:	ldr	w8, [sp, #8628]
  429fa4:	str	w8, [sp, #8660]
  429fa8:	ldr	w8, [sp, #8660]
  429fac:	stur	w8, [x29, #-4]
  429fb0:	b	4300f8 <parse_token+0xbe48>
  429fb4:	ldr	x8, [sp, #5512]
  429fb8:	ldr	x0, [x8, #1824]
  429fbc:	ldur	w2, [x29, #-36]
  429fc0:	ldr	x3, [x8, #1840]
  429fc4:	mov	w1, #0x10                  	// #16
  429fc8:	mov	x9, xzr
  429fcc:	mov	x4, x9
  429fd0:	bl	430504 <rule_line_add_token>
  429fd4:	stur	w0, [x29, #-68]
  429fd8:	b	4300c4 <parse_token+0xbe14>
  429fdc:	ldr	x8, [sp, #5512]
  429fe0:	ldr	x0, [x8, #1864]
  429fe4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  429fe8:	add	x1, x1, #0xc7c
  429fec:	bl	40aa20 <strcmp@plt>
  429ff0:	cbnz	w0, 42a480 <parse_token+0x61d0>
  429ff4:	mov	w8, #0xffffffff            	// #-1
  429ff8:	str	w8, [sp, #8624]
  429ffc:	ldr	x9, [sp, #5512]
  42a000:	ldr	x0, [x9, #1856]
  42a004:	bl	423ddc <isempty>
  42a008:	tbnz	w0, #0, 42a228 <parse_token+0x5f78>
  42a00c:	ldr	x8, [sp, #5512]
  42a010:	ldr	x0, [x8, #1856]
  42a014:	add	x1, sp, #0x2, lsl #12
  42a018:	add	x1, x1, #0x1b0
  42a01c:	bl	40b300 <parse_mode@plt>
  42a020:	stur	w0, [x29, #-68]
  42a024:	ldur	w9, [x29, #-68]
  42a028:	cmp	w9, #0x0
  42a02c:	cset	w9, ge  // ge = tcont
  42a030:	tbnz	w9, #0, 42a228 <parse_token+0x5f78>
  42a034:	ldr	x8, [sp, #5512]
  42a038:	ldr	x9, [x8, #1872]
  42a03c:	ldr	x10, [sp, #5504]
  42a040:	str	x9, [x10, #2960]
  42a044:	ldr	x9, [x10, #2960]
  42a048:	cbz	x9, 42a060 <parse_token+0x5db0>
  42a04c:	ldr	x8, [sp, #5504]
  42a050:	ldr	x9, [x8, #2960]
  42a054:	ldr	x9, [x9, #32]
  42a058:	str	x9, [sp, #2800]
  42a05c:	b	42a068 <parse_token+0x5db8>
  42a060:	mov	x8, xzr
  42a064:	str	x8, [sp, #2800]
  42a068:	ldr	x8, [sp, #2800]
  42a06c:	ldr	x9, [sp, #5504]
  42a070:	str	x8, [x9, #2952]
  42a074:	ldr	x8, [x9, #2952]
  42a078:	cbz	x8, 42a090 <parse_token+0x5de0>
  42a07c:	ldr	x8, [sp, #5504]
  42a080:	ldr	x9, [x8, #2952]
  42a084:	ldr	x9, [x9, #8]
  42a088:	str	x9, [sp, #2792]
  42a08c:	b	42a098 <parse_token+0x5de8>
  42a090:	mov	x8, xzr
  42a094:	str	x8, [sp, #2792]
  42a098:	ldr	x8, [sp, #2792]
  42a09c:	ldr	x9, [sp, #5504]
  42a0a0:	str	x8, [x9, #2944]
  42a0a4:	ldr	x8, [x9, #2952]
  42a0a8:	cbz	x8, 42a0c0 <parse_token+0x5e10>
  42a0ac:	ldr	x8, [sp, #5504]
  42a0b0:	ldr	x9, [x8, #2952]
  42a0b4:	ldr	x9, [x9]
  42a0b8:	str	x9, [sp, #2784]
  42a0bc:	b	42a0c8 <parse_token+0x5e18>
  42a0c0:	mov	x8, xzr
  42a0c4:	str	x8, [sp, #2784]
  42a0c8:	ldr	x8, [sp, #2784]
  42a0cc:	ldr	x9, [sp, #5504]
  42a0d0:	str	x8, [x9, #2936]
  42a0d4:	mov	x8, xzr
  42a0d8:	str	x8, [x9, #2920]
  42a0dc:	str	x8, [x9, #2912]
  42a0e0:	mov	w10, #0x3                   	// #3
  42a0e4:	str	w10, [sp, #8564]
  42a0e8:	ldur	w10, [x29, #-68]
  42a0ec:	str	w10, [sp, #8560]
  42a0f0:	ldr	x8, [x9, #2912]
  42a0f4:	cbz	x8, 42a13c <parse_token+0x5e8c>
  42a0f8:	mov	w0, #0x1                   	// #1
  42a0fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  42a100:	ldr	w8, [sp, #8564]
  42a104:	cmp	w0, w8
  42a108:	cset	w8, ge  // ge = tcont
  42a10c:	mov	w9, #0x1                   	// #1
  42a110:	eor	w8, w8, #0x1
  42a114:	eor	w8, w8, w9
  42a118:	and	w8, w8, #0x1
  42a11c:	mov	w1, w8
  42a120:	sxtw	x10, w1
  42a124:	cbz	x10, 42a13c <parse_token+0x5e8c>
  42a128:	ldr	x8, [sp, #5504]
  42a12c:	ldr	x0, [x8, #2912]
  42a130:	add	x1, sp, #0x2, lsl #12
  42a134:	add	x1, x1, #0x180
  42a138:	bl	40a860 <sd_device_get_sysname@plt>
  42a13c:	ldr	w0, [sp, #8564]
  42a140:	ldr	w1, [sp, #8560]
  42a144:	ldr	x8, [sp, #5504]
  42a148:	ldr	x9, [x8, #2920]
  42a14c:	mov	x10, xzr
  42a150:	cmp	x9, #0x0
  42a154:	ldr	x9, [sp, #5496]
  42a158:	csel	x5, x9, x10, ne  // ne = any
  42a15c:	ldr	x6, [x8, #2920]
  42a160:	ldr	x10, [x8, #2936]
  42a164:	str	w0, [sp, #2780]
  42a168:	mov	x0, x10
  42a16c:	str	w1, [sp, #2776]
  42a170:	str	x5, [sp, #2768]
  42a174:	str	x6, [sp, #2760]
  42a178:	bl	424274 <strna>
  42a17c:	ldr	x8, [sp, #5504]
  42a180:	ldr	x9, [x8, #2944]
  42a184:	str	x0, [sp, #2752]
  42a188:	cbz	x9, 42a1a0 <parse_token+0x5ef0>
  42a18c:	ldr	x8, [sp, #5504]
  42a190:	ldr	x9, [x8, #2944]
  42a194:	ldr	w10, [x9, #8]
  42a198:	str	w10, [sp, #2748]
  42a19c:	b	42a1a8 <parse_token+0x5ef8>
  42a1a0:	mov	w8, wzr
  42a1a4:	str	w8, [sp, #2748]
  42a1a8:	ldr	w8, [sp, #2748]
  42a1ac:	ldr	x9, [sp, #5512]
  42a1b0:	ldr	x10, [x9, #1856]
  42a1b4:	ldr	w0, [sp, #2780]
  42a1b8:	ldr	w1, [sp, #2776]
  42a1bc:	ldr	x2, [sp, #5488]
  42a1c0:	mov	w3, #0x2e4                 	// #740
  42a1c4:	ldr	x4, [sp, #5480]
  42a1c8:	ldr	x5, [sp, #2768]
  42a1cc:	ldr	x6, [sp, #2760]
  42a1d0:	mov	x11, xzr
  42a1d4:	mov	x7, x11
  42a1d8:	mov	x12, sp
  42a1dc:	str	x11, [x12]
  42a1e0:	mov	x11, sp
  42a1e4:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42a1e8:	add	x12, x12, #0xc81
  42a1ec:	str	x12, [x11, #8]
  42a1f0:	mov	x11, sp
  42a1f4:	ldr	x12, [sp, #2752]
  42a1f8:	str	x12, [x11, #16]
  42a1fc:	mov	x11, sp
  42a200:	str	w8, [x11, #24]
  42a204:	mov	x11, sp
  42a208:	str	x10, [x11, #32]
  42a20c:	bl	40a870 <log_object_internal@plt>
  42a210:	str	w0, [sp, #8556]
  42a214:	ldr	w8, [sp, #8556]
  42a218:	str	w8, [sp, #8588]
  42a21c:	ldr	w8, [sp, #8588]
  42a220:	stur	w8, [x29, #-4]
  42a224:	b	4300f8 <parse_token+0xbe48>
  42a228:	ldr	x8, [sp, #5512]
  42a22c:	ldr	x0, [x8, #1872]
  42a230:	ldr	x1, [x8, #1864]
  42a234:	ldr	x2, [x8, #1840]
  42a238:	mov	w9, #0x1                   	// #1
  42a23c:	and	w3, w9, #0x1
  42a240:	bl	430d00 <check_value_format_and_warn>
  42a244:	ldr	x8, [sp, #5512]
  42a248:	ldrb	w9, [x8, #1839]
  42a24c:	tbnz	w9, #0, 42a450 <parse_token+0x61a0>
  42a250:	ldr	x8, [sp, #5512]
  42a254:	ldr	x9, [x8, #1872]
  42a258:	ldr	x10, [sp, #5504]
  42a25c:	str	x9, [x10, #2888]
  42a260:	ldr	x9, [x10, #2888]
  42a264:	cbz	x9, 42a27c <parse_token+0x5fcc>
  42a268:	ldr	x8, [sp, #5504]
  42a26c:	ldr	x9, [x8, #2888]
  42a270:	ldr	x9, [x9, #32]
  42a274:	str	x9, [sp, #2736]
  42a278:	b	42a284 <parse_token+0x5fd4>
  42a27c:	mov	x8, xzr
  42a280:	str	x8, [sp, #2736]
  42a284:	ldr	x8, [sp, #2736]
  42a288:	ldr	x9, [sp, #5504]
  42a28c:	str	x8, [x9, #2880]
  42a290:	ldr	x8, [x9, #2880]
  42a294:	cbz	x8, 42a2ac <parse_token+0x5ffc>
  42a298:	ldr	x8, [sp, #5504]
  42a29c:	ldr	x9, [x8, #2880]
  42a2a0:	ldr	x9, [x9, #8]
  42a2a4:	str	x9, [sp, #2728]
  42a2a8:	b	42a2b4 <parse_token+0x6004>
  42a2ac:	mov	x8, xzr
  42a2b0:	str	x8, [sp, #2728]
  42a2b4:	ldr	x8, [sp, #2728]
  42a2b8:	ldr	x9, [sp, #5504]
  42a2bc:	str	x8, [x9, #2872]
  42a2c0:	ldr	x8, [x9, #2880]
  42a2c4:	cbz	x8, 42a2dc <parse_token+0x602c>
  42a2c8:	ldr	x8, [sp, #5504]
  42a2cc:	ldr	x9, [x8, #2880]
  42a2d0:	ldr	x9, [x9]
  42a2d4:	str	x9, [sp, #2720]
  42a2d8:	b	42a2e4 <parse_token+0x6034>
  42a2dc:	mov	x8, xzr
  42a2e0:	str	x8, [sp, #2720]
  42a2e4:	ldr	x8, [sp, #2720]
  42a2e8:	ldr	x9, [sp, #5504]
  42a2ec:	str	x8, [x9, #2864]
  42a2f0:	mov	x8, xzr
  42a2f4:	str	x8, [x9, #2848]
  42a2f8:	str	x8, [x9, #2840]
  42a2fc:	mov	w10, #0x3                   	// #3
  42a300:	str	w10, [sp, #8492]
  42a304:	mov	w10, #0x16                  	// #22
  42a308:	movk	w10, #0x4000, lsl #16
  42a30c:	str	w10, [sp, #8488]
  42a310:	ldr	x8, [x9, #2840]
  42a314:	cbz	x8, 42a35c <parse_token+0x60ac>
  42a318:	mov	w0, #0x1                   	// #1
  42a31c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42a320:	ldr	w8, [sp, #8492]
  42a324:	cmp	w0, w8
  42a328:	cset	w8, ge  // ge = tcont
  42a32c:	mov	w9, #0x1                   	// #1
  42a330:	eor	w8, w8, #0x1
  42a334:	eor	w8, w8, w9
  42a338:	and	w8, w8, #0x1
  42a33c:	mov	w1, w8
  42a340:	sxtw	x10, w1
  42a344:	cbz	x10, 42a35c <parse_token+0x60ac>
  42a348:	ldr	x8, [sp, #5504]
  42a34c:	ldr	x0, [x8, #2840]
  42a350:	add	x1, sp, #0x2, lsl #12
  42a354:	add	x1, x1, #0x138
  42a358:	bl	40a860 <sd_device_get_sysname@plt>
  42a35c:	ldr	w0, [sp, #8492]
  42a360:	ldr	w1, [sp, #8488]
  42a364:	ldr	x8, [sp, #5504]
  42a368:	ldr	x9, [x8, #2848]
  42a36c:	mov	x10, xzr
  42a370:	cmp	x9, #0x0
  42a374:	ldr	x9, [sp, #5496]
  42a378:	csel	x5, x9, x10, ne  // ne = any
  42a37c:	ldr	x6, [x8, #2848]
  42a380:	ldr	x10, [x8, #2864]
  42a384:	str	w0, [sp, #2716]
  42a388:	mov	x0, x10
  42a38c:	str	w1, [sp, #2712]
  42a390:	str	x5, [sp, #2704]
  42a394:	str	x6, [sp, #2696]
  42a398:	bl	424274 <strna>
  42a39c:	ldr	x8, [sp, #5504]
  42a3a0:	ldr	x9, [x8, #2872]
  42a3a4:	str	x0, [sp, #2688]
  42a3a8:	cbz	x9, 42a3c0 <parse_token+0x6110>
  42a3ac:	ldr	x8, [sp, #5504]
  42a3b0:	ldr	x9, [x8, #2872]
  42a3b4:	ldr	w10, [x9, #8]
  42a3b8:	str	w10, [sp, #2684]
  42a3bc:	b	42a3c8 <parse_token+0x6118>
  42a3c0:	mov	w8, wzr
  42a3c4:	str	w8, [sp, #2684]
  42a3c8:	ldr	w8, [sp, #2684]
  42a3cc:	ldr	x9, [sp, #5512]
  42a3d0:	ldr	x10, [x9, #1864]
  42a3d4:	ldr	w0, [sp, #2716]
  42a3d8:	ldr	w1, [sp, #2712]
  42a3dc:	ldr	x2, [sp, #5488]
  42a3e0:	mov	w3, #0x2e8                 	// #744
  42a3e4:	ldr	x4, [sp, #5480]
  42a3e8:	ldr	x5, [sp, #2704]
  42a3ec:	ldr	x6, [sp, #2696]
  42a3f0:	mov	x11, xzr
  42a3f4:	mov	x7, x11
  42a3f8:	mov	x12, sp
  42a3fc:	str	x11, [x12]
  42a400:	mov	x11, sp
  42a404:	ldr	x12, [sp, #5472]
  42a408:	str	x12, [x11, #8]
  42a40c:	mov	x11, sp
  42a410:	ldr	x13, [sp, #2688]
  42a414:	str	x13, [x11, #16]
  42a418:	mov	x11, sp
  42a41c:	str	w8, [x11, #24]
  42a420:	mov	x11, sp
  42a424:	ldr	x14, [sp, #5464]
  42a428:	str	x14, [x11, #32]
  42a42c:	mov	x11, sp
  42a430:	str	x10, [x11, #40]
  42a434:	bl	40a870 <log_object_internal@plt>
  42a438:	str	w0, [sp, #8484]
  42a43c:	ldr	w8, [sp, #8484]
  42a440:	str	w8, [sp, #8516]
  42a444:	ldr	w8, [sp, #8516]
  42a448:	stur	w8, [x29, #-4]
  42a44c:	b	4300f8 <parse_token+0xbe48>
  42a450:	ldr	x8, [sp, #5512]
  42a454:	ldr	x0, [x8, #1824]
  42a458:	ldur	w2, [x29, #-36]
  42a45c:	ldr	x3, [x8, #1840]
  42a460:	ldr	w9, [sp, #8624]
  42a464:	mov	w10, w9
  42a468:	add	x10, x10, #0x1
  42a46c:	mov	w1, #0x11                  	// #17
  42a470:	mov	x4, x10
  42a474:	bl	430504 <rule_line_add_token>
  42a478:	stur	w0, [x29, #-68]
  42a47c:	b	4300c4 <parse_token+0xbe14>
  42a480:	ldr	x8, [sp, #5512]
  42a484:	ldr	x0, [x8, #1864]
  42a488:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42a48c:	add	x1, x1, #0xca5
  42a490:	bl	40aa20 <strcmp@plt>
  42a494:	cbnz	w0, 42aae8 <parse_token+0x6838>
  42a498:	ldr	x8, [sp, #5512]
  42a49c:	ldr	x9, [x8, #1856]
  42a4a0:	cbz	x9, 42a6a4 <parse_token+0x63f4>
  42a4a4:	ldr	x8, [sp, #5512]
  42a4a8:	ldr	x9, [x8, #1872]
  42a4ac:	ldr	x10, [sp, #5504]
  42a4b0:	str	x9, [x10, #2816]
  42a4b4:	ldr	x9, [x10, #2816]
  42a4b8:	cbz	x9, 42a4d0 <parse_token+0x6220>
  42a4bc:	ldr	x8, [sp, #5504]
  42a4c0:	ldr	x9, [x8, #2816]
  42a4c4:	ldr	x9, [x9, #32]
  42a4c8:	str	x9, [sp, #2672]
  42a4cc:	b	42a4d8 <parse_token+0x6228>
  42a4d0:	mov	x8, xzr
  42a4d4:	str	x8, [sp, #2672]
  42a4d8:	ldr	x8, [sp, #2672]
  42a4dc:	ldr	x9, [sp, #5504]
  42a4e0:	str	x8, [x9, #2808]
  42a4e4:	ldr	x8, [x9, #2808]
  42a4e8:	cbz	x8, 42a500 <parse_token+0x6250>
  42a4ec:	ldr	x8, [sp, #5504]
  42a4f0:	ldr	x9, [x8, #2808]
  42a4f4:	ldr	x9, [x9, #8]
  42a4f8:	str	x9, [sp, #2664]
  42a4fc:	b	42a508 <parse_token+0x6258>
  42a500:	mov	x8, xzr
  42a504:	str	x8, [sp, #2664]
  42a508:	ldr	x8, [sp, #2664]
  42a50c:	ldr	x9, [sp, #5504]
  42a510:	str	x8, [x9, #2800]
  42a514:	ldr	x8, [x9, #2808]
  42a518:	cbz	x8, 42a530 <parse_token+0x6280>
  42a51c:	ldr	x8, [sp, #5504]
  42a520:	ldr	x9, [x8, #2808]
  42a524:	ldr	x9, [x9]
  42a528:	str	x9, [sp, #2656]
  42a52c:	b	42a538 <parse_token+0x6288>
  42a530:	mov	x8, xzr
  42a534:	str	x8, [sp, #2656]
  42a538:	ldr	x8, [sp, #2656]
  42a53c:	ldr	x9, [sp, #5504]
  42a540:	str	x8, [x9, #2792]
  42a544:	mov	x8, xzr
  42a548:	str	x8, [x9, #2776]
  42a54c:	str	x8, [x9, #2768]
  42a550:	mov	w10, #0x3                   	// #3
  42a554:	str	w10, [sp, #8420]
  42a558:	mov	w10, #0x16                  	// #22
  42a55c:	movk	w10, #0x4000, lsl #16
  42a560:	str	w10, [sp, #8416]
  42a564:	ldr	x8, [x9, #2768]
  42a568:	cbz	x8, 42a5b0 <parse_token+0x6300>
  42a56c:	mov	w0, #0x1                   	// #1
  42a570:	bl	40a3f0 <log_get_max_level_realm@plt>
  42a574:	ldr	w8, [sp, #8420]
  42a578:	cmp	w0, w8
  42a57c:	cset	w8, ge  // ge = tcont
  42a580:	mov	w9, #0x1                   	// #1
  42a584:	eor	w8, w8, #0x1
  42a588:	eor	w8, w8, w9
  42a58c:	and	w8, w8, #0x1
  42a590:	mov	w1, w8
  42a594:	sxtw	x10, w1
  42a598:	cbz	x10, 42a5b0 <parse_token+0x6300>
  42a59c:	ldr	x8, [sp, #5504]
  42a5a0:	ldr	x0, [x8, #2768]
  42a5a4:	add	x1, sp, #0x2, lsl #12
  42a5a8:	add	x1, x1, #0xf0
  42a5ac:	bl	40a860 <sd_device_get_sysname@plt>
  42a5b0:	ldr	w0, [sp, #8420]
  42a5b4:	ldr	w1, [sp, #8416]
  42a5b8:	ldr	x8, [sp, #5504]
  42a5bc:	ldr	x9, [x8, #2776]
  42a5c0:	mov	x10, xzr
  42a5c4:	cmp	x9, #0x0
  42a5c8:	ldr	x9, [sp, #5496]
  42a5cc:	csel	x5, x9, x10, ne  // ne = any
  42a5d0:	ldr	x6, [x8, #2776]
  42a5d4:	ldr	x10, [x8, #2792]
  42a5d8:	str	w0, [sp, #2652]
  42a5dc:	mov	x0, x10
  42a5e0:	str	w1, [sp, #2648]
  42a5e4:	str	x5, [sp, #2640]
  42a5e8:	str	x6, [sp, #2632]
  42a5ec:	bl	424274 <strna>
  42a5f0:	ldr	x8, [sp, #5504]
  42a5f4:	ldr	x9, [x8, #2800]
  42a5f8:	str	x0, [sp, #2624]
  42a5fc:	cbz	x9, 42a614 <parse_token+0x6364>
  42a600:	ldr	x8, [sp, #5504]
  42a604:	ldr	x9, [x8, #2800]
  42a608:	ldr	w10, [x9, #8]
  42a60c:	str	w10, [sp, #2620]
  42a610:	b	42a61c <parse_token+0x636c>
  42a614:	mov	w8, wzr
  42a618:	str	w8, [sp, #2620]
  42a61c:	ldr	w8, [sp, #2620]
  42a620:	ldr	x9, [sp, #5512]
  42a624:	ldr	x10, [x9, #1864]
  42a628:	ldr	w0, [sp, #2652]
  42a62c:	ldr	w1, [sp, #2648]
  42a630:	ldr	x2, [sp, #5488]
  42a634:	mov	w3, #0x2ed                 	// #749
  42a638:	ldr	x4, [sp, #5480]
  42a63c:	ldr	x5, [sp, #2640]
  42a640:	ldr	x6, [sp, #2632]
  42a644:	mov	x11, xzr
  42a648:	mov	x7, x11
  42a64c:	mov	x12, sp
  42a650:	str	x11, [x12]
  42a654:	mov	x11, sp
  42a658:	ldr	x12, [sp, #5472]
  42a65c:	str	x12, [x11, #8]
  42a660:	mov	x11, sp
  42a664:	ldr	x13, [sp, #2624]
  42a668:	str	x13, [x11, #16]
  42a66c:	mov	x11, sp
  42a670:	str	w8, [x11, #24]
  42a674:	mov	x11, sp
  42a678:	ldr	x14, [sp, #5456]
  42a67c:	str	x14, [x11, #32]
  42a680:	mov	x11, sp
  42a684:	str	x10, [x11, #40]
  42a688:	bl	40a870 <log_object_internal@plt>
  42a68c:	str	w0, [sp, #8412]
  42a690:	ldr	w8, [sp, #8412]
  42a694:	str	w8, [sp, #8444]
  42a698:	ldr	w8, [sp, #8444]
  42a69c:	stur	w8, [x29, #-4]
  42a6a0:	b	4300f8 <parse_token+0xbe48>
  42a6a4:	ldr	x8, [sp, #5512]
  42a6a8:	ldr	x0, [x8, #1872]
  42a6ac:	ldr	x1, [x8, #1864]
  42a6b0:	ldr	x2, [x8, #1840]
  42a6b4:	mov	w9, #0x1                   	// #1
  42a6b8:	and	w3, w9, #0x1
  42a6bc:	bl	430d00 <check_value_format_and_warn>
  42a6c0:	ldur	w9, [x29, #-36]
  42a6c4:	cmp	w9, #0x3
  42a6c8:	b.ne	42a8cc <parse_token+0x661c>  // b.any
  42a6cc:	ldr	x8, [sp, #5512]
  42a6d0:	ldr	x9, [x8, #1872]
  42a6d4:	ldr	x10, [sp, #5504]
  42a6d8:	str	x9, [x10, #2744]
  42a6dc:	ldr	x9, [x10, #2744]
  42a6e0:	cbz	x9, 42a6f8 <parse_token+0x6448>
  42a6e4:	ldr	x8, [sp, #5504]
  42a6e8:	ldr	x9, [x8, #2744]
  42a6ec:	ldr	x9, [x9, #32]
  42a6f0:	str	x9, [sp, #2608]
  42a6f4:	b	42a700 <parse_token+0x6450>
  42a6f8:	mov	x8, xzr
  42a6fc:	str	x8, [sp, #2608]
  42a700:	ldr	x8, [sp, #2608]
  42a704:	ldr	x9, [sp, #5504]
  42a708:	str	x8, [x9, #2736]
  42a70c:	ldr	x8, [x9, #2736]
  42a710:	cbz	x8, 42a728 <parse_token+0x6478>
  42a714:	ldr	x8, [sp, #5504]
  42a718:	ldr	x9, [x8, #2736]
  42a71c:	ldr	x9, [x9, #8]
  42a720:	str	x9, [sp, #2600]
  42a724:	b	42a730 <parse_token+0x6480>
  42a728:	mov	x8, xzr
  42a72c:	str	x8, [sp, #2600]
  42a730:	ldr	x8, [sp, #2600]
  42a734:	ldr	x9, [sp, #5504]
  42a738:	str	x8, [x9, #2728]
  42a73c:	ldr	x8, [x9, #2736]
  42a740:	cbz	x8, 42a758 <parse_token+0x64a8>
  42a744:	ldr	x8, [sp, #5504]
  42a748:	ldr	x9, [x8, #2736]
  42a74c:	ldr	x9, [x9]
  42a750:	str	x9, [sp, #2592]
  42a754:	b	42a760 <parse_token+0x64b0>
  42a758:	mov	x8, xzr
  42a75c:	str	x8, [sp, #2592]
  42a760:	ldr	x8, [sp, #2592]
  42a764:	ldr	x9, [sp, #5504]
  42a768:	str	x8, [x9, #2720]
  42a76c:	mov	x8, xzr
  42a770:	str	x8, [x9, #2704]
  42a774:	str	x8, [x9, #2696]
  42a778:	mov	w10, #0x3                   	// #3
  42a77c:	str	w10, [sp, #8348]
  42a780:	mov	w10, #0x16                  	// #22
  42a784:	movk	w10, #0x4000, lsl #16
  42a788:	str	w10, [sp, #8344]
  42a78c:	ldr	x8, [x9, #2696]
  42a790:	cbz	x8, 42a7d8 <parse_token+0x6528>
  42a794:	mov	w0, #0x1                   	// #1
  42a798:	bl	40a3f0 <log_get_max_level_realm@plt>
  42a79c:	ldr	w8, [sp, #8348]
  42a7a0:	cmp	w0, w8
  42a7a4:	cset	w8, ge  // ge = tcont
  42a7a8:	mov	w9, #0x1                   	// #1
  42a7ac:	eor	w8, w8, #0x1
  42a7b0:	eor	w8, w8, w9
  42a7b4:	and	w8, w8, #0x1
  42a7b8:	mov	w1, w8
  42a7bc:	sxtw	x10, w1
  42a7c0:	cbz	x10, 42a7d8 <parse_token+0x6528>
  42a7c4:	ldr	x8, [sp, #5504]
  42a7c8:	ldr	x0, [x8, #2696]
  42a7cc:	add	x1, sp, #0x2, lsl #12
  42a7d0:	add	x1, x1, #0xa8
  42a7d4:	bl	40a860 <sd_device_get_sysname@plt>
  42a7d8:	ldr	w0, [sp, #8348]
  42a7dc:	ldr	w1, [sp, #8344]
  42a7e0:	ldr	x8, [sp, #5504]
  42a7e4:	ldr	x9, [x8, #2704]
  42a7e8:	mov	x10, xzr
  42a7ec:	cmp	x9, #0x0
  42a7f0:	ldr	x9, [sp, #5496]
  42a7f4:	csel	x5, x9, x10, ne  // ne = any
  42a7f8:	ldr	x6, [x8, #2704]
  42a7fc:	ldr	x10, [x8, #2720]
  42a800:	str	w0, [sp, #2588]
  42a804:	mov	x0, x10
  42a808:	str	w1, [sp, #2584]
  42a80c:	str	x5, [sp, #2576]
  42a810:	str	x6, [sp, #2568]
  42a814:	bl	424274 <strna>
  42a818:	ldr	x8, [sp, #5504]
  42a81c:	ldr	x9, [x8, #2728]
  42a820:	str	x0, [sp, #2560]
  42a824:	cbz	x9, 42a83c <parse_token+0x658c>
  42a828:	ldr	x8, [sp, #5504]
  42a82c:	ldr	x9, [x8, #2728]
  42a830:	ldr	w10, [x9, #8]
  42a834:	str	w10, [sp, #2556]
  42a838:	b	42a844 <parse_token+0x6594>
  42a83c:	mov	w8, wzr
  42a840:	str	w8, [sp, #2556]
  42a844:	ldr	w8, [sp, #2556]
  42a848:	ldr	x9, [sp, #5512]
  42a84c:	ldr	x10, [x9, #1864]
  42a850:	ldr	w0, [sp, #2588]
  42a854:	ldr	w1, [sp, #2584]
  42a858:	ldr	x2, [sp, #5488]
  42a85c:	mov	w3, #0x2f0                 	// #752
  42a860:	ldr	x4, [sp, #5480]
  42a864:	ldr	x5, [sp, #2576]
  42a868:	ldr	x6, [sp, #2568]
  42a86c:	mov	x11, xzr
  42a870:	mov	x7, x11
  42a874:	mov	x12, sp
  42a878:	str	x11, [x12]
  42a87c:	mov	x11, sp
  42a880:	ldr	x12, [sp, #5472]
  42a884:	str	x12, [x11, #8]
  42a888:	mov	x11, sp
  42a88c:	ldr	x13, [sp, #2560]
  42a890:	str	x13, [x11, #16]
  42a894:	mov	x11, sp
  42a898:	str	w8, [x11, #24]
  42a89c:	mov	x11, sp
  42a8a0:	ldr	x14, [sp, #5464]
  42a8a4:	str	x14, [x11, #32]
  42a8a8:	mov	x11, sp
  42a8ac:	str	x10, [x11, #40]
  42a8b0:	bl	40a870 <log_object_internal@plt>
  42a8b4:	str	w0, [sp, #8340]
  42a8b8:	ldr	w8, [sp, #8340]
  42a8bc:	str	w8, [sp, #8372]
  42a8c0:	ldr	w8, [sp, #8372]
  42a8c4:	stur	w8, [x29, #-4]
  42a8c8:	b	4300f8 <parse_token+0xbe48>
  42a8cc:	ldr	x8, [sp, #5512]
  42a8d0:	ldrb	w9, [x8, #1839]
  42a8d4:	tbnz	w9, #0, 42aac0 <parse_token+0x6810>
  42a8d8:	ldr	x8, [sp, #5512]
  42a8dc:	ldr	x9, [x8, #1872]
  42a8e0:	ldr	x10, [sp, #5504]
  42a8e4:	str	x9, [x10, #2672]
  42a8e8:	ldr	x9, [x10, #2672]
  42a8ec:	cbz	x9, 42a904 <parse_token+0x6654>
  42a8f0:	ldr	x8, [sp, #5504]
  42a8f4:	ldr	x9, [x8, #2672]
  42a8f8:	ldr	x9, [x9, #32]
  42a8fc:	str	x9, [sp, #2544]
  42a900:	b	42a90c <parse_token+0x665c>
  42a904:	mov	x8, xzr
  42a908:	str	x8, [sp, #2544]
  42a90c:	ldr	x8, [sp, #2544]
  42a910:	ldr	x9, [sp, #5504]
  42a914:	str	x8, [x9, #2664]
  42a918:	ldr	x8, [x9, #2664]
  42a91c:	cbz	x8, 42a934 <parse_token+0x6684>
  42a920:	ldr	x8, [sp, #5504]
  42a924:	ldr	x9, [x8, #2664]
  42a928:	ldr	x9, [x9, #8]
  42a92c:	str	x9, [sp, #2536]
  42a930:	b	42a93c <parse_token+0x668c>
  42a934:	mov	x8, xzr
  42a938:	str	x8, [sp, #2536]
  42a93c:	ldr	x8, [sp, #2536]
  42a940:	ldr	x9, [sp, #5504]
  42a944:	str	x8, [x9, #2656]
  42a948:	ldr	x8, [x9, #2664]
  42a94c:	cbz	x8, 42a964 <parse_token+0x66b4>
  42a950:	ldr	x8, [sp, #5504]
  42a954:	ldr	x9, [x8, #2664]
  42a958:	ldr	x9, [x9]
  42a95c:	str	x9, [sp, #2528]
  42a960:	b	42a96c <parse_token+0x66bc>
  42a964:	mov	x8, xzr
  42a968:	str	x8, [sp, #2528]
  42a96c:	ldr	x8, [sp, #2528]
  42a970:	ldr	x9, [sp, #5504]
  42a974:	str	x8, [x9, #2648]
  42a978:	mov	x8, xzr
  42a97c:	str	x8, [x9, #2632]
  42a980:	str	x8, [x9, #2624]
  42a984:	mov	w10, #0x7                   	// #7
  42a988:	str	w10, [sp, #8276]
  42a98c:	str	wzr, [sp, #8272]
  42a990:	ldr	x8, [x9, #2624]
  42a994:	cbz	x8, 42a9dc <parse_token+0x672c>
  42a998:	mov	w0, #0x1                   	// #1
  42a99c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42a9a0:	ldr	w8, [sp, #8276]
  42a9a4:	cmp	w0, w8
  42a9a8:	cset	w8, ge  // ge = tcont
  42a9ac:	mov	w9, #0x1                   	// #1
  42a9b0:	eor	w8, w8, #0x1
  42a9b4:	eor	w8, w8, w9
  42a9b8:	and	w8, w8, #0x1
  42a9bc:	mov	w1, w8
  42a9c0:	sxtw	x10, w1
  42a9c4:	cbz	x10, 42a9dc <parse_token+0x672c>
  42a9c8:	ldr	x8, [sp, #5504]
  42a9cc:	ldr	x0, [x8, #2624]
  42a9d0:	add	x1, sp, #0x2, lsl #12
  42a9d4:	add	x1, x1, #0x60
  42a9d8:	bl	40a860 <sd_device_get_sysname@plt>
  42a9dc:	ldr	w0, [sp, #8276]
  42a9e0:	ldr	w1, [sp, #8272]
  42a9e4:	ldr	x8, [sp, #5504]
  42a9e8:	ldr	x9, [x8, #2632]
  42a9ec:	mov	x10, xzr
  42a9f0:	cmp	x9, #0x0
  42a9f4:	ldr	x9, [sp, #5496]
  42a9f8:	csel	x5, x9, x10, ne  // ne = any
  42a9fc:	ldr	x6, [x8, #2632]
  42aa00:	ldr	x10, [x8, #2648]
  42aa04:	str	w0, [sp, #2524]
  42aa08:	mov	x0, x10
  42aa0c:	str	w1, [sp, #2520]
  42aa10:	str	x5, [sp, #2512]
  42aa14:	str	x6, [sp, #2504]
  42aa18:	bl	424274 <strna>
  42aa1c:	ldr	x8, [sp, #5504]
  42aa20:	ldr	x9, [x8, #2656]
  42aa24:	str	x0, [sp, #2496]
  42aa28:	cbz	x9, 42aa40 <parse_token+0x6790>
  42aa2c:	ldr	x8, [sp, #5504]
  42aa30:	ldr	x9, [x8, #2656]
  42aa34:	ldr	w10, [x9, #8]
  42aa38:	str	w10, [sp, #2492]
  42aa3c:	b	42aa48 <parse_token+0x6798>
  42aa40:	mov	w8, wzr
  42aa44:	str	w8, [sp, #2492]
  42aa48:	ldr	w8, [sp, #2492]
  42aa4c:	ldr	x9, [sp, #5512]
  42aa50:	ldr	x10, [x9, #1864]
  42aa54:	ldr	w0, [sp, #2524]
  42aa58:	ldr	w1, [sp, #2520]
  42aa5c:	ldr	x2, [sp, #5488]
  42aa60:	mov	w3, #0x2f2                 	// #754
  42aa64:	ldr	x4, [sp, #5480]
  42aa68:	ldr	x5, [sp, #2512]
  42aa6c:	ldr	x6, [sp, #2504]
  42aa70:	mov	x11, xzr
  42aa74:	mov	x7, x11
  42aa78:	mov	x12, sp
  42aa7c:	str	x11, [x12]
  42aa80:	mov	x11, sp
  42aa84:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42aa88:	add	x12, x12, #0xcad
  42aa8c:	str	x12, [x11, #8]
  42aa90:	mov	x11, sp
  42aa94:	ldr	x12, [sp, #2496]
  42aa98:	str	x12, [x11, #16]
  42aa9c:	mov	x11, sp
  42aaa0:	str	w8, [x11, #24]
  42aaa4:	mov	x11, sp
  42aaa8:	str	x10, [x11, #32]
  42aaac:	bl	40a870 <log_object_internal@plt>
  42aab0:	str	w0, [sp, #8268]
  42aab4:	ldr	w8, [sp, #8268]
  42aab8:	str	w8, [sp, #8300]
  42aabc:	stur	wzr, [x29, #-36]
  42aac0:	ldr	x8, [sp, #5512]
  42aac4:	ldr	x0, [x8, #1824]
  42aac8:	ldur	w2, [x29, #-36]
  42aacc:	ldr	x3, [x8, #1840]
  42aad0:	mov	w1, #0x12                  	// #18
  42aad4:	mov	x9, xzr
  42aad8:	mov	x4, x9
  42aadc:	bl	430504 <rule_line_add_token>
  42aae0:	stur	w0, [x29, #-68]
  42aae4:	b	4300c4 <parse_token+0xbe14>
  42aae8:	ldr	x8, [sp, #5512]
  42aaec:	ldr	x0, [x8, #1864]
  42aaf0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42aaf4:	add	x1, x1, #0xce6
  42aaf8:	bl	40aa20 <strcmp@plt>
  42aafc:	cbnz	w0, 42b90c <parse_token+0x765c>
  42ab00:	ldr	x8, [sp, #5512]
  42ab04:	ldr	x0, [x8, #1856]
  42ab08:	bl	423ddc <isempty>
  42ab0c:	tbnz	w0, #0, 42ab14 <parse_token+0x6864>
  42ab10:	b	42ad14 <parse_token+0x6a64>
  42ab14:	ldr	x8, [sp, #5512]
  42ab18:	ldr	x9, [x8, #1872]
  42ab1c:	ldr	x10, [sp, #5504]
  42ab20:	str	x9, [x10, #2600]
  42ab24:	ldr	x9, [x10, #2600]
  42ab28:	cbz	x9, 42ab40 <parse_token+0x6890>
  42ab2c:	ldr	x8, [sp, #5504]
  42ab30:	ldr	x9, [x8, #2600]
  42ab34:	ldr	x9, [x9, #32]
  42ab38:	str	x9, [sp, #2480]
  42ab3c:	b	42ab48 <parse_token+0x6898>
  42ab40:	mov	x8, xzr
  42ab44:	str	x8, [sp, #2480]
  42ab48:	ldr	x8, [sp, #2480]
  42ab4c:	ldr	x9, [sp, #5504]
  42ab50:	str	x8, [x9, #2592]
  42ab54:	ldr	x8, [x9, #2592]
  42ab58:	cbz	x8, 42ab70 <parse_token+0x68c0>
  42ab5c:	ldr	x8, [sp, #5504]
  42ab60:	ldr	x9, [x8, #2592]
  42ab64:	ldr	x9, [x9, #8]
  42ab68:	str	x9, [sp, #2472]
  42ab6c:	b	42ab78 <parse_token+0x68c8>
  42ab70:	mov	x8, xzr
  42ab74:	str	x8, [sp, #2472]
  42ab78:	ldr	x8, [sp, #2472]
  42ab7c:	ldr	x9, [sp, #5504]
  42ab80:	str	x8, [x9, #2584]
  42ab84:	ldr	x8, [x9, #2592]
  42ab88:	cbz	x8, 42aba0 <parse_token+0x68f0>
  42ab8c:	ldr	x8, [sp, #5504]
  42ab90:	ldr	x9, [x8, #2592]
  42ab94:	ldr	x9, [x9]
  42ab98:	str	x9, [sp, #2464]
  42ab9c:	b	42aba8 <parse_token+0x68f8>
  42aba0:	mov	x8, xzr
  42aba4:	str	x8, [sp, #2464]
  42aba8:	ldr	x8, [sp, #2464]
  42abac:	ldr	x9, [sp, #5504]
  42abb0:	str	x8, [x9, #2576]
  42abb4:	mov	x8, xzr
  42abb8:	str	x8, [x9, #2560]
  42abbc:	str	x8, [x9, #2552]
  42abc0:	mov	w10, #0x3                   	// #3
  42abc4:	str	w10, [sp, #8204]
  42abc8:	mov	w10, #0x16                  	// #22
  42abcc:	movk	w10, #0x4000, lsl #16
  42abd0:	str	w10, [sp, #8200]
  42abd4:	ldr	x8, [x9, #2552]
  42abd8:	cbz	x8, 42ac20 <parse_token+0x6970>
  42abdc:	mov	w0, #0x1                   	// #1
  42abe0:	bl	40a3f0 <log_get_max_level_realm@plt>
  42abe4:	ldr	w8, [sp, #8204]
  42abe8:	cmp	w0, w8
  42abec:	cset	w8, ge  // ge = tcont
  42abf0:	mov	w9, #0x1                   	// #1
  42abf4:	eor	w8, w8, #0x1
  42abf8:	eor	w8, w8, w9
  42abfc:	and	w8, w8, #0x1
  42ac00:	mov	w1, w8
  42ac04:	sxtw	x10, w1
  42ac08:	cbz	x10, 42ac20 <parse_token+0x6970>
  42ac0c:	ldr	x8, [sp, #5504]
  42ac10:	ldr	x0, [x8, #2552]
  42ac14:	add	x1, sp, #0x2, lsl #12
  42ac18:	add	x1, x1, #0x18
  42ac1c:	bl	40a860 <sd_device_get_sysname@plt>
  42ac20:	ldr	w0, [sp, #8204]
  42ac24:	ldr	w1, [sp, #8200]
  42ac28:	ldr	x8, [sp, #5504]
  42ac2c:	ldr	x9, [x8, #2560]
  42ac30:	mov	x10, xzr
  42ac34:	cmp	x9, #0x0
  42ac38:	ldr	x9, [sp, #5496]
  42ac3c:	csel	x5, x9, x10, ne  // ne = any
  42ac40:	ldr	x6, [x8, #2560]
  42ac44:	ldr	x10, [x8, #2576]
  42ac48:	str	w0, [sp, #2460]
  42ac4c:	mov	x0, x10
  42ac50:	str	w1, [sp, #2456]
  42ac54:	str	x5, [sp, #2448]
  42ac58:	str	x6, [sp, #2440]
  42ac5c:	bl	424274 <strna>
  42ac60:	ldr	x8, [sp, #5504]
  42ac64:	ldr	x9, [x8, #2584]
  42ac68:	str	x0, [sp, #2432]
  42ac6c:	cbz	x9, 42ac84 <parse_token+0x69d4>
  42ac70:	ldr	x8, [sp, #5504]
  42ac74:	ldr	x9, [x8, #2584]
  42ac78:	ldr	w10, [x9, #8]
  42ac7c:	str	w10, [sp, #2428]
  42ac80:	b	42ac8c <parse_token+0x69dc>
  42ac84:	mov	w8, wzr
  42ac88:	str	w8, [sp, #2428]
  42ac8c:	ldr	w8, [sp, #2428]
  42ac90:	ldr	x9, [sp, #5512]
  42ac94:	ldr	x10, [x9, #1864]
  42ac98:	ldr	w0, [sp, #2460]
  42ac9c:	ldr	w1, [sp, #2456]
  42aca0:	ldr	x2, [sp, #5488]
  42aca4:	mov	w3, #0x2f9                 	// #761
  42aca8:	ldr	x4, [sp, #5480]
  42acac:	ldr	x5, [sp, #2448]
  42acb0:	ldr	x6, [sp, #2440]
  42acb4:	mov	x11, xzr
  42acb8:	mov	x7, x11
  42acbc:	mov	x12, sp
  42acc0:	str	x11, [x12]
  42acc4:	mov	x11, sp
  42acc8:	ldr	x12, [sp, #5472]
  42accc:	str	x12, [x11, #8]
  42acd0:	mov	x11, sp
  42acd4:	ldr	x13, [sp, #2432]
  42acd8:	str	x13, [x11, #16]
  42acdc:	mov	x11, sp
  42ace0:	str	w8, [x11, #24]
  42ace4:	mov	x11, sp
  42ace8:	ldr	x14, [sp, #5456]
  42acec:	str	x14, [x11, #32]
  42acf0:	mov	x11, sp
  42acf4:	str	x10, [x11, #40]
  42acf8:	bl	40a870 <log_object_internal@plt>
  42acfc:	str	w0, [sp, #8196]
  42ad00:	ldr	w8, [sp, #8196]
  42ad04:	str	w8, [sp, #8228]
  42ad08:	ldr	w8, [sp, #8228]
  42ad0c:	stur	w8, [x29, #-4]
  42ad10:	b	4300f8 <parse_token+0xbe48>
  42ad14:	ldr	x8, [sp, #5512]
  42ad18:	ldr	x0, [x8, #1872]
  42ad1c:	ldr	x1, [x8, #1864]
  42ad20:	ldr	x2, [x8, #1840]
  42ad24:	mov	w9, #0x1                   	// #1
  42ad28:	and	w3, w9, #0x1
  42ad2c:	bl	430d00 <check_value_format_and_warn>
  42ad30:	ldur	w9, [x29, #-36]
  42ad34:	cmp	w9, #0x3
  42ad38:	b.ne	42af3c <parse_token+0x6c8c>  // b.any
  42ad3c:	ldr	x8, [sp, #5512]
  42ad40:	ldr	x9, [x8, #1872]
  42ad44:	ldr	x10, [sp, #5504]
  42ad48:	str	x9, [x10, #2528]
  42ad4c:	ldr	x9, [x10, #2528]
  42ad50:	cbz	x9, 42ad68 <parse_token+0x6ab8>
  42ad54:	ldr	x8, [sp, #5504]
  42ad58:	ldr	x9, [x8, #2528]
  42ad5c:	ldr	x9, [x9, #32]
  42ad60:	str	x9, [sp, #2416]
  42ad64:	b	42ad70 <parse_token+0x6ac0>
  42ad68:	mov	x8, xzr
  42ad6c:	str	x8, [sp, #2416]
  42ad70:	ldr	x8, [sp, #2416]
  42ad74:	ldr	x9, [sp, #5504]
  42ad78:	str	x8, [x9, #2520]
  42ad7c:	ldr	x8, [x9, #2520]
  42ad80:	cbz	x8, 42ad98 <parse_token+0x6ae8>
  42ad84:	ldr	x8, [sp, #5504]
  42ad88:	ldr	x9, [x8, #2520]
  42ad8c:	ldr	x9, [x9, #8]
  42ad90:	str	x9, [sp, #2408]
  42ad94:	b	42ada0 <parse_token+0x6af0>
  42ad98:	mov	x8, xzr
  42ad9c:	str	x8, [sp, #2408]
  42ada0:	ldr	x8, [sp, #2408]
  42ada4:	ldr	x9, [sp, #5504]
  42ada8:	str	x8, [x9, #2512]
  42adac:	ldr	x8, [x9, #2520]
  42adb0:	cbz	x8, 42adc8 <parse_token+0x6b18>
  42adb4:	ldr	x8, [sp, #5504]
  42adb8:	ldr	x9, [x8, #2520]
  42adbc:	ldr	x9, [x9]
  42adc0:	str	x9, [sp, #2400]
  42adc4:	b	42add0 <parse_token+0x6b20>
  42adc8:	mov	x8, xzr
  42adcc:	str	x8, [sp, #2400]
  42add0:	ldr	x8, [sp, #2400]
  42add4:	ldr	x9, [sp, #5504]
  42add8:	str	x8, [x9, #2504]
  42addc:	mov	x8, xzr
  42ade0:	str	x8, [x9, #2488]
  42ade4:	str	x8, [x9, #2480]
  42ade8:	mov	w10, #0x3                   	// #3
  42adec:	str	w10, [sp, #8132]
  42adf0:	mov	w10, #0x16                  	// #22
  42adf4:	movk	w10, #0x4000, lsl #16
  42adf8:	str	w10, [sp, #8128]
  42adfc:	ldr	x8, [x9, #2480]
  42ae00:	cbz	x8, 42ae48 <parse_token+0x6b98>
  42ae04:	mov	w0, #0x1                   	// #1
  42ae08:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ae0c:	ldr	w8, [sp, #8132]
  42ae10:	cmp	w0, w8
  42ae14:	cset	w8, ge  // ge = tcont
  42ae18:	mov	w9, #0x1                   	// #1
  42ae1c:	eor	w8, w8, #0x1
  42ae20:	eor	w8, w8, w9
  42ae24:	and	w8, w8, #0x1
  42ae28:	mov	w1, w8
  42ae2c:	sxtw	x10, w1
  42ae30:	cbz	x10, 42ae48 <parse_token+0x6b98>
  42ae34:	ldr	x8, [sp, #5504]
  42ae38:	ldr	x0, [x8, #2480]
  42ae3c:	add	x1, sp, #0x1, lsl #12
  42ae40:	add	x1, x1, #0xfd0
  42ae44:	bl	40a860 <sd_device_get_sysname@plt>
  42ae48:	ldr	w0, [sp, #8132]
  42ae4c:	ldr	w1, [sp, #8128]
  42ae50:	ldr	x8, [sp, #5504]
  42ae54:	ldr	x9, [x8, #2488]
  42ae58:	mov	x10, xzr
  42ae5c:	cmp	x9, #0x0
  42ae60:	ldr	x9, [sp, #5496]
  42ae64:	csel	x5, x9, x10, ne  // ne = any
  42ae68:	ldr	x6, [x8, #2488]
  42ae6c:	ldr	x10, [x8, #2504]
  42ae70:	str	w0, [sp, #2396]
  42ae74:	mov	x0, x10
  42ae78:	str	w1, [sp, #2392]
  42ae7c:	str	x5, [sp, #2384]
  42ae80:	str	x6, [sp, #2376]
  42ae84:	bl	424274 <strna>
  42ae88:	ldr	x8, [sp, #5504]
  42ae8c:	ldr	x9, [x8, #2512]
  42ae90:	str	x0, [sp, #2368]
  42ae94:	cbz	x9, 42aeac <parse_token+0x6bfc>
  42ae98:	ldr	x8, [sp, #5504]
  42ae9c:	ldr	x9, [x8, #2512]
  42aea0:	ldr	w10, [x9, #8]
  42aea4:	str	w10, [sp, #2364]
  42aea8:	b	42aeb4 <parse_token+0x6c04>
  42aeac:	mov	w8, wzr
  42aeb0:	str	w8, [sp, #2364]
  42aeb4:	ldr	w8, [sp, #2364]
  42aeb8:	ldr	x9, [sp, #5512]
  42aebc:	ldr	x10, [x9, #1864]
  42aec0:	ldr	w0, [sp, #2396]
  42aec4:	ldr	w1, [sp, #2392]
  42aec8:	ldr	x2, [sp, #5488]
  42aecc:	mov	w3, #0x2fc                 	// #764
  42aed0:	ldr	x4, [sp, #5480]
  42aed4:	ldr	x5, [sp, #2384]
  42aed8:	ldr	x6, [sp, #2376]
  42aedc:	mov	x11, xzr
  42aee0:	mov	x7, x11
  42aee4:	mov	x12, sp
  42aee8:	str	x11, [x12]
  42aeec:	mov	x11, sp
  42aef0:	ldr	x12, [sp, #5472]
  42aef4:	str	x12, [x11, #8]
  42aef8:	mov	x11, sp
  42aefc:	ldr	x13, [sp, #2368]
  42af00:	str	x13, [x11, #16]
  42af04:	mov	x11, sp
  42af08:	str	w8, [x11, #24]
  42af0c:	mov	x11, sp
  42af10:	ldr	x14, [sp, #5464]
  42af14:	str	x14, [x11, #32]
  42af18:	mov	x11, sp
  42af1c:	str	x10, [x11, #40]
  42af20:	bl	40a870 <log_object_internal@plt>
  42af24:	str	w0, [sp, #8124]
  42af28:	ldr	w8, [sp, #8124]
  42af2c:	str	w8, [sp, #8156]
  42af30:	ldr	w8, [sp, #8156]
  42af34:	stur	w8, [x29, #-4]
  42af38:	b	4300f8 <parse_token+0xbe48>
  42af3c:	ldr	x8, [sp, #5512]
  42af40:	ldrb	w9, [x8, #1839]
  42af44:	tbnz	w9, #0, 42b130 <parse_token+0x6e80>
  42af48:	ldr	x8, [sp, #5512]
  42af4c:	ldr	x9, [x8, #1872]
  42af50:	ldr	x10, [sp, #5504]
  42af54:	str	x9, [x10, #2456]
  42af58:	ldr	x9, [x10, #2456]
  42af5c:	cbz	x9, 42af74 <parse_token+0x6cc4>
  42af60:	ldr	x8, [sp, #5504]
  42af64:	ldr	x9, [x8, #2456]
  42af68:	ldr	x9, [x9, #32]
  42af6c:	str	x9, [sp, #2352]
  42af70:	b	42af7c <parse_token+0x6ccc>
  42af74:	mov	x8, xzr
  42af78:	str	x8, [sp, #2352]
  42af7c:	ldr	x8, [sp, #2352]
  42af80:	ldr	x9, [sp, #5504]
  42af84:	str	x8, [x9, #2448]
  42af88:	ldr	x8, [x9, #2448]
  42af8c:	cbz	x8, 42afa4 <parse_token+0x6cf4>
  42af90:	ldr	x8, [sp, #5504]
  42af94:	ldr	x9, [x8, #2448]
  42af98:	ldr	x9, [x9, #8]
  42af9c:	str	x9, [sp, #2344]
  42afa0:	b	42afac <parse_token+0x6cfc>
  42afa4:	mov	x8, xzr
  42afa8:	str	x8, [sp, #2344]
  42afac:	ldr	x8, [sp, #2344]
  42afb0:	ldr	x9, [sp, #5504]
  42afb4:	str	x8, [x9, #2440]
  42afb8:	ldr	x8, [x9, #2448]
  42afbc:	cbz	x8, 42afd4 <parse_token+0x6d24>
  42afc0:	ldr	x8, [sp, #5504]
  42afc4:	ldr	x9, [x8, #2448]
  42afc8:	ldr	x9, [x9]
  42afcc:	str	x9, [sp, #2336]
  42afd0:	b	42afdc <parse_token+0x6d2c>
  42afd4:	mov	x8, xzr
  42afd8:	str	x8, [sp, #2336]
  42afdc:	ldr	x8, [sp, #2336]
  42afe0:	ldr	x9, [sp, #5504]
  42afe4:	str	x8, [x9, #2432]
  42afe8:	mov	x8, xzr
  42afec:	str	x8, [x9, #2416]
  42aff0:	str	x8, [x9, #2408]
  42aff4:	mov	w10, #0x7                   	// #7
  42aff8:	str	w10, [sp, #8060]
  42affc:	str	wzr, [sp, #8056]
  42b000:	ldr	x8, [x9, #2408]
  42b004:	cbz	x8, 42b04c <parse_token+0x6d9c>
  42b008:	mov	w0, #0x1                   	// #1
  42b00c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42b010:	ldr	w8, [sp, #8060]
  42b014:	cmp	w0, w8
  42b018:	cset	w8, ge  // ge = tcont
  42b01c:	mov	w9, #0x1                   	// #1
  42b020:	eor	w8, w8, #0x1
  42b024:	eor	w8, w8, w9
  42b028:	and	w8, w8, #0x1
  42b02c:	mov	w1, w8
  42b030:	sxtw	x10, w1
  42b034:	cbz	x10, 42b04c <parse_token+0x6d9c>
  42b038:	ldr	x8, [sp, #5504]
  42b03c:	ldr	x0, [x8, #2408]
  42b040:	add	x1, sp, #0x1, lsl #12
  42b044:	add	x1, x1, #0xf88
  42b048:	bl	40a860 <sd_device_get_sysname@plt>
  42b04c:	ldr	w0, [sp, #8060]
  42b050:	ldr	w1, [sp, #8056]
  42b054:	ldr	x8, [sp, #5504]
  42b058:	ldr	x9, [x8, #2416]
  42b05c:	mov	x10, xzr
  42b060:	cmp	x9, #0x0
  42b064:	ldr	x9, [sp, #5496]
  42b068:	csel	x5, x9, x10, ne  // ne = any
  42b06c:	ldr	x6, [x8, #2416]
  42b070:	ldr	x10, [x8, #2432]
  42b074:	str	w0, [sp, #2332]
  42b078:	mov	x0, x10
  42b07c:	str	w1, [sp, #2328]
  42b080:	str	x5, [sp, #2320]
  42b084:	str	x6, [sp, #2312]
  42b088:	bl	424274 <strna>
  42b08c:	ldr	x8, [sp, #5504]
  42b090:	ldr	x9, [x8, #2440]
  42b094:	str	x0, [sp, #2304]
  42b098:	cbz	x9, 42b0b0 <parse_token+0x6e00>
  42b09c:	ldr	x8, [sp, #5504]
  42b0a0:	ldr	x9, [x8, #2440]
  42b0a4:	ldr	w10, [x9, #8]
  42b0a8:	str	w10, [sp, #2300]
  42b0ac:	b	42b0b8 <parse_token+0x6e08>
  42b0b0:	mov	w8, wzr
  42b0b4:	str	w8, [sp, #2300]
  42b0b8:	ldr	w8, [sp, #2300]
  42b0bc:	ldr	x9, [sp, #5512]
  42b0c0:	ldr	x10, [x9, #1864]
  42b0c4:	ldr	w0, [sp, #2332]
  42b0c8:	ldr	w1, [sp, #2328]
  42b0cc:	ldr	x2, [sp, #5488]
  42b0d0:	mov	w3, #0x2fe                 	// #766
  42b0d4:	ldr	x4, [sp, #5480]
  42b0d8:	ldr	x5, [sp, #2320]
  42b0dc:	ldr	x6, [sp, #2312]
  42b0e0:	mov	x11, xzr
  42b0e4:	mov	x7, x11
  42b0e8:	mov	x12, sp
  42b0ec:	str	x11, [x12]
  42b0f0:	mov	x11, sp
  42b0f4:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42b0f8:	add	x12, x12, #0xcad
  42b0fc:	str	x12, [x11, #8]
  42b100:	mov	x11, sp
  42b104:	ldr	x12, [sp, #2304]
  42b108:	str	x12, [x11, #16]
  42b10c:	mov	x11, sp
  42b110:	str	w8, [x11, #24]
  42b114:	mov	x11, sp
  42b118:	str	x10, [x11, #32]
  42b11c:	bl	40a870 <log_object_internal@plt>
  42b120:	str	w0, [sp, #8052]
  42b124:	ldr	w8, [sp, #8052]
  42b128:	str	w8, [sp, #8084]
  42b12c:	stur	wzr, [x29, #-36]
  42b130:	ldr	x8, [sp, #5512]
  42b134:	ldr	x0, [x8, #1856]
  42b138:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b13c:	add	x1, x1, #0xced
  42b140:	bl	40aa20 <strcmp@plt>
  42b144:	cbnz	w0, 42b170 <parse_token+0x6ec0>
  42b148:	ldr	x8, [sp, #5512]
  42b14c:	ldr	x0, [x8, #1824]
  42b150:	ldur	w2, [x29, #-36]
  42b154:	ldr	x3, [x8, #1840]
  42b158:	mov	w1, #0x13                  	// #19
  42b15c:	mov	x9, xzr
  42b160:	mov	x4, x9
  42b164:	bl	430504 <rule_line_add_token>
  42b168:	stur	w0, [x29, #-68]
  42b16c:	b	42b908 <parse_token+0x7658>
  42b170:	ldr	x8, [sp, #5512]
  42b174:	ldr	x0, [x8, #1856]
  42b178:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b17c:	add	x1, x1, #0xcf2
  42b180:	bl	40aa20 <strcmp@plt>
  42b184:	cbnz	w0, 42b3ec <parse_token+0x713c>
  42b188:	ldr	x8, [sp, #5512]
  42b18c:	ldr	x0, [x8, #1840]
  42b190:	bl	43e74c <udev_builtin_lookup>
  42b194:	str	w0, [sp, #8048]
  42b198:	ldr	w9, [sp, #8048]
  42b19c:	cmp	w9, #0x0
  42b1a0:	cset	w9, lt  // lt = tstop
  42b1a4:	tbnz	w9, #0, 42b3c4 <parse_token+0x7114>
  42b1a8:	ldr	x8, [sp, #5512]
  42b1ac:	ldr	x9, [x8, #1872]
  42b1b0:	ldr	x10, [sp, #5504]
  42b1b4:	str	x9, [x10, #2384]
  42b1b8:	ldr	x9, [x10, #2384]
  42b1bc:	cbz	x9, 42b1d4 <parse_token+0x6f24>
  42b1c0:	ldr	x8, [sp, #5504]
  42b1c4:	ldr	x9, [x8, #2384]
  42b1c8:	ldr	x9, [x9, #32]
  42b1cc:	str	x9, [sp, #2288]
  42b1d0:	b	42b1dc <parse_token+0x6f2c>
  42b1d4:	mov	x8, xzr
  42b1d8:	str	x8, [sp, #2288]
  42b1dc:	ldr	x8, [sp, #2288]
  42b1e0:	ldr	x9, [sp, #5504]
  42b1e4:	str	x8, [x9, #2376]
  42b1e8:	ldr	x8, [x9, #2376]
  42b1ec:	cbz	x8, 42b204 <parse_token+0x6f54>
  42b1f0:	ldr	x8, [sp, #5504]
  42b1f4:	ldr	x9, [x8, #2376]
  42b1f8:	ldr	x9, [x9, #8]
  42b1fc:	str	x9, [sp, #2280]
  42b200:	b	42b20c <parse_token+0x6f5c>
  42b204:	mov	x8, xzr
  42b208:	str	x8, [sp, #2280]
  42b20c:	ldr	x8, [sp, #2280]
  42b210:	ldr	x9, [sp, #5504]
  42b214:	str	x8, [x9, #2368]
  42b218:	ldr	x8, [x9, #2376]
  42b21c:	cbz	x8, 42b234 <parse_token+0x6f84>
  42b220:	ldr	x8, [sp, #5504]
  42b224:	ldr	x9, [x8, #2376]
  42b228:	ldr	x9, [x9]
  42b22c:	str	x9, [sp, #2272]
  42b230:	b	42b23c <parse_token+0x6f8c>
  42b234:	mov	x8, xzr
  42b238:	str	x8, [sp, #2272]
  42b23c:	ldr	x8, [sp, #2272]
  42b240:	ldr	x9, [sp, #5504]
  42b244:	str	x8, [x9, #2360]
  42b248:	mov	x8, xzr
  42b24c:	str	x8, [x9, #2344]
  42b250:	str	x8, [x9, #2336]
  42b254:	mov	w10, #0x7                   	// #7
  42b258:	str	w10, [sp, #7988]
  42b25c:	str	wzr, [sp, #7984]
  42b260:	ldr	x8, [x9, #2336]
  42b264:	cbz	x8, 42b2ac <parse_token+0x6ffc>
  42b268:	mov	w0, #0x1                   	// #1
  42b26c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42b270:	ldr	w8, [sp, #7988]
  42b274:	cmp	w0, w8
  42b278:	cset	w8, ge  // ge = tcont
  42b27c:	mov	w9, #0x1                   	// #1
  42b280:	eor	w8, w8, #0x1
  42b284:	eor	w8, w8, w9
  42b288:	and	w8, w8, #0x1
  42b28c:	mov	w1, w8
  42b290:	sxtw	x10, w1
  42b294:	cbz	x10, 42b2ac <parse_token+0x6ffc>
  42b298:	ldr	x8, [sp, #5504]
  42b29c:	ldr	x0, [x8, #2336]
  42b2a0:	add	x1, sp, #0x1, lsl #12
  42b2a4:	add	x1, x1, #0xf40
  42b2a8:	bl	40a860 <sd_device_get_sysname@plt>
  42b2ac:	ldr	w0, [sp, #7988]
  42b2b0:	ldr	w1, [sp, #7984]
  42b2b4:	ldr	x8, [sp, #5504]
  42b2b8:	ldr	x9, [x8, #2344]
  42b2bc:	mov	x10, xzr
  42b2c0:	cmp	x9, #0x0
  42b2c4:	ldr	x9, [sp, #5496]
  42b2c8:	csel	x5, x9, x10, ne  // ne = any
  42b2cc:	ldr	x6, [x8, #2344]
  42b2d0:	ldr	x10, [x8, #2360]
  42b2d4:	str	w0, [sp, #2268]
  42b2d8:	mov	x0, x10
  42b2dc:	str	w1, [sp, #2264]
  42b2e0:	str	x5, [sp, #2256]
  42b2e4:	str	x6, [sp, #2248]
  42b2e8:	bl	424274 <strna>
  42b2ec:	ldr	x8, [sp, #5504]
  42b2f0:	ldr	x9, [x8, #2368]
  42b2f4:	str	x0, [sp, #2240]
  42b2f8:	cbz	x9, 42b310 <parse_token+0x7060>
  42b2fc:	ldr	x8, [sp, #5504]
  42b300:	ldr	x9, [x8, #2368]
  42b304:	ldr	w10, [x9, #8]
  42b308:	str	w10, [sp, #2236]
  42b30c:	b	42b318 <parse_token+0x7068>
  42b310:	mov	w8, wzr
  42b314:	str	w8, [sp, #2236]
  42b318:	ldr	w8, [sp, #2236]
  42b31c:	ldr	x9, [sp, #5512]
  42b320:	ldr	x10, [x9, #1840]
  42b324:	ldr	x11, [x9, #1864]
  42b328:	ldr	w0, [sp, #2268]
  42b32c:	ldr	w1, [sp, #2264]
  42b330:	ldr	x2, [sp, #5488]
  42b334:	mov	w3, #0x309                 	// #777
  42b338:	ldr	x4, [sp, #5480]
  42b33c:	ldr	x5, [sp, #2256]
  42b340:	ldr	x6, [sp, #2248]
  42b344:	mov	x12, xzr
  42b348:	mov	x7, x12
  42b34c:	mov	x13, sp
  42b350:	str	x12, [x13]
  42b354:	mov	x12, sp
  42b358:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  42b35c:	add	x13, x13, #0xcfa
  42b360:	str	x13, [x12, #8]
  42b364:	mov	x12, sp
  42b368:	ldr	x13, [sp, #2240]
  42b36c:	str	x13, [x12, #16]
  42b370:	mov	x12, sp
  42b374:	str	w8, [x12, #24]
  42b378:	mov	x12, sp
  42b37c:	str	x10, [x12, #32]
  42b380:	mov	x10, sp
  42b384:	str	x11, [x10, #40]
  42b388:	bl	40a870 <log_object_internal@plt>
  42b38c:	str	w0, [sp, #7980]
  42b390:	ldr	w8, [sp, #7980]
  42b394:	str	w8, [sp, #8012]
  42b398:	ldr	x9, [sp, #5512]
  42b39c:	ldr	x0, [x9, #1824]
  42b3a0:	ldur	w2, [x29, #-36]
  42b3a4:	ldr	x3, [x9, #1840]
  42b3a8:	ldrsw	x10, [sp, #8048]
  42b3ac:	add	x10, x10, #0x1
  42b3b0:	mov	w1, #0x15                  	// #21
  42b3b4:	mov	x4, x10
  42b3b8:	bl	430504 <rule_line_add_token>
  42b3bc:	stur	w0, [x29, #-68]
  42b3c0:	b	42b3e8 <parse_token+0x7138>
  42b3c4:	ldr	x8, [sp, #5512]
  42b3c8:	ldr	x0, [x8, #1824]
  42b3cc:	ldur	w2, [x29, #-36]
  42b3d0:	ldr	x3, [x8, #1840]
  42b3d4:	mov	w1, #0x14                  	// #20
  42b3d8:	mov	x9, xzr
  42b3dc:	mov	x4, x9
  42b3e0:	bl	430504 <rule_line_add_token>
  42b3e4:	stur	w0, [x29, #-68]
  42b3e8:	b	42b908 <parse_token+0x7658>
  42b3ec:	ldr	x8, [sp, #5512]
  42b3f0:	ldr	x0, [x8, #1856]
  42b3f4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b3f8:	add	x1, x1, #0xd37
  42b3fc:	bl	40aa20 <strcmp@plt>
  42b400:	cbnz	w0, 42b648 <parse_token+0x7398>
  42b404:	ldr	x8, [sp, #5512]
  42b408:	ldr	x0, [x8, #1840]
  42b40c:	bl	43e74c <udev_builtin_lookup>
  42b410:	str	w0, [sp, #7976]
  42b414:	ldr	w9, [sp, #7976]
  42b418:	cmp	w9, #0x0
  42b41c:	cset	w9, ge  // ge = tcont
  42b420:	tbnz	w9, #0, 42b61c <parse_token+0x736c>
  42b424:	ldr	x8, [sp, #5512]
  42b428:	ldr	x9, [x8, #1872]
  42b42c:	ldr	x10, [sp, #5504]
  42b430:	str	x9, [x10, #2312]
  42b434:	ldr	x9, [x10, #2312]
  42b438:	cbz	x9, 42b450 <parse_token+0x71a0>
  42b43c:	ldr	x8, [sp, #5504]
  42b440:	ldr	x9, [x8, #2312]
  42b444:	ldr	x9, [x9, #32]
  42b448:	str	x9, [sp, #2224]
  42b44c:	b	42b458 <parse_token+0x71a8>
  42b450:	mov	x8, xzr
  42b454:	str	x8, [sp, #2224]
  42b458:	ldr	x8, [sp, #2224]
  42b45c:	ldr	x9, [sp, #5504]
  42b460:	str	x8, [x9, #2304]
  42b464:	ldr	x8, [x9, #2304]
  42b468:	cbz	x8, 42b480 <parse_token+0x71d0>
  42b46c:	ldr	x8, [sp, #5504]
  42b470:	ldr	x9, [x8, #2304]
  42b474:	ldr	x9, [x9, #8]
  42b478:	str	x9, [sp, #2216]
  42b47c:	b	42b488 <parse_token+0x71d8>
  42b480:	mov	x8, xzr
  42b484:	str	x8, [sp, #2216]
  42b488:	ldr	x8, [sp, #2216]
  42b48c:	ldr	x9, [sp, #5504]
  42b490:	str	x8, [x9, #2296]
  42b494:	ldr	x8, [x9, #2304]
  42b498:	cbz	x8, 42b4b0 <parse_token+0x7200>
  42b49c:	ldr	x8, [sp, #5504]
  42b4a0:	ldr	x9, [x8, #2304]
  42b4a4:	ldr	x9, [x9]
  42b4a8:	str	x9, [sp, #2208]
  42b4ac:	b	42b4b8 <parse_token+0x7208>
  42b4b0:	mov	x8, xzr
  42b4b4:	str	x8, [sp, #2208]
  42b4b8:	ldr	x8, [sp, #2208]
  42b4bc:	ldr	x9, [sp, #5504]
  42b4c0:	str	x8, [x9, #2288]
  42b4c4:	mov	x8, xzr
  42b4c8:	str	x8, [x9, #2272]
  42b4cc:	str	x8, [x9, #2264]
  42b4d0:	mov	w10, #0x3                   	// #3
  42b4d4:	str	w10, [sp, #7916]
  42b4d8:	mov	w10, #0x16                  	// #22
  42b4dc:	movk	w10, #0x4000, lsl #16
  42b4e0:	str	w10, [sp, #7912]
  42b4e4:	ldr	x8, [x9, #2264]
  42b4e8:	cbz	x8, 42b530 <parse_token+0x7280>
  42b4ec:	mov	w0, #0x1                   	// #1
  42b4f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  42b4f4:	ldr	w8, [sp, #7916]
  42b4f8:	cmp	w0, w8
  42b4fc:	cset	w8, ge  // ge = tcont
  42b500:	mov	w9, #0x1                   	// #1
  42b504:	eor	w8, w8, #0x1
  42b508:	eor	w8, w8, w9
  42b50c:	and	w8, w8, #0x1
  42b510:	mov	w1, w8
  42b514:	sxtw	x10, w1
  42b518:	cbz	x10, 42b530 <parse_token+0x7280>
  42b51c:	ldr	x8, [sp, #5504]
  42b520:	ldr	x0, [x8, #2264]
  42b524:	add	x1, sp, #0x1, lsl #12
  42b528:	add	x1, x1, #0xef8
  42b52c:	bl	40a860 <sd_device_get_sysname@plt>
  42b530:	ldr	w0, [sp, #7916]
  42b534:	ldr	w1, [sp, #7912]
  42b538:	ldr	x8, [sp, #5504]
  42b53c:	ldr	x9, [x8, #2272]
  42b540:	mov	x10, xzr
  42b544:	cmp	x9, #0x0
  42b548:	ldr	x9, [sp, #5496]
  42b54c:	csel	x5, x9, x10, ne  // ne = any
  42b550:	ldr	x6, [x8, #2272]
  42b554:	ldr	x10, [x8, #2288]
  42b558:	str	w0, [sp, #2204]
  42b55c:	mov	x0, x10
  42b560:	str	w1, [sp, #2200]
  42b564:	str	x5, [sp, #2192]
  42b568:	str	x6, [sp, #2184]
  42b56c:	bl	424274 <strna>
  42b570:	ldr	x8, [sp, #5504]
  42b574:	ldr	x9, [x8, #2296]
  42b578:	str	x0, [sp, #2176]
  42b57c:	cbz	x9, 42b594 <parse_token+0x72e4>
  42b580:	ldr	x8, [sp, #5504]
  42b584:	ldr	x9, [x8, #2296]
  42b588:	ldr	w10, [x9, #8]
  42b58c:	str	w10, [sp, #2172]
  42b590:	b	42b59c <parse_token+0x72ec>
  42b594:	mov	w8, wzr
  42b598:	str	w8, [sp, #2172]
  42b59c:	ldr	w8, [sp, #2172]
  42b5a0:	ldr	x9, [sp, #5512]
  42b5a4:	ldr	x10, [x9, #1840]
  42b5a8:	ldr	w0, [sp, #2204]
  42b5ac:	ldr	w1, [sp, #2200]
  42b5b0:	ldr	x2, [sp, #5488]
  42b5b4:	mov	w3, #0x313                 	// #787
  42b5b8:	ldr	x4, [sp, #5480]
  42b5bc:	ldr	x5, [sp, #2192]
  42b5c0:	ldr	x6, [sp, #2184]
  42b5c4:	mov	x11, xzr
  42b5c8:	mov	x7, x11
  42b5cc:	mov	x12, sp
  42b5d0:	str	x11, [x12]
  42b5d4:	mov	x11, sp
  42b5d8:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42b5dc:	add	x12, x12, #0xd3f
  42b5e0:	str	x12, [x11, #8]
  42b5e4:	mov	x11, sp
  42b5e8:	ldr	x12, [sp, #2176]
  42b5ec:	str	x12, [x11, #16]
  42b5f0:	mov	x11, sp
  42b5f4:	str	w8, [x11, #24]
  42b5f8:	mov	x11, sp
  42b5fc:	str	x10, [x11, #32]
  42b600:	bl	40a870 <log_object_internal@plt>
  42b604:	str	w0, [sp, #7908]
  42b608:	ldr	w8, [sp, #7908]
  42b60c:	str	w8, [sp, #7940]
  42b610:	ldr	w8, [sp, #7940]
  42b614:	stur	w8, [x29, #-4]
  42b618:	b	4300f8 <parse_token+0xbe48>
  42b61c:	ldr	x8, [sp, #5512]
  42b620:	ldr	x0, [x8, #1824]
  42b624:	ldur	w2, [x29, #-36]
  42b628:	ldr	x3, [x8, #1840]
  42b62c:	ldrsw	x9, [sp, #7976]
  42b630:	add	x9, x9, #0x1
  42b634:	mov	w1, #0x15                  	// #21
  42b638:	mov	x4, x9
  42b63c:	bl	430504 <rule_line_add_token>
  42b640:	stur	w0, [x29, #-68]
  42b644:	b	42b908 <parse_token+0x7658>
  42b648:	ldr	x8, [sp, #5512]
  42b64c:	ldr	x0, [x8, #1856]
  42b650:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b654:	add	x1, x1, #0xd61
  42b658:	bl	40aa20 <strcmp@plt>
  42b65c:	cbnz	w0, 42b688 <parse_token+0x73d8>
  42b660:	ldr	x8, [sp, #5512]
  42b664:	ldr	x0, [x8, #1824]
  42b668:	ldur	w2, [x29, #-36]
  42b66c:	ldr	x3, [x8, #1840]
  42b670:	mov	w1, #0x16                  	// #22
  42b674:	mov	x9, xzr
  42b678:	mov	x4, x9
  42b67c:	bl	430504 <rule_line_add_token>
  42b680:	stur	w0, [x29, #-68]
  42b684:	b	42b908 <parse_token+0x7658>
  42b688:	ldr	x8, [sp, #5512]
  42b68c:	ldr	x0, [x8, #1856]
  42b690:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b694:	add	x1, x1, #0xd64
  42b698:	bl	40aa20 <strcmp@plt>
  42b69c:	cbnz	w0, 42b6c8 <parse_token+0x7418>
  42b6a0:	ldr	x8, [sp, #5512]
  42b6a4:	ldr	x0, [x8, #1824]
  42b6a8:	ldur	w2, [x29, #-36]
  42b6ac:	ldr	x3, [x8, #1840]
  42b6b0:	mov	w1, #0x17                  	// #23
  42b6b4:	mov	x9, xzr
  42b6b8:	mov	x4, x9
  42b6bc:	bl	430504 <rule_line_add_token>
  42b6c0:	stur	w0, [x29, #-68]
  42b6c4:	b	42b908 <parse_token+0x7658>
  42b6c8:	ldr	x8, [sp, #5512]
  42b6cc:	ldr	x0, [x8, #1856]
  42b6d0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  42b6d4:	add	x1, x1, #0x599
  42b6d8:	bl	40aa20 <strcmp@plt>
  42b6dc:	cbnz	w0, 42b708 <parse_token+0x7458>
  42b6e0:	ldr	x8, [sp, #5512]
  42b6e4:	ldr	x0, [x8, #1824]
  42b6e8:	ldur	w2, [x29, #-36]
  42b6ec:	ldr	x3, [x8, #1840]
  42b6f0:	mov	w1, #0x18                  	// #24
  42b6f4:	mov	x9, xzr
  42b6f8:	mov	x4, x9
  42b6fc:	bl	430504 <rule_line_add_token>
  42b700:	stur	w0, [x29, #-68]
  42b704:	b	42b908 <parse_token+0x7658>
  42b708:	ldr	x8, [sp, #5512]
  42b70c:	ldr	x9, [x8, #1872]
  42b710:	ldr	x10, [sp, #5504]
  42b714:	str	x9, [x10, #2240]
  42b718:	ldr	x9, [x10, #2240]
  42b71c:	cbz	x9, 42b734 <parse_token+0x7484>
  42b720:	ldr	x8, [sp, #5504]
  42b724:	ldr	x9, [x8, #2240]
  42b728:	ldr	x9, [x9, #32]
  42b72c:	str	x9, [sp, #2160]
  42b730:	b	42b73c <parse_token+0x748c>
  42b734:	mov	x8, xzr
  42b738:	str	x8, [sp, #2160]
  42b73c:	ldr	x8, [sp, #2160]
  42b740:	ldr	x9, [sp, #5504]
  42b744:	str	x8, [x9, #2232]
  42b748:	ldr	x8, [x9, #2232]
  42b74c:	cbz	x8, 42b764 <parse_token+0x74b4>
  42b750:	ldr	x8, [sp, #5504]
  42b754:	ldr	x9, [x8, #2232]
  42b758:	ldr	x9, [x9, #8]
  42b75c:	str	x9, [sp, #2152]
  42b760:	b	42b76c <parse_token+0x74bc>
  42b764:	mov	x8, xzr
  42b768:	str	x8, [sp, #2152]
  42b76c:	ldr	x8, [sp, #2152]
  42b770:	ldr	x9, [sp, #5504]
  42b774:	str	x8, [x9, #2224]
  42b778:	ldr	x8, [x9, #2232]
  42b77c:	cbz	x8, 42b794 <parse_token+0x74e4>
  42b780:	ldr	x8, [sp, #5504]
  42b784:	ldr	x9, [x8, #2232]
  42b788:	ldr	x9, [x9]
  42b78c:	str	x9, [sp, #2144]
  42b790:	b	42b79c <parse_token+0x74ec>
  42b794:	mov	x8, xzr
  42b798:	str	x8, [sp, #2144]
  42b79c:	ldr	x8, [sp, #2144]
  42b7a0:	ldr	x9, [sp, #5504]
  42b7a4:	str	x8, [x9, #2216]
  42b7a8:	mov	x8, xzr
  42b7ac:	str	x8, [x9, #2200]
  42b7b0:	str	x8, [x9, #2192]
  42b7b4:	mov	w10, #0x3                   	// #3
  42b7b8:	str	w10, [sp, #7844]
  42b7bc:	mov	w10, #0x16                  	// #22
  42b7c0:	movk	w10, #0x4000, lsl #16
  42b7c4:	str	w10, [sp, #7840]
  42b7c8:	ldr	x8, [x9, #2192]
  42b7cc:	cbz	x8, 42b814 <parse_token+0x7564>
  42b7d0:	mov	w0, #0x1                   	// #1
  42b7d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  42b7d8:	ldr	w8, [sp, #7844]
  42b7dc:	cmp	w0, w8
  42b7e0:	cset	w8, ge  // ge = tcont
  42b7e4:	mov	w9, #0x1                   	// #1
  42b7e8:	eor	w8, w8, #0x1
  42b7ec:	eor	w8, w8, w9
  42b7f0:	and	w8, w8, #0x1
  42b7f4:	mov	w1, w8
  42b7f8:	sxtw	x10, w1
  42b7fc:	cbz	x10, 42b814 <parse_token+0x7564>
  42b800:	ldr	x8, [sp, #5504]
  42b804:	ldr	x0, [x8, #2192]
  42b808:	add	x1, sp, #0x1, lsl #12
  42b80c:	add	x1, x1, #0xeb0
  42b810:	bl	40a860 <sd_device_get_sysname@plt>
  42b814:	ldr	w0, [sp, #7844]
  42b818:	ldr	w1, [sp, #7840]
  42b81c:	ldr	x8, [sp, #5504]
  42b820:	ldr	x9, [x8, #2200]
  42b824:	mov	x10, xzr
  42b828:	cmp	x9, #0x0
  42b82c:	ldr	x9, [sp, #5496]
  42b830:	csel	x5, x9, x10, ne  // ne = any
  42b834:	ldr	x6, [x8, #2200]
  42b838:	ldr	x10, [x8, #2216]
  42b83c:	str	w0, [sp, #2140]
  42b840:	mov	x0, x10
  42b844:	str	w1, [sp, #2136]
  42b848:	str	x5, [sp, #2128]
  42b84c:	str	x6, [sp, #2120]
  42b850:	bl	424274 <strna>
  42b854:	ldr	x8, [sp, #5504]
  42b858:	ldr	x9, [x8, #2224]
  42b85c:	str	x0, [sp, #2112]
  42b860:	cbz	x9, 42b878 <parse_token+0x75c8>
  42b864:	ldr	x8, [sp, #5504]
  42b868:	ldr	x9, [x8, #2224]
  42b86c:	ldr	w10, [x9, #8]
  42b870:	str	w10, [sp, #2108]
  42b874:	b	42b880 <parse_token+0x75d0>
  42b878:	mov	w8, wzr
  42b87c:	str	w8, [sp, #2108]
  42b880:	ldr	w8, [sp, #2108]
  42b884:	ldr	x9, [sp, #5512]
  42b888:	ldr	x10, [x9, #1864]
  42b88c:	ldr	w0, [sp, #2140]
  42b890:	ldr	w1, [sp, #2136]
  42b894:	ldr	x2, [sp, #5488]
  42b898:	mov	w3, #0x31c                 	// #796
  42b89c:	ldr	x4, [sp, #5480]
  42b8a0:	ldr	x5, [sp, #2128]
  42b8a4:	ldr	x6, [sp, #2120]
  42b8a8:	mov	x11, xzr
  42b8ac:	mov	x7, x11
  42b8b0:	mov	x12, sp
  42b8b4:	str	x11, [x12]
  42b8b8:	mov	x11, sp
  42b8bc:	ldr	x12, [sp, #5472]
  42b8c0:	str	x12, [x11, #8]
  42b8c4:	mov	x11, sp
  42b8c8:	ldr	x13, [sp, #2112]
  42b8cc:	str	x13, [x11, #16]
  42b8d0:	mov	x11, sp
  42b8d4:	str	w8, [x11, #24]
  42b8d8:	mov	x11, sp
  42b8dc:	ldr	x14, [sp, #5456]
  42b8e0:	str	x14, [x11, #32]
  42b8e4:	mov	x11, sp
  42b8e8:	str	x10, [x11, #40]
  42b8ec:	bl	40a870 <log_object_internal@plt>
  42b8f0:	str	w0, [sp, #7836]
  42b8f4:	ldr	w8, [sp, #7836]
  42b8f8:	str	w8, [sp, #7868]
  42b8fc:	ldr	w8, [sp, #7868]
  42b900:	stur	w8, [x29, #-4]
  42b904:	b	4300f8 <parse_token+0xbe48>
  42b908:	b	4300c4 <parse_token+0xbe14>
  42b90c:	ldr	x8, [sp, #5512]
  42b910:	ldr	x0, [x8, #1864]
  42b914:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42b918:	add	x1, x1, #0xd6c
  42b91c:	bl	40aa20 <strcmp@plt>
  42b920:	cbnz	w0, 42bd64 <parse_token+0x7ab4>
  42b924:	ldr	x8, [sp, #5512]
  42b928:	ldr	x9, [x8, #1856]
  42b92c:	cbz	x9, 42bb30 <parse_token+0x7880>
  42b930:	ldr	x8, [sp, #5512]
  42b934:	ldr	x9, [x8, #1872]
  42b938:	ldr	x10, [sp, #5504]
  42b93c:	str	x9, [x10, #2168]
  42b940:	ldr	x9, [x10, #2168]
  42b944:	cbz	x9, 42b95c <parse_token+0x76ac>
  42b948:	ldr	x8, [sp, #5504]
  42b94c:	ldr	x9, [x8, #2168]
  42b950:	ldr	x9, [x9, #32]
  42b954:	str	x9, [sp, #2096]
  42b958:	b	42b964 <parse_token+0x76b4>
  42b95c:	mov	x8, xzr
  42b960:	str	x8, [sp, #2096]
  42b964:	ldr	x8, [sp, #2096]
  42b968:	ldr	x9, [sp, #5504]
  42b96c:	str	x8, [x9, #2160]
  42b970:	ldr	x8, [x9, #2160]
  42b974:	cbz	x8, 42b98c <parse_token+0x76dc>
  42b978:	ldr	x8, [sp, #5504]
  42b97c:	ldr	x9, [x8, #2160]
  42b980:	ldr	x9, [x9, #8]
  42b984:	str	x9, [sp, #2088]
  42b988:	b	42b994 <parse_token+0x76e4>
  42b98c:	mov	x8, xzr
  42b990:	str	x8, [sp, #2088]
  42b994:	ldr	x8, [sp, #2088]
  42b998:	ldr	x9, [sp, #5504]
  42b99c:	str	x8, [x9, #2152]
  42b9a0:	ldr	x8, [x9, #2160]
  42b9a4:	cbz	x8, 42b9bc <parse_token+0x770c>
  42b9a8:	ldr	x8, [sp, #5504]
  42b9ac:	ldr	x9, [x8, #2160]
  42b9b0:	ldr	x9, [x9]
  42b9b4:	str	x9, [sp, #2080]
  42b9b8:	b	42b9c4 <parse_token+0x7714>
  42b9bc:	mov	x8, xzr
  42b9c0:	str	x8, [sp, #2080]
  42b9c4:	ldr	x8, [sp, #2080]
  42b9c8:	ldr	x9, [sp, #5504]
  42b9cc:	str	x8, [x9, #2144]
  42b9d0:	mov	x8, xzr
  42b9d4:	str	x8, [x9, #2128]
  42b9d8:	str	x8, [x9, #2120]
  42b9dc:	mov	w10, #0x3                   	// #3
  42b9e0:	str	w10, [sp, #7772]
  42b9e4:	mov	w10, #0x16                  	// #22
  42b9e8:	movk	w10, #0x4000, lsl #16
  42b9ec:	str	w10, [sp, #7768]
  42b9f0:	ldr	x8, [x9, #2120]
  42b9f4:	cbz	x8, 42ba3c <parse_token+0x778c>
  42b9f8:	mov	w0, #0x1                   	// #1
  42b9fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ba00:	ldr	w8, [sp, #7772]
  42ba04:	cmp	w0, w8
  42ba08:	cset	w8, ge  // ge = tcont
  42ba0c:	mov	w9, #0x1                   	// #1
  42ba10:	eor	w8, w8, #0x1
  42ba14:	eor	w8, w8, w9
  42ba18:	and	w8, w8, #0x1
  42ba1c:	mov	w1, w8
  42ba20:	sxtw	x10, w1
  42ba24:	cbz	x10, 42ba3c <parse_token+0x778c>
  42ba28:	ldr	x8, [sp, #5504]
  42ba2c:	ldr	x0, [x8, #2120]
  42ba30:	add	x1, sp, #0x1, lsl #12
  42ba34:	add	x1, x1, #0xe68
  42ba38:	bl	40a860 <sd_device_get_sysname@plt>
  42ba3c:	ldr	w0, [sp, #7772]
  42ba40:	ldr	w1, [sp, #7768]
  42ba44:	ldr	x8, [sp, #5504]
  42ba48:	ldr	x9, [x8, #2128]
  42ba4c:	mov	x10, xzr
  42ba50:	cmp	x9, #0x0
  42ba54:	ldr	x9, [sp, #5496]
  42ba58:	csel	x5, x9, x10, ne  // ne = any
  42ba5c:	ldr	x6, [x8, #2128]
  42ba60:	ldr	x10, [x8, #2144]
  42ba64:	str	w0, [sp, #2076]
  42ba68:	mov	x0, x10
  42ba6c:	str	w1, [sp, #2072]
  42ba70:	str	x5, [sp, #2064]
  42ba74:	str	x6, [sp, #2056]
  42ba78:	bl	424274 <strna>
  42ba7c:	ldr	x8, [sp, #5504]
  42ba80:	ldr	x9, [x8, #2152]
  42ba84:	str	x0, [sp, #2048]
  42ba88:	cbz	x9, 42baa0 <parse_token+0x77f0>
  42ba8c:	ldr	x8, [sp, #5504]
  42ba90:	ldr	x9, [x8, #2152]
  42ba94:	ldr	w10, [x9, #8]
  42ba98:	str	w10, [sp, #2044]
  42ba9c:	b	42baa8 <parse_token+0x77f8>
  42baa0:	mov	w8, wzr
  42baa4:	str	w8, [sp, #2044]
  42baa8:	ldr	w8, [sp, #2044]
  42baac:	ldr	x9, [sp, #5512]
  42bab0:	ldr	x10, [x9, #1864]
  42bab4:	ldr	w0, [sp, #2076]
  42bab8:	ldr	w1, [sp, #2072]
  42babc:	ldr	x2, [sp, #5488]
  42bac0:	mov	w3, #0x31f                 	// #799
  42bac4:	ldr	x4, [sp, #5480]
  42bac8:	ldr	x5, [sp, #2064]
  42bacc:	ldr	x6, [sp, #2056]
  42bad0:	mov	x11, xzr
  42bad4:	mov	x7, x11
  42bad8:	mov	x12, sp
  42badc:	str	x11, [x12]
  42bae0:	mov	x11, sp
  42bae4:	ldr	x12, [sp, #5472]
  42bae8:	str	x12, [x11, #8]
  42baec:	mov	x11, sp
  42baf0:	ldr	x13, [sp, #2048]
  42baf4:	str	x13, [x11, #16]
  42baf8:	mov	x11, sp
  42bafc:	str	w8, [x11, #24]
  42bb00:	mov	x11, sp
  42bb04:	ldr	x14, [sp, #5456]
  42bb08:	str	x14, [x11, #32]
  42bb0c:	mov	x11, sp
  42bb10:	str	x10, [x11, #40]
  42bb14:	bl	40a870 <log_object_internal@plt>
  42bb18:	str	w0, [sp, #7764]
  42bb1c:	ldr	w8, [sp, #7764]
  42bb20:	str	w8, [sp, #7796]
  42bb24:	ldr	w8, [sp, #7796]
  42bb28:	stur	w8, [x29, #-4]
  42bb2c:	b	4300f8 <parse_token+0xbe48>
  42bb30:	ldr	x8, [sp, #5512]
  42bb34:	ldrb	w9, [x8, #1839]
  42bb38:	tbnz	w9, #0, 42bd3c <parse_token+0x7a8c>
  42bb3c:	ldr	x8, [sp, #5512]
  42bb40:	ldr	x9, [x8, #1872]
  42bb44:	ldr	x10, [sp, #5504]
  42bb48:	str	x9, [x10, #2096]
  42bb4c:	ldr	x9, [x10, #2096]
  42bb50:	cbz	x9, 42bb68 <parse_token+0x78b8>
  42bb54:	ldr	x8, [sp, #5504]
  42bb58:	ldr	x9, [x8, #2096]
  42bb5c:	ldr	x9, [x9, #32]
  42bb60:	str	x9, [sp, #2032]
  42bb64:	b	42bb70 <parse_token+0x78c0>
  42bb68:	mov	x8, xzr
  42bb6c:	str	x8, [sp, #2032]
  42bb70:	ldr	x8, [sp, #2032]
  42bb74:	ldr	x9, [sp, #5504]
  42bb78:	str	x8, [x9, #2088]
  42bb7c:	ldr	x8, [x9, #2088]
  42bb80:	cbz	x8, 42bb98 <parse_token+0x78e8>
  42bb84:	ldr	x8, [sp, #5504]
  42bb88:	ldr	x9, [x8, #2088]
  42bb8c:	ldr	x9, [x9, #8]
  42bb90:	str	x9, [sp, #2024]
  42bb94:	b	42bba0 <parse_token+0x78f0>
  42bb98:	mov	x8, xzr
  42bb9c:	str	x8, [sp, #2024]
  42bba0:	ldr	x8, [sp, #2024]
  42bba4:	ldr	x9, [sp, #5504]
  42bba8:	str	x8, [x9, #2080]
  42bbac:	ldr	x8, [x9, #2088]
  42bbb0:	cbz	x8, 42bbc8 <parse_token+0x7918>
  42bbb4:	ldr	x8, [sp, #5504]
  42bbb8:	ldr	x9, [x8, #2088]
  42bbbc:	ldr	x9, [x9]
  42bbc0:	str	x9, [sp, #2016]
  42bbc4:	b	42bbd0 <parse_token+0x7920>
  42bbc8:	mov	x8, xzr
  42bbcc:	str	x8, [sp, #2016]
  42bbd0:	ldr	x8, [sp, #2016]
  42bbd4:	ldr	x9, [sp, #5504]
  42bbd8:	str	x8, [x9, #2072]
  42bbdc:	mov	x8, xzr
  42bbe0:	str	x8, [x9, #2056]
  42bbe4:	str	x8, [x9, #2048]
  42bbe8:	mov	w10, #0x3                   	// #3
  42bbec:	str	w10, [sp, #7700]
  42bbf0:	mov	w10, #0x16                  	// #22
  42bbf4:	movk	w10, #0x4000, lsl #16
  42bbf8:	str	w10, [sp, #7696]
  42bbfc:	ldr	x8, [x9, #2048]
  42bc00:	cbz	x8, 42bc48 <parse_token+0x7998>
  42bc04:	mov	w0, #0x1                   	// #1
  42bc08:	bl	40a3f0 <log_get_max_level_realm@plt>
  42bc0c:	ldr	w8, [sp, #7700]
  42bc10:	cmp	w0, w8
  42bc14:	cset	w8, ge  // ge = tcont
  42bc18:	mov	w9, #0x1                   	// #1
  42bc1c:	eor	w8, w8, #0x1
  42bc20:	eor	w8, w8, w9
  42bc24:	and	w8, w8, #0x1
  42bc28:	mov	w1, w8
  42bc2c:	sxtw	x10, w1
  42bc30:	cbz	x10, 42bc48 <parse_token+0x7998>
  42bc34:	ldr	x8, [sp, #5504]
  42bc38:	ldr	x0, [x8, #2048]
  42bc3c:	add	x1, sp, #0x1, lsl #12
  42bc40:	add	x1, x1, #0xe20
  42bc44:	bl	40a860 <sd_device_get_sysname@plt>
  42bc48:	ldr	w0, [sp, #7700]
  42bc4c:	ldr	w1, [sp, #7696]
  42bc50:	ldr	x8, [sp, #5504]
  42bc54:	ldr	x9, [x8, #2056]
  42bc58:	mov	x10, xzr
  42bc5c:	cmp	x9, #0x0
  42bc60:	ldr	x9, [sp, #5496]
  42bc64:	csel	x5, x9, x10, ne  // ne = any
  42bc68:	ldr	x6, [x8, #2056]
  42bc6c:	ldr	x10, [x8, #2072]
  42bc70:	str	w0, [sp, #2012]
  42bc74:	mov	x0, x10
  42bc78:	str	w1, [sp, #2008]
  42bc7c:	str	x5, [sp, #2000]
  42bc80:	str	x6, [sp, #1992]
  42bc84:	bl	424274 <strna>
  42bc88:	ldr	x8, [sp, #5504]
  42bc8c:	ldr	x9, [x8, #2080]
  42bc90:	str	x0, [sp, #1984]
  42bc94:	cbz	x9, 42bcac <parse_token+0x79fc>
  42bc98:	ldr	x8, [sp, #5504]
  42bc9c:	ldr	x9, [x8, #2080]
  42bca0:	ldr	w10, [x9, #8]
  42bca4:	str	w10, [sp, #1980]
  42bca8:	b	42bcb4 <parse_token+0x7a04>
  42bcac:	mov	w8, wzr
  42bcb0:	str	w8, [sp, #1980]
  42bcb4:	ldr	w8, [sp, #1980]
  42bcb8:	ldr	x9, [sp, #5512]
  42bcbc:	ldr	x10, [x9, #1864]
  42bcc0:	ldr	w0, [sp, #2012]
  42bcc4:	ldr	w1, [sp, #2008]
  42bcc8:	ldr	x2, [sp, #5488]
  42bccc:	mov	w3, #0x321                 	// #801
  42bcd0:	ldr	x4, [sp, #5480]
  42bcd4:	ldr	x5, [sp, #2000]
  42bcd8:	ldr	x6, [sp, #1992]
  42bcdc:	mov	x11, xzr
  42bce0:	mov	x7, x11
  42bce4:	mov	x12, sp
  42bce8:	str	x11, [x12]
  42bcec:	mov	x11, sp
  42bcf0:	ldr	x12, [sp, #5472]
  42bcf4:	str	x12, [x11, #8]
  42bcf8:	mov	x11, sp
  42bcfc:	ldr	x13, [sp, #1984]
  42bd00:	str	x13, [x11, #16]
  42bd04:	mov	x11, sp
  42bd08:	str	w8, [x11, #24]
  42bd0c:	mov	x11, sp
  42bd10:	ldr	x14, [sp, #5464]
  42bd14:	str	x14, [x11, #32]
  42bd18:	mov	x11, sp
  42bd1c:	str	x10, [x11, #40]
  42bd20:	bl	40a870 <log_object_internal@plt>
  42bd24:	str	w0, [sp, #7692]
  42bd28:	ldr	w8, [sp, #7692]
  42bd2c:	str	w8, [sp, #7724]
  42bd30:	ldr	w8, [sp, #7724]
  42bd34:	stur	w8, [x29, #-4]
  42bd38:	b	4300f8 <parse_token+0xbe48>
  42bd3c:	ldr	x8, [sp, #5512]
  42bd40:	ldr	x0, [x8, #1824]
  42bd44:	ldur	w2, [x29, #-36]
  42bd48:	ldr	x3, [x8, #1840]
  42bd4c:	mov	w1, #0x19                  	// #25
  42bd50:	mov	x9, xzr
  42bd54:	mov	x4, x9
  42bd58:	bl	430504 <rule_line_add_token>
  42bd5c:	stur	w0, [x29, #-68]
  42bd60:	b	4300c4 <parse_token+0xbe14>
  42bd64:	ldr	x8, [sp, #5512]
  42bd68:	ldr	x0, [x8, #1864]
  42bd6c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42bd70:	add	x1, x1, #0xd73
  42bd74:	bl	40aa20 <strcmp@plt>
  42bd78:	cbnz	w0, 42c980 <parse_token+0x86d0>
  42bd7c:	ldr	x8, [sp, #5512]
  42bd80:	ldr	x9, [x8, #1856]
  42bd84:	cbz	x9, 42bf88 <parse_token+0x7cd8>
  42bd88:	ldr	x8, [sp, #5512]
  42bd8c:	ldr	x9, [x8, #1872]
  42bd90:	ldr	x10, [sp, #5504]
  42bd94:	str	x9, [x10, #2016]
  42bd98:	ldr	x9, [x10, #2016]
  42bd9c:	cbz	x9, 42bdb4 <parse_token+0x7b04>
  42bda0:	ldr	x8, [sp, #5504]
  42bda4:	ldr	x9, [x8, #2016]
  42bda8:	ldr	x9, [x9, #32]
  42bdac:	str	x9, [sp, #1968]
  42bdb0:	b	42bdbc <parse_token+0x7b0c>
  42bdb4:	mov	x8, xzr
  42bdb8:	str	x8, [sp, #1968]
  42bdbc:	ldr	x8, [sp, #1968]
  42bdc0:	ldr	x9, [sp, #5504]
  42bdc4:	str	x8, [x9, #2008]
  42bdc8:	ldr	x8, [x9, #2008]
  42bdcc:	cbz	x8, 42bde4 <parse_token+0x7b34>
  42bdd0:	ldr	x8, [sp, #5504]
  42bdd4:	ldr	x9, [x8, #2008]
  42bdd8:	ldr	x9, [x9, #8]
  42bddc:	str	x9, [sp, #1960]
  42bde0:	b	42bdec <parse_token+0x7b3c>
  42bde4:	mov	x8, xzr
  42bde8:	str	x8, [sp, #1960]
  42bdec:	ldr	x8, [sp, #1960]
  42bdf0:	ldr	x9, [sp, #5504]
  42bdf4:	str	x8, [x9, #2000]
  42bdf8:	ldr	x8, [x9, #2008]
  42bdfc:	cbz	x8, 42be14 <parse_token+0x7b64>
  42be00:	ldr	x8, [sp, #5504]
  42be04:	ldr	x9, [x8, #2008]
  42be08:	ldr	x9, [x9]
  42be0c:	str	x9, [sp, #1952]
  42be10:	b	42be1c <parse_token+0x7b6c>
  42be14:	mov	x8, xzr
  42be18:	str	x8, [sp, #1952]
  42be1c:	ldr	x8, [sp, #1952]
  42be20:	ldr	x9, [sp, #5504]
  42be24:	str	x8, [x9, #1992]
  42be28:	mov	x8, xzr
  42be2c:	str	x8, [x9, #1976]
  42be30:	str	x8, [x9, #1968]
  42be34:	mov	w10, #0x3                   	// #3
  42be38:	str	w10, [sp, #7620]
  42be3c:	mov	w10, #0x16                  	// #22
  42be40:	movk	w10, #0x4000, lsl #16
  42be44:	str	w10, [sp, #7616]
  42be48:	ldr	x8, [x9, #1968]
  42be4c:	cbz	x8, 42be94 <parse_token+0x7be4>
  42be50:	mov	w0, #0x1                   	// #1
  42be54:	bl	40a3f0 <log_get_max_level_realm@plt>
  42be58:	ldr	w8, [sp, #7620]
  42be5c:	cmp	w0, w8
  42be60:	cset	w8, ge  // ge = tcont
  42be64:	mov	w9, #0x1                   	// #1
  42be68:	eor	w8, w8, #0x1
  42be6c:	eor	w8, w8, w9
  42be70:	and	w8, w8, #0x1
  42be74:	mov	w1, w8
  42be78:	sxtw	x10, w1
  42be7c:	cbz	x10, 42be94 <parse_token+0x7be4>
  42be80:	ldr	x8, [sp, #5504]
  42be84:	ldr	x0, [x8, #1968]
  42be88:	add	x1, sp, #0x1, lsl #12
  42be8c:	add	x1, x1, #0xdd0
  42be90:	bl	40a860 <sd_device_get_sysname@plt>
  42be94:	ldr	w0, [sp, #7620]
  42be98:	ldr	w1, [sp, #7616]
  42be9c:	ldr	x8, [sp, #5504]
  42bea0:	ldr	x9, [x8, #1976]
  42bea4:	mov	x10, xzr
  42bea8:	cmp	x9, #0x0
  42beac:	ldr	x9, [sp, #5496]
  42beb0:	csel	x5, x9, x10, ne  // ne = any
  42beb4:	ldr	x6, [x8, #1976]
  42beb8:	ldr	x10, [x8, #1992]
  42bebc:	str	w0, [sp, #1948]
  42bec0:	mov	x0, x10
  42bec4:	str	w1, [sp, #1944]
  42bec8:	str	x5, [sp, #1936]
  42becc:	str	x6, [sp, #1928]
  42bed0:	bl	424274 <strna>
  42bed4:	ldr	x8, [sp, #5504]
  42bed8:	ldr	x9, [x8, #2000]
  42bedc:	str	x0, [sp, #1920]
  42bee0:	cbz	x9, 42bef8 <parse_token+0x7c48>
  42bee4:	ldr	x8, [sp, #5504]
  42bee8:	ldr	x9, [x8, #2000]
  42beec:	ldr	w10, [x9, #8]
  42bef0:	str	w10, [sp, #1916]
  42bef4:	b	42bf00 <parse_token+0x7c50>
  42bef8:	mov	w8, wzr
  42befc:	str	w8, [sp, #1916]
  42bf00:	ldr	w8, [sp, #1916]
  42bf04:	ldr	x9, [sp, #5512]
  42bf08:	ldr	x10, [x9, #1864]
  42bf0c:	ldr	w0, [sp, #1948]
  42bf10:	ldr	w1, [sp, #1944]
  42bf14:	ldr	x2, [sp, #5488]
  42bf18:	mov	w3, #0x328                 	// #808
  42bf1c:	ldr	x4, [sp, #5480]
  42bf20:	ldr	x5, [sp, #1936]
  42bf24:	ldr	x6, [sp, #1928]
  42bf28:	mov	x11, xzr
  42bf2c:	mov	x7, x11
  42bf30:	mov	x12, sp
  42bf34:	str	x11, [x12]
  42bf38:	mov	x11, sp
  42bf3c:	ldr	x12, [sp, #5472]
  42bf40:	str	x12, [x11, #8]
  42bf44:	mov	x11, sp
  42bf48:	ldr	x13, [sp, #1920]
  42bf4c:	str	x13, [x11, #16]
  42bf50:	mov	x11, sp
  42bf54:	str	w8, [x11, #24]
  42bf58:	mov	x11, sp
  42bf5c:	ldr	x14, [sp, #5456]
  42bf60:	str	x14, [x11, #32]
  42bf64:	mov	x11, sp
  42bf68:	str	x10, [x11, #40]
  42bf6c:	bl	40a870 <log_object_internal@plt>
  42bf70:	str	w0, [sp, #7612]
  42bf74:	ldr	w8, [sp, #7612]
  42bf78:	str	w8, [sp, #7644]
  42bf7c:	ldr	w8, [sp, #7644]
  42bf80:	stur	w8, [x29, #-4]
  42bf84:	b	4300f8 <parse_token+0xbe48>
  42bf88:	ldr	x8, [sp, #5512]
  42bf8c:	ldrb	w9, [x8, #1839]
  42bf90:	tbnz	w9, #0, 42bfa0 <parse_token+0x7cf0>
  42bf94:	ldur	w8, [x29, #-36]
  42bf98:	cmp	w8, #0x3
  42bf9c:	b.ne	42c1a0 <parse_token+0x7ef0>  // b.any
  42bfa0:	ldr	x8, [sp, #5512]
  42bfa4:	ldr	x9, [x8, #1872]
  42bfa8:	ldr	x10, [sp, #5504]
  42bfac:	str	x9, [x10, #1944]
  42bfb0:	ldr	x9, [x10, #1944]
  42bfb4:	cbz	x9, 42bfcc <parse_token+0x7d1c>
  42bfb8:	ldr	x8, [sp, #5504]
  42bfbc:	ldr	x9, [x8, #1944]
  42bfc0:	ldr	x9, [x9, #32]
  42bfc4:	str	x9, [sp, #1904]
  42bfc8:	b	42bfd4 <parse_token+0x7d24>
  42bfcc:	mov	x8, xzr
  42bfd0:	str	x8, [sp, #1904]
  42bfd4:	ldr	x8, [sp, #1904]
  42bfd8:	ldr	x9, [sp, #5504]
  42bfdc:	str	x8, [x9, #1936]
  42bfe0:	ldr	x8, [x9, #1936]
  42bfe4:	cbz	x8, 42bffc <parse_token+0x7d4c>
  42bfe8:	ldr	x8, [sp, #5504]
  42bfec:	ldr	x9, [x8, #1936]
  42bff0:	ldr	x9, [x9, #8]
  42bff4:	str	x9, [sp, #1896]
  42bff8:	b	42c004 <parse_token+0x7d54>
  42bffc:	mov	x8, xzr
  42c000:	str	x8, [sp, #1896]
  42c004:	ldr	x8, [sp, #1896]
  42c008:	ldr	x9, [sp, #5504]
  42c00c:	str	x8, [x9, #1928]
  42c010:	ldr	x8, [x9, #1936]
  42c014:	cbz	x8, 42c02c <parse_token+0x7d7c>
  42c018:	ldr	x8, [sp, #5504]
  42c01c:	ldr	x9, [x8, #1936]
  42c020:	ldr	x9, [x9]
  42c024:	str	x9, [sp, #1888]
  42c028:	b	42c034 <parse_token+0x7d84>
  42c02c:	mov	x8, xzr
  42c030:	str	x8, [sp, #1888]
  42c034:	ldr	x8, [sp, #1888]
  42c038:	ldr	x9, [sp, #5504]
  42c03c:	str	x8, [x9, #1920]
  42c040:	mov	x8, xzr
  42c044:	str	x8, [x9, #1904]
  42c048:	str	x8, [x9, #1896]
  42c04c:	mov	w10, #0x3                   	// #3
  42c050:	str	w10, [sp, #7548]
  42c054:	mov	w10, #0x16                  	// #22
  42c058:	movk	w10, #0x4000, lsl #16
  42c05c:	str	w10, [sp, #7544]
  42c060:	ldr	x8, [x9, #1896]
  42c064:	cbz	x8, 42c0ac <parse_token+0x7dfc>
  42c068:	mov	w0, #0x1                   	// #1
  42c06c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42c070:	ldr	w8, [sp, #7548]
  42c074:	cmp	w0, w8
  42c078:	cset	w8, ge  // ge = tcont
  42c07c:	mov	w9, #0x1                   	// #1
  42c080:	eor	w8, w8, #0x1
  42c084:	eor	w8, w8, w9
  42c088:	and	w8, w8, #0x1
  42c08c:	mov	w1, w8
  42c090:	sxtw	x10, w1
  42c094:	cbz	x10, 42c0ac <parse_token+0x7dfc>
  42c098:	ldr	x8, [sp, #5504]
  42c09c:	ldr	x0, [x8, #1896]
  42c0a0:	add	x1, sp, #0x1, lsl #12
  42c0a4:	add	x1, x1, #0xd88
  42c0a8:	bl	40a860 <sd_device_get_sysname@plt>
  42c0ac:	ldr	w0, [sp, #7548]
  42c0b0:	ldr	w1, [sp, #7544]
  42c0b4:	ldr	x8, [sp, #5504]
  42c0b8:	ldr	x9, [x8, #1904]
  42c0bc:	mov	x10, xzr
  42c0c0:	cmp	x9, #0x0
  42c0c4:	ldr	x9, [sp, #5496]
  42c0c8:	csel	x5, x9, x10, ne  // ne = any
  42c0cc:	ldr	x6, [x8, #1904]
  42c0d0:	ldr	x10, [x8, #1920]
  42c0d4:	str	w0, [sp, #1884]
  42c0d8:	mov	x0, x10
  42c0dc:	str	w1, [sp, #1880]
  42c0e0:	str	x5, [sp, #1872]
  42c0e4:	str	x6, [sp, #1864]
  42c0e8:	bl	424274 <strna>
  42c0ec:	ldr	x8, [sp, #5504]
  42c0f0:	ldr	x9, [x8, #1928]
  42c0f4:	str	x0, [sp, #1856]
  42c0f8:	cbz	x9, 42c110 <parse_token+0x7e60>
  42c0fc:	ldr	x8, [sp, #5504]
  42c100:	ldr	x9, [x8, #1928]
  42c104:	ldr	w10, [x9, #8]
  42c108:	str	w10, [sp, #1852]
  42c10c:	b	42c118 <parse_token+0x7e68>
  42c110:	mov	w8, wzr
  42c114:	str	w8, [sp, #1852]
  42c118:	ldr	w8, [sp, #1852]
  42c11c:	ldr	x9, [sp, #5512]
  42c120:	ldr	x10, [x9, #1864]
  42c124:	ldr	w0, [sp, #1884]
  42c128:	ldr	w1, [sp, #1880]
  42c12c:	ldr	x2, [sp, #5488]
  42c130:	mov	w3, #0x32a                 	// #810
  42c134:	ldr	x4, [sp, #5480]
  42c138:	ldr	x5, [sp, #1872]
  42c13c:	ldr	x6, [sp, #1864]
  42c140:	mov	x11, xzr
  42c144:	mov	x7, x11
  42c148:	mov	x12, sp
  42c14c:	str	x11, [x12]
  42c150:	mov	x11, sp
  42c154:	ldr	x12, [sp, #5472]
  42c158:	str	x12, [x11, #8]
  42c15c:	mov	x11, sp
  42c160:	ldr	x13, [sp, #1856]
  42c164:	str	x13, [x11, #16]
  42c168:	mov	x11, sp
  42c16c:	str	w8, [x11, #24]
  42c170:	mov	x11, sp
  42c174:	ldr	x14, [sp, #5464]
  42c178:	str	x14, [x11, #32]
  42c17c:	mov	x11, sp
  42c180:	str	x10, [x11, #40]
  42c184:	bl	40a870 <log_object_internal@plt>
  42c188:	str	w0, [sp, #7540]
  42c18c:	ldr	w8, [sp, #7540]
  42c190:	str	w8, [sp, #7572]
  42c194:	ldr	w8, [sp, #7572]
  42c198:	stur	w8, [x29, #-4]
  42c19c:	b	4300f8 <parse_token+0xbe48>
  42c1a0:	ldur	w8, [x29, #-36]
  42c1a4:	cmp	w8, #0x2
  42c1a8:	b.ne	42c398 <parse_token+0x80e8>  // b.any
  42c1ac:	ldr	x8, [sp, #5512]
  42c1b0:	ldr	x9, [x8, #1872]
  42c1b4:	ldr	x10, [sp, #5504]
  42c1b8:	str	x9, [x10, #1872]
  42c1bc:	ldr	x9, [x10, #1872]
  42c1c0:	cbz	x9, 42c1d8 <parse_token+0x7f28>
  42c1c4:	ldr	x8, [sp, #5504]
  42c1c8:	ldr	x9, [x8, #1872]
  42c1cc:	ldr	x9, [x9, #32]
  42c1d0:	str	x9, [sp, #1840]
  42c1d4:	b	42c1e0 <parse_token+0x7f30>
  42c1d8:	mov	x8, xzr
  42c1dc:	str	x8, [sp, #1840]
  42c1e0:	ldr	x8, [sp, #1840]
  42c1e4:	ldr	x9, [sp, #5504]
  42c1e8:	str	x8, [x9, #1864]
  42c1ec:	ldr	x8, [x9, #1864]
  42c1f0:	cbz	x8, 42c208 <parse_token+0x7f58>
  42c1f4:	ldr	x8, [sp, #5504]
  42c1f8:	ldr	x9, [x8, #1864]
  42c1fc:	ldr	x9, [x9, #8]
  42c200:	str	x9, [sp, #1832]
  42c204:	b	42c210 <parse_token+0x7f60>
  42c208:	mov	x8, xzr
  42c20c:	str	x8, [sp, #1832]
  42c210:	ldr	x8, [sp, #1832]
  42c214:	ldr	x9, [sp, #5504]
  42c218:	str	x8, [x9, #1856]
  42c21c:	ldr	x8, [x9, #1864]
  42c220:	cbz	x8, 42c238 <parse_token+0x7f88>
  42c224:	ldr	x8, [sp, #5504]
  42c228:	ldr	x9, [x8, #1864]
  42c22c:	ldr	x9, [x9]
  42c230:	str	x9, [sp, #1824]
  42c234:	b	42c240 <parse_token+0x7f90>
  42c238:	mov	x8, xzr
  42c23c:	str	x8, [sp, #1824]
  42c240:	ldr	x8, [sp, #1824]
  42c244:	ldr	x9, [sp, #5504]
  42c248:	str	x8, [x9, #1848]
  42c24c:	mov	x8, xzr
  42c250:	str	x8, [x9, #1832]
  42c254:	str	x8, [x9, #1824]
  42c258:	mov	w10, #0x7                   	// #7
  42c25c:	str	w10, [sp, #7476]
  42c260:	str	wzr, [sp, #7472]
  42c264:	ldr	x8, [x9, #1824]
  42c268:	cbz	x8, 42c2b0 <parse_token+0x8000>
  42c26c:	mov	w0, #0x1                   	// #1
  42c270:	bl	40a3f0 <log_get_max_level_realm@plt>
  42c274:	ldr	w8, [sp, #7476]
  42c278:	cmp	w0, w8
  42c27c:	cset	w8, ge  // ge = tcont
  42c280:	mov	w9, #0x1                   	// #1
  42c284:	eor	w8, w8, #0x1
  42c288:	eor	w8, w8, w9
  42c28c:	and	w8, w8, #0x1
  42c290:	mov	w1, w8
  42c294:	sxtw	x10, w1
  42c298:	cbz	x10, 42c2b0 <parse_token+0x8000>
  42c29c:	ldr	x8, [sp, #5504]
  42c2a0:	ldr	x0, [x8, #1824]
  42c2a4:	add	x1, sp, #0x1, lsl #12
  42c2a8:	add	x1, x1, #0xd40
  42c2ac:	bl	40a860 <sd_device_get_sysname@plt>
  42c2b0:	ldr	w0, [sp, #7476]
  42c2b4:	ldr	w1, [sp, #7472]
  42c2b8:	ldr	x8, [sp, #5504]
  42c2bc:	ldr	x9, [x8, #1832]
  42c2c0:	mov	x10, xzr
  42c2c4:	cmp	x9, #0x0
  42c2c8:	ldr	x9, [sp, #5496]
  42c2cc:	csel	x5, x9, x10, ne  // ne = any
  42c2d0:	ldr	x6, [x8, #1832]
  42c2d4:	ldr	x10, [x8, #1848]
  42c2d8:	str	w0, [sp, #1820]
  42c2dc:	mov	x0, x10
  42c2e0:	str	w1, [sp, #1816]
  42c2e4:	str	x5, [sp, #1808]
  42c2e8:	str	x6, [sp, #1800]
  42c2ec:	bl	424274 <strna>
  42c2f0:	ldr	x8, [sp, #5504]
  42c2f4:	ldr	x9, [x8, #1856]
  42c2f8:	str	x0, [sp, #1792]
  42c2fc:	cbz	x9, 42c314 <parse_token+0x8064>
  42c300:	ldr	x8, [sp, #5504]
  42c304:	ldr	x9, [x8, #1856]
  42c308:	ldr	w10, [x9, #8]
  42c30c:	str	w10, [sp, #1788]
  42c310:	b	42c31c <parse_token+0x806c>
  42c314:	mov	w8, wzr
  42c318:	str	w8, [sp, #1788]
  42c31c:	ldr	w8, [sp, #1788]
  42c320:	ldr	x9, [sp, #5512]
  42c324:	ldr	x10, [x9, #1864]
  42c328:	ldr	w0, [sp, #1820]
  42c32c:	ldr	w1, [sp, #1816]
  42c330:	ldr	x2, [sp, #5488]
  42c334:	mov	w3, #0x32c                 	// #812
  42c338:	ldr	x4, [sp, #5480]
  42c33c:	ldr	x5, [sp, #1808]
  42c340:	ldr	x6, [sp, #1800]
  42c344:	mov	x11, xzr
  42c348:	mov	x7, x11
  42c34c:	mov	x12, sp
  42c350:	str	x11, [x12]
  42c354:	mov	x11, sp
  42c358:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42c35c:	add	x12, x12, #0xd7b
  42c360:	str	x12, [x11, #8]
  42c364:	mov	x11, sp
  42c368:	ldr	x12, [sp, #1792]
  42c36c:	str	x12, [x11, #16]
  42c370:	mov	x11, sp
  42c374:	str	w8, [x11, #24]
  42c378:	mov	x11, sp
  42c37c:	str	x10, [x11, #32]
  42c380:	bl	40a870 <log_object_internal@plt>
  42c384:	str	w0, [sp, #7468]
  42c388:	ldr	w8, [sp, #7468]
  42c38c:	str	w8, [sp, #7500]
  42c390:	mov	w8, #0x4                   	// #4
  42c394:	stur	w8, [x29, #-36]
  42c398:	ldr	x8, [sp, #5512]
  42c39c:	ldr	x0, [x8, #1840]
  42c3a0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c3a4:	add	x1, x1, #0xdb5
  42c3a8:	bl	40aa20 <strcmp@plt>
  42c3ac:	cbnz	w0, 42c3d8 <parse_token+0x8128>
  42c3b0:	ldr	x8, [sp, #5512]
  42c3b4:	ldr	x0, [x8, #1824]
  42c3b8:	ldur	w2, [x29, #-36]
  42c3bc:	mov	w1, #0x1a                  	// #26
  42c3c0:	mov	x9, xzr
  42c3c4:	mov	x3, x9
  42c3c8:	mov	x4, x9
  42c3cc:	bl	430504 <rule_line_add_token>
  42c3d0:	stur	w0, [x29, #-68]
  42c3d4:	b	42c97c <parse_token+0x86cc>
  42c3d8:	ldr	x8, [sp, #5512]
  42c3dc:	ldr	x0, [x8, #1840]
  42c3e0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c3e4:	add	x1, x1, #0xdc8
  42c3e8:	bl	40aa20 <strcmp@plt>
  42c3ec:	cbnz	w0, 42c418 <parse_token+0x8168>
  42c3f0:	ldr	x8, [sp, #5512]
  42c3f4:	ldr	x0, [x8, #1824]
  42c3f8:	ldur	w2, [x29, #-36]
  42c3fc:	mov	w1, #0x1b                  	// #27
  42c400:	mov	x9, xzr
  42c404:	mov	x3, x9
  42c408:	mov	x4, x9
  42c40c:	bl	430504 <rule_line_add_token>
  42c410:	stur	w0, [x29, #-68]
  42c414:	b	42c97c <parse_token+0x86cc>
  42c418:	ldr	x8, [sp, #5512]
  42c41c:	ldr	x0, [x8, #1840]
  42c420:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c424:	add	x1, x1, #0xdde
  42c428:	bl	40aa20 <strcmp@plt>
  42c42c:	cbnz	w0, 42c458 <parse_token+0x81a8>
  42c430:	ldr	x8, [sp, #5512]
  42c434:	ldr	x0, [x8, #1824]
  42c438:	ldur	w2, [x29, #-36]
  42c43c:	mov	w1, #0x1c                  	// #28
  42c440:	mov	x9, xzr
  42c444:	mov	x3, x9
  42c448:	mov	x4, x9
  42c44c:	bl	430504 <rule_line_add_token>
  42c450:	stur	w0, [x29, #-68]
  42c454:	b	42c97c <parse_token+0x86cc>
  42c458:	ldr	x8, [sp, #5512]
  42c45c:	ldr	x0, [x8, #1840]
  42c460:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c464:	add	x1, x1, #0xde9
  42c468:	bl	40aa20 <strcmp@plt>
  42c46c:	cbnz	w0, 42c49c <parse_token+0x81ec>
  42c470:	ldr	x8, [sp, #5512]
  42c474:	ldr	x0, [x8, #1824]
  42c478:	ldur	w2, [x29, #-36]
  42c47c:	mov	w1, #0x1d                  	// #29
  42c480:	mov	x9, xzr
  42c484:	mov	x3, x9
  42c488:	mov	x9, #0x1                   	// #1
  42c48c:	mov	x4, x9
  42c490:	bl	430504 <rule_line_add_token>
  42c494:	stur	w0, [x29, #-68]
  42c498:	b	42c97c <parse_token+0x86cc>
  42c49c:	ldr	x8, [sp, #5512]
  42c4a0:	ldr	x0, [x8, #1840]
  42c4a4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c4a8:	add	x1, x1, #0xdef
  42c4ac:	bl	40aa20 <strcmp@plt>
  42c4b0:	cbnz	w0, 42c4dc <parse_token+0x822c>
  42c4b4:	ldr	x8, [sp, #5512]
  42c4b8:	ldr	x0, [x8, #1824]
  42c4bc:	ldur	w2, [x29, #-36]
  42c4c0:	mov	w1, #0x1d                  	// #29
  42c4c4:	mov	x9, xzr
  42c4c8:	mov	x3, x9
  42c4cc:	mov	x4, x9
  42c4d0:	bl	430504 <rule_line_add_token>
  42c4d4:	stur	w0, [x29, #-68]
  42c4d8:	b	42c97c <parse_token+0x86cc>
  42c4dc:	ldr	x8, [sp, #5512]
  42c4e0:	ldr	x0, [x8, #1840]
  42c4e4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c4e8:	add	x1, x1, #0xdf7
  42c4ec:	bl	4304a4 <startswith>
  42c4f0:	ldr	x8, [sp, #5504]
  42c4f4:	str	x0, [x8, #2024]
  42c4f8:	cbz	x0, 42c528 <parse_token+0x8278>
  42c4fc:	ldr	x8, [sp, #5512]
  42c500:	ldr	x0, [x8, #1824]
  42c504:	ldur	w2, [x29, #-36]
  42c508:	ldr	x9, [sp, #5504]
  42c50c:	ldr	x3, [x9, #2024]
  42c510:	mov	w1, #0x26                  	// #38
  42c514:	mov	x10, xzr
  42c518:	mov	x4, x10
  42c51c:	bl	430504 <rule_line_add_token>
  42c520:	stur	w0, [x29, #-68]
  42c524:	b	42c97c <parse_token+0x86cc>
  42c528:	ldr	x8, [sp, #5512]
  42c52c:	ldr	x0, [x8, #1840]
  42c530:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c534:	add	x1, x1, #0xe04
  42c538:	bl	4304a4 <startswith>
  42c53c:	ldr	x8, [sp, #5504]
  42c540:	str	x0, [x8, #2024]
  42c544:	cbz	x0, 42c790 <parse_token+0x84e0>
  42c548:	ldr	x8, [sp, #5504]
  42c54c:	ldr	x0, [x8, #2024]
  42c550:	add	x1, sp, #0x1, lsl #12
  42c554:	add	x1, x1, #0xd28
  42c558:	bl	40b310 <safe_atoi@plt>
  42c55c:	stur	w0, [x29, #-68]
  42c560:	ldur	w9, [x29, #-68]
  42c564:	cmp	w9, #0x0
  42c568:	cset	w9, ge  // ge = tcont
  42c56c:	tbnz	w9, #0, 42c764 <parse_token+0x84b4>
  42c570:	ldr	x8, [sp, #5512]
  42c574:	ldr	x9, [x8, #1872]
  42c578:	ldr	x10, [sp, #5504]
  42c57c:	str	x9, [x10, #1800]
  42c580:	ldr	x9, [x10, #1800]
  42c584:	cbz	x9, 42c59c <parse_token+0x82ec>
  42c588:	ldr	x8, [sp, #5504]
  42c58c:	ldr	x9, [x8, #1800]
  42c590:	ldr	x9, [x9, #32]
  42c594:	str	x9, [sp, #1776]
  42c598:	b	42c5a4 <parse_token+0x82f4>
  42c59c:	mov	x8, xzr
  42c5a0:	str	x8, [sp, #1776]
  42c5a4:	ldr	x8, [sp, #1776]
  42c5a8:	ldr	x9, [sp, #5504]
  42c5ac:	str	x8, [x9, #1792]
  42c5b0:	ldr	x8, [x9, #1792]
  42c5b4:	cbz	x8, 42c5cc <parse_token+0x831c>
  42c5b8:	ldr	x8, [sp, #5504]
  42c5bc:	ldr	x9, [x8, #1792]
  42c5c0:	ldr	x9, [x9, #8]
  42c5c4:	str	x9, [sp, #1768]
  42c5c8:	b	42c5d4 <parse_token+0x8324>
  42c5cc:	mov	x8, xzr
  42c5d0:	str	x8, [sp, #1768]
  42c5d4:	ldr	x8, [sp, #1768]
  42c5d8:	ldr	x9, [sp, #5504]
  42c5dc:	str	x8, [x9, #1784]
  42c5e0:	ldr	x8, [x9, #1792]
  42c5e4:	cbz	x8, 42c5fc <parse_token+0x834c>
  42c5e8:	ldr	x8, [sp, #5504]
  42c5ec:	ldr	x9, [x8, #1792]
  42c5f0:	ldr	x9, [x9]
  42c5f4:	str	x9, [sp, #1760]
  42c5f8:	b	42c604 <parse_token+0x8354>
  42c5fc:	mov	x8, xzr
  42c600:	str	x8, [sp, #1760]
  42c604:	ldr	x8, [sp, #1760]
  42c608:	ldr	x9, [sp, #5504]
  42c60c:	str	x8, [x9, #1776]
  42c610:	mov	x8, xzr
  42c614:	str	x8, [x9, #1760]
  42c618:	str	x8, [x9, #1752]
  42c61c:	mov	w10, #0x3                   	// #3
  42c620:	str	w10, [sp, #7404]
  42c624:	ldur	w10, [x29, #-68]
  42c628:	str	w10, [sp, #7400]
  42c62c:	ldr	x8, [x9, #1752]
  42c630:	cbz	x8, 42c678 <parse_token+0x83c8>
  42c634:	mov	w0, #0x1                   	// #1
  42c638:	bl	40a3f0 <log_get_max_level_realm@plt>
  42c63c:	ldr	w8, [sp, #7404]
  42c640:	cmp	w0, w8
  42c644:	cset	w8, ge  // ge = tcont
  42c648:	mov	w9, #0x1                   	// #1
  42c64c:	eor	w8, w8, #0x1
  42c650:	eor	w8, w8, w9
  42c654:	and	w8, w8, #0x1
  42c658:	mov	w1, w8
  42c65c:	sxtw	x10, w1
  42c660:	cbz	x10, 42c678 <parse_token+0x83c8>
  42c664:	ldr	x8, [sp, #5504]
  42c668:	ldr	x0, [x8, #1752]
  42c66c:	add	x1, sp, #0x1, lsl #12
  42c670:	add	x1, x1, #0xcf8
  42c674:	bl	40a860 <sd_device_get_sysname@plt>
  42c678:	ldr	w0, [sp, #7404]
  42c67c:	ldr	w1, [sp, #7400]
  42c680:	ldr	x8, [sp, #5504]
  42c684:	ldr	x9, [x8, #1760]
  42c688:	mov	x10, xzr
  42c68c:	cmp	x9, #0x0
  42c690:	ldr	x9, [sp, #5496]
  42c694:	csel	x5, x9, x10, ne  // ne = any
  42c698:	ldr	x6, [x8, #1760]
  42c69c:	ldr	x10, [x8, #1776]
  42c6a0:	str	w0, [sp, #1756]
  42c6a4:	mov	x0, x10
  42c6a8:	str	w1, [sp, #1752]
  42c6ac:	str	x5, [sp, #1744]
  42c6b0:	str	x6, [sp, #1736]
  42c6b4:	bl	424274 <strna>
  42c6b8:	ldr	x8, [sp, #5504]
  42c6bc:	ldr	x9, [x8, #1784]
  42c6c0:	str	x0, [sp, #1728]
  42c6c4:	cbz	x9, 42c6dc <parse_token+0x842c>
  42c6c8:	ldr	x8, [sp, #5504]
  42c6cc:	ldr	x9, [x8, #1784]
  42c6d0:	ldr	w10, [x9, #8]
  42c6d4:	str	w10, [sp, #1724]
  42c6d8:	b	42c6e4 <parse_token+0x8434>
  42c6dc:	mov	w8, wzr
  42c6e0:	str	w8, [sp, #1724]
  42c6e4:	ldr	w8, [sp, #1724]
  42c6e8:	ldr	x9, [sp, #5504]
  42c6ec:	ldr	x10, [x9, #2024]
  42c6f0:	ldr	w0, [sp, #1756]
  42c6f4:	ldr	w1, [sp, #1752]
  42c6f8:	ldr	x2, [sp, #5488]
  42c6fc:	mov	w3, #0x341                 	// #833
  42c700:	ldr	x4, [sp, #5480]
  42c704:	ldr	x5, [sp, #1744]
  42c708:	ldr	x6, [sp, #1736]
  42c70c:	mov	x11, xzr
  42c710:	mov	x7, x11
  42c714:	mov	x12, sp
  42c718:	str	x11, [x12]
  42c71c:	mov	x11, sp
  42c720:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42c724:	add	x12, x12, #0xe13
  42c728:	str	x12, [x11, #8]
  42c72c:	mov	x11, sp
  42c730:	ldr	x12, [sp, #1728]
  42c734:	str	x12, [x11, #16]
  42c738:	mov	x11, sp
  42c73c:	str	w8, [x11, #24]
  42c740:	mov	x11, sp
  42c744:	str	x10, [x11, #32]
  42c748:	bl	40a870 <log_object_internal@plt>
  42c74c:	str	w0, [sp, #7396]
  42c750:	ldr	w8, [sp, #7396]
  42c754:	str	w8, [sp, #7428]
  42c758:	ldr	w8, [sp, #7428]
  42c75c:	stur	w8, [x29, #-4]
  42c760:	b	4300f8 <parse_token+0xbe48>
  42c764:	ldr	x8, [sp, #5512]
  42c768:	ldr	x0, [x8, #1824]
  42c76c:	ldur	w2, [x29, #-36]
  42c770:	ldrsw	x9, [sp, #7464]
  42c774:	mov	w1, #0x1e                  	// #30
  42c778:	mov	x10, xzr
  42c77c:	mov	x3, x10
  42c780:	mov	x4, x9
  42c784:	bl	430504 <rule_line_add_token>
  42c788:	stur	w0, [x29, #-68]
  42c78c:	b	42c97c <parse_token+0x86cc>
  42c790:	ldr	x8, [sp, #5512]
  42c794:	ldr	x9, [x8, #1872]
  42c798:	ldr	x10, [sp, #5504]
  42c79c:	str	x9, [x10, #1728]
  42c7a0:	ldr	x9, [x10, #1728]
  42c7a4:	cbz	x9, 42c7bc <parse_token+0x850c>
  42c7a8:	ldr	x8, [sp, #5504]
  42c7ac:	ldr	x9, [x8, #1728]
  42c7b0:	ldr	x9, [x9, #32]
  42c7b4:	str	x9, [sp, #1712]
  42c7b8:	b	42c7c4 <parse_token+0x8514>
  42c7bc:	mov	x8, xzr
  42c7c0:	str	x8, [sp, #1712]
  42c7c4:	ldr	x8, [sp, #1712]
  42c7c8:	ldr	x9, [sp, #5504]
  42c7cc:	str	x8, [x9, #1720]
  42c7d0:	ldr	x8, [x9, #1720]
  42c7d4:	cbz	x8, 42c7ec <parse_token+0x853c>
  42c7d8:	ldr	x8, [sp, #5504]
  42c7dc:	ldr	x9, [x8, #1720]
  42c7e0:	ldr	x9, [x9, #8]
  42c7e4:	str	x9, [sp, #1704]
  42c7e8:	b	42c7f4 <parse_token+0x8544>
  42c7ec:	mov	x8, xzr
  42c7f0:	str	x8, [sp, #1704]
  42c7f4:	ldr	x8, [sp, #1704]
  42c7f8:	ldr	x9, [sp, #5504]
  42c7fc:	str	x8, [x9, #1712]
  42c800:	ldr	x8, [x9, #1720]
  42c804:	cbz	x8, 42c81c <parse_token+0x856c>
  42c808:	ldr	x8, [sp, #5504]
  42c80c:	ldr	x9, [x8, #1720]
  42c810:	ldr	x9, [x9]
  42c814:	str	x9, [sp, #1696]
  42c818:	b	42c824 <parse_token+0x8574>
  42c81c:	mov	x8, xzr
  42c820:	str	x8, [sp, #1696]
  42c824:	ldr	x8, [sp, #1696]
  42c828:	ldr	x9, [sp, #5504]
  42c82c:	str	x8, [x9, #1704]
  42c830:	mov	x8, xzr
  42c834:	str	x8, [x9, #1688]
  42c838:	str	x8, [x9, #1680]
  42c83c:	mov	w10, #0x4                   	// #4
  42c840:	str	w10, [sp, #7332]
  42c844:	str	wzr, [sp, #7328]
  42c848:	ldr	x8, [x9, #1680]
  42c84c:	cbz	x8, 42c894 <parse_token+0x85e4>
  42c850:	mov	w0, #0x1                   	// #1
  42c854:	bl	40a3f0 <log_get_max_level_realm@plt>
  42c858:	ldr	w8, [sp, #7332]
  42c85c:	cmp	w0, w8
  42c860:	cset	w8, ge  // ge = tcont
  42c864:	mov	w9, #0x1                   	// #1
  42c868:	eor	w8, w8, #0x1
  42c86c:	eor	w8, w8, w9
  42c870:	and	w8, w8, #0x1
  42c874:	mov	w1, w8
  42c878:	sxtw	x10, w1
  42c87c:	cbz	x10, 42c894 <parse_token+0x85e4>
  42c880:	ldr	x8, [sp, #5504]
  42c884:	ldr	x0, [x8, #1680]
  42c888:	add	x1, sp, #0x1, lsl #12
  42c88c:	add	x1, x1, #0xcb0
  42c890:	bl	40a860 <sd_device_get_sysname@plt>
  42c894:	ldr	w0, [sp, #7332]
  42c898:	ldr	w1, [sp, #7328]
  42c89c:	ldr	x8, [sp, #5504]
  42c8a0:	ldr	x9, [x8, #1688]
  42c8a4:	mov	x10, xzr
  42c8a8:	cmp	x9, #0x0
  42c8ac:	ldr	x9, [sp, #5496]
  42c8b0:	csel	x5, x9, x10, ne  // ne = any
  42c8b4:	ldr	x6, [x8, #1688]
  42c8b8:	ldr	x10, [x8, #1704]
  42c8bc:	str	w0, [sp, #1692]
  42c8c0:	mov	x0, x10
  42c8c4:	str	w1, [sp, #1688]
  42c8c8:	str	x5, [sp, #1680]
  42c8cc:	str	x6, [sp, #1672]
  42c8d0:	bl	424274 <strna>
  42c8d4:	ldr	x8, [sp, #5504]
  42c8d8:	ldr	x9, [x8, #1712]
  42c8dc:	str	x0, [sp, #1664]
  42c8e0:	cbz	x9, 42c8f8 <parse_token+0x8648>
  42c8e4:	ldr	x8, [sp, #5504]
  42c8e8:	ldr	x9, [x8, #1712]
  42c8ec:	ldr	w10, [x9, #8]
  42c8f0:	str	w10, [sp, #1660]
  42c8f4:	b	42c900 <parse_token+0x8650>
  42c8f8:	mov	w8, wzr
  42c8fc:	str	w8, [sp, #1660]
  42c900:	ldr	w8, [sp, #1660]
  42c904:	ldr	x9, [sp, #5512]
  42c908:	ldr	x10, [x9, #1840]
  42c90c:	ldr	w0, [sp, #1692]
  42c910:	ldr	w1, [sp, #1688]
  42c914:	ldr	x2, [sp, #5488]
  42c918:	mov	w3, #0x344                 	// #836
  42c91c:	ldr	x4, [sp, #5480]
  42c920:	ldr	x5, [sp, #1680]
  42c924:	ldr	x6, [sp, #1672]
  42c928:	mov	x11, xzr
  42c92c:	mov	x7, x11
  42c930:	mov	x12, sp
  42c934:	str	x11, [x12]
  42c938:	mov	x11, sp
  42c93c:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42c940:	add	x12, x12, #0xe40
  42c944:	str	x12, [x11, #8]
  42c948:	mov	x11, sp
  42c94c:	ldr	x12, [sp, #1664]
  42c950:	str	x12, [x11, #16]
  42c954:	mov	x11, sp
  42c958:	str	w8, [x11, #24]
  42c95c:	mov	x11, sp
  42c960:	str	x10, [x11, #32]
  42c964:	bl	40a870 <log_object_internal@plt>
  42c968:	str	w0, [sp, #7324]
  42c96c:	ldr	w8, [sp, #7324]
  42c970:	str	w8, [sp, #7356]
  42c974:	stur	wzr, [x29, #-4]
  42c978:	b	4300f8 <parse_token+0xbe48>
  42c97c:	b	4300c4 <parse_token+0xbe14>
  42c980:	ldr	x8, [sp, #5512]
  42c984:	ldr	x0, [x8, #1864]
  42c988:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42c98c:	add	x1, x1, #0xe74
  42c990:	bl	40aa20 <strcmp@plt>
  42c994:	cbnz	w0, 42d4cc <parse_token+0x921c>
  42c998:	ldr	x8, [sp, #5512]
  42c99c:	ldr	x9, [x8, #1856]
  42c9a0:	cbz	x9, 42cba4 <parse_token+0x88f4>
  42c9a4:	ldr	x8, [sp, #5512]
  42c9a8:	ldr	x9, [x8, #1872]
  42c9ac:	ldr	x10, [sp, #5504]
  42c9b0:	str	x9, [x10, #1656]
  42c9b4:	ldr	x9, [x10, #1656]
  42c9b8:	cbz	x9, 42c9d0 <parse_token+0x8720>
  42c9bc:	ldr	x8, [sp, #5504]
  42c9c0:	ldr	x9, [x8, #1656]
  42c9c4:	ldr	x9, [x9, #32]
  42c9c8:	str	x9, [sp, #1648]
  42c9cc:	b	42c9d8 <parse_token+0x8728>
  42c9d0:	mov	x8, xzr
  42c9d4:	str	x8, [sp, #1648]
  42c9d8:	ldr	x8, [sp, #1648]
  42c9dc:	ldr	x9, [sp, #5504]
  42c9e0:	str	x8, [x9, #1648]
  42c9e4:	ldr	x8, [x9, #1648]
  42c9e8:	cbz	x8, 42ca00 <parse_token+0x8750>
  42c9ec:	ldr	x8, [sp, #5504]
  42c9f0:	ldr	x9, [x8, #1648]
  42c9f4:	ldr	x9, [x9, #8]
  42c9f8:	str	x9, [sp, #1640]
  42c9fc:	b	42ca08 <parse_token+0x8758>
  42ca00:	mov	x8, xzr
  42ca04:	str	x8, [sp, #1640]
  42ca08:	ldr	x8, [sp, #1640]
  42ca0c:	ldr	x9, [sp, #5504]
  42ca10:	str	x8, [x9, #1640]
  42ca14:	ldr	x8, [x9, #1648]
  42ca18:	cbz	x8, 42ca30 <parse_token+0x8780>
  42ca1c:	ldr	x8, [sp, #5504]
  42ca20:	ldr	x9, [x8, #1648]
  42ca24:	ldr	x9, [x9]
  42ca28:	str	x9, [sp, #1632]
  42ca2c:	b	42ca38 <parse_token+0x8788>
  42ca30:	mov	x8, xzr
  42ca34:	str	x8, [sp, #1632]
  42ca38:	ldr	x8, [sp, #1632]
  42ca3c:	ldr	x9, [sp, #5504]
  42ca40:	str	x8, [x9, #1632]
  42ca44:	mov	x8, xzr
  42ca48:	str	x8, [x9, #1616]
  42ca4c:	str	x8, [x9, #1608]
  42ca50:	mov	w10, #0x3                   	// #3
  42ca54:	str	w10, [sp, #7260]
  42ca58:	mov	w10, #0x16                  	// #22
  42ca5c:	movk	w10, #0x4000, lsl #16
  42ca60:	str	w10, [sp, #7256]
  42ca64:	ldr	x8, [x9, #1608]
  42ca68:	cbz	x8, 42cab0 <parse_token+0x8800>
  42ca6c:	mov	w0, #0x1                   	// #1
  42ca70:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ca74:	ldr	w8, [sp, #7260]
  42ca78:	cmp	w0, w8
  42ca7c:	cset	w8, ge  // ge = tcont
  42ca80:	mov	w9, #0x1                   	// #1
  42ca84:	eor	w8, w8, #0x1
  42ca88:	eor	w8, w8, w9
  42ca8c:	and	w8, w8, #0x1
  42ca90:	mov	w1, w8
  42ca94:	sxtw	x10, w1
  42ca98:	cbz	x10, 42cab0 <parse_token+0x8800>
  42ca9c:	ldr	x8, [sp, #5504]
  42caa0:	ldr	x0, [x8, #1608]
  42caa4:	add	x1, sp, #0x1, lsl #12
  42caa8:	add	x1, x1, #0xc68
  42caac:	bl	40a860 <sd_device_get_sysname@plt>
  42cab0:	ldr	w0, [sp, #7260]
  42cab4:	ldr	w1, [sp, #7256]
  42cab8:	ldr	x8, [sp, #5504]
  42cabc:	ldr	x9, [x8, #1616]
  42cac0:	mov	x10, xzr
  42cac4:	cmp	x9, #0x0
  42cac8:	ldr	x9, [sp, #5496]
  42cacc:	csel	x5, x9, x10, ne  // ne = any
  42cad0:	ldr	x6, [x8, #1616]
  42cad4:	ldr	x10, [x8, #1632]
  42cad8:	str	w0, [sp, #1628]
  42cadc:	mov	x0, x10
  42cae0:	str	w1, [sp, #1624]
  42cae4:	str	x5, [sp, #1616]
  42cae8:	str	x6, [sp, #1608]
  42caec:	bl	424274 <strna>
  42caf0:	ldr	x8, [sp, #5504]
  42caf4:	ldr	x9, [x8, #1640]
  42caf8:	str	x0, [sp, #1600]
  42cafc:	cbz	x9, 42cb14 <parse_token+0x8864>
  42cb00:	ldr	x8, [sp, #5504]
  42cb04:	ldr	x9, [x8, #1640]
  42cb08:	ldr	w10, [x9, #8]
  42cb0c:	str	w10, [sp, #1596]
  42cb10:	b	42cb1c <parse_token+0x886c>
  42cb14:	mov	w8, wzr
  42cb18:	str	w8, [sp, #1596]
  42cb1c:	ldr	w8, [sp, #1596]
  42cb20:	ldr	x9, [sp, #5512]
  42cb24:	ldr	x10, [x9, #1864]
  42cb28:	ldr	w0, [sp, #1628]
  42cb2c:	ldr	w1, [sp, #1624]
  42cb30:	ldr	x2, [sp, #5488]
  42cb34:	mov	w3, #0x34b                 	// #843
  42cb38:	ldr	x4, [sp, #5480]
  42cb3c:	ldr	x5, [sp, #1616]
  42cb40:	ldr	x6, [sp, #1608]
  42cb44:	mov	x11, xzr
  42cb48:	mov	x7, x11
  42cb4c:	mov	x12, sp
  42cb50:	str	x11, [x12]
  42cb54:	mov	x11, sp
  42cb58:	ldr	x12, [sp, #5472]
  42cb5c:	str	x12, [x11, #8]
  42cb60:	mov	x11, sp
  42cb64:	ldr	x13, [sp, #1600]
  42cb68:	str	x13, [x11, #16]
  42cb6c:	mov	x11, sp
  42cb70:	str	w8, [x11, #24]
  42cb74:	mov	x11, sp
  42cb78:	ldr	x14, [sp, #5456]
  42cb7c:	str	x14, [x11, #32]
  42cb80:	mov	x11, sp
  42cb84:	str	x10, [x11, #40]
  42cb88:	bl	40a870 <log_object_internal@plt>
  42cb8c:	str	w0, [sp, #7252]
  42cb90:	ldr	w8, [sp, #7252]
  42cb94:	str	w8, [sp, #7284]
  42cb98:	ldr	w8, [sp, #7284]
  42cb9c:	stur	w8, [x29, #-4]
  42cba0:	b	4300f8 <parse_token+0xbe48>
  42cba4:	ldr	x8, [sp, #5512]
  42cba8:	ldrb	w9, [x8, #1839]
  42cbac:	tbnz	w9, #0, 42cbbc <parse_token+0x890c>
  42cbb0:	ldur	w8, [x29, #-36]
  42cbb4:	cmp	w8, #0x3
  42cbb8:	b.ne	42cdbc <parse_token+0x8b0c>  // b.any
  42cbbc:	ldr	x8, [sp, #5512]
  42cbc0:	ldr	x9, [x8, #1872]
  42cbc4:	ldr	x10, [sp, #5504]
  42cbc8:	str	x9, [x10, #1584]
  42cbcc:	ldr	x9, [x10, #1584]
  42cbd0:	cbz	x9, 42cbe8 <parse_token+0x8938>
  42cbd4:	ldr	x8, [sp, #5504]
  42cbd8:	ldr	x9, [x8, #1584]
  42cbdc:	ldr	x9, [x9, #32]
  42cbe0:	str	x9, [sp, #1584]
  42cbe4:	b	42cbf0 <parse_token+0x8940>
  42cbe8:	mov	x8, xzr
  42cbec:	str	x8, [sp, #1584]
  42cbf0:	ldr	x8, [sp, #1584]
  42cbf4:	ldr	x9, [sp, #5504]
  42cbf8:	str	x8, [x9, #1576]
  42cbfc:	ldr	x8, [x9, #1576]
  42cc00:	cbz	x8, 42cc18 <parse_token+0x8968>
  42cc04:	ldr	x8, [sp, #5504]
  42cc08:	ldr	x9, [x8, #1576]
  42cc0c:	ldr	x9, [x9, #8]
  42cc10:	str	x9, [sp, #1576]
  42cc14:	b	42cc20 <parse_token+0x8970>
  42cc18:	mov	x8, xzr
  42cc1c:	str	x8, [sp, #1576]
  42cc20:	ldr	x8, [sp, #1576]
  42cc24:	ldr	x9, [sp, #5504]
  42cc28:	str	x8, [x9, #1568]
  42cc2c:	ldr	x8, [x9, #1576]
  42cc30:	cbz	x8, 42cc48 <parse_token+0x8998>
  42cc34:	ldr	x8, [sp, #5504]
  42cc38:	ldr	x9, [x8, #1576]
  42cc3c:	ldr	x9, [x9]
  42cc40:	str	x9, [sp, #1568]
  42cc44:	b	42cc50 <parse_token+0x89a0>
  42cc48:	mov	x8, xzr
  42cc4c:	str	x8, [sp, #1568]
  42cc50:	ldr	x8, [sp, #1568]
  42cc54:	ldr	x9, [sp, #5504]
  42cc58:	str	x8, [x9, #1560]
  42cc5c:	mov	x8, xzr
  42cc60:	str	x8, [x9, #1544]
  42cc64:	str	x8, [x9, #1536]
  42cc68:	mov	w10, #0x3                   	// #3
  42cc6c:	str	w10, [sp, #7188]
  42cc70:	mov	w10, #0x16                  	// #22
  42cc74:	movk	w10, #0x4000, lsl #16
  42cc78:	str	w10, [sp, #7184]
  42cc7c:	ldr	x8, [x9, #1536]
  42cc80:	cbz	x8, 42ccc8 <parse_token+0x8a18>
  42cc84:	mov	w0, #0x1                   	// #1
  42cc88:	bl	40a3f0 <log_get_max_level_realm@plt>
  42cc8c:	ldr	w8, [sp, #7188]
  42cc90:	cmp	w0, w8
  42cc94:	cset	w8, ge  // ge = tcont
  42cc98:	mov	w9, #0x1                   	// #1
  42cc9c:	eor	w8, w8, #0x1
  42cca0:	eor	w8, w8, w9
  42cca4:	and	w8, w8, #0x1
  42cca8:	mov	w1, w8
  42ccac:	sxtw	x10, w1
  42ccb0:	cbz	x10, 42ccc8 <parse_token+0x8a18>
  42ccb4:	ldr	x8, [sp, #5504]
  42ccb8:	ldr	x0, [x8, #1536]
  42ccbc:	add	x1, sp, #0x1, lsl #12
  42ccc0:	add	x1, x1, #0xc20
  42ccc4:	bl	40a860 <sd_device_get_sysname@plt>
  42ccc8:	ldr	w0, [sp, #7188]
  42cccc:	ldr	w1, [sp, #7184]
  42ccd0:	ldr	x8, [sp, #5504]
  42ccd4:	ldr	x9, [x8, #1544]
  42ccd8:	mov	x10, xzr
  42ccdc:	cmp	x9, #0x0
  42cce0:	ldr	x9, [sp, #5496]
  42cce4:	csel	x5, x9, x10, ne  // ne = any
  42cce8:	ldr	x6, [x8, #1544]
  42ccec:	ldr	x10, [x8, #1560]
  42ccf0:	str	w0, [sp, #1564]
  42ccf4:	mov	x0, x10
  42ccf8:	str	w1, [sp, #1560]
  42ccfc:	str	x5, [sp, #1552]
  42cd00:	str	x6, [sp, #1544]
  42cd04:	bl	424274 <strna>
  42cd08:	ldr	x8, [sp, #5504]
  42cd0c:	ldr	x9, [x8, #1568]
  42cd10:	str	x0, [sp, #1536]
  42cd14:	cbz	x9, 42cd2c <parse_token+0x8a7c>
  42cd18:	ldr	x8, [sp, #5504]
  42cd1c:	ldr	x9, [x8, #1568]
  42cd20:	ldr	w10, [x9, #8]
  42cd24:	str	w10, [sp, #1532]
  42cd28:	b	42cd34 <parse_token+0x8a84>
  42cd2c:	mov	w8, wzr
  42cd30:	str	w8, [sp, #1532]
  42cd34:	ldr	w8, [sp, #1532]
  42cd38:	ldr	x9, [sp, #5512]
  42cd3c:	ldr	x10, [x9, #1864]
  42cd40:	ldr	w0, [sp, #1564]
  42cd44:	ldr	w1, [sp, #1560]
  42cd48:	ldr	x2, [sp, #5488]
  42cd4c:	mov	w3, #0x34d                 	// #845
  42cd50:	ldr	x4, [sp, #5480]
  42cd54:	ldr	x5, [sp, #1552]
  42cd58:	ldr	x6, [sp, #1544]
  42cd5c:	mov	x11, xzr
  42cd60:	mov	x7, x11
  42cd64:	mov	x12, sp
  42cd68:	str	x11, [x12]
  42cd6c:	mov	x11, sp
  42cd70:	ldr	x12, [sp, #5472]
  42cd74:	str	x12, [x11, #8]
  42cd78:	mov	x11, sp
  42cd7c:	ldr	x13, [sp, #1536]
  42cd80:	str	x13, [x11, #16]
  42cd84:	mov	x11, sp
  42cd88:	str	w8, [x11, #24]
  42cd8c:	mov	x11, sp
  42cd90:	ldr	x14, [sp, #5464]
  42cd94:	str	x14, [x11, #32]
  42cd98:	mov	x11, sp
  42cd9c:	str	x10, [x11, #40]
  42cda0:	bl	40a870 <log_object_internal@plt>
  42cda4:	str	w0, [sp, #7180]
  42cda8:	ldr	w8, [sp, #7180]
  42cdac:	str	w8, [sp, #7212]
  42cdb0:	ldr	w8, [sp, #7212]
  42cdb4:	stur	w8, [x29, #-4]
  42cdb8:	b	4300f8 <parse_token+0xbe48>
  42cdbc:	ldur	w8, [x29, #-36]
  42cdc0:	cmp	w8, #0x2
  42cdc4:	b.ne	42cfb0 <parse_token+0x8d00>  // b.any
  42cdc8:	ldr	x8, [sp, #5512]
  42cdcc:	ldr	x9, [x8, #1872]
  42cdd0:	ldr	x10, [sp, #5504]
  42cdd4:	str	x9, [x10, #1512]
  42cdd8:	ldr	x9, [x10, #1512]
  42cddc:	cbz	x9, 42cdf4 <parse_token+0x8b44>
  42cde0:	ldr	x8, [sp, #5504]
  42cde4:	ldr	x9, [x8, #1512]
  42cde8:	ldr	x9, [x9, #32]
  42cdec:	str	x9, [sp, #1520]
  42cdf0:	b	42cdfc <parse_token+0x8b4c>
  42cdf4:	mov	x8, xzr
  42cdf8:	str	x8, [sp, #1520]
  42cdfc:	ldr	x8, [sp, #1520]
  42ce00:	ldr	x9, [sp, #5504]
  42ce04:	str	x8, [x9, #1504]
  42ce08:	ldr	x8, [x9, #1504]
  42ce0c:	cbz	x8, 42ce24 <parse_token+0x8b74>
  42ce10:	ldr	x8, [sp, #5504]
  42ce14:	ldr	x9, [x8, #1504]
  42ce18:	ldr	x9, [x9, #8]
  42ce1c:	str	x9, [sp, #1512]
  42ce20:	b	42ce2c <parse_token+0x8b7c>
  42ce24:	mov	x8, xzr
  42ce28:	str	x8, [sp, #1512]
  42ce2c:	ldr	x8, [sp, #1512]
  42ce30:	ldr	x9, [sp, #5504]
  42ce34:	str	x8, [x9, #1496]
  42ce38:	ldr	x8, [x9, #1504]
  42ce3c:	cbz	x8, 42ce54 <parse_token+0x8ba4>
  42ce40:	ldr	x8, [sp, #5504]
  42ce44:	ldr	x9, [x8, #1504]
  42ce48:	ldr	x9, [x9]
  42ce4c:	str	x9, [sp, #1504]
  42ce50:	b	42ce5c <parse_token+0x8bac>
  42ce54:	mov	x8, xzr
  42ce58:	str	x8, [sp, #1504]
  42ce5c:	ldr	x8, [sp, #1504]
  42ce60:	ldr	x9, [sp, #5504]
  42ce64:	str	x8, [x9, #1488]
  42ce68:	mov	x8, xzr
  42ce6c:	str	x8, [x9, #1472]
  42ce70:	str	x8, [x9, #1464]
  42ce74:	mov	w10, #0x4                   	// #4
  42ce78:	str	w10, [sp, #7116]
  42ce7c:	str	wzr, [sp, #7112]
  42ce80:	ldr	x8, [x9, #1464]
  42ce84:	cbz	x8, 42cecc <parse_token+0x8c1c>
  42ce88:	mov	w0, #0x1                   	// #1
  42ce8c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ce90:	ldr	w8, [sp, #7116]
  42ce94:	cmp	w0, w8
  42ce98:	cset	w8, ge  // ge = tcont
  42ce9c:	mov	w9, #0x1                   	// #1
  42cea0:	eor	w8, w8, #0x1
  42cea4:	eor	w8, w8, w9
  42cea8:	and	w8, w8, #0x1
  42ceac:	mov	w1, w8
  42ceb0:	sxtw	x10, w1
  42ceb4:	cbz	x10, 42cecc <parse_token+0x8c1c>
  42ceb8:	ldr	x8, [sp, #5504]
  42cebc:	ldr	x0, [x8, #1464]
  42cec0:	add	x1, sp, #0x1, lsl #12
  42cec4:	add	x1, x1, #0xbd8
  42cec8:	bl	40a860 <sd_device_get_sysname@plt>
  42cecc:	ldr	w0, [sp, #7116]
  42ced0:	ldr	w1, [sp, #7112]
  42ced4:	ldr	x8, [sp, #5504]
  42ced8:	ldr	x9, [x8, #1472]
  42cedc:	mov	x10, xzr
  42cee0:	cmp	x9, #0x0
  42cee4:	ldr	x9, [sp, #5496]
  42cee8:	csel	x5, x9, x10, ne  // ne = any
  42ceec:	ldr	x6, [x8, #1472]
  42cef0:	ldr	x10, [x8, #1488]
  42cef4:	str	w0, [sp, #1500]
  42cef8:	mov	x0, x10
  42cefc:	str	w1, [sp, #1496]
  42cf00:	str	x5, [sp, #1488]
  42cf04:	str	x6, [sp, #1480]
  42cf08:	bl	424274 <strna>
  42cf0c:	ldr	x8, [sp, #5504]
  42cf10:	ldr	x9, [x8, #1496]
  42cf14:	str	x0, [sp, #1472]
  42cf18:	cbz	x9, 42cf30 <parse_token+0x8c80>
  42cf1c:	ldr	x8, [sp, #5504]
  42cf20:	ldr	x9, [x8, #1496]
  42cf24:	ldr	w10, [x9, #8]
  42cf28:	str	w10, [sp, #1468]
  42cf2c:	b	42cf38 <parse_token+0x8c88>
  42cf30:	mov	w8, wzr
  42cf34:	str	w8, [sp, #1468]
  42cf38:	ldr	w8, [sp, #1468]
  42cf3c:	ldr	x9, [sp, #5512]
  42cf40:	ldr	x10, [x9, #1864]
  42cf44:	ldr	w0, [sp, #1500]
  42cf48:	ldr	w1, [sp, #1496]
  42cf4c:	ldr	x2, [sp, #5488]
  42cf50:	mov	w3, #0x34f                 	// #847
  42cf54:	ldr	x4, [sp, #5480]
  42cf58:	ldr	x5, [sp, #1488]
  42cf5c:	ldr	x6, [sp, #1480]
  42cf60:	mov	x11, xzr
  42cf64:	mov	x7, x11
  42cf68:	mov	x12, sp
  42cf6c:	str	x11, [x12]
  42cf70:	mov	x11, sp
  42cf74:	ldr	x12, [sp, #5448]
  42cf78:	str	x12, [x11, #8]
  42cf7c:	mov	x11, sp
  42cf80:	ldr	x13, [sp, #1472]
  42cf84:	str	x13, [x11, #16]
  42cf88:	mov	x11, sp
  42cf8c:	str	w8, [x11, #24]
  42cf90:	mov	x11, sp
  42cf94:	str	x10, [x11, #32]
  42cf98:	bl	40a870 <log_object_internal@plt>
  42cf9c:	str	w0, [sp, #7108]
  42cfa0:	ldr	w8, [sp, #7108]
  42cfa4:	str	w8, [sp, #7140]
  42cfa8:	mov	w8, #0x4                   	// #4
  42cfac:	stur	w8, [x29, #-36]
  42cfb0:	ldr	x8, [sp, #5512]
  42cfb4:	ldr	x0, [x8, #1840]
  42cfb8:	add	x1, sp, #0x1, lsl #12
  42cfbc:	add	x1, x1, #0xc98
  42cfc0:	bl	40b320 <parse_uid@plt>
  42cfc4:	cmp	w0, #0x0
  42cfc8:	cset	w9, lt  // lt = tstop
  42cfcc:	tbnz	w9, #0, 42d004 <parse_token+0x8d54>
  42cfd0:	ldr	x8, [sp, #5512]
  42cfd4:	ldr	x0, [x8, #1824]
  42cfd8:	ldur	w2, [x29, #-36]
  42cfdc:	ldr	w9, [sp, #7320]
  42cfe0:	mov	w10, w9
  42cfe4:	add	x10, x10, #0x1
  42cfe8:	mov	w1, #0x22                  	// #34
  42cfec:	mov	x11, xzr
  42cff0:	mov	x3, x11
  42cff4:	mov	x4, x10
  42cff8:	bl	430504 <rule_line_add_token>
  42cffc:	stur	w0, [x29, #-68]
  42d000:	b	42d4c8 <parse_token+0x9218>
  42d004:	ldr	x8, [sp, #5512]
  42d008:	ldr	x9, [x8, #1872]
  42d00c:	ldr	w10, [x9, #8]
  42d010:	cmp	w10, #0x2
  42d014:	b.ne	42d27c <parse_token+0x8fcc>  // b.any
  42d018:	ldr	x8, [sp, #5512]
  42d01c:	ldr	x0, [x8, #1840]
  42d020:	bl	4315b8 <rule_get_substitution_type>
  42d024:	cbnz	w0, 42d27c <parse_token+0x8fcc>
  42d028:	ldr	x8, [sp, #5512]
  42d02c:	ldr	x0, [x8, #1872]
  42d030:	ldr	x1, [x8, #1840]
  42d034:	add	x2, sp, #0x1, lsl #12
  42d038:	add	x2, x2, #0xc98
  42d03c:	bl	431680 <rule_resolve_user>
  42d040:	stur	w0, [x29, #-68]
  42d044:	ldur	w9, [x29, #-68]
  42d048:	cmp	w9, #0x0
  42d04c:	cset	w9, ge  // ge = tcont
  42d050:	tbnz	w9, #0, 42d248 <parse_token+0x8f98>
  42d054:	ldr	x8, [sp, #5512]
  42d058:	ldr	x9, [x8, #1872]
  42d05c:	ldr	x10, [sp, #5504]
  42d060:	str	x9, [x10, #1440]
  42d064:	ldr	x9, [x10, #1440]
  42d068:	cbz	x9, 42d080 <parse_token+0x8dd0>
  42d06c:	ldr	x8, [sp, #5504]
  42d070:	ldr	x9, [x8, #1440]
  42d074:	ldr	x9, [x9, #32]
  42d078:	str	x9, [sp, #1456]
  42d07c:	b	42d088 <parse_token+0x8dd8>
  42d080:	mov	x8, xzr
  42d084:	str	x8, [sp, #1456]
  42d088:	ldr	x8, [sp, #1456]
  42d08c:	ldr	x9, [sp, #5504]
  42d090:	str	x8, [x9, #1432]
  42d094:	ldr	x8, [x9, #1432]
  42d098:	cbz	x8, 42d0b0 <parse_token+0x8e00>
  42d09c:	ldr	x8, [sp, #5504]
  42d0a0:	ldr	x9, [x8, #1432]
  42d0a4:	ldr	x9, [x9, #8]
  42d0a8:	str	x9, [sp, #1448]
  42d0ac:	b	42d0b8 <parse_token+0x8e08>
  42d0b0:	mov	x8, xzr
  42d0b4:	str	x8, [sp, #1448]
  42d0b8:	ldr	x8, [sp, #1448]
  42d0bc:	ldr	x9, [sp, #5504]
  42d0c0:	str	x8, [x9, #1424]
  42d0c4:	ldr	x8, [x9, #1432]
  42d0c8:	cbz	x8, 42d0e0 <parse_token+0x8e30>
  42d0cc:	ldr	x8, [sp, #5504]
  42d0d0:	ldr	x9, [x8, #1432]
  42d0d4:	ldr	x9, [x9]
  42d0d8:	str	x9, [sp, #1440]
  42d0dc:	b	42d0e8 <parse_token+0x8e38>
  42d0e0:	mov	x8, xzr
  42d0e4:	str	x8, [sp, #1440]
  42d0e8:	ldr	x8, [sp, #1440]
  42d0ec:	ldr	x9, [sp, #5504]
  42d0f0:	str	x8, [x9, #1416]
  42d0f4:	mov	x8, xzr
  42d0f8:	str	x8, [x9, #1400]
  42d0fc:	str	x8, [x9, #1392]
  42d100:	mov	w10, #0x3                   	// #3
  42d104:	str	w10, [sp, #7044]
  42d108:	ldur	w10, [x29, #-68]
  42d10c:	str	w10, [sp, #7040]
  42d110:	ldr	x8, [x9, #1392]
  42d114:	cbz	x8, 42d15c <parse_token+0x8eac>
  42d118:	mov	w0, #0x1                   	// #1
  42d11c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42d120:	ldr	w8, [sp, #7044]
  42d124:	cmp	w0, w8
  42d128:	cset	w8, ge  // ge = tcont
  42d12c:	mov	w9, #0x1                   	// #1
  42d130:	eor	w8, w8, #0x1
  42d134:	eor	w8, w8, w9
  42d138:	and	w8, w8, #0x1
  42d13c:	mov	w1, w8
  42d140:	sxtw	x10, w1
  42d144:	cbz	x10, 42d15c <parse_token+0x8eac>
  42d148:	ldr	x8, [sp, #5504]
  42d14c:	ldr	x0, [x8, #1392]
  42d150:	add	x1, sp, #0x1, lsl #12
  42d154:	add	x1, x1, #0xb90
  42d158:	bl	40a860 <sd_device_get_sysname@plt>
  42d15c:	ldr	w0, [sp, #7044]
  42d160:	ldr	w1, [sp, #7040]
  42d164:	ldr	x8, [sp, #5504]
  42d168:	ldr	x9, [x8, #1400]
  42d16c:	mov	x10, xzr
  42d170:	cmp	x9, #0x0
  42d174:	ldr	x9, [sp, #5496]
  42d178:	csel	x5, x9, x10, ne  // ne = any
  42d17c:	ldr	x6, [x8, #1400]
  42d180:	ldr	x10, [x8, #1416]
  42d184:	str	w0, [sp, #1436]
  42d188:	mov	x0, x10
  42d18c:	str	w1, [sp, #1432]
  42d190:	str	x5, [sp, #1424]
  42d194:	str	x6, [sp, #1416]
  42d198:	bl	424274 <strna>
  42d19c:	ldr	x8, [sp, #5504]
  42d1a0:	ldr	x9, [x8, #1424]
  42d1a4:	str	x0, [sp, #1408]
  42d1a8:	cbz	x9, 42d1c0 <parse_token+0x8f10>
  42d1ac:	ldr	x8, [sp, #5504]
  42d1b0:	ldr	x9, [x8, #1424]
  42d1b4:	ldr	w10, [x9, #8]
  42d1b8:	str	w10, [sp, #1404]
  42d1bc:	b	42d1c8 <parse_token+0x8f18>
  42d1c0:	mov	w8, wzr
  42d1c4:	str	w8, [sp, #1404]
  42d1c8:	ldr	w8, [sp, #1404]
  42d1cc:	ldr	x9, [sp, #5512]
  42d1d0:	ldr	x10, [x9, #1840]
  42d1d4:	ldr	w0, [sp, #1436]
  42d1d8:	ldr	w1, [sp, #1432]
  42d1dc:	ldr	x2, [sp, #5488]
  42d1e0:	mov	w3, #0x359                 	// #857
  42d1e4:	ldr	x4, [sp, #5480]
  42d1e8:	ldr	x5, [sp, #1424]
  42d1ec:	ldr	x6, [sp, #1416]
  42d1f0:	mov	x11, xzr
  42d1f4:	mov	x7, x11
  42d1f8:	mov	x12, sp
  42d1fc:	str	x11, [x12]
  42d200:	mov	x11, sp
  42d204:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42d208:	add	x12, x12, #0xec4
  42d20c:	str	x12, [x11, #8]
  42d210:	mov	x11, sp
  42d214:	ldr	x12, [sp, #1408]
  42d218:	str	x12, [x11, #16]
  42d21c:	mov	x11, sp
  42d220:	str	w8, [x11, #24]
  42d224:	mov	x11, sp
  42d228:	str	x10, [x11, #32]
  42d22c:	bl	40a870 <log_object_internal@plt>
  42d230:	str	w0, [sp, #7036]
  42d234:	ldr	w8, [sp, #7036]
  42d238:	str	w8, [sp, #7068]
  42d23c:	ldr	w8, [sp, #7068]
  42d240:	stur	w8, [x29, #-4]
  42d244:	b	4300f8 <parse_token+0xbe48>
  42d248:	ldr	x8, [sp, #5512]
  42d24c:	ldr	x0, [x8, #1824]
  42d250:	ldur	w2, [x29, #-36]
  42d254:	ldr	w9, [sp, #7320]
  42d258:	mov	w10, w9
  42d25c:	add	x10, x10, #0x1
  42d260:	mov	w1, #0x22                  	// #34
  42d264:	mov	x11, xzr
  42d268:	mov	x3, x11
  42d26c:	mov	x4, x10
  42d270:	bl	430504 <rule_line_add_token>
  42d274:	stur	w0, [x29, #-68]
  42d278:	b	42d4c8 <parse_token+0x9218>
  42d27c:	ldr	x8, [sp, #5512]
  42d280:	ldr	x9, [x8, #1872]
  42d284:	ldr	w10, [x9, #8]
  42d288:	cbz	w10, 42d2d0 <parse_token+0x9020>
  42d28c:	ldr	x8, [sp, #5512]
  42d290:	ldr	x0, [x8, #1872]
  42d294:	ldr	x1, [x8, #1864]
  42d298:	ldr	x2, [x8, #1840]
  42d29c:	mov	w9, #0x1                   	// #1
  42d2a0:	and	w3, w9, #0x1
  42d2a4:	bl	430d00 <check_value_format_and_warn>
  42d2a8:	ldr	x8, [sp, #5512]
  42d2ac:	ldr	x0, [x8, #1824]
  42d2b0:	ldur	w2, [x29, #-36]
  42d2b4:	ldr	x3, [x8, #1840]
  42d2b8:	mov	w1, #0x1f                  	// #31
  42d2bc:	mov	x10, xzr
  42d2c0:	mov	x4, x10
  42d2c4:	bl	430504 <rule_line_add_token>
  42d2c8:	stur	w0, [x29, #-68]
  42d2cc:	b	42d4c8 <parse_token+0x9218>
  42d2d0:	ldr	x8, [sp, #5512]
  42d2d4:	ldr	x9, [x8, #1872]
  42d2d8:	ldr	x10, [sp, #5504]
  42d2dc:	str	x9, [x10, #1368]
  42d2e0:	ldr	x9, [x10, #1368]
  42d2e4:	cbz	x9, 42d2fc <parse_token+0x904c>
  42d2e8:	ldr	x8, [sp, #5504]
  42d2ec:	ldr	x9, [x8, #1368]
  42d2f0:	ldr	x9, [x9, #32]
  42d2f4:	str	x9, [sp, #1392]
  42d2f8:	b	42d304 <parse_token+0x9054>
  42d2fc:	mov	x8, xzr
  42d300:	str	x8, [sp, #1392]
  42d304:	ldr	x8, [sp, #1392]
  42d308:	ldr	x9, [sp, #5504]
  42d30c:	str	x8, [x9, #1360]
  42d310:	ldr	x8, [x9, #1360]
  42d314:	cbz	x8, 42d32c <parse_token+0x907c>
  42d318:	ldr	x8, [sp, #5504]
  42d31c:	ldr	x9, [x8, #1360]
  42d320:	ldr	x9, [x9, #8]
  42d324:	str	x9, [sp, #1384]
  42d328:	b	42d334 <parse_token+0x9084>
  42d32c:	mov	x8, xzr
  42d330:	str	x8, [sp, #1384]
  42d334:	ldr	x8, [sp, #1384]
  42d338:	ldr	x9, [sp, #5504]
  42d33c:	str	x8, [x9, #1352]
  42d340:	ldr	x8, [x9, #1360]
  42d344:	cbz	x8, 42d35c <parse_token+0x90ac>
  42d348:	ldr	x8, [sp, #5504]
  42d34c:	ldr	x9, [x8, #1360]
  42d350:	ldr	x9, [x9]
  42d354:	str	x9, [sp, #1376]
  42d358:	b	42d364 <parse_token+0x90b4>
  42d35c:	mov	x8, xzr
  42d360:	str	x8, [sp, #1376]
  42d364:	ldr	x8, [sp, #1376]
  42d368:	ldr	x9, [sp, #5504]
  42d36c:	str	x8, [x9, #1344]
  42d370:	mov	x8, xzr
  42d374:	str	x8, [x9, #1328]
  42d378:	str	x8, [x9, #1320]
  42d37c:	mov	w10, #0x7                   	// #7
  42d380:	str	w10, [sp, #6972]
  42d384:	str	wzr, [sp, #6968]
  42d388:	ldr	x8, [x9, #1320]
  42d38c:	cbz	x8, 42d3d4 <parse_token+0x9124>
  42d390:	mov	w0, #0x1                   	// #1
  42d394:	bl	40a3f0 <log_get_max_level_realm@plt>
  42d398:	ldr	w8, [sp, #6972]
  42d39c:	cmp	w0, w8
  42d3a0:	cset	w8, ge  // ge = tcont
  42d3a4:	mov	w9, #0x1                   	// #1
  42d3a8:	eor	w8, w8, #0x1
  42d3ac:	eor	w8, w8, w9
  42d3b0:	and	w8, w8, #0x1
  42d3b4:	mov	w1, w8
  42d3b8:	sxtw	x10, w1
  42d3bc:	cbz	x10, 42d3d4 <parse_token+0x9124>
  42d3c0:	ldr	x8, [sp, #5504]
  42d3c4:	ldr	x0, [x8, #1320]
  42d3c8:	add	x1, sp, #0x1, lsl #12
  42d3cc:	add	x1, x1, #0xb48
  42d3d0:	bl	40a860 <sd_device_get_sysname@plt>
  42d3d4:	ldr	w0, [sp, #6972]
  42d3d8:	ldr	w1, [sp, #6968]
  42d3dc:	ldr	x8, [sp, #5504]
  42d3e0:	ldr	x9, [x8, #1328]
  42d3e4:	mov	x10, xzr
  42d3e8:	cmp	x9, #0x0
  42d3ec:	ldr	x9, [sp, #5496]
  42d3f0:	csel	x5, x9, x10, ne  // ne = any
  42d3f4:	ldr	x6, [x8, #1328]
  42d3f8:	ldr	x10, [x8, #1344]
  42d3fc:	str	w0, [sp, #1372]
  42d400:	mov	x0, x10
  42d404:	str	w1, [sp, #1368]
  42d408:	str	x5, [sp, #1360]
  42d40c:	str	x6, [sp, #1352]
  42d410:	bl	424274 <strna>
  42d414:	ldr	x8, [sp, #5504]
  42d418:	ldr	x9, [x8, #1352]
  42d41c:	str	x0, [sp, #1344]
  42d420:	cbz	x9, 42d438 <parse_token+0x9188>
  42d424:	ldr	x8, [sp, #5504]
  42d428:	ldr	x9, [x8, #1352]
  42d42c:	ldr	w10, [x9, #8]
  42d430:	str	w10, [sp, #1340]
  42d434:	b	42d440 <parse_token+0x9190>
  42d438:	mov	w8, wzr
  42d43c:	str	w8, [sp, #1340]
  42d440:	ldr	w8, [sp, #1340]
  42d444:	ldr	x9, [sp, #5512]
  42d448:	ldr	x10, [x9, #1864]
  42d44c:	ldr	x11, [x9, #1840]
  42d450:	ldr	w0, [sp, #1372]
  42d454:	ldr	w1, [sp, #1368]
  42d458:	ldr	x2, [sp, #5488]
  42d45c:	mov	w3, #0x360                 	// #864
  42d460:	ldr	x4, [sp, #5480]
  42d464:	ldr	x5, [sp, #1360]
  42d468:	ldr	x6, [sp, #1352]
  42d46c:	mov	x12, xzr
  42d470:	mov	x7, x12
  42d474:	mov	x13, sp
  42d478:	str	x12, [x13]
  42d47c:	mov	x12, sp
  42d480:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  42d484:	add	x13, x13, #0xeef
  42d488:	str	x13, [x12, #8]
  42d48c:	mov	x12, sp
  42d490:	ldr	x13, [sp, #1344]
  42d494:	str	x13, [x12, #16]
  42d498:	mov	x12, sp
  42d49c:	str	w8, [x12, #24]
  42d4a0:	mov	x12, sp
  42d4a4:	str	x10, [x12, #32]
  42d4a8:	mov	x10, sp
  42d4ac:	str	x11, [x10, #40]
  42d4b0:	bl	40a870 <log_object_internal@plt>
  42d4b4:	str	w0, [sp, #6964]
  42d4b8:	ldr	w8, [sp, #6964]
  42d4bc:	str	w8, [sp, #6996]
  42d4c0:	stur	wzr, [x29, #-4]
  42d4c4:	b	4300f8 <parse_token+0xbe48>
  42d4c8:	b	4300c4 <parse_token+0xbe14>
  42d4cc:	ldr	x8, [sp, #5512]
  42d4d0:	ldr	x0, [x8, #1864]
  42d4d4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42d4d8:	add	x1, x1, #0xf25
  42d4dc:	bl	40aa20 <strcmp@plt>
  42d4e0:	cbnz	w0, 42e018 <parse_token+0x9d68>
  42d4e4:	ldr	x8, [sp, #5512]
  42d4e8:	ldr	x9, [x8, #1856]
  42d4ec:	cbz	x9, 42d6f0 <parse_token+0x9440>
  42d4f0:	ldr	x8, [sp, #5512]
  42d4f4:	ldr	x9, [x8, #1872]
  42d4f8:	ldr	x10, [sp, #5504]
  42d4fc:	str	x9, [x10, #1296]
  42d500:	ldr	x9, [x10, #1296]
  42d504:	cbz	x9, 42d51c <parse_token+0x926c>
  42d508:	ldr	x8, [sp, #5504]
  42d50c:	ldr	x9, [x8, #1296]
  42d510:	ldr	x9, [x9, #32]
  42d514:	str	x9, [sp, #1328]
  42d518:	b	42d524 <parse_token+0x9274>
  42d51c:	mov	x8, xzr
  42d520:	str	x8, [sp, #1328]
  42d524:	ldr	x8, [sp, #1328]
  42d528:	ldr	x9, [sp, #5504]
  42d52c:	str	x8, [x9, #1288]
  42d530:	ldr	x8, [x9, #1288]
  42d534:	cbz	x8, 42d54c <parse_token+0x929c>
  42d538:	ldr	x8, [sp, #5504]
  42d53c:	ldr	x9, [x8, #1288]
  42d540:	ldr	x9, [x9, #8]
  42d544:	str	x9, [sp, #1320]
  42d548:	b	42d554 <parse_token+0x92a4>
  42d54c:	mov	x8, xzr
  42d550:	str	x8, [sp, #1320]
  42d554:	ldr	x8, [sp, #1320]
  42d558:	ldr	x9, [sp, #5504]
  42d55c:	str	x8, [x9, #1280]
  42d560:	ldr	x8, [x9, #1288]
  42d564:	cbz	x8, 42d57c <parse_token+0x92cc>
  42d568:	ldr	x8, [sp, #5504]
  42d56c:	ldr	x9, [x8, #1288]
  42d570:	ldr	x9, [x9]
  42d574:	str	x9, [sp, #1312]
  42d578:	b	42d584 <parse_token+0x92d4>
  42d57c:	mov	x8, xzr
  42d580:	str	x8, [sp, #1312]
  42d584:	ldr	x8, [sp, #1312]
  42d588:	ldr	x9, [sp, #5504]
  42d58c:	str	x8, [x9, #1272]
  42d590:	mov	x8, xzr
  42d594:	str	x8, [x9, #1256]
  42d598:	str	x8, [x9, #1248]
  42d59c:	mov	w10, #0x3                   	// #3
  42d5a0:	str	w10, [sp, #6900]
  42d5a4:	mov	w10, #0x16                  	// #22
  42d5a8:	movk	w10, #0x4000, lsl #16
  42d5ac:	str	w10, [sp, #6896]
  42d5b0:	ldr	x8, [x9, #1248]
  42d5b4:	cbz	x8, 42d5fc <parse_token+0x934c>
  42d5b8:	mov	w0, #0x1                   	// #1
  42d5bc:	bl	40a3f0 <log_get_max_level_realm@plt>
  42d5c0:	ldr	w8, [sp, #6900]
  42d5c4:	cmp	w0, w8
  42d5c8:	cset	w8, ge  // ge = tcont
  42d5cc:	mov	w9, #0x1                   	// #1
  42d5d0:	eor	w8, w8, #0x1
  42d5d4:	eor	w8, w8, w9
  42d5d8:	and	w8, w8, #0x1
  42d5dc:	mov	w1, w8
  42d5e0:	sxtw	x10, w1
  42d5e4:	cbz	x10, 42d5fc <parse_token+0x934c>
  42d5e8:	ldr	x8, [sp, #5504]
  42d5ec:	ldr	x0, [x8, #1248]
  42d5f0:	add	x1, sp, #0x1, lsl #12
  42d5f4:	add	x1, x1, #0xb00
  42d5f8:	bl	40a860 <sd_device_get_sysname@plt>
  42d5fc:	ldr	w0, [sp, #6900]
  42d600:	ldr	w1, [sp, #6896]
  42d604:	ldr	x8, [sp, #5504]
  42d608:	ldr	x9, [x8, #1256]
  42d60c:	mov	x10, xzr
  42d610:	cmp	x9, #0x0
  42d614:	ldr	x9, [sp, #5496]
  42d618:	csel	x5, x9, x10, ne  // ne = any
  42d61c:	ldr	x6, [x8, #1256]
  42d620:	ldr	x10, [x8, #1272]
  42d624:	str	w0, [sp, #1308]
  42d628:	mov	x0, x10
  42d62c:	str	w1, [sp, #1304]
  42d630:	str	x5, [sp, #1296]
  42d634:	str	x6, [sp, #1288]
  42d638:	bl	424274 <strna>
  42d63c:	ldr	x8, [sp, #5504]
  42d640:	ldr	x9, [x8, #1280]
  42d644:	str	x0, [sp, #1280]
  42d648:	cbz	x9, 42d660 <parse_token+0x93b0>
  42d64c:	ldr	x8, [sp, #5504]
  42d650:	ldr	x9, [x8, #1280]
  42d654:	ldr	w10, [x9, #8]
  42d658:	str	w10, [sp, #1276]
  42d65c:	b	42d668 <parse_token+0x93b8>
  42d660:	mov	w8, wzr
  42d664:	str	w8, [sp, #1276]
  42d668:	ldr	w8, [sp, #1276]
  42d66c:	ldr	x9, [sp, #5512]
  42d670:	ldr	x10, [x9, #1864]
  42d674:	ldr	w0, [sp, #1308]
  42d678:	ldr	w1, [sp, #1304]
  42d67c:	ldr	x2, [sp, #5488]
  42d680:	mov	w3, #0x367                 	// #871
  42d684:	ldr	x4, [sp, #5480]
  42d688:	ldr	x5, [sp, #1296]
  42d68c:	ldr	x6, [sp, #1288]
  42d690:	mov	x11, xzr
  42d694:	mov	x7, x11
  42d698:	mov	x12, sp
  42d69c:	str	x11, [x12]
  42d6a0:	mov	x11, sp
  42d6a4:	ldr	x12, [sp, #5472]
  42d6a8:	str	x12, [x11, #8]
  42d6ac:	mov	x11, sp
  42d6b0:	ldr	x13, [sp, #1280]
  42d6b4:	str	x13, [x11, #16]
  42d6b8:	mov	x11, sp
  42d6bc:	str	w8, [x11, #24]
  42d6c0:	mov	x11, sp
  42d6c4:	ldr	x14, [sp, #5456]
  42d6c8:	str	x14, [x11, #32]
  42d6cc:	mov	x11, sp
  42d6d0:	str	x10, [x11, #40]
  42d6d4:	bl	40a870 <log_object_internal@plt>
  42d6d8:	str	w0, [sp, #6892]
  42d6dc:	ldr	w8, [sp, #6892]
  42d6e0:	str	w8, [sp, #6924]
  42d6e4:	ldr	w8, [sp, #6924]
  42d6e8:	stur	w8, [x29, #-4]
  42d6ec:	b	4300f8 <parse_token+0xbe48>
  42d6f0:	ldr	x8, [sp, #5512]
  42d6f4:	ldrb	w9, [x8, #1839]
  42d6f8:	tbnz	w9, #0, 42d708 <parse_token+0x9458>
  42d6fc:	ldur	w8, [x29, #-36]
  42d700:	cmp	w8, #0x3
  42d704:	b.ne	42d908 <parse_token+0x9658>  // b.any
  42d708:	ldr	x8, [sp, #5512]
  42d70c:	ldr	x9, [x8, #1872]
  42d710:	ldr	x10, [sp, #5504]
  42d714:	str	x9, [x10, #1224]
  42d718:	ldr	x9, [x10, #1224]
  42d71c:	cbz	x9, 42d734 <parse_token+0x9484>
  42d720:	ldr	x8, [sp, #5504]
  42d724:	ldr	x9, [x8, #1224]
  42d728:	ldr	x9, [x9, #32]
  42d72c:	str	x9, [sp, #1264]
  42d730:	b	42d73c <parse_token+0x948c>
  42d734:	mov	x8, xzr
  42d738:	str	x8, [sp, #1264]
  42d73c:	ldr	x8, [sp, #1264]
  42d740:	ldr	x9, [sp, #5504]
  42d744:	str	x8, [x9, #1216]
  42d748:	ldr	x8, [x9, #1216]
  42d74c:	cbz	x8, 42d764 <parse_token+0x94b4>
  42d750:	ldr	x8, [sp, #5504]
  42d754:	ldr	x9, [x8, #1216]
  42d758:	ldr	x9, [x9, #8]
  42d75c:	str	x9, [sp, #1256]
  42d760:	b	42d76c <parse_token+0x94bc>
  42d764:	mov	x8, xzr
  42d768:	str	x8, [sp, #1256]
  42d76c:	ldr	x8, [sp, #1256]
  42d770:	ldr	x9, [sp, #5504]
  42d774:	str	x8, [x9, #1208]
  42d778:	ldr	x8, [x9, #1216]
  42d77c:	cbz	x8, 42d794 <parse_token+0x94e4>
  42d780:	ldr	x8, [sp, #5504]
  42d784:	ldr	x9, [x8, #1216]
  42d788:	ldr	x9, [x9]
  42d78c:	str	x9, [sp, #1248]
  42d790:	b	42d79c <parse_token+0x94ec>
  42d794:	mov	x8, xzr
  42d798:	str	x8, [sp, #1248]
  42d79c:	ldr	x8, [sp, #1248]
  42d7a0:	ldr	x9, [sp, #5504]
  42d7a4:	str	x8, [x9, #1200]
  42d7a8:	mov	x8, xzr
  42d7ac:	str	x8, [x9, #1184]
  42d7b0:	str	x8, [x9, #1176]
  42d7b4:	mov	w10, #0x3                   	// #3
  42d7b8:	str	w10, [sp, #6828]
  42d7bc:	mov	w10, #0x16                  	// #22
  42d7c0:	movk	w10, #0x4000, lsl #16
  42d7c4:	str	w10, [sp, #6824]
  42d7c8:	ldr	x8, [x9, #1176]
  42d7cc:	cbz	x8, 42d814 <parse_token+0x9564>
  42d7d0:	mov	w0, #0x1                   	// #1
  42d7d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  42d7d8:	ldr	w8, [sp, #6828]
  42d7dc:	cmp	w0, w8
  42d7e0:	cset	w8, ge  // ge = tcont
  42d7e4:	mov	w9, #0x1                   	// #1
  42d7e8:	eor	w8, w8, #0x1
  42d7ec:	eor	w8, w8, w9
  42d7f0:	and	w8, w8, #0x1
  42d7f4:	mov	w1, w8
  42d7f8:	sxtw	x10, w1
  42d7fc:	cbz	x10, 42d814 <parse_token+0x9564>
  42d800:	ldr	x8, [sp, #5504]
  42d804:	ldr	x0, [x8, #1176]
  42d808:	add	x1, sp, #0x1, lsl #12
  42d80c:	add	x1, x1, #0xab8
  42d810:	bl	40a860 <sd_device_get_sysname@plt>
  42d814:	ldr	w0, [sp, #6828]
  42d818:	ldr	w1, [sp, #6824]
  42d81c:	ldr	x8, [sp, #5504]
  42d820:	ldr	x9, [x8, #1184]
  42d824:	mov	x10, xzr
  42d828:	cmp	x9, #0x0
  42d82c:	ldr	x9, [sp, #5496]
  42d830:	csel	x5, x9, x10, ne  // ne = any
  42d834:	ldr	x6, [x8, #1184]
  42d838:	ldr	x10, [x8, #1200]
  42d83c:	str	w0, [sp, #1244]
  42d840:	mov	x0, x10
  42d844:	str	w1, [sp, #1240]
  42d848:	str	x5, [sp, #1232]
  42d84c:	str	x6, [sp, #1224]
  42d850:	bl	424274 <strna>
  42d854:	ldr	x8, [sp, #5504]
  42d858:	ldr	x9, [x8, #1208]
  42d85c:	str	x0, [sp, #1216]
  42d860:	cbz	x9, 42d878 <parse_token+0x95c8>
  42d864:	ldr	x8, [sp, #5504]
  42d868:	ldr	x9, [x8, #1208]
  42d86c:	ldr	w10, [x9, #8]
  42d870:	str	w10, [sp, #1212]
  42d874:	b	42d880 <parse_token+0x95d0>
  42d878:	mov	w8, wzr
  42d87c:	str	w8, [sp, #1212]
  42d880:	ldr	w8, [sp, #1212]
  42d884:	ldr	x9, [sp, #5512]
  42d888:	ldr	x10, [x9, #1864]
  42d88c:	ldr	w0, [sp, #1244]
  42d890:	ldr	w1, [sp, #1240]
  42d894:	ldr	x2, [sp, #5488]
  42d898:	mov	w3, #0x369                 	// #873
  42d89c:	ldr	x4, [sp, #5480]
  42d8a0:	ldr	x5, [sp, #1232]
  42d8a4:	ldr	x6, [sp, #1224]
  42d8a8:	mov	x11, xzr
  42d8ac:	mov	x7, x11
  42d8b0:	mov	x12, sp
  42d8b4:	str	x11, [x12]
  42d8b8:	mov	x11, sp
  42d8bc:	ldr	x12, [sp, #5472]
  42d8c0:	str	x12, [x11, #8]
  42d8c4:	mov	x11, sp
  42d8c8:	ldr	x13, [sp, #1216]
  42d8cc:	str	x13, [x11, #16]
  42d8d0:	mov	x11, sp
  42d8d4:	str	w8, [x11, #24]
  42d8d8:	mov	x11, sp
  42d8dc:	ldr	x14, [sp, #5464]
  42d8e0:	str	x14, [x11, #32]
  42d8e4:	mov	x11, sp
  42d8e8:	str	x10, [x11, #40]
  42d8ec:	bl	40a870 <log_object_internal@plt>
  42d8f0:	str	w0, [sp, #6820]
  42d8f4:	ldr	w8, [sp, #6820]
  42d8f8:	str	w8, [sp, #6852]
  42d8fc:	ldr	w8, [sp, #6852]
  42d900:	stur	w8, [x29, #-4]
  42d904:	b	4300f8 <parse_token+0xbe48>
  42d908:	ldur	w8, [x29, #-36]
  42d90c:	cmp	w8, #0x2
  42d910:	b.ne	42dafc <parse_token+0x984c>  // b.any
  42d914:	ldr	x8, [sp, #5512]
  42d918:	ldr	x9, [x8, #1872]
  42d91c:	ldr	x10, [sp, #5504]
  42d920:	str	x9, [x10, #1152]
  42d924:	ldr	x9, [x10, #1152]
  42d928:	cbz	x9, 42d940 <parse_token+0x9690>
  42d92c:	ldr	x8, [sp, #5504]
  42d930:	ldr	x9, [x8, #1152]
  42d934:	ldr	x9, [x9, #32]
  42d938:	str	x9, [sp, #1200]
  42d93c:	b	42d948 <parse_token+0x9698>
  42d940:	mov	x8, xzr
  42d944:	str	x8, [sp, #1200]
  42d948:	ldr	x8, [sp, #1200]
  42d94c:	ldr	x9, [sp, #5504]
  42d950:	str	x8, [x9, #1144]
  42d954:	ldr	x8, [x9, #1144]
  42d958:	cbz	x8, 42d970 <parse_token+0x96c0>
  42d95c:	ldr	x8, [sp, #5504]
  42d960:	ldr	x9, [x8, #1144]
  42d964:	ldr	x9, [x9, #8]
  42d968:	str	x9, [sp, #1192]
  42d96c:	b	42d978 <parse_token+0x96c8>
  42d970:	mov	x8, xzr
  42d974:	str	x8, [sp, #1192]
  42d978:	ldr	x8, [sp, #1192]
  42d97c:	ldr	x9, [sp, #5504]
  42d980:	str	x8, [x9, #1136]
  42d984:	ldr	x8, [x9, #1144]
  42d988:	cbz	x8, 42d9a0 <parse_token+0x96f0>
  42d98c:	ldr	x8, [sp, #5504]
  42d990:	ldr	x9, [x8, #1144]
  42d994:	ldr	x9, [x9]
  42d998:	str	x9, [sp, #1184]
  42d99c:	b	42d9a8 <parse_token+0x96f8>
  42d9a0:	mov	x8, xzr
  42d9a4:	str	x8, [sp, #1184]
  42d9a8:	ldr	x8, [sp, #1184]
  42d9ac:	ldr	x9, [sp, #5504]
  42d9b0:	str	x8, [x9, #1128]
  42d9b4:	mov	x8, xzr
  42d9b8:	str	x8, [x9, #1112]
  42d9bc:	str	x8, [x9, #1104]
  42d9c0:	mov	w10, #0x4                   	// #4
  42d9c4:	str	w10, [sp, #6756]
  42d9c8:	str	wzr, [sp, #6752]
  42d9cc:	ldr	x8, [x9, #1104]
  42d9d0:	cbz	x8, 42da18 <parse_token+0x9768>
  42d9d4:	mov	w0, #0x1                   	// #1
  42d9d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  42d9dc:	ldr	w8, [sp, #6756]
  42d9e0:	cmp	w0, w8
  42d9e4:	cset	w8, ge  // ge = tcont
  42d9e8:	mov	w9, #0x1                   	// #1
  42d9ec:	eor	w8, w8, #0x1
  42d9f0:	eor	w8, w8, w9
  42d9f4:	and	w8, w8, #0x1
  42d9f8:	mov	w1, w8
  42d9fc:	sxtw	x10, w1
  42da00:	cbz	x10, 42da18 <parse_token+0x9768>
  42da04:	ldr	x8, [sp, #5504]
  42da08:	ldr	x0, [x8, #1104]
  42da0c:	add	x1, sp, #0x1, lsl #12
  42da10:	add	x1, x1, #0xa70
  42da14:	bl	40a860 <sd_device_get_sysname@plt>
  42da18:	ldr	w0, [sp, #6756]
  42da1c:	ldr	w1, [sp, #6752]
  42da20:	ldr	x8, [sp, #5504]
  42da24:	ldr	x9, [x8, #1112]
  42da28:	mov	x10, xzr
  42da2c:	cmp	x9, #0x0
  42da30:	ldr	x9, [sp, #5496]
  42da34:	csel	x5, x9, x10, ne  // ne = any
  42da38:	ldr	x6, [x8, #1112]
  42da3c:	ldr	x10, [x8, #1128]
  42da40:	str	w0, [sp, #1180]
  42da44:	mov	x0, x10
  42da48:	str	w1, [sp, #1176]
  42da4c:	str	x5, [sp, #1168]
  42da50:	str	x6, [sp, #1160]
  42da54:	bl	424274 <strna>
  42da58:	ldr	x8, [sp, #5504]
  42da5c:	ldr	x9, [x8, #1136]
  42da60:	str	x0, [sp, #1152]
  42da64:	cbz	x9, 42da7c <parse_token+0x97cc>
  42da68:	ldr	x8, [sp, #5504]
  42da6c:	ldr	x9, [x8, #1136]
  42da70:	ldr	w10, [x9, #8]
  42da74:	str	w10, [sp, #1148]
  42da78:	b	42da84 <parse_token+0x97d4>
  42da7c:	mov	w8, wzr
  42da80:	str	w8, [sp, #1148]
  42da84:	ldr	w8, [sp, #1148]
  42da88:	ldr	x9, [sp, #5512]
  42da8c:	ldr	x10, [x9, #1864]
  42da90:	ldr	w0, [sp, #1180]
  42da94:	ldr	w1, [sp, #1176]
  42da98:	ldr	x2, [sp, #5488]
  42da9c:	mov	w3, #0x36b                 	// #875
  42daa0:	ldr	x4, [sp, #5480]
  42daa4:	ldr	x5, [sp, #1168]
  42daa8:	ldr	x6, [sp, #1160]
  42daac:	mov	x11, xzr
  42dab0:	mov	x7, x11
  42dab4:	mov	x12, sp
  42dab8:	str	x11, [x12]
  42dabc:	mov	x11, sp
  42dac0:	ldr	x12, [sp, #5448]
  42dac4:	str	x12, [x11, #8]
  42dac8:	mov	x11, sp
  42dacc:	ldr	x13, [sp, #1152]
  42dad0:	str	x13, [x11, #16]
  42dad4:	mov	x11, sp
  42dad8:	str	w8, [x11, #24]
  42dadc:	mov	x11, sp
  42dae0:	str	x10, [x11, #32]
  42dae4:	bl	40a870 <log_object_internal@plt>
  42dae8:	str	w0, [sp, #6748]
  42daec:	ldr	w8, [sp, #6748]
  42daf0:	str	w8, [sp, #6780]
  42daf4:	mov	w8, #0x4                   	// #4
  42daf8:	stur	w8, [x29, #-36]
  42dafc:	ldr	x8, [sp, #5512]
  42db00:	ldr	x0, [x8, #1840]
  42db04:	add	x1, sp, #0x1, lsl #12
  42db08:	add	x1, x1, #0xb30
  42db0c:	bl	4318e8 <parse_gid>
  42db10:	cmp	w0, #0x0
  42db14:	cset	w9, lt  // lt = tstop
  42db18:	tbnz	w9, #0, 42db50 <parse_token+0x98a0>
  42db1c:	ldr	x8, [sp, #5512]
  42db20:	ldr	x0, [x8, #1824]
  42db24:	ldur	w2, [x29, #-36]
  42db28:	ldr	w9, [sp, #6960]
  42db2c:	mov	w10, w9
  42db30:	add	x10, x10, #0x1
  42db34:	mov	w1, #0x23                  	// #35
  42db38:	mov	x11, xzr
  42db3c:	mov	x3, x11
  42db40:	mov	x4, x10
  42db44:	bl	430504 <rule_line_add_token>
  42db48:	stur	w0, [x29, #-68]
  42db4c:	b	42e014 <parse_token+0x9d64>
  42db50:	ldr	x8, [sp, #5512]
  42db54:	ldr	x9, [x8, #1872]
  42db58:	ldr	w10, [x9, #8]
  42db5c:	cmp	w10, #0x2
  42db60:	b.ne	42ddc8 <parse_token+0x9b18>  // b.any
  42db64:	ldr	x8, [sp, #5512]
  42db68:	ldr	x0, [x8, #1840]
  42db6c:	bl	4315b8 <rule_get_substitution_type>
  42db70:	cbnz	w0, 42ddc8 <parse_token+0x9b18>
  42db74:	ldr	x8, [sp, #5512]
  42db78:	ldr	x0, [x8, #1872]
  42db7c:	ldr	x1, [x8, #1840]
  42db80:	add	x2, sp, #0x1, lsl #12
  42db84:	add	x2, x2, #0xb30
  42db88:	bl	431914 <rule_resolve_group>
  42db8c:	stur	w0, [x29, #-68]
  42db90:	ldur	w9, [x29, #-68]
  42db94:	cmp	w9, #0x0
  42db98:	cset	w9, ge  // ge = tcont
  42db9c:	tbnz	w9, #0, 42dd94 <parse_token+0x9ae4>
  42dba0:	ldr	x8, [sp, #5512]
  42dba4:	ldr	x9, [x8, #1872]
  42dba8:	ldr	x10, [sp, #5504]
  42dbac:	str	x9, [x10, #1080]
  42dbb0:	ldr	x9, [x10, #1080]
  42dbb4:	cbz	x9, 42dbcc <parse_token+0x991c>
  42dbb8:	ldr	x8, [sp, #5504]
  42dbbc:	ldr	x9, [x8, #1080]
  42dbc0:	ldr	x9, [x9, #32]
  42dbc4:	str	x9, [sp, #1136]
  42dbc8:	b	42dbd4 <parse_token+0x9924>
  42dbcc:	mov	x8, xzr
  42dbd0:	str	x8, [sp, #1136]
  42dbd4:	ldr	x8, [sp, #1136]
  42dbd8:	ldr	x9, [sp, #5504]
  42dbdc:	str	x8, [x9, #1072]
  42dbe0:	ldr	x8, [x9, #1072]
  42dbe4:	cbz	x8, 42dbfc <parse_token+0x994c>
  42dbe8:	ldr	x8, [sp, #5504]
  42dbec:	ldr	x9, [x8, #1072]
  42dbf0:	ldr	x9, [x9, #8]
  42dbf4:	str	x9, [sp, #1128]
  42dbf8:	b	42dc04 <parse_token+0x9954>
  42dbfc:	mov	x8, xzr
  42dc00:	str	x8, [sp, #1128]
  42dc04:	ldr	x8, [sp, #1128]
  42dc08:	ldr	x9, [sp, #5504]
  42dc0c:	str	x8, [x9, #1064]
  42dc10:	ldr	x8, [x9, #1072]
  42dc14:	cbz	x8, 42dc2c <parse_token+0x997c>
  42dc18:	ldr	x8, [sp, #5504]
  42dc1c:	ldr	x9, [x8, #1072]
  42dc20:	ldr	x9, [x9]
  42dc24:	str	x9, [sp, #1120]
  42dc28:	b	42dc34 <parse_token+0x9984>
  42dc2c:	mov	x8, xzr
  42dc30:	str	x8, [sp, #1120]
  42dc34:	ldr	x8, [sp, #1120]
  42dc38:	ldr	x9, [sp, #5504]
  42dc3c:	str	x8, [x9, #1056]
  42dc40:	mov	x8, xzr
  42dc44:	str	x8, [x9, #1040]
  42dc48:	str	x8, [x9, #1032]
  42dc4c:	mov	w10, #0x3                   	// #3
  42dc50:	str	w10, [sp, #6684]
  42dc54:	ldur	w10, [x29, #-68]
  42dc58:	str	w10, [sp, #6680]
  42dc5c:	ldr	x8, [x9, #1032]
  42dc60:	cbz	x8, 42dca8 <parse_token+0x99f8>
  42dc64:	mov	w0, #0x1                   	// #1
  42dc68:	bl	40a3f0 <log_get_max_level_realm@plt>
  42dc6c:	ldr	w8, [sp, #6684]
  42dc70:	cmp	w0, w8
  42dc74:	cset	w8, ge  // ge = tcont
  42dc78:	mov	w9, #0x1                   	// #1
  42dc7c:	eor	w8, w8, #0x1
  42dc80:	eor	w8, w8, w9
  42dc84:	and	w8, w8, #0x1
  42dc88:	mov	w1, w8
  42dc8c:	sxtw	x10, w1
  42dc90:	cbz	x10, 42dca8 <parse_token+0x99f8>
  42dc94:	ldr	x8, [sp, #5504]
  42dc98:	ldr	x0, [x8, #1032]
  42dc9c:	add	x1, sp, #0x1, lsl #12
  42dca0:	add	x1, x1, #0xa28
  42dca4:	bl	40a860 <sd_device_get_sysname@plt>
  42dca8:	ldr	w0, [sp, #6684]
  42dcac:	ldr	w1, [sp, #6680]
  42dcb0:	ldr	x8, [sp, #5504]
  42dcb4:	ldr	x9, [x8, #1040]
  42dcb8:	mov	x10, xzr
  42dcbc:	cmp	x9, #0x0
  42dcc0:	ldr	x9, [sp, #5496]
  42dcc4:	csel	x5, x9, x10, ne  // ne = any
  42dcc8:	ldr	x6, [x8, #1040]
  42dccc:	ldr	x10, [x8, #1056]
  42dcd0:	str	w0, [sp, #1116]
  42dcd4:	mov	x0, x10
  42dcd8:	str	w1, [sp, #1112]
  42dcdc:	str	x5, [sp, #1104]
  42dce0:	str	x6, [sp, #1096]
  42dce4:	bl	424274 <strna>
  42dce8:	ldr	x8, [sp, #5504]
  42dcec:	ldr	x9, [x8, #1064]
  42dcf0:	str	x0, [sp, #1088]
  42dcf4:	cbz	x9, 42dd0c <parse_token+0x9a5c>
  42dcf8:	ldr	x8, [sp, #5504]
  42dcfc:	ldr	x9, [x8, #1064]
  42dd00:	ldr	w10, [x9, #8]
  42dd04:	str	w10, [sp, #1084]
  42dd08:	b	42dd14 <parse_token+0x9a64>
  42dd0c:	mov	w8, wzr
  42dd10:	str	w8, [sp, #1084]
  42dd14:	ldr	w8, [sp, #1084]
  42dd18:	ldr	x9, [sp, #5512]
  42dd1c:	ldr	x10, [x9, #1840]
  42dd20:	ldr	w0, [sp, #1116]
  42dd24:	ldr	w1, [sp, #1112]
  42dd28:	ldr	x2, [sp, #5488]
  42dd2c:	mov	w3, #0x375                 	// #885
  42dd30:	ldr	x4, [sp, #5480]
  42dd34:	ldr	x5, [sp, #1104]
  42dd38:	ldr	x6, [sp, #1096]
  42dd3c:	mov	x11, xzr
  42dd40:	mov	x7, x11
  42dd44:	mov	x12, sp
  42dd48:	str	x11, [x12]
  42dd4c:	mov	x11, sp
  42dd50:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42dd54:	add	x12, x12, #0xf2b
  42dd58:	str	x12, [x11, #8]
  42dd5c:	mov	x11, sp
  42dd60:	ldr	x12, [sp, #1088]
  42dd64:	str	x12, [x11, #16]
  42dd68:	mov	x11, sp
  42dd6c:	str	w8, [x11, #24]
  42dd70:	mov	x11, sp
  42dd74:	str	x10, [x11, #32]
  42dd78:	bl	40a870 <log_object_internal@plt>
  42dd7c:	str	w0, [sp, #6676]
  42dd80:	ldr	w8, [sp, #6676]
  42dd84:	str	w8, [sp, #6708]
  42dd88:	ldr	w8, [sp, #6708]
  42dd8c:	stur	w8, [x29, #-4]
  42dd90:	b	4300f8 <parse_token+0xbe48>
  42dd94:	ldr	x8, [sp, #5512]
  42dd98:	ldr	x0, [x8, #1824]
  42dd9c:	ldur	w2, [x29, #-36]
  42dda0:	ldr	w9, [sp, #6960]
  42dda4:	mov	w10, w9
  42dda8:	add	x10, x10, #0x1
  42ddac:	mov	w1, #0x23                  	// #35
  42ddb0:	mov	x11, xzr
  42ddb4:	mov	x3, x11
  42ddb8:	mov	x4, x10
  42ddbc:	bl	430504 <rule_line_add_token>
  42ddc0:	stur	w0, [x29, #-68]
  42ddc4:	b	42e014 <parse_token+0x9d64>
  42ddc8:	ldr	x8, [sp, #5512]
  42ddcc:	ldr	x9, [x8, #1872]
  42ddd0:	ldr	w10, [x9, #8]
  42ddd4:	cbz	w10, 42de1c <parse_token+0x9b6c>
  42ddd8:	ldr	x8, [sp, #5512]
  42dddc:	ldr	x0, [x8, #1872]
  42dde0:	ldr	x1, [x8, #1864]
  42dde4:	ldr	x2, [x8, #1840]
  42dde8:	mov	w9, #0x1                   	// #1
  42ddec:	and	w3, w9, #0x1
  42ddf0:	bl	430d00 <check_value_format_and_warn>
  42ddf4:	ldr	x8, [sp, #5512]
  42ddf8:	ldr	x0, [x8, #1824]
  42ddfc:	ldur	w2, [x29, #-36]
  42de00:	ldr	x3, [x8, #1840]
  42de04:	mov	w1, #0x20                  	// #32
  42de08:	mov	x10, xzr
  42de0c:	mov	x4, x10
  42de10:	bl	430504 <rule_line_add_token>
  42de14:	stur	w0, [x29, #-68]
  42de18:	b	42e014 <parse_token+0x9d64>
  42de1c:	ldr	x8, [sp, #5512]
  42de20:	ldr	x9, [x8, #1872]
  42de24:	ldr	x10, [sp, #5504]
  42de28:	str	x9, [x10, #1008]
  42de2c:	ldr	x9, [x10, #1008]
  42de30:	cbz	x9, 42de48 <parse_token+0x9b98>
  42de34:	ldr	x8, [sp, #5504]
  42de38:	ldr	x9, [x8, #1008]
  42de3c:	ldr	x9, [x9, #32]
  42de40:	str	x9, [sp, #1072]
  42de44:	b	42de50 <parse_token+0x9ba0>
  42de48:	mov	x8, xzr
  42de4c:	str	x8, [sp, #1072]
  42de50:	ldr	x8, [sp, #1072]
  42de54:	ldr	x9, [sp, #5504]
  42de58:	str	x8, [x9, #1000]
  42de5c:	ldr	x8, [x9, #1000]
  42de60:	cbz	x8, 42de78 <parse_token+0x9bc8>
  42de64:	ldr	x8, [sp, #5504]
  42de68:	ldr	x9, [x8, #1000]
  42de6c:	ldr	x9, [x9, #8]
  42de70:	str	x9, [sp, #1064]
  42de74:	b	42de80 <parse_token+0x9bd0>
  42de78:	mov	x8, xzr
  42de7c:	str	x8, [sp, #1064]
  42de80:	ldr	x8, [sp, #1064]
  42de84:	ldr	x9, [sp, #5504]
  42de88:	str	x8, [x9, #992]
  42de8c:	ldr	x8, [x9, #1000]
  42de90:	cbz	x8, 42dea8 <parse_token+0x9bf8>
  42de94:	ldr	x8, [sp, #5504]
  42de98:	ldr	x9, [x8, #1000]
  42de9c:	ldr	x9, [x9]
  42dea0:	str	x9, [sp, #1056]
  42dea4:	b	42deb0 <parse_token+0x9c00>
  42dea8:	mov	x8, xzr
  42deac:	str	x8, [sp, #1056]
  42deb0:	ldr	x8, [sp, #1056]
  42deb4:	ldr	x9, [sp, #5504]
  42deb8:	str	x8, [x9, #984]
  42debc:	mov	x8, xzr
  42dec0:	str	x8, [x9, #968]
  42dec4:	str	x8, [x9, #960]
  42dec8:	mov	w10, #0x7                   	// #7
  42decc:	str	w10, [sp, #6612]
  42ded0:	str	wzr, [sp, #6608]
  42ded4:	ldr	x8, [x9, #960]
  42ded8:	cbz	x8, 42df20 <parse_token+0x9c70>
  42dedc:	mov	w0, #0x1                   	// #1
  42dee0:	bl	40a3f0 <log_get_max_level_realm@plt>
  42dee4:	ldr	w8, [sp, #6612]
  42dee8:	cmp	w0, w8
  42deec:	cset	w8, ge  // ge = tcont
  42def0:	mov	w9, #0x1                   	// #1
  42def4:	eor	w8, w8, #0x1
  42def8:	eor	w8, w8, w9
  42defc:	and	w8, w8, #0x1
  42df00:	mov	w1, w8
  42df04:	sxtw	x10, w1
  42df08:	cbz	x10, 42df20 <parse_token+0x9c70>
  42df0c:	ldr	x8, [sp, #5504]
  42df10:	ldr	x0, [x8, #960]
  42df14:	add	x1, sp, #0x1, lsl #12
  42df18:	add	x1, x1, #0x9e0
  42df1c:	bl	40a860 <sd_device_get_sysname@plt>
  42df20:	ldr	w0, [sp, #6612]
  42df24:	ldr	w1, [sp, #6608]
  42df28:	ldr	x8, [sp, #5504]
  42df2c:	ldr	x9, [x8, #968]
  42df30:	mov	x10, xzr
  42df34:	cmp	x9, #0x0
  42df38:	ldr	x9, [sp, #5496]
  42df3c:	csel	x5, x9, x10, ne  // ne = any
  42df40:	ldr	x6, [x8, #968]
  42df44:	ldr	x10, [x8, #984]
  42df48:	str	w0, [sp, #1052]
  42df4c:	mov	x0, x10
  42df50:	str	w1, [sp, #1048]
  42df54:	str	x5, [sp, #1040]
  42df58:	str	x6, [sp, #1032]
  42df5c:	bl	424274 <strna>
  42df60:	ldr	x8, [sp, #5504]
  42df64:	ldr	x9, [x8, #992]
  42df68:	str	x0, [sp, #1024]
  42df6c:	cbz	x9, 42df84 <parse_token+0x9cd4>
  42df70:	ldr	x8, [sp, #5504]
  42df74:	ldr	x9, [x8, #992]
  42df78:	ldr	w10, [x9, #8]
  42df7c:	str	w10, [sp, #1020]
  42df80:	b	42df8c <parse_token+0x9cdc>
  42df84:	mov	w8, wzr
  42df88:	str	w8, [sp, #1020]
  42df8c:	ldr	w8, [sp, #1020]
  42df90:	ldr	x9, [sp, #5512]
  42df94:	ldr	x10, [x9, #1864]
  42df98:	ldr	x11, [x9, #1840]
  42df9c:	ldr	w0, [sp, #1052]
  42dfa0:	ldr	w1, [sp, #1048]
  42dfa4:	ldr	x2, [sp, #5488]
  42dfa8:	mov	w3, #0x37c                 	// #892
  42dfac:	ldr	x4, [sp, #5480]
  42dfb0:	ldr	x5, [sp, #1040]
  42dfb4:	ldr	x6, [sp, #1032]
  42dfb8:	mov	x12, xzr
  42dfbc:	mov	x7, x12
  42dfc0:	mov	x13, sp
  42dfc4:	str	x12, [x13]
  42dfc8:	mov	x12, sp
  42dfcc:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  42dfd0:	add	x13, x13, #0xf57
  42dfd4:	str	x13, [x12, #8]
  42dfd8:	mov	x12, sp
  42dfdc:	ldr	x13, [sp, #1024]
  42dfe0:	str	x13, [x12, #16]
  42dfe4:	mov	x12, sp
  42dfe8:	str	w8, [x12, #24]
  42dfec:	mov	x12, sp
  42dff0:	str	x10, [x12, #32]
  42dff4:	mov	x10, sp
  42dff8:	str	x11, [x10, #40]
  42dffc:	bl	40a870 <log_object_internal@plt>
  42e000:	str	w0, [sp, #6604]
  42e004:	ldr	w8, [sp, #6604]
  42e008:	str	w8, [sp, #6636]
  42e00c:	stur	wzr, [x29, #-4]
  42e010:	b	4300f8 <parse_token+0xbe48>
  42e014:	b	4300c4 <parse_token+0xbe14>
  42e018:	ldr	x8, [sp, #5512]
  42e01c:	ldr	x0, [x8, #1864]
  42e020:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42e024:	add	x1, x1, #0xf8e
  42e028:	bl	40aa20 <strcmp@plt>
  42e02c:	cbnz	w0, 42e6e0 <parse_token+0xa430>
  42e030:	ldr	x8, [sp, #5512]
  42e034:	ldr	x9, [x8, #1856]
  42e038:	cbz	x9, 42e23c <parse_token+0x9f8c>
  42e03c:	ldr	x8, [sp, #5512]
  42e040:	ldr	x9, [x8, #1872]
  42e044:	ldr	x10, [sp, #5504]
  42e048:	str	x9, [x10, #936]
  42e04c:	ldr	x9, [x10, #936]
  42e050:	cbz	x9, 42e068 <parse_token+0x9db8>
  42e054:	ldr	x8, [sp, #5504]
  42e058:	ldr	x9, [x8, #936]
  42e05c:	ldr	x9, [x9, #32]
  42e060:	str	x9, [sp, #1008]
  42e064:	b	42e070 <parse_token+0x9dc0>
  42e068:	mov	x8, xzr
  42e06c:	str	x8, [sp, #1008]
  42e070:	ldr	x8, [sp, #1008]
  42e074:	ldr	x9, [sp, #5504]
  42e078:	str	x8, [x9, #928]
  42e07c:	ldr	x8, [x9, #928]
  42e080:	cbz	x8, 42e098 <parse_token+0x9de8>
  42e084:	ldr	x8, [sp, #5504]
  42e088:	ldr	x9, [x8, #928]
  42e08c:	ldr	x9, [x9, #8]
  42e090:	str	x9, [sp, #1000]
  42e094:	b	42e0a0 <parse_token+0x9df0>
  42e098:	mov	x8, xzr
  42e09c:	str	x8, [sp, #1000]
  42e0a0:	ldr	x8, [sp, #1000]
  42e0a4:	ldr	x9, [sp, #5504]
  42e0a8:	str	x8, [x9, #920]
  42e0ac:	ldr	x8, [x9, #928]
  42e0b0:	cbz	x8, 42e0c8 <parse_token+0x9e18>
  42e0b4:	ldr	x8, [sp, #5504]
  42e0b8:	ldr	x9, [x8, #928]
  42e0bc:	ldr	x9, [x9]
  42e0c0:	str	x9, [sp, #992]
  42e0c4:	b	42e0d0 <parse_token+0x9e20>
  42e0c8:	mov	x8, xzr
  42e0cc:	str	x8, [sp, #992]
  42e0d0:	ldr	x8, [sp, #992]
  42e0d4:	ldr	x9, [sp, #5504]
  42e0d8:	str	x8, [x9, #912]
  42e0dc:	mov	x8, xzr
  42e0e0:	str	x8, [x9, #896]
  42e0e4:	str	x8, [x9, #888]
  42e0e8:	mov	w10, #0x3                   	// #3
  42e0ec:	str	w10, [sp, #6540]
  42e0f0:	mov	w10, #0x16                  	// #22
  42e0f4:	movk	w10, #0x4000, lsl #16
  42e0f8:	str	w10, [sp, #6536]
  42e0fc:	ldr	x8, [x9, #888]
  42e100:	cbz	x8, 42e148 <parse_token+0x9e98>
  42e104:	mov	w0, #0x1                   	// #1
  42e108:	bl	40a3f0 <log_get_max_level_realm@plt>
  42e10c:	ldr	w8, [sp, #6540]
  42e110:	cmp	w0, w8
  42e114:	cset	w8, ge  // ge = tcont
  42e118:	mov	w9, #0x1                   	// #1
  42e11c:	eor	w8, w8, #0x1
  42e120:	eor	w8, w8, w9
  42e124:	and	w8, w8, #0x1
  42e128:	mov	w1, w8
  42e12c:	sxtw	x10, w1
  42e130:	cbz	x10, 42e148 <parse_token+0x9e98>
  42e134:	ldr	x8, [sp, #5504]
  42e138:	ldr	x0, [x8, #888]
  42e13c:	add	x1, sp, #0x1, lsl #12
  42e140:	add	x1, x1, #0x998
  42e144:	bl	40a860 <sd_device_get_sysname@plt>
  42e148:	ldr	w0, [sp, #6540]
  42e14c:	ldr	w1, [sp, #6536]
  42e150:	ldr	x8, [sp, #5504]
  42e154:	ldr	x9, [x8, #896]
  42e158:	mov	x10, xzr
  42e15c:	cmp	x9, #0x0
  42e160:	ldr	x9, [sp, #5496]
  42e164:	csel	x5, x9, x10, ne  // ne = any
  42e168:	ldr	x6, [x8, #896]
  42e16c:	ldr	x10, [x8, #912]
  42e170:	str	w0, [sp, #988]
  42e174:	mov	x0, x10
  42e178:	str	w1, [sp, #984]
  42e17c:	str	x5, [sp, #976]
  42e180:	str	x6, [sp, #968]
  42e184:	bl	424274 <strna>
  42e188:	ldr	x8, [sp, #5504]
  42e18c:	ldr	x9, [x8, #920]
  42e190:	str	x0, [sp, #960]
  42e194:	cbz	x9, 42e1ac <parse_token+0x9efc>
  42e198:	ldr	x8, [sp, #5504]
  42e19c:	ldr	x9, [x8, #920]
  42e1a0:	ldr	w10, [x9, #8]
  42e1a4:	str	w10, [sp, #956]
  42e1a8:	b	42e1b4 <parse_token+0x9f04>
  42e1ac:	mov	w8, wzr
  42e1b0:	str	w8, [sp, #956]
  42e1b4:	ldr	w8, [sp, #956]
  42e1b8:	ldr	x9, [sp, #5512]
  42e1bc:	ldr	x10, [x9, #1864]
  42e1c0:	ldr	w0, [sp, #988]
  42e1c4:	ldr	w1, [sp, #984]
  42e1c8:	ldr	x2, [sp, #5488]
  42e1cc:	mov	w3, #0x383                 	// #899
  42e1d0:	ldr	x4, [sp, #5480]
  42e1d4:	ldr	x5, [sp, #976]
  42e1d8:	ldr	x6, [sp, #968]
  42e1dc:	mov	x11, xzr
  42e1e0:	mov	x7, x11
  42e1e4:	mov	x12, sp
  42e1e8:	str	x11, [x12]
  42e1ec:	mov	x11, sp
  42e1f0:	ldr	x12, [sp, #5472]
  42e1f4:	str	x12, [x11, #8]
  42e1f8:	mov	x11, sp
  42e1fc:	ldr	x13, [sp, #960]
  42e200:	str	x13, [x11, #16]
  42e204:	mov	x11, sp
  42e208:	str	w8, [x11, #24]
  42e20c:	mov	x11, sp
  42e210:	ldr	x14, [sp, #5456]
  42e214:	str	x14, [x11, #32]
  42e218:	mov	x11, sp
  42e21c:	str	x10, [x11, #40]
  42e220:	bl	40a870 <log_object_internal@plt>
  42e224:	str	w0, [sp, #6532]
  42e228:	ldr	w8, [sp, #6532]
  42e22c:	str	w8, [sp, #6564]
  42e230:	ldr	w8, [sp, #6564]
  42e234:	stur	w8, [x29, #-4]
  42e238:	b	4300f8 <parse_token+0xbe48>
  42e23c:	ldr	x8, [sp, #5512]
  42e240:	ldrb	w9, [x8, #1839]
  42e244:	tbnz	w9, #0, 42e254 <parse_token+0x9fa4>
  42e248:	ldur	w8, [x29, #-36]
  42e24c:	cmp	w8, #0x3
  42e250:	b.ne	42e454 <parse_token+0xa1a4>  // b.any
  42e254:	ldr	x8, [sp, #5512]
  42e258:	ldr	x9, [x8, #1872]
  42e25c:	ldr	x10, [sp, #5504]
  42e260:	str	x9, [x10, #864]
  42e264:	ldr	x9, [x10, #864]
  42e268:	cbz	x9, 42e280 <parse_token+0x9fd0>
  42e26c:	ldr	x8, [sp, #5504]
  42e270:	ldr	x9, [x8, #864]
  42e274:	ldr	x9, [x9, #32]
  42e278:	str	x9, [sp, #944]
  42e27c:	b	42e288 <parse_token+0x9fd8>
  42e280:	mov	x8, xzr
  42e284:	str	x8, [sp, #944]
  42e288:	ldr	x8, [sp, #944]
  42e28c:	ldr	x9, [sp, #5504]
  42e290:	str	x8, [x9, #856]
  42e294:	ldr	x8, [x9, #856]
  42e298:	cbz	x8, 42e2b0 <parse_token+0xa000>
  42e29c:	ldr	x8, [sp, #5504]
  42e2a0:	ldr	x9, [x8, #856]
  42e2a4:	ldr	x9, [x9, #8]
  42e2a8:	str	x9, [sp, #936]
  42e2ac:	b	42e2b8 <parse_token+0xa008>
  42e2b0:	mov	x8, xzr
  42e2b4:	str	x8, [sp, #936]
  42e2b8:	ldr	x8, [sp, #936]
  42e2bc:	ldr	x9, [sp, #5504]
  42e2c0:	str	x8, [x9, #848]
  42e2c4:	ldr	x8, [x9, #856]
  42e2c8:	cbz	x8, 42e2e0 <parse_token+0xa030>
  42e2cc:	ldr	x8, [sp, #5504]
  42e2d0:	ldr	x9, [x8, #856]
  42e2d4:	ldr	x9, [x9]
  42e2d8:	str	x9, [sp, #928]
  42e2dc:	b	42e2e8 <parse_token+0xa038>
  42e2e0:	mov	x8, xzr
  42e2e4:	str	x8, [sp, #928]
  42e2e8:	ldr	x8, [sp, #928]
  42e2ec:	ldr	x9, [sp, #5504]
  42e2f0:	str	x8, [x9, #840]
  42e2f4:	mov	x8, xzr
  42e2f8:	str	x8, [x9, #824]
  42e2fc:	str	x8, [x9, #816]
  42e300:	mov	w10, #0x3                   	// #3
  42e304:	str	w10, [sp, #6468]
  42e308:	mov	w10, #0x16                  	// #22
  42e30c:	movk	w10, #0x4000, lsl #16
  42e310:	str	w10, [sp, #6464]
  42e314:	ldr	x8, [x9, #816]
  42e318:	cbz	x8, 42e360 <parse_token+0xa0b0>
  42e31c:	mov	w0, #0x1                   	// #1
  42e320:	bl	40a3f0 <log_get_max_level_realm@plt>
  42e324:	ldr	w8, [sp, #6468]
  42e328:	cmp	w0, w8
  42e32c:	cset	w8, ge  // ge = tcont
  42e330:	mov	w9, #0x1                   	// #1
  42e334:	eor	w8, w8, #0x1
  42e338:	eor	w8, w8, w9
  42e33c:	and	w8, w8, #0x1
  42e340:	mov	w1, w8
  42e344:	sxtw	x10, w1
  42e348:	cbz	x10, 42e360 <parse_token+0xa0b0>
  42e34c:	ldr	x8, [sp, #5504]
  42e350:	ldr	x0, [x8, #816]
  42e354:	add	x1, sp, #0x1, lsl #12
  42e358:	add	x1, x1, #0x950
  42e35c:	bl	40a860 <sd_device_get_sysname@plt>
  42e360:	ldr	w0, [sp, #6468]
  42e364:	ldr	w1, [sp, #6464]
  42e368:	ldr	x8, [sp, #5504]
  42e36c:	ldr	x9, [x8, #824]
  42e370:	mov	x10, xzr
  42e374:	cmp	x9, #0x0
  42e378:	ldr	x9, [sp, #5496]
  42e37c:	csel	x5, x9, x10, ne  // ne = any
  42e380:	ldr	x6, [x8, #824]
  42e384:	ldr	x10, [x8, #840]
  42e388:	str	w0, [sp, #924]
  42e38c:	mov	x0, x10
  42e390:	str	w1, [sp, #920]
  42e394:	str	x5, [sp, #912]
  42e398:	str	x6, [sp, #904]
  42e39c:	bl	424274 <strna>
  42e3a0:	ldr	x8, [sp, #5504]
  42e3a4:	ldr	x9, [x8, #848]
  42e3a8:	str	x0, [sp, #896]
  42e3ac:	cbz	x9, 42e3c4 <parse_token+0xa114>
  42e3b0:	ldr	x8, [sp, #5504]
  42e3b4:	ldr	x9, [x8, #848]
  42e3b8:	ldr	w10, [x9, #8]
  42e3bc:	str	w10, [sp, #892]
  42e3c0:	b	42e3cc <parse_token+0xa11c>
  42e3c4:	mov	w8, wzr
  42e3c8:	str	w8, [sp, #892]
  42e3cc:	ldr	w8, [sp, #892]
  42e3d0:	ldr	x9, [sp, #5512]
  42e3d4:	ldr	x10, [x9, #1864]
  42e3d8:	ldr	w0, [sp, #924]
  42e3dc:	ldr	w1, [sp, #920]
  42e3e0:	ldr	x2, [sp, #5488]
  42e3e4:	mov	w3, #0x385                 	// #901
  42e3e8:	ldr	x4, [sp, #5480]
  42e3ec:	ldr	x5, [sp, #912]
  42e3f0:	ldr	x6, [sp, #904]
  42e3f4:	mov	x11, xzr
  42e3f8:	mov	x7, x11
  42e3fc:	mov	x12, sp
  42e400:	str	x11, [x12]
  42e404:	mov	x11, sp
  42e408:	ldr	x12, [sp, #5472]
  42e40c:	str	x12, [x11, #8]
  42e410:	mov	x11, sp
  42e414:	ldr	x13, [sp, #896]
  42e418:	str	x13, [x11, #16]
  42e41c:	mov	x11, sp
  42e420:	str	w8, [x11, #24]
  42e424:	mov	x11, sp
  42e428:	ldr	x14, [sp, #5464]
  42e42c:	str	x14, [x11, #32]
  42e430:	mov	x11, sp
  42e434:	str	x10, [x11, #40]
  42e438:	bl	40a870 <log_object_internal@plt>
  42e43c:	str	w0, [sp, #6460]
  42e440:	ldr	w8, [sp, #6460]
  42e444:	str	w8, [sp, #6492]
  42e448:	ldr	w8, [sp, #6492]
  42e44c:	stur	w8, [x29, #-4]
  42e450:	b	4300f8 <parse_token+0xbe48>
  42e454:	ldur	w8, [x29, #-36]
  42e458:	cmp	w8, #0x2
  42e45c:	b.ne	42e648 <parse_token+0xa398>  // b.any
  42e460:	ldr	x8, [sp, #5512]
  42e464:	ldr	x9, [x8, #1872]
  42e468:	ldr	x10, [sp, #5504]
  42e46c:	str	x9, [x10, #792]
  42e470:	ldr	x9, [x10, #792]
  42e474:	cbz	x9, 42e48c <parse_token+0xa1dc>
  42e478:	ldr	x8, [sp, #5504]
  42e47c:	ldr	x9, [x8, #792]
  42e480:	ldr	x9, [x9, #32]
  42e484:	str	x9, [sp, #880]
  42e488:	b	42e494 <parse_token+0xa1e4>
  42e48c:	mov	x8, xzr
  42e490:	str	x8, [sp, #880]
  42e494:	ldr	x8, [sp, #880]
  42e498:	ldr	x9, [sp, #5504]
  42e49c:	str	x8, [x9, #784]
  42e4a0:	ldr	x8, [x9, #784]
  42e4a4:	cbz	x8, 42e4bc <parse_token+0xa20c>
  42e4a8:	ldr	x8, [sp, #5504]
  42e4ac:	ldr	x9, [x8, #784]
  42e4b0:	ldr	x9, [x9, #8]
  42e4b4:	str	x9, [sp, #872]
  42e4b8:	b	42e4c4 <parse_token+0xa214>
  42e4bc:	mov	x8, xzr
  42e4c0:	str	x8, [sp, #872]
  42e4c4:	ldr	x8, [sp, #872]
  42e4c8:	ldr	x9, [sp, #5504]
  42e4cc:	str	x8, [x9, #776]
  42e4d0:	ldr	x8, [x9, #784]
  42e4d4:	cbz	x8, 42e4ec <parse_token+0xa23c>
  42e4d8:	ldr	x8, [sp, #5504]
  42e4dc:	ldr	x9, [x8, #784]
  42e4e0:	ldr	x9, [x9]
  42e4e4:	str	x9, [sp, #864]
  42e4e8:	b	42e4f4 <parse_token+0xa244>
  42e4ec:	mov	x8, xzr
  42e4f0:	str	x8, [sp, #864]
  42e4f4:	ldr	x8, [sp, #864]
  42e4f8:	ldr	x9, [sp, #5504]
  42e4fc:	str	x8, [x9, #768]
  42e500:	mov	x8, xzr
  42e504:	str	x8, [x9, #752]
  42e508:	str	x8, [x9, #744]
  42e50c:	mov	w10, #0x4                   	// #4
  42e510:	str	w10, [sp, #6396]
  42e514:	str	wzr, [sp, #6392]
  42e518:	ldr	x8, [x9, #744]
  42e51c:	cbz	x8, 42e564 <parse_token+0xa2b4>
  42e520:	mov	w0, #0x1                   	// #1
  42e524:	bl	40a3f0 <log_get_max_level_realm@plt>
  42e528:	ldr	w8, [sp, #6396]
  42e52c:	cmp	w0, w8
  42e530:	cset	w8, ge  // ge = tcont
  42e534:	mov	w9, #0x1                   	// #1
  42e538:	eor	w8, w8, #0x1
  42e53c:	eor	w8, w8, w9
  42e540:	and	w8, w8, #0x1
  42e544:	mov	w1, w8
  42e548:	sxtw	x10, w1
  42e54c:	cbz	x10, 42e564 <parse_token+0xa2b4>
  42e550:	ldr	x8, [sp, #5504]
  42e554:	ldr	x0, [x8, #744]
  42e558:	add	x1, sp, #0x1, lsl #12
  42e55c:	add	x1, x1, #0x908
  42e560:	bl	40a860 <sd_device_get_sysname@plt>
  42e564:	ldr	w0, [sp, #6396]
  42e568:	ldr	w1, [sp, #6392]
  42e56c:	ldr	x8, [sp, #5504]
  42e570:	ldr	x9, [x8, #752]
  42e574:	mov	x10, xzr
  42e578:	cmp	x9, #0x0
  42e57c:	ldr	x9, [sp, #5496]
  42e580:	csel	x5, x9, x10, ne  // ne = any
  42e584:	ldr	x6, [x8, #752]
  42e588:	ldr	x10, [x8, #768]
  42e58c:	str	w0, [sp, #860]
  42e590:	mov	x0, x10
  42e594:	str	w1, [sp, #856]
  42e598:	str	x5, [sp, #848]
  42e59c:	str	x6, [sp, #840]
  42e5a0:	bl	424274 <strna>
  42e5a4:	ldr	x8, [sp, #5504]
  42e5a8:	ldr	x9, [x8, #776]
  42e5ac:	str	x0, [sp, #832]
  42e5b0:	cbz	x9, 42e5c8 <parse_token+0xa318>
  42e5b4:	ldr	x8, [sp, #5504]
  42e5b8:	ldr	x9, [x8, #776]
  42e5bc:	ldr	w10, [x9, #8]
  42e5c0:	str	w10, [sp, #828]
  42e5c4:	b	42e5d0 <parse_token+0xa320>
  42e5c8:	mov	w8, wzr
  42e5cc:	str	w8, [sp, #828]
  42e5d0:	ldr	w8, [sp, #828]
  42e5d4:	ldr	x9, [sp, #5512]
  42e5d8:	ldr	x10, [x9, #1864]
  42e5dc:	ldr	w0, [sp, #860]
  42e5e0:	ldr	w1, [sp, #856]
  42e5e4:	ldr	x2, [sp, #5488]
  42e5e8:	mov	w3, #0x387                 	// #903
  42e5ec:	ldr	x4, [sp, #5480]
  42e5f0:	ldr	x5, [sp, #848]
  42e5f4:	ldr	x6, [sp, #840]
  42e5f8:	mov	x11, xzr
  42e5fc:	mov	x7, x11
  42e600:	mov	x12, sp
  42e604:	str	x11, [x12]
  42e608:	mov	x11, sp
  42e60c:	ldr	x12, [sp, #5448]
  42e610:	str	x12, [x11, #8]
  42e614:	mov	x11, sp
  42e618:	ldr	x13, [sp, #832]
  42e61c:	str	x13, [x11, #16]
  42e620:	mov	x11, sp
  42e624:	str	w8, [x11, #24]
  42e628:	mov	x11, sp
  42e62c:	str	x10, [x11, #32]
  42e630:	bl	40a870 <log_object_internal@plt>
  42e634:	str	w0, [sp, #6388]
  42e638:	ldr	w8, [sp, #6388]
  42e63c:	str	w8, [sp, #6420]
  42e640:	mov	w8, #0x4                   	// #4
  42e644:	stur	w8, [x29, #-36]
  42e648:	ldr	x8, [sp, #5512]
  42e64c:	ldr	x0, [x8, #1840]
  42e650:	add	x1, sp, #0x1, lsl #12
  42e654:	add	x1, x1, #0x9c8
  42e658:	bl	40b300 <parse_mode@plt>
  42e65c:	cmp	w0, #0x0
  42e660:	cset	w9, lt  // lt = tstop
  42e664:	tbnz	w9, #0, 42e69c <parse_token+0xa3ec>
  42e668:	ldr	x8, [sp, #5512]
  42e66c:	ldr	x0, [x8, #1824]
  42e670:	ldur	w2, [x29, #-36]
  42e674:	ldr	w9, [sp, #6600]
  42e678:	mov	w10, w9
  42e67c:	add	x10, x10, #0x1
  42e680:	mov	w1, #0x24                  	// #36
  42e684:	mov	x11, xzr
  42e688:	mov	x3, x11
  42e68c:	mov	x4, x10
  42e690:	bl	430504 <rule_line_add_token>
  42e694:	stur	w0, [x29, #-68]
  42e698:	b	42e6dc <parse_token+0xa42c>
  42e69c:	ldr	x8, [sp, #5512]
  42e6a0:	ldr	x0, [x8, #1872]
  42e6a4:	ldr	x1, [x8, #1864]
  42e6a8:	ldr	x2, [x8, #1840]
  42e6ac:	mov	w9, #0x1                   	// #1
  42e6b0:	and	w3, w9, #0x1
  42e6b4:	bl	430d00 <check_value_format_and_warn>
  42e6b8:	ldr	x8, [sp, #5512]
  42e6bc:	ldr	x0, [x8, #1824]
  42e6c0:	ldur	w2, [x29, #-36]
  42e6c4:	ldr	x3, [x8, #1840]
  42e6c8:	mov	w1, #0x21                  	// #33
  42e6cc:	mov	x10, xzr
  42e6d0:	mov	x4, x10
  42e6d4:	bl	430504 <rule_line_add_token>
  42e6d8:	stur	w0, [x29, #-68]
  42e6dc:	b	4300c4 <parse_token+0xbe14>
  42e6e0:	ldr	x8, [sp, #5512]
  42e6e4:	ldr	x0, [x8, #1864]
  42e6e8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42e6ec:	add	x1, x1, #0xf93
  42e6f0:	bl	40aa20 <strcmp@plt>
  42e6f4:	cbnz	w0, 42ed60 <parse_token+0xaab0>
  42e6f8:	ldr	x8, [sp, #5512]
  42e6fc:	ldr	x0, [x8, #1856]
  42e700:	bl	423ddc <isempty>
  42e704:	tbnz	w0, #0, 42e70c <parse_token+0xa45c>
  42e708:	b	42e90c <parse_token+0xa65c>
  42e70c:	ldr	x8, [sp, #5512]
  42e710:	ldr	x9, [x8, #1872]
  42e714:	ldr	x10, [sp, #5504]
  42e718:	str	x9, [x10, #720]
  42e71c:	ldr	x9, [x10, #720]
  42e720:	cbz	x9, 42e738 <parse_token+0xa488>
  42e724:	ldr	x8, [sp, #5504]
  42e728:	ldr	x9, [x8, #720]
  42e72c:	ldr	x9, [x9, #32]
  42e730:	str	x9, [sp, #816]
  42e734:	b	42e740 <parse_token+0xa490>
  42e738:	mov	x8, xzr
  42e73c:	str	x8, [sp, #816]
  42e740:	ldr	x8, [sp, #816]
  42e744:	ldr	x9, [sp, #5504]
  42e748:	str	x8, [x9, #712]
  42e74c:	ldr	x8, [x9, #712]
  42e750:	cbz	x8, 42e768 <parse_token+0xa4b8>
  42e754:	ldr	x8, [sp, #5504]
  42e758:	ldr	x9, [x8, #712]
  42e75c:	ldr	x9, [x9, #8]
  42e760:	str	x9, [sp, #808]
  42e764:	b	42e770 <parse_token+0xa4c0>
  42e768:	mov	x8, xzr
  42e76c:	str	x8, [sp, #808]
  42e770:	ldr	x8, [sp, #808]
  42e774:	ldr	x9, [sp, #5504]
  42e778:	str	x8, [x9, #704]
  42e77c:	ldr	x8, [x9, #712]
  42e780:	cbz	x8, 42e798 <parse_token+0xa4e8>
  42e784:	ldr	x8, [sp, #5504]
  42e788:	ldr	x9, [x8, #712]
  42e78c:	ldr	x9, [x9]
  42e790:	str	x9, [sp, #800]
  42e794:	b	42e7a0 <parse_token+0xa4f0>
  42e798:	mov	x8, xzr
  42e79c:	str	x8, [sp, #800]
  42e7a0:	ldr	x8, [sp, #800]
  42e7a4:	ldr	x9, [sp, #5504]
  42e7a8:	str	x8, [x9, #696]
  42e7ac:	mov	x8, xzr
  42e7b0:	str	x8, [x9, #680]
  42e7b4:	str	x8, [x9, #672]
  42e7b8:	mov	w10, #0x3                   	// #3
  42e7bc:	str	w10, [sp, #6324]
  42e7c0:	mov	w10, #0x16                  	// #22
  42e7c4:	movk	w10, #0x4000, lsl #16
  42e7c8:	str	w10, [sp, #6320]
  42e7cc:	ldr	x8, [x9, #672]
  42e7d0:	cbz	x8, 42e818 <parse_token+0xa568>
  42e7d4:	mov	w0, #0x1                   	// #1
  42e7d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  42e7dc:	ldr	w8, [sp, #6324]
  42e7e0:	cmp	w0, w8
  42e7e4:	cset	w8, ge  // ge = tcont
  42e7e8:	mov	w9, #0x1                   	// #1
  42e7ec:	eor	w8, w8, #0x1
  42e7f0:	eor	w8, w8, w9
  42e7f4:	and	w8, w8, #0x1
  42e7f8:	mov	w1, w8
  42e7fc:	sxtw	x10, w1
  42e800:	cbz	x10, 42e818 <parse_token+0xa568>
  42e804:	ldr	x8, [sp, #5504]
  42e808:	ldr	x0, [x8, #672]
  42e80c:	add	x1, sp, #0x1, lsl #12
  42e810:	add	x1, x1, #0x8c0
  42e814:	bl	40a860 <sd_device_get_sysname@plt>
  42e818:	ldr	w0, [sp, #6324]
  42e81c:	ldr	w1, [sp, #6320]
  42e820:	ldr	x8, [sp, #5504]
  42e824:	ldr	x9, [x8, #680]
  42e828:	mov	x10, xzr
  42e82c:	cmp	x9, #0x0
  42e830:	ldr	x9, [sp, #5496]
  42e834:	csel	x5, x9, x10, ne  // ne = any
  42e838:	ldr	x6, [x8, #680]
  42e83c:	ldr	x10, [x8, #696]
  42e840:	str	w0, [sp, #796]
  42e844:	mov	x0, x10
  42e848:	str	w1, [sp, #792]
  42e84c:	str	x5, [sp, #784]
  42e850:	str	x6, [sp, #776]
  42e854:	bl	424274 <strna>
  42e858:	ldr	x8, [sp, #5504]
  42e85c:	ldr	x9, [x8, #704]
  42e860:	str	x0, [sp, #768]
  42e864:	cbz	x9, 42e87c <parse_token+0xa5cc>
  42e868:	ldr	x8, [sp, #5504]
  42e86c:	ldr	x9, [x8, #704]
  42e870:	ldr	w10, [x9, #8]
  42e874:	str	w10, [sp, #764]
  42e878:	b	42e884 <parse_token+0xa5d4>
  42e87c:	mov	w8, wzr
  42e880:	str	w8, [sp, #764]
  42e884:	ldr	w8, [sp, #764]
  42e888:	ldr	x9, [sp, #5512]
  42e88c:	ldr	x10, [x9, #1864]
  42e890:	ldr	w0, [sp, #796]
  42e894:	ldr	w1, [sp, #792]
  42e898:	ldr	x2, [sp, #5488]
  42e89c:	mov	w3, #0x393                 	// #915
  42e8a0:	ldr	x4, [sp, #5480]
  42e8a4:	ldr	x5, [sp, #784]
  42e8a8:	ldr	x6, [sp, #776]
  42e8ac:	mov	x11, xzr
  42e8b0:	mov	x7, x11
  42e8b4:	mov	x12, sp
  42e8b8:	str	x11, [x12]
  42e8bc:	mov	x11, sp
  42e8c0:	ldr	x12, [sp, #5472]
  42e8c4:	str	x12, [x11, #8]
  42e8c8:	mov	x11, sp
  42e8cc:	ldr	x13, [sp, #768]
  42e8d0:	str	x13, [x11, #16]
  42e8d4:	mov	x11, sp
  42e8d8:	str	w8, [x11, #24]
  42e8dc:	mov	x11, sp
  42e8e0:	ldr	x14, [sp, #5456]
  42e8e4:	str	x14, [x11, #32]
  42e8e8:	mov	x11, sp
  42e8ec:	str	x10, [x11, #40]
  42e8f0:	bl	40a870 <log_object_internal@plt>
  42e8f4:	str	w0, [sp, #6316]
  42e8f8:	ldr	w8, [sp, #6316]
  42e8fc:	str	w8, [sp, #6348]
  42e900:	ldr	w8, [sp, #6348]
  42e904:	stur	w8, [x29, #-4]
  42e908:	b	4300f8 <parse_token+0xbe48>
  42e90c:	ldr	x8, [sp, #5512]
  42e910:	ldr	x0, [x8, #1872]
  42e914:	ldr	x1, [x8, #1864]
  42e918:	ldr	x2, [x8, #1840]
  42e91c:	mov	w9, #0x1                   	// #1
  42e920:	and	w3, w9, #0x1
  42e924:	bl	430d00 <check_value_format_and_warn>
  42e928:	ldr	x8, [sp, #5512]
  42e92c:	ldrb	w9, [x8, #1839]
  42e930:	tbnz	w9, #0, 42e940 <parse_token+0xa690>
  42e934:	ldur	w8, [x29, #-36]
  42e938:	cmp	w8, #0x3
  42e93c:	b.ne	42eb40 <parse_token+0xa890>  // b.any
  42e940:	ldr	x8, [sp, #5512]
  42e944:	ldr	x9, [x8, #1872]
  42e948:	ldr	x10, [sp, #5504]
  42e94c:	str	x9, [x10, #648]
  42e950:	ldr	x9, [x10, #648]
  42e954:	cbz	x9, 42e96c <parse_token+0xa6bc>
  42e958:	ldr	x8, [sp, #5504]
  42e95c:	ldr	x9, [x8, #648]
  42e960:	ldr	x9, [x9, #32]
  42e964:	str	x9, [sp, #752]
  42e968:	b	42e974 <parse_token+0xa6c4>
  42e96c:	mov	x8, xzr
  42e970:	str	x8, [sp, #752]
  42e974:	ldr	x8, [sp, #752]
  42e978:	ldr	x9, [sp, #5504]
  42e97c:	str	x8, [x9, #640]
  42e980:	ldr	x8, [x9, #640]
  42e984:	cbz	x8, 42e99c <parse_token+0xa6ec>
  42e988:	ldr	x8, [sp, #5504]
  42e98c:	ldr	x9, [x8, #640]
  42e990:	ldr	x9, [x9, #8]
  42e994:	str	x9, [sp, #744]
  42e998:	b	42e9a4 <parse_token+0xa6f4>
  42e99c:	mov	x8, xzr
  42e9a0:	str	x8, [sp, #744]
  42e9a4:	ldr	x8, [sp, #744]
  42e9a8:	ldr	x9, [sp, #5504]
  42e9ac:	str	x8, [x9, #632]
  42e9b0:	ldr	x8, [x9, #640]
  42e9b4:	cbz	x8, 42e9cc <parse_token+0xa71c>
  42e9b8:	ldr	x8, [sp, #5504]
  42e9bc:	ldr	x9, [x8, #640]
  42e9c0:	ldr	x9, [x9]
  42e9c4:	str	x9, [sp, #736]
  42e9c8:	b	42e9d4 <parse_token+0xa724>
  42e9cc:	mov	x8, xzr
  42e9d0:	str	x8, [sp, #736]
  42e9d4:	ldr	x8, [sp, #736]
  42e9d8:	ldr	x9, [sp, #5504]
  42e9dc:	str	x8, [x9, #624]
  42e9e0:	mov	x8, xzr
  42e9e4:	str	x8, [x9, #608]
  42e9e8:	str	x8, [x9, #600]
  42e9ec:	mov	w10, #0x3                   	// #3
  42e9f0:	str	w10, [sp, #6252]
  42e9f4:	mov	w10, #0x16                  	// #22
  42e9f8:	movk	w10, #0x4000, lsl #16
  42e9fc:	str	w10, [sp, #6248]
  42ea00:	ldr	x8, [x9, #600]
  42ea04:	cbz	x8, 42ea4c <parse_token+0xa79c>
  42ea08:	mov	w0, #0x1                   	// #1
  42ea0c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ea10:	ldr	w8, [sp, #6252]
  42ea14:	cmp	w0, w8
  42ea18:	cset	w8, ge  // ge = tcont
  42ea1c:	mov	w9, #0x1                   	// #1
  42ea20:	eor	w8, w8, #0x1
  42ea24:	eor	w8, w8, w9
  42ea28:	and	w8, w8, #0x1
  42ea2c:	mov	w1, w8
  42ea30:	sxtw	x10, w1
  42ea34:	cbz	x10, 42ea4c <parse_token+0xa79c>
  42ea38:	ldr	x8, [sp, #5504]
  42ea3c:	ldr	x0, [x8, #600]
  42ea40:	add	x1, sp, #0x1, lsl #12
  42ea44:	add	x1, x1, #0x878
  42ea48:	bl	40a860 <sd_device_get_sysname@plt>
  42ea4c:	ldr	w0, [sp, #6252]
  42ea50:	ldr	w1, [sp, #6248]
  42ea54:	ldr	x8, [sp, #5504]
  42ea58:	ldr	x9, [x8, #608]
  42ea5c:	mov	x10, xzr
  42ea60:	cmp	x9, #0x0
  42ea64:	ldr	x9, [sp, #5496]
  42ea68:	csel	x5, x9, x10, ne  // ne = any
  42ea6c:	ldr	x6, [x8, #608]
  42ea70:	ldr	x10, [x8, #624]
  42ea74:	str	w0, [sp, #732]
  42ea78:	mov	x0, x10
  42ea7c:	str	w1, [sp, #728]
  42ea80:	str	x5, [sp, #720]
  42ea84:	str	x6, [sp, #712]
  42ea88:	bl	424274 <strna>
  42ea8c:	ldr	x8, [sp, #5504]
  42ea90:	ldr	x9, [x8, #632]
  42ea94:	str	x0, [sp, #704]
  42ea98:	cbz	x9, 42eab0 <parse_token+0xa800>
  42ea9c:	ldr	x8, [sp, #5504]
  42eaa0:	ldr	x9, [x8, #632]
  42eaa4:	ldr	w10, [x9, #8]
  42eaa8:	str	w10, [sp, #700]
  42eaac:	b	42eab8 <parse_token+0xa808>
  42eab0:	mov	w8, wzr
  42eab4:	str	w8, [sp, #700]
  42eab8:	ldr	w8, [sp, #700]
  42eabc:	ldr	x9, [sp, #5512]
  42eac0:	ldr	x10, [x9, #1864]
  42eac4:	ldr	w0, [sp, #732]
  42eac8:	ldr	w1, [sp, #728]
  42eacc:	ldr	x2, [sp, #5488]
  42ead0:	mov	w3, #0x396                 	// #918
  42ead4:	ldr	x4, [sp, #5480]
  42ead8:	ldr	x5, [sp, #720]
  42eadc:	ldr	x6, [sp, #712]
  42eae0:	mov	x11, xzr
  42eae4:	mov	x7, x11
  42eae8:	mov	x12, sp
  42eaec:	str	x11, [x12]
  42eaf0:	mov	x11, sp
  42eaf4:	ldr	x12, [sp, #5472]
  42eaf8:	str	x12, [x11, #8]
  42eafc:	mov	x11, sp
  42eb00:	ldr	x13, [sp, #704]
  42eb04:	str	x13, [x11, #16]
  42eb08:	mov	x11, sp
  42eb0c:	str	w8, [x11, #24]
  42eb10:	mov	x11, sp
  42eb14:	ldr	x14, [sp, #5464]
  42eb18:	str	x14, [x11, #32]
  42eb1c:	mov	x11, sp
  42eb20:	str	x10, [x11, #40]
  42eb24:	bl	40a870 <log_object_internal@plt>
  42eb28:	str	w0, [sp, #6244]
  42eb2c:	ldr	w8, [sp, #6244]
  42eb30:	str	w8, [sp, #6276]
  42eb34:	ldr	w8, [sp, #6276]
  42eb38:	stur	w8, [x29, #-4]
  42eb3c:	b	4300f8 <parse_token+0xbe48>
  42eb40:	ldur	w8, [x29, #-36]
  42eb44:	cmp	w8, #0x5
  42eb48:	b.ne	42ed38 <parse_token+0xaa88>  // b.any
  42eb4c:	ldr	x8, [sp, #5512]
  42eb50:	ldr	x9, [x8, #1872]
  42eb54:	ldr	x10, [sp, #5504]
  42eb58:	str	x9, [x10, #576]
  42eb5c:	ldr	x9, [x10, #576]
  42eb60:	cbz	x9, 42eb78 <parse_token+0xa8c8>
  42eb64:	ldr	x8, [sp, #5504]
  42eb68:	ldr	x9, [x8, #576]
  42eb6c:	ldr	x9, [x9, #32]
  42eb70:	str	x9, [sp, #688]
  42eb74:	b	42eb80 <parse_token+0xa8d0>
  42eb78:	mov	x8, xzr
  42eb7c:	str	x8, [sp, #688]
  42eb80:	ldr	x8, [sp, #688]
  42eb84:	ldr	x9, [sp, #5504]
  42eb88:	str	x8, [x9, #568]
  42eb8c:	ldr	x8, [x9, #568]
  42eb90:	cbz	x8, 42eba8 <parse_token+0xa8f8>
  42eb94:	ldr	x8, [sp, #5504]
  42eb98:	ldr	x9, [x8, #568]
  42eb9c:	ldr	x9, [x9, #8]
  42eba0:	str	x9, [sp, #680]
  42eba4:	b	42ebb0 <parse_token+0xa900>
  42eba8:	mov	x8, xzr
  42ebac:	str	x8, [sp, #680]
  42ebb0:	ldr	x8, [sp, #680]
  42ebb4:	ldr	x9, [sp, #5504]
  42ebb8:	str	x8, [x9, #560]
  42ebbc:	ldr	x8, [x9, #568]
  42ebc0:	cbz	x8, 42ebd8 <parse_token+0xa928>
  42ebc4:	ldr	x8, [sp, #5504]
  42ebc8:	ldr	x9, [x8, #568]
  42ebcc:	ldr	x9, [x9]
  42ebd0:	str	x9, [sp, #672]
  42ebd4:	b	42ebe0 <parse_token+0xa930>
  42ebd8:	mov	x8, xzr
  42ebdc:	str	x8, [sp, #672]
  42ebe0:	ldr	x8, [sp, #672]
  42ebe4:	ldr	x9, [sp, #5504]
  42ebe8:	str	x8, [x9, #552]
  42ebec:	mov	x8, xzr
  42ebf0:	str	x8, [x9, #536]
  42ebf4:	str	x8, [x9, #528]
  42ebf8:	mov	w10, #0x4                   	// #4
  42ebfc:	str	w10, [sp, #6180]
  42ec00:	str	wzr, [sp, #6176]
  42ec04:	ldr	x8, [x9, #528]
  42ec08:	cbz	x8, 42ec50 <parse_token+0xa9a0>
  42ec0c:	mov	w0, #0x1                   	// #1
  42ec10:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ec14:	ldr	w8, [sp, #6180]
  42ec18:	cmp	w0, w8
  42ec1c:	cset	w8, ge  // ge = tcont
  42ec20:	mov	w9, #0x1                   	// #1
  42ec24:	eor	w8, w8, #0x1
  42ec28:	eor	w8, w8, w9
  42ec2c:	and	w8, w8, #0x1
  42ec30:	mov	w1, w8
  42ec34:	sxtw	x10, w1
  42ec38:	cbz	x10, 42ec50 <parse_token+0xa9a0>
  42ec3c:	ldr	x8, [sp, #5504]
  42ec40:	ldr	x0, [x8, #528]
  42ec44:	add	x1, sp, #0x1, lsl #12
  42ec48:	add	x1, x1, #0x830
  42ec4c:	bl	40a860 <sd_device_get_sysname@plt>
  42ec50:	ldr	w0, [sp, #6180]
  42ec54:	ldr	w1, [sp, #6176]
  42ec58:	ldr	x8, [sp, #5504]
  42ec5c:	ldr	x9, [x8, #536]
  42ec60:	mov	x10, xzr
  42ec64:	cmp	x9, #0x0
  42ec68:	ldr	x9, [sp, #5496]
  42ec6c:	csel	x5, x9, x10, ne  // ne = any
  42ec70:	ldr	x6, [x8, #536]
  42ec74:	ldr	x10, [x8, #552]
  42ec78:	str	w0, [sp, #668]
  42ec7c:	mov	x0, x10
  42ec80:	str	w1, [sp, #664]
  42ec84:	str	x5, [sp, #656]
  42ec88:	str	x6, [sp, #648]
  42ec8c:	bl	424274 <strna>
  42ec90:	ldr	x8, [sp, #5504]
  42ec94:	ldr	x9, [x8, #560]
  42ec98:	str	x0, [sp, #640]
  42ec9c:	cbz	x9, 42ecb4 <parse_token+0xaa04>
  42eca0:	ldr	x8, [sp, #5504]
  42eca4:	ldr	x9, [x8, #560]
  42eca8:	ldr	w10, [x9, #8]
  42ecac:	str	w10, [sp, #636]
  42ecb0:	b	42ecbc <parse_token+0xaa0c>
  42ecb4:	mov	w8, wzr
  42ecb8:	str	w8, [sp, #636]
  42ecbc:	ldr	w8, [sp, #636]
  42ecc0:	ldr	x9, [sp, #5512]
  42ecc4:	ldr	x10, [x9, #1864]
  42ecc8:	ldr	w0, [sp, #668]
  42eccc:	ldr	w1, [sp, #664]
  42ecd0:	ldr	x2, [sp, #5488]
  42ecd4:	mov	w3, #0x398                 	// #920
  42ecd8:	ldr	x4, [sp, #5480]
  42ecdc:	ldr	x5, [sp, #656]
  42ece0:	ldr	x6, [sp, #648]
  42ece4:	mov	x11, xzr
  42ece8:	mov	x7, x11
  42ecec:	mov	x12, sp
  42ecf0:	str	x11, [x12]
  42ecf4:	mov	x11, sp
  42ecf8:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42ecfc:	add	x12, x12, #0xf9c
  42ed00:	str	x12, [x11, #8]
  42ed04:	mov	x11, sp
  42ed08:	ldr	x12, [sp, #640]
  42ed0c:	str	x12, [x11, #16]
  42ed10:	mov	x11, sp
  42ed14:	str	w8, [x11, #24]
  42ed18:	mov	x11, sp
  42ed1c:	str	x10, [x11, #32]
  42ed20:	bl	40a870 <log_object_internal@plt>
  42ed24:	str	w0, [sp, #6172]
  42ed28:	ldr	w8, [sp, #6172]
  42ed2c:	str	w8, [sp, #6204]
  42ed30:	mov	w8, #0x4                   	// #4
  42ed34:	stur	w8, [x29, #-36]
  42ed38:	ldr	x8, [sp, #5512]
  42ed3c:	ldr	x0, [x8, #1824]
  42ed40:	ldur	w2, [x29, #-36]
  42ed44:	ldr	x3, [x8, #1840]
  42ed48:	mov	w1, #0x27                  	// #39
  42ed4c:	mov	x9, xzr
  42ed50:	mov	x4, x9
  42ed54:	bl	430504 <rule_line_add_token>
  42ed58:	stur	w0, [x29, #-68]
  42ed5c:	b	4300c4 <parse_token+0xbe14>
  42ed60:	ldr	x8, [sp, #5512]
  42ed64:	ldr	x0, [x8, #1864]
  42ed68:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42ed6c:	add	x1, x1, #0xfe6
  42ed70:	bl	40aa20 <strcmp@plt>
  42ed74:	cbnz	w0, 42f458 <parse_token+0xb1a8>
  42ed78:	ldr	x8, [sp, #5512]
  42ed7c:	ldrb	w9, [x8, #1839]
  42ed80:	tbnz	w9, #0, 42ed90 <parse_token+0xaae0>
  42ed84:	ldur	w8, [x29, #-36]
  42ed88:	cmp	w8, #0x3
  42ed8c:	b.ne	42ef90 <parse_token+0xace0>  // b.any
  42ed90:	ldr	x8, [sp, #5512]
  42ed94:	ldr	x9, [x8, #1872]
  42ed98:	ldr	x10, [sp, #5504]
  42ed9c:	str	x9, [x10, #504]
  42eda0:	ldr	x9, [x10, #504]
  42eda4:	cbz	x9, 42edbc <parse_token+0xab0c>
  42eda8:	ldr	x8, [sp, #5504]
  42edac:	ldr	x9, [x8, #504]
  42edb0:	ldr	x9, [x9, #32]
  42edb4:	str	x9, [sp, #624]
  42edb8:	b	42edc4 <parse_token+0xab14>
  42edbc:	mov	x8, xzr
  42edc0:	str	x8, [sp, #624]
  42edc4:	ldr	x8, [sp, #624]
  42edc8:	ldr	x9, [sp, #5504]
  42edcc:	str	x8, [x9, #496]
  42edd0:	ldr	x8, [x9, #496]
  42edd4:	cbz	x8, 42edec <parse_token+0xab3c>
  42edd8:	ldr	x8, [sp, #5504]
  42eddc:	ldr	x9, [x8, #496]
  42ede0:	ldr	x9, [x9, #8]
  42ede4:	str	x9, [sp, #616]
  42ede8:	b	42edf4 <parse_token+0xab44>
  42edec:	mov	x8, xzr
  42edf0:	str	x8, [sp, #616]
  42edf4:	ldr	x8, [sp, #616]
  42edf8:	ldr	x9, [sp, #5504]
  42edfc:	str	x8, [x9, #488]
  42ee00:	ldr	x8, [x9, #496]
  42ee04:	cbz	x8, 42ee1c <parse_token+0xab6c>
  42ee08:	ldr	x8, [sp, #5504]
  42ee0c:	ldr	x9, [x8, #496]
  42ee10:	ldr	x9, [x9]
  42ee14:	str	x9, [sp, #608]
  42ee18:	b	42ee24 <parse_token+0xab74>
  42ee1c:	mov	x8, xzr
  42ee20:	str	x8, [sp, #608]
  42ee24:	ldr	x8, [sp, #608]
  42ee28:	ldr	x9, [sp, #5504]
  42ee2c:	str	x8, [x9, #480]
  42ee30:	mov	x8, xzr
  42ee34:	str	x8, [x9, #464]
  42ee38:	str	x8, [x9, #456]
  42ee3c:	mov	w10, #0x3                   	// #3
  42ee40:	str	w10, [sp, #6108]
  42ee44:	mov	w10, #0x16                  	// #22
  42ee48:	movk	w10, #0x4000, lsl #16
  42ee4c:	str	w10, [sp, #6104]
  42ee50:	ldr	x8, [x9, #456]
  42ee54:	cbz	x8, 42ee9c <parse_token+0xabec>
  42ee58:	mov	w0, #0x1                   	// #1
  42ee5c:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ee60:	ldr	w8, [sp, #6108]
  42ee64:	cmp	w0, w8
  42ee68:	cset	w8, ge  // ge = tcont
  42ee6c:	mov	w9, #0x1                   	// #1
  42ee70:	eor	w8, w8, #0x1
  42ee74:	eor	w8, w8, w9
  42ee78:	and	w8, w8, #0x1
  42ee7c:	mov	w1, w8
  42ee80:	sxtw	x10, w1
  42ee84:	cbz	x10, 42ee9c <parse_token+0xabec>
  42ee88:	ldr	x8, [sp, #5504]
  42ee8c:	ldr	x0, [x8, #456]
  42ee90:	add	x1, sp, #0x1, lsl #12
  42ee94:	add	x1, x1, #0x7e8
  42ee98:	bl	40a860 <sd_device_get_sysname@plt>
  42ee9c:	ldr	w0, [sp, #6108]
  42eea0:	ldr	w1, [sp, #6104]
  42eea4:	ldr	x8, [sp, #5504]
  42eea8:	ldr	x9, [x8, #464]
  42eeac:	mov	x10, xzr
  42eeb0:	cmp	x9, #0x0
  42eeb4:	ldr	x9, [sp, #5496]
  42eeb8:	csel	x5, x9, x10, ne  // ne = any
  42eebc:	ldr	x6, [x8, #464]
  42eec0:	ldr	x10, [x8, #480]
  42eec4:	str	w0, [sp, #604]
  42eec8:	mov	x0, x10
  42eecc:	str	w1, [sp, #600]
  42eed0:	str	x5, [sp, #592]
  42eed4:	str	x6, [sp, #584]
  42eed8:	bl	424274 <strna>
  42eedc:	ldr	x8, [sp, #5504]
  42eee0:	ldr	x9, [x8, #488]
  42eee4:	str	x0, [sp, #576]
  42eee8:	cbz	x9, 42ef00 <parse_token+0xac50>
  42eeec:	ldr	x8, [sp, #5504]
  42eef0:	ldr	x9, [x8, #488]
  42eef4:	ldr	w10, [x9, #8]
  42eef8:	str	w10, [sp, #572]
  42eefc:	b	42ef08 <parse_token+0xac58>
  42ef00:	mov	w8, wzr
  42ef04:	str	w8, [sp, #572]
  42ef08:	ldr	w8, [sp, #572]
  42ef0c:	ldr	x9, [sp, #5512]
  42ef10:	ldr	x10, [x9, #1864]
  42ef14:	ldr	w0, [sp, #604]
  42ef18:	ldr	w1, [sp, #600]
  42ef1c:	ldr	x2, [sp, #5488]
  42ef20:	mov	w3, #0x39f                 	// #927
  42ef24:	ldr	x4, [sp, #5480]
  42ef28:	ldr	x5, [sp, #592]
  42ef2c:	ldr	x6, [sp, #584]
  42ef30:	mov	x11, xzr
  42ef34:	mov	x7, x11
  42ef38:	mov	x12, sp
  42ef3c:	str	x11, [x12]
  42ef40:	mov	x11, sp
  42ef44:	ldr	x12, [sp, #5472]
  42ef48:	str	x12, [x11, #8]
  42ef4c:	mov	x11, sp
  42ef50:	ldr	x13, [sp, #576]
  42ef54:	str	x13, [x11, #16]
  42ef58:	mov	x11, sp
  42ef5c:	str	w8, [x11, #24]
  42ef60:	mov	x11, sp
  42ef64:	ldr	x14, [sp, #5464]
  42ef68:	str	x14, [x11, #32]
  42ef6c:	mov	x11, sp
  42ef70:	str	x10, [x11, #40]
  42ef74:	bl	40a870 <log_object_internal@plt>
  42ef78:	str	w0, [sp, #6100]
  42ef7c:	ldr	w8, [sp, #6100]
  42ef80:	str	w8, [sp, #6132]
  42ef84:	ldr	w8, [sp, #6132]
  42ef88:	stur	w8, [x29, #-4]
  42ef8c:	b	4300f8 <parse_token+0xbe48>
  42ef90:	ldr	x8, [sp, #5512]
  42ef94:	ldr	x0, [x8, #1872]
  42ef98:	ldr	x1, [x8, #1864]
  42ef9c:	ldr	x2, [x8, #1840]
  42efa0:	mov	w9, #0x1                   	// #1
  42efa4:	and	w3, w9, #0x1
  42efa8:	bl	430d00 <check_value_format_and_warn>
  42efac:	ldr	x8, [sp, #5512]
  42efb0:	ldr	x10, [x8, #1856]
  42efb4:	cbz	x10, 42efd0 <parse_token+0xad20>
  42efb8:	ldr	x8, [sp, #5512]
  42efbc:	ldr	x0, [x8, #1856]
  42efc0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42efc4:	add	x1, x1, #0xcf2
  42efc8:	bl	40aa20 <strcmp@plt>
  42efcc:	cbnz	w0, 42eff8 <parse_token+0xad48>
  42efd0:	ldr	x8, [sp, #5512]
  42efd4:	ldr	x0, [x8, #1824]
  42efd8:	ldur	w2, [x29, #-36]
  42efdc:	ldr	x3, [x8, #1840]
  42efe0:	mov	w1, #0x2e                  	// #46
  42efe4:	mov	x9, xzr
  42efe8:	mov	x4, x9
  42efec:	bl	430504 <rule_line_add_token>
  42eff0:	stur	w0, [x29, #-68]
  42eff4:	b	42f454 <parse_token+0xb1a4>
  42eff8:	ldr	x8, [sp, #5512]
  42effc:	ldr	x0, [x8, #1856]
  42f000:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  42f004:	add	x1, x1, #0xd37
  42f008:	bl	40aa20 <strcmp@plt>
  42f00c:	cbnz	w0, 42f254 <parse_token+0xafa4>
  42f010:	ldr	x8, [sp, #5512]
  42f014:	ldr	x0, [x8, #1840]
  42f018:	bl	43e74c <udev_builtin_lookup>
  42f01c:	str	w0, [sp, #6096]
  42f020:	ldr	w9, [sp, #6096]
  42f024:	cmp	w9, #0x0
  42f028:	cset	w9, ge  // ge = tcont
  42f02c:	tbnz	w9, #0, 42f228 <parse_token+0xaf78>
  42f030:	ldr	x8, [sp, #5512]
  42f034:	ldr	x9, [x8, #1872]
  42f038:	ldr	x10, [sp, #5504]
  42f03c:	str	x9, [x10, #432]
  42f040:	ldr	x9, [x10, #432]
  42f044:	cbz	x9, 42f05c <parse_token+0xadac>
  42f048:	ldr	x8, [sp, #5504]
  42f04c:	ldr	x9, [x8, #432]
  42f050:	ldr	x9, [x9, #32]
  42f054:	str	x9, [sp, #560]
  42f058:	b	42f064 <parse_token+0xadb4>
  42f05c:	mov	x8, xzr
  42f060:	str	x8, [sp, #560]
  42f064:	ldr	x8, [sp, #560]
  42f068:	ldr	x9, [sp, #5504]
  42f06c:	str	x8, [x9, #424]
  42f070:	ldr	x8, [x9, #424]
  42f074:	cbz	x8, 42f08c <parse_token+0xaddc>
  42f078:	ldr	x8, [sp, #5504]
  42f07c:	ldr	x9, [x8, #424]
  42f080:	ldr	x9, [x9, #8]
  42f084:	str	x9, [sp, #552]
  42f088:	b	42f094 <parse_token+0xade4>
  42f08c:	mov	x8, xzr
  42f090:	str	x8, [sp, #552]
  42f094:	ldr	x8, [sp, #552]
  42f098:	ldr	x9, [sp, #5504]
  42f09c:	str	x8, [x9, #416]
  42f0a0:	ldr	x8, [x9, #424]
  42f0a4:	cbz	x8, 42f0bc <parse_token+0xae0c>
  42f0a8:	ldr	x8, [sp, #5504]
  42f0ac:	ldr	x9, [x8, #424]
  42f0b0:	ldr	x9, [x9]
  42f0b4:	str	x9, [sp, #544]
  42f0b8:	b	42f0c4 <parse_token+0xae14>
  42f0bc:	mov	x8, xzr
  42f0c0:	str	x8, [sp, #544]
  42f0c4:	ldr	x8, [sp, #544]
  42f0c8:	ldr	x9, [sp, #5504]
  42f0cc:	str	x8, [x9, #408]
  42f0d0:	mov	x8, xzr
  42f0d4:	str	x8, [x9, #392]
  42f0d8:	str	x8, [x9, #384]
  42f0dc:	mov	w10, #0x3                   	// #3
  42f0e0:	str	w10, [sp, #6036]
  42f0e4:	mov	w10, #0x16                  	// #22
  42f0e8:	movk	w10, #0x4000, lsl #16
  42f0ec:	str	w10, [sp, #6032]
  42f0f0:	ldr	x8, [x9, #384]
  42f0f4:	cbz	x8, 42f13c <parse_token+0xae8c>
  42f0f8:	mov	w0, #0x1                   	// #1
  42f0fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  42f100:	ldr	w8, [sp, #6036]
  42f104:	cmp	w0, w8
  42f108:	cset	w8, ge  // ge = tcont
  42f10c:	mov	w9, #0x1                   	// #1
  42f110:	eor	w8, w8, #0x1
  42f114:	eor	w8, w8, w9
  42f118:	and	w8, w8, #0x1
  42f11c:	mov	w1, w8
  42f120:	sxtw	x10, w1
  42f124:	cbz	x10, 42f13c <parse_token+0xae8c>
  42f128:	ldr	x8, [sp, #5504]
  42f12c:	ldr	x0, [x8, #384]
  42f130:	add	x1, sp, #0x1, lsl #12
  42f134:	add	x1, x1, #0x7a0
  42f138:	bl	40a860 <sd_device_get_sysname@plt>
  42f13c:	ldr	w0, [sp, #6036]
  42f140:	ldr	w1, [sp, #6032]
  42f144:	ldr	x8, [sp, #5504]
  42f148:	ldr	x9, [x8, #392]
  42f14c:	mov	x10, xzr
  42f150:	cmp	x9, #0x0
  42f154:	ldr	x9, [sp, #5496]
  42f158:	csel	x5, x9, x10, ne  // ne = any
  42f15c:	ldr	x6, [x8, #392]
  42f160:	ldr	x10, [x8, #408]
  42f164:	str	w0, [sp, #540]
  42f168:	mov	x0, x10
  42f16c:	str	w1, [sp, #536]
  42f170:	str	x5, [sp, #528]
  42f174:	str	x6, [sp, #520]
  42f178:	bl	424274 <strna>
  42f17c:	ldr	x8, [sp, #5504]
  42f180:	ldr	x9, [x8, #416]
  42f184:	str	x0, [sp, #512]
  42f188:	cbz	x9, 42f1a0 <parse_token+0xaef0>
  42f18c:	ldr	x8, [sp, #5504]
  42f190:	ldr	x9, [x8, #416]
  42f194:	ldr	w10, [x9, #8]
  42f198:	str	w10, [sp, #508]
  42f19c:	b	42f1a8 <parse_token+0xaef8>
  42f1a0:	mov	w8, wzr
  42f1a4:	str	w8, [sp, #508]
  42f1a8:	ldr	w8, [sp, #508]
  42f1ac:	ldr	x9, [sp, #5512]
  42f1b0:	ldr	x10, [x9, #1840]
  42f1b4:	ldr	w0, [sp, #540]
  42f1b8:	ldr	w1, [sp, #536]
  42f1bc:	ldr	x2, [sp, #5488]
  42f1c0:	mov	w3, #0x3a9                 	// #937
  42f1c4:	ldr	x4, [sp, #5480]
  42f1c8:	ldr	x5, [sp, #528]
  42f1cc:	ldr	x6, [sp, #520]
  42f1d0:	mov	x11, xzr
  42f1d4:	mov	x7, x11
  42f1d8:	mov	x12, sp
  42f1dc:	str	x11, [x12]
  42f1e0:	mov	x11, sp
  42f1e4:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  42f1e8:	add	x12, x12, #0xfea
  42f1ec:	str	x12, [x11, #8]
  42f1f0:	mov	x11, sp
  42f1f4:	ldr	x12, [sp, #512]
  42f1f8:	str	x12, [x11, #16]
  42f1fc:	mov	x11, sp
  42f200:	str	w8, [x11, #24]
  42f204:	mov	x11, sp
  42f208:	str	x10, [x11, #32]
  42f20c:	bl	40a870 <log_object_internal@plt>
  42f210:	str	w0, [sp, #6028]
  42f214:	ldr	w8, [sp, #6028]
  42f218:	str	w8, [sp, #6060]
  42f21c:	ldr	w8, [sp, #6060]
  42f220:	stur	w8, [x29, #-4]
  42f224:	b	4300f8 <parse_token+0xbe48>
  42f228:	ldr	x8, [sp, #5512]
  42f22c:	ldr	x0, [x8, #1824]
  42f230:	ldur	w2, [x29, #-36]
  42f234:	ldr	x3, [x8, #1840]
  42f238:	ldrsw	x9, [sp, #6096]
  42f23c:	add	x9, x9, #0x1
  42f240:	mov	w1, #0x2d                  	// #45
  42f244:	mov	x4, x9
  42f248:	bl	430504 <rule_line_add_token>
  42f24c:	stur	w0, [x29, #-68]
  42f250:	b	42f454 <parse_token+0xb1a4>
  42f254:	ldr	x8, [sp, #5512]
  42f258:	ldr	x9, [x8, #1872]
  42f25c:	ldr	x10, [sp, #5504]
  42f260:	str	x9, [x10, #360]
  42f264:	ldr	x9, [x10, #360]
  42f268:	cbz	x9, 42f280 <parse_token+0xafd0>
  42f26c:	ldr	x8, [sp, #5504]
  42f270:	ldr	x9, [x8, #360]
  42f274:	ldr	x9, [x9, #32]
  42f278:	str	x9, [sp, #496]
  42f27c:	b	42f288 <parse_token+0xafd8>
  42f280:	mov	x8, xzr
  42f284:	str	x8, [sp, #496]
  42f288:	ldr	x8, [sp, #496]
  42f28c:	ldr	x9, [sp, #5504]
  42f290:	str	x8, [x9, #352]
  42f294:	ldr	x8, [x9, #352]
  42f298:	cbz	x8, 42f2b0 <parse_token+0xb000>
  42f29c:	ldr	x8, [sp, #5504]
  42f2a0:	ldr	x9, [x8, #352]
  42f2a4:	ldr	x9, [x9, #8]
  42f2a8:	str	x9, [sp, #488]
  42f2ac:	b	42f2b8 <parse_token+0xb008>
  42f2b0:	mov	x8, xzr
  42f2b4:	str	x8, [sp, #488]
  42f2b8:	ldr	x8, [sp, #488]
  42f2bc:	ldr	x9, [sp, #5504]
  42f2c0:	str	x8, [x9, #344]
  42f2c4:	ldr	x8, [x9, #352]
  42f2c8:	cbz	x8, 42f2e0 <parse_token+0xb030>
  42f2cc:	ldr	x8, [sp, #5504]
  42f2d0:	ldr	x9, [x8, #352]
  42f2d4:	ldr	x9, [x9]
  42f2d8:	str	x9, [sp, #480]
  42f2dc:	b	42f2e8 <parse_token+0xb038>
  42f2e0:	mov	x8, xzr
  42f2e4:	str	x8, [sp, #480]
  42f2e8:	ldr	x8, [sp, #480]
  42f2ec:	ldr	x9, [sp, #5504]
  42f2f0:	str	x8, [x9, #336]
  42f2f4:	mov	x8, xzr
  42f2f8:	str	x8, [x9, #320]
  42f2fc:	str	x8, [x9, #312]
  42f300:	mov	w10, #0x3                   	// #3
  42f304:	str	w10, [sp, #5964]
  42f308:	mov	w10, #0x16                  	// #22
  42f30c:	movk	w10, #0x4000, lsl #16
  42f310:	str	w10, [sp, #5960]
  42f314:	ldr	x8, [x9, #312]
  42f318:	cbz	x8, 42f360 <parse_token+0xb0b0>
  42f31c:	mov	w0, #0x1                   	// #1
  42f320:	bl	40a3f0 <log_get_max_level_realm@plt>
  42f324:	ldr	w8, [sp, #5964]
  42f328:	cmp	w0, w8
  42f32c:	cset	w8, ge  // ge = tcont
  42f330:	mov	w9, #0x1                   	// #1
  42f334:	eor	w8, w8, #0x1
  42f338:	eor	w8, w8, w9
  42f33c:	and	w8, w8, #0x1
  42f340:	mov	w1, w8
  42f344:	sxtw	x10, w1
  42f348:	cbz	x10, 42f360 <parse_token+0xb0b0>
  42f34c:	ldr	x8, [sp, #5504]
  42f350:	ldr	x0, [x8, #312]
  42f354:	add	x1, sp, #0x1, lsl #12
  42f358:	add	x1, x1, #0x758
  42f35c:	bl	40a860 <sd_device_get_sysname@plt>
  42f360:	ldr	w0, [sp, #5964]
  42f364:	ldr	w1, [sp, #5960]
  42f368:	ldr	x8, [sp, #5504]
  42f36c:	ldr	x9, [x8, #320]
  42f370:	mov	x10, xzr
  42f374:	cmp	x9, #0x0
  42f378:	ldr	x9, [sp, #5496]
  42f37c:	csel	x5, x9, x10, ne  // ne = any
  42f380:	ldr	x6, [x8, #320]
  42f384:	ldr	x10, [x8, #336]
  42f388:	str	w0, [sp, #476]
  42f38c:	mov	x0, x10
  42f390:	str	w1, [sp, #472]
  42f394:	str	x5, [sp, #464]
  42f398:	str	x6, [sp, #456]
  42f39c:	bl	424274 <strna>
  42f3a0:	ldr	x8, [sp, #5504]
  42f3a4:	ldr	x9, [x8, #344]
  42f3a8:	str	x0, [sp, #448]
  42f3ac:	cbz	x9, 42f3c4 <parse_token+0xb114>
  42f3b0:	ldr	x8, [sp, #5504]
  42f3b4:	ldr	x9, [x8, #344]
  42f3b8:	ldr	w10, [x9, #8]
  42f3bc:	str	w10, [sp, #444]
  42f3c0:	b	42f3cc <parse_token+0xb11c>
  42f3c4:	mov	w8, wzr
  42f3c8:	str	w8, [sp, #444]
  42f3cc:	ldr	w8, [sp, #444]
  42f3d0:	ldr	x9, [sp, #5512]
  42f3d4:	ldr	x10, [x9, #1864]
  42f3d8:	ldr	w0, [sp, #476]
  42f3dc:	ldr	w1, [sp, #472]
  42f3e0:	ldr	x2, [sp, #5488]
  42f3e4:	mov	w3, #0x3ac                 	// #940
  42f3e8:	ldr	x4, [sp, #5480]
  42f3ec:	ldr	x5, [sp, #464]
  42f3f0:	ldr	x6, [sp, #456]
  42f3f4:	mov	x11, xzr
  42f3f8:	mov	x7, x11
  42f3fc:	mov	x12, sp
  42f400:	str	x11, [x12]
  42f404:	mov	x11, sp
  42f408:	ldr	x12, [sp, #5472]
  42f40c:	str	x12, [x11, #8]
  42f410:	mov	x11, sp
  42f414:	ldr	x13, [sp, #448]
  42f418:	str	x13, [x11, #16]
  42f41c:	mov	x11, sp
  42f420:	str	w8, [x11, #24]
  42f424:	mov	x11, sp
  42f428:	ldr	x14, [sp, #5456]
  42f42c:	str	x14, [x11, #32]
  42f430:	mov	x11, sp
  42f434:	str	x10, [x11, #40]
  42f438:	bl	40a870 <log_object_internal@plt>
  42f43c:	str	w0, [sp, #5956]
  42f440:	ldr	w8, [sp, #5956]
  42f444:	str	w8, [sp, #5988]
  42f448:	ldr	w8, [sp, #5988]
  42f44c:	stur	w8, [x29, #-4]
  42f450:	b	4300f8 <parse_token+0xbe48>
  42f454:	b	4300c4 <parse_token+0xbe14>
  42f458:	ldr	x8, [sp, #5512]
  42f45c:	ldr	x0, [x8, #1864]
  42f460:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  42f464:	add	x1, x1, #0x17
  42f468:	bl	40aa20 <strcmp@plt>
  42f46c:	cbnz	w0, 42fabc <parse_token+0xb80c>
  42f470:	ldr	x8, [sp, #5512]
  42f474:	ldr	x9, [x8, #1856]
  42f478:	cbz	x9, 42f67c <parse_token+0xb3cc>
  42f47c:	ldr	x8, [sp, #5512]
  42f480:	ldr	x9, [x8, #1872]
  42f484:	ldr	x10, [sp, #5504]
  42f488:	str	x9, [x10, #288]
  42f48c:	ldr	x9, [x10, #288]
  42f490:	cbz	x9, 42f4a8 <parse_token+0xb1f8>
  42f494:	ldr	x8, [sp, #5504]
  42f498:	ldr	x9, [x8, #288]
  42f49c:	ldr	x9, [x9, #32]
  42f4a0:	str	x9, [sp, #432]
  42f4a4:	b	42f4b0 <parse_token+0xb200>
  42f4a8:	mov	x8, xzr
  42f4ac:	str	x8, [sp, #432]
  42f4b0:	ldr	x8, [sp, #432]
  42f4b4:	ldr	x9, [sp, #5504]
  42f4b8:	str	x8, [x9, #280]
  42f4bc:	ldr	x8, [x9, #280]
  42f4c0:	cbz	x8, 42f4d8 <parse_token+0xb228>
  42f4c4:	ldr	x8, [sp, #5504]
  42f4c8:	ldr	x9, [x8, #280]
  42f4cc:	ldr	x9, [x9, #8]
  42f4d0:	str	x9, [sp, #424]
  42f4d4:	b	42f4e0 <parse_token+0xb230>
  42f4d8:	mov	x8, xzr
  42f4dc:	str	x8, [sp, #424]
  42f4e0:	ldr	x8, [sp, #424]
  42f4e4:	ldr	x9, [sp, #5504]
  42f4e8:	str	x8, [x9, #272]
  42f4ec:	ldr	x8, [x9, #280]
  42f4f0:	cbz	x8, 42f508 <parse_token+0xb258>
  42f4f4:	ldr	x8, [sp, #5504]
  42f4f8:	ldr	x9, [x8, #280]
  42f4fc:	ldr	x9, [x9]
  42f500:	str	x9, [sp, #416]
  42f504:	b	42f510 <parse_token+0xb260>
  42f508:	mov	x8, xzr
  42f50c:	str	x8, [sp, #416]
  42f510:	ldr	x8, [sp, #416]
  42f514:	ldr	x9, [sp, #5504]
  42f518:	str	x8, [x9, #264]
  42f51c:	mov	x8, xzr
  42f520:	str	x8, [x9, #248]
  42f524:	str	x8, [x9, #240]
  42f528:	mov	w10, #0x3                   	// #3
  42f52c:	str	w10, [sp, #5892]
  42f530:	mov	w10, #0x16                  	// #22
  42f534:	movk	w10, #0x4000, lsl #16
  42f538:	str	w10, [sp, #5888]
  42f53c:	ldr	x8, [x9, #240]
  42f540:	cbz	x8, 42f588 <parse_token+0xb2d8>
  42f544:	mov	w0, #0x1                   	// #1
  42f548:	bl	40a3f0 <log_get_max_level_realm@plt>
  42f54c:	ldr	w8, [sp, #5892]
  42f550:	cmp	w0, w8
  42f554:	cset	w8, ge  // ge = tcont
  42f558:	mov	w9, #0x1                   	// #1
  42f55c:	eor	w8, w8, #0x1
  42f560:	eor	w8, w8, w9
  42f564:	and	w8, w8, #0x1
  42f568:	mov	w1, w8
  42f56c:	sxtw	x10, w1
  42f570:	cbz	x10, 42f588 <parse_token+0xb2d8>
  42f574:	ldr	x8, [sp, #5504]
  42f578:	ldr	x0, [x8, #240]
  42f57c:	add	x1, sp, #0x1, lsl #12
  42f580:	add	x1, x1, #0x710
  42f584:	bl	40a860 <sd_device_get_sysname@plt>
  42f588:	ldr	w0, [sp, #5892]
  42f58c:	ldr	w1, [sp, #5888]
  42f590:	ldr	x8, [sp, #5504]
  42f594:	ldr	x9, [x8, #248]
  42f598:	mov	x10, xzr
  42f59c:	cmp	x9, #0x0
  42f5a0:	ldr	x9, [sp, #5496]
  42f5a4:	csel	x5, x9, x10, ne  // ne = any
  42f5a8:	ldr	x6, [x8, #248]
  42f5ac:	ldr	x10, [x8, #264]
  42f5b0:	str	w0, [sp, #412]
  42f5b4:	mov	x0, x10
  42f5b8:	str	w1, [sp, #408]
  42f5bc:	str	x5, [sp, #400]
  42f5c0:	str	x6, [sp, #392]
  42f5c4:	bl	424274 <strna>
  42f5c8:	ldr	x8, [sp, #5504]
  42f5cc:	ldr	x9, [x8, #272]
  42f5d0:	str	x0, [sp, #384]
  42f5d4:	cbz	x9, 42f5ec <parse_token+0xb33c>
  42f5d8:	ldr	x8, [sp, #5504]
  42f5dc:	ldr	x9, [x8, #272]
  42f5e0:	ldr	w10, [x9, #8]
  42f5e4:	str	w10, [sp, #380]
  42f5e8:	b	42f5f4 <parse_token+0xb344>
  42f5ec:	mov	w8, wzr
  42f5f0:	str	w8, [sp, #380]
  42f5f4:	ldr	w8, [sp, #380]
  42f5f8:	ldr	x9, [sp, #5512]
  42f5fc:	ldr	x10, [x9, #1864]
  42f600:	ldr	w0, [sp, #412]
  42f604:	ldr	w1, [sp, #408]
  42f608:	ldr	x2, [sp, #5488]
  42f60c:	mov	w3, #0x3af                 	// #943
  42f610:	ldr	x4, [sp, #5480]
  42f614:	ldr	x5, [sp, #400]
  42f618:	ldr	x6, [sp, #392]
  42f61c:	mov	x11, xzr
  42f620:	mov	x7, x11
  42f624:	mov	x12, sp
  42f628:	str	x11, [x12]
  42f62c:	mov	x11, sp
  42f630:	ldr	x12, [sp, #5472]
  42f634:	str	x12, [x11, #8]
  42f638:	mov	x11, sp
  42f63c:	ldr	x13, [sp, #384]
  42f640:	str	x13, [x11, #16]
  42f644:	mov	x11, sp
  42f648:	str	w8, [x11, #24]
  42f64c:	mov	x11, sp
  42f650:	ldr	x14, [sp, #5456]
  42f654:	str	x14, [x11, #32]
  42f658:	mov	x11, sp
  42f65c:	str	x10, [x11, #40]
  42f660:	bl	40a870 <log_object_internal@plt>
  42f664:	str	w0, [sp, #5884]
  42f668:	ldr	w8, [sp, #5884]
  42f66c:	str	w8, [sp, #5916]
  42f670:	ldr	w8, [sp, #5916]
  42f674:	stur	w8, [x29, #-4]
  42f678:	b	4300f8 <parse_token+0xbe48>
  42f67c:	ldur	w8, [x29, #-36]
  42f680:	cmp	w8, #0x4
  42f684:	b.eq	42f888 <parse_token+0xb5d8>  // b.none
  42f688:	ldr	x8, [sp, #5512]
  42f68c:	ldr	x9, [x8, #1872]
  42f690:	ldr	x10, [sp, #5504]
  42f694:	str	x9, [x10, #216]
  42f698:	ldr	x9, [x10, #216]
  42f69c:	cbz	x9, 42f6b4 <parse_token+0xb404>
  42f6a0:	ldr	x8, [sp, #5504]
  42f6a4:	ldr	x9, [x8, #216]
  42f6a8:	ldr	x9, [x9, #32]
  42f6ac:	str	x9, [sp, #368]
  42f6b0:	b	42f6bc <parse_token+0xb40c>
  42f6b4:	mov	x8, xzr
  42f6b8:	str	x8, [sp, #368]
  42f6bc:	ldr	x8, [sp, #368]
  42f6c0:	ldr	x9, [sp, #5504]
  42f6c4:	str	x8, [x9, #208]
  42f6c8:	ldr	x8, [x9, #208]
  42f6cc:	cbz	x8, 42f6e4 <parse_token+0xb434>
  42f6d0:	ldr	x8, [sp, #5504]
  42f6d4:	ldr	x9, [x8, #208]
  42f6d8:	ldr	x9, [x9, #8]
  42f6dc:	str	x9, [sp, #360]
  42f6e0:	b	42f6ec <parse_token+0xb43c>
  42f6e4:	mov	x8, xzr
  42f6e8:	str	x8, [sp, #360]
  42f6ec:	ldr	x8, [sp, #360]
  42f6f0:	ldr	x9, [sp, #5504]
  42f6f4:	str	x8, [x9, #200]
  42f6f8:	ldr	x8, [x9, #208]
  42f6fc:	cbz	x8, 42f714 <parse_token+0xb464>
  42f700:	ldr	x8, [sp, #5504]
  42f704:	ldr	x9, [x8, #208]
  42f708:	ldr	x9, [x9]
  42f70c:	str	x9, [sp, #352]
  42f710:	b	42f71c <parse_token+0xb46c>
  42f714:	mov	x8, xzr
  42f718:	str	x8, [sp, #352]
  42f71c:	ldr	x8, [sp, #352]
  42f720:	ldr	x9, [sp, #5504]
  42f724:	str	x8, [x9, #192]
  42f728:	mov	x8, xzr
  42f72c:	str	x8, [x9, #176]
  42f730:	str	x8, [x9, #168]
  42f734:	mov	w10, #0x3                   	// #3
  42f738:	str	w10, [sp, #5820]
  42f73c:	mov	w10, #0x16                  	// #22
  42f740:	movk	w10, #0x4000, lsl #16
  42f744:	str	w10, [sp, #5816]
  42f748:	ldr	x8, [x9, #168]
  42f74c:	cbz	x8, 42f794 <parse_token+0xb4e4>
  42f750:	mov	w0, #0x1                   	// #1
  42f754:	bl	40a3f0 <log_get_max_level_realm@plt>
  42f758:	ldr	w8, [sp, #5820]
  42f75c:	cmp	w0, w8
  42f760:	cset	w8, ge  // ge = tcont
  42f764:	mov	w9, #0x1                   	// #1
  42f768:	eor	w8, w8, #0x1
  42f76c:	eor	w8, w8, w9
  42f770:	and	w8, w8, #0x1
  42f774:	mov	w1, w8
  42f778:	sxtw	x10, w1
  42f77c:	cbz	x10, 42f794 <parse_token+0xb4e4>
  42f780:	ldr	x8, [sp, #5504]
  42f784:	ldr	x0, [x8, #168]
  42f788:	add	x1, sp, #0x1, lsl #12
  42f78c:	add	x1, x1, #0x6c8
  42f790:	bl	40a860 <sd_device_get_sysname@plt>
  42f794:	ldr	w0, [sp, #5820]
  42f798:	ldr	w1, [sp, #5816]
  42f79c:	ldr	x8, [sp, #5504]
  42f7a0:	ldr	x9, [x8, #176]
  42f7a4:	mov	x10, xzr
  42f7a8:	cmp	x9, #0x0
  42f7ac:	ldr	x9, [sp, #5496]
  42f7b0:	csel	x5, x9, x10, ne  // ne = any
  42f7b4:	ldr	x6, [x8, #176]
  42f7b8:	ldr	x10, [x8, #192]
  42f7bc:	str	w0, [sp, #348]
  42f7c0:	mov	x0, x10
  42f7c4:	str	w1, [sp, #344]
  42f7c8:	str	x5, [sp, #336]
  42f7cc:	str	x6, [sp, #328]
  42f7d0:	bl	424274 <strna>
  42f7d4:	ldr	x8, [sp, #5504]
  42f7d8:	ldr	x9, [x8, #200]
  42f7dc:	str	x0, [sp, #320]
  42f7e0:	cbz	x9, 42f7f8 <parse_token+0xb548>
  42f7e4:	ldr	x8, [sp, #5504]
  42f7e8:	ldr	x9, [x8, #200]
  42f7ec:	ldr	w10, [x9, #8]
  42f7f0:	str	w10, [sp, #316]
  42f7f4:	b	42f800 <parse_token+0xb550>
  42f7f8:	mov	w8, wzr
  42f7fc:	str	w8, [sp, #316]
  42f800:	ldr	w8, [sp, #316]
  42f804:	ldr	x9, [sp, #5512]
  42f808:	ldr	x10, [x9, #1864]
  42f80c:	ldr	w0, [sp, #348]
  42f810:	ldr	w1, [sp, #344]
  42f814:	ldr	x2, [sp, #5488]
  42f818:	mov	w3, #0x3b1                 	// #945
  42f81c:	ldr	x4, [sp, #5480]
  42f820:	ldr	x5, [sp, #336]
  42f824:	ldr	x6, [sp, #328]
  42f828:	mov	x11, xzr
  42f82c:	mov	x7, x11
  42f830:	mov	x12, sp
  42f834:	str	x11, [x12]
  42f838:	mov	x11, sp
  42f83c:	ldr	x12, [sp, #5472]
  42f840:	str	x12, [x11, #8]
  42f844:	mov	x11, sp
  42f848:	ldr	x13, [sp, #320]
  42f84c:	str	x13, [x11, #16]
  42f850:	mov	x11, sp
  42f854:	str	w8, [x11, #24]
  42f858:	mov	x11, sp
  42f85c:	ldr	x14, [sp, #5464]
  42f860:	str	x14, [x11, #32]
  42f864:	mov	x11, sp
  42f868:	str	x10, [x11, #40]
  42f86c:	bl	40a870 <log_object_internal@plt>
  42f870:	str	w0, [sp, #5812]
  42f874:	ldr	w8, [sp, #5812]
  42f878:	str	w8, [sp, #5844]
  42f87c:	ldr	w8, [sp, #5844]
  42f880:	stur	w8, [x29, #-4]
  42f884:	b	4300f8 <parse_token+0xbe48>
  42f888:	ldr	x8, [sp, #5512]
  42f88c:	ldr	x9, [x8, #1824]
  42f890:	ldr	w10, [x9, #12]
  42f894:	mvn	w10, w10
  42f898:	and	w10, w10, #0x8
  42f89c:	cbnz	w10, 42fa8c <parse_token+0xb7dc>
  42f8a0:	ldr	x8, [sp, #5512]
  42f8a4:	ldr	x9, [x8, #1872]
  42f8a8:	ldr	x10, [sp, #5504]
  42f8ac:	str	x9, [x10, #144]
  42f8b0:	ldr	x9, [x10, #144]
  42f8b4:	cbz	x9, 42f8cc <parse_token+0xb61c>
  42f8b8:	ldr	x8, [sp, #5504]
  42f8bc:	ldr	x9, [x8, #144]
  42f8c0:	ldr	x9, [x9, #32]
  42f8c4:	str	x9, [sp, #304]
  42f8c8:	b	42f8d4 <parse_token+0xb624>
  42f8cc:	mov	x8, xzr
  42f8d0:	str	x8, [sp, #304]
  42f8d4:	ldr	x8, [sp, #304]
  42f8d8:	ldr	x9, [sp, #5504]
  42f8dc:	str	x8, [x9, #136]
  42f8e0:	ldr	x8, [x9, #136]
  42f8e4:	cbz	x8, 42f8fc <parse_token+0xb64c>
  42f8e8:	ldr	x8, [sp, #5504]
  42f8ec:	ldr	x9, [x8, #136]
  42f8f0:	ldr	x9, [x9, #8]
  42f8f4:	str	x9, [sp, #296]
  42f8f8:	b	42f904 <parse_token+0xb654>
  42f8fc:	mov	x8, xzr
  42f900:	str	x8, [sp, #296]
  42f904:	ldr	x8, [sp, #296]
  42f908:	ldr	x9, [sp, #5504]
  42f90c:	str	x8, [x9, #128]
  42f910:	ldr	x8, [x9, #136]
  42f914:	cbz	x8, 42f92c <parse_token+0xb67c>
  42f918:	ldr	x8, [sp, #5504]
  42f91c:	ldr	x9, [x8, #136]
  42f920:	ldr	x9, [x9]
  42f924:	str	x9, [sp, #288]
  42f928:	b	42f934 <parse_token+0xb684>
  42f92c:	mov	x8, xzr
  42f930:	str	x8, [sp, #288]
  42f934:	ldr	x8, [sp, #288]
  42f938:	ldr	x9, [sp, #5504]
  42f93c:	str	x8, [x9, #120]
  42f940:	mov	x8, xzr
  42f944:	str	x8, [x9, #104]
  42f948:	str	x8, [x9, #96]
  42f94c:	mov	w10, #0x4                   	// #4
  42f950:	str	w10, [sp, #5748]
  42f954:	str	wzr, [sp, #5744]
  42f958:	ldr	x8, [x9, #96]
  42f95c:	cbz	x8, 42f9a4 <parse_token+0xb6f4>
  42f960:	mov	w0, #0x1                   	// #1
  42f964:	bl	40a3f0 <log_get_max_level_realm@plt>
  42f968:	ldr	w8, [sp, #5748]
  42f96c:	cmp	w0, w8
  42f970:	cset	w8, ge  // ge = tcont
  42f974:	mov	w9, #0x1                   	// #1
  42f978:	eor	w8, w8, #0x1
  42f97c:	eor	w8, w8, w9
  42f980:	and	w8, w8, #0x1
  42f984:	mov	w1, w8
  42f988:	sxtw	x10, w1
  42f98c:	cbz	x10, 42f9a4 <parse_token+0xb6f4>
  42f990:	ldr	x8, [sp, #5504]
  42f994:	ldr	x0, [x8, #96]
  42f998:	add	x1, sp, #0x1, lsl #12
  42f99c:	add	x1, x1, #0x680
  42f9a0:	bl	40a860 <sd_device_get_sysname@plt>
  42f9a4:	ldr	w0, [sp, #5748]
  42f9a8:	ldr	w1, [sp, #5744]
  42f9ac:	ldr	x8, [sp, #5504]
  42f9b0:	ldr	x9, [x8, #104]
  42f9b4:	mov	x10, xzr
  42f9b8:	cmp	x9, #0x0
  42f9bc:	ldr	x9, [sp, #5496]
  42f9c0:	csel	x5, x9, x10, ne  // ne = any
  42f9c4:	ldr	x6, [x8, #104]
  42f9c8:	ldr	x10, [x8, #120]
  42f9cc:	str	w0, [sp, #284]
  42f9d0:	mov	x0, x10
  42f9d4:	str	w1, [sp, #280]
  42f9d8:	str	x5, [sp, #272]
  42f9dc:	str	x6, [sp, #264]
  42f9e0:	bl	424274 <strna>
  42f9e4:	ldr	x8, [sp, #5504]
  42f9e8:	ldr	x9, [x8, #128]
  42f9ec:	str	x0, [sp, #256]
  42f9f0:	cbz	x9, 42fa08 <parse_token+0xb758>
  42f9f4:	ldr	x8, [sp, #5504]
  42f9f8:	ldr	x9, [x8, #128]
  42f9fc:	ldr	w10, [x9, #8]
  42fa00:	str	w10, [sp, #252]
  42fa04:	b	42fa10 <parse_token+0xb760>
  42fa08:	mov	w8, wzr
  42fa0c:	str	w8, [sp, #252]
  42fa10:	ldr	w8, [sp, #252]
  42fa14:	ldr	x9, [sp, #5512]
  42fa18:	ldr	x10, [x9, #1840]
  42fa1c:	ldr	w0, [sp, #284]
  42fa20:	ldr	w1, [sp, #280]
  42fa24:	ldr	x2, [sp, #5488]
  42fa28:	mov	w3, #0x3b3                 	// #947
  42fa2c:	ldr	x4, [sp, #5480]
  42fa30:	ldr	x5, [sp, #272]
  42fa34:	ldr	x6, [sp, #264]
  42fa38:	mov	x11, xzr
  42fa3c:	mov	x7, x11
  42fa40:	mov	x12, sp
  42fa44:	str	x11, [x12]
  42fa48:	mov	x11, sp
  42fa4c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  42fa50:	add	x12, x12, #0x1c
  42fa54:	str	x12, [x11, #8]
  42fa58:	mov	x11, sp
  42fa5c:	ldr	x12, [sp, #256]
  42fa60:	str	x12, [x11, #16]
  42fa64:	mov	x11, sp
  42fa68:	str	w8, [x11, #24]
  42fa6c:	mov	x11, sp
  42fa70:	str	x10, [x11, #32]
  42fa74:	bl	40a870 <log_object_internal@plt>
  42fa78:	str	w0, [sp, #5740]
  42fa7c:	ldr	w8, [sp, #5740]
  42fa80:	str	w8, [sp, #5772]
  42fa84:	stur	wzr, [x29, #-4]
  42fa88:	b	4300f8 <parse_token+0xbe48>
  42fa8c:	ldr	x8, [sp, #5512]
  42fa90:	ldr	x9, [x8, #1840]
  42fa94:	ldr	x10, [x8, #1824]
  42fa98:	str	x9, [x10, #24]
  42fa9c:	ldr	x9, [x8, #1824]
  42faa0:	ldr	w11, [x9, #12]
  42faa4:	orr	w11, w11, #0x8
  42faa8:	ldr	x9, [x8, #1824]
  42faac:	str	w11, [x9, #12]
  42fab0:	mov	w11, #0x1                   	// #1
  42fab4:	stur	w11, [x29, #-4]
  42fab8:	b	4300f8 <parse_token+0xbe48>
  42fabc:	ldr	x8, [sp, #5512]
  42fac0:	ldr	x0, [x8, #1864]
  42fac4:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  42fac8:	add	x1, x1, #0x52
  42facc:	bl	40aa20 <strcmp@plt>
  42fad0:	cbnz	w0, 42fef8 <parse_token+0xbc48>
  42fad4:	ldr	x8, [sp, #5512]
  42fad8:	ldr	x9, [x8, #1856]
  42fadc:	cbz	x9, 42fce0 <parse_token+0xba30>
  42fae0:	ldr	x8, [sp, #5512]
  42fae4:	ldr	x9, [x8, #1872]
  42fae8:	ldr	x10, [sp, #5504]
  42faec:	str	x9, [x10, #72]
  42faf0:	ldr	x9, [x10, #72]
  42faf4:	cbz	x9, 42fb0c <parse_token+0xb85c>
  42faf8:	ldr	x8, [sp, #5504]
  42fafc:	ldr	x9, [x8, #72]
  42fb00:	ldr	x9, [x9, #32]
  42fb04:	str	x9, [sp, #240]
  42fb08:	b	42fb14 <parse_token+0xb864>
  42fb0c:	mov	x8, xzr
  42fb10:	str	x8, [sp, #240]
  42fb14:	ldr	x8, [sp, #240]
  42fb18:	ldr	x9, [sp, #5504]
  42fb1c:	str	x8, [x9, #64]
  42fb20:	ldr	x8, [x9, #64]
  42fb24:	cbz	x8, 42fb3c <parse_token+0xb88c>
  42fb28:	ldr	x8, [sp, #5504]
  42fb2c:	ldr	x9, [x8, #64]
  42fb30:	ldr	x9, [x9, #8]
  42fb34:	str	x9, [sp, #232]
  42fb38:	b	42fb44 <parse_token+0xb894>
  42fb3c:	mov	x8, xzr
  42fb40:	str	x8, [sp, #232]
  42fb44:	ldr	x8, [sp, #232]
  42fb48:	ldr	x9, [sp, #5504]
  42fb4c:	str	x8, [x9, #56]
  42fb50:	ldr	x8, [x9, #64]
  42fb54:	cbz	x8, 42fb6c <parse_token+0xb8bc>
  42fb58:	ldr	x8, [sp, #5504]
  42fb5c:	ldr	x9, [x8, #64]
  42fb60:	ldr	x9, [x9]
  42fb64:	str	x9, [sp, #224]
  42fb68:	b	42fb74 <parse_token+0xb8c4>
  42fb6c:	mov	x8, xzr
  42fb70:	str	x8, [sp, #224]
  42fb74:	ldr	x8, [sp, #224]
  42fb78:	ldr	x9, [sp, #5504]
  42fb7c:	str	x8, [x9, #48]
  42fb80:	mov	x8, xzr
  42fb84:	str	x8, [x9, #32]
  42fb88:	str	x8, [x9, #24]
  42fb8c:	mov	w10, #0x3                   	// #3
  42fb90:	str	w10, [sp, #5676]
  42fb94:	mov	w10, #0x16                  	// #22
  42fb98:	movk	w10, #0x4000, lsl #16
  42fb9c:	str	w10, [sp, #5672]
  42fba0:	ldr	x8, [x9, #24]
  42fba4:	cbz	x8, 42fbec <parse_token+0xb93c>
  42fba8:	mov	w0, #0x1                   	// #1
  42fbac:	bl	40a3f0 <log_get_max_level_realm@plt>
  42fbb0:	ldr	w8, [sp, #5676]
  42fbb4:	cmp	w0, w8
  42fbb8:	cset	w8, ge  // ge = tcont
  42fbbc:	mov	w9, #0x1                   	// #1
  42fbc0:	eor	w8, w8, #0x1
  42fbc4:	eor	w8, w8, w9
  42fbc8:	and	w8, w8, #0x1
  42fbcc:	mov	w1, w8
  42fbd0:	sxtw	x10, w1
  42fbd4:	cbz	x10, 42fbec <parse_token+0xb93c>
  42fbd8:	ldr	x8, [sp, #5504]
  42fbdc:	ldr	x0, [x8, #24]
  42fbe0:	add	x1, sp, #0x1, lsl #12
  42fbe4:	add	x1, x1, #0x638
  42fbe8:	bl	40a860 <sd_device_get_sysname@plt>
  42fbec:	ldr	w0, [sp, #5676]
  42fbf0:	ldr	w1, [sp, #5672]
  42fbf4:	ldr	x8, [sp, #5504]
  42fbf8:	ldr	x9, [x8, #32]
  42fbfc:	mov	x10, xzr
  42fc00:	cmp	x9, #0x0
  42fc04:	ldr	x9, [sp, #5496]
  42fc08:	csel	x5, x9, x10, ne  // ne = any
  42fc0c:	ldr	x6, [x8, #32]
  42fc10:	ldr	x10, [x8, #48]
  42fc14:	str	w0, [sp, #220]
  42fc18:	mov	x0, x10
  42fc1c:	str	w1, [sp, #216]
  42fc20:	str	x5, [sp, #208]
  42fc24:	str	x6, [sp, #200]
  42fc28:	bl	424274 <strna>
  42fc2c:	ldr	x8, [sp, #5504]
  42fc30:	ldr	x9, [x8, #56]
  42fc34:	str	x0, [sp, #192]
  42fc38:	cbz	x9, 42fc50 <parse_token+0xb9a0>
  42fc3c:	ldr	x8, [sp, #5504]
  42fc40:	ldr	x9, [x8, #56]
  42fc44:	ldr	w10, [x9, #8]
  42fc48:	str	w10, [sp, #188]
  42fc4c:	b	42fc58 <parse_token+0xb9a8>
  42fc50:	mov	w8, wzr
  42fc54:	str	w8, [sp, #188]
  42fc58:	ldr	w8, [sp, #188]
  42fc5c:	ldr	x9, [sp, #5512]
  42fc60:	ldr	x10, [x9, #1864]
  42fc64:	ldr	w0, [sp, #220]
  42fc68:	ldr	w1, [sp, #216]
  42fc6c:	ldr	x2, [sp, #5488]
  42fc70:	mov	w3, #0x3bc                 	// #956
  42fc74:	ldr	x4, [sp, #5480]
  42fc78:	ldr	x5, [sp, #208]
  42fc7c:	ldr	x6, [sp, #200]
  42fc80:	mov	x11, xzr
  42fc84:	mov	x7, x11
  42fc88:	mov	x12, sp
  42fc8c:	str	x11, [x12]
  42fc90:	mov	x11, sp
  42fc94:	ldr	x12, [sp, #5472]
  42fc98:	str	x12, [x11, #8]
  42fc9c:	mov	x11, sp
  42fca0:	ldr	x13, [sp, #192]
  42fca4:	str	x13, [x11, #16]
  42fca8:	mov	x11, sp
  42fcac:	str	w8, [x11, #24]
  42fcb0:	mov	x11, sp
  42fcb4:	ldr	x14, [sp, #5456]
  42fcb8:	str	x14, [x11, #32]
  42fcbc:	mov	x11, sp
  42fcc0:	str	x10, [x11, #40]
  42fcc4:	bl	40a870 <log_object_internal@plt>
  42fcc8:	str	w0, [sp, #5668]
  42fccc:	ldr	w8, [sp, #5668]
  42fcd0:	str	w8, [sp, #5700]
  42fcd4:	ldr	w8, [sp, #5700]
  42fcd8:	stur	w8, [x29, #-4]
  42fcdc:	b	4300f8 <parse_token+0xbe48>
  42fce0:	ldur	w8, [x29, #-36]
  42fce4:	cmp	w8, #0x4
  42fce8:	b.eq	42fec8 <parse_token+0xbc18>  // b.none
  42fcec:	ldr	x8, [sp, #5512]
  42fcf0:	ldr	x9, [x8, #1872]
  42fcf4:	ldr	x10, [sp, #5504]
  42fcf8:	str	x9, [x10]
  42fcfc:	ldr	x9, [x10]
  42fd00:	cbz	x9, 42fd18 <parse_token+0xba68>
  42fd04:	ldr	x8, [sp, #5504]
  42fd08:	ldr	x9, [x8]
  42fd0c:	ldr	x9, [x9, #32]
  42fd10:	str	x9, [sp, #176]
  42fd14:	b	42fd20 <parse_token+0xba70>
  42fd18:	mov	x8, xzr
  42fd1c:	str	x8, [sp, #176]
  42fd20:	ldr	x8, [sp, #176]
  42fd24:	str	x8, [sp, #5648]
  42fd28:	ldr	x8, [sp, #5648]
  42fd2c:	cbz	x8, 42fd40 <parse_token+0xba90>
  42fd30:	ldr	x8, [sp, #5648]
  42fd34:	ldr	x8, [x8, #8]
  42fd38:	str	x8, [sp, #168]
  42fd3c:	b	42fd48 <parse_token+0xba98>
  42fd40:	mov	x8, xzr
  42fd44:	str	x8, [sp, #168]
  42fd48:	ldr	x8, [sp, #168]
  42fd4c:	str	x8, [sp, #5640]
  42fd50:	ldr	x8, [sp, #5648]
  42fd54:	cbz	x8, 42fd68 <parse_token+0xbab8>
  42fd58:	ldr	x8, [sp, #5648]
  42fd5c:	ldr	x8, [x8]
  42fd60:	str	x8, [sp, #160]
  42fd64:	b	42fd70 <parse_token+0xbac0>
  42fd68:	mov	x8, xzr
  42fd6c:	str	x8, [sp, #160]
  42fd70:	ldr	x8, [sp, #160]
  42fd74:	str	x8, [sp, #5632]
  42fd78:	mov	x8, xzr
  42fd7c:	str	x8, [sp, #5616]
  42fd80:	str	x8, [sp, #5608]
  42fd84:	mov	w9, #0x3                   	// #3
  42fd88:	str	w9, [sp, #5604]
  42fd8c:	mov	w9, #0x16                  	// #22
  42fd90:	movk	w9, #0x4000, lsl #16
  42fd94:	str	w9, [sp, #5600]
  42fd98:	ldr	x8, [sp, #5608]
  42fd9c:	cbz	x8, 42fde0 <parse_token+0xbb30>
  42fda0:	mov	w0, #0x1                   	// #1
  42fda4:	bl	40a3f0 <log_get_max_level_realm@plt>
  42fda8:	ldr	w8, [sp, #5604]
  42fdac:	cmp	w0, w8
  42fdb0:	cset	w8, ge  // ge = tcont
  42fdb4:	mov	w9, #0x1                   	// #1
  42fdb8:	eor	w8, w8, #0x1
  42fdbc:	eor	w8, w8, w9
  42fdc0:	and	w8, w8, #0x1
  42fdc4:	mov	w1, w8
  42fdc8:	sxtw	x10, w1
  42fdcc:	cbz	x10, 42fde0 <parse_token+0xbb30>
  42fdd0:	ldr	x0, [sp, #5608]
  42fdd4:	add	x1, sp, #0x1, lsl #12
  42fdd8:	add	x1, x1, #0x5f0
  42fddc:	bl	40a860 <sd_device_get_sysname@plt>
  42fde0:	ldr	w0, [sp, #5604]
  42fde4:	ldr	w1, [sp, #5600]
  42fde8:	ldr	x8, [sp, #5616]
  42fdec:	mov	x9, xzr
  42fdf0:	cmp	x8, #0x0
  42fdf4:	ldr	x8, [sp, #5496]
  42fdf8:	csel	x5, x8, x9, ne  // ne = any
  42fdfc:	ldr	x6, [sp, #5616]
  42fe00:	ldr	x9, [sp, #5632]
  42fe04:	str	w0, [sp, #156]
  42fe08:	mov	x0, x9
  42fe0c:	str	w1, [sp, #152]
  42fe10:	str	x5, [sp, #144]
  42fe14:	str	x6, [sp, #136]
  42fe18:	bl	424274 <strna>
  42fe1c:	ldr	x8, [sp, #5640]
  42fe20:	str	x0, [sp, #128]
  42fe24:	cbz	x8, 42fe38 <parse_token+0xbb88>
  42fe28:	ldr	x8, [sp, #5640]
  42fe2c:	ldr	w9, [x8, #8]
  42fe30:	str	w9, [sp, #124]
  42fe34:	b	42fe40 <parse_token+0xbb90>
  42fe38:	mov	w8, wzr
  42fe3c:	str	w8, [sp, #124]
  42fe40:	ldr	w8, [sp, #124]
  42fe44:	ldr	x9, [sp, #5512]
  42fe48:	ldr	x10, [x9, #1864]
  42fe4c:	ldr	w0, [sp, #156]
  42fe50:	ldr	w1, [sp, #152]
  42fe54:	ldr	x2, [sp, #5488]
  42fe58:	mov	w3, #0x3be                 	// #958
  42fe5c:	ldr	x4, [sp, #5480]
  42fe60:	ldr	x5, [sp, #144]
  42fe64:	ldr	x6, [sp, #136]
  42fe68:	mov	x11, xzr
  42fe6c:	mov	x7, x11
  42fe70:	mov	x12, sp
  42fe74:	str	x11, [x12]
  42fe78:	mov	x11, sp
  42fe7c:	ldr	x12, [sp, #5472]
  42fe80:	str	x12, [x11, #8]
  42fe84:	mov	x11, sp
  42fe88:	ldr	x13, [sp, #128]
  42fe8c:	str	x13, [x11, #16]
  42fe90:	mov	x11, sp
  42fe94:	str	w8, [x11, #24]
  42fe98:	mov	x11, sp
  42fe9c:	ldr	x14, [sp, #5464]
  42fea0:	str	x14, [x11, #32]
  42fea4:	mov	x11, sp
  42fea8:	str	x10, [x11, #40]
  42feac:	bl	40a870 <log_object_internal@plt>
  42feb0:	str	w0, [sp, #5596]
  42feb4:	ldr	w8, [sp, #5596]
  42feb8:	str	w8, [sp, #5628]
  42febc:	ldr	w8, [sp, #5628]
  42fec0:	stur	w8, [x29, #-4]
  42fec4:	b	4300f8 <parse_token+0xbe48>
  42fec8:	ldr	x8, [sp, #5512]
  42fecc:	ldr	x9, [x8, #1840]
  42fed0:	ldr	x10, [x8, #1824]
  42fed4:	str	x9, [x10, #16]
  42fed8:	ldr	x9, [x8, #1824]
  42fedc:	ldr	w11, [x9, #12]
  42fee0:	orr	w11, w11, #0x10
  42fee4:	ldr	x9, [x8, #1824]
  42fee8:	str	w11, [x9, #12]
  42feec:	mov	w11, #0x1                   	// #1
  42fef0:	stur	w11, [x29, #-4]
  42fef4:	b	4300f8 <parse_token+0xbe48>
  42fef8:	ldr	x8, [sp, #5512]
  42fefc:	ldr	x9, [x8, #1872]
  42ff00:	str	x9, [sp, #5584]
  42ff04:	ldr	x9, [sp, #5584]
  42ff08:	cbz	x9, 42ff1c <parse_token+0xbc6c>
  42ff0c:	ldr	x8, [sp, #5584]
  42ff10:	ldr	x8, [x8, #32]
  42ff14:	str	x8, [sp, #112]
  42ff18:	b	42ff24 <parse_token+0xbc74>
  42ff1c:	mov	x8, xzr
  42ff20:	str	x8, [sp, #112]
  42ff24:	ldr	x8, [sp, #112]
  42ff28:	str	x8, [sp, #5576]
  42ff2c:	ldr	x8, [sp, #5576]
  42ff30:	cbz	x8, 42ff44 <parse_token+0xbc94>
  42ff34:	ldr	x8, [sp, #5576]
  42ff38:	ldr	x8, [x8, #8]
  42ff3c:	str	x8, [sp, #104]
  42ff40:	b	42ff4c <parse_token+0xbc9c>
  42ff44:	mov	x8, xzr
  42ff48:	str	x8, [sp, #104]
  42ff4c:	ldr	x8, [sp, #104]
  42ff50:	str	x8, [sp, #5568]
  42ff54:	ldr	x8, [sp, #5576]
  42ff58:	cbz	x8, 42ff6c <parse_token+0xbcbc>
  42ff5c:	ldr	x8, [sp, #5576]
  42ff60:	ldr	x8, [x8]
  42ff64:	str	x8, [sp, #96]
  42ff68:	b	42ff74 <parse_token+0xbcc4>
  42ff6c:	mov	x8, xzr
  42ff70:	str	x8, [sp, #96]
  42ff74:	ldr	x8, [sp, #96]
  42ff78:	str	x8, [sp, #5560]
  42ff7c:	mov	x8, xzr
  42ff80:	str	x8, [sp, #5544]
  42ff84:	str	x8, [sp, #5536]
  42ff88:	mov	w9, #0x3                   	// #3
  42ff8c:	str	w9, [sp, #5532]
  42ff90:	mov	w9, #0x16                  	// #22
  42ff94:	movk	w9, #0x4000, lsl #16
  42ff98:	str	w9, [sp, #5528]
  42ff9c:	ldr	x8, [sp, #5536]
  42ffa0:	cbz	x8, 42ffe4 <parse_token+0xbd34>
  42ffa4:	mov	w0, #0x1                   	// #1
  42ffa8:	bl	40a3f0 <log_get_max_level_realm@plt>
  42ffac:	ldr	w8, [sp, #5532]
  42ffb0:	cmp	w0, w8
  42ffb4:	cset	w8, ge  // ge = tcont
  42ffb8:	mov	w9, #0x1                   	// #1
  42ffbc:	eor	w8, w8, #0x1
  42ffc0:	eor	w8, w8, w9
  42ffc4:	and	w8, w8, #0x1
  42ffc8:	mov	w1, w8
  42ffcc:	sxtw	x10, w1
  42ffd0:	cbz	x10, 42ffe4 <parse_token+0xbd34>
  42ffd4:	ldr	x0, [sp, #5536]
  42ffd8:	add	x1, sp, #0x1, lsl #12
  42ffdc:	add	x1, x1, #0x5a8
  42ffe0:	bl	40a860 <sd_device_get_sysname@plt>
  42ffe4:	ldr	w0, [sp, #5532]
  42ffe8:	ldr	w1, [sp, #5528]
  42ffec:	ldr	x8, [sp, #5544]
  42fff0:	mov	x9, xzr
  42fff4:	cmp	x8, #0x0
  42fff8:	ldr	x8, [sp, #5496]
  42fffc:	csel	x5, x8, x9, ne  // ne = any
  430000:	ldr	x6, [sp, #5544]
  430004:	ldr	x9, [sp, #5560]
  430008:	str	w0, [sp, #92]
  43000c:	mov	x0, x9
  430010:	str	w1, [sp, #88]
  430014:	str	x5, [sp, #80]
  430018:	str	x6, [sp, #72]
  43001c:	bl	424274 <strna>
  430020:	ldr	x8, [sp, #5568]
  430024:	str	x0, [sp, #64]
  430028:	cbz	x8, 43003c <parse_token+0xbd8c>
  43002c:	ldr	x8, [sp, #5568]
  430030:	ldr	w9, [x8, #8]
  430034:	str	w9, [sp, #60]
  430038:	b	430044 <parse_token+0xbd94>
  43003c:	mov	w8, wzr
  430040:	str	w8, [sp, #60]
  430044:	ldr	w8, [sp, #60]
  430048:	ldr	x9, [sp, #5512]
  43004c:	ldr	x10, [x9, #1864]
  430050:	ldr	w0, [sp, #92]
  430054:	ldr	w1, [sp, #88]
  430058:	ldr	x2, [sp, #5488]
  43005c:	mov	w3, #0x3c4                 	// #964
  430060:	ldr	x4, [sp, #5480]
  430064:	ldr	x5, [sp, #80]
  430068:	ldr	x6, [sp, #72]
  43006c:	mov	x11, xzr
  430070:	mov	x7, x11
  430074:	mov	x12, sp
  430078:	str	x11, [x12]
  43007c:	mov	x11, sp
  430080:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  430084:	add	x12, x12, #0x58
  430088:	str	x12, [x11, #8]
  43008c:	mov	x11, sp
  430090:	ldr	x12, [sp, #64]
  430094:	str	x12, [x11, #16]
  430098:	mov	x11, sp
  43009c:	str	w8, [x11, #24]
  4300a0:	mov	x11, sp
  4300a4:	str	x10, [x11, #32]
  4300a8:	bl	40a870 <log_object_internal@plt>
  4300ac:	str	w0, [sp, #5524]
  4300b0:	ldr	w8, [sp, #5524]
  4300b4:	str	w8, [sp, #5556]
  4300b8:	ldr	w8, [sp, #5556]
  4300bc:	stur	w8, [x29, #-4]
  4300c0:	b	4300f8 <parse_token+0xbe48>
  4300c4:	ldur	w8, [x29, #-68]
  4300c8:	cmp	w8, #0x0
  4300cc:	cset	w8, ge  // ge = tcont
  4300d0:	tbnz	w8, #0, 4300f0 <parse_token+0xbe40>
  4300d4:	mov	w0, #0x1                   	// #1
  4300d8:	ldr	x1, [sp, #5488]
  4300dc:	mov	w2, #0x3c6                 	// #966
  4300e0:	ldr	x3, [sp, #5480]
  4300e4:	bl	40a5e0 <log_oom_internal@plt>
  4300e8:	stur	w0, [x29, #-4]
  4300ec:	b	4300f8 <parse_token+0xbe48>
  4300f0:	mov	w8, #0x1                   	// #1
  4300f4:	stur	w8, [x29, #-4]
  4300f8:	ldur	w0, [x29, #-4]
  4300fc:	add	sp, sp, #0x2, lsl #12
  430100:	add	sp, sp, #0xe20
  430104:	ldr	x28, [sp, #16]
  430108:	ldp	x29, x30, [sp], #32
  43010c:	ret

0000000000430110 <sort_tokens>:
  430110:	sub	sp, sp, #0x60
  430114:	stp	x29, x30, [sp, #80]
  430118:	add	x29, sp, #0x50
  43011c:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  430120:	add	x8, x8, #0x48a
  430124:	add	x8, x8, #0x3
  430128:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  43012c:	add	x9, x9, #0x389
  430130:	stur	x0, [x29, #-8]
  430134:	str	x8, [sp, #8]
  430138:	str	x9, [sp]
  43013c:	ldur	x8, [x29, #-8]
  430140:	cmp	x8, #0x0
  430144:	cset	w9, ne  // ne = any
  430148:	mov	w10, #0x1                   	// #1
  43014c:	eor	w9, w9, #0x1
  430150:	eor	w9, w9, w10
  430154:	eor	w9, w9, w10
  430158:	and	w9, w9, #0x1
  43015c:	mov	w0, w9
  430160:	sxtw	x8, w0
  430164:	cbz	x8, 430184 <sort_tokens+0x74>
  430168:	mov	w0, #0x1                   	// #1
  43016c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430170:	add	x1, x1, #0x620
  430174:	ldr	x2, [sp, #8]
  430178:	mov	w3, #0x426                 	// #1062
  43017c:	ldr	x4, [sp]
  430180:	bl	40a540 <log_assert_failed_realm@plt>
  430184:	ldur	x8, [x29, #-8]
  430188:	ldr	x8, [x8, #56]
  43018c:	stur	x8, [x29, #-24]
  430190:	ldur	x8, [x29, #-8]
  430194:	mov	x9, xzr
  430198:	str	x9, [x8, #56]
  43019c:	ldur	x8, [x29, #-24]
  4301a0:	stur	x8, [x29, #-32]
  4301a4:	ldur	x8, [x29, #-32]
  4301a8:	stur	x8, [x29, #-16]
  4301ac:	ldur	x8, [x29, #-8]
  4301b0:	str	x9, [x8, #48]
  4301b4:	ldur	x8, [x29, #-16]
  4301b8:	cmp	x8, #0x0
  4301bc:	cset	w9, ne  // ne = any
  4301c0:	mov	w10, #0x1                   	// #1
  4301c4:	eor	w9, w9, #0x1
  4301c8:	eor	w9, w9, w10
  4301cc:	tbnz	w9, #0, 4301d4 <sort_tokens+0xc4>
  4301d0:	b	430358 <sort_tokens+0x248>
  4301d4:	mov	x8, xzr
  4301d8:	str	x8, [sp, #32]
  4301dc:	ldur	x8, [x29, #-16]
  4301e0:	str	x8, [sp, #40]
  4301e4:	ldr	x8, [sp, #40]
  4301e8:	cbz	x8, 430238 <sort_tokens+0x128>
  4301ec:	ldr	x8, [sp, #32]
  4301f0:	cbz	x8, 430220 <sort_tokens+0x110>
  4301f4:	ldr	x8, [sp, #32]
  4301f8:	ldr	w9, [x8]
  4301fc:	lsl	w9, w9, #24
  430200:	mov	x8, #0x18                  	// #24
  430204:	asr	w9, w9, #24
  430208:	ldr	x10, [sp, #40]
  43020c:	ldr	w11, [x10]
  430210:	lsl	w11, w11, #24
  430214:	asr	w8, w11, w8
  430218:	cmp	w9, w8
  43021c:	b.le	430228 <sort_tokens+0x118>
  430220:	ldr	x8, [sp, #40]
  430224:	str	x8, [sp, #32]
  430228:	ldr	x8, [sp, #40]
  43022c:	ldr	x8, [x8, #24]
  430230:	str	x8, [sp, #40]
  430234:	b	4301e4 <sort_tokens+0xd4>
  430238:	sub	x8, x29, #0x10
  43023c:	str	x8, [sp, #24]
  430240:	ldr	x8, [sp, #32]
  430244:	str	x8, [sp, #16]
  430248:	ldr	x8, [sp, #16]
  43024c:	cmp	x8, #0x0
  430250:	cset	w9, ne  // ne = any
  430254:	mov	w10, #0x1                   	// #1
  430258:	eor	w9, w9, #0x1
  43025c:	eor	w9, w9, w10
  430260:	eor	w9, w9, w10
  430264:	and	w9, w9, #0x1
  430268:	mov	w0, w9
  43026c:	sxtw	x8, w0
  430270:	cbz	x8, 430290 <sort_tokens+0x180>
  430274:	mov	w0, #0x1                   	// #1
  430278:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  43027c:	add	x1, x1, #0xd16
  430280:	ldr	x2, [sp, #8]
  430284:	mov	w3, #0x432                 	// #1074
  430288:	ldr	x4, [sp]
  43028c:	bl	40a540 <log_assert_failed_realm@plt>
  430290:	ldr	x8, [sp, #16]
  430294:	ldr	x8, [x8, #24]
  430298:	cbz	x8, 4302b0 <sort_tokens+0x1a0>
  43029c:	ldr	x8, [sp, #16]
  4302a0:	ldr	x8, [x8, #32]
  4302a4:	ldr	x9, [sp, #16]
  4302a8:	ldr	x9, [x9, #24]
  4302ac:	str	x8, [x9, #32]
  4302b0:	ldr	x8, [sp, #16]
  4302b4:	ldr	x8, [x8, #32]
  4302b8:	cbz	x8, 4302d4 <sort_tokens+0x1c4>
  4302bc:	ldr	x8, [sp, #16]
  4302c0:	ldr	x8, [x8, #24]
  4302c4:	ldr	x9, [sp, #16]
  4302c8:	ldr	x9, [x9, #32]
  4302cc:	str	x8, [x9, #24]
  4302d0:	b	430334 <sort_tokens+0x224>
  4302d4:	ldr	x8, [sp, #24]
  4302d8:	ldr	x8, [x8]
  4302dc:	ldr	x9, [sp, #16]
  4302e0:	cmp	x8, x9
  4302e4:	cset	w10, eq  // eq = none
  4302e8:	mov	w11, #0x1                   	// #1
  4302ec:	eor	w10, w10, #0x1
  4302f0:	eor	w10, w10, w11
  4302f4:	eor	w10, w10, w11
  4302f8:	and	w10, w10, #0x1
  4302fc:	mov	w0, w10
  430300:	sxtw	x8, w0
  430304:	cbz	x8, 430324 <sort_tokens+0x214>
  430308:	mov	w0, #0x1                   	// #1
  43030c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  430310:	add	x1, x1, #0xd1c
  430314:	ldr	x2, [sp, #8]
  430318:	mov	w3, #0x432                 	// #1074
  43031c:	ldr	x4, [sp]
  430320:	bl	40a540 <log_assert_failed_realm@plt>
  430324:	ldr	x8, [sp, #16]
  430328:	ldr	x8, [x8, #24]
  43032c:	ldr	x9, [sp, #24]
  430330:	str	x8, [x9]
  430334:	ldr	x8, [sp, #16]
  430338:	mov	x9, xzr
  43033c:	str	x9, [x8, #32]
  430340:	ldr	x8, [sp, #16]
  430344:	str	x9, [x8, #24]
  430348:	ldur	x0, [x29, #-8]
  43034c:	ldr	x1, [sp, #32]
  430350:	bl	431bb0 <rule_line_append_token>
  430354:	b	4301b4 <sort_tokens+0xa4>
  430358:	ldp	x29, x30, [sp, #80]
  43035c:	add	sp, sp, #0x60
  430360:	ret

0000000000430364 <parse_operator>:
  430364:	sub	sp, sp, #0x30
  430368:	stp	x29, x30, [sp, #32]
  43036c:	add	x29, sp, #0x20
  430370:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  430374:	add	x8, x8, #0x48a
  430378:	add	x2, x8, #0x3
  43037c:	str	x0, [sp, #16]
  430380:	str	x2, [sp, #8]
  430384:	ldr	x8, [sp, #16]
  430388:	cmp	x8, #0x0
  43038c:	cset	w9, ne  // ne = any
  430390:	mov	w10, #0x1                   	// #1
  430394:	eor	w9, w9, #0x1
  430398:	eor	w9, w9, w10
  43039c:	eor	w9, w9, w10
  4303a0:	and	w9, w9, #0x1
  4303a4:	mov	w0, w9
  4303a8:	sxtw	x8, w0
  4303ac:	cbz	x8, 4303d0 <parse_operator+0x6c>
  4303b0:	mov	w0, #0x1                   	// #1
  4303b4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4303b8:	add	x1, x1, #0x81c
  4303bc:	ldr	x2, [sp, #8]
  4303c0:	mov	w3, #0x3cc                 	// #972
  4303c4:	adrp	x4, 467000 <on_inotify.__assert_in_set+0x3540>
  4303c8:	add	x4, x4, #0x81f
  4303cc:	bl	40a540 <log_assert_failed_realm@plt>
  4303d0:	ldr	x0, [sp, #16]
  4303d4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4303d8:	add	x1, x1, #0x851
  4303dc:	bl	4304a4 <startswith>
  4303e0:	cbz	x0, 4303ec <parse_operator+0x88>
  4303e4:	stur	wzr, [x29, #-4]
  4303e8:	b	430494 <parse_operator+0x130>
  4303ec:	ldr	x0, [sp, #16]
  4303f0:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  4303f4:	add	x1, x1, #0x854
  4303f8:	bl	4304a4 <startswith>
  4303fc:	cbz	x0, 43040c <parse_operator+0xa8>
  430400:	mov	w8, #0x1                   	// #1
  430404:	stur	w8, [x29, #-4]
  430408:	b	430494 <parse_operator+0x130>
  43040c:	ldr	x0, [sp, #16]
  430410:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430414:	add	x1, x1, #0x857
  430418:	bl	4304a4 <startswith>
  43041c:	cbz	x0, 43042c <parse_operator+0xc8>
  430420:	mov	w8, #0x2                   	// #2
  430424:	stur	w8, [x29, #-4]
  430428:	b	430494 <parse_operator+0x130>
  43042c:	ldr	x0, [sp, #16]
  430430:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430434:	add	x1, x1, #0x85a
  430438:	bl	4304a4 <startswith>
  43043c:	cbz	x0, 43044c <parse_operator+0xe8>
  430440:	mov	w8, #0x3                   	// #3
  430444:	stur	w8, [x29, #-4]
  430448:	b	430494 <parse_operator+0x130>
  43044c:	ldr	x0, [sp, #16]
  430450:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430454:	add	x1, x1, #0x85d
  430458:	bl	4304a4 <startswith>
  43045c:	cbz	x0, 43046c <parse_operator+0x108>
  430460:	mov	w8, #0x4                   	// #4
  430464:	stur	w8, [x29, #-4]
  430468:	b	430494 <parse_operator+0x130>
  43046c:	ldr	x0, [sp, #16]
  430470:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430474:	add	x1, x1, #0x85f
  430478:	bl	4304a4 <startswith>
  43047c:	cbz	x0, 43048c <parse_operator+0x128>
  430480:	mov	w8, #0x5                   	// #5
  430484:	stur	w8, [x29, #-4]
  430488:	b	430494 <parse_operator+0x130>
  43048c:	mov	w8, #0xffffffff            	// #-1
  430490:	stur	w8, [x29, #-4]
  430494:	ldur	w0, [x29, #-4]
  430498:	ldp	x29, x30, [sp, #32]
  43049c:	add	sp, sp, #0x30
  4304a0:	ret

00000000004304a4 <startswith>:
  4304a4:	sub	sp, sp, #0x30
  4304a8:	stp	x29, x30, [sp, #32]
  4304ac:	add	x29, sp, #0x20
  4304b0:	str	x0, [sp, #16]
  4304b4:	str	x1, [sp, #8]
  4304b8:	ldr	x0, [sp, #8]
  4304bc:	bl	40a800 <strlen@plt>
  4304c0:	str	x0, [sp]
  4304c4:	ldr	x0, [sp, #16]
  4304c8:	ldr	x1, [sp, #8]
  4304cc:	ldr	x2, [sp]
  4304d0:	bl	40a810 <strncmp@plt>
  4304d4:	cbnz	w0, 4304ec <startswith+0x48>
  4304d8:	ldr	x8, [sp, #16]
  4304dc:	ldr	x9, [sp]
  4304e0:	add	x8, x8, x9
  4304e4:	stur	x8, [x29, #-8]
  4304e8:	b	4304f4 <startswith+0x50>
  4304ec:	mov	x8, xzr
  4304f0:	stur	x8, [x29, #-8]
  4304f4:	ldur	x0, [x29, #-8]
  4304f8:	ldp	x29, x30, [sp, #32]
  4304fc:	add	sp, sp, #0x30
  430500:	ret

0000000000430504 <rule_line_add_token>:
  430504:	sub	sp, sp, #0x120
  430508:	stp	x29, x30, [sp, #256]
  43050c:	str	x28, [sp, #272]
  430510:	add	x29, sp, #0x100
  430514:	sub	x8, x29, #0x30
  430518:	mov	w9, #0xffffffff            	// #-1
  43051c:	mov	w10, #0x0                   	// #0
  430520:	adrp	x11, 467000 <on_inotify.__assert_in_set+0x3540>
  430524:	add	x11, x11, #0x48a
  430528:	add	x11, x11, #0x3
  43052c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  430530:	add	x12, x12, #0x6f
  430534:	str	x0, [x8, #32]
  430538:	stur	w1, [x29, #-20]
  43053c:	stur	w2, [x29, #-24]
  430540:	str	x3, [x8, #16]
  430544:	str	x4, [x8, #8]
  430548:	stur	w9, [x29, #-52]
  43054c:	stur	w9, [x29, #-56]
  430550:	sturb	w10, [x29, #-57]
  430554:	str	x8, [sp, #56]
  430558:	str	x11, [sp, #48]
  43055c:	str	x12, [sp, #40]
  430560:	ldr	x8, [sp, #56]
  430564:	ldr	x9, [x8, #32]
  430568:	cmp	x9, #0x0
  43056c:	cset	w10, ne  // ne = any
  430570:	mov	w11, #0x1                   	// #1
  430574:	eor	w10, w10, #0x1
  430578:	eor	w10, w10, w11
  43057c:	eor	w10, w10, w11
  430580:	and	w10, w10, #0x1
  430584:	mov	w0, w10
  430588:	sxtw	x9, w0
  43058c:	cbz	x9, 4305ac <rule_line_add_token+0xa8>
  430590:	mov	w0, #0x1                   	// #1
  430594:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  430598:	add	x1, x1, #0x620
  43059c:	ldr	x2, [sp, #48]
  4305a0:	mov	w3, #0x1a0                 	// #416
  4305a4:	ldr	x4, [sp, #40]
  4305a8:	bl	40a540 <log_assert_failed_realm@plt>
  4305ac:	ldur	w8, [x29, #-20]
  4305b0:	cmp	w8, #0x0
  4305b4:	cset	w8, lt  // lt = tstop
  4305b8:	mov	w9, #0x0                   	// #0
  4305bc:	str	w9, [sp, #36]
  4305c0:	tbnz	w8, #0, 4305d4 <rule_line_add_token+0xd0>
  4305c4:	ldur	w8, [x29, #-20]
  4305c8:	cmp	w8, #0x2f
  4305cc:	cset	w8, lt  // lt = tstop
  4305d0:	str	w8, [sp, #36]
  4305d4:	ldr	w8, [sp, #36]
  4305d8:	mov	w9, #0x1                   	// #1
  4305dc:	eor	w8, w8, #0x1
  4305e0:	eor	w8, w8, w9
  4305e4:	eor	w8, w8, w9
  4305e8:	and	w8, w8, #0x1
  4305ec:	mov	w0, w8
  4305f0:	sxtw	x10, w0
  4305f4:	cbz	x10, 430614 <rule_line_add_token+0x110>
  4305f8:	mov	w0, #0x1                   	// #1
  4305fc:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  430600:	add	x1, x1, #0xd0
  430604:	ldr	x2, [sp, #48]
  430608:	mov	w3, #0x1a1                 	// #417
  43060c:	ldr	x4, [sp, #40]
  430610:	bl	40a540 <log_assert_failed_realm@plt>
  430614:	ldur	w8, [x29, #-24]
  430618:	cmp	w8, #0x0
  43061c:	cset	w8, lt  // lt = tstop
  430620:	mov	w9, #0x0                   	// #0
  430624:	str	w9, [sp, #32]
  430628:	tbnz	w8, #0, 43063c <rule_line_add_token+0x138>
  43062c:	ldur	w8, [x29, #-24]
  430630:	cmp	w8, #0x6
  430634:	cset	w8, lt  // lt = tstop
  430638:	str	w8, [sp, #32]
  43063c:	ldr	w8, [sp, #32]
  430640:	mov	w9, #0x1                   	// #1
  430644:	eor	w8, w8, #0x1
  430648:	eor	w8, w8, w9
  43064c:	eor	w8, w8, w9
  430650:	and	w8, w8, #0x1
  430654:	mov	w0, w8
  430658:	sxtw	x10, w0
  43065c:	cbz	x10, 43067c <rule_line_add_token+0x178>
  430660:	mov	w0, #0x1                   	// #1
  430664:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  430668:	add	x1, x1, #0xf1
  43066c:	ldr	x2, [sp, #48]
  430670:	mov	w3, #0x1a2                 	// #418
  430674:	ldr	x4, [sp, #40]
  430678:	bl	40a540 <log_assert_failed_realm@plt>
  43067c:	ldur	w8, [x29, #-20]
  430680:	cmp	w8, #0x1a
  430684:	b.ge	430924 <rule_line_add_token+0x420>  // b.tcont
  430688:	ldr	x8, [sp, #56]
  43068c:	ldr	x9, [x8, #16]
  430690:	cmp	x9, #0x0
  430694:	cset	w10, ne  // ne = any
  430698:	mov	w11, #0x1                   	// #1
  43069c:	eor	w10, w10, #0x1
  4306a0:	eor	w10, w10, w11
  4306a4:	eor	w10, w10, w11
  4306a8:	and	w10, w10, #0x1
  4306ac:	mov	w0, w10
  4306b0:	sxtw	x9, w0
  4306b4:	cbz	x9, 4306d4 <rule_line_add_token+0x1d0>
  4306b8:	mov	w0, #0x1                   	// #1
  4306bc:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4306c0:	add	x1, x1, #0x336
  4306c4:	ldr	x2, [sp, #48]
  4306c8:	mov	w3, #0x1a5                 	// #421
  4306cc:	ldr	x4, [sp, #40]
  4306d0:	bl	40a540 <log_assert_failed_realm@plt>
  4306d4:	mov	w8, #0x0                   	// #0
  4306d8:	sturb	w8, [x29, #-73]
  4306dc:	ldur	w8, [x29, #-24]
  4306e0:	subs	w8, w8, #0x0
  4306e4:	mov	w9, #0x1                   	// #1
  4306e8:	cmp	w8, #0x1
  4306ec:	cset	w8, ls  // ls = plast
  4306f0:	eor	w8, w8, w9
  4306f4:	tbnz	w8, #0, 430708 <rule_line_add_token+0x204>
  4306f8:	b	4306fc <rule_line_add_token+0x1f8>
  4306fc:	mov	w8, #0x1                   	// #1
  430700:	sturb	w8, [x29, #-73]
  430704:	b	430708 <rule_line_add_token+0x204>
  430708:	ldurb	w8, [x29, #-73]
  43070c:	mov	w9, #0x1                   	// #1
  430710:	and	w8, w8, w9
  430714:	sturb	w8, [x29, #-74]
  430718:	ldurb	w8, [x29, #-74]
  43071c:	eor	w8, w8, #0x1
  430720:	eor	w8, w8, w9
  430724:	eor	w8, w8, w9
  430728:	and	w8, w8, #0x1
  43072c:	mov	w0, w8
  430730:	sxtw	x10, w0
  430734:	cbz	x10, 430754 <rule_line_add_token+0x250>
  430738:	mov	w0, #0x1                   	// #1
  43073c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  430740:	add	x1, x1, #0x10e
  430744:	ldr	x2, [sp, #48]
  430748:	mov	w3, #0x1a6                 	// #422
  43074c:	ldr	x4, [sp, #40]
  430750:	bl	40a540 <log_assert_failed_realm@plt>
  430754:	ldur	w8, [x29, #-20]
  430758:	cmp	w8, #0x8
  43075c:	b.ne	430798 <rule_line_add_token+0x294>  // b.any
  430760:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  430764:	add	x8, x8, #0x128
  430768:	ldr	q0, [x8]
  43076c:	sub	x0, x29, #0x70
  430770:	stur	q0, [x29, #-112]
  430774:	ldr	q0, [x8, #16]
  430778:	stur	q0, [x29, #-96]
  43077c:	ldr	x8, [sp, #56]
  430780:	ldr	x1, [x8, #16]
  430784:	bl	40b2e0 <strv_find@plt>
  430788:	cbz	x0, 430798 <rule_line_add_token+0x294>
  43078c:	mov	w8, #0x5                   	// #5
  430790:	stur	w8, [x29, #-52]
  430794:	b	430814 <rule_line_add_token+0x310>
  430798:	ldr	x8, [sp, #56]
  43079c:	ldr	x0, [x8, #16]
  4307a0:	bl	423ddc <isempty>
  4307a4:	tbnz	w0, #0, 4307ac <rule_line_add_token+0x2a8>
  4307a8:	b	4307b4 <rule_line_add_token+0x2b0>
  4307ac:	stur	wzr, [x29, #-52]
  4307b0:	b	430814 <rule_line_add_token+0x310>
  4307b4:	ldr	x8, [sp, #56]
  4307b8:	ldr	x0, [x8, #16]
  4307bc:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  4307c0:	add	x1, x1, #0x139
  4307c4:	bl	40aa20 <strcmp@plt>
  4307c8:	cbnz	w0, 4307ec <rule_line_add_token+0x2e8>
  4307cc:	mov	w8, wzr
  4307d0:	stur	wzr, [x29, #-52]
  4307d4:	ldur	w9, [x29, #-24]
  4307d8:	mov	w10, #0x1                   	// #1
  4307dc:	cmp	w9, #0x0
  4307e0:	csel	w8, w10, w8, eq  // eq = none
  4307e4:	stur	w8, [x29, #-24]
  4307e8:	b	430814 <rule_line_add_token+0x310>
  4307ec:	ldr	x8, [sp, #56]
  4307f0:	ldr	x0, [x8, #16]
  4307f4:	bl	431b6c <string_is_glob>
  4307f8:	tbnz	w0, #0, 430800 <rule_line_add_token+0x2fc>
  4307fc:	b	43080c <rule_line_add_token+0x308>
  430800:	mov	w8, #0x3                   	// #3
  430804:	stur	w8, [x29, #-52]
  430808:	b	430814 <rule_line_add_token+0x310>
  43080c:	mov	w8, #0x1                   	// #1
  430810:	stur	w8, [x29, #-52]
  430814:	ldur	w8, [x29, #-20]
  430818:	cmp	w8, #0x11
  43081c:	b.lt	43082c <rule_line_add_token+0x328>  // b.tstop
  430820:	ldur	w8, [x29, #-20]
  430824:	cmp	w8, #0x19
  430828:	b.ne	430924 <rule_line_add_token+0x420>  // b.any
  43082c:	mov	w8, #0x1                   	// #1
  430830:	sturb	w8, [x29, #-113]
  430834:	mov	w8, #0x0                   	// #0
  430838:	sturb	w8, [x29, #-114]
  43083c:	ldr	x9, [sp, #56]
  430840:	ldr	x10, [x9, #16]
  430844:	str	x10, [sp, #120]
  430848:	str	x10, [sp, #128]
  43084c:	ldr	x8, [sp, #128]
  430850:	ldrb	w9, [x8]
  430854:	cbz	w9, 4308d0 <rule_line_add_token+0x3cc>
  430858:	ldr	x8, [sp, #128]
  43085c:	ldrb	w9, [x8]
  430860:	cmp	w9, #0x7c
  430864:	b.eq	43088c <rule_line_add_token+0x388>  // b.none
  430868:	ldr	x8, [sp, #128]
  43086c:	ldrb	w9, [x8]
  430870:	ldr	x8, [sp, #120]
  430874:	add	x10, x8, #0x1
  430878:	str	x10, [sp, #120]
  43087c:	strb	w9, [x8]
  430880:	mov	w9, #0x0                   	// #0
  430884:	sturb	w9, [x29, #-113]
  430888:	b	4308c0 <rule_line_add_token+0x3bc>
  43088c:	ldurb	w8, [x29, #-113]
  430890:	tbnz	w8, #0, 430898 <rule_line_add_token+0x394>
  430894:	b	4308a4 <rule_line_add_token+0x3a0>
  430898:	mov	w8, #0x1                   	// #1
  43089c:	sturb	w8, [x29, #-114]
  4308a0:	b	4308b8 <rule_line_add_token+0x3b4>
  4308a4:	ldr	x8, [sp, #120]
  4308a8:	add	x9, x8, #0x1
  4308ac:	str	x9, [sp, #120]
  4308b0:	mov	w10, #0x0                   	// #0
  4308b4:	strb	w10, [x8]
  4308b8:	mov	w8, #0x1                   	// #1
  4308bc:	sturb	w8, [x29, #-113]
  4308c0:	ldr	x8, [sp, #128]
  4308c4:	add	x8, x8, #0x1
  4308c8:	str	x8, [sp, #128]
  4308cc:	b	43084c <rule_line_add_token+0x348>
  4308d0:	ldr	x8, [sp, #120]
  4308d4:	mov	w9, #0x0                   	// #0
  4308d8:	strb	w9, [x8]
  4308dc:	ldurb	w9, [x29, #-113]
  4308e0:	tbnz	w9, #0, 4308e8 <rule_line_add_token+0x3e4>
  4308e4:	b	4308f0 <rule_line_add_token+0x3ec>
  4308e8:	mov	w8, #0x1                   	// #1
  4308ec:	sturb	w8, [x29, #-114]
  4308f0:	ldurb	w8, [x29, #-114]
  4308f4:	tbnz	w8, #0, 4308fc <rule_line_add_token+0x3f8>
  4308f8:	b	430924 <rule_line_add_token+0x420>
  4308fc:	ldur	w8, [x29, #-52]
  430900:	cmp	w8, #0x3
  430904:	b.ne	430910 <rule_line_add_token+0x40c>  // b.any
  430908:	mov	w8, #0x4                   	// #4
  43090c:	stur	w8, [x29, #-52]
  430910:	ldur	w8, [x29, #-52]
  430914:	cmp	w8, #0x1
  430918:	b.ne	430924 <rule_line_add_token+0x420>  // b.any
  43091c:	mov	w8, #0x2                   	// #2
  430920:	stur	w8, [x29, #-52]
  430924:	mov	w8, #0x0                   	// #0
  430928:	strb	w8, [sp, #119]
  43092c:	ldur	w8, [x29, #-20]
  430930:	cmp	w8, #0xa
  430934:	str	w8, [sp, #28]
  430938:	b.eq	430958 <rule_line_add_token+0x454>  // b.none
  43093c:	b	430940 <rule_line_add_token+0x43c>
  430940:	ldr	w8, [sp, #28]
  430944:	cmp	w8, #0xf
  430948:	cset	w9, eq  // eq = none
  43094c:	eor	w9, w9, #0x1
  430950:	tbnz	w9, #0, 430964 <rule_line_add_token+0x460>
  430954:	b	430958 <rule_line_add_token+0x454>
  430958:	mov	w8, #0x1                   	// #1
  43095c:	strb	w8, [sp, #119]
  430960:	b	430964 <rule_line_add_token+0x460>
  430964:	ldrb	w8, [sp, #119]
  430968:	and	w8, w8, #0x1
  43096c:	strb	w8, [sp, #118]
  430970:	ldrb	w8, [sp, #118]
  430974:	tbnz	w8, #0, 43097c <rule_line_add_token+0x478>
  430978:	b	430a74 <rule_line_add_token+0x570>
  43097c:	ldr	x8, [sp, #56]
  430980:	ldr	x9, [x8, #16]
  430984:	cmp	x9, #0x0
  430988:	cset	w10, ne  // ne = any
  43098c:	mov	w11, #0x1                   	// #1
  430990:	eor	w10, w10, #0x1
  430994:	eor	w10, w10, w11
  430998:	eor	w10, w10, w11
  43099c:	and	w10, w10, #0x1
  4309a0:	mov	w0, w10
  4309a4:	sxtw	x9, w0
  4309a8:	cbz	x9, 4309c8 <rule_line_add_token+0x4c4>
  4309ac:	mov	w0, #0x1                   	// #1
  4309b0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4309b4:	add	x1, x1, #0x336
  4309b8:	ldr	x2, [sp, #48]
  4309bc:	mov	w3, #0x1d4                 	// #468
  4309c0:	ldr	x4, [sp, #40]
  4309c4:	bl	40a540 <log_assert_failed_realm@plt>
  4309c8:	ldr	x8, [sp, #56]
  4309cc:	ldr	x9, [x8, #8]
  4309d0:	cmp	x9, #0x0
  4309d4:	cset	w10, ne  // ne = any
  4309d8:	mov	w11, #0x1                   	// #1
  4309dc:	eor	w10, w10, #0x1
  4309e0:	eor	w10, w10, w11
  4309e4:	eor	w10, w10, w11
  4309e8:	and	w10, w10, #0x1
  4309ec:	mov	w0, w10
  4309f0:	sxtw	x9, w0
  4309f4:	cbz	x9, 430a14 <rule_line_add_token+0x510>
  4309f8:	mov	w0, #0x1                   	// #1
  4309fc:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  430a00:	add	x1, x1, #0x13c
  430a04:	ldr	x2, [sp, #48]
  430a08:	mov	w3, #0x1d5                 	// #469
  430a0c:	ldr	x4, [sp, #40]
  430a10:	bl	40a540 <log_assert_failed_realm@plt>
  430a14:	ldr	x8, [sp, #56]
  430a18:	ldr	x0, [x8, #16]
  430a1c:	bl	40a800 <strlen@plt>
  430a20:	stur	x0, [x29, #-72]
  430a24:	ldur	x8, [x29, #-72]
  430a28:	cmp	x8, #0x0
  430a2c:	cset	w9, ls  // ls = plast
  430a30:	tbnz	w9, #0, 430a64 <rule_line_add_token+0x560>
  430a34:	bl	40b330 <__ctype_b_loc@plt>
  430a38:	ldr	x8, [x0]
  430a3c:	ldr	x9, [sp, #56]
  430a40:	ldr	x10, [x9, #16]
  430a44:	ldur	x11, [x29, #-72]
  430a48:	subs	x11, x11, #0x1
  430a4c:	ldrb	w12, [x10, x11]
  430a50:	ldrh	w12, [x8, w12, sxtw #1]
  430a54:	and	w12, w12, #0x2000
  430a58:	cbnz	w12, 430a64 <rule_line_add_token+0x560>
  430a5c:	mov	w8, #0x1                   	// #1
  430a60:	sturb	w8, [x29, #-57]
  430a64:	ldr	x8, [sp, #56]
  430a68:	ldr	x0, [x8, #8]
  430a6c:	bl	4315b8 <rule_get_substitution_type>
  430a70:	stur	w0, [x29, #-56]
  430a74:	mov	x0, #0x28                  	// #40
  430a78:	mov	x1, #0x1                   	// #1
  430a7c:	bl	421d60 <malloc_multiply>
  430a80:	ldr	x8, [sp, #56]
  430a84:	str	x0, [x8]
  430a88:	ldr	x9, [x8]
  430a8c:	cbnz	x9, 430a9c <rule_line_add_token+0x598>
  430a90:	mov	w8, #0xfffffff4            	// #-12
  430a94:	stur	w8, [x29, #-4]
  430a98:	b	430cec <rule_line_add_token+0x7e8>
  430a9c:	ldr	x8, [sp, #56]
  430aa0:	ldr	x0, [x8]
  430aa4:	ldur	w9, [x29, #-20]
  430aa8:	add	x10, sp, #0x48
  430aac:	ldr	w11, [sp, #72]
  430ab0:	and	w9, w9, #0xff
  430ab4:	and	w11, w11, #0xffffff00
  430ab8:	orr	w9, w11, w9
  430abc:	str	w9, [sp, #72]
  430ac0:	ldur	w9, [x29, #-24]
  430ac4:	ldr	w11, [sp, #72]
  430ac8:	and	w9, w9, #0xff
  430acc:	and	w11, w11, #0xffff00ff
  430ad0:	orr	w9, w11, w9, lsl #8
  430ad4:	str	w9, [sp, #72]
  430ad8:	ldur	w9, [x29, #-52]
  430adc:	ldr	w11, [sp, #72]
  430ae0:	and	w9, w9, #0xff
  430ae4:	and	w11, w11, #0xff00ffff
  430ae8:	orr	w9, w11, w9, lsl #16
  430aec:	str	w9, [sp, #72]
  430af0:	ldur	w9, [x29, #-56]
  430af4:	ldr	w11, [sp, #72]
  430af8:	and	w9, w9, #0x7f
  430afc:	and	w11, w11, #0x80ffffff
  430b00:	orr	w9, w11, w9, lsl #24
  430b04:	str	w9, [sp, #72]
  430b08:	ldurb	w9, [x29, #-57]
  430b0c:	and	w9, w9, #0x1
  430b10:	ldr	w11, [sp, #72]
  430b14:	and	w11, w11, #0x7fffffff
  430b18:	orr	w9, w11, w9, lsl #31
  430b1c:	str	w9, [sp, #72]
  430b20:	ldr	x12, [x8, #16]
  430b24:	str	x12, [x10, #8]
  430b28:	ldr	x12, [x8, #8]
  430b2c:	str	x12, [x10, #16]
  430b30:	mov	x12, #0x18                  	// #24
  430b34:	mov	x13, xzr
  430b38:	str	x13, [x10, #24]
  430b3c:	str	x13, [x10, #32]
  430b40:	mov	x1, x10
  430b44:	mov	x2, #0x28                  	// #40
  430b48:	str	x12, [sp, #16]
  430b4c:	bl	40a600 <memcpy@plt>
  430b50:	ldr	x8, [sp, #56]
  430b54:	ldr	x0, [x8, #32]
  430b58:	ldr	x1, [x8]
  430b5c:	bl	431bb0 <rule_line_append_token>
  430b60:	ldr	x8, [sp, #56]
  430b64:	ldr	x10, [x8]
  430b68:	ldr	w9, [x10]
  430b6c:	lsl	w9, w9, #24
  430b70:	ldr	x10, [sp, #16]
  430b74:	asr	w9, w9, w10
  430b78:	cmp	w9, #0x29
  430b7c:	b.ne	430b9c <rule_line_add_token+0x698>  // b.any
  430b80:	ldr	x8, [sp, #56]
  430b84:	ldr	x9, [x8, #32]
  430b88:	ldr	w10, [x9, #12]
  430b8c:	orr	w10, w10, #0x1
  430b90:	ldr	x9, [x8, #32]
  430b94:	str	w10, [x9, #12]
  430b98:	b	430ce8 <rule_line_add_token+0x7e4>
  430b9c:	mov	w8, #0x0                   	// #0
  430ba0:	strb	w8, [sp, #71]
  430ba4:	ldr	x9, [sp, #56]
  430ba8:	ldr	x10, [x9]
  430bac:	ldr	w8, [x10]
  430bb0:	lsl	w8, w8, #24
  430bb4:	asr	w8, w8, #24
  430bb8:	subs	w11, w8, #0x1f
  430bbc:	cmp	w11, #0x5
  430bc0:	str	w8, [sp, #12]
  430bc4:	b.ls	430be4 <rule_line_add_token+0x6e0>  // b.plast
  430bc8:	b	430bcc <rule_line_add_token+0x6c8>
  430bcc:	ldr	w8, [sp, #12]
  430bd0:	cmp	w8, #0x2a
  430bd4:	cset	w9, eq  // eq = none
  430bd8:	eor	w9, w9, #0x1
  430bdc:	tbnz	w9, #0, 430bf0 <rule_line_add_token+0x6ec>
  430be0:	b	430be4 <rule_line_add_token+0x6e0>
  430be4:	mov	w8, #0x1                   	// #1
  430be8:	strb	w8, [sp, #71]
  430bec:	b	430bf0 <rule_line_add_token+0x6ec>
  430bf0:	ldrb	w8, [sp, #71]
  430bf4:	and	w8, w8, #0x1
  430bf8:	strb	w8, [sp, #70]
  430bfc:	ldrb	w8, [sp, #70]
  430c00:	tbnz	w8, #0, 430c08 <rule_line_add_token+0x704>
  430c04:	b	430c24 <rule_line_add_token+0x720>
  430c08:	ldr	x8, [sp, #56]
  430c0c:	ldr	x9, [x8, #32]
  430c10:	ldr	w10, [x9, #12]
  430c14:	orr	w10, w10, #0x2
  430c18:	ldr	x9, [x8, #32]
  430c1c:	str	w10, [x9, #12]
  430c20:	b	430ce8 <rule_line_add_token+0x7e4>
  430c24:	ldr	x8, [sp, #56]
  430c28:	ldr	x9, [x8]
  430c2c:	ldr	w10, [x9]
  430c30:	lsl	w10, w10, #24
  430c34:	asr	w10, w10, #24
  430c38:	cmp	w10, #0x26
  430c3c:	b.ne	430c5c <rule_line_add_token+0x758>  // b.any
  430c40:	ldr	x8, [sp, #56]
  430c44:	ldr	x9, [x8, #32]
  430c48:	ldr	w10, [x9, #12]
  430c4c:	orr	w10, w10, #0x4
  430c50:	ldr	x9, [x8, #32]
  430c54:	str	w10, [x9, #12]
  430c58:	b	430ce8 <rule_line_add_token+0x7e4>
  430c5c:	ldr	x8, [sp, #56]
  430c60:	ldr	x9, [x8]
  430c64:	ldr	w10, [x9]
  430c68:	lsl	w10, w10, #24
  430c6c:	asr	w10, w10, #24
  430c70:	cmp	w10, #0x1a
  430c74:	b.ge	430cd0 <rule_line_add_token+0x7cc>  // b.tcont
  430c78:	mov	w8, #0x0                   	// #0
  430c7c:	strb	w8, [sp, #69]
  430c80:	ldr	x9, [sp, #56]
  430c84:	ldr	x10, [x9]
  430c88:	ldr	w8, [x10]
  430c8c:	lsl	w8, w8, #24
  430c90:	asr	w8, w8, #24
  430c94:	subs	w8, w8, #0x12
  430c98:	cmp	w8, #0x6
  430c9c:	cset	w8, ls  // ls = plast
  430ca0:	eor	w8, w8, #0x1
  430ca4:	tbnz	w8, #0, 430cb8 <rule_line_add_token+0x7b4>
  430ca8:	b	430cac <rule_line_add_token+0x7a8>
  430cac:	mov	w8, #0x1                   	// #1
  430cb0:	strb	w8, [sp, #69]
  430cb4:	b	430cb8 <rule_line_add_token+0x7b4>
  430cb8:	ldrb	w8, [sp, #69]
  430cbc:	and	w8, w8, #0x1
  430cc0:	strb	w8, [sp, #68]
  430cc4:	ldrb	w8, [sp, #68]
  430cc8:	tbnz	w8, #0, 430cd0 <rule_line_add_token+0x7cc>
  430ccc:	b	430ce8 <rule_line_add_token+0x7e4>
  430cd0:	ldr	x8, [sp, #56]
  430cd4:	ldr	x9, [x8, #32]
  430cd8:	ldr	w10, [x9, #12]
  430cdc:	orr	w10, w10, #0x20
  430ce0:	ldr	x9, [x8, #32]
  430ce4:	str	w10, [x9, #12]
  430ce8:	stur	wzr, [x29, #-4]
  430cec:	ldur	w0, [x29, #-4]
  430cf0:	ldr	x28, [sp, #272]
  430cf4:	ldp	x29, x30, [sp, #256]
  430cf8:	add	sp, sp, #0x120
  430cfc:	ret

0000000000430d00 <check_value_format_and_warn>:
  430d00:	sub	sp, sp, #0x1b0
  430d04:	stp	x29, x30, [sp, #400]
  430d08:	str	x28, [sp, #416]
  430d0c:	add	x29, sp, #0x190
  430d10:	sub	x8, x29, #0x38
  430d14:	mov	w9, #0x1                   	// #1
  430d18:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  430d1c:	add	x10, x10, #0x48a
  430d20:	add	x10, x10, #0x3
  430d24:	str	x0, [x8, #48]
  430d28:	str	x1, [x8, #40]
  430d2c:	str	x2, [x8, #32]
  430d30:	and	w9, w3, w9
  430d34:	sturb	w9, [x29, #-25]
  430d38:	ldurb	w9, [x29, #-25]
  430d3c:	str	x8, [sp, #200]
  430d40:	str	x10, [sp, #192]
  430d44:	tbnz	w9, #0, 430d4c <check_value_format_and_warn+0x4c>
  430d48:	b	430f50 <check_value_format_and_warn+0x250>
  430d4c:	ldr	x8, [sp, #200]
  430d50:	ldr	x0, [x8, #32]
  430d54:	bl	423ddc <isempty>
  430d58:	tbnz	w0, #0, 430d60 <check_value_format_and_warn+0x60>
  430d5c:	b	430f50 <check_value_format_and_warn+0x250>
  430d60:	ldr	x8, [sp, #200]
  430d64:	ldr	x9, [x8, #48]
  430d68:	str	x9, [x8]
  430d6c:	ldr	x9, [x8]
  430d70:	cbz	x9, 430d88 <check_value_format_and_warn+0x88>
  430d74:	ldr	x8, [sp, #200]
  430d78:	ldr	x9, [x8]
  430d7c:	ldr	x9, [x9, #32]
  430d80:	str	x9, [sp, #184]
  430d84:	b	430d90 <check_value_format_and_warn+0x90>
  430d88:	mov	x8, xzr
  430d8c:	str	x8, [sp, #184]
  430d90:	ldr	x8, [sp, #184]
  430d94:	stur	x8, [x29, #-64]
  430d98:	ldur	x8, [x29, #-64]
  430d9c:	cbz	x8, 430db0 <check_value_format_and_warn+0xb0>
  430da0:	ldur	x8, [x29, #-64]
  430da4:	ldr	x8, [x8, #8]
  430da8:	str	x8, [sp, #176]
  430dac:	b	430db8 <check_value_format_and_warn+0xb8>
  430db0:	mov	x8, xzr
  430db4:	str	x8, [sp, #176]
  430db8:	ldr	x8, [sp, #176]
  430dbc:	stur	x8, [x29, #-72]
  430dc0:	ldur	x8, [x29, #-64]
  430dc4:	cbz	x8, 430dd8 <check_value_format_and_warn+0xd8>
  430dc8:	ldur	x8, [x29, #-64]
  430dcc:	ldr	x8, [x8]
  430dd0:	str	x8, [sp, #168]
  430dd4:	b	430de0 <check_value_format_and_warn+0xe0>
  430dd8:	mov	x8, xzr
  430ddc:	str	x8, [sp, #168]
  430de0:	ldr	x8, [sp, #168]
  430de4:	stur	x8, [x29, #-80]
  430de8:	mov	x8, xzr
  430dec:	stur	x8, [x29, #-96]
  430df0:	stur	x8, [x29, #-104]
  430df4:	mov	w9, #0x3                   	// #3
  430df8:	stur	w9, [x29, #-108]
  430dfc:	mov	w9, #0x16                  	// #22
  430e00:	movk	w9, #0x4000, lsl #16
  430e04:	stur	w9, [x29, #-112]
  430e08:	ldur	x8, [x29, #-104]
  430e0c:	cbz	x8, 430e4c <check_value_format_and_warn+0x14c>
  430e10:	mov	w0, #0x1                   	// #1
  430e14:	bl	40a3f0 <log_get_max_level_realm@plt>
  430e18:	ldur	w8, [x29, #-108]
  430e1c:	cmp	w0, w8
  430e20:	cset	w8, ge  // ge = tcont
  430e24:	mov	w9, #0x1                   	// #1
  430e28:	eor	w8, w8, #0x1
  430e2c:	eor	w8, w8, w9
  430e30:	and	w8, w8, #0x1
  430e34:	mov	w1, w8
  430e38:	sxtw	x10, w1
  430e3c:	cbz	x10, 430e4c <check_value_format_and_warn+0x14c>
  430e40:	ldur	x0, [x29, #-104]
  430e44:	sub	x1, x29, #0x60
  430e48:	bl	40a860 <sd_device_get_sysname@plt>
  430e4c:	ldur	w0, [x29, #-108]
  430e50:	ldur	w1, [x29, #-112]
  430e54:	ldur	x8, [x29, #-96]
  430e58:	mov	x9, xzr
  430e5c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  430e60:	add	x10, x10, #0xa46
  430e64:	cmp	x8, #0x0
  430e68:	csel	x5, x10, x9, ne  // ne = any
  430e6c:	ldur	x6, [x29, #-96]
  430e70:	ldur	x8, [x29, #-80]
  430e74:	str	w0, [sp, #164]
  430e78:	mov	x0, x8
  430e7c:	str	w1, [sp, #160]
  430e80:	str	x5, [sp, #152]
  430e84:	str	x6, [sp, #144]
  430e88:	bl	424274 <strna>
  430e8c:	ldur	x8, [x29, #-72]
  430e90:	str	x0, [sp, #136]
  430e94:	cbz	x8, 430ea8 <check_value_format_and_warn+0x1a8>
  430e98:	ldur	x8, [x29, #-72]
  430e9c:	ldr	w9, [x8, #8]
  430ea0:	str	w9, [sp, #132]
  430ea4:	b	430eb0 <check_value_format_and_warn+0x1b0>
  430ea8:	mov	w8, wzr
  430eac:	str	w8, [sp, #132]
  430eb0:	ldr	w8, [sp, #132]
  430eb4:	ldr	x9, [sp, #200]
  430eb8:	ldr	x10, [x9, #32]
  430ebc:	ldr	x11, [x9, #40]
  430ec0:	ldr	w0, [sp, #164]
  430ec4:	ldr	w1, [sp, #160]
  430ec8:	ldr	x2, [sp, #192]
  430ecc:	mov	w3, #0x207                 	// #519
  430ed0:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  430ed4:	add	x4, x4, #0x188
  430ed8:	ldr	x5, [sp, #152]
  430edc:	ldr	x6, [sp, #144]
  430ee0:	mov	x12, xzr
  430ee4:	mov	x7, x12
  430ee8:	mov	x13, sp
  430eec:	str	x12, [x13]
  430ef0:	mov	x12, sp
  430ef4:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  430ef8:	add	x13, x13, #0x1a4
  430efc:	str	x13, [x12, #8]
  430f00:	mov	x12, sp
  430f04:	ldr	x13, [sp, #136]
  430f08:	str	x13, [x12, #16]
  430f0c:	mov	x12, sp
  430f10:	str	w8, [x12, #24]
  430f14:	mov	x12, sp
  430f18:	str	x10, [x12, #32]
  430f1c:	mov	x10, sp
  430f20:	str	x11, [x10, #40]
  430f24:	mov	x10, sp
  430f28:	str	xzr, [x10, #48]
  430f2c:	mov	x10, sp
  430f30:	adrp	x11, 468000 <on_inotify.__assert_in_set+0x4540>
  430f34:	add	x11, x11, #0x1f1
  430f38:	str	x11, [x10, #56]
  430f3c:	bl	40a870 <log_object_internal@plt>
  430f40:	stur	w0, [x29, #-116]
  430f44:	ldur	w8, [x29, #-116]
  430f48:	stur	w8, [x29, #-84]
  430f4c:	b	43115c <check_value_format_and_warn+0x45c>
  430f50:	ldr	x8, [sp, #200]
  430f54:	ldr	x0, [x8, #32]
  430f58:	sub	x1, x29, #0x28
  430f5c:	sub	x2, x29, #0x30
  430f60:	bl	419a64 <udev_check_format>
  430f64:	cmp	w0, #0x0
  430f68:	cset	w9, ge  // ge = tcont
  430f6c:	tbnz	w9, #0, 43115c <check_value_format_and_warn+0x45c>
  430f70:	ldr	x8, [sp, #200]
  430f74:	ldr	x9, [x8, #48]
  430f78:	stur	x9, [x29, #-128]
  430f7c:	ldur	x9, [x29, #-128]
  430f80:	cbz	x9, 430f94 <check_value_format_and_warn+0x294>
  430f84:	ldur	x8, [x29, #-128]
  430f88:	ldr	x8, [x8, #32]
  430f8c:	str	x8, [sp, #120]
  430f90:	b	430f9c <check_value_format_and_warn+0x29c>
  430f94:	mov	x8, xzr
  430f98:	str	x8, [sp, #120]
  430f9c:	ldr	x8, [sp, #120]
  430fa0:	stur	x8, [x29, #-136]
  430fa4:	ldur	x8, [x29, #-136]
  430fa8:	cbz	x8, 430fbc <check_value_format_and_warn+0x2bc>
  430fac:	ldur	x8, [x29, #-136]
  430fb0:	ldr	x8, [x8, #8]
  430fb4:	str	x8, [sp, #112]
  430fb8:	b	430fc4 <check_value_format_and_warn+0x2c4>
  430fbc:	mov	x8, xzr
  430fc0:	str	x8, [sp, #112]
  430fc4:	ldr	x8, [sp, #112]
  430fc8:	stur	x8, [x29, #-144]
  430fcc:	ldur	x8, [x29, #-136]
  430fd0:	cbz	x8, 430fe4 <check_value_format_and_warn+0x2e4>
  430fd4:	ldur	x8, [x29, #-136]
  430fd8:	ldr	x8, [x8]
  430fdc:	str	x8, [sp, #104]
  430fe0:	b	430fec <check_value_format_and_warn+0x2ec>
  430fe4:	mov	x8, xzr
  430fe8:	str	x8, [sp, #104]
  430fec:	ldr	x8, [sp, #104]
  430ff0:	stur	x8, [x29, #-152]
  430ff4:	mov	x8, xzr
  430ff8:	stur	x8, [x29, #-168]
  430ffc:	stur	x8, [x29, #-176]
  431000:	mov	w9, #0x3                   	// #3
  431004:	stur	w9, [x29, #-180]
  431008:	mov	w9, #0x16                  	// #22
  43100c:	movk	w9, #0x4000, lsl #16
  431010:	stur	w9, [x29, #-184]
  431014:	ldur	x8, [x29, #-176]
  431018:	cbz	x8, 431058 <check_value_format_and_warn+0x358>
  43101c:	mov	w0, #0x1                   	// #1
  431020:	bl	40a3f0 <log_get_max_level_realm@plt>
  431024:	ldur	w8, [x29, #-180]
  431028:	cmp	w0, w8
  43102c:	cset	w8, ge  // ge = tcont
  431030:	mov	w9, #0x1                   	// #1
  431034:	eor	w8, w8, #0x1
  431038:	eor	w8, w8, w9
  43103c:	and	w8, w8, #0x1
  431040:	mov	w1, w8
  431044:	sxtw	x10, w1
  431048:	cbz	x10, 431058 <check_value_format_and_warn+0x358>
  43104c:	ldur	x0, [x29, #-176]
  431050:	sub	x1, x29, #0xa8
  431054:	bl	40a860 <sd_device_get_sysname@plt>
  431058:	ldur	w0, [x29, #-180]
  43105c:	ldur	w1, [x29, #-184]
  431060:	ldur	x8, [x29, #-168]
  431064:	mov	x9, xzr
  431068:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43106c:	add	x10, x10, #0xa46
  431070:	cmp	x8, #0x0
  431074:	csel	x5, x10, x9, ne  // ne = any
  431078:	ldur	x6, [x29, #-168]
  43107c:	ldur	x8, [x29, #-152]
  431080:	str	w0, [sp, #100]
  431084:	mov	x0, x8
  431088:	str	w1, [sp, #96]
  43108c:	str	x5, [sp, #88]
  431090:	str	x6, [sp, #80]
  431094:	bl	424274 <strna>
  431098:	ldur	x8, [x29, #-144]
  43109c:	str	x0, [sp, #72]
  4310a0:	cbz	x8, 4310b4 <check_value_format_and_warn+0x3b4>
  4310a4:	ldur	x8, [x29, #-144]
  4310a8:	ldr	w9, [x8, #8]
  4310ac:	str	w9, [sp, #68]
  4310b0:	b	4310bc <check_value_format_and_warn+0x3bc>
  4310b4:	mov	w8, wzr
  4310b8:	str	w8, [sp, #68]
  4310bc:	ldr	w8, [sp, #68]
  4310c0:	ldr	x9, [sp, #200]
  4310c4:	ldr	x10, [x9, #32]
  4310c8:	ldr	x11, [x9, #40]
  4310cc:	ldr	x12, [x9, #16]
  4310d0:	add	x12, x12, #0x1
  4310d4:	ldr	x13, [x9, #8]
  4310d8:	ldr	w0, [sp, #100]
  4310dc:	ldr	w1, [sp, #96]
  4310e0:	ldr	x2, [sp, #192]
  4310e4:	mov	w3, #0x209                 	// #521
  4310e8:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  4310ec:	add	x4, x4, #0x188
  4310f0:	ldr	x5, [sp, #88]
  4310f4:	ldr	x6, [sp, #80]
  4310f8:	mov	x14, xzr
  4310fc:	mov	x7, x14
  431100:	mov	x15, sp
  431104:	str	x14, [x15]
  431108:	mov	x14, sp
  43110c:	adrp	x15, 468000 <on_inotify.__assert_in_set+0x4540>
  431110:	add	x15, x15, #0x1a4
  431114:	str	x15, [x14, #8]
  431118:	mov	x14, sp
  43111c:	ldr	x15, [sp, #72]
  431120:	str	x15, [x14, #16]
  431124:	mov	x14, sp
  431128:	str	w8, [x14, #24]
  43112c:	mov	x14, sp
  431130:	str	x10, [x14, #32]
  431134:	mov	x10, sp
  431138:	str	x11, [x10, #40]
  43113c:	mov	x10, sp
  431140:	str	x12, [x10, #48]
  431144:	mov	x10, sp
  431148:	str	x13, [x10, #56]
  43114c:	bl	40a870 <log_object_internal@plt>
  431150:	stur	w0, [x29, #-188]
  431154:	ldur	w8, [x29, #-188]
  431158:	stur	w8, [x29, #-156]
  43115c:	ldr	x28, [sp, #416]
  431160:	ldp	x29, x30, [sp, #400]
  431164:	add	sp, sp, #0x1b0
  431168:	ret

000000000043116c <check_attr_format_and_warn>:
  43116c:	sub	sp, sp, #0x1b0
  431170:	stp	x29, x30, [sp, #400]
  431174:	str	x28, [sp, #416]
  431178:	add	x29, sp, #0x190
  43117c:	sub	x8, x29, #0x38
  431180:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  431184:	add	x9, x9, #0x48a
  431188:	add	x9, x9, #0x3
  43118c:	str	x0, [x8, #40]
  431190:	str	x1, [x8, #32]
  431194:	str	x2, [x8, #24]
  431198:	ldr	x0, [x8, #24]
  43119c:	str	x8, [sp, #200]
  4311a0:	str	x9, [sp, #192]
  4311a4:	bl	423ddc <isempty>
  4311a8:	tbnz	w0, #0, 4311b0 <check_attr_format_and_warn+0x44>
  4311ac:	b	431394 <check_attr_format_and_warn+0x228>
  4311b0:	ldr	x8, [sp, #200]
  4311b4:	ldr	x9, [x8, #40]
  4311b8:	str	x9, [x8]
  4311bc:	ldr	x9, [x8]
  4311c0:	cbz	x9, 4311d8 <check_attr_format_and_warn+0x6c>
  4311c4:	ldr	x8, [sp, #200]
  4311c8:	ldr	x9, [x8]
  4311cc:	ldr	x9, [x9, #32]
  4311d0:	str	x9, [sp, #184]
  4311d4:	b	4311e0 <check_attr_format_and_warn+0x74>
  4311d8:	mov	x8, xzr
  4311dc:	str	x8, [sp, #184]
  4311e0:	ldr	x8, [sp, #184]
  4311e4:	stur	x8, [x29, #-64]
  4311e8:	ldur	x8, [x29, #-64]
  4311ec:	cbz	x8, 431200 <check_attr_format_and_warn+0x94>
  4311f0:	ldur	x8, [x29, #-64]
  4311f4:	ldr	x8, [x8, #8]
  4311f8:	str	x8, [sp, #176]
  4311fc:	b	431208 <check_attr_format_and_warn+0x9c>
  431200:	mov	x8, xzr
  431204:	str	x8, [sp, #176]
  431208:	ldr	x8, [sp, #176]
  43120c:	stur	x8, [x29, #-72]
  431210:	ldur	x8, [x29, #-64]
  431214:	cbz	x8, 431228 <check_attr_format_and_warn+0xbc>
  431218:	ldur	x8, [x29, #-64]
  43121c:	ldr	x8, [x8]
  431220:	str	x8, [sp, #168]
  431224:	b	431230 <check_attr_format_and_warn+0xc4>
  431228:	mov	x8, xzr
  43122c:	str	x8, [sp, #168]
  431230:	ldr	x8, [sp, #168]
  431234:	stur	x8, [x29, #-80]
  431238:	mov	x8, xzr
  43123c:	stur	x8, [x29, #-96]
  431240:	stur	x8, [x29, #-104]
  431244:	mov	w9, #0x3                   	// #3
  431248:	stur	w9, [x29, #-108]
  43124c:	mov	w9, #0x16                  	// #22
  431250:	movk	w9, #0x4000, lsl #16
  431254:	stur	w9, [x29, #-112]
  431258:	ldur	x8, [x29, #-104]
  43125c:	cbz	x8, 43129c <check_attr_format_and_warn+0x130>
  431260:	mov	w0, #0x1                   	// #1
  431264:	bl	40a3f0 <log_get_max_level_realm@plt>
  431268:	ldur	w8, [x29, #-108]
  43126c:	cmp	w0, w8
  431270:	cset	w8, ge  // ge = tcont
  431274:	mov	w9, #0x1                   	// #1
  431278:	eor	w8, w8, #0x1
  43127c:	eor	w8, w8, w9
  431280:	and	w8, w8, #0x1
  431284:	mov	w1, w8
  431288:	sxtw	x10, w1
  43128c:	cbz	x10, 43129c <check_attr_format_and_warn+0x130>
  431290:	ldur	x0, [x29, #-104]
  431294:	sub	x1, x29, #0x60
  431298:	bl	40a860 <sd_device_get_sysname@plt>
  43129c:	ldur	w0, [x29, #-108]
  4312a0:	ldur	w1, [x29, #-112]
  4312a4:	ldur	x8, [x29, #-96]
  4312a8:	mov	x9, xzr
  4312ac:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4312b0:	add	x10, x10, #0xa46
  4312b4:	cmp	x8, #0x0
  4312b8:	csel	x5, x10, x9, ne  // ne = any
  4312bc:	ldur	x6, [x29, #-96]
  4312c0:	ldur	x8, [x29, #-80]
  4312c4:	str	w0, [sp, #164]
  4312c8:	mov	x0, x8
  4312cc:	str	w1, [sp, #160]
  4312d0:	str	x5, [sp, #152]
  4312d4:	str	x6, [sp, #144]
  4312d8:	bl	424274 <strna>
  4312dc:	ldur	x8, [x29, #-72]
  4312e0:	str	x0, [sp, #136]
  4312e4:	cbz	x8, 4312f8 <check_attr_format_and_warn+0x18c>
  4312e8:	ldur	x8, [x29, #-72]
  4312ec:	ldr	w9, [x8, #8]
  4312f0:	str	w9, [sp, #132]
  4312f4:	b	431300 <check_attr_format_and_warn+0x194>
  4312f8:	mov	w8, wzr
  4312fc:	str	w8, [sp, #132]
  431300:	ldr	w8, [sp, #132]
  431304:	ldr	x9, [sp, #200]
  431308:	ldr	x10, [x9, #32]
  43130c:	ldr	w0, [sp, #164]
  431310:	ldr	w1, [sp, #160]
  431314:	ldr	x2, [sp, #192]
  431318:	mov	w3, #0x211                 	// #529
  43131c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  431320:	add	x4, x4, #0x1fd
  431324:	ldr	x5, [sp, #152]
  431328:	ldr	x6, [sp, #144]
  43132c:	mov	x11, xzr
  431330:	mov	x7, x11
  431334:	mov	x12, sp
  431338:	str	x11, [x12]
  43133c:	mov	x11, sp
  431340:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  431344:	add	x12, x12, #0x8ec
  431348:	str	x12, [x11, #8]
  43134c:	mov	x11, sp
  431350:	ldr	x12, [sp, #136]
  431354:	str	x12, [x11, #16]
  431358:	mov	x11, sp
  43135c:	str	w8, [x11, #24]
  431360:	mov	x11, sp
  431364:	adrp	x13, 467000 <on_inotify.__assert_in_set+0x3540>
  431368:	add	x13, x13, #0x905
  43136c:	str	x13, [x11, #32]
  431370:	mov	x11, sp
  431374:	str	x10, [x11, #40]
  431378:	bl	40a870 <log_object_internal@plt>
  43137c:	stur	w0, [x29, #-116]
  431380:	ldur	w8, [x29, #-116]
  431384:	stur	w8, [x29, #-84]
  431388:	ldur	w8, [x29, #-84]
  43138c:	stur	w8, [x29, #-4]
  431390:	b	4315a4 <check_attr_format_and_warn+0x438>
  431394:	ldr	x8, [sp, #200]
  431398:	ldr	x0, [x8, #24]
  43139c:	sub	x1, x29, #0x28
  4313a0:	sub	x2, x29, #0x30
  4313a4:	bl	419a64 <udev_check_format>
  4313a8:	cmp	w0, #0x0
  4313ac:	cset	w9, ge  // ge = tcont
  4313b0:	tbnz	w9, #0, 4315a0 <check_attr_format_and_warn+0x434>
  4313b4:	ldr	x8, [sp, #200]
  4313b8:	ldr	x9, [x8, #40]
  4313bc:	stur	x9, [x29, #-128]
  4313c0:	ldur	x9, [x29, #-128]
  4313c4:	cbz	x9, 4313d8 <check_attr_format_and_warn+0x26c>
  4313c8:	ldur	x8, [x29, #-128]
  4313cc:	ldr	x8, [x8, #32]
  4313d0:	str	x8, [sp, #120]
  4313d4:	b	4313e0 <check_attr_format_and_warn+0x274>
  4313d8:	mov	x8, xzr
  4313dc:	str	x8, [sp, #120]
  4313e0:	ldr	x8, [sp, #120]
  4313e4:	stur	x8, [x29, #-136]
  4313e8:	ldur	x8, [x29, #-136]
  4313ec:	cbz	x8, 431400 <check_attr_format_and_warn+0x294>
  4313f0:	ldur	x8, [x29, #-136]
  4313f4:	ldr	x8, [x8, #8]
  4313f8:	str	x8, [sp, #112]
  4313fc:	b	431408 <check_attr_format_and_warn+0x29c>
  431400:	mov	x8, xzr
  431404:	str	x8, [sp, #112]
  431408:	ldr	x8, [sp, #112]
  43140c:	stur	x8, [x29, #-144]
  431410:	ldur	x8, [x29, #-136]
  431414:	cbz	x8, 431428 <check_attr_format_and_warn+0x2bc>
  431418:	ldur	x8, [x29, #-136]
  43141c:	ldr	x8, [x8]
  431420:	str	x8, [sp, #104]
  431424:	b	431430 <check_attr_format_and_warn+0x2c4>
  431428:	mov	x8, xzr
  43142c:	str	x8, [sp, #104]
  431430:	ldr	x8, [sp, #104]
  431434:	stur	x8, [x29, #-152]
  431438:	mov	x8, xzr
  43143c:	stur	x8, [x29, #-168]
  431440:	stur	x8, [x29, #-176]
  431444:	mov	w9, #0x3                   	// #3
  431448:	stur	w9, [x29, #-180]
  43144c:	mov	w9, #0x16                  	// #22
  431450:	movk	w9, #0x4000, lsl #16
  431454:	stur	w9, [x29, #-184]
  431458:	ldur	x8, [x29, #-176]
  43145c:	cbz	x8, 43149c <check_attr_format_and_warn+0x330>
  431460:	mov	w0, #0x1                   	// #1
  431464:	bl	40a3f0 <log_get_max_level_realm@plt>
  431468:	ldur	w8, [x29, #-180]
  43146c:	cmp	w0, w8
  431470:	cset	w8, ge  // ge = tcont
  431474:	mov	w9, #0x1                   	// #1
  431478:	eor	w8, w8, #0x1
  43147c:	eor	w8, w8, w9
  431480:	and	w8, w8, #0x1
  431484:	mov	w1, w8
  431488:	sxtw	x10, w1
  43148c:	cbz	x10, 43149c <check_attr_format_and_warn+0x330>
  431490:	ldur	x0, [x29, #-176]
  431494:	sub	x1, x29, #0xa8
  431498:	bl	40a860 <sd_device_get_sysname@plt>
  43149c:	ldur	w0, [x29, #-180]
  4314a0:	ldur	w1, [x29, #-184]
  4314a4:	ldur	x8, [x29, #-168]
  4314a8:	mov	x9, xzr
  4314ac:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4314b0:	add	x10, x10, #0xa46
  4314b4:	cmp	x8, #0x0
  4314b8:	csel	x5, x10, x9, ne  // ne = any
  4314bc:	ldur	x6, [x29, #-168]
  4314c0:	ldur	x8, [x29, #-152]
  4314c4:	str	w0, [sp, #100]
  4314c8:	mov	x0, x8
  4314cc:	str	w1, [sp, #96]
  4314d0:	str	x5, [sp, #88]
  4314d4:	str	x6, [sp, #80]
  4314d8:	bl	424274 <strna>
  4314dc:	ldur	x8, [x29, #-144]
  4314e0:	str	x0, [sp, #72]
  4314e4:	cbz	x8, 4314f8 <check_attr_format_and_warn+0x38c>
  4314e8:	ldur	x8, [x29, #-144]
  4314ec:	ldr	w9, [x8, #8]
  4314f0:	str	w9, [sp, #68]
  4314f4:	b	431500 <check_attr_format_and_warn+0x394>
  4314f8:	mov	w8, wzr
  4314fc:	str	w8, [sp, #68]
  431500:	ldr	w8, [sp, #68]
  431504:	ldr	x9, [sp, #200]
  431508:	ldr	x10, [x9, #24]
  43150c:	ldr	x11, [x9, #32]
  431510:	ldr	x12, [x9, #16]
  431514:	add	x12, x12, #0x1
  431518:	ldr	x13, [x9, #8]
  43151c:	ldr	w0, [sp, #100]
  431520:	ldr	w1, [sp, #96]
  431524:	ldr	x2, [sp, #192]
  431528:	mov	w3, #0x213                 	// #531
  43152c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  431530:	add	x4, x4, #0x1fd
  431534:	ldr	x5, [sp, #88]
  431538:	ldr	x6, [sp, #80]
  43153c:	mov	x14, xzr
  431540:	mov	x7, x14
  431544:	mov	x15, sp
  431548:	str	x14, [x15]
  43154c:	mov	x14, sp
  431550:	adrp	x15, 468000 <on_inotify.__assert_in_set+0x4540>
  431554:	add	x15, x15, #0x218
  431558:	str	x15, [x14, #8]
  43155c:	mov	x14, sp
  431560:	ldr	x15, [sp, #72]
  431564:	str	x15, [x14, #16]
  431568:	mov	x14, sp
  43156c:	str	w8, [x14, #24]
  431570:	mov	x14, sp
  431574:	str	x10, [x14, #32]
  431578:	mov	x10, sp
  43157c:	str	x11, [x10, #40]
  431580:	mov	x10, sp
  431584:	str	x12, [x10, #48]
  431588:	mov	x10, sp
  43158c:	str	x13, [x10, #56]
  431590:	bl	40a870 <log_object_internal@plt>
  431594:	stur	w0, [x29, #-188]
  431598:	ldur	w8, [x29, #-188]
  43159c:	stur	w8, [x29, #-156]
  4315a0:	stur	wzr, [x29, #-4]
  4315a4:	ldur	w0, [x29, #-4]
  4315a8:	ldr	x28, [sp, #416]
  4315ac:	ldp	x29, x30, [sp, #400]
  4315b0:	add	sp, sp, #0x1b0
  4315b4:	ret

00000000004315b8 <rule_get_substitution_type>:
  4315b8:	sub	sp, sp, #0x30
  4315bc:	stp	x29, x30, [sp, #32]
  4315c0:	add	x29, sp, #0x20
  4315c4:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  4315c8:	add	x8, x8, #0x48a
  4315cc:	add	x2, x8, #0x3
  4315d0:	str	x0, [sp, #16]
  4315d4:	str	x2, [sp, #8]
  4315d8:	ldr	x8, [sp, #16]
  4315dc:	cmp	x8, #0x0
  4315e0:	cset	w9, ne  // ne = any
  4315e4:	mov	w10, #0x1                   	// #1
  4315e8:	eor	w9, w9, #0x1
  4315ec:	eor	w9, w9, w10
  4315f0:	eor	w9, w9, w10
  4315f4:	and	w9, w9, #0x1
  4315f8:	mov	w0, w9
  4315fc:	sxtw	x8, w0
  431600:	cbz	x8, 431624 <rule_get_substitution_type+0x6c>
  431604:	mov	w0, #0x1                   	// #1
  431608:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  43160c:	add	x1, x1, #0x4e0
  431610:	ldr	x2, [sp, #8]
  431614:	mov	w3, #0x184                 	// #388
  431618:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43161c:	add	x4, x4, #0x269
  431620:	bl	40a540 <log_assert_failed_realm@plt>
  431624:	ldr	x8, [sp, #16]
  431628:	ldrb	w9, [x8]
  43162c:	cmp	w9, #0x5b
  431630:	b.ne	431640 <rule_get_substitution_type+0x88>  // b.any
  431634:	mov	w8, #0x2                   	// #2
  431638:	stur	w8, [x29, #-4]
  43163c:	b	431670 <rule_get_substitution_type+0xb8>
  431640:	ldr	x0, [sp, #16]
  431644:	mov	w1, #0x25                  	// #37
  431648:	bl	40a8c0 <strchr@plt>
  43164c:	cbnz	x0, 431660 <rule_get_substitution_type+0xa8>
  431650:	ldr	x0, [sp, #16]
  431654:	mov	w1, #0x24                  	// #36
  431658:	bl	40a8c0 <strchr@plt>
  43165c:	cbz	x0, 43166c <rule_get_substitution_type+0xb4>
  431660:	mov	w8, #0x1                   	// #1
  431664:	stur	w8, [x29, #-4]
  431668:	b	431670 <rule_get_substitution_type+0xb8>
  43166c:	stur	wzr, [x29, #-4]
  431670:	ldur	w0, [x29, #-4]
  431674:	ldp	x29, x30, [sp, #32]
  431678:	add	sp, sp, #0x30
  43167c:	ret

0000000000431680 <rule_resolve_user>:
  431680:	sub	sp, sp, #0x70
  431684:	stp	x29, x30, [sp, #96]
  431688:	add	x29, sp, #0x60
  43168c:	mov	x8, xzr
  431690:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  431694:	add	x9, x9, #0x48a
  431698:	add	x9, x9, #0x3
  43169c:	stur	x0, [x29, #-16]
  4316a0:	stur	x1, [x29, #-24]
  4316a4:	stur	x2, [x29, #-32]
  4316a8:	stur	x8, [x29, #-40]
  4316ac:	str	x9, [sp, #8]
  4316b0:	ldur	x8, [x29, #-16]
  4316b4:	cmp	x8, #0x0
  4316b8:	cset	w9, ne  // ne = any
  4316bc:	mov	w10, #0x1                   	// #1
  4316c0:	eor	w9, w9, #0x1
  4316c4:	eor	w9, w9, w10
  4316c8:	eor	w9, w9, w10
  4316cc:	and	w9, w9, #0x1
  4316d0:	mov	w0, w9
  4316d4:	sxtw	x8, w0
  4316d8:	cbz	x8, 4316fc <rule_resolve_user+0x7c>
  4316dc:	mov	w0, #0x1                   	// #1
  4316e0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4316e4:	add	x1, x1, #0x333
  4316e8:	ldr	x2, [sp, #8]
  4316ec:	mov	w3, #0x13b                 	// #315
  4316f0:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  4316f4:	add	x4, x4, #0x2a9
  4316f8:	bl	40a540 <log_assert_failed_realm@plt>
  4316fc:	ldur	x8, [x29, #-24]
  431700:	cmp	x8, #0x0
  431704:	cset	w9, ne  // ne = any
  431708:	mov	w10, #0x1                   	// #1
  43170c:	eor	w9, w9, #0x1
  431710:	eor	w9, w9, w10
  431714:	eor	w9, w9, w10
  431718:	and	w9, w9, #0x1
  43171c:	mov	w0, w9
  431720:	sxtw	x8, w0
  431724:	cbz	x8, 431748 <rule_resolve_user+0xc8>
  431728:	mov	w0, #0x1                   	// #1
  43172c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  431730:	add	x1, x1, #0x5a0
  431734:	ldr	x2, [sp, #8]
  431738:	mov	w3, #0x13c                 	// #316
  43173c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  431740:	add	x4, x4, #0x2a9
  431744:	bl	40a540 <log_assert_failed_realm@plt>
  431748:	ldur	x8, [x29, #-16]
  43174c:	ldr	x0, [x8, #16]
  431750:	ldur	x1, [x29, #-24]
  431754:	bl	431f00 <hashmap_get>
  431758:	str	x0, [sp, #40]
  43175c:	ldr	x8, [sp, #40]
  431760:	cbz	x8, 431784 <rule_resolve_user+0x104>
  431764:	ldr	x8, [sp, #40]
  431768:	subs	x8, x8, #0x1
  43176c:	ldur	x9, [x29, #-32]
  431770:	str	w8, [x9]
  431774:	stur	wzr, [x29, #-4]
  431778:	mov	w8, #0x1                   	// #1
  43177c:	str	w8, [sp, #32]
  431780:	b	4318d0 <rule_resolve_user+0x250>
  431784:	sub	x0, x29, #0x18
  431788:	sub	x1, x29, #0x2c
  43178c:	mov	x8, xzr
  431790:	mov	x2, x8
  431794:	mov	x3, x8
  431798:	mov	x4, x8
  43179c:	mov	w5, #0x2                   	// #2
  4317a0:	bl	40b340 <get_user_creds@plt>
  4317a4:	str	w0, [sp, #36]
  4317a8:	ldr	w9, [sp, #36]
  4317ac:	cmp	w9, #0x0
  4317b0:	cset	w9, ge  // ge = tcont
  4317b4:	tbnz	w9, #0, 4317f4 <rule_resolve_user+0x174>
  4317b8:	ldur	x1, [x29, #-16]
  4317bc:	ldr	w2, [sp, #36]
  4317c0:	ldur	x4, [x29, #-24]
  4317c4:	mov	x8, xzr
  4317c8:	mov	x0, x8
  4317cc:	adrp	x3, 468000 <on_inotify.__assert_in_set+0x4540>
  4317d0:	add	x3, x3, #0x2e3
  4317d4:	bl	431f2c <log_unknown_owner>
  4317d8:	ldur	x8, [x29, #-32]
  4317dc:	mov	w9, #0xffffffff            	// #-1
  4317e0:	str	w9, [x8]
  4317e4:	stur	wzr, [x29, #-4]
  4317e8:	mov	w9, #0x1                   	// #1
  4317ec:	str	w9, [sp, #32]
  4317f0:	b	4318d0 <rule_resolve_user+0x250>
  4317f4:	ldur	x0, [x29, #-24]
  4317f8:	bl	40a910 <strdup@plt>
  4317fc:	stur	x0, [x29, #-40]
  431800:	ldur	x8, [x29, #-40]
  431804:	cbnz	x8, 43181c <rule_resolve_user+0x19c>
  431808:	mov	w8, #0xfffffff4            	// #-12
  43180c:	stur	w8, [x29, #-4]
  431810:	mov	w8, #0x1                   	// #1
  431814:	str	w8, [sp, #32]
  431818:	b	4318d0 <rule_resolve_user+0x250>
  43181c:	ldur	x8, [x29, #-16]
  431820:	add	x0, x8, #0x10
  431824:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  431828:	ldr	x1, [x1, #184]
  43182c:	bl	40a8f0 <internal_hashmap_ensure_allocated@plt>
  431830:	str	w0, [sp, #36]
  431834:	ldr	w9, [sp, #36]
  431838:	cmp	w9, #0x0
  43183c:	cset	w9, ge  // ge = tcont
  431840:	tbnz	w9, #0, 431858 <rule_resolve_user+0x1d8>
  431844:	ldr	w8, [sp, #36]
  431848:	stur	w8, [x29, #-4]
  43184c:	mov	w8, #0x1                   	// #1
  431850:	str	w8, [sp, #32]
  431854:	b	4318d0 <rule_resolve_user+0x250>
  431858:	ldur	x8, [x29, #-16]
  43185c:	ldr	x0, [x8, #16]
  431860:	ldur	x1, [x29, #-40]
  431864:	ldur	w9, [x29, #-44]
  431868:	mov	w8, w9
  43186c:	add	x8, x8, #0x1
  431870:	mov	x2, x8
  431874:	bl	40a900 <hashmap_put@plt>
  431878:	str	w0, [sp, #36]
  43187c:	ldr	w9, [sp, #36]
  431880:	cmp	w9, #0x0
  431884:	cset	w9, ge  // ge = tcont
  431888:	tbnz	w9, #0, 4318a0 <rule_resolve_user+0x220>
  43188c:	ldr	w8, [sp, #36]
  431890:	stur	w8, [x29, #-4]
  431894:	mov	w8, #0x1                   	// #1
  431898:	str	w8, [sp, #32]
  43189c:	b	4318d0 <rule_resolve_user+0x250>
  4318a0:	ldur	x8, [x29, #-40]
  4318a4:	str	x8, [sp, #24]
  4318a8:	mov	x8, xzr
  4318ac:	stur	x8, [x29, #-40]
  4318b0:	ldr	x8, [sp, #24]
  4318b4:	str	x8, [sp, #16]
  4318b8:	ldur	w9, [x29, #-44]
  4318bc:	ldur	x8, [x29, #-32]
  4318c0:	str	w9, [x8]
  4318c4:	stur	wzr, [x29, #-4]
  4318c8:	mov	w9, #0x1                   	// #1
  4318cc:	str	w9, [sp, #32]
  4318d0:	sub	x0, x29, #0x28
  4318d4:	bl	4230c8 <freep>
  4318d8:	ldur	w0, [x29, #-4]
  4318dc:	ldp	x29, x30, [sp, #96]
  4318e0:	add	sp, sp, #0x70
  4318e4:	ret

00000000004318e8 <parse_gid>:
  4318e8:	sub	sp, sp, #0x20
  4318ec:	stp	x29, x30, [sp, #16]
  4318f0:	add	x29, sp, #0x10
  4318f4:	str	x0, [sp, #8]
  4318f8:	str	x1, [sp]
  4318fc:	ldr	x0, [sp, #8]
  431900:	ldr	x1, [sp]
  431904:	bl	40b320 <parse_uid@plt>
  431908:	ldp	x29, x30, [sp, #16]
  43190c:	add	sp, sp, #0x20
  431910:	ret

0000000000431914 <rule_resolve_group>:
  431914:	sub	sp, sp, #0x70
  431918:	stp	x29, x30, [sp, #96]
  43191c:	add	x29, sp, #0x60
  431920:	mov	x8, xzr
  431924:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  431928:	add	x9, x9, #0x48a
  43192c:	add	x9, x9, #0x3
  431930:	stur	x0, [x29, #-16]
  431934:	stur	x1, [x29, #-24]
  431938:	stur	x2, [x29, #-32]
  43193c:	stur	x8, [x29, #-40]
  431940:	str	x9, [sp, #8]
  431944:	ldur	x8, [x29, #-16]
  431948:	cmp	x8, #0x0
  43194c:	cset	w9, ne  // ne = any
  431950:	mov	w10, #0x1                   	// #1
  431954:	eor	w9, w9, #0x1
  431958:	eor	w9, w9, w10
  43195c:	eor	w9, w9, w10
  431960:	and	w9, w9, #0x1
  431964:	mov	w0, w9
  431968:	sxtw	x8, w0
  43196c:	cbz	x8, 431990 <rule_resolve_group+0x7c>
  431970:	mov	w0, #0x1                   	// #1
  431974:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  431978:	add	x1, x1, #0x333
  43197c:	ldr	x2, [sp, #8]
  431980:	mov	w3, #0x162                 	// #354
  431984:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  431988:	add	x4, x4, #0x348
  43198c:	bl	40a540 <log_assert_failed_realm@plt>
  431990:	ldur	x8, [x29, #-24]
  431994:	cmp	x8, #0x0
  431998:	cset	w9, ne  // ne = any
  43199c:	mov	w10, #0x1                   	// #1
  4319a0:	eor	w9, w9, #0x1
  4319a4:	eor	w9, w9, w10
  4319a8:	eor	w9, w9, w10
  4319ac:	and	w9, w9, #0x1
  4319b0:	mov	w0, w9
  4319b4:	sxtw	x8, w0
  4319b8:	cbz	x8, 4319dc <rule_resolve_group+0xc8>
  4319bc:	mov	w0, #0x1                   	// #1
  4319c0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4319c4:	add	x1, x1, #0x5a0
  4319c8:	ldr	x2, [sp, #8]
  4319cc:	mov	w3, #0x163                 	// #355
  4319d0:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  4319d4:	add	x4, x4, #0x348
  4319d8:	bl	40a540 <log_assert_failed_realm@plt>
  4319dc:	ldur	x8, [x29, #-16]
  4319e0:	ldr	x0, [x8, #24]
  4319e4:	ldur	x1, [x29, #-24]
  4319e8:	bl	431f00 <hashmap_get>
  4319ec:	str	x0, [sp, #40]
  4319f0:	ldr	x8, [sp, #40]
  4319f4:	cbz	x8, 431a18 <rule_resolve_group+0x104>
  4319f8:	ldr	x8, [sp, #40]
  4319fc:	subs	x8, x8, #0x1
  431a00:	ldur	x9, [x29, #-32]
  431a04:	str	w8, [x9]
  431a08:	stur	wzr, [x29, #-4]
  431a0c:	mov	w8, #0x1                   	// #1
  431a10:	str	w8, [sp, #32]
  431a14:	b	431b54 <rule_resolve_group+0x240>
  431a18:	sub	x0, x29, #0x18
  431a1c:	sub	x1, x29, #0x2c
  431a20:	mov	w2, #0x2                   	// #2
  431a24:	bl	40b350 <get_group_creds@plt>
  431a28:	str	w0, [sp, #36]
  431a2c:	ldr	w8, [sp, #36]
  431a30:	cmp	w8, #0x0
  431a34:	cset	w8, ge  // ge = tcont
  431a38:	tbnz	w8, #0, 431a78 <rule_resolve_group+0x164>
  431a3c:	ldur	x1, [x29, #-16]
  431a40:	ldr	w2, [sp, #36]
  431a44:	ldur	x4, [x29, #-24]
  431a48:	mov	x8, xzr
  431a4c:	mov	x0, x8
  431a50:	adrp	x3, 468000 <on_inotify.__assert_in_set+0x4540>
  431a54:	add	x3, x3, #0x383
  431a58:	bl	431f2c <log_unknown_owner>
  431a5c:	ldur	x8, [x29, #-32]
  431a60:	mov	w9, #0xffffffff            	// #-1
  431a64:	str	w9, [x8]
  431a68:	stur	wzr, [x29, #-4]
  431a6c:	mov	w9, #0x1                   	// #1
  431a70:	str	w9, [sp, #32]
  431a74:	b	431b54 <rule_resolve_group+0x240>
  431a78:	ldur	x0, [x29, #-24]
  431a7c:	bl	40a910 <strdup@plt>
  431a80:	stur	x0, [x29, #-40]
  431a84:	ldur	x8, [x29, #-40]
  431a88:	cbnz	x8, 431aa0 <rule_resolve_group+0x18c>
  431a8c:	mov	w8, #0xfffffff4            	// #-12
  431a90:	stur	w8, [x29, #-4]
  431a94:	mov	w8, #0x1                   	// #1
  431a98:	str	w8, [sp, #32]
  431a9c:	b	431b54 <rule_resolve_group+0x240>
  431aa0:	ldur	x8, [x29, #-16]
  431aa4:	add	x0, x8, #0x18
  431aa8:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  431aac:	ldr	x1, [x1, #184]
  431ab0:	bl	40a8f0 <internal_hashmap_ensure_allocated@plt>
  431ab4:	str	w0, [sp, #36]
  431ab8:	ldr	w9, [sp, #36]
  431abc:	cmp	w9, #0x0
  431ac0:	cset	w9, ge  // ge = tcont
  431ac4:	tbnz	w9, #0, 431adc <rule_resolve_group+0x1c8>
  431ac8:	ldr	w8, [sp, #36]
  431acc:	stur	w8, [x29, #-4]
  431ad0:	mov	w8, #0x1                   	// #1
  431ad4:	str	w8, [sp, #32]
  431ad8:	b	431b54 <rule_resolve_group+0x240>
  431adc:	ldur	x8, [x29, #-16]
  431ae0:	ldr	x0, [x8, #24]
  431ae4:	ldur	x1, [x29, #-40]
  431ae8:	ldur	w9, [x29, #-44]
  431aec:	mov	w8, w9
  431af0:	add	x8, x8, #0x1
  431af4:	mov	x2, x8
  431af8:	bl	40a900 <hashmap_put@plt>
  431afc:	str	w0, [sp, #36]
  431b00:	ldr	w9, [sp, #36]
  431b04:	cmp	w9, #0x0
  431b08:	cset	w9, ge  // ge = tcont
  431b0c:	tbnz	w9, #0, 431b24 <rule_resolve_group+0x210>
  431b10:	ldr	w8, [sp, #36]
  431b14:	stur	w8, [x29, #-4]
  431b18:	mov	w8, #0x1                   	// #1
  431b1c:	str	w8, [sp, #32]
  431b20:	b	431b54 <rule_resolve_group+0x240>
  431b24:	ldur	x8, [x29, #-40]
  431b28:	str	x8, [sp, #24]
  431b2c:	mov	x8, xzr
  431b30:	stur	x8, [x29, #-40]
  431b34:	ldr	x8, [sp, #24]
  431b38:	str	x8, [sp, #16]
  431b3c:	ldur	w9, [x29, #-44]
  431b40:	ldur	x8, [x29, #-32]
  431b44:	str	w9, [x8]
  431b48:	stur	wzr, [x29, #-4]
  431b4c:	mov	w9, #0x1                   	// #1
  431b50:	str	w9, [sp, #32]
  431b54:	sub	x0, x29, #0x28
  431b58:	bl	4230c8 <freep>
  431b5c:	ldur	w0, [x29, #-4]
  431b60:	ldp	x29, x30, [sp, #96]
  431b64:	add	sp, sp, #0x70
  431b68:	ret

0000000000431b6c <string_is_glob>:
  431b6c:	sub	sp, sp, #0x20
  431b70:	stp	x29, x30, [sp, #16]
  431b74:	add	x29, sp, #0x10
  431b78:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  431b7c:	add	x1, x1, #0x141
  431b80:	str	x0, [sp, #8]
  431b84:	ldr	x0, [sp, #8]
  431b88:	bl	40b360 <strpbrk@plt>
  431b8c:	cmp	x0, #0x0
  431b90:	cset	w8, ne  // ne = any
  431b94:	mov	w9, #0x1                   	// #1
  431b98:	eor	w8, w8, #0x1
  431b9c:	eor	w8, w8, w9
  431ba0:	and	w0, w8, #0x1
  431ba4:	ldp	x29, x30, [sp, #16]
  431ba8:	add	sp, sp, #0x20
  431bac:	ret

0000000000431bb0 <rule_line_append_token>:
  431bb0:	sub	sp, sp, #0x90
  431bb4:	stp	x29, x30, [sp, #128]
  431bb8:	add	x29, sp, #0x80
  431bbc:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  431bc0:	add	x8, x8, #0x48a
  431bc4:	add	x8, x8, #0x3
  431bc8:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  431bcc:	add	x9, x9, #0x145
  431bd0:	stur	x0, [x29, #-8]
  431bd4:	stur	x1, [x29, #-16]
  431bd8:	str	x8, [sp, #8]
  431bdc:	str	x9, [sp]
  431be0:	ldur	x8, [x29, #-8]
  431be4:	cmp	x8, #0x0
  431be8:	cset	w9, ne  // ne = any
  431bec:	mov	w10, #0x1                   	// #1
  431bf0:	eor	w9, w9, #0x1
  431bf4:	eor	w9, w9, w10
  431bf8:	eor	w9, w9, w10
  431bfc:	and	w9, w9, #0x1
  431c00:	mov	w0, w9
  431c04:	sxtw	x8, w0
  431c08:	cbz	x8, 431c28 <rule_line_append_token+0x78>
  431c0c:	mov	w0, #0x1                   	// #1
  431c10:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  431c14:	add	x1, x1, #0x620
  431c18:	ldr	x2, [sp, #8]
  431c1c:	mov	w3, #0x18e                 	// #398
  431c20:	ldr	x4, [sp]
  431c24:	bl	40a540 <log_assert_failed_realm@plt>
  431c28:	ldur	x8, [x29, #-16]
  431c2c:	cmp	x8, #0x0
  431c30:	cset	w9, ne  // ne = any
  431c34:	mov	w10, #0x1                   	// #1
  431c38:	eor	w9, w9, #0x1
  431c3c:	eor	w9, w9, w10
  431c40:	eor	w9, w9, w10
  431c44:	and	w9, w9, #0x1
  431c48:	mov	w0, w9
  431c4c:	sxtw	x8, w0
  431c50:	cbz	x8, 431c70 <rule_line_append_token+0xc0>
  431c54:	mov	w0, #0x1                   	// #1
  431c58:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  431c5c:	add	x1, x1, #0x182
  431c60:	ldr	x2, [sp, #8]
  431c64:	mov	w3, #0x18f                 	// #399
  431c68:	ldr	x4, [sp]
  431c6c:	bl	40a540 <log_assert_failed_realm@plt>
  431c70:	ldur	x8, [x29, #-8]
  431c74:	ldr	x8, [x8, #48]
  431c78:	cbz	x8, 431db4 <rule_line_append_token+0x204>
  431c7c:	ldur	x8, [x29, #-8]
  431c80:	add	x8, x8, #0x30
  431c84:	stur	x8, [x29, #-24]
  431c88:	ldur	x8, [x29, #-24]
  431c8c:	ldr	x8, [x8]
  431c90:	stur	x8, [x29, #-40]
  431c94:	ldur	x8, [x29, #-40]
  431c98:	cbnz	x8, 431ca8 <rule_line_append_token+0xf8>
  431c9c:	mov	x8, xzr
  431ca0:	stur	x8, [x29, #-32]
  431ca4:	b	431ccc <rule_line_append_token+0x11c>
  431ca8:	ldur	x8, [x29, #-40]
  431cac:	ldr	x8, [x8, #24]
  431cb0:	cbz	x8, 431cc4 <rule_line_append_token+0x114>
  431cb4:	ldur	x8, [x29, #-40]
  431cb8:	ldr	x8, [x8, #24]
  431cbc:	stur	x8, [x29, #-40]
  431cc0:	b	431ca8 <rule_line_append_token+0xf8>
  431cc4:	ldur	x8, [x29, #-40]
  431cc8:	stur	x8, [x29, #-32]
  431ccc:	ldur	x8, [x29, #-24]
  431cd0:	stur	x8, [x29, #-48]
  431cd4:	ldur	x8, [x29, #-32]
  431cd8:	stur	x8, [x29, #-56]
  431cdc:	ldur	x8, [x29, #-16]
  431ce0:	str	x8, [sp, #64]
  431ce4:	ldr	x8, [sp, #64]
  431ce8:	cmp	x8, #0x0
  431cec:	cset	w9, ne  // ne = any
  431cf0:	mov	w10, #0x1                   	// #1
  431cf4:	eor	w9, w9, #0x1
  431cf8:	eor	w9, w9, w10
  431cfc:	eor	w9, w9, w10
  431d00:	and	w9, w9, #0x1
  431d04:	mov	w0, w9
  431d08:	sxtw	x8, w0
  431d0c:	cbz	x8, 431d2c <rule_line_append_token+0x17c>
  431d10:	mov	w0, #0x1                   	// #1
  431d14:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  431d18:	add	x1, x1, #0x876
  431d1c:	ldr	x2, [sp, #8]
  431d20:	mov	w3, #0x192                 	// #402
  431d24:	ldr	x4, [sp]
  431d28:	bl	40a540 <log_assert_failed_realm@plt>
  431d2c:	ldur	x8, [x29, #-56]
  431d30:	cbnz	x8, 431d74 <rule_line_append_token+0x1c4>
  431d34:	ldur	x8, [x29, #-48]
  431d38:	ldr	x8, [x8]
  431d3c:	ldr	x9, [sp, #64]
  431d40:	str	x8, [x9, #24]
  431d44:	cbz	x8, 431d58 <rule_line_append_token+0x1a8>
  431d48:	ldr	x8, [sp, #64]
  431d4c:	ldr	x9, [sp, #64]
  431d50:	ldr	x9, [x9, #24]
  431d54:	str	x8, [x9, #32]
  431d58:	ldr	x8, [sp, #64]
  431d5c:	mov	x9, xzr
  431d60:	str	x9, [x8, #32]
  431d64:	ldr	x8, [sp, #64]
  431d68:	ldur	x9, [x29, #-48]
  431d6c:	str	x8, [x9]
  431d70:	b	431db0 <rule_line_append_token+0x200>
  431d74:	ldur	x8, [x29, #-56]
  431d78:	ldr	x8, [x8, #24]
  431d7c:	ldr	x9, [sp, #64]
  431d80:	str	x8, [x9, #24]
  431d84:	cbz	x8, 431d98 <rule_line_append_token+0x1e8>
  431d88:	ldr	x8, [sp, #64]
  431d8c:	ldr	x9, [sp, #64]
  431d90:	ldr	x9, [x9, #24]
  431d94:	str	x8, [x9, #32]
  431d98:	ldur	x8, [x29, #-56]
  431d9c:	ldr	x9, [sp, #64]
  431da0:	str	x8, [x9, #32]
  431da4:	ldr	x8, [sp, #64]
  431da8:	ldur	x9, [x29, #-56]
  431dac:	str	x8, [x9, #24]
  431db0:	b	431ee8 <rule_line_append_token+0x338>
  431db4:	ldur	x8, [x29, #-8]
  431db8:	add	x8, x8, #0x38
  431dbc:	str	x8, [sp, #56]
  431dc0:	ldr	x8, [sp, #56]
  431dc4:	ldr	x8, [x8]
  431dc8:	str	x8, [sp, #40]
  431dcc:	ldr	x8, [sp, #40]
  431dd0:	cbnz	x8, 431de0 <rule_line_append_token+0x230>
  431dd4:	mov	x8, xzr
  431dd8:	str	x8, [sp, #48]
  431ddc:	b	431e04 <rule_line_append_token+0x254>
  431de0:	ldr	x8, [sp, #40]
  431de4:	ldr	x8, [x8, #24]
  431de8:	cbz	x8, 431dfc <rule_line_append_token+0x24c>
  431dec:	ldr	x8, [sp, #40]
  431df0:	ldr	x8, [x8, #24]
  431df4:	str	x8, [sp, #40]
  431df8:	b	431de0 <rule_line_append_token+0x230>
  431dfc:	ldr	x8, [sp, #40]
  431e00:	str	x8, [sp, #48]
  431e04:	ldr	x8, [sp, #56]
  431e08:	str	x8, [sp, #32]
  431e0c:	ldr	x8, [sp, #48]
  431e10:	str	x8, [sp, #24]
  431e14:	ldur	x8, [x29, #-16]
  431e18:	str	x8, [sp, #16]
  431e1c:	ldr	x8, [sp, #16]
  431e20:	cmp	x8, #0x0
  431e24:	cset	w9, ne  // ne = any
  431e28:	mov	w10, #0x1                   	// #1
  431e2c:	eor	w9, w9, #0x1
  431e30:	eor	w9, w9, w10
  431e34:	eor	w9, w9, w10
  431e38:	and	w9, w9, #0x1
  431e3c:	mov	w0, w9
  431e40:	sxtw	x8, w0
  431e44:	cbz	x8, 431e64 <rule_line_append_token+0x2b4>
  431e48:	mov	w0, #0x1                   	// #1
  431e4c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  431e50:	add	x1, x1, #0x876
  431e54:	ldr	x2, [sp, #8]
  431e58:	mov	w3, #0x194                 	// #404
  431e5c:	ldr	x4, [sp]
  431e60:	bl	40a540 <log_assert_failed_realm@plt>
  431e64:	ldr	x8, [sp, #24]
  431e68:	cbnz	x8, 431eac <rule_line_append_token+0x2fc>
  431e6c:	ldr	x8, [sp, #32]
  431e70:	ldr	x8, [x8]
  431e74:	ldr	x9, [sp, #16]
  431e78:	str	x8, [x9, #24]
  431e7c:	cbz	x8, 431e90 <rule_line_append_token+0x2e0>
  431e80:	ldr	x8, [sp, #16]
  431e84:	ldr	x9, [sp, #16]
  431e88:	ldr	x9, [x9, #24]
  431e8c:	str	x8, [x9, #32]
  431e90:	ldr	x8, [sp, #16]
  431e94:	mov	x9, xzr
  431e98:	str	x9, [x8, #32]
  431e9c:	ldr	x8, [sp, #16]
  431ea0:	ldr	x9, [sp, #32]
  431ea4:	str	x8, [x9]
  431ea8:	b	431ee8 <rule_line_append_token+0x338>
  431eac:	ldr	x8, [sp, #24]
  431eb0:	ldr	x8, [x8, #24]
  431eb4:	ldr	x9, [sp, #16]
  431eb8:	str	x8, [x9, #24]
  431ebc:	cbz	x8, 431ed0 <rule_line_append_token+0x320>
  431ec0:	ldr	x8, [sp, #16]
  431ec4:	ldr	x9, [sp, #16]
  431ec8:	ldr	x9, [x9, #24]
  431ecc:	str	x8, [x9, #32]
  431ed0:	ldr	x8, [sp, #24]
  431ed4:	ldr	x9, [sp, #16]
  431ed8:	str	x8, [x9, #32]
  431edc:	ldr	x8, [sp, #16]
  431ee0:	ldr	x9, [sp, #24]
  431ee4:	str	x8, [x9, #24]
  431ee8:	ldur	x8, [x29, #-16]
  431eec:	ldur	x9, [x29, #-8]
  431ef0:	str	x8, [x9, #48]
  431ef4:	ldp	x29, x30, [sp, #128]
  431ef8:	add	sp, sp, #0x90
  431efc:	ret

0000000000431f00 <hashmap_get>:
  431f00:	sub	sp, sp, #0x20
  431f04:	stp	x29, x30, [sp, #16]
  431f08:	add	x29, sp, #0x10
  431f0c:	str	x0, [sp, #8]
  431f10:	str	x1, [sp]
  431f14:	ldr	x0, [sp, #8]
  431f18:	ldr	x1, [sp]
  431f1c:	bl	40a9d0 <internal_hashmap_get@plt>
  431f20:	ldp	x29, x30, [sp, #16]
  431f24:	add	sp, sp, #0x20
  431f28:	ret

0000000000431f2c <log_unknown_owner>:
  431f2c:	sub	sp, sp, #0x1b0
  431f30:	stp	x29, x30, [sp, #400]
  431f34:	str	x28, [sp, #416]
  431f38:	add	x29, sp, #0x190
  431f3c:	sub	x8, x29, #0x38
  431f40:	mov	w9, #0x0                   	// #0
  431f44:	mov	w10, #0x1                   	// #1
  431f48:	adrp	x11, 467000 <on_inotify.__assert_in_set+0x3540>
  431f4c:	add	x11, x11, #0x48a
  431f50:	add	x11, x11, #0x3
  431f54:	str	x0, [x8, #48]
  431f58:	str	x1, [x8, #40]
  431f5c:	stur	w2, [x29, #-20]
  431f60:	str	x3, [x8, #24]
  431f64:	str	x4, [x8, #16]
  431f68:	sturb	w9, [x29, #-41]
  431f6c:	ldur	w0, [x29, #-20]
  431f70:	str	x8, [sp, #200]
  431f74:	str	w10, [sp, #196]
  431f78:	str	x11, [sp, #184]
  431f7c:	bl	40a410 <abs@plt>
  431f80:	subs	w9, w0, #0x2
  431f84:	cmp	w9, #0x1
  431f88:	cset	w9, ls  // ls = plast
  431f8c:	ldr	w10, [sp, #196]
  431f90:	eor	w9, w9, w10
  431f94:	tbnz	w9, #0, 431fa8 <log_unknown_owner+0x7c>
  431f98:	b	431f9c <log_unknown_owner+0x70>
  431f9c:	mov	w8, #0x1                   	// #1
  431fa0:	sturb	w8, [x29, #-41]
  431fa4:	b	431fa8 <log_unknown_owner+0x7c>
  431fa8:	ldurb	w8, [x29, #-41]
  431fac:	and	w8, w8, #0x1
  431fb0:	sturb	w8, [x29, #-42]
  431fb4:	ldurb	w8, [x29, #-42]
  431fb8:	tbnz	w8, #0, 431fc0 <log_unknown_owner+0x94>
  431fbc:	b	432198 <log_unknown_owner+0x26c>
  431fc0:	ldr	x8, [sp, #200]
  431fc4:	ldr	x9, [x8, #40]
  431fc8:	str	x9, [x8]
  431fcc:	ldr	x9, [x8]
  431fd0:	cbz	x9, 431fe8 <log_unknown_owner+0xbc>
  431fd4:	ldr	x8, [sp, #200]
  431fd8:	ldr	x9, [x8]
  431fdc:	ldr	x9, [x9, #32]
  431fe0:	str	x9, [sp, #176]
  431fe4:	b	431ff0 <log_unknown_owner+0xc4>
  431fe8:	mov	x8, xzr
  431fec:	str	x8, [sp, #176]
  431ff0:	ldr	x8, [sp, #176]
  431ff4:	stur	x8, [x29, #-64]
  431ff8:	ldur	x8, [x29, #-64]
  431ffc:	cbz	x8, 432010 <log_unknown_owner+0xe4>
  432000:	ldur	x8, [x29, #-64]
  432004:	ldr	x8, [x8, #8]
  432008:	str	x8, [sp, #168]
  43200c:	b	432018 <log_unknown_owner+0xec>
  432010:	mov	x8, xzr
  432014:	str	x8, [sp, #168]
  432018:	ldr	x8, [sp, #168]
  43201c:	stur	x8, [x29, #-72]
  432020:	ldur	x8, [x29, #-64]
  432024:	cbz	x8, 432038 <log_unknown_owner+0x10c>
  432028:	ldur	x8, [x29, #-64]
  43202c:	ldr	x8, [x8]
  432030:	str	x8, [sp, #160]
  432034:	b	432040 <log_unknown_owner+0x114>
  432038:	mov	x8, xzr
  43203c:	str	x8, [sp, #160]
  432040:	ldr	x8, [sp, #160]
  432044:	stur	x8, [x29, #-80]
  432048:	mov	x8, xzr
  43204c:	stur	x8, [x29, #-96]
  432050:	ldr	x8, [sp, #200]
  432054:	ldr	x9, [x8, #48]
  432058:	stur	x9, [x29, #-104]
  43205c:	mov	w10, #0x3                   	// #3
  432060:	stur	w10, [x29, #-108]
  432064:	stur	wzr, [x29, #-112]
  432068:	ldur	x9, [x29, #-104]
  43206c:	cbz	x9, 4320ac <log_unknown_owner+0x180>
  432070:	mov	w0, #0x1                   	// #1
  432074:	bl	40a3f0 <log_get_max_level_realm@plt>
  432078:	ldur	w8, [x29, #-108]
  43207c:	cmp	w0, w8
  432080:	cset	w8, ge  // ge = tcont
  432084:	mov	w9, #0x1                   	// #1
  432088:	eor	w8, w8, #0x1
  43208c:	eor	w8, w8, w9
  432090:	and	w8, w8, #0x1
  432094:	mov	w1, w8
  432098:	sxtw	x10, w1
  43209c:	cbz	x10, 4320ac <log_unknown_owner+0x180>
  4320a0:	ldur	x0, [x29, #-104]
  4320a4:	sub	x1, x29, #0x60
  4320a8:	bl	40a860 <sd_device_get_sysname@plt>
  4320ac:	ldur	w0, [x29, #-108]
  4320b0:	ldur	w1, [x29, #-112]
  4320b4:	ldur	x8, [x29, #-96]
  4320b8:	mov	x9, xzr
  4320bc:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4320c0:	add	x10, x10, #0xa46
  4320c4:	cmp	x8, #0x0
  4320c8:	csel	x5, x10, x9, ne  // ne = any
  4320cc:	ldur	x6, [x29, #-96]
  4320d0:	ldur	x8, [x29, #-80]
  4320d4:	str	w0, [sp, #156]
  4320d8:	mov	x0, x8
  4320dc:	str	w1, [sp, #152]
  4320e0:	str	x5, [sp, #144]
  4320e4:	str	x6, [sp, #136]
  4320e8:	bl	424274 <strna>
  4320ec:	ldur	x8, [x29, #-72]
  4320f0:	str	x0, [sp, #128]
  4320f4:	cbz	x8, 432108 <log_unknown_owner+0x1dc>
  4320f8:	ldur	x8, [x29, #-72]
  4320fc:	ldr	w9, [x8, #8]
  432100:	str	w9, [sp, #124]
  432104:	b	432110 <log_unknown_owner+0x1e4>
  432108:	mov	w8, wzr
  43210c:	str	w8, [sp, #124]
  432110:	ldr	w8, [sp, #124]
  432114:	ldr	x9, [sp, #200]
  432118:	ldr	x10, [x9, #24]
  43211c:	ldr	x11, [x9, #16]
  432120:	ldr	w0, [sp, #156]
  432124:	ldr	w1, [sp, #152]
  432128:	ldr	x2, [sp, #184]
  43212c:	mov	w3, #0xf1                  	// #241
  432130:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  432134:	add	x4, x4, #0x2e8
  432138:	ldr	x5, [sp, #144]
  43213c:	ldr	x6, [sp, #136]
  432140:	mov	x12, xzr
  432144:	mov	x7, x12
  432148:	mov	x13, sp
  43214c:	str	x12, [x13]
  432150:	mov	x12, sp
  432154:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  432158:	add	x13, x13, #0x2fa
  43215c:	str	x13, [x12, #8]
  432160:	mov	x12, sp
  432164:	ldr	x13, [sp, #128]
  432168:	str	x13, [x12, #16]
  43216c:	mov	x12, sp
  432170:	str	w8, [x12, #24]
  432174:	mov	x12, sp
  432178:	str	x10, [x12, #32]
  43217c:	mov	x10, sp
  432180:	str	x11, [x10, #40]
  432184:	bl	40a870 <log_object_internal@plt>
  432188:	stur	w0, [x29, #-116]
  43218c:	ldur	w8, [x29, #-116]
  432190:	stur	w8, [x29, #-84]
  432194:	b	43236c <log_unknown_owner+0x440>
  432198:	ldr	x8, [sp, #200]
  43219c:	ldr	x9, [x8, #40]
  4321a0:	stur	x9, [x29, #-128]
  4321a4:	ldur	x9, [x29, #-128]
  4321a8:	cbz	x9, 4321bc <log_unknown_owner+0x290>
  4321ac:	ldur	x8, [x29, #-128]
  4321b0:	ldr	x8, [x8, #32]
  4321b4:	str	x8, [sp, #112]
  4321b8:	b	4321c4 <log_unknown_owner+0x298>
  4321bc:	mov	x8, xzr
  4321c0:	str	x8, [sp, #112]
  4321c4:	ldr	x8, [sp, #112]
  4321c8:	stur	x8, [x29, #-136]
  4321cc:	ldur	x8, [x29, #-136]
  4321d0:	cbz	x8, 4321e4 <log_unknown_owner+0x2b8>
  4321d4:	ldur	x8, [x29, #-136]
  4321d8:	ldr	x8, [x8, #8]
  4321dc:	str	x8, [sp, #104]
  4321e0:	b	4321ec <log_unknown_owner+0x2c0>
  4321e4:	mov	x8, xzr
  4321e8:	str	x8, [sp, #104]
  4321ec:	ldr	x8, [sp, #104]
  4321f0:	stur	x8, [x29, #-144]
  4321f4:	ldur	x8, [x29, #-136]
  4321f8:	cbz	x8, 43220c <log_unknown_owner+0x2e0>
  4321fc:	ldur	x8, [x29, #-136]
  432200:	ldr	x8, [x8]
  432204:	str	x8, [sp, #96]
  432208:	b	432214 <log_unknown_owner+0x2e8>
  43220c:	mov	x8, xzr
  432210:	str	x8, [sp, #96]
  432214:	ldr	x8, [sp, #96]
  432218:	stur	x8, [x29, #-152]
  43221c:	mov	x8, xzr
  432220:	stur	x8, [x29, #-168]
  432224:	ldr	x8, [sp, #200]
  432228:	ldr	x9, [x8, #48]
  43222c:	stur	x9, [x29, #-176]
  432230:	mov	w10, #0x3                   	// #3
  432234:	stur	w10, [x29, #-180]
  432238:	ldur	w10, [x29, #-20]
  43223c:	stur	w10, [x29, #-184]
  432240:	ldur	x9, [x29, #-176]
  432244:	cbz	x9, 432284 <log_unknown_owner+0x358>
  432248:	mov	w0, #0x1                   	// #1
  43224c:	bl	40a3f0 <log_get_max_level_realm@plt>
  432250:	ldur	w8, [x29, #-180]
  432254:	cmp	w0, w8
  432258:	cset	w8, ge  // ge = tcont
  43225c:	mov	w9, #0x1                   	// #1
  432260:	eor	w8, w8, #0x1
  432264:	eor	w8, w8, w9
  432268:	and	w8, w8, #0x1
  43226c:	mov	w1, w8
  432270:	sxtw	x10, w1
  432274:	cbz	x10, 432284 <log_unknown_owner+0x358>
  432278:	ldur	x0, [x29, #-176]
  43227c:	sub	x1, x29, #0xa8
  432280:	bl	40a860 <sd_device_get_sysname@plt>
  432284:	ldur	w0, [x29, #-180]
  432288:	ldur	w1, [x29, #-184]
  43228c:	ldur	x8, [x29, #-168]
  432290:	mov	x9, xzr
  432294:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  432298:	add	x10, x10, #0xa46
  43229c:	cmp	x8, #0x0
  4322a0:	csel	x5, x10, x9, ne  // ne = any
  4322a4:	ldur	x6, [x29, #-168]
  4322a8:	ldur	x8, [x29, #-152]
  4322ac:	str	w0, [sp, #92]
  4322b0:	mov	x0, x8
  4322b4:	str	w1, [sp, #88]
  4322b8:	str	x5, [sp, #80]
  4322bc:	str	x6, [sp, #72]
  4322c0:	bl	424274 <strna>
  4322c4:	ldur	x8, [x29, #-144]
  4322c8:	str	x0, [sp, #64]
  4322cc:	cbz	x8, 4322e0 <log_unknown_owner+0x3b4>
  4322d0:	ldur	x8, [x29, #-144]
  4322d4:	ldr	w9, [x8, #8]
  4322d8:	str	w9, [sp, #60]
  4322dc:	b	4322e8 <log_unknown_owner+0x3bc>
  4322e0:	mov	w8, wzr
  4322e4:	str	w8, [sp, #60]
  4322e8:	ldr	w8, [sp, #60]
  4322ec:	ldr	x9, [sp, #200]
  4322f0:	ldr	x10, [x9, #24]
  4322f4:	ldr	x11, [x9, #16]
  4322f8:	ldr	w0, [sp, #92]
  4322fc:	ldr	w1, [sp, #88]
  432300:	ldr	x2, [sp, #184]
  432304:	mov	w3, #0xf3                  	// #243
  432308:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43230c:	add	x4, x4, #0x2e8
  432310:	ldr	x5, [sp, #80]
  432314:	ldr	x6, [sp, #72]
  432318:	mov	x12, xzr
  43231c:	mov	x7, x12
  432320:	mov	x13, sp
  432324:	str	x12, [x13]
  432328:	mov	x12, sp
  43232c:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  432330:	add	x13, x13, #0x31a
  432334:	str	x13, [x12, #8]
  432338:	mov	x12, sp
  43233c:	ldr	x13, [sp, #64]
  432340:	str	x13, [x12, #16]
  432344:	mov	x12, sp
  432348:	str	w8, [x12, #24]
  43234c:	mov	x12, sp
  432350:	str	x10, [x12, #32]
  432354:	mov	x10, sp
  432358:	str	x11, [x10, #40]
  43235c:	bl	40a870 <log_object_internal@plt>
  432360:	stur	w0, [x29, #-188]
  432364:	ldur	w8, [x29, #-188]
  432368:	stur	w8, [x29, #-156]
  43236c:	ldr	x28, [sp, #416]
  432370:	ldp	x29, x30, [sp, #400]
  432374:	add	sp, sp, #0x1b0
  432378:	ret

000000000043237c <streq_ptr>:
  43237c:	sub	sp, sp, #0x20
  432380:	stp	x29, x30, [sp, #16]
  432384:	add	x29, sp, #0x10
  432388:	str	x0, [sp, #8]
  43238c:	str	x1, [sp]
  432390:	ldr	x0, [sp, #8]
  432394:	ldr	x1, [sp]
  432398:	bl	40ac80 <strcmp_ptr@plt>
  43239c:	cmp	w0, #0x0
  4323a0:	cset	w8, eq  // eq = none
  4323a4:	and	w0, w8, #0x1
  4323a8:	ldp	x29, x30, [sp, #16]
  4323ac:	add	sp, sp, #0x20
  4323b0:	ret

00000000004323b4 <token_is_for_parents>:
  4323b4:	sub	sp, sp, #0x10
  4323b8:	str	x0, [sp, #8]
  4323bc:	ldr	x8, [sp, #8]
  4323c0:	ldr	w9, [x8]
  4323c4:	lsl	w9, w9, #24
  4323c8:	asr	w9, w9, #24
  4323cc:	mov	w10, #0x0                   	// #0
  4323d0:	cmp	w9, #0xc
  4323d4:	str	w10, [sp, #4]
  4323d8:	b.lt	4323f8 <token_is_for_parents+0x44>  // b.tstop
  4323dc:	ldr	x8, [sp, #8]
  4323e0:	ldr	w9, [x8]
  4323e4:	lsl	w9, w9, #24
  4323e8:	asr	w9, w9, #24
  4323ec:	cmp	w9, #0x10
  4323f0:	cset	w9, le
  4323f4:	str	w9, [sp, #4]
  4323f8:	ldr	w8, [sp, #4]
  4323fc:	and	w0, w8, #0x1
  432400:	add	sp, sp, #0x10
  432404:	ret

0000000000432408 <udev_rule_apply_parent_token_to_event>:
  432408:	sub	sp, sp, #0x40
  43240c:	stp	x29, x30, [sp, #48]
  432410:	add	x29, sp, #0x30
  432414:	stur	x0, [x29, #-16]
  432418:	str	x1, [sp, #24]
  43241c:	ldur	x8, [x29, #-16]
  432420:	ldr	x8, [x8, #32]
  432424:	ldr	x8, [x8, #8]
  432428:	str	x8, [sp, #16]
  43242c:	ldur	x8, [x29, #-16]
  432430:	ldr	x8, [x8, #32]
  432434:	ldr	x8, [x8, #8]
  432438:	ldr	x8, [x8, #48]
  43243c:	str	x8, [sp, #8]
  432440:	ldr	x8, [sp, #24]
  432444:	ldr	x8, [x8]
  432448:	ldr	x9, [sp, #24]
  43244c:	str	x8, [x9, #8]
  432450:	ldr	x8, [sp, #8]
  432454:	ldr	x9, [sp, #16]
  432458:	str	x8, [x9, #48]
  43245c:	ldr	x8, [sp, #16]
  432460:	ldr	x8, [x8, #48]
  432464:	cbz	x8, 4324e8 <udev_rule_apply_parent_token_to_event+0xe0>
  432468:	ldr	x8, [sp, #16]
  43246c:	ldr	x0, [x8, #48]
  432470:	bl	4323b4 <token_is_for_parents>
  432474:	tbnz	w0, #0, 432484 <udev_rule_apply_parent_token_to_event+0x7c>
  432478:	mov	w8, #0x1                   	// #1
  43247c:	stur	w8, [x29, #-4]
  432480:	b	432538 <udev_rule_apply_parent_token_to_event+0x130>
  432484:	ldur	x0, [x29, #-16]
  432488:	ldr	x8, [sp, #24]
  43248c:	ldr	x1, [x8, #8]
  432490:	ldr	x2, [sp, #24]
  432494:	mov	x8, xzr
  432498:	mov	x3, x8
  43249c:	mov	x4, x8
  4324a0:	bl	432548 <udev_rule_apply_token_to_event>
  4324a4:	str	w0, [sp, #4]
  4324a8:	ldr	w9, [sp, #4]
  4324ac:	cmp	w9, #0x0
  4324b0:	cset	w9, ge  // ge = tcont
  4324b4:	tbnz	w9, #0, 4324c4 <udev_rule_apply_parent_token_to_event+0xbc>
  4324b8:	ldr	w8, [sp, #4]
  4324bc:	stur	w8, [x29, #-4]
  4324c0:	b	432538 <udev_rule_apply_parent_token_to_event+0x130>
  4324c4:	ldr	w8, [sp, #4]
  4324c8:	cbnz	w8, 4324d0 <udev_rule_apply_parent_token_to_event+0xc8>
  4324cc:	b	4324e8 <udev_rule_apply_parent_token_to_event+0xe0>
  4324d0:	ldr	x8, [sp, #16]
  4324d4:	ldr	x8, [x8, #48]
  4324d8:	ldr	x8, [x8, #24]
  4324dc:	ldr	x9, [sp, #16]
  4324e0:	str	x8, [x9, #48]
  4324e4:	b	43245c <udev_rule_apply_parent_token_to_event+0x54>
  4324e8:	ldr	x8, [sp, #16]
  4324ec:	ldr	x8, [x8, #48]
  4324f0:	cbnz	x8, 432500 <udev_rule_apply_parent_token_to_event+0xf8>
  4324f4:	mov	w8, #0x1                   	// #1
  4324f8:	stur	w8, [x29, #-4]
  4324fc:	b	432538 <udev_rule_apply_parent_token_to_event+0x130>
  432500:	ldr	x8, [sp, #24]
  432504:	ldr	x0, [x8, #8]
  432508:	ldr	x8, [sp, #24]
  43250c:	add	x1, x8, #0x8
  432510:	bl	40abc0 <sd_device_get_parent@plt>
  432514:	cmp	w0, #0x0
  432518:	cset	w9, ge  // ge = tcont
  43251c:	tbnz	w9, #0, 432534 <udev_rule_apply_parent_token_to_event+0x12c>
  432520:	ldr	x8, [sp, #24]
  432524:	mov	x9, xzr
  432528:	str	x9, [x8, #8]
  43252c:	stur	wzr, [x29, #-4]
  432530:	b	432538 <udev_rule_apply_parent_token_to_event+0x130>
  432534:	b	432450 <udev_rule_apply_parent_token_to_event+0x48>
  432538:	ldur	w0, [x29, #-4]
  43253c:	ldp	x29, x30, [sp, #48]
  432540:	add	sp, sp, #0x40
  432544:	ret

0000000000432548 <udev_rule_apply_token_to_event>:
  432548:	stp	x29, x30, [sp, #-32]!
  43254c:	str	x28, [sp, #16]
  432550:	mov	x29, sp
  432554:	sub	sp, sp, #0xf, lsl #12
  432558:	sub	sp, sp, #0x880
  43255c:	add	x8, sp, #0xf, lsl #12
  432560:	add	x8, x8, #0x278
  432564:	add	x9, sp, #0xe, lsl #12
  432568:	add	x9, x9, #0xd54
  43256c:	add	x10, sp, #0xa, lsl #12
  432570:	add	x10, x10, #0xbb0
  432574:	add	x11, sp, #0xa, lsl #12
  432578:	add	x11, x11, #0xaac
  43257c:	add	x12, sp, #0x5, lsl #12
  432580:	add	x12, x12, #0xfd0
  432584:	add	x13, sp, #0x5, lsl #12
  432588:	add	x13, x13, #0xecc
  43258c:	add	x14, sp, #0x1, lsl #12
  432590:	add	x14, x14, #0x28
  432594:	adrp	x15, 467000 <on_inotify.__assert_in_set+0x3540>
  432598:	add	x15, x15, #0x48a
  43259c:	add	x15, x15, #0x3
  4325a0:	adrp	x16, 468000 <on_inotify.__assert_in_set+0x4540>
  4325a4:	add	x16, x16, #0x4ae
  4325a8:	adrp	x17, 464000 <on_inotify.__assert_in_set+0x540>
  4325ac:	add	x17, x17, #0xa46
  4325b0:	adrp	x18, 463000 <dhcp_lease_set_client_id+0xc4>
  4325b4:	add	x18, x18, #0xb41
  4325b8:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  4325bc:	add	x5, x5, #0x538
  4325c0:	adrp	x6, 468000 <on_inotify.__assert_in_set+0x4540>
  4325c4:	add	x6, x6, #0x873
  4325c8:	adrp	x7, 468000 <on_inotify.__assert_in_set+0x4540>
  4325cc:	add	x7, x7, #0x451
  4325d0:	str	x0, [x8, #1528]
  4325d4:	str	x1, [x8, #1520]
  4325d8:	str	x2, [x8, #1512]
  4325dc:	str	x3, [x8, #1504]
  4325e0:	str	x4, [x8, #1496]
  4325e4:	str	x8, [sp, #3984]
  4325e8:	str	x9, [sp, #3976]
  4325ec:	str	x10, [sp, #3968]
  4325f0:	str	x11, [sp, #3960]
  4325f4:	str	x12, [sp, #3952]
  4325f8:	str	x13, [sp, #3944]
  4325fc:	str	x14, [sp, #3936]
  432600:	str	x15, [sp, #3928]
  432604:	str	x16, [sp, #3920]
  432608:	str	x17, [sp, #3912]
  43260c:	str	x18, [sp, #3904]
  432610:	str	x5, [sp, #3896]
  432614:	str	x6, [sp, #3888]
  432618:	str	x7, [sp, #3880]
  43261c:	ldr	x8, [sp, #3984]
  432620:	ldr	x9, [x8, #1528]
  432624:	cmp	x9, #0x0
  432628:	cset	w10, ne  // ne = any
  43262c:	mov	w11, #0x1                   	// #1
  432630:	eor	w10, w10, #0x1
  432634:	eor	w10, w10, w11
  432638:	eor	w10, w10, w11
  43263c:	and	w10, w10, #0x1
  432640:	mov	w0, w10
  432644:	sxtw	x9, w0
  432648:	cbz	x9, 432668 <udev_rule_apply_token_to_event+0x120>
  43264c:	mov	w0, #0x1                   	// #1
  432650:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  432654:	add	x1, x1, #0x333
  432658:	ldr	x2, [sp, #3928]
  43265c:	mov	w3, #0x5fe                 	// #1534
  432660:	ldr	x4, [sp, #3880]
  432664:	bl	40a540 <log_assert_failed_realm@plt>
  432668:	ldr	x8, [sp, #3984]
  43266c:	ldr	x9, [x8, #1520]
  432670:	cmp	x9, #0x0
  432674:	cset	w10, ne  // ne = any
  432678:	mov	w11, #0x1                   	// #1
  43267c:	eor	w10, w10, #0x1
  432680:	eor	w10, w10, w11
  432684:	eor	w10, w10, w11
  432688:	and	w10, w10, #0x1
  43268c:	mov	w0, w10
  432690:	sxtw	x9, w0
  432694:	cbz	x9, 4326b4 <udev_rule_apply_token_to_event+0x16c>
  432698:	mov	w0, #0x1                   	// #1
  43269c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4326a0:	add	x1, x1, #0xee1
  4326a4:	ldr	x2, [sp, #3928]
  4326a8:	mov	w3, #0x5ff                 	// #1535
  4326ac:	ldr	x4, [sp, #3880]
  4326b0:	bl	40a540 <log_assert_failed_realm@plt>
  4326b4:	ldr	x8, [sp, #3984]
  4326b8:	ldr	x9, [x8, #1512]
  4326bc:	cmp	x9, #0x0
  4326c0:	cset	w10, ne  // ne = any
  4326c4:	mov	w11, #0x1                   	// #1
  4326c8:	eor	w10, w10, #0x1
  4326cc:	eor	w10, w10, w11
  4326d0:	eor	w10, w10, w11
  4326d4:	and	w10, w10, #0x1
  4326d8:	mov	w0, w10
  4326dc:	sxtw	x9, w0
  4326e0:	cbz	x9, 432700 <udev_rule_apply_token_to_event+0x1b8>
  4326e4:	mov	w0, #0x1                   	// #1
  4326e8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4326ec:	add	x1, x1, #0xbb0
  4326f0:	ldr	x2, [sp, #3928]
  4326f4:	mov	w3, #0x600                 	// #1536
  4326f8:	ldr	x4, [sp, #3880]
  4326fc:	bl	40a540 <log_assert_failed_realm@plt>
  432700:	ldr	x8, [sp, #3984]
  432704:	ldr	x9, [x8, #1528]
  432708:	ldr	x9, [x9, #32]
  43270c:	ldr	x9, [x9, #8]
  432710:	ldr	x9, [x9, #48]
  432714:	str	x9, [x8, #1488]
  432718:	ldr	x9, [x8, #1488]
  43271c:	ldr	w10, [x9]
  432720:	lsl	w10, w10, #24
  432724:	asr	w10, w10, #24
  432728:	subs	w10, w10, #0x0
  43272c:	mov	w9, w10
  432730:	ubfx	x9, x9, #0, #32
  432734:	cmp	x9, #0x2e
  432738:	str	x9, [sp, #3872]
  43273c:	b.hi	43b720 <udev_rule_apply_token_to_event+0x91d8>  // b.pmore
  432740:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  432744:	add	x8, x8, #0x2b0
  432748:	ldr	x11, [sp, #3872]
  43274c:	ldrsw	x10, [x8, x11, lsl #2]
  432750:	add	x9, x8, x10
  432754:	br	x9
  432758:	ldr	x8, [sp, #3984]
  43275c:	ldr	x0, [x8, #1520]
  432760:	add	x1, sp, #0xf, lsl #12
  432764:	add	x1, x1, #0x42c
  432768:	bl	40ab50 <device_get_action@plt>
  43276c:	ldr	x8, [sp, #3984]
  432770:	str	w0, [x8, #440]
  432774:	ldr	w9, [x8, #440]
  432778:	cmp	w9, #0x0
  43277c:	cset	w9, ge  // ge = tcont
  432780:	tbnz	w9, #0, 432970 <udev_rule_apply_token_to_event+0x428>
  432784:	ldr	x8, [sp, #3984]
  432788:	ldr	x9, [x8, #1528]
  43278c:	str	x9, [x8, #424]
  432790:	ldr	x9, [x8, #424]
  432794:	cbz	x9, 4327ac <udev_rule_apply_token_to_event+0x264>
  432798:	ldr	x8, [sp, #3984]
  43279c:	ldr	x9, [x8, #424]
  4327a0:	ldr	x9, [x9, #32]
  4327a4:	str	x9, [sp, #3864]
  4327a8:	b	4327b4 <udev_rule_apply_token_to_event+0x26c>
  4327ac:	mov	x8, xzr
  4327b0:	str	x8, [sp, #3864]
  4327b4:	ldr	x8, [sp, #3864]
  4327b8:	ldr	x9, [sp, #3984]
  4327bc:	str	x8, [x9, #416]
  4327c0:	ldr	x8, [x9, #416]
  4327c4:	cbz	x8, 4327dc <udev_rule_apply_token_to_event+0x294>
  4327c8:	ldr	x8, [sp, #3984]
  4327cc:	ldr	x9, [x8, #416]
  4327d0:	ldr	x9, [x9, #8]
  4327d4:	str	x9, [sp, #3856]
  4327d8:	b	4327e4 <udev_rule_apply_token_to_event+0x29c>
  4327dc:	mov	x8, xzr
  4327e0:	str	x8, [sp, #3856]
  4327e4:	ldr	x8, [sp, #3856]
  4327e8:	ldr	x9, [sp, #3984]
  4327ec:	str	x8, [x9, #408]
  4327f0:	ldr	x8, [x9, #416]
  4327f4:	cbz	x8, 43280c <udev_rule_apply_token_to_event+0x2c4>
  4327f8:	ldr	x8, [sp, #3984]
  4327fc:	ldr	x9, [x8, #416]
  432800:	ldr	x9, [x9]
  432804:	str	x9, [sp, #3848]
  432808:	b	432814 <udev_rule_apply_token_to_event+0x2cc>
  43280c:	mov	x8, xzr
  432810:	str	x8, [sp, #3848]
  432814:	ldr	x8, [sp, #3848]
  432818:	ldr	x9, [sp, #3984]
  43281c:	str	x8, [x9, #400]
  432820:	mov	x8, xzr
  432824:	str	x8, [x9, #384]
  432828:	ldr	x8, [x9, #1520]
  43282c:	str	x8, [x9, #376]
  432830:	mov	w10, #0x3                   	// #3
  432834:	str	w10, [x9, #372]
  432838:	ldr	w10, [x9, #440]
  43283c:	str	w10, [x9, #368]
  432840:	ldr	x8, [x9, #376]
  432844:	cbz	x8, 432890 <udev_rule_apply_token_to_event+0x348>
  432848:	mov	w0, #0x1                   	// #1
  43284c:	bl	40a3f0 <log_get_max_level_realm@plt>
  432850:	ldr	x8, [sp, #3984]
  432854:	ldr	w9, [x8, #372]
  432858:	cmp	w0, w9
  43285c:	cset	w9, ge  // ge = tcont
  432860:	mov	w10, #0x1                   	// #1
  432864:	eor	w9, w9, #0x1
  432868:	eor	w9, w9, w10
  43286c:	and	w9, w9, #0x1
  432870:	mov	w1, w9
  432874:	sxtw	x11, w1
  432878:	cbz	x11, 432890 <udev_rule_apply_token_to_event+0x348>
  43287c:	ldr	x8, [sp, #3984]
  432880:	ldr	x0, [x8, #376]
  432884:	add	x1, sp, #0xf, lsl #12
  432888:	add	x1, x1, #0x3f8
  43288c:	bl	40a860 <sd_device_get_sysname@plt>
  432890:	ldr	x8, [sp, #3984]
  432894:	ldr	w0, [x8, #372]
  432898:	ldr	w1, [x8, #368]
  43289c:	ldr	x9, [x8, #384]
  4328a0:	mov	x10, xzr
  4328a4:	cmp	x9, #0x0
  4328a8:	ldr	x9, [sp, #3912]
  4328ac:	csel	x5, x9, x10, ne  // ne = any
  4328b0:	ldr	x6, [x8, #384]
  4328b4:	ldr	x10, [x8, #400]
  4328b8:	str	w0, [sp, #3844]
  4328bc:	mov	x0, x10
  4328c0:	str	w1, [sp, #3840]
  4328c4:	str	x5, [sp, #3832]
  4328c8:	str	x6, [sp, #3824]
  4328cc:	bl	424274 <strna>
  4328d0:	ldr	x8, [sp, #3984]
  4328d4:	ldr	x9, [x8, #408]
  4328d8:	str	x0, [sp, #3816]
  4328dc:	cbz	x9, 4328f4 <udev_rule_apply_token_to_event+0x3ac>
  4328e0:	ldr	x8, [sp, #3984]
  4328e4:	ldr	x9, [x8, #408]
  4328e8:	ldr	w10, [x9, #8]
  4328ec:	str	w10, [sp, #3812]
  4328f0:	b	4328fc <udev_rule_apply_token_to_event+0x3b4>
  4328f4:	mov	w8, wzr
  4328f8:	str	w8, [sp, #3812]
  4328fc:	ldr	w8, [sp, #3812]
  432900:	ldr	w0, [sp, #3844]
  432904:	ldr	w1, [sp, #3840]
  432908:	ldr	x2, [sp, #3928]
  43290c:	mov	w3, #0x60f                 	// #1551
  432910:	ldr	x4, [sp, #3920]
  432914:	ldr	x5, [sp, #3832]
  432918:	ldr	x6, [sp, #3824]
  43291c:	mov	x9, xzr
  432920:	mov	x7, x9
  432924:	mov	x10, sp
  432928:	str	x9, [x10]
  43292c:	mov	x9, sp
  432930:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  432934:	add	x10, x10, #0x4cd
  432938:	str	x10, [x9, #8]
  43293c:	mov	x9, sp
  432940:	ldr	x10, [sp, #3816]
  432944:	str	x10, [x9, #16]
  432948:	mov	x9, sp
  43294c:	str	w8, [x9, #24]
  432950:	bl	40a870 <log_object_internal@plt>
  432954:	ldr	x9, [sp, #3984]
  432958:	str	w0, [x9, #364]
  43295c:	ldr	w8, [x9, #364]
  432960:	str	w8, [x9, #396]
  432964:	ldr	w8, [x9, #396]
  432968:	str	w8, [x9, #1540]
  43296c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432970:	ldr	x8, [sp, #3984]
  432974:	ldr	x0, [x8, #1488]
  432978:	ldr	w9, [x8, #436]
  43297c:	str	x0, [sp, #3800]
  432980:	mov	w0, w9
  432984:	bl	40ab60 <device_action_to_string@plt>
  432988:	ldr	x8, [sp, #3800]
  43298c:	str	x0, [sp, #3792]
  432990:	mov	x0, x8
  432994:	ldr	x1, [sp, #3792]
  432998:	bl	43b764 <token_match_string>
  43299c:	and	w9, w0, #0x1
  4329a0:	ldr	x8, [sp, #3984]
  4329a4:	str	w9, [x8, #1540]
  4329a8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4329ac:	ldr	x8, [sp, #3984]
  4329b0:	ldr	x0, [x8, #1520]
  4329b4:	add	x1, sp, #0xf, lsl #12
  4329b8:	add	x1, x1, #0x440
  4329bc:	bl	40aa30 <sd_device_get_devpath@plt>
  4329c0:	ldr	x8, [sp, #3984]
  4329c4:	str	w0, [x8, #440]
  4329c8:	ldr	w9, [x8, #440]
  4329cc:	cmp	w9, #0x0
  4329d0:	cset	w9, ge  // ge = tcont
  4329d4:	tbnz	w9, #0, 432bc4 <udev_rule_apply_token_to_event+0x67c>
  4329d8:	ldr	x8, [sp, #3984]
  4329dc:	ldr	x9, [x8, #1528]
  4329e0:	str	x9, [x8, #352]
  4329e4:	ldr	x9, [x8, #352]
  4329e8:	cbz	x9, 432a00 <udev_rule_apply_token_to_event+0x4b8>
  4329ec:	ldr	x8, [sp, #3984]
  4329f0:	ldr	x9, [x8, #352]
  4329f4:	ldr	x9, [x9, #32]
  4329f8:	str	x9, [sp, #3784]
  4329fc:	b	432a08 <udev_rule_apply_token_to_event+0x4c0>
  432a00:	mov	x8, xzr
  432a04:	str	x8, [sp, #3784]
  432a08:	ldr	x8, [sp, #3784]
  432a0c:	ldr	x9, [sp, #3984]
  432a10:	str	x8, [x9, #344]
  432a14:	ldr	x8, [x9, #344]
  432a18:	cbz	x8, 432a30 <udev_rule_apply_token_to_event+0x4e8>
  432a1c:	ldr	x8, [sp, #3984]
  432a20:	ldr	x9, [x8, #344]
  432a24:	ldr	x9, [x9, #8]
  432a28:	str	x9, [sp, #3776]
  432a2c:	b	432a38 <udev_rule_apply_token_to_event+0x4f0>
  432a30:	mov	x8, xzr
  432a34:	str	x8, [sp, #3776]
  432a38:	ldr	x8, [sp, #3776]
  432a3c:	ldr	x9, [sp, #3984]
  432a40:	str	x8, [x9, #336]
  432a44:	ldr	x8, [x9, #344]
  432a48:	cbz	x8, 432a60 <udev_rule_apply_token_to_event+0x518>
  432a4c:	ldr	x8, [sp, #3984]
  432a50:	ldr	x9, [x8, #344]
  432a54:	ldr	x9, [x9]
  432a58:	str	x9, [sp, #3768]
  432a5c:	b	432a68 <udev_rule_apply_token_to_event+0x520>
  432a60:	mov	x8, xzr
  432a64:	str	x8, [sp, #3768]
  432a68:	ldr	x8, [sp, #3768]
  432a6c:	ldr	x9, [sp, #3984]
  432a70:	str	x8, [x9, #328]
  432a74:	mov	x8, xzr
  432a78:	str	x8, [x9, #312]
  432a7c:	ldr	x8, [x9, #1520]
  432a80:	str	x8, [x9, #304]
  432a84:	mov	w10, #0x3                   	// #3
  432a88:	str	w10, [x9, #300]
  432a8c:	ldr	w10, [x9, #440]
  432a90:	str	w10, [x9, #296]
  432a94:	ldr	x8, [x9, #304]
  432a98:	cbz	x8, 432ae4 <udev_rule_apply_token_to_event+0x59c>
  432a9c:	mov	w0, #0x1                   	// #1
  432aa0:	bl	40a3f0 <log_get_max_level_realm@plt>
  432aa4:	ldr	x8, [sp, #3984]
  432aa8:	ldr	w9, [x8, #300]
  432aac:	cmp	w0, w9
  432ab0:	cset	w9, ge  // ge = tcont
  432ab4:	mov	w10, #0x1                   	// #1
  432ab8:	eor	w9, w9, #0x1
  432abc:	eor	w9, w9, w10
  432ac0:	and	w9, w9, #0x1
  432ac4:	mov	w1, w9
  432ac8:	sxtw	x11, w1
  432acc:	cbz	x11, 432ae4 <udev_rule_apply_token_to_event+0x59c>
  432ad0:	ldr	x8, [sp, #3984]
  432ad4:	ldr	x0, [x8, #304]
  432ad8:	add	x1, sp, #0xf, lsl #12
  432adc:	add	x1, x1, #0x3b0
  432ae0:	bl	40a860 <sd_device_get_sysname@plt>
  432ae4:	ldr	x8, [sp, #3984]
  432ae8:	ldr	w0, [x8, #300]
  432aec:	ldr	w1, [x8, #296]
  432af0:	ldr	x9, [x8, #312]
  432af4:	mov	x10, xzr
  432af8:	cmp	x9, #0x0
  432afc:	ldr	x9, [sp, #3912]
  432b00:	csel	x5, x9, x10, ne  // ne = any
  432b04:	ldr	x6, [x8, #312]
  432b08:	ldr	x10, [x8, #328]
  432b0c:	str	w0, [sp, #3764]
  432b10:	mov	x0, x10
  432b14:	str	w1, [sp, #3760]
  432b18:	str	x5, [sp, #3752]
  432b1c:	str	x6, [sp, #3744]
  432b20:	bl	424274 <strna>
  432b24:	ldr	x8, [sp, #3984]
  432b28:	ldr	x9, [x8, #336]
  432b2c:	str	x0, [sp, #3736]
  432b30:	cbz	x9, 432b48 <udev_rule_apply_token_to_event+0x600>
  432b34:	ldr	x8, [sp, #3984]
  432b38:	ldr	x9, [x8, #336]
  432b3c:	ldr	w10, [x9, #8]
  432b40:	str	w10, [sp, #3732]
  432b44:	b	432b50 <udev_rule_apply_token_to_event+0x608>
  432b48:	mov	w8, wzr
  432b4c:	str	w8, [sp, #3732]
  432b50:	ldr	w8, [sp, #3732]
  432b54:	ldr	w0, [sp, #3764]
  432b58:	ldr	w1, [sp, #3760]
  432b5c:	ldr	x2, [sp, #3928]
  432b60:	mov	w3, #0x616                 	// #1558
  432b64:	ldr	x4, [sp, #3920]
  432b68:	ldr	x5, [sp, #3752]
  432b6c:	ldr	x6, [sp, #3744]
  432b70:	mov	x9, xzr
  432b74:	mov	x7, x9
  432b78:	mov	x10, sp
  432b7c:	str	x9, [x10]
  432b80:	mov	x9, sp
  432b84:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  432b88:	add	x10, x10, #0x4f8
  432b8c:	str	x10, [x9, #8]
  432b90:	mov	x9, sp
  432b94:	ldr	x10, [sp, #3736]
  432b98:	str	x10, [x9, #16]
  432b9c:	mov	x9, sp
  432ba0:	str	w8, [x9, #24]
  432ba4:	bl	40a870 <log_object_internal@plt>
  432ba8:	ldr	x9, [sp, #3984]
  432bac:	str	w0, [x9, #292]
  432bb0:	ldr	w8, [x9, #292]
  432bb4:	str	w8, [x9, #324]
  432bb8:	ldr	w8, [x9, #324]
  432bbc:	str	w8, [x9, #1540]
  432bc0:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432bc4:	ldr	x8, [sp, #3984]
  432bc8:	ldr	x0, [x8, #1488]
  432bcc:	ldr	x1, [x8, #456]
  432bd0:	bl	43b764 <token_match_string>
  432bd4:	and	w9, w0, #0x1
  432bd8:	ldr	x8, [sp, #3984]
  432bdc:	str	w9, [x8, #1540]
  432be0:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432be4:	ldr	x8, [sp, #3984]
  432be8:	ldr	x0, [x8, #1520]
  432bec:	add	x1, sp, #0xf, lsl #12
  432bf0:	add	x1, x1, #0x440
  432bf4:	bl	40a860 <sd_device_get_sysname@plt>
  432bf8:	ldr	x8, [sp, #3984]
  432bfc:	str	w0, [x8, #440]
  432c00:	ldr	w9, [x8, #440]
  432c04:	cmp	w9, #0x0
  432c08:	cset	w9, ge  // ge = tcont
  432c0c:	tbnz	w9, #0, 432dfc <udev_rule_apply_token_to_event+0x8b4>
  432c10:	ldr	x8, [sp, #3984]
  432c14:	ldr	x9, [x8, #1528]
  432c18:	str	x9, [x8, #280]
  432c1c:	ldr	x9, [x8, #280]
  432c20:	cbz	x9, 432c38 <udev_rule_apply_token_to_event+0x6f0>
  432c24:	ldr	x8, [sp, #3984]
  432c28:	ldr	x9, [x8, #280]
  432c2c:	ldr	x9, [x9, #32]
  432c30:	str	x9, [sp, #3720]
  432c34:	b	432c40 <udev_rule_apply_token_to_event+0x6f8>
  432c38:	mov	x8, xzr
  432c3c:	str	x8, [sp, #3720]
  432c40:	ldr	x8, [sp, #3720]
  432c44:	ldr	x9, [sp, #3984]
  432c48:	str	x8, [x9, #272]
  432c4c:	ldr	x8, [x9, #272]
  432c50:	cbz	x8, 432c68 <udev_rule_apply_token_to_event+0x720>
  432c54:	ldr	x8, [sp, #3984]
  432c58:	ldr	x9, [x8, #272]
  432c5c:	ldr	x9, [x9, #8]
  432c60:	str	x9, [sp, #3712]
  432c64:	b	432c70 <udev_rule_apply_token_to_event+0x728>
  432c68:	mov	x8, xzr
  432c6c:	str	x8, [sp, #3712]
  432c70:	ldr	x8, [sp, #3712]
  432c74:	ldr	x9, [sp, #3984]
  432c78:	str	x8, [x9, #264]
  432c7c:	ldr	x8, [x9, #272]
  432c80:	cbz	x8, 432c98 <udev_rule_apply_token_to_event+0x750>
  432c84:	ldr	x8, [sp, #3984]
  432c88:	ldr	x9, [x8, #272]
  432c8c:	ldr	x9, [x9]
  432c90:	str	x9, [sp, #3704]
  432c94:	b	432ca0 <udev_rule_apply_token_to_event+0x758>
  432c98:	mov	x8, xzr
  432c9c:	str	x8, [sp, #3704]
  432ca0:	ldr	x8, [sp, #3704]
  432ca4:	ldr	x9, [sp, #3984]
  432ca8:	str	x8, [x9, #256]
  432cac:	mov	x8, xzr
  432cb0:	str	x8, [x9, #240]
  432cb4:	ldr	x8, [x9, #1520]
  432cb8:	str	x8, [x9, #232]
  432cbc:	mov	w10, #0x3                   	// #3
  432cc0:	str	w10, [x9, #228]
  432cc4:	ldr	w10, [x9, #440]
  432cc8:	str	w10, [x9, #224]
  432ccc:	ldr	x8, [x9, #232]
  432cd0:	cbz	x8, 432d1c <udev_rule_apply_token_to_event+0x7d4>
  432cd4:	mov	w0, #0x1                   	// #1
  432cd8:	bl	40a3f0 <log_get_max_level_realm@plt>
  432cdc:	ldr	x8, [sp, #3984]
  432ce0:	ldr	w9, [x8, #228]
  432ce4:	cmp	w0, w9
  432ce8:	cset	w9, ge  // ge = tcont
  432cec:	mov	w10, #0x1                   	// #1
  432cf0:	eor	w9, w9, #0x1
  432cf4:	eor	w9, w9, w10
  432cf8:	and	w9, w9, #0x1
  432cfc:	mov	w1, w9
  432d00:	sxtw	x11, w1
  432d04:	cbz	x11, 432d1c <udev_rule_apply_token_to_event+0x7d4>
  432d08:	ldr	x8, [sp, #3984]
  432d0c:	ldr	x0, [x8, #232]
  432d10:	add	x1, sp, #0xf, lsl #12
  432d14:	add	x1, x1, #0x368
  432d18:	bl	40a860 <sd_device_get_sysname@plt>
  432d1c:	ldr	x8, [sp, #3984]
  432d20:	ldr	w0, [x8, #228]
  432d24:	ldr	w1, [x8, #224]
  432d28:	ldr	x9, [x8, #240]
  432d2c:	mov	x10, xzr
  432d30:	cmp	x9, #0x0
  432d34:	ldr	x9, [sp, #3912]
  432d38:	csel	x5, x9, x10, ne  // ne = any
  432d3c:	ldr	x6, [x8, #240]
  432d40:	ldr	x10, [x8, #256]
  432d44:	str	w0, [sp, #3700]
  432d48:	mov	x0, x10
  432d4c:	str	w1, [sp, #3696]
  432d50:	str	x5, [sp, #3688]
  432d54:	str	x6, [sp, #3680]
  432d58:	bl	424274 <strna>
  432d5c:	ldr	x8, [sp, #3984]
  432d60:	ldr	x9, [x8, #264]
  432d64:	str	x0, [sp, #3672]
  432d68:	cbz	x9, 432d80 <udev_rule_apply_token_to_event+0x838>
  432d6c:	ldr	x8, [sp, #3984]
  432d70:	ldr	x9, [x8, #264]
  432d74:	ldr	w10, [x9, #8]
  432d78:	str	w10, [sp, #3668]
  432d7c:	b	432d88 <udev_rule_apply_token_to_event+0x840>
  432d80:	mov	w8, wzr
  432d84:	str	w8, [sp, #3668]
  432d88:	ldr	w8, [sp, #3668]
  432d8c:	ldr	w0, [sp, #3700]
  432d90:	ldr	w1, [sp, #3696]
  432d94:	ldr	x2, [sp, #3928]
  432d98:	mov	w3, #0x61d                 	// #1565
  432d9c:	ldr	x4, [sp, #3920]
  432da0:	ldr	x5, [sp, #3688]
  432da4:	ldr	x6, [sp, #3680]
  432da8:	mov	x9, xzr
  432dac:	mov	x7, x9
  432db0:	mov	x10, sp
  432db4:	str	x9, [x10]
  432db8:	mov	x9, sp
  432dbc:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  432dc0:	add	x10, x10, #0x518
  432dc4:	str	x10, [x9, #8]
  432dc8:	mov	x9, sp
  432dcc:	ldr	x10, [sp, #3672]
  432dd0:	str	x10, [x9, #16]
  432dd4:	mov	x9, sp
  432dd8:	str	w8, [x9, #24]
  432ddc:	bl	40a870 <log_object_internal@plt>
  432de0:	ldr	x9, [sp, #3984]
  432de4:	str	w0, [x9, #220]
  432de8:	ldr	w8, [x9, #220]
  432dec:	str	w8, [x9, #252]
  432df0:	ldr	w8, [x9, #252]
  432df4:	str	w8, [x9, #1540]
  432df8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432dfc:	ldr	x8, [sp, #3984]
  432e00:	ldr	x0, [x8, #1488]
  432e04:	ldr	x1, [x8, #456]
  432e08:	bl	43b764 <token_match_string>
  432e0c:	and	w9, w0, #0x1
  432e10:	ldr	x8, [sp, #3984]
  432e14:	str	w9, [x8, #1540]
  432e18:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432e1c:	ldr	x8, [sp, #3984]
  432e20:	ldr	x0, [x8, #1520]
  432e24:	bl	40aee0 <sd_device_get_devlink_first@plt>
  432e28:	ldr	x8, [sp, #3984]
  432e2c:	str	x0, [x8, #456]
  432e30:	ldr	x8, [sp, #3984]
  432e34:	ldr	x9, [x8, #456]
  432e38:	cbz	x9, 432eb8 <udev_rule_apply_token_to_event+0x970>
  432e3c:	ldr	x8, [sp, #3984]
  432e40:	ldr	x0, [x8, #1488]
  432e44:	ldr	x9, [x8, #456]
  432e48:	str	x0, [sp, #3656]
  432e4c:	mov	x0, x9
  432e50:	ldr	x1, [sp, #3896]
  432e54:	bl	4304a4 <startswith>
  432e58:	bl	43bae8 <strempty>
  432e5c:	ldr	x8, [sp, #3656]
  432e60:	str	x0, [sp, #3648]
  432e64:	mov	x0, x8
  432e68:	ldr	x1, [sp, #3648]
  432e6c:	bl	43b764 <token_match_string>
  432e70:	tbnz	w0, #0, 432e78 <udev_rule_apply_token_to_event+0x930>
  432e74:	b	432ea0 <udev_rule_apply_token_to_event+0x958>
  432e78:	ldr	x8, [sp, #3984]
  432e7c:	ldr	x9, [x8, #1488]
  432e80:	ldr	w10, [x9]
  432e84:	lsl	w10, w10, #16
  432e88:	asr	w10, w10, #24
  432e8c:	cmp	w10, #0x0
  432e90:	cset	w10, eq  // eq = none
  432e94:	and	w10, w10, #0x1
  432e98:	str	w10, [x8, #1540]
  432e9c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432ea0:	ldr	x8, [sp, #3984]
  432ea4:	ldr	x0, [x8, #1520]
  432ea8:	bl	40af00 <sd_device_get_devlink_next@plt>
  432eac:	ldr	x8, [sp, #3984]
  432eb0:	str	x0, [x8, #456]
  432eb4:	b	432e30 <udev_rule_apply_token_to_event+0x8e8>
  432eb8:	ldr	x8, [sp, #3984]
  432ebc:	ldr	x9, [x8, #1488]
  432ec0:	ldr	w10, [x9]
  432ec4:	lsl	w10, w10, #16
  432ec8:	asr	w10, w10, #24
  432ecc:	cmp	w10, #0x1
  432ed0:	cset	w10, eq  // eq = none
  432ed4:	and	w10, w10, #0x1
  432ed8:	str	w10, [x8, #1540]
  432edc:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432ee0:	ldr	x8, [sp, #3984]
  432ee4:	ldr	x0, [x8, #1488]
  432ee8:	ldr	x9, [x8, #1512]
  432eec:	ldr	x1, [x9, #24]
  432ef0:	bl	43b764 <token_match_string>
  432ef4:	and	w10, w0, #0x1
  432ef8:	ldr	x8, [sp, #3984]
  432efc:	str	w10, [x8, #1540]
  432f00:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432f04:	ldr	x8, [sp, #3984]
  432f08:	ldr	x0, [x8, #1520]
  432f0c:	ldr	x9, [x8, #1488]
  432f10:	ldr	x1, [x9, #16]
  432f14:	add	x2, sp, #0xf, lsl #12
  432f18:	add	x2, x2, #0x440
  432f1c:	bl	40aa40 <sd_device_get_property_value@plt>
  432f20:	cmp	w0, #0x0
  432f24:	cset	w10, ge  // ge = tcont
  432f28:	tbnz	w10, #0, 432f48 <udev_rule_apply_token_to_event+0xa00>
  432f2c:	ldr	x8, [sp, #3984]
  432f30:	ldr	x0, [x8, #1496]
  432f34:	ldr	x9, [x8, #1488]
  432f38:	ldr	x1, [x9, #16]
  432f3c:	bl	431f00 <hashmap_get>
  432f40:	ldr	x8, [sp, #3984]
  432f44:	str	x0, [x8, #456]
  432f48:	ldr	x8, [sp, #3984]
  432f4c:	ldr	x0, [x8, #1488]
  432f50:	ldr	x1, [x8, #456]
  432f54:	bl	43b764 <token_match_string>
  432f58:	and	w9, w0, #0x1
  432f5c:	ldr	x8, [sp, #3984]
  432f60:	str	w9, [x8, #1540]
  432f64:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  432f68:	ldr	x8, [sp, #3984]
  432f6c:	ldr	x9, [x8, #1488]
  432f70:	ldr	x9, [x9, #16]
  432f74:	str	x9, [x8, #208]
  432f78:	ldr	x0, [x8, #208]
  432f7c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  432f80:	add	x1, x1, #0xaf6
  432f84:	bl	40aa20 <strcmp@plt>
  432f88:	cbnz	w0, 432fa0 <udev_rule_apply_token_to_event+0xa58>
  432f8c:	bl	40b370 <uname_architecture@plt>
  432f90:	bl	40b380 <architecture_to_string@plt>
  432f94:	ldr	x8, [sp, #3984]
  432f98:	str	x0, [x8, #456]
  432f9c:	b	432fe8 <udev_rule_apply_token_to_event+0xaa0>
  432fa0:	ldr	x8, [sp, #3984]
  432fa4:	ldr	x0, [x8, #208]
  432fa8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  432fac:	add	x1, x1, #0xafb
  432fb0:	bl	40aa20 <strcmp@plt>
  432fb4:	cbnz	w0, 432fcc <udev_rule_apply_token_to_event+0xa84>
  432fb8:	bl	40b390 <detect_virtualization@plt>
  432fbc:	bl	40b3a0 <virtualization_to_string@plt>
  432fc0:	ldr	x8, [sp, #3984]
  432fc4:	str	x0, [x8, #456]
  432fc8:	b	432fe8 <udev_rule_apply_token_to_event+0xaa0>
  432fcc:	mov	w0, #0x1                   	// #1
  432fd0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  432fd4:	add	x1, x1, #0x53e
  432fd8:	ldr	x2, [sp, #3928]
  432fdc:	mov	w3, #0x634                 	// #1588
  432fe0:	ldr	x4, [sp, #3880]
  432fe4:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  432fe8:	ldr	x8, [sp, #3984]
  432fec:	ldr	x0, [x8, #1488]
  432ff0:	ldr	x1, [x8, #456]
  432ff4:	bl	43b764 <token_match_string>
  432ff8:	and	w9, w0, #0x1
  432ffc:	ldr	x8, [sp, #3984]
  433000:	str	w9, [x8, #1540]
  433004:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433008:	ldr	x8, [sp, #3984]
  43300c:	ldr	x0, [x8, #1520]
  433010:	bl	40b3b0 <sd_device_get_tag_first@plt>
  433014:	ldr	x8, [sp, #3984]
  433018:	str	x0, [x8, #456]
  43301c:	ldr	x8, [sp, #3984]
  433020:	ldr	x9, [x8, #456]
  433024:	cbz	x9, 433080 <udev_rule_apply_token_to_event+0xb38>
  433028:	ldr	x8, [sp, #3984]
  43302c:	ldr	x0, [x8, #1488]
  433030:	ldr	x1, [x8, #456]
  433034:	bl	43b764 <token_match_string>
  433038:	tbnz	w0, #0, 433040 <udev_rule_apply_token_to_event+0xaf8>
  43303c:	b	433068 <udev_rule_apply_token_to_event+0xb20>
  433040:	ldr	x8, [sp, #3984]
  433044:	ldr	x9, [x8, #1488]
  433048:	ldr	w10, [x9]
  43304c:	lsl	w10, w10, #16
  433050:	asr	w10, w10, #24
  433054:	cmp	w10, #0x0
  433058:	cset	w10, eq  // eq = none
  43305c:	and	w10, w10, #0x1
  433060:	str	w10, [x8, #1540]
  433064:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433068:	ldr	x8, [sp, #3984]
  43306c:	ldr	x0, [x8, #1520]
  433070:	bl	40b3c0 <sd_device_get_tag_next@plt>
  433074:	ldr	x8, [sp, #3984]
  433078:	str	x0, [x8, #456]
  43307c:	b	43301c <udev_rule_apply_token_to_event+0xad4>
  433080:	ldr	x8, [sp, #3984]
  433084:	ldr	x9, [x8, #1488]
  433088:	ldr	w10, [x9]
  43308c:	lsl	w10, w10, #16
  433090:	asr	w10, w10, #24
  433094:	cmp	w10, #0x1
  433098:	cset	w10, eq  // eq = none
  43309c:	and	w10, w10, #0x1
  4330a0:	str	w10, [x8, #1540]
  4330a4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4330a8:	ldr	x8, [sp, #3984]
  4330ac:	ldr	x0, [x8, #1520]
  4330b0:	add	x1, sp, #0xf, lsl #12
  4330b4:	add	x1, x1, #0x440
  4330b8:	bl	40aa10 <sd_device_get_subsystem@plt>
  4330bc:	ldr	x8, [sp, #3984]
  4330c0:	str	w0, [x8, #440]
  4330c4:	ldr	w9, [x8, #440]
  4330c8:	mov	w10, #0xfffffffe            	// #-2
  4330cc:	cmp	w9, w10
  4330d0:	b.ne	4330e4 <udev_rule_apply_token_to_event+0xb9c>  // b.any
  4330d4:	mov	x8, xzr
  4330d8:	ldr	x9, [sp, #3984]
  4330dc:	str	x8, [x9, #456]
  4330e0:	b	4332e4 <udev_rule_apply_token_to_event+0xd9c>
  4330e4:	ldr	x8, [sp, #3984]
  4330e8:	ldr	w9, [x8, #440]
  4330ec:	cmp	w9, #0x0
  4330f0:	cset	w9, ge  // ge = tcont
  4330f4:	tbnz	w9, #0, 4332e4 <udev_rule_apply_token_to_event+0xd9c>
  4330f8:	ldr	x8, [sp, #3984]
  4330fc:	ldr	x9, [x8, #1528]
  433100:	str	x9, [x8, #200]
  433104:	ldr	x9, [x8, #200]
  433108:	cbz	x9, 433120 <udev_rule_apply_token_to_event+0xbd8>
  43310c:	ldr	x8, [sp, #3984]
  433110:	ldr	x9, [x8, #200]
  433114:	ldr	x9, [x9, #32]
  433118:	str	x9, [sp, #3640]
  43311c:	b	433128 <udev_rule_apply_token_to_event+0xbe0>
  433120:	mov	x8, xzr
  433124:	str	x8, [sp, #3640]
  433128:	ldr	x8, [sp, #3640]
  43312c:	ldr	x9, [sp, #3984]
  433130:	str	x8, [x9, #192]
  433134:	ldr	x8, [x9, #192]
  433138:	cbz	x8, 433150 <udev_rule_apply_token_to_event+0xc08>
  43313c:	ldr	x8, [sp, #3984]
  433140:	ldr	x9, [x8, #192]
  433144:	ldr	x9, [x9, #8]
  433148:	str	x9, [sp, #3632]
  43314c:	b	433158 <udev_rule_apply_token_to_event+0xc10>
  433150:	mov	x8, xzr
  433154:	str	x8, [sp, #3632]
  433158:	ldr	x8, [sp, #3632]
  43315c:	ldr	x9, [sp, #3984]
  433160:	str	x8, [x9, #184]
  433164:	ldr	x8, [x9, #192]
  433168:	cbz	x8, 433180 <udev_rule_apply_token_to_event+0xc38>
  43316c:	ldr	x8, [sp, #3984]
  433170:	ldr	x9, [x8, #192]
  433174:	ldr	x9, [x9]
  433178:	str	x9, [sp, #3624]
  43317c:	b	433188 <udev_rule_apply_token_to_event+0xc40>
  433180:	mov	x8, xzr
  433184:	str	x8, [sp, #3624]
  433188:	ldr	x8, [sp, #3624]
  43318c:	ldr	x9, [sp, #3984]
  433190:	str	x8, [x9, #176]
  433194:	mov	x8, xzr
  433198:	str	x8, [x9, #160]
  43319c:	ldr	x8, [x9, #1520]
  4331a0:	str	x8, [x9, #152]
  4331a4:	mov	w10, #0x3                   	// #3
  4331a8:	str	w10, [x9, #148]
  4331ac:	ldr	w10, [x9, #440]
  4331b0:	str	w10, [x9, #144]
  4331b4:	ldr	x8, [x9, #152]
  4331b8:	cbz	x8, 433204 <udev_rule_apply_token_to_event+0xcbc>
  4331bc:	mov	w0, #0x1                   	// #1
  4331c0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4331c4:	ldr	x8, [sp, #3984]
  4331c8:	ldr	w9, [x8, #148]
  4331cc:	cmp	w0, w9
  4331d0:	cset	w9, ge  // ge = tcont
  4331d4:	mov	w10, #0x1                   	// #1
  4331d8:	eor	w9, w9, #0x1
  4331dc:	eor	w9, w9, w10
  4331e0:	and	w9, w9, #0x1
  4331e4:	mov	w1, w9
  4331e8:	sxtw	x11, w1
  4331ec:	cbz	x11, 433204 <udev_rule_apply_token_to_event+0xcbc>
  4331f0:	ldr	x8, [sp, #3984]
  4331f4:	ldr	x0, [x8, #152]
  4331f8:	add	x1, sp, #0xf, lsl #12
  4331fc:	add	x1, x1, #0x318
  433200:	bl	40a860 <sd_device_get_sysname@plt>
  433204:	ldr	x8, [sp, #3984]
  433208:	ldr	w0, [x8, #148]
  43320c:	ldr	w1, [x8, #144]
  433210:	ldr	x9, [x8, #160]
  433214:	mov	x10, xzr
  433218:	cmp	x9, #0x0
  43321c:	ldr	x9, [sp, #3912]
  433220:	csel	x5, x9, x10, ne  // ne = any
  433224:	ldr	x6, [x8, #160]
  433228:	ldr	x10, [x8, #176]
  43322c:	str	w0, [sp, #3620]
  433230:	mov	x0, x10
  433234:	str	w1, [sp, #3616]
  433238:	str	x5, [sp, #3608]
  43323c:	str	x6, [sp, #3600]
  433240:	bl	424274 <strna>
  433244:	ldr	x8, [sp, #3984]
  433248:	ldr	x9, [x8, #184]
  43324c:	str	x0, [sp, #3592]
  433250:	cbz	x9, 433268 <udev_rule_apply_token_to_event+0xd20>
  433254:	ldr	x8, [sp, #3984]
  433258:	ldr	x9, [x8, #184]
  43325c:	ldr	w10, [x9, #8]
  433260:	str	w10, [sp, #3588]
  433264:	b	433270 <udev_rule_apply_token_to_event+0xd28>
  433268:	mov	w8, wzr
  43326c:	str	w8, [sp, #3588]
  433270:	ldr	w8, [sp, #3588]
  433274:	ldr	w0, [sp, #3620]
  433278:	ldr	w1, [sp, #3616]
  43327c:	ldr	x2, [sp, #3928]
  433280:	mov	w3, #0x643                 	// #1603
  433284:	ldr	x4, [sp, #3920]
  433288:	ldr	x5, [sp, #3608]
  43328c:	ldr	x6, [sp, #3600]
  433290:	mov	x9, xzr
  433294:	mov	x7, x9
  433298:	mov	x10, sp
  43329c:	str	x9, [x10]
  4332a0:	mov	x9, sp
  4332a4:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4332a8:	add	x10, x10, #0x550
  4332ac:	str	x10, [x9, #8]
  4332b0:	mov	x9, sp
  4332b4:	ldr	x10, [sp, #3592]
  4332b8:	str	x10, [x9, #16]
  4332bc:	mov	x9, sp
  4332c0:	str	w8, [x9, #24]
  4332c4:	bl	40a870 <log_object_internal@plt>
  4332c8:	ldr	x9, [sp, #3984]
  4332cc:	str	w0, [x9, #140]
  4332d0:	ldr	w8, [x9, #140]
  4332d4:	str	w8, [x9, #172]
  4332d8:	ldr	w8, [x9, #172]
  4332dc:	str	w8, [x9, #1540]
  4332e0:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4332e4:	ldr	x8, [sp, #3984]
  4332e8:	ldr	x0, [x8, #1488]
  4332ec:	ldr	x1, [x8, #456]
  4332f0:	bl	43b764 <token_match_string>
  4332f4:	and	w9, w0, #0x1
  4332f8:	ldr	x8, [sp, #3984]
  4332fc:	str	w9, [x8, #1540]
  433300:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433304:	ldr	x8, [sp, #3984]
  433308:	ldr	x0, [x8, #1520]
  43330c:	add	x1, sp, #0xf, lsl #12
  433310:	add	x1, x1, #0x440
  433314:	bl	40ae60 <sd_device_get_driver@plt>
  433318:	ldr	x8, [sp, #3984]
  43331c:	str	w0, [x8, #440]
  433320:	ldr	w9, [x8, #440]
  433324:	mov	w10, #0xfffffffe            	// #-2
  433328:	cmp	w9, w10
  43332c:	b.ne	433340 <udev_rule_apply_token_to_event+0xdf8>  // b.any
  433330:	mov	x8, xzr
  433334:	ldr	x9, [sp, #3984]
  433338:	str	x8, [x9, #456]
  43333c:	b	433540 <udev_rule_apply_token_to_event+0xff8>
  433340:	ldr	x8, [sp, #3984]
  433344:	ldr	w9, [x8, #440]
  433348:	cmp	w9, #0x0
  43334c:	cset	w9, ge  // ge = tcont
  433350:	tbnz	w9, #0, 433540 <udev_rule_apply_token_to_event+0xff8>
  433354:	ldr	x8, [sp, #3984]
  433358:	ldr	x9, [x8, #1528]
  43335c:	str	x9, [x8, #128]
  433360:	ldr	x9, [x8, #128]
  433364:	cbz	x9, 43337c <udev_rule_apply_token_to_event+0xe34>
  433368:	ldr	x8, [sp, #3984]
  43336c:	ldr	x9, [x8, #128]
  433370:	ldr	x9, [x9, #32]
  433374:	str	x9, [sp, #3576]
  433378:	b	433384 <udev_rule_apply_token_to_event+0xe3c>
  43337c:	mov	x8, xzr
  433380:	str	x8, [sp, #3576]
  433384:	ldr	x8, [sp, #3576]
  433388:	ldr	x9, [sp, #3984]
  43338c:	str	x8, [x9, #120]
  433390:	ldr	x8, [x9, #120]
  433394:	cbz	x8, 4333ac <udev_rule_apply_token_to_event+0xe64>
  433398:	ldr	x8, [sp, #3984]
  43339c:	ldr	x9, [x8, #120]
  4333a0:	ldr	x9, [x9, #8]
  4333a4:	str	x9, [sp, #3568]
  4333a8:	b	4333b4 <udev_rule_apply_token_to_event+0xe6c>
  4333ac:	mov	x8, xzr
  4333b0:	str	x8, [sp, #3568]
  4333b4:	ldr	x8, [sp, #3568]
  4333b8:	ldr	x9, [sp, #3984]
  4333bc:	str	x8, [x9, #112]
  4333c0:	ldr	x8, [x9, #120]
  4333c4:	cbz	x8, 4333dc <udev_rule_apply_token_to_event+0xe94>
  4333c8:	ldr	x8, [sp, #3984]
  4333cc:	ldr	x9, [x8, #120]
  4333d0:	ldr	x9, [x9]
  4333d4:	str	x9, [sp, #3560]
  4333d8:	b	4333e4 <udev_rule_apply_token_to_event+0xe9c>
  4333dc:	mov	x8, xzr
  4333e0:	str	x8, [sp, #3560]
  4333e4:	ldr	x8, [sp, #3560]
  4333e8:	ldr	x9, [sp, #3984]
  4333ec:	str	x8, [x9, #104]
  4333f0:	mov	x8, xzr
  4333f4:	str	x8, [x9, #88]
  4333f8:	ldr	x8, [x9, #1520]
  4333fc:	str	x8, [x9, #80]
  433400:	mov	w10, #0x3                   	// #3
  433404:	str	w10, [x9, #76]
  433408:	ldr	w10, [x9, #440]
  43340c:	str	w10, [x9, #72]
  433410:	ldr	x8, [x9, #80]
  433414:	cbz	x8, 433460 <udev_rule_apply_token_to_event+0xf18>
  433418:	mov	w0, #0x1                   	// #1
  43341c:	bl	40a3f0 <log_get_max_level_realm@plt>
  433420:	ldr	x8, [sp, #3984]
  433424:	ldr	w9, [x8, #76]
  433428:	cmp	w0, w9
  43342c:	cset	w9, ge  // ge = tcont
  433430:	mov	w10, #0x1                   	// #1
  433434:	eor	w9, w9, #0x1
  433438:	eor	w9, w9, w10
  43343c:	and	w9, w9, #0x1
  433440:	mov	w1, w9
  433444:	sxtw	x11, w1
  433448:	cbz	x11, 433460 <udev_rule_apply_token_to_event+0xf18>
  43344c:	ldr	x8, [sp, #3984]
  433450:	ldr	x0, [x8, #80]
  433454:	add	x1, sp, #0xf, lsl #12
  433458:	add	x1, x1, #0x2d0
  43345c:	bl	40a860 <sd_device_get_sysname@plt>
  433460:	ldr	x8, [sp, #3984]
  433464:	ldr	w0, [x8, #76]
  433468:	ldr	w1, [x8, #72]
  43346c:	ldr	x9, [x8, #88]
  433470:	mov	x10, xzr
  433474:	cmp	x9, #0x0
  433478:	ldr	x9, [sp, #3912]
  43347c:	csel	x5, x9, x10, ne  // ne = any
  433480:	ldr	x6, [x8, #88]
  433484:	ldr	x10, [x8, #104]
  433488:	str	w0, [sp, #3556]
  43348c:	mov	x0, x10
  433490:	str	w1, [sp, #3552]
  433494:	str	x5, [sp, #3544]
  433498:	str	x6, [sp, #3536]
  43349c:	bl	424274 <strna>
  4334a0:	ldr	x8, [sp, #3984]
  4334a4:	ldr	x9, [x8, #112]
  4334a8:	str	x0, [sp, #3528]
  4334ac:	cbz	x9, 4334c4 <udev_rule_apply_token_to_event+0xf7c>
  4334b0:	ldr	x8, [sp, #3984]
  4334b4:	ldr	x9, [x8, #112]
  4334b8:	ldr	w10, [x9, #8]
  4334bc:	str	w10, [sp, #3524]
  4334c0:	b	4334cc <udev_rule_apply_token_to_event+0xf84>
  4334c4:	mov	w8, wzr
  4334c8:	str	w8, [sp, #3524]
  4334cc:	ldr	w8, [sp, #3524]
  4334d0:	ldr	w0, [sp, #3556]
  4334d4:	ldr	w1, [sp, #3552]
  4334d8:	ldr	x2, [sp, #3928]
  4334dc:	mov	w3, #0x64c                 	// #1612
  4334e0:	ldr	x4, [sp, #3920]
  4334e4:	ldr	x5, [sp, #3544]
  4334e8:	ldr	x6, [sp, #3536]
  4334ec:	mov	x9, xzr
  4334f0:	mov	x7, x9
  4334f4:	mov	x10, sp
  4334f8:	str	x9, [x10]
  4334fc:	mov	x9, sp
  433500:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  433504:	add	x10, x10, #0x572
  433508:	str	x10, [x9, #8]
  43350c:	mov	x9, sp
  433510:	ldr	x10, [sp, #3528]
  433514:	str	x10, [x9, #16]
  433518:	mov	x9, sp
  43351c:	str	w8, [x9, #24]
  433520:	bl	40a870 <log_object_internal@plt>
  433524:	ldr	x9, [sp, #3984]
  433528:	str	w0, [x9, #68]
  43352c:	ldr	w8, [x9, #68]
  433530:	str	w8, [x9, #100]
  433534:	ldr	w8, [x9, #100]
  433538:	str	w8, [x9, #1540]
  43353c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433540:	ldr	x8, [sp, #3984]
  433544:	ldr	x0, [x8, #1488]
  433548:	ldr	x1, [x8, #456]
  43354c:	bl	43b764 <token_match_string>
  433550:	and	w9, w0, #0x1
  433554:	ldr	x8, [sp, #3984]
  433558:	str	w9, [x8, #1540]
  43355c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433560:	ldr	x8, [sp, #3984]
  433564:	ldr	x0, [x8, #1488]
  433568:	ldr	x1, [x8, #1520]
  43356c:	ldr	x2, [x8, #1512]
  433570:	bl	43bb24 <token_match_attr>
  433574:	and	w9, w0, #0x1
  433578:	ldr	x8, [sp, #3984]
  43357c:	str	w9, [x8, #1540]
  433580:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433584:	add	x1, sp, #0xf, lsl #12
  433588:	add	x1, x1, #0x2b0
  43358c:	mov	x8, xzr
  433590:	ldr	x9, [sp, #3984]
  433594:	str	x8, [x9, #56]
  433598:	ldr	x0, [x9, #1512]
  43359c:	ldr	x8, [x9, #1488]
  4335a0:	ldr	x8, [x8, #16]
  4335a4:	str	x1, [sp, #3512]
  4335a8:	mov	x1, x8
  4335ac:	add	x8, sp, #0xf, lsl #12
  4335b0:	add	x8, x8, #0x448
  4335b4:	mov	x2, x8
  4335b8:	mov	x3, #0x400                 	// #1024
  4335bc:	mov	w10, wzr
  4335c0:	and	w4, w10, #0x1
  4335c4:	str	x8, [sp, #3504]
  4335c8:	bl	4183c0 <udev_event_apply_format>
  4335cc:	ldr	x8, [sp, #3504]
  4335d0:	mov	x0, x8
  4335d4:	bl	40b3d0 <sysctl_normalize@plt>
  4335d8:	ldr	x1, [sp, #3512]
  4335dc:	bl	40b3e0 <sysctl_read@plt>
  4335e0:	ldr	x8, [sp, #3984]
  4335e4:	str	w0, [x8, #440]
  4335e8:	ldr	w10, [x8, #440]
  4335ec:	cmp	w10, #0x0
  4335f0:	cset	w10, ge  // ge = tcont
  4335f4:	tbnz	w10, #0, 43381c <udev_rule_apply_token_to_event+0x12d4>
  4335f8:	ldr	x8, [sp, #3984]
  4335fc:	ldr	w9, [x8, #440]
  433600:	mov	w10, #0xfffffffe            	// #-2
  433604:	cmp	w9, w10
  433608:	b.eq	43381c <udev_rule_apply_token_to_event+0x12d4>  // b.none
  43360c:	ldr	x8, [sp, #3984]
  433610:	ldr	x9, [x8, #1528]
  433614:	str	x9, [x8, #48]
  433618:	ldr	x9, [x8, #48]
  43361c:	cbz	x9, 433634 <udev_rule_apply_token_to_event+0x10ec>
  433620:	ldr	x8, [sp, #3984]
  433624:	ldr	x9, [x8, #48]
  433628:	ldr	x9, [x9, #32]
  43362c:	str	x9, [sp, #3496]
  433630:	b	43363c <udev_rule_apply_token_to_event+0x10f4>
  433634:	mov	x8, xzr
  433638:	str	x8, [sp, #3496]
  43363c:	ldr	x8, [sp, #3496]
  433640:	ldr	x9, [sp, #3984]
  433644:	str	x8, [x9, #40]
  433648:	ldr	x8, [x9, #40]
  43364c:	cbz	x8, 433664 <udev_rule_apply_token_to_event+0x111c>
  433650:	ldr	x8, [sp, #3984]
  433654:	ldr	x9, [x8, #40]
  433658:	ldr	x9, [x9, #8]
  43365c:	str	x9, [sp, #3488]
  433660:	b	43366c <udev_rule_apply_token_to_event+0x1124>
  433664:	mov	x8, xzr
  433668:	str	x8, [sp, #3488]
  43366c:	ldr	x8, [sp, #3488]
  433670:	ldr	x9, [sp, #3984]
  433674:	str	x8, [x9, #32]
  433678:	ldr	x8, [x9, #40]
  43367c:	cbz	x8, 433694 <udev_rule_apply_token_to_event+0x114c>
  433680:	ldr	x8, [sp, #3984]
  433684:	ldr	x9, [x8, #40]
  433688:	ldr	x9, [x9]
  43368c:	str	x9, [sp, #3480]
  433690:	b	43369c <udev_rule_apply_token_to_event+0x1154>
  433694:	mov	x8, xzr
  433698:	str	x8, [sp, #3480]
  43369c:	ldr	x8, [sp, #3480]
  4336a0:	ldr	x9, [sp, #3984]
  4336a4:	str	x8, [x9, #24]
  4336a8:	mov	x8, xzr
  4336ac:	str	x8, [x9, #8]
  4336b0:	ldr	x8, [x9, #1520]
  4336b4:	str	x8, [x9]
  4336b8:	mov	w10, #0x3                   	// #3
  4336bc:	ldr	x8, [sp, #3976]
  4336c0:	str	w10, [x8, #1312]
  4336c4:	ldr	w10, [x9, #440]
  4336c8:	str	w10, [x8, #1308]
  4336cc:	ldr	x11, [x9]
  4336d0:	cbz	x11, 43371c <udev_rule_apply_token_to_event+0x11d4>
  4336d4:	mov	w0, #0x1                   	// #1
  4336d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4336dc:	ldr	x8, [sp, #3976]
  4336e0:	ldr	w9, [x8, #1312]
  4336e4:	cmp	w0, w9
  4336e8:	cset	w9, ge  // ge = tcont
  4336ec:	mov	w10, #0x1                   	// #1
  4336f0:	eor	w9, w9, #0x1
  4336f4:	eor	w9, w9, w10
  4336f8:	and	w9, w9, #0x1
  4336fc:	mov	w1, w9
  433700:	sxtw	x11, w1
  433704:	cbz	x11, 43371c <udev_rule_apply_token_to_event+0x11d4>
  433708:	ldr	x8, [sp, #3984]
  43370c:	ldr	x0, [x8]
  433710:	add	x1, sp, #0xf, lsl #12
  433714:	add	x1, x1, #0x280
  433718:	bl	40a860 <sd_device_get_sysname@plt>
  43371c:	ldr	x8, [sp, #3976]
  433720:	ldr	w0, [x8, #1312]
  433724:	ldr	w1, [x8, #1308]
  433728:	ldr	x9, [sp, #3984]
  43372c:	ldr	x10, [x9, #8]
  433730:	mov	x11, xzr
  433734:	cmp	x10, #0x0
  433738:	ldr	x10, [sp, #3912]
  43373c:	csel	x5, x10, x11, ne  // ne = any
  433740:	ldr	x6, [x9, #8]
  433744:	ldr	x11, [x9, #24]
  433748:	str	w0, [sp, #3476]
  43374c:	mov	x0, x11
  433750:	str	w1, [sp, #3472]
  433754:	str	x5, [sp, #3464]
  433758:	str	x6, [sp, #3456]
  43375c:	bl	424274 <strna>
  433760:	ldr	x8, [sp, #3984]
  433764:	ldr	x9, [x8, #32]
  433768:	str	x0, [sp, #3448]
  43376c:	cbz	x9, 433784 <udev_rule_apply_token_to_event+0x123c>
  433770:	ldr	x8, [sp, #3984]
  433774:	ldr	x9, [x8, #32]
  433778:	ldr	w10, [x9, #8]
  43377c:	str	w10, [sp, #3444]
  433780:	b	43378c <udev_rule_apply_token_to_event+0x1244>
  433784:	mov	w8, wzr
  433788:	str	w8, [sp, #3444]
  43378c:	ldr	w8, [sp, #3444]
  433790:	ldr	w0, [sp, #3476]
  433794:	ldr	w1, [sp, #3472]
  433798:	ldr	x2, [sp, #3928]
  43379c:	mov	w3, #0x658                 	// #1624
  4337a0:	ldr	x4, [sp, #3920]
  4337a4:	ldr	x5, [sp, #3464]
  4337a8:	ldr	x6, [sp, #3456]
  4337ac:	mov	x9, xzr
  4337b0:	mov	x7, x9
  4337b4:	mov	x10, sp
  4337b8:	str	x9, [x10]
  4337bc:	mov	x9, sp
  4337c0:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4337c4:	add	x10, x10, #0x591
  4337c8:	str	x10, [x9, #8]
  4337cc:	mov	x9, sp
  4337d0:	ldr	x10, [sp, #3448]
  4337d4:	str	x10, [x9, #16]
  4337d8:	mov	x9, sp
  4337dc:	str	w8, [x9, #24]
  4337e0:	mov	x9, sp
  4337e4:	add	x11, sp, #0xf, lsl #12
  4337e8:	add	x11, x11, #0x448
  4337ec:	str	x11, [x9, #32]
  4337f0:	bl	40a870 <log_object_internal@plt>
  4337f4:	ldr	x9, [sp, #3976]
  4337f8:	str	w0, [x9, #1304]
  4337fc:	ldr	w8, [x9, #1304]
  433800:	ldr	x10, [sp, #3984]
  433804:	str	w8, [x10, #20]
  433808:	ldr	w8, [x10, #20]
  43380c:	str	w8, [x10, #1540]
  433810:	mov	w8, #0x1                   	// #1
  433814:	str	w8, [x9, #1300]
  433818:	b	433860 <udev_rule_apply_token_to_event+0x1318>
  43381c:	ldr	x8, [sp, #3984]
  433820:	ldr	x0, [x8, #1488]
  433824:	ldr	x9, [x8, #56]
  433828:	str	x0, [sp, #3432]
  43382c:	mov	x0, x9
  433830:	bl	40b3f0 <strstrip@plt>
  433834:	ldr	x8, [sp, #3432]
  433838:	str	x0, [sp, #3424]
  43383c:	mov	x0, x8
  433840:	ldr	x1, [sp, #3424]
  433844:	bl	43b764 <token_match_string>
  433848:	and	w10, w0, #0x1
  43384c:	ldr	x8, [sp, #3984]
  433850:	str	w10, [x8, #1540]
  433854:	mov	w10, #0x1                   	// #1
  433858:	ldr	x9, [sp, #3976]
  43385c:	str	w10, [x9, #1300]
  433860:	add	x0, sp, #0xf, lsl #12
  433864:	add	x0, x0, #0x2b0
  433868:	bl	4230c8 <freep>
  43386c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433870:	ldr	x8, [sp, #3984]
  433874:	ldr	x9, [x8, #1488]
  433878:	ldr	x9, [x9, #16]
  43387c:	subs	x9, x9, #0x1
  433880:	ldr	x10, [sp, #3976]
  433884:	str	w9, [x10, #1296]
  433888:	ldr	x0, [x8, #1512]
  43388c:	ldr	x11, [x8, #1488]
  433890:	ldr	x1, [x11, #8]
  433894:	add	x11, sp, #0xf, lsl #12
  433898:	add	x11, x11, #0x448
  43389c:	mov	x2, x11
  4338a0:	mov	x3, #0x400                 	// #1024
  4338a4:	mov	w9, wzr
  4338a8:	and	w4, w9, #0x1
  4338ac:	str	x11, [sp, #3416]
  4338b0:	bl	4183c0 <udev_event_apply_format>
  4338b4:	ldr	x8, [sp, #3416]
  4338b8:	mov	x0, x8
  4338bc:	bl	40af40 <path_is_absolute@plt>
  4338c0:	tbnz	w0, #0, 433b6c <udev_rule_apply_token_to_event+0x1624>
  4338c4:	add	x8, sp, #0xf, lsl #12
  4338c8:	add	x8, x8, #0x448
  4338cc:	mov	x0, x8
  4338d0:	mov	x1, x8
  4338d4:	mov	x2, #0x400                 	// #1024
  4338d8:	mov	w9, wzr
  4338dc:	and	w3, w9, #0x1
  4338e0:	bl	40aea0 <util_resolve_subsys_kernel@plt>
  4338e4:	cmp	w0, #0x0
  4338e8:	cset	w9, ge  // ge = tcont
  4338ec:	tbnz	w9, #0, 433b6c <udev_rule_apply_token_to_event+0x1624>
  4338f0:	ldr	x8, [sp, #3984]
  4338f4:	ldr	x0, [x8, #1520]
  4338f8:	add	x1, sp, #0xf, lsl #12
  4338fc:	add	x1, x1, #0x440
  433900:	bl	40abf0 <sd_device_get_syspath@plt>
  433904:	ldr	x8, [sp, #3984]
  433908:	str	w0, [x8, #440]
  43390c:	ldr	w9, [x8, #440]
  433910:	cmp	w9, #0x0
  433914:	cset	w9, ge  // ge = tcont
  433918:	tbnz	w9, #0, 433b14 <udev_rule_apply_token_to_event+0x15cc>
  43391c:	ldr	x8, [sp, #3984]
  433920:	ldr	x9, [x8, #1528]
  433924:	ldr	x10, [sp, #3976]
  433928:	stur	x9, [x10, #132]
  43392c:	ldur	x9, [x10, #132]
  433930:	cbz	x9, 433948 <udev_rule_apply_token_to_event+0x1400>
  433934:	ldr	x8, [sp, #3976]
  433938:	ldur	x9, [x8, #132]
  43393c:	ldr	x9, [x9, #32]
  433940:	str	x9, [sp, #3408]
  433944:	b	433950 <udev_rule_apply_token_to_event+0x1408>
  433948:	mov	x8, xzr
  43394c:	str	x8, [sp, #3408]
  433950:	ldr	x8, [sp, #3408]
  433954:	ldr	x9, [sp, #3976]
  433958:	stur	x8, [x9, #124]
  43395c:	ldur	x8, [x9, #124]
  433960:	cbz	x8, 433978 <udev_rule_apply_token_to_event+0x1430>
  433964:	ldr	x8, [sp, #3976]
  433968:	ldur	x9, [x8, #124]
  43396c:	ldr	x9, [x9, #8]
  433970:	str	x9, [sp, #3400]
  433974:	b	433980 <udev_rule_apply_token_to_event+0x1438>
  433978:	mov	x8, xzr
  43397c:	str	x8, [sp, #3400]
  433980:	ldr	x8, [sp, #3400]
  433984:	ldr	x9, [sp, #3976]
  433988:	stur	x8, [x9, #116]
  43398c:	ldur	x8, [x9, #124]
  433990:	cbz	x8, 4339a8 <udev_rule_apply_token_to_event+0x1460>
  433994:	ldr	x8, [sp, #3976]
  433998:	ldur	x9, [x8, #124]
  43399c:	ldr	x9, [x9]
  4339a0:	str	x9, [sp, #3392]
  4339a4:	b	4339b0 <udev_rule_apply_token_to_event+0x1468>
  4339a8:	mov	x8, xzr
  4339ac:	str	x8, [sp, #3392]
  4339b0:	ldr	x8, [sp, #3392]
  4339b4:	ldr	x9, [sp, #3976]
  4339b8:	stur	x8, [x9, #108]
  4339bc:	mov	x8, xzr
  4339c0:	stur	x8, [x9, #92]
  4339c4:	ldr	x8, [sp, #3984]
  4339c8:	ldr	x10, [x8, #1520]
  4339cc:	stur	x10, [x9, #84]
  4339d0:	mov	w11, #0x3                   	// #3
  4339d4:	str	w11, [x9, #80]
  4339d8:	ldr	w11, [x8, #440]
  4339dc:	str	w11, [x9, #76]
  4339e0:	ldur	x10, [x9, #84]
  4339e4:	cbz	x10, 433a30 <udev_rule_apply_token_to_event+0x14e8>
  4339e8:	mov	w0, #0x1                   	// #1
  4339ec:	bl	40a3f0 <log_get_max_level_realm@plt>
  4339f0:	ldr	x8, [sp, #3976]
  4339f4:	ldr	w9, [x8, #80]
  4339f8:	cmp	w0, w9
  4339fc:	cset	w9, ge  // ge = tcont
  433a00:	mov	w10, #0x1                   	// #1
  433a04:	eor	w9, w9, #0x1
  433a08:	eor	w9, w9, w10
  433a0c:	and	w9, w9, #0x1
  433a10:	mov	w1, w9
  433a14:	sxtw	x11, w1
  433a18:	cbz	x11, 433a30 <udev_rule_apply_token_to_event+0x14e8>
  433a1c:	ldr	x8, [sp, #3976]
  433a20:	ldur	x0, [x8, #84]
  433a24:	add	x1, sp, #0xe, lsl #12
  433a28:	add	x1, x1, #0xdb0
  433a2c:	bl	40a860 <sd_device_get_sysname@plt>
  433a30:	ldr	x8, [sp, #3976]
  433a34:	ldr	w0, [x8, #80]
  433a38:	ldr	w1, [x8, #76]
  433a3c:	ldur	x9, [x8, #92]
  433a40:	mov	x10, xzr
  433a44:	cmp	x9, #0x0
  433a48:	ldr	x9, [sp, #3912]
  433a4c:	csel	x5, x9, x10, ne  // ne = any
  433a50:	ldur	x6, [x8, #92]
  433a54:	ldur	x10, [x8, #108]
  433a58:	str	w0, [sp, #3388]
  433a5c:	mov	x0, x10
  433a60:	str	w1, [sp, #3384]
  433a64:	str	x5, [sp, #3376]
  433a68:	str	x6, [sp, #3368]
  433a6c:	bl	424274 <strna>
  433a70:	ldr	x8, [sp, #3976]
  433a74:	ldur	x9, [x8, #116]
  433a78:	str	x0, [sp, #3360]
  433a7c:	cbz	x9, 433a94 <udev_rule_apply_token_to_event+0x154c>
  433a80:	ldr	x8, [sp, #3976]
  433a84:	ldur	x9, [x8, #116]
  433a88:	ldr	w10, [x9, #8]
  433a8c:	str	w10, [sp, #3356]
  433a90:	b	433a9c <udev_rule_apply_token_to_event+0x1554>
  433a94:	mov	w8, wzr
  433a98:	str	w8, [sp, #3356]
  433a9c:	ldr	w8, [sp, #3356]
  433aa0:	ldr	w0, [sp, #3388]
  433aa4:	ldr	w1, [sp, #3384]
  433aa8:	ldr	x2, [sp, #3928]
  433aac:	mov	w3, #0x667                 	// #1639
  433ab0:	ldr	x4, [sp, #3920]
  433ab4:	ldr	x5, [sp, #3376]
  433ab8:	ldr	x6, [sp, #3368]
  433abc:	mov	x9, xzr
  433ac0:	mov	x7, x9
  433ac4:	mov	x10, sp
  433ac8:	str	x9, [x10]
  433acc:	mov	x9, sp
  433ad0:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  433ad4:	add	x10, x10, #0x5b6
  433ad8:	str	x10, [x9, #8]
  433adc:	mov	x9, sp
  433ae0:	ldr	x10, [sp, #3360]
  433ae4:	str	x10, [x9, #16]
  433ae8:	mov	x9, sp
  433aec:	str	w8, [x9, #24]
  433af0:	bl	40a870 <log_object_internal@plt>
  433af4:	ldr	x9, [sp, #3976]
  433af8:	str	w0, [x9, #72]
  433afc:	ldr	w8, [x9, #72]
  433b00:	str	w8, [x9, #104]
  433b04:	ldr	w8, [x9, #104]
  433b08:	ldr	x10, [sp, #3984]
  433b0c:	str	w8, [x10, #1540]
  433b10:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433b14:	add	x8, sp, #0xe, lsl #12
  433b18:	add	x8, x8, #0xde0
  433b1c:	mov	x0, x8
  433b20:	mov	x9, #0x400                 	// #1024
  433b24:	mov	x1, x9
  433b28:	add	x10, sp, #0xf, lsl #12
  433b2c:	add	x10, x10, #0x448
  433b30:	mov	x2, x10
  433b34:	str	x8, [sp, #3344]
  433b38:	str	x9, [sp, #3336]
  433b3c:	str	x10, [sp, #3328]
  433b40:	bl	40adb0 <strscpy@plt>
  433b44:	ldr	x8, [sp, #3984]
  433b48:	ldr	x2, [x8, #456]
  433b4c:	ldr	x9, [sp, #3328]
  433b50:	mov	x0, x9
  433b54:	ldr	x1, [sp, #3336]
  433b58:	ldr	x3, [sp, #3904]
  433b5c:	ldr	x4, [sp, #3344]
  433b60:	mov	x10, xzr
  433b64:	mov	x5, x10
  433b68:	bl	40b400 <strscpyl@plt>
  433b6c:	add	x0, sp, #0xf, lsl #12
  433b70:	add	x0, x0, #0x448
  433b74:	bl	43bdb4 <attr_subst_subdir>
  433b78:	ldr	x8, [sp, #3984]
  433b7c:	str	w0, [x8, #440]
  433b80:	ldr	w9, [x8, #440]
  433b84:	mov	w10, #0xfffffffe            	// #-2
  433b88:	cmp	w9, w10
  433b8c:	b.ne	433bb8 <udev_rule_apply_token_to_event+0x1670>  // b.any
  433b90:	ldr	x8, [sp, #3984]
  433b94:	ldr	x9, [x8, #1488]
  433b98:	ldr	w10, [x9]
  433b9c:	lsl	w10, w10, #16
  433ba0:	asr	w10, w10, #24
  433ba4:	cmp	w10, #0x1
  433ba8:	cset	w10, eq  // eq = none
  433bac:	and	w10, w10, #0x1
  433bb0:	str	w10, [x8, #1540]
  433bb4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433bb8:	ldr	x8, [sp, #3984]
  433bbc:	ldr	w9, [x8, #440]
  433bc0:	cmp	w9, #0x0
  433bc4:	cset	w9, ge  // ge = tcont
  433bc8:	tbnz	w9, #0, 433dd4 <udev_rule_apply_token_to_event+0x188c>
  433bcc:	ldr	x8, [sp, #3984]
  433bd0:	ldr	x9, [x8, #1528]
  433bd4:	ldr	x10, [sp, #3976]
  433bd8:	stur	x9, [x10, #60]
  433bdc:	ldur	x9, [x10, #60]
  433be0:	cbz	x9, 433bf8 <udev_rule_apply_token_to_event+0x16b0>
  433be4:	ldr	x8, [sp, #3976]
  433be8:	ldur	x9, [x8, #60]
  433bec:	ldr	x9, [x9, #32]
  433bf0:	str	x9, [sp, #3320]
  433bf4:	b	433c00 <udev_rule_apply_token_to_event+0x16b8>
  433bf8:	mov	x8, xzr
  433bfc:	str	x8, [sp, #3320]
  433c00:	ldr	x8, [sp, #3320]
  433c04:	ldr	x9, [sp, #3976]
  433c08:	stur	x8, [x9, #52]
  433c0c:	ldur	x8, [x9, #52]
  433c10:	cbz	x8, 433c28 <udev_rule_apply_token_to_event+0x16e0>
  433c14:	ldr	x8, [sp, #3976]
  433c18:	ldur	x9, [x8, #52]
  433c1c:	ldr	x9, [x9, #8]
  433c20:	str	x9, [sp, #3312]
  433c24:	b	433c30 <udev_rule_apply_token_to_event+0x16e8>
  433c28:	mov	x8, xzr
  433c2c:	str	x8, [sp, #3312]
  433c30:	ldr	x8, [sp, #3312]
  433c34:	ldr	x9, [sp, #3976]
  433c38:	stur	x8, [x9, #44]
  433c3c:	ldur	x8, [x9, #52]
  433c40:	cbz	x8, 433c58 <udev_rule_apply_token_to_event+0x1710>
  433c44:	ldr	x8, [sp, #3976]
  433c48:	ldur	x9, [x8, #52]
  433c4c:	ldr	x9, [x9]
  433c50:	str	x9, [sp, #3304]
  433c54:	b	433c60 <udev_rule_apply_token_to_event+0x1718>
  433c58:	mov	x8, xzr
  433c5c:	str	x8, [sp, #3304]
  433c60:	ldr	x8, [sp, #3304]
  433c64:	ldr	x9, [sp, #3976]
  433c68:	stur	x8, [x9, #36]
  433c6c:	mov	x8, xzr
  433c70:	stur	x8, [x9, #20]
  433c74:	ldr	x8, [sp, #3984]
  433c78:	ldr	x10, [x8, #1520]
  433c7c:	stur	x10, [x9, #12]
  433c80:	mov	w11, #0x3                   	// #3
  433c84:	str	w11, [x9, #8]
  433c88:	ldr	w11, [x8, #440]
  433c8c:	str	w11, [x9, #4]
  433c90:	ldur	x10, [x9, #12]
  433c94:	cbz	x10, 433ce0 <udev_rule_apply_token_to_event+0x1798>
  433c98:	mov	w0, #0x1                   	// #1
  433c9c:	bl	40a3f0 <log_get_max_level_realm@plt>
  433ca0:	ldr	x8, [sp, #3976]
  433ca4:	ldr	w9, [x8, #8]
  433ca8:	cmp	w0, w9
  433cac:	cset	w9, ge  // ge = tcont
  433cb0:	mov	w10, #0x1                   	// #1
  433cb4:	eor	w9, w9, #0x1
  433cb8:	eor	w9, w9, w10
  433cbc:	and	w9, w9, #0x1
  433cc0:	mov	w1, w9
  433cc4:	sxtw	x11, w1
  433cc8:	cbz	x11, 433ce0 <udev_rule_apply_token_to_event+0x1798>
  433ccc:	ldr	x8, [sp, #3976]
  433cd0:	ldur	x0, [x8, #12]
  433cd4:	add	x1, sp, #0xe, lsl #12
  433cd8:	add	x1, x1, #0xd68
  433cdc:	bl	40a860 <sd_device_get_sysname@plt>
  433ce0:	ldr	x8, [sp, #3976]
  433ce4:	ldr	w0, [x8, #8]
  433ce8:	ldr	w1, [x8, #4]
  433cec:	ldur	x9, [x8, #20]
  433cf0:	mov	x10, xzr
  433cf4:	cmp	x9, #0x0
  433cf8:	ldr	x9, [sp, #3912]
  433cfc:	csel	x5, x9, x10, ne  // ne = any
  433d00:	ldur	x6, [x8, #20]
  433d04:	ldur	x10, [x8, #36]
  433d08:	str	w0, [sp, #3300]
  433d0c:	mov	x0, x10
  433d10:	str	w1, [sp, #3296]
  433d14:	str	x5, [sp, #3288]
  433d18:	str	x6, [sp, #3280]
  433d1c:	bl	424274 <strna>
  433d20:	ldr	x8, [sp, #3976]
  433d24:	ldur	x9, [x8, #44]
  433d28:	str	x0, [sp, #3272]
  433d2c:	cbz	x9, 433d44 <udev_rule_apply_token_to_event+0x17fc>
  433d30:	ldr	x8, [sp, #3976]
  433d34:	ldur	x9, [x8, #44]
  433d38:	ldr	w10, [x9, #8]
  433d3c:	str	w10, [sp, #3268]
  433d40:	b	433d4c <udev_rule_apply_token_to_event+0x1804>
  433d44:	mov	w8, wzr
  433d48:	str	w8, [sp, #3268]
  433d4c:	ldr	w8, [sp, #3268]
  433d50:	ldr	w0, [sp, #3300]
  433d54:	ldr	w1, [sp, #3296]
  433d58:	ldr	x2, [sp, #3928]
  433d5c:	mov	w3, #0x671                 	// #1649
  433d60:	ldr	x4, [sp, #3920]
  433d64:	ldr	x5, [sp, #3288]
  433d68:	ldr	x6, [sp, #3280]
  433d6c:	mov	x9, xzr
  433d70:	mov	x7, x9
  433d74:	mov	x10, sp
  433d78:	str	x9, [x10]
  433d7c:	mov	x9, sp
  433d80:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  433d84:	add	x10, x10, #0x5d6
  433d88:	str	x10, [x9, #8]
  433d8c:	mov	x9, sp
  433d90:	ldr	x10, [sp, #3272]
  433d94:	str	x10, [x9, #16]
  433d98:	mov	x9, sp
  433d9c:	str	w8, [x9, #24]
  433da0:	mov	x9, sp
  433da4:	add	x11, sp, #0xf, lsl #12
  433da8:	add	x11, x11, #0x448
  433dac:	str	x11, [x9, #32]
  433db0:	bl	40a870 <log_object_internal@plt>
  433db4:	ldr	x9, [sp, #3976]
  433db8:	str	w0, [x9]
  433dbc:	ldr	w8, [x9]
  433dc0:	str	w8, [x9, #32]
  433dc4:	ldr	w8, [x9, #32]
  433dc8:	ldr	x10, [sp, #3984]
  433dcc:	str	w8, [x10, #1540]
  433dd0:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433dd4:	add	x0, sp, #0xf, lsl #12
  433dd8:	add	x0, x0, #0x448
  433ddc:	add	x1, sp, #0xf, lsl #12
  433de0:	add	x1, x1, #0x1e0
  433de4:	bl	463808 <stat64>
  433de8:	cmp	w0, #0x0
  433dec:	cset	w8, ge  // ge = tcont
  433df0:	tbnz	w8, #0, 433e1c <udev_rule_apply_token_to_event+0x18d4>
  433df4:	ldr	x8, [sp, #3984]
  433df8:	ldr	x9, [x8, #1488]
  433dfc:	ldr	w10, [x9]
  433e00:	lsl	w10, w10, #16
  433e04:	asr	w10, w10, #24
  433e08:	cmp	w10, #0x1
  433e0c:	cset	w10, eq  // eq = none
  433e10:	and	w10, w10, #0x1
  433e14:	str	w10, [x8, #1540]
  433e18:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433e1c:	ldr	x8, [sp, #3976]
  433e20:	ldr	w9, [x8, #1296]
  433e24:	mov	w10, #0xffffffff            	// #-1
  433e28:	cmp	w9, w10
  433e2c:	b.ne	433e58 <udev_rule_apply_token_to_event+0x1910>  // b.any
  433e30:	ldr	x8, [sp, #3984]
  433e34:	ldr	x9, [x8, #1488]
  433e38:	ldr	w10, [x9]
  433e3c:	lsl	w10, w10, #16
  433e40:	asr	w10, w10, #24
  433e44:	cmp	w10, #0x0
  433e48:	cset	w10, eq  // eq = none
  433e4c:	and	w10, w10, #0x1
  433e50:	str	w10, [x8, #1540]
  433e54:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433e58:	ldr	x8, [sp, #3976]
  433e5c:	ldr	w9, [x8, #1180]
  433e60:	ldr	w10, [x8, #1296]
  433e64:	eor	w9, w9, w10
  433e68:	mov	w10, wzr
  433e6c:	tst	w9, #0xfff
  433e70:	cset	w9, eq  // eq = none
  433e74:	mov	w11, #0x1                   	// #1
  433e78:	and	w9, w9, w11
  433e7c:	ldr	x12, [sp, #3984]
  433e80:	strb	w9, [x12, #447]
  433e84:	ldr	x13, [x12, #1488]
  433e88:	ldr	w9, [x13]
  433e8c:	lsl	w9, w9, #16
  433e90:	asr	w9, w9, #24
  433e94:	ldrb	w11, [x12, #447]
  433e98:	mov	w14, #0x1                   	// #1
  433e9c:	tst	w11, #0x1
  433ea0:	csel	w10, w10, w14, ne  // ne = any
  433ea4:	cmp	w9, w10
  433ea8:	cset	w9, eq  // eq = none
  433eac:	and	w9, w9, #0x1
  433eb0:	str	w9, [x12, #1540]
  433eb4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  433eb8:	ldr	x8, [sp, #3984]
  433ebc:	ldr	x9, [x8, #1512]
  433ec0:	ldr	x0, [x9, #32]
  433ec4:	bl	421a24 <mfree>
  433ec8:	ldr	x8, [sp, #3984]
  433ecc:	ldr	x9, [x8, #1512]
  433ed0:	str	x0, [x9, #32]
  433ed4:	ldr	x0, [x8, #1512]
  433ed8:	ldr	x9, [x8, #1488]
  433edc:	ldr	x1, [x9, #8]
  433ee0:	add	x2, sp, #0xf, lsl #12
  433ee4:	add	x2, x2, #0x448
  433ee8:	mov	x3, #0x400                 	// #1024
  433eec:	mov	w10, wzr
  433ef0:	and	w4, w10, #0x1
  433ef4:	bl	4183c0 <udev_event_apply_format>
  433ef8:	ldr	x8, [sp, #3984]
  433efc:	ldr	x9, [x8, #1528]
  433f00:	ldr	x11, [sp, #3968]
  433f04:	str	x9, [x11, #408]
  433f08:	ldr	x9, [x11, #408]
  433f0c:	cbz	x9, 433f24 <udev_rule_apply_token_to_event+0x19dc>
  433f10:	ldr	x8, [sp, #3968]
  433f14:	ldr	x9, [x8, #408]
  433f18:	ldr	x9, [x9, #32]
  433f1c:	str	x9, [sp, #3256]
  433f20:	b	433f2c <udev_rule_apply_token_to_event+0x19e4>
  433f24:	mov	x8, xzr
  433f28:	str	x8, [sp, #3256]
  433f2c:	ldr	x8, [sp, #3256]
  433f30:	ldr	x9, [sp, #3968]
  433f34:	str	x8, [x9, #400]
  433f38:	ldr	x8, [x9, #400]
  433f3c:	cbz	x8, 433f54 <udev_rule_apply_token_to_event+0x1a0c>
  433f40:	ldr	x8, [sp, #3968]
  433f44:	ldr	x9, [x8, #400]
  433f48:	ldr	x9, [x9, #8]
  433f4c:	str	x9, [sp, #3248]
  433f50:	b	433f5c <udev_rule_apply_token_to_event+0x1a14>
  433f54:	mov	x8, xzr
  433f58:	str	x8, [sp, #3248]
  433f5c:	ldr	x8, [sp, #3248]
  433f60:	ldr	x9, [sp, #3968]
  433f64:	str	x8, [x9, #392]
  433f68:	ldr	x8, [x9, #400]
  433f6c:	cbz	x8, 433f84 <udev_rule_apply_token_to_event+0x1a3c>
  433f70:	ldr	x8, [sp, #3968]
  433f74:	ldr	x9, [x8, #400]
  433f78:	ldr	x9, [x9]
  433f7c:	str	x9, [sp, #3240]
  433f80:	b	433f8c <udev_rule_apply_token_to_event+0x1a44>
  433f84:	mov	x8, xzr
  433f88:	str	x8, [sp, #3240]
  433f8c:	ldr	x8, [sp, #3240]
  433f90:	ldr	x9, [sp, #3968]
  433f94:	str	x8, [x9, #384]
  433f98:	mov	x8, xzr
  433f9c:	str	x8, [x9, #368]
  433fa0:	ldr	x8, [sp, #3984]
  433fa4:	ldr	x10, [x8, #1520]
  433fa8:	str	x10, [x9, #360]
  433fac:	mov	w11, #0x7                   	// #7
  433fb0:	str	w11, [x9, #356]
  433fb4:	str	wzr, [x9, #352]
  433fb8:	ldr	x10, [x9, #360]
  433fbc:	cbz	x10, 434008 <udev_rule_apply_token_to_event+0x1ac0>
  433fc0:	mov	w0, #0x1                   	// #1
  433fc4:	bl	40a3f0 <log_get_max_level_realm@plt>
  433fc8:	ldr	x8, [sp, #3968]
  433fcc:	ldr	w9, [x8, #356]
  433fd0:	cmp	w0, w9
  433fd4:	cset	w9, ge  // ge = tcont
  433fd8:	mov	w10, #0x1                   	// #1
  433fdc:	eor	w9, w9, #0x1
  433fe0:	eor	w9, w9, w10
  433fe4:	and	w9, w9, #0x1
  433fe8:	mov	w1, w9
  433fec:	sxtw	x11, w1
  433ff0:	cbz	x11, 434008 <udev_rule_apply_token_to_event+0x1ac0>
  433ff4:	ldr	x8, [sp, #3968]
  433ff8:	ldr	x0, [x8, #360]
  433ffc:	add	x1, sp, #0xa, lsl #12
  434000:	add	x1, x1, #0xd20
  434004:	bl	40a860 <sd_device_get_sysname@plt>
  434008:	ldr	x8, [sp, #3968]
  43400c:	ldr	w0, [x8, #356]
  434010:	ldr	w1, [x8, #352]
  434014:	ldr	x9, [x8, #368]
  434018:	mov	x10, xzr
  43401c:	cmp	x9, #0x0
  434020:	ldr	x9, [sp, #3912]
  434024:	csel	x5, x9, x10, ne  // ne = any
  434028:	ldr	x6, [x8, #368]
  43402c:	ldr	x10, [x8, #384]
  434030:	str	w0, [sp, #3236]
  434034:	mov	x0, x10
  434038:	str	w1, [sp, #3232]
  43403c:	str	x5, [sp, #3224]
  434040:	str	x6, [sp, #3216]
  434044:	bl	424274 <strna>
  434048:	ldr	x8, [sp, #3968]
  43404c:	ldr	x9, [x8, #392]
  434050:	str	x0, [sp, #3208]
  434054:	cbz	x9, 43406c <udev_rule_apply_token_to_event+0x1b24>
  434058:	ldr	x8, [sp, #3968]
  43405c:	ldr	x9, [x8, #392]
  434060:	ldr	w10, [x9, #8]
  434064:	str	w10, [sp, #3204]
  434068:	b	434074 <udev_rule_apply_token_to_event+0x1b2c>
  43406c:	mov	w8, wzr
  434070:	str	w8, [sp, #3204]
  434074:	ldr	w8, [sp, #3204]
  434078:	ldr	w0, [sp, #3236]
  43407c:	ldr	w1, [sp, #3232]
  434080:	ldr	x2, [sp, #3928]
  434084:	mov	w3, #0x681                 	// #1665
  434088:	ldr	x4, [sp, #3920]
  43408c:	ldr	x5, [sp, #3224]
  434090:	ldr	x6, [sp, #3216]
  434094:	mov	x9, xzr
  434098:	mov	x7, x9
  43409c:	mov	x10, sp
  4340a0:	str	x9, [x10]
  4340a4:	mov	x9, sp
  4340a8:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4340ac:	add	x10, x10, #0x605
  4340b0:	str	x10, [x9, #8]
  4340b4:	mov	x9, sp
  4340b8:	ldr	x10, [sp, #3208]
  4340bc:	str	x10, [x9, #16]
  4340c0:	mov	x9, sp
  4340c4:	str	w8, [x9, #24]
  4340c8:	mov	x9, sp
  4340cc:	add	x11, sp, #0xf, lsl #12
  4340d0:	add	x11, x11, #0x448
  4340d4:	str	x11, [x9, #32]
  4340d8:	str	x11, [sp, #3192]
  4340dc:	bl	40a870 <log_object_internal@plt>
  4340e0:	ldr	x9, [sp, #3968]
  4340e4:	str	w0, [x9, #348]
  4340e8:	ldr	w8, [x9, #348]
  4340ec:	str	w8, [x9, #380]
  4340f0:	ldr	x10, [sp, #3984]
  4340f4:	ldr	x0, [x10, #1512]
  4340f8:	ldr	x1, [x10, #1504]
  4340fc:	mov	w8, #0x1                   	// #1
  434100:	and	w2, w8, #0x1
  434104:	ldr	x3, [sp, #3192]
  434108:	add	x4, sp, #0xa, lsl #12
  43410c:	add	x4, x4, #0xd54
  434110:	mov	x5, #0x4000                	// #16384
  434114:	bl	419e80 <udev_event_spawn>
  434118:	ldr	x9, [sp, #3984]
  43411c:	str	w0, [x9, #440]
  434120:	ldr	w8, [x9, #440]
  434124:	cbz	w8, 434564 <udev_rule_apply_token_to_event+0x201c>
  434128:	ldr	x8, [sp, #3984]
  43412c:	ldr	w9, [x8, #440]
  434130:	cmp	w9, #0x0
  434134:	cset	w9, ge  // ge = tcont
  434138:	tbnz	w9, #0, 434338 <udev_rule_apply_token_to_event+0x1df0>
  43413c:	ldr	x8, [sp, #3984]
  434140:	ldr	x9, [x8, #1528]
  434144:	ldr	x10, [sp, #3968]
  434148:	str	x9, [x10, #336]
  43414c:	ldr	x9, [x10, #336]
  434150:	cbz	x9, 434168 <udev_rule_apply_token_to_event+0x1c20>
  434154:	ldr	x8, [sp, #3968]
  434158:	ldr	x9, [x8, #336]
  43415c:	ldr	x9, [x9, #32]
  434160:	str	x9, [sp, #3184]
  434164:	b	434170 <udev_rule_apply_token_to_event+0x1c28>
  434168:	mov	x8, xzr
  43416c:	str	x8, [sp, #3184]
  434170:	ldr	x8, [sp, #3184]
  434174:	ldr	x9, [sp, #3968]
  434178:	str	x8, [x9, #328]
  43417c:	ldr	x8, [x9, #328]
  434180:	cbz	x8, 434198 <udev_rule_apply_token_to_event+0x1c50>
  434184:	ldr	x8, [sp, #3968]
  434188:	ldr	x9, [x8, #328]
  43418c:	ldr	x9, [x9, #8]
  434190:	str	x9, [sp, #3176]
  434194:	b	4341a0 <udev_rule_apply_token_to_event+0x1c58>
  434198:	mov	x8, xzr
  43419c:	str	x8, [sp, #3176]
  4341a0:	ldr	x8, [sp, #3176]
  4341a4:	ldr	x9, [sp, #3968]
  4341a8:	str	x8, [x9, #320]
  4341ac:	ldr	x8, [x9, #328]
  4341b0:	cbz	x8, 4341c8 <udev_rule_apply_token_to_event+0x1c80>
  4341b4:	ldr	x8, [sp, #3968]
  4341b8:	ldr	x9, [x8, #328]
  4341bc:	ldr	x9, [x9]
  4341c0:	str	x9, [sp, #3168]
  4341c4:	b	4341d0 <udev_rule_apply_token_to_event+0x1c88>
  4341c8:	mov	x8, xzr
  4341cc:	str	x8, [sp, #3168]
  4341d0:	ldr	x8, [sp, #3168]
  4341d4:	ldr	x9, [sp, #3968]
  4341d8:	str	x8, [x9, #312]
  4341dc:	mov	x8, xzr
  4341e0:	str	x8, [x9, #296]
  4341e4:	ldr	x8, [sp, #3984]
  4341e8:	ldr	x10, [x8, #1520]
  4341ec:	str	x10, [x9, #288]
  4341f0:	mov	w11, #0x4                   	// #4
  4341f4:	str	w11, [x9, #284]
  4341f8:	ldr	w11, [x8, #440]
  4341fc:	str	w11, [x9, #280]
  434200:	ldr	x10, [x9, #288]
  434204:	cbz	x10, 434250 <udev_rule_apply_token_to_event+0x1d08>
  434208:	mov	w0, #0x1                   	// #1
  43420c:	bl	40a3f0 <log_get_max_level_realm@plt>
  434210:	ldr	x8, [sp, #3968]
  434214:	ldr	w9, [x8, #284]
  434218:	cmp	w0, w9
  43421c:	cset	w9, ge  // ge = tcont
  434220:	mov	w10, #0x1                   	// #1
  434224:	eor	w9, w9, #0x1
  434228:	eor	w9, w9, w10
  43422c:	and	w9, w9, #0x1
  434230:	mov	w1, w9
  434234:	sxtw	x11, w1
  434238:	cbz	x11, 434250 <udev_rule_apply_token_to_event+0x1d08>
  43423c:	ldr	x8, [sp, #3968]
  434240:	ldr	x0, [x8, #288]
  434244:	add	x1, sp, #0xa, lsl #12
  434248:	add	x1, x1, #0xcd8
  43424c:	bl	40a860 <sd_device_get_sysname@plt>
  434250:	ldr	x8, [sp, #3968]
  434254:	ldr	w0, [x8, #284]
  434258:	ldr	w1, [x8, #280]
  43425c:	ldr	x9, [x8, #296]
  434260:	mov	x10, xzr
  434264:	cmp	x9, #0x0
  434268:	ldr	x9, [sp, #3912]
  43426c:	csel	x5, x9, x10, ne  // ne = any
  434270:	ldr	x6, [x8, #296]
  434274:	ldr	x10, [x8, #312]
  434278:	str	w0, [sp, #3164]
  43427c:	mov	x0, x10
  434280:	str	w1, [sp, #3160]
  434284:	str	x5, [sp, #3152]
  434288:	str	x6, [sp, #3144]
  43428c:	bl	424274 <strna>
  434290:	ldr	x8, [sp, #3968]
  434294:	ldr	x9, [x8, #320]
  434298:	str	x0, [sp, #3136]
  43429c:	cbz	x9, 4342b4 <udev_rule_apply_token_to_event+0x1d6c>
  4342a0:	ldr	x8, [sp, #3968]
  4342a4:	ldr	x9, [x8, #320]
  4342a8:	ldr	w10, [x9, #8]
  4342ac:	str	w10, [sp, #3132]
  4342b0:	b	4342bc <udev_rule_apply_token_to_event+0x1d74>
  4342b4:	mov	w8, wzr
  4342b8:	str	w8, [sp, #3132]
  4342bc:	ldr	w8, [sp, #3132]
  4342c0:	ldr	w0, [sp, #3164]
  4342c4:	ldr	w1, [sp, #3160]
  4342c8:	ldr	x2, [sp, #3928]
  4342cc:	mov	w3, #0x686                 	// #1670
  4342d0:	ldr	x4, [sp, #3920]
  4342d4:	ldr	x5, [sp, #3152]
  4342d8:	ldr	x6, [sp, #3144]
  4342dc:	mov	x9, xzr
  4342e0:	mov	x7, x9
  4342e4:	mov	x10, sp
  4342e8:	str	x9, [x10]
  4342ec:	mov	x9, sp
  4342f0:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4342f4:	add	x10, x10, #0x620
  4342f8:	str	x10, [x9, #8]
  4342fc:	mov	x9, sp
  434300:	ldr	x10, [sp, #3136]
  434304:	str	x10, [x9, #16]
  434308:	mov	x9, sp
  43430c:	str	w8, [x9, #24]
  434310:	mov	x9, sp
  434314:	add	x11, sp, #0xf, lsl #12
  434318:	add	x11, x11, #0x448
  43431c:	str	x11, [x9, #32]
  434320:	bl	40a870 <log_object_internal@plt>
  434324:	ldr	x9, [sp, #3968]
  434328:	str	w0, [x9, #276]
  43432c:	ldr	w8, [x9, #276]
  434330:	str	w8, [x9, #308]
  434334:	b	43453c <udev_rule_apply_token_to_event+0x1ff4>
  434338:	ldr	x8, [sp, #3984]
  43433c:	ldr	x9, [x8, #1528]
  434340:	ldr	x10, [sp, #3968]
  434344:	str	x9, [x10, #264]
  434348:	ldr	x9, [x10, #264]
  43434c:	cbz	x9, 434364 <udev_rule_apply_token_to_event+0x1e1c>
  434350:	ldr	x8, [sp, #3968]
  434354:	ldr	x9, [x8, #264]
  434358:	ldr	x9, [x9, #32]
  43435c:	str	x9, [sp, #3120]
  434360:	b	43436c <udev_rule_apply_token_to_event+0x1e24>
  434364:	mov	x8, xzr
  434368:	str	x8, [sp, #3120]
  43436c:	ldr	x8, [sp, #3120]
  434370:	ldr	x9, [sp, #3968]
  434374:	str	x8, [x9, #256]
  434378:	ldr	x8, [x9, #256]
  43437c:	cbz	x8, 434394 <udev_rule_apply_token_to_event+0x1e4c>
  434380:	ldr	x8, [sp, #3968]
  434384:	ldr	x9, [x8, #256]
  434388:	ldr	x9, [x9, #8]
  43438c:	str	x9, [sp, #3112]
  434390:	b	43439c <udev_rule_apply_token_to_event+0x1e54>
  434394:	mov	x8, xzr
  434398:	str	x8, [sp, #3112]
  43439c:	ldr	x8, [sp, #3112]
  4343a0:	ldr	x9, [sp, #3968]
  4343a4:	str	x8, [x9, #248]
  4343a8:	ldr	x8, [x9, #256]
  4343ac:	cbz	x8, 4343c4 <udev_rule_apply_token_to_event+0x1e7c>
  4343b0:	ldr	x8, [sp, #3968]
  4343b4:	ldr	x9, [x8, #256]
  4343b8:	ldr	x9, [x9]
  4343bc:	str	x9, [sp, #3104]
  4343c0:	b	4343cc <udev_rule_apply_token_to_event+0x1e84>
  4343c4:	mov	x8, xzr
  4343c8:	str	x8, [sp, #3104]
  4343cc:	ldr	x8, [sp, #3104]
  4343d0:	ldr	x9, [sp, #3968]
  4343d4:	str	x8, [x9, #240]
  4343d8:	mov	x8, xzr
  4343dc:	str	x8, [x9, #224]
  4343e0:	ldr	x8, [sp, #3984]
  4343e4:	ldr	x10, [x8, #1520]
  4343e8:	str	x10, [x9, #216]
  4343ec:	mov	w11, #0x7                   	// #7
  4343f0:	str	w11, [x9, #212]
  4343f4:	str	wzr, [x9, #208]
  4343f8:	ldr	x10, [x9, #216]
  4343fc:	cbz	x10, 434448 <udev_rule_apply_token_to_event+0x1f00>
  434400:	mov	w0, #0x1                   	// #1
  434404:	bl	40a3f0 <log_get_max_level_realm@plt>
  434408:	ldr	x8, [sp, #3968]
  43440c:	ldr	w9, [x8, #212]
  434410:	cmp	w0, w9
  434414:	cset	w9, ge  // ge = tcont
  434418:	mov	w10, #0x1                   	// #1
  43441c:	eor	w9, w9, #0x1
  434420:	eor	w9, w9, w10
  434424:	and	w9, w9, #0x1
  434428:	mov	w1, w9
  43442c:	sxtw	x11, w1
  434430:	cbz	x11, 434448 <udev_rule_apply_token_to_event+0x1f00>
  434434:	ldr	x8, [sp, #3968]
  434438:	ldr	x0, [x8, #216]
  43443c:	add	x1, sp, #0xa, lsl #12
  434440:	add	x1, x1, #0xc90
  434444:	bl	40a860 <sd_device_get_sysname@plt>
  434448:	ldr	x8, [sp, #3968]
  43444c:	ldr	w0, [x8, #212]
  434450:	ldr	w1, [x8, #208]
  434454:	ldr	x9, [x8, #224]
  434458:	mov	x10, xzr
  43445c:	cmp	x9, #0x0
  434460:	ldr	x9, [sp, #3912]
  434464:	csel	x5, x9, x10, ne  // ne = any
  434468:	ldr	x6, [x8, #224]
  43446c:	ldr	x10, [x8, #240]
  434470:	str	w0, [sp, #3100]
  434474:	mov	x0, x10
  434478:	str	w1, [sp, #3096]
  43447c:	str	x5, [sp, #3088]
  434480:	str	x6, [sp, #3080]
  434484:	bl	424274 <strna>
  434488:	ldr	x8, [sp, #3968]
  43448c:	ldr	x9, [x8, #248]
  434490:	str	x0, [sp, #3072]
  434494:	cbz	x9, 4344ac <udev_rule_apply_token_to_event+0x1f64>
  434498:	ldr	x8, [sp, #3968]
  43449c:	ldr	x9, [x8, #248]
  4344a0:	ldr	w10, [x9, #8]
  4344a4:	str	w10, [sp, #3068]
  4344a8:	b	4344b4 <udev_rule_apply_token_to_event+0x1f6c>
  4344ac:	mov	w8, wzr
  4344b0:	str	w8, [sp, #3068]
  4344b4:	ldr	w8, [sp, #3068]
  4344b8:	ldr	x9, [sp, #3984]
  4344bc:	ldr	w10, [x9, #440]
  4344c0:	ldr	w0, [sp, #3100]
  4344c4:	ldr	w1, [sp, #3096]
  4344c8:	ldr	x2, [sp, #3928]
  4344cc:	mov	w3, #0x688                 	// #1672
  4344d0:	ldr	x4, [sp, #3920]
  4344d4:	ldr	x5, [sp, #3088]
  4344d8:	ldr	x6, [sp, #3080]
  4344dc:	mov	x11, xzr
  4344e0:	mov	x7, x11
  4344e4:	mov	x12, sp
  4344e8:	str	x11, [x12]
  4344ec:	mov	x11, sp
  4344f0:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  4344f4:	add	x12, x12, #0x64b
  4344f8:	str	x12, [x11, #8]
  4344fc:	mov	x11, sp
  434500:	ldr	x12, [sp, #3072]
  434504:	str	x12, [x11, #16]
  434508:	mov	x11, sp
  43450c:	str	w8, [x11, #24]
  434510:	mov	x11, sp
  434514:	add	x13, sp, #0xf, lsl #12
  434518:	add	x13, x13, #0x448
  43451c:	str	x13, [x11, #32]
  434520:	mov	x11, sp
  434524:	str	w10, [x11, #40]
  434528:	bl	40a870 <log_object_internal@plt>
  43452c:	ldr	x9, [sp, #3968]
  434530:	str	w0, [x9, #204]
  434534:	ldr	w8, [x9, #204]
  434538:	str	w8, [x9, #236]
  43453c:	ldr	x8, [sp, #3984]
  434540:	ldr	x9, [x8, #1488]
  434544:	ldr	w10, [x9]
  434548:	lsl	w10, w10, #16
  43454c:	asr	w10, w10, #24
  434550:	cmp	w10, #0x1
  434554:	cset	w10, eq  // eq = none
  434558:	and	w10, w10, #0x1
  43455c:	str	w10, [x8, #1540]
  434560:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  434564:	add	x8, sp, #0xa, lsl #12
  434568:	add	x8, x8, #0xd54
  43456c:	mov	x0, x8
  434570:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  434574:	add	x1, x1, #0x67c
  434578:	str	x8, [sp, #3056]
  43457c:	bl	40aec0 <delete_trailing_chars@plt>
  434580:	ldr	x8, [sp, #3056]
  434584:	mov	x0, x8
  434588:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  43458c:	add	x1, x1, #0x5fe
  434590:	bl	40aed0 <util_replace_chars@plt>
  434594:	ldr	x8, [sp, #3984]
  434598:	str	x0, [x8, #448]
  43459c:	ldr	x9, [x8, #448]
  4345a0:	cmp	x9, #0x0
  4345a4:	cset	w10, ls  // ls = plast
  4345a8:	tbnz	w10, #0, 4347b0 <udev_rule_apply_token_to_event+0x2268>
  4345ac:	ldr	x8, [sp, #3984]
  4345b0:	ldr	x9, [x8, #1528]
  4345b4:	ldr	x10, [sp, #3968]
  4345b8:	str	x9, [x10, #192]
  4345bc:	ldr	x9, [x10, #192]
  4345c0:	cbz	x9, 4345d8 <udev_rule_apply_token_to_event+0x2090>
  4345c4:	ldr	x8, [sp, #3968]
  4345c8:	ldr	x9, [x8, #192]
  4345cc:	ldr	x9, [x9, #32]
  4345d0:	str	x9, [sp, #3048]
  4345d4:	b	4345e0 <udev_rule_apply_token_to_event+0x2098>
  4345d8:	mov	x8, xzr
  4345dc:	str	x8, [sp, #3048]
  4345e0:	ldr	x8, [sp, #3048]
  4345e4:	ldr	x9, [sp, #3968]
  4345e8:	str	x8, [x9, #184]
  4345ec:	ldr	x8, [x9, #184]
  4345f0:	cbz	x8, 434608 <udev_rule_apply_token_to_event+0x20c0>
  4345f4:	ldr	x8, [sp, #3968]
  4345f8:	ldr	x9, [x8, #184]
  4345fc:	ldr	x9, [x9, #8]
  434600:	str	x9, [sp, #3040]
  434604:	b	434610 <udev_rule_apply_token_to_event+0x20c8>
  434608:	mov	x8, xzr
  43460c:	str	x8, [sp, #3040]
  434610:	ldr	x8, [sp, #3040]
  434614:	ldr	x9, [sp, #3968]
  434618:	str	x8, [x9, #176]
  43461c:	ldr	x8, [x9, #184]
  434620:	cbz	x8, 434638 <udev_rule_apply_token_to_event+0x20f0>
  434624:	ldr	x8, [sp, #3968]
  434628:	ldr	x9, [x8, #184]
  43462c:	ldr	x9, [x9]
  434630:	str	x9, [sp, #3032]
  434634:	b	434640 <udev_rule_apply_token_to_event+0x20f8>
  434638:	mov	x8, xzr
  43463c:	str	x8, [sp, #3032]
  434640:	ldr	x8, [sp, #3032]
  434644:	ldr	x9, [sp, #3968]
  434648:	str	x8, [x9, #168]
  43464c:	mov	x8, xzr
  434650:	str	x8, [x9, #152]
  434654:	ldr	x8, [sp, #3984]
  434658:	ldr	x10, [x8, #1520]
  43465c:	str	x10, [x9, #144]
  434660:	mov	w11, #0x7                   	// #7
  434664:	str	w11, [x9, #140]
  434668:	str	wzr, [x9, #136]
  43466c:	ldr	x10, [x9, #144]
  434670:	cbz	x10, 4346bc <udev_rule_apply_token_to_event+0x2174>
  434674:	mov	w0, #0x1                   	// #1
  434678:	bl	40a3f0 <log_get_max_level_realm@plt>
  43467c:	ldr	x8, [sp, #3968]
  434680:	ldr	w9, [x8, #140]
  434684:	cmp	w0, w9
  434688:	cset	w9, ge  // ge = tcont
  43468c:	mov	w10, #0x1                   	// #1
  434690:	eor	w9, w9, #0x1
  434694:	eor	w9, w9, w10
  434698:	and	w9, w9, #0x1
  43469c:	mov	w1, w9
  4346a0:	sxtw	x11, w1
  4346a4:	cbz	x11, 4346bc <udev_rule_apply_token_to_event+0x2174>
  4346a8:	ldr	x8, [sp, #3968]
  4346ac:	ldr	x0, [x8, #144]
  4346b0:	add	x1, sp, #0xa, lsl #12
  4346b4:	add	x1, x1, #0xc48
  4346b8:	bl	40a860 <sd_device_get_sysname@plt>
  4346bc:	ldr	x8, [sp, #3968]
  4346c0:	ldr	w0, [x8, #140]
  4346c4:	ldr	w1, [x8, #136]
  4346c8:	ldr	x9, [x8, #152]
  4346cc:	mov	x10, xzr
  4346d0:	cmp	x9, #0x0
  4346d4:	ldr	x9, [sp, #3912]
  4346d8:	csel	x5, x9, x10, ne  // ne = any
  4346dc:	ldr	x6, [x8, #152]
  4346e0:	ldr	x10, [x8, #168]
  4346e4:	str	w0, [sp, #3028]
  4346e8:	mov	x0, x10
  4346ec:	str	w1, [sp, #3024]
  4346f0:	str	x5, [sp, #3016]
  4346f4:	str	x6, [sp, #3008]
  4346f8:	bl	424274 <strna>
  4346fc:	ldr	x8, [sp, #3968]
  434700:	ldr	x9, [x8, #176]
  434704:	str	x0, [sp, #3000]
  434708:	cbz	x9, 434720 <udev_rule_apply_token_to_event+0x21d8>
  43470c:	ldr	x8, [sp, #3968]
  434710:	ldr	x9, [x8, #176]
  434714:	ldr	w10, [x9, #8]
  434718:	str	w10, [sp, #2996]
  43471c:	b	434728 <udev_rule_apply_token_to_event+0x21e0>
  434720:	mov	w8, wzr
  434724:	str	w8, [sp, #2996]
  434728:	ldr	w8, [sp, #2996]
  43472c:	ldr	x9, [sp, #3984]
  434730:	ldr	x10, [x9, #448]
  434734:	ldr	w0, [sp, #3028]
  434738:	ldr	w1, [sp, #3024]
  43473c:	ldr	x2, [sp, #3928]
  434740:	mov	w3, #0x690                 	// #1680
  434744:	ldr	x4, [sp, #3920]
  434748:	ldr	x5, [sp, #3016]
  43474c:	ldr	x6, [sp, #3008]
  434750:	mov	x11, xzr
  434754:	mov	x7, x11
  434758:	mov	x12, sp
  43475c:	str	x11, [x12]
  434760:	mov	x11, sp
  434764:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  434768:	add	x12, x12, #0x67e
  43476c:	str	x12, [x11, #8]
  434770:	mov	x11, sp
  434774:	ldr	x12, [sp, #3000]
  434778:	str	x12, [x11, #16]
  43477c:	mov	x11, sp
  434780:	str	w8, [x11, #24]
  434784:	mov	x11, sp
  434788:	str	x10, [x11, #32]
  43478c:	mov	x10, sp
  434790:	add	x11, sp, #0xf, lsl #12
  434794:	add	x11, x11, #0x448
  434798:	str	x11, [x10, #40]
  43479c:	bl	40a870 <log_object_internal@plt>
  4347a0:	ldr	x9, [sp, #3968]
  4347a4:	str	w0, [x9, #132]
  4347a8:	ldr	w8, [x9, #132]
  4347ac:	str	w8, [x9, #164]
  4347b0:	add	x0, sp, #0xa, lsl #12
  4347b4:	add	x0, x0, #0xd54
  4347b8:	bl	40a910 <strdup@plt>
  4347bc:	ldr	x8, [sp, #3984]
  4347c0:	ldr	x9, [x8, #1512]
  4347c4:	str	x0, [x9, #32]
  4347c8:	ldr	x9, [x8, #1488]
  4347cc:	ldr	w10, [x9]
  4347d0:	lsl	w10, w10, #16
  4347d4:	asr	w10, w10, #24
  4347d8:	cmp	w10, #0x0
  4347dc:	cset	w10, eq  // eq = none
  4347e0:	and	w10, w10, #0x1
  4347e4:	str	w10, [x8, #1540]
  4347e8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4347ec:	mov	x8, xzr
  4347f0:	ldr	x9, [sp, #3968]
  4347f4:	str	x8, [x9, #120]
  4347f8:	ldr	x8, [sp, #3984]
  4347fc:	ldr	x0, [x8, #1512]
  434800:	ldr	x10, [x8, #1488]
  434804:	ldr	x1, [x10, #8]
  434808:	add	x2, sp, #0xf, lsl #12
  43480c:	add	x2, x2, #0x448
  434810:	mov	x3, #0x400                 	// #1024
  434814:	mov	w11, wzr
  434818:	and	w4, w11, #0x1
  43481c:	bl	4183c0 <udev_event_apply_format>
  434820:	ldr	x8, [sp, #3984]
  434824:	ldr	x9, [x8, #1528]
  434828:	ldr	x10, [sp, #3968]
  43482c:	str	x9, [x10, #112]
  434830:	ldr	x9, [x10, #112]
  434834:	cbz	x9, 43484c <udev_rule_apply_token_to_event+0x2304>
  434838:	ldr	x8, [sp, #3968]
  43483c:	ldr	x9, [x8, #112]
  434840:	ldr	x9, [x9, #32]
  434844:	str	x9, [sp, #2984]
  434848:	b	434854 <udev_rule_apply_token_to_event+0x230c>
  43484c:	mov	x8, xzr
  434850:	str	x8, [sp, #2984]
  434854:	ldr	x8, [sp, #2984]
  434858:	ldr	x9, [sp, #3968]
  43485c:	str	x8, [x9, #104]
  434860:	ldr	x8, [x9, #104]
  434864:	cbz	x8, 43487c <udev_rule_apply_token_to_event+0x2334>
  434868:	ldr	x8, [sp, #3968]
  43486c:	ldr	x9, [x8, #104]
  434870:	ldr	x9, [x9, #8]
  434874:	str	x9, [sp, #2976]
  434878:	b	434884 <udev_rule_apply_token_to_event+0x233c>
  43487c:	mov	x8, xzr
  434880:	str	x8, [sp, #2976]
  434884:	ldr	x8, [sp, #2976]
  434888:	ldr	x9, [sp, #3968]
  43488c:	str	x8, [x9, #96]
  434890:	ldr	x8, [x9, #104]
  434894:	cbz	x8, 4348ac <udev_rule_apply_token_to_event+0x2364>
  434898:	ldr	x8, [sp, #3968]
  43489c:	ldr	x9, [x8, #104]
  4348a0:	ldr	x9, [x9]
  4348a4:	str	x9, [sp, #2968]
  4348a8:	b	4348b4 <udev_rule_apply_token_to_event+0x236c>
  4348ac:	mov	x8, xzr
  4348b0:	str	x8, [sp, #2968]
  4348b4:	ldr	x8, [sp, #2968]
  4348b8:	ldr	x9, [sp, #3968]
  4348bc:	str	x8, [x9, #88]
  4348c0:	mov	x8, xzr
  4348c4:	str	x8, [x9, #72]
  4348c8:	ldr	x8, [sp, #3984]
  4348cc:	ldr	x10, [x8, #1520]
  4348d0:	str	x10, [x9, #64]
  4348d4:	mov	w11, #0x7                   	// #7
  4348d8:	str	w11, [x9, #60]
  4348dc:	str	wzr, [x9, #56]
  4348e0:	ldr	x10, [x9, #64]
  4348e4:	cbz	x10, 434930 <udev_rule_apply_token_to_event+0x23e8>
  4348e8:	mov	w0, #0x1                   	// #1
  4348ec:	bl	40a3f0 <log_get_max_level_realm@plt>
  4348f0:	ldr	x8, [sp, #3968]
  4348f4:	ldr	w9, [x8, #60]
  4348f8:	cmp	w0, w9
  4348fc:	cset	w9, ge  // ge = tcont
  434900:	mov	w10, #0x1                   	// #1
  434904:	eor	w9, w9, #0x1
  434908:	eor	w9, w9, w10
  43490c:	and	w9, w9, #0x1
  434910:	mov	w1, w9
  434914:	sxtw	x11, w1
  434918:	cbz	x11, 434930 <udev_rule_apply_token_to_event+0x23e8>
  43491c:	ldr	x8, [sp, #3968]
  434920:	ldr	x0, [x8, #64]
  434924:	add	x1, sp, #0xa, lsl #12
  434928:	add	x1, x1, #0xbf8
  43492c:	bl	40a860 <sd_device_get_sysname@plt>
  434930:	ldr	x8, [sp, #3968]
  434934:	ldr	w0, [x8, #60]
  434938:	ldr	w1, [x8, #56]
  43493c:	ldr	x9, [x8, #72]
  434940:	mov	x10, xzr
  434944:	cmp	x9, #0x0
  434948:	ldr	x9, [sp, #3912]
  43494c:	csel	x5, x9, x10, ne  // ne = any
  434950:	ldr	x6, [x8, #72]
  434954:	ldr	x10, [x8, #88]
  434958:	str	w0, [sp, #2964]
  43495c:	mov	x0, x10
  434960:	str	w1, [sp, #2960]
  434964:	str	x5, [sp, #2952]
  434968:	str	x6, [sp, #2944]
  43496c:	bl	424274 <strna>
  434970:	ldr	x8, [sp, #3968]
  434974:	ldr	x9, [x8, #96]
  434978:	str	x0, [sp, #2936]
  43497c:	cbz	x9, 434994 <udev_rule_apply_token_to_event+0x244c>
  434980:	ldr	x8, [sp, #3968]
  434984:	ldr	x9, [x8, #96]
  434988:	ldr	w10, [x9, #8]
  43498c:	str	w10, [sp, #2932]
  434990:	b	43499c <udev_rule_apply_token_to_event+0x2454>
  434994:	mov	w8, wzr
  434998:	str	w8, [sp, #2932]
  43499c:	ldr	w8, [sp, #2932]
  4349a0:	ldr	w0, [sp, #2964]
  4349a4:	ldr	w1, [sp, #2960]
  4349a8:	ldr	x2, [sp, #3928]
  4349ac:	mov	w3, #0x699                 	// #1689
  4349b0:	ldr	x4, [sp, #3920]
  4349b4:	ldr	x5, [sp, #2952]
  4349b8:	ldr	x6, [sp, #2944]
  4349bc:	mov	x9, xzr
  4349c0:	mov	x7, x9
  4349c4:	mov	x10, sp
  4349c8:	str	x9, [x10]
  4349cc:	mov	x9, sp
  4349d0:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4349d4:	add	x10, x10, #0x6b2
  4349d8:	str	x10, [x9, #8]
  4349dc:	mov	x9, sp
  4349e0:	ldr	x10, [sp, #2936]
  4349e4:	str	x10, [x9, #16]
  4349e8:	mov	x9, sp
  4349ec:	str	w8, [x9, #24]
  4349f0:	mov	x9, sp
  4349f4:	add	x11, sp, #0xf, lsl #12
  4349f8:	add	x11, x11, #0x448
  4349fc:	str	x11, [x9, #32]
  434a00:	str	x11, [sp, #2920]
  434a04:	bl	40a870 <log_object_internal@plt>
  434a08:	ldr	x9, [sp, #3968]
  434a0c:	str	w0, [x9, #52]
  434a10:	ldr	w8, [x9, #52]
  434a14:	str	w8, [x9, #84]
  434a18:	ldr	x0, [sp, #2920]
  434a1c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  434a20:	add	x1, x1, #0x65b
  434a24:	bl	40b260 <fopen64@plt>
  434a28:	ldr	x9, [sp, #3968]
  434a2c:	str	x0, [x9, #120]
  434a30:	ldr	x10, [x9, #120]
  434a34:	cbnz	x10, 434ca4 <udev_rule_apply_token_to_event+0x275c>
  434a38:	bl	40a480 <__errno_location@plt>
  434a3c:	ldr	w8, [x0]
  434a40:	cmp	w8, #0x2
  434a44:	b.eq	434c70 <udev_rule_apply_token_to_event+0x2728>  // b.none
  434a48:	ldr	x8, [sp, #3984]
  434a4c:	ldr	x9, [x8, #1528]
  434a50:	ldr	x10, [sp, #3968]
  434a54:	str	x9, [x10, #40]
  434a58:	ldr	x9, [x10, #40]
  434a5c:	cbz	x9, 434a74 <udev_rule_apply_token_to_event+0x252c>
  434a60:	ldr	x8, [sp, #3968]
  434a64:	ldr	x9, [x8, #40]
  434a68:	ldr	x9, [x9, #32]
  434a6c:	str	x9, [sp, #2912]
  434a70:	b	434a7c <udev_rule_apply_token_to_event+0x2534>
  434a74:	mov	x8, xzr
  434a78:	str	x8, [sp, #2912]
  434a7c:	ldr	x8, [sp, #2912]
  434a80:	ldr	x9, [sp, #3968]
  434a84:	str	x8, [x9, #32]
  434a88:	ldr	x8, [x9, #32]
  434a8c:	cbz	x8, 434aa4 <udev_rule_apply_token_to_event+0x255c>
  434a90:	ldr	x8, [sp, #3968]
  434a94:	ldr	x9, [x8, #32]
  434a98:	ldr	x9, [x9, #8]
  434a9c:	str	x9, [sp, #2904]
  434aa0:	b	434aac <udev_rule_apply_token_to_event+0x2564>
  434aa4:	mov	x8, xzr
  434aa8:	str	x8, [sp, #2904]
  434aac:	ldr	x8, [sp, #2904]
  434ab0:	ldr	x9, [sp, #3968]
  434ab4:	str	x8, [x9, #24]
  434ab8:	ldr	x8, [x9, #32]
  434abc:	cbz	x8, 434ad4 <udev_rule_apply_token_to_event+0x258c>
  434ac0:	ldr	x8, [sp, #3968]
  434ac4:	ldr	x9, [x8, #32]
  434ac8:	ldr	x9, [x9]
  434acc:	str	x9, [sp, #2896]
  434ad0:	b	434adc <udev_rule_apply_token_to_event+0x2594>
  434ad4:	mov	x8, xzr
  434ad8:	str	x8, [sp, #2896]
  434adc:	ldr	x8, [sp, #2896]
  434ae0:	ldr	x9, [sp, #3968]
  434ae4:	str	x8, [x9, #16]
  434ae8:	mov	x8, xzr
  434aec:	str	x8, [x9]
  434af0:	ldr	x8, [sp, #3984]
  434af4:	ldr	x10, [x8, #1520]
  434af8:	ldr	x11, [sp, #3960]
  434afc:	stur	x10, [x11, #252]
  434b00:	mov	w12, #0x3                   	// #3
  434b04:	str	w12, [x11, #248]
  434b08:	bl	40a480 <__errno_location@plt>
  434b0c:	ldr	w12, [x0]
  434b10:	ldr	x8, [sp, #3960]
  434b14:	str	w12, [x8, #244]
  434b18:	ldur	x9, [x8, #252]
  434b1c:	cbz	x9, 434b68 <udev_rule_apply_token_to_event+0x2620>
  434b20:	mov	w0, #0x1                   	// #1
  434b24:	bl	40a3f0 <log_get_max_level_realm@plt>
  434b28:	ldr	x8, [sp, #3960]
  434b2c:	ldr	w9, [x8, #248]
  434b30:	cmp	w0, w9
  434b34:	cset	w9, ge  // ge = tcont
  434b38:	mov	w10, #0x1                   	// #1
  434b3c:	eor	w9, w9, #0x1
  434b40:	eor	w9, w9, w10
  434b44:	and	w9, w9, #0x1
  434b48:	mov	w1, w9
  434b4c:	sxtw	x11, w1
  434b50:	cbz	x11, 434b68 <udev_rule_apply_token_to_event+0x2620>
  434b54:	ldr	x8, [sp, #3960]
  434b58:	ldur	x0, [x8, #252]
  434b5c:	add	x1, sp, #0xa, lsl #12
  434b60:	add	x1, x1, #0xbb0
  434b64:	bl	40a860 <sd_device_get_sysname@plt>
  434b68:	ldr	x8, [sp, #3960]
  434b6c:	ldr	w0, [x8, #248]
  434b70:	ldr	w1, [x8, #244]
  434b74:	ldr	x9, [sp, #3968]
  434b78:	ldr	x10, [x9]
  434b7c:	mov	x11, xzr
  434b80:	cmp	x10, #0x0
  434b84:	ldr	x10, [sp, #3912]
  434b88:	csel	x5, x10, x11, ne  // ne = any
  434b8c:	ldr	x6, [x9]
  434b90:	ldr	x11, [x9, #16]
  434b94:	str	w0, [sp, #2892]
  434b98:	mov	x0, x11
  434b9c:	str	w1, [sp, #2888]
  434ba0:	str	x5, [sp, #2880]
  434ba4:	str	x6, [sp, #2872]
  434ba8:	bl	424274 <strna>
  434bac:	ldr	x8, [sp, #3968]
  434bb0:	ldr	x9, [x8, #24]
  434bb4:	str	x0, [sp, #2864]
  434bb8:	cbz	x9, 434bd0 <udev_rule_apply_token_to_event+0x2688>
  434bbc:	ldr	x8, [sp, #3968]
  434bc0:	ldr	x9, [x8, #24]
  434bc4:	ldr	w10, [x9, #8]
  434bc8:	str	w10, [sp, #2860]
  434bcc:	b	434bd8 <udev_rule_apply_token_to_event+0x2690>
  434bd0:	mov	w8, wzr
  434bd4:	str	w8, [sp, #2860]
  434bd8:	ldr	w8, [sp, #2860]
  434bdc:	ldr	w0, [sp, #2892]
  434be0:	ldr	w1, [sp, #2888]
  434be4:	ldr	x2, [sp, #3928]
  434be8:	mov	w3, #0x69f                 	// #1695
  434bec:	ldr	x4, [sp, #3920]
  434bf0:	ldr	x5, [sp, #2880]
  434bf4:	ldr	x6, [sp, #2872]
  434bf8:	mov	x9, xzr
  434bfc:	mov	x7, x9
  434c00:	mov	x10, sp
  434c04:	str	x9, [x10]
  434c08:	mov	x9, sp
  434c0c:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  434c10:	add	x10, x10, #0x6d7
  434c14:	str	x10, [x9, #8]
  434c18:	mov	x9, sp
  434c1c:	ldr	x10, [sp, #2864]
  434c20:	str	x10, [x9, #16]
  434c24:	mov	x9, sp
  434c28:	str	w8, [x9, #24]
  434c2c:	mov	x9, sp
  434c30:	add	x11, sp, #0xf, lsl #12
  434c34:	add	x11, x11, #0x448
  434c38:	str	x11, [x9, #32]
  434c3c:	bl	40a870 <log_object_internal@plt>
  434c40:	ldr	x9, [sp, #3960]
  434c44:	str	w0, [x9, #240]
  434c48:	ldr	w8, [x9, #240]
  434c4c:	ldr	x10, [sp, #3968]
  434c50:	str	w8, [x10, #12]
  434c54:	ldr	w8, [x10, #12]
  434c58:	ldr	x11, [sp, #3984]
  434c5c:	str	w8, [x11, #1540]
  434c60:	mov	w8, #0x1                   	// #1
  434c64:	ldr	x12, [sp, #3976]
  434c68:	str	w8, [x12, #1300]
  434c6c:	b	435458 <udev_rule_apply_token_to_event+0x2f10>
  434c70:	ldr	x8, [sp, #3984]
  434c74:	ldr	x9, [x8, #1488]
  434c78:	ldr	w10, [x9]
  434c7c:	lsl	w10, w10, #16
  434c80:	asr	w10, w10, #24
  434c84:	mov	w11, #0x1                   	// #1
  434c88:	cmp	w10, #0x1
  434c8c:	cset	w10, eq  // eq = none
  434c90:	and	w10, w10, #0x1
  434c94:	str	w10, [x8, #1540]
  434c98:	ldr	x9, [sp, #3976]
  434c9c:	str	w11, [x9, #1300]
  434ca0:	b	435458 <udev_rule_apply_token_to_event+0x2f10>
  434ca4:	add	x2, sp, #0xa, lsl #12
  434ca8:	add	x2, x2, #0xb90
  434cac:	mov	x8, xzr
  434cb0:	ldr	x9, [sp, #3960]
  434cb4:	stur	x8, [x9, #228]
  434cb8:	ldr	x8, [sp, #3968]
  434cbc:	ldr	x0, [x8, #120]
  434cc0:	mov	x1, #0x100000              	// #1048576
  434cc4:	bl	423118 <read_line>
  434cc8:	ldr	x8, [sp, #3984]
  434ccc:	str	w0, [x8, #440]
  434cd0:	ldr	w10, [x8, #440]
  434cd4:	cmp	w10, #0x0
  434cd8:	cset	w10, ge  // ge = tcont
  434cdc:	tbnz	w10, #0, 434f18 <udev_rule_apply_token_to_event+0x29d0>
  434ce0:	ldr	x8, [sp, #3984]
  434ce4:	ldr	x9, [x8, #1528]
  434ce8:	ldr	x10, [sp, #3960]
  434cec:	stur	x9, [x10, #204]
  434cf0:	ldur	x9, [x10, #204]
  434cf4:	cbz	x9, 434d0c <udev_rule_apply_token_to_event+0x27c4>
  434cf8:	ldr	x8, [sp, #3960]
  434cfc:	ldur	x9, [x8, #204]
  434d00:	ldr	x9, [x9, #32]
  434d04:	str	x9, [sp, #2848]
  434d08:	b	434d14 <udev_rule_apply_token_to_event+0x27cc>
  434d0c:	mov	x8, xzr
  434d10:	str	x8, [sp, #2848]
  434d14:	ldr	x8, [sp, #2848]
  434d18:	ldr	x9, [sp, #3960]
  434d1c:	stur	x8, [x9, #196]
  434d20:	ldur	x8, [x9, #196]
  434d24:	cbz	x8, 434d3c <udev_rule_apply_token_to_event+0x27f4>
  434d28:	ldr	x8, [sp, #3960]
  434d2c:	ldur	x9, [x8, #196]
  434d30:	ldr	x9, [x9, #8]
  434d34:	str	x9, [sp, #2840]
  434d38:	b	434d44 <udev_rule_apply_token_to_event+0x27fc>
  434d3c:	mov	x8, xzr
  434d40:	str	x8, [sp, #2840]
  434d44:	ldr	x8, [sp, #2840]
  434d48:	ldr	x9, [sp, #3960]
  434d4c:	stur	x8, [x9, #188]
  434d50:	ldur	x8, [x9, #196]
  434d54:	cbz	x8, 434d6c <udev_rule_apply_token_to_event+0x2824>
  434d58:	ldr	x8, [sp, #3960]
  434d5c:	ldur	x9, [x8, #196]
  434d60:	ldr	x9, [x9]
  434d64:	str	x9, [sp, #2832]
  434d68:	b	434d74 <udev_rule_apply_token_to_event+0x282c>
  434d6c:	mov	x8, xzr
  434d70:	str	x8, [sp, #2832]
  434d74:	ldr	x8, [sp, #2832]
  434d78:	ldr	x9, [sp, #3960]
  434d7c:	stur	x8, [x9, #180]
  434d80:	mov	x8, xzr
  434d84:	stur	x8, [x9, #164]
  434d88:	ldr	x8, [sp, #3984]
  434d8c:	ldr	x10, [x8, #1520]
  434d90:	stur	x10, [x9, #156]
  434d94:	mov	w11, #0x7                   	// #7
  434d98:	str	w11, [x9, #152]
  434d9c:	ldr	w11, [x8, #440]
  434da0:	str	w11, [x9, #148]
  434da4:	ldur	x10, [x9, #156]
  434da8:	cbz	x10, 434df4 <udev_rule_apply_token_to_event+0x28ac>
  434dac:	mov	w0, #0x1                   	// #1
  434db0:	bl	40a3f0 <log_get_max_level_realm@plt>
  434db4:	ldr	x8, [sp, #3960]
  434db8:	ldr	w9, [x8, #152]
  434dbc:	cmp	w0, w9
  434dc0:	cset	w9, ge  // ge = tcont
  434dc4:	mov	w10, #0x1                   	// #1
  434dc8:	eor	w9, w9, #0x1
  434dcc:	eor	w9, w9, w10
  434dd0:	and	w9, w9, #0x1
  434dd4:	mov	w1, w9
  434dd8:	sxtw	x11, w1
  434ddc:	cbz	x11, 434df4 <udev_rule_apply_token_to_event+0x28ac>
  434de0:	ldr	x8, [sp, #3960]
  434de4:	ldur	x0, [x8, #156]
  434de8:	add	x1, sp, #0xa, lsl #12
  434dec:	add	x1, x1, #0xb50
  434df0:	bl	40a860 <sd_device_get_sysname@plt>
  434df4:	ldr	x8, [sp, #3960]
  434df8:	ldr	w0, [x8, #152]
  434dfc:	ldr	w1, [x8, #148]
  434e00:	ldur	x9, [x8, #164]
  434e04:	mov	x10, xzr
  434e08:	cmp	x9, #0x0
  434e0c:	ldr	x9, [sp, #3912]
  434e10:	csel	x5, x9, x10, ne  // ne = any
  434e14:	ldur	x6, [x8, #164]
  434e18:	ldur	x10, [x8, #180]
  434e1c:	str	w0, [sp, #2828]
  434e20:	mov	x0, x10
  434e24:	str	w1, [sp, #2824]
  434e28:	str	x5, [sp, #2816]
  434e2c:	str	x6, [sp, #2808]
  434e30:	bl	424274 <strna>
  434e34:	ldr	x8, [sp, #3960]
  434e38:	ldur	x9, [x8, #188]
  434e3c:	str	x0, [sp, #2800]
  434e40:	cbz	x9, 434e58 <udev_rule_apply_token_to_event+0x2910>
  434e44:	ldr	x8, [sp, #3960]
  434e48:	ldur	x9, [x8, #188]
  434e4c:	ldr	w10, [x9, #8]
  434e50:	str	w10, [sp, #2796]
  434e54:	b	434e60 <udev_rule_apply_token_to_event+0x2918>
  434e58:	mov	w8, wzr
  434e5c:	str	w8, [sp, #2796]
  434e60:	ldr	w8, [sp, #2796]
  434e64:	ldr	w0, [sp, #2828]
  434e68:	ldr	w1, [sp, #2824]
  434e6c:	ldr	x2, [sp, #3928]
  434e70:	mov	w3, #0x6aa                 	// #1706
  434e74:	ldr	x4, [sp, #3920]
  434e78:	ldr	x5, [sp, #2816]
  434e7c:	ldr	x6, [sp, #2808]
  434e80:	mov	x9, xzr
  434e84:	mov	x7, x9
  434e88:	mov	x10, sp
  434e8c:	str	x9, [x10]
  434e90:	mov	x9, sp
  434e94:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  434e98:	add	x10, x10, #0x6f5
  434e9c:	str	x10, [x9, #8]
  434ea0:	mov	x9, sp
  434ea4:	ldr	x10, [sp, #2800]
  434ea8:	str	x10, [x9, #16]
  434eac:	mov	x9, sp
  434eb0:	mov	x11, #0x18                  	// #24
  434eb4:	str	w8, [x9, #24]
  434eb8:	mov	x9, sp
  434ebc:	add	x12, sp, #0xf, lsl #12
  434ec0:	add	x12, x12, #0x448
  434ec4:	str	x12, [x9, #32]
  434ec8:	str	x11, [sp, #2784]
  434ecc:	bl	40a870 <log_object_internal@plt>
  434ed0:	ldr	x9, [sp, #3960]
  434ed4:	str	w0, [x9, #144]
  434ed8:	ldr	w8, [x9, #144]
  434edc:	str	w8, [x9, #176]
  434ee0:	ldr	x10, [sp, #3984]
  434ee4:	ldr	x11, [x10, #1488]
  434ee8:	ldr	w8, [x11]
  434eec:	lsl	w8, w8, #16
  434ef0:	ldr	x11, [sp, #2784]
  434ef4:	asr	w8, w8, w11
  434ef8:	mov	w11, #0x1                   	// #1
  434efc:	cmp	w8, #0x1
  434f00:	cset	w8, eq  // eq = none
  434f04:	and	w8, w8, #0x1
  434f08:	str	w8, [x10, #1540]
  434f0c:	ldr	x12, [sp, #3976]
  434f10:	str	w11, [x12, #1300]
  434f14:	b	4353e4 <udev_rule_apply_token_to_event+0x2e9c>
  434f18:	ldr	x8, [sp, #3984]
  434f1c:	ldr	w9, [x8, #440]
  434f20:	cbnz	w9, 434f34 <udev_rule_apply_token_to_event+0x29ec>
  434f24:	mov	w8, #0xf                   	// #15
  434f28:	ldr	x9, [sp, #3976]
  434f2c:	str	w8, [x9, #1300]
  434f30:	b	4353e4 <udev_rule_apply_token_to_event+0x2e9c>
  434f34:	ldr	x8, [sp, #3960]
  434f38:	ldur	x0, [x8, #228]
  434f3c:	add	x1, sp, #0xa, lsl #12
  434f40:	add	x1, x1, #0xb88
  434f44:	add	x2, sp, #0xa, lsl #12
  434f48:	add	x2, x2, #0xb80
  434f4c:	bl	43c018 <get_property_from_string>
  434f50:	ldr	x8, [sp, #3984]
  434f54:	str	w0, [x8, #440]
  434f58:	ldr	w9, [x8, #440]
  434f5c:	cmp	w9, #0x0
  434f60:	cset	w9, ge  // ge = tcont
  434f64:	tbnz	w9, #0, 435170 <udev_rule_apply_token_to_event+0x2c28>
  434f68:	ldr	x8, [sp, #3984]
  434f6c:	ldr	x9, [x8, #1528]
  434f70:	ldr	x10, [sp, #3960]
  434f74:	stur	x9, [x10, #132]
  434f78:	ldur	x9, [x10, #132]
  434f7c:	cbz	x9, 434f94 <udev_rule_apply_token_to_event+0x2a4c>
  434f80:	ldr	x8, [sp, #3960]
  434f84:	ldur	x9, [x8, #132]
  434f88:	ldr	x9, [x9, #32]
  434f8c:	str	x9, [sp, #2776]
  434f90:	b	434f9c <udev_rule_apply_token_to_event+0x2a54>
  434f94:	mov	x8, xzr
  434f98:	str	x8, [sp, #2776]
  434f9c:	ldr	x8, [sp, #2776]
  434fa0:	ldr	x9, [sp, #3960]
  434fa4:	stur	x8, [x9, #124]
  434fa8:	ldur	x8, [x9, #124]
  434fac:	cbz	x8, 434fc4 <udev_rule_apply_token_to_event+0x2a7c>
  434fb0:	ldr	x8, [sp, #3960]
  434fb4:	ldur	x9, [x8, #124]
  434fb8:	ldr	x9, [x9, #8]
  434fbc:	str	x9, [sp, #2768]
  434fc0:	b	434fcc <udev_rule_apply_token_to_event+0x2a84>
  434fc4:	mov	x8, xzr
  434fc8:	str	x8, [sp, #2768]
  434fcc:	ldr	x8, [sp, #2768]
  434fd0:	ldr	x9, [sp, #3960]
  434fd4:	stur	x8, [x9, #116]
  434fd8:	ldur	x8, [x9, #124]
  434fdc:	cbz	x8, 434ff4 <udev_rule_apply_token_to_event+0x2aac>
  434fe0:	ldr	x8, [sp, #3960]
  434fe4:	ldur	x9, [x8, #124]
  434fe8:	ldr	x9, [x9]
  434fec:	str	x9, [sp, #2760]
  434ff0:	b	434ffc <udev_rule_apply_token_to_event+0x2ab4>
  434ff4:	mov	x8, xzr
  434ff8:	str	x8, [sp, #2760]
  434ffc:	ldr	x8, [sp, #2760]
  435000:	ldr	x9, [sp, #3960]
  435004:	stur	x8, [x9, #108]
  435008:	mov	x8, xzr
  43500c:	stur	x8, [x9, #92]
  435010:	ldr	x8, [sp, #3984]
  435014:	ldr	x10, [x8, #1520]
  435018:	stur	x10, [x9, #84]
  43501c:	mov	w11, #0x7                   	// #7
  435020:	str	w11, [x9, #80]
  435024:	ldr	w11, [x8, #440]
  435028:	str	w11, [x9, #76]
  43502c:	ldur	x10, [x9, #84]
  435030:	cbz	x10, 43507c <udev_rule_apply_token_to_event+0x2b34>
  435034:	mov	w0, #0x1                   	// #1
  435038:	bl	40a3f0 <log_get_max_level_realm@plt>
  43503c:	ldr	x8, [sp, #3960]
  435040:	ldr	w9, [x8, #80]
  435044:	cmp	w0, w9
  435048:	cset	w9, ge  // ge = tcont
  43504c:	mov	w10, #0x1                   	// #1
  435050:	eor	w9, w9, #0x1
  435054:	eor	w9, w9, w10
  435058:	and	w9, w9, #0x1
  43505c:	mov	w1, w9
  435060:	sxtw	x11, w1
  435064:	cbz	x11, 43507c <udev_rule_apply_token_to_event+0x2b34>
  435068:	ldr	x8, [sp, #3960]
  43506c:	ldur	x0, [x8, #84]
  435070:	add	x1, sp, #0xa, lsl #12
  435074:	add	x1, x1, #0xb08
  435078:	bl	40a860 <sd_device_get_sysname@plt>
  43507c:	ldr	x8, [sp, #3960]
  435080:	ldr	w0, [x8, #80]
  435084:	ldr	w1, [x8, #76]
  435088:	ldur	x9, [x8, #92]
  43508c:	mov	x10, xzr
  435090:	cmp	x9, #0x0
  435094:	ldr	x9, [sp, #3912]
  435098:	csel	x5, x9, x10, ne  // ne = any
  43509c:	ldur	x6, [x8, #92]
  4350a0:	ldur	x10, [x8, #108]
  4350a4:	str	w0, [sp, #2756]
  4350a8:	mov	x0, x10
  4350ac:	str	w1, [sp, #2752]
  4350b0:	str	x5, [sp, #2744]
  4350b4:	str	x6, [sp, #2736]
  4350b8:	bl	424274 <strna>
  4350bc:	ldr	x8, [sp, #3960]
  4350c0:	ldur	x9, [x8, #116]
  4350c4:	str	x0, [sp, #2728]
  4350c8:	cbz	x9, 4350e0 <udev_rule_apply_token_to_event+0x2b98>
  4350cc:	ldr	x8, [sp, #3960]
  4350d0:	ldur	x9, [x8, #116]
  4350d4:	ldr	w10, [x9, #8]
  4350d8:	str	w10, [sp, #2724]
  4350dc:	b	4350e8 <udev_rule_apply_token_to_event+0x2ba0>
  4350e0:	mov	w8, wzr
  4350e4:	str	w8, [sp, #2724]
  4350e8:	ldr	w8, [sp, #2724]
  4350ec:	ldr	x9, [sp, #3960]
  4350f0:	ldur	x10, [x9, #228]
  4350f4:	ldr	w0, [sp, #2756]
  4350f8:	ldr	w1, [sp, #2752]
  4350fc:	ldr	x2, [sp, #3928]
  435100:	mov	w3, #0x6b4                 	// #1716
  435104:	ldr	x4, [sp, #3920]
  435108:	ldr	x5, [sp, #2744]
  43510c:	ldr	x6, [sp, #2736]
  435110:	mov	x11, xzr
  435114:	mov	x7, x11
  435118:	mov	x12, sp
  43511c:	str	x11, [x12]
  435120:	mov	x11, sp
  435124:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  435128:	add	x12, x12, #0x71d
  43512c:	str	x12, [x11, #8]
  435130:	mov	x11, sp
  435134:	ldr	x12, [sp, #2728]
  435138:	str	x12, [x11, #16]
  43513c:	mov	x11, sp
  435140:	str	w8, [x11, #24]
  435144:	mov	x11, sp
  435148:	str	x10, [x11, #32]
  43514c:	bl	40a870 <log_object_internal@plt>
  435150:	ldr	x9, [sp, #3960]
  435154:	str	w0, [x9, #72]
  435158:	ldr	w8, [x9, #72]
  43515c:	str	w8, [x9, #104]
  435160:	mov	w8, #0x10                  	// #16
  435164:	ldr	x10, [sp, #3976]
  435168:	str	w8, [x10, #1300]
  43516c:	b	4353e4 <udev_rule_apply_token_to_event+0x2e9c>
  435170:	ldr	x8, [sp, #3984]
  435174:	ldr	w9, [x8, #440]
  435178:	cbnz	w9, 43518c <udev_rule_apply_token_to_event+0x2c44>
  43517c:	mov	w8, #0x10                  	// #16
  435180:	ldr	x9, [sp, #3976]
  435184:	str	w8, [x9, #1300]
  435188:	b	4353e4 <udev_rule_apply_token_to_event+0x2e9c>
  43518c:	ldr	x8, [sp, #3984]
  435190:	ldr	x0, [x8, #1520]
  435194:	ldr	x9, [sp, #3960]
  435198:	ldur	x1, [x9, #220]
  43519c:	ldur	x2, [x9, #212]
  4351a0:	bl	40aff0 <device_add_property@plt>
  4351a4:	ldr	x8, [sp, #3984]
  4351a8:	str	w0, [x8, #440]
  4351ac:	ldr	w10, [x8, #440]
  4351b0:	cmp	w10, #0x0
  4351b4:	cset	w10, ge  // ge = tcont
  4351b8:	tbnz	w10, #0, 4353dc <udev_rule_apply_token_to_event+0x2e94>
  4351bc:	ldr	x8, [sp, #3984]
  4351c0:	ldr	x9, [x8, #1528]
  4351c4:	ldr	x10, [sp, #3960]
  4351c8:	stur	x9, [x10, #60]
  4351cc:	ldur	x9, [x10, #60]
  4351d0:	cbz	x9, 4351e8 <udev_rule_apply_token_to_event+0x2ca0>
  4351d4:	ldr	x8, [sp, #3960]
  4351d8:	ldur	x9, [x8, #60]
  4351dc:	ldr	x9, [x9, #32]
  4351e0:	str	x9, [sp, #2712]
  4351e4:	b	4351f0 <udev_rule_apply_token_to_event+0x2ca8>
  4351e8:	mov	x8, xzr
  4351ec:	str	x8, [sp, #2712]
  4351f0:	ldr	x8, [sp, #2712]
  4351f4:	ldr	x9, [sp, #3960]
  4351f8:	stur	x8, [x9, #52]
  4351fc:	ldur	x8, [x9, #52]
  435200:	cbz	x8, 435218 <udev_rule_apply_token_to_event+0x2cd0>
  435204:	ldr	x8, [sp, #3960]
  435208:	ldur	x9, [x8, #52]
  43520c:	ldr	x9, [x9, #8]
  435210:	str	x9, [sp, #2704]
  435214:	b	435220 <udev_rule_apply_token_to_event+0x2cd8>
  435218:	mov	x8, xzr
  43521c:	str	x8, [sp, #2704]
  435220:	ldr	x8, [sp, #2704]
  435224:	ldr	x9, [sp, #3960]
  435228:	stur	x8, [x9, #44]
  43522c:	ldur	x8, [x9, #52]
  435230:	cbz	x8, 435248 <udev_rule_apply_token_to_event+0x2d00>
  435234:	ldr	x8, [sp, #3960]
  435238:	ldur	x9, [x8, #52]
  43523c:	ldr	x9, [x9]
  435240:	str	x9, [sp, #2696]
  435244:	b	435250 <udev_rule_apply_token_to_event+0x2d08>
  435248:	mov	x8, xzr
  43524c:	str	x8, [sp, #2696]
  435250:	ldr	x8, [sp, #2696]
  435254:	ldr	x9, [sp, #3960]
  435258:	stur	x8, [x9, #36]
  43525c:	mov	x8, xzr
  435260:	stur	x8, [x9, #20]
  435264:	ldr	x8, [sp, #3984]
  435268:	ldr	x10, [x8, #1520]
  43526c:	stur	x10, [x9, #12]
  435270:	mov	w11, #0x3                   	// #3
  435274:	str	w11, [x9, #8]
  435278:	ldr	w11, [x8, #440]
  43527c:	str	w11, [x9, #4]
  435280:	ldur	x10, [x9, #12]
  435284:	cbz	x10, 4352d0 <udev_rule_apply_token_to_event+0x2d88>
  435288:	mov	w0, #0x1                   	// #1
  43528c:	bl	40a3f0 <log_get_max_level_realm@plt>
  435290:	ldr	x8, [sp, #3960]
  435294:	ldr	w9, [x8, #8]
  435298:	cmp	w0, w9
  43529c:	cset	w9, ge  // ge = tcont
  4352a0:	mov	w10, #0x1                   	// #1
  4352a4:	eor	w9, w9, #0x1
  4352a8:	eor	w9, w9, w10
  4352ac:	and	w9, w9, #0x1
  4352b0:	mov	w1, w9
  4352b4:	sxtw	x11, w1
  4352b8:	cbz	x11, 4352d0 <udev_rule_apply_token_to_event+0x2d88>
  4352bc:	ldr	x8, [sp, #3960]
  4352c0:	ldur	x0, [x8, #12]
  4352c4:	add	x1, sp, #0xa, lsl #12
  4352c8:	add	x1, x1, #0xac0
  4352cc:	bl	40a860 <sd_device_get_sysname@plt>
  4352d0:	ldr	x8, [sp, #3960]
  4352d4:	ldr	w0, [x8, #8]
  4352d8:	ldr	w1, [x8, #4]
  4352dc:	ldur	x9, [x8, #20]
  4352e0:	mov	x10, xzr
  4352e4:	cmp	x9, #0x0
  4352e8:	ldr	x9, [sp, #3912]
  4352ec:	csel	x5, x9, x10, ne  // ne = any
  4352f0:	ldur	x6, [x8, #20]
  4352f4:	ldur	x10, [x8, #36]
  4352f8:	str	w0, [sp, #2692]
  4352fc:	mov	x0, x10
  435300:	str	w1, [sp, #2688]
  435304:	str	x5, [sp, #2680]
  435308:	str	x6, [sp, #2672]
  43530c:	bl	424274 <strna>
  435310:	ldr	x8, [sp, #3960]
  435314:	ldur	x9, [x8, #44]
  435318:	str	x0, [sp, #2664]
  43531c:	cbz	x9, 435334 <udev_rule_apply_token_to_event+0x2dec>
  435320:	ldr	x8, [sp, #3960]
  435324:	ldur	x9, [x8, #44]
  435328:	ldr	w10, [x9, #8]
  43532c:	str	w10, [sp, #2660]
  435330:	b	43533c <udev_rule_apply_token_to_event+0x2df4>
  435334:	mov	w8, wzr
  435338:	str	w8, [sp, #2660]
  43533c:	ldr	w8, [sp, #2660]
  435340:	ldr	x9, [sp, #3960]
  435344:	ldur	x10, [x9, #220]
  435348:	ldur	x11, [x9, #212]
  43534c:	ldr	w0, [sp, #2692]
  435350:	ldr	w1, [sp, #2688]
  435354:	ldr	x2, [sp, #3928]
  435358:	mov	w3, #0x6be                 	// #1726
  43535c:	ldr	x4, [sp, #3920]
  435360:	ldr	x5, [sp, #2680]
  435364:	ldr	x6, [sp, #2672]
  435368:	mov	x12, xzr
  43536c:	mov	x7, x12
  435370:	mov	x13, sp
  435374:	str	x12, [x13]
  435378:	mov	x12, sp
  43537c:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  435380:	add	x13, x13, #0x759
  435384:	str	x13, [x12, #8]
  435388:	mov	x12, sp
  43538c:	ldr	x13, [sp, #2664]
  435390:	str	x13, [x12, #16]
  435394:	mov	x12, sp
  435398:	str	w8, [x12, #24]
  43539c:	mov	x12, sp
  4353a0:	str	x10, [x12, #32]
  4353a4:	mov	x10, sp
  4353a8:	str	x11, [x10, #40]
  4353ac:	bl	40a870 <log_object_internal@plt>
  4353b0:	ldr	x9, [sp, #3960]
  4353b4:	str	w0, [x9]
  4353b8:	ldr	w8, [x9]
  4353bc:	str	w8, [x9, #32]
  4353c0:	ldr	w8, [x9, #32]
  4353c4:	ldr	x10, [sp, #3984]
  4353c8:	str	w8, [x10, #1540]
  4353cc:	mov	w8, #0x1                   	// #1
  4353d0:	ldr	x11, [sp, #3976]
  4353d4:	str	w8, [x11, #1300]
  4353d8:	b	4353e4 <udev_rule_apply_token_to_event+0x2e9c>
  4353dc:	ldr	x8, [sp, #3976]
  4353e0:	str	wzr, [x8, #1300]
  4353e4:	add	x0, sp, #0xa, lsl #12
  4353e8:	add	x0, x0, #0xb90
  4353ec:	bl	4230c8 <freep>
  4353f0:	ldr	x8, [sp, #3976]
  4353f4:	ldr	w9, [x8, #1300]
  4353f8:	str	w9, [sp, #2656]
  4353fc:	cbz	w9, 435424 <udev_rule_apply_token_to_event+0x2edc>
  435400:	b	435404 <udev_rule_apply_token_to_event+0x2ebc>
  435404:	ldr	w8, [sp, #2656]
  435408:	cmp	w8, #0xf
  43540c:	b.eq	435428 <udev_rule_apply_token_to_event+0x2ee0>  // b.none
  435410:	b	435414 <udev_rule_apply_token_to_event+0x2ecc>
  435414:	ldr	w8, [sp, #2656]
  435418:	cmp	w8, #0x10
  43541c:	b.eq	434ca4 <udev_rule_apply_token_to_event+0x275c>  // b.none
  435420:	b	435458 <udev_rule_apply_token_to_event+0x2f10>
  435424:	b	434ca4 <udev_rule_apply_token_to_event+0x275c>
  435428:	ldr	x8, [sp, #3984]
  43542c:	ldr	x9, [x8, #1488]
  435430:	ldr	w10, [x9]
  435434:	lsl	w10, w10, #16
  435438:	asr	w10, w10, #24
  43543c:	cmp	w10, #0x0
  435440:	cset	w10, eq  // eq = none
  435444:	and	w10, w10, #0x1
  435448:	str	w10, [x8, #1540]
  43544c:	mov	w10, #0x1                   	// #1
  435450:	ldr	x9, [sp, #3976]
  435454:	str	w10, [x9, #1300]
  435458:	add	x0, sp, #0xa, lsl #12
  43545c:	add	x0, x0, #0xc28
  435460:	bl	4230f0 <fclosep>
  435464:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  435468:	ldr	x8, [sp, #3984]
  43546c:	ldr	x0, [x8, #1512]
  435470:	ldr	x9, [x8, #1488]
  435474:	ldr	x1, [x9, #8]
  435478:	add	x2, sp, #0xf, lsl #12
  43547c:	add	x2, x2, #0x448
  435480:	mov	x3, #0x400                 	// #1024
  435484:	mov	w10, wzr
  435488:	and	w4, w10, #0x1
  43548c:	bl	4183c0 <udev_event_apply_format>
  435490:	ldr	x8, [sp, #3984]
  435494:	ldr	x9, [x8, #1528]
  435498:	ldr	x11, [sp, #3952]
  43549c:	str	x9, [x11, #2752]
  4354a0:	ldr	x9, [x11, #2752]
  4354a4:	cbz	x9, 4354bc <udev_rule_apply_token_to_event+0x2f74>
  4354a8:	ldr	x8, [sp, #3952]
  4354ac:	ldr	x9, [x8, #2752]
  4354b0:	ldr	x9, [x9, #32]
  4354b4:	str	x9, [sp, #2648]
  4354b8:	b	4354c4 <udev_rule_apply_token_to_event+0x2f7c>
  4354bc:	mov	x8, xzr
  4354c0:	str	x8, [sp, #2648]
  4354c4:	ldr	x8, [sp, #2648]
  4354c8:	ldr	x9, [sp, #3952]
  4354cc:	str	x8, [x9, #2744]
  4354d0:	ldr	x8, [x9, #2744]
  4354d4:	cbz	x8, 4354ec <udev_rule_apply_token_to_event+0x2fa4>
  4354d8:	ldr	x8, [sp, #3952]
  4354dc:	ldr	x9, [x8, #2744]
  4354e0:	ldr	x9, [x9, #8]
  4354e4:	str	x9, [sp, #2640]
  4354e8:	b	4354f4 <udev_rule_apply_token_to_event+0x2fac>
  4354ec:	mov	x8, xzr
  4354f0:	str	x8, [sp, #2640]
  4354f4:	ldr	x8, [sp, #2640]
  4354f8:	ldr	x9, [sp, #3952]
  4354fc:	str	x8, [x9, #2736]
  435500:	ldr	x8, [x9, #2744]
  435504:	cbz	x8, 43551c <udev_rule_apply_token_to_event+0x2fd4>
  435508:	ldr	x8, [sp, #3952]
  43550c:	ldr	x9, [x8, #2744]
  435510:	ldr	x9, [x9]
  435514:	str	x9, [sp, #2632]
  435518:	b	435524 <udev_rule_apply_token_to_event+0x2fdc>
  43551c:	mov	x8, xzr
  435520:	str	x8, [sp, #2632]
  435524:	ldr	x8, [sp, #2632]
  435528:	ldr	x9, [sp, #3952]
  43552c:	str	x8, [x9, #2728]
  435530:	mov	x8, xzr
  435534:	str	x8, [x9, #2712]
  435538:	ldr	x8, [sp, #3984]
  43553c:	ldr	x10, [x8, #1520]
  435540:	str	x10, [x9, #2704]
  435544:	mov	w11, #0x7                   	// #7
  435548:	str	w11, [x9, #2700]
  43554c:	str	wzr, [x9, #2696]
  435550:	ldr	x10, [x9, #2704]
  435554:	cbz	x10, 4355a0 <udev_rule_apply_token_to_event+0x3058>
  435558:	mov	w0, #0x1                   	// #1
  43555c:	bl	40a3f0 <log_get_max_level_realm@plt>
  435560:	ldr	x8, [sp, #3952]
  435564:	ldr	w9, [x8, #2700]
  435568:	cmp	w0, w9
  43556c:	cset	w9, ge  // ge = tcont
  435570:	mov	w10, #0x1                   	// #1
  435574:	eor	w9, w9, #0x1
  435578:	eor	w9, w9, w10
  43557c:	and	w9, w9, #0x1
  435580:	mov	w1, w9
  435584:	sxtw	x11, w1
  435588:	cbz	x11, 4355a0 <udev_rule_apply_token_to_event+0x3058>
  43558c:	ldr	x8, [sp, #3952]
  435590:	ldr	x0, [x8, #2704]
  435594:	add	x1, sp, #0x6, lsl #12
  435598:	add	x1, x1, #0xa68
  43559c:	bl	40a860 <sd_device_get_sysname@plt>
  4355a0:	ldr	x8, [sp, #3952]
  4355a4:	ldr	w0, [x8, #2700]
  4355a8:	ldr	w1, [x8, #2696]
  4355ac:	ldr	x9, [x8, #2712]
  4355b0:	mov	x10, xzr
  4355b4:	cmp	x9, #0x0
  4355b8:	ldr	x9, [sp, #3912]
  4355bc:	csel	x5, x9, x10, ne  // ne = any
  4355c0:	ldr	x6, [x8, #2712]
  4355c4:	ldr	x10, [x8, #2728]
  4355c8:	str	w0, [sp, #2628]
  4355cc:	mov	x0, x10
  4355d0:	str	w1, [sp, #2624]
  4355d4:	str	x5, [sp, #2616]
  4355d8:	str	x6, [sp, #2608]
  4355dc:	bl	424274 <strna>
  4355e0:	ldr	x8, [sp, #3952]
  4355e4:	ldr	x9, [x8, #2736]
  4355e8:	str	x0, [sp, #2600]
  4355ec:	cbz	x9, 435604 <udev_rule_apply_token_to_event+0x30bc>
  4355f0:	ldr	x8, [sp, #3952]
  4355f4:	ldr	x9, [x8, #2736]
  4355f8:	ldr	w10, [x9, #8]
  4355fc:	str	w10, [sp, #2596]
  435600:	b	43560c <udev_rule_apply_token_to_event+0x30c4>
  435604:	mov	w8, wzr
  435608:	str	w8, [sp, #2596]
  43560c:	ldr	w8, [sp, #2596]
  435610:	ldr	w0, [sp, #2628]
  435614:	ldr	w1, [sp, #2624]
  435618:	ldr	x2, [sp, #3928]
  43561c:	mov	w3, #0x6c7                 	// #1735
  435620:	ldr	x4, [sp, #3920]
  435624:	ldr	x5, [sp, #2616]
  435628:	ldr	x6, [sp, #2608]
  43562c:	mov	x9, xzr
  435630:	mov	x7, x9
  435634:	mov	x10, sp
  435638:	str	x9, [x10]
  43563c:	mov	x9, sp
  435640:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  435644:	add	x10, x10, #0x780
  435648:	str	x10, [x9, #8]
  43564c:	mov	x9, sp
  435650:	ldr	x10, [sp, #2600]
  435654:	str	x10, [x9, #16]
  435658:	mov	x9, sp
  43565c:	str	w8, [x9, #24]
  435660:	mov	x9, sp
  435664:	add	x11, sp, #0xf, lsl #12
  435668:	add	x11, x11, #0x448
  43566c:	str	x11, [x9, #32]
  435670:	str	x11, [sp, #2584]
  435674:	bl	40a870 <log_object_internal@plt>
  435678:	ldr	x9, [sp, #3952]
  43567c:	str	w0, [x9, #2692]
  435680:	ldr	w8, [x9, #2692]
  435684:	str	w8, [x9, #2724]
  435688:	ldr	x10, [sp, #3984]
  43568c:	ldr	x0, [x10, #1512]
  435690:	ldr	x1, [x10, #1504]
  435694:	mov	w8, #0x1                   	// #1
  435698:	and	w2, w8, #0x1
  43569c:	ldr	x3, [sp, #2584]
  4356a0:	add	x4, sp, #0x6, lsl #12
  4356a4:	add	x4, x4, #0xaac
  4356a8:	mov	x5, #0x4000                	// #16384
  4356ac:	bl	419e80 <udev_event_spawn>
  4356b0:	ldr	x9, [sp, #3984]
  4356b4:	str	w0, [x9, #440]
  4356b8:	ldr	w8, [x9, #440]
  4356bc:	cbz	w8, 435afc <udev_rule_apply_token_to_event+0x35b4>
  4356c0:	ldr	x8, [sp, #3984]
  4356c4:	ldr	w9, [x8, #440]
  4356c8:	cmp	w9, #0x0
  4356cc:	cset	w9, ge  // ge = tcont
  4356d0:	tbnz	w9, #0, 4358d0 <udev_rule_apply_token_to_event+0x3388>
  4356d4:	ldr	x8, [sp, #3984]
  4356d8:	ldr	x9, [x8, #1528]
  4356dc:	ldr	x10, [sp, #3952]
  4356e0:	str	x9, [x10, #2680]
  4356e4:	ldr	x9, [x10, #2680]
  4356e8:	cbz	x9, 435700 <udev_rule_apply_token_to_event+0x31b8>
  4356ec:	ldr	x8, [sp, #3952]
  4356f0:	ldr	x9, [x8, #2680]
  4356f4:	ldr	x9, [x9, #32]
  4356f8:	str	x9, [sp, #2576]
  4356fc:	b	435708 <udev_rule_apply_token_to_event+0x31c0>
  435700:	mov	x8, xzr
  435704:	str	x8, [sp, #2576]
  435708:	ldr	x8, [sp, #2576]
  43570c:	ldr	x9, [sp, #3952]
  435710:	str	x8, [x9, #2672]
  435714:	ldr	x8, [x9, #2672]
  435718:	cbz	x8, 435730 <udev_rule_apply_token_to_event+0x31e8>
  43571c:	ldr	x8, [sp, #3952]
  435720:	ldr	x9, [x8, #2672]
  435724:	ldr	x9, [x9, #8]
  435728:	str	x9, [sp, #2568]
  43572c:	b	435738 <udev_rule_apply_token_to_event+0x31f0>
  435730:	mov	x8, xzr
  435734:	str	x8, [sp, #2568]
  435738:	ldr	x8, [sp, #2568]
  43573c:	ldr	x9, [sp, #3952]
  435740:	str	x8, [x9, #2664]
  435744:	ldr	x8, [x9, #2672]
  435748:	cbz	x8, 435760 <udev_rule_apply_token_to_event+0x3218>
  43574c:	ldr	x8, [sp, #3952]
  435750:	ldr	x9, [x8, #2672]
  435754:	ldr	x9, [x9]
  435758:	str	x9, [sp, #2560]
  43575c:	b	435768 <udev_rule_apply_token_to_event+0x3220>
  435760:	mov	x8, xzr
  435764:	str	x8, [sp, #2560]
  435768:	ldr	x8, [sp, #2560]
  43576c:	ldr	x9, [sp, #3952]
  435770:	str	x8, [x9, #2656]
  435774:	mov	x8, xzr
  435778:	str	x8, [x9, #2640]
  43577c:	ldr	x8, [sp, #3984]
  435780:	ldr	x10, [x8, #1520]
  435784:	str	x10, [x9, #2632]
  435788:	mov	w11, #0x4                   	// #4
  43578c:	str	w11, [x9, #2628]
  435790:	ldr	w11, [x8, #440]
  435794:	str	w11, [x9, #2624]
  435798:	ldr	x10, [x9, #2632]
  43579c:	cbz	x10, 4357e8 <udev_rule_apply_token_to_event+0x32a0>
  4357a0:	mov	w0, #0x1                   	// #1
  4357a4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4357a8:	ldr	x8, [sp, #3952]
  4357ac:	ldr	w9, [x8, #2628]
  4357b0:	cmp	w0, w9
  4357b4:	cset	w9, ge  // ge = tcont
  4357b8:	mov	w10, #0x1                   	// #1
  4357bc:	eor	w9, w9, #0x1
  4357c0:	eor	w9, w9, w10
  4357c4:	and	w9, w9, #0x1
  4357c8:	mov	w1, w9
  4357cc:	sxtw	x11, w1
  4357d0:	cbz	x11, 4357e8 <udev_rule_apply_token_to_event+0x32a0>
  4357d4:	ldr	x8, [sp, #3952]
  4357d8:	ldr	x0, [x8, #2632]
  4357dc:	add	x1, sp, #0x6, lsl #12
  4357e0:	add	x1, x1, #0xa20
  4357e4:	bl	40a860 <sd_device_get_sysname@plt>
  4357e8:	ldr	x8, [sp, #3952]
  4357ec:	ldr	w0, [x8, #2628]
  4357f0:	ldr	w1, [x8, #2624]
  4357f4:	ldr	x9, [x8, #2640]
  4357f8:	mov	x10, xzr
  4357fc:	cmp	x9, #0x0
  435800:	ldr	x9, [sp, #3912]
  435804:	csel	x5, x9, x10, ne  // ne = any
  435808:	ldr	x6, [x8, #2640]
  43580c:	ldr	x10, [x8, #2656]
  435810:	str	w0, [sp, #2556]
  435814:	mov	x0, x10
  435818:	str	w1, [sp, #2552]
  43581c:	str	x5, [sp, #2544]
  435820:	str	x6, [sp, #2536]
  435824:	bl	424274 <strna>
  435828:	ldr	x8, [sp, #3952]
  43582c:	ldr	x9, [x8, #2664]
  435830:	str	x0, [sp, #2528]
  435834:	cbz	x9, 43584c <udev_rule_apply_token_to_event+0x3304>
  435838:	ldr	x8, [sp, #3952]
  43583c:	ldr	x9, [x8, #2664]
  435840:	ldr	w10, [x9, #8]
  435844:	str	w10, [sp, #2524]
  435848:	b	435854 <udev_rule_apply_token_to_event+0x330c>
  43584c:	mov	w8, wzr
  435850:	str	w8, [sp, #2524]
  435854:	ldr	w8, [sp, #2524]
  435858:	ldr	w0, [sp, #2556]
  43585c:	ldr	w1, [sp, #2552]
  435860:	ldr	x2, [sp, #3928]
  435864:	mov	w3, #0x6cc                 	// #1740
  435868:	ldr	x4, [sp, #3920]
  43586c:	ldr	x5, [sp, #2544]
  435870:	ldr	x6, [sp, #2536]
  435874:	mov	x9, xzr
  435878:	mov	x7, x9
  43587c:	mov	x10, sp
  435880:	str	x9, [x10]
  435884:	mov	x9, sp
  435888:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43588c:	add	x10, x10, #0x620
  435890:	str	x10, [x9, #8]
  435894:	mov	x9, sp
  435898:	ldr	x10, [sp, #2528]
  43589c:	str	x10, [x9, #16]
  4358a0:	mov	x9, sp
  4358a4:	str	w8, [x9, #24]
  4358a8:	mov	x9, sp
  4358ac:	add	x11, sp, #0xf, lsl #12
  4358b0:	add	x11, x11, #0x448
  4358b4:	str	x11, [x9, #32]
  4358b8:	bl	40a870 <log_object_internal@plt>
  4358bc:	ldr	x9, [sp, #3952]
  4358c0:	str	w0, [x9, #2620]
  4358c4:	ldr	w8, [x9, #2620]
  4358c8:	str	w8, [x9, #2652]
  4358cc:	b	435ad4 <udev_rule_apply_token_to_event+0x358c>
  4358d0:	ldr	x8, [sp, #3984]
  4358d4:	ldr	x9, [x8, #1528]
  4358d8:	ldr	x10, [sp, #3952]
  4358dc:	str	x9, [x10, #2608]
  4358e0:	ldr	x9, [x10, #2608]
  4358e4:	cbz	x9, 4358fc <udev_rule_apply_token_to_event+0x33b4>
  4358e8:	ldr	x8, [sp, #3952]
  4358ec:	ldr	x9, [x8, #2608]
  4358f0:	ldr	x9, [x9, #32]
  4358f4:	str	x9, [sp, #2512]
  4358f8:	b	435904 <udev_rule_apply_token_to_event+0x33bc>
  4358fc:	mov	x8, xzr
  435900:	str	x8, [sp, #2512]
  435904:	ldr	x8, [sp, #2512]
  435908:	ldr	x9, [sp, #3952]
  43590c:	str	x8, [x9, #2600]
  435910:	ldr	x8, [x9, #2600]
  435914:	cbz	x8, 43592c <udev_rule_apply_token_to_event+0x33e4>
  435918:	ldr	x8, [sp, #3952]
  43591c:	ldr	x9, [x8, #2600]
  435920:	ldr	x9, [x9, #8]
  435924:	str	x9, [sp, #2504]
  435928:	b	435934 <udev_rule_apply_token_to_event+0x33ec>
  43592c:	mov	x8, xzr
  435930:	str	x8, [sp, #2504]
  435934:	ldr	x8, [sp, #2504]
  435938:	ldr	x9, [sp, #3952]
  43593c:	str	x8, [x9, #2592]
  435940:	ldr	x8, [x9, #2600]
  435944:	cbz	x8, 43595c <udev_rule_apply_token_to_event+0x3414>
  435948:	ldr	x8, [sp, #3952]
  43594c:	ldr	x9, [x8, #2600]
  435950:	ldr	x9, [x9]
  435954:	str	x9, [sp, #2496]
  435958:	b	435964 <udev_rule_apply_token_to_event+0x341c>
  43595c:	mov	x8, xzr
  435960:	str	x8, [sp, #2496]
  435964:	ldr	x8, [sp, #2496]
  435968:	ldr	x9, [sp, #3952]
  43596c:	str	x8, [x9, #2584]
  435970:	mov	x8, xzr
  435974:	str	x8, [x9, #2568]
  435978:	ldr	x8, [sp, #3984]
  43597c:	ldr	x10, [x8, #1520]
  435980:	str	x10, [x9, #2560]
  435984:	mov	w11, #0x7                   	// #7
  435988:	str	w11, [x9, #2556]
  43598c:	str	wzr, [x9, #2552]
  435990:	ldr	x10, [x9, #2560]
  435994:	cbz	x10, 4359e0 <udev_rule_apply_token_to_event+0x3498>
  435998:	mov	w0, #0x1                   	// #1
  43599c:	bl	40a3f0 <log_get_max_level_realm@plt>
  4359a0:	ldr	x8, [sp, #3952]
  4359a4:	ldr	w9, [x8, #2556]
  4359a8:	cmp	w0, w9
  4359ac:	cset	w9, ge  // ge = tcont
  4359b0:	mov	w10, #0x1                   	// #1
  4359b4:	eor	w9, w9, #0x1
  4359b8:	eor	w9, w9, w10
  4359bc:	and	w9, w9, #0x1
  4359c0:	mov	w1, w9
  4359c4:	sxtw	x11, w1
  4359c8:	cbz	x11, 4359e0 <udev_rule_apply_token_to_event+0x3498>
  4359cc:	ldr	x8, [sp, #3952]
  4359d0:	ldr	x0, [x8, #2560]
  4359d4:	add	x1, sp, #0x6, lsl #12
  4359d8:	add	x1, x1, #0x9d8
  4359dc:	bl	40a860 <sd_device_get_sysname@plt>
  4359e0:	ldr	x8, [sp, #3952]
  4359e4:	ldr	w0, [x8, #2556]
  4359e8:	ldr	w1, [x8, #2552]
  4359ec:	ldr	x9, [x8, #2568]
  4359f0:	mov	x10, xzr
  4359f4:	cmp	x9, #0x0
  4359f8:	ldr	x9, [sp, #3912]
  4359fc:	csel	x5, x9, x10, ne  // ne = any
  435a00:	ldr	x6, [x8, #2568]
  435a04:	ldr	x10, [x8, #2584]
  435a08:	str	w0, [sp, #2492]
  435a0c:	mov	x0, x10
  435a10:	str	w1, [sp, #2488]
  435a14:	str	x5, [sp, #2480]
  435a18:	str	x6, [sp, #2472]
  435a1c:	bl	424274 <strna>
  435a20:	ldr	x8, [sp, #3952]
  435a24:	ldr	x9, [x8, #2592]
  435a28:	str	x0, [sp, #2464]
  435a2c:	cbz	x9, 435a44 <udev_rule_apply_token_to_event+0x34fc>
  435a30:	ldr	x8, [sp, #3952]
  435a34:	ldr	x9, [x8, #2592]
  435a38:	ldr	w10, [x9, #8]
  435a3c:	str	w10, [sp, #2460]
  435a40:	b	435a4c <udev_rule_apply_token_to_event+0x3504>
  435a44:	mov	w8, wzr
  435a48:	str	w8, [sp, #2460]
  435a4c:	ldr	w8, [sp, #2460]
  435a50:	ldr	x9, [sp, #3984]
  435a54:	ldr	w10, [x9, #440]
  435a58:	ldr	w0, [sp, #2492]
  435a5c:	ldr	w1, [sp, #2488]
  435a60:	ldr	x2, [sp, #3928]
  435a64:	mov	w3, #0x6ce                 	// #1742
  435a68:	ldr	x4, [sp, #3920]
  435a6c:	ldr	x5, [sp, #2480]
  435a70:	ldr	x6, [sp, #2472]
  435a74:	mov	x11, xzr
  435a78:	mov	x7, x11
  435a7c:	mov	x12, sp
  435a80:	str	x11, [x12]
  435a84:	mov	x11, sp
  435a88:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  435a8c:	add	x12, x12, #0x64b
  435a90:	str	x12, [x11, #8]
  435a94:	mov	x11, sp
  435a98:	ldr	x12, [sp, #2464]
  435a9c:	str	x12, [x11, #16]
  435aa0:	mov	x11, sp
  435aa4:	str	w8, [x11, #24]
  435aa8:	mov	x11, sp
  435aac:	add	x13, sp, #0xf, lsl #12
  435ab0:	add	x13, x13, #0x448
  435ab4:	str	x13, [x11, #32]
  435ab8:	mov	x11, sp
  435abc:	str	w10, [x11, #40]
  435ac0:	bl	40a870 <log_object_internal@plt>
  435ac4:	ldr	x9, [sp, #3952]
  435ac8:	str	w0, [x9, #2548]
  435acc:	ldr	w8, [x9, #2548]
  435ad0:	str	w8, [x9, #2580]
  435ad4:	ldr	x8, [sp, #3984]
  435ad8:	ldr	x9, [x8, #1488]
  435adc:	ldr	w10, [x9]
  435ae0:	lsl	w10, w10, #16
  435ae4:	asr	w10, w10, #24
  435ae8:	cmp	w10, #0x1
  435aec:	cset	w10, eq  // eq = none
  435af0:	and	w10, w10, #0x1
  435af4:	str	w10, [x8, #1540]
  435af8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  435afc:	add	x8, sp, #0x6, lsl #12
  435b00:	add	x8, x8, #0xaac
  435b04:	ldr	x9, [sp, #3952]
  435b08:	str	x8, [x9, #2768]
  435b0c:	ldr	x8, [sp, #3952]
  435b10:	ldr	x0, [x8, #2768]
  435b14:	bl	423ddc <isempty>
  435b18:	eor	w9, w0, #0x1
  435b1c:	tbnz	w9, #0, 435b24 <udev_rule_apply_token_to_event+0x35dc>
  435b20:	b	435ff0 <udev_rule_apply_token_to_event+0x3aa8>
  435b24:	ldr	x8, [sp, #3952]
  435b28:	ldr	x0, [x8, #2768]
  435b2c:	mov	w1, #0xa                   	// #10
  435b30:	bl	40a8c0 <strchr@plt>
  435b34:	ldr	x8, [sp, #3952]
  435b38:	str	x0, [x8, #2760]
  435b3c:	ldr	x9, [x8, #2760]
  435b40:	cbz	x9, 435b5c <udev_rule_apply_token_to_event+0x3614>
  435b44:	ldr	x8, [sp, #3952]
  435b48:	ldr	x9, [x8, #2760]
  435b4c:	add	x10, x9, #0x1
  435b50:	str	x10, [x8, #2760]
  435b54:	mov	w11, #0x0                   	// #0
  435b58:	strb	w11, [x9]
  435b5c:	ldr	x8, [sp, #3952]
  435b60:	ldr	x0, [x8, #2768]
  435b64:	add	x1, sp, #0x6, lsl #12
  435b68:	add	x1, x1, #0x9b8
  435b6c:	add	x2, sp, #0x6, lsl #12
  435b70:	add	x2, x2, #0x9b0
  435b74:	bl	43c018 <get_property_from_string>
  435b78:	ldr	x8, [sp, #3984]
  435b7c:	str	w0, [x8, #440]
  435b80:	ldr	w9, [x8, #440]
  435b84:	cmp	w9, #0x0
  435b88:	cset	w9, ge  // ge = tcont
  435b8c:	tbnz	w9, #0, 435d8c <udev_rule_apply_token_to_event+0x3844>
  435b90:	ldr	x8, [sp, #3984]
  435b94:	ldr	x9, [x8, #1528]
  435b98:	ldr	x10, [sp, #3952]
  435b9c:	str	x9, [x10, #2520]
  435ba0:	ldr	x9, [x10, #2520]
  435ba4:	cbz	x9, 435bbc <udev_rule_apply_token_to_event+0x3674>
  435ba8:	ldr	x8, [sp, #3952]
  435bac:	ldr	x9, [x8, #2520]
  435bb0:	ldr	x9, [x9, #32]
  435bb4:	str	x9, [sp, #2448]
  435bb8:	b	435bc4 <udev_rule_apply_token_to_event+0x367c>
  435bbc:	mov	x8, xzr
  435bc0:	str	x8, [sp, #2448]
  435bc4:	ldr	x8, [sp, #2448]
  435bc8:	ldr	x9, [sp, #3952]
  435bcc:	str	x8, [x9, #2512]
  435bd0:	ldr	x8, [x9, #2512]
  435bd4:	cbz	x8, 435bec <udev_rule_apply_token_to_event+0x36a4>
  435bd8:	ldr	x8, [sp, #3952]
  435bdc:	ldr	x9, [x8, #2512]
  435be0:	ldr	x9, [x9, #8]
  435be4:	str	x9, [sp, #2440]
  435be8:	b	435bf4 <udev_rule_apply_token_to_event+0x36ac>
  435bec:	mov	x8, xzr
  435bf0:	str	x8, [sp, #2440]
  435bf4:	ldr	x8, [sp, #2440]
  435bf8:	ldr	x9, [sp, #3952]
  435bfc:	str	x8, [x9, #2504]
  435c00:	ldr	x8, [x9, #2512]
  435c04:	cbz	x8, 435c1c <udev_rule_apply_token_to_event+0x36d4>
  435c08:	ldr	x8, [sp, #3952]
  435c0c:	ldr	x9, [x8, #2512]
  435c10:	ldr	x9, [x9]
  435c14:	str	x9, [sp, #2432]
  435c18:	b	435c24 <udev_rule_apply_token_to_event+0x36dc>
  435c1c:	mov	x8, xzr
  435c20:	str	x8, [sp, #2432]
  435c24:	ldr	x8, [sp, #2432]
  435c28:	ldr	x9, [sp, #3952]
  435c2c:	str	x8, [x9, #2496]
  435c30:	mov	x8, xzr
  435c34:	str	x8, [x9, #2480]
  435c38:	ldr	x8, [sp, #3984]
  435c3c:	ldr	x10, [x8, #1520]
  435c40:	str	x10, [x9, #2472]
  435c44:	mov	w11, #0x7                   	// #7
  435c48:	str	w11, [x9, #2468]
  435c4c:	ldr	w11, [x8, #440]
  435c50:	str	w11, [x9, #2464]
  435c54:	ldr	x10, [x9, #2472]
  435c58:	cbz	x10, 435ca4 <udev_rule_apply_token_to_event+0x375c>
  435c5c:	mov	w0, #0x1                   	// #1
  435c60:	bl	40a3f0 <log_get_max_level_realm@plt>
  435c64:	ldr	x8, [sp, #3952]
  435c68:	ldr	w9, [x8, #2468]
  435c6c:	cmp	w0, w9
  435c70:	cset	w9, ge  // ge = tcont
  435c74:	mov	w10, #0x1                   	// #1
  435c78:	eor	w9, w9, #0x1
  435c7c:	eor	w9, w9, w10
  435c80:	and	w9, w9, #0x1
  435c84:	mov	w1, w9
  435c88:	sxtw	x11, w1
  435c8c:	cbz	x11, 435ca4 <udev_rule_apply_token_to_event+0x375c>
  435c90:	ldr	x8, [sp, #3952]
  435c94:	ldr	x0, [x8, #2472]
  435c98:	add	x1, sp, #0x6, lsl #12
  435c9c:	add	x1, x1, #0x980
  435ca0:	bl	40a860 <sd_device_get_sysname@plt>
  435ca4:	ldr	x8, [sp, #3952]
  435ca8:	ldr	w0, [x8, #2468]
  435cac:	ldr	w1, [x8, #2464]
  435cb0:	ldr	x9, [x8, #2480]
  435cb4:	mov	x10, xzr
  435cb8:	cmp	x9, #0x0
  435cbc:	ldr	x9, [sp, #3912]
  435cc0:	csel	x5, x9, x10, ne  // ne = any
  435cc4:	ldr	x6, [x8, #2480]
  435cc8:	ldr	x10, [x8, #2496]
  435ccc:	str	w0, [sp, #2428]
  435cd0:	mov	x0, x10
  435cd4:	str	w1, [sp, #2424]
  435cd8:	str	x5, [sp, #2416]
  435cdc:	str	x6, [sp, #2408]
  435ce0:	bl	424274 <strna>
  435ce4:	ldr	x8, [sp, #3952]
  435ce8:	ldr	x9, [x8, #2504]
  435cec:	str	x0, [sp, #2400]
  435cf0:	cbz	x9, 435d08 <udev_rule_apply_token_to_event+0x37c0>
  435cf4:	ldr	x8, [sp, #3952]
  435cf8:	ldr	x9, [x8, #2504]
  435cfc:	ldr	w10, [x9, #8]
  435d00:	str	w10, [sp, #2396]
  435d04:	b	435d10 <udev_rule_apply_token_to_event+0x37c8>
  435d08:	mov	w8, wzr
  435d0c:	str	w8, [sp, #2396]
  435d10:	ldr	w8, [sp, #2396]
  435d14:	ldr	x9, [sp, #3952]
  435d18:	ldr	x10, [x9, #2768]
  435d1c:	ldr	w0, [sp, #2428]
  435d20:	ldr	w1, [sp, #2424]
  435d24:	ldr	x2, [sp, #3928]
  435d28:	mov	w3, #0x6dd                 	// #1757
  435d2c:	ldr	x4, [sp, #3920]
  435d30:	ldr	x5, [sp, #2416]
  435d34:	ldr	x6, [sp, #2408]
  435d38:	mov	x11, xzr
  435d3c:	mov	x7, x11
  435d40:	mov	x12, sp
  435d44:	str	x11, [x12]
  435d48:	mov	x11, sp
  435d4c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  435d50:	add	x12, x12, #0x71d
  435d54:	str	x12, [x11, #8]
  435d58:	mov	x11, sp
  435d5c:	ldr	x12, [sp, #2400]
  435d60:	str	x12, [x11, #16]
  435d64:	mov	x11, sp
  435d68:	str	w8, [x11, #24]
  435d6c:	mov	x11, sp
  435d70:	str	x10, [x11, #32]
  435d74:	bl	40a870 <log_object_internal@plt>
  435d78:	ldr	x9, [sp, #3952]
  435d7c:	str	w0, [x9, #2460]
  435d80:	ldr	w8, [x9, #2460]
  435d84:	str	w8, [x9, #2492]
  435d88:	b	435fe0 <udev_rule_apply_token_to_event+0x3a98>
  435d8c:	ldr	x8, [sp, #3984]
  435d90:	ldr	w9, [x8, #440]
  435d94:	cbnz	w9, 435d9c <udev_rule_apply_token_to_event+0x3854>
  435d98:	b	435fe0 <udev_rule_apply_token_to_event+0x3a98>
  435d9c:	ldr	x8, [sp, #3984]
  435da0:	ldr	x0, [x8, #1520]
  435da4:	ldr	x9, [sp, #3952]
  435da8:	ldr	x1, [x9, #2536]
  435dac:	ldr	x2, [x9, #2528]
  435db0:	bl	40aff0 <device_add_property@plt>
  435db4:	ldr	x8, [sp, #3984]
  435db8:	str	w0, [x8, #440]
  435dbc:	ldr	w10, [x8, #440]
  435dc0:	cmp	w10, #0x0
  435dc4:	cset	w10, ge  // ge = tcont
  435dc8:	tbnz	w10, #0, 435fe0 <udev_rule_apply_token_to_event+0x3a98>
  435dcc:	ldr	x8, [sp, #3984]
  435dd0:	ldr	x9, [x8, #1528]
  435dd4:	ldr	x10, [sp, #3952]
  435dd8:	str	x9, [x10, #2448]
  435ddc:	ldr	x9, [x10, #2448]
  435de0:	cbz	x9, 435df8 <udev_rule_apply_token_to_event+0x38b0>
  435de4:	ldr	x8, [sp, #3952]
  435de8:	ldr	x9, [x8, #2448]
  435dec:	ldr	x9, [x9, #32]
  435df0:	str	x9, [sp, #2384]
  435df4:	b	435e00 <udev_rule_apply_token_to_event+0x38b8>
  435df8:	mov	x8, xzr
  435dfc:	str	x8, [sp, #2384]
  435e00:	ldr	x8, [sp, #2384]
  435e04:	ldr	x9, [sp, #3952]
  435e08:	str	x8, [x9, #2440]
  435e0c:	ldr	x8, [x9, #2440]
  435e10:	cbz	x8, 435e28 <udev_rule_apply_token_to_event+0x38e0>
  435e14:	ldr	x8, [sp, #3952]
  435e18:	ldr	x9, [x8, #2440]
  435e1c:	ldr	x9, [x9, #8]
  435e20:	str	x9, [sp, #2376]
  435e24:	b	435e30 <udev_rule_apply_token_to_event+0x38e8>
  435e28:	mov	x8, xzr
  435e2c:	str	x8, [sp, #2376]
  435e30:	ldr	x8, [sp, #2376]
  435e34:	ldr	x9, [sp, #3952]
  435e38:	str	x8, [x9, #2432]
  435e3c:	ldr	x8, [x9, #2440]
  435e40:	cbz	x8, 435e58 <udev_rule_apply_token_to_event+0x3910>
  435e44:	ldr	x8, [sp, #3952]
  435e48:	ldr	x9, [x8, #2440]
  435e4c:	ldr	x9, [x9]
  435e50:	str	x9, [sp, #2368]
  435e54:	b	435e60 <udev_rule_apply_token_to_event+0x3918>
  435e58:	mov	x8, xzr
  435e5c:	str	x8, [sp, #2368]
  435e60:	ldr	x8, [sp, #2368]
  435e64:	ldr	x9, [sp, #3952]
  435e68:	str	x8, [x9, #2424]
  435e6c:	mov	x8, xzr
  435e70:	str	x8, [x9, #2408]
  435e74:	ldr	x8, [sp, #3984]
  435e78:	ldr	x10, [x8, #1520]
  435e7c:	str	x10, [x9, #2400]
  435e80:	mov	w11, #0x3                   	// #3
  435e84:	str	w11, [x9, #2396]
  435e88:	ldr	w11, [x8, #440]
  435e8c:	str	w11, [x9, #2392]
  435e90:	ldr	x10, [x9, #2400]
  435e94:	cbz	x10, 435ee0 <udev_rule_apply_token_to_event+0x3998>
  435e98:	mov	w0, #0x1                   	// #1
  435e9c:	bl	40a3f0 <log_get_max_level_realm@plt>
  435ea0:	ldr	x8, [sp, #3952]
  435ea4:	ldr	w9, [x8, #2396]
  435ea8:	cmp	w0, w9
  435eac:	cset	w9, ge  // ge = tcont
  435eb0:	mov	w10, #0x1                   	// #1
  435eb4:	eor	w9, w9, #0x1
  435eb8:	eor	w9, w9, w10
  435ebc:	and	w9, w9, #0x1
  435ec0:	mov	w1, w9
  435ec4:	sxtw	x11, w1
  435ec8:	cbz	x11, 435ee0 <udev_rule_apply_token_to_event+0x3998>
  435ecc:	ldr	x8, [sp, #3952]
  435ed0:	ldr	x0, [x8, #2400]
  435ed4:	add	x1, sp, #0x6, lsl #12
  435ed8:	add	x1, x1, #0x938
  435edc:	bl	40a860 <sd_device_get_sysname@plt>
  435ee0:	ldr	x8, [sp, #3952]
  435ee4:	ldr	w0, [x8, #2396]
  435ee8:	ldr	w1, [x8, #2392]
  435eec:	ldr	x9, [x8, #2408]
  435ef0:	mov	x10, xzr
  435ef4:	cmp	x9, #0x0
  435ef8:	ldr	x9, [sp, #3912]
  435efc:	csel	x5, x9, x10, ne  // ne = any
  435f00:	ldr	x6, [x8, #2408]
  435f04:	ldr	x10, [x8, #2424]
  435f08:	str	w0, [sp, #2364]
  435f0c:	mov	x0, x10
  435f10:	str	w1, [sp, #2360]
  435f14:	str	x5, [sp, #2352]
  435f18:	str	x6, [sp, #2344]
  435f1c:	bl	424274 <strna>
  435f20:	ldr	x8, [sp, #3952]
  435f24:	ldr	x9, [x8, #2432]
  435f28:	str	x0, [sp, #2336]
  435f2c:	cbz	x9, 435f44 <udev_rule_apply_token_to_event+0x39fc>
  435f30:	ldr	x8, [sp, #3952]
  435f34:	ldr	x9, [x8, #2432]
  435f38:	ldr	w10, [x9, #8]
  435f3c:	str	w10, [sp, #2332]
  435f40:	b	435f4c <udev_rule_apply_token_to_event+0x3a04>
  435f44:	mov	w8, wzr
  435f48:	str	w8, [sp, #2332]
  435f4c:	ldr	w8, [sp, #2332]
  435f50:	ldr	x9, [sp, #3952]
  435f54:	ldr	x10, [x9, #2536]
  435f58:	ldr	x11, [x9, #2528]
  435f5c:	ldr	w0, [sp, #2364]
  435f60:	ldr	w1, [sp, #2360]
  435f64:	ldr	x2, [sp, #3928]
  435f68:	mov	w3, #0x6e7                 	// #1767
  435f6c:	ldr	x4, [sp, #3920]
  435f70:	ldr	x5, [sp, #2352]
  435f74:	ldr	x6, [sp, #2344]
  435f78:	mov	x12, xzr
  435f7c:	mov	x7, x12
  435f80:	mov	x13, sp
  435f84:	str	x12, [x13]
  435f88:	mov	x12, sp
  435f8c:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  435f90:	add	x13, x13, #0x759
  435f94:	str	x13, [x12, #8]
  435f98:	mov	x12, sp
  435f9c:	ldr	x13, [sp, #2336]
  435fa0:	str	x13, [x12, #16]
  435fa4:	mov	x12, sp
  435fa8:	str	w8, [x12, #24]
  435fac:	mov	x12, sp
  435fb0:	str	x10, [x12, #32]
  435fb4:	mov	x10, sp
  435fb8:	str	x11, [x10, #40]
  435fbc:	bl	40a870 <log_object_internal@plt>
  435fc0:	ldr	x9, [sp, #3952]
  435fc4:	str	w0, [x9, #2388]
  435fc8:	ldr	w8, [x9, #2388]
  435fcc:	str	w8, [x9, #2420]
  435fd0:	ldr	w8, [x9, #2420]
  435fd4:	ldr	x10, [sp, #3984]
  435fd8:	str	w8, [x10, #1540]
  435fdc:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  435fe0:	ldr	x8, [sp, #3952]
  435fe4:	ldr	x9, [x8, #2760]
  435fe8:	str	x9, [x8, #2768]
  435fec:	b	435b0c <udev_rule_apply_token_to_event+0x35c4>
  435ff0:	ldr	x8, [sp, #3984]
  435ff4:	ldr	x9, [x8, #1488]
  435ff8:	ldr	w10, [x9]
  435ffc:	lsl	w10, w10, #16
  436000:	asr	w10, w10, #24
  436004:	cmp	w10, #0x0
  436008:	cset	w10, eq  // eq = none
  43600c:	and	w10, w10, #0x1
  436010:	str	w10, [x8, #1540]
  436014:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  436018:	ldr	x8, [sp, #3984]
  43601c:	ldr	x9, [x8, #1488]
  436020:	ldr	x9, [x9, #16]
  436024:	subs	x9, x9, #0x1
  436028:	ldr	x10, [sp, #3952]
  43602c:	str	w9, [x10, #2384]
  436030:	ldr	w9, [x10, #2384]
  436034:	mov	w11, #0x1                   	// #1
  436038:	lsl	w9, w11, w9
  43603c:	str	w9, [x10, #2380]
  436040:	ldr	w0, [x10, #2384]
  436044:	bl	43e654 <udev_builtin_run_once>
  436048:	tbnz	w0, #0, 436050 <udev_rule_apply_token_to_event+0x3b08>
  43604c:	b	4362e4 <udev_rule_apply_token_to_event+0x3d9c>
  436050:	ldr	x8, [sp, #3984]
  436054:	ldr	x9, [x8, #1512]
  436058:	ldr	w10, [x9, #96]
  43605c:	ldr	x9, [sp, #3952]
  436060:	ldr	w11, [x9, #2380]
  436064:	and	w10, w10, w11
  436068:	cbz	w10, 4362c8 <udev_rule_apply_token_to_event+0x3d80>
  43606c:	ldr	x8, [sp, #3984]
  436070:	ldr	x9, [x8, #1528]
  436074:	ldr	x10, [sp, #3952]
  436078:	str	x9, [x10, #2368]
  43607c:	ldr	x9, [x10, #2368]
  436080:	cbz	x9, 436098 <udev_rule_apply_token_to_event+0x3b50>
  436084:	ldr	x8, [sp, #3952]
  436088:	ldr	x9, [x8, #2368]
  43608c:	ldr	x9, [x9, #32]
  436090:	str	x9, [sp, #2320]
  436094:	b	4360a0 <udev_rule_apply_token_to_event+0x3b58>
  436098:	mov	x8, xzr
  43609c:	str	x8, [sp, #2320]
  4360a0:	ldr	x8, [sp, #2320]
  4360a4:	ldr	x9, [sp, #3952]
  4360a8:	str	x8, [x9, #2360]
  4360ac:	ldr	x8, [x9, #2360]
  4360b0:	cbz	x8, 4360c8 <udev_rule_apply_token_to_event+0x3b80>
  4360b4:	ldr	x8, [sp, #3952]
  4360b8:	ldr	x9, [x8, #2360]
  4360bc:	ldr	x9, [x9, #8]
  4360c0:	str	x9, [sp, #2312]
  4360c4:	b	4360d0 <udev_rule_apply_token_to_event+0x3b88>
  4360c8:	mov	x8, xzr
  4360cc:	str	x8, [sp, #2312]
  4360d0:	ldr	x8, [sp, #2312]
  4360d4:	ldr	x9, [sp, #3952]
  4360d8:	str	x8, [x9, #2352]
  4360dc:	ldr	x8, [x9, #2360]
  4360e0:	cbz	x8, 4360f8 <udev_rule_apply_token_to_event+0x3bb0>
  4360e4:	ldr	x8, [sp, #3952]
  4360e8:	ldr	x9, [x8, #2360]
  4360ec:	ldr	x9, [x9]
  4360f0:	str	x9, [sp, #2304]
  4360f4:	b	436100 <udev_rule_apply_token_to_event+0x3bb8>
  4360f8:	mov	x8, xzr
  4360fc:	str	x8, [sp, #2304]
  436100:	ldr	x8, [sp, #2304]
  436104:	ldr	x9, [sp, #3952]
  436108:	str	x8, [x9, #2344]
  43610c:	mov	x8, xzr
  436110:	str	x8, [x9, #2328]
  436114:	ldr	x8, [sp, #3984]
  436118:	ldr	x10, [x8, #1520]
  43611c:	str	x10, [x9, #2320]
  436120:	mov	w11, #0x7                   	// #7
  436124:	str	w11, [x9, #2316]
  436128:	str	wzr, [x9, #2312]
  43612c:	ldr	x10, [x9, #2320]
  436130:	cbz	x10, 43617c <udev_rule_apply_token_to_event+0x3c34>
  436134:	mov	w0, #0x1                   	// #1
  436138:	bl	40a3f0 <log_get_max_level_realm@plt>
  43613c:	ldr	x8, [sp, #3952]
  436140:	ldr	w9, [x8, #2316]
  436144:	cmp	w0, w9
  436148:	cset	w9, ge  // ge = tcont
  43614c:	mov	w10, #0x1                   	// #1
  436150:	eor	w9, w9, #0x1
  436154:	eor	w9, w9, w10
  436158:	and	w9, w9, #0x1
  43615c:	mov	w1, w9
  436160:	sxtw	x11, w1
  436164:	cbz	x11, 43617c <udev_rule_apply_token_to_event+0x3c34>
  436168:	ldr	x8, [sp, #3952]
  43616c:	ldr	x0, [x8, #2320]
  436170:	add	x1, sp, #0x6, lsl #12
  436174:	add	x1, x1, #0x8e8
  436178:	bl	40a860 <sd_device_get_sysname@plt>
  43617c:	ldr	x8, [sp, #3952]
  436180:	ldr	w0, [x8, #2316]
  436184:	ldr	w1, [x8, #2312]
  436188:	ldr	x9, [x8, #2328]
  43618c:	mov	x10, xzr
  436190:	cmp	x9, #0x0
  436194:	ldr	x9, [sp, #3912]
  436198:	csel	x5, x9, x10, ne  // ne = any
  43619c:	ldr	x6, [x8, #2328]
  4361a0:	ldr	x10, [x8, #2344]
  4361a4:	str	w0, [sp, #2300]
  4361a8:	mov	x0, x10
  4361ac:	str	w1, [sp, #2296]
  4361b0:	str	x5, [sp, #2288]
  4361b4:	str	x6, [sp, #2280]
  4361b8:	bl	424274 <strna>
  4361bc:	ldr	x8, [sp, #3952]
  4361c0:	ldr	x9, [x8, #2352]
  4361c4:	str	x0, [sp, #2272]
  4361c8:	cbz	x9, 4361e0 <udev_rule_apply_token_to_event+0x3c98>
  4361cc:	ldr	x8, [sp, #3952]
  4361d0:	ldr	x9, [x8, #2352]
  4361d4:	ldr	w10, [x9, #8]
  4361d8:	str	w10, [sp, #2268]
  4361dc:	b	4361e8 <udev_rule_apply_token_to_event+0x3ca0>
  4361e0:	mov	w8, wzr
  4361e4:	str	w8, [sp, #2268]
  4361e8:	ldr	w8, [sp, #2268]
  4361ec:	ldr	x9, [sp, #3952]
  4361f0:	ldr	w0, [x9, #2384]
  4361f4:	str	w8, [sp, #2264]
  4361f8:	bl	43e568 <udev_builtin_name>
  4361fc:	ldr	w8, [sp, #2300]
  436200:	str	x0, [sp, #2256]
  436204:	mov	w0, w8
  436208:	ldr	w1, [sp, #2296]
  43620c:	ldr	x2, [sp, #3928]
  436210:	mov	w3, #0x6f4                 	// #1780
  436214:	ldr	x4, [sp, #3920]
  436218:	ldr	x5, [sp, #2288]
  43621c:	ldr	x6, [sp, #2280]
  436220:	mov	x9, xzr
  436224:	mov	x7, x9
  436228:	mov	x10, sp
  43622c:	str	x9, [x10]
  436230:	mov	x9, sp
  436234:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  436238:	add	x10, x10, #0x7b0
  43623c:	str	x10, [x9, #8]
  436240:	mov	x9, sp
  436244:	ldr	x10, [sp, #2272]
  436248:	str	x10, [x9, #16]
  43624c:	mov	x9, sp
  436250:	mov	x11, #0x18                  	// #24
  436254:	ldr	w12, [sp, #2264]
  436258:	str	w12, [x9, #24]
  43625c:	mov	x9, sp
  436260:	ldr	x13, [sp, #2256]
  436264:	str	x13, [x9, #32]
  436268:	str	x11, [sp, #2248]
  43626c:	bl	40a870 <log_object_internal@plt>
  436270:	ldr	x9, [sp, #3952]
  436274:	str	w0, [x9, #2308]
  436278:	ldr	w8, [x9, #2308]
  43627c:	str	w8, [x9, #2340]
  436280:	ldr	x10, [sp, #3984]
  436284:	ldr	x11, [x10, #1488]
  436288:	ldr	w8, [x11]
  43628c:	lsl	w8, w8, #16
  436290:	ldr	x11, [sp, #2248]
  436294:	asr	w8, w8, w11
  436298:	ldr	x13, [x10, #1512]
  43629c:	ldr	w11, [x13, #100]
  4362a0:	ldr	w12, [x9, #2380]
  4362a4:	mov	w14, wzr
  4362a8:	mov	w15, #0x1                   	// #1
  4362ac:	tst	w11, w12
  4362b0:	csel	w11, w15, w14, ne  // ne = any
  4362b4:	cmp	w8, w11
  4362b8:	cset	w8, eq  // eq = none
  4362bc:	and	w8, w8, #0x1
  4362c0:	str	w8, [x10, #1540]
  4362c4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4362c8:	ldr	x8, [sp, #3952]
  4362cc:	ldr	w9, [x8, #2380]
  4362d0:	ldr	x10, [sp, #3984]
  4362d4:	ldr	x11, [x10, #1512]
  4362d8:	ldr	w12, [x11, #96]
  4362dc:	orr	w9, w12, w9
  4362e0:	str	w9, [x11, #96]
  4362e4:	ldr	x8, [sp, #3984]
  4362e8:	ldr	x0, [x8, #1512]
  4362ec:	ldr	x9, [x8, #1488]
  4362f0:	ldr	x1, [x9, #8]
  4362f4:	add	x2, sp, #0xf, lsl #12
  4362f8:	add	x2, x2, #0x448
  4362fc:	mov	x3, #0x400                 	// #1024
  436300:	mov	w10, wzr
  436304:	and	w4, w10, #0x1
  436308:	bl	4183c0 <udev_event_apply_format>
  43630c:	ldr	x8, [sp, #3984]
  436310:	ldr	x9, [x8, #1528]
  436314:	ldr	x11, [sp, #3952]
  436318:	str	x9, [x11, #2296]
  43631c:	ldr	x9, [x11, #2296]
  436320:	cbz	x9, 436338 <udev_rule_apply_token_to_event+0x3df0>
  436324:	ldr	x8, [sp, #3952]
  436328:	ldr	x9, [x8, #2296]
  43632c:	ldr	x9, [x9, #32]
  436330:	str	x9, [sp, #2240]
  436334:	b	436340 <udev_rule_apply_token_to_event+0x3df8>
  436338:	mov	x8, xzr
  43633c:	str	x8, [sp, #2240]
  436340:	ldr	x8, [sp, #2240]
  436344:	ldr	x9, [sp, #3952]
  436348:	str	x8, [x9, #2288]
  43634c:	ldr	x8, [x9, #2288]
  436350:	cbz	x8, 436368 <udev_rule_apply_token_to_event+0x3e20>
  436354:	ldr	x8, [sp, #3952]
  436358:	ldr	x9, [x8, #2288]
  43635c:	ldr	x9, [x9, #8]
  436360:	str	x9, [sp, #2232]
  436364:	b	436370 <udev_rule_apply_token_to_event+0x3e28>
  436368:	mov	x8, xzr
  43636c:	str	x8, [sp, #2232]
  436370:	ldr	x8, [sp, #2232]
  436374:	ldr	x9, [sp, #3952]
  436378:	str	x8, [x9, #2280]
  43637c:	ldr	x8, [x9, #2288]
  436380:	cbz	x8, 436398 <udev_rule_apply_token_to_event+0x3e50>
  436384:	ldr	x8, [sp, #3952]
  436388:	ldr	x9, [x8, #2288]
  43638c:	ldr	x9, [x9]
  436390:	str	x9, [sp, #2224]
  436394:	b	4363a0 <udev_rule_apply_token_to_event+0x3e58>
  436398:	mov	x8, xzr
  43639c:	str	x8, [sp, #2224]
  4363a0:	ldr	x8, [sp, #2224]
  4363a4:	ldr	x9, [sp, #3952]
  4363a8:	str	x8, [x9, #2272]
  4363ac:	mov	x8, xzr
  4363b0:	str	x8, [x9, #2256]
  4363b4:	ldr	x8, [sp, #3984]
  4363b8:	ldr	x10, [x8, #1520]
  4363bc:	str	x10, [x9, #2248]
  4363c0:	mov	w11, #0x7                   	// #7
  4363c4:	str	w11, [x9, #2244]
  4363c8:	str	wzr, [x9, #2240]
  4363cc:	ldr	x10, [x9, #2248]
  4363d0:	cbz	x10, 43641c <udev_rule_apply_token_to_event+0x3ed4>
  4363d4:	mov	w0, #0x1                   	// #1
  4363d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4363dc:	ldr	x8, [sp, #3952]
  4363e0:	ldr	w9, [x8, #2244]
  4363e4:	cmp	w0, w9
  4363e8:	cset	w9, ge  // ge = tcont
  4363ec:	mov	w10, #0x1                   	// #1
  4363f0:	eor	w9, w9, #0x1
  4363f4:	eor	w9, w9, w10
  4363f8:	and	w9, w9, #0x1
  4363fc:	mov	w1, w9
  436400:	sxtw	x11, w1
  436404:	cbz	x11, 43641c <udev_rule_apply_token_to_event+0x3ed4>
  436408:	ldr	x8, [sp, #3952]
  43640c:	ldr	x0, [x8, #2248]
  436410:	add	x1, sp, #0x6, lsl #12
  436414:	add	x1, x1, #0x8a0
  436418:	bl	40a860 <sd_device_get_sysname@plt>
  43641c:	ldr	x8, [sp, #3952]
  436420:	ldr	w0, [x8, #2244]
  436424:	ldr	w1, [x8, #2240]
  436428:	ldr	x9, [x8, #2256]
  43642c:	mov	x10, xzr
  436430:	cmp	x9, #0x0
  436434:	ldr	x9, [sp, #3912]
  436438:	csel	x5, x9, x10, ne  // ne = any
  43643c:	ldr	x6, [x8, #2256]
  436440:	ldr	x10, [x8, #2272]
  436444:	str	w0, [sp, #2220]
  436448:	mov	x0, x10
  43644c:	str	w1, [sp, #2216]
  436450:	str	x5, [sp, #2208]
  436454:	str	x6, [sp, #2200]
  436458:	bl	424274 <strna>
  43645c:	ldr	x8, [sp, #3952]
  436460:	ldr	x9, [x8, #2280]
  436464:	str	x0, [sp, #2192]
  436468:	cbz	x9, 436480 <udev_rule_apply_token_to_event+0x3f38>
  43646c:	ldr	x8, [sp, #3952]
  436470:	ldr	x9, [x8, #2280]
  436474:	ldr	w10, [x9, #8]
  436478:	str	w10, [sp, #2188]
  43647c:	b	436488 <udev_rule_apply_token_to_event+0x3f40>
  436480:	mov	w8, wzr
  436484:	str	w8, [sp, #2188]
  436488:	ldr	w8, [sp, #2188]
  43648c:	ldr	w0, [sp, #2220]
  436490:	ldr	w1, [sp, #2216]
  436494:	ldr	x2, [sp, #3928]
  436498:	mov	w3, #0x6fd                 	// #1789
  43649c:	ldr	x4, [sp, #3920]
  4364a0:	ldr	x5, [sp, #2208]
  4364a4:	ldr	x6, [sp, #2200]
  4364a8:	mov	x9, xzr
  4364ac:	mov	x7, x9
  4364b0:	mov	x10, sp
  4364b4:	str	x9, [x10]
  4364b8:	mov	x9, sp
  4364bc:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4364c0:	add	x10, x10, #0x7da
  4364c4:	str	x10, [x9, #8]
  4364c8:	mov	x9, sp
  4364cc:	ldr	x10, [sp, #2192]
  4364d0:	str	x10, [x9, #16]
  4364d4:	mov	x9, sp
  4364d8:	str	w8, [x9, #24]
  4364dc:	mov	x9, sp
  4364e0:	add	x11, sp, #0xf, lsl #12
  4364e4:	add	x11, x11, #0x448
  4364e8:	str	x11, [x9, #32]
  4364ec:	str	x11, [sp, #2176]
  4364f0:	bl	40a870 <log_object_internal@plt>
  4364f4:	ldr	x9, [sp, #3952]
  4364f8:	str	w0, [x9, #2236]
  4364fc:	ldr	w8, [x9, #2236]
  436500:	str	w8, [x9, #2268]
  436504:	ldr	x10, [sp, #3984]
  436508:	ldr	x0, [x10, #1520]
  43650c:	ldr	w1, [x9, #2384]
  436510:	ldr	x2, [sp, #2176]
  436514:	mov	w8, wzr
  436518:	and	w3, w8, #0x1
  43651c:	bl	43e880 <udev_builtin_run>
  436520:	ldr	x9, [sp, #3984]
  436524:	str	w0, [x9, #440]
  436528:	ldr	w8, [x9, #440]
  43652c:	cmp	w8, #0x0
  436530:	cset	w8, ge  // ge = tcont
  436534:	tbnz	w8, #0, 436748 <udev_rule_apply_token_to_event+0x4200>
  436538:	ldr	x8, [sp, #3984]
  43653c:	ldr	x9, [x8, #1528]
  436540:	ldr	x10, [sp, #3952]
  436544:	str	x9, [x10, #2224]
  436548:	ldr	x9, [x10, #2224]
  43654c:	cbz	x9, 436564 <udev_rule_apply_token_to_event+0x401c>
  436550:	ldr	x8, [sp, #3952]
  436554:	ldr	x9, [x8, #2224]
  436558:	ldr	x9, [x9, #32]
  43655c:	str	x9, [sp, #2168]
  436560:	b	43656c <udev_rule_apply_token_to_event+0x4024>
  436564:	mov	x8, xzr
  436568:	str	x8, [sp, #2168]
  43656c:	ldr	x8, [sp, #2168]
  436570:	ldr	x9, [sp, #3952]
  436574:	str	x8, [x9, #2216]
  436578:	ldr	x8, [x9, #2216]
  43657c:	cbz	x8, 436594 <udev_rule_apply_token_to_event+0x404c>
  436580:	ldr	x8, [sp, #3952]
  436584:	ldr	x9, [x8, #2216]
  436588:	ldr	x9, [x9, #8]
  43658c:	str	x9, [sp, #2160]
  436590:	b	43659c <udev_rule_apply_token_to_event+0x4054>
  436594:	mov	x8, xzr
  436598:	str	x8, [sp, #2160]
  43659c:	ldr	x8, [sp, #2160]
  4365a0:	ldr	x9, [sp, #3952]
  4365a4:	str	x8, [x9, #2208]
  4365a8:	ldr	x8, [x9, #2216]
  4365ac:	cbz	x8, 4365c4 <udev_rule_apply_token_to_event+0x407c>
  4365b0:	ldr	x8, [sp, #3952]
  4365b4:	ldr	x9, [x8, #2216]
  4365b8:	ldr	x9, [x9]
  4365bc:	str	x9, [sp, #2152]
  4365c0:	b	4365cc <udev_rule_apply_token_to_event+0x4084>
  4365c4:	mov	x8, xzr
  4365c8:	str	x8, [sp, #2152]
  4365cc:	ldr	x8, [sp, #2152]
  4365d0:	ldr	x9, [sp, #3952]
  4365d4:	str	x8, [x9, #2200]
  4365d8:	mov	x8, xzr
  4365dc:	str	x8, [x9, #2184]
  4365e0:	ldr	x8, [sp, #3984]
  4365e4:	ldr	x10, [x8, #1520]
  4365e8:	str	x10, [x9, #2176]
  4365ec:	mov	w11, #0x7                   	// #7
  4365f0:	str	w11, [x9, #2172]
  4365f4:	ldr	w11, [x8, #440]
  4365f8:	str	w11, [x9, #2168]
  4365fc:	ldr	x10, [x9, #2176]
  436600:	cbz	x10, 43664c <udev_rule_apply_token_to_event+0x4104>
  436604:	mov	w0, #0x1                   	// #1
  436608:	bl	40a3f0 <log_get_max_level_realm@plt>
  43660c:	ldr	x8, [sp, #3952]
  436610:	ldr	w9, [x8, #2172]
  436614:	cmp	w0, w9
  436618:	cset	w9, ge  // ge = tcont
  43661c:	mov	w10, #0x1                   	// #1
  436620:	eor	w9, w9, #0x1
  436624:	eor	w9, w9, w10
  436628:	and	w9, w9, #0x1
  43662c:	mov	w1, w9
  436630:	sxtw	x11, w1
  436634:	cbz	x11, 43664c <udev_rule_apply_token_to_event+0x4104>
  436638:	ldr	x8, [sp, #3952]
  43663c:	ldr	x0, [x8, #2176]
  436640:	add	x1, sp, #0x6, lsl #12
  436644:	add	x1, x1, #0x858
  436648:	bl	40a860 <sd_device_get_sysname@plt>
  43664c:	ldr	x8, [sp, #3952]
  436650:	ldr	w0, [x8, #2172]
  436654:	ldr	w1, [x8, #2168]
  436658:	ldr	x9, [x8, #2184]
  43665c:	mov	x10, xzr
  436660:	cmp	x9, #0x0
  436664:	ldr	x9, [sp, #3912]
  436668:	csel	x5, x9, x10, ne  // ne = any
  43666c:	ldr	x6, [x8, #2184]
  436670:	ldr	x10, [x8, #2200]
  436674:	str	w0, [sp, #2148]
  436678:	mov	x0, x10
  43667c:	str	w1, [sp, #2144]
  436680:	str	x5, [sp, #2136]
  436684:	str	x6, [sp, #2128]
  436688:	bl	424274 <strna>
  43668c:	ldr	x8, [sp, #3952]
  436690:	ldr	x9, [x8, #2208]
  436694:	str	x0, [sp, #2120]
  436698:	cbz	x9, 4366b0 <udev_rule_apply_token_to_event+0x4168>
  43669c:	ldr	x8, [sp, #3952]
  4366a0:	ldr	x9, [x8, #2208]
  4366a4:	ldr	w10, [x9, #8]
  4366a8:	str	w10, [sp, #2116]
  4366ac:	b	4366b8 <udev_rule_apply_token_to_event+0x4170>
  4366b0:	mov	w8, wzr
  4366b4:	str	w8, [sp, #2116]
  4366b8:	ldr	w8, [sp, #2116]
  4366bc:	ldr	w0, [sp, #2148]
  4366c0:	ldr	w1, [sp, #2144]
  4366c4:	ldr	x2, [sp, #3928]
  4366c8:	mov	w3, #0x702                 	// #1794
  4366cc:	ldr	x4, [sp, #3920]
  4366d0:	ldr	x5, [sp, #2136]
  4366d4:	ldr	x6, [sp, #2128]
  4366d8:	mov	x9, xzr
  4366dc:	mov	x7, x9
  4366e0:	mov	x10, sp
  4366e4:	str	x9, [x10]
  4366e8:	mov	x9, sp
  4366ec:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  4366f0:	add	x10, x10, #0x81a
  4366f4:	str	x10, [x9, #8]
  4366f8:	mov	x9, sp
  4366fc:	ldr	x10, [sp, #2120]
  436700:	str	x10, [x9, #16]
  436704:	mov	x9, sp
  436708:	str	w8, [x9, #24]
  43670c:	mov	x9, sp
  436710:	add	x11, sp, #0xf, lsl #12
  436714:	add	x11, x11, #0x448
  436718:	str	x11, [x9, #32]
  43671c:	bl	40a870 <log_object_internal@plt>
  436720:	ldr	x9, [sp, #3952]
  436724:	str	w0, [x9, #2164]
  436728:	ldr	w8, [x9, #2164]
  43672c:	str	w8, [x9, #2196]
  436730:	ldr	w8, [x9, #2380]
  436734:	ldr	x10, [sp, #3984]
  436738:	ldr	x11, [x10, #1512]
  43673c:	ldr	w12, [x11, #100]
  436740:	orr	w8, w12, w8
  436744:	str	w8, [x11, #100]
  436748:	ldr	x8, [sp, #3984]
  43674c:	ldr	x9, [x8, #1488]
  436750:	ldr	w10, [x9]
  436754:	lsl	w10, w10, #16
  436758:	asr	w10, w10, #24
  43675c:	ldr	w11, [x8, #440]
  436760:	mov	w12, wzr
  436764:	mov	w13, #0x1                   	// #1
  436768:	cmp	w11, #0x0
  43676c:	csel	w11, w12, w13, ge  // ge = tcont
  436770:	cmp	w10, w11
  436774:	cset	w10, eq  // eq = none
  436778:	and	w10, w10, #0x1
  43677c:	str	w10, [x8, #1540]
  436780:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  436784:	ldr	x8, [sp, #3984]
  436788:	ldr	x9, [x8, #1512]
  43678c:	ldr	x9, [x9, #16]
  436790:	cbnz	x9, 4367bc <udev_rule_apply_token_to_event+0x4274>
  436794:	ldr	x8, [sp, #3984]
  436798:	ldr	x9, [x8, #1488]
  43679c:	ldr	w10, [x9]
  4367a0:	lsl	w10, w10, #16
  4367a4:	asr	w10, w10, #24
  4367a8:	cmp	w10, #0x1
  4367ac:	cset	w10, eq  // eq = none
  4367b0:	and	w10, w10, #0x1
  4367b4:	str	w10, [x8, #1540]
  4367b8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4367bc:	ldr	x8, [sp, #3984]
  4367c0:	ldr	x9, [x8, #1512]
  4367c4:	ldr	x0, [x9, #16]
  4367c8:	ldr	x9, [x8, #1488]
  4367cc:	ldr	x1, [x9, #8]
  4367d0:	add	x2, sp, #0xf, lsl #12
  4367d4:	add	x2, x2, #0x440
  4367d8:	bl	40aa40 <sd_device_get_property_value@plt>
  4367dc:	ldr	x8, [sp, #3984]
  4367e0:	str	w0, [x8, #440]
  4367e4:	ldr	w10, [x8, #440]
  4367e8:	mov	w11, #0xfffffffe            	// #-2
  4367ec:	cmp	w10, w11
  4367f0:	b.ne	43681c <udev_rule_apply_token_to_event+0x42d4>  // b.any
  4367f4:	ldr	x8, [sp, #3984]
  4367f8:	ldr	x9, [x8, #1488]
  4367fc:	ldr	w10, [x9]
  436800:	lsl	w10, w10, #16
  436804:	asr	w10, w10, #24
  436808:	cmp	w10, #0x1
  43680c:	cset	w10, eq  // eq = none
  436810:	and	w10, w10, #0x1
  436814:	str	w10, [x8, #1540]
  436818:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  43681c:	ldr	x8, [sp, #3984]
  436820:	ldr	w9, [x8, #440]
  436824:	cmp	w9, #0x0
  436828:	cset	w9, ge  // ge = tcont
  43682c:	tbnz	w9, #0, 436a3c <udev_rule_apply_token_to_event+0x44f4>
  436830:	ldr	x8, [sp, #3984]
  436834:	ldr	x9, [x8, #1528]
  436838:	ldr	x10, [sp, #3952]
  43683c:	str	x9, [x10, #2152]
  436840:	ldr	x9, [x10, #2152]
  436844:	cbz	x9, 43685c <udev_rule_apply_token_to_event+0x4314>
  436848:	ldr	x8, [sp, #3952]
  43684c:	ldr	x9, [x8, #2152]
  436850:	ldr	x9, [x9, #32]
  436854:	str	x9, [sp, #2104]
  436858:	b	436864 <udev_rule_apply_token_to_event+0x431c>
  43685c:	mov	x8, xzr
  436860:	str	x8, [sp, #2104]
  436864:	ldr	x8, [sp, #2104]
  436868:	ldr	x9, [sp, #3952]
  43686c:	str	x8, [x9, #2144]
  436870:	ldr	x8, [x9, #2144]
  436874:	cbz	x8, 43688c <udev_rule_apply_token_to_event+0x4344>
  436878:	ldr	x8, [sp, #3952]
  43687c:	ldr	x9, [x8, #2144]
  436880:	ldr	x9, [x9, #8]
  436884:	str	x9, [sp, #2096]
  436888:	b	436894 <udev_rule_apply_token_to_event+0x434c>
  43688c:	mov	x8, xzr
  436890:	str	x8, [sp, #2096]
  436894:	ldr	x8, [sp, #2096]
  436898:	ldr	x9, [sp, #3952]
  43689c:	str	x8, [x9, #2136]
  4368a0:	ldr	x8, [x9, #2144]
  4368a4:	cbz	x8, 4368bc <udev_rule_apply_token_to_event+0x4374>
  4368a8:	ldr	x8, [sp, #3952]
  4368ac:	ldr	x9, [x8, #2144]
  4368b0:	ldr	x9, [x9]
  4368b4:	str	x9, [sp, #2088]
  4368b8:	b	4368c4 <udev_rule_apply_token_to_event+0x437c>
  4368bc:	mov	x8, xzr
  4368c0:	str	x8, [sp, #2088]
  4368c4:	ldr	x8, [sp, #2088]
  4368c8:	ldr	x9, [sp, #3952]
  4368cc:	str	x8, [x9, #2128]
  4368d0:	mov	x8, xzr
  4368d4:	str	x8, [x9, #2112]
  4368d8:	ldr	x8, [sp, #3984]
  4368dc:	ldr	x10, [x8, #1520]
  4368e0:	str	x10, [x9, #2104]
  4368e4:	mov	w11, #0x3                   	// #3
  4368e8:	str	w11, [x9, #2100]
  4368ec:	ldr	w11, [x8, #440]
  4368f0:	str	w11, [x9, #2096]
  4368f4:	ldr	x10, [x9, #2104]
  4368f8:	cbz	x10, 436944 <udev_rule_apply_token_to_event+0x43fc>
  4368fc:	mov	w0, #0x1                   	// #1
  436900:	bl	40a3f0 <log_get_max_level_realm@plt>
  436904:	ldr	x8, [sp, #3952]
  436908:	ldr	w9, [x8, #2100]
  43690c:	cmp	w0, w9
  436910:	cset	w9, ge  // ge = tcont
  436914:	mov	w10, #0x1                   	// #1
  436918:	eor	w9, w9, #0x1
  43691c:	eor	w9, w9, w10
  436920:	and	w9, w9, #0x1
  436924:	mov	w1, w9
  436928:	sxtw	x11, w1
  43692c:	cbz	x11, 436944 <udev_rule_apply_token_to_event+0x43fc>
  436930:	ldr	x8, [sp, #3952]
  436934:	ldr	x0, [x8, #2104]
  436938:	add	x1, sp, #0x6, lsl #12
  43693c:	add	x1, x1, #0x810
  436940:	bl	40a860 <sd_device_get_sysname@plt>
  436944:	ldr	x8, [sp, #3952]
  436948:	ldr	w0, [x8, #2100]
  43694c:	ldr	w1, [x8, #2096]
  436950:	ldr	x9, [x8, #2112]
  436954:	mov	x10, xzr
  436958:	cmp	x9, #0x0
  43695c:	ldr	x9, [sp, #3912]
  436960:	csel	x5, x9, x10, ne  // ne = any
  436964:	ldr	x6, [x8, #2112]
  436968:	ldr	x10, [x8, #2128]
  43696c:	str	w0, [sp, #2084]
  436970:	mov	x0, x10
  436974:	str	w1, [sp, #2080]
  436978:	str	x5, [sp, #2072]
  43697c:	str	x6, [sp, #2064]
  436980:	bl	424274 <strna>
  436984:	ldr	x8, [sp, #3952]
  436988:	ldr	x9, [x8, #2136]
  43698c:	str	x0, [sp, #2056]
  436990:	cbz	x9, 4369a8 <udev_rule_apply_token_to_event+0x4460>
  436994:	ldr	x8, [sp, #3952]
  436998:	ldr	x9, [x8, #2136]
  43699c:	ldr	w10, [x9, #8]
  4369a0:	str	w10, [sp, #2052]
  4369a4:	b	4369b0 <udev_rule_apply_token_to_event+0x4468>
  4369a8:	mov	w8, wzr
  4369ac:	str	w8, [sp, #2052]
  4369b0:	ldr	w8, [sp, #2052]
  4369b4:	ldr	x9, [sp, #3984]
  4369b8:	ldr	x10, [x9, #1488]
  4369bc:	ldr	x10, [x10, #8]
  4369c0:	ldr	w0, [sp, #2084]
  4369c4:	ldr	w1, [sp, #2080]
  4369c8:	ldr	x2, [sp, #3928]
  4369cc:	mov	w3, #0x710                 	// #1808
  4369d0:	ldr	x4, [sp, #3920]
  4369d4:	ldr	x5, [sp, #2072]
  4369d8:	ldr	x6, [sp, #2064]
  4369dc:	mov	x11, xzr
  4369e0:	mov	x7, x11
  4369e4:	mov	x12, sp
  4369e8:	str	x11, [x12]
  4369ec:	mov	x11, sp
  4369f0:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  4369f4:	add	x12, x12, #0x83f
  4369f8:	str	x12, [x11, #8]
  4369fc:	mov	x11, sp
  436a00:	ldr	x12, [sp, #2056]
  436a04:	str	x12, [x11, #16]
  436a08:	mov	x11, sp
  436a0c:	str	w8, [x11, #24]
  436a10:	mov	x11, sp
  436a14:	str	x10, [x11, #32]
  436a18:	bl	40a870 <log_object_internal@plt>
  436a1c:	ldr	x9, [sp, #3952]
  436a20:	str	w0, [x9, #2092]
  436a24:	ldr	w8, [x9, #2092]
  436a28:	str	w8, [x9, #2124]
  436a2c:	ldr	w8, [x9, #2124]
  436a30:	ldr	x10, [sp, #3984]
  436a34:	str	w8, [x10, #1540]
  436a38:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  436a3c:	ldr	x8, [sp, #3984]
  436a40:	ldr	x0, [x8, #1520]
  436a44:	ldr	x9, [x8, #1488]
  436a48:	ldr	x1, [x9, #8]
  436a4c:	ldr	x2, [x8, #456]
  436a50:	bl	40aff0 <device_add_property@plt>
  436a54:	ldr	x8, [sp, #3984]
  436a58:	str	w0, [x8, #440]
  436a5c:	ldr	w10, [x8, #440]
  436a60:	cmp	w10, #0x0
  436a64:	cset	w10, ge  // ge = tcont
  436a68:	tbnz	w10, #0, 436c80 <udev_rule_apply_token_to_event+0x4738>
  436a6c:	ldr	x8, [sp, #3984]
  436a70:	ldr	x9, [x8, #1528]
  436a74:	ldr	x10, [sp, #3952]
  436a78:	str	x9, [x10, #2080]
  436a7c:	ldr	x9, [x10, #2080]
  436a80:	cbz	x9, 436a98 <udev_rule_apply_token_to_event+0x4550>
  436a84:	ldr	x8, [sp, #3952]
  436a88:	ldr	x9, [x8, #2080]
  436a8c:	ldr	x9, [x9, #32]
  436a90:	str	x9, [sp, #2040]
  436a94:	b	436aa0 <udev_rule_apply_token_to_event+0x4558>
  436a98:	mov	x8, xzr
  436a9c:	str	x8, [sp, #2040]
  436aa0:	ldr	x8, [sp, #2040]
  436aa4:	ldr	x9, [sp, #3952]
  436aa8:	str	x8, [x9, #2072]
  436aac:	ldr	x8, [x9, #2072]
  436ab0:	cbz	x8, 436ac8 <udev_rule_apply_token_to_event+0x4580>
  436ab4:	ldr	x8, [sp, #3952]
  436ab8:	ldr	x9, [x8, #2072]
  436abc:	ldr	x9, [x9, #8]
  436ac0:	str	x9, [sp, #2032]
  436ac4:	b	436ad0 <udev_rule_apply_token_to_event+0x4588>
  436ac8:	mov	x8, xzr
  436acc:	str	x8, [sp, #2032]
  436ad0:	ldr	x8, [sp, #2032]
  436ad4:	ldr	x9, [sp, #3952]
  436ad8:	str	x8, [x9, #2064]
  436adc:	ldr	x8, [x9, #2072]
  436ae0:	cbz	x8, 436af8 <udev_rule_apply_token_to_event+0x45b0>
  436ae4:	ldr	x8, [sp, #3952]
  436ae8:	ldr	x9, [x8, #2072]
  436aec:	ldr	x9, [x9]
  436af0:	str	x9, [sp, #2024]
  436af4:	b	436b00 <udev_rule_apply_token_to_event+0x45b8>
  436af8:	mov	x8, xzr
  436afc:	str	x8, [sp, #2024]
  436b00:	ldr	x8, [sp, #2024]
  436b04:	ldr	x9, [sp, #3952]
  436b08:	str	x8, [x9, #2056]
  436b0c:	mov	x8, xzr
  436b10:	str	x8, [x9, #2040]
  436b14:	ldr	x8, [sp, #3984]
  436b18:	ldr	x10, [x8, #1520]
  436b1c:	str	x10, [x9, #2032]
  436b20:	mov	w11, #0x3                   	// #3
  436b24:	str	w11, [x9, #2028]
  436b28:	ldr	w11, [x8, #440]
  436b2c:	str	w11, [x9, #2024]
  436b30:	ldr	x10, [x9, #2032]
  436b34:	cbz	x10, 436b80 <udev_rule_apply_token_to_event+0x4638>
  436b38:	mov	w0, #0x1                   	// #1
  436b3c:	bl	40a3f0 <log_get_max_level_realm@plt>
  436b40:	ldr	x8, [sp, #3952]
  436b44:	ldr	w9, [x8, #2028]
  436b48:	cmp	w0, w9
  436b4c:	cset	w9, ge  // ge = tcont
  436b50:	mov	w10, #0x1                   	// #1
  436b54:	eor	w9, w9, #0x1
  436b58:	eor	w9, w9, w10
  436b5c:	and	w9, w9, #0x1
  436b60:	mov	w1, w9
  436b64:	sxtw	x11, w1
  436b68:	cbz	x11, 436b80 <udev_rule_apply_token_to_event+0x4638>
  436b6c:	ldr	x8, [sp, #3952]
  436b70:	ldr	x0, [x8, #2032]
  436b74:	add	x1, sp, #0x6, lsl #12
  436b78:	add	x1, x1, #0x7c8
  436b7c:	bl	40a860 <sd_device_get_sysname@plt>
  436b80:	ldr	x8, [sp, #3952]
  436b84:	ldr	w0, [x8, #2028]
  436b88:	ldr	w1, [x8, #2024]
  436b8c:	ldr	x9, [x8, #2040]
  436b90:	mov	x10, xzr
  436b94:	cmp	x9, #0x0
  436b98:	ldr	x9, [sp, #3912]
  436b9c:	csel	x5, x9, x10, ne  // ne = any
  436ba0:	ldr	x6, [x8, #2040]
  436ba4:	ldr	x10, [x8, #2056]
  436ba8:	str	w0, [sp, #2020]
  436bac:	mov	x0, x10
  436bb0:	str	w1, [sp, #2016]
  436bb4:	str	x5, [sp, #2008]
  436bb8:	str	x6, [sp, #2000]
  436bbc:	bl	424274 <strna>
  436bc0:	ldr	x8, [sp, #3952]
  436bc4:	ldr	x9, [x8, #2064]
  436bc8:	str	x0, [sp, #1992]
  436bcc:	cbz	x9, 436be4 <udev_rule_apply_token_to_event+0x469c>
  436bd0:	ldr	x8, [sp, #3952]
  436bd4:	ldr	x9, [x8, #2064]
  436bd8:	ldr	w10, [x9, #8]
  436bdc:	str	w10, [sp, #1988]
  436be0:	b	436bec <udev_rule_apply_token_to_event+0x46a4>
  436be4:	mov	w8, wzr
  436be8:	str	w8, [sp, #1988]
  436bec:	ldr	w8, [sp, #1988]
  436bf0:	ldr	x9, [sp, #3984]
  436bf4:	ldr	x10, [x9, #1488]
  436bf8:	ldr	x10, [x10, #8]
  436bfc:	ldr	x11, [x9, #456]
  436c00:	ldr	w0, [sp, #2020]
  436c04:	ldr	w1, [sp, #2016]
  436c08:	ldr	x2, [sp, #3928]
  436c0c:	mov	w3, #0x715                 	// #1813
  436c10:	ldr	x4, [sp, #3920]
  436c14:	ldr	x5, [sp, #2008]
  436c18:	ldr	x6, [sp, #2000]
  436c1c:	mov	x12, xzr
  436c20:	mov	x7, x12
  436c24:	mov	x13, sp
  436c28:	str	x12, [x13]
  436c2c:	mov	x12, sp
  436c30:	ldr	x13, [sp, #3888]
  436c34:	str	x13, [x12, #8]
  436c38:	mov	x12, sp
  436c3c:	ldr	x14, [sp, #1992]
  436c40:	str	x14, [x12, #16]
  436c44:	mov	x12, sp
  436c48:	str	w8, [x12, #24]
  436c4c:	mov	x12, sp
  436c50:	str	x10, [x12, #32]
  436c54:	mov	x10, sp
  436c58:	str	x11, [x10, #40]
  436c5c:	bl	40a870 <log_object_internal@plt>
  436c60:	ldr	x9, [sp, #3952]
  436c64:	str	w0, [x9, #2020]
  436c68:	ldr	w8, [x9, #2020]
  436c6c:	str	w8, [x9, #2052]
  436c70:	ldr	w8, [x9, #2052]
  436c74:	ldr	x10, [sp, #3984]
  436c78:	str	w8, [x10, #1540]
  436c7c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  436c80:	ldr	x8, [sp, #3984]
  436c84:	ldr	x9, [x8, #1488]
  436c88:	ldr	w10, [x9]
  436c8c:	lsl	w10, w10, #16
  436c90:	asr	w10, w10, #24
  436c94:	cmp	w10, #0x0
  436c98:	cset	w10, eq  // eq = none
  436c9c:	and	w10, w10, #0x1
  436ca0:	str	w10, [x8, #1540]
  436ca4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  436ca8:	add	x2, sp, #0x6, lsl #12
  436cac:	add	x2, x2, #0x7a8
  436cb0:	mov	x8, xzr
  436cb4:	ldr	x9, [sp, #3952]
  436cb8:	str	x8, [x9, #2008]
  436cbc:	ldr	x8, [sp, #3984]
  436cc0:	ldr	x10, [x8, #1488]
  436cc4:	ldr	x0, [x10, #8]
  436cc8:	mov	w1, #0x2                   	// #2
  436ccc:	bl	40b410 <proc_cmdline_get_key@plt>
  436cd0:	ldr	x8, [sp, #3984]
  436cd4:	str	w0, [x8, #440]
  436cd8:	ldr	w11, [x8, #440]
  436cdc:	cmp	w11, #0x0
  436ce0:	cset	w11, ge  // ge = tcont
  436ce4:	tbnz	w11, #0, 436f00 <udev_rule_apply_token_to_event+0x49b8>
  436ce8:	ldr	x8, [sp, #3984]
  436cec:	ldr	x9, [x8, #1528]
  436cf0:	ldr	x10, [sp, #3952]
  436cf4:	str	x9, [x10, #2000]
  436cf8:	ldr	x9, [x10, #2000]
  436cfc:	cbz	x9, 436d14 <udev_rule_apply_token_to_event+0x47cc>
  436d00:	ldr	x8, [sp, #3952]
  436d04:	ldr	x9, [x8, #2000]
  436d08:	ldr	x9, [x9, #32]
  436d0c:	str	x9, [sp, #1976]
  436d10:	b	436d1c <udev_rule_apply_token_to_event+0x47d4>
  436d14:	mov	x8, xzr
  436d18:	str	x8, [sp, #1976]
  436d1c:	ldr	x8, [sp, #1976]
  436d20:	ldr	x9, [sp, #3952]
  436d24:	str	x8, [x9, #1992]
  436d28:	ldr	x8, [x9, #1992]
  436d2c:	cbz	x8, 436d44 <udev_rule_apply_token_to_event+0x47fc>
  436d30:	ldr	x8, [sp, #3952]
  436d34:	ldr	x9, [x8, #1992]
  436d38:	ldr	x9, [x9, #8]
  436d3c:	str	x9, [sp, #1968]
  436d40:	b	436d4c <udev_rule_apply_token_to_event+0x4804>
  436d44:	mov	x8, xzr
  436d48:	str	x8, [sp, #1968]
  436d4c:	ldr	x8, [sp, #1968]
  436d50:	ldr	x9, [sp, #3952]
  436d54:	str	x8, [x9, #1984]
  436d58:	ldr	x8, [x9, #1992]
  436d5c:	cbz	x8, 436d74 <udev_rule_apply_token_to_event+0x482c>
  436d60:	ldr	x8, [sp, #3952]
  436d64:	ldr	x9, [x8, #1992]
  436d68:	ldr	x9, [x9]
  436d6c:	str	x9, [sp, #1960]
  436d70:	b	436d7c <udev_rule_apply_token_to_event+0x4834>
  436d74:	mov	x8, xzr
  436d78:	str	x8, [sp, #1960]
  436d7c:	ldr	x8, [sp, #1960]
  436d80:	ldr	x9, [sp, #3952]
  436d84:	str	x8, [x9, #1976]
  436d88:	mov	x8, xzr
  436d8c:	str	x8, [x9, #1960]
  436d90:	ldr	x8, [sp, #3984]
  436d94:	ldr	x10, [x8, #1520]
  436d98:	str	x10, [x9, #1952]
  436d9c:	mov	w11, #0x3                   	// #3
  436da0:	str	w11, [x9, #1948]
  436da4:	ldr	w11, [x8, #440]
  436da8:	str	w11, [x9, #1944]
  436dac:	ldr	x10, [x9, #1952]
  436db0:	cbz	x10, 436dfc <udev_rule_apply_token_to_event+0x48b4>
  436db4:	mov	w0, #0x1                   	// #1
  436db8:	bl	40a3f0 <log_get_max_level_realm@plt>
  436dbc:	ldr	x8, [sp, #3952]
  436dc0:	ldr	w9, [x8, #1948]
  436dc4:	cmp	w0, w9
  436dc8:	cset	w9, ge  // ge = tcont
  436dcc:	mov	w10, #0x1                   	// #1
  436dd0:	eor	w9, w9, #0x1
  436dd4:	eor	w9, w9, w10
  436dd8:	and	w9, w9, #0x1
  436ddc:	mov	w1, w9
  436de0:	sxtw	x11, w1
  436de4:	cbz	x11, 436dfc <udev_rule_apply_token_to_event+0x48b4>
  436de8:	ldr	x8, [sp, #3952]
  436dec:	ldr	x0, [x8, #1952]
  436df0:	add	x1, sp, #0x6, lsl #12
  436df4:	add	x1, x1, #0x778
  436df8:	bl	40a860 <sd_device_get_sysname@plt>
  436dfc:	ldr	x8, [sp, #3952]
  436e00:	ldr	w0, [x8, #1948]
  436e04:	ldr	w1, [x8, #1944]
  436e08:	ldr	x9, [x8, #1960]
  436e0c:	mov	x10, xzr
  436e10:	cmp	x9, #0x0
  436e14:	ldr	x9, [sp, #3912]
  436e18:	csel	x5, x9, x10, ne  // ne = any
  436e1c:	ldr	x6, [x8, #1960]
  436e20:	ldr	x10, [x8, #1976]
  436e24:	str	w0, [sp, #1956]
  436e28:	mov	x0, x10
  436e2c:	str	w1, [sp, #1952]
  436e30:	str	x5, [sp, #1944]
  436e34:	str	x6, [sp, #1936]
  436e38:	bl	424274 <strna>
  436e3c:	ldr	x8, [sp, #3952]
  436e40:	ldr	x9, [x8, #1984]
  436e44:	str	x0, [sp, #1928]
  436e48:	cbz	x9, 436e60 <udev_rule_apply_token_to_event+0x4918>
  436e4c:	ldr	x8, [sp, #3952]
  436e50:	ldr	x9, [x8, #1984]
  436e54:	ldr	w10, [x9, #8]
  436e58:	str	w10, [sp, #1924]
  436e5c:	b	436e68 <udev_rule_apply_token_to_event+0x4920>
  436e60:	mov	w8, wzr
  436e64:	str	w8, [sp, #1924]
  436e68:	ldr	w8, [sp, #1924]
  436e6c:	ldr	x9, [sp, #3984]
  436e70:	ldr	x10, [x9, #1488]
  436e74:	ldr	x10, [x10, #8]
  436e78:	ldr	w0, [sp, #1956]
  436e7c:	ldr	w1, [sp, #1952]
  436e80:	ldr	x2, [sp, #3928]
  436e84:	mov	w3, #0x71f                 	// #1823
  436e88:	ldr	x4, [sp, #3920]
  436e8c:	ldr	x5, [sp, #1944]
  436e90:	ldr	x6, [sp, #1936]
  436e94:	mov	x11, xzr
  436e98:	mov	x7, x11
  436e9c:	mov	x12, sp
  436ea0:	str	x11, [x12]
  436ea4:	mov	x11, sp
  436ea8:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  436eac:	add	x12, x12, #0x89c
  436eb0:	str	x12, [x11, #8]
  436eb4:	mov	x11, sp
  436eb8:	ldr	x12, [sp, #1928]
  436ebc:	str	x12, [x11, #16]
  436ec0:	mov	x11, sp
  436ec4:	str	w8, [x11, #24]
  436ec8:	mov	x11, sp
  436ecc:	str	x10, [x11, #32]
  436ed0:	bl	40a870 <log_object_internal@plt>
  436ed4:	ldr	x9, [sp, #3952]
  436ed8:	str	w0, [x9, #1940]
  436edc:	ldr	w8, [x9, #1940]
  436ee0:	str	w8, [x9, #1972]
  436ee4:	ldr	w8, [x9, #1972]
  436ee8:	ldr	x10, [sp, #3984]
  436eec:	str	w8, [x10, #1540]
  436ef0:	mov	w8, #0x1                   	// #1
  436ef4:	ldr	x11, [sp, #3976]
  436ef8:	str	w8, [x11, #1300]
  436efc:	b	437234 <udev_rule_apply_token_to_event+0x4cec>
  436f00:	ldr	x8, [sp, #3984]
  436f04:	ldr	w9, [x8, #440]
  436f08:	cbnz	w9, 436f40 <udev_rule_apply_token_to_event+0x49f8>
  436f0c:	ldr	x8, [sp, #3984]
  436f10:	ldr	x9, [x8, #1488]
  436f14:	ldr	w10, [x9]
  436f18:	lsl	w10, w10, #16
  436f1c:	asr	w10, w10, #24
  436f20:	mov	w11, #0x1                   	// #1
  436f24:	cmp	w10, #0x1
  436f28:	cset	w10, eq  // eq = none
  436f2c:	and	w10, w10, #0x1
  436f30:	str	w10, [x8, #1540]
  436f34:	ldr	x9, [sp, #3976]
  436f38:	str	w11, [x9, #1300]
  436f3c:	b	437234 <udev_rule_apply_token_to_event+0x4cec>
  436f40:	ldr	x8, [sp, #3984]
  436f44:	ldr	x0, [x8, #1520]
  436f48:	ldr	x9, [x8, #1488]
  436f4c:	ldr	x1, [x9, #8]
  436f50:	ldr	x9, [sp, #3952]
  436f54:	ldr	x10, [x9, #2008]
  436f58:	str	x0, [sp, #1912]
  436f5c:	str	x1, [sp, #1904]
  436f60:	str	x10, [sp, #1896]
  436f64:	cbz	x10, 436f74 <udev_rule_apply_token_to_event+0x4a2c>
  436f68:	ldr	x8, [sp, #1896]
  436f6c:	str	x8, [sp, #1888]
  436f70:	b	436f80 <udev_rule_apply_token_to_event+0x4a38>
  436f74:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  436f78:	add	x8, x8, #0xbbe
  436f7c:	str	x8, [sp, #1888]
  436f80:	ldr	x8, [sp, #1888]
  436f84:	ldr	x0, [sp, #1912]
  436f88:	ldr	x1, [sp, #1904]
  436f8c:	mov	x2, x8
  436f90:	bl	40aff0 <device_add_property@plt>
  436f94:	ldr	x8, [sp, #3984]
  436f98:	str	w0, [x8, #440]
  436f9c:	ldr	w9, [x8, #440]
  436fa0:	cmp	w9, #0x0
  436fa4:	cset	w9, ge  // ge = tcont
  436fa8:	tbnz	w9, #0, 437204 <udev_rule_apply_token_to_event+0x4cbc>
  436fac:	ldr	x8, [sp, #3984]
  436fb0:	ldr	x9, [x8, #1528]
  436fb4:	ldr	x10, [sp, #3952]
  436fb8:	str	x9, [x10, #1928]
  436fbc:	ldr	x9, [x10, #1928]
  436fc0:	cbz	x9, 436fd8 <udev_rule_apply_token_to_event+0x4a90>
  436fc4:	ldr	x8, [sp, #3952]
  436fc8:	ldr	x9, [x8, #1928]
  436fcc:	ldr	x9, [x9, #32]
  436fd0:	str	x9, [sp, #1880]
  436fd4:	b	436fe0 <udev_rule_apply_token_to_event+0x4a98>
  436fd8:	mov	x8, xzr
  436fdc:	str	x8, [sp, #1880]
  436fe0:	ldr	x8, [sp, #1880]
  436fe4:	ldr	x9, [sp, #3952]
  436fe8:	str	x8, [x9, #1920]
  436fec:	ldr	x8, [x9, #1920]
  436ff0:	cbz	x8, 437008 <udev_rule_apply_token_to_event+0x4ac0>
  436ff4:	ldr	x8, [sp, #3952]
  436ff8:	ldr	x9, [x8, #1920]
  436ffc:	ldr	x9, [x9, #8]
  437000:	str	x9, [sp, #1872]
  437004:	b	437010 <udev_rule_apply_token_to_event+0x4ac8>
  437008:	mov	x8, xzr
  43700c:	str	x8, [sp, #1872]
  437010:	ldr	x8, [sp, #1872]
  437014:	ldr	x9, [sp, #3952]
  437018:	str	x8, [x9, #1912]
  43701c:	ldr	x8, [x9, #1920]
  437020:	cbz	x8, 437038 <udev_rule_apply_token_to_event+0x4af0>
  437024:	ldr	x8, [sp, #3952]
  437028:	ldr	x9, [x8, #1920]
  43702c:	ldr	x9, [x9]
  437030:	str	x9, [sp, #1864]
  437034:	b	437040 <udev_rule_apply_token_to_event+0x4af8>
  437038:	mov	x8, xzr
  43703c:	str	x8, [sp, #1864]
  437040:	ldr	x8, [sp, #1864]
  437044:	ldr	x9, [sp, #3952]
  437048:	str	x8, [x9, #1904]
  43704c:	mov	x8, xzr
  437050:	str	x8, [x9, #1888]
  437054:	ldr	x8, [sp, #3984]
  437058:	ldr	x10, [x8, #1520]
  43705c:	str	x10, [x9, #1880]
  437060:	mov	w11, #0x3                   	// #3
  437064:	str	w11, [x9, #1876]
  437068:	ldr	w11, [x8, #440]
  43706c:	str	w11, [x9, #1872]
  437070:	ldr	x10, [x9, #1880]
  437074:	cbz	x10, 4370c0 <udev_rule_apply_token_to_event+0x4b78>
  437078:	mov	w0, #0x1                   	// #1
  43707c:	bl	40a3f0 <log_get_max_level_realm@plt>
  437080:	ldr	x8, [sp, #3952]
  437084:	ldr	w9, [x8, #1876]
  437088:	cmp	w0, w9
  43708c:	cset	w9, ge  // ge = tcont
  437090:	mov	w10, #0x1                   	// #1
  437094:	eor	w9, w9, #0x1
  437098:	eor	w9, w9, w10
  43709c:	and	w9, w9, #0x1
  4370a0:	mov	w1, w9
  4370a4:	sxtw	x11, w1
  4370a8:	cbz	x11, 4370c0 <udev_rule_apply_token_to_event+0x4b78>
  4370ac:	ldr	x8, [sp, #3952]
  4370b0:	ldr	x0, [x8, #1880]
  4370b4:	add	x1, sp, #0x6, lsl #12
  4370b8:	add	x1, x1, #0x730
  4370bc:	bl	40a860 <sd_device_get_sysname@plt>
  4370c0:	ldr	x8, [sp, #3952]
  4370c4:	ldr	w0, [x8, #1876]
  4370c8:	ldr	w1, [x8, #1872]
  4370cc:	ldr	x9, [x8, #1888]
  4370d0:	mov	x10, xzr
  4370d4:	cmp	x9, #0x0
  4370d8:	ldr	x9, [sp, #3912]
  4370dc:	csel	x5, x9, x10, ne  // ne = any
  4370e0:	ldr	x6, [x8, #1888]
  4370e4:	ldr	x10, [x8, #1904]
  4370e8:	str	w0, [sp, #1860]
  4370ec:	mov	x0, x10
  4370f0:	str	w1, [sp, #1856]
  4370f4:	str	x5, [sp, #1848]
  4370f8:	str	x6, [sp, #1840]
  4370fc:	bl	424274 <strna>
  437100:	ldr	x8, [sp, #3952]
  437104:	ldr	x9, [x8, #1912]
  437108:	str	x0, [sp, #1832]
  43710c:	cbz	x9, 437124 <udev_rule_apply_token_to_event+0x4bdc>
  437110:	ldr	x8, [sp, #3952]
  437114:	ldr	x9, [x8, #1912]
  437118:	ldr	w10, [x9, #8]
  43711c:	str	w10, [sp, #1828]
  437120:	b	43712c <udev_rule_apply_token_to_event+0x4be4>
  437124:	mov	w8, wzr
  437128:	str	w8, [sp, #1828]
  43712c:	ldr	w8, [sp, #1828]
  437130:	ldr	x9, [sp, #3984]
  437134:	ldr	x10, [x9, #1488]
  437138:	ldr	x10, [x10, #8]
  43713c:	ldr	x11, [sp, #3952]
  437140:	ldr	x12, [x11, #2008]
  437144:	str	w8, [sp, #1824]
  437148:	str	x10, [sp, #1816]
  43714c:	str	x12, [sp, #1808]
  437150:	cbz	x12, 437160 <udev_rule_apply_token_to_event+0x4c18>
  437154:	ldr	x8, [sp, #1808]
  437158:	str	x8, [sp, #1800]
  43715c:	b	43716c <udev_rule_apply_token_to_event+0x4c24>
  437160:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  437164:	add	x8, x8, #0xbbe
  437168:	str	x8, [sp, #1800]
  43716c:	ldr	x8, [sp, #1800]
  437170:	ldr	w0, [sp, #1860]
  437174:	ldr	w1, [sp, #1856]
  437178:	ldr	x2, [sp, #3928]
  43717c:	mov	w3, #0x726                 	// #1830
  437180:	ldr	x4, [sp, #3920]
  437184:	ldr	x5, [sp, #1848]
  437188:	ldr	x6, [sp, #1840]
  43718c:	mov	x9, xzr
  437190:	mov	x7, x9
  437194:	mov	x10, sp
  437198:	str	x9, [x10]
  43719c:	mov	x9, sp
  4371a0:	ldr	x10, [sp, #3888]
  4371a4:	str	x10, [x9, #8]
  4371a8:	mov	x9, sp
  4371ac:	ldr	x11, [sp, #1832]
  4371b0:	str	x11, [x9, #16]
  4371b4:	mov	x9, sp
  4371b8:	ldr	w12, [sp, #1824]
  4371bc:	str	w12, [x9, #24]
  4371c0:	mov	x9, sp
  4371c4:	ldr	x13, [sp, #1816]
  4371c8:	str	x13, [x9, #32]
  4371cc:	mov	x9, sp
  4371d0:	str	x8, [x9, #40]
  4371d4:	bl	40a870 <log_object_internal@plt>
  4371d8:	ldr	x8, [sp, #3952]
  4371dc:	str	w0, [x8, #1868]
  4371e0:	ldr	w12, [x8, #1868]
  4371e4:	str	w12, [x8, #1900]
  4371e8:	ldr	w12, [x8, #1900]
  4371ec:	ldr	x9, [sp, #3984]
  4371f0:	str	w12, [x9, #1540]
  4371f4:	mov	w12, #0x1                   	// #1
  4371f8:	ldr	x10, [sp, #3976]
  4371fc:	str	w12, [x10, #1300]
  437200:	b	437234 <udev_rule_apply_token_to_event+0x4cec>
  437204:	ldr	x8, [sp, #3984]
  437208:	ldr	x9, [x8, #1488]
  43720c:	ldr	w10, [x9]
  437210:	lsl	w10, w10, #16
  437214:	asr	w10, w10, #24
  437218:	cmp	w10, #0x0
  43721c:	cset	w10, eq  // eq = none
  437220:	and	w10, w10, #0x1
  437224:	str	w10, [x8, #1540]
  437228:	mov	w10, #0x1                   	// #1
  43722c:	ldr	x9, [sp, #3976]
  437230:	str	w10, [x9, #1300]
  437234:	add	x0, sp, #0x6, lsl #12
  437238:	add	x0, x0, #0x7a8
  43723c:	bl	4230c8 <freep>
  437240:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  437244:	ldr	x8, [sp, #3984]
  437248:	ldr	x0, [x8, #1512]
  43724c:	ldr	x9, [x8, #1488]
  437250:	ldr	x1, [x9, #8]
  437254:	add	x9, sp, #0xf, lsl #12
  437258:	add	x9, x9, #0x448
  43725c:	mov	x2, x9
  437260:	mov	x3, #0x400                 	// #1024
  437264:	mov	w10, wzr
  437268:	and	w4, w10, #0x1
  43726c:	str	x9, [sp, #1792]
  437270:	bl	4183c0 <udev_event_apply_format>
  437274:	ldr	x8, [sp, #3984]
  437278:	ldr	x9, [x8, #1520]
  43727c:	mov	x0, x9
  437280:	ldr	x1, [sp, #1792]
  437284:	bl	43c328 <import_parent_into_properties>
  437288:	ldr	x8, [sp, #3984]
  43728c:	str	w0, [x8, #440]
  437290:	ldr	w10, [x8, #440]
  437294:	cmp	w10, #0x0
  437298:	cset	w10, ge  // ge = tcont
  43729c:	tbnz	w10, #0, 4374a8 <udev_rule_apply_token_to_event+0x4f60>
  4372a0:	ldr	x8, [sp, #3984]
  4372a4:	ldr	x9, [x8, #1528]
  4372a8:	ldr	x10, [sp, #3952]
  4372ac:	str	x9, [x10, #1856]
  4372b0:	ldr	x9, [x10, #1856]
  4372b4:	cbz	x9, 4372cc <udev_rule_apply_token_to_event+0x4d84>
  4372b8:	ldr	x8, [sp, #3952]
  4372bc:	ldr	x9, [x8, #1856]
  4372c0:	ldr	x9, [x9, #32]
  4372c4:	str	x9, [sp, #1784]
  4372c8:	b	4372d4 <udev_rule_apply_token_to_event+0x4d8c>
  4372cc:	mov	x8, xzr
  4372d0:	str	x8, [sp, #1784]
  4372d4:	ldr	x8, [sp, #1784]
  4372d8:	ldr	x9, [sp, #3952]
  4372dc:	str	x8, [x9, #1848]
  4372e0:	ldr	x8, [x9, #1848]
  4372e4:	cbz	x8, 4372fc <udev_rule_apply_token_to_event+0x4db4>
  4372e8:	ldr	x8, [sp, #3952]
  4372ec:	ldr	x9, [x8, #1848]
  4372f0:	ldr	x9, [x9, #8]
  4372f4:	str	x9, [sp, #1776]
  4372f8:	b	437304 <udev_rule_apply_token_to_event+0x4dbc>
  4372fc:	mov	x8, xzr
  437300:	str	x8, [sp, #1776]
  437304:	ldr	x8, [sp, #1776]
  437308:	ldr	x9, [sp, #3952]
  43730c:	str	x8, [x9, #1840]
  437310:	ldr	x8, [x9, #1848]
  437314:	cbz	x8, 43732c <udev_rule_apply_token_to_event+0x4de4>
  437318:	ldr	x8, [sp, #3952]
  43731c:	ldr	x9, [x8, #1848]
  437320:	ldr	x9, [x9]
  437324:	str	x9, [sp, #1768]
  437328:	b	437334 <udev_rule_apply_token_to_event+0x4dec>
  43732c:	mov	x8, xzr
  437330:	str	x8, [sp, #1768]
  437334:	ldr	x8, [sp, #1768]
  437338:	ldr	x9, [sp, #3952]
  43733c:	str	x8, [x9, #1832]
  437340:	mov	x8, xzr
  437344:	str	x8, [x9, #1816]
  437348:	ldr	x8, [sp, #3984]
  43734c:	ldr	x10, [x8, #1520]
  437350:	str	x10, [x9, #1808]
  437354:	mov	w11, #0x3                   	// #3
  437358:	str	w11, [x9, #1804]
  43735c:	ldr	w11, [x8, #440]
  437360:	str	w11, [x9, #1800]
  437364:	ldr	x10, [x9, #1808]
  437368:	cbz	x10, 4373b4 <udev_rule_apply_token_to_event+0x4e6c>
  43736c:	mov	w0, #0x1                   	// #1
  437370:	bl	40a3f0 <log_get_max_level_realm@plt>
  437374:	ldr	x8, [sp, #3952]
  437378:	ldr	w9, [x8, #1804]
  43737c:	cmp	w0, w9
  437380:	cset	w9, ge  // ge = tcont
  437384:	mov	w10, #0x1                   	// #1
  437388:	eor	w9, w9, #0x1
  43738c:	eor	w9, w9, w10
  437390:	and	w9, w9, #0x1
  437394:	mov	w1, w9
  437398:	sxtw	x11, w1
  43739c:	cbz	x11, 4373b4 <udev_rule_apply_token_to_event+0x4e6c>
  4373a0:	ldr	x8, [sp, #3952]
  4373a4:	ldr	x0, [x8, #1808]
  4373a8:	add	x1, sp, #0x6, lsl #12
  4373ac:	add	x1, x1, #0x6e8
  4373b0:	bl	40a860 <sd_device_get_sysname@plt>
  4373b4:	ldr	x8, [sp, #3952]
  4373b8:	ldr	w0, [x8, #1804]
  4373bc:	ldr	w1, [x8, #1800]
  4373c0:	ldr	x9, [x8, #1816]
  4373c4:	mov	x10, xzr
  4373c8:	cmp	x9, #0x0
  4373cc:	ldr	x9, [sp, #3912]
  4373d0:	csel	x5, x9, x10, ne  // ne = any
  4373d4:	ldr	x6, [x8, #1816]
  4373d8:	ldr	x10, [x8, #1832]
  4373dc:	str	w0, [sp, #1764]
  4373e0:	mov	x0, x10
  4373e4:	str	w1, [sp, #1760]
  4373e8:	str	x5, [sp, #1752]
  4373ec:	str	x6, [sp, #1744]
  4373f0:	bl	424274 <strna>
  4373f4:	ldr	x8, [sp, #3952]
  4373f8:	ldr	x9, [x8, #1840]
  4373fc:	str	x0, [sp, #1736]
  437400:	cbz	x9, 437418 <udev_rule_apply_token_to_event+0x4ed0>
  437404:	ldr	x8, [sp, #3952]
  437408:	ldr	x9, [x8, #1840]
  43740c:	ldr	w10, [x9, #8]
  437410:	str	w10, [sp, #1732]
  437414:	b	437420 <udev_rule_apply_token_to_event+0x4ed8>
  437418:	mov	w8, wzr
  43741c:	str	w8, [sp, #1732]
  437420:	ldr	w8, [sp, #1732]
  437424:	ldr	w0, [sp, #1764]
  437428:	ldr	w1, [sp, #1760]
  43742c:	ldr	x2, [sp, #3928]
  437430:	mov	w3, #0x72f                 	// #1839
  437434:	ldr	x4, [sp, #3920]
  437438:	ldr	x5, [sp, #1752]
  43743c:	ldr	x6, [sp, #1744]
  437440:	mov	x9, xzr
  437444:	mov	x7, x9
  437448:	mov	x10, sp
  43744c:	str	x9, [x10]
  437450:	mov	x9, sp
  437454:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  437458:	add	x10, x10, #0x8d4
  43745c:	str	x10, [x9, #8]
  437460:	mov	x9, sp
  437464:	ldr	x10, [sp, #1736]
  437468:	str	x10, [x9, #16]
  43746c:	mov	x9, sp
  437470:	str	w8, [x9, #24]
  437474:	mov	x9, sp
  437478:	add	x11, sp, #0xf, lsl #12
  43747c:	add	x11, x11, #0x448
  437480:	str	x11, [x9, #32]
  437484:	bl	40a870 <log_object_internal@plt>
  437488:	ldr	x9, [sp, #3952]
  43748c:	str	w0, [x9, #1796]
  437490:	ldr	w8, [x9, #1796]
  437494:	str	w8, [x9, #1828]
  437498:	ldr	w8, [x9, #1828]
  43749c:	ldr	x10, [sp, #3984]
  4374a0:	str	w8, [x10, #1540]
  4374a4:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4374a8:	ldr	x8, [sp, #3984]
  4374ac:	ldr	x9, [x8, #1488]
  4374b0:	ldr	w10, [x9]
  4374b4:	lsl	w10, w10, #16
  4374b8:	asr	w10, w10, #24
  4374bc:	ldr	w11, [x8, #440]
  4374c0:	mov	w12, wzr
  4374c4:	mov	w13, #0x1                   	// #1
  4374c8:	cmp	w11, #0x0
  4374cc:	csel	w11, w12, w13, gt
  4374d0:	cmp	w10, w11
  4374d4:	cset	w10, eq  // eq = none
  4374d8:	and	w10, w10, #0x1
  4374dc:	str	w10, [x8, #1540]
  4374e0:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4374e4:	ldr	x8, [sp, #3984]
  4374e8:	ldr	x0, [x8, #1488]
  4374ec:	ldr	x9, [x8, #1512]
  4374f0:	ldr	x1, [x9, #32]
  4374f4:	bl	43b764 <token_match_string>
  4374f8:	and	w10, w0, #0x1
  4374fc:	ldr	x8, [sp, #3984]
  437500:	str	w10, [x8, #1540]
  437504:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  437508:	ldr	x8, [sp, #3984]
  43750c:	ldr	x9, [x8, #1512]
  437510:	ldrh	w10, [x9, #104]
  437514:	and	w10, w10, #0xffffff00
  437518:	orr	w10, w10, #0x1
  43751c:	strh	w10, [x9, #104]
  437520:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437524:	ldr	x8, [sp, #3984]
  437528:	ldr	x9, [x8, #1512]
  43752c:	ldrh	w10, [x9, #104]
  437530:	and	w10, w10, #0xffffff00
  437534:	orr	w10, w10, #0x2
  437538:	strh	w10, [x9, #104]
  43753c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437540:	ldr	x8, [sp, #3984]
  437544:	ldr	x0, [x8, #1520]
  437548:	bl	40b420 <device_set_db_persist@plt>
  43754c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437550:	ldr	x8, [sp, #3984]
  437554:	ldr	x9, [x8, #1512]
  437558:	ldrh	w10, [x9, #104]
  43755c:	mov	w11, #0x9                   	// #9
  437560:	lsr	w10, w10, w11
  437564:	and	w10, w10, #0x1
  437568:	tbnz	w10, #0, 437570 <udev_rule_apply_token_to_event+0x5028>
  43756c:	b	437574 <udev_rule_apply_token_to_event+0x502c>
  437570:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437574:	ldr	x8, [sp, #3984]
  437578:	ldr	x9, [x8, #1488]
  43757c:	ldr	w10, [x9]
  437580:	lsl	w10, w10, #16
  437584:	asr	w10, w10, #24
  437588:	cmp	w10, #0x5
  43758c:	b.ne	4375a8 <udev_rule_apply_token_to_event+0x5060>  // b.any
  437590:	ldr	x8, [sp, #3984]
  437594:	ldr	x9, [x8, #1512]
  437598:	ldrh	w10, [x9, #104]
  43759c:	and	w10, w10, #0xfffffdff
  4375a0:	orr	w10, w10, #0x200
  4375a4:	strh	w10, [x9, #104]
  4375a8:	ldr	x8, [sp, #3984]
  4375ac:	ldr	x9, [x8, #1488]
  4375b0:	ldr	x9, [x9, #16]
  4375b4:	cmp	x9, #0x0
  4375b8:	cset	w10, ne  // ne = any
  4375bc:	ldr	x9, [x8, #1512]
  4375c0:	ldrh	w11, [x9, #104]
  4375c4:	and	w10, w10, #0x1
  4375c8:	lsl	w10, w10, #8
  4375cc:	and	w11, w11, #0xfffffeff
  4375d0:	orr	w10, w11, w10
  4375d4:	strh	w10, [x9, #104]
  4375d8:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4375dc:	ldr	x8, [sp, #3984]
  4375e0:	ldr	x0, [x8, #1520]
  4375e4:	ldr	x9, [x8, #1488]
  4375e8:	ldr	x9, [x9, #16]
  4375ec:	mov	w1, w9
  4375f0:	bl	40b430 <device_set_devlink_priority@plt>
  4375f4:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4375f8:	add	x8, sp, #0x6, lsl #12
  4375fc:	add	x8, x8, #0x4d4
  437600:	ldr	x9, [sp, #3952]
  437604:	str	x8, [x9, #1272]
  437608:	ldr	x8, [sp, #3984]
  43760c:	ldr	x10, [x8, #1512]
  437610:	ldrh	w11, [x10, #104]
  437614:	mov	w12, #0xb                   	// #11
  437618:	lsr	w11, w11, w12
  43761c:	and	w11, w11, #0x1
  437620:	tbnz	w11, #0, 437628 <udev_rule_apply_token_to_event+0x50e0>
  437624:	b	43762c <udev_rule_apply_token_to_event+0x50e4>
  437628:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43762c:	ldr	x8, [sp, #3984]
  437630:	ldr	x9, [x8, #1488]
  437634:	ldr	w10, [x9]
  437638:	lsl	w10, w10, #16
  43763c:	asr	w10, w10, #24
  437640:	cmp	w10, #0x5
  437644:	b.ne	437660 <udev_rule_apply_token_to_event+0x5118>  // b.any
  437648:	ldr	x8, [sp, #3984]
  43764c:	ldr	x9, [x8, #1512]
  437650:	ldrh	w10, [x9, #104]
  437654:	and	w10, w10, #0xfffff7ff
  437658:	orr	w10, w10, #0x800
  43765c:	strh	w10, [x9, #104]
  437660:	ldr	x8, [sp, #3984]
  437664:	ldr	x0, [x8, #1512]
  437668:	ldr	x9, [x8, #1488]
  43766c:	ldr	x1, [x9, #8]
  437670:	add	x2, sp, #0x6, lsl #12
  437674:	add	x2, x2, #0x4d4
  437678:	mov	x3, #0x200                 	// #512
  43767c:	mov	w10, wzr
  437680:	and	w4, w10, #0x1
  437684:	bl	4183c0 <udev_event_apply_format>
  437688:	ldr	x8, [sp, #3984]
  43768c:	ldr	x9, [x8, #1512]
  437690:	add	x1, x9, #0x2c
  437694:	add	x9, sp, #0x6, lsl #12
  437698:	add	x9, x9, #0x4c8
  43769c:	mov	x0, x9
  4376a0:	mov	x9, xzr
  4376a4:	mov	x2, x9
  4376a8:	mov	x3, x9
  4376ac:	mov	x4, x9
  4376b0:	mov	w5, #0x2                   	// #2
  4376b4:	bl	40b340 <get_user_creds@plt>
  4376b8:	ldr	x8, [sp, #3984]
  4376bc:	str	w0, [x8, #440]
  4376c0:	ldr	w10, [x8, #440]
  4376c4:	cmp	w10, #0x0
  4376c8:	cset	w10, ge  // ge = tcont
  4376cc:	tbnz	w10, #0, 4376f8 <udev_rule_apply_token_to_event+0x51b0>
  4376d0:	ldr	x8, [sp, #3984]
  4376d4:	ldr	x0, [x8, #1520]
  4376d8:	ldr	x1, [x8, #1528]
  4376dc:	ldr	w2, [x8, #440]
  4376e0:	adrp	x3, 468000 <on_inotify.__assert_in_set+0x4540>
  4376e4:	add	x3, x3, #0x2e3
  4376e8:	add	x4, sp, #0x6, lsl #12
  4376ec:	add	x4, x4, #0x4d4
  4376f0:	bl	431f2c <log_unknown_owner>
  4376f4:	b	437900 <udev_rule_apply_token_to_event+0x53b8>
  4376f8:	ldr	x8, [sp, #3984]
  4376fc:	ldr	x9, [x8, #1528]
  437700:	ldr	x10, [sp, #3952]
  437704:	str	x9, [x10, #1264]
  437708:	ldr	x9, [x10, #1264]
  43770c:	cbz	x9, 437724 <udev_rule_apply_token_to_event+0x51dc>
  437710:	ldr	x8, [sp, #3952]
  437714:	ldr	x9, [x8, #1264]
  437718:	ldr	x9, [x9, #32]
  43771c:	str	x9, [sp, #1720]
  437720:	b	43772c <udev_rule_apply_token_to_event+0x51e4>
  437724:	mov	x8, xzr
  437728:	str	x8, [sp, #1720]
  43772c:	ldr	x8, [sp, #1720]
  437730:	ldr	x9, [sp, #3952]
  437734:	str	x8, [x9, #1256]
  437738:	ldr	x8, [x9, #1256]
  43773c:	cbz	x8, 437754 <udev_rule_apply_token_to_event+0x520c>
  437740:	ldr	x8, [sp, #3952]
  437744:	ldr	x9, [x8, #1256]
  437748:	ldr	x9, [x9, #8]
  43774c:	str	x9, [sp, #1712]
  437750:	b	43775c <udev_rule_apply_token_to_event+0x5214>
  437754:	mov	x8, xzr
  437758:	str	x8, [sp, #1712]
  43775c:	ldr	x8, [sp, #1712]
  437760:	ldr	x9, [sp, #3952]
  437764:	str	x8, [x9, #1248]
  437768:	ldr	x8, [x9, #1256]
  43776c:	cbz	x8, 437784 <udev_rule_apply_token_to_event+0x523c>
  437770:	ldr	x8, [sp, #3952]
  437774:	ldr	x9, [x8, #1256]
  437778:	ldr	x9, [x9]
  43777c:	str	x9, [sp, #1704]
  437780:	b	43778c <udev_rule_apply_token_to_event+0x5244>
  437784:	mov	x8, xzr
  437788:	str	x8, [sp, #1704]
  43778c:	ldr	x8, [sp, #1704]
  437790:	ldr	x9, [sp, #3952]
  437794:	str	x8, [x9, #1240]
  437798:	mov	x8, xzr
  43779c:	str	x8, [x9, #1224]
  4377a0:	ldr	x8, [sp, #3984]
  4377a4:	ldr	x10, [x8, #1520]
  4377a8:	str	x10, [x9, #1216]
  4377ac:	mov	w11, #0x7                   	// #7
  4377b0:	str	w11, [x9, #1212]
  4377b4:	str	wzr, [x9, #1208]
  4377b8:	ldr	x10, [x9, #1216]
  4377bc:	cbz	x10, 437808 <udev_rule_apply_token_to_event+0x52c0>
  4377c0:	mov	w0, #0x1                   	// #1
  4377c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4377c8:	ldr	x8, [sp, #3952]
  4377cc:	ldr	w9, [x8, #1212]
  4377d0:	cmp	w0, w9
  4377d4:	cset	w9, ge  // ge = tcont
  4377d8:	mov	w10, #0x1                   	// #1
  4377dc:	eor	w9, w9, #0x1
  4377e0:	eor	w9, w9, w10
  4377e4:	and	w9, w9, #0x1
  4377e8:	mov	w1, w9
  4377ec:	sxtw	x11, w1
  4377f0:	cbz	x11, 437808 <udev_rule_apply_token_to_event+0x52c0>
  4377f4:	ldr	x8, [sp, #3952]
  4377f8:	ldr	x0, [x8, #1216]
  4377fc:	add	x1, sp, #0x6, lsl #12
  437800:	add	x1, x1, #0x498
  437804:	bl	40a860 <sd_device_get_sysname@plt>
  437808:	ldr	x8, [sp, #3952]
  43780c:	ldr	w0, [x8, #1212]
  437810:	ldr	w1, [x8, #1208]
  437814:	ldr	x9, [x8, #1224]
  437818:	mov	x10, xzr
  43781c:	cmp	x9, #0x0
  437820:	ldr	x9, [sp, #3912]
  437824:	csel	x5, x9, x10, ne  // ne = any
  437828:	ldr	x6, [x8, #1224]
  43782c:	ldr	x10, [x8, #1240]
  437830:	str	w0, [sp, #1700]
  437834:	mov	x0, x10
  437838:	str	w1, [sp, #1696]
  43783c:	str	x5, [sp, #1688]
  437840:	str	x6, [sp, #1680]
  437844:	bl	424274 <strna>
  437848:	ldr	x8, [sp, #3952]
  43784c:	ldr	x9, [x8, #1248]
  437850:	str	x0, [sp, #1672]
  437854:	cbz	x9, 43786c <udev_rule_apply_token_to_event+0x5324>
  437858:	ldr	x8, [sp, #3952]
  43785c:	ldr	x9, [x8, #1248]
  437860:	ldr	w10, [x9, #8]
  437864:	str	w10, [sp, #1668]
  437868:	b	437874 <udev_rule_apply_token_to_event+0x532c>
  43786c:	mov	w8, wzr
  437870:	str	w8, [sp, #1668]
  437874:	ldr	w8, [sp, #1668]
  437878:	ldr	x9, [sp, #3984]
  43787c:	ldr	x10, [x9, #1512]
  437880:	ldr	w11, [x10, #44]
  437884:	ldr	w0, [sp, #1700]
  437888:	ldr	w1, [sp, #1696]
  43788c:	ldr	x2, [sp, #3928]
  437890:	mov	w3, #0x756                 	// #1878
  437894:	ldr	x4, [sp, #3920]
  437898:	ldr	x5, [sp, #1688]
  43789c:	ldr	x6, [sp, #1680]
  4378a0:	mov	x10, xzr
  4378a4:	mov	x7, x10
  4378a8:	mov	x12, sp
  4378ac:	str	x10, [x12]
  4378b0:	mov	x10, sp
  4378b4:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  4378b8:	add	x12, x12, #0x90b
  4378bc:	str	x12, [x10, #8]
  4378c0:	mov	x10, sp
  4378c4:	ldr	x12, [sp, #1672]
  4378c8:	str	x12, [x10, #16]
  4378cc:	mov	x10, sp
  4378d0:	str	w8, [x10, #24]
  4378d4:	mov	x10, sp
  4378d8:	add	x13, sp, #0x6, lsl #12
  4378dc:	add	x13, x13, #0x4d4
  4378e0:	str	x13, [x10, #32]
  4378e4:	mov	x10, sp
  4378e8:	str	w11, [x10, #40]
  4378ec:	bl	40a870 <log_object_internal@plt>
  4378f0:	ldr	x9, [sp, #3952]
  4378f4:	str	w0, [x9, #1204]
  4378f8:	ldr	w8, [x9, #1204]
  4378fc:	str	w8, [x9, #1236]
  437900:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437904:	add	x8, sp, #0x6, lsl #12
  437908:	add	x8, x8, #0x284
  43790c:	ldr	x9, [sp, #3952]
  437910:	str	x8, [x9, #680]
  437914:	ldr	x8, [sp, #3984]
  437918:	ldr	x10, [x8, #1512]
  43791c:	ldrh	w11, [x10, #104]
  437920:	mov	w12, #0xa                   	// #10
  437924:	lsr	w11, w11, w12
  437928:	and	w11, w11, #0x1
  43792c:	tbnz	w11, #0, 437934 <udev_rule_apply_token_to_event+0x53ec>
  437930:	b	437938 <udev_rule_apply_token_to_event+0x53f0>
  437934:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437938:	ldr	x8, [sp, #3984]
  43793c:	ldr	x9, [x8, #1488]
  437940:	ldr	w10, [x9]
  437944:	lsl	w10, w10, #16
  437948:	asr	w10, w10, #24
  43794c:	cmp	w10, #0x5
  437950:	b.ne	43796c <udev_rule_apply_token_to_event+0x5424>  // b.any
  437954:	ldr	x8, [sp, #3984]
  437958:	ldr	x9, [x8, #1512]
  43795c:	ldrh	w10, [x9, #104]
  437960:	and	w10, w10, #0xfffffbff
  437964:	orr	w10, w10, #0x400
  437968:	strh	w10, [x9, #104]
  43796c:	ldr	x8, [sp, #3984]
  437970:	ldr	x0, [x8, #1512]
  437974:	ldr	x9, [x8, #1488]
  437978:	ldr	x1, [x9, #8]
  43797c:	add	x2, sp, #0x6, lsl #12
  437980:	add	x2, x2, #0x284
  437984:	mov	x3, #0x200                 	// #512
  437988:	mov	w10, wzr
  43798c:	and	w4, w10, #0x1
  437990:	bl	4183c0 <udev_event_apply_format>
  437994:	ldr	x8, [sp, #3984]
  437998:	ldr	x9, [x8, #1512]
  43799c:	add	x1, x9, #0x30
  4379a0:	add	x9, sp, #0x6, lsl #12
  4379a4:	add	x9, x9, #0x278
  4379a8:	mov	x0, x9
  4379ac:	mov	w2, #0x2                   	// #2
  4379b0:	bl	40b350 <get_group_creds@plt>
  4379b4:	ldr	x8, [sp, #3984]
  4379b8:	str	w0, [x8, #440]
  4379bc:	ldr	w10, [x8, #440]
  4379c0:	cmp	w10, #0x0
  4379c4:	cset	w10, ge  // ge = tcont
  4379c8:	tbnz	w10, #0, 4379f4 <udev_rule_apply_token_to_event+0x54ac>
  4379cc:	ldr	x8, [sp, #3984]
  4379d0:	ldr	x0, [x8, #1520]
  4379d4:	ldr	x1, [x8, #1528]
  4379d8:	ldr	w2, [x8, #440]
  4379dc:	adrp	x3, 468000 <on_inotify.__assert_in_set+0x4540>
  4379e0:	add	x3, x3, #0x383
  4379e4:	add	x4, sp, #0x6, lsl #12
  4379e8:	add	x4, x4, #0x284
  4379ec:	bl	431f2c <log_unknown_owner>
  4379f0:	b	437bfc <udev_rule_apply_token_to_event+0x56b4>
  4379f4:	ldr	x8, [sp, #3984]
  4379f8:	ldr	x9, [x8, #1528]
  4379fc:	ldr	x10, [sp, #3952]
  437a00:	str	x9, [x10, #672]
  437a04:	ldr	x9, [x10, #672]
  437a08:	cbz	x9, 437a20 <udev_rule_apply_token_to_event+0x54d8>
  437a0c:	ldr	x8, [sp, #3952]
  437a10:	ldr	x9, [x8, #672]
  437a14:	ldr	x9, [x9, #32]
  437a18:	str	x9, [sp, #1656]
  437a1c:	b	437a28 <udev_rule_apply_token_to_event+0x54e0>
  437a20:	mov	x8, xzr
  437a24:	str	x8, [sp, #1656]
  437a28:	ldr	x8, [sp, #1656]
  437a2c:	ldr	x9, [sp, #3952]
  437a30:	str	x8, [x9, #664]
  437a34:	ldr	x8, [x9, #664]
  437a38:	cbz	x8, 437a50 <udev_rule_apply_token_to_event+0x5508>
  437a3c:	ldr	x8, [sp, #3952]
  437a40:	ldr	x9, [x8, #664]
  437a44:	ldr	x9, [x9, #8]
  437a48:	str	x9, [sp, #1648]
  437a4c:	b	437a58 <udev_rule_apply_token_to_event+0x5510>
  437a50:	mov	x8, xzr
  437a54:	str	x8, [sp, #1648]
  437a58:	ldr	x8, [sp, #1648]
  437a5c:	ldr	x9, [sp, #3952]
  437a60:	str	x8, [x9, #656]
  437a64:	ldr	x8, [x9, #664]
  437a68:	cbz	x8, 437a80 <udev_rule_apply_token_to_event+0x5538>
  437a6c:	ldr	x8, [sp, #3952]
  437a70:	ldr	x9, [x8, #664]
  437a74:	ldr	x9, [x9]
  437a78:	str	x9, [sp, #1640]
  437a7c:	b	437a88 <udev_rule_apply_token_to_event+0x5540>
  437a80:	mov	x8, xzr
  437a84:	str	x8, [sp, #1640]
  437a88:	ldr	x8, [sp, #1640]
  437a8c:	ldr	x9, [sp, #3952]
  437a90:	str	x8, [x9, #648]
  437a94:	mov	x8, xzr
  437a98:	str	x8, [x9, #632]
  437a9c:	ldr	x8, [sp, #3984]
  437aa0:	ldr	x10, [x8, #1520]
  437aa4:	str	x10, [x9, #624]
  437aa8:	mov	w11, #0x7                   	// #7
  437aac:	str	w11, [x9, #620]
  437ab0:	str	wzr, [x9, #616]
  437ab4:	ldr	x10, [x9, #624]
  437ab8:	cbz	x10, 437b04 <udev_rule_apply_token_to_event+0x55bc>
  437abc:	mov	w0, #0x1                   	// #1
  437ac0:	bl	40a3f0 <log_get_max_level_realm@plt>
  437ac4:	ldr	x8, [sp, #3952]
  437ac8:	ldr	w9, [x8, #620]
  437acc:	cmp	w0, w9
  437ad0:	cset	w9, ge  // ge = tcont
  437ad4:	mov	w10, #0x1                   	// #1
  437ad8:	eor	w9, w9, #0x1
  437adc:	eor	w9, w9, w10
  437ae0:	and	w9, w9, #0x1
  437ae4:	mov	w1, w9
  437ae8:	sxtw	x11, w1
  437aec:	cbz	x11, 437b04 <udev_rule_apply_token_to_event+0x55bc>
  437af0:	ldr	x8, [sp, #3952]
  437af4:	ldr	x0, [x8, #624]
  437af8:	add	x1, sp, #0x6, lsl #12
  437afc:	add	x1, x1, #0x248
  437b00:	bl	40a860 <sd_device_get_sysname@plt>
  437b04:	ldr	x8, [sp, #3952]
  437b08:	ldr	w0, [x8, #620]
  437b0c:	ldr	w1, [x8, #616]
  437b10:	ldr	x9, [x8, #632]
  437b14:	mov	x10, xzr
  437b18:	cmp	x9, #0x0
  437b1c:	ldr	x9, [sp, #3912]
  437b20:	csel	x5, x9, x10, ne  // ne = any
  437b24:	ldr	x6, [x8, #632]
  437b28:	ldr	x10, [x8, #648]
  437b2c:	str	w0, [sp, #1636]
  437b30:	mov	x0, x10
  437b34:	str	w1, [sp, #1632]
  437b38:	str	x5, [sp, #1624]
  437b3c:	str	x6, [sp, #1616]
  437b40:	bl	424274 <strna>
  437b44:	ldr	x8, [sp, #3952]
  437b48:	ldr	x9, [x8, #656]
  437b4c:	str	x0, [sp, #1608]
  437b50:	cbz	x9, 437b68 <udev_rule_apply_token_to_event+0x5620>
  437b54:	ldr	x8, [sp, #3952]
  437b58:	ldr	x9, [x8, #656]
  437b5c:	ldr	w10, [x9, #8]
  437b60:	str	w10, [sp, #1604]
  437b64:	b	437b70 <udev_rule_apply_token_to_event+0x5628>
  437b68:	mov	w8, wzr
  437b6c:	str	w8, [sp, #1604]
  437b70:	ldr	w8, [sp, #1604]
  437b74:	ldr	x9, [sp, #3984]
  437b78:	ldr	x10, [x9, #1512]
  437b7c:	ldr	w11, [x10, #48]
  437b80:	ldr	w0, [sp, #1636]
  437b84:	ldr	w1, [sp, #1632]
  437b88:	ldr	x2, [sp, #3928]
  437b8c:	mov	w3, #0x767                 	// #1895
  437b90:	ldr	x4, [sp, #3920]
  437b94:	ldr	x5, [sp, #1624]
  437b98:	ldr	x6, [sp, #1616]
  437b9c:	mov	x10, xzr
  437ba0:	mov	x7, x10
  437ba4:	mov	x12, sp
  437ba8:	str	x10, [x12]
  437bac:	mov	x10, sp
  437bb0:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  437bb4:	add	x12, x12, #0x91e
  437bb8:	str	x12, [x10, #8]
  437bbc:	mov	x10, sp
  437bc0:	ldr	x12, [sp, #1608]
  437bc4:	str	x12, [x10, #16]
  437bc8:	mov	x10, sp
  437bcc:	str	w8, [x10, #24]
  437bd0:	mov	x10, sp
  437bd4:	add	x13, sp, #0x6, lsl #12
  437bd8:	add	x13, x13, #0x284
  437bdc:	str	x13, [x10, #32]
  437be0:	mov	x10, sp
  437be4:	str	w11, [x10, #40]
  437be8:	bl	40a870 <log_object_internal@plt>
  437bec:	ldr	x9, [sp, #3952]
  437bf0:	str	w0, [x9, #612]
  437bf4:	ldr	w8, [x9, #612]
  437bf8:	str	w8, [x9, #644]
  437bfc:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437c00:	ldr	x8, [sp, #3984]
  437c04:	ldr	x9, [x8, #1512]
  437c08:	ldrh	w10, [x9, #104]
  437c0c:	mov	w11, #0xc                   	// #12
  437c10:	lsr	w10, w10, w11
  437c14:	and	w10, w10, #0x1
  437c18:	tbnz	w10, #0, 437c20 <udev_rule_apply_token_to_event+0x56d8>
  437c1c:	b	437c24 <udev_rule_apply_token_to_event+0x56dc>
  437c20:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  437c24:	ldr	x8, [sp, #3984]
  437c28:	ldr	x9, [x8, #1488]
  437c2c:	ldr	w10, [x9]
  437c30:	lsl	w10, w10, #16
  437c34:	asr	w10, w10, #24
  437c38:	cmp	w10, #0x5
  437c3c:	b.ne	437c58 <udev_rule_apply_token_to_event+0x5710>  // b.any
  437c40:	ldr	x8, [sp, #3984]
  437c44:	ldr	x9, [x8, #1512]
  437c48:	ldrh	w10, [x9, #104]
  437c4c:	and	w10, w10, #0xffffefff
  437c50:	orr	w10, w10, #0x1000
  437c54:	strh	w10, [x9, #104]
  437c58:	ldr	x8, [sp, #3984]
  437c5c:	ldr	x0, [x8, #1512]
  437c60:	ldr	x9, [x8, #1488]
  437c64:	ldr	x1, [x9, #8]
  437c68:	add	x9, sp, #0x6, lsl #12
  437c6c:	add	x9, x9, #0x34
  437c70:	mov	x2, x9
  437c74:	mov	x3, #0x200                 	// #512
  437c78:	mov	w10, wzr
  437c7c:	and	w4, w10, #0x1
  437c80:	str	x9, [sp, #1592]
  437c84:	bl	4183c0 <udev_event_apply_format>
  437c88:	ldr	x8, [sp, #3984]
  437c8c:	ldr	x9, [x8, #1512]
  437c90:	add	x1, x9, #0x28
  437c94:	ldr	x9, [sp, #1592]
  437c98:	mov	x0, x9
  437c9c:	bl	40b300 <parse_mode@plt>
  437ca0:	ldr	x8, [sp, #3984]
  437ca4:	str	w0, [x8, #440]
  437ca8:	ldr	w10, [x8, #440]
  437cac:	cmp	w10, #0x0
  437cb0:	cset	w10, ge  // ge = tcont
  437cb4:	tbnz	w10, #0, 437eb0 <udev_rule_apply_token_to_event+0x5968>
  437cb8:	ldr	x8, [sp, #3984]
  437cbc:	ldr	x9, [x8, #1528]
  437cc0:	ldr	x10, [sp, #3952]
  437cc4:	str	x9, [x10, #88]
  437cc8:	ldr	x9, [x10, #88]
  437ccc:	cbz	x9, 437ce4 <udev_rule_apply_token_to_event+0x579c>
  437cd0:	ldr	x8, [sp, #3952]
  437cd4:	ldr	x9, [x8, #88]
  437cd8:	ldr	x9, [x9, #32]
  437cdc:	str	x9, [sp, #1584]
  437ce0:	b	437cec <udev_rule_apply_token_to_event+0x57a4>
  437ce4:	mov	x8, xzr
  437ce8:	str	x8, [sp, #1584]
  437cec:	ldr	x8, [sp, #1584]
  437cf0:	ldr	x9, [sp, #3952]
  437cf4:	str	x8, [x9, #80]
  437cf8:	ldr	x8, [x9, #80]
  437cfc:	cbz	x8, 437d14 <udev_rule_apply_token_to_event+0x57cc>
  437d00:	ldr	x8, [sp, #3952]
  437d04:	ldr	x9, [x8, #80]
  437d08:	ldr	x9, [x9, #8]
  437d0c:	str	x9, [sp, #1576]
  437d10:	b	437d1c <udev_rule_apply_token_to_event+0x57d4>
  437d14:	mov	x8, xzr
  437d18:	str	x8, [sp, #1576]
  437d1c:	ldr	x8, [sp, #1576]
  437d20:	ldr	x9, [sp, #3952]
  437d24:	str	x8, [x9, #72]
  437d28:	ldr	x8, [x9, #80]
  437d2c:	cbz	x8, 437d44 <udev_rule_apply_token_to_event+0x57fc>
  437d30:	ldr	x8, [sp, #3952]
  437d34:	ldr	x9, [x8, #80]
  437d38:	ldr	x9, [x9]
  437d3c:	str	x9, [sp, #1568]
  437d40:	b	437d4c <udev_rule_apply_token_to_event+0x5804>
  437d44:	mov	x8, xzr
  437d48:	str	x8, [sp, #1568]
  437d4c:	ldr	x8, [sp, #1568]
  437d50:	ldr	x9, [sp, #3952]
  437d54:	str	x8, [x9, #64]
  437d58:	mov	x8, xzr
  437d5c:	str	x8, [x9, #48]
  437d60:	ldr	x8, [sp, #3984]
  437d64:	ldr	x10, [x8, #1520]
  437d68:	str	x10, [x9, #40]
  437d6c:	mov	w11, #0x3                   	// #3
  437d70:	str	w11, [x9, #36]
  437d74:	ldr	w11, [x8, #440]
  437d78:	str	w11, [x9, #32]
  437d7c:	ldr	x10, [x9, #40]
  437d80:	cbz	x10, 437dc8 <udev_rule_apply_token_to_event+0x5880>
  437d84:	mov	w0, #0x1                   	// #1
  437d88:	bl	40a3f0 <log_get_max_level_realm@plt>
  437d8c:	ldr	x8, [sp, #3952]
  437d90:	ldr	w9, [x8, #36]
  437d94:	cmp	w0, w9
  437d98:	cset	w9, ge  // ge = tcont
  437d9c:	mov	w10, #0x1                   	// #1
  437da0:	eor	w9, w9, #0x1
  437da4:	eor	w9, w9, w10
  437da8:	and	w9, w9, #0x1
  437dac:	mov	w1, w9
  437db0:	sxtw	x11, w1
  437db4:	cbz	x11, 437dc8 <udev_rule_apply_token_to_event+0x5880>
  437db8:	ldr	x8, [sp, #3952]
  437dbc:	ldr	x0, [x8, #40]
  437dc0:	add	x1, sp, #0x6, lsl #12
  437dc4:	bl	40a860 <sd_device_get_sysname@plt>
  437dc8:	ldr	x8, [sp, #3952]
  437dcc:	ldr	w0, [x8, #36]
  437dd0:	ldr	w1, [x8, #32]
  437dd4:	ldr	x9, [x8, #48]
  437dd8:	mov	x10, xzr
  437ddc:	cmp	x9, #0x0
  437de0:	ldr	x9, [sp, #3912]
  437de4:	csel	x5, x9, x10, ne  // ne = any
  437de8:	ldr	x6, [x8, #48]
  437dec:	ldr	x10, [x8, #64]
  437df0:	str	w0, [sp, #1564]
  437df4:	mov	x0, x10
  437df8:	str	w1, [sp, #1560]
  437dfc:	str	x5, [sp, #1552]
  437e00:	str	x6, [sp, #1544]
  437e04:	bl	424274 <strna>
  437e08:	ldr	x8, [sp, #3952]
  437e0c:	ldr	x9, [x8, #72]
  437e10:	str	x0, [sp, #1536]
  437e14:	cbz	x9, 437e2c <udev_rule_apply_token_to_event+0x58e4>
  437e18:	ldr	x8, [sp, #3952]
  437e1c:	ldr	x9, [x8, #72]
  437e20:	ldr	w10, [x9, #8]
  437e24:	str	w10, [sp, #1532]
  437e28:	b	437e34 <udev_rule_apply_token_to_event+0x58ec>
  437e2c:	mov	w8, wzr
  437e30:	str	w8, [sp, #1532]
  437e34:	ldr	w8, [sp, #1532]
  437e38:	ldr	w0, [sp, #1564]
  437e3c:	ldr	w1, [sp, #1560]
  437e40:	ldr	x2, [sp, #3928]
  437e44:	mov	w3, #0x775                 	// #1909
  437e48:	ldr	x4, [sp, #3920]
  437e4c:	ldr	x5, [sp, #1552]
  437e50:	ldr	x6, [sp, #1544]
  437e54:	mov	x9, xzr
  437e58:	mov	x7, x9
  437e5c:	mov	x10, sp
  437e60:	str	x9, [x10]
  437e64:	mov	x9, sp
  437e68:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  437e6c:	add	x10, x10, #0x931
  437e70:	str	x10, [x9, #8]
  437e74:	mov	x9, sp
  437e78:	ldr	x10, [sp, #1536]
  437e7c:	str	x10, [x9, #16]
  437e80:	mov	x9, sp
  437e84:	str	w8, [x9, #24]
  437e88:	mov	x9, sp
  437e8c:	add	x11, sp, #0x6, lsl #12
  437e90:	add	x11, x11, #0x34
  437e94:	str	x11, [x9, #32]
  437e98:	bl	40a870 <log_object_internal@plt>
  437e9c:	ldr	x9, [sp, #3952]
  437ea0:	str	w0, [x9, #28]
  437ea4:	ldr	w8, [x9, #28]
  437ea8:	str	w8, [x9, #60]
  437eac:	b	4380a8 <udev_rule_apply_token_to_event+0x5b60>
  437eb0:	ldr	x8, [sp, #3984]
  437eb4:	ldr	x9, [x8, #1528]
  437eb8:	ldr	x10, [sp, #3952]
  437ebc:	str	x9, [x10, #16]
  437ec0:	ldr	x9, [x10, #16]
  437ec4:	cbz	x9, 437edc <udev_rule_apply_token_to_event+0x5994>
  437ec8:	ldr	x8, [sp, #3952]
  437ecc:	ldr	x9, [x8, #16]
  437ed0:	ldr	x9, [x9, #32]
  437ed4:	str	x9, [sp, #1520]
  437ed8:	b	437ee4 <udev_rule_apply_token_to_event+0x599c>
  437edc:	mov	x8, xzr
  437ee0:	str	x8, [sp, #1520]
  437ee4:	ldr	x8, [sp, #1520]
  437ee8:	ldr	x9, [sp, #3952]
  437eec:	str	x8, [x9, #8]
  437ef0:	ldr	x8, [x9, #8]
  437ef4:	cbz	x8, 437f0c <udev_rule_apply_token_to_event+0x59c4>
  437ef8:	ldr	x8, [sp, #3952]
  437efc:	ldr	x9, [x8, #8]
  437f00:	ldr	x9, [x9, #8]
  437f04:	str	x9, [sp, #1512]
  437f08:	b	437f14 <udev_rule_apply_token_to_event+0x59cc>
  437f0c:	mov	x8, xzr
  437f10:	str	x8, [sp, #1512]
  437f14:	ldr	x8, [sp, #1512]
  437f18:	ldr	x9, [sp, #3952]
  437f1c:	str	x8, [x9]
  437f20:	ldr	x8, [x9, #8]
  437f24:	cbz	x8, 437f3c <udev_rule_apply_token_to_event+0x59f4>
  437f28:	ldr	x8, [sp, #3952]
  437f2c:	ldr	x9, [x8, #8]
  437f30:	ldr	x9, [x9]
  437f34:	str	x9, [sp, #1504]
  437f38:	b	437f44 <udev_rule_apply_token_to_event+0x59fc>
  437f3c:	mov	x8, xzr
  437f40:	str	x8, [sp, #1504]
  437f44:	ldr	x8, [sp, #1504]
  437f48:	ldr	x9, [sp, #3944]
  437f4c:	stur	x8, [x9, #252]
  437f50:	mov	x8, xzr
  437f54:	stur	x8, [x9, #236]
  437f58:	ldr	x8, [sp, #3984]
  437f5c:	ldr	x10, [x8, #1520]
  437f60:	stur	x10, [x9, #228]
  437f64:	mov	w11, #0x7                   	// #7
  437f68:	str	w11, [x9, #224]
  437f6c:	str	wzr, [x9, #220]
  437f70:	ldur	x10, [x9, #228]
  437f74:	cbz	x10, 437fc0 <udev_rule_apply_token_to_event+0x5a78>
  437f78:	mov	w0, #0x1                   	// #1
  437f7c:	bl	40a3f0 <log_get_max_level_realm@plt>
  437f80:	ldr	x8, [sp, #3944]
  437f84:	ldr	w9, [x8, #224]
  437f88:	cmp	w0, w9
  437f8c:	cset	w9, ge  // ge = tcont
  437f90:	mov	w10, #0x1                   	// #1
  437f94:	eor	w9, w9, #0x1
  437f98:	eor	w9, w9, w10
  437f9c:	and	w9, w9, #0x1
  437fa0:	mov	w1, w9
  437fa4:	sxtw	x11, w1
  437fa8:	cbz	x11, 437fc0 <udev_rule_apply_token_to_event+0x5a78>
  437fac:	ldr	x8, [sp, #3944]
  437fb0:	ldur	x0, [x8, #228]
  437fb4:	add	x1, sp, #0x5, lsl #12
  437fb8:	add	x1, x1, #0xfb8
  437fbc:	bl	40a860 <sd_device_get_sysname@plt>
  437fc0:	ldr	x8, [sp, #3944]
  437fc4:	ldr	w0, [x8, #224]
  437fc8:	ldr	w1, [x8, #220]
  437fcc:	ldur	x9, [x8, #236]
  437fd0:	mov	x10, xzr
  437fd4:	cmp	x9, #0x0
  437fd8:	ldr	x9, [sp, #3912]
  437fdc:	csel	x5, x9, x10, ne  // ne = any
  437fe0:	ldur	x6, [x8, #236]
  437fe4:	ldur	x10, [x8, #252]
  437fe8:	str	w0, [sp, #1500]
  437fec:	mov	x0, x10
  437ff0:	str	w1, [sp, #1496]
  437ff4:	str	x5, [sp, #1488]
  437ff8:	str	x6, [sp, #1480]
  437ffc:	bl	424274 <strna>
  438000:	ldr	x8, [sp, #3952]
  438004:	ldr	x9, [x8]
  438008:	str	x0, [sp, #1472]
  43800c:	cbz	x9, 438024 <udev_rule_apply_token_to_event+0x5adc>
  438010:	ldr	x8, [sp, #3952]
  438014:	ldr	x9, [x8]
  438018:	ldr	w10, [x9, #8]
  43801c:	str	w10, [sp, #1468]
  438020:	b	43802c <udev_rule_apply_token_to_event+0x5ae4>
  438024:	mov	w8, wzr
  438028:	str	w8, [sp, #1468]
  43802c:	ldr	w8, [sp, #1468]
  438030:	ldr	x9, [sp, #3984]
  438034:	ldr	x10, [x9, #1512]
  438038:	ldr	w11, [x10, #40]
  43803c:	ldr	w0, [sp, #1500]
  438040:	ldr	w1, [sp, #1496]
  438044:	ldr	x2, [sp, #3928]
  438048:	mov	w3, #0x777                 	// #1911
  43804c:	ldr	x4, [sp, #3920]
  438050:	ldr	x5, [sp, #1488]
  438054:	ldr	x6, [sp, #1480]
  438058:	mov	x10, xzr
  43805c:	mov	x7, x10
  438060:	mov	x12, sp
  438064:	str	x10, [x12]
  438068:	mov	x10, sp
  43806c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  438070:	add	x12, x12, #0x95f
  438074:	str	x12, [x10, #8]
  438078:	mov	x10, sp
  43807c:	ldr	x12, [sp, #1472]
  438080:	str	x12, [x10, #16]
  438084:	mov	x10, sp
  438088:	str	w8, [x10, #24]
  43808c:	mov	x10, sp
  438090:	str	w11, [x10, #32]
  438094:	bl	40a870 <log_object_internal@plt>
  438098:	ldr	x9, [sp, #3944]
  43809c:	str	w0, [x9, #216]
  4380a0:	ldr	w8, [x9, #216]
  4380a4:	str	w8, [x9, #248]
  4380a8:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4380ac:	ldr	x8, [sp, #3984]
  4380b0:	ldr	x9, [x8, #1512]
  4380b4:	ldrh	w10, [x9, #104]
  4380b8:	mov	w11, #0xb                   	// #11
  4380bc:	lsr	w10, w10, w11
  4380c0:	and	w10, w10, #0x1
  4380c4:	tbnz	w10, #0, 4380cc <udev_rule_apply_token_to_event+0x5b84>
  4380c8:	b	4380d0 <udev_rule_apply_token_to_event+0x5b88>
  4380cc:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4380d0:	ldr	x8, [sp, #3984]
  4380d4:	ldr	x9, [x8, #1488]
  4380d8:	ldr	w10, [x9]
  4380dc:	lsl	w10, w10, #16
  4380e0:	asr	w10, w10, #24
  4380e4:	cmp	w10, #0x5
  4380e8:	b.ne	438104 <udev_rule_apply_token_to_event+0x5bbc>  // b.any
  4380ec:	ldr	x8, [sp, #3984]
  4380f0:	ldr	x9, [x8, #1512]
  4380f4:	ldrh	w10, [x9, #104]
  4380f8:	and	w10, w10, #0xfffff7ff
  4380fc:	orr	w10, w10, #0x800
  438100:	strh	w10, [x9, #104]
  438104:	ldr	x8, [sp, #3984]
  438108:	ldr	x9, [x8, #1488]
  43810c:	ldr	x9, [x9, #16]
  438110:	cbnz	x9, 438118 <udev_rule_apply_token_to_event+0x5bd0>
  438114:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438118:	ldr	x8, [sp, #3984]
  43811c:	ldr	x9, [x8, #1488]
  438120:	ldr	x9, [x9, #16]
  438124:	subs	x9, x9, #0x1
  438128:	ldr	x10, [x8, #1512]
  43812c:	str	w9, [x10, #44]
  438130:	ldr	x10, [x8, #1528]
  438134:	ldr	x11, [sp, #3944]
  438138:	stur	x10, [x11, #204]
  43813c:	ldur	x10, [x11, #204]
  438140:	cbz	x10, 438158 <udev_rule_apply_token_to_event+0x5c10>
  438144:	ldr	x8, [sp, #3944]
  438148:	ldur	x9, [x8, #204]
  43814c:	ldr	x9, [x9, #32]
  438150:	str	x9, [sp, #1456]
  438154:	b	438160 <udev_rule_apply_token_to_event+0x5c18>
  438158:	mov	x8, xzr
  43815c:	str	x8, [sp, #1456]
  438160:	ldr	x8, [sp, #1456]
  438164:	ldr	x9, [sp, #3944]
  438168:	stur	x8, [x9, #196]
  43816c:	ldur	x8, [x9, #196]
  438170:	cbz	x8, 438188 <udev_rule_apply_token_to_event+0x5c40>
  438174:	ldr	x8, [sp, #3944]
  438178:	ldur	x9, [x8, #196]
  43817c:	ldr	x9, [x9, #8]
  438180:	str	x9, [sp, #1448]
  438184:	b	438190 <udev_rule_apply_token_to_event+0x5c48>
  438188:	mov	x8, xzr
  43818c:	str	x8, [sp, #1448]
  438190:	ldr	x8, [sp, #1448]
  438194:	ldr	x9, [sp, #3944]
  438198:	stur	x8, [x9, #188]
  43819c:	ldur	x8, [x9, #196]
  4381a0:	cbz	x8, 4381b8 <udev_rule_apply_token_to_event+0x5c70>
  4381a4:	ldr	x8, [sp, #3944]
  4381a8:	ldur	x9, [x8, #196]
  4381ac:	ldr	x9, [x9]
  4381b0:	str	x9, [sp, #1440]
  4381b4:	b	4381c0 <udev_rule_apply_token_to_event+0x5c78>
  4381b8:	mov	x8, xzr
  4381bc:	str	x8, [sp, #1440]
  4381c0:	ldr	x8, [sp, #1440]
  4381c4:	ldr	x9, [sp, #3944]
  4381c8:	stur	x8, [x9, #180]
  4381cc:	mov	x8, xzr
  4381d0:	stur	x8, [x9, #164]
  4381d4:	ldr	x8, [sp, #3984]
  4381d8:	ldr	x10, [x8, #1520]
  4381dc:	stur	x10, [x9, #156]
  4381e0:	mov	w11, #0x7                   	// #7
  4381e4:	str	w11, [x9, #152]
  4381e8:	str	wzr, [x9, #148]
  4381ec:	ldur	x10, [x9, #156]
  4381f0:	cbz	x10, 43823c <udev_rule_apply_token_to_event+0x5cf4>
  4381f4:	mov	w0, #0x1                   	// #1
  4381f8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4381fc:	ldr	x8, [sp, #3944]
  438200:	ldr	w9, [x8, #152]
  438204:	cmp	w0, w9
  438208:	cset	w9, ge  // ge = tcont
  43820c:	mov	w10, #0x1                   	// #1
  438210:	eor	w9, w9, #0x1
  438214:	eor	w9, w9, w10
  438218:	and	w9, w9, #0x1
  43821c:	mov	w1, w9
  438220:	sxtw	x11, w1
  438224:	cbz	x11, 43823c <udev_rule_apply_token_to_event+0x5cf4>
  438228:	ldr	x8, [sp, #3944]
  43822c:	ldur	x0, [x8, #156]
  438230:	add	x1, sp, #0x5, lsl #12
  438234:	add	x1, x1, #0xf70
  438238:	bl	40a860 <sd_device_get_sysname@plt>
  43823c:	ldr	x8, [sp, #3944]
  438240:	ldr	w0, [x8, #152]
  438244:	ldr	w1, [x8, #148]
  438248:	ldur	x9, [x8, #164]
  43824c:	mov	x10, xzr
  438250:	cmp	x9, #0x0
  438254:	ldr	x9, [sp, #3912]
  438258:	csel	x5, x9, x10, ne  // ne = any
  43825c:	ldur	x6, [x8, #164]
  438260:	ldur	x10, [x8, #180]
  438264:	str	w0, [sp, #1436]
  438268:	mov	x0, x10
  43826c:	str	w1, [sp, #1432]
  438270:	str	x5, [sp, #1424]
  438274:	str	x6, [sp, #1416]
  438278:	bl	424274 <strna>
  43827c:	ldr	x8, [sp, #3944]
  438280:	ldur	x9, [x8, #188]
  438284:	str	x0, [sp, #1408]
  438288:	cbz	x9, 4382a0 <udev_rule_apply_token_to_event+0x5d58>
  43828c:	ldr	x8, [sp, #3944]
  438290:	ldur	x9, [x8, #188]
  438294:	ldr	w10, [x9, #8]
  438298:	str	w10, [sp, #1404]
  43829c:	b	4382a8 <udev_rule_apply_token_to_event+0x5d60>
  4382a0:	mov	w8, wzr
  4382a4:	str	w8, [sp, #1404]
  4382a8:	ldr	w8, [sp, #1404]
  4382ac:	ldr	x9, [sp, #3984]
  4382b0:	ldr	x10, [x9, #1512]
  4382b4:	ldr	w11, [x10, #44]
  4382b8:	ldr	w0, [sp, #1436]
  4382bc:	ldr	w1, [sp, #1432]
  4382c0:	ldr	x2, [sp, #3928]
  4382c4:	mov	w3, #0x782                 	// #1922
  4382c8:	ldr	x4, [sp, #3920]
  4382cc:	ldr	x5, [sp, #1424]
  4382d0:	ldr	x6, [sp, #1416]
  4382d4:	mov	x10, xzr
  4382d8:	mov	x7, x10
  4382dc:	mov	x12, sp
  4382e0:	str	x10, [x12]
  4382e4:	mov	x10, sp
  4382e8:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  4382ec:	add	x12, x12, #0x96e
  4382f0:	str	x12, [x10, #8]
  4382f4:	mov	x10, sp
  4382f8:	ldr	x12, [sp, #1408]
  4382fc:	str	x12, [x10, #16]
  438300:	mov	x10, sp
  438304:	str	w8, [x10, #24]
  438308:	mov	x10, sp
  43830c:	str	w11, [x10, #32]
  438310:	bl	40a870 <log_object_internal@plt>
  438314:	ldr	x9, [sp, #3944]
  438318:	str	w0, [x9, #144]
  43831c:	ldr	w8, [x9, #144]
  438320:	str	w8, [x9, #176]
  438324:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438328:	ldr	x8, [sp, #3984]
  43832c:	ldr	x9, [x8, #1512]
  438330:	ldrh	w10, [x9, #104]
  438334:	mov	w11, #0xa                   	// #10
  438338:	lsr	w10, w10, w11
  43833c:	and	w10, w10, #0x1
  438340:	tbnz	w10, #0, 438348 <udev_rule_apply_token_to_event+0x5e00>
  438344:	b	43834c <udev_rule_apply_token_to_event+0x5e04>
  438348:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43834c:	ldr	x8, [sp, #3984]
  438350:	ldr	x9, [x8, #1488]
  438354:	ldr	w10, [x9]
  438358:	lsl	w10, w10, #16
  43835c:	asr	w10, w10, #24
  438360:	cmp	w10, #0x5
  438364:	b.ne	438380 <udev_rule_apply_token_to_event+0x5e38>  // b.any
  438368:	ldr	x8, [sp, #3984]
  43836c:	ldr	x9, [x8, #1512]
  438370:	ldrh	w10, [x9, #104]
  438374:	and	w10, w10, #0xfffffbff
  438378:	orr	w10, w10, #0x400
  43837c:	strh	w10, [x9, #104]
  438380:	ldr	x8, [sp, #3984]
  438384:	ldr	x9, [x8, #1488]
  438388:	ldr	x9, [x9, #16]
  43838c:	cbnz	x9, 438394 <udev_rule_apply_token_to_event+0x5e4c>
  438390:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438394:	ldr	x8, [sp, #3984]
  438398:	ldr	x9, [x8, #1488]
  43839c:	ldr	x9, [x9, #16]
  4383a0:	subs	x9, x9, #0x1
  4383a4:	ldr	x10, [x8, #1512]
  4383a8:	str	w9, [x10, #48]
  4383ac:	ldr	x10, [x8, #1528]
  4383b0:	ldr	x11, [sp, #3944]
  4383b4:	stur	x10, [x11, #132]
  4383b8:	ldur	x10, [x11, #132]
  4383bc:	cbz	x10, 4383d4 <udev_rule_apply_token_to_event+0x5e8c>
  4383c0:	ldr	x8, [sp, #3944]
  4383c4:	ldur	x9, [x8, #132]
  4383c8:	ldr	x9, [x9, #32]
  4383cc:	str	x9, [sp, #1392]
  4383d0:	b	4383dc <udev_rule_apply_token_to_event+0x5e94>
  4383d4:	mov	x8, xzr
  4383d8:	str	x8, [sp, #1392]
  4383dc:	ldr	x8, [sp, #1392]
  4383e0:	ldr	x9, [sp, #3944]
  4383e4:	stur	x8, [x9, #124]
  4383e8:	ldur	x8, [x9, #124]
  4383ec:	cbz	x8, 438404 <udev_rule_apply_token_to_event+0x5ebc>
  4383f0:	ldr	x8, [sp, #3944]
  4383f4:	ldur	x9, [x8, #124]
  4383f8:	ldr	x9, [x9, #8]
  4383fc:	str	x9, [sp, #1384]
  438400:	b	43840c <udev_rule_apply_token_to_event+0x5ec4>
  438404:	mov	x8, xzr
  438408:	str	x8, [sp, #1384]
  43840c:	ldr	x8, [sp, #1384]
  438410:	ldr	x9, [sp, #3944]
  438414:	stur	x8, [x9, #116]
  438418:	ldur	x8, [x9, #124]
  43841c:	cbz	x8, 438434 <udev_rule_apply_token_to_event+0x5eec>
  438420:	ldr	x8, [sp, #3944]
  438424:	ldur	x9, [x8, #124]
  438428:	ldr	x9, [x9]
  43842c:	str	x9, [sp, #1376]
  438430:	b	43843c <udev_rule_apply_token_to_event+0x5ef4>
  438434:	mov	x8, xzr
  438438:	str	x8, [sp, #1376]
  43843c:	ldr	x8, [sp, #1376]
  438440:	ldr	x9, [sp, #3944]
  438444:	stur	x8, [x9, #108]
  438448:	mov	x8, xzr
  43844c:	stur	x8, [x9, #92]
  438450:	ldr	x8, [sp, #3984]
  438454:	ldr	x10, [x8, #1520]
  438458:	stur	x10, [x9, #84]
  43845c:	mov	w11, #0x7                   	// #7
  438460:	str	w11, [x9, #80]
  438464:	str	wzr, [x9, #76]
  438468:	ldur	x10, [x9, #84]
  43846c:	cbz	x10, 4384b8 <udev_rule_apply_token_to_event+0x5f70>
  438470:	mov	w0, #0x1                   	// #1
  438474:	bl	40a3f0 <log_get_max_level_realm@plt>
  438478:	ldr	x8, [sp, #3944]
  43847c:	ldr	w9, [x8, #80]
  438480:	cmp	w0, w9
  438484:	cset	w9, ge  // ge = tcont
  438488:	mov	w10, #0x1                   	// #1
  43848c:	eor	w9, w9, #0x1
  438490:	eor	w9, w9, w10
  438494:	and	w9, w9, #0x1
  438498:	mov	w1, w9
  43849c:	sxtw	x11, w1
  4384a0:	cbz	x11, 4384b8 <udev_rule_apply_token_to_event+0x5f70>
  4384a4:	ldr	x8, [sp, #3944]
  4384a8:	ldur	x0, [x8, #84]
  4384ac:	add	x1, sp, #0x5, lsl #12
  4384b0:	add	x1, x1, #0xf28
  4384b4:	bl	40a860 <sd_device_get_sysname@plt>
  4384b8:	ldr	x8, [sp, #3944]
  4384bc:	ldr	w0, [x8, #80]
  4384c0:	ldr	w1, [x8, #76]
  4384c4:	ldur	x9, [x8, #92]
  4384c8:	mov	x10, xzr
  4384cc:	cmp	x9, #0x0
  4384d0:	ldr	x9, [sp, #3912]
  4384d4:	csel	x5, x9, x10, ne  // ne = any
  4384d8:	ldur	x6, [x8, #92]
  4384dc:	ldur	x10, [x8, #108]
  4384e0:	str	w0, [sp, #1372]
  4384e4:	mov	x0, x10
  4384e8:	str	w1, [sp, #1368]
  4384ec:	str	x5, [sp, #1360]
  4384f0:	str	x6, [sp, #1352]
  4384f4:	bl	424274 <strna>
  4384f8:	ldr	x8, [sp, #3944]
  4384fc:	ldur	x9, [x8, #116]
  438500:	str	x0, [sp, #1344]
  438504:	cbz	x9, 43851c <udev_rule_apply_token_to_event+0x5fd4>
  438508:	ldr	x8, [sp, #3944]
  43850c:	ldur	x9, [x8, #116]
  438510:	ldr	w10, [x9, #8]
  438514:	str	w10, [sp, #1340]
  438518:	b	438524 <udev_rule_apply_token_to_event+0x5fdc>
  43851c:	mov	w8, wzr
  438520:	str	w8, [sp, #1340]
  438524:	ldr	w8, [sp, #1340]
  438528:	ldr	x9, [sp, #3984]
  43852c:	ldr	x10, [x9, #1512]
  438530:	ldr	w11, [x10, #48]
  438534:	ldr	w0, [sp, #1372]
  438538:	ldr	w1, [sp, #1368]
  43853c:	ldr	x2, [sp, #3928]
  438540:	mov	w3, #0x78c                 	// #1932
  438544:	ldr	x4, [sp, #3920]
  438548:	ldr	x5, [sp, #1360]
  43854c:	ldr	x6, [sp, #1352]
  438550:	mov	x10, xzr
  438554:	mov	x7, x10
  438558:	mov	x12, sp
  43855c:	str	x10, [x12]
  438560:	mov	x10, sp
  438564:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  438568:	add	x12, x12, #0x97d
  43856c:	str	x12, [x10, #8]
  438570:	mov	x10, sp
  438574:	ldr	x12, [sp, #1344]
  438578:	str	x12, [x10, #16]
  43857c:	mov	x10, sp
  438580:	str	w8, [x10, #24]
  438584:	mov	x10, sp
  438588:	str	w11, [x10, #32]
  43858c:	bl	40a870 <log_object_internal@plt>
  438590:	ldr	x9, [sp, #3944]
  438594:	str	w0, [x9, #72]
  438598:	ldr	w8, [x9, #72]
  43859c:	str	w8, [x9, #104]
  4385a0:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4385a4:	ldr	x8, [sp, #3984]
  4385a8:	ldr	x9, [x8, #1512]
  4385ac:	ldrh	w10, [x9, #104]
  4385b0:	mov	w11, #0xc                   	// #12
  4385b4:	lsr	w10, w10, w11
  4385b8:	and	w10, w10, #0x1
  4385bc:	tbnz	w10, #0, 4385c4 <udev_rule_apply_token_to_event+0x607c>
  4385c0:	b	4385c8 <udev_rule_apply_token_to_event+0x6080>
  4385c4:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4385c8:	ldr	x8, [sp, #3984]
  4385cc:	ldr	x9, [x8, #1488]
  4385d0:	ldr	w10, [x9]
  4385d4:	lsl	w10, w10, #16
  4385d8:	asr	w10, w10, #24
  4385dc:	cmp	w10, #0x5
  4385e0:	b.ne	4385fc <udev_rule_apply_token_to_event+0x60b4>  // b.any
  4385e4:	ldr	x8, [sp, #3984]
  4385e8:	ldr	x9, [x8, #1512]
  4385ec:	ldrh	w10, [x9, #104]
  4385f0:	and	w10, w10, #0xffffefff
  4385f4:	orr	w10, w10, #0x1000
  4385f8:	strh	w10, [x9, #104]
  4385fc:	ldr	x8, [sp, #3984]
  438600:	ldr	x9, [x8, #1488]
  438604:	ldr	x9, [x9, #16]
  438608:	cbnz	x9, 438610 <udev_rule_apply_token_to_event+0x60c8>
  43860c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438610:	ldr	x8, [sp, #3984]
  438614:	ldr	x9, [x8, #1488]
  438618:	ldr	x9, [x9, #16]
  43861c:	subs	x9, x9, #0x1
  438620:	ldr	x10, [x8, #1512]
  438624:	str	w9, [x10, #40]
  438628:	ldr	x10, [x8, #1528]
  43862c:	ldr	x11, [sp, #3944]
  438630:	stur	x10, [x11, #60]
  438634:	ldur	x10, [x11, #60]
  438638:	cbz	x10, 438650 <udev_rule_apply_token_to_event+0x6108>
  43863c:	ldr	x8, [sp, #3944]
  438640:	ldur	x9, [x8, #60]
  438644:	ldr	x9, [x9, #32]
  438648:	str	x9, [sp, #1328]
  43864c:	b	438658 <udev_rule_apply_token_to_event+0x6110>
  438650:	mov	x8, xzr
  438654:	str	x8, [sp, #1328]
  438658:	ldr	x8, [sp, #1328]
  43865c:	ldr	x9, [sp, #3944]
  438660:	stur	x8, [x9, #52]
  438664:	ldur	x8, [x9, #52]
  438668:	cbz	x8, 438680 <udev_rule_apply_token_to_event+0x6138>
  43866c:	ldr	x8, [sp, #3944]
  438670:	ldur	x9, [x8, #52]
  438674:	ldr	x9, [x9, #8]
  438678:	str	x9, [sp, #1320]
  43867c:	b	438688 <udev_rule_apply_token_to_event+0x6140>
  438680:	mov	x8, xzr
  438684:	str	x8, [sp, #1320]
  438688:	ldr	x8, [sp, #1320]
  43868c:	ldr	x9, [sp, #3944]
  438690:	stur	x8, [x9, #44]
  438694:	ldur	x8, [x9, #52]
  438698:	cbz	x8, 4386b0 <udev_rule_apply_token_to_event+0x6168>
  43869c:	ldr	x8, [sp, #3944]
  4386a0:	ldur	x9, [x8, #52]
  4386a4:	ldr	x9, [x9]
  4386a8:	str	x9, [sp, #1312]
  4386ac:	b	4386b8 <udev_rule_apply_token_to_event+0x6170>
  4386b0:	mov	x8, xzr
  4386b4:	str	x8, [sp, #1312]
  4386b8:	ldr	x8, [sp, #1312]
  4386bc:	ldr	x9, [sp, #3944]
  4386c0:	stur	x8, [x9, #36]
  4386c4:	mov	x8, xzr
  4386c8:	stur	x8, [x9, #20]
  4386cc:	ldr	x8, [sp, #3984]
  4386d0:	ldr	x10, [x8, #1520]
  4386d4:	stur	x10, [x9, #12]
  4386d8:	mov	w11, #0x7                   	// #7
  4386dc:	str	w11, [x9, #8]
  4386e0:	str	wzr, [x9, #4]
  4386e4:	ldur	x10, [x9, #12]
  4386e8:	cbz	x10, 438734 <udev_rule_apply_token_to_event+0x61ec>
  4386ec:	mov	w0, #0x1                   	// #1
  4386f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4386f4:	ldr	x8, [sp, #3944]
  4386f8:	ldr	w9, [x8, #8]
  4386fc:	cmp	w0, w9
  438700:	cset	w9, ge  // ge = tcont
  438704:	mov	w10, #0x1                   	// #1
  438708:	eor	w9, w9, #0x1
  43870c:	eor	w9, w9, w10
  438710:	and	w9, w9, #0x1
  438714:	mov	w1, w9
  438718:	sxtw	x11, w1
  43871c:	cbz	x11, 438734 <udev_rule_apply_token_to_event+0x61ec>
  438720:	ldr	x8, [sp, #3944]
  438724:	ldur	x0, [x8, #12]
  438728:	add	x1, sp, #0x5, lsl #12
  43872c:	add	x1, x1, #0xee0
  438730:	bl	40a860 <sd_device_get_sysname@plt>
  438734:	ldr	x8, [sp, #3944]
  438738:	ldr	w0, [x8, #8]
  43873c:	ldr	w1, [x8, #4]
  438740:	ldur	x9, [x8, #20]
  438744:	mov	x10, xzr
  438748:	cmp	x9, #0x0
  43874c:	ldr	x9, [sp, #3912]
  438750:	csel	x5, x9, x10, ne  // ne = any
  438754:	ldur	x6, [x8, #20]
  438758:	ldur	x10, [x8, #36]
  43875c:	str	w0, [sp, #1308]
  438760:	mov	x0, x10
  438764:	str	w1, [sp, #1304]
  438768:	str	x5, [sp, #1296]
  43876c:	str	x6, [sp, #1288]
  438770:	bl	424274 <strna>
  438774:	ldr	x8, [sp, #3944]
  438778:	ldur	x9, [x8, #44]
  43877c:	str	x0, [sp, #1280]
  438780:	cbz	x9, 438798 <udev_rule_apply_token_to_event+0x6250>
  438784:	ldr	x8, [sp, #3944]
  438788:	ldur	x9, [x8, #44]
  43878c:	ldr	w10, [x9, #8]
  438790:	str	w10, [sp, #1276]
  438794:	b	4387a0 <udev_rule_apply_token_to_event+0x6258>
  438798:	mov	w8, wzr
  43879c:	str	w8, [sp, #1276]
  4387a0:	ldr	w8, [sp, #1276]
  4387a4:	ldr	x9, [sp, #3984]
  4387a8:	ldr	x10, [x9, #1512]
  4387ac:	ldr	w11, [x10, #40]
  4387b0:	ldr	w0, [sp, #1308]
  4387b4:	ldr	w1, [sp, #1304]
  4387b8:	ldr	x2, [sp, #3928]
  4387bc:	mov	w3, #0x796                 	// #1942
  4387c0:	ldr	x4, [sp, #3920]
  4387c4:	ldr	x5, [sp, #1296]
  4387c8:	ldr	x6, [sp, #1288]
  4387cc:	mov	x10, xzr
  4387d0:	mov	x7, x10
  4387d4:	mov	x12, sp
  4387d8:	str	x10, [x12]
  4387dc:	mov	x10, sp
  4387e0:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  4387e4:	add	x12, x12, #0x95f
  4387e8:	str	x12, [x10, #8]
  4387ec:	mov	x10, sp
  4387f0:	ldr	x12, [sp, #1280]
  4387f4:	str	x12, [x10, #16]
  4387f8:	mov	x10, sp
  4387fc:	str	w8, [x10, #24]
  438800:	mov	x10, sp
  438804:	str	w11, [x10, #32]
  438808:	bl	40a870 <log_object_internal@plt>
  43880c:	ldr	x9, [sp, #3944]
  438810:	str	w0, [x9]
  438814:	ldr	w8, [x9]
  438818:	str	w8, [x9, #32]
  43881c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438820:	mov	x8, xzr
  438824:	ldr	x9, [sp, #3936]
  438828:	str	x8, [x9, #20120]
  43882c:	str	x8, [x9, #20112]
  438830:	add	x0, sp, #0x1, lsl #12
  438834:	add	x0, x0, #0xeb8
  438838:	mov	w10, wzr
  43883c:	mov	w1, w10
  438840:	mov	x2, #0x4000                	// #16384
  438844:	bl	40a5f0 <memset@plt>
  438848:	ldr	x8, [sp, #3984]
  43884c:	ldr	x9, [x8, #1488]
  438850:	ldr	x0, [x9, #16]
  438854:	bl	40a910 <strdup@plt>
  438858:	ldr	x8, [sp, #3936]
  43885c:	str	x0, [x8, #20120]
  438860:	ldr	x9, [x8, #20120]
  438864:	cbnz	x9, 43889c <udev_rule_apply_token_to_event+0x6354>
  438868:	mov	w8, #0x1                   	// #1
  43886c:	mov	w0, w8
  438870:	ldr	x1, [sp, #3928]
  438874:	mov	w2, #0x79e                 	// #1950
  438878:	ldr	x3, [sp, #3920]
  43887c:	str	w8, [sp, #1272]
  438880:	bl	40a5e0 <log_oom_internal@plt>
  438884:	ldr	x9, [sp, #3984]
  438888:	str	w0, [x9, #1540]
  43888c:	ldr	w8, [sp, #1272]
  438890:	ldr	x10, [sp, #3976]
  438894:	str	w8, [x10, #1300]
  438898:	b	438c5c <udev_rule_apply_token_to_event+0x6714>
  43889c:	ldr	x8, [sp, #3984]
  4388a0:	ldr	x0, [x8, #1512]
  4388a4:	ldr	x9, [x8, #1488]
  4388a8:	ldr	x1, [x9, #8]
  4388ac:	add	x9, sp, #0x1, lsl #12
  4388b0:	add	x9, x9, #0xeb8
  4388b4:	mov	x2, x9
  4388b8:	mov	x3, #0x4000                	// #16384
  4388bc:	mov	w10, wzr
  4388c0:	and	w4, w10, #0x1
  4388c4:	str	x9, [sp, #1264]
  4388c8:	bl	4183c0 <udev_event_apply_format>
  4388cc:	ldr	x8, [sp, #1264]
  4388d0:	mov	x0, x8
  4388d4:	bl	423ddc <isempty>
  4388d8:	tbnz	w0, #0, 4388f4 <udev_rule_apply_token_to_event+0x63ac>
  4388dc:	add	x0, sp, #0x1, lsl #12
  4388e0:	add	x0, x0, #0xeb8
  4388e4:	bl	40a910 <strdup@plt>
  4388e8:	ldr	x8, [sp, #3936]
  4388ec:	str	x0, [x8, #20112]
  4388f0:	b	43890c <udev_rule_apply_token_to_event+0x63c4>
  4388f4:	ldr	x8, [sp, #3984]
  4388f8:	ldr	x9, [x8, #1488]
  4388fc:	ldr	x0, [x9, #8]
  438900:	bl	40a910 <strdup@plt>
  438904:	ldr	x8, [sp, #3936]
  438908:	str	x0, [x8, #20112]
  43890c:	ldr	x8, [sp, #3936]
  438910:	ldr	x9, [x8, #20112]
  438914:	cbnz	x9, 43894c <udev_rule_apply_token_to_event+0x6404>
  438918:	mov	w8, #0x1                   	// #1
  43891c:	mov	w0, w8
  438920:	ldr	x1, [sp, #3928]
  438924:	mov	w2, #0x7a6                 	// #1958
  438928:	ldr	x3, [sp, #3920]
  43892c:	str	w8, [sp, #1260]
  438930:	bl	40a5e0 <log_oom_internal@plt>
  438934:	ldr	x9, [sp, #3984]
  438938:	str	w0, [x9, #1540]
  43893c:	ldr	w8, [sp, #1260]
  438940:	ldr	x10, [sp, #3976]
  438944:	str	w8, [x10, #1300]
  438948:	b	438c5c <udev_rule_apply_token_to_event+0x6714>
  43894c:	ldr	x8, [sp, #3984]
  438950:	ldr	x9, [x8, #1488]
  438954:	ldr	w10, [x9]
  438958:	lsl	w10, w10, #16
  43895c:	asr	w10, w10, #24
  438960:	cmp	w10, #0x4
  438964:	b.ne	438978 <udev_rule_apply_token_to_event+0x6430>  // b.any
  438968:	ldr	x8, [sp, #3984]
  43896c:	ldr	x9, [x8, #1512]
  438970:	ldr	x0, [x9, #56]
  438974:	bl	43c4b8 <ordered_hashmap_clear_free_free>
  438978:	ldr	x8, [sp, #3984]
  43897c:	ldr	x9, [x8, #1512]
  438980:	add	x0, x9, #0x38
  438984:	mov	x9, xzr
  438988:	mov	x1, x9
  43898c:	bl	40b440 <internal_ordered_hashmap_ensure_allocated@plt>
  438990:	ldr	x8, [sp, #3984]
  438994:	str	w0, [x8, #440]
  438998:	ldr	w10, [x8, #440]
  43899c:	cmp	w10, #0x0
  4389a0:	cset	w10, ge  // ge = tcont
  4389a4:	tbnz	w10, #0, 4389dc <udev_rule_apply_token_to_event+0x6494>
  4389a8:	mov	w8, #0x1                   	// #1
  4389ac:	mov	w0, w8
  4389b0:	ldr	x1, [sp, #3928]
  4389b4:	mov	w2, #0x7ad                 	// #1965
  4389b8:	ldr	x3, [sp, #3920]
  4389bc:	str	w8, [sp, #1256]
  4389c0:	bl	40a5e0 <log_oom_internal@plt>
  4389c4:	ldr	x9, [sp, #3984]
  4389c8:	str	w0, [x9, #1540]
  4389cc:	ldr	w8, [sp, #1256]
  4389d0:	ldr	x10, [sp, #3976]
  4389d4:	str	w8, [x10, #1300]
  4389d8:	b	438c5c <udev_rule_apply_token_to_event+0x6714>
  4389dc:	ldr	x8, [sp, #3984]
  4389e0:	ldr	x9, [x8, #1512]
  4389e4:	ldr	x0, [x9, #56]
  4389e8:	ldr	x9, [sp, #3936]
  4389ec:	ldr	x1, [x9, #20120]
  4389f0:	ldr	x2, [x9, #20112]
  4389f4:	bl	43c4ec <ordered_hashmap_put>
  4389f8:	ldr	x8, [sp, #3984]
  4389fc:	str	w0, [x8, #440]
  438a00:	ldr	w10, [x8, #440]
  438a04:	cmp	w10, #0x0
  438a08:	cset	w10, ge  // ge = tcont
  438a0c:	tbnz	w10, #0, 438a44 <udev_rule_apply_token_to_event+0x64fc>
  438a10:	mov	w8, #0x1                   	// #1
  438a14:	mov	w0, w8
  438a18:	ldr	x1, [sp, #3928]
  438a1c:	mov	w2, #0x7b1                 	// #1969
  438a20:	ldr	x3, [sp, #3920]
  438a24:	str	w8, [sp, #1252]
  438a28:	bl	40a5e0 <log_oom_internal@plt>
  438a2c:	ldr	x9, [sp, #3984]
  438a30:	str	w0, [x9, #1540]
  438a34:	ldr	w8, [sp, #1252]
  438a38:	ldr	x10, [sp, #3976]
  438a3c:	str	w8, [x10, #1300]
  438a40:	b	438c5c <udev_rule_apply_token_to_event+0x6714>
  438a44:	ldr	x8, [sp, #3984]
  438a48:	ldr	x9, [x8, #1528]
  438a4c:	ldr	x10, [sp, #3936]
  438a50:	str	x9, [x10, #3720]
  438a54:	ldr	x9, [x10, #3720]
  438a58:	cbz	x9, 438a70 <udev_rule_apply_token_to_event+0x6528>
  438a5c:	ldr	x8, [sp, #3936]
  438a60:	ldr	x9, [x8, #3720]
  438a64:	ldr	x9, [x9, #32]
  438a68:	str	x9, [sp, #1240]
  438a6c:	b	438a78 <udev_rule_apply_token_to_event+0x6530>
  438a70:	mov	x8, xzr
  438a74:	str	x8, [sp, #1240]
  438a78:	ldr	x8, [sp, #1240]
  438a7c:	ldr	x9, [sp, #3936]
  438a80:	str	x8, [x9, #3712]
  438a84:	ldr	x8, [x9, #3712]
  438a88:	cbz	x8, 438aa0 <udev_rule_apply_token_to_event+0x6558>
  438a8c:	ldr	x8, [sp, #3936]
  438a90:	ldr	x9, [x8, #3712]
  438a94:	ldr	x9, [x9, #8]
  438a98:	str	x9, [sp, #1232]
  438a9c:	b	438aa8 <udev_rule_apply_token_to_event+0x6560>
  438aa0:	mov	x8, xzr
  438aa4:	str	x8, [sp, #1232]
  438aa8:	ldr	x8, [sp, #1232]
  438aac:	ldr	x9, [sp, #3936]
  438ab0:	str	x8, [x9, #3704]
  438ab4:	ldr	x8, [x9, #3712]
  438ab8:	cbz	x8, 438ad0 <udev_rule_apply_token_to_event+0x6588>
  438abc:	ldr	x8, [sp, #3936]
  438ac0:	ldr	x9, [x8, #3712]
  438ac4:	ldr	x9, [x9]
  438ac8:	str	x9, [sp, #1224]
  438acc:	b	438ad8 <udev_rule_apply_token_to_event+0x6590>
  438ad0:	mov	x8, xzr
  438ad4:	str	x8, [sp, #1224]
  438ad8:	ldr	x8, [sp, #1224]
  438adc:	ldr	x9, [sp, #3936]
  438ae0:	str	x8, [x9, #3696]
  438ae4:	mov	x8, xzr
  438ae8:	str	x8, [x9, #3680]
  438aec:	ldr	x8, [sp, #3984]
  438af0:	ldr	x10, [x8, #1520]
  438af4:	str	x10, [x9, #3672]
  438af8:	mov	w11, #0x7                   	// #7
  438afc:	str	w11, [sp, #7804]
  438b00:	str	wzr, [sp, #7800]
  438b04:	ldr	x10, [x9, #3672]
  438b08:	cbz	x10, 438b50 <udev_rule_apply_token_to_event+0x6608>
  438b0c:	mov	w0, #0x1                   	// #1
  438b10:	bl	40a3f0 <log_get_max_level_realm@plt>
  438b14:	ldr	w8, [sp, #7804]
  438b18:	cmp	w0, w8
  438b1c:	cset	w8, ge  // ge = tcont
  438b20:	mov	w9, #0x1                   	// #1
  438b24:	eor	w8, w8, #0x1
  438b28:	eor	w8, w8, w9
  438b2c:	and	w8, w8, #0x1
  438b30:	mov	w1, w8
  438b34:	sxtw	x10, w1
  438b38:	cbz	x10, 438b50 <udev_rule_apply_token_to_event+0x6608>
  438b3c:	ldr	x8, [sp, #3936]
  438b40:	ldr	x0, [x8, #3672]
  438b44:	add	x1, sp, #0x1, lsl #12
  438b48:	add	x1, x1, #0xe88
  438b4c:	bl	40a860 <sd_device_get_sysname@plt>
  438b50:	ldr	w0, [sp, #7804]
  438b54:	ldr	w1, [sp, #7800]
  438b58:	ldr	x8, [sp, #3936]
  438b5c:	ldr	x9, [x8, #3680]
  438b60:	mov	x10, xzr
  438b64:	cmp	x9, #0x0
  438b68:	ldr	x9, [sp, #3912]
  438b6c:	csel	x5, x9, x10, ne  // ne = any
  438b70:	ldr	x6, [x8, #3680]
  438b74:	ldr	x10, [x8, #3696]
  438b78:	str	w0, [sp, #1220]
  438b7c:	mov	x0, x10
  438b80:	str	w1, [sp, #1216]
  438b84:	str	x5, [sp, #1208]
  438b88:	str	x6, [sp, #1200]
  438b8c:	bl	424274 <strna>
  438b90:	ldr	x8, [sp, #3936]
  438b94:	ldr	x9, [x8, #3704]
  438b98:	str	x0, [sp, #1192]
  438b9c:	cbz	x9, 438bb4 <udev_rule_apply_token_to_event+0x666c>
  438ba0:	ldr	x8, [sp, #3936]
  438ba4:	ldr	x9, [x8, #3704]
  438ba8:	ldr	w10, [x9, #8]
  438bac:	str	w10, [sp, #1188]
  438bb0:	b	438bbc <udev_rule_apply_token_to_event+0x6674>
  438bb4:	mov	w8, wzr
  438bb8:	str	w8, [sp, #1188]
  438bbc:	ldr	w8, [sp, #1188]
  438bc0:	ldr	x9, [sp, #3936]
  438bc4:	ldr	x10, [x9, #20120]
  438bc8:	ldr	x11, [x9, #20112]
  438bcc:	ldr	w0, [sp, #1220]
  438bd0:	ldr	w1, [sp, #1216]
  438bd4:	ldr	x2, [sp, #3928]
  438bd8:	mov	w3, #0x7b2                 	// #1970
  438bdc:	ldr	x4, [sp, #3920]
  438be0:	ldr	x5, [sp, #1208]
  438be4:	ldr	x6, [sp, #1200]
  438be8:	mov	x12, xzr
  438bec:	mov	x7, x12
  438bf0:	mov	x13, sp
  438bf4:	str	x12, [x13]
  438bf8:	mov	x13, sp
  438bfc:	adrp	x14, 468000 <on_inotify.__assert_in_set+0x4540>
  438c00:	add	x14, x14, #0x98c
  438c04:	str	x14, [x13, #8]
  438c08:	mov	x13, sp
  438c0c:	ldr	x14, [sp, #1192]
  438c10:	str	x14, [x13, #16]
  438c14:	mov	x13, sp
  438c18:	str	w8, [x13, #24]
  438c1c:	mov	x13, sp
  438c20:	str	x10, [x13, #32]
  438c24:	mov	x10, sp
  438c28:	str	x11, [x10, #40]
  438c2c:	str	x12, [sp, #1176]
  438c30:	bl	40a870 <log_object_internal@plt>
  438c34:	str	w0, [sp, #7796]
  438c38:	ldr	w8, [sp, #7796]
  438c3c:	str	w8, [sp, #7828]
  438c40:	ldr	x9, [sp, #1176]
  438c44:	ldr	x10, [sp, #3936]
  438c48:	str	x9, [x10, #20112]
  438c4c:	str	x9, [x10, #20120]
  438c50:	mov	w8, #0x8                   	// #8
  438c54:	ldr	x11, [sp, #3976]
  438c58:	str	w8, [x11, #1300]
  438c5c:	add	x0, sp, #0x5, lsl #12
  438c60:	add	x0, x0, #0xeb8
  438c64:	bl	4230c8 <freep>
  438c68:	add	x0, sp, #0x5, lsl #12
  438c6c:	add	x0, x0, #0xec0
  438c70:	bl	4230c8 <freep>
  438c74:	ldr	x8, [sp, #3976]
  438c78:	ldr	w9, [x8, #1300]
  438c7c:	cmp	w9, #0x1
  438c80:	b.eq	43b748 <udev_rule_apply_token_to_event+0x9200>  // b.none
  438c84:	b	438c88 <udev_rule_apply_token_to_event+0x6740>
  438c88:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438c8c:	ldr	x8, [sp, #3984]
  438c90:	ldr	x9, [x8, #1488]
  438c94:	ldr	x9, [x9, #16]
  438c98:	ldr	x10, [sp, #3936]
  438c9c:	str	x9, [x10, #3648]
  438ca0:	add	x9, sp, #0x1, lsl #12
  438ca4:	add	x9, x9, #0xc68
  438ca8:	str	x9, [x10, #3128]
  438cac:	mov	x9, #0x200                 	// #512
  438cb0:	str	x9, [x10, #3120]
  438cb4:	ldr	x9, [x8, #1488]
  438cb8:	ldr	x0, [x9, #8]
  438cbc:	bl	423ddc <isempty>
  438cc0:	tbnz	w0, #0, 438cc8 <udev_rule_apply_token_to_event+0x6780>
  438cc4:	b	438f20 <udev_rule_apply_token_to_event+0x69d8>
  438cc8:	ldr	x8, [sp, #3984]
  438ccc:	ldr	x9, [x8, #1488]
  438cd0:	ldr	w10, [x9]
  438cd4:	lsl	w10, w10, #16
  438cd8:	asr	w10, w10, #24
  438cdc:	cmp	w10, #0x2
  438ce0:	b.ne	438ce8 <udev_rule_apply_token_to_event+0x67a0>  // b.any
  438ce4:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438ce8:	ldr	x8, [sp, #3984]
  438cec:	ldr	x0, [x8, #1520]
  438cf0:	ldr	x9, [sp, #3936]
  438cf4:	ldr	x1, [x9, #3648]
  438cf8:	mov	x10, xzr
  438cfc:	mov	x2, x10
  438d00:	bl	40aff0 <device_add_property@plt>
  438d04:	ldr	x8, [sp, #3984]
  438d08:	str	w0, [x8, #440]
  438d0c:	ldr	w11, [x8, #440]
  438d10:	cmp	w11, #0x0
  438d14:	cset	w11, ge  // ge = tcont
  438d18:	tbnz	w11, #0, 438f1c <udev_rule_apply_token_to_event+0x69d4>
  438d1c:	ldr	x8, [sp, #3984]
  438d20:	ldr	x9, [x8, #1528]
  438d24:	ldr	x10, [sp, #3936]
  438d28:	str	x9, [x10, #3112]
  438d2c:	ldr	x9, [x10, #3112]
  438d30:	cbz	x9, 438d48 <udev_rule_apply_token_to_event+0x6800>
  438d34:	ldr	x8, [sp, #3936]
  438d38:	ldr	x9, [x8, #3112]
  438d3c:	ldr	x9, [x9, #32]
  438d40:	str	x9, [sp, #1168]
  438d44:	b	438d50 <udev_rule_apply_token_to_event+0x6808>
  438d48:	mov	x8, xzr
  438d4c:	str	x8, [sp, #1168]
  438d50:	ldr	x8, [sp, #1168]
  438d54:	ldr	x9, [sp, #3936]
  438d58:	str	x8, [x9, #3104]
  438d5c:	ldr	x8, [x9, #3104]
  438d60:	cbz	x8, 438d78 <udev_rule_apply_token_to_event+0x6830>
  438d64:	ldr	x8, [sp, #3936]
  438d68:	ldr	x9, [x8, #3104]
  438d6c:	ldr	x9, [x9, #8]
  438d70:	str	x9, [sp, #1160]
  438d74:	b	438d80 <udev_rule_apply_token_to_event+0x6838>
  438d78:	mov	x8, xzr
  438d7c:	str	x8, [sp, #1160]
  438d80:	ldr	x8, [sp, #1160]
  438d84:	ldr	x9, [sp, #3936]
  438d88:	str	x8, [x9, #3096]
  438d8c:	ldr	x8, [x9, #3104]
  438d90:	cbz	x8, 438da8 <udev_rule_apply_token_to_event+0x6860>
  438d94:	ldr	x8, [sp, #3936]
  438d98:	ldr	x9, [x8, #3104]
  438d9c:	ldr	x9, [x9]
  438da0:	str	x9, [sp, #1152]
  438da4:	b	438db0 <udev_rule_apply_token_to_event+0x6868>
  438da8:	mov	x8, xzr
  438dac:	str	x8, [sp, #1152]
  438db0:	ldr	x8, [sp, #1152]
  438db4:	ldr	x9, [sp, #3936]
  438db8:	str	x8, [x9, #3088]
  438dbc:	mov	x8, xzr
  438dc0:	str	x8, [x9, #3072]
  438dc4:	ldr	x8, [sp, #3984]
  438dc8:	ldr	x10, [x8, #1520]
  438dcc:	str	x10, [x9, #3064]
  438dd0:	mov	w11, #0x3                   	// #3
  438dd4:	str	w11, [sp, #7196]
  438dd8:	ldr	w11, [x8, #440]
  438ddc:	str	w11, [sp, #7192]
  438de0:	ldr	x10, [x9, #3064]
  438de4:	cbz	x10, 438e2c <udev_rule_apply_token_to_event+0x68e4>
  438de8:	mov	w0, #0x1                   	// #1
  438dec:	bl	40a3f0 <log_get_max_level_realm@plt>
  438df0:	ldr	w8, [sp, #7196]
  438df4:	cmp	w0, w8
  438df8:	cset	w8, ge  // ge = tcont
  438dfc:	mov	w9, #0x1                   	// #1
  438e00:	eor	w8, w8, #0x1
  438e04:	eor	w8, w8, w9
  438e08:	and	w8, w8, #0x1
  438e0c:	mov	w1, w8
  438e10:	sxtw	x10, w1
  438e14:	cbz	x10, 438e2c <udev_rule_apply_token_to_event+0x68e4>
  438e18:	ldr	x8, [sp, #3936]
  438e1c:	ldr	x0, [x8, #3064]
  438e20:	add	x1, sp, #0x1, lsl #12
  438e24:	add	x1, x1, #0xc28
  438e28:	bl	40a860 <sd_device_get_sysname@plt>
  438e2c:	ldr	w0, [sp, #7196]
  438e30:	ldr	w1, [sp, #7192]
  438e34:	ldr	x8, [sp, #3936]
  438e38:	ldr	x9, [x8, #3072]
  438e3c:	mov	x10, xzr
  438e40:	cmp	x9, #0x0
  438e44:	ldr	x9, [sp, #3912]
  438e48:	csel	x5, x9, x10, ne  // ne = any
  438e4c:	ldr	x6, [x8, #3072]
  438e50:	ldr	x10, [x8, #3088]
  438e54:	str	w0, [sp, #1148]
  438e58:	mov	x0, x10
  438e5c:	str	w1, [sp, #1144]
  438e60:	str	x5, [sp, #1136]
  438e64:	str	x6, [sp, #1128]
  438e68:	bl	424274 <strna>
  438e6c:	ldr	x8, [sp, #3936]
  438e70:	ldr	x9, [x8, #3096]
  438e74:	str	x0, [sp, #1120]
  438e78:	cbz	x9, 438e90 <udev_rule_apply_token_to_event+0x6948>
  438e7c:	ldr	x8, [sp, #3936]
  438e80:	ldr	x9, [x8, #3096]
  438e84:	ldr	w10, [x9, #8]
  438e88:	str	w10, [sp, #1116]
  438e8c:	b	438e98 <udev_rule_apply_token_to_event+0x6950>
  438e90:	mov	w8, wzr
  438e94:	str	w8, [sp, #1116]
  438e98:	ldr	w8, [sp, #1116]
  438e9c:	ldr	x9, [sp, #3936]
  438ea0:	ldr	x10, [x9, #3648]
  438ea4:	ldr	w0, [sp, #1148]
  438ea8:	ldr	w1, [sp, #1144]
  438eac:	ldr	x2, [sp, #3928]
  438eb0:	mov	w3, #0x7c0                 	// #1984
  438eb4:	ldr	x4, [sp, #3920]
  438eb8:	ldr	x5, [sp, #1136]
  438ebc:	ldr	x6, [sp, #1128]
  438ec0:	mov	x11, xzr
  438ec4:	mov	x7, x11
  438ec8:	mov	x12, sp
  438ecc:	str	x11, [x12]
  438ed0:	mov	x11, sp
  438ed4:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  438ed8:	add	x12, x12, #0x9a4
  438edc:	str	x12, [x11, #8]
  438ee0:	mov	x11, sp
  438ee4:	ldr	x12, [sp, #1120]
  438ee8:	str	x12, [x11, #16]
  438eec:	mov	x11, sp
  438ef0:	str	w8, [x11, #24]
  438ef4:	mov	x11, sp
  438ef8:	str	x10, [x11, #32]
  438efc:	bl	40a870 <log_object_internal@plt>
  438f00:	str	w0, [sp, #7188]
  438f04:	ldr	w8, [sp, #7188]
  438f08:	str	w8, [sp, #7220]
  438f0c:	ldr	w8, [sp, #7220]
  438f10:	ldr	x9, [sp, #3984]
  438f14:	str	w8, [x9, #1540]
  438f18:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  438f1c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  438f20:	ldr	x8, [sp, #3984]
  438f24:	ldr	x9, [x8, #1488]
  438f28:	ldr	w10, [x9]
  438f2c:	lsl	w10, w10, #16
  438f30:	asr	w10, w10, #24
  438f34:	cmp	w10, #0x2
  438f38:	b.ne	438f98 <udev_rule_apply_token_to_event+0x6a50>  // b.any
  438f3c:	ldr	x8, [sp, #3984]
  438f40:	ldr	x0, [x8, #1520]
  438f44:	ldr	x9, [sp, #3936]
  438f48:	ldr	x1, [x9, #3648]
  438f4c:	add	x2, sp, #0xf, lsl #12
  438f50:	add	x2, x2, #0x440
  438f54:	bl	40aa40 <sd_device_get_property_value@plt>
  438f58:	cmp	w0, #0x0
  438f5c:	cset	w10, lt  // lt = tstop
  438f60:	tbnz	w10, #0, 438f98 <udev_rule_apply_token_to_event+0x6a50>
  438f64:	ldr	x8, [sp, #3936]
  438f68:	ldr	x1, [x8, #3120]
  438f6c:	ldr	x9, [sp, #3984]
  438f70:	ldr	x2, [x9, #456]
  438f74:	add	x0, sp, #0x1, lsl #12
  438f78:	add	x0, x0, #0xc60
  438f7c:	adrp	x3, 466000 <on_inotify.__assert_in_set+0x2540>
  438f80:	add	x3, x3, #0x61e
  438f84:	mov	x10, xzr
  438f88:	mov	x4, x10
  438f8c:	bl	40aef0 <strpcpyl@plt>
  438f90:	ldr	x8, [sp, #3936]
  438f94:	str	x0, [x8, #3120]
  438f98:	ldr	x8, [sp, #3984]
  438f9c:	ldr	x0, [x8, #1512]
  438fa0:	ldr	x9, [x8, #1488]
  438fa4:	ldr	x1, [x9, #8]
  438fa8:	ldr	x9, [sp, #3936]
  438fac:	ldr	x2, [x9, #3128]
  438fb0:	ldr	x3, [x9, #3120]
  438fb4:	mov	w10, wzr
  438fb8:	and	w4, w10, #0x1
  438fbc:	bl	4183c0 <udev_event_apply_format>
  438fc0:	ldr	x8, [sp, #3984]
  438fc4:	ldr	x9, [x8, #1520]
  438fc8:	ldr	x11, [sp, #3936]
  438fcc:	ldr	x1, [x11, #3648]
  438fd0:	mov	x0, x9
  438fd4:	add	x2, sp, #0x1, lsl #12
  438fd8:	add	x2, x2, #0xc68
  438fdc:	bl	40aff0 <device_add_property@plt>
  438fe0:	ldr	x8, [sp, #3984]
  438fe4:	str	w0, [x8, #440]
  438fe8:	ldr	w10, [x8, #440]
  438fec:	cmp	w10, #0x0
  438ff0:	cset	w10, ge  // ge = tcont
  438ff4:	tbnz	w10, #0, 439204 <udev_rule_apply_token_to_event+0x6cbc>
  438ff8:	ldr	x8, [sp, #3984]
  438ffc:	ldr	x9, [x8, #1528]
  439000:	ldr	x10, [sp, #3936]
  439004:	str	x9, [x10, #3040]
  439008:	ldr	x9, [x10, #3040]
  43900c:	cbz	x9, 439024 <udev_rule_apply_token_to_event+0x6adc>
  439010:	ldr	x8, [sp, #3936]
  439014:	ldr	x9, [x8, #3040]
  439018:	ldr	x9, [x9, #32]
  43901c:	str	x9, [sp, #1104]
  439020:	b	43902c <udev_rule_apply_token_to_event+0x6ae4>
  439024:	mov	x8, xzr
  439028:	str	x8, [sp, #1104]
  43902c:	ldr	x8, [sp, #1104]
  439030:	ldr	x9, [sp, #3936]
  439034:	str	x8, [x9, #3032]
  439038:	ldr	x8, [x9, #3032]
  43903c:	cbz	x8, 439054 <udev_rule_apply_token_to_event+0x6b0c>
  439040:	ldr	x8, [sp, #3936]
  439044:	ldr	x9, [x8, #3032]
  439048:	ldr	x9, [x9, #8]
  43904c:	str	x9, [sp, #1096]
  439050:	b	43905c <udev_rule_apply_token_to_event+0x6b14>
  439054:	mov	x8, xzr
  439058:	str	x8, [sp, #1096]
  43905c:	ldr	x8, [sp, #1096]
  439060:	ldr	x9, [sp, #3936]
  439064:	str	x8, [x9, #3024]
  439068:	ldr	x8, [x9, #3032]
  43906c:	cbz	x8, 439084 <udev_rule_apply_token_to_event+0x6b3c>
  439070:	ldr	x8, [sp, #3936]
  439074:	ldr	x9, [x8, #3032]
  439078:	ldr	x9, [x9]
  43907c:	str	x9, [sp, #1088]
  439080:	b	43908c <udev_rule_apply_token_to_event+0x6b44>
  439084:	mov	x8, xzr
  439088:	str	x8, [sp, #1088]
  43908c:	ldr	x8, [sp, #1088]
  439090:	ldr	x9, [sp, #3936]
  439094:	str	x8, [x9, #3016]
  439098:	mov	x8, xzr
  43909c:	str	x8, [x9, #3000]
  4390a0:	ldr	x8, [sp, #3984]
  4390a4:	ldr	x10, [x8, #1520]
  4390a8:	str	x10, [x9, #2992]
  4390ac:	mov	w11, #0x3                   	// #3
  4390b0:	str	w11, [sp, #7124]
  4390b4:	ldr	w11, [x8, #440]
  4390b8:	str	w11, [sp, #7120]
  4390bc:	ldr	x10, [x9, #2992]
  4390c0:	cbz	x10, 439108 <udev_rule_apply_token_to_event+0x6bc0>
  4390c4:	mov	w0, #0x1                   	// #1
  4390c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4390cc:	ldr	w8, [sp, #7124]
  4390d0:	cmp	w0, w8
  4390d4:	cset	w8, ge  // ge = tcont
  4390d8:	mov	w9, #0x1                   	// #1
  4390dc:	eor	w8, w8, #0x1
  4390e0:	eor	w8, w8, w9
  4390e4:	and	w8, w8, #0x1
  4390e8:	mov	w1, w8
  4390ec:	sxtw	x10, w1
  4390f0:	cbz	x10, 439108 <udev_rule_apply_token_to_event+0x6bc0>
  4390f4:	ldr	x8, [sp, #3936]
  4390f8:	ldr	x0, [x8, #2992]
  4390fc:	add	x1, sp, #0x1, lsl #12
  439100:	add	x1, x1, #0xbe0
  439104:	bl	40a860 <sd_device_get_sysname@plt>
  439108:	ldr	w0, [sp, #7124]
  43910c:	ldr	w1, [sp, #7120]
  439110:	ldr	x8, [sp, #3936]
  439114:	ldr	x9, [x8, #3000]
  439118:	mov	x10, xzr
  43911c:	cmp	x9, #0x0
  439120:	ldr	x9, [sp, #3912]
  439124:	csel	x5, x9, x10, ne  // ne = any
  439128:	ldr	x6, [x8, #3000]
  43912c:	ldr	x10, [x8, #3016]
  439130:	str	w0, [sp, #1084]
  439134:	mov	x0, x10
  439138:	str	w1, [sp, #1080]
  43913c:	str	x5, [sp, #1072]
  439140:	str	x6, [sp, #1064]
  439144:	bl	424274 <strna>
  439148:	ldr	x8, [sp, #3936]
  43914c:	ldr	x9, [x8, #3024]
  439150:	str	x0, [sp, #1056]
  439154:	cbz	x9, 43916c <udev_rule_apply_token_to_event+0x6c24>
  439158:	ldr	x8, [sp, #3936]
  43915c:	ldr	x9, [x8, #3024]
  439160:	ldr	w10, [x9, #8]
  439164:	str	w10, [sp, #1052]
  439168:	b	439174 <udev_rule_apply_token_to_event+0x6c2c>
  43916c:	mov	w8, wzr
  439170:	str	w8, [sp, #1052]
  439174:	ldr	w8, [sp, #1052]
  439178:	ldr	x9, [sp, #3936]
  43917c:	ldr	x10, [x9, #3648]
  439180:	ldr	w0, [sp, #1084]
  439184:	ldr	w1, [sp, #1080]
  439188:	ldr	x2, [sp, #3928]
  43918c:	mov	w3, #0x7cc                 	// #1996
  439190:	ldr	x4, [sp, #3920]
  439194:	ldr	x5, [sp, #1072]
  439198:	ldr	x6, [sp, #1064]
  43919c:	mov	x11, xzr
  4391a0:	mov	x7, x11
  4391a4:	mov	x12, sp
  4391a8:	str	x11, [x12]
  4391ac:	mov	x11, sp
  4391b0:	ldr	x12, [sp, #3888]
  4391b4:	str	x12, [x11, #8]
  4391b8:	mov	x11, sp
  4391bc:	ldr	x13, [sp, #1056]
  4391c0:	str	x13, [x11, #16]
  4391c4:	mov	x11, sp
  4391c8:	str	w8, [x11, #24]
  4391cc:	mov	x11, sp
  4391d0:	str	x10, [x11, #32]
  4391d4:	mov	x10, sp
  4391d8:	add	x11, sp, #0x1, lsl #12
  4391dc:	add	x11, x11, #0xc68
  4391e0:	str	x11, [x10, #40]
  4391e4:	bl	40a870 <log_object_internal@plt>
  4391e8:	str	w0, [sp, #7116]
  4391ec:	ldr	w8, [sp, #7116]
  4391f0:	str	w8, [sp, #7148]
  4391f4:	ldr	w8, [sp, #7148]
  4391f8:	ldr	x9, [sp, #3984]
  4391fc:	str	w8, [x9, #1540]
  439200:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  439204:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439208:	ldr	x8, [sp, #3984]
  43920c:	ldr	x0, [x8, #1512]
  439210:	ldr	x9, [x8, #1488]
  439214:	ldr	x1, [x9, #8]
  439218:	add	x2, sp, #0xf, lsl #12
  43921c:	add	x2, x2, #0x448
  439220:	mov	x3, #0x400                 	// #1024
  439224:	mov	w10, wzr
  439228:	and	w4, w10, #0x1
  43922c:	bl	4183c0 <udev_event_apply_format>
  439230:	ldr	x8, [sp, #3984]
  439234:	ldr	x9, [x8, #1488]
  439238:	ldr	w10, [x9]
  43923c:	lsl	w10, w10, #16
  439240:	asr	w10, w10, #24
  439244:	cmp	w10, #0x4
  439248:	b.ne	439258 <udev_rule_apply_token_to_event+0x6d10>  // b.any
  43924c:	ldr	x8, [sp, #3984]
  439250:	ldr	x0, [x8, #1520]
  439254:	bl	40b450 <device_cleanup_tags@plt>
  439258:	add	x8, sp, #0xf, lsl #12
  43925c:	add	x8, x8, #0x448
  439260:	mov	x0, x8
  439264:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  439268:	add	x1, x1, #0x9cd
  43926c:	str	x8, [sp, #1040]
  439270:	bl	40b080 <strspn@plt>
  439274:	ldr	x8, [sp, #1040]
  439278:	ldrb	w9, [x8, x0]
  43927c:	cbz	w9, 439470 <udev_rule_apply_token_to_event+0x6f28>
  439280:	ldr	x8, [sp, #3984]
  439284:	ldr	x9, [x8, #1528]
  439288:	ldr	x10, [sp, #3936]
  43928c:	str	x9, [x10, #2968]
  439290:	ldr	x9, [x10, #2968]
  439294:	cbz	x9, 4392ac <udev_rule_apply_token_to_event+0x6d64>
  439298:	ldr	x8, [sp, #3936]
  43929c:	ldr	x9, [x8, #2968]
  4392a0:	ldr	x9, [x9, #32]
  4392a4:	str	x9, [sp, #1032]
  4392a8:	b	4392b4 <udev_rule_apply_token_to_event+0x6d6c>
  4392ac:	mov	x8, xzr
  4392b0:	str	x8, [sp, #1032]
  4392b4:	ldr	x8, [sp, #1032]
  4392b8:	ldr	x9, [sp, #3936]
  4392bc:	str	x8, [x9, #2960]
  4392c0:	ldr	x8, [x9, #2960]
  4392c4:	cbz	x8, 4392dc <udev_rule_apply_token_to_event+0x6d94>
  4392c8:	ldr	x8, [sp, #3936]
  4392cc:	ldr	x9, [x8, #2960]
  4392d0:	ldr	x9, [x9, #8]
  4392d4:	str	x9, [sp, #1024]
  4392d8:	b	4392e4 <udev_rule_apply_token_to_event+0x6d9c>
  4392dc:	mov	x8, xzr
  4392e0:	str	x8, [sp, #1024]
  4392e4:	ldr	x8, [sp, #1024]
  4392e8:	ldr	x9, [sp, #3936]
  4392ec:	str	x8, [x9, #2952]
  4392f0:	ldr	x8, [x9, #2960]
  4392f4:	cbz	x8, 43930c <udev_rule_apply_token_to_event+0x6dc4>
  4392f8:	ldr	x8, [sp, #3936]
  4392fc:	ldr	x9, [x8, #2960]
  439300:	ldr	x9, [x9]
  439304:	str	x9, [sp, #1016]
  439308:	b	439314 <udev_rule_apply_token_to_event+0x6dcc>
  43930c:	mov	x8, xzr
  439310:	str	x8, [sp, #1016]
  439314:	ldr	x8, [sp, #1016]
  439318:	ldr	x9, [sp, #3936]
  43931c:	str	x8, [x9, #2944]
  439320:	mov	x8, xzr
  439324:	str	x8, [x9, #2928]
  439328:	ldr	x8, [sp, #3984]
  43932c:	ldr	x10, [x8, #1520]
  439330:	str	x10, [x9, #2920]
  439334:	mov	w11, #0x3                   	// #3
  439338:	str	w11, [sp, #7052]
  43933c:	str	wzr, [sp, #7048]
  439340:	ldr	x10, [x9, #2920]
  439344:	cbz	x10, 43938c <udev_rule_apply_token_to_event+0x6e44>
  439348:	mov	w0, #0x1                   	// #1
  43934c:	bl	40a3f0 <log_get_max_level_realm@plt>
  439350:	ldr	w8, [sp, #7052]
  439354:	cmp	w0, w8
  439358:	cset	w8, ge  // ge = tcont
  43935c:	mov	w9, #0x1                   	// #1
  439360:	eor	w8, w8, #0x1
  439364:	eor	w8, w8, w9
  439368:	and	w8, w8, #0x1
  43936c:	mov	w1, w8
  439370:	sxtw	x10, w1
  439374:	cbz	x10, 43938c <udev_rule_apply_token_to_event+0x6e44>
  439378:	ldr	x8, [sp, #3936]
  43937c:	ldr	x0, [x8, #2920]
  439380:	add	x1, sp, #0x1, lsl #12
  439384:	add	x1, x1, #0xb98
  439388:	bl	40a860 <sd_device_get_sysname@plt>
  43938c:	ldr	w0, [sp, #7052]
  439390:	ldr	w1, [sp, #7048]
  439394:	ldr	x8, [sp, #3936]
  439398:	ldr	x9, [x8, #2928]
  43939c:	mov	x10, xzr
  4393a0:	cmp	x9, #0x0
  4393a4:	ldr	x9, [sp, #3912]
  4393a8:	csel	x5, x9, x10, ne  // ne = any
  4393ac:	ldr	x6, [x8, #2928]
  4393b0:	ldr	x10, [x8, #2944]
  4393b4:	str	w0, [sp, #1012]
  4393b8:	mov	x0, x10
  4393bc:	str	w1, [sp, #1008]
  4393c0:	str	x5, [sp, #1000]
  4393c4:	str	x6, [sp, #992]
  4393c8:	bl	424274 <strna>
  4393cc:	ldr	x8, [sp, #3936]
  4393d0:	ldr	x9, [x8, #2952]
  4393d4:	str	x0, [sp, #984]
  4393d8:	cbz	x9, 4393f0 <udev_rule_apply_token_to_event+0x6ea8>
  4393dc:	ldr	x8, [sp, #3936]
  4393e0:	ldr	x9, [x8, #2952]
  4393e4:	ldr	w10, [x9, #8]
  4393e8:	str	w10, [sp, #980]
  4393ec:	b	4393f8 <udev_rule_apply_token_to_event+0x6eb0>
  4393f0:	mov	w8, wzr
  4393f4:	str	w8, [sp, #980]
  4393f8:	ldr	w8, [sp, #980]
  4393fc:	ldr	w0, [sp, #1012]
  439400:	ldr	w1, [sp, #1008]
  439404:	ldr	x2, [sp, #3928]
  439408:	mov	w3, #0x7d5                 	// #2005
  43940c:	ldr	x4, [sp, #3920]
  439410:	ldr	x5, [sp, #1000]
  439414:	ldr	x6, [sp, #992]
  439418:	mov	x9, xzr
  43941c:	mov	x7, x9
  439420:	mov	x10, sp
  439424:	str	x9, [x10]
  439428:	mov	x9, sp
  43942c:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  439430:	add	x10, x10, #0xa0e
  439434:	str	x10, [x9, #8]
  439438:	mov	x9, sp
  43943c:	ldr	x10, [sp, #984]
  439440:	str	x10, [x9, #16]
  439444:	mov	x9, sp
  439448:	str	w8, [x9, #24]
  43944c:	mov	x9, sp
  439450:	add	x11, sp, #0xf, lsl #12
  439454:	add	x11, x11, #0x448
  439458:	str	x11, [x9, #32]
  43945c:	bl	40a870 <log_object_internal@plt>
  439460:	str	w0, [sp, #7044]
  439464:	ldr	w8, [sp, #7044]
  439468:	str	w8, [sp, #7076]
  43946c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439470:	ldr	x8, [sp, #3984]
  439474:	ldr	x9, [x8, #1488]
  439478:	ldr	w10, [x9]
  43947c:	lsl	w10, w10, #16
  439480:	asr	w10, w10, #24
  439484:	cmp	w10, #0x3
  439488:	b.ne	4394a4 <udev_rule_apply_token_to_event+0x6f5c>  // b.any
  43948c:	ldr	x8, [sp, #3984]
  439490:	ldr	x0, [x8, #1520]
  439494:	add	x1, sp, #0xf, lsl #12
  439498:	add	x1, x1, #0x448
  43949c:	bl	40b460 <device_remove_tag@plt>
  4394a0:	b	4396d0 <udev_rule_apply_token_to_event+0x7188>
  4394a4:	ldr	x8, [sp, #3984]
  4394a8:	ldr	x0, [x8, #1520]
  4394ac:	add	x1, sp, #0xf, lsl #12
  4394b0:	add	x1, x1, #0x448
  4394b4:	bl	40b470 <device_add_tag@plt>
  4394b8:	ldr	x8, [sp, #3984]
  4394bc:	str	w0, [x8, #440]
  4394c0:	ldr	w9, [x8, #440]
  4394c4:	cmp	w9, #0x0
  4394c8:	cset	w9, ge  // ge = tcont
  4394cc:	tbnz	w9, #0, 4396d0 <udev_rule_apply_token_to_event+0x7188>
  4394d0:	ldr	x8, [sp, #3984]
  4394d4:	ldr	x9, [x8, #1528]
  4394d8:	ldr	x10, [sp, #3936]
  4394dc:	str	x9, [x10, #2896]
  4394e0:	ldr	x9, [x10, #2896]
  4394e4:	cbz	x9, 4394fc <udev_rule_apply_token_to_event+0x6fb4>
  4394e8:	ldr	x8, [sp, #3936]
  4394ec:	ldr	x9, [x8, #2896]
  4394f0:	ldr	x9, [x9, #32]
  4394f4:	str	x9, [sp, #968]
  4394f8:	b	439504 <udev_rule_apply_token_to_event+0x6fbc>
  4394fc:	mov	x8, xzr
  439500:	str	x8, [sp, #968]
  439504:	ldr	x8, [sp, #968]
  439508:	ldr	x9, [sp, #3936]
  43950c:	str	x8, [x9, #2888]
  439510:	ldr	x8, [x9, #2888]
  439514:	cbz	x8, 43952c <udev_rule_apply_token_to_event+0x6fe4>
  439518:	ldr	x8, [sp, #3936]
  43951c:	ldr	x9, [x8, #2888]
  439520:	ldr	x9, [x9, #8]
  439524:	str	x9, [sp, #960]
  439528:	b	439534 <udev_rule_apply_token_to_event+0x6fec>
  43952c:	mov	x8, xzr
  439530:	str	x8, [sp, #960]
  439534:	ldr	x8, [sp, #960]
  439538:	ldr	x9, [sp, #3936]
  43953c:	str	x8, [x9, #2880]
  439540:	ldr	x8, [x9, #2888]
  439544:	cbz	x8, 43955c <udev_rule_apply_token_to_event+0x7014>
  439548:	ldr	x8, [sp, #3936]
  43954c:	ldr	x9, [x8, #2888]
  439550:	ldr	x9, [x9]
  439554:	str	x9, [sp, #952]
  439558:	b	439564 <udev_rule_apply_token_to_event+0x701c>
  43955c:	mov	x8, xzr
  439560:	str	x8, [sp, #952]
  439564:	ldr	x8, [sp, #952]
  439568:	ldr	x9, [sp, #3936]
  43956c:	str	x8, [x9, #2872]
  439570:	mov	x8, xzr
  439574:	str	x8, [x9, #2856]
  439578:	ldr	x8, [sp, #3984]
  43957c:	ldr	x10, [x8, #1520]
  439580:	str	x10, [x9, #2848]
  439584:	mov	w11, #0x3                   	// #3
  439588:	str	w11, [sp, #6980]
  43958c:	ldr	w11, [x8, #440]
  439590:	str	w11, [sp, #6976]
  439594:	ldr	x10, [x9, #2848]
  439598:	cbz	x10, 4395e0 <udev_rule_apply_token_to_event+0x7098>
  43959c:	mov	w0, #0x1                   	// #1
  4395a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4395a4:	ldr	w8, [sp, #6980]
  4395a8:	cmp	w0, w8
  4395ac:	cset	w8, ge  // ge = tcont
  4395b0:	mov	w9, #0x1                   	// #1
  4395b4:	eor	w8, w8, #0x1
  4395b8:	eor	w8, w8, w9
  4395bc:	and	w8, w8, #0x1
  4395c0:	mov	w1, w8
  4395c4:	sxtw	x10, w1
  4395c8:	cbz	x10, 4395e0 <udev_rule_apply_token_to_event+0x7098>
  4395cc:	ldr	x8, [sp, #3936]
  4395d0:	ldr	x0, [x8, #2848]
  4395d4:	add	x1, sp, #0x1, lsl #12
  4395d8:	add	x1, x1, #0xb50
  4395dc:	bl	40a860 <sd_device_get_sysname@plt>
  4395e0:	ldr	w0, [sp, #6980]
  4395e4:	ldr	w1, [sp, #6976]
  4395e8:	ldr	x8, [sp, #3936]
  4395ec:	ldr	x9, [x8, #2856]
  4395f0:	mov	x10, xzr
  4395f4:	cmp	x9, #0x0
  4395f8:	ldr	x9, [sp, #3912]
  4395fc:	csel	x5, x9, x10, ne  // ne = any
  439600:	ldr	x6, [x8, #2856]
  439604:	ldr	x10, [x8, #2872]
  439608:	str	w0, [sp, #948]
  43960c:	mov	x0, x10
  439610:	str	w1, [sp, #944]
  439614:	str	x5, [sp, #936]
  439618:	str	x6, [sp, #928]
  43961c:	bl	424274 <strna>
  439620:	ldr	x8, [sp, #3936]
  439624:	ldr	x9, [x8, #2880]
  439628:	str	x0, [sp, #920]
  43962c:	cbz	x9, 439644 <udev_rule_apply_token_to_event+0x70fc>
  439630:	ldr	x8, [sp, #3936]
  439634:	ldr	x9, [x8, #2880]
  439638:	ldr	w10, [x9, #8]
  43963c:	str	w10, [sp, #916]
  439640:	b	43964c <udev_rule_apply_token_to_event+0x7104>
  439644:	mov	w8, wzr
  439648:	str	w8, [sp, #916]
  43964c:	ldr	w8, [sp, #916]
  439650:	ldr	w0, [sp, #948]
  439654:	ldr	w1, [sp, #944]
  439658:	ldr	x2, [sp, #3928]
  43965c:	mov	w3, #0x7dd                 	// #2013
  439660:	ldr	x4, [sp, #3920]
  439664:	ldr	x5, [sp, #936]
  439668:	ldr	x6, [sp, #928]
  43966c:	mov	x9, xzr
  439670:	mov	x7, x9
  439674:	mov	x10, sp
  439678:	str	x9, [x10]
  43967c:	mov	x9, sp
  439680:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  439684:	add	x10, x10, #0xa34
  439688:	str	x10, [x9, #8]
  43968c:	mov	x9, sp
  439690:	ldr	x10, [sp, #920]
  439694:	str	x10, [x9, #16]
  439698:	mov	x9, sp
  43969c:	str	w8, [x9, #24]
  4396a0:	mov	x9, sp
  4396a4:	add	x11, sp, #0xf, lsl #12
  4396a8:	add	x11, x11, #0x448
  4396ac:	str	x11, [x9, #32]
  4396b0:	bl	40a870 <log_object_internal@plt>
  4396b4:	str	w0, [sp, #6972]
  4396b8:	ldr	w8, [sp, #6972]
  4396bc:	str	w8, [sp, #7004]
  4396c0:	ldr	w8, [sp, #7004]
  4396c4:	ldr	x9, [sp, #3984]
  4396c8:	str	w8, [x9, #1540]
  4396cc:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  4396d0:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4396d4:	ldr	x8, [sp, #3984]
  4396d8:	ldr	x9, [x8, #1512]
  4396dc:	ldrh	w10, [x9, #104]
  4396e0:	mov	w11, #0xd                   	// #13
  4396e4:	lsr	w10, w10, w11
  4396e8:	and	w10, w10, #0x1
  4396ec:	tbnz	w10, #0, 4396f4 <udev_rule_apply_token_to_event+0x71ac>
  4396f0:	b	4396f8 <udev_rule_apply_token_to_event+0x71b0>
  4396f4:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  4396f8:	ldr	x8, [sp, #3984]
  4396fc:	ldr	x9, [x8, #1488]
  439700:	ldr	w10, [x9]
  439704:	lsl	w10, w10, #16
  439708:	asr	w10, w10, #24
  43970c:	cmp	w10, #0x5
  439710:	b.ne	43972c <udev_rule_apply_token_to_event+0x71e4>  // b.any
  439714:	ldr	x8, [sp, #3984]
  439718:	ldr	x9, [x8, #1512]
  43971c:	ldrh	w10, [x9, #104]
  439720:	and	w10, w10, #0xffffdfff
  439724:	orr	w10, w10, #0x2000
  439728:	strh	w10, [x9, #104]
  43972c:	ldr	x8, [sp, #3984]
  439730:	ldr	x0, [x8, #1512]
  439734:	ldr	x9, [x8, #1488]
  439738:	ldr	x1, [x9, #8]
  43973c:	add	x2, sp, #0xf, lsl #12
  439740:	add	x2, x2, #0x448
  439744:	mov	x3, #0x400                 	// #1024
  439748:	mov	w10, wzr
  43974c:	and	w4, w10, #0x1
  439750:	bl	4183c0 <udev_event_apply_format>
  439754:	mov	w10, #0x0                   	// #0
  439758:	add	x8, sp, #0xb3c
  43975c:	strb	w10, [x8, #4095]
  439760:	ldr	x8, [sp, #3984]
  439764:	ldr	x9, [x8, #1512]
  439768:	ldrh	w10, [x9, #104]
  43976c:	mov	w11, #0x8                   	// #8
  439770:	lsl	w10, w10, #8
  439774:	lsl	w10, w10, #16
  439778:	mov	x9, #0x10                  	// #16
  43977c:	asr	w10, w10, #16
  439780:	asr	w10, w10, w11
  439784:	lsl	w10, w10, #16
  439788:	asr	w9, w10, w9
  43978c:	str	w9, [sp, #912]
  439790:	cbz	w9, 4397b0 <udev_rule_apply_token_to_event+0x7268>
  439794:	b	439798 <udev_rule_apply_token_to_event+0x7250>
  439798:	ldr	w8, [sp, #912]
  43979c:	cmp	w8, #0x2
  4397a0:	cset	w9, eq  // eq = none
  4397a4:	eor	w9, w9, #0x1
  4397a8:	tbnz	w9, #0, 4397c0 <udev_rule_apply_token_to_event+0x7278>
  4397ac:	b	4397b0 <udev_rule_apply_token_to_event+0x7268>
  4397b0:	mov	w8, #0x1                   	// #1
  4397b4:	add	x9, sp, #0xb3c
  4397b8:	strb	w8, [x9, #4095]
  4397bc:	b	4397c0 <udev_rule_apply_token_to_event+0x7278>
  4397c0:	add	x8, sp, #0xb3c
  4397c4:	ldrb	w8, [x8, #4095]
  4397c8:	and	w8, w8, #0x1
  4397cc:	add	x9, sp, #0xb3b
  4397d0:	strb	w8, [x9, #4095]
  4397d4:	add	x8, sp, #0xb3b
  4397d8:	ldrb	w8, [x8, #4095]
  4397dc:	tbnz	w8, #0, 4397e4 <udev_rule_apply_token_to_event+0x729c>
  4397e0:	b	439a08 <udev_rule_apply_token_to_event+0x74c0>
  4397e4:	add	x0, sp, #0xf, lsl #12
  4397e8:	add	x0, x0, #0x448
  4397ec:	ldr	x1, [sp, #3904]
  4397f0:	bl	40aed0 <util_replace_chars@plt>
  4397f4:	ldr	x8, [sp, #3984]
  4397f8:	str	x0, [x8, #448]
  4397fc:	ldr	x9, [x8, #448]
  439800:	cmp	x9, #0x0
  439804:	cset	w10, ls  // ls = plast
  439808:	tbnz	w10, #0, 439a08 <udev_rule_apply_token_to_event+0x74c0>
  43980c:	ldr	x8, [sp, #3984]
  439810:	ldr	x9, [x8, #1528]
  439814:	ldr	x10, [sp, #3936]
  439818:	str	x9, [x10, #2824]
  43981c:	ldr	x9, [x10, #2824]
  439820:	cbz	x9, 439838 <udev_rule_apply_token_to_event+0x72f0>
  439824:	ldr	x8, [sp, #3936]
  439828:	ldr	x9, [x8, #2824]
  43982c:	ldr	x9, [x9, #32]
  439830:	str	x9, [sp, #904]
  439834:	b	439840 <udev_rule_apply_token_to_event+0x72f8>
  439838:	mov	x8, xzr
  43983c:	str	x8, [sp, #904]
  439840:	ldr	x8, [sp, #904]
  439844:	ldr	x9, [sp, #3936]
  439848:	str	x8, [x9, #2816]
  43984c:	ldr	x8, [x9, #2816]
  439850:	cbz	x8, 439868 <udev_rule_apply_token_to_event+0x7320>
  439854:	ldr	x8, [sp, #3936]
  439858:	ldr	x9, [x8, #2816]
  43985c:	ldr	x9, [x9, #8]
  439860:	str	x9, [sp, #896]
  439864:	b	439870 <udev_rule_apply_token_to_event+0x7328>
  439868:	mov	x8, xzr
  43986c:	str	x8, [sp, #896]
  439870:	ldr	x8, [sp, #896]
  439874:	ldr	x9, [sp, #3936]
  439878:	str	x8, [x9, #2808]
  43987c:	ldr	x8, [x9, #2816]
  439880:	cbz	x8, 439898 <udev_rule_apply_token_to_event+0x7350>
  439884:	ldr	x8, [sp, #3936]
  439888:	ldr	x9, [x8, #2816]
  43988c:	ldr	x9, [x9]
  439890:	str	x9, [sp, #888]
  439894:	b	4398a0 <udev_rule_apply_token_to_event+0x7358>
  439898:	mov	x8, xzr
  43989c:	str	x8, [sp, #888]
  4398a0:	ldr	x8, [sp, #888]
  4398a4:	ldr	x9, [sp, #3936]
  4398a8:	str	x8, [x9, #2800]
  4398ac:	mov	x8, xzr
  4398b0:	str	x8, [x9, #2784]
  4398b4:	ldr	x8, [sp, #3984]
  4398b8:	ldr	x10, [x8, #1520]
  4398bc:	str	x10, [x9, #2776]
  4398c0:	mov	w11, #0x7                   	// #7
  4398c4:	str	w11, [sp, #6908]
  4398c8:	str	wzr, [sp, #6904]
  4398cc:	ldr	x10, [x9, #2776]
  4398d0:	cbz	x10, 439918 <udev_rule_apply_token_to_event+0x73d0>
  4398d4:	mov	w0, #0x1                   	// #1
  4398d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4398dc:	ldr	w8, [sp, #6908]
  4398e0:	cmp	w0, w8
  4398e4:	cset	w8, ge  // ge = tcont
  4398e8:	mov	w9, #0x1                   	// #1
  4398ec:	eor	w8, w8, #0x1
  4398f0:	eor	w8, w8, w9
  4398f4:	and	w8, w8, #0x1
  4398f8:	mov	w1, w8
  4398fc:	sxtw	x10, w1
  439900:	cbz	x10, 439918 <udev_rule_apply_token_to_event+0x73d0>
  439904:	ldr	x8, [sp, #3936]
  439908:	ldr	x0, [x8, #2776]
  43990c:	add	x1, sp, #0x1, lsl #12
  439910:	add	x1, x1, #0xb08
  439914:	bl	40a860 <sd_device_get_sysname@plt>
  439918:	ldr	w0, [sp, #6908]
  43991c:	ldr	w1, [sp, #6904]
  439920:	ldr	x8, [sp, #3936]
  439924:	ldr	x9, [x8, #2784]
  439928:	mov	x10, xzr
  43992c:	cmp	x9, #0x0
  439930:	ldr	x9, [sp, #3912]
  439934:	csel	x5, x9, x10, ne  // ne = any
  439938:	ldr	x6, [x8, #2784]
  43993c:	ldr	x10, [x8, #2800]
  439940:	str	w0, [sp, #884]
  439944:	mov	x0, x10
  439948:	str	w1, [sp, #880]
  43994c:	str	x5, [sp, #872]
  439950:	str	x6, [sp, #864]
  439954:	bl	424274 <strna>
  439958:	ldr	x8, [sp, #3936]
  43995c:	ldr	x9, [x8, #2808]
  439960:	str	x0, [sp, #856]
  439964:	cbz	x9, 43997c <udev_rule_apply_token_to_event+0x7434>
  439968:	ldr	x8, [sp, #3936]
  43996c:	ldr	x9, [x8, #2808]
  439970:	ldr	w10, [x9, #8]
  439974:	str	w10, [sp, #852]
  439978:	b	439984 <udev_rule_apply_token_to_event+0x743c>
  43997c:	mov	w8, wzr
  439980:	str	w8, [sp, #852]
  439984:	ldr	w8, [sp, #852]
  439988:	ldr	x9, [sp, #3984]
  43998c:	ldr	x10, [x9, #448]
  439990:	ldr	x11, [x9, #1488]
  439994:	ldr	x11, [x11, #8]
  439998:	ldr	w0, [sp, #884]
  43999c:	ldr	w1, [sp, #880]
  4399a0:	ldr	x2, [sp, #3928]
  4399a4:	mov	w3, #0x7ec                 	// #2028
  4399a8:	ldr	x4, [sp, #3920]
  4399ac:	ldr	x5, [sp, #872]
  4399b0:	ldr	x6, [sp, #864]
  4399b4:	mov	x12, xzr
  4399b8:	mov	x7, x12
  4399bc:	mov	x13, sp
  4399c0:	str	x12, [x13]
  4399c4:	mov	x12, sp
  4399c8:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  4399cc:	add	x13, x13, #0xa55
  4399d0:	str	x13, [x12, #8]
  4399d4:	mov	x12, sp
  4399d8:	ldr	x13, [sp, #856]
  4399dc:	str	x13, [x12, #16]
  4399e0:	mov	x12, sp
  4399e4:	str	w8, [x12, #24]
  4399e8:	mov	x12, sp
  4399ec:	str	x10, [x12, #32]
  4399f0:	mov	x10, sp
  4399f4:	str	x11, [x10, #40]
  4399f8:	bl	40a870 <log_object_internal@plt>
  4399fc:	str	w0, [sp, #6900]
  439a00:	ldr	w8, [sp, #6900]
  439a04:	str	w8, [sp, #6932]
  439a08:	ldr	x8, [sp, #3984]
  439a0c:	ldr	x0, [x8, #1520]
  439a10:	mov	x9, xzr
  439a14:	mov	x1, x9
  439a18:	bl	40aa50 <sd_device_get_devnum@plt>
  439a1c:	cmp	w0, #0x0
  439a20:	cset	w10, lt  // lt = tstop
  439a24:	tbnz	w10, #0, 439c68 <udev_rule_apply_token_to_event+0x7720>
  439a28:	ldr	x8, [sp, #3984]
  439a2c:	ldr	x0, [x8, #1520]
  439a30:	add	x1, sp, #0xf, lsl #12
  439a34:	add	x1, x1, #0x440
  439a38:	bl	40a930 <sd_device_get_devname@plt>
  439a3c:	cmp	w0, #0x0
  439a40:	cset	w9, lt  // lt = tstop
  439a44:	tbnz	w9, #0, 439a74 <udev_rule_apply_token_to_event+0x752c>
  439a48:	ldr	x8, [sp, #3984]
  439a4c:	ldr	x0, [x8, #456]
  439a50:	ldr	x1, [sp, #3896]
  439a54:	bl	4304a4 <startswith>
  439a58:	add	x8, sp, #0xf, lsl #12
  439a5c:	add	x8, x8, #0x448
  439a60:	str	x0, [sp, #840]
  439a64:	mov	x0, x8
  439a68:	ldr	x1, [sp, #840]
  439a6c:	bl	43237c <streq_ptr>
  439a70:	tbnz	w0, #0, 439c68 <udev_rule_apply_token_to_event+0x7720>
  439a74:	ldr	x8, [sp, #3984]
  439a78:	ldr	x9, [x8, #1528]
  439a7c:	ldr	x10, [sp, #3936]
  439a80:	str	x9, [x10, #2752]
  439a84:	ldr	x9, [x10, #2752]
  439a88:	cbz	x9, 439aa0 <udev_rule_apply_token_to_event+0x7558>
  439a8c:	ldr	x8, [sp, #3936]
  439a90:	ldr	x9, [x8, #2752]
  439a94:	ldr	x9, [x9, #32]
  439a98:	str	x9, [sp, #832]
  439a9c:	b	439aa8 <udev_rule_apply_token_to_event+0x7560>
  439aa0:	mov	x8, xzr
  439aa4:	str	x8, [sp, #832]
  439aa8:	ldr	x8, [sp, #832]
  439aac:	ldr	x9, [sp, #3936]
  439ab0:	str	x8, [x9, #2744]
  439ab4:	ldr	x8, [x9, #2744]
  439ab8:	cbz	x8, 439ad0 <udev_rule_apply_token_to_event+0x7588>
  439abc:	ldr	x8, [sp, #3936]
  439ac0:	ldr	x9, [x8, #2744]
  439ac4:	ldr	x9, [x9, #8]
  439ac8:	str	x9, [sp, #824]
  439acc:	b	439ad8 <udev_rule_apply_token_to_event+0x7590>
  439ad0:	mov	x8, xzr
  439ad4:	str	x8, [sp, #824]
  439ad8:	ldr	x8, [sp, #824]
  439adc:	ldr	x9, [sp, #3936]
  439ae0:	str	x8, [x9, #2736]
  439ae4:	ldr	x8, [x9, #2744]
  439ae8:	cbz	x8, 439b00 <udev_rule_apply_token_to_event+0x75b8>
  439aec:	ldr	x8, [sp, #3936]
  439af0:	ldr	x9, [x8, #2744]
  439af4:	ldr	x9, [x9]
  439af8:	str	x9, [sp, #816]
  439afc:	b	439b08 <udev_rule_apply_token_to_event+0x75c0>
  439b00:	mov	x8, xzr
  439b04:	str	x8, [sp, #816]
  439b08:	ldr	x8, [sp, #816]
  439b0c:	ldr	x9, [sp, #3936]
  439b10:	str	x8, [x9, #2728]
  439b14:	mov	x8, xzr
  439b18:	str	x8, [x9, #2712]
  439b1c:	ldr	x8, [sp, #3984]
  439b20:	ldr	x10, [x8, #1520]
  439b24:	str	x10, [x9, #2704]
  439b28:	mov	w11, #0x3                   	// #3
  439b2c:	str	w11, [sp, #6836]
  439b30:	str	wzr, [sp, #6832]
  439b34:	ldr	x10, [x9, #2704]
  439b38:	cbz	x10, 439b80 <udev_rule_apply_token_to_event+0x7638>
  439b3c:	mov	w0, #0x1                   	// #1
  439b40:	bl	40a3f0 <log_get_max_level_realm@plt>
  439b44:	ldr	w8, [sp, #6836]
  439b48:	cmp	w0, w8
  439b4c:	cset	w8, ge  // ge = tcont
  439b50:	mov	w9, #0x1                   	// #1
  439b54:	eor	w8, w8, #0x1
  439b58:	eor	w8, w8, w9
  439b5c:	and	w8, w8, #0x1
  439b60:	mov	w1, w8
  439b64:	sxtw	x10, w1
  439b68:	cbz	x10, 439b80 <udev_rule_apply_token_to_event+0x7638>
  439b6c:	ldr	x8, [sp, #3936]
  439b70:	ldr	x0, [x8, #2704]
  439b74:	add	x1, sp, #0x1, lsl #12
  439b78:	add	x1, x1, #0xac0
  439b7c:	bl	40a860 <sd_device_get_sysname@plt>
  439b80:	ldr	w0, [sp, #6836]
  439b84:	ldr	w1, [sp, #6832]
  439b88:	ldr	x8, [sp, #3936]
  439b8c:	ldr	x9, [x8, #2712]
  439b90:	mov	x10, xzr
  439b94:	cmp	x9, #0x0
  439b98:	ldr	x9, [sp, #3912]
  439b9c:	csel	x5, x9, x10, ne  // ne = any
  439ba0:	ldr	x6, [x8, #2712]
  439ba4:	ldr	x10, [x8, #2728]
  439ba8:	str	w0, [sp, #812]
  439bac:	mov	x0, x10
  439bb0:	str	w1, [sp, #808]
  439bb4:	str	x5, [sp, #800]
  439bb8:	str	x6, [sp, #792]
  439bbc:	bl	424274 <strna>
  439bc0:	ldr	x8, [sp, #3936]
  439bc4:	ldr	x9, [x8, #2736]
  439bc8:	str	x0, [sp, #784]
  439bcc:	cbz	x9, 439be4 <udev_rule_apply_token_to_event+0x769c>
  439bd0:	ldr	x8, [sp, #3936]
  439bd4:	ldr	x9, [x8, #2736]
  439bd8:	ldr	w10, [x9, #8]
  439bdc:	str	w10, [sp, #780]
  439be0:	b	439bec <udev_rule_apply_token_to_event+0x76a4>
  439be4:	mov	w8, wzr
  439be8:	str	w8, [sp, #780]
  439bec:	ldr	w8, [sp, #780]
  439bf0:	ldr	x9, [sp, #3984]
  439bf4:	ldr	x10, [x9, #1488]
  439bf8:	ldr	x10, [x10, #8]
  439bfc:	ldr	w0, [sp, #812]
  439c00:	ldr	w1, [sp, #808]
  439c04:	ldr	x2, [sp, #3928]
  439c08:	mov	w3, #0x7f3                 	// #2035
  439c0c:	ldr	x4, [sp, #3920]
  439c10:	ldr	x5, [sp, #800]
  439c14:	ldr	x6, [sp, #792]
  439c18:	mov	x11, xzr
  439c1c:	mov	x7, x11
  439c20:	mov	x12, sp
  439c24:	str	x11, [x12]
  439c28:	mov	x11, sp
  439c2c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  439c30:	add	x12, x12, #0xa8e
  439c34:	str	x12, [x11, #8]
  439c38:	mov	x11, sp
  439c3c:	ldr	x12, [sp, #784]
  439c40:	str	x12, [x11, #16]
  439c44:	mov	x11, sp
  439c48:	str	w8, [x11, #24]
  439c4c:	mov	x11, sp
  439c50:	str	x10, [x11, #32]
  439c54:	bl	40a870 <log_object_internal@plt>
  439c58:	str	w0, [sp, #6828]
  439c5c:	ldr	w8, [sp, #6828]
  439c60:	str	w8, [sp, #6860]
  439c64:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439c68:	ldr	x8, [sp, #3984]
  439c6c:	ldr	x9, [x8, #1512]
  439c70:	add	x0, x9, #0x18
  439c74:	add	x1, sp, #0xf, lsl #12
  439c78:	add	x1, x1, #0x448
  439c7c:	bl	40b220 <free_and_strdup@plt>
  439c80:	cmp	w0, #0x0
  439c84:	cset	w10, ge  // ge = tcont
  439c88:	tbnz	w10, #0, 439cac <udev_rule_apply_token_to_event+0x7764>
  439c8c:	mov	w0, #0x1                   	// #1
  439c90:	ldr	x1, [sp, #3928]
  439c94:	mov	w2, #0x7f7                 	// #2039
  439c98:	ldr	x3, [sp, #3920]
  439c9c:	bl	40a5e0 <log_oom_internal@plt>
  439ca0:	ldr	x8, [sp, #3984]
  439ca4:	str	w0, [x8, #1540]
  439ca8:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  439cac:	ldr	x8, [sp, #3984]
  439cb0:	ldr	x9, [x8, #1528]
  439cb4:	ldr	x10, [sp, #3936]
  439cb8:	str	x9, [x10, #2680]
  439cbc:	ldr	x9, [x10, #2680]
  439cc0:	cbz	x9, 439cd8 <udev_rule_apply_token_to_event+0x7790>
  439cc4:	ldr	x8, [sp, #3936]
  439cc8:	ldr	x9, [x8, #2680]
  439ccc:	ldr	x9, [x9, #32]
  439cd0:	str	x9, [sp, #768]
  439cd4:	b	439ce0 <udev_rule_apply_token_to_event+0x7798>
  439cd8:	mov	x8, xzr
  439cdc:	str	x8, [sp, #768]
  439ce0:	ldr	x8, [sp, #768]
  439ce4:	ldr	x9, [sp, #3936]
  439ce8:	str	x8, [x9, #2672]
  439cec:	ldr	x8, [x9, #2672]
  439cf0:	cbz	x8, 439d08 <udev_rule_apply_token_to_event+0x77c0>
  439cf4:	ldr	x8, [sp, #3936]
  439cf8:	ldr	x9, [x8, #2672]
  439cfc:	ldr	x9, [x9, #8]
  439d00:	str	x9, [sp, #760]
  439d04:	b	439d10 <udev_rule_apply_token_to_event+0x77c8>
  439d08:	mov	x8, xzr
  439d0c:	str	x8, [sp, #760]
  439d10:	ldr	x8, [sp, #760]
  439d14:	ldr	x9, [sp, #3936]
  439d18:	str	x8, [x9, #2664]
  439d1c:	ldr	x8, [x9, #2672]
  439d20:	cbz	x8, 439d38 <udev_rule_apply_token_to_event+0x77f0>
  439d24:	ldr	x8, [sp, #3936]
  439d28:	ldr	x9, [x8, #2672]
  439d2c:	ldr	x9, [x9]
  439d30:	str	x9, [sp, #752]
  439d34:	b	439d40 <udev_rule_apply_token_to_event+0x77f8>
  439d38:	mov	x8, xzr
  439d3c:	str	x8, [sp, #752]
  439d40:	ldr	x8, [sp, #752]
  439d44:	ldr	x9, [sp, #3936]
  439d48:	str	x8, [x9, #2656]
  439d4c:	mov	x8, xzr
  439d50:	str	x8, [x9, #2640]
  439d54:	ldr	x8, [sp, #3984]
  439d58:	ldr	x10, [x8, #1520]
  439d5c:	str	x10, [x9, #2632]
  439d60:	mov	w11, #0x7                   	// #7
  439d64:	str	w11, [sp, #6764]
  439d68:	str	wzr, [sp, #6760]
  439d6c:	ldr	x10, [x9, #2632]
  439d70:	cbz	x10, 439db8 <udev_rule_apply_token_to_event+0x7870>
  439d74:	mov	w0, #0x1                   	// #1
  439d78:	bl	40a3f0 <log_get_max_level_realm@plt>
  439d7c:	ldr	w8, [sp, #6764]
  439d80:	cmp	w0, w8
  439d84:	cset	w8, ge  // ge = tcont
  439d88:	mov	w9, #0x1                   	// #1
  439d8c:	eor	w8, w8, #0x1
  439d90:	eor	w8, w8, w9
  439d94:	and	w8, w8, #0x1
  439d98:	mov	w1, w8
  439d9c:	sxtw	x10, w1
  439da0:	cbz	x10, 439db8 <udev_rule_apply_token_to_event+0x7870>
  439da4:	ldr	x8, [sp, #3936]
  439da8:	ldr	x0, [x8, #2632]
  439dac:	add	x1, sp, #0x1, lsl #12
  439db0:	add	x1, x1, #0xa78
  439db4:	bl	40a860 <sd_device_get_sysname@plt>
  439db8:	ldr	w0, [sp, #6764]
  439dbc:	ldr	w1, [sp, #6760]
  439dc0:	ldr	x8, [sp, #3936]
  439dc4:	ldr	x9, [x8, #2640]
  439dc8:	mov	x10, xzr
  439dcc:	cmp	x9, #0x0
  439dd0:	ldr	x9, [sp, #3912]
  439dd4:	csel	x5, x9, x10, ne  // ne = any
  439dd8:	ldr	x6, [x8, #2640]
  439ddc:	ldr	x10, [x8, #2656]
  439de0:	str	w0, [sp, #748]
  439de4:	mov	x0, x10
  439de8:	str	w1, [sp, #744]
  439dec:	str	x5, [sp, #736]
  439df0:	str	x6, [sp, #728]
  439df4:	bl	424274 <strna>
  439df8:	ldr	x8, [sp, #3936]
  439dfc:	ldr	x9, [x8, #2664]
  439e00:	str	x0, [sp, #720]
  439e04:	cbz	x9, 439e1c <udev_rule_apply_token_to_event+0x78d4>
  439e08:	ldr	x8, [sp, #3936]
  439e0c:	ldr	x9, [x8, #2664]
  439e10:	ldr	w10, [x9, #8]
  439e14:	str	w10, [sp, #716]
  439e18:	b	439e24 <udev_rule_apply_token_to_event+0x78dc>
  439e1c:	mov	w8, wzr
  439e20:	str	w8, [sp, #716]
  439e24:	ldr	w8, [sp, #716]
  439e28:	ldr	x9, [sp, #3984]
  439e2c:	ldr	x10, [x9, #1512]
  439e30:	ldr	x10, [x10, #24]
  439e34:	ldr	w0, [sp, #748]
  439e38:	ldr	w1, [sp, #744]
  439e3c:	ldr	x2, [sp, #3928]
  439e40:	mov	w3, #0x7f9                 	// #2041
  439e44:	ldr	x4, [sp, #3920]
  439e48:	ldr	x5, [sp, #736]
  439e4c:	ldr	x6, [sp, #728]
  439e50:	mov	x11, xzr
  439e54:	mov	x7, x11
  439e58:	mov	x12, sp
  439e5c:	str	x11, [x12]
  439e60:	mov	x11, sp
  439e64:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  439e68:	add	x12, x12, #0xade
  439e6c:	str	x12, [x11, #8]
  439e70:	mov	x11, sp
  439e74:	ldr	x12, [sp, #720]
  439e78:	str	x12, [x11, #16]
  439e7c:	mov	x11, sp
  439e80:	str	w8, [x11, #24]
  439e84:	mov	x11, sp
  439e88:	str	x10, [x11, #32]
  439e8c:	bl	40a870 <log_object_internal@plt>
  439e90:	str	w0, [sp, #6756]
  439e94:	ldr	w8, [sp, #6756]
  439e98:	str	w8, [sp, #6788]
  439e9c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439ea0:	ldr	x8, [sp, #3984]
  439ea4:	ldr	x9, [x8, #1512]
  439ea8:	ldrh	w10, [x9, #104]
  439eac:	mov	w11, #0xe                   	// #14
  439eb0:	lsr	w10, w10, w11
  439eb4:	and	w10, w10, #0x1
  439eb8:	tbnz	w10, #0, 439ec0 <udev_rule_apply_token_to_event+0x7978>
  439ebc:	b	439ec4 <udev_rule_apply_token_to_event+0x797c>
  439ec0:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439ec4:	ldr	x8, [sp, #3984]
  439ec8:	ldr	x0, [x8, #1520]
  439ecc:	mov	x9, xzr
  439ed0:	mov	x1, x9
  439ed4:	bl	40aa50 <sd_device_get_devnum@plt>
  439ed8:	cmp	w0, #0x0
  439edc:	cset	w10, ge  // ge = tcont
  439ee0:	tbnz	w10, #0, 439ee8 <udev_rule_apply_token_to_event+0x79a0>
  439ee4:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  439ee8:	ldr	x8, [sp, #3984]
  439eec:	ldr	x9, [x8, #1488]
  439ef0:	ldr	w10, [x9]
  439ef4:	lsl	w10, w10, #16
  439ef8:	asr	w10, w10, #24
  439efc:	cmp	w10, #0x5
  439f00:	b.ne	439f1c <udev_rule_apply_token_to_event+0x79d4>  // b.any
  439f04:	ldr	x8, [sp, #3984]
  439f08:	ldr	x9, [x8, #1512]
  439f0c:	ldrh	w10, [x9, #104]
  439f10:	and	w10, w10, #0xffffbfff
  439f14:	orr	w10, w10, #0x4000
  439f18:	strh	w10, [x9, #104]
  439f1c:	mov	w8, #0x0                   	// #0
  439f20:	add	x9, sp, #0xa58
  439f24:	strb	w8, [x9, #4095]
  439f28:	ldr	x9, [sp, #3984]
  439f2c:	ldr	x10, [x9, #1488]
  439f30:	ldr	w8, [x10]
  439f34:	lsl	w8, w8, #16
  439f38:	asr	w8, w8, #24
  439f3c:	subs	w8, w8, #0x4
  439f40:	mov	w11, #0x1                   	// #1
  439f44:	cmp	w8, #0x1
  439f48:	cset	w8, ls  // ls = plast
  439f4c:	eor	w8, w8, w11
  439f50:	tbnz	w8, #0, 439f68 <udev_rule_apply_token_to_event+0x7a20>
  439f54:	b	439f58 <udev_rule_apply_token_to_event+0x7a10>
  439f58:	mov	w8, #0x1                   	// #1
  439f5c:	add	x9, sp, #0xa58
  439f60:	strb	w8, [x9, #4095]
  439f64:	b	439f68 <udev_rule_apply_token_to_event+0x7a20>
  439f68:	add	x8, sp, #0xa58
  439f6c:	ldrb	w8, [x8, #4095]
  439f70:	and	w8, w8, #0x1
  439f74:	add	x9, sp, #0xa57
  439f78:	strb	w8, [x9, #4095]
  439f7c:	add	x8, sp, #0xa57
  439f80:	ldrb	w8, [x8, #4095]
  439f84:	tbnz	w8, #0, 439f8c <udev_rule_apply_token_to_event+0x7a44>
  439f88:	b	439f98 <udev_rule_apply_token_to_event+0x7a50>
  439f8c:	ldr	x8, [sp, #3984]
  439f90:	ldr	x0, [x8, #1520]
  439f94:	bl	40b480 <device_cleanup_devlinks@plt>
  439f98:	ldr	x8, [sp, #3984]
  439f9c:	ldr	x0, [x8, #1512]
  439fa0:	ldr	x9, [x8, #1488]
  439fa4:	ldr	x1, [x9, #8]
  439fa8:	ldr	x9, [x8, #1512]
  439fac:	ldrh	w10, [x9, #104]
  439fb0:	mov	w11, #0x8                   	// #8
  439fb4:	lsl	w10, w10, #8
  439fb8:	lsl	w10, w10, #16
  439fbc:	mov	x9, #0x10                  	// #16
  439fc0:	asr	w10, w10, #16
  439fc4:	asr	w10, w10, w11
  439fc8:	lsl	w10, w10, #16
  439fcc:	mov	x2, x9
  439fd0:	asr	w10, w10, w2
  439fd4:	cmp	w10, #0x1
  439fd8:	cset	w10, ne  // ne = any
  439fdc:	add	x2, sp, #0xf, lsl #12
  439fe0:	add	x2, x2, #0x448
  439fe4:	mov	x3, #0x400                 	// #1024
  439fe8:	and	w4, w10, #0x1
  439fec:	str	w11, [sp, #712]
  439ff0:	str	x9, [sp, #704]
  439ff4:	bl	4183c0 <udev_event_apply_format>
  439ff8:	ldr	x8, [sp, #3984]
  439ffc:	ldr	x9, [x8, #1512]
  43a000:	ldrh	w10, [x9, #104]
  43a004:	ldr	w11, [sp, #712]
  43a008:	lsl	w10, w10, w11
  43a00c:	lsl	w10, w10, #16
  43a010:	ldr	x9, [sp, #704]
  43a014:	asr	w9, w10, w9
  43a018:	asr	w9, w9, w11
  43a01c:	lsl	w9, w9, #16
  43a020:	ldr	x12, [sp, #704]
  43a024:	asr	w9, w9, w12
  43a028:	cbnz	w9, 43a04c <udev_rule_apply_token_to_event+0x7b04>
  43a02c:	add	x0, sp, #0xf, lsl #12
  43a030:	add	x0, x0, #0x448
  43a034:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43a038:	add	x1, x1, #0xaee
  43a03c:	bl	40aed0 <util_replace_chars@plt>
  43a040:	ldr	x8, [sp, #3984]
  43a044:	str	x0, [x8, #448]
  43a048:	b	43a0a4 <udev_rule_apply_token_to_event+0x7b5c>
  43a04c:	ldr	x8, [sp, #3984]
  43a050:	ldr	x9, [x8, #1512]
  43a054:	ldrh	w10, [x9, #104]
  43a058:	mov	w11, #0x8                   	// #8
  43a05c:	lsl	w10, w10, #8
  43a060:	lsl	w10, w10, #16
  43a064:	mov	x9, #0x10                  	// #16
  43a068:	asr	w10, w10, #16
  43a06c:	asr	w10, w10, w11
  43a070:	lsl	w10, w10, #16
  43a074:	asr	w9, w10, w9
  43a078:	cmp	w9, #0x2
  43a07c:	b.ne	43a09c <udev_rule_apply_token_to_event+0x7b54>  // b.any
  43a080:	add	x0, sp, #0xf, lsl #12
  43a084:	add	x0, x0, #0x448
  43a088:	ldr	x1, [sp, #3904]
  43a08c:	bl	40aed0 <util_replace_chars@plt>
  43a090:	ldr	x8, [sp, #3984]
  43a094:	str	x0, [x8, #448]
  43a098:	b	43a0a4 <udev_rule_apply_token_to_event+0x7b5c>
  43a09c:	ldr	x8, [sp, #3984]
  43a0a0:	str	xzr, [x8, #448]
  43a0a4:	ldr	x8, [sp, #3984]
  43a0a8:	ldr	x9, [x8, #448]
  43a0ac:	cmp	x9, #0x0
  43a0b0:	cset	w10, ls  // ls = plast
  43a0b4:	tbnz	w10, #0, 43a2a4 <udev_rule_apply_token_to_event+0x7d5c>
  43a0b8:	ldr	x8, [sp, #3984]
  43a0bc:	ldr	x9, [x8, #1528]
  43a0c0:	ldr	x10, [sp, #3936]
  43a0c4:	str	x9, [x10, #2592]
  43a0c8:	ldr	x9, [x10, #2592]
  43a0cc:	cbz	x9, 43a0e4 <udev_rule_apply_token_to_event+0x7b9c>
  43a0d0:	ldr	x8, [sp, #3936]
  43a0d4:	ldr	x9, [x8, #2592]
  43a0d8:	ldr	x9, [x9, #32]
  43a0dc:	str	x9, [sp, #696]
  43a0e0:	b	43a0ec <udev_rule_apply_token_to_event+0x7ba4>
  43a0e4:	mov	x8, xzr
  43a0e8:	str	x8, [sp, #696]
  43a0ec:	ldr	x8, [sp, #696]
  43a0f0:	ldr	x9, [sp, #3936]
  43a0f4:	str	x8, [x9, #2584]
  43a0f8:	ldr	x8, [x9, #2584]
  43a0fc:	cbz	x8, 43a114 <udev_rule_apply_token_to_event+0x7bcc>
  43a100:	ldr	x8, [sp, #3936]
  43a104:	ldr	x9, [x8, #2584]
  43a108:	ldr	x9, [x9, #8]
  43a10c:	str	x9, [sp, #688]
  43a110:	b	43a11c <udev_rule_apply_token_to_event+0x7bd4>
  43a114:	mov	x8, xzr
  43a118:	str	x8, [sp, #688]
  43a11c:	ldr	x8, [sp, #688]
  43a120:	ldr	x9, [sp, #3936]
  43a124:	str	x8, [x9, #2576]
  43a128:	ldr	x8, [x9, #2584]
  43a12c:	cbz	x8, 43a144 <udev_rule_apply_token_to_event+0x7bfc>
  43a130:	ldr	x8, [sp, #3936]
  43a134:	ldr	x9, [x8, #2584]
  43a138:	ldr	x9, [x9]
  43a13c:	str	x9, [sp, #680]
  43a140:	b	43a14c <udev_rule_apply_token_to_event+0x7c04>
  43a144:	mov	x8, xzr
  43a148:	str	x8, [sp, #680]
  43a14c:	ldr	x8, [sp, #680]
  43a150:	ldr	x9, [sp, #3936]
  43a154:	str	x8, [x9, #2568]
  43a158:	mov	x8, xzr
  43a15c:	str	x8, [x9, #2552]
  43a160:	ldr	x8, [sp, #3984]
  43a164:	ldr	x10, [x8, #1520]
  43a168:	str	x10, [x9, #2544]
  43a16c:	mov	w11, #0x7                   	// #7
  43a170:	str	w11, [sp, #6676]
  43a174:	str	wzr, [sp, #6672]
  43a178:	ldr	x10, [x9, #2544]
  43a17c:	cbz	x10, 43a1c4 <udev_rule_apply_token_to_event+0x7c7c>
  43a180:	mov	w0, #0x1                   	// #1
  43a184:	bl	40a3f0 <log_get_max_level_realm@plt>
  43a188:	ldr	w8, [sp, #6676]
  43a18c:	cmp	w0, w8
  43a190:	cset	w8, ge  // ge = tcont
  43a194:	mov	w9, #0x1                   	// #1
  43a198:	eor	w8, w8, #0x1
  43a19c:	eor	w8, w8, w9
  43a1a0:	and	w8, w8, #0x1
  43a1a4:	mov	w1, w8
  43a1a8:	sxtw	x10, w1
  43a1ac:	cbz	x10, 43a1c4 <udev_rule_apply_token_to_event+0x7c7c>
  43a1b0:	ldr	x8, [sp, #3936]
  43a1b4:	ldr	x0, [x8, #2544]
  43a1b8:	add	x1, sp, #0x1, lsl #12
  43a1bc:	add	x1, x1, #0xa20
  43a1c0:	bl	40a860 <sd_device_get_sysname@plt>
  43a1c4:	ldr	w0, [sp, #6676]
  43a1c8:	ldr	w1, [sp, #6672]
  43a1cc:	ldr	x8, [sp, #3936]
  43a1d0:	ldr	x9, [x8, #2552]
  43a1d4:	mov	x10, xzr
  43a1d8:	cmp	x9, #0x0
  43a1dc:	ldr	x9, [sp, #3912]
  43a1e0:	csel	x5, x9, x10, ne  // ne = any
  43a1e4:	ldr	x6, [x8, #2552]
  43a1e8:	ldr	x10, [x8, #2568]
  43a1ec:	str	w0, [sp, #676]
  43a1f0:	mov	x0, x10
  43a1f4:	str	w1, [sp, #672]
  43a1f8:	str	x5, [sp, #664]
  43a1fc:	str	x6, [sp, #656]
  43a200:	bl	424274 <strna>
  43a204:	ldr	x8, [sp, #3936]
  43a208:	ldr	x9, [x8, #2576]
  43a20c:	str	x0, [sp, #648]
  43a210:	cbz	x9, 43a228 <udev_rule_apply_token_to_event+0x7ce0>
  43a214:	ldr	x8, [sp, #3936]
  43a218:	ldr	x9, [x8, #2576]
  43a21c:	ldr	w10, [x9, #8]
  43a220:	str	w10, [sp, #644]
  43a224:	b	43a230 <udev_rule_apply_token_to_event+0x7ce8>
  43a228:	mov	w8, wzr
  43a22c:	str	w8, [sp, #644]
  43a230:	ldr	w8, [sp, #644]
  43a234:	ldr	x9, [sp, #3984]
  43a238:	ldr	x10, [x9, #448]
  43a23c:	ldr	w0, [sp, #676]
  43a240:	ldr	w1, [sp, #672]
  43a244:	ldr	x2, [sp, #3928]
  43a248:	mov	w3, #0x811                 	// #2065
  43a24c:	ldr	x4, [sp, #3920]
  43a250:	ldr	x5, [sp, #664]
  43a254:	ldr	x6, [sp, #656]
  43a258:	mov	x11, xzr
  43a25c:	mov	x7, x11
  43a260:	mov	x12, sp
  43a264:	str	x11, [x12]
  43a268:	mov	x11, sp
  43a26c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  43a270:	add	x12, x12, #0xaf1
  43a274:	str	x12, [x11, #8]
  43a278:	mov	x11, sp
  43a27c:	ldr	x12, [sp, #648]
  43a280:	str	x12, [x11, #16]
  43a284:	mov	x11, sp
  43a288:	str	w8, [x11, #24]
  43a28c:	mov	x11, sp
  43a290:	str	x10, [x11, #32]
  43a294:	bl	40a870 <log_object_internal@plt>
  43a298:	str	w0, [sp, #6668]
  43a29c:	ldr	w8, [sp, #6668]
  43a2a0:	str	w8, [sp, #6700]
  43a2a4:	add	x0, sp, #0xf, lsl #12
  43a2a8:	add	x0, x0, #0x448
  43a2ac:	mov	x8, xzr
  43a2b0:	mov	x1, x8
  43a2b4:	bl	423154 <skip_leading_chars>
  43a2b8:	ldr	x8, [sp, #3936]
  43a2bc:	str	x0, [x8, #2608]
  43a2c0:	ldr	x8, [sp, #3936]
  43a2c4:	ldr	x0, [x8, #2608]
  43a2c8:	bl	423ddc <isempty>
  43a2cc:	eor	w9, w0, #0x1
  43a2d0:	tbnz	w9, #0, 43a2d8 <udev_rule_apply_token_to_event+0x7d90>
  43a2d4:	b	43a77c <udev_rule_apply_token_to_event+0x8234>
  43a2d8:	ldr	x8, [sp, #3936]
  43a2dc:	ldr	x0, [x8, #2608]
  43a2e0:	mov	w1, #0x20                  	// #32
  43a2e4:	bl	40a8c0 <strchr@plt>
  43a2e8:	ldr	x8, [sp, #3936]
  43a2ec:	str	x0, [x8, #1496]
  43a2f0:	ldr	x9, [x8, #1496]
  43a2f4:	cbz	x9, 43a328 <udev_rule_apply_token_to_event+0x7de0>
  43a2f8:	ldr	x8, [sp, #3936]
  43a2fc:	ldr	x9, [x8, #1496]
  43a300:	add	x10, x9, #0x1
  43a304:	str	x10, [x8, #1496]
  43a308:	mov	w11, #0x0                   	// #0
  43a30c:	strb	w11, [x9]
  43a310:	ldr	x0, [x8, #1496]
  43a314:	mov	x9, xzr
  43a318:	mov	x1, x9
  43a31c:	bl	423154 <skip_leading_chars>
  43a320:	ldr	x8, [sp, #3936]
  43a324:	str	x0, [x8, #1496]
  43a328:	ldr	x8, [sp, #3936]
  43a32c:	ldr	x3, [x8, #2608]
  43a330:	add	x9, sp, #0x1, lsl #12
  43a334:	add	x9, x9, #0x60c
  43a338:	mov	x0, x9
  43a33c:	mov	x1, #0x400                 	// #1024
  43a340:	ldr	x2, [sp, #3896]
  43a344:	mov	x10, xzr
  43a348:	mov	x4, x10
  43a34c:	str	x9, [sp, #632]
  43a350:	bl	40b400 <strscpyl@plt>
  43a354:	ldr	x8, [sp, #3984]
  43a358:	ldr	x9, [x8, #1520]
  43a35c:	mov	x0, x9
  43a360:	ldr	x1, [sp, #632]
  43a364:	bl	40b490 <device_add_devlink@plt>
  43a368:	ldr	x8, [sp, #3984]
  43a36c:	str	w0, [x8, #440]
  43a370:	ldr	w11, [x8, #440]
  43a374:	cmp	w11, #0x0
  43a378:	cset	w11, ge  // ge = tcont
  43a37c:	tbnz	w11, #0, 43a580 <udev_rule_apply_token_to_event+0x8038>
  43a380:	ldr	x8, [sp, #3984]
  43a384:	ldr	x9, [x8, #1528]
  43a388:	ldr	x10, [sp, #3936]
  43a38c:	str	x9, [x10, #1488]
  43a390:	ldr	x9, [x10, #1488]
  43a394:	cbz	x9, 43a3ac <udev_rule_apply_token_to_event+0x7e64>
  43a398:	ldr	x8, [sp, #3936]
  43a39c:	ldr	x9, [x8, #1488]
  43a3a0:	ldr	x9, [x9, #32]
  43a3a4:	str	x9, [sp, #624]
  43a3a8:	b	43a3b4 <udev_rule_apply_token_to_event+0x7e6c>
  43a3ac:	mov	x8, xzr
  43a3b0:	str	x8, [sp, #624]
  43a3b4:	ldr	x8, [sp, #624]
  43a3b8:	ldr	x9, [sp, #3936]
  43a3bc:	str	x8, [x9, #1480]
  43a3c0:	ldr	x8, [x9, #1480]
  43a3c4:	cbz	x8, 43a3dc <udev_rule_apply_token_to_event+0x7e94>
  43a3c8:	ldr	x8, [sp, #3936]
  43a3cc:	ldr	x9, [x8, #1480]
  43a3d0:	ldr	x9, [x9, #8]
  43a3d4:	str	x9, [sp, #616]
  43a3d8:	b	43a3e4 <udev_rule_apply_token_to_event+0x7e9c>
  43a3dc:	mov	x8, xzr
  43a3e0:	str	x8, [sp, #616]
  43a3e4:	ldr	x8, [sp, #616]
  43a3e8:	ldr	x9, [sp, #3936]
  43a3ec:	str	x8, [x9, #1472]
  43a3f0:	ldr	x8, [x9, #1480]
  43a3f4:	cbz	x8, 43a40c <udev_rule_apply_token_to_event+0x7ec4>
  43a3f8:	ldr	x8, [sp, #3936]
  43a3fc:	ldr	x9, [x8, #1480]
  43a400:	ldr	x9, [x9]
  43a404:	str	x9, [sp, #608]
  43a408:	b	43a414 <udev_rule_apply_token_to_event+0x7ecc>
  43a40c:	mov	x8, xzr
  43a410:	str	x8, [sp, #608]
  43a414:	ldr	x8, [sp, #608]
  43a418:	ldr	x9, [sp, #3936]
  43a41c:	str	x8, [x9, #1464]
  43a420:	mov	x8, xzr
  43a424:	str	x8, [x9, #1448]
  43a428:	ldr	x8, [sp, #3984]
  43a42c:	ldr	x10, [x8, #1520]
  43a430:	str	x10, [x9, #1440]
  43a434:	mov	w11, #0x3                   	// #3
  43a438:	str	w11, [sp, #5572]
  43a43c:	ldr	w11, [x8, #440]
  43a440:	str	w11, [sp, #5568]
  43a444:	ldr	x10, [x9, #1440]
  43a448:	cbz	x10, 43a490 <udev_rule_apply_token_to_event+0x7f48>
  43a44c:	mov	w0, #0x1                   	// #1
  43a450:	bl	40a3f0 <log_get_max_level_realm@plt>
  43a454:	ldr	w8, [sp, #5572]
  43a458:	cmp	w0, w8
  43a45c:	cset	w8, ge  // ge = tcont
  43a460:	mov	w9, #0x1                   	// #1
  43a464:	eor	w8, w8, #0x1
  43a468:	eor	w8, w8, w9
  43a46c:	and	w8, w8, #0x1
  43a470:	mov	w1, w8
  43a474:	sxtw	x10, w1
  43a478:	cbz	x10, 43a490 <udev_rule_apply_token_to_event+0x7f48>
  43a47c:	ldr	x8, [sp, #3936]
  43a480:	ldr	x0, [x8, #1440]
  43a484:	add	x1, sp, #0x1, lsl #12
  43a488:	add	x1, x1, #0x5d0
  43a48c:	bl	40a860 <sd_device_get_sysname@plt>
  43a490:	ldr	w0, [sp, #5572]
  43a494:	ldr	w1, [sp, #5568]
  43a498:	ldr	x8, [sp, #3936]
  43a49c:	ldr	x9, [x8, #1448]
  43a4a0:	mov	x10, xzr
  43a4a4:	cmp	x9, #0x0
  43a4a8:	ldr	x9, [sp, #3912]
  43a4ac:	csel	x5, x9, x10, ne  // ne = any
  43a4b0:	ldr	x6, [x8, #1448]
  43a4b4:	ldr	x10, [x8, #1464]
  43a4b8:	str	w0, [sp, #604]
  43a4bc:	mov	x0, x10
  43a4c0:	str	w1, [sp, #600]
  43a4c4:	str	x5, [sp, #592]
  43a4c8:	str	x6, [sp, #584]
  43a4cc:	bl	424274 <strna>
  43a4d0:	ldr	x8, [sp, #3936]
  43a4d4:	ldr	x9, [x8, #1472]
  43a4d8:	str	x0, [sp, #576]
  43a4dc:	cbz	x9, 43a4f4 <udev_rule_apply_token_to_event+0x7fac>
  43a4e0:	ldr	x8, [sp, #3936]
  43a4e4:	ldr	x9, [x8, #1472]
  43a4e8:	ldr	w10, [x9, #8]
  43a4ec:	str	w10, [sp, #572]
  43a4f0:	b	43a4fc <udev_rule_apply_token_to_event+0x7fb4>
  43a4f4:	mov	w8, wzr
  43a4f8:	str	w8, [sp, #572]
  43a4fc:	ldr	w8, [sp, #572]
  43a500:	ldr	w0, [sp, #604]
  43a504:	ldr	w1, [sp, #600]
  43a508:	ldr	x2, [sp, #3928]
  43a50c:	mov	w3, #0x820                 	// #2080
  43a510:	ldr	x4, [sp, #3920]
  43a514:	ldr	x5, [sp, #592]
  43a518:	ldr	x6, [sp, #584]
  43a51c:	mov	x9, xzr
  43a520:	mov	x7, x9
  43a524:	mov	x10, sp
  43a528:	str	x9, [x10]
  43a52c:	mov	x9, sp
  43a530:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43a534:	add	x10, x10, #0xb25
  43a538:	str	x10, [x9, #8]
  43a53c:	mov	x9, sp
  43a540:	ldr	x10, [sp, #576]
  43a544:	str	x10, [x9, #16]
  43a548:	mov	x9, sp
  43a54c:	str	w8, [x9, #24]
  43a550:	mov	x9, sp
  43a554:	add	x11, sp, #0x1, lsl #12
  43a558:	add	x11, x11, #0x60c
  43a55c:	str	x11, [x9, #32]
  43a560:	bl	40a870 <log_object_internal@plt>
  43a564:	str	w0, [sp, #5564]
  43a568:	ldr	w8, [sp, #5564]
  43a56c:	str	w8, [sp, #5596]
  43a570:	ldr	w8, [sp, #5596]
  43a574:	ldr	x9, [sp, #3984]
  43a578:	str	w8, [x9, #1540]
  43a57c:	b	43b748 <udev_rule_apply_token_to_event+0x9200>
  43a580:	ldr	x8, [sp, #3984]
  43a584:	ldr	x9, [x8, #1528]
  43a588:	ldr	x10, [sp, #3936]
  43a58c:	str	x9, [x10, #1416]
  43a590:	ldr	x9, [x10, #1416]
  43a594:	cbz	x9, 43a5ac <udev_rule_apply_token_to_event+0x8064>
  43a598:	ldr	x8, [sp, #3936]
  43a59c:	ldr	x9, [x8, #1416]
  43a5a0:	ldr	x9, [x9, #32]
  43a5a4:	str	x9, [sp, #560]
  43a5a8:	b	43a5b4 <udev_rule_apply_token_to_event+0x806c>
  43a5ac:	mov	x8, xzr
  43a5b0:	str	x8, [sp, #560]
  43a5b4:	ldr	x8, [sp, #560]
  43a5b8:	ldr	x9, [sp, #3936]
  43a5bc:	str	x8, [x9, #1408]
  43a5c0:	ldr	x8, [x9, #1408]
  43a5c4:	cbz	x8, 43a5dc <udev_rule_apply_token_to_event+0x8094>
  43a5c8:	ldr	x8, [sp, #3936]
  43a5cc:	ldr	x9, [x8, #1408]
  43a5d0:	ldr	x9, [x9, #8]
  43a5d4:	str	x9, [sp, #552]
  43a5d8:	b	43a5e4 <udev_rule_apply_token_to_event+0x809c>
  43a5dc:	mov	x8, xzr
  43a5e0:	str	x8, [sp, #552]
  43a5e4:	ldr	x8, [sp, #552]
  43a5e8:	ldr	x9, [sp, #3936]
  43a5ec:	str	x8, [x9, #1400]
  43a5f0:	ldr	x8, [x9, #1408]
  43a5f4:	cbz	x8, 43a60c <udev_rule_apply_token_to_event+0x80c4>
  43a5f8:	ldr	x8, [sp, #3936]
  43a5fc:	ldr	x9, [x8, #1408]
  43a600:	ldr	x9, [x9]
  43a604:	str	x9, [sp, #544]
  43a608:	b	43a614 <udev_rule_apply_token_to_event+0x80cc>
  43a60c:	mov	x8, xzr
  43a610:	str	x8, [sp, #544]
  43a614:	ldr	x8, [sp, #544]
  43a618:	ldr	x9, [sp, #3936]
  43a61c:	str	x8, [x9, #1392]
  43a620:	mov	x8, xzr
  43a624:	str	x8, [x9, #1376]
  43a628:	ldr	x8, [sp, #3984]
  43a62c:	ldr	x10, [x8, #1520]
  43a630:	str	x10, [x9, #1368]
  43a634:	mov	w11, #0x7                   	// #7
  43a638:	str	w11, [sp, #5500]
  43a63c:	str	wzr, [sp, #5496]
  43a640:	ldr	x10, [x9, #1368]
  43a644:	cbz	x10, 43a68c <udev_rule_apply_token_to_event+0x8144>
  43a648:	mov	w0, #0x1                   	// #1
  43a64c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43a650:	ldr	w8, [sp, #5500]
  43a654:	cmp	w0, w8
  43a658:	cset	w8, ge  // ge = tcont
  43a65c:	mov	w9, #0x1                   	// #1
  43a660:	eor	w8, w8, #0x1
  43a664:	eor	w8, w8, w9
  43a668:	and	w8, w8, #0x1
  43a66c:	mov	w1, w8
  43a670:	sxtw	x10, w1
  43a674:	cbz	x10, 43a68c <udev_rule_apply_token_to_event+0x8144>
  43a678:	ldr	x8, [sp, #3936]
  43a67c:	ldr	x0, [x8, #1368]
  43a680:	add	x1, sp, #0x1, lsl #12
  43a684:	add	x1, x1, #0x588
  43a688:	bl	40a860 <sd_device_get_sysname@plt>
  43a68c:	ldr	w0, [sp, #5500]
  43a690:	ldr	w1, [sp, #5496]
  43a694:	ldr	x8, [sp, #3936]
  43a698:	ldr	x9, [x8, #1376]
  43a69c:	mov	x10, xzr
  43a6a0:	cmp	x9, #0x0
  43a6a4:	ldr	x9, [sp, #3912]
  43a6a8:	csel	x5, x9, x10, ne  // ne = any
  43a6ac:	ldr	x6, [x8, #1376]
  43a6b0:	ldr	x10, [x8, #1392]
  43a6b4:	str	w0, [sp, #540]
  43a6b8:	mov	x0, x10
  43a6bc:	str	w1, [sp, #536]
  43a6c0:	str	x5, [sp, #528]
  43a6c4:	str	x6, [sp, #520]
  43a6c8:	bl	424274 <strna>
  43a6cc:	ldr	x8, [sp, #3936]
  43a6d0:	ldr	x9, [x8, #1400]
  43a6d4:	str	x0, [sp, #512]
  43a6d8:	cbz	x9, 43a6f0 <udev_rule_apply_token_to_event+0x81a8>
  43a6dc:	ldr	x8, [sp, #3936]
  43a6e0:	ldr	x9, [x8, #1400]
  43a6e4:	ldr	w10, [x9, #8]
  43a6e8:	str	w10, [sp, #508]
  43a6ec:	b	43a6f8 <udev_rule_apply_token_to_event+0x81b0>
  43a6f0:	mov	w8, wzr
  43a6f4:	str	w8, [sp, #508]
  43a6f8:	ldr	w8, [sp, #508]
  43a6fc:	ldr	x9, [sp, #3936]
  43a700:	ldr	x10, [x9, #2608]
  43a704:	ldr	w0, [sp, #540]
  43a708:	ldr	w1, [sp, #536]
  43a70c:	ldr	x2, [sp, #3928]
  43a710:	mov	w3, #0x822                 	// #2082
  43a714:	ldr	x4, [sp, #3920]
  43a718:	ldr	x5, [sp, #528]
  43a71c:	ldr	x6, [sp, #520]
  43a720:	mov	x11, xzr
  43a724:	mov	x7, x11
  43a728:	mov	x12, sp
  43a72c:	str	x11, [x12]
  43a730:	mov	x11, sp
  43a734:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  43a738:	add	x12, x12, #0xb4a
  43a73c:	str	x12, [x11, #8]
  43a740:	mov	x11, sp
  43a744:	ldr	x12, [sp, #512]
  43a748:	str	x12, [x11, #16]
  43a74c:	mov	x11, sp
  43a750:	str	w8, [x11, #24]
  43a754:	mov	x11, sp
  43a758:	str	x10, [x11, #32]
  43a75c:	bl	40a870 <log_object_internal@plt>
  43a760:	str	w0, [sp, #5492]
  43a764:	ldr	w8, [sp, #5492]
  43a768:	str	w8, [sp, #5524]
  43a76c:	ldr	x9, [sp, #3936]
  43a770:	ldr	x10, [x9, #1496]
  43a774:	str	x10, [x9, #2608]
  43a778:	b	43a2c0 <udev_rule_apply_token_to_event+0x7d78>
  43a77c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43a780:	ldr	x8, [sp, #3984]
  43a784:	ldr	x9, [x8, #1488]
  43a788:	ldr	x9, [x9, #16]
  43a78c:	ldr	x10, [sp, #3936]
  43a790:	str	x9, [x10, #1344]
  43a794:	ldr	x0, [x10, #1344]
  43a798:	add	x1, sp, #0xf, lsl #12
  43a79c:	add	x1, x1, #0x448
  43a7a0:	mov	x2, #0x400                 	// #1024
  43a7a4:	mov	w11, wzr
  43a7a8:	and	w3, w11, #0x1
  43a7ac:	bl	40aea0 <util_resolve_subsys_kernel@plt>
  43a7b0:	cmp	w0, #0x0
  43a7b4:	cset	w11, ge  // ge = tcont
  43a7b8:	tbnz	w11, #0, 43a808 <udev_rule_apply_token_to_event+0x82c0>
  43a7bc:	ldr	x8, [sp, #3984]
  43a7c0:	ldr	x0, [x8, #1520]
  43a7c4:	add	x1, sp, #0xf, lsl #12
  43a7c8:	add	x1, x1, #0x440
  43a7cc:	bl	40abf0 <sd_device_get_syspath@plt>
  43a7d0:	cmp	w0, #0x0
  43a7d4:	cset	w9, lt  // lt = tstop
  43a7d8:	tbnz	w9, #0, 43a808 <udev_rule_apply_token_to_event+0x82c0>
  43a7dc:	ldr	x8, [sp, #3984]
  43a7e0:	ldr	x2, [x8, #456]
  43a7e4:	ldr	x9, [sp, #3936]
  43a7e8:	ldr	x4, [x9, #1344]
  43a7ec:	add	x0, sp, #0xf, lsl #12
  43a7f0:	add	x0, x0, #0x448
  43a7f4:	mov	x1, #0x400                 	// #1024
  43a7f8:	ldr	x3, [sp, #3904]
  43a7fc:	mov	x10, xzr
  43a800:	mov	x5, x10
  43a804:	bl	40b400 <strscpyl@plt>
  43a808:	add	x0, sp, #0xf, lsl #12
  43a80c:	add	x0, x0, #0x448
  43a810:	bl	43bdb4 <attr_subst_subdir>
  43a814:	ldr	x8, [sp, #3984]
  43a818:	str	w0, [x8, #440]
  43a81c:	ldr	w9, [x8, #440]
  43a820:	cmp	w9, #0x0
  43a824:	cset	w9, ge  // ge = tcont
  43a828:	tbnz	w9, #0, 43aa20 <udev_rule_apply_token_to_event+0x84d8>
  43a82c:	ldr	x8, [sp, #3984]
  43a830:	ldr	x9, [x8, #1528]
  43a834:	ldr	x10, [sp, #3936]
  43a838:	str	x9, [x10, #824]
  43a83c:	ldr	x9, [x10, #824]
  43a840:	cbz	x9, 43a858 <udev_rule_apply_token_to_event+0x8310>
  43a844:	ldr	x8, [sp, #3936]
  43a848:	ldr	x9, [x8, #824]
  43a84c:	ldr	x9, [x9, #32]
  43a850:	str	x9, [sp, #496]
  43a854:	b	43a860 <udev_rule_apply_token_to_event+0x8318>
  43a858:	mov	x8, xzr
  43a85c:	str	x8, [sp, #496]
  43a860:	ldr	x8, [sp, #496]
  43a864:	ldr	x9, [sp, #3936]
  43a868:	str	x8, [x9, #816]
  43a86c:	ldr	x8, [x9, #816]
  43a870:	cbz	x8, 43a888 <udev_rule_apply_token_to_event+0x8340>
  43a874:	ldr	x8, [sp, #3936]
  43a878:	ldr	x9, [x8, #816]
  43a87c:	ldr	x9, [x9, #8]
  43a880:	str	x9, [sp, #488]
  43a884:	b	43a890 <udev_rule_apply_token_to_event+0x8348>
  43a888:	mov	x8, xzr
  43a88c:	str	x8, [sp, #488]
  43a890:	ldr	x8, [sp, #488]
  43a894:	ldr	x9, [sp, #3936]
  43a898:	str	x8, [x9, #808]
  43a89c:	ldr	x8, [x9, #816]
  43a8a0:	cbz	x8, 43a8b8 <udev_rule_apply_token_to_event+0x8370>
  43a8a4:	ldr	x8, [sp, #3936]
  43a8a8:	ldr	x9, [x8, #816]
  43a8ac:	ldr	x9, [x9]
  43a8b0:	str	x9, [sp, #480]
  43a8b4:	b	43a8c0 <udev_rule_apply_token_to_event+0x8378>
  43a8b8:	mov	x8, xzr
  43a8bc:	str	x8, [sp, #480]
  43a8c0:	ldr	x8, [sp, #480]
  43a8c4:	ldr	x9, [sp, #3936]
  43a8c8:	str	x8, [x9, #800]
  43a8cc:	mov	x8, xzr
  43a8d0:	str	x8, [x9, #784]
  43a8d4:	ldr	x8, [sp, #3984]
  43a8d8:	ldr	x10, [x8, #1520]
  43a8dc:	str	x10, [x9, #776]
  43a8e0:	mov	w11, #0x3                   	// #3
  43a8e4:	str	w11, [sp, #4908]
  43a8e8:	ldr	w11, [x8, #440]
  43a8ec:	str	w11, [sp, #4904]
  43a8f0:	ldr	x10, [x9, #776]
  43a8f4:	cbz	x10, 43a93c <udev_rule_apply_token_to_event+0x83f4>
  43a8f8:	mov	w0, #0x1                   	// #1
  43a8fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  43a900:	ldr	w8, [sp, #4908]
  43a904:	cmp	w0, w8
  43a908:	cset	w8, ge  // ge = tcont
  43a90c:	mov	w9, #0x1                   	// #1
  43a910:	eor	w8, w8, #0x1
  43a914:	eor	w8, w8, w9
  43a918:	and	w8, w8, #0x1
  43a91c:	mov	w1, w8
  43a920:	sxtw	x10, w1
  43a924:	cbz	x10, 43a93c <udev_rule_apply_token_to_event+0x83f4>
  43a928:	ldr	x8, [sp, #3936]
  43a92c:	ldr	x0, [x8, #776]
  43a930:	add	x1, sp, #0x1, lsl #12
  43a934:	add	x1, x1, #0x338
  43a938:	bl	40a860 <sd_device_get_sysname@plt>
  43a93c:	ldr	w0, [sp, #4908]
  43a940:	ldr	w1, [sp, #4904]
  43a944:	ldr	x8, [sp, #3936]
  43a948:	ldr	x9, [x8, #784]
  43a94c:	mov	x10, xzr
  43a950:	cmp	x9, #0x0
  43a954:	ldr	x9, [sp, #3912]
  43a958:	csel	x5, x9, x10, ne  // ne = any
  43a95c:	ldr	x6, [x8, #784]
  43a960:	ldr	x10, [x8, #800]
  43a964:	str	w0, [sp, #476]
  43a968:	mov	x0, x10
  43a96c:	str	w1, [sp, #472]
  43a970:	str	x5, [sp, #464]
  43a974:	str	x6, [sp, #456]
  43a978:	bl	424274 <strna>
  43a97c:	ldr	x8, [sp, #3936]
  43a980:	ldr	x9, [x8, #808]
  43a984:	str	x0, [sp, #448]
  43a988:	cbz	x9, 43a9a0 <udev_rule_apply_token_to_event+0x8458>
  43a98c:	ldr	x8, [sp, #3936]
  43a990:	ldr	x9, [x8, #808]
  43a994:	ldr	w10, [x9, #8]
  43a998:	str	w10, [sp, #444]
  43a99c:	b	43a9a8 <udev_rule_apply_token_to_event+0x8460>
  43a9a0:	mov	w8, wzr
  43a9a4:	str	w8, [sp, #444]
  43a9a8:	ldr	w8, [sp, #444]
  43a9ac:	ldr	w0, [sp, #476]
  43a9b0:	ldr	w1, [sp, #472]
  43a9b4:	ldr	x2, [sp, #3928]
  43a9b8:	mov	w3, #0x831                 	// #2097
  43a9bc:	ldr	x4, [sp, #3920]
  43a9c0:	ldr	x5, [sp, #464]
  43a9c4:	ldr	x6, [sp, #456]
  43a9c8:	mov	x9, xzr
  43a9cc:	mov	x7, x9
  43a9d0:	mov	x10, sp
  43a9d4:	str	x9, [x10]
  43a9d8:	mov	x9, sp
  43a9dc:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43a9e0:	add	x10, x10, #0xb5a
  43a9e4:	str	x10, [x9, #8]
  43a9e8:	mov	x9, sp
  43a9ec:	ldr	x10, [sp, #448]
  43a9f0:	str	x10, [x9, #16]
  43a9f4:	mov	x9, sp
  43a9f8:	str	w8, [x9, #24]
  43a9fc:	mov	x9, sp
  43aa00:	add	x11, sp, #0xf, lsl #12
  43aa04:	add	x11, x11, #0x448
  43aa08:	str	x11, [x9, #32]
  43aa0c:	bl	40a870 <log_object_internal@plt>
  43aa10:	str	w0, [sp, #4900]
  43aa14:	ldr	w8, [sp, #4900]
  43aa18:	str	w8, [sp, #4932]
  43aa1c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43aa20:	ldr	x8, [sp, #3984]
  43aa24:	ldr	x0, [x8, #1512]
  43aa28:	ldr	x9, [x8, #1488]
  43aa2c:	ldr	x1, [x9, #8]
  43aa30:	add	x2, sp, #0x1, lsl #12
  43aa34:	add	x2, x2, #0x368
  43aa38:	mov	x3, #0x200                 	// #512
  43aa3c:	mov	w10, wzr
  43aa40:	and	w4, w10, #0x1
  43aa44:	bl	4183c0 <udev_event_apply_format>
  43aa48:	ldr	x8, [sp, #3984]
  43aa4c:	ldr	x9, [x8, #1528]
  43aa50:	ldr	x11, [sp, #3936]
  43aa54:	str	x9, [x11, #752]
  43aa58:	ldr	x9, [x11, #752]
  43aa5c:	cbz	x9, 43aa74 <udev_rule_apply_token_to_event+0x852c>
  43aa60:	ldr	x8, [sp, #3936]
  43aa64:	ldr	x9, [x8, #752]
  43aa68:	ldr	x9, [x9, #32]
  43aa6c:	str	x9, [sp, #432]
  43aa70:	b	43aa7c <udev_rule_apply_token_to_event+0x8534>
  43aa74:	mov	x8, xzr
  43aa78:	str	x8, [sp, #432]
  43aa7c:	ldr	x8, [sp, #432]
  43aa80:	ldr	x9, [sp, #3936]
  43aa84:	str	x8, [x9, #744]
  43aa88:	ldr	x8, [x9, #744]
  43aa8c:	cbz	x8, 43aaa4 <udev_rule_apply_token_to_event+0x855c>
  43aa90:	ldr	x8, [sp, #3936]
  43aa94:	ldr	x9, [x8, #744]
  43aa98:	ldr	x9, [x9, #8]
  43aa9c:	str	x9, [sp, #424]
  43aaa0:	b	43aaac <udev_rule_apply_token_to_event+0x8564>
  43aaa4:	mov	x8, xzr
  43aaa8:	str	x8, [sp, #424]
  43aaac:	ldr	x8, [sp, #424]
  43aab0:	ldr	x9, [sp, #3936]
  43aab4:	str	x8, [x9, #736]
  43aab8:	ldr	x8, [x9, #744]
  43aabc:	cbz	x8, 43aad4 <udev_rule_apply_token_to_event+0x858c>
  43aac0:	ldr	x8, [sp, #3936]
  43aac4:	ldr	x9, [x8, #744]
  43aac8:	ldr	x9, [x9]
  43aacc:	str	x9, [sp, #416]
  43aad0:	b	43aadc <udev_rule_apply_token_to_event+0x8594>
  43aad4:	mov	x8, xzr
  43aad8:	str	x8, [sp, #416]
  43aadc:	ldr	x8, [sp, #416]
  43aae0:	ldr	x9, [sp, #3936]
  43aae4:	str	x8, [x9, #728]
  43aae8:	mov	x8, xzr
  43aaec:	str	x8, [x9, #712]
  43aaf0:	ldr	x8, [sp, #3984]
  43aaf4:	ldr	x10, [x8, #1520]
  43aaf8:	str	x10, [x9, #704]
  43aafc:	mov	w11, #0x7                   	// #7
  43ab00:	str	w11, [sp, #4836]
  43ab04:	str	wzr, [sp, #4832]
  43ab08:	ldr	x10, [x9, #704]
  43ab0c:	cbz	x10, 43ab54 <udev_rule_apply_token_to_event+0x860c>
  43ab10:	mov	w0, #0x1                   	// #1
  43ab14:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ab18:	ldr	w8, [sp, #4836]
  43ab1c:	cmp	w0, w8
  43ab20:	cset	w8, ge  // ge = tcont
  43ab24:	mov	w9, #0x1                   	// #1
  43ab28:	eor	w8, w8, #0x1
  43ab2c:	eor	w8, w8, w9
  43ab30:	and	w8, w8, #0x1
  43ab34:	mov	w1, w8
  43ab38:	sxtw	x10, w1
  43ab3c:	cbz	x10, 43ab54 <udev_rule_apply_token_to_event+0x860c>
  43ab40:	ldr	x8, [sp, #3936]
  43ab44:	ldr	x0, [x8, #704]
  43ab48:	add	x1, sp, #0x1, lsl #12
  43ab4c:	add	x1, x1, #0x2f0
  43ab50:	bl	40a860 <sd_device_get_sysname@plt>
  43ab54:	ldr	w0, [sp, #4836]
  43ab58:	ldr	w1, [sp, #4832]
  43ab5c:	ldr	x8, [sp, #3936]
  43ab60:	ldr	x9, [x8, #712]
  43ab64:	mov	x10, xzr
  43ab68:	cmp	x9, #0x0
  43ab6c:	ldr	x9, [sp, #3912]
  43ab70:	csel	x5, x9, x10, ne  // ne = any
  43ab74:	ldr	x6, [x8, #712]
  43ab78:	ldr	x10, [x8, #728]
  43ab7c:	str	w0, [sp, #412]
  43ab80:	mov	x0, x10
  43ab84:	str	w1, [sp, #408]
  43ab88:	str	x5, [sp, #400]
  43ab8c:	str	x6, [sp, #392]
  43ab90:	bl	424274 <strna>
  43ab94:	ldr	x8, [sp, #3936]
  43ab98:	ldr	x9, [x8, #736]
  43ab9c:	str	x0, [sp, #384]
  43aba0:	cbz	x9, 43abb8 <udev_rule_apply_token_to_event+0x8670>
  43aba4:	ldr	x8, [sp, #3936]
  43aba8:	ldr	x9, [x8, #736]
  43abac:	ldr	w10, [x9, #8]
  43abb0:	str	w10, [sp, #380]
  43abb4:	b	43abc0 <udev_rule_apply_token_to_event+0x8678>
  43abb8:	mov	w8, wzr
  43abbc:	str	w8, [sp, #380]
  43abc0:	ldr	w8, [sp, #380]
  43abc4:	ldr	w0, [sp, #412]
  43abc8:	ldr	w1, [sp, #408]
  43abcc:	ldr	x2, [sp, #3928]
  43abd0:	mov	w3, #0x836                 	// #2102
  43abd4:	ldr	x4, [sp, #3920]
  43abd8:	ldr	x5, [sp, #400]
  43abdc:	ldr	x6, [sp, #392]
  43abe0:	mov	x9, xzr
  43abe4:	mov	x7, x9
  43abe8:	mov	x10, sp
  43abec:	str	x9, [x10]
  43abf0:	mov	x9, sp
  43abf4:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43abf8:	add	x10, x10, #0xb8f
  43abfc:	str	x10, [x9, #8]
  43ac00:	mov	x9, sp
  43ac04:	ldr	x10, [sp, #384]
  43ac08:	str	x10, [x9, #16]
  43ac0c:	mov	x9, sp
  43ac10:	str	w8, [x9, #24]
  43ac14:	mov	x9, sp
  43ac18:	add	x11, sp, #0xf, lsl #12
  43ac1c:	add	x11, x11, #0x448
  43ac20:	str	x11, [x9, #32]
  43ac24:	mov	x9, sp
  43ac28:	add	x12, sp, #0x1, lsl #12
  43ac2c:	add	x12, x12, #0x368
  43ac30:	str	x12, [x9, #40]
  43ac34:	str	x11, [sp, #368]
  43ac38:	str	x12, [sp, #360]
  43ac3c:	bl	40a870 <log_object_internal@plt>
  43ac40:	str	w0, [sp, #4828]
  43ac44:	ldr	w8, [sp, #4828]
  43ac48:	str	w8, [sp, #4860]
  43ac4c:	ldr	x0, [sp, #368]
  43ac50:	ldr	x1, [sp, #360]
  43ac54:	mov	w2, #0x2c                  	// #44
  43ac58:	bl	43c520 <write_string_file>
  43ac5c:	ldr	x9, [sp, #3984]
  43ac60:	str	w0, [x9, #440]
  43ac64:	ldr	w8, [x9, #440]
  43ac68:	cmp	w8, #0x0
  43ac6c:	cset	w8, ge  // ge = tcont
  43ac70:	tbnz	w8, #0, 43ae64 <udev_rule_apply_token_to_event+0x891c>
  43ac74:	ldr	x8, [sp, #3984]
  43ac78:	ldr	x9, [x8, #1528]
  43ac7c:	ldr	x10, [sp, #3936]
  43ac80:	str	x9, [x10, #680]
  43ac84:	ldr	x9, [x10, #680]
  43ac88:	cbz	x9, 43aca0 <udev_rule_apply_token_to_event+0x8758>
  43ac8c:	ldr	x8, [sp, #3936]
  43ac90:	ldr	x9, [x8, #680]
  43ac94:	ldr	x9, [x9, #32]
  43ac98:	str	x9, [sp, #352]
  43ac9c:	b	43aca8 <udev_rule_apply_token_to_event+0x8760>
  43aca0:	mov	x8, xzr
  43aca4:	str	x8, [sp, #352]
  43aca8:	ldr	x8, [sp, #352]
  43acac:	ldr	x9, [sp, #3936]
  43acb0:	str	x8, [x9, #672]
  43acb4:	ldr	x8, [x9, #672]
  43acb8:	cbz	x8, 43acd0 <udev_rule_apply_token_to_event+0x8788>
  43acbc:	ldr	x8, [sp, #3936]
  43acc0:	ldr	x9, [x8, #672]
  43acc4:	ldr	x9, [x9, #8]
  43acc8:	str	x9, [sp, #344]
  43accc:	b	43acd8 <udev_rule_apply_token_to_event+0x8790>
  43acd0:	mov	x8, xzr
  43acd4:	str	x8, [sp, #344]
  43acd8:	ldr	x8, [sp, #344]
  43acdc:	ldr	x9, [sp, #3936]
  43ace0:	str	x8, [x9, #664]
  43ace4:	ldr	x8, [x9, #672]
  43ace8:	cbz	x8, 43ad00 <udev_rule_apply_token_to_event+0x87b8>
  43acec:	ldr	x8, [sp, #3936]
  43acf0:	ldr	x9, [x8, #672]
  43acf4:	ldr	x9, [x9]
  43acf8:	str	x9, [sp, #336]
  43acfc:	b	43ad08 <udev_rule_apply_token_to_event+0x87c0>
  43ad00:	mov	x8, xzr
  43ad04:	str	x8, [sp, #336]
  43ad08:	ldr	x8, [sp, #336]
  43ad0c:	ldr	x9, [sp, #3936]
  43ad10:	str	x8, [x9, #656]
  43ad14:	mov	x8, xzr
  43ad18:	str	x8, [x9, #640]
  43ad1c:	ldr	x8, [sp, #3984]
  43ad20:	ldr	x10, [x8, #1520]
  43ad24:	str	x10, [x9, #632]
  43ad28:	mov	w11, #0x3                   	// #3
  43ad2c:	str	w11, [sp, #4764]
  43ad30:	ldr	w11, [x8, #440]
  43ad34:	str	w11, [sp, #4760]
  43ad38:	ldr	x10, [x9, #632]
  43ad3c:	cbz	x10, 43ad84 <udev_rule_apply_token_to_event+0x883c>
  43ad40:	mov	w0, #0x1                   	// #1
  43ad44:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ad48:	ldr	w8, [sp, #4764]
  43ad4c:	cmp	w0, w8
  43ad50:	cset	w8, ge  // ge = tcont
  43ad54:	mov	w9, #0x1                   	// #1
  43ad58:	eor	w8, w8, #0x1
  43ad5c:	eor	w8, w8, w9
  43ad60:	and	w8, w8, #0x1
  43ad64:	mov	w1, w8
  43ad68:	sxtw	x10, w1
  43ad6c:	cbz	x10, 43ad84 <udev_rule_apply_token_to_event+0x883c>
  43ad70:	ldr	x8, [sp, #3936]
  43ad74:	ldr	x0, [x8, #632]
  43ad78:	add	x1, sp, #0x1, lsl #12
  43ad7c:	add	x1, x1, #0x2a8
  43ad80:	bl	40a860 <sd_device_get_sysname@plt>
  43ad84:	ldr	w0, [sp, #4764]
  43ad88:	ldr	w1, [sp, #4760]
  43ad8c:	ldr	x8, [sp, #3936]
  43ad90:	ldr	x9, [x8, #640]
  43ad94:	mov	x10, xzr
  43ad98:	cmp	x9, #0x0
  43ad9c:	ldr	x9, [sp, #3912]
  43ada0:	csel	x5, x9, x10, ne  // ne = any
  43ada4:	ldr	x6, [x8, #640]
  43ada8:	ldr	x10, [x8, #656]
  43adac:	str	w0, [sp, #332]
  43adb0:	mov	x0, x10
  43adb4:	str	w1, [sp, #328]
  43adb8:	str	x5, [sp, #320]
  43adbc:	str	x6, [sp, #312]
  43adc0:	bl	424274 <strna>
  43adc4:	ldr	x8, [sp, #3936]
  43adc8:	ldr	x9, [x8, #664]
  43adcc:	str	x0, [sp, #304]
  43add0:	cbz	x9, 43ade8 <udev_rule_apply_token_to_event+0x88a0>
  43add4:	ldr	x8, [sp, #3936]
  43add8:	ldr	x9, [x8, #664]
  43addc:	ldr	w10, [x9, #8]
  43ade0:	str	w10, [sp, #300]
  43ade4:	b	43adf0 <udev_rule_apply_token_to_event+0x88a8>
  43ade8:	mov	w8, wzr
  43adec:	str	w8, [sp, #300]
  43adf0:	ldr	w8, [sp, #300]
  43adf4:	ldr	w0, [sp, #332]
  43adf8:	ldr	w1, [sp, #328]
  43adfc:	ldr	x2, [sp, #3928]
  43ae00:	mov	w3, #0x839                 	// #2105
  43ae04:	ldr	x4, [sp, #3920]
  43ae08:	ldr	x5, [sp, #320]
  43ae0c:	ldr	x6, [sp, #312]
  43ae10:	mov	x9, xzr
  43ae14:	mov	x7, x9
  43ae18:	mov	x10, sp
  43ae1c:	str	x9, [x10]
  43ae20:	mov	x9, sp
  43ae24:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43ae28:	add	x10, x10, #0xbac
  43ae2c:	str	x10, [x9, #8]
  43ae30:	mov	x9, sp
  43ae34:	ldr	x10, [sp, #304]
  43ae38:	str	x10, [x9, #16]
  43ae3c:	mov	x9, sp
  43ae40:	str	w8, [x9, #24]
  43ae44:	mov	x9, sp
  43ae48:	add	x11, sp, #0xf, lsl #12
  43ae4c:	add	x11, x11, #0x448
  43ae50:	str	x11, [x9, #32]
  43ae54:	bl	40a870 <log_object_internal@plt>
  43ae58:	str	w0, [sp, #4756]
  43ae5c:	ldr	w8, [sp, #4756]
  43ae60:	str	w8, [sp, #4788]
  43ae64:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43ae68:	ldr	x8, [sp, #3984]
  43ae6c:	ldr	x0, [x8, #1512]
  43ae70:	ldr	x9, [x8, #1488]
  43ae74:	ldr	x1, [x9, #16]
  43ae78:	add	x9, sp, #0xf, lsl #12
  43ae7c:	add	x9, x9, #0x448
  43ae80:	mov	x2, x9
  43ae84:	mov	x3, #0x400                 	// #1024
  43ae88:	mov	w10, wzr
  43ae8c:	and	w4, w10, #0x1
  43ae90:	str	x9, [sp, #288]
  43ae94:	str	w10, [sp, #284]
  43ae98:	bl	4183c0 <udev_event_apply_format>
  43ae9c:	ldr	x8, [sp, #3984]
  43aea0:	ldr	x9, [x8, #1512]
  43aea4:	ldr	x11, [x8, #1488]
  43aea8:	ldr	x1, [x11, #8]
  43aeac:	mov	x0, x9
  43aeb0:	add	x2, sp, #0x1, lsl #12
  43aeb4:	add	x2, x2, #0x94
  43aeb8:	mov	x3, #0x200                 	// #512
  43aebc:	ldr	w10, [sp, #284]
  43aec0:	and	w4, w10, #0x1
  43aec4:	bl	4183c0 <udev_event_apply_format>
  43aec8:	ldr	x8, [sp, #288]
  43aecc:	mov	x0, x8
  43aed0:	bl	40b3d0 <sysctl_normalize@plt>
  43aed4:	ldr	x8, [sp, #3984]
  43aed8:	ldr	x9, [x8, #1528]
  43aedc:	ldr	x11, [sp, #3936]
  43aee0:	str	x9, [x11, #96]
  43aee4:	ldr	x9, [x11, #96]
  43aee8:	cbz	x9, 43af00 <udev_rule_apply_token_to_event+0x89b8>
  43aeec:	ldr	x8, [sp, #3936]
  43aef0:	ldr	x9, [x8, #96]
  43aef4:	ldr	x9, [x9, #32]
  43aef8:	str	x9, [sp, #272]
  43aefc:	b	43af08 <udev_rule_apply_token_to_event+0x89c0>
  43af00:	mov	x8, xzr
  43af04:	str	x8, [sp, #272]
  43af08:	ldr	x8, [sp, #272]
  43af0c:	ldr	x9, [sp, #3936]
  43af10:	str	x8, [x9, #88]
  43af14:	ldr	x8, [x9, #88]
  43af18:	cbz	x8, 43af30 <udev_rule_apply_token_to_event+0x89e8>
  43af1c:	ldr	x8, [sp, #3936]
  43af20:	ldr	x9, [x8, #88]
  43af24:	ldr	x9, [x9, #8]
  43af28:	str	x9, [sp, #264]
  43af2c:	b	43af38 <udev_rule_apply_token_to_event+0x89f0>
  43af30:	mov	x8, xzr
  43af34:	str	x8, [sp, #264]
  43af38:	ldr	x8, [sp, #264]
  43af3c:	ldr	x9, [sp, #3936]
  43af40:	str	x8, [x9, #80]
  43af44:	ldr	x8, [x9, #88]
  43af48:	cbz	x8, 43af60 <udev_rule_apply_token_to_event+0x8a18>
  43af4c:	ldr	x8, [sp, #3936]
  43af50:	ldr	x9, [x8, #88]
  43af54:	ldr	x9, [x9]
  43af58:	str	x9, [sp, #256]
  43af5c:	b	43af68 <udev_rule_apply_token_to_event+0x8a20>
  43af60:	mov	x8, xzr
  43af64:	str	x8, [sp, #256]
  43af68:	ldr	x8, [sp, #256]
  43af6c:	ldr	x9, [sp, #3936]
  43af70:	str	x8, [x9, #72]
  43af74:	mov	x8, xzr
  43af78:	str	x8, [x9, #56]
  43af7c:	ldr	x8, [sp, #3984]
  43af80:	ldr	x10, [x8, #1520]
  43af84:	str	x10, [x9, #48]
  43af88:	mov	w11, #0x7                   	// #7
  43af8c:	str	w11, [sp, #4180]
  43af90:	str	wzr, [sp, #4176]
  43af94:	ldr	x10, [x9, #48]
  43af98:	cbz	x10, 43afe0 <udev_rule_apply_token_to_event+0x8a98>
  43af9c:	mov	w0, #0x1                   	// #1
  43afa0:	bl	40a3f0 <log_get_max_level_realm@plt>
  43afa4:	ldr	w8, [sp, #4180]
  43afa8:	cmp	w0, w8
  43afac:	cset	w8, ge  // ge = tcont
  43afb0:	mov	w9, #0x1                   	// #1
  43afb4:	eor	w8, w8, #0x1
  43afb8:	eor	w8, w8, w9
  43afbc:	and	w8, w8, #0x1
  43afc0:	mov	w1, w8
  43afc4:	sxtw	x10, w1
  43afc8:	cbz	x10, 43afe0 <udev_rule_apply_token_to_event+0x8a98>
  43afcc:	ldr	x8, [sp, #3936]
  43afd0:	ldr	x0, [x8, #48]
  43afd4:	add	x1, sp, #0x1, lsl #12
  43afd8:	add	x1, x1, #0x60
  43afdc:	bl	40a860 <sd_device_get_sysname@plt>
  43afe0:	ldr	w0, [sp, #4180]
  43afe4:	ldr	w1, [sp, #4176]
  43afe8:	ldr	x8, [sp, #3936]
  43afec:	ldr	x9, [x8, #56]
  43aff0:	mov	x10, xzr
  43aff4:	cmp	x9, #0x0
  43aff8:	ldr	x9, [sp, #3912]
  43affc:	csel	x5, x9, x10, ne  // ne = any
  43b000:	ldr	x6, [x8, #56]
  43b004:	ldr	x10, [x8, #72]
  43b008:	str	w0, [sp, #252]
  43b00c:	mov	x0, x10
  43b010:	str	w1, [sp, #248]
  43b014:	str	x5, [sp, #240]
  43b018:	str	x6, [sp, #232]
  43b01c:	bl	424274 <strna>
  43b020:	ldr	x8, [sp, #3936]
  43b024:	ldr	x9, [x8, #80]
  43b028:	str	x0, [sp, #224]
  43b02c:	cbz	x9, 43b044 <udev_rule_apply_token_to_event+0x8afc>
  43b030:	ldr	x8, [sp, #3936]
  43b034:	ldr	x9, [x8, #80]
  43b038:	ldr	w10, [x9, #8]
  43b03c:	str	w10, [sp, #220]
  43b040:	b	43b04c <udev_rule_apply_token_to_event+0x8b04>
  43b044:	mov	w8, wzr
  43b048:	str	w8, [sp, #220]
  43b04c:	ldr	w8, [sp, #220]
  43b050:	ldr	w0, [sp, #252]
  43b054:	ldr	w1, [sp, #248]
  43b058:	ldr	x2, [sp, #3928]
  43b05c:	mov	w3, #0x842                 	// #2114
  43b060:	ldr	x4, [sp, #3920]
  43b064:	ldr	x5, [sp, #240]
  43b068:	ldr	x6, [sp, #232]
  43b06c:	mov	x9, xzr
  43b070:	mov	x7, x9
  43b074:	mov	x10, sp
  43b078:	str	x9, [x10]
  43b07c:	mov	x9, sp
  43b080:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43b084:	add	x10, x10, #0xbd9
  43b088:	str	x10, [x9, #8]
  43b08c:	mov	x9, sp
  43b090:	ldr	x10, [sp, #224]
  43b094:	str	x10, [x9, #16]
  43b098:	mov	x9, sp
  43b09c:	str	w8, [x9, #24]
  43b0a0:	mov	x9, sp
  43b0a4:	add	x11, sp, #0xf, lsl #12
  43b0a8:	add	x11, x11, #0x448
  43b0ac:	str	x11, [x9, #32]
  43b0b0:	mov	x9, sp
  43b0b4:	add	x12, sp, #0x1, lsl #12
  43b0b8:	add	x12, x12, #0x94
  43b0bc:	str	x12, [x9, #40]
  43b0c0:	str	x11, [sp, #208]
  43b0c4:	str	x12, [sp, #200]
  43b0c8:	bl	40a870 <log_object_internal@plt>
  43b0cc:	str	w0, [sp, #4172]
  43b0d0:	ldr	w8, [sp, #4172]
  43b0d4:	str	w8, [sp, #4204]
  43b0d8:	ldr	x0, [sp, #208]
  43b0dc:	ldr	x1, [sp, #200]
  43b0e0:	bl	40b4a0 <sysctl_write@plt>
  43b0e4:	ldr	x9, [sp, #3984]
  43b0e8:	str	w0, [x9, #440]
  43b0ec:	ldr	w8, [x9, #440]
  43b0f0:	cmp	w8, #0x0
  43b0f4:	cset	w8, ge  // ge = tcont
  43b0f8:	tbnz	w8, #0, 43b2f8 <udev_rule_apply_token_to_event+0x8db0>
  43b0fc:	ldr	x8, [sp, #3984]
  43b100:	ldr	x9, [x8, #1528]
  43b104:	ldr	x10, [sp, #3936]
  43b108:	str	x9, [x10, #24]
  43b10c:	ldr	x9, [x10, #24]
  43b110:	cbz	x9, 43b128 <udev_rule_apply_token_to_event+0x8be0>
  43b114:	ldr	x8, [sp, #3936]
  43b118:	ldr	x9, [x8, #24]
  43b11c:	ldr	x9, [x9, #32]
  43b120:	str	x9, [sp, #192]
  43b124:	b	43b130 <udev_rule_apply_token_to_event+0x8be8>
  43b128:	mov	x8, xzr
  43b12c:	str	x8, [sp, #192]
  43b130:	ldr	x8, [sp, #192]
  43b134:	ldr	x9, [sp, #3936]
  43b138:	str	x8, [x9, #16]
  43b13c:	ldr	x8, [x9, #16]
  43b140:	cbz	x8, 43b158 <udev_rule_apply_token_to_event+0x8c10>
  43b144:	ldr	x8, [sp, #3936]
  43b148:	ldr	x9, [x8, #16]
  43b14c:	ldr	x9, [x9, #8]
  43b150:	str	x9, [sp, #184]
  43b154:	b	43b160 <udev_rule_apply_token_to_event+0x8c18>
  43b158:	mov	x8, xzr
  43b15c:	str	x8, [sp, #184]
  43b160:	ldr	x8, [sp, #184]
  43b164:	ldr	x9, [sp, #3936]
  43b168:	str	x8, [x9, #8]
  43b16c:	ldr	x8, [x9, #16]
  43b170:	cbz	x8, 43b188 <udev_rule_apply_token_to_event+0x8c40>
  43b174:	ldr	x8, [sp, #3936]
  43b178:	ldr	x9, [x8, #16]
  43b17c:	ldr	x9, [x9]
  43b180:	str	x9, [sp, #176]
  43b184:	b	43b190 <udev_rule_apply_token_to_event+0x8c48>
  43b188:	mov	x8, xzr
  43b18c:	str	x8, [sp, #176]
  43b190:	ldr	x8, [sp, #176]
  43b194:	ldr	x9, [sp, #3936]
  43b198:	str	x8, [x9]
  43b19c:	mov	x8, xzr
  43b1a0:	str	x8, [sp, #4120]
  43b1a4:	ldr	x8, [sp, #3984]
  43b1a8:	ldr	x10, [x8, #1520]
  43b1ac:	str	x10, [sp, #4112]
  43b1b0:	mov	w11, #0x3                   	// #3
  43b1b4:	str	w11, [sp, #4108]
  43b1b8:	ldr	w11, [x8, #440]
  43b1bc:	str	w11, [sp, #4104]
  43b1c0:	ldr	x10, [sp, #4112]
  43b1c4:	cbz	x10, 43b208 <udev_rule_apply_token_to_event+0x8cc0>
  43b1c8:	mov	w0, #0x1                   	// #1
  43b1cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  43b1d0:	ldr	w8, [sp, #4108]
  43b1d4:	cmp	w0, w8
  43b1d8:	cset	w8, ge  // ge = tcont
  43b1dc:	mov	w9, #0x1                   	// #1
  43b1e0:	eor	w8, w8, #0x1
  43b1e4:	eor	w8, w8, w9
  43b1e8:	and	w8, w8, #0x1
  43b1ec:	mov	w1, w8
  43b1f0:	sxtw	x10, w1
  43b1f4:	cbz	x10, 43b208 <udev_rule_apply_token_to_event+0x8cc0>
  43b1f8:	ldr	x0, [sp, #4112]
  43b1fc:	add	x1, sp, #0x1, lsl #12
  43b200:	add	x1, x1, #0x18
  43b204:	bl	40a860 <sd_device_get_sysname@plt>
  43b208:	ldr	w0, [sp, #4108]
  43b20c:	ldr	w1, [sp, #4104]
  43b210:	ldr	x8, [sp, #4120]
  43b214:	mov	x9, xzr
  43b218:	cmp	x8, #0x0
  43b21c:	ldr	x8, [sp, #3912]
  43b220:	csel	x5, x8, x9, ne  // ne = any
  43b224:	ldr	x6, [sp, #4120]
  43b228:	ldr	x9, [sp, #3936]
  43b22c:	ldr	x10, [x9]
  43b230:	str	w0, [sp, #172]
  43b234:	mov	x0, x10
  43b238:	str	w1, [sp, #168]
  43b23c:	str	x5, [sp, #160]
  43b240:	str	x6, [sp, #152]
  43b244:	bl	424274 <strna>
  43b248:	ldr	x8, [sp, #3936]
  43b24c:	ldr	x9, [x8, #8]
  43b250:	str	x0, [sp, #144]
  43b254:	cbz	x9, 43b26c <udev_rule_apply_token_to_event+0x8d24>
  43b258:	ldr	x8, [sp, #3936]
  43b25c:	ldr	x9, [x8, #8]
  43b260:	ldr	w10, [x9, #8]
  43b264:	str	w10, [sp, #140]
  43b268:	b	43b274 <udev_rule_apply_token_to_event+0x8d2c>
  43b26c:	mov	w8, wzr
  43b270:	str	w8, [sp, #140]
  43b274:	ldr	w8, [sp, #140]
  43b278:	ldr	w0, [sp, #172]
  43b27c:	ldr	w1, [sp, #168]
  43b280:	ldr	x2, [sp, #3928]
  43b284:	mov	w3, #0x845                 	// #2117
  43b288:	ldr	x4, [sp, #3920]
  43b28c:	ldr	x5, [sp, #160]
  43b290:	ldr	x6, [sp, #152]
  43b294:	mov	x9, xzr
  43b298:	mov	x7, x9
  43b29c:	mov	x10, sp
  43b2a0:	str	x9, [x10]
  43b2a4:	mov	x9, sp
  43b2a8:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43b2ac:	add	x10, x10, #0xbf8
  43b2b0:	str	x10, [x9, #8]
  43b2b4:	mov	x9, sp
  43b2b8:	ldr	x10, [sp, #144]
  43b2bc:	str	x10, [x9, #16]
  43b2c0:	mov	x9, sp
  43b2c4:	str	w8, [x9, #24]
  43b2c8:	mov	x9, sp
  43b2cc:	add	x11, sp, #0xf, lsl #12
  43b2d0:	add	x11, x11, #0x448
  43b2d4:	str	x11, [x9, #32]
  43b2d8:	mov	x9, sp
  43b2dc:	add	x11, sp, #0x1, lsl #12
  43b2e0:	add	x11, x11, #0x94
  43b2e4:	str	x11, [x9, #40]
  43b2e8:	bl	40a870 <log_object_internal@plt>
  43b2ec:	str	w0, [sp, #4100]
  43b2f0:	ldr	w8, [sp, #4100]
  43b2f4:	str	w8, [sp, #4132]
  43b2f8:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43b2fc:	mov	x8, xzr
  43b300:	str	x8, [sp, #4088]
  43b304:	ldr	x8, [sp, #3984]
  43b308:	ldr	x9, [x8, #1512]
  43b30c:	ldrh	w10, [x9, #104]
  43b310:	mov	w11, #0xf                   	// #15
  43b314:	lsr	w10, w10, w11
  43b318:	tbnz	w10, #0, 43b320 <udev_rule_apply_token_to_event+0x8dd8>
  43b31c:	b	43b330 <udev_rule_apply_token_to_event+0x8de8>
  43b320:	mov	w8, #0x8                   	// #8
  43b324:	ldr	x9, [sp, #3976]
  43b328:	str	w8, [x9, #1300]
  43b32c:	b	43b6fc <udev_rule_apply_token_to_event+0x91b4>
  43b330:	ldr	x8, [sp, #3984]
  43b334:	ldr	x9, [x8, #1488]
  43b338:	ldr	w10, [x9]
  43b33c:	lsl	w10, w10, #16
  43b340:	asr	w10, w10, #24
  43b344:	cmp	w10, #0x5
  43b348:	b.ne	43b364 <udev_rule_apply_token_to_event+0x8e1c>  // b.any
  43b34c:	ldr	x8, [sp, #3984]
  43b350:	ldr	x9, [x8, #1512]
  43b354:	ldrh	w10, [x9, #104]
  43b358:	and	w10, w10, #0x7fff
  43b35c:	orr	w10, w10, #0xffff8000
  43b360:	strh	w10, [x9, #104]
  43b364:	mov	w8, #0x0                   	// #0
  43b368:	strb	w8, [sp, #4087]
  43b36c:	ldr	x9, [sp, #3984]
  43b370:	ldr	x10, [x9, #1488]
  43b374:	ldr	w8, [x10]
  43b378:	lsl	w8, w8, #16
  43b37c:	asr	w8, w8, #24
  43b380:	subs	w8, w8, #0x4
  43b384:	mov	w11, #0x1                   	// #1
  43b388:	cmp	w8, #0x1
  43b38c:	cset	w8, ls  // ls = plast
  43b390:	eor	w8, w8, w11
  43b394:	tbnz	w8, #0, 43b3a8 <udev_rule_apply_token_to_event+0x8e60>
  43b398:	b	43b39c <udev_rule_apply_token_to_event+0x8e54>
  43b39c:	mov	w8, #0x1                   	// #1
  43b3a0:	strb	w8, [sp, #4087]
  43b3a4:	b	43b3a8 <udev_rule_apply_token_to_event+0x8e60>
  43b3a8:	ldrb	w8, [sp, #4087]
  43b3ac:	and	w8, w8, #0x1
  43b3b0:	strb	w8, [sp, #4086]
  43b3b4:	ldrb	w8, [sp, #4086]
  43b3b8:	tbnz	w8, #0, 43b3c0 <udev_rule_apply_token_to_event+0x8e78>
  43b3bc:	b	43b3d0 <udev_rule_apply_token_to_event+0x8e88>
  43b3c0:	ldr	x8, [sp, #3984]
  43b3c4:	ldr	x9, [x8, #1512]
  43b3c8:	ldr	x0, [x9, #64]
  43b3cc:	bl	43c55c <ordered_hashmap_clear_free_key>
  43b3d0:	ldr	x8, [sp, #3984]
  43b3d4:	ldr	x9, [x8, #1512]
  43b3d8:	add	x0, x9, #0x40
  43b3dc:	mov	x9, xzr
  43b3e0:	mov	x1, x9
  43b3e4:	bl	40b440 <internal_ordered_hashmap_ensure_allocated@plt>
  43b3e8:	ldr	x8, [sp, #3984]
  43b3ec:	str	w0, [x8, #440]
  43b3f0:	ldr	w10, [x8, #440]
  43b3f4:	cmp	w10, #0x0
  43b3f8:	cset	w10, ge  // ge = tcont
  43b3fc:	tbnz	w10, #0, 43b434 <udev_rule_apply_token_to_event+0x8eec>
  43b400:	mov	w8, #0x1                   	// #1
  43b404:	mov	w0, w8
  43b408:	ldr	x1, [sp, #3928]
  43b40c:	mov	w2, #0x856                 	// #2134
  43b410:	ldr	x3, [sp, #3920]
  43b414:	str	w8, [sp, #136]
  43b418:	bl	40a5e0 <log_oom_internal@plt>
  43b41c:	ldr	x9, [sp, #3984]
  43b420:	str	w0, [x9, #1540]
  43b424:	ldr	w8, [sp, #136]
  43b428:	ldr	x10, [sp, #3976]
  43b42c:	str	w8, [x10, #1300]
  43b430:	b	43b6fc <udev_rule_apply_token_to_event+0x91b4>
  43b434:	ldr	x8, [sp, #3984]
  43b438:	ldr	x0, [x8, #1512]
  43b43c:	ldr	x9, [x8, #1488]
  43b440:	ldr	x1, [x9, #8]
  43b444:	add	x9, sp, #0xf, lsl #12
  43b448:	add	x9, x9, #0x448
  43b44c:	mov	x2, x9
  43b450:	mov	x3, #0x400                 	// #1024
  43b454:	mov	w10, wzr
  43b458:	and	w4, w10, #0x1
  43b45c:	str	x9, [sp, #128]
  43b460:	bl	4183c0 <udev_event_apply_format>
  43b464:	ldr	x8, [sp, #128]
  43b468:	mov	x0, x8
  43b46c:	bl	40a910 <strdup@plt>
  43b470:	str	x0, [sp, #4088]
  43b474:	ldr	x8, [sp, #4088]
  43b478:	cbnz	x8, 43b4b0 <udev_rule_apply_token_to_event+0x8f68>
  43b47c:	mov	w8, #0x1                   	// #1
  43b480:	mov	w0, w8
  43b484:	ldr	x1, [sp, #3928]
  43b488:	mov	w2, #0x85c                 	// #2140
  43b48c:	ldr	x3, [sp, #3920]
  43b490:	str	w8, [sp, #124]
  43b494:	bl	40a5e0 <log_oom_internal@plt>
  43b498:	ldr	x9, [sp, #3984]
  43b49c:	str	w0, [x9, #1540]
  43b4a0:	ldr	w8, [sp, #124]
  43b4a4:	ldr	x10, [sp, #3976]
  43b4a8:	str	w8, [x10, #1300]
  43b4ac:	b	43b6fc <udev_rule_apply_token_to_event+0x91b4>
  43b4b0:	ldr	x8, [sp, #3984]
  43b4b4:	ldr	x9, [x8, #1512]
  43b4b8:	ldr	x0, [x9, #64]
  43b4bc:	ldr	x1, [sp, #4088]
  43b4c0:	ldr	x9, [x8, #1488]
  43b4c4:	ldr	x2, [x9, #16]
  43b4c8:	bl	43c4ec <ordered_hashmap_put>
  43b4cc:	ldr	x8, [sp, #3984]
  43b4d0:	str	w0, [x8, #440]
  43b4d4:	ldr	w10, [x8, #440]
  43b4d8:	cmp	w10, #0x0
  43b4dc:	cset	w10, ge  // ge = tcont
  43b4e0:	tbnz	w10, #0, 43b518 <udev_rule_apply_token_to_event+0x8fd0>
  43b4e4:	mov	w8, #0x1                   	// #1
  43b4e8:	mov	w0, w8
  43b4ec:	ldr	x1, [sp, #3928]
  43b4f0:	mov	w2, #0x860                 	// #2144
  43b4f4:	ldr	x3, [sp, #3920]
  43b4f8:	str	w8, [sp, #120]
  43b4fc:	bl	40a5e0 <log_oom_internal@plt>
  43b500:	ldr	x9, [sp, #3984]
  43b504:	str	w0, [x9, #1540]
  43b508:	ldr	w8, [sp, #120]
  43b50c:	ldr	x10, [sp, #3976]
  43b510:	str	w8, [x10, #1300]
  43b514:	b	43b6fc <udev_rule_apply_token_to_event+0x91b4>
  43b518:	ldr	x8, [sp, #4088]
  43b51c:	str	x8, [sp, #4072]
  43b520:	mov	x8, xzr
  43b524:	str	x8, [sp, #4088]
  43b528:	ldr	x8, [sp, #4072]
  43b52c:	str	x8, [sp, #4064]
  43b530:	ldr	x8, [sp, #3984]
  43b534:	ldr	x9, [x8, #1528]
  43b538:	str	x9, [sp, #4056]
  43b53c:	ldr	x9, [sp, #4056]
  43b540:	cbz	x9, 43b554 <udev_rule_apply_token_to_event+0x900c>
  43b544:	ldr	x8, [sp, #4056]
  43b548:	ldr	x8, [x8, #32]
  43b54c:	str	x8, [sp, #112]
  43b550:	b	43b55c <udev_rule_apply_token_to_event+0x9014>
  43b554:	mov	x8, xzr
  43b558:	str	x8, [sp, #112]
  43b55c:	ldr	x8, [sp, #112]
  43b560:	str	x8, [sp, #4048]
  43b564:	ldr	x8, [sp, #4048]
  43b568:	cbz	x8, 43b57c <udev_rule_apply_token_to_event+0x9034>
  43b56c:	ldr	x8, [sp, #4048]
  43b570:	ldr	x8, [x8, #8]
  43b574:	str	x8, [sp, #104]
  43b578:	b	43b584 <udev_rule_apply_token_to_event+0x903c>
  43b57c:	mov	x8, xzr
  43b580:	str	x8, [sp, #104]
  43b584:	ldr	x8, [sp, #104]
  43b588:	str	x8, [sp, #4040]
  43b58c:	ldr	x8, [sp, #4048]
  43b590:	cbz	x8, 43b5a4 <udev_rule_apply_token_to_event+0x905c>
  43b594:	ldr	x8, [sp, #4048]
  43b598:	ldr	x8, [x8]
  43b59c:	str	x8, [sp, #96]
  43b5a0:	b	43b5ac <udev_rule_apply_token_to_event+0x9064>
  43b5a4:	mov	x8, xzr
  43b5a8:	str	x8, [sp, #96]
  43b5ac:	ldr	x8, [sp, #96]
  43b5b0:	str	x8, [sp, #4032]
  43b5b4:	mov	x8, xzr
  43b5b8:	str	x8, [sp, #4016]
  43b5bc:	ldr	x8, [sp, #3984]
  43b5c0:	ldr	x9, [x8, #1520]
  43b5c4:	str	x9, [sp, #4008]
  43b5c8:	mov	w10, #0x7                   	// #7
  43b5cc:	str	w10, [sp, #4004]
  43b5d0:	str	wzr, [sp, #4000]
  43b5d4:	ldr	x9, [sp, #4008]
  43b5d8:	cbz	x9, 43b618 <udev_rule_apply_token_to_event+0x90d0>
  43b5dc:	mov	w0, #0x1                   	// #1
  43b5e0:	bl	40a3f0 <log_get_max_level_realm@plt>
  43b5e4:	ldr	w8, [sp, #4004]
  43b5e8:	cmp	w0, w8
  43b5ec:	cset	w8, ge  // ge = tcont
  43b5f0:	mov	w9, #0x1                   	// #1
  43b5f4:	eor	w8, w8, #0x1
  43b5f8:	eor	w8, w8, w9
  43b5fc:	and	w8, w8, #0x1
  43b600:	mov	w1, w8
  43b604:	sxtw	x10, w1
  43b608:	cbz	x10, 43b618 <udev_rule_apply_token_to_event+0x90d0>
  43b60c:	ldr	x0, [sp, #4008]
  43b610:	add	x1, sp, #0xfb0
  43b614:	bl	40a860 <sd_device_get_sysname@plt>
  43b618:	ldr	w0, [sp, #4004]
  43b61c:	ldr	w1, [sp, #4000]
  43b620:	ldr	x8, [sp, #4016]
  43b624:	mov	x9, xzr
  43b628:	cmp	x8, #0x0
  43b62c:	ldr	x8, [sp, #3912]
  43b630:	csel	x5, x8, x9, ne  // ne = any
  43b634:	ldr	x6, [sp, #4016]
  43b638:	ldr	x9, [sp, #4032]
  43b63c:	str	w0, [sp, #92]
  43b640:	mov	x0, x9
  43b644:	str	w1, [sp, #88]
  43b648:	str	x5, [sp, #80]
  43b64c:	str	x6, [sp, #72]
  43b650:	bl	424274 <strna>
  43b654:	ldr	x8, [sp, #4040]
  43b658:	str	x0, [sp, #64]
  43b65c:	cbz	x8, 43b670 <udev_rule_apply_token_to_event+0x9128>
  43b660:	ldr	x8, [sp, #4040]
  43b664:	ldr	w9, [x8, #8]
  43b668:	str	w9, [sp, #60]
  43b66c:	b	43b678 <udev_rule_apply_token_to_event+0x9130>
  43b670:	mov	w8, wzr
  43b674:	str	w8, [sp, #60]
  43b678:	ldr	w8, [sp, #60]
  43b67c:	ldr	x9, [sp, #3984]
  43b680:	ldr	x10, [x9, #1488]
  43b684:	ldr	x10, [x10, #8]
  43b688:	ldr	w0, [sp, #92]
  43b68c:	ldr	w1, [sp, #88]
  43b690:	ldr	x2, [sp, #3928]
  43b694:	mov	w3, #0x864                 	// #2148
  43b698:	ldr	x4, [sp, #3920]
  43b69c:	ldr	x5, [sp, #80]
  43b6a0:	ldr	x6, [sp, #72]
  43b6a4:	mov	x11, xzr
  43b6a8:	mov	x7, x11
  43b6ac:	mov	x12, sp
  43b6b0:	str	x11, [x12]
  43b6b4:	mov	x11, sp
  43b6b8:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  43b6bc:	add	x12, x12, #0xc2c
  43b6c0:	str	x12, [x11, #8]
  43b6c4:	mov	x11, sp
  43b6c8:	ldr	x12, [sp, #64]
  43b6cc:	str	x12, [x11, #16]
  43b6d0:	mov	x11, sp
  43b6d4:	str	w8, [x11, #24]
  43b6d8:	mov	x11, sp
  43b6dc:	str	x10, [x11, #32]
  43b6e0:	bl	40a870 <log_object_internal@plt>
  43b6e4:	str	w0, [sp, #3996]
  43b6e8:	ldr	w8, [sp, #3996]
  43b6ec:	str	w8, [sp, #4028]
  43b6f0:	mov	w8, #0x8                   	// #8
  43b6f4:	ldr	x9, [sp, #3976]
  43b6f8:	str	w8, [x9, #1300]
  43b6fc:	add	x0, sp, #0xff8
  43b700:	bl	4230c8 <freep>
  43b704:	ldr	x8, [sp, #3976]
  43b708:	ldr	w9, [x8, #1300]
  43b70c:	cmp	w9, #0x1
  43b710:	b.eq	43b748 <udev_rule_apply_token_to_event+0x9200>  // b.none
  43b714:	b	43b718 <udev_rule_apply_token_to_event+0x91d0>
  43b718:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43b71c:	b	43b73c <udev_rule_apply_token_to_event+0x91f4>
  43b720:	mov	w0, #0x1                   	// #1
  43b724:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43b728:	add	x1, x1, #0xc3b
  43b72c:	ldr	x2, [sp, #3928]
  43b730:	mov	w3, #0x86b                 	// #2155
  43b734:	ldr	x4, [sp, #3880]
  43b738:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  43b73c:	mov	w8, #0x1                   	// #1
  43b740:	ldr	x9, [sp, #3984]
  43b744:	str	w8, [x9, #1540]
  43b748:	ldr	x8, [sp, #3984]
  43b74c:	ldr	w0, [x8, #1540]
  43b750:	add	sp, sp, #0xf, lsl #12
  43b754:	add	sp, sp, #0x880
  43b758:	ldr	x28, [sp, #16]
  43b75c:	ldp	x29, x30, [sp], #32
  43b760:	ret

000000000043b764 <token_match_string>:
  43b764:	sub	sp, sp, #0x60
  43b768:	stp	x29, x30, [sp, #80]
  43b76c:	add	x29, sp, #0x50
  43b770:	mov	w8, #0x0                   	// #0
  43b774:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  43b778:	add	x9, x9, #0x48a
  43b77c:	add	x9, x9, #0x3
  43b780:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43b784:	add	x10, x10, #0xc4e
  43b788:	stur	x0, [x29, #-8]
  43b78c:	stur	x1, [x29, #-16]
  43b790:	sturb	w8, [x29, #-33]
  43b794:	str	x9, [sp, #32]
  43b798:	str	x10, [sp, #24]
  43b79c:	ldur	x8, [x29, #-8]
  43b7a0:	cmp	x8, #0x0
  43b7a4:	cset	w9, ne  // ne = any
  43b7a8:	mov	w10, #0x1                   	// #1
  43b7ac:	eor	w9, w9, #0x1
  43b7b0:	eor	w9, w9, w10
  43b7b4:	eor	w9, w9, w10
  43b7b8:	and	w9, w9, #0x1
  43b7bc:	mov	w0, w9
  43b7c0:	sxtw	x8, w0
  43b7c4:	cbz	x8, 43b7e4 <token_match_string+0x80>
  43b7c8:	mov	w0, #0x1                   	// #1
  43b7cc:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43b7d0:	add	x1, x1, #0x182
  43b7d4:	ldr	x2, [sp, #32]
  43b7d8:	mov	w3, #0x527                 	// #1319
  43b7dc:	ldr	x4, [sp, #24]
  43b7e0:	bl	40a540 <log_assert_failed_realm@plt>
  43b7e4:	ldur	x8, [x29, #-8]
  43b7e8:	ldr	x8, [x8, #8]
  43b7ec:	cmp	x8, #0x0
  43b7f0:	cset	w9, ne  // ne = any
  43b7f4:	mov	w10, #0x1                   	// #1
  43b7f8:	eor	w9, w9, #0x1
  43b7fc:	eor	w9, w9, w10
  43b800:	eor	w9, w9, w10
  43b804:	and	w9, w9, #0x1
  43b808:	mov	w0, w9
  43b80c:	sxtw	x8, w0
  43b810:	cbz	x8, 43b830 <token_match_string+0xcc>
  43b814:	mov	w0, #0x1                   	// #1
  43b818:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43b81c:	add	x1, x1, #0xc86
  43b820:	ldr	x2, [sp, #32]
  43b824:	mov	w3, #0x528                 	// #1320
  43b828:	ldr	x4, [sp, #24]
  43b82c:	bl	40a540 <log_assert_failed_realm@plt>
  43b830:	ldur	x8, [x29, #-8]
  43b834:	ldr	w9, [x8]
  43b838:	lsl	w9, w9, #24
  43b83c:	asr	w9, w9, #24
  43b840:	cmp	w9, #0x1a
  43b844:	cset	w9, lt  // lt = tstop
  43b848:	mov	w10, #0x1                   	// #1
  43b84c:	eor	w9, w9, #0x1
  43b850:	eor	w9, w9, w10
  43b854:	eor	w9, w9, w10
  43b858:	and	w9, w9, #0x1
  43b85c:	mov	w0, w9
  43b860:	sxtw	x8, w0
  43b864:	cbz	x8, 43b884 <token_match_string+0x120>
  43b868:	mov	w0, #0x1                   	// #1
  43b86c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43b870:	add	x1, x1, #0xc93
  43b874:	ldr	x2, [sp, #32]
  43b878:	mov	w3, #0x529                 	// #1321
  43b87c:	ldr	x4, [sp, #24]
  43b880:	bl	40a540 <log_assert_failed_realm@plt>
  43b884:	ldur	x0, [x29, #-16]
  43b888:	bl	43bae8 <strempty>
  43b88c:	stur	x0, [x29, #-16]
  43b890:	ldur	x8, [x29, #-8]
  43b894:	ldr	x8, [x8, #8]
  43b898:	stur	x8, [x29, #-32]
  43b89c:	ldur	x8, [x29, #-8]
  43b8a0:	ldr	w9, [x8]
  43b8a4:	lsl	w9, w9, #8
  43b8a8:	asr	w9, w9, #24
  43b8ac:	subs	w9, w9, #0x0
  43b8b0:	mov	w8, w9
  43b8b4:	ubfx	x8, x8, #0, #32
  43b8b8:	cmp	x8, #0x5
  43b8bc:	str	x8, [sp, #16]
  43b8c0:	b.hi	43ba90 <token_match_string+0x32c>  // b.pmore
  43b8c4:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  43b8c8:	add	x8, x8, #0x36c
  43b8cc:	ldr	x11, [sp, #16]
  43b8d0:	ldrsw	x10, [x8, x11, lsl #2]
  43b8d4:	add	x9, x8, x10
  43b8d8:	br	x9
  43b8dc:	ldur	x0, [x29, #-16]
  43b8e0:	bl	423ddc <isempty>
  43b8e4:	and	w8, w0, #0x1
  43b8e8:	sturb	w8, [x29, #-33]
  43b8ec:	b	43baac <token_match_string+0x348>
  43b8f0:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  43b8f4:	add	x8, x8, #0x590
  43b8f8:	stur	x8, [x29, #-24]
  43b8fc:	ldur	x8, [x29, #-24]
  43b900:	mov	w9, #0x0                   	// #0
  43b904:	str	w9, [sp, #12]
  43b908:	cbz	x8, 43b920 <token_match_string+0x1bc>
  43b90c:	ldur	x8, [x29, #-24]
  43b910:	ldrb	w9, [x8]
  43b914:	cmp	w9, #0x0
  43b918:	cset	w9, ne  // ne = any
  43b91c:	str	w9, [sp, #12]
  43b920:	ldr	w8, [sp, #12]
  43b924:	tbnz	w8, #0, 43b92c <token_match_string+0x1c8>
  43b928:	b	43b964 <token_match_string+0x200>
  43b92c:	ldur	x0, [x29, #-24]
  43b930:	ldur	x1, [x29, #-16]
  43b934:	bl	40aa20 <strcmp@plt>
  43b938:	cbnz	w0, 43b948 <token_match_string+0x1e4>
  43b93c:	mov	w8, #0x1                   	// #1
  43b940:	sturb	w8, [x29, #-33]
  43b944:	b	43b964 <token_match_string+0x200>
  43b948:	ldur	x0, [x29, #-24]
  43b94c:	mov	w8, wzr
  43b950:	mov	w1, w8
  43b954:	bl	40a8c0 <strchr@plt>
  43b958:	add	x9, x0, #0x1
  43b95c:	stur	x9, [x29, #-24]
  43b960:	b	43b8fc <token_match_string+0x198>
  43b964:	b	43baac <token_match_string+0x348>
  43b968:	ldur	x0, [x29, #-16]
  43b96c:	bl	423ddc <isempty>
  43b970:	tbnz	w0, #0, 43b978 <token_match_string+0x214>
  43b974:	b	43b984 <token_match_string+0x220>
  43b978:	mov	w8, #0x1                   	// #1
  43b97c:	sturb	w8, [x29, #-33]
  43b980:	b	43baac <token_match_string+0x348>
  43b984:	ldur	x8, [x29, #-32]
  43b988:	stur	x8, [x29, #-24]
  43b98c:	ldur	x8, [x29, #-24]
  43b990:	mov	w9, #0x0                   	// #0
  43b994:	str	w9, [sp, #8]
  43b998:	cbz	x8, 43b9b0 <token_match_string+0x24c>
  43b99c:	ldur	x8, [x29, #-24]
  43b9a0:	ldrb	w9, [x8]
  43b9a4:	cmp	w9, #0x0
  43b9a8:	cset	w9, ne  // ne = any
  43b9ac:	str	w9, [sp, #8]
  43b9b0:	ldr	w8, [sp, #8]
  43b9b4:	tbnz	w8, #0, 43b9bc <token_match_string+0x258>
  43b9b8:	b	43b9f4 <token_match_string+0x290>
  43b9bc:	ldur	x0, [x29, #-24]
  43b9c0:	ldur	x1, [x29, #-16]
  43b9c4:	bl	40aa20 <strcmp@plt>
  43b9c8:	cbnz	w0, 43b9d8 <token_match_string+0x274>
  43b9cc:	mov	w8, #0x1                   	// #1
  43b9d0:	sturb	w8, [x29, #-33]
  43b9d4:	b	43b9f4 <token_match_string+0x290>
  43b9d8:	ldur	x0, [x29, #-24]
  43b9dc:	mov	w8, wzr
  43b9e0:	mov	w1, w8
  43b9e4:	bl	40a8c0 <strchr@plt>
  43b9e8:	add	x9, x0, #0x1
  43b9ec:	stur	x9, [x29, #-24]
  43b9f0:	b	43b98c <token_match_string+0x228>
  43b9f4:	b	43baac <token_match_string+0x348>
  43b9f8:	ldur	x0, [x29, #-16]
  43b9fc:	bl	423ddc <isempty>
  43ba00:	tbnz	w0, #0, 43ba08 <token_match_string+0x2a4>
  43ba04:	b	43ba14 <token_match_string+0x2b0>
  43ba08:	mov	w8, #0x1                   	// #1
  43ba0c:	sturb	w8, [x29, #-33]
  43ba10:	b	43baac <token_match_string+0x348>
  43ba14:	ldur	x8, [x29, #-32]
  43ba18:	stur	x8, [x29, #-24]
  43ba1c:	ldur	x8, [x29, #-24]
  43ba20:	mov	w9, #0x0                   	// #0
  43ba24:	str	w9, [sp, #4]
  43ba28:	cbz	x8, 43ba40 <token_match_string+0x2dc>
  43ba2c:	ldur	x8, [x29, #-24]
  43ba30:	ldrb	w9, [x8]
  43ba34:	cmp	w9, #0x0
  43ba38:	cset	w9, ne  // ne = any
  43ba3c:	str	w9, [sp, #4]
  43ba40:	ldr	w8, [sp, #4]
  43ba44:	tbnz	w8, #0, 43ba4c <token_match_string+0x2e8>
  43ba48:	b	43ba8c <token_match_string+0x328>
  43ba4c:	ldur	x0, [x29, #-24]
  43ba50:	ldur	x1, [x29, #-16]
  43ba54:	mov	w8, wzr
  43ba58:	mov	w2, w8
  43ba5c:	bl	40b4b0 <fnmatch@plt>
  43ba60:	cbnz	w0, 43ba70 <token_match_string+0x30c>
  43ba64:	mov	w8, #0x1                   	// #1
  43ba68:	sturb	w8, [x29, #-33]
  43ba6c:	b	43ba8c <token_match_string+0x328>
  43ba70:	ldur	x0, [x29, #-24]
  43ba74:	mov	w8, wzr
  43ba78:	mov	w1, w8
  43ba7c:	bl	40a8c0 <strchr@plt>
  43ba80:	add	x9, x0, #0x1
  43ba84:	stur	x9, [x29, #-24]
  43ba88:	b	43ba1c <token_match_string+0x2b8>
  43ba8c:	b	43baac <token_match_string+0x348>
  43ba90:	mov	w0, #0x1                   	// #1
  43ba94:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43ba98:	add	x1, x1, #0xcab
  43ba9c:	ldr	x2, [sp, #32]
  43baa0:	mov	w3, #0x554                 	// #1364
  43baa4:	ldr	x4, [sp, #24]
  43baa8:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  43baac:	ldur	x8, [x29, #-8]
  43bab0:	ldr	w9, [x8]
  43bab4:	lsl	w9, w9, #16
  43bab8:	asr	w9, w9, #24
  43babc:	ldurb	w10, [x29, #-33]
  43bac0:	mov	w11, #0x1                   	// #1
  43bac4:	mov	w12, wzr
  43bac8:	tst	w10, #0x1
  43bacc:	csel	w10, w12, w11, ne  // ne = any
  43bad0:	cmp	w9, w10
  43bad4:	cset	w9, eq  // eq = none
  43bad8:	and	w0, w9, #0x1
  43badc:	ldp	x29, x30, [sp, #80]
  43bae0:	add	sp, sp, #0x60
  43bae4:	ret

000000000043bae8 <strempty>:
  43bae8:	sub	sp, sp, #0x20
  43baec:	str	x0, [sp, #24]
  43baf0:	ldr	x8, [sp, #24]
  43baf4:	str	x8, [sp, #16]
  43baf8:	cbz	x8, 43bb08 <strempty+0x20>
  43bafc:	ldr	x8, [sp, #16]
  43bb00:	str	x8, [sp, #8]
  43bb04:	b	43bb14 <strempty+0x2c>
  43bb08:	adrp	x8, 468000 <on_inotify.__assert_in_set+0x4540>
  43bb0c:	add	x8, x8, #0xcbe
  43bb10:	str	x8, [sp, #8]
  43bb14:	ldr	x8, [sp, #8]
  43bb18:	mov	x0, x8
  43bb1c:	add	sp, sp, #0x20
  43bb20:	ret

000000000043bb24 <token_match_attr>:
  43bb24:	stp	x29, x30, [sp, #-32]!
  43bb28:	str	x28, [sp, #16]
  43bb2c:	mov	x29, sp
  43bb30:	sub	sp, sp, #0x460
  43bb34:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  43bb38:	add	x8, x8, #0x48a
  43bb3c:	add	x8, x8, #0x3
  43bb40:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  43bb44:	add	x9, x9, #0xcbf
  43bb48:	stur	x0, [x29, #-16]
  43bb4c:	stur	x1, [x29, #-24]
  43bb50:	stur	x2, [x29, #-32]
  43bb54:	str	x8, [sp, #40]
  43bb58:	str	x9, [sp, #32]
  43bb5c:	ldur	x8, [x29, #-16]
  43bb60:	cmp	x8, #0x0
  43bb64:	cset	w9, ne  // ne = any
  43bb68:	mov	w10, #0x1                   	// #1
  43bb6c:	eor	w9, w9, #0x1
  43bb70:	eor	w9, w9, w10
  43bb74:	eor	w9, w9, w10
  43bb78:	and	w9, w9, #0x1
  43bb7c:	mov	w0, w9
  43bb80:	sxtw	x8, w0
  43bb84:	cbz	x8, 43bba4 <token_match_attr+0x80>
  43bb88:	mov	w0, #0x1                   	// #1
  43bb8c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43bb90:	add	x1, x1, #0x182
  43bb94:	ldr	x2, [sp, #40]
  43bb98:	mov	w3, #0x55e                 	// #1374
  43bb9c:	ldr	x4, [sp, #32]
  43bba0:	bl	40a540 <log_assert_failed_realm@plt>
  43bba4:	ldur	x8, [x29, #-24]
  43bba8:	cmp	x8, #0x0
  43bbac:	cset	w9, ne  // ne = any
  43bbb0:	mov	w10, #0x1                   	// #1
  43bbb4:	eor	w9, w9, #0x1
  43bbb8:	eor	w9, w9, w10
  43bbbc:	eor	w9, w9, w10
  43bbc0:	and	w9, w9, #0x1
  43bbc4:	mov	w0, w9
  43bbc8:	sxtw	x8, w0
  43bbcc:	cbz	x8, 43bbec <token_match_attr+0xc8>
  43bbd0:	mov	w0, #0x1                   	// #1
  43bbd4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43bbd8:	add	x1, x1, #0xee1
  43bbdc:	ldr	x2, [sp, #40]
  43bbe0:	mov	w3, #0x55f                 	// #1375
  43bbe4:	ldr	x4, [sp, #32]
  43bbe8:	bl	40a540 <log_assert_failed_realm@plt>
  43bbec:	ldur	x8, [x29, #-32]
  43bbf0:	cmp	x8, #0x0
  43bbf4:	cset	w9, ne  // ne = any
  43bbf8:	mov	w10, #0x1                   	// #1
  43bbfc:	eor	w9, w9, #0x1
  43bc00:	eor	w9, w9, w10
  43bc04:	eor	w9, w9, w10
  43bc08:	and	w9, w9, #0x1
  43bc0c:	mov	w0, w9
  43bc10:	sxtw	x8, w0
  43bc14:	cbz	x8, 43bc34 <token_match_attr+0x110>
  43bc18:	mov	w0, #0x1                   	// #1
  43bc1c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43bc20:	add	x1, x1, #0xbb0
  43bc24:	ldr	x2, [sp, #40]
  43bc28:	mov	w3, #0x560                 	// #1376
  43bc2c:	ldr	x4, [sp, #32]
  43bc30:	bl	40a540 <log_assert_failed_realm@plt>
  43bc34:	ldur	x8, [x29, #-16]
  43bc38:	ldr	x8, [x8, #16]
  43bc3c:	str	x8, [sp, #56]
  43bc40:	ldur	x8, [x29, #-16]
  43bc44:	ldr	w9, [x8]
  43bc48:	lsl	w9, w9, #1
  43bc4c:	asr	w9, w9, #25
  43bc50:	str	w9, [sp, #28]
  43bc54:	cbz	w9, 43bca8 <token_match_attr+0x184>
  43bc58:	b	43bc5c <token_match_attr+0x138>
  43bc5c:	ldr	w8, [sp, #28]
  43bc60:	cmp	w8, #0x1
  43bc64:	b.eq	43bc7c <token_match_attr+0x158>  // b.none
  43bc68:	b	43bc6c <token_match_attr+0x148>
  43bc6c:	ldr	w8, [sp, #28]
  43bc70:	cmp	w8, #0x2
  43bc74:	b.eq	43bcd8 <token_match_attr+0x1b4>  // b.none
  43bc78:	b	43bd18 <token_match_attr+0x1f4>
  43bc7c:	ldur	x0, [x29, #-32]
  43bc80:	ldr	x1, [sp, #56]
  43bc84:	add	x8, sp, #0x240
  43bc88:	mov	x2, x8
  43bc8c:	mov	x3, #0x200                 	// #512
  43bc90:	mov	w9, wzr
  43bc94:	and	w4, w9, #0x1
  43bc98:	str	x8, [sp, #16]
  43bc9c:	bl	4183c0 <udev_event_apply_format>
  43bca0:	ldr	x8, [sp, #16]
  43bca4:	str	x8, [sp, #56]
  43bca8:	ldur	x0, [x29, #-24]
  43bcac:	ldr	x1, [sp, #56]
  43bcb0:	add	x2, sp, #0x30
  43bcb4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  43bcb8:	cmp	w0, #0x0
  43bcbc:	cset	w8, ge  // ge = tcont
  43bcc0:	tbnz	w8, #0, 43bcd4 <token_match_attr+0x1b0>
  43bcc4:	mov	w8, wzr
  43bcc8:	and	w8, w8, #0x1
  43bccc:	sturb	w8, [x29, #-1]
  43bcd0:	b	43bd9c <token_match_attr+0x278>
  43bcd4:	b	43bd34 <token_match_attr+0x210>
  43bcd8:	ldr	x0, [sp, #56]
  43bcdc:	add	x1, sp, #0x40
  43bce0:	mov	x2, #0x200                 	// #512
  43bce4:	mov	w8, #0x1                   	// #1
  43bce8:	and	w3, w8, #0x1
  43bcec:	bl	40aea0 <util_resolve_subsys_kernel@plt>
  43bcf0:	cmp	w0, #0x0
  43bcf4:	cset	w8, ge  // ge = tcont
  43bcf8:	tbnz	w8, #0, 43bd0c <token_match_attr+0x1e8>
  43bcfc:	mov	w8, wzr
  43bd00:	and	w8, w8, #0x1
  43bd04:	sturb	w8, [x29, #-1]
  43bd08:	b	43bd9c <token_match_attr+0x278>
  43bd0c:	add	x8, sp, #0x40
  43bd10:	str	x8, [sp, #48]
  43bd14:	b	43bd34 <token_match_attr+0x210>
  43bd18:	mov	w0, #0x1                   	// #1
  43bd1c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43bd20:	add	x1, x1, #0xd01
  43bd24:	ldr	x2, [sp, #40]
  43bd28:	mov	w3, #0x573                 	// #1395
  43bd2c:	ldr	x4, [sp, #32]
  43bd30:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  43bd34:	ldur	x8, [x29, #-16]
  43bd38:	ldr	w9, [x8]
  43bd3c:	lsr	w9, w9, #31
  43bd40:	tbnz	w9, #0, 43bd48 <token_match_attr+0x224>
  43bd44:	b	43bd88 <token_match_attr+0x264>
  43bd48:	ldr	x8, [sp, #48]
  43bd4c:	add	x9, sp, #0x40
  43bd50:	cmp	x8, x9
  43bd54:	b.eq	43bd78 <token_match_attr+0x254>  // b.none
  43bd58:	ldr	x2, [sp, #48]
  43bd5c:	add	x8, sp, #0x40
  43bd60:	mov	x0, x8
  43bd64:	mov	x1, #0x200                 	// #512
  43bd68:	str	x8, [sp, #8]
  43bd6c:	bl	40adb0 <strscpy@plt>
  43bd70:	ldr	x8, [sp, #8]
  43bd74:	str	x8, [sp, #48]
  43bd78:	add	x0, sp, #0x40
  43bd7c:	mov	x8, xzr
  43bd80:	mov	x1, x8
  43bd84:	bl	40aec0 <delete_trailing_chars@plt>
  43bd88:	ldur	x0, [x29, #-16]
  43bd8c:	ldr	x1, [sp, #48]
  43bd90:	bl	43b764 <token_match_string>
  43bd94:	and	w8, w0, #0x1
  43bd98:	sturb	w8, [x29, #-1]
  43bd9c:	ldurb	w8, [x29, #-1]
  43bda0:	and	w0, w8, #0x1
  43bda4:	add	sp, sp, #0x460
  43bda8:	ldr	x28, [sp, #16]
  43bdac:	ldp	x29, x30, [sp], #32
  43bdb0:	ret

000000000043bdb4 <attr_subst_subdir>:
  43bdb4:	stp	x29, x30, [sp, #-32]!
  43bdb8:	str	x28, [sp, #16]
  43bdbc:	mov	x29, sp
  43bdc0:	sub	sp, sp, #0x460
  43bdc4:	sub	x8, x29, #0x20
  43bdc8:	mov	x9, xzr
  43bdcc:	adrp	x10, 467000 <on_inotify.__assert_in_set+0x3540>
  43bdd0:	add	x10, x10, #0x48a
  43bdd4:	add	x2, x10, #0x3
  43bdd8:	str	x0, [x8, #16]
  43bddc:	str	x9, [x8, #8]
  43bde0:	str	x8, [sp, #16]
  43bde4:	str	x2, [sp, #8]
  43bde8:	ldr	x8, [sp, #16]
  43bdec:	ldr	x9, [x8, #16]
  43bdf0:	cmp	x9, #0x0
  43bdf4:	cset	w10, ne  // ne = any
  43bdf8:	mov	w11, #0x1                   	// #1
  43bdfc:	eor	w10, w10, #0x1
  43be00:	eor	w10, w10, w11
  43be04:	eor	w10, w10, w11
  43be08:	and	w10, w10, #0x1
  43be0c:	mov	w0, w10
  43be10:	sxtw	x9, w0
  43be14:	cbz	x9, 43be38 <attr_subst_subdir+0x84>
  43be18:	mov	w0, #0x1                   	// #1
  43be1c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  43be20:	add	x1, x1, #0x557
  43be24:	ldr	x2, [sp, #8]
  43be28:	mov	w3, #0x5d0                 	// #1488
  43be2c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43be30:	add	x4, x4, #0xd25
  43be34:	bl	40a540 <log_assert_failed_realm@plt>
  43be38:	ldr	x8, [sp, #16]
  43be3c:	ldr	x0, [x8, #16]
  43be40:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43be44:	add	x1, x1, #0xd43
  43be48:	bl	40b2f0 <strstr@plt>
  43be4c:	str	x0, [sp, #48]
  43be50:	ldr	x8, [sp, #48]
  43be54:	cbnz	x8, 43be68 <attr_subst_subdir+0xb4>
  43be58:	stur	wzr, [x29, #-4]
  43be5c:	mov	w8, #0x1                   	// #1
  43be60:	str	w8, [sp, #28]
  43be64:	b	43bffc <attr_subst_subdir+0x248>
  43be68:	ldr	x8, [sp, #48]
  43be6c:	ldr	x9, [sp, #16]
  43be70:	ldr	x10, [x9, #16]
  43be74:	subs	x8, x8, x10
  43be78:	add	x8, x8, #0x1
  43be7c:	str	x8, [sp, #40]
  43be80:	ldr	x8, [sp, #48]
  43be84:	add	x8, x8, #0x2
  43be88:	str	x8, [sp, #48]
  43be8c:	add	x0, sp, #0x38
  43be90:	add	x8, sp, #0x40
  43be94:	str	x8, [sp, #56]
  43be98:	mov	x10, #0x400                 	// #1024
  43be9c:	str	x10, [sp, #32]
  43bea0:	ldr	x1, [sp, #32]
  43bea4:	ldr	x2, [x9, #16]
  43bea8:	ldr	x3, [sp, #40]
  43beac:	str	x8, [sp]
  43beb0:	bl	40ae90 <strnpcpy@plt>
  43beb4:	ldr	x8, [sp, #32]
  43beb8:	subs	x8, x8, x0
  43bebc:	str	x8, [sp, #32]
  43bec0:	ldr	x0, [sp]
  43bec4:	bl	40b1f0 <opendir@plt>
  43bec8:	ldr	x8, [sp, #16]
  43becc:	str	x0, [x8, #8]
  43bed0:	ldr	x9, [x8, #8]
  43bed4:	cbnz	x9, 43bef8 <attr_subst_subdir+0x144>
  43bed8:	bl	40a480 <__errno_location@plt>
  43bedc:	ldr	w8, [x0]
  43bee0:	mov	w9, wzr
  43bee4:	subs	w8, w9, w8
  43bee8:	stur	w8, [x29, #-4]
  43beec:	mov	w8, #0x1                   	// #1
  43bef0:	str	w8, [sp, #28]
  43bef4:	b	43bffc <attr_subst_subdir+0x248>
  43bef8:	bl	40a480 <__errno_location@plt>
  43befc:	str	wzr, [x0]
  43bf00:	ldr	x8, [sp, #16]
  43bf04:	ldr	x0, [x8, #8]
  43bf08:	bl	40b200 <readdir64@plt>
  43bf0c:	ldr	x8, [sp, #16]
  43bf10:	str	x0, [x8]
  43bf14:	ldr	x8, [sp, #16]
  43bf18:	ldr	x9, [x8]
  43bf1c:	cbnz	x9, 43bf3c <attr_subst_subdir+0x188>
  43bf20:	bl	40a480 <__errno_location@plt>
  43bf24:	ldr	w8, [x0]
  43bf28:	cmp	w8, #0x0
  43bf2c:	cset	w8, le
  43bf30:	tbnz	w8, #0, 43bf38 <attr_subst_subdir+0x184>
  43bf34:	b	43bfec <attr_subst_subdir+0x238>
  43bf38:	b	43bfec <attr_subst_subdir+0x238>
  43bf3c:	ldr	x8, [sp, #16]
  43bf40:	ldr	x9, [x8]
  43bf44:	ldrb	w10, [x9, #19]
  43bf48:	cmp	w10, #0x2e
  43bf4c:	b.ne	43bf54 <attr_subst_subdir+0x1a0>  // b.any
  43bf50:	b	43bfcc <attr_subst_subdir+0x218>
  43bf54:	ldr	x0, [sp, #56]
  43bf58:	ldr	x1, [sp, #32]
  43bf5c:	ldr	x8, [sp, #16]
  43bf60:	ldr	x9, [x8]
  43bf64:	add	x2, x9, #0x13
  43bf68:	ldr	x3, [sp, #48]
  43bf6c:	mov	x9, xzr
  43bf70:	mov	x4, x9
  43bf74:	bl	40b400 <strscpyl@plt>
  43bf78:	ldr	x8, [sp, #16]
  43bf7c:	ldr	x9, [x8, #8]
  43bf80:	mov	x0, x9
  43bf84:	bl	40b4c0 <dirfd@plt>
  43bf88:	ldr	x1, [sp, #56]
  43bf8c:	mov	w10, wzr
  43bf90:	mov	w2, w10
  43bf94:	mov	w3, w10
  43bf98:	bl	40b4d0 <faccessat@plt>
  43bf9c:	cmp	w0, #0x0
  43bfa0:	cset	w10, ge  // ge = tcont
  43bfa4:	tbnz	w10, #0, 43bfac <attr_subst_subdir+0x1f8>
  43bfa8:	b	43bfcc <attr_subst_subdir+0x218>
  43bfac:	ldr	x8, [sp, #16]
  43bfb0:	ldr	x0, [x8, #16]
  43bfb4:	add	x1, sp, #0x40
  43bfb8:	bl	40b4e0 <strcpy@plt>
  43bfbc:	stur	wzr, [x29, #-4]
  43bfc0:	mov	w9, #0x1                   	// #1
  43bfc4:	str	w9, [sp, #28]
  43bfc8:	b	43bffc <attr_subst_subdir+0x248>
  43bfcc:	bl	40a480 <__errno_location@plt>
  43bfd0:	str	wzr, [x0]
  43bfd4:	ldr	x8, [sp, #16]
  43bfd8:	ldr	x0, [x8, #8]
  43bfdc:	bl	40b200 <readdir64@plt>
  43bfe0:	ldr	x8, [sp, #16]
  43bfe4:	str	x0, [x8]
  43bfe8:	b	43bf14 <attr_subst_subdir+0x160>
  43bfec:	mov	w8, #0xfffffffe            	// #-2
  43bff0:	stur	w8, [x29, #-4]
  43bff4:	mov	w8, #0x1                   	// #1
  43bff8:	str	w8, [sp, #28]
  43bffc:	sub	x0, x29, #0x18
  43c000:	bl	43c590 <closedirp>
  43c004:	ldur	w0, [x29, #-4]
  43c008:	add	sp, sp, #0x460
  43c00c:	ldr	x28, [sp, #16]
  43c010:	ldp	x29, x30, [sp], #32
  43c014:	ret

000000000043c018 <get_property_from_string>:
  43c018:	sub	sp, sp, #0x70
  43c01c:	stp	x29, x30, [sp, #96]
  43c020:	add	x29, sp, #0x60
  43c024:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  43c028:	add	x8, x8, #0x48a
  43c02c:	add	x8, x8, #0x3
  43c030:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  43c034:	add	x9, x9, #0xd47
  43c038:	stur	x0, [x29, #-16]
  43c03c:	stur	x1, [x29, #-24]
  43c040:	stur	x2, [x29, #-32]
  43c044:	str	x8, [sp, #24]
  43c048:	str	x9, [sp, #16]
  43c04c:	ldur	x8, [x29, #-16]
  43c050:	cmp	x8, #0x0
  43c054:	cset	w9, ne  // ne = any
  43c058:	mov	w10, #0x1                   	// #1
  43c05c:	eor	w9, w9, #0x1
  43c060:	eor	w9, w9, w10
  43c064:	eor	w9, w9, w10
  43c068:	and	w9, w9, #0x1
  43c06c:	mov	w0, w9
  43c070:	sxtw	x8, w0
  43c074:	cbz	x8, 43c094 <get_property_from_string+0x7c>
  43c078:	mov	w0, #0x1                   	// #1
  43c07c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43c080:	add	x1, x1, #0x79b
  43c084:	ldr	x2, [sp, #24]
  43c088:	mov	w3, #0x587                 	// #1415
  43c08c:	ldr	x4, [sp, #16]
  43c090:	bl	40a540 <log_assert_failed_realm@plt>
  43c094:	ldur	x8, [x29, #-24]
  43c098:	cmp	x8, #0x0
  43c09c:	cset	w9, ne  // ne = any
  43c0a0:	mov	w10, #0x1                   	// #1
  43c0a4:	eor	w9, w9, #0x1
  43c0a8:	eor	w9, w9, w10
  43c0ac:	eor	w9, w9, w10
  43c0b0:	and	w9, w9, #0x1
  43c0b4:	mov	w0, w9
  43c0b8:	sxtw	x8, w0
  43c0bc:	cbz	x8, 43c0dc <get_property_from_string+0xc4>
  43c0c0:	mov	w0, #0x1                   	// #1
  43c0c4:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43c0c8:	add	x1, x1, #0x7f1
  43c0cc:	ldr	x2, [sp, #24]
  43c0d0:	mov	w3, #0x588                 	// #1416
  43c0d4:	ldr	x4, [sp, #16]
  43c0d8:	bl	40a540 <log_assert_failed_realm@plt>
  43c0dc:	ldur	x8, [x29, #-32]
  43c0e0:	cmp	x8, #0x0
  43c0e4:	cset	w9, ne  // ne = any
  43c0e8:	mov	w10, #0x1                   	// #1
  43c0ec:	eor	w9, w9, #0x1
  43c0f0:	eor	w9, w9, w10
  43c0f4:	eor	w9, w9, w10
  43c0f8:	and	w9, w9, #0x1
  43c0fc:	mov	w0, w9
  43c100:	sxtw	x8, w0
  43c104:	cbz	x8, 43c124 <get_property_from_string+0x10c>
  43c108:	mov	w0, #0x1                   	// #1
  43c10c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43c110:	add	x1, x1, #0x800
  43c114:	ldr	x2, [sp, #24]
  43c118:	mov	w3, #0x589                 	// #1417
  43c11c:	ldr	x4, [sp, #16]
  43c120:	bl	40a540 <log_assert_failed_realm@plt>
  43c124:	ldur	x0, [x29, #-16]
  43c128:	mov	x8, xzr
  43c12c:	mov	x1, x8
  43c130:	bl	423154 <skip_leading_chars>
  43c134:	stur	x0, [x29, #-40]
  43c138:	mov	w9, #0x0                   	// #0
  43c13c:	strb	w9, [sp, #39]
  43c140:	ldur	x8, [x29, #-40]
  43c144:	ldrb	w9, [x8]
  43c148:	str	w9, [sp, #12]
  43c14c:	cbz	w9, 43c16c <get_property_from_string+0x154>
  43c150:	b	43c154 <get_property_from_string+0x13c>
  43c154:	ldr	w8, [sp, #12]
  43c158:	cmp	w8, #0x23
  43c15c:	cset	w9, eq  // eq = none
  43c160:	eor	w9, w9, #0x1
  43c164:	tbnz	w9, #0, 43c178 <get_property_from_string+0x160>
  43c168:	b	43c16c <get_property_from_string+0x154>
  43c16c:	mov	w8, #0x1                   	// #1
  43c170:	strb	w8, [sp, #39]
  43c174:	b	43c178 <get_property_from_string+0x160>
  43c178:	ldrb	w8, [sp, #39]
  43c17c:	and	w8, w8, #0x1
  43c180:	strb	w8, [sp, #38]
  43c184:	ldrb	w8, [sp, #38]
  43c188:	tbnz	w8, #0, 43c190 <get_property_from_string+0x178>
  43c18c:	b	43c1ac <get_property_from_string+0x194>
  43c190:	ldur	x8, [x29, #-32]
  43c194:	mov	x9, xzr
  43c198:	str	x9, [x8]
  43c19c:	ldur	x8, [x29, #-24]
  43c1a0:	str	x9, [x8]
  43c1a4:	stur	wzr, [x29, #-4]
  43c1a8:	b	43c318 <get_property_from_string+0x300>
  43c1ac:	ldur	x0, [x29, #-40]
  43c1b0:	mov	w1, #0x3d                  	// #61
  43c1b4:	bl	40a8c0 <strchr@plt>
  43c1b8:	str	x0, [sp, #48]
  43c1bc:	ldr	x8, [sp, #48]
  43c1c0:	cbnz	x8, 43c1d0 <get_property_from_string+0x1b8>
  43c1c4:	mov	w8, #0xffffffea            	// #-22
  43c1c8:	stur	w8, [x29, #-4]
  43c1cc:	b	43c318 <get_property_from_string+0x300>
  43c1d0:	ldr	x8, [sp, #48]
  43c1d4:	add	x9, x8, #0x1
  43c1d8:	str	x9, [sp, #48]
  43c1dc:	mov	w10, #0x0                   	// #0
  43c1e0:	strb	w10, [x8]
  43c1e4:	ldur	x0, [x29, #-40]
  43c1e8:	bl	40b3f0 <strstrip@plt>
  43c1ec:	stur	x0, [x29, #-40]
  43c1f0:	ldur	x0, [x29, #-40]
  43c1f4:	bl	423ddc <isempty>
  43c1f8:	tbnz	w0, #0, 43c200 <get_property_from_string+0x1e8>
  43c1fc:	b	43c20c <get_property_from_string+0x1f4>
  43c200:	mov	w8, #0xffffffea            	// #-22
  43c204:	stur	w8, [x29, #-4]
  43c208:	b	43c318 <get_property_from_string+0x300>
  43c20c:	ldr	x0, [sp, #48]
  43c210:	bl	40b3f0 <strstrip@plt>
  43c214:	str	x0, [sp, #48]
  43c218:	ldr	x0, [sp, #48]
  43c21c:	bl	423ddc <isempty>
  43c220:	tbnz	w0, #0, 43c228 <get_property_from_string+0x210>
  43c224:	b	43c234 <get_property_from_string+0x21c>
  43c228:	mov	w8, #0xffffffea            	// #-22
  43c22c:	stur	w8, [x29, #-4]
  43c230:	b	43c318 <get_property_from_string+0x300>
  43c234:	mov	w8, #0x0                   	// #0
  43c238:	strb	w8, [sp, #37]
  43c23c:	ldr	x9, [sp, #48]
  43c240:	ldrb	w8, [x9]
  43c244:	cmp	w8, #0x22
  43c248:	str	w8, [sp, #8]
  43c24c:	b.eq	43c26c <get_property_from_string+0x254>  // b.none
  43c250:	b	43c254 <get_property_from_string+0x23c>
  43c254:	ldr	w8, [sp, #8]
  43c258:	cmp	w8, #0x27
  43c25c:	cset	w9, eq  // eq = none
  43c260:	eor	w9, w9, #0x1
  43c264:	tbnz	w9, #0, 43c278 <get_property_from_string+0x260>
  43c268:	b	43c26c <get_property_from_string+0x254>
  43c26c:	mov	w8, #0x1                   	// #1
  43c270:	strb	w8, [sp, #37]
  43c274:	b	43c278 <get_property_from_string+0x260>
  43c278:	ldrb	w8, [sp, #37]
  43c27c:	and	w8, w8, #0x1
  43c280:	strb	w8, [sp, #36]
  43c284:	ldrb	w8, [sp, #36]
  43c288:	tbnz	w8, #0, 43c290 <get_property_from_string+0x278>
  43c28c:	b	43c2f8 <get_property_from_string+0x2e0>
  43c290:	ldr	x0, [sp, #48]
  43c294:	bl	40a800 <strlen@plt>
  43c298:	str	x0, [sp, #40]
  43c29c:	ldr	x8, [sp, #40]
  43c2a0:	cmp	x8, #0x1
  43c2a4:	b.eq	43c2c8 <get_property_from_string+0x2b0>  // b.none
  43c2a8:	ldr	x8, [sp, #48]
  43c2ac:	ldr	x9, [sp, #40]
  43c2b0:	subs	x9, x9, #0x1
  43c2b4:	ldrb	w10, [x8, x9]
  43c2b8:	ldr	x8, [sp, #48]
  43c2bc:	ldrb	w11, [x8]
  43c2c0:	cmp	w10, w11
  43c2c4:	b.eq	43c2d4 <get_property_from_string+0x2bc>  // b.none
  43c2c8:	mov	w8, #0xffffffea            	// #-22
  43c2cc:	stur	w8, [x29, #-4]
  43c2d0:	b	43c318 <get_property_from_string+0x300>
  43c2d4:	ldr	x8, [sp, #48]
  43c2d8:	ldr	x9, [sp, #40]
  43c2dc:	subs	x9, x9, #0x1
  43c2e0:	add	x8, x8, x9
  43c2e4:	mov	w10, #0x0                   	// #0
  43c2e8:	strb	w10, [x8]
  43c2ec:	ldr	x8, [sp, #48]
  43c2f0:	add	x8, x8, #0x1
  43c2f4:	str	x8, [sp, #48]
  43c2f8:	ldur	x8, [x29, #-40]
  43c2fc:	ldur	x9, [x29, #-24]
  43c300:	str	x8, [x9]
  43c304:	ldr	x8, [sp, #48]
  43c308:	ldur	x9, [x29, #-32]
  43c30c:	str	x8, [x9]
  43c310:	mov	w10, #0x1                   	// #1
  43c314:	stur	w10, [x29, #-4]
  43c318:	ldur	w0, [x29, #-4]
  43c31c:	ldp	x29, x30, [sp, #96]
  43c320:	add	sp, sp, #0x70
  43c324:	ret

000000000043c328 <import_parent_into_properties>:
  43c328:	sub	sp, sp, #0x50
  43c32c:	stp	x29, x30, [sp, #64]
  43c330:	add	x29, sp, #0x40
  43c334:	adrp	x8, 467000 <on_inotify.__assert_in_set+0x3540>
  43c338:	add	x8, x8, #0x48a
  43c33c:	add	x8, x8, #0x3
  43c340:	stur	x0, [x29, #-16]
  43c344:	stur	x1, [x29, #-24]
  43c348:	str	x8, [sp]
  43c34c:	ldur	x8, [x29, #-16]
  43c350:	cmp	x8, #0x0
  43c354:	cset	w9, ne  // ne = any
  43c358:	mov	w10, #0x1                   	// #1
  43c35c:	eor	w9, w9, #0x1
  43c360:	eor	w9, w9, w10
  43c364:	eor	w9, w9, w10
  43c368:	and	w9, w9, #0x1
  43c36c:	mov	w0, w9
  43c370:	sxtw	x8, w0
  43c374:	cbz	x8, 43c398 <import_parent_into_properties+0x70>
  43c378:	mov	w0, #0x1                   	// #1
  43c37c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43c380:	add	x1, x1, #0xee1
  43c384:	ldr	x2, [sp]
  43c388:	mov	w3, #0x5b5                 	// #1461
  43c38c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43c390:	add	x4, x4, #0xd7e
  43c394:	bl	40a540 <log_assert_failed_realm@plt>
  43c398:	ldur	x8, [x29, #-24]
  43c39c:	cmp	x8, #0x0
  43c3a0:	cset	w9, ne  // ne = any
  43c3a4:	mov	w10, #0x1                   	// #1
  43c3a8:	eor	w9, w9, #0x1
  43c3ac:	eor	w9, w9, w10
  43c3b0:	eor	w9, w9, w10
  43c3b4:	and	w9, w9, #0x1
  43c3b8:	mov	w0, w9
  43c3bc:	sxtw	x8, w0
  43c3c0:	cbz	x8, 43c3e4 <import_parent_into_properties+0xbc>
  43c3c4:	mov	w0, #0x1                   	// #1
  43c3c8:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43c3cc:	add	x1, x1, #0xdbb
  43c3d0:	ldr	x2, [sp]
  43c3d4:	mov	w3, #0x5b6                 	// #1462
  43c3d8:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43c3dc:	add	x4, x4, #0xd7e
  43c3e0:	bl	40a540 <log_assert_failed_realm@plt>
  43c3e4:	ldur	x0, [x29, #-16]
  43c3e8:	add	x1, sp, #0x10
  43c3ec:	bl	40abc0 <sd_device_get_parent@plt>
  43c3f0:	str	w0, [sp, #12]
  43c3f4:	ldr	w8, [sp, #12]
  43c3f8:	mov	w9, #0xfffffffe            	// #-2
  43c3fc:	cmp	w8, w9
  43c400:	b.ne	43c40c <import_parent_into_properties+0xe4>  // b.any
  43c404:	stur	wzr, [x29, #-4]
  43c408:	b	43c4a8 <import_parent_into_properties+0x180>
  43c40c:	ldr	w8, [sp, #12]
  43c410:	cmp	w8, #0x0
  43c414:	cset	w8, ge  // ge = tcont
  43c418:	tbnz	w8, #0, 43c428 <import_parent_into_properties+0x100>
  43c41c:	ldr	w8, [sp, #12]
  43c420:	stur	w8, [x29, #-4]
  43c424:	b	43c4a8 <import_parent_into_properties+0x180>
  43c428:	ldr	x0, [sp, #16]
  43c42c:	add	x1, sp, #0x18
  43c430:	bl	40b4f0 <sd_device_get_property_first@plt>
  43c434:	str	x0, [sp, #32]
  43c438:	ldr	x8, [sp, #32]
  43c43c:	cbz	x8, 43c4a0 <import_parent_into_properties+0x178>
  43c440:	ldur	x0, [x29, #-24]
  43c444:	ldr	x1, [sp, #32]
  43c448:	mov	w8, wzr
  43c44c:	mov	w2, w8
  43c450:	bl	40b4b0 <fnmatch@plt>
  43c454:	cbz	w0, 43c45c <import_parent_into_properties+0x134>
  43c458:	b	43c48c <import_parent_into_properties+0x164>
  43c45c:	ldur	x0, [x29, #-16]
  43c460:	ldr	x1, [sp, #32]
  43c464:	ldr	x2, [sp, #24]
  43c468:	bl	40aff0 <device_add_property@plt>
  43c46c:	str	w0, [sp, #12]
  43c470:	ldr	w8, [sp, #12]
  43c474:	cmp	w8, #0x0
  43c478:	cset	w8, ge  // ge = tcont
  43c47c:	tbnz	w8, #0, 43c48c <import_parent_into_properties+0x164>
  43c480:	ldr	w8, [sp, #12]
  43c484:	stur	w8, [x29, #-4]
  43c488:	b	43c4a8 <import_parent_into_properties+0x180>
  43c48c:	ldr	x0, [sp, #16]
  43c490:	add	x1, sp, #0x18
  43c494:	bl	40b500 <sd_device_get_property_next@plt>
  43c498:	str	x0, [sp, #32]
  43c49c:	b	43c438 <import_parent_into_properties+0x110>
  43c4a0:	mov	w8, #0x1                   	// #1
  43c4a4:	stur	w8, [x29, #-4]
  43c4a8:	ldur	w0, [x29, #-4]
  43c4ac:	ldp	x29, x30, [sp, #64]
  43c4b0:	add	sp, sp, #0x50
  43c4b4:	ret

000000000043c4b8 <ordered_hashmap_clear_free_free>:
  43c4b8:	sub	sp, sp, #0x20
  43c4bc:	stp	x29, x30, [sp, #16]
  43c4c0:	add	x29, sp, #0x10
  43c4c4:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  43c4c8:	ldr	x8, [x8, #176]
  43c4cc:	str	x0, [sp, #8]
  43c4d0:	ldr	x0, [sp, #8]
  43c4d4:	mov	x1, x8
  43c4d8:	mov	x2, x8
  43c4dc:	bl	40b510 <internal_hashmap_clear@plt>
  43c4e0:	ldp	x29, x30, [sp, #16]
  43c4e4:	add	sp, sp, #0x20
  43c4e8:	ret

000000000043c4ec <ordered_hashmap_put>:
  43c4ec:	sub	sp, sp, #0x30
  43c4f0:	stp	x29, x30, [sp, #32]
  43c4f4:	add	x29, sp, #0x20
  43c4f8:	stur	x0, [x29, #-8]
  43c4fc:	str	x1, [sp, #16]
  43c500:	str	x2, [sp, #8]
  43c504:	ldur	x0, [x29, #-8]
  43c508:	ldr	x1, [sp, #16]
  43c50c:	ldr	x2, [sp, #8]
  43c510:	bl	40a900 <hashmap_put@plt>
  43c514:	ldp	x29, x30, [sp, #32]
  43c518:	add	sp, sp, #0x30
  43c51c:	ret

000000000043c520 <write_string_file>:
  43c520:	sub	sp, sp, #0x30
  43c524:	stp	x29, x30, [sp, #32]
  43c528:	add	x29, sp, #0x20
  43c52c:	mov	x8, xzr
  43c530:	stur	x0, [x29, #-8]
  43c534:	str	x1, [sp, #16]
  43c538:	str	w2, [sp, #12]
  43c53c:	ldur	x0, [x29, #-8]
  43c540:	ldr	x1, [sp, #16]
  43c544:	ldr	w2, [sp, #12]
  43c548:	mov	x3, x8
  43c54c:	bl	40acb0 <write_string_file_ts@plt>
  43c550:	ldp	x29, x30, [sp, #32]
  43c554:	add	sp, sp, #0x30
  43c558:	ret

000000000043c55c <ordered_hashmap_clear_free_key>:
  43c55c:	sub	sp, sp, #0x20
  43c560:	stp	x29, x30, [sp, #16]
  43c564:	add	x29, sp, #0x10
  43c568:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  43c56c:	ldr	x1, [x1, #176]
  43c570:	mov	x8, xzr
  43c574:	str	x0, [sp, #8]
  43c578:	ldr	x0, [sp, #8]
  43c57c:	mov	x2, x8
  43c580:	bl	40b510 <internal_hashmap_clear@plt>
  43c584:	ldp	x29, x30, [sp, #16]
  43c588:	add	sp, sp, #0x20
  43c58c:	ret

000000000043c590 <closedirp>:
  43c590:	sub	sp, sp, #0x20
  43c594:	stp	x29, x30, [sp, #16]
  43c598:	add	x29, sp, #0x10
  43c59c:	str	x0, [sp, #8]
  43c5a0:	ldr	x8, [sp, #8]
  43c5a4:	ldr	x8, [x8]
  43c5a8:	cbz	x8, 43c5b8 <closedirp+0x28>
  43c5ac:	ldr	x8, [sp, #8]
  43c5b0:	ldr	x0, [x8]
  43c5b4:	bl	40b230 <closedir@plt>
  43c5b8:	ldp	x29, x30, [sp, #16]
  43c5bc:	add	sp, sp, #0x20
  43c5c0:	ret

000000000043c5c4 <apply_static_dev_perms>:
  43c5c4:	stp	x29, x30, [sp, #-32]!
  43c5c8:	str	x28, [sp, #16]
  43c5cc:	mov	x29, sp
  43c5d0:	sub	sp, sp, #0xd80
  43c5d4:	mov	x8, xzr
  43c5d8:	adrp	x9, 467000 <on_inotify.__assert_in_set+0x3540>
  43c5dc:	add	x9, x9, #0x48a
  43c5e0:	add	x9, x9, #0x3
  43c5e4:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43c5e8:	add	x10, x10, #0xe6a
  43c5ec:	stur	x0, [x29, #-16]
  43c5f0:	stur	w1, [x29, #-20]
  43c5f4:	stur	w2, [x29, #-24]
  43c5f8:	stur	w3, [x29, #-28]
  43c5fc:	stur	x4, [x29, #-40]
  43c600:	str	x8, [sp, #336]
  43c604:	str	x9, [sp, #88]
  43c608:	str	x10, [sp, #80]
  43c60c:	ldur	x8, [x29, #-16]
  43c610:	cmp	x8, #0x0
  43c614:	cset	w9, ne  // ne = any
  43c618:	mov	w10, #0x1                   	// #1
  43c61c:	eor	w9, w9, #0x1
  43c620:	eor	w9, w9, w10
  43c624:	eor	w9, w9, w10
  43c628:	and	w9, w9, #0x1
  43c62c:	mov	w0, w9
  43c630:	sxtw	x8, w0
  43c634:	cbz	x8, 43c658 <apply_static_dev_perms+0x94>
  43c638:	mov	w0, #0x1                   	// #1
  43c63c:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  43c640:	add	x1, x1, #0x546
  43c644:	ldr	x2, [sp, #88]
  43c648:	mov	w3, #0x8ed                 	// #2285
  43c64c:	adrp	x4, 468000 <on_inotify.__assert_in_set+0x4540>
  43c650:	add	x4, x4, #0xe22
  43c654:	bl	40a540 <log_assert_failed_realm@plt>
  43c658:	ldur	w8, [x29, #-20]
  43c65c:	mov	w9, #0xffffffff            	// #-1
  43c660:	cmp	w8, w9
  43c664:	b.ne	43c6a0 <apply_static_dev_perms+0xdc>  // b.any
  43c668:	ldur	w8, [x29, #-24]
  43c66c:	mov	w9, #0xffffffff            	// #-1
  43c670:	cmp	w8, w9
  43c674:	b.ne	43c6a0 <apply_static_dev_perms+0xdc>  // b.any
  43c678:	ldur	w8, [x29, #-28]
  43c67c:	mov	w9, #0xffffffff            	// #-1
  43c680:	cmp	w8, w9
  43c684:	b.ne	43c6a0 <apply_static_dev_perms+0xdc>  // b.any
  43c688:	ldur	x8, [x29, #-40]
  43c68c:	cbnz	x8, 43c6a0 <apply_static_dev_perms+0xdc>
  43c690:	stur	wzr, [x29, #-4]
  43c694:	mov	w8, #0x1                   	// #1
  43c698:	str	w8, [sp, #192]
  43c69c:	b	43ccfc <apply_static_dev_perms+0x738>
  43c6a0:	ldur	x3, [x29, #-16]
  43c6a4:	add	x8, sp, #0x958
  43c6a8:	mov	x0, x8
  43c6ac:	mov	x1, #0x400                 	// #1024
  43c6b0:	adrp	x2, 468000 <on_inotify.__assert_in_set+0x4540>
  43c6b4:	add	x2, x2, #0x538
  43c6b8:	mov	x9, xzr
  43c6bc:	mov	x4, x9
  43c6c0:	str	x8, [sp, #72]
  43c6c4:	bl	40b400 <strscpyl@plt>
  43c6c8:	ldr	x8, [sp, #72]
  43c6cc:	mov	x0, x8
  43c6d0:	add	x1, sp, #0xd0
  43c6d4:	bl	463808 <stat64>
  43c6d8:	cmp	w0, #0x0
  43c6dc:	cset	w10, ge  // ge = tcont
  43c6e0:	tbnz	w10, #0, 43c79c <apply_static_dev_perms+0x1d8>
  43c6e4:	bl	40a480 <__errno_location@plt>
  43c6e8:	ldr	w8, [x0]
  43c6ec:	cmp	w8, #0x2
  43c6f0:	b.eq	43c78c <apply_static_dev_perms+0x1c8>  // b.none
  43c6f4:	mov	w8, #0x3                   	// #3
  43c6f8:	str	w8, [sp, #188]
  43c6fc:	bl	40a480 <__errno_location@plt>
  43c700:	ldr	w8, [x0]
  43c704:	str	w8, [sp, #184]
  43c708:	mov	w8, #0x1                   	// #1
  43c70c:	str	w8, [sp, #180]
  43c710:	ldr	w0, [sp, #180]
  43c714:	bl	40a3f0 <log_get_max_level_realm@plt>
  43c718:	ldr	w8, [sp, #188]
  43c71c:	and	w8, w8, #0x7
  43c720:	cmp	w0, w8
  43c724:	b.lt	43c75c <apply_static_dev_perms+0x198>  // b.tstop
  43c728:	ldr	w8, [sp, #180]
  43c72c:	ldr	w9, [sp, #188]
  43c730:	orr	w0, w9, w8, lsl #10
  43c734:	ldr	w1, [sp, #184]
  43c738:	ldr	x2, [sp, #88]
  43c73c:	mov	w3, #0x8f5                 	// #2293
  43c740:	ldr	x4, [sp, #80]
  43c744:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43c748:	add	x5, x5, #0xe81
  43c74c:	add	x6, sp, #0x958
  43c750:	bl	40a400 <log_internal_realm@plt>
  43c754:	str	w0, [sp, #68]
  43c758:	b	43c770 <apply_static_dev_perms+0x1ac>
  43c75c:	ldr	w0, [sp, #184]
  43c760:	bl	40a410 <abs@plt>
  43c764:	mov	w8, wzr
  43c768:	subs	w8, w8, w0, uxtb
  43c76c:	str	w8, [sp, #68]
  43c770:	ldr	w8, [sp, #68]
  43c774:	str	w8, [sp, #176]
  43c778:	ldr	w8, [sp, #176]
  43c77c:	stur	w8, [x29, #-4]
  43c780:	mov	w8, #0x1                   	// #1
  43c784:	str	w8, [sp, #192]
  43c788:	b	43ccfc <apply_static_dev_perms+0x738>
  43c78c:	stur	wzr, [x29, #-4]
  43c790:	mov	w8, #0x1                   	// #1
  43c794:	str	w8, [sp, #192]
  43c798:	b	43ccfc <apply_static_dev_perms+0x738>
  43c79c:	ldr	w8, [sp, #224]
  43c7a0:	and	w8, w8, #0xf000
  43c7a4:	cmp	w8, #0x6, lsl #12
  43c7a8:	b.eq	43c848 <apply_static_dev_perms+0x284>  // b.none
  43c7ac:	ldr	w8, [sp, #224]
  43c7b0:	and	w8, w8, #0xf000
  43c7b4:	cmp	w8, #0x2, lsl #12
  43c7b8:	b.eq	43c848 <apply_static_dev_perms+0x284>  // b.none
  43c7bc:	mov	w8, #0x4                   	// #4
  43c7c0:	str	w8, [sp, #172]
  43c7c4:	str	wzr, [sp, #168]
  43c7c8:	mov	w8, #0x1                   	// #1
  43c7cc:	str	w8, [sp, #164]
  43c7d0:	ldr	w0, [sp, #164]
  43c7d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43c7d8:	ldr	w8, [sp, #172]
  43c7dc:	and	w8, w8, #0x7
  43c7e0:	cmp	w0, w8
  43c7e4:	b.lt	43c81c <apply_static_dev_perms+0x258>  // b.tstop
  43c7e8:	ldr	w8, [sp, #164]
  43c7ec:	ldr	w9, [sp, #172]
  43c7f0:	orr	w0, w9, w8, lsl #10
  43c7f4:	ldr	w1, [sp, #168]
  43c7f8:	ldr	x2, [sp, #88]
  43c7fc:	mov	w3, #0x8fa                 	// #2298
  43c800:	ldr	x4, [sp, #80]
  43c804:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43c808:	add	x5, x5, #0xe97
  43c80c:	add	x6, sp, #0x958
  43c810:	bl	40a400 <log_internal_realm@plt>
  43c814:	str	w0, [sp, #64]
  43c818:	b	43c830 <apply_static_dev_perms+0x26c>
  43c81c:	ldr	w0, [sp, #168]
  43c820:	bl	40a410 <abs@plt>
  43c824:	mov	w8, wzr
  43c828:	subs	w8, w8, w0, uxtb
  43c82c:	str	w8, [sp, #64]
  43c830:	ldr	w8, [sp, #64]
  43c834:	str	w8, [sp, #160]
  43c838:	stur	wzr, [x29, #-4]
  43c83c:	mov	w8, #0x1                   	// #1
  43c840:	str	w8, [sp, #192]
  43c844:	b	43ccfc <apply_static_dev_perms+0x738>
  43c848:	ldur	x0, [x29, #-40]
  43c84c:	bl	43cd18 <strv_isempty>
  43c850:	tbnz	w0, #0, 43c89c <apply_static_dev_perms+0x2d8>
  43c854:	ldur	x0, [x29, #-16]
  43c858:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  43c85c:	add	x1, x1, #0xecb
  43c860:	bl	43cd58 <xescape>
  43c864:	str	x0, [sp, #336]
  43c868:	ldr	x8, [sp, #336]
  43c86c:	cbnz	x8, 43c89c <apply_static_dev_perms+0x2d8>
  43c870:	mov	w8, #0x1                   	// #1
  43c874:	mov	w0, w8
  43c878:	ldr	x1, [sp, #88]
  43c87c:	mov	w2, #0x901                 	// #2305
  43c880:	ldr	x3, [sp, #80]
  43c884:	str	w8, [sp, #60]
  43c888:	bl	40a5e0 <log_oom_internal@plt>
  43c88c:	stur	w0, [x29, #-4]
  43c890:	ldr	w8, [sp, #60]
  43c894:	str	w8, [sp, #192]
  43c898:	b	43ccfc <apply_static_dev_perms+0x738>
  43c89c:	ldur	x8, [x29, #-40]
  43c8a0:	str	x8, [sp, #200]
  43c8a4:	ldr	x8, [sp, #200]
  43c8a8:	mov	w9, #0x0                   	// #0
  43c8ac:	str	w9, [sp, #56]
  43c8b0:	cbz	x8, 43c8c8 <apply_static_dev_perms+0x304>
  43c8b4:	ldr	x8, [sp, #200]
  43c8b8:	ldr	x8, [x8]
  43c8bc:	cmp	x8, #0x0
  43c8c0:	cset	w9, ne  // ne = any
  43c8c4:	str	w9, [sp, #56]
  43c8c8:	ldr	w8, [sp, #56]
  43c8cc:	tbnz	w8, #0, 43c8d4 <apply_static_dev_perms+0x310>
  43c8d0:	b	43cac4 <apply_static_dev_perms+0x500>
  43c8d4:	ldr	x8, [sp, #200]
  43c8d8:	ldr	x3, [x8]
  43c8dc:	add	x8, sp, #0x558
  43c8e0:	mov	x0, x8
  43c8e4:	mov	x1, #0x400                 	// #1024
  43c8e8:	adrp	x2, 468000 <on_inotify.__assert_in_set+0x4540>
  43c8ec:	add	x2, x2, #0xece
  43c8f0:	adrp	x4, 463000 <dhcp_lease_set_client_id+0xc4>
  43c8f4:	add	x4, x4, #0xb41
  43c8f8:	mov	x9, xzr
  43c8fc:	mov	x5, x9
  43c900:	str	x8, [sp, #48]
  43c904:	bl	40b400 <strscpyl@plt>
  43c908:	ldr	x8, [sp, #48]
  43c90c:	mov	x0, x8
  43c910:	mov	w1, #0x1ed                 	// #493
  43c914:	bl	40b520 <mkdir_p@plt>
  43c918:	str	w0, [sp, #196]
  43c91c:	ldr	w10, [sp, #196]
  43c920:	cmp	w10, #0x0
  43c924:	cset	w10, ge  // ge = tcont
  43c928:	tbnz	w10, #0, 43c9c0 <apply_static_dev_perms+0x3fc>
  43c92c:	mov	w8, #0x3                   	// #3
  43c930:	str	w8, [sp, #156]
  43c934:	ldr	w8, [sp, #196]
  43c938:	str	w8, [sp, #152]
  43c93c:	mov	w8, #0x1                   	// #1
  43c940:	str	w8, [sp, #148]
  43c944:	ldr	w0, [sp, #148]
  43c948:	bl	40a3f0 <log_get_max_level_realm@plt>
  43c94c:	ldr	w8, [sp, #156]
  43c950:	and	w8, w8, #0x7
  43c954:	cmp	w0, w8
  43c958:	b.lt	43c990 <apply_static_dev_perms+0x3cc>  // b.tstop
  43c95c:	ldr	w8, [sp, #148]
  43c960:	ldr	w9, [sp, #156]
  43c964:	orr	w0, w9, w8, lsl #10
  43c968:	ldr	w1, [sp, #152]
  43c96c:	ldr	x2, [sp, #88]
  43c970:	mov	w3, #0x909                 	// #2313
  43c974:	ldr	x4, [sp, #80]
  43c978:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43c97c:	add	x5, x5, #0xeea
  43c980:	add	x6, sp, #0x558
  43c984:	bl	40a400 <log_internal_realm@plt>
  43c988:	str	w0, [sp, #44]
  43c98c:	b	43c9a4 <apply_static_dev_perms+0x3e0>
  43c990:	ldr	w0, [sp, #152]
  43c994:	bl	40a410 <abs@plt>
  43c998:	mov	w8, wzr
  43c99c:	subs	w8, w8, w0, uxtb
  43c9a0:	str	w8, [sp, #44]
  43c9a4:	ldr	w8, [sp, #44]
  43c9a8:	str	w8, [sp, #144]
  43c9ac:	ldr	w8, [sp, #144]
  43c9b0:	stur	w8, [x29, #-4]
  43c9b4:	mov	w8, #0x1                   	// #1
  43c9b8:	str	w8, [sp, #192]
  43c9bc:	b	43ccfc <apply_static_dev_perms+0x738>
  43c9c0:	ldr	x3, [sp, #336]
  43c9c4:	add	x8, sp, #0x158
  43c9c8:	mov	x0, x8
  43c9cc:	mov	x1, #0x400                 	// #1024
  43c9d0:	add	x2, sp, #0x558
  43c9d4:	mov	x9, xzr
  43c9d8:	mov	x4, x9
  43c9dc:	str	x8, [sp, #32]
  43c9e0:	bl	40b400 <strscpyl@plt>
  43c9e4:	add	x8, sp, #0x958
  43c9e8:	mov	x0, x8
  43c9ec:	ldr	x1, [sp, #32]
  43c9f0:	bl	40b1b0 <symlink@plt>
  43c9f4:	str	w0, [sp, #196]
  43c9f8:	ldr	w10, [sp, #196]
  43c9fc:	cmp	w10, #0x0
  43ca00:	cset	w10, ge  // ge = tcont
  43ca04:	tbnz	w10, #0, 43cab4 <apply_static_dev_perms+0x4f0>
  43ca08:	bl	40a480 <__errno_location@plt>
  43ca0c:	ldr	w8, [x0]
  43ca10:	cmp	w8, #0x11
  43ca14:	b.eq	43cab4 <apply_static_dev_perms+0x4f0>  // b.none
  43ca18:	mov	w8, #0x3                   	// #3
  43ca1c:	str	w8, [sp, #140]
  43ca20:	bl	40a480 <__errno_location@plt>
  43ca24:	ldr	w8, [x0]
  43ca28:	str	w8, [sp, #136]
  43ca2c:	mov	w8, #0x1                   	// #1
  43ca30:	str	w8, [sp, #132]
  43ca34:	ldr	w0, [sp, #132]
  43ca38:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ca3c:	ldr	w8, [sp, #140]
  43ca40:	and	w8, w8, #0x7
  43ca44:	cmp	w0, w8
  43ca48:	b.lt	43ca84 <apply_static_dev_perms+0x4c0>  // b.tstop
  43ca4c:	ldr	w8, [sp, #132]
  43ca50:	ldr	w9, [sp, #140]
  43ca54:	orr	w0, w9, w8, lsl #10
  43ca58:	ldr	w1, [sp, #136]
  43ca5c:	ldr	x2, [sp, #88]
  43ca60:	mov	w3, #0x90f                 	// #2319
  43ca64:	ldr	x4, [sp, #80]
  43ca68:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43ca6c:	add	x5, x5, #0xf02
  43ca70:	add	x6, sp, #0x158
  43ca74:	add	x7, sp, #0x958
  43ca78:	bl	40a400 <log_internal_realm@plt>
  43ca7c:	str	w0, [sp, #28]
  43ca80:	b	43ca98 <apply_static_dev_perms+0x4d4>
  43ca84:	ldr	w0, [sp, #136]
  43ca88:	bl	40a410 <abs@plt>
  43ca8c:	mov	w8, wzr
  43ca90:	subs	w8, w8, w0, uxtb
  43ca94:	str	w8, [sp, #28]
  43ca98:	ldr	w8, [sp, #28]
  43ca9c:	str	w8, [sp, #128]
  43caa0:	ldr	w8, [sp, #128]
  43caa4:	stur	w8, [x29, #-4]
  43caa8:	mov	w8, #0x1                   	// #1
  43caac:	str	w8, [sp, #192]
  43cab0:	b	43ccfc <apply_static_dev_perms+0x738>
  43cab4:	ldr	x8, [sp, #200]
  43cab8:	add	x8, x8, #0x8
  43cabc:	str	x8, [sp, #200]
  43cac0:	b	43c8a4 <apply_static_dev_perms+0x2e0>
  43cac4:	ldur	w8, [x29, #-20]
  43cac8:	mov	w9, #0xffffffff            	// #-1
  43cacc:	cmp	w8, w9
  43cad0:	b.ne	43cb04 <apply_static_dev_perms+0x540>  // b.any
  43cad4:	ldur	w8, [x29, #-24]
  43cad8:	mov	w9, #0xffffffff            	// #-1
  43cadc:	cmp	w8, w9
  43cae0:	b.ne	43cb04 <apply_static_dev_perms+0x540>  // b.any
  43cae4:	ldur	w8, [x29, #-28]
  43cae8:	mov	w9, #0xffffffff            	// #-1
  43caec:	cmp	w8, w9
  43caf0:	b.ne	43cb04 <apply_static_dev_perms+0x540>  // b.any
  43caf4:	stur	wzr, [x29, #-4]
  43caf8:	mov	w8, #0x1                   	// #1
  43cafc:	str	w8, [sp, #192]
  43cb00:	b	43ccfc <apply_static_dev_perms+0x738>
  43cb04:	ldur	w8, [x29, #-28]
  43cb08:	mov	w9, #0xffffffff            	// #-1
  43cb0c:	cmp	w8, w9
  43cb10:	b.ne	43cb30 <apply_static_dev_perms+0x56c>  // b.any
  43cb14:	ldur	w0, [x29, #-24]
  43cb18:	bl	43cd90 <gid_is_valid>
  43cb1c:	mov	w8, #0x180                 	// #384
  43cb20:	mov	w9, #0x1b0                 	// #432
  43cb24:	tst	w0, #0x1
  43cb28:	csel	w8, w9, w8, ne  // ne = any
  43cb2c:	stur	w8, [x29, #-28]
  43cb30:	ldur	w0, [x29, #-20]
  43cb34:	bl	40b020 <uid_is_valid@plt>
  43cb38:	tbnz	w0, #0, 43cb40 <apply_static_dev_perms+0x57c>
  43cb3c:	stur	wzr, [x29, #-20]
  43cb40:	ldur	w0, [x29, #-24]
  43cb44:	bl	43cd90 <gid_is_valid>
  43cb48:	tbnz	w0, #0, 43cb50 <apply_static_dev_perms+0x58c>
  43cb4c:	stur	wzr, [x29, #-24]
  43cb50:	ldur	w1, [x29, #-28]
  43cb54:	ldur	w2, [x29, #-20]
  43cb58:	ldur	w3, [x29, #-24]
  43cb5c:	add	x0, sp, #0x958
  43cb60:	bl	40b0f0 <chmod_and_chown@plt>
  43cb64:	str	w0, [sp, #196]
  43cb68:	ldr	w8, [sp, #196]
  43cb6c:	mov	w9, #0xfffffffe            	// #-2
  43cb70:	cmp	w8, w9
  43cb74:	b.ne	43cb88 <apply_static_dev_perms+0x5c4>  // b.any
  43cb78:	stur	wzr, [x29, #-4]
  43cb7c:	mov	w8, #0x1                   	// #1
  43cb80:	str	w8, [sp, #192]
  43cb84:	b	43ccfc <apply_static_dev_perms+0x738>
  43cb88:	ldr	w8, [sp, #196]
  43cb8c:	cmp	w8, #0x0
  43cb90:	cset	w8, ge  // ge = tcont
  43cb94:	tbnz	w8, #0, 43cc3c <apply_static_dev_perms+0x678>
  43cb98:	mov	w8, #0x3                   	// #3
  43cb9c:	str	w8, [sp, #124]
  43cba0:	ldr	w8, [sp, #196]
  43cba4:	str	w8, [sp, #120]
  43cba8:	mov	w8, #0x1                   	// #1
  43cbac:	str	w8, [sp, #116]
  43cbb0:	ldr	w0, [sp, #116]
  43cbb4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43cbb8:	ldr	w8, [sp, #124]
  43cbbc:	and	w8, w8, #0x7
  43cbc0:	cmp	w0, w8
  43cbc4:	b.lt	43cc0c <apply_static_dev_perms+0x648>  // b.tstop
  43cbc8:	ldr	w8, [sp, #116]
  43cbcc:	ldr	w9, [sp, #124]
  43cbd0:	orr	w0, w9, w8, lsl #10
  43cbd4:	ldr	w1, [sp, #120]
  43cbd8:	ldur	w7, [x29, #-20]
  43cbdc:	ldur	w8, [x29, #-24]
  43cbe0:	ldr	x2, [sp, #88]
  43cbe4:	mov	w3, #0x921                 	// #2337
  43cbe8:	ldr	x4, [sp, #80]
  43cbec:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43cbf0:	add	x5, x5, #0xf28
  43cbf4:	add	x6, sp, #0x958
  43cbf8:	mov	x10, sp
  43cbfc:	str	w8, [x10]
  43cc00:	bl	40a400 <log_internal_realm@plt>
  43cc04:	str	w0, [sp, #24]
  43cc08:	b	43cc20 <apply_static_dev_perms+0x65c>
  43cc0c:	ldr	w0, [sp, #120]
  43cc10:	bl	40a410 <abs@plt>
  43cc14:	mov	w8, wzr
  43cc18:	subs	w8, w8, w0, uxtb
  43cc1c:	str	w8, [sp, #24]
  43cc20:	ldr	w8, [sp, #24]
  43cc24:	str	w8, [sp, #112]
  43cc28:	ldr	w8, [sp, #112]
  43cc2c:	stur	w8, [x29, #-4]
  43cc30:	mov	w8, #0x1                   	// #1
  43cc34:	str	w8, [sp, #192]
  43cc38:	b	43ccfc <apply_static_dev_perms+0x738>
  43cc3c:	mov	w8, #0x7                   	// #7
  43cc40:	str	w8, [sp, #108]
  43cc44:	str	wzr, [sp, #104]
  43cc48:	mov	w8, #0x1                   	// #1
  43cc4c:	str	w8, [sp, #100]
  43cc50:	ldr	w0, [sp, #100]
  43cc54:	bl	40a3f0 <log_get_max_level_realm@plt>
  43cc58:	ldr	w8, [sp, #108]
  43cc5c:	and	w8, w8, #0x7
  43cc60:	cmp	w0, w8
  43cc64:	b.lt	43ccb8 <apply_static_dev_perms+0x6f4>  // b.tstop
  43cc68:	ldr	w8, [sp, #100]
  43cc6c:	ldr	w9, [sp, #108]
  43cc70:	orr	w0, w9, w8, lsl #10
  43cc74:	ldr	w1, [sp, #104]
  43cc78:	ldur	w7, [x29, #-20]
  43cc7c:	ldur	w8, [x29, #-24]
  43cc80:	ldur	w9, [x29, #-28]
  43cc84:	ldr	x2, [sp, #88]
  43cc88:	mov	w3, #0x923                 	// #2339
  43cc8c:	ldr	x4, [sp, #80]
  43cc90:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43cc94:	add	x5, x5, #0xf47
  43cc98:	add	x6, sp, #0x958
  43cc9c:	mov	x10, sp
  43cca0:	str	w8, [x10]
  43cca4:	mov	x10, sp
  43cca8:	str	w9, [x10, #8]
  43ccac:	bl	40a400 <log_internal_realm@plt>
  43ccb0:	str	w0, [sp, #20]
  43ccb4:	b	43cccc <apply_static_dev_perms+0x708>
  43ccb8:	ldr	w0, [sp, #104]
  43ccbc:	bl	40a410 <abs@plt>
  43ccc0:	mov	w8, wzr
  43ccc4:	subs	w8, w8, w0, uxtb
  43ccc8:	str	w8, [sp, #20]
  43cccc:	ldr	w8, [sp, #20]
  43ccd0:	str	w8, [sp, #96]
  43ccd4:	mov	w0, #0xffffff9c            	// #-100
  43ccd8:	add	x1, sp, #0x958
  43ccdc:	mov	x8, xzr
  43cce0:	mov	x2, x8
  43cce4:	mov	w9, wzr
  43cce8:	mov	w3, w9
  43ccec:	bl	40b130 <utimensat@plt>
  43ccf0:	stur	wzr, [x29, #-4]
  43ccf4:	mov	w9, #0x1                   	// #1
  43ccf8:	str	w9, [sp, #192]
  43ccfc:	add	x0, sp, #0x150
  43cd00:	bl	4230c8 <freep>
  43cd04:	ldur	w0, [x29, #-4]
  43cd08:	add	sp, sp, #0xd80
  43cd0c:	ldr	x28, [sp, #16]
  43cd10:	ldp	x29, x30, [sp], #32
  43cd14:	ret

000000000043cd18 <strv_isempty>:
  43cd18:	sub	sp, sp, #0x10
  43cd1c:	str	x0, [sp, #8]
  43cd20:	ldr	x8, [sp, #8]
  43cd24:	mov	w9, #0x1                   	// #1
  43cd28:	str	w9, [sp, #4]
  43cd2c:	cbz	x8, 43cd48 <strv_isempty+0x30>
  43cd30:	ldr	x8, [sp, #8]
  43cd34:	ldr	x8, [x8]
  43cd38:	cmp	x8, #0x0
  43cd3c:	cset	w9, ne  // ne = any
  43cd40:	eor	w9, w9, #0x1
  43cd44:	str	w9, [sp, #4]
  43cd48:	ldr	w8, [sp, #4]
  43cd4c:	and	w0, w8, #0x1
  43cd50:	add	sp, sp, #0x10
  43cd54:	ret

000000000043cd58 <xescape>:
  43cd58:	sub	sp, sp, #0x20
  43cd5c:	stp	x29, x30, [sp, #16]
  43cd60:	add	x29, sp, #0x10
  43cd64:	mov	x2, #0xffffffffffffffff    	// #-1
  43cd68:	str	x0, [sp, #8]
  43cd6c:	str	x1, [sp]
  43cd70:	ldr	x0, [sp, #8]
  43cd74:	ldr	x1, [sp]
  43cd78:	mov	w8, wzr
  43cd7c:	and	w3, w8, #0x1
  43cd80:	bl	40b530 <xescape_full@plt>
  43cd84:	ldp	x29, x30, [sp, #16]
  43cd88:	add	sp, sp, #0x20
  43cd8c:	ret

000000000043cd90 <gid_is_valid>:
  43cd90:	sub	sp, sp, #0x20
  43cd94:	stp	x29, x30, [sp, #16]
  43cd98:	add	x29, sp, #0x10
  43cd9c:	stur	w0, [x29, #-4]
  43cda0:	ldur	w0, [x29, #-4]
  43cda4:	bl	40b020 <uid_is_valid@plt>
  43cda8:	and	w0, w0, #0x1
  43cdac:	ldp	x29, x30, [sp, #16]
  43cdb0:	add	sp, sp, #0x20
  43cdb4:	ret

000000000043cdb8 <udev_watch_init>:
  43cdb8:	sub	sp, sp, #0x20
  43cdbc:	stp	x29, x30, [sp, #16]
  43cdc0:	add	x29, sp, #0x10
  43cdc4:	mov	w0, #0x80000               	// #524288
  43cdc8:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43cdcc:	add	x8, x8, #0x148
  43cdd0:	str	x8, [sp]
  43cdd4:	bl	40b540 <inotify_init1@plt>
  43cdd8:	ldr	x8, [sp]
  43cddc:	str	w0, [x8]
  43cde0:	ldr	w9, [x8]
  43cde4:	cmp	w9, #0x0
  43cde8:	cset	w9, ge  // ge = tcont
  43cdec:	tbnz	w9, #0, 43ce08 <udev_watch_init+0x50>
  43cdf0:	bl	40a480 <__errno_location@plt>
  43cdf4:	ldr	w8, [x0]
  43cdf8:	mov	w9, wzr
  43cdfc:	subs	w8, w9, w8
  43ce00:	stur	w8, [x29, #-4]
  43ce04:	b	43ce14 <udev_watch_init+0x5c>
  43ce08:	ldr	x8, [sp]
  43ce0c:	ldr	w9, [x8]
  43ce10:	stur	w9, [x29, #-4]
  43ce14:	ldur	w0, [x29, #-4]
  43ce18:	ldp	x29, x30, [sp, #16]
  43ce1c:	add	sp, sp, #0x20
  43ce20:	ret

000000000043ce24 <udev_watch_restore>:
  43ce24:	sub	sp, sp, #0x100
  43ce28:	stp	x29, x30, [sp, #240]
  43ce2c:	add	x29, sp, #0xf0
  43ce30:	sub	x8, x29, #0x18
  43ce34:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  43ce38:	add	x9, x9, #0x148
  43ce3c:	adrp	x10, 468000 <on_inotify.__assert_in_set+0x4540>
  43ce40:	add	x10, x10, #0xfbe
  43ce44:	adrp	x11, 468000 <on_inotify.__assert_in_set+0x4540>
  43ce48:	add	x11, x11, #0xf66
  43ce4c:	add	x11, x11, #0x3
  43ce50:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  43ce54:	add	x12, x12, #0xf7f
  43ce58:	ldr	w13, [x9]
  43ce5c:	cmp	w13, #0x0
  43ce60:	cset	w13, ge  // ge = tcont
  43ce64:	str	x8, [sp, #64]
  43ce68:	str	x10, [sp, #56]
  43ce6c:	str	x11, [sp, #48]
  43ce70:	str	x12, [sp, #40]
  43ce74:	tbnz	w13, #0, 43cf04 <udev_watch_restore+0xe0>
  43ce78:	mov	w8, #0x7                   	// #7
  43ce7c:	stur	w8, [x29, #-32]
  43ce80:	mov	w8, #0x16                  	// #22
  43ce84:	movk	w8, #0x4000, lsl #16
  43ce88:	stur	w8, [x29, #-36]
  43ce8c:	mov	w8, #0x1                   	// #1
  43ce90:	stur	w8, [x29, #-40]
  43ce94:	ldur	w0, [x29, #-40]
  43ce98:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ce9c:	ldur	w8, [x29, #-32]
  43cea0:	and	w8, w8, #0x7
  43cea4:	cmp	w0, w8
  43cea8:	b.lt	43cedc <udev_watch_restore+0xb8>  // b.tstop
  43ceac:	ldur	w8, [x29, #-40]
  43ceb0:	ldur	w9, [x29, #-32]
  43ceb4:	orr	w0, w9, w8, lsl #10
  43ceb8:	ldur	w1, [x29, #-36]
  43cebc:	ldr	x2, [sp, #48]
  43cec0:	mov	w3, #0x28                  	// #40
  43cec4:	ldr	x4, [sp, #40]
  43cec8:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43cecc:	add	x5, x5, #0xf92
  43ced0:	bl	40a400 <log_internal_realm@plt>
  43ced4:	str	w0, [sp, #36]
  43ced8:	b	43cef0 <udev_watch_restore+0xcc>
  43cedc:	ldur	w0, [x29, #-36]
  43cee0:	bl	40a410 <abs@plt>
  43cee4:	mov	w8, wzr
  43cee8:	subs	w8, w8, w0, uxtb
  43ceec:	str	w8, [sp, #36]
  43cef0:	ldr	w8, [sp, #36]
  43cef4:	stur	w8, [x29, #-44]
  43cef8:	ldur	w8, [x29, #-44]
  43cefc:	stur	w8, [x29, #-4]
  43cf00:	b	43d37c <udev_watch_restore+0x558>
  43cf04:	adrp	x0, 468000 <on_inotify.__assert_in_set+0x4540>
  43cf08:	add	x0, x0, #0xfae
  43cf0c:	ldr	x1, [sp, #56]
  43cf10:	bl	40b1d0 <rename@plt>
  43cf14:	cmp	w0, #0x0
  43cf18:	cset	w8, ge  // ge = tcont
  43cf1c:	tbnz	w8, #0, 43cfc4 <udev_watch_restore+0x1a0>
  43cf20:	bl	40a480 <__errno_location@plt>
  43cf24:	ldr	w8, [x0]
  43cf28:	cmp	w8, #0x2
  43cf2c:	b.eq	43cfbc <udev_watch_restore+0x198>  // b.none
  43cf30:	mov	w8, #0x4                   	// #4
  43cf34:	stur	w8, [x29, #-48]
  43cf38:	bl	40a480 <__errno_location@plt>
  43cf3c:	ldr	w8, [x0]
  43cf40:	stur	w8, [x29, #-52]
  43cf44:	mov	w8, #0x1                   	// #1
  43cf48:	stur	w8, [x29, #-56]
  43cf4c:	ldur	w0, [x29, #-56]
  43cf50:	bl	40a3f0 <log_get_max_level_realm@plt>
  43cf54:	ldur	w8, [x29, #-48]
  43cf58:	and	w8, w8, #0x7
  43cf5c:	cmp	w0, w8
  43cf60:	b.lt	43cf94 <udev_watch_restore+0x170>  // b.tstop
  43cf64:	ldur	w8, [x29, #-56]
  43cf68:	ldur	w9, [x29, #-48]
  43cf6c:	orr	w0, w9, w8, lsl #10
  43cf70:	ldur	w1, [x29, #-52]
  43cf74:	ldr	x2, [sp, #48]
  43cf78:	mov	w3, #0x2c                  	// #44
  43cf7c:	ldr	x4, [sp, #40]
  43cf80:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43cf84:	add	x5, x5, #0xfd2
  43cf88:	bl	40a400 <log_internal_realm@plt>
  43cf8c:	str	w0, [sp, #32]
  43cf90:	b	43cfa8 <udev_watch_restore+0x184>
  43cf94:	ldur	w0, [x29, #-52]
  43cf98:	bl	40a410 <abs@plt>
  43cf9c:	mov	w8, wzr
  43cfa0:	subs	w8, w8, w0, uxtb
  43cfa4:	str	w8, [sp, #32]
  43cfa8:	ldr	w8, [sp, #32]
  43cfac:	stur	w8, [x29, #-60]
  43cfb0:	ldur	w8, [x29, #-60]
  43cfb4:	stur	w8, [x29, #-4]
  43cfb8:	b	43d37c <udev_watch_restore+0x558>
  43cfbc:	stur	wzr, [x29, #-4]
  43cfc0:	b	43d37c <udev_watch_restore+0x558>
  43cfc4:	ldr	x0, [sp, #56]
  43cfc8:	bl	40b1f0 <opendir@plt>
  43cfcc:	ldr	x8, [sp, #64]
  43cfd0:	str	x0, [x8]
  43cfd4:	ldr	x9, [x8]
  43cfd8:	cbnz	x9, 43d068 <udev_watch_restore+0x244>
  43cfdc:	mov	w8, #0x4                   	// #4
  43cfe0:	stur	w8, [x29, #-64]
  43cfe4:	bl	40a480 <__errno_location@plt>
  43cfe8:	ldr	w8, [x0]
  43cfec:	stur	w8, [x29, #-68]
  43cff0:	mov	w8, #0x1                   	// #1
  43cff4:	stur	w8, [x29, #-72]
  43cff8:	ldur	w0, [x29, #-72]
  43cffc:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d000:	ldur	w8, [x29, #-64]
  43d004:	and	w8, w8, #0x7
  43d008:	cmp	w0, w8
  43d00c:	b.lt	43d040 <udev_watch_restore+0x21c>  // b.tstop
  43d010:	ldur	w8, [x29, #-72]
  43d014:	ldur	w9, [x29, #-64]
  43d018:	orr	w0, w9, w8, lsl #10
  43d01c:	ldur	w1, [x29, #-68]
  43d020:	ldr	x2, [sp, #48]
  43d024:	mov	w3, #0x33                  	// #51
  43d028:	ldr	x4, [sp, #40]
  43d02c:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43d030:	add	x5, x5, #0x29
  43d034:	bl	40a400 <log_internal_realm@plt>
  43d038:	str	w0, [sp, #28]
  43d03c:	b	43d054 <udev_watch_restore+0x230>
  43d040:	ldur	w0, [x29, #-68]
  43d044:	bl	40a410 <abs@plt>
  43d048:	mov	w8, wzr
  43d04c:	subs	w8, w8, w0, uxtb
  43d050:	str	w8, [sp, #28]
  43d054:	ldr	w8, [sp, #28]
  43d058:	stur	w8, [x29, #-76]
  43d05c:	ldur	w8, [x29, #-76]
  43d060:	stur	w8, [x29, #-4]
  43d064:	b	43d37c <udev_watch_restore+0x558>
  43d068:	bl	40a480 <__errno_location@plt>
  43d06c:	str	wzr, [x0]
  43d070:	ldr	x8, [sp, #64]
  43d074:	ldr	x0, [x8]
  43d078:	bl	40b200 <readdir64@plt>
  43d07c:	ldr	x8, [sp, #64]
  43d080:	str	x0, [x8, #8]
  43d084:	ldr	x8, [sp, #64]
  43d088:	ldr	x9, [x8, #8]
  43d08c:	cbnz	x9, 43d0ac <udev_watch_restore+0x288>
  43d090:	bl	40a480 <__errno_location@plt>
  43d094:	ldr	w8, [x0]
  43d098:	cmp	w8, #0x0
  43d09c:	cset	w8, le
  43d0a0:	tbnz	w8, #0, 43d0a8 <udev_watch_restore+0x284>
  43d0a4:	b	43d360 <udev_watch_restore+0x53c>
  43d0a8:	b	43d360 <udev_watch_restore+0x53c>
  43d0ac:	mov	x8, xzr
  43d0b0:	stur	x8, [x29, #-88]
  43d0b4:	stur	x8, [x29, #-96]
  43d0b8:	ldr	x8, [sp, #64]
  43d0bc:	ldr	x9, [x8, #8]
  43d0c0:	ldrb	w10, [x9, #19]
  43d0c4:	cmp	w10, #0x2e
  43d0c8:	b.ne	43d0d8 <udev_watch_restore+0x2b4>  // b.any
  43d0cc:	mov	w8, #0x4                   	// #4
  43d0d0:	stur	w8, [x29, #-100]
  43d0d4:	b	43d320 <udev_watch_restore+0x4fc>
  43d0d8:	ldr	x8, [sp, #64]
  43d0dc:	ldr	x0, [x8]
  43d0e0:	bl	40b4c0 <dirfd@plt>
  43d0e4:	ldr	x8, [sp, #64]
  43d0e8:	ldr	x9, [x8, #8]
  43d0ec:	add	x1, x9, #0x13
  43d0f0:	sub	x2, x29, #0x60
  43d0f4:	bl	40b550 <readlinkat_malloc@plt>
  43d0f8:	stur	w0, [x29, #-28]
  43d0fc:	ldur	w10, [x29, #-28]
  43d100:	cmp	w10, #0x0
  43d104:	cset	w10, ge  // ge = tcont
  43d108:	tbnz	w10, #0, 43d198 <udev_watch_restore+0x374>
  43d10c:	mov	w8, #0x7                   	// #7
  43d110:	stur	w8, [x29, #-104]
  43d114:	ldur	w8, [x29, #-28]
  43d118:	stur	w8, [x29, #-108]
  43d11c:	mov	w8, #0x1                   	// #1
  43d120:	stur	w8, [x29, #-112]
  43d124:	ldur	w0, [x29, #-112]
  43d128:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d12c:	ldur	w8, [x29, #-104]
  43d130:	and	w8, w8, #0x7
  43d134:	cmp	w0, w8
  43d138:	b.lt	43d178 <udev_watch_restore+0x354>  // b.tstop
  43d13c:	ldur	w8, [x29, #-112]
  43d140:	ldur	w9, [x29, #-104]
  43d144:	orr	w0, w9, w8, lsl #10
  43d148:	ldur	w1, [x29, #-108]
  43d14c:	ldr	x10, [sp, #64]
  43d150:	ldr	x11, [x10, #8]
  43d154:	add	x6, x11, #0x13
  43d158:	ldr	x2, [sp, #48]
  43d15c:	mov	w3, #0x3e                  	// #62
  43d160:	ldr	x4, [sp, #40]
  43d164:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43d168:	add	x5, x5, #0x88
  43d16c:	bl	40a400 <log_internal_realm@plt>
  43d170:	str	w0, [sp, #24]
  43d174:	b	43d18c <udev_watch_restore+0x368>
  43d178:	ldur	w0, [x29, #-108]
  43d17c:	bl	40a410 <abs@plt>
  43d180:	mov	w8, wzr
  43d184:	subs	w8, w8, w0, uxtb
  43d188:	str	w8, [sp, #24]
  43d18c:	ldr	w8, [sp, #24]
  43d190:	stur	w8, [x29, #-116]
  43d194:	b	43d2f8 <udev_watch_restore+0x4d4>
  43d198:	ldur	x1, [x29, #-96]
  43d19c:	sub	x0, x29, #0x58
  43d1a0:	bl	40b210 <sd_device_new_from_device_id@plt>
  43d1a4:	stur	w0, [x29, #-28]
  43d1a8:	ldur	w8, [x29, #-28]
  43d1ac:	cmp	w8, #0x0
  43d1b0:	cset	w8, ge  // ge = tcont
  43d1b4:	tbnz	w8, #0, 43d23c <udev_watch_restore+0x418>
  43d1b8:	mov	w8, #0x7                   	// #7
  43d1bc:	str	w8, [sp, #120]
  43d1c0:	ldur	w8, [x29, #-28]
  43d1c4:	str	w8, [sp, #116]
  43d1c8:	mov	w8, #0x1                   	// #1
  43d1cc:	str	w8, [sp, #112]
  43d1d0:	ldr	w0, [sp, #112]
  43d1d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d1d8:	ldr	w8, [sp, #120]
  43d1dc:	and	w8, w8, #0x7
  43d1e0:	cmp	w0, w8
  43d1e4:	b.lt	43d21c <udev_watch_restore+0x3f8>  // b.tstop
  43d1e8:	ldr	w8, [sp, #112]
  43d1ec:	ldr	w9, [sp, #120]
  43d1f0:	orr	w0, w9, w8, lsl #10
  43d1f4:	ldr	w1, [sp, #116]
  43d1f8:	ldur	x6, [x29, #-96]
  43d1fc:	ldr	x2, [sp, #48]
  43d200:	mov	w3, #0x44                  	// #68
  43d204:	ldr	x4, [sp, #40]
  43d208:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43d20c:	add	x5, x5, #0xc3
  43d210:	bl	40a400 <log_internal_realm@plt>
  43d214:	str	w0, [sp, #20]
  43d218:	b	43d230 <udev_watch_restore+0x40c>
  43d21c:	ldr	w0, [sp, #116]
  43d220:	bl	40a410 <abs@plt>
  43d224:	mov	w8, wzr
  43d228:	subs	w8, w8, w0, uxtb
  43d22c:	str	w8, [sp, #20]
  43d230:	ldr	w8, [sp, #20]
  43d234:	str	w8, [sp, #108]
  43d238:	b	43d2f8 <udev_watch_restore+0x4d4>
  43d23c:	mov	x8, xzr
  43d240:	str	x8, [sp, #96]
  43d244:	ldur	x8, [x29, #-88]
  43d248:	str	x8, [sp, #88]
  43d24c:	mov	w9, #0x7                   	// #7
  43d250:	str	w9, [sp, #84]
  43d254:	str	wzr, [sp, #80]
  43d258:	ldr	x8, [sp, #88]
  43d25c:	cbz	x8, 43d29c <udev_watch_restore+0x478>
  43d260:	mov	w0, #0x1                   	// #1
  43d264:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d268:	ldr	w8, [sp, #84]
  43d26c:	cmp	w0, w8
  43d270:	cset	w8, ge  // ge = tcont
  43d274:	mov	w9, #0x1                   	// #1
  43d278:	eor	w8, w8, #0x1
  43d27c:	eor	w8, w8, w9
  43d280:	and	w8, w8, #0x1
  43d284:	mov	w1, w8
  43d288:	sxtw	x10, w1
  43d28c:	cbz	x10, 43d29c <udev_watch_restore+0x478>
  43d290:	ldr	x0, [sp, #88]
  43d294:	add	x1, sp, #0x60
  43d298:	bl	40a860 <sd_device_get_sysname@plt>
  43d29c:	ldr	w0, [sp, #84]
  43d2a0:	ldr	w1, [sp, #80]
  43d2a4:	ldr	x8, [sp, #96]
  43d2a8:	mov	x9, xzr
  43d2ac:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43d2b0:	add	x10, x10, #0xa46
  43d2b4:	cmp	x8, #0x0
  43d2b8:	csel	x5, x10, x9, ne  // ne = any
  43d2bc:	ldr	x6, [sp, #96]
  43d2c0:	ldr	x2, [sp, #48]
  43d2c4:	mov	w3, #0x48                  	// #72
  43d2c8:	ldr	x4, [sp, #40]
  43d2cc:	mov	x7, x9
  43d2d0:	mov	x8, sp
  43d2d4:	str	x9, [x8]
  43d2d8:	mov	x8, sp
  43d2dc:	adrp	x9, 469000 <on_inotify.__assert_in_set+0x5540>
  43d2e0:	add	x9, x9, #0xfc
  43d2e4:	str	x9, [x8, #8]
  43d2e8:	bl	40a870 <log_object_internal@plt>
  43d2ec:	str	w0, [sp, #76]
  43d2f0:	ldur	x0, [x29, #-88]
  43d2f4:	bl	43d3e8 <udev_watch_begin>
  43d2f8:	ldr	x8, [sp, #64]
  43d2fc:	ldr	x0, [x8]
  43d300:	bl	40b4c0 <dirfd@plt>
  43d304:	ldr	x8, [sp, #64]
  43d308:	ldr	x9, [x8, #8]
  43d30c:	add	x1, x9, #0x13
  43d310:	mov	w10, wzr
  43d314:	mov	w2, w10
  43d318:	bl	40b560 <unlinkat@plt>
  43d31c:	stur	wzr, [x29, #-100]
  43d320:	sub	x0, x29, #0x60
  43d324:	bl	43d3c0 <freep>
  43d328:	sub	x0, x29, #0x58
  43d32c:	bl	43d38c <sd_device_unrefp>
  43d330:	ldur	w8, [x29, #-100]
  43d334:	cbz	w8, 43d340 <udev_watch_restore+0x51c>
  43d338:	b	43d33c <udev_watch_restore+0x518>
  43d33c:	b	43d340 <udev_watch_restore+0x51c>
  43d340:	bl	40a480 <__errno_location@plt>
  43d344:	str	wzr, [x0]
  43d348:	ldr	x8, [sp, #64]
  43d34c:	ldr	x0, [x8]
  43d350:	bl	40b200 <readdir64@plt>
  43d354:	ldr	x8, [sp, #64]
  43d358:	str	x0, [x8, #8]
  43d35c:	b	43d084 <udev_watch_restore+0x260>
  43d360:	ldr	x8, [sp, #64]
  43d364:	ldr	x0, [x8]
  43d368:	bl	40b230 <closedir@plt>
  43d36c:	ldr	x8, [sp, #56]
  43d370:	mov	x0, x8
  43d374:	bl	40b0c0 <rmdir@plt>
  43d378:	stur	wzr, [x29, #-4]
  43d37c:	ldur	w0, [x29, #-4]
  43d380:	ldp	x29, x30, [sp, #240]
  43d384:	add	sp, sp, #0x100
  43d388:	ret

000000000043d38c <sd_device_unrefp>:
  43d38c:	sub	sp, sp, #0x20
  43d390:	stp	x29, x30, [sp, #16]
  43d394:	add	x29, sp, #0x10
  43d398:	str	x0, [sp, #8]
  43d39c:	ldr	x8, [sp, #8]
  43d3a0:	ldr	x8, [x8]
  43d3a4:	cbz	x8, 43d3b4 <sd_device_unrefp+0x28>
  43d3a8:	ldr	x8, [sp, #8]
  43d3ac:	ldr	x0, [x8]
  43d3b0:	bl	40a7c0 <sd_device_unref@plt>
  43d3b4:	ldp	x29, x30, [sp, #16]
  43d3b8:	add	sp, sp, #0x20
  43d3bc:	ret

000000000043d3c0 <freep>:
  43d3c0:	sub	sp, sp, #0x20
  43d3c4:	stp	x29, x30, [sp, #16]
  43d3c8:	add	x29, sp, #0x10
  43d3cc:	str	x0, [sp, #8]
  43d3d0:	ldr	x8, [sp, #8]
  43d3d4:	ldr	x0, [x8]
  43d3d8:	bl	40a530 <free@plt>
  43d3dc:	ldp	x29, x30, [sp, #16]
  43d3e0:	add	sp, sp, #0x20
  43d3e4:	ret

000000000043d3e8 <udev_watch_begin>:
  43d3e8:	sub	sp, sp, #0x180
  43d3ec:	stp	x29, x30, [sp, #352]
  43d3f0:	str	x28, [sp, #368]
  43d3f4:	add	x29, sp, #0x160
  43d3f8:	sub	x8, x29, #0x88
  43d3fc:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  43d400:	add	x9, x9, #0x148
  43d404:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43d408:	add	x10, x10, #0xa46
  43d40c:	adrp	x11, 468000 <on_inotify.__assert_in_set+0x4540>
  43d410:	add	x11, x11, #0xf66
  43d414:	add	x11, x11, #0x3
  43d418:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  43d41c:	add	x12, x12, #0x110
  43d420:	str	x0, [x8, #120]
  43d424:	ldr	w13, [x9]
  43d428:	cmp	w13, #0x0
  43d42c:	cset	w13, ge  // ge = tcont
  43d430:	str	x8, [sp, #64]
  43d434:	str	x10, [sp, #56]
  43d438:	str	x11, [sp, #48]
  43d43c:	str	x12, [sp, #40]
  43d440:	tbnz	w13, #0, 43d4d0 <udev_watch_begin+0xe8>
  43d444:	mov	w8, #0x7                   	// #7
  43d448:	stur	w8, [x29, #-76]
  43d44c:	mov	w8, #0x16                  	// #22
  43d450:	movk	w8, #0x4000, lsl #16
  43d454:	stur	w8, [x29, #-80]
  43d458:	mov	w8, #0x1                   	// #1
  43d45c:	stur	w8, [x29, #-84]
  43d460:	ldur	w0, [x29, #-84]
  43d464:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d468:	ldur	w8, [x29, #-76]
  43d46c:	and	w8, w8, #0x7
  43d470:	cmp	w0, w8
  43d474:	b.lt	43d4a8 <udev_watch_begin+0xc0>  // b.tstop
  43d478:	ldur	w8, [x29, #-84]
  43d47c:	ldur	w9, [x29, #-76]
  43d480:	orr	w0, w9, w8, lsl #10
  43d484:	ldur	w1, [x29, #-80]
  43d488:	ldr	x2, [sp, #48]
  43d48c:	mov	w3, #0x5b                  	// #91
  43d490:	ldr	x4, [sp, #40]
  43d494:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43d498:	add	x5, x5, #0xf92
  43d49c:	bl	40a400 <log_internal_realm@plt>
  43d4a0:	str	w0, [sp, #36]
  43d4a4:	b	43d4bc <udev_watch_begin+0xd4>
  43d4a8:	ldur	w0, [x29, #-80]
  43d4ac:	bl	40a410 <abs@plt>
  43d4b0:	mov	w8, wzr
  43d4b4:	subs	w8, w8, w0, uxtb
  43d4b8:	str	w8, [sp, #36]
  43d4bc:	ldr	w8, [sp, #36]
  43d4c0:	stur	w8, [x29, #-88]
  43d4c4:	ldur	w8, [x29, #-88]
  43d4c8:	stur	w8, [x29, #-4]
  43d4cc:	b	43daf4 <udev_watch_begin+0x70c>
  43d4d0:	ldr	x8, [sp, #64]
  43d4d4:	ldr	x0, [x8, #120]
  43d4d8:	sub	x1, x29, #0x38
  43d4dc:	bl	40a930 <sd_device_get_devname@plt>
  43d4e0:	stur	w0, [x29, #-72]
  43d4e4:	ldur	w9, [x29, #-72]
  43d4e8:	cmp	w9, #0x0
  43d4ec:	cset	w9, ge  // ge = tcont
  43d4f0:	tbnz	w9, #0, 43d5c0 <udev_watch_begin+0x1d8>
  43d4f4:	mov	x8, xzr
  43d4f8:	ldr	x9, [sp, #64]
  43d4fc:	str	x8, [x9, #40]
  43d500:	ldr	x8, [x9, #120]
  43d504:	str	x8, [x9, #32]
  43d508:	mov	w10, #0x3                   	// #3
  43d50c:	stur	w10, [x29, #-108]
  43d510:	ldur	w10, [x29, #-72]
  43d514:	stur	w10, [x29, #-112]
  43d518:	ldr	x8, [x9, #32]
  43d51c:	cbz	x8, 43d560 <udev_watch_begin+0x178>
  43d520:	mov	w0, #0x1                   	// #1
  43d524:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d528:	ldur	w8, [x29, #-108]
  43d52c:	cmp	w0, w8
  43d530:	cset	w8, ge  // ge = tcont
  43d534:	mov	w9, #0x1                   	// #1
  43d538:	eor	w8, w8, #0x1
  43d53c:	eor	w8, w8, w9
  43d540:	and	w8, w8, #0x1
  43d544:	mov	w1, w8
  43d548:	sxtw	x10, w1
  43d54c:	cbz	x10, 43d560 <udev_watch_begin+0x178>
  43d550:	ldr	x8, [sp, #64]
  43d554:	ldr	x0, [x8, #32]
  43d558:	sub	x1, x29, #0x60
  43d55c:	bl	40a860 <sd_device_get_sysname@plt>
  43d560:	ldur	w0, [x29, #-108]
  43d564:	ldur	w1, [x29, #-112]
  43d568:	ldr	x8, [sp, #64]
  43d56c:	ldr	x9, [x8, #40]
  43d570:	mov	x10, xzr
  43d574:	cmp	x9, #0x0
  43d578:	ldr	x9, [sp, #56]
  43d57c:	csel	x5, x9, x10, ne  // ne = any
  43d580:	ldr	x6, [x8, #40]
  43d584:	ldr	x2, [sp, #48]
  43d588:	mov	w3, #0x5f                  	// #95
  43d58c:	ldr	x4, [sp, #40]
  43d590:	mov	x7, x10
  43d594:	mov	x11, sp
  43d598:	str	x10, [x11]
  43d59c:	mov	x10, sp
  43d5a0:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  43d5a4:	add	x11, x11, #0x121
  43d5a8:	str	x11, [x10, #8]
  43d5ac:	bl	40a870 <log_object_internal@plt>
  43d5b0:	stur	w0, [x29, #-116]
  43d5b4:	ldur	w12, [x29, #-116]
  43d5b8:	stur	w12, [x29, #-4]
  43d5bc:	b	43daf4 <udev_watch_begin+0x70c>
  43d5c0:	mov	x8, xzr
  43d5c4:	ldr	x9, [sp, #64]
  43d5c8:	str	x8, [x9, #8]
  43d5cc:	ldr	x8, [x9, #120]
  43d5d0:	str	x8, [x9]
  43d5d4:	mov	w10, #0x7                   	// #7
  43d5d8:	stur	w10, [x29, #-140]
  43d5dc:	stur	wzr, [x29, #-144]
  43d5e0:	ldr	x8, [x9]
  43d5e4:	cbz	x8, 43d628 <udev_watch_begin+0x240>
  43d5e8:	mov	w0, #0x1                   	// #1
  43d5ec:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d5f0:	ldur	w8, [x29, #-140]
  43d5f4:	cmp	w0, w8
  43d5f8:	cset	w8, ge  // ge = tcont
  43d5fc:	mov	w9, #0x1                   	// #1
  43d600:	eor	w8, w8, #0x1
  43d604:	eor	w8, w8, w9
  43d608:	and	w8, w8, #0x1
  43d60c:	mov	w1, w8
  43d610:	sxtw	x10, w1
  43d614:	cbz	x10, 43d628 <udev_watch_begin+0x240>
  43d618:	ldr	x8, [sp, #64]
  43d61c:	ldr	x0, [x8]
  43d620:	sub	x1, x29, #0x80
  43d624:	bl	40a860 <sd_device_get_sysname@plt>
  43d628:	ldur	w0, [x29, #-140]
  43d62c:	ldur	w1, [x29, #-144]
  43d630:	ldr	x8, [sp, #64]
  43d634:	ldr	x9, [x8, #8]
  43d638:	mov	x10, xzr
  43d63c:	cmp	x9, #0x0
  43d640:	ldr	x9, [sp, #56]
  43d644:	csel	x5, x9, x10, ne  // ne = any
  43d648:	ldr	x6, [x8, #8]
  43d64c:	ldr	x11, [x8, #80]
  43d650:	ldr	x2, [sp, #48]
  43d654:	mov	w3, #0x61                  	// #97
  43d658:	ldr	x4, [sp, #40]
  43d65c:	mov	x7, x10
  43d660:	mov	x12, sp
  43d664:	str	x10, [x12]
  43d668:	mov	x10, sp
  43d66c:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  43d670:	add	x12, x12, #0x13f
  43d674:	str	x12, [x10, #8]
  43d678:	mov	x10, sp
  43d67c:	str	x11, [x10, #16]
  43d680:	bl	40a870 <log_object_internal@plt>
  43d684:	stur	w0, [x29, #-148]
  43d688:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43d68c:	add	x8, x8, #0x148
  43d690:	ldr	w0, [x8]
  43d694:	ldr	x8, [sp, #64]
  43d698:	ldr	x1, [x8, #80]
  43d69c:	mov	w2, #0x8                   	// #8
  43d6a0:	bl	40b570 <inotify_add_watch@plt>
  43d6a4:	stur	w0, [x29, #-68]
  43d6a8:	ldur	w13, [x29, #-68]
  43d6ac:	cmp	w13, #0x0
  43d6b0:	cset	w13, ge  // ge = tcont
  43d6b4:	tbnz	w13, #0, 43d7a4 <udev_watch_begin+0x3bc>
  43d6b8:	mov	x8, xzr
  43d6bc:	stur	x8, [x29, #-160]
  43d6c0:	ldr	x8, [sp, #64]
  43d6c4:	ldr	x9, [x8, #120]
  43d6c8:	stur	x9, [x29, #-168]
  43d6cc:	bl	40a480 <__errno_location@plt>
  43d6d0:	ldr	w10, [x0]
  43d6d4:	mov	w11, #0x3                   	// #3
  43d6d8:	mov	w12, #0x7                   	// #7
  43d6dc:	cmp	w10, #0x2
  43d6e0:	csel	w10, w12, w11, eq  // eq = none
  43d6e4:	stur	w10, [x29, #-172]
  43d6e8:	bl	40a480 <__errno_location@plt>
  43d6ec:	ldr	w10, [x0]
  43d6f0:	str	w10, [sp, #176]
  43d6f4:	ldur	x8, [x29, #-168]
  43d6f8:	cbz	x8, 43d738 <udev_watch_begin+0x350>
  43d6fc:	mov	w0, #0x1                   	// #1
  43d700:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d704:	ldur	w8, [x29, #-172]
  43d708:	cmp	w0, w8
  43d70c:	cset	w8, ge  // ge = tcont
  43d710:	mov	w9, #0x1                   	// #1
  43d714:	eor	w8, w8, #0x1
  43d718:	eor	w8, w8, w9
  43d71c:	and	w8, w8, #0x1
  43d720:	mov	w1, w8
  43d724:	sxtw	x10, w1
  43d728:	cbz	x10, 43d738 <udev_watch_begin+0x350>
  43d72c:	ldur	x0, [x29, #-168]
  43d730:	sub	x1, x29, #0xa0
  43d734:	bl	40a860 <sd_device_get_sysname@plt>
  43d738:	ldur	w0, [x29, #-172]
  43d73c:	ldr	w1, [sp, #176]
  43d740:	ldur	x8, [x29, #-160]
  43d744:	mov	x9, xzr
  43d748:	cmp	x8, #0x0
  43d74c:	ldr	x8, [sp, #56]
  43d750:	csel	x5, x8, x9, ne  // ne = any
  43d754:	ldur	x6, [x29, #-160]
  43d758:	ldr	x10, [sp, #64]
  43d75c:	ldr	x11, [x10, #80]
  43d760:	ldr	x2, [sp, #48]
  43d764:	mov	w3, #0x67                  	// #103
  43d768:	ldr	x4, [sp, #40]
  43d76c:	mov	x7, x9
  43d770:	mov	x12, sp
  43d774:	str	x9, [x12]
  43d778:	mov	x9, sp
  43d77c:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  43d780:	add	x12, x12, #0x154
  43d784:	str	x12, [x9, #8]
  43d788:	mov	x9, sp
  43d78c:	str	x11, [x9, #16]
  43d790:	bl	40a870 <log_object_internal@plt>
  43d794:	str	w0, [sp, #172]
  43d798:	ldr	w13, [sp, #172]
  43d79c:	stur	w13, [x29, #-4]
  43d7a0:	b	43daf4 <udev_watch_begin+0x70c>
  43d7a4:	ldr	x8, [sp, #64]
  43d7a8:	ldr	x0, [x8, #120]
  43d7ac:	ldur	w1, [x29, #-68]
  43d7b0:	bl	40b580 <device_set_watch_handle@plt>
  43d7b4:	ldur	w3, [x29, #-68]
  43d7b8:	sub	x0, x29, #0x2c
  43d7bc:	mov	x1, #0x1c                  	// #28
  43d7c0:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43d7c4:	add	x2, x2, #0x17b
  43d7c8:	bl	40b140 <snprintf@plt>
  43d7cc:	mov	w1, w0
  43d7d0:	sxtw	x8, w1
  43d7d4:	cmp	x8, #0x1c
  43d7d8:	cset	w9, cc  // cc = lo, ul, last
  43d7dc:	mov	w10, #0x1                   	// #1
  43d7e0:	eor	w9, w9, #0x1
  43d7e4:	eor	w9, w9, w10
  43d7e8:	eor	w9, w9, w10
  43d7ec:	and	w9, w9, #0x1
  43d7f0:	mov	w1, w9
  43d7f4:	sxtw	x8, w1
  43d7f8:	cbz	x8, 43d81c <udev_watch_begin+0x434>
  43d7fc:	mov	w0, #0x1                   	// #1
  43d800:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43d804:	add	x1, x1, #0x25a
  43d808:	ldr	x2, [sp, #48]
  43d80c:	mov	w3, #0x6b                  	// #107
  43d810:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43d814:	add	x4, x4, #0x18e
  43d818:	bl	40a540 <log_assert_failed_realm@plt>
  43d81c:	sub	x0, x29, #0x2c
  43d820:	mov	w1, #0x1ed                 	// #493
  43d824:	bl	40b0e0 <mkdir_parents@plt>
  43d828:	stur	w0, [x29, #-72]
  43d82c:	ldur	w8, [x29, #-72]
  43d830:	cmp	w8, #0x0
  43d834:	cset	w8, ge  // ge = tcont
  43d838:	tbnz	w8, #0, 43d90c <udev_watch_begin+0x524>
  43d83c:	mov	x8, xzr
  43d840:	str	x8, [sp, #160]
  43d844:	ldr	x8, [sp, #64]
  43d848:	ldr	x9, [x8, #120]
  43d84c:	str	x9, [sp, #152]
  43d850:	mov	w10, #0x3                   	// #3
  43d854:	str	w10, [sp, #148]
  43d858:	ldur	w10, [x29, #-72]
  43d85c:	str	w10, [sp, #144]
  43d860:	ldr	x9, [sp, #152]
  43d864:	cbz	x9, 43d8a4 <udev_watch_begin+0x4bc>
  43d868:	mov	w0, #0x1                   	// #1
  43d86c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d870:	ldr	w8, [sp, #148]
  43d874:	cmp	w0, w8
  43d878:	cset	w8, ge  // ge = tcont
  43d87c:	mov	w9, #0x1                   	// #1
  43d880:	eor	w8, w8, #0x1
  43d884:	eor	w8, w8, w9
  43d888:	and	w8, w8, #0x1
  43d88c:	mov	w1, w8
  43d890:	sxtw	x10, w1
  43d894:	cbz	x10, 43d8a4 <udev_watch_begin+0x4bc>
  43d898:	ldr	x0, [sp, #152]
  43d89c:	add	x1, sp, #0xa0
  43d8a0:	bl	40a860 <sd_device_get_sysname@plt>
  43d8a4:	ldr	w0, [sp, #148]
  43d8a8:	ldr	w1, [sp, #144]
  43d8ac:	ldr	x8, [sp, #160]
  43d8b0:	mov	x9, xzr
  43d8b4:	cmp	x8, #0x0
  43d8b8:	ldr	x8, [sp, #56]
  43d8bc:	csel	x5, x8, x9, ne  // ne = any
  43d8c0:	ldr	x6, [sp, #160]
  43d8c4:	ldr	x2, [sp, #48]
  43d8c8:	mov	w3, #0x6e                  	// #110
  43d8cc:	ldr	x4, [sp, #40]
  43d8d0:	mov	x7, x9
  43d8d4:	mov	x10, sp
  43d8d8:	str	x9, [x10]
  43d8dc:	mov	x9, sp
  43d8e0:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43d8e4:	add	x10, x10, #0x1b0
  43d8e8:	str	x10, [x9, #8]
  43d8ec:	mov	x9, sp
  43d8f0:	sub	x10, x29, #0x2c
  43d8f4:	str	x10, [x9, #16]
  43d8f8:	bl	40a870 <log_object_internal@plt>
  43d8fc:	str	w0, [sp, #140]
  43d900:	ldr	w11, [sp, #140]
  43d904:	stur	w11, [x29, #-4]
  43d908:	b	43daf4 <udev_watch_begin+0x70c>
  43d90c:	sub	x0, x29, #0x2c
  43d910:	bl	40a7d0 <unlink@plt>
  43d914:	ldr	x8, [sp, #64]
  43d918:	ldr	x9, [x8, #120]
  43d91c:	mov	x0, x9
  43d920:	sub	x1, x29, #0x40
  43d924:	bl	40b0a0 <device_get_id_filename@plt>
  43d928:	stur	w0, [x29, #-72]
  43d92c:	ldur	w10, [x29, #-72]
  43d930:	cmp	w10, #0x0
  43d934:	cset	w10, ge  // ge = tcont
  43d938:	tbnz	w10, #0, 43da00 <udev_watch_begin+0x618>
  43d93c:	mov	x8, xzr
  43d940:	str	x8, [sp, #128]
  43d944:	ldr	x8, [sp, #64]
  43d948:	ldr	x9, [x8, #120]
  43d94c:	str	x9, [sp, #120]
  43d950:	mov	w10, #0x3                   	// #3
  43d954:	str	w10, [sp, #116]
  43d958:	ldur	w10, [x29, #-72]
  43d95c:	str	w10, [sp, #112]
  43d960:	ldr	x9, [sp, #120]
  43d964:	cbz	x9, 43d9a4 <udev_watch_begin+0x5bc>
  43d968:	mov	w0, #0x1                   	// #1
  43d96c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43d970:	ldr	w8, [sp, #116]
  43d974:	cmp	w0, w8
  43d978:	cset	w8, ge  // ge = tcont
  43d97c:	mov	w9, #0x1                   	// #1
  43d980:	eor	w8, w8, #0x1
  43d984:	eor	w8, w8, w9
  43d988:	and	w8, w8, #0x1
  43d98c:	mov	w1, w8
  43d990:	sxtw	x10, w1
  43d994:	cbz	x10, 43d9a4 <udev_watch_begin+0x5bc>
  43d998:	ldr	x0, [sp, #120]
  43d99c:	add	x1, sp, #0x80
  43d9a0:	bl	40a860 <sd_device_get_sysname@plt>
  43d9a4:	ldr	w0, [sp, #116]
  43d9a8:	ldr	w1, [sp, #112]
  43d9ac:	ldr	x8, [sp, #128]
  43d9b0:	mov	x9, xzr
  43d9b4:	cmp	x8, #0x0
  43d9b8:	ldr	x8, [sp, #56]
  43d9bc:	csel	x5, x8, x9, ne  // ne = any
  43d9c0:	ldr	x6, [sp, #128]
  43d9c4:	ldr	x2, [sp, #48]
  43d9c8:	mov	w3, #0x73                  	// #115
  43d9cc:	ldr	x4, [sp, #40]
  43d9d0:	mov	x7, x9
  43d9d4:	mov	x10, sp
  43d9d8:	str	x9, [x10]
  43d9dc:	mov	x9, sp
  43d9e0:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43d9e4:	add	x10, x10, #0x1de
  43d9e8:	str	x10, [x9, #8]
  43d9ec:	bl	40a870 <log_object_internal@plt>
  43d9f0:	str	w0, [sp, #108]
  43d9f4:	ldr	w11, [sp, #108]
  43d9f8:	stur	w11, [x29, #-4]
  43d9fc:	b	43daf4 <udev_watch_begin+0x70c>
  43da00:	ldr	x8, [sp, #64]
  43da04:	ldr	x0, [x8, #72]
  43da08:	sub	x1, x29, #0x2c
  43da0c:	bl	40b1b0 <symlink@plt>
  43da10:	cmp	w0, #0x0
  43da14:	cset	w9, ge  // ge = tcont
  43da18:	tbnz	w9, #0, 43daf0 <udev_watch_begin+0x708>
  43da1c:	mov	x8, xzr
  43da20:	str	x8, [sp, #96]
  43da24:	ldr	x8, [sp, #64]
  43da28:	ldr	x9, [x8, #120]
  43da2c:	str	x9, [sp, #88]
  43da30:	mov	w10, #0x3                   	// #3
  43da34:	str	w10, [sp, #84]
  43da38:	bl	40a480 <__errno_location@plt>
  43da3c:	ldr	w10, [x0]
  43da40:	str	w10, [sp, #80]
  43da44:	ldr	x8, [sp, #88]
  43da48:	cbz	x8, 43da88 <udev_watch_begin+0x6a0>
  43da4c:	mov	w0, #0x1                   	// #1
  43da50:	bl	40a3f0 <log_get_max_level_realm@plt>
  43da54:	ldr	w8, [sp, #84]
  43da58:	cmp	w0, w8
  43da5c:	cset	w8, ge  // ge = tcont
  43da60:	mov	w9, #0x1                   	// #1
  43da64:	eor	w8, w8, #0x1
  43da68:	eor	w8, w8, w9
  43da6c:	and	w8, w8, #0x1
  43da70:	mov	w1, w8
  43da74:	sxtw	x10, w1
  43da78:	cbz	x10, 43da88 <udev_watch_begin+0x6a0>
  43da7c:	ldr	x0, [sp, #88]
  43da80:	add	x1, sp, #0x60
  43da84:	bl	40a860 <sd_device_get_sysname@plt>
  43da88:	ldr	w0, [sp, #84]
  43da8c:	ldr	w1, [sp, #80]
  43da90:	ldr	x8, [sp, #96]
  43da94:	mov	x9, xzr
  43da98:	cmp	x8, #0x0
  43da9c:	ldr	x8, [sp, #56]
  43daa0:	csel	x5, x8, x9, ne  // ne = any
  43daa4:	ldr	x6, [sp, #96]
  43daa8:	ldr	x2, [sp, #48]
  43daac:	mov	w3, #0x76                  	// #118
  43dab0:	ldr	x4, [sp, #40]
  43dab4:	mov	x7, x9
  43dab8:	mov	x10, sp
  43dabc:	str	x9, [x10]
  43dac0:	mov	x9, sp
  43dac4:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43dac8:	add	x10, x10, #0x203
  43dacc:	str	x10, [x9, #8]
  43dad0:	mov	x9, sp
  43dad4:	sub	x10, x29, #0x2c
  43dad8:	str	x10, [x9, #16]
  43dadc:	bl	40a870 <log_object_internal@plt>
  43dae0:	str	w0, [sp, #76]
  43dae4:	ldr	w11, [sp, #76]
  43dae8:	stur	w11, [x29, #-4]
  43daec:	b	43daf4 <udev_watch_begin+0x70c>
  43daf0:	stur	wzr, [x29, #-4]
  43daf4:	ldur	w0, [x29, #-4]
  43daf8:	ldr	x28, [sp, #368]
  43dafc:	ldp	x29, x30, [sp, #352]
  43db00:	add	sp, sp, #0x180
  43db04:	ret

000000000043db08 <udev_watch_end>:
  43db08:	sub	sp, sp, #0xc0
  43db0c:	stp	x29, x30, [sp, #176]
  43db10:	add	x29, sp, #0xb0
  43db14:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43db18:	add	x8, x8, #0x148
  43db1c:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  43db20:	add	x9, x9, #0xf66
  43db24:	add	x9, x9, #0x3
  43db28:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43db2c:	add	x10, x10, #0x223
  43db30:	stur	x0, [x29, #-16]
  43db34:	ldr	w11, [x8]
  43db38:	cmp	w11, #0x0
  43db3c:	cset	w11, ge  // ge = tcont
  43db40:	str	x9, [sp, #32]
  43db44:	str	x10, [sp, #24]
  43db48:	tbnz	w11, #0, 43dbd8 <udev_watch_end+0xd0>
  43db4c:	mov	w8, #0x7                   	// #7
  43db50:	stur	w8, [x29, #-56]
  43db54:	mov	w8, #0x16                  	// #22
  43db58:	movk	w8, #0x4000, lsl #16
  43db5c:	stur	w8, [x29, #-60]
  43db60:	mov	w8, #0x1                   	// #1
  43db64:	stur	w8, [x29, #-64]
  43db68:	ldur	w0, [x29, #-64]
  43db6c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43db70:	ldur	w8, [x29, #-56]
  43db74:	and	w8, w8, #0x7
  43db78:	cmp	w0, w8
  43db7c:	b.lt	43dbb0 <udev_watch_end+0xa8>  // b.tstop
  43db80:	ldur	w8, [x29, #-64]
  43db84:	ldur	w9, [x29, #-56]
  43db88:	orr	w0, w9, w8, lsl #10
  43db8c:	ldur	w1, [x29, #-60]
  43db90:	ldr	x2, [sp, #32]
  43db94:	mov	w3, #0x81                  	// #129
  43db98:	ldr	x4, [sp, #24]
  43db9c:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43dba0:	add	x5, x5, #0xf92
  43dba4:	bl	40a400 <log_internal_realm@plt>
  43dba8:	str	w0, [sp, #20]
  43dbac:	b	43dbc4 <udev_watch_end+0xbc>
  43dbb0:	ldur	w0, [x29, #-60]
  43dbb4:	bl	40a410 <abs@plt>
  43dbb8:	mov	w8, wzr
  43dbbc:	subs	w8, w8, w0, uxtb
  43dbc0:	str	w8, [sp, #20]
  43dbc4:	ldr	w8, [sp, #20]
  43dbc8:	stur	w8, [x29, #-68]
  43dbcc:	ldur	w8, [x29, #-68]
  43dbd0:	stur	w8, [x29, #-4]
  43dbd4:	b	43de20 <udev_watch_end+0x318>
  43dbd8:	ldur	x0, [x29, #-16]
  43dbdc:	sub	x1, x29, #0x30
  43dbe0:	bl	40b590 <device_get_watch_handle@plt>
  43dbe4:	stur	w0, [x29, #-52]
  43dbe8:	ldur	w8, [x29, #-52]
  43dbec:	mov	w9, #0xfffffffe            	// #-2
  43dbf0:	cmp	w8, w9
  43dbf4:	b.ne	43dc00 <udev_watch_end+0xf8>  // b.any
  43dbf8:	stur	wzr, [x29, #-4]
  43dbfc:	b	43de20 <udev_watch_end+0x318>
  43dc00:	ldur	w8, [x29, #-52]
  43dc04:	cmp	w8, #0x0
  43dc08:	cset	w8, ge  // ge = tcont
  43dc0c:	tbnz	w8, #0, 43dcd4 <udev_watch_end+0x1cc>
  43dc10:	mov	x8, xzr
  43dc14:	stur	x8, [x29, #-80]
  43dc18:	ldur	x8, [x29, #-16]
  43dc1c:	str	x8, [sp, #88]
  43dc20:	mov	w9, #0x7                   	// #7
  43dc24:	str	w9, [sp, #84]
  43dc28:	ldur	w9, [x29, #-52]
  43dc2c:	str	w9, [sp, #80]
  43dc30:	ldr	x8, [sp, #88]
  43dc34:	cbz	x8, 43dc74 <udev_watch_end+0x16c>
  43dc38:	mov	w0, #0x1                   	// #1
  43dc3c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43dc40:	ldr	w8, [sp, #84]
  43dc44:	cmp	w0, w8
  43dc48:	cset	w8, ge  // ge = tcont
  43dc4c:	mov	w9, #0x1                   	// #1
  43dc50:	eor	w8, w8, #0x1
  43dc54:	eor	w8, w8, w9
  43dc58:	and	w8, w8, #0x1
  43dc5c:	mov	w1, w8
  43dc60:	sxtw	x10, w1
  43dc64:	cbz	x10, 43dc74 <udev_watch_end+0x16c>
  43dc68:	ldr	x0, [sp, #88]
  43dc6c:	sub	x1, x29, #0x50
  43dc70:	bl	40a860 <sd_device_get_sysname@plt>
  43dc74:	ldr	w0, [sp, #84]
  43dc78:	ldr	w1, [sp, #80]
  43dc7c:	ldur	x8, [x29, #-80]
  43dc80:	mov	x9, xzr
  43dc84:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43dc88:	add	x10, x10, #0xa46
  43dc8c:	cmp	x8, #0x0
  43dc90:	csel	x5, x10, x9, ne  // ne = any
  43dc94:	ldur	x6, [x29, #-80]
  43dc98:	ldr	x2, [sp, #32]
  43dc9c:	mov	w3, #0x87                  	// #135
  43dca0:	ldr	x4, [sp, #24]
  43dca4:	mov	x7, x9
  43dca8:	mov	x8, sp
  43dcac:	str	x9, [x8]
  43dcb0:	mov	x8, sp
  43dcb4:	adrp	x9, 469000 <on_inotify.__assert_in_set+0x5540>
  43dcb8:	add	x9, x9, #0x232
  43dcbc:	str	x9, [x8, #8]
  43dcc0:	bl	40a870 <log_object_internal@plt>
  43dcc4:	str	w0, [sp, #76]
  43dcc8:	ldr	w11, [sp, #76]
  43dccc:	stur	w11, [x29, #-4]
  43dcd0:	b	43de20 <udev_watch_end+0x318>
  43dcd4:	mov	x8, xzr
  43dcd8:	str	x8, [sp, #64]
  43dcdc:	ldur	x8, [x29, #-16]
  43dce0:	str	x8, [sp, #56]
  43dce4:	mov	w9, #0x7                   	// #7
  43dce8:	str	w9, [sp, #52]
  43dcec:	str	wzr, [sp, #48]
  43dcf0:	ldr	x8, [sp, #56]
  43dcf4:	cbz	x8, 43dd34 <udev_watch_end+0x22c>
  43dcf8:	mov	w0, #0x1                   	// #1
  43dcfc:	bl	40a3f0 <log_get_max_level_realm@plt>
  43dd00:	ldr	w8, [sp, #52]
  43dd04:	cmp	w0, w8
  43dd08:	cset	w8, ge  // ge = tcont
  43dd0c:	mov	w9, #0x1                   	// #1
  43dd10:	eor	w8, w8, #0x1
  43dd14:	eor	w8, w8, w9
  43dd18:	and	w8, w8, #0x1
  43dd1c:	mov	w1, w8
  43dd20:	sxtw	x10, w1
  43dd24:	cbz	x10, 43dd34 <udev_watch_end+0x22c>
  43dd28:	ldr	x0, [sp, #56]
  43dd2c:	add	x1, sp, #0x40
  43dd30:	bl	40a860 <sd_device_get_sysname@plt>
  43dd34:	ldr	w0, [sp, #52]
  43dd38:	ldr	w1, [sp, #48]
  43dd3c:	ldr	x8, [sp, #64]
  43dd40:	mov	x9, xzr
  43dd44:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43dd48:	add	x10, x10, #0xa46
  43dd4c:	cmp	x8, #0x0
  43dd50:	csel	x5, x10, x9, ne  // ne = any
  43dd54:	ldr	x6, [sp, #64]
  43dd58:	ldr	x2, [sp, #32]
  43dd5c:	mov	w3, #0x89                  	// #137
  43dd60:	ldr	x4, [sp, #24]
  43dd64:	mov	x7, x9
  43dd68:	mov	x8, sp
  43dd6c:	str	x9, [x8]
  43dd70:	mov	x8, sp
  43dd74:	adrp	x9, 469000 <on_inotify.__assert_in_set+0x5540>
  43dd78:	add	x9, x9, #0x25b
  43dd7c:	str	x9, [x8, #8]
  43dd80:	bl	40a870 <log_object_internal@plt>
  43dd84:	str	w0, [sp, #44]
  43dd88:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43dd8c:	add	x8, x8, #0x148
  43dd90:	ldr	w0, [x8]
  43dd94:	ldur	w1, [x29, #-48]
  43dd98:	bl	40b5a0 <inotify_rm_watch@plt>
  43dd9c:	ldur	w3, [x29, #-48]
  43dda0:	sub	x0, x29, #0x2c
  43dda4:	mov	x1, #0x1c                  	// #28
  43dda8:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43ddac:	add	x2, x2, #0x17b
  43ddb0:	bl	40b140 <snprintf@plt>
  43ddb4:	mov	w1, w0
  43ddb8:	sxtw	x8, w1
  43ddbc:	cmp	x8, #0x1c
  43ddc0:	cset	w9, cc  // cc = lo, ul, last
  43ddc4:	mov	w10, #0x1                   	// #1
  43ddc8:	eor	w9, w9, #0x1
  43ddcc:	eor	w9, w9, w10
  43ddd0:	eor	w9, w9, w10
  43ddd4:	and	w9, w9, #0x1
  43ddd8:	mov	w1, w9
  43dddc:	sxtw	x8, w1
  43dde0:	cbz	x8, 43de04 <udev_watch_end+0x2fc>
  43dde4:	mov	w0, #0x1                   	// #1
  43dde8:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43ddec:	add	x1, x1, #0x25a
  43ddf0:	ldr	x2, [sp, #32]
  43ddf4:	mov	w3, #0x8c                  	// #140
  43ddf8:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43ddfc:	add	x4, x4, #0x26a
  43de00:	bl	40a540 <log_assert_failed_realm@plt>
  43de04:	sub	x0, x29, #0x2c
  43de08:	bl	40a7d0 <unlink@plt>
  43de0c:	ldur	x8, [x29, #-16]
  43de10:	mov	x0, x8
  43de14:	mov	w1, #0xffffffff            	// #-1
  43de18:	bl	40b580 <device_set_watch_handle@plt>
  43de1c:	stur	wzr, [x29, #-4]
  43de20:	ldur	w0, [x29, #-4]
  43de24:	ldp	x29, x30, [sp, #176]
  43de28:	add	sp, sp, #0xc0
  43de2c:	ret

000000000043de30 <udev_watch_lookup>:
  43de30:	sub	sp, sp, #0xb0
  43de34:	stp	x29, x30, [sp, #160]
  43de38:	add	x29, sp, #0xa0
  43de3c:	mov	x8, xzr
  43de40:	adrp	x9, 468000 <on_inotify.__assert_in_set+0x4540>
  43de44:	add	x9, x9, #0xf66
  43de48:	add	x9, x9, #0x3
  43de4c:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43de50:	add	x10, x10, #0x2b3
  43de54:	stur	w0, [x29, #-8]
  43de58:	stur	x1, [x29, #-16]
  43de5c:	stur	x8, [x29, #-56]
  43de60:	str	x9, [sp, #24]
  43de64:	str	x10, [sp, #16]
  43de68:	ldur	x8, [x29, #-16]
  43de6c:	cmp	x8, #0x0
  43de70:	cset	w9, ne  // ne = any
  43de74:	mov	w10, #0x1                   	// #1
  43de78:	eor	w9, w9, #0x1
  43de7c:	eor	w9, w9, w10
  43de80:	eor	w9, w9, w10
  43de84:	and	w9, w9, #0x1
  43de88:	mov	w0, w9
  43de8c:	sxtw	x8, w0
  43de90:	cbz	x8, 43deb4 <udev_watch_lookup+0x84>
  43de94:	mov	w0, #0x1                   	// #1
  43de98:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43de9c:	add	x1, x1, #0x2ff
  43dea0:	ldr	x2, [sp, #24]
  43dea4:	mov	w3, #0x99                  	// #153
  43dea8:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43deac:	add	x4, x4, #0x28a
  43deb0:	bl	40a540 <log_assert_failed_realm@plt>
  43deb4:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43deb8:	add	x8, x8, #0x148
  43debc:	ldr	w9, [x8]
  43dec0:	cmp	w9, #0x0
  43dec4:	cset	w9, ge  // ge = tcont
  43dec8:	tbnz	w9, #0, 43df60 <udev_watch_lookup+0x130>
  43decc:	mov	w8, #0x7                   	// #7
  43ded0:	stur	w8, [x29, #-64]
  43ded4:	mov	w8, #0x16                  	// #22
  43ded8:	movk	w8, #0x4000, lsl #16
  43dedc:	stur	w8, [x29, #-68]
  43dee0:	mov	w8, #0x1                   	// #1
  43dee4:	stur	w8, [x29, #-72]
  43dee8:	ldur	w0, [x29, #-72]
  43deec:	bl	40a3f0 <log_get_max_level_realm@plt>
  43def0:	ldur	w8, [x29, #-64]
  43def4:	and	w8, w8, #0x7
  43def8:	cmp	w0, w8
  43defc:	b.lt	43df30 <udev_watch_lookup+0x100>  // b.tstop
  43df00:	ldur	w8, [x29, #-72]
  43df04:	ldur	w9, [x29, #-64]
  43df08:	orr	w0, w9, w8, lsl #10
  43df0c:	ldur	w1, [x29, #-68]
  43df10:	ldr	x2, [sp, #24]
  43df14:	mov	w3, #0x9d                  	// #157
  43df18:	ldr	x4, [sp, #16]
  43df1c:	adrp	x5, 468000 <on_inotify.__assert_in_set+0x4540>
  43df20:	add	x5, x5, #0xf92
  43df24:	bl	40a400 <log_internal_realm@plt>
  43df28:	str	w0, [sp, #12]
  43df2c:	b	43df44 <udev_watch_lookup+0x114>
  43df30:	ldur	w0, [x29, #-68]
  43df34:	bl	40a410 <abs@plt>
  43df38:	mov	w8, wzr
  43df3c:	subs	w8, w8, w0, uxtb
  43df40:	str	w8, [sp, #12]
  43df44:	ldr	w8, [sp, #12]
  43df48:	stur	w8, [x29, #-76]
  43df4c:	ldur	w8, [x29, #-76]
  43df50:	stur	w8, [x29, #-4]
  43df54:	mov	w8, #0x1                   	// #1
  43df58:	str	w8, [sp, #80]
  43df5c:	b	43e220 <udev_watch_lookup+0x3f0>
  43df60:	ldur	w8, [x29, #-8]
  43df64:	cmp	w8, #0x0
  43df68:	cset	w8, ge  // ge = tcont
  43df6c:	tbnz	w8, #0, 43e004 <udev_watch_lookup+0x1d4>
  43df70:	mov	w8, #0x7                   	// #7
  43df74:	str	w8, [sp, #76]
  43df78:	mov	w8, #0x16                  	// #22
  43df7c:	movk	w8, #0x4000, lsl #16
  43df80:	str	w8, [sp, #72]
  43df84:	mov	w8, #0x1                   	// #1
  43df88:	str	w8, [sp, #68]
  43df8c:	ldr	w0, [sp, #68]
  43df90:	bl	40a3f0 <log_get_max_level_realm@plt>
  43df94:	ldr	w8, [sp, #76]
  43df98:	and	w8, w8, #0x7
  43df9c:	cmp	w0, w8
  43dfa0:	b.lt	43dfd4 <udev_watch_lookup+0x1a4>  // b.tstop
  43dfa4:	ldr	w8, [sp, #68]
  43dfa8:	ldr	w9, [sp, #76]
  43dfac:	orr	w0, w9, w8, lsl #10
  43dfb0:	ldr	w1, [sp, #72]
  43dfb4:	ldr	x2, [sp, #24]
  43dfb8:	mov	w3, #0xa1                  	// #161
  43dfbc:	ldr	x4, [sp, #16]
  43dfc0:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43dfc4:	add	x5, x5, #0x2c5
  43dfc8:	bl	40a400 <log_internal_realm@plt>
  43dfcc:	str	w0, [sp, #8]
  43dfd0:	b	43dfe8 <udev_watch_lookup+0x1b8>
  43dfd4:	ldr	w0, [sp, #72]
  43dfd8:	bl	40a410 <abs@plt>
  43dfdc:	mov	w8, wzr
  43dfe0:	subs	w8, w8, w0, uxtb
  43dfe4:	str	w8, [sp, #8]
  43dfe8:	ldr	w8, [sp, #8]
  43dfec:	str	w8, [sp, #64]
  43dff0:	ldr	w8, [sp, #64]
  43dff4:	stur	w8, [x29, #-4]
  43dff8:	mov	w8, #0x1                   	// #1
  43dffc:	str	w8, [sp, #80]
  43e000:	b	43e220 <udev_watch_lookup+0x3f0>
  43e004:	ldur	w3, [x29, #-8]
  43e008:	sub	x0, x29, #0x2c
  43e00c:	mov	x1, #0x1c                  	// #28
  43e010:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43e014:	add	x2, x2, #0x17b
  43e018:	bl	40b140 <snprintf@plt>
  43e01c:	mov	w1, w0
  43e020:	sxtw	x8, w1
  43e024:	cmp	x8, #0x1c
  43e028:	cset	w9, cc  // cc = lo, ul, last
  43e02c:	mov	w10, #0x1                   	// #1
  43e030:	eor	w9, w9, #0x1
  43e034:	eor	w9, w9, w10
  43e038:	eor	w9, w9, w10
  43e03c:	and	w9, w9, #0x1
  43e040:	mov	w1, w9
  43e044:	sxtw	x8, w1
  43e048:	cbz	x8, 43e06c <udev_watch_lookup+0x23c>
  43e04c:	mov	w0, #0x1                   	// #1
  43e050:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  43e054:	add	x1, x1, #0x25a
  43e058:	ldr	x2, [sp, #24]
  43e05c:	mov	w3, #0xa3                  	// #163
  43e060:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43e064:	add	x4, x4, #0x28a
  43e068:	bl	40a540 <log_assert_failed_realm@plt>
  43e06c:	sub	x0, x29, #0x2c
  43e070:	sub	x1, x29, #0x38
  43e074:	bl	40b170 <readlink_malloc@plt>
  43e078:	stur	w0, [x29, #-60]
  43e07c:	ldur	w8, [x29, #-60]
  43e080:	mov	w9, #0xfffffffe            	// #-2
  43e084:	cmp	w8, w9
  43e088:	b.ne	43e09c <udev_watch_lookup+0x26c>  // b.any
  43e08c:	stur	wzr, [x29, #-4]
  43e090:	mov	w8, #0x1                   	// #1
  43e094:	str	w8, [sp, #80]
  43e098:	b	43e220 <udev_watch_lookup+0x3f0>
  43e09c:	ldur	w8, [x29, #-60]
  43e0a0:	cmp	w8, #0x0
  43e0a4:	cset	w8, ge  // ge = tcont
  43e0a8:	tbnz	w8, #0, 43e140 <udev_watch_lookup+0x310>
  43e0ac:	mov	w8, #0x7                   	// #7
  43e0b0:	str	w8, [sp, #60]
  43e0b4:	ldur	w8, [x29, #-60]
  43e0b8:	str	w8, [sp, #56]
  43e0bc:	mov	w8, #0x1                   	// #1
  43e0c0:	str	w8, [sp, #52]
  43e0c4:	ldr	w0, [sp, #52]
  43e0c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  43e0cc:	ldr	w8, [sp, #60]
  43e0d0:	and	w8, w8, #0x7
  43e0d4:	cmp	w0, w8
  43e0d8:	b.lt	43e110 <udev_watch_lookup+0x2e0>  // b.tstop
  43e0dc:	ldr	w8, [sp, #52]
  43e0e0:	ldr	w9, [sp, #60]
  43e0e4:	orr	w0, w9, w8, lsl #10
  43e0e8:	ldr	w1, [sp, #56]
  43e0ec:	ldr	x2, [sp, #24]
  43e0f0:	mov	w3, #0xa8                  	// #168
  43e0f4:	ldr	x4, [sp, #16]
  43e0f8:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43e0fc:	add	x5, x5, #0x2db
  43e100:	sub	x6, x29, #0x2c
  43e104:	bl	40a400 <log_internal_realm@plt>
  43e108:	str	w0, [sp, #4]
  43e10c:	b	43e124 <udev_watch_lookup+0x2f4>
  43e110:	ldr	w0, [sp, #56]
  43e114:	bl	40a410 <abs@plt>
  43e118:	mov	w8, wzr
  43e11c:	subs	w8, w8, w0, uxtb
  43e120:	str	w8, [sp, #4]
  43e124:	ldr	w8, [sp, #4]
  43e128:	str	w8, [sp, #48]
  43e12c:	ldr	w8, [sp, #48]
  43e130:	stur	w8, [x29, #-4]
  43e134:	mov	w8, #0x1                   	// #1
  43e138:	str	w8, [sp, #80]
  43e13c:	b	43e220 <udev_watch_lookup+0x3f0>
  43e140:	ldur	x0, [x29, #-16]
  43e144:	ldur	x1, [x29, #-56]
  43e148:	bl	40b210 <sd_device_new_from_device_id@plt>
  43e14c:	stur	w0, [x29, #-60]
  43e150:	ldur	w8, [x29, #-60]
  43e154:	mov	w9, #0xffffffed            	// #-19
  43e158:	cmp	w8, w9
  43e15c:	b.ne	43e170 <udev_watch_lookup+0x340>  // b.any
  43e160:	stur	wzr, [x29, #-4]
  43e164:	mov	w8, #0x1                   	// #1
  43e168:	str	w8, [sp, #80]
  43e16c:	b	43e220 <udev_watch_lookup+0x3f0>
  43e170:	ldur	w8, [x29, #-60]
  43e174:	cmp	w8, #0x0
  43e178:	cset	w8, ge  // ge = tcont
  43e17c:	tbnz	w8, #0, 43e214 <udev_watch_lookup+0x3e4>
  43e180:	mov	w8, #0x7                   	// #7
  43e184:	str	w8, [sp, #44]
  43e188:	ldur	w8, [x29, #-60]
  43e18c:	str	w8, [sp, #40]
  43e190:	mov	w8, #0x1                   	// #1
  43e194:	str	w8, [sp, #36]
  43e198:	ldr	w0, [sp, #36]
  43e19c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43e1a0:	ldr	w8, [sp, #44]
  43e1a4:	and	w8, w8, #0x7
  43e1a8:	cmp	w0, w8
  43e1ac:	b.lt	43e1e4 <udev_watch_lookup+0x3b4>  // b.tstop
  43e1b0:	ldr	w8, [sp, #36]
  43e1b4:	ldr	w9, [sp, #44]
  43e1b8:	orr	w0, w9, w8, lsl #10
  43e1bc:	ldr	w1, [sp, #40]
  43e1c0:	ldur	x6, [x29, #-56]
  43e1c4:	ldr	x2, [sp, #24]
  43e1c8:	mov	w3, #0xae                  	// #174
  43e1cc:	ldr	x4, [sp, #16]
  43e1d0:	adrp	x5, 469000 <on_inotify.__assert_in_set+0x5540>
  43e1d4:	add	x5, x5, #0x2f8
  43e1d8:	bl	40a400 <log_internal_realm@plt>
  43e1dc:	str	w0, [sp]
  43e1e0:	b	43e1f8 <udev_watch_lookup+0x3c8>
  43e1e4:	ldr	w0, [sp, #40]
  43e1e8:	bl	40a410 <abs@plt>
  43e1ec:	mov	w8, wzr
  43e1f0:	subs	w8, w8, w0, uxtb
  43e1f4:	str	w8, [sp]
  43e1f8:	ldr	w8, [sp]
  43e1fc:	str	w8, [sp, #32]
  43e200:	ldr	w8, [sp, #32]
  43e204:	stur	w8, [x29, #-4]
  43e208:	mov	w8, #0x1                   	// #1
  43e20c:	str	w8, [sp, #80]
  43e210:	b	43e220 <udev_watch_lookup+0x3f0>
  43e214:	mov	w8, #0x1                   	// #1
  43e218:	stur	w8, [x29, #-4]
  43e21c:	str	w8, [sp, #80]
  43e220:	sub	x0, x29, #0x38
  43e224:	bl	43d3c0 <freep>
  43e228:	ldur	w0, [x29, #-4]
  43e22c:	ldp	x29, x30, [sp, #160]
  43e230:	add	sp, sp, #0xb0
  43e234:	ret

000000000043e238 <udev_builtin_init>:
  43e238:	sub	sp, sp, #0x20
  43e23c:	stp	x29, x30, [sp, #16]
  43e240:	add	x29, sp, #0x10
  43e244:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43e248:	add	x8, x8, #0x230
  43e24c:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e250:	add	x9, x9, #0x398
  43e254:	ldrb	w10, [x8]
  43e258:	str	x9, [sp]
  43e25c:	tbnz	w10, #0, 43e264 <udev_builtin_init+0x2c>
  43e260:	b	43e268 <udev_builtin_init+0x30>
  43e264:	b	43e300 <udev_builtin_init+0xc8>
  43e268:	stur	wzr, [x29, #-4]
  43e26c:	ldur	w8, [x29, #-4]
  43e270:	cmp	w8, #0xb
  43e274:	b.cs	43e2f0 <udev_builtin_init+0xb8>  // b.hs, b.nlast
  43e278:	ldur	w8, [x29, #-4]
  43e27c:	mov	w9, w8
  43e280:	mov	x10, #0x8                   	// #8
  43e284:	mul	x9, x10, x9
  43e288:	ldr	x10, [sp]
  43e28c:	add	x9, x10, x9
  43e290:	ldr	x9, [x9]
  43e294:	cbz	x9, 43e2e0 <udev_builtin_init+0xa8>
  43e298:	ldur	w8, [x29, #-4]
  43e29c:	mov	w9, w8
  43e2a0:	mov	x10, #0x8                   	// #8
  43e2a4:	mul	x9, x10, x9
  43e2a8:	ldr	x10, [sp]
  43e2ac:	add	x9, x10, x9
  43e2b0:	ldr	x9, [x9]
  43e2b4:	ldr	x9, [x9, #24]
  43e2b8:	cbz	x9, 43e2e0 <udev_builtin_init+0xa8>
  43e2bc:	ldur	w8, [x29, #-4]
  43e2c0:	mov	w9, w8
  43e2c4:	mov	x10, #0x8                   	// #8
  43e2c8:	mul	x9, x10, x9
  43e2cc:	ldr	x10, [sp]
  43e2d0:	add	x9, x10, x9
  43e2d4:	ldr	x9, [x9]
  43e2d8:	ldr	x9, [x9, #24]
  43e2dc:	blr	x9
  43e2e0:	ldur	w8, [x29, #-4]
  43e2e4:	add	w8, w8, #0x1
  43e2e8:	stur	w8, [x29, #-4]
  43e2ec:	b	43e26c <udev_builtin_init+0x34>
  43e2f0:	mov	w8, #0x1                   	// #1
  43e2f4:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  43e2f8:	add	x9, x9, #0x230
  43e2fc:	strb	w8, [x9]
  43e300:	ldp	x29, x30, [sp, #16]
  43e304:	add	sp, sp, #0x20
  43e308:	ret

000000000043e30c <udev_builtin_exit>:
  43e30c:	sub	sp, sp, #0x20
  43e310:	stp	x29, x30, [sp, #16]
  43e314:	add	x29, sp, #0x10
  43e318:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43e31c:	add	x8, x8, #0x230
  43e320:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e324:	add	x9, x9, #0x398
  43e328:	ldrb	w10, [x8]
  43e32c:	str	x9, [sp]
  43e330:	tbnz	w10, #0, 43e338 <udev_builtin_exit+0x2c>
  43e334:	b	43e3d0 <udev_builtin_exit+0xc4>
  43e338:	stur	wzr, [x29, #-4]
  43e33c:	ldur	w8, [x29, #-4]
  43e340:	cmp	w8, #0xb
  43e344:	b.cs	43e3c0 <udev_builtin_exit+0xb4>  // b.hs, b.nlast
  43e348:	ldur	w8, [x29, #-4]
  43e34c:	mov	w9, w8
  43e350:	mov	x10, #0x8                   	// #8
  43e354:	mul	x9, x10, x9
  43e358:	ldr	x10, [sp]
  43e35c:	add	x9, x10, x9
  43e360:	ldr	x9, [x9]
  43e364:	cbz	x9, 43e3b0 <udev_builtin_exit+0xa4>
  43e368:	ldur	w8, [x29, #-4]
  43e36c:	mov	w9, w8
  43e370:	mov	x10, #0x8                   	// #8
  43e374:	mul	x9, x10, x9
  43e378:	ldr	x10, [sp]
  43e37c:	add	x9, x10, x9
  43e380:	ldr	x9, [x9]
  43e384:	ldr	x9, [x9, #32]
  43e388:	cbz	x9, 43e3b0 <udev_builtin_exit+0xa4>
  43e38c:	ldur	w8, [x29, #-4]
  43e390:	mov	w9, w8
  43e394:	mov	x10, #0x8                   	// #8
  43e398:	mul	x9, x10, x9
  43e39c:	ldr	x10, [sp]
  43e3a0:	add	x9, x10, x9
  43e3a4:	ldr	x9, [x9]
  43e3a8:	ldr	x9, [x9, #32]
  43e3ac:	blr	x9
  43e3b0:	ldur	w8, [x29, #-4]
  43e3b4:	add	w8, w8, #0x1
  43e3b8:	stur	w8, [x29, #-4]
  43e3bc:	b	43e33c <udev_builtin_exit+0x30>
  43e3c0:	mov	w8, #0x0                   	// #0
  43e3c4:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  43e3c8:	add	x9, x9, #0x230
  43e3cc:	strb	w8, [x9]
  43e3d0:	ldp	x29, x30, [sp, #16]
  43e3d4:	add	sp, sp, #0x20
  43e3d8:	ret

000000000043e3dc <udev_builtin_validate>:
  43e3dc:	sub	sp, sp, #0x20
  43e3e0:	stp	x29, x30, [sp, #16]
  43e3e4:	add	x29, sp, #0x10
  43e3e8:	adrp	x8, 487000 <__FRAME_END__+0x14000>
  43e3ec:	add	x8, x8, #0x398
  43e3f0:	str	wzr, [sp, #8]
  43e3f4:	str	x8, [sp]
  43e3f8:	ldr	w8, [sp, #8]
  43e3fc:	cmp	w8, #0xb
  43e400:	b.cs	43e494 <udev_builtin_validate+0xb8>  // b.hs, b.nlast
  43e404:	ldr	w8, [sp, #8]
  43e408:	mov	w9, w8
  43e40c:	mov	x10, #0x8                   	// #8
  43e410:	mul	x9, x10, x9
  43e414:	ldr	x10, [sp]
  43e418:	add	x9, x10, x9
  43e41c:	ldr	x9, [x9]
  43e420:	cbz	x9, 43e484 <udev_builtin_validate+0xa8>
  43e424:	ldr	w8, [sp, #8]
  43e428:	mov	w9, w8
  43e42c:	mov	x10, #0x8                   	// #8
  43e430:	mul	x9, x10, x9
  43e434:	ldr	x10, [sp]
  43e438:	add	x9, x10, x9
  43e43c:	ldr	x9, [x9]
  43e440:	ldr	x9, [x9, #40]
  43e444:	cbz	x9, 43e484 <udev_builtin_validate+0xa8>
  43e448:	ldr	w8, [sp, #8]
  43e44c:	mov	w9, w8
  43e450:	mov	x10, #0x8                   	// #8
  43e454:	mul	x9, x10, x9
  43e458:	ldr	x10, [sp]
  43e45c:	add	x9, x10, x9
  43e460:	ldr	x9, [x9]
  43e464:	ldr	x9, [x9, #40]
  43e468:	blr	x9
  43e46c:	tbnz	w0, #0, 43e474 <udev_builtin_validate+0x98>
  43e470:	b	43e484 <udev_builtin_validate+0xa8>
  43e474:	mov	w8, #0x1                   	// #1
  43e478:	and	w8, w8, #0x1
  43e47c:	sturb	w8, [x29, #-1]
  43e480:	b	43e4a0 <udev_builtin_validate+0xc4>
  43e484:	ldr	w8, [sp, #8]
  43e488:	add	w8, w8, #0x1
  43e48c:	str	w8, [sp, #8]
  43e490:	b	43e3f8 <udev_builtin_validate+0x1c>
  43e494:	mov	w8, wzr
  43e498:	and	w8, w8, #0x1
  43e49c:	sturb	w8, [x29, #-1]
  43e4a0:	ldurb	w8, [x29, #-1]
  43e4a4:	and	w0, w8, #0x1
  43e4a8:	ldp	x29, x30, [sp, #16]
  43e4ac:	add	sp, sp, #0x20
  43e4b0:	ret

000000000043e4b4 <udev_builtin_list>:
  43e4b4:	sub	sp, sp, #0x20
  43e4b8:	stp	x29, x30, [sp, #16]
  43e4bc:	add	x29, sp, #0x10
  43e4c0:	adrp	x8, 487000 <__FRAME_END__+0x14000>
  43e4c4:	add	x8, x8, #0x398
  43e4c8:	stur	wzr, [x29, #-4]
  43e4cc:	str	x8, [sp]
  43e4d0:	ldur	w8, [x29, #-4]
  43e4d4:	cmp	w8, #0xb
  43e4d8:	b.cs	43e55c <udev_builtin_list+0xa8>  // b.hs, b.nlast
  43e4dc:	ldur	w8, [x29, #-4]
  43e4e0:	mov	w9, w8
  43e4e4:	mov	x10, #0x8                   	// #8
  43e4e8:	mul	x9, x10, x9
  43e4ec:	ldr	x10, [sp]
  43e4f0:	add	x9, x10, x9
  43e4f4:	ldr	x9, [x9]
  43e4f8:	cbz	x9, 43e54c <udev_builtin_list+0x98>
  43e4fc:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  43e500:	ldr	x8, [x8, #192]
  43e504:	ldr	x0, [x8]
  43e508:	ldur	w9, [x29, #-4]
  43e50c:	mov	w8, w9
  43e510:	mov	x10, #0x8                   	// #8
  43e514:	mul	x8, x10, x8
  43e518:	ldr	x11, [sp]
  43e51c:	add	x8, x11, x8
  43e520:	ldr	x8, [x8]
  43e524:	ldr	x2, [x8]
  43e528:	ldur	w9, [x29, #-4]
  43e52c:	mov	w8, w9
  43e530:	mul	x8, x10, x8
  43e534:	add	x8, x11, x8
  43e538:	ldr	x8, [x8]
  43e53c:	ldr	x3, [x8, #16]
  43e540:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e544:	add	x1, x1, #0x327
  43e548:	bl	40b5b0 <fprintf@plt>
  43e54c:	ldur	w8, [x29, #-4]
  43e550:	add	w8, w8, #0x1
  43e554:	stur	w8, [x29, #-4]
  43e558:	b	43e4d0 <udev_builtin_list+0x1c>
  43e55c:	ldp	x29, x30, [sp, #16]
  43e560:	add	sp, sp, #0x20
  43e564:	ret

000000000043e568 <udev_builtin_name>:
  43e568:	sub	sp, sp, #0x30
  43e56c:	stp	x29, x30, [sp, #32]
  43e570:	add	x29, sp, #0x20
  43e574:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  43e578:	add	x8, x8, #0x358
  43e57c:	add	x2, x8, #0x3
  43e580:	stur	w0, [x29, #-12]
  43e584:	str	x2, [sp, #8]
  43e588:	ldur	w8, [x29, #-12]
  43e58c:	cmp	w8, #0x0
  43e590:	cset	w8, lt  // lt = tstop
  43e594:	mov	w9, #0x0                   	// #0
  43e598:	str	w9, [sp, #4]
  43e59c:	tbnz	w8, #0, 43e5b0 <udev_builtin_name+0x48>
  43e5a0:	ldur	w8, [x29, #-12]
  43e5a4:	cmp	w8, #0xb
  43e5a8:	cset	w8, lt  // lt = tstop
  43e5ac:	str	w8, [sp, #4]
  43e5b0:	ldr	w8, [sp, #4]
  43e5b4:	mov	w9, #0x1                   	// #1
  43e5b8:	eor	w8, w8, #0x1
  43e5bc:	eor	w8, w8, w9
  43e5c0:	eor	w8, w8, w9
  43e5c4:	and	w8, w8, #0x1
  43e5c8:	mov	w0, w8
  43e5cc:	sxtw	x10, w0
  43e5d0:	cbz	x10, 43e5f4 <udev_builtin_name+0x8c>
  43e5d4:	mov	w0, #0x1                   	// #1
  43e5d8:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e5dc:	add	x1, x1, #0x334
  43e5e0:	ldr	x2, [sp, #8]
  43e5e4:	mov	w3, #0x4e                  	// #78
  43e5e8:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43e5ec:	add	x4, x4, #0x373
  43e5f0:	bl	40a540 <log_assert_failed_realm@plt>
  43e5f4:	ldursw	x8, [x29, #-12]
  43e5f8:	mov	x9, #0x8                   	// #8
  43e5fc:	mul	x8, x9, x8
  43e600:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e604:	add	x9, x9, #0x398
  43e608:	add	x8, x9, x8
  43e60c:	ldr	x8, [x8]
  43e610:	cbnz	x8, 43e620 <udev_builtin_name+0xb8>
  43e614:	mov	x8, xzr
  43e618:	stur	x8, [x29, #-8]
  43e61c:	b	43e644 <udev_builtin_name+0xdc>
  43e620:	ldursw	x8, [x29, #-12]
  43e624:	mov	x9, #0x8                   	// #8
  43e628:	mul	x8, x9, x8
  43e62c:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e630:	add	x9, x9, #0x398
  43e634:	add	x8, x9, x8
  43e638:	ldr	x8, [x8]
  43e63c:	ldr	x8, [x8]
  43e640:	stur	x8, [x29, #-8]
  43e644:	ldur	x0, [x29, #-8]
  43e648:	ldp	x29, x30, [sp, #32]
  43e64c:	add	sp, sp, #0x30
  43e650:	ret

000000000043e654 <udev_builtin_run_once>:
  43e654:	sub	sp, sp, #0x30
  43e658:	stp	x29, x30, [sp, #32]
  43e65c:	add	x29, sp, #0x20
  43e660:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  43e664:	add	x8, x8, #0x358
  43e668:	add	x2, x8, #0x3
  43e66c:	stur	w0, [x29, #-8]
  43e670:	str	x2, [sp, #16]
  43e674:	ldur	w8, [x29, #-8]
  43e678:	cmp	w8, #0x0
  43e67c:	cset	w8, lt  // lt = tstop
  43e680:	mov	w9, #0x0                   	// #0
  43e684:	str	w9, [sp, #12]
  43e688:	tbnz	w8, #0, 43e69c <udev_builtin_run_once+0x48>
  43e68c:	ldur	w8, [x29, #-8]
  43e690:	cmp	w8, #0xb
  43e694:	cset	w8, lt  // lt = tstop
  43e698:	str	w8, [sp, #12]
  43e69c:	ldr	w8, [sp, #12]
  43e6a0:	mov	w9, #0x1                   	// #1
  43e6a4:	eor	w8, w8, #0x1
  43e6a8:	eor	w8, w8, w9
  43e6ac:	eor	w8, w8, w9
  43e6b0:	and	w8, w8, #0x1
  43e6b4:	mov	w0, w8
  43e6b8:	sxtw	x10, w0
  43e6bc:	cbz	x10, 43e6e0 <udev_builtin_run_once+0x8c>
  43e6c0:	mov	w0, #0x1                   	// #1
  43e6c4:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e6c8:	add	x1, x1, #0x334
  43e6cc:	ldr	x2, [sp, #16]
  43e6d0:	mov	w3, #0x57                  	// #87
  43e6d4:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43e6d8:	add	x4, x4, #0x3a5
  43e6dc:	bl	40a540 <log_assert_failed_realm@plt>
  43e6e0:	ldursw	x8, [x29, #-8]
  43e6e4:	mov	x9, #0x8                   	// #8
  43e6e8:	mul	x8, x9, x8
  43e6ec:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e6f0:	add	x9, x9, #0x398
  43e6f4:	add	x8, x9, x8
  43e6f8:	ldr	x8, [x8]
  43e6fc:	cbnz	x8, 43e710 <udev_builtin_run_once+0xbc>
  43e700:	mov	w8, wzr
  43e704:	and	w8, w8, #0x1
  43e708:	sturb	w8, [x29, #-1]
  43e70c:	b	43e738 <udev_builtin_run_once+0xe4>
  43e710:	ldursw	x8, [x29, #-8]
  43e714:	mov	x9, #0x8                   	// #8
  43e718:	mul	x8, x9, x8
  43e71c:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e720:	add	x9, x9, #0x398
  43e724:	add	x8, x9, x8
  43e728:	ldr	x8, [x8]
  43e72c:	ldrb	w10, [x8, #48]
  43e730:	and	w10, w10, #0x1
  43e734:	sturb	w10, [x29, #-1]
  43e738:	ldurb	w8, [x29, #-1]
  43e73c:	and	w0, w8, #0x1
  43e740:	ldp	x29, x30, [sp, #32]
  43e744:	add	sp, sp, #0x30
  43e748:	ret

000000000043e74c <udev_builtin_lookup>:
  43e74c:	sub	sp, sp, #0x40
  43e750:	stp	x29, x30, [sp, #48]
  43e754:	add	x29, sp, #0x30
  43e758:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  43e75c:	add	x8, x8, #0x358
  43e760:	add	x2, x8, #0x3
  43e764:	stur	x0, [x29, #-16]
  43e768:	str	x2, [sp, #8]
  43e76c:	ldur	x8, [x29, #-16]
  43e770:	cmp	x8, #0x0
  43e774:	cset	w9, ne  // ne = any
  43e778:	mov	w10, #0x1                   	// #1
  43e77c:	eor	w9, w9, #0x1
  43e780:	eor	w9, w9, w10
  43e784:	eor	w9, w9, w10
  43e788:	and	w9, w9, #0x1
  43e78c:	mov	w0, w9
  43e790:	sxtw	x8, w0
  43e794:	cbz	x8, 43e7b8 <udev_builtin_lookup+0x6c>
  43e798:	mov	w0, #0x1                   	// #1
  43e79c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e7a0:	add	x1, x1, #0x3d5
  43e7a4:	ldr	x2, [sp, #8]
  43e7a8:	mov	w3, #0x63                  	// #99
  43e7ac:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43e7b0:	add	x4, x4, #0x3dd
  43e7b4:	bl	40a540 <log_assert_failed_realm@plt>
  43e7b8:	ldur	x0, [x29, #-16]
  43e7bc:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  43e7c0:	add	x8, x8, #0x5b7
  43e7c4:	mov	x1, x8
  43e7c8:	str	x8, [sp]
  43e7cc:	bl	40b080 <strspn@plt>
  43e7d0:	ldur	x8, [x29, #-16]
  43e7d4:	add	x8, x8, x0
  43e7d8:	stur	x8, [x29, #-16]
  43e7dc:	ldur	x0, [x29, #-16]
  43e7e0:	ldr	x1, [sp]
  43e7e4:	bl	40b5c0 <strcspn@plt>
  43e7e8:	str	x0, [sp, #16]
  43e7ec:	stur	wzr, [x29, #-20]
  43e7f0:	ldur	w8, [x29, #-20]
  43e7f4:	cmp	w8, #0xb
  43e7f8:	b.ge	43e868 <udev_builtin_lookup+0x11c>  // b.tcont
  43e7fc:	ldursw	x8, [x29, #-20]
  43e800:	mov	x9, #0x8                   	// #8
  43e804:	mul	x8, x9, x8
  43e808:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e80c:	add	x9, x9, #0x398
  43e810:	add	x8, x9, x8
  43e814:	ldr	x8, [x8]
  43e818:	cbz	x8, 43e858 <udev_builtin_lookup+0x10c>
  43e81c:	ldursw	x8, [x29, #-20]
  43e820:	mov	x9, #0x8                   	// #8
  43e824:	mul	x8, x9, x8
  43e828:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e82c:	add	x9, x9, #0x398
  43e830:	add	x8, x9, x8
  43e834:	ldr	x8, [x8]
  43e838:	ldr	x0, [x8]
  43e83c:	ldur	x1, [x29, #-16]
  43e840:	ldr	x2, [sp, #16]
  43e844:	bl	40a810 <strncmp@plt>
  43e848:	cbnz	w0, 43e858 <udev_builtin_lookup+0x10c>
  43e84c:	ldur	w8, [x29, #-20]
  43e850:	stur	w8, [x29, #-4]
  43e854:	b	43e870 <udev_builtin_lookup+0x124>
  43e858:	ldur	w8, [x29, #-20]
  43e85c:	add	w8, w8, #0x1
  43e860:	stur	w8, [x29, #-20]
  43e864:	b	43e7f0 <udev_builtin_lookup+0xa4>
  43e868:	mov	w8, #0xffffffff            	// #-1
  43e86c:	stur	w8, [x29, #-4]
  43e870:	ldur	w0, [x29, #-4]
  43e874:	ldp	x29, x30, [sp, #48]
  43e878:	add	sp, sp, #0x40
  43e87c:	ret

000000000043e880 <udev_builtin_run>:
  43e880:	sub	sp, sp, #0x80
  43e884:	stp	x29, x30, [sp, #112]
  43e888:	add	x29, sp, #0x70
  43e88c:	mov	x8, xzr
  43e890:	mov	w9, #0x1                   	// #1
  43e894:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43e898:	add	x10, x10, #0x358
  43e89c:	add	x10, x10, #0x3
  43e8a0:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  43e8a4:	add	x11, x11, #0x412
  43e8a8:	stur	x0, [x29, #-16]
  43e8ac:	stur	w1, [x29, #-20]
  43e8b0:	stur	x2, [x29, #-32]
  43e8b4:	and	w9, w3, w9
  43e8b8:	sturb	w9, [x29, #-33]
  43e8bc:	stur	x8, [x29, #-48]
  43e8c0:	str	x10, [sp, #48]
  43e8c4:	str	x11, [sp, #40]
  43e8c8:	ldur	x8, [x29, #-16]
  43e8cc:	cmp	x8, #0x0
  43e8d0:	cset	w9, ne  // ne = any
  43e8d4:	mov	w10, #0x1                   	// #1
  43e8d8:	eor	w9, w9, #0x1
  43e8dc:	eor	w9, w9, w10
  43e8e0:	eor	w9, w9, w10
  43e8e4:	and	w9, w9, #0x1
  43e8e8:	mov	w0, w9
  43e8ec:	sxtw	x8, w0
  43e8f0:	cbz	x8, 43e910 <udev_builtin_run+0x90>
  43e8f4:	mov	w0, #0x1                   	// #1
  43e8f8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43e8fc:	add	x1, x1, #0xee1
  43e900:	ldr	x2, [sp, #48]
  43e904:	mov	w3, #0x71                  	// #113
  43e908:	ldr	x4, [sp, #40]
  43e90c:	bl	40a540 <log_assert_failed_realm@plt>
  43e910:	ldur	w8, [x29, #-20]
  43e914:	cmp	w8, #0x0
  43e918:	cset	w8, lt  // lt = tstop
  43e91c:	mov	w9, #0x0                   	// #0
  43e920:	str	w9, [sp, #36]
  43e924:	tbnz	w8, #0, 43e938 <udev_builtin_run+0xb8>
  43e928:	ldur	w8, [x29, #-20]
  43e92c:	cmp	w8, #0xb
  43e930:	cset	w8, lt  // lt = tstop
  43e934:	str	w8, [sp, #36]
  43e938:	ldr	w8, [sp, #36]
  43e93c:	mov	w9, #0x1                   	// #1
  43e940:	eor	w8, w8, #0x1
  43e944:	eor	w8, w8, w9
  43e948:	eor	w8, w8, w9
  43e94c:	and	w8, w8, #0x1
  43e950:	mov	w0, w8
  43e954:	sxtw	x10, w0
  43e958:	cbz	x10, 43e978 <udev_builtin_run+0xf8>
  43e95c:	mov	w0, #0x1                   	// #1
  43e960:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e964:	add	x1, x1, #0x334
  43e968:	ldr	x2, [sp, #48]
  43e96c:	mov	w3, #0x72                  	// #114
  43e970:	ldr	x4, [sp, #40]
  43e974:	bl	40a540 <log_assert_failed_realm@plt>
  43e978:	ldur	x8, [x29, #-32]
  43e97c:	cmp	x8, #0x0
  43e980:	cset	w9, ne  // ne = any
  43e984:	mov	w10, #0x1                   	// #1
  43e988:	eor	w9, w9, #0x1
  43e98c:	eor	w9, w9, w10
  43e990:	eor	w9, w9, w10
  43e994:	and	w9, w9, #0x1
  43e998:	mov	w0, w9
  43e99c:	sxtw	x8, w0
  43e9a0:	cbz	x8, 43e9c0 <udev_builtin_run+0x140>
  43e9a4:	mov	w0, #0x1                   	// #1
  43e9a8:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43e9ac:	add	x1, x1, #0x3d5
  43e9b0:	ldr	x2, [sp, #48]
  43e9b4:	mov	w3, #0x73                  	// #115
  43e9b8:	ldr	x4, [sp, #40]
  43e9bc:	bl	40a540 <log_assert_failed_realm@plt>
  43e9c0:	ldursw	x8, [x29, #-20]
  43e9c4:	mov	x9, #0x8                   	// #8
  43e9c8:	mul	x8, x9, x8
  43e9cc:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43e9d0:	add	x9, x9, #0x398
  43e9d4:	add	x8, x9, x8
  43e9d8:	ldr	x8, [x8]
  43e9dc:	cbnz	x8, 43e9f4 <udev_builtin_run+0x174>
  43e9e0:	mov	w8, #0xffffffa1            	// #-95
  43e9e4:	stur	w8, [x29, #-4]
  43e9e8:	mov	w8, #0x1                   	// #1
  43e9ec:	stur	w8, [x29, #-52]
  43e9f0:	b	43ea9c <udev_builtin_run+0x21c>
  43e9f4:	ldur	x0, [x29, #-32]
  43e9f8:	mov	x8, xzr
  43e9fc:	mov	x1, x8
  43ea00:	mov	w2, #0x3                   	// #3
  43ea04:	bl	40af30 <strv_split_full@plt>
  43ea08:	stur	x0, [x29, #-48]
  43ea0c:	ldur	x8, [x29, #-48]
  43ea10:	cbnz	x8, 43ea28 <udev_builtin_run+0x1a8>
  43ea14:	mov	w8, #0xfffffff4            	// #-12
  43ea18:	stur	w8, [x29, #-4]
  43ea1c:	mov	w8, #0x1                   	// #1
  43ea20:	stur	w8, [x29, #-52]
  43ea24:	b	43ea9c <udev_builtin_run+0x21c>
  43ea28:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  43ea2c:	ldr	x8, [x8, #200]
  43ea30:	str	wzr, [x8]
  43ea34:	ldursw	x8, [x29, #-20]
  43ea38:	mov	x9, #0x8                   	// #8
  43ea3c:	mul	x8, x9, x8
  43ea40:	adrp	x9, 487000 <__FRAME_END__+0x14000>
  43ea44:	add	x9, x9, #0x398
  43ea48:	add	x8, x9, x8
  43ea4c:	ldr	x8, [x8]
  43ea50:	ldr	x8, [x8, #8]
  43ea54:	ldur	x0, [x29, #-16]
  43ea58:	ldur	x9, [x29, #-48]
  43ea5c:	str	x0, [sp, #24]
  43ea60:	mov	x0, x9
  43ea64:	str	x8, [sp, #16]
  43ea68:	bl	40b5d0 <strv_length@plt>
  43ea6c:	ldur	x2, [x29, #-48]
  43ea70:	ldurb	w10, [x29, #-33]
  43ea74:	ldr	x8, [sp, #24]
  43ea78:	str	w0, [sp, #12]
  43ea7c:	mov	x0, x8
  43ea80:	ldr	w1, [sp, #12]
  43ea84:	and	w3, w10, #0x1
  43ea88:	ldr	x9, [sp, #16]
  43ea8c:	blr	x9
  43ea90:	stur	w0, [x29, #-4]
  43ea94:	mov	w10, #0x1                   	// #1
  43ea98:	stur	w10, [x29, #-52]
  43ea9c:	sub	x0, x29, #0x30
  43eaa0:	bl	43eab4 <strv_freep>
  43eaa4:	ldur	w0, [x29, #-4]
  43eaa8:	ldp	x29, x30, [sp, #112]
  43eaac:	add	sp, sp, #0x80
  43eab0:	ret

000000000043eab4 <strv_freep>:
  43eab4:	sub	sp, sp, #0x20
  43eab8:	stp	x29, x30, [sp, #16]
  43eabc:	add	x29, sp, #0x10
  43eac0:	str	x0, [sp, #8]
  43eac4:	ldr	x8, [sp, #8]
  43eac8:	ldr	x8, [x8]
  43eacc:	cbz	x8, 43eadc <strv_freep+0x28>
  43ead0:	ldr	x8, [sp, #8]
  43ead4:	ldr	x0, [x8]
  43ead8:	bl	40afa0 <strv_free@plt>
  43eadc:	ldp	x29, x30, [sp, #16]
  43eae0:	add	sp, sp, #0x20
  43eae4:	ret

000000000043eae8 <udev_builtin_add_property>:
  43eae8:	sub	sp, sp, #0xe0
  43eaec:	stp	x29, x30, [sp, #208]
  43eaf0:	add	x29, sp, #0xd0
  43eaf4:	mov	w8, #0x1                   	// #1
  43eaf8:	adrp	x9, 469000 <on_inotify.__assert_in_set+0x5540>
  43eafc:	add	x9, x9, #0x358
  43eb00:	add	x9, x9, #0x3
  43eb04:	stur	x0, [x29, #-16]
  43eb08:	and	w8, w1, w8
  43eb0c:	sturb	w8, [x29, #-17]
  43eb10:	stur	x2, [x29, #-32]
  43eb14:	stur	x3, [x29, #-40]
  43eb18:	stur	x9, [x29, #-88]
  43eb1c:	ldur	x8, [x29, #-16]
  43eb20:	cmp	x8, #0x0
  43eb24:	cset	w9, ne  // ne = any
  43eb28:	mov	w10, #0x1                   	// #1
  43eb2c:	eor	w9, w9, #0x1
  43eb30:	eor	w9, w9, w10
  43eb34:	eor	w9, w9, w10
  43eb38:	and	w9, w9, #0x1
  43eb3c:	mov	w0, w9
  43eb40:	sxtw	x8, w0
  43eb44:	cbz	x8, 43eb68 <udev_builtin_add_property+0x80>
  43eb48:	mov	w0, #0x1                   	// #1
  43eb4c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43eb50:	add	x1, x1, #0xee1
  43eb54:	ldur	x2, [x29, #-88]
  43eb58:	mov	w3, #0x84                  	// #132
  43eb5c:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43eb60:	add	x4, x4, #0x45d
  43eb64:	bl	40a540 <log_assert_failed_realm@plt>
  43eb68:	ldur	x8, [x29, #-32]
  43eb6c:	cmp	x8, #0x0
  43eb70:	cset	w9, ne  // ne = any
  43eb74:	mov	w10, #0x1                   	// #1
  43eb78:	eor	w9, w9, #0x1
  43eb7c:	eor	w9, w9, w10
  43eb80:	eor	w9, w9, w10
  43eb84:	and	w9, w9, #0x1
  43eb88:	mov	w0, w9
  43eb8c:	sxtw	x8, w0
  43eb90:	cbz	x8, 43ebb4 <udev_builtin_add_property+0xcc>
  43eb94:	mov	w0, #0x1                   	// #1
  43eb98:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43eb9c:	add	x1, x1, #0x151
  43eba0:	ldur	x2, [x29, #-88]
  43eba4:	mov	w3, #0x85                  	// #133
  43eba8:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43ebac:	add	x4, x4, #0x45d
  43ebb0:	bl	40a540 <log_assert_failed_realm@plt>
  43ebb4:	ldur	x0, [x29, #-16]
  43ebb8:	ldur	x1, [x29, #-32]
  43ebbc:	ldur	x2, [x29, #-40]
  43ebc0:	bl	40aff0 <device_add_property@plt>
  43ebc4:	stur	w0, [x29, #-44]
  43ebc8:	ldur	w8, [x29, #-44]
  43ebcc:	cmp	w8, #0x0
  43ebd0:	cset	w8, ge  // ge = tcont
  43ebd4:	tbnz	w8, #0, 43ed28 <udev_builtin_add_property+0x240>
  43ebd8:	mov	x8, xzr
  43ebdc:	stur	x8, [x29, #-56]
  43ebe0:	ldur	x8, [x29, #-16]
  43ebe4:	stur	x8, [x29, #-64]
  43ebe8:	mov	w9, #0x7                   	// #7
  43ebec:	stur	w9, [x29, #-68]
  43ebf0:	ldur	w9, [x29, #-44]
  43ebf4:	stur	w9, [x29, #-72]
  43ebf8:	ldur	x8, [x29, #-64]
  43ebfc:	cbz	x8, 43ec3c <udev_builtin_add_property+0x154>
  43ec00:	mov	w0, #0x1                   	// #1
  43ec04:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ec08:	ldur	w8, [x29, #-68]
  43ec0c:	cmp	w0, w8
  43ec10:	cset	w8, ge  // ge = tcont
  43ec14:	mov	w9, #0x1                   	// #1
  43ec18:	eor	w8, w8, #0x1
  43ec1c:	eor	w8, w8, w9
  43ec20:	and	w8, w8, #0x1
  43ec24:	mov	w1, w8
  43ec28:	sxtw	x10, w1
  43ec2c:	cbz	x10, 43ec3c <udev_builtin_add_property+0x154>
  43ec30:	ldur	x0, [x29, #-64]
  43ec34:	sub	x1, x29, #0x38
  43ec38:	bl	40a860 <sd_device_get_sysname@plt>
  43ec3c:	ldur	w0, [x29, #-68]
  43ec40:	ldur	w1, [x29, #-72]
  43ec44:	ldur	x8, [x29, #-56]
  43ec48:	mov	x9, xzr
  43ec4c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  43ec50:	add	x10, x10, #0xa46
  43ec54:	cmp	x8, #0x0
  43ec58:	csel	x5, x10, x9, ne  // ne = any
  43ec5c:	ldur	x6, [x29, #-56]
  43ec60:	ldur	x8, [x29, #-32]
  43ec64:	ldur	x10, [x29, #-40]
  43ec68:	adrp	x11, 468000 <on_inotify.__assert_in_set+0x4540>
  43ec6c:	add	x11, x11, #0xcbe
  43ec70:	adrp	x12, 467000 <on_inotify.__assert_in_set+0x3540>
  43ec74:	add	x12, x12, #0x85d
  43ec78:	cmp	x10, #0x0
  43ec7c:	csel	x10, x12, x11, ne  // ne = any
  43ec80:	ldur	x11, [x29, #-40]
  43ec84:	stur	w0, [x29, #-92]
  43ec88:	mov	x0, x11
  43ec8c:	stur	w1, [x29, #-96]
  43ec90:	str	x9, [sp, #104]
  43ec94:	str	x5, [sp, #96]
  43ec98:	str	x6, [sp, #88]
  43ec9c:	str	x8, [sp, #80]
  43eca0:	str	x10, [sp, #72]
  43eca4:	bl	43ed74 <strempty>
  43eca8:	ldur	w13, [x29, #-92]
  43ecac:	str	x0, [sp, #64]
  43ecb0:	mov	w0, w13
  43ecb4:	ldur	w1, [x29, #-96]
  43ecb8:	ldur	x2, [x29, #-88]
  43ecbc:	mov	w3, #0x8a                  	// #138
  43ecc0:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43ecc4:	add	x4, x4, #0x4ab
  43ecc8:	ldr	x5, [sp, #96]
  43eccc:	ldr	x6, [sp, #88]
  43ecd0:	ldr	x7, [sp, #104]
  43ecd4:	mov	x8, sp
  43ecd8:	ldr	x9, [sp, #104]
  43ecdc:	str	x9, [x8]
  43ece0:	mov	x8, sp
  43ece4:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43ece8:	add	x10, x10, #0x4c5
  43ecec:	str	x10, [x8, #8]
  43ecf0:	mov	x8, sp
  43ecf4:	ldr	x10, [sp, #80]
  43ecf8:	str	x10, [x8, #16]
  43ecfc:	mov	x8, sp
  43ed00:	ldr	x11, [sp, #72]
  43ed04:	str	x11, [x8, #24]
  43ed08:	mov	x8, sp
  43ed0c:	ldr	x12, [sp, #64]
  43ed10:	str	x12, [x8, #32]
  43ed14:	bl	40a870 <log_object_internal@plt>
  43ed18:	stur	w0, [x29, #-76]
  43ed1c:	ldur	w13, [x29, #-76]
  43ed20:	stur	w13, [x29, #-4]
  43ed24:	b	43ed64 <udev_builtin_add_property+0x27c>
  43ed28:	ldurb	w8, [x29, #-17]
  43ed2c:	tbnz	w8, #0, 43ed34 <udev_builtin_add_property+0x24c>
  43ed30:	b	43ed60 <udev_builtin_add_property+0x278>
  43ed34:	ldur	x1, [x29, #-32]
  43ed38:	ldur	x0, [x29, #-40]
  43ed3c:	str	x1, [sp, #56]
  43ed40:	bl	43ed74 <strempty>
  43ed44:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  43ed48:	add	x8, x8, #0x4e5
  43ed4c:	str	x0, [sp, #48]
  43ed50:	mov	x0, x8
  43ed54:	ldr	x1, [sp, #56]
  43ed58:	ldr	x2, [sp, #48]
  43ed5c:	bl	40a580 <printf@plt>
  43ed60:	stur	wzr, [x29, #-4]
  43ed64:	ldur	w0, [x29, #-4]
  43ed68:	ldp	x29, x30, [sp, #208]
  43ed6c:	add	sp, sp, #0xe0
  43ed70:	ret

000000000043ed74 <strempty>:
  43ed74:	sub	sp, sp, #0x20
  43ed78:	str	x0, [sp, #24]
  43ed7c:	ldr	x8, [sp, #24]
  43ed80:	str	x8, [sp, #16]
  43ed84:	cbz	x8, 43ed94 <strempty+0x20>
  43ed88:	ldr	x8, [sp, #16]
  43ed8c:	str	x8, [sp, #8]
  43ed90:	b	43eda0 <strempty+0x2c>
  43ed94:	adrp	x8, 468000 <on_inotify.__assert_in_set+0x4540>
  43ed98:	add	x8, x8, #0xcbe
  43ed9c:	str	x8, [sp, #8]
  43eda0:	ldr	x8, [sp, #8]
  43eda4:	mov	x0, x8
  43eda8:	add	sp, sp, #0x20
  43edac:	ret

000000000043edb0 <builtin_btrfs>:
  43edb0:	stp	x29, x30, [sp, #-32]!
  43edb4:	str	x28, [sp, #16]
  43edb8:	mov	x29, sp
  43edbc:	sub	sp, sp, #0x1, lsl #12
  43edc0:	sub	sp, sp, #0xf0
  43edc4:	sub	x8, x29, #0x21
  43edc8:	mov	x9, #0x1000                	// #4096
  43edcc:	mov	w10, #0xffffffff            	// #-1
  43edd0:	mov	w11, wzr
  43edd4:	mov	w12, #0x1                   	// #1
  43edd8:	adrp	x13, 464000 <on_inotify.__assert_in_set+0x540>
  43eddc:	add	x13, x13, #0xa46
  43ede0:	adrp	x14, 469000 <on_inotify.__assert_in_set+0x5540>
  43ede4:	add	x14, x14, #0x510
  43ede8:	add	x14, x14, #0x3
  43edec:	adrp	x15, 469000 <on_inotify.__assert_in_set+0x5540>
  43edf0:	add	x15, x15, #0x531
  43edf4:	add	x16, sp, #0xc8
  43edf8:	stur	x0, [x8, #17]
  43edfc:	stur	w1, [x29, #-20]
  43ee00:	stur	x2, [x8, #1]
  43ee04:	and	w12, w3, w12
  43ee08:	strb	w12, [x8]
  43ee0c:	mov	x0, x16
  43ee10:	mov	w1, w11
  43ee14:	mov	x2, x9
  43ee18:	str	x8, [sp, #88]
  43ee1c:	str	w10, [sp, #84]
  43ee20:	str	x13, [sp, #72]
  43ee24:	str	x14, [sp, #64]
  43ee28:	str	x15, [sp, #56]
  43ee2c:	bl	40a5f0 <memset@plt>
  43ee30:	ldr	w10, [sp, #84]
  43ee34:	str	w10, [sp, #196]
  43ee38:	ldur	w11, [x29, #-20]
  43ee3c:	cmp	w11, #0x3
  43ee40:	b.ne	43ee60 <builtin_btrfs+0xb0>  // b.any
  43ee44:	ldr	x8, [sp, #88]
  43ee48:	ldur	x9, [x8, #1]
  43ee4c:	ldr	x0, [x9, #8]
  43ee50:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43ee54:	add	x1, x1, #0x50a
  43ee58:	bl	40aa20 <strcmp@plt>
  43ee5c:	cbz	w0, 43ef30 <builtin_btrfs+0x180>
  43ee60:	mov	x8, xzr
  43ee64:	str	x8, [sp, #184]
  43ee68:	ldr	x8, [sp, #88]
  43ee6c:	ldur	x9, [x8, #17]
  43ee70:	str	x9, [sp, #176]
  43ee74:	mov	w10, #0x3                   	// #3
  43ee78:	str	w10, [sp, #172]
  43ee7c:	mov	w10, #0x16                  	// #22
  43ee80:	movk	w10, #0x4000, lsl #16
  43ee84:	str	w10, [sp, #168]
  43ee88:	ldr	x9, [sp, #176]
  43ee8c:	cbz	x9, 43eecc <builtin_btrfs+0x11c>
  43ee90:	mov	w0, #0x1                   	// #1
  43ee94:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ee98:	ldr	w8, [sp, #172]
  43ee9c:	cmp	w0, w8
  43eea0:	cset	w8, ge  // ge = tcont
  43eea4:	mov	w9, #0x1                   	// #1
  43eea8:	eor	w8, w8, #0x1
  43eeac:	eor	w8, w8, w9
  43eeb0:	and	w8, w8, #0x1
  43eeb4:	mov	w1, w8
  43eeb8:	sxtw	x10, w1
  43eebc:	cbz	x10, 43eecc <builtin_btrfs+0x11c>
  43eec0:	ldr	x0, [sp, #176]
  43eec4:	add	x1, sp, #0xb8
  43eec8:	bl	40a860 <sd_device_get_sysname@plt>
  43eecc:	ldr	w0, [sp, #172]
  43eed0:	ldr	w1, [sp, #168]
  43eed4:	ldr	x8, [sp, #184]
  43eed8:	mov	x9, xzr
  43eedc:	cmp	x8, #0x0
  43eee0:	ldr	x8, [sp, #72]
  43eee4:	csel	x5, x8, x9, ne  // ne = any
  43eee8:	ldr	x6, [sp, #184]
  43eeec:	ldr	x2, [sp, #64]
  43eef0:	mov	w3, #0x15                  	// #21
  43eef4:	ldr	x4, [sp, #56]
  43eef8:	mov	x7, x9
  43eefc:	mov	x10, sp
  43ef00:	str	x9, [x10]
  43ef04:	mov	x9, sp
  43ef08:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43ef0c:	add	x10, x10, #0x53f
  43ef10:	str	x10, [x9, #8]
  43ef14:	bl	40a870 <log_object_internal@plt>
  43ef18:	str	w0, [sp, #164]
  43ef1c:	ldr	w11, [sp, #164]
  43ef20:	stur	w11, [x29, #-4]
  43ef24:	mov	w11, #0x1                   	// #1
  43ef28:	str	w11, [sp, #160]
  43ef2c:	b	43f1a0 <builtin_btrfs+0x3f0>
  43ef30:	adrp	x0, 469000 <on_inotify.__assert_in_set+0x5540>
  43ef34:	add	x0, x0, #0x551
  43ef38:	mov	w1, #0x2                   	// #2
  43ef3c:	movk	w1, #0x8, lsl #16
  43ef40:	bl	40abd0 <open64@plt>
  43ef44:	str	w0, [sp, #196]
  43ef48:	ldr	w8, [sp, #196]
  43ef4c:	cmp	w8, #0x0
  43ef50:	cset	w8, ge  // ge = tcont
  43ef54:	tbnz	w8, #0, 43f028 <builtin_btrfs+0x278>
  43ef58:	mov	x8, xzr
  43ef5c:	str	x8, [sp, #152]
  43ef60:	ldr	x8, [sp, #88]
  43ef64:	ldur	x9, [x8, #17]
  43ef68:	str	x9, [sp, #144]
  43ef6c:	mov	w10, #0x7                   	// #7
  43ef70:	str	w10, [sp, #140]
  43ef74:	bl	40a480 <__errno_location@plt>
  43ef78:	ldr	w10, [x0]
  43ef7c:	str	w10, [sp, #136]
  43ef80:	ldr	x8, [sp, #144]
  43ef84:	cbz	x8, 43efc4 <builtin_btrfs+0x214>
  43ef88:	mov	w0, #0x1                   	// #1
  43ef8c:	bl	40a3f0 <log_get_max_level_realm@plt>
  43ef90:	ldr	w8, [sp, #140]
  43ef94:	cmp	w0, w8
  43ef98:	cset	w8, ge  // ge = tcont
  43ef9c:	mov	w9, #0x1                   	// #1
  43efa0:	eor	w8, w8, #0x1
  43efa4:	eor	w8, w8, w9
  43efa8:	and	w8, w8, #0x1
  43efac:	mov	w1, w8
  43efb0:	sxtw	x10, w1
  43efb4:	cbz	x10, 43efc4 <builtin_btrfs+0x214>
  43efb8:	ldr	x0, [sp, #144]
  43efbc:	add	x1, sp, #0x98
  43efc0:	bl	40a860 <sd_device_get_sysname@plt>
  43efc4:	ldr	w0, [sp, #140]
  43efc8:	ldr	w1, [sp, #136]
  43efcc:	ldr	x8, [sp, #152]
  43efd0:	mov	x9, xzr
  43efd4:	cmp	x8, #0x0
  43efd8:	ldr	x8, [sp, #72]
  43efdc:	csel	x5, x8, x9, ne  // ne = any
  43efe0:	ldr	x6, [sp, #152]
  43efe4:	ldr	x2, [sp, #64]
  43efe8:	mov	w3, #0x19                  	// #25
  43efec:	ldr	x4, [sp, #56]
  43eff0:	mov	x7, x9
  43eff4:	mov	x10, sp
  43eff8:	str	x9, [x10]
  43effc:	mov	x9, sp
  43f000:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43f004:	add	x10, x10, #0x564
  43f008:	str	x10, [x9, #8]
  43f00c:	bl	40a870 <log_object_internal@plt>
  43f010:	str	w0, [sp, #132]
  43f014:	ldr	w11, [sp, #132]
  43f018:	stur	w11, [x29, #-4]
  43f01c:	mov	w11, #0x1                   	// #1
  43f020:	str	w11, [sp, #160]
  43f024:	b	43f1a0 <builtin_btrfs+0x3f0>
  43f028:	add	x8, sp, #0xc8
  43f02c:	add	x0, x8, #0x8
  43f030:	ldr	x9, [sp, #88]
  43f034:	ldur	x10, [x9, #1]
  43f038:	ldr	x2, [x10, #16]
  43f03c:	mov	x1, #0xff8                 	// #4088
  43f040:	str	x8, [sp, #48]
  43f044:	bl	40adb0 <strscpy@plt>
  43f048:	ldr	w11, [sp, #196]
  43f04c:	mov	w0, w11
  43f050:	mov	x1, #0x9427                	// #37927
  43f054:	movk	x1, #0x9000, lsl #16
  43f058:	ldr	x2, [sp, #48]
  43f05c:	bl	40ac00 <ioctl@plt>
  43f060:	str	w0, [sp, #192]
  43f064:	ldr	w11, [sp, #192]
  43f068:	cmp	w11, #0x0
  43f06c:	cset	w11, ge  // ge = tcont
  43f070:	tbnz	w11, #0, 43f144 <builtin_btrfs+0x394>
  43f074:	mov	x8, xzr
  43f078:	str	x8, [sp, #120]
  43f07c:	ldr	x8, [sp, #88]
  43f080:	ldur	x9, [x8, #17]
  43f084:	str	x9, [sp, #112]
  43f088:	mov	w10, #0x7                   	// #7
  43f08c:	str	w10, [sp, #108]
  43f090:	bl	40a480 <__errno_location@plt>
  43f094:	ldr	w10, [x0]
  43f098:	str	w10, [sp, #104]
  43f09c:	ldr	x8, [sp, #112]
  43f0a0:	cbz	x8, 43f0e0 <builtin_btrfs+0x330>
  43f0a4:	mov	w0, #0x1                   	// #1
  43f0a8:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f0ac:	ldr	w8, [sp, #108]
  43f0b0:	cmp	w0, w8
  43f0b4:	cset	w8, ge  // ge = tcont
  43f0b8:	mov	w9, #0x1                   	// #1
  43f0bc:	eor	w8, w8, #0x1
  43f0c0:	eor	w8, w8, w9
  43f0c4:	and	w8, w8, #0x1
  43f0c8:	mov	w1, w8
  43f0cc:	sxtw	x10, w1
  43f0d0:	cbz	x10, 43f0e0 <builtin_btrfs+0x330>
  43f0d4:	ldr	x0, [sp, #112]
  43f0d8:	add	x1, sp, #0x78
  43f0dc:	bl	40a860 <sd_device_get_sysname@plt>
  43f0e0:	ldr	w0, [sp, #108]
  43f0e4:	ldr	w1, [sp, #104]
  43f0e8:	ldr	x8, [sp, #120]
  43f0ec:	mov	x9, xzr
  43f0f0:	cmp	x8, #0x0
  43f0f4:	ldr	x8, [sp, #72]
  43f0f8:	csel	x5, x8, x9, ne  // ne = any
  43f0fc:	ldr	x6, [sp, #120]
  43f100:	ldr	x2, [sp, #64]
  43f104:	mov	w3, #0x1e                  	// #30
  43f108:	ldr	x4, [sp, #56]
  43f10c:	mov	x7, x9
  43f110:	mov	x10, sp
  43f114:	str	x9, [x10]
  43f118:	mov	x9, sp
  43f11c:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43f120:	add	x10, x10, #0x58a
  43f124:	str	x10, [x9, #8]
  43f128:	bl	40a870 <log_object_internal@plt>
  43f12c:	str	w0, [sp, #100]
  43f130:	ldr	w11, [sp, #100]
  43f134:	stur	w11, [x29, #-4]
  43f138:	mov	w11, #0x1                   	// #1
  43f13c:	str	w11, [sp, #160]
  43f140:	b	43f1a0 <builtin_btrfs+0x3f0>
  43f144:	ldr	x8, [sp, #88]
  43f148:	ldur	x0, [x8, #17]
  43f14c:	ldrb	w9, [x8]
  43f150:	ldr	w10, [sp, #192]
  43f154:	cmp	w10, #0x0
  43f158:	cset	w10, eq  // eq = none
  43f15c:	and	w10, w10, #0x1
  43f160:	str	x0, [sp, #40]
  43f164:	mov	w0, w10
  43f168:	str	w9, [sp, #36]
  43f16c:	bl	43f1e8 <one_zero>
  43f170:	ldr	x8, [sp, #40]
  43f174:	str	x0, [sp, #24]
  43f178:	mov	x0, x8
  43f17c:	ldr	w9, [sp, #36]
  43f180:	and	w1, w9, #0x1
  43f184:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43f188:	add	x2, x2, #0x5b5
  43f18c:	ldr	x3, [sp, #24]
  43f190:	bl	43eae8 <udev_builtin_add_property>
  43f194:	stur	wzr, [x29, #-4]
  43f198:	mov	w9, #0x1                   	// #1
  43f19c:	str	w9, [sp, #160]
  43f1a0:	add	x0, sp, #0xc4
  43f1a4:	bl	43f1c0 <closep>
  43f1a8:	ldur	w0, [x29, #-4]
  43f1ac:	add	sp, sp, #0x1, lsl #12
  43f1b0:	add	sp, sp, #0xf0
  43f1b4:	ldr	x28, [sp, #16]
  43f1b8:	ldp	x29, x30, [sp], #32
  43f1bc:	ret

000000000043f1c0 <closep>:
  43f1c0:	sub	sp, sp, #0x20
  43f1c4:	stp	x29, x30, [sp, #16]
  43f1c8:	add	x29, sp, #0x10
  43f1cc:	str	x0, [sp, #8]
  43f1d0:	ldr	x8, [sp, #8]
  43f1d4:	ldr	w0, [x8]
  43f1d8:	bl	40a760 <safe_close@plt>
  43f1dc:	ldp	x29, x30, [sp, #16]
  43f1e0:	add	sp, sp, #0x20
  43f1e4:	ret

000000000043f1e8 <one_zero>:
  43f1e8:	sub	sp, sp, #0x10
  43f1ec:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  43f1f0:	add	x8, x8, #0xbbe
  43f1f4:	adrp	x9, 469000 <on_inotify.__assert_in_set+0x5540>
  43f1f8:	add	x9, x9, #0x5c4
  43f1fc:	and	w10, w0, #0x1
  43f200:	strb	w10, [sp, #15]
  43f204:	ldrb	w10, [sp, #15]
  43f208:	tst	w10, #0x1
  43f20c:	csel	x0, x8, x9, ne  // ne = any
  43f210:	add	sp, sp, #0x10
  43f214:	ret

000000000043f218 <udev_builtin_hwdb_lookup>:
  43f218:	sub	sp, sp, #0x70
  43f21c:	stp	x29, x30, [sp, #96]
  43f220:	add	x29, sp, #0x60
  43f224:	mov	x8, xzr
  43f228:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  43f22c:	add	x9, x9, #0x238
  43f230:	mov	w10, #0x1                   	// #1
  43f234:	stur	x0, [x29, #-16]
  43f238:	stur	x1, [x29, #-24]
  43f23c:	stur	x2, [x29, #-32]
  43f240:	stur	x3, [x29, #-40]
  43f244:	and	w10, w4, w10
  43f248:	sturb	w10, [x29, #-41]
  43f24c:	str	x8, [sp, #40]
  43f250:	str	wzr, [sp, #20]
  43f254:	ldr	x8, [x9]
  43f258:	str	x9, [sp]
  43f25c:	cbnz	x8, 43f274 <udev_builtin_hwdb_lookup+0x5c>
  43f260:	mov	w8, #0xfffffffe            	// #-2
  43f264:	stur	w8, [x29, #-4]
  43f268:	mov	w8, #0x1                   	// #1
  43f26c:	str	w8, [sp, #12]
  43f270:	b	43f378 <udev_builtin_hwdb_lookup+0x160>
  43f274:	ldur	x8, [x29, #-24]
  43f278:	cbz	x8, 43f2b8 <udev_builtin_hwdb_lookup+0xa0>
  43f27c:	ldur	x0, [x29, #-24]
  43f280:	ldur	x1, [x29, #-32]
  43f284:	mov	x8, xzr
  43f288:	mov	x2, x8
  43f28c:	bl	40b5e0 <strjoin_real@plt>
  43f290:	str	x0, [sp, #40]
  43f294:	ldr	x8, [sp, #40]
  43f298:	cbnz	x8, 43f2b0 <udev_builtin_hwdb_lookup+0x98>
  43f29c:	mov	w8, #0xfffffff4            	// #-12
  43f2a0:	stur	w8, [x29, #-4]
  43f2a4:	mov	w8, #0x1                   	// #1
  43f2a8:	str	w8, [sp, #12]
  43f2ac:	b	43f378 <udev_builtin_hwdb_lookup+0x160>
  43f2b0:	ldr	x8, [sp, #40]
  43f2b4:	stur	x8, [x29, #-32]
  43f2b8:	ldr	x8, [sp]
  43f2bc:	ldr	x0, [x8]
  43f2c0:	ldur	x1, [x29, #-32]
  43f2c4:	bl	40b5f0 <sd_hwdb_seek@plt>
  43f2c8:	cmp	w0, #0x0
  43f2cc:	cset	w9, ge  // ge = tcont
  43f2d0:	tbnz	w9, #0, 43f2d8 <udev_builtin_hwdb_lookup+0xc0>
  43f2d4:	b	43f368 <udev_builtin_hwdb_lookup+0x150>
  43f2d8:	ldr	x8, [sp]
  43f2dc:	ldr	x0, [x8]
  43f2e0:	add	x1, sp, #0x20
  43f2e4:	add	x2, sp, #0x18
  43f2e8:	bl	40b600 <sd_hwdb_enumerate@plt>
  43f2ec:	cmp	w0, #0x0
  43f2f0:	cset	w9, le
  43f2f4:	tbnz	w9, #0, 43f368 <udev_builtin_hwdb_lookup+0x150>
  43f2f8:	ldur	x8, [x29, #-40]
  43f2fc:	cbz	x8, 43f318 <udev_builtin_hwdb_lookup+0x100>
  43f300:	ldur	x0, [x29, #-40]
  43f304:	ldr	x1, [sp, #32]
  43f308:	mov	w2, #0x2                   	// #2
  43f30c:	bl	40b4b0 <fnmatch@plt>
  43f310:	cbz	w0, 43f318 <udev_builtin_hwdb_lookup+0x100>
  43f314:	b	43f2d8 <udev_builtin_hwdb_lookup+0xc0>
  43f318:	ldur	x0, [x29, #-16]
  43f31c:	ldurb	w8, [x29, #-41]
  43f320:	ldr	x2, [sp, #32]
  43f324:	ldr	x3, [sp, #24]
  43f328:	and	w1, w8, #0x1
  43f32c:	bl	43eae8 <udev_builtin_add_property>
  43f330:	str	w0, [sp, #16]
  43f334:	ldr	w8, [sp, #16]
  43f338:	cmp	w8, #0x0
  43f33c:	cset	w8, ge  // ge = tcont
  43f340:	tbnz	w8, #0, 43f358 <udev_builtin_hwdb_lookup+0x140>
  43f344:	ldr	w8, [sp, #16]
  43f348:	stur	w8, [x29, #-4]
  43f34c:	mov	w8, #0x1                   	// #1
  43f350:	str	w8, [sp, #12]
  43f354:	b	43f378 <udev_builtin_hwdb_lookup+0x160>
  43f358:	ldr	w8, [sp, #20]
  43f35c:	add	w8, w8, #0x1
  43f360:	str	w8, [sp, #20]
  43f364:	b	43f2d8 <udev_builtin_hwdb_lookup+0xc0>
  43f368:	ldr	w8, [sp, #20]
  43f36c:	stur	w8, [x29, #-4]
  43f370:	mov	w8, #0x1                   	// #1
  43f374:	str	w8, [sp, #12]
  43f378:	add	x0, sp, #0x28
  43f37c:	bl	43f390 <freep>
  43f380:	ldur	w0, [x29, #-4]
  43f384:	ldp	x29, x30, [sp, #96]
  43f388:	add	sp, sp, #0x70
  43f38c:	ret

000000000043f390 <freep>:
  43f390:	sub	sp, sp, #0x20
  43f394:	stp	x29, x30, [sp, #16]
  43f398:	add	x29, sp, #0x10
  43f39c:	str	x0, [sp, #8]
  43f3a0:	ldr	x8, [sp, #8]
  43f3a4:	ldr	x0, [x8]
  43f3a8:	bl	40a530 <free@plt>
  43f3ac:	ldp	x29, x30, [sp, #16]
  43f3b0:	add	sp, sp, #0x20
  43f3b4:	ret

000000000043f3b8 <builtin_hwdb>:
  43f3b8:	sub	sp, sp, #0x170
  43f3bc:	stp	x29, x30, [sp, #336]
  43f3c0:	str	x28, [sp, #352]
  43f3c4:	add	x29, sp, #0x150
  43f3c8:	sub	x8, x29, #0x70
  43f3cc:	mov	x9, xzr
  43f3d0:	adrp	x10, 4a0000 <arg_event_timeout_usec>
  43f3d4:	add	x10, x10, #0x238
  43f3d8:	mov	w11, #0x1                   	// #1
  43f3dc:	adrp	x12, 49f000 <_DYNAMIC+0x1d0>
  43f3e0:	ldr	x12, [x12, #208]
  43f3e4:	adrp	x13, 464000 <on_inotify.__assert_in_set+0x540>
  43f3e8:	add	x13, x13, #0xa46
  43f3ec:	adrp	x14, 469000 <on_inotify.__assert_in_set+0x5540>
  43f3f0:	add	x14, x14, #0x5fb
  43f3f4:	add	x14, x14, #0x3
  43f3f8:	adrp	x15, 469000 <on_inotify.__assert_in_set+0x5540>
  43f3fc:	add	x15, x15, #0x61b
  43f400:	str	x0, [x8, #96]
  43f404:	stur	w1, [x29, #-20]
  43f408:	str	x2, [x8, #80]
  43f40c:	and	w11, w3, w11
  43f410:	sturb	w11, [x29, #-33]
  43f414:	str	x9, [x8, #64]
  43f418:	str	x9, [x8, #56]
  43f41c:	str	x9, [x8, #48]
  43f420:	str	x9, [x8, #40]
  43f424:	str	x9, [x8, #32]
  43f428:	ldr	x9, [x10]
  43f42c:	str	x8, [sp, #72]
  43f430:	str	x12, [sp, #64]
  43f434:	str	x13, [sp, #56]
  43f438:	str	x14, [sp, #48]
  43f43c:	str	x15, [sp, #40]
  43f440:	cbnz	x9, 43f458 <builtin_hwdb+0xa0>
  43f444:	mov	w8, #0xffffffea            	// #-22
  43f448:	stur	w8, [x29, #-4]
  43f44c:	mov	w8, #0x1                   	// #1
  43f450:	stur	w8, [x29, #-88]
  43f454:	b	43fa4c <builtin_hwdb+0x694>
  43f458:	ldur	w0, [x29, #-20]
  43f45c:	ldr	x8, [sp, #72]
  43f460:	ldr	x1, [x8, #80]
  43f464:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43f468:	add	x2, x2, #0x5f2
  43f46c:	adrp	x3, 487000 <__FRAME_END__+0x14000>
  43f470:	add	x3, x3, #0x460
  43f474:	mov	x9, xzr
  43f478:	mov	x4, x9
  43f47c:	bl	40a550 <getopt_long@plt>
  43f480:	stur	w0, [x29, #-92]
  43f484:	ldur	w10, [x29, #-92]
  43f488:	mov	w11, #0xffffffff            	// #-1
  43f48c:	cmp	w10, w11
  43f490:	b.ne	43f498 <builtin_hwdb+0xe0>  // b.any
  43f494:	b	43f51c <builtin_hwdb+0x164>
  43f498:	ldur	w8, [x29, #-92]
  43f49c:	subs	w8, w8, #0x64
  43f4a0:	mov	w9, w8
  43f4a4:	ubfx	x9, x9, #0, #32
  43f4a8:	cmp	x9, #0xf
  43f4ac:	str	x9, [sp, #32]
  43f4b0:	b.hi	43f518 <builtin_hwdb+0x160>  // b.pmore
  43f4b4:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  43f4b8:	add	x8, x8, #0x5f0
  43f4bc:	ldr	x11, [sp, #32]
  43f4c0:	ldrsw	x10, [x8, x11, lsl #2]
  43f4c4:	add	x9, x8, x10
  43f4c8:	br	x9
  43f4cc:	ldr	x8, [sp, #64]
  43f4d0:	ldr	x9, [x8]
  43f4d4:	ldr	x10, [sp, #72]
  43f4d8:	str	x9, [x10, #64]
  43f4dc:	b	43f518 <builtin_hwdb+0x160>
  43f4e0:	ldr	x8, [sp, #64]
  43f4e4:	ldr	x9, [x8]
  43f4e8:	ldr	x10, [sp, #72]
  43f4ec:	str	x9, [x10, #56]
  43f4f0:	b	43f518 <builtin_hwdb+0x160>
  43f4f4:	ldr	x8, [sp, #64]
  43f4f8:	ldr	x9, [x8]
  43f4fc:	ldr	x10, [sp, #72]
  43f500:	str	x9, [x10, #48]
  43f504:	b	43f518 <builtin_hwdb+0x160>
  43f508:	ldr	x8, [sp, #64]
  43f50c:	ldr	x9, [x8]
  43f510:	ldr	x10, [sp, #72]
  43f514:	str	x9, [x10, #40]
  43f518:	b	43f458 <builtin_hwdb+0xa0>
  43f51c:	ldr	x8, [sp, #72]
  43f520:	ldr	x9, [x8, #80]
  43f524:	adrp	x10, 49f000 <_DYNAMIC+0x1d0>
  43f528:	ldr	x10, [x10, #200]
  43f52c:	ldrsw	x10, [x10]
  43f530:	mov	x11, #0x8                   	// #8
  43f534:	mul	x10, x11, x10
  43f538:	add	x9, x9, x10
  43f53c:	ldr	x9, [x9]
  43f540:	cbz	x9, 43f754 <builtin_hwdb+0x39c>
  43f544:	ldr	x8, [sp, #72]
  43f548:	ldr	x0, [x8, #96]
  43f54c:	ldr	x1, [x8, #40]
  43f550:	ldr	x9, [x8, #80]
  43f554:	adrp	x10, 49f000 <_DYNAMIC+0x1d0>
  43f558:	ldr	x10, [x10, #200]
  43f55c:	ldrsw	x10, [x10]
  43f560:	mov	x11, #0x8                   	// #8
  43f564:	mul	x10, x11, x10
  43f568:	add	x9, x9, x10
  43f56c:	ldr	x2, [x9]
  43f570:	ldr	x3, [x8, #64]
  43f574:	ldurb	w12, [x29, #-33]
  43f578:	and	w4, w12, #0x1
  43f57c:	bl	43f218 <udev_builtin_hwdb_lookup>
  43f580:	stur	w0, [x29, #-84]
  43f584:	ldur	w12, [x29, #-84]
  43f588:	cmp	w12, #0x0
  43f58c:	cset	w12, ge  // ge = tcont
  43f590:	tbnz	w12, #0, 43f668 <builtin_hwdb+0x2b0>
  43f594:	mov	x8, xzr
  43f598:	ldr	x9, [sp, #72]
  43f59c:	str	x8, [x9, #8]
  43f5a0:	ldr	x8, [x9, #96]
  43f5a4:	str	x8, [x9]
  43f5a8:	mov	w10, #0x7                   	// #7
  43f5ac:	stur	w10, [x29, #-116]
  43f5b0:	ldur	w10, [x29, #-84]
  43f5b4:	stur	w10, [x29, #-120]
  43f5b8:	ldr	x8, [x9]
  43f5bc:	cbz	x8, 43f600 <builtin_hwdb+0x248>
  43f5c0:	mov	w0, #0x1                   	// #1
  43f5c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f5c8:	ldur	w8, [x29, #-116]
  43f5cc:	cmp	w0, w8
  43f5d0:	cset	w8, ge  // ge = tcont
  43f5d4:	mov	w9, #0x1                   	// #1
  43f5d8:	eor	w8, w8, #0x1
  43f5dc:	eor	w8, w8, w9
  43f5e0:	and	w8, w8, #0x1
  43f5e4:	mov	w1, w8
  43f5e8:	sxtw	x10, w1
  43f5ec:	cbz	x10, 43f600 <builtin_hwdb+0x248>
  43f5f0:	ldr	x8, [sp, #72]
  43f5f4:	ldr	x0, [x8]
  43f5f8:	sub	x1, x29, #0x68
  43f5fc:	bl	40a860 <sd_device_get_sysname@plt>
  43f600:	ldur	w0, [x29, #-116]
  43f604:	ldur	w1, [x29, #-120]
  43f608:	ldr	x8, [sp, #72]
  43f60c:	ldr	x9, [x8, #8]
  43f610:	mov	x10, xzr
  43f614:	cmp	x9, #0x0
  43f618:	ldr	x9, [sp, #56]
  43f61c:	csel	x5, x9, x10, ne  // ne = any
  43f620:	ldr	x6, [x8, #8]
  43f624:	ldr	x2, [sp, #48]
  43f628:	mov	w3, #0xa6                  	// #166
  43f62c:	ldr	x4, [sp, #40]
  43f630:	mov	x7, x10
  43f634:	mov	x11, sp
  43f638:	str	x10, [x11]
  43f63c:	mov	x10, sp
  43f640:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  43f644:	add	x11, x11, #0x628
  43f648:	str	x11, [x10, #8]
  43f64c:	bl	40a870 <log_object_internal@plt>
  43f650:	stur	w0, [x29, #-124]
  43f654:	ldur	w12, [x29, #-124]
  43f658:	stur	w12, [x29, #-4]
  43f65c:	mov	w12, #0x1                   	// #1
  43f660:	stur	w12, [x29, #-88]
  43f664:	b	43fa4c <builtin_hwdb+0x694>
  43f668:	ldur	w8, [x29, #-84]
  43f66c:	cbnz	w8, 43f740 <builtin_hwdb+0x388>
  43f670:	mov	x8, xzr
  43f674:	stur	x8, [x29, #-136]
  43f678:	ldr	x8, [sp, #72]
  43f67c:	ldr	x9, [x8, #96]
  43f680:	stur	x9, [x29, #-144]
  43f684:	mov	w10, #0x7                   	// #7
  43f688:	stur	w10, [x29, #-148]
  43f68c:	mov	w10, #0x3d                  	// #61
  43f690:	movk	w10, #0x4000, lsl #16
  43f694:	stur	w10, [x29, #-152]
  43f698:	ldur	x9, [x29, #-144]
  43f69c:	cbz	x9, 43f6dc <builtin_hwdb+0x324>
  43f6a0:	mov	w0, #0x1                   	// #1
  43f6a4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f6a8:	ldur	w8, [x29, #-148]
  43f6ac:	cmp	w0, w8
  43f6b0:	cset	w8, ge  // ge = tcont
  43f6b4:	mov	w9, #0x1                   	// #1
  43f6b8:	eor	w8, w8, #0x1
  43f6bc:	eor	w8, w8, w9
  43f6c0:	and	w8, w8, #0x1
  43f6c4:	mov	w1, w8
  43f6c8:	sxtw	x10, w1
  43f6cc:	cbz	x10, 43f6dc <builtin_hwdb+0x324>
  43f6d0:	ldur	x0, [x29, #-144]
  43f6d4:	sub	x1, x29, #0x88
  43f6d8:	bl	40a860 <sd_device_get_sysname@plt>
  43f6dc:	ldur	w0, [x29, #-148]
  43f6e0:	ldur	w1, [x29, #-152]
  43f6e4:	ldur	x8, [x29, #-136]
  43f6e8:	mov	x9, xzr
  43f6ec:	cmp	x8, #0x0
  43f6f0:	ldr	x8, [sp, #56]
  43f6f4:	csel	x5, x8, x9, ne  // ne = any
  43f6f8:	ldur	x6, [x29, #-136]
  43f6fc:	ldr	x2, [sp, #48]
  43f700:	mov	w3, #0xa8                  	// #168
  43f704:	ldr	x4, [sp, #40]
  43f708:	mov	x7, x9
  43f70c:	mov	x10, sp
  43f710:	str	x9, [x10]
  43f714:	mov	x9, sp
  43f718:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43f71c:	add	x10, x10, #0x642
  43f720:	str	x10, [x9, #8]
  43f724:	bl	40a870 <log_object_internal@plt>
  43f728:	stur	w0, [x29, #-156]
  43f72c:	ldur	w11, [x29, #-156]
  43f730:	stur	w11, [x29, #-4]
  43f734:	mov	w11, #0x1                   	// #1
  43f738:	stur	w11, [x29, #-88]
  43f73c:	b	43fa4c <builtin_hwdb+0x694>
  43f740:	ldur	w8, [x29, #-84]
  43f744:	stur	w8, [x29, #-4]
  43f748:	mov	w8, #0x1                   	// #1
  43f74c:	stur	w8, [x29, #-88]
  43f750:	b	43fa4c <builtin_hwdb+0x694>
  43f754:	ldr	x8, [sp, #72]
  43f758:	ldr	x9, [x8, #56]
  43f75c:	cbz	x9, 43f860 <builtin_hwdb+0x4a8>
  43f760:	ldr	x8, [sp, #72]
  43f764:	ldr	x1, [x8, #56]
  43f768:	sub	x0, x29, #0x50
  43f76c:	bl	40b210 <sd_device_new_from_device_id@plt>
  43f770:	stur	w0, [x29, #-84]
  43f774:	ldur	w9, [x29, #-84]
  43f778:	cmp	w9, #0x0
  43f77c:	cset	w9, ge  // ge = tcont
  43f780:	tbnz	w9, #0, 43f860 <builtin_hwdb+0x4a8>
  43f784:	mov	x8, xzr
  43f788:	str	x8, [sp, #168]
  43f78c:	ldr	x8, [sp, #72]
  43f790:	ldr	x9, [x8, #96]
  43f794:	str	x9, [sp, #160]
  43f798:	mov	w10, #0x7                   	// #7
  43f79c:	str	w10, [sp, #156]
  43f7a0:	ldur	w10, [x29, #-84]
  43f7a4:	str	w10, [sp, #152]
  43f7a8:	ldr	x9, [sp, #160]
  43f7ac:	cbz	x9, 43f7ec <builtin_hwdb+0x434>
  43f7b0:	mov	w0, #0x1                   	// #1
  43f7b4:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f7b8:	ldr	w8, [sp, #156]
  43f7bc:	cmp	w0, w8
  43f7c0:	cset	w8, ge  // ge = tcont
  43f7c4:	mov	w9, #0x1                   	// #1
  43f7c8:	eor	w8, w8, #0x1
  43f7cc:	eor	w8, w8, w9
  43f7d0:	and	w8, w8, #0x1
  43f7d4:	mov	w1, w8
  43f7d8:	sxtw	x10, w1
  43f7dc:	cbz	x10, 43f7ec <builtin_hwdb+0x434>
  43f7e0:	ldr	x0, [sp, #160]
  43f7e4:	add	x1, sp, #0xa8
  43f7e8:	bl	40a860 <sd_device_get_sysname@plt>
  43f7ec:	ldr	w0, [sp, #156]
  43f7f0:	ldr	w1, [sp, #152]
  43f7f4:	ldr	x8, [sp, #168]
  43f7f8:	mov	x9, xzr
  43f7fc:	cmp	x8, #0x0
  43f800:	ldr	x8, [sp, #56]
  43f804:	csel	x5, x8, x9, ne  // ne = any
  43f808:	ldr	x6, [sp, #168]
  43f80c:	ldr	x10, [sp, #72]
  43f810:	ldr	x11, [x10, #56]
  43f814:	ldr	x2, [sp, #48]
  43f818:	mov	w3, #0xb0                  	// #176
  43f81c:	ldr	x4, [sp, #40]
  43f820:	mov	x7, x9
  43f824:	mov	x12, sp
  43f828:	str	x9, [x12]
  43f82c:	mov	x9, sp
  43f830:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  43f834:	add	x12, x12, #0x65c
  43f838:	str	x12, [x9, #8]
  43f83c:	mov	x9, sp
  43f840:	str	x11, [x9, #16]
  43f844:	bl	40a870 <log_object_internal@plt>
  43f848:	str	w0, [sp, #148]
  43f84c:	ldr	w13, [sp, #148]
  43f850:	stur	w13, [x29, #-4]
  43f854:	mov	w13, #0x1                   	// #1
  43f858:	stur	w13, [x29, #-88]
  43f85c:	b	43fa4c <builtin_hwdb+0x694>
  43f860:	ldr	x8, [sp, #72]
  43f864:	ldr	x0, [x8, #96]
  43f868:	ldr	x1, [x8, #32]
  43f86c:	ldr	x2, [x8, #48]
  43f870:	ldr	x3, [x8, #40]
  43f874:	ldr	x4, [x8, #64]
  43f878:	ldurb	w9, [x29, #-33]
  43f87c:	and	w5, w9, #0x1
  43f880:	bl	43fb58 <udev_builtin_hwdb_search>
  43f884:	stur	w0, [x29, #-84]
  43f888:	ldur	w9, [x29, #-84]
  43f88c:	cmp	w9, #0x0
  43f890:	cset	w9, ge  // ge = tcont
  43f894:	tbnz	w9, #0, 43f964 <builtin_hwdb+0x5ac>
  43f898:	mov	x8, xzr
  43f89c:	str	x8, [sp, #136]
  43f8a0:	ldr	x8, [sp, #72]
  43f8a4:	ldr	x9, [x8, #96]
  43f8a8:	str	x9, [sp, #128]
  43f8ac:	mov	w10, #0x7                   	// #7
  43f8b0:	str	w10, [sp, #124]
  43f8b4:	ldur	w10, [x29, #-84]
  43f8b8:	str	w10, [sp, #120]
  43f8bc:	ldr	x9, [sp, #128]
  43f8c0:	cbz	x9, 43f900 <builtin_hwdb+0x548>
  43f8c4:	mov	w0, #0x1                   	// #1
  43f8c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f8cc:	ldr	w8, [sp, #124]
  43f8d0:	cmp	w0, w8
  43f8d4:	cset	w8, ge  // ge = tcont
  43f8d8:	mov	w9, #0x1                   	// #1
  43f8dc:	eor	w8, w8, #0x1
  43f8e0:	eor	w8, w8, w9
  43f8e4:	and	w8, w8, #0x1
  43f8e8:	mov	w1, w8
  43f8ec:	sxtw	x10, w1
  43f8f0:	cbz	x10, 43f900 <builtin_hwdb+0x548>
  43f8f4:	ldr	x0, [sp, #128]
  43f8f8:	add	x1, sp, #0x88
  43f8fc:	bl	40a860 <sd_device_get_sysname@plt>
  43f900:	ldr	w0, [sp, #124]
  43f904:	ldr	w1, [sp, #120]
  43f908:	ldr	x8, [sp, #136]
  43f90c:	mov	x9, xzr
  43f910:	cmp	x8, #0x0
  43f914:	ldr	x8, [sp, #56]
  43f918:	csel	x5, x8, x9, ne  // ne = any
  43f91c:	ldr	x6, [sp, #136]
  43f920:	ldr	x2, [sp, #48]
  43f924:	mov	w3, #0xb5                  	// #181
  43f928:	ldr	x4, [sp, #40]
  43f92c:	mov	x7, x9
  43f930:	mov	x10, sp
  43f934:	str	x9, [x10]
  43f938:	mov	x9, sp
  43f93c:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43f940:	add	x10, x10, #0x628
  43f944:	str	x10, [x9, #8]
  43f948:	bl	40a870 <log_object_internal@plt>
  43f94c:	str	w0, [sp, #116]
  43f950:	ldr	w11, [sp, #116]
  43f954:	stur	w11, [x29, #-4]
  43f958:	mov	w11, #0x1                   	// #1
  43f95c:	stur	w11, [x29, #-88]
  43f960:	b	43fa4c <builtin_hwdb+0x694>
  43f964:	ldur	w8, [x29, #-84]
  43f968:	cbnz	w8, 43fa3c <builtin_hwdb+0x684>
  43f96c:	mov	x8, xzr
  43f970:	str	x8, [sp, #104]
  43f974:	ldr	x8, [sp, #72]
  43f978:	ldr	x9, [x8, #96]
  43f97c:	str	x9, [sp, #96]
  43f980:	mov	w10, #0x7                   	// #7
  43f984:	str	w10, [sp, #92]
  43f988:	mov	w10, #0x3d                  	// #61
  43f98c:	movk	w10, #0x4000, lsl #16
  43f990:	str	w10, [sp, #88]
  43f994:	ldr	x9, [sp, #96]
  43f998:	cbz	x9, 43f9d8 <builtin_hwdb+0x620>
  43f99c:	mov	w0, #0x1                   	// #1
  43f9a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  43f9a4:	ldr	w8, [sp, #92]
  43f9a8:	cmp	w0, w8
  43f9ac:	cset	w8, ge  // ge = tcont
  43f9b0:	mov	w9, #0x1                   	// #1
  43f9b4:	eor	w8, w8, #0x1
  43f9b8:	eor	w8, w8, w9
  43f9bc:	and	w8, w8, #0x1
  43f9c0:	mov	w1, w8
  43f9c4:	sxtw	x10, w1
  43f9c8:	cbz	x10, 43f9d8 <builtin_hwdb+0x620>
  43f9cc:	ldr	x0, [sp, #96]
  43f9d0:	add	x1, sp, #0x68
  43f9d4:	bl	40a860 <sd_device_get_sysname@plt>
  43f9d8:	ldr	w0, [sp, #92]
  43f9dc:	ldr	w1, [sp, #88]
  43f9e0:	ldr	x8, [sp, #104]
  43f9e4:	mov	x9, xzr
  43f9e8:	cmp	x8, #0x0
  43f9ec:	ldr	x8, [sp, #56]
  43f9f0:	csel	x5, x8, x9, ne  // ne = any
  43f9f4:	ldr	x6, [sp, #104]
  43f9f8:	ldr	x2, [sp, #48]
  43f9fc:	mov	w3, #0xb7                  	// #183
  43fa00:	ldr	x4, [sp, #40]
  43fa04:	mov	x7, x9
  43fa08:	mov	x10, sp
  43fa0c:	str	x9, [x10]
  43fa10:	mov	x9, sp
  43fa14:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43fa18:	add	x10, x10, #0x642
  43fa1c:	str	x10, [x9, #8]
  43fa20:	bl	40a870 <log_object_internal@plt>
  43fa24:	str	w0, [sp, #84]
  43fa28:	ldr	w11, [sp, #84]
  43fa2c:	stur	w11, [x29, #-4]
  43fa30:	mov	w11, #0x1                   	// #1
  43fa34:	stur	w11, [x29, #-88]
  43fa38:	b	43fa4c <builtin_hwdb+0x694>
  43fa3c:	ldur	w8, [x29, #-84]
  43fa40:	stur	w8, [x29, #-4]
  43fa44:	mov	w8, #0x1                   	// #1
  43fa48:	stur	w8, [x29, #-88]
  43fa4c:	sub	x0, x29, #0x50
  43fa50:	bl	43fb24 <sd_device_unrefp>
  43fa54:	ldur	w0, [x29, #-4]
  43fa58:	ldr	x28, [sp, #352]
  43fa5c:	ldp	x29, x30, [sp, #336]
  43fa60:	add	sp, sp, #0x170
  43fa64:	ret

000000000043fa68 <builtin_hwdb_init>:
  43fa68:	sub	sp, sp, #0x20
  43fa6c:	stp	x29, x30, [sp, #16]
  43fa70:	add	x29, sp, #0x10
  43fa74:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43fa78:	add	x8, x8, #0x238
  43fa7c:	ldr	x8, [x8]
  43fa80:	cbz	x8, 43fa8c <builtin_hwdb_init+0x24>
  43fa84:	stur	wzr, [x29, #-4]
  43fa88:	b	43fabc <builtin_hwdb_init+0x54>
  43fa8c:	adrp	x0, 4a0000 <arg_event_timeout_usec>
  43fa90:	add	x0, x0, #0x238
  43fa94:	bl	40b610 <sd_hwdb_new@plt>
  43fa98:	str	w0, [sp, #8]
  43fa9c:	ldr	w8, [sp, #8]
  43faa0:	cmp	w8, #0x0
  43faa4:	cset	w8, ge  // ge = tcont
  43faa8:	tbnz	w8, #0, 43fab8 <builtin_hwdb_init+0x50>
  43faac:	ldr	w8, [sp, #8]
  43fab0:	stur	w8, [x29, #-4]
  43fab4:	b	43fabc <builtin_hwdb_init+0x54>
  43fab8:	stur	wzr, [x29, #-4]
  43fabc:	ldur	w0, [x29, #-4]
  43fac0:	ldp	x29, x30, [sp, #16]
  43fac4:	add	sp, sp, #0x20
  43fac8:	ret

000000000043facc <builtin_hwdb_exit>:
  43facc:	sub	sp, sp, #0x20
  43fad0:	stp	x29, x30, [sp, #16]
  43fad4:	add	x29, sp, #0x10
  43fad8:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43fadc:	add	x8, x8, #0x238
  43fae0:	ldr	x0, [x8]
  43fae4:	str	x8, [sp, #8]
  43fae8:	bl	40b620 <sd_hwdb_unref@plt>
  43faec:	ldr	x8, [sp, #8]
  43faf0:	str	x0, [x8]
  43faf4:	ldp	x29, x30, [sp, #16]
  43faf8:	add	sp, sp, #0x20
  43fafc:	ret

000000000043fb00 <builtin_hwdb_validate>:
  43fb00:	stp	x29, x30, [sp, #-16]!
  43fb04:	mov	x29, sp
  43fb08:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  43fb0c:	add	x8, x8, #0x238
  43fb10:	ldr	x0, [x8]
  43fb14:	bl	40b630 <hwdb_validate@plt>
  43fb18:	and	w0, w0, #0x1
  43fb1c:	ldp	x29, x30, [sp], #16
  43fb20:	ret

000000000043fb24 <sd_device_unrefp>:
  43fb24:	sub	sp, sp, #0x20
  43fb28:	stp	x29, x30, [sp, #16]
  43fb2c:	add	x29, sp, #0x10
  43fb30:	str	x0, [sp, #8]
  43fb34:	ldr	x8, [sp, #8]
  43fb38:	ldr	x8, [x8]
  43fb3c:	cbz	x8, 43fb4c <sd_device_unrefp+0x28>
  43fb40:	ldr	x8, [sp, #8]
  43fb44:	ldr	x0, [x8]
  43fb48:	bl	40a7c0 <sd_device_unref@plt>
  43fb4c:	ldp	x29, x30, [sp, #16]
  43fb50:	add	sp, sp, #0x20
  43fb54:	ret

000000000043fb58 <udev_builtin_hwdb_search>:
  43fb58:	sub	sp, sp, #0x80
  43fb5c:	stp	x29, x30, [sp, #112]
  43fb60:	add	x29, sp, #0x70
  43fb64:	mov	w8, #0x0                   	// #0
  43fb68:	mov	w9, #0x1                   	// #1
  43fb6c:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43fb70:	add	x10, x10, #0x5fb
  43fb74:	add	x10, x10, #0x3
  43fb78:	stur	x0, [x29, #-8]
  43fb7c:	stur	x1, [x29, #-16]
  43fb80:	stur	x2, [x29, #-24]
  43fb84:	stur	x3, [x29, #-32]
  43fb88:	stur	x4, [x29, #-40]
  43fb8c:	and	w9, w5, w9
  43fb90:	sturb	w9, [x29, #-41]
  43fb94:	strb	w8, [sp, #39]
  43fb98:	str	wzr, [sp, #32]
  43fb9c:	str	x10, [sp]
  43fba0:	ldur	x8, [x29, #-8]
  43fba4:	cmp	x8, #0x0
  43fba8:	cset	w9, ne  // ne = any
  43fbac:	mov	w10, #0x1                   	// #1
  43fbb0:	eor	w9, w9, #0x1
  43fbb4:	eor	w9, w9, w10
  43fbb8:	eor	w9, w9, w10
  43fbbc:	and	w9, w9, #0x1
  43fbc0:	mov	w0, w9
  43fbc4:	sxtw	x8, w0
  43fbc8:	cbz	x8, 43fbec <udev_builtin_hwdb_search+0x94>
  43fbcc:	mov	w0, #0x1                   	// #1
  43fbd0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43fbd4:	add	x1, x1, #0xee1
  43fbd8:	ldr	x2, [sp]
  43fbdc:	mov	w3, #0x49                  	// #73
  43fbe0:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43fbe4:	add	x4, x4, #0x687
  43fbe8:	bl	40a540 <log_assert_failed_realm@plt>
  43fbec:	ldur	x8, [x29, #-16]
  43fbf0:	cbnz	x8, 43fbfc <udev_builtin_hwdb_search+0xa4>
  43fbf4:	ldur	x8, [x29, #-8]
  43fbf8:	stur	x8, [x29, #-16]
  43fbfc:	ldur	x8, [x29, #-16]
  43fc00:	str	x8, [sp, #56]
  43fc04:	ldr	x8, [sp, #56]
  43fc08:	cbz	x8, 43fd38 <udev_builtin_hwdb_search+0x1e0>
  43fc0c:	mov	x8, xzr
  43fc10:	str	x8, [sp, #8]
  43fc14:	ldr	x0, [sp, #56]
  43fc18:	add	x1, sp, #0x18
  43fc1c:	bl	40aa10 <sd_device_get_subsystem@plt>
  43fc20:	cmp	w0, #0x0
  43fc24:	cset	w9, ge  // ge = tcont
  43fc28:	tbnz	w9, #0, 43fc30 <udev_builtin_hwdb_search+0xd8>
  43fc2c:	b	43fd18 <udev_builtin_hwdb_search+0x1c0>
  43fc30:	ldur	x8, [x29, #-24]
  43fc34:	cbz	x8, 43fc4c <udev_builtin_hwdb_search+0xf4>
  43fc38:	ldr	x0, [sp, #24]
  43fc3c:	ldur	x1, [x29, #-24]
  43fc40:	bl	40aa20 <strcmp@plt>
  43fc44:	cbz	w0, 43fc4c <udev_builtin_hwdb_search+0xf4>
  43fc48:	b	43fd18 <udev_builtin_hwdb_search+0x1c0>
  43fc4c:	ldr	x0, [sp, #56]
  43fc50:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43fc54:	add	x1, x1, #0x6ef
  43fc58:	add	x2, sp, #0x8
  43fc5c:	bl	40aa40 <sd_device_get_property_value@plt>
  43fc60:	ldr	x8, [sp, #24]
  43fc64:	mov	x0, x8
  43fc68:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43fc6c:	add	x1, x1, #0x6f8
  43fc70:	bl	40aa20 <strcmp@plt>
  43fc74:	cbnz	w0, 43fcc8 <udev_builtin_hwdb_search+0x170>
  43fc78:	ldr	x0, [sp, #56]
  43fc7c:	add	x1, sp, #0x10
  43fc80:	bl	40abb0 <sd_device_get_devtype@plt>
  43fc84:	cmp	w0, #0x0
  43fc88:	cset	w8, lt  // lt = tstop
  43fc8c:	tbnz	w8, #0, 43fcc8 <udev_builtin_hwdb_search+0x170>
  43fc90:	ldr	x0, [sp, #16]
  43fc94:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43fc98:	add	x1, x1, #0x6fc
  43fc9c:	bl	40aa20 <strcmp@plt>
  43fca0:	cbnz	w0, 43fcc8 <udev_builtin_hwdb_search+0x170>
  43fca4:	ldr	x8, [sp, #8]
  43fca8:	cbnz	x8, 43fcc0 <udev_builtin_hwdb_search+0x168>
  43fcac:	ldr	x0, [sp, #56]
  43fcb0:	add	x1, sp, #0x28
  43fcb4:	mov	x2, #0x10                  	// #16
  43fcb8:	bl	43fd48 <modalias_usb>
  43fcbc:	str	x0, [sp, #8]
  43fcc0:	mov	w8, #0x1                   	// #1
  43fcc4:	strb	w8, [sp, #39]
  43fcc8:	ldr	x8, [sp, #8]
  43fccc:	cbnz	x8, 43fcd4 <udev_builtin_hwdb_search+0x17c>
  43fcd0:	b	43fd18 <udev_builtin_hwdb_search+0x1c0>
  43fcd4:	ldur	x0, [x29, #-8]
  43fcd8:	ldur	x1, [x29, #-32]
  43fcdc:	ldr	x2, [sp, #8]
  43fce0:	ldur	x3, [x29, #-40]
  43fce4:	ldurb	w8, [x29, #-41]
  43fce8:	and	w4, w8, #0x1
  43fcec:	bl	43f218 <udev_builtin_hwdb_lookup>
  43fcf0:	str	w0, [sp, #32]
  43fcf4:	ldr	w8, [sp, #32]
  43fcf8:	cmp	w8, #0x0
  43fcfc:	cset	w8, le
  43fd00:	tbnz	w8, #0, 43fd08 <udev_builtin_hwdb_search+0x1b0>
  43fd04:	b	43fd38 <udev_builtin_hwdb_search+0x1e0>
  43fd08:	ldrb	w8, [sp, #39]
  43fd0c:	tbnz	w8, #0, 43fd14 <udev_builtin_hwdb_search+0x1bc>
  43fd10:	b	43fd18 <udev_builtin_hwdb_search+0x1c0>
  43fd14:	b	43fd38 <udev_builtin_hwdb_search+0x1e0>
  43fd18:	add	x1, sp, #0x38
  43fd1c:	ldr	x0, [sp, #56]
  43fd20:	bl	40abc0 <sd_device_get_parent@plt>
  43fd24:	cmp	w0, #0x0
  43fd28:	cset	w8, ge  // ge = tcont
  43fd2c:	tbnz	w8, #0, 43fd34 <udev_builtin_hwdb_search+0x1dc>
  43fd30:	b	43fd38 <udev_builtin_hwdb_search+0x1e0>
  43fd34:	b	43fc04 <udev_builtin_hwdb_search+0xac>
  43fd38:	ldr	w0, [sp, #32]
  43fd3c:	ldp	x29, x30, [sp, #112]
  43fd40:	add	sp, sp, #0x80
  43fd44:	ret

000000000043fd48 <modalias_usb>:
  43fd48:	sub	sp, sp, #0x50
  43fd4c:	stp	x29, x30, [sp, #64]
  43fd50:	add	x29, sp, #0x40
  43fd54:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  43fd58:	add	x8, x8, #0x707
  43fd5c:	add	x9, sp, #0x18
  43fd60:	stur	x0, [x29, #-16]
  43fd64:	stur	x1, [x29, #-24]
  43fd68:	str	x2, [sp, #32]
  43fd6c:	ldur	x0, [x29, #-16]
  43fd70:	mov	x1, x8
  43fd74:	mov	x2, x9
  43fd78:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  43fd7c:	cmp	w0, #0x0
  43fd80:	cset	w10, ge  // ge = tcont
  43fd84:	tbnz	w10, #0, 43fd94 <modalias_usb+0x4c>
  43fd88:	mov	x8, xzr
  43fd8c:	stur	x8, [x29, #-8]
  43fd90:	b	43fe2c <modalias_usb+0xe4>
  43fd94:	ldur	x0, [x29, #-16]
  43fd98:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43fd9c:	add	x1, x1, #0x710
  43fda0:	add	x2, sp, #0x10
  43fda4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  43fda8:	cmp	w0, #0x0
  43fdac:	cset	w8, ge  // ge = tcont
  43fdb0:	tbnz	w8, #0, 43fdc0 <modalias_usb+0x78>
  43fdb4:	mov	x8, xzr
  43fdb8:	stur	x8, [x29, #-8]
  43fdbc:	b	43fe2c <modalias_usb+0xe4>
  43fdc0:	ldr	x0, [sp, #24]
  43fdc4:	add	x1, sp, #0xe
  43fdc8:	bl	43fe3c <safe_atoux16>
  43fdcc:	cmp	w0, #0x0
  43fdd0:	cset	w8, ge  // ge = tcont
  43fdd4:	tbnz	w8, #0, 43fde4 <modalias_usb+0x9c>
  43fdd8:	mov	x8, xzr
  43fddc:	stur	x8, [x29, #-8]
  43fde0:	b	43fe2c <modalias_usb+0xe4>
  43fde4:	ldr	x0, [sp, #16]
  43fde8:	add	x1, sp, #0xc
  43fdec:	bl	43fe3c <safe_atoux16>
  43fdf0:	cmp	w0, #0x0
  43fdf4:	cset	w8, ge  // ge = tcont
  43fdf8:	tbnz	w8, #0, 43fe08 <modalias_usb+0xc0>
  43fdfc:	mov	x8, xzr
  43fe00:	stur	x8, [x29, #-8]
  43fe04:	b	43fe2c <modalias_usb+0xe4>
  43fe08:	ldur	x0, [x29, #-24]
  43fe0c:	ldr	x1, [sp, #32]
  43fe10:	ldrh	w3, [sp, #14]
  43fe14:	ldrh	w4, [sp, #12]
  43fe18:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43fe1c:	add	x2, x2, #0x71a
  43fe20:	bl	40b140 <snprintf@plt>
  43fe24:	ldur	x8, [x29, #-24]
  43fe28:	stur	x8, [x29, #-8]
  43fe2c:	ldur	x0, [x29, #-8]
  43fe30:	ldp	x29, x30, [sp, #64]
  43fe34:	add	sp, sp, #0x50
  43fe38:	ret

000000000043fe3c <safe_atoux16>:
  43fe3c:	sub	sp, sp, #0x20
  43fe40:	stp	x29, x30, [sp, #16]
  43fe44:	add	x29, sp, #0x10
  43fe48:	mov	w8, #0x10                  	// #16
  43fe4c:	str	x0, [sp, #8]
  43fe50:	str	x1, [sp]
  43fe54:	ldr	x0, [sp, #8]
  43fe58:	ldr	x2, [sp]
  43fe5c:	mov	w1, w8
  43fe60:	bl	40b640 <safe_atou16_full@plt>
  43fe64:	ldp	x29, x30, [sp, #16]
  43fe68:	add	sp, sp, #0x20
  43fe6c:	ret

000000000043fe70 <builtin_input_id>:
  43fe70:	sub	sp, sp, #0x130
  43fe74:	stp	x29, x30, [sp, #272]
  43fe78:	str	x28, [sp, #288]
  43fe7c:	add	x29, sp, #0x110
  43fe80:	adrp	x8, 466000 <on_inotify.__assert_in_set+0x2540>
  43fe84:	add	x8, x8, #0xbbe
  43fe88:	mov	w9, #0x1                   	// #1
  43fe8c:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  43fe90:	add	x10, x10, #0x74b
  43fe94:	add	x10, x10, #0x3
  43fe98:	stur	x0, [x29, #-8]
  43fe9c:	stur	w1, [x29, #-12]
  43fea0:	stur	x2, [x29, #-24]
  43fea4:	and	w9, w3, w9
  43fea8:	sturb	w9, [x29, #-25]
  43feac:	str	x8, [sp, #64]
  43feb0:	str	x10, [sp, #56]
  43feb4:	ldur	x8, [x29, #-8]
  43feb8:	cmp	x8, #0x0
  43febc:	cset	w9, ne  // ne = any
  43fec0:	mov	w10, #0x1                   	// #1
  43fec4:	eor	w9, w9, #0x1
  43fec8:	eor	w9, w9, w10
  43fecc:	eor	w9, w9, w10
  43fed0:	and	w9, w9, #0x1
  43fed4:	mov	w0, w9
  43fed8:	sxtw	x8, w0
  43fedc:	cbz	x8, 43ff00 <builtin_input_id+0x90>
  43fee0:	mov	w0, #0x1                   	// #1
  43fee4:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  43fee8:	add	x1, x1, #0xee1
  43feec:	ldr	x2, [sp, #56]
  43fef0:	mov	w3, #0x137                 	// #311
  43fef4:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  43fef8:	add	x4, x4, #0x76f
  43fefc:	bl	40a540 <log_assert_failed_realm@plt>
  43ff00:	ldur	x8, [x29, #-8]
  43ff04:	stur	x8, [x29, #-40]
  43ff08:	ldur	x8, [x29, #-40]
  43ff0c:	cbz	x8, 43ff68 <builtin_input_id+0xf8>
  43ff10:	ldur	x0, [x29, #-40]
  43ff14:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43ff18:	add	x1, x1, #0x7a6
  43ff1c:	add	x2, sp, #0x48
  43ff20:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  43ff24:	cmp	w0, #0x0
  43ff28:	cset	w8, lt  // lt = tstop
  43ff2c:	tbnz	w8, #0, 43ff34 <builtin_input_id+0xc4>
  43ff30:	b	43ff68 <builtin_input_id+0xf8>
  43ff34:	sub	x3, x29, #0x28
  43ff38:	ldur	x0, [x29, #-40]
  43ff3c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43ff40:	add	x1, x1, #0x7b6
  43ff44:	mov	x8, xzr
  43ff48:	mov	x2, x8
  43ff4c:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  43ff50:	cmp	w0, #0x0
  43ff54:	cset	w9, lt  // lt = tstop
  43ff58:	tbnz	w9, #0, 43ff60 <builtin_input_id+0xf0>
  43ff5c:	b	43ff08 <builtin_input_id+0x98>
  43ff60:	mov	x8, xzr
  43ff64:	stur	x8, [x29, #-40]
  43ff68:	ldur	x8, [x29, #-40]
  43ff6c:	cbz	x8, 440144 <builtin_input_id+0x2d4>
  43ff70:	ldur	x0, [x29, #-8]
  43ff74:	ldurb	w8, [x29, #-25]
  43ff78:	mov	w9, #0x1                   	// #1
  43ff7c:	and	w1, w8, #0x1
  43ff80:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  43ff84:	add	x2, x2, #0x7bc
  43ff88:	ldr	x3, [sp, #64]
  43ff8c:	str	w9, [sp, #52]
  43ff90:	bl	43eae8 <udev_builtin_add_property>
  43ff94:	ldur	x10, [x29, #-40]
  43ff98:	ldurb	w8, [x29, #-25]
  43ff9c:	mov	x0, x10
  43ffa0:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43ffa4:	add	x1, x1, #0x7a6
  43ffa8:	sub	x10, x29, #0x30
  43ffac:	mov	x2, x10
  43ffb0:	mov	x11, #0x8                   	// #8
  43ffb4:	mov	x3, x11
  43ffb8:	and	w4, w8, #0x1
  43ffbc:	str	x10, [sp, #40]
  43ffc0:	str	x11, [sp, #32]
  43ffc4:	bl	4401b4 <get_cap_mask>
  43ffc8:	ldur	x0, [x29, #-40]
  43ffcc:	ldurb	w8, [x29, #-25]
  43ffd0:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43ffd4:	add	x1, x1, #0x7c5
  43ffd8:	sub	x10, x29, #0x38
  43ffdc:	mov	x2, x10
  43ffe0:	ldr	x3, [sp, #32]
  43ffe4:	and	w4, w8, #0x1
  43ffe8:	str	x10, [sp, #24]
  43ffec:	bl	4401b4 <get_cap_mask>
  43fff0:	ldur	x0, [x29, #-40]
  43fff4:	ldurb	w8, [x29, #-25]
  43fff8:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  43fffc:	add	x1, x1, #0x7d6
  440000:	add	x10, sp, #0x70
  440004:	mov	x2, x10
  440008:	ldr	x3, [sp, #32]
  44000c:	and	w4, w8, #0x1
  440010:	str	x10, [sp, #16]
  440014:	bl	4401b4 <get_cap_mask>
  440018:	ldur	x0, [x29, #-40]
  44001c:	ldurb	w8, [x29, #-25]
  440020:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  440024:	add	x1, x1, #0x7e7
  440028:	add	x10, sp, #0x78
  44002c:	mov	x2, x10
  440030:	mov	x3, #0x60                  	// #96
  440034:	and	w4, w8, #0x1
  440038:	str	x10, [sp, #8]
  44003c:	bl	4401b4 <get_cap_mask>
  440040:	ldur	x0, [x29, #-40]
  440044:	ldurb	w8, [x29, #-25]
  440048:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44004c:	add	x1, x1, #0x7f8
  440050:	add	x10, sp, #0x68
  440054:	mov	x2, x10
  440058:	ldr	x3, [sp, #32]
  44005c:	and	w4, w8, #0x1
  440060:	str	x10, [sp]
  440064:	bl	4401b4 <get_cap_mask>
  440068:	ldur	x0, [x29, #-8]
  44006c:	ldurb	w8, [x29, #-25]
  440070:	ldr	x1, [sp, #40]
  440074:	ldr	x2, [sp, #24]
  440078:	ldr	x3, [sp, #8]
  44007c:	ldr	x4, [sp, #16]
  440080:	ldr	x5, [sp]
  440084:	and	w6, w8, #0x1
  440088:	bl	44093c <test_pointers>
  44008c:	ldr	w8, [sp, #52]
  440090:	and	w9, w0, w8
  440094:	strb	w9, [sp, #87]
  440098:	ldur	x0, [x29, #-8]
  44009c:	ldurb	w9, [x29, #-25]
  4400a0:	ldr	x1, [sp, #40]
  4400a4:	ldr	x2, [sp, #8]
  4400a8:	and	w3, w9, #0x1
  4400ac:	bl	4411b4 <test_key>
  4400b0:	ldr	w8, [sp, #52]
  4400b4:	and	w9, w0, w8
  4400b8:	strb	w9, [sp, #86]
  4400bc:	ldrb	w9, [sp, #87]
  4400c0:	tbnz	w9, #0, 440118 <builtin_input_id+0x2a8>
  4400c4:	ldrb	w8, [sp, #86]
  4400c8:	tbnz	w8, #0, 440118 <builtin_input_id+0x2a8>
  4400cc:	ldur	x8, [x29, #-48]
  4400d0:	lsr	x8, x8, #2
  4400d4:	and	x8, x8, #0x1
  4400d8:	cbz	x8, 440118 <builtin_input_id+0x2a8>
  4400dc:	ldr	x8, [sp, #112]
  4400e0:	lsr	x8, x8, #8
  4400e4:	and	x8, x8, #0x1
  4400e8:	cbnz	x8, 4400fc <builtin_input_id+0x28c>
  4400ec:	ldr	x8, [sp, #112]
  4400f0:	lsr	x8, x8, #6
  4400f4:	and	x8, x8, #0x1
  4400f8:	cbz	x8, 440118 <builtin_input_id+0x2a8>
  4400fc:	ldur	x0, [x29, #-8]
  440100:	ldurb	w8, [x29, #-25]
  440104:	and	w1, w8, #0x1
  440108:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  44010c:	add	x2, x2, #0x803
  440110:	ldr	x3, [sp, #64]
  440114:	bl	43eae8 <udev_builtin_add_property>
  440118:	ldur	x8, [x29, #-48]
  44011c:	lsr	x8, x8, #5
  440120:	and	x8, x8, #0x1
  440124:	cbz	x8, 440144 <builtin_input_id+0x2d4>
  440128:	ldur	x0, [x29, #-8]
  44012c:	ldurb	w8, [x29, #-25]
  440130:	and	w1, w8, #0x1
  440134:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  440138:	add	x2, x2, #0x810
  44013c:	ldr	x3, [sp, #64]
  440140:	bl	43eae8 <udev_builtin_add_property>
  440144:	ldur	x0, [x29, #-8]
  440148:	add	x1, sp, #0x58
  44014c:	bl	40a930 <sd_device_get_devname@plt>
  440150:	cmp	w0, #0x0
  440154:	cset	w8, lt  // lt = tstop
  440158:	tbnz	w8, #0, 44019c <builtin_input_id+0x32c>
  44015c:	ldur	x0, [x29, #-8]
  440160:	add	x1, sp, #0x60
  440164:	bl	40a860 <sd_device_get_sysname@plt>
  440168:	cmp	w0, #0x0
  44016c:	cset	w8, lt  // lt = tstop
  440170:	tbnz	w8, #0, 44019c <builtin_input_id+0x32c>
  440174:	ldr	x0, [sp, #96]
  440178:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  44017c:	add	x1, x1, #0xbb0
  440180:	bl	441640 <startswith>
  440184:	cbz	x0, 44019c <builtin_input_id+0x32c>
  440188:	ldur	x0, [x29, #-8]
  44018c:	ldr	x1, [sp, #88]
  440190:	ldurb	w8, [x29, #-25]
  440194:	and	w2, w8, #0x1
  440198:	bl	4416a0 <extract_info>
  44019c:	mov	w8, wzr
  4401a0:	mov	w0, w8
  4401a4:	ldr	x28, [sp, #288]
  4401a8:	ldp	x29, x30, [sp, #272]
  4401ac:	add	sp, sp, #0x130
  4401b0:	ret

00000000004401b4 <get_cap_mask>:
  4401b4:	stp	x29, x30, [sp, #-32]!
  4401b8:	str	x28, [sp, #16]
  4401bc:	mov	x29, sp
  4401c0:	sub	sp, sp, #0x1, lsl #12
  4401c4:	sub	sp, sp, #0x140
  4401c8:	sub	x8, x29, #0x21
  4401cc:	add	x9, sp, #0xe8
  4401d0:	mov	w10, #0x1                   	// #1
  4401d4:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  4401d8:	add	x11, x11, #0xa46
  4401dc:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  4401e0:	add	x12, x12, #0x74b
  4401e4:	add	x12, x12, #0x3
  4401e8:	adrp	x13, 469000 <on_inotify.__assert_in_set+0x5540>
  4401ec:	add	x13, x13, #0x894
  4401f0:	sub	x14, x29, #0x30
  4401f4:	stur	x0, [x8, #25]
  4401f8:	stur	x1, [x8, #17]
  4401fc:	stur	x2, [x8, #9]
  440200:	stur	x3, [x8, #1]
  440204:	and	w10, w4, w10
  440208:	strb	w10, [x8]
  44020c:	ldur	x0, [x8, #25]
  440210:	ldur	x1, [x8, #17]
  440214:	mov	x2, x14
  440218:	str	x8, [sp, #72]
  44021c:	str	x9, [sp, #64]
  440220:	str	x11, [sp, #56]
  440224:	str	x12, [sp, #48]
  440228:	str	x13, [sp, #40]
  44022c:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  440230:	cmp	w0, #0x0
  440234:	cset	w10, ge  // ge = tcont
  440238:	tbnz	w10, #0, 44024c <get_cap_mask+0x98>
  44023c:	adrp	x8, 468000 <on_inotify.__assert_in_set+0x4540>
  440240:	add	x8, x8, #0xcbe
  440244:	ldr	x9, [sp, #64]
  440248:	str	x8, [x9, #4136]
  44024c:	ldr	x8, [sp, #64]
  440250:	ldr	x3, [x8, #4136]
  440254:	add	x0, sp, #0x110
  440258:	mov	x1, #0x1000                	// #4096
  44025c:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  440260:	add	x2, x2, #0x820
  440264:	bl	40b140 <snprintf@plt>
  440268:	mov	w1, w0
  44026c:	sxtw	x8, w1
  440270:	cmp	x8, #0x1, lsl #12
  440274:	cset	w9, cc  // cc = lo, ul, last
  440278:	mov	w10, #0x1                   	// #1
  44027c:	eor	w9, w9, #0x1
  440280:	eor	w9, w9, w10
  440284:	eor	w9, w9, w10
  440288:	and	w9, w9, #0x1
  44028c:	mov	w1, w9
  440290:	sxtw	x8, w1
  440294:	cbz	x8, 4402b8 <get_cap_mask+0x104>
  440298:	mov	w0, #0x1                   	// #1
  44029c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4402a0:	add	x1, x1, #0x823
  4402a4:	ldr	x2, [sp, #48]
  4402a8:	mov	w3, #0x59                  	// #89
  4402ac:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  4402b0:	add	x4, x4, #0x847
  4402b4:	bl	40a540 <log_assert_failed_realm@plt>
  4402b8:	mov	x8, xzr
  4402bc:	ldr	x9, [sp, #64]
  4402c0:	str	x8, [x9, #8]
  4402c4:	ldr	x8, [sp, #72]
  4402c8:	ldur	x10, [x8, #25]
  4402cc:	str	x10, [x9]
  4402d0:	mov	w11, #0x7                   	// #7
  4402d4:	str	w11, [sp, #228]
  4402d8:	str	wzr, [sp, #224]
  4402dc:	ldr	x10, [x9]
  4402e0:	cbz	x10, 440324 <get_cap_mask+0x170>
  4402e4:	mov	w0, #0x1                   	// #1
  4402e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4402ec:	ldr	w8, [sp, #228]
  4402f0:	cmp	w0, w8
  4402f4:	cset	w8, ge  // ge = tcont
  4402f8:	mov	w9, #0x1                   	// #1
  4402fc:	eor	w8, w8, #0x1
  440300:	eor	w8, w8, w9
  440304:	and	w8, w8, #0x1
  440308:	mov	w1, w8
  44030c:	sxtw	x10, w1
  440310:	cbz	x10, 440324 <get_cap_mask+0x170>
  440314:	ldr	x8, [sp, #64]
  440318:	ldr	x0, [x8]
  44031c:	add	x1, sp, #0xf0
  440320:	bl	40a860 <sd_device_get_sysname@plt>
  440324:	ldr	w0, [sp, #228]
  440328:	ldr	w1, [sp, #224]
  44032c:	ldr	x8, [sp, #64]
  440330:	ldr	x9, [x8, #8]
  440334:	mov	x10, xzr
  440338:	cmp	x9, #0x0
  44033c:	ldr	x9, [sp, #56]
  440340:	csel	x5, x9, x10, ne  // ne = any
  440344:	ldr	x6, [x8, #8]
  440348:	ldr	x11, [sp, #72]
  44034c:	ldur	x12, [x11, #17]
  440350:	ldr	x2, [sp, #48]
  440354:	mov	w3, #0x5a                  	// #90
  440358:	ldr	x4, [sp, #40]
  44035c:	mov	x7, x10
  440360:	mov	x13, sp
  440364:	str	x10, [x13]
  440368:	mov	x10, sp
  44036c:	adrp	x13, 469000 <on_inotify.__assert_in_set+0x5540>
  440370:	add	x13, x13, #0x8a1
  440374:	str	x13, [x10, #8]
  440378:	mov	x10, sp
  44037c:	str	x12, [x10, #16]
  440380:	mov	x10, sp
  440384:	add	x12, sp, #0x110
  440388:	str	x12, [x10, #24]
  44038c:	bl	40a870 <log_object_internal@plt>
  440390:	str	w0, [sp, #220]
  440394:	ldr	x8, [sp, #72]
  440398:	ldur	x9, [x8, #1]
  44039c:	str	x9, [sp, #208]
  4403a0:	ldr	x9, [sp, #208]
  4403a4:	cmp	x9, #0x0
  4403a8:	cset	w14, ls  // ls = plast
  4403ac:	tbnz	w14, #0, 4403c8 <get_cap_mask+0x214>
  4403b0:	ldr	x8, [sp, #72]
  4403b4:	ldur	x0, [x8, #9]
  4403b8:	ldr	x2, [sp, #208]
  4403bc:	mov	w9, wzr
  4403c0:	mov	w1, w9
  4403c4:	bl	40a5f0 <memset@plt>
  4403c8:	str	wzr, [sp, #268]
  4403cc:	add	x0, sp, #0x110
  4403d0:	mov	w1, #0x20                  	// #32
  4403d4:	bl	40b660 <strrchr@plt>
  4403d8:	ldr	x8, [sp, #64]
  4403dc:	str	x0, [x8, #24]
  4403e0:	cbz	x0, 44053c <get_cap_mask+0x388>
  4403e4:	ldr	x8, [sp, #64]
  4403e8:	ldr	x9, [x8, #24]
  4403ec:	add	x0, x9, #0x1
  4403f0:	mov	x9, xzr
  4403f4:	mov	x1, x9
  4403f8:	mov	w2, #0x10                  	// #16
  4403fc:	bl	40b670 <strtoul@plt>
  440400:	ldr	x8, [sp, #64]
  440404:	str	x0, [x8, #16]
  440408:	ldr	w10, [sp, #268]
  44040c:	mov	w9, w10
  440410:	ldr	x11, [sp, #72]
  440414:	ldur	x12, [x11, #1]
  440418:	mov	x13, #0x8                   	// #8
  44041c:	udiv	x12, x12, x13
  440420:	cmp	x9, x12
  440424:	b.cs	440448 <get_cap_mask+0x294>  // b.hs, b.nlast
  440428:	ldr	x8, [sp, #64]
  44042c:	ldr	x9, [x8, #16]
  440430:	ldr	x10, [sp, #72]
  440434:	ldur	x11, [x10, #9]
  440438:	ldr	w12, [sp, #268]
  44043c:	mov	w13, w12
  440440:	str	x9, [x11, x13, lsl #3]
  440444:	b	44051c <get_cap_mask+0x368>
  440448:	mov	x8, xzr
  44044c:	str	x8, [sp, #200]
  440450:	ldr	x8, [sp, #72]
  440454:	ldur	x9, [x8, #25]
  440458:	str	x9, [sp, #192]
  44045c:	mov	w10, #0x7                   	// #7
  440460:	str	w10, [sp, #188]
  440464:	str	wzr, [sp, #184]
  440468:	ldr	x9, [sp, #192]
  44046c:	cbz	x9, 4404ac <get_cap_mask+0x2f8>
  440470:	mov	w0, #0x1                   	// #1
  440474:	bl	40a3f0 <log_get_max_level_realm@plt>
  440478:	ldr	w8, [sp, #188]
  44047c:	cmp	w0, w8
  440480:	cset	w8, ge  // ge = tcont
  440484:	mov	w9, #0x1                   	// #1
  440488:	eor	w8, w8, #0x1
  44048c:	eor	w8, w8, w9
  440490:	and	w8, w8, #0x1
  440494:	mov	w1, w8
  440498:	sxtw	x10, w1
  44049c:	cbz	x10, 4404ac <get_cap_mask+0x2f8>
  4404a0:	ldr	x0, [sp, #192]
  4404a4:	add	x1, sp, #0xc8
  4404a8:	bl	40a860 <sd_device_get_sysname@plt>
  4404ac:	ldr	w0, [sp, #188]
  4404b0:	ldr	w1, [sp, #184]
  4404b4:	ldr	x8, [sp, #200]
  4404b8:	mov	x9, xzr
  4404bc:	cmp	x8, #0x0
  4404c0:	ldr	x8, [sp, #56]
  4404c4:	csel	x5, x8, x9, ne  // ne = any
  4404c8:	ldr	x6, [sp, #200]
  4404cc:	ldr	x10, [sp, #72]
  4404d0:	ldur	x11, [x10, #17]
  4404d4:	ldr	x12, [sp, #64]
  4404d8:	ldr	x13, [x12, #16]
  4404dc:	ldr	x2, [sp, #48]
  4404e0:	mov	w3, #0x63                  	// #99
  4404e4:	ldr	x4, [sp, #40]
  4404e8:	mov	x7, x9
  4404ec:	mov	x14, sp
  4404f0:	str	x9, [x14]
  4404f4:	mov	x9, sp
  4404f8:	adrp	x14, 469000 <on_inotify.__assert_in_set+0x5540>
  4404fc:	add	x14, x14, #0x8bd
  440500:	str	x14, [x9, #8]
  440504:	mov	x9, sp
  440508:	str	x11, [x9, #16]
  44050c:	mov	x9, sp
  440510:	str	x13, [x9, #24]
  440514:	bl	40a870 <log_object_internal@plt>
  440518:	str	w0, [sp, #180]
  44051c:	ldr	x8, [sp, #64]
  440520:	ldr	x9, [x8, #24]
  440524:	mov	w10, #0x0                   	// #0
  440528:	strb	w10, [x9]
  44052c:	ldr	w10, [sp, #268]
  440530:	add	w10, w10, #0x1
  440534:	str	w10, [sp, #268]
  440538:	b	4403cc <get_cap_mask+0x218>
  44053c:	add	x0, sp, #0x110
  440540:	mov	x8, xzr
  440544:	mov	x1, x8
  440548:	mov	w2, #0x10                  	// #16
  44054c:	bl	40b670 <strtoul@plt>
  440550:	ldr	x8, [sp, #64]
  440554:	str	x0, [x8, #16]
  440558:	ldr	w9, [sp, #268]
  44055c:	mov	w10, w9
  440560:	ldr	x11, [sp, #72]
  440564:	ldur	x12, [x11, #1]
  440568:	mov	x13, #0x8                   	// #8
  44056c:	udiv	x12, x12, x13
  440570:	cmp	x10, x12
  440574:	b.cs	440598 <get_cap_mask+0x3e4>  // b.hs, b.nlast
  440578:	ldr	x8, [sp, #64]
  44057c:	ldr	x9, [x8, #16]
  440580:	ldr	x10, [sp, #72]
  440584:	ldur	x11, [x10, #9]
  440588:	ldr	w12, [sp, #268]
  44058c:	mov	w13, w12
  440590:	str	x9, [x11, x13, lsl #3]
  440594:	b	44066c <get_cap_mask+0x4b8>
  440598:	mov	x8, xzr
  44059c:	str	x8, [sp, #168]
  4405a0:	ldr	x8, [sp, #72]
  4405a4:	ldur	x9, [x8, #25]
  4405a8:	str	x9, [sp, #160]
  4405ac:	mov	w10, #0x7                   	// #7
  4405b0:	str	w10, [sp, #156]
  4405b4:	str	wzr, [sp, #152]
  4405b8:	ldr	x9, [sp, #160]
  4405bc:	cbz	x9, 4405fc <get_cap_mask+0x448>
  4405c0:	mov	w0, #0x1                   	// #1
  4405c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4405c8:	ldr	w8, [sp, #156]
  4405cc:	cmp	w0, w8
  4405d0:	cset	w8, ge  // ge = tcont
  4405d4:	mov	w9, #0x1                   	// #1
  4405d8:	eor	w8, w8, #0x1
  4405dc:	eor	w8, w8, w9
  4405e0:	and	w8, w8, #0x1
  4405e4:	mov	w1, w8
  4405e8:	sxtw	x10, w1
  4405ec:	cbz	x10, 4405fc <get_cap_mask+0x448>
  4405f0:	ldr	x0, [sp, #160]
  4405f4:	add	x1, sp, #0xa8
  4405f8:	bl	40a860 <sd_device_get_sysname@plt>
  4405fc:	ldr	w0, [sp, #156]
  440600:	ldr	w1, [sp, #152]
  440604:	ldr	x8, [sp, #168]
  440608:	mov	x9, xzr
  44060c:	cmp	x8, #0x0
  440610:	ldr	x8, [sp, #56]
  440614:	csel	x5, x8, x9, ne  // ne = any
  440618:	ldr	x6, [sp, #168]
  44061c:	ldr	x10, [sp, #72]
  440620:	ldur	x11, [x10, #17]
  440624:	ldr	x12, [sp, #64]
  440628:	ldr	x13, [x12, #16]
  44062c:	ldr	x2, [sp, #48]
  440630:	mov	w3, #0x6b                  	// #107
  440634:	ldr	x4, [sp, #40]
  440638:	mov	x7, x9
  44063c:	mov	x14, sp
  440640:	str	x9, [x14]
  440644:	mov	x9, sp
  440648:	adrp	x14, 469000 <on_inotify.__assert_in_set+0x5540>
  44064c:	add	x14, x14, #0x8bd
  440650:	str	x14, [x9, #8]
  440654:	mov	x9, sp
  440658:	str	x11, [x9, #16]
  44065c:	mov	x9, sp
  440660:	str	x13, [x9, #24]
  440664:	bl	40a870 <log_object_internal@plt>
  440668:	str	w0, [sp, #148]
  44066c:	ldr	x8, [sp, #72]
  440670:	ldrb	w9, [x8]
  440674:	tbnz	w9, #0, 44067c <get_cap_mask+0x4c8>
  440678:	b	440928 <get_cap_mask+0x774>
  44067c:	add	x0, sp, #0x110
  440680:	mov	x1, #0x1000                	// #4096
  440684:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  440688:	add	x2, x2, #0x8f5
  44068c:	mov	x3, #0x10                  	// #16
  440690:	bl	40b140 <snprintf@plt>
  440694:	mov	w1, w0
  440698:	sxtw	x8, w1
  44069c:	cmp	x8, #0x1, lsl #12
  4406a0:	cset	w9, cc  // cc = lo, ul, last
  4406a4:	mov	w10, #0x1                   	// #1
  4406a8:	eor	w9, w9, #0x1
  4406ac:	eor	w9, w9, w10
  4406b0:	eor	w9, w9, w10
  4406b4:	and	w9, w9, #0x1
  4406b8:	mov	w1, w9
  4406bc:	sxtw	x8, w1
  4406c0:	cbz	x8, 4406e4 <get_cap_mask+0x530>
  4406c4:	mov	w0, #0x1                   	// #1
  4406c8:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4406cc:	add	x1, x1, #0x823
  4406d0:	ldr	x2, [sp, #48]
  4406d4:	mov	w3, #0x70                  	// #112
  4406d8:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  4406dc:	add	x4, x4, #0x847
  4406e0:	bl	40a540 <log_assert_failed_realm@plt>
  4406e4:	mov	x8, xzr
  4406e8:	str	x8, [sp, #136]
  4406ec:	ldr	x8, [sp, #72]
  4406f0:	ldur	x9, [x8, #25]
  4406f4:	str	x9, [sp, #128]
  4406f8:	mov	w10, #0x7                   	// #7
  4406fc:	str	w10, [sp, #124]
  440700:	str	wzr, [sp, #120]
  440704:	ldr	x9, [sp, #128]
  440708:	cbz	x9, 440748 <get_cap_mask+0x594>
  44070c:	mov	w0, #0x1                   	// #1
  440710:	bl	40a3f0 <log_get_max_level_realm@plt>
  440714:	ldr	w8, [sp, #124]
  440718:	cmp	w0, w8
  44071c:	cset	w8, ge  // ge = tcont
  440720:	mov	w9, #0x1                   	// #1
  440724:	eor	w8, w8, #0x1
  440728:	eor	w8, w8, w9
  44072c:	and	w8, w8, #0x1
  440730:	mov	w1, w8
  440734:	sxtw	x10, w1
  440738:	cbz	x10, 440748 <get_cap_mask+0x594>
  44073c:	ldr	x0, [sp, #128]
  440740:	add	x1, sp, #0x88
  440744:	bl	40a860 <sd_device_get_sysname@plt>
  440748:	ldr	w0, [sp, #124]
  44074c:	ldr	w1, [sp, #120]
  440750:	ldr	x8, [sp, #136]
  440754:	mov	x9, xzr
  440758:	cmp	x8, #0x0
  44075c:	ldr	x8, [sp, #56]
  440760:	csel	x5, x8, x9, ne  // ne = any
  440764:	ldr	x6, [sp, #136]
  440768:	ldr	x10, [sp, #72]
  44076c:	ldur	x11, [x10, #17]
  440770:	ldr	x2, [sp, #48]
  440774:	mov	w3, #0x71                  	// #113
  440778:	ldr	x4, [sp, #40]
  44077c:	mov	x7, x9
  440780:	mov	x12, sp
  440784:	str	x9, [x12]
  440788:	mov	x9, sp
  44078c:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  440790:	add	x12, x12, #0x90b
  440794:	str	x12, [x9, #8]
  440798:	mov	x9, sp
  44079c:	str	x11, [x9, #16]
  4407a0:	bl	40a870 <log_object_internal@plt>
  4407a4:	str	w0, [sp, #116]
  4407a8:	ldr	x8, [sp, #72]
  4407ac:	ldur	x9, [x8, #1]
  4407b0:	mov	x10, #0x8                   	// #8
  4407b4:	udiv	x9, x9, x10
  4407b8:	ldr	x10, [sp, #64]
  4407bc:	str	x9, [x10, #16]
  4407c0:	ldr	x8, [sp, #72]
  4407c4:	ldur	x9, [x8, #9]
  4407c8:	ldr	x10, [sp, #64]
  4407cc:	ldr	x11, [x10, #16]
  4407d0:	subs	x11, x11, #0x1
  4407d4:	ldr	x9, [x9, x11, lsl #3]
  4407d8:	mov	w12, #0x0                   	// #0
  4407dc:	str	w12, [sp, #36]
  4407e0:	cbnz	x9, 4407f8 <get_cap_mask+0x644>
  4407e4:	ldr	x8, [sp, #64]
  4407e8:	ldr	x9, [x8, #16]
  4407ec:	cmp	x9, #0x0
  4407f0:	cset	w10, hi  // hi = pmore
  4407f4:	str	w10, [sp, #36]
  4407f8:	ldr	w8, [sp, #36]
  4407fc:	tbnz	w8, #0, 440804 <get_cap_mask+0x650>
  440800:	b	440818 <get_cap_mask+0x664>
  440804:	ldr	x8, [sp, #64]
  440808:	ldr	x9, [x8, #16]
  44080c:	subs	x9, x9, #0x1
  440810:	str	x9, [x8, #16]
  440814:	b	4407c0 <get_cap_mask+0x60c>
  440818:	str	wzr, [sp, #268]
  44081c:	ldr	w8, [sp, #268]
  440820:	mov	w9, w8
  440824:	ldr	x10, [sp, #64]
  440828:	ldr	x11, [x10, #16]
  44082c:	cmp	x9, x11
  440830:	b.cs	440928 <get_cap_mask+0x774>  // b.hs, b.nlast
  440834:	mov	x8, xzr
  440838:	str	x8, [sp, #104]
  44083c:	ldr	x8, [sp, #72]
  440840:	ldur	x9, [x8, #25]
  440844:	str	x9, [sp, #96]
  440848:	mov	w10, #0x7                   	// #7
  44084c:	str	w10, [sp, #92]
  440850:	str	wzr, [sp, #88]
  440854:	ldr	x9, [sp, #96]
  440858:	cbz	x9, 440898 <get_cap_mask+0x6e4>
  44085c:	mov	w0, #0x1                   	// #1
  440860:	bl	40a3f0 <log_get_max_level_realm@plt>
  440864:	ldr	w8, [sp, #92]
  440868:	cmp	w0, w8
  44086c:	cset	w8, ge  // ge = tcont
  440870:	mov	w9, #0x1                   	// #1
  440874:	eor	w8, w8, #0x1
  440878:	eor	w8, w8, w9
  44087c:	and	w8, w8, #0x1
  440880:	mov	w1, w8
  440884:	sxtw	x10, w1
  440888:	cbz	x10, 440898 <get_cap_mask+0x6e4>
  44088c:	ldr	x0, [sp, #96]
  440890:	add	x1, sp, #0x68
  440894:	bl	40a860 <sd_device_get_sysname@plt>
  440898:	ldr	w0, [sp, #92]
  44089c:	ldr	w1, [sp, #88]
  4408a0:	ldr	x8, [sp, #104]
  4408a4:	mov	x9, xzr
  4408a8:	cmp	x8, #0x0
  4408ac:	ldr	x8, [sp, #56]
  4408b0:	csel	x5, x8, x9, ne  // ne = any
  4408b4:	ldr	x6, [sp, #104]
  4408b8:	ldr	w10, [sp, #268]
  4408bc:	mov	w11, w10
  4408c0:	mov	x12, #0x40                  	// #64
  4408c4:	mul	x11, x11, x12
  4408c8:	ldr	x12, [sp, #72]
  4408cc:	ldur	x13, [x12, #9]
  4408d0:	ldr	w10, [sp, #268]
  4408d4:	mov	w14, w10
  4408d8:	ldr	x13, [x13, x14, lsl #3]
  4408dc:	ldr	x2, [sp, #48]
  4408e0:	mov	w3, #0x78                  	// #120
  4408e4:	ldr	x4, [sp, #40]
  4408e8:	mov	x7, x9
  4408ec:	mov	x14, sp
  4408f0:	str	x9, [x14]
  4408f4:	mov	x9, sp
  4408f8:	add	x14, sp, #0x110
  4408fc:	str	x14, [x9, #8]
  440900:	mov	x9, sp
  440904:	str	x11, [x9, #16]
  440908:	mov	x9, sp
  44090c:	str	x13, [x9, #24]
  440910:	bl	40a870 <log_object_internal@plt>
  440914:	str	w0, [sp, #84]
  440918:	ldr	w8, [sp, #268]
  44091c:	add	w8, w8, #0x1
  440920:	str	w8, [sp, #268]
  440924:	b	44081c <get_cap_mask+0x668>
  440928:	add	sp, sp, #0x1, lsl #12
  44092c:	add	sp, sp, #0x140
  440930:	ldr	x28, [sp, #16]
  440934:	ldp	x29, x30, [sp], #32
  440938:	ret

000000000044093c <test_pointers>:
  44093c:	sub	sp, sp, #0xb0
  440940:	stp	x29, x30, [sp, #160]
  440944:	add	x29, sp, #0xa0
  440948:	mov	w8, #0x0                   	// #0
  44094c:	mov	w9, #0x1                   	// #1
  440950:	adrp	x10, 466000 <on_inotify.__assert_in_set+0x2540>
  440954:	add	x10, x10, #0xbbe
  440958:	stur	x0, [x29, #-16]
  44095c:	stur	x1, [x29, #-24]
  440960:	stur	x2, [x29, #-32]
  440964:	stur	x3, [x29, #-40]
  440968:	stur	x4, [x29, #-48]
  44096c:	stur	x5, [x29, #-56]
  440970:	and	w11, w6, w9
  440974:	sturb	w11, [x29, #-57]
  440978:	sturb	w8, [x29, #-69]
  44097c:	sturb	w8, [x29, #-70]
  440980:	sturb	w8, [x29, #-71]
  440984:	sturb	w8, [x29, #-72]
  440988:	sturb	w8, [x29, #-73]
  44098c:	sturb	w8, [x29, #-74]
  440990:	sturb	w8, [x29, #-75]
  440994:	sturb	w8, [x29, #-76]
  440998:	sturb	w8, [x29, #-77]
  44099c:	sturb	w8, [x29, #-78]
  4409a0:	sturb	w8, [x29, #-79]
  4409a4:	strb	w8, [sp, #80]
  4409a8:	strb	w8, [sp, #79]
  4409ac:	strb	w8, [sp, #78]
  4409b0:	strb	w8, [sp, #77]
  4409b4:	strb	w8, [sp, #76]
  4409b8:	strb	w8, [sp, #75]
  4409bc:	strb	w8, [sp, #74]
  4409c0:	ldur	x12, [x29, #-24]
  4409c4:	ldr	x12, [x12]
  4409c8:	lsr	x12, x12, #1
  4409cc:	tst	x12, #0x1
  4409d0:	cset	w8, ne  // ne = any
  4409d4:	and	w8, w8, w9
  4409d8:	sturb	w8, [x29, #-76]
  4409dc:	ldur	x12, [x29, #-32]
  4409e0:	ldr	x12, [x12]
  4409e4:	lsr	x12, x12, #0
  4409e8:	and	x12, x12, #0x1
  4409ec:	mov	w8, #0x0                   	// #0
  4409f0:	str	x10, [sp, #64]
  4409f4:	str	w8, [sp, #60]
  4409f8:	cbz	x12, 440a14 <test_pointers+0xd8>
  4409fc:	ldur	x8, [x29, #-32]
  440a00:	ldr	x8, [x8]
  440a04:	lsr	x8, x8, #1
  440a08:	tst	x8, #0x1
  440a0c:	cset	w9, ne  // ne = any
  440a10:	str	w9, [sp, #60]
  440a14:	ldr	w8, [sp, #60]
  440a18:	and	w8, w8, #0x1
  440a1c:	sturb	w8, [x29, #-69]
  440a20:	ldurb	w8, [x29, #-69]
  440a24:	mov	w9, #0x0                   	// #0
  440a28:	str	w9, [sp, #56]
  440a2c:	tbnz	w8, #0, 440a34 <test_pointers+0xf8>
  440a30:	b	440a4c <test_pointers+0x110>
  440a34:	ldur	x8, [x29, #-32]
  440a38:	ldr	x8, [x8]
  440a3c:	lsr	x8, x8, #2
  440a40:	tst	x8, #0x1
  440a44:	cset	w9, ne  // ne = any
  440a48:	str	w9, [sp, #56]
  440a4c:	ldr	w8, [sp, #56]
  440a50:	mov	w9, #0x1                   	// #1
  440a54:	and	w8, w8, w9
  440a58:	sturb	w8, [x29, #-75]
  440a5c:	ldur	x10, [x29, #-56]
  440a60:	ldr	x10, [x10]
  440a64:	lsr	x10, x10, #6
  440a68:	tst	x10, #0x1
  440a6c:	cset	w8, ne  // ne = any
  440a70:	and	w8, w8, #0x1
  440a74:	strb	w8, [sp, #75]
  440a78:	ldurb	w8, [x29, #-76]
  440a7c:	tbnz	w8, #0, 440a94 <test_pointers+0x158>
  440a80:	ldurb	w8, [x29, #-75]
  440a84:	tbnz	w8, #0, 440a8c <test_pointers+0x150>
  440a88:	b	440a94 <test_pointers+0x158>
  440a8c:	mov	w8, #0x1                   	// #1
  440a90:	strb	w8, [sp, #75]
  440a94:	ldrb	w8, [sp, #75]
  440a98:	tbnz	w8, #0, 440aa0 <test_pointers+0x164>
  440a9c:	b	440ad4 <test_pointers+0x198>
  440aa0:	ldur	x0, [x29, #-16]
  440aa4:	ldurb	w8, [x29, #-57]
  440aa8:	mov	w9, #0x1                   	// #1
  440aac:	and	w1, w8, #0x1
  440ab0:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  440ab4:	add	x2, x2, #0x91f
  440ab8:	ldr	x3, [sp, #64]
  440abc:	str	w9, [sp, #52]
  440ac0:	bl	43eae8 <udev_builtin_add_property>
  440ac4:	ldr	w8, [sp, #52]
  440ac8:	and	w9, w8, w8
  440acc:	sturb	w9, [x29, #-1]
  440ad0:	b	4411a0 <test_pointers+0x864>
  440ad4:	ldur	x8, [x29, #-56]
  440ad8:	ldr	x8, [x8]
  440adc:	lsr	x8, x8, #5
  440ae0:	tst	x8, #0x1
  440ae4:	cset	w9, ne  // ne = any
  440ae8:	and	w9, w9, #0x1
  440aec:	strb	w9, [sp, #74]
  440af0:	ldur	x8, [x29, #-40]
  440af4:	ldr	x8, [x8, #40]
  440af8:	lsr	x8, x8, #11
  440afc:	and	x8, x8, #0x1
  440b00:	mov	w9, #0x1                   	// #1
  440b04:	str	w9, [sp, #48]
  440b08:	cbnz	x8, 440b24 <test_pointers+0x1e8>
  440b0c:	ldur	x8, [x29, #-40]
  440b10:	ldr	x8, [x8, #40]
  440b14:	lsr	x8, x8, #0
  440b18:	tst	x8, #0x1
  440b1c:	cset	w9, ne  // ne = any
  440b20:	str	w9, [sp, #48]
  440b24:	ldr	w8, [sp, #48]
  440b28:	and	w8, w8, #0x1
  440b2c:	sturb	w8, [x29, #-77]
  440b30:	ldur	x9, [x29, #-40]
  440b34:	ldr	x9, [x9, #40]
  440b38:	lsr	x9, x9, #5
  440b3c:	and	x9, x9, #0x1
  440b40:	mov	w8, #0x0                   	// #0
  440b44:	str	w8, [sp, #44]
  440b48:	cbz	x9, 440b68 <test_pointers+0x22c>
  440b4c:	ldur	x8, [x29, #-40]
  440b50:	ldr	x8, [x8, #40]
  440b54:	lsr	x8, x8, #0
  440b58:	tst	x8, #0x1
  440b5c:	cset	w9, ne  // ne = any
  440b60:	eor	w9, w9, #0x1
  440b64:	str	w9, [sp, #44]
  440b68:	ldr	w8, [sp, #44]
  440b6c:	and	w8, w8, #0x1
  440b70:	sturb	w8, [x29, #-78]
  440b74:	mov	w8, #0x110                 	// #272
  440b78:	stur	w8, [x29, #-64]
  440b7c:	ldur	w8, [x29, #-64]
  440b80:	mov	w9, #0x0                   	// #0
  440b84:	cmp	w8, #0x120
  440b88:	str	w9, [sp, #40]
  440b8c:	b.ge	440b9c <test_pointers+0x260>  // b.tcont
  440b90:	ldurb	w8, [x29, #-79]
  440b94:	eor	w8, w8, #0x1
  440b98:	str	w8, [sp, #40]
  440b9c:	ldr	w8, [sp, #40]
  440ba0:	tbnz	w8, #0, 440ba8 <test_pointers+0x26c>
  440ba4:	b	440bf0 <test_pointers+0x2b4>
  440ba8:	ldur	x8, [x29, #-40]
  440bac:	ldursw	x9, [x29, #-64]
  440bb0:	mov	x10, #0x40                  	// #64
  440bb4:	udiv	x9, x9, x10
  440bb8:	ldr	x8, [x8, x9, lsl #3]
  440bbc:	ldursw	x9, [x29, #-64]
  440bc0:	udiv	x11, x9, x10
  440bc4:	mul	x10, x11, x10
  440bc8:	subs	x9, x9, x10
  440bcc:	lsr	x8, x8, x9
  440bd0:	tst	x8, #0x1
  440bd4:	cset	w12, ne  // ne = any
  440bd8:	and	w12, w12, #0x1
  440bdc:	sturb	w12, [x29, #-79]
  440be0:	ldur	w8, [x29, #-64]
  440be4:	add	w8, w8, #0x1
  440be8:	stur	w8, [x29, #-64]
  440bec:	b	440b7c <test_pointers+0x240>
  440bf0:	ldur	x8, [x29, #-24]
  440bf4:	ldr	x8, [x8]
  440bf8:	lsr	x8, x8, #2
  440bfc:	and	x8, x8, #0x1
  440c00:	mov	w9, #0x0                   	// #0
  440c04:	str	w9, [sp, #36]
  440c08:	cbz	x8, 440c40 <test_pointers+0x304>
  440c0c:	ldur	x8, [x29, #-48]
  440c10:	ldr	x8, [x8]
  440c14:	lsr	x8, x8, #0
  440c18:	and	x8, x8, #0x1
  440c1c:	mov	w9, #0x0                   	// #0
  440c20:	str	w9, [sp, #36]
  440c24:	cbz	x8, 440c40 <test_pointers+0x304>
  440c28:	ldur	x8, [x29, #-48]
  440c2c:	ldr	x8, [x8]
  440c30:	lsr	x8, x8, #1
  440c34:	tst	x8, #0x1
  440c38:	cset	w9, ne  // ne = any
  440c3c:	str	w9, [sp, #36]
  440c40:	ldr	w8, [sp, #36]
  440c44:	and	w8, w8, #0x1
  440c48:	sturb	w8, [x29, #-70]
  440c4c:	ldur	x9, [x29, #-32]
  440c50:	ldr	x9, [x9]
  440c54:	lsr	x9, x9, #53
  440c58:	and	x9, x9, #0x1
  440c5c:	mov	w8, #0x0                   	// #0
  440c60:	str	w8, [sp, #32]
  440c64:	cbz	x9, 440c80 <test_pointers+0x344>
  440c68:	ldur	x8, [x29, #-32]
  440c6c:	ldr	x8, [x8]
  440c70:	lsr	x8, x8, #54
  440c74:	tst	x8, #0x1
  440c78:	cset	w9, ne  // ne = any
  440c7c:	str	w9, [sp, #32]
  440c80:	ldr	w8, [sp, #32]
  440c84:	and	w8, w8, #0x1
  440c88:	sturb	w8, [x29, #-71]
  440c8c:	ldurb	w8, [x29, #-71]
  440c90:	tbnz	w8, #0, 440c98 <test_pointers+0x35c>
  440c94:	b	440cc8 <test_pointers+0x38c>
  440c98:	ldur	x8, [x29, #-32]
  440c9c:	ldr	x8, [x8]
  440ca0:	lsr	x8, x8, #47
  440ca4:	and	x8, x8, #0x1
  440ca8:	cbz	x8, 440cc8 <test_pointers+0x38c>
  440cac:	ldur	x8, [x29, #-32]
  440cb0:	ldr	x8, [x8]
  440cb4:	lsr	x8, x8, #46
  440cb8:	and	x8, x8, #0x1
  440cbc:	cbz	x8, 440cc8 <test_pointers+0x38c>
  440cc0:	mov	w8, #0x0                   	// #0
  440cc4:	sturb	w8, [x29, #-71]
  440cc8:	ldur	x8, [x29, #-56]
  440ccc:	ldr	x8, [x8]
  440cd0:	lsr	x8, x8, #1
  440cd4:	tst	x8, #0x1
  440cd8:	cset	w9, ne  // ne = any
  440cdc:	mov	w10, #0x1                   	// #1
  440ce0:	and	w9, w9, w10
  440ce4:	sturb	w9, [x29, #-73]
  440ce8:	ldur	x8, [x29, #-40]
  440cec:	ldr	x8, [x8, #40]
  440cf0:	lsr	x8, x8, #10
  440cf4:	tst	x8, #0x1
  440cf8:	cset	w9, ne  // ne = any
  440cfc:	and	w9, w9, #0x1
  440d00:	sturb	w9, [x29, #-74]
  440d04:	ldur	x8, [x29, #-40]
  440d08:	ldr	x8, [x8, #32]
  440d0c:	lsr	x8, x8, #31
  440d10:	and	x8, x8, #0x1
  440d14:	cbnz	x8, 440e8c <test_pointers+0x550>
  440d18:	mov	w8, #0x120                 	// #288
  440d1c:	stur	w8, [x29, #-64]
  440d20:	ldur	w8, [x29, #-64]
  440d24:	mov	w9, #0x0                   	// #0
  440d28:	cmp	w8, #0x140
  440d2c:	str	w9, [sp, #28]
  440d30:	b.ge	440d40 <test_pointers+0x404>  // b.tcont
  440d34:	ldurb	w8, [x29, #-72]
  440d38:	eor	w8, w8, #0x1
  440d3c:	str	w8, [sp, #28]
  440d40:	ldr	w8, [sp, #28]
  440d44:	tbnz	w8, #0, 440d4c <test_pointers+0x410>
  440d48:	b	440d94 <test_pointers+0x458>
  440d4c:	ldur	x8, [x29, #-40]
  440d50:	ldursw	x9, [x29, #-64]
  440d54:	mov	x10, #0x40                  	// #64
  440d58:	udiv	x9, x9, x10
  440d5c:	ldr	x8, [x8, x9, lsl #3]
  440d60:	ldursw	x9, [x29, #-64]
  440d64:	udiv	x11, x9, x10
  440d68:	mul	x10, x11, x10
  440d6c:	subs	x9, x9, x10
  440d70:	lsr	x8, x8, x9
  440d74:	tst	x8, #0x1
  440d78:	cset	w12, ne  // ne = any
  440d7c:	and	w12, w12, #0x1
  440d80:	sturb	w12, [x29, #-72]
  440d84:	ldur	w8, [x29, #-64]
  440d88:	add	w8, w8, #0x1
  440d8c:	stur	w8, [x29, #-64]
  440d90:	b	440d20 <test_pointers+0x3e4>
  440d94:	mov	w8, #0x2c0                 	// #704
  440d98:	stur	w8, [x29, #-64]
  440d9c:	ldur	w8, [x29, #-64]
  440da0:	mov	w9, #0x0                   	// #0
  440da4:	cmp	w8, #0x2e7
  440da8:	str	w9, [sp, #24]
  440dac:	b.gt	440dbc <test_pointers+0x480>
  440db0:	ldurb	w8, [x29, #-72]
  440db4:	eor	w8, w8, #0x1
  440db8:	str	w8, [sp, #24]
  440dbc:	ldr	w8, [sp, #24]
  440dc0:	tbnz	w8, #0, 440dc8 <test_pointers+0x48c>
  440dc4:	b	440e10 <test_pointers+0x4d4>
  440dc8:	ldur	x8, [x29, #-40]
  440dcc:	ldursw	x9, [x29, #-64]
  440dd0:	mov	x10, #0x40                  	// #64
  440dd4:	udiv	x9, x9, x10
  440dd8:	ldr	x8, [x8, x9, lsl #3]
  440ddc:	ldursw	x9, [x29, #-64]
  440de0:	udiv	x11, x9, x10
  440de4:	mul	x10, x11, x10
  440de8:	subs	x9, x9, x10
  440dec:	lsr	x8, x8, x9
  440df0:	tst	x8, #0x1
  440df4:	cset	w12, ne  // ne = any
  440df8:	and	w12, w12, #0x1
  440dfc:	sturb	w12, [x29, #-72]
  440e00:	ldur	w8, [x29, #-64]
  440e04:	add	w8, w8, #0x1
  440e08:	stur	w8, [x29, #-64]
  440e0c:	b	440d9c <test_pointers+0x460>
  440e10:	mov	w8, #0x220                 	// #544
  440e14:	stur	w8, [x29, #-64]
  440e18:	ldur	w8, [x29, #-64]
  440e1c:	mov	w9, #0x0                   	// #0
  440e20:	cmp	w8, #0x223
  440e24:	str	w9, [sp, #20]
  440e28:	b.gt	440e38 <test_pointers+0x4fc>
  440e2c:	ldurb	w8, [x29, #-72]
  440e30:	eor	w8, w8, #0x1
  440e34:	str	w8, [sp, #20]
  440e38:	ldr	w8, [sp, #20]
  440e3c:	tbnz	w8, #0, 440e44 <test_pointers+0x508>
  440e40:	b	440e8c <test_pointers+0x550>
  440e44:	ldur	x8, [x29, #-40]
  440e48:	ldursw	x9, [x29, #-64]
  440e4c:	mov	x10, #0x40                  	// #64
  440e50:	udiv	x9, x9, x10
  440e54:	ldr	x8, [x8, x9, lsl #3]
  440e58:	ldursw	x9, [x29, #-64]
  440e5c:	udiv	x11, x9, x10
  440e60:	mul	x10, x11, x10
  440e64:	subs	x9, x9, x10
  440e68:	lsr	x8, x8, x9
  440e6c:	tst	x8, #0x1
  440e70:	cset	w12, ne  // ne = any
  440e74:	and	w12, w12, #0x1
  440e78:	sturb	w12, [x29, #-72]
  440e7c:	ldur	w8, [x29, #-64]
  440e80:	add	w8, w8, #0x1
  440e84:	stur	w8, [x29, #-64]
  440e88:	b	440e18 <test_pointers+0x4dc>
  440e8c:	mov	w8, #0x3                   	// #3
  440e90:	stur	w8, [x29, #-68]
  440e94:	ldur	w8, [x29, #-68]
  440e98:	mov	w9, #0x0                   	// #0
  440e9c:	cmp	w8, #0x18
  440ea0:	str	w9, [sp, #16]
  440ea4:	b.ge	440eb4 <test_pointers+0x578>  // b.tcont
  440ea8:	ldurb	w8, [x29, #-72]
  440eac:	eor	w8, w8, #0x1
  440eb0:	str	w8, [sp, #16]
  440eb4:	ldr	w8, [sp, #16]
  440eb8:	tbnz	w8, #0, 440ec0 <test_pointers+0x584>
  440ebc:	b	440f08 <test_pointers+0x5cc>
  440ec0:	ldur	x8, [x29, #-32]
  440ec4:	ldursw	x9, [x29, #-68]
  440ec8:	mov	x10, #0x40                  	// #64
  440ecc:	udiv	x9, x9, x10
  440ed0:	ldr	x8, [x8, x9, lsl #3]
  440ed4:	ldursw	x9, [x29, #-68]
  440ed8:	udiv	x11, x9, x10
  440edc:	mul	x10, x11, x10
  440ee0:	subs	x9, x9, x10
  440ee4:	lsr	x8, x8, x9
  440ee8:	tst	x8, #0x1
  440eec:	cset	w12, ne  // ne = any
  440ef0:	and	w12, w12, #0x1
  440ef4:	sturb	w12, [x29, #-72]
  440ef8:	ldur	w8, [x29, #-68]
  440efc:	add	w8, w8, #0x1
  440f00:	stur	w8, [x29, #-68]
  440f04:	b	440e94 <test_pointers+0x558>
  440f08:	ldurb	w8, [x29, #-69]
  440f0c:	tbnz	w8, #0, 440f14 <test_pointers+0x5d8>
  440f10:	b	440f9c <test_pointers+0x660>
  440f14:	ldurb	w8, [x29, #-77]
  440f18:	tbnz	w8, #0, 440f20 <test_pointers+0x5e4>
  440f1c:	b	440f2c <test_pointers+0x5f0>
  440f20:	mov	w8, #0x1                   	// #1
  440f24:	strb	w8, [sp, #77]
  440f28:	b	440f98 <test_pointers+0x65c>
  440f2c:	ldurb	w8, [x29, #-78]
  440f30:	tbnz	w8, #0, 440f38 <test_pointers+0x5fc>
  440f34:	b	440f4c <test_pointers+0x610>
  440f38:	ldurb	w8, [x29, #-73]
  440f3c:	tbnz	w8, #0, 440f4c <test_pointers+0x610>
  440f40:	mov	w8, #0x1                   	// #1
  440f44:	strb	w8, [sp, #79]
  440f48:	b	440f98 <test_pointers+0x65c>
  440f4c:	ldurb	w8, [x29, #-79]
  440f50:	tbnz	w8, #0, 440f58 <test_pointers+0x61c>
  440f54:	b	440f64 <test_pointers+0x628>
  440f58:	mov	w8, #0x1                   	// #1
  440f5c:	strb	w8, [sp, #80]
  440f60:	b	440f98 <test_pointers+0x65c>
  440f64:	ldurb	w8, [x29, #-74]
  440f68:	tbnz	w8, #0, 440f78 <test_pointers+0x63c>
  440f6c:	ldurb	w8, [x29, #-73]
  440f70:	tbnz	w8, #0, 440f78 <test_pointers+0x63c>
  440f74:	b	440f84 <test_pointers+0x648>
  440f78:	mov	w8, #0x1                   	// #1
  440f7c:	strb	w8, [sp, #78]
  440f80:	b	440f98 <test_pointers+0x65c>
  440f84:	ldurb	w8, [x29, #-72]
  440f88:	tbnz	w8, #0, 440f90 <test_pointers+0x654>
  440f8c:	b	440f98 <test_pointers+0x65c>
  440f90:	mov	w8, #0x1                   	// #1
  440f94:	strb	w8, [sp, #76]
  440f98:	b	440fb0 <test_pointers+0x674>
  440f9c:	ldurb	w8, [x29, #-72]
  440fa0:	tbnz	w8, #0, 440fa8 <test_pointers+0x66c>
  440fa4:	b	440fb0 <test_pointers+0x674>
  440fa8:	mov	w8, #0x1                   	// #1
  440fac:	strb	w8, [sp, #76]
  440fb0:	ldurb	w8, [x29, #-71]
  440fb4:	tbnz	w8, #0, 440fbc <test_pointers+0x680>
  440fb8:	b	441010 <test_pointers+0x6d4>
  440fbc:	ldurb	w8, [x29, #-77]
  440fc0:	tbnz	w8, #0, 440fc8 <test_pointers+0x68c>
  440fc4:	b	440fd4 <test_pointers+0x698>
  440fc8:	mov	w8, #0x1                   	// #1
  440fcc:	strb	w8, [sp, #77]
  440fd0:	b	441010 <test_pointers+0x6d4>
  440fd4:	ldurb	w8, [x29, #-78]
  440fd8:	tbnz	w8, #0, 440fe0 <test_pointers+0x6a4>
  440fdc:	b	440ff4 <test_pointers+0x6b8>
  440fe0:	ldurb	w8, [x29, #-73]
  440fe4:	tbnz	w8, #0, 440ff4 <test_pointers+0x6b8>
  440fe8:	mov	w8, #0x1                   	// #1
  440fec:	strb	w8, [sp, #79]
  440ff0:	b	441010 <test_pointers+0x6d4>
  440ff4:	ldurb	w8, [x29, #-74]
  440ff8:	tbnz	w8, #0, 441008 <test_pointers+0x6cc>
  440ffc:	ldurb	w8, [x29, #-73]
  441000:	tbnz	w8, #0, 441008 <test_pointers+0x6cc>
  441004:	b	441010 <test_pointers+0x6d4>
  441008:	mov	w8, #0x1                   	// #1
  44100c:	strb	w8, [sp, #78]
  441010:	ldrb	w8, [sp, #77]
  441014:	tbnz	w8, #0, 44104c <test_pointers+0x710>
  441018:	ldrb	w8, [sp, #79]
  44101c:	tbnz	w8, #0, 44104c <test_pointers+0x710>
  441020:	ldrb	w8, [sp, #76]
  441024:	tbnz	w8, #0, 44104c <test_pointers+0x710>
  441028:	ldurb	w8, [x29, #-79]
  44102c:	tbnz	w8, #0, 441034 <test_pointers+0x6f8>
  441030:	b	44104c <test_pointers+0x710>
  441034:	ldurb	w8, [x29, #-70]
  441038:	tbnz	w8, #0, 441044 <test_pointers+0x708>
  44103c:	ldurb	w8, [x29, #-69]
  441040:	tbnz	w8, #0, 44104c <test_pointers+0x710>
  441044:	mov	w8, #0x1                   	// #1
  441048:	strb	w8, [sp, #80]
  44104c:	ldrb	w8, [sp, #74]
  441050:	tbnz	w8, #0, 441058 <test_pointers+0x71c>
  441054:	b	441074 <test_pointers+0x738>
  441058:	ldur	x0, [x29, #-16]
  44105c:	ldurb	w8, [x29, #-57]
  441060:	and	w1, w8, #0x1
  441064:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441068:	add	x2, x2, #0x936
  44106c:	ldr	x3, [sp, #64]
  441070:	bl	43eae8 <udev_builtin_add_property>
  441074:	ldrb	w8, [sp, #80]
  441078:	tbnz	w8, #0, 441080 <test_pointers+0x744>
  44107c:	b	44109c <test_pointers+0x760>
  441080:	ldur	x0, [x29, #-16]
  441084:	ldurb	w8, [x29, #-57]
  441088:	and	w1, w8, #0x1
  44108c:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441090:	add	x2, x2, #0x94d
  441094:	ldr	x3, [sp, #64]
  441098:	bl	43eae8 <udev_builtin_add_property>
  44109c:	ldrb	w8, [sp, #79]
  4410a0:	tbnz	w8, #0, 4410a8 <test_pointers+0x76c>
  4410a4:	b	4410c4 <test_pointers+0x788>
  4410a8:	ldur	x0, [x29, #-16]
  4410ac:	ldurb	w8, [x29, #-57]
  4410b0:	and	w1, w8, #0x1
  4410b4:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  4410b8:	add	x2, x2, #0x95c
  4410bc:	ldr	x3, [sp, #64]
  4410c0:	bl	43eae8 <udev_builtin_add_property>
  4410c4:	ldrb	w8, [sp, #78]
  4410c8:	tbnz	w8, #0, 4410d0 <test_pointers+0x794>
  4410cc:	b	4410ec <test_pointers+0x7b0>
  4410d0:	ldur	x0, [x29, #-16]
  4410d4:	ldurb	w8, [x29, #-57]
  4410d8:	and	w1, w8, #0x1
  4410dc:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  4410e0:	add	x2, x2, #0x96e
  4410e4:	ldr	x3, [sp, #64]
  4410e8:	bl	43eae8 <udev_builtin_add_property>
  4410ec:	ldrb	w8, [sp, #76]
  4410f0:	tbnz	w8, #0, 4410f8 <test_pointers+0x7bc>
  4410f4:	b	441114 <test_pointers+0x7d8>
  4410f8:	ldur	x0, [x29, #-16]
  4410fc:	ldurb	w8, [x29, #-57]
  441100:	and	w1, w8, #0x1
  441104:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441108:	add	x2, x2, #0x983
  44110c:	ldr	x3, [sp, #64]
  441110:	bl	43eae8 <udev_builtin_add_property>
  441114:	ldrb	w8, [sp, #77]
  441118:	tbnz	w8, #0, 441120 <test_pointers+0x7e4>
  44111c:	b	44113c <test_pointers+0x800>
  441120:	ldur	x0, [x29, #-16]
  441124:	ldurb	w8, [x29, #-57]
  441128:	and	w1, w8, #0x1
  44112c:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441130:	add	x2, x2, #0x995
  441134:	ldr	x3, [sp, #64]
  441138:	bl	43eae8 <udev_builtin_add_property>
  44113c:	ldrb	w8, [sp, #77]
  441140:	mov	w9, #0x1                   	// #1
  441144:	str	w9, [sp, #12]
  441148:	tbnz	w8, #0, 441194 <test_pointers+0x858>
  44114c:	ldrb	w8, [sp, #80]
  441150:	mov	w9, #0x1                   	// #1
  441154:	str	w9, [sp, #12]
  441158:	tbnz	w8, #0, 441194 <test_pointers+0x858>
  44115c:	ldrb	w8, [sp, #79]
  441160:	mov	w9, #0x1                   	// #1
  441164:	str	w9, [sp, #12]
  441168:	tbnz	w8, #0, 441194 <test_pointers+0x858>
  44116c:	ldrb	w8, [sp, #78]
  441170:	mov	w9, #0x1                   	// #1
  441174:	str	w9, [sp, #12]
  441178:	tbnz	w8, #0, 441194 <test_pointers+0x858>
  44117c:	ldrb	w8, [sp, #76]
  441180:	mov	w9, #0x1                   	// #1
  441184:	str	w9, [sp, #12]
  441188:	tbnz	w8, #0, 441194 <test_pointers+0x858>
  44118c:	ldrb	w8, [sp, #74]
  441190:	str	w8, [sp, #12]
  441194:	ldr	w8, [sp, #12]
  441198:	and	w8, w8, #0x1
  44119c:	sturb	w8, [x29, #-1]
  4411a0:	ldurb	w8, [x29, #-1]
  4411a4:	and	w0, w8, #0x1
  4411a8:	ldp	x29, x30, [sp, #160]
  4411ac:	add	sp, sp, #0xb0
  4411b0:	ret

00000000004411b4 <test_key>:
  4411b4:	sub	sp, sp, #0xf0
  4411b8:	stp	x29, x30, [sp, #224]
  4411bc:	add	x29, sp, #0xe0
  4411c0:	sub	x8, x29, #0x18
  4411c4:	mov	w9, #0x0                   	// #0
  4411c8:	mov	w10, #0x1                   	// #1
  4411cc:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  4411d0:	add	x11, x11, #0xa46
  4411d4:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  4411d8:	add	x12, x12, #0x74b
  4411dc:	add	x12, x12, #0x3
  4411e0:	adrp	x13, 469000 <on_inotify.__assert_in_set+0x5540>
  4411e4:	add	x13, x13, #0x9a5
  4411e8:	str	x0, [x8, #8]
  4411ec:	str	x1, [x8]
  4411f0:	stur	x2, [x29, #-32]
  4411f4:	and	w10, w3, w10
  4411f8:	sturb	w10, [x29, #-33]
  4411fc:	sturb	w9, [x29, #-57]
  441200:	ldr	x14, [x8]
  441204:	ldr	x14, [x14]
  441208:	lsr	x14, x14, #1
  44120c:	and	x14, x14, #0x1
  441210:	str	x8, [sp, #56]
  441214:	str	x11, [sp, #48]
  441218:	str	x12, [sp, #40]
  44121c:	str	x13, [sp, #32]
  441220:	cbnz	x14, 4412e8 <test_key+0x134>
  441224:	mov	x8, xzr
  441228:	stur	x8, [x29, #-72]
  44122c:	ldr	x8, [sp, #56]
  441230:	ldr	x9, [x8, #8]
  441234:	stur	x9, [x29, #-80]
  441238:	mov	w10, #0x7                   	// #7
  44123c:	stur	w10, [x29, #-84]
  441240:	stur	wzr, [x29, #-88]
  441244:	ldur	x9, [x29, #-80]
  441248:	cbz	x9, 441288 <test_key+0xd4>
  44124c:	mov	w0, #0x1                   	// #1
  441250:	bl	40a3f0 <log_get_max_level_realm@plt>
  441254:	ldur	w8, [x29, #-84]
  441258:	cmp	w0, w8
  44125c:	cset	w8, ge  // ge = tcont
  441260:	mov	w9, #0x1                   	// #1
  441264:	eor	w8, w8, #0x1
  441268:	eor	w8, w8, w9
  44126c:	and	w8, w8, #0x1
  441270:	mov	w1, w8
  441274:	sxtw	x10, w1
  441278:	cbz	x10, 441288 <test_key+0xd4>
  44127c:	ldur	x0, [x29, #-80]
  441280:	sub	x1, x29, #0x48
  441284:	bl	40a860 <sd_device_get_sysname@plt>
  441288:	ldur	w0, [x29, #-84]
  44128c:	ldur	w1, [x29, #-88]
  441290:	ldur	x8, [x29, #-72]
  441294:	mov	x9, xzr
  441298:	cmp	x8, #0x0
  44129c:	ldr	x8, [sp, #48]
  4412a0:	csel	x5, x8, x9, ne  // ne = any
  4412a4:	ldur	x6, [x29, #-72]
  4412a8:	ldr	x2, [sp, #40]
  4412ac:	mov	w3, #0x104                 	// #260
  4412b0:	ldr	x4, [sp, #32]
  4412b4:	mov	x7, x9
  4412b8:	mov	x10, sp
  4412bc:	str	x9, [x10]
  4412c0:	mov	x9, sp
  4412c4:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  4412c8:	add	x10, x10, #0x9ae
  4412cc:	str	x10, [x9, #8]
  4412d0:	bl	40a870 <log_object_internal@plt>
  4412d4:	stur	w0, [x29, #-92]
  4412d8:	mov	w11, wzr
  4412dc:	and	w11, w11, #0x1
  4412e0:	sturb	w11, [x29, #-1]
  4412e4:	b	44162c <test_key+0x478>
  4412e8:	stur	xzr, [x29, #-48]
  4412ec:	stur	wzr, [x29, #-40]
  4412f0:	ldur	w8, [x29, #-40]
  4412f4:	mov	w9, w8
  4412f8:	cmp	x9, #0x4
  4412fc:	b.cs	441410 <test_key+0x25c>  // b.hs, b.nlast
  441300:	ldur	x8, [x29, #-32]
  441304:	ldur	w9, [x29, #-40]
  441308:	mov	w10, w9
  44130c:	ldr	x8, [x8, x10, lsl #3]
  441310:	ldur	x10, [x29, #-48]
  441314:	orr	x8, x10, x8
  441318:	stur	x8, [x29, #-48]
  44131c:	mov	x8, xzr
  441320:	stur	x8, [x29, #-104]
  441324:	ldr	x8, [sp, #56]
  441328:	ldr	x10, [x8, #8]
  44132c:	str	x10, [sp, #112]
  441330:	mov	w9, #0x7                   	// #7
  441334:	str	w9, [sp, #108]
  441338:	str	wzr, [sp, #104]
  44133c:	ldr	x10, [sp, #112]
  441340:	cbz	x10, 441380 <test_key+0x1cc>
  441344:	mov	w0, #0x1                   	// #1
  441348:	bl	40a3f0 <log_get_max_level_realm@plt>
  44134c:	ldr	w8, [sp, #108]
  441350:	cmp	w0, w8
  441354:	cset	w8, ge  // ge = tcont
  441358:	mov	w9, #0x1                   	// #1
  44135c:	eor	w8, w8, #0x1
  441360:	eor	w8, w8, w9
  441364:	and	w8, w8, #0x1
  441368:	mov	w1, w8
  44136c:	sxtw	x10, w1
  441370:	cbz	x10, 441380 <test_key+0x1cc>
  441374:	ldr	x0, [sp, #112]
  441378:	sub	x1, x29, #0x68
  44137c:	bl	40a860 <sd_device_get_sysname@plt>
  441380:	ldr	w0, [sp, #108]
  441384:	ldr	w1, [sp, #104]
  441388:	ldur	x8, [x29, #-104]
  44138c:	mov	x9, xzr
  441390:	cmp	x8, #0x0
  441394:	ldr	x8, [sp, #48]
  441398:	csel	x5, x8, x9, ne  // ne = any
  44139c:	ldur	x6, [x29, #-104]
  4413a0:	ldur	w10, [x29, #-40]
  4413a4:	mov	w11, w10
  4413a8:	mov	x12, #0x40                  	// #64
  4413ac:	mul	x11, x11, x12
  4413b0:	ldur	x12, [x29, #-48]
  4413b4:	cmp	x12, #0x0
  4413b8:	cset	w10, hi  // hi = pmore
  4413bc:	and	w10, w10, #0x1
  4413c0:	ldr	x2, [sp, #40]
  4413c4:	mov	w3, #0x10c                 	// #268
  4413c8:	ldr	x4, [sp, #32]
  4413cc:	mov	x7, x9
  4413d0:	mov	x12, sp
  4413d4:	str	x9, [x12]
  4413d8:	mov	x9, sp
  4413dc:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  4413e0:	add	x12, x12, #0x9cd
  4413e4:	str	x12, [x9, #8]
  4413e8:	mov	x9, sp
  4413ec:	str	x11, [x9, #16]
  4413f0:	mov	x9, sp
  4413f4:	str	w10, [x9, #24]
  4413f8:	bl	40a870 <log_object_internal@plt>
  4413fc:	str	w0, [sp, #100]
  441400:	ldur	w8, [x29, #-40]
  441404:	add	w8, w8, #0x1
  441408:	stur	w8, [x29, #-40]
  44140c:	b	4412f0 <test_key+0x13c>
  441410:	ldur	x8, [x29, #-48]
  441414:	cbnz	x8, 44159c <test_key+0x3e8>
  441418:	str	wzr, [sp, #96]
  44141c:	ldr	w8, [sp, #96]
  441420:	mov	w9, w8
  441424:	cmp	x9, #0x2
  441428:	b.cs	44159c <test_key+0x3e8>  // b.hs, b.nlast
  44142c:	ldr	w8, [sp, #96]
  441430:	mov	w9, w8
  441434:	mov	x10, #0x8                   	// #8
  441438:	mul	x9, x10, x9
  44143c:	adrp	x10, 472000 <on_inotify.__assert_in_set+0xe540>
  441440:	add	x10, x10, #0x630
  441444:	ldr	w8, [x10, x9]
  441448:	stur	w8, [x29, #-40]
  44144c:	ldur	w8, [x29, #-40]
  441450:	ldr	w9, [sp, #96]
  441454:	mov	w10, w9
  441458:	mov	x11, #0x8                   	// #8
  44145c:	mul	x10, x11, x10
  441460:	adrp	x11, 472000 <on_inotify.__assert_in_set+0xe540>
  441464:	add	x11, x11, #0x630
  441468:	add	x10, x11, x10
  44146c:	ldr	w9, [x10, #4]
  441470:	cmp	w8, w9
  441474:	b.cs	44158c <test_key+0x3d8>  // b.hs, b.nlast
  441478:	ldur	x8, [x29, #-32]
  44147c:	ldur	w9, [x29, #-40]
  441480:	mov	w10, w9
  441484:	mov	x11, #0x40                  	// #64
  441488:	udiv	x10, x10, x11
  44148c:	ldr	x8, [x8, x10, lsl #3]
  441490:	ldur	w9, [x29, #-40]
  441494:	mov	w10, w9
  441498:	udiv	x12, x10, x11
  44149c:	mul	x11, x12, x11
  4414a0:	subs	x10, x10, x11
  4414a4:	lsr	x8, x8, x10
  4414a8:	and	x8, x8, #0x1
  4414ac:	cbz	x8, 44157c <test_key+0x3c8>
  4414b0:	mov	x8, xzr
  4414b4:	str	x8, [sp, #88]
  4414b8:	ldr	x8, [sp, #56]
  4414bc:	ldr	x9, [x8, #8]
  4414c0:	str	x9, [sp, #80]
  4414c4:	mov	w10, #0x7                   	// #7
  4414c8:	str	w10, [sp, #76]
  4414cc:	str	wzr, [sp, #72]
  4414d0:	ldr	x9, [sp, #80]
  4414d4:	cbz	x9, 441514 <test_key+0x360>
  4414d8:	mov	w0, #0x1                   	// #1
  4414dc:	bl	40a3f0 <log_get_max_level_realm@plt>
  4414e0:	ldr	w8, [sp, #76]
  4414e4:	cmp	w0, w8
  4414e8:	cset	w8, ge  // ge = tcont
  4414ec:	mov	w9, #0x1                   	// #1
  4414f0:	eor	w8, w8, #0x1
  4414f4:	eor	w8, w8, w9
  4414f8:	and	w8, w8, #0x1
  4414fc:	mov	w1, w8
  441500:	sxtw	x10, w1
  441504:	cbz	x10, 441514 <test_key+0x360>
  441508:	ldr	x0, [sp, #80]
  44150c:	add	x1, sp, #0x58
  441510:	bl	40a860 <sd_device_get_sysname@plt>
  441514:	ldr	w0, [sp, #76]
  441518:	ldr	w1, [sp, #72]
  44151c:	ldr	x8, [sp, #88]
  441520:	mov	x9, xzr
  441524:	cmp	x8, #0x0
  441528:	ldr	x8, [sp, #48]
  44152c:	csel	x5, x8, x9, ne  // ne = any
  441530:	ldr	x6, [sp, #88]
  441534:	ldur	w10, [x29, #-40]
  441538:	ldr	x2, [sp, #40]
  44153c:	mov	w3, #0x114                 	// #276
  441540:	ldr	x4, [sp, #32]
  441544:	mov	x7, x9
  441548:	mov	x11, sp
  44154c:	str	x9, [x11]
  441550:	mov	x9, sp
  441554:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  441558:	add	x11, x11, #0xa05
  44155c:	str	x11, [x9, #8]
  441560:	mov	x9, sp
  441564:	str	w10, [x9, #16]
  441568:	bl	40a870 <log_object_internal@plt>
  44156c:	str	w0, [sp, #68]
  441570:	mov	x8, #0x1                   	// #1
  441574:	stur	x8, [x29, #-48]
  441578:	b	44158c <test_key+0x3d8>
  44157c:	ldur	w8, [x29, #-40]
  441580:	add	w8, w8, #0x1
  441584:	stur	w8, [x29, #-40]
  441588:	b	44144c <test_key+0x298>
  44158c:	ldr	w8, [sp, #96]
  441590:	add	w8, w8, #0x1
  441594:	str	w8, [sp, #96]
  441598:	b	44141c <test_key+0x268>
  44159c:	ldur	x8, [x29, #-48]
  4415a0:	cmp	x8, #0x0
  4415a4:	cset	w9, ls  // ls = plast
  4415a8:	tbnz	w9, #0, 4415d8 <test_key+0x424>
  4415ac:	ldr	x8, [sp, #56]
  4415b0:	ldr	x0, [x8, #8]
  4415b4:	ldurb	w9, [x29, #-33]
  4415b8:	and	w1, w9, #0x1
  4415bc:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  4415c0:	add	x2, x2, #0x803
  4415c4:	adrp	x3, 466000 <on_inotify.__assert_in_set+0x2540>
  4415c8:	add	x3, x3, #0xbbe
  4415cc:	bl	43eae8 <udev_builtin_add_property>
  4415d0:	mov	w9, #0x1                   	// #1
  4415d4:	sturb	w9, [x29, #-57]
  4415d8:	mov	x8, #0xfffffffe            	// #4294967294
  4415dc:	stur	x8, [x29, #-56]
  4415e0:	ldur	x8, [x29, #-32]
  4415e4:	ldr	x8, [x8]
  4415e8:	ldur	x9, [x29, #-56]
  4415ec:	bic	x8, x9, x8
  4415f0:	cbnz	x8, 441620 <test_key+0x46c>
  4415f4:	ldr	x8, [sp, #56]
  4415f8:	ldr	x0, [x8, #8]
  4415fc:	ldurb	w9, [x29, #-33]
  441600:	and	w1, w9, #0x1
  441604:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441608:	add	x2, x2, #0xa2a
  44160c:	adrp	x3, 466000 <on_inotify.__assert_in_set+0x2540>
  441610:	add	x3, x3, #0xbbe
  441614:	bl	43eae8 <udev_builtin_add_property>
  441618:	mov	w9, #0x1                   	// #1
  44161c:	sturb	w9, [x29, #-57]
  441620:	ldurb	w8, [x29, #-57]
  441624:	and	w8, w8, #0x1
  441628:	sturb	w8, [x29, #-1]
  44162c:	ldurb	w8, [x29, #-1]
  441630:	and	w0, w8, #0x1
  441634:	ldp	x29, x30, [sp, #224]
  441638:	add	sp, sp, #0xf0
  44163c:	ret

0000000000441640 <startswith>:
  441640:	sub	sp, sp, #0x30
  441644:	stp	x29, x30, [sp, #32]
  441648:	add	x29, sp, #0x20
  44164c:	str	x0, [sp, #16]
  441650:	str	x1, [sp, #8]
  441654:	ldr	x0, [sp, #8]
  441658:	bl	40a800 <strlen@plt>
  44165c:	str	x0, [sp]
  441660:	ldr	x0, [sp, #16]
  441664:	ldr	x1, [sp, #8]
  441668:	ldr	x2, [sp]
  44166c:	bl	40a810 <strncmp@plt>
  441670:	cbnz	w0, 441688 <startswith+0x48>
  441674:	ldr	x8, [sp, #16]
  441678:	ldr	x9, [sp]
  44167c:	add	x8, x8, x9
  441680:	stur	x8, [x29, #-8]
  441684:	b	441690 <startswith+0x50>
  441688:	mov	x8, xzr
  44168c:	stur	x8, [x29, #-8]
  441690:	ldur	x0, [x29, #-8]
  441694:	ldp	x29, x30, [sp, #32]
  441698:	add	sp, sp, #0x30
  44169c:	ret

00000000004416a0 <extract_info>:
  4416a0:	sub	sp, sp, #0x90
  4416a4:	stp	x29, x30, [sp, #128]
  4416a8:	add	x29, sp, #0x80
  4416ac:	mov	w8, #0xffffffff            	// #-1
  4416b0:	mov	w9, #0x80000               	// #524288
  4416b4:	mov	w10, #0x1                   	// #1
  4416b8:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  4416bc:	add	x11, x11, #0x74b
  4416c0:	add	x11, x11, #0x3
  4416c4:	stur	x0, [x29, #-8]
  4416c8:	stur	x1, [x29, #-16]
  4416cc:	and	w10, w2, w10
  4416d0:	sturb	w10, [x29, #-17]
  4416d4:	str	xzr, [sp, #56]
  4416d8:	str	xzr, [sp, #64]
  4416dc:	str	xzr, [sp, #72]
  4416e0:	str	xzr, [sp, #32]
  4416e4:	str	xzr, [sp, #40]
  4416e8:	str	xzr, [sp, #48]
  4416ec:	str	w8, [sp, #28]
  4416f0:	ldur	x0, [x29, #-16]
  4416f4:	mov	w1, w9
  4416f8:	str	x11, [sp, #16]
  4416fc:	bl	40abd0 <open64@plt>
  441700:	str	w0, [sp, #28]
  441704:	ldr	w8, [sp, #28]
  441708:	cmp	w8, #0x0
  44170c:	cset	w8, ge  // ge = tcont
  441710:	tbnz	w8, #0, 441720 <extract_info+0x80>
  441714:	mov	w8, #0x1                   	// #1
  441718:	str	w8, [sp, #24]
  44171c:	b	4418c8 <extract_info+0x228>
  441720:	ldr	w0, [sp, #28]
  441724:	mov	x1, #0x4540                	// #17728
  441728:	movk	x1, #0x8018, lsl #16
  44172c:	add	x2, sp, #0x38
  441730:	bl	40ac00 <ioctl@plt>
  441734:	cmp	w0, #0x0
  441738:	cset	w8, lt  // lt = tstop
  44173c:	tbnz	w8, #0, 441760 <extract_info+0xc0>
  441740:	ldr	w0, [sp, #28]
  441744:	mov	x1, #0x4541                	// #17729
  441748:	movk	x1, #0x8018, lsl #16
  44174c:	add	x2, sp, #0x20
  441750:	bl	40ac00 <ioctl@plt>
  441754:	cmp	w0, #0x0
  441758:	cset	w8, ge  // ge = tcont
  44175c:	tbnz	w8, #0, 44176c <extract_info+0xcc>
  441760:	mov	w8, #0x1                   	// #1
  441764:	str	w8, [sp, #24]
  441768:	b	4418c8 <extract_info+0x228>
  44176c:	ldr	w8, [sp, #76]
  441770:	cmp	w8, #0x0
  441774:	cset	w8, le
  441778:	tbnz	w8, #0, 44178c <extract_info+0xec>
  44177c:	ldr	w8, [sp, #52]
  441780:	cmp	w8, #0x0
  441784:	cset	w8, gt
  441788:	tbnz	w8, #0, 441798 <extract_info+0xf8>
  44178c:	mov	w8, #0x1                   	// #1
  441790:	str	w8, [sp, #24]
  441794:	b	4418c8 <extract_info+0x228>
  441798:	add	x0, sp, #0x38
  44179c:	bl	441904 <abs_size_mm>
  4417a0:	sub	x8, x29, #0x1d
  4417a4:	str	w0, [sp, #12]
  4417a8:	mov	x0, x8
  4417ac:	mov	x1, #0xc                   	// #12
  4417b0:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  4417b4:	add	x2, x2, #0xa3c
  4417b8:	ldr	w3, [sp, #12]
  4417bc:	bl	40b140 <snprintf@plt>
  4417c0:	mov	w1, w0
  4417c4:	sxtw	x8, w1
  4417c8:	cmp	x8, #0xc
  4417cc:	cset	w9, cc  // cc = lo, ul, last
  4417d0:	mov	w10, #0x1                   	// #1
  4417d4:	eor	w9, w9, #0x1
  4417d8:	eor	w9, w9, w10
  4417dc:	eor	w9, w9, w10
  4417e0:	and	w9, w9, #0x1
  4417e4:	mov	w1, w9
  4417e8:	sxtw	x8, w1
  4417ec:	cbz	x8, 441810 <extract_info+0x170>
  4417f0:	mov	w0, #0x1                   	// #1
  4417f4:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4417f8:	add	x1, x1, #0xa3f
  4417fc:	ldr	x2, [sp, #16]
  441800:	mov	w3, #0x40                  	// #64
  441804:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  441808:	add	x4, x4, #0xa64
  44180c:	bl	40a540 <log_assert_failed_realm@plt>
  441810:	add	x0, sp, #0x20
  441814:	bl	441904 <abs_size_mm>
  441818:	sub	x8, x29, #0x29
  44181c:	str	w0, [sp, #8]
  441820:	mov	x0, x8
  441824:	mov	x1, #0xc                   	// #12
  441828:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  44182c:	add	x2, x2, #0xa3c
  441830:	ldr	w3, [sp, #8]
  441834:	bl	40b140 <snprintf@plt>
  441838:	mov	w1, w0
  44183c:	sxtw	x8, w1
  441840:	cmp	x8, #0xc
  441844:	cset	w9, cc  // cc = lo, ul, last
  441848:	mov	w10, #0x1                   	// #1
  44184c:	eor	w9, w9, #0x1
  441850:	eor	w9, w9, w10
  441854:	eor	w9, w9, w10
  441858:	and	w9, w9, #0x1
  44185c:	mov	w1, w9
  441860:	sxtw	x8, w1
  441864:	cbz	x8, 441888 <extract_info+0x1e8>
  441868:	mov	w0, #0x1                   	// #1
  44186c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  441870:	add	x1, x1, #0xa98
  441874:	ldr	x2, [sp, #16]
  441878:	mov	w3, #0x41                  	// #65
  44187c:	adrp	x4, 469000 <on_inotify.__assert_in_set+0x5540>
  441880:	add	x4, x4, #0xa64
  441884:	bl	40a540 <log_assert_failed_realm@plt>
  441888:	ldur	x0, [x29, #-8]
  44188c:	ldurb	w8, [x29, #-17]
  441890:	and	w1, w8, #0x1
  441894:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  441898:	add	x2, x2, #0xabe
  44189c:	sub	x3, x29, #0x1d
  4418a0:	bl	43eae8 <udev_builtin_add_property>
  4418a4:	ldur	x9, [x29, #-8]
  4418a8:	ldurb	w8, [x29, #-17]
  4418ac:	mov	x0, x9
  4418b0:	and	w1, w8, #0x1
  4418b4:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  4418b8:	add	x2, x2, #0xad0
  4418bc:	sub	x3, x29, #0x29
  4418c0:	bl	43eae8 <udev_builtin_add_property>
  4418c4:	str	wzr, [sp, #24]
  4418c8:	add	x0, sp, #0x1c
  4418cc:	bl	4418dc <closep>
  4418d0:	ldp	x29, x30, [sp, #128]
  4418d4:	add	sp, sp, #0x90
  4418d8:	ret

00000000004418dc <closep>:
  4418dc:	sub	sp, sp, #0x20
  4418e0:	stp	x29, x30, [sp, #16]
  4418e4:	add	x29, sp, #0x10
  4418e8:	str	x0, [sp, #8]
  4418ec:	ldr	x8, [sp, #8]
  4418f0:	ldr	w0, [x8]
  4418f4:	bl	40a760 <safe_close@plt>
  4418f8:	ldp	x29, x30, [sp, #16]
  4418fc:	add	sp, sp, #0x20
  441900:	ret

0000000000441904 <abs_size_mm>:
  441904:	sub	sp, sp, #0x10
  441908:	str	x0, [sp, #8]
  44190c:	ldr	x8, [sp, #8]
  441910:	ldr	w9, [x8, #8]
  441914:	ldr	x8, [sp, #8]
  441918:	ldr	w10, [x8, #4]
  44191c:	subs	w9, w9, w10
  441920:	ldr	x8, [sp, #8]
  441924:	ldr	w10, [x8, #20]
  441928:	sdiv	w0, w9, w10
  44192c:	add	sp, sp, #0x10
  441930:	ret

0000000000441934 <builtin_keyboard>:
  441934:	stp	x29, x30, [sp, #-32]!
  441938:	str	x28, [sp, #16]
  44193c:	mov	x29, sp
  441940:	sub	sp, sp, #0x1, lsl #12
  441944:	sub	sp, sp, #0x1a0
  441948:	sub	x8, x29, #0x21
  44194c:	add	x9, sp, #0xd0
  441950:	mov	w10, #0xffffffff            	// #-1
  441954:	mov	w11, #0x1                   	// #1
  441958:	adrp	x12, 464000 <on_inotify.__assert_in_set+0x540>
  44195c:	add	x12, x12, #0xa46
  441960:	adrp	x13, 469000 <on_inotify.__assert_in_set+0x5540>
  441964:	add	x13, x13, #0xb0e
  441968:	add	x13, x13, #0x3
  44196c:	adrp	x14, 469000 <on_inotify.__assert_in_set+0x5540>
  441970:	add	x14, x14, #0xb32
  441974:	add	x15, sp, #0x168
  441978:	stur	x0, [x8, #17]
  44197c:	stur	w1, [x29, #-20]
  441980:	stur	x2, [x8, #1]
  441984:	and	w11, w3, w11
  441988:	strb	w11, [x8]
  44198c:	str	wzr, [sp, #376]
  441990:	str	w10, [sp, #372]
  441994:	str	w10, [sp, #340]
  441998:	ldur	x0, [x8, #17]
  44199c:	mov	x1, x15
  4419a0:	str	x8, [sp, #64]
  4419a4:	str	x9, [sp, #56]
  4419a8:	str	x12, [sp, #48]
  4419ac:	str	x13, [sp, #40]
  4419b0:	str	x14, [sp, #32]
  4419b4:	bl	40a930 <sd_device_get_devname@plt>
  4419b8:	str	w0, [sp, #336]
  4419bc:	ldr	w10, [sp, #336]
  4419c0:	cmp	w10, #0x0
  4419c4:	cset	w10, ge  // ge = tcont
  4419c8:	tbnz	w10, #0, 441aa4 <builtin_keyboard+0x170>
  4419cc:	mov	x8, xzr
  4419d0:	ldr	x9, [sp, #56]
  4419d4:	str	x8, [x9, #120]
  4419d8:	ldr	x8, [sp, #64]
  4419dc:	ldur	x10, [x8, #17]
  4419e0:	str	x10, [x9, #112]
  4419e4:	mov	w11, #0x3                   	// #3
  4419e8:	str	w11, [sp, #316]
  4419ec:	ldr	w11, [sp, #336]
  4419f0:	str	w11, [sp, #312]
  4419f4:	ldr	x10, [x9, #112]
  4419f8:	cbz	x10, 441a3c <builtin_keyboard+0x108>
  4419fc:	mov	w0, #0x1                   	// #1
  441a00:	bl	40a3f0 <log_get_max_level_realm@plt>
  441a04:	ldr	w8, [sp, #316]
  441a08:	cmp	w0, w8
  441a0c:	cset	w8, ge  // ge = tcont
  441a10:	mov	w9, #0x1                   	// #1
  441a14:	eor	w8, w8, #0x1
  441a18:	eor	w8, w8, w9
  441a1c:	and	w8, w8, #0x1
  441a20:	mov	w1, w8
  441a24:	sxtw	x10, w1
  441a28:	cbz	x10, 441a3c <builtin_keyboard+0x108>
  441a2c:	ldr	x8, [sp, #56]
  441a30:	ldr	x0, [x8, #112]
  441a34:	add	x1, sp, #0x148
  441a38:	bl	40a860 <sd_device_get_sysname@plt>
  441a3c:	ldr	w0, [sp, #316]
  441a40:	ldr	w1, [sp, #312]
  441a44:	ldr	x8, [sp, #56]
  441a48:	ldr	x9, [x8, #120]
  441a4c:	mov	x10, xzr
  441a50:	cmp	x9, #0x0
  441a54:	ldr	x9, [sp, #48]
  441a58:	csel	x5, x9, x10, ne  // ne = any
  441a5c:	ldr	x6, [x8, #120]
  441a60:	ldr	x2, [sp, #40]
  441a64:	mov	w3, #0xad                  	// #173
  441a68:	ldr	x4, [sp, #32]
  441a6c:	mov	x7, x10
  441a70:	mov	x11, sp
  441a74:	str	x10, [x11]
  441a78:	mov	x10, sp
  441a7c:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  441a80:	add	x11, x11, #0x121
  441a84:	str	x11, [x10, #8]
  441a88:	bl	40a870 <log_object_internal@plt>
  441a8c:	str	w0, [sp, #308]
  441a90:	ldr	w12, [sp, #308]
  441a94:	stur	w12, [x29, #-4]
  441a98:	mov	w12, #0x1                   	// #1
  441a9c:	str	w12, [sp, #304]
  441aa0:	b	442240 <builtin_keyboard+0x90c>
  441aa4:	ldr	x8, [sp, #64]
  441aa8:	ldur	x0, [x8, #17]
  441aac:	add	x1, sp, #0x158
  441ab0:	bl	40b4f0 <sd_device_get_property_first@plt>
  441ab4:	ldr	x8, [sp, #56]
  441ab8:	str	x0, [x8, #144]
  441abc:	ldr	x8, [sp, #56]
  441ac0:	ldr	x9, [x8, #144]
  441ac4:	cbz	x9, 442210 <builtin_keyboard+0x8dc>
  441ac8:	ldr	x8, [sp, #56]
  441acc:	ldr	x0, [x8, #144]
  441ad0:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  441ad4:	add	x1, x1, #0xb43
  441ad8:	bl	442288 <startswith>
  441adc:	cbz	x0, 441d90 <builtin_keyboard+0x45c>
  441ae0:	ldr	x8, [sp, #56]
  441ae4:	ldr	x9, [x8, #136]
  441ae8:	str	x9, [x8, #80]
  441aec:	ldr	x9, [x8, #144]
  441af0:	add	x0, x9, #0xd
  441af4:	add	x1, sp, #0x128
  441af8:	mov	w2, #0x10                  	// #16
  441afc:	bl	40b670 <strtoul@plt>
  441b00:	str	w0, [sp, #284]
  441b04:	ldr	x8, [sp, #56]
  441b08:	ldr	x9, [x8, #88]
  441b0c:	ldrb	w10, [x9]
  441b10:	cbz	w10, 441be4 <builtin_keyboard+0x2b0>
  441b14:	mov	x8, xzr
  441b18:	ldr	x9, [sp, #56]
  441b1c:	str	x8, [x9, #64]
  441b20:	ldr	x8, [sp, #64]
  441b24:	ldur	x10, [x8, #17]
  441b28:	str	x10, [x9, #56]
  441b2c:	mov	w11, #0x4                   	// #4
  441b30:	str	w11, [sp, #260]
  441b34:	str	wzr, [sp, #256]
  441b38:	ldr	x10, [x9, #56]
  441b3c:	cbz	x10, 441b80 <builtin_keyboard+0x24c>
  441b40:	mov	w0, #0x1                   	// #1
  441b44:	bl	40a3f0 <log_get_max_level_realm@plt>
  441b48:	ldr	w8, [sp, #260]
  441b4c:	cmp	w0, w8
  441b50:	cset	w8, ge  // ge = tcont
  441b54:	mov	w9, #0x1                   	// #1
  441b58:	eor	w8, w8, #0x1
  441b5c:	eor	w8, w8, w9
  441b60:	and	w8, w8, #0x1
  441b64:	mov	w1, w8
  441b68:	sxtw	x10, w1
  441b6c:	cbz	x10, 441b80 <builtin_keyboard+0x24c>
  441b70:	ldr	x8, [sp, #56]
  441b74:	ldr	x0, [x8, #56]
  441b78:	add	x1, sp, #0x110
  441b7c:	bl	40a860 <sd_device_get_sysname@plt>
  441b80:	ldr	w0, [sp, #260]
  441b84:	ldr	w1, [sp, #256]
  441b88:	ldr	x8, [sp, #56]
  441b8c:	ldr	x9, [x8, #64]
  441b90:	mov	x10, xzr
  441b94:	cmp	x9, #0x0
  441b98:	ldr	x9, [sp, #48]
  441b9c:	csel	x5, x9, x10, ne  // ne = any
  441ba0:	ldr	x6, [x8, #64]
  441ba4:	ldr	x11, [x8, #144]
  441ba8:	ldr	x2, [sp, #40]
  441bac:	mov	w3, #0xb9                  	// #185
  441bb0:	ldr	x4, [sp, #32]
  441bb4:	mov	x7, x10
  441bb8:	mov	x12, sp
  441bbc:	str	x10, [x12]
  441bc0:	mov	x10, sp
  441bc4:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  441bc8:	add	x12, x12, #0xb51
  441bcc:	str	x12, [x10, #8]
  441bd0:	mov	x10, sp
  441bd4:	str	x11, [x10, #16]
  441bd8:	bl	40a870 <log_object_internal@plt>
  441bdc:	str	w0, [sp, #252]
  441be0:	b	4421f4 <builtin_keyboard+0x8c0>
  441be4:	ldr	x8, [sp, #56]
  441be8:	ldr	x9, [x8, #80]
  441bec:	ldrb	w10, [x9]
  441bf0:	cmp	w10, #0x21
  441bf4:	b.ne	441c4c <builtin_keyboard+0x318>  // b.any
  441bf8:	ldr	x8, [sp, #56]
  441bfc:	ldr	x9, [x8, #80]
  441c00:	add	x9, x9, #0x1
  441c04:	str	x9, [x8, #80]
  441c08:	ldr	w10, [sp, #284]
  441c0c:	ldr	w11, [sp, #376]
  441c10:	mov	w9, w11
  441c14:	add	x12, sp, #0x17c
  441c18:	str	w10, [x12, x9, lsl #2]
  441c1c:	ldr	w10, [sp, #376]
  441c20:	mov	w9, w10
  441c24:	cmp	x9, #0x3ff
  441c28:	b.cs	441c38 <builtin_keyboard+0x304>  // b.hs, b.nlast
  441c2c:	ldr	w8, [sp, #376]
  441c30:	add	w8, w8, #0x1
  441c34:	str	w8, [sp, #376]
  441c38:	ldr	x8, [sp, #56]
  441c3c:	ldr	x9, [x8, #80]
  441c40:	ldrb	w10, [x9]
  441c44:	cbnz	w10, 441c4c <builtin_keyboard+0x318>
  441c48:	b	4421f4 <builtin_keyboard+0x8c0>
  441c4c:	ldr	w8, [sp, #372]
  441c50:	cmp	w8, #0x0
  441c54:	cset	w8, ge  // ge = tcont
  441c58:	tbnz	w8, #0, 441d70 <builtin_keyboard+0x43c>
  441c5c:	ldr	x8, [sp, #56]
  441c60:	ldr	x0, [x8, #152]
  441c64:	mov	w1, #0x902                 	// #2306
  441c68:	movk	w1, #0x8, lsl #16
  441c6c:	bl	40abd0 <open64@plt>
  441c70:	str	w0, [sp, #372]
  441c74:	ldr	w9, [sp, #372]
  441c78:	cmp	w9, #0x0
  441c7c:	cset	w9, ge  // ge = tcont
  441c80:	tbnz	w9, #0, 441d70 <builtin_keyboard+0x43c>
  441c84:	mov	x8, xzr
  441c88:	ldr	x9, [sp, #56]
  441c8c:	str	x8, [x9, #32]
  441c90:	ldr	x8, [sp, #64]
  441c94:	ldur	x10, [x8, #17]
  441c98:	str	x10, [x9, #24]
  441c9c:	mov	w11, #0x3                   	// #3
  441ca0:	str	w11, [sp, #228]
  441ca4:	bl	40a480 <__errno_location@plt>
  441ca8:	ldr	w11, [x0]
  441cac:	str	w11, [sp, #224]
  441cb0:	ldr	x8, [sp, #56]
  441cb4:	ldr	x9, [x8, #24]
  441cb8:	cbz	x9, 441cfc <builtin_keyboard+0x3c8>
  441cbc:	mov	w0, #0x1                   	// #1
  441cc0:	bl	40a3f0 <log_get_max_level_realm@plt>
  441cc4:	ldr	w8, [sp, #228]
  441cc8:	cmp	w0, w8
  441ccc:	cset	w8, ge  // ge = tcont
  441cd0:	mov	w9, #0x1                   	// #1
  441cd4:	eor	w8, w8, #0x1
  441cd8:	eor	w8, w8, w9
  441cdc:	and	w8, w8, #0x1
  441ce0:	mov	w1, w8
  441ce4:	sxtw	x10, w1
  441ce8:	cbz	x10, 441cfc <builtin_keyboard+0x3c8>
  441cec:	ldr	x8, [sp, #56]
  441cf0:	ldr	x0, [x8, #24]
  441cf4:	add	x1, sp, #0xf0
  441cf8:	bl	40a860 <sd_device_get_sysname@plt>
  441cfc:	ldr	w0, [sp, #228]
  441d00:	ldr	w1, [sp, #224]
  441d04:	ldr	x8, [sp, #56]
  441d08:	ldr	x9, [x8, #32]
  441d0c:	mov	x10, xzr
  441d10:	cmp	x9, #0x0
  441d14:	ldr	x9, [sp, #48]
  441d18:	csel	x5, x9, x10, ne  // ne = any
  441d1c:	ldr	x6, [x8, #32]
  441d20:	ldr	x11, [x8, #152]
  441d24:	ldr	x2, [sp, #40]
  441d28:	mov	w3, #0xcc                  	// #204
  441d2c:	ldr	x4, [sp, #32]
  441d30:	mov	x7, x10
  441d34:	mov	x12, sp
  441d38:	str	x10, [x12]
  441d3c:	mov	x10, sp
  441d40:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  441d44:	add	x12, x12, #0xb7f
  441d48:	str	x12, [x10, #8]
  441d4c:	mov	x10, sp
  441d50:	str	x11, [x10, #16]
  441d54:	bl	40a870 <log_object_internal@plt>
  441d58:	str	w0, [sp, #220]
  441d5c:	ldr	w13, [sp, #220]
  441d60:	stur	w13, [x29, #-4]
  441d64:	mov	w13, #0x1                   	// #1
  441d68:	str	w13, [sp, #304]
  441d6c:	b	442240 <builtin_keyboard+0x90c>
  441d70:	ldr	x8, [sp, #64]
  441d74:	ldur	x0, [x8, #17]
  441d78:	ldr	w1, [sp, #372]
  441d7c:	ldr	w2, [sp, #284]
  441d80:	ldr	x9, [sp, #56]
  441d84:	ldr	x3, [x9, #80]
  441d88:	bl	4422e8 <map_keycode>
  441d8c:	b	4421f4 <builtin_keyboard+0x8c0>
  441d90:	ldr	x8, [sp, #56]
  441d94:	ldr	x0, [x8, #144]
  441d98:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  441d9c:	add	x1, x1, #0xb9e
  441da0:	bl	442288 <startswith>
  441da4:	cbz	x0, 4421c8 <builtin_keyboard+0x894>
  441da8:	ldr	x8, [sp, #56]
  441dac:	ldr	x9, [x8, #144]
  441db0:	add	x0, x9, #0xa
  441db4:	add	x1, sp, #0x128
  441db8:	mov	w2, #0x10                  	// #16
  441dbc:	bl	40b670 <strtoul@plt>
  441dc0:	str	w0, [sp, #216]
  441dc4:	ldr	x8, [sp, #56]
  441dc8:	ldr	x9, [x8, #88]
  441dcc:	ldrb	w10, [x9]
  441dd0:	cbz	w10, 441ea0 <builtin_keyboard+0x56c>
  441dd4:	mov	x8, xzr
  441dd8:	ldr	x9, [sp, #56]
  441ddc:	str	x8, [x9]
  441de0:	ldr	x8, [sp, #64]
  441de4:	ldur	x10, [x8, #17]
  441de8:	str	x10, [sp, #200]
  441dec:	mov	w11, #0x4                   	// #4
  441df0:	str	w11, [sp, #196]
  441df4:	str	wzr, [sp, #192]
  441df8:	ldr	x10, [sp, #200]
  441dfc:	cbz	x10, 441e3c <builtin_keyboard+0x508>
  441e00:	mov	w0, #0x1                   	// #1
  441e04:	bl	40a3f0 <log_get_max_level_realm@plt>
  441e08:	ldr	w8, [sp, #196]
  441e0c:	cmp	w0, w8
  441e10:	cset	w8, ge  // ge = tcont
  441e14:	mov	w9, #0x1                   	// #1
  441e18:	eor	w8, w8, #0x1
  441e1c:	eor	w8, w8, w9
  441e20:	and	w8, w8, #0x1
  441e24:	mov	w1, w8
  441e28:	sxtw	x10, w1
  441e2c:	cbz	x10, 441e3c <builtin_keyboard+0x508>
  441e30:	ldr	x0, [sp, #200]
  441e34:	add	x1, sp, #0xd0
  441e38:	bl	40a860 <sd_device_get_sysname@plt>
  441e3c:	ldr	w0, [sp, #196]
  441e40:	ldr	w1, [sp, #192]
  441e44:	ldr	x8, [sp, #56]
  441e48:	ldr	x9, [x8]
  441e4c:	mov	x10, xzr
  441e50:	cmp	x9, #0x0
  441e54:	ldr	x9, [sp, #48]
  441e58:	csel	x5, x9, x10, ne  // ne = any
  441e5c:	ldr	x6, [x8]
  441e60:	ldr	x11, [x8, #144]
  441e64:	ldr	x2, [sp, #40]
  441e68:	mov	w3, #0xd6                  	// #214
  441e6c:	ldr	x4, [sp, #32]
  441e70:	mov	x7, x10
  441e74:	mov	x12, sp
  441e78:	str	x10, [x12]
  441e7c:	mov	x10, sp
  441e80:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  441e84:	add	x12, x12, #0xba9
  441e88:	str	x12, [x10, #8]
  441e8c:	mov	x10, sp
  441e90:	str	x11, [x10, #16]
  441e94:	bl	40a870 <log_object_internal@plt>
  441e98:	str	w0, [sp, #188]
  441e9c:	b	4421f4 <builtin_keyboard+0x8c0>
  441ea0:	ldr	w8, [sp, #372]
  441ea4:	cmp	w8, #0x0
  441ea8:	cset	w8, ge  // ge = tcont
  441eac:	tbnz	w8, #0, 441fb8 <builtin_keyboard+0x684>
  441eb0:	ldr	x8, [sp, #56]
  441eb4:	ldr	x0, [x8, #152]
  441eb8:	mov	w1, #0x902                 	// #2306
  441ebc:	movk	w1, #0x8, lsl #16
  441ec0:	bl	40abd0 <open64@plt>
  441ec4:	str	w0, [sp, #372]
  441ec8:	ldr	w9, [sp, #372]
  441ecc:	cmp	w9, #0x0
  441ed0:	cset	w9, ge  // ge = tcont
  441ed4:	tbnz	w9, #0, 441fb8 <builtin_keyboard+0x684>
  441ed8:	mov	x8, xzr
  441edc:	str	x8, [sp, #176]
  441ee0:	ldr	x8, [sp, #64]
  441ee4:	ldur	x9, [x8, #17]
  441ee8:	str	x9, [sp, #168]
  441eec:	mov	w10, #0x3                   	// #3
  441ef0:	str	w10, [sp, #164]
  441ef4:	bl	40a480 <__errno_location@plt>
  441ef8:	ldr	w10, [x0]
  441efc:	str	w10, [sp, #160]
  441f00:	ldr	x8, [sp, #168]
  441f04:	cbz	x8, 441f44 <builtin_keyboard+0x610>
  441f08:	mov	w0, #0x1                   	// #1
  441f0c:	bl	40a3f0 <log_get_max_level_realm@plt>
  441f10:	ldr	w8, [sp, #164]
  441f14:	cmp	w0, w8
  441f18:	cset	w8, ge  // ge = tcont
  441f1c:	mov	w9, #0x1                   	// #1
  441f20:	eor	w8, w8, #0x1
  441f24:	eor	w8, w8, w9
  441f28:	and	w8, w8, #0x1
  441f2c:	mov	w1, w8
  441f30:	sxtw	x10, w1
  441f34:	cbz	x10, 441f44 <builtin_keyboard+0x610>
  441f38:	ldr	x0, [sp, #168]
  441f3c:	add	x1, sp, #0xb0
  441f40:	bl	40a860 <sd_device_get_sysname@plt>
  441f44:	ldr	w0, [sp, #164]
  441f48:	ldr	w1, [sp, #160]
  441f4c:	ldr	x8, [sp, #176]
  441f50:	mov	x9, xzr
  441f54:	cmp	x8, #0x0
  441f58:	ldr	x8, [sp, #48]
  441f5c:	csel	x5, x8, x9, ne  // ne = any
  441f60:	ldr	x6, [sp, #176]
  441f64:	ldr	x10, [sp, #56]
  441f68:	ldr	x11, [x10, #152]
  441f6c:	ldr	x2, [sp, #40]
  441f70:	mov	w3, #0xdd                  	// #221
  441f74:	ldr	x4, [sp, #32]
  441f78:	mov	x7, x9
  441f7c:	mov	x12, sp
  441f80:	str	x9, [x12]
  441f84:	mov	x9, sp
  441f88:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  441f8c:	add	x12, x12, #0xb7f
  441f90:	str	x12, [x9, #8]
  441f94:	mov	x9, sp
  441f98:	str	x11, [x9, #16]
  441f9c:	bl	40a870 <log_object_internal@plt>
  441fa0:	str	w0, [sp, #156]
  441fa4:	ldr	w13, [sp, #156]
  441fa8:	stur	w13, [x29, #-4]
  441fac:	mov	w13, #0x1                   	// #1
  441fb0:	str	w13, [sp, #304]
  441fb4:	b	442240 <builtin_keyboard+0x90c>
  441fb8:	ldr	w8, [sp, #340]
  441fbc:	mov	w9, #0xffffffff            	// #-1
  441fc0:	cmp	w8, w9
  441fc4:	b.ne	44219c <builtin_keyboard+0x868>  // b.any
  441fc8:	ldr	w0, [sp, #372]
  441fcc:	mov	x1, #0x4520                	// #17696
  441fd0:	movk	x1, #0x8008, lsl #16
  441fd4:	add	x2, sp, #0x90
  441fd8:	bl	40ac00 <ioctl@plt>
  441fdc:	str	w0, [sp, #140]
  441fe0:	ldr	w8, [sp, #140]
  441fe4:	cmp	w8, #0x0
  441fe8:	cset	w8, ge  // ge = tcont
  441fec:	tbnz	w8, #0, 4420c0 <builtin_keyboard+0x78c>
  441ff0:	mov	x8, xzr
  441ff4:	str	x8, [sp, #128]
  441ff8:	ldr	x8, [sp, #64]
  441ffc:	ldur	x9, [x8, #17]
  442000:	str	x9, [sp, #120]
  442004:	mov	w10, #0x3                   	// #3
  442008:	str	w10, [sp, #116]
  44200c:	bl	40a480 <__errno_location@plt>
  442010:	ldr	w10, [x0]
  442014:	str	w10, [sp, #112]
  442018:	ldr	x8, [sp, #120]
  44201c:	cbz	x8, 44205c <builtin_keyboard+0x728>
  442020:	mov	w0, #0x1                   	// #1
  442024:	bl	40a3f0 <log_get_max_level_realm@plt>
  442028:	ldr	w8, [sp, #116]
  44202c:	cmp	w0, w8
  442030:	cset	w8, ge  // ge = tcont
  442034:	mov	w9, #0x1                   	// #1
  442038:	eor	w8, w8, #0x1
  44203c:	eor	w8, w8, w9
  442040:	and	w8, w8, #0x1
  442044:	mov	w1, w8
  442048:	sxtw	x10, w1
  44204c:	cbz	x10, 44205c <builtin_keyboard+0x728>
  442050:	ldr	x0, [sp, #120]
  442054:	add	x1, sp, #0x80
  442058:	bl	40a860 <sd_device_get_sysname@plt>
  44205c:	ldr	w0, [sp, #116]
  442060:	ldr	w1, [sp, #112]
  442064:	ldr	x8, [sp, #128]
  442068:	mov	x9, xzr
  44206c:	cmp	x8, #0x0
  442070:	ldr	x8, [sp, #48]
  442074:	csel	x5, x8, x9, ne  // ne = any
  442078:	ldr	x6, [sp, #128]
  44207c:	ldr	x2, [sp, #40]
  442080:	mov	w3, #0xe6                  	// #230
  442084:	ldr	x4, [sp, #32]
  442088:	mov	x7, x9
  44208c:	mov	x10, sp
  442090:	str	x9, [x10]
  442094:	mov	x9, sp
  442098:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  44209c:	add	x10, x10, #0xbd9
  4420a0:	str	x10, [x9, #8]
  4420a4:	bl	40a870 <log_object_internal@plt>
  4420a8:	str	w0, [sp, #108]
  4420ac:	ldr	w11, [sp, #108]
  4420b0:	stur	w11, [x29, #-4]
  4420b4:	mov	w11, #0x1                   	// #1
  4420b8:	str	w11, [sp, #304]
  4420bc:	b	442240 <builtin_keyboard+0x90c>
  4420c0:	ldr	x8, [sp, #144]
  4420c4:	tst	x8, #0x8
  4420c8:	cset	w9, ne  // ne = any
  4420cc:	mov	w10, #0x1                   	// #1
  4420d0:	eor	w9, w9, #0x1
  4420d4:	eor	w9, w9, w10
  4420d8:	and	w9, w9, #0x1
  4420dc:	str	w9, [sp, #340]
  4420e0:	ldr	w9, [sp, #340]
  4420e4:	cbnz	w9, 44219c <builtin_keyboard+0x868>
  4420e8:	mov	x8, xzr
  4420ec:	str	x8, [sp, #96]
  4420f0:	ldr	x8, [sp, #64]
  4420f4:	ldur	x9, [x8, #17]
  4420f8:	str	x9, [sp, #88]
  4420fc:	mov	w10, #0x4                   	// #4
  442100:	str	w10, [sp, #84]
  442104:	str	wzr, [sp, #80]
  442108:	ldr	x9, [sp, #88]
  44210c:	cbz	x9, 44214c <builtin_keyboard+0x818>
  442110:	mov	w0, #0x1                   	// #1
  442114:	bl	40a3f0 <log_get_max_level_realm@plt>
  442118:	ldr	w8, [sp, #84]
  44211c:	cmp	w0, w8
  442120:	cset	w8, ge  // ge = tcont
  442124:	mov	w9, #0x1                   	// #1
  442128:	eor	w8, w8, #0x1
  44212c:	eor	w8, w8, w9
  442130:	and	w8, w8, #0x1
  442134:	mov	w1, w8
  442138:	sxtw	x10, w1
  44213c:	cbz	x10, 44214c <builtin_keyboard+0x818>
  442140:	ldr	x0, [sp, #88]
  442144:	add	x1, sp, #0x60
  442148:	bl	40a860 <sd_device_get_sysname@plt>
  44214c:	ldr	w0, [sp, #84]
  442150:	ldr	w1, [sp, #80]
  442154:	ldr	x8, [sp, #96]
  442158:	mov	x9, xzr
  44215c:	cmp	x8, #0x0
  442160:	ldr	x8, [sp, #48]
  442164:	csel	x5, x8, x9, ne  // ne = any
  442168:	ldr	x6, [sp, #96]
  44216c:	ldr	x2, [sp, #40]
  442170:	mov	w3, #0xea                  	// #234
  442174:	ldr	x4, [sp, #32]
  442178:	mov	x7, x9
  44217c:	mov	x10, sp
  442180:	str	x9, [x10]
  442184:	mov	x9, sp
  442188:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  44218c:	add	x10, x10, #0xbf1
  442190:	str	x10, [x9, #8]
  442194:	bl	40a870 <log_object_internal@plt>
  442198:	str	w0, [sp, #76]
  44219c:	ldr	w8, [sp, #340]
  4421a0:	cbnz	w8, 4421a8 <builtin_keyboard+0x874>
  4421a4:	b	4421f4 <builtin_keyboard+0x8c0>
  4421a8:	ldr	x8, [sp, #64]
  4421ac:	ldur	x0, [x8, #17]
  4421b0:	ldr	w1, [sp, #372]
  4421b4:	ldr	w2, [sp, #216]
  4421b8:	ldr	x9, [sp, #56]
  4421bc:	ldr	x3, [x9, #136]
  4421c0:	bl	44268c <override_abs>
  4421c4:	b	4421f4 <builtin_keyboard+0x8c0>
  4421c8:	ldr	x8, [sp, #56]
  4421cc:	ldr	x0, [x8, #144]
  4421d0:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4421d4:	add	x1, x1, #0xc28
  4421d8:	bl	40aa20 <strcmp@plt>
  4421dc:	cbnz	w0, 4421f4 <builtin_keyboard+0x8c0>
  4421e0:	ldr	x8, [sp, #64]
  4421e4:	ldur	x0, [x8, #17]
  4421e8:	ldr	x9, [sp, #56]
  4421ec:	ldr	x1, [x9, #136]
  4421f0:	bl	442b68 <set_trackpoint_sensitivity>
  4421f4:	ldr	x8, [sp, #64]
  4421f8:	ldur	x0, [x8, #17]
  4421fc:	add	x1, sp, #0x158
  442200:	bl	40b500 <sd_device_get_property_next@plt>
  442204:	ldr	x8, [sp, #56]
  442208:	str	x0, [x8, #144]
  44220c:	b	441abc <builtin_keyboard+0x188>
  442210:	ldr	w8, [sp, #376]
  442214:	cmp	w8, #0x0
  442218:	cset	w8, ls  // ls = plast
  44221c:	tbnz	w8, #0, 442234 <builtin_keyboard+0x900>
  442220:	ldr	x8, [sp, #64]
  442224:	ldur	x0, [x8, #17]
  442228:	ldr	w2, [sp, #376]
  44222c:	add	x1, sp, #0x17c
  442230:	bl	4430a0 <install_force_release>
  442234:	stur	wzr, [x29, #-4]
  442238:	mov	w8, #0x1                   	// #1
  44223c:	str	w8, [sp, #304]
  442240:	add	x0, sp, #0x174
  442244:	bl	442260 <closep>
  442248:	ldur	w0, [x29, #-4]
  44224c:	add	sp, sp, #0x1, lsl #12
  442250:	add	sp, sp, #0x1a0
  442254:	ldr	x28, [sp, #16]
  442258:	ldp	x29, x30, [sp], #32
  44225c:	ret

0000000000442260 <closep>:
  442260:	sub	sp, sp, #0x20
  442264:	stp	x29, x30, [sp, #16]
  442268:	add	x29, sp, #0x10
  44226c:	str	x0, [sp, #8]
  442270:	ldr	x8, [sp, #8]
  442274:	ldr	w0, [x8]
  442278:	bl	40a760 <safe_close@plt>
  44227c:	ldp	x29, x30, [sp, #16]
  442280:	add	sp, sp, #0x20
  442284:	ret

0000000000442288 <startswith>:
  442288:	sub	sp, sp, #0x30
  44228c:	stp	x29, x30, [sp, #32]
  442290:	add	x29, sp, #0x20
  442294:	str	x0, [sp, #16]
  442298:	str	x1, [sp, #8]
  44229c:	ldr	x0, [sp, #8]
  4422a0:	bl	40a800 <strlen@plt>
  4422a4:	str	x0, [sp]
  4422a8:	ldr	x0, [sp, #16]
  4422ac:	ldr	x1, [sp, #8]
  4422b0:	ldr	x2, [sp]
  4422b4:	bl	40a810 <strncmp@plt>
  4422b8:	cbnz	w0, 4422d0 <startswith+0x48>
  4422bc:	ldr	x8, [sp, #16]
  4422c0:	ldr	x9, [sp]
  4422c4:	add	x8, x8, x9
  4422c8:	stur	x8, [x29, #-8]
  4422cc:	b	4422d8 <startswith+0x50>
  4422d0:	mov	x8, xzr
  4422d4:	stur	x8, [x29, #-8]
  4422d8:	ldur	x0, [x29, #-8]
  4422dc:	ldp	x29, x30, [sp, #32]
  4422e0:	add	sp, sp, #0x30
  4422e4:	ret

00000000004422e8 <map_keycode>:
  4422e8:	sub	sp, sp, #0x130
  4422ec:	stp	x29, x30, [sp, #272]
  4422f0:	str	x28, [sp, #288]
  4422f4:	add	x29, sp, #0x110
  4422f8:	sub	x8, x29, #0x10
  4422fc:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  442300:	add	x9, x9, #0xa46
  442304:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  442308:	add	x10, x10, #0xb0e
  44230c:	add	x10, x10, #0x3
  442310:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  442314:	add	x11, x11, #0xc42
  442318:	str	x0, [x8]
  44231c:	stur	w1, [x29, #-20]
  442320:	stur	w2, [x29, #-24]
  442324:	stur	x3, [x29, #-32]
  442328:	ldur	x0, [x29, #-32]
  44232c:	ldur	x12, [x29, #-32]
  442330:	str	x0, [sp, #104]
  442334:	mov	x0, x12
  442338:	str	x8, [sp, #96]
  44233c:	str	x9, [sp, #88]
  442340:	str	x10, [sp, #80]
  442344:	str	x11, [sp, #72]
  442348:	bl	40a800 <strlen@plt>
  44234c:	ldr	x8, [sp, #104]
  442350:	str	x0, [sp, #64]
  442354:	mov	x0, x8
  442358:	ldr	x1, [sp, #64]
  44235c:	bl	4435c8 <keyboard_lookup_key>
  442360:	stur	x0, [x29, #-56]
  442364:	ldur	x8, [x29, #-56]
  442368:	cbz	x8, 44237c <map_keycode+0x94>
  44236c:	ldur	x8, [x29, #-56]
  442370:	ldrh	w9, [x8, #8]
  442374:	stur	w9, [x29, #-60]
  442378:	b	442474 <map_keycode+0x18c>
  44237c:	ldur	x0, [x29, #-32]
  442380:	sub	x1, x29, #0x30
  442384:	mov	w8, wzr
  442388:	mov	w2, w8
  44238c:	bl	40b670 <strtoul@plt>
  442390:	stur	w0, [x29, #-60]
  442394:	ldur	x9, [x29, #-48]
  442398:	ldrb	w8, [x9]
  44239c:	cbz	w8, 442474 <map_keycode+0x18c>
  4423a0:	mov	x8, xzr
  4423a4:	stur	x8, [x29, #-72]
  4423a8:	ldr	x8, [sp, #96]
  4423ac:	ldr	x9, [x8]
  4423b0:	stur	x9, [x29, #-80]
  4423b4:	mov	w10, #0x3                   	// #3
  4423b8:	stur	w10, [x29, #-84]
  4423bc:	mov	w10, #0x16                  	// #22
  4423c0:	movk	w10, #0x4000, lsl #16
  4423c4:	stur	w10, [x29, #-88]
  4423c8:	ldur	x9, [x29, #-80]
  4423cc:	cbz	x9, 44240c <map_keycode+0x124>
  4423d0:	mov	w0, #0x1                   	// #1
  4423d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4423d8:	ldur	w8, [x29, #-84]
  4423dc:	cmp	w0, w8
  4423e0:	cset	w8, ge  // ge = tcont
  4423e4:	mov	w9, #0x1                   	// #1
  4423e8:	eor	w8, w8, #0x1
  4423ec:	eor	w8, w8, w9
  4423f0:	and	w8, w8, #0x1
  4423f4:	mov	w1, w8
  4423f8:	sxtw	x10, w1
  4423fc:	cbz	x10, 44240c <map_keycode+0x124>
  442400:	ldur	x0, [x29, #-80]
  442404:	sub	x1, x29, #0x48
  442408:	bl	40a860 <sd_device_get_sysname@plt>
  44240c:	ldur	w0, [x29, #-84]
  442410:	ldur	w1, [x29, #-88]
  442414:	ldur	x8, [x29, #-72]
  442418:	mov	x9, xzr
  44241c:	cmp	x8, #0x0
  442420:	ldr	x8, [sp, #88]
  442424:	csel	x5, x8, x9, ne  // ne = any
  442428:	ldur	x6, [x29, #-72]
  44242c:	ldur	x10, [x29, #-32]
  442430:	ldr	x2, [sp, #80]
  442434:	mov	w3, #0x4b                  	// #75
  442438:	ldr	x4, [sp, #72]
  44243c:	mov	x7, x9
  442440:	mov	x11, sp
  442444:	str	x9, [x11]
  442448:	mov	x9, sp
  44244c:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  442450:	add	x11, x11, #0xc4e
  442454:	str	x11, [x9, #8]
  442458:	mov	x9, sp
  44245c:	str	x10, [x9, #16]
  442460:	bl	40a870 <log_object_internal@plt>
  442464:	stur	w0, [x29, #-92]
  442468:	ldur	w12, [x29, #-92]
  44246c:	stur	w12, [x29, #-4]
  442470:	b	442678 <map_keycode+0x390>
  442474:	ldur	w8, [x29, #-24]
  442478:	stur	w8, [x29, #-40]
  44247c:	ldur	w8, [x29, #-60]
  442480:	stur	w8, [x29, #-36]
  442484:	mov	x9, xzr
  442488:	stur	x9, [x29, #-104]
  44248c:	ldr	x9, [sp, #96]
  442490:	ldr	x10, [x9]
  442494:	stur	x10, [x29, #-112]
  442498:	mov	w8, #0x7                   	// #7
  44249c:	stur	w8, [x29, #-116]
  4424a0:	stur	wzr, [x29, #-120]
  4424a4:	ldur	x10, [x29, #-112]
  4424a8:	cbz	x10, 4424e8 <map_keycode+0x200>
  4424ac:	mov	w0, #0x1                   	// #1
  4424b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4424b4:	ldur	w8, [x29, #-116]
  4424b8:	cmp	w0, w8
  4424bc:	cset	w8, ge  // ge = tcont
  4424c0:	mov	w9, #0x1                   	// #1
  4424c4:	eor	w8, w8, #0x1
  4424c8:	eor	w8, w8, w9
  4424cc:	and	w8, w8, #0x1
  4424d0:	mov	w1, w8
  4424d4:	sxtw	x10, w1
  4424d8:	cbz	x10, 4424e8 <map_keycode+0x200>
  4424dc:	ldur	x0, [x29, #-112]
  4424e0:	sub	x1, x29, #0x68
  4424e4:	bl	40a860 <sd_device_get_sysname@plt>
  4424e8:	ldur	w0, [x29, #-116]
  4424ec:	ldur	w1, [x29, #-120]
  4424f0:	ldur	x8, [x29, #-104]
  4424f4:	mov	x9, xzr
  4424f8:	cmp	x8, #0x0
  4424fc:	ldr	x8, [sp, #88]
  442500:	csel	x5, x8, x9, ne  // ne = any
  442504:	ldur	x6, [x29, #-104]
  442508:	sub	x2, x29, #0x28
  44250c:	ldur	w10, [x29, #-40]
  442510:	ldur	w11, [x29, #-40]
  442514:	ldur	w12, [x29, #-36]
  442518:	ldur	w13, [x29, #-36]
  44251c:	ldr	x14, [sp, #80]
  442520:	str	x2, [sp, #56]
  442524:	mov	x2, x14
  442528:	mov	w3, #0x52                  	// #82
  44252c:	ldr	x4, [sp, #72]
  442530:	mov	x7, x9
  442534:	mov	x15, sp
  442538:	str	x9, [x15]
  44253c:	mov	x9, sp
  442540:	adrp	x15, 469000 <on_inotify.__assert_in_set+0x5540>
  442544:	add	x15, x15, #0xc72
  442548:	str	x15, [x9, #8]
  44254c:	mov	x9, sp
  442550:	str	w10, [x9, #16]
  442554:	mov	x9, sp
  442558:	str	w11, [x9, #24]
  44255c:	mov	x9, sp
  442560:	str	w12, [x9, #32]
  442564:	mov	x9, sp
  442568:	str	w13, [x9, #40]
  44256c:	bl	40a870 <log_object_internal@plt>
  442570:	stur	w0, [x29, #-124]
  442574:	ldur	w0, [x29, #-20]
  442578:	mov	x1, #0x4504                	// #17668
  44257c:	movk	x1, #0x4008, lsl #16
  442580:	ldr	x2, [sp, #56]
  442584:	bl	40ac00 <ioctl@plt>
  442588:	cmp	w0, #0x0
  44258c:	cset	w10, ge  // ge = tcont
  442590:	tbnz	w10, #0, 442674 <map_keycode+0x38c>
  442594:	mov	x8, xzr
  442598:	str	x8, [sp, #136]
  44259c:	ldr	x8, [sp, #96]
  4425a0:	ldr	x9, [x8]
  4425a4:	str	x9, [sp, #128]
  4425a8:	mov	w10, #0x3                   	// #3
  4425ac:	str	w10, [sp, #124]
  4425b0:	bl	40a480 <__errno_location@plt>
  4425b4:	ldr	w10, [x0]
  4425b8:	str	w10, [sp, #120]
  4425bc:	ldr	x8, [sp, #128]
  4425c0:	cbz	x8, 442600 <map_keycode+0x318>
  4425c4:	mov	w0, #0x1                   	// #1
  4425c8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4425cc:	ldr	w8, [sp, #124]
  4425d0:	cmp	w0, w8
  4425d4:	cset	w8, ge  // ge = tcont
  4425d8:	mov	w9, #0x1                   	// #1
  4425dc:	eor	w8, w8, #0x1
  4425e0:	eor	w8, w8, w9
  4425e4:	and	w8, w8, #0x1
  4425e8:	mov	w1, w8
  4425ec:	sxtw	x10, w1
  4425f0:	cbz	x10, 442600 <map_keycode+0x318>
  4425f4:	ldr	x0, [sp, #128]
  4425f8:	add	x1, sp, #0x88
  4425fc:	bl	40a860 <sd_device_get_sysname@plt>
  442600:	ldr	w0, [sp, #124]
  442604:	ldr	w1, [sp, #120]
  442608:	ldr	x8, [sp, #136]
  44260c:	mov	x9, xzr
  442610:	cmp	x8, #0x0
  442614:	ldr	x8, [sp, #88]
  442618:	csel	x5, x8, x9, ne  // ne = any
  44261c:	ldr	x6, [sp, #136]
  442620:	ldur	w10, [x29, #-40]
  442624:	ldur	w11, [x29, #-36]
  442628:	ldr	x2, [sp, #80]
  44262c:	mov	w3, #0x55                  	// #85
  442630:	ldr	x4, [sp, #72]
  442634:	mov	x7, x9
  442638:	mov	x12, sp
  44263c:	str	x9, [x12]
  442640:	mov	x9, sp
  442644:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  442648:	add	x12, x12, #0xcae
  44264c:	str	x12, [x9, #8]
  442650:	mov	x9, sp
  442654:	str	w10, [x9, #16]
  442658:	mov	x9, sp
  44265c:	str	w11, [x9, #24]
  442660:	bl	40a870 <log_object_internal@plt>
  442664:	str	w0, [sp, #116]
  442668:	ldr	w10, [sp, #116]
  44266c:	stur	w10, [x29, #-4]
  442670:	b	442678 <map_keycode+0x390>
  442674:	stur	wzr, [x29, #-4]
  442678:	ldur	w0, [x29, #-4]
  44267c:	ldr	x28, [sp, #288]
  442680:	ldp	x29, x30, [sp, #272]
  442684:	add	sp, sp, #0x130
  442688:	ret

000000000044268c <override_abs>:
  44268c:	sub	sp, sp, #0x160
  442690:	stp	x29, x30, [sp, #320]
  442694:	str	x28, [sp, #336]
  442698:	add	x29, sp, #0x140
  44269c:	sub	x8, x29, #0x40
  4426a0:	mov	w9, #0x4500                	// #17664
  4426a4:	movk	w9, #0x8000, lsl #16
  4426a8:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4426ac:	add	x10, x10, #0xa46
  4426b0:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  4426b4:	add	x11, x11, #0xb0e
  4426b8:	add	x11, x11, #0x3
  4426bc:	adrp	x12, 46c000 <on_inotify.__assert_in_set+0x8540>
  4426c0:	add	x12, x12, #0x86d
  4426c4:	sub	x13, x29, #0x38
  4426c8:	str	x0, [x8, #48]
  4426cc:	stur	w1, [x29, #-20]
  4426d0:	stur	w2, [x29, #-24]
  4426d4:	str	x3, [x8, #32]
  4426d8:	ldur	w0, [x29, #-20]
  4426dc:	ldur	w14, [x29, #-24]
  4426e0:	add	w14, w14, #0x40
  4426e4:	orr	w9, w9, w14
  4426e8:	mov	w15, w9
  4426ec:	ubfx	x15, x15, #0, #32
  4426f0:	orr	x1, x15, #0x180000
  4426f4:	mov	x2, x13
  4426f8:	str	x8, [sp, #112]
  4426fc:	str	x10, [sp, #104]
  442700:	str	x11, [sp, #96]
  442704:	str	x12, [sp, #88]
  442708:	bl	40ac00 <ioctl@plt>
  44270c:	stur	w0, [x29, #-68]
  442710:	ldur	w9, [x29, #-68]
  442714:	cmp	w9, #0x0
  442718:	cset	w9, ge  // ge = tcont
  44271c:	tbnz	w9, #0, 4427e8 <override_abs+0x15c>
  442720:	mov	x8, xzr
  442724:	stur	x8, [x29, #-80]
  442728:	ldr	x8, [sp, #112]
  44272c:	ldr	x9, [x8, #48]
  442730:	stur	x9, [x29, #-88]
  442734:	mov	w10, #0x3                   	// #3
  442738:	stur	w10, [x29, #-92]
  44273c:	bl	40a480 <__errno_location@plt>
  442740:	ldr	w10, [x0]
  442744:	stur	w10, [x29, #-96]
  442748:	ldur	x8, [x29, #-88]
  44274c:	cbz	x8, 44278c <override_abs+0x100>
  442750:	mov	w0, #0x1                   	// #1
  442754:	bl	40a3f0 <log_get_max_level_realm@plt>
  442758:	ldur	w8, [x29, #-92]
  44275c:	cmp	w0, w8
  442760:	cset	w8, ge  // ge = tcont
  442764:	mov	w9, #0x1                   	// #1
  442768:	eor	w8, w8, #0x1
  44276c:	eor	w8, w8, w9
  442770:	and	w8, w8, #0x1
  442774:	mov	w1, w8
  442778:	sxtw	x10, w1
  44277c:	cbz	x10, 44278c <override_abs+0x100>
  442780:	ldur	x0, [x29, #-88]
  442784:	sub	x1, x29, #0x50
  442788:	bl	40a860 <sd_device_get_sysname@plt>
  44278c:	ldur	w0, [x29, #-92]
  442790:	ldur	w1, [x29, #-96]
  442794:	ldur	x8, [x29, #-80]
  442798:	mov	x9, xzr
  44279c:	cmp	x8, #0x0
  4427a0:	ldr	x8, [sp, #104]
  4427a4:	csel	x5, x8, x9, ne  // ne = any
  4427a8:	ldur	x6, [x29, #-80]
  4427ac:	ldr	x2, [sp, #96]
  4427b0:	mov	w3, #0x75                  	// #117
  4427b4:	ldr	x4, [sp, #88]
  4427b8:	mov	x7, x9
  4427bc:	mov	x10, sp
  4427c0:	str	x9, [x10]
  4427c4:	mov	x9, sp
  4427c8:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  4427cc:	add	x10, x10, #0x87a
  4427d0:	str	x10, [x9, #8]
  4427d4:	bl	40a870 <log_object_internal@plt>
  4427d8:	stur	w0, [x29, #-100]
  4427dc:	ldur	w11, [x29, #-100]
  4427e0:	stur	w11, [x29, #-4]
  4427e4:	b	442b54 <override_abs+0x4c8>
  4427e8:	ldr	x8, [sp, #112]
  4427ec:	ldr	x0, [x8, #32]
  4427f0:	sub	x9, x29, #0x38
  4427f4:	add	x1, x9, #0x4
  4427f8:	str	x9, [sp, #80]
  4427fc:	bl	44388c <parse_token>
  442800:	ldr	x8, [sp, #112]
  442804:	str	x0, [x8]
  442808:	ldr	x0, [x8]
  44280c:	ldr	x9, [sp, #80]
  442810:	add	x1, x9, #0x8
  442814:	bl	44388c <parse_token>
  442818:	ldr	x8, [sp, #112]
  44281c:	str	x0, [x8]
  442820:	ldr	x0, [x8]
  442824:	ldr	x9, [sp, #80]
  442828:	add	x1, x9, #0x14
  44282c:	bl	44388c <parse_token>
  442830:	ldr	x8, [sp, #112]
  442834:	str	x0, [x8]
  442838:	ldr	x0, [x8]
  44283c:	ldr	x9, [sp, #80]
  442840:	add	x1, x9, #0xc
  442844:	bl	44388c <parse_token>
  442848:	ldr	x8, [sp, #112]
  44284c:	str	x0, [x8]
  442850:	ldr	x0, [x8]
  442854:	ldr	x9, [sp, #80]
  442858:	add	x1, x9, #0x10
  44285c:	bl	44388c <parse_token>
  442860:	ldr	x8, [sp, #112]
  442864:	str	x0, [x8]
  442868:	ldr	x9, [x8]
  44286c:	cbnz	x9, 442940 <override_abs+0x2b4>
  442870:	mov	x8, xzr
  442874:	stur	x8, [x29, #-112]
  442878:	ldr	x8, [sp, #112]
  44287c:	ldr	x9, [x8, #48]
  442880:	stur	x9, [x29, #-120]
  442884:	mov	w10, #0x3                   	// #3
  442888:	stur	w10, [x29, #-124]
  44288c:	stur	wzr, [x29, #-128]
  442890:	ldur	x9, [x29, #-120]
  442894:	cbz	x9, 4428d4 <override_abs+0x248>
  442898:	mov	w0, #0x1                   	// #1
  44289c:	bl	40a3f0 <log_get_max_level_realm@plt>
  4428a0:	ldur	w8, [x29, #-124]
  4428a4:	cmp	w0, w8
  4428a8:	cset	w8, ge  // ge = tcont
  4428ac:	mov	w9, #0x1                   	// #1
  4428b0:	eor	w8, w8, #0x1
  4428b4:	eor	w8, w8, w9
  4428b8:	and	w8, w8, #0x1
  4428bc:	mov	w1, w8
  4428c0:	sxtw	x10, w1
  4428c4:	cbz	x10, 4428d4 <override_abs+0x248>
  4428c8:	ldur	x0, [x29, #-120]
  4428cc:	sub	x1, x29, #0x70
  4428d0:	bl	40a860 <sd_device_get_sysname@plt>
  4428d4:	ldur	w0, [x29, #-124]
  4428d8:	ldur	w1, [x29, #-128]
  4428dc:	ldur	x8, [x29, #-112]
  4428e0:	mov	x9, xzr
  4428e4:	cmp	x8, #0x0
  4428e8:	ldr	x8, [sp, #104]
  4428ec:	csel	x5, x8, x9, ne  // ne = any
  4428f0:	ldur	x6, [x29, #-112]
  4428f4:	ldr	x10, [sp, #112]
  4428f8:	ldr	x11, [x10, #32]
  4428fc:	ldr	x2, [sp, #96]
  442900:	mov	w3, #0x7d                  	// #125
  442904:	ldr	x4, [sp, #88]
  442908:	mov	x7, x9
  44290c:	mov	x12, sp
  442910:	str	x9, [x12]
  442914:	mov	x9, sp
  442918:	adrp	x12, 46c000 <on_inotify.__assert_in_set+0x8540>
  44291c:	add	x12, x12, #0x893
  442920:	str	x12, [x9, #8]
  442924:	mov	x9, sp
  442928:	str	x11, [x9, #16]
  44292c:	bl	40a870 <log_object_internal@plt>
  442930:	stur	w0, [x29, #-132]
  442934:	ldur	w13, [x29, #-132]
  442938:	stur	w13, [x29, #-4]
  44293c:	b	442b54 <override_abs+0x4c8>
  442940:	mov	x8, xzr
  442944:	stur	x8, [x29, #-144]
  442948:	ldr	x8, [sp, #112]
  44294c:	ldr	x9, [x8, #48]
  442950:	stur	x9, [x29, #-152]
  442954:	mov	w10, #0x7                   	// #7
  442958:	stur	w10, [x29, #-156]
  44295c:	str	wzr, [sp, #160]
  442960:	ldur	x9, [x29, #-152]
  442964:	cbz	x9, 4429a4 <override_abs+0x318>
  442968:	mov	w0, #0x1                   	// #1
  44296c:	bl	40a3f0 <log_get_max_level_realm@plt>
  442970:	ldur	w8, [x29, #-156]
  442974:	cmp	w0, w8
  442978:	cset	w8, ge  // ge = tcont
  44297c:	mov	w9, #0x1                   	// #1
  442980:	eor	w8, w8, #0x1
  442984:	eor	w8, w8, w9
  442988:	and	w8, w8, #0x1
  44298c:	mov	w1, w8
  442990:	sxtw	x10, w1
  442994:	cbz	x10, 4429a4 <override_abs+0x318>
  442998:	ldur	x0, [x29, #-152]
  44299c:	sub	x1, x29, #0x90
  4429a0:	bl	40a860 <sd_device_get_sysname@plt>
  4429a4:	ldur	w0, [x29, #-156]
  4429a8:	ldr	w1, [sp, #160]
  4429ac:	ldur	x8, [x29, #-144]
  4429b0:	mov	x9, xzr
  4429b4:	cmp	x8, #0x0
  4429b8:	ldr	x8, [sp, #104]
  4429bc:	csel	x5, x8, x9, ne  // ne = any
  4429c0:	ldur	x6, [x29, #-144]
  4429c4:	ldur	w10, [x29, #-24]
  4429c8:	sub	x2, x29, #0x38
  4429cc:	ldur	w11, [x29, #-52]
  4429d0:	ldur	w12, [x29, #-48]
  4429d4:	ldur	w13, [x29, #-36]
  4429d8:	ldur	w14, [x29, #-44]
  4429dc:	ldur	w15, [x29, #-40]
  4429e0:	ldr	x16, [sp, #96]
  4429e4:	str	x2, [sp, #72]
  4429e8:	mov	x2, x16
  4429ec:	mov	w3, #0x80                  	// #128
  4429f0:	ldr	x4, [sp, #88]
  4429f4:	mov	x7, x9
  4429f8:	mov	x17, sp
  4429fc:	str	x9, [x17]
  442a00:	mov	x9, sp
  442a04:	adrp	x17, 46c000 <on_inotify.__assert_in_set+0x8540>
  442a08:	add	x17, x17, #0x8b8
  442a0c:	str	x17, [x9, #8]
  442a10:	mov	x9, sp
  442a14:	str	w10, [x9, #16]
  442a18:	mov	x9, sp
  442a1c:	str	w11, [x9, #24]
  442a20:	mov	x9, sp
  442a24:	str	w12, [x9, #32]
  442a28:	mov	x9, sp
  442a2c:	str	w13, [x9, #40]
  442a30:	mov	x9, sp
  442a34:	str	w14, [x9, #48]
  442a38:	mov	x9, sp
  442a3c:	str	w15, [x9, #56]
  442a40:	bl	40a870 <log_object_internal@plt>
  442a44:	str	w0, [sp, #156]
  442a48:	ldur	w0, [x29, #-20]
  442a4c:	ldur	w10, [x29, #-24]
  442a50:	add	w10, w10, #0xc0
  442a54:	mov	w11, #0x4500                	// #17664
  442a58:	movk	w11, #0x4000, lsl #16
  442a5c:	orr	w10, w11, w10
  442a60:	mov	w8, w10
  442a64:	ubfx	x8, x8, #0, #32
  442a68:	orr	x1, x8, #0x180000
  442a6c:	ldr	x2, [sp, #72]
  442a70:	bl	40ac00 <ioctl@plt>
  442a74:	stur	w0, [x29, #-68]
  442a78:	ldur	w10, [x29, #-68]
  442a7c:	cmp	w10, #0x0
  442a80:	cset	w10, ge  // ge = tcont
  442a84:	tbnz	w10, #0, 442b50 <override_abs+0x4c4>
  442a88:	mov	x8, xzr
  442a8c:	str	x8, [sp, #144]
  442a90:	ldr	x8, [sp, #112]
  442a94:	ldr	x9, [x8, #48]
  442a98:	str	x9, [sp, #136]
  442a9c:	mov	w10, #0x3                   	// #3
  442aa0:	str	w10, [sp, #132]
  442aa4:	bl	40a480 <__errno_location@plt>
  442aa8:	ldr	w10, [x0]
  442aac:	str	w10, [sp, #128]
  442ab0:	ldr	x8, [sp, #136]
  442ab4:	cbz	x8, 442af4 <override_abs+0x468>
  442ab8:	mov	w0, #0x1                   	// #1
  442abc:	bl	40a3f0 <log_get_max_level_realm@plt>
  442ac0:	ldr	w8, [sp, #132]
  442ac4:	cmp	w0, w8
  442ac8:	cset	w8, ge  // ge = tcont
  442acc:	mov	w9, #0x1                   	// #1
  442ad0:	eor	w8, w8, #0x1
  442ad4:	eor	w8, w8, w9
  442ad8:	and	w8, w8, #0x1
  442adc:	mov	w1, w8
  442ae0:	sxtw	x10, w1
  442ae4:	cbz	x10, 442af4 <override_abs+0x468>
  442ae8:	ldr	x0, [sp, #136]
  442aec:	add	x1, sp, #0x90
  442af0:	bl	40a860 <sd_device_get_sysname@plt>
  442af4:	ldr	w0, [sp, #132]
  442af8:	ldr	w1, [sp, #128]
  442afc:	ldr	x8, [sp, #144]
  442b00:	mov	x9, xzr
  442b04:	cmp	x8, #0x0
  442b08:	ldr	x8, [sp, #104]
  442b0c:	csel	x5, x8, x9, ne  // ne = any
  442b10:	ldr	x6, [sp, #144]
  442b14:	ldr	x2, [sp, #96]
  442b18:	mov	w3, #0x83                  	// #131
  442b1c:	ldr	x4, [sp, #88]
  442b20:	mov	x7, x9
  442b24:	mov	x10, sp
  442b28:	str	x9, [x10]
  442b2c:	mov	x9, sp
  442b30:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  442b34:	add	x10, x10, #0x8e4
  442b38:	str	x10, [x9, #8]
  442b3c:	bl	40a870 <log_object_internal@plt>
  442b40:	str	w0, [sp, #124]
  442b44:	ldr	w11, [sp, #124]
  442b48:	stur	w11, [x29, #-4]
  442b4c:	b	442b54 <override_abs+0x4c8>
  442b50:	stur	wzr, [x29, #-4]
  442b54:	ldur	w0, [x29, #-4]
  442b58:	ldr	x28, [sp, #336]
  442b5c:	ldp	x29, x30, [sp, #320]
  442b60:	add	sp, sp, #0x160
  442b64:	ret

0000000000442b68 <set_trackpoint_sensitivity>:
  442b68:	sub	sp, sp, #0x120
  442b6c:	stp	x29, x30, [sp, #256]
  442b70:	str	x28, [sp, #272]
  442b74:	add	x29, sp, #0x100
  442b78:	sub	x8, x29, #0x20
  442b7c:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  442b80:	add	x9, x9, #0xa46
  442b84:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  442b88:	add	x10, x10, #0xb0e
  442b8c:	add	x10, x10, #0x3
  442b90:	adrp	x11, 46c000 <on_inotify.__assert_in_set+0x8540>
  442b94:	add	x11, x11, #0x93d
  442b98:	adrp	x12, 46c000 <on_inotify.__assert_in_set+0x8540>
  442b9c:	add	x12, x12, #0x8fd
  442ba0:	str	x0, [x8, #16]
  442ba4:	str	x1, [x8, #8]
  442ba8:	str	x8, [sp, #64]
  442bac:	str	x9, [sp, #56]
  442bb0:	str	x10, [sp, #48]
  442bb4:	str	x11, [sp, #40]
  442bb8:	str	x12, [sp, #32]
  442bbc:	ldr	x8, [sp, #64]
  442bc0:	ldr	x9, [x8, #16]
  442bc4:	cmp	x9, #0x0
  442bc8:	cset	w10, ne  // ne = any
  442bcc:	mov	w11, #0x1                   	// #1
  442bd0:	eor	w10, w10, #0x1
  442bd4:	eor	w10, w10, w11
  442bd8:	eor	w10, w10, w11
  442bdc:	and	w10, w10, #0x1
  442be0:	mov	w0, w10
  442be4:	sxtw	x9, w0
  442be8:	cbz	x9, 442c08 <set_trackpoint_sensitivity+0xa0>
  442bec:	mov	w0, #0x1                   	// #1
  442bf0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  442bf4:	add	x1, x1, #0xee1
  442bf8:	ldr	x2, [sp, #48]
  442bfc:	mov	w3, #0x8d                  	// #141
  442c00:	ldr	x4, [sp, #32]
  442c04:	bl	40a540 <log_assert_failed_realm@plt>
  442c08:	ldr	x8, [sp, #64]
  442c0c:	ldr	x9, [x8, #8]
  442c10:	cmp	x9, #0x0
  442c14:	cset	w10, ne  // ne = any
  442c18:	mov	w11, #0x1                   	// #1
  442c1c:	eor	w10, w10, #0x1
  442c20:	eor	w10, w10, w11
  442c24:	eor	w10, w10, w11
  442c28:	and	w10, w10, #0x1
  442c2c:	mov	w0, w10
  442c30:	sxtw	x9, w0
  442c34:	cbz	x9, 442c54 <set_trackpoint_sensitivity+0xec>
  442c38:	mov	w0, #0x1                   	// #1
  442c3c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  442c40:	add	x1, x1, #0x336
  442c44:	ldr	x2, [sp, #48]
  442c48:	mov	w3, #0x8e                  	// #142
  442c4c:	ldr	x4, [sp, #32]
  442c50:	bl	40a540 <log_assert_failed_realm@plt>
  442c54:	ldr	x8, [sp, #64]
  442c58:	ldr	x0, [x8, #16]
  442c5c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  442c60:	add	x1, x1, #0x937
  442c64:	mov	x9, xzr
  442c68:	mov	x2, x9
  442c6c:	sub	x3, x29, #0x20
  442c70:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  442c74:	stur	w0, [x29, #-48]
  442c78:	ldur	w10, [x29, #-48]
  442c7c:	cmp	w10, #0x0
  442c80:	cset	w10, ge  // ge = tcont
  442c84:	tbnz	w10, #0, 442d4c <set_trackpoint_sensitivity+0x1e4>
  442c88:	mov	x8, xzr
  442c8c:	stur	x8, [x29, #-64]
  442c90:	ldr	x8, [sp, #64]
  442c94:	ldr	x9, [x8, #16]
  442c98:	stur	x9, [x29, #-72]
  442c9c:	mov	w10, #0x3                   	// #3
  442ca0:	stur	w10, [x29, #-76]
  442ca4:	ldur	w10, [x29, #-48]
  442ca8:	stur	w10, [x29, #-80]
  442cac:	ldur	x9, [x29, #-72]
  442cb0:	cbz	x9, 442cf0 <set_trackpoint_sensitivity+0x188>
  442cb4:	mov	w0, #0x1                   	// #1
  442cb8:	bl	40a3f0 <log_get_max_level_realm@plt>
  442cbc:	ldur	w8, [x29, #-76]
  442cc0:	cmp	w0, w8
  442cc4:	cset	w8, ge  // ge = tcont
  442cc8:	mov	w9, #0x1                   	// #1
  442ccc:	eor	w8, w8, #0x1
  442cd0:	eor	w8, w8, w9
  442cd4:	and	w8, w8, #0x1
  442cd8:	mov	w1, w8
  442cdc:	sxtw	x10, w1
  442ce0:	cbz	x10, 442cf0 <set_trackpoint_sensitivity+0x188>
  442ce4:	ldur	x0, [x29, #-72]
  442ce8:	sub	x1, x29, #0x40
  442cec:	bl	40a860 <sd_device_get_sysname@plt>
  442cf0:	ldur	w0, [x29, #-76]
  442cf4:	ldur	w1, [x29, #-80]
  442cf8:	ldur	x8, [x29, #-64]
  442cfc:	mov	x9, xzr
  442d00:	cmp	x8, #0x0
  442d04:	ldr	x8, [sp, #56]
  442d08:	csel	x5, x8, x9, ne  // ne = any
  442d0c:	ldur	x6, [x29, #-64]
  442d10:	ldr	x2, [sp, #48]
  442d14:	mov	w3, #0x93                  	// #147
  442d18:	ldr	x4, [sp, #40]
  442d1c:	mov	x7, x9
  442d20:	mov	x10, sp
  442d24:	str	x9, [x10]
  442d28:	mov	x9, sp
  442d2c:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  442d30:	add	x10, x10, #0x958
  442d34:	str	x10, [x9, #8]
  442d38:	bl	40a870 <log_object_internal@plt>
  442d3c:	stur	w0, [x29, #-84]
  442d40:	ldur	w11, [x29, #-84]
  442d44:	stur	w11, [x29, #-4]
  442d48:	b	44308c <set_trackpoint_sensitivity+0x524>
  442d4c:	ldr	x8, [sp, #64]
  442d50:	ldr	x0, [x8, #8]
  442d54:	sub	x1, x29, #0x34
  442d58:	bl	40b310 <safe_atoi@plt>
  442d5c:	stur	w0, [x29, #-48]
  442d60:	ldur	w9, [x29, #-48]
  442d64:	cmp	w9, #0x0
  442d68:	cset	w9, ge  // ge = tcont
  442d6c:	tbnz	w9, #0, 442e44 <set_trackpoint_sensitivity+0x2dc>
  442d70:	mov	x8, xzr
  442d74:	stur	x8, [x29, #-96]
  442d78:	ldr	x8, [sp, #64]
  442d7c:	ldr	x9, [x8, #16]
  442d80:	stur	x9, [x29, #-104]
  442d84:	mov	w10, #0x3                   	// #3
  442d88:	stur	w10, [x29, #-108]
  442d8c:	ldur	w10, [x29, #-48]
  442d90:	stur	w10, [x29, #-112]
  442d94:	ldur	x9, [x29, #-104]
  442d98:	cbz	x9, 442dd8 <set_trackpoint_sensitivity+0x270>
  442d9c:	mov	w0, #0x1                   	// #1
  442da0:	bl	40a3f0 <log_get_max_level_realm@plt>
  442da4:	ldur	w8, [x29, #-108]
  442da8:	cmp	w0, w8
  442dac:	cset	w8, ge  // ge = tcont
  442db0:	mov	w9, #0x1                   	// #1
  442db4:	eor	w8, w8, #0x1
  442db8:	eor	w8, w8, w9
  442dbc:	and	w8, w8, #0x1
  442dc0:	mov	w1, w8
  442dc4:	sxtw	x10, w1
  442dc8:	cbz	x10, 442dd8 <set_trackpoint_sensitivity+0x270>
  442dcc:	ldur	x0, [x29, #-104]
  442dd0:	sub	x1, x29, #0x60
  442dd4:	bl	40a860 <sd_device_get_sysname@plt>
  442dd8:	ldur	w0, [x29, #-108]
  442ddc:	ldur	w1, [x29, #-112]
  442de0:	ldur	x8, [x29, #-96]
  442de4:	mov	x9, xzr
  442de8:	cmp	x8, #0x0
  442dec:	ldr	x8, [sp, #56]
  442df0:	csel	x5, x8, x9, ne  // ne = any
  442df4:	ldur	x6, [x29, #-96]
  442df8:	ldr	x10, [sp, #64]
  442dfc:	ldr	x11, [x10, #8]
  442e00:	ldr	x2, [sp, #48]
  442e04:	mov	w3, #0x97                  	// #151
  442e08:	ldr	x4, [sp, #40]
  442e0c:	mov	x7, x9
  442e10:	mov	x12, sp
  442e14:	str	x9, [x12]
  442e18:	mov	x9, sp
  442e1c:	adrp	x12, 46c000 <on_inotify.__assert_in_set+0x8540>
  442e20:	add	x12, x12, #0x977
  442e24:	str	x12, [x9, #8]
  442e28:	mov	x9, sp
  442e2c:	str	x11, [x9, #16]
  442e30:	bl	40a870 <log_object_internal@plt>
  442e34:	stur	w0, [x29, #-116]
  442e38:	ldur	w13, [x29, #-116]
  442e3c:	stur	w13, [x29, #-4]
  442e40:	b	44308c <set_trackpoint_sensitivity+0x524>
  442e44:	ldur	w8, [x29, #-52]
  442e48:	cmp	w8, #0x0
  442e4c:	cset	w8, lt  // lt = tstop
  442e50:	tbnz	w8, #0, 442e60 <set_trackpoint_sensitivity+0x2f8>
  442e54:	ldur	w8, [x29, #-52]
  442e58:	cmp	w8, #0xff
  442e5c:	b.le	442f34 <set_trackpoint_sensitivity+0x3cc>
  442e60:	mov	x8, xzr
  442e64:	str	x8, [sp, #128]
  442e68:	ldr	x8, [sp, #64]
  442e6c:	ldr	x9, [x8, #16]
  442e70:	str	x9, [sp, #120]
  442e74:	mov	w10, #0x3                   	// #3
  442e78:	str	w10, [sp, #116]
  442e7c:	mov	w10, #0x22                  	// #34
  442e80:	movk	w10, #0x4000, lsl #16
  442e84:	str	w10, [sp, #112]
  442e88:	ldr	x9, [sp, #120]
  442e8c:	cbz	x9, 442ecc <set_trackpoint_sensitivity+0x364>
  442e90:	mov	w0, #0x1                   	// #1
  442e94:	bl	40a3f0 <log_get_max_level_realm@plt>
  442e98:	ldr	w8, [sp, #116]
  442e9c:	cmp	w0, w8
  442ea0:	cset	w8, ge  // ge = tcont
  442ea4:	mov	w9, #0x1                   	// #1
  442ea8:	eor	w8, w8, #0x1
  442eac:	eor	w8, w8, w9
  442eb0:	and	w8, w8, #0x1
  442eb4:	mov	w1, w8
  442eb8:	sxtw	x10, w1
  442ebc:	cbz	x10, 442ecc <set_trackpoint_sensitivity+0x364>
  442ec0:	ldr	x0, [sp, #120]
  442ec4:	add	x1, sp, #0x80
  442ec8:	bl	40a860 <sd_device_get_sysname@plt>
  442ecc:	ldr	w0, [sp, #116]
  442ed0:	ldr	w1, [sp, #112]
  442ed4:	ldr	x8, [sp, #128]
  442ed8:	mov	x9, xzr
  442edc:	cmp	x8, #0x0
  442ee0:	ldr	x8, [sp, #56]
  442ee4:	csel	x5, x8, x9, ne  // ne = any
  442ee8:	ldr	x6, [sp, #128]
  442eec:	ldur	w10, [x29, #-52]
  442ef0:	ldr	x2, [sp, #48]
  442ef4:	mov	w3, #0x99                  	// #153
  442ef8:	ldr	x4, [sp, #40]
  442efc:	mov	x7, x9
  442f00:	mov	x11, sp
  442f04:	str	x9, [x11]
  442f08:	mov	x9, sp
  442f0c:	adrp	x11, 46c000 <on_inotify.__assert_in_set+0x8540>
  442f10:	add	x11, x11, #0x9aa
  442f14:	str	x11, [x9, #8]
  442f18:	mov	x9, sp
  442f1c:	str	w10, [x9, #16]
  442f20:	bl	40a870 <log_object_internal@plt>
  442f24:	str	w0, [sp, #108]
  442f28:	ldr	w10, [sp, #108]
  442f2c:	stur	w10, [x29, #-4]
  442f30:	b	44308c <set_trackpoint_sensitivity+0x524>
  442f34:	ldur	w3, [x29, #-52]
  442f38:	sub	x0, x29, #0x2c
  442f3c:	mov	x1, #0xc                   	// #12
  442f40:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  442f44:	add	x2, x2, #0xa3c
  442f48:	bl	40b140 <snprintf@plt>
  442f4c:	mov	w1, w0
  442f50:	sxtw	x8, w1
  442f54:	cmp	x8, #0xc
  442f58:	cset	w9, cc  // cc = lo, ul, last
  442f5c:	mov	w10, #0x1                   	// #1
  442f60:	eor	w9, w9, #0x1
  442f64:	eor	w9, w9, w10
  442f68:	eor	w9, w9, w10
  442f6c:	and	w9, w9, #0x1
  442f70:	mov	w1, w9
  442f74:	sxtw	x8, w1
  442f78:	cbz	x8, 442f98 <set_trackpoint_sensitivity+0x430>
  442f7c:	mov	w0, #0x1                   	// #1
  442f80:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  442f84:	add	x1, x1, #0x9de
  442f88:	ldr	x2, [sp, #48]
  442f8c:	mov	w3, #0x9b                  	// #155
  442f90:	ldr	x4, [sp, #32]
  442f94:	bl	40a540 <log_assert_failed_realm@plt>
  442f98:	ldr	x8, [sp, #64]
  442f9c:	ldr	x0, [x8]
  442fa0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  442fa4:	add	x1, x1, #0xa03
  442fa8:	sub	x2, x29, #0x2c
  442fac:	bl	40b680 <sd_device_set_sysattr_value@plt>
  442fb0:	stur	w0, [x29, #-48]
  442fb4:	ldur	w9, [x29, #-48]
  442fb8:	cmp	w9, #0x0
  442fbc:	cset	w9, ge  // ge = tcont
  442fc0:	tbnz	w9, #0, 443088 <set_trackpoint_sensitivity+0x520>
  442fc4:	mov	x8, xzr
  442fc8:	str	x8, [sp, #96]
  442fcc:	ldr	x8, [sp, #64]
  442fd0:	ldr	x9, [x8, #16]
  442fd4:	str	x9, [sp, #88]
  442fd8:	mov	w10, #0x3                   	// #3
  442fdc:	str	w10, [sp, #84]
  442fe0:	ldur	w10, [x29, #-48]
  442fe4:	str	w10, [sp, #80]
  442fe8:	ldr	x9, [sp, #88]
  442fec:	cbz	x9, 44302c <set_trackpoint_sensitivity+0x4c4>
  442ff0:	mov	w0, #0x1                   	// #1
  442ff4:	bl	40a3f0 <log_get_max_level_realm@plt>
  442ff8:	ldr	w8, [sp, #84]
  442ffc:	cmp	w0, w8
  443000:	cset	w8, ge  // ge = tcont
  443004:	mov	w9, #0x1                   	// #1
  443008:	eor	w8, w8, #0x1
  44300c:	eor	w8, w8, w9
  443010:	and	w8, w8, #0x1
  443014:	mov	w1, w8
  443018:	sxtw	x10, w1
  44301c:	cbz	x10, 44302c <set_trackpoint_sensitivity+0x4c4>
  443020:	ldr	x0, [sp, #88]
  443024:	add	x1, sp, #0x60
  443028:	bl	40a860 <sd_device_get_sysname@plt>
  44302c:	ldr	w0, [sp, #84]
  443030:	ldr	w1, [sp, #80]
  443034:	ldr	x8, [sp, #96]
  443038:	mov	x9, xzr
  44303c:	cmp	x8, #0x0
  443040:	ldr	x8, [sp, #56]
  443044:	csel	x5, x8, x9, ne  // ne = any
  443048:	ldr	x6, [sp, #96]
  44304c:	ldr	x2, [sp, #48]
  443050:	mov	w3, #0x9f                  	// #159
  443054:	ldr	x4, [sp, #40]
  443058:	mov	x7, x9
  44305c:	mov	x10, sp
  443060:	str	x9, [x10]
  443064:	mov	x9, sp
  443068:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  44306c:	add	x10, x10, #0xa0f
  443070:	str	x10, [x9, #8]
  443074:	bl	40a870 <log_object_internal@plt>
  443078:	str	w0, [sp, #76]
  44307c:	ldr	w11, [sp, #76]
  443080:	stur	w11, [x29, #-4]
  443084:	b	44308c <set_trackpoint_sensitivity+0x524>
  443088:	stur	wzr, [x29, #-4]
  44308c:	ldur	w0, [x29, #-4]
  443090:	ldr	x28, [sp, #272]
  443094:	ldp	x29, x30, [sp, #256]
  443098:	add	sp, sp, #0x120
  44309c:	ret

00000000004430a0 <install_force_release>:
  4430a0:	stp	x29, x30, [sp, #-32]!
  4430a4:	str	x28, [sp, #16]
  4430a8:	mov	x29, sp
  4430ac:	sub	sp, sp, #0x1, lsl #12
  4430b0:	sub	sp, sp, #0x110
  4430b4:	add	x8, sp, #0xd0
  4430b8:	adrp	x9, 464000 <on_inotify.__assert_in_set+0x540>
  4430bc:	add	x9, x9, #0xa46
  4430c0:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  4430c4:	add	x10, x10, #0xb0e
  4430c8:	add	x10, x10, #0x3
  4430cc:	adrp	x11, 46c000 <on_inotify.__assert_in_set+0x8540>
  4430d0:	add	x11, x11, #0xa8e
  4430d4:	str	x0, [x8, #4144]
  4430d8:	str	x1, [x8, #4136]
  4430dc:	stur	w2, [x29, #-28]
  4430e0:	str	x8, [sp, #64]
  4430e4:	str	x9, [sp, #56]
  4430e8:	str	x10, [sp, #48]
  4430ec:	str	x11, [sp, #40]
  4430f0:	ldr	x8, [sp, #64]
  4430f4:	ldr	x9, [x8, #4144]
  4430f8:	cmp	x9, #0x0
  4430fc:	cset	w10, ne  // ne = any
  443100:	mov	w11, #0x1                   	// #1
  443104:	eor	w10, w10, #0x1
  443108:	eor	w10, w10, w11
  44310c:	eor	w10, w10, w11
  443110:	and	w10, w10, #0x1
  443114:	mov	w0, w10
  443118:	sxtw	x9, w0
  44311c:	cbz	x9, 443140 <install_force_release+0xa0>
  443120:	mov	w0, #0x1                   	// #1
  443124:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  443128:	add	x1, x1, #0xee1
  44312c:	ldr	x2, [sp, #48]
  443130:	mov	w3, #0x1d                  	// #29
  443134:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  443138:	add	x4, x4, #0xa3b
  44313c:	bl	40a540 <log_assert_failed_realm@plt>
  443140:	ldr	x8, [sp, #64]
  443144:	ldr	x9, [x8, #4136]
  443148:	cmp	x9, #0x0
  44314c:	cset	w10, ne  // ne = any
  443150:	mov	w11, #0x1                   	// #1
  443154:	eor	w10, w10, #0x1
  443158:	eor	w10, w10, w11
  44315c:	eor	w10, w10, w11
  443160:	and	w10, w10, #0x1
  443164:	mov	w0, w10
  443168:	sxtw	x9, w0
  44316c:	cbz	x9, 443190 <install_force_release+0xf0>
  443170:	mov	w0, #0x1                   	// #1
  443174:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  443178:	add	x1, x1, #0xa86
  44317c:	ldr	x2, [sp, #48]
  443180:	mov	w3, #0x1e                  	// #30
  443184:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  443188:	add	x4, x4, #0xa3b
  44318c:	bl	40a540 <log_assert_failed_realm@plt>
  443190:	ldr	x8, [sp, #64]
  443194:	ldr	x0, [x8, #4144]
  443198:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44319c:	add	x1, x1, #0x937
  4431a0:	mov	x9, xzr
  4431a4:	mov	x2, x9
  4431a8:	sub	x3, x29, #0x28
  4431ac:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  4431b0:	str	w0, [sp, #200]
  4431b4:	ldr	w10, [sp, #200]
  4431b8:	cmp	w10, #0x0
  4431bc:	cset	w10, ge  // ge = tcont
  4431c0:	tbnz	w10, #0, 443288 <install_force_release+0x1e8>
  4431c4:	mov	x8, xzr
  4431c8:	str	x8, [sp, #192]
  4431cc:	ldr	x8, [sp, #64]
  4431d0:	ldr	x9, [x8, #4144]
  4431d4:	str	x9, [sp, #184]
  4431d8:	mov	w10, #0x3                   	// #3
  4431dc:	str	w10, [sp, #180]
  4431e0:	ldr	w10, [sp, #200]
  4431e4:	str	w10, [sp, #176]
  4431e8:	ldr	x9, [sp, #184]
  4431ec:	cbz	x9, 44322c <install_force_release+0x18c>
  4431f0:	mov	w0, #0x1                   	// #1
  4431f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4431f8:	ldr	w8, [sp, #180]
  4431fc:	cmp	w0, w8
  443200:	cset	w8, ge  // ge = tcont
  443204:	mov	w9, #0x1                   	// #1
  443208:	eor	w8, w8, #0x1
  44320c:	eor	w8, w8, w9
  443210:	and	w8, w8, #0x1
  443214:	mov	w1, w8
  443218:	sxtw	x10, w1
  44321c:	cbz	x10, 44322c <install_force_release+0x18c>
  443220:	ldr	x0, [sp, #184]
  443224:	add	x1, sp, #0xc0
  443228:	bl	40a860 <sd_device_get_sysname@plt>
  44322c:	ldr	w0, [sp, #180]
  443230:	ldr	w1, [sp, #176]
  443234:	ldr	x8, [sp, #192]
  443238:	mov	x9, xzr
  44323c:	cmp	x8, #0x0
  443240:	ldr	x8, [sp, #56]
  443244:	csel	x5, x8, x9, ne  // ne = any
  443248:	ldr	x6, [sp, #192]
  44324c:	ldr	x2, [sp, #48]
  443250:	mov	w3, #0x22                  	// #34
  443254:	ldr	x4, [sp, #40]
  443258:	mov	x7, x9
  44325c:	mov	x10, sp
  443260:	str	x9, [x10]
  443264:	mov	x9, sp
  443268:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  44326c:	add	x10, x10, #0x958
  443270:	str	x10, [x9, #8]
  443274:	bl	40a870 <log_object_internal@plt>
  443278:	str	w0, [sp, #172]
  44327c:	ldr	w11, [sp, #172]
  443280:	stur	w11, [x29, #-4]
  443284:	b	4435b0 <install_force_release+0x510>
  443288:	ldr	x8, [sp, #64]
  44328c:	ldr	x0, [x8, #4120]
  443290:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  443294:	add	x1, x1, #0xaa4
  443298:	sub	x2, x29, #0x30
  44329c:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4432a0:	str	w0, [sp, #200]
  4432a4:	ldr	w9, [sp, #200]
  4432a8:	cmp	w9, #0x0
  4432ac:	cset	w9, ge  // ge = tcont
  4432b0:	tbnz	w9, #0, 443378 <install_force_release+0x2d8>
  4432b4:	mov	x8, xzr
  4432b8:	str	x8, [sp, #160]
  4432bc:	ldr	x8, [sp, #64]
  4432c0:	ldr	x9, [x8, #4120]
  4432c4:	str	x9, [sp, #152]
  4432c8:	mov	w10, #0x3                   	// #3
  4432cc:	str	w10, [sp, #148]
  4432d0:	ldr	w10, [sp, #200]
  4432d4:	str	w10, [sp, #144]
  4432d8:	ldr	x9, [sp, #152]
  4432dc:	cbz	x9, 44331c <install_force_release+0x27c>
  4432e0:	mov	w0, #0x1                   	// #1
  4432e4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4432e8:	ldr	w8, [sp, #148]
  4432ec:	cmp	w0, w8
  4432f0:	cset	w8, ge  // ge = tcont
  4432f4:	mov	w9, #0x1                   	// #1
  4432f8:	eor	w8, w8, #0x1
  4432fc:	eor	w8, w8, w9
  443300:	and	w8, w8, #0x1
  443304:	mov	w1, w8
  443308:	sxtw	x10, w1
  44330c:	cbz	x10, 44331c <install_force_release+0x27c>
  443310:	ldr	x0, [sp, #152]
  443314:	add	x1, sp, #0xa0
  443318:	bl	40a860 <sd_device_get_sysname@plt>
  44331c:	ldr	w0, [sp, #148]
  443320:	ldr	w1, [sp, #144]
  443324:	ldr	x8, [sp, #160]
  443328:	mov	x9, xzr
  44332c:	cmp	x8, #0x0
  443330:	ldr	x8, [sp, #56]
  443334:	csel	x5, x8, x9, ne  // ne = any
  443338:	ldr	x6, [sp, #160]
  44333c:	ldr	x2, [sp, #48]
  443340:	mov	w3, #0x26                  	// #38
  443344:	ldr	x4, [sp, #40]
  443348:	mov	x7, x9
  44334c:	mov	x10, sp
  443350:	str	x9, [x10]
  443354:	mov	x9, sp
  443358:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  44335c:	add	x10, x10, #0xab2
  443360:	str	x10, [x9, #8]
  443364:	bl	40a870 <log_object_internal@plt>
  443368:	str	w0, [sp, #140]
  44336c:	ldr	w11, [sp, #140]
  443370:	stur	w11, [x29, #-4]
  443374:	b	4435b0 <install_force_release+0x510>
  443378:	add	x0, sp, #0xd8
  44337c:	add	x8, sp, #0xe0
  443380:	ldr	x9, [sp, #64]
  443384:	str	x8, [x9, #8]
  443388:	mov	x8, #0x1000                	// #4096
  44338c:	str	x8, [x9]
  443390:	ldr	x1, [x9]
  443394:	ldr	x2, [x9, #4112]
  443398:	bl	40ae40 <strpcpy@plt>
  44339c:	ldr	x8, [sp, #64]
  4433a0:	str	x0, [x8]
  4433a4:	str	wzr, [sp, #204]
  4433a8:	ldr	w8, [sp, #204]
  4433ac:	ldur	w9, [x29, #-28]
  4433b0:	cmp	w8, w9
  4433b4:	b.cs	4433f8 <install_force_release+0x358>  // b.hs, b.nlast
  4433b8:	ldr	x8, [sp, #64]
  4433bc:	ldr	x1, [x8]
  4433c0:	ldr	x9, [x8, #4136]
  4433c4:	ldr	w10, [sp, #204]
  4433c8:	mov	w11, w10
  4433cc:	ldr	w3, [x9, x11, lsl #2]
  4433d0:	add	x0, sp, #0xd8
  4433d4:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  4433d8:	add	x2, x2, #0xadc
  4433dc:	bl	40ae80 <strpcpyf@plt>
  4433e0:	ldr	x8, [sp, #64]
  4433e4:	str	x0, [x8]
  4433e8:	ldr	w8, [sp, #204]
  4433ec:	add	w8, w8, #0x1
  4433f0:	str	w8, [sp, #204]
  4433f4:	b	4433a8 <install_force_release+0x308>
  4433f8:	mov	x8, xzr
  4433fc:	str	x8, [sp, #128]
  443400:	ldr	x8, [sp, #64]
  443404:	ldr	x9, [x8, #4120]
  443408:	str	x9, [sp, #120]
  44340c:	mov	w10, #0x7                   	// #7
  443410:	str	w10, [sp, #116]
  443414:	str	wzr, [sp, #112]
  443418:	ldr	x9, [sp, #120]
  44341c:	cbz	x9, 44345c <install_force_release+0x3bc>
  443420:	mov	w0, #0x1                   	// #1
  443424:	bl	40a3f0 <log_get_max_level_realm@plt>
  443428:	ldr	w8, [sp, #116]
  44342c:	cmp	w0, w8
  443430:	cset	w8, ge  // ge = tcont
  443434:	mov	w9, #0x1                   	// #1
  443438:	eor	w8, w8, #0x1
  44343c:	eor	w8, w8, w9
  443440:	and	w8, w8, #0x1
  443444:	mov	w1, w8
  443448:	sxtw	x10, w1
  44344c:	cbz	x10, 44345c <install_force_release+0x3bc>
  443450:	ldr	x0, [sp, #120]
  443454:	add	x1, sp, #0x80
  443458:	bl	40a860 <sd_device_get_sysname@plt>
  44345c:	ldr	w0, [sp, #116]
  443460:	ldr	w1, [sp, #112]
  443464:	ldr	x8, [sp, #128]
  443468:	mov	x9, xzr
  44346c:	cmp	x8, #0x0
  443470:	ldr	x8, [sp, #56]
  443474:	csel	x5, x8, x9, ne  // ne = any
  443478:	ldr	x6, [sp, #128]
  44347c:	ldr	x2, [sp, #48]
  443480:	mov	w3, #0x32                  	// #50
  443484:	ldr	x4, [sp, #40]
  443488:	mov	x7, x9
  44348c:	mov	x10, sp
  443490:	str	x9, [x10]
  443494:	mov	x9, sp
  443498:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  44349c:	add	x10, x10, #0xae0
  4434a0:	str	x10, [x9, #8]
  4434a4:	mov	x9, sp
  4434a8:	add	x10, sp, #0xe0
  4434ac:	str	x10, [x9, #16]
  4434b0:	str	x10, [sp, #32]
  4434b4:	bl	40a870 <log_object_internal@plt>
  4434b8:	str	w0, [sp, #108]
  4434bc:	ldr	x8, [sp, #64]
  4434c0:	ldr	x0, [x8, #4120]
  4434c4:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4434c8:	add	x1, x1, #0xaa4
  4434cc:	ldr	x2, [sp, #32]
  4434d0:	bl	40b680 <sd_device_set_sysattr_value@plt>
  4434d4:	str	w0, [sp, #200]
  4434d8:	ldr	w11, [sp, #200]
  4434dc:	cmp	w11, #0x0
  4434e0:	cset	w11, ge  // ge = tcont
  4434e4:	tbnz	w11, #0, 4435ac <install_force_release+0x50c>
  4434e8:	mov	x8, xzr
  4434ec:	str	x8, [sp, #96]
  4434f0:	ldr	x8, [sp, #64]
  4434f4:	ldr	x9, [x8, #4120]
  4434f8:	str	x9, [sp, #88]
  4434fc:	mov	w10, #0x3                   	// #3
  443500:	str	w10, [sp, #84]
  443504:	ldr	w10, [sp, #200]
  443508:	str	w10, [sp, #80]
  44350c:	ldr	x9, [sp, #88]
  443510:	cbz	x9, 443550 <install_force_release+0x4b0>
  443514:	mov	w0, #0x1                   	// #1
  443518:	bl	40a3f0 <log_get_max_level_realm@plt>
  44351c:	ldr	w8, [sp, #84]
  443520:	cmp	w0, w8
  443524:	cset	w8, ge  // ge = tcont
  443528:	mov	w9, #0x1                   	// #1
  44352c:	eor	w8, w8, #0x1
  443530:	eor	w8, w8, w9
  443534:	and	w8, w8, #0x1
  443538:	mov	w1, w8
  44353c:	sxtw	x10, w1
  443540:	cbz	x10, 443550 <install_force_release+0x4b0>
  443544:	ldr	x0, [sp, #88]
  443548:	add	x1, sp, #0x60
  44354c:	bl	40a860 <sd_device_get_sysname@plt>
  443550:	ldr	w0, [sp, #84]
  443554:	ldr	w1, [sp, #80]
  443558:	ldr	x8, [sp, #96]
  44355c:	mov	x9, xzr
  443560:	cmp	x8, #0x0
  443564:	ldr	x8, [sp, #56]
  443568:	csel	x5, x8, x9, ne  // ne = any
  44356c:	ldr	x6, [sp, #96]
  443570:	ldr	x2, [sp, #48]
  443574:	mov	w3, #0x35                  	// #53
  443578:	ldr	x4, [sp, #40]
  44357c:	mov	x7, x9
  443580:	mov	x10, sp
  443584:	str	x9, [x10]
  443588:	mov	x9, sp
  44358c:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  443590:	add	x10, x10, #0xb10
  443594:	str	x10, [x9, #8]
  443598:	bl	40a870 <log_object_internal@plt>
  44359c:	str	w0, [sp, #76]
  4435a0:	ldr	w11, [sp, #76]
  4435a4:	stur	w11, [x29, #-4]
  4435a8:	b	4435b0 <install_force_release+0x510>
  4435ac:	stur	wzr, [x29, #-4]
  4435b0:	ldur	w0, [x29, #-4]
  4435b4:	add	sp, sp, #0x1, lsl #12
  4435b8:	add	sp, sp, #0x110
  4435bc:	ldr	x28, [sp, #16]
  4435c0:	ldp	x29, x30, [sp], #32
  4435c4:	ret

00000000004435c8 <keyboard_lookup_key>:
  4435c8:	sub	sp, sp, #0x40
  4435cc:	stp	x29, x30, [sp, #48]
  4435d0:	add	x29, sp, #0x30
  4435d4:	stur	x0, [x29, #-16]
  4435d8:	str	x1, [sp, #24]
  4435dc:	ldr	x8, [sp, #24]
  4435e0:	cmp	x8, #0x1c
  4435e4:	b.hi	443694 <keyboard_lookup_key+0xcc>  // b.pmore
  4435e8:	ldr	x8, [sp, #24]
  4435ec:	cmp	x8, #0x1
  4435f0:	b.cc	443694 <keyboard_lookup_key+0xcc>  // b.lo, b.ul, b.last
  4435f4:	ldur	x0, [x29, #-16]
  4435f8:	ldr	x1, [sp, #24]
  4435fc:	bl	4436ac <hash_key_name>
  443600:	str	w0, [sp, #20]
  443604:	ldr	w8, [sp, #20]
  443608:	mov	w9, #0x16ea                	// #5866
  44360c:	cmp	w8, w9
  443610:	b.hi	443694 <keyboard_lookup_key+0xcc>  // b.pmore
  443614:	ldr	w8, [sp, #20]
  443618:	mov	w9, w8
  44361c:	mov	x10, #0x10                  	// #16
  443620:	mul	x9, x10, x9
  443624:	adrp	x10, 487000 <__FRAME_END__+0x14000>
  443628:	add	x10, x10, #0x570
  44362c:	add	x9, x10, x9
  443630:	ldr	x9, [x9]
  443634:	str	x9, [sp, #8]
  443638:	ldr	x9, [sp, #8]
  44363c:	cbz	x9, 443694 <keyboard_lookup_key+0xcc>
  443640:	ldur	x8, [x29, #-16]
  443644:	ldrb	w9, [x8]
  443648:	ldr	x8, [sp, #8]
  44364c:	ldrb	w10, [x8]
  443650:	cmp	w9, w10
  443654:	b.ne	443694 <keyboard_lookup_key+0xcc>  // b.any
  443658:	ldur	x8, [x29, #-16]
  44365c:	add	x0, x8, #0x1
  443660:	ldr	x8, [sp, #8]
  443664:	add	x1, x8, #0x1
  443668:	bl	40aa20 <strcmp@plt>
  44366c:	cbnz	w0, 443694 <keyboard_lookup_key+0xcc>
  443670:	ldr	w8, [sp, #20]
  443674:	mov	w9, w8
  443678:	mov	x10, #0x10                  	// #16
  44367c:	mul	x9, x10, x9
  443680:	adrp	x10, 487000 <__FRAME_END__+0x14000>
  443684:	add	x10, x10, #0x570
  443688:	add	x9, x10, x9
  44368c:	stur	x9, [x29, #-8]
  443690:	b	44369c <keyboard_lookup_key+0xd4>
  443694:	mov	x8, xzr
  443698:	stur	x8, [x29, #-8]
  44369c:	ldur	x0, [x29, #-8]
  4436a0:	ldp	x29, x30, [sp, #48]
  4436a4:	add	sp, sp, #0x40
  4436a8:	ret

00000000004436ac <hash_key_name>:
  4436ac:	sub	sp, sp, #0x30
  4436b0:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  4436b4:	add	x8, x8, #0x68c
  4436b8:	str	x0, [sp, #40]
  4436bc:	str	x1, [sp, #32]
  4436c0:	ldr	x9, [sp, #32]
  4436c4:	str	w9, [sp, #28]
  4436c8:	ldr	w9, [sp, #28]
  4436cc:	subs	w9, w9, #0x1
  4436d0:	mov	w10, w9
  4436d4:	ubfx	x10, x10, #0, #32
  4436d8:	cmp	x10, #0x12
  4436dc:	str	x8, [sp, #16]
  4436e0:	str	x10, [sp, #8]
  4436e4:	b.hi	443700 <hash_key_name+0x54>  // b.pmore
  4436e8:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  4436ec:	add	x8, x8, #0x640
  4436f0:	ldr	x11, [sp, #8]
  4436f4:	ldrsw	x10, [x8, x11, lsl #2]
  4436f8:	add	x9, x8, x10
  4436fc:	br	x9
  443700:	ldr	x8, [sp, #40]
  443704:	ldrb	w9, [x8, #19]
  443708:	mov	w8, w9
  44370c:	ldr	x10, [sp, #16]
  443710:	ldrh	w9, [x10, x8, lsl #1]
  443714:	ldr	w11, [sp, #28]
  443718:	add	w9, w11, w9
  44371c:	str	w9, [sp, #28]
  443720:	ldr	x8, [sp, #40]
  443724:	ldrb	w9, [x8, #17]
  443728:	add	w9, w9, #0x8
  44372c:	ldr	x8, [sp, #16]
  443730:	ldrh	w9, [x8, w9, sxtw #1]
  443734:	ldr	w10, [sp, #28]
  443738:	add	w9, w10, w9
  44373c:	str	w9, [sp, #28]
  443740:	ldr	x8, [sp, #40]
  443744:	ldrb	w9, [x8, #14]
  443748:	mov	w8, w9
  44374c:	ldr	x10, [sp, #16]
  443750:	ldrh	w9, [x10, x8, lsl #1]
  443754:	ldr	w11, [sp, #28]
  443758:	add	w9, w11, w9
  44375c:	str	w9, [sp, #28]
  443760:	ldr	x8, [sp, #40]
  443764:	ldrb	w9, [x8, #11]
  443768:	mov	w8, w9
  44376c:	ldr	x10, [sp, #16]
  443770:	ldrh	w9, [x10, x8, lsl #1]
  443774:	ldr	w11, [sp, #28]
  443778:	add	w9, w11, w9
  44377c:	str	w9, [sp, #28]
  443780:	ldr	x8, [sp, #40]
  443784:	ldrb	w9, [x8, #9]
  443788:	add	w9, w9, #0x8
  44378c:	ldr	x8, [sp, #16]
  443790:	ldrh	w9, [x8, w9, sxtw #1]
  443794:	ldr	w10, [sp, #28]
  443798:	add	w9, w10, w9
  44379c:	str	w9, [sp, #28]
  4437a0:	ldr	x8, [sp, #40]
  4437a4:	ldrb	w9, [x8, #6]
  4437a8:	mov	w8, w9
  4437ac:	ldr	x10, [sp, #16]
  4437b0:	ldrh	w9, [x10, x8, lsl #1]
  4437b4:	ldr	w11, [sp, #28]
  4437b8:	add	w9, w11, w9
  4437bc:	str	w9, [sp, #28]
  4437c0:	ldr	x8, [sp, #40]
  4437c4:	ldrb	w9, [x8, #5]
  4437c8:	add	w9, w9, #0x1
  4437cc:	ldr	x8, [sp, #16]
  4437d0:	ldrh	w9, [x8, w9, sxtw #1]
  4437d4:	ldr	w10, [sp, #28]
  4437d8:	add	w9, w10, w9
  4437dc:	str	w9, [sp, #28]
  4437e0:	ldr	x8, [sp, #40]
  4437e4:	ldrb	w9, [x8, #4]
  4437e8:	mov	w8, w9
  4437ec:	ldr	x10, [sp, #16]
  4437f0:	ldrh	w9, [x10, x8, lsl #1]
  4437f4:	ldr	w11, [sp, #28]
  4437f8:	add	w9, w11, w9
  4437fc:	str	w9, [sp, #28]
  443800:	ldr	x8, [sp, #40]
  443804:	ldrb	w9, [x8, #2]
  443808:	add	w9, w9, #0x1
  44380c:	ldr	x8, [sp, #16]
  443810:	ldrh	w9, [x8, w9, sxtw #1]
  443814:	ldr	w10, [sp, #28]
  443818:	add	w9, w10, w9
  44381c:	str	w9, [sp, #28]
  443820:	ldr	x8, [sp, #40]
  443824:	ldrb	w9, [x8, #1]
  443828:	mov	w8, w9
  44382c:	ldr	x10, [sp, #16]
  443830:	ldrh	w9, [x10, x8, lsl #1]
  443834:	ldr	w11, [sp, #28]
  443838:	add	w9, w11, w9
  44383c:	str	w9, [sp, #28]
  443840:	ldr	x8, [sp, #40]
  443844:	ldrb	w9, [x8]
  443848:	mov	w8, w9
  44384c:	ldr	x10, [sp, #16]
  443850:	ldrh	w9, [x10, x8, lsl #1]
  443854:	ldr	w11, [sp, #28]
  443858:	add	w9, w11, w9
  44385c:	str	w9, [sp, #28]
  443860:	ldr	w8, [sp, #28]
  443864:	ldr	x9, [sp, #40]
  443868:	ldr	x10, [sp, #32]
  44386c:	subs	x10, x10, #0x1
  443870:	ldrb	w11, [x9, x10]
  443874:	mov	w9, w11
  443878:	ldr	x10, [sp, #16]
  44387c:	ldrh	w11, [x10, x9, lsl #1]
  443880:	add	w0, w8, w11
  443884:	add	sp, sp, #0x30
  443888:	ret

000000000044388c <parse_token>:
  44388c:	sub	sp, sp, #0x40
  443890:	stp	x29, x30, [sp, #48]
  443894:	add	x29, sp, #0x30
  443898:	stur	x0, [x29, #-16]
  44389c:	str	x1, [sp, #24]
  4438a0:	ldur	x8, [x29, #-16]
  4438a4:	cbnz	x8, 4438b4 <parse_token+0x28>
  4438a8:	mov	x8, xzr
  4438ac:	stur	x8, [x29, #-8]
  4438b0:	b	443930 <parse_token+0xa4>
  4438b4:	ldur	x0, [x29, #-16]
  4438b8:	add	x1, sp, #0x10
  4438bc:	mov	w8, wzr
  4438c0:	mov	w2, w8
  4438c4:	bl	40b690 <strtol@plt>
  4438c8:	str	w0, [sp, #12]
  4438cc:	ldr	x9, [sp, #16]
  4438d0:	ldrb	w8, [x9]
  4438d4:	cbz	w8, 4438f4 <parse_token+0x68>
  4438d8:	ldr	x8, [sp, #16]
  4438dc:	ldrb	w9, [x8]
  4438e0:	cmp	w9, #0x3a
  4438e4:	b.eq	4438f4 <parse_token+0x68>  // b.none
  4438e8:	mov	x8, xzr
  4438ec:	stur	x8, [x29, #-8]
  4438f0:	b	443930 <parse_token+0xa4>
  4438f4:	ldr	x8, [sp, #16]
  4438f8:	ldur	x9, [x29, #-16]
  4438fc:	cmp	x8, x9
  443900:	b.eq	443910 <parse_token+0x84>  // b.none
  443904:	ldr	w8, [sp, #12]
  443908:	ldr	x9, [sp, #24]
  44390c:	str	w8, [x9]
  443910:	ldr	x8, [sp, #16]
  443914:	ldrb	w9, [x8]
  443918:	cbz	w9, 443928 <parse_token+0x9c>
  44391c:	ldr	x8, [sp, #16]
  443920:	add	x8, x8, #0x1
  443924:	str	x8, [sp, #16]
  443928:	ldr	x8, [sp, #16]
  44392c:	stur	x8, [x29, #-8]
  443930:	ldur	x0, [x29, #-8]
  443934:	ldp	x29, x30, [sp, #48]
  443938:	add	sp, sp, #0x40
  44393c:	ret

0000000000443940 <builtin_net_id>:
  443940:	stp	x29, x30, [sp, #-32]!
  443944:	str	x28, [sp, #16]
  443948:	mov	x29, sp
  44394c:	sub	sp, sp, #0x200
  443950:	add	x8, sp, #0x100
  443954:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  443958:	add	x9, x9, #0xb5b
  44395c:	mov	x10, #0xb0                  	// #176
  443960:	adrp	x11, 46c000 <on_inotify.__assert_in_set+0x8540>
  443964:	add	x11, x11, #0xb5e
  443968:	mov	w12, wzr
  44396c:	mov	w13, #0x1                   	// #1
  443970:	adrp	x14, 46c000 <on_inotify.__assert_in_set+0x8540>
  443974:	add	x14, x14, #0xc89
  443978:	adrp	x15, 46c000 <on_inotify.__assert_in_set+0x8540>
  44397c:	add	x15, x15, #0xc3e
  443980:	adrp	x16, 46c000 <on_inotify.__assert_in_set+0x8540>
  443984:	add	x16, x16, #0xc4f
  443988:	adrp	x17, 46c000 <on_inotify.__assert_in_set+0x8540>
  44398c:	add	x17, x17, #0xc39
  443990:	adrp	x18, 46c000 <on_inotify.__assert_in_set+0x8540>
  443994:	add	x18, x18, #0xbd2
  443998:	add	x18, x18, #0x3
  44399c:	sub	x4, x29, #0x30
  4439a0:	sub	x5, x29, #0xf8
  4439a4:	str	x0, [x8, #240]
  4439a8:	stur	w1, [x29, #-20]
  4439ac:	str	x2, [x8, #224]
  4439b0:	and	w13, w3, w13
  4439b4:	sturb	w13, [x29, #-33]
  4439b8:	str	x9, [x8, #184]
  4439bc:	mov	x0, x5
  4439c0:	mov	w1, w12
  4439c4:	mov	x2, x10
  4439c8:	str	x8, [sp, #112]
  4439cc:	str	x11, [sp, #104]
  4439d0:	str	x14, [sp, #96]
  4439d4:	str	x15, [sp, #88]
  4439d8:	str	x16, [sp, #80]
  4439dc:	str	x17, [sp, #72]
  4439e0:	str	x18, [sp, #64]
  4439e4:	str	x4, [sp, #56]
  4439e8:	bl	40a5f0 <memset@plt>
  4439ec:	ldr	x8, [sp, #112]
  4439f0:	ldr	x0, [x8, #240]
  4439f4:	ldr	x1, [sp, #104]
  4439f8:	ldr	x2, [sp, #56]
  4439fc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  443a00:	str	w0, [sp, #252]
  443a04:	ldr	w12, [sp, #252]
  443a08:	cmp	w12, #0x0
  443a0c:	cset	w12, ge  // ge = tcont
  443a10:	tbnz	w12, #0, 443a20 <builtin_net_id+0xe0>
  443a14:	ldr	w8, [sp, #252]
  443a18:	stur	w8, [x29, #-4]
  443a1c:	b	444280 <builtin_net_id+0x940>
  443a20:	ldr	x8, [sp, #112]
  443a24:	ldr	x0, [x8, #208]
  443a28:	mov	x9, xzr
  443a2c:	mov	x1, x9
  443a30:	mov	w10, wzr
  443a34:	mov	w2, w10
  443a38:	bl	40b670 <strtoul@plt>
  443a3c:	ldr	x8, [sp, #112]
  443a40:	str	x0, [x8]
  443a44:	ldr	x9, [x8]
  443a48:	cmp	x9, #0x1
  443a4c:	str	x9, [sp, #48]
  443a50:	b.eq	443a78 <builtin_net_id+0x138>  // b.none
  443a54:	b	443a58 <builtin_net_id+0x118>
  443a58:	ldr	x8, [sp, #48]
  443a5c:	cmp	x8, #0x20
  443a60:	b.eq	443a8c <builtin_net_id+0x14c>  // b.none
  443a64:	b	443a68 <builtin_net_id+0x128>
  443a68:	ldr	x8, [sp, #48]
  443a6c:	cmp	x8, #0x100
  443a70:	b.eq	443abc <builtin_net_id+0x17c>  // b.none
  443a74:	b	443ad0 <builtin_net_id+0x190>
  443a78:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  443a7c:	add	x8, x8, #0xb5b
  443a80:	ldr	x9, [sp, #112]
  443a84:	str	x8, [x9, #184]
  443a88:	b	443ad8 <builtin_net_id+0x198>
  443a8c:	mov	w0, #0x4                   	// #4
  443a90:	bl	444294 <naming_scheme_has>
  443a94:	tbnz	w0, #0, 443a9c <builtin_net_id+0x15c>
  443a98:	b	443ab0 <builtin_net_id+0x170>
  443a9c:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  443aa0:	add	x8, x8, #0xb63
  443aa4:	ldr	x9, [sp, #112]
  443aa8:	str	x8, [x9, #184]
  443aac:	b	443ab8 <builtin_net_id+0x178>
  443ab0:	stur	wzr, [x29, #-4]
  443ab4:	b	444280 <builtin_net_id+0x940>
  443ab8:	b	443ad8 <builtin_net_id+0x198>
  443abc:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  443ac0:	add	x8, x8, #0xb66
  443ac4:	ldr	x9, [sp, #112]
  443ac8:	str	x8, [x9, #184]
  443acc:	b	443ad8 <builtin_net_id+0x198>
  443ad0:	stur	wzr, [x29, #-4]
  443ad4:	b	444280 <builtin_net_id+0x940>
  443ad8:	ldr	x8, [sp, #112]
  443adc:	ldr	x0, [x8, #240]
  443ae0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  443ae4:	add	x1, x1, #0xb69
  443ae8:	sub	x2, x29, #0x30
  443aec:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  443af0:	str	w0, [sp, #252]
  443af4:	ldr	w9, [sp, #252]
  443af8:	cmp	w9, #0x0
  443afc:	cset	w9, ge  // ge = tcont
  443b00:	tbnz	w9, #0, 443b10 <builtin_net_id+0x1d0>
  443b04:	ldr	w8, [sp, #252]
  443b08:	stur	w8, [x29, #-4]
  443b0c:	b	444280 <builtin_net_id+0x940>
  443b10:	ldr	x8, [sp, #112]
  443b14:	ldr	x0, [x8, #240]
  443b18:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  443b1c:	add	x1, x1, #0xb71
  443b20:	sub	x2, x29, #0x38
  443b24:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  443b28:	str	w0, [sp, #252]
  443b2c:	ldr	w9, [sp, #252]
  443b30:	cmp	w9, #0x0
  443b34:	cset	w9, ge  // ge = tcont
  443b38:	tbnz	w9, #0, 443b48 <builtin_net_id+0x208>
  443b3c:	ldr	w8, [sp, #252]
  443b40:	stur	w8, [x29, #-4]
  443b44:	b	444280 <builtin_net_id+0x940>
  443b48:	ldr	x8, [sp, #112]
  443b4c:	ldr	x0, [x8, #208]
  443b50:	ldr	x1, [x8, #200]
  443b54:	bl	40aa20 <strcmp@plt>
  443b58:	cbz	w0, 443b64 <builtin_net_id+0x224>
  443b5c:	stur	wzr, [x29, #-4]
  443b60:	b	444280 <builtin_net_id+0x940>
  443b64:	ldr	x8, [sp, #112]
  443b68:	ldr	x0, [x8, #240]
  443b6c:	sub	x1, x29, #0x40
  443b70:	bl	40abb0 <sd_device_get_devtype@plt>
  443b74:	cmp	w0, #0x0
  443b78:	cset	w9, lt  // lt = tstop
  443b7c:	tbnz	w9, #0, 443bd4 <builtin_net_id+0x294>
  443b80:	ldr	x8, [sp, #112]
  443b84:	ldr	x1, [x8, #192]
  443b88:	adrp	x0, 46a000 <on_inotify.__assert_in_set+0x6540>
  443b8c:	add	x0, x0, #0xefd
  443b90:	bl	40aa20 <strcmp@plt>
  443b94:	cbnz	w0, 443bac <builtin_net_id+0x26c>
  443b98:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  443b9c:	add	x8, x8, #0xb78
  443ba0:	ldr	x9, [sp, #112]
  443ba4:	str	x8, [x9, #184]
  443ba8:	b	443bd4 <builtin_net_id+0x294>
  443bac:	ldr	x8, [sp, #112]
  443bb0:	ldr	x1, [x8, #192]
  443bb4:	adrp	x0, 46b000 <on_inotify.__assert_in_set+0x7540>
  443bb8:	add	x0, x0, #0xa9c
  443bbc:	bl	40aa20 <strcmp@plt>
  443bc0:	cbnz	w0, 443bd4 <builtin_net_id+0x294>
  443bc4:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  443bc8:	add	x8, x8, #0xb7b
  443bcc:	ldr	x9, [sp, #112]
  443bd0:	str	x8, [x9, #184]
  443bd4:	ldr	x8, [sp, #112]
  443bd8:	ldr	x0, [x8, #240]
  443bdc:	ldurb	w9, [x29, #-33]
  443be0:	str	x0, [sp, #40]
  443be4:	str	w9, [sp, #36]
  443be8:	bl	44fa64 <naming_scheme>
  443bec:	ldr	x3, [x0]
  443bf0:	ldr	x0, [sp, #40]
  443bf4:	ldr	w9, [sp, #36]
  443bf8:	and	w1, w9, #0x1
  443bfc:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  443c00:	add	x2, x2, #0xb7e
  443c04:	bl	43eae8 <udev_builtin_add_property>
  443c08:	ldr	x8, [sp, #112]
  443c0c:	ldr	x10, [x8, #240]
  443c10:	mov	x0, x10
  443c14:	sub	x1, x29, #0xf8
  443c18:	bl	4442cc <names_mac>
  443c1c:	str	w0, [sp, #252]
  443c20:	ldr	w9, [sp, #252]
  443c24:	cmp	w9, #0x0
  443c28:	cset	w9, lt  // lt = tstop
  443c2c:	tbnz	w9, #0, 443d10 <builtin_net_id+0x3d0>
  443c30:	sub	x8, x29, #0xf8
  443c34:	ldrb	w9, [x8, #10]
  443c38:	tbnz	w9, #0, 443c40 <builtin_net_id+0x300>
  443c3c:	b	443d10 <builtin_net_id+0x3d0>
  443c40:	ldr	x8, [sp, #112]
  443c44:	ldr	x3, [x8, #184]
  443c48:	ldurb	w4, [x29, #-244]
  443c4c:	ldurb	w5, [x29, #-243]
  443c50:	ldurb	w6, [x29, #-242]
  443c54:	ldurb	w7, [x29, #-241]
  443c58:	ldurb	w9, [x29, #-240]
  443c5c:	ldurb	w10, [x29, #-239]
  443c60:	add	x0, sp, #0xec
  443c64:	mov	x1, #0x10                  	// #16
  443c68:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  443c6c:	add	x2, x2, #0xb93
  443c70:	mov	x11, sp
  443c74:	str	w9, [x11]
  443c78:	mov	x11, sp
  443c7c:	str	w10, [x11, #8]
  443c80:	bl	40b140 <snprintf@plt>
  443c84:	mov	w1, w0
  443c88:	sxtw	x8, w1
  443c8c:	cmp	x8, #0x10
  443c90:	cset	w9, cc  // cc = lo, ul, last
  443c94:	mov	w10, #0x1                   	// #1
  443c98:	eor	w9, w9, #0x1
  443c9c:	eor	w9, w9, w10
  443ca0:	eor	w9, w9, w10
  443ca4:	and	w9, w9, #0x1
  443ca8:	mov	w1, w9
  443cac:	sxtw	x8, w1
  443cb0:	cbz	x8, 443cd4 <builtin_net_id+0x394>
  443cb4:	mov	w0, #0x1                   	// #1
  443cb8:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  443cbc:	add	x1, x1, #0xbaf
  443cc0:	ldr	x2, [sp, #64]
  443cc4:	mov	w3, #0x33a                 	// #826
  443cc8:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  443ccc:	add	x4, x4, #0xbf4
  443cd0:	bl	40a540 <log_assert_failed_realm@plt>
  443cd4:	ldr	x8, [sp, #112]
  443cd8:	ldr	x0, [x8, #240]
  443cdc:	ldurb	w9, [x29, #-33]
  443ce0:	and	w1, w9, #0x1
  443ce4:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  443ce8:	add	x2, x2, #0xc29
  443cec:	add	x3, sp, #0xec
  443cf0:	bl	43eae8 <udev_builtin_add_property>
  443cf4:	ldr	x8, [sp, #112]
  443cf8:	ldr	x10, [x8, #240]
  443cfc:	ldurb	w9, [x29, #-33]
  443d00:	mov	x0, x10
  443d04:	sub	x1, x29, #0xf8
  443d08:	and	w2, w9, #0x1
  443d0c:	bl	4444cc <ieee_oui>
  443d10:	ldr	x8, [sp, #112]
  443d14:	ldr	x0, [x8, #240]
  443d18:	sub	x1, x29, #0xf8
  443d1c:	bl	44460c <names_ccw>
  443d20:	cmp	w0, #0x0
  443d24:	cset	w9, lt  // lt = tstop
  443d28:	tbnz	w9, #0, 443d8c <builtin_net_id+0x44c>
  443d2c:	ldur	w8, [x29, #-248]
  443d30:	cmp	w8, #0x5
  443d34:	b.ne	443d8c <builtin_net_id+0x44c>  // b.any
  443d38:	ldr	x8, [sp, #112]
  443d3c:	ldr	x3, [x8, #184]
  443d40:	sub	x9, x29, #0xf8
  443d44:	add	x4, x9, #0x70
  443d48:	add	x0, sp, #0xdc
  443d4c:	mov	x1, #0x10                  	// #16
  443d50:	ldr	x2, [sp, #72]
  443d54:	bl	40b140 <snprintf@plt>
  443d58:	mov	w1, w0
  443d5c:	sxtw	x8, w1
  443d60:	cmp	x8, #0x10
  443d64:	b.cs	443d84 <builtin_net_id+0x444>  // b.hs, b.nlast
  443d68:	ldr	x8, [sp, #112]
  443d6c:	ldr	x0, [x8, #240]
  443d70:	ldurb	w9, [x29, #-33]
  443d74:	and	w1, w9, #0x1
  443d78:	ldr	x2, [sp, #88]
  443d7c:	add	x3, sp, #0xdc
  443d80:	bl	43eae8 <udev_builtin_add_property>
  443d84:	stur	wzr, [x29, #-4]
  443d88:	b	444280 <builtin_net_id+0x940>
  443d8c:	ldr	x8, [sp, #112]
  443d90:	ldr	x0, [x8, #240]
  443d94:	sub	x1, x29, #0xf8
  443d98:	bl	444894 <names_vio>
  443d9c:	cmp	w0, #0x0
  443da0:	cset	w9, lt  // lt = tstop
  443da4:	tbnz	w9, #0, 443e08 <builtin_net_id+0x4c8>
  443da8:	ldur	w8, [x29, #-248]
  443dac:	cmp	w8, #0x6
  443db0:	b.ne	443e08 <builtin_net_id+0x4c8>  // b.any
  443db4:	ldr	x8, [sp, #112]
  443db8:	ldr	x3, [x8, #184]
  443dbc:	sub	x9, x29, #0xf8
  443dc0:	add	x4, x9, #0x80
  443dc4:	add	x0, sp, #0xcc
  443dc8:	mov	x1, #0x10                  	// #16
  443dcc:	ldr	x2, [sp, #72]
  443dd0:	bl	40b140 <snprintf@plt>
  443dd4:	mov	w1, w0
  443dd8:	sxtw	x8, w1
  443ddc:	cmp	x8, #0x10
  443de0:	b.cs	443e00 <builtin_net_id+0x4c0>  // b.hs, b.nlast
  443de4:	ldr	x8, [sp, #112]
  443de8:	ldr	x0, [x8, #240]
  443dec:	ldurb	w9, [x29, #-33]
  443df0:	and	w1, w9, #0x1
  443df4:	ldr	x2, [sp, #80]
  443df8:	add	x3, sp, #0xcc
  443dfc:	bl	43eae8 <udev_builtin_add_property>
  443e00:	stur	wzr, [x29, #-4]
  443e04:	b	444280 <builtin_net_id+0x940>
  443e08:	ldr	x8, [sp, #112]
  443e0c:	ldr	x0, [x8, #240]
  443e10:	ldurb	w9, [x29, #-33]
  443e14:	sub	x1, x29, #0xf8
  443e18:	and	w2, w9, #0x1
  443e1c:	bl	444a1c <names_platform>
  443e20:	cmp	w0, #0x0
  443e24:	cset	w9, lt  // lt = tstop
  443e28:	tbnz	w9, #0, 443e8c <builtin_net_id+0x54c>
  443e2c:	ldur	w8, [x29, #-248]
  443e30:	cmp	w8, #0x7
  443e34:	b.ne	443e8c <builtin_net_id+0x54c>  // b.any
  443e38:	ldr	x8, [sp, #112]
  443e3c:	ldr	x3, [x8, #184]
  443e40:	sub	x9, x29, #0xf8
  443e44:	add	x4, x9, #0x90
  443e48:	add	x0, sp, #0xbc
  443e4c:	mov	x1, #0x10                  	// #16
  443e50:	ldr	x2, [sp, #72]
  443e54:	bl	40b140 <snprintf@plt>
  443e58:	mov	w1, w0
  443e5c:	sxtw	x8, w1
  443e60:	cmp	x8, #0x10
  443e64:	b.cs	443e84 <builtin_net_id+0x544>  // b.hs, b.nlast
  443e68:	ldr	x8, [sp, #112]
  443e6c:	ldr	x0, [x8, #240]
  443e70:	ldurb	w9, [x29, #-33]
  443e74:	and	w1, w9, #0x1
  443e78:	ldr	x2, [sp, #88]
  443e7c:	add	x3, sp, #0xbc
  443e80:	bl	43eae8 <udev_builtin_add_property>
  443e84:	stur	wzr, [x29, #-4]
  443e88:	b	444280 <builtin_net_id+0x940>
  443e8c:	ldr	x8, [sp, #112]
  443e90:	ldr	x0, [x8, #240]
  443e94:	sub	x1, x29, #0xf8
  443e98:	bl	444c3c <names_netdevsim>
  443e9c:	cmp	w0, #0x0
  443ea0:	cset	w9, lt  // lt = tstop
  443ea4:	tbnz	w9, #0, 443f08 <builtin_net_id+0x5c8>
  443ea8:	ldur	w8, [x29, #-248]
  443eac:	cmp	w8, #0x8
  443eb0:	b.ne	443f08 <builtin_net_id+0x5c8>  // b.any
  443eb4:	ldr	x8, [sp, #112]
  443eb8:	ldr	x3, [x8, #184]
  443ebc:	sub	x9, x29, #0xf8
  443ec0:	add	x4, x9, #0xa0
  443ec4:	add	x0, sp, #0xac
  443ec8:	mov	x1, #0x10                  	// #16
  443ecc:	ldr	x2, [sp, #72]
  443ed0:	bl	40b140 <snprintf@plt>
  443ed4:	mov	w1, w0
  443ed8:	sxtw	x8, w1
  443edc:	cmp	x8, #0x10
  443ee0:	b.cs	443f00 <builtin_net_id+0x5c0>  // b.hs, b.nlast
  443ee4:	ldr	x8, [sp, #112]
  443ee8:	ldr	x0, [x8, #240]
  443eec:	ldurb	w9, [x29, #-33]
  443ef0:	and	w1, w9, #0x1
  443ef4:	ldr	x2, [sp, #88]
  443ef8:	add	x3, sp, #0xac
  443efc:	bl	43eae8 <udev_builtin_add_property>
  443f00:	stur	wzr, [x29, #-4]
  443f04:	b	444280 <builtin_net_id+0x940>
  443f08:	ldr	x8, [sp, #112]
  443f0c:	ldr	x0, [x8, #240]
  443f10:	sub	x1, x29, #0xf8
  443f14:	bl	444e48 <names_pci>
  443f18:	cmp	w0, #0x0
  443f1c:	cset	w9, ge  // ge = tcont
  443f20:	tbnz	w9, #0, 443f2c <builtin_net_id+0x5ec>
  443f24:	stur	wzr, [x29, #-4]
  443f28:	b	444280 <builtin_net_id+0x940>
  443f2c:	ldur	w8, [x29, #-248]
  443f30:	cmp	w8, #0x1
  443f34:	b.ne	4440c8 <builtin_net_id+0x788>  // b.any
  443f38:	ldurb	w8, [x29, #-192]
  443f3c:	cbz	w8, 443f90 <builtin_net_id+0x650>
  443f40:	ldr	x8, [sp, #112]
  443f44:	ldr	x3, [x8, #184]
  443f48:	sub	x9, x29, #0xf8
  443f4c:	add	x4, x9, #0x38
  443f50:	add	x0, sp, #0x9c
  443f54:	mov	x1, #0x10                  	// #16
  443f58:	ldr	x2, [sp, #72]
  443f5c:	bl	40b140 <snprintf@plt>
  443f60:	mov	w1, w0
  443f64:	sxtw	x8, w1
  443f68:	cmp	x8, #0x10
  443f6c:	b.cs	443f90 <builtin_net_id+0x650>  // b.hs, b.nlast
  443f70:	ldr	x8, [sp, #112]
  443f74:	ldr	x0, [x8, #240]
  443f78:	ldurb	w9, [x29, #-33]
  443f7c:	and	w1, w9, #0x1
  443f80:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  443f84:	add	x2, x2, #0xc60
  443f88:	add	x3, sp, #0x9c
  443f8c:	bl	43eae8 <udev_builtin_add_property>
  443f90:	sub	x8, x29, #0xf8
  443f94:	ldr	x8, [x8, #72]
  443f98:	cbz	x8, 444018 <builtin_net_id+0x6d8>
  443f9c:	mov	w0, #0x80                  	// #128
  443fa0:	bl	444294 <naming_scheme_has>
  443fa4:	tbnz	w0, #0, 443fac <builtin_net_id+0x66c>
  443fa8:	b	443fbc <builtin_net_id+0x67c>
  443fac:	adrp	x8, 468000 <on_inotify.__assert_in_set+0x4540>
  443fb0:	add	x8, x8, #0xcbe
  443fb4:	str	x8, [sp, #24]
  443fb8:	b	443fc8 <builtin_net_id+0x688>
  443fbc:	ldr	x8, [sp, #112]
  443fc0:	ldr	x9, [x8, #184]
  443fc4:	str	x9, [sp, #24]
  443fc8:	ldr	x8, [sp, #24]
  443fcc:	sub	x9, x29, #0xf8
  443fd0:	ldr	x4, [x9, #72]
  443fd4:	add	x0, sp, #0x9c
  443fd8:	mov	x1, #0x10                  	// #16
  443fdc:	ldr	x2, [sp, #72]
  443fe0:	mov	x3, x8
  443fe4:	bl	40b140 <snprintf@plt>
  443fe8:	mov	w1, w0
  443fec:	sxtw	x8, w1
  443ff0:	cmp	x8, #0x10
  443ff4:	b.cs	444018 <builtin_net_id+0x6d8>  // b.hs, b.nlast
  443ff8:	ldr	x8, [sp, #112]
  443ffc:	ldr	x0, [x8, #240]
  444000:	ldurb	w9, [x29, #-33]
  444004:	and	w1, w9, #0x1
  444008:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  44400c:	add	x2, x2, #0xc74
  444010:	add	x3, sp, #0x9c
  444014:	bl	43eae8 <udev_builtin_add_property>
  444018:	ldurb	w8, [x29, #-208]
  44401c:	cbz	w8, 44406c <builtin_net_id+0x72c>
  444020:	ldr	x8, [sp, #112]
  444024:	ldr	x3, [x8, #184]
  444028:	sub	x9, x29, #0xf8
  44402c:	add	x4, x9, #0x28
  444030:	add	x0, sp, #0x9c
  444034:	mov	x1, #0x10                  	// #16
  444038:	ldr	x2, [sp, #72]
  44403c:	bl	40b140 <snprintf@plt>
  444040:	mov	w1, w0
  444044:	sxtw	x8, w1
  444048:	cmp	x8, #0x10
  44404c:	b.cs	44406c <builtin_net_id+0x72c>  // b.hs, b.nlast
  444050:	ldr	x8, [sp, #112]
  444054:	ldr	x0, [x8, #240]
  444058:	ldurb	w9, [x29, #-33]
  44405c:	and	w1, w9, #0x1
  444060:	ldr	x2, [sp, #88]
  444064:	add	x3, sp, #0x9c
  444068:	bl	43eae8 <udev_builtin_add_property>
  44406c:	ldurb	w8, [x29, #-224]
  444070:	cbz	w8, 4440c0 <builtin_net_id+0x780>
  444074:	ldr	x8, [sp, #112]
  444078:	ldr	x3, [x8, #184]
  44407c:	sub	x9, x29, #0xf8
  444080:	add	x4, x9, #0x18
  444084:	add	x0, sp, #0x9c
  444088:	mov	x1, #0x10                  	// #16
  44408c:	ldr	x2, [sp, #72]
  444090:	bl	40b140 <snprintf@plt>
  444094:	mov	w1, w0
  444098:	sxtw	x8, w1
  44409c:	cmp	x8, #0x10
  4440a0:	b.cs	4440c0 <builtin_net_id+0x780>  // b.hs, b.nlast
  4440a4:	ldr	x8, [sp, #112]
  4440a8:	ldr	x0, [x8, #240]
  4440ac:	ldurb	w9, [x29, #-33]
  4440b0:	and	w1, w9, #0x1
  4440b4:	ldr	x2, [sp, #80]
  4440b8:	add	x3, sp, #0x9c
  4440bc:	bl	43eae8 <udev_builtin_add_property>
  4440c0:	stur	wzr, [x29, #-4]
  4440c4:	b	444280 <builtin_net_id+0x940>
  4440c8:	ldr	x8, [sp, #112]
  4440cc:	ldr	x0, [x8, #240]
  4440d0:	sub	x1, x29, #0xf8
  4440d4:	bl	44520c <names_usb>
  4440d8:	cmp	w0, #0x0
  4440dc:	cset	w9, lt  // lt = tstop
  4440e0:	tbnz	w9, #0, 4441a8 <builtin_net_id+0x868>
  4440e4:	ldur	w8, [x29, #-248]
  4440e8:	cmp	w8, #0x2
  4440ec:	b.ne	4441a8 <builtin_net_id+0x868>  // b.any
  4440f0:	ldurb	w8, [x29, #-208]
  4440f4:	cbz	w8, 444148 <builtin_net_id+0x808>
  4440f8:	ldr	x8, [sp, #112]
  4440fc:	ldr	x3, [x8, #184]
  444100:	sub	x9, x29, #0xf8
  444104:	add	x4, x9, #0x28
  444108:	add	x5, x9, #0x50
  44410c:	add	x0, sp, #0x8c
  444110:	mov	x1, #0x10                  	// #16
  444114:	ldr	x2, [sp, #96]
  444118:	bl	40b140 <snprintf@plt>
  44411c:	mov	w1, w0
  444120:	sxtw	x8, w1
  444124:	cmp	x8, #0x10
  444128:	b.cs	444148 <builtin_net_id+0x808>  // b.hs, b.nlast
  44412c:	ldr	x8, [sp, #112]
  444130:	ldr	x0, [x8, #240]
  444134:	ldurb	w9, [x29, #-33]
  444138:	and	w1, w9, #0x1
  44413c:	ldr	x2, [sp, #88]
  444140:	add	x3, sp, #0x8c
  444144:	bl	43eae8 <udev_builtin_add_property>
  444148:	ldurb	w8, [x29, #-224]
  44414c:	cbz	w8, 4441a0 <builtin_net_id+0x860>
  444150:	ldr	x8, [sp, #112]
  444154:	ldr	x3, [x8, #184]
  444158:	sub	x9, x29, #0xf8
  44415c:	add	x4, x9, #0x18
  444160:	add	x5, x9, #0x50
  444164:	add	x0, sp, #0x8c
  444168:	mov	x1, #0x10                  	// #16
  44416c:	ldr	x2, [sp, #96]
  444170:	bl	40b140 <snprintf@plt>
  444174:	mov	w1, w0
  444178:	sxtw	x8, w1
  44417c:	cmp	x8, #0x10
  444180:	b.cs	4441a0 <builtin_net_id+0x860>  // b.hs, b.nlast
  444184:	ldr	x8, [sp, #112]
  444188:	ldr	x0, [x8, #240]
  44418c:	ldurb	w9, [x29, #-33]
  444190:	and	w1, w9, #0x1
  444194:	ldr	x2, [sp, #80]
  444198:	add	x3, sp, #0x8c
  44419c:	bl	43eae8 <udev_builtin_add_property>
  4441a0:	stur	wzr, [x29, #-4]
  4441a4:	b	444280 <builtin_net_id+0x940>
  4441a8:	ldr	x8, [sp, #112]
  4441ac:	ldr	x0, [x8, #240]
  4441b0:	sub	x1, x29, #0xf8
  4441b4:	bl	44551c <names_bcma>
  4441b8:	cmp	w0, #0x0
  4441bc:	cset	w9, lt  // lt = tstop
  4441c0:	tbnz	w9, #0, 44427c <builtin_net_id+0x93c>
  4441c4:	ldur	w8, [x29, #-248]
  4441c8:	cmp	w8, #0x3
  4441cc:	b.ne	44427c <builtin_net_id+0x93c>  // b.any
  4441d0:	ldurb	w8, [x29, #-208]
  4441d4:	cbz	w8, 444228 <builtin_net_id+0x8e8>
  4441d8:	ldr	x8, [sp, #112]
  4441dc:	ldr	x3, [x8, #184]
  4441e0:	sub	x9, x29, #0xf8
  4441e4:	add	x4, x9, #0x28
  4441e8:	add	x5, x9, #0x60
  4441ec:	add	x0, sp, #0x7c
  4441f0:	mov	x1, #0x10                  	// #16
  4441f4:	ldr	x2, [sp, #96]
  4441f8:	bl	40b140 <snprintf@plt>
  4441fc:	mov	w1, w0
  444200:	sxtw	x8, w1
  444204:	cmp	x8, #0x10
  444208:	b.cs	444228 <builtin_net_id+0x8e8>  // b.hs, b.nlast
  44420c:	ldr	x8, [sp, #112]
  444210:	ldr	x0, [x8, #240]
  444214:	ldurb	w9, [x29, #-33]
  444218:	and	w1, w9, #0x1
  44421c:	ldr	x2, [sp, #88]
  444220:	add	x3, sp, #0x7c
  444224:	bl	43eae8 <udev_builtin_add_property>
  444228:	ldurb	w8, [x29, #-224]
  44422c:	cbz	w8, 444274 <builtin_net_id+0x934>
  444230:	ldr	x8, [sp, #112]
  444234:	ldr	x3, [x8, #184]
  444238:	sub	x9, x29, #0xf8
  44423c:	add	x4, x9, #0x18
  444240:	add	x5, x9, #0x60
  444244:	add	x0, sp, #0x7c
  444248:	mov	x1, #0x10                  	// #16
  44424c:	ldr	x2, [sp, #96]
  444250:	bl	40b140 <snprintf@plt>
  444254:	cbz	w0, 444274 <builtin_net_id+0x934>
  444258:	ldr	x8, [sp, #112]
  44425c:	ldr	x0, [x8, #240]
  444260:	ldurb	w9, [x29, #-33]
  444264:	and	w1, w9, #0x1
  444268:	ldr	x2, [sp, #80]
  44426c:	add	x3, sp, #0x7c
  444270:	bl	43eae8 <udev_builtin_add_property>
  444274:	stur	wzr, [x29, #-4]
  444278:	b	444280 <builtin_net_id+0x940>
  44427c:	stur	wzr, [x29, #-4]
  444280:	ldur	w0, [x29, #-4]
  444284:	add	sp, sp, #0x200
  444288:	ldr	x28, [sp, #16]
  44428c:	ldp	x29, x30, [sp], #32
  444290:	ret

0000000000444294 <naming_scheme_has>:
  444294:	sub	sp, sp, #0x20
  444298:	stp	x29, x30, [sp, #16]
  44429c:	add	x29, sp, #0x10
  4442a0:	stur	w0, [x29, #-4]
  4442a4:	bl	44fa64 <naming_scheme>
  4442a8:	ldr	w8, [x0, #8]
  4442ac:	mvn	w8, w8
  4442b0:	ldur	w9, [x29, #-4]
  4442b4:	tst	w8, w9
  4442b8:	cset	w8, eq  // eq = none
  4442bc:	and	w0, w8, #0x1
  4442c0:	ldp	x29, x30, [sp, #16]
  4442c4:	add	sp, sp, #0x20
  4442c8:	ret

00000000004442cc <names_mac>:
  4442cc:	sub	sp, sp, #0x60
  4442d0:	stp	x29, x30, [sp, #80]
  4442d4:	add	x29, sp, #0x50
  4442d8:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4442dc:	add	x8, x8, #0xb5e
  4442e0:	sub	x2, x29, #0x20
  4442e4:	stur	x0, [x29, #-16]
  4442e8:	stur	x1, [x29, #-24]
  4442ec:	ldur	x0, [x29, #-16]
  4442f0:	mov	x1, x8
  4442f4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4442f8:	str	w0, [sp, #12]
  4442fc:	ldr	w9, [sp, #12]
  444300:	cmp	w9, #0x0
  444304:	cset	w9, ge  // ge = tcont
  444308:	tbnz	w9, #0, 444318 <names_mac+0x4c>
  44430c:	ldr	w8, [sp, #12]
  444310:	stur	w8, [x29, #-4]
  444314:	b	4444bc <names_mac+0x1f0>
  444318:	ldur	x0, [x29, #-32]
  44431c:	mov	x8, xzr
  444320:	mov	x1, x8
  444324:	mov	w9, wzr
  444328:	mov	w2, w9
  44432c:	bl	40b670 <strtoul@plt>
  444330:	str	x0, [sp, #40]
  444334:	ldr	x8, [sp, #40]
  444338:	cmp	x8, #0x20
  44433c:	cset	w9, eq  // eq = none
  444340:	eor	w9, w9, #0x1
  444344:	tbnz	w9, #0, 444358 <names_mac+0x8c>
  444348:	b	44434c <names_mac+0x80>
  44434c:	mov	w8, #0xffffffea            	// #-22
  444350:	stur	w8, [x29, #-4]
  444354:	b	4444bc <names_mac+0x1f0>
  444358:	ldur	x0, [x29, #-16]
  44435c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444360:	add	x1, x1, #0xc90
  444364:	sub	x2, x29, #0x20
  444368:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44436c:	str	w0, [sp, #12]
  444370:	ldr	w8, [sp, #12]
  444374:	cmp	w8, #0x0
  444378:	cset	w8, ge  // ge = tcont
  44437c:	tbnz	w8, #0, 44438c <names_mac+0xc0>
  444380:	ldr	w8, [sp, #12]
  444384:	stur	w8, [x29, #-4]
  444388:	b	4444bc <names_mac+0x1f0>
  44438c:	ldur	x0, [x29, #-32]
  444390:	mov	x8, xzr
  444394:	mov	x1, x8
  444398:	mov	w9, wzr
  44439c:	mov	w2, w9
  4443a0:	bl	40b670 <strtoul@plt>
  4443a4:	str	x0, [sp, #40]
  4443a8:	ldr	x8, [sp, #40]
  4443ac:	cbz	x8, 4443b8 <names_mac+0xec>
  4443b0:	stur	wzr, [x29, #-4]
  4443b4:	b	4444bc <names_mac+0x1f0>
  4443b8:	ldur	x0, [x29, #-16]
  4443bc:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4443c0:	add	x1, x1, #0xca1
  4443c4:	sub	x2, x29, #0x20
  4443c8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4443cc:	str	w0, [sp, #12]
  4443d0:	ldr	w8, [sp, #12]
  4443d4:	cmp	w8, #0x0
  4443d8:	cset	w8, ge  // ge = tcont
  4443dc:	tbnz	w8, #0, 4443ec <names_mac+0x120>
  4443e0:	ldr	w8, [sp, #12]
  4443e4:	stur	w8, [x29, #-4]
  4443e8:	b	4444bc <names_mac+0x1f0>
  4443ec:	ldur	x0, [x29, #-32]
  4443f0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4443f4:	add	x1, x1, #0xca9
  4443f8:	add	x2, sp, #0x24
  4443fc:	add	x3, sp, #0x20
  444400:	add	x4, sp, #0x1c
  444404:	add	x5, sp, #0x18
  444408:	add	x6, sp, #0x14
  44440c:	add	x7, sp, #0x10
  444410:	bl	40b6a0 <__isoc99_sscanf@plt>
  444414:	cmp	w0, #0x6
  444418:	b.eq	444428 <names_mac+0x15c>  // b.none
  44441c:	mov	w8, #0xffffffea            	// #-22
  444420:	stur	w8, [x29, #-4]
  444424:	b	4444bc <names_mac+0x1f0>
  444428:	ldr	w8, [sp, #36]
  44442c:	ldr	w9, [sp, #32]
  444430:	add	w8, w8, w9
  444434:	ldr	w9, [sp, #28]
  444438:	add	w8, w8, w9
  44443c:	ldr	w9, [sp, #24]
  444440:	add	w8, w8, w9
  444444:	ldr	w9, [sp, #20]
  444448:	add	w8, w8, w9
  44444c:	ldr	w9, [sp, #16]
  444450:	add	w8, w8, w9
  444454:	cbnz	w8, 444464 <names_mac+0x198>
  444458:	mov	w8, #0xffffffea            	// #-22
  44445c:	stur	w8, [x29, #-4]
  444460:	b	4444bc <names_mac+0x1f0>
  444464:	ldr	w8, [sp, #36]
  444468:	ldur	x9, [x29, #-24]
  44446c:	strb	w8, [x9, #4]
  444470:	ldr	w8, [sp, #32]
  444474:	ldur	x9, [x29, #-24]
  444478:	strb	w8, [x9, #5]
  44447c:	ldr	w8, [sp, #28]
  444480:	ldur	x9, [x29, #-24]
  444484:	strb	w8, [x9, #6]
  444488:	ldr	w8, [sp, #24]
  44448c:	ldur	x9, [x29, #-24]
  444490:	strb	w8, [x9, #7]
  444494:	ldr	w8, [sp, #20]
  444498:	ldur	x9, [x29, #-24]
  44449c:	strb	w8, [x9, #8]
  4444a0:	ldr	w8, [sp, #16]
  4444a4:	ldur	x9, [x29, #-24]
  4444a8:	strb	w8, [x9, #9]
  4444ac:	ldur	x9, [x29, #-24]
  4444b0:	mov	w8, #0x1                   	// #1
  4444b4:	strb	w8, [x9, #10]
  4444b8:	stur	wzr, [x29, #-4]
  4444bc:	ldur	w0, [x29, #-4]
  4444c0:	ldp	x29, x30, [sp, #80]
  4444c4:	add	sp, sp, #0x60
  4444c8:	ret

00000000004444cc <ieee_oui>:
  4444cc:	sub	sp, sp, #0x60
  4444d0:	stp	x29, x30, [sp, #80]
  4444d4:	add	x29, sp, #0x50
  4444d8:	mov	w8, #0x1                   	// #1
  4444dc:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  4444e0:	add	x9, x9, #0xbd2
  4444e4:	add	x9, x9, #0x3
  4444e8:	stur	x0, [x29, #-16]
  4444ec:	stur	x1, [x29, #-24]
  4444f0:	and	w8, w2, w8
  4444f4:	sturb	w8, [x29, #-25]
  4444f8:	ldur	x10, [x29, #-24]
  4444fc:	ldrb	w8, [x10, #10]
  444500:	str	x9, [sp, #8]
  444504:	tbnz	w8, #0, 444514 <ieee_oui+0x48>
  444508:	mov	w8, #0xfffffffe            	// #-2
  44450c:	stur	w8, [x29, #-4]
  444510:	b	4445fc <ieee_oui+0x130>
  444514:	ldur	x8, [x29, #-24]
  444518:	add	x0, x8, #0x4
  44451c:	adrp	x1, 472000 <on_inotify.__assert_in_set+0xe540>
  444520:	add	x1, x1, #0x89c
  444524:	mov	x2, #0x3                   	// #3
  444528:	bl	40b6b0 <memcmp@plt>
  44452c:	cbnz	w0, 44453c <ieee_oui+0x70>
  444530:	mov	w8, #0xffffffea            	// #-22
  444534:	stur	w8, [x29, #-4]
  444538:	b	4445fc <ieee_oui+0x130>
  44453c:	ldur	x8, [x29, #-24]
  444540:	ldrb	w3, [x8, #4]
  444544:	ldur	x8, [x29, #-24]
  444548:	ldrb	w4, [x8, #5]
  44454c:	ldur	x8, [x29, #-24]
  444550:	ldrb	w5, [x8, #6]
  444554:	ldur	x8, [x29, #-24]
  444558:	ldrb	w6, [x8, #7]
  44455c:	ldur	x8, [x29, #-24]
  444560:	ldrb	w7, [x8, #8]
  444564:	ldur	x8, [x29, #-24]
  444568:	ldrb	w9, [x8, #9]
  44456c:	add	x0, sp, #0x17
  444570:	mov	x1, #0x20                  	// #32
  444574:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  444578:	add	x2, x2, #0xcbb
  44457c:	mov	x8, sp
  444580:	str	w9, [x8]
  444584:	bl	40b140 <snprintf@plt>
  444588:	mov	w1, w0
  44458c:	sxtw	x8, w1
  444590:	cmp	x8, #0x20
  444594:	cset	w9, cc  // cc = lo, ul, last
  444598:	mov	w10, #0x1                   	// #1
  44459c:	eor	w9, w9, #0x1
  4445a0:	eor	w9, w9, w10
  4445a4:	eor	w9, w9, w10
  4445a8:	and	w9, w9, #0x1
  4445ac:	mov	w1, w9
  4445b0:	sxtw	x8, w1
  4445b4:	cbz	x8, 4445d8 <ieee_oui+0x10c>
  4445b8:	mov	w0, #0x1                   	// #1
  4445bc:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4445c0:	add	x1, x1, #0xbaf
  4445c4:	ldr	x2, [sp, #8]
  4445c8:	mov	w3, #0x2ff                 	// #767
  4445cc:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  4445d0:	add	x4, x4, #0xcd8
  4445d4:	bl	40a540 <log_assert_failed_realm@plt>
  4445d8:	ldur	x0, [x29, #-16]
  4445dc:	ldurb	w8, [x29, #-25]
  4445e0:	mov	x9, xzr
  4445e4:	mov	x1, x9
  4445e8:	add	x2, sp, #0x17
  4445ec:	mov	x3, x9
  4445f0:	and	w4, w8, #0x1
  4445f4:	bl	43f218 <udev_builtin_hwdb_lookup>
  4445f8:	stur	wzr, [x29, #-4]
  4445fc:	ldur	w0, [x29, #-4]
  444600:	ldp	x29, x30, [sp, #80]
  444604:	add	sp, sp, #0x60
  444608:	ret

000000000044460c <names_ccw>:
  44460c:	sub	sp, sp, #0x90
  444610:	stp	x29, x30, [sp, #128]
  444614:	add	x29, sp, #0x80
  444618:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  44461c:	add	x8, x8, #0xbd2
  444620:	add	x8, x8, #0x3
  444624:	stur	x0, [x29, #-16]
  444628:	stur	x1, [x29, #-24]
  44462c:	str	x8, [sp, #16]
  444630:	ldur	x8, [x29, #-16]
  444634:	cmp	x8, #0x0
  444638:	cset	w9, ne  // ne = any
  44463c:	mov	w10, #0x1                   	// #1
  444640:	eor	w9, w9, #0x1
  444644:	eor	w9, w9, w10
  444648:	eor	w9, w9, w10
  44464c:	and	w9, w9, #0x1
  444650:	mov	w0, w9
  444654:	sxtw	x8, w0
  444658:	cbz	x8, 44467c <names_ccw+0x70>
  44465c:	mov	w0, #0x1                   	// #1
  444660:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  444664:	add	x1, x1, #0xee1
  444668:	ldr	x2, [sp, #16]
  44466c:	mov	w3, #0x268                 	// #616
  444670:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444674:	add	x4, x4, #0xd0c
  444678:	bl	40a540 <log_assert_failed_realm@plt>
  44467c:	ldur	x8, [x29, #-24]
  444680:	cmp	x8, #0x0
  444684:	cset	w9, ne  // ne = any
  444688:	mov	w10, #0x1                   	// #1
  44468c:	eor	w9, w9, #0x1
  444690:	eor	w9, w9, w10
  444694:	eor	w9, w9, w10
  444698:	and	w9, w9, #0x1
  44469c:	mov	w0, w9
  4446a0:	sxtw	x8, w0
  4446a4:	cbz	x8, 4446c8 <names_ccw+0xbc>
  4446a8:	mov	w0, #0x1                   	// #1
  4446ac:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4446b0:	add	x1, x1, #0xd3a
  4446b4:	ldr	x2, [sp, #16]
  4446b8:	mov	w3, #0x269                 	// #617
  4446bc:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  4446c0:	add	x4, x4, #0xd0c
  4446c4:	bl	40a540 <log_assert_failed_realm@plt>
  4446c8:	ldur	x0, [x29, #-16]
  4446cc:	sub	x1, x29, #0x20
  4446d0:	bl	40abc0 <sd_device_get_parent@plt>
  4446d4:	str	w0, [sp, #60]
  4446d8:	ldr	w8, [sp, #60]
  4446dc:	cmp	w8, #0x0
  4446e0:	cset	w8, ge  // ge = tcont
  4446e4:	tbnz	w8, #0, 4446f4 <names_ccw+0xe8>
  4446e8:	ldr	w8, [sp, #60]
  4446ec:	stur	w8, [x29, #-4]
  4446f0:	b	444884 <names_ccw+0x278>
  4446f4:	ldur	x0, [x29, #-32]
  4446f8:	bl	445704 <skip_virtio>
  4446fc:	stur	x0, [x29, #-32]
  444700:	ldur	x8, [x29, #-32]
  444704:	cbnz	x8, 444714 <names_ccw+0x108>
  444708:	mov	w8, #0xfffffffe            	// #-2
  44470c:	stur	w8, [x29, #-4]
  444710:	b	444884 <names_ccw+0x278>
  444714:	ldur	x0, [x29, #-32]
  444718:	sub	x1, x29, #0x30
  44471c:	bl	40aa10 <sd_device_get_subsystem@plt>
  444720:	str	w0, [sp, #60]
  444724:	ldr	w8, [sp, #60]
  444728:	cmp	w8, #0x0
  44472c:	cset	w8, ge  // ge = tcont
  444730:	tbnz	w8, #0, 444740 <names_ccw+0x134>
  444734:	ldr	w8, [sp, #60]
  444738:	stur	w8, [x29, #-4]
  44473c:	b	444884 <names_ccw+0x278>
  444740:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  444744:	add	x8, x8, #0x150
  444748:	ldr	q0, [x8]
  44474c:	add	x0, sp, #0x20
  444750:	str	q0, [sp, #32]
  444754:	ldr	x8, [x8, #16]
  444758:	str	x8, [sp, #48]
  44475c:	ldur	x1, [x29, #-48]
  444760:	bl	40b2e0 <strv_find@plt>
  444764:	cbnz	x0, 444774 <names_ccw+0x168>
  444768:	mov	w8, #0xfffffffe            	// #-2
  44476c:	stur	w8, [x29, #-4]
  444770:	b	444884 <names_ccw+0x278>
  444774:	ldur	x0, [x29, #-32]
  444778:	sub	x1, x29, #0x28
  44477c:	bl	40a860 <sd_device_get_sysname@plt>
  444780:	str	w0, [sp, #60]
  444784:	ldr	w8, [sp, #60]
  444788:	cmp	w8, #0x0
  44478c:	cset	w8, ge  // ge = tcont
  444790:	tbnz	w8, #0, 4447a0 <names_ccw+0x194>
  444794:	ldr	w8, [sp, #60]
  444798:	stur	w8, [x29, #-4]
  44479c:	b	444884 <names_ccw+0x278>
  4447a0:	ldur	x0, [x29, #-40]
  4447a4:	bl	40a800 <strlen@plt>
  4447a8:	stur	x0, [x29, #-56]
  4447ac:	mov	w8, #0x0                   	// #0
  4447b0:	strb	w8, [sp, #31]
  4447b4:	ldur	x9, [x29, #-56]
  4447b8:	subs	x9, x9, #0x8
  4447bc:	cmp	x9, #0x1
  4447c0:	cset	w8, ls  // ls = plast
  4447c4:	eor	w8, w8, #0x1
  4447c8:	tbnz	w8, #0, 4447dc <names_ccw+0x1d0>
  4447cc:	b	4447d0 <names_ccw+0x1c4>
  4447d0:	mov	w8, #0x1                   	// #1
  4447d4:	strb	w8, [sp, #31]
  4447d8:	b	4447dc <names_ccw+0x1d0>
  4447dc:	ldrb	w8, [sp, #31]
  4447e0:	and	w8, w8, #0x1
  4447e4:	strb	w8, [sp, #30]
  4447e8:	ldrb	w8, [sp, #30]
  4447ec:	tbnz	w8, #0, 4447fc <names_ccw+0x1f0>
  4447f0:	mov	w8, #0xffffffea            	// #-22
  4447f4:	stur	w8, [x29, #-4]
  4447f8:	b	444884 <names_ccw+0x278>
  4447fc:	ldur	x0, [x29, #-40]
  444800:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444804:	add	x1, x1, #0xd4d
  444808:	bl	40b080 <strspn@plt>
  44480c:	str	x0, [sp, #64]
  444810:	ldr	x8, [sp, #64]
  444814:	ldur	x9, [x29, #-56]
  444818:	cmp	x8, x9
  44481c:	b.cs	44482c <names_ccw+0x220>  // b.hs, b.nlast
  444820:	ldr	x8, [sp, #64]
  444824:	str	x8, [sp, #8]
  444828:	b	444838 <names_ccw+0x22c>
  44482c:	ldur	x8, [x29, #-56]
  444830:	subs	x8, x8, #0x1
  444834:	str	x8, [sp, #8]
  444838:	ldr	x8, [sp, #8]
  44483c:	ldur	x9, [x29, #-40]
  444840:	add	x8, x9, x8
  444844:	stur	x8, [x29, #-40]
  444848:	ldur	x8, [x29, #-24]
  44484c:	add	x0, x8, #0x70
  444850:	ldur	x3, [x29, #-40]
  444854:	mov	x1, #0x10                  	// #16
  444858:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  44485c:	add	x2, x2, #0xd50
  444860:	bl	40b140 <snprintf@plt>
  444864:	mov	w1, w0
  444868:	sxtw	x8, w1
  44486c:	cmp	x8, #0x10
  444870:	b.cs	444880 <names_ccw+0x274>  // b.hs, b.nlast
  444874:	ldur	x8, [x29, #-24]
  444878:	mov	w9, #0x5                   	// #5
  44487c:	str	w9, [x8]
  444880:	stur	wzr, [x29, #-4]
  444884:	ldur	w0, [x29, #-4]
  444888:	ldp	x29, x30, [sp, #128]
  44488c:	add	sp, sp, #0x90
  444890:	ret

0000000000444894 <names_vio>:
  444894:	sub	sp, sp, #0x60
  444898:	stp	x29, x30, [sp, #80]
  44489c:	add	x29, sp, #0x50
  4448a0:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4448a4:	add	x8, x8, #0xbd2
  4448a8:	add	x2, x8, #0x3
  4448ac:	sub	x8, x29, #0x20
  4448b0:	stur	x0, [x29, #-16]
  4448b4:	stur	x1, [x29, #-24]
  4448b8:	ldur	x0, [x29, #-16]
  4448bc:	mov	x1, x8
  4448c0:	str	x2, [sp]
  4448c4:	bl	40abc0 <sd_device_get_parent@plt>
  4448c8:	str	w0, [sp, #12]
  4448cc:	ldr	w9, [sp, #12]
  4448d0:	cmp	w9, #0x0
  4448d4:	cset	w9, ge  // ge = tcont
  4448d8:	tbnz	w9, #0, 4448e8 <names_vio+0x54>
  4448dc:	ldr	w8, [sp, #12]
  4448e0:	stur	w8, [x29, #-4]
  4448e4:	b	444a0c <names_vio+0x178>
  4448e8:	ldur	x0, [x29, #-32]
  4448ec:	add	x1, sp, #0x10
  4448f0:	bl	40aa10 <sd_device_get_subsystem@plt>
  4448f4:	str	w0, [sp, #12]
  4448f8:	ldr	w8, [sp, #12]
  4448fc:	cmp	w8, #0x0
  444900:	cset	w8, ge  // ge = tcont
  444904:	tbnz	w8, #0, 444914 <names_vio+0x80>
  444908:	ldr	w8, [sp, #12]
  44490c:	stur	w8, [x29, #-4]
  444910:	b	444a0c <names_vio+0x178>
  444914:	ldr	x1, [sp, #16]
  444918:	adrp	x0, 46c000 <on_inotify.__assert_in_set+0x8540>
  44491c:	add	x0, x0, #0xd5b
  444920:	bl	40aa20 <strcmp@plt>
  444924:	cbz	w0, 444934 <names_vio+0xa0>
  444928:	mov	w8, #0xfffffffe            	// #-2
  44492c:	stur	w8, [x29, #-4]
  444930:	b	444a0c <names_vio+0x178>
  444934:	ldur	x0, [x29, #-16]
  444938:	add	x1, sp, #0x18
  44493c:	bl	40abf0 <sd_device_get_syspath@plt>
  444940:	str	w0, [sp, #12]
  444944:	ldr	w8, [sp, #12]
  444948:	cmp	w8, #0x0
  44494c:	cset	w8, ge  // ge = tcont
  444950:	tbnz	w8, #0, 444960 <names_vio+0xcc>
  444954:	ldr	w8, [sp, #12]
  444958:	stur	w8, [x29, #-4]
  44495c:	b	444a0c <names_vio+0x178>
  444960:	ldr	x0, [sp, #24]
  444964:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444968:	add	x1, x1, #0xd5f
  44496c:	sub	x2, x29, #0x24
  444970:	add	x3, sp, #0x28
  444974:	add	x4, sp, #0x24
  444978:	bl	40b6a0 <__isoc99_sscanf@plt>
  44497c:	cmp	w0, #0x3
  444980:	b.eq	444990 <names_vio+0xfc>  // b.none
  444984:	mov	w8, #0xffffffea            	// #-22
  444988:	stur	w8, [x29, #-4]
  44498c:	b	444a0c <names_vio+0x178>
  444990:	ldur	x8, [x29, #-24]
  444994:	add	x0, x8, #0x80
  444998:	ldr	w3, [sp, #40]
  44499c:	mov	x1, #0x10                  	// #16
  4449a0:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  4449a4:	add	x2, x2, #0xd81
  4449a8:	bl	40b140 <snprintf@plt>
  4449ac:	mov	w1, w0
  4449b0:	sxtw	x8, w1
  4449b4:	cmp	x8, #0x10
  4449b8:	cset	w9, cc  // cc = lo, ul, last
  4449bc:	mov	w10, #0x1                   	// #1
  4449c0:	eor	w9, w9, #0x1
  4449c4:	eor	w9, w9, w10
  4449c8:	eor	w9, w9, w10
  4449cc:	and	w9, w9, #0x1
  4449d0:	mov	w1, w9
  4449d4:	sxtw	x8, w1
  4449d8:	cbz	x8, 4449fc <names_vio+0x168>
  4449dc:	mov	w0, #0x1                   	// #1
  4449e0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4449e4:	add	x1, x1, #0xd85
  4449e8:	ldr	x2, [sp]
  4449ec:	mov	w3, #0x190                 	// #400
  4449f0:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  4449f4:	add	x4, x4, #0xdb4
  4449f8:	bl	40a540 <log_assert_failed_realm@plt>
  4449fc:	ldur	x8, [x29, #-24]
  444a00:	mov	w9, #0x6                   	// #6
  444a04:	str	w9, [x8]
  444a08:	stur	wzr, [x29, #-4]
  444a0c:	ldur	w0, [x29, #-4]
  444a10:	ldp	x29, x30, [sp, #80]
  444a14:	add	sp, sp, #0x60
  444a18:	ret

0000000000444a1c <names_platform>:
  444a1c:	sub	sp, sp, #0x80
  444a20:	stp	x29, x30, [sp, #112]
  444a24:	add	x29, sp, #0x70
  444a28:	mov	w8, #0x1                   	// #1
  444a2c:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  444a30:	add	x9, x9, #0xbd2
  444a34:	add	x9, x9, #0x3
  444a38:	sub	x10, x29, #0x28
  444a3c:	stur	x0, [x29, #-16]
  444a40:	stur	x1, [x29, #-24]
  444a44:	and	w8, w2, w8
  444a48:	sturb	w8, [x29, #-25]
  444a4c:	ldur	x0, [x29, #-16]
  444a50:	mov	x1, x10
  444a54:	str	x9, [sp]
  444a58:	bl	40abc0 <sd_device_get_parent@plt>
  444a5c:	str	w0, [sp, #12]
  444a60:	ldr	w8, [sp, #12]
  444a64:	cmp	w8, #0x0
  444a68:	cset	w8, ge  // ge = tcont
  444a6c:	tbnz	w8, #0, 444a7c <names_platform+0x60>
  444a70:	ldr	w8, [sp, #12]
  444a74:	stur	w8, [x29, #-4]
  444a78:	b	444c2c <names_platform+0x210>
  444a7c:	ldur	x0, [x29, #-40]
  444a80:	add	x1, sp, #0x10
  444a84:	bl	40aa10 <sd_device_get_subsystem@plt>
  444a88:	str	w0, [sp, #12]
  444a8c:	ldr	w8, [sp, #12]
  444a90:	cmp	w8, #0x0
  444a94:	cset	w8, ge  // ge = tcont
  444a98:	tbnz	w8, #0, 444aa8 <names_platform+0x8c>
  444a9c:	ldr	w8, [sp, #12]
  444aa0:	stur	w8, [x29, #-4]
  444aa4:	b	444c2c <names_platform+0x210>
  444aa8:	ldr	x1, [sp, #16]
  444aac:	adrp	x0, 46c000 <on_inotify.__assert_in_set+0x8540>
  444ab0:	add	x0, x0, #0xde2
  444ab4:	bl	40aa20 <strcmp@plt>
  444ab8:	cbz	w0, 444ac8 <names_platform+0xac>
  444abc:	mov	w8, #0xfffffffe            	// #-2
  444ac0:	stur	w8, [x29, #-4]
  444ac4:	b	444c2c <names_platform+0x210>
  444ac8:	ldur	x0, [x29, #-16]
  444acc:	add	x1, sp, #0x28
  444ad0:	bl	40abf0 <sd_device_get_syspath@plt>
  444ad4:	str	w0, [sp, #12]
  444ad8:	ldr	w8, [sp, #12]
  444adc:	cmp	w8, #0x0
  444ae0:	cset	w8, ge  // ge = tcont
  444ae4:	tbnz	w8, #0, 444af4 <names_platform+0xd8>
  444ae8:	ldr	w8, [sp, #12]
  444aec:	stur	w8, [x29, #-4]
  444af0:	b	444c2c <names_platform+0x210>
  444af4:	ldr	x0, [sp, #40]
  444af8:	bl	40a800 <strlen@plt>
  444afc:	cmp	x0, #0x1f
  444b00:	b.cs	444b10 <names_platform+0xf4>  // b.hs, b.nlast
  444b04:	mov	w8, #0xffffffea            	// #-22
  444b08:	stur	w8, [x29, #-4]
  444b0c:	b	444c2c <names_platform+0x210>
  444b10:	ldr	x8, [sp, #40]
  444b14:	ldrb	w9, [x8, #30]
  444b18:	cmp	w9, #0x3a
  444b1c:	b.ne	444b3c <names_platform+0x120>  // b.any
  444b20:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  444b24:	add	x8, x8, #0xdeb
  444b28:	str	x8, [sp, #32]
  444b2c:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  444b30:	add	x8, x8, #0xe16
  444b34:	str	x8, [sp, #24]
  444b38:	b	444b54 <names_platform+0x138>
  444b3c:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  444b40:	add	x8, x8, #0xe3b
  444b44:	str	x8, [sp, #32]
  444b48:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  444b4c:	add	x8, x8, #0xe66
  444b50:	str	x8, [sp, #24]
  444b54:	ldr	x0, [sp, #40]
  444b58:	ldr	x1, [sp, #32]
  444b5c:	sub	x2, x29, #0x2d
  444b60:	sub	x3, x29, #0x34
  444b64:	add	x4, sp, #0x38
  444b68:	add	x5, sp, #0x34
  444b6c:	bl	40b6a0 <__isoc99_sscanf@plt>
  444b70:	cmp	w0, #0x4
  444b74:	b.eq	444b84 <names_platform+0x168>  // b.none
  444b78:	mov	w8, #0xffffffea            	// #-22
  444b7c:	stur	w8, [x29, #-4]
  444b80:	b	444c2c <names_platform+0x210>
  444b84:	ldr	x1, [sp, #24]
  444b88:	sub	x0, x29, #0x2d
  444b8c:	bl	445798 <in_charset>
  444b90:	tbnz	w0, #0, 444ba0 <names_platform+0x184>
  444b94:	mov	w8, #0xfffffffe            	// #-2
  444b98:	stur	w8, [x29, #-4]
  444b9c:	b	444c2c <names_platform+0x210>
  444ba0:	sub	x0, x29, #0x2d
  444ba4:	bl	40b6c0 <ascii_strlower@plt>
  444ba8:	ldur	x8, [x29, #-24]
  444bac:	add	x0, x8, #0x90
  444bb0:	ldur	w4, [x29, #-52]
  444bb4:	ldr	w5, [sp, #56]
  444bb8:	mov	x1, #0x10                  	// #16
  444bbc:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  444bc0:	add	x2, x2, #0xe81
  444bc4:	sub	x3, x29, #0x2d
  444bc8:	bl	40b140 <snprintf@plt>
  444bcc:	mov	w1, w0
  444bd0:	sxtw	x8, w1
  444bd4:	cmp	x8, #0x10
  444bd8:	cset	w9, cc  // cc = lo, ul, last
  444bdc:	mov	w10, #0x1                   	// #1
  444be0:	eor	w9, w9, #0x1
  444be4:	eor	w9, w9, w10
  444be8:	eor	w9, w9, w10
  444bec:	and	w9, w9, #0x1
  444bf0:	mov	w1, w9
  444bf4:	sxtw	x8, w1
  444bf8:	cbz	x8, 444c1c <names_platform+0x200>
  444bfc:	mov	w0, #0x1                   	// #1
  444c00:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444c04:	add	x1, x1, #0xe8a
  444c08:	ldr	x2, [sp]
  444c0c:	mov	w3, #0x1cd                 	// #461
  444c10:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444c14:	add	x4, x4, #0xebe
  444c18:	bl	40a540 <log_assert_failed_realm@plt>
  444c1c:	ldur	x8, [x29, #-24]
  444c20:	mov	w9, #0x7                   	// #7
  444c24:	str	w9, [x8]
  444c28:	stur	wzr, [x29, #-4]
  444c2c:	ldur	w0, [x29, #-4]
  444c30:	ldp	x29, x30, [sp, #112]
  444c34:	add	sp, sp, #0x80
  444c38:	ret

0000000000444c3c <names_netdevsim>:
  444c3c:	sub	sp, sp, #0x60
  444c40:	stp	x29, x30, [sp, #80]
  444c44:	add	x29, sp, #0x50
  444c48:	mov	x8, xzr
  444c4c:	mov	w9, #0x40                  	// #64
  444c50:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  444c54:	add	x10, x10, #0xbd2
  444c58:	add	x10, x10, #0x3
  444c5c:	stur	x0, [x29, #-16]
  444c60:	stur	x1, [x29, #-24]
  444c64:	str	x8, [sp, #24]
  444c68:	mov	w0, w9
  444c6c:	str	x10, [sp, #8]
  444c70:	bl	444294 <naming_scheme_has>
  444c74:	tbnz	w0, #0, 444c80 <names_netdevsim+0x44>
  444c78:	stur	wzr, [x29, #-4]
  444c7c:	b	444e38 <names_netdevsim+0x1fc>
  444c80:	ldur	x8, [x29, #-16]
  444c84:	cmp	x8, #0x0
  444c88:	cset	w9, ne  // ne = any
  444c8c:	mov	w10, #0x1                   	// #1
  444c90:	eor	w9, w9, #0x1
  444c94:	eor	w9, w9, w10
  444c98:	eor	w9, w9, w10
  444c9c:	and	w9, w9, #0x1
  444ca0:	mov	w0, w9
  444ca4:	sxtw	x8, w0
  444ca8:	cbz	x8, 444ccc <names_netdevsim+0x90>
  444cac:	mov	w0, #0x1                   	// #1
  444cb0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  444cb4:	add	x1, x1, #0xee1
  444cb8:	ldr	x2, [sp, #8]
  444cbc:	mov	w3, #0x2da                 	// #730
  444cc0:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444cc4:	add	x4, x4, #0xf48
  444cc8:	bl	40a540 <log_assert_failed_realm@plt>
  444ccc:	ldur	x8, [x29, #-24]
  444cd0:	cmp	x8, #0x0
  444cd4:	cset	w9, ne  // ne = any
  444cd8:	mov	w10, #0x1                   	// #1
  444cdc:	eor	w9, w9, #0x1
  444ce0:	eor	w9, w9, w10
  444ce4:	eor	w9, w9, w10
  444ce8:	and	w9, w9, #0x1
  444cec:	mov	w0, w9
  444cf0:	sxtw	x8, w0
  444cf4:	cbz	x8, 444d18 <names_netdevsim+0xdc>
  444cf8:	mov	w0, #0x1                   	// #1
  444cfc:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444d00:	add	x1, x1, #0xd3a
  444d04:	ldr	x2, [sp, #8]
  444d08:	mov	w3, #0x2db                 	// #731
  444d0c:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444d10:	add	x4, x4, #0xf48
  444d14:	bl	40a540 <log_assert_failed_realm@plt>
  444d18:	ldur	x0, [x29, #-16]
  444d1c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444d20:	add	x1, x1, #0xf7c
  444d24:	mov	x8, xzr
  444d28:	mov	x2, x8
  444d2c:	sub	x3, x29, #0x20
  444d30:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  444d34:	str	w0, [sp, #20]
  444d38:	ldr	w9, [sp, #20]
  444d3c:	cmp	w9, #0x0
  444d40:	cset	w9, ge  // ge = tcont
  444d44:	tbnz	w9, #0, 444d54 <names_netdevsim+0x118>
  444d48:	ldr	w8, [sp, #20]
  444d4c:	stur	w8, [x29, #-4]
  444d50:	b	444e38 <names_netdevsim+0x1fc>
  444d54:	ldur	x0, [x29, #-32]
  444d58:	add	x1, sp, #0x28
  444d5c:	bl	40a860 <sd_device_get_sysname@plt>
  444d60:	str	w0, [sp, #20]
  444d64:	ldr	w8, [sp, #20]
  444d68:	cmp	w8, #0x0
  444d6c:	cset	w8, ge  // ge = tcont
  444d70:	tbnz	w8, #0, 444d80 <names_netdevsim+0x144>
  444d74:	ldr	w8, [sp, #20]
  444d78:	stur	w8, [x29, #-4]
  444d7c:	b	444e38 <names_netdevsim+0x1fc>
  444d80:	ldr	x0, [sp, #40]
  444d84:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444d88:	add	x1, x1, #0xf86
  444d8c:	add	x2, sp, #0x24
  444d90:	bl	40b6a0 <__isoc99_sscanf@plt>
  444d94:	cmp	w0, #0x1
  444d98:	b.eq	444da8 <names_netdevsim+0x16c>  // b.none
  444d9c:	mov	w8, #0xffffffea            	// #-22
  444da0:	stur	w8, [x29, #-4]
  444da4:	b	444e38 <names_netdevsim+0x1fc>
  444da8:	ldur	x0, [x29, #-16]
  444dac:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444db0:	add	x1, x1, #0xf92
  444db4:	add	x2, sp, #0x18
  444db8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  444dbc:	str	w0, [sp, #20]
  444dc0:	ldr	w8, [sp, #20]
  444dc4:	cmp	w8, #0x0
  444dc8:	cset	w8, ge  // ge = tcont
  444dcc:	tbnz	w8, #0, 444ddc <names_netdevsim+0x1a0>
  444dd0:	ldr	w8, [sp, #20]
  444dd4:	stur	w8, [x29, #-4]
  444dd8:	b	444e38 <names_netdevsim+0x1fc>
  444ddc:	ldur	x8, [x29, #-24]
  444de0:	add	x0, x8, #0xa0
  444de4:	ldr	w3, [sp, #36]
  444de8:	ldr	x4, [sp, #24]
  444dec:	mov	x1, #0x10                  	// #16
  444df0:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  444df4:	add	x2, x2, #0xfa1
  444df8:	bl	40b140 <snprintf@plt>
  444dfc:	mov	w1, w0
  444e00:	sxtw	x8, w1
  444e04:	cmp	x8, #0x10
  444e08:	cset	w9, cc  // cc = lo, ul, last
  444e0c:	and	w9, w9, #0x1
  444e10:	strb	w9, [sp, #19]
  444e14:	ldrb	w9, [sp, #19]
  444e18:	tbnz	w9, #0, 444e28 <names_netdevsim+0x1ec>
  444e1c:	mov	w8, #0xffffff97            	// #-105
  444e20:	stur	w8, [x29, #-4]
  444e24:	b	444e38 <names_netdevsim+0x1fc>
  444e28:	ldur	x8, [x29, #-24]
  444e2c:	mov	w9, #0x8                   	// #8
  444e30:	str	w9, [x8]
  444e34:	stur	wzr, [x29, #-4]
  444e38:	ldur	w0, [x29, #-4]
  444e3c:	ldp	x29, x30, [sp, #80]
  444e40:	add	sp, sp, #0x60
  444e44:	ret

0000000000444e48 <names_pci>:
  444e48:	sub	sp, sp, #0x150
  444e4c:	stp	x29, x30, [sp, #304]
  444e50:	str	x28, [sp, #320]
  444e54:	add	x29, sp, #0x130
  444e58:	sub	x8, x29, #0x20
  444e5c:	mov	x2, #0xb0                  	// #176
  444e60:	mov	w9, wzr
  444e64:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  444e68:	add	x10, x10, #0xbd2
  444e6c:	add	x10, x10, #0x3
  444e70:	add	x11, sp, #0x60
  444e74:	str	x0, [x8, #16]
  444e78:	str	x1, [x8, #8]
  444e7c:	mov	x0, x11
  444e80:	mov	w1, w9
  444e84:	str	x8, [sp, #48]
  444e88:	str	x10, [sp, #40]
  444e8c:	bl	40a5f0 <memset@plt>
  444e90:	str	xzr, [sp, #72]
  444e94:	str	xzr, [sp, #80]
  444e98:	str	xzr, [sp, #88]
  444e9c:	ldr	x8, [sp, #48]
  444ea0:	ldr	x9, [x8, #16]
  444ea4:	cmp	x9, #0x0
  444ea8:	cset	w10, ne  // ne = any
  444eac:	mov	w11, #0x1                   	// #1
  444eb0:	eor	w10, w10, #0x1
  444eb4:	eor	w10, w10, w11
  444eb8:	eor	w10, w10, w11
  444ebc:	and	w10, w10, #0x1
  444ec0:	mov	w0, w10
  444ec4:	sxtw	x9, w0
  444ec8:	cbz	x9, 444eec <names_pci+0xa4>
  444ecc:	mov	w0, #0x1                   	// #1
  444ed0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  444ed4:	add	x1, x1, #0xee1
  444ed8:	ldr	x2, [sp, #40]
  444edc:	mov	w3, #0x1d9                 	// #473
  444ee0:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444ee4:	add	x4, x4, #0xfa8
  444ee8:	bl	40a540 <log_assert_failed_realm@plt>
  444eec:	ldr	x8, [sp, #48]
  444ef0:	ldr	x9, [x8, #8]
  444ef4:	cmp	x9, #0x0
  444ef8:	cset	w10, ne  // ne = any
  444efc:	mov	w11, #0x1                   	// #1
  444f00:	eor	w10, w10, #0x1
  444f04:	eor	w10, w10, w11
  444f08:	eor	w10, w10, w11
  444f0c:	and	w10, w10, #0x1
  444f10:	mov	w0, w10
  444f14:	sxtw	x9, w0
  444f18:	cbz	x9, 444f3c <names_pci+0xf4>
  444f1c:	mov	w0, #0x1                   	// #1
  444f20:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444f24:	add	x1, x1, #0xd3a
  444f28:	ldr	x2, [sp, #40]
  444f2c:	mov	w3, #0x1da                 	// #474
  444f30:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  444f34:	add	x4, x4, #0xfa8
  444f38:	bl	40a540 <log_assert_failed_realm@plt>
  444f3c:	ldr	x8, [sp, #48]
  444f40:	ldr	x0, [x8, #16]
  444f44:	sub	x1, x29, #0x20
  444f48:	bl	40abc0 <sd_device_get_parent@plt>
  444f4c:	str	w0, [sp, #60]
  444f50:	ldr	w9, [sp, #60]
  444f54:	cmp	w9, #0x0
  444f58:	cset	w9, ge  // ge = tcont
  444f5c:	tbnz	w9, #0, 444f6c <names_pci+0x124>
  444f60:	ldr	w8, [sp, #60]
  444f64:	stur	w8, [x29, #-4]
  444f68:	b	4451f8 <names_pci+0x3b0>
  444f6c:	ldr	x8, [sp, #48]
  444f70:	ldr	x0, [x8]
  444f74:	bl	445704 <skip_virtio>
  444f78:	ldr	x8, [sp, #48]
  444f7c:	str	x0, [x8]
  444f80:	ldr	x9, [x8]
  444f84:	cbnz	x9, 444f94 <names_pci+0x14c>
  444f88:	mov	w8, #0xfffffffe            	// #-2
  444f8c:	stur	w8, [x29, #-4]
  444f90:	b	4451f8 <names_pci+0x3b0>
  444f94:	ldr	x8, [sp, #48]
  444f98:	ldr	x0, [x8]
  444f9c:	add	x1, sp, #0x40
  444fa0:	bl	40aa10 <sd_device_get_subsystem@plt>
  444fa4:	cmp	w0, #0x0
  444fa8:	cset	w9, lt  // lt = tstop
  444fac:	tbnz	w9, #0, 444fe4 <names_pci+0x19c>
  444fb0:	ldr	x1, [sp, #64]
  444fb4:	adrp	x0, 46c000 <on_inotify.__assert_in_set+0x8540>
  444fb8:	add	x0, x0, #0xfd6
  444fbc:	bl	40aa20 <strcmp@plt>
  444fc0:	cbnz	w0, 444fe4 <names_pci+0x19c>
  444fc4:	ldr	x8, [sp, #48]
  444fc8:	ldr	x9, [x8, #8]
  444fcc:	mov	w10, #0x1                   	// #1
  444fd0:	str	w10, [x9]
  444fd4:	ldr	x9, [x8]
  444fd8:	ldr	x11, [x8, #8]
  444fdc:	str	x9, [x11, #16]
  444fe0:	b	445028 <names_pci+0x1e0>
  444fe4:	ldr	x8, [sp, #48]
  444fe8:	ldr	x0, [x8, #16]
  444fec:	ldr	x9, [x8, #8]
  444ff0:	add	x3, x9, #0x10
  444ff4:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  444ff8:	add	x1, x1, #0xfd6
  444ffc:	mov	x9, xzr
  445000:	mov	x2, x9
  445004:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  445008:	str	w0, [sp, #60]
  44500c:	ldr	w10, [sp, #60]
  445010:	cmp	w10, #0x0
  445014:	cset	w10, ge  // ge = tcont
  445018:	tbnz	w10, #0, 445028 <names_pci+0x1e0>
  44501c:	ldr	w8, [sp, #60]
  445020:	stur	w8, [x29, #-4]
  445024:	b	4451f8 <names_pci+0x3b0>
  445028:	mov	w0, #0x1                   	// #1
  44502c:	bl	444294 <naming_scheme_has>
  445030:	tbnz	w0, #0, 445038 <names_pci+0x1f0>
  445034:	b	4451d0 <names_pci+0x388>
  445038:	ldr	x8, [sp, #48]
  44503c:	ldr	x0, [x8, #16]
  445040:	ldr	x1, [x8, #8]
  445044:	add	x2, sp, #0x48
  445048:	bl	445888 <get_virtfn_info>
  44504c:	cmp	w0, #0x0
  445050:	cset	w9, lt  // lt = tstop
  445054:	tbnz	w9, #0, 4451d0 <names_pci+0x388>
  445058:	ldr	x8, [sp, #72]
  44505c:	add	x9, sp, #0x60
  445060:	str	x8, [x9, #16]
  445064:	ldr	x8, [sp, #48]
  445068:	ldr	x0, [x8, #16]
  44506c:	mov	x1, x9
  445070:	str	x9, [sp, #32]
  445074:	bl	445ebc <dev_pci_onboard>
  445078:	ldr	x8, [sp, #48]
  44507c:	ldr	x9, [x8, #16]
  445080:	mov	x0, x9
  445084:	ldr	x1, [sp, #32]
  445088:	bl	4460d4 <dev_pci_slot>
  44508c:	ldr	x8, [sp, #32]
  445090:	ldrb	w10, [x8, #56]
  445094:	cbz	w10, 4450f4 <names_pci+0x2ac>
  445098:	add	x8, sp, #0x60
  44509c:	add	x0, x8, #0x38
  4450a0:	bl	40a800 <strlen@plt>
  4450a4:	add	x8, sp, #0x48
  4450a8:	add	x8, x8, #0x8
  4450ac:	str	x0, [sp, #24]
  4450b0:	mov	x0, x8
  4450b4:	bl	40a800 <strlen@plt>
  4450b8:	ldr	x8, [sp, #24]
  4450bc:	add	x9, x8, x0
  4450c0:	cmp	x9, #0x10
  4450c4:	b.cs	4450f4 <names_pci+0x2ac>  // b.hs, b.nlast
  4450c8:	ldr	x8, [sp, #48]
  4450cc:	ldr	x9, [x8, #8]
  4450d0:	add	x0, x9, #0x38
  4450d4:	add	x9, sp, #0x60
  4450d8:	add	x2, x9, #0x38
  4450dc:	add	x9, sp, #0x48
  4450e0:	add	x3, x9, #0x8
  4450e4:	mov	x1, #0x10                  	// #16
  4450e8:	mov	x9, xzr
  4450ec:	mov	x4, x9
  4450f0:	bl	40b400 <strscpyl@plt>
  4450f4:	add	x8, sp, #0x60
  4450f8:	ldrb	w9, [x8, #24]
  4450fc:	cbz	w9, 44515c <names_pci+0x314>
  445100:	add	x8, sp, #0x60
  445104:	add	x0, x8, #0x18
  445108:	bl	40a800 <strlen@plt>
  44510c:	add	x8, sp, #0x48
  445110:	add	x8, x8, #0x8
  445114:	str	x0, [sp, #16]
  445118:	mov	x0, x8
  44511c:	bl	40a800 <strlen@plt>
  445120:	ldr	x8, [sp, #16]
  445124:	add	x9, x8, x0
  445128:	cmp	x9, #0x10
  44512c:	b.cs	44515c <names_pci+0x314>  // b.hs, b.nlast
  445130:	ldr	x8, [sp, #48]
  445134:	ldr	x9, [x8, #8]
  445138:	add	x0, x9, #0x18
  44513c:	add	x9, sp, #0x60
  445140:	add	x2, x9, #0x18
  445144:	add	x9, sp, #0x48
  445148:	add	x3, x9, #0x8
  44514c:	mov	x1, #0x10                  	// #16
  445150:	mov	x9, xzr
  445154:	mov	x4, x9
  445158:	bl	40b400 <strscpyl@plt>
  44515c:	add	x8, sp, #0x60
  445160:	ldrb	w9, [x8, #40]
  445164:	cbz	w9, 4451c4 <names_pci+0x37c>
  445168:	add	x8, sp, #0x60
  44516c:	add	x0, x8, #0x28
  445170:	bl	40a800 <strlen@plt>
  445174:	add	x8, sp, #0x48
  445178:	add	x8, x8, #0x8
  44517c:	str	x0, [sp, #8]
  445180:	mov	x0, x8
  445184:	bl	40a800 <strlen@plt>
  445188:	ldr	x8, [sp, #8]
  44518c:	add	x9, x8, x0
  445190:	cmp	x9, #0x10
  445194:	b.cs	4451c4 <names_pci+0x37c>  // b.hs, b.nlast
  445198:	ldr	x8, [sp, #48]
  44519c:	ldr	x9, [x8, #8]
  4451a0:	add	x0, x9, #0x28
  4451a4:	add	x9, sp, #0x60
  4451a8:	add	x2, x9, #0x28
  4451ac:	add	x9, sp, #0x48
  4451b0:	add	x3, x9, #0x8
  4451b4:	mov	x1, #0x10                  	// #16
  4451b8:	mov	x9, xzr
  4451bc:	mov	x4, x9
  4451c0:	bl	40b400 <strscpyl@plt>
  4451c4:	ldr	x0, [sp, #72]
  4451c8:	bl	40a7c0 <sd_device_unref@plt>
  4451cc:	b	4451f4 <names_pci+0x3ac>
  4451d0:	ldr	x8, [sp, #48]
  4451d4:	ldr	x0, [x8, #16]
  4451d8:	ldr	x1, [x8, #8]
  4451dc:	bl	445ebc <dev_pci_onboard>
  4451e0:	ldr	x8, [sp, #48]
  4451e4:	ldr	x9, [x8, #16]
  4451e8:	ldr	x1, [x8, #8]
  4451ec:	mov	x0, x9
  4451f0:	bl	4460d4 <dev_pci_slot>
  4451f4:	stur	wzr, [x29, #-4]
  4451f8:	ldur	w0, [x29, #-4]
  4451fc:	ldr	x28, [sp, #320]
  445200:	ldp	x29, x30, [sp, #304]
  445204:	add	sp, sp, #0x150
  445208:	ret

000000000044520c <names_usb>:
  44520c:	sub	sp, sp, #0x190
  445210:	stp	x29, x30, [sp, #368]
  445214:	str	x28, [sp, #384]
  445218:	add	x29, sp, #0x170
  44521c:	sub	x8, x29, #0x20
  445220:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  445224:	add	x9, x9, #0xbd2
  445228:	add	x9, x9, #0x3
  44522c:	str	x0, [x8, #16]
  445230:	str	x1, [x8, #8]
  445234:	str	x8, [sp, #16]
  445238:	str	x9, [sp, #8]
  44523c:	ldr	x8, [sp, #16]
  445240:	ldr	x9, [x8, #16]
  445244:	cmp	x9, #0x0
  445248:	cset	w10, ne  // ne = any
  44524c:	mov	w11, #0x1                   	// #1
  445250:	eor	w10, w10, #0x1
  445254:	eor	w10, w10, w11
  445258:	eor	w10, w10, w11
  44525c:	and	w10, w10, #0x1
  445260:	mov	w0, w10
  445264:	sxtw	x9, w0
  445268:	cbz	x9, 44528c <names_usb+0x80>
  44526c:	mov	w0, #0x1                   	// #1
  445270:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  445274:	add	x1, x1, #0xee1
  445278:	ldr	x2, [sp, #8]
  44527c:	mov	w3, #0x212                 	// #530
  445280:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  445284:	add	x4, x4, #0xe6
  445288:	bl	40a540 <log_assert_failed_realm@plt>
  44528c:	ldr	x8, [sp, #16]
  445290:	ldr	x9, [x8, #8]
  445294:	cmp	x9, #0x0
  445298:	cset	w10, ne  // ne = any
  44529c:	mov	w11, #0x1                   	// #1
  4452a0:	eor	w10, w10, #0x1
  4452a4:	eor	w10, w10, w11
  4452a8:	eor	w10, w10, w11
  4452ac:	and	w10, w10, #0x1
  4452b0:	mov	w0, w10
  4452b4:	sxtw	x9, w0
  4452b8:	cbz	x9, 4452dc <names_usb+0xd0>
  4452bc:	mov	w0, #0x1                   	// #1
  4452c0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4452c4:	add	x1, x1, #0xd3a
  4452c8:	ldr	x2, [sp, #8]
  4452cc:	mov	w3, #0x213                 	// #531
  4452d0:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4452d4:	add	x4, x4, #0xe6
  4452d8:	bl	40a540 <log_assert_failed_realm@plt>
  4452dc:	ldr	x8, [sp, #16]
  4452e0:	ldr	x0, [x8, #16]
  4452e4:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4452e8:	add	x1, x1, #0x6f8
  4452ec:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4452f0:	add	x2, x2, #0x114
  4452f4:	sub	x3, x29, #0x20
  4452f8:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  4452fc:	str	w0, [sp, #28]
  445300:	ldr	w9, [sp, #28]
  445304:	cmp	w9, #0x0
  445308:	cset	w9, ge  // ge = tcont
  44530c:	tbnz	w9, #0, 44531c <names_usb+0x110>
  445310:	ldr	w8, [sp, #28]
  445314:	stur	w8, [x29, #-4]
  445318:	b	445508 <names_usb+0x2fc>
  44531c:	ldr	x8, [sp, #16]
  445320:	ldr	x0, [x8]
  445324:	add	x1, sp, #0x28
  445328:	bl	40a860 <sd_device_get_sysname@plt>
  44532c:	str	w0, [sp, #28]
  445330:	ldr	w9, [sp, #28]
  445334:	cmp	w9, #0x0
  445338:	cset	w9, ge  // ge = tcont
  44533c:	tbnz	w9, #0, 44534c <names_usb+0x140>
  445340:	ldr	w8, [sp, #28]
  445344:	stur	w8, [x29, #-4]
  445348:	b	445508 <names_usb+0x2fc>
  44534c:	ldr	x2, [sp, #40]
  445350:	add	x8, sp, #0x50
  445354:	mov	x0, x8
  445358:	mov	x1, #0x100                 	// #256
  44535c:	str	x8, [sp]
  445360:	bl	40adb0 <strscpy@plt>
  445364:	ldr	x8, [sp]
  445368:	mov	x0, x8
  44536c:	mov	w1, #0x2d                  	// #45
  445370:	bl	40a8c0 <strchr@plt>
  445374:	str	x0, [sp, #48]
  445378:	ldr	x8, [sp, #48]
  44537c:	cbnz	x8, 44538c <names_usb+0x180>
  445380:	mov	w8, #0xffffffea            	// #-22
  445384:	stur	w8, [x29, #-4]
  445388:	b	445508 <names_usb+0x2fc>
  44538c:	ldr	x8, [sp, #48]
  445390:	add	x8, x8, #0x1
  445394:	str	x8, [sp, #72]
  445398:	ldr	x0, [sp, #72]
  44539c:	mov	w1, #0x3a                  	// #58
  4453a0:	bl	40a8c0 <strchr@plt>
  4453a4:	str	x0, [sp, #48]
  4453a8:	ldr	x8, [sp, #48]
  4453ac:	cbnz	x8, 4453bc <names_usb+0x1b0>
  4453b0:	mov	w8, #0xffffffea            	// #-22
  4453b4:	stur	w8, [x29, #-4]
  4453b8:	b	445508 <names_usb+0x2fc>
  4453bc:	ldr	x8, [sp, #48]
  4453c0:	mov	w9, #0x0                   	// #0
  4453c4:	strb	w9, [x8]
  4453c8:	ldr	x8, [sp, #48]
  4453cc:	add	x8, x8, #0x1
  4453d0:	str	x8, [sp, #64]
  4453d4:	ldr	x0, [sp, #64]
  4453d8:	mov	w1, #0x2e                  	// #46
  4453dc:	bl	40a8c0 <strchr@plt>
  4453e0:	str	x0, [sp, #48]
  4453e4:	ldr	x8, [sp, #48]
  4453e8:	cbnz	x8, 4453f8 <names_usb+0x1ec>
  4453ec:	mov	w8, #0xffffffea            	// #-22
  4453f0:	stur	w8, [x29, #-4]
  4453f4:	b	445508 <names_usb+0x2fc>
  4453f8:	ldr	x8, [sp, #48]
  4453fc:	mov	w9, #0x0                   	// #0
  445400:	strb	w9, [x8]
  445404:	ldr	x8, [sp, #48]
  445408:	add	x8, x8, #0x1
  44540c:	str	x8, [sp, #56]
  445410:	ldr	x8, [sp, #72]
  445414:	str	x8, [sp, #48]
  445418:	ldr	x0, [sp, #48]
  44541c:	mov	w1, #0x2e                  	// #46
  445420:	bl	40a8c0 <strchr@plt>
  445424:	str	x0, [sp, #48]
  445428:	cbz	x0, 44543c <names_usb+0x230>
  44542c:	ldr	x8, [sp, #48]
  445430:	mov	w9, #0x75                  	// #117
  445434:	strb	w9, [x8]
  445438:	b	445418 <names_usb+0x20c>
  44543c:	ldr	x8, [sp, #16]
  445440:	ldr	x9, [x8, #8]
  445444:	add	x9, x9, #0x50
  445448:	add	x0, sp, #0x30
  44544c:	str	x9, [sp, #48]
  445450:	ldr	x3, [sp, #72]
  445454:	mov	x1, #0x10                  	// #16
  445458:	adrp	x2, 46a000 <on_inotify.__assert_in_set+0x6540>
  44545c:	add	x2, x2, #0x42e
  445460:	mov	x9, xzr
  445464:	mov	x4, x9
  445468:	bl	40aef0 <strpcpyl@plt>
  44546c:	str	x0, [sp, #32]
  445470:	ldr	x0, [sp, #64]
  445474:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  445478:	add	x1, x1, #0xbbe
  44547c:	bl	40aa20 <strcmp@plt>
  445480:	cbz	w0, 4454a8 <names_usb+0x29c>
  445484:	ldr	x3, [sp, #64]
  445488:	add	x0, sp, #0x30
  44548c:	mov	x1, #0x10                  	// #16
  445490:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  445494:	add	x2, x2, #0xda4
  445498:	mov	x8, xzr
  44549c:	mov	x4, x8
  4454a0:	bl	40aef0 <strpcpyl@plt>
  4454a4:	str	x0, [sp, #32]
  4454a8:	ldr	x0, [sp, #56]
  4454ac:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4454b0:	add	x1, x1, #0x5c4
  4454b4:	bl	40aa20 <strcmp@plt>
  4454b8:	cbz	w0, 4454e0 <names_usb+0x2d4>
  4454bc:	ldr	x3, [sp, #56]
  4454c0:	add	x0, sp, #0x30
  4454c4:	mov	x1, #0x10                  	// #16
  4454c8:	adrp	x2, 46a000 <on_inotify.__assert_in_set+0x6540>
  4454cc:	add	x2, x2, #0xc3f
  4454d0:	mov	x8, xzr
  4454d4:	mov	x4, x8
  4454d8:	bl	40aef0 <strpcpyl@plt>
  4454dc:	str	x0, [sp, #32]
  4454e0:	ldr	x8, [sp, #32]
  4454e4:	cbnz	x8, 4454f4 <names_usb+0x2e8>
  4454e8:	mov	w8, #0xffffffdc            	// #-36
  4454ec:	stur	w8, [x29, #-4]
  4454f0:	b	445508 <names_usb+0x2fc>
  4454f4:	ldr	x8, [sp, #16]
  4454f8:	ldr	x9, [x8, #8]
  4454fc:	mov	w10, #0x2                   	// #2
  445500:	str	w10, [x9]
  445504:	stur	wzr, [x29, #-4]
  445508:	ldur	w0, [x29, #-4]
  44550c:	ldr	x28, [sp, #384]
  445510:	ldp	x29, x30, [sp, #368]
  445514:	add	sp, sp, #0x190
  445518:	ret

000000000044551c <names_bcma>:
  44551c:	sub	sp, sp, #0x60
  445520:	stp	x29, x30, [sp, #80]
  445524:	add	x29, sp, #0x50
  445528:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  44552c:	add	x8, x8, #0xbd2
  445530:	add	x8, x8, #0x3
  445534:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  445538:	add	x9, x9, #0x122
  44553c:	stur	x0, [x29, #-16]
  445540:	stur	x1, [x29, #-24]
  445544:	str	x8, [sp, #16]
  445548:	str	x9, [sp, #8]
  44554c:	ldur	x8, [x29, #-16]
  445550:	cmp	x8, #0x0
  445554:	cset	w9, ne  // ne = any
  445558:	mov	w10, #0x1                   	// #1
  44555c:	eor	w9, w9, #0x1
  445560:	eor	w9, w9, w10
  445564:	eor	w9, w9, w10
  445568:	and	w9, w9, #0x1
  44556c:	mov	w0, w9
  445570:	sxtw	x8, w0
  445574:	cbz	x8, 445594 <names_bcma+0x78>
  445578:	mov	w0, #0x1                   	// #1
  44557c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  445580:	add	x1, x1, #0xee1
  445584:	ldr	x2, [sp, #16]
  445588:	mov	w3, #0x24b                 	// #587
  44558c:	ldr	x4, [sp, #8]
  445590:	bl	40a540 <log_assert_failed_realm@plt>
  445594:	ldur	x8, [x29, #-24]
  445598:	cmp	x8, #0x0
  44559c:	cset	w9, ne  // ne = any
  4455a0:	mov	w10, #0x1                   	// #1
  4455a4:	eor	w9, w9, #0x1
  4455a8:	eor	w9, w9, w10
  4455ac:	eor	w9, w9, w10
  4455b0:	and	w9, w9, #0x1
  4455b4:	mov	w0, w9
  4455b8:	sxtw	x8, w0
  4455bc:	cbz	x8, 4455dc <names_bcma+0xc0>
  4455c0:	mov	w0, #0x1                   	// #1
  4455c4:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4455c8:	add	x1, x1, #0xd3a
  4455cc:	ldr	x2, [sp, #16]
  4455d0:	mov	w3, #0x24c                 	// #588
  4455d4:	ldr	x4, [sp, #8]
  4455d8:	bl	40a540 <log_assert_failed_realm@plt>
  4455dc:	ldur	x0, [x29, #-16]
  4455e0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4455e4:	add	x1, x1, #0x151
  4455e8:	mov	x8, xzr
  4455ec:	mov	x2, x8
  4455f0:	sub	x3, x29, #0x20
  4455f4:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  4455f8:	str	w0, [sp, #28]
  4455fc:	ldr	w9, [sp, #28]
  445600:	cmp	w9, #0x0
  445604:	cset	w9, ge  // ge = tcont
  445608:	tbnz	w9, #0, 445618 <names_bcma+0xfc>
  44560c:	ldr	w8, [sp, #28]
  445610:	stur	w8, [x29, #-4]
  445614:	b	4456f4 <names_bcma+0x1d8>
  445618:	ldur	x0, [x29, #-32]
  44561c:	add	x1, sp, #0x20
  445620:	bl	40a860 <sd_device_get_sysname@plt>
  445624:	str	w0, [sp, #28]
  445628:	ldr	w8, [sp, #28]
  44562c:	cmp	w8, #0x0
  445630:	cset	w8, ge  // ge = tcont
  445634:	tbnz	w8, #0, 445644 <names_bcma+0x128>
  445638:	ldr	w8, [sp, #28]
  44563c:	stur	w8, [x29, #-4]
  445640:	b	4456f4 <names_bcma+0x1d8>
  445644:	ldr	x0, [sp, #32]
  445648:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44564c:	add	x1, x1, #0x156
  445650:	sub	x2, x29, #0x24
  445654:	bl	40b6a0 <__isoc99_sscanf@plt>
  445658:	cmp	w0, #0x1
  44565c:	b.eq	44566c <names_bcma+0x150>  // b.none
  445660:	mov	w8, #0xffffffea            	// #-22
  445664:	stur	w8, [x29, #-4]
  445668:	b	4456f4 <names_bcma+0x1d8>
  44566c:	ldur	w8, [x29, #-36]
  445670:	cmp	w8, #0x0
  445674:	cset	w8, ls  // ls = plast
  445678:	tbnz	w8, #0, 4456e4 <names_bcma+0x1c8>
  44567c:	ldur	x8, [x29, #-24]
  445680:	add	x0, x8, #0x60
  445684:	ldur	w3, [x29, #-36]
  445688:	mov	x1, #0x10                  	// #16
  44568c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  445690:	add	x2, x2, #0x161
  445694:	bl	40b140 <snprintf@plt>
  445698:	mov	w1, w0
  44569c:	sxtw	x8, w1
  4456a0:	cmp	x8, #0x10
  4456a4:	cset	w9, cc  // cc = lo, ul, last
  4456a8:	mov	w10, #0x1                   	// #1
  4456ac:	eor	w9, w9, #0x1
  4456b0:	eor	w9, w9, w10
  4456b4:	eor	w9, w9, w10
  4456b8:	and	w9, w9, #0x1
  4456bc:	mov	w1, w9
  4456c0:	sxtw	x8, w1
  4456c4:	cbz	x8, 4456e4 <names_bcma+0x1c8>
  4456c8:	mov	w0, #0x1                   	// #1
  4456cc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4456d0:	add	x1, x1, #0x165
  4456d4:	ldr	x2, [sp, #16]
  4456d8:	mov	w3, #0x25b                 	// #603
  4456dc:	ldr	x4, [sp, #8]
  4456e0:	bl	40a540 <log_assert_failed_realm@plt>
  4456e4:	ldur	x8, [x29, #-24]
  4456e8:	mov	w9, #0x3                   	// #3
  4456ec:	str	w9, [x8]
  4456f0:	stur	wzr, [x29, #-4]
  4456f4:	ldur	w0, [x29, #-4]
  4456f8:	ldp	x29, x30, [sp, #80]
  4456fc:	add	sp, sp, #0x60
  445700:	ret

0000000000445704 <skip_virtio>:
  445704:	sub	sp, sp, #0x30
  445708:	stp	x29, x30, [sp, #32]
  44570c:	add	x29, sp, #0x20
  445710:	str	x0, [sp, #16]
  445714:	ldr	x8, [sp, #16]
  445718:	str	x8, [sp, #8]
  44571c:	ldr	x8, [sp, #8]
  445720:	cbz	x8, 445780 <skip_virtio+0x7c>
  445724:	ldr	x0, [sp, #8]
  445728:	mov	x1, sp
  44572c:	bl	40aa10 <sd_device_get_subsystem@plt>
  445730:	cmp	w0, #0x0
  445734:	cset	w8, ge  // ge = tcont
  445738:	tbnz	w8, #0, 445740 <skip_virtio+0x3c>
  44573c:	b	445780 <skip_virtio+0x7c>
  445740:	ldr	x0, [sp]
  445744:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  445748:	add	x1, x1, #0xd54
  44574c:	bl	40aa20 <strcmp@plt>
  445750:	cbz	w0, 445758 <skip_virtio+0x54>
  445754:	b	445780 <skip_virtio+0x7c>
  445758:	add	x1, sp, #0x8
  44575c:	ldr	x0, [sp, #8]
  445760:	bl	40abc0 <sd_device_get_parent@plt>
  445764:	cmp	w0, #0x0
  445768:	cset	w8, ge  // ge = tcont
  44576c:	tbnz	w8, #0, 44577c <skip_virtio+0x78>
  445770:	mov	x8, xzr
  445774:	stur	x8, [x29, #-8]
  445778:	b	445788 <skip_virtio+0x84>
  44577c:	b	44571c <skip_virtio+0x18>
  445780:	ldr	x8, [sp, #8]
  445784:	stur	x8, [x29, #-8]
  445788:	ldur	x0, [x29, #-8]
  44578c:	ldp	x29, x30, [sp, #32]
  445790:	add	sp, sp, #0x30
  445794:	ret

0000000000445798 <in_charset>:
  445798:	sub	sp, sp, #0x30
  44579c:	stp	x29, x30, [sp, #32]
  4457a0:	add	x29, sp, #0x20
  4457a4:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4457a8:	add	x8, x8, #0xef8
  4457ac:	add	x8, x8, #0x3
  4457b0:	stur	x0, [x29, #-8]
  4457b4:	str	x1, [sp, #16]
  4457b8:	str	x8, [sp, #8]
  4457bc:	ldur	x8, [x29, #-8]
  4457c0:	cmp	x8, #0x0
  4457c4:	cset	w9, ne  // ne = any
  4457c8:	mov	w10, #0x1                   	// #1
  4457cc:	eor	w9, w9, #0x1
  4457d0:	eor	w9, w9, w10
  4457d4:	eor	w9, w9, w10
  4457d8:	and	w9, w9, #0x1
  4457dc:	mov	w0, w9
  4457e0:	sxtw	x8, w0
  4457e4:	cbz	x8, 445808 <in_charset+0x70>
  4457e8:	mov	w0, #0x1                   	// #1
  4457ec:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4457f0:	add	x1, x1, #0x6ae
  4457f4:	ldr	x2, [sp, #8]
  4457f8:	mov	w3, #0xaf                  	// #175
  4457fc:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  445800:	add	x4, x4, #0xf13
  445804:	bl	40a540 <log_assert_failed_realm@plt>
  445808:	ldr	x8, [sp, #16]
  44580c:	cmp	x8, #0x0
  445810:	cset	w9, ne  // ne = any
  445814:	mov	w10, #0x1                   	// #1
  445818:	eor	w9, w9, #0x1
  44581c:	eor	w9, w9, w10
  445820:	eor	w9, w9, w10
  445824:	and	w9, w9, #0x1
  445828:	mov	w0, w9
  44582c:	sxtw	x8, w0
  445830:	cbz	x8, 445854 <in_charset+0xbc>
  445834:	mov	w0, #0x1                   	// #1
  445838:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44583c:	add	x1, x1, #0xf40
  445840:	ldr	x2, [sp, #8]
  445844:	mov	w3, #0xb0                  	// #176
  445848:	adrp	x4, 46c000 <on_inotify.__assert_in_set+0x8540>
  44584c:	add	x4, x4, #0xf13
  445850:	bl	40a540 <log_assert_failed_realm@plt>
  445854:	ldur	x8, [x29, #-8]
  445858:	ldur	x0, [x29, #-8]
  44585c:	ldr	x1, [sp, #16]
  445860:	str	x8, [sp]
  445864:	bl	40b080 <strspn@plt>
  445868:	ldr	x8, [sp]
  44586c:	ldrb	w9, [x8, x0]
  445870:	cmp	w9, #0x0
  445874:	cset	w9, eq  // eq = none
  445878:	and	w0, w9, #0x1
  44587c:	ldp	x29, x30, [sp, #32]
  445880:	add	sp, sp, #0x30
  445884:	ret

0000000000445888 <get_virtfn_info>:
  445888:	stp	x29, x30, [sp, #-16]!
  44588c:	mov	x29, sp
  445890:	sub	sp, sp, #0xf0
  445894:	mov	x8, xzr
  445898:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  44589c:	add	x9, x9, #0xbd2
  4458a0:	add	x9, x9, #0x3
  4458a4:	adrp	x10, 46c000 <on_inotify.__assert_in_set+0x8540>
  4458a8:	add	x10, x10, #0xfda
  4458ac:	stur	x0, [x29, #-16]
  4458b0:	stur	x1, [x29, #-24]
  4458b4:	stur	x2, [x29, #-32]
  4458b8:	stur	x8, [x29, #-40]
  4458bc:	stur	x8, [x29, #-64]
  4458c0:	stur	x8, [x29, #-72]
  4458c4:	stur	x8, [x29, #-88]
  4458c8:	stur	x9, [x29, #-216]
  4458cc:	stur	x10, [x29, #-224]
  4458d0:	ldur	x8, [x29, #-16]
  4458d4:	cmp	x8, #0x0
  4458d8:	cset	w9, ne  // ne = any
  4458dc:	mov	w10, #0x1                   	// #1
  4458e0:	eor	w9, w9, #0x1
  4458e4:	eor	w9, w9, w10
  4458e8:	eor	w9, w9, w10
  4458ec:	and	w9, w9, #0x1
  4458f0:	mov	w0, w9
  4458f4:	sxtw	x8, w0
  4458f8:	cbz	x8, 445918 <get_virtfn_info+0x90>
  4458fc:	mov	w0, #0x1                   	// #1
  445900:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  445904:	add	x1, x1, #0xee1
  445908:	ldur	x2, [x29, #-216]
  44590c:	mov	w3, #0x6e                  	// #110
  445910:	ldur	x4, [x29, #-224]
  445914:	bl	40a540 <log_assert_failed_realm@plt>
  445918:	ldur	x8, [x29, #-24]
  44591c:	cmp	x8, #0x0
  445920:	cset	w9, ne  // ne = any
  445924:	mov	w10, #0x1                   	// #1
  445928:	eor	w9, w9, #0x1
  44592c:	eor	w9, w9, w10
  445930:	eor	w9, w9, w10
  445934:	and	w9, w9, #0x1
  445938:	mov	w0, w9
  44593c:	sxtw	x8, w0
  445940:	cbz	x8, 445960 <get_virtfn_info+0xd8>
  445944:	mov	w0, #0x1                   	// #1
  445948:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44594c:	add	x1, x1, #0xd3a
  445950:	ldur	x2, [x29, #-216]
  445954:	mov	w3, #0x6f                  	// #111
  445958:	ldur	x4, [x29, #-224]
  44595c:	bl	40a540 <log_assert_failed_realm@plt>
  445960:	ldur	x8, [x29, #-32]
  445964:	cmp	x8, #0x0
  445968:	cset	w9, ne  // ne = any
  44596c:	mov	w10, #0x1                   	// #1
  445970:	eor	w9, w9, #0x1
  445974:	eor	w9, w9, w10
  445978:	eor	w9, w9, w10
  44597c:	and	w9, w9, #0x1
  445980:	mov	w0, w9
  445984:	sxtw	x8, w0
  445988:	cbz	x8, 4459a8 <get_virtfn_info+0x120>
  44598c:	mov	w0, #0x1                   	// #1
  445990:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  445994:	add	x1, x1, #0x2ff
  445998:	ldur	x2, [x29, #-216]
  44599c:	mov	w3, #0x70                  	// #112
  4459a0:	ldur	x4, [x29, #-224]
  4459a4:	bl	40a540 <log_assert_failed_realm@plt>
  4459a8:	ldur	x8, [x29, #-24]
  4459ac:	ldr	x0, [x8, #16]
  4459b0:	sub	x1, x29, #0x38
  4459b4:	bl	40abf0 <sd_device_get_syspath@plt>
  4459b8:	stur	w0, [x29, #-108]
  4459bc:	ldur	w9, [x29, #-108]
  4459c0:	cmp	w9, #0x0
  4459c4:	cset	w9, ge  // ge = tcont
  4459c8:	tbnz	w9, #0, 4459e0 <get_virtfn_info+0x158>
  4459cc:	ldur	w8, [x29, #-108]
  4459d0:	stur	w8, [x29, #-4]
  4459d4:	mov	w8, #0x1                   	// #1
  4459d8:	stur	w8, [x29, #-112]
  4459dc:	b	445e8c <get_virtfn_info+0x604>
  4459e0:	ldur	x8, [x29, #-56]
  4459e4:	sub	x9, x29, #0x80
  4459e8:	stur	x8, [x29, #-128]
  4459ec:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  4459f0:	add	x8, x8, #0x24
  4459f4:	str	x8, [x9, #8]
  4459f8:	stur	xzr, [x29, #-152]
  4459fc:	stur	xzr, [x29, #-160]
  445a00:	ldur	x8, [x29, #-160]
  445a04:	mov	w9, #0x0                   	// #0
  445a08:	cmp	x8, #0x2
  445a0c:	stur	w9, [x29, #-228]
  445a10:	b.cs	445a38 <get_virtfn_info+0x1b0>  // b.hs, b.nlast
  445a14:	ldur	x8, [x29, #-160]
  445a18:	mov	x9, #0x8                   	// #8
  445a1c:	mul	x8, x9, x8
  445a20:	sub	x9, x29, #0x80
  445a24:	add	x8, x9, x8
  445a28:	ldr	x8, [x8]
  445a2c:	cmp	x8, #0x0
  445a30:	cset	w10, ne  // ne = any
  445a34:	stur	w10, [x29, #-228]
  445a38:	ldur	w8, [x29, #-228]
  445a3c:	tbnz	w8, #0, 445a44 <get_virtfn_info+0x1bc>
  445a40:	b	445a7c <get_virtfn_info+0x1f4>
  445a44:	ldur	x8, [x29, #-160]
  445a48:	mov	x9, #0x8                   	// #8
  445a4c:	mul	x8, x9, x8
  445a50:	sub	x9, x29, #0x80
  445a54:	add	x8, x9, x8
  445a58:	ldr	x0, [x8]
  445a5c:	bl	40a800 <strlen@plt>
  445a60:	ldur	x8, [x29, #-152]
  445a64:	add	x8, x8, x0
  445a68:	stur	x8, [x29, #-152]
  445a6c:	ldur	x8, [x29, #-160]
  445a70:	add	x8, x8, #0x1
  445a74:	stur	x8, [x29, #-160]
  445a78:	b	445a00 <get_virtfn_info+0x178>
  445a7c:	ldur	x8, [x29, #-152]
  445a80:	add	x8, x8, #0x1
  445a84:	stur	x8, [x29, #-168]
  445a88:	ldur	x1, [x29, #-168]
  445a8c:	mov	x0, #0x1                   	// #1
  445a90:	bl	446834 <size_multiply_overflow>
  445a94:	mov	w8, #0x1                   	// #1
  445a98:	eor	w9, w0, #0x1
  445a9c:	eor	w9, w9, w8
  445aa0:	eor	w9, w9, w8
  445aa4:	eor	w8, w9, w8
  445aa8:	and	w8, w8, #0x1
  445aac:	mov	w1, w8
  445ab0:	sxtw	x10, w1
  445ab4:	cbz	x10, 445ad4 <get_virtfn_info+0x24c>
  445ab8:	mov	w0, #0x1                   	// #1
  445abc:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  445ac0:	add	x1, x1, #0x694
  445ac4:	ldur	x2, [x29, #-216]
  445ac8:	mov	w3, #0x77                  	// #119
  445acc:	ldur	x4, [x29, #-224]
  445ad0:	bl	40a540 <log_assert_failed_realm@plt>
  445ad4:	ldur	x8, [x29, #-168]
  445ad8:	mov	x9, #0x1                   	// #1
  445adc:	mul	x8, x9, x8
  445ae0:	cmp	x8, #0x400, lsl #12
  445ae4:	cset	w10, ls  // ls = plast
  445ae8:	mov	w11, #0x1                   	// #1
  445aec:	eor	w10, w10, #0x1
  445af0:	eor	w10, w10, w11
  445af4:	eor	w10, w10, w11
  445af8:	and	w10, w10, #0x1
  445afc:	mov	w0, w10
  445b00:	sxtw	x8, w0
  445b04:	cbz	x8, 445b24 <get_virtfn_info+0x29c>
  445b08:	mov	w0, #0x1                   	// #1
  445b0c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  445b10:	add	x1, x1, #0x6f4
  445b14:	ldur	x2, [x29, #-216]
  445b18:	mov	w3, #0x77                  	// #119
  445b1c:	ldur	x4, [x29, #-224]
  445b20:	bl	40a540 <log_assert_failed_realm@plt>
  445b24:	ldur	x8, [x29, #-168]
  445b28:	mov	x9, #0x1                   	// #1
  445b2c:	mul	x8, x9, x8
  445b30:	mul	x8, x8, x9
  445b34:	add	x8, x8, #0xf
  445b38:	and	x8, x8, #0xfffffffffffffff0
  445b3c:	mov	x9, sp
  445b40:	subs	x8, x9, x8
  445b44:	mov	sp, x8
  445b48:	stur	x8, [x29, #-176]
  445b4c:	ldur	x8, [x29, #-176]
  445b50:	stur	x8, [x29, #-136]
  445b54:	stur	x8, [x29, #-144]
  445b58:	stur	xzr, [x29, #-160]
  445b5c:	ldur	x8, [x29, #-160]
  445b60:	mov	w9, #0x0                   	// #0
  445b64:	cmp	x8, #0x2
  445b68:	stur	w9, [x29, #-232]
  445b6c:	b.cs	445b94 <get_virtfn_info+0x30c>  // b.hs, b.nlast
  445b70:	ldur	x8, [x29, #-160]
  445b74:	mov	x9, #0x8                   	// #8
  445b78:	mul	x8, x9, x8
  445b7c:	sub	x9, x29, #0x80
  445b80:	add	x8, x9, x8
  445b84:	ldr	x8, [x8]
  445b88:	cmp	x8, #0x0
  445b8c:	cset	w10, ne  // ne = any
  445b90:	stur	w10, [x29, #-232]
  445b94:	ldur	w8, [x29, #-232]
  445b98:	tbnz	w8, #0, 445ba0 <get_virtfn_info+0x318>
  445b9c:	b	445bd4 <get_virtfn_info+0x34c>
  445ba0:	ldur	x0, [x29, #-144]
  445ba4:	ldur	x8, [x29, #-160]
  445ba8:	mov	x9, #0x8                   	// #8
  445bac:	mul	x8, x9, x8
  445bb0:	sub	x9, x29, #0x80
  445bb4:	add	x8, x9, x8
  445bb8:	ldr	x1, [x8]
  445bbc:	bl	40aca0 <stpcpy@plt>
  445bc0:	stur	x0, [x29, #-144]
  445bc4:	ldur	x8, [x29, #-160]
  445bc8:	add	x8, x8, #0x1
  445bcc:	stur	x8, [x29, #-160]
  445bd0:	b	445b5c <get_virtfn_info+0x2d4>
  445bd4:	ldur	x8, [x29, #-144]
  445bd8:	mov	w9, #0x0                   	// #0
  445bdc:	strb	w9, [x8]
  445be0:	ldur	x8, [x29, #-136]
  445be4:	stur	x8, [x29, #-184]
  445be8:	ldur	x8, [x29, #-184]
  445bec:	stur	x8, [x29, #-48]
  445bf0:	ldur	x0, [x29, #-48]
  445bf4:	mov	x8, xzr
  445bf8:	mov	x1, x8
  445bfc:	mov	w9, wzr
  445c00:	mov	w2, w9
  445c04:	sub	x3, x29, #0x40
  445c08:	mov	x4, x8
  445c0c:	bl	40b6d0 <chase_symlinks@plt>
  445c10:	stur	w0, [x29, #-108]
  445c14:	ldur	w9, [x29, #-108]
  445c18:	cmp	w9, #0x0
  445c1c:	cset	w9, ge  // ge = tcont
  445c20:	tbnz	w9, #0, 445c38 <get_virtfn_info+0x3b0>
  445c24:	ldur	w8, [x29, #-108]
  445c28:	stur	w8, [x29, #-4]
  445c2c:	mov	w8, #0x1                   	// #1
  445c30:	stur	w8, [x29, #-112]
  445c34:	b	445e8c <get_virtfn_info+0x604>
  445c38:	ldur	x1, [x29, #-64]
  445c3c:	sub	x0, x29, #0x28
  445c40:	bl	40b6e0 <sd_device_new_from_syspath@plt>
  445c44:	stur	w0, [x29, #-108]
  445c48:	ldur	w8, [x29, #-108]
  445c4c:	cmp	w8, #0x0
  445c50:	cset	w8, ge  // ge = tcont
  445c54:	tbnz	w8, #0, 445c6c <get_virtfn_info+0x3e4>
  445c58:	ldur	w8, [x29, #-108]
  445c5c:	stur	w8, [x29, #-4]
  445c60:	mov	w8, #0x1                   	// #1
  445c64:	stur	w8, [x29, #-112]
  445c68:	b	445e8c <get_virtfn_info+0x604>
  445c6c:	ldur	x0, [x29, #-64]
  445c70:	bl	40b1f0 <opendir@plt>
  445c74:	stur	x0, [x29, #-88]
  445c78:	ldur	x8, [x29, #-88]
  445c7c:	cbnz	x8, 445ca0 <get_virtfn_info+0x418>
  445c80:	bl	40a480 <__errno_location@plt>
  445c84:	ldr	w8, [x0]
  445c88:	mov	w9, wzr
  445c8c:	subs	w8, w9, w8
  445c90:	stur	w8, [x29, #-4]
  445c94:	mov	w8, #0x1                   	// #1
  445c98:	stur	w8, [x29, #-112]
  445c9c:	b	445e8c <get_virtfn_info+0x604>
  445ca0:	bl	40a480 <__errno_location@plt>
  445ca4:	str	wzr, [x0]
  445ca8:	ldur	x0, [x29, #-88]
  445cac:	bl	40b200 <readdir64@plt>
  445cb0:	stur	x0, [x29, #-80]
  445cb4:	ldur	x8, [x29, #-80]
  445cb8:	cbnz	x8, 445cd8 <get_virtfn_info+0x450>
  445cbc:	bl	40a480 <__errno_location@plt>
  445cc0:	ldr	w8, [x0]
  445cc4:	cmp	w8, #0x0
  445cc8:	cset	w8, le
  445ccc:	tbnz	w8, #0, 445cd4 <get_virtfn_info+0x44c>
  445cd0:	b	445e24 <get_virtfn_info+0x59c>
  445cd4:	b	445e24 <get_virtfn_info+0x59c>
  445cd8:	mov	x8, xzr
  445cdc:	stur	x8, [x29, #-192]
  445ce0:	ldur	x8, [x29, #-80]
  445ce4:	add	x0, x8, #0x13
  445ce8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  445cec:	add	x1, x1, #0x2c
  445cf0:	bl	44689c <startswith>
  445cf4:	cbnz	x0, 445d04 <get_virtfn_info+0x47c>
  445cf8:	mov	w8, #0x14                  	// #20
  445cfc:	stur	w8, [x29, #-112]
  445d00:	b	445dd4 <get_virtfn_info+0x54c>
  445d04:	ldur	x0, [x29, #-64]
  445d08:	ldur	x8, [x29, #-80]
  445d0c:	add	x1, x8, #0x13
  445d10:	mov	x8, #0xffffffffffffffff    	// #-1
  445d14:	mov	x2, x8
  445d18:	bl	40af50 <path_join_internal@plt>
  445d1c:	stur	x0, [x29, #-192]
  445d20:	ldur	x8, [x29, #-192]
  445d24:	cbnz	x8, 445d3c <get_virtfn_info+0x4b4>
  445d28:	mov	w8, #0xfffffff4            	// #-12
  445d2c:	stur	w8, [x29, #-4]
  445d30:	mov	w8, #0x1                   	// #1
  445d34:	stur	w8, [x29, #-112]
  445d38:	b	445dd4 <get_virtfn_info+0x54c>
  445d3c:	ldur	x0, [x29, #-192]
  445d40:	mov	x8, xzr
  445d44:	mov	x1, x8
  445d48:	mov	w9, wzr
  445d4c:	mov	w2, w9
  445d50:	sub	x3, x29, #0x48
  445d54:	mov	x4, x8
  445d58:	bl	40b6d0 <chase_symlinks@plt>
  445d5c:	cmp	w0, #0x0
  445d60:	cset	w9, ge  // ge = tcont
  445d64:	tbnz	w9, #0, 445d74 <get_virtfn_info+0x4ec>
  445d68:	mov	w8, #0x14                  	// #20
  445d6c:	stur	w8, [x29, #-112]
  445d70:	b	445dd4 <get_virtfn_info+0x54c>
  445d74:	ldur	x0, [x29, #-56]
  445d78:	ldur	x1, [x29, #-72]
  445d7c:	bl	40aa20 <strcmp@plt>
  445d80:	cbnz	w0, 445dd0 <get_virtfn_info+0x548>
  445d84:	ldur	x8, [x29, #-80]
  445d88:	add	x3, x8, #0x19
  445d8c:	sub	x0, x29, #0x68
  445d90:	mov	x1, #0x10                  	// #16
  445d94:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  445d98:	add	x2, x2, #0x33
  445d9c:	bl	40b140 <snprintf@plt>
  445da0:	mov	w1, w0
  445da4:	sxtw	x8, w1
  445da8:	cmp	x8, #0x10
  445dac:	b.cc	445dc4 <get_virtfn_info+0x53c>  // b.lo, b.ul, b.last
  445db0:	mov	w8, #0xfffffffe            	// #-2
  445db4:	stur	w8, [x29, #-4]
  445db8:	mov	w8, #0x1                   	// #1
  445dbc:	stur	w8, [x29, #-112]
  445dc0:	b	445dd4 <get_virtfn_info+0x54c>
  445dc4:	mov	w8, #0x12                  	// #18
  445dc8:	stur	w8, [x29, #-112]
  445dcc:	b	445dd4 <get_virtfn_info+0x54c>
  445dd0:	stur	wzr, [x29, #-112]
  445dd4:	sub	x0, x29, #0xc0
  445dd8:	bl	4467d8 <freep>
  445ddc:	ldur	w8, [x29, #-112]
  445de0:	stur	w8, [x29, #-236]
  445de4:	cbz	w8, 445e0c <get_virtfn_info+0x584>
  445de8:	b	445dec <get_virtfn_info+0x564>
  445dec:	ldur	w8, [x29, #-236]
  445df0:	cmp	w8, #0x12
  445df4:	b.eq	445e24 <get_virtfn_info+0x59c>  // b.none
  445df8:	b	445dfc <get_virtfn_info+0x574>
  445dfc:	ldur	w8, [x29, #-236]
  445e00:	cmp	w8, #0x14
  445e04:	b.eq	445e0c <get_virtfn_info+0x584>  // b.none
  445e08:	b	445e8c <get_virtfn_info+0x604>
  445e0c:	bl	40a480 <__errno_location@plt>
  445e10:	str	wzr, [x0]
  445e14:	ldur	x0, [x29, #-88]
  445e18:	bl	40b200 <readdir64@plt>
  445e1c:	stur	x0, [x29, #-80]
  445e20:	b	445cb4 <get_virtfn_info+0x42c>
  445e24:	sub	x0, x29, #0x68
  445e28:	bl	4468fc <isempty>
  445e2c:	tbnz	w0, #0, 445e34 <get_virtfn_info+0x5ac>
  445e30:	b	445e48 <get_virtfn_info+0x5c0>
  445e34:	mov	w8, #0xfffffffe            	// #-2
  445e38:	stur	w8, [x29, #-4]
  445e3c:	mov	w8, #0x1                   	// #1
  445e40:	stur	w8, [x29, #-112]
  445e44:	b	445e8c <get_virtfn_info+0x604>
  445e48:	ldur	x8, [x29, #-40]
  445e4c:	stur	x8, [x29, #-200]
  445e50:	mov	x8, xzr
  445e54:	stur	x8, [x29, #-40]
  445e58:	ldur	x8, [x29, #-200]
  445e5c:	stur	x8, [x29, #-208]
  445e60:	ldur	x8, [x29, #-208]
  445e64:	ldur	x9, [x29, #-32]
  445e68:	str	x8, [x9]
  445e6c:	ldur	x8, [x29, #-32]
  445e70:	add	x0, x8, #0x8
  445e74:	sub	x1, x29, #0x68
  445e78:	mov	x2, #0x10                  	// #16
  445e7c:	bl	40b6f0 <strncpy@plt>
  445e80:	stur	wzr, [x29, #-4]
  445e84:	mov	w10, #0x1                   	// #1
  445e88:	stur	w10, [x29, #-112]
  445e8c:	sub	x0, x29, #0x58
  445e90:	bl	446800 <closedirp>
  445e94:	sub	x0, x29, #0x48
  445e98:	bl	4467d8 <freep>
  445e9c:	sub	x0, x29, #0x40
  445ea0:	bl	4467d8 <freep>
  445ea4:	sub	x0, x29, #0x28
  445ea8:	bl	4467a4 <sd_device_unrefp>
  445eac:	ldur	w0, [x29, #-4]
  445eb0:	mov	sp, x29
  445eb4:	ldp	x29, x30, [sp], #16
  445eb8:	ret

0000000000445ebc <dev_pci_onboard>:
  445ebc:	sub	sp, sp, #0x60
  445ec0:	stp	x29, x30, [sp, #80]
  445ec4:	add	x29, sp, #0x50
  445ec8:	mov	x8, xzr
  445ecc:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  445ed0:	add	x9, x9, #0x37
  445ed4:	add	x2, sp, #0x20
  445ed8:	stur	x0, [x29, #-16]
  445edc:	stur	x1, [x29, #-24]
  445ee0:	str	xzr, [sp, #40]
  445ee4:	str	x8, [sp, #24]
  445ee8:	ldur	x8, [x29, #-24]
  445eec:	ldr	x0, [x8, #16]
  445ef0:	mov	x1, x9
  445ef4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  445ef8:	cmp	w0, #0x0
  445efc:	cset	w10, ge  // ge = tcont
  445f00:	tbnz	w10, #0, 445f3c <dev_pci_onboard+0x80>
  445f04:	ldur	x8, [x29, #-24]
  445f08:	ldr	x0, [x8, #16]
  445f0c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  445f10:	add	x1, x1, #0x42
  445f14:	add	x2, sp, #0x20
  445f18:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  445f1c:	str	w0, [sp, #4]
  445f20:	ldr	w9, [sp, #4]
  445f24:	cmp	w9, #0x0
  445f28:	cset	w9, ge  // ge = tcont
  445f2c:	tbnz	w9, #0, 445f3c <dev_pci_onboard+0x80>
  445f30:	ldr	w8, [sp, #4]
  445f34:	stur	w8, [x29, #-4]
  445f38:	b	4460c4 <dev_pci_onboard+0x208>
  445f3c:	ldr	x0, [sp, #32]
  445f40:	sub	x1, x29, #0x20
  445f44:	bl	44693c <safe_atolu>
  445f48:	str	w0, [sp, #4]
  445f4c:	ldr	w8, [sp, #4]
  445f50:	cmp	w8, #0x0
  445f54:	cset	w8, ge  // ge = tcont
  445f58:	tbnz	w8, #0, 445f68 <dev_pci_onboard+0xac>
  445f5c:	ldr	w8, [sp, #4]
  445f60:	stur	w8, [x29, #-4]
  445f64:	b	4460c4 <dev_pci_onboard+0x208>
  445f68:	ldur	x8, [x29, #-32]
  445f6c:	cbnz	x8, 445f88 <dev_pci_onboard+0xcc>
  445f70:	mov	w0, #0x8                   	// #8
  445f74:	bl	444294 <naming_scheme_has>
  445f78:	tbnz	w0, #0, 445f88 <dev_pci_onboard+0xcc>
  445f7c:	mov	w8, #0xffffffea            	// #-22
  445f80:	stur	w8, [x29, #-4]
  445f84:	b	4460c4 <dev_pci_onboard+0x208>
  445f88:	ldur	x8, [x29, #-32]
  445f8c:	mov	x9, #0x3fff                	// #16383
  445f90:	cmp	x8, x9
  445f94:	b.ls	445fa4 <dev_pci_onboard+0xe8>  // b.plast
  445f98:	mov	w8, #0xfffffffe            	// #-2
  445f9c:	stur	w8, [x29, #-4]
  445fa0:	b	4460c4 <dev_pci_onboard+0x208>
  445fa4:	ldur	x0, [x29, #-16]
  445fa8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  445fac:	add	x1, x1, #0x48
  445fb0:	add	x2, sp, #0x20
  445fb4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  445fb8:	cmp	w0, #0x0
  445fbc:	cset	w8, lt  // lt = tstop
  445fc0:	tbnz	w8, #0, 445fdc <dev_pci_onboard+0x120>
  445fc4:	ldr	x0, [sp, #32]
  445fc8:	mov	x8, xzr
  445fcc:	mov	x1, x8
  445fd0:	mov	w2, #0xa                   	// #10
  445fd4:	bl	40b670 <strtoul@plt>
  445fd8:	str	x0, [sp, #40]
  445fdc:	ldur	x0, [x29, #-16]
  445fe0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  445fe4:	add	x1, x1, #0xf92
  445fe8:	add	x2, sp, #0x18
  445fec:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  445ff0:	ldur	x8, [x29, #-24]
  445ff4:	add	x8, x8, #0x38
  445ff8:	add	x9, sp, #0x8
  445ffc:	str	x8, [sp, #8]
  446000:	mov	x8, #0x10                  	// #16
  446004:	str	x8, [sp, #16]
  446008:	ldr	x1, [sp, #16]
  44600c:	ldur	x3, [x29, #-32]
  446010:	mov	x0, x9
  446014:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446018:	add	x2, x2, #0x51
  44601c:	bl	40ae80 <strpcpyf@plt>
  446020:	str	x0, [sp, #16]
  446024:	ldr	x8, [sp, #24]
  446028:	cbz	x8, 44604c <dev_pci_onboard+0x190>
  44602c:	ldr	x1, [sp, #16]
  446030:	ldr	x3, [sp, #24]
  446034:	add	x0, sp, #0x8
  446038:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44603c:	add	x2, x2, #0x56
  446040:	bl	40ae80 <strpcpyf@plt>
  446044:	str	x0, [sp, #16]
  446048:	b	446078 <dev_pci_onboard+0x1bc>
  44604c:	ldr	x8, [sp, #40]
  446050:	cmp	x8, #0x0
  446054:	cset	w9, ls  // ls = plast
  446058:	tbnz	w9, #0, 446078 <dev_pci_onboard+0x1bc>
  44605c:	ldr	x1, [sp, #16]
  446060:	ldr	x3, [sp, #40]
  446064:	add	x0, sp, #0x8
  446068:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44606c:	add	x2, x2, #0x5a
  446070:	bl	40ae80 <strpcpyf@plt>
  446074:	str	x0, [sp, #16]
  446078:	ldr	x8, [sp, #16]
  44607c:	cbnz	x8, 44608c <dev_pci_onboard+0x1d0>
  446080:	ldur	x8, [x29, #-24]
  446084:	mov	w9, #0x0                   	// #0
  446088:	strb	w9, [x8, #56]
  44608c:	ldur	x8, [x29, #-24]
  446090:	ldr	x0, [x8, #16]
  446094:	ldur	x8, [x29, #-24]
  446098:	add	x2, x8, #0x48
  44609c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4460a0:	add	x1, x1, #0x5f
  4460a4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4460a8:	cmp	w0, #0x0
  4460ac:	cset	w9, ge  // ge = tcont
  4460b0:	tbnz	w9, #0, 4460c0 <dev_pci_onboard+0x204>
  4460b4:	ldur	x8, [x29, #-24]
  4460b8:	mov	x9, xzr
  4460bc:	str	x9, [x8, #72]
  4460c0:	stur	wzr, [x29, #-4]
  4460c4:	ldur	w0, [x29, #-4]
  4460c8:	ldp	x29, x30, [sp, #80]
  4460cc:	add	sp, sp, #0x60
  4460d0:	ret

00000000004460d4 <dev_pci_slot>:
  4460d4:	stp	x29, x30, [sp, #-32]!
  4460d8:	str	x28, [sp, #16]
  4460dc:	mov	x29, sp
  4460e0:	sub	sp, sp, #0x2, lsl #12
  4460e4:	sub	sp, sp, #0xb0
  4460e8:	mov	x8, xzr
  4460ec:	sub	x9, x29, #0x50
  4460f0:	stur	x0, [x29, #-16]
  4460f4:	stur	x1, [x29, #-24]
  4460f8:	stur	xzr, [x29, #-32]
  4460fc:	stur	wzr, [x29, #-52]
  446100:	stur	x8, [x29, #-96]
  446104:	stur	x8, [x29, #-112]
  446108:	str	x8, [sp, #4144]
  44610c:	ldur	x8, [x29, #-24]
  446110:	ldr	x0, [x8, #16]
  446114:	mov	x1, x9
  446118:	bl	40a860 <sd_device_get_sysname@plt>
  44611c:	str	w0, [sp, #4132]
  446120:	ldr	w10, [sp, #4132]
  446124:	cmp	w10, #0x0
  446128:	cset	w10, ge  // ge = tcont
  44612c:	tbnz	w10, #0, 446144 <dev_pci_slot+0x70>
  446130:	ldr	w8, [sp, #4132]
  446134:	stur	w8, [x29, #-4]
  446138:	mov	w8, #0x1                   	// #1
  44613c:	str	w8, [sp, #4128]
  446140:	b	446778 <dev_pci_slot+0x6a4>
  446144:	ldur	x0, [x29, #-80]
  446148:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44614c:	add	x1, x1, #0x65
  446150:	sub	x2, x29, #0x24
  446154:	sub	x3, x29, #0x28
  446158:	sub	x4, x29, #0x2c
  44615c:	sub	x5, x29, #0x30
  446160:	bl	40b6a0 <__isoc99_sscanf@plt>
  446164:	cmp	w0, #0x4
  446168:	b.eq	446180 <dev_pci_slot+0xac>  // b.none
  44616c:	mov	w8, #0xfffffffe            	// #-2
  446170:	stur	w8, [x29, #-4]
  446174:	mov	w8, #0x1                   	// #1
  446178:	str	w8, [sp, #4128]
  44617c:	b	446778 <dev_pci_slot+0x6a4>
  446180:	mov	w0, #0x2                   	// #2
  446184:	bl	444294 <naming_scheme_has>
  446188:	tbnz	w0, #0, 446190 <dev_pci_slot+0xbc>
  44618c:	b	4461bc <dev_pci_slot+0xe8>
  446190:	ldur	x8, [x29, #-24]
  446194:	ldr	x0, [x8, #16]
  446198:	bl	446968 <is_pci_ari_enabled>
  44619c:	tbnz	w0, #0, 4461a4 <dev_pci_slot+0xd0>
  4461a0:	b	4461bc <dev_pci_slot+0xe8>
  4461a4:	ldur	w8, [x29, #-44]
  4461a8:	mov	w9, #0x8                   	// #8
  4461ac:	mul	w8, w8, w9
  4461b0:	ldur	w9, [x29, #-48]
  4461b4:	add	w8, w9, w8
  4461b8:	stur	w8, [x29, #-48]
  4461bc:	ldur	x0, [x29, #-16]
  4461c0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4461c4:	add	x1, x1, #0x48
  4461c8:	sub	x2, x29, #0x58
  4461cc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4461d0:	cmp	w0, #0x0
  4461d4:	cset	w8, lt  // lt = tstop
  4461d8:	tbnz	w8, #0, 446278 <dev_pci_slot+0x1a4>
  4461dc:	ldur	x0, [x29, #-88]
  4461e0:	mov	x8, xzr
  4461e4:	mov	x1, x8
  4461e8:	mov	w2, #0xa                   	// #10
  4461ec:	bl	40b670 <strtoul@plt>
  4461f0:	stur	x0, [x29, #-32]
  4461f4:	ldur	x8, [x29, #-32]
  4461f8:	cbnz	x8, 446278 <dev_pci_slot+0x1a4>
  4461fc:	ldur	x0, [x29, #-16]
  446200:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  446204:	add	x1, x1, #0xb5e
  446208:	sub	x2, x29, #0x58
  44620c:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  446210:	cmp	w0, #0x0
  446214:	cset	w8, lt  // lt = tstop
  446218:	tbnz	w8, #0, 446278 <dev_pci_slot+0x1a4>
  44621c:	ldur	x0, [x29, #-88]
  446220:	mov	x8, xzr
  446224:	mov	x1, x8
  446228:	mov	w2, #0xa                   	// #10
  44622c:	bl	40b670 <strtoul@plt>
  446230:	str	x0, [sp, #4120]
  446234:	ldr	x8, [sp, #4120]
  446238:	cmp	x8, #0x20
  44623c:	b.ne	446278 <dev_pci_slot+0x1a4>  // b.any
  446240:	ldur	x0, [x29, #-16]
  446244:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  446248:	add	x1, x1, #0x71
  44624c:	sub	x2, x29, #0x58
  446250:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  446254:	cmp	w0, #0x0
  446258:	cset	w8, lt  // lt = tstop
  44625c:	tbnz	w8, #0, 446278 <dev_pci_slot+0x1a4>
  446260:	ldur	x0, [x29, #-88]
  446264:	mov	x8, xzr
  446268:	mov	x1, x8
  44626c:	mov	w2, #0x10                  	// #16
  446270:	bl	40b670 <strtoul@plt>
  446274:	stur	x0, [x29, #-32]
  446278:	ldur	x0, [x29, #-16]
  44627c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  446280:	add	x1, x1, #0xf92
  446284:	sub	x2, x29, #0x60
  446288:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44628c:	ldur	x8, [x29, #-24]
  446290:	add	x8, x8, #0x28
  446294:	stur	x8, [x29, #-72]
  446298:	mov	x8, #0x10                  	// #16
  44629c:	stur	x8, [x29, #-64]
  4462a0:	ldur	w9, [x29, #-36]
  4462a4:	cmp	w9, #0x0
  4462a8:	cset	w9, ls  // ls = plast
  4462ac:	tbnz	w9, #0, 4462cc <dev_pci_slot+0x1f8>
  4462b0:	ldur	x1, [x29, #-64]
  4462b4:	ldur	w3, [x29, #-36]
  4462b8:	sub	x0, x29, #0x48
  4462bc:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4462c0:	add	x2, x2, #0x78
  4462c4:	bl	40ae80 <strpcpyf@plt>
  4462c8:	stur	x0, [x29, #-64]
  4462cc:	ldur	x1, [x29, #-64]
  4462d0:	ldur	w3, [x29, #-40]
  4462d4:	ldur	w4, [x29, #-44]
  4462d8:	sub	x0, x29, #0x48
  4462dc:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4462e0:	add	x2, x2, #0x7c
  4462e4:	bl	40ae80 <strpcpyf@plt>
  4462e8:	stur	x0, [x29, #-64]
  4462ec:	ldur	w8, [x29, #-48]
  4462f0:	cmp	w8, #0x0
  4462f4:	cset	w8, hi  // hi = pmore
  4462f8:	tbnz	w8, #0, 446310 <dev_pci_slot+0x23c>
  4462fc:	ldur	x8, [x29, #-24]
  446300:	ldr	x0, [x8, #16]
  446304:	bl	4469dc <is_pci_multifunction>
  446308:	tbnz	w0, #0, 446310 <dev_pci_slot+0x23c>
  44630c:	b	44632c <dev_pci_slot+0x258>
  446310:	ldur	x1, [x29, #-64]
  446314:	ldur	w3, [x29, #-48]
  446318:	sub	x0, x29, #0x48
  44631c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446320:	add	x2, x2, #0x83
  446324:	bl	40ae80 <strpcpyf@plt>
  446328:	stur	x0, [x29, #-64]
  44632c:	ldur	x8, [x29, #-96]
  446330:	cbz	x8, 446354 <dev_pci_slot+0x280>
  446334:	ldur	x1, [x29, #-64]
  446338:	ldur	x3, [x29, #-96]
  44633c:	sub	x0, x29, #0x48
  446340:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446344:	add	x2, x2, #0x56
  446348:	bl	40ae80 <strpcpyf@plt>
  44634c:	stur	x0, [x29, #-64]
  446350:	b	446380 <dev_pci_slot+0x2ac>
  446354:	ldur	x8, [x29, #-32]
  446358:	cmp	x8, #0x0
  44635c:	cset	w9, ls  // ls = plast
  446360:	tbnz	w9, #0, 446380 <dev_pci_slot+0x2ac>
  446364:	ldur	x1, [x29, #-64]
  446368:	ldur	x3, [x29, #-32]
  44636c:	sub	x0, x29, #0x48
  446370:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446374:	add	x2, x2, #0x5a
  446378:	bl	40ae80 <strpcpyf@plt>
  44637c:	stur	x0, [x29, #-64]
  446380:	ldur	x8, [x29, #-64]
  446384:	cbnz	x8, 446394 <dev_pci_slot+0x2c0>
  446388:	ldur	x8, [x29, #-24]
  44638c:	mov	w9, #0x0                   	// #0
  446390:	strb	w9, [x8, #40]
  446394:	sub	x0, x29, #0x70
  446398:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  44639c:	add	x1, x1, #0x12f
  4463a0:	adrp	x2, 46c000 <on_inotify.__assert_in_set+0x8540>
  4463a4:	add	x2, x2, #0xfd6
  4463a8:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  4463ac:	str	w0, [sp, #4132]
  4463b0:	ldr	w8, [sp, #4132]
  4463b4:	cmp	w8, #0x0
  4463b8:	cset	w8, ge  // ge = tcont
  4463bc:	tbnz	w8, #0, 4463d4 <dev_pci_slot+0x300>
  4463c0:	ldr	w8, [sp, #4132]
  4463c4:	stur	w8, [x29, #-4]
  4463c8:	mov	w8, #0x1                   	// #1
  4463cc:	str	w8, [sp, #4128]
  4463d0:	b	446778 <dev_pci_slot+0x6a4>
  4463d4:	ldur	x0, [x29, #-112]
  4463d8:	sub	x1, x29, #0x68
  4463dc:	bl	40abf0 <sd_device_get_syspath@plt>
  4463e0:	str	w0, [sp, #4132]
  4463e4:	ldr	w8, [sp, #4132]
  4463e8:	cmp	w8, #0x0
  4463ec:	cset	w8, ge  // ge = tcont
  4463f0:	tbnz	w8, #0, 446408 <dev_pci_slot+0x334>
  4463f4:	ldr	w8, [sp, #4132]
  4463f8:	stur	w8, [x29, #-4]
  4463fc:	mov	w8, #0x1                   	// #1
  446400:	str	w8, [sp, #4128]
  446404:	b	446778 <dev_pci_slot+0x6a4>
  446408:	ldur	x3, [x29, #-104]
  44640c:	add	x0, sp, #0x1, lsl #12
  446410:	add	x0, x0, #0x38
  446414:	mov	x1, #0x1000                	// #4096
  446418:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44641c:	add	x2, x2, #0x87
  446420:	bl	40b140 <snprintf@plt>
  446424:	mov	w1, w0
  446428:	sxtw	x8, w1
  44642c:	cmp	x8, #0x1, lsl #12
  446430:	b.cc	446448 <dev_pci_slot+0x374>  // b.lo, b.ul, b.last
  446434:	mov	w8, #0xffffffdc            	// #-36
  446438:	stur	w8, [x29, #-4]
  44643c:	mov	w8, #0x1                   	// #1
  446440:	str	w8, [sp, #4128]
  446444:	b	446778 <dev_pci_slot+0x6a4>
  446448:	add	x0, sp, #0x1, lsl #12
  44644c:	add	x0, x0, #0x38
  446450:	bl	40b1f0 <opendir@plt>
  446454:	str	x0, [sp, #4144]
  446458:	ldr	x8, [sp, #4144]
  44645c:	cbnz	x8, 446480 <dev_pci_slot+0x3ac>
  446460:	bl	40a480 <__errno_location@plt>
  446464:	ldr	w8, [x0]
  446468:	mov	w9, wzr
  44646c:	subs	w8, w9, w8
  446470:	stur	w8, [x29, #-4]
  446474:	mov	w8, #0x1                   	// #1
  446478:	str	w8, [sp, #4128]
  44647c:	b	446778 <dev_pci_slot+0x6a4>
  446480:	ldur	x8, [x29, #-24]
  446484:	ldr	x8, [x8, #16]
  446488:	stur	x8, [x29, #-120]
  44648c:	ldur	x8, [x29, #-120]
  446490:	cbz	x8, 446658 <dev_pci_slot+0x584>
  446494:	ldur	x0, [x29, #-120]
  446498:	sub	x1, x29, #0x50
  44649c:	bl	40a860 <sd_device_get_sysname@plt>
  4464a0:	cmp	w0, #0x0
  4464a4:	cset	w8, ge  // ge = tcont
  4464a8:	tbnz	w8, #0, 4464b0 <dev_pci_slot+0x3dc>
  4464ac:	b	44648c <dev_pci_slot+0x3b8>
  4464b0:	bl	40a480 <__errno_location@plt>
  4464b4:	str	wzr, [x0]
  4464b8:	ldr	x0, [sp, #4144]
  4464bc:	bl	40b200 <readdir64@plt>
  4464c0:	str	x0, [sp, #4136]
  4464c4:	ldr	x8, [sp, #4136]
  4464c8:	cbnz	x8, 4464e8 <dev_pci_slot+0x414>
  4464cc:	bl	40a480 <__errno_location@plt>
  4464d0:	ldr	w8, [x0]
  4464d4:	cmp	w8, #0x0
  4464d8:	cset	w8, le
  4464dc:	tbnz	w8, #0, 4464e4 <dev_pci_slot+0x410>
  4464e0:	b	44660c <dev_pci_slot+0x538>
  4464e4:	b	44660c <dev_pci_slot+0x538>
  4464e8:	mov	x8, xzr
  4464ec:	str	x8, [sp, #8]
  4464f0:	ldr	x8, [sp, #4136]
  4464f4:	ldrb	w9, [x8, #19]
  4464f8:	cmp	w9, #0x2e
  4464fc:	b.ne	44650c <dev_pci_slot+0x438>  // b.any
  446500:	mov	w8, #0x6                   	// #6
  446504:	str	w8, [sp, #4128]
  446508:	b	4465c8 <dev_pci_slot+0x4f4>
  44650c:	ldr	x8, [sp, #4136]
  446510:	add	x0, x8, #0x13
  446514:	mov	w1, #0xa                   	// #10
  446518:	add	x2, sp, #0x1, lsl #12
  44651c:	add	x2, x2, #0x14
  446520:	bl	40a7e0 <safe_atou_full@plt>
  446524:	str	w0, [sp, #4132]
  446528:	ldr	w9, [sp, #4132]
  44652c:	cmp	w9, #0x0
  446530:	cset	w9, lt  // lt = tstop
  446534:	tbnz	w9, #0, 446548 <dev_pci_slot+0x474>
  446538:	ldr	w8, [sp, #4116]
  44653c:	cmp	w8, #0x0
  446540:	cset	w8, hi  // hi = pmore
  446544:	tbnz	w8, #0, 446554 <dev_pci_slot+0x480>
  446548:	mov	w8, #0x6                   	// #6
  44654c:	str	w8, [sp, #4128]
  446550:	b	4465c8 <dev_pci_slot+0x4f4>
  446554:	ldr	x8, [sp, #4136]
  446558:	add	x4, x8, #0x13
  44655c:	add	x0, sp, #0x14
  446560:	mov	x1, #0x1000                	// #4096
  446564:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446568:	add	x2, x2, #0x90
  44656c:	add	x3, sp, #0x1, lsl #12
  446570:	add	x3, x3, #0x38
  446574:	bl	40b140 <snprintf@plt>
  446578:	mov	w1, w0
  44657c:	sxtw	x8, w1
  446580:	cmp	x8, #0x1, lsl #12
  446584:	b.cs	4465c4 <dev_pci_slot+0x4f0>  // b.hs, b.nlast
  446588:	add	x0, sp, #0x14
  44658c:	add	x1, sp, #0x8
  446590:	bl	40b710 <read_one_line_file@plt>
  446594:	cmp	w0, #0x0
  446598:	cset	w8, lt  // lt = tstop
  44659c:	tbnz	w8, #0, 4465c4 <dev_pci_slot+0x4f0>
  4465a0:	ldur	x0, [x29, #-80]
  4465a4:	ldr	x1, [sp, #8]
  4465a8:	bl	44689c <startswith>
  4465ac:	cbz	x0, 4465c4 <dev_pci_slot+0x4f0>
  4465b0:	ldr	w8, [sp, #4116]
  4465b4:	stur	w8, [x29, #-52]
  4465b8:	mov	w8, #0x4                   	// #4
  4465bc:	str	w8, [sp, #4128]
  4465c0:	b	4465c8 <dev_pci_slot+0x4f4>
  4465c4:	str	wzr, [sp, #4128]
  4465c8:	add	x0, sp, #0x8
  4465cc:	bl	4467d8 <freep>
  4465d0:	ldr	w8, [sp, #4128]
  4465d4:	str	w8, [sp, #4]
  4465d8:	cbz	w8, 4465f4 <dev_pci_slot+0x520>
  4465dc:	b	4465e0 <dev_pci_slot+0x50c>
  4465e0:	ldr	w8, [sp, #4]
  4465e4:	cmp	w8, #0x4
  4465e8:	b.eq	44660c <dev_pci_slot+0x538>  // b.none
  4465ec:	b	4465f0 <dev_pci_slot+0x51c>
  4465f0:	b	4465f4 <dev_pci_slot+0x520>
  4465f4:	bl	40a480 <__errno_location@plt>
  4465f8:	str	wzr, [x0]
  4465fc:	ldr	x0, [sp, #4144]
  446600:	bl	40b200 <readdir64@plt>
  446604:	str	x0, [sp, #4136]
  446608:	b	4464c4 <dev_pci_slot+0x3f0>
  44660c:	ldur	w8, [x29, #-52]
  446610:	cmp	w8, #0x0
  446614:	cset	w8, ls  // ls = plast
  446618:	tbnz	w8, #0, 446620 <dev_pci_slot+0x54c>
  44661c:	b	446658 <dev_pci_slot+0x584>
  446620:	sub	x3, x29, #0x78
  446624:	ldur	x0, [x29, #-120]
  446628:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44662c:	add	x1, x1, #0xfd6
  446630:	mov	x8, xzr
  446634:	mov	x2, x8
  446638:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  44663c:	cmp	w0, #0x0
  446640:	cset	w9, ge  // ge = tcont
  446644:	tbnz	w9, #0, 44664c <dev_pci_slot+0x578>
  446648:	b	446658 <dev_pci_slot+0x584>
  44664c:	ldr	x0, [sp, #4144]
  446650:	bl	40b720 <rewinddir@plt>
  446654:	b	44648c <dev_pci_slot+0x3b8>
  446658:	ldur	w8, [x29, #-52]
  44665c:	cmp	w8, #0x0
  446660:	cset	w8, ls  // ls = plast
  446664:	tbnz	w8, #0, 44676c <dev_pci_slot+0x698>
  446668:	ldur	x8, [x29, #-24]
  44666c:	add	x8, x8, #0x18
  446670:	stur	x8, [x29, #-72]
  446674:	mov	x8, #0x10                  	// #16
  446678:	stur	x8, [x29, #-64]
  44667c:	ldur	w9, [x29, #-36]
  446680:	cmp	w9, #0x0
  446684:	cset	w9, ls  // ls = plast
  446688:	tbnz	w9, #0, 4466a8 <dev_pci_slot+0x5d4>
  44668c:	ldur	x1, [x29, #-64]
  446690:	ldur	w3, [x29, #-36]
  446694:	sub	x0, x29, #0x48
  446698:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44669c:	add	x2, x2, #0x9e
  4466a0:	bl	40ae80 <strpcpyf@plt>
  4466a4:	stur	x0, [x29, #-64]
  4466a8:	ldur	x1, [x29, #-64]
  4466ac:	ldur	w3, [x29, #-52]
  4466b0:	sub	x0, x29, #0x48
  4466b4:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4466b8:	add	x2, x2, #0xa2
  4466bc:	bl	40ae80 <strpcpyf@plt>
  4466c0:	stur	x0, [x29, #-64]
  4466c4:	ldur	w8, [x29, #-48]
  4466c8:	cmp	w8, #0x0
  4466cc:	cset	w8, hi  // hi = pmore
  4466d0:	tbnz	w8, #0, 4466e8 <dev_pci_slot+0x614>
  4466d4:	ldur	x8, [x29, #-24]
  4466d8:	ldr	x0, [x8, #16]
  4466dc:	bl	4469dc <is_pci_multifunction>
  4466e0:	tbnz	w0, #0, 4466e8 <dev_pci_slot+0x614>
  4466e4:	b	446704 <dev_pci_slot+0x630>
  4466e8:	ldur	x1, [x29, #-64]
  4466ec:	ldur	w3, [x29, #-48]
  4466f0:	sub	x0, x29, #0x48
  4466f4:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4466f8:	add	x2, x2, #0xa6
  4466fc:	bl	40ae80 <strpcpyf@plt>
  446700:	stur	x0, [x29, #-64]
  446704:	ldur	x8, [x29, #-96]
  446708:	cbz	x8, 44672c <dev_pci_slot+0x658>
  44670c:	ldur	x1, [x29, #-64]
  446710:	ldur	x3, [x29, #-96]
  446714:	sub	x0, x29, #0x48
  446718:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44671c:	add	x2, x2, #0x56
  446720:	bl	40ae80 <strpcpyf@plt>
  446724:	stur	x0, [x29, #-64]
  446728:	b	446758 <dev_pci_slot+0x684>
  44672c:	ldur	x8, [x29, #-32]
  446730:	cmp	x8, #0x0
  446734:	cset	w9, ls  // ls = plast
  446738:	tbnz	w9, #0, 446758 <dev_pci_slot+0x684>
  44673c:	ldur	x1, [x29, #-64]
  446740:	ldur	x3, [x29, #-32]
  446744:	sub	x0, x29, #0x48
  446748:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44674c:	add	x2, x2, #0x5a
  446750:	bl	40ae80 <strpcpyf@plt>
  446754:	stur	x0, [x29, #-64]
  446758:	ldur	x8, [x29, #-64]
  44675c:	cbnz	x8, 44676c <dev_pci_slot+0x698>
  446760:	ldur	x8, [x29, #-24]
  446764:	mov	w9, #0x0                   	// #0
  446768:	strb	w9, [x8, #24]
  44676c:	stur	wzr, [x29, #-4]
  446770:	mov	w8, #0x1                   	// #1
  446774:	str	w8, [sp, #4128]
  446778:	add	x0, sp, #0x1, lsl #12
  44677c:	add	x0, x0, #0x30
  446780:	bl	446800 <closedirp>
  446784:	sub	x0, x29, #0x70
  446788:	bl	4467a4 <sd_device_unrefp>
  44678c:	ldur	w0, [x29, #-4]
  446790:	add	sp, sp, #0x2, lsl #12
  446794:	add	sp, sp, #0xb0
  446798:	ldr	x28, [sp, #16]
  44679c:	ldp	x29, x30, [sp], #32
  4467a0:	ret

00000000004467a4 <sd_device_unrefp>:
  4467a4:	sub	sp, sp, #0x20
  4467a8:	stp	x29, x30, [sp, #16]
  4467ac:	add	x29, sp, #0x10
  4467b0:	str	x0, [sp, #8]
  4467b4:	ldr	x8, [sp, #8]
  4467b8:	ldr	x8, [x8]
  4467bc:	cbz	x8, 4467cc <sd_device_unrefp+0x28>
  4467c0:	ldr	x8, [sp, #8]
  4467c4:	ldr	x0, [x8]
  4467c8:	bl	40a7c0 <sd_device_unref@plt>
  4467cc:	ldp	x29, x30, [sp, #16]
  4467d0:	add	sp, sp, #0x20
  4467d4:	ret

00000000004467d8 <freep>:
  4467d8:	sub	sp, sp, #0x20
  4467dc:	stp	x29, x30, [sp, #16]
  4467e0:	add	x29, sp, #0x10
  4467e4:	str	x0, [sp, #8]
  4467e8:	ldr	x8, [sp, #8]
  4467ec:	ldr	x0, [x8]
  4467f0:	bl	40a530 <free@plt>
  4467f4:	ldp	x29, x30, [sp, #16]
  4467f8:	add	sp, sp, #0x20
  4467fc:	ret

0000000000446800 <closedirp>:
  446800:	sub	sp, sp, #0x20
  446804:	stp	x29, x30, [sp, #16]
  446808:	add	x29, sp, #0x10
  44680c:	str	x0, [sp, #8]
  446810:	ldr	x8, [sp, #8]
  446814:	ldr	x8, [x8]
  446818:	cbz	x8, 446828 <closedirp+0x28>
  44681c:	ldr	x8, [sp, #8]
  446820:	ldr	x0, [x8]
  446824:	bl	40b230 <closedir@plt>
  446828:	ldp	x29, x30, [sp, #16]
  44682c:	add	sp, sp, #0x20
  446830:	ret

0000000000446834 <size_multiply_overflow>:
  446834:	sub	sp, sp, #0x20
  446838:	str	x0, [sp, #24]
  44683c:	str	x1, [sp, #16]
  446840:	ldr	x8, [sp, #16]
  446844:	mov	w9, #0x0                   	// #0
  446848:	str	w9, [sp, #12]
  44684c:	cbz	x8, 44686c <size_multiply_overflow+0x38>
  446850:	ldr	x8, [sp, #24]
  446854:	ldr	x9, [sp, #16]
  446858:	mov	x10, #0xffffffffffffffff    	// #-1
  44685c:	udiv	x9, x10, x9
  446860:	cmp	x8, x9
  446864:	cset	w11, hi  // hi = pmore
  446868:	str	w11, [sp, #12]
  44686c:	ldr	w8, [sp, #12]
  446870:	mov	w9, #0x1                   	// #1
  446874:	eor	w8, w8, #0x1
  446878:	eor	w8, w8, w9
  44687c:	and	w8, w8, #0x1
  446880:	mov	w0, w8
  446884:	sxtw	x10, w0
  446888:	cmp	x10, #0x0
  44688c:	cset	w8, ne  // ne = any
  446890:	and	w0, w8, #0x1
  446894:	add	sp, sp, #0x20
  446898:	ret

000000000044689c <startswith>:
  44689c:	sub	sp, sp, #0x30
  4468a0:	stp	x29, x30, [sp, #32]
  4468a4:	add	x29, sp, #0x20
  4468a8:	str	x0, [sp, #16]
  4468ac:	str	x1, [sp, #8]
  4468b0:	ldr	x0, [sp, #8]
  4468b4:	bl	40a800 <strlen@plt>
  4468b8:	str	x0, [sp]
  4468bc:	ldr	x0, [sp, #16]
  4468c0:	ldr	x1, [sp, #8]
  4468c4:	ldr	x2, [sp]
  4468c8:	bl	40a810 <strncmp@plt>
  4468cc:	cbnz	w0, 4468e4 <startswith+0x48>
  4468d0:	ldr	x8, [sp, #16]
  4468d4:	ldr	x9, [sp]
  4468d8:	add	x8, x8, x9
  4468dc:	stur	x8, [x29, #-8]
  4468e0:	b	4468ec <startswith+0x50>
  4468e4:	mov	x8, xzr
  4468e8:	stur	x8, [x29, #-8]
  4468ec:	ldur	x0, [x29, #-8]
  4468f0:	ldp	x29, x30, [sp, #32]
  4468f4:	add	sp, sp, #0x30
  4468f8:	ret

00000000004468fc <isempty>:
  4468fc:	sub	sp, sp, #0x10
  446900:	str	x0, [sp, #8]
  446904:	ldr	x8, [sp, #8]
  446908:	mov	w9, #0x1                   	// #1
  44690c:	str	w9, [sp, #4]
  446910:	cbz	x8, 44692c <isempty+0x30>
  446914:	ldr	x8, [sp, #8]
  446918:	ldrb	w9, [x8]
  44691c:	cmp	w9, #0x0
  446920:	cset	w9, ne  // ne = any
  446924:	eor	w9, w9, #0x1
  446928:	str	w9, [sp, #4]
  44692c:	ldr	w8, [sp, #4]
  446930:	and	w0, w8, #0x1
  446934:	add	sp, sp, #0x10
  446938:	ret

000000000044693c <safe_atolu>:
  44693c:	sub	sp, sp, #0x20
  446940:	stp	x29, x30, [sp, #16]
  446944:	add	x29, sp, #0x10
  446948:	str	x0, [sp, #8]
  44694c:	str	x1, [sp]
  446950:	ldr	x0, [sp, #8]
  446954:	ldr	x1, [sp]
  446958:	bl	40b730 <safe_atollu@plt>
  44695c:	ldp	x29, x30, [sp, #16]
  446960:	add	sp, sp, #0x20
  446964:	ret

0000000000446968 <is_pci_ari_enabled>:
  446968:	sub	sp, sp, #0x30
  44696c:	stp	x29, x30, [sp, #32]
  446970:	add	x29, sp, #0x20
  446974:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  446978:	add	x1, x1, #0xaa
  44697c:	add	x2, sp, #0x8
  446980:	str	x0, [sp, #16]
  446984:	ldr	x0, [sp, #16]
  446988:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44698c:	cmp	w0, #0x0
  446990:	cset	w8, ge  // ge = tcont
  446994:	tbnz	w8, #0, 4469a8 <is_pci_ari_enabled+0x40>
  446998:	mov	w8, wzr
  44699c:	and	w8, w8, #0x1
  4469a0:	sturb	w8, [x29, #-1]
  4469a4:	b	4469c8 <is_pci_ari_enabled+0x60>
  4469a8:	ldr	x0, [sp, #8]
  4469ac:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4469b0:	add	x1, x1, #0xbbe
  4469b4:	bl	40aa20 <strcmp@plt>
  4469b8:	cmp	w0, #0x0
  4469bc:	cset	w8, eq  // eq = none
  4469c0:	and	w8, w8, #0x1
  4469c4:	sturb	w8, [x29, #-1]
  4469c8:	ldurb	w8, [x29, #-1]
  4469cc:	and	w0, w8, #0x1
  4469d0:	ldp	x29, x30, [sp, #32]
  4469d4:	add	sp, sp, #0x30
  4469d8:	ret

00000000004469dc <is_pci_multifunction>:
  4469dc:	stp	x29, x30, [sp, #-16]!
  4469e0:	mov	x29, sp
  4469e4:	sub	sp, sp, #0xd0
  4469e8:	mov	w8, #0xffffffff            	// #-1
  4469ec:	adrp	x9, 46c000 <on_inotify.__assert_in_set+0x8540>
  4469f0:	add	x9, x9, #0xbd2
  4469f4:	add	x9, x9, #0x3
  4469f8:	sub	x1, x29, #0x28
  4469fc:	stur	x0, [x29, #-16]
  446a00:	stur	w8, [x29, #-20]
  446a04:	ldur	x0, [x29, #-16]
  446a08:	stur	x9, [x29, #-192]
  446a0c:	bl	40abf0 <sd_device_get_syspath@plt>
  446a10:	cmp	w0, #0x0
  446a14:	cset	w8, ge  // ge = tcont
  446a18:	tbnz	w8, #0, 446a34 <is_pci_multifunction+0x58>
  446a1c:	mov	w8, wzr
  446a20:	and	w8, w8, #0x1
  446a24:	sturb	w8, [x29, #-1]
  446a28:	mov	w8, #0x1                   	// #1
  446a2c:	stur	w8, [x29, #-108]
  446a30:	b	446cd0 <is_pci_multifunction+0x2f4>
  446a34:	ldur	x8, [x29, #-40]
  446a38:	sub	x9, x29, #0x80
  446a3c:	stur	x8, [x29, #-128]
  446a40:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  446a44:	add	x8, x8, #0xb6
  446a48:	str	x8, [x9, #8]
  446a4c:	stur	xzr, [x29, #-152]
  446a50:	stur	xzr, [x29, #-160]
  446a54:	ldur	x8, [x29, #-160]
  446a58:	mov	w9, #0x0                   	// #0
  446a5c:	cmp	x8, #0x2
  446a60:	stur	w9, [x29, #-196]
  446a64:	b.cs	446a8c <is_pci_multifunction+0xb0>  // b.hs, b.nlast
  446a68:	ldur	x8, [x29, #-160]
  446a6c:	mov	x9, #0x8                   	// #8
  446a70:	mul	x8, x9, x8
  446a74:	sub	x9, x29, #0x80
  446a78:	add	x8, x9, x8
  446a7c:	ldr	x8, [x8]
  446a80:	cmp	x8, #0x0
  446a84:	cset	w10, ne  // ne = any
  446a88:	stur	w10, [x29, #-196]
  446a8c:	ldur	w8, [x29, #-196]
  446a90:	tbnz	w8, #0, 446a98 <is_pci_multifunction+0xbc>
  446a94:	b	446ad0 <is_pci_multifunction+0xf4>
  446a98:	ldur	x8, [x29, #-160]
  446a9c:	mov	x9, #0x8                   	// #8
  446aa0:	mul	x8, x9, x8
  446aa4:	sub	x9, x29, #0x80
  446aa8:	add	x8, x9, x8
  446aac:	ldr	x0, [x8]
  446ab0:	bl	40a800 <strlen@plt>
  446ab4:	ldur	x8, [x29, #-152]
  446ab8:	add	x8, x8, x0
  446abc:	stur	x8, [x29, #-152]
  446ac0:	ldur	x8, [x29, #-160]
  446ac4:	add	x8, x8, #0x1
  446ac8:	stur	x8, [x29, #-160]
  446acc:	b	446a54 <is_pci_multifunction+0x78>
  446ad0:	ldur	x8, [x29, #-152]
  446ad4:	add	x8, x8, #0x1
  446ad8:	stur	x8, [x29, #-168]
  446adc:	ldur	x1, [x29, #-168]
  446ae0:	mov	x0, #0x1                   	// #1
  446ae4:	bl	446834 <size_multiply_overflow>
  446ae8:	mov	w8, #0x1                   	// #1
  446aec:	eor	w9, w0, #0x1
  446af0:	eor	w9, w9, w8
  446af4:	eor	w9, w9, w8
  446af8:	eor	w8, w9, w8
  446afc:	and	w8, w8, #0x1
  446b00:	mov	w1, w8
  446b04:	sxtw	x10, w1
  446b08:	cbz	x10, 446b2c <is_pci_multifunction+0x150>
  446b0c:	mov	w0, #0x1                   	// #1
  446b10:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  446b14:	add	x1, x1, #0x694
  446b18:	ldur	x2, [x29, #-192]
  446b1c:	mov	w3, #0xe1                  	// #225
  446b20:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  446b24:	add	x4, x4, #0xbe
  446b28:	bl	40a540 <log_assert_failed_realm@plt>
  446b2c:	ldur	x8, [x29, #-168]
  446b30:	mov	x9, #0x1                   	// #1
  446b34:	mul	x8, x9, x8
  446b38:	cmp	x8, #0x400, lsl #12
  446b3c:	cset	w10, ls  // ls = plast
  446b40:	mov	w11, #0x1                   	// #1
  446b44:	eor	w10, w10, #0x1
  446b48:	eor	w10, w10, w11
  446b4c:	eor	w10, w10, w11
  446b50:	and	w10, w10, #0x1
  446b54:	mov	w0, w10
  446b58:	sxtw	x8, w0
  446b5c:	cbz	x8, 446b80 <is_pci_multifunction+0x1a4>
  446b60:	mov	w0, #0x1                   	// #1
  446b64:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  446b68:	add	x1, x1, #0x6f4
  446b6c:	ldur	x2, [x29, #-192]
  446b70:	mov	w3, #0xe1                  	// #225
  446b74:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  446b78:	add	x4, x4, #0xbe
  446b7c:	bl	40a540 <log_assert_failed_realm@plt>
  446b80:	ldur	x8, [x29, #-168]
  446b84:	mov	x9, #0x1                   	// #1
  446b88:	mul	x8, x9, x8
  446b8c:	mul	x8, x8, x9
  446b90:	add	x8, x8, #0xf
  446b94:	and	x8, x8, #0xfffffffffffffff0
  446b98:	mov	x9, sp
  446b9c:	subs	x8, x9, x8
  446ba0:	mov	sp, x8
  446ba4:	stur	x8, [x29, #-176]
  446ba8:	ldur	x8, [x29, #-176]
  446bac:	stur	x8, [x29, #-136]
  446bb0:	stur	x8, [x29, #-144]
  446bb4:	stur	xzr, [x29, #-160]
  446bb8:	ldur	x8, [x29, #-160]
  446bbc:	mov	w9, #0x0                   	// #0
  446bc0:	cmp	x8, #0x2
  446bc4:	stur	w9, [x29, #-200]
  446bc8:	b.cs	446bf0 <is_pci_multifunction+0x214>  // b.hs, b.nlast
  446bcc:	ldur	x8, [x29, #-160]
  446bd0:	mov	x9, #0x8                   	// #8
  446bd4:	mul	x8, x9, x8
  446bd8:	sub	x9, x29, #0x80
  446bdc:	add	x8, x9, x8
  446be0:	ldr	x8, [x8]
  446be4:	cmp	x8, #0x0
  446be8:	cset	w10, ne  // ne = any
  446bec:	stur	w10, [x29, #-200]
  446bf0:	ldur	w8, [x29, #-200]
  446bf4:	tbnz	w8, #0, 446bfc <is_pci_multifunction+0x220>
  446bf8:	b	446c30 <is_pci_multifunction+0x254>
  446bfc:	ldur	x0, [x29, #-144]
  446c00:	ldur	x8, [x29, #-160]
  446c04:	mov	x9, #0x8                   	// #8
  446c08:	mul	x8, x9, x8
  446c0c:	sub	x9, x29, #0x80
  446c10:	add	x8, x9, x8
  446c14:	ldr	x1, [x8]
  446c18:	bl	40aca0 <stpcpy@plt>
  446c1c:	stur	x0, [x29, #-144]
  446c20:	ldur	x8, [x29, #-160]
  446c24:	add	x8, x8, #0x1
  446c28:	stur	x8, [x29, #-160]
  446c2c:	b	446bb8 <is_pci_multifunction+0x1dc>
  446c30:	ldur	x8, [x29, #-144]
  446c34:	mov	w9, #0x0                   	// #0
  446c38:	strb	w9, [x8]
  446c3c:	ldur	x8, [x29, #-136]
  446c40:	stur	x8, [x29, #-184]
  446c44:	ldur	x8, [x29, #-184]
  446c48:	stur	x8, [x29, #-32]
  446c4c:	ldur	x0, [x29, #-32]
  446c50:	mov	w1, #0x80000               	// #524288
  446c54:	bl	40abd0 <open64@plt>
  446c58:	stur	w0, [x29, #-20]
  446c5c:	ldur	w9, [x29, #-20]
  446c60:	cmp	w9, #0x0
  446c64:	cset	w9, ge  // ge = tcont
  446c68:	tbnz	w9, #0, 446c84 <is_pci_multifunction+0x2a8>
  446c6c:	mov	w8, wzr
  446c70:	and	w8, w8, #0x1
  446c74:	sturb	w8, [x29, #-1]
  446c78:	mov	w8, #0x1                   	// #1
  446c7c:	stur	w8, [x29, #-108]
  446c80:	b	446cd0 <is_pci_multifunction+0x2f4>
  446c84:	ldur	w0, [x29, #-20]
  446c88:	sub	x1, x29, #0x68
  446c8c:	mov	x2, #0x40                  	// #64
  446c90:	bl	40a920 <read@plt>
  446c94:	cmp	x0, #0x40
  446c98:	b.eq	446cb4 <is_pci_multifunction+0x2d8>  // b.none
  446c9c:	mov	w8, wzr
  446ca0:	and	w8, w8, #0x1
  446ca4:	sturb	w8, [x29, #-1]
  446ca8:	mov	w8, #0x1                   	// #1
  446cac:	stur	w8, [x29, #-108]
  446cb0:	b	446cd0 <is_pci_multifunction+0x2f4>
  446cb4:	ldurb	w8, [x29, #-90]
  446cb8:	tst	w8, #0x80
  446cbc:	cset	w8, ne  // ne = any
  446cc0:	and	w8, w8, #0x1
  446cc4:	sturb	w8, [x29, #-1]
  446cc8:	mov	w8, #0x1                   	// #1
  446ccc:	stur	w8, [x29, #-108]
  446cd0:	sub	x0, x29, #0x14
  446cd4:	bl	446cec <closep>
  446cd8:	ldurb	w8, [x29, #-1]
  446cdc:	and	w0, w8, #0x1
  446ce0:	mov	sp, x29
  446ce4:	ldp	x29, x30, [sp], #16
  446ce8:	ret

0000000000446cec <closep>:
  446cec:	sub	sp, sp, #0x20
  446cf0:	stp	x29, x30, [sp, #16]
  446cf4:	add	x29, sp, #0x10
  446cf8:	str	x0, [sp, #8]
  446cfc:	ldr	x8, [sp, #8]
  446d00:	ldr	w0, [x8]
  446d04:	bl	40a760 <safe_close@plt>
  446d08:	ldp	x29, x30, [sp, #16]
  446d0c:	add	sp, sp, #0x20
  446d10:	ret

0000000000446d14 <builtin_net_setup_link>:
  446d14:	sub	sp, sp, #0x120
  446d18:	stp	x29, x30, [sp, #256]
  446d1c:	str	x28, [sp, #272]
  446d20:	add	x29, sp, #0x100
  446d24:	sub	x8, x29, #0x40
  446d28:	mov	x9, xzr
  446d2c:	mov	w10, #0x1                   	// #1
  446d30:	adrp	x11, 4a0000 <arg_event_timeout_usec>
  446d34:	add	x11, x11, #0x240
  446d38:	adrp	x12, 464000 <on_inotify.__assert_in_set+0x540>
  446d3c:	add	x12, x12, #0xa46
  446d40:	adrp	x13, 46d000 <on_inotify.__assert_in_set+0x9540>
  446d44:	add	x13, x13, #0x1bb
  446d48:	add	x13, x13, #0x3
  446d4c:	adrp	x14, 46d000 <on_inotify.__assert_in_set+0x9540>
  446d50:	add	x14, x14, #0x1e5
  446d54:	str	x0, [x8, #48]
  446d58:	stur	w1, [x29, #-20]
  446d5c:	str	x2, [x8, #32]
  446d60:	and	w10, w3, w10
  446d64:	sturb	w10, [x29, #-33]
  446d68:	str	x9, [x8, #16]
  446d6c:	str	x9, [x8, #8]
  446d70:	ldur	w10, [x29, #-20]
  446d74:	cmp	w10, #0x1
  446d78:	str	x8, [sp, #48]
  446d7c:	str	x11, [sp, #40]
  446d80:	str	x12, [sp, #32]
  446d84:	str	x13, [sp, #24]
  446d88:	str	x14, [sp, #16]
  446d8c:	b.le	446e60 <builtin_net_setup_link+0x14c>
  446d90:	mov	x8, xzr
  446d94:	stur	x8, [x29, #-80]
  446d98:	ldr	x8, [sp, #48]
  446d9c:	ldr	x9, [x8, #48]
  446da0:	stur	x9, [x29, #-88]
  446da4:	mov	w10, #0x3                   	// #3
  446da8:	stur	w10, [x29, #-92]
  446dac:	mov	w10, #0x16                  	// #22
  446db0:	movk	w10, #0x4000, lsl #16
  446db4:	stur	w10, [x29, #-96]
  446db8:	ldur	x9, [x29, #-88]
  446dbc:	cbz	x9, 446dfc <builtin_net_setup_link+0xe8>
  446dc0:	mov	w0, #0x1                   	// #1
  446dc4:	bl	40a3f0 <log_get_max_level_realm@plt>
  446dc8:	ldur	w8, [x29, #-92]
  446dcc:	cmp	w0, w8
  446dd0:	cset	w8, ge  // ge = tcont
  446dd4:	mov	w9, #0x1                   	// #1
  446dd8:	eor	w8, w8, #0x1
  446ddc:	eor	w8, w8, w9
  446de0:	and	w8, w8, #0x1
  446de4:	mov	w1, w8
  446de8:	sxtw	x10, w1
  446dec:	cbz	x10, 446dfc <builtin_net_setup_link+0xe8>
  446df0:	ldur	x0, [x29, #-88]
  446df4:	sub	x1, x29, #0x50
  446df8:	bl	40a860 <sd_device_get_sysname@plt>
  446dfc:	ldur	w0, [x29, #-92]
  446e00:	ldur	w1, [x29, #-96]
  446e04:	ldur	x8, [x29, #-80]
  446e08:	mov	x9, xzr
  446e0c:	cmp	x8, #0x0
  446e10:	ldr	x8, [sp, #32]
  446e14:	csel	x5, x8, x9, ne  // ne = any
  446e18:	ldur	x6, [x29, #-80]
  446e1c:	ldr	x2, [sp, #24]
  446e20:	mov	w3, #0x13                  	// #19
  446e24:	ldr	x4, [sp, #16]
  446e28:	mov	x7, x9
  446e2c:	mov	x10, sp
  446e30:	str	x9, [x10]
  446e34:	mov	x9, sp
  446e38:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  446e3c:	add	x10, x10, #0x1fc
  446e40:	str	x10, [x9, #8]
  446e44:	bl	40a870 <log_object_internal@plt>
  446e48:	stur	w0, [x29, #-100]
  446e4c:	ldur	w11, [x29, #-100]
  446e50:	stur	w11, [x29, #-4]
  446e54:	mov	w11, #0x1                   	// #1
  446e58:	stur	w11, [x29, #-104]
  446e5c:	b	4471c4 <builtin_net_setup_link+0x4b0>
  446e60:	ldr	x8, [sp, #40]
  446e64:	ldr	x0, [x8]
  446e68:	ldr	x9, [sp, #48]
  446e6c:	ldr	x1, [x9, #48]
  446e70:	sub	x2, x29, #0x30
  446e74:	bl	44ef8c <link_get_driver>
  446e78:	stur	w0, [x29, #-68]
  446e7c:	ldur	w10, [x29, #-68]
  446e80:	cmp	w10, #0x0
  446e84:	cset	w10, lt  // lt = tstop
  446e88:	tbnz	w10, #0, 446eac <builtin_net_setup_link+0x198>
  446e8c:	ldr	x8, [sp, #48]
  446e90:	ldr	x0, [x8, #48]
  446e94:	ldurb	w9, [x29, #-33]
  446e98:	ldr	x3, [x8, #16]
  446e9c:	and	w1, w9, #0x1
  446ea0:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  446ea4:	add	x2, x2, #0x21d
  446ea8:	bl	43eae8 <udev_builtin_add_property>
  446eac:	ldr	x8, [sp, #40]
  446eb0:	ldr	x0, [x8]
  446eb4:	ldr	x9, [sp, #48]
  446eb8:	ldr	x1, [x9, #48]
  446ebc:	sub	x2, x29, #0x40
  446ec0:	bl	44cd44 <link_config_get>
  446ec4:	stur	w0, [x29, #-68]
  446ec8:	ldur	w10, [x29, #-68]
  446ecc:	cmp	w10, #0x0
  446ed0:	cset	w10, ge  // ge = tcont
  446ed4:	tbnz	w10, #0, 447080 <builtin_net_setup_link+0x36c>
  446ed8:	ldur	w8, [x29, #-68]
  446edc:	mov	w9, #0xfffffffe            	// #-2
  446ee0:	cmp	w8, w9
  446ee4:	b.ne	446fb4 <builtin_net_setup_link+0x2a0>  // b.any
  446ee8:	mov	x8, xzr
  446eec:	stur	x8, [x29, #-112]
  446ef0:	ldr	x8, [sp, #48]
  446ef4:	ldr	x9, [x8, #48]
  446ef8:	stur	x9, [x29, #-120]
  446efc:	mov	w10, #0x7                   	// #7
  446f00:	stur	w10, [x29, #-124]
  446f04:	ldur	w10, [x29, #-68]
  446f08:	str	w10, [sp, #128]
  446f0c:	ldur	x9, [x29, #-120]
  446f10:	cbz	x9, 446f50 <builtin_net_setup_link+0x23c>
  446f14:	mov	w0, #0x1                   	// #1
  446f18:	bl	40a3f0 <log_get_max_level_realm@plt>
  446f1c:	ldur	w8, [x29, #-124]
  446f20:	cmp	w0, w8
  446f24:	cset	w8, ge  // ge = tcont
  446f28:	mov	w9, #0x1                   	// #1
  446f2c:	eor	w8, w8, #0x1
  446f30:	eor	w8, w8, w9
  446f34:	and	w8, w8, #0x1
  446f38:	mov	w1, w8
  446f3c:	sxtw	x10, w1
  446f40:	cbz	x10, 446f50 <builtin_net_setup_link+0x23c>
  446f44:	ldur	x0, [x29, #-120]
  446f48:	sub	x1, x29, #0x70
  446f4c:	bl	40a860 <sd_device_get_sysname@plt>
  446f50:	ldur	w0, [x29, #-124]
  446f54:	ldr	w1, [sp, #128]
  446f58:	ldur	x8, [x29, #-112]
  446f5c:	mov	x9, xzr
  446f60:	cmp	x8, #0x0
  446f64:	ldr	x8, [sp, #32]
  446f68:	csel	x5, x8, x9, ne  // ne = any
  446f6c:	ldur	x6, [x29, #-112]
  446f70:	ldr	x2, [sp, #24]
  446f74:	mov	w3, #0x1c                  	// #28
  446f78:	ldr	x4, [sp, #16]
  446f7c:	mov	x7, x9
  446f80:	mov	x10, sp
  446f84:	str	x9, [x10]
  446f88:	mov	x9, sp
  446f8c:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  446f90:	add	x10, x10, #0x22b
  446f94:	str	x10, [x9, #8]
  446f98:	bl	40a870 <log_object_internal@plt>
  446f9c:	str	w0, [sp, #124]
  446fa0:	ldr	w11, [sp, #124]
  446fa4:	stur	w11, [x29, #-4]
  446fa8:	mov	w11, #0x1                   	// #1
  446fac:	stur	w11, [x29, #-104]
  446fb0:	b	4471c4 <builtin_net_setup_link+0x4b0>
  446fb4:	mov	x8, xzr
  446fb8:	str	x8, [sp, #112]
  446fbc:	ldr	x8, [sp, #48]
  446fc0:	ldr	x9, [x8, #48]
  446fc4:	str	x9, [sp, #104]
  446fc8:	mov	w10, #0x3                   	// #3
  446fcc:	str	w10, [sp, #100]
  446fd0:	ldur	w10, [x29, #-68]
  446fd4:	str	w10, [sp, #96]
  446fd8:	ldr	x9, [sp, #104]
  446fdc:	cbz	x9, 44701c <builtin_net_setup_link+0x308>
  446fe0:	mov	w0, #0x1                   	// #1
  446fe4:	bl	40a3f0 <log_get_max_level_realm@plt>
  446fe8:	ldr	w8, [sp, #100]
  446fec:	cmp	w0, w8
  446ff0:	cset	w8, ge  // ge = tcont
  446ff4:	mov	w9, #0x1                   	// #1
  446ff8:	eor	w8, w8, #0x1
  446ffc:	eor	w8, w8, w9
  447000:	and	w8, w8, #0x1
  447004:	mov	w1, w8
  447008:	sxtw	x10, w1
  44700c:	cbz	x10, 44701c <builtin_net_setup_link+0x308>
  447010:	ldr	x0, [sp, #104]
  447014:	add	x1, sp, #0x70
  447018:	bl	40a860 <sd_device_get_sysname@plt>
  44701c:	ldr	w0, [sp, #100]
  447020:	ldr	w1, [sp, #96]
  447024:	ldr	x8, [sp, #112]
  447028:	mov	x9, xzr
  44702c:	cmp	x8, #0x0
  447030:	ldr	x8, [sp, #32]
  447034:	csel	x5, x8, x9, ne  // ne = any
  447038:	ldr	x6, [sp, #112]
  44703c:	ldr	x2, [sp, #24]
  447040:	mov	w3, #0x1e                  	// #30
  447044:	ldr	x4, [sp, #16]
  447048:	mov	x7, x9
  44704c:	mov	x10, sp
  447050:	str	x9, [x10]
  447054:	mov	x9, sp
  447058:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44705c:	add	x10, x10, #0x251
  447060:	str	x10, [x9, #8]
  447064:	bl	40a870 <log_object_internal@plt>
  447068:	str	w0, [sp, #92]
  44706c:	ldr	w11, [sp, #92]
  447070:	stur	w11, [x29, #-4]
  447074:	mov	w11, #0x1                   	// #1
  447078:	stur	w11, [x29, #-104]
  44707c:	b	4471c4 <builtin_net_setup_link+0x4b0>
  447080:	ldr	x8, [sp, #40]
  447084:	ldr	x0, [x8]
  447088:	ldr	x9, [sp, #48]
  44708c:	ldr	x1, [x9]
  447090:	ldr	x2, [x9, #48]
  447094:	sub	x3, x29, #0x38
  447098:	bl	44d504 <link_config_apply>
  44709c:	stur	w0, [x29, #-68]
  4470a0:	ldur	w10, [x29, #-68]
  4470a4:	cmp	w10, #0x0
  4470a8:	cset	w10, ge  // ge = tcont
  4470ac:	tbnz	w10, #0, 447168 <builtin_net_setup_link+0x454>
  4470b0:	mov	x8, xzr
  4470b4:	str	x8, [sp, #80]
  4470b8:	ldr	x8, [sp, #48]
  4470bc:	ldr	x9, [x8, #48]
  4470c0:	str	x9, [sp, #72]
  4470c4:	mov	w10, #0x4                   	// #4
  4470c8:	str	w10, [sp, #68]
  4470cc:	ldur	w10, [x29, #-68]
  4470d0:	str	w10, [sp, #64]
  4470d4:	ldr	x9, [sp, #72]
  4470d8:	cbz	x9, 447118 <builtin_net_setup_link+0x404>
  4470dc:	mov	w0, #0x1                   	// #1
  4470e0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4470e4:	ldr	w8, [sp, #68]
  4470e8:	cmp	w0, w8
  4470ec:	cset	w8, ge  // ge = tcont
  4470f0:	mov	w9, #0x1                   	// #1
  4470f4:	eor	w8, w8, #0x1
  4470f8:	eor	w8, w8, w9
  4470fc:	and	w8, w8, #0x1
  447100:	mov	w1, w8
  447104:	sxtw	x10, w1
  447108:	cbz	x10, 447118 <builtin_net_setup_link+0x404>
  44710c:	ldr	x0, [sp, #72]
  447110:	add	x1, sp, #0x50
  447114:	bl	40a860 <sd_device_get_sysname@plt>
  447118:	ldr	w0, [sp, #68]
  44711c:	ldr	w1, [sp, #64]
  447120:	ldr	x8, [sp, #80]
  447124:	mov	x9, xzr
  447128:	cmp	x8, #0x0
  44712c:	ldr	x8, [sp, #32]
  447130:	csel	x5, x8, x9, ne  // ne = any
  447134:	ldr	x6, [sp, #80]
  447138:	ldr	x2, [sp, #24]
  44713c:	mov	w3, #0x23                  	// #35
  447140:	ldr	x4, [sp, #16]
  447144:	mov	x7, x9
  447148:	mov	x10, sp
  44714c:	str	x9, [x10]
  447150:	mov	x9, sp
  447154:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  447158:	add	x10, x10, #0x26f
  44715c:	str	x10, [x9, #8]
  447160:	bl	40a870 <log_object_internal@plt>
  447164:	str	w0, [sp, #60]
  447168:	ldr	x8, [sp, #48]
  44716c:	ldr	x0, [x8, #48]
  447170:	ldurb	w9, [x29, #-33]
  447174:	ldr	x10, [x8]
  447178:	ldr	x3, [x10]
  44717c:	and	w1, w9, #0x1
  447180:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  447184:	add	x2, x2, #0x299
  447188:	bl	43eae8 <udev_builtin_add_property>
  44718c:	ldr	x8, [sp, #48]
  447190:	ldr	x10, [x8, #8]
  447194:	cbz	x10, 4471b8 <builtin_net_setup_link+0x4a4>
  447198:	ldr	x8, [sp, #48]
  44719c:	ldr	x0, [x8, #48]
  4471a0:	ldurb	w9, [x29, #-33]
  4471a4:	ldr	x3, [x8, #8]
  4471a8:	and	w1, w9, #0x1
  4471ac:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  4471b0:	add	x2, x2, #0x2aa
  4471b4:	bl	43eae8 <udev_builtin_add_property>
  4471b8:	stur	wzr, [x29, #-4]
  4471bc:	mov	w8, #0x1                   	// #1
  4471c0:	stur	w8, [x29, #-104]
  4471c4:	sub	x0, x29, #0x30
  4471c8:	bl	4474bc <freep>
  4471cc:	ldur	w0, [x29, #-4]
  4471d0:	ldr	x28, [sp, #272]
  4471d4:	ldp	x29, x30, [sp, #256]
  4471d8:	add	sp, sp, #0x120
  4471dc:	ret

00000000004471e0 <builtin_net_setup_link_init>:
  4471e0:	sub	sp, sp, #0x40
  4471e4:	stp	x29, x30, [sp, #48]
  4471e8:	add	x29, sp, #0x30
  4471ec:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  4471f0:	add	x8, x8, #0x240
  4471f4:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  4471f8:	add	x9, x9, #0x1bb
  4471fc:	add	x2, x9, #0x3
  447200:	ldr	x9, [x8]
  447204:	str	x8, [sp, #16]
  447208:	str	x2, [sp, #8]
  44720c:	cbz	x9, 447218 <builtin_net_setup_link_init+0x38>
  447210:	stur	wzr, [x29, #-4]
  447214:	b	4472ec <builtin_net_setup_link_init+0x10c>
  447218:	ldr	x0, [sp, #16]
  44721c:	bl	44c048 <link_config_ctx_new>
  447220:	stur	w0, [x29, #-8]
  447224:	ldur	w8, [x29, #-8]
  447228:	cmp	w8, #0x0
  44722c:	cset	w8, ge  // ge = tcont
  447230:	tbnz	w8, #0, 447240 <builtin_net_setup_link_init+0x60>
  447234:	ldur	w8, [x29, #-8]
  447238:	stur	w8, [x29, #-4]
  44723c:	b	4472ec <builtin_net_setup_link_init+0x10c>
  447240:	ldr	x8, [sp, #16]
  447244:	ldr	x0, [x8]
  447248:	bl	44c920 <link_config_load>
  44724c:	stur	w0, [x29, #-8]
  447250:	ldur	w9, [x29, #-8]
  447254:	cmp	w9, #0x0
  447258:	cset	w9, ge  // ge = tcont
  44725c:	tbnz	w9, #0, 44726c <builtin_net_setup_link_init+0x8c>
  447260:	ldur	w8, [x29, #-8]
  447264:	stur	w8, [x29, #-4]
  447268:	b	4472ec <builtin_net_setup_link_init+0x10c>
  44726c:	mov	w8, #0x7                   	// #7
  447270:	stur	w8, [x29, #-12]
  447274:	stur	wzr, [x29, #-16]
  447278:	mov	w8, #0x1                   	// #1
  44727c:	stur	w8, [x29, #-20]
  447280:	ldur	w0, [x29, #-20]
  447284:	bl	40a3f0 <log_get_max_level_realm@plt>
  447288:	ldur	w8, [x29, #-12]
  44728c:	and	w8, w8, #0x7
  447290:	cmp	w0, w8
  447294:	b.lt	4472cc <builtin_net_setup_link_init+0xec>  // b.tstop
  447298:	ldur	w8, [x29, #-20]
  44729c:	ldur	w9, [x29, #-12]
  4472a0:	orr	w0, w9, w8, lsl #10
  4472a4:	ldur	w1, [x29, #-16]
  4472a8:	ldr	x2, [sp, #8]
  4472ac:	mov	w3, #0x3b                  	// #59
  4472b0:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4472b4:	add	x4, x4, #0x2b6
  4472b8:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  4472bc:	add	x5, x5, #0x2d2
  4472c0:	bl	40a400 <log_internal_realm@plt>
  4472c4:	str	w0, [sp, #4]
  4472c8:	b	4472e0 <builtin_net_setup_link_init+0x100>
  4472cc:	ldur	w0, [x29, #-16]
  4472d0:	bl	40a410 <abs@plt>
  4472d4:	mov	w8, wzr
  4472d8:	subs	w8, w8, w0, uxtb
  4472dc:	str	w8, [sp, #4]
  4472e0:	ldr	w8, [sp, #4]
  4472e4:	str	w8, [sp, #24]
  4472e8:	stur	wzr, [x29, #-4]
  4472ec:	ldur	w0, [x29, #-4]
  4472f0:	ldp	x29, x30, [sp, #48]
  4472f4:	add	sp, sp, #0x40
  4472f8:	ret

00000000004472fc <builtin_net_setup_link_exit>:
  4472fc:	sub	sp, sp, #0x50
  447300:	stp	x29, x30, [sp, #64]
  447304:	add	x29, sp, #0x40
  447308:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  44730c:	add	x8, x8, #0x240
  447310:	mov	x9, xzr
  447314:	mov	w10, #0x7                   	// #7
  447318:	mov	w11, #0x1                   	// #1
  44731c:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  447320:	add	x12, x12, #0x1bb
  447324:	add	x2, x12, #0x3
  447328:	ldr	x0, [x8]
  44732c:	stur	x8, [x29, #-24]
  447330:	str	x9, [sp, #32]
  447334:	str	w10, [sp, #28]
  447338:	str	w11, [sp, #24]
  44733c:	str	x2, [sp, #16]
  447340:	bl	44bf78 <link_config_ctx_free>
  447344:	ldr	x8, [sp, #32]
  447348:	ldur	x9, [x29, #-24]
  44734c:	str	x8, [x9]
  447350:	ldr	w10, [sp, #28]
  447354:	stur	w10, [x29, #-4]
  447358:	stur	wzr, [x29, #-8]
  44735c:	ldr	w11, [sp, #24]
  447360:	stur	w11, [x29, #-12]
  447364:	ldur	w0, [x29, #-12]
  447368:	bl	40a3f0 <log_get_max_level_realm@plt>
  44736c:	ldur	w10, [x29, #-4]
  447370:	and	w10, w10, #0x7
  447374:	cmp	w0, w10
  447378:	b.lt	4473b0 <builtin_net_setup_link_exit+0xb4>  // b.tstop
  44737c:	ldur	w8, [x29, #-12]
  447380:	ldur	w9, [x29, #-4]
  447384:	orr	w0, w9, w8, lsl #10
  447388:	ldur	w1, [x29, #-8]
  44738c:	ldr	x2, [sp, #16]
  447390:	mov	w3, #0x42                  	// #66
  447394:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  447398:	add	x4, x4, #0x2f6
  44739c:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  4473a0:	add	x5, x5, #0x312
  4473a4:	bl	40a400 <log_internal_realm@plt>
  4473a8:	str	w0, [sp, #12]
  4473ac:	b	4473c4 <builtin_net_setup_link_exit+0xc8>
  4473b0:	ldur	w0, [x29, #-8]
  4473b4:	bl	40a410 <abs@plt>
  4473b8:	mov	w8, wzr
  4473bc:	subs	w8, w8, w0, uxtb
  4473c0:	str	w8, [sp, #12]
  4473c4:	ldr	w8, [sp, #12]
  4473c8:	stur	w8, [x29, #-16]
  4473cc:	ldp	x29, x30, [sp, #64]
  4473d0:	add	sp, sp, #0x50
  4473d4:	ret

00000000004473d8 <builtin_net_setup_link_validate>:
  4473d8:	sub	sp, sp, #0x40
  4473dc:	stp	x29, x30, [sp, #48]
  4473e0:	add	x29, sp, #0x30
  4473e4:	mov	w8, #0x7                   	// #7
  4473e8:	mov	w9, #0x1                   	// #1
  4473ec:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  4473f0:	add	x10, x10, #0x1bb
  4473f4:	add	x2, x10, #0x3
  4473f8:	stur	w8, [x29, #-8]
  4473fc:	stur	wzr, [x29, #-12]
  447400:	stur	w9, [x29, #-16]
  447404:	ldur	w0, [x29, #-16]
  447408:	str	x2, [sp, #16]
  44740c:	bl	40a3f0 <log_get_max_level_realm@plt>
  447410:	ldur	w8, [x29, #-8]
  447414:	and	w8, w8, #0x7
  447418:	cmp	w0, w8
  44741c:	b.lt	447454 <builtin_net_setup_link_validate+0x7c>  // b.tstop
  447420:	ldur	w8, [x29, #-16]
  447424:	ldur	w9, [x29, #-8]
  447428:	orr	w0, w9, w8, lsl #10
  44742c:	ldur	w1, [x29, #-12]
  447430:	ldr	x2, [sp, #16]
  447434:	mov	w3, #0x46                  	// #70
  447438:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  44743c:	add	x4, x4, #0x337
  447440:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  447444:	add	x5, x5, #0x357
  447448:	bl	40a400 <log_internal_realm@plt>
  44744c:	str	w0, [sp, #12]
  447450:	b	447468 <builtin_net_setup_link_validate+0x90>
  447454:	ldur	w0, [x29, #-12]
  447458:	bl	40a410 <abs@plt>
  44745c:	mov	w8, wzr
  447460:	subs	w8, w8, w0, uxtb
  447464:	str	w8, [sp, #12]
  447468:	ldr	w8, [sp, #12]
  44746c:	stur	w8, [x29, #-20]
  447470:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  447474:	add	x9, x9, #0x240
  447478:	ldr	x9, [x9]
  44747c:	cbnz	x9, 447490 <builtin_net_setup_link_validate+0xb8>
  447480:	mov	w8, wzr
  447484:	and	w8, w8, #0x1
  447488:	sturb	w8, [x29, #-1]
  44748c:	b	4474a8 <builtin_net_setup_link_validate+0xd0>
  447490:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  447494:	add	x8, x8, #0x240
  447498:	ldr	x0, [x8]
  44749c:	bl	44ccf0 <link_config_should_reload>
  4474a0:	and	w9, w0, #0x1
  4474a4:	sturb	w9, [x29, #-1]
  4474a8:	ldurb	w8, [x29, #-1]
  4474ac:	and	w0, w8, #0x1
  4474b0:	ldp	x29, x30, [sp, #48]
  4474b4:	add	sp, sp, #0x40
  4474b8:	ret

00000000004474bc <freep>:
  4474bc:	sub	sp, sp, #0x20
  4474c0:	stp	x29, x30, [sp, #16]
  4474c4:	add	x29, sp, #0x10
  4474c8:	str	x0, [sp, #8]
  4474cc:	ldr	x8, [sp, #8]
  4474d0:	ldr	x0, [x8]
  4474d4:	bl	40a530 <free@plt>
  4474d8:	ldp	x29, x30, [sp, #16]
  4474dc:	add	sp, sp, #0x20
  4474e0:	ret

00000000004474e4 <builtin_path_id>:
  4474e4:	stp	x29, x30, [sp, #-32]!
  4474e8:	str	x28, [sp, #16]
  4474ec:	mov	x29, sp
  4474f0:	sub	sp, sp, #0x2a0
  4474f4:	mov	x8, xzr
  4474f8:	mov	w9, #0x0                   	// #0
  4474fc:	mov	w10, #0x1                   	// #1
  447500:	adrp	x11, 46d000 <on_inotify.__assert_in_set+0x9540>
  447504:	add	x11, x11, #0x3ab
  447508:	add	x11, x11, #0x3
  44750c:	stur	x0, [x29, #-16]
  447510:	stur	w1, [x29, #-20]
  447514:	stur	x2, [x29, #-32]
  447518:	and	w10, w3, w10
  44751c:	sturb	w10, [x29, #-33]
  447520:	stur	x8, [x29, #-56]
  447524:	sturb	w9, [x29, #-57]
  447528:	sturb	w9, [x29, #-58]
  44752c:	str	x11, [sp, #24]
  447530:	ldur	x8, [x29, #-16]
  447534:	cmp	x8, #0x0
  447538:	cset	w9, ne  // ne = any
  44753c:	mov	w10, #0x1                   	// #1
  447540:	eor	w9, w9, #0x1
  447544:	eor	w9, w9, w10
  447548:	eor	w9, w9, w10
  44754c:	and	w9, w9, #0x1
  447550:	mov	w0, w9
  447554:	sxtw	x8, w0
  447558:	cbz	x8, 44757c <builtin_path_id+0x98>
  44755c:	mov	w0, #0x1                   	// #1
  447560:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  447564:	add	x1, x1, #0xee1
  447568:	ldr	x2, [sp, #24]
  44756c:	mov	w3, #0x20f                 	// #527
  447570:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  447574:	add	x4, x4, #0x3ce
  447578:	bl	40a540 <log_assert_failed_realm@plt>
  44757c:	ldur	x8, [x29, #-16]
  447580:	stur	x8, [x29, #-48]
  447584:	ldur	x8, [x29, #-48]
  447588:	cbz	x8, 447a58 <builtin_path_id+0x574>
  44758c:	ldur	x0, [x29, #-48]
  447590:	sub	x1, x29, #0x50
  447594:	bl	40aa10 <sd_device_get_subsystem@plt>
  447598:	cmp	w0, #0x0
  44759c:	cset	w8, lt  // lt = tstop
  4475a0:	tbnz	w8, #0, 4475bc <builtin_path_id+0xd8>
  4475a4:	ldur	x0, [x29, #-48]
  4475a8:	sub	x1, x29, #0x58
  4475ac:	bl	40a860 <sd_device_get_sysname@plt>
  4475b0:	cmp	w0, #0x0
  4475b4:	cset	w8, ge  // ge = tcont
  4475b8:	tbnz	w8, #0, 4475c0 <builtin_path_id+0xdc>
  4475bc:	b	447a2c <builtin_path_id+0x548>
  4475c0:	ldur	x0, [x29, #-80]
  4475c4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4475c8:	add	x1, x1, #0x404
  4475cc:	bl	40aa20 <strcmp@plt>
  4475d0:	cbnz	w0, 4475e4 <builtin_path_id+0x100>
  4475d4:	ldur	x0, [x29, #-48]
  4475d8:	sub	x1, x29, #0x38
  4475dc:	bl	447ccc <handle_scsi_tape>
  4475e0:	b	447a2c <builtin_path_id+0x548>
  4475e4:	ldur	x0, [x29, #-80]
  4475e8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4475ec:	add	x1, x1, #0x40e
  4475f0:	bl	40aa20 <strcmp@plt>
  4475f4:	cbnz	w0, 447618 <builtin_path_id+0x134>
  4475f8:	ldur	x0, [x29, #-48]
  4475fc:	sub	x1, x29, #0x38
  447600:	sub	x2, x29, #0x3a
  447604:	bl	447da4 <handle_scsi>
  447608:	stur	x0, [x29, #-48]
  44760c:	mov	w8, #0x1                   	// #1
  447610:	sturb	w8, [x29, #-57]
  447614:	b	447a2c <builtin_path_id+0x548>
  447618:	ldur	x0, [x29, #-80]
  44761c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447620:	add	x1, x1, #0x413
  447624:	bl	40aa20 <strcmp@plt>
  447628:	cbnz	w0, 447648 <builtin_path_id+0x164>
  44762c:	ldur	x0, [x29, #-48]
  447630:	sub	x1, x29, #0x38
  447634:	bl	447fb0 <handle_cciss>
  447638:	stur	x0, [x29, #-48]
  44763c:	mov	w8, #0x1                   	// #1
  447640:	sturb	w8, [x29, #-57]
  447644:	b	447a2c <builtin_path_id+0x548>
  447648:	ldur	x0, [x29, #-80]
  44764c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  447650:	add	x1, x1, #0x6f8
  447654:	bl	40aa20 <strcmp@plt>
  447658:	cbnz	w0, 447678 <builtin_path_id+0x194>
  44765c:	ldur	x0, [x29, #-48]
  447660:	sub	x1, x29, #0x38
  447664:	bl	448050 <handle_usb>
  447668:	stur	x0, [x29, #-48]
  44766c:	mov	w8, #0x1                   	// #1
  447670:	sturb	w8, [x29, #-57]
  447674:	b	447a2c <builtin_path_id+0x548>
  447678:	ldur	x0, [x29, #-80]
  44767c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447680:	add	x1, x1, #0x151
  447684:	bl	40aa20 <strcmp@plt>
  447688:	cbnz	w0, 4476a8 <builtin_path_id+0x1c4>
  44768c:	ldur	x0, [x29, #-48]
  447690:	sub	x1, x29, #0x38
  447694:	bl	44814c <handle_bcma>
  447698:	stur	x0, [x29, #-48]
  44769c:	mov	w8, #0x1                   	// #1
  4476a0:	sturb	w8, [x29, #-57]
  4476a4:	b	447a2c <builtin_path_id+0x548>
  4476a8:	ldur	x0, [x29, #-80]
  4476ac:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4476b0:	add	x1, x1, #0x937
  4476b4:	bl	40aa20 <strcmp@plt>
  4476b8:	cbnz	w0, 447708 <builtin_path_id+0x224>
  4476bc:	ldur	x0, [x29, #-48]
  4476c0:	sub	x1, x29, #0x60
  4476c4:	bl	40ae50 <sd_device_get_sysnum@plt>
  4476c8:	cmp	w0, #0x0
  4476cc:	cset	w8, lt  // lt = tstop
  4476d0:	tbnz	w8, #0, 447704 <builtin_path_id+0x220>
  4476d4:	ldur	x8, [x29, #-96]
  4476d8:	cbz	x8, 447704 <builtin_path_id+0x220>
  4476dc:	ldur	x2, [x29, #-96]
  4476e0:	sub	x0, x29, #0x38
  4476e4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4476e8:	add	x1, x1, #0x419
  4476ec:	bl	4481dc <path_prepend>
  4476f0:	ldur	x0, [x29, #-48]
  4476f4:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4476f8:	add	x1, x1, #0x937
  4476fc:	bl	448394 <skip_subsystem>
  447700:	stur	x0, [x29, #-48]
  447704:	b	447a2c <builtin_path_id+0x548>
  447708:	ldur	x0, [x29, #-80]
  44770c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447710:	add	x1, x1, #0xfd6
  447714:	bl	40aa20 <strcmp@plt>
  447718:	cbnz	w0, 447750 <builtin_path_id+0x26c>
  44771c:	ldur	x2, [x29, #-88]
  447720:	sub	x0, x29, #0x38
  447724:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447728:	add	x1, x1, #0x422
  44772c:	bl	4481dc <path_prepend>
  447730:	ldur	x0, [x29, #-48]
  447734:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447738:	add	x1, x1, #0xfd6
  44773c:	bl	448394 <skip_subsystem>
  447740:	stur	x0, [x29, #-48]
  447744:	mov	w8, #0x1                   	// #1
  447748:	sturb	w8, [x29, #-58]
  44774c:	b	447a2c <builtin_path_id+0x548>
  447750:	ldur	x0, [x29, #-80]
  447754:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447758:	add	x1, x1, #0xde2
  44775c:	bl	40aa20 <strcmp@plt>
  447760:	cbnz	w0, 44779c <builtin_path_id+0x2b8>
  447764:	ldur	x2, [x29, #-88]
  447768:	sub	x0, x29, #0x38
  44776c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447770:	add	x1, x1, #0x429
  447774:	bl	4481dc <path_prepend>
  447778:	ldur	x0, [x29, #-48]
  44777c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447780:	add	x1, x1, #0xde2
  447784:	bl	448394 <skip_subsystem>
  447788:	stur	x0, [x29, #-48]
  44778c:	mov	w8, #0x1                   	// #1
  447790:	sturb	w8, [x29, #-57]
  447794:	sturb	w8, [x29, #-58]
  447798:	b	447a2c <builtin_path_id+0x548>
  44779c:	ldur	x0, [x29, #-80]
  4477a0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4477a4:	add	x1, x1, #0x435
  4477a8:	bl	40aa20 <strcmp@plt>
  4477ac:	cbnz	w0, 4477e4 <builtin_path_id+0x300>
  4477b0:	ldur	x2, [x29, #-88]
  4477b4:	sub	x0, x29, #0x38
  4477b8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4477bc:	add	x1, x1, #0x43a
  4477c0:	bl	4481dc <path_prepend>
  4477c4:	ldur	x0, [x29, #-48]
  4477c8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4477cc:	add	x1, x1, #0x435
  4477d0:	bl	448394 <skip_subsystem>
  4477d4:	stur	x0, [x29, #-48]
  4477d8:	mov	w8, #0x1                   	// #1
  4477dc:	sturb	w8, [x29, #-58]
  4477e0:	b	447a2c <builtin_path_id+0x548>
  4477e4:	ldur	x0, [x29, #-80]
  4477e8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4477ec:	add	x1, x1, #0x442
  4477f0:	bl	40aa20 <strcmp@plt>
  4477f4:	cbnz	w0, 44782c <builtin_path_id+0x348>
  4477f8:	ldur	x2, [x29, #-88]
  4477fc:	sub	x0, x29, #0x38
  447800:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447804:	add	x1, x1, #0x446
  447808:	bl	4481dc <path_prepend>
  44780c:	ldur	x0, [x29, #-48]
  447810:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447814:	add	x1, x1, #0x442
  447818:	bl	448394 <skip_subsystem>
  44781c:	stur	x0, [x29, #-48]
  447820:	mov	w8, #0x1                   	// #1
  447824:	sturb	w8, [x29, #-58]
  447828:	b	447a2c <builtin_path_id+0x548>
  44782c:	ldur	x0, [x29, #-80]
  447830:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447834:	add	x1, x1, #0xd54
  447838:	bl	40aa20 <strcmp@plt>
  44783c:	cbnz	w0, 447860 <builtin_path_id+0x37c>
  447840:	ldur	x0, [x29, #-48]
  447844:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447848:	add	x1, x1, #0xd54
  44784c:	bl	448394 <skip_subsystem>
  447850:	stur	x0, [x29, #-48]
  447854:	mov	w8, #0x1                   	// #1
  447858:	sturb	w8, [x29, #-57]
  44785c:	b	447a2c <builtin_path_id+0x548>
  447860:	ldur	x0, [x29, #-80]
  447864:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447868:	add	x1, x1, #0x44d
  44786c:	bl	40aa20 <strcmp@plt>
  447870:	cbnz	w0, 4478ac <builtin_path_id+0x3c8>
  447874:	ldur	x2, [x29, #-88]
  447878:	sub	x0, x29, #0x38
  44787c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447880:	add	x1, x1, #0x451
  447884:	bl	4481dc <path_prepend>
  447888:	ldur	x0, [x29, #-48]
  44788c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447890:	add	x1, x1, #0x44d
  447894:	bl	448394 <skip_subsystem>
  447898:	stur	x0, [x29, #-48]
  44789c:	mov	w8, #0x1                   	// #1
  4478a0:	sturb	w8, [x29, #-57]
  4478a4:	sturb	w8, [x29, #-58]
  4478a8:	b	447a2c <builtin_path_id+0x548>
  4478ac:	ldur	x0, [x29, #-80]
  4478b0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4478b4:	add	x1, x1, #0xd49
  4478b8:	bl	40aa20 <strcmp@plt>
  4478bc:	cbnz	w0, 4478f8 <builtin_path_id+0x414>
  4478c0:	ldur	x2, [x29, #-88]
  4478c4:	sub	x0, x29, #0x38
  4478c8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4478cc:	add	x1, x1, #0x458
  4478d0:	bl	4481dc <path_prepend>
  4478d4:	ldur	x0, [x29, #-48]
  4478d8:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  4478dc:	add	x1, x1, #0xd49
  4478e0:	bl	448394 <skip_subsystem>
  4478e4:	stur	x0, [x29, #-48]
  4478e8:	mov	w8, #0x1                   	// #1
  4478ec:	sturb	w8, [x29, #-57]
  4478f0:	sturb	w8, [x29, #-58]
  4478f4:	b	447a2c <builtin_path_id+0x548>
  4478f8:	ldur	x0, [x29, #-80]
  4478fc:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447900:	add	x1, x1, #0xd40
  447904:	bl	40aa20 <strcmp@plt>
  447908:	cbnz	w0, 447944 <builtin_path_id+0x460>
  44790c:	ldur	x2, [x29, #-88]
  447910:	sub	x0, x29, #0x38
  447914:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447918:	add	x1, x1, #0x45f
  44791c:	bl	4481dc <path_prepend>
  447920:	ldur	x0, [x29, #-48]
  447924:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  447928:	add	x1, x1, #0xd40
  44792c:	bl	448394 <skip_subsystem>
  447930:	stur	x0, [x29, #-48]
  447934:	mov	w8, #0x1                   	// #1
  447938:	sturb	w8, [x29, #-57]
  44793c:	sturb	w8, [x29, #-58]
  447940:	b	447a2c <builtin_path_id+0x548>
  447944:	ldur	x0, [x29, #-80]
  447948:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44794c:	add	x1, x1, #0x46b
  447950:	bl	40aa20 <strcmp@plt>
  447954:	cbnz	w0, 447978 <builtin_path_id+0x494>
  447958:	ldur	x0, [x29, #-48]
  44795c:	sub	x1, x29, #0x38
  447960:	bl	4484c0 <handle_ap>
  447964:	stur	x0, [x29, #-48]
  447968:	mov	w8, #0x1                   	// #1
  44796c:	sturb	w8, [x29, #-57]
  447970:	sturb	w8, [x29, #-58]
  447974:	b	447a2c <builtin_path_id+0x548>
  447978:	ldur	x0, [x29, #-80]
  44797c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447980:	add	x1, x1, #0x46e
  447984:	bl	40aa20 <strcmp@plt>
  447988:	cbnz	w0, 4479c4 <builtin_path_id+0x4e0>
  44798c:	ldur	x2, [x29, #-88]
  447990:	sub	x0, x29, #0x38
  447994:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447998:	add	x1, x1, #0x473
  44799c:	bl	4481dc <path_prepend>
  4479a0:	ldur	x0, [x29, #-48]
  4479a4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4479a8:	add	x1, x1, #0x46e
  4479ac:	bl	448394 <skip_subsystem>
  4479b0:	stur	x0, [x29, #-48]
  4479b4:	mov	w8, #0x1                   	// #1
  4479b8:	sturb	w8, [x29, #-57]
  4479bc:	sturb	w8, [x29, #-58]
  4479c0:	b	447a2c <builtin_path_id+0x548>
  4479c4:	ldur	x0, [x29, #-80]
  4479c8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4479cc:	add	x1, x1, #0x47b
  4479d0:	bl	40aa20 <strcmp@plt>
  4479d4:	cbnz	w0, 447a2c <builtin_path_id+0x548>
  4479d8:	ldur	x0, [x29, #-16]
  4479dc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4479e0:	add	x1, x1, #0x480
  4479e4:	sub	x2, x29, #0x68
  4479e8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4479ec:	cmp	w0, #0x0
  4479f0:	cset	w8, lt  // lt = tstop
  4479f4:	tbnz	w8, #0, 447a2c <builtin_path_id+0x548>
  4479f8:	ldur	x2, [x29, #-104]
  4479fc:	sub	x0, x29, #0x38
  447a00:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447a04:	add	x1, x1, #0x485
  447a08:	bl	4481dc <path_prepend>
  447a0c:	ldur	x0, [x29, #-48]
  447a10:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447a14:	add	x1, x1, #0x47b
  447a18:	bl	448394 <skip_subsystem>
  447a1c:	stur	x0, [x29, #-48]
  447a20:	mov	w8, #0x1                   	// #1
  447a24:	sturb	w8, [x29, #-58]
  447a28:	sturb	w8, [x29, #-57]
  447a2c:	ldur	x8, [x29, #-48]
  447a30:	cbnz	x8, 447a38 <builtin_path_id+0x554>
  447a34:	b	447a58 <builtin_path_id+0x574>
  447a38:	sub	x1, x29, #0x30
  447a3c:	ldur	x0, [x29, #-48]
  447a40:	bl	40abc0 <sd_device_get_parent@plt>
  447a44:	cmp	w0, #0x0
  447a48:	cset	w8, ge  // ge = tcont
  447a4c:	tbnz	w8, #0, 447a54 <builtin_path_id+0x570>
  447a50:	b	447a58 <builtin_path_id+0x574>
  447a54:	b	447584 <builtin_path_id+0xa0>
  447a58:	ldur	x8, [x29, #-56]
  447a5c:	cbnz	x8, 447a74 <builtin_path_id+0x590>
  447a60:	mov	w8, #0xfffffffe            	// #-2
  447a64:	stur	w8, [x29, #-4]
  447a68:	mov	w8, #0x1                   	// #1
  447a6c:	stur	w8, [x29, #-108]
  447a70:	b	447c88 <builtin_path_id+0x7a4>
  447a74:	ldurb	w8, [x29, #-58]
  447a78:	tbnz	w8, #0, 447a90 <builtin_path_id+0x5ac>
  447a7c:	mov	w8, #0xfffffffe            	// #-2
  447a80:	stur	w8, [x29, #-4]
  447a84:	mov	w8, #0x1                   	// #1
  447a88:	stur	w8, [x29, #-108]
  447a8c:	b	447c88 <builtin_path_id+0x7a4>
  447a90:	ldur	x0, [x29, #-16]
  447a94:	sub	x1, x29, #0x48
  447a98:	bl	40aa10 <sd_device_get_subsystem@plt>
  447a9c:	cmp	w0, #0x0
  447aa0:	cset	w8, lt  // lt = tstop
  447aa4:	tbnz	w8, #0, 447ad8 <builtin_path_id+0x5f4>
  447aa8:	ldur	x0, [x29, #-72]
  447aac:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  447ab0:	add	x1, x1, #0xb74
  447ab4:	bl	40aa20 <strcmp@plt>
  447ab8:	cbnz	w0, 447ad8 <builtin_path_id+0x5f4>
  447abc:	ldurb	w8, [x29, #-57]
  447ac0:	tbnz	w8, #0, 447ad8 <builtin_path_id+0x5f4>
  447ac4:	mov	w8, #0xfffffffe            	// #-2
  447ac8:	stur	w8, [x29, #-4]
  447acc:	mov	w8, #0x1                   	// #1
  447ad0:	stur	w8, [x29, #-108]
  447ad4:	b	447c88 <builtin_path_id+0x7a4>
  447ad8:	ldur	x8, [x29, #-56]
  447adc:	str	x8, [sp, #32]
  447ae0:	str	xzr, [sp, #40]
  447ae4:	ldr	x8, [sp, #32]
  447ae8:	ldrb	w9, [x8]
  447aec:	cbz	w9, 447bd8 <builtin_path_id+0x6f4>
  447af0:	ldr	x8, [sp, #32]
  447af4:	ldrb	w9, [x8]
  447af8:	cmp	w9, #0x30
  447afc:	b.lt	447b10 <builtin_path_id+0x62c>  // b.tstop
  447b00:	ldr	x8, [sp, #32]
  447b04:	ldrb	w9, [x8]
  447b08:	cmp	w9, #0x39
  447b0c:	b.le	447b60 <builtin_path_id+0x67c>
  447b10:	ldr	x8, [sp, #32]
  447b14:	ldrb	w9, [x8]
  447b18:	cmp	w9, #0x41
  447b1c:	b.lt	447b30 <builtin_path_id+0x64c>  // b.tstop
  447b20:	ldr	x8, [sp, #32]
  447b24:	ldrb	w9, [x8]
  447b28:	cmp	w9, #0x5a
  447b2c:	b.le	447b60 <builtin_path_id+0x67c>
  447b30:	ldr	x8, [sp, #32]
  447b34:	ldrb	w9, [x8]
  447b38:	cmp	w9, #0x61
  447b3c:	b.lt	447b50 <builtin_path_id+0x66c>  // b.tstop
  447b40:	ldr	x8, [sp, #32]
  447b44:	ldrb	w9, [x8]
  447b48:	cmp	w9, #0x7a
  447b4c:	b.le	447b60 <builtin_path_id+0x67c>
  447b50:	ldr	x8, [sp, #32]
  447b54:	ldrb	w9, [x8]
  447b58:	cmp	w9, #0x2d
  447b5c:	b.ne	447b84 <builtin_path_id+0x6a0>  // b.any
  447b60:	ldr	x8, [sp, #32]
  447b64:	ldrb	w9, [x8]
  447b68:	ldr	x8, [sp, #40]
  447b6c:	add	x10, x8, #0x1
  447b70:	str	x10, [sp, #40]
  447b74:	add	x10, sp, #0x34
  447b78:	add	x8, x10, x8
  447b7c:	strb	w9, [x8]
  447b80:	b	447bc8 <builtin_path_id+0x6e4>
  447b84:	ldr	x8, [sp, #40]
  447b88:	cbnz	x8, 447b90 <builtin_path_id+0x6ac>
  447b8c:	b	447bc8 <builtin_path_id+0x6e4>
  447b90:	ldr	x8, [sp, #40]
  447b94:	subs	x8, x8, #0x1
  447b98:	add	x9, sp, #0x34
  447b9c:	ldrb	w10, [x9, x8]
  447ba0:	cmp	w10, #0x5f
  447ba4:	b.ne	447bac <builtin_path_id+0x6c8>  // b.any
  447ba8:	b	447bc8 <builtin_path_id+0x6e4>
  447bac:	ldr	x8, [sp, #40]
  447bb0:	add	x9, x8, #0x1
  447bb4:	str	x9, [sp, #40]
  447bb8:	add	x9, sp, #0x34
  447bbc:	add	x8, x9, x8
  447bc0:	mov	w10, #0x5f                  	// #95
  447bc4:	strb	w10, [x8]
  447bc8:	ldr	x8, [sp, #32]
  447bcc:	add	x8, x8, #0x1
  447bd0:	str	x8, [sp, #32]
  447bd4:	b	447ae4 <builtin_path_id+0x600>
  447bd8:	ldr	x8, [sp, #40]
  447bdc:	cmp	x8, #0x0
  447be0:	cset	w9, ls  // ls = plast
  447be4:	mov	w10, #0x0                   	// #0
  447be8:	str	w10, [sp, #20]
  447bec:	tbnz	w9, #0, 447c0c <builtin_path_id+0x728>
  447bf0:	ldr	x8, [sp, #40]
  447bf4:	subs	x8, x8, #0x1
  447bf8:	add	x9, sp, #0x34
  447bfc:	ldrb	w10, [x9, x8]
  447c00:	cmp	w10, #0x5f
  447c04:	cset	w10, eq  // eq = none
  447c08:	str	w10, [sp, #20]
  447c0c:	ldr	w8, [sp, #20]
  447c10:	tbnz	w8, #0, 447c18 <builtin_path_id+0x734>
  447c14:	b	447c28 <builtin_path_id+0x744>
  447c18:	ldr	x8, [sp, #40]
  447c1c:	subs	x8, x8, #0x1
  447c20:	str	x8, [sp, #40]
  447c24:	b	447bd8 <builtin_path_id+0x6f4>
  447c28:	ldr	x8, [sp, #40]
  447c2c:	add	x9, sp, #0x34
  447c30:	add	x8, x9, x8
  447c34:	mov	w10, #0x0                   	// #0
  447c38:	strb	w10, [x8]
  447c3c:	ldur	x0, [x29, #-16]
  447c40:	ldurb	w10, [x29, #-33]
  447c44:	ldur	x3, [x29, #-56]
  447c48:	and	w1, w10, #0x1
  447c4c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  447c50:	add	x2, x2, #0x48d
  447c54:	str	x9, [sp, #8]
  447c58:	bl	43eae8 <udev_builtin_add_property>
  447c5c:	ldur	x8, [x29, #-16]
  447c60:	ldurb	w10, [x29, #-33]
  447c64:	mov	x0, x8
  447c68:	and	w1, w10, #0x1
  447c6c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  447c70:	add	x2, x2, #0x495
  447c74:	ldr	x3, [sp, #8]
  447c78:	bl	43eae8 <udev_builtin_add_property>
  447c7c:	stur	wzr, [x29, #-4]
  447c80:	mov	w10, #0x1                   	// #1
  447c84:	stur	w10, [x29, #-108]
  447c88:	sub	x0, x29, #0x38
  447c8c:	bl	447ca4 <freep>
  447c90:	ldur	w0, [x29, #-4]
  447c94:	add	sp, sp, #0x2a0
  447c98:	ldr	x28, [sp, #16]
  447c9c:	ldp	x29, x30, [sp], #32
  447ca0:	ret

0000000000447ca4 <freep>:
  447ca4:	sub	sp, sp, #0x20
  447ca8:	stp	x29, x30, [sp, #16]
  447cac:	add	x29, sp, #0x10
  447cb0:	str	x0, [sp, #8]
  447cb4:	ldr	x8, [sp, #8]
  447cb8:	ldr	x0, [x8]
  447cbc:	bl	40a530 <free@plt>
  447cc0:	ldp	x29, x30, [sp, #16]
  447cc4:	add	sp, sp, #0x20
  447cc8:	ret

0000000000447ccc <handle_scsi_tape>:
  447ccc:	sub	sp, sp, #0x30
  447cd0:	stp	x29, x30, [sp, #32]
  447cd4:	add	x29, sp, #0x20
  447cd8:	stur	x0, [x29, #-8]
  447cdc:	str	x1, [sp, #16]
  447ce0:	ldr	x8, [sp, #16]
  447ce4:	ldr	x8, [x8]
  447ce8:	cbz	x8, 447cf0 <handle_scsi_tape+0x24>
  447cec:	b	447d98 <handle_scsi_tape+0xcc>
  447cf0:	ldur	x0, [x29, #-8]
  447cf4:	add	x1, sp, #0x8
  447cf8:	bl	40a860 <sd_device_get_sysname@plt>
  447cfc:	cmp	w0, #0x0
  447d00:	cset	w8, ge  // ge = tcont
  447d04:	tbnz	w8, #0, 447d0c <handle_scsi_tape+0x40>
  447d08:	b	447d98 <handle_scsi_tape+0xcc>
  447d0c:	ldr	x0, [sp, #8]
  447d10:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d14:	add	x1, x1, #0x4a1
  447d18:	bl	448620 <startswith>
  447d1c:	cbz	x0, 447d54 <handle_scsi_tape+0x88>
  447d20:	ldr	x8, [sp, #8]
  447d24:	ldrb	w1, [x8, #3]
  447d28:	adrp	x0, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d2c:	add	x0, x0, #0x4a5
  447d30:	bl	40a8c0 <strchr@plt>
  447d34:	cbz	x0, 447d54 <handle_scsi_tape+0x88>
  447d38:	ldr	x0, [sp, #16]
  447d3c:	ldr	x8, [sp, #8]
  447d40:	ldrb	w2, [x8, #3]
  447d44:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d48:	add	x1, x1, #0x4a9
  447d4c:	bl	4481dc <path_prepend>
  447d50:	b	447d98 <handle_scsi_tape+0xcc>
  447d54:	ldr	x0, [sp, #8]
  447d58:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d5c:	add	x1, x1, #0x4af
  447d60:	bl	448620 <startswith>
  447d64:	cbz	x0, 447d98 <handle_scsi_tape+0xcc>
  447d68:	ldr	x8, [sp, #8]
  447d6c:	ldrb	w1, [x8, #2]
  447d70:	adrp	x0, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d74:	add	x0, x0, #0x4a5
  447d78:	bl	40a8c0 <strchr@plt>
  447d7c:	cbz	x0, 447d98 <handle_scsi_tape+0xcc>
  447d80:	ldr	x0, [sp, #16]
  447d84:	ldr	x8, [sp, #8]
  447d88:	ldrb	w2, [x8, #2]
  447d8c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447d90:	add	x1, x1, #0x4b2
  447d94:	bl	4481dc <path_prepend>
  447d98:	ldp	x29, x30, [sp, #32]
  447d9c:	add	sp, sp, #0x30
  447da0:	ret

0000000000447da4 <handle_scsi>:
  447da4:	sub	sp, sp, #0x50
  447da8:	stp	x29, x30, [sp, #64]
  447dac:	add	x29, sp, #0x40
  447db0:	add	x8, sp, #0x18
  447db4:	stur	x0, [x29, #-16]
  447db8:	stur	x1, [x29, #-24]
  447dbc:	str	x2, [sp, #32]
  447dc0:	ldur	x0, [x29, #-16]
  447dc4:	mov	x1, x8
  447dc8:	bl	40abb0 <sd_device_get_devtype@plt>
  447dcc:	cmp	w0, #0x0
  447dd0:	cset	w9, lt  // lt = tstop
  447dd4:	tbnz	w9, #0, 447dec <handle_scsi+0x48>
  447dd8:	ldr	x0, [sp, #24]
  447ddc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447de0:	add	x1, x1, #0x4b7
  447de4:	bl	40aa20 <strcmp@plt>
  447de8:	cbz	w0, 447df8 <handle_scsi+0x54>
  447dec:	ldur	x8, [x29, #-16]
  447df0:	stur	x8, [x29, #-8]
  447df4:	b	447fa0 <handle_scsi+0x1fc>
  447df8:	ldur	x0, [x29, #-16]
  447dfc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447e00:	add	x1, x1, #0x4c3
  447e04:	add	x2, sp, #0x10
  447e08:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  447e0c:	cmp	w0, #0x0
  447e10:	cset	w8, lt  // lt = tstop
  447e14:	tbnz	w8, #0, 447e50 <handle_scsi+0xac>
  447e18:	ldur	x0, [x29, #-24]
  447e1c:	ldr	x2, [sp, #16]
  447e20:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447e24:	add	x1, x1, #0x4cf
  447e28:	bl	4481dc <path_prepend>
  447e2c:	ldr	x8, [sp, #32]
  447e30:	mov	w9, #0x1                   	// #1
  447e34:	strb	w9, [x8]
  447e38:	ldur	x0, [x29, #-16]
  447e3c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447e40:	add	x1, x1, #0x40e
  447e44:	bl	448394 <skip_subsystem>
  447e48:	stur	x0, [x29, #-8]
  447e4c:	b	447fa0 <handle_scsi+0x1fc>
  447e50:	ldur	x0, [x29, #-16]
  447e54:	add	x1, sp, #0x8
  447e58:	bl	40abf0 <sd_device_get_syspath@plt>
  447e5c:	cmp	w0, #0x0
  447e60:	cset	w8, ge  // ge = tcont
  447e64:	tbnz	w8, #0, 447e74 <handle_scsi+0xd0>
  447e68:	mov	x8, xzr
  447e6c:	stur	x8, [x29, #-8]
  447e70:	b	447fa0 <handle_scsi+0x1fc>
  447e74:	ldr	x0, [sp, #8]
  447e78:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447e7c:	add	x1, x1, #0x4dd
  447e80:	bl	40b2f0 <strstr@plt>
  447e84:	cbz	x0, 447ea8 <handle_scsi+0x104>
  447e88:	ldr	x8, [sp, #32]
  447e8c:	mov	w9, #0x1                   	// #1
  447e90:	strb	w9, [x8]
  447e94:	ldur	x0, [x29, #-16]
  447e98:	ldur	x1, [x29, #-24]
  447e9c:	bl	448680 <handle_scsi_fibre_channel>
  447ea0:	stur	x0, [x29, #-8]
  447ea4:	b	447fa0 <handle_scsi+0x1fc>
  447ea8:	ldr	x0, [sp, #8]
  447eac:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447eb0:	add	x1, x1, #0x4e5
  447eb4:	bl	40b2f0 <strstr@plt>
  447eb8:	cbz	x0, 447edc <handle_scsi+0x138>
  447ebc:	ldr	x8, [sp, #32]
  447ec0:	mov	w9, #0x1                   	// #1
  447ec4:	strb	w9, [x8]
  447ec8:	ldur	x0, [x29, #-16]
  447ecc:	ldur	x1, [x29, #-24]
  447ed0:	bl	448870 <handle_scsi_sas>
  447ed4:	stur	x0, [x29, #-8]
  447ed8:	b	447fa0 <handle_scsi+0x1fc>
  447edc:	ldr	x0, [sp, #8]
  447ee0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447ee4:	add	x1, x1, #0x4f2
  447ee8:	bl	40b2f0 <strstr@plt>
  447eec:	cbz	x0, 447f10 <handle_scsi+0x16c>
  447ef0:	ldr	x8, [sp, #32]
  447ef4:	mov	w9, #0x1                   	// #1
  447ef8:	strb	w9, [x8]
  447efc:	ldur	x0, [x29, #-16]
  447f00:	ldur	x1, [x29, #-24]
  447f04:	bl	448c6c <handle_scsi_iscsi>
  447f08:	stur	x0, [x29, #-8]
  447f0c:	b	447fa0 <handle_scsi+0x1fc>
  447f10:	ldr	x0, [sp, #8]
  447f14:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447f18:	add	x1, x1, #0x4fb
  447f1c:	bl	40b2f0 <strstr@plt>
  447f20:	cbz	x0, 447f38 <handle_scsi+0x194>
  447f24:	ldur	x0, [x29, #-16]
  447f28:	ldur	x1, [x29, #-24]
  447f2c:	bl	449174 <handle_scsi_ata>
  447f30:	stur	x0, [x29, #-8]
  447f34:	b	447fa0 <handle_scsi+0x1fc>
  447f38:	ldr	x0, [sp, #8]
  447f3c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447f40:	add	x1, x1, #0x500
  447f44:	bl	40b2f0 <strstr@plt>
  447f48:	cbz	x0, 447f64 <handle_scsi+0x1c0>
  447f4c:	ldur	x0, [x29, #-16]
  447f50:	ldur	x1, [x29, #-24]
  447f54:	mov	x2, #0x25                  	// #37
  447f58:	bl	449370 <handle_scsi_hyperv>
  447f5c:	stur	x0, [x29, #-8]
  447f60:	b	447fa0 <handle_scsi+0x1fc>
  447f64:	ldr	x0, [sp, #8]
  447f68:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447f6c:	add	x1, x1, #0x508
  447f70:	bl	40b2f0 <strstr@plt>
  447f74:	cbz	x0, 447f90 <handle_scsi+0x1ec>
  447f78:	ldur	x0, [x29, #-16]
  447f7c:	ldur	x1, [x29, #-24]
  447f80:	mov	x2, #0x26                  	// #38
  447f84:	bl	449370 <handle_scsi_hyperv>
  447f88:	stur	x0, [x29, #-8]
  447f8c:	b	447fa0 <handle_scsi+0x1fc>
  447f90:	ldur	x0, [x29, #-16]
  447f94:	ldur	x1, [x29, #-24]
  447f98:	bl	449648 <handle_scsi_default>
  447f9c:	stur	x0, [x29, #-8]
  447fa0:	ldur	x0, [x29, #-8]
  447fa4:	ldp	x29, x30, [sp, #64]
  447fa8:	add	sp, sp, #0x50
  447fac:	ret

0000000000447fb0 <handle_cciss>:
  447fb0:	sub	sp, sp, #0x40
  447fb4:	stp	x29, x30, [sp, #48]
  447fb8:	add	x29, sp, #0x30
  447fbc:	add	x8, sp, #0x10
  447fc0:	stur	x0, [x29, #-16]
  447fc4:	str	x1, [sp, #24]
  447fc8:	ldur	x0, [x29, #-16]
  447fcc:	mov	x1, x8
  447fd0:	bl	40a860 <sd_device_get_sysname@plt>
  447fd4:	cmp	w0, #0x0
  447fd8:	cset	w9, ge  // ge = tcont
  447fdc:	tbnz	w9, #0, 447fec <handle_cciss+0x3c>
  447fe0:	mov	x8, xzr
  447fe4:	stur	x8, [x29, #-8]
  447fe8:	b	448040 <handle_cciss+0x90>
  447fec:	ldr	x0, [sp, #16]
  447ff0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  447ff4:	add	x1, x1, #0x82d
  447ff8:	add	x2, sp, #0xc
  447ffc:	add	x3, sp, #0x8
  448000:	bl	40b6a0 <__isoc99_sscanf@plt>
  448004:	cmp	w0, #0x2
  448008:	b.eq	448018 <handle_cciss+0x68>  // b.none
  44800c:	mov	x8, xzr
  448010:	stur	x8, [x29, #-8]
  448014:	b	448040 <handle_cciss+0x90>
  448018:	ldr	x0, [sp, #24]
  44801c:	ldr	w2, [sp, #8]
  448020:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448024:	add	x1, x1, #0x837
  448028:	bl	4481dc <path_prepend>
  44802c:	ldur	x0, [x29, #-16]
  448030:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448034:	add	x1, x1, #0x413
  448038:	bl	448394 <skip_subsystem>
  44803c:	stur	x0, [x29, #-8]
  448040:	ldur	x0, [x29, #-8]
  448044:	ldp	x29, x30, [sp, #48]
  448048:	add	sp, sp, #0x40
  44804c:	ret

0000000000448050 <handle_usb>:
  448050:	sub	sp, sp, #0x60
  448054:	stp	x29, x30, [sp, #80]
  448058:	add	x29, sp, #0x50
  44805c:	sub	x8, x29, #0x20
  448060:	stur	x0, [x29, #-16]
  448064:	stur	x1, [x29, #-24]
  448068:	ldur	x0, [x29, #-16]
  44806c:	mov	x1, x8
  448070:	bl	40abb0 <sd_device_get_devtype@plt>
  448074:	cmp	w0, #0x0
  448078:	cset	w9, ge  // ge = tcont
  44807c:	tbnz	w9, #0, 44808c <handle_usb+0x3c>
  448080:	ldur	x8, [x29, #-16]
  448084:	stur	x8, [x29, #-8]
  448088:	b	44813c <handle_usb+0xec>
  44808c:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  448090:	add	x8, x8, #0x168
  448094:	ldr	q0, [x8]
  448098:	mov	x0, sp
  44809c:	str	q0, [sp]
  4480a0:	ldr	x8, [x8, #16]
  4480a4:	str	x8, [sp, #16]
  4480a8:	ldur	x1, [x29, #-32]
  4480ac:	bl	40b2e0 <strv_find@plt>
  4480b0:	cbnz	x0, 4480c0 <handle_usb+0x70>
  4480b4:	ldur	x8, [x29, #-16]
  4480b8:	stur	x8, [x29, #-8]
  4480bc:	b	44813c <handle_usb+0xec>
  4480c0:	ldur	x0, [x29, #-16]
  4480c4:	add	x1, sp, #0x28
  4480c8:	bl	40a860 <sd_device_get_sysname@plt>
  4480cc:	cmp	w0, #0x0
  4480d0:	cset	w8, ge  // ge = tcont
  4480d4:	tbnz	w8, #0, 4480e4 <handle_usb+0x94>
  4480d8:	ldur	x8, [x29, #-16]
  4480dc:	stur	x8, [x29, #-8]
  4480e0:	b	44813c <handle_usb+0xec>
  4480e4:	ldr	x0, [sp, #40]
  4480e8:	mov	w1, #0x2d                  	// #45
  4480ec:	bl	40a8c0 <strchr@plt>
  4480f0:	str	x0, [sp, #32]
  4480f4:	ldr	x8, [sp, #32]
  4480f8:	cbnz	x8, 448108 <handle_usb+0xb8>
  4480fc:	ldur	x8, [x29, #-16]
  448100:	stur	x8, [x29, #-8]
  448104:	b	44813c <handle_usb+0xec>
  448108:	ldr	x8, [sp, #32]
  44810c:	add	x8, x8, #0x1
  448110:	str	x8, [sp, #32]
  448114:	ldur	x0, [x29, #-24]
  448118:	ldr	x2, [sp, #32]
  44811c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448120:	add	x1, x1, #0x844
  448124:	bl	4481dc <path_prepend>
  448128:	ldur	x0, [x29, #-16]
  44812c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  448130:	add	x1, x1, #0x6f8
  448134:	bl	448394 <skip_subsystem>
  448138:	stur	x0, [x29, #-8]
  44813c:	ldur	x0, [x29, #-8]
  448140:	ldp	x29, x30, [sp, #80]
  448144:	add	sp, sp, #0x60
  448148:	ret

000000000044814c <handle_bcma>:
  44814c:	sub	sp, sp, #0x40
  448150:	stp	x29, x30, [sp, #48]
  448154:	add	x29, sp, #0x30
  448158:	add	x8, sp, #0x10
  44815c:	stur	x0, [x29, #-16]
  448160:	str	x1, [sp, #24]
  448164:	ldur	x0, [x29, #-16]
  448168:	mov	x1, x8
  44816c:	bl	40a860 <sd_device_get_sysname@plt>
  448170:	cmp	w0, #0x0
  448174:	cset	w9, ge  // ge = tcont
  448178:	tbnz	w9, #0, 448188 <handle_bcma+0x3c>
  44817c:	mov	x8, xzr
  448180:	stur	x8, [x29, #-8]
  448184:	b	4481cc <handle_bcma+0x80>
  448188:	ldr	x0, [sp, #16]
  44818c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448190:	add	x1, x1, #0x156
  448194:	add	x2, sp, #0xc
  448198:	bl	40b6a0 <__isoc99_sscanf@plt>
  44819c:	cmp	w0, #0x1
  4481a0:	b.eq	4481b0 <handle_bcma+0x64>  // b.none
  4481a4:	mov	x8, xzr
  4481a8:	stur	x8, [x29, #-8]
  4481ac:	b	4481cc <handle_bcma+0x80>
  4481b0:	ldr	x0, [sp, #24]
  4481b4:	ldr	w2, [sp, #12]
  4481b8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4481bc:	add	x1, x1, #0x84d
  4481c0:	bl	4481dc <path_prepend>
  4481c4:	ldur	x8, [x29, #-16]
  4481c8:	stur	x8, [x29, #-8]
  4481cc:	ldur	x0, [x29, #-8]
  4481d0:	ldp	x29, x30, [sp, #48]
  4481d4:	add	sp, sp, #0x40
  4481d8:	ret

00000000004481dc <path_prepend>:
  4481dc:	sub	sp, sp, #0x160
  4481e0:	stp	x29, x30, [sp, #320]
  4481e4:	str	x28, [sp, #336]
  4481e8:	add	x29, sp, #0x140
  4481ec:	str	q7, [sp, #128]
  4481f0:	str	q6, [sp, #112]
  4481f4:	str	q5, [sp, #96]
  4481f8:	str	q4, [sp, #80]
  4481fc:	str	q3, [sp, #64]
  448200:	str	q2, [sp, #48]
  448204:	str	q1, [sp, #32]
  448208:	str	q0, [sp, #16]
  44820c:	str	x7, [sp, #184]
  448210:	str	x6, [sp, #176]
  448214:	str	x5, [sp, #168]
  448218:	str	x4, [sp, #160]
  44821c:	str	x3, [sp, #152]
  448220:	str	x2, [sp, #144]
  448224:	stur	x0, [x29, #-8]
  448228:	stur	x1, [x29, #-16]
  44822c:	mov	x8, xzr
  448230:	stur	x8, [x29, #-56]
  448234:	mov	w9, #0xffffff80            	// #-128
  448238:	stur	w9, [x29, #-20]
  44823c:	mov	w9, #0xffffffd0            	// #-48
  448240:	stur	w9, [x29, #-24]
  448244:	add	x8, sp, #0x10
  448248:	add	x8, x8, #0x80
  44824c:	stur	x8, [x29, #-32]
  448250:	add	x8, sp, #0x90
  448254:	add	x8, x8, #0x30
  448258:	stur	x8, [x29, #-40]
  44825c:	add	x8, x29, #0x20
  448260:	stur	x8, [x29, #-48]
  448264:	ldur	x1, [x29, #-16]
  448268:	ldur	q0, [x29, #-48]
  44826c:	ldur	q1, [x29, #-32]
  448270:	stur	q1, [x29, #-80]
  448274:	stur	q0, [x29, #-96]
  448278:	sub	x0, x29, #0x38
  44827c:	sub	x2, x29, #0x60
  448280:	bl	40b740 <vasprintf@plt>
  448284:	stur	w0, [x29, #-60]
  448288:	ldur	w9, [x29, #-60]
  44828c:	tbz	w9, #31, 4482c0 <path_prepend+0xe4>
  448290:	b	448294 <path_prepend+0xb8>
  448294:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448298:	add	x1, x1, #0x3ae
  44829c:	adrp	x3, 46d000 <on_inotify.__assert_in_set+0x9540>
  4482a0:	add	x3, x3, #0x855
  4482a4:	mov	w0, #0x1                   	// #1
  4482a8:	mov	w2, #0x24                  	// #36
  4482ac:	bl	40a5e0 <log_oom_internal@plt>
  4482b0:	mov	w8, #0x47                  	// #71
  4482b4:	str	w0, [sp, #12]
  4482b8:	mov	w0, w8
  4482bc:	bl	40b750 <exit@plt>
  4482c0:	ldur	x8, [x29, #-8]
  4482c4:	ldr	x8, [x8]
  4482c8:	cbz	x8, 448354 <path_prepend+0x178>
  4482cc:	b	4482d0 <path_prepend+0xf4>
  4482d0:	ldur	x0, [x29, #-56]
  4482d4:	ldur	x8, [x29, #-8]
  4482d8:	ldr	x2, [x8]
  4482dc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4482e0:	add	x1, x1, #0x862
  4482e4:	mov	x3, xzr
  4482e8:	bl	40b5e0 <strjoin_real@plt>
  4482ec:	stur	x0, [x29, #-104]
  4482f0:	ldur	x8, [x29, #-104]
  4482f4:	cbnz	x8, 448328 <path_prepend+0x14c>
  4482f8:	b	4482fc <path_prepend+0x120>
  4482fc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448300:	add	x1, x1, #0x3ae
  448304:	adrp	x3, 46d000 <on_inotify.__assert_in_set+0x9540>
  448308:	add	x3, x3, #0x855
  44830c:	mov	w0, #0x1                   	// #1
  448310:	mov	w2, #0x2d                  	// #45
  448314:	bl	40a5e0 <log_oom_internal@plt>
  448318:	mov	w8, #0x47                  	// #71
  44831c:	str	w0, [sp, #8]
  448320:	mov	w0, w8
  448324:	bl	40b750 <exit@plt>
  448328:	ldur	x8, [x29, #-8]
  44832c:	ldr	x0, [x8]
  448330:	bl	40a530 <free@plt>
  448334:	ldur	x8, [x29, #-104]
  448338:	ldur	x9, [x29, #-8]
  44833c:	str	x8, [x9]
  448340:	mov	x8, xzr
  448344:	stur	x8, [x29, #-104]
  448348:	mov	w10, wzr
  44834c:	stur	w10, [x29, #-108]
  448350:	b	44837c <path_prepend+0x1a0>
  448354:	ldur	x8, [x29, #-56]
  448358:	stur	x8, [x29, #-120]
  44835c:	mov	x8, xzr
  448360:	stur	x8, [x29, #-56]
  448364:	ldur	x8, [x29, #-120]
  448368:	stur	x8, [x29, #-128]
  44836c:	ldur	x8, [x29, #-128]
  448370:	ldur	x9, [x29, #-8]
  448374:	str	x8, [x9]
  448378:	b	44837c <path_prepend+0x1a0>
  44837c:	sub	x0, x29, #0x38
  448380:	bl	447ca4 <freep>
  448384:	ldr	x28, [sp, #336]
  448388:	ldp	x29, x30, [sp, #320]
  44838c:	add	sp, sp, #0x160
  448390:	ret

0000000000448394 <skip_subsystem>:
  448394:	sub	sp, sp, #0x40
  448398:	stp	x29, x30, [sp, #48]
  44839c:	add	x29, sp, #0x30
  4483a0:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  4483a4:	add	x8, x8, #0x3ab
  4483a8:	add	x8, x8, #0x3
  4483ac:	stur	x0, [x29, #-8]
  4483b0:	stur	x1, [x29, #-16]
  4483b4:	str	x8, [sp, #8]
  4483b8:	ldur	x8, [x29, #-8]
  4483bc:	cmp	x8, #0x0
  4483c0:	cset	w9, ne  // ne = any
  4483c4:	mov	w10, #0x1                   	// #1
  4483c8:	eor	w9, w9, #0x1
  4483cc:	eor	w9, w9, w10
  4483d0:	eor	w9, w9, w10
  4483d4:	and	w9, w9, #0x1
  4483d8:	mov	w0, w9
  4483dc:	sxtw	x8, w0
  4483e0:	cbz	x8, 448404 <skip_subsystem+0x70>
  4483e4:	mov	w0, #0x1                   	// #1
  4483e8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  4483ec:	add	x1, x1, #0xee1
  4483f0:	ldr	x2, [sp, #8]
  4483f4:	mov	w3, #0x53                  	// #83
  4483f8:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4483fc:	add	x4, x4, #0x864
  448400:	bl	40a540 <log_assert_failed_realm@plt>
  448404:	ldur	x8, [x29, #-16]
  448408:	cmp	x8, #0x0
  44840c:	cset	w9, ne  // ne = any
  448410:	mov	w10, #0x1                   	// #1
  448414:	eor	w9, w9, #0x1
  448418:	eor	w9, w9, w10
  44841c:	eor	w9, w9, w10
  448420:	and	w9, w9, #0x1
  448424:	mov	w0, w9
  448428:	sxtw	x8, w0
  44842c:	cbz	x8, 448450 <skip_subsystem+0xbc>
  448430:	mov	w0, #0x1                   	// #1
  448434:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448438:	add	x1, x1, #0x899
  44843c:	ldr	x2, [sp, #8]
  448440:	mov	w3, #0x54                  	// #84
  448444:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  448448:	add	x4, x4, #0x864
  44844c:	bl	40a540 <log_assert_failed_realm@plt>
  448450:	ldur	x8, [x29, #-8]
  448454:	str	x8, [sp, #24]
  448458:	ldr	x0, [sp, #24]
  44845c:	add	x1, sp, #0x10
  448460:	bl	40aa10 <sd_device_get_subsystem@plt>
  448464:	cmp	w0, #0x0
  448468:	cset	w8, ge  // ge = tcont
  44846c:	tbnz	w8, #0, 448474 <skip_subsystem+0xe0>
  448470:	b	4484b0 <skip_subsystem+0x11c>
  448474:	ldr	x0, [sp, #16]
  448478:	ldur	x1, [x29, #-16]
  44847c:	bl	40aa20 <strcmp@plt>
  448480:	cbz	w0, 448488 <skip_subsystem+0xf4>
  448484:	b	4484b0 <skip_subsystem+0x11c>
  448488:	add	x1, sp, #0x18
  44848c:	ldr	x8, [sp, #24]
  448490:	stur	x8, [x29, #-8]
  448494:	ldur	x0, [x29, #-8]
  448498:	bl	40abc0 <sd_device_get_parent@plt>
  44849c:	cmp	w0, #0x0
  4484a0:	cset	w9, ge  // ge = tcont
  4484a4:	tbnz	w9, #0, 4484ac <skip_subsystem+0x118>
  4484a8:	b	4484b0 <skip_subsystem+0x11c>
  4484ac:	b	448458 <skip_subsystem+0xc4>
  4484b0:	ldur	x0, [x29, #-8]
  4484b4:	ldp	x29, x30, [sp, #48]
  4484b8:	add	sp, sp, #0x40
  4484bc:	ret

00000000004484c0 <handle_ap>:
  4484c0:	sub	sp, sp, #0x40
  4484c4:	stp	x29, x30, [sp, #48]
  4484c8:	add	x29, sp, #0x30
  4484cc:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  4484d0:	add	x8, x8, #0x3ab
  4484d4:	add	x8, x8, #0x3
  4484d8:	stur	x0, [x29, #-8]
  4484dc:	stur	x1, [x29, #-16]
  4484e0:	str	x8, [sp]
  4484e4:	ldur	x8, [x29, #-8]
  4484e8:	cmp	x8, #0x0
  4484ec:	cset	w9, ne  // ne = any
  4484f0:	mov	w10, #0x1                   	// #1
  4484f4:	eor	w9, w9, #0x1
  4484f8:	eor	w9, w9, w10
  4484fc:	eor	w9, w9, w10
  448500:	and	w9, w9, #0x1
  448504:	mov	w0, w9
  448508:	sxtw	x8, w0
  44850c:	cbz	x8, 448530 <handle_ap+0x70>
  448510:	mov	w0, #0x1                   	// #1
  448514:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  448518:	add	x1, x1, #0x599
  44851c:	ldr	x2, [sp]
  448520:	mov	w3, #0x1f8                 	// #504
  448524:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  448528:	add	x4, x4, #0x8a0
  44852c:	bl	40a540 <log_assert_failed_realm@plt>
  448530:	ldur	x8, [x29, #-16]
  448534:	cmp	x8, #0x0
  448538:	cset	w9, ne  // ne = any
  44853c:	mov	w10, #0x1                   	// #1
  448540:	eor	w9, w9, #0x1
  448544:	eor	w9, w9, w10
  448548:	eor	w9, w9, w10
  44854c:	and	w9, w9, #0x1
  448550:	mov	w0, w9
  448554:	sxtw	x8, w0
  448558:	cbz	x8, 44857c <handle_ap+0xbc>
  44855c:	mov	w0, #0x1                   	// #1
  448560:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448564:	add	x1, x1, #0x54a
  448568:	ldr	x2, [sp]
  44856c:	mov	w3, #0x1f9                 	// #505
  448570:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  448574:	add	x4, x4, #0x8a0
  448578:	bl	40a540 <log_assert_failed_realm@plt>
  44857c:	ldur	x0, [x29, #-8]
  448580:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  448584:	add	x1, x1, #0xb5e
  448588:	add	x2, sp, #0x18
  44858c:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  448590:	cmp	w0, #0x0
  448594:	cset	w8, lt  // lt = tstop
  448598:	tbnz	w8, #0, 4485d8 <handle_ap+0x118>
  44859c:	ldur	x0, [x29, #-8]
  4485a0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4485a4:	add	x1, x1, #0x8cb
  4485a8:	add	x2, sp, #0x10
  4485ac:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4485b0:	cmp	w0, #0x0
  4485b4:	cset	w8, lt  // lt = tstop
  4485b8:	tbnz	w8, #0, 4485d8 <handle_ap+0x118>
  4485bc:	ldur	x0, [x29, #-16]
  4485c0:	ldr	x2, [sp, #24]
  4485c4:	ldr	x3, [sp, #16]
  4485c8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4485cc:	add	x1, x1, #0x8d8
  4485d0:	bl	4481dc <path_prepend>
  4485d4:	b	448604 <handle_ap+0x144>
  4485d8:	ldur	x0, [x29, #-8]
  4485dc:	add	x1, sp, #0x8
  4485e0:	bl	40a860 <sd_device_get_sysname@plt>
  4485e4:	cmp	w0, #0x0
  4485e8:	cset	w8, lt  // lt = tstop
  4485ec:	tbnz	w8, #0, 448604 <handle_ap+0x144>
  4485f0:	ldur	x0, [x29, #-16]
  4485f4:	ldr	x2, [sp, #8]
  4485f8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4485fc:	add	x1, x1, #0x8e1
  448600:	bl	4481dc <path_prepend>
  448604:	ldur	x0, [x29, #-8]
  448608:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44860c:	add	x1, x1, #0x46b
  448610:	bl	448394 <skip_subsystem>
  448614:	ldp	x29, x30, [sp, #48]
  448618:	add	sp, sp, #0x40
  44861c:	ret

0000000000448620 <startswith>:
  448620:	sub	sp, sp, #0x30
  448624:	stp	x29, x30, [sp, #32]
  448628:	add	x29, sp, #0x20
  44862c:	str	x0, [sp, #16]
  448630:	str	x1, [sp, #8]
  448634:	ldr	x0, [sp, #8]
  448638:	bl	40a800 <strlen@plt>
  44863c:	str	x0, [sp]
  448640:	ldr	x0, [sp, #16]
  448644:	ldr	x1, [sp, #8]
  448648:	ldr	x2, [sp]
  44864c:	bl	40a810 <strncmp@plt>
  448650:	cbnz	w0, 448668 <startswith+0x48>
  448654:	ldr	x8, [sp, #16]
  448658:	ldr	x9, [sp]
  44865c:	add	x8, x8, x9
  448660:	stur	x8, [x29, #-8]
  448664:	b	448670 <startswith+0x50>
  448668:	mov	x8, xzr
  44866c:	stur	x8, [x29, #-8]
  448670:	ldur	x0, [x29, #-8]
  448674:	ldp	x29, x30, [sp, #32]
  448678:	add	sp, sp, #0x30
  44867c:	ret

0000000000448680 <handle_scsi_fibre_channel>:
  448680:	sub	sp, sp, #0x60
  448684:	stp	x29, x30, [sp, #80]
  448688:	add	x29, sp, #0x50
  44868c:	mov	x8, xzr
  448690:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  448694:	add	x9, x9, #0x3ab
  448698:	add	x9, x9, #0x3
  44869c:	stur	x0, [x29, #-16]
  4486a0:	stur	x1, [x29, #-24]
  4486a4:	str	x8, [sp, #40]
  4486a8:	str	x8, [sp, #16]
  4486ac:	str	x9, [sp]
  4486b0:	ldur	x8, [x29, #-16]
  4486b4:	cmp	x8, #0x0
  4486b8:	cset	w9, ne  // ne = any
  4486bc:	mov	w10, #0x1                   	// #1
  4486c0:	eor	w9, w9, #0x1
  4486c4:	eor	w9, w9, w10
  4486c8:	eor	w9, w9, w10
  4486cc:	and	w9, w9, #0x1
  4486d0:	mov	w0, w9
  4486d4:	sxtw	x8, w0
  4486d8:	cbz	x8, 4486fc <handle_scsi_fibre_channel+0x7c>
  4486dc:	mov	w0, #0x1                   	// #1
  4486e0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4486e4:	add	x1, x1, #0x599
  4486e8:	ldr	x2, [sp]
  4486ec:	mov	w3, #0x6d                  	// #109
  4486f0:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4486f4:	add	x4, x4, #0x50f
  4486f8:	bl	40a540 <log_assert_failed_realm@plt>
  4486fc:	ldur	x8, [x29, #-24]
  448700:	cmp	x8, #0x0
  448704:	cset	w9, ne  // ne = any
  448708:	mov	w10, #0x1                   	// #1
  44870c:	eor	w9, w9, #0x1
  448710:	eor	w9, w9, w10
  448714:	eor	w9, w9, w10
  448718:	and	w9, w9, #0x1
  44871c:	mov	w0, w9
  448720:	sxtw	x8, w0
  448724:	cbz	x8, 448748 <handle_scsi_fibre_channel+0xc8>
  448728:	mov	w0, #0x1                   	// #1
  44872c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448730:	add	x1, x1, #0x54a
  448734:	ldr	x2, [sp]
  448738:	mov	w3, #0x6e                  	// #110
  44873c:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  448740:	add	x4, x4, #0x50f
  448744:	bl	40a540 <log_assert_failed_realm@plt>
  448748:	ldur	x0, [x29, #-16]
  44874c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448750:	add	x1, x1, #0x40e
  448754:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  448758:	add	x2, x2, #0x54f
  44875c:	sub	x3, x29, #0x20
  448760:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  448764:	cmp	w0, #0x0
  448768:	cset	w8, ge  // ge = tcont
  44876c:	tbnz	w8, #0, 448784 <handle_scsi_fibre_channel+0x104>
  448770:	mov	x8, xzr
  448774:	stur	x8, [x29, #-8]
  448778:	mov	w9, #0x1                   	// #1
  44877c:	str	w9, [sp, #12]
  448780:	b	448850 <handle_scsi_fibre_channel+0x1d0>
  448784:	ldur	x0, [x29, #-32]
  448788:	add	x1, sp, #0x18
  44878c:	bl	40a860 <sd_device_get_sysname@plt>
  448790:	cmp	w0, #0x0
  448794:	cset	w8, ge  // ge = tcont
  448798:	tbnz	w8, #0, 4487b0 <handle_scsi_fibre_channel+0x130>
  44879c:	mov	x8, xzr
  4487a0:	stur	x8, [x29, #-8]
  4487a4:	mov	w9, #0x1                   	// #1
  4487a8:	str	w9, [sp, #12]
  4487ac:	b	448850 <handle_scsi_fibre_channel+0x1d0>
  4487b0:	ldr	x2, [sp, #24]
  4487b4:	add	x0, sp, #0x28
  4487b8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4487bc:	add	x1, x1, #0x55b
  4487c0:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  4487c4:	cmp	w0, #0x0
  4487c8:	cset	w8, ge  // ge = tcont
  4487cc:	tbnz	w8, #0, 4487e4 <handle_scsi_fibre_channel+0x164>
  4487d0:	mov	x8, xzr
  4487d4:	stur	x8, [x29, #-8]
  4487d8:	mov	w9, #0x1                   	// #1
  4487dc:	str	w9, [sp, #12]
  4487e0:	b	448850 <handle_scsi_fibre_channel+0x1d0>
  4487e4:	ldr	x0, [sp, #40]
  4487e8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4487ec:	add	x1, x1, #0x568
  4487f0:	add	x2, sp, #0x20
  4487f4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4487f8:	cmp	w0, #0x0
  4487fc:	cset	w8, ge  // ge = tcont
  448800:	tbnz	w8, #0, 448818 <handle_scsi_fibre_channel+0x198>
  448804:	mov	x8, xzr
  448808:	stur	x8, [x29, #-8]
  44880c:	mov	w9, #0x1                   	// #1
  448810:	str	w9, [sp, #12]
  448814:	b	448850 <handle_scsi_fibre_channel+0x1d0>
  448818:	ldur	x0, [x29, #-16]
  44881c:	add	x1, sp, #0x10
  448820:	bl	449ac4 <format_lun_number>
  448824:	ldur	x8, [x29, #-24]
  448828:	ldr	x2, [sp, #32]
  44882c:	ldr	x3, [sp, #16]
  448830:	mov	x0, x8
  448834:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448838:	add	x1, x1, #0x572
  44883c:	bl	4481dc <path_prepend>
  448840:	ldur	x8, [x29, #-16]
  448844:	stur	x8, [x29, #-8]
  448848:	mov	w9, #0x1                   	// #1
  44884c:	str	w9, [sp, #12]
  448850:	add	x0, sp, #0x10
  448854:	bl	447ca4 <freep>
  448858:	add	x0, sp, #0x28
  44885c:	bl	449a90 <sd_device_unrefp>
  448860:	ldur	x0, [x29, #-8]
  448864:	ldp	x29, x30, [sp, #80]
  448868:	add	sp, sp, #0x60
  44886c:	ret

0000000000448870 <handle_scsi_sas>:
  448870:	sub	sp, sp, #0xa0
  448874:	stp	x29, x30, [sp, #144]
  448878:	add	x29, sp, #0x90
  44887c:	mov	x8, xzr
  448880:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  448884:	add	x9, x9, #0x3ab
  448888:	add	x9, x9, #0x3
  44888c:	stur	x0, [x29, #-16]
  448890:	stur	x1, [x29, #-24]
  448894:	stur	x8, [x29, #-64]
  448898:	str	x8, [sp, #72]
  44889c:	str	x8, [sp, #64]
  4488a0:	str	x8, [sp, #56]
  4488a4:	str	x8, [sp, #24]
  4488a8:	str	x9, [sp, #8]
  4488ac:	ldur	x8, [x29, #-16]
  4488b0:	cmp	x8, #0x0
  4488b4:	cset	w9, ne  // ne = any
  4488b8:	mov	w10, #0x1                   	// #1
  4488bc:	eor	w9, w9, #0x1
  4488c0:	eor	w9, w9, w10
  4488c4:	eor	w9, w9, w10
  4488c8:	and	w9, w9, #0x1
  4488cc:	mov	w0, w9
  4488d0:	sxtw	x8, w0
  4488d4:	cbz	x8, 4488f8 <handle_scsi_sas+0x88>
  4488d8:	mov	w0, #0x1                   	// #1
  4488dc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4488e0:	add	x1, x1, #0x599
  4488e4:	ldr	x2, [sp, #8]
  4488e8:	mov	w3, #0x9f                  	// #159
  4488ec:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4488f0:	add	x4, x4, #0x59c
  4488f4:	bl	40a540 <log_assert_failed_realm@plt>
  4488f8:	ldur	x8, [x29, #-24]
  4488fc:	cmp	x8, #0x0
  448900:	cset	w9, ne  // ne = any
  448904:	mov	w10, #0x1                   	// #1
  448908:	eor	w9, w9, #0x1
  44890c:	eor	w9, w9, w10
  448910:	eor	w9, w9, w10
  448914:	and	w9, w9, #0x1
  448918:	mov	w0, w9
  44891c:	sxtw	x8, w0
  448920:	cbz	x8, 448944 <handle_scsi_sas+0xd4>
  448924:	mov	w0, #0x1                   	// #1
  448928:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44892c:	add	x1, x1, #0x54a
  448930:	ldr	x2, [sp, #8]
  448934:	mov	w3, #0xa0                  	// #160
  448938:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  44893c:	add	x4, x4, #0x59c
  448940:	bl	40a540 <log_assert_failed_realm@plt>
  448944:	ldur	x0, [x29, #-16]
  448948:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44894c:	add	x1, x1, #0x40e
  448950:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  448954:	add	x2, x2, #0x54f
  448958:	sub	x3, x29, #0x20
  44895c:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  448960:	cmp	w0, #0x0
  448964:	cset	w8, ge  // ge = tcont
  448968:	tbnz	w8, #0, 448980 <handle_scsi_sas+0x110>
  44896c:	mov	x8, xzr
  448970:	stur	x8, [x29, #-8]
  448974:	mov	w9, #0x1                   	// #1
  448978:	str	w9, [sp, #20]
  44897c:	b	448c3c <handle_scsi_sas+0x3cc>
  448980:	ldur	x0, [x29, #-32]
  448984:	sub	x1, x29, #0x28
  448988:	bl	40abc0 <sd_device_get_parent@plt>
  44898c:	cmp	w0, #0x0
  448990:	cset	w8, ge  // ge = tcont
  448994:	tbnz	w8, #0, 4489ac <handle_scsi_sas+0x13c>
  448998:	mov	x8, xzr
  44899c:	stur	x8, [x29, #-8]
  4489a0:	mov	w9, #0x1                   	// #1
  4489a4:	str	w9, [sp, #20]
  4489a8:	b	448c3c <handle_scsi_sas+0x3cc>
  4489ac:	ldur	x0, [x29, #-40]
  4489b0:	add	x1, sp, #0x20
  4489b4:	bl	40a860 <sd_device_get_sysname@plt>
  4489b8:	cmp	w0, #0x0
  4489bc:	cset	w8, ge  // ge = tcont
  4489c0:	tbnz	w8, #0, 4489d8 <handle_scsi_sas+0x168>
  4489c4:	mov	x8, xzr
  4489c8:	stur	x8, [x29, #-8]
  4489cc:	mov	w9, #0x1                   	// #1
  4489d0:	str	w9, [sp, #20]
  4489d4:	b	448c3c <handle_scsi_sas+0x3cc>
  4489d8:	ldr	x2, [sp, #32]
  4489dc:	sub	x0, x29, #0x40
  4489e0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4489e4:	add	x1, x1, #0x5cd
  4489e8:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  4489ec:	cmp	w0, #0x0
  4489f0:	cset	w8, ge  // ge = tcont
  4489f4:	tbnz	w8, #0, 448a0c <handle_scsi_sas+0x19c>
  4489f8:	mov	x8, xzr
  4489fc:	stur	x8, [x29, #-8]
  448a00:	mov	w9, #0x1                   	// #1
  448a04:	str	w9, [sp, #20]
  448a08:	b	448c3c <handle_scsi_sas+0x3cc>
  448a0c:	ldur	x0, [x29, #-40]
  448a10:	sub	x1, x29, #0x30
  448a14:	bl	40abc0 <sd_device_get_parent@plt>
  448a18:	cmp	w0, #0x0
  448a1c:	cset	w8, ge  // ge = tcont
  448a20:	tbnz	w8, #0, 448a38 <handle_scsi_sas+0x1c8>
  448a24:	mov	x8, xzr
  448a28:	stur	x8, [x29, #-8]
  448a2c:	mov	w9, #0x1                   	// #1
  448a30:	str	w9, [sp, #20]
  448a34:	b	448c3c <handle_scsi_sas+0x3cc>
  448a38:	ldur	x0, [x29, #-48]
  448a3c:	add	x1, sp, #0x20
  448a40:	bl	40a860 <sd_device_get_sysname@plt>
  448a44:	cmp	w0, #0x0
  448a48:	cset	w8, ge  // ge = tcont
  448a4c:	tbnz	w8, #0, 448a64 <handle_scsi_sas+0x1f4>
  448a50:	mov	x8, xzr
  448a54:	stur	x8, [x29, #-8]
  448a58:	mov	w9, #0x1                   	// #1
  448a5c:	str	w9, [sp, #20]
  448a60:	b	448c3c <handle_scsi_sas+0x3cc>
  448a64:	ldr	x2, [sp, #32]
  448a68:	add	x0, sp, #0x40
  448a6c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448a70:	add	x1, x1, #0x5d8
  448a74:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  448a78:	cmp	w0, #0x0
  448a7c:	cset	w8, ge  // ge = tcont
  448a80:	tbnz	w8, #0, 448a98 <handle_scsi_sas+0x228>
  448a84:	mov	x8, xzr
  448a88:	stur	x8, [x29, #-8]
  448a8c:	mov	w9, #0x1                   	// #1
  448a90:	str	w9, [sp, #20]
  448a94:	b	448c3c <handle_scsi_sas+0x3cc>
  448a98:	ldr	x0, [sp, #64]
  448a9c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448aa0:	add	x1, x1, #0x5e1
  448aa4:	add	x2, sp, #0x28
  448aa8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  448aac:	cmp	w0, #0x0
  448ab0:	cset	w8, ge  // ge = tcont
  448ab4:	tbnz	w8, #0, 448acc <handle_scsi_sas+0x25c>
  448ab8:	mov	x8, xzr
  448abc:	stur	x8, [x29, #-8]
  448ac0:	mov	w9, #0x1                   	// #1
  448ac4:	str	w9, [sp, #20]
  448ac8:	b	448c3c <handle_scsi_sas+0x3cc>
  448acc:	ldr	x0, [sp, #40]
  448ad0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  448ad4:	add	x1, x1, #0xbbe
  448ad8:	mov	x2, #0x2                   	// #2
  448adc:	bl	40a810 <strncmp@plt>
  448ae0:	cbz	w0, 448b00 <handle_scsi_sas+0x290>
  448ae4:	ldur	x0, [x29, #-16]
  448ae8:	ldur	x1, [x29, #-24]
  448aec:	bl	449b90 <handle_scsi_sas_wide_port>
  448af0:	stur	x0, [x29, #-8]
  448af4:	mov	w8, #0x1                   	// #1
  448af8:	str	w8, [sp, #20]
  448afc:	b	448c3c <handle_scsi_sas+0x3cc>
  448b00:	ldur	x0, [x29, #-64]
  448b04:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448b08:	add	x1, x1, #0x5ea
  448b0c:	add	x2, sp, #0x30
  448b10:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  448b14:	cmp	w0, #0x0
  448b18:	cset	w8, ge  // ge = tcont
  448b1c:	tbnz	w8, #0, 448b34 <handle_scsi_sas+0x2c4>
  448b20:	mov	x8, xzr
  448b24:	stur	x8, [x29, #-8]
  448b28:	mov	w9, #0x1                   	// #1
  448b2c:	str	w9, [sp, #20]
  448b30:	b	448c3c <handle_scsi_sas+0x3cc>
  448b34:	ldur	x0, [x29, #-48]
  448b38:	sub	x1, x29, #0x38
  448b3c:	bl	40abc0 <sd_device_get_parent@plt>
  448b40:	cmp	w0, #0x0
  448b44:	cset	w8, ge  // ge = tcont
  448b48:	tbnz	w8, #0, 448b60 <handle_scsi_sas+0x2f0>
  448b4c:	mov	x8, xzr
  448b50:	stur	x8, [x29, #-8]
  448b54:	mov	w9, #0x1                   	// #1
  448b58:	str	w9, [sp, #20]
  448b5c:	b	448c3c <handle_scsi_sas+0x3cc>
  448b60:	ldur	x0, [x29, #-56]
  448b64:	add	x1, sp, #0x20
  448b68:	bl	40a860 <sd_device_get_sysname@plt>
  448b6c:	cmp	w0, #0x0
  448b70:	cset	w8, ge  // ge = tcont
  448b74:	tbnz	w8, #0, 448b8c <handle_scsi_sas+0x31c>
  448b78:	mov	x8, xzr
  448b7c:	stur	x8, [x29, #-8]
  448b80:	mov	w9, #0x1                   	// #1
  448b84:	str	w9, [sp, #20]
  448b88:	b	448c3c <handle_scsi_sas+0x3cc>
  448b8c:	ldr	x2, [sp, #32]
  448b90:	add	x0, sp, #0x48
  448b94:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448b98:	add	x1, x1, #0x5cd
  448b9c:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  448ba0:	cmp	w0, #0x0
  448ba4:	cset	w8, lt  // lt = tstop
  448ba8:	tbnz	w8, #0, 448be0 <handle_scsi_sas+0x370>
  448bac:	ldr	x0, [sp, #72]
  448bb0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448bb4:	add	x1, x1, #0x5f9
  448bb8:	add	x2, sp, #0x38
  448bbc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  448bc0:	cmp	w0, #0x0
  448bc4:	cset	w8, ge  // ge = tcont
  448bc8:	tbnz	w8, #0, 448be0 <handle_scsi_sas+0x370>
  448bcc:	mov	x8, xzr
  448bd0:	stur	x8, [x29, #-8]
  448bd4:	mov	w9, #0x1                   	// #1
  448bd8:	str	w9, [sp, #20]
  448bdc:	b	448c3c <handle_scsi_sas+0x3cc>
  448be0:	ldur	x0, [x29, #-16]
  448be4:	add	x1, sp, #0x18
  448be8:	bl	449ac4 <format_lun_number>
  448bec:	ldr	x8, [sp, #56]
  448bf0:	cbz	x8, 448c14 <handle_scsi_sas+0x3a4>
  448bf4:	ldur	x0, [x29, #-24]
  448bf8:	ldr	x2, [sp, #56]
  448bfc:	ldr	x3, [sp, #48]
  448c00:	ldr	x4, [sp, #24]
  448c04:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448c08:	add	x1, x1, #0x605
  448c0c:	bl	4481dc <path_prepend>
  448c10:	b	448c2c <handle_scsi_sas+0x3bc>
  448c14:	ldur	x0, [x29, #-24]
  448c18:	ldr	x2, [sp, #48]
  448c1c:	ldr	x3, [sp, #24]
  448c20:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448c24:	add	x1, x1, #0x618
  448c28:	bl	4481dc <path_prepend>
  448c2c:	ldur	x8, [x29, #-16]
  448c30:	stur	x8, [x29, #-8]
  448c34:	mov	w9, #0x1                   	// #1
  448c38:	str	w9, [sp, #20]
  448c3c:	add	x0, sp, #0x18
  448c40:	bl	447ca4 <freep>
  448c44:	add	x0, sp, #0x40
  448c48:	bl	449a90 <sd_device_unrefp>
  448c4c:	add	x0, sp, #0x48
  448c50:	bl	449a90 <sd_device_unrefp>
  448c54:	sub	x0, x29, #0x40
  448c58:	bl	449a90 <sd_device_unrefp>
  448c5c:	ldur	x0, [x29, #-8]
  448c60:	ldp	x29, x30, [sp, #144]
  448c64:	add	sp, sp, #0xa0
  448c68:	ret

0000000000448c6c <handle_scsi_iscsi>:
  448c6c:	stp	x29, x30, [sp, #-16]!
  448c70:	mov	x29, sp
  448c74:	sub	sp, sp, #0xe0
  448c78:	mov	x8, xzr
  448c7c:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  448c80:	add	x9, x9, #0x3ab
  448c84:	add	x9, x9, #0x3
  448c88:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  448c8c:	add	x10, x10, #0x66a
  448c90:	stur	x0, [x29, #-16]
  448c94:	stur	x1, [x29, #-24]
  448c98:	stur	x8, [x29, #-40]
  448c9c:	stur	x8, [x29, #-48]
  448ca0:	stur	x8, [x29, #-88]
  448ca4:	stur	x9, [x29, #-200]
  448ca8:	stur	x10, [x29, #-208]
  448cac:	ldur	x8, [x29, #-16]
  448cb0:	cmp	x8, #0x0
  448cb4:	cset	w9, ne  // ne = any
  448cb8:	mov	w10, #0x1                   	// #1
  448cbc:	eor	w9, w9, #0x1
  448cc0:	eor	w9, w9, w10
  448cc4:	eor	w9, w9, w10
  448cc8:	and	w9, w9, #0x1
  448ccc:	mov	w0, w9
  448cd0:	sxtw	x8, w0
  448cd4:	cbz	x8, 448cf4 <handle_scsi_iscsi+0x88>
  448cd8:	mov	w0, #0x1                   	// #1
  448cdc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  448ce0:	add	x1, x1, #0x599
  448ce4:	ldur	x2, [x29, #-200]
  448ce8:	mov	w3, #0xdb                  	// #219
  448cec:	ldur	x4, [x29, #-208]
  448cf0:	bl	40a540 <log_assert_failed_realm@plt>
  448cf4:	ldur	x8, [x29, #-24]
  448cf8:	cmp	x8, #0x0
  448cfc:	cset	w9, ne  // ne = any
  448d00:	mov	w10, #0x1                   	// #1
  448d04:	eor	w9, w9, #0x1
  448d08:	eor	w9, w9, w10
  448d0c:	eor	w9, w9, w10
  448d10:	and	w9, w9, #0x1
  448d14:	mov	w0, w9
  448d18:	sxtw	x8, w0
  448d1c:	cbz	x8, 448d3c <handle_scsi_iscsi+0xd0>
  448d20:	mov	w0, #0x1                   	// #1
  448d24:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448d28:	add	x1, x1, #0x54a
  448d2c:	ldur	x2, [x29, #-200]
  448d30:	mov	w3, #0xdc                  	// #220
  448d34:	ldur	x4, [x29, #-208]
  448d38:	bl	40a540 <log_assert_failed_realm@plt>
  448d3c:	ldur	x8, [x29, #-16]
  448d40:	stur	x8, [x29, #-32]
  448d44:	sub	x1, x29, #0x20
  448d48:	ldur	x0, [x29, #-32]
  448d4c:	bl	40abc0 <sd_device_get_parent@plt>
  448d50:	cmp	w0, #0x0
  448d54:	cset	w8, ge  // ge = tcont
  448d58:	tbnz	w8, #0, 448d70 <handle_scsi_iscsi+0x104>
  448d5c:	mov	x8, xzr
  448d60:	stur	x8, [x29, #-8]
  448d64:	mov	w9, #0x1                   	// #1
  448d68:	stur	w9, [x29, #-108]
  448d6c:	b	44914c <handle_scsi_iscsi+0x4e0>
  448d70:	ldur	x0, [x29, #-32]
  448d74:	sub	x1, x29, #0x60
  448d78:	bl	40a860 <sd_device_get_sysname@plt>
  448d7c:	cmp	w0, #0x0
  448d80:	cset	w8, ge  // ge = tcont
  448d84:	tbnz	w8, #0, 448d9c <handle_scsi_iscsi+0x130>
  448d88:	mov	x8, xzr
  448d8c:	stur	x8, [x29, #-8]
  448d90:	mov	w9, #0x1                   	// #1
  448d94:	stur	w9, [x29, #-108]
  448d98:	b	44914c <handle_scsi_iscsi+0x4e0>
  448d9c:	ldur	x0, [x29, #-96]
  448da0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448da4:	add	x1, x1, #0x69d
  448da8:	bl	448620 <startswith>
  448dac:	cbz	x0, 448db4 <handle_scsi_iscsi+0x148>
  448db0:	b	448db8 <handle_scsi_iscsi+0x14c>
  448db4:	b	448d44 <handle_scsi_iscsi+0xd8>
  448db8:	ldur	x2, [x29, #-96]
  448dbc:	sub	x0, x29, #0x28
  448dc0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448dc4:	add	x1, x1, #0x6a5
  448dc8:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  448dcc:	cmp	w0, #0x0
  448dd0:	cset	w8, ge  // ge = tcont
  448dd4:	tbnz	w8, #0, 448dec <handle_scsi_iscsi+0x180>
  448dd8:	mov	x8, xzr
  448ddc:	stur	x8, [x29, #-8]
  448de0:	mov	w9, #0x1                   	// #1
  448de4:	stur	w9, [x29, #-108]
  448de8:	b	44914c <handle_scsi_iscsi+0x4e0>
  448dec:	ldur	x0, [x29, #-40]
  448df0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  448df4:	add	x1, x1, #0x6b3
  448df8:	sub	x2, x29, #0x38
  448dfc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  448e00:	cmp	w0, #0x0
  448e04:	cset	w8, ge  // ge = tcont
  448e08:	tbnz	w8, #0, 448e20 <handle_scsi_iscsi+0x1b4>
  448e0c:	mov	x8, xzr
  448e10:	stur	x8, [x29, #-8]
  448e14:	mov	w9, #0x1                   	// #1
  448e18:	stur	w9, [x29, #-108]
  448e1c:	b	44914c <handle_scsi_iscsi+0x4e0>
  448e20:	ldur	x0, [x29, #-32]
  448e24:	sub	x1, x29, #0x68
  448e28:	bl	40ae50 <sd_device_get_sysnum@plt>
  448e2c:	cmp	w0, #0x0
  448e30:	cset	w8, lt  // lt = tstop
  448e34:	tbnz	w8, #0, 448e40 <handle_scsi_iscsi+0x1d4>
  448e38:	ldur	x8, [x29, #-104]
  448e3c:	cbnz	x8, 448e54 <handle_scsi_iscsi+0x1e8>
  448e40:	mov	x8, xzr
  448e44:	stur	x8, [x29, #-8]
  448e48:	mov	w9, #0x1                   	// #1
  448e4c:	stur	w9, [x29, #-108]
  448e50:	b	44914c <handle_scsi_iscsi+0x4e0>
  448e54:	sub	x8, x29, #0x88
  448e58:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  448e5c:	add	x9, x9, #0x6be
  448e60:	stur	x9, [x29, #-136]
  448e64:	ldur	x9, [x29, #-104]
  448e68:	str	x9, [x8, #8]
  448e6c:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  448e70:	add	x9, x9, #0x6c9
  448e74:	str	x9, [x8, #16]
  448e78:	stur	xzr, [x29, #-160]
  448e7c:	stur	xzr, [x29, #-168]
  448e80:	ldur	x8, [x29, #-168]
  448e84:	mov	w9, #0x0                   	// #0
  448e88:	cmp	x8, #0x3
  448e8c:	stur	w9, [x29, #-212]
  448e90:	b.cs	448eb8 <handle_scsi_iscsi+0x24c>  // b.hs, b.nlast
  448e94:	ldur	x8, [x29, #-168]
  448e98:	mov	x9, #0x8                   	// #8
  448e9c:	mul	x8, x9, x8
  448ea0:	sub	x9, x29, #0x88
  448ea4:	add	x8, x9, x8
  448ea8:	ldr	x8, [x8]
  448eac:	cmp	x8, #0x0
  448eb0:	cset	w10, ne  // ne = any
  448eb4:	stur	w10, [x29, #-212]
  448eb8:	ldur	w8, [x29, #-212]
  448ebc:	tbnz	w8, #0, 448ec4 <handle_scsi_iscsi+0x258>
  448ec0:	b	448efc <handle_scsi_iscsi+0x290>
  448ec4:	ldur	x8, [x29, #-168]
  448ec8:	mov	x9, #0x8                   	// #8
  448ecc:	mul	x8, x9, x8
  448ed0:	sub	x9, x29, #0x88
  448ed4:	add	x8, x9, x8
  448ed8:	ldr	x0, [x8]
  448edc:	bl	40a800 <strlen@plt>
  448ee0:	ldur	x8, [x29, #-160]
  448ee4:	add	x8, x8, x0
  448ee8:	stur	x8, [x29, #-160]
  448eec:	ldur	x8, [x29, #-168]
  448ef0:	add	x8, x8, #0x1
  448ef4:	stur	x8, [x29, #-168]
  448ef8:	b	448e80 <handle_scsi_iscsi+0x214>
  448efc:	ldur	x8, [x29, #-160]
  448f00:	add	x8, x8, #0x1
  448f04:	stur	x8, [x29, #-176]
  448f08:	ldur	x1, [x29, #-176]
  448f0c:	mov	x0, #0x1                   	// #1
  448f10:	bl	449dac <size_multiply_overflow>
  448f14:	mov	w8, #0x1                   	// #1
  448f18:	eor	w9, w0, #0x1
  448f1c:	eor	w9, w9, w8
  448f20:	eor	w9, w9, w8
  448f24:	eor	w8, w9, w8
  448f28:	and	w8, w8, #0x1
  448f2c:	mov	w1, w8
  448f30:	sxtw	x10, w1
  448f34:	cbz	x10, 448f54 <handle_scsi_iscsi+0x2e8>
  448f38:	mov	w0, #0x1                   	// #1
  448f3c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  448f40:	add	x1, x1, #0x694
  448f44:	ldur	x2, [x29, #-200]
  448f48:	mov	w3, #0xf2                  	// #242
  448f4c:	ldur	x4, [x29, #-208]
  448f50:	bl	40a540 <log_assert_failed_realm@plt>
  448f54:	ldur	x8, [x29, #-176]
  448f58:	mov	x9, #0x1                   	// #1
  448f5c:	mul	x8, x9, x8
  448f60:	cmp	x8, #0x400, lsl #12
  448f64:	cset	w10, ls  // ls = plast
  448f68:	mov	w11, #0x1                   	// #1
  448f6c:	eor	w10, w10, #0x1
  448f70:	eor	w10, w10, w11
  448f74:	eor	w10, w10, w11
  448f78:	and	w10, w10, #0x1
  448f7c:	mov	w0, w10
  448f80:	sxtw	x8, w0
  448f84:	cbz	x8, 448fa4 <handle_scsi_iscsi+0x338>
  448f88:	mov	w0, #0x1                   	// #1
  448f8c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  448f90:	add	x1, x1, #0x6f4
  448f94:	ldur	x2, [x29, #-200]
  448f98:	mov	w3, #0xf2                  	// #242
  448f9c:	ldur	x4, [x29, #-208]
  448fa0:	bl	40a540 <log_assert_failed_realm@plt>
  448fa4:	ldur	x8, [x29, #-176]
  448fa8:	mov	x9, #0x1                   	// #1
  448fac:	mul	x8, x9, x8
  448fb0:	mul	x8, x8, x9
  448fb4:	add	x8, x8, #0xf
  448fb8:	and	x8, x8, #0xfffffffffffffff0
  448fbc:	mov	x9, sp
  448fc0:	subs	x8, x9, x8
  448fc4:	mov	sp, x8
  448fc8:	stur	x8, [x29, #-184]
  448fcc:	ldur	x8, [x29, #-184]
  448fd0:	stur	x8, [x29, #-144]
  448fd4:	stur	x8, [x29, #-152]
  448fd8:	stur	xzr, [x29, #-168]
  448fdc:	ldur	x8, [x29, #-168]
  448fe0:	mov	w9, #0x0                   	// #0
  448fe4:	cmp	x8, #0x3
  448fe8:	stur	w9, [x29, #-216]
  448fec:	b.cs	449014 <handle_scsi_iscsi+0x3a8>  // b.hs, b.nlast
  448ff0:	ldur	x8, [x29, #-168]
  448ff4:	mov	x9, #0x8                   	// #8
  448ff8:	mul	x8, x9, x8
  448ffc:	sub	x9, x29, #0x88
  449000:	add	x8, x9, x8
  449004:	ldr	x8, [x8]
  449008:	cmp	x8, #0x0
  44900c:	cset	w10, ne  // ne = any
  449010:	stur	w10, [x29, #-216]
  449014:	ldur	w8, [x29, #-216]
  449018:	tbnz	w8, #0, 449020 <handle_scsi_iscsi+0x3b4>
  44901c:	b	449054 <handle_scsi_iscsi+0x3e8>
  449020:	ldur	x0, [x29, #-152]
  449024:	ldur	x8, [x29, #-168]
  449028:	mov	x9, #0x8                   	// #8
  44902c:	mul	x8, x9, x8
  449030:	sub	x9, x29, #0x88
  449034:	add	x8, x9, x8
  449038:	ldr	x1, [x8]
  44903c:	bl	40aca0 <stpcpy@plt>
  449040:	stur	x0, [x29, #-152]
  449044:	ldur	x8, [x29, #-168]
  449048:	add	x8, x8, #0x1
  44904c:	stur	x8, [x29, #-168]
  449050:	b	448fdc <handle_scsi_iscsi+0x370>
  449054:	ldur	x8, [x29, #-152]
  449058:	mov	w9, #0x0                   	// #0
  44905c:	strb	w9, [x8]
  449060:	ldur	x8, [x29, #-144]
  449064:	stur	x8, [x29, #-192]
  449068:	ldur	x8, [x29, #-192]
  44906c:	stur	x8, [x29, #-64]
  449070:	ldur	x2, [x29, #-64]
  449074:	sub	x0, x29, #0x30
  449078:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44907c:	add	x1, x1, #0x6cc
  449080:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  449084:	cmp	w0, #0x0
  449088:	cset	w9, ge  // ge = tcont
  44908c:	tbnz	w9, #0, 4490a4 <handle_scsi_iscsi+0x438>
  449090:	mov	x8, xzr
  449094:	stur	x8, [x29, #-8]
  449098:	mov	w9, #0x1                   	// #1
  44909c:	stur	w9, [x29, #-108]
  4490a0:	b	44914c <handle_scsi_iscsi+0x4e0>
  4490a4:	ldur	x0, [x29, #-48]
  4490a8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4490ac:	add	x1, x1, #0x6dd
  4490b0:	sub	x2, x29, #0x48
  4490b4:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4490b8:	cmp	w0, #0x0
  4490bc:	cset	w8, ge  // ge = tcont
  4490c0:	tbnz	w8, #0, 4490d8 <handle_scsi_iscsi+0x46c>
  4490c4:	mov	x8, xzr
  4490c8:	stur	x8, [x29, #-8]
  4490cc:	mov	w9, #0x1                   	// #1
  4490d0:	stur	w9, [x29, #-108]
  4490d4:	b	44914c <handle_scsi_iscsi+0x4e0>
  4490d8:	ldur	x0, [x29, #-48]
  4490dc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4490e0:	add	x1, x1, #0x6f0
  4490e4:	sub	x2, x29, #0x50
  4490e8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  4490ec:	cmp	w0, #0x0
  4490f0:	cset	w8, ge  // ge = tcont
  4490f4:	tbnz	w8, #0, 44910c <handle_scsi_iscsi+0x4a0>
  4490f8:	mov	x8, xzr
  4490fc:	stur	x8, [x29, #-8]
  449100:	mov	w9, #0x1                   	// #1
  449104:	stur	w9, [x29, #-108]
  449108:	b	44914c <handle_scsi_iscsi+0x4e0>
  44910c:	ldur	x0, [x29, #-16]
  449110:	sub	x1, x29, #0x58
  449114:	bl	449ac4 <format_lun_number>
  449118:	ldur	x8, [x29, #-24]
  44911c:	ldur	x2, [x29, #-72]
  449120:	ldur	x3, [x29, #-80]
  449124:	ldur	x4, [x29, #-56]
  449128:	ldur	x5, [x29, #-88]
  44912c:	mov	x0, x8
  449130:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449134:	add	x1, x1, #0x700
  449138:	bl	4481dc <path_prepend>
  44913c:	ldur	x8, [x29, #-16]
  449140:	stur	x8, [x29, #-8]
  449144:	mov	w9, #0x1                   	// #1
  449148:	stur	w9, [x29, #-108]
  44914c:	sub	x0, x29, #0x58
  449150:	bl	447ca4 <freep>
  449154:	sub	x0, x29, #0x30
  449158:	bl	449a90 <sd_device_unrefp>
  44915c:	sub	x0, x29, #0x28
  449160:	bl	449a90 <sd_device_unrefp>
  449164:	ldur	x0, [x29, #-8]
  449168:	mov	sp, x29
  44916c:	ldp	x29, x30, [sp], #16
  449170:	ret

0000000000449174 <handle_scsi_ata>:
  449174:	sub	sp, sp, #0x60
  449178:	stp	x29, x30, [sp, #80]
  44917c:	add	x29, sp, #0x50
  449180:	mov	x8, xzr
  449184:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  449188:	add	x9, x9, #0x3ab
  44918c:	add	x9, x9, #0x3
  449190:	stur	x0, [x29, #-16]
  449194:	stur	x1, [x29, #-24]
  449198:	str	x8, [sp, #32]
  44919c:	str	x9, [sp]
  4491a0:	ldur	x8, [x29, #-16]
  4491a4:	cmp	x8, #0x0
  4491a8:	cset	w9, ne  // ne = any
  4491ac:	mov	w10, #0x1                   	// #1
  4491b0:	eor	w9, w9, #0x1
  4491b4:	eor	w9, w9, w10
  4491b8:	eor	w9, w9, w10
  4491bc:	and	w9, w9, #0x1
  4491c0:	mov	w0, w9
  4491c4:	sxtw	x8, w0
  4491c8:	cbz	x8, 4491ec <handle_scsi_ata+0x78>
  4491cc:	mov	w0, #0x1                   	// #1
  4491d0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4491d4:	add	x1, x1, #0x599
  4491d8:	ldr	x2, [sp]
  4491dc:	mov	w3, #0x105                 	// #261
  4491e0:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4491e4:	add	x4, x4, #0x715
  4491e8:	bl	40a540 <log_assert_failed_realm@plt>
  4491ec:	ldur	x8, [x29, #-24]
  4491f0:	cmp	x8, #0x0
  4491f4:	cset	w9, ne  // ne = any
  4491f8:	mov	w10, #0x1                   	// #1
  4491fc:	eor	w9, w9, #0x1
  449200:	eor	w9, w9, w10
  449204:	eor	w9, w9, w10
  449208:	and	w9, w9, #0x1
  44920c:	mov	w0, w9
  449210:	sxtw	x8, w0
  449214:	cbz	x8, 449238 <handle_scsi_ata+0xc4>
  449218:	mov	w0, #0x1                   	// #1
  44921c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449220:	add	x1, x1, #0x54a
  449224:	ldr	x2, [sp]
  449228:	mov	w3, #0x106                 	// #262
  44922c:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  449230:	add	x4, x4, #0x715
  449234:	bl	40a540 <log_assert_failed_realm@plt>
  449238:	ldur	x0, [x29, #-16]
  44923c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449240:	add	x1, x1, #0x40e
  449244:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  449248:	add	x2, x2, #0x746
  44924c:	sub	x3, x29, #0x20
  449250:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  449254:	cmp	w0, #0x0
  449258:	cset	w8, ge  // ge = tcont
  44925c:	tbnz	w8, #0, 449274 <handle_scsi_ata+0x100>
  449260:	mov	x8, xzr
  449264:	stur	x8, [x29, #-8]
  449268:	mov	w9, #0x1                   	// #1
  44926c:	str	w9, [sp, #12]
  449270:	b	449358 <handle_scsi_ata+0x1e4>
  449274:	ldur	x0, [x29, #-32]
  449278:	add	x1, sp, #0x28
  44927c:	bl	40abc0 <sd_device_get_parent@plt>
  449280:	cmp	w0, #0x0
  449284:	cset	w8, ge  // ge = tcont
  449288:	tbnz	w8, #0, 4492a0 <handle_scsi_ata+0x12c>
  44928c:	mov	x8, xzr
  449290:	stur	x8, [x29, #-8]
  449294:	mov	w9, #0x1                   	// #1
  449298:	str	w9, [sp, #12]
  44929c:	b	449358 <handle_scsi_ata+0x1e4>
  4492a0:	ldr	x0, [sp, #40]
  4492a4:	add	x1, sp, #0x10
  4492a8:	bl	40a860 <sd_device_get_sysname@plt>
  4492ac:	cmp	w0, #0x0
  4492b0:	cset	w8, ge  // ge = tcont
  4492b4:	tbnz	w8, #0, 4492cc <handle_scsi_ata+0x158>
  4492b8:	mov	x8, xzr
  4492bc:	stur	x8, [x29, #-8]
  4492c0:	mov	w9, #0x1                   	// #1
  4492c4:	str	w9, [sp, #12]
  4492c8:	b	449358 <handle_scsi_ata+0x1e4>
  4492cc:	ldr	x2, [sp, #16]
  4492d0:	add	x0, sp, #0x20
  4492d4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4492d8:	add	x1, x1, #0x750
  4492dc:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  4492e0:	cmp	w0, #0x0
  4492e4:	cset	w8, ge  // ge = tcont
  4492e8:	tbnz	w8, #0, 449300 <handle_scsi_ata+0x18c>
  4492ec:	mov	x8, xzr
  4492f0:	stur	x8, [x29, #-8]
  4492f4:	mov	w9, #0x1                   	// #1
  4492f8:	str	w9, [sp, #12]
  4492fc:	b	449358 <handle_scsi_ata+0x1e4>
  449300:	ldr	x0, [sp, #32]
  449304:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449308:	add	x1, x1, #0x759
  44930c:	add	x2, sp, #0x18
  449310:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  449314:	cmp	w0, #0x0
  449318:	cset	w8, ge  // ge = tcont
  44931c:	tbnz	w8, #0, 449334 <handle_scsi_ata+0x1c0>
  449320:	mov	x8, xzr
  449324:	stur	x8, [x29, #-8]
  449328:	mov	w9, #0x1                   	// #1
  44932c:	str	w9, [sp, #12]
  449330:	b	449358 <handle_scsi_ata+0x1e4>
  449334:	ldur	x0, [x29, #-24]
  449338:	ldr	x2, [sp, #24]
  44933c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449340:	add	x1, x1, #0x761
  449344:	bl	4481dc <path_prepend>
  449348:	ldur	x8, [x29, #-16]
  44934c:	stur	x8, [x29, #-8]
  449350:	mov	w9, #0x1                   	// #1
  449354:	str	w9, [sp, #12]
  449358:	add	x0, sp, #0x20
  44935c:	bl	449a90 <sd_device_unrefp>
  449360:	ldur	x0, [x29, #-8]
  449364:	ldp	x29, x30, [sp, #80]
  449368:	add	sp, sp, #0x60
  44936c:	ret

0000000000449370 <handle_scsi_hyperv>:
  449370:	sub	sp, sp, #0xb0
  449374:	stp	x29, x30, [sp, #160]
  449378:	add	x29, sp, #0xa0
  44937c:	mov	x8, xzr
  449380:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  449384:	add	x9, x9, #0x3ab
  449388:	add	x9, x9, #0x3
  44938c:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  449390:	add	x10, x10, #0x768
  449394:	stur	x0, [x29, #-16]
  449398:	stur	x1, [x29, #-24]
  44939c:	stur	x2, [x29, #-32]
  4493a0:	stur	x8, [x29, #-64]
  4493a4:	str	x9, [sp, #24]
  4493a8:	str	x10, [sp, #16]
  4493ac:	ldur	x8, [x29, #-16]
  4493b0:	cmp	x8, #0x0
  4493b4:	cset	w9, ne  // ne = any
  4493b8:	mov	w10, #0x1                   	// #1
  4493bc:	eor	w9, w9, #0x1
  4493c0:	eor	w9, w9, w10
  4493c4:	eor	w9, w9, w10
  4493c8:	and	w9, w9, #0x1
  4493cc:	mov	w0, w9
  4493d0:	sxtw	x8, w0
  4493d4:	cbz	x8, 4493f4 <handle_scsi_hyperv+0x84>
  4493d8:	mov	w0, #0x1                   	// #1
  4493dc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4493e0:	add	x1, x1, #0x599
  4493e4:	ldr	x2, [sp, #24]
  4493e8:	mov	w3, #0x16f                 	// #367
  4493ec:	ldr	x4, [sp, #16]
  4493f0:	bl	40a540 <log_assert_failed_realm@plt>
  4493f4:	ldur	x8, [x29, #-24]
  4493f8:	cmp	x8, #0x0
  4493fc:	cset	w9, ne  // ne = any
  449400:	mov	w10, #0x1                   	// #1
  449404:	eor	w9, w9, #0x1
  449408:	eor	w9, w9, w10
  44940c:	eor	w9, w9, w10
  449410:	and	w9, w9, #0x1
  449414:	mov	w0, w9
  449418:	sxtw	x8, w0
  44941c:	cbz	x8, 44943c <handle_scsi_hyperv+0xcc>
  449420:	mov	w0, #0x1                   	// #1
  449424:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449428:	add	x1, x1, #0x54a
  44942c:	ldr	x2, [sp, #24]
  449430:	mov	w3, #0x170                 	// #368
  449434:	ldr	x4, [sp, #16]
  449438:	bl	40a540 <log_assert_failed_realm@plt>
  44943c:	ldur	x8, [x29, #-32]
  449440:	cmp	x8, #0x27
  449444:	cset	w9, cc  // cc = lo, ul, last
  449448:	mov	w10, #0x1                   	// #1
  44944c:	eor	w9, w9, #0x1
  449450:	eor	w9, w9, w10
  449454:	eor	w9, w9, w10
  449458:	and	w9, w9, #0x1
  44945c:	mov	w0, w9
  449460:	sxtw	x8, w0
  449464:	cbz	x8, 449484 <handle_scsi_hyperv+0x114>
  449468:	mov	w0, #0x1                   	// #1
  44946c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449470:	add	x1, x1, #0x7a4
  449474:	ldr	x2, [sp, #24]
  449478:	mov	w3, #0x171                 	// #369
  44947c:	ldr	x4, [sp, #16]
  449480:	bl	40a540 <log_assert_failed_realm@plt>
  449484:	ldur	x0, [x29, #-16]
  449488:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44948c:	add	x1, x1, #0x40e
  449490:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  449494:	add	x2, x2, #0x746
  449498:	sub	x3, x29, #0x28
  44949c:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  4494a0:	cmp	w0, #0x0
  4494a4:	cset	w8, ge  // ge = tcont
  4494a8:	tbnz	w8, #0, 4494c0 <handle_scsi_hyperv+0x150>
  4494ac:	mov	x8, xzr
  4494b0:	stur	x8, [x29, #-8]
  4494b4:	mov	w9, #0x1                   	// #1
  4494b8:	str	w9, [sp, #36]
  4494bc:	b	449630 <handle_scsi_hyperv+0x2c0>
  4494c0:	ldur	x0, [x29, #-40]
  4494c4:	sub	x1, x29, #0x30
  4494c8:	bl	40abc0 <sd_device_get_parent@plt>
  4494cc:	cmp	w0, #0x0
  4494d0:	cset	w8, ge  // ge = tcont
  4494d4:	tbnz	w8, #0, 4494ec <handle_scsi_hyperv+0x17c>
  4494d8:	mov	x8, xzr
  4494dc:	stur	x8, [x29, #-8]
  4494e0:	mov	w9, #0x1                   	// #1
  4494e4:	str	w9, [sp, #36]
  4494e8:	b	449630 <handle_scsi_hyperv+0x2c0>
  4494ec:	ldur	x0, [x29, #-48]
  4494f0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4494f4:	add	x1, x1, #0x7c0
  4494f8:	sub	x2, x29, #0x38
  4494fc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  449500:	cmp	w0, #0x0
  449504:	cset	w8, ge  // ge = tcont
  449508:	tbnz	w8, #0, 449520 <handle_scsi_hyperv+0x1b0>
  44950c:	mov	x8, xzr
  449510:	stur	x8, [x29, #-8]
  449514:	mov	w9, #0x1                   	// #1
  449518:	str	w9, [sp, #36]
  44951c:	b	449630 <handle_scsi_hyperv+0x2c0>
  449520:	ldur	x0, [x29, #-56]
  449524:	bl	40a800 <strlen@plt>
  449528:	ldur	x8, [x29, #-32]
  44952c:	cmp	x0, x8
  449530:	b.cc	44955c <handle_scsi_hyperv+0x1ec>  // b.lo, b.ul, b.last
  449534:	ldur	x8, [x29, #-56]
  449538:	ldrb	w9, [x8]
  44953c:	cmp	w9, #0x7b
  449540:	b.ne	44955c <handle_scsi_hyperv+0x1ec>  // b.any
  449544:	ldur	x8, [x29, #-56]
  449548:	ldur	x9, [x29, #-32]
  44954c:	subs	x9, x9, #0x1
  449550:	ldrb	w10, [x8, x9]
  449554:	cmp	w10, #0x7d
  449558:	b.eq	449570 <handle_scsi_hyperv+0x200>  // b.none
  44955c:	mov	x8, xzr
  449560:	stur	x8, [x29, #-8]
  449564:	mov	w9, #0x1                   	// #1
  449568:	str	w9, [sp, #36]
  44956c:	b	449630 <handle_scsi_hyperv+0x2c0>
  449570:	mov	x8, #0x1                   	// #1
  449574:	str	x8, [sp, #48]
  449578:	str	xzr, [sp, #40]
  44957c:	ldr	x8, [sp, #48]
  449580:	ldur	x9, [x29, #-32]
  449584:	subs	x9, x9, #0x1
  449588:	cmp	x8, x9
  44958c:	b.cs	4495e0 <handle_scsi_hyperv+0x270>  // b.hs, b.nlast
  449590:	ldur	x8, [x29, #-56]
  449594:	ldr	x9, [sp, #48]
  449598:	ldrb	w10, [x8, x9]
  44959c:	cmp	w10, #0x2d
  4495a0:	b.ne	4495a8 <handle_scsi_hyperv+0x238>  // b.any
  4495a4:	b	4495d0 <handle_scsi_hyperv+0x260>
  4495a8:	ldur	x8, [x29, #-56]
  4495ac:	ldr	x9, [sp, #48]
  4495b0:	add	x8, x8, x9
  4495b4:	ldrb	w10, [x8]
  4495b8:	ldr	x8, [sp, #40]
  4495bc:	add	x9, x8, #0x1
  4495c0:	str	x9, [sp, #40]
  4495c4:	add	x9, sp, #0x39
  4495c8:	add	x8, x9, x8
  4495cc:	strb	w10, [x8]
  4495d0:	ldr	x8, [sp, #48]
  4495d4:	add	x8, x8, #0x1
  4495d8:	str	x8, [sp, #48]
  4495dc:	b	44957c <handle_scsi_hyperv+0x20c>
  4495e0:	ldr	x8, [sp, #40]
  4495e4:	add	x9, sp, #0x39
  4495e8:	add	x8, x9, x8
  4495ec:	mov	w10, #0x0                   	// #0
  4495f0:	strb	w10, [x8]
  4495f4:	ldur	x0, [x29, #-16]
  4495f8:	sub	x1, x29, #0x40
  4495fc:	str	x9, [sp, #8]
  449600:	bl	449ac4 <format_lun_number>
  449604:	ldur	x8, [x29, #-24]
  449608:	ldur	x3, [x29, #-64]
  44960c:	mov	x0, x8
  449610:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449614:	add	x1, x1, #0x7ca
  449618:	ldr	x2, [sp, #8]
  44961c:	bl	4481dc <path_prepend>
  449620:	ldur	x8, [x29, #-16]
  449624:	stur	x8, [x29, #-8]
  449628:	mov	w10, #0x1                   	// #1
  44962c:	str	w10, [sp, #36]
  449630:	sub	x0, x29, #0x40
  449634:	bl	447ca4 <freep>
  449638:	ldur	x0, [x29, #-8]
  44963c:	ldp	x29, x30, [sp, #160]
  449640:	add	sp, sp, #0xb0
  449644:	ret

0000000000449648 <handle_scsi_default>:
  449648:	stp	x29, x30, [sp, #-16]!
  44964c:	mov	x29, sp
  449650:	sub	sp, sp, #0xb0
  449654:	sub	x8, x29, #0x8
  449658:	mov	x9, xzr
  44965c:	mov	w10, #0xffffffff            	// #-1
  449660:	adrp	x11, 46d000 <on_inotify.__assert_in_set+0x9540>
  449664:	add	x11, x11, #0x3ab
  449668:	add	x11, x11, #0x3
  44966c:	stur	x0, [x29, #-16]
  449670:	stur	x1, [x29, #-24]
  449674:	stur	x9, [x29, #-80]
  449678:	stur	w10, [x29, #-92]
  44967c:	stur	x8, [x29, #-152]
  449680:	stur	x11, [x29, #-160]
  449684:	ldur	x8, [x29, #-16]
  449688:	cmp	x8, #0x0
  44968c:	cset	w9, ne  // ne = any
  449690:	mov	w10, #0x1                   	// #1
  449694:	eor	w9, w9, #0x1
  449698:	eor	w9, w9, w10
  44969c:	eor	w9, w9, w10
  4496a0:	and	w9, w9, #0x1
  4496a4:	mov	w0, w9
  4496a8:	sxtw	x8, w0
  4496ac:	cbz	x8, 4496d0 <handle_scsi_default+0x88>
  4496b0:	mov	w0, #0x1                   	// #1
  4496b4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4496b8:	add	x1, x1, #0x599
  4496bc:	ldur	x2, [x29, #-160]
  4496c0:	mov	w3, #0x122                 	// #290
  4496c4:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  4496c8:	add	x4, x4, #0x7d6
  4496cc:	bl	40a540 <log_assert_failed_realm@plt>
  4496d0:	ldur	x8, [x29, #-24]
  4496d4:	cmp	x8, #0x0
  4496d8:	cset	w9, ne  // ne = any
  4496dc:	mov	w10, #0x1                   	// #1
  4496e0:	eor	w9, w9, #0x1
  4496e4:	eor	w9, w9, w10
  4496e8:	eor	w9, w9, w10
  4496ec:	and	w9, w9, #0x1
  4496f0:	mov	w0, w9
  4496f4:	sxtw	x8, w0
  4496f8:	cbz	x8, 44971c <handle_scsi_default+0xd4>
  4496fc:	mov	w0, #0x1                   	// #1
  449700:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449704:	add	x1, x1, #0x54a
  449708:	ldur	x2, [x29, #-160]
  44970c:	mov	w3, #0x123                 	// #291
  449710:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  449714:	add	x4, x4, #0x7d6
  449718:	bl	40a540 <log_assert_failed_realm@plt>
  44971c:	ldur	x0, [x29, #-16]
  449720:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449724:	add	x1, x1, #0x40e
  449728:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44972c:	add	x2, x2, #0x746
  449730:	sub	x3, x29, #0x20
  449734:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  449738:	cmp	w0, #0x0
  44973c:	cset	w8, ge  // ge = tcont
  449740:	tbnz	w8, #0, 44975c <handle_scsi_default+0x114>
  449744:	mov	x8, xzr
  449748:	ldur	x9, [x29, #-152]
  44974c:	str	x8, [x9]
  449750:	mov	w10, #0x1                   	// #1
  449754:	stur	w10, [x29, #-96]
  449758:	b	449a74 <handle_scsi_default+0x42c>
  44975c:	ldur	x0, [x29, #-16]
  449760:	sub	x1, x29, #0x38
  449764:	bl	40a860 <sd_device_get_sysname@plt>
  449768:	cmp	w0, #0x0
  44976c:	cset	w8, ge  // ge = tcont
  449770:	tbnz	w8, #0, 44978c <handle_scsi_default+0x144>
  449774:	mov	x8, xzr
  449778:	ldur	x9, [x29, #-152]
  44977c:	str	x8, [x9]
  449780:	mov	w10, #0x1                   	// #1
  449784:	stur	w10, [x29, #-96]
  449788:	b	449a74 <handle_scsi_default+0x42c>
  44978c:	ldur	x0, [x29, #-56]
  449790:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449794:	add	x1, x1, #0x80b
  449798:	sub	x2, x29, #0x24
  44979c:	sub	x3, x29, #0x28
  4497a0:	sub	x4, x29, #0x2c
  4497a4:	sub	x5, x29, #0x30
  4497a8:	bl	40b6a0 <__isoc99_sscanf@plt>
  4497ac:	cmp	w0, #0x4
  4497b0:	b.eq	4497cc <handle_scsi_default+0x184>  // b.none
  4497b4:	mov	x8, xzr
  4497b8:	ldur	x9, [x29, #-152]
  4497bc:	str	x8, [x9]
  4497c0:	mov	w10, #0x1                   	// #1
  4497c4:	stur	w10, [x29, #-96]
  4497c8:	b	449a74 <handle_scsi_default+0x42c>
  4497cc:	ldur	x0, [x29, #-32]
  4497d0:	sub	x1, x29, #0x40
  4497d4:	bl	40abf0 <sd_device_get_syspath@plt>
  4497d8:	cmp	w0, #0x0
  4497dc:	cset	w8, ge  // ge = tcont
  4497e0:	tbnz	w8, #0, 4497fc <handle_scsi_default+0x1b4>
  4497e4:	mov	x8, xzr
  4497e8:	ldur	x9, [x29, #-152]
  4497ec:	str	x8, [x9]
  4497f0:	mov	w10, #0x1                   	// #1
  4497f4:	stur	w10, [x29, #-96]
  4497f8:	b	449a74 <handle_scsi_default+0x42c>
  4497fc:	ldur	x0, [x29, #-64]
  449800:	mov	w1, #0x2f                  	// #47
  449804:	bl	40b660 <strrchr@plt>
  449808:	stur	x0, [x29, #-72]
  44980c:	ldur	x8, [x29, #-72]
  449810:	cbnz	x8, 44982c <handle_scsi_default+0x1e4>
  449814:	mov	x8, xzr
  449818:	ldur	x9, [x29, #-152]
  44981c:	str	x8, [x9]
  449820:	mov	w10, #0x1                   	// #1
  449824:	stur	w10, [x29, #-96]
  449828:	b	449a74 <handle_scsi_default+0x42c>
  44982c:	ldur	x8, [x29, #-64]
  449830:	stur	x8, [x29, #-104]
  449834:	ldur	x0, [x29, #-104]
  449838:	ldur	x8, [x29, #-72]
  44983c:	ldur	x9, [x29, #-64]
  449840:	subs	x1, x8, x9
  449844:	bl	40ad20 <strnlen@plt>
  449848:	stur	x0, [x29, #-112]
  44984c:	ldur	x8, [x29, #-112]
  449850:	mov	x9, #0x1                   	// #1
  449854:	add	x8, x8, #0x1
  449858:	mul	x8, x8, x9
  44985c:	add	x8, x8, #0xf
  449860:	and	x8, x8, #0xfffffffffffffff0
  449864:	mov	x9, sp
  449868:	subs	x8, x9, x8
  44986c:	mov	sp, x8
  449870:	stur	x8, [x29, #-120]
  449874:	ldur	x8, [x29, #-120]
  449878:	ldur	x9, [x29, #-112]
  44987c:	add	x8, x8, x9
  449880:	mov	w10, #0x0                   	// #0
  449884:	strb	w10, [x8]
  449888:	ldur	x8, [x29, #-120]
  44988c:	ldur	x1, [x29, #-104]
  449890:	ldur	x2, [x29, #-112]
  449894:	mov	x0, x8
  449898:	stur	x8, [x29, #-168]
  44989c:	bl	40a600 <memcpy@plt>
  4498a0:	ldur	x8, [x29, #-168]
  4498a4:	stur	x8, [x29, #-128]
  4498a8:	ldur	x9, [x29, #-128]
  4498ac:	stur	x9, [x29, #-64]
  4498b0:	ldur	x0, [x29, #-64]
  4498b4:	bl	40b1f0 <opendir@plt>
  4498b8:	stur	x0, [x29, #-80]
  4498bc:	ldur	x8, [x29, #-80]
  4498c0:	cbnz	x8, 4498dc <handle_scsi_default+0x294>
  4498c4:	mov	x8, xzr
  4498c8:	ldur	x9, [x29, #-152]
  4498cc:	str	x8, [x9]
  4498d0:	mov	w10, #0x1                   	// #1
  4498d4:	stur	w10, [x29, #-96]
  4498d8:	b	449a74 <handle_scsi_default+0x42c>
  4498dc:	bl	40a480 <__errno_location@plt>
  4498e0:	str	wzr, [x0]
  4498e4:	ldur	x0, [x29, #-80]
  4498e8:	bl	40b200 <readdir64@plt>
  4498ec:	stur	x0, [x29, #-88]
  4498f0:	ldur	x8, [x29, #-88]
  4498f4:	cbnz	x8, 449914 <handle_scsi_default+0x2cc>
  4498f8:	bl	40a480 <__errno_location@plt>
  4498fc:	ldr	w8, [x0]
  449900:	cmp	w8, #0x0
  449904:	cset	w8, le
  449908:	tbnz	w8, #0, 449910 <handle_scsi_default+0x2c8>
  44990c:	b	449a08 <handle_scsi_default+0x3c0>
  449910:	b	449a08 <handle_scsi_default+0x3c0>
  449914:	ldur	x8, [x29, #-88]
  449918:	ldrb	w9, [x8, #19]
  44991c:	cmp	w9, #0x2e
  449920:	b.ne	449928 <handle_scsi_default+0x2e0>  // b.any
  449924:	b	4499f0 <handle_scsi_default+0x3a8>
  449928:	mov	w8, #0x0                   	// #0
  44992c:	sturb	w8, [x29, #-141]
  449930:	ldur	x9, [x29, #-88]
  449934:	ldrb	w8, [x9, #18]
  449938:	cmp	w8, #0x4
  44993c:	stur	w8, [x29, #-172]
  449940:	b.eq	449960 <handle_scsi_default+0x318>  // b.none
  449944:	b	449948 <handle_scsi_default+0x300>
  449948:	ldur	w8, [x29, #-172]
  44994c:	cmp	w8, #0xa
  449950:	cset	w9, eq  // eq = none
  449954:	eor	w9, w9, #0x1
  449958:	tbnz	w9, #0, 44996c <handle_scsi_default+0x324>
  44995c:	b	449960 <handle_scsi_default+0x318>
  449960:	mov	w8, #0x1                   	// #1
  449964:	sturb	w8, [x29, #-141]
  449968:	b	44996c <handle_scsi_default+0x324>
  44996c:	ldurb	w8, [x29, #-141]
  449970:	and	w8, w8, #0x1
  449974:	sturb	w8, [x29, #-142]
  449978:	ldurb	w8, [x29, #-142]
  44997c:	tbnz	w8, #0, 449984 <handle_scsi_default+0x33c>
  449980:	b	4499f0 <handle_scsi_default+0x3a8>
  449984:	ldur	x8, [x29, #-88]
  449988:	add	x0, x8, #0x13
  44998c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449990:	add	x1, x1, #0x817
  449994:	bl	448620 <startswith>
  449998:	cbnz	x0, 4499a0 <handle_scsi_default+0x358>
  44999c:	b	4499f0 <handle_scsi_default+0x3a8>
  4499a0:	ldur	x8, [x29, #-88]
  4499a4:	add	x0, x8, #0x17
  4499a8:	sub	x1, x29, #0x88
  4499ac:	mov	w2, #0xa                   	// #10
  4499b0:	bl	40b670 <strtoul@plt>
  4499b4:	stur	w0, [x29, #-140]
  4499b8:	ldur	x8, [x29, #-136]
  4499bc:	ldrb	w9, [x8]
  4499c0:	cbz	w9, 4499c8 <handle_scsi_default+0x380>
  4499c4:	b	4499f0 <handle_scsi_default+0x3a8>
  4499c8:	ldur	w8, [x29, #-92]
  4499cc:	mov	w9, #0xffffffff            	// #-1
  4499d0:	cmp	w8, w9
  4499d4:	b.eq	4499e8 <handle_scsi_default+0x3a0>  // b.none
  4499d8:	ldur	w8, [x29, #-140]
  4499dc:	ldur	w9, [x29, #-92]
  4499e0:	cmp	w8, w9
  4499e4:	b.ge	4499f0 <handle_scsi_default+0x3a8>  // b.tcont
  4499e8:	ldur	w8, [x29, #-140]
  4499ec:	stur	w8, [x29, #-92]
  4499f0:	bl	40a480 <__errno_location@plt>
  4499f4:	str	wzr, [x0]
  4499f8:	ldur	x0, [x29, #-80]
  4499fc:	bl	40b200 <readdir64@plt>
  449a00:	stur	x0, [x29, #-88]
  449a04:	b	4498f0 <handle_scsi_default+0x2a8>
  449a08:	ldur	w8, [x29, #-92]
  449a0c:	mov	w9, #0xffffffff            	// #-1
  449a10:	cmp	w8, w9
  449a14:	b.ne	449a30 <handle_scsi_default+0x3e8>  // b.any
  449a18:	ldur	x8, [x29, #-32]
  449a1c:	ldur	x9, [x29, #-152]
  449a20:	str	x8, [x9]
  449a24:	mov	w10, #0x1                   	// #1
  449a28:	stur	w10, [x29, #-96]
  449a2c:	b	449a74 <handle_scsi_default+0x42c>
  449a30:	ldur	w8, [x29, #-92]
  449a34:	ldur	w9, [x29, #-36]
  449a38:	subs	w8, w9, w8
  449a3c:	stur	w8, [x29, #-36]
  449a40:	ldur	x0, [x29, #-24]
  449a44:	ldur	w2, [x29, #-36]
  449a48:	ldur	w3, [x29, #-40]
  449a4c:	ldur	w4, [x29, #-44]
  449a50:	ldur	w5, [x29, #-48]
  449a54:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449a58:	add	x1, x1, #0x81c
  449a5c:	bl	4481dc <path_prepend>
  449a60:	ldur	x10, [x29, #-32]
  449a64:	ldur	x11, [x29, #-152]
  449a68:	str	x10, [x11]
  449a6c:	mov	w8, #0x1                   	// #1
  449a70:	stur	w8, [x29, #-96]
  449a74:	sub	x0, x29, #0x50
  449a78:	bl	449e14 <closedirp>
  449a7c:	ldur	x8, [x29, #-152]
  449a80:	ldr	x0, [x8]
  449a84:	mov	sp, x29
  449a88:	ldp	x29, x30, [sp], #16
  449a8c:	ret

0000000000449a90 <sd_device_unrefp>:
  449a90:	sub	sp, sp, #0x20
  449a94:	stp	x29, x30, [sp, #16]
  449a98:	add	x29, sp, #0x10
  449a9c:	str	x0, [sp, #8]
  449aa0:	ldr	x8, [sp, #8]
  449aa4:	ldr	x8, [x8]
  449aa8:	cbz	x8, 449ab8 <sd_device_unrefp+0x28>
  449aac:	ldr	x8, [sp, #8]
  449ab0:	ldr	x0, [x8]
  449ab4:	bl	40a7c0 <sd_device_unref@plt>
  449ab8:	ldp	x29, x30, [sp, #16]
  449abc:	add	sp, sp, #0x20
  449ac0:	ret

0000000000449ac4 <format_lun_number>:
  449ac4:	sub	sp, sp, #0x40
  449ac8:	stp	x29, x30, [sp, #48]
  449acc:	add	x29, sp, #0x30
  449ad0:	add	x8, sp, #0x10
  449ad4:	stur	x0, [x29, #-16]
  449ad8:	str	x1, [sp, #24]
  449adc:	ldur	x0, [x29, #-16]
  449ae0:	mov	x1, x8
  449ae4:	bl	40ae50 <sd_device_get_sysnum@plt>
  449ae8:	str	w0, [sp, #4]
  449aec:	ldr	w9, [sp, #4]
  449af0:	cmp	w9, #0x0
  449af4:	cset	w9, ge  // ge = tcont
  449af8:	tbnz	w9, #0, 449b08 <format_lun_number+0x44>
  449afc:	ldr	w8, [sp, #4]
  449b00:	stur	w8, [x29, #-4]
  449b04:	b	449b80 <format_lun_number+0xbc>
  449b08:	ldr	x8, [sp, #16]
  449b0c:	cbnz	x8, 449b1c <format_lun_number+0x58>
  449b10:	mov	w8, #0xfffffffe            	// #-2
  449b14:	stur	w8, [x29, #-4]
  449b18:	b	449b80 <format_lun_number+0xbc>
  449b1c:	ldr	x0, [sp, #16]
  449b20:	mov	x8, xzr
  449b24:	mov	x1, x8
  449b28:	mov	w2, #0xa                   	// #10
  449b2c:	bl	40b670 <strtoul@plt>
  449b30:	str	x0, [sp, #8]
  449b34:	ldr	x8, [sp, #8]
  449b38:	cmp	x8, #0x100
  449b3c:	b.cs	449b58 <format_lun_number+0x94>  // b.hs, b.nlast
  449b40:	ldr	x0, [sp, #24]
  449b44:	ldr	x2, [sp, #8]
  449b48:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449b4c:	add	x1, x1, #0x57b
  449b50:	bl	4481dc <path_prepend>
  449b54:	b	449b7c <format_lun_number+0xb8>
  449b58:	ldr	x0, [sp, #24]
  449b5c:	ldr	x8, [sp, #8]
  449b60:	and	x2, x8, #0xffff
  449b64:	ldr	x8, [sp, #8]
  449b68:	lsr	x8, x8, #16
  449b6c:	and	x3, x8, #0xffff
  449b70:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449b74:	add	x1, x1, #0x583
  449b78:	bl	4481dc <path_prepend>
  449b7c:	stur	wzr, [x29, #-4]
  449b80:	ldur	w0, [x29, #-4]
  449b84:	ldp	x29, x30, [sp, #48]
  449b88:	add	sp, sp, #0x40
  449b8c:	ret

0000000000449b90 <handle_scsi_sas_wide_port>:
  449b90:	sub	sp, sp, #0x70
  449b94:	stp	x29, x30, [sp, #96]
  449b98:	add	x29, sp, #0x60
  449b9c:	mov	x8, xzr
  449ba0:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  449ba4:	add	x9, x9, #0x3ab
  449ba8:	add	x9, x9, #0x3
  449bac:	stur	x0, [x29, #-16]
  449bb0:	stur	x1, [x29, #-24]
  449bb4:	str	x8, [sp, #48]
  449bb8:	str	x8, [sp, #24]
  449bbc:	str	x9, [sp, #8]
  449bc0:	ldur	x8, [x29, #-16]
  449bc4:	cmp	x8, #0x0
  449bc8:	cset	w9, ne  // ne = any
  449bcc:	mov	w10, #0x1                   	// #1
  449bd0:	eor	w9, w9, #0x1
  449bd4:	eor	w9, w9, w10
  449bd8:	eor	w9, w9, w10
  449bdc:	and	w9, w9, #0x1
  449be0:	mov	w0, w9
  449be4:	sxtw	x8, w0
  449be8:	cbz	x8, 449c0c <handle_scsi_sas_wide_port+0x7c>
  449bec:	mov	w0, #0x1                   	// #1
  449bf0:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  449bf4:	add	x1, x1, #0x599
  449bf8:	ldr	x2, [sp, #8]
  449bfc:	mov	w3, #0x84                  	// #132
  449c00:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  449c04:	add	x4, x4, #0x625
  449c08:	bl	40a540 <log_assert_failed_realm@plt>
  449c0c:	ldur	x8, [x29, #-24]
  449c10:	cmp	x8, #0x0
  449c14:	cset	w9, ne  // ne = any
  449c18:	mov	w10, #0x1                   	// #1
  449c1c:	eor	w9, w9, #0x1
  449c20:	eor	w9, w9, w10
  449c24:	eor	w9, w9, w10
  449c28:	and	w9, w9, #0x1
  449c2c:	mov	w0, w9
  449c30:	sxtw	x8, w0
  449c34:	cbz	x8, 449c58 <handle_scsi_sas_wide_port+0xc8>
  449c38:	mov	w0, #0x1                   	// #1
  449c3c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449c40:	add	x1, x1, #0x54a
  449c44:	ldr	x2, [sp, #8]
  449c48:	mov	w3, #0x85                  	// #133
  449c4c:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  449c50:	add	x4, x4, #0x625
  449c54:	bl	40a540 <log_assert_failed_realm@plt>
  449c58:	ldur	x0, [x29, #-16]
  449c5c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449c60:	add	x1, x1, #0x40e
  449c64:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  449c68:	add	x2, x2, #0x54f
  449c6c:	sub	x3, x29, #0x20
  449c70:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  449c74:	cmp	w0, #0x0
  449c78:	cset	w8, ge  // ge = tcont
  449c7c:	tbnz	w8, #0, 449c94 <handle_scsi_sas_wide_port+0x104>
  449c80:	mov	x8, xzr
  449c84:	stur	x8, [x29, #-8]
  449c88:	mov	w9, #0x1                   	// #1
  449c8c:	str	w9, [sp, #20]
  449c90:	b	449d8c <handle_scsi_sas_wide_port+0x1fc>
  449c94:	ldur	x0, [x29, #-32]
  449c98:	sub	x1, x29, #0x28
  449c9c:	bl	40abc0 <sd_device_get_parent@plt>
  449ca0:	cmp	w0, #0x0
  449ca4:	cset	w8, ge  // ge = tcont
  449ca8:	tbnz	w8, #0, 449cc0 <handle_scsi_sas_wide_port+0x130>
  449cac:	mov	x8, xzr
  449cb0:	stur	x8, [x29, #-8]
  449cb4:	mov	w9, #0x1                   	// #1
  449cb8:	str	w9, [sp, #20]
  449cbc:	b	449d8c <handle_scsi_sas_wide_port+0x1fc>
  449cc0:	ldur	x0, [x29, #-40]
  449cc4:	add	x1, sp, #0x20
  449cc8:	bl	40a860 <sd_device_get_sysname@plt>
  449ccc:	cmp	w0, #0x0
  449cd0:	cset	w8, ge  // ge = tcont
  449cd4:	tbnz	w8, #0, 449cec <handle_scsi_sas_wide_port+0x15c>
  449cd8:	mov	x8, xzr
  449cdc:	stur	x8, [x29, #-8]
  449ce0:	mov	w9, #0x1                   	// #1
  449ce4:	str	w9, [sp, #20]
  449ce8:	b	449d8c <handle_scsi_sas_wide_port+0x1fc>
  449cec:	ldr	x2, [sp, #32]
  449cf0:	add	x0, sp, #0x30
  449cf4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449cf8:	add	x1, x1, #0x5cd
  449cfc:	bl	40b700 <sd_device_new_from_subsystem_sysname@plt>
  449d00:	cmp	w0, #0x0
  449d04:	cset	w8, ge  // ge = tcont
  449d08:	tbnz	w8, #0, 449d20 <handle_scsi_sas_wide_port+0x190>
  449d0c:	mov	x8, xzr
  449d10:	stur	x8, [x29, #-8]
  449d14:	mov	w9, #0x1                   	// #1
  449d18:	str	w9, [sp, #20]
  449d1c:	b	449d8c <handle_scsi_sas_wide_port+0x1fc>
  449d20:	ldr	x0, [sp, #48]
  449d24:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449d28:	add	x1, x1, #0x5f9
  449d2c:	add	x2, sp, #0x28
  449d30:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  449d34:	cmp	w0, #0x0
  449d38:	cset	w8, ge  // ge = tcont
  449d3c:	tbnz	w8, #0, 449d54 <handle_scsi_sas_wide_port+0x1c4>
  449d40:	mov	x8, xzr
  449d44:	stur	x8, [x29, #-8]
  449d48:	mov	w9, #0x1                   	// #1
  449d4c:	str	w9, [sp, #20]
  449d50:	b	449d8c <handle_scsi_sas_wide_port+0x1fc>
  449d54:	ldur	x0, [x29, #-16]
  449d58:	add	x1, sp, #0x18
  449d5c:	bl	449ac4 <format_lun_number>
  449d60:	ldur	x8, [x29, #-24]
  449d64:	ldr	x2, [sp, #40]
  449d68:	ldr	x3, [sp, #24]
  449d6c:	mov	x0, x8
  449d70:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  449d74:	add	x1, x1, #0x660
  449d78:	bl	4481dc <path_prepend>
  449d7c:	ldur	x8, [x29, #-16]
  449d80:	stur	x8, [x29, #-8]
  449d84:	mov	w9, #0x1                   	// #1
  449d88:	str	w9, [sp, #20]
  449d8c:	add	x0, sp, #0x18
  449d90:	bl	447ca4 <freep>
  449d94:	add	x0, sp, #0x30
  449d98:	bl	449a90 <sd_device_unrefp>
  449d9c:	ldur	x0, [x29, #-8]
  449da0:	ldp	x29, x30, [sp, #96]
  449da4:	add	sp, sp, #0x70
  449da8:	ret

0000000000449dac <size_multiply_overflow>:
  449dac:	sub	sp, sp, #0x20
  449db0:	str	x0, [sp, #24]
  449db4:	str	x1, [sp, #16]
  449db8:	ldr	x8, [sp, #16]
  449dbc:	mov	w9, #0x0                   	// #0
  449dc0:	str	w9, [sp, #12]
  449dc4:	cbz	x8, 449de4 <size_multiply_overflow+0x38>
  449dc8:	ldr	x8, [sp, #24]
  449dcc:	ldr	x9, [sp, #16]
  449dd0:	mov	x10, #0xffffffffffffffff    	// #-1
  449dd4:	udiv	x9, x10, x9
  449dd8:	cmp	x8, x9
  449ddc:	cset	w11, hi  // hi = pmore
  449de0:	str	w11, [sp, #12]
  449de4:	ldr	w8, [sp, #12]
  449de8:	mov	w9, #0x1                   	// #1
  449dec:	eor	w8, w8, #0x1
  449df0:	eor	w8, w8, w9
  449df4:	and	w8, w8, #0x1
  449df8:	mov	w0, w8
  449dfc:	sxtw	x10, w0
  449e00:	cmp	x10, #0x0
  449e04:	cset	w8, ne  // ne = any
  449e08:	and	w0, w8, #0x1
  449e0c:	add	sp, sp, #0x20
  449e10:	ret

0000000000449e14 <closedirp>:
  449e14:	sub	sp, sp, #0x20
  449e18:	stp	x29, x30, [sp, #16]
  449e1c:	add	x29, sp, #0x10
  449e20:	str	x0, [sp, #8]
  449e24:	ldr	x8, [sp, #8]
  449e28:	ldr	x8, [x8]
  449e2c:	cbz	x8, 449e3c <closedirp+0x28>
  449e30:	ldr	x8, [sp, #8]
  449e34:	ldr	x0, [x8]
  449e38:	bl	40b230 <closedir@plt>
  449e3c:	ldp	x29, x30, [sp, #16]
  449e40:	add	sp, sp, #0x20
  449e44:	ret

0000000000449e48 <builtin_usb_id>:
  449e48:	stp	x29, x30, [sp, #-32]!
  449e4c:	stp	x28, x19, [sp, #16]
  449e50:	mov	x29, sp
  449e54:	sub	sp, sp, #0xbc0
  449e58:	mov	x8, #0x40                  	// #64
  449e5c:	mov	x9, #0x200                 	// #512
  449e60:	mov	x10, xzr
  449e64:	mov	w11, wzr
  449e68:	adrp	x12, 469000 <on_inotify.__assert_in_set+0x5540>
  449e6c:	add	x12, x12, #0x6f8
  449e70:	mov	w13, #0x1                   	// #1
  449e74:	adrp	x14, 464000 <on_inotify.__assert_in_set+0x540>
  449e78:	add	x14, x14, #0xa46
  449e7c:	adrp	x15, 46d000 <on_inotify.__assert_in_set+0x9540>
  449e80:	add	x15, x15, #0x904
  449e84:	add	x15, x15, #0x3
  449e88:	adrp	x16, 46d000 <on_inotify.__assert_in_set+0x9540>
  449e8c:	add	x16, x16, #0x95b
  449e90:	sub	x17, x29, #0x61
  449e94:	add	x18, sp, #0xa10
  449e98:	add	x4, sp, #0x708
  449e9c:	add	x5, sp, #0x508
  449ea0:	add	x6, sp, #0x4c8
  449ea4:	add	x7, sp, #0x488
  449ea8:	add	x19, sp, #0x448
  449eac:	stur	x0, [x29, #-16]
  449eb0:	stur	w1, [x29, #-20]
  449eb4:	stur	x2, [x29, #-32]
  449eb8:	and	w13, w3, w13
  449ebc:	sturb	w13, [x29, #-33]
  449ec0:	mov	x0, x17
  449ec4:	mov	w1, w11
  449ec8:	mov	x2, x8
  449ecc:	str	x8, [sp, #200]
  449ed0:	str	x9, [sp, #192]
  449ed4:	str	x10, [sp, #184]
  449ed8:	str	w11, [sp, #180]
  449edc:	str	x12, [sp, #168]
  449ee0:	str	x14, [sp, #160]
  449ee4:	str	x15, [sp, #152]
  449ee8:	str	x16, [sp, #144]
  449eec:	str	x18, [sp, #136]
  449ef0:	str	x4, [sp, #128]
  449ef4:	str	x5, [sp, #120]
  449ef8:	str	x6, [sp, #112]
  449efc:	str	x7, [sp, #104]
  449f00:	str	x19, [sp, #96]
  449f04:	bl	40a5f0 <memset@plt>
  449f08:	ldr	x0, [sp, #136]
  449f0c:	ldr	w11, [sp, #180]
  449f10:	mov	w1, w11
  449f14:	ldr	x2, [sp, #200]
  449f18:	bl	40a5f0 <memset@plt>
  449f1c:	ldr	x0, [sp, #128]
  449f20:	ldr	w11, [sp, #180]
  449f24:	mov	w1, w11
  449f28:	ldr	x2, [sp, #192]
  449f2c:	bl	40a5f0 <memset@plt>
  449f30:	ldr	x0, [sp, #120]
  449f34:	ldr	w11, [sp, #180]
  449f38:	mov	w1, w11
  449f3c:	ldr	x2, [sp, #192]
  449f40:	bl	40a5f0 <memset@plt>
  449f44:	ldr	x0, [sp, #112]
  449f48:	ldr	w11, [sp, #180]
  449f4c:	mov	w1, w11
  449f50:	ldr	x2, [sp, #200]
  449f54:	bl	40a5f0 <memset@plt>
  449f58:	ldr	x0, [sp, #104]
  449f5c:	ldr	w11, [sp, #180]
  449f60:	mov	w1, w11
  449f64:	ldr	x2, [sp, #200]
  449f68:	bl	40a5f0 <memset@plt>
  449f6c:	ldr	x0, [sp, #96]
  449f70:	ldr	w11, [sp, #180]
  449f74:	mov	w1, w11
  449f78:	ldr	x2, [sp, #200]
  449f7c:	bl	40a5f0 <memset@plt>
  449f80:	ldr	x8, [sp, #184]
  449f84:	str	x8, [sp, #1088]
  449f88:	str	x8, [sp, #1080]
  449f8c:	str	wzr, [sp, #784]
  449f90:	ldur	x8, [x29, #-16]
  449f94:	cmp	x8, #0x0
  449f98:	cset	w9, ne  // ne = any
  449f9c:	mov	w10, #0x1                   	// #1
  449fa0:	eor	w9, w9, #0x1
  449fa4:	eor	w9, w9, w10
  449fa8:	eor	w9, w9, w10
  449fac:	and	w9, w9, #0x1
  449fb0:	mov	w0, w9
  449fb4:	sxtw	x8, w0
  449fb8:	cbz	x8, 449fdc <builtin_usb_id+0x194>
  449fbc:	mov	w0, #0x1                   	// #1
  449fc0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  449fc4:	add	x1, x1, #0xee1
  449fc8:	ldr	x2, [sp, #152]
  449fcc:	mov	w3, #0x100                 	// #256
  449fd0:	adrp	x4, 46d000 <on_inotify.__assert_in_set+0x9540>
  449fd4:	add	x4, x4, #0x926
  449fd8:	bl	40a540 <log_assert_failed_realm@plt>
  449fdc:	ldur	x0, [x29, #-16]
  449fe0:	add	x1, sp, #0x2f8
  449fe4:	bl	40abf0 <sd_device_get_syspath@plt>
  449fe8:	str	w0, [sp, #732]
  449fec:	ldr	w8, [sp, #732]
  449ff0:	cmp	w8, #0x0
  449ff4:	cset	w8, ge  // ge = tcont
  449ff8:	tbnz	w8, #0, 44a008 <builtin_usb_id+0x1c0>
  449ffc:	ldr	w8, [sp, #732]
  44a000:	stur	w8, [x29, #-4]
  44a004:	b	44b280 <builtin_usb_id+0x1438>
  44a008:	ldur	x0, [x29, #-16]
  44a00c:	add	x1, sp, #0x2f0
  44a010:	bl	40a860 <sd_device_get_sysname@plt>
  44a014:	str	w0, [sp, #732]
  44a018:	ldr	w8, [sp, #732]
  44a01c:	cmp	w8, #0x0
  44a020:	cset	w8, ge  // ge = tcont
  44a024:	tbnz	w8, #0, 44a034 <builtin_usb_id+0x1ec>
  44a028:	ldr	w8, [sp, #732]
  44a02c:	stur	w8, [x29, #-4]
  44a030:	b	44b280 <builtin_usb_id+0x1438>
  44a034:	ldur	x0, [x29, #-16]
  44a038:	add	x1, sp, #0x2e8
  44a03c:	bl	40abb0 <sd_device_get_devtype@plt>
  44a040:	cmp	w0, #0x0
  44a044:	cset	w8, lt  // lt = tstop
  44a048:	tbnz	w8, #0, 44a07c <builtin_usb_id+0x234>
  44a04c:	ldr	x0, [sp, #744]
  44a050:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44a054:	add	x1, x1, #0x6fc
  44a058:	bl	40aa20 <strcmp@plt>
  44a05c:	cbnz	w0, 44a07c <builtin_usb_id+0x234>
  44a060:	ldur	x0, [x29, #-16]
  44a064:	add	x1, sp, #0x508
  44a068:	mov	x2, #0x200                 	// #512
  44a06c:	bl	44b294 <dev_if_packed_info>
  44a070:	ldur	x8, [x29, #-16]
  44a074:	str	x8, [sp, #808]
  44a078:	b	44ac28 <builtin_usb_id+0xde0>
  44a07c:	ldur	x0, [x29, #-16]
  44a080:	ldr	x1, [sp, #168]
  44a084:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a088:	add	x2, x2, #0x114
  44a08c:	add	x3, sp, #0x330
  44a090:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  44a094:	str	w0, [sp, #732]
  44a098:	ldr	w8, [sp, #732]
  44a09c:	cmp	w8, #0x0
  44a0a0:	cset	w8, ge  // ge = tcont
  44a0a4:	tbnz	w8, #0, 44a168 <builtin_usb_id+0x320>
  44a0a8:	mov	x8, xzr
  44a0ac:	str	x8, [sp, #720]
  44a0b0:	ldur	x8, [x29, #-16]
  44a0b4:	str	x8, [sp, #712]
  44a0b8:	mov	w9, #0x7                   	// #7
  44a0bc:	str	w9, [sp, #708]
  44a0c0:	ldr	w9, [sp, #732]
  44a0c4:	str	w9, [sp, #704]
  44a0c8:	ldr	x8, [sp, #712]
  44a0cc:	cbz	x8, 44a10c <builtin_usb_id+0x2c4>
  44a0d0:	mov	w0, #0x1                   	// #1
  44a0d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a0d8:	ldr	w8, [sp, #708]
  44a0dc:	cmp	w0, w8
  44a0e0:	cset	w8, ge  // ge = tcont
  44a0e4:	mov	w9, #0x1                   	// #1
  44a0e8:	eor	w8, w8, #0x1
  44a0ec:	eor	w8, w8, w9
  44a0f0:	and	w8, w8, #0x1
  44a0f4:	mov	w1, w8
  44a0f8:	sxtw	x10, w1
  44a0fc:	cbz	x10, 44a10c <builtin_usb_id+0x2c4>
  44a100:	ldr	x0, [sp, #712]
  44a104:	add	x1, sp, #0x2d0
  44a108:	bl	40a860 <sd_device_get_sysname@plt>
  44a10c:	ldr	w0, [sp, #708]
  44a110:	ldr	w1, [sp, #704]
  44a114:	ldr	x8, [sp, #720]
  44a118:	mov	x9, xzr
  44a11c:	cmp	x8, #0x0
  44a120:	ldr	x8, [sp, #160]
  44a124:	csel	x5, x8, x9, ne  // ne = any
  44a128:	ldr	x6, [sp, #720]
  44a12c:	ldr	x2, [sp, #152]
  44a130:	mov	w3, #0x114                 	// #276
  44a134:	ldr	x4, [sp, #144]
  44a138:	mov	x7, x9
  44a13c:	mov	x10, sp
  44a140:	str	x9, [x10]
  44a144:	mov	x9, sp
  44a148:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a14c:	add	x10, x10, #0x96a
  44a150:	str	x10, [x9, #8]
  44a154:	bl	40a870 <log_object_internal@plt>
  44a158:	str	w0, [sp, #700]
  44a15c:	ldr	w11, [sp, #700]
  44a160:	stur	w11, [x29, #-4]
  44a164:	b	44b280 <builtin_usb_id+0x1438>
  44a168:	ldr	x0, [sp, #816]
  44a16c:	add	x1, sp, #0x2e0
  44a170:	bl	40abf0 <sd_device_get_syspath@plt>
  44a174:	str	w0, [sp, #732]
  44a178:	ldr	w8, [sp, #732]
  44a17c:	cmp	w8, #0x0
  44a180:	cset	w8, ge  // ge = tcont
  44a184:	tbnz	w8, #0, 44a248 <builtin_usb_id+0x400>
  44a188:	mov	x8, xzr
  44a18c:	str	x8, [sp, #688]
  44a190:	ldr	x8, [sp, #816]
  44a194:	str	x8, [sp, #680]
  44a198:	mov	w9, #0x7                   	// #7
  44a19c:	str	w9, [sp, #676]
  44a1a0:	ldr	w9, [sp, #732]
  44a1a4:	str	w9, [sp, #672]
  44a1a8:	ldr	x8, [sp, #680]
  44a1ac:	cbz	x8, 44a1ec <builtin_usb_id+0x3a4>
  44a1b0:	mov	w0, #0x1                   	// #1
  44a1b4:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a1b8:	ldr	w8, [sp, #676]
  44a1bc:	cmp	w0, w8
  44a1c0:	cset	w8, ge  // ge = tcont
  44a1c4:	mov	w9, #0x1                   	// #1
  44a1c8:	eor	w8, w8, #0x1
  44a1cc:	eor	w8, w8, w9
  44a1d0:	and	w8, w8, #0x1
  44a1d4:	mov	w1, w8
  44a1d8:	sxtw	x10, w1
  44a1dc:	cbz	x10, 44a1ec <builtin_usb_id+0x3a4>
  44a1e0:	ldr	x0, [sp, #680]
  44a1e4:	add	x1, sp, #0x2b0
  44a1e8:	bl	40a860 <sd_device_get_sysname@plt>
  44a1ec:	ldr	w0, [sp, #676]
  44a1f0:	ldr	w1, [sp, #672]
  44a1f4:	ldr	x8, [sp, #688]
  44a1f8:	mov	x9, xzr
  44a1fc:	cmp	x8, #0x0
  44a200:	ldr	x8, [sp, #160]
  44a204:	csel	x5, x8, x9, ne  // ne = any
  44a208:	ldr	x6, [sp, #688]
  44a20c:	ldr	x2, [sp, #152]
  44a210:	mov	w3, #0x118                 	// #280
  44a214:	ldr	x4, [sp, #144]
  44a218:	mov	x7, x9
  44a21c:	mov	x10, sp
  44a220:	str	x9, [x10]
  44a224:	mov	x9, sp
  44a228:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a22c:	add	x10, x10, #0x98d
  44a230:	str	x10, [x9, #8]
  44a234:	bl	40a870 <log_object_internal@plt>
  44a238:	str	w0, [sp, #668]
  44a23c:	ldr	w11, [sp, #668]
  44a240:	stur	w11, [x29, #-4]
  44a244:	b	44b280 <builtin_usb_id+0x1438>
  44a248:	ldr	x0, [sp, #816]
  44a24c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a250:	add	x1, x1, #0x9a7
  44a254:	add	x2, sp, #0x440
  44a258:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a25c:	ldr	x8, [sp, #816]
  44a260:	mov	x0, x8
  44a264:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  44a268:	add	x1, x1, #0x574
  44a26c:	add	x2, sp, #0x438
  44a270:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a274:	ldr	x8, [sp, #816]
  44a278:	mov	x0, x8
  44a27c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a280:	add	x1, x1, #0x9b8
  44a284:	add	x2, sp, #0x320
  44a288:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a28c:	str	w0, [sp, #732]
  44a290:	ldr	w9, [sp, #732]
  44a294:	cmp	w9, #0x0
  44a298:	cset	w9, ge  // ge = tcont
  44a29c:	tbnz	w9, #0, 44a360 <builtin_usb_id+0x518>
  44a2a0:	mov	x8, xzr
  44a2a4:	str	x8, [sp, #656]
  44a2a8:	ldr	x8, [sp, #816]
  44a2ac:	str	x8, [sp, #648]
  44a2b0:	mov	w9, #0x7                   	// #7
  44a2b4:	str	w9, [sp, #644]
  44a2b8:	ldr	w9, [sp, #732]
  44a2bc:	str	w9, [sp, #640]
  44a2c0:	ldr	x8, [sp, #648]
  44a2c4:	cbz	x8, 44a304 <builtin_usb_id+0x4bc>
  44a2c8:	mov	w0, #0x1                   	// #1
  44a2cc:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a2d0:	ldr	w8, [sp, #644]
  44a2d4:	cmp	w0, w8
  44a2d8:	cset	w8, ge  // ge = tcont
  44a2dc:	mov	w9, #0x1                   	// #1
  44a2e0:	eor	w8, w8, #0x1
  44a2e4:	eor	w8, w8, w9
  44a2e8:	and	w8, w8, #0x1
  44a2ec:	mov	w1, w8
  44a2f0:	sxtw	x10, w1
  44a2f4:	cbz	x10, 44a304 <builtin_usb_id+0x4bc>
  44a2f8:	ldr	x0, [sp, #648]
  44a2fc:	add	x1, sp, #0x290
  44a300:	bl	40a860 <sd_device_get_sysname@plt>
  44a304:	ldr	w0, [sp, #644]
  44a308:	ldr	w1, [sp, #640]
  44a30c:	ldr	x8, [sp, #656]
  44a310:	mov	x9, xzr
  44a314:	cmp	x8, #0x0
  44a318:	ldr	x8, [sp, #160]
  44a31c:	csel	x5, x8, x9, ne  // ne = any
  44a320:	ldr	x6, [sp, #656]
  44a324:	ldr	x2, [sp, #152]
  44a328:	mov	w3, #0x11e                 	// #286
  44a32c:	ldr	x4, [sp, #144]
  44a330:	mov	x7, x9
  44a334:	mov	x10, sp
  44a338:	str	x9, [x10]
  44a33c:	mov	x9, sp
  44a340:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a344:	add	x10, x10, #0x9c8
  44a348:	str	x10, [x9, #8]
  44a34c:	bl	40a870 <log_object_internal@plt>
  44a350:	str	w0, [sp, #636]
  44a354:	ldr	w11, [sp, #636]
  44a358:	stur	w11, [x29, #-4]
  44a35c:	b	44b280 <builtin_usb_id+0x1438>
  44a360:	ldr	x0, [sp, #800]
  44a364:	mov	x8, xzr
  44a368:	mov	x1, x8
  44a36c:	mov	w2, #0x10                  	// #16
  44a370:	bl	40b670 <strtoul@plt>
  44a374:	str	w0, [sp, #788]
  44a378:	ldr	w9, [sp, #788]
  44a37c:	cmp	w9, #0x8
  44a380:	b.ne	44a3bc <builtin_usb_id+0x574>  // b.any
  44a384:	ldr	x0, [sp, #816]
  44a388:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a38c:	add	x1, x1, #0x9f4
  44a390:	add	x2, sp, #0x318
  44a394:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a398:	cmp	w0, #0x0
  44a39c:	cset	w8, lt  // lt = tstop
  44a3a0:	tbnz	w8, #0, 44a3b8 <builtin_usb_id+0x570>
  44a3a4:	ldr	x1, [sp, #792]
  44a3a8:	add	x0, sp, #0x488
  44a3ac:	mov	x2, #0x3f                  	// #63
  44a3b0:	bl	44badc <set_usb_mass_storage_ifsubtype>
  44a3b4:	str	w0, [sp, #784]
  44a3b8:	b	44a3cc <builtin_usb_id+0x584>
  44a3bc:	ldr	w1, [sp, #788]
  44a3c0:	add	x0, sp, #0x488
  44a3c4:	mov	x2, #0x3f                  	// #63
  44a3c8:	bl	44bbd8 <set_usb_iftype>
  44a3cc:	mov	x8, xzr
  44a3d0:	str	x8, [sp, #624]
  44a3d4:	ldr	x8, [sp, #816]
  44a3d8:	str	x8, [sp, #616]
  44a3dc:	mov	w9, #0x7                   	// #7
  44a3e0:	str	w9, [sp, #612]
  44a3e4:	str	wzr, [sp, #608]
  44a3e8:	ldr	x8, [sp, #616]
  44a3ec:	cbz	x8, 44a42c <builtin_usb_id+0x5e4>
  44a3f0:	mov	w0, #0x1                   	// #1
  44a3f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a3f8:	ldr	w8, [sp, #612]
  44a3fc:	cmp	w0, w8
  44a400:	cset	w8, ge  // ge = tcont
  44a404:	mov	w9, #0x1                   	// #1
  44a408:	eor	w8, w8, #0x1
  44a40c:	eor	w8, w8, w9
  44a410:	and	w8, w8, #0x1
  44a414:	mov	w1, w8
  44a418:	sxtw	x10, w1
  44a41c:	cbz	x10, 44a42c <builtin_usb_id+0x5e4>
  44a420:	ldr	x0, [sp, #616]
  44a424:	add	x1, sp, #0x270
  44a428:	bl	40a860 <sd_device_get_sysname@plt>
  44a42c:	ldr	w0, [sp, #612]
  44a430:	ldr	w1, [sp, #608]
  44a434:	ldr	x8, [sp, #624]
  44a438:	mov	x9, xzr
  44a43c:	cmp	x8, #0x0
  44a440:	ldr	x8, [sp, #160]
  44a444:	csel	x5, x8, x9, ne  // ne = any
  44a448:	ldr	x6, [sp, #624]
  44a44c:	ldr	w10, [sp, #788]
  44a450:	ldr	w11, [sp, #784]
  44a454:	ldr	x2, [sp, #152]
  44a458:	mov	w3, #0x128                 	// #296
  44a45c:	ldr	x4, [sp, #144]
  44a460:	mov	x7, x9
  44a464:	mov	x12, sp
  44a468:	str	x9, [x12]
  44a46c:	mov	x9, sp
  44a470:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a474:	add	x12, x12, #0xa07
  44a478:	str	x12, [x9, #8]
  44a47c:	mov	x9, sp
  44a480:	str	w10, [x9, #16]
  44a484:	mov	x9, sp
  44a488:	str	w11, [x9, #24]
  44a48c:	bl	40a870 <log_object_internal@plt>
  44a490:	str	w0, [sp, #604]
  44a494:	ldr	x0, [sp, #816]
  44a498:	ldr	x1, [sp, #168]
  44a49c:	adrp	x2, 469000 <on_inotify.__assert_in_set+0x5540>
  44a4a0:	add	x2, x2, #0x6fc
  44a4a4:	add	x3, sp, #0x328
  44a4a8:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  44a4ac:	str	w0, [sp, #732]
  44a4b0:	ldr	w10, [sp, #732]
  44a4b4:	cmp	w10, #0x0
  44a4b8:	cset	w10, ge  // ge = tcont
  44a4bc:	tbnz	w10, #0, 44a580 <builtin_usb_id+0x738>
  44a4c0:	mov	x8, xzr
  44a4c4:	str	x8, [sp, #592]
  44a4c8:	ldr	x8, [sp, #816]
  44a4cc:	str	x8, [sp, #584]
  44a4d0:	mov	w9, #0x7                   	// #7
  44a4d4:	str	w9, [sp, #580]
  44a4d8:	ldr	w9, [sp, #732]
  44a4dc:	str	w9, [sp, #576]
  44a4e0:	ldr	x8, [sp, #584]
  44a4e4:	cbz	x8, 44a524 <builtin_usb_id+0x6dc>
  44a4e8:	mov	w0, #0x1                   	// #1
  44a4ec:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a4f0:	ldr	w8, [sp, #580]
  44a4f4:	cmp	w0, w8
  44a4f8:	cset	w8, ge  // ge = tcont
  44a4fc:	mov	w9, #0x1                   	// #1
  44a500:	eor	w8, w8, #0x1
  44a504:	eor	w8, w8, w9
  44a508:	and	w8, w8, #0x1
  44a50c:	mov	w1, w8
  44a510:	sxtw	x10, w1
  44a514:	cbz	x10, 44a524 <builtin_usb_id+0x6dc>
  44a518:	ldr	x0, [sp, #584]
  44a51c:	add	x1, sp, #0x250
  44a520:	bl	40a860 <sd_device_get_sysname@plt>
  44a524:	ldr	w0, [sp, #580]
  44a528:	ldr	w1, [sp, #576]
  44a52c:	ldr	x8, [sp, #592]
  44a530:	mov	x9, xzr
  44a534:	cmp	x8, #0x0
  44a538:	ldr	x8, [sp, #160]
  44a53c:	csel	x5, x8, x9, ne  // ne = any
  44a540:	ldr	x6, [sp, #592]
  44a544:	ldr	x2, [sp, #152]
  44a548:	mov	w3, #0x12d                 	// #301
  44a54c:	ldr	x4, [sp, #144]
  44a550:	mov	x7, x9
  44a554:	mov	x10, sp
  44a558:	str	x9, [x10]
  44a55c:	mov	x9, sp
  44a560:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a564:	add	x10, x10, #0xa1f
  44a568:	str	x10, [x9, #8]
  44a56c:	bl	40a870 <log_object_internal@plt>
  44a570:	str	w0, [sp, #572]
  44a574:	ldr	w11, [sp, #572]
  44a578:	stur	w11, [x29, #-4]
  44a57c:	b	44b280 <builtin_usb_id+0x1438>
  44a580:	ldr	x0, [sp, #808]
  44a584:	add	x1, sp, #0x508
  44a588:	mov	x2, #0x200                 	// #512
  44a58c:	bl	44b294 <dev_if_packed_info>
  44a590:	mov	w8, #0x0                   	// #0
  44a594:	strb	w8, [sp, #571]
  44a598:	ldr	w8, [sp, #784]
  44a59c:	cmp	w8, #0x2
  44a5a0:	str	w8, [sp, #92]
  44a5a4:	b.eq	44a5c4 <builtin_usb_id+0x77c>  // b.none
  44a5a8:	b	44a5ac <builtin_usb_id+0x764>
  44a5ac:	ldr	w8, [sp, #92]
  44a5b0:	cmp	w8, #0x6
  44a5b4:	cset	w9, eq  // eq = none
  44a5b8:	eor	w9, w9, #0x1
  44a5bc:	tbnz	w9, #0, 44a5d0 <builtin_usb_id+0x788>
  44a5c0:	b	44a5c4 <builtin_usb_id+0x77c>
  44a5c4:	mov	w8, #0x1                   	// #1
  44a5c8:	strb	w8, [sp, #571]
  44a5cc:	b	44a5d0 <builtin_usb_id+0x788>
  44a5d0:	ldrb	w8, [sp, #571]
  44a5d4:	and	w8, w8, #0x1
  44a5d8:	strb	w8, [sp, #570]
  44a5dc:	ldrb	w8, [sp, #570]
  44a5e0:	tbnz	w8, #0, 44a5e8 <builtin_usb_id+0x7a0>
  44a5e4:	b	44ac28 <builtin_usb_id+0xde0>
  44a5e8:	ldur	x0, [x29, #-16]
  44a5ec:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a5f0:	add	x1, x1, #0x40e
  44a5f4:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a5f8:	add	x2, x2, #0x4b7
  44a5fc:	add	x3, sp, #0x230
  44a600:	bl	40b650 <sd_device_get_parent_with_subsystem_devtype@plt>
  44a604:	str	w0, [sp, #732]
  44a608:	ldr	w8, [sp, #732]
  44a60c:	cmp	w8, #0x0
  44a610:	cset	w8, ge  // ge = tcont
  44a614:	tbnz	w8, #0, 44a6d0 <builtin_usb_id+0x888>
  44a618:	mov	x8, xzr
  44a61c:	str	x8, [sp, #496]
  44a620:	ldur	x8, [x29, #-16]
  44a624:	str	x8, [sp, #488]
  44a628:	mov	w9, #0x7                   	// #7
  44a62c:	str	w9, [sp, #484]
  44a630:	ldr	w9, [sp, #732]
  44a634:	str	w9, [sp, #480]
  44a638:	ldr	x8, [sp, #488]
  44a63c:	cbz	x8, 44a67c <builtin_usb_id+0x834>
  44a640:	mov	w0, #0x1                   	// #1
  44a644:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a648:	ldr	w8, [sp, #484]
  44a64c:	cmp	w0, w8
  44a650:	cset	w8, ge  // ge = tcont
  44a654:	mov	w9, #0x1                   	// #1
  44a658:	eor	w8, w8, #0x1
  44a65c:	eor	w8, w8, w9
  44a660:	and	w8, w8, #0x1
  44a664:	mov	w1, w8
  44a668:	sxtw	x10, w1
  44a66c:	cbz	x10, 44a67c <builtin_usb_id+0x834>
  44a670:	ldr	x0, [sp, #488]
  44a674:	add	x1, sp, #0x1f0
  44a678:	bl	40a860 <sd_device_get_sysname@plt>
  44a67c:	ldr	w0, [sp, #484]
  44a680:	ldr	w1, [sp, #480]
  44a684:	ldr	x8, [sp, #496]
  44a688:	mov	x9, xzr
  44a68c:	cmp	x8, #0x0
  44a690:	ldr	x8, [sp, #160]
  44a694:	csel	x5, x8, x9, ne  // ne = any
  44a698:	ldr	x6, [sp, #496]
  44a69c:	ldr	x2, [sp, #152]
  44a6a0:	mov	w3, #0x13b                 	// #315
  44a6a4:	ldr	x4, [sp, #144]
  44a6a8:	mov	x7, x9
  44a6ac:	mov	x10, sp
  44a6b0:	str	x9, [x10]
  44a6b4:	mov	x9, sp
  44a6b8:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a6bc:	add	x10, x10, #0xa42
  44a6c0:	str	x10, [x9, #8]
  44a6c4:	bl	40a870 <log_object_internal@plt>
  44a6c8:	str	w0, [sp, #476]
  44a6cc:	b	44ac28 <builtin_usb_id+0xde0>
  44a6d0:	ldr	x0, [sp, #560]
  44a6d4:	add	x1, sp, #0x228
  44a6d8:	bl	40a860 <sd_device_get_sysname@plt>
  44a6dc:	cmp	w0, #0x0
  44a6e0:	cset	w8, ge  // ge = tcont
  44a6e4:	tbnz	w8, #0, 44a6ec <builtin_usb_id+0x8a4>
  44a6e8:	b	44ac28 <builtin_usb_id+0xde0>
  44a6ec:	ldr	x0, [sp, #552]
  44a6f0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a6f4:	add	x1, x1, #0x80b
  44a6f8:	add	x2, sp, #0x204
  44a6fc:	add	x3, sp, #0x200
  44a700:	add	x4, sp, #0x1fc
  44a704:	add	x5, sp, #0x1f8
  44a708:	bl	40b6a0 <__isoc99_sscanf@plt>
  44a70c:	cmp	w0, #0x4
  44a710:	b.eq	44a7c8 <builtin_usb_id+0x980>  // b.none
  44a714:	mov	x8, xzr
  44a718:	str	x8, [sp, #464]
  44a71c:	ldr	x8, [sp, #560]
  44a720:	str	x8, [sp, #456]
  44a724:	mov	w9, #0x7                   	// #7
  44a728:	str	w9, [sp, #452]
  44a72c:	str	wzr, [sp, #448]
  44a730:	ldr	x8, [sp, #456]
  44a734:	cbz	x8, 44a774 <builtin_usb_id+0x92c>
  44a738:	mov	w0, #0x1                   	// #1
  44a73c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a740:	ldr	w8, [sp, #452]
  44a744:	cmp	w0, w8
  44a748:	cset	w8, ge  // ge = tcont
  44a74c:	mov	w9, #0x1                   	// #1
  44a750:	eor	w8, w8, #0x1
  44a754:	eor	w8, w8, w9
  44a758:	and	w8, w8, #0x1
  44a75c:	mov	w1, w8
  44a760:	sxtw	x10, w1
  44a764:	cbz	x10, 44a774 <builtin_usb_id+0x92c>
  44a768:	ldr	x0, [sp, #456]
  44a76c:	add	x1, sp, #0x1d0
  44a770:	bl	40a860 <sd_device_get_sysname@plt>
  44a774:	ldr	w0, [sp, #452]
  44a778:	ldr	w1, [sp, #448]
  44a77c:	ldr	x8, [sp, #464]
  44a780:	mov	x9, xzr
  44a784:	cmp	x8, #0x0
  44a788:	ldr	x8, [sp, #160]
  44a78c:	csel	x5, x8, x9, ne  // ne = any
  44a790:	ldr	x6, [sp, #464]
  44a794:	ldr	x2, [sp, #152]
  44a798:	mov	w3, #0x141                 	// #321
  44a79c:	ldr	x4, [sp, #144]
  44a7a0:	mov	x7, x9
  44a7a4:	mov	x10, sp
  44a7a8:	str	x9, [x10]
  44a7ac:	mov	x9, sp
  44a7b0:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a7b4:	add	x10, x10, #0xa64
  44a7b8:	str	x10, [x9, #8]
  44a7bc:	bl	40a870 <log_object_internal@plt>
  44a7c0:	str	w0, [sp, #444]
  44a7c4:	b	44ac28 <builtin_usb_id+0xde0>
  44a7c8:	ldr	x0, [sp, #560]
  44a7cc:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  44a7d0:	add	x1, x1, #0x6a5
  44a7d4:	add	x2, sp, #0x218
  44a7d8:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a7dc:	str	w0, [sp, #732]
  44a7e0:	ldr	w8, [sp, #732]
  44a7e4:	cmp	w8, #0x0
  44a7e8:	cset	w8, ge  // ge = tcont
  44a7ec:	tbnz	w8, #0, 44a8a8 <builtin_usb_id+0xa60>
  44a7f0:	mov	x8, xzr
  44a7f4:	str	x8, [sp, #432]
  44a7f8:	ldr	x8, [sp, #560]
  44a7fc:	str	x8, [sp, #424]
  44a800:	mov	w9, #0x7                   	// #7
  44a804:	str	w9, [sp, #420]
  44a808:	ldr	w9, [sp, #732]
  44a80c:	str	w9, [sp, #416]
  44a810:	ldr	x8, [sp, #424]
  44a814:	cbz	x8, 44a854 <builtin_usb_id+0xa0c>
  44a818:	mov	w0, #0x1                   	// #1
  44a81c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a820:	ldr	w8, [sp, #420]
  44a824:	cmp	w0, w8
  44a828:	cset	w8, ge  // ge = tcont
  44a82c:	mov	w9, #0x1                   	// #1
  44a830:	eor	w8, w8, #0x1
  44a834:	eor	w8, w8, w9
  44a838:	and	w8, w8, #0x1
  44a83c:	mov	w1, w8
  44a840:	sxtw	x10, w1
  44a844:	cbz	x10, 44a854 <builtin_usb_id+0xa0c>
  44a848:	ldr	x0, [sp, #424]
  44a84c:	add	x1, sp, #0x1b0
  44a850:	bl	40a860 <sd_device_get_sysname@plt>
  44a854:	ldr	w0, [sp, #420]
  44a858:	ldr	w1, [sp, #416]
  44a85c:	ldr	x8, [sp, #432]
  44a860:	mov	x9, xzr
  44a864:	cmp	x8, #0x0
  44a868:	ldr	x8, [sp, #160]
  44a86c:	csel	x5, x8, x9, ne  // ne = any
  44a870:	ldr	x6, [sp, #432]
  44a874:	ldr	x2, [sp, #152]
  44a878:	mov	w3, #0x148                 	// #328
  44a87c:	ldr	x4, [sp, #144]
  44a880:	mov	x7, x9
  44a884:	mov	x10, sp
  44a888:	str	x9, [x10]
  44a88c:	mov	x9, sp
  44a890:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a894:	add	x10, x10, #0xa78
  44a898:	str	x10, [x9, #8]
  44a89c:	bl	40a870 <log_object_internal@plt>
  44a8a0:	str	w0, [sp, #412]
  44a8a4:	b	44ac28 <builtin_usb_id+0xde0>
  44a8a8:	ldr	x0, [sp, #536]
  44a8ac:	add	x1, sp, #0xa5f
  44a8b0:	mov	x2, #0x100                 	// #256
  44a8b4:	bl	40b760 <udev_util_encode_string@plt>
  44a8b8:	ldr	x8, [sp, #536]
  44a8bc:	mov	x0, x8
  44a8c0:	sub	x8, x29, #0x61
  44a8c4:	mov	x1, x8
  44a8c8:	mov	x2, #0x3f                  	// #63
  44a8cc:	str	x8, [sp, #80]
  44a8d0:	bl	40ae20 <util_replace_whitespace@plt>
  44a8d4:	ldr	x8, [sp, #80]
  44a8d8:	mov	x0, x8
  44a8dc:	mov	x9, xzr
  44a8e0:	mov	x1, x9
  44a8e4:	bl	40aed0 <util_replace_chars@plt>
  44a8e8:	ldr	x8, [sp, #560]
  44a8ec:	mov	x0, x8
  44a8f0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a8f4:	add	x1, x1, #0xaa0
  44a8f8:	add	x2, sp, #0x220
  44a8fc:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44a900:	str	w0, [sp, #732]
  44a904:	ldr	w10, [sp, #732]
  44a908:	cmp	w10, #0x0
  44a90c:	cset	w10, ge  // ge = tcont
  44a910:	tbnz	w10, #0, 44a9cc <builtin_usb_id+0xb84>
  44a914:	mov	x8, xzr
  44a918:	str	x8, [sp, #400]
  44a91c:	ldr	x8, [sp, #560]
  44a920:	str	x8, [sp, #392]
  44a924:	mov	w9, #0x7                   	// #7
  44a928:	str	w9, [sp, #388]
  44a92c:	ldr	w9, [sp, #732]
  44a930:	str	w9, [sp, #384]
  44a934:	ldr	x8, [sp, #392]
  44a938:	cbz	x8, 44a978 <builtin_usb_id+0xb30>
  44a93c:	mov	w0, #0x1                   	// #1
  44a940:	bl	40a3f0 <log_get_max_level_realm@plt>
  44a944:	ldr	w8, [sp, #388]
  44a948:	cmp	w0, w8
  44a94c:	cset	w8, ge  // ge = tcont
  44a950:	mov	w9, #0x1                   	// #1
  44a954:	eor	w8, w8, #0x1
  44a958:	eor	w8, w8, w9
  44a95c:	and	w8, w8, #0x1
  44a960:	mov	w1, w8
  44a964:	sxtw	x10, w1
  44a968:	cbz	x10, 44a978 <builtin_usb_id+0xb30>
  44a96c:	ldr	x0, [sp, #392]
  44a970:	add	x1, sp, #0x190
  44a974:	bl	40a860 <sd_device_get_sysname@plt>
  44a978:	ldr	w0, [sp, #388]
  44a97c:	ldr	w1, [sp, #384]
  44a980:	ldr	x8, [sp, #400]
  44a984:	mov	x9, xzr
  44a988:	cmp	x8, #0x0
  44a98c:	ldr	x8, [sp, #160]
  44a990:	csel	x5, x8, x9, ne  // ne = any
  44a994:	ldr	x6, [sp, #400]
  44a998:	ldr	x2, [sp, #152]
  44a99c:	mov	w3, #0x151                 	// #337
  44a9a0:	ldr	x4, [sp, #144]
  44a9a4:	mov	x7, x9
  44a9a8:	mov	x10, sp
  44a9ac:	str	x9, [x10]
  44a9b0:	mov	x9, sp
  44a9b4:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44a9b8:	add	x10, x10, #0xaa6
  44a9bc:	str	x10, [x9, #8]
  44a9c0:	bl	40a870 <log_object_internal@plt>
  44a9c4:	str	w0, [sp, #380]
  44a9c8:	b	44ac28 <builtin_usb_id+0xde0>
  44a9cc:	ldr	x0, [sp, #544]
  44a9d0:	add	x1, sp, #0x910
  44a9d4:	mov	x2, #0x100                 	// #256
  44a9d8:	bl	40b760 <udev_util_encode_string@plt>
  44a9dc:	ldr	x8, [sp, #544]
  44a9e0:	mov	x0, x8
  44a9e4:	add	x8, sp, #0xa10
  44a9e8:	mov	x1, x8
  44a9ec:	mov	x2, #0x3f                  	// #63
  44a9f0:	str	x8, [sp, #72]
  44a9f4:	bl	40ae20 <util_replace_whitespace@plt>
  44a9f8:	ldr	x8, [sp, #72]
  44a9fc:	mov	x0, x8
  44aa00:	mov	x9, xzr
  44aa04:	mov	x1, x9
  44aa08:	bl	40aed0 <util_replace_chars@plt>
  44aa0c:	ldr	x8, [sp, #560]
  44aa10:	mov	x0, x8
  44aa14:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44aa18:	add	x1, x1, #0xb5e
  44aa1c:	add	x2, sp, #0x210
  44aa20:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44aa24:	str	w0, [sp, #732]
  44aa28:	ldr	w10, [sp, #732]
  44aa2c:	cmp	w10, #0x0
  44aa30:	cset	w10, ge  // ge = tcont
  44aa34:	tbnz	w10, #0, 44aaf0 <builtin_usb_id+0xca8>
  44aa38:	mov	x8, xzr
  44aa3c:	str	x8, [sp, #368]
  44aa40:	ldr	x8, [sp, #560]
  44aa44:	str	x8, [sp, #360]
  44aa48:	mov	w9, #0x7                   	// #7
  44aa4c:	str	w9, [sp, #356]
  44aa50:	ldr	w9, [sp, #732]
  44aa54:	str	w9, [sp, #352]
  44aa58:	ldr	x8, [sp, #360]
  44aa5c:	cbz	x8, 44aa9c <builtin_usb_id+0xc54>
  44aa60:	mov	w0, #0x1                   	// #1
  44aa64:	bl	40a3f0 <log_get_max_level_realm@plt>
  44aa68:	ldr	w8, [sp, #356]
  44aa6c:	cmp	w0, w8
  44aa70:	cset	w8, ge  // ge = tcont
  44aa74:	mov	w9, #0x1                   	// #1
  44aa78:	eor	w8, w8, #0x1
  44aa7c:	eor	w8, w8, w9
  44aa80:	and	w8, w8, #0x1
  44aa84:	mov	w1, w8
  44aa88:	sxtw	x10, w1
  44aa8c:	cbz	x10, 44aa9c <builtin_usb_id+0xc54>
  44aa90:	ldr	x0, [sp, #360]
  44aa94:	add	x1, sp, #0x170
  44aa98:	bl	40a860 <sd_device_get_sysname@plt>
  44aa9c:	ldr	w0, [sp, #356]
  44aaa0:	ldr	w1, [sp, #352]
  44aaa4:	ldr	x8, [sp, #368]
  44aaa8:	mov	x9, xzr
  44aaac:	cmp	x8, #0x0
  44aab0:	ldr	x8, [sp, #160]
  44aab4:	csel	x5, x8, x9, ne  // ne = any
  44aab8:	ldr	x6, [sp, #368]
  44aabc:	ldr	x2, [sp, #152]
  44aac0:	mov	w3, #0x15a                 	// #346
  44aac4:	ldr	x4, [sp, #144]
  44aac8:	mov	x7, x9
  44aacc:	mov	x10, sp
  44aad0:	str	x9, [x10]
  44aad4:	mov	x9, sp
  44aad8:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44aadc:	add	x10, x10, #0xacd
  44aae0:	str	x10, [x9, #8]
  44aae4:	bl	40a870 <log_object_internal@plt>
  44aae8:	str	w0, [sp, #348]
  44aaec:	b	44ac28 <builtin_usb_id+0xde0>
  44aaf0:	ldr	x1, [sp, #528]
  44aaf4:	add	x0, sp, #0x488
  44aaf8:	mov	x2, #0x3f                  	// #63
  44aafc:	bl	44bdc8 <set_scsi_type>
  44ab00:	ldr	x0, [sp, #560]
  44ab04:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44ab08:	add	x1, x1, #0xaf3
  44ab0c:	add	x2, sp, #0x208
  44ab10:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44ab14:	str	w0, [sp, #732]
  44ab18:	ldr	w8, [sp, #732]
  44ab1c:	cmp	w8, #0x0
  44ab20:	cset	w8, ge  // ge = tcont
  44ab24:	tbnz	w8, #0, 44abe0 <builtin_usb_id+0xd98>
  44ab28:	mov	x8, xzr
  44ab2c:	str	x8, [sp, #336]
  44ab30:	ldr	x8, [sp, #560]
  44ab34:	str	x8, [sp, #328]
  44ab38:	mov	w9, #0x7                   	// #7
  44ab3c:	str	w9, [sp, #324]
  44ab40:	ldr	w9, [sp, #732]
  44ab44:	str	w9, [sp, #320]
  44ab48:	ldr	x8, [sp, #328]
  44ab4c:	cbz	x8, 44ab8c <builtin_usb_id+0xd44>
  44ab50:	mov	w0, #0x1                   	// #1
  44ab54:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ab58:	ldr	w8, [sp, #324]
  44ab5c:	cmp	w0, w8
  44ab60:	cset	w8, ge  // ge = tcont
  44ab64:	mov	w9, #0x1                   	// #1
  44ab68:	eor	w8, w8, #0x1
  44ab6c:	eor	w8, w8, w9
  44ab70:	and	w8, w8, #0x1
  44ab74:	mov	w1, w8
  44ab78:	sxtw	x10, w1
  44ab7c:	cbz	x10, 44ab8c <builtin_usb_id+0xd44>
  44ab80:	ldr	x0, [sp, #328]
  44ab84:	add	x1, sp, #0x150
  44ab88:	bl	40a860 <sd_device_get_sysname@plt>
  44ab8c:	ldr	w0, [sp, #324]
  44ab90:	ldr	w1, [sp, #320]
  44ab94:	ldr	x8, [sp, #336]
  44ab98:	mov	x9, xzr
  44ab9c:	cmp	x8, #0x0
  44aba0:	ldr	x8, [sp, #160]
  44aba4:	csel	x5, x8, x9, ne  // ne = any
  44aba8:	ldr	x6, [sp, #336]
  44abac:	ldr	x2, [sp, #152]
  44abb0:	mov	w3, #0x161                 	// #353
  44abb4:	ldr	x4, [sp, #144]
  44abb8:	mov	x7, x9
  44abbc:	mov	x10, sp
  44abc0:	str	x9, [x10]
  44abc4:	mov	x9, sp
  44abc8:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44abcc:	add	x10, x10, #0xaf7
  44abd0:	str	x10, [x9, #8]
  44abd4:	bl	40a870 <log_object_internal@plt>
  44abd8:	str	w0, [sp, #316]
  44abdc:	b	44ac28 <builtin_usb_id+0xde0>
  44abe0:	ldr	x0, [sp, #520]
  44abe4:	add	x8, sp, #0x4c8
  44abe8:	mov	x1, x8
  44abec:	mov	x2, #0x3f                  	// #63
  44abf0:	str	x8, [sp, #64]
  44abf4:	bl	40ae20 <util_replace_whitespace@plt>
  44abf8:	ldr	x8, [sp, #64]
  44abfc:	mov	x0, x8
  44ac00:	mov	x9, xzr
  44ac04:	mov	x1, x9
  44ac08:	bl	40aed0 <util_replace_chars@plt>
  44ac0c:	ldr	w2, [sp, #508]
  44ac10:	ldr	w3, [sp, #504]
  44ac14:	add	x8, sp, #0x448
  44ac18:	mov	x0, x8
  44ac1c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44ac20:	add	x1, x1, #0xb21
  44ac24:	bl	40b770 <sprintf@plt>
  44ac28:	ldr	x0, [sp, #808]
  44ac2c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44ac30:	add	x1, x1, #0x707
  44ac34:	add	x2, sp, #0xa50
  44ac38:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44ac3c:	str	w0, [sp, #732]
  44ac40:	ldr	w8, [sp, #732]
  44ac44:	cmp	w8, #0x0
  44ac48:	cset	w8, ge  // ge = tcont
  44ac4c:	tbnz	w8, #0, 44ad10 <builtin_usb_id+0xec8>
  44ac50:	mov	x8, xzr
  44ac54:	str	x8, [sp, #304]
  44ac58:	ldr	x8, [sp, #808]
  44ac5c:	str	x8, [sp, #296]
  44ac60:	mov	w9, #0x7                   	// #7
  44ac64:	str	w9, [sp, #292]
  44ac68:	ldr	w9, [sp, #732]
  44ac6c:	str	w9, [sp, #288]
  44ac70:	ldr	x8, [sp, #296]
  44ac74:	cbz	x8, 44acb4 <builtin_usb_id+0xe6c>
  44ac78:	mov	w0, #0x1                   	// #1
  44ac7c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ac80:	ldr	w8, [sp, #292]
  44ac84:	cmp	w0, w8
  44ac88:	cset	w8, ge  // ge = tcont
  44ac8c:	mov	w9, #0x1                   	// #1
  44ac90:	eor	w8, w8, #0x1
  44ac94:	eor	w8, w8, w9
  44ac98:	and	w8, w8, #0x1
  44ac9c:	mov	w1, w8
  44aca0:	sxtw	x10, w1
  44aca4:	cbz	x10, 44acb4 <builtin_usb_id+0xe6c>
  44aca8:	ldr	x0, [sp, #296]
  44acac:	add	x1, sp, #0x130
  44acb0:	bl	40a860 <sd_device_get_sysname@plt>
  44acb4:	ldr	w0, [sp, #292]
  44acb8:	ldr	w1, [sp, #288]
  44acbc:	ldr	x8, [sp, #304]
  44acc0:	mov	x9, xzr
  44acc4:	cmp	x8, #0x0
  44acc8:	ldr	x8, [sp, #160]
  44accc:	csel	x5, x8, x9, ne  // ne = any
  44acd0:	ldr	x6, [sp, #304]
  44acd4:	ldr	x2, [sp, #152]
  44acd8:	mov	w3, #0x171                 	// #369
  44acdc:	ldr	x4, [sp, #144]
  44ace0:	mov	x7, x9
  44ace4:	mov	x10, sp
  44ace8:	str	x9, [x10]
  44acec:	mov	x9, sp
  44acf0:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44acf4:	add	x10, x10, #0xb27
  44acf8:	str	x10, [x9, #8]
  44acfc:	bl	40a870 <log_object_internal@plt>
  44ad00:	str	w0, [sp, #284]
  44ad04:	ldr	w11, [sp, #284]
  44ad08:	stur	w11, [x29, #-4]
  44ad0c:	b	44b280 <builtin_usb_id+0x1438>
  44ad10:	ldr	x0, [sp, #808]
  44ad14:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44ad18:	add	x1, x1, #0x710
  44ad1c:	add	x2, sp, #0x908
  44ad20:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44ad24:	str	w0, [sp, #732]
  44ad28:	ldr	w8, [sp, #732]
  44ad2c:	cmp	w8, #0x0
  44ad30:	cset	w8, ge  // ge = tcont
  44ad34:	tbnz	w8, #0, 44adf8 <builtin_usb_id+0xfb0>
  44ad38:	mov	x8, xzr
  44ad3c:	str	x8, [sp, #272]
  44ad40:	ldr	x8, [sp, #808]
  44ad44:	str	x8, [sp, #264]
  44ad48:	mov	w9, #0x7                   	// #7
  44ad4c:	str	w9, [sp, #260]
  44ad50:	ldr	w9, [sp, #732]
  44ad54:	str	w9, [sp, #256]
  44ad58:	ldr	x8, [sp, #264]
  44ad5c:	cbz	x8, 44ad9c <builtin_usb_id+0xf54>
  44ad60:	mov	w0, #0x1                   	// #1
  44ad64:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ad68:	ldr	w8, [sp, #260]
  44ad6c:	cmp	w0, w8
  44ad70:	cset	w8, ge  // ge = tcont
  44ad74:	mov	w9, #0x1                   	// #1
  44ad78:	eor	w8, w8, #0x1
  44ad7c:	eor	w8, w8, w9
  44ad80:	and	w8, w8, #0x1
  44ad84:	mov	w1, w8
  44ad88:	sxtw	x10, w1
  44ad8c:	cbz	x10, 44ad9c <builtin_usb_id+0xf54>
  44ad90:	ldr	x0, [sp, #264]
  44ad94:	add	x1, sp, #0x110
  44ad98:	bl	40a860 <sd_device_get_sysname@plt>
  44ad9c:	ldr	w0, [sp, #260]
  44ada0:	ldr	w1, [sp, #256]
  44ada4:	ldr	x8, [sp, #272]
  44ada8:	mov	x9, xzr
  44adac:	cmp	x8, #0x0
  44adb0:	ldr	x8, [sp, #160]
  44adb4:	csel	x5, x8, x9, ne  // ne = any
  44adb8:	ldr	x6, [sp, #272]
  44adbc:	ldr	x2, [sp, #152]
  44adc0:	mov	w3, #0x175                 	// #373
  44adc4:	ldr	x4, [sp, #144]
  44adc8:	mov	x7, x9
  44adcc:	mov	x10, sp
  44add0:	str	x9, [x10]
  44add4:	mov	x9, sp
  44add8:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44addc:	add	x10, x10, #0xb4c
  44ade0:	str	x10, [x9, #8]
  44ade4:	bl	40a870 <log_object_internal@plt>
  44ade8:	str	w0, [sp, #252]
  44adec:	ldr	w11, [sp, #252]
  44adf0:	stur	w11, [x29, #-4]
  44adf4:	b	44b280 <builtin_usb_id+0x1438>
  44adf8:	ldurb	w8, [x29, #-97]
  44adfc:	cbnz	w8, 44ae68 <builtin_usb_id+0x1020>
  44ae00:	ldr	x0, [sp, #808]
  44ae04:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44ae08:	add	x1, x1, #0xb72
  44ae0c:	add	x2, sp, #0xf0
  44ae10:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44ae14:	cmp	w0, #0x0
  44ae18:	cset	w8, ge  // ge = tcont
  44ae1c:	tbnz	w8, #0, 44ae28 <builtin_usb_id+0xfe0>
  44ae20:	ldr	x8, [sp, #2640]
  44ae24:	str	x8, [sp, #240]
  44ae28:	ldr	x0, [sp, #240]
  44ae2c:	add	x1, sp, #0xa5f
  44ae30:	mov	x2, #0x100                 	// #256
  44ae34:	bl	40b760 <udev_util_encode_string@plt>
  44ae38:	ldr	x8, [sp, #240]
  44ae3c:	mov	x0, x8
  44ae40:	sub	x8, x29, #0x61
  44ae44:	mov	x1, x8
  44ae48:	mov	x2, #0x3f                  	// #63
  44ae4c:	str	x8, [sp, #56]
  44ae50:	bl	40ae20 <util_replace_whitespace@plt>
  44ae54:	ldr	x8, [sp, #56]
  44ae58:	mov	x0, x8
  44ae5c:	mov	x9, xzr
  44ae60:	mov	x1, x9
  44ae64:	bl	40aed0 <util_replace_chars@plt>
  44ae68:	ldrb	w8, [sp, #2576]
  44ae6c:	cbnz	w8, 44aed8 <builtin_usb_id+0x1090>
  44ae70:	ldr	x0, [sp, #808]
  44ae74:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44ae78:	add	x1, x1, #0xb7f
  44ae7c:	add	x2, sp, #0xe8
  44ae80:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44ae84:	cmp	w0, #0x0
  44ae88:	cset	w8, ge  // ge = tcont
  44ae8c:	tbnz	w8, #0, 44ae98 <builtin_usb_id+0x1050>
  44ae90:	ldr	x8, [sp, #2312]
  44ae94:	str	x8, [sp, #232]
  44ae98:	ldr	x0, [sp, #232]
  44ae9c:	add	x1, sp, #0x910
  44aea0:	mov	x2, #0x100                 	// #256
  44aea4:	bl	40b760 <udev_util_encode_string@plt>
  44aea8:	ldr	x8, [sp, #232]
  44aeac:	mov	x0, x8
  44aeb0:	add	x8, sp, #0xa10
  44aeb4:	mov	x1, x8
  44aeb8:	mov	x2, #0x3f                  	// #63
  44aebc:	str	x8, [sp, #48]
  44aec0:	bl	40ae20 <util_replace_whitespace@plt>
  44aec4:	ldr	x8, [sp, #48]
  44aec8:	mov	x0, x8
  44aecc:	mov	x9, xzr
  44aed0:	mov	x1, x9
  44aed4:	bl	40aed0 <util_replace_chars@plt>
  44aed8:	ldrb	w8, [sp, #1224]
  44aedc:	cbnz	w8, 44af2c <builtin_usb_id+0x10e4>
  44aee0:	ldr	x0, [sp, #808]
  44aee4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44aee8:	add	x1, x1, #0xb87
  44aeec:	add	x2, sp, #0xe0
  44aef0:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44aef4:	cmp	w0, #0x0
  44aef8:	cset	w8, lt  // lt = tstop
  44aefc:	tbnz	w8, #0, 44af2c <builtin_usb_id+0x10e4>
  44af00:	ldr	x0, [sp, #224]
  44af04:	add	x8, sp, #0x4c8
  44af08:	mov	x1, x8
  44af0c:	mov	x2, #0x3f                  	// #63
  44af10:	str	x8, [sp, #40]
  44af14:	bl	40ae20 <util_replace_whitespace@plt>
  44af18:	ldr	x8, [sp, #40]
  44af1c:	mov	x0, x8
  44af20:	mov	x9, xzr
  44af24:	mov	x1, x9
  44af28:	bl	40aed0 <util_replace_chars@plt>
  44af2c:	ldrb	w8, [sp, #1800]
  44af30:	cbnz	w8, 44afe8 <builtin_usb_id+0x11a0>
  44af34:	ldr	x0, [sp, #808]
  44af38:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44af3c:	add	x1, x1, #0xb91
  44af40:	add	x2, sp, #0xd8
  44af44:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44af48:	cmp	w0, #0x0
  44af4c:	cset	w8, lt  // lt = tstop
  44af50:	tbnz	w8, #0, 44afe8 <builtin_usb_id+0x11a0>
  44af54:	ldr	x8, [sp, #216]
  44af58:	str	x8, [sp, #208]
  44af5c:	ldr	x8, [sp, #208]
  44af60:	ldrb	w9, [x8]
  44af64:	cbz	w9, 44afb4 <builtin_usb_id+0x116c>
  44af68:	ldr	x8, [sp, #208]
  44af6c:	ldrb	w9, [x8]
  44af70:	cmp	w9, #0x20
  44af74:	b.lt	44af98 <builtin_usb_id+0x1150>  // b.tstop
  44af78:	ldr	x8, [sp, #208]
  44af7c:	ldrb	w9, [x8]
  44af80:	cmp	w9, #0x7f
  44af84:	b.gt	44af98 <builtin_usb_id+0x1150>
  44af88:	ldr	x8, [sp, #208]
  44af8c:	ldrb	w9, [x8]
  44af90:	cmp	w9, #0x2c
  44af94:	b.ne	44afa4 <builtin_usb_id+0x115c>  // b.any
  44af98:	mov	x8, xzr
  44af9c:	str	x8, [sp, #216]
  44afa0:	b	44afb4 <builtin_usb_id+0x116c>
  44afa4:	ldr	x8, [sp, #208]
  44afa8:	add	x8, x8, #0x1
  44afac:	str	x8, [sp, #208]
  44afb0:	b	44af5c <builtin_usb_id+0x1114>
  44afb4:	ldr	x8, [sp, #216]
  44afb8:	cbz	x8, 44afe8 <builtin_usb_id+0x11a0>
  44afbc:	ldr	x0, [sp, #216]
  44afc0:	add	x8, sp, #0x708
  44afc4:	mov	x1, x8
  44afc8:	mov	x2, #0x1ff                 	// #511
  44afcc:	str	x8, [sp, #32]
  44afd0:	bl	40ae20 <util_replace_whitespace@plt>
  44afd4:	ldr	x8, [sp, #32]
  44afd8:	mov	x0, x8
  44afdc:	mov	x9, xzr
  44afe0:	mov	x1, x9
  44afe4:	bl	40aed0 <util_replace_chars@plt>
  44afe8:	add	x0, sp, #0x300
  44afec:	add	x8, sp, #0x338
  44aff0:	str	x8, [sp, #768]
  44aff4:	mov	x1, #0x100                 	// #256
  44aff8:	sub	x2, x29, #0x61
  44affc:	adrp	x3, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b000:	add	x3, x3, #0xb98
  44b004:	add	x4, sp, #0xa10
  44b008:	mov	x8, xzr
  44b00c:	mov	x5, x8
  44b010:	bl	40aef0 <strpcpyl@plt>
  44b014:	str	x0, [sp, #776]
  44b018:	add	x0, sp, #0x708
  44b01c:	bl	44bea8 <isempty>
  44b020:	tbnz	w0, #0, 44b048 <builtin_usb_id+0x1200>
  44b024:	ldr	x1, [sp, #776]
  44b028:	add	x0, sp, #0x300
  44b02c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b030:	add	x2, x2, #0xb98
  44b034:	add	x3, sp, #0x708
  44b038:	mov	x8, xzr
  44b03c:	mov	x4, x8
  44b040:	bl	40aef0 <strpcpyl@plt>
  44b044:	str	x0, [sp, #776]
  44b048:	add	x0, sp, #0x448
  44b04c:	bl	44bea8 <isempty>
  44b050:	tbnz	w0, #0, 44b074 <builtin_usb_id+0x122c>
  44b054:	ldr	x1, [sp, #776]
  44b058:	add	x0, sp, #0x300
  44b05c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b060:	add	x2, x2, #0x862
  44b064:	add	x3, sp, #0x448
  44b068:	mov	x8, xzr
  44b06c:	mov	x4, x8
  44b070:	bl	40aef0 <strpcpyl@plt>
  44b074:	ldur	x0, [x29, #-16]
  44b078:	ldurb	w8, [x29, #-33]
  44b07c:	and	w1, w8, #0x1
  44b080:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b084:	add	x2, x2, #0xb9a
  44b088:	sub	x3, x29, #0x61
  44b08c:	bl	43eae8 <udev_builtin_add_property>
  44b090:	ldur	x9, [x29, #-16]
  44b094:	ldurb	w8, [x29, #-33]
  44b098:	mov	x0, x9
  44b09c:	and	w1, w8, #0x1
  44b0a0:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b0a4:	add	x2, x2, #0xba4
  44b0a8:	add	x3, sp, #0xa5f
  44b0ac:	bl	43eae8 <udev_builtin_add_property>
  44b0b0:	ldur	x9, [x29, #-16]
  44b0b4:	ldurb	w8, [x29, #-33]
  44b0b8:	ldr	x3, [sp, #2640]
  44b0bc:	mov	x0, x9
  44b0c0:	and	w1, w8, #0x1
  44b0c4:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b0c8:	add	x2, x2, #0xbb2
  44b0cc:	bl	43eae8 <udev_builtin_add_property>
  44b0d0:	ldur	x9, [x29, #-16]
  44b0d4:	ldurb	w8, [x29, #-33]
  44b0d8:	mov	x0, x9
  44b0dc:	and	w1, w8, #0x1
  44b0e0:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b0e4:	add	x2, x2, #0xbbf
  44b0e8:	add	x3, sp, #0xa10
  44b0ec:	bl	43eae8 <udev_builtin_add_property>
  44b0f0:	ldur	x9, [x29, #-16]
  44b0f4:	ldurb	w8, [x29, #-33]
  44b0f8:	mov	x0, x9
  44b0fc:	and	w1, w8, #0x1
  44b100:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b104:	add	x2, x2, #0xbc8
  44b108:	add	x3, sp, #0x910
  44b10c:	bl	43eae8 <udev_builtin_add_property>
  44b110:	ldur	x9, [x29, #-16]
  44b114:	ldurb	w8, [x29, #-33]
  44b118:	ldr	x3, [sp, #2312]
  44b11c:	mov	x0, x9
  44b120:	and	w1, w8, #0x1
  44b124:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b128:	add	x2, x2, #0xbd5
  44b12c:	bl	43eae8 <udev_builtin_add_property>
  44b130:	ldur	x9, [x29, #-16]
  44b134:	ldurb	w8, [x29, #-33]
  44b138:	mov	x0, x9
  44b13c:	and	w1, w8, #0x1
  44b140:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b144:	add	x2, x2, #0xbe1
  44b148:	add	x3, sp, #0x4c8
  44b14c:	bl	43eae8 <udev_builtin_add_property>
  44b150:	ldur	x9, [x29, #-16]
  44b154:	ldurb	w8, [x29, #-33]
  44b158:	mov	x0, x9
  44b15c:	and	w1, w8, #0x1
  44b160:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b164:	add	x2, x2, #0xbed
  44b168:	add	x3, sp, #0x338
  44b16c:	bl	43eae8 <udev_builtin_add_property>
  44b170:	add	x9, sp, #0x708
  44b174:	mov	x0, x9
  44b178:	bl	44bea8 <isempty>
  44b17c:	tbnz	w0, #0, 44b19c <builtin_usb_id+0x1354>
  44b180:	ldur	x0, [x29, #-16]
  44b184:	ldurb	w8, [x29, #-33]
  44b188:	and	w1, w8, #0x1
  44b18c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b190:	add	x2, x2, #0xbf7
  44b194:	add	x3, sp, #0x708
  44b198:	bl	43eae8 <udev_builtin_add_property>
  44b19c:	add	x0, sp, #0x488
  44b1a0:	bl	44bea8 <isempty>
  44b1a4:	tbnz	w0, #0, 44b1c4 <builtin_usb_id+0x137c>
  44b1a8:	ldur	x0, [x29, #-16]
  44b1ac:	ldurb	w8, [x29, #-33]
  44b1b0:	and	w1, w8, #0x1
  44b1b4:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b1b8:	add	x2, x2, #0xc07
  44b1bc:	add	x3, sp, #0x488
  44b1c0:	bl	43eae8 <udev_builtin_add_property>
  44b1c4:	add	x0, sp, #0x448
  44b1c8:	bl	44bea8 <isempty>
  44b1cc:	tbnz	w0, #0, 44b1ec <builtin_usb_id+0x13a4>
  44b1d0:	ldur	x0, [x29, #-16]
  44b1d4:	ldurb	w8, [x29, #-33]
  44b1d8:	and	w1, w8, #0x1
  44b1dc:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b1e0:	add	x2, x2, #0xc0f
  44b1e4:	add	x3, sp, #0x448
  44b1e8:	bl	43eae8 <udev_builtin_add_property>
  44b1ec:	ldur	x0, [x29, #-16]
  44b1f0:	ldurb	w8, [x29, #-33]
  44b1f4:	and	w1, w8, #0x1
  44b1f8:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b1fc:	add	x2, x2, #0xc1b
  44b200:	ldr	x3, [sp, #168]
  44b204:	bl	43eae8 <udev_builtin_add_property>
  44b208:	add	x9, sp, #0x508
  44b20c:	mov	x0, x9
  44b210:	bl	44bea8 <isempty>
  44b214:	tbnz	w0, #0, 44b234 <builtin_usb_id+0x13ec>
  44b218:	ldur	x0, [x29, #-16]
  44b21c:	ldurb	w8, [x29, #-33]
  44b220:	and	w1, w8, #0x1
  44b224:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b228:	add	x2, x2, #0xc22
  44b22c:	add	x3, sp, #0x508
  44b230:	bl	43eae8 <udev_builtin_add_property>
  44b234:	ldr	x8, [sp, #1088]
  44b238:	cbz	x8, 44b258 <builtin_usb_id+0x1410>
  44b23c:	ldur	x0, [x29, #-16]
  44b240:	ldurb	w8, [x29, #-33]
  44b244:	ldr	x3, [sp, #1088]
  44b248:	and	w1, w8, #0x1
  44b24c:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b250:	add	x2, x2, #0xc34
  44b254:	bl	43eae8 <udev_builtin_add_property>
  44b258:	ldr	x8, [sp, #1080]
  44b25c:	cbz	x8, 44b27c <builtin_usb_id+0x1434>
  44b260:	ldur	x0, [x29, #-16]
  44b264:	ldurb	w8, [x29, #-33]
  44b268:	ldr	x3, [sp, #1080]
  44b26c:	and	w1, w8, #0x1
  44b270:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b274:	add	x2, x2, #0xc49
  44b278:	bl	43eae8 <udev_builtin_add_property>
  44b27c:	stur	wzr, [x29, #-4]
  44b280:	ldur	w0, [x29, #-4]
  44b284:	add	sp, sp, #0xbc0
  44b288:	ldp	x28, x19, [sp, #16]
  44b28c:	ldp	x29, x30, [sp], #32
  44b290:	ret

000000000044b294 <dev_if_packed_info>:
  44b294:	stp	x29, x30, [sp, #-32]!
  44b298:	stp	x28, x19, [sp, #16]
  44b29c:	mov	x29, sp
  44b2a0:	sub	sp, sp, #0x10, lsl #12
  44b2a4:	sub	sp, sp, #0x170
  44b2a8:	mov	x19, sp
  44b2ac:	sub	x8, x29, #0x30
  44b2b0:	add	x9, x19, #0xd0
  44b2b4:	mov	w10, #0xffffffff            	// #-1
  44b2b8:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  44b2bc:	add	x11, x11, #0xa46
  44b2c0:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b2c4:	add	x12, x12, #0x904
  44b2c8:	add	x12, x12, #0x3
  44b2cc:	adrp	x13, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b2d0:	add	x13, x13, #0xc98
  44b2d4:	adrp	x14, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b2d8:	add	x14, x14, #0xc64
  44b2dc:	add	x15, x19, #0x108
  44b2e0:	str	x0, [x8, #32]
  44b2e4:	str	x1, [x8, #24]
  44b2e8:	str	x2, [x8, #16]
  44b2ec:	str	w10, [x8, #12]
  44b2f0:	str	xzr, [x9, #80]
  44b2f4:	str	wzr, [x19, #284]
  44b2f8:	ldr	x0, [x8, #32]
  44b2fc:	mov	x1, x15
  44b300:	str	x8, [x19, #64]
  44b304:	str	x9, [x19, #56]
  44b308:	str	x11, [x19, #48]
  44b30c:	str	x12, [x19, #40]
  44b310:	str	x13, [x19, #32]
  44b314:	str	x14, [x19, #24]
  44b318:	bl	40abf0 <sd_device_get_syspath@plt>
  44b31c:	str	w0, [x19, #260]
  44b320:	ldr	w10, [x19, #260]
  44b324:	cmp	w10, #0x0
  44b328:	cset	w10, ge  // ge = tcont
  44b32c:	tbnz	w10, #0, 44b348 <dev_if_packed_info+0xb4>
  44b330:	ldr	w8, [x19, #260]
  44b334:	ldr	x9, [x19, #64]
  44b338:	str	w8, [x9, #44]
  44b33c:	mov	w8, #0x1                   	// #1
  44b340:	str	w8, [x19, #256]
  44b344:	b	44babc <dev_if_packed_info+0x828>
  44b348:	ldr	x8, [x19, #56]
  44b34c:	ldr	x9, [x8, #56]
  44b350:	add	x10, x19, #0xf0
  44b354:	str	x9, [x8, #32]
  44b358:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b35c:	add	x9, x9, #0xc57
  44b360:	str	x9, [x10, #8]
  44b364:	str	xzr, [x8, #8]
  44b368:	str	xzr, [x8]
  44b36c:	ldr	x8, [x19, #56]
  44b370:	ldr	x9, [x8]
  44b374:	mov	w10, #0x0                   	// #0
  44b378:	cmp	x9, #0x2
  44b37c:	str	w10, [x19, #20]
  44b380:	b.cs	44b3ac <dev_if_packed_info+0x118>  // b.hs, b.nlast
  44b384:	ldr	x8, [x19, #56]
  44b388:	ldr	x9, [x8]
  44b38c:	mov	x10, #0x8                   	// #8
  44b390:	mul	x9, x10, x9
  44b394:	add	x10, x19, #0xf0
  44b398:	add	x9, x10, x9
  44b39c:	ldr	x9, [x9]
  44b3a0:	cmp	x9, #0x0
  44b3a4:	cset	w11, ne  // ne = any
  44b3a8:	str	w11, [x19, #20]
  44b3ac:	ldr	w8, [x19, #20]
  44b3b0:	tbnz	w8, #0, 44b3b8 <dev_if_packed_info+0x124>
  44b3b4:	b	44b3fc <dev_if_packed_info+0x168>
  44b3b8:	ldr	x8, [x19, #56]
  44b3bc:	ldr	x9, [x8]
  44b3c0:	mov	x10, #0x8                   	// #8
  44b3c4:	mul	x9, x10, x9
  44b3c8:	add	x10, x19, #0xf0
  44b3cc:	add	x9, x10, x9
  44b3d0:	ldr	x0, [x9]
  44b3d4:	bl	40a800 <strlen@plt>
  44b3d8:	ldr	x8, [x19, #56]
  44b3dc:	ldr	x9, [x8, #8]
  44b3e0:	add	x9, x9, x0
  44b3e4:	str	x9, [x8, #8]
  44b3e8:	ldr	x8, [x19, #56]
  44b3ec:	ldr	x9, [x8]
  44b3f0:	add	x9, x9, #0x1
  44b3f4:	str	x9, [x8]
  44b3f8:	b	44b36c <dev_if_packed_info+0xd8>
  44b3fc:	ldr	x8, [x19, #56]
  44b400:	ldr	x9, [x8, #8]
  44b404:	add	x9, x9, #0x1
  44b408:	str	x9, [x19, #200]
  44b40c:	ldr	x1, [x19, #200]
  44b410:	mov	x0, #0x1                   	// #1
  44b414:	bl	44bf10 <size_multiply_overflow>
  44b418:	mov	w8, #0x1                   	// #1
  44b41c:	eor	w9, w0, #0x1
  44b420:	eor	w9, w9, w8
  44b424:	eor	w9, w9, w8
  44b428:	eor	w8, w9, w8
  44b42c:	and	w8, w8, #0x1
  44b430:	mov	w1, w8
  44b434:	sxtw	x10, w1
  44b438:	cbz	x10, 44b458 <dev_if_packed_info+0x1c4>
  44b43c:	mov	w0, #0x1                   	// #1
  44b440:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  44b444:	add	x1, x1, #0x694
  44b448:	ldr	x2, [x19, #40]
  44b44c:	mov	w3, #0xa3                  	// #163
  44b450:	ldr	x4, [x19, #24]
  44b454:	bl	40a540 <log_assert_failed_realm@plt>
  44b458:	ldr	x8, [x19, #200]
  44b45c:	mov	x9, #0x1                   	// #1
  44b460:	mul	x8, x9, x8
  44b464:	cmp	x8, #0x400, lsl #12
  44b468:	cset	w10, ls  // ls = plast
  44b46c:	mov	w11, #0x1                   	// #1
  44b470:	eor	w10, w10, #0x1
  44b474:	eor	w10, w10, w11
  44b478:	eor	w10, w10, w11
  44b47c:	and	w10, w10, #0x1
  44b480:	mov	w0, w10
  44b484:	sxtw	x8, w0
  44b488:	cbz	x8, 44b4a8 <dev_if_packed_info+0x214>
  44b48c:	mov	w0, #0x1                   	// #1
  44b490:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  44b494:	add	x1, x1, #0x6f4
  44b498:	ldr	x2, [x19, #40]
  44b49c:	mov	w3, #0xa3                  	// #163
  44b4a0:	ldr	x4, [x19, #24]
  44b4a4:	bl	40a540 <log_assert_failed_realm@plt>
  44b4a8:	ldr	x8, [x19, #200]
  44b4ac:	mov	x9, #0x1                   	// #1
  44b4b0:	mul	x8, x9, x8
  44b4b4:	mul	x8, x8, x9
  44b4b8:	add	x8, x8, #0xf
  44b4bc:	and	x8, x8, #0xfffffffffffffff0
  44b4c0:	mov	x9, sp
  44b4c4:	subs	x8, x9, x8
  44b4c8:	mov	sp, x8
  44b4cc:	str	x8, [x19, #192]
  44b4d0:	ldr	x8, [x19, #192]
  44b4d4:	ldr	x9, [x19, #56]
  44b4d8:	str	x8, [x9, #24]
  44b4dc:	str	x8, [x9, #16]
  44b4e0:	str	xzr, [x9]
  44b4e4:	ldr	x8, [x19, #56]
  44b4e8:	ldr	x9, [x8]
  44b4ec:	mov	w10, #0x0                   	// #0
  44b4f0:	cmp	x9, #0x2
  44b4f4:	str	w10, [x19, #16]
  44b4f8:	b.cs	44b524 <dev_if_packed_info+0x290>  // b.hs, b.nlast
  44b4fc:	ldr	x8, [x19, #56]
  44b500:	ldr	x9, [x8]
  44b504:	mov	x10, #0x8                   	// #8
  44b508:	mul	x9, x10, x9
  44b50c:	add	x10, x19, #0xf0
  44b510:	add	x9, x10, x9
  44b514:	ldr	x9, [x9]
  44b518:	cmp	x9, #0x0
  44b51c:	cset	w11, ne  // ne = any
  44b520:	str	w11, [x19, #16]
  44b524:	ldr	w8, [x19, #16]
  44b528:	tbnz	w8, #0, 44b530 <dev_if_packed_info+0x29c>
  44b52c:	b	44b570 <dev_if_packed_info+0x2dc>
  44b530:	ldr	x8, [x19, #56]
  44b534:	ldr	x0, [x8, #16]
  44b538:	ldr	x9, [x8]
  44b53c:	mov	x10, #0x8                   	// #8
  44b540:	mul	x9, x10, x9
  44b544:	add	x10, x19, #0xf0
  44b548:	add	x9, x10, x9
  44b54c:	ldr	x1, [x9]
  44b550:	bl	40aca0 <stpcpy@plt>
  44b554:	ldr	x8, [x19, #56]
  44b558:	str	x0, [x8, #16]
  44b55c:	ldr	x8, [x19, #56]
  44b560:	ldr	x9, [x8]
  44b564:	add	x9, x9, #0x1
  44b568:	str	x9, [x8]
  44b56c:	b	44b4e4 <dev_if_packed_info+0x250>
  44b570:	ldr	x8, [x19, #56]
  44b574:	ldr	x9, [x8, #16]
  44b578:	mov	w10, #0x0                   	// #0
  44b57c:	strb	w10, [x9]
  44b580:	ldr	x9, [x8, #24]
  44b584:	str	x9, [x19, #184]
  44b588:	ldr	x9, [x19, #184]
  44b58c:	str	x9, [x8, #64]
  44b590:	ldr	x0, [x8, #64]
  44b594:	mov	w1, #0x80000               	// #524288
  44b598:	bl	40abd0 <open64@plt>
  44b59c:	ldr	x8, [x19, #64]
  44b5a0:	str	w0, [x8, #12]
  44b5a4:	ldr	w10, [x8, #12]
  44b5a8:	cmp	w10, #0x0
  44b5ac:	cset	w10, ge  // ge = tcont
  44b5b0:	tbnz	w10, #0, 44b6a0 <dev_if_packed_info+0x40c>
  44b5b4:	mov	x8, xzr
  44b5b8:	str	x8, [x19, #176]
  44b5bc:	ldr	x8, [x19, #64]
  44b5c0:	ldr	x9, [x8, #32]
  44b5c4:	str	x9, [x19, #168]
  44b5c8:	mov	w10, #0x7                   	// #7
  44b5cc:	str	w10, [x19, #164]
  44b5d0:	bl	40a480 <__errno_location@plt>
  44b5d4:	ldr	w10, [x0]
  44b5d8:	str	w10, [x19, #160]
  44b5dc:	ldr	x8, [x19, #168]
  44b5e0:	cbz	x8, 44b620 <dev_if_packed_info+0x38c>
  44b5e4:	mov	w0, #0x1                   	// #1
  44b5e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  44b5ec:	ldr	w8, [x19, #164]
  44b5f0:	cmp	w0, w8
  44b5f4:	cset	w8, ge  // ge = tcont
  44b5f8:	mov	w9, #0x1                   	// #1
  44b5fc:	eor	w8, w8, #0x1
  44b600:	eor	w8, w8, w9
  44b604:	and	w8, w8, #0x1
  44b608:	mov	w1, w8
  44b60c:	sxtw	x10, w1
  44b610:	cbz	x10, 44b620 <dev_if_packed_info+0x38c>
  44b614:	ldr	x0, [x19, #168]
  44b618:	add	x1, x19, #0xb0
  44b61c:	bl	40a860 <sd_device_get_sysname@plt>
  44b620:	ldr	w0, [x19, #164]
  44b624:	ldr	w1, [x19, #160]
  44b628:	ldr	x8, [x19, #176]
  44b62c:	mov	x9, xzr
  44b630:	cmp	x8, #0x0
  44b634:	ldr	x8, [x19, #48]
  44b638:	csel	x5, x8, x9, ne  // ne = any
  44b63c:	ldr	x6, [x19, #176]
  44b640:	ldr	x10, [x19, #56]
  44b644:	ldr	x11, [x10, #64]
  44b648:	sub	sp, sp, #0x20
  44b64c:	ldr	x2, [x19, #40]
  44b650:	mov	w3, #0xa6                  	// #166
  44b654:	ldr	x4, [x19, #32]
  44b658:	mov	x7, x9
  44b65c:	mov	x12, sp
  44b660:	str	x9, [x12]
  44b664:	mov	x9, sp
  44b668:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b66c:	add	x12, x12, #0xcab
  44b670:	str	x12, [x9, #8]
  44b674:	mov	x9, sp
  44b678:	str	x11, [x9, #16]
  44b67c:	bl	40a870 <log_object_internal@plt>
  44b680:	add	sp, sp, #0x20
  44b684:	str	w0, [x19, #156]
  44b688:	ldr	w13, [x19, #156]
  44b68c:	ldr	x8, [x19, #64]
  44b690:	str	w13, [x8, #44]
  44b694:	mov	w13, #0x1                   	// #1
  44b698:	str	w13, [x19, #256]
  44b69c:	b	44babc <dev_if_packed_info+0x828>
  44b6a0:	ldr	x8, [x19, #64]
  44b6a4:	ldr	w0, [x8, #12]
  44b6a8:	add	x1, x19, #0x12f
  44b6ac:	mov	x2, #0x11                  	// #17
  44b6b0:	movk	x2, #0x1, lsl #16
  44b6b4:	bl	40a920 <read@plt>
  44b6b8:	ldr	x8, [x19, #64]
  44b6bc:	str	x0, [x8]
  44b6c0:	ldr	x9, [x8]
  44b6c4:	cmp	x9, #0x12
  44b6c8:	b.ge	44b7b8 <dev_if_packed_info+0x524>  // b.tcont
  44b6cc:	mov	x8, xzr
  44b6d0:	str	x8, [x19, #144]
  44b6d4:	ldr	x8, [x19, #64]
  44b6d8:	ldr	x9, [x8, #32]
  44b6dc:	str	x9, [x19, #136]
  44b6e0:	mov	w10, #0x4                   	// #4
  44b6e4:	str	w10, [x19, #132]
  44b6e8:	mov	w10, #0x5                   	// #5
  44b6ec:	movk	w10, #0x4000, lsl #16
  44b6f0:	str	w10, [x19, #128]
  44b6f4:	ldr	x9, [x19, #136]
  44b6f8:	cbz	x9, 44b738 <dev_if_packed_info+0x4a4>
  44b6fc:	mov	w0, #0x1                   	// #1
  44b700:	bl	40a3f0 <log_get_max_level_realm@plt>
  44b704:	ldr	w8, [x19, #132]
  44b708:	cmp	w0, w8
  44b70c:	cset	w8, ge  // ge = tcont
  44b710:	mov	w9, #0x1                   	// #1
  44b714:	eor	w8, w8, #0x1
  44b718:	eor	w8, w8, w9
  44b71c:	and	w8, w8, #0x1
  44b720:	mov	w1, w8
  44b724:	sxtw	x10, w1
  44b728:	cbz	x10, 44b738 <dev_if_packed_info+0x4a4>
  44b72c:	ldr	x0, [x19, #136]
  44b730:	add	x1, x19, #0x90
  44b734:	bl	40a860 <sd_device_get_sysname@plt>
  44b738:	ldr	w0, [x19, #132]
  44b73c:	ldr	w1, [x19, #128]
  44b740:	ldr	x8, [x19, #144]
  44b744:	mov	x9, xzr
  44b748:	cmp	x8, #0x0
  44b74c:	ldr	x8, [x19, #48]
  44b750:	csel	x5, x8, x9, ne  // ne = any
  44b754:	ldr	x6, [x19, #144]
  44b758:	ldr	x10, [x19, #56]
  44b75c:	ldr	x11, [x10, #64]
  44b760:	sub	sp, sp, #0x20
  44b764:	ldr	x2, [x19, #40]
  44b768:	mov	w3, #0xab                  	// #171
  44b76c:	ldr	x4, [x19, #32]
  44b770:	mov	x7, x9
  44b774:	mov	x12, sp
  44b778:	str	x9, [x12]
  44b77c:	mov	x9, sp
  44b780:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b784:	add	x12, x12, #0xcc3
  44b788:	str	x12, [x9, #8]
  44b78c:	mov	x9, sp
  44b790:	str	x11, [x9, #16]
  44b794:	bl	40a870 <log_object_internal@plt>
  44b798:	add	sp, sp, #0x20
  44b79c:	str	w0, [x19, #124]
  44b7a0:	ldr	w13, [x19, #124]
  44b7a4:	ldr	x8, [x19, #64]
  44b7a8:	str	w13, [x8, #44]
  44b7ac:	mov	w13, #0x1                   	// #1
  44b7b0:	str	w13, [x19, #256]
  44b7b4:	b	44babc <dev_if_packed_info+0x828>
  44b7b8:	ldr	x8, [x19, #64]
  44b7bc:	ldr	x9, [x8]
  44b7c0:	mov	x10, #0x11                  	// #17
  44b7c4:	movk	x10, #0x1, lsl #16
  44b7c8:	cmp	x9, x10
  44b7cc:	cset	w11, ls  // ls = plast
  44b7d0:	mov	w12, #0x1                   	// #1
  44b7d4:	eor	w11, w11, #0x1
  44b7d8:	eor	w11, w11, w12
  44b7dc:	eor	w11, w11, w12
  44b7e0:	and	w11, w11, #0x1
  44b7e4:	mov	w0, w11
  44b7e8:	sxtw	x9, w0
  44b7ec:	cbz	x9, 44b80c <dev_if_packed_info+0x578>
  44b7f0:	mov	w0, #0x1                   	// #1
  44b7f4:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b7f8:	add	x1, x1, #0xcd8
  44b7fc:	ldr	x2, [x19, #40]
  44b800:	mov	w3, #0xac                  	// #172
  44b804:	ldr	x4, [x19, #24]
  44b808:	bl	40a540 <log_assert_failed_realm@plt>
  44b80c:	ldr	x8, [x19, #64]
  44b810:	ldr	x9, [x8, #24]
  44b814:	mov	w10, #0x0                   	// #0
  44b818:	strb	w10, [x9]
  44b81c:	ldr	x8, [x19, #56]
  44b820:	ldr	x9, [x8, #80]
  44b824:	add	x9, x9, #0x9
  44b828:	ldr	x10, [x19, #64]
  44b82c:	ldr	x11, [x10]
  44b830:	mov	w12, #0x0                   	// #0
  44b834:	cmp	x9, x11
  44b838:	str	w12, [x19, #12]
  44b83c:	b.cs	44b868 <dev_if_packed_info+0x5d4>  // b.hs, b.nlast
  44b840:	ldr	w8, [x19, #284]
  44b844:	add	w8, w8, #0x7
  44b848:	mov	w9, w8
  44b84c:	ubfx	x9, x9, #0, #32
  44b850:	ldr	x10, [x19, #64]
  44b854:	ldr	x11, [x10, #16]
  44b858:	subs	x11, x11, #0x2
  44b85c:	cmp	x9, x11
  44b860:	cset	w8, cc  // cc = lo, ul, last
  44b864:	str	w8, [x19, #12]
  44b868:	ldr	w8, [x19, #12]
  44b86c:	tbnz	w8, #0, 44b874 <dev_if_packed_info+0x5e0>
  44b870:	b	44ba50 <dev_if_packed_info+0x7bc>
  44b874:	ldr	x8, [x19, #56]
  44b878:	ldr	x9, [x8, #80]
  44b87c:	add	x10, x19, #0x12f
  44b880:	add	x9, x10, x9
  44b884:	str	x9, [x19, #112]
  44b888:	ldr	x9, [x19, #112]
  44b88c:	ldrb	w11, [x9]
  44b890:	cmp	w11, #0x3
  44b894:	b.ge	44b89c <dev_if_packed_info+0x608>  // b.tcont
  44b898:	b	44ba50 <dev_if_packed_info+0x7bc>
  44b89c:	ldr	x8, [x19, #112]
  44b8a0:	ldrb	w9, [x8]
  44b8a4:	mov	w8, w9
  44b8a8:	ldr	x10, [x19, #64]
  44b8ac:	ldr	x11, [x10]
  44b8b0:	subs	x11, x11, #0x9
  44b8b4:	cmp	x8, x11
  44b8b8:	b.ls	44b9a8 <dev_if_packed_info+0x714>  // b.plast
  44b8bc:	mov	x8, xzr
  44b8c0:	str	x8, [x19, #96]
  44b8c4:	ldr	x8, [x19, #64]
  44b8c8:	ldr	x9, [x8, #32]
  44b8cc:	str	x9, [x19, #88]
  44b8d0:	mov	w10, #0x7                   	// #7
  44b8d4:	str	w10, [x19, #84]
  44b8d8:	mov	w10, #0x5                   	// #5
  44b8dc:	movk	w10, #0x4000, lsl #16
  44b8e0:	str	w10, [x19, #80]
  44b8e4:	ldr	x9, [x19, #88]
  44b8e8:	cbz	x9, 44b928 <dev_if_packed_info+0x694>
  44b8ec:	mov	w0, #0x1                   	// #1
  44b8f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44b8f4:	ldr	w8, [x19, #84]
  44b8f8:	cmp	w0, w8
  44b8fc:	cset	w8, ge  // ge = tcont
  44b900:	mov	w9, #0x1                   	// #1
  44b904:	eor	w8, w8, #0x1
  44b908:	eor	w8, w8, w9
  44b90c:	and	w8, w8, #0x1
  44b910:	mov	w1, w8
  44b914:	sxtw	x10, w1
  44b918:	cbz	x10, 44b928 <dev_if_packed_info+0x694>
  44b91c:	ldr	x0, [x19, #88]
  44b920:	add	x1, x19, #0x60
  44b924:	bl	40a860 <sd_device_get_sysname@plt>
  44b928:	ldr	w0, [x19, #84]
  44b92c:	ldr	w1, [x19, #80]
  44b930:	ldr	x8, [x19, #96]
  44b934:	mov	x9, xzr
  44b938:	cmp	x8, #0x0
  44b93c:	ldr	x8, [x19, #48]
  44b940:	csel	x5, x8, x9, ne  // ne = any
  44b944:	ldr	x6, [x19, #96]
  44b948:	ldr	x10, [x19, #56]
  44b94c:	ldr	x11, [x10, #64]
  44b950:	sub	sp, sp, #0x20
  44b954:	ldr	x2, [x19, #40]
  44b958:	mov	w3, #0xba                  	// #186
  44b95c:	ldr	x4, [x19, #32]
  44b960:	mov	x7, x9
  44b964:	mov	x12, sp
  44b968:	str	x9, [x12]
  44b96c:	mov	x9, sp
  44b970:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b974:	add	x12, x12, #0xcf4
  44b978:	str	x12, [x9, #8]
  44b97c:	mov	x9, sp
  44b980:	str	x11, [x9, #16]
  44b984:	bl	40a870 <log_object_internal@plt>
  44b988:	add	sp, sp, #0x20
  44b98c:	str	w0, [x19, #76]
  44b990:	ldr	w13, [x19, #76]
  44b994:	ldr	x8, [x19, #64]
  44b998:	str	w13, [x8, #44]
  44b99c:	mov	w13, #0x1                   	// #1
  44b9a0:	str	w13, [x19, #256]
  44b9a4:	b	44babc <dev_if_packed_info+0x828>
  44b9a8:	ldr	x8, [x19, #112]
  44b9ac:	ldrb	w9, [x8]
  44b9b0:	mov	w8, w9
  44b9b4:	ldr	x10, [x19, #56]
  44b9b8:	ldr	x11, [x10, #80]
  44b9bc:	add	x8, x11, x8
  44b9c0:	str	x8, [x10, #80]
  44b9c4:	ldr	x8, [x19, #112]
  44b9c8:	ldrb	w9, [x8, #1]
  44b9cc:	cmp	w9, #0x4
  44b9d0:	b.eq	44b9d8 <dev_if_packed_info+0x744>  // b.none
  44b9d4:	b	44b81c <dev_if_packed_info+0x588>
  44b9d8:	ldr	x8, [x19, #112]
  44b9dc:	ldrb	w3, [x8, #5]
  44b9e0:	ldr	x8, [x19, #112]
  44b9e4:	ldrb	w4, [x8, #6]
  44b9e8:	ldr	x8, [x19, #112]
  44b9ec:	ldrb	w5, [x8, #7]
  44b9f0:	add	x0, x19, #0x68
  44b9f4:	mov	x1, #0x8                   	// #8
  44b9f8:	adrp	x2, 46d000 <on_inotify.__assert_in_set+0x9540>
  44b9fc:	add	x2, x2, #0xd10
  44ba00:	bl	40b140 <snprintf@plt>
  44ba04:	cmp	w0, #0x7
  44ba08:	b.eq	44ba10 <dev_if_packed_info+0x77c>  // b.none
  44ba0c:	b	44b81c <dev_if_packed_info+0x588>
  44ba10:	ldr	x8, [x19, #64]
  44ba14:	ldr	x0, [x8, #24]
  44ba18:	add	x1, x19, #0x68
  44ba1c:	bl	40b2f0 <strstr@plt>
  44ba20:	cbz	x0, 44ba28 <dev_if_packed_info+0x794>
  44ba24:	b	44b81c <dev_if_packed_info+0x588>
  44ba28:	ldr	x8, [x19, #64]
  44ba2c:	ldr	x9, [x8, #24]
  44ba30:	ldr	w10, [x19, #284]
  44ba34:	mov	w11, w10
  44ba38:	ldr	x12, [x19, #104]
  44ba3c:	str	x12, [x9, x11]
  44ba40:	ldr	w10, [x19, #284]
  44ba44:	add	w10, w10, #0x7
  44ba48:	str	w10, [x19, #284]
  44ba4c:	b	44b81c <dev_if_packed_info+0x588>
  44ba50:	ldr	w8, [x19, #284]
  44ba54:	cmp	w8, #0x0
  44ba58:	cset	w8, ls  // ls = plast
  44ba5c:	tbnz	w8, #0, 44baac <dev_if_packed_info+0x818>
  44ba60:	ldr	x8, [x19, #64]
  44ba64:	ldr	x9, [x8, #24]
  44ba68:	ldr	w10, [x19, #284]
  44ba6c:	mov	w11, w10
  44ba70:	mov	w10, w11
  44ba74:	add	w10, w10, #0x1
  44ba78:	str	w10, [x19, #284]
  44ba7c:	add	x9, x9, x11
  44ba80:	mov	w10, #0x3a                  	// #58
  44ba84:	strb	w10, [x9]
  44ba88:	ldr	x9, [x8, #24]
  44ba8c:	ldr	w10, [x19, #284]
  44ba90:	mov	w11, w10
  44ba94:	mov	w10, w11
  44ba98:	add	w10, w10, #0x1
  44ba9c:	str	w10, [x19, #284]
  44baa0:	add	x9, x9, x11
  44baa4:	mov	w10, #0x0                   	// #0
  44baa8:	strb	w10, [x9]
  44baac:	ldr	x8, [x19, #64]
  44bab0:	str	wzr, [x8, #44]
  44bab4:	mov	w9, #0x1                   	// #1
  44bab8:	str	w9, [x19, #256]
  44babc:	sub	x0, x29, #0x24
  44bac0:	bl	44bee8 <closep>
  44bac4:	ldr	x8, [x19, #64]
  44bac8:	ldr	w0, [x8, #44]
  44bacc:	mov	sp, x29
  44bad0:	ldp	x28, x19, [sp, #16]
  44bad4:	ldp	x29, x30, [sp], #32
  44bad8:	ret

000000000044badc <set_usb_mass_storage_ifsubtype>:
  44badc:	sub	sp, sp, #0x50
  44bae0:	stp	x29, x30, [sp, #64]
  44bae4:	add	x29, sp, #0x40
  44bae8:	mov	w8, wzr
  44baec:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44baf0:	add	x9, x9, #0xd1e
  44baf4:	add	x10, sp, #0x18
  44baf8:	stur	x0, [x29, #-8]
  44bafc:	stur	x1, [x29, #-16]
  44bb00:	stur	x2, [x29, #-24]
  44bb04:	stur	wzr, [x29, #-28]
  44bb08:	str	x9, [sp, #16]
  44bb0c:	ldur	x0, [x29, #-16]
  44bb10:	mov	x1, x10
  44bb14:	mov	w2, w8
  44bb18:	bl	40b670 <strtoul@plt>
  44bb1c:	stur	w0, [x29, #-28]
  44bb20:	ldr	x9, [sp, #24]
  44bb24:	ldur	x10, [x29, #-16]
  44bb28:	cmp	x9, x10
  44bb2c:	b.eq	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>  // b.none
  44bb30:	ldur	w8, [x29, #-28]
  44bb34:	subs	w8, w8, #0x1
  44bb38:	mov	w9, w8
  44bb3c:	ubfx	x9, x9, #0, #32
  44bb40:	cmp	x9, #0x5
  44bb44:	str	x9, [sp, #8]
  44bb48:	b.hi	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>  // b.pmore
  44bb4c:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  44bb50:	add	x8, x8, #0x8a0
  44bb54:	ldr	x11, [sp, #8]
  44bb58:	ldrsw	x10, [x8, x11, lsl #2]
  44bb5c:	add	x9, x8, x10
  44bb60:	br	x9
  44bb64:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bb68:	add	x8, x8, #0xd26
  44bb6c:	str	x8, [sp, #16]
  44bb70:	b	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>
  44bb74:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bb78:	add	x8, x8, #0xd2a
  44bb7c:	str	x8, [sp, #16]
  44bb80:	b	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>
  44bb84:	adrp	x8, 46b000 <on_inotify.__assert_in_set+0x7540>
  44bb88:	add	x8, x8, #0xcc
  44bb8c:	str	x8, [sp, #16]
  44bb90:	b	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>
  44bb94:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bb98:	add	x8, x8, #0xd30
  44bb9c:	str	x8, [sp, #16]
  44bba0:	b	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>
  44bba4:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bba8:	add	x8, x8, #0x40e
  44bbac:	str	x8, [sp, #16]
  44bbb0:	b	44bbb4 <set_usb_mass_storage_ifsubtype+0xd8>
  44bbb4:	ldur	x0, [x29, #-8]
  44bbb8:	ldur	x1, [x29, #-24]
  44bbbc:	ldr	x2, [sp, #16]
  44bbc0:	bl	40adb0 <strscpy@plt>
  44bbc4:	ldur	w8, [x29, #-28]
  44bbc8:	mov	w0, w8
  44bbcc:	ldp	x29, x30, [sp, #64]
  44bbd0:	add	sp, sp, #0x50
  44bbd4:	ret

000000000044bbd8 <set_usb_iftype>:
  44bbd8:	sub	sp, sp, #0x40
  44bbdc:	stp	x29, x30, [sp, #48]
  44bbe0:	add	x29, sp, #0x30
  44bbe4:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bbe8:	add	x8, x8, #0xd1e
  44bbec:	stur	x0, [x29, #-8]
  44bbf0:	stur	w1, [x29, #-12]
  44bbf4:	str	x2, [sp, #24]
  44bbf8:	str	x8, [sp, #16]
  44bbfc:	ldur	w9, [x29, #-12]
  44bc00:	cmp	w9, #0x1
  44bc04:	str	w9, [sp, #12]
  44bc08:	b.eq	44bd00 <set_usb_iftype+0x128>  // b.none
  44bc0c:	b	44bc10 <set_usb_iftype+0x38>
  44bc10:	ldr	w8, [sp, #12]
  44bc14:	cmp	w8, #0x2
  44bc18:	b.eq	44bd10 <set_usb_iftype+0x138>  // b.none
  44bc1c:	b	44bc20 <set_usb_iftype+0x48>
  44bc20:	ldr	w8, [sp, #12]
  44bc24:	cmp	w8, #0x3
  44bc28:	b.eq	44bd14 <set_usb_iftype+0x13c>  // b.none
  44bc2c:	b	44bc30 <set_usb_iftype+0x58>
  44bc30:	ldr	w8, [sp, #12]
  44bc34:	cmp	w8, #0x5
  44bc38:	b.eq	44bd24 <set_usb_iftype+0x14c>  // b.none
  44bc3c:	b	44bc40 <set_usb_iftype+0x68>
  44bc40:	ldr	w8, [sp, #12]
  44bc44:	cmp	w8, #0x6
  44bc48:	b.eq	44bd28 <set_usb_iftype+0x150>  // b.none
  44bc4c:	b	44bc50 <set_usb_iftype+0x78>
  44bc50:	ldr	w8, [sp, #12]
  44bc54:	cmp	w8, #0x7
  44bc58:	b.eq	44bd38 <set_usb_iftype+0x160>  // b.none
  44bc5c:	b	44bc60 <set_usb_iftype+0x88>
  44bc60:	ldr	w8, [sp, #12]
  44bc64:	cmp	w8, #0x8
  44bc68:	b.eq	44bd48 <set_usb_iftype+0x170>  // b.none
  44bc6c:	b	44bc70 <set_usb_iftype+0x98>
  44bc70:	ldr	w8, [sp, #12]
  44bc74:	cmp	w8, #0x9
  44bc78:	b.eq	44bd58 <set_usb_iftype+0x180>  // b.none
  44bc7c:	b	44bc80 <set_usb_iftype+0xa8>
  44bc80:	ldr	w8, [sp, #12]
  44bc84:	cmp	w8, #0xa
  44bc88:	b.eq	44bd68 <set_usb_iftype+0x190>  // b.none
  44bc8c:	b	44bc90 <set_usb_iftype+0xb8>
  44bc90:	ldr	w8, [sp, #12]
  44bc94:	cmp	w8, #0xb
  44bc98:	b.eq	44bd6c <set_usb_iftype+0x194>  // b.none
  44bc9c:	b	44bca0 <set_usb_iftype+0xc8>
  44bca0:	ldr	w8, [sp, #12]
  44bca4:	cmp	w8, #0xd
  44bca8:	b.eq	44bd70 <set_usb_iftype+0x198>  // b.none
  44bcac:	b	44bcb0 <set_usb_iftype+0xd8>
  44bcb0:	ldr	w8, [sp, #12]
  44bcb4:	cmp	w8, #0xe
  44bcb8:	b.eq	44bd74 <set_usb_iftype+0x19c>  // b.none
  44bcbc:	b	44bcc0 <set_usb_iftype+0xe8>
  44bcc0:	ldr	w8, [sp, #12]
  44bcc4:	cmp	w8, #0xdc
  44bcc8:	b.eq	44bd84 <set_usb_iftype+0x1ac>  // b.none
  44bccc:	b	44bcd0 <set_usb_iftype+0xf8>
  44bcd0:	ldr	w8, [sp, #12]
  44bcd4:	cmp	w8, #0xe0
  44bcd8:	b.eq	44bd88 <set_usb_iftype+0x1b0>  // b.none
  44bcdc:	b	44bce0 <set_usb_iftype+0x108>
  44bce0:	ldr	w8, [sp, #12]
  44bce4:	cmp	w8, #0xfe
  44bce8:	b.eq	44bd8c <set_usb_iftype+0x1b4>  // b.none
  44bcec:	b	44bcf0 <set_usb_iftype+0x118>
  44bcf0:	ldr	w8, [sp, #12]
  44bcf4:	cmp	w8, #0xff
  44bcf8:	b.eq	44bd90 <set_usb_iftype+0x1b8>  // b.none
  44bcfc:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd00:	adrp	x8, 46a000 <on_inotify.__assert_in_set+0x6540>
  44bd04:	add	x8, x8, #0x226
  44bd08:	str	x8, [sp, #16]
  44bd0c:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd10:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd14:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bd18:	add	x8, x8, #0xd37
  44bd1c:	str	x8, [sp, #16]
  44bd20:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd24:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd28:	adrp	x8, 46a000 <on_inotify.__assert_in_set+0x6540>
  44bd2c:	add	x8, x8, #0x4a
  44bd30:	str	x8, [sp, #16]
  44bd34:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd38:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bd3c:	add	x8, x8, #0xd3b
  44bd40:	str	x8, [sp, #16]
  44bd44:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd48:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bd4c:	add	x8, x8, #0xd43
  44bd50:	str	x8, [sp, #16]
  44bd54:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd58:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bd5c:	add	x8, x8, #0xd4b
  44bd60:	str	x8, [sp, #16]
  44bd64:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd68:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd6c:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd70:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd74:	adrp	x8, 46a000 <on_inotify.__assert_in_set+0x6540>
  44bd78:	add	x8, x8, #0xdf3
  44bd7c:	str	x8, [sp, #16]
  44bd80:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd84:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd88:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd8c:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd90:	b	44bd94 <set_usb_iftype+0x1bc>
  44bd94:	ldur	x0, [x29, #-8]
  44bd98:	ldr	x1, [sp, #16]
  44bd9c:	ldr	x2, [sp, #24]
  44bda0:	bl	40b6f0 <strncpy@plt>
  44bda4:	ldur	x8, [x29, #-8]
  44bda8:	ldr	x9, [sp, #24]
  44bdac:	subs	x9, x9, #0x1
  44bdb0:	add	x8, x8, x9
  44bdb4:	mov	w10, #0x0                   	// #0
  44bdb8:	strb	w10, [x8]
  44bdbc:	ldp	x29, x30, [sp, #48]
  44bdc0:	add	sp, sp, #0x40
  44bdc4:	ret

000000000044bdc8 <set_scsi_type>:
  44bdc8:	sub	sp, sp, #0x50
  44bdcc:	stp	x29, x30, [sp, #64]
  44bdd0:	add	x29, sp, #0x40
  44bdd4:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44bdd8:	add	x8, x8, #0xd1e
  44bddc:	mov	w9, wzr
  44bde0:	add	x10, sp, #0x18
  44bde4:	stur	x0, [x29, #-8]
  44bde8:	stur	x1, [x29, #-16]
  44bdec:	stur	x2, [x29, #-24]
  44bdf0:	str	x8, [sp, #16]
  44bdf4:	ldur	x0, [x29, #-16]
  44bdf8:	mov	x1, x10
  44bdfc:	mov	w2, w9
  44be00:	bl	40b670 <strtoul@plt>
  44be04:	stur	w0, [x29, #-28]
  44be08:	ldr	x8, [sp, #24]
  44be0c:	ldur	x10, [x29, #-16]
  44be10:	cmp	x8, x10
  44be14:	b.eq	44be8c <set_scsi_type+0xc4>  // b.none
  44be18:	ldur	w8, [x29, #-28]
  44be1c:	subs	w8, w8, #0x0
  44be20:	mov	w9, w8
  44be24:	ubfx	x9, x9, #0, #32
  44be28:	cmp	x9, #0xf
  44be2c:	str	x9, [sp, #8]
  44be30:	b.hi	44be8c <set_scsi_type+0xc4>  // b.pmore
  44be34:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  44be38:	add	x8, x8, #0x8b8
  44be3c:	ldr	x11, [sp, #8]
  44be40:	ldrsw	x10, [x8, x11, lsl #2]
  44be44:	add	x9, x8, x10
  44be48:	br	x9
  44be4c:	adrp	x8, 465000 <on_inotify.__assert_in_set+0x1540>
  44be50:	add	x8, x8, #0x687
  44be54:	str	x8, [sp, #16]
  44be58:	b	44be8c <set_scsi_type+0xc4>
  44be5c:	adrp	x8, 46b000 <on_inotify.__assert_in_set+0x7540>
  44be60:	add	x8, x8, #0xcc
  44be64:	str	x8, [sp, #16]
  44be68:	b	44be8c <set_scsi_type+0xc4>
  44be6c:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44be70:	add	x8, x8, #0xd4f
  44be74:	str	x8, [sp, #16]
  44be78:	b	44be8c <set_scsi_type+0xc4>
  44be7c:	adrp	x8, 469000 <on_inotify.__assert_in_set+0x5540>
  44be80:	add	x8, x8, #0xe8b
  44be84:	str	x8, [sp, #16]
  44be88:	b	44be8c <set_scsi_type+0xc4>
  44be8c:	ldur	x0, [x29, #-8]
  44be90:	ldur	x1, [x29, #-24]
  44be94:	ldr	x2, [sp, #16]
  44be98:	bl	40adb0 <strscpy@plt>
  44be9c:	ldp	x29, x30, [sp, #64]
  44bea0:	add	sp, sp, #0x50
  44bea4:	ret

000000000044bea8 <isempty>:
  44bea8:	sub	sp, sp, #0x10
  44beac:	str	x0, [sp, #8]
  44beb0:	ldr	x8, [sp, #8]
  44beb4:	mov	w9, #0x1                   	// #1
  44beb8:	str	w9, [sp, #4]
  44bebc:	cbz	x8, 44bed8 <isempty+0x30>
  44bec0:	ldr	x8, [sp, #8]
  44bec4:	ldrb	w9, [x8]
  44bec8:	cmp	w9, #0x0
  44becc:	cset	w9, ne  // ne = any
  44bed0:	eor	w9, w9, #0x1
  44bed4:	str	w9, [sp, #4]
  44bed8:	ldr	w8, [sp, #4]
  44bedc:	and	w0, w8, #0x1
  44bee0:	add	sp, sp, #0x10
  44bee4:	ret

000000000044bee8 <closep>:
  44bee8:	sub	sp, sp, #0x20
  44beec:	stp	x29, x30, [sp, #16]
  44bef0:	add	x29, sp, #0x10
  44bef4:	str	x0, [sp, #8]
  44bef8:	ldr	x8, [sp, #8]
  44befc:	ldr	w0, [x8]
  44bf00:	bl	40a760 <safe_close@plt>
  44bf04:	ldp	x29, x30, [sp, #16]
  44bf08:	add	sp, sp, #0x20
  44bf0c:	ret

000000000044bf10 <size_multiply_overflow>:
  44bf10:	sub	sp, sp, #0x20
  44bf14:	str	x0, [sp, #24]
  44bf18:	str	x1, [sp, #16]
  44bf1c:	ldr	x8, [sp, #16]
  44bf20:	mov	w9, #0x0                   	// #0
  44bf24:	str	w9, [sp, #12]
  44bf28:	cbz	x8, 44bf48 <size_multiply_overflow+0x38>
  44bf2c:	ldr	x8, [sp, #24]
  44bf30:	ldr	x9, [sp, #16]
  44bf34:	mov	x10, #0xffffffffffffffff    	// #-1
  44bf38:	udiv	x9, x10, x9
  44bf3c:	cmp	x8, x9
  44bf40:	cset	w11, hi  // hi = pmore
  44bf44:	str	w11, [sp, #12]
  44bf48:	ldr	w8, [sp, #12]
  44bf4c:	mov	w9, #0x1                   	// #1
  44bf50:	eor	w8, w8, #0x1
  44bf54:	eor	w8, w8, w9
  44bf58:	and	w8, w8, #0x1
  44bf5c:	mov	w0, w8
  44bf60:	sxtw	x10, w0
  44bf64:	cmp	x10, #0x0
  44bf68:	cset	w8, ne  // ne = any
  44bf6c:	and	w0, w8, #0x1
  44bf70:	add	sp, sp, #0x20
  44bf74:	ret

000000000044bf78 <link_config_ctx_free>:
  44bf78:	sub	sp, sp, #0x20
  44bf7c:	stp	x29, x30, [sp, #16]
  44bf80:	add	x29, sp, #0x10
  44bf84:	str	x0, [sp, #8]
  44bf88:	ldr	x8, [sp, #8]
  44bf8c:	cbnz	x8, 44bf94 <link_config_ctx_free+0x1c>
  44bf90:	b	44bfc4 <link_config_ctx_free+0x4c>
  44bf94:	ldr	x8, [sp, #8]
  44bf98:	ldr	w0, [x8, #8]
  44bf9c:	bl	40a760 <safe_close@plt>
  44bfa0:	ldr	x8, [sp, #8]
  44bfa4:	ldr	x8, [x8, #16]
  44bfa8:	mov	x0, x8
  44bfac:	bl	40a750 <sd_netlink_unref@plt>
  44bfb0:	ldr	x8, [sp, #8]
  44bfb4:	mov	x0, x8
  44bfb8:	bl	44bfd0 <link_configs_free>
  44bfbc:	ldr	x0, [sp, #8]
  44bfc0:	bl	40a530 <free@plt>
  44bfc4:	ldp	x29, x30, [sp, #16]
  44bfc8:	add	sp, sp, #0x20
  44bfcc:	ret

000000000044bfd0 <link_configs_free>:
  44bfd0:	sub	sp, sp, #0x30
  44bfd4:	stp	x29, x30, [sp, #32]
  44bfd8:	add	x29, sp, #0x20
  44bfdc:	stur	x0, [x29, #-8]
  44bfe0:	ldur	x8, [x29, #-8]
  44bfe4:	cbnz	x8, 44bfec <link_configs_free+0x1c>
  44bfe8:	b	44c03c <link_configs_free+0x6c>
  44bfec:	ldur	x8, [x29, #-8]
  44bff0:	ldr	x8, [x8]
  44bff4:	str	x8, [sp, #16]
  44bff8:	ldr	x8, [sp, #16]
  44bffc:	mov	w9, #0x0                   	// #0
  44c000:	str	w9, [sp, #4]
  44c004:	cbz	x8, 44c01c <link_configs_free+0x4c>
  44c008:	ldr	x8, [sp, #16]
  44c00c:	ldr	x8, [x8, #208]
  44c010:	str	x8, [sp, #8]
  44c014:	mov	w9, #0x1                   	// #1
  44c018:	str	w9, [sp, #4]
  44c01c:	ldr	w8, [sp, #4]
  44c020:	tbnz	w8, #0, 44c028 <link_configs_free+0x58>
  44c024:	b	44c03c <link_configs_free+0x6c>
  44c028:	ldr	x0, [sp, #16]
  44c02c:	bl	44f860 <link_config_free>
  44c030:	ldr	x8, [sp, #8]
  44c034:	str	x8, [sp, #16]
  44c038:	b	44bff8 <link_configs_free+0x28>
  44c03c:	ldp	x29, x30, [sp, #32]
  44c040:	add	sp, sp, #0x30
  44c044:	ret

000000000044c048 <link_config_ctx_new>:
  44c048:	sub	sp, sp, #0x40
  44c04c:	stp	x29, x30, [sp, #48]
  44c050:	add	x29, sp, #0x30
  44c054:	mov	x8, xzr
  44c058:	stur	x0, [x29, #-16]
  44c05c:	str	x8, [sp, #24]
  44c060:	ldur	x8, [x29, #-16]
  44c064:	cbnz	x8, 44c07c <link_config_ctx_new+0x34>
  44c068:	mov	w8, #0xffffffea            	// #-22
  44c06c:	stur	w8, [x29, #-4]
  44c070:	mov	w8, #0x1                   	// #1
  44c074:	str	w8, [sp, #20]
  44c078:	b	44c0fc <link_config_ctx_new+0xb4>
  44c07c:	mov	x0, #0x1                   	// #1
  44c080:	mov	x1, #0x20                  	// #32
  44c084:	bl	40b780 <calloc@plt>
  44c088:	str	x0, [sp, #24]
  44c08c:	ldr	x8, [sp, #24]
  44c090:	cbnz	x8, 44c0a8 <link_config_ctx_new+0x60>
  44c094:	mov	w8, #0xfffffff4            	// #-12
  44c098:	stur	w8, [x29, #-4]
  44c09c:	mov	w8, #0x1                   	// #1
  44c0a0:	str	w8, [sp, #20]
  44c0a4:	b	44c0fc <link_config_ctx_new+0xb4>
  44c0a8:	ldr	x8, [sp, #24]
  44c0ac:	mov	x9, xzr
  44c0b0:	str	x9, [x8]
  44c0b4:	ldr	x8, [sp, #24]
  44c0b8:	mov	w9, #0xffffffff            	// #-1
  44c0bc:	str	w9, [x8, #8]
  44c0c0:	ldr	x8, [sp, #24]
  44c0c4:	mov	w9, #0x1                   	// #1
  44c0c8:	strb	w9, [x8, #12]
  44c0cc:	ldr	x8, [sp, #24]
  44c0d0:	str	x8, [sp, #8]
  44c0d4:	mov	x8, xzr
  44c0d8:	str	x8, [sp, #24]
  44c0dc:	ldr	x8, [sp, #8]
  44c0e0:	str	x8, [sp]
  44c0e4:	ldr	x8, [sp]
  44c0e8:	ldur	x10, [x29, #-16]
  44c0ec:	str	x8, [x10]
  44c0f0:	stur	wzr, [x29, #-4]
  44c0f4:	mov	w9, #0x1                   	// #1
  44c0f8:	str	w9, [sp, #20]
  44c0fc:	add	x0, sp, #0x18
  44c100:	bl	44c114 <link_config_ctx_freep>
  44c104:	ldur	w0, [x29, #-4]
  44c108:	ldp	x29, x30, [sp, #48]
  44c10c:	add	sp, sp, #0x40
  44c110:	ret

000000000044c114 <link_config_ctx_freep>:
  44c114:	sub	sp, sp, #0x20
  44c118:	stp	x29, x30, [sp, #16]
  44c11c:	add	x29, sp, #0x10
  44c120:	str	x0, [sp, #8]
  44c124:	ldr	x8, [sp, #8]
  44c128:	ldr	x8, [x8]
  44c12c:	cbz	x8, 44c13c <link_config_ctx_freep+0x28>
  44c130:	ldr	x8, [sp, #8]
  44c134:	ldr	x0, [x8]
  44c138:	bl	44bf78 <link_config_ctx_free>
  44c13c:	ldp	x29, x30, [sp, #16]
  44c140:	add	sp, sp, #0x20
  44c144:	ret

000000000044c148 <link_load_one>:
  44c148:	stp	x29, x30, [sp, #-32]!
  44c14c:	str	x28, [sp, #16]
  44c150:	mov	x29, sp
  44c154:	sub	sp, sp, #0x1e0
  44c158:	mov	x8, xzr
  44c15c:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c160:	add	x9, x9, #0xd5b
  44c164:	add	x9, x9, #0x3
  44c168:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c16c:	add	x10, x10, #0xdb5
  44c170:	adrp	x11, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c174:	add	x11, x11, #0xd79
  44c178:	stur	x0, [x29, #-16]
  44c17c:	stur	x1, [x29, #-24]
  44c180:	stur	x8, [x29, #-32]
  44c184:	stur	x8, [x29, #-40]
  44c188:	stur	x8, [x29, #-48]
  44c18c:	str	x9, [sp, #72]
  44c190:	str	x10, [sp, #64]
  44c194:	str	x11, [sp, #56]
  44c198:	ldur	x8, [x29, #-16]
  44c19c:	cmp	x8, #0x0
  44c1a0:	cset	w9, ne  // ne = any
  44c1a4:	mov	w10, #0x1                   	// #1
  44c1a8:	eor	w9, w9, #0x1
  44c1ac:	eor	w9, w9, w10
  44c1b0:	eor	w9, w9, w10
  44c1b4:	and	w9, w9, #0x1
  44c1b8:	mov	w0, w9
  44c1bc:	sxtw	x8, w0
  44c1c0:	cbz	x8, 44c1e0 <link_load_one+0x98>
  44c1c4:	mov	w0, #0x1                   	// #1
  44c1c8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c1cc:	add	x1, x1, #0xd57
  44c1d0:	ldr	x2, [sp, #72]
  44c1d4:	mov	w3, #0x79                  	// #121
  44c1d8:	ldr	x4, [sp, #56]
  44c1dc:	bl	40a540 <log_assert_failed_realm@plt>
  44c1e0:	ldur	x8, [x29, #-24]
  44c1e4:	cmp	x8, #0x0
  44c1e8:	cset	w9, ne  // ne = any
  44c1ec:	mov	w10, #0x1                   	// #1
  44c1f0:	eor	w9, w9, #0x1
  44c1f4:	eor	w9, w9, w10
  44c1f8:	eor	w9, w9, w10
  44c1fc:	and	w9, w9, #0x1
  44c200:	mov	w0, w9
  44c204:	sxtw	x8, w0
  44c208:	cbz	x8, 44c228 <link_load_one+0xe0>
  44c20c:	mov	w0, #0x1                   	// #1
  44c210:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c214:	add	x1, x1, #0xdac
  44c218:	ldr	x2, [sp, #72]
  44c21c:	mov	w3, #0x7a                  	// #122
  44c220:	ldr	x4, [sp, #56]
  44c224:	bl	40a540 <log_assert_failed_realm@plt>
  44c228:	ldur	x0, [x29, #-24]
  44c22c:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  44c230:	add	x1, x1, #0x65b
  44c234:	bl	40b260 <fopen64@plt>
  44c238:	stur	x0, [x29, #-40]
  44c23c:	ldur	x8, [x29, #-40]
  44c240:	cbnz	x8, 44c288 <link_load_one+0x140>
  44c244:	bl	40a480 <__errno_location@plt>
  44c248:	ldr	w8, [x0]
  44c24c:	cmp	w8, #0x2
  44c250:	b.ne	44c260 <link_load_one+0x118>  // b.any
  44c254:	mov	w8, wzr
  44c258:	str	w8, [sp, #52]
  44c25c:	b	44c274 <link_load_one+0x12c>
  44c260:	bl	40a480 <__errno_location@plt>
  44c264:	ldr	w8, [x0]
  44c268:	mov	w9, wzr
  44c26c:	subs	w8, w9, w8
  44c270:	str	w8, [sp, #52]
  44c274:	ldr	w8, [sp, #52]
  44c278:	stur	w8, [x29, #-4]
  44c27c:	mov	w8, #0x1                   	// #1
  44c280:	stur	w8, [x29, #-64]
  44c284:	b	44c784 <link_load_one+0x63c>
  44c288:	ldur	x0, [x29, #-40]
  44c28c:	bl	40b270 <fileno@plt>
  44c290:	bl	40b290 <null_or_empty_fd@plt>
  44c294:	cbz	w0, 44c324 <link_load_one+0x1dc>
  44c298:	mov	w8, #0x7                   	// #7
  44c29c:	stur	w8, [x29, #-68]
  44c2a0:	stur	wzr, [x29, #-72]
  44c2a4:	mov	w8, #0x1                   	// #1
  44c2a8:	stur	w8, [x29, #-76]
  44c2ac:	ldur	w0, [x29, #-76]
  44c2b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44c2b4:	ldur	w8, [x29, #-68]
  44c2b8:	and	w8, w8, #0x7
  44c2bc:	cmp	w0, w8
  44c2c0:	b.lt	44c2f8 <link_load_one+0x1b0>  // b.tstop
  44c2c4:	ldur	w8, [x29, #-76]
  44c2c8:	ldur	w9, [x29, #-68]
  44c2cc:	orr	w0, w9, w8, lsl #10
  44c2d0:	ldur	w1, [x29, #-72]
  44c2d4:	ldur	x6, [x29, #-24]
  44c2d8:	ldr	x2, [sp, #72]
  44c2dc:	mov	w3, #0x81                  	// #129
  44c2e0:	ldr	x4, [sp, #64]
  44c2e4:	adrp	x5, 467000 <on_inotify.__assert_in_set+0x3540>
  44c2e8:	add	x5, x5, #0x669
  44c2ec:	bl	40a400 <log_internal_realm@plt>
  44c2f0:	str	w0, [sp, #48]
  44c2f4:	b	44c30c <link_load_one+0x1c4>
  44c2f8:	ldur	w0, [x29, #-72]
  44c2fc:	bl	40a410 <abs@plt>
  44c300:	mov	w8, wzr
  44c304:	subs	w8, w8, w0, uxtb
  44c308:	str	w8, [sp, #48]
  44c30c:	ldr	w8, [sp, #48]
  44c310:	stur	w8, [x29, #-80]
  44c314:	stur	wzr, [x29, #-4]
  44c318:	mov	w8, #0x1                   	// #1
  44c31c:	stur	w8, [x29, #-64]
  44c320:	b	44c784 <link_load_one+0x63c>
  44c324:	ldur	x0, [x29, #-24]
  44c328:	bl	40a910 <strdup@plt>
  44c32c:	stur	x0, [x29, #-48]
  44c330:	ldur	x8, [x29, #-48]
  44c334:	cbnz	x8, 44c34c <link_load_one+0x204>
  44c338:	mov	w8, #0xfffffff4            	// #-12
  44c33c:	stur	w8, [x29, #-4]
  44c340:	mov	w8, #0x1                   	// #1
  44c344:	stur	w8, [x29, #-64]
  44c348:	b	44c784 <link_load_one+0x63c>
  44c34c:	mov	x0, #0xe0                  	// #224
  44c350:	mov	x1, #0x1                   	// #1
  44c354:	bl	44c834 <malloc_multiply>
  44c358:	stur	x0, [x29, #-32]
  44c35c:	ldur	x8, [x29, #-32]
  44c360:	cbnz	x8, 44c378 <link_load_one+0x230>
  44c364:	mov	w8, #0xfffffff4            	// #-12
  44c368:	stur	w8, [x29, #-4]
  44c36c:	mov	w8, #0x1                   	// #1
  44c370:	stur	w8, [x29, #-64]
  44c374:	b	44c784 <link_load_one+0x63c>
  44c378:	ldur	x0, [x29, #-32]
  44c37c:	add	x8, sp, #0xb0
  44c380:	str	x0, [sp, #40]
  44c384:	mov	x0, x8
  44c388:	mov	w9, wzr
  44c38c:	mov	w1, w9
  44c390:	mov	x10, #0xe0                  	// #224
  44c394:	mov	x2, x10
  44c398:	str	x8, [sp, #32]
  44c39c:	str	x10, [sp, #24]
  44c3a0:	bl	40a5f0 <memset@plt>
  44c3a4:	ldur	x8, [x29, #-48]
  44c3a8:	str	x8, [sp, #168]
  44c3ac:	mov	x8, xzr
  44c3b0:	stur	x8, [x29, #-48]
  44c3b4:	ldr	x8, [sp, #168]
  44c3b8:	str	x8, [sp, #160]
  44c3bc:	ldr	x8, [sp, #160]
  44c3c0:	str	x8, [sp, #176]
  44c3c4:	mov	w9, #0xffffffff            	// #-1
  44c3c8:	str	w9, [sp, #256]
  44c3cc:	str	w9, [sp, #304]
  44c3d0:	str	w9, [sp, #308]
  44c3d4:	str	w9, [sp, #324]
  44c3d8:	str	w9, [sp, #328]
  44c3dc:	ldr	x0, [sp, #40]
  44c3e0:	ldr	x1, [sp, #32]
  44c3e4:	ldr	x2, [sp, #24]
  44c3e8:	bl	40a600 <memcpy@plt>
  44c3ec:	stur	xzr, [x29, #-56]
  44c3f0:	ldur	x8, [x29, #-56]
  44c3f4:	cmp	x8, #0x5
  44c3f8:	b.cs	44c420 <link_load_one+0x2d8>  // b.hs, b.nlast
  44c3fc:	ldur	x8, [x29, #-32]
  44c400:	add	x8, x8, #0x9c
  44c404:	ldur	x9, [x29, #-56]
  44c408:	mov	w10, #0xffffffff            	// #-1
  44c40c:	str	w10, [x8, x9, lsl #2]
  44c410:	ldur	x8, [x29, #-56]
  44c414:	add	x8, x8, #0x1
  44c418:	stur	x8, [x29, #-56]
  44c41c:	b	44c3f0 <link_load_one+0x2a8>
  44c420:	ldur	x1, [x29, #-24]
  44c424:	ldur	x2, [x29, #-40]
  44c428:	ldur	x7, [x29, #-32]
  44c42c:	mov	x8, xzr
  44c430:	mov	x0, x8
  44c434:	adrp	x3, 472000 <on_inotify.__assert_in_set+0xe540>
  44c438:	add	x3, x3, #0x93c
  44c43c:	adrp	x4, 49f000 <_DYNAMIC+0x1d0>
  44c440:	ldr	x4, [x4, #216]
  44c444:	adrp	x5, 49f000 <_DYNAMIC+0x1d0>
  44c448:	ldr	x5, [x5, #224]
  44c44c:	mov	w6, #0x4                   	// #4
  44c450:	bl	40b790 <config_parse@plt>
  44c454:	stur	w0, [x29, #-60]
  44c458:	ldur	w9, [x29, #-60]
  44c45c:	cmp	w9, #0x0
  44c460:	cset	w9, ge  // ge = tcont
  44c464:	tbnz	w9, #0, 44c47c <link_load_one+0x334>
  44c468:	ldur	w8, [x29, #-60]
  44c46c:	stur	w8, [x29, #-4]
  44c470:	mov	w8, #0x1                   	// #1
  44c474:	stur	w8, [x29, #-64]
  44c478:	b	44c784 <link_load_one+0x63c>
  44c47c:	ldur	x8, [x29, #-32]
  44c480:	ldr	x8, [x8, #120]
  44c484:	mov	x9, #0xffffffff            	// #4294967295
  44c488:	cmp	x8, x9
  44c48c:	b.ls	44c4a4 <link_load_one+0x35c>  // b.plast
  44c490:	mov	w8, #0xffffffde            	// #-34
  44c494:	stur	w8, [x29, #-4]
  44c498:	mov	w8, #0x1                   	// #1
  44c49c:	stur	w8, [x29, #-64]
  44c4a0:	b	44c784 <link_load_one+0x63c>
  44c4a4:	ldur	x8, [x29, #-32]
  44c4a8:	ldr	x0, [x8, #8]
  44c4ac:	bl	44c8b0 <set_isempty>
  44c4b0:	tbnz	w0, #0, 44c4b8 <link_load_one+0x370>
  44c4b4:	b	44c5a4 <link_load_one+0x45c>
  44c4b8:	ldur	x8, [x29, #-32]
  44c4bc:	ldr	x0, [x8, #16]
  44c4c0:	bl	44c8e0 <strv_isempty>
  44c4c4:	tbnz	w0, #0, 44c4cc <link_load_one+0x384>
  44c4c8:	b	44c5a4 <link_load_one+0x45c>
  44c4cc:	ldur	x8, [x29, #-32]
  44c4d0:	ldr	x0, [x8, #24]
  44c4d4:	bl	44c8e0 <strv_isempty>
  44c4d8:	tbnz	w0, #0, 44c4e0 <link_load_one+0x398>
  44c4dc:	b	44c5a4 <link_load_one+0x45c>
  44c4e0:	ldur	x8, [x29, #-32]
  44c4e4:	ldr	x0, [x8, #32]
  44c4e8:	bl	44c8e0 <strv_isempty>
  44c4ec:	tbnz	w0, #0, 44c4f4 <link_load_one+0x3ac>
  44c4f0:	b	44c5a4 <link_load_one+0x45c>
  44c4f4:	ldur	x8, [x29, #-32]
  44c4f8:	ldr	x0, [x8, #40]
  44c4fc:	bl	44c8e0 <strv_isempty>
  44c500:	tbnz	w0, #0, 44c508 <link_load_one+0x3c0>
  44c504:	b	44c5a4 <link_load_one+0x45c>
  44c508:	ldur	x8, [x29, #-32]
  44c50c:	ldr	x0, [x8, #48]
  44c510:	bl	44c8e0 <strv_isempty>
  44c514:	tbnz	w0, #0, 44c51c <link_load_one+0x3d4>
  44c518:	b	44c5a4 <link_load_one+0x45c>
  44c51c:	ldur	x8, [x29, #-32]
  44c520:	ldr	x8, [x8, #56]
  44c524:	cbnz	x8, 44c5a4 <link_load_one+0x45c>
  44c528:	mov	w8, #0x4                   	// #4
  44c52c:	str	w8, [sp, #156]
  44c530:	str	wzr, [sp, #152]
  44c534:	mov	w8, #0x1                   	// #1
  44c538:	str	w8, [sp, #148]
  44c53c:	ldr	w0, [sp, #148]
  44c540:	bl	40a3f0 <log_get_max_level_realm@plt>
  44c544:	ldr	w8, [sp, #156]
  44c548:	and	w8, w8, #0x7
  44c54c:	cmp	w0, w8
  44c550:	b.lt	44c588 <link_load_one+0x440>  // b.tstop
  44c554:	ldr	w8, [sp, #148]
  44c558:	ldr	w9, [sp, #156]
  44c55c:	orr	w0, w9, w8, lsl #10
  44c560:	ldr	w1, [sp, #152]
  44c564:	ldur	x6, [x29, #-24]
  44c568:	ldr	x2, [sp, #72]
  44c56c:	mov	w3, #0xa9                  	// #169
  44c570:	ldr	x4, [sp, #64]
  44c574:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c578:	add	x5, x5, #0xdc3
  44c57c:	bl	40a400 <log_internal_realm@plt>
  44c580:	str	w0, [sp, #20]
  44c584:	b	44c59c <link_load_one+0x454>
  44c588:	ldr	w0, [sp, #152]
  44c58c:	bl	40a410 <abs@plt>
  44c590:	mov	w8, wzr
  44c594:	subs	w8, w8, w0, uxtb
  44c598:	str	w8, [sp, #20]
  44c59c:	ldr	w8, [sp, #20]
  44c5a0:	str	w8, [sp, #144]
  44c5a4:	ldur	x8, [x29, #-32]
  44c5a8:	ldr	x0, [x8, #56]
  44c5ac:	mov	x8, xzr
  44c5b0:	mov	x1, x8
  44c5b4:	mov	x2, x8
  44c5b8:	mov	x3, x8
  44c5bc:	bl	40b7a0 <condition_test_list@plt>
  44c5c0:	tbnz	w0, #0, 44c650 <link_load_one+0x508>
  44c5c4:	mov	w8, #0x7                   	// #7
  44c5c8:	str	w8, [sp, #140]
  44c5cc:	str	wzr, [sp, #136]
  44c5d0:	mov	w8, #0x1                   	// #1
  44c5d4:	str	w8, [sp, #132]
  44c5d8:	ldr	w0, [sp, #132]
  44c5dc:	bl	40a3f0 <log_get_max_level_realm@plt>
  44c5e0:	ldr	w8, [sp, #140]
  44c5e4:	and	w8, w8, #0x7
  44c5e8:	cmp	w0, w8
  44c5ec:	b.lt	44c624 <link_load_one+0x4dc>  // b.tstop
  44c5f0:	ldr	w8, [sp, #132]
  44c5f4:	ldr	w9, [sp, #140]
  44c5f8:	orr	w0, w9, w8, lsl #10
  44c5fc:	ldr	w1, [sp, #136]
  44c600:	ldur	x6, [x29, #-24]
  44c604:	ldr	x2, [sp, #72]
  44c608:	mov	w3, #0xac                  	// #172
  44c60c:	ldr	x4, [sp, #64]
  44c610:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c614:	add	x5, x5, #0xe62
  44c618:	bl	40a400 <log_internal_realm@plt>
  44c61c:	str	w0, [sp, #16]
  44c620:	b	44c638 <link_load_one+0x4f0>
  44c624:	ldr	w0, [sp, #136]
  44c628:	bl	40a410 <abs@plt>
  44c62c:	mov	w8, wzr
  44c630:	subs	w8, w8, w0, uxtb
  44c634:	str	w8, [sp, #16]
  44c638:	ldr	w8, [sp, #16]
  44c63c:	str	w8, [sp, #128]
  44c640:	stur	wzr, [x29, #-4]
  44c644:	mov	w8, #0x1                   	// #1
  44c648:	stur	w8, [x29, #-64]
  44c64c:	b	44c784 <link_load_one+0x63c>
  44c650:	mov	w8, #0x7                   	// #7
  44c654:	str	w8, [sp, #124]
  44c658:	str	wzr, [sp, #120]
  44c65c:	mov	w8, #0x1                   	// #1
  44c660:	str	w8, [sp, #116]
  44c664:	ldr	w0, [sp, #116]
  44c668:	bl	40a3f0 <log_get_max_level_realm@plt>
  44c66c:	ldr	w8, [sp, #124]
  44c670:	and	w8, w8, #0x7
  44c674:	cmp	w0, w8
  44c678:	b.lt	44c6b0 <link_load_one+0x568>  // b.tstop
  44c67c:	ldr	w8, [sp, #116]
  44c680:	ldr	w9, [sp, #124]
  44c684:	orr	w0, w9, w8, lsl #10
  44c688:	ldr	w1, [sp, #120]
  44c68c:	ldur	x6, [x29, #-24]
  44c690:	ldr	x2, [sp, #72]
  44c694:	mov	w3, #0xb0                  	// #176
  44c698:	ldr	x4, [sp, #64]
  44c69c:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c6a0:	add	x5, x5, #0xea0
  44c6a4:	bl	40a400 <log_internal_realm@plt>
  44c6a8:	str	w0, [sp, #12]
  44c6ac:	b	44c6c4 <link_load_one+0x57c>
  44c6b0:	ldr	w0, [sp, #120]
  44c6b4:	bl	40a410 <abs@plt>
  44c6b8:	mov	w8, wzr
  44c6bc:	subs	w8, w8, w0, uxtb
  44c6c0:	str	w8, [sp, #12]
  44c6c4:	ldr	w8, [sp, #12]
  44c6c8:	str	w8, [sp, #112]
  44c6cc:	ldur	x8, [x29, #-16]
  44c6d0:	str	x8, [sp, #104]
  44c6d4:	ldur	x8, [x29, #-32]
  44c6d8:	str	x8, [sp, #88]
  44c6dc:	mov	x8, xzr
  44c6e0:	stur	x8, [x29, #-32]
  44c6e4:	ldr	x8, [sp, #88]
  44c6e8:	str	x8, [sp, #80]
  44c6ec:	ldr	x8, [sp, #80]
  44c6f0:	str	x8, [sp, #96]
  44c6f4:	ldr	x8, [sp, #96]
  44c6f8:	cmp	x8, #0x0
  44c6fc:	cset	w9, ne  // ne = any
  44c700:	mov	w10, #0x1                   	// #1
  44c704:	eor	w9, w9, #0x1
  44c708:	eor	w9, w9, w10
  44c70c:	eor	w9, w9, w10
  44c710:	and	w9, w9, #0x1
  44c714:	mov	w0, w9
  44c718:	sxtw	x8, w0
  44c71c:	cbz	x8, 44c73c <link_load_one+0x5f4>
  44c720:	mov	w0, #0x1                   	// #1
  44c724:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  44c728:	add	x1, x1, #0xd16
  44c72c:	ldr	x2, [sp, #72]
  44c730:	mov	w3, #0xb2                  	// #178
  44c734:	ldr	x4, [sp, #56]
  44c738:	bl	40a540 <log_assert_failed_realm@plt>
  44c73c:	ldr	x8, [sp, #104]
  44c740:	ldr	x8, [x8]
  44c744:	ldr	x9, [sp, #96]
  44c748:	str	x8, [x9, #208]
  44c74c:	cbz	x8, 44c760 <link_load_one+0x618>
  44c750:	ldr	x8, [sp, #96]
  44c754:	ldr	x9, [sp, #96]
  44c758:	ldr	x9, [x9, #208]
  44c75c:	str	x8, [x9, #216]
  44c760:	ldr	x8, [sp, #96]
  44c764:	mov	x9, xzr
  44c768:	str	x9, [x8, #216]
  44c76c:	ldr	x8, [sp, #96]
  44c770:	ldr	x9, [sp, #104]
  44c774:	str	x8, [x9]
  44c778:	stur	wzr, [x29, #-4]
  44c77c:	mov	w8, #0x1                   	// #1
  44c780:	stur	w8, [x29, #-64]
  44c784:	sub	x0, x29, #0x30
  44c788:	bl	44c80c <freep>
  44c78c:	sub	x0, x29, #0x28
  44c790:	bl	44c7e4 <fclosep>
  44c794:	sub	x0, x29, #0x20
  44c798:	bl	44c7b0 <link_config_freep>
  44c79c:	ldur	w0, [x29, #-4]
  44c7a0:	add	sp, sp, #0x1e0
  44c7a4:	ldr	x28, [sp, #16]
  44c7a8:	ldp	x29, x30, [sp], #32
  44c7ac:	ret

000000000044c7b0 <link_config_freep>:
  44c7b0:	sub	sp, sp, #0x20
  44c7b4:	stp	x29, x30, [sp, #16]
  44c7b8:	add	x29, sp, #0x10
  44c7bc:	str	x0, [sp, #8]
  44c7c0:	ldr	x8, [sp, #8]
  44c7c4:	ldr	x8, [x8]
  44c7c8:	cbz	x8, 44c7d8 <link_config_freep+0x28>
  44c7cc:	ldr	x8, [sp, #8]
  44c7d0:	ldr	x0, [x8]
  44c7d4:	bl	44f860 <link_config_free>
  44c7d8:	ldp	x29, x30, [sp, #16]
  44c7dc:	add	sp, sp, #0x20
  44c7e0:	ret

000000000044c7e4 <fclosep>:
  44c7e4:	sub	sp, sp, #0x20
  44c7e8:	stp	x29, x30, [sp, #16]
  44c7ec:	add	x29, sp, #0x10
  44c7f0:	str	x0, [sp, #8]
  44c7f4:	ldr	x8, [sp, #8]
  44c7f8:	ldr	x0, [x8]
  44c7fc:	bl	40b2c0 <safe_fclose@plt>
  44c800:	ldp	x29, x30, [sp, #16]
  44c804:	add	sp, sp, #0x20
  44c808:	ret

000000000044c80c <freep>:
  44c80c:	sub	sp, sp, #0x20
  44c810:	stp	x29, x30, [sp, #16]
  44c814:	add	x29, sp, #0x10
  44c818:	str	x0, [sp, #8]
  44c81c:	ldr	x8, [sp, #8]
  44c820:	ldr	x0, [x8]
  44c824:	bl	40a530 <free@plt>
  44c828:	ldp	x29, x30, [sp, #16]
  44c82c:	add	sp, sp, #0x20
  44c830:	ret

000000000044c834 <malloc_multiply>:
  44c834:	sub	sp, sp, #0x40
  44c838:	stp	x29, x30, [sp, #48]
  44c83c:	add	x29, sp, #0x30
  44c840:	stur	x0, [x29, #-16]
  44c844:	str	x1, [sp, #24]
  44c848:	ldur	x0, [x29, #-16]
  44c84c:	ldr	x1, [sp, #24]
  44c850:	bl	44f9a4 <size_multiply_overflow>
  44c854:	tbnz	w0, #0, 44c85c <malloc_multiply+0x28>
  44c858:	b	44c868 <malloc_multiply+0x34>
  44c85c:	mov	x8, xzr
  44c860:	stur	x8, [x29, #-8]
  44c864:	b	44c8a0 <malloc_multiply+0x6c>
  44c868:	ldur	x8, [x29, #-16]
  44c86c:	ldr	x9, [sp, #24]
  44c870:	mul	x8, x8, x9
  44c874:	str	x8, [sp, #16]
  44c878:	cbz	x8, 44c888 <malloc_multiply+0x54>
  44c87c:	ldr	x8, [sp, #16]
  44c880:	str	x8, [sp, #8]
  44c884:	b	44c890 <malloc_multiply+0x5c>
  44c888:	mov	x8, #0x1                   	// #1
  44c88c:	str	x8, [sp, #8]
  44c890:	ldr	x8, [sp, #8]
  44c894:	mov	x0, x8
  44c898:	bl	40a820 <malloc@plt>
  44c89c:	stur	x0, [x29, #-8]
  44c8a0:	ldur	x0, [x29, #-8]
  44c8a4:	ldp	x29, x30, [sp, #48]
  44c8a8:	add	sp, sp, #0x40
  44c8ac:	ret

000000000044c8b0 <set_isempty>:
  44c8b0:	sub	sp, sp, #0x20
  44c8b4:	stp	x29, x30, [sp, #16]
  44c8b8:	add	x29, sp, #0x10
  44c8bc:	str	x0, [sp, #8]
  44c8c0:	ldr	x0, [sp, #8]
  44c8c4:	bl	44fa0c <set_size>
  44c8c8:	cmp	w0, #0x0
  44c8cc:	cset	w8, eq  // eq = none
  44c8d0:	and	w0, w8, #0x1
  44c8d4:	ldp	x29, x30, [sp, #16]
  44c8d8:	add	sp, sp, #0x20
  44c8dc:	ret

000000000044c8e0 <strv_isempty>:
  44c8e0:	sub	sp, sp, #0x10
  44c8e4:	str	x0, [sp, #8]
  44c8e8:	ldr	x8, [sp, #8]
  44c8ec:	mov	w9, #0x1                   	// #1
  44c8f0:	str	w9, [sp, #4]
  44c8f4:	cbz	x8, 44c910 <strv_isempty+0x30>
  44c8f8:	ldr	x8, [sp, #8]
  44c8fc:	ldr	x8, [x8]
  44c900:	cmp	x8, #0x0
  44c904:	cset	w9, ne  // ne = any
  44c908:	eor	w9, w9, #0x1
  44c90c:	str	w9, [sp, #4]
  44c910:	ldr	w8, [sp, #4]
  44c914:	and	w0, w8, #0x1
  44c918:	add	sp, sp, #0x10
  44c91c:	ret

000000000044c920 <link_config_load>:
  44c920:	sub	sp, sp, #0x140
  44c924:	stp	x29, x30, [sp, #288]
  44c928:	str	x28, [sp, #304]
  44c92c:	add	x29, sp, #0x120
  44c930:	adrp	x8, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c934:	add	x8, x8, #0xd5b
  44c938:	add	x8, x8, #0x3
  44c93c:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c940:	add	x9, x9, #0xebd
  44c944:	stur	x0, [x29, #-16]
  44c948:	ldur	x0, [x29, #-16]
  44c94c:	str	x8, [sp, #72]
  44c950:	str	x9, [sp, #64]
  44c954:	bl	44bfd0 <link_configs_free>
  44c958:	bl	44cca4 <enable_name_policy>
  44c95c:	tbnz	w0, #0, 44c9e4 <link_config_load+0xc4>
  44c960:	ldur	x8, [x29, #-16]
  44c964:	mov	w9, #0x0                   	// #0
  44c968:	strb	w9, [x8, #12]
  44c96c:	mov	w9, #0x6                   	// #6
  44c970:	stur	w9, [x29, #-40]
  44c974:	stur	wzr, [x29, #-44]
  44c978:	mov	w9, #0x1                   	// #1
  44c97c:	stur	w9, [x29, #-48]
  44c980:	ldur	w0, [x29, #-48]
  44c984:	bl	40a3f0 <log_get_max_level_realm@plt>
  44c988:	ldur	w9, [x29, #-40]
  44c98c:	and	w9, w9, #0x7
  44c990:	cmp	w0, w9
  44c994:	b.lt	44c9c8 <link_config_load+0xa8>  // b.tstop
  44c998:	ldur	w8, [x29, #-48]
  44c99c:	ldur	w9, [x29, #-40]
  44c9a0:	orr	w0, w9, w8, lsl #10
  44c9a4:	ldur	w1, [x29, #-44]
  44c9a8:	ldr	x2, [sp, #72]
  44c9ac:	mov	w3, #0xd5                  	// #213
  44c9b0:	ldr	x4, [sp, #64]
  44c9b4:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44c9b8:	add	x5, x5, #0xece
  44c9bc:	bl	40a400 <log_internal_realm@plt>
  44c9c0:	str	w0, [sp, #60]
  44c9c4:	b	44c9dc <link_config_load+0xbc>
  44c9c8:	ldur	w0, [x29, #-44]
  44c9cc:	bl	40a410 <abs@plt>
  44c9d0:	mov	w8, wzr
  44c9d4:	subs	w8, w8, w0, uxtb
  44c9d8:	str	w8, [sp, #60]
  44c9dc:	ldr	w8, [sp, #60]
  44c9e0:	stur	w8, [x29, #-52]
  44c9e4:	sub	x8, x29, #0x68
  44c9e8:	mov	x0, x8
  44c9ec:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  44c9f0:	add	x1, x1, #0x180
  44c9f4:	mov	x9, #0x30                  	// #48
  44c9f8:	mov	x2, x9
  44c9fc:	str	x8, [sp, #48]
  44ca00:	str	x9, [sp, #40]
  44ca04:	bl	40a600 <memcpy@plt>
  44ca08:	ldur	x8, [x29, #-16]
  44ca0c:	add	x1, x8, #0x18
  44ca10:	ldr	x0, [sp, #48]
  44ca14:	mov	w10, #0x1                   	// #1
  44ca18:	and	w2, w10, #0x1
  44ca1c:	bl	40b250 <paths_check_timestamp@plt>
  44ca20:	add	x8, sp, #0x88
  44ca24:	mov	x0, x8
  44ca28:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  44ca2c:	add	x1, x1, #0x1b0
  44ca30:	ldr	x2, [sp, #40]
  44ca34:	str	x8, [sp, #32]
  44ca38:	bl	40a600 <memcpy@plt>
  44ca3c:	sub	x0, x29, #0x18
  44ca40:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44ca44:	add	x1, x1, #0xf8e
  44ca48:	mov	x8, xzr
  44ca4c:	mov	x2, x8
  44ca50:	mov	w10, wzr
  44ca54:	mov	w3, w10
  44ca58:	ldr	x4, [sp, #32]
  44ca5c:	bl	40b240 <conf_files_list_strv@plt>
  44ca60:	stur	w0, [x29, #-36]
  44ca64:	ldur	w10, [x29, #-36]
  44ca68:	cmp	w10, #0x0
  44ca6c:	cset	w10, ge  // ge = tcont
  44ca70:	tbnz	w10, #0, 44cb04 <link_config_load+0x1e4>
  44ca74:	mov	w8, #0x3                   	// #3
  44ca78:	str	w8, [sp, #132]
  44ca7c:	ldur	w8, [x29, #-36]
  44ca80:	str	w8, [sp, #128]
  44ca84:	mov	w8, #0x1                   	// #1
  44ca88:	str	w8, [sp, #124]
  44ca8c:	ldr	w0, [sp, #124]
  44ca90:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ca94:	ldr	w8, [sp, #132]
  44ca98:	and	w8, w8, #0x7
  44ca9c:	cmp	w0, w8
  44caa0:	b.lt	44cad4 <link_config_load+0x1b4>  // b.tstop
  44caa4:	ldr	w8, [sp, #124]
  44caa8:	ldr	w9, [sp, #132]
  44caac:	orr	w0, w9, w8, lsl #10
  44cab0:	ldr	w1, [sp, #128]
  44cab4:	ldr	x2, [sp, #72]
  44cab8:	mov	w3, #0xdd                  	// #221
  44cabc:	ldr	x4, [sp, #64]
  44cac0:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44cac4:	add	x5, x5, #0xf94
  44cac8:	bl	40a400 <log_internal_realm@plt>
  44cacc:	str	w0, [sp, #28]
  44cad0:	b	44cae8 <link_config_load+0x1c8>
  44cad4:	ldr	w0, [sp, #128]
  44cad8:	bl	40a410 <abs@plt>
  44cadc:	mov	w8, wzr
  44cae0:	subs	w8, w8, w0, uxtb
  44cae4:	str	w8, [sp, #28]
  44cae8:	ldr	w8, [sp, #28]
  44caec:	str	w8, [sp, #120]
  44caf0:	ldr	w8, [sp, #120]
  44caf4:	stur	w8, [x29, #-4]
  44caf8:	mov	w8, #0x1                   	// #1
  44cafc:	str	w8, [sp, #116]
  44cb00:	b	44cc54 <link_config_load+0x334>
  44cb04:	ldur	x8, [x29, #-24]
  44cb08:	str	x8, [sp, #104]
  44cb0c:	ldr	x8, [sp, #104]
  44cb10:	cbz	x8, 44cb44 <link_config_load+0x224>
  44cb14:	ldr	x8, [sp, #104]
  44cb18:	ldr	x0, [sp, #104]
  44cb1c:	str	x8, [sp, #16]
  44cb20:	bl	40b5d0 <strv_length@plt>
  44cb24:	mov	x8, #0x8                   	// #8
  44cb28:	mul	x8, x8, x0
  44cb2c:	ldr	x9, [sp, #16]
  44cb30:	add	x8, x9, x8
  44cb34:	mov	x10, #0xfffffffffffffff8    	// #-8
  44cb38:	add	x8, x8, x10
  44cb3c:	str	x8, [sp, #8]
  44cb40:	b	44cb4c <link_config_load+0x22c>
  44cb44:	mov	x8, xzr
  44cb48:	str	x8, [sp, #8]
  44cb4c:	ldr	x8, [sp, #8]
  44cb50:	str	x8, [sp, #96]
  44cb54:	ldr	x8, [sp, #96]
  44cb58:	stur	x8, [x29, #-32]
  44cb5c:	ldur	x8, [x29, #-24]
  44cb60:	mov	w9, #0x0                   	// #0
  44cb64:	str	w9, [sp, #4]
  44cb68:	cbz	x8, 44cb80 <link_config_load+0x260>
  44cb6c:	ldur	x8, [x29, #-32]
  44cb70:	ldur	x9, [x29, #-24]
  44cb74:	cmp	x8, x9
  44cb78:	cset	w10, cs  // cs = hs, nlast
  44cb7c:	str	w10, [sp, #4]
  44cb80:	ldr	w8, [sp, #4]
  44cb84:	tbnz	w8, #0, 44cb8c <link_config_load+0x26c>
  44cb88:	b	44cc48 <link_config_load+0x328>
  44cb8c:	ldur	x0, [x29, #-16]
  44cb90:	ldur	x8, [x29, #-32]
  44cb94:	ldr	x1, [x8]
  44cb98:	bl	44c148 <link_load_one>
  44cb9c:	stur	w0, [x29, #-36]
  44cba0:	ldur	w9, [x29, #-36]
  44cba4:	cmp	w9, #0x0
  44cba8:	cset	w9, ge  // ge = tcont
  44cbac:	tbnz	w9, #0, 44cc34 <link_config_load+0x314>
  44cbb0:	mov	w8, #0x3                   	// #3
  44cbb4:	str	w8, [sp, #92]
  44cbb8:	ldur	w8, [x29, #-36]
  44cbbc:	str	w8, [sp, #88]
  44cbc0:	mov	w8, #0x1                   	// #1
  44cbc4:	str	w8, [sp, #84]
  44cbc8:	ldr	w0, [sp, #84]
  44cbcc:	bl	40a3f0 <log_get_max_level_realm@plt>
  44cbd0:	ldr	w8, [sp, #92]
  44cbd4:	and	w8, w8, #0x7
  44cbd8:	cmp	w0, w8
  44cbdc:	b.lt	44cc18 <link_config_load+0x2f8>  // b.tstop
  44cbe0:	ldr	w8, [sp, #84]
  44cbe4:	ldr	w9, [sp, #92]
  44cbe8:	orr	w0, w9, w8, lsl #10
  44cbec:	ldr	w1, [sp, #88]
  44cbf0:	ldur	x10, [x29, #-32]
  44cbf4:	ldr	x6, [x10]
  44cbf8:	ldr	x2, [sp, #72]
  44cbfc:	mov	w3, #0xe2                  	// #226
  44cc00:	ldr	x4, [sp, #64]
  44cc04:	adrp	x5, 46d000 <on_inotify.__assert_in_set+0x9540>
  44cc08:	add	x5, x5, #0xfb7
  44cc0c:	bl	40a400 <log_internal_realm@plt>
  44cc10:	str	w0, [sp]
  44cc14:	b	44cc2c <link_config_load+0x30c>
  44cc18:	ldr	w0, [sp, #88]
  44cc1c:	bl	40a410 <abs@plt>
  44cc20:	mov	w8, wzr
  44cc24:	subs	w8, w8, w0, uxtb
  44cc28:	str	w8, [sp]
  44cc2c:	ldr	w8, [sp]
  44cc30:	str	w8, [sp, #80]
  44cc34:	ldur	x8, [x29, #-32]
  44cc38:	mov	x9, #0xfffffffffffffff8    	// #-8
  44cc3c:	add	x8, x8, x9
  44cc40:	stur	x8, [x29, #-32]
  44cc44:	b	44cb5c <link_config_load+0x23c>
  44cc48:	stur	wzr, [x29, #-4]
  44cc4c:	mov	w8, #0x1                   	// #1
  44cc50:	str	w8, [sp, #116]
  44cc54:	sub	x0, x29, #0x18
  44cc58:	bl	44cc70 <strv_freep>
  44cc5c:	ldur	w0, [x29, #-4]
  44cc60:	ldr	x28, [sp, #304]
  44cc64:	ldp	x29, x30, [sp, #288]
  44cc68:	add	sp, sp, #0x140
  44cc6c:	ret

000000000044cc70 <strv_freep>:
  44cc70:	sub	sp, sp, #0x20
  44cc74:	stp	x29, x30, [sp, #16]
  44cc78:	add	x29, sp, #0x10
  44cc7c:	str	x0, [sp, #8]
  44cc80:	ldr	x8, [sp, #8]
  44cc84:	ldr	x8, [x8]
  44cc88:	cbz	x8, 44cc98 <strv_freep+0x28>
  44cc8c:	ldr	x8, [sp, #8]
  44cc90:	ldr	x0, [x8]
  44cc94:	bl	40afa0 <strv_free@plt>
  44cc98:	ldp	x29, x30, [sp, #16]
  44cc9c:	add	sp, sp, #0x20
  44cca0:	ret

000000000044cca4 <enable_name_policy>:
  44cca4:	sub	sp, sp, #0x20
  44cca8:	stp	x29, x30, [sp, #16]
  44ccac:	add	x29, sp, #0x10
  44ccb0:	adrp	x0, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ccb4:	add	x0, x0, #0x61a
  44ccb8:	sub	x1, x29, #0x1
  44ccbc:	bl	40b7b0 <proc_cmdline_get_bool@plt>
  44ccc0:	cmp	w0, #0x0
  44ccc4:	cset	w8, le
  44ccc8:	mov	w9, #0x1                   	// #1
  44cccc:	str	w9, [sp, #8]
  44ccd0:	tbnz	w8, #0, 44ccdc <enable_name_policy+0x38>
  44ccd4:	ldurb	w8, [x29, #-1]
  44ccd8:	str	w8, [sp, #8]
  44ccdc:	ldr	w8, [sp, #8]
  44cce0:	and	w0, w8, #0x1
  44cce4:	ldp	x29, x30, [sp, #16]
  44cce8:	add	sp, sp, #0x20
  44ccec:	ret

000000000044ccf0 <link_config_should_reload>:
  44ccf0:	sub	sp, sp, #0x50
  44ccf4:	stp	x29, x30, [sp, #64]
  44ccf8:	add	x29, sp, #0x40
  44ccfc:	adrp	x1, 4a0000 <arg_event_timeout_usec>
  44cd00:	add	x1, x1, #0x1e0
  44cd04:	mov	x2, #0x30                  	// #48
  44cd08:	add	x8, sp, #0x8
  44cd0c:	stur	x0, [x29, #-8]
  44cd10:	mov	x0, x8
  44cd14:	str	x8, [sp]
  44cd18:	bl	40a600 <memcpy@plt>
  44cd1c:	ldur	x8, [x29, #-8]
  44cd20:	add	x1, x8, #0x18
  44cd24:	ldr	x0, [sp]
  44cd28:	mov	w9, wzr
  44cd2c:	and	w2, w9, #0x1
  44cd30:	bl	40b250 <paths_check_timestamp@plt>
  44cd34:	and	w0, w0, #0x1
  44cd38:	ldp	x29, x30, [sp, #64]
  44cd3c:	add	sp, sp, #0x50
  44cd40:	ret

000000000044cd44 <link_config_get>:
  44cd44:	sub	sp, sp, #0x100
  44cd48:	stp	x29, x30, [sp, #240]
  44cd4c:	add	x29, sp, #0xf0
  44cd50:	adrp	x8, 464000 <on_inotify.__assert_in_set+0x540>
  44cd54:	add	x8, x8, #0xa46
  44cd58:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44cd5c:	add	x9, x9, #0xd5b
  44cd60:	add	x9, x9, #0x3
  44cd64:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44cd68:	add	x10, x10, #0x2e
  44cd6c:	adrp	x11, 46d000 <on_inotify.__assert_in_set+0x9540>
  44cd70:	add	x11, x11, #0xfd7
  44cd74:	stur	x0, [x29, #-16]
  44cd78:	stur	x1, [x29, #-24]
  44cd7c:	stur	x2, [x29, #-32]
  44cd80:	str	x8, [sp, #88]
  44cd84:	str	x9, [sp, #80]
  44cd88:	str	x10, [sp, #72]
  44cd8c:	str	x11, [sp, #64]
  44cd90:	ldur	x8, [x29, #-16]
  44cd94:	cmp	x8, #0x0
  44cd98:	cset	w9, ne  // ne = any
  44cd9c:	mov	w10, #0x1                   	// #1
  44cda0:	eor	w9, w9, #0x1
  44cda4:	eor	w9, w9, w10
  44cda8:	eor	w9, w9, w10
  44cdac:	and	w9, w9, #0x1
  44cdb0:	mov	w0, w9
  44cdb4:	sxtw	x8, w0
  44cdb8:	cbz	x8, 44cdd8 <link_config_get+0x94>
  44cdbc:	mov	w0, #0x1                   	// #1
  44cdc0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44cdc4:	add	x1, x1, #0xd57
  44cdc8:	ldr	x2, [sp, #80]
  44cdcc:	mov	w3, #0xef                  	// #239
  44cdd0:	ldr	x4, [sp, #64]
  44cdd4:	bl	40a540 <log_assert_failed_realm@plt>
  44cdd8:	ldur	x8, [x29, #-24]
  44cddc:	cmp	x8, #0x0
  44cde0:	cset	w9, ne  // ne = any
  44cde4:	mov	w10, #0x1                   	// #1
  44cde8:	eor	w9, w9, #0x1
  44cdec:	eor	w9, w9, w10
  44cdf0:	eor	w9, w9, w10
  44cdf4:	and	w9, w9, #0x1
  44cdf8:	mov	w0, w9
  44cdfc:	sxtw	x8, w0
  44ce00:	cbz	x8, 44ce20 <link_config_get+0xdc>
  44ce04:	mov	w0, #0x1                   	// #1
  44ce08:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44ce0c:	add	x1, x1, #0x5dd
  44ce10:	ldr	x2, [sp, #80]
  44ce14:	mov	w3, #0xf0                  	// #240
  44ce18:	ldr	x4, [sp, #64]
  44ce1c:	bl	40a540 <log_assert_failed_realm@plt>
  44ce20:	ldur	x8, [x29, #-32]
  44ce24:	cmp	x8, #0x0
  44ce28:	cset	w9, ne  // ne = any
  44ce2c:	mov	w10, #0x1                   	// #1
  44ce30:	eor	w9, w9, #0x1
  44ce34:	eor	w9, w9, w10
  44ce38:	eor	w9, w9, w10
  44ce3c:	and	w9, w9, #0x1
  44ce40:	mov	w0, w9
  44ce44:	sxtw	x8, w0
  44ce48:	cbz	x8, 44ce68 <link_config_get+0x124>
  44ce4c:	mov	w0, #0x1                   	// #1
  44ce50:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  44ce54:	add	x1, x1, #0x2ff
  44ce58:	ldr	x2, [sp, #80]
  44ce5c:	mov	w3, #0xf1                  	// #241
  44ce60:	ldr	x4, [sp, #64]
  44ce64:	bl	40a540 <log_assert_failed_realm@plt>
  44ce68:	ldur	x8, [x29, #-16]
  44ce6c:	ldr	x8, [x8]
  44ce70:	stur	x8, [x29, #-40]
  44ce74:	ldur	x8, [x29, #-40]
  44ce78:	cbz	x8, 44d1d4 <link_config_get+0x490>
  44ce7c:	ldur	x8, [x29, #-40]
  44ce80:	ldr	x0, [x8, #8]
  44ce84:	ldur	x8, [x29, #-40]
  44ce88:	ldr	x1, [x8, #16]
  44ce8c:	ldur	x8, [x29, #-40]
  44ce90:	ldr	x2, [x8, #24]
  44ce94:	ldur	x8, [x29, #-40]
  44ce98:	ldr	x3, [x8, #32]
  44ce9c:	ldur	x8, [x29, #-40]
  44cea0:	ldr	x4, [x8, #40]
  44cea4:	ldur	x8, [x29, #-40]
  44cea8:	ldr	x5, [x8, #48]
  44ceac:	ldur	x8, [x29, #-24]
  44ceb0:	mov	x9, xzr
  44ceb4:	mov	x6, x9
  44ceb8:	str	x6, [sp, #56]
  44cebc:	ldr	x7, [sp, #56]
  44cec0:	mov	x10, sp
  44cec4:	str	x9, [x10]
  44cec8:	mov	x10, sp
  44cecc:	str	x8, [x10, #8]
  44ced0:	mov	x8, sp
  44ced4:	str	x9, [x8, #16]
  44ced8:	mov	x8, sp
  44cedc:	str	x9, [x8, #24]
  44cee0:	mov	x8, sp
  44cee4:	str	wzr, [x8, #32]
  44cee8:	mov	x8, sp
  44ceec:	str	x9, [x8, #40]
  44cef0:	mov	x8, sp
  44cef4:	str	x9, [x8, #48]
  44cef8:	bl	458640 <net_match_config>
  44cefc:	tbnz	w0, #0, 44cf04 <link_config_get+0x1c0>
  44cf00:	b	44d1c4 <link_config_get+0x480>
  44cf04:	ldur	x8, [x29, #-40]
  44cf08:	ldr	x8, [x8, #40]
  44cf0c:	cbz	x8, 44d0f0 <link_config_get+0x3ac>
  44cf10:	ldur	x8, [x29, #-40]
  44cf14:	ldr	x0, [x8, #40]
  44cf18:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44cf1c:	add	x1, x1, #0x1b
  44cf20:	bl	40b2e0 <strv_find@plt>
  44cf24:	cbnz	x0, 44d0f0 <link_config_get+0x3ac>
  44cf28:	sub	x2, x29, #0x2c
  44cf2c:	stur	wzr, [x29, #-44]
  44cf30:	ldur	x0, [x29, #-24]
  44cf34:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44cf38:	add	x1, x1, #0x1d
  44cf3c:	bl	44d1f8 <link_unsigned_attribute>
  44cf40:	ldur	w8, [x29, #-44]
  44cf44:	cmp	w8, #0x1
  44cf48:	b.ne	44d020 <link_config_get+0x2dc>  // b.any
  44cf4c:	mov	x8, xzr
  44cf50:	stur	x8, [x29, #-56]
  44cf54:	ldur	x8, [x29, #-24]
  44cf58:	stur	x8, [x29, #-64]
  44cf5c:	mov	w9, #0x4                   	// #4
  44cf60:	stur	w9, [x29, #-68]
  44cf64:	stur	wzr, [x29, #-72]
  44cf68:	ldur	x8, [x29, #-64]
  44cf6c:	cbz	x8, 44cfac <link_config_get+0x268>
  44cf70:	mov	w0, #0x1                   	// #1
  44cf74:	bl	40a3f0 <log_get_max_level_realm@plt>
  44cf78:	ldur	w8, [x29, #-68]
  44cf7c:	cmp	w0, w8
  44cf80:	cset	w8, ge  // ge = tcont
  44cf84:	mov	w9, #0x1                   	// #1
  44cf88:	eor	w8, w8, #0x1
  44cf8c:	eor	w8, w8, w9
  44cf90:	and	w8, w8, #0x1
  44cf94:	mov	w1, w8
  44cf98:	sxtw	x10, w1
  44cf9c:	cbz	x10, 44cfac <link_config_get+0x268>
  44cfa0:	ldur	x0, [x29, #-64]
  44cfa4:	sub	x1, x29, #0x38
  44cfa8:	bl	40a860 <sd_device_get_sysname@plt>
  44cfac:	ldur	w0, [x29, #-68]
  44cfb0:	ldur	w1, [x29, #-72]
  44cfb4:	ldur	x8, [x29, #-56]
  44cfb8:	mov	x9, xzr
  44cfbc:	cmp	x8, #0x0
  44cfc0:	ldr	x8, [sp, #88]
  44cfc4:	csel	x5, x8, x9, ne  // ne = any
  44cfc8:	ldur	x6, [x29, #-56]
  44cfcc:	ldur	x10, [x29, #-40]
  44cfd0:	ldr	x10, [x10]
  44cfd4:	ldr	x2, [sp, #80]
  44cfd8:	mov	w3, #0xfe                  	// #254
  44cfdc:	ldr	x4, [sp, #72]
  44cfe0:	mov	x7, x9
  44cfe4:	mov	x11, sp
  44cfe8:	str	x9, [x11]
  44cfec:	mov	x9, sp
  44cff0:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44cff4:	add	x11, x11, #0x3e
  44cff8:	str	x11, [x9, #8]
  44cffc:	mov	x9, sp
  44d000:	str	x10, [x9, #16]
  44d004:	bl	40a870 <log_object_internal@plt>
  44d008:	stur	w0, [x29, #-76]
  44d00c:	ldur	x8, [x29, #-40]
  44d010:	ldur	x9, [x29, #-32]
  44d014:	str	x8, [x9]
  44d018:	stur	wzr, [x29, #-4]
  44d01c:	b	44d1e8 <link_config_get+0x4a4>
  44d020:	ldur	w8, [x29, #-44]
  44d024:	cmp	w8, #0x4
  44d028:	b.ne	44d0f0 <link_config_get+0x3ac>  // b.any
  44d02c:	mov	x8, xzr
  44d030:	stur	x8, [x29, #-88]
  44d034:	ldur	x8, [x29, #-24]
  44d038:	stur	x8, [x29, #-96]
  44d03c:	mov	w9, #0x4                   	// #4
  44d040:	stur	w9, [x29, #-100]
  44d044:	stur	wzr, [x29, #-104]
  44d048:	ldur	x8, [x29, #-96]
  44d04c:	cbz	x8, 44d08c <link_config_get+0x348>
  44d050:	mov	w0, #0x1                   	// #1
  44d054:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d058:	ldur	w8, [x29, #-100]
  44d05c:	cmp	w0, w8
  44d060:	cset	w8, ge  // ge = tcont
  44d064:	mov	w9, #0x1                   	// #1
  44d068:	eor	w8, w8, #0x1
  44d06c:	eor	w8, w8, w9
  44d070:	and	w8, w8, #0x1
  44d074:	mov	w1, w8
  44d078:	sxtw	x10, w1
  44d07c:	cbz	x10, 44d08c <link_config_get+0x348>
  44d080:	ldur	x0, [x29, #-96]
  44d084:	sub	x1, x29, #0x58
  44d088:	bl	40a860 <sd_device_get_sysname@plt>
  44d08c:	ldur	w0, [x29, #-100]
  44d090:	ldur	w1, [x29, #-104]
  44d094:	ldur	x8, [x29, #-88]
  44d098:	mov	x9, xzr
  44d09c:	cmp	x8, #0x0
  44d0a0:	ldr	x8, [sp, #88]
  44d0a4:	csel	x5, x8, x9, ne  // ne = any
  44d0a8:	ldur	x6, [x29, #-88]
  44d0ac:	ldur	x10, [x29, #-40]
  44d0b0:	ldr	x10, [x10]
  44d0b4:	ldr	x2, [sp, #80]
  44d0b8:	mov	w3, #0x104                 	// #260
  44d0bc:	ldr	x4, [sp, #72]
  44d0c0:	mov	x7, x9
  44d0c4:	mov	x11, sp
  44d0c8:	str	x9, [x11]
  44d0cc:	mov	x9, sp
  44d0d0:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d0d4:	add	x11, x11, #0x91
  44d0d8:	str	x11, [x9, #8]
  44d0dc:	mov	x9, sp
  44d0e0:	str	x10, [x9, #16]
  44d0e4:	bl	40a870 <log_object_internal@plt>
  44d0e8:	stur	w0, [x29, #-108]
  44d0ec:	b	44d1c4 <link_config_get+0x480>
  44d0f0:	mov	x8, xzr
  44d0f4:	str	x8, [sp, #120]
  44d0f8:	ldur	x8, [x29, #-24]
  44d0fc:	str	x8, [sp, #112]
  44d100:	mov	w9, #0x7                   	// #7
  44d104:	str	w9, [sp, #108]
  44d108:	str	wzr, [sp, #104]
  44d10c:	ldr	x8, [sp, #112]
  44d110:	cbz	x8, 44d150 <link_config_get+0x40c>
  44d114:	mov	w0, #0x1                   	// #1
  44d118:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d11c:	ldr	w8, [sp, #108]
  44d120:	cmp	w0, w8
  44d124:	cset	w8, ge  // ge = tcont
  44d128:	mov	w9, #0x1                   	// #1
  44d12c:	eor	w8, w8, #0x1
  44d130:	eor	w8, w8, w9
  44d134:	and	w8, w8, #0x1
  44d138:	mov	w1, w8
  44d13c:	sxtw	x10, w1
  44d140:	cbz	x10, 44d150 <link_config_get+0x40c>
  44d144:	ldr	x0, [sp, #112]
  44d148:	add	x1, sp, #0x78
  44d14c:	bl	40a860 <sd_device_get_sysname@plt>
  44d150:	ldr	w0, [sp, #108]
  44d154:	ldr	w1, [sp, #104]
  44d158:	ldr	x8, [sp, #120]
  44d15c:	mov	x9, xzr
  44d160:	cmp	x8, #0x0
  44d164:	ldr	x8, [sp, #88]
  44d168:	csel	x5, x8, x9, ne  // ne = any
  44d16c:	ldr	x6, [sp, #120]
  44d170:	ldur	x10, [x29, #-40]
  44d174:	ldr	x10, [x10]
  44d178:	ldr	x2, [sp, #80]
  44d17c:	mov	w3, #0x10a                 	// #266
  44d180:	ldr	x4, [sp, #72]
  44d184:	mov	x7, x9
  44d188:	mov	x11, sp
  44d18c:	str	x9, [x11]
  44d190:	mov	x9, sp
  44d194:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d198:	add	x11, x11, #0xd9
  44d19c:	str	x11, [x9, #8]
  44d1a0:	mov	x9, sp
  44d1a4:	str	x10, [x9, #16]
  44d1a8:	bl	40a870 <log_object_internal@plt>
  44d1ac:	str	w0, [sp, #100]
  44d1b0:	ldur	x8, [x29, #-40]
  44d1b4:	ldur	x9, [x29, #-32]
  44d1b8:	str	x8, [x9]
  44d1bc:	stur	wzr, [x29, #-4]
  44d1c0:	b	44d1e8 <link_config_get+0x4a4>
  44d1c4:	ldur	x8, [x29, #-40]
  44d1c8:	ldr	x8, [x8, #208]
  44d1cc:	stur	x8, [x29, #-40]
  44d1d0:	b	44ce74 <link_config_get+0x130>
  44d1d4:	ldur	x8, [x29, #-32]
  44d1d8:	mov	x9, xzr
  44d1dc:	str	x9, [x8]
  44d1e0:	mov	w10, #0xfffffffe            	// #-2
  44d1e4:	stur	w10, [x29, #-4]
  44d1e8:	ldur	w0, [x29, #-4]
  44d1ec:	ldp	x29, x30, [sp, #240]
  44d1f0:	add	sp, sp, #0x100
  44d1f4:	ret

000000000044d1f8 <link_unsigned_attribute>:
  44d1f8:	sub	sp, sp, #0xe0
  44d1fc:	stp	x29, x30, [sp, #208]
  44d200:	add	x29, sp, #0xd0
  44d204:	adrp	x8, 464000 <on_inotify.__assert_in_set+0x540>
  44d208:	add	x8, x8, #0xa46
  44d20c:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44d210:	add	x9, x9, #0xd5b
  44d214:	add	x9, x9, #0x3
  44d218:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d21c:	add	x10, x10, #0x626
  44d220:	sub	x11, x29, #0x28
  44d224:	stur	x0, [x29, #-16]
  44d228:	stur	x1, [x29, #-24]
  44d22c:	stur	x2, [x29, #-32]
  44d230:	ldur	x0, [x29, #-16]
  44d234:	ldur	x1, [x29, #-24]
  44d238:	mov	x2, x11
  44d23c:	str	x8, [sp, #56]
  44d240:	str	x9, [sp, #48]
  44d244:	str	x10, [sp, #40]
  44d248:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  44d24c:	stur	w0, [x29, #-44]
  44d250:	ldur	w12, [x29, #-44]
  44d254:	cmp	w12, #0x0
  44d258:	cset	w12, ge  // ge = tcont
  44d25c:	tbnz	w12, #0, 44d32c <link_unsigned_attribute+0x134>
  44d260:	mov	x8, xzr
  44d264:	stur	x8, [x29, #-56]
  44d268:	ldur	x8, [x29, #-16]
  44d26c:	stur	x8, [x29, #-64]
  44d270:	mov	w9, #0x7                   	// #7
  44d274:	stur	w9, [x29, #-68]
  44d278:	ldur	w9, [x29, #-44]
  44d27c:	stur	w9, [x29, #-72]
  44d280:	ldur	x8, [x29, #-64]
  44d284:	cbz	x8, 44d2c4 <link_unsigned_attribute+0xcc>
  44d288:	mov	w0, #0x1                   	// #1
  44d28c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d290:	ldur	w8, [x29, #-68]
  44d294:	cmp	w0, w8
  44d298:	cset	w8, ge  // ge = tcont
  44d29c:	mov	w9, #0x1                   	// #1
  44d2a0:	eor	w8, w8, #0x1
  44d2a4:	eor	w8, w8, w9
  44d2a8:	and	w8, w8, #0x1
  44d2ac:	mov	w1, w8
  44d2b0:	sxtw	x10, w1
  44d2b4:	cbz	x10, 44d2c4 <link_unsigned_attribute+0xcc>
  44d2b8:	ldur	x0, [x29, #-64]
  44d2bc:	sub	x1, x29, #0x38
  44d2c0:	bl	40a860 <sd_device_get_sysname@plt>
  44d2c4:	ldur	w0, [x29, #-68]
  44d2c8:	ldur	w1, [x29, #-72]
  44d2cc:	ldur	x8, [x29, #-56]
  44d2d0:	mov	x9, xzr
  44d2d4:	cmp	x8, #0x0
  44d2d8:	ldr	x8, [sp, #56]
  44d2dc:	csel	x5, x8, x9, ne  // ne = any
  44d2e0:	ldur	x6, [x29, #-56]
  44d2e4:	ldur	x10, [x29, #-24]
  44d2e8:	ldr	x2, [sp, #48]
  44d2ec:	mov	w3, #0xc2                  	// #194
  44d2f0:	ldr	x4, [sp, #40]
  44d2f4:	mov	x7, x9
  44d2f8:	mov	x11, sp
  44d2fc:	str	x9, [x11]
  44d300:	mov	x9, sp
  44d304:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d308:	add	x11, x11, #0x63e
  44d30c:	str	x11, [x9, #8]
  44d310:	mov	x9, sp
  44d314:	str	x10, [x9, #16]
  44d318:	bl	40a870 <log_object_internal@plt>
  44d31c:	stur	w0, [x29, #-76]
  44d320:	ldur	w12, [x29, #-76]
  44d324:	stur	w12, [x29, #-4]
  44d328:	b	44d4f4 <link_unsigned_attribute+0x2fc>
  44d32c:	ldur	x0, [x29, #-40]
  44d330:	ldur	x1, [x29, #-32]
  44d334:	bl	44fa30 <safe_atou>
  44d338:	stur	w0, [x29, #-44]
  44d33c:	ldur	w8, [x29, #-44]
  44d340:	cmp	w8, #0x0
  44d344:	cset	w8, ge  // ge = tcont
  44d348:	tbnz	w8, #0, 44d424 <link_unsigned_attribute+0x22c>
  44d34c:	mov	x8, xzr
  44d350:	stur	x8, [x29, #-88]
  44d354:	ldur	x8, [x29, #-16]
  44d358:	stur	x8, [x29, #-96]
  44d35c:	mov	w9, #0x4                   	// #4
  44d360:	stur	w9, [x29, #-100]
  44d364:	ldur	w9, [x29, #-44]
  44d368:	str	w9, [sp, #104]
  44d36c:	ldur	x8, [x29, #-96]
  44d370:	cbz	x8, 44d3b0 <link_unsigned_attribute+0x1b8>
  44d374:	mov	w0, #0x1                   	// #1
  44d378:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d37c:	ldur	w8, [x29, #-100]
  44d380:	cmp	w0, w8
  44d384:	cset	w8, ge  // ge = tcont
  44d388:	mov	w9, #0x1                   	// #1
  44d38c:	eor	w8, w8, #0x1
  44d390:	eor	w8, w8, w9
  44d394:	and	w8, w8, #0x1
  44d398:	mov	w1, w8
  44d39c:	sxtw	x10, w1
  44d3a0:	cbz	x10, 44d3b0 <link_unsigned_attribute+0x1b8>
  44d3a4:	ldur	x0, [x29, #-96]
  44d3a8:	sub	x1, x29, #0x58
  44d3ac:	bl	40a860 <sd_device_get_sysname@plt>
  44d3b0:	ldur	w0, [x29, #-100]
  44d3b4:	ldr	w1, [sp, #104]
  44d3b8:	ldur	x8, [x29, #-88]
  44d3bc:	mov	x9, xzr
  44d3c0:	cmp	x8, #0x0
  44d3c4:	ldr	x8, [sp, #56]
  44d3c8:	csel	x5, x8, x9, ne  // ne = any
  44d3cc:	ldur	x6, [x29, #-88]
  44d3d0:	ldur	x10, [x29, #-24]
  44d3d4:	ldur	x11, [x29, #-40]
  44d3d8:	ldr	x2, [sp, #48]
  44d3dc:	mov	w3, #0xc6                  	// #198
  44d3e0:	ldr	x4, [sp, #40]
  44d3e4:	mov	x7, x9
  44d3e8:	mov	x12, sp
  44d3ec:	str	x9, [x12]
  44d3f0:	mov	x9, sp
  44d3f4:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d3f8:	add	x12, x12, #0x655
  44d3fc:	str	x12, [x9, #8]
  44d400:	mov	x9, sp
  44d404:	str	x10, [x9, #16]
  44d408:	mov	x9, sp
  44d40c:	str	x11, [x9, #24]
  44d410:	bl	40a870 <log_object_internal@plt>
  44d414:	str	w0, [sp, #100]
  44d418:	ldr	w13, [sp, #100]
  44d41c:	stur	w13, [x29, #-4]
  44d420:	b	44d4f4 <link_unsigned_attribute+0x2fc>
  44d424:	mov	x8, xzr
  44d428:	str	x8, [sp, #88]
  44d42c:	ldur	x8, [x29, #-16]
  44d430:	str	x8, [sp, #80]
  44d434:	mov	w9, #0x7                   	// #7
  44d438:	str	w9, [sp, #76]
  44d43c:	str	wzr, [sp, #72]
  44d440:	ldr	x8, [sp, #80]
  44d444:	cbz	x8, 44d484 <link_unsigned_attribute+0x28c>
  44d448:	mov	w0, #0x1                   	// #1
  44d44c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d450:	ldr	w8, [sp, #76]
  44d454:	cmp	w0, w8
  44d458:	cset	w8, ge  // ge = tcont
  44d45c:	mov	w9, #0x1                   	// #1
  44d460:	eor	w8, w8, #0x1
  44d464:	eor	w8, w8, w9
  44d468:	and	w8, w8, #0x1
  44d46c:	mov	w1, w8
  44d470:	sxtw	x10, w1
  44d474:	cbz	x10, 44d484 <link_unsigned_attribute+0x28c>
  44d478:	ldr	x0, [sp, #80]
  44d47c:	add	x1, sp, #0x58
  44d480:	bl	40a860 <sd_device_get_sysname@plt>
  44d484:	ldr	w0, [sp, #76]
  44d488:	ldr	w1, [sp, #72]
  44d48c:	ldr	x8, [sp, #88]
  44d490:	mov	x9, xzr
  44d494:	cmp	x8, #0x0
  44d498:	ldr	x8, [sp, #56]
  44d49c:	csel	x5, x8, x9, ne  // ne = any
  44d4a0:	ldr	x6, [sp, #88]
  44d4a4:	ldur	x10, [x29, #-24]
  44d4a8:	ldur	x11, [x29, #-32]
  44d4ac:	ldr	w12, [x11]
  44d4b0:	ldr	x2, [sp, #48]
  44d4b4:	mov	w3, #0xc8                  	// #200
  44d4b8:	ldr	x4, [sp, #40]
  44d4bc:	mov	x7, x9
  44d4c0:	mov	x11, sp
  44d4c4:	str	x9, [x11]
  44d4c8:	mov	x9, sp
  44d4cc:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d4d0:	add	x11, x11, #0x671
  44d4d4:	str	x11, [x9, #8]
  44d4d8:	mov	x9, sp
  44d4dc:	str	x10, [x9, #16]
  44d4e0:	mov	x9, sp
  44d4e4:	str	w12, [x9, #24]
  44d4e8:	bl	40a870 <log_object_internal@plt>
  44d4ec:	str	w0, [sp, #68]
  44d4f0:	stur	wzr, [x29, #-4]
  44d4f4:	ldur	w0, [x29, #-4]
  44d4f8:	ldp	x29, x30, [sp, #208]
  44d4fc:	add	sp, sp, #0xe0
  44d500:	ret

000000000044d504 <link_config_apply>:
  44d504:	stp	x29, x30, [sp, #-32]!
  44d508:	str	x28, [sp, #16]
  44d50c:	mov	x29, sp
  44d510:	sub	sp, sp, #0x330
  44d514:	mov	x8, xzr
  44d518:	adrp	x9, 46d000 <on_inotify.__assert_in_set+0x9540>
  44d51c:	add	x9, x9, #0xd5b
  44d520:	add	x9, x9, #0x3
  44d524:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d528:	add	x10, x10, #0x147
  44d52c:	adrp	x11, 464000 <on_inotify.__assert_in_set+0x540>
  44d530:	add	x11, x11, #0xa46
  44d534:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d538:	add	x12, x12, #0xf3
  44d53c:	stur	x0, [x29, #-16]
  44d540:	stur	x1, [x29, #-24]
  44d544:	stur	x2, [x29, #-32]
  44d548:	stur	x3, [x29, #-40]
  44d54c:	stur	x8, [x29, #-56]
  44d550:	stur	x8, [x29, #-64]
  44d554:	stur	wzr, [x29, #-80]
  44d558:	str	x9, [sp, #312]
  44d55c:	str	x10, [sp, #304]
  44d560:	str	x11, [sp, #296]
  44d564:	str	x12, [sp, #288]
  44d568:	ldur	x8, [x29, #-16]
  44d56c:	cmp	x8, #0x0
  44d570:	cset	w9, ne  // ne = any
  44d574:	mov	w10, #0x1                   	// #1
  44d578:	eor	w9, w9, #0x1
  44d57c:	eor	w9, w9, w10
  44d580:	eor	w9, w9, w10
  44d584:	and	w9, w9, #0x1
  44d588:	mov	w0, w9
  44d58c:	sxtw	x8, w0
  44d590:	cbz	x8, 44d5b0 <link_config_apply+0xac>
  44d594:	mov	w0, #0x1                   	// #1
  44d598:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44d59c:	add	x1, x1, #0xd57
  44d5a0:	ldr	x2, [sp, #312]
  44d5a4:	mov	w3, #0x150                 	// #336
  44d5a8:	ldr	x4, [sp, #288]
  44d5ac:	bl	40a540 <log_assert_failed_realm@plt>
  44d5b0:	ldur	x8, [x29, #-24]
  44d5b4:	cmp	x8, #0x0
  44d5b8:	cset	w9, ne  // ne = any
  44d5bc:	mov	w10, #0x1                   	// #1
  44d5c0:	eor	w9, w9, #0x1
  44d5c4:	eor	w9, w9, w10
  44d5c8:	eor	w9, w9, w10
  44d5cc:	and	w9, w9, #0x1
  44d5d0:	mov	w0, w9
  44d5d4:	sxtw	x8, w0
  44d5d8:	cbz	x8, 44d5f8 <link_config_apply+0xf4>
  44d5dc:	mov	w0, #0x1                   	// #1
  44d5e0:	adrp	x1, 46b000 <on_inotify.__assert_in_set+0x7540>
  44d5e4:	add	x1, x1, #0x8ac
  44d5e8:	ldr	x2, [sp, #312]
  44d5ec:	mov	w3, #0x151                 	// #337
  44d5f0:	ldr	x4, [sp, #288]
  44d5f4:	bl	40a540 <log_assert_failed_realm@plt>
  44d5f8:	ldur	x8, [x29, #-32]
  44d5fc:	cmp	x8, #0x0
  44d600:	cset	w9, ne  // ne = any
  44d604:	mov	w10, #0x1                   	// #1
  44d608:	eor	w9, w9, #0x1
  44d60c:	eor	w9, w9, w10
  44d610:	eor	w9, w9, w10
  44d614:	and	w9, w9, #0x1
  44d618:	mov	w0, w9
  44d61c:	sxtw	x8, w0
  44d620:	cbz	x8, 44d640 <link_config_apply+0x13c>
  44d624:	mov	w0, #0x1                   	// #1
  44d628:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  44d62c:	add	x1, x1, #0x5dd
  44d630:	ldr	x2, [sp, #312]
  44d634:	mov	w3, #0x152                 	// #338
  44d638:	ldr	x4, [sp, #288]
  44d63c:	bl	40a540 <log_assert_failed_realm@plt>
  44d640:	ldur	x8, [x29, #-40]
  44d644:	cmp	x8, #0x0
  44d648:	cset	w9, ne  // ne = any
  44d64c:	mov	w10, #0x1                   	// #1
  44d650:	eor	w9, w9, #0x1
  44d654:	eor	w9, w9, w10
  44d658:	eor	w9, w9, w10
  44d65c:	and	w9, w9, #0x1
  44d660:	mov	w0, w9
  44d664:	sxtw	x8, w0
  44d668:	cbz	x8, 44d688 <link_config_apply+0x184>
  44d66c:	mov	w0, #0x1                   	// #1
  44d670:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  44d674:	add	x1, x1, #0x5a0
  44d678:	ldr	x2, [sp, #312]
  44d67c:	mov	w3, #0x153                 	// #339
  44d680:	ldr	x4, [sp, #288]
  44d684:	bl	40a540 <log_assert_failed_realm@plt>
  44d688:	ldur	x0, [x29, #-32]
  44d68c:	sub	x1, x29, #0x48
  44d690:	bl	40a860 <sd_device_get_sysname@plt>
  44d694:	stur	w0, [x29, #-88]
  44d698:	ldur	w8, [x29, #-88]
  44d69c:	cmp	w8, #0x0
  44d6a0:	cset	w8, ge  // ge = tcont
  44d6a4:	tbnz	w8, #0, 44d6b4 <link_config_apply+0x1b0>
  44d6a8:	ldur	w8, [x29, #-88]
  44d6ac:	stur	w8, [x29, #-4]
  44d6b0:	b	44e704 <link_config_apply+0x1200>
  44d6b4:	ldur	x8, [x29, #-16]
  44d6b8:	add	x0, x8, #0x8
  44d6bc:	ldur	x1, [x29, #-72]
  44d6c0:	ldur	x8, [x29, #-24]
  44d6c4:	ldr	w2, [x8, #132]
  44d6c8:	ldur	x8, [x29, #-24]
  44d6cc:	add	x3, x8, #0x88
  44d6d0:	ldur	x8, [x29, #-24]
  44d6d4:	ldr	x4, [x8, #120]
  44d6d8:	ldur	x8, [x29, #-24]
  44d6dc:	ldr	w5, [x8, #128]
  44d6e0:	ldur	x8, [x29, #-24]
  44d6e4:	ldr	w6, [x8, #152]
  44d6e8:	bl	40b7c0 <ethtool_set_glinksettings@plt>
  44d6ec:	stur	w0, [x29, #-88]
  44d6f0:	ldur	w9, [x29, #-88]
  44d6f4:	cmp	w9, #0x0
  44d6f8:	cset	w9, ge  // ge = tcont
  44d6fc:	tbnz	w9, #0, 44da48 <link_config_apply+0x544>
  44d700:	ldur	x8, [x29, #-24]
  44d704:	ldr	w9, [x8, #152]
  44d708:	mov	w10, #0xffffffff            	// #-1
  44d70c:	cmp	w9, w10
  44d710:	b.eq	44d7c0 <link_config_apply+0x2bc>  // b.none
  44d714:	mov	w8, #0x4                   	// #4
  44d718:	stur	w8, [x29, #-96]
  44d71c:	ldur	w8, [x29, #-88]
  44d720:	stur	w8, [x29, #-100]
  44d724:	mov	w8, #0x1                   	// #1
  44d728:	stur	w8, [x29, #-104]
  44d72c:	ldur	w0, [x29, #-104]
  44d730:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d734:	ldur	w8, [x29, #-96]
  44d738:	and	w8, w8, #0x7
  44d73c:	cmp	w0, w8
  44d740:	b.lt	44d7a4 <link_config_apply+0x2a0>  // b.tstop
  44d744:	ldur	w8, [x29, #-104]
  44d748:	ldur	w9, [x29, #-96]
  44d74c:	orr	w0, w9, w8, lsl #10
  44d750:	ldur	w1, [x29, #-100]
  44d754:	ldur	x10, [x29, #-24]
  44d758:	ldr	w8, [x10, #152]
  44d75c:	str	w0, [sp, #284]
  44d760:	mov	w0, w8
  44d764:	str	w1, [sp, #280]
  44d768:	bl	40b7d0 <port_to_string@plt>
  44d76c:	ldur	x7, [x29, #-72]
  44d770:	ldr	w8, [sp, #284]
  44d774:	str	x0, [sp, #272]
  44d778:	mov	w0, w8
  44d77c:	ldr	w1, [sp, #280]
  44d780:	ldr	x2, [sp, #312]
  44d784:	mov	w3, #0x15f                 	// #351
  44d788:	ldr	x4, [sp, #304]
  44d78c:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d790:	add	x5, x5, #0x159
  44d794:	ldr	x6, [sp, #272]
  44d798:	bl	40a400 <log_internal_realm@plt>
  44d79c:	str	w0, [sp, #268]
  44d7a0:	b	44d7b8 <link_config_apply+0x2b4>
  44d7a4:	ldur	w0, [x29, #-100]
  44d7a8:	bl	40a410 <abs@plt>
  44d7ac:	mov	w8, wzr
  44d7b0:	subs	w8, w8, w0, uxtb
  44d7b4:	str	w8, [sp, #268]
  44d7b8:	ldr	w8, [sp, #268]
  44d7bc:	stur	w8, [x29, #-108]
  44d7c0:	ldur	x8, [x29, #-24]
  44d7c4:	add	x0, x8, #0x88
  44d7c8:	mov	x1, #0xc                   	// #12
  44d7cc:	bl	40b7e0 <memeqzero@plt>
  44d7d0:	tbnz	w0, #0, 44d850 <link_config_apply+0x34c>
  44d7d4:	mov	w8, #0x4                   	// #4
  44d7d8:	stur	w8, [x29, #-112]
  44d7dc:	ldur	w8, [x29, #-88]
  44d7e0:	stur	w8, [x29, #-116]
  44d7e4:	mov	w8, #0x1                   	// #1
  44d7e8:	stur	w8, [x29, #-120]
  44d7ec:	ldur	w0, [x29, #-120]
  44d7f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d7f4:	ldur	w8, [x29, #-112]
  44d7f8:	and	w8, w8, #0x7
  44d7fc:	cmp	w0, w8
  44d800:	b.lt	44d834 <link_config_apply+0x330>  // b.tstop
  44d804:	ldur	w8, [x29, #-120]
  44d808:	ldur	w9, [x29, #-112]
  44d80c:	orr	w0, w9, w8, lsl #10
  44d810:	ldur	w1, [x29, #-116]
  44d814:	ldr	x2, [sp, #312]
  44d818:	mov	w3, #0x162                 	// #354
  44d81c:	ldr	x4, [sp, #304]
  44d820:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d824:	add	x5, x5, #0x17b
  44d828:	bl	40a400 <log_internal_realm@plt>
  44d82c:	str	w0, [sp, #264]
  44d830:	b	44d848 <link_config_apply+0x344>
  44d834:	ldur	w0, [x29, #-116]
  44d838:	bl	40a410 <abs@plt>
  44d83c:	mov	w8, wzr
  44d840:	subs	w8, w8, w0, uxtb
  44d844:	str	w8, [sp, #264]
  44d848:	ldr	w8, [sp, #264]
  44d84c:	stur	w8, [x29, #-124]
  44d850:	ldur	x8, [x29, #-24]
  44d854:	ldr	x8, [x8, #120]
  44d858:	cbz	x8, 44d980 <link_config_apply+0x47c>
  44d85c:	ldur	x8, [x29, #-24]
  44d860:	ldr	x8, [x8, #120]
  44d864:	stur	x8, [x29, #-136]
  44d868:	mov	w9, #0x4240                	// #16960
  44d86c:	movk	w9, #0xf, lsl #16
  44d870:	stur	w9, [x29, #-140]
  44d874:	ldur	x8, [x29, #-136]
  44d878:	mov	x10, #0x4240                	// #16960
  44d87c:	movk	x10, #0xf, lsl #16
  44d880:	udiv	x8, x8, x10
  44d884:	ldur	x11, [x29, #-136]
  44d888:	udiv	x12, x11, x10
  44d88c:	mul	x10, x12, x10
  44d890:	subs	x10, x11, x10
  44d894:	cmp	x10, #0x0
  44d898:	cset	w9, ne  // ne = any
  44d89c:	mov	w13, #0x1                   	// #1
  44d8a0:	eor	w9, w9, #0x1
  44d8a4:	eor	w9, w9, w13
  44d8a8:	and	w9, w9, #0x1
  44d8ac:	add	x8, x8, w9, sxtw
  44d8b0:	stur	x8, [x29, #-152]
  44d8b4:	ldur	x8, [x29, #-152]
  44d8b8:	stur	w8, [x29, #-76]
  44d8bc:	ldur	w8, [x29, #-88]
  44d8c0:	mov	w9, #0xffffffa1            	// #-95
  44d8c4:	cmp	w8, w9
  44d8c8:	b.ne	44d980 <link_config_apply+0x47c>  // b.any
  44d8cc:	ldur	x8, [x29, #-16]
  44d8d0:	add	x0, x8, #0x8
  44d8d4:	ldur	x1, [x29, #-72]
  44d8d8:	ldur	w2, [x29, #-76]
  44d8dc:	ldur	x8, [x29, #-24]
  44d8e0:	ldr	w3, [x8, #128]
  44d8e4:	bl	40b7f0 <ethtool_set_speed@plt>
  44d8e8:	stur	w0, [x29, #-88]
  44d8ec:	ldur	w9, [x29, #-88]
  44d8f0:	cmp	w9, #0x0
  44d8f4:	cset	w9, ge  // ge = tcont
  44d8f8:	tbnz	w9, #0, 44d980 <link_config_apply+0x47c>
  44d8fc:	mov	w8, #0x4                   	// #4
  44d900:	stur	w8, [x29, #-156]
  44d904:	ldur	w8, [x29, #-88]
  44d908:	stur	w8, [x29, #-160]
  44d90c:	mov	w8, #0x1                   	// #1
  44d910:	stur	w8, [x29, #-164]
  44d914:	ldur	w0, [x29, #-164]
  44d918:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d91c:	ldur	w8, [x29, #-156]
  44d920:	and	w8, w8, #0x7
  44d924:	cmp	w0, w8
  44d928:	b.lt	44d964 <link_config_apply+0x460>  // b.tstop
  44d92c:	ldur	w8, [x29, #-164]
  44d930:	ldur	w9, [x29, #-156]
  44d934:	orr	w0, w9, w8, lsl #10
  44d938:	ldur	w1, [x29, #-160]
  44d93c:	ldur	x6, [x29, #-72]
  44d940:	ldur	w7, [x29, #-76]
  44d944:	ldr	x2, [sp, #312]
  44d948:	mov	w3, #0x169                 	// #361
  44d94c:	ldr	x4, [sp, #304]
  44d950:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44d954:	add	x5, x5, #0x19c
  44d958:	bl	40a400 <log_internal_realm@plt>
  44d95c:	str	w0, [sp, #260]
  44d960:	b	44d978 <link_config_apply+0x474>
  44d964:	ldur	w0, [x29, #-160]
  44d968:	bl	40a410 <abs@plt>
  44d96c:	mov	w8, wzr
  44d970:	subs	w8, w8, w0, uxtb
  44d974:	str	w8, [sp, #260]
  44d978:	ldr	w8, [sp, #260]
  44d97c:	stur	w8, [x29, #-168]
  44d980:	ldur	x8, [x29, #-24]
  44d984:	ldr	w9, [x8, #128]
  44d988:	mov	w10, #0xffffffff            	// #-1
  44d98c:	cmp	w9, w10
  44d990:	b.eq	44da48 <link_config_apply+0x544>  // b.none
  44d994:	mov	w8, #0x4                   	// #4
  44d998:	stur	w8, [x29, #-172]
  44d99c:	ldur	w8, [x29, #-88]
  44d9a0:	stur	w8, [x29, #-176]
  44d9a4:	mov	w8, #0x1                   	// #1
  44d9a8:	stur	w8, [x29, #-180]
  44d9ac:	ldur	w0, [x29, #-180]
  44d9b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44d9b4:	ldur	w8, [x29, #-172]
  44d9b8:	and	w8, w8, #0x7
  44d9bc:	cmp	w0, w8
  44d9c0:	b.lt	44da2c <link_config_apply+0x528>  // b.tstop
  44d9c4:	ldur	w8, [x29, #-180]
  44d9c8:	ldur	w9, [x29, #-172]
  44d9cc:	orr	w0, w9, w8, lsl #10
  44d9d0:	ldur	w1, [x29, #-176]
  44d9d4:	ldur	x6, [x29, #-72]
  44d9d8:	ldur	x10, [x29, #-24]
  44d9dc:	ldr	w8, [x10, #128]
  44d9e0:	str	w0, [sp, #256]
  44d9e4:	mov	w0, w8
  44d9e8:	str	w1, [sp, #252]
  44d9ec:	str	x6, [sp, #240]
  44d9f0:	bl	40b800 <duplex_to_string@plt>
  44d9f4:	ldr	w8, [sp, #256]
  44d9f8:	str	x0, [sp, #232]
  44d9fc:	mov	w0, w8
  44da00:	ldr	w1, [sp, #252]
  44da04:	ldr	x2, [sp, #312]
  44da08:	mov	w3, #0x16e                 	// #366
  44da0c:	ldr	x4, [sp, #304]
  44da10:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44da14:	add	x5, x5, #0x1c5
  44da18:	ldr	x6, [sp, #240]
  44da1c:	ldr	x7, [sp, #232]
  44da20:	bl	40a400 <log_internal_realm@plt>
  44da24:	str	w0, [sp, #228]
  44da28:	b	44da40 <link_config_apply+0x53c>
  44da2c:	ldur	w0, [x29, #-176]
  44da30:	bl	40a410 <abs@plt>
  44da34:	mov	w8, wzr
  44da38:	subs	w8, w8, w0, uxtb
  44da3c:	str	w8, [sp, #228]
  44da40:	ldr	w8, [sp, #228]
  44da44:	stur	w8, [x29, #-184]
  44da48:	ldur	x8, [x29, #-16]
  44da4c:	add	x0, x8, #0x8
  44da50:	ldur	x1, [x29, #-72]
  44da54:	ldur	x8, [x29, #-24]
  44da58:	ldr	w2, [x8, #148]
  44da5c:	bl	40b810 <ethtool_set_wol@plt>
  44da60:	stur	w0, [x29, #-88]
  44da64:	ldur	w9, [x29, #-88]
  44da68:	cmp	w9, #0x0
  44da6c:	cset	w9, ge  // ge = tcont
  44da70:	tbnz	w9, #0, 44db28 <link_config_apply+0x624>
  44da74:	mov	w8, #0x4                   	// #4
  44da78:	stur	w8, [x29, #-188]
  44da7c:	ldur	w8, [x29, #-88]
  44da80:	stur	w8, [x29, #-192]
  44da84:	mov	w8, #0x1                   	// #1
  44da88:	stur	w8, [x29, #-196]
  44da8c:	ldur	w0, [x29, #-196]
  44da90:	bl	40a3f0 <log_get_max_level_realm@plt>
  44da94:	ldur	w8, [x29, #-188]
  44da98:	and	w8, w8, #0x7
  44da9c:	cmp	w0, w8
  44daa0:	b.lt	44db0c <link_config_apply+0x608>  // b.tstop
  44daa4:	ldur	w8, [x29, #-196]
  44daa8:	ldur	w9, [x29, #-188]
  44daac:	orr	w0, w9, w8, lsl #10
  44dab0:	ldur	w1, [x29, #-192]
  44dab4:	ldur	x6, [x29, #-72]
  44dab8:	ldur	x10, [x29, #-24]
  44dabc:	ldr	w8, [x10, #148]
  44dac0:	str	w0, [sp, #224]
  44dac4:	mov	w0, w8
  44dac8:	str	w1, [sp, #220]
  44dacc:	str	x6, [sp, #208]
  44dad0:	bl	40b820 <wol_to_string@plt>
  44dad4:	ldr	w8, [sp, #224]
  44dad8:	str	x0, [sp, #200]
  44dadc:	mov	w0, w8
  44dae0:	ldr	w1, [sp, #220]
  44dae4:	ldr	x2, [sp, #312]
  44dae8:	mov	w3, #0x174                 	// #372
  44daec:	ldr	x4, [sp, #304]
  44daf0:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44daf4:	add	x5, x5, #0x1ea
  44daf8:	ldr	x6, [sp, #208]
  44dafc:	ldr	x7, [sp, #200]
  44db00:	bl	40a400 <log_internal_realm@plt>
  44db04:	str	w0, [sp, #196]
  44db08:	b	44db20 <link_config_apply+0x61c>
  44db0c:	ldur	w0, [x29, #-192]
  44db10:	bl	40a410 <abs@plt>
  44db14:	mov	w8, wzr
  44db18:	subs	w8, w8, w0, uxtb
  44db1c:	str	w8, [sp, #196]
  44db20:	ldr	w8, [sp, #196]
  44db24:	stur	w8, [x29, #-200]
  44db28:	ldur	x8, [x29, #-16]
  44db2c:	add	x0, x8, #0x8
  44db30:	ldur	x1, [x29, #-72]
  44db34:	ldur	x8, [x29, #-24]
  44db38:	add	x2, x8, #0x9c
  44db3c:	bl	40b830 <ethtool_set_features@plt>
  44db40:	stur	w0, [x29, #-88]
  44db44:	ldur	w9, [x29, #-88]
  44db48:	cmp	w9, #0x0
  44db4c:	cset	w9, ge  // ge = tcont
  44db50:	tbnz	w9, #0, 44dbd4 <link_config_apply+0x6d0>
  44db54:	mov	w8, #0x4                   	// #4
  44db58:	stur	w8, [x29, #-204]
  44db5c:	ldur	w8, [x29, #-88]
  44db60:	stur	w8, [x29, #-208]
  44db64:	mov	w8, #0x1                   	// #1
  44db68:	stur	w8, [x29, #-212]
  44db6c:	ldur	w0, [x29, #-212]
  44db70:	bl	40a3f0 <log_get_max_level_realm@plt>
  44db74:	ldur	w8, [x29, #-204]
  44db78:	and	w8, w8, #0x7
  44db7c:	cmp	w0, w8
  44db80:	b.lt	44dbb8 <link_config_apply+0x6b4>  // b.tstop
  44db84:	ldur	w8, [x29, #-212]
  44db88:	ldur	w9, [x29, #-204]
  44db8c:	orr	w0, w9, w8, lsl #10
  44db90:	ldur	w1, [x29, #-208]
  44db94:	ldur	x6, [x29, #-72]
  44db98:	ldr	x2, [sp, #312]
  44db9c:	mov	w3, #0x178                 	// #376
  44dba0:	ldr	x4, [sp, #304]
  44dba4:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44dba8:	add	x5, x5, #0x212
  44dbac:	bl	40a400 <log_internal_realm@plt>
  44dbb0:	str	w0, [sp, #192]
  44dbb4:	b	44dbcc <link_config_apply+0x6c8>
  44dbb8:	ldur	w0, [x29, #-208]
  44dbbc:	bl	40a410 <abs@plt>
  44dbc0:	mov	w8, wzr
  44dbc4:	subs	w8, w8, w0, uxtb
  44dbc8:	str	w8, [sp, #192]
  44dbcc:	ldr	w8, [sp, #192]
  44dbd0:	stur	w8, [x29, #-216]
  44dbd4:	ldur	x8, [x29, #-24]
  44dbd8:	ldrb	w9, [x8, #192]
  44dbdc:	tbnz	w9, #0, 44dc08 <link_config_apply+0x704>
  44dbe0:	ldur	x8, [x29, #-24]
  44dbe4:	ldrb	w9, [x8, #193]
  44dbe8:	tbnz	w9, #0, 44dc08 <link_config_apply+0x704>
  44dbec:	ldur	x8, [x29, #-24]
  44dbf0:	ldrb	w9, [x8, #194]
  44dbf4:	tbnz	w9, #0, 44dc08 <link_config_apply+0x704>
  44dbf8:	ldur	x8, [x29, #-24]
  44dbfc:	ldrb	w9, [x8, #195]
  44dc00:	tbnz	w9, #0, 44dc08 <link_config_apply+0x704>
  44dc04:	b	44dcb4 <link_config_apply+0x7b0>
  44dc08:	ldur	x8, [x29, #-16]
  44dc0c:	add	x0, x8, #0x8
  44dc10:	ldur	x1, [x29, #-72]
  44dc14:	ldur	x8, [x29, #-24]
  44dc18:	add	x2, x8, #0xb0
  44dc1c:	bl	40b840 <ethtool_set_channels@plt>
  44dc20:	stur	w0, [x29, #-88]
  44dc24:	ldur	w9, [x29, #-88]
  44dc28:	cmp	w9, #0x0
  44dc2c:	cset	w9, ge  // ge = tcont
  44dc30:	tbnz	w9, #0, 44dcb4 <link_config_apply+0x7b0>
  44dc34:	mov	w8, #0x4                   	// #4
  44dc38:	stur	w8, [x29, #-220]
  44dc3c:	ldur	w8, [x29, #-88]
  44dc40:	stur	w8, [x29, #-224]
  44dc44:	mov	w8, #0x1                   	// #1
  44dc48:	stur	w8, [x29, #-228]
  44dc4c:	ldur	w0, [x29, #-228]
  44dc50:	bl	40a3f0 <log_get_max_level_realm@plt>
  44dc54:	ldur	w8, [x29, #-220]
  44dc58:	and	w8, w8, #0x7
  44dc5c:	cmp	w0, w8
  44dc60:	b.lt	44dc98 <link_config_apply+0x794>  // b.tstop
  44dc64:	ldur	w8, [x29, #-228]
  44dc68:	ldur	w9, [x29, #-220]
  44dc6c:	orr	w0, w9, w8, lsl #10
  44dc70:	ldur	w1, [x29, #-224]
  44dc74:	ldur	x6, [x29, #-72]
  44dc78:	ldr	x2, [sp, #312]
  44dc7c:	mov	w3, #0x17d                 	// #381
  44dc80:	ldr	x4, [sp, #304]
  44dc84:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44dc88:	add	x5, x5, #0x23b
  44dc8c:	bl	40a400 <log_internal_realm@plt>
  44dc90:	str	w0, [sp, #188]
  44dc94:	b	44dcac <link_config_apply+0x7a8>
  44dc98:	ldur	w0, [x29, #-224]
  44dc9c:	bl	40a410 <abs@plt>
  44dca0:	mov	w8, wzr
  44dca4:	subs	w8, w8, w0, uxtb
  44dca8:	str	w8, [sp, #188]
  44dcac:	ldr	w8, [sp, #188]
  44dcb0:	stur	w8, [x29, #-232]
  44dcb4:	ldur	x8, [x29, #-24]
  44dcb8:	ldrb	w9, [x8, #204]
  44dcbc:	tbnz	w9, #0, 44dcd0 <link_config_apply+0x7cc>
  44dcc0:	ldur	x8, [x29, #-24]
  44dcc4:	ldrb	w9, [x8, #205]
  44dcc8:	tbnz	w9, #0, 44dcd0 <link_config_apply+0x7cc>
  44dccc:	b	44dd7c <link_config_apply+0x878>
  44dcd0:	ldur	x8, [x29, #-16]
  44dcd4:	add	x0, x8, #0x8
  44dcd8:	ldur	x1, [x29, #-72]
  44dcdc:	ldur	x8, [x29, #-24]
  44dce0:	add	x2, x8, #0xc4
  44dce4:	bl	40b850 <ethtool_set_nic_buffer_size@plt>
  44dce8:	stur	w0, [x29, #-88]
  44dcec:	ldur	w9, [x29, #-88]
  44dcf0:	cmp	w9, #0x0
  44dcf4:	cset	w9, ge  // ge = tcont
  44dcf8:	tbnz	w9, #0, 44dd7c <link_config_apply+0x878>
  44dcfc:	mov	w8, #0x4                   	// #4
  44dd00:	stur	w8, [x29, #-236]
  44dd04:	ldur	w8, [x29, #-88]
  44dd08:	stur	w8, [x29, #-240]
  44dd0c:	mov	w8, #0x1                   	// #1
  44dd10:	stur	w8, [x29, #-244]
  44dd14:	ldur	w0, [x29, #-244]
  44dd18:	bl	40a3f0 <log_get_max_level_realm@plt>
  44dd1c:	ldur	w8, [x29, #-236]
  44dd20:	and	w8, w8, #0x7
  44dd24:	cmp	w0, w8
  44dd28:	b.lt	44dd60 <link_config_apply+0x85c>  // b.tstop
  44dd2c:	ldur	w8, [x29, #-244]
  44dd30:	ldur	w9, [x29, #-236]
  44dd34:	orr	w0, w9, w8, lsl #10
  44dd38:	ldur	w1, [x29, #-240]
  44dd3c:	ldur	x6, [x29, #-72]
  44dd40:	ldr	x2, [sp, #312]
  44dd44:	mov	w3, #0x183                 	// #387
  44dd48:	ldr	x4, [sp, #304]
  44dd4c:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44dd50:	add	x5, x5, #0x25c
  44dd54:	bl	40a400 <log_internal_realm@plt>
  44dd58:	str	w0, [sp, #184]
  44dd5c:	b	44dd74 <link_config_apply+0x870>
  44dd60:	ldur	w0, [x29, #-240]
  44dd64:	bl	40a410 <abs@plt>
  44dd68:	mov	w8, wzr
  44dd6c:	subs	w8, w8, w0, uxtb
  44dd70:	str	w8, [sp, #184]
  44dd74:	ldr	w8, [sp, #184]
  44dd78:	stur	w8, [x29, #-248]
  44dd7c:	ldur	x0, [x29, #-32]
  44dd80:	sub	x1, x29, #0x5c
  44dd84:	bl	40aa60 <sd_device_get_ifindex@plt>
  44dd88:	stur	w0, [x29, #-88]
  44dd8c:	ldur	w8, [x29, #-88]
  44dd90:	cmp	w8, #0x0
  44dd94:	cset	w8, ge  // ge = tcont
  44dd98:	tbnz	w8, #0, 44de5c <link_config_apply+0x958>
  44dd9c:	mov	x8, xzr
  44dda0:	stur	x8, [x29, #-256]
  44dda4:	ldur	x8, [x29, #-32]
  44dda8:	str	x8, [sp, #552]
  44ddac:	mov	w9, #0x4                   	// #4
  44ddb0:	str	w9, [sp, #548]
  44ddb4:	ldur	w9, [x29, #-88]
  44ddb8:	str	w9, [sp, #544]
  44ddbc:	ldr	x8, [sp, #552]
  44ddc0:	cbz	x8, 44de00 <link_config_apply+0x8fc>
  44ddc4:	mov	w0, #0x1                   	// #1
  44ddc8:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ddcc:	ldr	w8, [sp, #548]
  44ddd0:	cmp	w0, w8
  44ddd4:	cset	w8, ge  // ge = tcont
  44ddd8:	mov	w9, #0x1                   	// #1
  44dddc:	eor	w8, w8, #0x1
  44dde0:	eor	w8, w8, w9
  44dde4:	and	w8, w8, #0x1
  44dde8:	mov	w1, w8
  44ddec:	sxtw	x10, w1
  44ddf0:	cbz	x10, 44de00 <link_config_apply+0x8fc>
  44ddf4:	ldr	x0, [sp, #552]
  44ddf8:	sub	x1, x29, #0x100
  44ddfc:	bl	40a860 <sd_device_get_sysname@plt>
  44de00:	ldr	w0, [sp, #548]
  44de04:	ldr	w1, [sp, #544]
  44de08:	ldur	x8, [x29, #-256]
  44de0c:	mov	x9, xzr
  44de10:	cmp	x8, #0x0
  44de14:	ldr	x8, [sp, #296]
  44de18:	csel	x5, x8, x9, ne  // ne = any
  44de1c:	ldur	x6, [x29, #-256]
  44de20:	ldr	x2, [sp, #312]
  44de24:	mov	w3, #0x188                 	// #392
  44de28:	ldr	x4, [sp, #304]
  44de2c:	mov	x7, x9
  44de30:	mov	x10, sp
  44de34:	str	x9, [x10]
  44de38:	mov	x9, sp
  44de3c:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44de40:	add	x10, x10, #0x280
  44de44:	str	x10, [x9, #8]
  44de48:	bl	40a870 <log_object_internal@plt>
  44de4c:	str	w0, [sp, #540]
  44de50:	ldr	w11, [sp, #540]
  44de54:	stur	w11, [x29, #-4]
  44de58:	b	44e704 <link_config_apply+0x1200>
  44de5c:	ldur	x0, [x29, #-32]
  44de60:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44de64:	add	x1, x1, #0x1d
  44de68:	sub	x2, x29, #0x50
  44de6c:	bl	44d1f8 <link_unsigned_attribute>
  44de70:	mov	w8, #0x0                   	// #0
  44de74:	strb	w8, [sp, #539]
  44de78:	ldur	w8, [x29, #-80]
  44de7c:	subs	w8, w8, #0x3
  44de80:	mov	w9, #0x1                   	// #1
  44de84:	cmp	w8, #0x1
  44de88:	cset	w8, ls  // ls = plast
  44de8c:	eor	w8, w8, w9
  44de90:	tbnz	w8, #0, 44dea4 <link_config_apply+0x9a0>
  44de94:	b	44de98 <link_config_apply+0x994>
  44de98:	mov	w8, #0x1                   	// #1
  44de9c:	strb	w8, [sp, #539]
  44dea0:	b	44dea4 <link_config_apply+0x9a0>
  44dea4:	ldrb	w8, [sp, #539]
  44dea8:	and	w8, w8, #0x1
  44deac:	strb	w8, [sp, #538]
  44deb0:	ldrb	w8, [sp, #538]
  44deb4:	tbnz	w8, #0, 44debc <link_config_apply+0x9b8>
  44deb8:	b	44df7c <link_config_apply+0xa78>
  44debc:	mov	w0, #0x10                  	// #16
  44dec0:	bl	44e718 <naming_scheme_has>
  44dec4:	tbnz	w0, #0, 44df7c <link_config_apply+0xa78>
  44dec8:	mov	x8, xzr
  44decc:	str	x8, [sp, #528]
  44ded0:	ldur	x8, [x29, #-32]
  44ded4:	str	x8, [sp, #520]
  44ded8:	mov	w9, #0x7                   	// #7
  44dedc:	str	w9, [sp, #516]
  44dee0:	str	wzr, [sp, #512]
  44dee4:	ldr	x8, [sp, #520]
  44dee8:	cbz	x8, 44df28 <link_config_apply+0xa24>
  44deec:	mov	w0, #0x1                   	// #1
  44def0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44def4:	ldr	w8, [sp, #516]
  44def8:	cmp	w0, w8
  44defc:	cset	w8, ge  // ge = tcont
  44df00:	mov	w9, #0x1                   	// #1
  44df04:	eor	w8, w8, #0x1
  44df08:	eor	w8, w8, w9
  44df0c:	and	w8, w8, #0x1
  44df10:	mov	w1, w8
  44df14:	sxtw	x10, w1
  44df18:	cbz	x10, 44df28 <link_config_apply+0xa24>
  44df1c:	ldr	x0, [sp, #520]
  44df20:	add	x1, sp, #0x210
  44df24:	bl	40a860 <sd_device_get_sysname@plt>
  44df28:	ldr	w0, [sp, #516]
  44df2c:	ldr	w1, [sp, #512]
  44df30:	ldr	x8, [sp, #528]
  44df34:	mov	x9, xzr
  44df38:	cmp	x8, #0x0
  44df3c:	ldr	x8, [sp, #296]
  44df40:	csel	x5, x8, x9, ne  // ne = any
  44df44:	ldr	x6, [sp, #528]
  44df48:	ldr	x2, [sp, #312]
  44df4c:	mov	w3, #0x18e                 	// #398
  44df50:	ldr	x4, [sp, #304]
  44df54:	mov	x7, x9
  44df58:	mov	x10, sp
  44df5c:	str	x9, [x10]
  44df60:	mov	x9, sp
  44df64:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44df68:	add	x10, x10, #0x29b
  44df6c:	str	x10, [x9, #8]
  44df70:	bl	40a870 <log_object_internal@plt>
  44df74:	str	w0, [sp, #508]
  44df78:	b	44e5a8 <link_config_apply+0x10a4>
  44df7c:	ldur	x8, [x29, #-16]
  44df80:	ldrb	w9, [x8, #12]
  44df84:	tbnz	w9, #0, 44df8c <link_config_apply+0xa88>
  44df88:	b	44e310 <link_config_apply+0xe0c>
  44df8c:	ldur	x8, [x29, #-24]
  44df90:	ldr	x8, [x8, #88]
  44df94:	cbz	x8, 44e310 <link_config_apply+0xe0c>
  44df98:	ldur	x8, [x29, #-24]
  44df9c:	ldr	x8, [x8, #88]
  44dfa0:	str	x8, [sp, #496]
  44dfa4:	ldur	x8, [x29, #-64]
  44dfa8:	mov	w9, #0x0                   	// #0
  44dfac:	str	w9, [sp, #180]
  44dfb0:	cbnz	x8, 44dfcc <link_config_apply+0xac8>
  44dfb4:	ldr	x8, [sp, #496]
  44dfb8:	ldr	w9, [x8]
  44dfbc:	mov	w10, #0xffffffff            	// #-1
  44dfc0:	cmp	w9, w10
  44dfc4:	cset	w9, ne  // ne = any
  44dfc8:	str	w9, [sp, #180]
  44dfcc:	ldr	w8, [sp, #180]
  44dfd0:	tbnz	w8, #0, 44dfd8 <link_config_apply+0xad4>
  44dfd4:	b	44e310 <link_config_apply+0xe0c>
  44dfd8:	ldr	x8, [sp, #496]
  44dfdc:	ldr	w9, [x8]
  44dfe0:	stur	w9, [x29, #-84]
  44dfe4:	ldur	w9, [x29, #-84]
  44dfe8:	subs	w9, w9, #0x0
  44dfec:	mov	w8, w9
  44dff0:	ubfx	x8, x8, #0, #32
  44dff4:	cmp	x8, #0x6
  44dff8:	str	x8, [sp, #168]
  44dffc:	b.hi	44e2e4 <link_config_apply+0xde0>  // b.pmore
  44e000:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  44e004:	add	x8, x8, #0x920
  44e008:	ldr	x11, [sp, #168]
  44e00c:	ldrsw	x10, [x8, x11, lsl #2]
  44e010:	add	x9, x8, x10
  44e014:	br	x9
  44e018:	ldur	w8, [x29, #-80]
  44e01c:	cmp	w8, #0x2
  44e020:	b.eq	44e028 <link_config_apply+0xb24>  // b.none
  44e024:	b	44e300 <link_config_apply+0xdfc>
  44e028:	mov	x8, xzr
  44e02c:	str	x8, [sp, #488]
  44e030:	ldur	x8, [x29, #-32]
  44e034:	str	x8, [sp, #480]
  44e038:	mov	w9, #0x7                   	// #7
  44e03c:	str	w9, [sp, #476]
  44e040:	str	wzr, [sp, #472]
  44e044:	ldr	x8, [sp, #480]
  44e048:	cbz	x8, 44e088 <link_config_apply+0xb84>
  44e04c:	mov	w0, #0x1                   	// #1
  44e050:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e054:	ldr	w8, [sp, #476]
  44e058:	cmp	w0, w8
  44e05c:	cset	w8, ge  // ge = tcont
  44e060:	mov	w9, #0x1                   	// #1
  44e064:	eor	w8, w8, #0x1
  44e068:	eor	w8, w8, w9
  44e06c:	and	w8, w8, #0x1
  44e070:	mov	w1, w8
  44e074:	sxtw	x10, w1
  44e078:	cbz	x10, 44e088 <link_config_apply+0xb84>
  44e07c:	ldr	x0, [sp, #480]
  44e080:	add	x1, sp, #0x1e8
  44e084:	bl	40a860 <sd_device_get_sysname@plt>
  44e088:	ldr	w0, [sp, #476]
  44e08c:	ldr	w1, [sp, #472]
  44e090:	ldr	x8, [sp, #488]
  44e094:	mov	x9, xzr
  44e098:	cmp	x8, #0x0
  44e09c:	ldr	x8, [sp, #296]
  44e0a0:	csel	x5, x8, x9, ne  // ne = any
  44e0a4:	ldr	x6, [sp, #488]
  44e0a8:	ldur	w10, [x29, #-84]
  44e0ac:	str	w0, [sp, #164]
  44e0b0:	mov	w0, w10
  44e0b4:	str	w1, [sp, #160]
  44e0b8:	str	x9, [sp, #152]
  44e0bc:	str	x5, [sp, #144]
  44e0c0:	str	x6, [sp, #136]
  44e0c4:	bl	44e750 <name_policy_to_string>
  44e0c8:	ldr	w10, [sp, #164]
  44e0cc:	str	x0, [sp, #128]
  44e0d0:	mov	w0, w10
  44e0d4:	ldr	w1, [sp, #160]
  44e0d8:	ldr	x2, [sp, #312]
  44e0dc:	mov	w3, #0x19d                 	// #413
  44e0e0:	ldr	x4, [sp, #304]
  44e0e4:	ldr	x5, [sp, #144]
  44e0e8:	ldr	x6, [sp, #136]
  44e0ec:	ldr	x7, [sp, #152]
  44e0f0:	mov	x8, sp
  44e0f4:	ldr	x9, [sp, #152]
  44e0f8:	str	x9, [x8]
  44e0fc:	mov	x8, sp
  44e100:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e104:	add	x11, x11, #0x2d7
  44e108:	str	x11, [x8, #8]
  44e10c:	mov	x8, sp
  44e110:	ldr	x11, [sp, #128]
  44e114:	str	x11, [x8, #16]
  44e118:	bl	40a870 <log_object_internal@plt>
  44e11c:	str	w0, [sp, #468]
  44e120:	b	44e5a8 <link_config_apply+0x10a4>
  44e124:	mov	w8, #0x0                   	// #0
  44e128:	strb	w8, [sp, #467]
  44e12c:	ldur	w8, [x29, #-80]
  44e130:	subs	w8, w8, #0x3
  44e134:	mov	w9, #0x1                   	// #1
  44e138:	cmp	w8, #0x1
  44e13c:	cset	w8, ls  // ls = plast
  44e140:	eor	w8, w8, w9
  44e144:	tbnz	w8, #0, 44e158 <link_config_apply+0xc54>
  44e148:	b	44e14c <link_config_apply+0xc48>
  44e14c:	mov	w8, #0x1                   	// #1
  44e150:	strb	w8, [sp, #467]
  44e154:	b	44e158 <link_config_apply+0xc54>
  44e158:	ldrb	w8, [sp, #467]
  44e15c:	and	w8, w8, #0x1
  44e160:	strb	w8, [sp, #466]
  44e164:	ldrb	w8, [sp, #466]
  44e168:	tbnz	w8, #0, 44e170 <link_config_apply+0xc6c>
  44e16c:	b	44e300 <link_config_apply+0xdfc>
  44e170:	mov	x8, xzr
  44e174:	str	x8, [sp, #456]
  44e178:	ldur	x8, [x29, #-32]
  44e17c:	str	x8, [sp, #448]
  44e180:	mov	w9, #0x7                   	// #7
  44e184:	str	w9, [sp, #444]
  44e188:	str	wzr, [sp, #440]
  44e18c:	ldr	x8, [sp, #448]
  44e190:	cbz	x8, 44e1d0 <link_config_apply+0xccc>
  44e194:	mov	w0, #0x1                   	// #1
  44e198:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e19c:	ldr	w8, [sp, #444]
  44e1a0:	cmp	w0, w8
  44e1a4:	cset	w8, ge  // ge = tcont
  44e1a8:	mov	w9, #0x1                   	// #1
  44e1ac:	eor	w8, w8, #0x1
  44e1b0:	eor	w8, w8, w9
  44e1b4:	and	w8, w8, #0x1
  44e1b8:	mov	w1, w8
  44e1bc:	sxtw	x10, w1
  44e1c0:	cbz	x10, 44e1d0 <link_config_apply+0xccc>
  44e1c4:	ldr	x0, [sp, #448]
  44e1c8:	add	x1, sp, #0x1c8
  44e1cc:	bl	40a860 <sd_device_get_sysname@plt>
  44e1d0:	ldr	w0, [sp, #444]
  44e1d4:	ldr	w1, [sp, #440]
  44e1d8:	ldr	x8, [sp, #456]
  44e1dc:	mov	x9, xzr
  44e1e0:	cmp	x8, #0x0
  44e1e4:	ldr	x8, [sp, #296]
  44e1e8:	csel	x5, x8, x9, ne  // ne = any
  44e1ec:	ldr	x6, [sp, #456]
  44e1f0:	ldur	w10, [x29, #-84]
  44e1f4:	str	w0, [sp, #124]
  44e1f8:	mov	w0, w10
  44e1fc:	str	w1, [sp, #120]
  44e200:	str	x9, [sp, #112]
  44e204:	str	x5, [sp, #104]
  44e208:	str	x6, [sp, #96]
  44e20c:	bl	44e750 <name_policy_to_string>
  44e210:	ldr	w10, [sp, #124]
  44e214:	str	x0, [sp, #88]
  44e218:	mov	w0, w10
  44e21c:	ldr	w1, [sp, #120]
  44e220:	ldr	x2, [sp, #312]
  44e224:	mov	w3, #0x1a4                 	// #420
  44e228:	ldr	x4, [sp, #304]
  44e22c:	ldr	x5, [sp, #104]
  44e230:	ldr	x6, [sp, #96]
  44e234:	ldr	x7, [sp, #112]
  44e238:	mov	x8, sp
  44e23c:	ldr	x9, [sp, #112]
  44e240:	str	x9, [x8]
  44e244:	mov	x8, sp
  44e248:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e24c:	add	x11, x11, #0x304
  44e250:	str	x11, [x8, #8]
  44e254:	mov	x8, sp
  44e258:	ldr	x11, [sp, #88]
  44e25c:	str	x11, [x8, #16]
  44e260:	bl	40a870 <log_object_internal@plt>
  44e264:	str	w0, [sp, #436]
  44e268:	b	44e5a8 <link_config_apply+0x10a4>
  44e26c:	ldur	x0, [x29, #-32]
  44e270:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e274:	add	x1, x1, #0x331
  44e278:	sub	x2, x29, #0x40
  44e27c:	bl	40aa40 <sd_device_get_property_value@plt>
  44e280:	b	44e300 <link_config_apply+0xdfc>
  44e284:	ldur	x0, [x29, #-32]
  44e288:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44e28c:	add	x1, x1, #0xc60
  44e290:	sub	x2, x29, #0x40
  44e294:	bl	40aa40 <sd_device_get_property_value@plt>
  44e298:	b	44e300 <link_config_apply+0xdfc>
  44e29c:	ldur	x0, [x29, #-32]
  44e2a0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44e2a4:	add	x1, x1, #0xc4f
  44e2a8:	sub	x2, x29, #0x40
  44e2ac:	bl	40aa40 <sd_device_get_property_value@plt>
  44e2b0:	b	44e300 <link_config_apply+0xdfc>
  44e2b4:	ldur	x0, [x29, #-32]
  44e2b8:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44e2bc:	add	x1, x1, #0xc3e
  44e2c0:	sub	x2, x29, #0x40
  44e2c4:	bl	40aa40 <sd_device_get_property_value@plt>
  44e2c8:	b	44e300 <link_config_apply+0xdfc>
  44e2cc:	ldur	x0, [x29, #-32]
  44e2d0:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44e2d4:	add	x1, x1, #0xc29
  44e2d8:	sub	x2, x29, #0x40
  44e2dc:	bl	40aa40 <sd_device_get_property_value@plt>
  44e2e0:	b	44e300 <link_config_apply+0xdfc>
  44e2e4:	mov	w0, #0x1                   	// #1
  44e2e8:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e2ec:	add	x1, x1, #0x34b
  44e2f0:	ldr	x2, [sp, #312]
  44e2f4:	mov	w3, #0x1b6                 	// #438
  44e2f8:	ldr	x4, [sp, #288]
  44e2fc:	bl	40a590 <log_assert_failed_unreachable_realm@plt>
  44e300:	ldr	x8, [sp, #496]
  44e304:	add	x8, x8, #0x4
  44e308:	str	x8, [sp, #496]
  44e30c:	b	44dfa4 <link_config_apply+0xaa0>
  44e310:	ldur	x8, [x29, #-64]
  44e314:	cbz	x8, 44e420 <link_config_apply+0xf1c>
  44e318:	mov	x8, xzr
  44e31c:	str	x8, [sp, #424]
  44e320:	ldur	x8, [x29, #-32]
  44e324:	str	x8, [sp, #416]
  44e328:	mov	w9, #0x7                   	// #7
  44e32c:	str	w9, [sp, #412]
  44e330:	str	wzr, [sp, #408]
  44e334:	ldr	x8, [sp, #416]
  44e338:	cbz	x8, 44e378 <link_config_apply+0xe74>
  44e33c:	mov	w0, #0x1                   	// #1
  44e340:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e344:	ldr	w8, [sp, #412]
  44e348:	cmp	w0, w8
  44e34c:	cset	w8, ge  // ge = tcont
  44e350:	mov	w9, #0x1                   	// #1
  44e354:	eor	w8, w8, #0x1
  44e358:	eor	w8, w8, w9
  44e35c:	and	w8, w8, #0x1
  44e360:	mov	w1, w8
  44e364:	sxtw	x10, w1
  44e368:	cbz	x10, 44e378 <link_config_apply+0xe74>
  44e36c:	ldr	x0, [sp, #416]
  44e370:	add	x1, sp, #0x1a8
  44e374:	bl	40a860 <sd_device_get_sysname@plt>
  44e378:	ldr	w0, [sp, #412]
  44e37c:	ldr	w1, [sp, #408]
  44e380:	ldr	x8, [sp, #424]
  44e384:	mov	x9, xzr
  44e388:	cmp	x8, #0x0
  44e38c:	ldr	x8, [sp, #296]
  44e390:	csel	x5, x8, x9, ne  // ne = any
  44e394:	ldr	x6, [sp, #424]
  44e398:	ldur	w10, [x29, #-84]
  44e39c:	str	w0, [sp, #84]
  44e3a0:	mov	w0, w10
  44e3a4:	str	w1, [sp, #80]
  44e3a8:	str	x9, [sp, #72]
  44e3ac:	str	x5, [sp, #64]
  44e3b0:	str	x6, [sp, #56]
  44e3b4:	bl	44e750 <name_policy_to_string>
  44e3b8:	ldur	x8, [x29, #-64]
  44e3bc:	ldr	w10, [sp, #84]
  44e3c0:	str	x0, [sp, #48]
  44e3c4:	mov	w0, w10
  44e3c8:	ldr	w1, [sp, #80]
  44e3cc:	ldr	x2, [sp, #312]
  44e3d0:	mov	w3, #0x1bb                 	// #443
  44e3d4:	ldr	x4, [sp, #304]
  44e3d8:	ldr	x5, [sp, #64]
  44e3dc:	ldr	x6, [sp, #56]
  44e3e0:	ldr	x7, [sp, #72]
  44e3e4:	mov	x9, sp
  44e3e8:	ldr	x11, [sp, #72]
  44e3ec:	str	x11, [x9]
  44e3f0:	mov	x9, sp
  44e3f4:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e3f8:	add	x12, x12, #0x35a
  44e3fc:	str	x12, [x9, #8]
  44e400:	mov	x9, sp
  44e404:	ldr	x12, [sp, #48]
  44e408:	str	x12, [x9, #16]
  44e40c:	mov	x9, sp
  44e410:	str	x8, [x9, #24]
  44e414:	bl	40a870 <log_object_internal@plt>
  44e418:	str	w0, [sp, #404]
  44e41c:	b	44e5a8 <link_config_apply+0x10a4>
  44e420:	ldur	x8, [x29, #-24]
  44e424:	ldr	x8, [x8, #96]
  44e428:	cbz	x8, 44e4f8 <link_config_apply+0xff4>
  44e42c:	ldur	x8, [x29, #-24]
  44e430:	ldr	x8, [x8, #96]
  44e434:	stur	x8, [x29, #-64]
  44e438:	mov	x8, xzr
  44e43c:	str	x8, [sp, #392]
  44e440:	ldur	x8, [x29, #-32]
  44e444:	str	x8, [sp, #384]
  44e448:	mov	w9, #0x7                   	// #7
  44e44c:	str	w9, [sp, #380]
  44e450:	str	wzr, [sp, #376]
  44e454:	ldr	x8, [sp, #384]
  44e458:	cbz	x8, 44e498 <link_config_apply+0xf94>
  44e45c:	mov	w0, #0x1                   	// #1
  44e460:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e464:	ldr	w8, [sp, #380]
  44e468:	cmp	w0, w8
  44e46c:	cset	w8, ge  // ge = tcont
  44e470:	mov	w9, #0x1                   	// #1
  44e474:	eor	w8, w8, #0x1
  44e478:	eor	w8, w8, w9
  44e47c:	and	w8, w8, #0x1
  44e480:	mov	w1, w8
  44e484:	sxtw	x10, w1
  44e488:	cbz	x10, 44e498 <link_config_apply+0xf94>
  44e48c:	ldr	x0, [sp, #384]
  44e490:	add	x1, sp, #0x188
  44e494:	bl	40a860 <sd_device_get_sysname@plt>
  44e498:	ldr	w0, [sp, #380]
  44e49c:	ldr	w1, [sp, #376]
  44e4a0:	ldr	x8, [sp, #392]
  44e4a4:	mov	x9, xzr
  44e4a8:	cmp	x8, #0x0
  44e4ac:	ldr	x8, [sp, #296]
  44e4b0:	csel	x5, x8, x9, ne  // ne = any
  44e4b4:	ldr	x6, [sp, #392]
  44e4b8:	ldur	x10, [x29, #-64]
  44e4bc:	ldr	x2, [sp, #312]
  44e4c0:	mov	w3, #0x1be                 	// #446
  44e4c4:	ldr	x4, [sp, #304]
  44e4c8:	mov	x7, x9
  44e4cc:	mov	x11, sp
  44e4d0:	str	x9, [x11]
  44e4d4:	mov	x9, sp
  44e4d8:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e4dc:	add	x11, x11, #0x373
  44e4e0:	str	x11, [x9, #8]
  44e4e4:	mov	x9, sp
  44e4e8:	str	x10, [x9, #16]
  44e4ec:	bl	40a870 <log_object_internal@plt>
  44e4f0:	str	w0, [sp, #372]
  44e4f4:	b	44e5a8 <link_config_apply+0x10a4>
  44e4f8:	mov	x8, xzr
  44e4fc:	str	x8, [sp, #360]
  44e500:	ldur	x8, [x29, #-32]
  44e504:	str	x8, [sp, #352]
  44e508:	mov	w9, #0x7                   	// #7
  44e50c:	str	w9, [sp, #348]
  44e510:	str	wzr, [sp, #344]
  44e514:	ldr	x8, [sp, #352]
  44e518:	cbz	x8, 44e558 <link_config_apply+0x1054>
  44e51c:	mov	w0, #0x1                   	// #1
  44e520:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e524:	ldr	w8, [sp, #348]
  44e528:	cmp	w0, w8
  44e52c:	cset	w8, ge  // ge = tcont
  44e530:	mov	w9, #0x1                   	// #1
  44e534:	eor	w8, w8, #0x1
  44e538:	eor	w8, w8, w9
  44e53c:	and	w8, w8, #0x1
  44e540:	mov	w1, w8
  44e544:	sxtw	x10, w1
  44e548:	cbz	x10, 44e558 <link_config_apply+0x1054>
  44e54c:	ldr	x0, [sp, #352]
  44e550:	add	x1, sp, #0x168
  44e554:	bl	40a860 <sd_device_get_sysname@plt>
  44e558:	ldr	w0, [sp, #348]
  44e55c:	ldr	w1, [sp, #344]
  44e560:	ldr	x8, [sp, #360]
  44e564:	mov	x9, xzr
  44e568:	cmp	x8, #0x0
  44e56c:	ldr	x8, [sp, #296]
  44e570:	csel	x5, x8, x9, ne  // ne = any
  44e574:	ldr	x6, [sp, #360]
  44e578:	ldr	x2, [sp, #312]
  44e57c:	mov	w3, #0x1c0                 	// #448
  44e580:	ldr	x4, [sp, #304]
  44e584:	mov	x7, x9
  44e588:	mov	x10, sp
  44e58c:	str	x9, [x10]
  44e590:	mov	x9, sp
  44e594:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e598:	add	x10, x10, #0x3aa
  44e59c:	str	x10, [x9, #8]
  44e5a0:	bl	40a870 <log_object_internal@plt>
  44e5a4:	str	w0, [sp, #340]
  44e5a8:	mov	w8, #0x0                   	// #0
  44e5ac:	strb	w8, [sp, #339]
  44e5b0:	ldur	x9, [x29, #-24]
  44e5b4:	ldr	w8, [x9, #80]
  44e5b8:	subs	w8, w8, #0x0
  44e5bc:	mov	w10, #0x1                   	// #1
  44e5c0:	cmp	w8, #0x1
  44e5c4:	cset	w8, ls  // ls = plast
  44e5c8:	eor	w8, w8, w10
  44e5cc:	tbnz	w8, #0, 44e5e0 <link_config_apply+0x10dc>
  44e5d0:	b	44e5d4 <link_config_apply+0x10d0>
  44e5d4:	mov	w8, #0x1                   	// #1
  44e5d8:	strb	w8, [sp, #339]
  44e5dc:	b	44e5e0 <link_config_apply+0x10dc>
  44e5e0:	ldrb	w8, [sp, #339]
  44e5e4:	and	w8, w8, #0x1
  44e5e8:	strb	w8, [sp, #338]
  44e5ec:	ldrb	w8, [sp, #338]
  44e5f0:	tbnz	w8, #0, 44e5f8 <link_config_apply+0x10f4>
  44e5f4:	b	44e624 <link_config_apply+0x1120>
  44e5f8:	ldur	x0, [x29, #-32]
  44e5fc:	ldur	x8, [x29, #-24]
  44e600:	ldr	w1, [x8, #80]
  44e604:	sub	x2, x29, #0x2e
  44e608:	bl	44e7ac <get_mac>
  44e60c:	cmp	w0, #0x0
  44e610:	cset	w9, le
  44e614:	tbnz	w9, #0, 44e620 <link_config_apply+0x111c>
  44e618:	sub	x8, x29, #0x2e
  44e61c:	stur	x8, [x29, #-56]
  44e620:	b	44e630 <link_config_apply+0x112c>
  44e624:	ldur	x8, [x29, #-24]
  44e628:	ldr	x8, [x8, #72]
  44e62c:	stur	x8, [x29, #-56]
  44e630:	ldur	x8, [x29, #-16]
  44e634:	add	x0, x8, #0x10
  44e638:	ldur	w1, [x29, #-92]
  44e63c:	ldur	x8, [x29, #-24]
  44e640:	ldr	x2, [x8, #104]
  44e644:	ldur	x3, [x29, #-56]
  44e648:	ldur	x8, [x29, #-24]
  44e64c:	ldr	w4, [x8, #112]
  44e650:	bl	40b860 <rtnl_set_link_properties@plt>
  44e654:	stur	w0, [x29, #-88]
  44e658:	ldur	w9, [x29, #-88]
  44e65c:	cmp	w9, #0x0
  44e660:	cset	w9, ge  // ge = tcont
  44e664:	tbnz	w9, #0, 44e6f4 <link_config_apply+0x11f0>
  44e668:	mov	w8, #0x4                   	// #4
  44e66c:	str	w8, [sp, #332]
  44e670:	ldur	w8, [x29, #-88]
  44e674:	str	w8, [sp, #328]
  44e678:	mov	w8, #0x1                   	// #1
  44e67c:	str	w8, [sp, #324]
  44e680:	ldr	w0, [sp, #324]
  44e684:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e688:	ldr	w8, [sp, #332]
  44e68c:	and	w8, w8, #0x7
  44e690:	cmp	w0, w8
  44e694:	b.lt	44e6cc <link_config_apply+0x11c8>  // b.tstop
  44e698:	ldr	w8, [sp, #324]
  44e69c:	ldr	w9, [sp, #332]
  44e6a0:	orr	w0, w9, w8, lsl #10
  44e6a4:	ldr	w1, [sp, #328]
  44e6a8:	ldur	x6, [x29, #-72]
  44e6ac:	ldr	x2, [sp, #312]
  44e6b0:	mov	w3, #0x1cb                 	// #459
  44e6b4:	ldr	x4, [sp, #304]
  44e6b8:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e6bc:	add	x5, x5, #0x3ed
  44e6c0:	bl	40a400 <log_internal_realm@plt>
  44e6c4:	str	w0, [sp, #44]
  44e6c8:	b	44e6e0 <link_config_apply+0x11dc>
  44e6cc:	ldr	w0, [sp, #328]
  44e6d0:	bl	40a410 <abs@plt>
  44e6d4:	mov	w8, wzr
  44e6d8:	subs	w8, w8, w0, uxtb
  44e6dc:	str	w8, [sp, #44]
  44e6e0:	ldr	w8, [sp, #44]
  44e6e4:	str	w8, [sp, #320]
  44e6e8:	ldr	w8, [sp, #320]
  44e6ec:	stur	w8, [x29, #-4]
  44e6f0:	b	44e704 <link_config_apply+0x1200>
  44e6f4:	ldur	x8, [x29, #-64]
  44e6f8:	ldur	x9, [x29, #-40]
  44e6fc:	str	x8, [x9]
  44e700:	stur	wzr, [x29, #-4]
  44e704:	ldur	w0, [x29, #-4]
  44e708:	add	sp, sp, #0x330
  44e70c:	ldr	x28, [sp, #16]
  44e710:	ldp	x29, x30, [sp], #32
  44e714:	ret

000000000044e718 <naming_scheme_has>:
  44e718:	sub	sp, sp, #0x20
  44e71c:	stp	x29, x30, [sp, #16]
  44e720:	add	x29, sp, #0x10
  44e724:	stur	w0, [x29, #-4]
  44e728:	bl	44fa64 <naming_scheme>
  44e72c:	ldr	w8, [x0, #8]
  44e730:	mvn	w8, w8
  44e734:	ldur	w9, [x29, #-4]
  44e738:	tst	w8, w9
  44e73c:	cset	w8, eq  // eq = none
  44e740:	and	w0, w8, #0x1
  44e744:	ldp	x29, x30, [sp, #16]
  44e748:	add	sp, sp, #0x20
  44e74c:	ret

000000000044e750 <name_policy_to_string>:
  44e750:	sub	sp, sp, #0x10
  44e754:	str	w0, [sp, #4]
  44e758:	ldr	w8, [sp, #4]
  44e75c:	cmp	w8, #0x0
  44e760:	cset	w8, lt  // lt = tstop
  44e764:	tbnz	w8, #0, 44e774 <name_policy_to_string+0x24>
  44e768:	ldr	w8, [sp, #4]
  44e76c:	cmp	w8, #0x7
  44e770:	b.lt	44e780 <name_policy_to_string+0x30>  // b.tstop
  44e774:	mov	x8, xzr
  44e778:	str	x8, [sp, #8]
  44e77c:	b	44e7a0 <name_policy_to_string+0x50>
  44e780:	ldrsw	x8, [sp, #4]
  44e784:	mov	x9, #0x8                   	// #8
  44e788:	mul	x8, x9, x8
  44e78c:	adrp	x9, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  44e790:	add	x9, x9, #0x518
  44e794:	add	x8, x9, x8
  44e798:	ldr	x8, [x8]
  44e79c:	str	x8, [sp, #8]
  44e7a0:	ldr	x0, [sp, #8]
  44e7a4:	add	sp, sp, #0x10
  44e7a8:	ret

000000000044e7ac <get_mac>:
  44e7ac:	sub	sp, sp, #0x1b0
  44e7b0:	stp	x29, x30, [sp, #400]
  44e7b4:	str	x28, [sp, #416]
  44e7b8:	add	x29, sp, #0x190
  44e7bc:	sub	x8, x29, #0x80
  44e7c0:	mov	w9, #0x1                   	// #1
  44e7c4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  44e7c8:	add	x10, x10, #0xa46
  44e7cc:	adrp	x11, 46d000 <on_inotify.__assert_in_set+0x9540>
  44e7d0:	add	x11, x11, #0xd5b
  44e7d4:	add	x11, x11, #0x3
  44e7d8:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e7dc:	add	x12, x12, #0x70b
  44e7e0:	str	x0, [x8, #112]
  44e7e4:	stur	w1, [x29, #-20]
  44e7e8:	str	x2, [x8, #96]
  44e7ec:	ldur	w13, [x29, #-20]
  44e7f0:	cmp	w13, #0x1
  44e7f4:	cset	w13, eq  // eq = none
  44e7f8:	and	w9, w13, w9
  44e7fc:	sturb	w9, [x29, #-37]
  44e800:	str	x8, [sp, #112]
  44e804:	str	x10, [sp, #104]
  44e808:	str	x11, [sp, #96]
  44e80c:	str	x12, [sp, #88]
  44e810:	mov	w8, #0x0                   	// #0
  44e814:	sturb	w8, [x29, #-45]
  44e818:	ldur	w8, [x29, #-20]
  44e81c:	subs	w8, w8, #0x0
  44e820:	mov	w9, #0x1                   	// #1
  44e824:	cmp	w8, #0x1
  44e828:	cset	w8, ls  // ls = plast
  44e82c:	eor	w8, w8, w9
  44e830:	tbnz	w8, #0, 44e844 <get_mac+0x98>
  44e834:	b	44e838 <get_mac+0x8c>
  44e838:	mov	w8, #0x1                   	// #1
  44e83c:	sturb	w8, [x29, #-45]
  44e840:	b	44e844 <get_mac+0x98>
  44e844:	ldurb	w8, [x29, #-45]
  44e848:	mov	w9, #0x1                   	// #1
  44e84c:	and	w8, w8, w9
  44e850:	sturb	w8, [x29, #-46]
  44e854:	ldurb	w8, [x29, #-46]
  44e858:	eor	w8, w8, #0x1
  44e85c:	eor	w8, w8, w9
  44e860:	eor	w8, w8, w9
  44e864:	and	w8, w8, #0x1
  44e868:	mov	w0, w8
  44e86c:	sxtw	x10, w0
  44e870:	cbz	x10, 44e894 <get_mac+0xe8>
  44e874:	mov	w0, #0x1                   	// #1
  44e878:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e87c:	add	x1, x1, #0x682
  44e880:	ldr	x2, [sp, #96]
  44e884:	mov	w3, #0x11a                 	// #282
  44e888:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e88c:	add	x4, x4, #0x6cb
  44e890:	bl	40a540 <log_assert_failed_realm@plt>
  44e894:	ldr	x8, [sp, #112]
  44e898:	ldr	x0, [x8, #112]
  44e89c:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  44e8a0:	add	x1, x1, #0xc90
  44e8a4:	sub	x2, x29, #0x24
  44e8a8:	bl	44d1f8 <link_unsigned_attribute>
  44e8ac:	stur	w0, [x29, #-44]
  44e8b0:	ldur	w9, [x29, #-44]
  44e8b4:	cmp	w9, #0x0
  44e8b8:	cset	w9, ge  // ge = tcont
  44e8bc:	tbnz	w9, #0, 44e8cc <get_mac+0x120>
  44e8c0:	ldur	w8, [x29, #-44]
  44e8c4:	stur	w8, [x29, #-4]
  44e8c8:	b	44ef78 <get_mac+0x7cc>
  44e8cc:	ldur	w8, [x29, #-36]
  44e8d0:	subs	w9, w8, #0x0
  44e8d4:	cmp	w9, #0x1
  44e8d8:	str	w8, [sp, #84]
  44e8dc:	b.ls	44ea9c <get_mac+0x2f0>  // b.plast
  44e8e0:	b	44e8e4 <get_mac+0x138>
  44e8e4:	ldr	w8, [sp, #84]
  44e8e8:	cmp	w8, #0x2
  44e8ec:	b.eq	44e9d4 <get_mac+0x228>  // b.none
  44e8f0:	b	44e8f4 <get_mac+0x148>
  44e8f4:	ldr	w8, [sp, #84]
  44e8f8:	cmp	w8, #0x3
  44e8fc:	cset	w9, eq  // eq = none
  44e900:	eor	w9, w9, #0x1
  44e904:	tbnz	w9, #0, 44eaa0 <get_mac+0x2f4>
  44e908:	b	44e90c <get_mac+0x160>
  44e90c:	mov	x8, xzr
  44e910:	ldr	x9, [sp, #112]
  44e914:	str	x8, [x9, #72]
  44e918:	ldr	x8, [x9, #112]
  44e91c:	str	x8, [x9, #64]
  44e920:	mov	w10, #0x7                   	// #7
  44e924:	stur	w10, [x29, #-68]
  44e928:	stur	wzr, [x29, #-72]
  44e92c:	ldr	x8, [x9, #64]
  44e930:	cbz	x8, 44e974 <get_mac+0x1c8>
  44e934:	mov	w0, #0x1                   	// #1
  44e938:	bl	40a3f0 <log_get_max_level_realm@plt>
  44e93c:	ldur	w8, [x29, #-68]
  44e940:	cmp	w0, w8
  44e944:	cset	w8, ge  // ge = tcont
  44e948:	mov	w9, #0x1                   	// #1
  44e94c:	eor	w8, w8, #0x1
  44e950:	eor	w8, w8, w9
  44e954:	and	w8, w8, #0x1
  44e958:	mov	w1, w8
  44e95c:	sxtw	x10, w1
  44e960:	cbz	x10, 44e974 <get_mac+0x1c8>
  44e964:	ldr	x8, [sp, #112]
  44e968:	ldr	x0, [x8, #64]
  44e96c:	sub	x1, x29, #0x38
  44e970:	bl	40a860 <sd_device_get_sysname@plt>
  44e974:	ldur	w0, [x29, #-68]
  44e978:	ldur	w1, [x29, #-72]
  44e97c:	ldr	x8, [sp, #112]
  44e980:	ldr	x9, [x8, #72]
  44e984:	mov	x10, xzr
  44e988:	cmp	x9, #0x0
  44e98c:	ldr	x9, [sp, #104]
  44e990:	csel	x5, x9, x10, ne  // ne = any
  44e994:	ldr	x6, [x8, #72]
  44e998:	ldr	x2, [sp, #96]
  44e99c:	mov	w3, #0x121                 	// #289
  44e9a0:	ldr	x4, [sp, #88]
  44e9a4:	mov	x7, x10
  44e9a8:	mov	x11, sp
  44e9ac:	str	x10, [x11]
  44e9b0:	mov	x10, sp
  44e9b4:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44e9b8:	add	x11, x11, #0x713
  44e9bc:	str	x11, [x10, #8]
  44e9c0:	bl	40a870 <log_object_internal@plt>
  44e9c4:	stur	w0, [x29, #-76]
  44e9c8:	ldur	w12, [x29, #-76]
  44e9cc:	stur	w12, [x29, #-4]
  44e9d0:	b	44ef78 <get_mac+0x7cc>
  44e9d4:	mov	x8, xzr
  44e9d8:	ldr	x9, [sp, #112]
  44e9dc:	str	x8, [x9, #40]
  44e9e0:	ldr	x8, [x9, #112]
  44e9e4:	str	x8, [x9, #32]
  44e9e8:	mov	w10, #0x7                   	// #7
  44e9ec:	stur	w10, [x29, #-100]
  44e9f0:	stur	wzr, [x29, #-104]
  44e9f4:	ldr	x8, [x9, #32]
  44e9f8:	cbz	x8, 44ea3c <get_mac+0x290>
  44e9fc:	mov	w0, #0x1                   	// #1
  44ea00:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ea04:	ldur	w8, [x29, #-100]
  44ea08:	cmp	w0, w8
  44ea0c:	cset	w8, ge  // ge = tcont
  44ea10:	mov	w9, #0x1                   	// #1
  44ea14:	eor	w8, w8, #0x1
  44ea18:	eor	w8, w8, w9
  44ea1c:	and	w8, w8, #0x1
  44ea20:	mov	w1, w8
  44ea24:	sxtw	x10, w1
  44ea28:	cbz	x10, 44ea3c <get_mac+0x290>
  44ea2c:	ldr	x8, [sp, #112]
  44ea30:	ldr	x0, [x8, #32]
  44ea34:	sub	x1, x29, #0x58
  44ea38:	bl	40a860 <sd_device_get_sysname@plt>
  44ea3c:	ldur	w0, [x29, #-100]
  44ea40:	ldur	w1, [x29, #-104]
  44ea44:	ldr	x8, [sp, #112]
  44ea48:	ldr	x9, [x8, #40]
  44ea4c:	mov	x10, xzr
  44ea50:	cmp	x9, #0x0
  44ea54:	ldr	x9, [sp, #104]
  44ea58:	csel	x5, x9, x10, ne  // ne = any
  44ea5c:	ldr	x6, [x8, #40]
  44ea60:	ldr	x2, [sp, #96]
  44ea64:	mov	w3, #0x123                 	// #291
  44ea68:	ldr	x4, [sp, #88]
  44ea6c:	mov	x7, x10
  44ea70:	mov	x11, sp
  44ea74:	str	x10, [x11]
  44ea78:	mov	x10, sp
  44ea7c:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ea80:	add	x11, x11, #0x73e
  44ea84:	str	x11, [x10, #8]
  44ea88:	bl	40a870 <log_object_internal@plt>
  44ea8c:	stur	w0, [x29, #-108]
  44ea90:	ldur	w12, [x29, #-108]
  44ea94:	stur	w12, [x29, #-4]
  44ea98:	b	44ef78 <get_mac+0x7cc>
  44ea9c:	b	44eb74 <get_mac+0x3c8>
  44eaa0:	mov	x8, xzr
  44eaa4:	ldr	x9, [sp, #112]
  44eaa8:	str	x8, [x9, #8]
  44eaac:	ldr	x8, [x9, #112]
  44eab0:	str	x8, [x9]
  44eab4:	mov	w10, #0x4                   	// #4
  44eab8:	stur	w10, [x29, #-132]
  44eabc:	stur	wzr, [x29, #-136]
  44eac0:	ldr	x8, [x9]
  44eac4:	cbz	x8, 44eb08 <get_mac+0x35c>
  44eac8:	mov	w0, #0x1                   	// #1
  44eacc:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ead0:	ldur	w8, [x29, #-132]
  44ead4:	cmp	w0, w8
  44ead8:	cset	w8, ge  // ge = tcont
  44eadc:	mov	w9, #0x1                   	// #1
  44eae0:	eor	w8, w8, #0x1
  44eae4:	eor	w8, w8, w9
  44eae8:	and	w8, w8, #0x1
  44eaec:	mov	w1, w8
  44eaf0:	sxtw	x10, w1
  44eaf4:	cbz	x10, 44eb08 <get_mac+0x35c>
  44eaf8:	ldr	x8, [sp, #112]
  44eafc:	ldr	x0, [x8]
  44eb00:	sub	x1, x29, #0x78
  44eb04:	bl	40a860 <sd_device_get_sysname@plt>
  44eb08:	ldur	w0, [x29, #-132]
  44eb0c:	ldur	w1, [x29, #-136]
  44eb10:	ldr	x8, [sp, #112]
  44eb14:	ldr	x9, [x8, #8]
  44eb18:	mov	x10, xzr
  44eb1c:	cmp	x9, #0x0
  44eb20:	ldr	x9, [sp, #104]
  44eb24:	csel	x5, x9, x10, ne  // ne = any
  44eb28:	ldr	x6, [x8, #8]
  44eb2c:	ldur	w11, [x29, #-36]
  44eb30:	ldr	x2, [sp, #96]
  44eb34:	mov	w3, #0x128                 	// #296
  44eb38:	ldr	x4, [sp, #88]
  44eb3c:	mov	x7, x10
  44eb40:	mov	x12, sp
  44eb44:	str	x10, [x12]
  44eb48:	mov	x10, sp
  44eb4c:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  44eb50:	add	x12, x12, #0x774
  44eb54:	str	x12, [x10, #8]
  44eb58:	mov	x10, sp
  44eb5c:	str	w11, [x10, #16]
  44eb60:	bl	40a870 <log_object_internal@plt>
  44eb64:	stur	w0, [x29, #-140]
  44eb68:	ldur	w11, [x29, #-140]
  44eb6c:	stur	w11, [x29, #-4]
  44eb70:	b	44ef78 <get_mac+0x7cc>
  44eb74:	ldurb	w8, [x29, #-37]
  44eb78:	and	w8, w8, #0x1
  44eb7c:	ldur	w9, [x29, #-36]
  44eb80:	cmp	w9, #0x1
  44eb84:	cset	w9, eq  // eq = none
  44eb88:	and	w9, w9, #0x1
  44eb8c:	cmp	w8, w9
  44eb90:	b.ne	44ec9c <get_mac+0x4f0>  // b.any
  44eb94:	mov	x8, xzr
  44eb98:	stur	x8, [x29, #-152]
  44eb9c:	ldr	x8, [sp, #112]
  44eba0:	ldr	x9, [x8, #112]
  44eba4:	stur	x9, [x29, #-160]
  44eba8:	mov	w10, #0x7                   	// #7
  44ebac:	stur	w10, [x29, #-164]
  44ebb0:	stur	wzr, [x29, #-168]
  44ebb4:	ldur	x9, [x29, #-160]
  44ebb8:	cbz	x9, 44ebf8 <get_mac+0x44c>
  44ebbc:	mov	w0, #0x1                   	// #1
  44ebc0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ebc4:	ldur	w8, [x29, #-164]
  44ebc8:	cmp	w0, w8
  44ebcc:	cset	w8, ge  // ge = tcont
  44ebd0:	mov	w9, #0x1                   	// #1
  44ebd4:	eor	w8, w8, #0x1
  44ebd8:	eor	w8, w8, w9
  44ebdc:	and	w8, w8, #0x1
  44ebe0:	mov	w1, w8
  44ebe4:	sxtw	x10, w1
  44ebe8:	cbz	x10, 44ebf8 <get_mac+0x44c>
  44ebec:	ldur	x0, [x29, #-160]
  44ebf0:	sub	x1, x29, #0x98
  44ebf4:	bl	40a860 <sd_device_get_sysname@plt>
  44ebf8:	ldur	w0, [x29, #-164]
  44ebfc:	ldur	w1, [x29, #-168]
  44ec00:	ldur	x8, [x29, #-152]
  44ec04:	mov	x9, xzr
  44ec08:	cmp	x8, #0x0
  44ec0c:	ldr	x8, [sp, #104]
  44ec10:	csel	x5, x8, x9, ne  // ne = any
  44ec14:	ldur	x6, [x29, #-152]
  44ec18:	ldur	w10, [x29, #-20]
  44ec1c:	str	w0, [sp, #80]
  44ec20:	mov	w0, w10
  44ec24:	str	w1, [sp, #76]
  44ec28:	str	x9, [sp, #64]
  44ec2c:	str	x5, [sp, #56]
  44ec30:	str	x6, [sp, #48]
  44ec34:	bl	44f030 <mac_address_policy_to_string>
  44ec38:	ldr	w10, [sp, #80]
  44ec3c:	str	x0, [sp, #40]
  44ec40:	mov	w0, w10
  44ec44:	ldr	w1, [sp, #76]
  44ec48:	ldr	x2, [sp, #96]
  44ec4c:	mov	w3, #0x12d                 	// #301
  44ec50:	ldr	x4, [sp, #88]
  44ec54:	ldr	x5, [sp, #56]
  44ec58:	ldr	x6, [sp, #48]
  44ec5c:	ldr	x7, [sp, #64]
  44ec60:	mov	x8, sp
  44ec64:	ldr	x9, [sp, #64]
  44ec68:	str	x9, [x8]
  44ec6c:	mov	x8, sp
  44ec70:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ec74:	add	x11, x11, #0x79a
  44ec78:	str	x11, [x8, #8]
  44ec7c:	mov	x8, sp
  44ec80:	ldr	x11, [sp, #40]
  44ec84:	str	x11, [x8, #16]
  44ec88:	bl	40a870 <log_object_internal@plt>
  44ec8c:	stur	w0, [x29, #-172]
  44ec90:	ldur	w10, [x29, #-172]
  44ec94:	stur	w10, [x29, #-4]
  44ec98:	b	44ef78 <get_mac+0x7cc>
  44ec9c:	ldurb	w8, [x29, #-37]
  44eca0:	tbnz	w8, #0, 44eca8 <get_mac+0x4fc>
  44eca4:	b	44ed70 <get_mac+0x5c4>
  44eca8:	mov	x8, xzr
  44ecac:	stur	x8, [x29, #-184]
  44ecb0:	ldr	x8, [sp, #112]
  44ecb4:	ldr	x9, [x8, #112]
  44ecb8:	stur	x9, [x29, #-192]
  44ecbc:	mov	w10, #0x7                   	// #7
  44ecc0:	stur	w10, [x29, #-196]
  44ecc4:	str	wzr, [sp, #200]
  44ecc8:	ldur	x9, [x29, #-192]
  44eccc:	cbz	x9, 44ed0c <get_mac+0x560>
  44ecd0:	mov	w0, #0x1                   	// #1
  44ecd4:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ecd8:	ldur	w8, [x29, #-196]
  44ecdc:	cmp	w0, w8
  44ece0:	cset	w8, ge  // ge = tcont
  44ece4:	mov	w9, #0x1                   	// #1
  44ece8:	eor	w8, w8, #0x1
  44ecec:	eor	w8, w8, w9
  44ecf0:	and	w8, w8, #0x1
  44ecf4:	mov	w1, w8
  44ecf8:	sxtw	x10, w1
  44ecfc:	cbz	x10, 44ed0c <get_mac+0x560>
  44ed00:	ldur	x0, [x29, #-192]
  44ed04:	sub	x1, x29, #0xb8
  44ed08:	bl	40a860 <sd_device_get_sysname@plt>
  44ed0c:	ldur	w0, [x29, #-196]
  44ed10:	ldr	w1, [sp, #200]
  44ed14:	ldur	x8, [x29, #-184]
  44ed18:	mov	x9, xzr
  44ed1c:	cmp	x8, #0x0
  44ed20:	ldr	x8, [sp, #104]
  44ed24:	csel	x5, x8, x9, ne  // ne = any
  44ed28:	ldur	x6, [x29, #-184]
  44ed2c:	ldr	x2, [sp, #96]
  44ed30:	mov	w3, #0x130                 	// #304
  44ed34:	ldr	x4, [sp, #88]
  44ed38:	mov	x7, x9
  44ed3c:	mov	x10, sp
  44ed40:	str	x9, [x10]
  44ed44:	mov	x9, sp
  44ed48:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ed4c:	add	x10, x10, #0x7c8
  44ed50:	str	x10, [x9, #8]
  44ed54:	bl	40a870 <log_object_internal@plt>
  44ed58:	str	w0, [sp, #196]
  44ed5c:	ldr	x8, [sp, #112]
  44ed60:	ldr	x0, [x8, #96]
  44ed64:	mov	x1, #0x6                   	// #6
  44ed68:	bl	40b870 <random_bytes@plt>
  44ed6c:	b	44ef4c <get_mac+0x7a0>
  44ed70:	ldr	x8, [sp, #112]
  44ed74:	ldr	x0, [x8, #112]
  44ed78:	mov	w9, #0x20                  	// #32
  44ed7c:	str	x0, [sp, #32]
  44ed80:	mov	w0, w9
  44ed84:	bl	44e718 <naming_scheme_has>
  44ed88:	ldr	x8, [sp, #32]
  44ed8c:	str	w0, [sp, #28]
  44ed90:	mov	x0, x8
  44ed94:	ldr	w1, [sp, #28]
  44ed98:	and	w1, w1, #0x1
  44ed9c:	add	x2, sp, #0xb8
  44eda0:	bl	45817c <net_get_unique_predictable_data>
  44eda4:	stur	w0, [x29, #-44]
  44eda8:	ldur	w9, [x29, #-44]
  44edac:	cmp	w9, #0x0
  44edb0:	cset	w9, ge  // ge = tcont
  44edb4:	tbnz	w9, #0, 44ee7c <get_mac+0x6d0>
  44edb8:	mov	x8, xzr
  44edbc:	str	x8, [sp, #176]
  44edc0:	ldr	x8, [sp, #112]
  44edc4:	ldr	x9, [x8, #112]
  44edc8:	str	x9, [sp, #168]
  44edcc:	mov	w10, #0x4                   	// #4
  44edd0:	str	w10, [sp, #164]
  44edd4:	ldur	w10, [x29, #-44]
  44edd8:	str	w10, [sp, #160]
  44eddc:	ldr	x9, [sp, #168]
  44ede0:	cbz	x9, 44ee20 <get_mac+0x674>
  44ede4:	mov	w0, #0x1                   	// #1
  44ede8:	bl	40a3f0 <log_get_max_level_realm@plt>
  44edec:	ldr	w8, [sp, #164]
  44edf0:	cmp	w0, w8
  44edf4:	cset	w8, ge  // ge = tcont
  44edf8:	mov	w9, #0x1                   	// #1
  44edfc:	eor	w8, w8, #0x1
  44ee00:	eor	w8, w8, w9
  44ee04:	and	w8, w8, #0x1
  44ee08:	mov	w1, w8
  44ee0c:	sxtw	x10, w1
  44ee10:	cbz	x10, 44ee20 <get_mac+0x674>
  44ee14:	ldr	x0, [sp, #168]
  44ee18:	add	x1, sp, #0xb0
  44ee1c:	bl	40a860 <sd_device_get_sysname@plt>
  44ee20:	ldr	w0, [sp, #164]
  44ee24:	ldr	w1, [sp, #160]
  44ee28:	ldr	x8, [sp, #176]
  44ee2c:	mov	x9, xzr
  44ee30:	cmp	x8, #0x0
  44ee34:	ldr	x8, [sp, #104]
  44ee38:	csel	x5, x8, x9, ne  // ne = any
  44ee3c:	ldr	x6, [sp, #176]
  44ee40:	ldr	x2, [sp, #96]
  44ee44:	mov	w3, #0x139                 	// #313
  44ee48:	ldr	x4, [sp, #88]
  44ee4c:	mov	x7, x9
  44ee50:	mov	x10, sp
  44ee54:	str	x9, [x10]
  44ee58:	mov	x9, sp
  44ee5c:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ee60:	add	x10, x10, #0x7eb
  44ee64:	str	x10, [x9, #8]
  44ee68:	bl	40a870 <log_object_internal@plt>
  44ee6c:	str	w0, [sp, #156]
  44ee70:	ldr	w11, [sp, #156]
  44ee74:	stur	w11, [x29, #-4]
  44ee78:	b	44ef78 <get_mac+0x7cc>
  44ee7c:	mov	x8, xzr
  44ee80:	str	x8, [sp, #144]
  44ee84:	ldr	x8, [sp, #112]
  44ee88:	ldr	x9, [x8, #112]
  44ee8c:	str	x9, [sp, #136]
  44ee90:	mov	w10, #0x7                   	// #7
  44ee94:	str	w10, [sp, #132]
  44ee98:	str	wzr, [sp, #128]
  44ee9c:	ldr	x9, [sp, #136]
  44eea0:	cbz	x9, 44eee0 <get_mac+0x734>
  44eea4:	mov	w0, #0x1                   	// #1
  44eea8:	bl	40a3f0 <log_get_max_level_realm@plt>
  44eeac:	ldr	w8, [sp, #132]
  44eeb0:	cmp	w0, w8
  44eeb4:	cset	w8, ge  // ge = tcont
  44eeb8:	mov	w9, #0x1                   	// #1
  44eebc:	eor	w8, w8, #0x1
  44eec0:	eor	w8, w8, w9
  44eec4:	and	w8, w8, #0x1
  44eec8:	mov	w1, w8
  44eecc:	sxtw	x10, w1
  44eed0:	cbz	x10, 44eee0 <get_mac+0x734>
  44eed4:	ldr	x0, [sp, #136]
  44eed8:	add	x1, sp, #0x90
  44eedc:	bl	40a860 <sd_device_get_sysname@plt>
  44eee0:	ldr	w0, [sp, #132]
  44eee4:	ldr	w1, [sp, #128]
  44eee8:	ldr	x8, [sp, #144]
  44eeec:	mov	x9, xzr
  44eef0:	cmp	x8, #0x0
  44eef4:	ldr	x8, [sp, #104]
  44eef8:	csel	x5, x8, x9, ne  // ne = any
  44eefc:	ldr	x6, [sp, #144]
  44ef00:	ldr	x2, [sp, #96]
  44ef04:	mov	w3, #0x13b                 	// #315
  44ef08:	ldr	x4, [sp, #88]
  44ef0c:	mov	x7, x9
  44ef10:	mov	x10, sp
  44ef14:	str	x9, [x10]
  44ef18:	mov	x9, sp
  44ef1c:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ef20:	add	x10, x10, #0x811
  44ef24:	str	x10, [x9, #8]
  44ef28:	bl	40a870 <log_object_internal@plt>
  44ef2c:	str	w0, [sp, #124]
  44ef30:	ldr	x8, [sp, #112]
  44ef34:	ldr	x9, [x8, #96]
  44ef38:	add	x10, sp, #0xb8
  44ef3c:	ldr	w11, [sp, #184]
  44ef40:	str	w11, [x9]
  44ef44:	ldrh	w11, [x10, #4]
  44ef48:	strh	w11, [x9, #4]
  44ef4c:	ldr	x8, [sp, #112]
  44ef50:	ldr	x9, [x8, #96]
  44ef54:	ldrb	w10, [x9]
  44ef58:	and	w10, w10, #0xfe
  44ef5c:	strb	w10, [x9]
  44ef60:	ldr	x9, [x8, #96]
  44ef64:	ldrb	w10, [x9]
  44ef68:	orr	w10, w10, #0x2
  44ef6c:	strb	w10, [x9]
  44ef70:	mov	w10, #0x1                   	// #1
  44ef74:	stur	w10, [x29, #-4]
  44ef78:	ldur	w0, [x29, #-4]
  44ef7c:	ldr	x28, [sp, #416]
  44ef80:	ldp	x29, x30, [sp, #400]
  44ef84:	add	sp, sp, #0x1b0
  44ef88:	ret

000000000044ef8c <link_get_driver>:
  44ef8c:	sub	sp, sp, #0x50
  44ef90:	stp	x29, x30, [sp, #64]
  44ef94:	add	x29, sp, #0x40
  44ef98:	mov	x8, xzr
  44ef9c:	add	x9, sp, #0x18
  44efa0:	stur	x0, [x29, #-16]
  44efa4:	stur	x1, [x29, #-24]
  44efa8:	str	x2, [sp, #32]
  44efac:	str	x8, [sp, #16]
  44efb0:	ldur	x0, [x29, #-24]
  44efb4:	mov	x1, x9
  44efb8:	bl	40a860 <sd_device_get_sysname@plt>
  44efbc:	str	w0, [sp, #12]
  44efc0:	ldr	w10, [sp, #12]
  44efc4:	cmp	w10, #0x0
  44efc8:	cset	w10, ge  // ge = tcont
  44efcc:	tbnz	w10, #0, 44efdc <link_get_driver+0x50>
  44efd0:	ldr	w8, [sp, #12]
  44efd4:	stur	w8, [x29, #-4]
  44efd8:	b	44f020 <link_get_driver+0x94>
  44efdc:	ldur	x8, [x29, #-16]
  44efe0:	add	x0, x8, #0x8
  44efe4:	ldr	x1, [sp, #24]
  44efe8:	add	x2, sp, #0x10
  44efec:	bl	40b880 <ethtool_get_driver@plt>
  44eff0:	str	w0, [sp, #12]
  44eff4:	ldr	w9, [sp, #12]
  44eff8:	cmp	w9, #0x0
  44effc:	cset	w9, ge  // ge = tcont
  44f000:	tbnz	w9, #0, 44f010 <link_get_driver+0x84>
  44f004:	ldr	w8, [sp, #12]
  44f008:	stur	w8, [x29, #-4]
  44f00c:	b	44f020 <link_get_driver+0x94>
  44f010:	ldr	x8, [sp, #16]
  44f014:	ldr	x9, [sp, #32]
  44f018:	str	x8, [x9]
  44f01c:	stur	wzr, [x29, #-4]
  44f020:	ldur	w0, [x29, #-4]
  44f024:	ldp	x29, x30, [sp, #64]
  44f028:	add	sp, sp, #0x50
  44f02c:	ret

000000000044f030 <mac_address_policy_to_string>:
  44f030:	sub	sp, sp, #0x10
  44f034:	str	w0, [sp, #4]
  44f038:	ldr	w8, [sp, #4]
  44f03c:	cmp	w8, #0x0
  44f040:	cset	w8, lt  // lt = tstop
  44f044:	tbnz	w8, #0, 44f054 <mac_address_policy_to_string+0x24>
  44f048:	ldr	w8, [sp, #4]
  44f04c:	cmp	w8, #0x3
  44f050:	b.lt	44f060 <mac_address_policy_to_string+0x30>  // b.tstop
  44f054:	mov	x8, xzr
  44f058:	str	x8, [sp, #8]
  44f05c:	b	44f080 <mac_address_policy_to_string+0x50>
  44f060:	ldrsw	x8, [sp, #4]
  44f064:	mov	x9, #0x8                   	// #8
  44f068:	mul	x8, x9, x8
  44f06c:	adrp	x9, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  44f070:	add	x9, x9, #0x500
  44f074:	add	x8, x9, x8
  44f078:	ldr	x8, [x8]
  44f07c:	str	x8, [sp, #8]
  44f080:	ldr	x0, [sp, #8]
  44f084:	add	sp, sp, #0x10
  44f088:	ret

000000000044f08c <mac_address_policy_from_string>:
  44f08c:	sub	sp, sp, #0x20
  44f090:	stp	x29, x30, [sp, #16]
  44f094:	add	x29, sp, #0x10
  44f098:	adrp	x8, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  44f09c:	add	x8, x8, #0x500
  44f0a0:	mov	x1, #0x3                   	// #3
  44f0a4:	str	x0, [sp, #8]
  44f0a8:	ldr	x2, [sp, #8]
  44f0ac:	mov	x0, x8
  44f0b0:	bl	40b890 <string_table_lookup@plt>
  44f0b4:	ldp	x29, x30, [sp, #16]
  44f0b8:	add	sp, sp, #0x20
  44f0bc:	ret

000000000044f0c0 <config_parse_mac_address_policy>:
  44f0c0:	sub	sp, sp, #0xb0
  44f0c4:	stp	x29, x30, [sp, #160]
  44f0c8:	add	x29, sp, #0xa0
  44f0cc:	ldr	x8, [x29, #16]
  44f0d0:	ldr	x9, [x29, #24]
  44f0d4:	adrp	x10, 46d000 <on_inotify.__assert_in_set+0x9540>
  44f0d8:	add	x10, x10, #0xd5b
  44f0dc:	add	x10, x10, #0x3
  44f0e0:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f0e4:	add	x11, x11, #0x421
  44f0e8:	stur	x0, [x29, #-16]
  44f0ec:	stur	x1, [x29, #-24]
  44f0f0:	stur	w2, [x29, #-28]
  44f0f4:	stur	x3, [x29, #-40]
  44f0f8:	stur	w4, [x29, #-44]
  44f0fc:	stur	x5, [x29, #-56]
  44f100:	stur	w6, [x29, #-60]
  44f104:	stur	x7, [x29, #-72]
  44f108:	str	x8, [sp, #80]
  44f10c:	str	x9, [sp, #72]
  44f110:	ldr	x8, [sp, #80]
  44f114:	str	x8, [sp, #64]
  44f118:	str	x10, [sp, #40]
  44f11c:	str	x11, [sp, #32]
  44f120:	ldur	x8, [x29, #-24]
  44f124:	cmp	x8, #0x0
  44f128:	cset	w9, ne  // ne = any
  44f12c:	mov	w10, #0x1                   	// #1
  44f130:	eor	w9, w9, #0x1
  44f134:	eor	w9, w9, w10
  44f138:	eor	w9, w9, w10
  44f13c:	and	w9, w9, #0x1
  44f140:	mov	w0, w9
  44f144:	sxtw	x8, w0
  44f148:	cbz	x8, 44f168 <config_parse_mac_address_policy+0xa8>
  44f14c:	mov	w0, #0x1                   	// #1
  44f150:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44f154:	add	x1, x1, #0xdac
  44f158:	ldr	x2, [sp, #40]
  44f15c:	mov	w3, #0x1eb                 	// #491
  44f160:	ldr	x4, [sp, #32]
  44f164:	bl	40a540 <log_assert_failed_realm@plt>
  44f168:	ldur	x8, [x29, #-56]
  44f16c:	cmp	x8, #0x0
  44f170:	cset	w9, ne  // ne = any
  44f174:	mov	w10, #0x1                   	// #1
  44f178:	eor	w9, w9, #0x1
  44f17c:	eor	w9, w9, w10
  44f180:	eor	w9, w9, w10
  44f184:	and	w9, w9, #0x1
  44f188:	mov	w0, w9
  44f18c:	sxtw	x8, w0
  44f190:	cbz	x8, 44f1b0 <config_parse_mac_address_policy+0xf0>
  44f194:	mov	w0, #0x1                   	// #1
  44f198:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f19c:	add	x1, x1, #0x4bc
  44f1a0:	ldr	x2, [sp, #40]
  44f1a4:	mov	w3, #0x1eb                 	// #491
  44f1a8:	ldr	x4, [sp, #32]
  44f1ac:	bl	40a540 <log_assert_failed_realm@plt>
  44f1b0:	ldur	x8, [x29, #-72]
  44f1b4:	cmp	x8, #0x0
  44f1b8:	cset	w9, ne  // ne = any
  44f1bc:	mov	w10, #0x1                   	// #1
  44f1c0:	eor	w9, w9, #0x1
  44f1c4:	eor	w9, w9, w10
  44f1c8:	eor	w9, w9, w10
  44f1cc:	and	w9, w9, #0x1
  44f1d0:	mov	w0, w9
  44f1d4:	sxtw	x8, w0
  44f1d8:	cbz	x8, 44f1f8 <config_parse_mac_address_policy+0x138>
  44f1dc:	mov	w0, #0x1                   	// #1
  44f1e0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f1e4:	add	x1, x1, #0x4c3
  44f1e8:	ldr	x2, [sp, #40]
  44f1ec:	mov	w3, #0x1eb                 	// #491
  44f1f0:	ldr	x4, [sp, #32]
  44f1f4:	bl	40a540 <log_assert_failed_realm@plt>
  44f1f8:	ldr	x8, [sp, #80]
  44f1fc:	cmp	x8, #0x0
  44f200:	cset	w9, ne  // ne = any
  44f204:	mov	w10, #0x1                   	// #1
  44f208:	eor	w9, w9, #0x1
  44f20c:	eor	w9, w9, w10
  44f210:	eor	w9, w9, w10
  44f214:	and	w9, w9, #0x1
  44f218:	mov	w0, w9
  44f21c:	sxtw	x8, w0
  44f220:	cbz	x8, 44f240 <config_parse_mac_address_policy+0x180>
  44f224:	mov	w0, #0x1                   	// #1
  44f228:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  44f22c:	add	x1, x1, #0x13c
  44f230:	ldr	x2, [sp, #40]
  44f234:	mov	w3, #0x1eb                 	// #491
  44f238:	ldr	x4, [sp, #32]
  44f23c:	bl	40a540 <log_assert_failed_realm@plt>
  44f240:	ldur	x0, [x29, #-72]
  44f244:	bl	44f08c <mac_address_policy_from_string>
  44f248:	str	w0, [sp, #60]
  44f24c:	ldr	w8, [sp, #60]
  44f250:	cmp	w8, #0x0
  44f254:	cset	w8, ge  // ge = tcont
  44f258:	tbnz	w8, #0, 44f2f0 <config_parse_mac_address_policy+0x230>
  44f25c:	mov	w8, #0x3                   	// #3
  44f260:	str	w8, [sp, #56]
  44f264:	str	wzr, [sp, #52]
  44f268:	mov	w0, #0x1                   	// #1
  44f26c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44f270:	ldr	w8, [sp, #56]
  44f274:	and	w8, w8, #0x7
  44f278:	cmp	w0, w8
  44f27c:	b.lt	44f2cc <config_parse_mac_address_policy+0x20c>  // b.tstop
  44f280:	ldur	x0, [x29, #-16]
  44f284:	ldr	w1, [sp, #56]
  44f288:	ldur	x2, [x29, #-24]
  44f28c:	ldur	w3, [x29, #-28]
  44f290:	ldr	w4, [sp, #52]
  44f294:	ldur	x8, [x29, #-72]
  44f298:	ldr	x5, [sp, #40]
  44f29c:	mov	w6, #0x1eb                 	// #491
  44f2a0:	adrp	x7, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f2a4:	add	x7, x7, #0x4ca
  44f2a8:	mov	x9, sp
  44f2ac:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f2b0:	add	x10, x10, #0x4ea
  44f2b4:	str	x10, [x9]
  44f2b8:	mov	x9, sp
  44f2bc:	str	x8, [x9, #8]
  44f2c0:	bl	40b8a0 <log_syntax_internal@plt>
  44f2c4:	str	w0, [sp, #28]
  44f2c8:	b	44f2e0 <config_parse_mac_address_policy+0x220>
  44f2cc:	ldr	w0, [sp, #52]
  44f2d0:	bl	40a410 <abs@plt>
  44f2d4:	mov	w8, wzr
  44f2d8:	subs	w8, w8, w0, uxtb
  44f2dc:	str	w8, [sp, #28]
  44f2e0:	ldr	w8, [sp, #28]
  44f2e4:	str	w8, [sp, #48]
  44f2e8:	stur	wzr, [x29, #-4]
  44f2ec:	b	44f300 <config_parse_mac_address_policy+0x240>
  44f2f0:	ldr	w8, [sp, #60]
  44f2f4:	ldr	x9, [sp, #64]
  44f2f8:	str	w8, [x9]
  44f2fc:	stur	wzr, [x29, #-4]
  44f300:	ldur	w0, [x29, #-4]
  44f304:	ldp	x29, x30, [sp, #160]
  44f308:	add	sp, sp, #0xb0
  44f30c:	ret

000000000044f310 <name_policy_from_string>:
  44f310:	sub	sp, sp, #0x20
  44f314:	stp	x29, x30, [sp, #16]
  44f318:	add	x29, sp, #0x10
  44f31c:	adrp	x8, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  44f320:	add	x8, x8, #0x518
  44f324:	mov	x1, #0x7                   	// #7
  44f328:	str	x0, [sp, #8]
  44f32c:	ldr	x2, [sp, #8]
  44f330:	mov	x0, x8
  44f334:	bl	40b890 <string_table_lookup@plt>
  44f338:	ldp	x29, x30, [sp, #16]
  44f33c:	add	sp, sp, #0x20
  44f340:	ret

000000000044f344 <config_parse_name_policy>:
  44f344:	sub	sp, sp, #0x130
  44f348:	stp	x29, x30, [sp, #272]
  44f34c:	str	x28, [sp, #288]
  44f350:	add	x29, sp, #0x110
  44f354:	sub	x8, x29, #0x48
  44f358:	ldr	x9, [x29, #32]
  44f35c:	ldr	x10, [x29, #40]
  44f360:	mov	x11, xzr
  44f364:	adrp	x12, 46d000 <on_inotify.__assert_in_set+0x9540>
  44f368:	add	x12, x12, #0xd5b
  44f36c:	add	x12, x12, #0x3
  44f370:	adrp	x13, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f374:	add	x13, x13, #0x51b
  44f378:	str	x0, [x8, #56]
  44f37c:	str	x1, [x8, #48]
  44f380:	stur	w2, [x29, #-28]
  44f384:	str	x3, [x8, #32]
  44f388:	stur	w4, [x29, #-44]
  44f38c:	str	x5, [x8, #16]
  44f390:	stur	w6, [x29, #-60]
  44f394:	str	x7, [x8]
  44f398:	stur	x9, [x29, #-80]
  44f39c:	stur	x10, [x29, #-88]
  44f3a0:	ldur	x9, [x29, #-80]
  44f3a4:	stur	x9, [x29, #-96]
  44f3a8:	stur	x11, [x29, #-120]
  44f3ac:	str	xzr, [sp, #120]
  44f3b0:	str	x8, [sp, #56]
  44f3b4:	str	x12, [sp, #48]
  44f3b8:	str	x13, [sp, #40]
  44f3bc:	ldr	x8, [sp, #56]
  44f3c0:	ldr	x9, [x8, #48]
  44f3c4:	cmp	x9, #0x0
  44f3c8:	cset	w10, ne  // ne = any
  44f3cc:	mov	w11, #0x1                   	// #1
  44f3d0:	eor	w10, w10, #0x1
  44f3d4:	eor	w10, w10, w11
  44f3d8:	eor	w10, w10, w11
  44f3dc:	and	w10, w10, #0x1
  44f3e0:	mov	w0, w10
  44f3e4:	sxtw	x9, w0
  44f3e8:	cbz	x9, 44f408 <config_parse_name_policy+0xc4>
  44f3ec:	mov	w0, #0x1                   	// #1
  44f3f0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  44f3f4:	add	x1, x1, #0xdac
  44f3f8:	ldr	x2, [sp, #48]
  44f3fc:	mov	w3, #0x1fa                 	// #506
  44f400:	ldr	x4, [sp, #40]
  44f404:	bl	40a540 <log_assert_failed_realm@plt>
  44f408:	ldr	x8, [sp, #56]
  44f40c:	ldr	x9, [x8, #16]
  44f410:	cmp	x9, #0x0
  44f414:	cset	w10, ne  // ne = any
  44f418:	mov	w11, #0x1                   	// #1
  44f41c:	eor	w10, w10, #0x1
  44f420:	eor	w10, w10, w11
  44f424:	eor	w10, w10, w11
  44f428:	and	w10, w10, #0x1
  44f42c:	mov	w0, w10
  44f430:	sxtw	x9, w0
  44f434:	cbz	x9, 44f454 <config_parse_name_policy+0x110>
  44f438:	mov	w0, #0x1                   	// #1
  44f43c:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f440:	add	x1, x1, #0x4bc
  44f444:	ldr	x2, [sp, #48]
  44f448:	mov	w3, #0x1fa                 	// #506
  44f44c:	ldr	x4, [sp, #40]
  44f450:	bl	40a540 <log_assert_failed_realm@plt>
  44f454:	ldr	x8, [sp, #56]
  44f458:	ldr	x9, [x8]
  44f45c:	cmp	x9, #0x0
  44f460:	cset	w10, ne  // ne = any
  44f464:	mov	w11, #0x1                   	// #1
  44f468:	eor	w10, w10, #0x1
  44f46c:	eor	w10, w10, w11
  44f470:	eor	w10, w10, w11
  44f474:	and	w10, w10, #0x1
  44f478:	mov	w0, w10
  44f47c:	sxtw	x9, w0
  44f480:	cbz	x9, 44f4a0 <config_parse_name_policy+0x15c>
  44f484:	mov	w0, #0x1                   	// #1
  44f488:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f48c:	add	x1, x1, #0x4c3
  44f490:	ldr	x2, [sp, #48]
  44f494:	mov	w3, #0x1fa                 	// #506
  44f498:	ldr	x4, [sp, #40]
  44f49c:	bl	40a540 <log_assert_failed_realm@plt>
  44f4a0:	ldur	x8, [x29, #-80]
  44f4a4:	cmp	x8, #0x0
  44f4a8:	cset	w9, ne  // ne = any
  44f4ac:	mov	w10, #0x1                   	// #1
  44f4b0:	eor	w9, w9, #0x1
  44f4b4:	eor	w9, w9, w10
  44f4b8:	eor	w9, w9, w10
  44f4bc:	and	w9, w9, #0x1
  44f4c0:	mov	w0, w9
  44f4c4:	sxtw	x8, w0
  44f4c8:	cbz	x8, 44f4e8 <config_parse_name_policy+0x1a4>
  44f4cc:	mov	w0, #0x1                   	// #1
  44f4d0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  44f4d4:	add	x1, x1, #0x13c
  44f4d8:	ldr	x2, [sp, #48]
  44f4dc:	mov	w3, #0x1fa                 	// #506
  44f4e0:	ldr	x4, [sp, #40]
  44f4e4:	bl	40a540 <log_assert_failed_realm@plt>
  44f4e8:	mov	x0, #0x1                   	// #1
  44f4ec:	mov	x1, #0x4                   	// #4
  44f4f0:	bl	40b780 <calloc@plt>
  44f4f4:	stur	x0, [x29, #-120]
  44f4f8:	ldur	x8, [x29, #-120]
  44f4fc:	cbnz	x8, 44f514 <config_parse_name_policy+0x1d0>
  44f500:	mov	w8, #0xfffffff4            	// #-12
  44f504:	stur	w8, [x29, #-4]
  44f508:	mov	w8, #0x1                   	// #1
  44f50c:	str	w8, [sp, #116]
  44f510:	b	44f844 <config_parse_name_policy+0x500>
  44f514:	ldur	x8, [x29, #-120]
  44f518:	mov	w9, #0xffffffff            	// #-1
  44f51c:	str	w9, [x8]
  44f520:	ldr	x8, [sp, #56]
  44f524:	ldr	x10, [x8]
  44f528:	add	x0, sp, #0x88
  44f52c:	str	x10, [sp, #136]
  44f530:	add	x1, sp, #0x80
  44f534:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  44f538:	add	x2, x2, #0x5b7
  44f53c:	mov	w9, wzr
  44f540:	mov	w3, w9
  44f544:	bl	40b8b0 <split@plt>
  44f548:	stur	x0, [x29, #-128]
  44f54c:	ldur	x8, [x29, #-128]
  44f550:	cbz	x8, 44f814 <config_parse_name_policy+0x4d0>
  44f554:	mov	x8, xzr
  44f558:	str	x8, [sp, #104]
  44f55c:	ldur	x0, [x29, #-128]
  44f560:	ldr	x1, [sp, #128]
  44f564:	bl	40a8d0 <strndup@plt>
  44f568:	str	x0, [sp, #104]
  44f56c:	ldr	x8, [sp, #104]
  44f570:	cbnz	x8, 44f588 <config_parse_name_policy+0x244>
  44f574:	mov	w8, #0xfffffff4            	// #-12
  44f578:	stur	w8, [x29, #-4]
  44f57c:	mov	w8, #0x1                   	// #1
  44f580:	str	w8, [sp, #116]
  44f584:	b	44f7c8 <config_parse_name_policy+0x484>
  44f588:	ldr	x0, [sp, #104]
  44f58c:	bl	44f310 <name_policy_from_string>
  44f590:	stur	w0, [x29, #-100]
  44f594:	cmp	w0, #0x0
  44f598:	cset	w8, ge  // ge = tcont
  44f59c:	tbnz	w8, #0, 44f63c <config_parse_name_policy+0x2f8>
  44f5a0:	mov	w8, #0x3                   	// #3
  44f5a4:	str	w8, [sp, #92]
  44f5a8:	str	wzr, [sp, #88]
  44f5ac:	mov	w0, #0x1                   	// #1
  44f5b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  44f5b4:	ldr	w8, [sp, #92]
  44f5b8:	and	w8, w8, #0x7
  44f5bc:	cmp	w0, w8
  44f5c0:	b.lt	44f614 <config_parse_name_policy+0x2d0>  // b.tstop
  44f5c4:	ldr	x8, [sp, #56]
  44f5c8:	ldr	x0, [x8, #56]
  44f5cc:	ldr	w1, [sp, #92]
  44f5d0:	ldr	x2, [x8, #48]
  44f5d4:	ldur	w3, [x29, #-28]
  44f5d8:	ldr	w4, [sp, #88]
  44f5dc:	ldr	x9, [sp, #104]
  44f5e0:	ldr	x5, [sp, #48]
  44f5e4:	mov	w6, #0x1fa                 	// #506
  44f5e8:	adrp	x7, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f5ec:	add	x7, x7, #0x5af
  44f5f0:	mov	x10, sp
  44f5f4:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f5f8:	add	x11, x11, #0x5c8
  44f5fc:	str	x11, [x10]
  44f600:	mov	x10, sp
  44f604:	str	x9, [x10, #8]
  44f608:	bl	40b8a0 <log_syntax_internal@plt>
  44f60c:	str	w0, [sp, #36]
  44f610:	b	44f628 <config_parse_name_policy+0x2e4>
  44f614:	ldr	w0, [sp, #88]
  44f618:	bl	40a410 <abs@plt>
  44f61c:	mov	w8, wzr
  44f620:	subs	w8, w8, w0, uxtb
  44f624:	str	w8, [sp, #36]
  44f628:	ldr	w8, [sp, #36]
  44f62c:	str	w8, [sp, #84]
  44f630:	mov	w8, #0xc                   	// #12
  44f634:	str	w8, [sp, #116]
  44f638:	b	44f7c8 <config_parse_name_policy+0x484>
  44f63c:	ldur	x8, [x29, #-120]
  44f640:	stur	x8, [x29, #-112]
  44f644:	ldur	w8, [x29, #-100]
  44f648:	mov	w9, #0xffffffff            	// #-1
  44f64c:	mov	w10, #0x0                   	// #0
  44f650:	cmp	w8, w9
  44f654:	str	w10, [sp, #32]
  44f658:	b.eq	44f674 <config_parse_name_policy+0x330>  // b.none
  44f65c:	ldur	x8, [x29, #-112]
  44f660:	ldr	w9, [x8]
  44f664:	mov	w10, #0xffffffff            	// #-1
  44f668:	cmp	w9, w10
  44f66c:	cset	w9, ne  // ne = any
  44f670:	str	w9, [sp, #32]
  44f674:	ldr	w8, [sp, #32]
  44f678:	tbnz	w8, #0, 44f680 <config_parse_name_policy+0x33c>
  44f67c:	b	44f73c <config_parse_name_policy+0x3f8>
  44f680:	ldur	x8, [x29, #-112]
  44f684:	ldr	w9, [x8]
  44f688:	ldur	w10, [x29, #-100]
  44f68c:	cmp	w9, w10
  44f690:	b.ne	44f72c <config_parse_name_policy+0x3e8>  // b.any
  44f694:	mov	w8, #0x5                   	// #5
  44f698:	str	w8, [sp, #80]
  44f69c:	str	wzr, [sp, #76]
  44f6a0:	mov	w0, #0x1                   	// #1
  44f6a4:	bl	40a3f0 <log_get_max_level_realm@plt>
  44f6a8:	ldr	w8, [sp, #80]
  44f6ac:	and	w8, w8, #0x7
  44f6b0:	cmp	w0, w8
  44f6b4:	b.lt	44f708 <config_parse_name_policy+0x3c4>  // b.tstop
  44f6b8:	ldr	x8, [sp, #56]
  44f6bc:	ldr	x0, [x8, #56]
  44f6c0:	ldr	w1, [sp, #80]
  44f6c4:	ldr	x2, [x8, #48]
  44f6c8:	ldur	w3, [x29, #-28]
  44f6cc:	ldr	w4, [sp, #76]
  44f6d0:	ldr	x9, [sp, #104]
  44f6d4:	ldr	x5, [sp, #48]
  44f6d8:	mov	w6, #0x1fa                 	// #506
  44f6dc:	adrp	x7, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f6e0:	add	x7, x7, #0x5af
  44f6e4:	mov	x10, sp
  44f6e8:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44f6ec:	add	x11, x11, #0x5fc
  44f6f0:	str	x11, [x10]
  44f6f4:	mov	x10, sp
  44f6f8:	str	x9, [x10, #8]
  44f6fc:	bl	40b8a0 <log_syntax_internal@plt>
  44f700:	str	w0, [sp, #28]
  44f704:	b	44f71c <config_parse_name_policy+0x3d8>
  44f708:	ldr	w0, [sp, #76]
  44f70c:	bl	40a410 <abs@plt>
  44f710:	mov	w8, wzr
  44f714:	subs	w8, w8, w0, uxtb
  44f718:	str	w8, [sp, #28]
  44f71c:	ldr	w8, [sp, #28]
  44f720:	str	w8, [sp, #72]
  44f724:	mov	w8, #0xffffffff            	// #-1
  44f728:	stur	w8, [x29, #-100]
  44f72c:	ldur	x8, [x29, #-112]
  44f730:	add	x8, x8, #0x4
  44f734:	stur	x8, [x29, #-112]
  44f738:	b	44f644 <config_parse_name_policy+0x300>
  44f73c:	ldur	w8, [x29, #-100]
  44f740:	mov	w9, #0xffffffff            	// #-1
  44f744:	cmp	w8, w9
  44f748:	b.ne	44f758 <config_parse_name_policy+0x414>  // b.any
  44f74c:	mov	w8, #0xc                   	// #12
  44f750:	str	w8, [sp, #116]
  44f754:	b	44f7c8 <config_parse_name_policy+0x484>
  44f758:	ldur	w8, [x29, #-100]
  44f75c:	ldur	x9, [x29, #-120]
  44f760:	ldr	x10, [sp, #120]
  44f764:	str	w8, [x9, x10, lsl #2]
  44f768:	ldur	x0, [x29, #-120]
  44f76c:	ldr	x9, [sp, #120]
  44f770:	add	x9, x9, #0x1
  44f774:	str	x9, [sp, #120]
  44f778:	add	x9, x9, #0x1
  44f77c:	mov	x10, #0x4                   	// #4
  44f780:	mul	x1, x9, x10
  44f784:	bl	40b8c0 <realloc@plt>
  44f788:	str	x0, [sp, #96]
  44f78c:	ldr	x9, [sp, #96]
  44f790:	cbz	x9, 44f7a0 <config_parse_name_policy+0x45c>
  44f794:	ldr	x8, [sp, #96]
  44f798:	stur	x8, [x29, #-120]
  44f79c:	b	44f7b4 <config_parse_name_policy+0x470>
  44f7a0:	mov	w8, #0xfffffff4            	// #-12
  44f7a4:	stur	w8, [x29, #-4]
  44f7a8:	mov	w8, #0x1                   	// #1
  44f7ac:	str	w8, [sp, #116]
  44f7b0:	b	44f7c8 <config_parse_name_policy+0x484>
  44f7b4:	ldur	x8, [x29, #-120]
  44f7b8:	ldr	x9, [sp, #120]
  44f7bc:	mov	w10, #0xffffffff            	// #-1
  44f7c0:	str	w10, [x8, x9, lsl #2]
  44f7c4:	str	wzr, [sp, #116]
  44f7c8:	add	x0, sp, #0x68
  44f7cc:	bl	44c80c <freep>
  44f7d0:	ldr	w8, [sp, #116]
  44f7d4:	str	w8, [sp, #24]
  44f7d8:	cbz	w8, 44f7f0 <config_parse_name_policy+0x4ac>
  44f7dc:	b	44f7e0 <config_parse_name_policy+0x49c>
  44f7e0:	ldr	w8, [sp, #24]
  44f7e4:	cmp	w8, #0xc
  44f7e8:	b.eq	44f7f0 <config_parse_name_policy+0x4ac>  // b.none
  44f7ec:	b	44f844 <config_parse_name_policy+0x500>
  44f7f0:	add	x0, sp, #0x88
  44f7f4:	add	x1, sp, #0x80
  44f7f8:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  44f7fc:	add	x2, x2, #0x5b7
  44f800:	mov	w8, wzr
  44f804:	mov	w3, w8
  44f808:	bl	40b8b0 <split@plt>
  44f80c:	stur	x0, [x29, #-128]
  44f810:	b	44f54c <config_parse_name_policy+0x208>
  44f814:	ldur	x8, [x29, #-96]
  44f818:	ldr	x0, [x8]
  44f81c:	bl	40a530 <free@plt>
  44f820:	ldur	x8, [x29, #-120]
  44f824:	ldur	x9, [x29, #-96]
  44f828:	str	x8, [x9]
  44f82c:	mov	x8, xzr
  44f830:	stur	x8, [x29, #-120]
  44f834:	str	wzr, [sp, #68]
  44f838:	stur	wzr, [x29, #-4]
  44f83c:	mov	w10, #0x1                   	// #1
  44f840:	str	w10, [sp, #116]
  44f844:	sub	x0, x29, #0x78
  44f848:	bl	44c80c <freep>
  44f84c:	ldur	w0, [x29, #-4]
  44f850:	ldr	x28, [sp, #288]
  44f854:	ldp	x29, x30, [sp, #272]
  44f858:	add	sp, sp, #0x130
  44f85c:	ret

000000000044f860 <link_config_free>:
  44f860:	sub	sp, sp, #0x20
  44f864:	stp	x29, x30, [sp, #16]
  44f868:	add	x29, sp, #0x10
  44f86c:	str	x0, [sp, #8]
  44f870:	ldr	x8, [sp, #8]
  44f874:	cbnz	x8, 44f87c <link_config_free+0x1c>
  44f878:	b	44f93c <link_config_free+0xdc>
  44f87c:	ldr	x8, [sp, #8]
  44f880:	ldr	x0, [x8]
  44f884:	bl	40a530 <free@plt>
  44f888:	ldr	x8, [sp, #8]
  44f88c:	ldr	x0, [x8, #8]
  44f890:	bl	44f948 <set_free_free>
  44f894:	ldr	x8, [sp, #8]
  44f898:	ldr	x8, [x8, #16]
  44f89c:	mov	x0, x8
  44f8a0:	bl	40afa0 <strv_free@plt>
  44f8a4:	ldr	x8, [sp, #8]
  44f8a8:	ldr	x8, [x8, #24]
  44f8ac:	mov	x0, x8
  44f8b0:	bl	40afa0 <strv_free@plt>
  44f8b4:	ldr	x8, [sp, #8]
  44f8b8:	ldr	x8, [x8, #32]
  44f8bc:	mov	x0, x8
  44f8c0:	bl	40afa0 <strv_free@plt>
  44f8c4:	ldr	x8, [sp, #8]
  44f8c8:	ldr	x8, [x8, #40]
  44f8cc:	mov	x0, x8
  44f8d0:	bl	40afa0 <strv_free@plt>
  44f8d4:	ldr	x8, [sp, #8]
  44f8d8:	ldr	x8, [x8, #48]
  44f8dc:	mov	x0, x8
  44f8e0:	bl	40afa0 <strv_free@plt>
  44f8e4:	ldr	x8, [sp, #8]
  44f8e8:	ldr	x8, [x8, #56]
  44f8ec:	mov	x0, x8
  44f8f0:	bl	44f97c <condition_free_list>
  44f8f4:	ldr	x8, [sp, #8]
  44f8f8:	ldr	x8, [x8, #64]
  44f8fc:	mov	x0, x8
  44f900:	bl	40a530 <free@plt>
  44f904:	ldr	x8, [sp, #8]
  44f908:	ldr	x0, [x8, #72]
  44f90c:	bl	40a530 <free@plt>
  44f910:	ldr	x8, [sp, #8]
  44f914:	ldr	x0, [x8, #88]
  44f918:	bl	40a530 <free@plt>
  44f91c:	ldr	x8, [sp, #8]
  44f920:	ldr	x0, [x8, #96]
  44f924:	bl	40a530 <free@plt>
  44f928:	ldr	x8, [sp, #8]
  44f92c:	ldr	x0, [x8, #104]
  44f930:	bl	40a530 <free@plt>
  44f934:	ldr	x0, [sp, #8]
  44f938:	bl	40a530 <free@plt>
  44f93c:	ldp	x29, x30, [sp, #16]
  44f940:	add	sp, sp, #0x20
  44f944:	ret

000000000044f948 <set_free_free>:
  44f948:	sub	sp, sp, #0x20
  44f94c:	stp	x29, x30, [sp, #16]
  44f950:	add	x29, sp, #0x10
  44f954:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  44f958:	ldr	x1, [x1, #176]
  44f95c:	mov	x8, xzr
  44f960:	str	x0, [sp, #8]
  44f964:	ldr	x0, [sp, #8]
  44f968:	mov	x2, x8
  44f96c:	bl	40a7b0 <internal_hashmap_free@plt>
  44f970:	ldp	x29, x30, [sp, #16]
  44f974:	add	sp, sp, #0x20
  44f978:	ret

000000000044f97c <condition_free_list>:
  44f97c:	sub	sp, sp, #0x20
  44f980:	stp	x29, x30, [sp, #16]
  44f984:	add	x29, sp, #0x10
  44f988:	mov	w1, #0xffffffff            	// #-1
  44f98c:	str	x0, [sp, #8]
  44f990:	ldr	x0, [sp, #8]
  44f994:	bl	40b8d0 <condition_free_list_type@plt>
  44f998:	ldp	x29, x30, [sp, #16]
  44f99c:	add	sp, sp, #0x20
  44f9a0:	ret

000000000044f9a4 <size_multiply_overflow>:
  44f9a4:	sub	sp, sp, #0x20
  44f9a8:	str	x0, [sp, #24]
  44f9ac:	str	x1, [sp, #16]
  44f9b0:	ldr	x8, [sp, #16]
  44f9b4:	mov	w9, #0x0                   	// #0
  44f9b8:	str	w9, [sp, #12]
  44f9bc:	cbz	x8, 44f9dc <size_multiply_overflow+0x38>
  44f9c0:	ldr	x8, [sp, #24]
  44f9c4:	ldr	x9, [sp, #16]
  44f9c8:	mov	x10, #0xffffffffffffffff    	// #-1
  44f9cc:	udiv	x9, x10, x9
  44f9d0:	cmp	x8, x9
  44f9d4:	cset	w11, hi  // hi = pmore
  44f9d8:	str	w11, [sp, #12]
  44f9dc:	ldr	w8, [sp, #12]
  44f9e0:	mov	w9, #0x1                   	// #1
  44f9e4:	eor	w8, w8, #0x1
  44f9e8:	eor	w8, w8, w9
  44f9ec:	and	w8, w8, #0x1
  44f9f0:	mov	w0, w8
  44f9f4:	sxtw	x10, w0
  44f9f8:	cmp	x10, #0x0
  44f9fc:	cset	w8, ne  // ne = any
  44fa00:	and	w0, w8, #0x1
  44fa04:	add	sp, sp, #0x20
  44fa08:	ret

000000000044fa0c <set_size>:
  44fa0c:	sub	sp, sp, #0x20
  44fa10:	stp	x29, x30, [sp, #16]
  44fa14:	add	x29, sp, #0x10
  44fa18:	str	x0, [sp, #8]
  44fa1c:	ldr	x0, [sp, #8]
  44fa20:	bl	40aa90 <internal_hashmap_size@plt>
  44fa24:	ldp	x29, x30, [sp, #16]
  44fa28:	add	sp, sp, #0x20
  44fa2c:	ret

000000000044fa30 <safe_atou>:
  44fa30:	sub	sp, sp, #0x20
  44fa34:	stp	x29, x30, [sp, #16]
  44fa38:	add	x29, sp, #0x10
  44fa3c:	mov	w8, wzr
  44fa40:	str	x0, [sp, #8]
  44fa44:	str	x1, [sp]
  44fa48:	ldr	x0, [sp, #8]
  44fa4c:	ldr	x2, [sp]
  44fa50:	mov	w1, w8
  44fa54:	bl	40a7e0 <safe_atou_full@plt>
  44fa58:	ldp	x29, x30, [sp, #16]
  44fa5c:	add	sp, sp, #0x20
  44fa60:	ret

000000000044fa64 <naming_scheme>:
  44fa64:	sub	sp, sp, #0xa0
  44fa68:	stp	x29, x30, [sp, #144]
  44fa6c:	add	x29, sp, #0x90
  44fa70:	mov	x8, xzr
  44fa74:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  44fa78:	add	x9, x9, #0x248
  44fa7c:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fa80:	add	x10, x10, #0x889
  44fa84:	add	x10, x10, #0x3
  44fa88:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fa8c:	add	x11, x11, #0x8a9
  44fa90:	stur	x8, [x29, #-16]
  44fa94:	ldr	x8, [x9]
  44fa98:	str	x9, [sp, #48]
  44fa9c:	str	x10, [sp, #40]
  44faa0:	str	x11, [sp, #32]
  44faa4:	cbz	x8, 44fac0 <naming_scheme+0x5c>
  44faa8:	ldr	x8, [sp, #48]
  44faac:	ldr	x9, [x8]
  44fab0:	stur	x9, [x29, #-8]
  44fab4:	mov	w10, #0x1                   	// #1
  44fab8:	stur	w10, [x29, #-36]
  44fabc:	b	44fd7c <naming_scheme+0x318>
  44fac0:	adrp	x0, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fac4:	add	x0, x0, #0x865
  44fac8:	mov	w8, wzr
  44facc:	mov	w1, w8
  44fad0:	sub	x2, x29, #0x10
  44fad4:	bl	40b410 <proc_cmdline_get_key@plt>
  44fad8:	adrp	x9, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fadc:	add	x9, x9, #0x877
  44fae0:	mov	x0, x9
  44fae4:	bl	40b8e0 <getenv@plt>
  44fae8:	stur	x0, [x29, #-24]
  44faec:	ldur	x9, [x29, #-24]
  44faf0:	cbz	x9, 44fb40 <naming_scheme+0xdc>
  44faf4:	ldur	x8, [x29, #-24]
  44faf8:	ldrb	w9, [x8]
  44fafc:	cmp	w9, #0x3a
  44fb00:	b.ne	44fb34 <naming_scheme+0xd0>  // b.any
  44fb04:	ldur	x8, [x29, #-16]
  44fb08:	str	x8, [sp, #24]
  44fb0c:	cbz	x8, 44fb1c <naming_scheme+0xb8>
  44fb10:	ldr	x8, [sp, #24]
  44fb14:	str	x8, [sp, #16]
  44fb18:	b	44fb28 <naming_scheme+0xc4>
  44fb1c:	ldur	x8, [x29, #-24]
  44fb20:	add	x8, x8, #0x1
  44fb24:	str	x8, [sp, #16]
  44fb28:	ldr	x8, [sp, #16]
  44fb2c:	stur	x8, [x29, #-32]
  44fb30:	b	44fb3c <naming_scheme+0xd8>
  44fb34:	ldur	x8, [x29, #-24]
  44fb38:	stur	x8, [x29, #-32]
  44fb3c:	b	44fb48 <naming_scheme+0xe4>
  44fb40:	ldur	x8, [x29, #-16]
  44fb44:	stur	x8, [x29, #-32]
  44fb48:	ldur	x8, [x29, #-32]
  44fb4c:	cbz	x8, 44fc80 <naming_scheme+0x21c>
  44fb50:	ldur	x0, [x29, #-32]
  44fb54:	bl	44fdbc <naming_scheme_from_name>
  44fb58:	ldr	x8, [sp, #48]
  44fb5c:	str	x0, [x8]
  44fb60:	ldr	x9, [x8]
  44fb64:	cbz	x9, 44fc04 <naming_scheme+0x1a0>
  44fb68:	mov	w8, #0x6                   	// #6
  44fb6c:	stur	w8, [x29, #-40]
  44fb70:	stur	wzr, [x29, #-44]
  44fb74:	mov	w8, #0x1                   	// #1
  44fb78:	stur	w8, [x29, #-48]
  44fb7c:	ldur	w0, [x29, #-48]
  44fb80:	bl	40a3f0 <log_get_max_level_realm@plt>
  44fb84:	ldur	w8, [x29, #-40]
  44fb88:	and	w8, w8, #0x7
  44fb8c:	cmp	w0, w8
  44fb90:	b.lt	44fbd0 <naming_scheme+0x16c>  // b.tstop
  44fb94:	ldur	w8, [x29, #-48]
  44fb98:	ldur	w9, [x29, #-40]
  44fb9c:	orr	w0, w9, w8, lsl #10
  44fba0:	ldur	w1, [x29, #-44]
  44fba4:	ldr	x10, [sp, #48]
  44fba8:	ldr	x11, [x10]
  44fbac:	ldr	x6, [x11]
  44fbb0:	ldr	x2, [sp, #40]
  44fbb4:	mov	w3, #0x36                  	// #54
  44fbb8:	ldr	x4, [sp, #32]
  44fbbc:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fbc0:	add	x5, x5, #0x8b7
  44fbc4:	bl	40a400 <log_internal_realm@plt>
  44fbc8:	str	w0, [sp, #12]
  44fbcc:	b	44fbe4 <naming_scheme+0x180>
  44fbd0:	ldur	w0, [x29, #-44]
  44fbd4:	bl	40a410 <abs@plt>
  44fbd8:	mov	w8, wzr
  44fbdc:	subs	w8, w8, w0, uxtb
  44fbe0:	str	w8, [sp, #12]
  44fbe4:	ldr	w8, [sp, #12]
  44fbe8:	stur	w8, [x29, #-52]
  44fbec:	ldr	x9, [sp, #48]
  44fbf0:	ldr	x10, [x9]
  44fbf4:	stur	x10, [x29, #-8]
  44fbf8:	mov	w8, #0x1                   	// #1
  44fbfc:	stur	w8, [x29, #-36]
  44fc00:	b	44fd7c <naming_scheme+0x318>
  44fc04:	mov	w8, #0x4                   	// #4
  44fc08:	stur	w8, [x29, #-56]
  44fc0c:	stur	wzr, [x29, #-60]
  44fc10:	mov	w8, #0x1                   	// #1
  44fc14:	stur	w8, [x29, #-64]
  44fc18:	ldur	w0, [x29, #-64]
  44fc1c:	bl	40a3f0 <log_get_max_level_realm@plt>
  44fc20:	ldur	w8, [x29, #-56]
  44fc24:	and	w8, w8, #0x7
  44fc28:	cmp	w0, w8
  44fc2c:	b.lt	44fc64 <naming_scheme+0x200>  // b.tstop
  44fc30:	ldur	w8, [x29, #-64]
  44fc34:	ldur	w9, [x29, #-56]
  44fc38:	orr	w0, w9, w8, lsl #10
  44fc3c:	ldur	w1, [x29, #-60]
  44fc40:	ldur	x6, [x29, #-32]
  44fc44:	ldr	x2, [sp, #40]
  44fc48:	mov	w3, #0x3a                  	// #58
  44fc4c:	ldr	x4, [sp, #32]
  44fc50:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fc54:	add	x5, x5, #0x8db
  44fc58:	bl	40a400 <log_internal_realm@plt>
  44fc5c:	str	w0, [sp, #8]
  44fc60:	b	44fc78 <naming_scheme+0x214>
  44fc64:	ldur	w0, [x29, #-60]
  44fc68:	bl	40a410 <abs@plt>
  44fc6c:	mov	w8, wzr
  44fc70:	subs	w8, w8, w0, uxtb
  44fc74:	str	w8, [sp, #8]
  44fc78:	ldr	w8, [sp, #8]
  44fc7c:	stur	w8, [x29, #-68]
  44fc80:	adrp	x0, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fc84:	add	x0, x0, #0x915
  44fc88:	bl	44fdbc <naming_scheme_from_name>
  44fc8c:	ldr	x8, [sp, #48]
  44fc90:	str	x0, [x8]
  44fc94:	ldr	x8, [sp, #48]
  44fc98:	ldr	x9, [x8]
  44fc9c:	cmp	x9, #0x0
  44fca0:	cset	w10, ne  // ne = any
  44fca4:	mov	w11, #0x1                   	// #1
  44fca8:	eor	w10, w10, #0x1
  44fcac:	eor	w10, w10, w11
  44fcb0:	eor	w10, w10, w11
  44fcb4:	and	w10, w10, #0x1
  44fcb8:	mov	w0, w10
  44fcbc:	sxtw	x9, w0
  44fcc0:	cbz	x9, 44fce4 <naming_scheme+0x280>
  44fcc4:	mov	w0, #0x1                   	// #1
  44fcc8:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fccc:	add	x1, x1, #0x91c
  44fcd0:	ldr	x2, [sp, #40]
  44fcd4:	mov	w3, #0x3e                  	// #62
  44fcd8:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fcdc:	add	x4, x4, #0x922
  44fce0:	bl	40a540 <log_assert_failed_realm@plt>
  44fce4:	mov	w8, #0x6                   	// #6
  44fce8:	str	w8, [sp, #72]
  44fcec:	str	wzr, [sp, #68]
  44fcf0:	mov	w8, #0x1                   	// #1
  44fcf4:	str	w8, [sp, #64]
  44fcf8:	ldr	w0, [sp, #64]
  44fcfc:	bl	40a3f0 <log_get_max_level_realm@plt>
  44fd00:	ldr	w8, [sp, #72]
  44fd04:	and	w8, w8, #0x7
  44fd08:	cmp	w0, w8
  44fd0c:	b.lt	44fd4c <naming_scheme+0x2e8>  // b.tstop
  44fd10:	ldr	w8, [sp, #64]
  44fd14:	ldr	w9, [sp, #72]
  44fd18:	orr	w0, w9, w8, lsl #10
  44fd1c:	ldr	w1, [sp, #68]
  44fd20:	ldr	x10, [sp, #48]
  44fd24:	ldr	x11, [x10]
  44fd28:	ldr	x6, [x11]
  44fd2c:	ldr	x2, [sp, #40]
  44fd30:	mov	w3, #0x3f                  	// #63
  44fd34:	ldr	x4, [sp, #32]
  44fd38:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fd3c:	add	x5, x5, #0x94a
  44fd40:	bl	40a400 <log_internal_realm@plt>
  44fd44:	str	w0, [sp, #4]
  44fd48:	b	44fd60 <naming_scheme+0x2fc>
  44fd4c:	ldr	w0, [sp, #68]
  44fd50:	bl	40a410 <abs@plt>
  44fd54:	mov	w8, wzr
  44fd58:	subs	w8, w8, w0, uxtb
  44fd5c:	str	w8, [sp, #4]
  44fd60:	ldr	w8, [sp, #4]
  44fd64:	str	w8, [sp, #60]
  44fd68:	ldr	x9, [sp, #48]
  44fd6c:	ldr	x10, [x9]
  44fd70:	stur	x10, [x29, #-8]
  44fd74:	mov	w8, #0x1                   	// #1
  44fd78:	stur	w8, [x29, #-36]
  44fd7c:	sub	x0, x29, #0x10
  44fd80:	bl	44fd94 <freep>
  44fd84:	ldur	x0, [x29, #-8]
  44fd88:	ldp	x29, x30, [sp, #144]
  44fd8c:	add	sp, sp, #0xa0
  44fd90:	ret

000000000044fd94 <freep>:
  44fd94:	sub	sp, sp, #0x20
  44fd98:	stp	x29, x30, [sp, #16]
  44fd9c:	add	x29, sp, #0x10
  44fda0:	str	x0, [sp, #8]
  44fda4:	ldr	x8, [sp, #8]
  44fda8:	ldr	x0, [x8]
  44fdac:	bl	40a530 <free@plt>
  44fdb0:	ldp	x29, x30, [sp, #16]
  44fdb4:	add	sp, sp, #0x20
  44fdb8:	ret

000000000044fdbc <naming_scheme_from_name>:
  44fdbc:	sub	sp, sp, #0x40
  44fdc0:	stp	x29, x30, [sp, #48]
  44fdc4:	add	x29, sp, #0x30
  44fdc8:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fdcc:	add	x1, x1, #0x915
  44fdd0:	adrp	x8, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  44fdd4:	add	x8, x8, #0x550
  44fdd8:	add	x9, x8, #0x40
  44fddc:	stur	x0, [x29, #-16]
  44fde0:	ldur	x0, [x29, #-16]
  44fde4:	str	x8, [sp, #16]
  44fde8:	str	x9, [sp, #8]
  44fdec:	bl	40aa20 <strcmp@plt>
  44fdf0:	cbnz	w0, 44fe00 <naming_scheme_from_name+0x44>
  44fdf4:	ldr	x8, [sp, #8]
  44fdf8:	stur	x8, [x29, #-8]
  44fdfc:	b	44fe68 <naming_scheme_from_name+0xac>
  44fe00:	str	xzr, [sp, #24]
  44fe04:	ldr	x8, [sp, #24]
  44fe08:	cmp	x8, #0x5
  44fe0c:	b.cs	44fe60 <naming_scheme_from_name+0xa4>  // b.hs, b.nlast
  44fe10:	ldr	x8, [sp, #24]
  44fe14:	mov	x9, #0x10                  	// #16
  44fe18:	mul	x8, x9, x8
  44fe1c:	ldr	x9, [sp, #16]
  44fe20:	add	x8, x9, x8
  44fe24:	ldr	x0, [x8]
  44fe28:	ldur	x1, [x29, #-16]
  44fe2c:	bl	40aa20 <strcmp@plt>
  44fe30:	cbnz	w0, 44fe50 <naming_scheme_from_name+0x94>
  44fe34:	ldr	x8, [sp, #24]
  44fe38:	mov	x9, #0x10                  	// #16
  44fe3c:	mul	x8, x9, x8
  44fe40:	ldr	x9, [sp, #16]
  44fe44:	add	x8, x9, x8
  44fe48:	stur	x8, [x29, #-8]
  44fe4c:	b	44fe68 <naming_scheme_from_name+0xac>
  44fe50:	ldr	x8, [sp, #24]
  44fe54:	add	x8, x8, #0x1
  44fe58:	str	x8, [sp, #24]
  44fe5c:	b	44fe04 <naming_scheme_from_name+0x48>
  44fe60:	mov	x8, xzr
  44fe64:	stur	x8, [x29, #-8]
  44fe68:	ldur	x0, [x29, #-8]
  44fe6c:	ldp	x29, x30, [sp, #48]
  44fe70:	add	sp, sp, #0x40
  44fe74:	ret

000000000044fe78 <builtin_kmod>:
  44fe78:	sub	sp, sp, #0x60
  44fe7c:	stp	x29, x30, [sp, #80]
  44fe80:	add	x29, sp, #0x50
  44fe84:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  44fe88:	add	x8, x8, #0x250
  44fe8c:	mov	w9, #0x1                   	// #1
  44fe90:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fe94:	add	x10, x10, #0x9ae
  44fe98:	add	x10, x10, #0x3
  44fe9c:	stur	x0, [x29, #-16]
  44fea0:	stur	w1, [x29, #-20]
  44fea4:	stur	x2, [x29, #-32]
  44fea8:	and	w9, w3, w9
  44feac:	sturb	w9, [x29, #-33]
  44feb0:	ldr	x8, [x8]
  44feb4:	str	x10, [sp, #16]
  44feb8:	cbnz	x8, 44fec4 <builtin_kmod+0x4c>
  44febc:	stur	wzr, [x29, #-4]
  44fec0:	b	44ffe8 <builtin_kmod+0x170>
  44fec4:	ldur	w8, [x29, #-20]
  44fec8:	cmp	w8, #0x3
  44fecc:	b.lt	44fee8 <builtin_kmod+0x70>  // b.tstop
  44fed0:	ldur	x8, [x29, #-32]
  44fed4:	ldr	x0, [x8, #8]
  44fed8:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  44fedc:	add	x1, x1, #0x9a9
  44fee0:	bl	40aa20 <strcmp@plt>
  44fee4:	cbz	w0, 44ff80 <builtin_kmod+0x108>
  44fee8:	mov	w8, #0x3                   	// #3
  44feec:	str	w8, [sp, #36]
  44fef0:	mov	w8, #0x16                  	// #22
  44fef4:	movk	w8, #0x4000, lsl #16
  44fef8:	str	w8, [sp, #32]
  44fefc:	mov	w8, #0x1                   	// #1
  44ff00:	str	w8, [sp, #28]
  44ff04:	ldr	w0, [sp, #28]
  44ff08:	bl	40a3f0 <log_get_max_level_realm@plt>
  44ff0c:	ldr	w8, [sp, #36]
  44ff10:	and	w8, w8, #0x7
  44ff14:	cmp	w0, w8
  44ff18:	b.lt	44ff58 <builtin_kmod+0xe0>  // b.tstop
  44ff1c:	ldr	w8, [sp, #28]
  44ff20:	ldr	w9, [sp, #36]
  44ff24:	orr	w0, w9, w8, lsl #10
  44ff28:	ldr	w1, [sp, #32]
  44ff2c:	ldur	x10, [x29, #-32]
  44ff30:	ldr	x6, [x10]
  44ff34:	ldr	x2, [sp, #16]
  44ff38:	mov	w3, #0x1f                  	// #31
  44ff3c:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ff40:	add	x4, x4, #0x9ce
  44ff44:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  44ff48:	add	x5, x5, #0x9db
  44ff4c:	bl	40a400 <log_internal_realm@plt>
  44ff50:	str	w0, [sp, #12]
  44ff54:	b	44ff6c <builtin_kmod+0xf4>
  44ff58:	ldr	w0, [sp, #32]
  44ff5c:	bl	40a410 <abs@plt>
  44ff60:	mov	w8, wzr
  44ff64:	subs	w8, w8, w0, uxtb
  44ff68:	str	w8, [sp, #12]
  44ff6c:	ldr	w8, [sp, #12]
  44ff70:	str	w8, [sp, #24]
  44ff74:	ldr	w8, [sp, #24]
  44ff78:	stur	w8, [x29, #-4]
  44ff7c:	b	44ffe8 <builtin_kmod+0x170>
  44ff80:	mov	w8, #0x2                   	// #2
  44ff84:	str	w8, [sp, #40]
  44ff88:	ldur	x8, [x29, #-32]
  44ff8c:	ldrsw	x9, [sp, #40]
  44ff90:	mov	x10, #0x8                   	// #8
  44ff94:	mul	x9, x10, x9
  44ff98:	add	x8, x8, x9
  44ff9c:	ldr	x8, [x8]
  44ffa0:	cbz	x8, 44ffe4 <builtin_kmod+0x16c>
  44ffa4:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  44ffa8:	add	x8, x8, #0x250
  44ffac:	ldr	x0, [x8]
  44ffb0:	ldur	x8, [x29, #-32]
  44ffb4:	ldrsw	x9, [sp, #40]
  44ffb8:	mov	x10, #0x8                   	// #8
  44ffbc:	mul	x9, x10, x9
  44ffc0:	add	x8, x8, x9
  44ffc4:	ldr	x1, [x8]
  44ffc8:	mov	w11, wzr
  44ffcc:	and	w2, w11, #0x1
  44ffd0:	bl	40b8f0 <module_load_and_warn@plt>
  44ffd4:	ldr	w8, [sp, #40]
  44ffd8:	add	w8, w8, #0x1
  44ffdc:	str	w8, [sp, #40]
  44ffe0:	b	44ff88 <builtin_kmod+0x110>
  44ffe4:	stur	wzr, [x29, #-4]
  44ffe8:	ldur	w0, [x29, #-4]
  44ffec:	ldp	x29, x30, [sp, #80]
  44fff0:	add	sp, sp, #0x60
  44fff4:	ret

000000000044fff8 <builtin_kmod_init>:
  44fff8:	sub	sp, sp, #0x40
  44fffc:	stp	x29, x30, [sp, #48]
  450000:	add	x29, sp, #0x30
  450004:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  450008:	add	x8, x8, #0x250
  45000c:	adrp	x9, 46e000 <on_inotify.__assert_in_set+0xa540>
  450010:	add	x9, x9, #0x9ae
  450014:	add	x2, x9, #0x3
  450018:	ldr	x9, [x8]
  45001c:	str	x8, [sp, #16]
  450020:	str	x2, [sp, #8]
  450024:	cbz	x9, 450030 <builtin_kmod_init+0x38>
  450028:	stur	wzr, [x29, #-4]
  45002c:	b	450104 <builtin_kmod_init+0x10c>
  450030:	mov	x8, xzr
  450034:	mov	x0, x8
  450038:	mov	x1, x8
  45003c:	bl	40b900 <kmod_new@plt>
  450040:	ldr	x8, [sp, #16]
  450044:	str	x0, [x8]
  450048:	ldr	x9, [x8]
  45004c:	cbnz	x9, 45005c <builtin_kmod_init+0x64>
  450050:	mov	w8, #0xfffffff4            	// #-12
  450054:	stur	w8, [x29, #-4]
  450058:	b	450104 <builtin_kmod_init+0x10c>
  45005c:	mov	w8, #0x7                   	// #7
  450060:	stur	w8, [x29, #-8]
  450064:	stur	wzr, [x29, #-12]
  450068:	mov	w8, #0x1                   	// #1
  45006c:	stur	w8, [x29, #-16]
  450070:	ldur	w0, [x29, #-16]
  450074:	bl	40a3f0 <log_get_max_level_realm@plt>
  450078:	ldur	w8, [x29, #-8]
  45007c:	and	w8, w8, #0x7
  450080:	cmp	w0, w8
  450084:	b.lt	4500bc <builtin_kmod_init+0xc4>  // b.tstop
  450088:	ldur	w8, [x29, #-16]
  45008c:	ldur	w9, [x29, #-8]
  450090:	orr	w0, w9, w8, lsl #10
  450094:	ldur	w1, [x29, #-12]
  450098:	ldr	x2, [sp, #8]
  45009c:	mov	w3, #0x30                  	// #48
  4500a0:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  4500a4:	add	x4, x4, #0x9f7
  4500a8:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  4500ac:	add	x5, x5, #0xa09
  4500b0:	bl	40a400 <log_internal_realm@plt>
  4500b4:	str	w0, [sp, #4]
  4500b8:	b	4500d0 <builtin_kmod_init+0xd8>
  4500bc:	ldur	w0, [x29, #-12]
  4500c0:	bl	40a410 <abs@plt>
  4500c4:	mov	w8, wzr
  4500c8:	subs	w8, w8, w0, uxtb
  4500cc:	str	w8, [sp, #4]
  4500d0:	ldr	w8, [sp, #4]
  4500d4:	stur	w8, [x29, #-20]
  4500d8:	ldr	x9, [sp, #16]
  4500dc:	ldr	x0, [x9]
  4500e0:	adrp	x1, 450000 <builtin_kmod_init+0x8>
  4500e4:	add	x1, x1, #0x2c0
  4500e8:	mov	x10, xzr
  4500ec:	mov	x2, x10
  4500f0:	bl	40b910 <kmod_set_log_fn@plt>
  4500f4:	ldr	x9, [sp, #16]
  4500f8:	ldr	x0, [x9]
  4500fc:	bl	40b920 <kmod_load_resources@plt>
  450100:	stur	wzr, [x29, #-4]
  450104:	ldur	w0, [x29, #-4]
  450108:	ldp	x29, x30, [sp, #48]
  45010c:	add	sp, sp, #0x40
  450110:	ret

0000000000450114 <builtin_kmod_exit>:
  450114:	sub	sp, sp, #0x40
  450118:	stp	x29, x30, [sp, #48]
  45011c:	add	x29, sp, #0x30
  450120:	mov	w8, #0x7                   	// #7
  450124:	mov	w9, #0x1                   	// #1
  450128:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  45012c:	add	x10, x10, #0x9ae
  450130:	add	x2, x10, #0x3
  450134:	stur	w8, [x29, #-4]
  450138:	stur	wzr, [x29, #-8]
  45013c:	stur	w9, [x29, #-12]
  450140:	ldur	w0, [x29, #-12]
  450144:	str	x2, [sp, #24]
  450148:	bl	40a3f0 <log_get_max_level_realm@plt>
  45014c:	ldur	w8, [x29, #-4]
  450150:	and	w8, w8, #0x7
  450154:	cmp	w0, w8
  450158:	b.lt	450190 <builtin_kmod_exit+0x7c>  // b.tstop
  45015c:	ldur	w8, [x29, #-12]
  450160:	ldur	w9, [x29, #-4]
  450164:	orr	w0, w9, w8, lsl #10
  450168:	ldur	w1, [x29, #-8]
  45016c:	ldr	x2, [sp, #24]
  450170:	mov	w3, #0x38                  	// #56
  450174:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  450178:	add	x4, x4, #0xa1b
  45017c:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  450180:	add	x5, x5, #0xa2d
  450184:	bl	40a400 <log_internal_realm@plt>
  450188:	str	w0, [sp, #20]
  45018c:	b	4501a4 <builtin_kmod_exit+0x90>
  450190:	ldur	w0, [x29, #-8]
  450194:	bl	40a410 <abs@plt>
  450198:	mov	w8, wzr
  45019c:	subs	w8, w8, w0, uxtb
  4501a0:	str	w8, [sp, #20]
  4501a4:	ldr	w8, [sp, #20]
  4501a8:	stur	w8, [x29, #-16]
  4501ac:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  4501b0:	add	x9, x9, #0x250
  4501b4:	ldr	x0, [x9]
  4501b8:	str	x9, [sp, #8]
  4501bc:	bl	40b930 <kmod_unref@plt>
  4501c0:	ldr	x9, [sp, #8]
  4501c4:	str	x0, [x9]
  4501c8:	ldp	x29, x30, [sp, #48]
  4501cc:	add	sp, sp, #0x40
  4501d0:	ret

00000000004501d4 <builtin_kmod_validate>:
  4501d4:	sub	sp, sp, #0x40
  4501d8:	stp	x29, x30, [sp, #48]
  4501dc:	add	x29, sp, #0x30
  4501e0:	mov	w8, #0x7                   	// #7
  4501e4:	mov	w9, #0x1                   	// #1
  4501e8:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  4501ec:	add	x10, x10, #0x9ae
  4501f0:	add	x2, x10, #0x3
  4501f4:	stur	w8, [x29, #-8]
  4501f8:	stur	wzr, [x29, #-12]
  4501fc:	stur	w9, [x29, #-16]
  450200:	ldur	w0, [x29, #-16]
  450204:	str	x2, [sp, #16]
  450208:	bl	40a3f0 <log_get_max_level_realm@plt>
  45020c:	ldur	w8, [x29, #-8]
  450210:	and	w8, w8, #0x7
  450214:	cmp	w0, w8
  450218:	b.lt	450250 <builtin_kmod_validate+0x7c>  // b.tstop
  45021c:	ldur	w8, [x29, #-16]
  450220:	ldur	w9, [x29, #-8]
  450224:	orr	w0, w9, w8, lsl #10
  450228:	ldur	w1, [x29, #-12]
  45022c:	ldr	x2, [sp, #16]
  450230:	mov	w3, #0x3e                  	// #62
  450234:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  450238:	add	x4, x4, #0xa41
  45023c:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  450240:	add	x5, x5, #0xa57
  450244:	bl	40a400 <log_internal_realm@plt>
  450248:	str	w0, [sp, #12]
  45024c:	b	450264 <builtin_kmod_validate+0x90>
  450250:	ldur	w0, [x29, #-12]
  450254:	bl	40a410 <abs@plt>
  450258:	mov	w8, wzr
  45025c:	subs	w8, w8, w0, uxtb
  450260:	str	w8, [sp, #12]
  450264:	ldr	w8, [sp, #12]
  450268:	stur	w8, [x29, #-20]
  45026c:	adrp	x9, 4a0000 <arg_event_timeout_usec>
  450270:	add	x9, x9, #0x250
  450274:	ldr	x9, [x9]
  450278:	cbnz	x9, 45028c <builtin_kmod_validate+0xb8>
  45027c:	mov	w8, wzr
  450280:	and	w8, w8, #0x1
  450284:	sturb	w8, [x29, #-1]
  450288:	b	4502ac <builtin_kmod_validate+0xd8>
  45028c:	adrp	x8, 4a0000 <arg_event_timeout_usec>
  450290:	add	x8, x8, #0x250
  450294:	ldr	x0, [x8]
  450298:	bl	40b940 <kmod_validate_resources@plt>
  45029c:	cmp	w0, #0x0
  4502a0:	cset	w9, ne  // ne = any
  4502a4:	and	w9, w9, #0x1
  4502a8:	sturb	w9, [x29, #-1]
  4502ac:	ldurb	w8, [x29, #-1]
  4502b0:	and	w0, w8, #0x1
  4502b4:	ldp	x29, x30, [sp, #48]
  4502b8:	add	sp, sp, #0x40
  4502bc:	ret

00000000004502c0 <udev_kmod_log>:
  4502c0:	sub	sp, sp, #0x60
  4502c4:	stp	x29, x30, [sp, #80]
  4502c8:	add	x29, sp, #0x50
  4502cc:	mov	w8, #0x400                 	// #1024
  4502d0:	mov	w9, wzr
  4502d4:	mov	x10, sp
  4502d8:	stur	x0, [x29, #-8]
  4502dc:	stur	w1, [x29, #-12]
  4502e0:	stur	x2, [x29, #-24]
  4502e4:	stur	w3, [x29, #-28]
  4502e8:	str	x4, [sp, #40]
  4502ec:	str	x5, [sp, #32]
  4502f0:	ldur	w11, [x29, #-12]
  4502f4:	orr	w0, w8, w11
  4502f8:	ldur	x2, [x29, #-24]
  4502fc:	ldur	w3, [x29, #-28]
  450300:	ldr	x4, [sp, #40]
  450304:	ldr	x5, [sp, #32]
  450308:	ldr	q0, [x6]
  45030c:	str	q0, [sp]
  450310:	ldr	q0, [x6, #16]
  450314:	str	q0, [sp, #16]
  450318:	mov	w1, w9
  45031c:	mov	x6, x10
  450320:	bl	40b950 <log_internalv_realm@plt>
  450324:	ldp	x29, x30, [sp, #80]
  450328:	add	sp, sp, #0x60
  45032c:	ret

0000000000450330 <builtin_blkid>:
  450330:	stp	x29, x30, [sp, #-32]!
  450334:	str	x28, [sp, #16]
  450338:	mov	x29, sp
  45033c:	sub	sp, sp, #0x1f0
  450340:	add	x8, sp, #0xf0
  450344:	mov	x9, xzr
  450348:	mov	w10, #0x0                   	// #0
  45034c:	mov	w11, #0xffffffff            	// #-1
  450350:	mov	w12, #0x1                   	// #1
  450354:	adrp	x13, 464000 <on_inotify.__assert_in_set+0x540>
  450358:	add	x13, x13, #0xa46
  45035c:	adrp	x14, 46e000 <on_inotify.__assert_in_set+0xa540>
  450360:	add	x14, x14, #0xaa6
  450364:	add	x14, x14, #0x3
  450368:	adrp	x15, 46e000 <on_inotify.__assert_in_set+0xa540>
  45036c:	add	x15, x15, #0xac7
  450370:	str	x0, [x8, #240]
  450374:	stur	w1, [x29, #-20]
  450378:	str	x2, [x8, #224]
  45037c:	and	w12, w3, w12
  450380:	sturb	w12, [x29, #-33]
  450384:	str	x9, [x8, #200]
  450388:	str	x9, [x8, #176]
  45038c:	sturb	w10, [x29, #-81]
  450390:	sturb	w10, [x29, #-82]
  450394:	stur	w11, [x29, #-88]
  450398:	str	xzr, [x8, #160]
  45039c:	str	x8, [sp, #88]
  4503a0:	str	x13, [sp, #80]
  4503a4:	str	x14, [sp, #72]
  4503a8:	str	x15, [sp, #64]
  4503ac:	ldur	w0, [x29, #-20]
  4503b0:	ldr	x8, [sp, #88]
  4503b4:	ldr	x1, [x8, #224]
  4503b8:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4503bc:	add	x2, x2, #0xaa2
  4503c0:	adrp	x3, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  4503c4:	add	x3, x3, #0x610
  4503c8:	mov	x9, xzr
  4503cc:	mov	x4, x9
  4503d0:	bl	40a550 <getopt_long@plt>
  4503d4:	stur	w0, [x29, #-112]
  4503d8:	ldur	w10, [x29, #-112]
  4503dc:	mov	w11, #0xffffffff            	// #-1
  4503e0:	cmp	w10, w11
  4503e4:	b.ne	4503ec <builtin_blkid+0xbc>  // b.any
  4503e8:	b	450630 <builtin_blkid+0x300>
  4503ec:	ldur	w8, [x29, #-112]
  4503f0:	cmp	w8, #0x52
  4503f4:	str	w8, [sp, #60]
  4503f8:	b.eq	450624 <builtin_blkid+0x2f4>  // b.none
  4503fc:	b	450400 <builtin_blkid+0xd0>
  450400:	ldr	w8, [sp, #60]
  450404:	cmp	w8, #0x6f
  450408:	cset	w9, eq  // eq = none
  45040c:	eor	w9, w9, #0x1
  450410:	tbnz	w9, #0, 45062c <builtin_blkid+0x2fc>
  450414:	b	450418 <builtin_blkid+0xe8>
  450418:	adrp	x8, 49f000 <_DYNAMIC+0x1d0>
  45041c:	ldr	x8, [x8, #208]
  450420:	ldr	x0, [x8]
  450424:	sub	x1, x29, #0x60
  450428:	bl	450f84 <safe_atoi64>
  45042c:	stur	w0, [x29, #-108]
  450430:	ldur	w9, [x29, #-108]
  450434:	cmp	w9, #0x0
  450438:	cset	w9, ge  // ge = tcont
  45043c:	tbnz	w9, #0, 450528 <builtin_blkid+0x1f8>
  450440:	mov	x8, xzr
  450444:	ldr	x9, [sp, #88]
  450448:	str	x8, [x9, #136]
  45044c:	ldr	x8, [x9, #240]
  450450:	str	x8, [x9, #128]
  450454:	mov	w10, #0x3                   	// #3
  450458:	stur	w10, [x29, #-132]
  45045c:	ldur	w10, [x29, #-108]
  450460:	stur	w10, [x29, #-136]
  450464:	ldr	x8, [x9, #128]
  450468:	cbz	x8, 4504ac <builtin_blkid+0x17c>
  45046c:	mov	w0, #0x1                   	// #1
  450470:	bl	40a3f0 <log_get_max_level_realm@plt>
  450474:	ldur	w8, [x29, #-132]
  450478:	cmp	w0, w8
  45047c:	cset	w8, ge  // ge = tcont
  450480:	mov	w9, #0x1                   	// #1
  450484:	eor	w8, w8, #0x1
  450488:	eor	w8, w8, w9
  45048c:	and	w8, w8, #0x1
  450490:	mov	w1, w8
  450494:	sxtw	x10, w1
  450498:	cbz	x10, 4504ac <builtin_blkid+0x17c>
  45049c:	ldr	x8, [sp, #88]
  4504a0:	ldr	x0, [x8, #128]
  4504a4:	sub	x1, x29, #0x78
  4504a8:	bl	40a860 <sd_device_get_sysname@plt>
  4504ac:	ldur	w0, [x29, #-132]
  4504b0:	ldur	w1, [x29, #-136]
  4504b4:	ldr	x8, [sp, #88]
  4504b8:	ldr	x9, [x8, #136]
  4504bc:	mov	x10, xzr
  4504c0:	cmp	x9, #0x0
  4504c4:	ldr	x9, [sp, #80]
  4504c8:	csel	x5, x9, x10, ne  // ne = any
  4504cc:	ldr	x6, [x8, #136]
  4504d0:	adrp	x11, 49f000 <_DYNAMIC+0x1d0>
  4504d4:	ldr	x11, [x11, #208]
  4504d8:	ldr	x11, [x11]
  4504dc:	ldr	x2, [sp, #72]
  4504e0:	mov	w3, #0xf0                  	// #240
  4504e4:	ldr	x4, [sp, #64]
  4504e8:	mov	x7, x10
  4504ec:	mov	x12, sp
  4504f0:	str	x10, [x12]
  4504f4:	mov	x10, sp
  4504f8:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  4504fc:	add	x12, x12, #0xad5
  450500:	str	x12, [x10, #8]
  450504:	mov	x10, sp
  450508:	str	x11, [x10, #16]
  45050c:	bl	40a870 <log_object_internal@plt>
  450510:	stur	w0, [x29, #-140]
  450514:	ldur	w13, [x29, #-140]
  450518:	stur	w13, [x29, #-4]
  45051c:	mov	w13, #0x1                   	// #1
  450520:	stur	w13, [x29, #-144]
  450524:	b	450f04 <builtin_blkid+0xbd4>
  450528:	ldr	x8, [sp, #88]
  45052c:	ldr	x9, [x8, #160]
  450530:	cmp	x9, #0x0
  450534:	cset	w10, ge  // ge = tcont
  450538:	tbnz	w10, #0, 450620 <builtin_blkid+0x2f0>
  45053c:	mov	x8, xzr
  450540:	ldr	x9, [sp, #88]
  450544:	str	x8, [x9, #104]
  450548:	ldr	x8, [x9, #240]
  45054c:	str	x8, [x9, #96]
  450550:	mov	w10, #0x3                   	// #3
  450554:	stur	w10, [x29, #-164]
  450558:	mov	w10, #0x22                  	// #34
  45055c:	movk	w10, #0x4000, lsl #16
  450560:	stur	w10, [x29, #-168]
  450564:	ldr	x8, [x9, #96]
  450568:	cbz	x8, 4505ac <builtin_blkid+0x27c>
  45056c:	mov	w0, #0x1                   	// #1
  450570:	bl	40a3f0 <log_get_max_level_realm@plt>
  450574:	ldur	w8, [x29, #-164]
  450578:	cmp	w0, w8
  45057c:	cset	w8, ge  // ge = tcont
  450580:	mov	w9, #0x1                   	// #1
  450584:	eor	w8, w8, #0x1
  450588:	eor	w8, w8, w9
  45058c:	and	w8, w8, #0x1
  450590:	mov	w1, w8
  450594:	sxtw	x10, w1
  450598:	cbz	x10, 4505ac <builtin_blkid+0x27c>
  45059c:	ldr	x8, [sp, #88]
  4505a0:	ldr	x0, [x8, #96]
  4505a4:	sub	x1, x29, #0x98
  4505a8:	bl	40a860 <sd_device_get_sysname@plt>
  4505ac:	ldur	w0, [x29, #-164]
  4505b0:	ldur	w1, [x29, #-168]
  4505b4:	ldr	x8, [sp, #88]
  4505b8:	ldr	x9, [x8, #104]
  4505bc:	mov	x10, xzr
  4505c0:	cmp	x9, #0x0
  4505c4:	ldr	x9, [sp, #80]
  4505c8:	csel	x5, x9, x10, ne  // ne = any
  4505cc:	ldr	x6, [x8, #104]
  4505d0:	ldr	x11, [x8, #160]
  4505d4:	ldr	x2, [sp, #72]
  4505d8:	mov	w3, #0xf2                  	// #242
  4505dc:	ldr	x4, [sp, #64]
  4505e0:	mov	x7, x10
  4505e4:	mov	x12, sp
  4505e8:	str	x10, [x12]
  4505ec:	mov	x10, sp
  4505f0:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  4505f4:	add	x12, x12, #0xafc
  4505f8:	str	x12, [x10, #8]
  4505fc:	mov	x10, sp
  450600:	str	x11, [x10, #16]
  450604:	bl	40a870 <log_object_internal@plt>
  450608:	stur	w0, [x29, #-172]
  45060c:	ldur	w13, [x29, #-172]
  450610:	stur	w13, [x29, #-4]
  450614:	mov	w13, #0x1                   	// #1
  450618:	stur	w13, [x29, #-144]
  45061c:	b	450f04 <builtin_blkid+0xbd4>
  450620:	b	45062c <builtin_blkid+0x2fc>
  450624:	mov	w8, #0x1                   	// #1
  450628:	sturb	w8, [x29, #-81]
  45062c:	b	4503ac <builtin_blkid+0x7c>
  450630:	bl	40a480 <__errno_location@plt>
  450634:	str	wzr, [x0]
  450638:	bl	40b960 <blkid_new_probe@plt>
  45063c:	ldr	x8, [sp, #88]
  450640:	str	x0, [x8, #176]
  450644:	ldr	x9, [x8, #176]
  450648:	cbnz	x9, 450750 <builtin_blkid+0x420>
  45064c:	mov	x8, xzr
  450650:	ldr	x9, [sp, #88]
  450654:	str	x8, [x9, #72]
  450658:	ldr	x8, [x9, #240]
  45065c:	str	x8, [x9, #64]
  450660:	mov	w10, #0x7                   	// #7
  450664:	stur	w10, [x29, #-196]
  450668:	bl	40a480 <__errno_location@plt>
  45066c:	ldr	w10, [x0]
  450670:	cmp	w10, #0x0
  450674:	cset	w10, le
  450678:	tbnz	w10, #0, 45068c <builtin_blkid+0x35c>
  45067c:	bl	40a480 <__errno_location@plt>
  450680:	ldr	w8, [x0]
  450684:	str	w8, [sp, #56]
  450688:	b	450694 <builtin_blkid+0x364>
  45068c:	mov	w8, #0xc                   	// #12
  450690:	str	w8, [sp, #56]
  450694:	ldr	w8, [sp, #56]
  450698:	stur	w8, [x29, #-200]
  45069c:	ldr	x9, [sp, #88]
  4506a0:	ldr	x10, [x9, #64]
  4506a4:	cbz	x10, 4506e8 <builtin_blkid+0x3b8>
  4506a8:	mov	w0, #0x1                   	// #1
  4506ac:	bl	40a3f0 <log_get_max_level_realm@plt>
  4506b0:	ldur	w8, [x29, #-196]
  4506b4:	cmp	w0, w8
  4506b8:	cset	w8, ge  // ge = tcont
  4506bc:	mov	w9, #0x1                   	// #1
  4506c0:	eor	w8, w8, #0x1
  4506c4:	eor	w8, w8, w9
  4506c8:	and	w8, w8, #0x1
  4506cc:	mov	w1, w8
  4506d0:	sxtw	x10, w1
  4506d4:	cbz	x10, 4506e8 <builtin_blkid+0x3b8>
  4506d8:	ldr	x8, [sp, #88]
  4506dc:	ldr	x0, [x8, #64]
  4506e0:	sub	x1, x29, #0xb8
  4506e4:	bl	40a860 <sd_device_get_sysname@plt>
  4506e8:	ldur	w0, [x29, #-196]
  4506ec:	ldur	w1, [x29, #-200]
  4506f0:	ldr	x8, [sp, #88]
  4506f4:	ldr	x9, [x8, #72]
  4506f8:	mov	x10, xzr
  4506fc:	cmp	x9, #0x0
  450700:	ldr	x9, [sp, #80]
  450704:	csel	x5, x9, x10, ne  // ne = any
  450708:	ldr	x6, [x8, #72]
  45070c:	ldr	x2, [sp, #72]
  450710:	mov	w3, #0xfd                  	// #253
  450714:	ldr	x4, [sp, #64]
  450718:	mov	x7, x10
  45071c:	mov	x11, sp
  450720:	str	x10, [x11]
  450724:	mov	x10, sp
  450728:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  45072c:	add	x11, x11, #0xb13
  450730:	str	x11, [x10, #8]
  450734:	bl	40a870 <log_object_internal@plt>
  450738:	stur	w0, [x29, #-204]
  45073c:	ldur	w12, [x29, #-204]
  450740:	stur	w12, [x29, #-4]
  450744:	mov	w12, #0x1                   	// #1
  450748:	stur	w12, [x29, #-144]
  45074c:	b	450f04 <builtin_blkid+0xbd4>
  450750:	ldr	x8, [sp, #88]
  450754:	ldr	x0, [x8, #176]
  450758:	mov	w1, #0x1ea                 	// #490
  45075c:	bl	40b970 <blkid_probe_set_superblocks_flags@plt>
  450760:	ldurb	w9, [x29, #-81]
  450764:	tbnz	w9, #0, 45076c <builtin_blkid+0x43c>
  450768:	b	450780 <builtin_blkid+0x450>
  45076c:	ldr	x8, [sp, #88]
  450770:	ldr	x0, [x8, #176]
  450774:	mov	w1, #0x1                   	// #1
  450778:	mov	w2, #0x4                   	// #4
  45077c:	bl	40b980 <blkid_probe_filter_superblocks_usage@plt>
  450780:	ldr	x8, [sp, #88]
  450784:	ldr	x0, [x8, #240]
  450788:	sub	x1, x29, #0x30
  45078c:	bl	40a930 <sd_device_get_devname@plt>
  450790:	stur	w0, [x29, #-108]
  450794:	ldur	w9, [x29, #-108]
  450798:	cmp	w9, #0x0
  45079c:	cset	w9, ge  // ge = tcont
  4507a0:	tbnz	w9, #0, 450878 <builtin_blkid+0x548>
  4507a4:	mov	x8, xzr
  4507a8:	ldr	x9, [sp, #88]
  4507ac:	str	x8, [x9, #40]
  4507b0:	ldr	x8, [x9, #240]
  4507b4:	str	x8, [x9, #32]
  4507b8:	mov	w10, #0x7                   	// #7
  4507bc:	stur	w10, [x29, #-228]
  4507c0:	ldur	w10, [x29, #-108]
  4507c4:	stur	w10, [x29, #-232]
  4507c8:	ldr	x8, [x9, #32]
  4507cc:	cbz	x8, 450810 <builtin_blkid+0x4e0>
  4507d0:	mov	w0, #0x1                   	// #1
  4507d4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4507d8:	ldur	w8, [x29, #-228]
  4507dc:	cmp	w0, w8
  4507e0:	cset	w8, ge  // ge = tcont
  4507e4:	mov	w9, #0x1                   	// #1
  4507e8:	eor	w8, w8, #0x1
  4507ec:	eor	w8, w8, w9
  4507f0:	and	w8, w8, #0x1
  4507f4:	mov	w1, w8
  4507f8:	sxtw	x10, w1
  4507fc:	cbz	x10, 450810 <builtin_blkid+0x4e0>
  450800:	ldr	x8, [sp, #88]
  450804:	ldr	x0, [x8, #32]
  450808:	sub	x1, x29, #0xd8
  45080c:	bl	40a860 <sd_device_get_sysname@plt>
  450810:	ldur	w0, [x29, #-228]
  450814:	ldur	w1, [x29, #-232]
  450818:	ldr	x8, [sp, #88]
  45081c:	ldr	x9, [x8, #40]
  450820:	mov	x10, xzr
  450824:	cmp	x9, #0x0
  450828:	ldr	x9, [sp, #80]
  45082c:	csel	x5, x9, x10, ne  // ne = any
  450830:	ldr	x6, [x8, #40]
  450834:	ldr	x2, [sp, #72]
  450838:	mov	w3, #0x109                 	// #265
  45083c:	ldr	x4, [sp, #64]
  450840:	mov	x7, x10
  450844:	mov	x11, sp
  450848:	str	x10, [x11]
  45084c:	mov	x10, sp
  450850:	adrp	x11, 469000 <on_inotify.__assert_in_set+0x5540>
  450854:	add	x11, x11, #0x121
  450858:	str	x11, [x10, #8]
  45085c:	bl	40a870 <log_object_internal@plt>
  450860:	stur	w0, [x29, #-236]
  450864:	ldur	w12, [x29, #-236]
  450868:	stur	w12, [x29, #-4]
  45086c:	mov	w12, #0x1                   	// #1
  450870:	stur	w12, [x29, #-144]
  450874:	b	450f04 <builtin_blkid+0xbd4>
  450878:	ldr	x8, [sp, #88]
  45087c:	ldr	x0, [x8, #208]
  450880:	mov	w1, #0x800                 	// #2048
  450884:	movk	w1, #0x8, lsl #16
  450888:	bl	40abd0 <open64@plt>
  45088c:	stur	w0, [x29, #-88]
  450890:	ldur	w9, [x29, #-88]
  450894:	cmp	w9, #0x0
  450898:	cset	w9, ge  // ge = tcont
  45089c:	tbnz	w9, #0, 450988 <builtin_blkid+0x658>
  4508a0:	mov	x8, xzr
  4508a4:	ldr	x9, [sp, #88]
  4508a8:	str	x8, [x9, #8]
  4508ac:	ldr	x8, [x9, #240]
  4508b0:	str	x8, [x9]
  4508b4:	mov	w10, #0x7                   	// #7
  4508b8:	str	w10, [sp, #236]
  4508bc:	bl	40a480 <__errno_location@plt>
  4508c0:	ldr	w10, [x0]
  4508c4:	str	w10, [sp, #232]
  4508c8:	ldr	x8, [sp, #88]
  4508cc:	ldr	x9, [x8]
  4508d0:	cbz	x9, 450914 <builtin_blkid+0x5e4>
  4508d4:	mov	w0, #0x1                   	// #1
  4508d8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4508dc:	ldr	w8, [sp, #236]
  4508e0:	cmp	w0, w8
  4508e4:	cset	w8, ge  // ge = tcont
  4508e8:	mov	w9, #0x1                   	// #1
  4508ec:	eor	w8, w8, #0x1
  4508f0:	eor	w8, w8, w9
  4508f4:	and	w8, w8, #0x1
  4508f8:	mov	w1, w8
  4508fc:	sxtw	x10, w1
  450900:	cbz	x10, 450914 <builtin_blkid+0x5e4>
  450904:	ldr	x8, [sp, #88]
  450908:	ldr	x0, [x8]
  45090c:	add	x1, sp, #0xf8
  450910:	bl	40a860 <sd_device_get_sysname@plt>
  450914:	ldr	w0, [sp, #236]
  450918:	ldr	w1, [sp, #232]
  45091c:	ldr	x8, [sp, #88]
  450920:	ldr	x9, [x8, #8]
  450924:	mov	x10, xzr
  450928:	cmp	x9, #0x0
  45092c:	ldr	x9, [sp, #80]
  450930:	csel	x5, x9, x10, ne  // ne = any
  450934:	ldr	x6, [x8, #8]
  450938:	ldr	x11, [x8, #208]
  45093c:	ldr	x2, [sp, #72]
  450940:	mov	w3, #0x10d                 	// #269
  450944:	ldr	x4, [sp, #64]
  450948:	mov	x7, x10
  45094c:	mov	x12, sp
  450950:	str	x10, [x12]
  450954:	mov	x10, sp
  450958:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  45095c:	add	x12, x12, #0xb35
  450960:	str	x12, [x10, #8]
  450964:	mov	x10, sp
  450968:	str	x11, [x10, #16]
  45096c:	bl	40a870 <log_object_internal@plt>
  450970:	str	w0, [sp, #228]
  450974:	ldr	w13, [sp, #228]
  450978:	stur	w13, [x29, #-4]
  45097c:	mov	w13, #0x1                   	// #1
  450980:	stur	w13, [x29, #-144]
  450984:	b	450f04 <builtin_blkid+0xbd4>
  450988:	bl	40a480 <__errno_location@plt>
  45098c:	str	wzr, [x0]
  450990:	ldr	x8, [sp, #88]
  450994:	ldr	x0, [x8, #176]
  450998:	ldur	w1, [x29, #-88]
  45099c:	ldr	x2, [x8, #160]
  4509a0:	mov	x9, xzr
  4509a4:	mov	x3, x9
  4509a8:	bl	40b990 <blkid_probe_set_device@plt>
  4509ac:	stur	w0, [x29, #-108]
  4509b0:	ldur	w10, [x29, #-108]
  4509b4:	cmp	w10, #0x0
  4509b8:	cset	w10, ge  // ge = tcont
  4509bc:	tbnz	w10, #0, 450ab8 <builtin_blkid+0x788>
  4509c0:	mov	x8, xzr
  4509c4:	str	x8, [sp, #216]
  4509c8:	ldr	x8, [sp, #88]
  4509cc:	ldr	x9, [x8, #240]
  4509d0:	str	x9, [sp, #208]
  4509d4:	mov	w10, #0x7                   	// #7
  4509d8:	str	w10, [sp, #204]
  4509dc:	bl	40a480 <__errno_location@plt>
  4509e0:	ldr	w10, [x0]
  4509e4:	cmp	w10, #0x0
  4509e8:	cset	w10, le
  4509ec:	tbnz	w10, #0, 450a00 <builtin_blkid+0x6d0>
  4509f0:	bl	40a480 <__errno_location@plt>
  4509f4:	ldr	w8, [x0]
  4509f8:	str	w8, [sp, #52]
  4509fc:	b	450a08 <builtin_blkid+0x6d8>
  450a00:	mov	w8, #0xc                   	// #12
  450a04:	str	w8, [sp, #52]
  450a08:	ldr	w8, [sp, #52]
  450a0c:	str	w8, [sp, #200]
  450a10:	ldr	x9, [sp, #208]
  450a14:	cbz	x9, 450a54 <builtin_blkid+0x724>
  450a18:	mov	w0, #0x1                   	// #1
  450a1c:	bl	40a3f0 <log_get_max_level_realm@plt>
  450a20:	ldr	w8, [sp, #204]
  450a24:	cmp	w0, w8
  450a28:	cset	w8, ge  // ge = tcont
  450a2c:	mov	w9, #0x1                   	// #1
  450a30:	eor	w8, w8, #0x1
  450a34:	eor	w8, w8, w9
  450a38:	and	w8, w8, #0x1
  450a3c:	mov	w1, w8
  450a40:	sxtw	x10, w1
  450a44:	cbz	x10, 450a54 <builtin_blkid+0x724>
  450a48:	ldr	x0, [sp, #208]
  450a4c:	add	x1, sp, #0xd8
  450a50:	bl	40a860 <sd_device_get_sysname@plt>
  450a54:	ldr	w0, [sp, #204]
  450a58:	ldr	w1, [sp, #200]
  450a5c:	ldr	x8, [sp, #216]
  450a60:	mov	x9, xzr
  450a64:	cmp	x8, #0x0
  450a68:	ldr	x8, [sp, #80]
  450a6c:	csel	x5, x8, x9, ne  // ne = any
  450a70:	ldr	x6, [sp, #216]
  450a74:	ldr	x2, [sp, #72]
  450a78:	mov	w3, #0x112                 	// #274
  450a7c:	ldr	x4, [sp, #64]
  450a80:	mov	x7, x9
  450a84:	mov	x10, sp
  450a88:	str	x9, [x10]
  450a8c:	mov	x9, sp
  450a90:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  450a94:	add	x10, x10, #0xb58
  450a98:	str	x10, [x9, #8]
  450a9c:	bl	40a870 <log_object_internal@plt>
  450aa0:	str	w0, [sp, #196]
  450aa4:	ldr	w11, [sp, #196]
  450aa8:	stur	w11, [x29, #-4]
  450aac:	mov	w11, #0x1                   	// #1
  450ab0:	stur	w11, [x29, #-144]
  450ab4:	b	450f04 <builtin_blkid+0xbd4>
  450ab8:	mov	x8, xzr
  450abc:	str	x8, [sp, #184]
  450ac0:	ldr	x8, [sp, #88]
  450ac4:	ldr	x9, [x8, #240]
  450ac8:	str	x9, [sp, #176]
  450acc:	mov	w10, #0x7                   	// #7
  450ad0:	str	w10, [sp, #172]
  450ad4:	str	wzr, [sp, #168]
  450ad8:	ldr	x9, [sp, #176]
  450adc:	cbz	x9, 450b1c <builtin_blkid+0x7ec>
  450ae0:	mov	w0, #0x1                   	// #1
  450ae4:	bl	40a3f0 <log_get_max_level_realm@plt>
  450ae8:	ldr	w8, [sp, #172]
  450aec:	cmp	w0, w8
  450af0:	cset	w8, ge  // ge = tcont
  450af4:	mov	w9, #0x1                   	// #1
  450af8:	eor	w8, w8, #0x1
  450afc:	eor	w8, w8, w9
  450b00:	and	w8, w8, #0x1
  450b04:	mov	w1, w8
  450b08:	sxtw	x10, w1
  450b0c:	cbz	x10, 450b1c <builtin_blkid+0x7ec>
  450b10:	ldr	x0, [sp, #176]
  450b14:	add	x1, sp, #0xb8
  450b18:	bl	40a860 <sd_device_get_sysname@plt>
  450b1c:	ldr	w0, [sp, #172]
  450b20:	ldr	w1, [sp, #168]
  450b24:	ldr	x8, [sp, #184]
  450b28:	mov	x9, xzr
  450b2c:	cmp	x8, #0x0
  450b30:	ldr	x8, [sp, #80]
  450b34:	csel	x5, x8, x9, ne  // ne = any
  450b38:	ldr	x6, [sp, #184]
  450b3c:	ldr	x10, [sp, #88]
  450b40:	ldr	x11, [x10, #208]
  450b44:	ldurb	w12, [x29, #-81]
  450b48:	adrp	x13, 468000 <on_inotify.__assert_in_set+0x4540>
  450b4c:	add	x13, x13, #0xcbe
  450b50:	adrp	x14, 46e000 <on_inotify.__assert_in_set+0xa540>
  450b54:	add	x14, x14, #0xba5
  450b58:	tst	w12, #0x1
  450b5c:	csel	x13, x14, x13, ne  // ne = any
  450b60:	ldr	x14, [x10, #160]
  450b64:	ldr	x2, [sp, #72]
  450b68:	mov	w3, #0x114                 	// #276
  450b6c:	ldr	x4, [sp, #64]
  450b70:	mov	x7, x9
  450b74:	mov	x15, sp
  450b78:	str	x9, [x15]
  450b7c:	mov	x9, sp
  450b80:	adrp	x15, 46e000 <on_inotify.__assert_in_set+0xa540>
  450b84:	add	x15, x15, #0xb81
  450b88:	str	x15, [x9, #8]
  450b8c:	mov	x9, sp
  450b90:	str	x11, [x9, #16]
  450b94:	mov	x9, sp
  450b98:	str	x13, [x9, #24]
  450b9c:	mov	x9, sp
  450ba0:	str	x14, [x9, #32]
  450ba4:	bl	40a870 <log_object_internal@plt>
  450ba8:	str	w0, [sp, #164]
  450bac:	ldr	x8, [sp, #88]
  450bb0:	ldr	x0, [x8, #176]
  450bb4:	bl	450fb0 <probe_superblocks>
  450bb8:	stur	w0, [x29, #-108]
  450bbc:	ldur	w12, [x29, #-108]
  450bc0:	cmp	w12, #0x0
  450bc4:	cset	w12, ge  // ge = tcont
  450bc8:	tbnz	w12, #0, 450c98 <builtin_blkid+0x968>
  450bcc:	mov	x8, xzr
  450bd0:	str	x8, [sp, #152]
  450bd4:	ldr	x8, [sp, #88]
  450bd8:	ldr	x9, [x8, #240]
  450bdc:	str	x9, [sp, #144]
  450be0:	mov	w10, #0x7                   	// #7
  450be4:	str	w10, [sp, #140]
  450be8:	ldur	w10, [x29, #-108]
  450bec:	str	w10, [sp, #136]
  450bf0:	ldr	x9, [sp, #144]
  450bf4:	cbz	x9, 450c34 <builtin_blkid+0x904>
  450bf8:	mov	w0, #0x1                   	// #1
  450bfc:	bl	40a3f0 <log_get_max_level_realm@plt>
  450c00:	ldr	w8, [sp, #140]
  450c04:	cmp	w0, w8
  450c08:	cset	w8, ge  // ge = tcont
  450c0c:	mov	w9, #0x1                   	// #1
  450c10:	eor	w8, w8, #0x1
  450c14:	eor	w8, w8, w9
  450c18:	and	w8, w8, #0x1
  450c1c:	mov	w1, w8
  450c20:	sxtw	x10, w1
  450c24:	cbz	x10, 450c34 <builtin_blkid+0x904>
  450c28:	ldr	x0, [sp, #144]
  450c2c:	add	x1, sp, #0x98
  450c30:	bl	40a860 <sd_device_get_sysname@plt>
  450c34:	ldr	w0, [sp, #140]
  450c38:	ldr	w1, [sp, #136]
  450c3c:	ldr	x8, [sp, #152]
  450c40:	mov	x9, xzr
  450c44:	cmp	x8, #0x0
  450c48:	ldr	x8, [sp, #80]
  450c4c:	csel	x5, x8, x9, ne  // ne = any
  450c50:	ldr	x6, [sp, #152]
  450c54:	ldr	x2, [sp, #72]
  450c58:	mov	w3, #0x118                 	// #280
  450c5c:	ldr	x4, [sp, #64]
  450c60:	mov	x7, x9
  450c64:	mov	x10, sp
  450c68:	str	x9, [x10]
  450c6c:	mov	x9, sp
  450c70:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  450c74:	add	x10, x10, #0xba8
  450c78:	str	x10, [x9, #8]
  450c7c:	bl	40a870 <log_object_internal@plt>
  450c80:	str	w0, [sp, #132]
  450c84:	ldr	w11, [sp, #132]
  450c88:	stur	w11, [x29, #-4]
  450c8c:	mov	w11, #0x1                   	// #1
  450c90:	stur	w11, [x29, #-144]
  450c94:	b	450f04 <builtin_blkid+0xbd4>
  450c98:	ldr	x8, [sp, #88]
  450c9c:	ldr	x0, [x8, #240]
  450ca0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  450ca4:	add	x1, x1, #0xbc8
  450ca8:	sub	x2, x29, #0x38
  450cac:	bl	40aa40 <sd_device_get_property_value@plt>
  450cb0:	bl	40a480 <__errno_location@plt>
  450cb4:	str	wzr, [x0]
  450cb8:	ldr	x8, [sp, #88]
  450cbc:	ldr	x0, [x8, #176]
  450cc0:	bl	40b9a0 <blkid_probe_numof_values@plt>
  450cc4:	stur	w0, [x29, #-100]
  450cc8:	ldur	w9, [x29, #-100]
  450ccc:	cmp	w9, #0x0
  450cd0:	cset	w9, ge  // ge = tcont
  450cd4:	tbnz	w9, #0, 450dd0 <builtin_blkid+0xaa0>
  450cd8:	mov	x8, xzr
  450cdc:	str	x8, [sp, #120]
  450ce0:	ldr	x8, [sp, #88]
  450ce4:	ldr	x9, [x8, #240]
  450ce8:	str	x9, [sp, #112]
  450cec:	mov	w10, #0x7                   	// #7
  450cf0:	str	w10, [sp, #108]
  450cf4:	bl	40a480 <__errno_location@plt>
  450cf8:	ldr	w10, [x0]
  450cfc:	cmp	w10, #0x0
  450d00:	cset	w10, le
  450d04:	tbnz	w10, #0, 450d18 <builtin_blkid+0x9e8>
  450d08:	bl	40a480 <__errno_location@plt>
  450d0c:	ldr	w8, [x0]
  450d10:	str	w8, [sp, #48]
  450d14:	b	450d20 <builtin_blkid+0x9f0>
  450d18:	mov	w8, #0xc                   	// #12
  450d1c:	str	w8, [sp, #48]
  450d20:	ldr	w8, [sp, #48]
  450d24:	str	w8, [sp, #104]
  450d28:	ldr	x9, [sp, #112]
  450d2c:	cbz	x9, 450d6c <builtin_blkid+0xa3c>
  450d30:	mov	w0, #0x1                   	// #1
  450d34:	bl	40a3f0 <log_get_max_level_realm@plt>
  450d38:	ldr	w8, [sp, #108]
  450d3c:	cmp	w0, w8
  450d40:	cset	w8, ge  // ge = tcont
  450d44:	mov	w9, #0x1                   	// #1
  450d48:	eor	w8, w8, #0x1
  450d4c:	eor	w8, w8, w9
  450d50:	and	w8, w8, #0x1
  450d54:	mov	w1, w8
  450d58:	sxtw	x10, w1
  450d5c:	cbz	x10, 450d6c <builtin_blkid+0xa3c>
  450d60:	ldr	x0, [sp, #112]
  450d64:	add	x1, sp, #0x78
  450d68:	bl	40a860 <sd_device_get_sysname@plt>
  450d6c:	ldr	w0, [sp, #108]
  450d70:	ldr	w1, [sp, #104]
  450d74:	ldr	x8, [sp, #120]
  450d78:	mov	x9, xzr
  450d7c:	cmp	x8, #0x0
  450d80:	ldr	x8, [sp, #80]
  450d84:	csel	x5, x8, x9, ne  // ne = any
  450d88:	ldr	x6, [sp, #120]
  450d8c:	ldr	x2, [sp, #72]
  450d90:	mov	w3, #0x120                 	// #288
  450d94:	ldr	x4, [sp, #64]
  450d98:	mov	x7, x9
  450d9c:	mov	x10, sp
  450da0:	str	x9, [x10]
  450da4:	mov	x9, sp
  450da8:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  450dac:	add	x10, x10, #0xbe3
  450db0:	str	x10, [x9, #8]
  450db4:	bl	40a870 <log_object_internal@plt>
  450db8:	str	w0, [sp, #100]
  450dbc:	ldr	w11, [sp, #100]
  450dc0:	stur	w11, [x29, #-4]
  450dc4:	mov	w11, #0x1                   	// #1
  450dc8:	stur	w11, [x29, #-144]
  450dcc:	b	450f04 <builtin_blkid+0xbd4>
  450dd0:	stur	wzr, [x29, #-104]
  450dd4:	ldur	w8, [x29, #-104]
  450dd8:	ldur	w9, [x29, #-100]
  450ddc:	cmp	w8, w9
  450de0:	b.ge	450ed4 <builtin_blkid+0xba4>  // b.tcont
  450de4:	ldr	x8, [sp, #88]
  450de8:	ldr	x0, [x8, #176]
  450dec:	ldur	w1, [x29, #-104]
  450df0:	sub	x2, x29, #0x48
  450df4:	sub	x3, x29, #0x40
  450df8:	mov	x9, xzr
  450dfc:	mov	x4, x9
  450e00:	bl	40b9b0 <blkid_probe_get_value@plt>
  450e04:	cmp	w0, #0x0
  450e08:	cset	w10, ge  // ge = tcont
  450e0c:	tbnz	w10, #0, 450e14 <builtin_blkid+0xae4>
  450e10:	b	450ec4 <builtin_blkid+0xb94>
  450e14:	ldr	x8, [sp, #88]
  450e18:	ldr	x0, [x8, #240]
  450e1c:	ldurb	w9, [x29, #-33]
  450e20:	ldr	x2, [x8, #184]
  450e24:	ldr	x3, [x8, #192]
  450e28:	and	w1, w9, #0x1
  450e2c:	bl	4510f8 <print_property>
  450e30:	ldr	x8, [sp, #88]
  450e34:	ldr	x0, [x8, #184]
  450e38:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  450e3c:	add	x1, x1, #0xc0d
  450e40:	bl	40aa20 <strcmp@plt>
  450e44:	cbnz	w0, 450e68 <builtin_blkid+0xb38>
  450e48:	ldr	x8, [sp, #88]
  450e4c:	ldr	x0, [x8, #192]
  450e50:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  450e54:	add	x1, x1, #0xc14
  450e58:	bl	40aa20 <strcmp@plt>
  450e5c:	cbnz	w0, 450e68 <builtin_blkid+0xb38>
  450e60:	mov	w8, #0x1                   	// #1
  450e64:	sturb	w8, [x29, #-82]
  450e68:	ldr	x8, [sp, #88]
  450e6c:	ldr	x9, [x8, #200]
  450e70:	cbz	x9, 450ec4 <builtin_blkid+0xb94>
  450e74:	ldr	x8, [sp, #88]
  450e78:	ldr	x0, [x8, #184]
  450e7c:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  450e80:	add	x1, x1, #0xc18
  450e84:	bl	40aa20 <strcmp@plt>
  450e88:	cbnz	w0, 450ec4 <builtin_blkid+0xb94>
  450e8c:	ldr	x8, [sp, #88]
  450e90:	ldr	x0, [x8, #192]
  450e94:	ldr	x1, [x8, #200]
  450e98:	bl	40aa20 <strcmp@plt>
  450e9c:	cbnz	w0, 450ec4 <builtin_blkid+0xb94>
  450ea0:	ldr	x8, [sp, #88]
  450ea4:	ldr	x0, [x8, #240]
  450ea8:	ldurb	w9, [x29, #-33]
  450eac:	and	w1, w9, #0x1
  450eb0:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  450eb4:	add	x2, x2, #0xc28
  450eb8:	adrp	x3, 466000 <on_inotify.__assert_in_set+0x2540>
  450ebc:	add	x3, x3, #0xbbe
  450ec0:	bl	43eae8 <udev_builtin_add_property>
  450ec4:	ldur	w8, [x29, #-104]
  450ec8:	add	w8, w8, #0x1
  450ecc:	stur	w8, [x29, #-104]
  450ed0:	b	450dd4 <builtin_blkid+0xaa4>
  450ed4:	ldurb	w8, [x29, #-82]
  450ed8:	tbnz	w8, #0, 450ee0 <builtin_blkid+0xbb0>
  450edc:	b	450ef8 <builtin_blkid+0xbc8>
  450ee0:	ldr	x8, [sp, #88]
  450ee4:	ldr	x0, [x8, #240]
  450ee8:	ldr	x1, [x8, #176]
  450eec:	ldurb	w9, [x29, #-33]
  450ef0:	and	w2, w9, #0x1
  450ef4:	bl	451618 <find_gpt_root>
  450ef8:	stur	wzr, [x29, #-4]
  450efc:	mov	w8, #0x1                   	// #1
  450f00:	stur	w8, [x29, #-144]
  450f04:	sub	x0, x29, #0x58
  450f08:	bl	450f5c <closep>
  450f0c:	sub	x0, x29, #0x50
  450f10:	bl	450f28 <blkid_free_probep>
  450f14:	ldur	w0, [x29, #-4]
  450f18:	add	sp, sp, #0x1f0
  450f1c:	ldr	x28, [sp, #16]
  450f20:	ldp	x29, x30, [sp], #32
  450f24:	ret

0000000000450f28 <blkid_free_probep>:
  450f28:	sub	sp, sp, #0x20
  450f2c:	stp	x29, x30, [sp, #16]
  450f30:	add	x29, sp, #0x10
  450f34:	str	x0, [sp, #8]
  450f38:	ldr	x8, [sp, #8]
  450f3c:	ldr	x8, [x8]
  450f40:	cbz	x8, 450f50 <blkid_free_probep+0x28>
  450f44:	ldr	x8, [sp, #8]
  450f48:	ldr	x0, [x8]
  450f4c:	bl	40b9c0 <blkid_free_probe@plt>
  450f50:	ldp	x29, x30, [sp, #16]
  450f54:	add	sp, sp, #0x20
  450f58:	ret

0000000000450f5c <closep>:
  450f5c:	sub	sp, sp, #0x20
  450f60:	stp	x29, x30, [sp, #16]
  450f64:	add	x29, sp, #0x10
  450f68:	str	x0, [sp, #8]
  450f6c:	ldr	x8, [sp, #8]
  450f70:	ldr	w0, [x8]
  450f74:	bl	40a760 <safe_close@plt>
  450f78:	ldp	x29, x30, [sp, #16]
  450f7c:	add	sp, sp, #0x20
  450f80:	ret

0000000000450f84 <safe_atoi64>:
  450f84:	sub	sp, sp, #0x20
  450f88:	stp	x29, x30, [sp, #16]
  450f8c:	add	x29, sp, #0x10
  450f90:	str	x0, [sp, #8]
  450f94:	str	x1, [sp]
  450f98:	ldr	x0, [sp, #8]
  450f9c:	ldr	x1, [sp]
  450fa0:	bl	40b9d0 <safe_atolli@plt>
  450fa4:	ldp	x29, x30, [sp, #16]
  450fa8:	add	sp, sp, #0x20
  450fac:	ret

0000000000450fb0 <probe_superblocks>:
  450fb0:	sub	sp, sp, #0xc0
  450fb4:	stp	x29, x30, [sp, #176]
  450fb8:	add	x29, sp, #0xb0
  450fbc:	sub	x8, x29, #0x10
  450fc0:	add	x1, sp, #0x20
  450fc4:	str	x0, [x8]
  450fc8:	ldr	x0, [x8]
  450fcc:	str	x8, [sp, #16]
  450fd0:	str	x1, [sp, #8]
  450fd4:	bl	40b9e0 <blkid_probe_get_fd@plt>
  450fd8:	ldr	x1, [sp, #8]
  450fdc:	bl	463818 <fstat64>
  450fe0:	cbz	w0, 450ffc <probe_superblocks+0x4c>
  450fe4:	bl	40a480 <__errno_location@plt>
  450fe8:	ldr	w8, [x0]
  450fec:	mov	w9, wzr
  450ff0:	subs	w8, w9, w8
  450ff4:	stur	w8, [x29, #-4]
  450ff8:	b	4510e8 <probe_superblocks+0x138>
  450ffc:	ldr	x8, [sp, #16]
  451000:	ldr	x0, [x8]
  451004:	mov	w1, #0x1                   	// #1
  451008:	bl	40b9f0 <blkid_probe_enable_partitions@plt>
  45100c:	ldr	w9, [sp, #48]
  451010:	and	w9, w9, #0xf000
  451014:	cmp	w9, #0x2, lsl #12
  451018:	b.eq	4510b0 <probe_superblocks+0x100>  // b.none
  45101c:	ldr	x8, [sp, #16]
  451020:	ldr	x0, [x8]
  451024:	bl	40ba00 <blkid_probe_get_size@plt>
  451028:	cmp	x0, #0x168, lsl #12
  45102c:	b.gt	4510b0 <probe_superblocks+0x100>
  451030:	ldr	x8, [sp, #16]
  451034:	ldr	x0, [x8]
  451038:	bl	40ba10 <blkid_probe_is_wholedisk@plt>
  45103c:	cbz	w0, 4510b0 <probe_superblocks+0x100>
  451040:	ldr	x8, [sp, #16]
  451044:	ldr	x0, [x8]
  451048:	mov	w9, wzr
  45104c:	mov	w1, w9
  451050:	bl	40ba20 <blkid_probe_enable_superblocks@plt>
  451054:	ldr	x8, [sp, #16]
  451058:	ldr	x10, [x8]
  45105c:	mov	x0, x10
  451060:	bl	40ba30 <blkid_do_fullprobe@plt>
  451064:	str	w0, [sp, #28]
  451068:	ldr	w9, [sp, #28]
  45106c:	cmp	w9, #0x0
  451070:	cset	w9, ge  // ge = tcont
  451074:	tbnz	w9, #0, 451084 <probe_superblocks+0xd4>
  451078:	ldr	w8, [sp, #28]
  45107c:	stur	w8, [x29, #-4]
  451080:	b	4510e8 <probe_superblocks+0x138>
  451084:	ldr	x8, [sp, #16]
  451088:	ldr	x0, [x8]
  45108c:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451090:	add	x1, x1, #0xc0d
  451094:	mov	x9, xzr
  451098:	mov	x2, x9
  45109c:	mov	x3, x9
  4510a0:	bl	40ba40 <blkid_probe_lookup_value@plt>
  4510a4:	cbnz	w0, 4510b0 <probe_superblocks+0x100>
  4510a8:	stur	wzr, [x29, #-4]
  4510ac:	b	4510e8 <probe_superblocks+0x138>
  4510b0:	ldr	x8, [sp, #16]
  4510b4:	ldr	x0, [x8]
  4510b8:	mov	w1, #0x4                   	// #4
  4510bc:	bl	40ba50 <blkid_probe_set_partitions_flags@plt>
  4510c0:	ldr	x8, [sp, #16]
  4510c4:	ldr	x9, [x8]
  4510c8:	mov	x0, x9
  4510cc:	mov	w1, #0x1                   	// #1
  4510d0:	bl	40ba20 <blkid_probe_enable_superblocks@plt>
  4510d4:	ldr	x8, [sp, #16]
  4510d8:	ldr	x9, [x8]
  4510dc:	mov	x0, x9
  4510e0:	bl	40ba60 <blkid_do_safeprobe@plt>
  4510e4:	stur	w0, [x29, #-4]
  4510e8:	ldur	w0, [x29, #-4]
  4510ec:	ldp	x29, x30, [sp, #176]
  4510f0:	add	sp, sp, #0xc0
  4510f4:	ret

00000000004510f8 <print_property>:
  4510f8:	sub	sp, sp, #0x1b0
  4510fc:	stp	x29, x30, [sp, #400]
  451100:	str	x28, [sp, #416]
  451104:	add	x29, sp, #0x190
  451108:	mov	w8, #0x0                   	// #0
  45110c:	adrp	x9, 46e000 <on_inotify.__assert_in_set+0xa540>
  451110:	add	x9, x9, #0xc3e
  451114:	stur	x0, [x29, #-8]
  451118:	and	w10, w1, #0x1
  45111c:	sturb	w10, [x29, #-9]
  451120:	stur	x2, [x29, #-24]
  451124:	stur	x3, [x29, #-32]
  451128:	strb	w8, [sp, #112]
  45112c:	ldur	x0, [x29, #-24]
  451130:	mov	x1, x9
  451134:	bl	40aa20 <strcmp@plt>
  451138:	cbnz	w0, 45115c <print_property+0x64>
  45113c:	ldur	x0, [x29, #-8]
  451140:	ldurb	w8, [x29, #-9]
  451144:	ldur	x3, [x29, #-32]
  451148:	and	w1, w8, #0x1
  45114c:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451150:	add	x2, x2, #0xc43
  451154:	bl	43eae8 <udev_builtin_add_property>
  451158:	b	451608 <print_property+0x510>
  45115c:	ldur	x0, [x29, #-24]
  451160:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451164:	add	x1, x1, #0xc4e
  451168:	bl	40aa20 <strcmp@plt>
  45116c:	cbnz	w0, 451190 <print_property+0x98>
  451170:	ldur	x0, [x29, #-8]
  451174:	ldurb	w8, [x29, #-9]
  451178:	ldur	x3, [x29, #-32]
  45117c:	and	w1, w8, #0x1
  451180:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451184:	add	x2, x2, #0xc54
  451188:	bl	43eae8 <udev_builtin_add_property>
  45118c:	b	451608 <print_property+0x510>
  451190:	ldur	x0, [x29, #-24]
  451194:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451198:	add	x1, x1, #0xc60
  45119c:	bl	40aa20 <strcmp@plt>
  4511a0:	cbnz	w0, 4511c4 <print_property+0xcc>
  4511a4:	ldur	x0, [x29, #-8]
  4511a8:	ldurb	w8, [x29, #-9]
  4511ac:	ldur	x3, [x29, #-32]
  4511b0:	and	w1, w8, #0x1
  4511b4:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4511b8:	add	x2, x2, #0xc68
  4511bc:	bl	43eae8 <udev_builtin_add_property>
  4511c0:	b	451608 <print_property+0x510>
  4511c4:	ldur	x0, [x29, #-24]
  4511c8:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4511cc:	add	x1, x1, #0xc76
  4511d0:	bl	40aa20 <strcmp@plt>
  4511d4:	cbnz	w0, 451250 <print_property+0x158>
  4511d8:	ldur	x0, [x29, #-32]
  4511dc:	add	x8, sp, #0x70
  4511e0:	mov	x1, x8
  4511e4:	mov	x9, #0x100                 	// #256
  4511e8:	mov	x2, x9
  4511ec:	str	x8, [sp, #104]
  4511f0:	str	x9, [sp, #96]
  4511f4:	bl	40ba70 <blkid_safe_string@plt>
  4511f8:	ldur	x8, [x29, #-8]
  4511fc:	ldurb	w10, [x29, #-9]
  451200:	mov	x0, x8
  451204:	and	w1, w10, #0x1
  451208:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  45120c:	add	x2, x2, #0xc7b
  451210:	ldr	x3, [sp, #104]
  451214:	bl	43eae8 <udev_builtin_add_property>
  451218:	ldur	x8, [x29, #-32]
  45121c:	mov	x0, x8
  451220:	ldr	x1, [sp, #104]
  451224:	ldr	x2, [sp, #96]
  451228:	bl	40ba80 <blkid_encode_string@plt>
  45122c:	ldur	x8, [x29, #-8]
  451230:	ldurb	w10, [x29, #-9]
  451234:	mov	x0, x8
  451238:	and	w1, w10, #0x1
  45123c:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451240:	add	x2, x2, #0xc86
  451244:	ldr	x3, [sp, #104]
  451248:	bl	43eae8 <udev_builtin_add_property>
  45124c:	b	451608 <print_property+0x510>
  451250:	ldur	x0, [x29, #-24]
  451254:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451258:	add	x1, x1, #0xc95
  45125c:	bl	40aa20 <strcmp@plt>
  451260:	cbnz	w0, 4512dc <print_property+0x1e4>
  451264:	ldur	x0, [x29, #-32]
  451268:	add	x8, sp, #0x70
  45126c:	mov	x1, x8
  451270:	mov	x9, #0x100                 	// #256
  451274:	mov	x2, x9
  451278:	str	x8, [sp, #88]
  45127c:	str	x9, [sp, #80]
  451280:	bl	40ba70 <blkid_safe_string@plt>
  451284:	ldur	x8, [x29, #-8]
  451288:	ldurb	w10, [x29, #-9]
  45128c:	mov	x0, x8
  451290:	and	w1, w10, #0x1
  451294:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451298:	add	x2, x2, #0xc9e
  45129c:	ldr	x3, [sp, #88]
  4512a0:	bl	43eae8 <udev_builtin_add_property>
  4512a4:	ldur	x8, [x29, #-32]
  4512a8:	mov	x0, x8
  4512ac:	ldr	x1, [sp, #88]
  4512b0:	ldr	x2, [sp, #80]
  4512b4:	bl	40ba80 <blkid_encode_string@plt>
  4512b8:	ldur	x8, [x29, #-8]
  4512bc:	ldurb	w10, [x29, #-9]
  4512c0:	mov	x0, x8
  4512c4:	and	w1, w10, #0x1
  4512c8:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4512cc:	add	x2, x2, #0xcad
  4512d0:	ldr	x3, [sp, #88]
  4512d4:	bl	43eae8 <udev_builtin_add_property>
  4512d8:	b	451608 <print_property+0x510>
  4512dc:	ldur	x0, [x29, #-24]
  4512e0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  4512e4:	add	x1, x1, #0x52
  4512e8:	bl	40aa20 <strcmp@plt>
  4512ec:	cbnz	w0, 451368 <print_property+0x270>
  4512f0:	ldur	x0, [x29, #-32]
  4512f4:	add	x8, sp, #0x70
  4512f8:	mov	x1, x8
  4512fc:	mov	x9, #0x100                 	// #256
  451300:	mov	x2, x9
  451304:	str	x8, [sp, #72]
  451308:	str	x9, [sp, #64]
  45130c:	bl	40ba70 <blkid_safe_string@plt>
  451310:	ldur	x8, [x29, #-8]
  451314:	ldurb	w10, [x29, #-9]
  451318:	mov	x0, x8
  45131c:	and	w1, w10, #0x1
  451320:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451324:	add	x2, x2, #0xcc0
  451328:	ldr	x3, [sp, #72]
  45132c:	bl	43eae8 <udev_builtin_add_property>
  451330:	ldur	x8, [x29, #-32]
  451334:	mov	x0, x8
  451338:	ldr	x1, [sp, #72]
  45133c:	ldr	x2, [sp, #64]
  451340:	bl	40ba80 <blkid_encode_string@plt>
  451344:	ldur	x8, [x29, #-8]
  451348:	ldurb	w10, [x29, #-9]
  45134c:	mov	x0, x8
  451350:	and	w1, w10, #0x1
  451354:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451358:	add	x2, x2, #0xccc
  45135c:	ldr	x3, [sp, #72]
  451360:	bl	43eae8 <udev_builtin_add_property>
  451364:	b	451608 <print_property+0x510>
  451368:	ldur	x0, [x29, #-24]
  45136c:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451370:	add	x1, x1, #0xc0d
  451374:	bl	40aa20 <strcmp@plt>
  451378:	cbnz	w0, 45139c <print_property+0x2a4>
  45137c:	ldur	x0, [x29, #-8]
  451380:	ldurb	w8, [x29, #-9]
  451384:	ldur	x3, [x29, #-32]
  451388:	and	w1, w8, #0x1
  45138c:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451390:	add	x2, x2, #0xcdc
  451394:	bl	43eae8 <udev_builtin_add_property>
  451398:	b	451608 <print_property+0x510>
  45139c:	ldur	x0, [x29, #-24]
  4513a0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4513a4:	add	x1, x1, #0xcef
  4513a8:	bl	40aa20 <strcmp@plt>
  4513ac:	cbnz	w0, 4513d0 <print_property+0x2d8>
  4513b0:	ldur	x0, [x29, #-8]
  4513b4:	ldurb	w8, [x29, #-9]
  4513b8:	ldur	x3, [x29, #-32]
  4513bc:	and	w1, w8, #0x1
  4513c0:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4513c4:	add	x2, x2, #0xcf6
  4513c8:	bl	43eae8 <udev_builtin_add_property>
  4513cc:	b	451608 <print_property+0x510>
  4513d0:	ldur	x0, [x29, #-24]
  4513d4:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4513d8:	add	x1, x1, #0xd09
  4513dc:	bl	40aa20 <strcmp@plt>
  4513e0:	cbnz	w0, 451420 <print_property+0x328>
  4513e4:	ldur	x0, [x29, #-32]
  4513e8:	add	x8, sp, #0x70
  4513ec:	mov	x1, x8
  4513f0:	mov	x2, #0x100                 	// #256
  4513f4:	str	x8, [sp, #56]
  4513f8:	bl	40ba80 <blkid_encode_string@plt>
  4513fc:	ldur	x8, [x29, #-8]
  451400:	ldurb	w9, [x29, #-9]
  451404:	mov	x0, x8
  451408:	and	w1, w9, #0x1
  45140c:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451410:	add	x2, x2, #0xd19
  451414:	ldr	x3, [sp, #56]
  451418:	bl	43eae8 <udev_builtin_add_property>
  45141c:	b	451608 <print_property+0x510>
  451420:	ldur	x0, [x29, #-24]
  451424:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451428:	add	x1, x1, #0xd2c
  45142c:	bl	40aa20 <strcmp@plt>
  451430:	cbnz	w0, 451470 <print_property+0x378>
  451434:	ldur	x0, [x29, #-32]
  451438:	add	x8, sp, #0x70
  45143c:	mov	x1, x8
  451440:	mov	x2, #0x100                 	// #256
  451444:	str	x8, [sp, #48]
  451448:	bl	40ba80 <blkid_encode_string@plt>
  45144c:	ldur	x8, [x29, #-8]
  451450:	ldurb	w9, [x29, #-9]
  451454:	mov	x0, x8
  451458:	and	w1, w9, #0x1
  45145c:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451460:	add	x2, x2, #0xd3c
  451464:	ldr	x3, [sp, #48]
  451468:	bl	43eae8 <udev_builtin_add_property>
  45146c:	b	451608 <print_property+0x510>
  451470:	ldur	x0, [x29, #-24]
  451474:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451478:	add	x1, x1, #0xd4f
  45147c:	bl	4519b4 <startswith>
  451480:	cbz	x0, 4514cc <print_property+0x3d4>
  451484:	ldur	x3, [x29, #-24]
  451488:	add	x8, sp, #0x70
  45148c:	mov	x0, x8
  451490:	mov	x1, #0x100                 	// #256
  451494:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451498:	add	x2, x2, #0xd5b
  45149c:	mov	x9, xzr
  4514a0:	mov	x4, x9
  4514a4:	str	x8, [sp, #40]
  4514a8:	bl	40b400 <strscpyl@plt>
  4514ac:	ldur	x8, [x29, #-8]
  4514b0:	ldurb	w10, [x29, #-9]
  4514b4:	ldur	x3, [x29, #-32]
  4514b8:	mov	x0, x8
  4514bc:	and	w1, w10, #0x1
  4514c0:	ldr	x2, [sp, #40]
  4514c4:	bl	43eae8 <udev_builtin_add_property>
  4514c8:	b	451608 <print_property+0x510>
  4514cc:	ldur	x0, [x29, #-24]
  4514d0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4514d4:	add	x1, x1, #0xd5f
  4514d8:	bl	40aa20 <strcmp@plt>
  4514dc:	cbnz	w0, 45151c <print_property+0x424>
  4514e0:	ldur	x0, [x29, #-32]
  4514e4:	add	x8, sp, #0x70
  4514e8:	mov	x1, x8
  4514ec:	mov	x2, #0x100                 	// #256
  4514f0:	str	x8, [sp, #32]
  4514f4:	bl	40ba80 <blkid_encode_string@plt>
  4514f8:	ldur	x8, [x29, #-8]
  4514fc:	ldurb	w9, [x29, #-9]
  451500:	mov	x0, x8
  451504:	and	w1, w9, #0x1
  451508:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  45150c:	add	x2, x2, #0xd69
  451510:	ldr	x3, [sp, #32]
  451514:	bl	43eae8 <udev_builtin_add_property>
  451518:	b	451608 <print_property+0x510>
  45151c:	ldur	x0, [x29, #-24]
  451520:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451524:	add	x1, x1, #0xd79
  451528:	bl	40aa20 <strcmp@plt>
  45152c:	cbnz	w0, 45156c <print_property+0x474>
  451530:	ldur	x0, [x29, #-32]
  451534:	add	x8, sp, #0x70
  451538:	mov	x1, x8
  45153c:	mov	x2, #0x100                 	// #256
  451540:	str	x8, [sp, #24]
  451544:	bl	40ba80 <blkid_encode_string@plt>
  451548:	ldur	x8, [x29, #-8]
  45154c:	ldurb	w9, [x29, #-9]
  451550:	mov	x0, x8
  451554:	and	w1, w9, #0x1
  451558:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  45155c:	add	x2, x2, #0xd86
  451560:	ldr	x3, [sp, #24]
  451564:	bl	43eae8 <udev_builtin_add_property>
  451568:	b	451608 <print_property+0x510>
  45156c:	ldur	x0, [x29, #-24]
  451570:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451574:	add	x1, x1, #0xd99
  451578:	bl	40aa20 <strcmp@plt>
  45157c:	cbnz	w0, 4515bc <print_property+0x4c4>
  451580:	ldur	x0, [x29, #-32]
  451584:	add	x8, sp, #0x70
  451588:	mov	x1, x8
  45158c:	mov	x2, #0x100                 	// #256
  451590:	str	x8, [sp, #16]
  451594:	bl	40ba80 <blkid_encode_string@plt>
  451598:	ldur	x8, [x29, #-8]
  45159c:	ldurb	w9, [x29, #-9]
  4515a0:	mov	x0, x8
  4515a4:	and	w1, w9, #0x1
  4515a8:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4515ac:	add	x2, x2, #0xda8
  4515b0:	ldr	x3, [sp, #16]
  4515b4:	bl	43eae8 <udev_builtin_add_property>
  4515b8:	b	451608 <print_property+0x510>
  4515bc:	ldur	x0, [x29, #-24]
  4515c0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4515c4:	add	x1, x1, #0xdbd
  4515c8:	bl	40aa20 <strcmp@plt>
  4515cc:	cbnz	w0, 451608 <print_property+0x510>
  4515d0:	ldur	x0, [x29, #-32]
  4515d4:	add	x8, sp, #0x70
  4515d8:	mov	x1, x8
  4515dc:	mov	x2, #0x100                 	// #256
  4515e0:	str	x8, [sp, #8]
  4515e4:	bl	40ba80 <blkid_encode_string@plt>
  4515e8:	ldur	x8, [x29, #-8]
  4515ec:	ldurb	w9, [x29, #-9]
  4515f0:	mov	x0, x8
  4515f4:	and	w1, w9, #0x1
  4515f8:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  4515fc:	add	x2, x2, #0xdcc
  451600:	ldr	x3, [sp, #8]
  451604:	bl	43eae8 <udev_builtin_add_property>
  451608:	ldr	x28, [sp, #416]
  45160c:	ldp	x29, x30, [sp, #400]
  451610:	add	sp, sp, #0x1b0
  451614:	ret

0000000000451618 <find_gpt_root>:
  451618:	sub	sp, sp, #0xd0
  45161c:	stp	x29, x30, [sp, #192]
  451620:	add	x29, sp, #0xc0
  451624:	mov	x8, xzr
  451628:	mov	w9, #0x0                   	// #0
  45162c:	mov	w10, #0x1                   	// #1
  451630:	adrp	x11, 46e000 <on_inotify.__assert_in_set+0xa540>
  451634:	add	x11, x11, #0xaa6
  451638:	add	x11, x11, #0x3
  45163c:	stur	x0, [x29, #-16]
  451640:	stur	x1, [x29, #-24]
  451644:	and	w10, w2, w10
  451648:	sturb	w10, [x29, #-25]
  45164c:	stur	x8, [x29, #-40]
  451650:	sturb	w9, [x29, #-41]
  451654:	str	x11, [sp]
  451658:	ldur	x8, [x29, #-24]
  45165c:	cmp	x8, #0x0
  451660:	cset	w9, ne  // ne = any
  451664:	mov	w10, #0x1                   	// #1
  451668:	eor	w9, w9, #0x1
  45166c:	eor	w9, w9, w10
  451670:	eor	w9, w9, w10
  451674:	and	w9, w9, #0x1
  451678:	mov	w0, w9
  45167c:	sxtw	x8, w0
  451680:	cbz	x8, 4516a4 <find_gpt_root+0x8c>
  451684:	mov	w0, #0x1                   	// #1
  451688:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45168c:	add	x1, x1, #0xde1
  451690:	ldr	x2, [sp]
  451694:	mov	w3, #0x6a                  	// #106
  451698:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  45169c:	add	x4, x4, #0xde4
  4516a0:	bl	40a540 <log_assert_failed_realm@plt>
  4516a4:	bl	40a480 <__errno_location@plt>
  4516a8:	str	wzr, [x0]
  4516ac:	ldur	x0, [x29, #-24]
  4516b0:	bl	40ba90 <blkid_probe_get_partitions@plt>
  4516b4:	stur	x0, [x29, #-56]
  4516b8:	ldur	x8, [x29, #-56]
  4516bc:	cbnz	x8, 4516d8 <find_gpt_root+0xc0>
  4516c0:	mov	w0, #0xc                   	// #12
  4516c4:	bl	451a3c <errno_or_else>
  4516c8:	stur	w0, [x29, #-4]
  4516cc:	mov	w8, #0x1                   	// #1
  4516d0:	stur	w8, [x29, #-72]
  4516d4:	b	45199c <find_gpt_root+0x384>
  4516d8:	ldur	x0, [x29, #-56]
  4516dc:	bl	40baa0 <blkid_partlist_numof_partitions@plt>
  4516e0:	stur	w0, [x29, #-64]
  4516e4:	stur	wzr, [x29, #-60]
  4516e8:	ldur	w8, [x29, #-60]
  4516ec:	ldur	w9, [x29, #-64]
  4516f0:	cmp	w8, w9
  4516f4:	b.ge	451960 <find_gpt_root+0x348>  // b.tcont
  4516f8:	ldur	x0, [x29, #-56]
  4516fc:	ldur	w1, [x29, #-60]
  451700:	bl	40bab0 <blkid_partlist_get_partition@plt>
  451704:	stur	x0, [x29, #-80]
  451708:	ldur	x8, [x29, #-80]
  45170c:	cbnz	x8, 451714 <find_gpt_root+0xfc>
  451710:	b	451950 <find_gpt_root+0x338>
  451714:	ldur	x0, [x29, #-80]
  451718:	bl	40bac0 <blkid_partition_get_uuid@plt>
  45171c:	str	x0, [sp, #96]
  451720:	ldr	x8, [sp, #96]
  451724:	cbnz	x8, 45172c <find_gpt_root+0x114>
  451728:	b	451950 <find_gpt_root+0x338>
  45172c:	ldur	x0, [x29, #-80]
  451730:	bl	40bad0 <blkid_partition_get_type_string@plt>
  451734:	stur	x0, [x29, #-88]
  451738:	ldur	x8, [x29, #-88]
  45173c:	cbnz	x8, 451744 <find_gpt_root+0x12c>
  451740:	b	451950 <find_gpt_root+0x338>
  451744:	ldur	x0, [x29, #-88]
  451748:	add	x1, sp, #0x50
  45174c:	bl	40bae0 <sd_id128_from_string@plt>
  451750:	cmp	w0, #0x0
  451754:	cset	w8, ge  // ge = tcont
  451758:	tbnz	w8, #0, 451760 <find_gpt_root+0x148>
  45175c:	b	451950 <find_gpt_root+0x338>
  451760:	add	x8, sp, #0x40
  451764:	mov	w9, #0xc1                  	// #193
  451768:	strb	w9, [sp, #64]
  45176c:	mov	w9, #0x2a                  	// #42
  451770:	strb	w9, [x8, #1]
  451774:	mov	w9, #0x73                  	// #115
  451778:	strb	w9, [x8, #2]
  45177c:	mov	w9, #0x28                  	// #40
  451780:	strb	w9, [x8, #3]
  451784:	mov	w9, #0xf8                  	// #248
  451788:	strb	w9, [x8, #4]
  45178c:	mov	w9, #0x1f                  	// #31
  451790:	strb	w9, [x8, #5]
  451794:	mov	w9, #0x11                  	// #17
  451798:	strb	w9, [x8, #6]
  45179c:	mov	w9, #0xd2                  	// #210
  4517a0:	strb	w9, [x8, #7]
  4517a4:	mov	w9, #0xba                  	// #186
  4517a8:	strb	w9, [x8, #8]
  4517ac:	mov	w9, #0x4b                  	// #75
  4517b0:	strb	w9, [x8, #9]
  4517b4:	mov	w9, #0x0                   	// #0
  4517b8:	strb	w9, [x8, #10]
  4517bc:	mov	w9, #0xa0                  	// #160
  4517c0:	strb	w9, [x8, #11]
  4517c4:	mov	w9, #0xc9                  	// #201
  4517c8:	strb	w9, [x8, #12]
  4517cc:	mov	w10, #0x3e                  	// #62
  4517d0:	strb	w10, [x8, #13]
  4517d4:	strb	w9, [x8, #14]
  4517d8:	mov	w9, #0x3b                  	// #59
  4517dc:	strb	w9, [x8, #15]
  4517e0:	ldr	x0, [sp, #80]
  4517e4:	ldr	x1, [sp, #88]
  4517e8:	ldr	x2, [sp, #64]
  4517ec:	ldr	x3, [sp, #72]
  4517f0:	bl	451a9c <sd_id128_equal>
  4517f4:	cbz	w0, 451868 <find_gpt_root+0x250>
  4517f8:	ldr	x0, [sp, #96]
  4517fc:	add	x1, sp, #0x30
  451800:	bl	40bae0 <sd_id128_from_string@plt>
  451804:	cmp	w0, #0x0
  451808:	cset	w8, ge  // ge = tcont
  45180c:	tbnz	w8, #0, 451814 <find_gpt_root+0x1fc>
  451810:	b	451950 <find_gpt_root+0x338>
  451814:	add	x0, sp, #0x20
  451818:	bl	40baf0 <efi_loader_get_device_part_uuid@plt>
  45181c:	stur	w0, [x29, #-68]
  451820:	ldur	w8, [x29, #-68]
  451824:	cmp	w8, #0x0
  451828:	cset	w8, ge  // ge = tcont
  45182c:	tbnz	w8, #0, 451844 <find_gpt_root+0x22c>
  451830:	ldur	w8, [x29, #-68]
  451834:	stur	w8, [x29, #-4]
  451838:	mov	w8, #0x1                   	// #1
  45183c:	stur	w8, [x29, #-72]
  451840:	b	45199c <find_gpt_root+0x384>
  451844:	ldr	x0, [sp, #48]
  451848:	ldr	x1, [sp, #56]
  45184c:	ldr	x2, [sp, #32]
  451850:	ldr	x3, [sp, #40]
  451854:	bl	451a9c <sd_id128_equal>
  451858:	cbz	w0, 451864 <find_gpt_root+0x24c>
  45185c:	mov	w8, #0x1                   	// #1
  451860:	sturb	w8, [x29, #-41]
  451864:	b	451950 <find_gpt_root+0x338>
  451868:	add	x8, sp, #0x10
  45186c:	mov	w9, #0xb9                  	// #185
  451870:	strb	w9, [sp, #16]
  451874:	mov	w9, #0x21                  	// #33
  451878:	strb	w9, [x8, #1]
  45187c:	mov	w9, #0xb0                  	// #176
  451880:	strb	w9, [x8, #2]
  451884:	mov	w9, #0x45                  	// #69
  451888:	strb	w9, [x8, #3]
  45188c:	mov	w9, #0x1d                  	// #29
  451890:	strb	w9, [x8, #4]
  451894:	mov	w9, #0xf0                  	// #240
  451898:	strb	w9, [x8, #5]
  45189c:	mov	w9, #0x41                  	// #65
  4518a0:	strb	w9, [x8, #6]
  4518a4:	mov	w9, #0xc3                  	// #195
  4518a8:	strb	w9, [x8, #7]
  4518ac:	mov	w9, #0xaf                  	// #175
  4518b0:	strb	w9, [x8, #8]
  4518b4:	mov	w9, #0x44                  	// #68
  4518b8:	strb	w9, [x8, #9]
  4518bc:	mov	w9, #0x4c                  	// #76
  4518c0:	strb	w9, [x8, #10]
  4518c4:	mov	w9, #0x6f                  	// #111
  4518c8:	strb	w9, [x8, #11]
  4518cc:	mov	w9, #0x28                  	// #40
  4518d0:	strb	w9, [x8, #12]
  4518d4:	mov	w9, #0xd                   	// #13
  4518d8:	strb	w9, [x8, #13]
  4518dc:	mov	w9, #0x3f                  	// #63
  4518e0:	strb	w9, [x8, #14]
  4518e4:	mov	w9, #0xae                  	// #174
  4518e8:	strb	w9, [x8, #15]
  4518ec:	ldr	x0, [sp, #80]
  4518f0:	ldr	x1, [sp, #88]
  4518f4:	ldr	x2, [sp, #16]
  4518f8:	ldr	x3, [sp, #24]
  4518fc:	bl	451a9c <sd_id128_equal>
  451900:	cbz	w0, 451950 <find_gpt_root+0x338>
  451904:	ldur	x0, [x29, #-80]
  451908:	bl	40bb00 <blkid_partition_get_flags@plt>
  45190c:	str	x0, [sp, #8]
  451910:	ldr	x8, [sp, #8]
  451914:	and	x8, x8, #0x8000000000000000
  451918:	cbz	x8, 451920 <find_gpt_root+0x308>
  45191c:	b	451950 <find_gpt_root+0x338>
  451920:	ldur	x8, [x29, #-40]
  451924:	cbnz	x8, 451950 <find_gpt_root+0x338>
  451928:	ldr	x0, [sp, #96]
  45192c:	bl	40a910 <strdup@plt>
  451930:	stur	x0, [x29, #-40]
  451934:	ldur	x8, [x29, #-40]
  451938:	cbnz	x8, 451950 <find_gpt_root+0x338>
  45193c:	mov	w8, #0xfffffff4            	// #-12
  451940:	stur	w8, [x29, #-4]
  451944:	mov	w8, #0x1                   	// #1
  451948:	stur	w8, [x29, #-72]
  45194c:	b	45199c <find_gpt_root+0x384>
  451950:	ldur	w8, [x29, #-60]
  451954:	add	w8, w8, #0x1
  451958:	stur	w8, [x29, #-60]
  45195c:	b	4516e8 <find_gpt_root+0xd0>
  451960:	ldurb	w8, [x29, #-41]
  451964:	tbnz	w8, #0, 45196c <find_gpt_root+0x354>
  451968:	b	451990 <find_gpt_root+0x378>
  45196c:	ldur	x8, [x29, #-40]
  451970:	cbz	x8, 451990 <find_gpt_root+0x378>
  451974:	ldur	x0, [x29, #-16]
  451978:	ldurb	w8, [x29, #-25]
  45197c:	ldur	x3, [x29, #-40]
  451980:	and	w1, w8, #0x1
  451984:	adrp	x2, 46e000 <on_inotify.__assert_in_set+0xa540>
  451988:	add	x2, x2, #0xbc8
  45198c:	bl	43eae8 <udev_builtin_add_property>
  451990:	stur	wzr, [x29, #-4]
  451994:	mov	w8, #0x1                   	// #1
  451998:	stur	w8, [x29, #-72]
  45199c:	sub	x0, x29, #0x28
  4519a0:	bl	451a14 <freep>
  4519a4:	ldur	w0, [x29, #-4]
  4519a8:	ldp	x29, x30, [sp, #192]
  4519ac:	add	sp, sp, #0xd0
  4519b0:	ret

00000000004519b4 <startswith>:
  4519b4:	sub	sp, sp, #0x30
  4519b8:	stp	x29, x30, [sp, #32]
  4519bc:	add	x29, sp, #0x20
  4519c0:	str	x0, [sp, #16]
  4519c4:	str	x1, [sp, #8]
  4519c8:	ldr	x0, [sp, #8]
  4519cc:	bl	40a800 <strlen@plt>
  4519d0:	str	x0, [sp]
  4519d4:	ldr	x0, [sp, #16]
  4519d8:	ldr	x1, [sp, #8]
  4519dc:	ldr	x2, [sp]
  4519e0:	bl	40a810 <strncmp@plt>
  4519e4:	cbnz	w0, 4519fc <startswith+0x48>
  4519e8:	ldr	x8, [sp, #16]
  4519ec:	ldr	x9, [sp]
  4519f0:	add	x8, x8, x9
  4519f4:	stur	x8, [x29, #-8]
  4519f8:	b	451a04 <startswith+0x50>
  4519fc:	mov	x8, xzr
  451a00:	stur	x8, [x29, #-8]
  451a04:	ldur	x0, [x29, #-8]
  451a08:	ldp	x29, x30, [sp, #32]
  451a0c:	add	sp, sp, #0x30
  451a10:	ret

0000000000451a14 <freep>:
  451a14:	sub	sp, sp, #0x20
  451a18:	stp	x29, x30, [sp, #16]
  451a1c:	add	x29, sp, #0x10
  451a20:	str	x0, [sp, #8]
  451a24:	ldr	x8, [sp, #8]
  451a28:	ldr	x0, [x8]
  451a2c:	bl	40a530 <free@plt>
  451a30:	ldp	x29, x30, [sp, #16]
  451a34:	add	sp, sp, #0x20
  451a38:	ret

0000000000451a3c <errno_or_else>:
  451a3c:	sub	sp, sp, #0x20
  451a40:	stp	x29, x30, [sp, #16]
  451a44:	add	x29, sp, #0x10
  451a48:	str	w0, [sp, #8]
  451a4c:	bl	40a480 <__errno_location@plt>
  451a50:	ldr	w8, [x0]
  451a54:	cmp	w8, #0x0
  451a58:	cset	w8, le
  451a5c:	tbnz	w8, #0, 451a78 <errno_or_else+0x3c>
  451a60:	bl	40a480 <__errno_location@plt>
  451a64:	ldr	w8, [x0]
  451a68:	mov	w9, wzr
  451a6c:	subs	w8, w9, w8
  451a70:	stur	w8, [x29, #-4]
  451a74:	b	451a8c <errno_or_else+0x50>
  451a78:	ldr	w0, [sp, #8]
  451a7c:	bl	40a410 <abs@plt>
  451a80:	mov	w8, wzr
  451a84:	subs	w8, w8, w0
  451a88:	stur	w8, [x29, #-4]
  451a8c:	ldur	w0, [x29, #-4]
  451a90:	ldp	x29, x30, [sp, #16]
  451a94:	add	sp, sp, #0x20
  451a98:	ret

0000000000451a9c <sd_id128_equal>:
  451a9c:	sub	sp, sp, #0x30
  451aa0:	stp	x29, x30, [sp, #32]
  451aa4:	add	x29, sp, #0x20
  451aa8:	mov	x8, #0x10                  	// #16
  451aac:	add	x9, sp, #0x10
  451ab0:	mov	x10, sp
  451ab4:	str	x0, [sp, #16]
  451ab8:	str	x1, [sp, #24]
  451abc:	str	x2, [sp]
  451ac0:	str	x3, [sp, #8]
  451ac4:	mov	x0, x9
  451ac8:	mov	x1, x10
  451acc:	mov	x2, x8
  451ad0:	bl	40b6b0 <memcmp@plt>
  451ad4:	cmp	w0, #0x0
  451ad8:	cset	w11, eq  // eq = none
  451adc:	and	w0, w11, #0x1
  451ae0:	ldp	x29, x30, [sp, #32]
  451ae4:	add	sp, sp, #0x30
  451ae8:	ret

0000000000451aec <builtin_uaccess>:
  451aec:	sub	sp, sp, #0x130
  451af0:	stp	x29, x30, [sp, #272]
  451af4:	str	x28, [sp, #288]
  451af8:	add	x29, sp, #0x110
  451afc:	sub	x8, x29, #0x38
  451b00:	mov	x9, xzr
  451b04:	mov	w10, #0x0                   	// #0
  451b08:	mov	w11, #0x12                  	// #18
  451b0c:	mov	w12, #0x1                   	// #1
  451b10:	adrp	x13, 464000 <on_inotify.__assert_in_set+0x540>
  451b14:	add	x13, x13, #0xa46
  451b18:	adrp	x14, 46e000 <on_inotify.__assert_in_set+0xa540>
  451b1c:	add	x14, x14, #0xe3b
  451b20:	add	x14, x14, #0x3
  451b24:	adrp	x15, 46e000 <on_inotify.__assert_in_set+0xa540>
  451b28:	add	x15, x15, #0xe5e
  451b2c:	str	x0, [x8, #40]
  451b30:	stur	w1, [x29, #-20]
  451b34:	str	x2, [x8, #24]
  451b38:	and	w12, w3, w12
  451b3c:	sturb	w12, [x29, #-33]
  451b40:	str	x9, [x8, #8]
  451b44:	sturb	w10, [x29, #-57]
  451b48:	mov	w0, w11
  451b4c:	str	x8, [sp, #64]
  451b50:	str	x13, [sp, #56]
  451b54:	str	x14, [sp, #48]
  451b58:	str	x15, [sp, #40]
  451b5c:	bl	40a490 <umask@plt>
  451b60:	bl	452054 <logind_running>
  451b64:	tbnz	w0, #0, 451b70 <builtin_uaccess+0x84>
  451b68:	stur	wzr, [x29, #-4]
  451b6c:	b	452040 <builtin_uaccess+0x554>
  451b70:	ldr	x8, [sp, #64]
  451b74:	ldr	x0, [x8, #40]
  451b78:	sub	x1, x29, #0x30
  451b7c:	bl	40a930 <sd_device_get_devname@plt>
  451b80:	stur	w0, [x29, #-68]
  451b84:	ldur	w9, [x29, #-68]
  451b88:	cmp	w9, #0x0
  451b8c:	cset	w9, ge  // ge = tcont
  451b90:	tbnz	w9, #0, 451c50 <builtin_uaccess+0x164>
  451b94:	mov	x8, xzr
  451b98:	stur	x8, [x29, #-80]
  451b9c:	ldr	x8, [sp, #64]
  451ba0:	ldr	x9, [x8, #40]
  451ba4:	stur	x9, [x29, #-88]
  451ba8:	mov	w10, #0x3                   	// #3
  451bac:	stur	w10, [x29, #-92]
  451bb0:	ldur	w10, [x29, #-68]
  451bb4:	stur	w10, [x29, #-96]
  451bb8:	ldur	x9, [x29, #-88]
  451bbc:	cbz	x9, 451bfc <builtin_uaccess+0x110>
  451bc0:	mov	w0, #0x1                   	// #1
  451bc4:	bl	40a3f0 <log_get_max_level_realm@plt>
  451bc8:	ldur	w8, [x29, #-92]
  451bcc:	cmp	w0, w8
  451bd0:	cset	w8, ge  // ge = tcont
  451bd4:	mov	w9, #0x1                   	// #1
  451bd8:	eor	w8, w8, #0x1
  451bdc:	eor	w8, w8, w9
  451be0:	and	w8, w8, #0x1
  451be4:	mov	w1, w8
  451be8:	sxtw	x10, w1
  451bec:	cbz	x10, 451bfc <builtin_uaccess+0x110>
  451bf0:	ldur	x0, [x29, #-88]
  451bf4:	sub	x1, x29, #0x50
  451bf8:	bl	40a860 <sd_device_get_sysname@plt>
  451bfc:	ldur	w0, [x29, #-92]
  451c00:	ldur	w1, [x29, #-96]
  451c04:	ldur	x8, [x29, #-80]
  451c08:	mov	x9, xzr
  451c0c:	cmp	x8, #0x0
  451c10:	ldr	x8, [sp, #56]
  451c14:	csel	x5, x8, x9, ne  // ne = any
  451c18:	ldur	x6, [x29, #-80]
  451c1c:	ldr	x2, [sp, #48]
  451c20:	mov	w3, #0x21                  	// #33
  451c24:	ldr	x4, [sp, #40]
  451c28:	mov	x7, x9
  451c2c:	mov	x10, sp
  451c30:	str	x9, [x10]
  451c34:	mov	x9, sp
  451c38:	adrp	x10, 469000 <on_inotify.__assert_in_set+0x5540>
  451c3c:	add	x10, x10, #0x121
  451c40:	str	x10, [x9, #8]
  451c44:	bl	40a870 <log_object_internal@plt>
  451c48:	stur	w0, [x29, #-100]
  451c4c:	b	451f00 <builtin_uaccess+0x414>
  451c50:	ldr	x8, [sp, #64]
  451c54:	ldr	x0, [x8, #40]
  451c58:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  451c5c:	add	x1, x1, #0xe6e
  451c60:	sub	x2, x29, #0x38
  451c64:	bl	40aa40 <sd_device_get_property_value@plt>
  451c68:	cmp	w0, #0x0
  451c6c:	cset	w9, ge  // ge = tcont
  451c70:	tbnz	w9, #0, 451c84 <builtin_uaccess+0x198>
  451c74:	adrp	x8, 46e000 <on_inotify.__assert_in_set+0xa540>
  451c78:	add	x8, x8, #0xe76
  451c7c:	ldr	x9, [sp, #64]
  451c80:	str	x8, [x9]
  451c84:	ldr	x8, [sp, #64]
  451c88:	ldr	x0, [x8]
  451c8c:	mov	x9, xzr
  451c90:	mov	x1, x9
  451c94:	sub	x2, x29, #0x40
  451c98:	bl	455f6c <sd_seat_get_active>
  451c9c:	stur	w0, [x29, #-68]
  451ca0:	ldur	w10, [x29, #-68]
  451ca4:	cmp	w10, #0x0
  451ca8:	cset	w10, ge  // ge = tcont
  451cac:	tbnz	w10, #0, 451de4 <builtin_uaccess+0x2f8>
  451cb0:	mov	w8, #0x0                   	// #0
  451cb4:	sturb	w8, [x29, #-101]
  451cb8:	ldur	w8, [x29, #-68]
  451cbc:	mov	w9, #0xffffffc3            	// #-61
  451cc0:	cmp	w8, w9
  451cc4:	str	w8, [sp, #36]
  451cc8:	b.eq	451cec <builtin_uaccess+0x200>  // b.none
  451ccc:	b	451cd0 <builtin_uaccess+0x1e4>
  451cd0:	mov	w8, #0xfffffffa            	// #-6
  451cd4:	ldr	w9, [sp, #36]
  451cd8:	cmp	w9, w8
  451cdc:	cset	w8, eq  // eq = none
  451ce0:	eor	w8, w8, #0x1
  451ce4:	tbnz	w8, #0, 451cf8 <builtin_uaccess+0x20c>
  451ce8:	b	451cec <builtin_uaccess+0x200>
  451cec:	mov	w8, #0x1                   	// #1
  451cf0:	sturb	w8, [x29, #-101]
  451cf4:	b	451cf8 <builtin_uaccess+0x20c>
  451cf8:	ldurb	w8, [x29, #-101]
  451cfc:	and	w8, w8, #0x1
  451d00:	sturb	w8, [x29, #-102]
  451d04:	ldurb	w8, [x29, #-102]
  451d08:	tbnz	w8, #0, 451d10 <builtin_uaccess+0x224>
  451d0c:	b	451d18 <builtin_uaccess+0x22c>
  451d10:	stur	wzr, [x29, #-68]
  451d14:	b	451de0 <builtin_uaccess+0x2f4>
  451d18:	mov	x8, xzr
  451d1c:	stur	x8, [x29, #-112]
  451d20:	ldr	x8, [sp, #64]
  451d24:	ldr	x9, [x8, #40]
  451d28:	stur	x9, [x29, #-120]
  451d2c:	mov	w10, #0x3                   	// #3
  451d30:	stur	w10, [x29, #-124]
  451d34:	ldur	w10, [x29, #-68]
  451d38:	stur	w10, [x29, #-128]
  451d3c:	ldur	x9, [x29, #-120]
  451d40:	cbz	x9, 451d80 <builtin_uaccess+0x294>
  451d44:	mov	w0, #0x1                   	// #1
  451d48:	bl	40a3f0 <log_get_max_level_realm@plt>
  451d4c:	ldur	w8, [x29, #-124]
  451d50:	cmp	w0, w8
  451d54:	cset	w8, ge  // ge = tcont
  451d58:	mov	w9, #0x1                   	// #1
  451d5c:	eor	w8, w8, #0x1
  451d60:	eor	w8, w8, w9
  451d64:	and	w8, w8, #0x1
  451d68:	mov	w1, w8
  451d6c:	sxtw	x10, w1
  451d70:	cbz	x10, 451d80 <builtin_uaccess+0x294>
  451d74:	ldur	x0, [x29, #-120]
  451d78:	sub	x1, x29, #0x70
  451d7c:	bl	40a860 <sd_device_get_sysname@plt>
  451d80:	ldur	w0, [x29, #-124]
  451d84:	ldur	w1, [x29, #-128]
  451d88:	ldur	x8, [x29, #-112]
  451d8c:	mov	x9, xzr
  451d90:	cmp	x8, #0x0
  451d94:	ldr	x8, [sp, #56]
  451d98:	csel	x5, x8, x9, ne  // ne = any
  451d9c:	ldur	x6, [x29, #-112]
  451da0:	ldr	x10, [sp, #64]
  451da4:	ldr	x11, [x10]
  451da8:	ldr	x2, [sp, #48]
  451dac:	mov	w3, #0x2e                  	// #46
  451db0:	ldr	x4, [sp, #40]
  451db4:	mov	x7, x9
  451db8:	mov	x12, sp
  451dbc:	str	x9, [x12]
  451dc0:	mov	x9, sp
  451dc4:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  451dc8:	add	x12, x12, #0xe7c
  451dcc:	str	x12, [x9, #8]
  451dd0:	mov	x9, sp
  451dd4:	str	x11, [x9, #16]
  451dd8:	bl	40a870 <log_object_internal@plt>
  451ddc:	stur	w0, [x29, #-132]
  451de0:	b	451f00 <builtin_uaccess+0x414>
  451de4:	ldr	x8, [sp, #64]
  451de8:	ldr	x0, [x8, #8]
  451dec:	ldur	w5, [x29, #-64]
  451df0:	mov	w9, #0x1                   	// #1
  451df4:	and	w1, w9, #0x1
  451df8:	mov	w10, wzr
  451dfc:	and	w2, w10, #0x1
  451e00:	mov	w10, wzr
  451e04:	mov	w3, w10
  451e08:	and	w4, w9, #0x1
  451e0c:	bl	452084 <devnode_acl>
  451e10:	stur	w0, [x29, #-68]
  451e14:	ldur	w9, [x29, #-68]
  451e18:	cmp	w9, #0x0
  451e1c:	cset	w9, ge  // ge = tcont
  451e20:	tbnz	w9, #0, 451ef4 <builtin_uaccess+0x408>
  451e24:	mov	x8, xzr
  451e28:	str	x8, [sp, #128]
  451e2c:	ldr	x8, [sp, #64]
  451e30:	ldr	x9, [x8, #40]
  451e34:	str	x9, [sp, #120]
  451e38:	ldur	w10, [x29, #-68]
  451e3c:	mov	w11, #0xfffffffe            	// #-2
  451e40:	mov	w12, #0x3                   	// #3
  451e44:	mov	w13, #0x7                   	// #7
  451e48:	cmp	w10, w11
  451e4c:	csel	w10, w13, w12, eq  // eq = none
  451e50:	str	w10, [sp, #116]
  451e54:	ldur	w10, [x29, #-68]
  451e58:	str	w10, [sp, #112]
  451e5c:	ldr	x9, [sp, #120]
  451e60:	cbz	x9, 451ea0 <builtin_uaccess+0x3b4>
  451e64:	mov	w0, #0x1                   	// #1
  451e68:	bl	40a3f0 <log_get_max_level_realm@plt>
  451e6c:	ldr	w8, [sp, #116]
  451e70:	cmp	w0, w8
  451e74:	cset	w8, ge  // ge = tcont
  451e78:	mov	w9, #0x1                   	// #1
  451e7c:	eor	w8, w8, #0x1
  451e80:	eor	w8, w8, w9
  451e84:	and	w8, w8, #0x1
  451e88:	mov	w1, w8
  451e8c:	sxtw	x10, w1
  451e90:	cbz	x10, 451ea0 <builtin_uaccess+0x3b4>
  451e94:	ldr	x0, [sp, #120]
  451e98:	add	x1, sp, #0x80
  451e9c:	bl	40a860 <sd_device_get_sysname@plt>
  451ea0:	ldr	w0, [sp, #116]
  451ea4:	ldr	w1, [sp, #112]
  451ea8:	ldr	x8, [sp, #128]
  451eac:	mov	x9, xzr
  451eb0:	cmp	x8, #0x0
  451eb4:	ldr	x8, [sp, #56]
  451eb8:	csel	x5, x8, x9, ne  // ne = any
  451ebc:	ldr	x6, [sp, #128]
  451ec0:	ldr	x2, [sp, #48]
  451ec4:	mov	w3, #0x35                  	// #53
  451ec8:	ldr	x4, [sp, #40]
  451ecc:	mov	x7, x9
  451ed0:	mov	x10, sp
  451ed4:	str	x9, [x10]
  451ed8:	mov	x9, sp
  451edc:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  451ee0:	add	x10, x10, #0xeab
  451ee4:	str	x10, [x9, #8]
  451ee8:	bl	40a870 <log_object_internal@plt>
  451eec:	str	w0, [sp, #108]
  451ef0:	b	451f00 <builtin_uaccess+0x414>
  451ef4:	mov	w8, #0x1                   	// #1
  451ef8:	sturb	w8, [x29, #-57]
  451efc:	stur	wzr, [x29, #-68]
  451f00:	ldr	x8, [sp, #64]
  451f04:	ldr	x9, [x8, #8]
  451f08:	cbz	x9, 452038 <builtin_uaccess+0x54c>
  451f0c:	ldurb	w8, [x29, #-57]
  451f10:	tbnz	w8, #0, 452038 <builtin_uaccess+0x54c>
  451f14:	ldr	x8, [sp, #64]
  451f18:	ldr	x0, [x8, #8]
  451f1c:	mov	w9, #0x1                   	// #1
  451f20:	and	w1, w9, #0x1
  451f24:	mov	w9, wzr
  451f28:	and	w2, w9, #0x1
  451f2c:	mov	w10, wzr
  451f30:	mov	w3, w10
  451f34:	and	w4, w9, #0x1
  451f38:	mov	w5, w10
  451f3c:	bl	452084 <devnode_acl>
  451f40:	str	w0, [sp, #104]
  451f44:	ldr	w9, [sp, #104]
  451f48:	cmp	w9, #0x0
  451f4c:	cset	w9, ge  // ge = tcont
  451f50:	tbnz	w9, #0, 452038 <builtin_uaccess+0x54c>
  451f54:	mov	x8, xzr
  451f58:	str	x8, [sp, #96]
  451f5c:	ldr	x8, [sp, #64]
  451f60:	ldr	x9, [x8, #40]
  451f64:	str	x9, [sp, #88]
  451f68:	ldr	w10, [sp, #104]
  451f6c:	mov	w11, #0xfffffffe            	// #-2
  451f70:	mov	w12, #0x3                   	// #3
  451f74:	mov	w13, #0x7                   	// #7
  451f78:	cmp	w10, w11
  451f7c:	csel	w10, w13, w12, eq  // eq = none
  451f80:	str	w10, [sp, #84]
  451f84:	ldr	w10, [sp, #104]
  451f88:	str	w10, [sp, #80]
  451f8c:	ldr	x9, [sp, #88]
  451f90:	cbz	x9, 451fd0 <builtin_uaccess+0x4e4>
  451f94:	mov	w0, #0x1                   	// #1
  451f98:	bl	40a3f0 <log_get_max_level_realm@plt>
  451f9c:	ldr	w8, [sp, #84]
  451fa0:	cmp	w0, w8
  451fa4:	cset	w8, ge  // ge = tcont
  451fa8:	mov	w9, #0x1                   	// #1
  451fac:	eor	w8, w8, #0x1
  451fb0:	eor	w8, w8, w9
  451fb4:	and	w8, w8, #0x1
  451fb8:	mov	w1, w8
  451fbc:	sxtw	x10, w1
  451fc0:	cbz	x10, 451fd0 <builtin_uaccess+0x4e4>
  451fc4:	ldr	x0, [sp, #88]
  451fc8:	add	x1, sp, #0x60
  451fcc:	bl	40a860 <sd_device_get_sysname@plt>
  451fd0:	ldr	w0, [sp, #84]
  451fd4:	ldr	w1, [sp, #80]
  451fd8:	ldr	x8, [sp, #96]
  451fdc:	mov	x9, xzr
  451fe0:	cmp	x8, #0x0
  451fe4:	ldr	x8, [sp, #56]
  451fe8:	csel	x5, x8, x9, ne  // ne = any
  451fec:	ldr	x6, [sp, #96]
  451ff0:	ldr	x2, [sp, #48]
  451ff4:	mov	w3, #0x43                  	// #67
  451ff8:	ldr	x4, [sp, #40]
  451ffc:	mov	x7, x9
  452000:	mov	x10, sp
  452004:	str	x9, [x10]
  452008:	mov	x9, sp
  45200c:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  452010:	add	x10, x10, #0xeab
  452014:	str	x10, [x9, #8]
  452018:	bl	40a870 <log_object_internal@plt>
  45201c:	str	w0, [sp, #76]
  452020:	ldur	w11, [x29, #-68]
  452024:	cmp	w11, #0x0
  452028:	cset	w11, lt  // lt = tstop
  45202c:	tbnz	w11, #0, 452038 <builtin_uaccess+0x54c>
  452030:	ldr	w8, [sp, #104]
  452034:	stur	w8, [x29, #-68]
  452038:	ldur	w8, [x29, #-68]
  45203c:	stur	w8, [x29, #-4]
  452040:	ldur	w0, [x29, #-4]
  452044:	ldr	x28, [sp, #288]
  452048:	ldp	x29, x30, [sp, #272]
  45204c:	add	sp, sp, #0x130
  452050:	ret

0000000000452054 <logind_running>:
  452054:	stp	x29, x30, [sp, #-16]!
  452058:	mov	x29, sp
  45205c:	adrp	x0, 46e000 <on_inotify.__assert_in_set+0xa540>
  452060:	add	x0, x0, #0xec3
  452064:	mov	w8, wzr
  452068:	mov	w1, w8
  45206c:	bl	40bb10 <access@plt>
  452070:	cmp	w0, #0x0
  452074:	cset	w8, ge  // ge = tcont
  452078:	and	w0, w8, #0x1
  45207c:	ldp	x29, x30, [sp], #16
  452080:	ret

0000000000452084 <devnode_acl>:
  452084:	sub	sp, sp, #0x70
  452088:	stp	x29, x30, [sp, #96]
  45208c:	add	x29, sp, #0x60
  452090:	mov	w8, #0x0                   	// #0
  452094:	mov	w9, #0x1                   	// #1
  452098:	adrp	x10, 46e000 <on_inotify.__assert_in_set+0xa540>
  45209c:	add	x10, x10, #0xed7
  4520a0:	add	x10, x10, #0x3
  4520a4:	stur	x0, [x29, #-16]
  4520a8:	and	w11, w1, w9
  4520ac:	sturb	w11, [x29, #-17]
  4520b0:	and	w11, w2, w9
  4520b4:	sturb	w11, [x29, #-18]
  4520b8:	stur	w3, [x29, #-24]
  4520bc:	and	w9, w4, w9
  4520c0:	sturb	w9, [x29, #-25]
  4520c4:	stur	w5, [x29, #-32]
  4520c8:	stur	wzr, [x29, #-44]
  4520cc:	sturb	w8, [x29, #-45]
  4520d0:	str	x10, [sp, #8]
  4520d4:	ldur	x8, [x29, #-16]
  4520d8:	cmp	x8, #0x0
  4520dc:	cset	w9, ne  // ne = any
  4520e0:	mov	w10, #0x1                   	// #1
  4520e4:	eor	w9, w9, #0x1
  4520e8:	eor	w9, w9, w10
  4520ec:	eor	w9, w9, w10
  4520f0:	and	w9, w9, #0x1
  4520f4:	mov	w0, w9
  4520f8:	sxtw	x8, w0
  4520fc:	cbz	x8, 452120 <devnode_acl+0x9c>
  452100:	mov	w0, #0x1                   	// #1
  452104:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  452108:	add	x1, x1, #0x54a
  45210c:	ldr	x2, [sp, #8]
  452110:	mov	w3, #0x3b                  	// #59
  452114:	adrp	x4, 46e000 <on_inotify.__assert_in_set+0xa540>
  452118:	add	x4, x4, #0xef1
  45211c:	bl	40a540 <log_assert_failed_realm@plt>
  452120:	ldur	x0, [x29, #-16]
  452124:	mov	w1, #0x8000                	// #32768
  452128:	bl	40bb20 <acl_get_file@plt>
  45212c:	stur	x0, [x29, #-40]
  452130:	ldur	x8, [x29, #-40]
  452134:	cbnz	x8, 452150 <devnode_acl+0xcc>
  452138:	bl	40a480 <__errno_location@plt>
  45213c:	ldr	w8, [x0]
  452140:	mov	w9, wzr
  452144:	subs	w8, w9, w8
  452148:	stur	w8, [x29, #-4]
  45214c:	b	452450 <devnode_acl+0x3cc>
  452150:	ldurb	w8, [x29, #-17]
  452154:	tbnz	w8, #0, 45215c <devnode_acl+0xd8>
  452158:	b	452198 <devnode_acl+0x114>
  45215c:	ldur	x0, [x29, #-40]
  452160:	bl	452460 <flush_acl>
  452164:	stur	w0, [x29, #-44]
  452168:	ldur	w8, [x29, #-44]
  45216c:	cmp	w8, #0x0
  452170:	cset	w8, ge  // ge = tcont
  452174:	tbnz	w8, #0, 45217c <devnode_acl+0xf8>
  452178:	b	452440 <devnode_acl+0x3bc>
  45217c:	ldur	w8, [x29, #-44]
  452180:	cmp	w8, #0x0
  452184:	cset	w8, le
  452188:	tbnz	w8, #0, 452194 <devnode_acl+0x110>
  45218c:	mov	w8, #0x1                   	// #1
  452190:	sturb	w8, [x29, #-45]
  452194:	b	452224 <devnode_acl+0x1a0>
  452198:	ldurb	w8, [x29, #-18]
  45219c:	tbnz	w8, #0, 4521a4 <devnode_acl+0x120>
  4521a0:	b	452224 <devnode_acl+0x1a0>
  4521a4:	ldur	w8, [x29, #-24]
  4521a8:	cmp	w8, #0x0
  4521ac:	cset	w8, ls  // ls = plast
  4521b0:	tbnz	w8, #0, 452224 <devnode_acl+0x1a0>
  4521b4:	ldur	x0, [x29, #-40]
  4521b8:	ldur	w1, [x29, #-24]
  4521bc:	add	x2, sp, #0x28
  4521c0:	bl	40bb30 <acl_find_uid@plt>
  4521c4:	stur	w0, [x29, #-44]
  4521c8:	ldur	w8, [x29, #-44]
  4521cc:	cmp	w8, #0x0
  4521d0:	cset	w8, ge  // ge = tcont
  4521d4:	tbnz	w8, #0, 4521dc <devnode_acl+0x158>
  4521d8:	b	452440 <devnode_acl+0x3bc>
  4521dc:	ldur	w8, [x29, #-44]
  4521e0:	cmp	w8, #0x0
  4521e4:	cset	w8, le
  4521e8:	tbnz	w8, #0, 452224 <devnode_acl+0x1a0>
  4521ec:	ldur	x0, [x29, #-40]
  4521f0:	ldr	x1, [sp, #40]
  4521f4:	bl	40bb40 <acl_delete_entry@plt>
  4521f8:	cmp	w0, #0x0
  4521fc:	cset	w8, ge  // ge = tcont
  452200:	tbnz	w8, #0, 45221c <devnode_acl+0x198>
  452204:	bl	40a480 <__errno_location@plt>
  452208:	ldr	w8, [x0]
  45220c:	mov	w9, wzr
  452210:	subs	w8, w9, w8
  452214:	stur	w8, [x29, #-44]
  452218:	b	452440 <devnode_acl+0x3bc>
  45221c:	mov	w8, #0x1                   	// #1
  452220:	sturb	w8, [x29, #-45]
  452224:	ldurb	w8, [x29, #-25]
  452228:	tbnz	w8, #0, 452230 <devnode_acl+0x1ac>
  45222c:	b	4523d0 <devnode_acl+0x34c>
  452230:	ldur	w8, [x29, #-32]
  452234:	cmp	w8, #0x0
  452238:	cset	w8, ls  // ls = plast
  45223c:	tbnz	w8, #0, 4523d0 <devnode_acl+0x34c>
  452240:	ldur	x0, [x29, #-40]
  452244:	ldur	w1, [x29, #-32]
  452248:	add	x2, sp, #0x20
  45224c:	bl	40bb30 <acl_find_uid@plt>
  452250:	stur	w0, [x29, #-44]
  452254:	ldur	w8, [x29, #-44]
  452258:	cmp	w8, #0x0
  45225c:	cset	w8, ge  // ge = tcont
  452260:	tbnz	w8, #0, 452268 <devnode_acl+0x1e4>
  452264:	b	452440 <devnode_acl+0x3bc>
  452268:	ldur	w8, [x29, #-44]
  45226c:	cbnz	w8, 4522e8 <devnode_acl+0x264>
  452270:	sub	x0, x29, #0x28
  452274:	add	x1, sp, #0x20
  452278:	bl	40bb50 <acl_create_entry@plt>
  45227c:	cmp	w0, #0x0
  452280:	cset	w8, ge  // ge = tcont
  452284:	tbnz	w8, #0, 4522a0 <devnode_acl+0x21c>
  452288:	bl	40a480 <__errno_location@plt>
  45228c:	ldr	w8, [x0]
  452290:	mov	w9, wzr
  452294:	subs	w8, w9, w8
  452298:	stur	w8, [x29, #-44]
  45229c:	b	452440 <devnode_acl+0x3bc>
  4522a0:	ldr	x0, [sp, #32]
  4522a4:	mov	w1, #0x2                   	// #2
  4522a8:	bl	40bb60 <acl_set_tag_type@plt>
  4522ac:	cmp	w0, #0x0
  4522b0:	cset	w8, lt  // lt = tstop
  4522b4:	tbnz	w8, #0, 4522d0 <devnode_acl+0x24c>
  4522b8:	ldr	x0, [sp, #32]
  4522bc:	sub	x1, x29, #0x20
  4522c0:	bl	40bb70 <acl_set_qualifier@plt>
  4522c4:	cmp	w0, #0x0
  4522c8:	cset	w8, ge  // ge = tcont
  4522cc:	tbnz	w8, #0, 4522e8 <devnode_acl+0x264>
  4522d0:	bl	40a480 <__errno_location@plt>
  4522d4:	ldr	w8, [x0]
  4522d8:	mov	w9, wzr
  4522dc:	subs	w8, w9, w8
  4522e0:	stur	w8, [x29, #-44]
  4522e4:	b	452440 <devnode_acl+0x3bc>
  4522e8:	ldr	x0, [sp, #32]
  4522ec:	add	x1, sp, #0x18
  4522f0:	bl	40bb80 <acl_get_permset@plt>
  4522f4:	cmp	w0, #0x0
  4522f8:	cset	w8, ge  // ge = tcont
  4522fc:	tbnz	w8, #0, 452318 <devnode_acl+0x294>
  452300:	bl	40a480 <__errno_location@plt>
  452304:	ldr	w8, [x0]
  452308:	mov	w9, wzr
  45230c:	subs	w8, w9, w8
  452310:	stur	w8, [x29, #-44]
  452314:	b	452440 <devnode_acl+0x3bc>
  452318:	ldr	x0, [sp, #24]
  45231c:	mov	w1, #0x4                   	// #4
  452320:	bl	40bb90 <acl_get_perm@plt>
  452324:	str	w0, [sp, #20]
  452328:	ldr	w8, [sp, #20]
  45232c:	cmp	w8, #0x0
  452330:	cset	w8, ge  // ge = tcont
  452334:	tbnz	w8, #0, 452350 <devnode_acl+0x2cc>
  452338:	bl	40a480 <__errno_location@plt>
  45233c:	ldr	w8, [x0]
  452340:	mov	w9, wzr
  452344:	subs	w8, w9, w8
  452348:	stur	w8, [x29, #-44]
  45234c:	b	452440 <devnode_acl+0x3bc>
  452350:	ldr	x0, [sp, #24]
  452354:	mov	w1, #0x2                   	// #2
  452358:	bl	40bb90 <acl_get_perm@plt>
  45235c:	str	w0, [sp, #16]
  452360:	ldr	w8, [sp, #16]
  452364:	cmp	w8, #0x0
  452368:	cset	w8, ge  // ge = tcont
  45236c:	tbnz	w8, #0, 452388 <devnode_acl+0x304>
  452370:	bl	40a480 <__errno_location@plt>
  452374:	ldr	w8, [x0]
  452378:	mov	w9, wzr
  45237c:	subs	w8, w9, w8
  452380:	stur	w8, [x29, #-44]
  452384:	b	452440 <devnode_acl+0x3bc>
  452388:	ldr	w8, [sp, #20]
  45238c:	cbz	w8, 452398 <devnode_acl+0x314>
  452390:	ldr	w8, [sp, #16]
  452394:	cbnz	w8, 4523d0 <devnode_acl+0x34c>
  452398:	ldr	x0, [sp, #24]
  45239c:	mov	w1, #0x6                   	// #6
  4523a0:	bl	40bba0 <acl_add_perm@plt>
  4523a4:	cmp	w0, #0x0
  4523a8:	cset	w8, ge  // ge = tcont
  4523ac:	tbnz	w8, #0, 4523c8 <devnode_acl+0x344>
  4523b0:	bl	40a480 <__errno_location@plt>
  4523b4:	ldr	w8, [x0]
  4523b8:	mov	w9, wzr
  4523bc:	subs	w8, w9, w8
  4523c0:	stur	w8, [x29, #-44]
  4523c4:	b	452440 <devnode_acl+0x3bc>
  4523c8:	mov	w8, #0x1                   	// #1
  4523cc:	sturb	w8, [x29, #-45]
  4523d0:	ldurb	w8, [x29, #-45]
  4523d4:	tbnz	w8, #0, 4523dc <devnode_acl+0x358>
  4523d8:	b	452440 <devnode_acl+0x3bc>
  4523dc:	sub	x0, x29, #0x28
  4523e0:	bl	40bbb0 <acl_calc_mask@plt>
  4523e4:	cmp	w0, #0x0
  4523e8:	cset	w8, ge  // ge = tcont
  4523ec:	tbnz	w8, #0, 452408 <devnode_acl+0x384>
  4523f0:	bl	40a480 <__errno_location@plt>
  4523f4:	ldr	w8, [x0]
  4523f8:	mov	w9, wzr
  4523fc:	subs	w8, w9, w8
  452400:	stur	w8, [x29, #-44]
  452404:	b	452440 <devnode_acl+0x3bc>
  452408:	ldur	x0, [x29, #-16]
  45240c:	ldur	x2, [x29, #-40]
  452410:	mov	w1, #0x8000                	// #32768
  452414:	bl	40bbc0 <acl_set_file@plt>
  452418:	cmp	w0, #0x0
  45241c:	cset	w8, ge  // ge = tcont
  452420:	tbnz	w8, #0, 45243c <devnode_acl+0x3b8>
  452424:	bl	40a480 <__errno_location@plt>
  452428:	ldr	w8, [x0]
  45242c:	mov	w9, wzr
  452430:	subs	w8, w9, w8
  452434:	stur	w8, [x29, #-44]
  452438:	b	452440 <devnode_acl+0x3bc>
  45243c:	stur	wzr, [x29, #-44]
  452440:	ldur	x0, [x29, #-40]
  452444:	bl	40bbd0 <acl_free@plt>
  452448:	ldur	w8, [x29, #-44]
  45244c:	stur	w8, [x29, #-4]
  452450:	ldur	w0, [x29, #-4]
  452454:	ldp	x29, x30, [sp, #96]
  452458:	add	sp, sp, #0x70
  45245c:	ret

0000000000452460 <flush_acl>:
  452460:	sub	sp, sp, #0x40
  452464:	stp	x29, x30, [sp, #48]
  452468:	add	x29, sp, #0x30
  45246c:	mov	w8, #0x0                   	// #0
  452470:	adrp	x9, 46e000 <on_inotify.__assert_in_set+0xa540>
  452474:	add	x9, x9, #0xed7
  452478:	add	x2, x9, #0x3
  45247c:	stur	x0, [x29, #-16]
  452480:	strb	w8, [sp, #19]
  452484:	str	x2, [sp]
  452488:	ldur	x8, [x29, #-16]
  45248c:	cmp	x8, #0x0
  452490:	cset	w9, ne  // ne = any
  452494:	mov	w10, #0x1                   	// #1
  452498:	eor	w9, w9, #0x1
  45249c:	eor	w9, w9, w10
  4524a0:	eor	w9, w9, w10
  4524a4:	and	w9, w9, #0x1
  4524a8:	mov	w0, w9
  4524ac:	sxtw	x8, w0
  4524b0:	cbz	x8, 4524d4 <flush_acl+0x74>
  4524b4:	mov	w0, #0x1                   	// #1
  4524b8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4524bc:	add	x1, x1, #0xa
  4524c0:	ldr	x2, [sp]
  4524c4:	mov	w3, #0x18                  	// #24
  4524c8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4524cc:	add	x4, x4, #0xe
  4524d0:	bl	40a540 <log_assert_failed_realm@plt>
  4524d4:	ldur	x0, [x29, #-16]
  4524d8:	mov	w8, wzr
  4524dc:	mov	w1, w8
  4524e0:	add	x2, sp, #0x18
  4524e4:	bl	40bbe0 <acl_get_entry@plt>
  4524e8:	str	w0, [sp, #20]
  4524ec:	ldr	w8, [sp, #20]
  4524f0:	cmp	w8, #0x0
  4524f4:	cset	w8, le
  4524f8:	tbnz	w8, #0, 45258c <flush_acl+0x12c>
  4524fc:	ldr	x0, [sp, #24]
  452500:	add	x1, sp, #0xc
  452504:	bl	40bbf0 <acl_get_tag_type@plt>
  452508:	cmp	w0, #0x0
  45250c:	cset	w8, ge  // ge = tcont
  452510:	tbnz	w8, #0, 45252c <flush_acl+0xcc>
  452514:	bl	40a480 <__errno_location@plt>
  452518:	ldr	w8, [x0]
  45251c:	mov	w9, wzr
  452520:	subs	w8, w9, w8
  452524:	stur	w8, [x29, #-4]
  452528:	b	4525c0 <flush_acl+0x160>
  45252c:	ldr	w8, [sp, #12]
  452530:	cmp	w8, #0x2
  452534:	b.eq	45253c <flush_acl+0xdc>  // b.none
  452538:	b	452574 <flush_acl+0x114>
  45253c:	ldur	x0, [x29, #-16]
  452540:	ldr	x1, [sp, #24]
  452544:	bl	40bb40 <acl_delete_entry@plt>
  452548:	cmp	w0, #0x0
  45254c:	cset	w8, ge  // ge = tcont
  452550:	tbnz	w8, #0, 45256c <flush_acl+0x10c>
  452554:	bl	40a480 <__errno_location@plt>
  452558:	ldr	w8, [x0]
  45255c:	mov	w9, wzr
  452560:	subs	w8, w9, w8
  452564:	stur	w8, [x29, #-4]
  452568:	b	4525c0 <flush_acl+0x160>
  45256c:	mov	w8, #0x1                   	// #1
  452570:	strb	w8, [sp, #19]
  452574:	ldur	x0, [x29, #-16]
  452578:	mov	w1, #0x1                   	// #1
  45257c:	add	x2, sp, #0x18
  452580:	bl	40bbe0 <acl_get_entry@plt>
  452584:	str	w0, [sp, #20]
  452588:	b	4524ec <flush_acl+0x8c>
  45258c:	ldr	w8, [sp, #20]
  452590:	cmp	w8, #0x0
  452594:	cset	w8, ge  // ge = tcont
  452598:	tbnz	w8, #0, 4525b4 <flush_acl+0x154>
  45259c:	bl	40a480 <__errno_location@plt>
  4525a0:	ldr	w8, [x0]
  4525a4:	mov	w9, wzr
  4525a8:	subs	w8, w9, w8
  4525ac:	stur	w8, [x29, #-4]
  4525b0:	b	4525c0 <flush_acl+0x160>
  4525b4:	ldrb	w8, [sp, #19]
  4525b8:	and	w8, w8, #0x1
  4525bc:	stur	w8, [x29, #-4]
  4525c0:	ldur	w0, [x29, #-4]
  4525c4:	ldp	x29, x30, [sp, #48]
  4525c8:	add	sp, sp, #0x40
  4525cc:	ret

00000000004525d0 <devnode_acl_all>:
  4525d0:	sub	sp, sp, #0x160
  4525d4:	stp	x29, x30, [sp, #320]
  4525d8:	str	x28, [sp, #336]
  4525dc:	add	x29, sp, #0x140
  4525e0:	sub	x8, x29, #0x68
  4525e4:	mov	x9, xzr
  4525e8:	adrp	x10, 49f000 <_DYNAMIC+0x1d0>
  4525ec:	ldr	x10, [x10, #232]
  4525f0:	mov	w11, #0x1                   	// #1
  4525f4:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  4525f8:	add	x12, x12, #0xed7
  4525fc:	add	x12, x12, #0x3
  452600:	adrp	x13, 46e000 <on_inotify.__assert_in_set+0xa540>
  452604:	add	x13, x13, #0xf32
  452608:	str	x0, [x8, #88]
  45260c:	and	w14, w1, w11
  452610:	sturb	w14, [x29, #-17]
  452614:	and	w14, w2, w11
  452618:	sturb	w14, [x29, #-18]
  45261c:	stur	w3, [x29, #-24]
  452620:	and	w11, w4, w11
  452624:	sturb	w11, [x29, #-25]
  452628:	stur	w5, [x29, #-32]
  45262c:	str	x9, [x8, #64]
  452630:	str	x9, [x8, #56]
  452634:	str	x9, [x8, #48]
  452638:	mov	x0, x10
  45263c:	str	x8, [sp, #72]
  452640:	str	x12, [sp, #64]
  452644:	str	x13, [sp, #56]
  452648:	bl	40bc00 <internal_set_new@plt>
  45264c:	ldr	x8, [sp, #72]
  452650:	str	x0, [x8, #56]
  452654:	ldr	x9, [x8, #56]
  452658:	cbnz	x9, 452670 <devnode_acl_all+0xa0>
  45265c:	mov	w8, #0xfffffff4            	// #-12
  452660:	stur	w8, [x29, #-4]
  452664:	mov	w8, #0x1                   	// #1
  452668:	stur	w8, [x29, #-112]
  45266c:	b	452d08 <devnode_acl_all+0x738>
  452670:	sub	x0, x29, #0x28
  452674:	bl	40ac20 <sd_device_enumerator_new@plt>
  452678:	stur	w0, [x29, #-108]
  45267c:	ldur	w8, [x29, #-108]
  452680:	cmp	w8, #0x0
  452684:	cset	w8, ge  // ge = tcont
  452688:	tbnz	w8, #0, 4526a0 <devnode_acl_all+0xd0>
  45268c:	ldur	w8, [x29, #-108]
  452690:	stur	w8, [x29, #-4]
  452694:	mov	w8, #0x1                   	// #1
  452698:	stur	w8, [x29, #-112]
  45269c:	b	452d08 <devnode_acl_all+0x738>
  4526a0:	ldr	x8, [sp, #72]
  4526a4:	ldr	x0, [x8, #88]
  4526a8:	bl	452dd0 <isempty>
  4526ac:	tbnz	w0, #0, 4526b4 <devnode_acl_all+0xe4>
  4526b0:	b	4526c4 <devnode_acl_all+0xf4>
  4526b4:	adrp	x8, 46e000 <on_inotify.__assert_in_set+0xa540>
  4526b8:	add	x8, x8, #0xe76
  4526bc:	ldr	x9, [sp, #72]
  4526c0:	str	x8, [x9, #88]
  4526c4:	ldr	x8, [sp, #72]
  4526c8:	ldr	x0, [x8, #64]
  4526cc:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4526d0:	add	x1, x1, #0xe17
  4526d4:	bl	40bc10 <sd_device_enumerator_add_match_tag@plt>
  4526d8:	stur	w0, [x29, #-108]
  4526dc:	ldur	w9, [x29, #-108]
  4526e0:	cmp	w9, #0x0
  4526e4:	cset	w9, ge  // ge = tcont
  4526e8:	tbnz	w9, #0, 452700 <devnode_acl_all+0x130>
  4526ec:	ldur	w8, [x29, #-108]
  4526f0:	stur	w8, [x29, #-4]
  4526f4:	mov	w8, #0x1                   	// #1
  4526f8:	stur	w8, [x29, #-112]
  4526fc:	b	452d08 <devnode_acl_all+0x738>
  452700:	ldr	x8, [sp, #72]
  452704:	ldr	x0, [x8, #64]
  452708:	bl	40ac60 <sd_device_enumerator_get_device_first@plt>
  45270c:	ldr	x8, [sp, #72]
  452710:	str	x0, [x8, #32]
  452714:	ldr	x8, [sp, #72]
  452718:	ldr	x9, [x8, #32]
  45271c:	cbz	x9, 4528bc <devnode_acl_all+0x2ec>
  452720:	ldr	x8, [sp, #72]
  452724:	ldr	x0, [x8, #32]
  452728:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45272c:	add	x1, x1, #0xe6e
  452730:	sub	x2, x29, #0x80
  452734:	bl	40aa40 <sd_device_get_property_value@plt>
  452738:	cmp	w0, #0x0
  45273c:	cset	w9, lt  // lt = tstop
  452740:	tbnz	w9, #0, 452754 <devnode_acl_all+0x184>
  452744:	ldur	x0, [x29, #-128]
  452748:	bl	452dd0 <isempty>
  45274c:	tbnz	w0, #0, 452754 <devnode_acl_all+0x184>
  452750:	b	452760 <devnode_acl_all+0x190>
  452754:	adrp	x8, 46e000 <on_inotify.__assert_in_set+0xa540>
  452758:	add	x8, x8, #0xe76
  45275c:	stur	x8, [x29, #-128]
  452760:	ldr	x8, [sp, #72]
  452764:	ldr	x0, [x8, #88]
  452768:	ldur	x1, [x29, #-128]
  45276c:	bl	40aa20 <strcmp@plt>
  452770:	cbz	w0, 452778 <devnode_acl_all+0x1a8>
  452774:	b	4528a4 <devnode_acl_all+0x2d4>
  452778:	ldr	x8, [sp, #72]
  45277c:	ldr	x0, [x8, #32]
  452780:	sub	x1, x29, #0x78
  452784:	bl	40a930 <sd_device_get_devname@plt>
  452788:	cmp	w0, #0x0
  45278c:	cset	w9, ge  // ge = tcont
  452790:	tbnz	w9, #0, 452798 <devnode_acl_all+0x1c8>
  452794:	b	4528a4 <devnode_acl_all+0x2d4>
  452798:	mov	x8, xzr
  45279c:	stur	x8, [x29, #-136]
  4527a0:	ldr	x8, [sp, #72]
  4527a4:	ldr	x9, [x8, #32]
  4527a8:	stur	x9, [x29, #-144]
  4527ac:	mov	w10, #0x7                   	// #7
  4527b0:	stur	w10, [x29, #-148]
  4527b4:	stur	wzr, [x29, #-152]
  4527b8:	ldur	x9, [x29, #-144]
  4527bc:	cbz	x9, 4527fc <devnode_acl_all+0x22c>
  4527c0:	mov	w0, #0x1                   	// #1
  4527c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4527c8:	ldur	w8, [x29, #-148]
  4527cc:	cmp	w0, w8
  4527d0:	cset	w8, ge  // ge = tcont
  4527d4:	mov	w9, #0x1                   	// #1
  4527d8:	eor	w8, w8, #0x1
  4527dc:	eor	w8, w8, w9
  4527e0:	and	w8, w8, #0x1
  4527e4:	mov	w1, w8
  4527e8:	sxtw	x10, w1
  4527ec:	cbz	x10, 4527fc <devnode_acl_all+0x22c>
  4527f0:	ldur	x0, [x29, #-144]
  4527f4:	sub	x1, x29, #0x88
  4527f8:	bl	40a860 <sd_device_get_sysname@plt>
  4527fc:	ldur	w0, [x29, #-148]
  452800:	ldur	w1, [x29, #-152]
  452804:	ldur	x8, [x29, #-136]
  452808:	mov	x9, xzr
  45280c:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  452810:	add	x10, x10, #0xa46
  452814:	cmp	x8, #0x0
  452818:	csel	x5, x10, x9, ne  // ne = any
  45281c:	ldur	x6, [x29, #-136]
  452820:	ldur	x8, [x29, #-120]
  452824:	ldr	x10, [sp, #72]
  452828:	ldr	x11, [x10, #88]
  45282c:	ldr	x2, [sp, #64]
  452830:	mov	w3, #0xd0                  	// #208
  452834:	ldr	x4, [sp, #56]
  452838:	mov	x7, x9
  45283c:	mov	x12, sp
  452840:	str	x9, [x12]
  452844:	mov	x9, sp
  452848:	adrp	x12, 46e000 <on_inotify.__assert_in_set+0xa540>
  45284c:	add	x12, x12, #0xf42
  452850:	str	x12, [x9, #8]
  452854:	mov	x9, sp
  452858:	str	x8, [x9, #16]
  45285c:	mov	x8, sp
  452860:	str	x11, [x8, #24]
  452864:	bl	40a870 <log_object_internal@plt>
  452868:	stur	w0, [x29, #-156]
  45286c:	ldr	x8, [sp, #72]
  452870:	ldr	x0, [x8, #56]
  452874:	ldur	x1, [x29, #-120]
  452878:	bl	40bc20 <set_put_strdup@plt>
  45287c:	stur	w0, [x29, #-108]
  452880:	ldur	w13, [x29, #-108]
  452884:	cmp	w13, #0x0
  452888:	cset	w13, ge  // ge = tcont
  45288c:	tbnz	w13, #0, 4528a4 <devnode_acl_all+0x2d4>
  452890:	ldur	w8, [x29, #-108]
  452894:	stur	w8, [x29, #-4]
  452898:	mov	w8, #0x1                   	// #1
  45289c:	stur	w8, [x29, #-112]
  4528a0:	b	452d08 <devnode_acl_all+0x738>
  4528a4:	ldr	x8, [sp, #72]
  4528a8:	ldr	x0, [x8, #64]
  4528ac:	bl	40ac70 <sd_device_enumerator_get_device_next@plt>
  4528b0:	ldr	x8, [sp, #72]
  4528b4:	str	x0, [x8, #32]
  4528b8:	b	452714 <devnode_acl_all+0x144>
  4528bc:	adrp	x0, 46e000 <on_inotify.__assert_in_set+0xa540>
  4528c0:	add	x0, x0, #0xf61
  4528c4:	bl	40b1f0 <opendir@plt>
  4528c8:	ldr	x8, [sp, #72]
  4528cc:	str	x0, [x8, #48]
  4528d0:	ldr	x9, [x8, #48]
  4528d4:	cbz	x9, 452af4 <devnode_acl_all+0x524>
  4528d8:	bl	40a480 <__errno_location@plt>
  4528dc:	str	wzr, [x0]
  4528e0:	ldr	x8, [sp, #72]
  4528e4:	ldr	x0, [x8, #48]
  4528e8:	bl	40b200 <readdir64@plt>
  4528ec:	ldr	x8, [sp, #72]
  4528f0:	str	x0, [x8, #40]
  4528f4:	ldr	x8, [sp, #72]
  4528f8:	ldr	x9, [x8, #40]
  4528fc:	cbnz	x9, 452938 <devnode_acl_all+0x368>
  452900:	bl	40a480 <__errno_location@plt>
  452904:	ldr	w8, [x0]
  452908:	cmp	w8, #0x0
  45290c:	cset	w8, le
  452910:	tbnz	w8, #0, 452934 <devnode_acl_all+0x364>
  452914:	bl	40a480 <__errno_location@plt>
  452918:	ldr	w8, [x0]
  45291c:	mov	w9, wzr
  452920:	subs	w8, w9, w8
  452924:	stur	w8, [x29, #-4]
  452928:	mov	w8, #0x1                   	// #1
  45292c:	stur	w8, [x29, #-112]
  452930:	b	452d08 <devnode_acl_all+0x738>
  452934:	b	452af4 <devnode_acl_all+0x524>
  452938:	ldr	x8, [sp, #72]
  45293c:	ldr	x9, [x8, #40]
  452940:	add	x0, x9, #0x13
  452944:	bl	40bc30 <hidden_or_backup_file@plt>
  452948:	tbnz	w0, #0, 452950 <devnode_acl_all+0x380>
  45294c:	b	452954 <devnode_acl_all+0x384>
  452950:	b	452ad4 <devnode_acl_all+0x504>
  452954:	add	x2, sp, #0x98
  452958:	mov	x8, xzr
  45295c:	str	x8, [sp, #152]
  452960:	ldr	x8, [sp, #72]
  452964:	ldr	x9, [x8, #40]
  452968:	add	x0, x9, #0x13
  45296c:	mov	w1, #0x1                   	// #1
  452970:	bl	40bc40 <cunescape@plt>
  452974:	cmp	w0, #0x0
  452978:	cset	w10, ge  // ge = tcont
  45297c:	tbnz	w10, #0, 452994 <devnode_acl_all+0x3c4>
  452980:	mov	w8, #0xfffffff4            	// #-12
  452984:	stur	w8, [x29, #-4]
  452988:	mov	w8, #0x1                   	// #1
  45298c:	stur	w8, [x29, #-112]
  452990:	b	452aac <devnode_acl_all+0x4dc>
  452994:	ldr	x1, [sp, #152]
  452998:	adrp	x0, 466000 <on_inotify.__assert_in_set+0x2540>
  45299c:	add	x0, x0, #0x620
  4529a0:	mov	x8, #0xffffffffffffffff    	// #-1
  4529a4:	mov	x2, x8
  4529a8:	bl	40af50 <path_join_internal@plt>
  4529ac:	ldr	x8, [sp, #72]
  4529b0:	str	x0, [x8]
  4529b4:	ldr	x9, [x8]
  4529b8:	cbnz	x9, 4529d0 <devnode_acl_all+0x400>
  4529bc:	mov	w8, #0xfffffff4            	// #-12
  4529c0:	stur	w8, [x29, #-4]
  4529c4:	mov	w8, #0x1                   	// #1
  4529c8:	stur	w8, [x29, #-112]
  4529cc:	b	452aac <devnode_acl_all+0x4dc>
  4529d0:	mov	w8, #0x7                   	// #7
  4529d4:	str	w8, [sp, #148]
  4529d8:	str	wzr, [sp, #144]
  4529dc:	mov	w8, #0x1                   	// #1
  4529e0:	str	w8, [sp, #140]
  4529e4:	ldr	w0, [sp, #140]
  4529e8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4529ec:	ldr	w8, [sp, #148]
  4529f0:	and	w8, w8, #0x7
  4529f4:	cmp	w0, w8
  4529f8:	b.lt	452a38 <devnode_acl_all+0x468>  // b.tstop
  4529fc:	ldr	w8, [sp, #140]
  452a00:	ldr	w9, [sp, #148]
  452a04:	orr	w0, w9, w8, lsl #10
  452a08:	ldr	w1, [sp, #144]
  452a0c:	ldr	x10, [sp, #72]
  452a10:	ldr	x6, [x10]
  452a14:	ldr	x7, [x10, #88]
  452a18:	ldr	x2, [sp, #64]
  452a1c:	mov	w3, #0xe4                  	// #228
  452a20:	ldr	x4, [sp, #56]
  452a24:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  452a28:	add	x5, x5, #0xf84
  452a2c:	bl	40a400 <log_internal_realm@plt>
  452a30:	str	w0, [sp, #52]
  452a34:	b	452a4c <devnode_acl_all+0x47c>
  452a38:	ldr	w0, [sp, #144]
  452a3c:	bl	40a410 <abs@plt>
  452a40:	mov	w8, wzr
  452a44:	subs	w8, w8, w0, uxtb
  452a48:	str	w8, [sp, #52]
  452a4c:	ldr	w8, [sp, #52]
  452a50:	str	w8, [sp, #136]
  452a54:	ldr	x9, [sp, #72]
  452a58:	ldr	x0, [x9, #56]
  452a5c:	ldr	x1, [x9]
  452a60:	bl	40bc50 <set_consume@plt>
  452a64:	stur	w0, [x29, #-108]
  452a68:	ldur	w8, [x29, #-108]
  452a6c:	mov	w10, #0xffffffef            	// #-17
  452a70:	cmp	w8, w10
  452a74:	b.ne	452a84 <devnode_acl_all+0x4b4>  // b.any
  452a78:	mov	w8, #0x7                   	// #7
  452a7c:	stur	w8, [x29, #-112]
  452a80:	b	452aac <devnode_acl_all+0x4dc>
  452a84:	ldur	w8, [x29, #-108]
  452a88:	cmp	w8, #0x0
  452a8c:	cset	w8, ge  // ge = tcont
  452a90:	tbnz	w8, #0, 452aa8 <devnode_acl_all+0x4d8>
  452a94:	ldur	w8, [x29, #-108]
  452a98:	stur	w8, [x29, #-4]
  452a9c:	mov	w8, #0x1                   	// #1
  452aa0:	stur	w8, [x29, #-112]
  452aa4:	b	452aac <devnode_acl_all+0x4dc>
  452aa8:	stur	wzr, [x29, #-112]
  452aac:	add	x0, sp, #0x98
  452ab0:	bl	452e10 <freep>
  452ab4:	ldur	w8, [x29, #-112]
  452ab8:	str	w8, [sp, #48]
  452abc:	cbz	w8, 452ad4 <devnode_acl_all+0x504>
  452ac0:	b	452ac4 <devnode_acl_all+0x4f4>
  452ac4:	ldr	w8, [sp, #48]
  452ac8:	cmp	w8, #0x7
  452acc:	b.eq	452ad4 <devnode_acl_all+0x504>  // b.none
  452ad0:	b	452d08 <devnode_acl_all+0x738>
  452ad4:	bl	40a480 <__errno_location@plt>
  452ad8:	str	wzr, [x0]
  452adc:	ldr	x8, [sp, #72]
  452ae0:	ldr	x0, [x8, #48]
  452ae4:	bl	40b200 <readdir64@plt>
  452ae8:	ldr	x8, [sp, #72]
  452aec:	str	x0, [x8, #40]
  452af0:	b	4528f4 <devnode_acl_all+0x324>
  452af4:	stur	wzr, [x29, #-108]
  452af8:	add	x8, sp, #0x78
  452afc:	mov	w9, #0xfffffffe            	// #-2
  452b00:	str	w9, [sp, #120]
  452b04:	mov	x10, xzr
  452b08:	str	x10, [x8, #8]
  452b0c:	ldur	q0, [sp, #120]
  452b10:	ldr	x8, [sp, #72]
  452b14:	stur	q0, [x8, #8]
  452b18:	ldr	x8, [sp, #72]
  452b1c:	ldr	x0, [x8, #56]
  452b20:	sub	x1, x29, #0x60
  452b24:	sub	x2, x29, #0x68
  452b28:	bl	40bc60 <set_iterate@plt>
  452b2c:	tbnz	w0, #0, 452b34 <devnode_acl_all+0x564>
  452b30:	b	452cf8 <devnode_acl_all+0x728>
  452b34:	mov	w8, #0x7                   	// #7
  452b38:	str	w8, [sp, #112]
  452b3c:	str	wzr, [sp, #108]
  452b40:	mov	w8, #0x1                   	// #1
  452b44:	str	w8, [sp, #104]
  452b48:	ldr	w0, [sp, #104]
  452b4c:	bl	40a3f0 <log_get_max_level_realm@plt>
  452b50:	ldr	w8, [sp, #112]
  452b54:	and	w8, w8, #0x7
  452b58:	cmp	w0, w8
  452b5c:	b.lt	452bf4 <devnode_acl_all+0x624>  // b.tstop
  452b60:	ldr	w8, [sp, #104]
  452b64:	ldr	w9, [sp, #112]
  452b68:	orr	w0, w9, w8, lsl #10
  452b6c:	ldr	w1, [sp, #108]
  452b70:	ldr	x10, [sp, #72]
  452b74:	ldr	x6, [x10]
  452b78:	ldr	x7, [x10, #88]
  452b7c:	ldur	w8, [x29, #-24]
  452b80:	ldur	w9, [x29, #-32]
  452b84:	ldurb	w11, [x29, #-18]
  452b88:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  452b8c:	add	x12, x12, #0xcbe
  452b90:	adrp	x13, 46e000 <on_inotify.__assert_in_set+0xa540>
  452b94:	add	x13, x13, #0xfd7
  452b98:	tst	w11, #0x1
  452b9c:	csel	x13, x13, x12, ne  // ne = any
  452ba0:	ldurb	w11, [x29, #-25]
  452ba4:	adrp	x14, 46e000 <on_inotify.__assert_in_set+0xa540>
  452ba8:	add	x14, x14, #0xfdc
  452bac:	tst	w11, #0x1
  452bb0:	csel	x12, x14, x12, ne  // ne = any
  452bb4:	ldr	x2, [sp, #64]
  452bb8:	mov	w3, #0xf3                  	// #243
  452bbc:	ldr	x4, [sp, #56]
  452bc0:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  452bc4:	add	x5, x5, #0xfa5
  452bc8:	mov	x14, sp
  452bcc:	str	w8, [x14]
  452bd0:	mov	x14, sp
  452bd4:	str	w9, [x14, #8]
  452bd8:	mov	x14, sp
  452bdc:	str	x13, [x14, #16]
  452be0:	mov	x13, sp
  452be4:	str	x12, [x13, #24]
  452be8:	bl	40a400 <log_internal_realm@plt>
  452bec:	str	w0, [sp, #44]
  452bf0:	b	452c08 <devnode_acl_all+0x638>
  452bf4:	ldr	w0, [sp, #108]
  452bf8:	bl	40a410 <abs@plt>
  452bfc:	mov	w8, wzr
  452c00:	subs	w8, w8, w0, uxtb
  452c04:	str	w8, [sp, #44]
  452c08:	ldr	w8, [sp, #44]
  452c0c:	str	w8, [sp, #100]
  452c10:	ldr	x9, [sp, #72]
  452c14:	ldr	x0, [x9]
  452c18:	ldurb	w8, [x29, #-17]
  452c1c:	ldurb	w10, [x29, #-18]
  452c20:	ldur	w3, [x29, #-24]
  452c24:	ldurb	w11, [x29, #-25]
  452c28:	ldur	w5, [x29, #-32]
  452c2c:	and	w1, w8, #0x1
  452c30:	and	w2, w10, #0x1
  452c34:	and	w4, w11, #0x1
  452c38:	bl	452084 <devnode_acl>
  452c3c:	str	w0, [sp, #116]
  452c40:	ldr	w8, [sp, #116]
  452c44:	mov	w10, #0xfffffffe            	// #-2
  452c48:	cmp	w8, w10
  452c4c:	b.ne	452cd4 <devnode_acl_all+0x704>  // b.any
  452c50:	mov	w8, #0x7                   	// #7
  452c54:	str	w8, [sp, #96]
  452c58:	str	wzr, [sp, #92]
  452c5c:	mov	w8, #0x1                   	// #1
  452c60:	str	w8, [sp, #88]
  452c64:	ldr	w0, [sp, #88]
  452c68:	bl	40a3f0 <log_get_max_level_realm@plt>
  452c6c:	ldr	w8, [sp, #96]
  452c70:	and	w8, w8, #0x7
  452c74:	cmp	w0, w8
  452c78:	b.lt	452cb4 <devnode_acl_all+0x6e4>  // b.tstop
  452c7c:	ldr	w8, [sp, #88]
  452c80:	ldr	w9, [sp, #96]
  452c84:	orr	w0, w9, w8, lsl #10
  452c88:	ldr	w1, [sp, #92]
  452c8c:	ldr	x10, [sp, #72]
  452c90:	ldr	x6, [x10]
  452c94:	ldr	x2, [sp, #64]
  452c98:	mov	w3, #0xf7                  	// #247
  452c9c:	ldr	x4, [sp, #56]
  452ca0:	adrp	x5, 46e000 <on_inotify.__assert_in_set+0xa540>
  452ca4:	add	x5, x5, #0xfe1
  452ca8:	bl	40a400 <log_internal_realm@plt>
  452cac:	str	w0, [sp, #40]
  452cb0:	b	452cc8 <devnode_acl_all+0x6f8>
  452cb4:	ldr	w0, [sp, #92]
  452cb8:	bl	40a410 <abs@plt>
  452cbc:	mov	w8, wzr
  452cc0:	subs	w8, w8, w0, uxtb
  452cc4:	str	w8, [sp, #40]
  452cc8:	ldr	w8, [sp, #40]
  452ccc:	str	w8, [sp, #84]
  452cd0:	b	452cf4 <devnode_acl_all+0x724>
  452cd4:	ldr	w8, [sp, #116]
  452cd8:	cmp	w8, #0x0
  452cdc:	cset	w8, ge  // ge = tcont
  452ce0:	tbnz	w8, #0, 452cf4 <devnode_acl_all+0x724>
  452ce4:	ldur	w8, [x29, #-108]
  452ce8:	cbnz	w8, 452cf4 <devnode_acl_all+0x724>
  452cec:	ldr	w8, [sp, #116]
  452cf0:	stur	w8, [x29, #-108]
  452cf4:	b	452b18 <devnode_acl_all+0x548>
  452cf8:	ldur	w8, [x29, #-108]
  452cfc:	stur	w8, [x29, #-4]
  452d00:	mov	w8, #0x1                   	// #1
  452d04:	stur	w8, [x29, #-112]
  452d08:	sub	x0, x29, #0x38
  452d0c:	bl	452d9c <closedirp>
  452d10:	sub	x0, x29, #0x30
  452d14:	bl	452d68 <set_free_freep>
  452d18:	sub	x0, x29, #0x28
  452d1c:	bl	452d34 <sd_device_enumerator_unrefp>
  452d20:	ldur	w0, [x29, #-4]
  452d24:	ldr	x28, [sp, #336]
  452d28:	ldp	x29, x30, [sp, #320]
  452d2c:	add	sp, sp, #0x160
  452d30:	ret

0000000000452d34 <sd_device_enumerator_unrefp>:
  452d34:	sub	sp, sp, #0x20
  452d38:	stp	x29, x30, [sp, #16]
  452d3c:	add	x29, sp, #0x10
  452d40:	str	x0, [sp, #8]
  452d44:	ldr	x8, [sp, #8]
  452d48:	ldr	x8, [x8]
  452d4c:	cbz	x8, 452d5c <sd_device_enumerator_unrefp+0x28>
  452d50:	ldr	x8, [sp, #8]
  452d54:	ldr	x0, [x8]
  452d58:	bl	40ac90 <sd_device_enumerator_unref@plt>
  452d5c:	ldp	x29, x30, [sp, #16]
  452d60:	add	sp, sp, #0x20
  452d64:	ret

0000000000452d68 <set_free_freep>:
  452d68:	sub	sp, sp, #0x20
  452d6c:	stp	x29, x30, [sp, #16]
  452d70:	add	x29, sp, #0x10
  452d74:	str	x0, [sp, #8]
  452d78:	ldr	x8, [sp, #8]
  452d7c:	ldr	x8, [x8]
  452d80:	cbz	x8, 452d90 <set_free_freep+0x28>
  452d84:	ldr	x8, [sp, #8]
  452d88:	ldr	x0, [x8]
  452d8c:	bl	452e38 <set_free_free>
  452d90:	ldp	x29, x30, [sp, #16]
  452d94:	add	sp, sp, #0x20
  452d98:	ret

0000000000452d9c <closedirp>:
  452d9c:	sub	sp, sp, #0x20
  452da0:	stp	x29, x30, [sp, #16]
  452da4:	add	x29, sp, #0x10
  452da8:	str	x0, [sp, #8]
  452dac:	ldr	x8, [sp, #8]
  452db0:	ldr	x8, [x8]
  452db4:	cbz	x8, 452dc4 <closedirp+0x28>
  452db8:	ldr	x8, [sp, #8]
  452dbc:	ldr	x0, [x8]
  452dc0:	bl	40b230 <closedir@plt>
  452dc4:	ldp	x29, x30, [sp, #16]
  452dc8:	add	sp, sp, #0x20
  452dcc:	ret

0000000000452dd0 <isempty>:
  452dd0:	sub	sp, sp, #0x10
  452dd4:	str	x0, [sp, #8]
  452dd8:	ldr	x8, [sp, #8]
  452ddc:	mov	w9, #0x1                   	// #1
  452de0:	str	w9, [sp, #4]
  452de4:	cbz	x8, 452e00 <isempty+0x30>
  452de8:	ldr	x8, [sp, #8]
  452dec:	ldrb	w9, [x8]
  452df0:	cmp	w9, #0x0
  452df4:	cset	w9, ne  // ne = any
  452df8:	eor	w9, w9, #0x1
  452dfc:	str	w9, [sp, #4]
  452e00:	ldr	w8, [sp, #4]
  452e04:	and	w0, w8, #0x1
  452e08:	add	sp, sp, #0x10
  452e0c:	ret

0000000000452e10 <freep>:
  452e10:	sub	sp, sp, #0x20
  452e14:	stp	x29, x30, [sp, #16]
  452e18:	add	x29, sp, #0x10
  452e1c:	str	x0, [sp, #8]
  452e20:	ldr	x8, [sp, #8]
  452e24:	ldr	x0, [x8]
  452e28:	bl	40a530 <free@plt>
  452e2c:	ldp	x29, x30, [sp, #16]
  452e30:	add	sp, sp, #0x20
  452e34:	ret

0000000000452e38 <set_free_free>:
  452e38:	sub	sp, sp, #0x20
  452e3c:	stp	x29, x30, [sp, #16]
  452e40:	add	x29, sp, #0x10
  452e44:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  452e48:	ldr	x1, [x1, #176]
  452e4c:	mov	x8, xzr
  452e50:	str	x0, [sp, #8]
  452e54:	ldr	x0, [sp, #8]
  452e58:	mov	x2, x8
  452e5c:	bl	40a7b0 <internal_hashmap_free@plt>
  452e60:	ldp	x29, x30, [sp, #16]
  452e64:	add	sp, sp, #0x20
  452e68:	ret

0000000000452e6c <sd_pid_get_session>:
  452e6c:	sub	sp, sp, #0x50
  452e70:	stp	x29, x30, [sp, #64]
  452e74:	add	x29, sp, #0x40
  452e78:	mov	w8, #0x1                   	// #1
  452e7c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  452e80:	add	x9, x9, #0x2c
  452e84:	add	x9, x9, #0x3
  452e88:	mov	w10, #0x0                   	// #0
  452e8c:	stur	w0, [x29, #-8]
  452e90:	stur	x1, [x29, #-16]
  452e94:	stur	w8, [x29, #-28]
  452e98:	str	x9, [sp, #24]
  452e9c:	str	w10, [sp, #20]
  452ea0:	ldur	w8, [x29, #-8]
  452ea4:	cmp	w8, #0x0
  452ea8:	cset	w8, ge  // ge = tcont
  452eac:	mov	w9, #0x1                   	// #1
  452eb0:	eor	w8, w8, #0x1
  452eb4:	eor	w8, w8, w9
  452eb8:	and	w8, w8, #0x1
  452ebc:	mov	w0, w8
  452ec0:	sxtw	x10, w0
  452ec4:	cbz	x10, 452ed4 <sd_pid_get_session+0x68>
  452ec8:	ldur	w8, [x29, #-28]
  452ecc:	tbnz	w8, #0, 452f08 <sd_pid_get_session+0x9c>
  452ed0:	b	452efc <sd_pid_get_session+0x90>
  452ed4:	mov	w0, #0x1                   	// #1
  452ed8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  452edc:	add	x1, x1, #0x23
  452ee0:	ldr	x2, [sp, #24]
  452ee4:	mov	w3, #0x2b                  	// #43
  452ee8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  452eec:	add	x4, x4, #0x52
  452ef0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  452ef4:	ldr	w8, [sp, #20]
  452ef8:	tbnz	w8, #0, 452f08 <sd_pid_get_session+0x9c>
  452efc:	mov	w8, #0xffffffea            	// #-22
  452f00:	stur	w8, [x29, #-4]
  452f04:	b	452ffc <sd_pid_get_session+0x190>
  452f08:	ldur	x8, [x29, #-16]
  452f0c:	cmp	x8, #0x0
  452f10:	cset	w9, ne  // ne = any
  452f14:	mov	w10, #0x1                   	// #1
  452f18:	eor	w9, w9, #0x1
  452f1c:	eor	w9, w9, w10
  452f20:	and	w9, w9, #0x1
  452f24:	mov	w0, w9
  452f28:	sxtw	x8, w0
  452f2c:	cbz	x8, 452f3c <sd_pid_get_session+0xd0>
  452f30:	ldur	w8, [x29, #-28]
  452f34:	tbnz	w8, #0, 452f70 <sd_pid_get_session+0x104>
  452f38:	b	452f64 <sd_pid_get_session+0xf8>
  452f3c:	mov	w0, #0x1                   	// #1
  452f40:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  452f44:	add	x1, x1, #0x69d
  452f48:	ldr	x2, [sp, #24]
  452f4c:	mov	w3, #0x2c                  	// #44
  452f50:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  452f54:	add	x4, x4, #0x52
  452f58:	bl	40ad60 <log_assert_failed_return_realm@plt>
  452f5c:	ldr	w8, [sp, #20]
  452f60:	tbnz	w8, #0, 452f70 <sd_pid_get_session+0x104>
  452f64:	mov	w8, #0xffffffea            	// #-22
  452f68:	stur	w8, [x29, #-4]
  452f6c:	b	452ffc <sd_pid_get_session+0x190>
  452f70:	ldur	w0, [x29, #-8]
  452f74:	ldur	x1, [x29, #-16]
  452f78:	bl	40bc70 <cg_pid_get_session@plt>
  452f7c:	stur	w0, [x29, #-20]
  452f80:	mov	w8, #0x0                   	// #0
  452f84:	sturb	w8, [x29, #-21]
  452f88:	ldur	w8, [x29, #-20]
  452f8c:	mov	w9, #0xffffff85            	// #-123
  452f90:	cmp	w8, w9
  452f94:	str	w8, [sp, #16]
  452f98:	b.eq	452fbc <sd_pid_get_session+0x150>  // b.none
  452f9c:	b	452fa0 <sd_pid_get_session+0x134>
  452fa0:	mov	w8, #0xfffffffa            	// #-6
  452fa4:	ldr	w9, [sp, #16]
  452fa8:	cmp	w9, w8
  452fac:	cset	w8, eq  // eq = none
  452fb0:	eor	w8, w8, #0x1
  452fb4:	tbnz	w8, #0, 452fc8 <sd_pid_get_session+0x15c>
  452fb8:	b	452fbc <sd_pid_get_session+0x150>
  452fbc:	mov	w8, #0x1                   	// #1
  452fc0:	sturb	w8, [x29, #-21]
  452fc4:	b	452fc8 <sd_pid_get_session+0x15c>
  452fc8:	ldurb	w8, [x29, #-21]
  452fcc:	and	w8, w8, #0x1
  452fd0:	sturb	w8, [x29, #-22]
  452fd4:	ldurb	w8, [x29, #-22]
  452fd8:	tbnz	w8, #0, 452fe0 <sd_pid_get_session+0x174>
  452fdc:	b	452fec <sd_pid_get_session+0x180>
  452fe0:	mov	w8, #0xffffffc3            	// #-61
  452fe4:	str	w8, [sp, #12]
  452fe8:	b	452ff4 <sd_pid_get_session+0x188>
  452fec:	ldur	w8, [x29, #-20]
  452ff0:	str	w8, [sp, #12]
  452ff4:	ldr	w8, [sp, #12]
  452ff8:	stur	w8, [x29, #-4]
  452ffc:	ldur	w0, [x29, #-4]
  453000:	ldp	x29, x30, [sp, #64]
  453004:	add	sp, sp, #0x50
  453008:	ret

000000000045300c <sd_pid_get_unit>:
  45300c:	sub	sp, sp, #0x50
  453010:	stp	x29, x30, [sp, #64]
  453014:	add	x29, sp, #0x40
  453018:	mov	w8, #0x1                   	// #1
  45301c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453020:	add	x9, x9, #0x2c
  453024:	add	x9, x9, #0x3
  453028:	mov	w10, #0x0                   	// #0
  45302c:	stur	w0, [x29, #-8]
  453030:	stur	x1, [x29, #-16]
  453034:	stur	w8, [x29, #-28]
  453038:	str	x9, [sp, #24]
  45303c:	str	w10, [sp, #20]
  453040:	ldur	w8, [x29, #-8]
  453044:	cmp	w8, #0x0
  453048:	cset	w8, ge  // ge = tcont
  45304c:	mov	w9, #0x1                   	// #1
  453050:	eor	w8, w8, #0x1
  453054:	eor	w8, w8, w9
  453058:	and	w8, w8, #0x1
  45305c:	mov	w0, w8
  453060:	sxtw	x10, w0
  453064:	cbz	x10, 453074 <sd_pid_get_unit+0x68>
  453068:	ldur	w8, [x29, #-28]
  45306c:	tbnz	w8, #0, 4530a8 <sd_pid_get_unit+0x9c>
  453070:	b	45309c <sd_pid_get_unit+0x90>
  453074:	mov	w0, #0x1                   	// #1
  453078:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45307c:	add	x1, x1, #0x23
  453080:	ldr	x2, [sp, #24]
  453084:	mov	w3, #0x35                  	// #53
  453088:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  45308c:	add	x4, x4, #0x79
  453090:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453094:	ldr	w8, [sp, #20]
  453098:	tbnz	w8, #0, 4530a8 <sd_pid_get_unit+0x9c>
  45309c:	mov	w8, #0xffffffea            	// #-22
  4530a0:	stur	w8, [x29, #-4]
  4530a4:	b	45319c <sd_pid_get_unit+0x190>
  4530a8:	ldur	x8, [x29, #-16]
  4530ac:	cmp	x8, #0x0
  4530b0:	cset	w9, ne  // ne = any
  4530b4:	mov	w10, #0x1                   	// #1
  4530b8:	eor	w9, w9, #0x1
  4530bc:	eor	w9, w9, w10
  4530c0:	and	w9, w9, #0x1
  4530c4:	mov	w0, w9
  4530c8:	sxtw	x8, w0
  4530cc:	cbz	x8, 4530dc <sd_pid_get_unit+0xd0>
  4530d0:	ldur	w8, [x29, #-28]
  4530d4:	tbnz	w8, #0, 453110 <sd_pid_get_unit+0x104>
  4530d8:	b	453104 <sd_pid_get_unit+0xf8>
  4530dc:	mov	w0, #0x1                   	// #1
  4530e0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4530e4:	add	x1, x1, #0x9d
  4530e8:	ldr	x2, [sp, #24]
  4530ec:	mov	w3, #0x36                  	// #54
  4530f0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4530f4:	add	x4, x4, #0x79
  4530f8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4530fc:	ldr	w8, [sp, #20]
  453100:	tbnz	w8, #0, 453110 <sd_pid_get_unit+0x104>
  453104:	mov	w8, #0xffffffea            	// #-22
  453108:	stur	w8, [x29, #-4]
  45310c:	b	45319c <sd_pid_get_unit+0x190>
  453110:	ldur	w0, [x29, #-8]
  453114:	ldur	x1, [x29, #-16]
  453118:	bl	40bc80 <cg_pid_get_unit@plt>
  45311c:	stur	w0, [x29, #-20]
  453120:	mov	w8, #0x0                   	// #0
  453124:	sturb	w8, [x29, #-21]
  453128:	ldur	w8, [x29, #-20]
  45312c:	mov	w9, #0xffffff85            	// #-123
  453130:	cmp	w8, w9
  453134:	str	w8, [sp, #16]
  453138:	b.eq	45315c <sd_pid_get_unit+0x150>  // b.none
  45313c:	b	453140 <sd_pid_get_unit+0x134>
  453140:	mov	w8, #0xfffffffa            	// #-6
  453144:	ldr	w9, [sp, #16]
  453148:	cmp	w9, w8
  45314c:	cset	w8, eq  // eq = none
  453150:	eor	w8, w8, #0x1
  453154:	tbnz	w8, #0, 453168 <sd_pid_get_unit+0x15c>
  453158:	b	45315c <sd_pid_get_unit+0x150>
  45315c:	mov	w8, #0x1                   	// #1
  453160:	sturb	w8, [x29, #-21]
  453164:	b	453168 <sd_pid_get_unit+0x15c>
  453168:	ldurb	w8, [x29, #-21]
  45316c:	and	w8, w8, #0x1
  453170:	sturb	w8, [x29, #-22]
  453174:	ldurb	w8, [x29, #-22]
  453178:	tbnz	w8, #0, 453180 <sd_pid_get_unit+0x174>
  45317c:	b	45318c <sd_pid_get_unit+0x180>
  453180:	mov	w8, #0xffffffc3            	// #-61
  453184:	str	w8, [sp, #12]
  453188:	b	453194 <sd_pid_get_unit+0x188>
  45318c:	ldur	w8, [x29, #-20]
  453190:	str	w8, [sp, #12]
  453194:	ldr	w8, [sp, #12]
  453198:	stur	w8, [x29, #-4]
  45319c:	ldur	w0, [x29, #-4]
  4531a0:	ldp	x29, x30, [sp, #64]
  4531a4:	add	sp, sp, #0x50
  4531a8:	ret

00000000004531ac <sd_pid_get_user_unit>:
  4531ac:	sub	sp, sp, #0x50
  4531b0:	stp	x29, x30, [sp, #64]
  4531b4:	add	x29, sp, #0x40
  4531b8:	mov	w8, #0x1                   	// #1
  4531bc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4531c0:	add	x9, x9, #0x2c
  4531c4:	add	x9, x9, #0x3
  4531c8:	mov	w10, #0x0                   	// #0
  4531cc:	stur	w0, [x29, #-8]
  4531d0:	stur	x1, [x29, #-16]
  4531d4:	stur	w8, [x29, #-28]
  4531d8:	str	x9, [sp, #24]
  4531dc:	str	w10, [sp, #20]
  4531e0:	ldur	w8, [x29, #-8]
  4531e4:	cmp	w8, #0x0
  4531e8:	cset	w8, ge  // ge = tcont
  4531ec:	mov	w9, #0x1                   	// #1
  4531f0:	eor	w8, w8, #0x1
  4531f4:	eor	w8, w8, w9
  4531f8:	and	w8, w8, #0x1
  4531fc:	mov	w0, w8
  453200:	sxtw	x10, w0
  453204:	cbz	x10, 453214 <sd_pid_get_user_unit+0x68>
  453208:	ldur	w8, [x29, #-28]
  45320c:	tbnz	w8, #0, 453248 <sd_pid_get_user_unit+0x9c>
  453210:	b	45323c <sd_pid_get_user_unit+0x90>
  453214:	mov	w0, #0x1                   	// #1
  453218:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45321c:	add	x1, x1, #0x23
  453220:	ldr	x2, [sp, #24]
  453224:	mov	w3, #0x3f                  	// #63
  453228:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  45322c:	add	x4, x4, #0xa2
  453230:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453234:	ldr	w8, [sp, #20]
  453238:	tbnz	w8, #0, 453248 <sd_pid_get_user_unit+0x9c>
  45323c:	mov	w8, #0xffffffea            	// #-22
  453240:	stur	w8, [x29, #-4]
  453244:	b	45333c <sd_pid_get_user_unit+0x190>
  453248:	ldur	x8, [x29, #-16]
  45324c:	cmp	x8, #0x0
  453250:	cset	w9, ne  // ne = any
  453254:	mov	w10, #0x1                   	// #1
  453258:	eor	w9, w9, #0x1
  45325c:	eor	w9, w9, w10
  453260:	and	w9, w9, #0x1
  453264:	mov	w0, w9
  453268:	sxtw	x8, w0
  45326c:	cbz	x8, 45327c <sd_pid_get_user_unit+0xd0>
  453270:	ldur	w8, [x29, #-28]
  453274:	tbnz	w8, #0, 4532b0 <sd_pid_get_user_unit+0x104>
  453278:	b	4532a4 <sd_pid_get_user_unit+0xf8>
  45327c:	mov	w0, #0x1                   	// #1
  453280:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453284:	add	x1, x1, #0x9d
  453288:	ldr	x2, [sp, #24]
  45328c:	mov	w3, #0x40                  	// #64
  453290:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453294:	add	x4, x4, #0xa2
  453298:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45329c:	ldr	w8, [sp, #20]
  4532a0:	tbnz	w8, #0, 4532b0 <sd_pid_get_user_unit+0x104>
  4532a4:	mov	w8, #0xffffffea            	// #-22
  4532a8:	stur	w8, [x29, #-4]
  4532ac:	b	45333c <sd_pid_get_user_unit+0x190>
  4532b0:	ldur	w0, [x29, #-8]
  4532b4:	ldur	x1, [x29, #-16]
  4532b8:	bl	40bc90 <cg_pid_get_user_unit@plt>
  4532bc:	stur	w0, [x29, #-20]
  4532c0:	mov	w8, #0x0                   	// #0
  4532c4:	sturb	w8, [x29, #-21]
  4532c8:	ldur	w8, [x29, #-20]
  4532cc:	mov	w9, #0xffffff85            	// #-123
  4532d0:	cmp	w8, w9
  4532d4:	str	w8, [sp, #16]
  4532d8:	b.eq	4532fc <sd_pid_get_user_unit+0x150>  // b.none
  4532dc:	b	4532e0 <sd_pid_get_user_unit+0x134>
  4532e0:	mov	w8, #0xfffffffa            	// #-6
  4532e4:	ldr	w9, [sp, #16]
  4532e8:	cmp	w9, w8
  4532ec:	cset	w8, eq  // eq = none
  4532f0:	eor	w8, w8, #0x1
  4532f4:	tbnz	w8, #0, 453308 <sd_pid_get_user_unit+0x15c>
  4532f8:	b	4532fc <sd_pid_get_user_unit+0x150>
  4532fc:	mov	w8, #0x1                   	// #1
  453300:	sturb	w8, [x29, #-21]
  453304:	b	453308 <sd_pid_get_user_unit+0x15c>
  453308:	ldurb	w8, [x29, #-21]
  45330c:	and	w8, w8, #0x1
  453310:	sturb	w8, [x29, #-22]
  453314:	ldurb	w8, [x29, #-22]
  453318:	tbnz	w8, #0, 453320 <sd_pid_get_user_unit+0x174>
  45331c:	b	45332c <sd_pid_get_user_unit+0x180>
  453320:	mov	w8, #0xffffffc3            	// #-61
  453324:	str	w8, [sp, #12]
  453328:	b	453334 <sd_pid_get_user_unit+0x188>
  45332c:	ldur	w8, [x29, #-20]
  453330:	str	w8, [sp, #12]
  453334:	ldr	w8, [sp, #12]
  453338:	stur	w8, [x29, #-4]
  45333c:	ldur	w0, [x29, #-4]
  453340:	ldp	x29, x30, [sp, #64]
  453344:	add	sp, sp, #0x50
  453348:	ret

000000000045334c <sd_pid_get_machine_name>:
  45334c:	sub	sp, sp, #0x50
  453350:	stp	x29, x30, [sp, #64]
  453354:	add	x29, sp, #0x40
  453358:	mov	w8, #0x1                   	// #1
  45335c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453360:	add	x9, x9, #0x2c
  453364:	add	x9, x9, #0x3
  453368:	mov	w10, #0x0                   	// #0
  45336c:	stur	w0, [x29, #-8]
  453370:	stur	x1, [x29, #-16]
  453374:	stur	w8, [x29, #-28]
  453378:	str	x9, [sp, #24]
  45337c:	str	w10, [sp, #20]
  453380:	ldur	w8, [x29, #-8]
  453384:	cmp	w8, #0x0
  453388:	cset	w8, ge  // ge = tcont
  45338c:	mov	w9, #0x1                   	// #1
  453390:	eor	w8, w8, #0x1
  453394:	eor	w8, w8, w9
  453398:	and	w8, w8, #0x1
  45339c:	mov	w0, w8
  4533a0:	sxtw	x10, w0
  4533a4:	cbz	x10, 4533b4 <sd_pid_get_machine_name+0x68>
  4533a8:	ldur	w8, [x29, #-28]
  4533ac:	tbnz	w8, #0, 4533e8 <sd_pid_get_machine_name+0x9c>
  4533b0:	b	4533dc <sd_pid_get_machine_name+0x90>
  4533b4:	mov	w0, #0x1                   	// #1
  4533b8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4533bc:	add	x1, x1, #0x23
  4533c0:	ldr	x2, [sp, #24]
  4533c4:	mov	w3, #0x49                  	// #73
  4533c8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4533cc:	add	x4, x4, #0xcb
  4533d0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4533d4:	ldr	w8, [sp, #20]
  4533d8:	tbnz	w8, #0, 4533e8 <sd_pid_get_machine_name+0x9c>
  4533dc:	mov	w8, #0xffffffea            	// #-22
  4533e0:	stur	w8, [x29, #-4]
  4533e4:	b	4534dc <sd_pid_get_machine_name+0x190>
  4533e8:	ldur	x8, [x29, #-16]
  4533ec:	cmp	x8, #0x0
  4533f0:	cset	w9, ne  // ne = any
  4533f4:	mov	w10, #0x1                   	// #1
  4533f8:	eor	w9, w9, #0x1
  4533fc:	eor	w9, w9, w10
  453400:	and	w9, w9, #0x1
  453404:	mov	w0, w9
  453408:	sxtw	x8, w0
  45340c:	cbz	x8, 45341c <sd_pid_get_machine_name+0xd0>
  453410:	ldur	w8, [x29, #-28]
  453414:	tbnz	w8, #0, 453450 <sd_pid_get_machine_name+0x104>
  453418:	b	453444 <sd_pid_get_machine_name+0xf8>
  45341c:	mov	w0, #0x1                   	// #1
  453420:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  453424:	add	x1, x1, #0x5a0
  453428:	ldr	x2, [sp, #24]
  45342c:	mov	w3, #0x4a                  	// #74
  453430:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453434:	add	x4, x4, #0xcb
  453438:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45343c:	ldr	w8, [sp, #20]
  453440:	tbnz	w8, #0, 453450 <sd_pid_get_machine_name+0x104>
  453444:	mov	w8, #0xffffffea            	// #-22
  453448:	stur	w8, [x29, #-4]
  45344c:	b	4534dc <sd_pid_get_machine_name+0x190>
  453450:	ldur	w0, [x29, #-8]
  453454:	ldur	x1, [x29, #-16]
  453458:	bl	40bca0 <cg_pid_get_machine_name@plt>
  45345c:	stur	w0, [x29, #-20]
  453460:	mov	w8, #0x0                   	// #0
  453464:	sturb	w8, [x29, #-21]
  453468:	ldur	w8, [x29, #-20]
  45346c:	mov	w9, #0xffffff85            	// #-123
  453470:	cmp	w8, w9
  453474:	str	w8, [sp, #16]
  453478:	b.eq	45349c <sd_pid_get_machine_name+0x150>  // b.none
  45347c:	b	453480 <sd_pid_get_machine_name+0x134>
  453480:	mov	w8, #0xfffffffa            	// #-6
  453484:	ldr	w9, [sp, #16]
  453488:	cmp	w9, w8
  45348c:	cset	w8, eq  // eq = none
  453490:	eor	w8, w8, #0x1
  453494:	tbnz	w8, #0, 4534a8 <sd_pid_get_machine_name+0x15c>
  453498:	b	45349c <sd_pid_get_machine_name+0x150>
  45349c:	mov	w8, #0x1                   	// #1
  4534a0:	sturb	w8, [x29, #-21]
  4534a4:	b	4534a8 <sd_pid_get_machine_name+0x15c>
  4534a8:	ldurb	w8, [x29, #-21]
  4534ac:	and	w8, w8, #0x1
  4534b0:	sturb	w8, [x29, #-22]
  4534b4:	ldurb	w8, [x29, #-22]
  4534b8:	tbnz	w8, #0, 4534c0 <sd_pid_get_machine_name+0x174>
  4534bc:	b	4534cc <sd_pid_get_machine_name+0x180>
  4534c0:	mov	w8, #0xffffffc3            	// #-61
  4534c4:	str	w8, [sp, #12]
  4534c8:	b	4534d4 <sd_pid_get_machine_name+0x188>
  4534cc:	ldur	w8, [x29, #-20]
  4534d0:	str	w8, [sp, #12]
  4534d4:	ldr	w8, [sp, #12]
  4534d8:	stur	w8, [x29, #-4]
  4534dc:	ldur	w0, [x29, #-4]
  4534e0:	ldp	x29, x30, [sp, #64]
  4534e4:	add	sp, sp, #0x50
  4534e8:	ret

00000000004534ec <sd_pid_get_slice>:
  4534ec:	sub	sp, sp, #0x50
  4534f0:	stp	x29, x30, [sp, #64]
  4534f4:	add	x29, sp, #0x40
  4534f8:	mov	w8, #0x1                   	// #1
  4534fc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453500:	add	x9, x9, #0x2c
  453504:	add	x9, x9, #0x3
  453508:	mov	w10, #0x0                   	// #0
  45350c:	stur	w0, [x29, #-8]
  453510:	stur	x1, [x29, #-16]
  453514:	stur	w8, [x29, #-28]
  453518:	str	x9, [sp, #24]
  45351c:	str	w10, [sp, #20]
  453520:	ldur	w8, [x29, #-8]
  453524:	cmp	w8, #0x0
  453528:	cset	w8, ge  // ge = tcont
  45352c:	mov	w9, #0x1                   	// #1
  453530:	eor	w8, w8, #0x1
  453534:	eor	w8, w8, w9
  453538:	and	w8, w8, #0x1
  45353c:	mov	w0, w8
  453540:	sxtw	x10, w0
  453544:	cbz	x10, 453554 <sd_pid_get_slice+0x68>
  453548:	ldur	w8, [x29, #-28]
  45354c:	tbnz	w8, #0, 453588 <sd_pid_get_slice+0x9c>
  453550:	b	45357c <sd_pid_get_slice+0x90>
  453554:	mov	w0, #0x1                   	// #1
  453558:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45355c:	add	x1, x1, #0x23
  453560:	ldr	x2, [sp, #24]
  453564:	mov	w3, #0x53                  	// #83
  453568:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  45356c:	add	x4, x4, #0xf7
  453570:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453574:	ldr	w8, [sp, #20]
  453578:	tbnz	w8, #0, 453588 <sd_pid_get_slice+0x9c>
  45357c:	mov	w8, #0xffffffea            	// #-22
  453580:	stur	w8, [x29, #-4]
  453584:	b	45367c <sd_pid_get_slice+0x190>
  453588:	ldur	x8, [x29, #-16]
  45358c:	cmp	x8, #0x0
  453590:	cset	w9, ne  // ne = any
  453594:	mov	w10, #0x1                   	// #1
  453598:	eor	w9, w9, #0x1
  45359c:	eor	w9, w9, w10
  4535a0:	and	w9, w9, #0x1
  4535a4:	mov	w0, w9
  4535a8:	sxtw	x8, w0
  4535ac:	cbz	x8, 4535bc <sd_pid_get_slice+0xd0>
  4535b0:	ldur	w8, [x29, #-28]
  4535b4:	tbnz	w8, #0, 4535f0 <sd_pid_get_slice+0x104>
  4535b8:	b	4535e4 <sd_pid_get_slice+0xf8>
  4535bc:	mov	w0, #0x1                   	// #1
  4535c0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4535c4:	add	x1, x1, #0x11c
  4535c8:	ldr	x2, [sp, #24]
  4535cc:	mov	w3, #0x54                  	// #84
  4535d0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4535d4:	add	x4, x4, #0xf7
  4535d8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4535dc:	ldr	w8, [sp, #20]
  4535e0:	tbnz	w8, #0, 4535f0 <sd_pid_get_slice+0x104>
  4535e4:	mov	w8, #0xffffffea            	// #-22
  4535e8:	stur	w8, [x29, #-4]
  4535ec:	b	45367c <sd_pid_get_slice+0x190>
  4535f0:	ldur	w0, [x29, #-8]
  4535f4:	ldur	x1, [x29, #-16]
  4535f8:	bl	40bcb0 <cg_pid_get_slice@plt>
  4535fc:	stur	w0, [x29, #-20]
  453600:	mov	w8, #0x0                   	// #0
  453604:	sturb	w8, [x29, #-21]
  453608:	ldur	w8, [x29, #-20]
  45360c:	mov	w9, #0xffffff85            	// #-123
  453610:	cmp	w8, w9
  453614:	str	w8, [sp, #16]
  453618:	b.eq	45363c <sd_pid_get_slice+0x150>  // b.none
  45361c:	b	453620 <sd_pid_get_slice+0x134>
  453620:	mov	w8, #0xfffffffa            	// #-6
  453624:	ldr	w9, [sp, #16]
  453628:	cmp	w9, w8
  45362c:	cset	w8, eq  // eq = none
  453630:	eor	w8, w8, #0x1
  453634:	tbnz	w8, #0, 453648 <sd_pid_get_slice+0x15c>
  453638:	b	45363c <sd_pid_get_slice+0x150>
  45363c:	mov	w8, #0x1                   	// #1
  453640:	sturb	w8, [x29, #-21]
  453644:	b	453648 <sd_pid_get_slice+0x15c>
  453648:	ldurb	w8, [x29, #-21]
  45364c:	and	w8, w8, #0x1
  453650:	sturb	w8, [x29, #-22]
  453654:	ldurb	w8, [x29, #-22]
  453658:	tbnz	w8, #0, 453660 <sd_pid_get_slice+0x174>
  45365c:	b	45366c <sd_pid_get_slice+0x180>
  453660:	mov	w8, #0xffffffc3            	// #-61
  453664:	str	w8, [sp, #12]
  453668:	b	453674 <sd_pid_get_slice+0x188>
  45366c:	ldur	w8, [x29, #-20]
  453670:	str	w8, [sp, #12]
  453674:	ldr	w8, [sp, #12]
  453678:	stur	w8, [x29, #-4]
  45367c:	ldur	w0, [x29, #-4]
  453680:	ldp	x29, x30, [sp, #64]
  453684:	add	sp, sp, #0x50
  453688:	ret

000000000045368c <sd_pid_get_user_slice>:
  45368c:	sub	sp, sp, #0x50
  453690:	stp	x29, x30, [sp, #64]
  453694:	add	x29, sp, #0x40
  453698:	mov	w8, #0x1                   	// #1
  45369c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4536a0:	add	x9, x9, #0x2c
  4536a4:	add	x9, x9, #0x3
  4536a8:	mov	w10, #0x0                   	// #0
  4536ac:	stur	w0, [x29, #-8]
  4536b0:	stur	x1, [x29, #-16]
  4536b4:	stur	w8, [x29, #-28]
  4536b8:	str	x9, [sp, #24]
  4536bc:	str	w10, [sp, #20]
  4536c0:	ldur	w8, [x29, #-8]
  4536c4:	cmp	w8, #0x0
  4536c8:	cset	w8, ge  // ge = tcont
  4536cc:	mov	w9, #0x1                   	// #1
  4536d0:	eor	w8, w8, #0x1
  4536d4:	eor	w8, w8, w9
  4536d8:	and	w8, w8, #0x1
  4536dc:	mov	w0, w8
  4536e0:	sxtw	x10, w0
  4536e4:	cbz	x10, 4536f4 <sd_pid_get_user_slice+0x68>
  4536e8:	ldur	w8, [x29, #-28]
  4536ec:	tbnz	w8, #0, 453728 <sd_pid_get_user_slice+0x9c>
  4536f0:	b	45371c <sd_pid_get_user_slice+0x90>
  4536f4:	mov	w0, #0x1                   	// #1
  4536f8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4536fc:	add	x1, x1, #0x23
  453700:	ldr	x2, [sp, #24]
  453704:	mov	w3, #0x5d                  	// #93
  453708:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  45370c:	add	x4, x4, #0x122
  453710:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453714:	ldr	w8, [sp, #20]
  453718:	tbnz	w8, #0, 453728 <sd_pid_get_user_slice+0x9c>
  45371c:	mov	w8, #0xffffffea            	// #-22
  453720:	stur	w8, [x29, #-4]
  453724:	b	45381c <sd_pid_get_user_slice+0x190>
  453728:	ldur	x8, [x29, #-16]
  45372c:	cmp	x8, #0x0
  453730:	cset	w9, ne  // ne = any
  453734:	mov	w10, #0x1                   	// #1
  453738:	eor	w9, w9, #0x1
  45373c:	eor	w9, w9, w10
  453740:	and	w9, w9, #0x1
  453744:	mov	w0, w9
  453748:	sxtw	x8, w0
  45374c:	cbz	x8, 45375c <sd_pid_get_user_slice+0xd0>
  453750:	ldur	w8, [x29, #-28]
  453754:	tbnz	w8, #0, 453790 <sd_pid_get_user_slice+0x104>
  453758:	b	453784 <sd_pid_get_user_slice+0xf8>
  45375c:	mov	w0, #0x1                   	// #1
  453760:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453764:	add	x1, x1, #0x11c
  453768:	ldr	x2, [sp, #24]
  45376c:	mov	w3, #0x5e                  	// #94
  453770:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453774:	add	x4, x4, #0x122
  453778:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45377c:	ldr	w8, [sp, #20]
  453780:	tbnz	w8, #0, 453790 <sd_pid_get_user_slice+0x104>
  453784:	mov	w8, #0xffffffea            	// #-22
  453788:	stur	w8, [x29, #-4]
  45378c:	b	45381c <sd_pid_get_user_slice+0x190>
  453790:	ldur	w0, [x29, #-8]
  453794:	ldur	x1, [x29, #-16]
  453798:	bl	40bcc0 <cg_pid_get_user_slice@plt>
  45379c:	stur	w0, [x29, #-20]
  4537a0:	mov	w8, #0x0                   	// #0
  4537a4:	sturb	w8, [x29, #-21]
  4537a8:	ldur	w8, [x29, #-20]
  4537ac:	mov	w9, #0xffffff85            	// #-123
  4537b0:	cmp	w8, w9
  4537b4:	str	w8, [sp, #16]
  4537b8:	b.eq	4537dc <sd_pid_get_user_slice+0x150>  // b.none
  4537bc:	b	4537c0 <sd_pid_get_user_slice+0x134>
  4537c0:	mov	w8, #0xfffffffa            	// #-6
  4537c4:	ldr	w9, [sp, #16]
  4537c8:	cmp	w9, w8
  4537cc:	cset	w8, eq  // eq = none
  4537d0:	eor	w8, w8, #0x1
  4537d4:	tbnz	w8, #0, 4537e8 <sd_pid_get_user_slice+0x15c>
  4537d8:	b	4537dc <sd_pid_get_user_slice+0x150>
  4537dc:	mov	w8, #0x1                   	// #1
  4537e0:	sturb	w8, [x29, #-21]
  4537e4:	b	4537e8 <sd_pid_get_user_slice+0x15c>
  4537e8:	ldurb	w8, [x29, #-21]
  4537ec:	and	w8, w8, #0x1
  4537f0:	sturb	w8, [x29, #-22]
  4537f4:	ldurb	w8, [x29, #-22]
  4537f8:	tbnz	w8, #0, 453800 <sd_pid_get_user_slice+0x174>
  4537fc:	b	45380c <sd_pid_get_user_slice+0x180>
  453800:	mov	w8, #0xffffffc3            	// #-61
  453804:	str	w8, [sp, #12]
  453808:	b	453814 <sd_pid_get_user_slice+0x188>
  45380c:	ldur	w8, [x29, #-20]
  453810:	str	w8, [sp, #12]
  453814:	ldr	w8, [sp, #12]
  453818:	stur	w8, [x29, #-4]
  45381c:	ldur	w0, [x29, #-4]
  453820:	ldp	x29, x30, [sp, #64]
  453824:	add	sp, sp, #0x50
  453828:	ret

000000000045382c <sd_pid_get_owner_uid>:
  45382c:	sub	sp, sp, #0x50
  453830:	stp	x29, x30, [sp, #64]
  453834:	add	x29, sp, #0x40
  453838:	mov	w8, #0x1                   	// #1
  45383c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453840:	add	x9, x9, #0x2c
  453844:	add	x9, x9, #0x3
  453848:	mov	w10, #0x0                   	// #0
  45384c:	stur	w0, [x29, #-8]
  453850:	stur	x1, [x29, #-16]
  453854:	stur	w8, [x29, #-28]
  453858:	str	x9, [sp, #24]
  45385c:	str	w10, [sp, #20]
  453860:	ldur	w8, [x29, #-8]
  453864:	cmp	w8, #0x0
  453868:	cset	w8, ge  // ge = tcont
  45386c:	mov	w9, #0x1                   	// #1
  453870:	eor	w8, w8, #0x1
  453874:	eor	w8, w8, w9
  453878:	and	w8, w8, #0x1
  45387c:	mov	w0, w8
  453880:	sxtw	x10, w0
  453884:	cbz	x10, 453894 <sd_pid_get_owner_uid+0x68>
  453888:	ldur	w8, [x29, #-28]
  45388c:	tbnz	w8, #0, 4538c8 <sd_pid_get_owner_uid+0x9c>
  453890:	b	4538bc <sd_pid_get_owner_uid+0x90>
  453894:	mov	w0, #0x1                   	// #1
  453898:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45389c:	add	x1, x1, #0x23
  4538a0:	ldr	x2, [sp, #24]
  4538a4:	mov	w3, #0x67                  	// #103
  4538a8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4538ac:	add	x4, x4, #0x14c
  4538b0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4538b4:	ldr	w8, [sp, #20]
  4538b8:	tbnz	w8, #0, 4538c8 <sd_pid_get_owner_uid+0x9c>
  4538bc:	mov	w8, #0xffffffea            	// #-22
  4538c0:	stur	w8, [x29, #-4]
  4538c4:	b	4539bc <sd_pid_get_owner_uid+0x190>
  4538c8:	ldur	x8, [x29, #-16]
  4538cc:	cmp	x8, #0x0
  4538d0:	cset	w9, ne  // ne = any
  4538d4:	mov	w10, #0x1                   	// #1
  4538d8:	eor	w9, w9, #0x1
  4538dc:	eor	w9, w9, w10
  4538e0:	and	w9, w9, #0x1
  4538e4:	mov	w0, w9
  4538e8:	sxtw	x8, w0
  4538ec:	cbz	x8, 4538fc <sd_pid_get_owner_uid+0xd0>
  4538f0:	ldur	w8, [x29, #-28]
  4538f4:	tbnz	w8, #0, 453930 <sd_pid_get_owner_uid+0x104>
  4538f8:	b	453924 <sd_pid_get_owner_uid+0xf8>
  4538fc:	mov	w0, #0x1                   	// #1
  453900:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453904:	add	x1, x1, #0x175
  453908:	ldr	x2, [sp, #24]
  45390c:	mov	w3, #0x68                  	// #104
  453910:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453914:	add	x4, x4, #0x14c
  453918:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45391c:	ldr	w8, [sp, #20]
  453920:	tbnz	w8, #0, 453930 <sd_pid_get_owner_uid+0x104>
  453924:	mov	w8, #0xffffffea            	// #-22
  453928:	stur	w8, [x29, #-4]
  45392c:	b	4539bc <sd_pid_get_owner_uid+0x190>
  453930:	ldur	w0, [x29, #-8]
  453934:	ldur	x1, [x29, #-16]
  453938:	bl	40bcd0 <cg_pid_get_owner_uid@plt>
  45393c:	stur	w0, [x29, #-20]
  453940:	mov	w8, #0x0                   	// #0
  453944:	sturb	w8, [x29, #-21]
  453948:	ldur	w8, [x29, #-20]
  45394c:	mov	w9, #0xffffff85            	// #-123
  453950:	cmp	w8, w9
  453954:	str	w8, [sp, #16]
  453958:	b.eq	45397c <sd_pid_get_owner_uid+0x150>  // b.none
  45395c:	b	453960 <sd_pid_get_owner_uid+0x134>
  453960:	mov	w8, #0xfffffffa            	// #-6
  453964:	ldr	w9, [sp, #16]
  453968:	cmp	w9, w8
  45396c:	cset	w8, eq  // eq = none
  453970:	eor	w8, w8, #0x1
  453974:	tbnz	w8, #0, 453988 <sd_pid_get_owner_uid+0x15c>
  453978:	b	45397c <sd_pid_get_owner_uid+0x150>
  45397c:	mov	w8, #0x1                   	// #1
  453980:	sturb	w8, [x29, #-21]
  453984:	b	453988 <sd_pid_get_owner_uid+0x15c>
  453988:	ldurb	w8, [x29, #-21]
  45398c:	and	w8, w8, #0x1
  453990:	sturb	w8, [x29, #-22]
  453994:	ldurb	w8, [x29, #-22]
  453998:	tbnz	w8, #0, 4539a0 <sd_pid_get_owner_uid+0x174>
  45399c:	b	4539ac <sd_pid_get_owner_uid+0x180>
  4539a0:	mov	w8, #0xffffffc3            	// #-61
  4539a4:	str	w8, [sp, #12]
  4539a8:	b	4539b4 <sd_pid_get_owner_uid+0x188>
  4539ac:	ldur	w8, [x29, #-20]
  4539b0:	str	w8, [sp, #12]
  4539b4:	ldr	w8, [sp, #12]
  4539b8:	stur	w8, [x29, #-4]
  4539bc:	ldur	w0, [x29, #-4]
  4539c0:	ldp	x29, x30, [sp, #64]
  4539c4:	add	sp, sp, #0x50
  4539c8:	ret

00000000004539cc <sd_pid_get_cgroup>:
  4539cc:	sub	sp, sp, #0x40
  4539d0:	stp	x29, x30, [sp, #48]
  4539d4:	add	x29, sp, #0x30
  4539d8:	mov	w8, #0x1                   	// #1
  4539dc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4539e0:	add	x9, x9, #0x2c
  4539e4:	add	x9, x9, #0x3
  4539e8:	mov	w10, #0x0                   	// #0
  4539ec:	stur	w0, [x29, #-8]
  4539f0:	stur	x1, [x29, #-16]
  4539f4:	str	w8, [sp, #16]
  4539f8:	str	x9, [sp, #8]
  4539fc:	str	w10, [sp, #4]
  453a00:	ldur	w8, [x29, #-8]
  453a04:	cmp	w8, #0x0
  453a08:	cset	w8, ge  // ge = tcont
  453a0c:	mov	w9, #0x1                   	// #1
  453a10:	eor	w8, w8, #0x1
  453a14:	eor	w8, w8, w9
  453a18:	and	w8, w8, #0x1
  453a1c:	mov	w0, w8
  453a20:	sxtw	x10, w0
  453a24:	cbz	x10, 453a34 <sd_pid_get_cgroup+0x68>
  453a28:	ldr	w8, [sp, #16]
  453a2c:	tbnz	w8, #0, 453a68 <sd_pid_get_cgroup+0x9c>
  453a30:	b	453a5c <sd_pid_get_cgroup+0x90>
  453a34:	mov	w0, #0x1                   	// #1
  453a38:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453a3c:	add	x1, x1, #0x23
  453a40:	ldr	x2, [sp, #8]
  453a44:	mov	w3, #0x72                  	// #114
  453a48:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453a4c:	add	x4, x4, #0x179
  453a50:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453a54:	ldr	w8, [sp, #4]
  453a58:	tbnz	w8, #0, 453a68 <sd_pid_get_cgroup+0x9c>
  453a5c:	mov	w8, #0xffffffea            	// #-22
  453a60:	stur	w8, [x29, #-4]
  453a64:	b	453b50 <sd_pid_get_cgroup+0x184>
  453a68:	ldur	x8, [x29, #-16]
  453a6c:	cmp	x8, #0x0
  453a70:	cset	w9, ne  // ne = any
  453a74:	mov	w10, #0x1                   	// #1
  453a78:	eor	w9, w9, #0x1
  453a7c:	eor	w9, w9, w10
  453a80:	and	w9, w9, #0x1
  453a84:	mov	w0, w9
  453a88:	sxtw	x8, w0
  453a8c:	cbz	x8, 453a9c <sd_pid_get_cgroup+0xd0>
  453a90:	ldr	w8, [sp, #16]
  453a94:	tbnz	w8, #0, 453ad0 <sd_pid_get_cgroup+0x104>
  453a98:	b	453ac4 <sd_pid_get_cgroup+0xf8>
  453a9c:	mov	w0, #0x1                   	// #1
  453aa0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453aa4:	add	x1, x1, #0x19f
  453aa8:	ldr	x2, [sp, #8]
  453aac:	mov	w3, #0x73                  	// #115
  453ab0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453ab4:	add	x4, x4, #0x179
  453ab8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453abc:	ldr	w8, [sp, #4]
  453ac0:	tbnz	w8, #0, 453ad0 <sd_pid_get_cgroup+0x104>
  453ac4:	mov	w8, #0xffffffea            	// #-22
  453ac8:	stur	w8, [x29, #-4]
  453acc:	b	453b50 <sd_pid_get_cgroup+0x184>
  453ad0:	ldur	w1, [x29, #-8]
  453ad4:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  453ad8:	add	x0, x0, #0xbaf
  453adc:	add	x2, sp, #0x18
  453ae0:	bl	40a4f0 <cg_pid_get_path@plt>
  453ae4:	str	w0, [sp, #20]
  453ae8:	ldr	w8, [sp, #20]
  453aec:	cmp	w8, #0x0
  453af0:	cset	w8, ge  // ge = tcont
  453af4:	tbnz	w8, #0, 453b04 <sd_pid_get_cgroup+0x138>
  453af8:	ldr	w8, [sp, #20]
  453afc:	stur	w8, [x29, #-4]
  453b00:	b	453b50 <sd_pid_get_cgroup+0x184>
  453b04:	ldr	x0, [sp, #24]
  453b08:	bl	453b60 <isempty>
  453b0c:	tbnz	w0, #0, 453b14 <sd_pid_get_cgroup+0x148>
  453b10:	b	453b40 <sd_pid_get_cgroup+0x174>
  453b14:	ldr	x0, [sp, #24]
  453b18:	bl	40a530 <free@plt>
  453b1c:	adrp	x0, 463000 <dhcp_lease_set_client_id+0xc4>
  453b20:	add	x0, x0, #0xb41
  453b24:	bl	40a910 <strdup@plt>
  453b28:	str	x0, [sp, #24]
  453b2c:	ldr	x8, [sp, #24]
  453b30:	cbnz	x8, 453b40 <sd_pid_get_cgroup+0x174>
  453b34:	mov	w8, #0xfffffff4            	// #-12
  453b38:	stur	w8, [x29, #-4]
  453b3c:	b	453b50 <sd_pid_get_cgroup+0x184>
  453b40:	ldr	x8, [sp, #24]
  453b44:	ldur	x9, [x29, #-16]
  453b48:	str	x8, [x9]
  453b4c:	stur	wzr, [x29, #-4]
  453b50:	ldur	w0, [x29, #-4]
  453b54:	ldp	x29, x30, [sp, #48]
  453b58:	add	sp, sp, #0x40
  453b5c:	ret

0000000000453b60 <isempty>:
  453b60:	sub	sp, sp, #0x10
  453b64:	str	x0, [sp, #8]
  453b68:	ldr	x8, [sp, #8]
  453b6c:	mov	w9, #0x1                   	// #1
  453b70:	str	w9, [sp, #4]
  453b74:	cbz	x8, 453b90 <isempty+0x30>
  453b78:	ldr	x8, [sp, #8]
  453b7c:	ldrb	w9, [x8]
  453b80:	cmp	w9, #0x0
  453b84:	cset	w9, ne  // ne = any
  453b88:	eor	w9, w9, #0x1
  453b8c:	str	w9, [sp, #4]
  453b90:	ldr	w8, [sp, #4]
  453b94:	and	w0, w8, #0x1
  453b98:	add	sp, sp, #0x10
  453b9c:	ret

0000000000453ba0 <sd_peer_get_session>:
  453ba0:	sub	sp, sp, #0x50
  453ba4:	stp	x29, x30, [sp, #64]
  453ba8:	add	x29, sp, #0x40
  453bac:	mov	w8, #0x1                   	// #1
  453bb0:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453bb4:	add	x9, x9, #0x2c
  453bb8:	add	x9, x9, #0x3
  453bbc:	mov	w10, #0x0                   	// #0
  453bc0:	stur	w0, [x29, #-8]
  453bc4:	stur	x1, [x29, #-16]
  453bc8:	str	xzr, [sp, #32]
  453bcc:	str	wzr, [sp, #40]
  453bd0:	str	w8, [sp, #24]
  453bd4:	str	x9, [sp, #16]
  453bd8:	str	w10, [sp, #12]
  453bdc:	ldur	w8, [x29, #-8]
  453be0:	cmp	w8, #0x0
  453be4:	cset	w8, ge  // ge = tcont
  453be8:	mov	w9, #0x1                   	// #1
  453bec:	eor	w8, w8, #0x1
  453bf0:	eor	w8, w8, w9
  453bf4:	and	w8, w8, #0x1
  453bf8:	mov	w0, w8
  453bfc:	sxtw	x10, w0
  453c00:	cbz	x10, 453c10 <sd_peer_get_session+0x70>
  453c04:	ldr	w8, [sp, #24]
  453c08:	tbnz	w8, #0, 453c44 <sd_peer_get_session+0xa4>
  453c0c:	b	453c38 <sd_peer_get_session+0x98>
  453c10:	mov	w0, #0x1                   	// #1
  453c14:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453c18:	add	x1, x1, #0x1a6
  453c1c:	ldr	x2, [sp, #16]
  453c20:	mov	w3, #0x8c                  	// #140
  453c24:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453c28:	add	x4, x4, #0x1ae
  453c2c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453c30:	ldr	w8, [sp, #12]
  453c34:	tbnz	w8, #0, 453c44 <sd_peer_get_session+0xa4>
  453c38:	mov	w8, #0xfffffff7            	// #-9
  453c3c:	stur	w8, [x29, #-4]
  453c40:	b	453ce8 <sd_peer_get_session+0x148>
  453c44:	ldur	x8, [x29, #-16]
  453c48:	cmp	x8, #0x0
  453c4c:	cset	w9, ne  // ne = any
  453c50:	mov	w10, #0x1                   	// #1
  453c54:	eor	w9, w9, #0x1
  453c58:	eor	w9, w9, w10
  453c5c:	and	w9, w9, #0x1
  453c60:	mov	w0, w9
  453c64:	sxtw	x8, w0
  453c68:	cbz	x8, 453c78 <sd_peer_get_session+0xd8>
  453c6c:	ldr	w8, [sp, #24]
  453c70:	tbnz	w8, #0, 453cac <sd_peer_get_session+0x10c>
  453c74:	b	453ca0 <sd_peer_get_session+0x100>
  453c78:	mov	w0, #0x1                   	// #1
  453c7c:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  453c80:	add	x1, x1, #0x69d
  453c84:	ldr	x2, [sp, #16]
  453c88:	mov	w3, #0x8d                  	// #141
  453c8c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453c90:	add	x4, x4, #0x1ae
  453c94:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453c98:	ldr	w8, [sp, #12]
  453c9c:	tbnz	w8, #0, 453cac <sd_peer_get_session+0x10c>
  453ca0:	mov	w8, #0xffffffea            	// #-22
  453ca4:	stur	w8, [x29, #-4]
  453ca8:	b	453ce8 <sd_peer_get_session+0x148>
  453cac:	ldur	w0, [x29, #-8]
  453cb0:	add	x1, sp, #0x20
  453cb4:	bl	40ad90 <getpeercred@plt>
  453cb8:	str	w0, [sp, #28]
  453cbc:	ldr	w8, [sp, #28]
  453cc0:	cmp	w8, #0x0
  453cc4:	cset	w8, ge  // ge = tcont
  453cc8:	tbnz	w8, #0, 453cd8 <sd_peer_get_session+0x138>
  453ccc:	ldr	w8, [sp, #28]
  453cd0:	stur	w8, [x29, #-4]
  453cd4:	b	453ce8 <sd_peer_get_session+0x148>
  453cd8:	ldr	w0, [sp, #32]
  453cdc:	ldur	x1, [x29, #-16]
  453ce0:	bl	40bc70 <cg_pid_get_session@plt>
  453ce4:	stur	w0, [x29, #-4]
  453ce8:	ldur	w0, [x29, #-4]
  453cec:	ldp	x29, x30, [sp, #64]
  453cf0:	add	sp, sp, #0x50
  453cf4:	ret

0000000000453cf8 <sd_peer_get_owner_uid>:
  453cf8:	sub	sp, sp, #0x50
  453cfc:	stp	x29, x30, [sp, #64]
  453d00:	add	x29, sp, #0x40
  453d04:	mov	w8, #0x1                   	// #1
  453d08:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453d0c:	add	x9, x9, #0x2c
  453d10:	add	x9, x9, #0x3
  453d14:	mov	w10, #0x0                   	// #0
  453d18:	stur	w0, [x29, #-8]
  453d1c:	stur	x1, [x29, #-16]
  453d20:	str	w8, [sp, #28]
  453d24:	str	x9, [sp, #16]
  453d28:	str	w10, [sp, #12]
  453d2c:	ldur	w8, [x29, #-8]
  453d30:	cmp	w8, #0x0
  453d34:	cset	w8, ge  // ge = tcont
  453d38:	mov	w9, #0x1                   	// #1
  453d3c:	eor	w8, w8, #0x1
  453d40:	eor	w8, w8, w9
  453d44:	and	w8, w8, #0x1
  453d48:	mov	w0, w8
  453d4c:	sxtw	x10, w0
  453d50:	cbz	x10, 453d60 <sd_peer_get_owner_uid+0x68>
  453d54:	ldr	w8, [sp, #28]
  453d58:	tbnz	w8, #0, 453d94 <sd_peer_get_owner_uid+0x9c>
  453d5c:	b	453d88 <sd_peer_get_owner_uid+0x90>
  453d60:	mov	w0, #0x1                   	// #1
  453d64:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453d68:	add	x1, x1, #0x1a6
  453d6c:	ldr	x2, [sp, #16]
  453d70:	mov	w3, #0x9a                  	// #154
  453d74:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453d78:	add	x4, x4, #0x1d4
  453d7c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453d80:	ldr	w8, [sp, #12]
  453d84:	tbnz	w8, #0, 453d94 <sd_peer_get_owner_uid+0x9c>
  453d88:	mov	w8, #0xfffffff7            	// #-9
  453d8c:	stur	w8, [x29, #-4]
  453d90:	b	453e38 <sd_peer_get_owner_uid+0x140>
  453d94:	ldur	x8, [x29, #-16]
  453d98:	cmp	x8, #0x0
  453d9c:	cset	w9, ne  // ne = any
  453da0:	mov	w10, #0x1                   	// #1
  453da4:	eor	w9, w9, #0x1
  453da8:	eor	w9, w9, w10
  453dac:	and	w9, w9, #0x1
  453db0:	mov	w0, w9
  453db4:	sxtw	x8, w0
  453db8:	cbz	x8, 453dc8 <sd_peer_get_owner_uid+0xd0>
  453dbc:	ldr	w8, [sp, #28]
  453dc0:	tbnz	w8, #0, 453dfc <sd_peer_get_owner_uid+0x104>
  453dc4:	b	453df0 <sd_peer_get_owner_uid+0xf8>
  453dc8:	mov	w0, #0x1                   	// #1
  453dcc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453dd0:	add	x1, x1, #0x175
  453dd4:	ldr	x2, [sp, #16]
  453dd8:	mov	w3, #0x9b                  	// #155
  453ddc:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453de0:	add	x4, x4, #0x1d4
  453de4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453de8:	ldr	w8, [sp, #12]
  453dec:	tbnz	w8, #0, 453dfc <sd_peer_get_owner_uid+0x104>
  453df0:	mov	w8, #0xffffffea            	// #-22
  453df4:	stur	w8, [x29, #-4]
  453df8:	b	453e38 <sd_peer_get_owner_uid+0x140>
  453dfc:	ldur	w0, [x29, #-8]
  453e00:	sub	x1, x29, #0x1c
  453e04:	bl	40ad90 <getpeercred@plt>
  453e08:	str	w0, [sp, #32]
  453e0c:	ldr	w8, [sp, #32]
  453e10:	cmp	w8, #0x0
  453e14:	cset	w8, ge  // ge = tcont
  453e18:	tbnz	w8, #0, 453e28 <sd_peer_get_owner_uid+0x130>
  453e1c:	ldr	w8, [sp, #32]
  453e20:	stur	w8, [x29, #-4]
  453e24:	b	453e38 <sd_peer_get_owner_uid+0x140>
  453e28:	ldur	w0, [x29, #-28]
  453e2c:	ldur	x1, [x29, #-16]
  453e30:	bl	40bcd0 <cg_pid_get_owner_uid@plt>
  453e34:	stur	w0, [x29, #-4]
  453e38:	ldur	w0, [x29, #-4]
  453e3c:	ldp	x29, x30, [sp, #64]
  453e40:	add	sp, sp, #0x50
  453e44:	ret

0000000000453e48 <sd_peer_get_unit>:
  453e48:	sub	sp, sp, #0x50
  453e4c:	stp	x29, x30, [sp, #64]
  453e50:	add	x29, sp, #0x40
  453e54:	mov	w8, #0x1                   	// #1
  453e58:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453e5c:	add	x9, x9, #0x2c
  453e60:	add	x9, x9, #0x3
  453e64:	mov	w10, #0x0                   	// #0
  453e68:	stur	w0, [x29, #-8]
  453e6c:	stur	x1, [x29, #-16]
  453e70:	str	w8, [sp, #28]
  453e74:	str	x9, [sp, #16]
  453e78:	str	w10, [sp, #12]
  453e7c:	ldur	w8, [x29, #-8]
  453e80:	cmp	w8, #0x0
  453e84:	cset	w8, ge  // ge = tcont
  453e88:	mov	w9, #0x1                   	// #1
  453e8c:	eor	w8, w8, #0x1
  453e90:	eor	w8, w8, w9
  453e94:	and	w8, w8, #0x1
  453e98:	mov	w0, w8
  453e9c:	sxtw	x10, w0
  453ea0:	cbz	x10, 453eb0 <sd_peer_get_unit+0x68>
  453ea4:	ldr	w8, [sp, #28]
  453ea8:	tbnz	w8, #0, 453ee4 <sd_peer_get_unit+0x9c>
  453eac:	b	453ed8 <sd_peer_get_unit+0x90>
  453eb0:	mov	w0, #0x1                   	// #1
  453eb4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453eb8:	add	x1, x1, #0x1a6
  453ebc:	ldr	x2, [sp, #16]
  453ec0:	mov	w3, #0xa8                  	// #168
  453ec4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453ec8:	add	x4, x4, #0x1fc
  453ecc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453ed0:	ldr	w8, [sp, #12]
  453ed4:	tbnz	w8, #0, 453ee4 <sd_peer_get_unit+0x9c>
  453ed8:	mov	w8, #0xfffffff7            	// #-9
  453edc:	stur	w8, [x29, #-4]
  453ee0:	b	453f88 <sd_peer_get_unit+0x140>
  453ee4:	ldur	x8, [x29, #-16]
  453ee8:	cmp	x8, #0x0
  453eec:	cset	w9, ne  // ne = any
  453ef0:	mov	w10, #0x1                   	// #1
  453ef4:	eor	w9, w9, #0x1
  453ef8:	eor	w9, w9, w10
  453efc:	and	w9, w9, #0x1
  453f00:	mov	w0, w9
  453f04:	sxtw	x8, w0
  453f08:	cbz	x8, 453f18 <sd_peer_get_unit+0xd0>
  453f0c:	ldr	w8, [sp, #28]
  453f10:	tbnz	w8, #0, 453f4c <sd_peer_get_unit+0x104>
  453f14:	b	453f40 <sd_peer_get_unit+0xf8>
  453f18:	mov	w0, #0x1                   	// #1
  453f1c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  453f20:	add	x1, x1, #0x9d
  453f24:	ldr	x2, [sp, #16]
  453f28:	mov	w3, #0xa9                  	// #169
  453f2c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  453f30:	add	x4, x4, #0x1fc
  453f34:	bl	40ad60 <log_assert_failed_return_realm@plt>
  453f38:	ldr	w8, [sp, #12]
  453f3c:	tbnz	w8, #0, 453f4c <sd_peer_get_unit+0x104>
  453f40:	mov	w8, #0xffffffea            	// #-22
  453f44:	stur	w8, [x29, #-4]
  453f48:	b	453f88 <sd_peer_get_unit+0x140>
  453f4c:	ldur	w0, [x29, #-8]
  453f50:	sub	x1, x29, #0x1c
  453f54:	bl	40ad90 <getpeercred@plt>
  453f58:	str	w0, [sp, #32]
  453f5c:	ldr	w8, [sp, #32]
  453f60:	cmp	w8, #0x0
  453f64:	cset	w8, ge  // ge = tcont
  453f68:	tbnz	w8, #0, 453f78 <sd_peer_get_unit+0x130>
  453f6c:	ldr	w8, [sp, #32]
  453f70:	stur	w8, [x29, #-4]
  453f74:	b	453f88 <sd_peer_get_unit+0x140>
  453f78:	ldur	w0, [x29, #-28]
  453f7c:	ldur	x1, [x29, #-16]
  453f80:	bl	40bc80 <cg_pid_get_unit@plt>
  453f84:	stur	w0, [x29, #-4]
  453f88:	ldur	w0, [x29, #-4]
  453f8c:	ldp	x29, x30, [sp, #64]
  453f90:	add	sp, sp, #0x50
  453f94:	ret

0000000000453f98 <sd_peer_get_user_unit>:
  453f98:	sub	sp, sp, #0x50
  453f9c:	stp	x29, x30, [sp, #64]
  453fa0:	add	x29, sp, #0x40
  453fa4:	mov	w8, #0x1                   	// #1
  453fa8:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  453fac:	add	x9, x9, #0x2c
  453fb0:	add	x9, x9, #0x3
  453fb4:	mov	w10, #0x0                   	// #0
  453fb8:	stur	w0, [x29, #-8]
  453fbc:	stur	x1, [x29, #-16]
  453fc0:	str	w8, [sp, #28]
  453fc4:	str	x9, [sp, #16]
  453fc8:	str	w10, [sp, #12]
  453fcc:	ldur	w8, [x29, #-8]
  453fd0:	cmp	w8, #0x0
  453fd4:	cset	w8, ge  // ge = tcont
  453fd8:	mov	w9, #0x1                   	// #1
  453fdc:	eor	w8, w8, #0x1
  453fe0:	eor	w8, w8, w9
  453fe4:	and	w8, w8, #0x1
  453fe8:	mov	w0, w8
  453fec:	sxtw	x10, w0
  453ff0:	cbz	x10, 454000 <sd_peer_get_user_unit+0x68>
  453ff4:	ldr	w8, [sp, #28]
  453ff8:	tbnz	w8, #0, 454034 <sd_peer_get_user_unit+0x9c>
  453ffc:	b	454028 <sd_peer_get_user_unit+0x90>
  454000:	mov	w0, #0x1                   	// #1
  454004:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454008:	add	x1, x1, #0x1a6
  45400c:	ldr	x2, [sp, #16]
  454010:	mov	w3, #0xb6                  	// #182
  454014:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454018:	add	x4, x4, #0x21f
  45401c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454020:	ldr	w8, [sp, #12]
  454024:	tbnz	w8, #0, 454034 <sd_peer_get_user_unit+0x9c>
  454028:	mov	w8, #0xfffffff7            	// #-9
  45402c:	stur	w8, [x29, #-4]
  454030:	b	4540d8 <sd_peer_get_user_unit+0x140>
  454034:	ldur	x8, [x29, #-16]
  454038:	cmp	x8, #0x0
  45403c:	cset	w9, ne  // ne = any
  454040:	mov	w10, #0x1                   	// #1
  454044:	eor	w9, w9, #0x1
  454048:	eor	w9, w9, w10
  45404c:	and	w9, w9, #0x1
  454050:	mov	w0, w9
  454054:	sxtw	x8, w0
  454058:	cbz	x8, 454068 <sd_peer_get_user_unit+0xd0>
  45405c:	ldr	w8, [sp, #28]
  454060:	tbnz	w8, #0, 45409c <sd_peer_get_user_unit+0x104>
  454064:	b	454090 <sd_peer_get_user_unit+0xf8>
  454068:	mov	w0, #0x1                   	// #1
  45406c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454070:	add	x1, x1, #0x9d
  454074:	ldr	x2, [sp, #16]
  454078:	mov	w3, #0xb7                  	// #183
  45407c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454080:	add	x4, x4, #0x21f
  454084:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454088:	ldr	w8, [sp, #12]
  45408c:	tbnz	w8, #0, 45409c <sd_peer_get_user_unit+0x104>
  454090:	mov	w8, #0xffffffea            	// #-22
  454094:	stur	w8, [x29, #-4]
  454098:	b	4540d8 <sd_peer_get_user_unit+0x140>
  45409c:	ldur	w0, [x29, #-8]
  4540a0:	sub	x1, x29, #0x1c
  4540a4:	bl	40ad90 <getpeercred@plt>
  4540a8:	str	w0, [sp, #32]
  4540ac:	ldr	w8, [sp, #32]
  4540b0:	cmp	w8, #0x0
  4540b4:	cset	w8, ge  // ge = tcont
  4540b8:	tbnz	w8, #0, 4540c8 <sd_peer_get_user_unit+0x130>
  4540bc:	ldr	w8, [sp, #32]
  4540c0:	stur	w8, [x29, #-4]
  4540c4:	b	4540d8 <sd_peer_get_user_unit+0x140>
  4540c8:	ldur	w0, [x29, #-28]
  4540cc:	ldur	x1, [x29, #-16]
  4540d0:	bl	40bc90 <cg_pid_get_user_unit@plt>
  4540d4:	stur	w0, [x29, #-4]
  4540d8:	ldur	w0, [x29, #-4]
  4540dc:	ldp	x29, x30, [sp, #64]
  4540e0:	add	sp, sp, #0x50
  4540e4:	ret

00000000004540e8 <sd_peer_get_machine_name>:
  4540e8:	sub	sp, sp, #0x50
  4540ec:	stp	x29, x30, [sp, #64]
  4540f0:	add	x29, sp, #0x40
  4540f4:	mov	w8, #0x1                   	// #1
  4540f8:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4540fc:	add	x9, x9, #0x2c
  454100:	add	x9, x9, #0x3
  454104:	mov	w10, #0x0                   	// #0
  454108:	stur	w0, [x29, #-8]
  45410c:	stur	x1, [x29, #-16]
  454110:	str	w8, [sp, #28]
  454114:	str	x9, [sp, #16]
  454118:	str	w10, [sp, #12]
  45411c:	ldur	w8, [x29, #-8]
  454120:	cmp	w8, #0x0
  454124:	cset	w8, ge  // ge = tcont
  454128:	mov	w9, #0x1                   	// #1
  45412c:	eor	w8, w8, #0x1
  454130:	eor	w8, w8, w9
  454134:	and	w8, w8, #0x1
  454138:	mov	w0, w8
  45413c:	sxtw	x10, w0
  454140:	cbz	x10, 454150 <sd_peer_get_machine_name+0x68>
  454144:	ldr	w8, [sp, #28]
  454148:	tbnz	w8, #0, 454184 <sd_peer_get_machine_name+0x9c>
  45414c:	b	454178 <sd_peer_get_machine_name+0x90>
  454150:	mov	w0, #0x1                   	// #1
  454154:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454158:	add	x1, x1, #0x1a6
  45415c:	ldr	x2, [sp, #16]
  454160:	mov	w3, #0xc4                  	// #196
  454164:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454168:	add	x4, x4, #0x247
  45416c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454170:	ldr	w8, [sp, #12]
  454174:	tbnz	w8, #0, 454184 <sd_peer_get_machine_name+0x9c>
  454178:	mov	w8, #0xfffffff7            	// #-9
  45417c:	stur	w8, [x29, #-4]
  454180:	b	454228 <sd_peer_get_machine_name+0x140>
  454184:	ldur	x8, [x29, #-16]
  454188:	cmp	x8, #0x0
  45418c:	cset	w9, ne  // ne = any
  454190:	mov	w10, #0x1                   	// #1
  454194:	eor	w9, w9, #0x1
  454198:	eor	w9, w9, w10
  45419c:	and	w9, w9, #0x1
  4541a0:	mov	w0, w9
  4541a4:	sxtw	x8, w0
  4541a8:	cbz	x8, 4541b8 <sd_peer_get_machine_name+0xd0>
  4541ac:	ldr	w8, [sp, #28]
  4541b0:	tbnz	w8, #0, 4541ec <sd_peer_get_machine_name+0x104>
  4541b4:	b	4541e0 <sd_peer_get_machine_name+0xf8>
  4541b8:	mov	w0, #0x1                   	// #1
  4541bc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4541c0:	add	x1, x1, #0x272
  4541c4:	ldr	x2, [sp, #16]
  4541c8:	mov	w3, #0xc5                  	// #197
  4541cc:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4541d0:	add	x4, x4, #0x247
  4541d4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4541d8:	ldr	w8, [sp, #12]
  4541dc:	tbnz	w8, #0, 4541ec <sd_peer_get_machine_name+0x104>
  4541e0:	mov	w8, #0xffffffea            	// #-22
  4541e4:	stur	w8, [x29, #-4]
  4541e8:	b	454228 <sd_peer_get_machine_name+0x140>
  4541ec:	ldur	w0, [x29, #-8]
  4541f0:	sub	x1, x29, #0x1c
  4541f4:	bl	40ad90 <getpeercred@plt>
  4541f8:	str	w0, [sp, #32]
  4541fc:	ldr	w8, [sp, #32]
  454200:	cmp	w8, #0x0
  454204:	cset	w8, ge  // ge = tcont
  454208:	tbnz	w8, #0, 454218 <sd_peer_get_machine_name+0x130>
  45420c:	ldr	w8, [sp, #32]
  454210:	stur	w8, [x29, #-4]
  454214:	b	454228 <sd_peer_get_machine_name+0x140>
  454218:	ldur	w0, [x29, #-28]
  45421c:	ldur	x1, [x29, #-16]
  454220:	bl	40bca0 <cg_pid_get_machine_name@plt>
  454224:	stur	w0, [x29, #-4]
  454228:	ldur	w0, [x29, #-4]
  45422c:	ldp	x29, x30, [sp, #64]
  454230:	add	sp, sp, #0x50
  454234:	ret

0000000000454238 <sd_peer_get_slice>:
  454238:	sub	sp, sp, #0x50
  45423c:	stp	x29, x30, [sp, #64]
  454240:	add	x29, sp, #0x40
  454244:	mov	w8, #0x1                   	// #1
  454248:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45424c:	add	x9, x9, #0x2c
  454250:	add	x9, x9, #0x3
  454254:	mov	w10, #0x0                   	// #0
  454258:	stur	w0, [x29, #-8]
  45425c:	stur	x1, [x29, #-16]
  454260:	str	w8, [sp, #28]
  454264:	str	x9, [sp, #16]
  454268:	str	w10, [sp, #12]
  45426c:	ldur	w8, [x29, #-8]
  454270:	cmp	w8, #0x0
  454274:	cset	w8, ge  // ge = tcont
  454278:	mov	w9, #0x1                   	// #1
  45427c:	eor	w8, w8, #0x1
  454280:	eor	w8, w8, w9
  454284:	and	w8, w8, #0x1
  454288:	mov	w0, w8
  45428c:	sxtw	x10, w0
  454290:	cbz	x10, 4542a0 <sd_peer_get_slice+0x68>
  454294:	ldr	w8, [sp, #28]
  454298:	tbnz	w8, #0, 4542d4 <sd_peer_get_slice+0x9c>
  45429c:	b	4542c8 <sd_peer_get_slice+0x90>
  4542a0:	mov	w0, #0x1                   	// #1
  4542a4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4542a8:	add	x1, x1, #0x1a6
  4542ac:	ldr	x2, [sp, #16]
  4542b0:	mov	w3, #0xd2                  	// #210
  4542b4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4542b8:	add	x4, x4, #0x27a
  4542bc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4542c0:	ldr	w8, [sp, #12]
  4542c4:	tbnz	w8, #0, 4542d4 <sd_peer_get_slice+0x9c>
  4542c8:	mov	w8, #0xfffffff7            	// #-9
  4542cc:	stur	w8, [x29, #-4]
  4542d0:	b	454378 <sd_peer_get_slice+0x140>
  4542d4:	ldur	x8, [x29, #-16]
  4542d8:	cmp	x8, #0x0
  4542dc:	cset	w9, ne  // ne = any
  4542e0:	mov	w10, #0x1                   	// #1
  4542e4:	eor	w9, w9, #0x1
  4542e8:	eor	w9, w9, w10
  4542ec:	and	w9, w9, #0x1
  4542f0:	mov	w0, w9
  4542f4:	sxtw	x8, w0
  4542f8:	cbz	x8, 454308 <sd_peer_get_slice+0xd0>
  4542fc:	ldr	w8, [sp, #28]
  454300:	tbnz	w8, #0, 45433c <sd_peer_get_slice+0x104>
  454304:	b	454330 <sd_peer_get_slice+0xf8>
  454308:	mov	w0, #0x1                   	// #1
  45430c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454310:	add	x1, x1, #0x11c
  454314:	ldr	x2, [sp, #16]
  454318:	mov	w3, #0xd3                  	// #211
  45431c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454320:	add	x4, x4, #0x27a
  454324:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454328:	ldr	w8, [sp, #12]
  45432c:	tbnz	w8, #0, 45433c <sd_peer_get_slice+0x104>
  454330:	mov	w8, #0xffffffea            	// #-22
  454334:	stur	w8, [x29, #-4]
  454338:	b	454378 <sd_peer_get_slice+0x140>
  45433c:	ldur	w0, [x29, #-8]
  454340:	sub	x1, x29, #0x1c
  454344:	bl	40ad90 <getpeercred@plt>
  454348:	str	w0, [sp, #32]
  45434c:	ldr	w8, [sp, #32]
  454350:	cmp	w8, #0x0
  454354:	cset	w8, ge  // ge = tcont
  454358:	tbnz	w8, #0, 454368 <sd_peer_get_slice+0x130>
  45435c:	ldr	w8, [sp, #32]
  454360:	stur	w8, [x29, #-4]
  454364:	b	454378 <sd_peer_get_slice+0x140>
  454368:	ldur	w0, [x29, #-28]
  45436c:	ldur	x1, [x29, #-16]
  454370:	bl	40bcb0 <cg_pid_get_slice@plt>
  454374:	stur	w0, [x29, #-4]
  454378:	ldur	w0, [x29, #-4]
  45437c:	ldp	x29, x30, [sp, #64]
  454380:	add	sp, sp, #0x50
  454384:	ret

0000000000454388 <sd_peer_get_user_slice>:
  454388:	sub	sp, sp, #0x50
  45438c:	stp	x29, x30, [sp, #64]
  454390:	add	x29, sp, #0x40
  454394:	mov	w8, #0x1                   	// #1
  454398:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45439c:	add	x9, x9, #0x2c
  4543a0:	add	x9, x9, #0x3
  4543a4:	mov	w10, #0x0                   	// #0
  4543a8:	stur	w0, [x29, #-8]
  4543ac:	stur	x1, [x29, #-16]
  4543b0:	str	w8, [sp, #28]
  4543b4:	str	x9, [sp, #16]
  4543b8:	str	w10, [sp, #12]
  4543bc:	ldur	w8, [x29, #-8]
  4543c0:	cmp	w8, #0x0
  4543c4:	cset	w8, ge  // ge = tcont
  4543c8:	mov	w9, #0x1                   	// #1
  4543cc:	eor	w8, w8, #0x1
  4543d0:	eor	w8, w8, w9
  4543d4:	and	w8, w8, #0x1
  4543d8:	mov	w0, w8
  4543dc:	sxtw	x10, w0
  4543e0:	cbz	x10, 4543f0 <sd_peer_get_user_slice+0x68>
  4543e4:	ldr	w8, [sp, #28]
  4543e8:	tbnz	w8, #0, 454424 <sd_peer_get_user_slice+0x9c>
  4543ec:	b	454418 <sd_peer_get_user_slice+0x90>
  4543f0:	mov	w0, #0x1                   	// #1
  4543f4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4543f8:	add	x1, x1, #0x1a6
  4543fc:	ldr	x2, [sp, #16]
  454400:	mov	w3, #0xe0                  	// #224
  454404:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454408:	add	x4, x4, #0x29e
  45440c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454410:	ldr	w8, [sp, #12]
  454414:	tbnz	w8, #0, 454424 <sd_peer_get_user_slice+0x9c>
  454418:	mov	w8, #0xfffffff7            	// #-9
  45441c:	stur	w8, [x29, #-4]
  454420:	b	4544c8 <sd_peer_get_user_slice+0x140>
  454424:	ldur	x8, [x29, #-16]
  454428:	cmp	x8, #0x0
  45442c:	cset	w9, ne  // ne = any
  454430:	mov	w10, #0x1                   	// #1
  454434:	eor	w9, w9, #0x1
  454438:	eor	w9, w9, w10
  45443c:	and	w9, w9, #0x1
  454440:	mov	w0, w9
  454444:	sxtw	x8, w0
  454448:	cbz	x8, 454458 <sd_peer_get_user_slice+0xd0>
  45444c:	ldr	w8, [sp, #28]
  454450:	tbnz	w8, #0, 45448c <sd_peer_get_user_slice+0x104>
  454454:	b	454480 <sd_peer_get_user_slice+0xf8>
  454458:	mov	w0, #0x1                   	// #1
  45445c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454460:	add	x1, x1, #0x11c
  454464:	ldr	x2, [sp, #16]
  454468:	mov	w3, #0xe1                  	// #225
  45446c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454470:	add	x4, x4, #0x29e
  454474:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454478:	ldr	w8, [sp, #12]
  45447c:	tbnz	w8, #0, 45448c <sd_peer_get_user_slice+0x104>
  454480:	mov	w8, #0xffffffea            	// #-22
  454484:	stur	w8, [x29, #-4]
  454488:	b	4544c8 <sd_peer_get_user_slice+0x140>
  45448c:	ldur	w0, [x29, #-8]
  454490:	sub	x1, x29, #0x1c
  454494:	bl	40ad90 <getpeercred@plt>
  454498:	str	w0, [sp, #32]
  45449c:	ldr	w8, [sp, #32]
  4544a0:	cmp	w8, #0x0
  4544a4:	cset	w8, ge  // ge = tcont
  4544a8:	tbnz	w8, #0, 4544b8 <sd_peer_get_user_slice+0x130>
  4544ac:	ldr	w8, [sp, #32]
  4544b0:	stur	w8, [x29, #-4]
  4544b4:	b	4544c8 <sd_peer_get_user_slice+0x140>
  4544b8:	ldur	w0, [x29, #-28]
  4544bc:	ldur	x1, [x29, #-16]
  4544c0:	bl	40bcc0 <cg_pid_get_user_slice@plt>
  4544c4:	stur	w0, [x29, #-4]
  4544c8:	ldur	w0, [x29, #-4]
  4544cc:	ldp	x29, x30, [sp, #64]
  4544d0:	add	sp, sp, #0x50
  4544d4:	ret

00000000004544d8 <sd_peer_get_cgroup>:
  4544d8:	sub	sp, sp, #0x50
  4544dc:	stp	x29, x30, [sp, #64]
  4544e0:	add	x29, sp, #0x40
  4544e4:	mov	w8, #0x1                   	// #1
  4544e8:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4544ec:	add	x9, x9, #0x2c
  4544f0:	add	x9, x9, #0x3
  4544f4:	mov	w10, #0x0                   	// #0
  4544f8:	stur	w0, [x29, #-8]
  4544fc:	stur	x1, [x29, #-16]
  454500:	str	w8, [sp, #28]
  454504:	str	x9, [sp, #16]
  454508:	str	w10, [sp, #12]
  45450c:	ldur	w8, [x29, #-8]
  454510:	cmp	w8, #0x0
  454514:	cset	w8, ge  // ge = tcont
  454518:	mov	w9, #0x1                   	// #1
  45451c:	eor	w8, w8, #0x1
  454520:	eor	w8, w8, w9
  454524:	and	w8, w8, #0x1
  454528:	mov	w0, w8
  45452c:	sxtw	x10, w0
  454530:	cbz	x10, 454540 <sd_peer_get_cgroup+0x68>
  454534:	ldr	w8, [sp, #28]
  454538:	tbnz	w8, #0, 454574 <sd_peer_get_cgroup+0x9c>
  45453c:	b	454568 <sd_peer_get_cgroup+0x90>
  454540:	mov	w0, #0x1                   	// #1
  454544:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454548:	add	x1, x1, #0x1a6
  45454c:	ldr	x2, [sp, #16]
  454550:	mov	w3, #0xee                  	// #238
  454554:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454558:	add	x4, x4, #0x2c7
  45455c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454560:	ldr	w8, [sp, #12]
  454564:	tbnz	w8, #0, 454574 <sd_peer_get_cgroup+0x9c>
  454568:	mov	w8, #0xfffffff7            	// #-9
  45456c:	stur	w8, [x29, #-4]
  454570:	b	454618 <sd_peer_get_cgroup+0x140>
  454574:	ldur	x8, [x29, #-16]
  454578:	cmp	x8, #0x0
  45457c:	cset	w9, ne  // ne = any
  454580:	mov	w10, #0x1                   	// #1
  454584:	eor	w9, w9, #0x1
  454588:	eor	w9, w9, w10
  45458c:	and	w9, w9, #0x1
  454590:	mov	w0, w9
  454594:	sxtw	x8, w0
  454598:	cbz	x8, 4545a8 <sd_peer_get_cgroup+0xd0>
  45459c:	ldr	w8, [sp, #28]
  4545a0:	tbnz	w8, #0, 4545dc <sd_peer_get_cgroup+0x104>
  4545a4:	b	4545d0 <sd_peer_get_cgroup+0xf8>
  4545a8:	mov	w0, #0x1                   	// #1
  4545ac:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4545b0:	add	x1, x1, #0x19f
  4545b4:	ldr	x2, [sp, #16]
  4545b8:	mov	w3, #0xef                  	// #239
  4545bc:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4545c0:	add	x4, x4, #0x2c7
  4545c4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4545c8:	ldr	w8, [sp, #12]
  4545cc:	tbnz	w8, #0, 4545dc <sd_peer_get_cgroup+0x104>
  4545d0:	mov	w8, #0xffffffea            	// #-22
  4545d4:	stur	w8, [x29, #-4]
  4545d8:	b	454618 <sd_peer_get_cgroup+0x140>
  4545dc:	ldur	w0, [x29, #-8]
  4545e0:	sub	x1, x29, #0x1c
  4545e4:	bl	40ad90 <getpeercred@plt>
  4545e8:	str	w0, [sp, #32]
  4545ec:	ldr	w8, [sp, #32]
  4545f0:	cmp	w8, #0x0
  4545f4:	cset	w8, ge  // ge = tcont
  4545f8:	tbnz	w8, #0, 454608 <sd_peer_get_cgroup+0x130>
  4545fc:	ldr	w8, [sp, #32]
  454600:	stur	w8, [x29, #-4]
  454604:	b	454618 <sd_peer_get_cgroup+0x140>
  454608:	ldur	w0, [x29, #-28]
  45460c:	ldur	x1, [x29, #-16]
  454610:	bl	4539cc <sd_pid_get_cgroup>
  454614:	stur	w0, [x29, #-4]
  454618:	ldur	w0, [x29, #-4]
  45461c:	ldp	x29, x30, [sp, #64]
  454620:	add	sp, sp, #0x50
  454624:	ret

0000000000454628 <sd_uid_get_state>:
  454628:	sub	sp, sp, #0x60
  45462c:	stp	x29, x30, [sp, #80]
  454630:	add	x29, sp, #0x50
  454634:	mov	x8, xzr
  454638:	mov	w9, #0x1                   	// #1
  45463c:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  454640:	add	x10, x10, #0x2c
  454644:	add	x2, x10, #0x3
  454648:	mov	w11, #0x0                   	// #0
  45464c:	stur	w0, [x29, #-8]
  454650:	stur	x1, [x29, #-16]
  454654:	stur	x8, [x29, #-24]
  454658:	stur	x8, [x29, #-32]
  45465c:	str	w9, [sp, #20]
  454660:	str	x2, [sp, #8]
  454664:	str	w11, [sp, #4]
  454668:	ldur	x8, [x29, #-16]
  45466c:	cmp	x8, #0x0
  454670:	cset	w9, ne  // ne = any
  454674:	mov	w10, #0x1                   	// #1
  454678:	eor	w9, w9, #0x1
  45467c:	eor	w9, w9, w10
  454680:	and	w9, w9, #0x1
  454684:	mov	w0, w9
  454688:	sxtw	x8, w0
  45468c:	cbz	x8, 45469c <sd_uid_get_state+0x74>
  454690:	ldr	w8, [sp, #20]
  454694:	tbnz	w8, #0, 4546d8 <sd_uid_get_state+0xb0>
  454698:	b	4546c4 <sd_uid_get_state+0x9c>
  45469c:	mov	w0, #0x1                   	// #1
  4546a0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4546a4:	add	x1, x1, #0x2ec
  4546a8:	ldr	x2, [sp, #8]
  4546ac:	mov	w3, #0x107                 	// #263
  4546b0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4546b4:	add	x4, x4, #0x2f2
  4546b8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4546bc:	ldr	w8, [sp, #4]
  4546c0:	tbnz	w8, #0, 4546d8 <sd_uid_get_state+0xb0>
  4546c4:	mov	w8, #0xffffffea            	// #-22
  4546c8:	stur	w8, [x29, #-4]
  4546cc:	mov	w8, #0x1                   	// #1
  4546d0:	str	w8, [sp, #40]
  4546d4:	b	4547f4 <sd_uid_get_state+0x1cc>
  4546d8:	ldur	w0, [x29, #-8]
  4546dc:	sub	x1, x29, #0x18
  4546e0:	bl	45483c <file_of_uid>
  4546e4:	stur	w0, [x29, #-36]
  4546e8:	ldur	w8, [x29, #-36]
  4546ec:	cmp	w8, #0x0
  4546f0:	cset	w8, ge  // ge = tcont
  4546f4:	tbnz	w8, #0, 45470c <sd_uid_get_state+0xe4>
  4546f8:	ldur	w8, [x29, #-36]
  4546fc:	stur	w8, [x29, #-4]
  454700:	mov	w8, #0x1                   	// #1
  454704:	str	w8, [sp, #40]
  454708:	b	4547f4 <sd_uid_get_state+0x1cc>
  45470c:	ldur	x1, [x29, #-24]
  454710:	mov	x8, xzr
  454714:	mov	x0, x8
  454718:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  45471c:	add	x2, x2, #0x317
  454720:	sub	x3, x29, #0x20
  454724:	mov	x4, x8
  454728:	bl	40bce0 <parse_env_file_sentinel@plt>
  45472c:	stur	w0, [x29, #-36]
  454730:	ldur	w9, [x29, #-36]
  454734:	mov	w10, #0xfffffffe            	// #-2
  454738:	cmp	w9, w10
  45473c:	b.ne	45477c <sd_uid_get_state+0x154>  // b.any
  454740:	sub	x0, x29, #0x20
  454744:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454748:	add	x1, x1, #0x31d
  45474c:	bl	40b220 <free_and_strdup@plt>
  454750:	stur	w0, [x29, #-36]
  454754:	ldur	w8, [x29, #-36]
  454758:	cmp	w8, #0x0
  45475c:	cset	w8, ge  // ge = tcont
  454760:	tbnz	w8, #0, 454778 <sd_uid_get_state+0x150>
  454764:	ldur	w8, [x29, #-36]
  454768:	stur	w8, [x29, #-4]
  45476c:	mov	w8, #0x1                   	// #1
  454770:	str	w8, [sp, #40]
  454774:	b	4547f4 <sd_uid_get_state+0x1cc>
  454778:	b	4547c4 <sd_uid_get_state+0x19c>
  45477c:	ldur	w8, [x29, #-36]
  454780:	cmp	w8, #0x0
  454784:	cset	w8, ge  // ge = tcont
  454788:	tbnz	w8, #0, 4547a0 <sd_uid_get_state+0x178>
  45478c:	ldur	w8, [x29, #-36]
  454790:	stur	w8, [x29, #-4]
  454794:	mov	w8, #0x1                   	// #1
  454798:	str	w8, [sp, #40]
  45479c:	b	4547f4 <sd_uid_get_state+0x1cc>
  4547a0:	ldur	x0, [x29, #-32]
  4547a4:	bl	453b60 <isempty>
  4547a8:	tbnz	w0, #0, 4547b0 <sd_uid_get_state+0x188>
  4547ac:	b	4547c4 <sd_uid_get_state+0x19c>
  4547b0:	mov	w8, #0xfffffffb            	// #-5
  4547b4:	stur	w8, [x29, #-4]
  4547b8:	mov	w8, #0x1                   	// #1
  4547bc:	str	w8, [sp, #40]
  4547c0:	b	4547f4 <sd_uid_get_state+0x1cc>
  4547c4:	ldur	x8, [x29, #-32]
  4547c8:	str	x8, [sp, #32]
  4547cc:	mov	x8, xzr
  4547d0:	stur	x8, [x29, #-32]
  4547d4:	ldr	x8, [sp, #32]
  4547d8:	str	x8, [sp, #24]
  4547dc:	ldr	x8, [sp, #24]
  4547e0:	ldur	x9, [x29, #-16]
  4547e4:	str	x8, [x9]
  4547e8:	stur	wzr, [x29, #-4]
  4547ec:	mov	w10, #0x1                   	// #1
  4547f0:	str	w10, [sp, #40]
  4547f4:	sub	x0, x29, #0x20
  4547f8:	bl	454814 <freep>
  4547fc:	sub	x0, x29, #0x18
  454800:	bl	454814 <freep>
  454804:	ldur	w0, [x29, #-4]
  454808:	ldp	x29, x30, [sp, #80]
  45480c:	add	sp, sp, #0x60
  454810:	ret

0000000000454814 <freep>:
  454814:	sub	sp, sp, #0x20
  454818:	stp	x29, x30, [sp, #16]
  45481c:	add	x29, sp, #0x10
  454820:	str	x0, [sp, #8]
  454824:	ldr	x8, [sp, #8]
  454828:	ldr	x0, [x8]
  45482c:	bl	40a530 <free@plt>
  454830:	ldp	x29, x30, [sp, #16]
  454834:	add	sp, sp, #0x20
  454838:	ret

000000000045483c <file_of_uid>:
  45483c:	sub	sp, sp, #0x40
  454840:	stp	x29, x30, [sp, #48]
  454844:	add	x29, sp, #0x30
  454848:	mov	w8, #0x1                   	// #1
  45484c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  454850:	add	x9, x9, #0x2c
  454854:	add	x9, x9, #0x3
  454858:	mov	w10, #0x0                   	// #0
  45485c:	stur	w0, [x29, #-8]
  454860:	stur	x1, [x29, #-16]
  454864:	stur	w8, [x29, #-20]
  454868:	str	x9, [sp, #16]
  45486c:	str	w10, [sp, #12]
  454870:	ldur	w0, [x29, #-8]
  454874:	bl	40b020 <uid_is_valid@plt>
  454878:	mov	w8, #0x1                   	// #1
  45487c:	eor	w9, w0, #0x1
  454880:	eor	w8, w9, w8
  454884:	and	w8, w8, #0x1
  454888:	mov	w1, w8
  45488c:	sxtw	x10, w1
  454890:	cbz	x10, 4548a0 <file_of_uid+0x64>
  454894:	ldur	w8, [x29, #-20]
  454898:	tbnz	w8, #0, 4548d4 <file_of_uid+0x98>
  45489c:	b	4548c8 <file_of_uid+0x8c>
  4548a0:	mov	w0, #0x1                   	// #1
  4548a4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4548a8:	add	x1, x1, #0x354
  4548ac:	ldr	x2, [sp, #16]
  4548b0:	mov	w3, #0xfa                  	// #250
  4548b4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4548b8:	add	x4, x4, #0x7a9
  4548bc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4548c0:	ldr	w8, [sp, #12]
  4548c4:	tbnz	w8, #0, 4548d4 <file_of_uid+0x98>
  4548c8:	mov	w8, #0xffffffea            	// #-22
  4548cc:	stur	w8, [x29, #-4]
  4548d0:	b	454950 <file_of_uid+0x114>
  4548d4:	ldur	x8, [x29, #-16]
  4548d8:	cmp	x8, #0x0
  4548dc:	cset	w9, ne  // ne = any
  4548e0:	mov	w10, #0x1                   	// #1
  4548e4:	eor	w9, w9, #0x1
  4548e8:	eor	w9, w9, w10
  4548ec:	eor	w9, w9, w10
  4548f0:	and	w9, w9, #0x1
  4548f4:	mov	w0, w9
  4548f8:	sxtw	x8, w0
  4548fc:	cbz	x8, 454920 <file_of_uid+0xe4>
  454900:	mov	w0, #0x1                   	// #1
  454904:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  454908:	add	x1, x1, #0xd19
  45490c:	ldr	x2, [sp, #16]
  454910:	mov	w3, #0xfb                  	// #251
  454914:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454918:	add	x4, x4, #0x7a9
  45491c:	bl	40a540 <log_assert_failed_realm@plt>
  454920:	ldur	x0, [x29, #-16]
  454924:	ldur	w2, [x29, #-8]
  454928:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45492c:	add	x1, x1, #0x7c9
  454930:	bl	40bcf0 <asprintf@plt>
  454934:	cmp	w0, #0x0
  454938:	cset	w8, ge  // ge = tcont
  45493c:	tbnz	w8, #0, 45494c <file_of_uid+0x110>
  454940:	mov	w8, #0xfffffff4            	// #-12
  454944:	stur	w8, [x29, #-4]
  454948:	b	454950 <file_of_uid+0x114>
  45494c:	stur	wzr, [x29, #-4]
  454950:	ldur	w0, [x29, #-4]
  454954:	ldp	x29, x30, [sp, #48]
  454958:	add	sp, sp, #0x40
  45495c:	ret

0000000000454960 <sd_uid_get_display>:
  454960:	sub	sp, sp, #0x60
  454964:	stp	x29, x30, [sp, #80]
  454968:	add	x29, sp, #0x50
  45496c:	mov	x8, xzr
  454970:	mov	w9, #0x1                   	// #1
  454974:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  454978:	add	x10, x10, #0x2c
  45497c:	add	x2, x10, #0x3
  454980:	mov	w11, #0x0                   	// #0
  454984:	stur	w0, [x29, #-8]
  454988:	stur	x1, [x29, #-16]
  45498c:	stur	x8, [x29, #-24]
  454990:	stur	x8, [x29, #-32]
  454994:	str	w9, [sp, #20]
  454998:	str	x2, [sp, #8]
  45499c:	str	w11, [sp, #4]
  4549a0:	ldur	x8, [x29, #-16]
  4549a4:	cmp	x8, #0x0
  4549a8:	cset	w9, ne  // ne = any
  4549ac:	mov	w10, #0x1                   	// #1
  4549b0:	eor	w9, w9, #0x1
  4549b4:	eor	w9, w9, w10
  4549b8:	and	w9, w9, #0x1
  4549bc:	mov	w0, w9
  4549c0:	sxtw	x8, w0
  4549c4:	cbz	x8, 4549d4 <sd_uid_get_display+0x74>
  4549c8:	ldr	w8, [sp, #20]
  4549cc:	tbnz	w8, #0, 454a10 <sd_uid_get_display+0xb0>
  4549d0:	b	4549fc <sd_uid_get_display+0x9c>
  4549d4:	mov	w0, #0x1                   	// #1
  4549d8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4549dc:	add	x1, x1, #0x69d
  4549e0:	ldr	x2, [sp, #8]
  4549e4:	mov	w3, #0x11f                 	// #287
  4549e8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4549ec:	add	x4, x4, #0x325
  4549f0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4549f4:	ldr	w8, [sp, #4]
  4549f8:	tbnz	w8, #0, 454a10 <sd_uid_get_display+0xb0>
  4549fc:	mov	w8, #0xffffffea            	// #-22
  454a00:	stur	w8, [x29, #-4]
  454a04:	mov	w8, #0x1                   	// #1
  454a08:	str	w8, [sp, #40]
  454a0c:	b	454b04 <sd_uid_get_display+0x1a4>
  454a10:	ldur	w0, [x29, #-8]
  454a14:	sub	x1, x29, #0x18
  454a18:	bl	45483c <file_of_uid>
  454a1c:	stur	w0, [x29, #-36]
  454a20:	ldur	w8, [x29, #-36]
  454a24:	cmp	w8, #0x0
  454a28:	cset	w8, ge  // ge = tcont
  454a2c:	tbnz	w8, #0, 454a44 <sd_uid_get_display+0xe4>
  454a30:	ldur	w8, [x29, #-36]
  454a34:	stur	w8, [x29, #-4]
  454a38:	mov	w8, #0x1                   	// #1
  454a3c:	str	w8, [sp, #40]
  454a40:	b	454b04 <sd_uid_get_display+0x1a4>
  454a44:	ldur	x1, [x29, #-24]
  454a48:	mov	x8, xzr
  454a4c:	mov	x0, x8
  454a50:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  454a54:	add	x2, x2, #0x34c
  454a58:	sub	x3, x29, #0x20
  454a5c:	mov	x4, x8
  454a60:	bl	40bce0 <parse_env_file_sentinel@plt>
  454a64:	stur	w0, [x29, #-36]
  454a68:	ldur	w9, [x29, #-36]
  454a6c:	mov	w10, #0xfffffffe            	// #-2
  454a70:	cmp	w9, w10
  454a74:	b.ne	454a8c <sd_uid_get_display+0x12c>  // b.any
  454a78:	mov	w8, #0xffffffc3            	// #-61
  454a7c:	stur	w8, [x29, #-4]
  454a80:	mov	w8, #0x1                   	// #1
  454a84:	str	w8, [sp, #40]
  454a88:	b	454b04 <sd_uid_get_display+0x1a4>
  454a8c:	ldur	w8, [x29, #-36]
  454a90:	cmp	w8, #0x0
  454a94:	cset	w8, ge  // ge = tcont
  454a98:	tbnz	w8, #0, 454ab0 <sd_uid_get_display+0x150>
  454a9c:	ldur	w8, [x29, #-36]
  454aa0:	stur	w8, [x29, #-4]
  454aa4:	mov	w8, #0x1                   	// #1
  454aa8:	str	w8, [sp, #40]
  454aac:	b	454b04 <sd_uid_get_display+0x1a4>
  454ab0:	ldur	x0, [x29, #-32]
  454ab4:	bl	453b60 <isempty>
  454ab8:	tbnz	w0, #0, 454ac0 <sd_uid_get_display+0x160>
  454abc:	b	454ad4 <sd_uid_get_display+0x174>
  454ac0:	mov	w8, #0xffffffc3            	// #-61
  454ac4:	stur	w8, [x29, #-4]
  454ac8:	mov	w8, #0x1                   	// #1
  454acc:	str	w8, [sp, #40]
  454ad0:	b	454b04 <sd_uid_get_display+0x1a4>
  454ad4:	ldur	x8, [x29, #-32]
  454ad8:	str	x8, [sp, #32]
  454adc:	mov	x8, xzr
  454ae0:	stur	x8, [x29, #-32]
  454ae4:	ldr	x8, [sp, #32]
  454ae8:	str	x8, [sp, #24]
  454aec:	ldr	x8, [sp, #24]
  454af0:	ldur	x9, [x29, #-16]
  454af4:	str	x8, [x9]
  454af8:	stur	wzr, [x29, #-4]
  454afc:	mov	w10, #0x1                   	// #1
  454b00:	str	w10, [sp, #40]
  454b04:	sub	x0, x29, #0x20
  454b08:	bl	454814 <freep>
  454b0c:	sub	x0, x29, #0x18
  454b10:	bl	454814 <freep>
  454b14:	ldur	w0, [x29, #-4]
  454b18:	ldp	x29, x30, [sp, #80]
  454b1c:	add	sp, sp, #0x60
  454b20:	ret

0000000000454b24 <sd_uid_is_on_seat>:
  454b24:	sub	sp, sp, #0x80
  454b28:	stp	x29, x30, [sp, #112]
  454b2c:	add	x29, sp, #0x70
  454b30:	mov	x8, xzr
  454b34:	mov	w9, #0x1                   	// #1
  454b38:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  454b3c:	add	x10, x10, #0x2c
  454b40:	add	x10, x10, #0x3
  454b44:	mov	w11, #0x0                   	// #0
  454b48:	stur	w0, [x29, #-8]
  454b4c:	stur	w1, [x29, #-12]
  454b50:	stur	x2, [x29, #-24]
  454b54:	stur	x8, [x29, #-32]
  454b58:	stur	x8, [x29, #-40]
  454b5c:	stur	x8, [x29, #-48]
  454b60:	str	w9, [sp, #16]
  454b64:	str	x10, [sp, #8]
  454b68:	str	w11, [sp, #4]
  454b6c:	ldur	w0, [x29, #-8]
  454b70:	bl	40b020 <uid_is_valid@plt>
  454b74:	mov	w8, #0x1                   	// #1
  454b78:	eor	w9, w0, #0x1
  454b7c:	eor	w8, w9, w8
  454b80:	and	w8, w8, #0x1
  454b84:	mov	w1, w8
  454b88:	sxtw	x10, w1
  454b8c:	cbz	x10, 454b9c <sd_uid_is_on_seat+0x78>
  454b90:	ldr	w8, [sp, #16]
  454b94:	tbnz	w8, #0, 454bd8 <sd_uid_is_on_seat+0xb4>
  454b98:	b	454bc4 <sd_uid_is_on_seat+0xa0>
  454b9c:	mov	w0, #0x1                   	// #1
  454ba0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454ba4:	add	x1, x1, #0x354
  454ba8:	ldr	x2, [sp, #8]
  454bac:	mov	w3, #0x153                 	// #339
  454bb0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454bb4:	add	x4, x4, #0x366
  454bb8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  454bbc:	ldr	w8, [sp, #4]
  454bc0:	tbnz	w8, #0, 454bd8 <sd_uid_is_on_seat+0xb4>
  454bc4:	mov	w8, #0xffffffea            	// #-22
  454bc8:	stur	w8, [x29, #-4]
  454bcc:	mov	w8, #0x1                   	// #1
  454bd0:	str	w8, [sp, #20]
  454bd4:	b	454d68 <sd_uid_is_on_seat+0x244>
  454bd8:	ldur	x0, [x29, #-24]
  454bdc:	sub	x1, x29, #0x30
  454be0:	bl	454d90 <file_of_seat>
  454be4:	str	w0, [sp, #52]
  454be8:	ldr	w8, [sp, #52]
  454bec:	cmp	w8, #0x0
  454bf0:	cset	w8, ge  // ge = tcont
  454bf4:	tbnz	w8, #0, 454c0c <sd_uid_is_on_seat+0xe8>
  454bf8:	ldr	w8, [sp, #52]
  454bfc:	stur	w8, [x29, #-4]
  454c00:	mov	w8, #0x1                   	// #1
  454c04:	str	w8, [sp, #20]
  454c08:	b	454d68 <sd_uid_is_on_seat+0x244>
  454c0c:	ldur	w8, [x29, #-12]
  454c10:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  454c14:	add	x9, x9, #0x3a1
  454c18:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  454c1c:	add	x10, x10, #0x396
  454c20:	cmp	w8, #0x0
  454c24:	csel	x9, x10, x9, ne  // ne = any
  454c28:	str	x9, [sp, #32]
  454c2c:	ldur	x1, [x29, #-48]
  454c30:	ldr	x2, [sp, #32]
  454c34:	mov	x9, xzr
  454c38:	mov	x0, x9
  454c3c:	sub	x3, x29, #0x28
  454c40:	mov	x4, x9
  454c44:	bl	40bce0 <parse_env_file_sentinel@plt>
  454c48:	str	w0, [sp, #52]
  454c4c:	ldr	w8, [sp, #52]
  454c50:	mov	w11, #0xfffffffe            	// #-2
  454c54:	cmp	w8, w11
  454c58:	b.ne	454c6c <sd_uid_is_on_seat+0x148>  // b.any
  454c5c:	stur	wzr, [x29, #-4]
  454c60:	mov	w8, #0x1                   	// #1
  454c64:	str	w8, [sp, #20]
  454c68:	b	454d68 <sd_uid_is_on_seat+0x244>
  454c6c:	ldr	w8, [sp, #52]
  454c70:	cmp	w8, #0x0
  454c74:	cset	w8, ge  // ge = tcont
  454c78:	tbnz	w8, #0, 454c90 <sd_uid_is_on_seat+0x16c>
  454c7c:	ldr	w8, [sp, #52]
  454c80:	stur	w8, [x29, #-4]
  454c84:	mov	w8, #0x1                   	// #1
  454c88:	str	w8, [sp, #20]
  454c8c:	b	454d68 <sd_uid_is_on_seat+0x244>
  454c90:	ldur	x0, [x29, #-40]
  454c94:	bl	453b60 <isempty>
  454c98:	tbnz	w0, #0, 454ca0 <sd_uid_is_on_seat+0x17c>
  454c9c:	b	454cb0 <sd_uid_is_on_seat+0x18c>
  454ca0:	stur	wzr, [x29, #-4]
  454ca4:	mov	w8, #0x1                   	// #1
  454ca8:	str	w8, [sp, #20]
  454cac:	b	454d68 <sd_uid_is_on_seat+0x244>
  454cb0:	ldur	w2, [x29, #-8]
  454cb4:	sub	x0, x29, #0x20
  454cb8:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  454cbc:	add	x1, x1, #0x5b4
  454cc0:	bl	40bcf0 <asprintf@plt>
  454cc4:	cmp	w0, #0x0
  454cc8:	cset	w8, ge  // ge = tcont
  454ccc:	tbnz	w8, #0, 454ce4 <sd_uid_is_on_seat+0x1c0>
  454cd0:	mov	w8, #0xfffffff4            	// #-12
  454cd4:	stur	w8, [x29, #-4]
  454cd8:	mov	w8, #0x1                   	// #1
  454cdc:	str	w8, [sp, #20]
  454ce0:	b	454d68 <sd_uid_is_on_seat+0x244>
  454ce4:	ldur	x8, [x29, #-40]
  454ce8:	add	x0, sp, #0x18
  454cec:	str	x8, [sp, #24]
  454cf0:	add	x1, sp, #0x38
  454cf4:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  454cf8:	add	x2, x2, #0x5b7
  454cfc:	mov	w9, wzr
  454d00:	mov	w3, w9
  454d04:	bl	40b8b0 <split@plt>
  454d08:	str	x0, [sp, #40]
  454d0c:	ldr	x8, [sp, #40]
  454d10:	cbz	x8, 454d5c <sd_uid_is_on_seat+0x238>
  454d14:	ldur	x0, [x29, #-32]
  454d18:	ldr	x1, [sp, #40]
  454d1c:	ldr	x2, [sp, #56]
  454d20:	bl	40a810 <strncmp@plt>
  454d24:	cbnz	w0, 454d38 <sd_uid_is_on_seat+0x214>
  454d28:	mov	w8, #0x1                   	// #1
  454d2c:	stur	w8, [x29, #-4]
  454d30:	str	w8, [sp, #20]
  454d34:	b	454d68 <sd_uid_is_on_seat+0x244>
  454d38:	add	x0, sp, #0x18
  454d3c:	add	x1, sp, #0x38
  454d40:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  454d44:	add	x2, x2, #0x5b7
  454d48:	mov	w8, wzr
  454d4c:	mov	w3, w8
  454d50:	bl	40b8b0 <split@plt>
  454d54:	str	x0, [sp, #40]
  454d58:	b	454d0c <sd_uid_is_on_seat+0x1e8>
  454d5c:	stur	wzr, [x29, #-4]
  454d60:	mov	w8, #0x1                   	// #1
  454d64:	str	w8, [sp, #20]
  454d68:	sub	x0, x29, #0x30
  454d6c:	bl	454814 <freep>
  454d70:	sub	x0, x29, #0x28
  454d74:	bl	454814 <freep>
  454d78:	sub	x0, x29, #0x20
  454d7c:	bl	454814 <freep>
  454d80:	ldur	w0, [x29, #-4]
  454d84:	ldp	x29, x30, [sp, #112]
  454d88:	add	sp, sp, #0x80
  454d8c:	ret

0000000000454d90 <file_of_seat>:
  454d90:	sub	sp, sp, #0x60
  454d94:	stp	x29, x30, [sp, #80]
  454d98:	add	x29, sp, #0x50
  454d9c:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  454da0:	add	x8, x8, #0x2c
  454da4:	add	x2, x8, #0x3
  454da8:	stur	x0, [x29, #-16]
  454dac:	stur	x1, [x29, #-24]
  454db0:	str	x2, [sp]
  454db4:	ldur	x8, [x29, #-24]
  454db8:	cmp	x8, #0x0
  454dbc:	cset	w9, ne  // ne = any
  454dc0:	mov	w10, #0x1                   	// #1
  454dc4:	eor	w9, w9, #0x1
  454dc8:	eor	w9, w9, w10
  454dcc:	eor	w9, w9, w10
  454dd0:	and	w9, w9, #0x1
  454dd4:	mov	w0, w9
  454dd8:	sxtw	x8, w0
  454ddc:	cbz	x8, 454e00 <file_of_seat+0x70>
  454de0:	mov	w0, #0x1                   	// #1
  454de4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454de8:	add	x1, x1, #0x7df
  454dec:	ldr	x2, [sp]
  454df0:	mov	w3, #0x136                 	// #310
  454df4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454df8:	add	x4, x4, #0x7e2
  454dfc:	bl	40a540 <log_assert_failed_realm@plt>
  454e00:	ldur	x8, [x29, #-16]
  454e04:	cbz	x8, 454e40 <file_of_seat+0xb0>
  454e08:	ldur	x0, [x29, #-16]
  454e0c:	bl	40bd00 <filename_is_valid@plt>
  454e10:	tbnz	w0, #0, 454e20 <file_of_seat+0x90>
  454e14:	mov	w8, #0xffffffea            	// #-22
  454e18:	stur	w8, [x29, #-4]
  454e1c:	b	454ef0 <file_of_seat+0x160>
  454e20:	ldur	x1, [x29, #-16]
  454e24:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  454e28:	add	x0, x0, #0x80a
  454e2c:	mov	x8, #0xffffffffffffffff    	// #-1
  454e30:	mov	x2, x8
  454e34:	bl	40af50 <path_join_internal@plt>
  454e38:	stur	x0, [x29, #-32]
  454e3c:	b	454eb4 <file_of_seat+0x124>
  454e40:	add	x1, sp, #0x20
  454e44:	mov	x8, xzr
  454e48:	str	x8, [sp, #32]
  454e4c:	mov	x0, x8
  454e50:	bl	4558c8 <sd_session_get_seat>
  454e54:	stur	w0, [x29, #-36]
  454e58:	ldur	w9, [x29, #-36]
  454e5c:	cmp	w9, #0x0
  454e60:	cset	w9, ge  // ge = tcont
  454e64:	tbnz	w9, #0, 454e7c <file_of_seat+0xec>
  454e68:	ldur	w8, [x29, #-36]
  454e6c:	stur	w8, [x29, #-4]
  454e70:	mov	w8, #0x1                   	// #1
  454e74:	str	w8, [sp, #28]
  454e78:	b	454e9c <file_of_seat+0x10c>
  454e7c:	ldr	x1, [sp, #32]
  454e80:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  454e84:	add	x0, x0, #0x80a
  454e88:	mov	x8, #0xffffffffffffffff    	// #-1
  454e8c:	mov	x2, x8
  454e90:	bl	40af50 <path_join_internal@plt>
  454e94:	stur	x0, [x29, #-32]
  454e98:	str	wzr, [sp, #28]
  454e9c:	add	x0, sp, #0x20
  454ea0:	bl	454814 <freep>
  454ea4:	ldr	w8, [sp, #28]
  454ea8:	cbz	w8, 454eb4 <file_of_seat+0x124>
  454eac:	b	454eb0 <file_of_seat+0x120>
  454eb0:	b	454ef0 <file_of_seat+0x160>
  454eb4:	ldur	x8, [x29, #-32]
  454eb8:	cbnz	x8, 454ec8 <file_of_seat+0x138>
  454ebc:	mov	w8, #0xfffffff4            	// #-12
  454ec0:	stur	w8, [x29, #-4]
  454ec4:	b	454ef0 <file_of_seat+0x160>
  454ec8:	ldur	x8, [x29, #-32]
  454ecc:	str	x8, [sp, #16]
  454ed0:	mov	x8, xzr
  454ed4:	stur	x8, [x29, #-32]
  454ed8:	ldr	x8, [sp, #16]
  454edc:	str	x8, [sp, #8]
  454ee0:	ldr	x8, [sp, #8]
  454ee4:	ldur	x9, [x29, #-24]
  454ee8:	str	x8, [x9]
  454eec:	stur	wzr, [x29, #-4]
  454ef0:	ldur	w0, [x29, #-4]
  454ef4:	ldp	x29, x30, [sp, #80]
  454ef8:	add	sp, sp, #0x60
  454efc:	ret

0000000000454f00 <sd_uid_get_sessions>:
  454f00:	sub	sp, sp, #0x30
  454f04:	stp	x29, x30, [sp, #32]
  454f08:	add	x29, sp, #0x20
  454f0c:	stur	w0, [x29, #-4]
  454f10:	stur	w1, [x29, #-8]
  454f14:	str	x2, [sp, #16]
  454f18:	ldur	w0, [x29, #-4]
  454f1c:	ldur	w8, [x29, #-8]
  454f20:	str	w0, [sp, #12]
  454f24:	cbnz	w8, 454f38 <sd_uid_get_sessions+0x38>
  454f28:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  454f2c:	add	x8, x8, #0x3a6
  454f30:	str	x8, [sp]
  454f34:	b	454f58 <sd_uid_get_sessions+0x58>
  454f38:	ldur	w8, [x29, #-8]
  454f3c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  454f40:	add	x9, x9, #0x3c6
  454f44:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  454f48:	add	x10, x10, #0x3b6
  454f4c:	cmp	w8, #0x0
  454f50:	csel	x9, x10, x9, gt
  454f54:	str	x9, [sp]
  454f58:	ldr	x8, [sp]
  454f5c:	ldr	x2, [sp, #16]
  454f60:	ldr	w0, [sp, #12]
  454f64:	mov	x1, x8
  454f68:	bl	454f78 <uid_get_array>
  454f6c:	ldp	x29, x30, [sp, #32]
  454f70:	add	sp, sp, #0x30
  454f74:	ret

0000000000454f78 <uid_get_array>:
  454f78:	sub	sp, sp, #0x50
  454f7c:	stp	x29, x30, [sp, #64]
  454f80:	add	x29, sp, #0x40
  454f84:	mov	x8, xzr
  454f88:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  454f8c:	add	x9, x9, #0x2c
  454f90:	add	x9, x9, #0x3
  454f94:	stur	w0, [x29, #-8]
  454f98:	stur	x1, [x29, #-16]
  454f9c:	stur	x2, [x29, #-24]
  454fa0:	str	x8, [sp, #32]
  454fa4:	str	x8, [sp, #24]
  454fa8:	str	x9, [sp]
  454fac:	ldur	x8, [x29, #-16]
  454fb0:	cmp	x8, #0x0
  454fb4:	cset	w9, ne  // ne = any
  454fb8:	mov	w10, #0x1                   	// #1
  454fbc:	eor	w9, w9, #0x1
  454fc0:	eor	w9, w9, w10
  454fc4:	eor	w9, w9, w10
  454fc8:	and	w9, w9, #0x1
  454fcc:	mov	w0, w9
  454fd0:	sxtw	x8, w0
  454fd4:	cbz	x8, 454ff8 <uid_get_array+0x80>
  454fd8:	mov	w0, #0x1                   	// #1
  454fdc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  454fe0:	add	x1, x1, #0x81d
  454fe4:	ldr	x2, [sp]
  454fe8:	mov	w3, #0x172                 	// #370
  454fec:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  454ff0:	add	x4, x4, #0x826
  454ff4:	bl	40a540 <log_assert_failed_realm@plt>
  454ff8:	ldur	w0, [x29, #-8]
  454ffc:	add	x1, sp, #0x20
  455000:	bl	45483c <file_of_uid>
  455004:	str	w0, [sp, #12]
  455008:	ldr	w8, [sp, #12]
  45500c:	cmp	w8, #0x0
  455010:	cset	w8, ge  // ge = tcont
  455014:	tbnz	w8, #0, 45502c <uid_get_array+0xb4>
  455018:	ldr	w8, [sp, #12]
  45501c:	stur	w8, [x29, #-4]
  455020:	mov	w8, #0x1                   	// #1
  455024:	str	w8, [sp, #8]
  455028:	b	45513c <uid_get_array+0x1c4>
  45502c:	ldr	x1, [sp, #32]
  455030:	ldur	x2, [x29, #-16]
  455034:	mov	x8, xzr
  455038:	mov	x0, x8
  45503c:	add	x3, sp, #0x18
  455040:	mov	x4, x8
  455044:	bl	40bce0 <parse_env_file_sentinel@plt>
  455048:	str	w0, [sp, #12]
  45504c:	ldr	w9, [sp, #12]
  455050:	mov	w10, #0xfffffffe            	// #-2
  455054:	cmp	w9, w10
  455058:	b.eq	45507c <uid_get_array+0x104>  // b.none
  45505c:	ldr	w8, [sp, #12]
  455060:	cmp	w8, #0x0
  455064:	cset	w8, lt  // lt = tstop
  455068:	tbnz	w8, #0, 4550a0 <uid_get_array+0x128>
  45506c:	ldr	x0, [sp, #24]
  455070:	bl	453b60 <isempty>
  455074:	tbnz	w0, #0, 45507c <uid_get_array+0x104>
  455078:	b	4550a0 <uid_get_array+0x128>
  45507c:	ldur	x8, [x29, #-24]
  455080:	cbz	x8, 455090 <uid_get_array+0x118>
  455084:	ldur	x8, [x29, #-24]
  455088:	mov	x9, xzr
  45508c:	str	x9, [x8]
  455090:	stur	wzr, [x29, #-4]
  455094:	mov	w8, #0x1                   	// #1
  455098:	str	w8, [sp, #8]
  45509c:	b	45513c <uid_get_array+0x1c4>
  4550a0:	ldr	w8, [sp, #12]
  4550a4:	cmp	w8, #0x0
  4550a8:	cset	w8, ge  // ge = tcont
  4550ac:	tbnz	w8, #0, 4550c4 <uid_get_array+0x14c>
  4550b0:	ldr	w8, [sp, #12]
  4550b4:	stur	w8, [x29, #-4]
  4550b8:	mov	w8, #0x1                   	// #1
  4550bc:	str	w8, [sp, #8]
  4550c0:	b	45513c <uid_get_array+0x1c4>
  4550c4:	ldr	x0, [sp, #24]
  4550c8:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4550cc:	add	x1, x1, #0x61e
  4550d0:	bl	4565a0 <strv_split>
  4550d4:	str	x0, [sp, #16]
  4550d8:	ldr	x8, [sp, #16]
  4550dc:	cbnz	x8, 4550f4 <uid_get_array+0x17c>
  4550e0:	mov	w8, #0xfffffff4            	// #-12
  4550e4:	stur	w8, [x29, #-4]
  4550e8:	mov	w8, #0x1                   	// #1
  4550ec:	str	w8, [sp, #8]
  4550f0:	b	45513c <uid_get_array+0x1c4>
  4550f4:	ldr	x0, [sp, #16]
  4550f8:	bl	40bd10 <strv_uniq@plt>
  4550fc:	ldr	x8, [sp, #16]
  455100:	mov	x0, x8
  455104:	bl	40b5d0 <strv_length@plt>
  455108:	str	w0, [sp, #12]
  45510c:	ldur	x8, [x29, #-24]
  455110:	cbz	x8, 455124 <uid_get_array+0x1ac>
  455114:	ldr	x8, [sp, #16]
  455118:	ldur	x9, [x29, #-24]
  45511c:	str	x8, [x9]
  455120:	b	45512c <uid_get_array+0x1b4>
  455124:	ldr	x0, [sp, #16]
  455128:	bl	40afa0 <strv_free@plt>
  45512c:	ldr	w8, [sp, #12]
  455130:	stur	w8, [x29, #-4]
  455134:	mov	w8, #0x1                   	// #1
  455138:	str	w8, [sp, #8]
  45513c:	add	x0, sp, #0x18
  455140:	bl	454814 <freep>
  455144:	add	x0, sp, #0x20
  455148:	bl	454814 <freep>
  45514c:	ldur	w0, [x29, #-4]
  455150:	ldp	x29, x30, [sp, #64]
  455154:	add	sp, sp, #0x50
  455158:	ret

000000000045515c <sd_uid_get_seats>:
  45515c:	sub	sp, sp, #0x30
  455160:	stp	x29, x30, [sp, #32]
  455164:	add	x29, sp, #0x20
  455168:	stur	w0, [x29, #-4]
  45516c:	stur	w1, [x29, #-8]
  455170:	str	x2, [sp, #16]
  455174:	ldur	w0, [x29, #-4]
  455178:	ldur	w8, [x29, #-8]
  45517c:	str	w0, [sp, #12]
  455180:	cbnz	w8, 455194 <sd_uid_get_seats+0x38>
  455184:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455188:	add	x8, x8, #0x3cf
  45518c:	str	x8, [sp]
  455190:	b	4551b4 <sd_uid_get_seats+0x58>
  455194:	ldur	w8, [x29, #-8]
  455198:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45519c:	add	x9, x9, #0x3e9
  4551a0:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  4551a4:	add	x10, x10, #0x3dc
  4551a8:	cmp	w8, #0x0
  4551ac:	csel	x9, x10, x9, gt
  4551b0:	str	x9, [sp]
  4551b4:	ldr	x8, [sp]
  4551b8:	ldr	x2, [sp, #16]
  4551bc:	ldr	w0, [sp, #12]
  4551c0:	mov	x1, x8
  4551c4:	bl	454f78 <uid_get_array>
  4551c8:	ldp	x29, x30, [sp, #32]
  4551cc:	add	sp, sp, #0x30
  4551d0:	ret

00000000004551d4 <sd_session_is_active>:
  4551d4:	sub	sp, sp, #0x40
  4551d8:	stp	x29, x30, [sp, #48]
  4551dc:	add	x29, sp, #0x30
  4551e0:	mov	x8, xzr
  4551e4:	add	x1, sp, #0x18
  4551e8:	stur	x0, [x29, #-16]
  4551ec:	str	x8, [sp, #24]
  4551f0:	str	x8, [sp, #16]
  4551f4:	ldur	x0, [x29, #-16]
  4551f8:	bl	4552e8 <file_of_session>
  4551fc:	str	w0, [sp, #12]
  455200:	ldr	w9, [sp, #12]
  455204:	cmp	w9, #0x0
  455208:	cset	w9, ge  // ge = tcont
  45520c:	tbnz	w9, #0, 455224 <sd_session_is_active+0x50>
  455210:	ldr	w8, [sp, #12]
  455214:	stur	w8, [x29, #-4]
  455218:	mov	w8, #0x1                   	// #1
  45521c:	str	w8, [sp, #8]
  455220:	b	4552c8 <sd_session_is_active+0xf4>
  455224:	ldr	x1, [sp, #24]
  455228:	mov	x8, xzr
  45522c:	mov	x0, x8
  455230:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  455234:	add	x2, x2, #0x3ef
  455238:	add	x3, sp, #0x10
  45523c:	mov	x4, x8
  455240:	bl	40bce0 <parse_env_file_sentinel@plt>
  455244:	str	w0, [sp, #12]
  455248:	ldr	w9, [sp, #12]
  45524c:	mov	w10, #0xfffffffe            	// #-2
  455250:	cmp	w9, w10
  455254:	b.ne	45526c <sd_session_is_active+0x98>  // b.any
  455258:	mov	w8, #0xfffffffa            	// #-6
  45525c:	stur	w8, [x29, #-4]
  455260:	mov	w8, #0x1                   	// #1
  455264:	str	w8, [sp, #8]
  455268:	b	4552c8 <sd_session_is_active+0xf4>
  45526c:	ldr	w8, [sp, #12]
  455270:	cmp	w8, #0x0
  455274:	cset	w8, ge  // ge = tcont
  455278:	tbnz	w8, #0, 455290 <sd_session_is_active+0xbc>
  45527c:	ldr	w8, [sp, #12]
  455280:	stur	w8, [x29, #-4]
  455284:	mov	w8, #0x1                   	// #1
  455288:	str	w8, [sp, #8]
  45528c:	b	4552c8 <sd_session_is_active+0xf4>
  455290:	ldr	x0, [sp, #16]
  455294:	bl	453b60 <isempty>
  455298:	tbnz	w0, #0, 4552a0 <sd_session_is_active+0xcc>
  45529c:	b	4552b4 <sd_session_is_active+0xe0>
  4552a0:	mov	w8, #0xfffffffb            	// #-5
  4552a4:	stur	w8, [x29, #-4]
  4552a8:	mov	w8, #0x1                   	// #1
  4552ac:	str	w8, [sp, #8]
  4552b0:	b	4552c8 <sd_session_is_active+0xf4>
  4552b4:	ldr	x0, [sp, #16]
  4552b8:	bl	40bd20 <parse_boolean@plt>
  4552bc:	stur	w0, [x29, #-4]
  4552c0:	mov	w8, #0x1                   	// #1
  4552c4:	str	w8, [sp, #8]
  4552c8:	add	x0, sp, #0x10
  4552cc:	bl	454814 <freep>
  4552d0:	add	x0, sp, #0x18
  4552d4:	bl	454814 <freep>
  4552d8:	ldur	w0, [x29, #-4]
  4552dc:	ldp	x29, x30, [sp, #48]
  4552e0:	add	sp, sp, #0x40
  4552e4:	ret

00000000004552e8 <file_of_session>:
  4552e8:	sub	sp, sp, #0x50
  4552ec:	stp	x29, x30, [sp, #64]
  4552f0:	add	x29, sp, #0x40
  4552f4:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  4552f8:	add	x8, x8, #0x2c
  4552fc:	add	x2, x8, #0x3
  455300:	stur	x0, [x29, #-16]
  455304:	stur	x1, [x29, #-24]
  455308:	str	x2, [sp]
  45530c:	ldur	x8, [x29, #-24]
  455310:	cmp	x8, #0x0
  455314:	cset	w9, ne  // ne = any
  455318:	mov	w10, #0x1                   	// #1
  45531c:	eor	w9, w9, #0x1
  455320:	eor	w9, w9, w10
  455324:	eor	w9, w9, w10
  455328:	and	w9, w9, #0x1
  45532c:	mov	w0, w9
  455330:	sxtw	x8, w0
  455334:	cbz	x8, 455358 <file_of_session+0x70>
  455338:	mov	w0, #0x1                   	// #1
  45533c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455340:	add	x1, x1, #0x7df
  455344:	ldr	x2, [sp]
  455348:	mov	w3, #0x1a6                 	// #422
  45534c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  455350:	add	x4, x4, #0x857
  455354:	bl	40a540 <log_assert_failed_realm@plt>
  455358:	ldur	x8, [x29, #-16]
  45535c:	cbz	x8, 455398 <file_of_session+0xb0>
  455360:	ldur	x0, [x29, #-16]
  455364:	bl	40bd30 <session_id_valid@plt>
  455368:	tbnz	w0, #0, 455378 <file_of_session+0x90>
  45536c:	mov	w8, #0xffffffea            	// #-22
  455370:	stur	w8, [x29, #-4]
  455374:	b	455434 <file_of_session+0x14c>
  455378:	ldur	x1, [x29, #-16]
  45537c:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  455380:	add	x0, x0, #0x882
  455384:	mov	x8, #0xffffffffffffffff    	// #-1
  455388:	mov	x2, x8
  45538c:	bl	40af50 <path_join_internal@plt>
  455390:	str	x0, [sp, #32]
  455394:	b	455410 <file_of_session+0x128>
  455398:	add	x1, sp, #0x10
  45539c:	mov	x8, xzr
  4553a0:	str	x8, [sp, #16]
  4553a4:	mov	w9, wzr
  4553a8:	mov	w0, w9
  4553ac:	bl	452e6c <sd_pid_get_session>
  4553b0:	str	w0, [sp, #28]
  4553b4:	ldr	w9, [sp, #28]
  4553b8:	cmp	w9, #0x0
  4553bc:	cset	w9, ge  // ge = tcont
  4553c0:	tbnz	w9, #0, 4553d8 <file_of_session+0xf0>
  4553c4:	ldr	w8, [sp, #28]
  4553c8:	stur	w8, [x29, #-4]
  4553cc:	mov	w8, #0x1                   	// #1
  4553d0:	str	w8, [sp, #12]
  4553d4:	b	4553f8 <file_of_session+0x110>
  4553d8:	ldr	x1, [sp, #16]
  4553dc:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  4553e0:	add	x0, x0, #0x882
  4553e4:	mov	x8, #0xffffffffffffffff    	// #-1
  4553e8:	mov	x2, x8
  4553ec:	bl	40af50 <path_join_internal@plt>
  4553f0:	str	x0, [sp, #32]
  4553f4:	str	wzr, [sp, #12]
  4553f8:	add	x0, sp, #0x10
  4553fc:	bl	454814 <freep>
  455400:	ldr	w8, [sp, #12]
  455404:	cbz	w8, 455410 <file_of_session+0x128>
  455408:	b	45540c <file_of_session+0x124>
  45540c:	b	455434 <file_of_session+0x14c>
  455410:	ldr	x8, [sp, #32]
  455414:	cbnz	x8, 455424 <file_of_session+0x13c>
  455418:	mov	w8, #0xfffffff4            	// #-12
  45541c:	stur	w8, [x29, #-4]
  455420:	b	455434 <file_of_session+0x14c>
  455424:	ldr	x8, [sp, #32]
  455428:	ldur	x9, [x29, #-24]
  45542c:	str	x8, [x9]
  455430:	stur	wzr, [x29, #-4]
  455434:	ldur	w0, [x29, #-4]
  455438:	ldp	x29, x30, [sp, #64]
  45543c:	add	sp, sp, #0x50
  455440:	ret

0000000000455444 <sd_session_is_remote>:
  455444:	sub	sp, sp, #0x40
  455448:	stp	x29, x30, [sp, #48]
  45544c:	add	x29, sp, #0x30
  455450:	mov	x8, xzr
  455454:	add	x1, sp, #0x18
  455458:	stur	x0, [x29, #-16]
  45545c:	str	x8, [sp, #24]
  455460:	str	x8, [sp, #16]
  455464:	ldur	x0, [x29, #-16]
  455468:	bl	4552e8 <file_of_session>
  45546c:	str	w0, [sp, #12]
  455470:	ldr	w9, [sp, #12]
  455474:	cmp	w9, #0x0
  455478:	cset	w9, ge  // ge = tcont
  45547c:	tbnz	w9, #0, 455494 <sd_session_is_remote+0x50>
  455480:	ldr	w8, [sp, #12]
  455484:	stur	w8, [x29, #-4]
  455488:	mov	w8, #0x1                   	// #1
  45548c:	str	w8, [sp, #8]
  455490:	b	455538 <sd_session_is_remote+0xf4>
  455494:	ldr	x1, [sp, #24]
  455498:	mov	x8, xzr
  45549c:	mov	x0, x8
  4554a0:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  4554a4:	add	x2, x2, #0x3f6
  4554a8:	add	x3, sp, #0x10
  4554ac:	mov	x4, x8
  4554b0:	bl	40bce0 <parse_env_file_sentinel@plt>
  4554b4:	str	w0, [sp, #12]
  4554b8:	ldr	w9, [sp, #12]
  4554bc:	mov	w10, #0xfffffffe            	// #-2
  4554c0:	cmp	w9, w10
  4554c4:	b.ne	4554dc <sd_session_is_remote+0x98>  // b.any
  4554c8:	mov	w8, #0xfffffffa            	// #-6
  4554cc:	stur	w8, [x29, #-4]
  4554d0:	mov	w8, #0x1                   	// #1
  4554d4:	str	w8, [sp, #8]
  4554d8:	b	455538 <sd_session_is_remote+0xf4>
  4554dc:	ldr	w8, [sp, #12]
  4554e0:	cmp	w8, #0x0
  4554e4:	cset	w8, ge  // ge = tcont
  4554e8:	tbnz	w8, #0, 455500 <sd_session_is_remote+0xbc>
  4554ec:	ldr	w8, [sp, #12]
  4554f0:	stur	w8, [x29, #-4]
  4554f4:	mov	w8, #0x1                   	// #1
  4554f8:	str	w8, [sp, #8]
  4554fc:	b	455538 <sd_session_is_remote+0xf4>
  455500:	ldr	x0, [sp, #16]
  455504:	bl	453b60 <isempty>
  455508:	tbnz	w0, #0, 455510 <sd_session_is_remote+0xcc>
  45550c:	b	455524 <sd_session_is_remote+0xe0>
  455510:	mov	w8, #0xffffffc3            	// #-61
  455514:	stur	w8, [x29, #-4]
  455518:	mov	w8, #0x1                   	// #1
  45551c:	str	w8, [sp, #8]
  455520:	b	455538 <sd_session_is_remote+0xf4>
  455524:	ldr	x0, [sp, #16]
  455528:	bl	40bd20 <parse_boolean@plt>
  45552c:	stur	w0, [x29, #-4]
  455530:	mov	w8, #0x1                   	// #1
  455534:	str	w8, [sp, #8]
  455538:	add	x0, sp, #0x10
  45553c:	bl	454814 <freep>
  455540:	add	x0, sp, #0x18
  455544:	bl	454814 <freep>
  455548:	ldur	w0, [x29, #-4]
  45554c:	ldp	x29, x30, [sp, #48]
  455550:	add	sp, sp, #0x40
  455554:	ret

0000000000455558 <sd_session_get_state>:
  455558:	sub	sp, sp, #0x70
  45555c:	stp	x29, x30, [sp, #96]
  455560:	add	x29, sp, #0x60
  455564:	mov	x8, xzr
  455568:	mov	w9, #0x1                   	// #1
  45556c:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455570:	add	x10, x10, #0x2c
  455574:	add	x2, x10, #0x3
  455578:	mov	w11, #0x0                   	// #0
  45557c:	stur	x0, [x29, #-16]
  455580:	stur	x1, [x29, #-24]
  455584:	stur	x8, [x29, #-32]
  455588:	stur	x8, [x29, #-40]
  45558c:	str	w9, [sp, #28]
  455590:	str	x2, [sp, #16]
  455594:	str	w11, [sp, #12]
  455598:	ldur	x8, [x29, #-24]
  45559c:	cmp	x8, #0x0
  4555a0:	cset	w9, ne  // ne = any
  4555a4:	mov	w10, #0x1                   	// #1
  4555a8:	eor	w9, w9, #0x1
  4555ac:	eor	w9, w9, w10
  4555b0:	and	w9, w9, #0x1
  4555b4:	mov	w0, w9
  4555b8:	sxtw	x8, w0
  4555bc:	cbz	x8, 4555cc <sd_session_get_state+0x74>
  4555c0:	ldr	w8, [sp, #28]
  4555c4:	tbnz	w8, #0, 455608 <sd_session_get_state+0xb0>
  4555c8:	b	4555f4 <sd_session_get_state+0x9c>
  4555cc:	mov	w0, #0x1                   	// #1
  4555d0:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4555d4:	add	x1, x1, #0x2ec
  4555d8:	ldr	x2, [sp, #16]
  4555dc:	mov	w3, #0x1e8                 	// #488
  4555e0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4555e4:	add	x4, x4, #0x3fd
  4555e8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4555ec:	ldr	w8, [sp, #12]
  4555f0:	tbnz	w8, #0, 455608 <sd_session_get_state+0xb0>
  4555f4:	mov	w8, #0xffffffea            	// #-22
  4555f8:	stur	w8, [x29, #-4]
  4555fc:	mov	w8, #0x1                   	// #1
  455600:	str	w8, [sp, #48]
  455604:	b	4556fc <sd_session_get_state+0x1a4>
  455608:	ldur	x0, [x29, #-16]
  45560c:	sub	x1, x29, #0x20
  455610:	bl	4552e8 <file_of_session>
  455614:	stur	w0, [x29, #-44]
  455618:	ldur	w8, [x29, #-44]
  45561c:	cmp	w8, #0x0
  455620:	cset	w8, ge  // ge = tcont
  455624:	tbnz	w8, #0, 45563c <sd_session_get_state+0xe4>
  455628:	ldur	w8, [x29, #-44]
  45562c:	stur	w8, [x29, #-4]
  455630:	mov	w8, #0x1                   	// #1
  455634:	str	w8, [sp, #48]
  455638:	b	4556fc <sd_session_get_state+0x1a4>
  45563c:	ldur	x1, [x29, #-32]
  455640:	mov	x8, xzr
  455644:	mov	x0, x8
  455648:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  45564c:	add	x2, x2, #0x317
  455650:	sub	x3, x29, #0x28
  455654:	mov	x4, x8
  455658:	bl	40bce0 <parse_env_file_sentinel@plt>
  45565c:	stur	w0, [x29, #-44]
  455660:	ldur	w9, [x29, #-44]
  455664:	mov	w10, #0xfffffffe            	// #-2
  455668:	cmp	w9, w10
  45566c:	b.ne	455684 <sd_session_get_state+0x12c>  // b.any
  455670:	mov	w8, #0xfffffffa            	// #-6
  455674:	stur	w8, [x29, #-4]
  455678:	mov	w8, #0x1                   	// #1
  45567c:	str	w8, [sp, #48]
  455680:	b	4556fc <sd_session_get_state+0x1a4>
  455684:	ldur	w8, [x29, #-44]
  455688:	cmp	w8, #0x0
  45568c:	cset	w8, ge  // ge = tcont
  455690:	tbnz	w8, #0, 4556a8 <sd_session_get_state+0x150>
  455694:	ldur	w8, [x29, #-44]
  455698:	stur	w8, [x29, #-4]
  45569c:	mov	w8, #0x1                   	// #1
  4556a0:	str	w8, [sp, #48]
  4556a4:	b	4556fc <sd_session_get_state+0x1a4>
  4556a8:	ldur	x0, [x29, #-40]
  4556ac:	bl	453b60 <isempty>
  4556b0:	tbnz	w0, #0, 4556b8 <sd_session_get_state+0x160>
  4556b4:	b	4556cc <sd_session_get_state+0x174>
  4556b8:	mov	w8, #0xfffffffb            	// #-5
  4556bc:	stur	w8, [x29, #-4]
  4556c0:	mov	w8, #0x1                   	// #1
  4556c4:	str	w8, [sp, #48]
  4556c8:	b	4556fc <sd_session_get_state+0x1a4>
  4556cc:	ldur	x8, [x29, #-40]
  4556d0:	str	x8, [sp, #40]
  4556d4:	mov	x8, xzr
  4556d8:	stur	x8, [x29, #-40]
  4556dc:	ldr	x8, [sp, #40]
  4556e0:	str	x8, [sp, #32]
  4556e4:	ldr	x8, [sp, #32]
  4556e8:	ldur	x9, [x29, #-24]
  4556ec:	str	x8, [x9]
  4556f0:	stur	wzr, [x29, #-4]
  4556f4:	mov	w10, #0x1                   	// #1
  4556f8:	str	w10, [sp, #48]
  4556fc:	sub	x0, x29, #0x28
  455700:	bl	454814 <freep>
  455704:	sub	x0, x29, #0x20
  455708:	bl	454814 <freep>
  45570c:	ldur	w0, [x29, #-4]
  455710:	ldp	x29, x30, [sp, #96]
  455714:	add	sp, sp, #0x70
  455718:	ret

000000000045571c <sd_session_get_uid>:
  45571c:	sub	sp, sp, #0x60
  455720:	stp	x29, x30, [sp, #80]
  455724:	add	x29, sp, #0x50
  455728:	mov	x8, xzr
  45572c:	mov	w9, #0x1                   	// #1
  455730:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455734:	add	x10, x10, #0x2c
  455738:	add	x2, x10, #0x3
  45573c:	mov	w11, #0x0                   	// #0
  455740:	stur	x0, [x29, #-16]
  455744:	stur	x1, [x29, #-24]
  455748:	str	x8, [sp, #40]
  45574c:	str	x8, [sp, #32]
  455750:	str	w9, [sp, #24]
  455754:	str	x2, [sp, #16]
  455758:	str	w11, [sp, #12]
  45575c:	ldur	x8, [x29, #-24]
  455760:	cmp	x8, #0x0
  455764:	cset	w9, ne  // ne = any
  455768:	mov	w10, #0x1                   	// #1
  45576c:	eor	w9, w9, #0x1
  455770:	eor	w9, w9, w10
  455774:	and	w9, w9, #0x1
  455778:	mov	w0, w9
  45577c:	sxtw	x8, w0
  455780:	cbz	x8, 455790 <sd_session_get_uid+0x74>
  455784:	ldr	w8, [sp, #24]
  455788:	tbnz	w8, #0, 4557cc <sd_session_get_uid+0xb0>
  45578c:	b	4557b8 <sd_session_get_uid+0x9c>
  455790:	mov	w0, #0x1                   	// #1
  455794:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455798:	add	x1, x1, #0x175
  45579c:	ldr	x2, [sp, #16]
  4557a0:	mov	w3, #0x1ff                 	// #511
  4557a4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4557a8:	add	x4, x4, #0x42d
  4557ac:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4557b0:	ldr	w8, [sp, #12]
  4557b4:	tbnz	w8, #0, 4557cc <sd_session_get_uid+0xb0>
  4557b8:	mov	w8, #0xffffffea            	// #-22
  4557bc:	stur	w8, [x29, #-4]
  4557c0:	mov	w8, #0x1                   	// #1
  4557c4:	str	w8, [sp, #28]
  4557c8:	b	4558a8 <sd_session_get_uid+0x18c>
  4557cc:	ldur	x0, [x29, #-16]
  4557d0:	add	x1, sp, #0x28
  4557d4:	bl	4552e8 <file_of_session>
  4557d8:	stur	w0, [x29, #-28]
  4557dc:	ldur	w8, [x29, #-28]
  4557e0:	cmp	w8, #0x0
  4557e4:	cset	w8, ge  // ge = tcont
  4557e8:	tbnz	w8, #0, 455800 <sd_session_get_uid+0xe4>
  4557ec:	ldur	w8, [x29, #-28]
  4557f0:	stur	w8, [x29, #-4]
  4557f4:	mov	w8, #0x1                   	// #1
  4557f8:	str	w8, [sp, #28]
  4557fc:	b	4558a8 <sd_session_get_uid+0x18c>
  455800:	ldr	x1, [sp, #40]
  455804:	mov	x8, xzr
  455808:	mov	x0, x8
  45580c:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  455810:	add	x2, x2, #0x45b
  455814:	add	x3, sp, #0x20
  455818:	mov	x4, x8
  45581c:	bl	40bce0 <parse_env_file_sentinel@plt>
  455820:	stur	w0, [x29, #-28]
  455824:	ldur	w9, [x29, #-28]
  455828:	mov	w10, #0xfffffffe            	// #-2
  45582c:	cmp	w9, w10
  455830:	b.ne	455848 <sd_session_get_uid+0x12c>  // b.any
  455834:	mov	w8, #0xfffffffa            	// #-6
  455838:	stur	w8, [x29, #-4]
  45583c:	mov	w8, #0x1                   	// #1
  455840:	str	w8, [sp, #28]
  455844:	b	4558a8 <sd_session_get_uid+0x18c>
  455848:	ldur	w8, [x29, #-28]
  45584c:	cmp	w8, #0x0
  455850:	cset	w8, ge  // ge = tcont
  455854:	tbnz	w8, #0, 45586c <sd_session_get_uid+0x150>
  455858:	ldur	w8, [x29, #-28]
  45585c:	stur	w8, [x29, #-4]
  455860:	mov	w8, #0x1                   	// #1
  455864:	str	w8, [sp, #28]
  455868:	b	4558a8 <sd_session_get_uid+0x18c>
  45586c:	ldr	x0, [sp, #32]
  455870:	bl	453b60 <isempty>
  455874:	tbnz	w0, #0, 45587c <sd_session_get_uid+0x160>
  455878:	b	455890 <sd_session_get_uid+0x174>
  45587c:	mov	w8, #0xfffffffb            	// #-5
  455880:	stur	w8, [x29, #-4]
  455884:	mov	w8, #0x1                   	// #1
  455888:	str	w8, [sp, #28]
  45588c:	b	4558a8 <sd_session_get_uid+0x18c>
  455890:	ldr	x0, [sp, #32]
  455894:	ldur	x1, [x29, #-24]
  455898:	bl	40b320 <parse_uid@plt>
  45589c:	stur	w0, [x29, #-4]
  4558a0:	mov	w8, #0x1                   	// #1
  4558a4:	str	w8, [sp, #28]
  4558a8:	add	x0, sp, #0x20
  4558ac:	bl	454814 <freep>
  4558b0:	add	x0, sp, #0x28
  4558b4:	bl	454814 <freep>
  4558b8:	ldur	w0, [x29, #-4]
  4558bc:	ldp	x29, x30, [sp, #80]
  4558c0:	add	sp, sp, #0x60
  4558c4:	ret

00000000004558c8 <sd_session_get_seat>:
  4558c8:	sub	sp, sp, #0x20
  4558cc:	stp	x29, x30, [sp, #16]
  4558d0:	add	x29, sp, #0x10
  4558d4:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  4558d8:	add	x8, x8, #0x45f
  4558dc:	str	x0, [sp, #8]
  4558e0:	str	x1, [sp]
  4558e4:	ldr	x0, [sp, #8]
  4558e8:	ldr	x2, [sp]
  4558ec:	mov	x1, x8
  4558f0:	bl	455900 <session_get_string>
  4558f4:	ldp	x29, x30, [sp, #16]
  4558f8:	add	sp, sp, #0x20
  4558fc:	ret

0000000000455900 <session_get_string>:
  455900:	sub	sp, sp, #0x70
  455904:	stp	x29, x30, [sp, #96]
  455908:	add	x29, sp, #0x60
  45590c:	mov	x8, xzr
  455910:	mov	w9, #0x1                   	// #1
  455914:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455918:	add	x10, x10, #0x2c
  45591c:	add	x10, x10, #0x3
  455920:	mov	w11, #0x0                   	// #0
  455924:	stur	x0, [x29, #-16]
  455928:	stur	x1, [x29, #-24]
  45592c:	stur	x2, [x29, #-32]
  455930:	stur	x8, [x29, #-40]
  455934:	str	x8, [sp, #48]
  455938:	str	w9, [sp, #20]
  45593c:	str	x10, [sp, #8]
  455940:	str	w11, [sp, #4]
  455944:	ldur	x8, [x29, #-32]
  455948:	cmp	x8, #0x0
  45594c:	cset	w9, ne  // ne = any
  455950:	mov	w10, #0x1                   	// #1
  455954:	eor	w9, w9, #0x1
  455958:	eor	w9, w9, w10
  45595c:	and	w9, w9, #0x1
  455960:	mov	w0, w9
  455964:	sxtw	x8, w0
  455968:	cbz	x8, 455978 <session_get_string+0x78>
  45596c:	ldr	w8, [sp, #20]
  455970:	tbnz	w8, #0, 4559b4 <session_get_string+0xb4>
  455974:	b	4559a0 <session_get_string+0xa0>
  455978:	mov	w0, #0x1                   	// #1
  45597c:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  455980:	add	x1, x1, #0x336
  455984:	ldr	x2, [sp, #8]
  455988:	mov	w3, #0x214                 	// #532
  45598c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  455990:	add	x4, x4, #0x898
  455994:	bl	40ad60 <log_assert_failed_return_realm@plt>
  455998:	ldr	w8, [sp, #4]
  45599c:	tbnz	w8, #0, 4559b4 <session_get_string+0xb4>
  4559a0:	mov	w8, #0xffffffea            	// #-22
  4559a4:	stur	w8, [x29, #-4]
  4559a8:	mov	w8, #0x1                   	// #1
  4559ac:	str	w8, [sp, #40]
  4559b0:	b	455af0 <session_get_string+0x1f0>
  4559b4:	ldur	x8, [x29, #-24]
  4559b8:	cmp	x8, #0x0
  4559bc:	cset	w9, ne  // ne = any
  4559c0:	mov	w10, #0x1                   	// #1
  4559c4:	eor	w9, w9, #0x1
  4559c8:	eor	w9, w9, w10
  4559cc:	eor	w9, w9, w10
  4559d0:	and	w9, w9, #0x1
  4559d4:	mov	w0, w9
  4559d8:	sxtw	x8, w0
  4559dc:	cbz	x8, 455a00 <session_get_string+0x100>
  4559e0:	mov	w0, #0x1                   	// #1
  4559e4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4559e8:	add	x1, x1, #0x8d4
  4559ec:	ldr	x2, [sp, #8]
  4559f0:	mov	w3, #0x215                 	// #533
  4559f4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4559f8:	add	x4, x4, #0x898
  4559fc:	bl	40a540 <log_assert_failed_realm@plt>
  455a00:	ldur	x0, [x29, #-16]
  455a04:	sub	x1, x29, #0x28
  455a08:	bl	4552e8 <file_of_session>
  455a0c:	str	w0, [sp, #44]
  455a10:	ldr	w8, [sp, #44]
  455a14:	cmp	w8, #0x0
  455a18:	cset	w8, ge  // ge = tcont
  455a1c:	tbnz	w8, #0, 455a34 <session_get_string+0x134>
  455a20:	ldr	w8, [sp, #44]
  455a24:	stur	w8, [x29, #-4]
  455a28:	mov	w8, #0x1                   	// #1
  455a2c:	str	w8, [sp, #40]
  455a30:	b	455af0 <session_get_string+0x1f0>
  455a34:	ldur	x1, [x29, #-40]
  455a38:	ldur	x2, [x29, #-24]
  455a3c:	mov	x8, xzr
  455a40:	mov	x0, x8
  455a44:	add	x3, sp, #0x30
  455a48:	mov	x4, x8
  455a4c:	bl	40bce0 <parse_env_file_sentinel@plt>
  455a50:	str	w0, [sp, #44]
  455a54:	ldr	w9, [sp, #44]
  455a58:	mov	w10, #0xfffffffe            	// #-2
  455a5c:	cmp	w9, w10
  455a60:	b.ne	455a78 <session_get_string+0x178>  // b.any
  455a64:	mov	w8, #0xfffffffa            	// #-6
  455a68:	stur	w8, [x29, #-4]
  455a6c:	mov	w8, #0x1                   	// #1
  455a70:	str	w8, [sp, #40]
  455a74:	b	455af0 <session_get_string+0x1f0>
  455a78:	ldr	w8, [sp, #44]
  455a7c:	cmp	w8, #0x0
  455a80:	cset	w8, ge  // ge = tcont
  455a84:	tbnz	w8, #0, 455a9c <session_get_string+0x19c>
  455a88:	ldr	w8, [sp, #44]
  455a8c:	stur	w8, [x29, #-4]
  455a90:	mov	w8, #0x1                   	// #1
  455a94:	str	w8, [sp, #40]
  455a98:	b	455af0 <session_get_string+0x1f0>
  455a9c:	ldr	x0, [sp, #48]
  455aa0:	bl	453b60 <isempty>
  455aa4:	tbnz	w0, #0, 455aac <session_get_string+0x1ac>
  455aa8:	b	455ac0 <session_get_string+0x1c0>
  455aac:	mov	w8, #0xffffffc3            	// #-61
  455ab0:	stur	w8, [x29, #-4]
  455ab4:	mov	w8, #0x1                   	// #1
  455ab8:	str	w8, [sp, #40]
  455abc:	b	455af0 <session_get_string+0x1f0>
  455ac0:	ldr	x8, [sp, #48]
  455ac4:	str	x8, [sp, #32]
  455ac8:	mov	x8, xzr
  455acc:	str	x8, [sp, #48]
  455ad0:	ldr	x8, [sp, #32]
  455ad4:	str	x8, [sp, #24]
  455ad8:	ldr	x8, [sp, #24]
  455adc:	ldur	x9, [x29, #-32]
  455ae0:	str	x8, [x9]
  455ae4:	stur	wzr, [x29, #-4]
  455ae8:	mov	w10, #0x1                   	// #1
  455aec:	str	w10, [sp, #40]
  455af0:	add	x0, sp, #0x30
  455af4:	bl	454814 <freep>
  455af8:	sub	x0, x29, #0x28
  455afc:	bl	454814 <freep>
  455b00:	ldur	w0, [x29, #-4]
  455b04:	ldp	x29, x30, [sp, #96]
  455b08:	add	sp, sp, #0x70
  455b0c:	ret

0000000000455b10 <sd_session_get_tty>:
  455b10:	sub	sp, sp, #0x20
  455b14:	stp	x29, x30, [sp, #16]
  455b18:	add	x29, sp, #0x10
  455b1c:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455b20:	add	x8, x8, #0x464
  455b24:	str	x0, [sp, #8]
  455b28:	str	x1, [sp]
  455b2c:	ldr	x0, [sp, #8]
  455b30:	ldr	x2, [sp]
  455b34:	mov	x1, x8
  455b38:	bl	455900 <session_get_string>
  455b3c:	ldp	x29, x30, [sp, #16]
  455b40:	add	sp, sp, #0x20
  455b44:	ret

0000000000455b48 <sd_session_get_vt>:
  455b48:	sub	sp, sp, #0x50
  455b4c:	stp	x29, x30, [sp, #64]
  455b50:	add	x29, sp, #0x40
  455b54:	mov	x8, xzr
  455b58:	mov	w9, #0x1                   	// #1
  455b5c:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455b60:	add	x10, x10, #0x2c
  455b64:	add	x2, x10, #0x3
  455b68:	mov	w11, #0x0                   	// #0
  455b6c:	stur	x0, [x29, #-16]
  455b70:	stur	x1, [x29, #-24]
  455b74:	str	x8, [sp, #32]
  455b78:	str	w9, [sp, #16]
  455b7c:	str	x2, [sp, #8]
  455b80:	str	w11, [sp, #4]
  455b84:	ldur	x8, [x29, #-24]
  455b88:	cmp	x8, #0x0
  455b8c:	cset	w9, ne  // ne = any
  455b90:	mov	w10, #0x1                   	// #1
  455b94:	eor	w9, w9, #0x1
  455b98:	eor	w9, w9, w10
  455b9c:	and	w9, w9, #0x1
  455ba0:	mov	w0, w9
  455ba4:	sxtw	x8, w0
  455ba8:	cbz	x8, 455bb8 <sd_session_get_vt+0x70>
  455bac:	ldr	w8, [sp, #16]
  455bb0:	tbnz	w8, #0, 455bf4 <sd_session_get_vt+0xac>
  455bb4:	b	455be0 <sd_session_get_vt+0x98>
  455bb8:	mov	w0, #0x1                   	// #1
  455bbc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455bc0:	add	x1, x1, #0x468
  455bc4:	ldr	x2, [sp, #8]
  455bc8:	mov	w3, #0x234                 	// #564
  455bcc:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  455bd0:	add	x4, x4, #0x46d
  455bd4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  455bd8:	ldr	w8, [sp, #4]
  455bdc:	tbnz	w8, #0, 455bf4 <sd_session_get_vt+0xac>
  455be0:	mov	w8, #0xffffffea            	// #-22
  455be4:	stur	w8, [x29, #-4]
  455be8:	mov	w8, #0x1                   	// #1
  455bec:	str	w8, [sp, #20]
  455bf0:	b	455c7c <sd_session_get_vt+0x134>
  455bf4:	ldur	x0, [x29, #-16]
  455bf8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455bfc:	add	x1, x1, #0x4a1
  455c00:	add	x2, sp, #0x20
  455c04:	bl	455900 <session_get_string>
  455c08:	str	w0, [sp, #24]
  455c0c:	ldr	w8, [sp, #24]
  455c10:	cmp	w8, #0x0
  455c14:	cset	w8, ge  // ge = tcont
  455c18:	tbnz	w8, #0, 455c30 <sd_session_get_vt+0xe8>
  455c1c:	ldr	w8, [sp, #24]
  455c20:	stur	w8, [x29, #-4]
  455c24:	mov	w8, #0x1                   	// #1
  455c28:	str	w8, [sp, #20]
  455c2c:	b	455c7c <sd_session_get_vt+0x134>
  455c30:	ldr	x0, [sp, #32]
  455c34:	add	x1, sp, #0x1c
  455c38:	bl	455c94 <safe_atou>
  455c3c:	str	w0, [sp, #24]
  455c40:	ldr	w8, [sp, #24]
  455c44:	cmp	w8, #0x0
  455c48:	cset	w8, ge  // ge = tcont
  455c4c:	tbnz	w8, #0, 455c64 <sd_session_get_vt+0x11c>
  455c50:	ldr	w8, [sp, #24]
  455c54:	stur	w8, [x29, #-4]
  455c58:	mov	w8, #0x1                   	// #1
  455c5c:	str	w8, [sp, #20]
  455c60:	b	455c7c <sd_session_get_vt+0x134>
  455c64:	ldr	w8, [sp, #28]
  455c68:	ldur	x9, [x29, #-24]
  455c6c:	str	w8, [x9]
  455c70:	stur	wzr, [x29, #-4]
  455c74:	mov	w8, #0x1                   	// #1
  455c78:	str	w8, [sp, #20]
  455c7c:	add	x0, sp, #0x20
  455c80:	bl	454814 <freep>
  455c84:	ldur	w0, [x29, #-4]
  455c88:	ldp	x29, x30, [sp, #64]
  455c8c:	add	sp, sp, #0x50
  455c90:	ret

0000000000455c94 <safe_atou>:
  455c94:	sub	sp, sp, #0x20
  455c98:	stp	x29, x30, [sp, #16]
  455c9c:	add	x29, sp, #0x10
  455ca0:	mov	w8, wzr
  455ca4:	str	x0, [sp, #8]
  455ca8:	str	x1, [sp]
  455cac:	ldr	x0, [sp, #8]
  455cb0:	ldr	x2, [sp]
  455cb4:	mov	w1, w8
  455cb8:	bl	40a7e0 <safe_atou_full@plt>
  455cbc:	ldp	x29, x30, [sp, #16]
  455cc0:	add	sp, sp, #0x20
  455cc4:	ret

0000000000455cc8 <sd_session_get_service>:
  455cc8:	sub	sp, sp, #0x20
  455ccc:	stp	x29, x30, [sp, #16]
  455cd0:	add	x29, sp, #0x10
  455cd4:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455cd8:	add	x8, x8, #0x4a6
  455cdc:	str	x0, [sp, #8]
  455ce0:	str	x1, [sp]
  455ce4:	ldr	x0, [sp, #8]
  455ce8:	ldr	x2, [sp]
  455cec:	mov	x1, x8
  455cf0:	bl	455900 <session_get_string>
  455cf4:	ldp	x29, x30, [sp, #16]
  455cf8:	add	sp, sp, #0x20
  455cfc:	ret

0000000000455d00 <sd_session_get_type>:
  455d00:	sub	sp, sp, #0x20
  455d04:	stp	x29, x30, [sp, #16]
  455d08:	add	x29, sp, #0x10
  455d0c:	adrp	x8, 46e000 <on_inotify.__assert_in_set+0xa540>
  455d10:	add	x8, x8, #0xc3e
  455d14:	str	x0, [sp, #8]
  455d18:	str	x1, [sp]
  455d1c:	ldr	x0, [sp, #8]
  455d20:	ldr	x2, [sp]
  455d24:	mov	x1, x8
  455d28:	bl	455900 <session_get_string>
  455d2c:	ldp	x29, x30, [sp, #16]
  455d30:	add	sp, sp, #0x20
  455d34:	ret

0000000000455d38 <sd_session_get_class>:
  455d38:	sub	sp, sp, #0x20
  455d3c:	stp	x29, x30, [sp, #16]
  455d40:	add	x29, sp, #0x10
  455d44:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455d48:	add	x8, x8, #0x4ae
  455d4c:	str	x0, [sp, #8]
  455d50:	str	x1, [sp]
  455d54:	ldr	x0, [sp, #8]
  455d58:	ldr	x2, [sp]
  455d5c:	mov	x1, x8
  455d60:	bl	455900 <session_get_string>
  455d64:	ldp	x29, x30, [sp, #16]
  455d68:	add	sp, sp, #0x20
  455d6c:	ret

0000000000455d70 <sd_session_get_desktop>:
  455d70:	sub	sp, sp, #0x60
  455d74:	stp	x29, x30, [sp, #80]
  455d78:	add	x29, sp, #0x50
  455d7c:	mov	x8, xzr
  455d80:	mov	w9, #0x1                   	// #1
  455d84:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455d88:	add	x10, x10, #0x2c
  455d8c:	add	x2, x10, #0x3
  455d90:	mov	w11, #0x0                   	// #0
  455d94:	stur	x0, [x29, #-16]
  455d98:	stur	x1, [x29, #-24]
  455d9c:	stur	x8, [x29, #-32]
  455da0:	str	w9, [sp, #28]
  455da4:	str	x2, [sp, #16]
  455da8:	str	w11, [sp, #12]
  455dac:	ldur	x8, [x29, #-24]
  455db0:	cmp	x8, #0x0
  455db4:	cset	w9, ne  // ne = any
  455db8:	mov	w10, #0x1                   	// #1
  455dbc:	eor	w9, w9, #0x1
  455dc0:	eor	w9, w9, w10
  455dc4:	and	w9, w9, #0x1
  455dc8:	mov	w0, w9
  455dcc:	sxtw	x8, w0
  455dd0:	cbz	x8, 455de0 <sd_session_get_desktop+0x70>
  455dd4:	ldr	w8, [sp, #28]
  455dd8:	tbnz	w8, #0, 455e1c <sd_session_get_desktop+0xac>
  455ddc:	b	455e08 <sd_session_get_desktop+0x98>
  455de0:	mov	w0, #0x1                   	// #1
  455de4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455de8:	add	x1, x1, #0x4b4
  455dec:	ldr	x2, [sp, #16]
  455df0:	mov	w3, #0x253                 	// #595
  455df4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  455df8:	add	x4, x4, #0x4bc
  455dfc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  455e00:	ldr	w8, [sp, #12]
  455e04:	tbnz	w8, #0, 455e1c <sd_session_get_desktop+0xac>
  455e08:	mov	w8, #0xffffffea            	// #-22
  455e0c:	stur	w8, [x29, #-4]
  455e10:	mov	w8, #0x1                   	// #1
  455e14:	str	w8, [sp, #32]
  455e18:	b	455eac <sd_session_get_desktop+0x13c>
  455e1c:	ldur	x0, [x29, #-16]
  455e20:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  455e24:	add	x1, x1, #0x4ee
  455e28:	sub	x2, x29, #0x20
  455e2c:	bl	455900 <session_get_string>
  455e30:	str	w0, [sp, #36]
  455e34:	ldr	w8, [sp, #36]
  455e38:	cmp	w8, #0x0
  455e3c:	cset	w8, ge  // ge = tcont
  455e40:	tbnz	w8, #0, 455e58 <sd_session_get_desktop+0xe8>
  455e44:	ldr	w8, [sp, #36]
  455e48:	stur	w8, [x29, #-4]
  455e4c:	mov	w8, #0x1                   	// #1
  455e50:	str	w8, [sp, #32]
  455e54:	b	455eac <sd_session_get_desktop+0x13c>
  455e58:	ldur	x0, [x29, #-32]
  455e5c:	mov	w8, wzr
  455e60:	mov	w1, w8
  455e64:	add	x2, sp, #0x28
  455e68:	bl	40bc40 <cunescape@plt>
  455e6c:	str	w0, [sp, #36]
  455e70:	ldr	w8, [sp, #36]
  455e74:	cmp	w8, #0x0
  455e78:	cset	w8, ge  // ge = tcont
  455e7c:	tbnz	w8, #0, 455e94 <sd_session_get_desktop+0x124>
  455e80:	ldr	w8, [sp, #36]
  455e84:	stur	w8, [x29, #-4]
  455e88:	mov	w8, #0x1                   	// #1
  455e8c:	str	w8, [sp, #32]
  455e90:	b	455eac <sd_session_get_desktop+0x13c>
  455e94:	ldr	x8, [sp, #40]
  455e98:	ldur	x9, [x29, #-24]
  455e9c:	str	x8, [x9]
  455ea0:	stur	wzr, [x29, #-4]
  455ea4:	mov	w10, #0x1                   	// #1
  455ea8:	str	w10, [sp, #32]
  455eac:	sub	x0, x29, #0x20
  455eb0:	bl	454814 <freep>
  455eb4:	ldur	w0, [x29, #-4]
  455eb8:	ldp	x29, x30, [sp, #80]
  455ebc:	add	sp, sp, #0x60
  455ec0:	ret

0000000000455ec4 <sd_session_get_display>:
  455ec4:	sub	sp, sp, #0x20
  455ec8:	stp	x29, x30, [sp, #16]
  455ecc:	add	x29, sp, #0x10
  455ed0:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455ed4:	add	x8, x8, #0x34c
  455ed8:	str	x0, [sp, #8]
  455edc:	str	x1, [sp]
  455ee0:	ldr	x0, [sp, #8]
  455ee4:	ldr	x2, [sp]
  455ee8:	mov	x1, x8
  455eec:	bl	455900 <session_get_string>
  455ef0:	ldp	x29, x30, [sp, #16]
  455ef4:	add	sp, sp, #0x20
  455ef8:	ret

0000000000455efc <sd_session_get_remote_user>:
  455efc:	sub	sp, sp, #0x20
  455f00:	stp	x29, x30, [sp, #16]
  455f04:	add	x29, sp, #0x10
  455f08:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455f0c:	add	x8, x8, #0x4f6
  455f10:	str	x0, [sp, #8]
  455f14:	str	x1, [sp]
  455f18:	ldr	x0, [sp, #8]
  455f1c:	ldr	x2, [sp]
  455f20:	mov	x1, x8
  455f24:	bl	455900 <session_get_string>
  455f28:	ldp	x29, x30, [sp, #16]
  455f2c:	add	sp, sp, #0x20
  455f30:	ret

0000000000455f34 <sd_session_get_remote_host>:
  455f34:	sub	sp, sp, #0x20
  455f38:	stp	x29, x30, [sp, #16]
  455f3c:	add	x29, sp, #0x10
  455f40:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  455f44:	add	x8, x8, #0x502
  455f48:	str	x0, [sp, #8]
  455f4c:	str	x1, [sp]
  455f50:	ldr	x0, [sp, #8]
  455f54:	ldr	x2, [sp]
  455f58:	mov	x1, x8
  455f5c:	bl	455900 <session_get_string>
  455f60:	ldp	x29, x30, [sp, #16]
  455f64:	add	sp, sp, #0x20
  455f68:	ret

0000000000455f6c <sd_seat_get_active>:
  455f6c:	sub	sp, sp, #0x80
  455f70:	stp	x29, x30, [sp, #112]
  455f74:	add	x29, sp, #0x70
  455f78:	mov	x8, xzr
  455f7c:	mov	w9, #0x1                   	// #1
  455f80:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  455f84:	add	x10, x10, #0x2c
  455f88:	add	x10, x10, #0x3
  455f8c:	mov	w11, #0x0                   	// #0
  455f90:	stur	x0, [x29, #-16]
  455f94:	stur	x1, [x29, #-24]
  455f98:	stur	x2, [x29, #-32]
  455f9c:	stur	x8, [x29, #-40]
  455fa0:	stur	x8, [x29, #-48]
  455fa4:	str	x8, [sp, #56]
  455fa8:	str	w9, [sp, #28]
  455fac:	str	x10, [sp, #16]
  455fb0:	str	w11, [sp, #12]
  455fb4:	ldur	x8, [x29, #-24]
  455fb8:	mov	w9, #0x1                   	// #1
  455fbc:	str	w9, [sp, #8]
  455fc0:	cbnz	x8, 455fd4 <sd_seat_get_active+0x68>
  455fc4:	ldur	x8, [x29, #-32]
  455fc8:	cmp	x8, #0x0
  455fcc:	cset	w9, ne  // ne = any
  455fd0:	str	w9, [sp, #8]
  455fd4:	ldr	w8, [sp, #8]
  455fd8:	mov	w9, #0x1                   	// #1
  455fdc:	eor	w8, w8, #0x1
  455fe0:	eor	w8, w8, w9
  455fe4:	and	w8, w8, #0x1
  455fe8:	mov	w0, w8
  455fec:	sxtw	x10, w0
  455ff0:	cbz	x10, 456000 <sd_seat_get_active+0x94>
  455ff4:	ldr	w8, [sp, #28]
  455ff8:	tbnz	w8, #0, 45603c <sd_seat_get_active+0xd0>
  455ffc:	b	456028 <sd_seat_get_active+0xbc>
  456000:	mov	w0, #0x1                   	// #1
  456004:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456008:	add	x1, x1, #0x50e
  45600c:	ldr	x2, [sp, #16]
  456010:	mov	w3, #0x271                 	// #625
  456014:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  456018:	add	x4, x4, #0x51d
  45601c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  456020:	ldr	w8, [sp, #12]
  456024:	tbnz	w8, #0, 45603c <sd_seat_get_active+0xd0>
  456028:	mov	w8, #0xffffffea            	// #-22
  45602c:	stur	w8, [x29, #-4]
  456030:	mov	w8, #0x1                   	// #1
  456034:	str	w8, [sp, #48]
  456038:	b	4561b4 <sd_seat_get_active+0x248>
  45603c:	ldur	x0, [x29, #-16]
  456040:	sub	x1, x29, #0x28
  456044:	bl	454d90 <file_of_seat>
  456048:	str	w0, [sp, #52]
  45604c:	ldr	w8, [sp, #52]
  456050:	cmp	w8, #0x0
  456054:	cset	w8, ge  // ge = tcont
  456058:	tbnz	w8, #0, 456070 <sd_seat_get_active+0x104>
  45605c:	ldr	w8, [sp, #52]
  456060:	stur	w8, [x29, #-4]
  456064:	mov	w8, #0x1                   	// #1
  456068:	str	w8, [sp, #48]
  45606c:	b	4561b4 <sd_seat_get_active+0x248>
  456070:	ldur	x1, [x29, #-40]
  456074:	mov	x8, xzr
  456078:	mov	x0, x8
  45607c:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  456080:	add	x2, x2, #0x3ef
  456084:	sub	x3, x29, #0x30
  456088:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  45608c:	add	x4, x4, #0x396
  456090:	add	x5, sp, #0x38
  456094:	mov	x6, x8
  456098:	bl	40bce0 <parse_env_file_sentinel@plt>
  45609c:	str	w0, [sp, #52]
  4560a0:	ldr	w9, [sp, #52]
  4560a4:	mov	w10, #0xfffffffe            	// #-2
  4560a8:	cmp	w9, w10
  4560ac:	b.ne	4560c4 <sd_seat_get_active+0x158>  // b.any
  4560b0:	mov	w8, #0xfffffffa            	// #-6
  4560b4:	stur	w8, [x29, #-4]
  4560b8:	mov	w8, #0x1                   	// #1
  4560bc:	str	w8, [sp, #48]
  4560c0:	b	4561b4 <sd_seat_get_active+0x248>
  4560c4:	ldr	w8, [sp, #52]
  4560c8:	cmp	w8, #0x0
  4560cc:	cset	w8, ge  // ge = tcont
  4560d0:	tbnz	w8, #0, 4560e8 <sd_seat_get_active+0x17c>
  4560d4:	ldr	w8, [sp, #52]
  4560d8:	stur	w8, [x29, #-4]
  4560dc:	mov	w8, #0x1                   	// #1
  4560e0:	str	w8, [sp, #48]
  4560e4:	b	4561b4 <sd_seat_get_active+0x248>
  4560e8:	ldur	x8, [x29, #-24]
  4560ec:	cbz	x8, 45610c <sd_seat_get_active+0x1a0>
  4560f0:	ldur	x8, [x29, #-48]
  4560f4:	cbnz	x8, 45610c <sd_seat_get_active+0x1a0>
  4560f8:	mov	w8, #0xffffffc3            	// #-61
  4560fc:	stur	w8, [x29, #-4]
  456100:	mov	w8, #0x1                   	// #1
  456104:	str	w8, [sp, #48]
  456108:	b	4561b4 <sd_seat_get_active+0x248>
  45610c:	ldur	x8, [x29, #-32]
  456110:	cbz	x8, 456130 <sd_seat_get_active+0x1c4>
  456114:	ldr	x8, [sp, #56]
  456118:	cbnz	x8, 456130 <sd_seat_get_active+0x1c4>
  45611c:	mov	w8, #0xffffffc3            	// #-61
  456120:	stur	w8, [x29, #-4]
  456124:	mov	w8, #0x1                   	// #1
  456128:	str	w8, [sp, #48]
  45612c:	b	4561b4 <sd_seat_get_active+0x248>
  456130:	ldur	x8, [x29, #-32]
  456134:	cbz	x8, 456174 <sd_seat_get_active+0x208>
  456138:	ldr	x8, [sp, #56]
  45613c:	cbz	x8, 456174 <sd_seat_get_active+0x208>
  456140:	ldr	x0, [sp, #56]
  456144:	ldur	x1, [x29, #-32]
  456148:	bl	40b320 <parse_uid@plt>
  45614c:	str	w0, [sp, #52]
  456150:	ldr	w8, [sp, #52]
  456154:	cmp	w8, #0x0
  456158:	cset	w8, ge  // ge = tcont
  45615c:	tbnz	w8, #0, 456174 <sd_seat_get_active+0x208>
  456160:	ldr	w8, [sp, #52]
  456164:	stur	w8, [x29, #-4]
  456168:	mov	w8, #0x1                   	// #1
  45616c:	str	w8, [sp, #48]
  456170:	b	4561b4 <sd_seat_get_active+0x248>
  456174:	ldur	x8, [x29, #-24]
  456178:	cbz	x8, 4561a8 <sd_seat_get_active+0x23c>
  45617c:	ldur	x8, [x29, #-48]
  456180:	cbz	x8, 4561a8 <sd_seat_get_active+0x23c>
  456184:	ldur	x8, [x29, #-48]
  456188:	str	x8, [sp, #40]
  45618c:	mov	x8, xzr
  456190:	stur	x8, [x29, #-48]
  456194:	ldr	x8, [sp, #40]
  456198:	str	x8, [sp, #32]
  45619c:	ldr	x8, [sp, #32]
  4561a0:	ldur	x9, [x29, #-24]
  4561a4:	str	x8, [x9]
  4561a8:	stur	wzr, [x29, #-4]
  4561ac:	mov	w8, #0x1                   	// #1
  4561b0:	str	w8, [sp, #48]
  4561b4:	add	x0, sp, #0x38
  4561b8:	bl	454814 <freep>
  4561bc:	sub	x0, x29, #0x30
  4561c0:	bl	454814 <freep>
  4561c4:	sub	x0, x29, #0x28
  4561c8:	bl	454814 <freep>
  4561cc:	ldur	w0, [x29, #-4]
  4561d0:	ldp	x29, x30, [sp, #112]
  4561d4:	add	sp, sp, #0x80
  4561d8:	ret

00000000004561dc <sd_seat_get_sessions>:
  4561dc:	sub	sp, sp, #0xc0
  4561e0:	stp	x29, x30, [sp, #176]
  4561e4:	add	x29, sp, #0xb0
  4561e8:	mov	x8, xzr
  4561ec:	adrp	x9, 466000 <on_inotify.__assert_in_set+0x2540>
  4561f0:	add	x9, x9, #0x5b7
  4561f4:	sub	x10, x29, #0x30
  4561f8:	stur	x0, [x29, #-16]
  4561fc:	stur	x1, [x29, #-24]
  456200:	stur	x2, [x29, #-32]
  456204:	stur	x3, [x29, #-40]
  456208:	stur	x8, [x29, #-48]
  45620c:	stur	x8, [x29, #-56]
  456210:	stur	x8, [x29, #-64]
  456214:	stur	x8, [x29, #-72]
  456218:	stur	x8, [x29, #-80]
  45621c:	stur	wzr, [x29, #-84]
  456220:	ldur	x0, [x29, #-16]
  456224:	mov	x1, x10
  456228:	str	x9, [sp]
  45622c:	bl	454d90 <file_of_seat>
  456230:	str	w0, [sp, #88]
  456234:	ldr	w11, [sp, #88]
  456238:	cmp	w11, #0x0
  45623c:	cset	w11, ge  // ge = tcont
  456240:	tbnz	w11, #0, 456258 <sd_seat_get_sessions+0x7c>
  456244:	ldr	w8, [sp, #88]
  456248:	stur	w8, [x29, #-4]
  45624c:	mov	w8, #0x1                   	// #1
  456250:	str	w8, [sp, #84]
  456254:	b	456534 <sd_seat_get_sessions+0x358>
  456258:	ldur	x1, [x29, #-48]
  45625c:	mov	x8, xzr
  456260:	mov	x0, x8
  456264:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  456268:	add	x2, x2, #0x3c6
  45626c:	sub	x3, x29, #0x38
  456270:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  456274:	add	x4, x4, #0x3a1
  456278:	sub	x5, x29, #0x40
  45627c:	mov	x6, x8
  456280:	bl	40bce0 <parse_env_file_sentinel@plt>
  456284:	str	w0, [sp, #88]
  456288:	ldr	w9, [sp, #88]
  45628c:	mov	w10, #0xfffffffe            	// #-2
  456290:	cmp	w9, w10
  456294:	b.ne	4562ac <sd_seat_get_sessions+0xd0>  // b.any
  456298:	mov	w8, #0xfffffffa            	// #-6
  45629c:	stur	w8, [x29, #-4]
  4562a0:	mov	w8, #0x1                   	// #1
  4562a4:	str	w8, [sp, #84]
  4562a8:	b	456534 <sd_seat_get_sessions+0x358>
  4562ac:	ldr	w8, [sp, #88]
  4562b0:	cmp	w8, #0x0
  4562b4:	cset	w8, ge  // ge = tcont
  4562b8:	tbnz	w8, #0, 4562d0 <sd_seat_get_sessions+0xf4>
  4562bc:	ldr	w8, [sp, #88]
  4562c0:	stur	w8, [x29, #-4]
  4562c4:	mov	w8, #0x1                   	// #1
  4562c8:	str	w8, [sp, #84]
  4562cc:	b	456534 <sd_seat_get_sessions+0x358>
  4562d0:	ldur	x8, [x29, #-56]
  4562d4:	cbz	x8, 456308 <sd_seat_get_sessions+0x12c>
  4562d8:	ldur	x0, [x29, #-56]
  4562dc:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4562e0:	add	x1, x1, #0x61e
  4562e4:	bl	4565a0 <strv_split>
  4562e8:	stur	x0, [x29, #-72]
  4562ec:	ldur	x8, [x29, #-72]
  4562f0:	cbnz	x8, 456308 <sd_seat_get_sessions+0x12c>
  4562f4:	mov	w8, #0xfffffff4            	// #-12
  4562f8:	stur	w8, [x29, #-4]
  4562fc:	mov	w8, #0x1                   	// #1
  456300:	str	w8, [sp, #84]
  456304:	b	456534 <sd_seat_get_sessions+0x358>
  456308:	ldur	x8, [x29, #-32]
  45630c:	cbz	x8, 4564ac <sd_seat_get_sessions+0x2d0>
  456310:	ldur	x8, [x29, #-64]
  456314:	cbz	x8, 4564ac <sd_seat_get_sessions+0x2d0>
  456318:	ldur	x8, [x29, #-64]
  45631c:	add	x0, sp, #0x40
  456320:	str	x8, [sp, #64]
  456324:	add	x1, sp, #0x38
  456328:	ldr	x2, [sp]
  45632c:	mov	w9, wzr
  456330:	mov	w3, w9
  456334:	bl	40b8b0 <split@plt>
  456338:	str	x0, [sp, #72]
  45633c:	ldr	x8, [sp, #72]
  456340:	cbz	x8, 456370 <sd_seat_get_sessions+0x194>
  456344:	ldur	w8, [x29, #-84]
  456348:	add	w8, w8, #0x1
  45634c:	stur	w8, [x29, #-84]
  456350:	add	x0, sp, #0x40
  456354:	add	x1, sp, #0x38
  456358:	ldr	x2, [sp]
  45635c:	mov	w8, wzr
  456360:	mov	w3, w8
  456364:	bl	40b8b0 <split@plt>
  456368:	str	x0, [sp, #72]
  45636c:	b	45633c <sd_seat_get_sessions+0x160>
  456370:	ldur	w8, [x29, #-84]
  456374:	cmp	w8, #0x0
  456378:	cset	w8, ls  // ls = plast
  45637c:	tbnz	w8, #0, 4564ac <sd_seat_get_sessions+0x2d0>
  456380:	str	wzr, [sp, #52]
  456384:	ldur	w8, [x29, #-84]
  456388:	mov	w1, w8
  45638c:	mov	x0, #0x4                   	// #4
  456390:	bl	4565d4 <malloc_multiply>
  456394:	stur	x0, [x29, #-80]
  456398:	ldur	x9, [x29, #-80]
  45639c:	cbnz	x9, 4563b4 <sd_seat_get_sessions+0x1d8>
  4563a0:	mov	w8, #0xfffffff4            	// #-12
  4563a4:	stur	w8, [x29, #-4]
  4563a8:	mov	w8, #0x1                   	// #1
  4563ac:	str	w8, [sp, #84]
  4563b0:	b	456534 <sd_seat_get_sessions+0x358>
  4563b4:	ldur	x8, [x29, #-64]
  4563b8:	add	x0, sp, #0x40
  4563bc:	str	x8, [sp, #64]
  4563c0:	add	x1, sp, #0x38
  4563c4:	ldr	x2, [sp]
  4563c8:	mov	w9, wzr
  4563cc:	mov	w3, w9
  4563d0:	bl	40b8b0 <split@plt>
  4563d4:	str	x0, [sp, #72]
  4563d8:	ldr	x8, [sp, #72]
  4563dc:	cbz	x8, 4564ac <sd_seat_get_sessions+0x2d0>
  4563e0:	mov	x8, xzr
  4563e4:	str	x8, [sp, #40]
  4563e8:	ldr	x0, [sp, #72]
  4563ec:	ldr	x1, [sp, #56]
  4563f0:	bl	40a8d0 <strndup@plt>
  4563f4:	str	x0, [sp, #40]
  4563f8:	ldr	x8, [sp, #40]
  4563fc:	cbnz	x8, 456414 <sd_seat_get_sessions+0x238>
  456400:	mov	w8, #0xfffffff4            	// #-12
  456404:	stur	w8, [x29, #-4]
  456408:	mov	w8, #0x1                   	// #1
  45640c:	str	w8, [sp, #84]
  456410:	b	45646c <sd_seat_get_sessions+0x290>
  456414:	ldr	x0, [sp, #40]
  456418:	ldur	x8, [x29, #-80]
  45641c:	ldr	w9, [sp, #52]
  456420:	mov	w10, w9
  456424:	mov	x11, #0x4                   	// #4
  456428:	mul	x10, x11, x10
  45642c:	add	x1, x8, x10
  456430:	bl	40b320 <parse_uid@plt>
  456434:	str	w0, [sp, #88]
  456438:	ldr	w9, [sp, #88]
  45643c:	cmp	w9, #0x0
  456440:	cset	w9, ge  // ge = tcont
  456444:	tbnz	w9, #0, 45645c <sd_seat_get_sessions+0x280>
  456448:	ldr	w8, [sp, #88]
  45644c:	stur	w8, [x29, #-4]
  456450:	mov	w8, #0x1                   	// #1
  456454:	str	w8, [sp, #84]
  456458:	b	45646c <sd_seat_get_sessions+0x290>
  45645c:	ldr	w8, [sp, #52]
  456460:	add	w8, w8, #0x1
  456464:	str	w8, [sp, #52]
  456468:	str	wzr, [sp, #84]
  45646c:	add	x0, sp, #0x28
  456470:	bl	454814 <freep>
  456474:	ldr	w8, [sp, #84]
  456478:	cmp	w8, #0x0
  45647c:	cset	w8, eq  // eq = none
  456480:	eor	w8, w8, #0x1
  456484:	tbnz	w8, #0, 456534 <sd_seat_get_sessions+0x358>
  456488:	b	45648c <sd_seat_get_sessions+0x2b0>
  45648c:	add	x0, sp, #0x40
  456490:	add	x1, sp, #0x38
  456494:	ldr	x2, [sp]
  456498:	mov	w8, wzr
  45649c:	mov	w3, w8
  4564a0:	bl	40b8b0 <split@plt>
  4564a4:	str	x0, [sp, #72]
  4564a8:	b	4563d8 <sd_seat_get_sessions+0x1fc>
  4564ac:	ldur	x0, [x29, #-72]
  4564b0:	bl	40b5d0 <strv_length@plt>
  4564b4:	str	w0, [sp, #88]
  4564b8:	ldur	x8, [x29, #-24]
  4564bc:	cbz	x8, 4564e4 <sd_seat_get_sessions+0x308>
  4564c0:	ldur	x8, [x29, #-72]
  4564c4:	str	x8, [sp, #32]
  4564c8:	mov	x8, xzr
  4564cc:	stur	x8, [x29, #-72]
  4564d0:	ldr	x8, [sp, #32]
  4564d4:	str	x8, [sp, #24]
  4564d8:	ldr	x8, [sp, #24]
  4564dc:	ldur	x9, [x29, #-24]
  4564e0:	str	x8, [x9]
  4564e4:	ldur	x8, [x29, #-32]
  4564e8:	cbz	x8, 456510 <sd_seat_get_sessions+0x334>
  4564ec:	ldur	x8, [x29, #-80]
  4564f0:	str	x8, [sp, #16]
  4564f4:	mov	x8, xzr
  4564f8:	stur	x8, [x29, #-80]
  4564fc:	ldr	x8, [sp, #16]
  456500:	str	x8, [sp, #8]
  456504:	ldr	x8, [sp, #8]
  456508:	ldur	x9, [x29, #-32]
  45650c:	str	x8, [x9]
  456510:	ldur	x8, [x29, #-40]
  456514:	cbz	x8, 456524 <sd_seat_get_sessions+0x348>
  456518:	ldur	w8, [x29, #-84]
  45651c:	ldur	x9, [x29, #-40]
  456520:	str	w8, [x9]
  456524:	ldr	w8, [sp, #88]
  456528:	stur	w8, [x29, #-4]
  45652c:	mov	w8, #0x1                   	// #1
  456530:	str	w8, [sp, #84]
  456534:	sub	x0, x29, #0x50
  456538:	bl	454814 <freep>
  45653c:	sub	x0, x29, #0x48
  456540:	bl	45656c <strv_freep>
  456544:	sub	x0, x29, #0x40
  456548:	bl	454814 <freep>
  45654c:	sub	x0, x29, #0x38
  456550:	bl	454814 <freep>
  456554:	sub	x0, x29, #0x30
  456558:	bl	454814 <freep>
  45655c:	ldur	w0, [x29, #-4]
  456560:	ldp	x29, x30, [sp, #176]
  456564:	add	sp, sp, #0xc0
  456568:	ret

000000000045656c <strv_freep>:
  45656c:	sub	sp, sp, #0x20
  456570:	stp	x29, x30, [sp, #16]
  456574:	add	x29, sp, #0x10
  456578:	str	x0, [sp, #8]
  45657c:	ldr	x8, [sp, #8]
  456580:	ldr	x8, [x8]
  456584:	cbz	x8, 456594 <strv_freep+0x28>
  456588:	ldr	x8, [sp, #8]
  45658c:	ldr	x0, [x8]
  456590:	bl	40afa0 <strv_free@plt>
  456594:	ldp	x29, x30, [sp, #16]
  456598:	add	sp, sp, #0x20
  45659c:	ret

00000000004565a0 <strv_split>:
  4565a0:	sub	sp, sp, #0x20
  4565a4:	stp	x29, x30, [sp, #16]
  4565a8:	add	x29, sp, #0x10
  4565ac:	mov	w8, wzr
  4565b0:	str	x0, [sp, #8]
  4565b4:	str	x1, [sp]
  4565b8:	ldr	x0, [sp, #8]
  4565bc:	ldr	x1, [sp]
  4565c0:	mov	w2, w8
  4565c4:	bl	40af30 <strv_split_full@plt>
  4565c8:	ldp	x29, x30, [sp, #16]
  4565cc:	add	sp, sp, #0x20
  4565d0:	ret

00000000004565d4 <malloc_multiply>:
  4565d4:	sub	sp, sp, #0x40
  4565d8:	stp	x29, x30, [sp, #48]
  4565dc:	add	x29, sp, #0x30
  4565e0:	stur	x0, [x29, #-16]
  4565e4:	str	x1, [sp, #24]
  4565e8:	ldur	x0, [x29, #-16]
  4565ec:	ldr	x1, [sp, #24]
  4565f0:	bl	457214 <size_multiply_overflow>
  4565f4:	tbnz	w0, #0, 4565fc <malloc_multiply+0x28>
  4565f8:	b	456608 <malloc_multiply+0x34>
  4565fc:	mov	x8, xzr
  456600:	stur	x8, [x29, #-8]
  456604:	b	456640 <malloc_multiply+0x6c>
  456608:	ldur	x8, [x29, #-16]
  45660c:	ldr	x9, [sp, #24]
  456610:	mul	x8, x8, x9
  456614:	str	x8, [sp, #16]
  456618:	cbz	x8, 456628 <malloc_multiply+0x54>
  45661c:	ldr	x8, [sp, #16]
  456620:	str	x8, [sp, #8]
  456624:	b	456630 <malloc_multiply+0x5c>
  456628:	mov	x8, #0x1                   	// #1
  45662c:	str	x8, [sp, #8]
  456630:	ldr	x8, [sp, #8]
  456634:	mov	x0, x8
  456638:	bl	40a820 <malloc@plt>
  45663c:	stur	x0, [x29, #-8]
  456640:	ldur	x0, [x29, #-8]
  456644:	ldp	x29, x30, [sp, #48]
  456648:	add	sp, sp, #0x40
  45664c:	ret

0000000000456650 <sd_seat_can_multi_session>:
  456650:	sub	sp, sp, #0x20
  456654:	stp	x29, x30, [sp, #16]
  456658:	add	x29, sp, #0x10
  45665c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456660:	add	x1, x1, #0x554
  456664:	str	x0, [sp, #8]
  456668:	ldr	x0, [sp, #8]
  45666c:	bl	45667c <seat_get_can>
  456670:	ldp	x29, x30, [sp, #16]
  456674:	add	sp, sp, #0x20
  456678:	ret

000000000045667c <seat_get_can>:
  45667c:	sub	sp, sp, #0x50
  456680:	stp	x29, x30, [sp, #64]
  456684:	add	x29, sp, #0x40
  456688:	mov	x8, xzr
  45668c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  456690:	add	x9, x9, #0x2c
  456694:	add	x2, x9, #0x3
  456698:	stur	x0, [x29, #-16]
  45669c:	stur	x1, [x29, #-24]
  4566a0:	str	x8, [sp, #32]
  4566a4:	str	x8, [sp, #24]
  4566a8:	str	x2, [sp, #8]
  4566ac:	ldur	x8, [x29, #-24]
  4566b0:	cmp	x8, #0x0
  4566b4:	cset	w9, ne  // ne = any
  4566b8:	mov	w10, #0x1                   	// #1
  4566bc:	eor	w9, w9, #0x1
  4566c0:	eor	w9, w9, w10
  4566c4:	eor	w9, w9, w10
  4566c8:	and	w9, w9, #0x1
  4566cc:	mov	w0, w9
  4566d0:	sxtw	x8, w0
  4566d4:	cbz	x8, 4566f8 <seat_get_can+0x7c>
  4566d8:	mov	w0, #0x1                   	// #1
  4566dc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4566e0:	add	x1, x1, #0x81d
  4566e4:	ldr	x2, [sp, #8]
  4566e8:	mov	w3, #0x2da                 	// #730
  4566ec:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4566f0:	add	x4, x4, #0x8da
  4566f4:	bl	40a540 <log_assert_failed_realm@plt>
  4566f8:	ldur	x0, [x29, #-16]
  4566fc:	add	x1, sp, #0x20
  456700:	bl	454d90 <file_of_seat>
  456704:	str	w0, [sp, #20]
  456708:	ldr	w8, [sp, #20]
  45670c:	cmp	w8, #0x0
  456710:	cset	w8, ge  // ge = tcont
  456714:	tbnz	w8, #0, 45672c <seat_get_can+0xb0>
  456718:	ldr	w8, [sp, #20]
  45671c:	stur	w8, [x29, #-4]
  456720:	mov	w8, #0x1                   	// #1
  456724:	str	w8, [sp, #16]
  456728:	b	4567cc <seat_get_can+0x150>
  45672c:	ldr	x1, [sp, #32]
  456730:	ldur	x2, [x29, #-24]
  456734:	mov	x8, xzr
  456738:	mov	x0, x8
  45673c:	add	x3, sp, #0x18
  456740:	mov	x4, x8
  456744:	bl	40bce0 <parse_env_file_sentinel@plt>
  456748:	str	w0, [sp, #20]
  45674c:	ldr	w9, [sp, #20]
  456750:	mov	w10, #0xfffffffe            	// #-2
  456754:	cmp	w9, w10
  456758:	b.ne	456770 <seat_get_can+0xf4>  // b.any
  45675c:	mov	w8, #0xfffffffa            	// #-6
  456760:	stur	w8, [x29, #-4]
  456764:	mov	w8, #0x1                   	// #1
  456768:	str	w8, [sp, #16]
  45676c:	b	4567cc <seat_get_can+0x150>
  456770:	ldr	w8, [sp, #20]
  456774:	cmp	w8, #0x0
  456778:	cset	w8, ge  // ge = tcont
  45677c:	tbnz	w8, #0, 456794 <seat_get_can+0x118>
  456780:	ldr	w8, [sp, #20]
  456784:	stur	w8, [x29, #-4]
  456788:	mov	w8, #0x1                   	// #1
  45678c:	str	w8, [sp, #16]
  456790:	b	4567cc <seat_get_can+0x150>
  456794:	ldr	x0, [sp, #24]
  456798:	bl	453b60 <isempty>
  45679c:	tbnz	w0, #0, 4567a4 <seat_get_can+0x128>
  4567a0:	b	4567b8 <seat_get_can+0x13c>
  4567a4:	mov	w8, #0xffffffc3            	// #-61
  4567a8:	stur	w8, [x29, #-4]
  4567ac:	mov	w8, #0x1                   	// #1
  4567b0:	str	w8, [sp, #16]
  4567b4:	b	4567cc <seat_get_can+0x150>
  4567b8:	ldr	x0, [sp, #24]
  4567bc:	bl	40bd20 <parse_boolean@plt>
  4567c0:	stur	w0, [x29, #-4]
  4567c4:	mov	w8, #0x1                   	// #1
  4567c8:	str	w8, [sp, #16]
  4567cc:	add	x0, sp, #0x18
  4567d0:	bl	454814 <freep>
  4567d4:	add	x0, sp, #0x20
  4567d8:	bl	454814 <freep>
  4567dc:	ldur	w0, [x29, #-4]
  4567e0:	ldp	x29, x30, [sp, #64]
  4567e4:	add	sp, sp, #0x50
  4567e8:	ret

00000000004567ec <sd_seat_can_tty>:
  4567ec:	sub	sp, sp, #0x20
  4567f0:	stp	x29, x30, [sp, #16]
  4567f4:	add	x29, sp, #0x10
  4567f8:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4567fc:	add	x1, x1, #0x566
  456800:	str	x0, [sp, #8]
  456804:	ldr	x0, [sp, #8]
  456808:	bl	45667c <seat_get_can>
  45680c:	ldp	x29, x30, [sp, #16]
  456810:	add	sp, sp, #0x20
  456814:	ret

0000000000456818 <sd_seat_can_graphical>:
  456818:	sub	sp, sp, #0x20
  45681c:	stp	x29, x30, [sp, #16]
  456820:	add	x29, sp, #0x10
  456824:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456828:	add	x1, x1, #0x56e
  45682c:	str	x0, [sp, #8]
  456830:	ldr	x0, [sp, #8]
  456834:	bl	45667c <seat_get_can>
  456838:	ldp	x29, x30, [sp, #16]
  45683c:	add	sp, sp, #0x20
  456840:	ret

0000000000456844 <sd_get_seats>:
  456844:	sub	sp, sp, #0x30
  456848:	stp	x29, x30, [sp, #32]
  45684c:	add	x29, sp, #0x20
  456850:	adrp	x8, 46e000 <on_inotify.__assert_in_set+0xa540>
  456854:	add	x8, x8, #0xec3
  456858:	mov	w9, #0xfffffffe            	// #-2
  45685c:	str	x0, [sp, #16]
  456860:	ldr	x1, [sp, #16]
  456864:	mov	x0, x8
  456868:	str	w9, [sp, #8]
  45686c:	bl	40bd40 <get_files_in_directory@plt>
  456870:	str	w0, [sp, #12]
  456874:	ldr	w9, [sp, #12]
  456878:	ldr	w10, [sp, #8]
  45687c:	cmp	w9, w10
  456880:	b.ne	4568a0 <sd_get_seats+0x5c>  // b.any
  456884:	ldr	x8, [sp, #16]
  456888:	cbz	x8, 456898 <sd_get_seats+0x54>
  45688c:	ldr	x8, [sp, #16]
  456890:	mov	x9, xzr
  456894:	str	x9, [x8]
  456898:	stur	wzr, [x29, #-4]
  45689c:	b	4568a8 <sd_get_seats+0x64>
  4568a0:	ldr	w8, [sp, #12]
  4568a4:	stur	w8, [x29, #-4]
  4568a8:	ldur	w0, [x29, #-4]
  4568ac:	ldp	x29, x30, [sp, #32]
  4568b0:	add	sp, sp, #0x30
  4568b4:	ret

00000000004568b8 <sd_get_sessions>:
  4568b8:	sub	sp, sp, #0x30
  4568bc:	stp	x29, x30, [sp, #32]
  4568c0:	add	x29, sp, #0x20
  4568c4:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  4568c8:	add	x8, x8, #0x57c
  4568cc:	mov	w9, #0xfffffffe            	// #-2
  4568d0:	str	x0, [sp, #16]
  4568d4:	ldr	x1, [sp, #16]
  4568d8:	mov	x0, x8
  4568dc:	str	w9, [sp, #8]
  4568e0:	bl	40bd40 <get_files_in_directory@plt>
  4568e4:	str	w0, [sp, #12]
  4568e8:	ldr	w9, [sp, #12]
  4568ec:	ldr	w10, [sp, #8]
  4568f0:	cmp	w9, w10
  4568f4:	b.ne	456914 <sd_get_sessions+0x5c>  // b.any
  4568f8:	ldr	x8, [sp, #16]
  4568fc:	cbz	x8, 45690c <sd_get_sessions+0x54>
  456900:	ldr	x8, [sp, #16]
  456904:	mov	x9, xzr
  456908:	str	x9, [x8]
  45690c:	stur	wzr, [x29, #-4]
  456910:	b	45691c <sd_get_sessions+0x64>
  456914:	ldr	w8, [sp, #12]
  456918:	stur	w8, [x29, #-4]
  45691c:	ldur	w0, [x29, #-4]
  456920:	ldp	x29, x30, [sp, #32]
  456924:	add	sp, sp, #0x30
  456928:	ret

000000000045692c <sd_get_uids>:
  45692c:	sub	sp, sp, #0x90
  456930:	stp	x29, x30, [sp, #128]
  456934:	add	x29, sp, #0x80
  456938:	mov	x8, xzr
  45693c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  456940:	add	x9, x9, #0x593
  456944:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  456948:	add	x10, x10, #0x2c
  45694c:	add	x2, x10, #0x3
  456950:	stur	x0, [x29, #-16]
  456954:	stur	wzr, [x29, #-36]
  456958:	stur	wzr, [x29, #-40]
  45695c:	stur	x8, [x29, #-48]
  456960:	mov	x0, x9
  456964:	str	x2, [sp, #16]
  456968:	bl	40b1f0 <opendir@plt>
  45696c:	stur	x0, [x29, #-24]
  456970:	ldur	x8, [x29, #-24]
  456974:	cbnz	x8, 4569cc <sd_get_uids+0xa0>
  456978:	bl	40a480 <__errno_location@plt>
  45697c:	ldr	w8, [x0]
  456980:	cmp	w8, #0x2
  456984:	b.ne	4569ac <sd_get_uids+0x80>  // b.any
  456988:	ldur	x8, [x29, #-16]
  45698c:	cbz	x8, 45699c <sd_get_uids+0x70>
  456990:	ldur	x8, [x29, #-16]
  456994:	mov	x9, xzr
  456998:	str	x9, [x8]
  45699c:	stur	wzr, [x29, #-4]
  4569a0:	mov	w8, #0x1                   	// #1
  4569a4:	stur	w8, [x29, #-52]
  4569a8:	b	456bd4 <sd_get_uids+0x2a8>
  4569ac:	bl	40a480 <__errno_location@plt>
  4569b0:	ldr	w8, [x0]
  4569b4:	mov	w9, wzr
  4569b8:	subs	w8, w9, w8
  4569bc:	stur	w8, [x29, #-4]
  4569c0:	mov	w8, #0x1                   	// #1
  4569c4:	stur	w8, [x29, #-52]
  4569c8:	b	456bd4 <sd_get_uids+0x2a8>
  4569cc:	bl	40a480 <__errno_location@plt>
  4569d0:	str	wzr, [x0]
  4569d4:	ldur	x0, [x29, #-24]
  4569d8:	bl	40b200 <readdir64@plt>
  4569dc:	stur	x0, [x29, #-32]
  4569e0:	ldur	x8, [x29, #-32]
  4569e4:	cbnz	x8, 456a20 <sd_get_uids+0xf4>
  4569e8:	bl	40a480 <__errno_location@plt>
  4569ec:	ldr	w8, [x0]
  4569f0:	cmp	w8, #0x0
  4569f4:	cset	w8, le
  4569f8:	tbnz	w8, #0, 456a1c <sd_get_uids+0xf0>
  4569fc:	bl	40a480 <__errno_location@plt>
  456a00:	ldr	w8, [x0]
  456a04:	mov	w9, wzr
  456a08:	subs	w8, w9, w8
  456a0c:	stur	w8, [x29, #-4]
  456a10:	mov	w8, #0x1                   	// #1
  456a14:	stur	w8, [x29, #-52]
  456a18:	b	456bd4 <sd_get_uids+0x2a8>
  456a1c:	b	456b98 <sd_get_uids+0x26c>
  456a20:	ldur	x0, [x29, #-24]
  456a24:	ldur	x1, [x29, #-32]
  456a28:	bl	40bd50 <dirent_ensure_type@plt>
  456a2c:	ldur	x8, [x29, #-32]
  456a30:	mov	x0, x8
  456a34:	bl	40bd60 <dirent_is_file@plt>
  456a38:	tbnz	w0, #0, 456a40 <sd_get_uids+0x114>
  456a3c:	b	456b80 <sd_get_uids+0x254>
  456a40:	ldur	x8, [x29, #-32]
  456a44:	add	x0, x8, #0x13
  456a48:	sub	x1, x29, #0x3c
  456a4c:	bl	40b320 <parse_uid@plt>
  456a50:	stur	w0, [x29, #-56]
  456a54:	ldur	w9, [x29, #-56]
  456a58:	cmp	w9, #0x0
  456a5c:	cset	w9, ge  // ge = tcont
  456a60:	tbnz	w9, #0, 456a68 <sd_get_uids+0x13c>
  456a64:	b	456b80 <sd_get_uids+0x254>
  456a68:	ldur	x8, [x29, #-16]
  456a6c:	cbz	x8, 456b74 <sd_get_uids+0x248>
  456a70:	ldur	w8, [x29, #-36]
  456a74:	ldur	w9, [x29, #-40]
  456a78:	cmp	w8, w9
  456a7c:	b.cc	456b04 <sd_get_uids+0x1d8>  // b.lo, b.ul, b.last
  456a80:	mov	w8, #0x10                  	// #16
  456a84:	str	w8, [sp, #52]
  456a88:	ldur	w9, [x29, #-36]
  456a8c:	mov	w10, #0x2                   	// #2
  456a90:	mul	w9, w10, w9
  456a94:	str	w9, [sp, #48]
  456a98:	ldr	w9, [sp, #48]
  456a9c:	cmp	w8, w9
  456aa0:	b.le	456ab0 <sd_get_uids+0x184>
  456aa4:	mov	w8, #0x10                  	// #16
  456aa8:	str	w8, [sp, #12]
  456aac:	b	456ab8 <sd_get_uids+0x18c>
  456ab0:	ldr	w8, [sp, #48]
  456ab4:	str	w8, [sp, #12]
  456ab8:	ldr	w8, [sp, #12]
  456abc:	str	w8, [sp, #44]
  456ac0:	ldr	w8, [sp, #44]
  456ac4:	stur	w8, [x29, #-40]
  456ac8:	ldur	x0, [x29, #-48]
  456acc:	ldur	w8, [x29, #-40]
  456ad0:	mov	w2, w8
  456ad4:	mov	x1, #0x4                   	// #4
  456ad8:	bl	40bd70 <reallocarray@plt>
  456adc:	str	x0, [sp, #56]
  456ae0:	ldr	x9, [sp, #56]
  456ae4:	cbnz	x9, 456afc <sd_get_uids+0x1d0>
  456ae8:	mov	w8, #0xfffffff4            	// #-12
  456aec:	stur	w8, [x29, #-4]
  456af0:	mov	w8, #0x1                   	// #1
  456af4:	stur	w8, [x29, #-52]
  456af8:	b	456bd4 <sd_get_uids+0x2a8>
  456afc:	ldr	x8, [sp, #56]
  456b00:	stur	x8, [x29, #-48]
  456b04:	ldur	w8, [x29, #-36]
  456b08:	ldur	w9, [x29, #-40]
  456b0c:	cmp	w8, w9
  456b10:	cset	w8, cc  // cc = lo, ul, last
  456b14:	mov	w9, #0x1                   	// #1
  456b18:	eor	w8, w8, #0x1
  456b1c:	eor	w8, w8, w9
  456b20:	eor	w8, w8, w9
  456b24:	and	w8, w8, #0x1
  456b28:	mov	w0, w8
  456b2c:	sxtw	x10, w0
  456b30:	cbz	x10, 456b54 <sd_get_uids+0x228>
  456b34:	mov	w0, #0x1                   	// #1
  456b38:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456b3c:	add	x1, x1, #0x5a7
  456b40:	ldr	x2, [sp, #16]
  456b44:	mov	w3, #0x33a                 	// #826
  456b48:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  456b4c:	add	x4, x4, #0x5b8
  456b50:	bl	40a540 <log_assert_failed_realm@plt>
  456b54:	ldur	w8, [x29, #-60]
  456b58:	ldur	x9, [x29, #-48]
  456b5c:	ldursw	x10, [x29, #-36]
  456b60:	mov	w11, w10
  456b64:	add	w11, w11, #0x1
  456b68:	stur	w11, [x29, #-36]
  456b6c:	str	w8, [x9, x10, lsl #2]
  456b70:	b	456b80 <sd_get_uids+0x254>
  456b74:	ldur	w8, [x29, #-36]
  456b78:	add	w8, w8, #0x1
  456b7c:	stur	w8, [x29, #-36]
  456b80:	bl	40a480 <__errno_location@plt>
  456b84:	str	wzr, [x0]
  456b88:	ldur	x0, [x29, #-24]
  456b8c:	bl	40b200 <readdir64@plt>
  456b90:	stur	x0, [x29, #-32]
  456b94:	b	4569e0 <sd_get_uids+0xb4>
  456b98:	ldur	x8, [x29, #-16]
  456b9c:	cbz	x8, 456bc4 <sd_get_uids+0x298>
  456ba0:	ldur	x8, [x29, #-48]
  456ba4:	str	x8, [sp, #32]
  456ba8:	mov	x8, xzr
  456bac:	stur	x8, [x29, #-48]
  456bb0:	ldr	x8, [sp, #32]
  456bb4:	str	x8, [sp, #24]
  456bb8:	ldr	x8, [sp, #24]
  456bbc:	ldur	x9, [x29, #-16]
  456bc0:	str	x8, [x9]
  456bc4:	ldur	w8, [x29, #-36]
  456bc8:	stur	w8, [x29, #-4]
  456bcc:	mov	w8, #0x1                   	// #1
  456bd0:	stur	w8, [x29, #-52]
  456bd4:	sub	x0, x29, #0x30
  456bd8:	bl	454814 <freep>
  456bdc:	sub	x0, x29, #0x18
  456be0:	bl	456bf4 <closedirp>
  456be4:	ldur	w0, [x29, #-4]
  456be8:	ldp	x29, x30, [sp, #128]
  456bec:	add	sp, sp, #0x90
  456bf0:	ret

0000000000456bf4 <closedirp>:
  456bf4:	sub	sp, sp, #0x20
  456bf8:	stp	x29, x30, [sp, #16]
  456bfc:	add	x29, sp, #0x10
  456c00:	str	x0, [sp, #8]
  456c04:	ldr	x8, [sp, #8]
  456c08:	ldr	x8, [x8]
  456c0c:	cbz	x8, 456c1c <closedirp+0x28>
  456c10:	ldr	x8, [sp, #8]
  456c14:	ldr	x0, [x8]
  456c18:	bl	40b230 <closedir@plt>
  456c1c:	ldp	x29, x30, [sp, #16]
  456c20:	add	sp, sp, #0x20
  456c24:	ret

0000000000456c28 <sd_get_machine_names>:
  456c28:	sub	sp, sp, #0x60
  456c2c:	stp	x29, x30, [sp, #80]
  456c30:	add	x29, sp, #0x50
  456c34:	mov	x8, xzr
  456c38:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  456c3c:	add	x9, x9, #0x5d2
  456c40:	mov	w10, #0xfffffffe            	// #-2
  456c44:	sub	x1, x29, #0x18
  456c48:	stur	x0, [x29, #-16]
  456c4c:	stur	x8, [x29, #-24]
  456c50:	mov	x0, x9
  456c54:	str	w10, [sp, #12]
  456c58:	bl	40bd40 <get_files_in_directory@plt>
  456c5c:	str	w0, [sp, #36]
  456c60:	ldr	w10, [sp, #36]
  456c64:	ldr	w11, [sp, #12]
  456c68:	cmp	w10, w11
  456c6c:	b.ne	456c94 <sd_get_machine_names+0x6c>  // b.any
  456c70:	ldur	x8, [x29, #-16]
  456c74:	cbz	x8, 456c84 <sd_get_machine_names+0x5c>
  456c78:	ldur	x8, [x29, #-16]
  456c7c:	mov	x9, xzr
  456c80:	str	x9, [x8]
  456c84:	stur	wzr, [x29, #-4]
  456c88:	mov	w8, #0x1                   	// #1
  456c8c:	str	w8, [sp, #32]
  456c90:	b	456d9c <sd_get_machine_names+0x174>
  456c94:	ldr	w8, [sp, #36]
  456c98:	cmp	w8, #0x0
  456c9c:	cset	w8, ge  // ge = tcont
  456ca0:	tbnz	w8, #0, 456cb8 <sd_get_machine_names+0x90>
  456ca4:	ldr	w8, [sp, #36]
  456ca8:	stur	w8, [x29, #-4]
  456cac:	mov	w8, #0x1                   	// #1
  456cb0:	str	w8, [sp, #32]
  456cb4:	b	456d9c <sd_get_machine_names+0x174>
  456cb8:	ldur	x8, [x29, #-24]
  456cbc:	cbz	x8, 456d60 <sd_get_machine_names+0x138>
  456cc0:	str	wzr, [sp, #36]
  456cc4:	ldur	x8, [x29, #-24]
  456cc8:	str	x8, [sp, #40]
  456ccc:	stur	x8, [x29, #-32]
  456cd0:	ldur	x8, [x29, #-32]
  456cd4:	ldr	x8, [x8]
  456cd8:	cbz	x8, 456d54 <sd_get_machine_names+0x12c>
  456cdc:	ldur	x8, [x29, #-32]
  456ce0:	ldr	x0, [x8]
  456ce4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456ce8:	add	x1, x1, #0x5e9
  456cec:	bl	456db4 <startswith>
  456cf0:	cbnz	x0, 456d0c <sd_get_machine_names+0xe4>
  456cf4:	ldur	x8, [x29, #-32]
  456cf8:	ldr	x0, [x8]
  456cfc:	mov	w9, wzr
  456d00:	and	w1, w9, #0x1
  456d04:	bl	40bd80 <hostname_is_valid@plt>
  456d08:	tbnz	w0, #0, 456d1c <sd_get_machine_names+0xf4>
  456d0c:	ldur	x8, [x29, #-32]
  456d10:	ldr	x0, [x8]
  456d14:	bl	40a530 <free@plt>
  456d18:	b	456d44 <sd_get_machine_names+0x11c>
  456d1c:	ldur	x8, [x29, #-32]
  456d20:	ldr	x8, [x8]
  456d24:	ldr	x9, [sp, #40]
  456d28:	str	x8, [x9]
  456d2c:	ldr	x8, [sp, #40]
  456d30:	add	x8, x8, #0x8
  456d34:	str	x8, [sp, #40]
  456d38:	ldr	w10, [sp, #36]
  456d3c:	add	w10, w10, #0x1
  456d40:	str	w10, [sp, #36]
  456d44:	ldur	x8, [x29, #-32]
  456d48:	add	x8, x8, #0x8
  456d4c:	stur	x8, [x29, #-32]
  456d50:	b	456cd0 <sd_get_machine_names+0xa8>
  456d54:	ldr	x8, [sp, #40]
  456d58:	mov	x9, xzr
  456d5c:	str	x9, [x8]
  456d60:	ldur	x8, [x29, #-16]
  456d64:	cbz	x8, 456d8c <sd_get_machine_names+0x164>
  456d68:	ldur	x8, [x29, #-24]
  456d6c:	str	x8, [sp, #24]
  456d70:	mov	x8, xzr
  456d74:	stur	x8, [x29, #-24]
  456d78:	ldr	x8, [sp, #24]
  456d7c:	str	x8, [sp, #16]
  456d80:	ldr	x8, [sp, #16]
  456d84:	ldur	x9, [x29, #-16]
  456d88:	str	x8, [x9]
  456d8c:	ldr	w8, [sp, #36]
  456d90:	stur	w8, [x29, #-4]
  456d94:	mov	w8, #0x1                   	// #1
  456d98:	str	w8, [sp, #32]
  456d9c:	sub	x0, x29, #0x18
  456da0:	bl	45656c <strv_freep>
  456da4:	ldur	w0, [x29, #-4]
  456da8:	ldp	x29, x30, [sp, #80]
  456dac:	add	sp, sp, #0x60
  456db0:	ret

0000000000456db4 <startswith>:
  456db4:	sub	sp, sp, #0x30
  456db8:	stp	x29, x30, [sp, #32]
  456dbc:	add	x29, sp, #0x20
  456dc0:	str	x0, [sp, #16]
  456dc4:	str	x1, [sp, #8]
  456dc8:	ldr	x0, [sp, #8]
  456dcc:	bl	40a800 <strlen@plt>
  456dd0:	str	x0, [sp]
  456dd4:	ldr	x0, [sp, #16]
  456dd8:	ldr	x1, [sp, #8]
  456ddc:	ldr	x2, [sp]
  456de0:	bl	40a810 <strncmp@plt>
  456de4:	cbnz	w0, 456dfc <startswith+0x48>
  456de8:	ldr	x8, [sp, #16]
  456dec:	ldr	x9, [sp]
  456df0:	add	x8, x8, x9
  456df4:	stur	x8, [x29, #-8]
  456df8:	b	456e04 <startswith+0x50>
  456dfc:	mov	x8, xzr
  456e00:	stur	x8, [x29, #-8]
  456e04:	ldur	x0, [x29, #-8]
  456e08:	ldp	x29, x30, [sp, #32]
  456e0c:	add	sp, sp, #0x30
  456e10:	ret

0000000000456e14 <sd_machine_get_class>:
  456e14:	stp	x29, x30, [sp, #-16]!
  456e18:	mov	x29, sp
  456e1c:	sub	sp, sp, #0xb0
  456e20:	mov	x8, xzr
  456e24:	mov	w9, #0x1                   	// #1
  456e28:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  456e2c:	add	x10, x10, #0x2c
  456e30:	add	x10, x10, #0x3
  456e34:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  456e38:	add	x11, x11, #0x5ef
  456e3c:	mov	w12, #0x0                   	// #0
  456e40:	stur	x0, [x29, #-16]
  456e44:	stur	x1, [x29, #-24]
  456e48:	stur	x8, [x29, #-32]
  456e4c:	stur	w9, [x29, #-140]
  456e50:	stur	x10, [x29, #-152]
  456e54:	stur	x11, [x29, #-160]
  456e58:	stur	w12, [x29, #-164]
  456e5c:	ldur	x8, [x29, #-24]
  456e60:	cmp	x8, #0x0
  456e64:	cset	w9, ne  // ne = any
  456e68:	mov	w10, #0x1                   	// #1
  456e6c:	eor	w9, w9, #0x1
  456e70:	eor	w9, w9, w10
  456e74:	and	w9, w9, #0x1
  456e78:	mov	w0, w9
  456e7c:	sxtw	x8, w0
  456e80:	cbz	x8, 456e90 <sd_machine_get_class+0x7c>
  456e84:	ldur	w8, [x29, #-140]
  456e88:	tbnz	w8, #0, 456ec8 <sd_machine_get_class+0xb4>
  456e8c:	b	456eb4 <sd_machine_get_class+0xa0>
  456e90:	mov	w0, #0x1                   	// #1
  456e94:	adrp	x1, 467000 <on_inotify.__assert_in_set+0x3540>
  456e98:	add	x1, x1, #0xb08
  456e9c:	ldur	x2, [x29, #-152]
  456ea0:	mov	w3, #0x370                 	// #880
  456ea4:	ldur	x4, [x29, #-160]
  456ea8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  456eac:	ldur	w8, [x29, #-164]
  456eb0:	tbnz	w8, #0, 456ec8 <sd_machine_get_class+0xb4>
  456eb4:	mov	w8, #0xffffffea            	// #-22
  456eb8:	stur	w8, [x29, #-4]
  456ebc:	mov	w8, #0x1                   	// #1
  456ec0:	stur	w8, [x29, #-48]
  456ec4:	b	4571fc <sd_machine_get_class+0x3e8>
  456ec8:	ldur	x0, [x29, #-16]
  456ecc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  456ed0:	add	x1, x1, #0x61f
  456ed4:	bl	40aa20 <strcmp@plt>
  456ed8:	cbnz	w0, 456f0c <sd_machine_get_class+0xf8>
  456edc:	adrp	x0, 46d000 <on_inotify.__assert_in_set+0x9540>
  456ee0:	add	x0, x0, #0x817
  456ee4:	bl	40a910 <strdup@plt>
  456ee8:	stur	x0, [x29, #-32]
  456eec:	ldur	x8, [x29, #-32]
  456ef0:	cbnz	x8, 456f08 <sd_machine_get_class+0xf4>
  456ef4:	mov	w8, #0xfffffff4            	// #-12
  456ef8:	stur	w8, [x29, #-4]
  456efc:	mov	w8, #0x1                   	// #1
  456f00:	stur	w8, [x29, #-48]
  456f04:	b	4571fc <sd_machine_get_class+0x3e8>
  456f08:	b	4571cc <sd_machine_get_class+0x3b8>
  456f0c:	ldur	x0, [x29, #-16]
  456f10:	mov	w8, wzr
  456f14:	and	w1, w8, #0x1
  456f18:	bl	40bd80 <hostname_is_valid@plt>
  456f1c:	tbnz	w0, #0, 456f34 <sd_machine_get_class+0x120>
  456f20:	mov	w8, #0xffffffea            	// #-22
  456f24:	stur	w8, [x29, #-4]
  456f28:	mov	w8, #0x1                   	// #1
  456f2c:	stur	w8, [x29, #-48]
  456f30:	b	4571fc <sd_machine_get_class+0x3e8>
  456f34:	sub	x8, x29, #0x40
  456f38:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  456f3c:	add	x9, x9, #0x5d2
  456f40:	stur	x9, [x29, #-64]
  456f44:	ldur	x9, [x29, #-16]
  456f48:	str	x9, [x8, #8]
  456f4c:	stur	xzr, [x29, #-88]
  456f50:	stur	xzr, [x29, #-96]
  456f54:	ldur	x8, [x29, #-96]
  456f58:	mov	w9, #0x0                   	// #0
  456f5c:	cmp	x8, #0x2
  456f60:	stur	w9, [x29, #-168]
  456f64:	b.cs	456f8c <sd_machine_get_class+0x178>  // b.hs, b.nlast
  456f68:	ldur	x8, [x29, #-96]
  456f6c:	mov	x9, #0x8                   	// #8
  456f70:	mul	x8, x9, x8
  456f74:	sub	x9, x29, #0x40
  456f78:	add	x8, x9, x8
  456f7c:	ldr	x8, [x8]
  456f80:	cmp	x8, #0x0
  456f84:	cset	w10, ne  // ne = any
  456f88:	stur	w10, [x29, #-168]
  456f8c:	ldur	w8, [x29, #-168]
  456f90:	tbnz	w8, #0, 456f98 <sd_machine_get_class+0x184>
  456f94:	b	456fd0 <sd_machine_get_class+0x1bc>
  456f98:	ldur	x8, [x29, #-96]
  456f9c:	mov	x9, #0x8                   	// #8
  456fa0:	mul	x8, x9, x8
  456fa4:	sub	x9, x29, #0x40
  456fa8:	add	x8, x9, x8
  456fac:	ldr	x0, [x8]
  456fb0:	bl	40a800 <strlen@plt>
  456fb4:	ldur	x8, [x29, #-88]
  456fb8:	add	x8, x8, x0
  456fbc:	stur	x8, [x29, #-88]
  456fc0:	ldur	x8, [x29, #-96]
  456fc4:	add	x8, x8, #0x1
  456fc8:	stur	x8, [x29, #-96]
  456fcc:	b	456f54 <sd_machine_get_class+0x140>
  456fd0:	ldur	x8, [x29, #-88]
  456fd4:	add	x8, x8, #0x1
  456fd8:	stur	x8, [x29, #-104]
  456fdc:	ldur	x1, [x29, #-104]
  456fe0:	mov	x0, #0x1                   	// #1
  456fe4:	bl	457214 <size_multiply_overflow>
  456fe8:	mov	w8, #0x1                   	// #1
  456fec:	eor	w9, w0, #0x1
  456ff0:	eor	w9, w9, w8
  456ff4:	eor	w9, w9, w8
  456ff8:	eor	w8, w9, w8
  456ffc:	and	w8, w8, #0x1
  457000:	mov	w1, w8
  457004:	sxtw	x10, w1
  457008:	cbz	x10, 457028 <sd_machine_get_class+0x214>
  45700c:	mov	w0, #0x1                   	// #1
  457010:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  457014:	add	x1, x1, #0x694
  457018:	ldur	x2, [x29, #-152]
  45701c:	mov	w3, #0x37a                 	// #890
  457020:	ldur	x4, [x29, #-160]
  457024:	bl	40a540 <log_assert_failed_realm@plt>
  457028:	ldur	x8, [x29, #-104]
  45702c:	mov	x9, #0x1                   	// #1
  457030:	mul	x8, x9, x8
  457034:	cmp	x8, #0x400, lsl #12
  457038:	cset	w10, ls  // ls = plast
  45703c:	mov	w11, #0x1                   	// #1
  457040:	eor	w10, w10, #0x1
  457044:	eor	w10, w10, w11
  457048:	eor	w10, w10, w11
  45704c:	and	w10, w10, #0x1
  457050:	mov	w0, w10
  457054:	sxtw	x8, w0
  457058:	cbz	x8, 457078 <sd_machine_get_class+0x264>
  45705c:	mov	w0, #0x1                   	// #1
  457060:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  457064:	add	x1, x1, #0x6f4
  457068:	ldur	x2, [x29, #-152]
  45706c:	mov	w3, #0x37a                 	// #890
  457070:	ldur	x4, [x29, #-160]
  457074:	bl	40a540 <log_assert_failed_realm@plt>
  457078:	ldur	x8, [x29, #-104]
  45707c:	mov	x9, #0x1                   	// #1
  457080:	mul	x8, x9, x8
  457084:	mul	x8, x8, x9
  457088:	add	x8, x8, #0xf
  45708c:	and	x8, x8, #0xfffffffffffffff0
  457090:	mov	x9, sp
  457094:	subs	x8, x9, x8
  457098:	mov	sp, x8
  45709c:	stur	x8, [x29, #-112]
  4570a0:	ldur	x8, [x29, #-112]
  4570a4:	stur	x8, [x29, #-72]
  4570a8:	stur	x8, [x29, #-80]
  4570ac:	stur	xzr, [x29, #-96]
  4570b0:	ldur	x8, [x29, #-96]
  4570b4:	mov	w9, #0x0                   	// #0
  4570b8:	cmp	x8, #0x2
  4570bc:	stur	w9, [x29, #-172]
  4570c0:	b.cs	4570e8 <sd_machine_get_class+0x2d4>  // b.hs, b.nlast
  4570c4:	ldur	x8, [x29, #-96]
  4570c8:	mov	x9, #0x8                   	// #8
  4570cc:	mul	x8, x9, x8
  4570d0:	sub	x9, x29, #0x40
  4570d4:	add	x8, x9, x8
  4570d8:	ldr	x8, [x8]
  4570dc:	cmp	x8, #0x0
  4570e0:	cset	w10, ne  // ne = any
  4570e4:	stur	w10, [x29, #-172]
  4570e8:	ldur	w8, [x29, #-172]
  4570ec:	tbnz	w8, #0, 4570f4 <sd_machine_get_class+0x2e0>
  4570f0:	b	457128 <sd_machine_get_class+0x314>
  4570f4:	ldur	x0, [x29, #-80]
  4570f8:	ldur	x8, [x29, #-96]
  4570fc:	mov	x9, #0x8                   	// #8
  457100:	mul	x8, x9, x8
  457104:	sub	x9, x29, #0x40
  457108:	add	x8, x9, x8
  45710c:	ldr	x1, [x8]
  457110:	bl	40aca0 <stpcpy@plt>
  457114:	stur	x0, [x29, #-80]
  457118:	ldur	x8, [x29, #-96]
  45711c:	add	x8, x8, #0x1
  457120:	stur	x8, [x29, #-96]
  457124:	b	4570b0 <sd_machine_get_class+0x29c>
  457128:	ldur	x8, [x29, #-80]
  45712c:	mov	w9, #0x0                   	// #0
  457130:	strb	w9, [x8]
  457134:	ldur	x8, [x29, #-72]
  457138:	stur	x8, [x29, #-120]
  45713c:	ldur	x8, [x29, #-120]
  457140:	stur	x8, [x29, #-40]
  457144:	ldur	x1, [x29, #-40]
  457148:	mov	x8, xzr
  45714c:	mov	x0, x8
  457150:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  457154:	add	x2, x2, #0x4ae
  457158:	sub	x3, x29, #0x20
  45715c:	mov	x4, x8
  457160:	bl	40bce0 <parse_env_file_sentinel@plt>
  457164:	stur	w0, [x29, #-44]
  457168:	ldur	w9, [x29, #-44]
  45716c:	mov	w10, #0xfffffffe            	// #-2
  457170:	cmp	w9, w10
  457174:	b.ne	45718c <sd_machine_get_class+0x378>  // b.any
  457178:	mov	w8, #0xfffffffa            	// #-6
  45717c:	stur	w8, [x29, #-4]
  457180:	mov	w8, #0x1                   	// #1
  457184:	stur	w8, [x29, #-48]
  457188:	b	4571fc <sd_machine_get_class+0x3e8>
  45718c:	ldur	w8, [x29, #-44]
  457190:	cmp	w8, #0x0
  457194:	cset	w8, ge  // ge = tcont
  457198:	tbnz	w8, #0, 4571b0 <sd_machine_get_class+0x39c>
  45719c:	ldur	w8, [x29, #-44]
  4571a0:	stur	w8, [x29, #-4]
  4571a4:	mov	w8, #0x1                   	// #1
  4571a8:	stur	w8, [x29, #-48]
  4571ac:	b	4571fc <sd_machine_get_class+0x3e8>
  4571b0:	ldur	x8, [x29, #-32]
  4571b4:	cbnz	x8, 4571cc <sd_machine_get_class+0x3b8>
  4571b8:	mov	w8, #0xfffffffb            	// #-5
  4571bc:	stur	w8, [x29, #-4]
  4571c0:	mov	w8, #0x1                   	// #1
  4571c4:	stur	w8, [x29, #-48]
  4571c8:	b	4571fc <sd_machine_get_class+0x3e8>
  4571cc:	ldur	x8, [x29, #-32]
  4571d0:	stur	x8, [x29, #-128]
  4571d4:	mov	x8, xzr
  4571d8:	stur	x8, [x29, #-32]
  4571dc:	ldur	x8, [x29, #-128]
  4571e0:	stur	x8, [x29, #-136]
  4571e4:	ldur	x8, [x29, #-136]
  4571e8:	ldur	x9, [x29, #-24]
  4571ec:	str	x8, [x9]
  4571f0:	stur	wzr, [x29, #-4]
  4571f4:	mov	w10, #0x1                   	// #1
  4571f8:	stur	w10, [x29, #-48]
  4571fc:	sub	x0, x29, #0x20
  457200:	bl	454814 <freep>
  457204:	ldur	w0, [x29, #-4]
  457208:	mov	sp, x29
  45720c:	ldp	x29, x30, [sp], #16
  457210:	ret

0000000000457214 <size_multiply_overflow>:
  457214:	sub	sp, sp, #0x20
  457218:	str	x0, [sp, #24]
  45721c:	str	x1, [sp, #16]
  457220:	ldr	x8, [sp, #16]
  457224:	mov	w9, #0x0                   	// #0
  457228:	str	w9, [sp, #12]
  45722c:	cbz	x8, 45724c <size_multiply_overflow+0x38>
  457230:	ldr	x8, [sp, #24]
  457234:	ldr	x9, [sp, #16]
  457238:	mov	x10, #0xffffffffffffffff    	// #-1
  45723c:	udiv	x9, x10, x9
  457240:	cmp	x8, x9
  457244:	cset	w11, hi  // hi = pmore
  457248:	str	w11, [sp, #12]
  45724c:	ldr	w8, [sp, #12]
  457250:	mov	w9, #0x1                   	// #1
  457254:	eor	w8, w8, #0x1
  457258:	eor	w8, w8, w9
  45725c:	and	w8, w8, #0x1
  457260:	mov	w0, w8
  457264:	sxtw	x10, w0
  457268:	cmp	x10, #0x0
  45726c:	cset	w8, ne  // ne = any
  457270:	and	w0, w8, #0x1
  457274:	add	sp, sp, #0x20
  457278:	ret

000000000045727c <sd_machine_get_ifindices>:
  45727c:	stp	x29, x30, [sp, #-32]!
  457280:	str	x28, [sp, #16]
  457284:	mov	x29, sp
  457288:	sub	sp, sp, #0x110
  45728c:	sub	x8, x29, #0x38
  457290:	mov	x9, xzr
  457294:	mov	w10, #0x0                   	// #0
  457298:	mov	w11, #0x1                   	// #1
  45729c:	adrp	x12, 46f000 <on_inotify.__assert_in_set+0xb540>
  4572a0:	add	x12, x12, #0x2c
  4572a4:	add	x12, x12, #0x3
  4572a8:	adrp	x13, 46f000 <on_inotify.__assert_in_set+0xb540>
  4572ac:	add	x13, x13, #0x644
  4572b0:	str	x0, [x8, #40]
  4572b4:	str	x1, [x8, #32]
  4572b8:	str	x9, [x8, #24]
  4572bc:	str	xzr, [x8, #8]
  4572c0:	str	xzr, [x8]
  4572c4:	stur	x9, [x29, #-64]
  4572c8:	stur	x8, [x29, #-200]
  4572cc:	stur	w10, [x29, #-204]
  4572d0:	stur	w11, [x29, #-208]
  4572d4:	stur	x12, [x29, #-216]
  4572d8:	stur	x13, [x29, #-224]
  4572dc:	ldur	x8, [x29, #-200]
  4572e0:	ldr	x0, [x8, #40]
  4572e4:	mov	w9, #0x1                   	// #1
  4572e8:	mov	w10, wzr
  4572ec:	and	w1, w10, #0x1
  4572f0:	stur	w9, [x29, #-228]
  4572f4:	bl	40bd80 <hostname_is_valid@plt>
  4572f8:	eor	w9, w0, #0x1
  4572fc:	ldur	w10, [x29, #-228]
  457300:	eor	w9, w9, w10
  457304:	and	w9, w9, #0x1
  457308:	mov	w2, w9
  45730c:	sxtw	x8, w2
  457310:	cbz	x8, 457320 <sd_machine_get_ifindices+0xa4>
  457314:	ldur	w8, [x29, #-208]
  457318:	tbnz	w8, #0, 457358 <sd_machine_get_ifindices+0xdc>
  45731c:	b	457344 <sd_machine_get_ifindices+0xc8>
  457320:	mov	w0, #0x1                   	// #1
  457324:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457328:	add	x1, x1, #0x625
  45732c:	ldur	x2, [x29, #-216]
  457330:	mov	w3, #0x38f                 	// #911
  457334:	ldur	x4, [x29, #-224]
  457338:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45733c:	ldur	w8, [x29, #-204]
  457340:	tbnz	w8, #0, 457358 <sd_machine_get_ifindices+0xdc>
  457344:	mov	w8, #0xffffffea            	// #-22
  457348:	stur	w8, [x29, #-4]
  45734c:	mov	w8, #0x1                   	// #1
  457350:	stur	w8, [x29, #-96]
  457354:	b	457800 <sd_machine_get_ifindices+0x584>
  457358:	ldur	x8, [x29, #-200]
  45735c:	ldr	x9, [x8, #32]
  457360:	cmp	x9, #0x0
  457364:	cset	w10, ne  // ne = any
  457368:	mov	w11, #0x1                   	// #1
  45736c:	eor	w10, w10, #0x1
  457370:	eor	w10, w10, w11
  457374:	and	w10, w10, #0x1
  457378:	mov	w0, w10
  45737c:	sxtw	x9, w0
  457380:	cbz	x9, 457390 <sd_machine_get_ifindices+0x114>
  457384:	ldur	w8, [x29, #-208]
  457388:	tbnz	w8, #0, 4573c8 <sd_machine_get_ifindices+0x14c>
  45738c:	b	4573b4 <sd_machine_get_ifindices+0x138>
  457390:	mov	w0, #0x1                   	// #1
  457394:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457398:	add	x1, x1, #0x677
  45739c:	ldur	x2, [x29, #-216]
  4573a0:	mov	w3, #0x390                 	// #912
  4573a4:	ldur	x4, [x29, #-224]
  4573a8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4573ac:	ldur	w8, [x29, #-204]
  4573b0:	tbnz	w8, #0, 4573c8 <sd_machine_get_ifindices+0x14c>
  4573b4:	mov	w8, #0xffffffea            	// #-22
  4573b8:	stur	w8, [x29, #-4]
  4573bc:	mov	w8, #0x1                   	// #1
  4573c0:	stur	w8, [x29, #-96]
  4573c4:	b	457800 <sd_machine_get_ifindices+0x584>
  4573c8:	sub	x8, x29, #0x70
  4573cc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4573d0:	add	x9, x9, #0x5d2
  4573d4:	stur	x9, [x29, #-112]
  4573d8:	ldur	x9, [x29, #-200]
  4573dc:	ldr	x10, [x9, #40]
  4573e0:	str	x10, [x8, #8]
  4573e4:	stur	xzr, [x29, #-136]
  4573e8:	stur	xzr, [x29, #-144]
  4573ec:	ldur	x8, [x29, #-144]
  4573f0:	mov	w9, #0x0                   	// #0
  4573f4:	cmp	x8, #0x2
  4573f8:	stur	w9, [x29, #-232]
  4573fc:	b.cs	457424 <sd_machine_get_ifindices+0x1a8>  // b.hs, b.nlast
  457400:	ldur	x8, [x29, #-144]
  457404:	mov	x9, #0x8                   	// #8
  457408:	mul	x8, x9, x8
  45740c:	sub	x9, x29, #0x70
  457410:	add	x8, x9, x8
  457414:	ldr	x8, [x8]
  457418:	cmp	x8, #0x0
  45741c:	cset	w10, ne  // ne = any
  457420:	stur	w10, [x29, #-232]
  457424:	ldur	w8, [x29, #-232]
  457428:	tbnz	w8, #0, 457430 <sd_machine_get_ifindices+0x1b4>
  45742c:	b	457468 <sd_machine_get_ifindices+0x1ec>
  457430:	ldur	x8, [x29, #-144]
  457434:	mov	x9, #0x8                   	// #8
  457438:	mul	x8, x9, x8
  45743c:	sub	x9, x29, #0x70
  457440:	add	x8, x9, x8
  457444:	ldr	x0, [x8]
  457448:	bl	40a800 <strlen@plt>
  45744c:	ldur	x8, [x29, #-136]
  457450:	add	x8, x8, x0
  457454:	stur	x8, [x29, #-136]
  457458:	ldur	x8, [x29, #-144]
  45745c:	add	x8, x8, #0x1
  457460:	stur	x8, [x29, #-144]
  457464:	b	4573ec <sd_machine_get_ifindices+0x170>
  457468:	ldur	x8, [x29, #-136]
  45746c:	add	x8, x8, #0x1
  457470:	stur	x8, [x29, #-152]
  457474:	ldur	x1, [x29, #-152]
  457478:	mov	x0, #0x1                   	// #1
  45747c:	bl	457214 <size_multiply_overflow>
  457480:	mov	w8, #0x1                   	// #1
  457484:	eor	w9, w0, #0x1
  457488:	eor	w9, w9, w8
  45748c:	eor	w9, w9, w8
  457490:	eor	w8, w9, w8
  457494:	and	w8, w8, #0x1
  457498:	mov	w1, w8
  45749c:	sxtw	x10, w1
  4574a0:	cbz	x10, 4574c0 <sd_machine_get_ifindices+0x244>
  4574a4:	mov	w0, #0x1                   	// #1
  4574a8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4574ac:	add	x1, x1, #0x694
  4574b0:	ldur	x2, [x29, #-216]
  4574b4:	mov	w3, #0x392                 	// #914
  4574b8:	ldur	x4, [x29, #-224]
  4574bc:	bl	40a540 <log_assert_failed_realm@plt>
  4574c0:	ldur	x8, [x29, #-152]
  4574c4:	mov	x9, #0x1                   	// #1
  4574c8:	mul	x8, x9, x8
  4574cc:	cmp	x8, #0x400, lsl #12
  4574d0:	cset	w10, ls  // ls = plast
  4574d4:	mov	w11, #0x1                   	// #1
  4574d8:	eor	w10, w10, #0x1
  4574dc:	eor	w10, w10, w11
  4574e0:	eor	w10, w10, w11
  4574e4:	and	w10, w10, #0x1
  4574e8:	mov	w0, w10
  4574ec:	sxtw	x8, w0
  4574f0:	cbz	x8, 457510 <sd_machine_get_ifindices+0x294>
  4574f4:	mov	w0, #0x1                   	// #1
  4574f8:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  4574fc:	add	x1, x1, #0x6f4
  457500:	ldur	x2, [x29, #-216]
  457504:	mov	w3, #0x392                 	// #914
  457508:	ldur	x4, [x29, #-224]
  45750c:	bl	40a540 <log_assert_failed_realm@plt>
  457510:	ldur	x8, [x29, #-152]
  457514:	mov	x9, #0x1                   	// #1
  457518:	mul	x8, x9, x8
  45751c:	mul	x8, x8, x9
  457520:	add	x8, x8, #0xf
  457524:	and	x8, x8, #0xfffffffffffffff0
  457528:	mov	x9, sp
  45752c:	subs	x8, x9, x8
  457530:	mov	sp, x8
  457534:	stur	x8, [x29, #-160]
  457538:	ldur	x8, [x29, #-160]
  45753c:	stur	x8, [x29, #-120]
  457540:	stur	x8, [x29, #-128]
  457544:	stur	xzr, [x29, #-144]
  457548:	ldur	x8, [x29, #-144]
  45754c:	mov	w9, #0x0                   	// #0
  457550:	cmp	x8, #0x2
  457554:	stur	w9, [x29, #-236]
  457558:	b.cs	457580 <sd_machine_get_ifindices+0x304>  // b.hs, b.nlast
  45755c:	ldur	x8, [x29, #-144]
  457560:	mov	x9, #0x8                   	// #8
  457564:	mul	x8, x9, x8
  457568:	sub	x9, x29, #0x70
  45756c:	add	x8, x9, x8
  457570:	ldr	x8, [x8]
  457574:	cmp	x8, #0x0
  457578:	cset	w10, ne  // ne = any
  45757c:	stur	w10, [x29, #-236]
  457580:	ldur	w8, [x29, #-236]
  457584:	tbnz	w8, #0, 45758c <sd_machine_get_ifindices+0x310>
  457588:	b	4575c0 <sd_machine_get_ifindices+0x344>
  45758c:	ldur	x0, [x29, #-128]
  457590:	ldur	x8, [x29, #-144]
  457594:	mov	x9, #0x8                   	// #8
  457598:	mul	x8, x9, x8
  45759c:	sub	x9, x29, #0x70
  4575a0:	add	x8, x9, x8
  4575a4:	ldr	x1, [x8]
  4575a8:	bl	40aca0 <stpcpy@plt>
  4575ac:	stur	x0, [x29, #-128]
  4575b0:	ldur	x8, [x29, #-144]
  4575b4:	add	x8, x8, #0x1
  4575b8:	stur	x8, [x29, #-144]
  4575bc:	b	457548 <sd_machine_get_ifindices+0x2cc>
  4575c0:	ldur	x8, [x29, #-128]
  4575c4:	mov	w9, #0x0                   	// #0
  4575c8:	strb	w9, [x8]
  4575cc:	ldur	x8, [x29, #-120]
  4575d0:	stur	x8, [x29, #-168]
  4575d4:	ldur	x8, [x29, #-168]
  4575d8:	stur	x8, [x29, #-72]
  4575dc:	ldur	x1, [x29, #-72]
  4575e0:	mov	x8, xzr
  4575e4:	mov	x0, x8
  4575e8:	adrp	x2, 46f000 <on_inotify.__assert_in_set+0xb540>
  4575ec:	add	x2, x2, #0x681
  4575f0:	sub	x3, x29, #0x20
  4575f4:	mov	x4, x8
  4575f8:	bl	40bce0 <parse_env_file_sentinel@plt>
  4575fc:	stur	w0, [x29, #-92]
  457600:	ldur	w9, [x29, #-92]
  457604:	mov	w10, #0xfffffffe            	// #-2
  457608:	cmp	w9, w10
  45760c:	b.ne	457624 <sd_machine_get_ifindices+0x3a8>  // b.any
  457610:	mov	w8, #0xfffffffa            	// #-6
  457614:	stur	w8, [x29, #-4]
  457618:	mov	w8, #0x1                   	// #1
  45761c:	stur	w8, [x29, #-96]
  457620:	b	457800 <sd_machine_get_ifindices+0x584>
  457624:	ldur	w8, [x29, #-92]
  457628:	cmp	w8, #0x0
  45762c:	cset	w8, ge  // ge = tcont
  457630:	tbnz	w8, #0, 457648 <sd_machine_get_ifindices+0x3cc>
  457634:	ldur	w8, [x29, #-92]
  457638:	stur	w8, [x29, #-4]
  45763c:	mov	w8, #0x1                   	// #1
  457640:	stur	w8, [x29, #-96]
  457644:	b	457800 <sd_machine_get_ifindices+0x584>
  457648:	ldur	x8, [x29, #-200]
  45764c:	ldr	x9, [x8, #24]
  457650:	cbnz	x9, 457674 <sd_machine_get_ifindices+0x3f8>
  457654:	ldur	x8, [x29, #-200]
  457658:	ldr	x9, [x8, #32]
  45765c:	mov	x10, xzr
  457660:	str	x10, [x9]
  457664:	stur	wzr, [x29, #-4]
  457668:	mov	w11, #0x1                   	// #1
  45766c:	stur	w11, [x29, #-96]
  457670:	b	457800 <sd_machine_get_ifindices+0x584>
  457674:	ldur	x8, [x29, #-200]
  457678:	ldr	x9, [x8, #24]
  45767c:	sub	x0, x29, #0x58
  457680:	stur	x9, [x29, #-88]
  457684:	sub	x1, x29, #0x28
  457688:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  45768c:	add	x2, x2, #0x5b7
  457690:	mov	w10, wzr
  457694:	mov	w3, w10
  457698:	bl	40b8b0 <split@plt>
  45769c:	stur	x0, [x29, #-80]
  4576a0:	ldur	x8, [x29, #-80]
  4576a4:	cbz	x8, 4577e0 <sd_machine_get_ifindices+0x564>
  4576a8:	ldur	x8, [x29, #-200]
  4576ac:	ldr	x9, [x8, #16]
  4576b0:	mov	x10, #0x1                   	// #1
  4576b4:	add	x9, x9, #0x1
  4576b8:	mov	x11, sp
  4576bc:	stur	x11, [x29, #-176]
  4576c0:	mul	x10, x9, x10
  4576c4:	add	x10, x10, #0xf
  4576c8:	and	x10, x10, #0xfffffffffffffff0
  4576cc:	mov	x11, sp
  4576d0:	subs	x10, x11, x10
  4576d4:	mov	sp, x10
  4576d8:	stur	x9, [x29, #-184]
  4576dc:	ldur	x1, [x29, #-80]
  4576e0:	ldr	x9, [x8, #16]
  4576e4:	mov	x0, x10
  4576e8:	mov	x2, x9
  4576ec:	stur	x10, [x29, #-248]
  4576f0:	stur	x9, [x29, #-256]
  4576f4:	bl	40a600 <memcpy@plt>
  4576f8:	ldur	x8, [x29, #-248]
  4576fc:	ldur	x9, [x29, #-256]
  457700:	add	x10, x8, x9
  457704:	mov	w12, #0x0                   	// #0
  457708:	strb	w12, [x10]
  45770c:	mov	x0, x8
  457710:	sub	x1, x29, #0xbc
  457714:	bl	40bd90 <parse_ifindex@plt>
  457718:	cmp	w0, #0x0
  45771c:	cset	w12, ge  // ge = tcont
  457720:	tbnz	w12, #0, 457730 <sd_machine_get_ifindices+0x4b4>
  457724:	mov	w8, #0x12                  	// #18
  457728:	stur	w8, [x29, #-96]
  45772c:	b	45778c <sd_machine_get_ifindices+0x510>
  457730:	ldur	x8, [x29, #-200]
  457734:	ldr	x9, [x8]
  457738:	add	x2, x9, #0x1
  45773c:	sub	x0, x29, #0x40
  457740:	sub	x1, x29, #0x30
  457744:	mov	x3, #0x4                   	// #4
  457748:	bl	40bda0 <greedy_realloc@plt>
  45774c:	cbnz	x0, 45776c <sd_machine_get_ifindices+0x4f0>
  457750:	ldur	x0, [x29, #-64]
  457754:	bl	40a530 <free@plt>
  457758:	mov	w8, #0xfffffff4            	// #-12
  45775c:	stur	w8, [x29, #-4]
  457760:	mov	w8, #0x1                   	// #1
  457764:	stur	w8, [x29, #-96]
  457768:	b	45778c <sd_machine_get_ifindices+0x510>
  45776c:	ldur	w8, [x29, #-188]
  457770:	ldur	x9, [x29, #-64]
  457774:	ldur	x10, [x29, #-200]
  457778:	ldr	x11, [x10]
  45777c:	add	x12, x11, #0x1
  457780:	str	x12, [x10]
  457784:	str	w8, [x9, x11, lsl #2]
  457788:	stur	wzr, [x29, #-96]
  45778c:	ldur	x8, [x29, #-176]
  457790:	mov	sp, x8
  457794:	ldur	w9, [x29, #-96]
  457798:	sub	x8, x29, #0x4
  45779c:	stur	w9, [x8, #-256]
  4577a0:	cbz	w9, 4577bc <sd_machine_get_ifindices+0x540>
  4577a4:	b	4577a8 <sd_machine_get_ifindices+0x52c>
  4577a8:	sub	x8, x29, #0x4
  4577ac:	ldur	w8, [x8, #-256]
  4577b0:	cmp	w8, #0x12
  4577b4:	b.eq	4577bc <sd_machine_get_ifindices+0x540>  // b.none
  4577b8:	b	457800 <sd_machine_get_ifindices+0x584>
  4577bc:	sub	x0, x29, #0x58
  4577c0:	sub	x1, x29, #0x28
  4577c4:	adrp	x2, 466000 <on_inotify.__assert_in_set+0x2540>
  4577c8:	add	x2, x2, #0x5b7
  4577cc:	mov	w8, wzr
  4577d0:	mov	w3, w8
  4577d4:	bl	40b8b0 <split@plt>
  4577d8:	stur	x0, [x29, #-80]
  4577dc:	b	4576a0 <sd_machine_get_ifindices+0x424>
  4577e0:	ldur	x8, [x29, #-64]
  4577e4:	ldur	x9, [x29, #-200]
  4577e8:	ldr	x10, [x9, #32]
  4577ec:	str	x8, [x10]
  4577f0:	ldr	x8, [x9]
  4577f4:	stur	w8, [x29, #-4]
  4577f8:	mov	w8, #0x1                   	// #1
  4577fc:	stur	w8, [x29, #-96]
  457800:	sub	x0, x29, #0x20
  457804:	bl	454814 <freep>
  457808:	ldur	w0, [x29, #-4]
  45780c:	mov	sp, x29
  457810:	ldr	x28, [sp, #16]
  457814:	ldp	x29, x30, [sp], #32
  457818:	ret

000000000045781c <sd_login_monitor_new>:
  45781c:	sub	sp, sp, #0x50
  457820:	stp	x29, x30, [sp, #64]
  457824:	add	x29, sp, #0x40
  457828:	mov	w8, #0xffffffff            	// #-1
  45782c:	mov	w9, #0x0                   	// #0
  457830:	mov	w10, #0x1                   	// #1
  457834:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  457838:	add	x11, x11, #0x2c
  45783c:	add	x2, x11, #0x3
  457840:	mov	w12, #0x0                   	// #0
  457844:	stur	x0, [x29, #-16]
  457848:	stur	x1, [x29, #-24]
  45784c:	stur	w8, [x29, #-28]
  457850:	sturb	w9, [x29, #-29]
  457854:	str	w10, [sp, #20]
  457858:	str	x2, [sp, #8]
  45785c:	str	w12, [sp, #4]
  457860:	ldur	x8, [x29, #-24]
  457864:	cmp	x8, #0x0
  457868:	cset	w9, ne  // ne = any
  45786c:	mov	w10, #0x1                   	// #1
  457870:	eor	w9, w9, #0x1
  457874:	eor	w9, w9, w10
  457878:	and	w9, w9, #0x1
  45787c:	mov	w0, w9
  457880:	sxtw	x8, w0
  457884:	cbz	x8, 457894 <sd_login_monitor_new+0x78>
  457888:	ldr	w8, [sp, #20]
  45788c:	tbnz	w8, #0, 4578d0 <sd_login_monitor_new+0xb4>
  457890:	b	4578bc <sd_login_monitor_new+0xa0>
  457894:	mov	w0, #0x1                   	// #1
  457898:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  45789c:	add	x1, x1, #0xeec
  4578a0:	ldr	x2, [sp, #8]
  4578a4:	mov	w3, #0x3bf                 	// #959
  4578a8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4578ac:	add	x4, x4, #0x687
  4578b0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4578b4:	ldr	w8, [sp, #4]
  4578b8:	tbnz	w8, #0, 4578d0 <sd_login_monitor_new+0xb4>
  4578bc:	mov	w8, #0xffffffea            	// #-22
  4578c0:	stur	w8, [x29, #-4]
  4578c4:	mov	w8, #0x1                   	// #1
  4578c8:	str	w8, [sp, #24]
  4578cc:	b	457b00 <sd_login_monitor_new+0x2e4>
  4578d0:	mov	w0, #0x800                 	// #2048
  4578d4:	movk	w0, #0x8, lsl #16
  4578d8:	bl	40b540 <inotify_init1@plt>
  4578dc:	stur	w0, [x29, #-28]
  4578e0:	ldur	w8, [x29, #-28]
  4578e4:	cmp	w8, #0x0
  4578e8:	cset	w8, ge  // ge = tcont
  4578ec:	tbnz	w8, #0, 457910 <sd_login_monitor_new+0xf4>
  4578f0:	bl	40a480 <__errno_location@plt>
  4578f4:	ldr	w8, [x0]
  4578f8:	mov	w9, wzr
  4578fc:	subs	w8, w9, w8
  457900:	stur	w8, [x29, #-4]
  457904:	mov	w8, #0x1                   	// #1
  457908:	str	w8, [sp, #24]
  45790c:	b	457b00 <sd_login_monitor_new+0x2e4>
  457910:	ldur	x8, [x29, #-16]
  457914:	cbz	x8, 45792c <sd_login_monitor_new+0x110>
  457918:	ldur	x0, [x29, #-16]
  45791c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457920:	add	x1, x1, #0x6c3
  457924:	bl	40aa20 <strcmp@plt>
  457928:	cbnz	w0, 45797c <sd_login_monitor_new+0x160>
  45792c:	ldur	w0, [x29, #-28]
  457930:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  457934:	add	x1, x1, #0xec3
  457938:	mov	w2, #0x280                 	// #640
  45793c:	bl	40b570 <inotify_add_watch@plt>
  457940:	str	w0, [sp, #28]
  457944:	ldr	w8, [sp, #28]
  457948:	cmp	w8, #0x0
  45794c:	cset	w8, ge  // ge = tcont
  457950:	tbnz	w8, #0, 457974 <sd_login_monitor_new+0x158>
  457954:	bl	40a480 <__errno_location@plt>
  457958:	ldr	w8, [x0]
  45795c:	mov	w9, wzr
  457960:	subs	w8, w9, w8
  457964:	stur	w8, [x29, #-4]
  457968:	mov	w8, #0x1                   	// #1
  45796c:	str	w8, [sp, #24]
  457970:	b	457b00 <sd_login_monitor_new+0x2e4>
  457974:	mov	w8, #0x1                   	// #1
  457978:	sturb	w8, [x29, #-29]
  45797c:	ldur	x8, [x29, #-16]
  457980:	cbz	x8, 457998 <sd_login_monitor_new+0x17c>
  457984:	ldur	x0, [x29, #-16]
  457988:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  45798c:	add	x1, x1, #0x69d
  457990:	bl	40aa20 <strcmp@plt>
  457994:	cbnz	w0, 4579e8 <sd_login_monitor_new+0x1cc>
  457998:	ldur	w0, [x29, #-28]
  45799c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4579a0:	add	x1, x1, #0x57c
  4579a4:	mov	w2, #0x280                 	// #640
  4579a8:	bl	40b570 <inotify_add_watch@plt>
  4579ac:	str	w0, [sp, #28]
  4579b0:	ldr	w8, [sp, #28]
  4579b4:	cmp	w8, #0x0
  4579b8:	cset	w8, ge  // ge = tcont
  4579bc:	tbnz	w8, #0, 4579e0 <sd_login_monitor_new+0x1c4>
  4579c0:	bl	40a480 <__errno_location@plt>
  4579c4:	ldr	w8, [x0]
  4579c8:	mov	w9, wzr
  4579cc:	subs	w8, w9, w8
  4579d0:	stur	w8, [x29, #-4]
  4579d4:	mov	w8, #0x1                   	// #1
  4579d8:	str	w8, [sp, #24]
  4579dc:	b	457b00 <sd_login_monitor_new+0x2e4>
  4579e0:	mov	w8, #0x1                   	// #1
  4579e4:	sturb	w8, [x29, #-29]
  4579e8:	ldur	x8, [x29, #-16]
  4579ec:	cbz	x8, 457a04 <sd_login_monitor_new+0x1e8>
  4579f0:	ldur	x0, [x29, #-16]
  4579f4:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  4579f8:	add	x1, x1, #0x175
  4579fc:	bl	40aa20 <strcmp@plt>
  457a00:	cbnz	w0, 457a54 <sd_login_monitor_new+0x238>
  457a04:	ldur	w0, [x29, #-28]
  457a08:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457a0c:	add	x1, x1, #0x593
  457a10:	mov	w2, #0x280                 	// #640
  457a14:	bl	40b570 <inotify_add_watch@plt>
  457a18:	str	w0, [sp, #28]
  457a1c:	ldr	w8, [sp, #28]
  457a20:	cmp	w8, #0x0
  457a24:	cset	w8, ge  // ge = tcont
  457a28:	tbnz	w8, #0, 457a4c <sd_login_monitor_new+0x230>
  457a2c:	bl	40a480 <__errno_location@plt>
  457a30:	ldr	w8, [x0]
  457a34:	mov	w9, wzr
  457a38:	subs	w8, w9, w8
  457a3c:	stur	w8, [x29, #-4]
  457a40:	mov	w8, #0x1                   	// #1
  457a44:	str	w8, [sp, #24]
  457a48:	b	457b00 <sd_login_monitor_new+0x2e4>
  457a4c:	mov	w8, #0x1                   	// #1
  457a50:	sturb	w8, [x29, #-29]
  457a54:	ldur	x8, [x29, #-16]
  457a58:	cbz	x8, 457a70 <sd_login_monitor_new+0x254>
  457a5c:	ldur	x0, [x29, #-16]
  457a60:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457a64:	add	x1, x1, #0x272
  457a68:	bl	40aa20 <strcmp@plt>
  457a6c:	cbnz	w0, 457ac0 <sd_login_monitor_new+0x2a4>
  457a70:	ldur	w0, [x29, #-28]
  457a74:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457a78:	add	x1, x1, #0x5d2
  457a7c:	mov	w2, #0x280                 	// #640
  457a80:	bl	40b570 <inotify_add_watch@plt>
  457a84:	str	w0, [sp, #28]
  457a88:	ldr	w8, [sp, #28]
  457a8c:	cmp	w8, #0x0
  457a90:	cset	w8, ge  // ge = tcont
  457a94:	tbnz	w8, #0, 457ab8 <sd_login_monitor_new+0x29c>
  457a98:	bl	40a480 <__errno_location@plt>
  457a9c:	ldr	w8, [x0]
  457aa0:	mov	w9, wzr
  457aa4:	subs	w8, w9, w8
  457aa8:	stur	w8, [x29, #-4]
  457aac:	mov	w8, #0x1                   	// #1
  457ab0:	str	w8, [sp, #24]
  457ab4:	b	457b00 <sd_login_monitor_new+0x2e4>
  457ab8:	mov	w8, #0x1                   	// #1
  457abc:	sturb	w8, [x29, #-29]
  457ac0:	ldurb	w8, [x29, #-29]
  457ac4:	tbnz	w8, #0, 457adc <sd_login_monitor_new+0x2c0>
  457ac8:	mov	w8, #0xffffffea            	// #-22
  457acc:	stur	w8, [x29, #-4]
  457ad0:	mov	w8, #0x1                   	// #1
  457ad4:	str	w8, [sp, #24]
  457ad8:	b	457b00 <sd_login_monitor_new+0x2e4>
  457adc:	ldur	w0, [x29, #-28]
  457ae0:	bl	457b40 <FD_TO_MONITOR>
  457ae4:	ldur	x8, [x29, #-24]
  457ae8:	str	x0, [x8]
  457aec:	mov	w9, #0xffffffff            	// #-1
  457af0:	stur	w9, [x29, #-28]
  457af4:	stur	wzr, [x29, #-4]
  457af8:	mov	w9, #0x1                   	// #1
  457afc:	str	w9, [sp, #24]
  457b00:	sub	x0, x29, #0x1c
  457b04:	bl	457b18 <closep>
  457b08:	ldur	w0, [x29, #-4]
  457b0c:	ldp	x29, x30, [sp, #64]
  457b10:	add	sp, sp, #0x50
  457b14:	ret

0000000000457b18 <closep>:
  457b18:	sub	sp, sp, #0x20
  457b1c:	stp	x29, x30, [sp, #16]
  457b20:	add	x29, sp, #0x10
  457b24:	str	x0, [sp, #8]
  457b28:	ldr	x8, [sp, #8]
  457b2c:	ldr	w0, [x8]
  457b30:	bl	40a760 <safe_close@plt>
  457b34:	ldp	x29, x30, [sp, #16]
  457b38:	add	sp, sp, #0x20
  457b3c:	ret

0000000000457b40 <FD_TO_MONITOR>:
  457b40:	sub	sp, sp, #0x10
  457b44:	str	w0, [sp, #12]
  457b48:	ldr	w8, [sp, #12]
  457b4c:	add	w8, w8, #0x1
  457b50:	mov	w1, w8
  457b54:	sxtw	x9, w1
  457b58:	mov	x0, x9
  457b5c:	add	sp, sp, #0x10
  457b60:	ret

0000000000457b64 <sd_login_monitor_unref>:
  457b64:	sub	sp, sp, #0x30
  457b68:	stp	x29, x30, [sp, #32]
  457b6c:	add	x29, sp, #0x20
  457b70:	str	x0, [sp, #16]
  457b74:	ldr	x8, [sp, #16]
  457b78:	cbnz	x8, 457b88 <sd_login_monitor_unref+0x24>
  457b7c:	mov	x8, xzr
  457b80:	stur	x8, [x29, #-8]
  457b84:	b	457ba4 <sd_login_monitor_unref+0x40>
  457b88:	ldr	x0, [sp, #16]
  457b8c:	bl	457bb4 <MONITOR_TO_FD>
  457b90:	str	w0, [sp, #12]
  457b94:	ldr	w0, [sp, #12]
  457b98:	bl	40bdb0 <close_nointr@plt>
  457b9c:	mov	x8, xzr
  457ba0:	stur	x8, [x29, #-8]
  457ba4:	ldur	x0, [x29, #-8]
  457ba8:	ldp	x29, x30, [sp, #32]
  457bac:	add	sp, sp, #0x30
  457bb0:	ret

0000000000457bb4 <MONITOR_TO_FD>:
  457bb4:	sub	sp, sp, #0x10
  457bb8:	str	x0, [sp, #8]
  457bbc:	ldr	x8, [sp, #8]
  457bc0:	subs	w0, w8, #0x1
  457bc4:	add	sp, sp, #0x10
  457bc8:	ret

0000000000457bcc <sd_login_monitor_flush>:
  457bcc:	sub	sp, sp, #0x40
  457bd0:	stp	x29, x30, [sp, #48]
  457bd4:	add	x29, sp, #0x30
  457bd8:	mov	w8, #0x1                   	// #1
  457bdc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  457be0:	add	x9, x9, #0x2c
  457be4:	add	x2, x9, #0x3
  457be8:	mov	w10, #0x0                   	// #0
  457bec:	stur	x0, [x29, #-16]
  457bf0:	str	w8, [sp, #24]
  457bf4:	str	x2, [sp, #16]
  457bf8:	str	w10, [sp, #12]
  457bfc:	ldur	x8, [x29, #-16]
  457c00:	cmp	x8, #0x0
  457c04:	cset	w9, ne  // ne = any
  457c08:	mov	w10, #0x1                   	// #1
  457c0c:	eor	w9, w9, #0x1
  457c10:	eor	w9, w9, w10
  457c14:	and	w9, w9, #0x1
  457c18:	mov	w0, w9
  457c1c:	sxtw	x8, w0
  457c20:	cbz	x8, 457c30 <sd_login_monitor_flush+0x64>
  457c24:	ldr	w8, [sp, #24]
  457c28:	tbnz	w8, #0, 457c64 <sd_login_monitor_flush+0x98>
  457c2c:	b	457c58 <sd_login_monitor_flush+0x8c>
  457c30:	mov	w0, #0x1                   	// #1
  457c34:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  457c38:	add	x1, x1, #0xeec
  457c3c:	ldr	x2, [sp, #16]
  457c40:	mov	w3, #0x3fd                 	// #1021
  457c44:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  457c48:	add	x4, x4, #0x6c8
  457c4c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  457c50:	ldr	w8, [sp, #12]
  457c54:	tbnz	w8, #0, 457c64 <sd_login_monitor_flush+0x98>
  457c58:	mov	w8, #0xffffffea            	// #-22
  457c5c:	stur	w8, [x29, #-4]
  457c60:	b	457c94 <sd_login_monitor_flush+0xc8>
  457c64:	ldur	x0, [x29, #-16]
  457c68:	bl	457bb4 <MONITOR_TO_FD>
  457c6c:	bl	40bdc0 <flush_fd@plt>
  457c70:	stur	w0, [x29, #-20]
  457c74:	ldur	w8, [x29, #-20]
  457c78:	cmp	w8, #0x0
  457c7c:	cset	w8, ge  // ge = tcont
  457c80:	tbnz	w8, #0, 457c90 <sd_login_monitor_flush+0xc4>
  457c84:	ldur	w8, [x29, #-20]
  457c88:	stur	w8, [x29, #-4]
  457c8c:	b	457c94 <sd_login_monitor_flush+0xc8>
  457c90:	stur	wzr, [x29, #-4]
  457c94:	ldur	w0, [x29, #-4]
  457c98:	ldp	x29, x30, [sp, #48]
  457c9c:	add	sp, sp, #0x40
  457ca0:	ret

0000000000457ca4 <sd_login_monitor_get_fd>:
  457ca4:	sub	sp, sp, #0x40
  457ca8:	stp	x29, x30, [sp, #48]
  457cac:	add	x29, sp, #0x30
  457cb0:	mov	w8, #0x1                   	// #1
  457cb4:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  457cb8:	add	x9, x9, #0x2c
  457cbc:	add	x2, x9, #0x3
  457cc0:	mov	w10, #0x0                   	// #0
  457cc4:	stur	x0, [x29, #-16]
  457cc8:	stur	w8, [x29, #-20]
  457ccc:	str	x2, [sp, #16]
  457cd0:	str	w10, [sp, #12]
  457cd4:	ldur	x8, [x29, #-16]
  457cd8:	cmp	x8, #0x0
  457cdc:	cset	w9, ne  // ne = any
  457ce0:	mov	w10, #0x1                   	// #1
  457ce4:	eor	w9, w9, #0x1
  457ce8:	eor	w9, w9, w10
  457cec:	and	w9, w9, #0x1
  457cf0:	mov	w0, w9
  457cf4:	sxtw	x8, w0
  457cf8:	cbz	x8, 457d08 <sd_login_monitor_get_fd+0x64>
  457cfc:	ldur	w8, [x29, #-20]
  457d00:	tbnz	w8, #0, 457d3c <sd_login_monitor_get_fd+0x98>
  457d04:	b	457d30 <sd_login_monitor_get_fd+0x8c>
  457d08:	mov	w0, #0x1                   	// #1
  457d0c:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  457d10:	add	x1, x1, #0xeec
  457d14:	ldr	x2, [sp, #16]
  457d18:	mov	w3, #0x408                 	// #1032
  457d1c:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  457d20:	add	x4, x4, #0x6f7
  457d24:	bl	40ad60 <log_assert_failed_return_realm@plt>
  457d28:	ldr	w8, [sp, #12]
  457d2c:	tbnz	w8, #0, 457d3c <sd_login_monitor_get_fd+0x98>
  457d30:	mov	w8, #0xffffffea            	// #-22
  457d34:	stur	w8, [x29, #-4]
  457d38:	b	457d48 <sd_login_monitor_get_fd+0xa4>
  457d3c:	ldur	x0, [x29, #-16]
  457d40:	bl	457bb4 <MONITOR_TO_FD>
  457d44:	stur	w0, [x29, #-4]
  457d48:	ldur	w0, [x29, #-4]
  457d4c:	ldp	x29, x30, [sp, #48]
  457d50:	add	sp, sp, #0x40
  457d54:	ret

0000000000457d58 <sd_login_monitor_get_events>:
  457d58:	sub	sp, sp, #0x40
  457d5c:	stp	x29, x30, [sp, #48]
  457d60:	add	x29, sp, #0x30
  457d64:	mov	w8, #0x1                   	// #1
  457d68:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  457d6c:	add	x9, x9, #0x2c
  457d70:	add	x2, x9, #0x3
  457d74:	mov	w10, #0x0                   	// #0
  457d78:	stur	x0, [x29, #-16]
  457d7c:	stur	w8, [x29, #-20]
  457d80:	str	x2, [sp, #16]
  457d84:	str	w10, [sp, #12]
  457d88:	ldur	x8, [x29, #-16]
  457d8c:	cmp	x8, #0x0
  457d90:	cset	w9, ne  // ne = any
  457d94:	mov	w10, #0x1                   	// #1
  457d98:	eor	w9, w9, #0x1
  457d9c:	eor	w9, w9, w10
  457da0:	and	w9, w9, #0x1
  457da4:	mov	w0, w9
  457da8:	sxtw	x8, w0
  457dac:	cbz	x8, 457dbc <sd_login_monitor_get_events+0x64>
  457db0:	ldur	w8, [x29, #-20]
  457db4:	tbnz	w8, #0, 457df0 <sd_login_monitor_get_events+0x98>
  457db8:	b	457de4 <sd_login_monitor_get_events+0x8c>
  457dbc:	mov	w0, #0x1                   	// #1
  457dc0:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  457dc4:	add	x1, x1, #0xeec
  457dc8:	ldr	x2, [sp, #16]
  457dcc:	mov	w3, #0x40f                 	// #1039
  457dd0:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  457dd4:	add	x4, x4, #0x727
  457dd8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  457ddc:	ldr	w8, [sp, #12]
  457de0:	tbnz	w8, #0, 457df0 <sd_login_monitor_get_events+0x98>
  457de4:	mov	w8, #0xffffffea            	// #-22
  457de8:	stur	w8, [x29, #-4]
  457dec:	b	457df8 <sd_login_monitor_get_events+0xa0>
  457df0:	mov	w8, #0x1                   	// #1
  457df4:	stur	w8, [x29, #-4]
  457df8:	ldur	w0, [x29, #-4]
  457dfc:	ldp	x29, x30, [sp, #48]
  457e00:	add	sp, sp, #0x40
  457e04:	ret

0000000000457e08 <sd_login_monitor_get_timeout>:
  457e08:	sub	sp, sp, #0x40
  457e0c:	stp	x29, x30, [sp, #48]
  457e10:	add	x29, sp, #0x30
  457e14:	mov	w8, #0x1                   	// #1
  457e18:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  457e1c:	add	x9, x9, #0x2c
  457e20:	add	x9, x9, #0x3
  457e24:	mov	w10, #0x0                   	// #0
  457e28:	stur	x0, [x29, #-16]
  457e2c:	str	x1, [sp, #24]
  457e30:	str	w8, [sp, #20]
  457e34:	str	x9, [sp, #8]
  457e38:	str	w10, [sp, #4]
  457e3c:	ldur	x8, [x29, #-16]
  457e40:	cmp	x8, #0x0
  457e44:	cset	w9, ne  // ne = any
  457e48:	mov	w10, #0x1                   	// #1
  457e4c:	eor	w9, w9, #0x1
  457e50:	eor	w9, w9, w10
  457e54:	and	w9, w9, #0x1
  457e58:	mov	w0, w9
  457e5c:	sxtw	x8, w0
  457e60:	cbz	x8, 457e70 <sd_login_monitor_get_timeout+0x68>
  457e64:	ldr	w8, [sp, #20]
  457e68:	tbnz	w8, #0, 457ea4 <sd_login_monitor_get_timeout+0x9c>
  457e6c:	b	457e98 <sd_login_monitor_get_timeout+0x90>
  457e70:	mov	w0, #0x1                   	// #1
  457e74:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  457e78:	add	x1, x1, #0xeec
  457e7c:	ldr	x2, [sp, #8]
  457e80:	mov	w3, #0x41a                 	// #1050
  457e84:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  457e88:	add	x4, x4, #0x75b
  457e8c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  457e90:	ldr	w8, [sp, #4]
  457e94:	tbnz	w8, #0, 457ea4 <sd_login_monitor_get_timeout+0x9c>
  457e98:	mov	w8, #0xffffffea            	// #-22
  457e9c:	stur	w8, [x29, #-4]
  457ea0:	b	457f1c <sd_login_monitor_get_timeout+0x114>
  457ea4:	ldr	x8, [sp, #24]
  457ea8:	cmp	x8, #0x0
  457eac:	cset	w9, ne  // ne = any
  457eb0:	mov	w10, #0x1                   	// #1
  457eb4:	eor	w9, w9, #0x1
  457eb8:	eor	w9, w9, w10
  457ebc:	and	w9, w9, #0x1
  457ec0:	mov	w0, w9
  457ec4:	sxtw	x8, w0
  457ec8:	cbz	x8, 457ed8 <sd_login_monitor_get_timeout+0xd0>
  457ecc:	ldr	w8, [sp, #20]
  457ed0:	tbnz	w8, #0, 457f0c <sd_login_monitor_get_timeout+0x104>
  457ed4:	b	457f00 <sd_login_monitor_get_timeout+0xf8>
  457ed8:	mov	w0, #0x1                   	// #1
  457edc:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  457ee0:	add	x1, x1, #0x79c
  457ee4:	ldr	x2, [sp, #8]
  457ee8:	mov	w3, #0x41b                 	// #1051
  457eec:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  457ef0:	add	x4, x4, #0x75b
  457ef4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  457ef8:	ldr	w8, [sp, #4]
  457efc:	tbnz	w8, #0, 457f0c <sd_login_monitor_get_timeout+0x104>
  457f00:	mov	w8, #0xffffffea            	// #-22
  457f04:	stur	w8, [x29, #-4]
  457f08:	b	457f1c <sd_login_monitor_get_timeout+0x114>
  457f0c:	ldr	x8, [sp, #24]
  457f10:	mov	x9, #0xffffffffffffffff    	// #-1
  457f14:	str	x9, [x8]
  457f18:	stur	wzr, [x29, #-4]
  457f1c:	ldur	w0, [x29, #-4]
  457f20:	ldp	x29, x30, [sp, #48]
  457f24:	add	sp, sp, #0x40
  457f28:	ret

0000000000457f2c <link_config_gperf_lookup>:
  457f2c:	sub	sp, sp, #0x40
  457f30:	stp	x29, x30, [sp, #48]
  457f34:	add	x29, sp, #0x30
  457f38:	stur	x0, [x29, #-16]
  457f3c:	str	x1, [sp, #24]
  457f40:	ldr	x8, [sp, #24]
  457f44:	cmp	x8, #0x1f
  457f48:	b.hi	457ff4 <link_config_gperf_lookup+0xc8>  // b.pmore
  457f4c:	ldr	x8, [sp, #24]
  457f50:	cmp	x8, #0x9
  457f54:	b.cc	457ff4 <link_config_gperf_lookup+0xc8>  // b.lo, b.ul, b.last
  457f58:	ldur	x0, [x29, #-16]
  457f5c:	ldr	x1, [sp, #24]
  457f60:	bl	45800c <link_config_gperf_hash>
  457f64:	str	w0, [sp, #20]
  457f68:	ldr	w8, [sp, #20]
  457f6c:	cmp	w8, #0x37
  457f70:	b.hi	457ff4 <link_config_gperf_lookup+0xc8>  // b.pmore
  457f74:	ldr	w8, [sp, #20]
  457f78:	mov	w9, w8
  457f7c:	mov	x10, #0x20                  	// #32
  457f80:	mul	x9, x10, x9
  457f84:	adrp	x10, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  457f88:	add	x10, x10, #0x6a8
  457f8c:	add	x9, x10, x9
  457f90:	ldr	x9, [x9]
  457f94:	str	x9, [sp, #8]
  457f98:	ldr	x9, [sp, #8]
  457f9c:	cbz	x9, 457ff4 <link_config_gperf_lookup+0xc8>
  457fa0:	ldur	x8, [x29, #-16]
  457fa4:	ldrb	w9, [x8]
  457fa8:	ldr	x8, [sp, #8]
  457fac:	ldrb	w10, [x8]
  457fb0:	cmp	w9, w10
  457fb4:	b.ne	457ff4 <link_config_gperf_lookup+0xc8>  // b.any
  457fb8:	ldur	x8, [x29, #-16]
  457fbc:	add	x0, x8, #0x1
  457fc0:	ldr	x8, [sp, #8]
  457fc4:	add	x1, x8, #0x1
  457fc8:	bl	40aa20 <strcmp@plt>
  457fcc:	cbnz	w0, 457ff4 <link_config_gperf_lookup+0xc8>
  457fd0:	ldr	w8, [sp, #20]
  457fd4:	mov	w9, w8
  457fd8:	mov	x10, #0x20                  	// #32
  457fdc:	mul	x9, x10, x9
  457fe0:	adrp	x10, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  457fe4:	add	x10, x10, #0x6a8
  457fe8:	add	x9, x10, x9
  457fec:	stur	x9, [x29, #-8]
  457ff0:	b	457ffc <link_config_gperf_lookup+0xd0>
  457ff4:	mov	x8, xzr
  457ff8:	stur	x8, [x29, #-8]
  457ffc:	ldur	x0, [x29, #-8]
  458000:	ldp	x29, x30, [sp, #48]
  458004:	add	sp, sp, #0x40
  458008:	ret

000000000045800c <link_config_gperf_hash>:
  45800c:	sub	sp, sp, #0x10
  458010:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  458014:	add	x8, x8, #0x9d0
  458018:	str	x0, [sp, #8]
  45801c:	str	x1, [sp]
  458020:	ldr	x9, [sp]
  458024:	ldr	x10, [sp, #8]
  458028:	ldrb	w11, [x10, #6]
  45802c:	mov	w10, w11
  458030:	ldrb	w11, [x8, x10]
  458034:	mov	w10, w11
  458038:	add	x9, x9, x10
  45803c:	ldr	x10, [sp, #8]
  458040:	ldrb	w11, [x10, #5]
  458044:	mov	w10, w11
  458048:	ldrb	w11, [x8, x10]
  45804c:	mov	w8, w11
  458050:	add	x8, x9, x8
  458054:	mov	w0, w8
  458058:	add	sp, sp, #0x10
  45805c:	ret

0000000000458060 <net_get_name_persistent>:
  458060:	sub	sp, sp, #0x70
  458064:	stp	x29, x30, [sp, #96]
  458068:	add	x29, sp, #0x60
  45806c:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  458070:	add	x8, x8, #0xb98
  458074:	add	x2, x8, #0x3
  458078:	stur	x0, [x29, #-16]
  45807c:	str	x2, [sp]
  458080:	ldur	x8, [x29, #-16]
  458084:	cmp	x8, #0x0
  458088:	cset	w9, ne  // ne = any
  45808c:	mov	w10, #0x1                   	// #1
  458090:	eor	w9, w9, #0x1
  458094:	eor	w9, w9, w10
  458098:	eor	w9, w9, w10
  45809c:	and	w9, w9, #0x1
  4580a0:	mov	w0, w9
  4580a4:	sxtw	x8, w0
  4580a8:	cbz	x8, 4580d0 <net_get_name_persistent+0x70>
  4580ac:	mov	w8, wzr
  4580b0:	mov	w0, w8
  4580b4:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4580b8:	add	x1, x1, #0x5dd
  4580bc:	ldr	x2, [sp]
  4580c0:	mov	w3, #0x20                  	// #32
  4580c4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4580c8:	add	x4, x4, #0xbc5
  4580cc:	bl	40a540 <log_assert_failed_realm@plt>
  4580d0:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4580d4:	add	x8, x8, #0xc60
  4580d8:	stur	x8, [x29, #-32]
  4580dc:	str	x8, [sp, #8]
  4580e0:	ldr	x8, [sp, #8]
  4580e4:	add	x9, sp, #0x10
  4580e8:	str	x8, [sp, #16]
  4580ec:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4580f0:	add	x8, x8, #0xc4f
  4580f4:	str	x8, [x9, #8]
  4580f8:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  4580fc:	add	x8, x8, #0xc3e
  458100:	str	x8, [x9, #16]
  458104:	adrp	x8, 46c000 <on_inotify.__assert_in_set+0x8540>
  458108:	add	x8, x8, #0xc29
  45810c:	str	x8, [x9, #24]
  458110:	mov	x8, xzr
  458114:	str	x8, [x9, #32]
  458118:	stur	x9, [x29, #-40]
  45811c:	ldur	x8, [x29, #-32]
  458120:	cbz	x8, 458164 <net_get_name_persistent+0x104>
  458124:	ldur	x0, [x29, #-16]
  458128:	ldur	x1, [x29, #-32]
  45812c:	sub	x2, x29, #0x18
  458130:	bl	40aa40 <sd_device_get_property_value@plt>
  458134:	cmp	w0, #0x0
  458138:	cset	w8, lt  // lt = tstop
  45813c:	tbnz	w8, #0, 45814c <net_get_name_persistent+0xec>
  458140:	ldur	x8, [x29, #-24]
  458144:	stur	x8, [x29, #-8]
  458148:	b	45816c <net_get_name_persistent+0x10c>
  45814c:	ldur	x8, [x29, #-40]
  458150:	add	x9, x8, #0x8
  458154:	stur	x9, [x29, #-40]
  458158:	ldr	x8, [x8, #8]
  45815c:	stur	x8, [x29, #-32]
  458160:	b	45811c <net_get_name_persistent+0xbc>
  458164:	mov	x8, xzr
  458168:	stur	x8, [x29, #-8]
  45816c:	ldur	x0, [x29, #-8]
  458170:	ldp	x29, x30, [sp, #96]
  458174:	add	sp, sp, #0x70
  458178:	ret

000000000045817c <net_get_unique_predictable_data>:
  45817c:	stp	x29, x30, [sp, #-16]!
  458180:	mov	x29, sp
  458184:	sub	sp, sp, #0xc0
  458188:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  45818c:	add	x8, x8, #0xb98
  458190:	add	x8, x8, #0x3
  458194:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  458198:	add	x9, x9, #0xbf6
  45819c:	stur	x0, [x29, #-16]
  4581a0:	and	w10, w1, #0x1
  4581a4:	sturb	w10, [x29, #-17]
  4581a8:	stur	x2, [x29, #-32]
  4581ac:	stur	xzr, [x29, #-48]
  4581b0:	stur	x8, [x29, #-176]
  4581b4:	stur	x9, [x29, #-184]
  4581b8:	ldur	x8, [x29, #-16]
  4581bc:	cmp	x8, #0x0
  4581c0:	cset	w9, ne  // ne = any
  4581c4:	mov	w10, #0x1                   	// #1
  4581c8:	eor	w9, w9, #0x1
  4581cc:	eor	w9, w9, w10
  4581d0:	eor	w9, w9, w10
  4581d4:	and	w9, w9, #0x1
  4581d8:	mov	w0, w9
  4581dc:	sxtw	x8, w0
  4581e0:	cbz	x8, 458204 <net_get_unique_predictable_data+0x88>
  4581e4:	mov	w8, wzr
  4581e8:	mov	w0, w8
  4581ec:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  4581f0:	add	x1, x1, #0x5dd
  4581f4:	ldur	x2, [x29, #-176]
  4581f8:	mov	w3, #0x32                  	// #50
  4581fc:	ldur	x4, [x29, #-184]
  458200:	bl	40a540 <log_assert_failed_realm@plt>
  458204:	ldur	x0, [x29, #-16]
  458208:	bl	458060 <net_get_name_persistent>
  45820c:	stur	x0, [x29, #-56]
  458210:	ldur	x8, [x29, #-56]
  458214:	cbnz	x8, 458230 <net_get_unique_predictable_data+0xb4>
  458218:	ldurb	w8, [x29, #-17]
  45821c:	tbnz	w8, #0, 458224 <net_get_unique_predictable_data+0xa8>
  458220:	b	458230 <net_get_unique_predictable_data+0xb4>
  458224:	ldur	x0, [x29, #-16]
  458228:	sub	x1, x29, #0x38
  45822c:	bl	40a860 <sd_device_get_sysname@plt>
  458230:	ldur	x8, [x29, #-56]
  458234:	cbnz	x8, 458310 <net_get_unique_predictable_data+0x194>
  458238:	mov	x8, xzr
  45823c:	stur	x8, [x29, #-80]
  458240:	ldur	x8, [x29, #-16]
  458244:	stur	x8, [x29, #-88]
  458248:	mov	w9, #0x7                   	// #7
  45824c:	stur	w9, [x29, #-92]
  458250:	mov	w9, #0x3d                  	// #61
  458254:	movk	w9, #0x4000, lsl #16
  458258:	stur	w9, [x29, #-96]
  45825c:	ldur	x8, [x29, #-88]
  458260:	cbz	x8, 4582a4 <net_get_unique_predictable_data+0x128>
  458264:	mov	w8, wzr
  458268:	mov	w0, w8
  45826c:	bl	40a3f0 <log_get_max_level_realm@plt>
  458270:	ldur	w8, [x29, #-92]
  458274:	cmp	w0, w8
  458278:	cset	w8, ge  // ge = tcont
  45827c:	mov	w9, #0x1                   	// #1
  458280:	eor	w8, w8, #0x1
  458284:	eor	w8, w8, w9
  458288:	and	w8, w8, #0x1
  45828c:	mov	w1, w8
  458290:	sxtw	x10, w1
  458294:	cbz	x10, 4582a4 <net_get_unique_predictable_data+0x128>
  458298:	ldur	x0, [x29, #-88]
  45829c:	sub	x1, x29, #0x50
  4582a0:	bl	40a860 <sd_device_get_sysname@plt>
  4582a4:	ldur	w0, [x29, #-92]
  4582a8:	ldur	w1, [x29, #-96]
  4582ac:	ldur	x8, [x29, #-80]
  4582b0:	mov	x9, xzr
  4582b4:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  4582b8:	add	x10, x10, #0xa46
  4582bc:	cmp	x8, #0x0
  4582c0:	csel	x5, x10, x9, ne  // ne = any
  4582c4:	ldur	x6, [x29, #-80]
  4582c8:	sub	sp, sp, #0x10
  4582cc:	ldur	x2, [x29, #-176]
  4582d0:	mov	w3, #0x3b                  	// #59
  4582d4:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4582d8:	add	x4, x4, #0xc3a
  4582dc:	mov	x7, x9
  4582e0:	mov	x8, sp
  4582e4:	str	x9, [x8]
  4582e8:	mov	x8, sp
  4582ec:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  4582f0:	add	x9, x9, #0xc5a
  4582f4:	str	x9, [x8, #8]
  4582f8:	bl	40a870 <log_object_internal@plt>
  4582fc:	add	sp, sp, #0x10
  458300:	stur	w0, [x29, #-100]
  458304:	ldur	w11, [x29, #-100]
  458308:	stur	w11, [x29, #-4]
  45830c:	b	4585b4 <net_get_unique_predictable_data+0x438>
  458310:	mov	x8, xzr
  458314:	stur	x8, [x29, #-112]
  458318:	ldur	x8, [x29, #-16]
  45831c:	stur	x8, [x29, #-120]
  458320:	mov	w9, #0x7                   	// #7
  458324:	stur	w9, [x29, #-124]
  458328:	stur	wzr, [x29, #-128]
  45832c:	ldur	x8, [x29, #-120]
  458330:	cbz	x8, 458374 <net_get_unique_predictable_data+0x1f8>
  458334:	mov	w8, wzr
  458338:	mov	w0, w8
  45833c:	bl	40a3f0 <log_get_max_level_realm@plt>
  458340:	ldur	w8, [x29, #-124]
  458344:	cmp	w0, w8
  458348:	cset	w8, ge  // ge = tcont
  45834c:	mov	w9, #0x1                   	// #1
  458350:	eor	w8, w8, #0x1
  458354:	eor	w8, w8, w9
  458358:	and	w8, w8, #0x1
  45835c:	mov	w1, w8
  458360:	sxtw	x10, w1
  458364:	cbz	x10, 458374 <net_get_unique_predictable_data+0x1f8>
  458368:	ldur	x0, [x29, #-120]
  45836c:	sub	x1, x29, #0x70
  458370:	bl	40a860 <sd_device_get_sysname@plt>
  458374:	ldur	w0, [x29, #-124]
  458378:	ldur	w1, [x29, #-128]
  45837c:	ldur	x8, [x29, #-112]
  458380:	mov	x9, xzr
  458384:	adrp	x10, 464000 <on_inotify.__assert_in_set+0x540>
  458388:	add	x10, x10, #0xa46
  45838c:	cmp	x8, #0x0
  458390:	csel	x5, x10, x9, ne  // ne = any
  458394:	ldur	x6, [x29, #-112]
  458398:	ldur	x8, [x29, #-56]
  45839c:	sub	sp, sp, #0x20
  4583a0:	ldur	x2, [x29, #-176]
  4583a4:	mov	w3, #0x3d                  	// #61
  4583a8:	adrp	x4, 46f000 <on_inotify.__assert_in_set+0xb540>
  4583ac:	add	x4, x4, #0xc3a
  4583b0:	mov	x7, x9
  4583b4:	mov	x10, sp
  4583b8:	str	x9, [x10]
  4583bc:	mov	x9, sp
  4583c0:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  4583c4:	add	x10, x10, #0xc82
  4583c8:	str	x10, [x9, #8]
  4583cc:	mov	x9, sp
  4583d0:	str	x8, [x9, #16]
  4583d4:	bl	40a870 <log_object_internal@plt>
  4583d8:	add	sp, sp, #0x20
  4583dc:	stur	w0, [x29, #-132]
  4583e0:	ldur	x0, [x29, #-56]
  4583e4:	bl	40a800 <strlen@plt>
  4583e8:	stur	x0, [x29, #-40]
  4583ec:	ldur	x8, [x29, #-40]
  4583f0:	add	x8, x8, #0x10
  4583f4:	stur	x8, [x29, #-48]
  4583f8:	ldur	x8, [x29, #-48]
  4583fc:	stur	x8, [x29, #-144]
  458400:	ldur	x1, [x29, #-144]
  458404:	mov	x0, #0x1                   	// #1
  458408:	bl	4585c4 <size_multiply_overflow>
  45840c:	mov	w8, #0x1                   	// #1
  458410:	eor	w9, w0, #0x1
  458414:	eor	w9, w9, w8
  458418:	eor	w9, w9, w8
  45841c:	eor	w8, w9, w8
  458420:	and	w8, w8, #0x1
  458424:	mov	w1, w8
  458428:	sxtw	x10, w1
  45842c:	cbz	x10, 458450 <net_get_unique_predictable_data+0x2d4>
  458430:	mov	w8, wzr
  458434:	mov	w0, w8
  458438:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  45843c:	add	x1, x1, #0xcaf
  458440:	ldur	x2, [x29, #-176]
  458444:	mov	w3, #0x40                  	// #64
  458448:	ldur	x4, [x29, #-184]
  45844c:	bl	40a540 <log_assert_failed_realm@plt>
  458450:	ldur	x8, [x29, #-144]
  458454:	mov	x9, #0x1                   	// #1
  458458:	mul	x8, x9, x8
  45845c:	cmp	x8, #0x400, lsl #12
  458460:	cset	w10, ls  // ls = plast
  458464:	mov	w11, #0x1                   	// #1
  458468:	eor	w10, w10, #0x1
  45846c:	eor	w10, w10, w11
  458470:	eor	w10, w10, w11
  458474:	and	w10, w10, #0x1
  458478:	mov	w0, w10
  45847c:	sxtw	x8, w0
  458480:	cbz	x8, 4584a4 <net_get_unique_predictable_data+0x328>
  458484:	mov	w8, wzr
  458488:	mov	w0, w8
  45848c:	adrp	x1, 46f000 <on_inotify.__assert_in_set+0xb540>
  458490:	add	x1, x1, #0xcdd
  458494:	ldur	x2, [x29, #-176]
  458498:	mov	w3, #0x40                  	// #64
  45849c:	ldur	x4, [x29, #-184]
  4584a0:	bl	40a540 <log_assert_failed_realm@plt>
  4584a4:	ldur	x8, [x29, #-144]
  4584a8:	mov	x9, #0x1                   	// #1
  4584ac:	mul	x8, x9, x8
  4584b0:	mul	x8, x8, x9
  4584b4:	add	x8, x8, #0xf
  4584b8:	and	x8, x8, #0xfffffffffffffff0
  4584bc:	mov	x9, sp
  4584c0:	subs	x8, x9, x8
  4584c4:	mov	sp, x8
  4584c8:	stur	x8, [x29, #-152]
  4584cc:	ldur	x8, [x29, #-152]
  4584d0:	stur	x8, [x29, #-72]
  4584d4:	ldur	x0, [x29, #-72]
  4584d8:	bl	40be90 <sd_id128_get_machine@plt>
  4584dc:	stur	w0, [x29, #-60]
  4584e0:	ldur	w10, [x29, #-60]
  4584e4:	cmp	w10, #0x0
  4584e8:	cset	w10, ge  // ge = tcont
  4584ec:	tbnz	w10, #0, 4584fc <net_get_unique_predictable_data+0x380>
  4584f0:	ldur	w8, [x29, #-60]
  4584f4:	stur	w8, [x29, #-4]
  4584f8:	b	4585b4 <net_get_unique_predictable_data+0x438>
  4584fc:	ldur	x8, [x29, #-72]
  458500:	add	x0, x8, #0x10
  458504:	ldur	x1, [x29, #-56]
  458508:	ldur	x2, [x29, #-40]
  45850c:	bl	40a600 <memcpy@plt>
  458510:	ldur	x0, [x29, #-72]
  458514:	ldur	x1, [x29, #-48]
  458518:	sub	x8, x29, #0xa8
  45851c:	mov	w9, #0xd3                  	// #211
  458520:	sturb	w9, [x29, #-168]
  458524:	mov	w9, #0x1e                  	// #30
  458528:	strb	w9, [x8, #1]
  45852c:	mov	w9, #0x48                  	// #72
  458530:	strb	w9, [x8, #2]
  458534:	mov	w9, #0xfa                  	// #250
  458538:	strb	w9, [x8, #3]
  45853c:	mov	w9, #0x90                  	// #144
  458540:	strb	w9, [x8, #4]
  458544:	mov	w9, #0xfe                  	// #254
  458548:	strb	w9, [x8, #5]
  45854c:	mov	w9, #0x4b                  	// #75
  458550:	strb	w9, [x8, #6]
  458554:	mov	w9, #0x4c                  	// #76
  458558:	strb	w9, [x8, #7]
  45855c:	mov	w9, #0x9d                  	// #157
  458560:	strb	w9, [x8, #8]
  458564:	mov	w9, #0xaf                  	// #175
  458568:	strb	w9, [x8, #9]
  45856c:	mov	w9, #0xd5                  	// #213
  458570:	strb	w9, [x8, #10]
  458574:	mov	w9, #0xd7                  	// #215
  458578:	strb	w9, [x8, #11]
  45857c:	mov	w9, #0xa1                  	// #161
  458580:	strb	w9, [x8, #12]
  458584:	mov	w9, #0xb1                  	// #177
  458588:	strb	w9, [x8, #13]
  45858c:	mov	w9, #0x2e                  	// #46
  458590:	strb	w9, [x8, #14]
  458594:	mov	w9, #0x8a                  	// #138
  458598:	strb	w9, [x8, #15]
  45859c:	mov	x2, x8
  4585a0:	bl	40bea0 <siphash24@plt>
  4585a4:	bl	45862c <htole64>
  4585a8:	ldur	x8, [x29, #-32]
  4585ac:	str	x0, [x8]
  4585b0:	stur	wzr, [x29, #-4]
  4585b4:	ldur	w0, [x29, #-4]
  4585b8:	mov	sp, x29
  4585bc:	ldp	x29, x30, [sp], #16
  4585c0:	ret

00000000004585c4 <size_multiply_overflow>:
  4585c4:	sub	sp, sp, #0x20
  4585c8:	str	x0, [sp, #24]
  4585cc:	str	x1, [sp, #16]
  4585d0:	ldr	x8, [sp, #16]
  4585d4:	mov	w9, #0x0                   	// #0
  4585d8:	str	w9, [sp, #12]
  4585dc:	cbz	x8, 4585fc <size_multiply_overflow+0x38>
  4585e0:	ldr	x8, [sp, #24]
  4585e4:	ldr	x9, [sp, #16]
  4585e8:	mov	x10, #0xffffffffffffffff    	// #-1
  4585ec:	udiv	x9, x10, x9
  4585f0:	cmp	x8, x9
  4585f4:	cset	w11, hi  // hi = pmore
  4585f8:	str	w11, [sp, #12]
  4585fc:	ldr	w8, [sp, #12]
  458600:	mov	w9, #0x1                   	// #1
  458604:	eor	w8, w8, #0x1
  458608:	eor	w8, w8, w9
  45860c:	and	w8, w8, #0x1
  458610:	mov	w0, w8
  458614:	sxtw	x10, w0
  458618:	cmp	x10, #0x0
  45861c:	cset	w8, ne  // ne = any
  458620:	and	w0, w8, #0x1
  458624:	add	sp, sp, #0x20
  458628:	ret

000000000045862c <htole64>:
  45862c:	sub	sp, sp, #0x10
  458630:	str	x0, [sp, #8]
  458634:	ldr	x0, [sp, #8]
  458638:	add	sp, sp, #0x10
  45863c:	ret

0000000000458640 <net_match_config>:
  458640:	sub	sp, sp, #0xc0
  458644:	stp	x29, x30, [sp, #176]
  458648:	add	x29, sp, #0xb0
  45864c:	ldr	x8, [x29, #16]
  458650:	ldr	x9, [x29, #24]
  458654:	ldr	x10, [x29, #32]
  458658:	ldr	x11, [x29, #40]
  45865c:	ldr	w12, [x29, #48]
  458660:	ldr	x13, [x29, #56]
  458664:	ldr	x14, [x29, #64]
  458668:	mov	x15, xzr
  45866c:	stur	x0, [x29, #-16]
  458670:	stur	x1, [x29, #-24]
  458674:	stur	x2, [x29, #-32]
  458678:	stur	x3, [x29, #-40]
  45867c:	stur	x4, [x29, #-48]
  458680:	stur	x5, [x29, #-56]
  458684:	stur	x6, [x29, #-64]
  458688:	stur	x7, [x29, #-72]
  45868c:	stur	x8, [x29, #-80]
  458690:	str	x9, [sp, #88]
  458694:	str	x10, [sp, #80]
  458698:	str	x11, [sp, #72]
  45869c:	str	w12, [sp, #68]
  4586a0:	str	x13, [sp, #56]
  4586a4:	str	x14, [sp, #48]
  4586a8:	str	x15, [sp, #40]
  4586ac:	str	x15, [sp, #32]
  4586b0:	str	x15, [sp, #24]
  4586b4:	ldr	x8, [sp, #88]
  4586b8:	cbz	x8, 458740 <net_match_config+0x100>
  4586bc:	ldr	x0, [sp, #88]
  4586c0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4586c4:	add	x1, x1, #0x48d
  4586c8:	add	x2, sp, #0x28
  4586cc:	bl	40aa40 <sd_device_get_property_value@plt>
  4586d0:	ldr	x8, [sp, #88]
  4586d4:	mov	x0, x8
  4586d8:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4586dc:	add	x1, x1, #0x21d
  4586e0:	add	x2, sp, #0x20
  4586e4:	bl	40aa40 <sd_device_get_property_value@plt>
  4586e8:	ldr	x8, [sp, #88]
  4586ec:	mov	x0, x8
  4586f0:	add	x1, sp, #0x18
  4586f4:	bl	40abb0 <sd_device_get_devtype@plt>
  4586f8:	ldr	x8, [sp, #72]
  4586fc:	cbnz	x8, 45870c <net_match_config+0xcc>
  458700:	ldr	x0, [sp, #88]
  458704:	add	x1, sp, #0x48
  458708:	bl	40a860 <sd_device_get_sysname@plt>
  45870c:	ldr	x8, [sp, #80]
  458710:	cbnz	x8, 458740 <net_match_config+0x100>
  458714:	ldr	x0, [sp, #88]
  458718:	adrp	x1, 46c000 <on_inotify.__assert_in_set+0x8540>
  45871c:	add	x1, x1, #0xca1
  458720:	add	x2, sp, #0x10
  458724:	bl	40aeb0 <sd_device_get_sysattr_value@plt>
  458728:	cmp	w0, #0x0
  45872c:	cset	w8, lt  // lt = tstop
  458730:	tbnz	w8, #0, 458740 <net_match_config+0x100>
  458734:	ldr	x0, [sp, #16]
  458738:	bl	40beb0 <ether_aton@plt>
  45873c:	str	x0, [sp, #80]
  458740:	ldur	x8, [x29, #-16]
  458744:	cbz	x8, 458770 <net_match_config+0x130>
  458748:	ldr	x8, [sp, #80]
  45874c:	cbz	x8, 458760 <net_match_config+0x120>
  458750:	ldur	x0, [x29, #-16]
  458754:	ldr	x1, [sp, #80]
  458758:	bl	4588bc <set_contains>
  45875c:	tbnz	w0, #0, 458770 <net_match_config+0x130>
  458760:	mov	w8, wzr
  458764:	and	w8, w8, #0x1
  458768:	sturb	w8, [x29, #-1]
  45876c:	b	4588a8 <net_match_config+0x268>
  458770:	ldur	x0, [x29, #-24]
  458774:	ldr	x1, [sp, #40]
  458778:	bl	4588ec <net_condition_test_strv>
  45877c:	tbnz	w0, #0, 458790 <net_match_config+0x150>
  458780:	mov	w8, wzr
  458784:	and	w8, w8, #0x1
  458788:	sturb	w8, [x29, #-1]
  45878c:	b	4588a8 <net_match_config+0x268>
  458790:	ldur	x0, [x29, #-32]
  458794:	ldr	x1, [sp, #32]
  458798:	bl	4588ec <net_condition_test_strv>
  45879c:	tbnz	w0, #0, 4587b0 <net_match_config+0x170>
  4587a0:	mov	w8, wzr
  4587a4:	and	w8, w8, #0x1
  4587a8:	sturb	w8, [x29, #-1]
  4587ac:	b	4588a8 <net_match_config+0x268>
  4587b0:	ldur	x0, [x29, #-40]
  4587b4:	ldr	x1, [sp, #24]
  4587b8:	bl	4588ec <net_condition_test_strv>
  4587bc:	tbnz	w0, #0, 4587d0 <net_match_config+0x190>
  4587c0:	mov	w8, wzr
  4587c4:	and	w8, w8, #0x1
  4587c8:	sturb	w8, [x29, #-1]
  4587cc:	b	4588a8 <net_match_config+0x268>
  4587d0:	ldur	x0, [x29, #-48]
  4587d4:	ldr	x1, [sp, #72]
  4587d8:	bl	4588ec <net_condition_test_strv>
  4587dc:	tbnz	w0, #0, 4587f0 <net_match_config+0x1b0>
  4587e0:	mov	w8, wzr
  4587e4:	and	w8, w8, #0x1
  4587e8:	sturb	w8, [x29, #-1]
  4587ec:	b	4588a8 <net_match_config+0x268>
  4587f0:	ldur	x0, [x29, #-56]
  4587f4:	ldr	x1, [sp, #88]
  4587f8:	bl	458a58 <net_condition_test_property>
  4587fc:	cbnz	w0, 458810 <net_match_config+0x1d0>
  458800:	mov	w8, wzr
  458804:	and	w8, w8, #0x1
  458808:	sturb	w8, [x29, #-1]
  45880c:	b	4588a8 <net_match_config+0x268>
  458810:	ldur	x0, [x29, #-64]
  458814:	ldr	w8, [sp, #68]
  458818:	str	x0, [sp, #8]
  45881c:	mov	w0, w8
  458820:	bl	458c6c <wifi_iftype_to_string>
  458824:	ldr	x9, [sp, #8]
  458828:	str	x0, [sp]
  45882c:	mov	x0, x9
  458830:	ldr	x1, [sp]
  458834:	bl	4588ec <net_condition_test_strv>
  458838:	tbnz	w0, #0, 45884c <net_match_config+0x20c>
  45883c:	mov	w8, wzr
  458840:	and	w8, w8, #0x1
  458844:	sturb	w8, [x29, #-1]
  458848:	b	4588a8 <net_match_config+0x268>
  45884c:	ldur	x0, [x29, #-72]
  458850:	ldr	x1, [sp, #56]
  458854:	bl	4588ec <net_condition_test_strv>
  458858:	tbnz	w0, #0, 45886c <net_match_config+0x22c>
  45885c:	mov	w8, wzr
  458860:	and	w8, w8, #0x1
  458864:	sturb	w8, [x29, #-1]
  458868:	b	4588a8 <net_match_config+0x268>
  45886c:	ldur	x8, [x29, #-80]
  458870:	cbz	x8, 45889c <net_match_config+0x25c>
  458874:	ldr	x8, [sp, #48]
  458878:	cbz	x8, 45888c <net_match_config+0x24c>
  45887c:	ldur	x0, [x29, #-80]
  458880:	ldr	x1, [sp, #48]
  458884:	bl	4588bc <set_contains>
  458888:	tbnz	w0, #0, 45889c <net_match_config+0x25c>
  45888c:	mov	w8, wzr
  458890:	and	w8, w8, #0x1
  458894:	sturb	w8, [x29, #-1]
  458898:	b	4588a8 <net_match_config+0x268>
  45889c:	mov	w8, #0x1                   	// #1
  4588a0:	and	w8, w8, #0x1
  4588a4:	sturb	w8, [x29, #-1]
  4588a8:	ldurb	w8, [x29, #-1]
  4588ac:	and	w0, w8, #0x1
  4588b0:	ldp	x29, x30, [sp, #176]
  4588b4:	add	sp, sp, #0xc0
  4588b8:	ret

00000000004588bc <set_contains>:
  4588bc:	sub	sp, sp, #0x20
  4588c0:	stp	x29, x30, [sp, #16]
  4588c4:	add	x29, sp, #0x10
  4588c8:	str	x0, [sp, #8]
  4588cc:	str	x1, [sp]
  4588d0:	ldr	x0, [sp, #8]
  4588d4:	ldr	x1, [sp]
  4588d8:	bl	40bec0 <internal_hashmap_contains@plt>
  4588dc:	and	w0, w0, #0x1
  4588e0:	ldp	x29, x30, [sp, #16]
  4588e4:	add	sp, sp, #0x20
  4588e8:	ret

00000000004588ec <net_condition_test_strv>:
  4588ec:	sub	sp, sp, #0x50
  4588f0:	stp	x29, x30, [sp, #64]
  4588f4:	add	x29, sp, #0x40
  4588f8:	mov	w8, #0x0                   	// #0
  4588fc:	stur	x0, [x29, #-16]
  458900:	stur	x1, [x29, #-24]
  458904:	strb	w8, [sp, #31]
  458908:	strb	w8, [sp, #30]
  45890c:	ldur	x0, [x29, #-16]
  458910:	bl	45bf88 <strv_isempty>
  458914:	tbnz	w0, #0, 45891c <net_condition_test_strv+0x30>
  458918:	b	45892c <net_condition_test_strv+0x40>
  45891c:	mov	w8, #0x1                   	// #1
  458920:	and	w8, w8, #0x1
  458924:	sturb	w8, [x29, #-1]
  458928:	b	458a44 <net_condition_test_strv+0x158>
  45892c:	ldur	x8, [x29, #-16]
  458930:	str	x8, [sp, #32]
  458934:	ldr	x8, [sp, #32]
  458938:	mov	w9, #0x0                   	// #0
  45893c:	str	w9, [sp, #8]
  458940:	cbz	x8, 458958 <net_condition_test_strv+0x6c>
  458944:	ldr	x8, [sp, #32]
  458948:	ldr	x8, [x8]
  45894c:	cmp	x8, #0x0
  458950:	cset	w9, ne  // ne = any
  458954:	str	w9, [sp, #8]
  458958:	ldr	w8, [sp, #8]
  45895c:	tbnz	w8, #0, 458964 <net_condition_test_strv+0x78>
  458960:	b	458a0c <net_condition_test_strv+0x120>
  458964:	ldr	x8, [sp, #32]
  458968:	ldr	x8, [x8]
  45896c:	str	x8, [sp, #16]
  458970:	ldr	x8, [sp, #16]
  458974:	ldrb	w9, [x8]
  458978:	cmp	w9, #0x21
  45897c:	cset	w9, eq  // eq = none
  458980:	mov	w10, #0x1                   	// #1
  458984:	and	w9, w9, w10
  458988:	strb	w9, [sp, #15]
  45898c:	ldrb	w9, [sp, #15]
  458990:	and	w9, w9, #0x1
  458994:	ldr	x8, [sp, #16]
  458998:	mov	w0, w9
  45899c:	sxtw	x11, w0
  4589a0:	add	x8, x8, x11
  4589a4:	str	x8, [sp, #16]
  4589a8:	ldrb	w9, [sp, #15]
  4589ac:	tbnz	w9, #0, 4589b8 <net_condition_test_strv+0xcc>
  4589b0:	mov	w8, #0x1                   	// #1
  4589b4:	strb	w8, [sp, #30]
  4589b8:	ldur	x8, [x29, #-24]
  4589bc:	cbz	x8, 4589fc <net_condition_test_strv+0x110>
  4589c0:	ldr	x0, [sp, #16]
  4589c4:	ldur	x1, [x29, #-24]
  4589c8:	mov	w8, wzr
  4589cc:	mov	w2, w8
  4589d0:	bl	40b4b0 <fnmatch@plt>
  4589d4:	cbnz	w0, 4589fc <net_condition_test_strv+0x110>
  4589d8:	ldrb	w8, [sp, #15]
  4589dc:	tbnz	w8, #0, 4589e4 <net_condition_test_strv+0xf8>
  4589e0:	b	4589f4 <net_condition_test_strv+0x108>
  4589e4:	mov	w8, wzr
  4589e8:	and	w8, w8, #0x1
  4589ec:	sturb	w8, [x29, #-1]
  4589f0:	b	458a44 <net_condition_test_strv+0x158>
  4589f4:	mov	w8, #0x1                   	// #1
  4589f8:	strb	w8, [sp, #31]
  4589fc:	ldr	x8, [sp, #32]
  458a00:	add	x8, x8, #0x8
  458a04:	str	x8, [sp, #32]
  458a08:	b	458934 <net_condition_test_strv+0x48>
  458a0c:	ldrb	w8, [sp, #30]
  458a10:	tbnz	w8, #0, 458a18 <net_condition_test_strv+0x12c>
  458a14:	b	458a28 <net_condition_test_strv+0x13c>
  458a18:	ldrb	w8, [sp, #31]
  458a1c:	and	w8, w8, #0x1
  458a20:	str	w8, [sp, #4]
  458a24:	b	458a30 <net_condition_test_strv+0x144>
  458a28:	mov	w8, #0x1                   	// #1
  458a2c:	str	w8, [sp, #4]
  458a30:	ldr	w8, [sp, #4]
  458a34:	cmp	w8, #0x0
  458a38:	cset	w8, ne  // ne = any
  458a3c:	and	w8, w8, #0x1
  458a40:	sturb	w8, [x29, #-1]
  458a44:	ldurb	w8, [x29, #-1]
  458a48:	and	w0, w8, #0x1
  458a4c:	ldp	x29, x30, [sp, #64]
  458a50:	add	sp, sp, #0x50
  458a54:	ret

0000000000458a58 <net_condition_test_property>:
  458a58:	sub	sp, sp, #0x60
  458a5c:	stp	x29, x30, [sp, #80]
  458a60:	add	x29, sp, #0x50
  458a64:	stur	x0, [x29, #-16]
  458a68:	stur	x1, [x29, #-24]
  458a6c:	ldur	x0, [x29, #-16]
  458a70:	bl	45bf88 <strv_isempty>
  458a74:	tbnz	w0, #0, 458a7c <net_condition_test_property+0x24>
  458a78:	b	458a88 <net_condition_test_property+0x30>
  458a7c:	mov	w8, #0x1                   	// #1
  458a80:	stur	w8, [x29, #-4]
  458a84:	b	458c5c <net_condition_test_property+0x204>
  458a88:	ldur	x8, [x29, #-16]
  458a8c:	stur	x8, [x29, #-32]
  458a90:	ldur	x8, [x29, #-32]
  458a94:	mov	w9, #0x0                   	// #0
  458a98:	str	w9, [sp, #12]
  458a9c:	cbz	x8, 458ab4 <net_condition_test_property+0x5c>
  458aa0:	ldur	x8, [x29, #-32]
  458aa4:	ldr	x8, [x8]
  458aa8:	cmp	x8, #0x0
  458aac:	cset	w9, ne  // ne = any
  458ab0:	str	w9, [sp, #12]
  458ab4:	ldr	w8, [sp, #12]
  458ab8:	tbnz	w8, #0, 458ac0 <net_condition_test_property+0x68>
  458abc:	b	458c54 <net_condition_test_property+0x1fc>
  458ac0:	mov	x8, xzr
  458ac4:	str	x8, [sp, #40]
  458ac8:	ldur	x8, [x29, #-32]
  458acc:	ldr	x8, [x8]
  458ad0:	ldrb	w9, [x8]
  458ad4:	cmp	w9, #0x21
  458ad8:	cset	w9, eq  // eq = none
  458adc:	mov	w10, #0x1                   	// #1
  458ae0:	and	w9, w9, w10
  458ae4:	strb	w9, [sp, #23]
  458ae8:	ldur	x8, [x29, #-32]
  458aec:	ldr	x8, [x8]
  458af0:	ldrb	w9, [sp, #23]
  458af4:	and	w9, w9, #0x1
  458af8:	mov	w0, w9
  458afc:	sxtw	x11, w0
  458b00:	add	x0, x8, x11
  458b04:	mov	w1, #0x3d                  	// #61
  458b08:	bl	40a8c0 <strchr@plt>
  458b0c:	str	x0, [sp, #32]
  458b10:	ldr	x8, [sp, #32]
  458b14:	cbnz	x8, 458b2c <net_condition_test_property+0xd4>
  458b18:	mov	w8, #0xffffffea            	// #-22
  458b1c:	stur	w8, [x29, #-4]
  458b20:	mov	w8, #0x1                   	// #1
  458b24:	str	w8, [sp, #16]
  458b28:	b	458c2c <net_condition_test_property+0x1d4>
  458b2c:	ldur	x8, [x29, #-32]
  458b30:	ldr	x8, [x8]
  458b34:	ldrb	w9, [sp, #23]
  458b38:	and	w9, w9, #0x1
  458b3c:	mov	w0, w9
  458b40:	sxtw	x10, w0
  458b44:	add	x0, x8, x10
  458b48:	ldr	x8, [sp, #32]
  458b4c:	ldur	x10, [x29, #-32]
  458b50:	ldr	x10, [x10]
  458b54:	subs	x8, x8, x10
  458b58:	ldrb	w9, [sp, #23]
  458b5c:	mov	w1, w9
  458b60:	and	x10, x1, #0x1
  458b64:	subs	x1, x8, x10
  458b68:	bl	40a8d0 <strndup@plt>
  458b6c:	str	x0, [sp, #40]
  458b70:	ldr	x8, [sp, #40]
  458b74:	cbnz	x8, 458b8c <net_condition_test_property+0x134>
  458b78:	mov	w8, #0xfffffff4            	// #-12
  458b7c:	stur	w8, [x29, #-4]
  458b80:	mov	w8, #0x1                   	// #1
  458b84:	str	w8, [sp, #16]
  458b88:	b	458c2c <net_condition_test_property+0x1d4>
  458b8c:	ldr	x8, [sp, #32]
  458b90:	add	x8, x8, #0x1
  458b94:	str	x8, [sp, #32]
  458b98:	ldur	x8, [x29, #-24]
  458b9c:	mov	w9, #0x0                   	// #0
  458ba0:	str	w9, [sp, #8]
  458ba4:	cbz	x8, 458bec <net_condition_test_property+0x194>
  458ba8:	ldur	x0, [x29, #-24]
  458bac:	ldr	x1, [sp, #40]
  458bb0:	add	x2, sp, #0x18
  458bb4:	bl	40aa40 <sd_device_get_property_value@plt>
  458bb8:	cmp	w0, #0x0
  458bbc:	cset	w8, lt  // lt = tstop
  458bc0:	mov	w9, #0x0                   	// #0
  458bc4:	str	w9, [sp, #8]
  458bc8:	tbnz	w8, #0, 458bec <net_condition_test_property+0x194>
  458bcc:	ldr	x0, [sp, #32]
  458bd0:	ldr	x1, [sp, #24]
  458bd4:	mov	w8, wzr
  458bd8:	mov	w2, w8
  458bdc:	bl	40b4b0 <fnmatch@plt>
  458be0:	cmp	w0, #0x0
  458be4:	cset	w8, eq  // eq = none
  458be8:	str	w8, [sp, #8]
  458bec:	ldr	w8, [sp, #8]
  458bf0:	and	w8, w8, #0x1
  458bf4:	strb	w8, [sp, #22]
  458bf8:	ldrb	w8, [sp, #23]
  458bfc:	tbnz	w8, #0, 458c04 <net_condition_test_property+0x1ac>
  458c00:	b	458c10 <net_condition_test_property+0x1b8>
  458c04:	ldrb	w8, [sp, #22]
  458c08:	tbnz	w8, #0, 458c18 <net_condition_test_property+0x1c0>
  458c0c:	b	458c28 <net_condition_test_property+0x1d0>
  458c10:	ldrb	w8, [sp, #22]
  458c14:	tbnz	w8, #0, 458c28 <net_condition_test_property+0x1d0>
  458c18:	stur	wzr, [x29, #-4]
  458c1c:	mov	w8, #0x1                   	// #1
  458c20:	str	w8, [sp, #16]
  458c24:	b	458c2c <net_condition_test_property+0x1d4>
  458c28:	str	wzr, [sp, #16]
  458c2c:	add	x0, sp, #0x28
  458c30:	bl	459454 <freep>
  458c34:	ldr	w8, [sp, #16]
  458c38:	cbz	w8, 458c44 <net_condition_test_property+0x1ec>
  458c3c:	b	458c40 <net_condition_test_property+0x1e8>
  458c40:	b	458c5c <net_condition_test_property+0x204>
  458c44:	ldur	x8, [x29, #-32]
  458c48:	add	x8, x8, #0x8
  458c4c:	stur	x8, [x29, #-32]
  458c50:	b	458a90 <net_condition_test_property+0x38>
  458c54:	mov	w8, #0x1                   	// #1
  458c58:	stur	w8, [x29, #-4]
  458c5c:	ldur	w0, [x29, #-4]
  458c60:	ldp	x29, x30, [sp, #80]
  458c64:	add	sp, sp, #0x60
  458c68:	ret

0000000000458c6c <wifi_iftype_to_string>:
  458c6c:	sub	sp, sp, #0x10
  458c70:	str	w0, [sp, #4]
  458c74:	ldr	w8, [sp, #4]
  458c78:	cmp	w8, #0x0
  458c7c:	cset	w8, cc  // cc = lo, ul, last
  458c80:	tbnz	w8, #0, 458c90 <wifi_iftype_to_string+0x24>
  458c84:	ldr	w8, [sp, #4]
  458c88:	cmp	w8, #0xd
  458c8c:	b.cc	458c9c <wifi_iftype_to_string+0x30>  // b.lo, b.ul, b.last
  458c90:	mov	x8, xzr
  458c94:	str	x8, [sp, #8]
  458c98:	b	458cc0 <wifi_iftype_to_string+0x54>
  458c9c:	ldr	w8, [sp, #4]
  458ca0:	mov	w9, w8
  458ca4:	mov	x10, #0x8                   	// #8
  458ca8:	mul	x9, x10, x9
  458cac:	adrp	x10, 49e000 <keyboard_lookup_key.wordlist+0x16a90>
  458cb0:	add	x10, x10, #0xda8
  458cb4:	add	x9, x10, x9
  458cb8:	ldr	x9, [x9]
  458cbc:	str	x9, [sp, #8]
  458cc0:	ldr	x0, [sp, #8]
  458cc4:	add	sp, sp, #0x10
  458cc8:	ret

0000000000458ccc <config_parse_net_condition>:
  458ccc:	sub	sp, sp, #0xb0
  458cd0:	stp	x29, x30, [sp, #160]
  458cd4:	add	x29, sp, #0xa0
  458cd8:	ldr	x8, [x29, #16]
  458cdc:	ldr	x9, [x29, #24]
  458ce0:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  458ce4:	add	x10, x10, #0xb98
  458ce8:	add	x10, x10, #0x3
  458cec:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  458cf0:	add	x11, x11, #0xcff
  458cf4:	stur	x0, [x29, #-16]
  458cf8:	stur	x1, [x29, #-24]
  458cfc:	stur	w2, [x29, #-28]
  458d00:	stur	x3, [x29, #-40]
  458d04:	stur	w4, [x29, #-44]
  458d08:	stur	x5, [x29, #-56]
  458d0c:	stur	w6, [x29, #-60]
  458d10:	stur	x7, [x29, #-72]
  458d14:	str	x8, [sp, #80]
  458d18:	str	x9, [sp, #72]
  458d1c:	ldur	w12, [x29, #-60]
  458d20:	str	w12, [sp, #68]
  458d24:	ldr	x8, [sp, #80]
  458d28:	str	x8, [sp, #56]
  458d2c:	str	x10, [sp, #16]
  458d30:	str	x11, [sp, #8]
  458d34:	ldur	x8, [x29, #-24]
  458d38:	cmp	x8, #0x0
  458d3c:	cset	w9, ne  // ne = any
  458d40:	mov	w10, #0x1                   	// #1
  458d44:	eor	w9, w9, #0x1
  458d48:	eor	w9, w9, w10
  458d4c:	eor	w9, w9, w10
  458d50:	and	w9, w9, #0x1
  458d54:	mov	w0, w9
  458d58:	sxtw	x8, w0
  458d5c:	cbz	x8, 458d80 <config_parse_net_condition+0xb4>
  458d60:	mov	w8, wzr
  458d64:	mov	w0, w8
  458d68:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  458d6c:	add	x1, x1, #0xdac
  458d70:	ldr	x2, [sp, #16]
  458d74:	mov	w3, #0xe8                  	// #232
  458d78:	ldr	x4, [sp, #8]
  458d7c:	bl	40a540 <log_assert_failed_realm@plt>
  458d80:	ldur	x8, [x29, #-56]
  458d84:	cmp	x8, #0x0
  458d88:	cset	w9, ne  // ne = any
  458d8c:	mov	w10, #0x1                   	// #1
  458d90:	eor	w9, w9, #0x1
  458d94:	eor	w9, w9, w10
  458d98:	eor	w9, w9, w10
  458d9c:	and	w9, w9, #0x1
  458da0:	mov	w0, w9
  458da4:	sxtw	x8, w0
  458da8:	cbz	x8, 458dcc <config_parse_net_condition+0x100>
  458dac:	mov	w8, wzr
  458db0:	mov	w0, w8
  458db4:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  458db8:	add	x1, x1, #0x4bc
  458dbc:	ldr	x2, [sp, #16]
  458dc0:	mov	w3, #0xe9                  	// #233
  458dc4:	ldr	x4, [sp, #8]
  458dc8:	bl	40a540 <log_assert_failed_realm@plt>
  458dcc:	ldur	x8, [x29, #-72]
  458dd0:	cmp	x8, #0x0
  458dd4:	cset	w9, ne  // ne = any
  458dd8:	mov	w10, #0x1                   	// #1
  458ddc:	eor	w9, w9, #0x1
  458de0:	eor	w9, w9, w10
  458de4:	eor	w9, w9, w10
  458de8:	and	w9, w9, #0x1
  458dec:	mov	w0, w9
  458df0:	sxtw	x8, w0
  458df4:	cbz	x8, 458e18 <config_parse_net_condition+0x14c>
  458df8:	mov	w8, wzr
  458dfc:	mov	w0, w8
  458e00:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  458e04:	add	x1, x1, #0x4c3
  458e08:	ldr	x2, [sp, #16]
  458e0c:	mov	w3, #0xea                  	// #234
  458e10:	ldr	x4, [sp, #8]
  458e14:	bl	40a540 <log_assert_failed_realm@plt>
  458e18:	ldr	x8, [sp, #80]
  458e1c:	cmp	x8, #0x0
  458e20:	cset	w9, ne  // ne = any
  458e24:	mov	w10, #0x1                   	// #1
  458e28:	eor	w9, w9, #0x1
  458e2c:	eor	w9, w9, w10
  458e30:	eor	w9, w9, w10
  458e34:	and	w9, w9, #0x1
  458e38:	mov	w0, w9
  458e3c:	sxtw	x8, w0
  458e40:	cbz	x8, 458e64 <config_parse_net_condition+0x198>
  458e44:	mov	w8, wzr
  458e48:	mov	w0, w8
  458e4c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  458e50:	add	x1, x1, #0x13c
  458e54:	ldr	x2, [sp, #16]
  458e58:	mov	w3, #0xeb                  	// #235
  458e5c:	ldr	x4, [sp, #8]
  458e60:	bl	40a540 <log_assert_failed_realm@plt>
  458e64:	ldur	x0, [x29, #-72]
  458e68:	bl	458fd4 <isempty>
  458e6c:	tbnz	w0, #0, 458e74 <config_parse_net_condition+0x1a8>
  458e70:	b	458e94 <config_parse_net_condition+0x1c8>
  458e74:	ldr	x8, [sp, #56]
  458e78:	ldr	x0, [x8]
  458e7c:	ldr	w1, [sp, #68]
  458e80:	bl	40b8d0 <condition_free_list_type@plt>
  458e84:	ldr	x8, [sp, #56]
  458e88:	str	x0, [x8]
  458e8c:	stur	wzr, [x29, #-4]
  458e90:	b	458fc4 <config_parse_net_condition+0x2f8>
  458e94:	ldur	x8, [x29, #-72]
  458e98:	ldrb	w9, [x8]
  458e9c:	cmp	w9, #0x21
  458ea0:	cset	w9, eq  // eq = none
  458ea4:	and	w9, w9, #0x1
  458ea8:	strb	w9, [sp, #47]
  458eac:	ldrb	w9, [sp, #47]
  458eb0:	tbnz	w9, #0, 458eb8 <config_parse_net_condition+0x1ec>
  458eb4:	b	458ec4 <config_parse_net_condition+0x1f8>
  458eb8:	ldur	x8, [x29, #-72]
  458ebc:	add	x8, x8, #0x1
  458ec0:	stur	x8, [x29, #-72]
  458ec4:	ldr	w0, [sp, #68]
  458ec8:	ldur	x1, [x29, #-72]
  458ecc:	ldrb	w8, [sp, #47]
  458ed0:	mov	w9, wzr
  458ed4:	and	w2, w9, #0x1
  458ed8:	and	w3, w8, #0x1
  458edc:	bl	40bed0 <condition_new@plt>
  458ee0:	str	x0, [sp, #48]
  458ee4:	ldr	x10, [sp, #48]
  458ee8:	cbnz	x10, 458f10 <config_parse_net_condition+0x244>
  458eec:	mov	w8, wzr
  458ef0:	mov	w0, w8
  458ef4:	ldr	x1, [sp, #16]
  458ef8:	mov	w2, #0xf8                  	// #248
  458efc:	adrp	x3, 46f000 <on_inotify.__assert_in_set+0xb540>
  458f00:	add	x3, x3, #0xd95
  458f04:	bl	40a5e0 <log_oom_internal@plt>
  458f08:	stur	w0, [x29, #-4]
  458f0c:	b	458fc4 <config_parse_net_condition+0x2f8>
  458f10:	ldr	x8, [sp, #56]
  458f14:	ldr	x0, [x8]
  458f18:	ldr	w1, [sp, #68]
  458f1c:	bl	40b8d0 <condition_free_list_type@plt>
  458f20:	ldr	x8, [sp, #56]
  458f24:	str	x0, [x8]
  458f28:	ldr	x8, [sp, #56]
  458f2c:	str	x8, [sp, #32]
  458f30:	ldr	x8, [sp, #48]
  458f34:	str	x8, [sp, #24]
  458f38:	ldr	x8, [sp, #24]
  458f3c:	cmp	x8, #0x0
  458f40:	cset	w9, ne  // ne = any
  458f44:	mov	w10, #0x1                   	// #1
  458f48:	eor	w9, w9, #0x1
  458f4c:	eor	w9, w9, w10
  458f50:	eor	w9, w9, w10
  458f54:	and	w9, w9, #0x1
  458f58:	mov	w0, w9
  458f5c:	sxtw	x8, w0
  458f60:	cbz	x8, 458f84 <config_parse_net_condition+0x2b8>
  458f64:	mov	w8, wzr
  458f68:	mov	w0, w8
  458f6c:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  458f70:	add	x1, x1, #0xd16
  458f74:	ldr	x2, [sp, #16]
  458f78:	mov	w3, #0xfd                  	// #253
  458f7c:	ldr	x4, [sp, #8]
  458f80:	bl	40a540 <log_assert_failed_realm@plt>
  458f84:	ldr	x8, [sp, #32]
  458f88:	ldr	x8, [x8]
  458f8c:	ldr	x9, [sp, #24]
  458f90:	str	x8, [x9, #16]
  458f94:	cbz	x8, 458fa8 <config_parse_net_condition+0x2dc>
  458f98:	ldr	x8, [sp, #24]
  458f9c:	ldr	x9, [sp, #24]
  458fa0:	ldr	x9, [x9, #16]
  458fa4:	str	x8, [x9, #24]
  458fa8:	ldr	x8, [sp, #24]
  458fac:	mov	x9, xzr
  458fb0:	str	x9, [x8, #24]
  458fb4:	ldr	x8, [sp, #24]
  458fb8:	ldr	x9, [sp, #32]
  458fbc:	str	x8, [x9]
  458fc0:	stur	wzr, [x29, #-4]
  458fc4:	ldur	w0, [x29, #-4]
  458fc8:	ldp	x29, x30, [sp, #160]
  458fcc:	add	sp, sp, #0xb0
  458fd0:	ret

0000000000458fd4 <isempty>:
  458fd4:	sub	sp, sp, #0x10
  458fd8:	str	x0, [sp, #8]
  458fdc:	ldr	x8, [sp, #8]
  458fe0:	mov	w9, #0x1                   	// #1
  458fe4:	str	w9, [sp, #4]
  458fe8:	cbz	x8, 459004 <isempty+0x30>
  458fec:	ldr	x8, [sp, #8]
  458ff0:	ldrb	w9, [x8]
  458ff4:	cmp	w9, #0x0
  458ff8:	cset	w9, ne  // ne = any
  458ffc:	eor	w9, w9, #0x1
  459000:	str	w9, [sp, #4]
  459004:	ldr	w8, [sp, #4]
  459008:	and	w0, w8, #0x1
  45900c:	add	sp, sp, #0x10
  459010:	ret

0000000000459014 <config_parse_match_strv>:
  459014:	sub	sp, sp, #0xf0
  459018:	stp	x29, x30, [sp, #224]
  45901c:	add	x29, sp, #0xe0
  459020:	ldr	x8, [x29, #16]
  459024:	ldr	x9, [x29, #24]
  459028:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  45902c:	add	x10, x10, #0xb98
  459030:	add	x10, x10, #0x3
  459034:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  459038:	add	x11, x11, #0xe43
  45903c:	adrp	x12, 46f000 <on_inotify.__assert_in_set+0xb540>
  459040:	add	x12, x12, #0xdb0
  459044:	stur	x0, [x29, #-16]
  459048:	stur	x1, [x29, #-24]
  45904c:	stur	w2, [x29, #-28]
  459050:	stur	x3, [x29, #-40]
  459054:	stur	w4, [x29, #-44]
  459058:	stur	x5, [x29, #-56]
  45905c:	stur	w6, [x29, #-60]
  459060:	stur	x7, [x29, #-72]
  459064:	stur	x8, [x29, #-80]
  459068:	stur	x9, [x29, #-88]
  45906c:	ldur	x8, [x29, #-72]
  459070:	stur	x8, [x29, #-96]
  459074:	ldur	x8, [x29, #-80]
  459078:	stur	x8, [x29, #-104]
  45907c:	str	x10, [sp, #40]
  459080:	str	x11, [sp, #32]
  459084:	str	x12, [sp, #24]
  459088:	ldur	x8, [x29, #-24]
  45908c:	cmp	x8, #0x0
  459090:	cset	w9, ne  // ne = any
  459094:	mov	w10, #0x1                   	// #1
  459098:	eor	w9, w9, #0x1
  45909c:	eor	w9, w9, w10
  4590a0:	eor	w9, w9, w10
  4590a4:	and	w9, w9, #0x1
  4590a8:	mov	w0, w9
  4590ac:	sxtw	x8, w0
  4590b0:	cbz	x8, 4590d4 <config_parse_match_strv+0xc0>
  4590b4:	mov	w8, wzr
  4590b8:	mov	w0, w8
  4590bc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  4590c0:	add	x1, x1, #0xdac
  4590c4:	ldr	x2, [sp, #40]
  4590c8:	mov	w3, #0x112                 	// #274
  4590cc:	ldr	x4, [sp, #24]
  4590d0:	bl	40a540 <log_assert_failed_realm@plt>
  4590d4:	ldur	x8, [x29, #-56]
  4590d8:	cmp	x8, #0x0
  4590dc:	cset	w9, ne  // ne = any
  4590e0:	mov	w10, #0x1                   	// #1
  4590e4:	eor	w9, w9, #0x1
  4590e8:	eor	w9, w9, w10
  4590ec:	eor	w9, w9, w10
  4590f0:	and	w9, w9, #0x1
  4590f4:	mov	w0, w9
  4590f8:	sxtw	x8, w0
  4590fc:	cbz	x8, 459120 <config_parse_match_strv+0x10c>
  459100:	mov	w8, wzr
  459104:	mov	w0, w8
  459108:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45910c:	add	x1, x1, #0x4bc
  459110:	ldr	x2, [sp, #40]
  459114:	mov	w3, #0x113                 	// #275
  459118:	ldr	x4, [sp, #24]
  45911c:	bl	40a540 <log_assert_failed_realm@plt>
  459120:	ldur	x8, [x29, #-72]
  459124:	cmp	x8, #0x0
  459128:	cset	w9, ne  // ne = any
  45912c:	mov	w10, #0x1                   	// #1
  459130:	eor	w9, w9, #0x1
  459134:	eor	w9, w9, w10
  459138:	eor	w9, w9, w10
  45913c:	and	w9, w9, #0x1
  459140:	mov	w0, w9
  459144:	sxtw	x8, w0
  459148:	cbz	x8, 45916c <config_parse_match_strv+0x158>
  45914c:	mov	w8, wzr
  459150:	mov	w0, w8
  459154:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459158:	add	x1, x1, #0x4c3
  45915c:	ldr	x2, [sp, #40]
  459160:	mov	w3, #0x114                 	// #276
  459164:	ldr	x4, [sp, #24]
  459168:	bl	40a540 <log_assert_failed_realm@plt>
  45916c:	ldur	x8, [x29, #-80]
  459170:	cmp	x8, #0x0
  459174:	cset	w9, ne  // ne = any
  459178:	mov	w10, #0x1                   	// #1
  45917c:	eor	w9, w9, #0x1
  459180:	eor	w9, w9, w10
  459184:	eor	w9, w9, w10
  459188:	and	w9, w9, #0x1
  45918c:	mov	w0, w9
  459190:	sxtw	x8, w0
  459194:	cbz	x8, 4591b8 <config_parse_match_strv+0x1a4>
  459198:	mov	w8, wzr
  45919c:	mov	w0, w8
  4591a0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  4591a4:	add	x1, x1, #0x13c
  4591a8:	ldr	x2, [sp, #40]
  4591ac:	mov	w3, #0x115                 	// #277
  4591b0:	ldr	x4, [sp, #24]
  4591b4:	bl	40a540 <log_assert_failed_realm@plt>
  4591b8:	ldur	x0, [x29, #-72]
  4591bc:	bl	458fd4 <isempty>
  4591c0:	tbnz	w0, #0, 4591c8 <config_parse_match_strv+0x1b4>
  4591c4:	b	4591e4 <config_parse_match_strv+0x1d0>
  4591c8:	ldur	x8, [x29, #-104]
  4591cc:	ldr	x0, [x8]
  4591d0:	bl	40afa0 <strv_free@plt>
  4591d4:	ldur	x8, [x29, #-104]
  4591d8:	str	x0, [x8]
  4591dc:	stur	wzr, [x29, #-4]
  4591e0:	b	459444 <config_parse_match_strv+0x430>
  4591e4:	ldur	x8, [x29, #-96]
  4591e8:	ldrb	w9, [x8]
  4591ec:	cmp	w9, #0x21
  4591f0:	cset	w9, eq  // eq = none
  4591f4:	mov	w10, #0x1                   	// #1
  4591f8:	and	w9, w9, w10
  4591fc:	sturb	w9, [x29, #-105]
  459200:	ldurb	w9, [x29, #-105]
  459204:	and	w9, w9, #0x1
  459208:	ldur	x8, [x29, #-96]
  45920c:	mov	w0, w9
  459210:	sxtw	x11, w0
  459214:	add	x8, x8, x11
  459218:	stur	x8, [x29, #-96]
  45921c:	add	x1, sp, #0x68
  459220:	mov	x8, xzr
  459224:	str	x8, [sp, #104]
  459228:	str	x8, [sp, #96]
  45922c:	sub	x0, x29, #0x60
  459230:	mov	x2, x8
  459234:	mov	w3, #0x28                  	// #40
  459238:	bl	40bee0 <extract_first_word@plt>
  45923c:	str	w0, [sp, #112]
  459240:	ldr	w9, [sp, #112]
  459244:	cbnz	w9, 459258 <config_parse_match_strv+0x244>
  459248:	stur	wzr, [x29, #-4]
  45924c:	mov	w8, #0x1                   	// #1
  459250:	str	w8, [sp, #92]
  459254:	b	459420 <config_parse_match_strv+0x40c>
  459258:	ldr	w8, [sp, #112]
  45925c:	mov	w9, #0xfffffff4            	// #-12
  459260:	cmp	w8, w9
  459264:	b.ne	459290 <config_parse_match_strv+0x27c>  // b.any
  459268:	mov	w8, wzr
  45926c:	mov	w0, w8
  459270:	ldr	x1, [sp, #40]
  459274:	mov	w2, #0x126                 	// #294
  459278:	ldr	x3, [sp, #32]
  45927c:	bl	40a5e0 <log_oom_internal@plt>
  459280:	stur	w0, [x29, #-4]
  459284:	mov	w8, #0x1                   	// #1
  459288:	str	w8, [sp, #92]
  45928c:	b	459420 <config_parse_match_strv+0x40c>
  459290:	ldr	w8, [sp, #112]
  459294:	cmp	w8, #0x0
  459298:	cset	w8, ge  // ge = tcont
  45929c:	tbnz	w8, #0, 459340 <config_parse_match_strv+0x32c>
  4592a0:	mov	w8, #0x3                   	// #3
  4592a4:	str	w8, [sp, #88]
  4592a8:	ldr	w8, [sp, #112]
  4592ac:	str	w8, [sp, #84]
  4592b0:	mov	w8, wzr
  4592b4:	mov	w0, w8
  4592b8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4592bc:	ldr	w8, [sp, #88]
  4592c0:	and	w8, w8, #0x7
  4592c4:	cmp	w0, w8
  4592c8:	b.lt	459314 <config_parse_match_strv+0x300>  // b.tstop
  4592cc:	ldur	x0, [x29, #-16]
  4592d0:	ldr	w1, [sp, #88]
  4592d4:	ldur	x2, [x29, #-24]
  4592d8:	ldur	w3, [x29, #-28]
  4592dc:	ldr	w4, [sp, #84]
  4592e0:	ldur	x8, [x29, #-72]
  4592e4:	ldr	x5, [sp, #40]
  4592e8:	mov	w6, #0x128                 	// #296
  4592ec:	ldr	x7, [sp, #32]
  4592f0:	mov	x9, sp
  4592f4:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  4592f8:	add	x10, x10, #0xe5b
  4592fc:	str	x10, [x9]
  459300:	mov	x9, sp
  459304:	str	x8, [x9, #8]
  459308:	bl	40b8a0 <log_syntax_internal@plt>
  45930c:	str	w0, [sp, #20]
  459310:	b	459328 <config_parse_match_strv+0x314>
  459314:	ldr	w0, [sp, #84]
  459318:	bl	40a410 <abs@plt>
  45931c:	mov	w8, wzr
  459320:	subs	w8, w8, w0, uxtb
  459324:	str	w8, [sp, #20]
  459328:	ldr	w8, [sp, #20]
  45932c:	str	w8, [sp, #80]
  459330:	stur	wzr, [x29, #-4]
  459334:	mov	w8, #0x1                   	// #1
  459338:	str	w8, [sp, #92]
  45933c:	b	459420 <config_parse_match_strv+0x40c>
  459340:	ldurb	w8, [x29, #-105]
  459344:	tbnz	w8, #0, 45934c <config_parse_match_strv+0x338>
  459348:	b	45939c <config_parse_match_strv+0x388>
  45934c:	ldr	x1, [sp, #104]
  459350:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  459354:	add	x0, x0, #0xe78
  459358:	mov	x8, xzr
  45935c:	mov	x2, x8
  459360:	bl	40b5e0 <strjoin_real@plt>
  459364:	str	x0, [sp, #96]
  459368:	ldr	x8, [sp, #96]
  45936c:	cbnz	x8, 459398 <config_parse_match_strv+0x384>
  459370:	mov	w8, wzr
  459374:	mov	w0, w8
  459378:	ldr	x1, [sp, #40]
  45937c:	mov	w2, #0x12f                 	// #303
  459380:	ldr	x3, [sp, #32]
  459384:	bl	40a5e0 <log_oom_internal@plt>
  459388:	stur	w0, [x29, #-4]
  45938c:	mov	w8, #0x1                   	// #1
  459390:	str	w8, [sp, #92]
  459394:	b	459420 <config_parse_match_strv+0x40c>
  459398:	b	4593bc <config_parse_match_strv+0x3a8>
  45939c:	ldr	x8, [sp, #104]
  4593a0:	str	x8, [sp, #72]
  4593a4:	mov	x8, xzr
  4593a8:	str	x8, [sp, #104]
  4593ac:	ldr	x8, [sp, #72]
  4593b0:	str	x8, [sp, #64]
  4593b4:	ldr	x8, [sp, #64]
  4593b8:	str	x8, [sp, #96]
  4593bc:	ldur	x0, [x29, #-104]
  4593c0:	ldr	x8, [sp, #96]
  4593c4:	str	x8, [sp, #56]
  4593c8:	mov	x8, xzr
  4593cc:	str	x8, [sp, #96]
  4593d0:	ldr	x8, [sp, #56]
  4593d4:	str	x8, [sp, #48]
  4593d8:	ldr	x1, [sp, #48]
  4593dc:	bl	40bef0 <strv_consume@plt>
  4593e0:	str	w0, [sp, #112]
  4593e4:	ldr	w9, [sp, #112]
  4593e8:	cmp	w9, #0x0
  4593ec:	cset	w9, ge  // ge = tcont
  4593f0:	tbnz	w9, #0, 45941c <config_parse_match_strv+0x408>
  4593f4:	mov	w8, wzr
  4593f8:	mov	w0, w8
  4593fc:	ldr	x1, [sp, #40]
  459400:	mov	w2, #0x135                 	// #309
  459404:	ldr	x3, [sp, #32]
  459408:	bl	40a5e0 <log_oom_internal@plt>
  45940c:	stur	w0, [x29, #-4]
  459410:	mov	w8, #0x1                   	// #1
  459414:	str	w8, [sp, #92]
  459418:	b	459420 <config_parse_match_strv+0x40c>
  45941c:	str	wzr, [sp, #92]
  459420:	add	x0, sp, #0x60
  459424:	bl	459454 <freep>
  459428:	add	x0, sp, #0x68
  45942c:	bl	459454 <freep>
  459430:	ldr	w8, [sp, #92]
  459434:	cbz	w8, 459440 <config_parse_match_strv+0x42c>
  459438:	b	45943c <config_parse_match_strv+0x428>
  45943c:	b	459444 <config_parse_match_strv+0x430>
  459440:	b	45921c <config_parse_match_strv+0x208>
  459444:	ldur	w0, [x29, #-4]
  459448:	ldp	x29, x30, [sp, #224]
  45944c:	add	sp, sp, #0xf0
  459450:	ret

0000000000459454 <freep>:
  459454:	sub	sp, sp, #0x20
  459458:	stp	x29, x30, [sp, #16]
  45945c:	add	x29, sp, #0x10
  459460:	str	x0, [sp, #8]
  459464:	ldr	x8, [sp, #8]
  459468:	ldr	x0, [x8]
  45946c:	bl	40a530 <free@plt>
  459470:	ldp	x29, x30, [sp, #16]
  459474:	add	sp, sp, #0x20
  459478:	ret

000000000045947c <config_parse_match_ifnames>:
  45947c:	sub	sp, sp, #0x120
  459480:	stp	x29, x30, [sp, #256]
  459484:	str	x28, [sp, #272]
  459488:	add	x29, sp, #0x100
  45948c:	ldr	x8, [x29, #32]
  459490:	ldr	x9, [x29, #40]
  459494:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  459498:	add	x10, x10, #0xb98
  45949c:	add	x10, x10, #0x3
  4594a0:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  4594a4:	add	x11, x11, #0xf10
  4594a8:	adrp	x12, 46f000 <on_inotify.__assert_in_set+0xb540>
  4594ac:	add	x12, x12, #0xe7a
  4594b0:	stur	x0, [x29, #-16]
  4594b4:	stur	x1, [x29, #-24]
  4594b8:	stur	w2, [x29, #-28]
  4594bc:	stur	x3, [x29, #-40]
  4594c0:	stur	w4, [x29, #-44]
  4594c4:	stur	x5, [x29, #-56]
  4594c8:	stur	w6, [x29, #-60]
  4594cc:	stur	x7, [x29, #-72]
  4594d0:	stur	x8, [x29, #-80]
  4594d4:	stur	x9, [x29, #-88]
  4594d8:	ldur	x8, [x29, #-72]
  4594dc:	stur	x8, [x29, #-96]
  4594e0:	ldur	x8, [x29, #-80]
  4594e4:	stur	x8, [x29, #-104]
  4594e8:	str	x10, [sp, #56]
  4594ec:	str	x11, [sp, #48]
  4594f0:	str	x12, [sp, #40]
  4594f4:	ldur	x8, [x29, #-24]
  4594f8:	cmp	x8, #0x0
  4594fc:	cset	w9, ne  // ne = any
  459500:	mov	w10, #0x1                   	// #1
  459504:	eor	w9, w9, #0x1
  459508:	eor	w9, w9, w10
  45950c:	eor	w9, w9, w10
  459510:	and	w9, w9, #0x1
  459514:	mov	w0, w9
  459518:	sxtw	x8, w0
  45951c:	cbz	x8, 459540 <config_parse_match_ifnames+0xc4>
  459520:	mov	w8, wzr
  459524:	mov	w0, w8
  459528:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  45952c:	add	x1, x1, #0xdac
  459530:	ldr	x2, [sp, #56]
  459534:	mov	w3, #0x14a                 	// #330
  459538:	ldr	x4, [sp, #40]
  45953c:	bl	40a540 <log_assert_failed_realm@plt>
  459540:	ldur	x8, [x29, #-56]
  459544:	cmp	x8, #0x0
  459548:	cset	w9, ne  // ne = any
  45954c:	mov	w10, #0x1                   	// #1
  459550:	eor	w9, w9, #0x1
  459554:	eor	w9, w9, w10
  459558:	eor	w9, w9, w10
  45955c:	and	w9, w9, #0x1
  459560:	mov	w0, w9
  459564:	sxtw	x8, w0
  459568:	cbz	x8, 45958c <config_parse_match_ifnames+0x110>
  45956c:	mov	w8, wzr
  459570:	mov	w0, w8
  459574:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459578:	add	x1, x1, #0x4bc
  45957c:	ldr	x2, [sp, #56]
  459580:	mov	w3, #0x14b                 	// #331
  459584:	ldr	x4, [sp, #40]
  459588:	bl	40a540 <log_assert_failed_realm@plt>
  45958c:	ldur	x8, [x29, #-72]
  459590:	cmp	x8, #0x0
  459594:	cset	w9, ne  // ne = any
  459598:	mov	w10, #0x1                   	// #1
  45959c:	eor	w9, w9, #0x1
  4595a0:	eor	w9, w9, w10
  4595a4:	eor	w9, w9, w10
  4595a8:	and	w9, w9, #0x1
  4595ac:	mov	w0, w9
  4595b0:	sxtw	x8, w0
  4595b4:	cbz	x8, 4595d8 <config_parse_match_ifnames+0x15c>
  4595b8:	mov	w8, wzr
  4595bc:	mov	w0, w8
  4595c0:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  4595c4:	add	x1, x1, #0x4c3
  4595c8:	ldr	x2, [sp, #56]
  4595cc:	mov	w3, #0x14c                 	// #332
  4595d0:	ldr	x4, [sp, #40]
  4595d4:	bl	40a540 <log_assert_failed_realm@plt>
  4595d8:	ldur	x8, [x29, #-80]
  4595dc:	cmp	x8, #0x0
  4595e0:	cset	w9, ne  // ne = any
  4595e4:	mov	w10, #0x1                   	// #1
  4595e8:	eor	w9, w9, #0x1
  4595ec:	eor	w9, w9, w10
  4595f0:	eor	w9, w9, w10
  4595f4:	and	w9, w9, #0x1
  4595f8:	mov	w0, w9
  4595fc:	sxtw	x8, w0
  459600:	cbz	x8, 459624 <config_parse_match_ifnames+0x1a8>
  459604:	mov	w8, wzr
  459608:	mov	w0, w8
  45960c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  459610:	add	x1, x1, #0x13c
  459614:	ldr	x2, [sp, #56]
  459618:	mov	w3, #0x14d                 	// #333
  45961c:	ldr	x4, [sp, #40]
  459620:	bl	40a540 <log_assert_failed_realm@plt>
  459624:	ldur	x8, [x29, #-96]
  459628:	ldrb	w9, [x8]
  45962c:	cmp	w9, #0x21
  459630:	cset	w9, eq  // eq = none
  459634:	mov	w10, #0x1                   	// #1
  459638:	and	w9, w9, w10
  45963c:	sturb	w9, [x29, #-105]
  459640:	ldurb	w9, [x29, #-105]
  459644:	and	w9, w9, #0x1
  459648:	ldur	x8, [x29, #-96]
  45964c:	mov	w0, w9
  459650:	sxtw	x11, w0
  459654:	add	x8, x8, x11
  459658:	stur	x8, [x29, #-96]
  45965c:	sub	x1, x29, #0x78
  459660:	mov	x8, xzr
  459664:	stur	x8, [x29, #-120]
  459668:	str	x8, [sp, #128]
  45966c:	sub	x0, x29, #0x60
  459670:	mov	x2, x8
  459674:	mov	w9, wzr
  459678:	mov	w3, w9
  45967c:	bl	40bee0 <extract_first_word@plt>
  459680:	stur	w0, [x29, #-112]
  459684:	ldur	w9, [x29, #-112]
  459688:	cbnz	w9, 45969c <config_parse_match_ifnames+0x220>
  45968c:	stur	wzr, [x29, #-4]
  459690:	mov	w8, #0x1                   	// #1
  459694:	str	w8, [sp, #124]
  459698:	b	459904 <config_parse_match_ifnames+0x488>
  45969c:	ldur	w8, [x29, #-112]
  4596a0:	mov	w9, #0xfffffff4            	// #-12
  4596a4:	cmp	w8, w9
  4596a8:	b.ne	4596d4 <config_parse_match_ifnames+0x258>  // b.any
  4596ac:	mov	w8, wzr
  4596b0:	mov	w0, w8
  4596b4:	ldr	x1, [sp, #56]
  4596b8:	mov	w2, #0x159                 	// #345
  4596bc:	ldr	x3, [sp, #48]
  4596c0:	bl	40a5e0 <log_oom_internal@plt>
  4596c4:	stur	w0, [x29, #-4]
  4596c8:	mov	w8, #0x1                   	// #1
  4596cc:	str	w8, [sp, #124]
  4596d0:	b	459904 <config_parse_match_ifnames+0x488>
  4596d4:	ldur	w8, [x29, #-112]
  4596d8:	cmp	w8, #0x0
  4596dc:	cset	w8, ge  // ge = tcont
  4596e0:	tbnz	w8, #0, 459780 <config_parse_match_ifnames+0x304>
  4596e4:	mov	w8, #0x3                   	// #3
  4596e8:	str	w8, [sp, #120]
  4596ec:	mov	w8, wzr
  4596f0:	str	wzr, [sp, #116]
  4596f4:	mov	w0, w8
  4596f8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4596fc:	ldr	w8, [sp, #120]
  459700:	and	w8, w8, #0x7
  459704:	cmp	w0, w8
  459708:	b.lt	459754 <config_parse_match_ifnames+0x2d8>  // b.tstop
  45970c:	ldur	x0, [x29, #-16]
  459710:	ldr	w1, [sp, #120]
  459714:	ldur	x2, [x29, #-24]
  459718:	ldur	w3, [x29, #-28]
  45971c:	ldr	w4, [sp, #116]
  459720:	ldur	x8, [x29, #-72]
  459724:	ldr	x5, [sp, #56]
  459728:	mov	w6, #0x15c                 	// #348
  45972c:	ldr	x7, [sp, #48]
  459730:	mov	x9, sp
  459734:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  459738:	add	x10, x10, #0xf2b
  45973c:	str	x10, [x9]
  459740:	mov	x9, sp
  459744:	str	x8, [x9, #8]
  459748:	bl	40b8a0 <log_syntax_internal@plt>
  45974c:	str	w0, [sp, #36]
  459750:	b	459768 <config_parse_match_ifnames+0x2ec>
  459754:	ldr	w0, [sp, #116]
  459758:	bl	40a410 <abs@plt>
  45975c:	mov	w8, wzr
  459760:	subs	w8, w8, w0, uxtb
  459764:	str	w8, [sp, #36]
  459768:	ldr	w8, [sp, #36]
  45976c:	str	w8, [sp, #112]
  459770:	stur	wzr, [x29, #-4]
  459774:	mov	w8, #0x1                   	// #1
  459778:	str	w8, [sp, #124]
  45977c:	b	459904 <config_parse_match_ifnames+0x488>
  459780:	ldur	x0, [x29, #-120]
  459784:	bl	40bf00 <ifname_valid@plt>
  459788:	tbnz	w0, #0, 459824 <config_parse_match_ifnames+0x3a8>
  45978c:	mov	w8, #0x3                   	// #3
  459790:	str	w8, [sp, #108]
  459794:	mov	w8, wzr
  459798:	str	wzr, [sp, #104]
  45979c:	mov	w0, w8
  4597a0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4597a4:	ldr	w8, [sp, #108]
  4597a8:	and	w8, w8, #0x7
  4597ac:	cmp	w0, w8
  4597b0:	b.lt	4597fc <config_parse_match_ifnames+0x380>  // b.tstop
  4597b4:	ldur	x0, [x29, #-16]
  4597b8:	ldr	w1, [sp, #108]
  4597bc:	ldur	x2, [x29, #-24]
  4597c0:	ldur	w3, [x29, #-28]
  4597c4:	ldr	w4, [sp, #104]
  4597c8:	ldur	x8, [x29, #-120]
  4597cc:	ldr	x5, [sp, #56]
  4597d0:	mov	w6, #0x162                 	// #354
  4597d4:	ldr	x7, [sp, #48]
  4597d8:	mov	x9, sp
  4597dc:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  4597e0:	add	x10, x10, #0xf53
  4597e4:	str	x10, [x9]
  4597e8:	mov	x9, sp
  4597ec:	str	x8, [x9, #8]
  4597f0:	bl	40b8a0 <log_syntax_internal@plt>
  4597f4:	str	w0, [sp, #32]
  4597f8:	b	459810 <config_parse_match_ifnames+0x394>
  4597fc:	ldr	w0, [sp, #104]
  459800:	bl	40a410 <abs@plt>
  459804:	mov	w8, wzr
  459808:	subs	w8, w8, w0, uxtb
  45980c:	str	w8, [sp, #32]
  459810:	ldr	w8, [sp, #32]
  459814:	str	w8, [sp, #100]
  459818:	mov	w8, #0xb                   	// #11
  45981c:	str	w8, [sp, #124]
  459820:	b	459904 <config_parse_match_ifnames+0x488>
  459824:	ldurb	w8, [x29, #-105]
  459828:	tbnz	w8, #0, 459830 <config_parse_match_ifnames+0x3b4>
  45982c:	b	459880 <config_parse_match_ifnames+0x404>
  459830:	ldur	x1, [x29, #-120]
  459834:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  459838:	add	x0, x0, #0xe78
  45983c:	mov	x8, xzr
  459840:	mov	x2, x8
  459844:	bl	40b5e0 <strjoin_real@plt>
  459848:	str	x0, [sp, #128]
  45984c:	ldr	x8, [sp, #128]
  459850:	cbnz	x8, 45987c <config_parse_match_ifnames+0x400>
  459854:	mov	w8, wzr
  459858:	mov	w0, w8
  45985c:	ldr	x1, [sp, #56]
  459860:	mov	w2, #0x169                 	// #361
  459864:	ldr	x3, [sp, #48]
  459868:	bl	40a5e0 <log_oom_internal@plt>
  45986c:	stur	w0, [x29, #-4]
  459870:	mov	w8, #0x1                   	// #1
  459874:	str	w8, [sp, #124]
  459878:	b	459904 <config_parse_match_ifnames+0x488>
  45987c:	b	4598a0 <config_parse_match_ifnames+0x424>
  459880:	ldur	x8, [x29, #-120]
  459884:	str	x8, [sp, #88]
  459888:	mov	x8, xzr
  45988c:	stur	x8, [x29, #-120]
  459890:	ldr	x8, [sp, #88]
  459894:	str	x8, [sp, #80]
  459898:	ldr	x8, [sp, #80]
  45989c:	str	x8, [sp, #128]
  4598a0:	ldur	x0, [x29, #-104]
  4598a4:	ldr	x8, [sp, #128]
  4598a8:	str	x8, [sp, #72]
  4598ac:	mov	x8, xzr
  4598b0:	str	x8, [sp, #128]
  4598b4:	ldr	x8, [sp, #72]
  4598b8:	str	x8, [sp, #64]
  4598bc:	ldr	x1, [sp, #64]
  4598c0:	bl	40bef0 <strv_consume@plt>
  4598c4:	stur	w0, [x29, #-112]
  4598c8:	ldur	w9, [x29, #-112]
  4598cc:	cmp	w9, #0x0
  4598d0:	cset	w9, ge  // ge = tcont
  4598d4:	tbnz	w9, #0, 459900 <config_parse_match_ifnames+0x484>
  4598d8:	mov	w8, wzr
  4598dc:	mov	w0, w8
  4598e0:	ldr	x1, [sp, #56]
  4598e4:	mov	w2, #0x16f                 	// #367
  4598e8:	ldr	x3, [sp, #48]
  4598ec:	bl	40a5e0 <log_oom_internal@plt>
  4598f0:	stur	w0, [x29, #-4]
  4598f4:	mov	w8, #0x1                   	// #1
  4598f8:	str	w8, [sp, #124]
  4598fc:	b	459904 <config_parse_match_ifnames+0x488>
  459900:	str	wzr, [sp, #124]
  459904:	add	x0, sp, #0x80
  459908:	bl	459454 <freep>
  45990c:	sub	x0, x29, #0x78
  459910:	bl	459454 <freep>
  459914:	ldr	w8, [sp, #124]
  459918:	str	w8, [sp, #28]
  45991c:	cbz	w8, 459938 <config_parse_match_ifnames+0x4bc>
  459920:	b	459924 <config_parse_match_ifnames+0x4a8>
  459924:	ldr	w8, [sp, #28]
  459928:	cmp	w8, #0x1
  45992c:	b.eq	45993c <config_parse_match_ifnames+0x4c0>  // b.none
  459930:	b	459934 <config_parse_match_ifnames+0x4b8>
  459934:	b	45965c <config_parse_match_ifnames+0x1e0>
  459938:	b	45965c <config_parse_match_ifnames+0x1e0>
  45993c:	ldur	w0, [x29, #-4]
  459940:	ldr	x28, [sp, #272]
  459944:	ldp	x29, x30, [sp, #256]
  459948:	add	sp, sp, #0x120
  45994c:	ret

0000000000459950 <config_parse_match_property>:
  459950:	sub	sp, sp, #0x120
  459954:	stp	x29, x30, [sp, #256]
  459958:	str	x28, [sp, #272]
  45995c:	add	x29, sp, #0x100
  459960:	ldr	x8, [x29, #32]
  459964:	ldr	x9, [x29, #40]
  459968:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  45996c:	add	x10, x10, #0xb98
  459970:	add	x10, x10, #0x3
  459974:	adrp	x11, 470000 <on_inotify.__assert_in_set+0xc540>
  459978:	add	x11, x11, #0x2b
  45997c:	adrp	x12, 46f000 <on_inotify.__assert_in_set+0xb540>
  459980:	add	x12, x12, #0xf94
  459984:	stur	x0, [x29, #-16]
  459988:	stur	x1, [x29, #-24]
  45998c:	stur	w2, [x29, #-28]
  459990:	stur	x3, [x29, #-40]
  459994:	stur	w4, [x29, #-44]
  459998:	stur	x5, [x29, #-56]
  45999c:	stur	w6, [x29, #-60]
  4599a0:	stur	x7, [x29, #-72]
  4599a4:	stur	x8, [x29, #-80]
  4599a8:	stur	x9, [x29, #-88]
  4599ac:	ldur	x8, [x29, #-72]
  4599b0:	stur	x8, [x29, #-96]
  4599b4:	ldur	x8, [x29, #-80]
  4599b8:	stur	x8, [x29, #-104]
  4599bc:	str	x10, [sp, #56]
  4599c0:	str	x11, [sp, #48]
  4599c4:	str	x12, [sp, #40]
  4599c8:	ldur	x8, [x29, #-24]
  4599cc:	cmp	x8, #0x0
  4599d0:	cset	w9, ne  // ne = any
  4599d4:	mov	w10, #0x1                   	// #1
  4599d8:	eor	w9, w9, #0x1
  4599dc:	eor	w9, w9, w10
  4599e0:	eor	w9, w9, w10
  4599e4:	and	w9, w9, #0x1
  4599e8:	mov	w0, w9
  4599ec:	sxtw	x8, w0
  4599f0:	cbz	x8, 459a14 <config_parse_match_property+0xc4>
  4599f4:	mov	w8, wzr
  4599f8:	mov	w0, w8
  4599fc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  459a00:	add	x1, x1, #0xdac
  459a04:	ldr	x2, [sp, #56]
  459a08:	mov	w3, #0x184                 	// #388
  459a0c:	ldr	x4, [sp, #40]
  459a10:	bl	40a540 <log_assert_failed_realm@plt>
  459a14:	ldur	x8, [x29, #-56]
  459a18:	cmp	x8, #0x0
  459a1c:	cset	w9, ne  // ne = any
  459a20:	mov	w10, #0x1                   	// #1
  459a24:	eor	w9, w9, #0x1
  459a28:	eor	w9, w9, w10
  459a2c:	eor	w9, w9, w10
  459a30:	and	w9, w9, #0x1
  459a34:	mov	w0, w9
  459a38:	sxtw	x8, w0
  459a3c:	cbz	x8, 459a60 <config_parse_match_property+0x110>
  459a40:	mov	w8, wzr
  459a44:	mov	w0, w8
  459a48:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459a4c:	add	x1, x1, #0x4bc
  459a50:	ldr	x2, [sp, #56]
  459a54:	mov	w3, #0x185                 	// #389
  459a58:	ldr	x4, [sp, #40]
  459a5c:	bl	40a540 <log_assert_failed_realm@plt>
  459a60:	ldur	x8, [x29, #-72]
  459a64:	cmp	x8, #0x0
  459a68:	cset	w9, ne  // ne = any
  459a6c:	mov	w10, #0x1                   	// #1
  459a70:	eor	w9, w9, #0x1
  459a74:	eor	w9, w9, w10
  459a78:	eor	w9, w9, w10
  459a7c:	and	w9, w9, #0x1
  459a80:	mov	w0, w9
  459a84:	sxtw	x8, w0
  459a88:	cbz	x8, 459aac <config_parse_match_property+0x15c>
  459a8c:	mov	w8, wzr
  459a90:	mov	w0, w8
  459a94:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459a98:	add	x1, x1, #0x4c3
  459a9c:	ldr	x2, [sp, #56]
  459aa0:	mov	w3, #0x186                 	// #390
  459aa4:	ldr	x4, [sp, #40]
  459aa8:	bl	40a540 <log_assert_failed_realm@plt>
  459aac:	ldur	x8, [x29, #-80]
  459ab0:	cmp	x8, #0x0
  459ab4:	cset	w9, ne  // ne = any
  459ab8:	mov	w10, #0x1                   	// #1
  459abc:	eor	w9, w9, #0x1
  459ac0:	eor	w9, w9, w10
  459ac4:	eor	w9, w9, w10
  459ac8:	and	w9, w9, #0x1
  459acc:	mov	w0, w9
  459ad0:	sxtw	x8, w0
  459ad4:	cbz	x8, 459af8 <config_parse_match_property+0x1a8>
  459ad8:	mov	w8, wzr
  459adc:	mov	w0, w8
  459ae0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  459ae4:	add	x1, x1, #0x13c
  459ae8:	ldr	x2, [sp, #56]
  459aec:	mov	w3, #0x187                 	// #391
  459af0:	ldr	x4, [sp, #40]
  459af4:	bl	40a540 <log_assert_failed_realm@plt>
  459af8:	ldur	x8, [x29, #-96]
  459afc:	ldrb	w9, [x8]
  459b00:	cmp	w9, #0x21
  459b04:	cset	w9, eq  // eq = none
  459b08:	mov	w10, #0x1                   	// #1
  459b0c:	and	w9, w9, w10
  459b10:	sturb	w9, [x29, #-105]
  459b14:	ldurb	w9, [x29, #-105]
  459b18:	and	w9, w9, #0x1
  459b1c:	ldur	x8, [x29, #-96]
  459b20:	mov	w0, w9
  459b24:	sxtw	x11, w0
  459b28:	add	x8, x8, x11
  459b2c:	stur	x8, [x29, #-96]
  459b30:	sub	x1, x29, #0x78
  459b34:	mov	x8, xzr
  459b38:	stur	x8, [x29, #-120]
  459b3c:	str	x8, [sp, #128]
  459b40:	sub	x0, x29, #0x60
  459b44:	mov	x2, x8
  459b48:	mov	w3, #0xa                   	// #10
  459b4c:	bl	40bee0 <extract_first_word@plt>
  459b50:	stur	w0, [x29, #-112]
  459b54:	ldur	w9, [x29, #-112]
  459b58:	cbnz	w9, 459b6c <config_parse_match_property+0x21c>
  459b5c:	stur	wzr, [x29, #-4]
  459b60:	mov	w8, #0x1                   	// #1
  459b64:	str	w8, [sp, #124]
  459b68:	b	459dd4 <config_parse_match_property+0x484>
  459b6c:	ldur	w8, [x29, #-112]
  459b70:	mov	w9, #0xfffffff4            	// #-12
  459b74:	cmp	w8, w9
  459b78:	b.ne	459ba4 <config_parse_match_property+0x254>  // b.any
  459b7c:	mov	w8, wzr
  459b80:	mov	w0, w8
  459b84:	ldr	x1, [sp, #56]
  459b88:	mov	w2, #0x193                 	// #403
  459b8c:	ldr	x3, [sp, #48]
  459b90:	bl	40a5e0 <log_oom_internal@plt>
  459b94:	stur	w0, [x29, #-4]
  459b98:	mov	w8, #0x1                   	// #1
  459b9c:	str	w8, [sp, #124]
  459ba0:	b	459dd4 <config_parse_match_property+0x484>
  459ba4:	ldur	w8, [x29, #-112]
  459ba8:	cmp	w8, #0x0
  459bac:	cset	w8, ge  // ge = tcont
  459bb0:	tbnz	w8, #0, 459c50 <config_parse_match_property+0x300>
  459bb4:	mov	w8, #0x3                   	// #3
  459bb8:	str	w8, [sp, #120]
  459bbc:	mov	w8, wzr
  459bc0:	str	wzr, [sp, #116]
  459bc4:	mov	w0, w8
  459bc8:	bl	40a3f0 <log_get_max_level_realm@plt>
  459bcc:	ldr	w8, [sp, #120]
  459bd0:	and	w8, w8, #0x7
  459bd4:	cmp	w0, w8
  459bd8:	b.lt	459c24 <config_parse_match_property+0x2d4>  // b.tstop
  459bdc:	ldur	x0, [x29, #-16]
  459be0:	ldr	w1, [sp, #120]
  459be4:	ldur	x2, [x29, #-24]
  459be8:	ldur	w3, [x29, #-28]
  459bec:	ldr	w4, [sp, #116]
  459bf0:	ldur	x8, [x29, #-72]
  459bf4:	ldr	x5, [sp, #56]
  459bf8:	mov	w6, #0x196                 	// #406
  459bfc:	ldr	x7, [sp, #48]
  459c00:	mov	x9, sp
  459c04:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  459c08:	add	x10, x10, #0xe5b
  459c0c:	str	x10, [x9]
  459c10:	mov	x9, sp
  459c14:	str	x8, [x9, #8]
  459c18:	bl	40b8a0 <log_syntax_internal@plt>
  459c1c:	str	w0, [sp, #36]
  459c20:	b	459c38 <config_parse_match_property+0x2e8>
  459c24:	ldr	w0, [sp, #116]
  459c28:	bl	40a410 <abs@plt>
  459c2c:	mov	w8, wzr
  459c30:	subs	w8, w8, w0, uxtb
  459c34:	str	w8, [sp, #36]
  459c38:	ldr	w8, [sp, #36]
  459c3c:	str	w8, [sp, #112]
  459c40:	stur	wzr, [x29, #-4]
  459c44:	mov	w8, #0x1                   	// #1
  459c48:	str	w8, [sp, #124]
  459c4c:	b	459dd4 <config_parse_match_property+0x484>
  459c50:	ldur	x0, [x29, #-120]
  459c54:	bl	40bf10 <env_assignment_is_valid@plt>
  459c58:	tbnz	w0, #0, 459cf4 <config_parse_match_property+0x3a4>
  459c5c:	mov	w8, #0x3                   	// #3
  459c60:	str	w8, [sp, #108]
  459c64:	mov	w8, wzr
  459c68:	str	wzr, [sp, #104]
  459c6c:	mov	w0, w8
  459c70:	bl	40a3f0 <log_get_max_level_realm@plt>
  459c74:	ldr	w8, [sp, #108]
  459c78:	and	w8, w8, #0x7
  459c7c:	cmp	w0, w8
  459c80:	b.lt	459ccc <config_parse_match_property+0x37c>  // b.tstop
  459c84:	ldur	x0, [x29, #-16]
  459c88:	ldr	w1, [sp, #108]
  459c8c:	ldur	x2, [x29, #-24]
  459c90:	ldur	w3, [x29, #-28]
  459c94:	ldr	w4, [sp, #104]
  459c98:	ldur	x8, [x29, #-120]
  459c9c:	ldr	x5, [sp, #56]
  459ca0:	mov	w6, #0x19c                 	// #412
  459ca4:	ldr	x7, [sp, #48]
  459ca8:	mov	x9, sp
  459cac:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  459cb0:	add	x10, x10, #0x47
  459cb4:	str	x10, [x9]
  459cb8:	mov	x9, sp
  459cbc:	str	x8, [x9, #8]
  459cc0:	bl	40b8a0 <log_syntax_internal@plt>
  459cc4:	str	w0, [sp, #32]
  459cc8:	b	459ce0 <config_parse_match_property+0x390>
  459ccc:	ldr	w0, [sp, #104]
  459cd0:	bl	40a410 <abs@plt>
  459cd4:	mov	w8, wzr
  459cd8:	subs	w8, w8, w0, uxtb
  459cdc:	str	w8, [sp, #32]
  459ce0:	ldr	w8, [sp, #32]
  459ce4:	str	w8, [sp, #100]
  459ce8:	mov	w8, #0xb                   	// #11
  459cec:	str	w8, [sp, #124]
  459cf0:	b	459dd4 <config_parse_match_property+0x484>
  459cf4:	ldurb	w8, [x29, #-105]
  459cf8:	tbnz	w8, #0, 459d00 <config_parse_match_property+0x3b0>
  459cfc:	b	459d50 <config_parse_match_property+0x400>
  459d00:	ldur	x1, [x29, #-120]
  459d04:	adrp	x0, 46f000 <on_inotify.__assert_in_set+0xb540>
  459d08:	add	x0, x0, #0xe78
  459d0c:	mov	x8, xzr
  459d10:	mov	x2, x8
  459d14:	bl	40b5e0 <strjoin_real@plt>
  459d18:	str	x0, [sp, #128]
  459d1c:	ldr	x8, [sp, #128]
  459d20:	cbnz	x8, 459d4c <config_parse_match_property+0x3fc>
  459d24:	mov	w8, wzr
  459d28:	mov	w0, w8
  459d2c:	ldr	x1, [sp, #56]
  459d30:	mov	w2, #0x1a3                 	// #419
  459d34:	ldr	x3, [sp, #48]
  459d38:	bl	40a5e0 <log_oom_internal@plt>
  459d3c:	stur	w0, [x29, #-4]
  459d40:	mov	w8, #0x1                   	// #1
  459d44:	str	w8, [sp, #124]
  459d48:	b	459dd4 <config_parse_match_property+0x484>
  459d4c:	b	459d70 <config_parse_match_property+0x420>
  459d50:	ldur	x8, [x29, #-120]
  459d54:	str	x8, [sp, #88]
  459d58:	mov	x8, xzr
  459d5c:	stur	x8, [x29, #-120]
  459d60:	ldr	x8, [sp, #88]
  459d64:	str	x8, [sp, #80]
  459d68:	ldr	x8, [sp, #80]
  459d6c:	str	x8, [sp, #128]
  459d70:	ldur	x0, [x29, #-104]
  459d74:	ldr	x8, [sp, #128]
  459d78:	str	x8, [sp, #72]
  459d7c:	mov	x8, xzr
  459d80:	str	x8, [sp, #128]
  459d84:	ldr	x8, [sp, #72]
  459d88:	str	x8, [sp, #64]
  459d8c:	ldr	x1, [sp, #64]
  459d90:	bl	40bef0 <strv_consume@plt>
  459d94:	stur	w0, [x29, #-112]
  459d98:	ldur	w9, [x29, #-112]
  459d9c:	cmp	w9, #0x0
  459da0:	cset	w9, ge  // ge = tcont
  459da4:	tbnz	w9, #0, 459dd0 <config_parse_match_property+0x480>
  459da8:	mov	w8, wzr
  459dac:	mov	w0, w8
  459db0:	ldr	x1, [sp, #56]
  459db4:	mov	w2, #0x1a9                 	// #425
  459db8:	ldr	x3, [sp, #48]
  459dbc:	bl	40a5e0 <log_oom_internal@plt>
  459dc0:	stur	w0, [x29, #-4]
  459dc4:	mov	w8, #0x1                   	// #1
  459dc8:	str	w8, [sp, #124]
  459dcc:	b	459dd4 <config_parse_match_property+0x484>
  459dd0:	str	wzr, [sp, #124]
  459dd4:	add	x0, sp, #0x80
  459dd8:	bl	459454 <freep>
  459ddc:	sub	x0, x29, #0x78
  459de0:	bl	459454 <freep>
  459de4:	ldr	w8, [sp, #124]
  459de8:	str	w8, [sp, #28]
  459dec:	cbz	w8, 459e08 <config_parse_match_property+0x4b8>
  459df0:	b	459df4 <config_parse_match_property+0x4a4>
  459df4:	ldr	w8, [sp, #28]
  459df8:	cmp	w8, #0x1
  459dfc:	b.eq	459e0c <config_parse_match_property+0x4bc>  // b.none
  459e00:	b	459e04 <config_parse_match_property+0x4b4>
  459e04:	b	459b30 <config_parse_match_property+0x1e0>
  459e08:	b	459b30 <config_parse_match_property+0x1e0>
  459e0c:	ldur	w0, [x29, #-4]
  459e10:	ldr	x28, [sp, #272]
  459e14:	ldp	x29, x30, [sp, #256]
  459e18:	add	sp, sp, #0x120
  459e1c:	ret

0000000000459e20 <config_parse_ifalias>:
  459e20:	sub	sp, sp, #0xc0
  459e24:	stp	x29, x30, [sp, #176]
  459e28:	add	x29, sp, #0xb0
  459e2c:	ldr	x8, [x29, #16]
  459e30:	ldr	x9, [x29, #24]
  459e34:	mov	x10, xzr
  459e38:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  459e3c:	add	x11, x11, #0xb98
  459e40:	add	x11, x11, #0x3
  459e44:	adrp	x12, 470000 <on_inotify.__assert_in_set+0xc540>
  459e48:	add	x12, x12, #0x7a
  459e4c:	stur	x0, [x29, #-16]
  459e50:	stur	x1, [x29, #-24]
  459e54:	stur	w2, [x29, #-28]
  459e58:	stur	x3, [x29, #-40]
  459e5c:	stur	w4, [x29, #-44]
  459e60:	stur	x5, [x29, #-56]
  459e64:	stur	w6, [x29, #-60]
  459e68:	stur	x7, [x29, #-72]
  459e6c:	stur	x8, [x29, #-80]
  459e70:	str	x9, [sp, #88]
  459e74:	ldur	x8, [x29, #-80]
  459e78:	str	x8, [sp, #80]
  459e7c:	str	x10, [sp, #72]
  459e80:	str	x11, [sp, #40]
  459e84:	str	x12, [sp, #32]
  459e88:	ldur	x8, [x29, #-24]
  459e8c:	cmp	x8, #0x0
  459e90:	cset	w9, ne  // ne = any
  459e94:	mov	w10, #0x1                   	// #1
  459e98:	eor	w9, w9, #0x1
  459e9c:	eor	w9, w9, w10
  459ea0:	eor	w9, w9, w10
  459ea4:	and	w9, w9, #0x1
  459ea8:	mov	w0, w9
  459eac:	sxtw	x8, w0
  459eb0:	cbz	x8, 459ed4 <config_parse_ifalias+0xb4>
  459eb4:	mov	w8, wzr
  459eb8:	mov	w0, w8
  459ebc:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  459ec0:	add	x1, x1, #0xdac
  459ec4:	ldr	x2, [sp, #40]
  459ec8:	mov	w3, #0x1bb                 	// #443
  459ecc:	ldr	x4, [sp, #32]
  459ed0:	bl	40a540 <log_assert_failed_realm@plt>
  459ed4:	ldur	x8, [x29, #-56]
  459ed8:	cmp	x8, #0x0
  459edc:	cset	w9, ne  // ne = any
  459ee0:	mov	w10, #0x1                   	// #1
  459ee4:	eor	w9, w9, #0x1
  459ee8:	eor	w9, w9, w10
  459eec:	eor	w9, w9, w10
  459ef0:	and	w9, w9, #0x1
  459ef4:	mov	w0, w9
  459ef8:	sxtw	x8, w0
  459efc:	cbz	x8, 459f20 <config_parse_ifalias+0x100>
  459f00:	mov	w8, wzr
  459f04:	mov	w0, w8
  459f08:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459f0c:	add	x1, x1, #0x4bc
  459f10:	ldr	x2, [sp, #40]
  459f14:	mov	w3, #0x1bc                 	// #444
  459f18:	ldr	x4, [sp, #32]
  459f1c:	bl	40a540 <log_assert_failed_realm@plt>
  459f20:	ldur	x8, [x29, #-72]
  459f24:	cmp	x8, #0x0
  459f28:	cset	w9, ne  // ne = any
  459f2c:	mov	w10, #0x1                   	// #1
  459f30:	eor	w9, w9, #0x1
  459f34:	eor	w9, w9, w10
  459f38:	eor	w9, w9, w10
  459f3c:	and	w9, w9, #0x1
  459f40:	mov	w0, w9
  459f44:	sxtw	x8, w0
  459f48:	cbz	x8, 459f6c <config_parse_ifalias+0x14c>
  459f4c:	mov	w8, wzr
  459f50:	mov	w0, w8
  459f54:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  459f58:	add	x1, x1, #0x4c3
  459f5c:	ldr	x2, [sp, #40]
  459f60:	mov	w3, #0x1bd                 	// #445
  459f64:	ldr	x4, [sp, #32]
  459f68:	bl	40a540 <log_assert_failed_realm@plt>
  459f6c:	ldur	x8, [x29, #-80]
  459f70:	cmp	x8, #0x0
  459f74:	cset	w9, ne  // ne = any
  459f78:	mov	w10, #0x1                   	// #1
  459f7c:	eor	w9, w9, #0x1
  459f80:	eor	w9, w9, w10
  459f84:	eor	w9, w9, w10
  459f88:	and	w9, w9, #0x1
  459f8c:	mov	w0, w9
  459f90:	sxtw	x8, w0
  459f94:	cbz	x8, 459fb8 <config_parse_ifalias+0x198>
  459f98:	mov	w8, wzr
  459f9c:	mov	w0, w8
  459fa0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  459fa4:	add	x1, x1, #0x13c
  459fa8:	ldr	x2, [sp, #40]
  459fac:	mov	w3, #0x1be                 	// #446
  459fb0:	ldr	x4, [sp, #32]
  459fb4:	bl	40a540 <log_assert_failed_realm@plt>
  459fb8:	ldur	x0, [x29, #-72]
  459fbc:	bl	40a910 <strdup@plt>
  459fc0:	str	x0, [sp, #72]
  459fc4:	ldr	x8, [sp, #72]
  459fc8:	cbnz	x8, 459ff8 <config_parse_ifalias+0x1d8>
  459fcc:	mov	w8, wzr
  459fd0:	mov	w0, w8
  459fd4:	ldr	x1, [sp, #40]
  459fd8:	mov	w2, #0x1c2                 	// #450
  459fdc:	adrp	x3, 470000 <on_inotify.__assert_in_set+0xc540>
  459fe0:	add	x3, x3, #0x10a
  459fe4:	bl	40a5e0 <log_oom_internal@plt>
  459fe8:	stur	w0, [x29, #-4]
  459fec:	mov	w8, #0x1                   	// #1
  459ff0:	str	w8, [sp, #68]
  459ff4:	b	45a10c <config_parse_ifalias+0x2ec>
  459ff8:	ldr	x0, [sp, #72]
  459ffc:	bl	40bf20 <ascii_is_valid@plt>
  45a000:	cbz	x0, 45a014 <config_parse_ifalias+0x1f4>
  45a004:	ldr	x0, [sp, #72]
  45a008:	bl	40a800 <strlen@plt>
  45a00c:	cmp	x0, #0x100
  45a010:	b.cc	45a0b4 <config_parse_ifalias+0x294>  // b.lo, b.ul, b.last
  45a014:	mov	w8, #0x3                   	// #3
  45a018:	str	w8, [sp, #64]
  45a01c:	mov	w8, wzr
  45a020:	str	wzr, [sp, #60]
  45a024:	mov	w0, w8
  45a028:	bl	40a3f0 <log_get_max_level_realm@plt>
  45a02c:	ldr	w8, [sp, #64]
  45a030:	and	w8, w8, #0x7
  45a034:	cmp	w0, w8
  45a038:	b.lt	45a088 <config_parse_ifalias+0x268>  // b.tstop
  45a03c:	ldur	x0, [x29, #-16]
  45a040:	ldr	w1, [sp, #64]
  45a044:	ldur	x2, [x29, #-24]
  45a048:	ldur	w3, [x29, #-28]
  45a04c:	ldr	w4, [sp, #60]
  45a050:	ldur	x8, [x29, #-72]
  45a054:	ldr	x5, [sp, #40]
  45a058:	mov	w6, #0x1c5                 	// #453
  45a05c:	adrp	x7, 470000 <on_inotify.__assert_in_set+0xc540>
  45a060:	add	x7, x7, #0x10a
  45a064:	mov	x9, sp
  45a068:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45a06c:	add	x10, x10, #0x11f
  45a070:	str	x10, [x9]
  45a074:	mov	x9, sp
  45a078:	str	x8, [x9, #8]
  45a07c:	bl	40b8a0 <log_syntax_internal@plt>
  45a080:	str	w0, [sp, #28]
  45a084:	b	45a09c <config_parse_ifalias+0x27c>
  45a088:	ldr	w0, [sp, #60]
  45a08c:	bl	40a410 <abs@plt>
  45a090:	mov	w8, wzr
  45a094:	subs	w8, w8, w0, uxtb
  45a098:	str	w8, [sp, #28]
  45a09c:	ldr	w8, [sp, #28]
  45a0a0:	str	w8, [sp, #56]
  45a0a4:	stur	wzr, [x29, #-4]
  45a0a8:	mov	w8, #0x1                   	// #1
  45a0ac:	str	w8, [sp, #68]
  45a0b0:	b	45a10c <config_parse_ifalias+0x2ec>
  45a0b4:	ldr	x0, [sp, #72]
  45a0b8:	bl	458fd4 <isempty>
  45a0bc:	tbnz	w0, #0, 45a0c4 <config_parse_ifalias+0x2a4>
  45a0c0:	b	45a0dc <config_parse_ifalias+0x2bc>
  45a0c4:	ldr	x8, [sp, #80]
  45a0c8:	ldr	x0, [x8]
  45a0cc:	bl	45a124 <mfree>
  45a0d0:	ldr	x8, [sp, #80]
  45a0d4:	str	x0, [x8]
  45a0d8:	b	45a100 <config_parse_ifalias+0x2e0>
  45a0dc:	ldr	x8, [sp, #80]
  45a0e0:	ldr	x0, [x8]
  45a0e4:	bl	40a530 <free@plt>
  45a0e8:	ldr	x8, [sp, #72]
  45a0ec:	ldr	x9, [sp, #80]
  45a0f0:	str	x8, [x9]
  45a0f4:	mov	x8, xzr
  45a0f8:	str	x8, [sp, #72]
  45a0fc:	str	wzr, [sp, #52]
  45a100:	stur	wzr, [x29, #-4]
  45a104:	mov	w8, #0x1                   	// #1
  45a108:	str	w8, [sp, #68]
  45a10c:	add	x0, sp, #0x48
  45a110:	bl	459454 <freep>
  45a114:	ldur	w0, [x29, #-4]
  45a118:	ldp	x29, x30, [sp, #176]
  45a11c:	add	sp, sp, #0xc0
  45a120:	ret

000000000045a124 <mfree>:
  45a124:	sub	sp, sp, #0x20
  45a128:	stp	x29, x30, [sp, #16]
  45a12c:	add	x29, sp, #0x10
  45a130:	mov	x8, xzr
  45a134:	str	x0, [sp, #8]
  45a138:	ldr	x0, [sp, #8]
  45a13c:	str	x8, [sp]
  45a140:	bl	40a530 <free@plt>
  45a144:	ldr	x0, [sp]
  45a148:	ldp	x29, x30, [sp, #16]
  45a14c:	add	sp, sp, #0x20
  45a150:	ret

000000000045a154 <config_parse_hwaddr>:
  45a154:	sub	sp, sp, #0xc0
  45a158:	stp	x29, x30, [sp, #176]
  45a15c:	add	x29, sp, #0xb0
  45a160:	ldr	x8, [x29, #16]
  45a164:	ldr	x9, [x29, #24]
  45a168:	mov	x10, xzr
  45a16c:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  45a170:	add	x11, x11, #0xb98
  45a174:	add	x11, x11, #0x3
  45a178:	adrp	x12, 470000 <on_inotify.__assert_in_set+0xc540>
  45a17c:	add	x12, x12, #0x16a
  45a180:	stur	x0, [x29, #-16]
  45a184:	stur	x1, [x29, #-24]
  45a188:	stur	w2, [x29, #-28]
  45a18c:	stur	x3, [x29, #-40]
  45a190:	stur	w4, [x29, #-44]
  45a194:	stur	x5, [x29, #-56]
  45a198:	stur	w6, [x29, #-60]
  45a19c:	stur	x7, [x29, #-72]
  45a1a0:	stur	x8, [x29, #-80]
  45a1a4:	str	x9, [sp, #88]
  45a1a8:	str	x10, [sp, #80]
  45a1ac:	ldur	x8, [x29, #-80]
  45a1b0:	str	x8, [sp, #72]
  45a1b4:	str	x11, [sp, #40]
  45a1b8:	str	x12, [sp, #32]
  45a1bc:	ldur	x8, [x29, #-24]
  45a1c0:	cmp	x8, #0x0
  45a1c4:	cset	w9, ne  // ne = any
  45a1c8:	mov	w10, #0x1                   	// #1
  45a1cc:	eor	w9, w9, #0x1
  45a1d0:	eor	w9, w9, w10
  45a1d4:	eor	w9, w9, w10
  45a1d8:	and	w9, w9, #0x1
  45a1dc:	mov	w0, w9
  45a1e0:	sxtw	x8, w0
  45a1e4:	cbz	x8, 45a208 <config_parse_hwaddr+0xb4>
  45a1e8:	mov	w8, wzr
  45a1ec:	mov	w0, w8
  45a1f0:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  45a1f4:	add	x1, x1, #0xdac
  45a1f8:	ldr	x2, [sp, #40]
  45a1fc:	mov	w3, #0x1e0                 	// #480
  45a200:	ldr	x4, [sp, #32]
  45a204:	bl	40a540 <log_assert_failed_realm@plt>
  45a208:	ldur	x8, [x29, #-56]
  45a20c:	cmp	x8, #0x0
  45a210:	cset	w9, ne  // ne = any
  45a214:	mov	w10, #0x1                   	// #1
  45a218:	eor	w9, w9, #0x1
  45a21c:	eor	w9, w9, w10
  45a220:	eor	w9, w9, w10
  45a224:	and	w9, w9, #0x1
  45a228:	mov	w0, w9
  45a22c:	sxtw	x8, w0
  45a230:	cbz	x8, 45a254 <config_parse_hwaddr+0x100>
  45a234:	mov	w8, wzr
  45a238:	mov	w0, w8
  45a23c:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45a240:	add	x1, x1, #0x4bc
  45a244:	ldr	x2, [sp, #40]
  45a248:	mov	w3, #0x1e1                 	// #481
  45a24c:	ldr	x4, [sp, #32]
  45a250:	bl	40a540 <log_assert_failed_realm@plt>
  45a254:	ldur	x8, [x29, #-72]
  45a258:	cmp	x8, #0x0
  45a25c:	cset	w9, ne  // ne = any
  45a260:	mov	w10, #0x1                   	// #1
  45a264:	eor	w9, w9, #0x1
  45a268:	eor	w9, w9, w10
  45a26c:	eor	w9, w9, w10
  45a270:	and	w9, w9, #0x1
  45a274:	mov	w0, w9
  45a278:	sxtw	x8, w0
  45a27c:	cbz	x8, 45a2a0 <config_parse_hwaddr+0x14c>
  45a280:	mov	w8, wzr
  45a284:	mov	w0, w8
  45a288:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45a28c:	add	x1, x1, #0x4c3
  45a290:	ldr	x2, [sp, #40]
  45a294:	mov	w3, #0x1e2                 	// #482
  45a298:	ldr	x4, [sp, #32]
  45a29c:	bl	40a540 <log_assert_failed_realm@plt>
  45a2a0:	ldur	x8, [x29, #-80]
  45a2a4:	cmp	x8, #0x0
  45a2a8:	cset	w9, ne  // ne = any
  45a2ac:	mov	w10, #0x1                   	// #1
  45a2b0:	eor	w9, w9, #0x1
  45a2b4:	eor	w9, w9, w10
  45a2b8:	eor	w9, w9, w10
  45a2bc:	and	w9, w9, #0x1
  45a2c0:	mov	w0, w9
  45a2c4:	sxtw	x8, w0
  45a2c8:	cbz	x8, 45a2ec <config_parse_hwaddr+0x198>
  45a2cc:	mov	w8, wzr
  45a2d0:	mov	w0, w8
  45a2d4:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  45a2d8:	add	x1, x1, #0x13c
  45a2dc:	ldr	x2, [sp, #40]
  45a2e0:	mov	w3, #0x1e3                 	// #483
  45a2e4:	ldr	x4, [sp, #32]
  45a2e8:	bl	40a540 <log_assert_failed_realm@plt>
  45a2ec:	mov	x0, #0x1                   	// #1
  45a2f0:	mov	x1, #0x6                   	// #6
  45a2f4:	bl	40b780 <calloc@plt>
  45a2f8:	str	x0, [sp, #80]
  45a2fc:	ldr	x8, [sp, #80]
  45a300:	cbnz	x8, 45a330 <config_parse_hwaddr+0x1dc>
  45a304:	mov	w8, wzr
  45a308:	mov	w0, w8
  45a30c:	ldr	x1, [sp, #40]
  45a310:	mov	w2, #0x1e7                 	// #487
  45a314:	adrp	x3, 470000 <on_inotify.__assert_in_set+0xc540>
  45a318:	add	x3, x3, #0x1f9
  45a31c:	bl	40a5e0 <log_oom_internal@plt>
  45a320:	stur	w0, [x29, #-4]
  45a324:	mov	w8, #0x1                   	// #1
  45a328:	str	w8, [sp, #64]
  45a32c:	b	45a424 <config_parse_hwaddr+0x2d0>
  45a330:	ldur	x0, [x29, #-72]
  45a334:	ldr	x1, [sp, #80]
  45a338:	bl	40bf30 <ether_addr_from_string@plt>
  45a33c:	str	w0, [sp, #68]
  45a340:	ldr	w8, [sp, #68]
  45a344:	cmp	w8, #0x0
  45a348:	cset	w8, ge  // ge = tcont
  45a34c:	tbnz	w8, #0, 45a3f4 <config_parse_hwaddr+0x2a0>
  45a350:	mov	w8, #0x3                   	// #3
  45a354:	str	w8, [sp, #60]
  45a358:	ldr	w8, [sp, #68]
  45a35c:	str	w8, [sp, #56]
  45a360:	mov	w8, wzr
  45a364:	mov	w0, w8
  45a368:	bl	40a3f0 <log_get_max_level_realm@plt>
  45a36c:	ldr	w8, [sp, #60]
  45a370:	and	w8, w8, #0x7
  45a374:	cmp	w0, w8
  45a378:	b.lt	45a3c8 <config_parse_hwaddr+0x274>  // b.tstop
  45a37c:	ldur	x0, [x29, #-16]
  45a380:	ldr	w1, [sp, #60]
  45a384:	ldur	x2, [x29, #-24]
  45a388:	ldur	w3, [x29, #-28]
  45a38c:	ldr	w4, [sp, #56]
  45a390:	ldur	x8, [x29, #-72]
  45a394:	ldr	x5, [sp, #40]
  45a398:	mov	w6, #0x1eb                 	// #491
  45a39c:	adrp	x7, 470000 <on_inotify.__assert_in_set+0xc540>
  45a3a0:	add	x7, x7, #0x1f9
  45a3a4:	mov	x9, sp
  45a3a8:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45a3ac:	add	x10, x10, #0x20d
  45a3b0:	str	x10, [x9]
  45a3b4:	mov	x9, sp
  45a3b8:	str	x8, [x9, #8]
  45a3bc:	bl	40b8a0 <log_syntax_internal@plt>
  45a3c0:	str	w0, [sp, #28]
  45a3c4:	b	45a3dc <config_parse_hwaddr+0x288>
  45a3c8:	ldr	w0, [sp, #56]
  45a3cc:	bl	40a410 <abs@plt>
  45a3d0:	mov	w8, wzr
  45a3d4:	subs	w8, w8, w0, uxtb
  45a3d8:	str	w8, [sp, #28]
  45a3dc:	ldr	w8, [sp, #28]
  45a3e0:	str	w8, [sp, #52]
  45a3e4:	stur	wzr, [x29, #-4]
  45a3e8:	mov	w8, #0x1                   	// #1
  45a3ec:	str	w8, [sp, #64]
  45a3f0:	b	45a424 <config_parse_hwaddr+0x2d0>
  45a3f4:	ldr	x8, [sp, #72]
  45a3f8:	ldr	x0, [x8]
  45a3fc:	bl	40a530 <free@plt>
  45a400:	ldr	x8, [sp, #80]
  45a404:	ldr	x9, [sp, #72]
  45a408:	str	x8, [x9]
  45a40c:	mov	x8, xzr
  45a410:	str	x8, [sp, #80]
  45a414:	str	wzr, [sp, #48]
  45a418:	stur	wzr, [x29, #-4]
  45a41c:	mov	w10, #0x1                   	// #1
  45a420:	str	w10, [sp, #64]
  45a424:	add	x0, sp, #0x50
  45a428:	bl	459454 <freep>
  45a42c:	ldur	w0, [x29, #-4]
  45a430:	ldp	x29, x30, [sp, #176]
  45a434:	add	sp, sp, #0xc0
  45a438:	ret

000000000045a43c <config_parse_hwaddrs>:
  45a43c:	sub	sp, sp, #0xf0
  45a440:	stp	x29, x30, [sp, #224]
  45a444:	add	x29, sp, #0xe0
  45a448:	ldr	x8, [x29, #16]
  45a44c:	ldr	x9, [x29, #24]
  45a450:	mov	x10, xzr
  45a454:	adrp	x11, 46f000 <on_inotify.__assert_in_set+0xb540>
  45a458:	add	x11, x11, #0xb98
  45a45c:	add	x11, x11, #0x3
  45a460:	adrp	x12, 470000 <on_inotify.__assert_in_set+0xc540>
  45a464:	add	x12, x12, #0x2ce
  45a468:	adrp	x13, 470000 <on_inotify.__assert_in_set+0xc540>
  45a46c:	add	x13, x13, #0x23e
  45a470:	stur	x0, [x29, #-16]
  45a474:	stur	x1, [x29, #-24]
  45a478:	stur	w2, [x29, #-28]
  45a47c:	stur	x3, [x29, #-40]
  45a480:	stur	w4, [x29, #-44]
  45a484:	stur	x5, [x29, #-56]
  45a488:	stur	w6, [x29, #-60]
  45a48c:	stur	x7, [x29, #-72]
  45a490:	stur	x8, [x29, #-80]
  45a494:	stur	x9, [x29, #-88]
  45a498:	stur	x10, [x29, #-96]
  45a49c:	ldur	x8, [x29, #-72]
  45a4a0:	stur	x8, [x29, #-104]
  45a4a4:	ldur	x8, [x29, #-80]
  45a4a8:	str	x8, [sp, #112]
  45a4ac:	str	x11, [sp, #56]
  45a4b0:	str	x12, [sp, #48]
  45a4b4:	str	x13, [sp, #40]
  45a4b8:	ldur	x8, [x29, #-24]
  45a4bc:	cmp	x8, #0x0
  45a4c0:	cset	w9, ne  // ne = any
  45a4c4:	mov	w10, #0x1                   	// #1
  45a4c8:	eor	w9, w9, #0x1
  45a4cc:	eor	w9, w9, w10
  45a4d0:	eor	w9, w9, w10
  45a4d4:	and	w9, w9, #0x1
  45a4d8:	mov	w0, w9
  45a4dc:	sxtw	x8, w0
  45a4e0:	cbz	x8, 45a504 <config_parse_hwaddrs+0xc8>
  45a4e4:	mov	w8, wzr
  45a4e8:	mov	w0, w8
  45a4ec:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  45a4f0:	add	x1, x1, #0xdac
  45a4f4:	ldr	x2, [sp, #56]
  45a4f8:	mov	w3, #0x204                 	// #516
  45a4fc:	ldr	x4, [sp, #40]
  45a500:	bl	40a540 <log_assert_failed_realm@plt>
  45a504:	ldur	x8, [x29, #-56]
  45a508:	cmp	x8, #0x0
  45a50c:	cset	w9, ne  // ne = any
  45a510:	mov	w10, #0x1                   	// #1
  45a514:	eor	w9, w9, #0x1
  45a518:	eor	w9, w9, w10
  45a51c:	eor	w9, w9, w10
  45a520:	and	w9, w9, #0x1
  45a524:	mov	w0, w9
  45a528:	sxtw	x8, w0
  45a52c:	cbz	x8, 45a550 <config_parse_hwaddrs+0x114>
  45a530:	mov	w8, wzr
  45a534:	mov	w0, w8
  45a538:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45a53c:	add	x1, x1, #0x4bc
  45a540:	ldr	x2, [sp, #56]
  45a544:	mov	w3, #0x205                 	// #517
  45a548:	ldr	x4, [sp, #40]
  45a54c:	bl	40a540 <log_assert_failed_realm@plt>
  45a550:	ldur	x8, [x29, #-72]
  45a554:	cmp	x8, #0x0
  45a558:	cset	w9, ne  // ne = any
  45a55c:	mov	w10, #0x1                   	// #1
  45a560:	eor	w9, w9, #0x1
  45a564:	eor	w9, w9, w10
  45a568:	eor	w9, w9, w10
  45a56c:	and	w9, w9, #0x1
  45a570:	mov	w0, w9
  45a574:	sxtw	x8, w0
  45a578:	cbz	x8, 45a59c <config_parse_hwaddrs+0x160>
  45a57c:	mov	w8, wzr
  45a580:	mov	w0, w8
  45a584:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45a588:	add	x1, x1, #0x4c3
  45a58c:	ldr	x2, [sp, #56]
  45a590:	mov	w3, #0x206                 	// #518
  45a594:	ldr	x4, [sp, #40]
  45a598:	bl	40a540 <log_assert_failed_realm@plt>
  45a59c:	ldur	x8, [x29, #-80]
  45a5a0:	cmp	x8, #0x0
  45a5a4:	cset	w9, ne  // ne = any
  45a5a8:	mov	w10, #0x1                   	// #1
  45a5ac:	eor	w9, w9, #0x1
  45a5b0:	eor	w9, w9, w10
  45a5b4:	eor	w9, w9, w10
  45a5b8:	and	w9, w9, #0x1
  45a5bc:	mov	w0, w9
  45a5c0:	sxtw	x8, w0
  45a5c4:	cbz	x8, 45a5e8 <config_parse_hwaddrs+0x1ac>
  45a5c8:	mov	w8, wzr
  45a5cc:	mov	w0, w8
  45a5d0:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  45a5d4:	add	x1, x1, #0x13c
  45a5d8:	ldr	x2, [sp, #56]
  45a5dc:	mov	w3, #0x207                 	// #519
  45a5e0:	ldr	x4, [sp, #40]
  45a5e4:	bl	40a540 <log_assert_failed_realm@plt>
  45a5e8:	ldur	x0, [x29, #-72]
  45a5ec:	bl	458fd4 <isempty>
  45a5f0:	tbnz	w0, #0, 45a5f8 <config_parse_hwaddrs+0x1bc>
  45a5f4:	b	45a61c <config_parse_hwaddrs+0x1e0>
  45a5f8:	ldr	x8, [sp, #112]
  45a5fc:	ldr	x0, [x8]
  45a600:	bl	45aa10 <set_free_free>
  45a604:	ldr	x8, [sp, #112]
  45a608:	str	x0, [x8]
  45a60c:	stur	wzr, [x29, #-4]
  45a610:	mov	w9, #0x1                   	// #1
  45a614:	str	w9, [sp, #104]
  45a618:	b	45a9c4 <config_parse_hwaddrs+0x588>
  45a61c:	adrp	x0, 49f000 <_DYNAMIC+0x1d0>
  45a620:	ldr	x0, [x0, #240]
  45a624:	bl	40bc00 <internal_set_new@plt>
  45a628:	stur	x0, [x29, #-96]
  45a62c:	ldur	x8, [x29, #-96]
  45a630:	cbnz	x8, 45a65c <config_parse_hwaddrs+0x220>
  45a634:	mov	w8, wzr
  45a638:	mov	w0, w8
  45a63c:	ldr	x1, [sp, #56]
  45a640:	mov	w2, #0x211                 	// #529
  45a644:	ldr	x3, [sp, #48]
  45a648:	bl	40a5e0 <log_oom_internal@plt>
  45a64c:	stur	w0, [x29, #-4]
  45a650:	mov	w8, #0x1                   	// #1
  45a654:	str	w8, [sp, #104]
  45a658:	b	45a9c4 <config_parse_hwaddrs+0x588>
  45a65c:	add	x1, sp, #0x60
  45a660:	mov	x8, xzr
  45a664:	str	x8, [sp, #96]
  45a668:	str	x8, [sp, #88]
  45a66c:	sub	x0, x29, #0x68
  45a670:	mov	x2, x8
  45a674:	mov	w9, wzr
  45a678:	mov	w3, w9
  45a67c:	bl	40bee0 <extract_first_word@plt>
  45a680:	str	w0, [sp, #108]
  45a684:	ldr	w9, [sp, #108]
  45a688:	cbnz	w9, 45a698 <config_parse_hwaddrs+0x25c>
  45a68c:	mov	w8, #0xa                   	// #10
  45a690:	str	w8, [sp, #104]
  45a694:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a698:	ldr	w8, [sp, #108]
  45a69c:	mov	w9, #0xfffffff4            	// #-12
  45a6a0:	cmp	w8, w9
  45a6a4:	b.ne	45a6d0 <config_parse_hwaddrs+0x294>  // b.any
  45a6a8:	mov	w8, wzr
  45a6ac:	mov	w0, w8
  45a6b0:	ldr	x1, [sp, #56]
  45a6b4:	mov	w2, #0x21b                 	// #539
  45a6b8:	ldr	x3, [sp, #48]
  45a6bc:	bl	40a5e0 <log_oom_internal@plt>
  45a6c0:	stur	w0, [x29, #-4]
  45a6c4:	mov	w8, #0x1                   	// #1
  45a6c8:	str	w8, [sp, #104]
  45a6cc:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a6d0:	ldr	w8, [sp, #108]
  45a6d4:	cmp	w8, #0x0
  45a6d8:	cset	w8, ge  // ge = tcont
  45a6dc:	tbnz	w8, #0, 45a780 <config_parse_hwaddrs+0x344>
  45a6e0:	mov	w8, #0x4                   	// #4
  45a6e4:	str	w8, [sp, #84]
  45a6e8:	ldr	w8, [sp, #108]
  45a6ec:	str	w8, [sp, #80]
  45a6f0:	mov	w8, wzr
  45a6f4:	mov	w0, w8
  45a6f8:	bl	40a3f0 <log_get_max_level_realm@plt>
  45a6fc:	ldr	w8, [sp, #84]
  45a700:	and	w8, w8, #0x7
  45a704:	cmp	w0, w8
  45a708:	b.lt	45a754 <config_parse_hwaddrs+0x318>  // b.tstop
  45a70c:	ldur	x0, [x29, #-16]
  45a710:	ldr	w1, [sp, #84]
  45a714:	ldur	x2, [x29, #-24]
  45a718:	ldur	w3, [x29, #-28]
  45a71c:	ldr	w4, [sp, #80]
  45a720:	ldur	x8, [x29, #-72]
  45a724:	ldr	x5, [sp, #56]
  45a728:	mov	w6, #0x21d                 	// #541
  45a72c:	ldr	x7, [sp, #48]
  45a730:	mov	x9, sp
  45a734:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  45a738:	add	x10, x10, #0xe5b
  45a73c:	str	x10, [x9]
  45a740:	mov	x9, sp
  45a744:	str	x8, [x9, #8]
  45a748:	bl	40b8a0 <log_syntax_internal@plt>
  45a74c:	str	w0, [sp, #36]
  45a750:	b	45a768 <config_parse_hwaddrs+0x32c>
  45a754:	ldr	w0, [sp, #80]
  45a758:	bl	40a410 <abs@plt>
  45a75c:	mov	w8, wzr
  45a760:	subs	w8, w8, w0, uxtb
  45a764:	str	w8, [sp, #36]
  45a768:	ldr	w8, [sp, #36]
  45a76c:	str	w8, [sp, #76]
  45a770:	stur	wzr, [x29, #-4]
  45a774:	mov	w8, #0x1                   	// #1
  45a778:	str	w8, [sp, #104]
  45a77c:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a780:	mov	x0, #0x6                   	// #6
  45a784:	mov	x1, #0x1                   	// #1
  45a788:	bl	45aa44 <malloc_multiply>
  45a78c:	str	x0, [sp, #88]
  45a790:	ldr	x8, [sp, #88]
  45a794:	cbnz	x8, 45a7c0 <config_parse_hwaddrs+0x384>
  45a798:	mov	w8, wzr
  45a79c:	mov	w0, w8
  45a7a0:	ldr	x1, [sp, #56]
  45a7a4:	mov	w2, #0x223                 	// #547
  45a7a8:	ldr	x3, [sp, #48]
  45a7ac:	bl	40a5e0 <log_oom_internal@plt>
  45a7b0:	stur	w0, [x29, #-4]
  45a7b4:	mov	w8, #0x1                   	// #1
  45a7b8:	str	w8, [sp, #104]
  45a7bc:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a7c0:	ldr	x0, [sp, #96]
  45a7c4:	ldr	x1, [sp, #88]
  45a7c8:	bl	40bf30 <ether_addr_from_string@plt>
  45a7cc:	str	w0, [sp, #108]
  45a7d0:	ldr	w8, [sp, #108]
  45a7d4:	cmp	w8, #0x0
  45a7d8:	cset	w8, ge  // ge = tcont
  45a7dc:	tbnz	w8, #0, 45a878 <config_parse_hwaddrs+0x43c>
  45a7e0:	mov	w8, #0x3                   	// #3
  45a7e4:	str	w8, [sp, #72]
  45a7e8:	mov	w8, wzr
  45a7ec:	str	wzr, [sp, #68]
  45a7f0:	mov	w0, w8
  45a7f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  45a7f8:	ldr	w8, [sp, #72]
  45a7fc:	and	w8, w8, #0x7
  45a800:	cmp	w0, w8
  45a804:	b.lt	45a850 <config_parse_hwaddrs+0x414>  // b.tstop
  45a808:	ldur	x0, [x29, #-16]
  45a80c:	ldr	w1, [sp, #72]
  45a810:	ldur	x2, [x29, #-24]
  45a814:	ldur	w3, [x29, #-28]
  45a818:	ldr	w4, [sp, #68]
  45a81c:	ldr	x8, [sp, #96]
  45a820:	ldr	x5, [sp, #56]
  45a824:	mov	w6, #0x227                 	// #551
  45a828:	ldr	x7, [sp, #48]
  45a82c:	mov	x9, sp
  45a830:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45a834:	add	x10, x10, #0x2e3
  45a838:	str	x10, [x9]
  45a83c:	mov	x9, sp
  45a840:	str	x8, [x9, #8]
  45a844:	bl	40b8a0 <log_syntax_internal@plt>
  45a848:	str	w0, [sp, #32]
  45a84c:	b	45a864 <config_parse_hwaddrs+0x428>
  45a850:	ldr	w0, [sp, #68]
  45a854:	bl	40a410 <abs@plt>
  45a858:	mov	w8, wzr
  45a85c:	subs	w8, w8, w0, uxtb
  45a860:	str	w8, [sp, #32]
  45a864:	ldr	w8, [sp, #32]
  45a868:	str	w8, [sp, #64]
  45a86c:	mov	w8, #0xb                   	// #11
  45a870:	str	w8, [sp, #104]
  45a874:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a878:	ldur	x0, [x29, #-96]
  45a87c:	ldr	x1, [sp, #88]
  45a880:	bl	40bf40 <set_put@plt>
  45a884:	str	w0, [sp, #108]
  45a888:	ldr	w8, [sp, #108]
  45a88c:	cmp	w8, #0x0
  45a890:	cset	w8, ge  // ge = tcont
  45a894:	tbnz	w8, #0, 45a8c0 <config_parse_hwaddrs+0x484>
  45a898:	mov	w8, wzr
  45a89c:	mov	w0, w8
  45a8a0:	ldr	x1, [sp, #56]
  45a8a4:	mov	w2, #0x22d                 	// #557
  45a8a8:	ldr	x3, [sp, #48]
  45a8ac:	bl	40a5e0 <log_oom_internal@plt>
  45a8b0:	stur	w0, [x29, #-4]
  45a8b4:	mov	w8, #0x1                   	// #1
  45a8b8:	str	w8, [sp, #104]
  45a8bc:	b	45a8dc <config_parse_hwaddrs+0x4a0>
  45a8c0:	ldr	w8, [sp, #108]
  45a8c4:	cmp	w8, #0x0
  45a8c8:	cset	w8, le
  45a8cc:	tbnz	w8, #0, 45a8d8 <config_parse_hwaddrs+0x49c>
  45a8d0:	mov	x8, xzr
  45a8d4:	str	x8, [sp, #88]
  45a8d8:	str	wzr, [sp, #104]
  45a8dc:	add	x0, sp, #0x58
  45a8e0:	bl	459454 <freep>
  45a8e4:	add	x0, sp, #0x60
  45a8e8:	bl	459454 <freep>
  45a8ec:	ldr	w8, [sp, #104]
  45a8f0:	str	w8, [sp, #28]
  45a8f4:	cbz	w8, 45a91c <config_parse_hwaddrs+0x4e0>
  45a8f8:	b	45a8fc <config_parse_hwaddrs+0x4c0>
  45a8fc:	ldr	w8, [sp, #28]
  45a900:	cmp	w8, #0xa
  45a904:	b.eq	45a920 <config_parse_hwaddrs+0x4e4>  // b.none
  45a908:	b	45a90c <config_parse_hwaddrs+0x4d0>
  45a90c:	ldr	w8, [sp, #28]
  45a910:	cmp	w8, #0xb
  45a914:	b.eq	45a65c <config_parse_hwaddrs+0x220>  // b.none
  45a918:	b	45a9c4 <config_parse_hwaddrs+0x588>
  45a91c:	b	45a65c <config_parse_hwaddrs+0x220>
  45a920:	ldr	x0, [sp, #112]
  45a924:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  45a928:	ldr	x1, [x1, #240]
  45a92c:	bl	40bf50 <internal_set_ensure_allocated@plt>
  45a930:	str	w0, [sp, #108]
  45a934:	ldr	w8, [sp, #108]
  45a938:	cmp	w8, #0x0
  45a93c:	cset	w8, ge  // ge = tcont
  45a940:	tbnz	w8, #0, 45a96c <config_parse_hwaddrs+0x530>
  45a944:	mov	w8, wzr
  45a948:	mov	w0, w8
  45a94c:	ldr	x1, [sp, #56]
  45a950:	mov	w2, #0x234                 	// #564
  45a954:	ldr	x3, [sp, #48]
  45a958:	bl	40a5e0 <log_oom_internal@plt>
  45a95c:	stur	w0, [x29, #-4]
  45a960:	mov	w8, #0x1                   	// #1
  45a964:	str	w8, [sp, #104]
  45a968:	b	45a9c4 <config_parse_hwaddrs+0x588>
  45a96c:	ldr	x8, [sp, #112]
  45a970:	ldr	x0, [x8]
  45a974:	ldur	x1, [x29, #-96]
  45a978:	bl	45aac0 <set_move>
  45a97c:	str	w0, [sp, #108]
  45a980:	ldr	w9, [sp, #108]
  45a984:	cmp	w9, #0x0
  45a988:	cset	w9, ge  // ge = tcont
  45a98c:	tbnz	w9, #0, 45a9b8 <config_parse_hwaddrs+0x57c>
  45a990:	mov	w8, wzr
  45a994:	mov	w0, w8
  45a998:	ldr	x1, [sp, #56]
  45a99c:	mov	w2, #0x238                 	// #568
  45a9a0:	ldr	x3, [sp, #48]
  45a9a4:	bl	40a5e0 <log_oom_internal@plt>
  45a9a8:	stur	w0, [x29, #-4]
  45a9ac:	mov	w8, #0x1                   	// #1
  45a9b0:	str	w8, [sp, #104]
  45a9b4:	b	45a9c4 <config_parse_hwaddrs+0x588>
  45a9b8:	stur	wzr, [x29, #-4]
  45a9bc:	mov	w8, #0x1                   	// #1
  45a9c0:	str	w8, [sp, #104]
  45a9c4:	sub	x0, x29, #0x60
  45a9c8:	bl	45a9dc <set_free_freep>
  45a9cc:	ldur	w0, [x29, #-4]
  45a9d0:	ldp	x29, x30, [sp, #224]
  45a9d4:	add	sp, sp, #0xf0
  45a9d8:	ret

000000000045a9dc <set_free_freep>:
  45a9dc:	sub	sp, sp, #0x20
  45a9e0:	stp	x29, x30, [sp, #16]
  45a9e4:	add	x29, sp, #0x10
  45a9e8:	str	x0, [sp, #8]
  45a9ec:	ldr	x8, [sp, #8]
  45a9f0:	ldr	x8, [x8]
  45a9f4:	cbz	x8, 45aa04 <set_free_freep+0x28>
  45a9f8:	ldr	x8, [sp, #8]
  45a9fc:	ldr	x0, [x8]
  45aa00:	bl	45aa10 <set_free_free>
  45aa04:	ldp	x29, x30, [sp, #16]
  45aa08:	add	sp, sp, #0x20
  45aa0c:	ret

000000000045aa10 <set_free_free>:
  45aa10:	sub	sp, sp, #0x20
  45aa14:	stp	x29, x30, [sp, #16]
  45aa18:	add	x29, sp, #0x10
  45aa1c:	adrp	x1, 49f000 <_DYNAMIC+0x1d0>
  45aa20:	ldr	x1, [x1, #176]
  45aa24:	mov	x8, xzr
  45aa28:	str	x0, [sp, #8]
  45aa2c:	ldr	x0, [sp, #8]
  45aa30:	mov	x2, x8
  45aa34:	bl	40a7b0 <internal_hashmap_free@plt>
  45aa38:	ldp	x29, x30, [sp, #16]
  45aa3c:	add	sp, sp, #0x20
  45aa40:	ret

000000000045aa44 <malloc_multiply>:
  45aa44:	sub	sp, sp, #0x40
  45aa48:	stp	x29, x30, [sp, #48]
  45aa4c:	add	x29, sp, #0x30
  45aa50:	stur	x0, [x29, #-16]
  45aa54:	str	x1, [sp, #24]
  45aa58:	ldur	x0, [x29, #-16]
  45aa5c:	ldr	x1, [sp, #24]
  45aa60:	bl	4585c4 <size_multiply_overflow>
  45aa64:	tbnz	w0, #0, 45aa6c <malloc_multiply+0x28>
  45aa68:	b	45aa78 <malloc_multiply+0x34>
  45aa6c:	mov	x8, xzr
  45aa70:	stur	x8, [x29, #-8]
  45aa74:	b	45aab0 <malloc_multiply+0x6c>
  45aa78:	ldur	x8, [x29, #-16]
  45aa7c:	ldr	x9, [sp, #24]
  45aa80:	mul	x8, x8, x9
  45aa84:	str	x8, [sp, #16]
  45aa88:	cbz	x8, 45aa98 <malloc_multiply+0x54>
  45aa8c:	ldr	x8, [sp, #16]
  45aa90:	str	x8, [sp, #8]
  45aa94:	b	45aaa0 <malloc_multiply+0x5c>
  45aa98:	mov	x8, #0x1                   	// #1
  45aa9c:	str	x8, [sp, #8]
  45aaa0:	ldr	x8, [sp, #8]
  45aaa4:	mov	x0, x8
  45aaa8:	bl	40a820 <malloc@plt>
  45aaac:	stur	x0, [x29, #-8]
  45aab0:	ldur	x0, [x29, #-8]
  45aab4:	ldp	x29, x30, [sp, #48]
  45aab8:	add	sp, sp, #0x40
  45aabc:	ret

000000000045aac0 <set_move>:
  45aac0:	sub	sp, sp, #0x20
  45aac4:	stp	x29, x30, [sp, #16]
  45aac8:	add	x29, sp, #0x10
  45aacc:	str	x0, [sp, #8]
  45aad0:	str	x1, [sp]
  45aad4:	ldr	x0, [sp, #8]
  45aad8:	ldr	x1, [sp]
  45aadc:	bl	40bf60 <internal_hashmap_move@plt>
  45aae0:	ldp	x29, x30, [sp, #16]
  45aae4:	add	sp, sp, #0x20
  45aae8:	ret

000000000045aaec <config_parse_bridge_port_priority>:
  45aaec:	sub	sp, sp, #0xc0
  45aaf0:	stp	x29, x30, [sp, #176]
  45aaf4:	add	x29, sp, #0xb0
  45aaf8:	ldr	x8, [x29, #16]
  45aafc:	ldr	x9, [x29, #24]
  45ab00:	adrp	x10, 46f000 <on_inotify.__assert_in_set+0xb540>
  45ab04:	add	x10, x10, #0xb98
  45ab08:	add	x10, x10, #0x3
  45ab0c:	adrp	x11, 470000 <on_inotify.__assert_in_set+0xc540>
  45ab10:	add	x11, x11, #0x309
  45ab14:	stur	x0, [x29, #-16]
  45ab18:	stur	x1, [x29, #-24]
  45ab1c:	stur	w2, [x29, #-28]
  45ab20:	stur	x3, [x29, #-40]
  45ab24:	stur	w4, [x29, #-44]
  45ab28:	stur	x5, [x29, #-56]
  45ab2c:	stur	w6, [x29, #-60]
  45ab30:	stur	x7, [x29, #-72]
  45ab34:	stur	x8, [x29, #-80]
  45ab38:	str	x9, [sp, #88]
  45ab3c:	str	x10, [sp, #48]
  45ab40:	str	x11, [sp, #40]
  45ab44:	ldur	x8, [x29, #-24]
  45ab48:	cmp	x8, #0x0
  45ab4c:	cset	w9, ne  // ne = any
  45ab50:	mov	w10, #0x1                   	// #1
  45ab54:	eor	w9, w9, #0x1
  45ab58:	eor	w9, w9, w10
  45ab5c:	eor	w9, w9, w10
  45ab60:	and	w9, w9, #0x1
  45ab64:	mov	w0, w9
  45ab68:	sxtw	x8, w0
  45ab6c:	cbz	x8, 45ab90 <config_parse_bridge_port_priority+0xa4>
  45ab70:	mov	w8, wzr
  45ab74:	mov	w0, w8
  45ab78:	adrp	x1, 46d000 <on_inotify.__assert_in_set+0x9540>
  45ab7c:	add	x1, x1, #0xdac
  45ab80:	ldr	x2, [sp, #48]
  45ab84:	mov	w3, #0x24c                 	// #588
  45ab88:	ldr	x4, [sp, #40]
  45ab8c:	bl	40a540 <log_assert_failed_realm@plt>
  45ab90:	ldur	x8, [x29, #-56]
  45ab94:	cmp	x8, #0x0
  45ab98:	cset	w9, ne  // ne = any
  45ab9c:	mov	w10, #0x1                   	// #1
  45aba0:	eor	w9, w9, #0x1
  45aba4:	eor	w9, w9, w10
  45aba8:	eor	w9, w9, w10
  45abac:	and	w9, w9, #0x1
  45abb0:	mov	w0, w9
  45abb4:	sxtw	x8, w0
  45abb8:	cbz	x8, 45abdc <config_parse_bridge_port_priority+0xf0>
  45abbc:	mov	w8, wzr
  45abc0:	mov	w0, w8
  45abc4:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45abc8:	add	x1, x1, #0x4bc
  45abcc:	ldr	x2, [sp, #48]
  45abd0:	mov	w3, #0x24d                 	// #589
  45abd4:	ldr	x4, [sp, #40]
  45abd8:	bl	40a540 <log_assert_failed_realm@plt>
  45abdc:	ldur	x8, [x29, #-72]
  45abe0:	cmp	x8, #0x0
  45abe4:	cset	w9, ne  // ne = any
  45abe8:	mov	w10, #0x1                   	// #1
  45abec:	eor	w9, w9, #0x1
  45abf0:	eor	w9, w9, w10
  45abf4:	eor	w9, w9, w10
  45abf8:	and	w9, w9, #0x1
  45abfc:	mov	w0, w9
  45ac00:	sxtw	x8, w0
  45ac04:	cbz	x8, 45ac28 <config_parse_bridge_port_priority+0x13c>
  45ac08:	mov	w8, wzr
  45ac0c:	mov	w0, w8
  45ac10:	adrp	x1, 46e000 <on_inotify.__assert_in_set+0xa540>
  45ac14:	add	x1, x1, #0x4c3
  45ac18:	ldr	x2, [sp, #48]
  45ac1c:	mov	w3, #0x24e                 	// #590
  45ac20:	ldr	x4, [sp, #40]
  45ac24:	bl	40a540 <log_assert_failed_realm@plt>
  45ac28:	ldur	x8, [x29, #-80]
  45ac2c:	cmp	x8, #0x0
  45ac30:	cset	w9, ne  // ne = any
  45ac34:	mov	w10, #0x1                   	// #1
  45ac38:	eor	w9, w9, #0x1
  45ac3c:	eor	w9, w9, w10
  45ac40:	eor	w9, w9, w10
  45ac44:	and	w9, w9, #0x1
  45ac48:	mov	w0, w9
  45ac4c:	sxtw	x8, w0
  45ac50:	cbz	x8, 45ac74 <config_parse_bridge_port_priority+0x188>
  45ac54:	mov	w8, wzr
  45ac58:	mov	w0, w8
  45ac5c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  45ac60:	add	x1, x1, #0x13c
  45ac64:	ldr	x2, [sp, #48]
  45ac68:	mov	w3, #0x24f                 	// #591
  45ac6c:	ldr	x4, [sp, #40]
  45ac70:	bl	40a540 <log_assert_failed_realm@plt>
  45ac74:	ldur	x0, [x29, #-72]
  45ac78:	add	x1, sp, #0x56
  45ac7c:	bl	45ae04 <safe_atou16>
  45ac80:	str	w0, [sp, #80]
  45ac84:	ldr	w8, [sp, #80]
  45ac88:	cmp	w8, #0x0
  45ac8c:	cset	w8, ge  // ge = tcont
  45ac90:	tbnz	w8, #0, 45ad30 <config_parse_bridge_port_priority+0x244>
  45ac94:	mov	w8, #0x3                   	// #3
  45ac98:	str	w8, [sp, #76]
  45ac9c:	ldr	w8, [sp, #80]
  45aca0:	str	w8, [sp, #72]
  45aca4:	mov	w8, wzr
  45aca8:	mov	w0, w8
  45acac:	bl	40a3f0 <log_get_max_level_realm@plt>
  45acb0:	ldr	w8, [sp, #76]
  45acb4:	and	w8, w8, #0x7
  45acb8:	cmp	w0, w8
  45acbc:	b.lt	45ad0c <config_parse_bridge_port_priority+0x220>  // b.tstop
  45acc0:	ldur	x0, [x29, #-16]
  45acc4:	ldr	w1, [sp, #76]
  45acc8:	ldur	x2, [x29, #-24]
  45accc:	ldur	w3, [x29, #-28]
  45acd0:	ldr	w4, [sp, #72]
  45acd4:	ldur	x8, [x29, #-72]
  45acd8:	ldr	x5, [sp, #48]
  45acdc:	mov	w6, #0x254                 	// #596
  45ace0:	adrp	x7, 470000 <on_inotify.__assert_in_set+0xc540>
  45ace4:	add	x7, x7, #0x3a6
  45ace8:	mov	x9, sp
  45acec:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45acf0:	add	x10, x10, #0x3c8
  45acf4:	str	x10, [x9]
  45acf8:	mov	x9, sp
  45acfc:	str	x8, [x9, #8]
  45ad00:	bl	40b8a0 <log_syntax_internal@plt>
  45ad04:	str	w0, [sp, #36]
  45ad08:	b	45ad20 <config_parse_bridge_port_priority+0x234>
  45ad0c:	ldr	w0, [sp, #72]
  45ad10:	bl	40a410 <abs@plt>
  45ad14:	mov	w8, wzr
  45ad18:	subs	w8, w8, w0, uxtb
  45ad1c:	str	w8, [sp, #36]
  45ad20:	ldr	w8, [sp, #36]
  45ad24:	str	w8, [sp, #68]
  45ad28:	stur	wzr, [x29, #-4]
  45ad2c:	b	45adf4 <config_parse_bridge_port_priority+0x308>
  45ad30:	ldrh	w8, [sp, #86]
  45ad34:	cmp	w8, #0x3f
  45ad38:	b.le	45ade4 <config_parse_bridge_port_priority+0x2f8>
  45ad3c:	mov	w8, #0x3                   	// #3
  45ad40:	str	w8, [sp, #64]
  45ad44:	ldr	w8, [sp, #80]
  45ad48:	str	w8, [sp, #60]
  45ad4c:	mov	w8, wzr
  45ad50:	mov	w0, w8
  45ad54:	bl	40a3f0 <log_get_max_level_realm@plt>
  45ad58:	ldr	w8, [sp, #64]
  45ad5c:	and	w8, w8, #0x7
  45ad60:	cmp	w0, w8
  45ad64:	b.lt	45adc0 <config_parse_bridge_port_priority+0x2d4>  // b.tstop
  45ad68:	ldur	x0, [x29, #-16]
  45ad6c:	ldr	w1, [sp, #64]
  45ad70:	ldur	x2, [x29, #-24]
  45ad74:	ldur	w3, [x29, #-28]
  45ad78:	ldr	w4, [sp, #60]
  45ad7c:	ldur	x8, [x29, #-72]
  45ad80:	ldr	x5, [sp, #48]
  45ad84:	mov	w6, #0x25a                 	// #602
  45ad88:	adrp	x7, 470000 <on_inotify.__assert_in_set+0xc540>
  45ad8c:	add	x7, x7, #0x3a6
  45ad90:	mov	x9, sp
  45ad94:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45ad98:	add	x10, x10, #0x3fb
  45ad9c:	str	x10, [x9]
  45ada0:	mov	x9, sp
  45ada4:	mov	w11, #0x3f                  	// #63
  45ada8:	str	w11, [x9, #8]
  45adac:	mov	x9, sp
  45adb0:	str	x8, [x9, #16]
  45adb4:	bl	40b8a0 <log_syntax_internal@plt>
  45adb8:	str	w0, [sp, #32]
  45adbc:	b	45add4 <config_parse_bridge_port_priority+0x2e8>
  45adc0:	ldr	w0, [sp, #60]
  45adc4:	bl	40a410 <abs@plt>
  45adc8:	mov	w8, wzr
  45adcc:	subs	w8, w8, w0, uxtb
  45add0:	str	w8, [sp, #32]
  45add4:	ldr	w8, [sp, #32]
  45add8:	str	w8, [sp, #56]
  45addc:	stur	wzr, [x29, #-4]
  45ade0:	b	45adf4 <config_parse_bridge_port_priority+0x308>
  45ade4:	ldrh	w8, [sp, #86]
  45ade8:	ldur	x9, [x29, #-80]
  45adec:	strh	w8, [x9]
  45adf0:	stur	wzr, [x29, #-4]
  45adf4:	ldur	w0, [x29, #-4]
  45adf8:	ldp	x29, x30, [sp, #176]
  45adfc:	add	sp, sp, #0xc0
  45ae00:	ret

000000000045ae04 <safe_atou16>:
  45ae04:	sub	sp, sp, #0x20
  45ae08:	stp	x29, x30, [sp, #16]
  45ae0c:	add	x29, sp, #0x10
  45ae10:	mov	w8, wzr
  45ae14:	str	x0, [sp, #8]
  45ae18:	str	x1, [sp]
  45ae1c:	ldr	x0, [sp, #8]
  45ae20:	ldr	x2, [sp]
  45ae24:	mov	w1, w8
  45ae28:	bl	40b640 <safe_atou16_full@plt>
  45ae2c:	ldp	x29, x30, [sp, #16]
  45ae30:	add	sp, sp, #0x20
  45ae34:	ret

000000000045ae38 <serialize_in_addrs>:
  45ae38:	sub	sp, sp, #0x60
  45ae3c:	stp	x29, x30, [sp, #80]
  45ae40:	add	x29, sp, #0x50
  45ae44:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  45ae48:	add	x8, x8, #0xb98
  45ae4c:	add	x8, x8, #0x3
  45ae50:	stur	x0, [x29, #-8]
  45ae54:	stur	x1, [x29, #-16]
  45ae58:	stur	x2, [x29, #-24]
  45ae5c:	and	w9, w3, #0x1
  45ae60:	sturb	w9, [x29, #-25]
  45ae64:	str	x4, [sp, #40]
  45ae68:	str	x8, [sp]
  45ae6c:	ldur	x8, [x29, #-8]
  45ae70:	cmp	x8, #0x0
  45ae74:	cset	w9, ne  // ne = any
  45ae78:	mov	w10, #0x1                   	// #1
  45ae7c:	eor	w9, w9, #0x1
  45ae80:	eor	w9, w9, w10
  45ae84:	eor	w9, w9, w10
  45ae88:	and	w9, w9, #0x1
  45ae8c:	mov	w0, w9
  45ae90:	sxtw	x8, w0
  45ae94:	cbz	x8, 45aebc <serialize_in_addrs+0x84>
  45ae98:	mov	w8, wzr
  45ae9c:	mov	w0, w8
  45aea0:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45aea4:	add	x1, x1, #0xa9
  45aea8:	ldr	x2, [sp]
  45aeac:	mov	w3, #0x26b                 	// #619
  45aeb0:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45aeb4:	add	x4, x4, #0x438
  45aeb8:	bl	40a540 <log_assert_failed_realm@plt>
  45aebc:	ldur	x8, [x29, #-16]
  45aec0:	cmp	x8, #0x0
  45aec4:	cset	w9, ne  // ne = any
  45aec8:	mov	w10, #0x1                   	// #1
  45aecc:	eor	w9, w9, #0x1
  45aed0:	eor	w9, w9, w10
  45aed4:	eor	w9, w9, w10
  45aed8:	and	w9, w9, #0x1
  45aedc:	mov	w0, w9
  45aee0:	sxtw	x8, w0
  45aee4:	cbz	x8, 45af0c <serialize_in_addrs+0xd4>
  45aee8:	mov	w8, wzr
  45aeec:	mov	w0, w8
  45aef0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45aef4:	add	x1, x1, #0x4a4
  45aef8:	ldr	x2, [sp]
  45aefc:	mov	w3, #0x26c                 	// #620
  45af00:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45af04:	add	x4, x4, #0x438
  45af08:	bl	40a540 <log_assert_failed_realm@plt>
  45af0c:	str	xzr, [sp, #32]
  45af10:	str	xzr, [sp, #24]
  45af14:	ldr	x8, [sp, #24]
  45af18:	ldur	x9, [x29, #-24]
  45af1c:	cmp	x8, x9
  45af20:	b.cs	45afbc <serialize_in_addrs+0x184>  // b.hs, b.nlast
  45af24:	ldr	x8, [sp, #40]
  45af28:	cbz	x8, 45af50 <serialize_in_addrs+0x118>
  45af2c:	ldr	x8, [sp, #40]
  45af30:	ldur	x9, [x29, #-16]
  45af34:	ldr	x10, [sp, #24]
  45af38:	mov	x11, #0x4                   	// #4
  45af3c:	mul	x10, x11, x10
  45af40:	add	x0, x9, x10
  45af44:	blr	x8
  45af48:	tbnz	w0, #0, 45af50 <serialize_in_addrs+0x118>
  45af4c:	b	45afac <serialize_in_addrs+0x174>
  45af50:	ldurb	w8, [x29, #-25]
  45af54:	tbnz	w8, #0, 45af5c <serialize_in_addrs+0x124>
  45af58:	b	45af6c <serialize_in_addrs+0x134>
  45af5c:	ldur	x1, [x29, #-8]
  45af60:	mov	w0, #0x20                  	// #32
  45af64:	bl	40bf70 <fputc@plt>
  45af68:	b	45af74 <serialize_in_addrs+0x13c>
  45af6c:	mov	w8, #0x1                   	// #1
  45af70:	sturb	w8, [x29, #-25]
  45af74:	ldur	x8, [x29, #-16]
  45af78:	ldr	x9, [sp, #24]
  45af7c:	mov	x10, #0x4                   	// #4
  45af80:	mul	x9, x10, x9
  45af84:	add	x1, x8, x9
  45af88:	mov	w0, #0x2                   	// #2
  45af8c:	add	x2, sp, #0x8
  45af90:	mov	w3, #0x10                  	// #16
  45af94:	bl	40bf80 <inet_ntop@plt>
  45af98:	ldur	x1, [x29, #-8]
  45af9c:	bl	40bf90 <fputs@plt>
  45afa0:	ldr	x8, [sp, #32]
  45afa4:	add	x8, x8, #0x1
  45afa8:	str	x8, [sp, #32]
  45afac:	ldr	x8, [sp, #24]
  45afb0:	add	x8, x8, #0x1
  45afb4:	str	x8, [sp, #24]
  45afb8:	b	45af14 <serialize_in_addrs+0xdc>
  45afbc:	ldr	x0, [sp, #32]
  45afc0:	ldp	x29, x30, [sp, #80]
  45afc4:	add	sp, sp, #0x60
  45afc8:	ret

000000000045afcc <deserialize_in_addrs>:
  45afcc:	sub	sp, sp, #0x80
  45afd0:	stp	x29, x30, [sp, #112]
  45afd4:	add	x29, sp, #0x70
  45afd8:	mov	x8, xzr
  45afdc:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45afe0:	add	x9, x9, #0xb98
  45afe4:	add	x9, x9, #0x3
  45afe8:	stur	x0, [x29, #-16]
  45afec:	stur	x1, [x29, #-24]
  45aff0:	stur	x8, [x29, #-32]
  45aff4:	stur	wzr, [x29, #-36]
  45aff8:	str	x9, [sp, #24]
  45affc:	ldur	x8, [x29, #-16]
  45b000:	cmp	x8, #0x0
  45b004:	cset	w9, ne  // ne = any
  45b008:	mov	w10, #0x1                   	// #1
  45b00c:	eor	w9, w9, #0x1
  45b010:	eor	w9, w9, w10
  45b014:	eor	w9, w9, w10
  45b018:	and	w9, w9, #0x1
  45b01c:	mov	w0, w9
  45b020:	sxtw	x8, w0
  45b024:	cbz	x8, 45b04c <deserialize_in_addrs+0x80>
  45b028:	mov	w8, wzr
  45b02c:	mov	w0, w8
  45b030:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45b034:	add	x1, x1, #0x2ff
  45b038:	ldr	x2, [sp, #24]
  45b03c:	mov	w3, #0x284                 	// #644
  45b040:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45b044:	add	x4, x4, #0x4ae
  45b048:	bl	40a540 <log_assert_failed_realm@plt>
  45b04c:	ldur	x8, [x29, #-24]
  45b050:	cmp	x8, #0x0
  45b054:	cset	w9, ne  // ne = any
  45b058:	mov	w10, #0x1                   	// #1
  45b05c:	eor	w9, w9, #0x1
  45b060:	eor	w9, w9, w10
  45b064:	eor	w9, w9, w10
  45b068:	and	w9, w9, #0x1
  45b06c:	mov	w0, w9
  45b070:	sxtw	x8, w0
  45b074:	cbz	x8, 45b09c <deserialize_in_addrs+0xd0>
  45b078:	mov	w8, wzr
  45b07c:	mov	w0, w8
  45b080:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b084:	add	x1, x1, #0x4e8
  45b088:	ldr	x2, [sp, #24]
  45b08c:	mov	w3, #0x285                 	// #645
  45b090:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45b094:	add	x4, x4, #0x4ae
  45b098:	bl	40a540 <log_assert_failed_realm@plt>
  45b09c:	sub	x1, x29, #0x30
  45b0a0:	mov	x8, xzr
  45b0a4:	stur	x8, [x29, #-48]
  45b0a8:	sub	x0, x29, #0x18
  45b0ac:	mov	x2, x8
  45b0b0:	mov	w9, wzr
  45b0b4:	mov	w3, w9
  45b0b8:	bl	40bee0 <extract_first_word@plt>
  45b0bc:	str	w0, [sp, #52]
  45b0c0:	ldr	w9, [sp, #52]
  45b0c4:	cmp	w9, #0x0
  45b0c8:	cset	w9, ge  // ge = tcont
  45b0cc:	tbnz	w9, #0, 45b0e4 <deserialize_in_addrs+0x118>
  45b0d0:	ldr	w8, [sp, #52]
  45b0d4:	stur	w8, [x29, #-4]
  45b0d8:	mov	w8, #0x1                   	// #1
  45b0dc:	str	w8, [sp, #48]
  45b0e0:	b	45b18c <deserialize_in_addrs+0x1c0>
  45b0e4:	ldr	w8, [sp, #52]
  45b0e8:	cbnz	w8, 45b0f8 <deserialize_in_addrs+0x12c>
  45b0ec:	mov	w8, #0x6                   	// #6
  45b0f0:	str	w8, [sp, #48]
  45b0f4:	b	45b18c <deserialize_in_addrs+0x1c0>
  45b0f8:	ldur	x0, [x29, #-32]
  45b0fc:	ldur	w8, [x29, #-36]
  45b100:	add	w8, w8, #0x1
  45b104:	mov	w1, w8
  45b108:	sxtw	x1, w1
  45b10c:	mov	x2, #0x4                   	// #4
  45b110:	bl	40bd70 <reallocarray@plt>
  45b114:	str	x0, [sp, #56]
  45b118:	ldr	x9, [sp, #56]
  45b11c:	cbnz	x9, 45b134 <deserialize_in_addrs+0x168>
  45b120:	mov	w8, #0xfffffff4            	// #-12
  45b124:	stur	w8, [x29, #-4]
  45b128:	mov	w8, #0x1                   	// #1
  45b12c:	str	w8, [sp, #48]
  45b130:	b	45b18c <deserialize_in_addrs+0x1c0>
  45b134:	ldr	x8, [sp, #56]
  45b138:	stur	x8, [x29, #-32]
  45b13c:	ldur	x1, [x29, #-48]
  45b140:	ldur	x8, [x29, #-32]
  45b144:	ldursw	x9, [x29, #-36]
  45b148:	mov	x10, #0x4                   	// #4
  45b14c:	mul	x9, x10, x9
  45b150:	add	x2, x8, x9
  45b154:	mov	w0, #0x2                   	// #2
  45b158:	bl	40bfa0 <inet_pton@plt>
  45b15c:	str	w0, [sp, #52]
  45b160:	ldr	w11, [sp, #52]
  45b164:	cmp	w11, #0x0
  45b168:	cset	w11, gt
  45b16c:	tbnz	w11, #0, 45b17c <deserialize_in_addrs+0x1b0>
  45b170:	mov	w8, #0x7                   	// #7
  45b174:	str	w8, [sp, #48]
  45b178:	b	45b18c <deserialize_in_addrs+0x1c0>
  45b17c:	ldur	w8, [x29, #-36]
  45b180:	add	w8, w8, #0x1
  45b184:	stur	w8, [x29, #-36]
  45b188:	str	wzr, [sp, #48]
  45b18c:	sub	x0, x29, #0x30
  45b190:	bl	459454 <freep>
  45b194:	ldr	w8, [sp, #48]
  45b198:	str	w8, [sp, #20]
  45b19c:	cbz	w8, 45b1c4 <deserialize_in_addrs+0x1f8>
  45b1a0:	b	45b1a4 <deserialize_in_addrs+0x1d8>
  45b1a4:	ldr	w8, [sp, #20]
  45b1a8:	cmp	w8, #0x6
  45b1ac:	b.eq	45b1c8 <deserialize_in_addrs+0x1fc>  // b.none
  45b1b0:	b	45b1b4 <deserialize_in_addrs+0x1e8>
  45b1b4:	ldr	w8, [sp, #20]
  45b1b8:	cmp	w8, #0x7
  45b1bc:	b.eq	45b09c <deserialize_in_addrs+0xd0>  // b.none
  45b1c0:	b	45b220 <deserialize_in_addrs+0x254>
  45b1c4:	b	45b09c <deserialize_in_addrs+0xd0>
  45b1c8:	ldur	w8, [x29, #-36]
  45b1cc:	cmp	w8, #0x0
  45b1d0:	cset	w8, le
  45b1d4:	tbnz	w8, #0, 45b1fc <deserialize_in_addrs+0x230>
  45b1d8:	ldur	x8, [x29, #-32]
  45b1dc:	str	x8, [sp, #40]
  45b1e0:	mov	x8, xzr
  45b1e4:	stur	x8, [x29, #-32]
  45b1e8:	ldr	x8, [sp, #40]
  45b1ec:	str	x8, [sp, #32]
  45b1f0:	ldr	x8, [sp, #32]
  45b1f4:	str	x8, [sp, #8]
  45b1f8:	b	45b204 <deserialize_in_addrs+0x238>
  45b1fc:	mov	x8, xzr
  45b200:	str	x8, [sp, #8]
  45b204:	ldr	x8, [sp, #8]
  45b208:	ldur	x9, [x29, #-16]
  45b20c:	str	x8, [x9]
  45b210:	ldur	w10, [x29, #-36]
  45b214:	stur	w10, [x29, #-4]
  45b218:	mov	w10, #0x1                   	// #1
  45b21c:	str	w10, [sp, #48]
  45b220:	sub	x0, x29, #0x20
  45b224:	bl	459454 <freep>
  45b228:	ldur	w0, [x29, #-4]
  45b22c:	ldp	x29, x30, [sp, #112]
  45b230:	add	sp, sp, #0x80
  45b234:	ret

000000000045b238 <serialize_in6_addrs>:
  45b238:	sub	sp, sp, #0x70
  45b23c:	stp	x29, x30, [sp, #96]
  45b240:	add	x29, sp, #0x60
  45b244:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  45b248:	add	x8, x8, #0xb98
  45b24c:	add	x8, x8, #0x3
  45b250:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45b254:	add	x9, x9, #0x4ef
  45b258:	stur	x0, [x29, #-8]
  45b25c:	stur	x1, [x29, #-16]
  45b260:	stur	x2, [x29, #-24]
  45b264:	str	x8, [sp, #8]
  45b268:	str	x9, [sp]
  45b26c:	ldur	x8, [x29, #-8]
  45b270:	cmp	x8, #0x0
  45b274:	cset	w9, ne  // ne = any
  45b278:	mov	w10, #0x1                   	// #1
  45b27c:	eor	w9, w9, #0x1
  45b280:	eor	w9, w9, w10
  45b284:	eor	w9, w9, w10
  45b288:	and	w9, w9, #0x1
  45b28c:	mov	w0, w9
  45b290:	sxtw	x8, w0
  45b294:	cbz	x8, 45b2b8 <serialize_in6_addrs+0x80>
  45b298:	mov	w8, wzr
  45b29c:	mov	w0, w8
  45b2a0:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45b2a4:	add	x1, x1, #0xa9
  45b2a8:	ldr	x2, [sp, #8]
  45b2ac:	mov	w3, #0x2a7                 	// #679
  45b2b0:	ldr	x4, [sp]
  45b2b4:	bl	40a540 <log_assert_failed_realm@plt>
  45b2b8:	ldur	x8, [x29, #-16]
  45b2bc:	cmp	x8, #0x0
  45b2c0:	cset	w9, ne  // ne = any
  45b2c4:	mov	w10, #0x1                   	// #1
  45b2c8:	eor	w9, w9, #0x1
  45b2cc:	eor	w9, w9, w10
  45b2d0:	eor	w9, w9, w10
  45b2d4:	and	w9, w9, #0x1
  45b2d8:	mov	w0, w9
  45b2dc:	sxtw	x8, w0
  45b2e0:	cbz	x8, 45b304 <serialize_in6_addrs+0xcc>
  45b2e4:	mov	w8, wzr
  45b2e8:	mov	w0, w8
  45b2ec:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b2f0:	add	x1, x1, #0x4a4
  45b2f4:	ldr	x2, [sp, #8]
  45b2f8:	mov	w3, #0x2a8                 	// #680
  45b2fc:	ldr	x4, [sp]
  45b300:	bl	40a540 <log_assert_failed_realm@plt>
  45b304:	ldur	x8, [x29, #-24]
  45b308:	cmp	x8, #0x0
  45b30c:	cset	w9, ne  // ne = any
  45b310:	mov	w10, #0x1                   	// #1
  45b314:	eor	w9, w9, #0x1
  45b318:	eor	w9, w9, w10
  45b31c:	eor	w9, w9, w10
  45b320:	and	w9, w9, #0x1
  45b324:	mov	w0, w9
  45b328:	sxtw	x8, w0
  45b32c:	cbz	x8, 45b350 <serialize_in6_addrs+0x118>
  45b330:	mov	w8, wzr
  45b334:	mov	w0, w8
  45b338:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b33c:	add	x1, x1, #0x531
  45b340:	ldr	x2, [sp, #8]
  45b344:	mov	w3, #0x2a9                 	// #681
  45b348:	ldr	x4, [sp]
  45b34c:	bl	40a540 <log_assert_failed_realm@plt>
  45b350:	stur	wzr, [x29, #-28]
  45b354:	ldur	w8, [x29, #-28]
  45b358:	mov	w9, w8
  45b35c:	ldur	x10, [x29, #-24]
  45b360:	cmp	x9, x10
  45b364:	b.cs	45b3cc <serialize_in6_addrs+0x194>  // b.hs, b.nlast
  45b368:	ldur	x8, [x29, #-16]
  45b36c:	ldur	w9, [x29, #-28]
  45b370:	mov	w10, w9
  45b374:	mov	x11, #0x10                  	// #16
  45b378:	mul	x10, x11, x10
  45b37c:	add	x1, x8, x10
  45b380:	mov	w0, #0xa                   	// #10
  45b384:	add	x2, sp, #0x16
  45b388:	mov	w3, #0x2e                  	// #46
  45b38c:	bl	40bf80 <inet_ntop@plt>
  45b390:	ldur	x1, [x29, #-8]
  45b394:	bl	40bf90 <fputs@plt>
  45b398:	ldur	w9, [x29, #-28]
  45b39c:	mov	w8, w9
  45b3a0:	ldur	x10, [x29, #-24]
  45b3a4:	subs	x10, x10, #0x1
  45b3a8:	cmp	x8, x10
  45b3ac:	b.cs	45b3bc <serialize_in6_addrs+0x184>  // b.hs, b.nlast
  45b3b0:	ldur	x1, [x29, #-8]
  45b3b4:	mov	w0, #0x20                  	// #32
  45b3b8:	bl	40bf70 <fputc@plt>
  45b3bc:	ldur	w8, [x29, #-28]
  45b3c0:	add	w8, w8, #0x1
  45b3c4:	stur	w8, [x29, #-28]
  45b3c8:	b	45b354 <serialize_in6_addrs+0x11c>
  45b3cc:	ldp	x29, x30, [sp, #96]
  45b3d0:	add	sp, sp, #0x70
  45b3d4:	ret

000000000045b3d8 <deserialize_in6_addrs>:
  45b3d8:	sub	sp, sp, #0x70
  45b3dc:	stp	x29, x30, [sp, #96]
  45b3e0:	add	x29, sp, #0x60
  45b3e4:	mov	x8, xzr
  45b3e8:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45b3ec:	add	x9, x9, #0xb98
  45b3f0:	add	x9, x9, #0x3
  45b3f4:	stur	x0, [x29, #-16]
  45b3f8:	stur	x1, [x29, #-24]
  45b3fc:	stur	x8, [x29, #-32]
  45b400:	stur	wzr, [x29, #-36]
  45b404:	str	x9, [sp, #8]
  45b408:	ldur	x8, [x29, #-16]
  45b40c:	cmp	x8, #0x0
  45b410:	cset	w9, ne  // ne = any
  45b414:	mov	w10, #0x1                   	// #1
  45b418:	eor	w9, w9, #0x1
  45b41c:	eor	w9, w9, w10
  45b420:	eor	w9, w9, w10
  45b424:	and	w9, w9, #0x1
  45b428:	mov	w0, w9
  45b42c:	sxtw	x8, w0
  45b430:	cbz	x8, 45b458 <deserialize_in6_addrs+0x80>
  45b434:	mov	w8, wzr
  45b438:	mov	w0, w8
  45b43c:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45b440:	add	x1, x1, #0x2ff
  45b444:	ldr	x2, [sp, #8]
  45b448:	mov	w3, #0x2b9                 	// #697
  45b44c:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45b450:	add	x4, x4, #0x536
  45b454:	bl	40a540 <log_assert_failed_realm@plt>
  45b458:	ldur	x8, [x29, #-24]
  45b45c:	cmp	x8, #0x0
  45b460:	cset	w9, ne  // ne = any
  45b464:	mov	w10, #0x1                   	// #1
  45b468:	eor	w9, w9, #0x1
  45b46c:	eor	w9, w9, w10
  45b470:	eor	w9, w9, w10
  45b474:	and	w9, w9, #0x1
  45b478:	mov	w0, w9
  45b47c:	sxtw	x8, w0
  45b480:	cbz	x8, 45b4a8 <deserialize_in6_addrs+0xd0>
  45b484:	mov	w8, wzr
  45b488:	mov	w0, w8
  45b48c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b490:	add	x1, x1, #0x4e8
  45b494:	ldr	x2, [sp, #8]
  45b498:	mov	w3, #0x2ba                 	// #698
  45b49c:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45b4a0:	add	x4, x4, #0x536
  45b4a4:	bl	40a540 <log_assert_failed_realm@plt>
  45b4a8:	add	x1, sp, #0x30
  45b4ac:	mov	x8, xzr
  45b4b0:	str	x8, [sp, #48]
  45b4b4:	sub	x0, x29, #0x18
  45b4b8:	mov	x2, x8
  45b4bc:	mov	w9, wzr
  45b4c0:	mov	w3, w9
  45b4c4:	bl	40bee0 <extract_first_word@plt>
  45b4c8:	str	w0, [sp, #36]
  45b4cc:	ldr	w9, [sp, #36]
  45b4d0:	cmp	w9, #0x0
  45b4d4:	cset	w9, ge  // ge = tcont
  45b4d8:	tbnz	w9, #0, 45b4f0 <deserialize_in6_addrs+0x118>
  45b4dc:	ldr	w8, [sp, #36]
  45b4e0:	stur	w8, [x29, #-4]
  45b4e4:	mov	w8, #0x1                   	// #1
  45b4e8:	str	w8, [sp, #32]
  45b4ec:	b	45b598 <deserialize_in6_addrs+0x1c0>
  45b4f0:	ldr	w8, [sp, #36]
  45b4f4:	cbnz	w8, 45b504 <deserialize_in6_addrs+0x12c>
  45b4f8:	mov	w8, #0x6                   	// #6
  45b4fc:	str	w8, [sp, #32]
  45b500:	b	45b598 <deserialize_in6_addrs+0x1c0>
  45b504:	ldur	x0, [x29, #-32]
  45b508:	ldur	w8, [x29, #-36]
  45b50c:	add	w8, w8, #0x1
  45b510:	mov	w1, w8
  45b514:	sxtw	x1, w1
  45b518:	mov	x2, #0x10                  	// #16
  45b51c:	bl	40bd70 <reallocarray@plt>
  45b520:	str	x0, [sp, #40]
  45b524:	ldr	x9, [sp, #40]
  45b528:	cbnz	x9, 45b540 <deserialize_in6_addrs+0x168>
  45b52c:	mov	w8, #0xfffffff4            	// #-12
  45b530:	stur	w8, [x29, #-4]
  45b534:	mov	w8, #0x1                   	// #1
  45b538:	str	w8, [sp, #32]
  45b53c:	b	45b598 <deserialize_in6_addrs+0x1c0>
  45b540:	ldr	x8, [sp, #40]
  45b544:	stur	x8, [x29, #-32]
  45b548:	ldr	x1, [sp, #48]
  45b54c:	ldur	x8, [x29, #-32]
  45b550:	ldursw	x9, [x29, #-36]
  45b554:	mov	x10, #0x10                  	// #16
  45b558:	mul	x9, x10, x9
  45b55c:	add	x2, x8, x9
  45b560:	mov	w0, #0xa                   	// #10
  45b564:	bl	40bfa0 <inet_pton@plt>
  45b568:	str	w0, [sp, #36]
  45b56c:	ldr	w11, [sp, #36]
  45b570:	cmp	w11, #0x0
  45b574:	cset	w11, gt
  45b578:	tbnz	w11, #0, 45b588 <deserialize_in6_addrs+0x1b0>
  45b57c:	mov	w8, #0x7                   	// #7
  45b580:	str	w8, [sp, #32]
  45b584:	b	45b598 <deserialize_in6_addrs+0x1c0>
  45b588:	ldur	w8, [x29, #-36]
  45b58c:	add	w8, w8, #0x1
  45b590:	stur	w8, [x29, #-36]
  45b594:	str	wzr, [sp, #32]
  45b598:	add	x0, sp, #0x30
  45b59c:	bl	459454 <freep>
  45b5a0:	ldr	w8, [sp, #32]
  45b5a4:	str	w8, [sp, #4]
  45b5a8:	cbz	w8, 45b5d0 <deserialize_in6_addrs+0x1f8>
  45b5ac:	b	45b5b0 <deserialize_in6_addrs+0x1d8>
  45b5b0:	ldr	w8, [sp, #4]
  45b5b4:	cmp	w8, #0x6
  45b5b8:	b.eq	45b5d4 <deserialize_in6_addrs+0x1fc>  // b.none
  45b5bc:	b	45b5c0 <deserialize_in6_addrs+0x1e8>
  45b5c0:	ldr	w8, [sp, #4]
  45b5c4:	cmp	w8, #0x7
  45b5c8:	b.eq	45b4a8 <deserialize_in6_addrs+0xd0>  // b.none
  45b5cc:	b	45b608 <deserialize_in6_addrs+0x230>
  45b5d0:	b	45b4a8 <deserialize_in6_addrs+0xd0>
  45b5d4:	ldur	x8, [x29, #-32]
  45b5d8:	str	x8, [sp, #24]
  45b5dc:	mov	x8, xzr
  45b5e0:	stur	x8, [x29, #-32]
  45b5e4:	ldr	x8, [sp, #24]
  45b5e8:	str	x8, [sp, #16]
  45b5ec:	ldr	x8, [sp, #16]
  45b5f0:	ldur	x9, [x29, #-16]
  45b5f4:	str	x8, [x9]
  45b5f8:	ldur	w10, [x29, #-36]
  45b5fc:	stur	w10, [x29, #-4]
  45b600:	mov	w10, #0x1                   	// #1
  45b604:	str	w10, [sp, #32]
  45b608:	sub	x0, x29, #0x20
  45b60c:	bl	459454 <freep>
  45b610:	ldur	w0, [x29, #-4]
  45b614:	ldp	x29, x30, [sp, #96]
  45b618:	add	sp, sp, #0x70
  45b61c:	ret

000000000045b620 <serialize_dhcp_routes>:
  45b620:	sub	sp, sp, #0xa0
  45b624:	stp	x29, x30, [sp, #144]
  45b628:	add	x29, sp, #0x90
  45b62c:	adrp	x8, 46f000 <on_inotify.__assert_in_set+0xb540>
  45b630:	add	x8, x8, #0xb98
  45b634:	add	x8, x8, #0x3
  45b638:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45b63c:	add	x9, x9, #0x572
  45b640:	stur	x0, [x29, #-8]
  45b644:	stur	x1, [x29, #-16]
  45b648:	stur	x2, [x29, #-24]
  45b64c:	stur	x3, [x29, #-32]
  45b650:	str	x8, [sp, #72]
  45b654:	str	x9, [sp, #64]
  45b658:	ldur	x8, [x29, #-8]
  45b65c:	cmp	x8, #0x0
  45b660:	cset	w9, ne  // ne = any
  45b664:	mov	w10, #0x1                   	// #1
  45b668:	eor	w9, w9, #0x1
  45b66c:	eor	w9, w9, w10
  45b670:	eor	w9, w9, w10
  45b674:	and	w9, w9, #0x1
  45b678:	mov	w0, w9
  45b67c:	sxtw	x8, w0
  45b680:	cbz	x8, 45b6a4 <serialize_dhcp_routes+0x84>
  45b684:	mov	w8, wzr
  45b688:	mov	w0, w8
  45b68c:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45b690:	add	x1, x1, #0xa9
  45b694:	ldr	x2, [sp, #72]
  45b698:	mov	w3, #0x2dc                 	// #732
  45b69c:	ldr	x4, [sp, #64]
  45b6a0:	bl	40a540 <log_assert_failed_realm@plt>
  45b6a4:	ldur	x8, [x29, #-16]
  45b6a8:	cmp	x8, #0x0
  45b6ac:	cset	w9, ne  // ne = any
  45b6b0:	mov	w10, #0x1                   	// #1
  45b6b4:	eor	w9, w9, #0x1
  45b6b8:	eor	w9, w9, w10
  45b6bc:	eor	w9, w9, w10
  45b6c0:	and	w9, w9, #0x1
  45b6c4:	mov	w0, w9
  45b6c8:	sxtw	x8, w0
  45b6cc:	cbz	x8, 45b6f0 <serialize_dhcp_routes+0xd0>
  45b6d0:	mov	w8, wzr
  45b6d4:	mov	w0, w8
  45b6d8:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45b6dc:	add	x1, x1, #0x151
  45b6e0:	ldr	x2, [sp, #72]
  45b6e4:	mov	w3, #0x2dd                 	// #733
  45b6e8:	ldr	x4, [sp, #64]
  45b6ec:	bl	40a540 <log_assert_failed_realm@plt>
  45b6f0:	ldur	x8, [x29, #-24]
  45b6f4:	cmp	x8, #0x0
  45b6f8:	cset	w9, ne  // ne = any
  45b6fc:	mov	w10, #0x1                   	// #1
  45b700:	eor	w9, w9, #0x1
  45b704:	eor	w9, w9, w10
  45b708:	eor	w9, w9, w10
  45b70c:	and	w9, w9, #0x1
  45b710:	mov	w0, w9
  45b714:	sxtw	x8, w0
  45b718:	cbz	x8, 45b73c <serialize_dhcp_routes+0x11c>
  45b71c:	mov	w8, wzr
  45b720:	mov	w0, w8
  45b724:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b728:	add	x1, x1, #0x5bd
  45b72c:	ldr	x2, [sp, #72]
  45b730:	mov	w3, #0x2de                 	// #734
  45b734:	ldr	x4, [sp, #64]
  45b738:	bl	40a540 <log_assert_failed_realm@plt>
  45b73c:	ldur	x8, [x29, #-32]
  45b740:	cmp	x8, #0x0
  45b744:	cset	w9, ne  // ne = any
  45b748:	mov	w10, #0x1                   	// #1
  45b74c:	eor	w9, w9, #0x1
  45b750:	eor	w9, w9, w10
  45b754:	eor	w9, w9, w10
  45b758:	and	w9, w9, #0x1
  45b75c:	mov	w0, w9
  45b760:	sxtw	x8, w0
  45b764:	cbz	x8, 45b788 <serialize_dhcp_routes+0x168>
  45b768:	mov	w8, wzr
  45b76c:	mov	w0, w8
  45b770:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b774:	add	x1, x1, #0x531
  45b778:	ldr	x2, [sp, #72]
  45b77c:	mov	w3, #0x2df                 	// #735
  45b780:	ldr	x4, [sp, #64]
  45b784:	bl	40a540 <log_assert_failed_realm@plt>
  45b788:	ldur	x0, [x29, #-8]
  45b78c:	ldur	x2, [x29, #-16]
  45b790:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b794:	add	x1, x1, #0x5c4
  45b798:	bl	40b5b0 <fprintf@plt>
  45b79c:	stur	wzr, [x29, #-36]
  45b7a0:	ldur	w8, [x29, #-36]
  45b7a4:	mov	w9, w8
  45b7a8:	ldur	x10, [x29, #-32]
  45b7ac:	cmp	x9, x10
  45b7b0:	b.cs	45b9c0 <serialize_dhcp_routes+0x3a0>  // b.hs, b.nlast
  45b7b4:	ldur	x8, [x29, #-24]
  45b7b8:	ldur	w9, [x29, #-36]
  45b7bc:	mov	w10, w9
  45b7c0:	mov	x11, #0x8                   	// #8
  45b7c4:	mul	x10, x11, x10
  45b7c8:	add	x8, x8, x10
  45b7cc:	ldr	x0, [x8]
  45b7d0:	sub	x1, x29, #0x38
  45b7d4:	bl	4630e8 <sd_dhcp_route_get_destination>
  45b7d8:	cmp	w0, #0x0
  45b7dc:	cset	w9, ge  // ge = tcont
  45b7e0:	mov	w12, #0x1                   	// #1
  45b7e4:	eor	w9, w9, #0x1
  45b7e8:	eor	w9, w9, w12
  45b7ec:	eor	w9, w9, w12
  45b7f0:	and	w9, w9, #0x1
  45b7f4:	mov	w1, w9
  45b7f8:	sxtw	x8, w1
  45b7fc:	cbz	x8, 45b820 <serialize_dhcp_routes+0x200>
  45b800:	mov	w8, wzr
  45b804:	mov	w0, w8
  45b808:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b80c:	add	x1, x1, #0x5c8
  45b810:	ldr	x2, [sp, #72]
  45b814:	mov	w3, #0x2e8                 	// #744
  45b818:	ldr	x4, [sp, #64]
  45b81c:	bl	40a540 <log_assert_failed_realm@plt>
  45b820:	ldur	x8, [x29, #-24]
  45b824:	ldur	w9, [x29, #-36]
  45b828:	mov	w10, w9
  45b82c:	mov	x11, #0x8                   	// #8
  45b830:	mul	x10, x11, x10
  45b834:	add	x8, x8, x10
  45b838:	ldr	x0, [x8]
  45b83c:	sub	x1, x29, #0x3c
  45b840:	bl	463348 <sd_dhcp_route_get_gateway>
  45b844:	cmp	w0, #0x0
  45b848:	cset	w9, ge  // ge = tcont
  45b84c:	mov	w12, #0x1                   	// #1
  45b850:	eor	w9, w9, #0x1
  45b854:	eor	w9, w9, w12
  45b858:	eor	w9, w9, w12
  45b85c:	and	w9, w9, #0x1
  45b860:	mov	w1, w9
  45b864:	sxtw	x8, w1
  45b868:	cbz	x8, 45b88c <serialize_dhcp_routes+0x26c>
  45b86c:	mov	w8, wzr
  45b870:	mov	w0, w8
  45b874:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b878:	add	x1, x1, #0x5fd
  45b87c:	ldr	x2, [sp, #72]
  45b880:	mov	w3, #0x2e9                 	// #745
  45b884:	ldr	x4, [sp, #64]
  45b888:	bl	40a540 <log_assert_failed_realm@plt>
  45b88c:	ldur	x8, [x29, #-24]
  45b890:	ldur	w9, [x29, #-36]
  45b894:	mov	w10, w9
  45b898:	mov	x11, #0x8                   	// #8
  45b89c:	mul	x10, x11, x10
  45b8a0:	add	x8, x8, x10
  45b8a4:	ldr	x0, [x8]
  45b8a8:	sub	x1, x29, #0x3d
  45b8ac:	bl	463218 <sd_dhcp_route_get_destination_prefix_length>
  45b8b0:	cmp	w0, #0x0
  45b8b4:	cset	w9, ge  // ge = tcont
  45b8b8:	mov	w12, #0x1                   	// #1
  45b8bc:	eor	w9, w9, #0x1
  45b8c0:	eor	w9, w9, w12
  45b8c4:	eor	w9, w9, w12
  45b8c8:	and	w9, w9, #0x1
  45b8cc:	mov	w1, w9
  45b8d0:	sxtw	x8, w1
  45b8d4:	cbz	x8, 45b8f8 <serialize_dhcp_routes+0x2d8>
  45b8d8:	mov	w8, wzr
  45b8dc:	mov	w0, w8
  45b8e0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b8e4:	add	x1, x1, #0x62c
  45b8e8:	ldr	x2, [sp, #72]
  45b8ec:	mov	w3, #0x2ea                 	// #746
  45b8f0:	ldr	x4, [sp, #64]
  45b8f4:	bl	40a540 <log_assert_failed_realm@plt>
  45b8f8:	ldur	x0, [x29, #-8]
  45b8fc:	mov	w8, #0x2                   	// #2
  45b900:	str	x0, [sp, #56]
  45b904:	mov	w0, w8
  45b908:	sub	x1, x29, #0x38
  45b90c:	sub	x9, x29, #0x34
  45b910:	mov	x2, x9
  45b914:	mov	w10, #0x10                  	// #16
  45b918:	mov	w3, w10
  45b91c:	str	w8, [sp, #52]
  45b920:	str	x9, [sp, #40]
  45b924:	str	w10, [sp, #36]
  45b928:	bl	40bf80 <inet_ntop@plt>
  45b92c:	ldurb	w3, [x29, #-61]
  45b930:	ldr	x9, [sp, #56]
  45b934:	str	x0, [sp, #24]
  45b938:	mov	x0, x9
  45b93c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b940:	add	x1, x1, #0x671
  45b944:	ldr	x2, [sp, #24]
  45b948:	bl	40b5b0 <fprintf@plt>
  45b94c:	ldur	x9, [x29, #-8]
  45b950:	ldr	w8, [sp, #52]
  45b954:	mov	w0, w8
  45b958:	sub	x1, x29, #0x3c
  45b95c:	ldr	x2, [sp, #40]
  45b960:	ldr	w3, [sp, #36]
  45b964:	str	x9, [sp, #16]
  45b968:	bl	40bf80 <inet_ntop@plt>
  45b96c:	ldur	w8, [x29, #-36]
  45b970:	mov	w9, w8
  45b974:	ldur	x11, [x29, #-32]
  45b978:	subs	x11, x11, #0x1
  45b97c:	adrp	x12, 468000 <on_inotify.__assert_in_set+0x4540>
  45b980:	add	x12, x12, #0xcbe
  45b984:	adrp	x13, 466000 <on_inotify.__assert_in_set+0x2540>
  45b988:	add	x13, x13, #0x61e
  45b98c:	cmp	x9, x11
  45b990:	csel	x3, x13, x12, cc  // cc = lo, ul, last
  45b994:	ldr	x9, [sp, #16]
  45b998:	str	x0, [sp, #8]
  45b99c:	mov	x0, x9
  45b9a0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45b9a4:	add	x1, x1, #0x677
  45b9a8:	ldr	x2, [sp, #8]
  45b9ac:	bl	40b5b0 <fprintf@plt>
  45b9b0:	ldur	w8, [x29, #-36]
  45b9b4:	add	w8, w8, #0x1
  45b9b8:	stur	w8, [x29, #-36]
  45b9bc:	b	45b7a0 <serialize_dhcp_routes+0x180>
  45b9c0:	ldur	x1, [x29, #-8]
  45b9c4:	adrp	x0, 468000 <on_inotify.__assert_in_set+0x4540>
  45b9c8:	add	x0, x0, #0x67c
  45b9cc:	bl	40bf90 <fputs@plt>
  45b9d0:	ldp	x29, x30, [sp, #144]
  45b9d4:	add	sp, sp, #0xa0
  45b9d8:	ret

000000000045b9dc <deserialize_dhcp_routes>:
  45b9dc:	sub	sp, sp, #0xa0
  45b9e0:	stp	x29, x30, [sp, #144]
  45b9e4:	add	x29, sp, #0x90
  45b9e8:	mov	x8, xzr
  45b9ec:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45b9f0:	add	x9, x9, #0xb98
  45b9f4:	add	x9, x9, #0x3
  45b9f8:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45b9fc:	add	x10, x10, #0x67d
  45ba00:	stur	x0, [x29, #-16]
  45ba04:	stur	x1, [x29, #-24]
  45ba08:	stur	x2, [x29, #-32]
  45ba0c:	stur	x3, [x29, #-40]
  45ba10:	stur	x8, [x29, #-48]
  45ba14:	stur	xzr, [x29, #-56]
  45ba18:	stur	xzr, [x29, #-64]
  45ba1c:	str	x9, [sp, #16]
  45ba20:	str	x10, [sp, #8]
  45ba24:	ldur	x8, [x29, #-16]
  45ba28:	cmp	x8, #0x0
  45ba2c:	cset	w9, ne  // ne = any
  45ba30:	mov	w10, #0x1                   	// #1
  45ba34:	eor	w9, w9, #0x1
  45ba38:	eor	w9, w9, w10
  45ba3c:	eor	w9, w9, w10
  45ba40:	and	w9, w9, #0x1
  45ba44:	mov	w0, w9
  45ba48:	sxtw	x8, w0
  45ba4c:	cbz	x8, 45ba70 <deserialize_dhcp_routes+0x94>
  45ba50:	mov	w8, wzr
  45ba54:	mov	w0, w8
  45ba58:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45ba5c:	add	x1, x1, #0x2ff
  45ba60:	ldr	x2, [sp, #16]
  45ba64:	mov	w3, #0x2f7                 	// #759
  45ba68:	ldr	x4, [sp, #8]
  45ba6c:	bl	40a540 <log_assert_failed_realm@plt>
  45ba70:	ldur	x8, [x29, #-24]
  45ba74:	cmp	x8, #0x0
  45ba78:	cset	w9, ne  // ne = any
  45ba7c:	mov	w10, #0x1                   	// #1
  45ba80:	eor	w9, w9, #0x1
  45ba84:	eor	w9, w9, w10
  45ba88:	eor	w9, w9, w10
  45ba8c:	and	w9, w9, #0x1
  45ba90:	mov	w0, w9
  45ba94:	sxtw	x8, w0
  45ba98:	cbz	x8, 45babc <deserialize_dhcp_routes+0xe0>
  45ba9c:	mov	w8, wzr
  45baa0:	mov	w0, w8
  45baa4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45baa8:	add	x1, x1, #0x6d4
  45baac:	ldr	x2, [sp, #16]
  45bab0:	mov	w3, #0x2f8                 	// #760
  45bab4:	ldr	x4, [sp, #8]
  45bab8:	bl	40a540 <log_assert_failed_realm@plt>
  45babc:	ldur	x8, [x29, #-32]
  45bac0:	cmp	x8, #0x0
  45bac4:	cset	w9, ne  // ne = any
  45bac8:	mov	w10, #0x1                   	// #1
  45bacc:	eor	w9, w9, #0x1
  45bad0:	eor	w9, w9, w10
  45bad4:	eor	w9, w9, w10
  45bad8:	and	w9, w9, #0x1
  45badc:	mov	w0, w9
  45bae0:	sxtw	x8, w0
  45bae4:	cbz	x8, 45bb08 <deserialize_dhcp_routes+0x12c>
  45bae8:	mov	w8, wzr
  45baec:	mov	w0, w8
  45baf0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45baf4:	add	x1, x1, #0x6dd
  45baf8:	ldr	x2, [sp, #16]
  45bafc:	mov	w3, #0x2f9                 	// #761
  45bb00:	ldr	x4, [sp, #8]
  45bb04:	bl	40a540 <log_assert_failed_realm@plt>
  45bb08:	ldur	x8, [x29, #-40]
  45bb0c:	cmp	x8, #0x0
  45bb10:	cset	w9, ne  // ne = any
  45bb14:	mov	w10, #0x1                   	// #1
  45bb18:	eor	w9, w9, #0x1
  45bb1c:	eor	w9, w9, w10
  45bb20:	eor	w9, w9, w10
  45bb24:	and	w9, w9, #0x1
  45bb28:	mov	w0, w9
  45bb2c:	sxtw	x8, w0
  45bb30:	cbz	x8, 45bb54 <deserialize_dhcp_routes+0x178>
  45bb34:	mov	w8, wzr
  45bb38:	mov	w0, w8
  45bb3c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45bb40:	add	x1, x1, #0x4e8
  45bb44:	ldr	x2, [sp, #16]
  45bb48:	mov	w3, #0x2fa                 	// #762
  45bb4c:	ldr	x4, [sp, #8]
  45bb50:	bl	40a540 <log_assert_failed_realm@plt>
  45bb54:	add	x1, sp, #0x48
  45bb58:	mov	x8, xzr
  45bb5c:	str	x8, [sp, #72]
  45bb60:	sub	x0, x29, #0x28
  45bb64:	mov	x2, x8
  45bb68:	mov	w9, wzr
  45bb6c:	mov	w3, w9
  45bb70:	bl	40bee0 <extract_first_word@plt>
  45bb74:	str	w0, [sp, #48]
  45bb78:	ldr	w9, [sp, #48]
  45bb7c:	cmp	w9, #0x0
  45bb80:	cset	w9, ge  // ge = tcont
  45bb84:	tbnz	w9, #0, 45bb9c <deserialize_dhcp_routes+0x1c0>
  45bb88:	ldr	w8, [sp, #48]
  45bb8c:	stur	w8, [x29, #-4]
  45bb90:	mov	w8, #0x1                   	// #1
  45bb94:	str	w8, [sp, #44]
  45bb98:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bb9c:	ldr	w8, [sp, #48]
  45bba0:	cbnz	w8, 45bbb0 <deserialize_dhcp_routes+0x1d4>
  45bba4:	mov	w8, #0xa                   	// #10
  45bba8:	str	w8, [sp, #44]
  45bbac:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bbb0:	ldur	x8, [x29, #-56]
  45bbb4:	add	x2, x8, #0x1
  45bbb8:	sub	x0, x29, #0x30
  45bbbc:	sub	x1, x29, #0x40
  45bbc0:	mov	x3, #0xc                   	// #12
  45bbc4:	bl	40bda0 <greedy_realloc@plt>
  45bbc8:	cbnz	x0, 45bbe0 <deserialize_dhcp_routes+0x204>
  45bbcc:	mov	w8, #0xfffffff4            	// #-12
  45bbd0:	stur	w8, [x29, #-4]
  45bbd4:	mov	w8, #0x1                   	// #1
  45bbd8:	str	w8, [sp, #44]
  45bbdc:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bbe0:	ldr	x8, [sp, #72]
  45bbe4:	str	x8, [sp, #64]
  45bbe8:	ldr	x0, [sp, #64]
  45bbec:	mov	w1, #0x2f                  	// #47
  45bbf0:	bl	40a8c0 <strchr@plt>
  45bbf4:	str	x0, [sp, #56]
  45bbf8:	ldr	x8, [sp, #56]
  45bbfc:	cbnz	x8, 45bc0c <deserialize_dhcp_routes+0x230>
  45bc00:	mov	w8, #0xb                   	// #11
  45bc04:	str	w8, [sp, #44]
  45bc08:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bc0c:	ldr	x8, [sp, #56]
  45bc10:	mov	w9, #0x0                   	// #0
  45bc14:	strb	w9, [x8]
  45bc18:	ldr	x0, [sp, #64]
  45bc1c:	ldur	x8, [x29, #-48]
  45bc20:	ldur	x10, [x29, #-56]
  45bc24:	mov	x11, #0xc                   	// #12
  45bc28:	mul	x10, x11, x10
  45bc2c:	add	x1, x8, x10
  45bc30:	bl	40bfb0 <inet_aton@plt>
  45bc34:	str	w0, [sp, #48]
  45bc38:	ldr	w9, [sp, #48]
  45bc3c:	cbnz	w9, 45bc4c <deserialize_dhcp_routes+0x270>
  45bc40:	mov	w8, #0xb                   	// #11
  45bc44:	str	w8, [sp, #44]
  45bc48:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bc4c:	ldr	x8, [sp, #56]
  45bc50:	add	x8, x8, #0x1
  45bc54:	str	x8, [sp, #64]
  45bc58:	ldr	x0, [sp, #64]
  45bc5c:	mov	w1, #0x2c                  	// #44
  45bc60:	bl	40a8c0 <strchr@plt>
  45bc64:	str	x0, [sp, #56]
  45bc68:	ldr	x8, [sp, #56]
  45bc6c:	cbnz	x8, 45bc7c <deserialize_dhcp_routes+0x2a0>
  45bc70:	mov	w8, #0xb                   	// #11
  45bc74:	str	w8, [sp, #44]
  45bc78:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bc7c:	ldr	x8, [sp, #56]
  45bc80:	mov	w9, #0x0                   	// #0
  45bc84:	strb	w9, [x8]
  45bc88:	ldr	x0, [sp, #64]
  45bc8c:	add	x1, sp, #0x34
  45bc90:	bl	45bdc8 <safe_atou>
  45bc94:	str	w0, [sp, #48]
  45bc98:	ldr	w9, [sp, #48]
  45bc9c:	cmp	w9, #0x0
  45bca0:	cset	w9, lt  // lt = tstop
  45bca4:	tbnz	w9, #0, 45bcb4 <deserialize_dhcp_routes+0x2d8>
  45bca8:	ldr	w8, [sp, #52]
  45bcac:	cmp	w8, #0x20
  45bcb0:	b.ls	45bcc0 <deserialize_dhcp_routes+0x2e4>  // b.plast
  45bcb4:	mov	w8, #0xb                   	// #11
  45bcb8:	str	w8, [sp, #44]
  45bcbc:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bcc0:	ldr	w8, [sp, #52]
  45bcc4:	ldur	x9, [x29, #-48]
  45bcc8:	ldur	x10, [x29, #-56]
  45bccc:	mov	x11, #0xc                   	// #12
  45bcd0:	mul	x10, x11, x10
  45bcd4:	add	x9, x9, x10
  45bcd8:	strb	w8, [x9, #8]
  45bcdc:	ldr	x9, [sp, #56]
  45bce0:	add	x9, x9, #0x1
  45bce4:	str	x9, [sp, #64]
  45bce8:	ldr	x0, [sp, #64]
  45bcec:	ldur	x9, [x29, #-48]
  45bcf0:	ldur	x10, [x29, #-56]
  45bcf4:	mul	x10, x11, x10
  45bcf8:	add	x9, x9, x10
  45bcfc:	add	x1, x9, #0x4
  45bd00:	bl	40bfb0 <inet_aton@plt>
  45bd04:	str	w0, [sp, #48]
  45bd08:	ldr	w8, [sp, #48]
  45bd0c:	cbnz	w8, 45bd1c <deserialize_dhcp_routes+0x340>
  45bd10:	mov	w8, #0xb                   	// #11
  45bd14:	str	w8, [sp, #44]
  45bd18:	b	45bd2c <deserialize_dhcp_routes+0x350>
  45bd1c:	ldur	x8, [x29, #-56]
  45bd20:	add	x8, x8, #0x1
  45bd24:	stur	x8, [x29, #-56]
  45bd28:	str	wzr, [sp, #44]
  45bd2c:	add	x0, sp, #0x48
  45bd30:	bl	459454 <freep>
  45bd34:	ldr	w8, [sp, #44]
  45bd38:	str	w8, [sp, #4]
  45bd3c:	cbz	w8, 45bd64 <deserialize_dhcp_routes+0x388>
  45bd40:	b	45bd44 <deserialize_dhcp_routes+0x368>
  45bd44:	ldr	w8, [sp, #4]
  45bd48:	cmp	w8, #0xa
  45bd4c:	b.eq	45bd68 <deserialize_dhcp_routes+0x38c>  // b.none
  45bd50:	b	45bd54 <deserialize_dhcp_routes+0x378>
  45bd54:	ldr	w8, [sp, #4]
  45bd58:	cmp	w8, #0xb
  45bd5c:	b.eq	45bb54 <deserialize_dhcp_routes+0x178>  // b.none
  45bd60:	b	45bdb0 <deserialize_dhcp_routes+0x3d4>
  45bd64:	b	45bb54 <deserialize_dhcp_routes+0x178>
  45bd68:	ldur	x8, [x29, #-56]
  45bd6c:	ldur	x9, [x29, #-24]
  45bd70:	str	x8, [x9]
  45bd74:	ldur	x8, [x29, #-64]
  45bd78:	ldur	x9, [x29, #-32]
  45bd7c:	str	x8, [x9]
  45bd80:	ldur	x8, [x29, #-48]
  45bd84:	str	x8, [sp, #32]
  45bd88:	mov	x8, xzr
  45bd8c:	stur	x8, [x29, #-48]
  45bd90:	ldr	x8, [sp, #32]
  45bd94:	str	x8, [sp, #24]
  45bd98:	ldr	x8, [sp, #24]
  45bd9c:	ldur	x9, [x29, #-16]
  45bda0:	str	x8, [x9]
  45bda4:	stur	wzr, [x29, #-4]
  45bda8:	mov	w10, #0x1                   	// #1
  45bdac:	str	w10, [sp, #44]
  45bdb0:	sub	x0, x29, #0x30
  45bdb4:	bl	459454 <freep>
  45bdb8:	ldur	w0, [x29, #-4]
  45bdbc:	ldp	x29, x30, [sp, #144]
  45bdc0:	add	sp, sp, #0xa0
  45bdc4:	ret

000000000045bdc8 <safe_atou>:
  45bdc8:	sub	sp, sp, #0x20
  45bdcc:	stp	x29, x30, [sp, #16]
  45bdd0:	add	x29, sp, #0x10
  45bdd4:	mov	w8, wzr
  45bdd8:	str	x0, [sp, #8]
  45bddc:	str	x1, [sp]
  45bde0:	ldr	x0, [sp, #8]
  45bde4:	ldr	x2, [sp]
  45bde8:	mov	w1, w8
  45bdec:	bl	40a7e0 <safe_atou_full@plt>
  45bdf0:	ldp	x29, x30, [sp, #16]
  45bdf4:	add	sp, sp, #0x20
  45bdf8:	ret

000000000045bdfc <serialize_dhcp_option>:
  45bdfc:	sub	sp, sp, #0x60
  45be00:	stp	x29, x30, [sp, #80]
  45be04:	add	x29, sp, #0x50
  45be08:	mov	x8, xzr
  45be0c:	adrp	x9, 46f000 <on_inotify.__assert_in_set+0xb540>
  45be10:	add	x9, x9, #0xb98
  45be14:	add	x9, x9, #0x3
  45be18:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45be1c:	add	x10, x10, #0x6eb
  45be20:	stur	x0, [x29, #-16]
  45be24:	stur	x1, [x29, #-24]
  45be28:	stur	x2, [x29, #-32]
  45be2c:	str	x3, [sp, #40]
  45be30:	str	x8, [sp, #32]
  45be34:	str	x9, [sp, #16]
  45be38:	str	x10, [sp, #8]
  45be3c:	ldur	x8, [x29, #-16]
  45be40:	cmp	x8, #0x0
  45be44:	cset	w9, ne  // ne = any
  45be48:	mov	w10, #0x1                   	// #1
  45be4c:	eor	w9, w9, #0x1
  45be50:	eor	w9, w9, w10
  45be54:	eor	w9, w9, w10
  45be58:	and	w9, w9, #0x1
  45be5c:	mov	w0, w9
  45be60:	sxtw	x8, w0
  45be64:	cbz	x8, 45be88 <serialize_dhcp_option+0x8c>
  45be68:	mov	w8, wzr
  45be6c:	mov	w0, w8
  45be70:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45be74:	add	x1, x1, #0xa9
  45be78:	ldr	x2, [sp, #16]
  45be7c:	mov	w3, #0x33a                 	// #826
  45be80:	ldr	x4, [sp, #8]
  45be84:	bl	40a540 <log_assert_failed_realm@plt>
  45be88:	ldur	x8, [x29, #-24]
  45be8c:	cmp	x8, #0x0
  45be90:	cset	w9, ne  // ne = any
  45be94:	mov	w10, #0x1                   	// #1
  45be98:	eor	w9, w9, #0x1
  45be9c:	eor	w9, w9, w10
  45bea0:	eor	w9, w9, w10
  45bea4:	and	w9, w9, #0x1
  45bea8:	mov	w0, w9
  45beac:	sxtw	x8, w0
  45beb0:	cbz	x8, 45bed4 <serialize_dhcp_option+0xd8>
  45beb4:	mov	w8, wzr
  45beb8:	mov	w0, w8
  45bebc:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45bec0:	add	x1, x1, #0x151
  45bec4:	ldr	x2, [sp, #16]
  45bec8:	mov	w3, #0x33b                 	// #827
  45becc:	ldr	x4, [sp, #8]
  45bed0:	bl	40a540 <log_assert_failed_realm@plt>
  45bed4:	ldur	x8, [x29, #-32]
  45bed8:	cmp	x8, #0x0
  45bedc:	cset	w9, ne  // ne = any
  45bee0:	mov	w10, #0x1                   	// #1
  45bee4:	eor	w9, w9, #0x1
  45bee8:	eor	w9, w9, w10
  45beec:	eor	w9, w9, w10
  45bef0:	and	w9, w9, #0x1
  45bef4:	mov	w0, w9
  45bef8:	sxtw	x8, w0
  45befc:	cbz	x8, 45bf20 <serialize_dhcp_option+0x124>
  45bf00:	mov	w8, wzr
  45bf04:	mov	w0, w8
  45bf08:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  45bf0c:	add	x1, x1, #0x13c
  45bf10:	ldr	x2, [sp, #16]
  45bf14:	mov	w3, #0x33c                 	// #828
  45bf18:	ldr	x4, [sp, #8]
  45bf1c:	bl	40a540 <log_assert_failed_realm@plt>
  45bf20:	ldur	x0, [x29, #-32]
  45bf24:	ldr	x1, [sp, #40]
  45bf28:	bl	40bfc0 <hexmem@plt>
  45bf2c:	str	x0, [sp, #32]
  45bf30:	ldr	x8, [sp, #32]
  45bf34:	cbnz	x8, 45bf4c <serialize_dhcp_option+0x150>
  45bf38:	mov	w8, #0xfffffff4            	// #-12
  45bf3c:	stur	w8, [x29, #-4]
  45bf40:	mov	w8, #0x1                   	// #1
  45bf44:	str	w8, [sp, #28]
  45bf48:	b	45bf70 <serialize_dhcp_option+0x174>
  45bf4c:	ldur	x0, [x29, #-16]
  45bf50:	ldur	x2, [x29, #-24]
  45bf54:	ldr	x3, [sp, #32]
  45bf58:	adrp	x1, 469000 <on_inotify.__assert_in_set+0x5540>
  45bf5c:	add	x1, x1, #0x4e5
  45bf60:	bl	40b5b0 <fprintf@plt>
  45bf64:	stur	wzr, [x29, #-4]
  45bf68:	mov	w8, #0x1                   	// #1
  45bf6c:	str	w8, [sp, #28]
  45bf70:	add	x0, sp, #0x20
  45bf74:	bl	459454 <freep>
  45bf78:	ldur	w0, [x29, #-4]
  45bf7c:	ldp	x29, x30, [sp, #80]
  45bf80:	add	sp, sp, #0x60
  45bf84:	ret

000000000045bf88 <strv_isempty>:
  45bf88:	sub	sp, sp, #0x10
  45bf8c:	str	x0, [sp, #8]
  45bf90:	ldr	x8, [sp, #8]
  45bf94:	mov	w9, #0x1                   	// #1
  45bf98:	str	w9, [sp, #4]
  45bf9c:	cbz	x8, 45bfb8 <strv_isempty+0x30>
  45bfa0:	ldr	x8, [sp, #8]
  45bfa4:	ldr	x8, [x8]
  45bfa8:	cmp	x8, #0x0
  45bfac:	cset	w9, ne  // ne = any
  45bfb0:	eor	w9, w9, #0x1
  45bfb4:	str	w9, [sp, #4]
  45bfb8:	ldr	w8, [sp, #4]
  45bfbc:	and	w0, w8, #0x1
  45bfc0:	add	sp, sp, #0x10
  45bfc4:	ret

000000000045bfc8 <sd_dhcp_lease_get_address>:
  45bfc8:	sub	sp, sp, #0x40
  45bfcc:	stp	x29, x30, [sp, #48]
  45bfd0:	add	x29, sp, #0x30
  45bfd4:	mov	w8, #0x1                   	// #1
  45bfd8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45bfdc:	add	x9, x9, #0x782
  45bfe0:	add	x9, x9, #0x3
  45bfe4:	mov	w10, #0x0                   	// #0
  45bfe8:	stur	x0, [x29, #-16]
  45bfec:	str	x1, [sp, #24]
  45bff0:	str	w8, [sp, #20]
  45bff4:	str	x9, [sp, #8]
  45bff8:	str	w10, [sp, #4]
  45bffc:	ldur	x8, [x29, #-16]
  45c000:	cmp	x8, #0x0
  45c004:	cset	w9, ne  // ne = any
  45c008:	mov	w10, #0x1                   	// #1
  45c00c:	eor	w9, w9, #0x1
  45c010:	eor	w9, w9, w10
  45c014:	and	w9, w9, #0x1
  45c018:	mov	w0, w9
  45c01c:	sxtw	x8, w0
  45c020:	cbz	x8, 45c030 <sd_dhcp_lease_get_address+0x68>
  45c024:	ldr	w8, [sp, #20]
  45c028:	tbnz	w8, #0, 45c068 <sd_dhcp_lease_get_address+0xa0>
  45c02c:	b	45c05c <sd_dhcp_lease_get_address+0x94>
  45c030:	mov	w8, wzr
  45c034:	mov	w0, w8
  45c038:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c03c:	add	x1, x1, #0x77c
  45c040:	ldr	x2, [sp, #8]
  45c044:	mov	w3, #0x22                  	// #34
  45c048:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c04c:	add	x4, x4, #0x7ac
  45c050:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c054:	ldr	w8, [sp, #4]
  45c058:	tbnz	w8, #0, 45c068 <sd_dhcp_lease_get_address+0xa0>
  45c05c:	mov	w8, #0xffffffea            	// #-22
  45c060:	stur	w8, [x29, #-4]
  45c064:	b	45c100 <sd_dhcp_lease_get_address+0x138>
  45c068:	ldr	x8, [sp, #24]
  45c06c:	cmp	x8, #0x0
  45c070:	cset	w9, ne  // ne = any
  45c074:	mov	w10, #0x1                   	// #1
  45c078:	eor	w9, w9, #0x1
  45c07c:	eor	w9, w9, w10
  45c080:	and	w9, w9, #0x1
  45c084:	mov	w0, w9
  45c088:	sxtw	x8, w0
  45c08c:	cbz	x8, 45c09c <sd_dhcp_lease_get_address+0xd4>
  45c090:	ldr	w8, [sp, #20]
  45c094:	tbnz	w8, #0, 45c0d4 <sd_dhcp_lease_get_address+0x10c>
  45c098:	b	45c0c8 <sd_dhcp_lease_get_address+0x100>
  45c09c:	mov	w8, wzr
  45c0a0:	mov	w0, w8
  45c0a4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c0a8:	add	x1, x1, #0x7ed
  45c0ac:	ldr	x2, [sp, #8]
  45c0b0:	mov	w3, #0x23                  	// #35
  45c0b4:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c0b8:	add	x4, x4, #0x7ac
  45c0bc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c0c0:	ldr	w8, [sp, #4]
  45c0c4:	tbnz	w8, #0, 45c0d4 <sd_dhcp_lease_get_address+0x10c>
  45c0c8:	mov	w8, #0xffffffea            	// #-22
  45c0cc:	stur	w8, [x29, #-4]
  45c0d0:	b	45c100 <sd_dhcp_lease_get_address+0x138>
  45c0d4:	ldur	x8, [x29, #-16]
  45c0d8:	ldr	w9, [x8, #16]
  45c0dc:	cbnz	w9, 45c0ec <sd_dhcp_lease_get_address+0x124>
  45c0e0:	mov	w8, #0xffffffc3            	// #-61
  45c0e4:	stur	w8, [x29, #-4]
  45c0e8:	b	45c100 <sd_dhcp_lease_get_address+0x138>
  45c0ec:	ldur	x8, [x29, #-16]
  45c0f0:	ldr	w9, [x8, #16]
  45c0f4:	ldr	x8, [sp, #24]
  45c0f8:	str	w9, [x8]
  45c0fc:	stur	wzr, [x29, #-4]
  45c100:	ldur	w0, [x29, #-4]
  45c104:	ldp	x29, x30, [sp, #48]
  45c108:	add	sp, sp, #0x40
  45c10c:	ret

000000000045c110 <sd_dhcp_lease_get_broadcast>:
  45c110:	sub	sp, sp, #0x40
  45c114:	stp	x29, x30, [sp, #48]
  45c118:	add	x29, sp, #0x30
  45c11c:	mov	w8, #0x1                   	// #1
  45c120:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c124:	add	x9, x9, #0x782
  45c128:	add	x9, x9, #0x3
  45c12c:	mov	w10, #0x0                   	// #0
  45c130:	stur	x0, [x29, #-16]
  45c134:	str	x1, [sp, #24]
  45c138:	str	w8, [sp, #20]
  45c13c:	str	x9, [sp, #8]
  45c140:	str	w10, [sp, #4]
  45c144:	ldur	x8, [x29, #-16]
  45c148:	cmp	x8, #0x0
  45c14c:	cset	w9, ne  // ne = any
  45c150:	mov	w10, #0x1                   	// #1
  45c154:	eor	w9, w9, #0x1
  45c158:	eor	w9, w9, w10
  45c15c:	and	w9, w9, #0x1
  45c160:	mov	w0, w9
  45c164:	sxtw	x8, w0
  45c168:	cbz	x8, 45c178 <sd_dhcp_lease_get_broadcast+0x68>
  45c16c:	ldr	w8, [sp, #20]
  45c170:	tbnz	w8, #0, 45c1b0 <sd_dhcp_lease_get_broadcast+0xa0>
  45c174:	b	45c1a4 <sd_dhcp_lease_get_broadcast+0x94>
  45c178:	mov	w8, wzr
  45c17c:	mov	w0, w8
  45c180:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c184:	add	x1, x1, #0x77c
  45c188:	ldr	x2, [sp, #8]
  45c18c:	mov	w3, #0x2d                  	// #45
  45c190:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c194:	add	x4, x4, #0x7f2
  45c198:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c19c:	ldr	w8, [sp, #4]
  45c1a0:	tbnz	w8, #0, 45c1b0 <sd_dhcp_lease_get_broadcast+0xa0>
  45c1a4:	mov	w8, #0xffffffea            	// #-22
  45c1a8:	stur	w8, [x29, #-4]
  45c1ac:	b	45c248 <sd_dhcp_lease_get_broadcast+0x138>
  45c1b0:	ldr	x8, [sp, #24]
  45c1b4:	cmp	x8, #0x0
  45c1b8:	cset	w9, ne  // ne = any
  45c1bc:	mov	w10, #0x1                   	// #1
  45c1c0:	eor	w9, w9, #0x1
  45c1c4:	eor	w9, w9, w10
  45c1c8:	and	w9, w9, #0x1
  45c1cc:	mov	w0, w9
  45c1d0:	sxtw	x8, w0
  45c1d4:	cbz	x8, 45c1e4 <sd_dhcp_lease_get_broadcast+0xd4>
  45c1d8:	ldr	w8, [sp, #20]
  45c1dc:	tbnz	w8, #0, 45c21c <sd_dhcp_lease_get_broadcast+0x10c>
  45c1e0:	b	45c210 <sd_dhcp_lease_get_broadcast+0x100>
  45c1e4:	mov	w8, wzr
  45c1e8:	mov	w0, w8
  45c1ec:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c1f0:	add	x1, x1, #0x7ed
  45c1f4:	ldr	x2, [sp, #8]
  45c1f8:	mov	w3, #0x2e                  	// #46
  45c1fc:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c200:	add	x4, x4, #0x7f2
  45c204:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c208:	ldr	w8, [sp, #4]
  45c20c:	tbnz	w8, #0, 45c21c <sd_dhcp_lease_get_broadcast+0x10c>
  45c210:	mov	w8, #0xffffffea            	// #-22
  45c214:	stur	w8, [x29, #-4]
  45c218:	b	45c248 <sd_dhcp_lease_get_broadcast+0x138>
  45c21c:	ldur	x8, [x29, #-16]
  45c220:	ldrb	w9, [x8, #36]
  45c224:	tbnz	w9, #0, 45c234 <sd_dhcp_lease_get_broadcast+0x124>
  45c228:	mov	w8, #0xffffffc3            	// #-61
  45c22c:	stur	w8, [x29, #-4]
  45c230:	b	45c248 <sd_dhcp_lease_get_broadcast+0x138>
  45c234:	ldur	x8, [x29, #-16]
  45c238:	ldr	w9, [x8, #40]
  45c23c:	ldr	x8, [sp, #24]
  45c240:	str	w9, [x8]
  45c244:	stur	wzr, [x29, #-4]
  45c248:	ldur	w0, [x29, #-4]
  45c24c:	ldp	x29, x30, [sp, #48]
  45c250:	add	sp, sp, #0x40
  45c254:	ret

000000000045c258 <sd_dhcp_lease_get_lifetime>:
  45c258:	sub	sp, sp, #0x40
  45c25c:	stp	x29, x30, [sp, #48]
  45c260:	add	x29, sp, #0x30
  45c264:	mov	w8, #0x1                   	// #1
  45c268:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c26c:	add	x9, x9, #0x782
  45c270:	add	x9, x9, #0x3
  45c274:	mov	w10, #0x0                   	// #0
  45c278:	stur	x0, [x29, #-16]
  45c27c:	str	x1, [sp, #24]
  45c280:	str	w8, [sp, #20]
  45c284:	str	x9, [sp, #8]
  45c288:	str	w10, [sp, #4]
  45c28c:	ldur	x8, [x29, #-16]
  45c290:	cmp	x8, #0x0
  45c294:	cset	w9, ne  // ne = any
  45c298:	mov	w10, #0x1                   	// #1
  45c29c:	eor	w9, w9, #0x1
  45c2a0:	eor	w9, w9, w10
  45c2a4:	and	w9, w9, #0x1
  45c2a8:	mov	w0, w9
  45c2ac:	sxtw	x8, w0
  45c2b0:	cbz	x8, 45c2c0 <sd_dhcp_lease_get_lifetime+0x68>
  45c2b4:	ldr	w8, [sp, #20]
  45c2b8:	tbnz	w8, #0, 45c2f8 <sd_dhcp_lease_get_lifetime+0xa0>
  45c2bc:	b	45c2ec <sd_dhcp_lease_get_lifetime+0x94>
  45c2c0:	mov	w8, wzr
  45c2c4:	mov	w0, w8
  45c2c8:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c2cc:	add	x1, x1, #0x77c
  45c2d0:	ldr	x2, [sp, #8]
  45c2d4:	mov	w3, #0x38                  	// #56
  45c2d8:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c2dc:	add	x4, x4, #0x835
  45c2e0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c2e4:	ldr	w8, [sp, #4]
  45c2e8:	tbnz	w8, #0, 45c2f8 <sd_dhcp_lease_get_lifetime+0xa0>
  45c2ec:	mov	w8, #0xffffffea            	// #-22
  45c2f0:	stur	w8, [x29, #-4]
  45c2f4:	b	45c398 <sd_dhcp_lease_get_lifetime+0x140>
  45c2f8:	ldr	x8, [sp, #24]
  45c2fc:	cmp	x8, #0x0
  45c300:	cset	w9, ne  // ne = any
  45c304:	mov	w10, #0x1                   	// #1
  45c308:	eor	w9, w9, #0x1
  45c30c:	eor	w9, w9, w10
  45c310:	and	w9, w9, #0x1
  45c314:	mov	w0, w9
  45c318:	sxtw	x8, w0
  45c31c:	cbz	x8, 45c32c <sd_dhcp_lease_get_lifetime+0xd4>
  45c320:	ldr	w8, [sp, #20]
  45c324:	tbnz	w8, #0, 45c364 <sd_dhcp_lease_get_lifetime+0x10c>
  45c328:	b	45c358 <sd_dhcp_lease_get_lifetime+0x100>
  45c32c:	mov	w8, wzr
  45c330:	mov	w0, w8
  45c334:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c338:	add	x1, x1, #0x871
  45c33c:	ldr	x2, [sp, #8]
  45c340:	mov	w3, #0x39                  	// #57
  45c344:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c348:	add	x4, x4, #0x835
  45c34c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c350:	ldr	w8, [sp, #4]
  45c354:	tbnz	w8, #0, 45c364 <sd_dhcp_lease_get_lifetime+0x10c>
  45c358:	mov	w8, #0xffffffea            	// #-22
  45c35c:	stur	w8, [x29, #-4]
  45c360:	b	45c398 <sd_dhcp_lease_get_lifetime+0x140>
  45c364:	ldur	x8, [x29, #-16]
  45c368:	ldr	w9, [x8, #12]
  45c36c:	cmp	w9, #0x0
  45c370:	cset	w9, hi  // hi = pmore
  45c374:	tbnz	w9, #0, 45c384 <sd_dhcp_lease_get_lifetime+0x12c>
  45c378:	mov	w8, #0xffffffc3            	// #-61
  45c37c:	stur	w8, [x29, #-4]
  45c380:	b	45c398 <sd_dhcp_lease_get_lifetime+0x140>
  45c384:	ldur	x8, [x29, #-16]
  45c388:	ldr	w9, [x8, #12]
  45c38c:	ldr	x8, [sp, #24]
  45c390:	str	w9, [x8]
  45c394:	stur	wzr, [x29, #-4]
  45c398:	ldur	w0, [x29, #-4]
  45c39c:	ldp	x29, x30, [sp, #48]
  45c3a0:	add	sp, sp, #0x40
  45c3a4:	ret

000000000045c3a8 <sd_dhcp_lease_get_t1>:
  45c3a8:	sub	sp, sp, #0x40
  45c3ac:	stp	x29, x30, [sp, #48]
  45c3b0:	add	x29, sp, #0x30
  45c3b4:	mov	w8, #0x1                   	// #1
  45c3b8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c3bc:	add	x9, x9, #0x782
  45c3c0:	add	x9, x9, #0x3
  45c3c4:	mov	w10, #0x0                   	// #0
  45c3c8:	stur	x0, [x29, #-16]
  45c3cc:	str	x1, [sp, #24]
  45c3d0:	str	w8, [sp, #20]
  45c3d4:	str	x9, [sp, #8]
  45c3d8:	str	w10, [sp, #4]
  45c3dc:	ldur	x8, [x29, #-16]
  45c3e0:	cmp	x8, #0x0
  45c3e4:	cset	w9, ne  // ne = any
  45c3e8:	mov	w10, #0x1                   	// #1
  45c3ec:	eor	w9, w9, #0x1
  45c3f0:	eor	w9, w9, w10
  45c3f4:	and	w9, w9, #0x1
  45c3f8:	mov	w0, w9
  45c3fc:	sxtw	x8, w0
  45c400:	cbz	x8, 45c410 <sd_dhcp_lease_get_t1+0x68>
  45c404:	ldr	w8, [sp, #20]
  45c408:	tbnz	w8, #0, 45c448 <sd_dhcp_lease_get_t1+0xa0>
  45c40c:	b	45c43c <sd_dhcp_lease_get_t1+0x94>
  45c410:	mov	w8, wzr
  45c414:	mov	w0, w8
  45c418:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c41c:	add	x1, x1, #0x77c
  45c420:	ldr	x2, [sp, #8]
  45c424:	mov	w3, #0x43                  	// #67
  45c428:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c42c:	add	x4, x4, #0x87a
  45c430:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c434:	ldr	w8, [sp, #4]
  45c438:	tbnz	w8, #0, 45c448 <sd_dhcp_lease_get_t1+0xa0>
  45c43c:	mov	w8, #0xffffffea            	// #-22
  45c440:	stur	w8, [x29, #-4]
  45c444:	b	45c4e8 <sd_dhcp_lease_get_t1+0x140>
  45c448:	ldr	x8, [sp, #24]
  45c44c:	cmp	x8, #0x0
  45c450:	cset	w9, ne  // ne = any
  45c454:	mov	w10, #0x1                   	// #1
  45c458:	eor	w9, w9, #0x1
  45c45c:	eor	w9, w9, w10
  45c460:	and	w9, w9, #0x1
  45c464:	mov	w0, w9
  45c468:	sxtw	x8, w0
  45c46c:	cbz	x8, 45c47c <sd_dhcp_lease_get_t1+0xd4>
  45c470:	ldr	w8, [sp, #20]
  45c474:	tbnz	w8, #0, 45c4b4 <sd_dhcp_lease_get_t1+0x10c>
  45c478:	b	45c4a8 <sd_dhcp_lease_get_t1+0x100>
  45c47c:	mov	w8, wzr
  45c480:	mov	w0, w8
  45c484:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c488:	add	x1, x1, #0x8b0
  45c48c:	ldr	x2, [sp, #8]
  45c490:	mov	w3, #0x44                  	// #68
  45c494:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c498:	add	x4, x4, #0x87a
  45c49c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c4a0:	ldr	w8, [sp, #4]
  45c4a4:	tbnz	w8, #0, 45c4b4 <sd_dhcp_lease_get_t1+0x10c>
  45c4a8:	mov	w8, #0xffffffea            	// #-22
  45c4ac:	stur	w8, [x29, #-4]
  45c4b0:	b	45c4e8 <sd_dhcp_lease_get_t1+0x140>
  45c4b4:	ldur	x8, [x29, #-16]
  45c4b8:	ldr	w9, [x8, #4]
  45c4bc:	cmp	w9, #0x0
  45c4c0:	cset	w9, hi  // hi = pmore
  45c4c4:	tbnz	w9, #0, 45c4d4 <sd_dhcp_lease_get_t1+0x12c>
  45c4c8:	mov	w8, #0xffffffc3            	// #-61
  45c4cc:	stur	w8, [x29, #-4]
  45c4d0:	b	45c4e8 <sd_dhcp_lease_get_t1+0x140>
  45c4d4:	ldur	x8, [x29, #-16]
  45c4d8:	ldr	w9, [x8, #4]
  45c4dc:	ldr	x8, [sp, #24]
  45c4e0:	str	w9, [x8]
  45c4e4:	stur	wzr, [x29, #-4]
  45c4e8:	ldur	w0, [x29, #-4]
  45c4ec:	ldp	x29, x30, [sp, #48]
  45c4f0:	add	sp, sp, #0x40
  45c4f4:	ret

000000000045c4f8 <sd_dhcp_lease_get_t2>:
  45c4f8:	sub	sp, sp, #0x40
  45c4fc:	stp	x29, x30, [sp, #48]
  45c500:	add	x29, sp, #0x30
  45c504:	mov	w8, #0x1                   	// #1
  45c508:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c50c:	add	x9, x9, #0x782
  45c510:	add	x9, x9, #0x3
  45c514:	mov	w10, #0x0                   	// #0
  45c518:	stur	x0, [x29, #-16]
  45c51c:	str	x1, [sp, #24]
  45c520:	str	w8, [sp, #20]
  45c524:	str	x9, [sp, #8]
  45c528:	str	w10, [sp, #4]
  45c52c:	ldur	x8, [x29, #-16]
  45c530:	cmp	x8, #0x0
  45c534:	cset	w9, ne  // ne = any
  45c538:	mov	w10, #0x1                   	// #1
  45c53c:	eor	w9, w9, #0x1
  45c540:	eor	w9, w9, w10
  45c544:	and	w9, w9, #0x1
  45c548:	mov	w0, w9
  45c54c:	sxtw	x8, w0
  45c550:	cbz	x8, 45c560 <sd_dhcp_lease_get_t2+0x68>
  45c554:	ldr	w8, [sp, #20]
  45c558:	tbnz	w8, #0, 45c598 <sd_dhcp_lease_get_t2+0xa0>
  45c55c:	b	45c58c <sd_dhcp_lease_get_t2+0x94>
  45c560:	mov	w8, wzr
  45c564:	mov	w0, w8
  45c568:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c56c:	add	x1, x1, #0x77c
  45c570:	ldr	x2, [sp, #8]
  45c574:	mov	w3, #0x4e                  	// #78
  45c578:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c57c:	add	x4, x4, #0x8b3
  45c580:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c584:	ldr	w8, [sp, #4]
  45c588:	tbnz	w8, #0, 45c598 <sd_dhcp_lease_get_t2+0xa0>
  45c58c:	mov	w8, #0xffffffea            	// #-22
  45c590:	stur	w8, [x29, #-4]
  45c594:	b	45c638 <sd_dhcp_lease_get_t2+0x140>
  45c598:	ldr	x8, [sp, #24]
  45c59c:	cmp	x8, #0x0
  45c5a0:	cset	w9, ne  // ne = any
  45c5a4:	mov	w10, #0x1                   	// #1
  45c5a8:	eor	w9, w9, #0x1
  45c5ac:	eor	w9, w9, w10
  45c5b0:	and	w9, w9, #0x1
  45c5b4:	mov	w0, w9
  45c5b8:	sxtw	x8, w0
  45c5bc:	cbz	x8, 45c5cc <sd_dhcp_lease_get_t2+0xd4>
  45c5c0:	ldr	w8, [sp, #20]
  45c5c4:	tbnz	w8, #0, 45c604 <sd_dhcp_lease_get_t2+0x10c>
  45c5c8:	b	45c5f8 <sd_dhcp_lease_get_t2+0x100>
  45c5cc:	mov	w8, wzr
  45c5d0:	mov	w0, w8
  45c5d4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c5d8:	add	x1, x1, #0x8e9
  45c5dc:	ldr	x2, [sp, #8]
  45c5e0:	mov	w3, #0x4f                  	// #79
  45c5e4:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c5e8:	add	x4, x4, #0x8b3
  45c5ec:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c5f0:	ldr	w8, [sp, #4]
  45c5f4:	tbnz	w8, #0, 45c604 <sd_dhcp_lease_get_t2+0x10c>
  45c5f8:	mov	w8, #0xffffffea            	// #-22
  45c5fc:	stur	w8, [x29, #-4]
  45c600:	b	45c638 <sd_dhcp_lease_get_t2+0x140>
  45c604:	ldur	x8, [x29, #-16]
  45c608:	ldr	w9, [x8, #8]
  45c60c:	cmp	w9, #0x0
  45c610:	cset	w9, hi  // hi = pmore
  45c614:	tbnz	w9, #0, 45c624 <sd_dhcp_lease_get_t2+0x12c>
  45c618:	mov	w8, #0xffffffc3            	// #-61
  45c61c:	stur	w8, [x29, #-4]
  45c620:	b	45c638 <sd_dhcp_lease_get_t2+0x140>
  45c624:	ldur	x8, [x29, #-16]
  45c628:	ldr	w9, [x8, #8]
  45c62c:	ldr	x8, [sp, #24]
  45c630:	str	w9, [x8]
  45c634:	stur	wzr, [x29, #-4]
  45c638:	ldur	w0, [x29, #-4]
  45c63c:	ldp	x29, x30, [sp, #48]
  45c640:	add	sp, sp, #0x40
  45c644:	ret

000000000045c648 <sd_dhcp_lease_get_mtu>:
  45c648:	sub	sp, sp, #0x40
  45c64c:	stp	x29, x30, [sp, #48]
  45c650:	add	x29, sp, #0x30
  45c654:	mov	w8, #0x1                   	// #1
  45c658:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c65c:	add	x9, x9, #0x782
  45c660:	add	x9, x9, #0x3
  45c664:	mov	w10, #0x0                   	// #0
  45c668:	stur	x0, [x29, #-16]
  45c66c:	str	x1, [sp, #24]
  45c670:	str	w8, [sp, #20]
  45c674:	str	x9, [sp, #8]
  45c678:	str	w10, [sp, #4]
  45c67c:	ldur	x8, [x29, #-16]
  45c680:	cmp	x8, #0x0
  45c684:	cset	w9, ne  // ne = any
  45c688:	mov	w10, #0x1                   	// #1
  45c68c:	eor	w9, w9, #0x1
  45c690:	eor	w9, w9, w10
  45c694:	and	w9, w9, #0x1
  45c698:	mov	w0, w9
  45c69c:	sxtw	x8, w0
  45c6a0:	cbz	x8, 45c6b0 <sd_dhcp_lease_get_mtu+0x68>
  45c6a4:	ldr	w8, [sp, #20]
  45c6a8:	tbnz	w8, #0, 45c6e8 <sd_dhcp_lease_get_mtu+0xa0>
  45c6ac:	b	45c6dc <sd_dhcp_lease_get_mtu+0x94>
  45c6b0:	mov	w8, wzr
  45c6b4:	mov	w0, w8
  45c6b8:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c6bc:	add	x1, x1, #0x77c
  45c6c0:	ldr	x2, [sp, #8]
  45c6c4:	mov	w3, #0x59                  	// #89
  45c6c8:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c6cc:	add	x4, x4, #0x8ec
  45c6d0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c6d4:	ldr	w8, [sp, #4]
  45c6d8:	tbnz	w8, #0, 45c6e8 <sd_dhcp_lease_get_mtu+0xa0>
  45c6dc:	mov	w8, #0xffffffea            	// #-22
  45c6e0:	stur	w8, [x29, #-4]
  45c6e4:	b	45c788 <sd_dhcp_lease_get_mtu+0x140>
  45c6e8:	ldr	x8, [sp, #24]
  45c6ec:	cmp	x8, #0x0
  45c6f0:	cset	w9, ne  // ne = any
  45c6f4:	mov	w10, #0x1                   	// #1
  45c6f8:	eor	w9, w9, #0x1
  45c6fc:	eor	w9, w9, w10
  45c700:	and	w9, w9, #0x1
  45c704:	mov	w0, w9
  45c708:	sxtw	x8, w0
  45c70c:	cbz	x8, 45c71c <sd_dhcp_lease_get_mtu+0xd4>
  45c710:	ldr	w8, [sp, #20]
  45c714:	tbnz	w8, #0, 45c754 <sd_dhcp_lease_get_mtu+0x10c>
  45c718:	b	45c748 <sd_dhcp_lease_get_mtu+0x100>
  45c71c:	mov	w8, wzr
  45c720:	mov	w0, w8
  45c724:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c728:	add	x1, x1, #0x923
  45c72c:	ldr	x2, [sp, #8]
  45c730:	mov	w3, #0x5a                  	// #90
  45c734:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c738:	add	x4, x4, #0x8ec
  45c73c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c740:	ldr	w8, [sp, #4]
  45c744:	tbnz	w8, #0, 45c754 <sd_dhcp_lease_get_mtu+0x10c>
  45c748:	mov	w8, #0xffffffea            	// #-22
  45c74c:	stur	w8, [x29, #-4]
  45c750:	b	45c788 <sd_dhcp_lease_get_mtu+0x140>
  45c754:	ldur	x8, [x29, #-16]
  45c758:	ldrh	w9, [x8, #136]
  45c75c:	cmp	w9, #0x0
  45c760:	cset	w9, gt
  45c764:	tbnz	w9, #0, 45c774 <sd_dhcp_lease_get_mtu+0x12c>
  45c768:	mov	w8, #0xffffffc3            	// #-61
  45c76c:	stur	w8, [x29, #-4]
  45c770:	b	45c788 <sd_dhcp_lease_get_mtu+0x140>
  45c774:	ldur	x8, [x29, #-16]
  45c778:	ldrh	w9, [x8, #136]
  45c77c:	ldr	x8, [sp, #24]
  45c780:	strh	w9, [x8]
  45c784:	stur	wzr, [x29, #-4]
  45c788:	ldur	w0, [x29, #-4]
  45c78c:	ldp	x29, x30, [sp, #48]
  45c790:	add	sp, sp, #0x40
  45c794:	ret

000000000045c798 <sd_dhcp_lease_get_dns>:
  45c798:	sub	sp, sp, #0x40
  45c79c:	stp	x29, x30, [sp, #48]
  45c7a0:	add	x29, sp, #0x30
  45c7a4:	mov	w8, #0x1                   	// #1
  45c7a8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c7ac:	add	x9, x9, #0x782
  45c7b0:	add	x9, x9, #0x3
  45c7b4:	mov	w10, #0x0                   	// #0
  45c7b8:	stur	x0, [x29, #-16]
  45c7bc:	str	x1, [sp, #24]
  45c7c0:	str	w8, [sp, #20]
  45c7c4:	str	x9, [sp, #8]
  45c7c8:	str	w10, [sp, #4]
  45c7cc:	ldur	x8, [x29, #-16]
  45c7d0:	cmp	x8, #0x0
  45c7d4:	cset	w9, ne  // ne = any
  45c7d8:	mov	w10, #0x1                   	// #1
  45c7dc:	eor	w9, w9, #0x1
  45c7e0:	eor	w9, w9, w10
  45c7e4:	and	w9, w9, #0x1
  45c7e8:	mov	w0, w9
  45c7ec:	sxtw	x8, w0
  45c7f0:	cbz	x8, 45c800 <sd_dhcp_lease_get_dns+0x68>
  45c7f4:	ldr	w8, [sp, #20]
  45c7f8:	tbnz	w8, #0, 45c838 <sd_dhcp_lease_get_dns+0xa0>
  45c7fc:	b	45c82c <sd_dhcp_lease_get_dns+0x94>
  45c800:	mov	w8, wzr
  45c804:	mov	w0, w8
  45c808:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c80c:	add	x1, x1, #0x77c
  45c810:	ldr	x2, [sp, #8]
  45c814:	mov	w3, #0x64                  	// #100
  45c818:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c81c:	add	x4, x4, #0x927
  45c820:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c824:	ldr	w8, [sp, #4]
  45c828:	tbnz	w8, #0, 45c838 <sd_dhcp_lease_get_dns+0xa0>
  45c82c:	mov	w8, #0xffffffea            	// #-22
  45c830:	stur	w8, [x29, #-4]
  45c834:	b	45c8e0 <sd_dhcp_lease_get_dns+0x148>
  45c838:	ldr	x8, [sp, #24]
  45c83c:	cmp	x8, #0x0
  45c840:	cset	w9, ne  // ne = any
  45c844:	mov	w10, #0x1                   	// #1
  45c848:	eor	w9, w9, #0x1
  45c84c:	eor	w9, w9, w10
  45c850:	and	w9, w9, #0x1
  45c854:	mov	w0, w9
  45c858:	sxtw	x8, w0
  45c85c:	cbz	x8, 45c86c <sd_dhcp_lease_get_dns+0xd4>
  45c860:	ldr	w8, [sp, #20]
  45c864:	tbnz	w8, #0, 45c8a4 <sd_dhcp_lease_get_dns+0x10c>
  45c868:	b	45c898 <sd_dhcp_lease_get_dns+0x100>
  45c86c:	mov	w8, wzr
  45c870:	mov	w0, w8
  45c874:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c878:	add	x1, x1, #0x7ed
  45c87c:	ldr	x2, [sp, #8]
  45c880:	mov	w3, #0x65                  	// #101
  45c884:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c888:	add	x4, x4, #0x927
  45c88c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c890:	ldr	w8, [sp, #4]
  45c894:	tbnz	w8, #0, 45c8a4 <sd_dhcp_lease_get_dns+0x10c>
  45c898:	mov	w8, #0xffffffea            	// #-22
  45c89c:	stur	w8, [x29, #-4]
  45c8a0:	b	45c8e0 <sd_dhcp_lease_get_dns+0x148>
  45c8a4:	ldur	x8, [x29, #-16]
  45c8a8:	ldr	x8, [x8, #72]
  45c8ac:	cmp	x8, #0x0
  45c8b0:	cset	w9, hi  // hi = pmore
  45c8b4:	tbnz	w9, #0, 45c8c4 <sd_dhcp_lease_get_dns+0x12c>
  45c8b8:	mov	w8, #0xffffffc3            	// #-61
  45c8bc:	stur	w8, [x29, #-4]
  45c8c0:	b	45c8e0 <sd_dhcp_lease_get_dns+0x148>
  45c8c4:	ldur	x8, [x29, #-16]
  45c8c8:	ldr	x8, [x8, #64]
  45c8cc:	ldr	x9, [sp, #24]
  45c8d0:	str	x8, [x9]
  45c8d4:	ldur	x8, [x29, #-16]
  45c8d8:	ldr	x8, [x8, #72]
  45c8dc:	stur	w8, [x29, #-4]
  45c8e0:	ldur	w0, [x29, #-4]
  45c8e4:	ldp	x29, x30, [sp, #48]
  45c8e8:	add	sp, sp, #0x40
  45c8ec:	ret

000000000045c8f0 <sd_dhcp_lease_get_ntp>:
  45c8f0:	sub	sp, sp, #0x40
  45c8f4:	stp	x29, x30, [sp, #48]
  45c8f8:	add	x29, sp, #0x30
  45c8fc:	mov	w8, #0x1                   	// #1
  45c900:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45c904:	add	x9, x9, #0x782
  45c908:	add	x9, x9, #0x3
  45c90c:	mov	w10, #0x0                   	// #0
  45c910:	stur	x0, [x29, #-16]
  45c914:	str	x1, [sp, #24]
  45c918:	str	w8, [sp, #20]
  45c91c:	str	x9, [sp, #8]
  45c920:	str	w10, [sp, #4]
  45c924:	ldur	x8, [x29, #-16]
  45c928:	cmp	x8, #0x0
  45c92c:	cset	w9, ne  // ne = any
  45c930:	mov	w10, #0x1                   	// #1
  45c934:	eor	w9, w9, #0x1
  45c938:	eor	w9, w9, w10
  45c93c:	and	w9, w9, #0x1
  45c940:	mov	w0, w9
  45c944:	sxtw	x8, w0
  45c948:	cbz	x8, 45c958 <sd_dhcp_lease_get_ntp+0x68>
  45c94c:	ldr	w8, [sp, #20]
  45c950:	tbnz	w8, #0, 45c990 <sd_dhcp_lease_get_ntp+0xa0>
  45c954:	b	45c984 <sd_dhcp_lease_get_ntp+0x94>
  45c958:	mov	w8, wzr
  45c95c:	mov	w0, w8
  45c960:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c964:	add	x1, x1, #0x77c
  45c968:	ldr	x2, [sp, #8]
  45c96c:	mov	w3, #0x6f                  	// #111
  45c970:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c974:	add	x4, x4, #0x96b
  45c978:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c97c:	ldr	w8, [sp, #4]
  45c980:	tbnz	w8, #0, 45c990 <sd_dhcp_lease_get_ntp+0xa0>
  45c984:	mov	w8, #0xffffffea            	// #-22
  45c988:	stur	w8, [x29, #-4]
  45c98c:	b	45ca38 <sd_dhcp_lease_get_ntp+0x148>
  45c990:	ldr	x8, [sp, #24]
  45c994:	cmp	x8, #0x0
  45c998:	cset	w9, ne  // ne = any
  45c99c:	mov	w10, #0x1                   	// #1
  45c9a0:	eor	w9, w9, #0x1
  45c9a4:	eor	w9, w9, w10
  45c9a8:	and	w9, w9, #0x1
  45c9ac:	mov	w0, w9
  45c9b0:	sxtw	x8, w0
  45c9b4:	cbz	x8, 45c9c4 <sd_dhcp_lease_get_ntp+0xd4>
  45c9b8:	ldr	w8, [sp, #20]
  45c9bc:	tbnz	w8, #0, 45c9fc <sd_dhcp_lease_get_ntp+0x10c>
  45c9c0:	b	45c9f0 <sd_dhcp_lease_get_ntp+0x100>
  45c9c4:	mov	w8, wzr
  45c9c8:	mov	w0, w8
  45c9cc:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45c9d0:	add	x1, x1, #0x7ed
  45c9d4:	ldr	x2, [sp, #8]
  45c9d8:	mov	w3, #0x70                  	// #112
  45c9dc:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45c9e0:	add	x4, x4, #0x96b
  45c9e4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45c9e8:	ldr	w8, [sp, #4]
  45c9ec:	tbnz	w8, #0, 45c9fc <sd_dhcp_lease_get_ntp+0x10c>
  45c9f0:	mov	w8, #0xffffffea            	// #-22
  45c9f4:	stur	w8, [x29, #-4]
  45c9f8:	b	45ca38 <sd_dhcp_lease_get_ntp+0x148>
  45c9fc:	ldur	x8, [x29, #-16]
  45ca00:	ldr	x8, [x8, #88]
  45ca04:	cmp	x8, #0x0
  45ca08:	cset	w9, hi  // hi = pmore
  45ca0c:	tbnz	w9, #0, 45ca1c <sd_dhcp_lease_get_ntp+0x12c>
  45ca10:	mov	w8, #0xffffffc3            	// #-61
  45ca14:	stur	w8, [x29, #-4]
  45ca18:	b	45ca38 <sd_dhcp_lease_get_ntp+0x148>
  45ca1c:	ldur	x8, [x29, #-16]
  45ca20:	ldr	x8, [x8, #80]
  45ca24:	ldr	x9, [sp, #24]
  45ca28:	str	x8, [x9]
  45ca2c:	ldur	x8, [x29, #-16]
  45ca30:	ldr	x8, [x8, #88]
  45ca34:	stur	w8, [x29, #-4]
  45ca38:	ldur	w0, [x29, #-4]
  45ca3c:	ldp	x29, x30, [sp, #48]
  45ca40:	add	sp, sp, #0x40
  45ca44:	ret

000000000045ca48 <sd_dhcp_lease_get_sip>:
  45ca48:	sub	sp, sp, #0x40
  45ca4c:	stp	x29, x30, [sp, #48]
  45ca50:	add	x29, sp, #0x30
  45ca54:	mov	w8, #0x1                   	// #1
  45ca58:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45ca5c:	add	x9, x9, #0x782
  45ca60:	add	x9, x9, #0x3
  45ca64:	mov	w10, #0x0                   	// #0
  45ca68:	stur	x0, [x29, #-16]
  45ca6c:	str	x1, [sp, #24]
  45ca70:	str	w8, [sp, #20]
  45ca74:	str	x9, [sp, #8]
  45ca78:	str	w10, [sp, #4]
  45ca7c:	ldur	x8, [x29, #-16]
  45ca80:	cmp	x8, #0x0
  45ca84:	cset	w9, ne  // ne = any
  45ca88:	mov	w10, #0x1                   	// #1
  45ca8c:	eor	w9, w9, #0x1
  45ca90:	eor	w9, w9, w10
  45ca94:	and	w9, w9, #0x1
  45ca98:	mov	w0, w9
  45ca9c:	sxtw	x8, w0
  45caa0:	cbz	x8, 45cab0 <sd_dhcp_lease_get_sip+0x68>
  45caa4:	ldr	w8, [sp, #20]
  45caa8:	tbnz	w8, #0, 45cae8 <sd_dhcp_lease_get_sip+0xa0>
  45caac:	b	45cadc <sd_dhcp_lease_get_sip+0x94>
  45cab0:	mov	w8, wzr
  45cab4:	mov	w0, w8
  45cab8:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cabc:	add	x1, x1, #0x77c
  45cac0:	ldr	x2, [sp, #8]
  45cac4:	mov	w3, #0x7a                  	// #122
  45cac8:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cacc:	add	x4, x4, #0x9af
  45cad0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cad4:	ldr	w8, [sp, #4]
  45cad8:	tbnz	w8, #0, 45cae8 <sd_dhcp_lease_get_sip+0xa0>
  45cadc:	mov	w8, #0xffffffea            	// #-22
  45cae0:	stur	w8, [x29, #-4]
  45cae4:	b	45cb90 <sd_dhcp_lease_get_sip+0x148>
  45cae8:	ldr	x8, [sp, #24]
  45caec:	cmp	x8, #0x0
  45caf0:	cset	w9, ne  // ne = any
  45caf4:	mov	w10, #0x1                   	// #1
  45caf8:	eor	w9, w9, #0x1
  45cafc:	eor	w9, w9, w10
  45cb00:	and	w9, w9, #0x1
  45cb04:	mov	w0, w9
  45cb08:	sxtw	x8, w0
  45cb0c:	cbz	x8, 45cb1c <sd_dhcp_lease_get_sip+0xd4>
  45cb10:	ldr	w8, [sp, #20]
  45cb14:	tbnz	w8, #0, 45cb54 <sd_dhcp_lease_get_sip+0x10c>
  45cb18:	b	45cb48 <sd_dhcp_lease_get_sip+0x100>
  45cb1c:	mov	w8, wzr
  45cb20:	mov	w0, w8
  45cb24:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cb28:	add	x1, x1, #0x7ed
  45cb2c:	ldr	x2, [sp, #8]
  45cb30:	mov	w3, #0x7b                  	// #123
  45cb34:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cb38:	add	x4, x4, #0x9af
  45cb3c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cb40:	ldr	w8, [sp, #4]
  45cb44:	tbnz	w8, #0, 45cb54 <sd_dhcp_lease_get_sip+0x10c>
  45cb48:	mov	w8, #0xffffffea            	// #-22
  45cb4c:	stur	w8, [x29, #-4]
  45cb50:	b	45cb90 <sd_dhcp_lease_get_sip+0x148>
  45cb54:	ldur	x8, [x29, #-16]
  45cb58:	ldr	x8, [x8, #104]
  45cb5c:	cmp	x8, #0x0
  45cb60:	cset	w9, hi  // hi = pmore
  45cb64:	tbnz	w9, #0, 45cb74 <sd_dhcp_lease_get_sip+0x12c>
  45cb68:	mov	w8, #0xffffffc3            	// #-61
  45cb6c:	stur	w8, [x29, #-4]
  45cb70:	b	45cb90 <sd_dhcp_lease_get_sip+0x148>
  45cb74:	ldur	x8, [x29, #-16]
  45cb78:	ldr	x8, [x8, #96]
  45cb7c:	ldr	x9, [sp, #24]
  45cb80:	str	x8, [x9]
  45cb84:	ldur	x8, [x29, #-16]
  45cb88:	ldr	x8, [x8, #104]
  45cb8c:	stur	w8, [x29, #-4]
  45cb90:	ldur	w0, [x29, #-4]
  45cb94:	ldp	x29, x30, [sp, #48]
  45cb98:	add	sp, sp, #0x40
  45cb9c:	ret

000000000045cba0 <sd_dhcp_lease_get_domainname>:
  45cba0:	sub	sp, sp, #0x40
  45cba4:	stp	x29, x30, [sp, #48]
  45cba8:	add	x29, sp, #0x30
  45cbac:	mov	w8, #0x1                   	// #1
  45cbb0:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45cbb4:	add	x9, x9, #0x782
  45cbb8:	add	x9, x9, #0x3
  45cbbc:	mov	w10, #0x0                   	// #0
  45cbc0:	stur	x0, [x29, #-16]
  45cbc4:	str	x1, [sp, #24]
  45cbc8:	str	w8, [sp, #20]
  45cbcc:	str	x9, [sp, #8]
  45cbd0:	str	w10, [sp, #4]
  45cbd4:	ldur	x8, [x29, #-16]
  45cbd8:	cmp	x8, #0x0
  45cbdc:	cset	w9, ne  // ne = any
  45cbe0:	mov	w10, #0x1                   	// #1
  45cbe4:	eor	w9, w9, #0x1
  45cbe8:	eor	w9, w9, w10
  45cbec:	and	w9, w9, #0x1
  45cbf0:	mov	w0, w9
  45cbf4:	sxtw	x8, w0
  45cbf8:	cbz	x8, 45cc08 <sd_dhcp_lease_get_domainname+0x68>
  45cbfc:	ldr	w8, [sp, #20]
  45cc00:	tbnz	w8, #0, 45cc40 <sd_dhcp_lease_get_domainname+0xa0>
  45cc04:	b	45cc34 <sd_dhcp_lease_get_domainname+0x94>
  45cc08:	mov	w8, wzr
  45cc0c:	mov	w0, w8
  45cc10:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cc14:	add	x1, x1, #0x77c
  45cc18:	ldr	x2, [sp, #8]
  45cc1c:	mov	w3, #0x85                  	// #133
  45cc20:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cc24:	add	x4, x4, #0x9f3
  45cc28:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cc2c:	ldr	w8, [sp, #4]
  45cc30:	tbnz	w8, #0, 45cc40 <sd_dhcp_lease_get_domainname+0xa0>
  45cc34:	mov	w8, #0xffffffea            	// #-22
  45cc38:	stur	w8, [x29, #-4]
  45cc3c:	b	45ccd8 <sd_dhcp_lease_get_domainname+0x138>
  45cc40:	ldr	x8, [sp, #24]
  45cc44:	cmp	x8, #0x0
  45cc48:	cset	w9, ne  // ne = any
  45cc4c:	mov	w10, #0x1                   	// #1
  45cc50:	eor	w9, w9, #0x1
  45cc54:	eor	w9, w9, w10
  45cc58:	and	w9, w9, #0x1
  45cc5c:	mov	w0, w9
  45cc60:	sxtw	x8, w0
  45cc64:	cbz	x8, 45cc74 <sd_dhcp_lease_get_domainname+0xd4>
  45cc68:	ldr	w8, [sp, #20]
  45cc6c:	tbnz	w8, #0, 45ccac <sd_dhcp_lease_get_domainname+0x10c>
  45cc70:	b	45cca0 <sd_dhcp_lease_get_domainname+0x100>
  45cc74:	mov	w8, wzr
  45cc78:	mov	w0, w8
  45cc7c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cc80:	add	x1, x1, #0xa34
  45cc84:	ldr	x2, [sp, #8]
  45cc88:	mov	w3, #0x86                  	// #134
  45cc8c:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cc90:	add	x4, x4, #0x9f3
  45cc94:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cc98:	ldr	w8, [sp, #4]
  45cc9c:	tbnz	w8, #0, 45ccac <sd_dhcp_lease_get_domainname+0x10c>
  45cca0:	mov	w8, #0xffffffea            	// #-22
  45cca4:	stur	w8, [x29, #-4]
  45cca8:	b	45ccd8 <sd_dhcp_lease_get_domainname+0x138>
  45ccac:	ldur	x8, [x29, #-16]
  45ccb0:	ldr	x8, [x8, #144]
  45ccb4:	cbnz	x8, 45ccc4 <sd_dhcp_lease_get_domainname+0x124>
  45ccb8:	mov	w8, #0xffffffc3            	// #-61
  45ccbc:	stur	w8, [x29, #-4]
  45ccc0:	b	45ccd8 <sd_dhcp_lease_get_domainname+0x138>
  45ccc4:	ldur	x8, [x29, #-16]
  45ccc8:	ldr	x8, [x8, #144]
  45cccc:	ldr	x9, [sp, #24]
  45ccd0:	str	x8, [x9]
  45ccd4:	stur	wzr, [x29, #-4]
  45ccd8:	ldur	w0, [x29, #-4]
  45ccdc:	ldp	x29, x30, [sp, #48]
  45cce0:	add	sp, sp, #0x40
  45cce4:	ret

000000000045cce8 <sd_dhcp_lease_get_hostname>:
  45cce8:	sub	sp, sp, #0x40
  45ccec:	stp	x29, x30, [sp, #48]
  45ccf0:	add	x29, sp, #0x30
  45ccf4:	mov	w8, #0x1                   	// #1
  45ccf8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45ccfc:	add	x9, x9, #0x782
  45cd00:	add	x9, x9, #0x3
  45cd04:	mov	w10, #0x0                   	// #0
  45cd08:	stur	x0, [x29, #-16]
  45cd0c:	str	x1, [sp, #24]
  45cd10:	str	w8, [sp, #20]
  45cd14:	str	x9, [sp, #8]
  45cd18:	str	w10, [sp, #4]
  45cd1c:	ldur	x8, [x29, #-16]
  45cd20:	cmp	x8, #0x0
  45cd24:	cset	w9, ne  // ne = any
  45cd28:	mov	w10, #0x1                   	// #1
  45cd2c:	eor	w9, w9, #0x1
  45cd30:	eor	w9, w9, w10
  45cd34:	and	w9, w9, #0x1
  45cd38:	mov	w0, w9
  45cd3c:	sxtw	x8, w0
  45cd40:	cbz	x8, 45cd50 <sd_dhcp_lease_get_hostname+0x68>
  45cd44:	ldr	w8, [sp, #20]
  45cd48:	tbnz	w8, #0, 45cd88 <sd_dhcp_lease_get_hostname+0xa0>
  45cd4c:	b	45cd7c <sd_dhcp_lease_get_hostname+0x94>
  45cd50:	mov	w8, wzr
  45cd54:	mov	w0, w8
  45cd58:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cd5c:	add	x1, x1, #0x77c
  45cd60:	ldr	x2, [sp, #8]
  45cd64:	mov	w3, #0x90                  	// #144
  45cd68:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cd6c:	add	x4, x4, #0xa3f
  45cd70:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cd74:	ldr	w8, [sp, #4]
  45cd78:	tbnz	w8, #0, 45cd88 <sd_dhcp_lease_get_hostname+0xa0>
  45cd7c:	mov	w8, #0xffffffea            	// #-22
  45cd80:	stur	w8, [x29, #-4]
  45cd84:	b	45ce20 <sd_dhcp_lease_get_hostname+0x138>
  45cd88:	ldr	x8, [sp, #24]
  45cd8c:	cmp	x8, #0x0
  45cd90:	cset	w9, ne  // ne = any
  45cd94:	mov	w10, #0x1                   	// #1
  45cd98:	eor	w9, w9, #0x1
  45cd9c:	eor	w9, w9, w10
  45cda0:	and	w9, w9, #0x1
  45cda4:	mov	w0, w9
  45cda8:	sxtw	x8, w0
  45cdac:	cbz	x8, 45cdbc <sd_dhcp_lease_get_hostname+0xd4>
  45cdb0:	ldr	w8, [sp, #20]
  45cdb4:	tbnz	w8, #0, 45cdf4 <sd_dhcp_lease_get_hostname+0x10c>
  45cdb8:	b	45cde8 <sd_dhcp_lease_get_hostname+0x100>
  45cdbc:	mov	w8, wzr
  45cdc0:	mov	w0, w8
  45cdc4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cdc8:	add	x1, x1, #0xa7e
  45cdcc:	ldr	x2, [sp, #8]
  45cdd0:	mov	w3, #0x91                  	// #145
  45cdd4:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cdd8:	add	x4, x4, #0xa3f
  45cddc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cde0:	ldr	w8, [sp, #4]
  45cde4:	tbnz	w8, #0, 45cdf4 <sd_dhcp_lease_get_hostname+0x10c>
  45cde8:	mov	w8, #0xffffffea            	// #-22
  45cdec:	stur	w8, [x29, #-4]
  45cdf0:	b	45ce20 <sd_dhcp_lease_get_hostname+0x138>
  45cdf4:	ldur	x8, [x29, #-16]
  45cdf8:	ldr	x8, [x8, #160]
  45cdfc:	cbnz	x8, 45ce0c <sd_dhcp_lease_get_hostname+0x124>
  45ce00:	mov	w8, #0xffffffc3            	// #-61
  45ce04:	stur	w8, [x29, #-4]
  45ce08:	b	45ce20 <sd_dhcp_lease_get_hostname+0x138>
  45ce0c:	ldur	x8, [x29, #-16]
  45ce10:	ldr	x8, [x8, #160]
  45ce14:	ldr	x9, [sp, #24]
  45ce18:	str	x8, [x9]
  45ce1c:	stur	wzr, [x29, #-4]
  45ce20:	ldur	w0, [x29, #-4]
  45ce24:	ldp	x29, x30, [sp, #48]
  45ce28:	add	sp, sp, #0x40
  45ce2c:	ret

000000000045ce30 <sd_dhcp_lease_get_root_path>:
  45ce30:	sub	sp, sp, #0x40
  45ce34:	stp	x29, x30, [sp, #48]
  45ce38:	add	x29, sp, #0x30
  45ce3c:	mov	w8, #0x1                   	// #1
  45ce40:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45ce44:	add	x9, x9, #0x782
  45ce48:	add	x9, x9, #0x3
  45ce4c:	mov	w10, #0x0                   	// #0
  45ce50:	stur	x0, [x29, #-16]
  45ce54:	str	x1, [sp, #24]
  45ce58:	str	w8, [sp, #20]
  45ce5c:	str	x9, [sp, #8]
  45ce60:	str	w10, [sp, #4]
  45ce64:	ldur	x8, [x29, #-16]
  45ce68:	cmp	x8, #0x0
  45ce6c:	cset	w9, ne  // ne = any
  45ce70:	mov	w10, #0x1                   	// #1
  45ce74:	eor	w9, w9, #0x1
  45ce78:	eor	w9, w9, w10
  45ce7c:	and	w9, w9, #0x1
  45ce80:	mov	w0, w9
  45ce84:	sxtw	x8, w0
  45ce88:	cbz	x8, 45ce98 <sd_dhcp_lease_get_root_path+0x68>
  45ce8c:	ldr	w8, [sp, #20]
  45ce90:	tbnz	w8, #0, 45ced0 <sd_dhcp_lease_get_root_path+0xa0>
  45ce94:	b	45cec4 <sd_dhcp_lease_get_root_path+0x94>
  45ce98:	mov	w8, wzr
  45ce9c:	mov	w0, w8
  45cea0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cea4:	add	x1, x1, #0x77c
  45cea8:	ldr	x2, [sp, #8]
  45ceac:	mov	w3, #0x9b                  	// #155
  45ceb0:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45ceb4:	add	x4, x4, #0xa87
  45ceb8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cebc:	ldr	w8, [sp, #4]
  45cec0:	tbnz	w8, #0, 45ced0 <sd_dhcp_lease_get_root_path+0xa0>
  45cec4:	mov	w8, #0xffffffea            	// #-22
  45cec8:	stur	w8, [x29, #-4]
  45cecc:	b	45cf68 <sd_dhcp_lease_get_root_path+0x138>
  45ced0:	ldr	x8, [sp, #24]
  45ced4:	cmp	x8, #0x0
  45ced8:	cset	w9, ne  // ne = any
  45cedc:	mov	w10, #0x1                   	// #1
  45cee0:	eor	w9, w9, #0x1
  45cee4:	eor	w9, w9, w10
  45cee8:	and	w9, w9, #0x1
  45ceec:	mov	w0, w9
  45cef0:	sxtw	x8, w0
  45cef4:	cbz	x8, 45cf04 <sd_dhcp_lease_get_root_path+0xd4>
  45cef8:	ldr	w8, [sp, #20]
  45cefc:	tbnz	w8, #0, 45cf3c <sd_dhcp_lease_get_root_path+0x10c>
  45cf00:	b	45cf30 <sd_dhcp_lease_get_root_path+0x100>
  45cf04:	mov	w8, wzr
  45cf08:	mov	w0, w8
  45cf0c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cf10:	add	x1, x1, #0xac7
  45cf14:	ldr	x2, [sp, #8]
  45cf18:	mov	w3, #0x9c                  	// #156
  45cf1c:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cf20:	add	x4, x4, #0xa87
  45cf24:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45cf28:	ldr	w8, [sp, #4]
  45cf2c:	tbnz	w8, #0, 45cf3c <sd_dhcp_lease_get_root_path+0x10c>
  45cf30:	mov	w8, #0xffffffea            	// #-22
  45cf34:	stur	w8, [x29, #-4]
  45cf38:	b	45cf68 <sd_dhcp_lease_get_root_path+0x138>
  45cf3c:	ldur	x8, [x29, #-16]
  45cf40:	ldr	x8, [x8, #168]
  45cf44:	cbnz	x8, 45cf54 <sd_dhcp_lease_get_root_path+0x124>
  45cf48:	mov	w8, #0xffffffc3            	// #-61
  45cf4c:	stur	w8, [x29, #-4]
  45cf50:	b	45cf68 <sd_dhcp_lease_get_root_path+0x138>
  45cf54:	ldur	x8, [x29, #-16]
  45cf58:	ldr	x8, [x8, #168]
  45cf5c:	ldr	x9, [sp, #24]
  45cf60:	str	x8, [x9]
  45cf64:	stur	wzr, [x29, #-4]
  45cf68:	ldur	w0, [x29, #-4]
  45cf6c:	ldp	x29, x30, [sp, #48]
  45cf70:	add	sp, sp, #0x40
  45cf74:	ret

000000000045cf78 <sd_dhcp_lease_get_router>:
  45cf78:	sub	sp, sp, #0x40
  45cf7c:	stp	x29, x30, [sp, #48]
  45cf80:	add	x29, sp, #0x30
  45cf84:	mov	w8, #0x1                   	// #1
  45cf88:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45cf8c:	add	x9, x9, #0x782
  45cf90:	add	x9, x9, #0x3
  45cf94:	mov	w10, #0x0                   	// #0
  45cf98:	stur	x0, [x29, #-16]
  45cf9c:	str	x1, [sp, #24]
  45cfa0:	str	w8, [sp, #20]
  45cfa4:	str	x9, [sp, #8]
  45cfa8:	str	w10, [sp, #4]
  45cfac:	ldur	x8, [x29, #-16]
  45cfb0:	cmp	x8, #0x0
  45cfb4:	cset	w9, ne  // ne = any
  45cfb8:	mov	w10, #0x1                   	// #1
  45cfbc:	eor	w9, w9, #0x1
  45cfc0:	eor	w9, w9, w10
  45cfc4:	and	w9, w9, #0x1
  45cfc8:	mov	w0, w9
  45cfcc:	sxtw	x8, w0
  45cfd0:	cbz	x8, 45cfe0 <sd_dhcp_lease_get_router+0x68>
  45cfd4:	ldr	w8, [sp, #20]
  45cfd8:	tbnz	w8, #0, 45d018 <sd_dhcp_lease_get_router+0xa0>
  45cfdc:	b	45d00c <sd_dhcp_lease_get_router+0x94>
  45cfe0:	mov	w8, wzr
  45cfe4:	mov	w0, w8
  45cfe8:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45cfec:	add	x1, x1, #0x77c
  45cff0:	ldr	x2, [sp, #8]
  45cff4:	mov	w3, #0xa6                  	// #166
  45cff8:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45cffc:	add	x4, x4, #0xad1
  45d000:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d004:	ldr	w8, [sp, #4]
  45d008:	tbnz	w8, #0, 45d018 <sd_dhcp_lease_get_router+0xa0>
  45d00c:	mov	w8, #0xffffffea            	// #-22
  45d010:	stur	w8, [x29, #-4]
  45d014:	b	45d0c0 <sd_dhcp_lease_get_router+0x148>
  45d018:	ldr	x8, [sp, #24]
  45d01c:	cmp	x8, #0x0
  45d020:	cset	w9, ne  // ne = any
  45d024:	mov	w10, #0x1                   	// #1
  45d028:	eor	w9, w9, #0x1
  45d02c:	eor	w9, w9, w10
  45d030:	and	w9, w9, #0x1
  45d034:	mov	w0, w9
  45d038:	sxtw	x8, w0
  45d03c:	cbz	x8, 45d04c <sd_dhcp_lease_get_router+0xd4>
  45d040:	ldr	w8, [sp, #20]
  45d044:	tbnz	w8, #0, 45d084 <sd_dhcp_lease_get_router+0x10c>
  45d048:	b	45d078 <sd_dhcp_lease_get_router+0x100>
  45d04c:	mov	w8, wzr
  45d050:	mov	w0, w8
  45d054:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d058:	add	x1, x1, #0x7ed
  45d05c:	ldr	x2, [sp, #8]
  45d060:	mov	w3, #0xa7                  	// #167
  45d064:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d068:	add	x4, x4, #0xad1
  45d06c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d070:	ldr	w8, [sp, #4]
  45d074:	tbnz	w8, #0, 45d084 <sd_dhcp_lease_get_router+0x10c>
  45d078:	mov	w8, #0xffffffea            	// #-22
  45d07c:	stur	w8, [x29, #-4]
  45d080:	b	45d0c0 <sd_dhcp_lease_get_router+0x148>
  45d084:	ldur	x8, [x29, #-16]
  45d088:	ldr	x8, [x8, #56]
  45d08c:	cmp	x8, #0x0
  45d090:	cset	w9, hi  // hi = pmore
  45d094:	tbnz	w9, #0, 45d0a4 <sd_dhcp_lease_get_router+0x12c>
  45d098:	mov	w8, #0xffffffc3            	// #-61
  45d09c:	stur	w8, [x29, #-4]
  45d0a0:	b	45d0c0 <sd_dhcp_lease_get_router+0x148>
  45d0a4:	ldur	x8, [x29, #-16]
  45d0a8:	ldr	x8, [x8, #48]
  45d0ac:	ldr	x9, [sp, #24]
  45d0b0:	str	x8, [x9]
  45d0b4:	ldur	x8, [x29, #-16]
  45d0b8:	ldr	x8, [x8, #56]
  45d0bc:	stur	w8, [x29, #-4]
  45d0c0:	ldur	w0, [x29, #-4]
  45d0c4:	ldp	x29, x30, [sp, #48]
  45d0c8:	add	sp, sp, #0x40
  45d0cc:	ret

000000000045d0d0 <sd_dhcp_lease_get_netmask>:
  45d0d0:	sub	sp, sp, #0x40
  45d0d4:	stp	x29, x30, [sp, #48]
  45d0d8:	add	x29, sp, #0x30
  45d0dc:	mov	w8, #0x1                   	// #1
  45d0e0:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d0e4:	add	x9, x9, #0x782
  45d0e8:	add	x9, x9, #0x3
  45d0ec:	mov	w10, #0x0                   	// #0
  45d0f0:	stur	x0, [x29, #-16]
  45d0f4:	str	x1, [sp, #24]
  45d0f8:	str	w8, [sp, #20]
  45d0fc:	str	x9, [sp, #8]
  45d100:	str	w10, [sp, #4]
  45d104:	ldur	x8, [x29, #-16]
  45d108:	cmp	x8, #0x0
  45d10c:	cset	w9, ne  // ne = any
  45d110:	mov	w10, #0x1                   	// #1
  45d114:	eor	w9, w9, #0x1
  45d118:	eor	w9, w9, w10
  45d11c:	and	w9, w9, #0x1
  45d120:	mov	w0, w9
  45d124:	sxtw	x8, w0
  45d128:	cbz	x8, 45d138 <sd_dhcp_lease_get_netmask+0x68>
  45d12c:	ldr	w8, [sp, #20]
  45d130:	tbnz	w8, #0, 45d170 <sd_dhcp_lease_get_netmask+0xa0>
  45d134:	b	45d164 <sd_dhcp_lease_get_netmask+0x94>
  45d138:	mov	w8, wzr
  45d13c:	mov	w0, w8
  45d140:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d144:	add	x1, x1, #0x77c
  45d148:	ldr	x2, [sp, #8]
  45d14c:	mov	w3, #0xb1                  	// #177
  45d150:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d154:	add	x4, x4, #0xb18
  45d158:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d15c:	ldr	w8, [sp, #4]
  45d160:	tbnz	w8, #0, 45d170 <sd_dhcp_lease_get_netmask+0xa0>
  45d164:	mov	w8, #0xffffffea            	// #-22
  45d168:	stur	w8, [x29, #-4]
  45d16c:	b	45d208 <sd_dhcp_lease_get_netmask+0x138>
  45d170:	ldr	x8, [sp, #24]
  45d174:	cmp	x8, #0x0
  45d178:	cset	w9, ne  // ne = any
  45d17c:	mov	w10, #0x1                   	// #1
  45d180:	eor	w9, w9, #0x1
  45d184:	eor	w9, w9, w10
  45d188:	and	w9, w9, #0x1
  45d18c:	mov	w0, w9
  45d190:	sxtw	x8, w0
  45d194:	cbz	x8, 45d1a4 <sd_dhcp_lease_get_netmask+0xd4>
  45d198:	ldr	w8, [sp, #20]
  45d19c:	tbnz	w8, #0, 45d1dc <sd_dhcp_lease_get_netmask+0x10c>
  45d1a0:	b	45d1d0 <sd_dhcp_lease_get_netmask+0x100>
  45d1a4:	mov	w8, wzr
  45d1a8:	mov	w0, w8
  45d1ac:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d1b0:	add	x1, x1, #0x7ed
  45d1b4:	ldr	x2, [sp, #8]
  45d1b8:	mov	w3, #0xb2                  	// #178
  45d1bc:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d1c0:	add	x4, x4, #0xb18
  45d1c4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d1c8:	ldr	w8, [sp, #4]
  45d1cc:	tbnz	w8, #0, 45d1dc <sd_dhcp_lease_get_netmask+0x10c>
  45d1d0:	mov	w8, #0xffffffea            	// #-22
  45d1d4:	stur	w8, [x29, #-4]
  45d1d8:	b	45d208 <sd_dhcp_lease_get_netmask+0x138>
  45d1dc:	ldur	x8, [x29, #-16]
  45d1e0:	ldrb	w9, [x8, #28]
  45d1e4:	tbnz	w9, #0, 45d1f4 <sd_dhcp_lease_get_netmask+0x124>
  45d1e8:	mov	w8, #0xffffffc3            	// #-61
  45d1ec:	stur	w8, [x29, #-4]
  45d1f0:	b	45d208 <sd_dhcp_lease_get_netmask+0x138>
  45d1f4:	ldur	x8, [x29, #-16]
  45d1f8:	ldr	w9, [x8, #32]
  45d1fc:	ldr	x8, [sp, #24]
  45d200:	str	w9, [x8]
  45d204:	stur	wzr, [x29, #-4]
  45d208:	ldur	w0, [x29, #-4]
  45d20c:	ldp	x29, x30, [sp, #48]
  45d210:	add	sp, sp, #0x40
  45d214:	ret

000000000045d218 <sd_dhcp_lease_get_server_identifier>:
  45d218:	sub	sp, sp, #0x40
  45d21c:	stp	x29, x30, [sp, #48]
  45d220:	add	x29, sp, #0x30
  45d224:	mov	w8, #0x1                   	// #1
  45d228:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d22c:	add	x9, x9, #0x782
  45d230:	add	x9, x9, #0x3
  45d234:	mov	w10, #0x0                   	// #0
  45d238:	stur	x0, [x29, #-16]
  45d23c:	str	x1, [sp, #24]
  45d240:	str	w8, [sp, #20]
  45d244:	str	x9, [sp, #8]
  45d248:	str	w10, [sp, #4]
  45d24c:	ldur	x8, [x29, #-16]
  45d250:	cmp	x8, #0x0
  45d254:	cset	w9, ne  // ne = any
  45d258:	mov	w10, #0x1                   	// #1
  45d25c:	eor	w9, w9, #0x1
  45d260:	eor	w9, w9, w10
  45d264:	and	w9, w9, #0x1
  45d268:	mov	w0, w9
  45d26c:	sxtw	x8, w0
  45d270:	cbz	x8, 45d280 <sd_dhcp_lease_get_server_identifier+0x68>
  45d274:	ldr	w8, [sp, #20]
  45d278:	tbnz	w8, #0, 45d2b8 <sd_dhcp_lease_get_server_identifier+0xa0>
  45d27c:	b	45d2ac <sd_dhcp_lease_get_server_identifier+0x94>
  45d280:	mov	w8, wzr
  45d284:	mov	w0, w8
  45d288:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d28c:	add	x1, x1, #0x77c
  45d290:	ldr	x2, [sp, #8]
  45d294:	mov	w3, #0xbc                  	// #188
  45d298:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d29c:	add	x4, x4, #0xb59
  45d2a0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d2a4:	ldr	w8, [sp, #4]
  45d2a8:	tbnz	w8, #0, 45d2b8 <sd_dhcp_lease_get_server_identifier+0xa0>
  45d2ac:	mov	w8, #0xffffffea            	// #-22
  45d2b0:	stur	w8, [x29, #-4]
  45d2b4:	b	45d350 <sd_dhcp_lease_get_server_identifier+0x138>
  45d2b8:	ldr	x8, [sp, #24]
  45d2bc:	cmp	x8, #0x0
  45d2c0:	cset	w9, ne  // ne = any
  45d2c4:	mov	w10, #0x1                   	// #1
  45d2c8:	eor	w9, w9, #0x1
  45d2cc:	eor	w9, w9, w10
  45d2d0:	and	w9, w9, #0x1
  45d2d4:	mov	w0, w9
  45d2d8:	sxtw	x8, w0
  45d2dc:	cbz	x8, 45d2ec <sd_dhcp_lease_get_server_identifier+0xd4>
  45d2e0:	ldr	w8, [sp, #20]
  45d2e4:	tbnz	w8, #0, 45d324 <sd_dhcp_lease_get_server_identifier+0x10c>
  45d2e8:	b	45d318 <sd_dhcp_lease_get_server_identifier+0x100>
  45d2ec:	mov	w8, wzr
  45d2f0:	mov	w0, w8
  45d2f4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d2f8:	add	x1, x1, #0x7ed
  45d2fc:	ldr	x2, [sp, #8]
  45d300:	mov	w3, #0xbd                  	// #189
  45d304:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d308:	add	x4, x4, #0xb59
  45d30c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d310:	ldr	w8, [sp, #4]
  45d314:	tbnz	w8, #0, 45d324 <sd_dhcp_lease_get_server_identifier+0x10c>
  45d318:	mov	w8, #0xffffffea            	// #-22
  45d31c:	stur	w8, [x29, #-4]
  45d320:	b	45d350 <sd_dhcp_lease_get_server_identifier+0x138>
  45d324:	ldur	x8, [x29, #-16]
  45d328:	ldr	w9, [x8, #20]
  45d32c:	cbnz	w9, 45d33c <sd_dhcp_lease_get_server_identifier+0x124>
  45d330:	mov	w8, #0xffffffc3            	// #-61
  45d334:	stur	w8, [x29, #-4]
  45d338:	b	45d350 <sd_dhcp_lease_get_server_identifier+0x138>
  45d33c:	ldur	x8, [x29, #-16]
  45d340:	ldr	w9, [x8, #20]
  45d344:	ldr	x8, [sp, #24]
  45d348:	str	w9, [x8]
  45d34c:	stur	wzr, [x29, #-4]
  45d350:	ldur	w0, [x29, #-4]
  45d354:	ldp	x29, x30, [sp, #48]
  45d358:	add	sp, sp, #0x40
  45d35c:	ret

000000000045d360 <sd_dhcp_lease_get_next_server>:
  45d360:	sub	sp, sp, #0x40
  45d364:	stp	x29, x30, [sp, #48]
  45d368:	add	x29, sp, #0x30
  45d36c:	mov	w8, #0x1                   	// #1
  45d370:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d374:	add	x9, x9, #0x782
  45d378:	add	x9, x9, #0x3
  45d37c:	mov	w10, #0x0                   	// #0
  45d380:	stur	x0, [x29, #-16]
  45d384:	str	x1, [sp, #24]
  45d388:	str	w8, [sp, #20]
  45d38c:	str	x9, [sp, #8]
  45d390:	str	w10, [sp, #4]
  45d394:	ldur	x8, [x29, #-16]
  45d398:	cmp	x8, #0x0
  45d39c:	cset	w9, ne  // ne = any
  45d3a0:	mov	w10, #0x1                   	// #1
  45d3a4:	eor	w9, w9, #0x1
  45d3a8:	eor	w9, w9, w10
  45d3ac:	and	w9, w9, #0x1
  45d3b0:	mov	w0, w9
  45d3b4:	sxtw	x8, w0
  45d3b8:	cbz	x8, 45d3c8 <sd_dhcp_lease_get_next_server+0x68>
  45d3bc:	ldr	w8, [sp, #20]
  45d3c0:	tbnz	w8, #0, 45d400 <sd_dhcp_lease_get_next_server+0xa0>
  45d3c4:	b	45d3f4 <sd_dhcp_lease_get_next_server+0x94>
  45d3c8:	mov	w8, wzr
  45d3cc:	mov	w0, w8
  45d3d0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d3d4:	add	x1, x1, #0x77c
  45d3d8:	ldr	x2, [sp, #8]
  45d3dc:	mov	w3, #0xc7                  	// #199
  45d3e0:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d3e4:	add	x4, x4, #0xba4
  45d3e8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d3ec:	ldr	w8, [sp, #4]
  45d3f0:	tbnz	w8, #0, 45d400 <sd_dhcp_lease_get_next_server+0xa0>
  45d3f4:	mov	w8, #0xffffffea            	// #-22
  45d3f8:	stur	w8, [x29, #-4]
  45d3fc:	b	45d498 <sd_dhcp_lease_get_next_server+0x138>
  45d400:	ldr	x8, [sp, #24]
  45d404:	cmp	x8, #0x0
  45d408:	cset	w9, ne  // ne = any
  45d40c:	mov	w10, #0x1                   	// #1
  45d410:	eor	w9, w9, #0x1
  45d414:	eor	w9, w9, w10
  45d418:	and	w9, w9, #0x1
  45d41c:	mov	w0, w9
  45d420:	sxtw	x8, w0
  45d424:	cbz	x8, 45d434 <sd_dhcp_lease_get_next_server+0xd4>
  45d428:	ldr	w8, [sp, #20]
  45d42c:	tbnz	w8, #0, 45d46c <sd_dhcp_lease_get_next_server+0x10c>
  45d430:	b	45d460 <sd_dhcp_lease_get_next_server+0x100>
  45d434:	mov	w8, wzr
  45d438:	mov	w0, w8
  45d43c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d440:	add	x1, x1, #0x7ed
  45d444:	ldr	x2, [sp, #8]
  45d448:	mov	w3, #0xc8                  	// #200
  45d44c:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d450:	add	x4, x4, #0xba4
  45d454:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d458:	ldr	w8, [sp, #4]
  45d45c:	tbnz	w8, #0, 45d46c <sd_dhcp_lease_get_next_server+0x10c>
  45d460:	mov	w8, #0xffffffea            	// #-22
  45d464:	stur	w8, [x29, #-4]
  45d468:	b	45d498 <sd_dhcp_lease_get_next_server+0x138>
  45d46c:	ldur	x8, [x29, #-16]
  45d470:	ldr	w9, [x8, #24]
  45d474:	cbnz	w9, 45d484 <sd_dhcp_lease_get_next_server+0x124>
  45d478:	mov	w8, #0xffffffc3            	// #-61
  45d47c:	stur	w8, [x29, #-4]
  45d480:	b	45d498 <sd_dhcp_lease_get_next_server+0x138>
  45d484:	ldur	x8, [x29, #-16]
  45d488:	ldr	w9, [x8, #24]
  45d48c:	ldr	x8, [sp, #24]
  45d490:	str	w9, [x8]
  45d494:	stur	wzr, [x29, #-4]
  45d498:	ldur	w0, [x29, #-4]
  45d49c:	ldp	x29, x30, [sp, #48]
  45d4a0:	add	sp, sp, #0x40
  45d4a4:	ret

000000000045d4a8 <sd_dhcp_lease_get_routes>:
  45d4a8:	sub	sp, sp, #0x50
  45d4ac:	stp	x29, x30, [sp, #64]
  45d4b0:	add	x29, sp, #0x40
  45d4b4:	mov	w8, #0x1                   	// #1
  45d4b8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d4bc:	add	x9, x9, #0x782
  45d4c0:	add	x9, x9, #0x3
  45d4c4:	mov	w10, #0x0                   	// #0
  45d4c8:	stur	x0, [x29, #-16]
  45d4cc:	stur	x1, [x29, #-24]
  45d4d0:	str	w8, [sp, #24]
  45d4d4:	str	x9, [sp, #16]
  45d4d8:	str	w10, [sp, #12]
  45d4dc:	ldur	x8, [x29, #-16]
  45d4e0:	cmp	x8, #0x0
  45d4e4:	cset	w9, ne  // ne = any
  45d4e8:	mov	w10, #0x1                   	// #1
  45d4ec:	eor	w9, w9, #0x1
  45d4f0:	eor	w9, w9, w10
  45d4f4:	and	w9, w9, #0x1
  45d4f8:	mov	w0, w9
  45d4fc:	sxtw	x8, w0
  45d500:	cbz	x8, 45d510 <sd_dhcp_lease_get_routes+0x68>
  45d504:	ldr	w8, [sp, #24]
  45d508:	tbnz	w8, #0, 45d548 <sd_dhcp_lease_get_routes+0xa0>
  45d50c:	b	45d53c <sd_dhcp_lease_get_routes+0x94>
  45d510:	mov	w8, wzr
  45d514:	mov	w0, w8
  45d518:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d51c:	add	x1, x1, #0x77c
  45d520:	ldr	x2, [sp, #16]
  45d524:	mov	w3, #0xd9                  	// #217
  45d528:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d52c:	add	x4, x4, #0xbe9
  45d530:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d534:	ldr	w8, [sp, #12]
  45d538:	tbnz	w8, #0, 45d548 <sd_dhcp_lease_get_routes+0xa0>
  45d53c:	mov	w8, #0xffffffea            	// #-22
  45d540:	stur	w8, [x29, #-4]
  45d544:	b	45d678 <sd_dhcp_lease_get_routes+0x1d0>
  45d548:	ldur	x8, [x29, #-24]
  45d54c:	cmp	x8, #0x0
  45d550:	cset	w9, ne  // ne = any
  45d554:	mov	w10, #0x1                   	// #1
  45d558:	eor	w9, w9, #0x1
  45d55c:	eor	w9, w9, w10
  45d560:	and	w9, w9, #0x1
  45d564:	mov	w0, w9
  45d568:	sxtw	x8, w0
  45d56c:	cbz	x8, 45d57c <sd_dhcp_lease_get_routes+0xd4>
  45d570:	ldr	w8, [sp, #24]
  45d574:	tbnz	w8, #0, 45d5b4 <sd_dhcp_lease_get_routes+0x10c>
  45d578:	b	45d5a8 <sd_dhcp_lease_get_routes+0x100>
  45d57c:	mov	w8, wzr
  45d580:	mov	w0, w8
  45d584:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d588:	add	x1, x1, #0x5bd
  45d58c:	ldr	x2, [sp, #16]
  45d590:	mov	w3, #0xda                  	// #218
  45d594:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d598:	add	x4, x4, #0xbe9
  45d59c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d5a0:	ldr	w8, [sp, #12]
  45d5a4:	tbnz	w8, #0, 45d5b4 <sd_dhcp_lease_get_routes+0x10c>
  45d5a8:	mov	w8, #0xffffffea            	// #-22
  45d5ac:	stur	w8, [x29, #-4]
  45d5b0:	b	45d678 <sd_dhcp_lease_get_routes+0x1d0>
  45d5b4:	ldur	x8, [x29, #-16]
  45d5b8:	ldr	x8, [x8, #120]
  45d5bc:	cmp	x8, #0x0
  45d5c0:	cset	w9, hi  // hi = pmore
  45d5c4:	tbnz	w9, #0, 45d5d4 <sd_dhcp_lease_get_routes+0x12c>
  45d5c8:	mov	w8, #0xffffffc3            	// #-61
  45d5cc:	stur	w8, [x29, #-4]
  45d5d0:	b	45d678 <sd_dhcp_lease_get_routes+0x1d0>
  45d5d4:	ldur	x8, [x29, #-16]
  45d5d8:	ldr	x1, [x8, #120]
  45d5dc:	mov	x0, #0x8                   	// #8
  45d5e0:	bl	45d688 <malloc_multiply>
  45d5e4:	str	x0, [sp, #32]
  45d5e8:	ldr	x8, [sp, #32]
  45d5ec:	cbnz	x8, 45d5fc <sd_dhcp_lease_get_routes+0x154>
  45d5f0:	mov	w8, #0xfffffff4            	// #-12
  45d5f4:	stur	w8, [x29, #-4]
  45d5f8:	b	45d678 <sd_dhcp_lease_get_routes+0x1d0>
  45d5fc:	str	wzr, [sp, #28]
  45d600:	ldr	w8, [sp, #28]
  45d604:	mov	w9, w8
  45d608:	ldur	x10, [x29, #-16]
  45d60c:	ldr	x10, [x10, #120]
  45d610:	cmp	x9, x10
  45d614:	b.cs	45d660 <sd_dhcp_lease_get_routes+0x1b8>  // b.hs, b.nlast
  45d618:	ldur	x8, [x29, #-16]
  45d61c:	ldr	x8, [x8, #112]
  45d620:	ldr	w9, [sp, #28]
  45d624:	mov	w10, w9
  45d628:	mov	x11, #0xc                   	// #12
  45d62c:	mul	x10, x11, x10
  45d630:	add	x8, x8, x10
  45d634:	ldr	x10, [sp, #32]
  45d638:	ldr	w9, [sp, #28]
  45d63c:	mov	w11, w9
  45d640:	mov	x12, #0x8                   	// #8
  45d644:	mul	x11, x12, x11
  45d648:	add	x10, x10, x11
  45d64c:	str	x8, [x10]
  45d650:	ldr	w8, [sp, #28]
  45d654:	add	w8, w8, #0x1
  45d658:	str	w8, [sp, #28]
  45d65c:	b	45d600 <sd_dhcp_lease_get_routes+0x158>
  45d660:	ldr	x8, [sp, #32]
  45d664:	ldur	x9, [x29, #-24]
  45d668:	str	x8, [x9]
  45d66c:	ldur	x8, [x29, #-16]
  45d670:	ldr	x8, [x8, #120]
  45d674:	stur	w8, [x29, #-4]
  45d678:	ldur	w0, [x29, #-4]
  45d67c:	ldp	x29, x30, [sp, #64]
  45d680:	add	sp, sp, #0x50
  45d684:	ret

000000000045d688 <malloc_multiply>:
  45d688:	sub	sp, sp, #0x40
  45d68c:	stp	x29, x30, [sp, #48]
  45d690:	add	x29, sp, #0x30
  45d694:	stur	x0, [x29, #-16]
  45d698:	str	x1, [sp, #24]
  45d69c:	ldur	x0, [x29, #-16]
  45d6a0:	ldr	x1, [sp, #24]
  45d6a4:	bl	463530 <size_multiply_overflow>
  45d6a8:	tbnz	w0, #0, 45d6b0 <malloc_multiply+0x28>
  45d6ac:	b	45d6bc <malloc_multiply+0x34>
  45d6b0:	mov	x8, xzr
  45d6b4:	stur	x8, [x29, #-8]
  45d6b8:	b	45d6f4 <malloc_multiply+0x6c>
  45d6bc:	ldur	x8, [x29, #-16]
  45d6c0:	ldr	x9, [sp, #24]
  45d6c4:	mul	x8, x8, x9
  45d6c8:	str	x8, [sp, #16]
  45d6cc:	cbz	x8, 45d6dc <malloc_multiply+0x54>
  45d6d0:	ldr	x8, [sp, #16]
  45d6d4:	str	x8, [sp, #8]
  45d6d8:	b	45d6e4 <malloc_multiply+0x5c>
  45d6dc:	mov	x8, #0x1                   	// #1
  45d6e0:	str	x8, [sp, #8]
  45d6e4:	ldr	x8, [sp, #8]
  45d6e8:	mov	x0, x8
  45d6ec:	bl	40a820 <malloc@plt>
  45d6f0:	stur	x0, [x29, #-8]
  45d6f4:	ldur	x0, [x29, #-8]
  45d6f8:	ldp	x29, x30, [sp, #48]
  45d6fc:	add	sp, sp, #0x40
  45d700:	ret

000000000045d704 <sd_dhcp_lease_get_search_domains>:
  45d704:	sub	sp, sp, #0x50
  45d708:	stp	x29, x30, [sp, #64]
  45d70c:	add	x29, sp, #0x40
  45d710:	mov	w8, #0x1                   	// #1
  45d714:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d718:	add	x9, x9, #0x782
  45d71c:	add	x9, x9, #0x3
  45d720:	mov	w10, #0x0                   	// #0
  45d724:	stur	x0, [x29, #-16]
  45d728:	stur	x1, [x29, #-24]
  45d72c:	str	w8, [sp, #28]
  45d730:	str	x9, [sp, #16]
  45d734:	str	w10, [sp, #12]
  45d738:	ldur	x8, [x29, #-16]
  45d73c:	cmp	x8, #0x0
  45d740:	cset	w9, ne  // ne = any
  45d744:	mov	w10, #0x1                   	// #1
  45d748:	eor	w9, w9, #0x1
  45d74c:	eor	w9, w9, w10
  45d750:	and	w9, w9, #0x1
  45d754:	mov	w0, w9
  45d758:	sxtw	x8, w0
  45d75c:	cbz	x8, 45d76c <sd_dhcp_lease_get_search_domains+0x68>
  45d760:	ldr	w8, [sp, #28]
  45d764:	tbnz	w8, #0, 45d7a4 <sd_dhcp_lease_get_search_domains+0xa0>
  45d768:	b	45d798 <sd_dhcp_lease_get_search_domains+0x94>
  45d76c:	mov	w8, wzr
  45d770:	mov	w0, w8
  45d774:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d778:	add	x1, x1, #0x77c
  45d77c:	ldr	x2, [sp, #16]
  45d780:	mov	w3, #0xed                  	// #237
  45d784:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d788:	add	x4, x4, #0xc2a
  45d78c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d790:	ldr	w8, [sp, #12]
  45d794:	tbnz	w8, #0, 45d7a4 <sd_dhcp_lease_get_search_domains+0xa0>
  45d798:	mov	w8, #0xffffffea            	// #-22
  45d79c:	stur	w8, [x29, #-4]
  45d7a0:	b	45d854 <sd_dhcp_lease_get_search_domains+0x150>
  45d7a4:	ldur	x8, [x29, #-24]
  45d7a8:	cmp	x8, #0x0
  45d7ac:	cset	w9, ne  // ne = any
  45d7b0:	mov	w10, #0x1                   	// #1
  45d7b4:	eor	w9, w9, #0x1
  45d7b8:	eor	w9, w9, w10
  45d7bc:	and	w9, w9, #0x1
  45d7c0:	mov	w0, w9
  45d7c4:	sxtw	x8, w0
  45d7c8:	cbz	x8, 45d7d8 <sd_dhcp_lease_get_search_domains+0xd4>
  45d7cc:	ldr	w8, [sp, #28]
  45d7d0:	tbnz	w8, #0, 45d810 <sd_dhcp_lease_get_search_domains+0x10c>
  45d7d4:	b	45d804 <sd_dhcp_lease_get_search_domains+0x100>
  45d7d8:	mov	w8, wzr
  45d7dc:	mov	w0, w8
  45d7e0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d7e4:	add	x1, x1, #0xc6a
  45d7e8:	ldr	x2, [sp, #16]
  45d7ec:	mov	w3, #0xee                  	// #238
  45d7f0:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45d7f4:	add	x4, x4, #0xc2a
  45d7f8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d7fc:	ldr	w8, [sp, #12]
  45d800:	tbnz	w8, #0, 45d810 <sd_dhcp_lease_get_search_domains+0x10c>
  45d804:	mov	w8, #0xffffffea            	// #-22
  45d808:	stur	w8, [x29, #-4]
  45d80c:	b	45d854 <sd_dhcp_lease_get_search_domains+0x150>
  45d810:	ldur	x8, [x29, #-16]
  45d814:	ldr	x0, [x8, #152]
  45d818:	bl	40b5d0 <strv_length@plt>
  45d81c:	str	x0, [sp, #32]
  45d820:	ldr	x8, [sp, #32]
  45d824:	cmp	x8, #0x0
  45d828:	cset	w9, ls  // ls = plast
  45d82c:	tbnz	w9, #0, 45d84c <sd_dhcp_lease_get_search_domains+0x148>
  45d830:	ldur	x8, [x29, #-16]
  45d834:	ldr	x8, [x8, #152]
  45d838:	ldur	x9, [x29, #-24]
  45d83c:	str	x8, [x9]
  45d840:	ldr	x8, [sp, #32]
  45d844:	stur	w8, [x29, #-4]
  45d848:	b	45d854 <sd_dhcp_lease_get_search_domains+0x150>
  45d84c:	mov	w8, #0xffffffc3            	// #-61
  45d850:	stur	w8, [x29, #-4]
  45d854:	ldur	w0, [x29, #-4]
  45d858:	ldp	x29, x30, [sp, #64]
  45d85c:	add	sp, sp, #0x50
  45d860:	ret

000000000045d864 <sd_dhcp_lease_get_vendor_specific>:
  45d864:	sub	sp, sp, #0x50
  45d868:	stp	x29, x30, [sp, #64]
  45d86c:	add	x29, sp, #0x40
  45d870:	mov	w8, #0x1                   	// #1
  45d874:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45d878:	add	x9, x9, #0x782
  45d87c:	add	x9, x9, #0x3
  45d880:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45d884:	add	x10, x10, #0xc72
  45d888:	mov	w11, #0x0                   	// #0
  45d88c:	stur	x0, [x29, #-16]
  45d890:	stur	x1, [x29, #-24]
  45d894:	str	x2, [sp, #32]
  45d898:	str	w8, [sp, #28]
  45d89c:	str	x9, [sp, #16]
  45d8a0:	str	x10, [sp, #8]
  45d8a4:	str	w11, [sp, #4]
  45d8a8:	ldur	x8, [x29, #-16]
  45d8ac:	cmp	x8, #0x0
  45d8b0:	cset	w9, ne  // ne = any
  45d8b4:	mov	w10, #0x1                   	// #1
  45d8b8:	eor	w9, w9, #0x1
  45d8bc:	eor	w9, w9, w10
  45d8c0:	and	w9, w9, #0x1
  45d8c4:	mov	w0, w9
  45d8c8:	sxtw	x8, w0
  45d8cc:	cbz	x8, 45d8dc <sd_dhcp_lease_get_vendor_specific+0x78>
  45d8d0:	ldr	w8, [sp, #28]
  45d8d4:	tbnz	w8, #0, 45d910 <sd_dhcp_lease_get_vendor_specific+0xac>
  45d8d8:	b	45d904 <sd_dhcp_lease_get_vendor_specific+0xa0>
  45d8dc:	mov	w8, wzr
  45d8e0:	mov	w0, w8
  45d8e4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d8e8:	add	x1, x1, #0x77c
  45d8ec:	ldr	x2, [sp, #16]
  45d8f0:	mov	w3, #0xfa                  	// #250
  45d8f4:	ldr	x4, [sp, #8]
  45d8f8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d8fc:	ldr	w8, [sp, #4]
  45d900:	tbnz	w8, #0, 45d910 <sd_dhcp_lease_get_vendor_specific+0xac>
  45d904:	mov	w8, #0xffffffea            	// #-22
  45d908:	stur	w8, [x29, #-4]
  45d90c:	b	45da24 <sd_dhcp_lease_get_vendor_specific+0x1c0>
  45d910:	ldur	x8, [x29, #-24]
  45d914:	cmp	x8, #0x0
  45d918:	cset	w9, ne  // ne = any
  45d91c:	mov	w10, #0x1                   	// #1
  45d920:	eor	w9, w9, #0x1
  45d924:	eor	w9, w9, w10
  45d928:	and	w9, w9, #0x1
  45d92c:	mov	w0, w9
  45d930:	sxtw	x8, w0
  45d934:	cbz	x8, 45d944 <sd_dhcp_lease_get_vendor_specific+0xe0>
  45d938:	ldr	w8, [sp, #28]
  45d93c:	tbnz	w8, #0, 45d978 <sd_dhcp_lease_get_vendor_specific+0x114>
  45d940:	b	45d96c <sd_dhcp_lease_get_vendor_specific+0x108>
  45d944:	mov	w8, wzr
  45d948:	mov	w0, w8
  45d94c:	adrp	x1, 468000 <on_inotify.__assert_in_set+0x4540>
  45d950:	add	x1, x1, #0x13c
  45d954:	ldr	x2, [sp, #16]
  45d958:	mov	w3, #0xfb                  	// #251
  45d95c:	ldr	x4, [sp, #8]
  45d960:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d964:	ldr	w8, [sp, #4]
  45d968:	tbnz	w8, #0, 45d978 <sd_dhcp_lease_get_vendor_specific+0x114>
  45d96c:	mov	w8, #0xffffffea            	// #-22
  45d970:	stur	w8, [x29, #-4]
  45d974:	b	45da24 <sd_dhcp_lease_get_vendor_specific+0x1c0>
  45d978:	ldr	x8, [sp, #32]
  45d97c:	cmp	x8, #0x0
  45d980:	cset	w9, ne  // ne = any
  45d984:	mov	w10, #0x1                   	// #1
  45d988:	eor	w9, w9, #0x1
  45d98c:	eor	w9, w9, w10
  45d990:	and	w9, w9, #0x1
  45d994:	mov	w0, w9
  45d998:	sxtw	x8, w0
  45d99c:	cbz	x8, 45d9ac <sd_dhcp_lease_get_vendor_specific+0x148>
  45d9a0:	ldr	w8, [sp, #28]
  45d9a4:	tbnz	w8, #0, 45d9e0 <sd_dhcp_lease_get_vendor_specific+0x17c>
  45d9a8:	b	45d9d4 <sd_dhcp_lease_get_vendor_specific+0x170>
  45d9ac:	mov	w8, wzr
  45d9b0:	mov	w0, w8
  45d9b4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45d9b8:	add	x1, x1, #0xcc2
  45d9bc:	ldr	x2, [sp, #16]
  45d9c0:	mov	w3, #0xfc                  	// #252
  45d9c4:	ldr	x4, [sp, #8]
  45d9c8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45d9cc:	ldr	w8, [sp, #4]
  45d9d0:	tbnz	w8, #0, 45d9e0 <sd_dhcp_lease_get_vendor_specific+0x17c>
  45d9d4:	mov	w8, #0xffffffea            	// #-22
  45d9d8:	stur	w8, [x29, #-4]
  45d9dc:	b	45da24 <sd_dhcp_lease_get_vendor_specific+0x1c0>
  45d9e0:	ldur	x8, [x29, #-16]
  45d9e4:	ldr	x8, [x8, #200]
  45d9e8:	cmp	x8, #0x0
  45d9ec:	cset	w9, hi  // hi = pmore
  45d9f0:	tbnz	w9, #0, 45da00 <sd_dhcp_lease_get_vendor_specific+0x19c>
  45d9f4:	mov	w8, #0xffffffc3            	// #-61
  45d9f8:	stur	w8, [x29, #-4]
  45d9fc:	b	45da24 <sd_dhcp_lease_get_vendor_specific+0x1c0>
  45da00:	ldur	x8, [x29, #-16]
  45da04:	ldr	x8, [x8, #192]
  45da08:	ldur	x9, [x29, #-24]
  45da0c:	str	x8, [x9]
  45da10:	ldur	x8, [x29, #-16]
  45da14:	ldr	x8, [x8, #200]
  45da18:	ldr	x9, [sp, #32]
  45da1c:	str	x8, [x9]
  45da20:	stur	wzr, [x29, #-4]
  45da24:	ldur	w0, [x29, #-4]
  45da28:	ldp	x29, x30, [sp, #64]
  45da2c:	add	sp, sp, #0x50
  45da30:	ret

000000000045da34 <sd_dhcp_lease_ref>:
  45da34:	sub	sp, sp, #0x30
  45da38:	stp	x29, x30, [sp, #32]
  45da3c:	add	x29, sp, #0x20
  45da40:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45da44:	add	x8, x8, #0x782
  45da48:	add	x2, x8, #0x3
  45da4c:	str	x0, [sp, #16]
  45da50:	ldr	x8, [sp, #16]
  45da54:	str	x2, [sp, #8]
  45da58:	cbnz	x8, 45da68 <sd_dhcp_lease_ref+0x34>
  45da5c:	mov	x8, xzr
  45da60:	stur	x8, [x29, #-8]
  45da64:	b	45dad4 <sd_dhcp_lease_ref+0xa0>
  45da68:	ldr	x8, [sp, #16]
  45da6c:	ldr	w9, [x8]
  45da70:	cmp	w9, #0x0
  45da74:	cset	w9, hi  // hi = pmore
  45da78:	mov	w10, #0x1                   	// #1
  45da7c:	eor	w9, w9, #0x1
  45da80:	eor	w9, w9, w10
  45da84:	eor	w9, w9, w10
  45da88:	and	w9, w9, #0x1
  45da8c:	mov	w0, w9
  45da90:	sxtw	x8, w0
  45da94:	cbz	x8, 45dabc <sd_dhcp_lease_ref+0x88>
  45da98:	mov	w8, wzr
  45da9c:	mov	w0, w8
  45daa0:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  45daa4:	add	x1, x1, #0xb67
  45daa8:	ldr	x2, [sp, #8]
  45daac:	mov	w3, #0x121                 	// #289
  45dab0:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45dab4:	add	x4, x4, #0xccb
  45dab8:	bl	40a540 <log_assert_failed_realm@plt>
  45dabc:	ldr	x8, [sp, #16]
  45dac0:	ldr	w9, [x8]
  45dac4:	add	w9, w9, #0x1
  45dac8:	str	w9, [x8]
  45dacc:	ldr	x8, [sp, #16]
  45dad0:	stur	x8, [x29, #-8]
  45dad4:	ldur	x0, [x29, #-8]
  45dad8:	ldp	x29, x30, [sp, #32]
  45dadc:	add	sp, sp, #0x30
  45dae0:	ret

000000000045dae4 <sd_dhcp_lease_unref>:
  45dae4:	sub	sp, sp, #0x30
  45dae8:	stp	x29, x30, [sp, #32]
  45daec:	add	x29, sp, #0x20
  45daf0:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45daf4:	add	x8, x8, #0x782
  45daf8:	add	x2, x8, #0x3
  45dafc:	str	x0, [sp, #16]
  45db00:	ldr	x8, [sp, #16]
  45db04:	str	x2, [sp, #8]
  45db08:	cbnz	x8, 45db18 <sd_dhcp_lease_unref+0x34>
  45db0c:	mov	x8, xzr
  45db10:	stur	x8, [x29, #-8]
  45db14:	b	45dba8 <sd_dhcp_lease_unref+0xc4>
  45db18:	ldr	x8, [sp, #16]
  45db1c:	ldr	w9, [x8]
  45db20:	cmp	w9, #0x0
  45db24:	cset	w9, hi  // hi = pmore
  45db28:	mov	w10, #0x1                   	// #1
  45db2c:	eor	w9, w9, #0x1
  45db30:	eor	w9, w9, w10
  45db34:	eor	w9, w9, w10
  45db38:	and	w9, w9, #0x1
  45db3c:	mov	w0, w9
  45db40:	sxtw	x8, w0
  45db44:	cbz	x8, 45db6c <sd_dhcp_lease_unref+0x88>
  45db48:	mov	w8, wzr
  45db4c:	mov	w0, w8
  45db50:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  45db54:	add	x1, x1, #0xb67
  45db58:	ldr	x2, [sp, #8]
  45db5c:	mov	w3, #0x121                 	// #289
  45db60:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45db64:	add	x4, x4, #0xcfd
  45db68:	bl	40a540 <log_assert_failed_realm@plt>
  45db6c:	ldr	x8, [sp, #16]
  45db70:	ldr	w9, [x8]
  45db74:	subs	w9, w9, #0x1
  45db78:	str	w9, [x8]
  45db7c:	ldr	x8, [sp, #16]
  45db80:	ldr	w9, [x8]
  45db84:	cmp	w9, #0x0
  45db88:	cset	w9, ls  // ls = plast
  45db8c:	tbnz	w9, #0, 45db9c <sd_dhcp_lease_unref+0xb8>
  45db90:	mov	x8, xzr
  45db94:	stur	x8, [x29, #-8]
  45db98:	b	45dba8 <sd_dhcp_lease_unref+0xc4>
  45db9c:	ldr	x0, [sp, #16]
  45dba0:	bl	45dbb8 <dhcp_lease_free>
  45dba4:	stur	x0, [x29, #-8]
  45dba8:	ldur	x0, [x29, #-8]
  45dbac:	ldp	x29, x30, [sp, #32]
  45dbb0:	add	sp, sp, #0x30
  45dbb4:	ret

000000000045dbb8 <dhcp_lease_free>:
  45dbb8:	sub	sp, sp, #0x40
  45dbbc:	stp	x29, x30, [sp, #48]
  45dbc0:	add	x29, sp, #0x30
  45dbc4:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45dbc8:	add	x8, x8, #0x782
  45dbcc:	add	x8, x8, #0x3
  45dbd0:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  45dbd4:	add	x9, x9, #0xb7a
  45dbd8:	stur	x0, [x29, #-8]
  45dbdc:	str	x8, [sp, #8]
  45dbe0:	str	x9, [sp]
  45dbe4:	ldur	x8, [x29, #-8]
  45dbe8:	cmp	x8, #0x0
  45dbec:	cset	w9, ne  // ne = any
  45dbf0:	mov	w10, #0x1                   	// #1
  45dbf4:	eor	w9, w9, #0x1
  45dbf8:	eor	w9, w9, w10
  45dbfc:	eor	w9, w9, w10
  45dc00:	and	w9, w9, #0x1
  45dc04:	mov	w0, w9
  45dc08:	sxtw	x8, w0
  45dc0c:	cbz	x8, 45dc30 <dhcp_lease_free+0x78>
  45dc10:	mov	w8, wzr
  45dc14:	mov	w0, w8
  45dc18:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45dc1c:	add	x1, x1, #0x77c
  45dc20:	ldr	x2, [sp, #8]
  45dc24:	mov	w3, #0x107                 	// #263
  45dc28:	ldr	x4, [sp]
  45dc2c:	bl	40a540 <log_assert_failed_realm@plt>
  45dc30:	ldur	x8, [x29, #-8]
  45dc34:	ldr	x8, [x8, #216]
  45dc38:	cbz	x8, 45dd7c <dhcp_lease_free+0x1c4>
  45dc3c:	ldur	x8, [x29, #-8]
  45dc40:	ldr	x8, [x8, #216]
  45dc44:	stur	x8, [x29, #-16]
  45dc48:	ldur	x8, [x29, #-8]
  45dc4c:	add	x8, x8, #0xd8
  45dc50:	str	x8, [sp, #24]
  45dc54:	ldur	x8, [x29, #-16]
  45dc58:	str	x8, [sp, #16]
  45dc5c:	ldr	x8, [sp, #16]
  45dc60:	cmp	x8, #0x0
  45dc64:	cset	w9, ne  // ne = any
  45dc68:	mov	w10, #0x1                   	// #1
  45dc6c:	eor	w9, w9, #0x1
  45dc70:	eor	w9, w9, w10
  45dc74:	eor	w9, w9, w10
  45dc78:	and	w9, w9, #0x1
  45dc7c:	mov	w0, w9
  45dc80:	sxtw	x8, w0
  45dc84:	cbz	x8, 45dca8 <dhcp_lease_free+0xf0>
  45dc88:	mov	w8, wzr
  45dc8c:	mov	w0, w8
  45dc90:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  45dc94:	add	x1, x1, #0xd16
  45dc98:	ldr	x2, [sp, #8]
  45dc9c:	mov	w3, #0x10c                 	// #268
  45dca0:	ldr	x4, [sp]
  45dca4:	bl	40a540 <log_assert_failed_realm@plt>
  45dca8:	ldr	x8, [sp, #16]
  45dcac:	ldr	x8, [x8]
  45dcb0:	cbz	x8, 45dcc8 <dhcp_lease_free+0x110>
  45dcb4:	ldr	x8, [sp, #16]
  45dcb8:	ldr	x8, [x8, #8]
  45dcbc:	ldr	x9, [sp, #16]
  45dcc0:	ldr	x9, [x9]
  45dcc4:	str	x8, [x9, #8]
  45dcc8:	ldr	x8, [sp, #16]
  45dccc:	ldr	x8, [x8, #8]
  45dcd0:	cbz	x8, 45dcec <dhcp_lease_free+0x134>
  45dcd4:	ldr	x8, [sp, #16]
  45dcd8:	ldr	x8, [x8]
  45dcdc:	ldr	x9, [sp, #16]
  45dce0:	ldr	x9, [x9, #8]
  45dce4:	str	x8, [x9]
  45dce8:	b	45dd50 <dhcp_lease_free+0x198>
  45dcec:	ldr	x8, [sp, #24]
  45dcf0:	ldr	x8, [x8]
  45dcf4:	ldr	x9, [sp, #16]
  45dcf8:	cmp	x8, x9
  45dcfc:	cset	w10, eq  // eq = none
  45dd00:	mov	w11, #0x1                   	// #1
  45dd04:	eor	w10, w10, #0x1
  45dd08:	eor	w10, w10, w11
  45dd0c:	eor	w10, w10, w11
  45dd10:	and	w10, w10, #0x1
  45dd14:	mov	w0, w10
  45dd18:	sxtw	x8, w0
  45dd1c:	cbz	x8, 45dd40 <dhcp_lease_free+0x188>
  45dd20:	mov	w8, wzr
  45dd24:	mov	w0, w8
  45dd28:	adrp	x1, 463000 <dhcp_lease_set_client_id+0xc4>
  45dd2c:	add	x1, x1, #0xd1c
  45dd30:	ldr	x2, [sp, #8]
  45dd34:	mov	w3, #0x10c                 	// #268
  45dd38:	ldr	x4, [sp]
  45dd3c:	bl	40a540 <log_assert_failed_realm@plt>
  45dd40:	ldr	x8, [sp, #16]
  45dd44:	ldr	x8, [x8]
  45dd48:	ldr	x9, [sp, #24]
  45dd4c:	str	x8, [x9]
  45dd50:	ldr	x8, [sp, #16]
  45dd54:	mov	x9, xzr
  45dd58:	str	x9, [x8, #8]
  45dd5c:	ldr	x8, [sp, #16]
  45dd60:	str	x9, [x8]
  45dd64:	ldur	x8, [x29, #-16]
  45dd68:	ldr	x0, [x8, #24]
  45dd6c:	bl	40a530 <free@plt>
  45dd70:	ldur	x0, [x29, #-16]
  45dd74:	bl	40a530 <free@plt>
  45dd78:	b	45dc30 <dhcp_lease_free+0x78>
  45dd7c:	ldur	x8, [x29, #-8]
  45dd80:	ldr	x0, [x8, #168]
  45dd84:	bl	40a530 <free@plt>
  45dd88:	ldur	x8, [x29, #-8]
  45dd8c:	ldr	x0, [x8, #48]
  45dd90:	bl	40a530 <free@plt>
  45dd94:	ldur	x8, [x29, #-8]
  45dd98:	ldr	x0, [x8, #208]
  45dd9c:	bl	40a530 <free@plt>
  45dda0:	ldur	x8, [x29, #-8]
  45dda4:	ldr	x0, [x8, #160]
  45dda8:	bl	40a530 <free@plt>
  45ddac:	ldur	x8, [x29, #-8]
  45ddb0:	ldr	x0, [x8, #144]
  45ddb4:	bl	40a530 <free@plt>
  45ddb8:	ldur	x8, [x29, #-8]
  45ddbc:	ldr	x0, [x8, #64]
  45ddc0:	bl	40a530 <free@plt>
  45ddc4:	ldur	x8, [x29, #-8]
  45ddc8:	ldr	x0, [x8, #80]
  45ddcc:	bl	40a530 <free@plt>
  45ddd0:	ldur	x8, [x29, #-8]
  45ddd4:	ldr	x0, [x8, #96]
  45ddd8:	bl	40a530 <free@plt>
  45dddc:	ldur	x8, [x29, #-8]
  45dde0:	ldr	x0, [x8, #112]
  45dde4:	bl	40a530 <free@plt>
  45dde8:	ldur	x8, [x29, #-8]
  45ddec:	ldr	x0, [x8, #176]
  45ddf0:	bl	40a530 <free@plt>
  45ddf4:	ldur	x8, [x29, #-8]
  45ddf8:	ldr	x0, [x8, #192]
  45ddfc:	bl	40a530 <free@plt>
  45de00:	ldur	x8, [x29, #-8]
  45de04:	ldr	x0, [x8, #152]
  45de08:	bl	40afa0 <strv_free@plt>
  45de0c:	ldur	x8, [x29, #-8]
  45de10:	mov	x0, x8
  45de14:	bl	4604f0 <mfree>
  45de18:	ldp	x29, x30, [sp, #48]
  45de1c:	add	sp, sp, #0x40
  45de20:	ret

000000000045de24 <dhcp_lease_parse_options>:
  45de24:	stp	x29, x30, [sp, #-32]!
  45de28:	str	x28, [sp, #16]
  45de2c:	mov	x29, sp
  45de30:	sub	sp, sp, #0x200
  45de34:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45de38:	add	x8, x8, #0x782
  45de3c:	add	x8, x8, #0x3
  45de40:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45de44:	add	x9, x9, #0xd76
  45de48:	sturb	w0, [x29, #-5]
  45de4c:	sturb	w1, [x29, #-6]
  45de50:	stur	x2, [x29, #-16]
  45de54:	stur	x3, [x29, #-24]
  45de58:	ldur	x10, [x29, #-24]
  45de5c:	stur	x10, [x29, #-32]
  45de60:	str	x8, [sp, #104]
  45de64:	str	x9, [sp, #96]
  45de68:	ldur	x8, [x29, #-32]
  45de6c:	cmp	x8, #0x0
  45de70:	cset	w9, ne  // ne = any
  45de74:	mov	w10, #0x1                   	// #1
  45de78:	eor	w9, w9, #0x1
  45de7c:	eor	w9, w9, w10
  45de80:	eor	w9, w9, w10
  45de84:	and	w9, w9, #0x1
  45de88:	mov	w0, w9
  45de8c:	sxtw	x8, w0
  45de90:	cbz	x8, 45deb8 <dhcp_lease_parse_options+0x94>
  45de94:	mov	w8, wzr
  45de98:	mov	w0, w8
  45de9c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45dea0:	add	x1, x1, #0x77c
  45dea4:	ldr	x2, [sp, #104]
  45dea8:	mov	w3, #0x222                 	// #546
  45deac:	adrp	x4, 470000 <on_inotify.__assert_in_set+0xc540>
  45deb0:	add	x4, x4, #0xd31
  45deb4:	bl	40a540 <log_assert_failed_realm@plt>
  45deb8:	ldurb	w8, [x29, #-5]
  45debc:	subs	w8, w8, #0x1
  45dec0:	mov	w9, w8
  45dec4:	ubfx	x9, x9, #0, #32
  45dec8:	cmp	x9, #0xfd
  45decc:	str	x9, [sp, #88]
  45ded0:	b.hi	45ed7c <dhcp_lease_parse_options+0xf58>  // b.pmore
  45ded4:	adrp	x8, 472000 <on_inotify.__assert_in_set+0xe540>
  45ded8:	add	x8, x8, #0xad0
  45dedc:	ldr	x11, [sp, #88]
  45dee0:	ldrsw	x10, [x8, x11, lsl #2]
  45dee4:	add	x9, x8, x10
  45dee8:	br	x9
  45deec:	ldur	x0, [x29, #-16]
  45def0:	ldurb	w8, [x29, #-6]
  45def4:	mov	w1, w8
  45def8:	ldur	x9, [x29, #-32]
  45defc:	add	x2, x9, #0xc
  45df00:	mov	w3, #0x1                   	// #1
  45df04:	bl	45ee0c <lease_parse_u32>
  45df08:	stur	w0, [x29, #-36]
  45df0c:	ldur	w8, [x29, #-36]
  45df10:	cmp	w8, #0x0
  45df14:	cset	w8, ge  // ge = tcont
  45df18:	tbnz	w8, #0, 45df94 <dhcp_lease_parse_options+0x170>
  45df1c:	mov	w8, #0x7                   	// #7
  45df20:	stur	w8, [x29, #-40]
  45df24:	ldur	w8, [x29, #-36]
  45df28:	stur	w8, [x29, #-44]
  45df2c:	stur	wzr, [x29, #-48]
  45df30:	ldur	w0, [x29, #-48]
  45df34:	bl	40a3f0 <log_get_max_level_realm@plt>
  45df38:	ldur	w8, [x29, #-40]
  45df3c:	and	w8, w8, #0x7
  45df40:	cmp	w0, w8
  45df44:	b.lt	45df78 <dhcp_lease_parse_options+0x154>  // b.tstop
  45df48:	ldur	w8, [x29, #-48]
  45df4c:	ldur	w9, [x29, #-40]
  45df50:	orr	w0, w9, w8, lsl #10
  45df54:	ldur	w1, [x29, #-44]
  45df58:	ldr	x2, [sp, #104]
  45df5c:	mov	w3, #0x229                 	// #553
  45df60:	ldr	x4, [sp, #96]
  45df64:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45df68:	add	x5, x5, #0xd8f
  45df6c:	bl	40a400 <log_internal_realm@plt>
  45df70:	str	w0, [sp, #84]
  45df74:	b	45df8c <dhcp_lease_parse_options+0x168>
  45df78:	ldur	w0, [x29, #-44]
  45df7c:	bl	40a410 <abs@plt>
  45df80:	mov	w8, wzr
  45df84:	subs	w8, w8, w0, uxtb
  45df88:	str	w8, [sp, #84]
  45df8c:	ldr	w8, [sp, #84]
  45df90:	stur	w8, [x29, #-52]
  45df94:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45df98:	ldur	x0, [x29, #-16]
  45df9c:	ldurb	w8, [x29, #-6]
  45dfa0:	mov	w1, w8
  45dfa4:	ldur	x9, [x29, #-32]
  45dfa8:	add	x2, x9, #0x14
  45dfac:	bl	45ef34 <lease_parse_be32>
  45dfb0:	stur	w0, [x29, #-36]
  45dfb4:	ldur	w8, [x29, #-36]
  45dfb8:	cmp	w8, #0x0
  45dfbc:	cset	w8, ge  // ge = tcont
  45dfc0:	tbnz	w8, #0, 45e03c <dhcp_lease_parse_options+0x218>
  45dfc4:	mov	w8, #0x7                   	// #7
  45dfc8:	stur	w8, [x29, #-56]
  45dfcc:	ldur	w8, [x29, #-36]
  45dfd0:	stur	w8, [x29, #-60]
  45dfd4:	stur	wzr, [x29, #-64]
  45dfd8:	ldur	w0, [x29, #-64]
  45dfdc:	bl	40a3f0 <log_get_max_level_realm@plt>
  45dfe0:	ldur	w8, [x29, #-56]
  45dfe4:	and	w8, w8, #0x7
  45dfe8:	cmp	w0, w8
  45dfec:	b.lt	45e020 <dhcp_lease_parse_options+0x1fc>  // b.tstop
  45dff0:	ldur	w8, [x29, #-64]
  45dff4:	ldur	w9, [x29, #-56]
  45dff8:	orr	w0, w9, w8, lsl #10
  45dffc:	ldur	w1, [x29, #-60]
  45e000:	ldr	x2, [sp, #104]
  45e004:	mov	w3, #0x230                 	// #560
  45e008:	ldr	x4, [sp, #96]
  45e00c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e010:	add	x5, x5, #0xdb8
  45e014:	bl	40a400 <log_internal_realm@plt>
  45e018:	str	w0, [sp, #80]
  45e01c:	b	45e034 <dhcp_lease_parse_options+0x210>
  45e020:	ldur	w0, [x29, #-60]
  45e024:	bl	40a410 <abs@plt>
  45e028:	mov	w8, wzr
  45e02c:	subs	w8, w8, w0, uxtb
  45e030:	str	w8, [sp, #80]
  45e034:	ldr	w8, [sp, #80]
  45e038:	stur	w8, [x29, #-68]
  45e03c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e040:	ldur	x0, [x29, #-16]
  45e044:	ldurb	w8, [x29, #-6]
  45e048:	mov	w1, w8
  45e04c:	ldur	x9, [x29, #-32]
  45e050:	add	x2, x9, #0x20
  45e054:	bl	45ef34 <lease_parse_be32>
  45e058:	stur	w0, [x29, #-36]
  45e05c:	ldur	w8, [x29, #-36]
  45e060:	cmp	w8, #0x0
  45e064:	cset	w8, ge  // ge = tcont
  45e068:	tbnz	w8, #0, 45e0e8 <dhcp_lease_parse_options+0x2c4>
  45e06c:	mov	w8, #0x7                   	// #7
  45e070:	stur	w8, [x29, #-72]
  45e074:	ldur	w8, [x29, #-36]
  45e078:	stur	w8, [x29, #-76]
  45e07c:	stur	wzr, [x29, #-80]
  45e080:	ldur	w0, [x29, #-80]
  45e084:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e088:	ldur	w8, [x29, #-72]
  45e08c:	and	w8, w8, #0x7
  45e090:	cmp	w0, w8
  45e094:	b.lt	45e0c8 <dhcp_lease_parse_options+0x2a4>  // b.tstop
  45e098:	ldur	w8, [x29, #-80]
  45e09c:	ldur	w9, [x29, #-72]
  45e0a0:	orr	w0, w9, w8, lsl #10
  45e0a4:	ldur	w1, [x29, #-76]
  45e0a8:	ldr	x2, [sp, #104]
  45e0ac:	mov	w3, #0x237                 	// #567
  45e0b0:	ldr	x4, [sp, #96]
  45e0b4:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e0b8:	add	x5, x5, #0xde8
  45e0bc:	bl	40a400 <log_internal_realm@plt>
  45e0c0:	str	w0, [sp, #76]
  45e0c4:	b	45e0dc <dhcp_lease_parse_options+0x2b8>
  45e0c8:	ldur	w0, [x29, #-76]
  45e0cc:	bl	40a410 <abs@plt>
  45e0d0:	mov	w8, wzr
  45e0d4:	subs	w8, w8, w0, uxtb
  45e0d8:	str	w8, [sp, #76]
  45e0dc:	ldr	w8, [sp, #76]
  45e0e0:	stur	w8, [x29, #-84]
  45e0e4:	b	45e0f4 <dhcp_lease_parse_options+0x2d0>
  45e0e8:	ldur	x8, [x29, #-32]
  45e0ec:	mov	w9, #0x1                   	// #1
  45e0f0:	strb	w9, [x8, #28]
  45e0f4:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e0f8:	ldur	x0, [x29, #-16]
  45e0fc:	ldurb	w8, [x29, #-6]
  45e100:	mov	w1, w8
  45e104:	ldur	x9, [x29, #-32]
  45e108:	add	x2, x9, #0x28
  45e10c:	bl	45ef34 <lease_parse_be32>
  45e110:	stur	w0, [x29, #-36]
  45e114:	ldur	w8, [x29, #-36]
  45e118:	cmp	w8, #0x0
  45e11c:	cset	w8, ge  // ge = tcont
  45e120:	tbnz	w8, #0, 45e1a0 <dhcp_lease_parse_options+0x37c>
  45e124:	mov	w8, #0x7                   	// #7
  45e128:	stur	w8, [x29, #-88]
  45e12c:	ldur	w8, [x29, #-36]
  45e130:	stur	w8, [x29, #-92]
  45e134:	stur	wzr, [x29, #-96]
  45e138:	ldur	w0, [x29, #-96]
  45e13c:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e140:	ldur	w8, [x29, #-88]
  45e144:	and	w8, w8, #0x7
  45e148:	cmp	w0, w8
  45e14c:	b.lt	45e180 <dhcp_lease_parse_options+0x35c>  // b.tstop
  45e150:	ldur	w8, [x29, #-96]
  45e154:	ldur	w9, [x29, #-88]
  45e158:	orr	w0, w9, w8, lsl #10
  45e15c:	ldur	w1, [x29, #-92]
  45e160:	ldr	x2, [sp, #104]
  45e164:	mov	w3, #0x23f                 	// #575
  45e168:	ldr	x4, [sp, #96]
  45e16c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e170:	add	x5, x5, #0xe12
  45e174:	bl	40a400 <log_internal_realm@plt>
  45e178:	str	w0, [sp, #72]
  45e17c:	b	45e194 <dhcp_lease_parse_options+0x370>
  45e180:	ldur	w0, [x29, #-92]
  45e184:	bl	40a410 <abs@plt>
  45e188:	mov	w8, wzr
  45e18c:	subs	w8, w8, w0, uxtb
  45e190:	str	w8, [sp, #72]
  45e194:	ldr	w8, [sp, #72]
  45e198:	stur	w8, [x29, #-100]
  45e19c:	b	45e1ac <dhcp_lease_parse_options+0x388>
  45e1a0:	ldur	x8, [x29, #-32]
  45e1a4:	mov	w9, #0x1                   	// #1
  45e1a8:	strb	w9, [x8, #36]
  45e1ac:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e1b0:	ldur	x0, [x29, #-16]
  45e1b4:	ldurb	w8, [x29, #-6]
  45e1b8:	mov	w1, w8
  45e1bc:	ldur	x9, [x29, #-32]
  45e1c0:	add	x2, x9, #0x30
  45e1c4:	ldur	x9, [x29, #-32]
  45e1c8:	add	x3, x9, #0x38
  45e1cc:	bl	45f038 <lease_parse_in_addrs>
  45e1d0:	stur	w0, [x29, #-36]
  45e1d4:	ldur	w8, [x29, #-36]
  45e1d8:	cmp	w8, #0x0
  45e1dc:	cset	w8, ge  // ge = tcont
  45e1e0:	tbnz	w8, #0, 45e25c <dhcp_lease_parse_options+0x438>
  45e1e4:	mov	w8, #0x7                   	// #7
  45e1e8:	stur	w8, [x29, #-104]
  45e1ec:	ldur	w8, [x29, #-36]
  45e1f0:	stur	w8, [x29, #-108]
  45e1f4:	stur	wzr, [x29, #-112]
  45e1f8:	ldur	w0, [x29, #-112]
  45e1fc:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e200:	ldur	w8, [x29, #-104]
  45e204:	and	w8, w8, #0x7
  45e208:	cmp	w0, w8
  45e20c:	b.lt	45e240 <dhcp_lease_parse_options+0x41c>  // b.tstop
  45e210:	ldur	w8, [x29, #-112]
  45e214:	ldur	w9, [x29, #-104]
  45e218:	orr	w0, w9, w8, lsl #10
  45e21c:	ldur	w1, [x29, #-108]
  45e220:	ldr	x2, [sp, #104]
  45e224:	mov	w3, #0x247                 	// #583
  45e228:	ldr	x4, [sp, #96]
  45e22c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e230:	add	x5, x5, #0xe42
  45e234:	bl	40a400 <log_internal_realm@plt>
  45e238:	str	w0, [sp, #68]
  45e23c:	b	45e254 <dhcp_lease_parse_options+0x430>
  45e240:	ldur	w0, [x29, #-108]
  45e244:	bl	40a410 <abs@plt>
  45e248:	mov	w8, wzr
  45e24c:	subs	w8, w8, w0, uxtb
  45e250:	str	w8, [sp, #68]
  45e254:	ldr	w8, [sp, #68]
  45e258:	stur	w8, [x29, #-116]
  45e25c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e260:	ldur	x0, [x29, #-16]
  45e264:	ldurb	w8, [x29, #-6]
  45e268:	mov	w1, w8
  45e26c:	ldur	x9, [x29, #-32]
  45e270:	add	x2, x9, #0x40
  45e274:	ldur	x9, [x29, #-32]
  45e278:	add	x3, x9, #0x48
  45e27c:	bl	45f038 <lease_parse_in_addrs>
  45e280:	stur	w0, [x29, #-36]
  45e284:	ldur	w8, [x29, #-36]
  45e288:	cmp	w8, #0x0
  45e28c:	cset	w8, ge  // ge = tcont
  45e290:	tbnz	w8, #0, 45e30c <dhcp_lease_parse_options+0x4e8>
  45e294:	mov	w8, #0x7                   	// #7
  45e298:	stur	w8, [x29, #-120]
  45e29c:	ldur	w8, [x29, #-36]
  45e2a0:	stur	w8, [x29, #-124]
  45e2a4:	stur	wzr, [x29, #-128]
  45e2a8:	ldur	w0, [x29, #-128]
  45e2ac:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e2b0:	ldur	w8, [x29, #-120]
  45e2b4:	and	w8, w8, #0x7
  45e2b8:	cmp	w0, w8
  45e2bc:	b.lt	45e2f0 <dhcp_lease_parse_options+0x4cc>  // b.tstop
  45e2c0:	ldur	w8, [x29, #-128]
  45e2c4:	ldur	w9, [x29, #-120]
  45e2c8:	orr	w0, w9, w8, lsl #10
  45e2cc:	ldur	w1, [x29, #-124]
  45e2d0:	ldr	x2, [sp, #104]
  45e2d4:	mov	w3, #0x24d                 	// #589
  45e2d8:	ldr	x4, [sp, #96]
  45e2dc:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e2e0:	add	x5, x5, #0xe71
  45e2e4:	bl	40a400 <log_internal_realm@plt>
  45e2e8:	str	w0, [sp, #64]
  45e2ec:	b	45e304 <dhcp_lease_parse_options+0x4e0>
  45e2f0:	ldur	w0, [x29, #-124]
  45e2f4:	bl	40a410 <abs@plt>
  45e2f8:	mov	w8, wzr
  45e2fc:	subs	w8, w8, w0, uxtb
  45e300:	str	w8, [sp, #64]
  45e304:	ldr	w8, [sp, #64]
  45e308:	stur	w8, [x29, #-132]
  45e30c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e310:	ldur	x0, [x29, #-16]
  45e314:	ldurb	w8, [x29, #-6]
  45e318:	mov	w1, w8
  45e31c:	ldur	x9, [x29, #-32]
  45e320:	add	x2, x9, #0x50
  45e324:	ldur	x9, [x29, #-32]
  45e328:	add	x3, x9, #0x58
  45e32c:	bl	45f038 <lease_parse_in_addrs>
  45e330:	stur	w0, [x29, #-36]
  45e334:	ldur	w8, [x29, #-36]
  45e338:	cmp	w8, #0x0
  45e33c:	cset	w8, ge  // ge = tcont
  45e340:	tbnz	w8, #0, 45e3bc <dhcp_lease_parse_options+0x598>
  45e344:	mov	w8, #0x7                   	// #7
  45e348:	stur	w8, [x29, #-136]
  45e34c:	ldur	w8, [x29, #-36]
  45e350:	stur	w8, [x29, #-140]
  45e354:	stur	wzr, [x29, #-144]
  45e358:	ldur	w0, [x29, #-144]
  45e35c:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e360:	ldur	w8, [x29, #-136]
  45e364:	and	w8, w8, #0x7
  45e368:	cmp	w0, w8
  45e36c:	b.lt	45e3a0 <dhcp_lease_parse_options+0x57c>  // b.tstop
  45e370:	ldur	w8, [x29, #-144]
  45e374:	ldur	w9, [x29, #-136]
  45e378:	orr	w0, w9, w8, lsl #10
  45e37c:	ldur	w1, [x29, #-140]
  45e380:	ldr	x2, [sp, #104]
  45e384:	mov	w3, #0x253                 	// #595
  45e388:	ldr	x4, [sp, #96]
  45e38c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e390:	add	x5, x5, #0xe9a
  45e394:	bl	40a400 <log_internal_realm@plt>
  45e398:	str	w0, [sp, #60]
  45e39c:	b	45e3b4 <dhcp_lease_parse_options+0x590>
  45e3a0:	ldur	w0, [x29, #-140]
  45e3a4:	bl	40a410 <abs@plt>
  45e3a8:	mov	w8, wzr
  45e3ac:	subs	w8, w8, w0, uxtb
  45e3b0:	str	w8, [sp, #60]
  45e3b4:	ldr	w8, [sp, #60]
  45e3b8:	stur	w8, [x29, #-148]
  45e3bc:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e3c0:	ldur	x0, [x29, #-16]
  45e3c4:	ldurb	w8, [x29, #-6]
  45e3c8:	mov	w1, w8
  45e3cc:	ldur	x9, [x29, #-32]
  45e3d0:	add	x2, x9, #0x60
  45e3d4:	ldur	x9, [x29, #-32]
  45e3d8:	add	x3, x9, #0x68
  45e3dc:	bl	45f218 <lease_parse_sip_server>
  45e3e0:	stur	w0, [x29, #-36]
  45e3e4:	ldur	w8, [x29, #-36]
  45e3e8:	cmp	w8, #0x0
  45e3ec:	cset	w8, ge  // ge = tcont
  45e3f0:	tbnz	w8, #0, 45e46c <dhcp_lease_parse_options+0x648>
  45e3f4:	mov	w8, #0x7                   	// #7
  45e3f8:	stur	w8, [x29, #-152]
  45e3fc:	ldur	w8, [x29, #-36]
  45e400:	stur	w8, [x29, #-156]
  45e404:	stur	wzr, [x29, #-160]
  45e408:	ldur	w0, [x29, #-160]
  45e40c:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e410:	ldur	w8, [x29, #-152]
  45e414:	and	w8, w8, #0x7
  45e418:	cmp	w0, w8
  45e41c:	b.lt	45e450 <dhcp_lease_parse_options+0x62c>  // b.tstop
  45e420:	ldur	w8, [x29, #-160]
  45e424:	ldur	w9, [x29, #-152]
  45e428:	orr	w0, w9, w8, lsl #10
  45e42c:	ldur	w1, [x29, #-156]
  45e430:	ldr	x2, [sp, #104]
  45e434:	mov	w3, #0x259                 	// #601
  45e438:	ldr	x4, [sp, #96]
  45e43c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e440:	add	x5, x5, #0xec3
  45e444:	bl	40a400 <log_internal_realm@plt>
  45e448:	str	w0, [sp, #56]
  45e44c:	b	45e464 <dhcp_lease_parse_options+0x640>
  45e450:	ldur	w0, [x29, #-156]
  45e454:	bl	40a410 <abs@plt>
  45e458:	mov	w8, wzr
  45e45c:	subs	w8, w8, w0, uxtb
  45e460:	str	w8, [sp, #56]
  45e464:	ldr	w8, [sp, #56]
  45e468:	stur	w8, [x29, #-164]
  45e46c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e470:	ldur	x0, [x29, #-16]
  45e474:	ldurb	w8, [x29, #-6]
  45e478:	mov	w1, w8
  45e47c:	ldur	x9, [x29, #-32]
  45e480:	add	x2, x9, #0x70
  45e484:	ldur	x9, [x29, #-32]
  45e488:	add	x3, x9, #0x78
  45e48c:	ldur	x9, [x29, #-32]
  45e490:	add	x4, x9, #0x80
  45e494:	bl	45f410 <lease_parse_routes>
  45e498:	stur	w0, [x29, #-36]
  45e49c:	ldur	w8, [x29, #-36]
  45e4a0:	cmp	w8, #0x0
  45e4a4:	cset	w8, ge  // ge = tcont
  45e4a8:	tbnz	w8, #0, 45e524 <dhcp_lease_parse_options+0x700>
  45e4ac:	mov	w8, #0x7                   	// #7
  45e4b0:	stur	w8, [x29, #-168]
  45e4b4:	ldur	w8, [x29, #-36]
  45e4b8:	stur	w8, [x29, #-172]
  45e4bc:	stur	wzr, [x29, #-176]
  45e4c0:	ldur	w0, [x29, #-176]
  45e4c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e4c8:	ldur	w8, [x29, #-168]
  45e4cc:	and	w8, w8, #0x7
  45e4d0:	cmp	w0, w8
  45e4d4:	b.lt	45e508 <dhcp_lease_parse_options+0x6e4>  // b.tstop
  45e4d8:	ldur	w8, [x29, #-176]
  45e4dc:	ldur	w9, [x29, #-168]
  45e4e0:	orr	w0, w9, w8, lsl #10
  45e4e4:	ldur	w1, [x29, #-172]
  45e4e8:	ldr	x2, [sp, #104]
  45e4ec:	mov	w3, #0x25f                 	// #607
  45e4f0:	ldr	x4, [sp, #96]
  45e4f4:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e4f8:	add	x5, x5, #0xeec
  45e4fc:	bl	40a400 <log_internal_realm@plt>
  45e500:	str	w0, [sp, #52]
  45e504:	b	45e51c <dhcp_lease_parse_options+0x6f8>
  45e508:	ldur	w0, [x29, #-172]
  45e50c:	bl	40a410 <abs@plt>
  45e510:	mov	w8, wzr
  45e514:	subs	w8, w8, w0, uxtb
  45e518:	str	w8, [sp, #52]
  45e51c:	ldr	w8, [sp, #52]
  45e520:	stur	w8, [x29, #-180]
  45e524:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e528:	ldur	x0, [x29, #-16]
  45e52c:	ldurb	w8, [x29, #-6]
  45e530:	mov	w1, w8
  45e534:	ldur	x9, [x29, #-32]
  45e538:	add	x2, x9, #0x88
  45e53c:	mov	w3, #0x44                  	// #68
  45e540:	bl	45f810 <lease_parse_u16>
  45e544:	stur	w0, [x29, #-36]
  45e548:	ldur	w8, [x29, #-36]
  45e54c:	cmp	w8, #0x0
  45e550:	cset	w8, ge  // ge = tcont
  45e554:	tbnz	w8, #0, 45e5d0 <dhcp_lease_parse_options+0x7ac>
  45e558:	mov	w8, #0x7                   	// #7
  45e55c:	stur	w8, [x29, #-184]
  45e560:	ldur	w8, [x29, #-36]
  45e564:	stur	w8, [x29, #-188]
  45e568:	stur	wzr, [x29, #-192]
  45e56c:	ldur	w0, [x29, #-192]
  45e570:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e574:	ldur	w8, [x29, #-184]
  45e578:	and	w8, w8, #0x7
  45e57c:	cmp	w0, w8
  45e580:	b.lt	45e5b4 <dhcp_lease_parse_options+0x790>  // b.tstop
  45e584:	ldur	w8, [x29, #-192]
  45e588:	ldur	w9, [x29, #-184]
  45e58c:	orr	w0, w9, w8, lsl #10
  45e590:	ldur	w1, [x29, #-188]
  45e594:	ldr	x2, [sp, #104]
  45e598:	mov	w3, #0x265                 	// #613
  45e59c:	ldr	x4, [sp, #96]
  45e5a0:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e5a4:	add	x5, x5, #0xf18
  45e5a8:	bl	40a400 <log_internal_realm@plt>
  45e5ac:	str	w0, [sp, #48]
  45e5b0:	b	45e5c8 <dhcp_lease_parse_options+0x7a4>
  45e5b4:	ldur	w0, [x29, #-188]
  45e5b8:	bl	40a410 <abs@plt>
  45e5bc:	mov	w8, wzr
  45e5c0:	subs	w8, w8, w0, uxtb
  45e5c4:	str	w8, [sp, #48]
  45e5c8:	ldr	w8, [sp, #48]
  45e5cc:	stur	w8, [x29, #-196]
  45e5d0:	ldur	x8, [x29, #-32]
  45e5d4:	ldrh	w9, [x8, #136]
  45e5d8:	cmp	w9, #0x240
  45e5dc:	b.ge	45e66c <dhcp_lease_parse_options+0x848>  // b.tcont
  45e5e0:	mov	w8, #0x7                   	// #7
  45e5e4:	stur	w8, [x29, #-200]
  45e5e8:	stur	wzr, [x29, #-204]
  45e5ec:	stur	wzr, [x29, #-208]
  45e5f0:	ldur	w0, [x29, #-208]
  45e5f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e5f8:	ldur	w8, [x29, #-200]
  45e5fc:	and	w8, w8, #0x7
  45e600:	cmp	w0, w8
  45e604:	b.lt	45e644 <dhcp_lease_parse_options+0x820>  // b.tstop
  45e608:	ldur	w8, [x29, #-208]
  45e60c:	ldur	w9, [x29, #-200]
  45e610:	orr	w0, w9, w8, lsl #10
  45e614:	ldur	w1, [x29, #-204]
  45e618:	ldur	x10, [x29, #-32]
  45e61c:	ldrh	w6, [x10, #136]
  45e620:	ldr	x2, [sp, #104]
  45e624:	mov	w3, #0x267                 	// #615
  45e628:	ldr	x4, [sp, #96]
  45e62c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e630:	add	x5, x5, #0xf3a
  45e634:	mov	w7, #0x240                 	// #576
  45e638:	bl	40a400 <log_internal_realm@plt>
  45e63c:	str	w0, [sp, #44]
  45e640:	b	45e658 <dhcp_lease_parse_options+0x834>
  45e644:	ldur	w0, [x29, #-204]
  45e648:	bl	40a410 <abs@plt>
  45e64c:	mov	w8, wzr
  45e650:	subs	w8, w8, w0, uxtb
  45e654:	str	w8, [sp, #44]
  45e658:	ldr	w8, [sp, #44]
  45e65c:	stur	w8, [x29, #-212]
  45e660:	ldur	x9, [x29, #-32]
  45e664:	mov	w8, #0x240                 	// #576
  45e668:	strh	w8, [x9, #136]
  45e66c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e670:	ldur	x0, [x29, #-16]
  45e674:	ldurb	w8, [x29, #-6]
  45e678:	mov	w1, w8
  45e67c:	ldur	x9, [x29, #-32]
  45e680:	add	x2, x9, #0x90
  45e684:	bl	45f938 <lease_parse_domain>
  45e688:	stur	w0, [x29, #-36]
  45e68c:	ldur	w8, [x29, #-36]
  45e690:	cmp	w8, #0x0
  45e694:	cset	w8, ge  // ge = tcont
  45e698:	tbnz	w8, #0, 45e71c <dhcp_lease_parse_options+0x8f8>
  45e69c:	mov	w8, #0x7                   	// #7
  45e6a0:	stur	w8, [x29, #-216]
  45e6a4:	ldur	w8, [x29, #-36]
  45e6a8:	stur	w8, [x29, #-220]
  45e6ac:	stur	wzr, [x29, #-224]
  45e6b0:	ldur	w0, [x29, #-224]
  45e6b4:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e6b8:	ldur	w8, [x29, #-216]
  45e6bc:	and	w8, w8, #0x7
  45e6c0:	cmp	w0, w8
  45e6c4:	b.lt	45e6f8 <dhcp_lease_parse_options+0x8d4>  // b.tstop
  45e6c8:	ldur	w8, [x29, #-224]
  45e6cc:	ldur	w9, [x29, #-216]
  45e6d0:	orr	w0, w9, w8, lsl #10
  45e6d4:	ldur	w1, [x29, #-220]
  45e6d8:	ldr	x2, [sp, #104]
  45e6dc:	mov	w3, #0x270                 	// #624
  45e6e0:	ldr	x4, [sp, #96]
  45e6e4:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e6e8:	add	x5, x5, #0xf7c
  45e6ec:	bl	40a400 <log_internal_realm@plt>
  45e6f0:	str	w0, [sp, #40]
  45e6f4:	b	45e70c <dhcp_lease_parse_options+0x8e8>
  45e6f8:	ldur	w0, [x29, #-220]
  45e6fc:	bl	40a410 <abs@plt>
  45e700:	mov	w8, wzr
  45e704:	subs	w8, w8, w0, uxtb
  45e708:	str	w8, [sp, #40]
  45e70c:	ldr	w8, [sp, #40]
  45e710:	stur	w8, [x29, #-228]
  45e714:	stur	wzr, [x29, #-4]
  45e718:	b	45edf8 <dhcp_lease_parse_options+0xfd4>
  45e71c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e720:	ldur	x0, [x29, #-16]
  45e724:	ldurb	w8, [x29, #-6]
  45e728:	mov	w1, w8
  45e72c:	ldur	x9, [x29, #-32]
  45e730:	add	x2, x9, #0x98
  45e734:	bl	45fb44 <dhcp_lease_parse_search_domains>
  45e738:	stur	w0, [x29, #-36]
  45e73c:	ldur	w8, [x29, #-36]
  45e740:	cmp	w8, #0x0
  45e744:	cset	w8, ge  // ge = tcont
  45e748:	tbnz	w8, #0, 45e7c4 <dhcp_lease_parse_options+0x9a0>
  45e74c:	mov	w8, #0x7                   	// #7
  45e750:	stur	w8, [x29, #-232]
  45e754:	ldur	w8, [x29, #-36]
  45e758:	stur	w8, [x29, #-236]
  45e75c:	stur	wzr, [x29, #-240]
  45e760:	ldur	w0, [x29, #-240]
  45e764:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e768:	ldur	w8, [x29, #-232]
  45e76c:	and	w8, w8, #0x7
  45e770:	cmp	w0, w8
  45e774:	b.lt	45e7a8 <dhcp_lease_parse_options+0x984>  // b.tstop
  45e778:	ldur	w8, [x29, #-240]
  45e77c:	ldur	w9, [x29, #-232]
  45e780:	orr	w0, w9, w8, lsl #10
  45e784:	ldur	w1, [x29, #-236]
  45e788:	ldr	x2, [sp, #104]
  45e78c:	mov	w3, #0x279                 	// #633
  45e790:	ldr	x4, [sp, #96]
  45e794:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e798:	add	x5, x5, #0xfa6
  45e79c:	bl	40a400 <log_internal_realm@plt>
  45e7a0:	str	w0, [sp, #36]
  45e7a4:	b	45e7bc <dhcp_lease_parse_options+0x998>
  45e7a8:	ldur	w0, [x29, #-236]
  45e7ac:	bl	40a410 <abs@plt>
  45e7b0:	mov	w8, wzr
  45e7b4:	subs	w8, w8, w0, uxtb
  45e7b8:	str	w8, [sp, #36]
  45e7bc:	ldr	w8, [sp, #36]
  45e7c0:	stur	w8, [x29, #-244]
  45e7c4:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e7c8:	ldur	x0, [x29, #-16]
  45e7cc:	ldurb	w8, [x29, #-6]
  45e7d0:	mov	w1, w8
  45e7d4:	ldur	x9, [x29, #-32]
  45e7d8:	add	x2, x9, #0xa0
  45e7dc:	bl	45f938 <lease_parse_domain>
  45e7e0:	stur	w0, [x29, #-36]
  45e7e4:	ldur	w8, [x29, #-36]
  45e7e8:	cmp	w8, #0x0
  45e7ec:	cset	w8, ge  // ge = tcont
  45e7f0:	tbnz	w8, #0, 45e874 <dhcp_lease_parse_options+0xa50>
  45e7f4:	mov	w8, #0x7                   	// #7
  45e7f8:	stur	w8, [x29, #-248]
  45e7fc:	ldur	w8, [x29, #-36]
  45e800:	stur	w8, [x29, #-252]
  45e804:	str	wzr, [sp, #256]
  45e808:	ldr	w0, [sp, #256]
  45e80c:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e810:	ldur	w8, [x29, #-248]
  45e814:	and	w8, w8, #0x7
  45e818:	cmp	w0, w8
  45e81c:	b.lt	45e850 <dhcp_lease_parse_options+0xa2c>  // b.tstop
  45e820:	ldr	w8, [sp, #256]
  45e824:	ldur	w9, [x29, #-248]
  45e828:	orr	w0, w9, w8, lsl #10
  45e82c:	ldur	w1, [x29, #-252]
  45e830:	ldr	x2, [sp, #104]
  45e834:	mov	w3, #0x27f                 	// #639
  45e838:	ldr	x4, [sp, #96]
  45e83c:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e840:	add	x5, x5, #0xfd7
  45e844:	bl	40a400 <log_internal_realm@plt>
  45e848:	str	w0, [sp, #32]
  45e84c:	b	45e864 <dhcp_lease_parse_options+0xa40>
  45e850:	ldur	w0, [x29, #-252]
  45e854:	bl	40a410 <abs@plt>
  45e858:	mov	w8, wzr
  45e85c:	subs	w8, w8, w0, uxtb
  45e860:	str	w8, [sp, #32]
  45e864:	ldr	w8, [sp, #32]
  45e868:	str	w8, [sp, #252]
  45e86c:	stur	wzr, [x29, #-4]
  45e870:	b	45edf8 <dhcp_lease_parse_options+0xfd4>
  45e874:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e878:	ldur	x0, [x29, #-16]
  45e87c:	ldurb	w8, [x29, #-6]
  45e880:	mov	w1, w8
  45e884:	ldur	x9, [x29, #-32]
  45e888:	add	x2, x9, #0xa8
  45e88c:	bl	45ffc4 <lease_parse_string>
  45e890:	stur	w0, [x29, #-36]
  45e894:	ldur	w8, [x29, #-36]
  45e898:	cmp	w8, #0x0
  45e89c:	cset	w8, ge  // ge = tcont
  45e8a0:	tbnz	w8, #0, 45e91c <dhcp_lease_parse_options+0xaf8>
  45e8a4:	mov	w8, #0x7                   	// #7
  45e8a8:	str	w8, [sp, #248]
  45e8ac:	ldur	w8, [x29, #-36]
  45e8b0:	str	w8, [sp, #244]
  45e8b4:	str	wzr, [sp, #240]
  45e8b8:	ldr	w0, [sp, #240]
  45e8bc:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e8c0:	ldr	w8, [sp, #248]
  45e8c4:	and	w8, w8, #0x7
  45e8c8:	cmp	w0, w8
  45e8cc:	b.lt	45e900 <dhcp_lease_parse_options+0xadc>  // b.tstop
  45e8d0:	ldr	w8, [sp, #240]
  45e8d4:	ldr	w9, [sp, #248]
  45e8d8:	orr	w0, w9, w8, lsl #10
  45e8dc:	ldr	w1, [sp, #244]
  45e8e0:	ldr	x2, [sp, #104]
  45e8e4:	mov	w3, #0x288                 	// #648
  45e8e8:	ldr	x4, [sp, #96]
  45e8ec:	adrp	x5, 470000 <on_inotify.__assert_in_set+0xc540>
  45e8f0:	add	x5, x5, #0xfff
  45e8f4:	bl	40a400 <log_internal_realm@plt>
  45e8f8:	str	w0, [sp, #28]
  45e8fc:	b	45e914 <dhcp_lease_parse_options+0xaf0>
  45e900:	ldr	w0, [sp, #244]
  45e904:	bl	40a410 <abs@plt>
  45e908:	mov	w8, wzr
  45e90c:	subs	w8, w8, w0, uxtb
  45e910:	str	w8, [sp, #28]
  45e914:	ldr	w8, [sp, #28]
  45e918:	str	w8, [sp, #236]
  45e91c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e920:	ldur	x0, [x29, #-16]
  45e924:	ldurb	w8, [x29, #-6]
  45e928:	mov	w1, w8
  45e92c:	ldur	x9, [x29, #-32]
  45e930:	add	x2, x9, #0x4
  45e934:	mov	w3, #0x1                   	// #1
  45e938:	bl	45ee0c <lease_parse_u32>
  45e93c:	stur	w0, [x29, #-36]
  45e940:	ldur	w8, [x29, #-36]
  45e944:	cmp	w8, #0x0
  45e948:	cset	w8, ge  // ge = tcont
  45e94c:	tbnz	w8, #0, 45e9c8 <dhcp_lease_parse_options+0xba4>
  45e950:	mov	w8, #0x7                   	// #7
  45e954:	str	w8, [sp, #232]
  45e958:	ldur	w8, [x29, #-36]
  45e95c:	str	w8, [sp, #228]
  45e960:	str	wzr, [sp, #224]
  45e964:	ldr	w0, [sp, #224]
  45e968:	bl	40a3f0 <log_get_max_level_realm@plt>
  45e96c:	ldr	w8, [sp, #232]
  45e970:	and	w8, w8, #0x7
  45e974:	cmp	w0, w8
  45e978:	b.lt	45e9ac <dhcp_lease_parse_options+0xb88>  // b.tstop
  45e97c:	ldr	w8, [sp, #224]
  45e980:	ldr	w9, [sp, #232]
  45e984:	orr	w0, w9, w8, lsl #10
  45e988:	ldr	w1, [sp, #228]
  45e98c:	ldr	x2, [sp, #104]
  45e990:	mov	w3, #0x28e                 	// #654
  45e994:	ldr	x4, [sp, #96]
  45e998:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45e99c:	add	x5, x5, #0x27
  45e9a0:	bl	40a400 <log_internal_realm@plt>
  45e9a4:	str	w0, [sp, #24]
  45e9a8:	b	45e9c0 <dhcp_lease_parse_options+0xb9c>
  45e9ac:	ldr	w0, [sp, #228]
  45e9b0:	bl	40a410 <abs@plt>
  45e9b4:	mov	w8, wzr
  45e9b8:	subs	w8, w8, w0, uxtb
  45e9bc:	str	w8, [sp, #24]
  45e9c0:	ldr	w8, [sp, #24]
  45e9c4:	str	w8, [sp, #220]
  45e9c8:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45e9cc:	ldur	x0, [x29, #-16]
  45e9d0:	ldurb	w8, [x29, #-6]
  45e9d4:	mov	w1, w8
  45e9d8:	ldur	x9, [x29, #-32]
  45e9dc:	add	x2, x9, #0x8
  45e9e0:	mov	w3, #0x1                   	// #1
  45e9e4:	bl	45ee0c <lease_parse_u32>
  45e9e8:	stur	w0, [x29, #-36]
  45e9ec:	ldur	w8, [x29, #-36]
  45e9f0:	cmp	w8, #0x0
  45e9f4:	cset	w8, ge  // ge = tcont
  45e9f8:	tbnz	w8, #0, 45ea74 <dhcp_lease_parse_options+0xc50>
  45e9fc:	mov	w8, #0x7                   	// #7
  45ea00:	str	w8, [sp, #216]
  45ea04:	ldur	w8, [x29, #-36]
  45ea08:	str	w8, [sp, #212]
  45ea0c:	str	wzr, [sp, #208]
  45ea10:	ldr	w0, [sp, #208]
  45ea14:	bl	40a3f0 <log_get_max_level_realm@plt>
  45ea18:	ldr	w8, [sp, #216]
  45ea1c:	and	w8, w8, #0x7
  45ea20:	cmp	w0, w8
  45ea24:	b.lt	45ea58 <dhcp_lease_parse_options+0xc34>  // b.tstop
  45ea28:	ldr	w8, [sp, #208]
  45ea2c:	ldr	w9, [sp, #216]
  45ea30:	orr	w0, w9, w8, lsl #10
  45ea34:	ldr	w1, [sp, #212]
  45ea38:	ldr	x2, [sp, #104]
  45ea3c:	mov	w3, #0x294                 	// #660
  45ea40:	ldr	x4, [sp, #96]
  45ea44:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45ea48:	add	x5, x5, #0x4d
  45ea4c:	bl	40a400 <log_internal_realm@plt>
  45ea50:	str	w0, [sp, #20]
  45ea54:	b	45ea6c <dhcp_lease_parse_options+0xc48>
  45ea58:	ldr	w0, [sp, #212]
  45ea5c:	bl	40a410 <abs@plt>
  45ea60:	mov	w8, wzr
  45ea64:	subs	w8, w8, w0, uxtb
  45ea68:	str	w8, [sp, #20]
  45ea6c:	ldr	w8, [sp, #20]
  45ea70:	str	w8, [sp, #204]
  45ea74:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45ea78:	ldur	x0, [x29, #-16]
  45ea7c:	ldurb	w8, [x29, #-6]
  45ea80:	mov	w1, w8
  45ea84:	ldur	x9, [x29, #-32]
  45ea88:	add	x2, x9, #0x70
  45ea8c:	ldur	x9, [x29, #-32]
  45ea90:	add	x3, x9, #0x78
  45ea94:	ldur	x9, [x29, #-32]
  45ea98:	add	x4, x9, #0x80
  45ea9c:	bl	460138 <lease_parse_classless_routes>
  45eaa0:	stur	w0, [x29, #-36]
  45eaa4:	ldur	w8, [x29, #-36]
  45eaa8:	cmp	w8, #0x0
  45eaac:	cset	w8, ge  // ge = tcont
  45eab0:	tbnz	w8, #0, 45eb2c <dhcp_lease_parse_options+0xd08>
  45eab4:	mov	w8, #0x7                   	// #7
  45eab8:	str	w8, [sp, #200]
  45eabc:	ldur	w8, [x29, #-36]
  45eac0:	str	w8, [sp, #196]
  45eac4:	str	wzr, [sp, #192]
  45eac8:	ldr	w0, [sp, #192]
  45eacc:	bl	40a3f0 <log_get_max_level_realm@plt>
  45ead0:	ldr	w8, [sp, #200]
  45ead4:	and	w8, w8, #0x7
  45ead8:	cmp	w0, w8
  45eadc:	b.lt	45eb10 <dhcp_lease_parse_options+0xcec>  // b.tstop
  45eae0:	ldr	w8, [sp, #192]
  45eae4:	ldr	w9, [sp, #200]
  45eae8:	orr	w0, w9, w8, lsl #10
  45eaec:	ldr	w1, [sp, #196]
  45eaf0:	ldr	x2, [sp, #104]
  45eaf4:	mov	w3, #0x29e                 	// #670
  45eaf8:	ldr	x4, [sp, #96]
  45eafc:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45eb00:	add	x5, x5, #0x73
  45eb04:	bl	40a400 <log_internal_realm@plt>
  45eb08:	str	w0, [sp, #16]
  45eb0c:	b	45eb24 <dhcp_lease_parse_options+0xd00>
  45eb10:	ldr	w0, [sp, #196]
  45eb14:	bl	40a410 <abs@plt>
  45eb18:	mov	w8, wzr
  45eb1c:	subs	w8, w8, w0, uxtb
  45eb20:	str	w8, [sp, #16]
  45eb24:	ldr	w8, [sp, #16]
  45eb28:	str	w8, [sp, #188]
  45eb2c:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45eb30:	add	x2, sp, #0xb0
  45eb34:	mov	x8, xzr
  45eb38:	str	x8, [sp, #176]
  45eb3c:	ldur	x0, [x29, #-16]
  45eb40:	ldurb	w9, [x29, #-6]
  45eb44:	mov	w1, w9
  45eb48:	bl	45ffc4 <lease_parse_string>
  45eb4c:	stur	w0, [x29, #-36]
  45eb50:	ldur	w9, [x29, #-36]
  45eb54:	cmp	w9, #0x0
  45eb58:	cset	w9, ge  // ge = tcont
  45eb5c:	tbnz	w9, #0, 45ebe8 <dhcp_lease_parse_options+0xdc4>
  45eb60:	mov	w8, #0x7                   	// #7
  45eb64:	str	w8, [sp, #172]
  45eb68:	ldur	w8, [x29, #-36]
  45eb6c:	str	w8, [sp, #168]
  45eb70:	str	wzr, [sp, #164]
  45eb74:	ldr	w0, [sp, #164]
  45eb78:	bl	40a3f0 <log_get_max_level_realm@plt>
  45eb7c:	ldr	w8, [sp, #172]
  45eb80:	and	w8, w8, #0x7
  45eb84:	cmp	w0, w8
  45eb88:	b.lt	45ebbc <dhcp_lease_parse_options+0xd98>  // b.tstop
  45eb8c:	ldr	w8, [sp, #164]
  45eb90:	ldr	w9, [sp, #172]
  45eb94:	orr	w0, w9, w8, lsl #10
  45eb98:	ldr	w1, [sp, #168]
  45eb9c:	ldr	x2, [sp, #104]
  45eba0:	mov	w3, #0x2a6                 	// #678
  45eba4:	ldr	x4, [sp, #96]
  45eba8:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45ebac:	add	x5, x5, #0xa2
  45ebb0:	bl	40a400 <log_internal_realm@plt>
  45ebb4:	str	w0, [sp, #12]
  45ebb8:	b	45ebd0 <dhcp_lease_parse_options+0xdac>
  45ebbc:	ldr	w0, [sp, #168]
  45ebc0:	bl	40a410 <abs@plt>
  45ebc4:	mov	w8, wzr
  45ebc8:	subs	w8, w8, w0, uxtb
  45ebcc:	str	w8, [sp, #12]
  45ebd0:	ldr	w8, [sp, #12]
  45ebd4:	str	w8, [sp, #160]
  45ebd8:	stur	wzr, [x29, #-4]
  45ebdc:	mov	w8, #0x1                   	// #1
  45ebe0:	str	w8, [sp, #156]
  45ebe4:	b	45ecac <dhcp_lease_parse_options+0xe88>
  45ebe8:	ldr	x0, [sp, #176]
  45ebec:	mov	w1, #0x7                   	// #7
  45ebf0:	bl	40bfd0 <timezone_is_valid@plt>
  45ebf4:	tbnz	w0, #0, 45ec80 <dhcp_lease_parse_options+0xe5c>
  45ebf8:	mov	w8, #0x7                   	// #7
  45ebfc:	str	w8, [sp, #152]
  45ec00:	ldur	w8, [x29, #-36]
  45ec04:	str	w8, [sp, #148]
  45ec08:	str	wzr, [sp, #144]
  45ec0c:	ldr	w0, [sp, #144]
  45ec10:	bl	40a3f0 <log_get_max_level_realm@plt>
  45ec14:	ldr	w8, [sp, #152]
  45ec18:	and	w8, w8, #0x7
  45ec1c:	cmp	w0, w8
  45ec20:	b.lt	45ec54 <dhcp_lease_parse_options+0xe30>  // b.tstop
  45ec24:	ldr	w8, [sp, #144]
  45ec28:	ldr	w9, [sp, #152]
  45ec2c:	orr	w0, w9, w8, lsl #10
  45ec30:	ldr	w1, [sp, #148]
  45ec34:	ldr	x2, [sp, #104]
  45ec38:	mov	w3, #0x2ab                 	// #683
  45ec3c:	ldr	x4, [sp, #96]
  45ec40:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45ec44:	add	x5, x5, #0xd0
  45ec48:	bl	40a400 <log_internal_realm@plt>
  45ec4c:	str	w0, [sp, #8]
  45ec50:	b	45ec68 <dhcp_lease_parse_options+0xe44>
  45ec54:	ldr	w0, [sp, #148]
  45ec58:	bl	40a410 <abs@plt>
  45ec5c:	mov	w8, wzr
  45ec60:	subs	w8, w8, w0, uxtb
  45ec64:	str	w8, [sp, #8]
  45ec68:	ldr	w8, [sp, #8]
  45ec6c:	str	w8, [sp, #140]
  45ec70:	stur	wzr, [x29, #-4]
  45ec74:	mov	w8, #0x1                   	// #1
  45ec78:	str	w8, [sp, #156]
  45ec7c:	b	45ecac <dhcp_lease_parse_options+0xe88>
  45ec80:	ldur	x8, [x29, #-32]
  45ec84:	ldr	x0, [x8, #208]
  45ec88:	bl	40a530 <free@plt>
  45ec8c:	ldr	x8, [sp, #176]
  45ec90:	ldur	x9, [x29, #-32]
  45ec94:	str	x8, [x9, #208]
  45ec98:	mov	x8, xzr
  45ec9c:	str	x8, [sp, #176]
  45eca0:	str	wzr, [sp, #136]
  45eca4:	mov	w10, #0x4                   	// #4
  45eca8:	str	w10, [sp, #156]
  45ecac:	add	x0, sp, #0xb0
  45ecb0:	bl	4604c8 <freep>
  45ecb4:	ldr	w8, [sp, #156]
  45ecb8:	cmp	w8, #0x1
  45ecbc:	b.eq	45edf8 <dhcp_lease_parse_options+0xfd4>  // b.none
  45ecc0:	b	45ecc4 <dhcp_lease_parse_options+0xea0>
  45ecc4:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45ecc8:	ldurb	w8, [x29, #-6]
  45eccc:	cmp	w8, #0x0
  45ecd0:	cset	w8, gt
  45ecd4:	tbnz	w8, #0, 45ecf0 <dhcp_lease_parse_options+0xecc>
  45ecd8:	ldur	x8, [x29, #-32]
  45ecdc:	ldr	x0, [x8, #192]
  45ece0:	bl	4604f0 <mfree>
  45ece4:	ldur	x8, [x29, #-32]
  45ece8:	str	x0, [x8, #192]
  45ecec:	b	45ed30 <dhcp_lease_parse_options+0xf0c>
  45ecf0:	ldur	x0, [x29, #-16]
  45ecf4:	ldurb	w8, [x29, #-6]
  45ecf8:	mov	w1, w8
  45ecfc:	bl	40bfe0 <memdup@plt>
  45ed00:	str	x0, [sp, #128]
  45ed04:	ldr	x9, [sp, #128]
  45ed08:	cbnz	x9, 45ed18 <dhcp_lease_parse_options+0xef4>
  45ed0c:	mov	w8, #0xfffffff4            	// #-12
  45ed10:	stur	w8, [x29, #-4]
  45ed14:	b	45edf8 <dhcp_lease_parse_options+0xfd4>
  45ed18:	ldur	x8, [x29, #-32]
  45ed1c:	ldr	x0, [x8, #192]
  45ed20:	bl	40a530 <free@plt>
  45ed24:	ldr	x8, [sp, #128]
  45ed28:	ldur	x9, [x29, #-32]
  45ed2c:	str	x8, [x9, #192]
  45ed30:	ldurb	w8, [x29, #-6]
  45ed34:	mov	w9, w8
  45ed38:	ldur	x10, [x29, #-32]
  45ed3c:	str	x9, [x10, #200]
  45ed40:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45ed44:	ldur	x0, [x29, #-32]
  45ed48:	ldurb	w1, [x29, #-5]
  45ed4c:	ldur	x2, [x29, #-16]
  45ed50:	ldurb	w3, [x29, #-6]
  45ed54:	bl	460520 <dhcp_lease_insert_private_option>
  45ed58:	stur	w0, [x29, #-36]
  45ed5c:	ldur	w8, [x29, #-36]
  45ed60:	cmp	w8, #0x0
  45ed64:	cset	w8, ge  // ge = tcont
  45ed68:	tbnz	w8, #0, 45ed78 <dhcp_lease_parse_options+0xf54>
  45ed6c:	ldur	w8, [x29, #-36]
  45ed70:	stur	w8, [x29, #-4]
  45ed74:	b	45edf8 <dhcp_lease_parse_options+0xfd4>
  45ed78:	b	45edf4 <dhcp_lease_parse_options+0xfd0>
  45ed7c:	mov	w8, #0x7                   	// #7
  45ed80:	str	w8, [sp, #124]
  45ed84:	str	wzr, [sp, #120]
  45ed88:	str	wzr, [sp, #116]
  45ed8c:	ldr	w0, [sp, #116]
  45ed90:	bl	40a3f0 <log_get_max_level_realm@plt>
  45ed94:	ldr	w8, [sp, #124]
  45ed98:	and	w8, w8, #0x7
  45ed9c:	cmp	w0, w8
  45eda0:	b.lt	45edd8 <dhcp_lease_parse_options+0xfb4>  // b.tstop
  45eda4:	ldr	w8, [sp, #116]
  45eda8:	ldr	w9, [sp, #124]
  45edac:	orr	w0, w9, w8, lsl #10
  45edb0:	ldr	w1, [sp, #120]
  45edb4:	ldurb	w6, [x29, #-5]
  45edb8:	ldr	x2, [sp, #104]
  45edbc:	mov	w3, #0x2ce                 	// #718
  45edc0:	ldr	x4, [sp, #96]
  45edc4:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45edc8:	add	x5, x5, #0xf4
  45edcc:	bl	40a400 <log_internal_realm@plt>
  45edd0:	str	w0, [sp, #4]
  45edd4:	b	45edec <dhcp_lease_parse_options+0xfc8>
  45edd8:	ldr	w0, [sp, #120]
  45eddc:	bl	40a410 <abs@plt>
  45ede0:	mov	w8, wzr
  45ede4:	subs	w8, w8, w0, uxtb
  45ede8:	str	w8, [sp, #4]
  45edec:	ldr	w8, [sp, #4]
  45edf0:	str	w8, [sp, #112]
  45edf4:	stur	wzr, [x29, #-4]
  45edf8:	ldur	w0, [x29, #-4]
  45edfc:	add	sp, sp, #0x200
  45ee00:	ldr	x28, [sp, #16]
  45ee04:	ldp	x29, x30, [sp], #32
  45ee08:	ret

000000000045ee0c <lease_parse_u32>:
  45ee0c:	sub	sp, sp, #0x40
  45ee10:	stp	x29, x30, [sp, #48]
  45ee14:	add	x29, sp, #0x30
  45ee18:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45ee1c:	add	x8, x8, #0x782
  45ee20:	add	x8, x8, #0x3
  45ee24:	stur	x0, [x29, #-16]
  45ee28:	str	x1, [sp, #24]
  45ee2c:	str	x2, [sp, #16]
  45ee30:	str	w3, [sp, #12]
  45ee34:	str	x8, [sp]
  45ee38:	ldur	x8, [x29, #-16]
  45ee3c:	cmp	x8, #0x0
  45ee40:	cset	w9, ne  // ne = any
  45ee44:	mov	w10, #0x1                   	// #1
  45ee48:	eor	w9, w9, #0x1
  45ee4c:	eor	w9, w9, w10
  45ee50:	eor	w9, w9, w10
  45ee54:	and	w9, w9, #0x1
  45ee58:	mov	w0, w9
  45ee5c:	sxtw	x8, w0
  45ee60:	cbz	x8, 45ee88 <lease_parse_u32+0x7c>
  45ee64:	mov	w8, wzr
  45ee68:	mov	w0, w8
  45ee6c:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45ee70:	add	x1, x1, #0x45a
  45ee74:	ldr	x2, [sp]
  45ee78:	mov	w3, #0x124                 	// #292
  45ee7c:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45ee80:	add	x4, x4, #0xbaa
  45ee84:	bl	40a540 <log_assert_failed_realm@plt>
  45ee88:	ldr	x8, [sp, #16]
  45ee8c:	cmp	x8, #0x0
  45ee90:	cset	w9, ne  // ne = any
  45ee94:	mov	w10, #0x1                   	// #1
  45ee98:	eor	w9, w9, #0x1
  45ee9c:	eor	w9, w9, w10
  45eea0:	eor	w9, w9, w10
  45eea4:	and	w9, w9, #0x1
  45eea8:	mov	w0, w9
  45eeac:	sxtw	x8, w0
  45eeb0:	cbz	x8, 45eed8 <lease_parse_u32+0xcc>
  45eeb4:	mov	w8, wzr
  45eeb8:	mov	w0, w8
  45eebc:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45eec0:	add	x1, x1, #0x2ff
  45eec4:	ldr	x2, [sp]
  45eec8:	mov	w3, #0x125                 	// #293
  45eecc:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45eed0:	add	x4, x4, #0xbaa
  45eed4:	bl	40a540 <log_assert_failed_realm@plt>
  45eed8:	ldr	x8, [sp, #24]
  45eedc:	cmp	x8, #0x4
  45eee0:	b.eq	45eef0 <lease_parse_u32+0xe4>  // b.none
  45eee4:	mov	w8, #0xffffffea            	// #-22
  45eee8:	stur	w8, [x29, #-4]
  45eeec:	b	45ef24 <lease_parse_u32+0x118>
  45eef0:	ldur	x0, [x29, #-16]
  45eef4:	bl	463598 <unaligned_read_be32>
  45eef8:	ldr	x8, [sp, #16]
  45eefc:	str	w0, [x8]
  45ef00:	ldr	x8, [sp, #16]
  45ef04:	ldr	w9, [x8]
  45ef08:	ldr	w10, [sp, #12]
  45ef0c:	cmp	w9, w10
  45ef10:	b.cs	45ef20 <lease_parse_u32+0x114>  // b.hs, b.nlast
  45ef14:	ldr	w8, [sp, #12]
  45ef18:	ldr	x9, [sp, #16]
  45ef1c:	str	w8, [x9]
  45ef20:	stur	wzr, [x29, #-4]
  45ef24:	ldur	w0, [x29, #-4]
  45ef28:	ldp	x29, x30, [sp, #48]
  45ef2c:	add	sp, sp, #0x40
  45ef30:	ret

000000000045ef34 <lease_parse_be32>:
  45ef34:	sub	sp, sp, #0x40
  45ef38:	stp	x29, x30, [sp, #48]
  45ef3c:	add	x29, sp, #0x30
  45ef40:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45ef44:	add	x8, x8, #0x782
  45ef48:	add	x8, x8, #0x3
  45ef4c:	stur	x0, [x29, #-16]
  45ef50:	str	x1, [sp, #24]
  45ef54:	str	x2, [sp, #16]
  45ef58:	str	x8, [sp, #8]
  45ef5c:	ldur	x8, [x29, #-16]
  45ef60:	cmp	x8, #0x0
  45ef64:	cset	w9, ne  // ne = any
  45ef68:	mov	w10, #0x1                   	// #1
  45ef6c:	eor	w9, w9, #0x1
  45ef70:	eor	w9, w9, w10
  45ef74:	eor	w9, w9, w10
  45ef78:	and	w9, w9, #0x1
  45ef7c:	mov	w0, w9
  45ef80:	sxtw	x8, w0
  45ef84:	cbz	x8, 45efac <lease_parse_be32+0x78>
  45ef88:	mov	w8, wzr
  45ef8c:	mov	w0, w8
  45ef90:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45ef94:	add	x1, x1, #0x45a
  45ef98:	ldr	x2, [sp, #8]
  45ef9c:	mov	w3, #0x140                 	// #320
  45efa0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45efa4:	add	x4, x4, #0xbed
  45efa8:	bl	40a540 <log_assert_failed_realm@plt>
  45efac:	ldr	x8, [sp, #16]
  45efb0:	cmp	x8, #0x0
  45efb4:	cset	w9, ne  // ne = any
  45efb8:	mov	w10, #0x1                   	// #1
  45efbc:	eor	w9, w9, #0x1
  45efc0:	eor	w9, w9, w10
  45efc4:	eor	w9, w9, w10
  45efc8:	and	w9, w9, #0x1
  45efcc:	mov	w0, w9
  45efd0:	sxtw	x8, w0
  45efd4:	cbz	x8, 45effc <lease_parse_be32+0xc8>
  45efd8:	mov	w8, wzr
  45efdc:	mov	w0, w8
  45efe0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45efe4:	add	x1, x1, #0x2ff
  45efe8:	ldr	x2, [sp, #8]
  45efec:	mov	w3, #0x141                 	// #321
  45eff0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45eff4:	add	x4, x4, #0xbed
  45eff8:	bl	40a540 <log_assert_failed_realm@plt>
  45effc:	ldr	x8, [sp, #24]
  45f000:	cmp	x8, #0x4
  45f004:	b.eq	45f014 <lease_parse_be32+0xe0>  // b.none
  45f008:	mov	w8, #0xffffffea            	// #-22
  45f00c:	stur	w8, [x29, #-4]
  45f010:	b	45f028 <lease_parse_be32+0xf4>
  45f014:	ldr	x8, [sp, #16]
  45f018:	ldur	x9, [x29, #-16]
  45f01c:	ldr	w10, [x9]
  45f020:	str	w10, [x8]
  45f024:	stur	wzr, [x29, #-4]
  45f028:	ldur	w0, [x29, #-4]
  45f02c:	ldp	x29, x30, [sp, #48]
  45f030:	add	sp, sp, #0x40
  45f034:	ret

000000000045f038 <lease_parse_in_addrs>:
  45f038:	sub	sp, sp, #0x60
  45f03c:	stp	x29, x30, [sp, #80]
  45f040:	add	x29, sp, #0x50
  45f044:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45f048:	add	x8, x8, #0x782
  45f04c:	add	x8, x8, #0x3
  45f050:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  45f054:	add	x9, x9, #0xc25
  45f058:	stur	x0, [x29, #-16]
  45f05c:	stur	x1, [x29, #-24]
  45f060:	stur	x2, [x29, #-32]
  45f064:	str	x3, [sp, #40]
  45f068:	str	x8, [sp, #16]
  45f06c:	str	x9, [sp, #8]
  45f070:	ldur	x8, [x29, #-16]
  45f074:	cmp	x8, #0x0
  45f078:	cset	w9, ne  // ne = any
  45f07c:	mov	w10, #0x1                   	// #1
  45f080:	eor	w9, w9, #0x1
  45f084:	eor	w9, w9, w10
  45f088:	eor	w9, w9, w10
  45f08c:	and	w9, w9, #0x1
  45f090:	mov	w0, w9
  45f094:	sxtw	x8, w0
  45f098:	cbz	x8, 45f0bc <lease_parse_in_addrs+0x84>
  45f09c:	mov	w8, wzr
  45f0a0:	mov	w0, w8
  45f0a4:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45f0a8:	add	x1, x1, #0x45a
  45f0ac:	ldr	x2, [sp, #16]
  45f0b0:	mov	w3, #0x183                 	// #387
  45f0b4:	ldr	x4, [sp, #8]
  45f0b8:	bl	40a540 <log_assert_failed_realm@plt>
  45f0bc:	ldur	x8, [x29, #-32]
  45f0c0:	cmp	x8, #0x0
  45f0c4:	cset	w9, ne  // ne = any
  45f0c8:	mov	w10, #0x1                   	// #1
  45f0cc:	eor	w9, w9, #0x1
  45f0d0:	eor	w9, w9, w10
  45f0d4:	eor	w9, w9, w10
  45f0d8:	and	w9, w9, #0x1
  45f0dc:	mov	w0, w9
  45f0e0:	sxtw	x8, w0
  45f0e4:	cbz	x8, 45f108 <lease_parse_in_addrs+0xd0>
  45f0e8:	mov	w8, wzr
  45f0ec:	mov	w0, w8
  45f0f0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45f0f4:	add	x1, x1, #0x2ff
  45f0f8:	ldr	x2, [sp, #16]
  45f0fc:	mov	w3, #0x184                 	// #388
  45f100:	ldr	x4, [sp, #8]
  45f104:	bl	40a540 <log_assert_failed_realm@plt>
  45f108:	ldr	x8, [sp, #40]
  45f10c:	cmp	x8, #0x0
  45f110:	cset	w9, ne  // ne = any
  45f114:	mov	w10, #0x1                   	// #1
  45f118:	eor	w9, w9, #0x1
  45f11c:	eor	w9, w9, w10
  45f120:	eor	w9, w9, w10
  45f124:	and	w9, w9, #0x1
  45f128:	mov	w0, w9
  45f12c:	sxtw	x8, w0
  45f130:	cbz	x8, 45f154 <lease_parse_in_addrs+0x11c>
  45f134:	mov	w8, wzr
  45f138:	mov	w0, w8
  45f13c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f140:	add	x1, x1, #0xc74
  45f144:	ldr	x2, [sp, #16]
  45f148:	mov	w3, #0x185                 	// #389
  45f14c:	ldr	x4, [sp, #8]
  45f150:	bl	40a540 <log_assert_failed_realm@plt>
  45f154:	ldur	x8, [x29, #-24]
  45f158:	cmp	x8, #0x0
  45f15c:	cset	w9, hi  // hi = pmore
  45f160:	tbnz	w9, #0, 45f184 <lease_parse_in_addrs+0x14c>
  45f164:	ldur	x8, [x29, #-32]
  45f168:	ldr	x0, [x8]
  45f16c:	bl	4604f0 <mfree>
  45f170:	ldur	x8, [x29, #-32]
  45f174:	str	x0, [x8]
  45f178:	ldr	x8, [sp, #40]
  45f17c:	str	xzr, [x8]
  45f180:	b	45f204 <lease_parse_in_addrs+0x1cc>
  45f184:	ldur	x8, [x29, #-24]
  45f188:	mov	x9, #0x4                   	// #4
  45f18c:	udiv	x10, x8, x9
  45f190:	mul	x9, x10, x9
  45f194:	subs	x8, x8, x9
  45f198:	cbz	x8, 45f1a8 <lease_parse_in_addrs+0x170>
  45f19c:	mov	w8, #0xffffffea            	// #-22
  45f1a0:	stur	w8, [x29, #-4]
  45f1a4:	b	45f208 <lease_parse_in_addrs+0x1d0>
  45f1a8:	ldur	x8, [x29, #-24]
  45f1ac:	mov	x9, #0x4                   	// #4
  45f1b0:	udiv	x8, x8, x9
  45f1b4:	str	x8, [sp, #32]
  45f1b8:	ldur	x0, [x29, #-16]
  45f1bc:	ldr	x2, [sp, #32]
  45f1c0:	mov	x1, x9
  45f1c4:	bl	46362c <memdup_multiply>
  45f1c8:	str	x0, [sp, #24]
  45f1cc:	ldr	x8, [sp, #24]
  45f1d0:	cbnz	x8, 45f1e0 <lease_parse_in_addrs+0x1a8>
  45f1d4:	mov	w8, #0xfffffff4            	// #-12
  45f1d8:	stur	w8, [x29, #-4]
  45f1dc:	b	45f208 <lease_parse_in_addrs+0x1d0>
  45f1e0:	ldur	x8, [x29, #-32]
  45f1e4:	ldr	x0, [x8]
  45f1e8:	bl	40a530 <free@plt>
  45f1ec:	ldr	x8, [sp, #24]
  45f1f0:	ldur	x9, [x29, #-32]
  45f1f4:	str	x8, [x9]
  45f1f8:	ldr	x8, [sp, #32]
  45f1fc:	ldr	x9, [sp, #40]
  45f200:	str	x8, [x9]
  45f204:	stur	wzr, [x29, #-4]
  45f208:	ldur	w0, [x29, #-4]
  45f20c:	ldp	x29, x30, [sp, #80]
  45f210:	add	sp, sp, #0x60
  45f214:	ret

000000000045f218 <lease_parse_sip_server>:
  45f218:	sub	sp, sp, #0x60
  45f21c:	stp	x29, x30, [sp, #80]
  45f220:	add	x29, sp, #0x50
  45f224:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45f228:	add	x8, x8, #0x782
  45f22c:	add	x8, x8, #0x3
  45f230:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  45f234:	add	x9, x9, #0xc7a
  45f238:	stur	x0, [x29, #-16]
  45f23c:	stur	x1, [x29, #-24]
  45f240:	stur	x2, [x29, #-32]
  45f244:	str	x3, [sp, #40]
  45f248:	str	x8, [sp, #8]
  45f24c:	str	x9, [sp]
  45f250:	ldur	x8, [x29, #-16]
  45f254:	cmp	x8, #0x0
  45f258:	cset	w9, ne  // ne = any
  45f25c:	mov	w10, #0x1                   	// #1
  45f260:	eor	w9, w9, #0x1
  45f264:	eor	w9, w9, w10
  45f268:	eor	w9, w9, w10
  45f26c:	and	w9, w9, #0x1
  45f270:	mov	w0, w9
  45f274:	sxtw	x8, w0
  45f278:	cbz	x8, 45f29c <lease_parse_sip_server+0x84>
  45f27c:	mov	w8, wzr
  45f280:	mov	w0, w8
  45f284:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45f288:	add	x1, x1, #0x45a
  45f28c:	ldr	x2, [sp, #8]
  45f290:	mov	w3, #0x1a0                 	// #416
  45f294:	ldr	x4, [sp]
  45f298:	bl	40a540 <log_assert_failed_realm@plt>
  45f29c:	ldur	x8, [x29, #-32]
  45f2a0:	cmp	x8, #0x0
  45f2a4:	cset	w9, ne  // ne = any
  45f2a8:	mov	w10, #0x1                   	// #1
  45f2ac:	eor	w9, w9, #0x1
  45f2b0:	eor	w9, w9, w10
  45f2b4:	eor	w9, w9, w10
  45f2b8:	and	w9, w9, #0x1
  45f2bc:	mov	w0, w9
  45f2c0:	sxtw	x8, w0
  45f2c4:	cbz	x8, 45f2e8 <lease_parse_sip_server+0xd0>
  45f2c8:	mov	w8, wzr
  45f2cc:	mov	w0, w8
  45f2d0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45f2d4:	add	x1, x1, #0x2ff
  45f2d8:	ldr	x2, [sp, #8]
  45f2dc:	mov	w3, #0x1a1                 	// #417
  45f2e0:	ldr	x4, [sp]
  45f2e4:	bl	40a540 <log_assert_failed_realm@plt>
  45f2e8:	ldr	x8, [sp, #40]
  45f2ec:	cmp	x8, #0x0
  45f2f0:	cset	w9, ne  // ne = any
  45f2f4:	mov	w10, #0x1                   	// #1
  45f2f8:	eor	w9, w9, #0x1
  45f2fc:	eor	w9, w9, w10
  45f300:	eor	w9, w9, w10
  45f304:	and	w9, w9, #0x1
  45f308:	mov	w0, w9
  45f30c:	sxtw	x8, w0
  45f310:	cbz	x8, 45f334 <lease_parse_sip_server+0x11c>
  45f314:	mov	w8, wzr
  45f318:	mov	w0, w8
  45f31c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f320:	add	x1, x1, #0xc74
  45f324:	ldr	x2, [sp, #8]
  45f328:	mov	w3, #0x1a2                 	// #418
  45f32c:	ldr	x4, [sp]
  45f330:	bl	40a540 <log_assert_failed_realm@plt>
  45f334:	ldur	x8, [x29, #-24]
  45f338:	cmp	x8, #0x0
  45f33c:	cset	w9, hi  // hi = pmore
  45f340:	tbnz	w9, #0, 45f364 <lease_parse_sip_server+0x14c>
  45f344:	ldur	x8, [x29, #-32]
  45f348:	ldr	x0, [x8]
  45f34c:	bl	4604f0 <mfree>
  45f350:	ldur	x8, [x29, #-32]
  45f354:	str	x0, [x8]
  45f358:	ldr	x8, [sp, #40]
  45f35c:	str	xzr, [x8]
  45f360:	b	45f3fc <lease_parse_sip_server+0x1e4>
  45f364:	ldur	x8, [x29, #-24]
  45f368:	subs	x8, x8, #0x1
  45f36c:	str	w8, [sp, #20]
  45f370:	ldr	w8, [sp, #20]
  45f374:	mov	w9, #0x4                   	// #4
  45f378:	sdiv	w10, w8, w9
  45f37c:	mul	w9, w10, w9
  45f380:	subs	w8, w8, w9
  45f384:	cbz	w8, 45f394 <lease_parse_sip_server+0x17c>
  45f388:	mov	w8, #0xffffffea            	// #-22
  45f38c:	stur	w8, [x29, #-4]
  45f390:	b	45f400 <lease_parse_sip_server+0x1e8>
  45f394:	ldr	w8, [sp, #20]
  45f398:	mov	w9, #0x4                   	// #4
  45f39c:	sdiv	w8, w8, w9
  45f3a0:	mov	w0, w8
  45f3a4:	sxtw	x10, w0
  45f3a8:	str	x10, [sp, #32]
  45f3ac:	ldur	x10, [x29, #-16]
  45f3b0:	add	x0, x10, #0x1
  45f3b4:	ldr	x2, [sp, #32]
  45f3b8:	mov	x1, #0x4                   	// #4
  45f3bc:	bl	46362c <memdup_multiply>
  45f3c0:	str	x0, [sp, #24]
  45f3c4:	ldr	x10, [sp, #24]
  45f3c8:	cbnz	x10, 45f3d8 <lease_parse_sip_server+0x1c0>
  45f3cc:	mov	w8, #0xfffffff4            	// #-12
  45f3d0:	stur	w8, [x29, #-4]
  45f3d4:	b	45f400 <lease_parse_sip_server+0x1e8>
  45f3d8:	ldur	x8, [x29, #-32]
  45f3dc:	ldr	x0, [x8]
  45f3e0:	bl	40a530 <free@plt>
  45f3e4:	ldr	x8, [sp, #24]
  45f3e8:	ldur	x9, [x29, #-32]
  45f3ec:	str	x8, [x9]
  45f3f0:	ldr	x8, [sp, #32]
  45f3f4:	ldr	x9, [sp, #40]
  45f3f8:	str	x8, [x9]
  45f3fc:	stur	wzr, [x29, #-4]
  45f400:	ldur	w0, [x29, #-4]
  45f404:	ldp	x29, x30, [sp, #80]
  45f408:	add	sp, sp, #0x60
  45f40c:	ret

000000000045f410 <lease_parse_routes>:
  45f410:	sub	sp, sp, #0x90
  45f414:	stp	x29, x30, [sp, #128]
  45f418:	add	x29, sp, #0x80
  45f41c:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45f420:	add	x8, x8, #0x782
  45f424:	add	x8, x8, #0x3
  45f428:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  45f42c:	add	x9, x9, #0xcde
  45f430:	stur	x0, [x29, #-16]
  45f434:	stur	x1, [x29, #-24]
  45f438:	stur	x2, [x29, #-32]
  45f43c:	stur	x3, [x29, #-40]
  45f440:	stur	x4, [x29, #-48]
  45f444:	str	x8, [sp, #32]
  45f448:	str	x9, [sp, #24]
  45f44c:	ldur	x8, [x29, #-16]
  45f450:	mov	w9, #0x1                   	// #1
  45f454:	str	w9, [sp, #20]
  45f458:	cbnz	x8, 45f46c <lease_parse_routes+0x5c>
  45f45c:	ldur	x8, [x29, #-24]
  45f460:	cmp	x8, #0x0
  45f464:	cset	w9, ls  // ls = plast
  45f468:	str	w9, [sp, #20]
  45f46c:	ldr	w8, [sp, #20]
  45f470:	mov	w9, #0x1                   	// #1
  45f474:	eor	w8, w8, #0x1
  45f478:	eor	w8, w8, w9
  45f47c:	eor	w8, w8, w9
  45f480:	and	w8, w8, #0x1
  45f484:	mov	w0, w8
  45f488:	sxtw	x10, w0
  45f48c:	cbz	x10, 45f4b0 <lease_parse_routes+0xa0>
  45f490:	mov	w8, wzr
  45f494:	mov	w0, w8
  45f498:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f49c:	add	x1, x1, #0xccb
  45f4a0:	ldr	x2, [sp, #32]
  45f4a4:	mov	w3, #0x1c3                 	// #451
  45f4a8:	ldr	x4, [sp, #24]
  45f4ac:	bl	40a540 <log_assert_failed_realm@plt>
  45f4b0:	ldur	x8, [x29, #-32]
  45f4b4:	cmp	x8, #0x0
  45f4b8:	cset	w9, ne  // ne = any
  45f4bc:	mov	w10, #0x1                   	// #1
  45f4c0:	eor	w9, w9, #0x1
  45f4c4:	eor	w9, w9, w10
  45f4c8:	eor	w9, w9, w10
  45f4cc:	and	w9, w9, #0x1
  45f4d0:	mov	w0, w9
  45f4d4:	sxtw	x8, w0
  45f4d8:	cbz	x8, 45f4fc <lease_parse_routes+0xec>
  45f4dc:	mov	w8, wzr
  45f4e0:	mov	w0, w8
  45f4e4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45f4e8:	add	x1, x1, #0x5bd
  45f4ec:	ldr	x2, [sp, #32]
  45f4f0:	mov	w3, #0x1c4                 	// #452
  45f4f4:	ldr	x4, [sp, #24]
  45f4f8:	bl	40a540 <log_assert_failed_realm@plt>
  45f4fc:	ldur	x8, [x29, #-40]
  45f500:	cmp	x8, #0x0
  45f504:	cset	w9, ne  // ne = any
  45f508:	mov	w10, #0x1                   	// #1
  45f50c:	eor	w9, w9, #0x1
  45f510:	eor	w9, w9, w10
  45f514:	eor	w9, w9, w10
  45f518:	and	w9, w9, #0x1
  45f51c:	mov	w0, w9
  45f520:	sxtw	x8, w0
  45f524:	cbz	x8, 45f548 <lease_parse_routes+0x138>
  45f528:	mov	w8, wzr
  45f52c:	mov	w0, w8
  45f530:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f534:	add	x1, x1, #0xd3b
  45f538:	ldr	x2, [sp, #32]
  45f53c:	mov	w3, #0x1c5                 	// #453
  45f540:	ldr	x4, [sp, #24]
  45f544:	bl	40a540 <log_assert_failed_realm@plt>
  45f548:	ldur	x8, [x29, #-48]
  45f54c:	cmp	x8, #0x0
  45f550:	cset	w9, ne  // ne = any
  45f554:	mov	w10, #0x1                   	// #1
  45f558:	eor	w9, w9, #0x1
  45f55c:	eor	w9, w9, w10
  45f560:	eor	w9, w9, w10
  45f564:	and	w9, w9, #0x1
  45f568:	mov	w0, w9
  45f56c:	sxtw	x8, w0
  45f570:	cbz	x8, 45f594 <lease_parse_routes+0x184>
  45f574:	mov	w8, wzr
  45f578:	mov	w0, w8
  45f57c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f580:	add	x1, x1, #0xd47
  45f584:	ldr	x2, [sp, #32]
  45f588:	mov	w3, #0x1c6                 	// #454
  45f58c:	ldr	x4, [sp, #24]
  45f590:	bl	40a540 <log_assert_failed_realm@plt>
  45f594:	ldur	x8, [x29, #-24]
  45f598:	cmp	x8, #0x0
  45f59c:	cset	w9, hi  // hi = pmore
  45f5a0:	tbnz	w9, #0, 45f5ac <lease_parse_routes+0x19c>
  45f5a4:	stur	wzr, [x29, #-4]
  45f5a8:	b	45f800 <lease_parse_routes+0x3f0>
  45f5ac:	ldur	x8, [x29, #-24]
  45f5b0:	mov	x9, #0x8                   	// #8
  45f5b4:	udiv	x10, x8, x9
  45f5b8:	mul	x9, x10, x9
  45f5bc:	subs	x8, x8, x9
  45f5c0:	cbz	x8, 45f5d0 <lease_parse_routes+0x1c0>
  45f5c4:	mov	w8, #0xffffffea            	// #-22
  45f5c8:	stur	w8, [x29, #-4]
  45f5cc:	b	45f800 <lease_parse_routes+0x3f0>
  45f5d0:	ldur	x0, [x29, #-32]
  45f5d4:	ldur	x1, [x29, #-48]
  45f5d8:	ldur	x8, [x29, #-40]
  45f5dc:	ldr	x8, [x8]
  45f5e0:	ldur	x9, [x29, #-24]
  45f5e4:	mov	x10, #0x8                   	// #8
  45f5e8:	udiv	x9, x9, x10
  45f5ec:	add	x2, x8, x9
  45f5f0:	mov	x3, #0xc                   	// #12
  45f5f4:	bl	40bda0 <greedy_realloc@plt>
  45f5f8:	cbnz	x0, 45f608 <lease_parse_routes+0x1f8>
  45f5fc:	mov	w8, #0xfffffff4            	// #-12
  45f600:	stur	w8, [x29, #-4]
  45f604:	b	45f800 <lease_parse_routes+0x3f0>
  45f608:	ldur	x8, [x29, #-24]
  45f60c:	cmp	x8, #0x8
  45f610:	b.cc	45f7fc <lease_parse_routes+0x3ec>  // b.lo, b.ul, b.last
  45f614:	ldur	x8, [x29, #-32]
  45f618:	ldr	x8, [x8]
  45f61c:	ldur	x9, [x29, #-40]
  45f620:	ldr	x9, [x9]
  45f624:	mov	x10, #0xc                   	// #12
  45f628:	mul	x9, x10, x9
  45f62c:	add	x8, x8, x9
  45f630:	str	x8, [sp, #64]
  45f634:	ldr	x8, [sp, #64]
  45f638:	mov	w11, #0x21                  	// #33
  45f63c:	strb	w11, [x8, #9]
  45f640:	ldur	x0, [x29, #-16]
  45f644:	ldr	x8, [sp, #64]
  45f648:	add	x1, x8, #0x8
  45f64c:	bl	40bff0 <in4_addr_default_prefixlen@plt>
  45f650:	str	w0, [sp, #60]
  45f654:	ldr	w11, [sp, #60]
  45f658:	cmp	w11, #0x0
  45f65c:	cset	w11, ge  // ge = tcont
  45f660:	tbnz	w11, #0, 45f6e0 <lease_parse_routes+0x2d0>
  45f664:	mov	w8, #0x7                   	// #7
  45f668:	str	w8, [sp, #56]
  45f66c:	str	wzr, [sp, #52]
  45f670:	str	wzr, [sp, #48]
  45f674:	ldr	w0, [sp, #48]
  45f678:	bl	40a3f0 <log_get_max_level_realm@plt>
  45f67c:	ldr	w8, [sp, #56]
  45f680:	and	w8, w8, #0x7
  45f684:	cmp	w0, w8
  45f688:	b.lt	45f6c0 <lease_parse_routes+0x2b0>  // b.tstop
  45f68c:	ldr	w8, [sp, #48]
  45f690:	ldr	w9, [sp, #56]
  45f694:	orr	w0, w9, w8, lsl #10
  45f698:	ldr	w1, [sp, #52]
  45f69c:	ldr	x2, [sp, #32]
  45f6a0:	mov	w3, #0x1d8                 	// #472
  45f6a4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45f6a8:	add	x4, x4, #0xd58
  45f6ac:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  45f6b0:	add	x5, x5, #0xd6b
  45f6b4:	bl	40a400 <log_internal_realm@plt>
  45f6b8:	str	w0, [sp, #16]
  45f6bc:	b	45f6d4 <lease_parse_routes+0x2c4>
  45f6c0:	ldr	w0, [sp, #52]
  45f6c4:	bl	40a410 <abs@plt>
  45f6c8:	mov	w8, wzr
  45f6cc:	subs	w8, w8, w0, uxtb
  45f6d0:	str	w8, [sp, #16]
  45f6d4:	ldr	w8, [sp, #16]
  45f6d8:	str	w8, [sp, #44]
  45f6dc:	b	45f608 <lease_parse_routes+0x1f8>
  45f6e0:	ldur	x0, [x29, #-16]
  45f6e4:	mov	x1, #0x4                   	// #4
  45f6e8:	sub	x2, x29, #0x34
  45f6ec:	bl	45ef34 <lease_parse_be32>
  45f6f0:	cmp	w0, #0x0
  45f6f4:	cset	w8, ge  // ge = tcont
  45f6f8:	mov	w9, #0x1                   	// #1
  45f6fc:	eor	w8, w8, #0x1
  45f700:	eor	w8, w8, w9
  45f704:	eor	w8, w8, w9
  45f708:	and	w8, w8, #0x1
  45f70c:	mov	w1, w8
  45f710:	sxtw	x10, w1
  45f714:	cbz	x10, 45f738 <lease_parse_routes+0x328>
  45f718:	mov	w8, wzr
  45f71c:	mov	w0, w8
  45f720:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f724:	add	x1, x1, #0xdb7
  45f728:	ldr	x2, [sp, #32]
  45f72c:	mov	w3, #0x1dc                 	// #476
  45f730:	ldr	x4, [sp, #24]
  45f734:	bl	40a540 <log_assert_failed_realm@plt>
  45f738:	ldr	x8, [sp, #64]
  45f73c:	ldur	w9, [x29, #-52]
  45f740:	mov	w0, w9
  45f744:	str	x8, [sp, #8]
  45f748:	bl	40c000 <inet_netof@plt>
  45f74c:	mov	w9, wzr
  45f750:	mov	w1, w9
  45f754:	bl	40c010 <inet_makeaddr@plt>
  45f758:	str	w0, [sp, #40]
  45f75c:	ldr	w9, [sp, #40]
  45f760:	ldr	x8, [sp, #8]
  45f764:	str	w9, [x8]
  45f768:	ldur	x10, [x29, #-16]
  45f76c:	add	x10, x10, #0x4
  45f770:	stur	x10, [x29, #-16]
  45f774:	ldur	x0, [x29, #-16]
  45f778:	ldr	x8, [sp, #64]
  45f77c:	add	x2, x8, #0x4
  45f780:	mov	x1, #0x4                   	// #4
  45f784:	bl	45ef34 <lease_parse_be32>
  45f788:	cmp	w0, #0x0
  45f78c:	cset	w9, ge  // ge = tcont
  45f790:	mov	w10, #0x1                   	// #1
  45f794:	eor	w9, w9, #0x1
  45f798:	eor	w9, w9, w10
  45f79c:	eor	w9, w9, w10
  45f7a0:	and	w9, w9, #0x1
  45f7a4:	mov	w1, w9
  45f7a8:	sxtw	x8, w1
  45f7ac:	cbz	x8, 45f7d0 <lease_parse_routes+0x3c0>
  45f7b0:	mov	w8, wzr
  45f7b4:	mov	w0, w8
  45f7b8:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45f7bc:	add	x1, x1, #0xde6
  45f7c0:	ldr	x2, [sp, #32]
  45f7c4:	mov	w3, #0x1e0                 	// #480
  45f7c8:	ldr	x4, [sp, #24]
  45f7cc:	bl	40a540 <log_assert_failed_realm@plt>
  45f7d0:	ldur	x8, [x29, #-16]
  45f7d4:	add	x8, x8, #0x4
  45f7d8:	stur	x8, [x29, #-16]
  45f7dc:	ldur	x8, [x29, #-24]
  45f7e0:	subs	x8, x8, #0x8
  45f7e4:	stur	x8, [x29, #-24]
  45f7e8:	ldur	x8, [x29, #-40]
  45f7ec:	ldr	x9, [x8]
  45f7f0:	add	x9, x9, #0x1
  45f7f4:	str	x9, [x8]
  45f7f8:	b	45f608 <lease_parse_routes+0x1f8>
  45f7fc:	stur	wzr, [x29, #-4]
  45f800:	ldur	w0, [x29, #-4]
  45f804:	ldp	x29, x30, [sp, #128]
  45f808:	add	sp, sp, #0x90
  45f80c:	ret

000000000045f810 <lease_parse_u16>:
  45f810:	sub	sp, sp, #0x40
  45f814:	stp	x29, x30, [sp, #48]
  45f818:	add	x29, sp, #0x30
  45f81c:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45f820:	add	x8, x8, #0x782
  45f824:	add	x8, x8, #0x3
  45f828:	stur	x0, [x29, #-16]
  45f82c:	str	x1, [sp, #24]
  45f830:	str	x2, [sp, #16]
  45f834:	strh	w3, [sp, #14]
  45f838:	str	x8, [sp]
  45f83c:	ldur	x8, [x29, #-16]
  45f840:	cmp	x8, #0x0
  45f844:	cset	w9, ne  // ne = any
  45f848:	mov	w10, #0x1                   	// #1
  45f84c:	eor	w9, w9, #0x1
  45f850:	eor	w9, w9, w10
  45f854:	eor	w9, w9, w10
  45f858:	and	w9, w9, #0x1
  45f85c:	mov	w0, w9
  45f860:	sxtw	x8, w0
  45f864:	cbz	x8, 45f88c <lease_parse_u16+0x7c>
  45f868:	mov	w8, wzr
  45f86c:	mov	w0, w8
  45f870:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45f874:	add	x1, x1, #0x45a
  45f878:	ldr	x2, [sp]
  45f87c:	mov	w3, #0x132                 	// #306
  45f880:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45f884:	add	x4, x4, #0xe1f
  45f888:	bl	40a540 <log_assert_failed_realm@plt>
  45f88c:	ldr	x8, [sp, #16]
  45f890:	cmp	x8, #0x0
  45f894:	cset	w9, ne  // ne = any
  45f898:	mov	w10, #0x1                   	// #1
  45f89c:	eor	w9, w9, #0x1
  45f8a0:	eor	w9, w9, w10
  45f8a4:	eor	w9, w9, w10
  45f8a8:	and	w9, w9, #0x1
  45f8ac:	mov	w0, w9
  45f8b0:	sxtw	x8, w0
  45f8b4:	cbz	x8, 45f8dc <lease_parse_u16+0xcc>
  45f8b8:	mov	w8, wzr
  45f8bc:	mov	w0, w8
  45f8c0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45f8c4:	add	x1, x1, #0x2ff
  45f8c8:	ldr	x2, [sp]
  45f8cc:	mov	w3, #0x133                 	// #307
  45f8d0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45f8d4:	add	x4, x4, #0xe1f
  45f8d8:	bl	40a540 <log_assert_failed_realm@plt>
  45f8dc:	ldr	x8, [sp, #24]
  45f8e0:	cmp	x8, #0x2
  45f8e4:	b.eq	45f8f4 <lease_parse_u16+0xe4>  // b.none
  45f8e8:	mov	w8, #0xffffffea            	// #-22
  45f8ec:	stur	w8, [x29, #-4]
  45f8f0:	b	45f928 <lease_parse_u16+0x118>
  45f8f4:	ldur	x0, [x29, #-16]
  45f8f8:	bl	46368c <unaligned_read_be16>
  45f8fc:	ldr	x8, [sp, #16]
  45f900:	strh	w0, [x8]
  45f904:	ldr	x8, [sp, #16]
  45f908:	ldrh	w9, [x8]
  45f90c:	ldrh	w10, [sp, #14]
  45f910:	cmp	w9, w10
  45f914:	b.ge	45f924 <lease_parse_u16+0x114>  // b.tcont
  45f918:	ldrh	w8, [sp, #14]
  45f91c:	ldr	x9, [sp, #16]
  45f920:	strh	w8, [x9]
  45f924:	stur	wzr, [x29, #-4]
  45f928:	ldur	w0, [x29, #-4]
  45f92c:	ldp	x29, x30, [sp, #48]
  45f930:	add	sp, sp, #0x40
  45f934:	ret

000000000045f938 <lease_parse_domain>:
  45f938:	sub	sp, sp, #0x60
  45f93c:	stp	x29, x30, [sp, #80]
  45f940:	add	x29, sp, #0x50
  45f944:	mov	x8, xzr
  45f948:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  45f94c:	add	x9, x9, #0x782
  45f950:	add	x9, x9, #0x3
  45f954:	stur	x0, [x29, #-16]
  45f958:	stur	x1, [x29, #-24]
  45f95c:	stur	x2, [x29, #-32]
  45f960:	str	x8, [sp, #40]
  45f964:	str	x8, [sp, #32]
  45f968:	str	x9, [sp, #8]
  45f96c:	ldur	x8, [x29, #-16]
  45f970:	cmp	x8, #0x0
  45f974:	cset	w9, ne  // ne = any
  45f978:	mov	w10, #0x1                   	// #1
  45f97c:	eor	w9, w9, #0x1
  45f980:	eor	w9, w9, w10
  45f984:	eor	w9, w9, w10
  45f988:	and	w9, w9, #0x1
  45f98c:	mov	w0, w9
  45f990:	sxtw	x8, w0
  45f994:	cbz	x8, 45f9bc <lease_parse_domain+0x84>
  45f998:	mov	w8, wzr
  45f99c:	mov	w0, w8
  45f9a0:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  45f9a4:	add	x1, x1, #0x45a
  45f9a8:	ldr	x2, [sp, #8]
  45f9ac:	mov	w3, #0x168                 	// #360
  45f9b0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45f9b4:	add	x4, x4, #0xe62
  45f9b8:	bl	40a540 <log_assert_failed_realm@plt>
  45f9bc:	ldur	x8, [x29, #-32]
  45f9c0:	cmp	x8, #0x0
  45f9c4:	cset	w9, ne  // ne = any
  45f9c8:	mov	w10, #0x1                   	// #1
  45f9cc:	eor	w9, w9, #0x1
  45f9d0:	eor	w9, w9, w10
  45f9d4:	eor	w9, w9, w10
  45f9d8:	and	w9, w9, #0x1
  45f9dc:	mov	w0, w9
  45f9e0:	sxtw	x8, w0
  45f9e4:	cbz	x8, 45fa0c <lease_parse_domain+0xd4>
  45f9e8:	mov	w8, wzr
  45f9ec:	mov	w0, w8
  45f9f0:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  45f9f4:	add	x1, x1, #0x2ff
  45f9f8:	ldr	x2, [sp, #8]
  45f9fc:	mov	w3, #0x169                 	// #361
  45fa00:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45fa04:	add	x4, x4, #0xe62
  45fa08:	bl	40a540 <log_assert_failed_realm@plt>
  45fa0c:	ldur	x0, [x29, #-16]
  45fa10:	ldur	x1, [x29, #-24]
  45fa14:	add	x2, sp, #0x28
  45fa18:	bl	45ffc4 <lease_parse_string>
  45fa1c:	str	w0, [sp, #28]
  45fa20:	ldr	w8, [sp, #28]
  45fa24:	cmp	w8, #0x0
  45fa28:	cset	w8, ge  // ge = tcont
  45fa2c:	tbnz	w8, #0, 45fa44 <lease_parse_domain+0x10c>
  45fa30:	ldr	w8, [sp, #28]
  45fa34:	stur	w8, [x29, #-4]
  45fa38:	mov	w8, #0x1                   	// #1
  45fa3c:	str	w8, [sp, #24]
  45fa40:	b	45fb24 <lease_parse_domain+0x1ec>
  45fa44:	ldr	x8, [sp, #40]
  45fa48:	cbnz	x8, 45fa70 <lease_parse_domain+0x138>
  45fa4c:	ldur	x8, [x29, #-32]
  45fa50:	ldr	x0, [x8]
  45fa54:	bl	4604f0 <mfree>
  45fa58:	ldur	x8, [x29, #-32]
  45fa5c:	str	x0, [x8]
  45fa60:	stur	wzr, [x29, #-4]
  45fa64:	mov	w9, #0x1                   	// #1
  45fa68:	str	w9, [sp, #24]
  45fa6c:	b	45fb24 <lease_parse_domain+0x1ec>
  45fa70:	ldr	x0, [sp, #40]
  45fa74:	mov	w8, wzr
  45fa78:	mov	w1, w8
  45fa7c:	add	x2, sp, #0x20
  45fa80:	bl	46370c <dns_name_normalize>
  45fa84:	str	w0, [sp, #28]
  45fa88:	ldr	w8, [sp, #28]
  45fa8c:	cmp	w8, #0x0
  45fa90:	cset	w8, ge  // ge = tcont
  45fa94:	tbnz	w8, #0, 45faac <lease_parse_domain+0x174>
  45fa98:	ldr	w8, [sp, #28]
  45fa9c:	stur	w8, [x29, #-4]
  45faa0:	mov	w8, #0x1                   	// #1
  45faa4:	str	w8, [sp, #24]
  45faa8:	b	45fb24 <lease_parse_domain+0x1ec>
  45faac:	ldr	x0, [sp, #32]
  45fab0:	bl	40c020 <is_localhost@plt>
  45fab4:	tbnz	w0, #0, 45fabc <lease_parse_domain+0x184>
  45fab8:	b	45fad0 <lease_parse_domain+0x198>
  45fabc:	mov	w8, #0xffffffea            	// #-22
  45fac0:	stur	w8, [x29, #-4]
  45fac4:	mov	w8, #0x1                   	// #1
  45fac8:	str	w8, [sp, #24]
  45facc:	b	45fb24 <lease_parse_domain+0x1ec>
  45fad0:	ldr	x0, [sp, #32]
  45fad4:	bl	40c030 <dns_name_is_root@plt>
  45fad8:	tbnz	w0, #0, 45fae0 <lease_parse_domain+0x1a8>
  45fadc:	b	45faf4 <lease_parse_domain+0x1bc>
  45fae0:	mov	w8, #0xffffffea            	// #-22
  45fae4:	stur	w8, [x29, #-4]
  45fae8:	mov	w8, #0x1                   	// #1
  45faec:	str	w8, [sp, #24]
  45faf0:	b	45fb24 <lease_parse_domain+0x1ec>
  45faf4:	ldur	x8, [x29, #-32]
  45faf8:	ldr	x0, [x8]
  45fafc:	bl	40a530 <free@plt>
  45fb00:	ldr	x8, [sp, #32]
  45fb04:	ldur	x9, [x29, #-32]
  45fb08:	str	x8, [x9]
  45fb0c:	mov	x8, xzr
  45fb10:	str	x8, [sp, #32]
  45fb14:	str	wzr, [sp, #20]
  45fb18:	stur	wzr, [x29, #-4]
  45fb1c:	mov	w10, #0x1                   	// #1
  45fb20:	str	w10, [sp, #24]
  45fb24:	add	x0, sp, #0x20
  45fb28:	bl	4604c8 <freep>
  45fb2c:	add	x0, sp, #0x28
  45fb30:	bl	4604c8 <freep>
  45fb34:	ldur	w0, [x29, #-4]
  45fb38:	ldp	x29, x30, [sp, #80]
  45fb3c:	add	sp, sp, #0x60
  45fb40:	ret

000000000045fb44 <dhcp_lease_parse_search_domains>:
  45fb44:	sub	sp, sp, #0xc0
  45fb48:	stp	x29, x30, [sp, #176]
  45fb4c:	add	x29, sp, #0xb0
  45fb50:	mov	x8, xzr
  45fb54:	mov	w9, #0x1                   	// #1
  45fb58:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  45fb5c:	add	x10, x10, #0x782
  45fb60:	add	x10, x10, #0x3
  45fb64:	mov	w11, #0x0                   	// #0
  45fb68:	stur	x0, [x29, #-16]
  45fb6c:	stur	x1, [x29, #-24]
  45fb70:	stur	x2, [x29, #-32]
  45fb74:	stur	x8, [x29, #-40]
  45fb78:	stur	xzr, [x29, #-48]
  45fb7c:	stur	xzr, [x29, #-56]
  45fb80:	str	w9, [sp, #28]
  45fb84:	str	x10, [sp, #16]
  45fb88:	str	w11, [sp, #12]
  45fb8c:	ldur	x8, [x29, #-32]
  45fb90:	cmp	x8, #0x0
  45fb94:	cset	w9, ne  // ne = any
  45fb98:	mov	w10, #0x1                   	// #1
  45fb9c:	eor	w9, w9, #0x1
  45fba0:	eor	w9, w9, w10
  45fba4:	eor	w9, w9, w10
  45fba8:	and	w9, w9, #0x1
  45fbac:	mov	w0, w9
  45fbb0:	sxtw	x8, w0
  45fbb4:	cbz	x8, 45fbdc <dhcp_lease_parse_search_domains+0x98>
  45fbb8:	mov	w8, wzr
  45fbbc:	mov	w0, w8
  45fbc0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  45fbc4:	add	x1, x1, #0xc6a
  45fbc8:	ldr	x2, [sp, #16]
  45fbcc:	mov	w3, #0x2db                 	// #731
  45fbd0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45fbd4:	add	x4, x4, #0x122
  45fbd8:	bl	40a540 <log_assert_failed_realm@plt>
  45fbdc:	ldur	x8, [x29, #-16]
  45fbe0:	mov	w9, #0x0                   	// #0
  45fbe4:	str	w9, [sp, #8]
  45fbe8:	cbz	x8, 45fbfc <dhcp_lease_parse_search_domains+0xb8>
  45fbec:	ldur	x8, [x29, #-24]
  45fbf0:	cmp	x8, #0x0
  45fbf4:	cset	w9, hi  // hi = pmore
  45fbf8:	str	w9, [sp, #8]
  45fbfc:	ldr	w8, [sp, #8]
  45fc00:	mov	w9, #0x1                   	// #1
  45fc04:	eor	w8, w8, #0x1
  45fc08:	eor	w8, w8, w9
  45fc0c:	and	w8, w8, #0x1
  45fc10:	mov	w0, w8
  45fc14:	sxtw	x10, w0
  45fc18:	cbz	x10, 45fc28 <dhcp_lease_parse_search_domains+0xe4>
  45fc1c:	ldr	w8, [sp, #28]
  45fc20:	tbnz	w8, #0, 45fc68 <dhcp_lease_parse_search_domains+0x124>
  45fc24:	b	45fc54 <dhcp_lease_parse_search_domains+0x110>
  45fc28:	mov	w8, wzr
  45fc2c:	mov	w0, w8
  45fc30:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  45fc34:	add	x1, x1, #0x169
  45fc38:	ldr	x2, [sp, #16]
  45fc3c:	mov	w3, #0x2dc                 	// #732
  45fc40:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  45fc44:	add	x4, x4, #0x122
  45fc48:	bl	40ad60 <log_assert_failed_return_realm@plt>
  45fc4c:	ldr	w8, [sp, #12]
  45fc50:	tbnz	w8, #0, 45fc68 <dhcp_lease_parse_search_domains+0x124>
  45fc54:	mov	w8, #0xffffffc3            	// #-61
  45fc58:	stur	w8, [x29, #-4]
  45fc5c:	mov	w8, #0x1                   	// #1
  45fc60:	stur	w8, [x29, #-64]
  45fc64:	b	45ffac <dhcp_lease_parse_search_domains+0x468>
  45fc68:	ldur	x8, [x29, #-48]
  45fc6c:	ldur	x9, [x29, #-24]
  45fc70:	cmp	x8, x9
  45fc74:	b.cs	45ff78 <dhcp_lease_parse_search_domains+0x434>  // b.hs, b.nlast
  45fc78:	mov	x8, xzr
  45fc7c:	stur	x8, [x29, #-72]
  45fc80:	stur	xzr, [x29, #-80]
  45fc84:	str	xzr, [sp, #88]
  45fc88:	ldur	x8, [x29, #-48]
  45fc8c:	str	x8, [sp, #80]
  45fc90:	str	xzr, [sp, #72]
  45fc94:	mov	w9, #0x1                   	// #1
  45fc98:	strb	w9, [sp, #71]
  45fc9c:	ldur	x8, [x29, #-16]
  45fca0:	ldur	x9, [x29, #-48]
  45fca4:	add	x10, x9, #0x1
  45fca8:	stur	x10, [x29, #-48]
  45fcac:	add	x8, x8, x9
  45fcb0:	ldrb	w11, [x8]
  45fcb4:	strb	w11, [sp, #70]
  45fcb8:	ldrb	w11, [sp, #70]
  45fcbc:	cbnz	w11, 45fcc4 <dhcp_lease_parse_search_domains+0x180>
  45fcc0:	b	45febc <dhcp_lease_parse_search_domains+0x378>
  45fcc4:	ldrb	w8, [sp, #70]
  45fcc8:	cmp	w8, #0x3f
  45fccc:	b.gt	45fde8 <dhcp_lease_parse_search_domains+0x2a4>
  45fcd0:	ldur	x8, [x29, #-16]
  45fcd4:	ldur	x9, [x29, #-48]
  45fcd8:	add	x8, x8, x9
  45fcdc:	str	x8, [sp, #56]
  45fce0:	ldrb	w10, [sp, #70]
  45fce4:	mov	w8, w10
  45fce8:	ldur	x9, [x29, #-48]
  45fcec:	add	x8, x9, x8
  45fcf0:	stur	x8, [x29, #-48]
  45fcf4:	ldur	x8, [x29, #-48]
  45fcf8:	ldur	x9, [x29, #-24]
  45fcfc:	cmp	x8, x9
  45fd00:	b.cc	45fd18 <dhcp_lease_parse_search_domains+0x1d4>  // b.lo, b.ul, b.last
  45fd04:	mov	w8, #0xffffffb6            	// #-74
  45fd08:	stur	w8, [x29, #-4]
  45fd0c:	mov	w8, #0x1                   	// #1
  45fd10:	stur	w8, [x29, #-64]
  45fd14:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45fd18:	ldur	x8, [x29, #-80]
  45fd1c:	ldrb	w9, [sp, #71]
  45fd20:	eor	w9, w9, #0x1
  45fd24:	and	w9, w9, #0x1
  45fd28:	add	x8, x8, w9, sxtw
  45fd2c:	add	x2, x8, #0xfd
  45fd30:	sub	x0, x29, #0x48
  45fd34:	add	x1, sp, #0x58
  45fd38:	mov	x3, #0x1                   	// #1
  45fd3c:	bl	40bda0 <greedy_realloc@plt>
  45fd40:	cbnz	x0, 45fd58 <dhcp_lease_parse_search_domains+0x214>
  45fd44:	mov	w8, #0xfffffff4            	// #-12
  45fd48:	stur	w8, [x29, #-4]
  45fd4c:	mov	w8, #0x1                   	// #1
  45fd50:	stur	w8, [x29, #-64]
  45fd54:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45fd58:	ldrb	w8, [sp, #71]
  45fd5c:	tbnz	w8, #0, 45fd64 <dhcp_lease_parse_search_domains+0x220>
  45fd60:	b	45fd70 <dhcp_lease_parse_search_domains+0x22c>
  45fd64:	mov	w8, #0x0                   	// #0
  45fd68:	strb	w8, [sp, #71]
  45fd6c:	b	45fd8c <dhcp_lease_parse_search_domains+0x248>
  45fd70:	ldur	x8, [x29, #-72]
  45fd74:	ldur	x9, [x29, #-80]
  45fd78:	add	x10, x9, #0x1
  45fd7c:	stur	x10, [x29, #-80]
  45fd80:	add	x8, x8, x9
  45fd84:	mov	w11, #0x2e                  	// #46
  45fd88:	strb	w11, [x8]
  45fd8c:	ldr	x0, [sp, #56]
  45fd90:	ldrb	w8, [sp, #70]
  45fd94:	mov	w1, w8
  45fd98:	ldur	x9, [x29, #-72]
  45fd9c:	ldur	x10, [x29, #-80]
  45fda0:	add	x2, x9, x10
  45fda4:	mov	x3, #0xfd                  	// #253
  45fda8:	bl	40c040 <dns_label_escape@plt>
  45fdac:	stur	w0, [x29, #-60]
  45fdb0:	ldur	w8, [x29, #-60]
  45fdb4:	cmp	w8, #0x0
  45fdb8:	cset	w8, ge  // ge = tcont
  45fdbc:	tbnz	w8, #0, 45fdd4 <dhcp_lease_parse_search_domains+0x290>
  45fdc0:	ldur	w8, [x29, #-60]
  45fdc4:	stur	w8, [x29, #-4]
  45fdc8:	mov	w8, #0x1                   	// #1
  45fdcc:	stur	w8, [x29, #-64]
  45fdd0:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45fdd4:	ldursw	x8, [x29, #-60]
  45fdd8:	ldur	x9, [x29, #-80]
  45fddc:	add	x8, x9, x8
  45fde0:	stur	x8, [x29, #-80]
  45fde4:	b	45feb8 <dhcp_lease_parse_search_domains+0x374>
  45fde8:	ldrb	w8, [sp, #70]
  45fdec:	and	w8, w8, #0xc0
  45fdf0:	cmp	w8, #0xc0
  45fdf4:	b.ne	45fea4 <dhcp_lease_parse_search_domains+0x360>  // b.any
  45fdf8:	ldur	x8, [x29, #-48]
  45fdfc:	ldur	x9, [x29, #-24]
  45fe00:	cmp	x8, x9
  45fe04:	b.cc	45fe1c <dhcp_lease_parse_search_domains+0x2d8>  // b.lo, b.ul, b.last
  45fe08:	mov	w8, #0xffffffb6            	// #-74
  45fe0c:	stur	w8, [x29, #-4]
  45fe10:	mov	w8, #0x1                   	// #1
  45fe14:	stur	w8, [x29, #-64]
  45fe18:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45fe1c:	ldur	x8, [x29, #-16]
  45fe20:	ldur	x9, [x29, #-48]
  45fe24:	add	x10, x9, #0x1
  45fe28:	stur	x10, [x29, #-48]
  45fe2c:	add	x8, x8, x9
  45fe30:	ldrb	w11, [x8]
  45fe34:	strb	w11, [sp, #55]
  45fe38:	ldrb	w11, [sp, #70]
  45fe3c:	and	w11, w11, #0xffffff3f
  45fe40:	and	w11, w11, #0xffff
  45fe44:	ldrb	w12, [sp, #55]
  45fe48:	orr	w11, w12, w11, lsl #8
  45fe4c:	strh	w11, [sp, #52]
  45fe50:	ldrh	w11, [sp, #52]
  45fe54:	mov	w8, w11
  45fe58:	ldr	x9, [sp, #80]
  45fe5c:	cmp	x8, x9
  45fe60:	b.cc	45fe78 <dhcp_lease_parse_search_domains+0x334>  // b.lo, b.ul, b.last
  45fe64:	mov	w8, #0xffffffb6            	// #-74
  45fe68:	stur	w8, [x29, #-4]
  45fe6c:	mov	w8, #0x1                   	// #1
  45fe70:	stur	w8, [x29, #-64]
  45fe74:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45fe78:	ldrh	w8, [sp, #52]
  45fe7c:	mov	w9, w8
  45fe80:	str	x9, [sp, #80]
  45fe84:	ldr	x9, [sp, #72]
  45fe88:	cbnz	x9, 45fe94 <dhcp_lease_parse_search_domains+0x350>
  45fe8c:	ldur	x8, [x29, #-48]
  45fe90:	str	x8, [sp, #72]
  45fe94:	ldrh	w8, [sp, #52]
  45fe98:	mov	w9, w8
  45fe9c:	stur	x9, [x29, #-48]
  45fea0:	b	45feb8 <dhcp_lease_parse_search_domains+0x374>
  45fea4:	mov	w8, #0xffffffb6            	// #-74
  45fea8:	stur	w8, [x29, #-4]
  45feac:	mov	w8, #0x1                   	// #1
  45feb0:	stur	w8, [x29, #-64]
  45feb4:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45feb8:	b	45fc9c <dhcp_lease_parse_search_domains+0x158>
  45febc:	ldur	x8, [x29, #-80]
  45fec0:	mov	x3, #0x1                   	// #1
  45fec4:	add	x2, x8, #0x1
  45fec8:	sub	x0, x29, #0x48
  45fecc:	add	x1, sp, #0x58
  45fed0:	bl	40bda0 <greedy_realloc@plt>
  45fed4:	cbnz	x0, 45feec <dhcp_lease_parse_search_domains+0x3a8>
  45fed8:	mov	w8, #0xfffffff4            	// #-12
  45fedc:	stur	w8, [x29, #-4]
  45fee0:	mov	w8, #0x1                   	// #1
  45fee4:	stur	w8, [x29, #-64]
  45fee8:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45feec:	ldur	x8, [x29, #-72]
  45fef0:	ldur	x9, [x29, #-80]
  45fef4:	add	x8, x8, x9
  45fef8:	mov	w10, #0x0                   	// #0
  45fefc:	strb	w10, [x8]
  45ff00:	ldur	x1, [x29, #-72]
  45ff04:	sub	x0, x29, #0x28
  45ff08:	bl	40b2b0 <strv_extend@plt>
  45ff0c:	stur	w0, [x29, #-60]
  45ff10:	ldur	w10, [x29, #-60]
  45ff14:	cmp	w10, #0x0
  45ff18:	cset	w10, ge  // ge = tcont
  45ff1c:	tbnz	w10, #0, 45ff34 <dhcp_lease_parse_search_domains+0x3f0>
  45ff20:	ldur	w8, [x29, #-60]
  45ff24:	stur	w8, [x29, #-4]
  45ff28:	mov	w8, #0x1                   	// #1
  45ff2c:	stur	w8, [x29, #-64]
  45ff30:	b	45ff54 <dhcp_lease_parse_search_domains+0x410>
  45ff34:	ldur	x8, [x29, #-56]
  45ff38:	add	x8, x8, #0x1
  45ff3c:	stur	x8, [x29, #-56]
  45ff40:	ldr	x8, [sp, #72]
  45ff44:	cbz	x8, 45ff50 <dhcp_lease_parse_search_domains+0x40c>
  45ff48:	ldr	x8, [sp, #72]
  45ff4c:	stur	x8, [x29, #-48]
  45ff50:	stur	wzr, [x29, #-64]
  45ff54:	sub	x0, x29, #0x48
  45ff58:	bl	4604c8 <freep>
  45ff5c:	ldur	w8, [x29, #-64]
  45ff60:	cmp	w8, #0x0
  45ff64:	cset	w8, eq  // eq = none
  45ff68:	eor	w8, w8, #0x1
  45ff6c:	tbnz	w8, #0, 45ffac <dhcp_lease_parse_search_domains+0x468>
  45ff70:	b	45ff74 <dhcp_lease_parse_search_domains+0x430>
  45ff74:	b	45fc68 <dhcp_lease_parse_search_domains+0x124>
  45ff78:	ldur	x8, [x29, #-40]
  45ff7c:	str	x8, [sp, #40]
  45ff80:	mov	x8, xzr
  45ff84:	stur	x8, [x29, #-40]
  45ff88:	ldr	x8, [sp, #40]
  45ff8c:	str	x8, [sp, #32]
  45ff90:	ldr	x8, [sp, #32]
  45ff94:	ldur	x9, [x29, #-32]
  45ff98:	str	x8, [x9]
  45ff9c:	ldur	x8, [x29, #-56]
  45ffa0:	stur	w8, [x29, #-4]
  45ffa4:	mov	w8, #0x1                   	// #1
  45ffa8:	stur	w8, [x29, #-64]
  45ffac:	sub	x0, x29, #0x28
  45ffb0:	bl	460838 <strv_freep>
  45ffb4:	ldur	w0, [x29, #-4]
  45ffb8:	ldp	x29, x30, [sp, #176]
  45ffbc:	add	sp, sp, #0xc0
  45ffc0:	ret

000000000045ffc4 <lease_parse_string>:
  45ffc4:	sub	sp, sp, #0x50
  45ffc8:	stp	x29, x30, [sp, #64]
  45ffcc:	add	x29, sp, #0x40
  45ffd0:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  45ffd4:	add	x8, x8, #0x782
  45ffd8:	add	x8, x8, #0x3
  45ffdc:	stur	x0, [x29, #-16]
  45ffe0:	stur	x1, [x29, #-24]
  45ffe4:	str	x2, [sp, #32]
  45ffe8:	str	x8, [sp, #8]
  45ffec:	ldur	x8, [x29, #-16]
  45fff0:	cmp	x8, #0x0
  45fff4:	cset	w9, ne  // ne = any
  45fff8:	mov	w10, #0x1                   	// #1
  45fffc:	eor	w9, w9, #0x1
  460000:	eor	w9, w9, w10
  460004:	eor	w9, w9, w10
  460008:	and	w9, w9, #0x1
  46000c:	mov	w0, w9
  460010:	sxtw	x8, w0
  460014:	cbz	x8, 46003c <lease_parse_string+0x78>
  460018:	mov	w8, wzr
  46001c:	mov	w0, w8
  460020:	adrp	x1, 46a000 <on_inotify.__assert_in_set+0x6540>
  460024:	add	x1, x1, #0x45a
  460028:	ldr	x2, [sp, #8]
  46002c:	mov	w3, #0x14b                 	// #331
  460030:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  460034:	add	x4, x4, #0xe9b
  460038:	bl	40a540 <log_assert_failed_realm@plt>
  46003c:	ldr	x8, [sp, #32]
  460040:	cmp	x8, #0x0
  460044:	cset	w9, ne  // ne = any
  460048:	mov	w10, #0x1                   	// #1
  46004c:	eor	w9, w9, #0x1
  460050:	eor	w9, w9, w10
  460054:	eor	w9, w9, w10
  460058:	and	w9, w9, #0x1
  46005c:	mov	w0, w9
  460060:	sxtw	x8, w0
  460064:	cbz	x8, 46008c <lease_parse_string+0xc8>
  460068:	mov	w8, wzr
  46006c:	mov	w0, w8
  460070:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  460074:	add	x1, x1, #0x2ff
  460078:	ldr	x2, [sp, #8]
  46007c:	mov	w3, #0x14c                 	// #332
  460080:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  460084:	add	x4, x4, #0xe9b
  460088:	bl	40a540 <log_assert_failed_realm@plt>
  46008c:	ldur	x8, [x29, #-24]
  460090:	cmp	x8, #0x0
  460094:	cset	w9, hi  // hi = pmore
  460098:	tbnz	w9, #0, 4600b4 <lease_parse_string+0xf0>
  46009c:	ldr	x8, [sp, #32]
  4600a0:	ldr	x0, [x8]
  4600a4:	bl	4604f0 <mfree>
  4600a8:	ldr	x8, [sp, #32]
  4600ac:	str	x0, [x8]
  4600b0:	b	460124 <lease_parse_string+0x160>
  4600b4:	ldur	x0, [x29, #-16]
  4600b8:	ldur	x8, [x29, #-24]
  4600bc:	subs	x2, x8, #0x1
  4600c0:	mov	w9, wzr
  4600c4:	mov	w1, w9
  4600c8:	bl	40c050 <memchr@plt>
  4600cc:	cbz	x0, 4600dc <lease_parse_string+0x118>
  4600d0:	mov	w8, #0xffffffea            	// #-22
  4600d4:	stur	w8, [x29, #-4]
  4600d8:	b	460128 <lease_parse_string+0x164>
  4600dc:	ldur	x0, [x29, #-16]
  4600e0:	ldur	x1, [x29, #-24]
  4600e4:	bl	40c060 <memdup_suffix0@plt>
  4600e8:	str	x0, [sp, #24]
  4600ec:	ldr	x8, [sp, #24]
  4600f0:	cbnz	x8, 460100 <lease_parse_string+0x13c>
  4600f4:	mov	w8, #0xfffffff4            	// #-12
  4600f8:	stur	w8, [x29, #-4]
  4600fc:	b	460128 <lease_parse_string+0x164>
  460100:	ldr	x8, [sp, #32]
  460104:	ldr	x0, [x8]
  460108:	bl	40a530 <free@plt>
  46010c:	ldr	x8, [sp, #24]
  460110:	ldr	x9, [sp, #32]
  460114:	str	x8, [x9]
  460118:	mov	x8, xzr
  46011c:	str	x8, [sp, #24]
  460120:	str	wzr, [sp, #20]
  460124:	stur	wzr, [x29, #-4]
  460128:	ldur	w0, [x29, #-4]
  46012c:	ldp	x29, x30, [sp, #64]
  460130:	add	sp, sp, #0x50
  460134:	ret

0000000000460138 <lease_parse_classless_routes>:
  460138:	sub	sp, sp, #0x70
  46013c:	stp	x29, x30, [sp, #96]
  460140:	add	x29, sp, #0x60
  460144:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  460148:	add	x8, x8, #0x782
  46014c:	add	x8, x8, #0x3
  460150:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  460154:	add	x9, x9, #0xed4
  460158:	stur	x0, [x29, #-16]
  46015c:	stur	x1, [x29, #-24]
  460160:	stur	x2, [x29, #-32]
  460164:	stur	x3, [x29, #-40]
  460168:	str	x4, [sp, #48]
  46016c:	str	x8, [sp, #24]
  460170:	str	x9, [sp, #16]
  460174:	ldur	x8, [x29, #-16]
  460178:	mov	w9, #0x1                   	// #1
  46017c:	str	w9, [sp, #12]
  460180:	cbnz	x8, 460194 <lease_parse_classless_routes+0x5c>
  460184:	ldur	x8, [x29, #-24]
  460188:	cmp	x8, #0x0
  46018c:	cset	w9, ls  // ls = plast
  460190:	str	w9, [sp, #12]
  460194:	ldr	w8, [sp, #12]
  460198:	mov	w9, #0x1                   	// #1
  46019c:	eor	w8, w8, #0x1
  4601a0:	eor	w8, w8, w9
  4601a4:	eor	w8, w8, w9
  4601a8:	and	w8, w8, #0x1
  4601ac:	mov	w0, w8
  4601b0:	sxtw	x10, w0
  4601b4:	cbz	x10, 4601d8 <lease_parse_classless_routes+0xa0>
  4601b8:	mov	w8, wzr
  4601bc:	mov	w0, w8
  4601c0:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4601c4:	add	x1, x1, #0xccb
  4601c8:	ldr	x2, [sp, #24]
  4601cc:	mov	w3, #0x1ef                 	// #495
  4601d0:	ldr	x4, [sp, #16]
  4601d4:	bl	40a540 <log_assert_failed_realm@plt>
  4601d8:	ldur	x8, [x29, #-32]
  4601dc:	cmp	x8, #0x0
  4601e0:	cset	w9, ne  // ne = any
  4601e4:	mov	w10, #0x1                   	// #1
  4601e8:	eor	w9, w9, #0x1
  4601ec:	eor	w9, w9, w10
  4601f0:	eor	w9, w9, w10
  4601f4:	and	w9, w9, #0x1
  4601f8:	mov	w0, w9
  4601fc:	sxtw	x8, w0
  460200:	cbz	x8, 460224 <lease_parse_classless_routes+0xec>
  460204:	mov	w8, wzr
  460208:	mov	w0, w8
  46020c:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  460210:	add	x1, x1, #0x5bd
  460214:	ldr	x2, [sp, #24]
  460218:	mov	w3, #0x1f0                 	// #496
  46021c:	ldr	x4, [sp, #16]
  460220:	bl	40a540 <log_assert_failed_realm@plt>
  460224:	ldur	x8, [x29, #-40]
  460228:	cmp	x8, #0x0
  46022c:	cset	w9, ne  // ne = any
  460230:	mov	w10, #0x1                   	// #1
  460234:	eor	w9, w9, #0x1
  460238:	eor	w9, w9, w10
  46023c:	eor	w9, w9, w10
  460240:	and	w9, w9, #0x1
  460244:	mov	w0, w9
  460248:	sxtw	x8, w0
  46024c:	cbz	x8, 460270 <lease_parse_classless_routes+0x138>
  460250:	mov	w8, wzr
  460254:	mov	w0, w8
  460258:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  46025c:	add	x1, x1, #0xd3b
  460260:	ldr	x2, [sp, #24]
  460264:	mov	w3, #0x1f1                 	// #497
  460268:	ldr	x4, [sp, #16]
  46026c:	bl	40a540 <log_assert_failed_realm@plt>
  460270:	ldr	x8, [sp, #48]
  460274:	cmp	x8, #0x0
  460278:	cset	w9, ne  // ne = any
  46027c:	mov	w10, #0x1                   	// #1
  460280:	eor	w9, w9, #0x1
  460284:	eor	w9, w9, w10
  460288:	eor	w9, w9, w10
  46028c:	and	w9, w9, #0x1
  460290:	mov	w0, w9
  460294:	sxtw	x8, w0
  460298:	cbz	x8, 4602bc <lease_parse_classless_routes+0x184>
  46029c:	mov	w8, wzr
  4602a0:	mov	w0, w8
  4602a4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4602a8:	add	x1, x1, #0xd47
  4602ac:	ldr	x2, [sp, #24]
  4602b0:	mov	w3, #0x1f2                 	// #498
  4602b4:	ldr	x4, [sp, #16]
  4602b8:	bl	40a540 <log_assert_failed_realm@plt>
  4602bc:	ldur	x8, [x29, #-24]
  4602c0:	cmp	x8, #0x0
  4602c4:	cset	w9, hi  // hi = pmore
  4602c8:	tbnz	w9, #0, 4602d4 <lease_parse_classless_routes+0x19c>
  4602cc:	stur	wzr, [x29, #-4]
  4602d0:	b	4604b8 <lease_parse_classless_routes+0x380>
  4602d4:	ldur	x8, [x29, #-24]
  4602d8:	cmp	x8, #0x0
  4602dc:	cset	w9, ls  // ls = plast
  4602e0:	tbnz	w9, #0, 4604b4 <lease_parse_classless_routes+0x37c>
  4602e4:	ldur	x0, [x29, #-32]
  4602e8:	ldr	x1, [sp, #48]
  4602ec:	ldur	x8, [x29, #-40]
  4602f0:	ldr	x8, [x8]
  4602f4:	add	x2, x8, #0x1
  4602f8:	mov	x3, #0xc                   	// #12
  4602fc:	bl	40bda0 <greedy_realloc@plt>
  460300:	cbnz	x0, 460310 <lease_parse_classless_routes+0x1d8>
  460304:	mov	w8, #0xfffffff4            	// #-12
  460308:	stur	w8, [x29, #-4]
  46030c:	b	4604b8 <lease_parse_classless_routes+0x380>
  460310:	ldur	x8, [x29, #-32]
  460314:	ldr	x8, [x8]
  460318:	ldur	x9, [x29, #-40]
  46031c:	ldr	x9, [x9]
  460320:	mov	x10, #0xc                   	// #12
  460324:	mul	x9, x10, x9
  460328:	add	x8, x8, x9
  46032c:	str	x8, [sp, #32]
  460330:	ldr	x8, [sp, #32]
  460334:	mov	w11, #0x79                  	// #121
  460338:	strb	w11, [x8, #9]
  46033c:	ldur	x8, [x29, #-16]
  460340:	ldrb	w11, [x8]
  460344:	cbnz	w11, 460354 <lease_parse_classless_routes+0x21c>
  460348:	mov	w8, wzr
  46034c:	str	w8, [sp, #8]
  460350:	b	460370 <lease_parse_classless_routes+0x238>
  460354:	ldur	x8, [x29, #-16]
  460358:	ldrb	w9, [x8]
  46035c:	subs	w9, w9, #0x1
  460360:	mov	w10, #0x8                   	// #8
  460364:	sdiv	w9, w9, w10
  460368:	add	w9, w9, #0x1
  46036c:	str	w9, [sp, #8]
  460370:	ldr	w8, [sp, #8]
  460374:	strb	w8, [sp, #47]
  460378:	ldur	x9, [x29, #-16]
  46037c:	ldrb	w8, [x9]
  460380:	ldr	x9, [sp, #32]
  460384:	strb	w8, [x9, #8]
  460388:	ldur	x9, [x29, #-16]
  46038c:	add	x9, x9, #0x1
  460390:	stur	x9, [x29, #-16]
  460394:	ldur	x9, [x29, #-24]
  460398:	subs	x9, x9, #0x1
  46039c:	stur	x9, [x29, #-24]
  4603a0:	ldrb	w8, [sp, #47]
  4603a4:	cmp	w8, #0x4
  4603a8:	b.gt	4603c0 <lease_parse_classless_routes+0x288>
  4603ac:	ldur	x8, [x29, #-24]
  4603b0:	ldrb	w9, [sp, #47]
  4603b4:	mov	w10, w9
  4603b8:	cmp	x8, x10
  4603bc:	b.cs	4603cc <lease_parse_classless_routes+0x294>  // b.hs, b.nlast
  4603c0:	mov	w8, #0xffffffea            	// #-22
  4603c4:	stur	w8, [x29, #-4]
  4603c8:	b	4604b8 <lease_parse_classless_routes+0x380>
  4603cc:	ldr	x8, [sp, #32]
  4603d0:	str	wzr, [x8]
  4603d4:	ldr	x0, [sp, #32]
  4603d8:	ldur	x1, [x29, #-16]
  4603dc:	ldrb	w9, [sp, #47]
  4603e0:	mov	w2, w9
  4603e4:	bl	40a600 <memcpy@plt>
  4603e8:	ldrb	w9, [sp, #47]
  4603ec:	ldur	x8, [x29, #-16]
  4603f0:	mov	w0, w9
  4603f4:	sxtw	x10, w0
  4603f8:	add	x8, x8, x10
  4603fc:	stur	x8, [x29, #-16]
  460400:	ldrb	w9, [sp, #47]
  460404:	mov	w8, w9
  460408:	ldur	x10, [x29, #-24]
  46040c:	subs	x8, x10, x8
  460410:	stur	x8, [x29, #-24]
  460414:	ldur	x8, [x29, #-24]
  460418:	cmp	x8, #0x4
  46041c:	b.cs	46042c <lease_parse_classless_routes+0x2f4>  // b.hs, b.nlast
  460420:	mov	w8, #0xffffffea            	// #-22
  460424:	stur	w8, [x29, #-4]
  460428:	b	4604b8 <lease_parse_classless_routes+0x380>
  46042c:	ldur	x0, [x29, #-16]
  460430:	ldr	x8, [sp, #32]
  460434:	add	x2, x8, #0x4
  460438:	mov	x1, #0x4                   	// #4
  46043c:	bl	45ef34 <lease_parse_be32>
  460440:	cmp	w0, #0x0
  460444:	cset	w9, ge  // ge = tcont
  460448:	mov	w10, #0x1                   	// #1
  46044c:	eor	w9, w9, #0x1
  460450:	eor	w9, w9, w10
  460454:	eor	w9, w9, w10
  460458:	and	w9, w9, #0x1
  46045c:	mov	w1, w9
  460460:	sxtw	x8, w1
  460464:	cbz	x8, 460488 <lease_parse_classless_routes+0x350>
  460468:	mov	w8, wzr
  46046c:	mov	w0, w8
  460470:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460474:	add	x1, x1, #0xde6
  460478:	ldr	x2, [sp, #24]
  46047c:	mov	w3, #0x214                 	// #532
  460480:	ldr	x4, [sp, #16]
  460484:	bl	40a540 <log_assert_failed_realm@plt>
  460488:	ldur	x8, [x29, #-16]
  46048c:	add	x8, x8, #0x4
  460490:	stur	x8, [x29, #-16]
  460494:	ldur	x8, [x29, #-24]
  460498:	subs	x8, x8, #0x4
  46049c:	stur	x8, [x29, #-24]
  4604a0:	ldur	x8, [x29, #-40]
  4604a4:	ldr	x9, [x8]
  4604a8:	add	x9, x9, #0x1
  4604ac:	str	x9, [x8]
  4604b0:	b	4602d4 <lease_parse_classless_routes+0x19c>
  4604b4:	stur	wzr, [x29, #-4]
  4604b8:	ldur	w0, [x29, #-4]
  4604bc:	ldp	x29, x30, [sp, #96]
  4604c0:	add	sp, sp, #0x70
  4604c4:	ret

00000000004604c8 <freep>:
  4604c8:	sub	sp, sp, #0x20
  4604cc:	stp	x29, x30, [sp, #16]
  4604d0:	add	x29, sp, #0x10
  4604d4:	str	x0, [sp, #8]
  4604d8:	ldr	x8, [sp, #8]
  4604dc:	ldr	x0, [x8]
  4604e0:	bl	40a530 <free@plt>
  4604e4:	ldp	x29, x30, [sp, #16]
  4604e8:	add	sp, sp, #0x20
  4604ec:	ret

00000000004604f0 <mfree>:
  4604f0:	sub	sp, sp, #0x20
  4604f4:	stp	x29, x30, [sp, #16]
  4604f8:	add	x29, sp, #0x10
  4604fc:	mov	x8, xzr
  460500:	str	x0, [sp, #8]
  460504:	ldr	x0, [sp, #8]
  460508:	str	x8, [sp]
  46050c:	bl	40a530 <free@plt>
  460510:	ldr	x0, [sp]
  460514:	ldp	x29, x30, [sp, #16]
  460518:	add	sp, sp, #0x20
  46051c:	ret

0000000000460520 <dhcp_lease_insert_private_option>:
  460520:	sub	sp, sp, #0x90
  460524:	stp	x29, x30, [sp, #128]
  460528:	add	x29, sp, #0x80
  46052c:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  460530:	add	x8, x8, #0x782
  460534:	add	x8, x8, #0x3
  460538:	stur	x0, [x29, #-16]
  46053c:	sturb	w1, [x29, #-17]
  460540:	stur	x2, [x29, #-32]
  460544:	sturb	w3, [x29, #-33]
  460548:	str	x8, [sp, #16]
  46054c:	ldur	x8, [x29, #-16]
  460550:	cmp	x8, #0x0
  460554:	cset	w9, ne  // ne = any
  460558:	mov	w10, #0x1                   	// #1
  46055c:	eor	w9, w9, #0x1
  460560:	eor	w9, w9, w10
  460564:	eor	w9, w9, w10
  460568:	and	w9, w9, #0x1
  46056c:	mov	w0, w9
  460570:	sxtw	x8, w0
  460574:	cbz	x8, 46059c <dhcp_lease_insert_private_option+0x7c>
  460578:	mov	w8, wzr
  46057c:	mov	w0, w8
  460580:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  460584:	add	x1, x1, #0x77c
  460588:	ldr	x2, [sp, #16]
  46058c:	mov	w3, #0x331                 	// #817
  460590:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  460594:	add	x4, x4, #0x17b
  460598:	bl	40a540 <log_assert_failed_realm@plt>
  46059c:	ldur	x8, [x29, #-16]
  4605a0:	ldr	x8, [x8, #216]
  4605a4:	stur	x8, [x29, #-48]
  4605a8:	ldur	x8, [x29, #-48]
  4605ac:	cbz	x8, 460670 <dhcp_lease_insert_private_option+0x150>
  4605b0:	ldurb	w8, [x29, #-17]
  4605b4:	ldur	x9, [x29, #-48]
  4605b8:	ldrb	w10, [x9, #16]
  4605bc:	cmp	w8, w10
  4605c0:	b.ge	4605c8 <dhcp_lease_insert_private_option+0xa8>  // b.tcont
  4605c4:	b	460670 <dhcp_lease_insert_private_option+0x150>
  4605c8:	ldurb	w8, [x29, #-17]
  4605cc:	ldur	x9, [x29, #-48]
  4605d0:	ldrb	w10, [x9, #16]
  4605d4:	cmp	w8, w10
  4605d8:	b.ne	460660 <dhcp_lease_insert_private_option+0x140>  // b.any
  4605dc:	mov	w8, #0x7                   	// #7
  4605e0:	stur	w8, [x29, #-60]
  4605e4:	str	wzr, [sp, #64]
  4605e8:	str	wzr, [sp, #60]
  4605ec:	ldr	w0, [sp, #60]
  4605f0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4605f4:	ldur	w8, [x29, #-60]
  4605f8:	and	w8, w8, #0x7
  4605fc:	cmp	w0, w8
  460600:	b.lt	46063c <dhcp_lease_insert_private_option+0x11c>  // b.tstop
  460604:	ldr	w8, [sp, #60]
  460608:	ldur	w9, [x29, #-60]
  46060c:	orr	w0, w9, w8, lsl #10
  460610:	ldr	w1, [sp, #64]
  460614:	ldurb	w6, [x29, #-17]
  460618:	ldr	x2, [sp, #16]
  46061c:	mov	w3, #0x337                 	// #823
  460620:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  460624:	add	x4, x4, #0x1d1
  460628:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  46062c:	add	x5, x5, #0x1f2
  460630:	bl	40a400 <log_internal_realm@plt>
  460634:	str	w0, [sp, #12]
  460638:	b	460650 <dhcp_lease_insert_private_option+0x130>
  46063c:	ldr	w0, [sp, #64]
  460640:	bl	40a410 <abs@plt>
  460644:	mov	w8, wzr
  460648:	subs	w8, w8, w0, uxtb
  46064c:	str	w8, [sp, #12]
  460650:	ldr	w8, [sp, #12]
  460654:	str	w8, [sp, #56]
  460658:	stur	wzr, [x29, #-4]
  46065c:	b	460828 <dhcp_lease_insert_private_option+0x308>
  460660:	ldur	x8, [x29, #-48]
  460664:	ldr	x8, [x8]
  460668:	stur	x8, [x29, #-48]
  46066c:	b	4605a8 <dhcp_lease_insert_private_option+0x88>
  460670:	mov	x0, #0x20                  	// #32
  460674:	mov	x1, #0x1                   	// #1
  460678:	bl	45d688 <malloc_multiply>
  46067c:	stur	x0, [x29, #-56]
  460680:	ldur	x8, [x29, #-56]
  460684:	cbnz	x8, 460694 <dhcp_lease_insert_private_option+0x174>
  460688:	mov	w8, #0xfffffff4            	// #-12
  46068c:	stur	w8, [x29, #-4]
  460690:	b	460828 <dhcp_lease_insert_private_option+0x308>
  460694:	ldurb	w8, [x29, #-17]
  460698:	ldur	x9, [x29, #-56]
  46069c:	strb	w8, [x9, #16]
  4606a0:	ldurb	w8, [x29, #-33]
  4606a4:	ldur	x9, [x29, #-56]
  4606a8:	strb	w8, [x9, #17]
  4606ac:	ldur	x0, [x29, #-32]
  4606b0:	ldurb	w8, [x29, #-33]
  4606b4:	mov	w1, w8
  4606b8:	bl	40bfe0 <memdup@plt>
  4606bc:	ldur	x9, [x29, #-56]
  4606c0:	str	x0, [x9, #24]
  4606c4:	ldur	x9, [x29, #-56]
  4606c8:	ldr	x9, [x9, #24]
  4606cc:	cbnz	x9, 4606e4 <dhcp_lease_insert_private_option+0x1c4>
  4606d0:	ldur	x0, [x29, #-56]
  4606d4:	bl	40a530 <free@plt>
  4606d8:	mov	w8, #0xfffffff4            	// #-12
  4606dc:	stur	w8, [x29, #-4]
  4606e0:	b	460828 <dhcp_lease_insert_private_option+0x308>
  4606e4:	ldur	x8, [x29, #-16]
  4606e8:	add	x8, x8, #0xd8
  4606ec:	str	x8, [sp, #48]
  4606f0:	ldur	x8, [x29, #-48]
  4606f4:	str	x8, [sp, #40]
  4606f8:	ldur	x8, [x29, #-56]
  4606fc:	str	x8, [sp, #32]
  460700:	ldr	x8, [sp, #32]
  460704:	cmp	x8, #0x0
  460708:	cset	w9, ne  // ne = any
  46070c:	mov	w10, #0x1                   	// #1
  460710:	eor	w9, w9, #0x1
  460714:	eor	w9, w9, w10
  460718:	eor	w9, w9, w10
  46071c:	and	w9, w9, #0x1
  460720:	mov	w0, w9
  460724:	sxtw	x8, w0
  460728:	cbz	x8, 460750 <dhcp_lease_insert_private_option+0x230>
  46072c:	mov	w8, wzr
  460730:	mov	w0, w8
  460734:	adrp	x1, 465000 <on_inotify.__assert_in_set+0x1540>
  460738:	add	x1, x1, #0x876
  46073c:	ldr	x2, [sp, #16]
  460740:	mov	w3, #0x348                 	// #840
  460744:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  460748:	add	x4, x4, #0x17b
  46074c:	bl	40a540 <log_assert_failed_realm@plt>
  460750:	ldr	x8, [sp, #40]
  460754:	cbnz	x8, 4607d8 <dhcp_lease_insert_private_option+0x2b8>
  460758:	ldr	x8, [sp, #48]
  46075c:	ldr	x8, [x8]
  460760:	cbnz	x8, 460788 <dhcp_lease_insert_private_option+0x268>
  460764:	ldr	x8, [sp, #32]
  460768:	mov	x9, xzr
  46076c:	str	x9, [x8]
  460770:	ldr	x8, [sp, #32]
  460774:	str	x9, [x8, #8]
  460778:	ldr	x8, [sp, #32]
  46077c:	ldr	x9, [sp, #48]
  460780:	str	x8, [x9]
  460784:	b	4607d4 <dhcp_lease_insert_private_option+0x2b4>
  460788:	ldur	x8, [x29, #-16]
  46078c:	ldr	x8, [x8, #216]
  460790:	str	x8, [sp, #24]
  460794:	ldr	x8, [sp, #24]
  460798:	ldr	x8, [x8]
  46079c:	cbz	x8, 4607b0 <dhcp_lease_insert_private_option+0x290>
  4607a0:	ldr	x8, [sp, #24]
  4607a4:	ldr	x8, [x8]
  4607a8:	str	x8, [sp, #24]
  4607ac:	b	460794 <dhcp_lease_insert_private_option+0x274>
  4607b0:	ldr	x8, [sp, #32]
  4607b4:	mov	x9, xzr
  4607b8:	str	x9, [x8]
  4607bc:	ldr	x8, [sp, #24]
  4607c0:	ldr	x9, [sp, #32]
  4607c4:	str	x8, [x9, #8]
  4607c8:	ldr	x8, [sp, #32]
  4607cc:	ldr	x9, [sp, #24]
  4607d0:	str	x8, [x9]
  4607d4:	b	460824 <dhcp_lease_insert_private_option+0x304>
  4607d8:	ldr	x8, [sp, #40]
  4607dc:	ldr	x8, [x8, #8]
  4607e0:	ldr	x9, [sp, #32]
  4607e4:	str	x8, [x9, #8]
  4607e8:	cbz	x8, 460800 <dhcp_lease_insert_private_option+0x2e0>
  4607ec:	ldr	x8, [sp, #32]
  4607f0:	ldr	x9, [sp, #32]
  4607f4:	ldr	x9, [x9, #8]
  4607f8:	str	x8, [x9]
  4607fc:	b	46080c <dhcp_lease_insert_private_option+0x2ec>
  460800:	ldr	x8, [sp, #32]
  460804:	ldr	x9, [sp, #48]
  460808:	str	x8, [x9]
  46080c:	ldr	x8, [sp, #40]
  460810:	ldr	x9, [sp, #32]
  460814:	str	x8, [x9]
  460818:	ldr	x8, [sp, #32]
  46081c:	ldr	x9, [sp, #40]
  460820:	str	x8, [x9, #8]
  460824:	stur	wzr, [x29, #-4]
  460828:	ldur	w0, [x29, #-4]
  46082c:	ldp	x29, x30, [sp, #128]
  460830:	add	sp, sp, #0x90
  460834:	ret

0000000000460838 <strv_freep>:
  460838:	sub	sp, sp, #0x20
  46083c:	stp	x29, x30, [sp, #16]
  460840:	add	x29, sp, #0x10
  460844:	str	x0, [sp, #8]
  460848:	ldr	x8, [sp, #8]
  46084c:	ldr	x8, [x8]
  460850:	cbz	x8, 460860 <strv_freep+0x28>
  460854:	ldr	x8, [sp, #8]
  460858:	ldr	x0, [x8]
  46085c:	bl	40afa0 <strv_free@plt>
  460860:	ldp	x29, x30, [sp, #16]
  460864:	add	sp, sp, #0x20
  460868:	ret

000000000046086c <dhcp_lease_new>:
  46086c:	sub	sp, sp, #0x30
  460870:	stp	x29, x30, [sp, #32]
  460874:	add	x29, sp, #0x20
  460878:	mov	x8, #0x1                   	// #1
  46087c:	mov	x1, #0xe0                  	// #224
  460880:	str	x0, [sp, #16]
  460884:	mov	x0, x8
  460888:	bl	40b780 <calloc@plt>
  46088c:	str	x0, [sp, #8]
  460890:	ldr	x8, [sp, #8]
  460894:	cbnz	x8, 4608a4 <dhcp_lease_new+0x38>
  460898:	mov	w8, #0xfffffff4            	// #-12
  46089c:	stur	w8, [x29, #-4]
  4608a0:	b	4608c0 <dhcp_lease_new+0x54>
  4608a4:	ldr	x8, [sp, #8]
  4608a8:	mov	w9, #0x1                   	// #1
  4608ac:	str	w9, [x8]
  4608b0:	ldr	x8, [sp, #8]
  4608b4:	ldr	x10, [sp, #16]
  4608b8:	str	x8, [x10]
  4608bc:	stur	wzr, [x29, #-4]
  4608c0:	ldur	w0, [x29, #-4]
  4608c4:	ldp	x29, x30, [sp, #32]
  4608c8:	add	sp, sp, #0x30
  4608cc:	ret

00000000004608d0 <dhcp_lease_save>:
  4608d0:	sub	sp, sp, #0x170
  4608d4:	stp	x29, x30, [sp, #336]
  4608d8:	str	x28, [sp, #352]
  4608dc:	add	x29, sp, #0x150
  4608e0:	sub	x8, x29, #0x50
  4608e4:	mov	x9, xzr
  4608e8:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  4608ec:	add	x10, x10, #0x782
  4608f0:	add	x10, x10, #0x3
  4608f4:	adrp	x11, 471000 <on_inotify.__assert_in_set+0xd540>
  4608f8:	add	x11, x11, #0x218
  4608fc:	str	x0, [x8, #64]
  460900:	str	x1, [x8, #56]
  460904:	str	x9, [x8, #48]
  460908:	str	x9, [x8, #40]
  46090c:	stur	x9, [x29, #-136]
  460910:	stur	x9, [x29, #-144]
  460914:	str	x8, [sp, #112]
  460918:	str	x10, [sp, #104]
  46091c:	str	x11, [sp, #96]
  460920:	ldr	x8, [sp, #112]
  460924:	ldr	x9, [x8, #64]
  460928:	cmp	x9, #0x0
  46092c:	cset	w10, ne  // ne = any
  460930:	mov	w11, #0x1                   	// #1
  460934:	eor	w10, w10, #0x1
  460938:	eor	w10, w10, w11
  46093c:	eor	w10, w10, w11
  460940:	and	w10, w10, #0x1
  460944:	mov	w0, w10
  460948:	sxtw	x9, w0
  46094c:	cbz	x9, 460970 <dhcp_lease_save+0xa0>
  460950:	mov	w8, wzr
  460954:	mov	w0, w8
  460958:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  46095c:	add	x1, x1, #0x77c
  460960:	ldr	x2, [sp, #104]
  460964:	mov	w3, #0x369                 	// #873
  460968:	ldr	x4, [sp, #96]
  46096c:	bl	40a540 <log_assert_failed_realm@plt>
  460970:	ldr	x8, [sp, #112]
  460974:	ldr	x9, [x8, #56]
  460978:	cmp	x9, #0x0
  46097c:	cset	w10, ne  // ne = any
  460980:	mov	w11, #0x1                   	// #1
  460984:	eor	w10, w10, #0x1
  460988:	eor	w10, w10, w11
  46098c:	eor	w10, w10, w11
  460990:	and	w10, w10, #0x1
  460994:	mov	w0, w10
  460998:	sxtw	x9, w0
  46099c:	cbz	x9, 4609c0 <dhcp_lease_save+0xf0>
  4609a0:	mov	w8, wzr
  4609a4:	mov	w0, w8
  4609a8:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4609ac:	add	x1, x1, #0x24b
  4609b0:	ldr	x2, [sp, #104]
  4609b4:	mov	w3, #0x36a                 	// #874
  4609b8:	ldr	x4, [sp, #96]
  4609bc:	bl	40a540 <log_assert_failed_realm@plt>
  4609c0:	ldr	x8, [sp, #112]
  4609c4:	ldr	x0, [x8, #56]
  4609c8:	sub	x1, x29, #0x28
  4609cc:	sub	x2, x29, #0x20
  4609d0:	bl	40c070 <fopen_temporary@plt>
  4609d4:	stur	w0, [x29, #-160]
  4609d8:	ldur	w9, [x29, #-160]
  4609dc:	cmp	w9, #0x0
  4609e0:	cset	w9, ge  // ge = tcont
  4609e4:	tbnz	w9, #0, 4609ec <dhcp_lease_save+0x11c>
  4609e8:	b	4612f8 <dhcp_lease_save+0xa28>
  4609ec:	ldr	x8, [sp, #112]
  4609f0:	ldr	x0, [x8, #40]
  4609f4:	bl	40b270 <fileno@plt>
  4609f8:	mov	w1, #0x1a4                 	// #420
  4609fc:	bl	40c080 <fchmod@plt>
  460a00:	ldr	x8, [sp, #112]
  460a04:	ldr	x9, [x8, #40]
  460a08:	mov	x0, x9
  460a0c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460a10:	add	x1, x1, #0x256
  460a14:	bl	40b5b0 <fprintf@plt>
  460a18:	ldr	x8, [sp, #112]
  460a1c:	ldr	x9, [x8, #64]
  460a20:	mov	x0, x9
  460a24:	sub	x1, x29, #0x34
  460a28:	bl	45bfc8 <sd_dhcp_lease_get_address>
  460a2c:	stur	w0, [x29, #-160]
  460a30:	ldur	w10, [x29, #-160]
  460a34:	cmp	w10, #0x0
  460a38:	cset	w10, lt  // lt = tstop
  460a3c:	tbnz	w10, #0, 460a80 <dhcp_lease_save+0x1b0>
  460a40:	ldr	x8, [sp, #112]
  460a44:	ldr	x0, [x8, #40]
  460a48:	mov	w9, #0x2                   	// #2
  460a4c:	str	x0, [sp, #88]
  460a50:	mov	w0, w9
  460a54:	sub	x1, x29, #0x34
  460a58:	sub	x2, x29, #0x70
  460a5c:	mov	w3, #0x10                  	// #16
  460a60:	bl	40bf80 <inet_ntop@plt>
  460a64:	ldr	x8, [sp, #88]
  460a68:	str	x0, [sp, #80]
  460a6c:	mov	x0, x8
  460a70:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460a74:	add	x1, x1, #0x27d
  460a78:	ldr	x2, [sp, #80]
  460a7c:	bl	40b5b0 <fprintf@plt>
  460a80:	ldr	x8, [sp, #112]
  460a84:	ldr	x0, [x8, #64]
  460a88:	sub	x1, x29, #0x34
  460a8c:	bl	45d0d0 <sd_dhcp_lease_get_netmask>
  460a90:	stur	w0, [x29, #-160]
  460a94:	ldur	w9, [x29, #-160]
  460a98:	cmp	w9, #0x0
  460a9c:	cset	w9, lt  // lt = tstop
  460aa0:	tbnz	w9, #0, 460ae4 <dhcp_lease_save+0x214>
  460aa4:	ldr	x8, [sp, #112]
  460aa8:	ldr	x0, [x8, #40]
  460aac:	mov	w9, #0x2                   	// #2
  460ab0:	str	x0, [sp, #72]
  460ab4:	mov	w0, w9
  460ab8:	sub	x1, x29, #0x34
  460abc:	sub	x2, x29, #0x70
  460ac0:	mov	w3, #0x10                  	// #16
  460ac4:	bl	40bf80 <inet_ntop@plt>
  460ac8:	ldr	x8, [sp, #72]
  460acc:	str	x0, [sp, #64]
  460ad0:	mov	x0, x8
  460ad4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460ad8:	add	x1, x1, #0x289
  460adc:	ldr	x2, [sp, #64]
  460ae0:	bl	40b5b0 <fprintf@plt>
  460ae4:	ldr	x8, [sp, #112]
  460ae8:	ldr	x0, [x8, #64]
  460aec:	sub	x1, x29, #0x40
  460af0:	bl	45cf78 <sd_dhcp_lease_get_router>
  460af4:	stur	w0, [x29, #-160]
  460af8:	ldur	w9, [x29, #-160]
  460afc:	cmp	w9, #0x0
  460b00:	cset	w9, le
  460b04:	tbnz	w9, #0, 460b58 <dhcp_lease_save+0x288>
  460b08:	ldr	x8, [sp, #112]
  460b0c:	ldr	x1, [x8, #40]
  460b10:	adrp	x0, 471000 <on_inotify.__assert_in_set+0xd540>
  460b14:	add	x0, x0, #0x295
  460b18:	bl	40bf90 <fputs@plt>
  460b1c:	ldr	x8, [sp, #112]
  460b20:	ldr	x9, [x8, #40]
  460b24:	ldr	x1, [x8, #16]
  460b28:	ldursw	x2, [x29, #-160]
  460b2c:	mov	x0, x9
  460b30:	mov	w10, wzr
  460b34:	and	w3, w10, #0x1
  460b38:	mov	x9, xzr
  460b3c:	mov	x4, x9
  460b40:	bl	45ae38 <serialize_in_addrs>
  460b44:	ldr	x8, [sp, #112]
  460b48:	ldr	x1, [x8, #40]
  460b4c:	mov	w10, #0xa                   	// #10
  460b50:	mov	w0, w10
  460b54:	bl	40bf70 <fputc@plt>
  460b58:	ldr	x8, [sp, #112]
  460b5c:	ldr	x0, [x8, #64]
  460b60:	sub	x1, x29, #0x34
  460b64:	bl	45d218 <sd_dhcp_lease_get_server_identifier>
  460b68:	stur	w0, [x29, #-160]
  460b6c:	ldur	w9, [x29, #-160]
  460b70:	cmp	w9, #0x0
  460b74:	cset	w9, lt  // lt = tstop
  460b78:	tbnz	w9, #0, 460bbc <dhcp_lease_save+0x2ec>
  460b7c:	ldr	x8, [sp, #112]
  460b80:	ldr	x0, [x8, #40]
  460b84:	mov	w9, #0x2                   	// #2
  460b88:	str	x0, [sp, #56]
  460b8c:	mov	w0, w9
  460b90:	sub	x1, x29, #0x34
  460b94:	sub	x2, x29, #0x70
  460b98:	mov	w3, #0x10                  	// #16
  460b9c:	bl	40bf80 <inet_ntop@plt>
  460ba0:	ldr	x8, [sp, #56]
  460ba4:	str	x0, [sp, #48]
  460ba8:	mov	x0, x8
  460bac:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460bb0:	add	x1, x1, #0x29d
  460bb4:	ldr	x2, [sp, #48]
  460bb8:	bl	40b5b0 <fprintf@plt>
  460bbc:	ldr	x8, [sp, #112]
  460bc0:	ldr	x0, [x8, #64]
  460bc4:	sub	x1, x29, #0x34
  460bc8:	bl	45d360 <sd_dhcp_lease_get_next_server>
  460bcc:	stur	w0, [x29, #-160]
  460bd0:	ldur	w9, [x29, #-160]
  460bd4:	cmp	w9, #0x0
  460bd8:	cset	w9, lt  // lt = tstop
  460bdc:	tbnz	w9, #0, 460c20 <dhcp_lease_save+0x350>
  460be0:	ldr	x8, [sp, #112]
  460be4:	ldr	x0, [x8, #40]
  460be8:	mov	w9, #0x2                   	// #2
  460bec:	str	x0, [sp, #40]
  460bf0:	mov	w0, w9
  460bf4:	sub	x1, x29, #0x34
  460bf8:	sub	x2, x29, #0x70
  460bfc:	mov	w3, #0x10                  	// #16
  460c00:	bl	40bf80 <inet_ntop@plt>
  460c04:	ldr	x8, [sp, #40]
  460c08:	str	x0, [sp, #32]
  460c0c:	mov	x0, x8
  460c10:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460c14:	add	x1, x1, #0x2b0
  460c18:	ldr	x2, [sp, #32]
  460c1c:	bl	40b5b0 <fprintf@plt>
  460c20:	ldr	x8, [sp, #112]
  460c24:	ldr	x0, [x8, #64]
  460c28:	sub	x1, x29, #0x34
  460c2c:	bl	45c110 <sd_dhcp_lease_get_broadcast>
  460c30:	stur	w0, [x29, #-160]
  460c34:	ldur	w9, [x29, #-160]
  460c38:	cmp	w9, #0x0
  460c3c:	cset	w9, lt  // lt = tstop
  460c40:	tbnz	w9, #0, 460c84 <dhcp_lease_save+0x3b4>
  460c44:	ldr	x8, [sp, #112]
  460c48:	ldr	x0, [x8, #40]
  460c4c:	mov	w9, #0x2                   	// #2
  460c50:	str	x0, [sp, #24]
  460c54:	mov	w0, w9
  460c58:	sub	x1, x29, #0x34
  460c5c:	sub	x2, x29, #0x70
  460c60:	mov	w3, #0x10                  	// #16
  460c64:	bl	40bf80 <inet_ntop@plt>
  460c68:	ldr	x8, [sp, #24]
  460c6c:	str	x0, [sp, #16]
  460c70:	mov	x0, x8
  460c74:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460c78:	add	x1, x1, #0x2c0
  460c7c:	ldr	x2, [sp, #16]
  460c80:	bl	40b5b0 <fprintf@plt>
  460c84:	ldr	x8, [sp, #112]
  460c88:	ldr	x0, [x8, #64]
  460c8c:	sub	x1, x29, #0x7a
  460c90:	bl	45c648 <sd_dhcp_lease_get_mtu>
  460c94:	stur	w0, [x29, #-160]
  460c98:	ldur	w9, [x29, #-160]
  460c9c:	cmp	w9, #0x0
  460ca0:	cset	w9, lt  // lt = tstop
  460ca4:	tbnz	w9, #0, 460cc0 <dhcp_lease_save+0x3f0>
  460ca8:	ldr	x8, [sp, #112]
  460cac:	ldr	x0, [x8, #40]
  460cb0:	ldurh	w2, [x29, #-122]
  460cb4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460cb8:	add	x1, x1, #0x2ce
  460cbc:	bl	40b5b0 <fprintf@plt>
  460cc0:	ldr	x8, [sp, #112]
  460cc4:	ldr	x0, [x8, #64]
  460cc8:	sub	x1, x29, #0x94
  460ccc:	bl	45c3a8 <sd_dhcp_lease_get_t1>
  460cd0:	stur	w0, [x29, #-160]
  460cd4:	ldur	w9, [x29, #-160]
  460cd8:	cmp	w9, #0x0
  460cdc:	cset	w9, lt  // lt = tstop
  460ce0:	tbnz	w9, #0, 460cfc <dhcp_lease_save+0x42c>
  460ce4:	ldr	x8, [sp, #112]
  460ce8:	ldr	x0, [x8, #40]
  460cec:	ldur	w2, [x29, #-148]
  460cf0:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460cf4:	add	x1, x1, #0x2d6
  460cf8:	bl	40b5b0 <fprintf@plt>
  460cfc:	ldr	x8, [sp, #112]
  460d00:	ldr	x0, [x8, #64]
  460d04:	sub	x1, x29, #0x98
  460d08:	bl	45c4f8 <sd_dhcp_lease_get_t2>
  460d0c:	stur	w0, [x29, #-160]
  460d10:	ldur	w9, [x29, #-160]
  460d14:	cmp	w9, #0x0
  460d18:	cset	w9, lt  // lt = tstop
  460d1c:	tbnz	w9, #0, 460d38 <dhcp_lease_save+0x468>
  460d20:	ldr	x8, [sp, #112]
  460d24:	ldr	x0, [x8, #40]
  460d28:	ldur	w2, [x29, #-152]
  460d2c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460d30:	add	x1, x1, #0x2dd
  460d34:	bl	40b5b0 <fprintf@plt>
  460d38:	ldr	x8, [sp, #112]
  460d3c:	ldr	x0, [x8, #64]
  460d40:	sub	x1, x29, #0x9c
  460d44:	bl	45c258 <sd_dhcp_lease_get_lifetime>
  460d48:	stur	w0, [x29, #-160]
  460d4c:	ldur	w9, [x29, #-160]
  460d50:	cmp	w9, #0x0
  460d54:	cset	w9, lt  // lt = tstop
  460d58:	tbnz	w9, #0, 460d74 <dhcp_lease_save+0x4a4>
  460d5c:	ldr	x8, [sp, #112]
  460d60:	ldr	x0, [x8, #40]
  460d64:	ldur	w2, [x29, #-156]
  460d68:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460d6c:	add	x1, x1, #0x2e4
  460d70:	bl	40b5b0 <fprintf@plt>
  460d74:	ldr	x8, [sp, #112]
  460d78:	ldr	x0, [x8, #64]
  460d7c:	sub	x1, x29, #0x40
  460d80:	bl	45c798 <sd_dhcp_lease_get_dns>
  460d84:	stur	w0, [x29, #-160]
  460d88:	ldur	w9, [x29, #-160]
  460d8c:	cmp	w9, #0x0
  460d90:	cset	w9, le
  460d94:	tbnz	w9, #0, 460de8 <dhcp_lease_save+0x518>
  460d98:	ldr	x8, [sp, #112]
  460d9c:	ldr	x1, [x8, #40]
  460da0:	adrp	x0, 471000 <on_inotify.__assert_in_set+0xd540>
  460da4:	add	x0, x0, #0x2f1
  460da8:	bl	40bf90 <fputs@plt>
  460dac:	ldr	x8, [sp, #112]
  460db0:	ldr	x9, [x8, #40]
  460db4:	ldr	x1, [x8, #16]
  460db8:	ldursw	x2, [x29, #-160]
  460dbc:	mov	x0, x9
  460dc0:	mov	w10, wzr
  460dc4:	and	w3, w10, #0x1
  460dc8:	mov	x9, xzr
  460dcc:	mov	x4, x9
  460dd0:	bl	45ae38 <serialize_in_addrs>
  460dd4:	ldr	x8, [sp, #112]
  460dd8:	ldr	x1, [x8, #40]
  460ddc:	mov	w10, #0xa                   	// #10
  460de0:	mov	w0, w10
  460de4:	bl	40bf70 <fputc@plt>
  460de8:	ldr	x8, [sp, #112]
  460dec:	ldr	x0, [x8, #64]
  460df0:	sub	x1, x29, #0x40
  460df4:	bl	45c8f0 <sd_dhcp_lease_get_ntp>
  460df8:	stur	w0, [x29, #-160]
  460dfc:	ldur	w9, [x29, #-160]
  460e00:	cmp	w9, #0x0
  460e04:	cset	w9, le
  460e08:	tbnz	w9, #0, 460e5c <dhcp_lease_save+0x58c>
  460e0c:	ldr	x8, [sp, #112]
  460e10:	ldr	x1, [x8, #40]
  460e14:	adrp	x0, 471000 <on_inotify.__assert_in_set+0xd540>
  460e18:	add	x0, x0, #0x2f6
  460e1c:	bl	40bf90 <fputs@plt>
  460e20:	ldr	x8, [sp, #112]
  460e24:	ldr	x9, [x8, #40]
  460e28:	ldr	x1, [x8, #16]
  460e2c:	ldursw	x2, [x29, #-160]
  460e30:	mov	x0, x9
  460e34:	mov	w10, wzr
  460e38:	and	w3, w10, #0x1
  460e3c:	mov	x9, xzr
  460e40:	mov	x4, x9
  460e44:	bl	45ae38 <serialize_in_addrs>
  460e48:	ldr	x8, [sp, #112]
  460e4c:	ldr	x1, [x8, #40]
  460e50:	mov	w10, #0xa                   	// #10
  460e54:	mov	w0, w10
  460e58:	bl	40bf70 <fputc@plt>
  460e5c:	ldr	x8, [sp, #112]
  460e60:	ldr	x0, [x8, #64]
  460e64:	sub	x1, x29, #0x40
  460e68:	bl	45ca48 <sd_dhcp_lease_get_sip>
  460e6c:	stur	w0, [x29, #-160]
  460e70:	ldur	w9, [x29, #-160]
  460e74:	cmp	w9, #0x0
  460e78:	cset	w9, le
  460e7c:	tbnz	w9, #0, 460ed0 <dhcp_lease_save+0x600>
  460e80:	ldr	x8, [sp, #112]
  460e84:	ldr	x1, [x8, #40]
  460e88:	adrp	x0, 471000 <on_inotify.__assert_in_set+0xd540>
  460e8c:	add	x0, x0, #0x2fb
  460e90:	bl	40bf90 <fputs@plt>
  460e94:	ldr	x8, [sp, #112]
  460e98:	ldr	x9, [x8, #40]
  460e9c:	ldr	x1, [x8, #16]
  460ea0:	ldursw	x2, [x29, #-160]
  460ea4:	mov	x0, x9
  460ea8:	mov	w10, wzr
  460eac:	and	w3, w10, #0x1
  460eb0:	mov	x9, xzr
  460eb4:	mov	x4, x9
  460eb8:	bl	45ae38 <serialize_in_addrs>
  460ebc:	ldr	x8, [sp, #112]
  460ec0:	ldr	x1, [x8, #40]
  460ec4:	mov	w10, #0xa                   	// #10
  460ec8:	mov	w0, w10
  460ecc:	bl	40bf70 <fputc@plt>
  460ed0:	ldr	x8, [sp, #112]
  460ed4:	ldr	x0, [x8, #64]
  460ed8:	sub	x1, x29, #0x78
  460edc:	bl	45cba0 <sd_dhcp_lease_get_domainname>
  460ee0:	stur	w0, [x29, #-160]
  460ee4:	ldur	w9, [x29, #-160]
  460ee8:	cmp	w9, #0x0
  460eec:	cset	w9, lt  // lt = tstop
  460ef0:	tbnz	w9, #0, 460f0c <dhcp_lease_save+0x63c>
  460ef4:	ldr	x8, [sp, #112]
  460ef8:	ldr	x0, [x8, #40]
  460efc:	ldur	x2, [x29, #-120]
  460f00:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460f04:	add	x1, x1, #0x300
  460f08:	bl	40b5b0 <fprintf@plt>
  460f0c:	ldr	x8, [sp, #112]
  460f10:	ldr	x0, [x8, #64]
  460f14:	sub	x1, x29, #0x90
  460f18:	bl	45d704 <sd_dhcp_lease_get_search_domains>
  460f1c:	stur	w0, [x29, #-160]
  460f20:	ldur	w9, [x29, #-160]
  460f24:	cmp	w9, #0x0
  460f28:	cset	w9, le
  460f2c:	tbnz	w9, #0, 460f78 <dhcp_lease_save+0x6a8>
  460f30:	ldr	x8, [sp, #112]
  460f34:	ldr	x1, [x8, #40]
  460f38:	adrp	x0, 471000 <on_inotify.__assert_in_set+0xd540>
  460f3c:	add	x0, x0, #0x30f
  460f40:	bl	40bf90 <fputs@plt>
  460f44:	ldr	x8, [sp, #112]
  460f48:	ldr	x9, [x8, #40]
  460f4c:	ldur	x1, [x29, #-144]
  460f50:	mov	x0, x9
  460f54:	mov	x9, xzr
  460f58:	mov	x2, x9
  460f5c:	mov	x3, x9
  460f60:	bl	40c090 <fputstrv@plt>
  460f64:	ldr	x8, [sp, #112]
  460f68:	ldr	x1, [x8, #40]
  460f6c:	mov	w10, #0xa                   	// #10
  460f70:	mov	w0, w10
  460f74:	bl	40bf70 <fputc@plt>
  460f78:	ldr	x8, [sp, #112]
  460f7c:	ldr	x0, [x8, #64]
  460f80:	sub	x1, x29, #0x78
  460f84:	bl	45cce8 <sd_dhcp_lease_get_hostname>
  460f88:	stur	w0, [x29, #-160]
  460f8c:	ldur	w9, [x29, #-160]
  460f90:	cmp	w9, #0x0
  460f94:	cset	w9, lt  // lt = tstop
  460f98:	tbnz	w9, #0, 460fb4 <dhcp_lease_save+0x6e4>
  460f9c:	ldr	x8, [sp, #112]
  460fa0:	ldr	x0, [x8, #40]
  460fa4:	ldur	x2, [x29, #-120]
  460fa8:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460fac:	add	x1, x1, #0x323
  460fb0:	bl	40b5b0 <fprintf@plt>
  460fb4:	ldr	x8, [sp, #112]
  460fb8:	ldr	x0, [x8, #64]
  460fbc:	sub	x1, x29, #0x78
  460fc0:	bl	45ce30 <sd_dhcp_lease_get_root_path>
  460fc4:	stur	w0, [x29, #-160]
  460fc8:	ldur	w9, [x29, #-160]
  460fcc:	cmp	w9, #0x0
  460fd0:	cset	w9, lt  // lt = tstop
  460fd4:	tbnz	w9, #0, 460ff0 <dhcp_lease_save+0x720>
  460fd8:	ldr	x8, [sp, #112]
  460fdc:	ldr	x0, [x8, #40]
  460fe0:	ldur	x2, [x29, #-120]
  460fe4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  460fe8:	add	x1, x1, #0x330
  460fec:	bl	40b5b0 <fprintf@plt>
  460ff0:	ldr	x8, [sp, #112]
  460ff4:	ldr	x0, [x8, #64]
  460ff8:	sub	x1, x29, #0x88
  460ffc:	bl	45d4a8 <sd_dhcp_lease_get_routes>
  461000:	stur	w0, [x29, #-160]
  461004:	ldur	w9, [x29, #-160]
  461008:	cmp	w9, #0x0
  46100c:	cset	w9, le
  461010:	tbnz	w9, #0, 461030 <dhcp_lease_save+0x760>
  461014:	ldr	x8, [sp, #112]
  461018:	ldr	x0, [x8, #40]
  46101c:	ldur	x2, [x29, #-136]
  461020:	ldursw	x3, [x29, #-160]
  461024:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  461028:	add	x1, x1, #0x33e
  46102c:	bl	45b620 <serialize_dhcp_routes>
  461030:	ldr	x8, [sp, #112]
  461034:	ldr	x0, [x8, #64]
  461038:	sub	x1, x29, #0x78
  46103c:	bl	4613f8 <sd_dhcp_lease_get_timezone>
  461040:	stur	w0, [x29, #-160]
  461044:	ldur	w9, [x29, #-160]
  461048:	cmp	w9, #0x0
  46104c:	cset	w9, lt  // lt = tstop
  461050:	tbnz	w9, #0, 46106c <dhcp_lease_save+0x79c>
  461054:	ldr	x8, [sp, #112]
  461058:	ldr	x0, [x8, #40]
  46105c:	ldur	x2, [x29, #-120]
  461060:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  461064:	add	x1, x1, #0x345
  461068:	bl	40b5b0 <fprintf@plt>
  46106c:	ldr	x8, [sp, #112]
  461070:	ldr	x0, [x8, #64]
  461074:	sub	x1, x29, #0x48
  461078:	sub	x2, x29, #0x58
  46107c:	bl	461540 <sd_dhcp_lease_get_client_id>
  461080:	stur	w0, [x29, #-160]
  461084:	ldur	w9, [x29, #-160]
  461088:	cmp	w9, #0x0
  46108c:	cset	w9, lt  // lt = tstop
  461090:	tbnz	w9, #0, 461110 <dhcp_lease_save+0x840>
  461094:	mov	x8, xzr
  461098:	str	x8, [sp, #168]
  46109c:	ldr	x8, [sp, #112]
  4610a0:	ldr	x0, [x8, #8]
  4610a4:	ldur	x1, [x29, #-88]
  4610a8:	bl	40bfc0 <hexmem@plt>
  4610ac:	str	x0, [sp, #168]
  4610b0:	ldr	x8, [sp, #168]
  4610b4:	cbnz	x8, 4610cc <dhcp_lease_save+0x7fc>
  4610b8:	mov	w8, #0xfffffff4            	// #-12
  4610bc:	stur	w8, [x29, #-160]
  4610c0:	mov	w8, #0x6                   	// #6
  4610c4:	str	w8, [sp, #164]
  4610c8:	b	4610e8 <dhcp_lease_save+0x818>
  4610cc:	ldr	x8, [sp, #112]
  4610d0:	ldr	x0, [x8, #40]
  4610d4:	ldr	x2, [sp, #168]
  4610d8:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4610dc:	add	x1, x1, #0x352
  4610e0:	bl	40b5b0 <fprintf@plt>
  4610e4:	str	wzr, [sp, #164]
  4610e8:	add	x0, sp, #0xa8
  4610ec:	bl	4604c8 <freep>
  4610f0:	ldr	w8, [sp, #164]
  4610f4:	str	w8, [sp, #12]
  4610f8:	cbz	w8, 461110 <dhcp_lease_save+0x840>
  4610fc:	b	461100 <dhcp_lease_save+0x830>
  461100:	ldr	w8, [sp, #12]
  461104:	cmp	w8, #0x6
  461108:	b.eq	4612f8 <dhcp_lease_save+0xa28>  // b.none
  46110c:	b	4613a4 <dhcp_lease_save+0xad4>
  461110:	ldr	x8, [sp, #112]
  461114:	ldr	x0, [x8, #64]
  461118:	sub	x1, x29, #0x50
  46111c:	sub	x2, x29, #0x60
  461120:	bl	45d864 <sd_dhcp_lease_get_vendor_specific>
  461124:	stur	w0, [x29, #-160]
  461128:	ldur	w9, [x29, #-160]
  46112c:	cmp	w9, #0x0
  461130:	cset	w9, lt  // lt = tstop
  461134:	tbnz	w9, #0, 4611b4 <dhcp_lease_save+0x8e4>
  461138:	mov	x8, xzr
  46113c:	str	x8, [sp, #152]
  461140:	ldr	x8, [sp, #112]
  461144:	ldr	x0, [x8]
  461148:	ldur	x1, [x29, #-96]
  46114c:	bl	40bfc0 <hexmem@plt>
  461150:	str	x0, [sp, #152]
  461154:	ldr	x8, [sp, #152]
  461158:	cbnz	x8, 461170 <dhcp_lease_save+0x8a0>
  46115c:	mov	w8, #0xfffffff4            	// #-12
  461160:	stur	w8, [x29, #-160]
  461164:	mov	w8, #0x6                   	// #6
  461168:	str	w8, [sp, #164]
  46116c:	b	46118c <dhcp_lease_save+0x8bc>
  461170:	ldr	x8, [sp, #112]
  461174:	ldr	x0, [x8, #40]
  461178:	ldr	x2, [sp, #152]
  46117c:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  461180:	add	x1, x1, #0x35f
  461184:	bl	40b5b0 <fprintf@plt>
  461188:	str	wzr, [sp, #164]
  46118c:	add	x0, sp, #0x98
  461190:	bl	4604c8 <freep>
  461194:	ldr	w8, [sp, #164]
  461198:	str	w8, [sp, #8]
  46119c:	cbz	w8, 4611b4 <dhcp_lease_save+0x8e4>
  4611a0:	b	4611a4 <dhcp_lease_save+0x8d4>
  4611a4:	ldr	w8, [sp, #8]
  4611a8:	cmp	w8, #0x6
  4611ac:	b.eq	4612f8 <dhcp_lease_save+0xa28>  // b.none
  4611b0:	b	4613a4 <dhcp_lease_save+0xad4>
  4611b4:	ldr	x8, [sp, #112]
  4611b8:	ldr	x9, [x8, #64]
  4611bc:	ldr	x9, [x9, #216]
  4611c0:	str	x9, [x8, #32]
  4611c4:	ldr	x8, [sp, #112]
  4611c8:	ldr	x9, [x8, #32]
  4611cc:	cbz	x9, 461290 <dhcp_lease_save+0x9c0>
  4611d0:	ldr	x8, [sp, #112]
  4611d4:	ldr	x9, [x8, #32]
  4611d8:	ldrb	w3, [x9, #16]
  4611dc:	add	x0, sp, #0x8d
  4611e0:	mov	x1, #0xb                   	// #11
  4611e4:	adrp	x2, 471000 <on_inotify.__assert_in_set+0xd540>
  4611e8:	add	x2, x2, #0x373
  4611ec:	bl	40b140 <snprintf@plt>
  4611f0:	mov	w1, w0
  4611f4:	sxtw	x8, w1
  4611f8:	cmp	x8, #0xb
  4611fc:	cset	w10, cc  // cc = lo, ul, last
  461200:	mov	w11, #0x1                   	// #1
  461204:	eor	w10, w10, #0x1
  461208:	eor	w10, w10, w11
  46120c:	eor	w10, w10, w11
  461210:	and	w10, w10, #0x1
  461214:	mov	w1, w10
  461218:	sxtw	x8, w1
  46121c:	cbz	x8, 461240 <dhcp_lease_save+0x970>
  461220:	mov	w8, wzr
  461224:	mov	w0, w8
  461228:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  46122c:	add	x1, x1, #0x37d
  461230:	ldr	x2, [sp, #104]
  461234:	mov	w3, #0x3eb                 	// #1003
  461238:	ldr	x4, [sp, #96]
  46123c:	bl	40a540 <log_assert_failed_realm@plt>
  461240:	ldr	x8, [sp, #112]
  461244:	ldr	x0, [x8, #40]
  461248:	ldr	x9, [x8, #32]
  46124c:	ldr	x2, [x9, #24]
  461250:	ldr	x9, [x8, #32]
  461254:	ldrb	w10, [x9, #17]
  461258:	mov	w3, w10
  46125c:	add	x1, sp, #0x8d
  461260:	bl	45bdfc <serialize_dhcp_option>
  461264:	stur	w0, [x29, #-160]
  461268:	ldur	w10, [x29, #-160]
  46126c:	cmp	w10, #0x0
  461270:	cset	w10, ge  // ge = tcont
  461274:	tbnz	w10, #0, 46127c <dhcp_lease_save+0x9ac>
  461278:	b	4612f8 <dhcp_lease_save+0xa28>
  46127c:	ldr	x8, [sp, #112]
  461280:	ldr	x9, [x8, #32]
  461284:	ldr	x9, [x9]
  461288:	str	x9, [x8, #32]
  46128c:	b	4611c4 <dhcp_lease_save+0x8f4>
  461290:	ldr	x8, [sp, #112]
  461294:	ldr	x0, [x8, #40]
  461298:	bl	40c0a0 <fflush_and_check@plt>
  46129c:	stur	w0, [x29, #-160]
  4612a0:	ldur	w9, [x29, #-160]
  4612a4:	cmp	w9, #0x0
  4612a8:	cset	w9, ge  // ge = tcont
  4612ac:	tbnz	w9, #0, 4612b4 <dhcp_lease_save+0x9e4>
  4612b0:	b	4612f8 <dhcp_lease_save+0xa28>
  4612b4:	ldr	x8, [sp, #112]
  4612b8:	ldr	x0, [x8, #48]
  4612bc:	ldr	x1, [x8, #56]
  4612c0:	bl	40b1d0 <rename@plt>
  4612c4:	cmp	w0, #0x0
  4612c8:	cset	w9, ge  // ge = tcont
  4612cc:	tbnz	w9, #0, 4612e8 <dhcp_lease_save+0xa18>
  4612d0:	bl	40a480 <__errno_location@plt>
  4612d4:	ldr	w8, [x0]
  4612d8:	mov	w9, wzr
  4612dc:	subs	w8, w9, w8
  4612e0:	stur	w8, [x29, #-160]
  4612e4:	b	4612f8 <dhcp_lease_save+0xa28>
  4612e8:	stur	wzr, [x29, #-4]
  4612ec:	mov	w8, #0x1                   	// #1
  4612f0:	str	w8, [sp, #164]
  4612f4:	b	4613a4 <dhcp_lease_save+0xad4>
  4612f8:	ldr	x8, [sp, #112]
  4612fc:	ldr	x9, [x8, #48]
  461300:	cbz	x9, 461310 <dhcp_lease_save+0xa40>
  461304:	ldr	x8, [sp, #112]
  461308:	ldr	x0, [x8, #48]
  46130c:	bl	40a7d0 <unlink@plt>
  461310:	mov	w8, #0x3                   	// #3
  461314:	str	w8, [sp, #136]
  461318:	ldur	w8, [x29, #-160]
  46131c:	str	w8, [sp, #132]
  461320:	str	wzr, [sp, #128]
  461324:	ldr	w0, [sp, #128]
  461328:	bl	40a3f0 <log_get_max_level_realm@plt>
  46132c:	ldr	w8, [sp, #136]
  461330:	and	w8, w8, #0x7
  461334:	cmp	w0, w8
  461338:	b.lt	461378 <dhcp_lease_save+0xaa8>  // b.tstop
  46133c:	ldr	w8, [sp, #128]
  461340:	ldr	w9, [sp, #136]
  461344:	orr	w0, w9, w8, lsl #10
  461348:	ldr	w1, [sp, #132]
  46134c:	ldr	x10, [sp, #112]
  461350:	ldr	x6, [x10, #56]
  461354:	ldr	x2, [sp, #104]
  461358:	mov	w3, #0x400                 	// #1024
  46135c:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  461360:	add	x4, x4, #0x3a0
  461364:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  461368:	add	x5, x5, #0x3b0
  46136c:	bl	40a400 <log_internal_realm@plt>
  461370:	str	w0, [sp, #4]
  461374:	b	46138c <dhcp_lease_save+0xabc>
  461378:	ldr	w0, [sp, #132]
  46137c:	bl	40a410 <abs@plt>
  461380:	mov	w8, wzr
  461384:	subs	w8, w8, w0, uxtb
  461388:	str	w8, [sp, #4]
  46138c:	ldr	w8, [sp, #4]
  461390:	str	w8, [sp, #124]
  461394:	ldr	w8, [sp, #124]
  461398:	stur	w8, [x29, #-4]
  46139c:	mov	w8, #0x1                   	// #1
  4613a0:	str	w8, [sp, #164]
  4613a4:	sub	x0, x29, #0x88
  4613a8:	bl	4604c8 <freep>
  4613ac:	sub	x0, x29, #0x28
  4613b0:	bl	4613d0 <fclosep>
  4613b4:	sub	x0, x29, #0x20
  4613b8:	bl	4604c8 <freep>
  4613bc:	ldur	w0, [x29, #-4]
  4613c0:	ldr	x28, [sp, #352]
  4613c4:	ldp	x29, x30, [sp, #336]
  4613c8:	add	sp, sp, #0x170
  4613cc:	ret

00000000004613d0 <fclosep>:
  4613d0:	sub	sp, sp, #0x20
  4613d4:	stp	x29, x30, [sp, #16]
  4613d8:	add	x29, sp, #0x10
  4613dc:	str	x0, [sp, #8]
  4613e0:	ldr	x8, [sp, #8]
  4613e4:	ldr	x0, [x8]
  4613e8:	bl	40b2c0 <safe_fclose@plt>
  4613ec:	ldp	x29, x30, [sp, #16]
  4613f0:	add	sp, sp, #0x20
  4613f4:	ret

00000000004613f8 <sd_dhcp_lease_get_timezone>:
  4613f8:	sub	sp, sp, #0x40
  4613fc:	stp	x29, x30, [sp, #48]
  461400:	add	x29, sp, #0x30
  461404:	mov	w8, #0x1                   	// #1
  461408:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  46140c:	add	x9, x9, #0x782
  461410:	add	x9, x9, #0x3
  461414:	mov	w10, #0x0                   	// #0
  461418:	stur	x0, [x29, #-16]
  46141c:	str	x1, [sp, #24]
  461420:	str	w8, [sp, #20]
  461424:	str	x9, [sp, #8]
  461428:	str	w10, [sp, #4]
  46142c:	ldur	x8, [x29, #-16]
  461430:	cmp	x8, #0x0
  461434:	cset	w9, ne  // ne = any
  461438:	mov	w10, #0x1                   	// #1
  46143c:	eor	w9, w9, #0x1
  461440:	eor	w9, w9, w10
  461444:	and	w9, w9, #0x1
  461448:	mov	w0, w9
  46144c:	sxtw	x8, w0
  461450:	cbz	x8, 461460 <sd_dhcp_lease_get_timezone+0x68>
  461454:	ldr	w8, [sp, #20]
  461458:	tbnz	w8, #0, 461498 <sd_dhcp_lease_get_timezone+0xa0>
  46145c:	b	46148c <sd_dhcp_lease_get_timezone+0x94>
  461460:	mov	w8, wzr
  461464:	mov	w0, w8
  461468:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  46146c:	add	x1, x1, #0x77c
  461470:	ldr	x2, [sp, #8]
  461474:	mov	w3, #0x528                 	// #1320
  461478:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  46147c:	add	x4, x4, #0xa17
  461480:	bl	40ad60 <log_assert_failed_return_realm@plt>
  461484:	ldr	w8, [sp, #4]
  461488:	tbnz	w8, #0, 461498 <sd_dhcp_lease_get_timezone+0xa0>
  46148c:	mov	w8, #0xffffffea            	// #-22
  461490:	stur	w8, [x29, #-4]
  461494:	b	461530 <sd_dhcp_lease_get_timezone+0x138>
  461498:	ldr	x8, [sp, #24]
  46149c:	cmp	x8, #0x0
  4614a0:	cset	w9, ne  // ne = any
  4614a4:	mov	w10, #0x1                   	// #1
  4614a8:	eor	w9, w9, #0x1
  4614ac:	eor	w9, w9, w10
  4614b0:	and	w9, w9, #0x1
  4614b4:	mov	w0, w9
  4614b8:	sxtw	x8, w0
  4614bc:	cbz	x8, 4614cc <sd_dhcp_lease_get_timezone+0xd4>
  4614c0:	ldr	w8, [sp, #20]
  4614c4:	tbnz	w8, #0, 461504 <sd_dhcp_lease_get_timezone+0x10c>
  4614c8:	b	4614f8 <sd_dhcp_lease_get_timezone+0x100>
  4614cc:	mov	w8, wzr
  4614d0:	mov	w0, w8
  4614d4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4614d8:	add	x1, x1, #0xa56
  4614dc:	ldr	x2, [sp, #8]
  4614e0:	mov	w3, #0x529                 	// #1321
  4614e4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  4614e8:	add	x4, x4, #0xa17
  4614ec:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4614f0:	ldr	w8, [sp, #4]
  4614f4:	tbnz	w8, #0, 461504 <sd_dhcp_lease_get_timezone+0x10c>
  4614f8:	mov	w8, #0xffffffea            	// #-22
  4614fc:	stur	w8, [x29, #-4]
  461500:	b	461530 <sd_dhcp_lease_get_timezone+0x138>
  461504:	ldur	x8, [x29, #-16]
  461508:	ldr	x8, [x8, #208]
  46150c:	cbnz	x8, 46151c <sd_dhcp_lease_get_timezone+0x124>
  461510:	mov	w8, #0xffffffc3            	// #-61
  461514:	stur	w8, [x29, #-4]
  461518:	b	461530 <sd_dhcp_lease_get_timezone+0x138>
  46151c:	ldur	x8, [x29, #-16]
  461520:	ldr	x8, [x8, #208]
  461524:	ldr	x9, [sp, #24]
  461528:	str	x8, [x9]
  46152c:	stur	wzr, [x29, #-4]
  461530:	ldur	w0, [x29, #-4]
  461534:	ldp	x29, x30, [sp, #48]
  461538:	add	sp, sp, #0x40
  46153c:	ret

0000000000461540 <sd_dhcp_lease_get_client_id>:
  461540:	sub	sp, sp, #0x50
  461544:	stp	x29, x30, [sp, #64]
  461548:	add	x29, sp, #0x40
  46154c:	mov	w8, #0x1                   	// #1
  461550:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  461554:	add	x9, x9, #0x782
  461558:	add	x9, x9, #0x3
  46155c:	adrp	x10, 471000 <on_inotify.__assert_in_set+0xd540>
  461560:	add	x10, x10, #0x951
  461564:	mov	w11, #0x0                   	// #0
  461568:	stur	x0, [x29, #-16]
  46156c:	stur	x1, [x29, #-24]
  461570:	str	x2, [sp, #32]
  461574:	str	w8, [sp, #28]
  461578:	str	x9, [sp, #16]
  46157c:	str	x10, [sp, #8]
  461580:	str	w11, [sp, #4]
  461584:	ldur	x8, [x29, #-16]
  461588:	cmp	x8, #0x0
  46158c:	cset	w9, ne  // ne = any
  461590:	mov	w10, #0x1                   	// #1
  461594:	eor	w9, w9, #0x1
  461598:	eor	w9, w9, w10
  46159c:	and	w9, w9, #0x1
  4615a0:	mov	w0, w9
  4615a4:	sxtw	x8, w0
  4615a8:	cbz	x8, 4615b8 <sd_dhcp_lease_get_client_id+0x78>
  4615ac:	ldr	w8, [sp, #28]
  4615b0:	tbnz	w8, #0, 4615ec <sd_dhcp_lease_get_client_id+0xac>
  4615b4:	b	4615e0 <sd_dhcp_lease_get_client_id+0xa0>
  4615b8:	mov	w8, wzr
  4615bc:	mov	w0, w8
  4615c0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  4615c4:	add	x1, x1, #0x77c
  4615c8:	ldr	x2, [sp, #16]
  4615cc:	mov	w3, #0x505                 	// #1285
  4615d0:	ldr	x4, [sp, #8]
  4615d4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4615d8:	ldr	w8, [sp, #4]
  4615dc:	tbnz	w8, #0, 4615ec <sd_dhcp_lease_get_client_id+0xac>
  4615e0:	mov	w8, #0xffffffea            	// #-22
  4615e4:	stur	w8, [x29, #-4]
  4615e8:	b	4616f8 <sd_dhcp_lease_get_client_id+0x1b8>
  4615ec:	ldur	x8, [x29, #-24]
  4615f0:	cmp	x8, #0x0
  4615f4:	cset	w9, ne  // ne = any
  4615f8:	mov	w10, #0x1                   	// #1
  4615fc:	eor	w9, w9, #0x1
  461600:	eor	w9, w9, w10
  461604:	and	w9, w9, #0x1
  461608:	mov	w0, w9
  46160c:	sxtw	x8, w0
  461610:	cbz	x8, 461620 <sd_dhcp_lease_get_client_id+0xe0>
  461614:	ldr	w8, [sp, #28]
  461618:	tbnz	w8, #0, 461654 <sd_dhcp_lease_get_client_id+0x114>
  46161c:	b	461648 <sd_dhcp_lease_get_client_id+0x108>
  461620:	mov	w8, wzr
  461624:	mov	w0, w8
  461628:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  46162c:	add	x1, x1, #0x99b
  461630:	ldr	x2, [sp, #16]
  461634:	mov	w3, #0x506                 	// #1286
  461638:	ldr	x4, [sp, #8]
  46163c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  461640:	ldr	w8, [sp, #4]
  461644:	tbnz	w8, #0, 461654 <sd_dhcp_lease_get_client_id+0x114>
  461648:	mov	w8, #0xffffffea            	// #-22
  46164c:	stur	w8, [x29, #-4]
  461650:	b	4616f8 <sd_dhcp_lease_get_client_id+0x1b8>
  461654:	ldr	x8, [sp, #32]
  461658:	cmp	x8, #0x0
  46165c:	cset	w9, ne  // ne = any
  461660:	mov	w10, #0x1                   	// #1
  461664:	eor	w9, w9, #0x1
  461668:	eor	w9, w9, w10
  46166c:	and	w9, w9, #0x1
  461670:	mov	w0, w9
  461674:	sxtw	x8, w0
  461678:	cbz	x8, 461688 <sd_dhcp_lease_get_client_id+0x148>
  46167c:	ldr	w8, [sp, #28]
  461680:	tbnz	w8, #0, 4616bc <sd_dhcp_lease_get_client_id+0x17c>
  461684:	b	4616b0 <sd_dhcp_lease_get_client_id+0x170>
  461688:	mov	w8, wzr
  46168c:	mov	w0, w8
  461690:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  461694:	add	x1, x1, #0x9a5
  461698:	ldr	x2, [sp, #16]
  46169c:	mov	w3, #0x507                 	// #1287
  4616a0:	ldr	x4, [sp, #8]
  4616a4:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4616a8:	ldr	w8, [sp, #4]
  4616ac:	tbnz	w8, #0, 4616bc <sd_dhcp_lease_get_client_id+0x17c>
  4616b0:	mov	w8, #0xffffffea            	// #-22
  4616b4:	stur	w8, [x29, #-4]
  4616b8:	b	4616f8 <sd_dhcp_lease_get_client_id+0x1b8>
  4616bc:	ldur	x8, [x29, #-16]
  4616c0:	ldr	x8, [x8, #176]
  4616c4:	cbnz	x8, 4616d4 <sd_dhcp_lease_get_client_id+0x194>
  4616c8:	mov	w8, #0xffffffc3            	// #-61
  4616cc:	stur	w8, [x29, #-4]
  4616d0:	b	4616f8 <sd_dhcp_lease_get_client_id+0x1b8>
  4616d4:	ldur	x8, [x29, #-16]
  4616d8:	ldr	x8, [x8, #176]
  4616dc:	ldur	x9, [x29, #-24]
  4616e0:	str	x8, [x9]
  4616e4:	ldur	x8, [x29, #-16]
  4616e8:	ldr	x8, [x8, #184]
  4616ec:	ldr	x9, [sp, #32]
  4616f0:	str	x8, [x9]
  4616f4:	stur	wzr, [x29, #-4]
  4616f8:	ldur	w0, [x29, #-4]
  4616fc:	ldp	x29, x30, [sp, #64]
  461700:	add	sp, sp, #0x50
  461704:	ret

0000000000461708 <dhcp_lease_load>:
  461708:	stp	x29, x30, [sp, #-96]!
  46170c:	stp	x28, x27, [sp, #16]
  461710:	stp	x26, x25, [sp, #32]
  461714:	stp	x24, x23, [sp, #48]
  461718:	stp	x22, x21, [sp, #64]
  46171c:	stp	x20, x19, [sp, #80]
  461720:	mov	x29, sp
  461724:	sub	sp, sp, #0x6f0
  461728:	mov	x8, xzr
  46172c:	mov	x2, #0xf8                  	// #248
  461730:	mov	w9, wzr
  461734:	adrp	x10, 470000 <on_inotify.__assert_in_set+0xc540>
  461738:	add	x10, x10, #0x782
  46173c:	add	x10, x10, #0x3
  461740:	adrp	x11, 471000 <on_inotify.__assert_in_set+0xd540>
  461744:	add	x11, x11, #0x60b
  461748:	add	x12, sp, #0x548
  46174c:	stur	x0, [x29, #-24]
  461750:	stur	x1, [x29, #-32]
  461754:	stur	x8, [x29, #-40]
  461758:	stur	x8, [x29, #-48]
  46175c:	stur	x8, [x29, #-56]
  461760:	stur	x8, [x29, #-64]
  461764:	stur	x8, [x29, #-72]
  461768:	stur	x8, [x29, #-80]
  46176c:	stur	x8, [x29, #-88]
  461770:	stur	x8, [x29, #-96]
  461774:	stur	x8, [x29, #-104]
  461778:	stur	x8, [x29, #-112]
  46177c:	stur	x8, [x29, #-120]
  461780:	stur	x8, [x29, #-128]
  461784:	stur	x8, [x29, #-136]
  461788:	stur	x8, [x29, #-144]
  46178c:	stur	x8, [x29, #-152]
  461790:	stur	x8, [x29, #-160]
  461794:	stur	x8, [x29, #-168]
  461798:	stur	x8, [x29, #-176]
  46179c:	mov	x0, x12
  4617a0:	mov	w1, w9
  4617a4:	str	x10, [sp, #1016]
  4617a8:	str	x11, [sp, #1008]
  4617ac:	bl	40a5f0 <memset@plt>
  4617b0:	ldur	x8, [x29, #-32]
  4617b4:	cmp	x8, #0x0
  4617b8:	cset	w9, ne  // ne = any
  4617bc:	mov	w10, #0x1                   	// #1
  4617c0:	eor	w9, w9, #0x1
  4617c4:	eor	w9, w9, w10
  4617c8:	eor	w9, w9, w10
  4617cc:	and	w9, w9, #0x1
  4617d0:	mov	w0, w9
  4617d4:	sxtw	x8, w0
  4617d8:	cbz	x8, 461800 <dhcp_lease_load+0xf8>
  4617dc:	mov	w8, wzr
  4617e0:	mov	w0, w8
  4617e4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4617e8:	add	x1, x1, #0x24b
  4617ec:	ldr	x2, [sp, #1016]
  4617f0:	mov	w3, #0x41c                 	// #1052
  4617f4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  4617f8:	add	x4, x4, #0x3d1
  4617fc:	bl	40a540 <log_assert_failed_realm@plt>
  461800:	ldur	x8, [x29, #-24]
  461804:	cmp	x8, #0x0
  461808:	cset	w9, ne  // ne = any
  46180c:	mov	w10, #0x1                   	// #1
  461810:	eor	w9, w9, #0x1
  461814:	eor	w9, w9, w10
  461818:	eor	w9, w9, w10
  46181c:	and	w9, w9, #0x1
  461820:	mov	w0, w9
  461824:	sxtw	x8, w0
  461828:	cbz	x8, 461850 <dhcp_lease_load+0x148>
  46182c:	mov	w8, wzr
  461830:	mov	w0, w8
  461834:	adrp	x1, 464000 <on_inotify.__assert_in_set+0x540>
  461838:	add	x1, x1, #0x2ff
  46183c:	ldr	x2, [sp, #1016]
  461840:	mov	w3, #0x41d                 	// #1053
  461844:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  461848:	add	x4, x4, #0x3d1
  46184c:	bl	40a540 <log_assert_failed_realm@plt>
  461850:	sub	x0, x29, #0x28
  461854:	bl	46086c <dhcp_lease_new>
  461858:	str	w0, [sp, #1348]
  46185c:	ldr	w8, [sp, #1348]
  461860:	cmp	w8, #0x0
  461864:	cset	w8, ge  // ge = tcont
  461868:	tbnz	w8, #0, 461880 <dhcp_lease_load+0x178>
  46186c:	ldr	w8, [sp, #1348]
  461870:	stur	w8, [x29, #-12]
  461874:	mov	w8, #0x1                   	// #1
  461878:	str	w8, [sp, #1340]
  46187c:	b	462c48 <dhcp_lease_load+0x1540>
  461880:	ldur	x1, [x29, #-32]
  461884:	ldur	x8, [x29, #-40]
  461888:	add	x8, x8, #0x90
  46188c:	ldur	x9, [x29, #-40]
  461890:	add	x9, x9, #0xa0
  461894:	ldur	x10, [x29, #-40]
  461898:	add	x10, x10, #0xa8
  46189c:	ldur	x11, [x29, #-40]
  4618a0:	add	x11, x11, #0xd0
  4618a4:	add	x12, sp, #0x548
  4618a8:	add	x13, x12, #0x8
  4618ac:	add	x14, x12, #0x10
  4618b0:	add	x15, x12, #0x18
  4618b4:	add	x16, x12, #0x20
  4618b8:	add	x17, x12, #0x28
  4618bc:	add	x18, x12, #0x30
  4618c0:	add	x0, x12, #0x38
  4618c4:	add	x2, x12, #0x40
  4618c8:	add	x3, x12, #0x48
  4618cc:	add	x4, x12, #0x50
  4618d0:	add	x5, x12, #0x58
  4618d4:	add	x6, x12, #0x60
  4618d8:	add	x7, x12, #0x68
  4618dc:	add	x19, x12, #0x70
  4618e0:	add	x20, x12, #0x78
  4618e4:	add	x21, x12, #0x80
  4618e8:	add	x22, x12, #0x88
  4618ec:	add	x23, x12, #0x90
  4618f0:	add	x24, x12, #0x98
  4618f4:	add	x25, x12, #0xa0
  4618f8:	add	x26, x12, #0xa8
  4618fc:	add	x27, x12, #0xb0
  461900:	add	x28, x12, #0xb8
  461904:	add	x30, x12, #0xc0
  461908:	str	x8, [sp, #1000]
  46190c:	add	x8, x12, #0xc8
  461910:	str	x8, [sp, #992]
  461914:	add	x8, x12, #0xd0
  461918:	str	x8, [sp, #984]
  46191c:	add	x8, x12, #0xd8
  461920:	str	x8, [sp, #976]
  461924:	add	x8, x12, #0xe0
  461928:	str	x8, [sp, #968]
  46192c:	add	x8, x12, #0xe8
  461930:	str	x8, [sp, #960]
  461934:	add	x8, x12, #0xf0
  461938:	str	x8, [sp, #952]
  46193c:	mov	x8, xzr
  461940:	str	x8, [sp, #944]
  461944:	str	x0, [sp, #936]
  461948:	mov	x0, x8
  46194c:	adrp	x8, 471000 <on_inotify.__assert_in_set+0xd540>
  461950:	add	x8, x8, #0x405
  461954:	str	x2, [sp, #928]
  461958:	mov	x2, x8
  46195c:	sub	x8, x29, #0x30
  461960:	str	x3, [sp, #920]
  461964:	mov	x3, x8
  461968:	adrp	x8, 471000 <on_inotify.__assert_in_set+0xd540>
  46196c:	add	x8, x8, #0x40d
  461970:	str	x4, [sp, #912]
  461974:	mov	x4, x8
  461978:	sub	x8, x29, #0x38
  46197c:	str	x5, [sp, #904]
  461980:	mov	x5, x8
  461984:	adrp	x8, 471000 <on_inotify.__assert_in_set+0xd540>
  461988:	add	x8, x8, #0x414
  46198c:	str	x6, [sp, #896]
  461990:	mov	x6, x8
  461994:	sub	x8, x29, #0x40
  461998:	str	x7, [sp, #888]
  46199c:	mov	x7, x8
  4619a0:	mov	x8, sp
  4619a4:	str	x8, [sp, #880]
  4619a8:	adrp	x8, 471000 <on_inotify.__assert_in_set+0xd540>
  4619ac:	add	x8, x8, #0x41c
  4619b0:	str	x9, [sp, #872]
  4619b4:	ldr	x9, [sp, #880]
  4619b8:	str	x8, [x9]
  4619bc:	mov	x8, sp
  4619c0:	sub	x9, x29, #0x48
  4619c4:	str	x9, [x8, #8]
  4619c8:	mov	x8, sp
  4619cc:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  4619d0:	add	x9, x9, #0x42e
  4619d4:	str	x9, [x8, #16]
  4619d8:	mov	x8, sp
  4619dc:	sub	x9, x29, #0x50
  4619e0:	str	x9, [x8, #24]
  4619e4:	mov	x8, sp
  4619e8:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  4619ec:	add	x9, x9, #0x43a
  4619f0:	str	x9, [x8, #32]
  4619f4:	mov	x8, sp
  4619f8:	sub	x9, x29, #0x58
  4619fc:	str	x9, [x8, #40]
  461a00:	mov	x8, sp
  461a04:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a08:	add	x9, x9, #0x444
  461a0c:	str	x9, [x8, #48]
  461a10:	mov	x8, sp
  461a14:	sub	x9, x29, #0x60
  461a18:	str	x9, [x8, #56]
  461a1c:	mov	x8, sp
  461a20:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a24:	add	x9, x9, #0x448
  461a28:	str	x9, [x8, #64]
  461a2c:	mov	x8, sp
  461a30:	sub	x9, x29, #0x68
  461a34:	str	x9, [x8, #72]
  461a38:	mov	x8, sp
  461a3c:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a40:	add	x9, x9, #0x44c
  461a44:	str	x9, [x8, #80]
  461a48:	mov	x8, sp
  461a4c:	sub	x9, x29, #0x70
  461a50:	str	x9, [x8, #88]
  461a54:	mov	x8, sp
  461a58:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a5c:	add	x9, x9, #0x450
  461a60:	str	x9, [x8, #96]
  461a64:	mov	x8, sp
  461a68:	sub	x9, x29, #0x78
  461a6c:	str	x9, [x8, #104]
  461a70:	mov	x8, sp
  461a74:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a78:	add	x9, x9, #0x454
  461a7c:	str	x9, [x8, #112]
  461a80:	mov	x8, sp
  461a84:	ldr	x9, [sp, #1000]
  461a88:	str	x9, [x8, #120]
  461a8c:	mov	x8, sp
  461a90:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461a94:	add	x9, x9, #0x45f
  461a98:	str	x9, [x8, #128]
  461a9c:	mov	x8, sp
  461aa0:	ldr	x9, [sp, #872]
  461aa4:	str	x9, [x8, #136]
  461aa8:	mov	x8, sp
  461aac:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461ab0:	add	x9, x9, #0x468
  461ab4:	str	x9, [x8, #144]
  461ab8:	mov	x8, sp
  461abc:	sub	x9, x29, #0x88
  461ac0:	str	x9, [x8, #152]
  461ac4:	mov	x8, sp
  461ac8:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461acc:	add	x9, x9, #0x47b
  461ad0:	str	x9, [x8, #160]
  461ad4:	mov	x8, sp
  461ad8:	str	x10, [x8, #168]
  461adc:	mov	x8, sp
  461ae0:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461ae4:	add	x9, x9, #0x33e
  461ae8:	str	x9, [x8, #176]
  461aec:	mov	x8, sp
  461af0:	sub	x9, x29, #0x80
  461af4:	str	x9, [x8, #184]
  461af8:	mov	x8, sp
  461afc:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b00:	add	x9, x9, #0x485
  461b04:	str	x9, [x8, #192]
  461b08:	mov	x8, sp
  461b0c:	sub	x9, x29, #0x90
  461b10:	str	x9, [x8, #200]
  461b14:	mov	x8, sp
  461b18:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b1c:	add	x9, x9, #0x48e
  461b20:	str	x9, [x8, #208]
  461b24:	mov	x8, sp
  461b28:	str	x11, [x8, #216]
  461b2c:	mov	x8, sp
  461b30:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b34:	add	x9, x9, #0x497
  461b38:	str	x9, [x8, #224]
  461b3c:	mov	x8, sp
  461b40:	sub	x9, x29, #0x98
  461b44:	str	x9, [x8, #232]
  461b48:	mov	x8, sp
  461b4c:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b50:	add	x9, x9, #0x4a7
  461b54:	str	x9, [x8, #240]
  461b58:	mov	x8, sp
  461b5c:	sub	x9, x29, #0xa0
  461b60:	str	x9, [x8, #248]
  461b64:	mov	x8, sp
  461b68:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b6c:	add	x9, x9, #0x4b0
  461b70:	str	x9, [x8, #256]
  461b74:	mov	x8, sp
  461b78:	sub	x9, x29, #0xa8
  461b7c:	str	x9, [x8, #264]
  461b80:	mov	x8, sp
  461b84:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461b88:	add	x9, x9, #0x4b3
  461b8c:	str	x9, [x8, #272]
  461b90:	mov	x8, sp
  461b94:	sub	x9, x29, #0xb0
  461b98:	str	x9, [x8, #280]
  461b9c:	mov	x8, sp
  461ba0:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461ba4:	add	x9, x9, #0x4b6
  461ba8:	str	x9, [x8, #288]
  461bac:	mov	x8, sp
  461bb0:	str	x12, [x8, #296]
  461bb4:	mov	x8, sp
  461bb8:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461bbc:	add	x9, x9, #0x4c1
  461bc0:	str	x9, [x8, #304]
  461bc4:	mov	x8, sp
  461bc8:	str	x13, [x8, #312]
  461bcc:	mov	x8, sp
  461bd0:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461bd4:	add	x9, x9, #0x4cc
  461bd8:	str	x9, [x8, #320]
  461bdc:	mov	x8, sp
  461be0:	str	x14, [x8, #328]
  461be4:	mov	x8, sp
  461be8:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461bec:	add	x9, x9, #0x4d7
  461bf0:	str	x9, [x8, #336]
  461bf4:	mov	x8, sp
  461bf8:	str	x15, [x8, #344]
  461bfc:	mov	x8, sp
  461c00:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461c04:	add	x9, x9, #0x4e2
  461c08:	str	x9, [x8, #352]
  461c0c:	mov	x8, sp
  461c10:	str	x16, [x8, #360]
  461c14:	mov	x8, sp
  461c18:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461c1c:	add	x9, x9, #0x4ed
  461c20:	str	x9, [x8, #368]
  461c24:	mov	x8, sp
  461c28:	str	x17, [x8, #376]
  461c2c:	mov	x8, sp
  461c30:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461c34:	add	x9, x9, #0x4f8
  461c38:	str	x9, [x8, #384]
  461c3c:	mov	x8, sp
  461c40:	str	x18, [x8, #392]
  461c44:	mov	x8, sp
  461c48:	adrp	x9, 471000 <on_inotify.__assert_in_set+0xd540>
  461c4c:	add	x9, x9, #0x503
  461c50:	str	x9, [x8, #400]
  461c54:	mov	x8, sp
  461c58:	ldr	x9, [sp, #936]
  461c5c:	str	x9, [x8, #408]
  461c60:	mov	x8, sp
  461c64:	adrp	x10, 471000 <on_inotify.__assert_in_set+0xd540>
  461c68:	add	x10, x10, #0x50e
  461c6c:	str	x10, [x8, #416]
  461c70:	mov	x8, sp
  461c74:	ldr	x10, [sp, #928]
  461c78:	str	x10, [x8, #424]
  461c7c:	mov	x8, sp
  461c80:	adrp	x11, 471000 <on_inotify.__assert_in_set+0xd540>
  461c84:	add	x11, x11, #0x519
  461c88:	str	x11, [x8, #432]
  461c8c:	mov	x8, sp
  461c90:	ldr	x11, [sp, #920]
  461c94:	str	x11, [x8, #440]
  461c98:	mov	x8, sp
  461c9c:	adrp	x12, 471000 <on_inotify.__assert_in_set+0xd540>
  461ca0:	add	x12, x12, #0x524
  461ca4:	str	x12, [x8, #448]
  461ca8:	mov	x8, sp
  461cac:	ldr	x12, [sp, #912]
  461cb0:	str	x12, [x8, #456]
  461cb4:	mov	x8, sp
  461cb8:	adrp	x13, 471000 <on_inotify.__assert_in_set+0xd540>
  461cbc:	add	x13, x13, #0x52f
  461cc0:	str	x13, [x8, #464]
  461cc4:	mov	x8, sp
  461cc8:	ldr	x13, [sp, #904]
  461ccc:	str	x13, [x8, #472]
  461cd0:	mov	x8, sp
  461cd4:	adrp	x14, 471000 <on_inotify.__assert_in_set+0xd540>
  461cd8:	add	x14, x14, #0x53a
  461cdc:	str	x14, [x8, #480]
  461ce0:	mov	x8, sp
  461ce4:	ldr	x14, [sp, #896]
  461ce8:	str	x14, [x8, #488]
  461cec:	mov	x8, sp
  461cf0:	adrp	x15, 471000 <on_inotify.__assert_in_set+0xd540>
  461cf4:	add	x15, x15, #0x545
  461cf8:	str	x15, [x8, #496]
  461cfc:	mov	x8, sp
  461d00:	ldr	x15, [sp, #888]
  461d04:	str	x15, [x8, #504]
  461d08:	mov	x8, sp
  461d0c:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d10:	add	x16, x16, #0x550
  461d14:	str	x16, [x8, #512]
  461d18:	mov	x8, sp
  461d1c:	str	x19, [x8, #520]
  461d20:	mov	x8, sp
  461d24:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d28:	add	x16, x16, #0x55b
  461d2c:	str	x16, [x8, #528]
  461d30:	mov	x8, sp
  461d34:	str	x20, [x8, #536]
  461d38:	mov	x8, sp
  461d3c:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d40:	add	x16, x16, #0x566
  461d44:	str	x16, [x8, #544]
  461d48:	mov	x8, sp
  461d4c:	str	x21, [x8, #552]
  461d50:	mov	x8, sp
  461d54:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d58:	add	x16, x16, #0x571
  461d5c:	str	x16, [x8, #560]
  461d60:	mov	x8, sp
  461d64:	str	x22, [x8, #568]
  461d68:	mov	x8, sp
  461d6c:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d70:	add	x16, x16, #0x57c
  461d74:	str	x16, [x8, #576]
  461d78:	mov	x8, sp
  461d7c:	str	x23, [x8, #584]
  461d80:	mov	x8, sp
  461d84:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461d88:	add	x16, x16, #0x587
  461d8c:	str	x16, [x8, #592]
  461d90:	mov	x8, sp
  461d94:	str	x24, [x8, #600]
  461d98:	mov	x8, sp
  461d9c:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461da0:	add	x16, x16, #0x592
  461da4:	str	x16, [x8, #608]
  461da8:	mov	x8, sp
  461dac:	str	x25, [x8, #616]
  461db0:	mov	x8, sp
  461db4:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461db8:	add	x16, x16, #0x59d
  461dbc:	str	x16, [x8, #624]
  461dc0:	mov	x8, sp
  461dc4:	str	x26, [x8, #632]
  461dc8:	mov	x8, sp
  461dcc:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461dd0:	add	x16, x16, #0x5a8
  461dd4:	str	x16, [x8, #640]
  461dd8:	mov	x8, sp
  461ddc:	str	x27, [x8, #648]
  461de0:	mov	x8, sp
  461de4:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461de8:	add	x16, x16, #0x5b3
  461dec:	str	x16, [x8, #656]
  461df0:	mov	x8, sp
  461df4:	str	x28, [x8, #664]
  461df8:	mov	x8, sp
  461dfc:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461e00:	add	x16, x16, #0x5be
  461e04:	str	x16, [x8, #672]
  461e08:	mov	x8, sp
  461e0c:	str	x30, [x8, #680]
  461e10:	mov	x8, sp
  461e14:	adrp	x16, 471000 <on_inotify.__assert_in_set+0xd540>
  461e18:	add	x16, x16, #0x5c9
  461e1c:	str	x16, [x8, #688]
  461e20:	mov	x8, sp
  461e24:	ldr	x16, [sp, #992]
  461e28:	str	x16, [x8, #696]
  461e2c:	mov	x8, sp
  461e30:	adrp	x17, 471000 <on_inotify.__assert_in_set+0xd540>
  461e34:	add	x17, x17, #0x5d4
  461e38:	str	x17, [x8, #704]
  461e3c:	mov	x8, sp
  461e40:	ldr	x17, [sp, #984]
  461e44:	str	x17, [x8, #712]
  461e48:	mov	x8, sp
  461e4c:	adrp	x18, 471000 <on_inotify.__assert_in_set+0xd540>
  461e50:	add	x18, x18, #0x5df
  461e54:	str	x18, [x8, #720]
  461e58:	mov	x8, sp
  461e5c:	ldr	x18, [sp, #976]
  461e60:	str	x18, [x8, #728]
  461e64:	mov	x8, sp
  461e68:	adrp	x19, 471000 <on_inotify.__assert_in_set+0xd540>
  461e6c:	add	x19, x19, #0x5ea
  461e70:	str	x19, [x8, #736]
  461e74:	mov	x8, sp
  461e78:	ldr	x19, [sp, #968]
  461e7c:	str	x19, [x8, #744]
  461e80:	mov	x8, sp
  461e84:	adrp	x20, 471000 <on_inotify.__assert_in_set+0xd540>
  461e88:	add	x20, x20, #0x5f5
  461e8c:	str	x20, [x8, #752]
  461e90:	mov	x8, sp
  461e94:	ldr	x20, [sp, #960]
  461e98:	str	x20, [x8, #760]
  461e9c:	mov	x8, sp
  461ea0:	adrp	x21, 471000 <on_inotify.__assert_in_set+0xd540>
  461ea4:	add	x21, x21, #0x600
  461ea8:	str	x21, [x8, #768]
  461eac:	mov	x8, sp
  461eb0:	ldr	x21, [sp, #952]
  461eb4:	str	x21, [x8, #776]
  461eb8:	mov	x8, sp
  461ebc:	ldr	x22, [sp, #944]
  461ec0:	str	x22, [x8, #784]
  461ec4:	bl	40bce0 <parse_env_file_sentinel@plt>
  461ec8:	str	w0, [sp, #1348]
  461ecc:	ldr	w0, [sp, #1348]
  461ed0:	cmp	w0, #0x0
  461ed4:	cset	w0, ge  // ge = tcont
  461ed8:	tbnz	w0, #0, 461ef0 <dhcp_lease_load+0x7e8>
  461edc:	ldr	w8, [sp, #1348]
  461ee0:	stur	w8, [x29, #-12]
  461ee4:	mov	w8, #0x1                   	// #1
  461ee8:	str	w8, [sp, #1340]
  461eec:	b	462c48 <dhcp_lease_load+0x1540>
  461ef0:	ldur	x8, [x29, #-48]
  461ef4:	cbz	x8, 461f98 <dhcp_lease_load+0x890>
  461ef8:	ldur	x1, [x29, #-48]
  461efc:	ldur	x8, [x29, #-40]
  461f00:	add	x2, x8, #0x10
  461f04:	mov	w0, #0x2                   	// #2
  461f08:	bl	40bfa0 <inet_pton@plt>
  461f0c:	str	w0, [sp, #1348]
  461f10:	ldr	w9, [sp, #1348]
  461f14:	cmp	w9, #0x0
  461f18:	cset	w9, gt
  461f1c:	tbnz	w9, #0, 461f98 <dhcp_lease_load+0x890>
  461f20:	mov	w8, #0x7                   	// #7
  461f24:	str	w8, [sp, #1336]
  461f28:	str	wzr, [sp, #1332]
  461f2c:	str	wzr, [sp, #1328]
  461f30:	ldr	w0, [sp, #1328]
  461f34:	bl	40a3f0 <log_get_max_level_realm@plt>
  461f38:	ldr	w8, [sp, #1336]
  461f3c:	and	w8, w8, #0x7
  461f40:	cmp	w0, w8
  461f44:	b.lt	461f7c <dhcp_lease_load+0x874>  // b.tstop
  461f48:	ldr	w8, [sp, #1328]
  461f4c:	ldr	w9, [sp, #1336]
  461f50:	orr	w0, w9, w8, lsl #10
  461f54:	ldr	w1, [sp, #1332]
  461f58:	ldur	x6, [x29, #-48]
  461f5c:	ldr	x2, [sp, #1016]
  461f60:	mov	w3, #0x45e                 	// #1118
  461f64:	ldr	x4, [sp, #1008]
  461f68:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  461f6c:	add	x5, x5, #0x61b
  461f70:	bl	40a400 <log_internal_realm@plt>
  461f74:	str	w0, [sp, #868]
  461f78:	b	461f90 <dhcp_lease_load+0x888>
  461f7c:	ldr	w0, [sp, #1332]
  461f80:	bl	40a410 <abs@plt>
  461f84:	mov	w8, wzr
  461f88:	subs	w8, w8, w0, uxtb
  461f8c:	str	w8, [sp, #868]
  461f90:	ldr	w8, [sp, #868]
  461f94:	str	w8, [sp, #1324]
  461f98:	ldur	x8, [x29, #-56]
  461f9c:	cbz	x8, 462050 <dhcp_lease_load+0x948>
  461fa0:	ldur	x8, [x29, #-40]
  461fa4:	add	x0, x8, #0x30
  461fa8:	ldur	x1, [x29, #-56]
  461fac:	bl	45afcc <deserialize_in_addrs>
  461fb0:	str	w0, [sp, #1348]
  461fb4:	ldr	w9, [sp, #1348]
  461fb8:	cmp	w9, #0x0
  461fbc:	cset	w9, ge  // ge = tcont
  461fc0:	tbnz	w9, #0, 462044 <dhcp_lease_load+0x93c>
  461fc4:	mov	w8, #0x7                   	// #7
  461fc8:	str	w8, [sp, #1320]
  461fcc:	ldr	w8, [sp, #1348]
  461fd0:	str	w8, [sp, #1316]
  461fd4:	str	wzr, [sp, #1312]
  461fd8:	ldr	w0, [sp, #1312]
  461fdc:	bl	40a3f0 <log_get_max_level_realm@plt>
  461fe0:	ldr	w8, [sp, #1320]
  461fe4:	and	w8, w8, #0x7
  461fe8:	cmp	w0, w8
  461fec:	b.lt	462024 <dhcp_lease_load+0x91c>  // b.tstop
  461ff0:	ldr	w8, [sp, #1312]
  461ff4:	ldr	w9, [sp, #1320]
  461ff8:	orr	w0, w9, w8, lsl #10
  461ffc:	ldr	w1, [sp, #1316]
  462000:	ldur	x6, [x29, #-56]
  462004:	ldr	x2, [sp, #1016]
  462008:	mov	w3, #0x464                 	// #1124
  46200c:	ldr	x4, [sp, #1008]
  462010:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462014:	add	x5, x5, #0x641
  462018:	bl	40a400 <log_internal_realm@plt>
  46201c:	str	w0, [sp, #864]
  462020:	b	462038 <dhcp_lease_load+0x930>
  462024:	ldr	w0, [sp, #1316]
  462028:	bl	40a410 <abs@plt>
  46202c:	mov	w8, wzr
  462030:	subs	w8, w8, w0, uxtb
  462034:	str	w8, [sp, #864]
  462038:	ldr	w8, [sp, #864]
  46203c:	str	w8, [sp, #1308]
  462040:	b	462050 <dhcp_lease_load+0x948>
  462044:	ldrsw	x8, [sp, #1348]
  462048:	ldur	x9, [x29, #-40]
  46204c:	str	x8, [x9, #56]
  462050:	ldur	x8, [x29, #-64]
  462054:	cbz	x8, 462108 <dhcp_lease_load+0xa00>
  462058:	ldur	x1, [x29, #-64]
  46205c:	ldur	x8, [x29, #-40]
  462060:	add	x2, x8, #0x20
  462064:	mov	w0, #0x2                   	// #2
  462068:	bl	40bfa0 <inet_pton@plt>
  46206c:	str	w0, [sp, #1348]
  462070:	ldr	w9, [sp, #1348]
  462074:	cmp	w9, #0x0
  462078:	cset	w9, gt
  46207c:	tbnz	w9, #0, 4620fc <dhcp_lease_load+0x9f4>
  462080:	mov	w8, #0x7                   	// #7
  462084:	str	w8, [sp, #1304]
  462088:	str	wzr, [sp, #1300]
  46208c:	str	wzr, [sp, #1296]
  462090:	ldr	w0, [sp, #1296]
  462094:	bl	40a3f0 <log_get_max_level_realm@plt>
  462098:	ldr	w8, [sp, #1304]
  46209c:	and	w8, w8, #0x7
  4620a0:	cmp	w0, w8
  4620a4:	b.lt	4620dc <dhcp_lease_load+0x9d4>  // b.tstop
  4620a8:	ldr	w8, [sp, #1296]
  4620ac:	ldr	w9, [sp, #1304]
  4620b0:	orr	w0, w9, w8, lsl #10
  4620b4:	ldr	w1, [sp, #1300]
  4620b8:	ldur	x6, [x29, #-64]
  4620bc:	ldr	x2, [sp, #1016]
  4620c0:	mov	w3, #0x46c                 	// #1132
  4620c4:	ldr	x4, [sp, #1008]
  4620c8:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4620cc:	add	x5, x5, #0x679
  4620d0:	bl	40a400 <log_internal_realm@plt>
  4620d4:	str	w0, [sp, #860]
  4620d8:	b	4620f0 <dhcp_lease_load+0x9e8>
  4620dc:	ldr	w0, [sp, #1300]
  4620e0:	bl	40a410 <abs@plt>
  4620e4:	mov	w8, wzr
  4620e8:	subs	w8, w8, w0, uxtb
  4620ec:	str	w8, [sp, #860]
  4620f0:	ldr	w8, [sp, #860]
  4620f4:	str	w8, [sp, #1292]
  4620f8:	b	462108 <dhcp_lease_load+0xa00>
  4620fc:	ldur	x8, [x29, #-40]
  462100:	mov	w9, #0x1                   	// #1
  462104:	strb	w9, [x8, #28]
  462108:	ldur	x8, [x29, #-72]
  46210c:	cbz	x8, 4621b0 <dhcp_lease_load+0xaa8>
  462110:	ldur	x1, [x29, #-72]
  462114:	ldur	x8, [x29, #-40]
  462118:	add	x2, x8, #0x14
  46211c:	mov	w0, #0x2                   	// #2
  462120:	bl	40bfa0 <inet_pton@plt>
  462124:	str	w0, [sp, #1348]
  462128:	ldr	w9, [sp, #1348]
  46212c:	cmp	w9, #0x0
  462130:	cset	w9, gt
  462134:	tbnz	w9, #0, 4621b0 <dhcp_lease_load+0xaa8>
  462138:	mov	w8, #0x7                   	// #7
  46213c:	str	w8, [sp, #1288]
  462140:	str	wzr, [sp, #1284]
  462144:	str	wzr, [sp, #1280]
  462148:	ldr	w0, [sp, #1280]
  46214c:	bl	40a3f0 <log_get_max_level_realm@plt>
  462150:	ldr	w8, [sp, #1288]
  462154:	and	w8, w8, #0x7
  462158:	cmp	w0, w8
  46215c:	b.lt	462194 <dhcp_lease_load+0xa8c>  // b.tstop
  462160:	ldr	w8, [sp, #1280]
  462164:	ldr	w9, [sp, #1288]
  462168:	orr	w0, w9, w8, lsl #10
  46216c:	ldr	w1, [sp, #1284]
  462170:	ldur	x6, [x29, #-72]
  462174:	ldr	x2, [sp, #1016]
  462178:	mov	w3, #0x474                 	// #1140
  46217c:	ldr	x4, [sp, #1008]
  462180:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462184:	add	x5, x5, #0x69f
  462188:	bl	40a400 <log_internal_realm@plt>
  46218c:	str	w0, [sp, #856]
  462190:	b	4621a8 <dhcp_lease_load+0xaa0>
  462194:	ldr	w0, [sp, #1284]
  462198:	bl	40a410 <abs@plt>
  46219c:	mov	w8, wzr
  4621a0:	subs	w8, w8, w0, uxtb
  4621a4:	str	w8, [sp, #856]
  4621a8:	ldr	w8, [sp, #856]
  4621ac:	str	w8, [sp, #1276]
  4621b0:	ldur	x8, [x29, #-80]
  4621b4:	cbz	x8, 462258 <dhcp_lease_load+0xb50>
  4621b8:	ldur	x1, [x29, #-80]
  4621bc:	ldur	x8, [x29, #-40]
  4621c0:	add	x2, x8, #0x18
  4621c4:	mov	w0, #0x2                   	// #2
  4621c8:	bl	40bfa0 <inet_pton@plt>
  4621cc:	str	w0, [sp, #1348]
  4621d0:	ldr	w9, [sp, #1348]
  4621d4:	cmp	w9, #0x0
  4621d8:	cset	w9, gt
  4621dc:	tbnz	w9, #0, 462258 <dhcp_lease_load+0xb50>
  4621e0:	mov	w8, #0x7                   	// #7
  4621e4:	str	w8, [sp, #1272]
  4621e8:	str	wzr, [sp, #1268]
  4621ec:	str	wzr, [sp, #1264]
  4621f0:	ldr	w0, [sp, #1264]
  4621f4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4621f8:	ldr	w8, [sp, #1272]
  4621fc:	and	w8, w8, #0x7
  462200:	cmp	w0, w8
  462204:	b.lt	46223c <dhcp_lease_load+0xb34>  // b.tstop
  462208:	ldr	w8, [sp, #1264]
  46220c:	ldr	w9, [sp, #1272]
  462210:	orr	w0, w9, w8, lsl #10
  462214:	ldr	w1, [sp, #1268]
  462218:	ldur	x6, [x29, #-80]
  46221c:	ldr	x2, [sp, #1016]
  462220:	mov	w3, #0x47a                 	// #1146
  462224:	ldr	x4, [sp, #1008]
  462228:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  46222c:	add	x5, x5, #0x6cc
  462230:	bl	40a400 <log_internal_realm@plt>
  462234:	str	w0, [sp, #852]
  462238:	b	462250 <dhcp_lease_load+0xb48>
  46223c:	ldr	w0, [sp, #1268]
  462240:	bl	40a410 <abs@plt>
  462244:	mov	w8, wzr
  462248:	subs	w8, w8, w0, uxtb
  46224c:	str	w8, [sp, #852]
  462250:	ldr	w8, [sp, #852]
  462254:	str	w8, [sp, #1260]
  462258:	ldur	x8, [x29, #-88]
  46225c:	cbz	x8, 462310 <dhcp_lease_load+0xc08>
  462260:	ldur	x1, [x29, #-88]
  462264:	ldur	x8, [x29, #-40]
  462268:	add	x2, x8, #0x28
  46226c:	mov	w0, #0x2                   	// #2
  462270:	bl	40bfa0 <inet_pton@plt>
  462274:	str	w0, [sp, #1348]
  462278:	ldr	w9, [sp, #1348]
  46227c:	cmp	w9, #0x0
  462280:	cset	w9, gt
  462284:	tbnz	w9, #0, 462304 <dhcp_lease_load+0xbfc>
  462288:	mov	w8, #0x7                   	// #7
  46228c:	str	w8, [sp, #1256]
  462290:	str	wzr, [sp, #1252]
  462294:	str	wzr, [sp, #1248]
  462298:	ldr	w0, [sp, #1248]
  46229c:	bl	40a3f0 <log_get_max_level_realm@plt>
  4622a0:	ldr	w8, [sp, #1256]
  4622a4:	and	w8, w8, #0x7
  4622a8:	cmp	w0, w8
  4622ac:	b.lt	4622e4 <dhcp_lease_load+0xbdc>  // b.tstop
  4622b0:	ldr	w8, [sp, #1248]
  4622b4:	ldr	w9, [sp, #1256]
  4622b8:	orr	w0, w9, w8, lsl #10
  4622bc:	ldr	w1, [sp, #1252]
  4622c0:	ldur	x6, [x29, #-88]
  4622c4:	ldr	x2, [sp, #1016]
  4622c8:	mov	w3, #0x480                 	// #1152
  4622cc:	ldr	x4, [sp, #1008]
  4622d0:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4622d4:	add	x5, x5, #0x6f6
  4622d8:	bl	40a400 <log_internal_realm@plt>
  4622dc:	str	w0, [sp, #848]
  4622e0:	b	4622f8 <dhcp_lease_load+0xbf0>
  4622e4:	ldr	w0, [sp, #1252]
  4622e8:	bl	40a410 <abs@plt>
  4622ec:	mov	w8, wzr
  4622f0:	subs	w8, w8, w0, uxtb
  4622f4:	str	w8, [sp, #848]
  4622f8:	ldr	w8, [sp, #848]
  4622fc:	str	w8, [sp, #1244]
  462300:	b	462310 <dhcp_lease_load+0xc08>
  462304:	ldur	x8, [x29, #-40]
  462308:	mov	w9, #0x1                   	// #1
  46230c:	strb	w9, [x8, #36]
  462310:	ldur	x8, [x29, #-96]
  462314:	cbz	x8, 4623c8 <dhcp_lease_load+0xcc0>
  462318:	ldur	x8, [x29, #-40]
  46231c:	add	x0, x8, #0x40
  462320:	ldur	x1, [x29, #-96]
  462324:	bl	45afcc <deserialize_in_addrs>
  462328:	str	w0, [sp, #1348]
  46232c:	ldr	w9, [sp, #1348]
  462330:	cmp	w9, #0x0
  462334:	cset	w9, ge  // ge = tcont
  462338:	tbnz	w9, #0, 4623bc <dhcp_lease_load+0xcb4>
  46233c:	mov	w8, #0x7                   	// #7
  462340:	str	w8, [sp, #1240]
  462344:	ldr	w8, [sp, #1348]
  462348:	str	w8, [sp, #1236]
  46234c:	str	wzr, [sp, #1232]
  462350:	ldr	w0, [sp, #1232]
  462354:	bl	40a3f0 <log_get_max_level_realm@plt>
  462358:	ldr	w8, [sp, #1240]
  46235c:	and	w8, w8, #0x7
  462360:	cmp	w0, w8
  462364:	b.lt	46239c <dhcp_lease_load+0xc94>  // b.tstop
  462368:	ldr	w8, [sp, #1232]
  46236c:	ldr	w9, [sp, #1240]
  462370:	orr	w0, w9, w8, lsl #10
  462374:	ldr	w1, [sp, #1236]
  462378:	ldur	x6, [x29, #-96]
  46237c:	ldr	x2, [sp, #1016]
  462380:	mov	w3, #0x488                 	// #1160
  462384:	ldr	x4, [sp, #1008]
  462388:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  46238c:	add	x5, x5, #0x726
  462390:	bl	40a400 <log_internal_realm@plt>
  462394:	str	w0, [sp, #844]
  462398:	b	4623b0 <dhcp_lease_load+0xca8>
  46239c:	ldr	w0, [sp, #1236]
  4623a0:	bl	40a410 <abs@plt>
  4623a4:	mov	w8, wzr
  4623a8:	subs	w8, w8, w0, uxtb
  4623ac:	str	w8, [sp, #844]
  4623b0:	ldr	w8, [sp, #844]
  4623b4:	str	w8, [sp, #1228]
  4623b8:	b	4623c8 <dhcp_lease_load+0xcc0>
  4623bc:	ldrsw	x8, [sp, #1348]
  4623c0:	ldur	x9, [x29, #-40]
  4623c4:	str	x8, [x9, #72]
  4623c8:	ldur	x8, [x29, #-104]
  4623cc:	cbz	x8, 462480 <dhcp_lease_load+0xd78>
  4623d0:	ldur	x8, [x29, #-40]
  4623d4:	add	x0, x8, #0x50
  4623d8:	ldur	x1, [x29, #-104]
  4623dc:	bl	45afcc <deserialize_in_addrs>
  4623e0:	str	w0, [sp, #1348]
  4623e4:	ldr	w9, [sp, #1348]
  4623e8:	cmp	w9, #0x0
  4623ec:	cset	w9, ge  // ge = tcont
  4623f0:	tbnz	w9, #0, 462474 <dhcp_lease_load+0xd6c>
  4623f4:	mov	w8, #0x7                   	// #7
  4623f8:	str	w8, [sp, #1224]
  4623fc:	ldr	w8, [sp, #1348]
  462400:	str	w8, [sp, #1220]
  462404:	str	wzr, [sp, #1216]
  462408:	ldr	w0, [sp, #1216]
  46240c:	bl	40a3f0 <log_get_max_level_realm@plt>
  462410:	ldr	w8, [sp, #1224]
  462414:	and	w8, w8, #0x7
  462418:	cmp	w0, w8
  46241c:	b.lt	462454 <dhcp_lease_load+0xd4c>  // b.tstop
  462420:	ldr	w8, [sp, #1216]
  462424:	ldr	w9, [sp, #1224]
  462428:	orr	w0, w9, w8, lsl #10
  46242c:	ldr	w1, [sp, #1220]
  462430:	ldur	x6, [x29, #-104]
  462434:	ldr	x2, [sp, #1016]
  462438:	mov	w3, #0x490                 	// #1168
  46243c:	ldr	x4, [sp, #1008]
  462440:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462444:	add	x5, x5, #0x759
  462448:	bl	40a400 <log_internal_realm@plt>
  46244c:	str	w0, [sp, #840]
  462450:	b	462468 <dhcp_lease_load+0xd60>
  462454:	ldr	w0, [sp, #1220]
  462458:	bl	40a410 <abs@plt>
  46245c:	mov	w8, wzr
  462460:	subs	w8, w8, w0, uxtb
  462464:	str	w8, [sp, #840]
  462468:	ldr	w8, [sp, #840]
  46246c:	str	w8, [sp, #1212]
  462470:	b	462480 <dhcp_lease_load+0xd78>
  462474:	ldrsw	x8, [sp, #1348]
  462478:	ldur	x9, [x29, #-40]
  46247c:	str	x8, [x9, #88]
  462480:	ldur	x8, [x29, #-112]
  462484:	cbz	x8, 462538 <dhcp_lease_load+0xe30>
  462488:	ldur	x8, [x29, #-40]
  46248c:	add	x0, x8, #0x60
  462490:	ldur	x1, [x29, #-112]
  462494:	bl	45afcc <deserialize_in_addrs>
  462498:	str	w0, [sp, #1348]
  46249c:	ldr	w9, [sp, #1348]
  4624a0:	cmp	w9, #0x0
  4624a4:	cset	w9, ge  // ge = tcont
  4624a8:	tbnz	w9, #0, 46252c <dhcp_lease_load+0xe24>
  4624ac:	mov	w8, #0x7                   	// #7
  4624b0:	str	w8, [sp, #1208]
  4624b4:	ldr	w8, [sp, #1348]
  4624b8:	str	w8, [sp, #1204]
  4624bc:	str	wzr, [sp, #1200]
  4624c0:	ldr	w0, [sp, #1200]
  4624c4:	bl	40a3f0 <log_get_max_level_realm@plt>
  4624c8:	ldr	w8, [sp, #1208]
  4624cc:	and	w8, w8, #0x7
  4624d0:	cmp	w0, w8
  4624d4:	b.lt	46250c <dhcp_lease_load+0xe04>  // b.tstop
  4624d8:	ldr	w8, [sp, #1200]
  4624dc:	ldr	w9, [sp, #1208]
  4624e0:	orr	w0, w9, w8, lsl #10
  4624e4:	ldr	w1, [sp, #1204]
  4624e8:	ldur	x6, [x29, #-112]
  4624ec:	ldr	x2, [sp, #1016]
  4624f0:	mov	w3, #0x498                 	// #1176
  4624f4:	ldr	x4, [sp, #1008]
  4624f8:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4624fc:	add	x5, x5, #0x78c
  462500:	bl	40a400 <log_internal_realm@plt>
  462504:	str	w0, [sp, #836]
  462508:	b	462520 <dhcp_lease_load+0xe18>
  46250c:	ldr	w0, [sp, #1204]
  462510:	bl	40a410 <abs@plt>
  462514:	mov	w8, wzr
  462518:	subs	w8, w8, w0, uxtb
  46251c:	str	w8, [sp, #836]
  462520:	ldr	w8, [sp, #836]
  462524:	str	w8, [sp, #1196]
  462528:	b	462538 <dhcp_lease_load+0xe30>
  46252c:	ldrsw	x8, [sp, #1348]
  462530:	ldur	x9, [x29, #-40]
  462534:	str	x8, [x9, #88]
  462538:	ldur	x8, [x29, #-120]
  46253c:	cbz	x8, 4625e0 <dhcp_lease_load+0xed8>
  462540:	ldur	x0, [x29, #-120]
  462544:	ldur	x8, [x29, #-40]
  462548:	add	x1, x8, #0x88
  46254c:	bl	462d38 <safe_atou16>
  462550:	str	w0, [sp, #1348]
  462554:	ldr	w9, [sp, #1348]
  462558:	cmp	w9, #0x0
  46255c:	cset	w9, ge  // ge = tcont
  462560:	tbnz	w9, #0, 4625e0 <dhcp_lease_load+0xed8>
  462564:	mov	w8, #0x7                   	// #7
  462568:	str	w8, [sp, #1192]
  46256c:	ldr	w8, [sp, #1348]
  462570:	str	w8, [sp, #1188]
  462574:	str	wzr, [sp, #1184]
  462578:	ldr	w0, [sp, #1184]
  46257c:	bl	40a3f0 <log_get_max_level_realm@plt>
  462580:	ldr	w8, [sp, #1192]
  462584:	and	w8, w8, #0x7
  462588:	cmp	w0, w8
  46258c:	b.lt	4625c4 <dhcp_lease_load+0xebc>  // b.tstop
  462590:	ldr	w8, [sp, #1184]
  462594:	ldr	w9, [sp, #1192]
  462598:	orr	w0, w9, w8, lsl #10
  46259c:	ldr	w1, [sp, #1188]
  4625a0:	ldur	x6, [x29, #-120]
  4625a4:	ldr	x2, [sp, #1016]
  4625a8:	mov	w3, #0x4a0                 	// #1184
  4625ac:	ldr	x4, [sp, #1008]
  4625b0:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4625b4:	add	x5, x5, #0x7bf
  4625b8:	bl	40a400 <log_internal_realm@plt>
  4625bc:	str	w0, [sp, #832]
  4625c0:	b	4625d8 <dhcp_lease_load+0xed0>
  4625c4:	ldr	w0, [sp, #1188]
  4625c8:	bl	40a410 <abs@plt>
  4625cc:	mov	w8, wzr
  4625d0:	subs	w8, w8, w0, uxtb
  4625d4:	str	w8, [sp, #832]
  4625d8:	ldr	w8, [sp, #832]
  4625dc:	str	w8, [sp, #1180]
  4625e0:	ldur	x8, [x29, #-136]
  4625e4:	cbz	x8, 462664 <dhcp_lease_load+0xf5c>
  4625e8:	mov	x8, xzr
  4625ec:	str	x8, [sp, #1168]
  4625f0:	ldur	x0, [x29, #-136]
  4625f4:	adrp	x1, 466000 <on_inotify.__assert_in_set+0x2540>
  4625f8:	add	x1, x1, #0x61e
  4625fc:	bl	462d6c <strv_split>
  462600:	str	x0, [sp, #1168]
  462604:	ldr	x8, [sp, #1168]
  462608:	cbnz	x8, 462620 <dhcp_lease_load+0xf18>
  46260c:	mov	w8, #0xfffffff4            	// #-12
  462610:	stur	w8, [x29, #-12]
  462614:	mov	w8, #0x1                   	// #1
  462618:	str	w8, [sp, #1340]
  46261c:	b	462644 <dhcp_lease_load+0xf3c>
  462620:	ldr	x0, [sp, #1168]
  462624:	bl	462da0 <strv_isempty>
  462628:	tbnz	w0, #0, 462640 <dhcp_lease_load+0xf38>
  46262c:	ldr	x8, [sp, #1168]
  462630:	ldur	x9, [x29, #-40]
  462634:	str	x8, [x9, #152]
  462638:	mov	x8, xzr
  46263c:	str	x8, [sp, #1168]
  462640:	str	wzr, [sp, #1340]
  462644:	add	x0, sp, #0x490
  462648:	bl	460838 <strv_freep>
  46264c:	ldr	w8, [sp, #1340]
  462650:	cmp	w8, #0x0
  462654:	cset	w8, eq  // eq = none
  462658:	eor	w8, w8, #0x1
  46265c:	tbnz	w8, #0, 462c48 <dhcp_lease_load+0x1540>
  462660:	b	462664 <dhcp_lease_load+0xf5c>
  462664:	ldur	x8, [x29, #-128]
  462668:	cbz	x8, 46271c <dhcp_lease_load+0x1014>
  46266c:	ldur	x8, [x29, #-40]
  462670:	add	x0, x8, #0x70
  462674:	ldur	x8, [x29, #-40]
  462678:	add	x1, x8, #0x78
  46267c:	ldur	x8, [x29, #-40]
  462680:	add	x2, x8, #0x80
  462684:	ldur	x3, [x29, #-128]
  462688:	bl	45b9dc <deserialize_dhcp_routes>
  46268c:	str	w0, [sp, #1348]
  462690:	ldr	w9, [sp, #1348]
  462694:	cmp	w9, #0x0
  462698:	cset	w9, ge  // ge = tcont
  46269c:	tbnz	w9, #0, 46271c <dhcp_lease_load+0x1014>
  4626a0:	mov	w8, #0x7                   	// #7
  4626a4:	str	w8, [sp, #1164]
  4626a8:	ldr	w8, [sp, #1348]
  4626ac:	str	w8, [sp, #1160]
  4626b0:	str	wzr, [sp, #1156]
  4626b4:	ldr	w0, [sp, #1156]
  4626b8:	bl	40a3f0 <log_get_max_level_realm@plt>
  4626bc:	ldr	w8, [sp, #1164]
  4626c0:	and	w8, w8, #0x7
  4626c4:	cmp	w0, w8
  4626c8:	b.lt	462700 <dhcp_lease_load+0xff8>  // b.tstop
  4626cc:	ldr	w8, [sp, #1156]
  4626d0:	ldr	w9, [sp, #1164]
  4626d4:	orr	w0, w9, w8, lsl #10
  4626d8:	ldr	w1, [sp, #1160]
  4626dc:	ldur	x6, [x29, #-128]
  4626e0:	ldr	x2, [sp, #1016]
  4626e4:	mov	w3, #0x4b6                 	// #1206
  4626e8:	ldr	x4, [sp, #1008]
  4626ec:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4626f0:	add	x5, x5, #0x7e4
  4626f4:	bl	40a400 <log_internal_realm@plt>
  4626f8:	str	w0, [sp, #828]
  4626fc:	b	462714 <dhcp_lease_load+0x100c>
  462700:	ldr	w0, [sp, #1160]
  462704:	bl	40a410 <abs@plt>
  462708:	mov	w8, wzr
  46270c:	subs	w8, w8, w0, uxtb
  462710:	str	w8, [sp, #828]
  462714:	ldr	w8, [sp, #828]
  462718:	str	w8, [sp, #1152]
  46271c:	ldur	x8, [x29, #-160]
  462720:	cbz	x8, 4627c4 <dhcp_lease_load+0x10bc>
  462724:	ldur	x0, [x29, #-160]
  462728:	ldur	x8, [x29, #-40]
  46272c:	add	x1, x8, #0xc
  462730:	bl	462de0 <safe_atou32>
  462734:	str	w0, [sp, #1348]
  462738:	ldr	w9, [sp, #1348]
  46273c:	cmp	w9, #0x0
  462740:	cset	w9, ge  // ge = tcont
  462744:	tbnz	w9, #0, 4627c4 <dhcp_lease_load+0x10bc>
  462748:	mov	w8, #0x7                   	// #7
  46274c:	str	w8, [sp, #1148]
  462750:	ldr	w8, [sp, #1348]
  462754:	str	w8, [sp, #1144]
  462758:	str	wzr, [sp, #1140]
  46275c:	ldr	w0, [sp, #1140]
  462760:	bl	40a3f0 <log_get_max_level_realm@plt>
  462764:	ldr	w8, [sp, #1148]
  462768:	and	w8, w8, #0x7
  46276c:	cmp	w0, w8
  462770:	b.lt	4627a8 <dhcp_lease_load+0x10a0>  // b.tstop
  462774:	ldr	w8, [sp, #1140]
  462778:	ldr	w9, [sp, #1148]
  46277c:	orr	w0, w9, w8, lsl #10
  462780:	ldr	w1, [sp, #1144]
  462784:	ldur	x6, [x29, #-160]
  462788:	ldr	x2, [sp, #1016]
  46278c:	mov	w3, #0x4bc                 	// #1212
  462790:	ldr	x4, [sp, #1008]
  462794:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462798:	add	x5, x5, #0x811
  46279c:	bl	40a400 <log_internal_realm@plt>
  4627a0:	str	w0, [sp, #824]
  4627a4:	b	4627bc <dhcp_lease_load+0x10b4>
  4627a8:	ldr	w0, [sp, #1144]
  4627ac:	bl	40a410 <abs@plt>
  4627b0:	mov	w8, wzr
  4627b4:	subs	w8, w8, w0, uxtb
  4627b8:	str	w8, [sp, #824]
  4627bc:	ldr	w8, [sp, #824]
  4627c0:	str	w8, [sp, #1136]
  4627c4:	ldur	x8, [x29, #-168]
  4627c8:	cbz	x8, 46286c <dhcp_lease_load+0x1164>
  4627cc:	ldur	x0, [x29, #-168]
  4627d0:	ldur	x8, [x29, #-40]
  4627d4:	add	x1, x8, #0x4
  4627d8:	bl	462de0 <safe_atou32>
  4627dc:	str	w0, [sp, #1348]
  4627e0:	ldr	w9, [sp, #1348]
  4627e4:	cmp	w9, #0x0
  4627e8:	cset	w9, ge  // ge = tcont
  4627ec:	tbnz	w9, #0, 46286c <dhcp_lease_load+0x1164>
  4627f0:	mov	w8, #0x7                   	// #7
  4627f4:	str	w8, [sp, #1132]
  4627f8:	ldr	w8, [sp, #1348]
  4627fc:	str	w8, [sp, #1128]
  462800:	str	wzr, [sp, #1124]
  462804:	ldr	w0, [sp, #1124]
  462808:	bl	40a3f0 <log_get_max_level_realm@plt>
  46280c:	ldr	w8, [sp, #1132]
  462810:	and	w8, w8, #0x7
  462814:	cmp	w0, w8
  462818:	b.lt	462850 <dhcp_lease_load+0x1148>  // b.tstop
  46281c:	ldr	w8, [sp, #1124]
  462820:	ldr	w9, [sp, #1132]
  462824:	orr	w0, w9, w8, lsl #10
  462828:	ldr	w1, [sp, #1128]
  46282c:	ldur	x6, [x29, #-168]
  462830:	ldr	x2, [sp, #1016]
  462834:	mov	w3, #0x4c2                 	// #1218
  462838:	ldr	x4, [sp, #1008]
  46283c:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462840:	add	x5, x5, #0x83b
  462844:	bl	40a400 <log_internal_realm@plt>
  462848:	str	w0, [sp, #820]
  46284c:	b	462864 <dhcp_lease_load+0x115c>
  462850:	ldr	w0, [sp, #1128]
  462854:	bl	40a410 <abs@plt>
  462858:	mov	w8, wzr
  46285c:	subs	w8, w8, w0, uxtb
  462860:	str	w8, [sp, #820]
  462864:	ldr	w8, [sp, #820]
  462868:	str	w8, [sp, #1120]
  46286c:	ldur	x8, [x29, #-176]
  462870:	cbz	x8, 462914 <dhcp_lease_load+0x120c>
  462874:	ldur	x0, [x29, #-176]
  462878:	ldur	x8, [x29, #-40]
  46287c:	add	x1, x8, #0x8
  462880:	bl	462de0 <safe_atou32>
  462884:	str	w0, [sp, #1348]
  462888:	ldr	w9, [sp, #1348]
  46288c:	cmp	w9, #0x0
  462890:	cset	w9, ge  // ge = tcont
  462894:	tbnz	w9, #0, 462914 <dhcp_lease_load+0x120c>
  462898:	mov	w8, #0x7                   	// #7
  46289c:	str	w8, [sp, #1116]
  4628a0:	ldr	w8, [sp, #1348]
  4628a4:	str	w8, [sp, #1112]
  4628a8:	str	wzr, [sp, #1108]
  4628ac:	ldr	w0, [sp, #1108]
  4628b0:	bl	40a3f0 <log_get_max_level_realm@plt>
  4628b4:	ldr	w8, [sp, #1116]
  4628b8:	and	w8, w8, #0x7
  4628bc:	cmp	w0, w8
  4628c0:	b.lt	4628f8 <dhcp_lease_load+0x11f0>  // b.tstop
  4628c4:	ldr	w8, [sp, #1108]
  4628c8:	ldr	w9, [sp, #1116]
  4628cc:	orr	w0, w9, w8, lsl #10
  4628d0:	ldr	w1, [sp, #1112]
  4628d4:	ldur	x6, [x29, #-176]
  4628d8:	ldr	x2, [sp, #1016]
  4628dc:	mov	w3, #0x4c8                 	// #1224
  4628e0:	ldr	x4, [sp, #1008]
  4628e4:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  4628e8:	add	x5, x5, #0x85f
  4628ec:	bl	40a400 <log_internal_realm@plt>
  4628f0:	str	w0, [sp, #816]
  4628f4:	b	46290c <dhcp_lease_load+0x1204>
  4628f8:	ldr	w0, [sp, #1112]
  4628fc:	bl	40a410 <abs@plt>
  462900:	mov	w8, wzr
  462904:	subs	w8, w8, w0, uxtb
  462908:	str	w8, [sp, #816]
  46290c:	ldr	w8, [sp, #816]
  462910:	str	w8, [sp, #1104]
  462914:	ldur	x8, [x29, #-144]
  462918:	cbz	x8, 4629c8 <dhcp_lease_load+0x12c0>
  46291c:	ldur	x0, [x29, #-144]
  462920:	ldur	x8, [x29, #-40]
  462924:	add	x2, x8, #0xb0
  462928:	ldur	x8, [x29, #-40]
  46292c:	add	x3, x8, #0xb8
  462930:	mov	x1, #0xffffffffffffffff    	// #-1
  462934:	bl	462e0c <unhexmem>
  462938:	str	w0, [sp, #1348]
  46293c:	ldr	w9, [sp, #1348]
  462940:	cmp	w9, #0x0
  462944:	cset	w9, ge  // ge = tcont
  462948:	tbnz	w9, #0, 4629c8 <dhcp_lease_load+0x12c0>
  46294c:	mov	w8, #0x7                   	// #7
  462950:	str	w8, [sp, #1100]
  462954:	ldr	w8, [sp, #1348]
  462958:	str	w8, [sp, #1096]
  46295c:	str	wzr, [sp, #1092]
  462960:	ldr	w0, [sp, #1092]
  462964:	bl	40a3f0 <log_get_max_level_realm@plt>
  462968:	ldr	w8, [sp, #1100]
  46296c:	and	w8, w8, #0x7
  462970:	cmp	w0, w8
  462974:	b.lt	4629ac <dhcp_lease_load+0x12a4>  // b.tstop
  462978:	ldr	w8, [sp, #1092]
  46297c:	ldr	w9, [sp, #1100]
  462980:	orr	w0, w9, w8, lsl #10
  462984:	ldr	w1, [sp, #1096]
  462988:	ldur	x6, [x29, #-144]
  46298c:	ldr	x2, [sp, #1016]
  462990:	mov	w3, #0x4ce                 	// #1230
  462994:	ldr	x4, [sp, #1008]
  462998:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  46299c:	add	x5, x5, #0x883
  4629a0:	bl	40a400 <log_internal_realm@plt>
  4629a4:	str	w0, [sp, #812]
  4629a8:	b	4629c0 <dhcp_lease_load+0x12b8>
  4629ac:	ldr	w0, [sp, #1096]
  4629b0:	bl	40a410 <abs@plt>
  4629b4:	mov	w8, wzr
  4629b8:	subs	w8, w8, w0, uxtb
  4629bc:	str	w8, [sp, #812]
  4629c0:	ldr	w8, [sp, #812]
  4629c4:	str	w8, [sp, #1088]
  4629c8:	ldur	x8, [x29, #-152]
  4629cc:	cbz	x8, 462a7c <dhcp_lease_load+0x1374>
  4629d0:	ldur	x0, [x29, #-152]
  4629d4:	ldur	x8, [x29, #-40]
  4629d8:	add	x2, x8, #0xc0
  4629dc:	ldur	x8, [x29, #-40]
  4629e0:	add	x3, x8, #0xc8
  4629e4:	mov	x1, #0xffffffffffffffff    	// #-1
  4629e8:	bl	462e0c <unhexmem>
  4629ec:	str	w0, [sp, #1348]
  4629f0:	ldr	w9, [sp, #1348]
  4629f4:	cmp	w9, #0x0
  4629f8:	cset	w9, ge  // ge = tcont
  4629fc:	tbnz	w9, #0, 462a7c <dhcp_lease_load+0x1374>
  462a00:	mov	w8, #0x7                   	// #7
  462a04:	str	w8, [sp, #1084]
  462a08:	ldr	w8, [sp, #1348]
  462a0c:	str	w8, [sp, #1080]
  462a10:	str	wzr, [sp, #1076]
  462a14:	ldr	w0, [sp, #1076]
  462a18:	bl	40a3f0 <log_get_max_level_realm@plt>
  462a1c:	ldr	w8, [sp, #1084]
  462a20:	and	w8, w8, #0x7
  462a24:	cmp	w0, w8
  462a28:	b.lt	462a60 <dhcp_lease_load+0x1358>  // b.tstop
  462a2c:	ldr	w8, [sp, #1076]
  462a30:	ldr	w9, [sp, #1084]
  462a34:	orr	w0, w9, w8, lsl #10
  462a38:	ldr	w1, [sp, #1080]
  462a3c:	ldur	x6, [x29, #-152]
  462a40:	ldr	x2, [sp, #1016]
  462a44:	mov	w3, #0x4d4                 	// #1236
  462a48:	ldr	x4, [sp, #1008]
  462a4c:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462a50:	add	x5, x5, #0x8ae
  462a54:	bl	40a400 <log_internal_realm@plt>
  462a58:	str	w0, [sp, #808]
  462a5c:	b	462a74 <dhcp_lease_load+0x136c>
  462a60:	ldr	w0, [sp, #1080]
  462a64:	bl	40a410 <abs@plt>
  462a68:	mov	w8, wzr
  462a6c:	subs	w8, w8, w0, uxtb
  462a70:	str	w8, [sp, #808]
  462a74:	ldr	w8, [sp, #808]
  462a78:	str	w8, [sp, #1072]
  462a7c:	str	wzr, [sp, #1344]
  462a80:	ldr	w8, [sp, #1344]
  462a84:	cmp	w8, #0x1e
  462a88:	b.gt	462c18 <dhcp_lease_load+0x1510>
  462a8c:	mov	x8, xzr
  462a90:	str	x8, [sp, #1064]
  462a94:	ldrsw	x8, [sp, #1344]
  462a98:	mov	x9, #0x8                   	// #8
  462a9c:	mul	x8, x9, x8
  462aa0:	add	x9, sp, #0x548
  462aa4:	add	x8, x9, x8
  462aa8:	ldr	x8, [x8]
  462aac:	cbnz	x8, 462abc <dhcp_lease_load+0x13b4>
  462ab0:	mov	w8, #0x8                   	// #8
  462ab4:	str	w8, [sp, #1340]
  462ab8:	b	462be0 <dhcp_lease_load+0x14d8>
  462abc:	ldrsw	x8, [sp, #1344]
  462ac0:	mov	x9, #0x8                   	// #8
  462ac4:	mul	x8, x9, x8
  462ac8:	add	x9, sp, #0x548
  462acc:	add	x8, x9, x8
  462ad0:	ldr	x0, [x8]
  462ad4:	mov	x1, #0xffffffffffffffff    	// #-1
  462ad8:	add	x2, sp, #0x428
  462adc:	add	x3, sp, #0x420
  462ae0:	bl	462e0c <unhexmem>
  462ae4:	str	w0, [sp, #1348]
  462ae8:	ldr	w10, [sp, #1348]
  462aec:	cmp	w10, #0x0
  462af0:	cset	w10, ge  // ge = tcont
  462af4:	tbnz	w10, #0, 462b94 <dhcp_lease_load+0x148c>
  462af8:	mov	w8, #0x7                   	// #7
  462afc:	str	w8, [sp, #1052]
  462b00:	ldr	w8, [sp, #1348]
  462b04:	str	w8, [sp, #1048]
  462b08:	str	wzr, [sp, #1044]
  462b0c:	ldr	w0, [sp, #1044]
  462b10:	bl	40a3f0 <log_get_max_level_realm@plt>
  462b14:	ldr	w8, [sp, #1052]
  462b18:	and	w8, w8, #0x7
  462b1c:	cmp	w0, w8
  462b20:	b.lt	462b6c <dhcp_lease_load+0x1464>  // b.tstop
  462b24:	ldr	w8, [sp, #1044]
  462b28:	ldr	w9, [sp, #1052]
  462b2c:	orr	w0, w9, w8, lsl #10
  462b30:	ldr	w1, [sp, #1048]
  462b34:	ldrsw	x10, [sp, #1344]
  462b38:	mov	x11, #0x8                   	// #8
  462b3c:	mul	x10, x11, x10
  462b40:	add	x11, sp, #0x548
  462b44:	add	x10, x11, x10
  462b48:	ldr	x6, [x10]
  462b4c:	ldr	x2, [sp, #1016]
  462b50:	mov	w3, #0x4e0                 	// #1248
  462b54:	ldr	x4, [sp, #1008]
  462b58:	adrp	x5, 471000 <on_inotify.__assert_in_set+0xd540>
  462b5c:	add	x5, x5, #0x8e4
  462b60:	bl	40a400 <log_internal_realm@plt>
  462b64:	str	w0, [sp, #804]
  462b68:	b	462b80 <dhcp_lease_load+0x1478>
  462b6c:	ldr	w0, [sp, #1048]
  462b70:	bl	40a410 <abs@plt>
  462b74:	mov	w8, wzr
  462b78:	subs	w8, w8, w0, uxtb
  462b7c:	str	w8, [sp, #804]
  462b80:	ldr	w8, [sp, #804]
  462b84:	str	w8, [sp, #1040]
  462b88:	mov	w8, #0x8                   	// #8
  462b8c:	str	w8, [sp, #1340]
  462b90:	b	462be0 <dhcp_lease_load+0x14d8>
  462b94:	ldur	x0, [x29, #-40]
  462b98:	ldr	w8, [sp, #1344]
  462b9c:	add	w8, w8, #0xe0
  462ba0:	ldr	x2, [sp, #1064]
  462ba4:	ldr	x9, [sp, #1056]
  462ba8:	mov	w1, w8
  462bac:	mov	w3, w9
  462bb0:	bl	460520 <dhcp_lease_insert_private_option>
  462bb4:	str	w0, [sp, #1348]
  462bb8:	ldr	w8, [sp, #1348]
  462bbc:	cmp	w8, #0x0
  462bc0:	cset	w8, ge  // ge = tcont
  462bc4:	tbnz	w8, #0, 462bdc <dhcp_lease_load+0x14d4>
  462bc8:	ldr	w8, [sp, #1348]
  462bcc:	stur	w8, [x29, #-12]
  462bd0:	mov	w8, #0x1                   	// #1
  462bd4:	str	w8, [sp, #1340]
  462bd8:	b	462be0 <dhcp_lease_load+0x14d8>
  462bdc:	str	wzr, [sp, #1340]
  462be0:	add	x0, sp, #0x428
  462be4:	bl	4604c8 <freep>
  462be8:	ldr	w8, [sp, #1340]
  462bec:	str	w8, [sp, #800]
  462bf0:	cbz	w8, 462c08 <dhcp_lease_load+0x1500>
  462bf4:	b	462bf8 <dhcp_lease_load+0x14f0>
  462bf8:	ldr	w8, [sp, #800]
  462bfc:	cmp	w8, #0x8
  462c00:	b.eq	462c08 <dhcp_lease_load+0x1500>  // b.none
  462c04:	b	462c48 <dhcp_lease_load+0x1540>
  462c08:	ldr	w8, [sp, #1344]
  462c0c:	add	w8, w8, #0x1
  462c10:	str	w8, [sp, #1344]
  462c14:	b	462a80 <dhcp_lease_load+0x1378>
  462c18:	ldur	x8, [x29, #-40]
  462c1c:	str	x8, [sp, #1032]
  462c20:	mov	x8, xzr
  462c24:	stur	x8, [x29, #-40]
  462c28:	ldr	x8, [sp, #1032]
  462c2c:	str	x8, [sp, #1024]
  462c30:	ldr	x8, [sp, #1024]
  462c34:	ldur	x9, [x29, #-24]
  462c38:	str	x8, [x9]
  462c3c:	stur	wzr, [x29, #-12]
  462c40:	mov	w10, #0x1                   	// #1
  462c44:	str	w10, [sp, #1340]
  462c48:	add	x0, sp, #0x548
  462c4c:	bl	4604c8 <freep>
  462c50:	sub	x0, x29, #0xb0
  462c54:	bl	4604c8 <freep>
  462c58:	sub	x0, x29, #0xa8
  462c5c:	bl	4604c8 <freep>
  462c60:	sub	x0, x29, #0xa0
  462c64:	bl	4604c8 <freep>
  462c68:	sub	x0, x29, #0x98
  462c6c:	bl	4604c8 <freep>
  462c70:	sub	x0, x29, #0x90
  462c74:	bl	4604c8 <freep>
  462c78:	sub	x0, x29, #0x88
  462c7c:	bl	4604c8 <freep>
  462c80:	sub	x0, x29, #0x80
  462c84:	bl	4604c8 <freep>
  462c88:	sub	x0, x29, #0x78
  462c8c:	bl	4604c8 <freep>
  462c90:	sub	x0, x29, #0x70
  462c94:	bl	4604c8 <freep>
  462c98:	sub	x0, x29, #0x68
  462c9c:	bl	4604c8 <freep>
  462ca0:	sub	x0, x29, #0x60
  462ca4:	bl	4604c8 <freep>
  462ca8:	sub	x0, x29, #0x58
  462cac:	bl	4604c8 <freep>
  462cb0:	sub	x0, x29, #0x50
  462cb4:	bl	4604c8 <freep>
  462cb8:	sub	x0, x29, #0x48
  462cbc:	bl	4604c8 <freep>
  462cc0:	sub	x0, x29, #0x40
  462cc4:	bl	4604c8 <freep>
  462cc8:	sub	x0, x29, #0x38
  462ccc:	bl	4604c8 <freep>
  462cd0:	sub	x0, x29, #0x30
  462cd4:	bl	4604c8 <freep>
  462cd8:	sub	x0, x29, #0x28
  462cdc:	bl	462d04 <sd_dhcp_lease_unrefp>
  462ce0:	ldur	w0, [x29, #-12]
  462ce4:	add	sp, sp, #0x6f0
  462ce8:	ldp	x20, x19, [sp, #80]
  462cec:	ldp	x22, x21, [sp, #64]
  462cf0:	ldp	x24, x23, [sp, #48]
  462cf4:	ldp	x26, x25, [sp, #32]
  462cf8:	ldp	x28, x27, [sp, #16]
  462cfc:	ldp	x29, x30, [sp], #96
  462d00:	ret

0000000000462d04 <sd_dhcp_lease_unrefp>:
  462d04:	sub	sp, sp, #0x20
  462d08:	stp	x29, x30, [sp, #16]
  462d0c:	add	x29, sp, #0x10
  462d10:	str	x0, [sp, #8]
  462d14:	ldr	x8, [sp, #8]
  462d18:	ldr	x8, [x8]
  462d1c:	cbz	x8, 462d2c <sd_dhcp_lease_unrefp+0x28>
  462d20:	ldr	x8, [sp, #8]
  462d24:	ldr	x0, [x8]
  462d28:	bl	45dae4 <sd_dhcp_lease_unref>
  462d2c:	ldp	x29, x30, [sp, #16]
  462d30:	add	sp, sp, #0x20
  462d34:	ret

0000000000462d38 <safe_atou16>:
  462d38:	sub	sp, sp, #0x20
  462d3c:	stp	x29, x30, [sp, #16]
  462d40:	add	x29, sp, #0x10
  462d44:	mov	w8, wzr
  462d48:	str	x0, [sp, #8]
  462d4c:	str	x1, [sp]
  462d50:	ldr	x0, [sp, #8]
  462d54:	ldr	x2, [sp]
  462d58:	mov	w1, w8
  462d5c:	bl	40b640 <safe_atou16_full@plt>
  462d60:	ldp	x29, x30, [sp, #16]
  462d64:	add	sp, sp, #0x20
  462d68:	ret

0000000000462d6c <strv_split>:
  462d6c:	sub	sp, sp, #0x20
  462d70:	stp	x29, x30, [sp, #16]
  462d74:	add	x29, sp, #0x10
  462d78:	mov	w8, wzr
  462d7c:	str	x0, [sp, #8]
  462d80:	str	x1, [sp]
  462d84:	ldr	x0, [sp, #8]
  462d88:	ldr	x1, [sp]
  462d8c:	mov	w2, w8
  462d90:	bl	40af30 <strv_split_full@plt>
  462d94:	ldp	x29, x30, [sp, #16]
  462d98:	add	sp, sp, #0x20
  462d9c:	ret

0000000000462da0 <strv_isempty>:
  462da0:	sub	sp, sp, #0x10
  462da4:	str	x0, [sp, #8]
  462da8:	ldr	x8, [sp, #8]
  462dac:	mov	w9, #0x1                   	// #1
  462db0:	str	w9, [sp, #4]
  462db4:	cbz	x8, 462dd0 <strv_isempty+0x30>
  462db8:	ldr	x8, [sp, #8]
  462dbc:	ldr	x8, [x8]
  462dc0:	cmp	x8, #0x0
  462dc4:	cset	w9, ne  // ne = any
  462dc8:	eor	w9, w9, #0x1
  462dcc:	str	w9, [sp, #4]
  462dd0:	ldr	w8, [sp, #4]
  462dd4:	and	w0, w8, #0x1
  462dd8:	add	sp, sp, #0x10
  462ddc:	ret

0000000000462de0 <safe_atou32>:
  462de0:	sub	sp, sp, #0x20
  462de4:	stp	x29, x30, [sp, #16]
  462de8:	add	x29, sp, #0x10
  462dec:	str	x0, [sp, #8]
  462df0:	str	x1, [sp]
  462df4:	ldr	x0, [sp, #8]
  462df8:	ldr	x1, [sp]
  462dfc:	bl	463748 <safe_atou>
  462e00:	ldp	x29, x30, [sp, #16]
  462e04:	add	sp, sp, #0x20
  462e08:	ret

0000000000462e0c <unhexmem>:
  462e0c:	sub	sp, sp, #0x30
  462e10:	stp	x29, x30, [sp, #32]
  462e14:	add	x29, sp, #0x20
  462e18:	stur	x0, [x29, #-8]
  462e1c:	str	x1, [sp, #16]
  462e20:	str	x2, [sp, #8]
  462e24:	str	x3, [sp]
  462e28:	ldur	x0, [x29, #-8]
  462e2c:	ldr	x1, [sp, #16]
  462e30:	ldr	x3, [sp, #8]
  462e34:	ldr	x4, [sp]
  462e38:	mov	w8, wzr
  462e3c:	and	w2, w8, #0x1
  462e40:	bl	40c0b0 <unhexmem_full@plt>
  462e44:	ldp	x29, x30, [sp, #32]
  462e48:	add	sp, sp, #0x30
  462e4c:	ret

0000000000462e50 <dhcp_lease_set_default_subnet_mask>:
  462e50:	sub	sp, sp, #0x40
  462e54:	stp	x29, x30, [sp, #48]
  462e58:	add	x29, sp, #0x30
  462e5c:	adrp	x8, 470000 <on_inotify.__assert_in_set+0xc540>
  462e60:	add	x8, x8, #0x782
  462e64:	add	x2, x8, #0x3
  462e68:	stur	x0, [x29, #-16]
  462e6c:	str	x2, [sp, #8]
  462e70:	ldur	x8, [x29, #-16]
  462e74:	cmp	x8, #0x0
  462e78:	cset	w9, ne  // ne = any
  462e7c:	mov	w10, #0x1                   	// #1
  462e80:	eor	w9, w9, #0x1
  462e84:	eor	w9, w9, w10
  462e88:	eor	w9, w9, w10
  462e8c:	and	w9, w9, #0x1
  462e90:	mov	w0, w9
  462e94:	sxtw	x8, w0
  462e98:	cbz	x8, 462ec0 <dhcp_lease_set_default_subnet_mask+0x70>
  462e9c:	mov	w8, wzr
  462ea0:	mov	w0, w8
  462ea4:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  462ea8:	add	x1, x1, #0x77c
  462eac:	ldr	x2, [sp, #8]
  462eb0:	mov	w3, #0x4f2                 	// #1266
  462eb4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  462eb8:	add	x4, x4, #0x919
  462ebc:	bl	40a540 <log_assert_failed_realm@plt>
  462ec0:	ldur	x8, [x29, #-16]
  462ec4:	ldr	w9, [x8, #16]
  462ec8:	cbnz	w9, 462ed8 <dhcp_lease_set_default_subnet_mask+0x88>
  462ecc:	mov	w8, #0xffffffc3            	// #-61
  462ed0:	stur	w8, [x29, #-4]
  462ed4:	b	462f2c <dhcp_lease_set_default_subnet_mask+0xdc>
  462ed8:	ldur	x8, [x29, #-16]
  462edc:	ldr	w9, [x8, #16]
  462ee0:	sub	x0, x29, #0x14
  462ee4:	stur	w9, [x29, #-20]
  462ee8:	add	x1, sp, #0x18
  462eec:	bl	40c0c0 <in4_addr_default_subnet_mask@plt>
  462ef0:	str	w0, [sp, #20]
  462ef4:	ldr	w9, [sp, #20]
  462ef8:	cmp	w9, #0x0
  462efc:	cset	w9, ge  // ge = tcont
  462f00:	tbnz	w9, #0, 462f10 <dhcp_lease_set_default_subnet_mask+0xc0>
  462f04:	ldr	w8, [sp, #20]
  462f08:	stur	w8, [x29, #-4]
  462f0c:	b	462f2c <dhcp_lease_set_default_subnet_mask+0xdc>
  462f10:	ldr	w8, [sp, #24]
  462f14:	ldur	x9, [x29, #-16]
  462f18:	str	w8, [x9, #32]
  462f1c:	ldur	x9, [x29, #-16]
  462f20:	mov	w8, #0x1                   	// #1
  462f24:	strb	w8, [x9, #28]
  462f28:	stur	wzr, [x29, #-4]
  462f2c:	ldur	w0, [x29, #-4]
  462f30:	ldp	x29, x30, [sp, #48]
  462f34:	add	sp, sp, #0x40
  462f38:	ret

0000000000462f3c <dhcp_lease_set_client_id>:
  462f3c:	sub	sp, sp, #0x50
  462f40:	stp	x29, x30, [sp, #64]
  462f44:	add	x29, sp, #0x40
  462f48:	mov	w8, #0x1                   	// #1
  462f4c:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  462f50:	add	x9, x9, #0x782
  462f54:	add	x9, x9, #0x3
  462f58:	mov	w10, #0x0                   	// #0
  462f5c:	stur	x0, [x29, #-16]
  462f60:	stur	x1, [x29, #-24]
  462f64:	str	x2, [sp, #32]
  462f68:	str	w8, [sp, #20]
  462f6c:	str	x9, [sp, #8]
  462f70:	str	w10, [sp, #4]
  462f74:	ldur	x8, [x29, #-16]
  462f78:	cmp	x8, #0x0
  462f7c:	cset	w9, ne  // ne = any
  462f80:	mov	w10, #0x1                   	// #1
  462f84:	eor	w9, w9, #0x1
  462f88:	eor	w9, w9, w10
  462f8c:	and	w9, w9, #0x1
  462f90:	mov	w0, w9
  462f94:	sxtw	x8, w0
  462f98:	cbz	x8, 462fa8 <dhcp_lease_set_client_id+0x6c>
  462f9c:	ldr	w8, [sp, #20]
  462fa0:	tbnz	w8, #0, 462fe0 <dhcp_lease_set_client_id+0xa4>
  462fa4:	b	462fd4 <dhcp_lease_set_client_id+0x98>
  462fa8:	mov	w8, wzr
  462fac:	mov	w0, w8
  462fb0:	adrp	x1, 470000 <on_inotify.__assert_in_set+0xc540>
  462fb4:	add	x1, x1, #0x77c
  462fb8:	ldr	x2, [sp, #8]
  462fbc:	mov	w3, #0x513                 	// #1299
  462fc0:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  462fc4:	add	x4, x4, #0x9b3
  462fc8:	bl	40ad60 <log_assert_failed_return_realm@plt>
  462fcc:	ldr	w8, [sp, #4]
  462fd0:	tbnz	w8, #0, 462fe0 <dhcp_lease_set_client_id+0xa4>
  462fd4:	mov	w8, #0xffffffea            	// #-22
  462fd8:	stur	w8, [x29, #-4]
  462fdc:	b	4630d8 <dhcp_lease_set_client_id+0x19c>
  462fe0:	ldur	x8, [x29, #-24]
  462fe4:	mov	w9, #0x1                   	// #1
  462fe8:	str	w9, [sp]
  462fec:	cbnz	x8, 463000 <dhcp_lease_set_client_id+0xc4>
  462ff0:	ldr	x8, [sp, #32]
  462ff4:	cmp	x8, #0x0
  462ff8:	cset	w9, ls  // ls = plast
  462ffc:	str	w9, [sp]
  463000:	ldr	w8, [sp]
  463004:	mov	w9, #0x1                   	// #1
  463008:	eor	w8, w8, #0x1
  46300c:	eor	w8, w8, w9
  463010:	and	w8, w8, #0x1
  463014:	mov	w0, w8
  463018:	sxtw	x10, w0
  46301c:	cbz	x10, 46302c <dhcp_lease_set_client_id+0xf0>
  463020:	ldr	w8, [sp, #20]
  463024:	tbnz	w8, #0, 463064 <dhcp_lease_set_client_id+0x128>
  463028:	b	463058 <dhcp_lease_set_client_id+0x11c>
  46302c:	mov	w8, wzr
  463030:	mov	w0, w8
  463034:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  463038:	add	x1, x1, #0x9f7
  46303c:	ldr	x2, [sp, #8]
  463040:	mov	w3, #0x514                 	// #1300
  463044:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  463048:	add	x4, x4, #0x9b3
  46304c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  463050:	ldr	w8, [sp, #4]
  463054:	tbnz	w8, #0, 463064 <dhcp_lease_set_client_id+0x128>
  463058:	mov	w8, #0xffffffea            	// #-22
  46305c:	stur	w8, [x29, #-4]
  463060:	b	4630d8 <dhcp_lease_set_client_id+0x19c>
  463064:	ldr	x8, [sp, #32]
  463068:	cmp	x8, #0x0
  46306c:	cset	w9, hi  // hi = pmore
  463070:	tbnz	w9, #0, 46308c <dhcp_lease_set_client_id+0x150>
  463074:	ldur	x8, [x29, #-16]
  463078:	ldr	x0, [x8, #176]
  46307c:	bl	4604f0 <mfree>
  463080:	ldur	x8, [x29, #-16]
  463084:	str	x0, [x8, #176]
  463088:	b	4630d4 <dhcp_lease_set_client_id+0x198>
  46308c:	ldur	x0, [x29, #-24]
  463090:	ldr	x1, [sp, #32]
  463094:	bl	40bfe0 <memdup@plt>
  463098:	str	x0, [sp, #24]
  46309c:	ldr	x8, [sp, #24]
  4630a0:	cbnz	x8, 4630b0 <dhcp_lease_set_client_id+0x174>
  4630a4:	mov	w8, #0xfffffff4            	// #-12
  4630a8:	stur	w8, [x29, #-4]
  4630ac:	b	4630d8 <dhcp_lease_set_client_id+0x19c>
  4630b0:	ldur	x8, [x29, #-16]
  4630b4:	ldr	x0, [x8, #176]
  4630b8:	bl	40a530 <free@plt>
  4630bc:	ldr	x8, [sp, #24]
  4630c0:	ldur	x9, [x29, #-16]
  4630c4:	str	x8, [x9, #176]
  4630c8:	ldr	x8, [sp, #32]
  4630cc:	ldur	x9, [x29, #-16]
  4630d0:	str	x8, [x9, #184]
  4630d4:	stur	wzr, [x29, #-4]
  4630d8:	ldur	w0, [x29, #-4]
  4630dc:	ldp	x29, x30, [sp, #64]
  4630e0:	add	sp, sp, #0x50
  4630e4:	ret

00000000004630e8 <sd_dhcp_route_get_destination>:
  4630e8:	sub	sp, sp, #0x40
  4630ec:	stp	x29, x30, [sp, #48]
  4630f0:	add	x29, sp, #0x30
  4630f4:	mov	w8, #0x1                   	// #1
  4630f8:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  4630fc:	add	x9, x9, #0x782
  463100:	add	x9, x9, #0x3
  463104:	mov	w10, #0x0                   	// #0
  463108:	stur	x0, [x29, #-16]
  46310c:	str	x1, [sp, #24]
  463110:	str	w8, [sp, #20]
  463114:	str	x9, [sp, #8]
  463118:	str	w10, [sp, #4]
  46311c:	ldur	x8, [x29, #-16]
  463120:	cmp	x8, #0x0
  463124:	cset	w9, ne  // ne = any
  463128:	mov	w10, #0x1                   	// #1
  46312c:	eor	w9, w9, #0x1
  463130:	eor	w9, w9, w10
  463134:	and	w9, w9, #0x1
  463138:	mov	w0, w9
  46313c:	sxtw	x8, w0
  463140:	cbz	x8, 463150 <sd_dhcp_route_get_destination+0x68>
  463144:	ldr	w8, [sp, #20]
  463148:	tbnz	w8, #0, 463188 <sd_dhcp_route_get_destination+0xa0>
  46314c:	b	46317c <sd_dhcp_route_get_destination+0x94>
  463150:	mov	w8, wzr
  463154:	mov	w0, w8
  463158:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  46315c:	add	x1, x1, #0xa59
  463160:	ldr	x2, [sp, #8]
  463164:	mov	w3, #0x533                 	// #1331
  463168:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  46316c:	add	x4, x4, #0xa5f
  463170:	bl	40ad60 <log_assert_failed_return_realm@plt>
  463174:	ldr	w8, [sp, #4]
  463178:	tbnz	w8, #0, 463188 <sd_dhcp_route_get_destination+0xa0>
  46317c:	mov	w8, #0xffffffea            	// #-22
  463180:	stur	w8, [x29, #-4]
  463184:	b	463208 <sd_dhcp_route_get_destination+0x120>
  463188:	ldr	x8, [sp, #24]
  46318c:	cmp	x8, #0x0
  463190:	cset	w9, ne  // ne = any
  463194:	mov	w10, #0x1                   	// #1
  463198:	eor	w9, w9, #0x1
  46319c:	eor	w9, w9, w10
  4631a0:	and	w9, w9, #0x1
  4631a4:	mov	w0, w9
  4631a8:	sxtw	x8, w0
  4631ac:	cbz	x8, 4631bc <sd_dhcp_route_get_destination+0xd4>
  4631b0:	ldr	w8, [sp, #20]
  4631b4:	tbnz	w8, #0, 4631f4 <sd_dhcp_route_get_destination+0x10c>
  4631b8:	b	4631e8 <sd_dhcp_route_get_destination+0x100>
  4631bc:	mov	w8, wzr
  4631c0:	mov	w0, w8
  4631c4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4631c8:	add	x1, x1, #0xaa4
  4631cc:	ldr	x2, [sp, #8]
  4631d0:	mov	w3, #0x534                 	// #1332
  4631d4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  4631d8:	add	x4, x4, #0xa5f
  4631dc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4631e0:	ldr	w8, [sp, #4]
  4631e4:	tbnz	w8, #0, 4631f4 <sd_dhcp_route_get_destination+0x10c>
  4631e8:	mov	w8, #0xffffffea            	// #-22
  4631ec:	stur	w8, [x29, #-4]
  4631f0:	b	463208 <sd_dhcp_route_get_destination+0x120>
  4631f4:	ldr	x8, [sp, #24]
  4631f8:	ldur	x9, [x29, #-16]
  4631fc:	ldr	w10, [x9]
  463200:	str	w10, [x8]
  463204:	stur	wzr, [x29, #-4]
  463208:	ldur	w0, [x29, #-4]
  46320c:	ldp	x29, x30, [sp, #48]
  463210:	add	sp, sp, #0x40
  463214:	ret

0000000000463218 <sd_dhcp_route_get_destination_prefix_length>:
  463218:	sub	sp, sp, #0x40
  46321c:	stp	x29, x30, [sp, #48]
  463220:	add	x29, sp, #0x30
  463224:	mov	w8, #0x1                   	// #1
  463228:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  46322c:	add	x9, x9, #0x782
  463230:	add	x9, x9, #0x3
  463234:	mov	w10, #0x0                   	// #0
  463238:	stur	x0, [x29, #-16]
  46323c:	str	x1, [sp, #24]
  463240:	str	w8, [sp, #20]
  463244:	str	x9, [sp, #8]
  463248:	str	w10, [sp, #4]
  46324c:	ldur	x8, [x29, #-16]
  463250:	cmp	x8, #0x0
  463254:	cset	w9, ne  // ne = any
  463258:	mov	w10, #0x1                   	// #1
  46325c:	eor	w9, w9, #0x1
  463260:	eor	w9, w9, w10
  463264:	and	w9, w9, #0x1
  463268:	mov	w0, w9
  46326c:	sxtw	x8, w0
  463270:	cbz	x8, 463280 <sd_dhcp_route_get_destination_prefix_length+0x68>
  463274:	ldr	w8, [sp, #20]
  463278:	tbnz	w8, #0, 4632b8 <sd_dhcp_route_get_destination_prefix_length+0xa0>
  46327c:	b	4632ac <sd_dhcp_route_get_destination_prefix_length+0x94>
  463280:	mov	w8, wzr
  463284:	mov	w0, w8
  463288:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  46328c:	add	x1, x1, #0xa59
  463290:	ldr	x2, [sp, #8]
  463294:	mov	w3, #0x53b                 	// #1339
  463298:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  46329c:	add	x4, x4, #0xab0
  4632a0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4632a4:	ldr	w8, [sp, #4]
  4632a8:	tbnz	w8, #0, 4632b8 <sd_dhcp_route_get_destination_prefix_length+0xa0>
  4632ac:	mov	w8, #0xffffffea            	// #-22
  4632b0:	stur	w8, [x29, #-4]
  4632b4:	b	463338 <sd_dhcp_route_get_destination_prefix_length+0x120>
  4632b8:	ldr	x8, [sp, #24]
  4632bc:	cmp	x8, #0x0
  4632c0:	cset	w9, ne  // ne = any
  4632c4:	mov	w10, #0x1                   	// #1
  4632c8:	eor	w9, w9, #0x1
  4632cc:	eor	w9, w9, w10
  4632d0:	and	w9, w9, #0x1
  4632d4:	mov	w0, w9
  4632d8:	sxtw	x8, w0
  4632dc:	cbz	x8, 4632ec <sd_dhcp_route_get_destination_prefix_length+0xd4>
  4632e0:	ldr	w8, [sp, #20]
  4632e4:	tbnz	w8, #0, 463324 <sd_dhcp_route_get_destination_prefix_length+0x10c>
  4632e8:	b	463318 <sd_dhcp_route_get_destination_prefix_length+0x100>
  4632ec:	mov	w8, wzr
  4632f0:	mov	w0, w8
  4632f4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4632f8:	add	x1, x1, #0xafc
  4632fc:	ldr	x2, [sp, #8]
  463300:	mov	w3, #0x53c                 	// #1340
  463304:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  463308:	add	x4, x4, #0xab0
  46330c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  463310:	ldr	w8, [sp, #4]
  463314:	tbnz	w8, #0, 463324 <sd_dhcp_route_get_destination_prefix_length+0x10c>
  463318:	mov	w8, #0xffffffea            	// #-22
  46331c:	stur	w8, [x29, #-4]
  463320:	b	463338 <sd_dhcp_route_get_destination_prefix_length+0x120>
  463324:	ldur	x8, [x29, #-16]
  463328:	ldrb	w9, [x8, #8]
  46332c:	ldr	x8, [sp, #24]
  463330:	strb	w9, [x8]
  463334:	stur	wzr, [x29, #-4]
  463338:	ldur	w0, [x29, #-4]
  46333c:	ldp	x29, x30, [sp, #48]
  463340:	add	sp, sp, #0x40
  463344:	ret

0000000000463348 <sd_dhcp_route_get_gateway>:
  463348:	sub	sp, sp, #0x40
  46334c:	stp	x29, x30, [sp, #48]
  463350:	add	x29, sp, #0x30
  463354:	mov	w8, #0x1                   	// #1
  463358:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  46335c:	add	x9, x9, #0x782
  463360:	add	x9, x9, #0x3
  463364:	mov	w10, #0x0                   	// #0
  463368:	stur	x0, [x29, #-16]
  46336c:	str	x1, [sp, #24]
  463370:	str	w8, [sp, #20]
  463374:	str	x9, [sp, #8]
  463378:	str	w10, [sp, #4]
  46337c:	ldur	x8, [x29, #-16]
  463380:	cmp	x8, #0x0
  463384:	cset	w9, ne  // ne = any
  463388:	mov	w10, #0x1                   	// #1
  46338c:	eor	w9, w9, #0x1
  463390:	eor	w9, w9, w10
  463394:	and	w9, w9, #0x1
  463398:	mov	w0, w9
  46339c:	sxtw	x8, w0
  4633a0:	cbz	x8, 4633b0 <sd_dhcp_route_get_gateway+0x68>
  4633a4:	ldr	w8, [sp, #20]
  4633a8:	tbnz	w8, #0, 4633e8 <sd_dhcp_route_get_gateway+0xa0>
  4633ac:	b	4633dc <sd_dhcp_route_get_gateway+0x94>
  4633b0:	mov	w8, wzr
  4633b4:	mov	w0, w8
  4633b8:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4633bc:	add	x1, x1, #0xa59
  4633c0:	ldr	x2, [sp, #8]
  4633c4:	mov	w3, #0x543                 	// #1347
  4633c8:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  4633cc:	add	x4, x4, #0xb03
  4633d0:	bl	40ad60 <log_assert_failed_return_realm@plt>
  4633d4:	ldr	w8, [sp, #4]
  4633d8:	tbnz	w8, #0, 4633e8 <sd_dhcp_route_get_gateway+0xa0>
  4633dc:	mov	w8, #0xffffffea            	// #-22
  4633e0:	stur	w8, [x29, #-4]
  4633e4:	b	463468 <sd_dhcp_route_get_gateway+0x120>
  4633e8:	ldr	x8, [sp, #24]
  4633ec:	cmp	x8, #0x0
  4633f0:	cset	w9, ne  // ne = any
  4633f4:	mov	w10, #0x1                   	// #1
  4633f8:	eor	w9, w9, #0x1
  4633fc:	eor	w9, w9, w10
  463400:	and	w9, w9, #0x1
  463404:	mov	w0, w9
  463408:	sxtw	x8, w0
  46340c:	cbz	x8, 46341c <sd_dhcp_route_get_gateway+0xd4>
  463410:	ldr	w8, [sp, #20]
  463414:	tbnz	w8, #0, 463454 <sd_dhcp_route_get_gateway+0x10c>
  463418:	b	463448 <sd_dhcp_route_get_gateway+0x100>
  46341c:	mov	w8, wzr
  463420:	mov	w0, w8
  463424:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  463428:	add	x1, x1, #0xb44
  46342c:	ldr	x2, [sp, #8]
  463430:	mov	w3, #0x544                 	// #1348
  463434:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  463438:	add	x4, x4, #0xb03
  46343c:	bl	40ad60 <log_assert_failed_return_realm@plt>
  463440:	ldr	w8, [sp, #4]
  463444:	tbnz	w8, #0, 463454 <sd_dhcp_route_get_gateway+0x10c>
  463448:	mov	w8, #0xffffffea            	// #-22
  46344c:	stur	w8, [x29, #-4]
  463450:	b	463468 <sd_dhcp_route_get_gateway+0x120>
  463454:	ldr	x8, [sp, #24]
  463458:	ldur	x9, [x29, #-16]
  46345c:	ldr	w10, [x9, #4]
  463460:	str	w10, [x8]
  463464:	stur	wzr, [x29, #-4]
  463468:	ldur	w0, [x29, #-4]
  46346c:	ldp	x29, x30, [sp, #48]
  463470:	add	sp, sp, #0x40
  463474:	ret

0000000000463478 <sd_dhcp_route_get_option>:
  463478:	sub	sp, sp, #0x40
  46347c:	stp	x29, x30, [sp, #48]
  463480:	add	x29, sp, #0x30
  463484:	mov	w8, #0x1                   	// #1
  463488:	adrp	x9, 470000 <on_inotify.__assert_in_set+0xc540>
  46348c:	add	x9, x9, #0x782
  463490:	add	x2, x9, #0x3
  463494:	mov	w10, #0x0                   	// #0
  463498:	stur	x0, [x29, #-16]
  46349c:	stur	w8, [x29, #-20]
  4634a0:	str	x2, [sp, #16]
  4634a4:	str	w10, [sp, #12]
  4634a8:	ldur	x8, [x29, #-16]
  4634ac:	cmp	x8, #0x0
  4634b0:	cset	w9, ne  // ne = any
  4634b4:	mov	w10, #0x1                   	// #1
  4634b8:	eor	w9, w9, #0x1
  4634bc:	eor	w9, w9, w10
  4634c0:	and	w9, w9, #0x1
  4634c4:	mov	w0, w9
  4634c8:	sxtw	x8, w0
  4634cc:	cbz	x8, 4634dc <sd_dhcp_route_get_option+0x64>
  4634d0:	ldur	w8, [x29, #-20]
  4634d4:	tbnz	w8, #0, 463514 <sd_dhcp_route_get_option+0x9c>
  4634d8:	b	463508 <sd_dhcp_route_get_option+0x90>
  4634dc:	mov	w8, wzr
  4634e0:	mov	w0, w8
  4634e4:	adrp	x1, 471000 <on_inotify.__assert_in_set+0xd540>
  4634e8:	add	x1, x1, #0xa59
  4634ec:	ldr	x2, [sp, #16]
  4634f0:	mov	w3, #0x54b                 	// #1355
  4634f4:	adrp	x4, 471000 <on_inotify.__assert_in_set+0xd540>
  4634f8:	add	x4, x4, #0xb4c
  4634fc:	bl	40ad60 <log_assert_failed_return_realm@plt>
  463500:	ldr	w8, [sp, #12]
  463504:	tbnz	w8, #0, 463514 <sd_dhcp_route_get_option+0x9c>
  463508:	mov	w8, #0xffffffea            	// #-22
  46350c:	stur	w8, [x29, #-4]
  463510:	b	463520 <sd_dhcp_route_get_option+0xa8>
  463514:	ldur	x8, [x29, #-16]
  463518:	ldrb	w9, [x8, #9]
  46351c:	stur	w9, [x29, #-4]
  463520:	ldur	w0, [x29, #-4]
  463524:	ldp	x29, x30, [sp, #48]
  463528:	add	sp, sp, #0x40
  46352c:	ret

0000000000463530 <size_multiply_overflow>:
  463530:	sub	sp, sp, #0x20
  463534:	str	x0, [sp, #24]
  463538:	str	x1, [sp, #16]
  46353c:	ldr	x8, [sp, #16]
  463540:	mov	w9, #0x0                   	// #0
  463544:	str	w9, [sp, #12]
  463548:	cbz	x8, 463568 <size_multiply_overflow+0x38>
  46354c:	ldr	x8, [sp, #24]
  463550:	ldr	x9, [sp, #16]
  463554:	mov	x10, #0xffffffffffffffff    	// #-1
  463558:	udiv	x9, x10, x9
  46355c:	cmp	x8, x9
  463560:	cset	w11, hi  // hi = pmore
  463564:	str	w11, [sp, #12]
  463568:	ldr	w8, [sp, #12]
  46356c:	mov	w9, #0x1                   	// #1
  463570:	eor	w8, w8, #0x1
  463574:	eor	w8, w8, w9
  463578:	and	w8, w8, #0x1
  46357c:	mov	w0, w8
  463580:	sxtw	x10, w0
  463584:	cmp	x10, #0x0
  463588:	cset	w8, ne  // ne = any
  46358c:	and	w0, w8, #0x1
  463590:	add	sp, sp, #0x20
  463594:	ret

0000000000463598 <unaligned_read_be32>:
  463598:	sub	sp, sp, #0x20
  46359c:	stp	x29, x30, [sp, #16]
  4635a0:	add	x29, sp, #0x10
  4635a4:	str	x0, [sp, #8]
  4635a8:	ldr	x8, [sp, #8]
  4635ac:	str	x8, [sp]
  4635b0:	ldr	x8, [sp]
  4635b4:	ldr	w0, [x8]
  4635b8:	bl	4635c8 <be32toh>
  4635bc:	ldp	x29, x30, [sp, #16]
  4635c0:	add	sp, sp, #0x20
  4635c4:	ret

00000000004635c8 <be32toh>:
  4635c8:	sub	sp, sp, #0x20
  4635cc:	stp	x29, x30, [sp, #16]
  4635d0:	add	x29, sp, #0x10
  4635d4:	stur	w0, [x29, #-4]
  4635d8:	ldur	w0, [x29, #-4]
  4635dc:	bl	4635ec <__bswap_32>
  4635e0:	ldp	x29, x30, [sp, #16]
  4635e4:	add	sp, sp, #0x20
  4635e8:	ret

00000000004635ec <__bswap_32>:
  4635ec:	sub	sp, sp, #0x10
  4635f0:	str	w0, [sp, #12]
  4635f4:	ldr	w8, [sp, #12]
  4635f8:	and	w8, w8, #0xff000000
  4635fc:	ldr	w9, [sp, #12]
  463600:	and	w9, w9, #0xff0000
  463604:	lsr	w9, w9, #8
  463608:	orr	w8, w9, w8, lsr #24
  46360c:	ldr	w9, [sp, #12]
  463610:	and	w9, w9, #0xff00
  463614:	orr	w8, w8, w9, lsl #8
  463618:	ldr	w9, [sp, #12]
  46361c:	and	w9, w9, #0xff
  463620:	orr	w0, w8, w9, lsl #24
  463624:	add	sp, sp, #0x10
  463628:	ret

000000000046362c <memdup_multiply>:
  46362c:	sub	sp, sp, #0x30
  463630:	stp	x29, x30, [sp, #32]
  463634:	add	x29, sp, #0x20
  463638:	str	x0, [sp, #16]
  46363c:	str	x1, [sp, #8]
  463640:	str	x2, [sp]
  463644:	ldr	x0, [sp, #8]
  463648:	ldr	x1, [sp]
  46364c:	bl	463530 <size_multiply_overflow>
  463650:	tbnz	w0, #0, 463658 <memdup_multiply+0x2c>
  463654:	b	463664 <memdup_multiply+0x38>
  463658:	mov	x8, xzr
  46365c:	stur	x8, [x29, #-8]
  463660:	b	46367c <memdup_multiply+0x50>
  463664:	ldr	x0, [sp, #16]
  463668:	ldr	x8, [sp, #8]
  46366c:	ldr	x9, [sp]
  463670:	mul	x1, x8, x9
  463674:	bl	40bfe0 <memdup@plt>
  463678:	stur	x0, [x29, #-8]
  46367c:	ldur	x0, [x29, #-8]
  463680:	ldp	x29, x30, [sp, #32]
  463684:	add	sp, sp, #0x30
  463688:	ret

000000000046368c <unaligned_read_be16>:
  46368c:	sub	sp, sp, #0x20
  463690:	stp	x29, x30, [sp, #16]
  463694:	add	x29, sp, #0x10
  463698:	str	x0, [sp, #8]
  46369c:	ldr	x8, [sp, #8]
  4636a0:	str	x8, [sp]
  4636a4:	ldr	x8, [sp]
  4636a8:	ldrh	w0, [x8]
  4636ac:	bl	4636bc <be16toh>
  4636b0:	ldp	x29, x30, [sp, #16]
  4636b4:	add	sp, sp, #0x20
  4636b8:	ret

00000000004636bc <be16toh>:
  4636bc:	sub	sp, sp, #0x20
  4636c0:	stp	x29, x30, [sp, #16]
  4636c4:	add	x29, sp, #0x10
  4636c8:	sturh	w0, [x29, #-2]
  4636cc:	ldurh	w0, [x29, #-2]
  4636d0:	bl	4636e0 <__bswap_16>
  4636d4:	ldp	x29, x30, [sp, #16]
  4636d8:	add	sp, sp, #0x20
  4636dc:	ret

00000000004636e0 <__bswap_16>:
  4636e0:	sub	sp, sp, #0x10
  4636e4:	strh	w0, [sp, #14]
  4636e8:	ldrh	w8, [sp, #14]
  4636ec:	asr	w8, w8, #8
  4636f0:	and	w8, w8, #0xff
  4636f4:	ldrh	w9, [sp, #14]
  4636f8:	and	w9, w9, #0xff
  4636fc:	orr	w8, w8, w9, lsl #8
  463700:	mov	w0, w8
  463704:	add	sp, sp, #0x10
  463708:	ret

000000000046370c <dns_name_normalize>:
  46370c:	sub	sp, sp, #0x30
  463710:	stp	x29, x30, [sp, #32]
  463714:	add	x29, sp, #0x20
  463718:	mov	x8, xzr
  46371c:	stur	x0, [x29, #-8]
  463720:	stur	w1, [x29, #-12]
  463724:	str	x2, [sp, #8]
  463728:	ldur	x0, [x29, #-8]
  46372c:	ldur	w2, [x29, #-12]
  463730:	ldr	x3, [sp, #8]
  463734:	mov	x1, x8
  463738:	bl	40c0d0 <dns_name_concat@plt>
  46373c:	ldp	x29, x30, [sp, #32]
  463740:	add	sp, sp, #0x30
  463744:	ret

0000000000463748 <safe_atou>:
  463748:	sub	sp, sp, #0x20
  46374c:	stp	x29, x30, [sp, #16]
  463750:	add	x29, sp, #0x10
  463754:	mov	w8, wzr
  463758:	str	x0, [sp, #8]
  46375c:	str	x1, [sp]
  463760:	ldr	x0, [sp, #8]
  463764:	ldr	x2, [sp]
  463768:	mov	w1, w8
  46376c:	bl	40a7e0 <safe_atou_full@plt>
  463770:	ldp	x29, x30, [sp, #16]
  463774:	add	sp, sp, #0x20
  463778:	ret
  46377c:	udf	#0

0000000000463780 <__libc_csu_init>:
  463780:	stp	x29, x30, [sp, #-64]!
  463784:	mov	x29, sp
  463788:	stp	x19, x20, [sp, #16]
  46378c:	adrp	x20, 487000 <__FRAME_END__+0x14000>
  463790:	add	x20, x20, #0x278
  463794:	stp	x21, x22, [sp, #32]
  463798:	adrp	x21, 487000 <__FRAME_END__+0x14000>
  46379c:	add	x21, x21, #0x270
  4637a0:	sub	x20, x20, x21
  4637a4:	mov	w22, w0
  4637a8:	stp	x23, x24, [sp, #48]
  4637ac:	mov	x23, x1
  4637b0:	mov	x24, x2
  4637b4:	bl	40a2f8 <_init>
  4637b8:	cmp	xzr, x20, asr #3
  4637bc:	b.eq	4637e8 <__libc_csu_init+0x68>  // b.none
  4637c0:	asr	x20, x20, #3
  4637c4:	mov	x19, #0x0                   	// #0
  4637c8:	ldr	x3, [x21, x19, lsl #3]
  4637cc:	mov	x2, x24
  4637d0:	add	x19, x19, #0x1
  4637d4:	mov	x1, x23
  4637d8:	mov	w0, w22
  4637dc:	blr	x3
  4637e0:	cmp	x20, x19
  4637e4:	b.ne	4637c8 <__libc_csu_init+0x48>  // b.any
  4637e8:	ldp	x19, x20, [sp, #16]
  4637ec:	ldp	x21, x22, [sp, #32]
  4637f0:	ldp	x23, x24, [sp, #48]
  4637f4:	ldp	x29, x30, [sp], #64
  4637f8:	ret
  4637fc:	nop

0000000000463800 <__libc_csu_fini>:
  463800:	ret
  463804:	udf	#0

0000000000463808 <stat64>:
  463808:	mov	x2, x1
  46380c:	mov	x1, x0
  463810:	mov	w0, #0x0                   	// #0
  463814:	b	40c0e0 <__xstat64@plt>

0000000000463818 <fstat64>:
  463818:	mov	x2, x1
  46381c:	mov	w1, w0
  463820:	mov	w0, #0x0                   	// #0
  463824:	b	40c0f0 <__fxstat64@plt>

0000000000463828 <lstat64>:
  463828:	mov	x2, x1
  46382c:	mov	x1, x0
  463830:	mov	w0, #0x0                   	// #0
  463834:	b	40c100 <__lxstat64@plt>

Disassembly of section .fini:

0000000000463838 <_fini>:
  463838:	stp	x29, x30, [sp, #-16]!
  46383c:	mov	x29, sp
  463840:	ldp	x29, x30, [sp], #16
  463844:	ret
