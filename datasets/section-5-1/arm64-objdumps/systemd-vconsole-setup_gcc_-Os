
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-vconsole-setup_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400dc0 <_init>:
  400dc0:	stp	x29, x30, [sp, #-16]!
  400dc4:	mov	x29, sp
  400dc8:	bl	401e50 <call_weak_fn>
  400dcc:	ldp	x29, x30, [sp], #16
  400dd0:	ret

Disassembly of section .plt:

0000000000400de0 <.plt>:
  400de0:	stp	x16, x30, [sp, #-16]!
  400de4:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400de8:	ldr	x17, [x16, #3816]
  400dec:	add	x16, x16, #0xee8
  400df0:	br	x17
  400df4:	nop
  400df8:	nop
  400dfc:	nop

0000000000400e00 <__libc_start_main@plt>:
  400e00:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e04:	ldr	x17, [x16, #3824]
  400e08:	add	x16, x16, #0xef0
  400e0c:	br	x17

0000000000400e10 <__gmon_start__@plt>:
  400e10:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e14:	ldr	x17, [x16, #3832]
  400e18:	add	x16, x16, #0xef8
  400e1c:	br	x17

0000000000400e20 <write_string_file_ts@plt>:
  400e20:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e24:	ldr	x17, [x16, #3840]
  400e28:	add	x16, x16, #0xf00
  400e2c:	br	x17

0000000000400e30 <loop_write@plt>:
  400e30:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e34:	ldr	x17, [x16, #3848]
  400e38:	add	x16, x16, #0xf08
  400e3c:	br	x17

0000000000400e40 <snprintf@plt>:
  400e40:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e44:	ldr	x17, [x16, #3856]
  400e48:	add	x16, x16, #0xf10
  400e4c:	br	x17

0000000000400e50 <log_setup_service@plt>:
  400e50:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e54:	ldr	x17, [x16, #3864]
  400e58:	add	x16, x16, #0xf18
  400e5c:	br	x17

0000000000400e60 <safe_close@plt>:
  400e60:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e64:	ldr	x17, [x16, #3872]
  400e68:	add	x16, x16, #0xf20
  400e6c:	br	x17

0000000000400e70 <log_assert_failed_realm@plt>:
  400e70:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e74:	ldr	x17, [x16, #3880]
  400e78:	add	x16, x16, #0xf28
  400e7c:	br	x17

0000000000400e80 <_exit@plt>:
  400e80:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e84:	ldr	x17, [x16, #3888]
  400e88:	add	x16, x16, #0xf30
  400e8c:	br	x17

0000000000400e90 <umask@plt>:
  400e90:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400e94:	ldr	x17, [x16, #3896]
  400e98:	add	x16, x16, #0xf38
  400e9c:	br	x17

0000000000400ea0 <access@plt>:
  400ea0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ea4:	ldr	x17, [x16, #3904]
  400ea8:	add	x16, x16, #0xf40
  400eac:	br	x17

0000000000400eb0 <abort@plt>:
  400eb0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400eb4:	ldr	x17, [x16, #3912]
  400eb8:	add	x16, x16, #0xf48
  400ebc:	br	x17

0000000000400ec0 <proc_cmdline_get_key_many_internal@plt>:
  400ec0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ec4:	ldr	x17, [x16, #3920]
  400ec8:	add	x16, x16, #0xf50
  400ecc:	br	x17

0000000000400ed0 <__errno_location@plt>:
  400ed0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ed4:	ldr	x17, [x16, #3928]
  400ed8:	add	x16, x16, #0xf58
  400edc:	br	x17

0000000000400ee0 <wait_for_terminate_and_check@plt>:
  400ee0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ee4:	ldr	x17, [x16, #3936]
  400ee8:	add	x16, x16, #0xf60
  400eec:	br	x17

0000000000400ef0 <parse_env_file_sentinel@plt>:
  400ef0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ef4:	ldr	x17, [x16, #3944]
  400ef8:	add	x16, x16, #0xf68
  400efc:	br	x17

0000000000400f00 <__stack_chk_fail@plt>:
  400f00:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f04:	ldr	x17, [x16, #3952]
  400f08:	add	x16, x16, #0xf70
  400f0c:	br	x17

0000000000400f10 <malloc@plt>:
  400f10:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f14:	ldr	x17, [x16, #3960]
  400f18:	add	x16, x16, #0xf78
  400f1c:	br	x17

0000000000400f20 <open_terminal@plt>:
  400f20:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f24:	ldr	x17, [x16, #3968]
  400f28:	add	x16, x16, #0xf80
  400f2c:	br	x17

0000000000400f30 <log_internal_realm@plt>:
  400f30:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f34:	ldr	x17, [x16, #3976]
  400f38:	add	x16, x16, #0xf88
  400f3c:	br	x17

0000000000400f40 <strv_join_prefix@plt>:
  400f40:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f44:	ldr	x17, [x16, #3984]
  400f48:	add	x16, x16, #0xf90
  400f4c:	br	x17

0000000000400f50 <ioctl@plt>:
  400f50:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f54:	ldr	x17, [x16, #3992]
  400f58:	add	x16, x16, #0xf98
  400f5c:	br	x17

0000000000400f60 <tcgetattr@plt>:
  400f60:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f64:	ldr	x17, [x16, #4000]
  400f68:	add	x16, x16, #0xfa0
  400f6c:	br	x17

0000000000400f70 <strdup@plt>:
  400f70:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f74:	ldr	x17, [x16, #4008]
  400f78:	add	x16, x16, #0xfa8
  400f7c:	br	x17

0000000000400f80 <execv@plt>:
  400f80:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f84:	ldr	x17, [x16, #4016]
  400f88:	add	x16, x16, #0xfb0
  400f8c:	br	x17

0000000000400f90 <safe_fork_full@plt>:
  400f90:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400f94:	ldr	x17, [x16, #4024]
  400f98:	add	x16, x16, #0xfb8
  400f9c:	br	x17

0000000000400fa0 <is_locale_utf8@plt>:
  400fa0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400fa4:	ldr	x17, [x16, #4032]
  400fa8:	add	x16, x16, #0xfc0
  400fac:	br	x17

0000000000400fb0 <free@plt>:
  400fb0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400fb4:	ldr	x17, [x16, #4040]
  400fb8:	add	x16, x16, #0xfc8
  400fbc:	br	x17

0000000000400fc0 <tcsetattr@plt>:
  400fc0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400fc4:	ldr	x17, [x16, #4048]
  400fc8:	add	x16, x16, #0xfd0
  400fcc:	br	x17

0000000000400fd0 <sprintf@plt>:
  400fd0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400fd4:	ldr	x17, [x16, #4056]
  400fd8:	add	x16, x16, #0xfd8
  400fdc:	br	x17

0000000000400fe0 <log_oom_internal@plt>:
  400fe0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400fe4:	ldr	x17, [x16, #4064]
  400fe8:	add	x16, x16, #0xfe0
  400fec:	br	x17

0000000000400ff0 <log_get_max_level_realm@plt>:
  400ff0:	adrp	x16, 413000 <__FRAME_END__+0x10330>
  400ff4:	ldr	x17, [x16, #4072]
  400ff8:	add	x16, x16, #0xfe8
  400ffc:	br	x17

Disassembly of section .text:

0000000000401000 <main>:
  401000:	sub	sp, sp, #0x1a0
  401004:	adrp	x0, 413000 <__FRAME_END__+0x10330>
  401008:	add	x0, x0, #0xca0
  40100c:	stp	x29, x30, [sp, #80]
  401010:	add	x29, sp, #0x50
  401014:	stp	x19, x20, [sp, #96]
  401018:	mov	x19, x1
  40101c:	stp	x21, x22, [sp, #112]
  401020:	stp	x23, x24, [sp, #128]
  401024:	stp	x25, x26, [sp, #144]
  401028:	stp	x27, x28, [sp, #160]
  40102c:	ldr	x1, [x0]
  401030:	str	x1, [sp, #408]
  401034:	mov	x1, #0x0                   	// #0
  401038:	str	x0, [sp, #176]
  40103c:	stp	xzr, xzr, [sp, #208]
  401040:	stp	xzr, xzr, [sp, #224]
  401044:	stp	xzr, xzr, [sp, #240]
  401048:	bl	400e50 <log_setup_service@plt>
  40104c:	mov	w0, #0x12                  	// #18
  401050:	bl	400e90 <umask@plt>
  401054:	ldr	x21, [x19, #8]
  401058:	cbz	x21, 4015a0 <main+0x5a0>
  40105c:	mov	w1, #0x102                 	// #258
  401060:	mov	x0, x21
  401064:	movk	w1, #0x8, lsl #16
  401068:	bl	400f20 <open_terminal@plt>
  40106c:	mov	w20, w0
  401070:	tbz	w0, #31, 40144c <main+0x44c>
  401074:	mov	w0, #0x0                   	// #0
  401078:	bl	400ff0 <log_get_max_level_realm@plt>
  40107c:	cmp	w0, #0x2
  401080:	b.le	40143c <main+0x43c>
  401084:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401088:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  40108c:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401090:	mov	x6, x21
  401094:	add	x5, x5, #0x475
  401098:	add	x4, x4, #0xa2e
  40109c:	add	x2, x2, #0x3aa
  4010a0:	mov	w1, w20
  4010a4:	mov	w3, #0x187                 	// #391
  4010a8:	mov	w0, #0x3                   	// #3
  4010ac:	bl	400f30 <log_internal_realm@plt>
  4010b0:	mov	w19, w0
  4010b4:	mov	w22, #0x0                   	// #0
  4010b8:	mov	w0, w20
  4010bc:	bl	400e60 <safe_close@plt>
  4010c0:	add	x25, sp, #0xe0
  4010c4:	add	x26, sp, #0xf8
  4010c8:	add	x27, sp, #0xf0
  4010cc:	tbnz	w19, #31, 401dc4 <main+0xdc4>
  4010d0:	bl	400fa0 <is_locale_utf8@plt>
  4010d4:	and	w24, w0, #0xff
  4010d8:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4010dc:	add	x0, x0, #0x56b
  4010e0:	stp	x27, x0, [sp, #8]
  4010e4:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4010e8:	add	x0, x0, #0x577
  4010ec:	str	x0, [sp]
  4010f0:	add	x7, sp, #0xe8
  4010f4:	stp	x26, xzr, [sp, #24]
  4010f8:	mov	x5, x25
  4010fc:	add	x3, sp, #0xd8
  401100:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  401104:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401108:	add	x6, x6, #0x53e
  40110c:	add	x4, x4, #0x543
  401110:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401114:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401118:	add	x2, x2, #0x551
  40111c:	add	x1, x1, #0x558
  401120:	mov	x0, #0x0                   	// #0
  401124:	bl	400ef0 <parse_env_file_sentinel@plt>
  401128:	cmp	w0, #0x0
  40112c:	mov	w21, w24
  401130:	mov	w20, w0
  401134:	ccmn	w0, #0x2, #0x4, lt  // lt = tstop
  401138:	b.eq	401174 <main+0x174>  // b.none
  40113c:	mov	w0, #0x0                   	// #0
  401140:	bl	400ff0 <log_get_max_level_realm@plt>
  401144:	cmp	w0, #0x3
  401148:	b.le	401174 <main+0x174>
  40114c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401150:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401154:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401158:	add	x5, x5, #0x580
  40115c:	add	x4, x4, #0xa3f
  401160:	add	x2, x2, #0x3aa
  401164:	mov	w1, w20
  401168:	mov	w3, #0x1bb                 	// #443
  40116c:	mov	w0, #0x4                   	// #4
  401170:	bl	400f30 <log_internal_realm@plt>
  401174:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401178:	add	x0, x0, #0x5ed
  40117c:	stp	x27, x0, [sp, #48]
  401180:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401184:	add	x0, x0, #0x602
  401188:	str	x0, [sp, #40]
  40118c:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401190:	add	x0, x0, #0x614
  401194:	str	x27, [sp]
  401198:	str	x26, [sp, #16]
  40119c:	add	x6, sp, #0xe8
  4011a0:	str	x0, [sp, #24]
  4011a4:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4011a8:	add	x0, x0, #0x62b
  4011ac:	str	x0, [sp, #8]
  4011b0:	str	x25, [sp, #32]
  4011b4:	mov	x4, x25
  4011b8:	stp	x26, xzr, [sp, #64]
  4011bc:	add	x2, sp, #0xd8
  4011c0:	adrp	x7, 402000 <toggle_utf8_vc+0xb8>
  4011c4:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4011c8:	add	x7, x7, #0x5a6
  4011cc:	add	x5, x5, #0x5b8
  4011d0:	adrp	x3, 402000 <toggle_utf8_vc+0xb8>
  4011d4:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  4011d8:	add	x3, x3, #0x5c6
  4011dc:	add	x1, x1, #0x5dd
  4011e0:	mov	w0, #0x1                   	// #1
  4011e4:	bl	400ec0 <proc_cmdline_get_key_many_internal@plt>
  4011e8:	cmp	w0, #0x0
  4011ec:	mov	w20, w0
  4011f0:	ccmn	w0, #0x2, #0x4, lt  // lt = tstop
  4011f4:	b.eq	401230 <main+0x230>  // b.none
  4011f8:	mov	w0, #0x0                   	// #0
  4011fc:	bl	400ff0 <log_get_max_level_realm@plt>
  401200:	cmp	w0, #0x3
  401204:	b.le	401230 <main+0x230>
  401208:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  40120c:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401210:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401214:	add	x5, x5, #0x640
  401218:	add	x4, x4, #0xa3f
  40121c:	add	x2, x2, #0x3aa
  401220:	mov	w1, w20
  401224:	mov	w3, #0x1ca                 	// #458
  401228:	mov	w0, #0x4                   	// #4
  40122c:	bl	400f30 <log_internal_realm@plt>
  401230:	cmp	w24, #0x0
  401234:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401238:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  40123c:	add	x0, x0, #0x3d3
  401240:	add	x1, x1, #0x46c
  401244:	mov	x3, #0x0                   	// #0
  401248:	csel	x1, x1, x0, ne  // ne = any
  40124c:	mov	w2, #0x20                  	// #32
  401250:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401254:	add	x0, x0, #0x661
  401258:	bl	400e20 <write_string_file_ts@plt>
  40125c:	mov	w20, w0
  401260:	mov	w0, #0x0                   	// #0
  401264:	tbz	w20, #31, 4016c4 <main+0x6c4>
  401268:	bl	400ff0 <log_get_max_level_realm@plt>
  40126c:	cmp	w0, #0x3
  401270:	b.le	4012b4 <main+0x2b4>
  401274:	cmp	w24, #0x0
  401278:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  40127c:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  401280:	add	x0, x0, #0x397
  401284:	add	x6, x6, #0x390
  401288:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  40128c:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401290:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401294:	add	x5, x5, #0x688
  401298:	add	x4, x4, #0xa53
  40129c:	add	x2, x2, #0x3aa
  4012a0:	mov	w1, w20
  4012a4:	csel	x6, x6, x0, ne  // ne = any
  4012a8:	mov	w3, #0x79                  	// #121
  4012ac:	mov	w0, #0x4                   	// #4
  4012b0:	bl	400f30 <log_internal_realm@plt>
  4012b4:	ldr	x0, [sp, #208]
  4012b8:	mov	w2, w21
  4012bc:	mov	w1, w19
  4012c0:	bl	401f48 <toggle_utf8_vc>
  4012c4:	ldp	x2, x1, [sp, #232]
  4012c8:	ldr	x4, [sp, #208]
  4012cc:	ldr	x3, [sp, #248]
  4012d0:	mov	x0, x2
  4012d4:	bl	401f2c <isempty>
  4012d8:	tst	w0, #0xff
  4012dc:	b.eq	401300 <main+0x300>  // b.none
  4012e0:	mov	x0, x1
  4012e4:	bl	401f2c <isempty>
  4012e8:	tst	w0, #0xff
  4012ec:	b.eq	401300 <main+0x300>  // b.none
  4012f0:	mov	x0, x3
  4012f4:	bl	401f2c <isempty>
  4012f8:	tst	w0, #0xff
  4012fc:	b.ne	401920 <main+0x920>  // b.any
  401300:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401304:	add	x0, x0, #0x6d0
  401308:	adrp	x23, 402000 <toggle_utf8_vc+0xb8>
  40130c:	add	x23, x23, #0x6bf
  401310:	stp	x23, x0, [sp, #320]
  401314:	mov	x0, x1
  401318:	str	x4, [sp, #336]
  40131c:	bl	401f2c <isempty>
  401320:	tst	w0, #0xff
  401324:	b.ne	401710 <main+0x710>  // b.any
  401328:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  40132c:	add	x0, x0, #0x6d3
  401330:	stp	x0, x1, [sp, #344]
  401334:	mov	w1, #0x5                   	// #5
  401338:	mov	x0, x3
  40133c:	add	x21, sp, #0x140
  401340:	bl	401f2c <isempty>
  401344:	tst	w0, #0xff
  401348:	b.ne	401364 <main+0x364>  // b.any
  40134c:	add	w0, w1, #0x1
  401350:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401354:	add	x4, x4, #0x6d6
  401358:	str	x4, [x21, w1, uxtw #3]
  40135c:	add	w1, w1, #0x2
  401360:	str	x3, [x21, w0, uxtw #3]
  401364:	mov	x0, x2
  401368:	bl	401f2c <isempty>
  40136c:	tst	w0, #0xff
  401370:	b.ne	40137c <main+0x37c>  // b.any
  401374:	str	x2, [x21, w1, uxtw #3]
  401378:	add	w1, w1, #0x1
  40137c:	mov	w0, #0x0                   	// #0
  401380:	str	xzr, [x21, w1, uxtw #3]
  401384:	bl	400ff0 <log_get_max_level_realm@plt>
  401388:	cmp	w0, #0x6
  40138c:	b.le	4013fc <main+0x3fc>
  401390:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401394:	add	x1, x1, #0x6d9
  401398:	mov	x2, #0x0                   	// #0
  40139c:	mov	x0, x21
  4013a0:	bl	400f40 <strv_join_prefix@plt>
  4013a4:	mov	x20, x0
  4013a8:	mov	w0, #0x0                   	// #0
  4013ac:	str	x20, [sp, #288]
  4013b0:	bl	400ff0 <log_get_max_level_realm@plt>
  4013b4:	cmp	w0, #0x6
  4013b8:	b.le	4013f4 <main+0x3f4>
  4013bc:	cbnz	x20, 4013c8 <main+0x3c8>
  4013c0:	adrp	x20, 402000 <toggle_utf8_vc+0xb8>
  4013c4:	add	x20, x20, #0x46e
  4013c8:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4013cc:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4013d0:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  4013d4:	mov	x6, x20
  4013d8:	add	x5, x5, #0x6db
  4013dc:	add	x4, x4, #0xa7c
  4013e0:	add	x2, x2, #0x3aa
  4013e4:	mov	w3, #0xc3                  	// #195
  4013e8:	mov	w1, #0x0                   	// #0
  4013ec:	mov	w0, #0x7                   	// #7
  4013f0:	bl	400f30 <log_internal_realm@plt>
  4013f4:	add	x0, sp, #0x120
  4013f8:	bl	4021f0 <freep>
  4013fc:	add	x4, sp, #0x120
  401400:	mov	w3, #0x223                 	// #547
  401404:	mov	x2, #0x0                   	// #0
  401408:	mov	x1, #0x0                   	// #0
  40140c:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401410:	add	x0, x0, #0x6ed
  401414:	bl	400f90 <safe_fork_full@plt>
  401418:	mov	w20, w0
  40141c:	cmp	w0, #0x0
  401420:	b.lt	40172c <main+0x72c>  // b.tstop
  401424:	b.ne	401718 <main+0x718>  // b.any
  401428:	ldr	x0, [sp, #320]
  40142c:	mov	x1, x21
  401430:	bl	400f80 <execv@plt>
  401434:	mov	w0, #0x1                   	// #1
  401438:	bl	400e80 <_exit@plt>
  40143c:	neg	w0, w20
  401440:	and	w0, w0, #0xff
  401444:	neg	w19, w0
  401448:	b	4010b4 <main+0xb4>
  40144c:	mov	w1, #0xc                   	// #12
  401450:	add	x2, sp, #0x188
  401454:	strb	w1, [sp, #392]
  401458:	mov	x1, #0x541c                	// #21532
  40145c:	bl	400f50 <ioctl@plt>
  401460:	tbz	w0, #31, 4014ac <main+0x4ac>
  401464:	bl	400ed0 <__errno_location@plt>
  401468:	ldr	w19, [x0]
  40146c:	cmp	w19, #0x0
  401470:	b.le	4014ac <main+0x4ac>
  401474:	mov	w0, #0x0                   	// #0
  401478:	bl	400ff0 <log_get_max_level_realm@plt>
  40147c:	cmp	w0, #0x2
  401480:	b.le	401560 <main+0x560>
  401484:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401488:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  40148c:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401490:	mov	x6, x21
  401494:	add	x5, x5, #0x48b
  401498:	add	x4, x4, #0xa2e
  40149c:	add	x2, x2, #0x3aa
  4014a0:	neg	w1, w19
  4014a4:	mov	w3, #0x18b                 	// #395
  4014a8:	b	4010a8 <main+0xa8>
  4014ac:	add	x2, sp, #0x120
  4014b0:	mov	w0, w20
  4014b4:	mov	x1, #0x5603                	// #22019
  4014b8:	str	wzr, [sp, #288]
  4014bc:	strh	wzr, [sp, #292]
  4014c0:	bl	400f50 <ioctl@plt>
  4014c4:	tbz	w0, #31, 401510 <main+0x510>
  4014c8:	bl	400ed0 <__errno_location@plt>
  4014cc:	ldr	w19, [x0]
  4014d0:	neg	w19, w19
  4014d4:	tbz	w19, #31, 401520 <main+0x520>
  4014d8:	mov	w0, #0x0                   	// #0
  4014dc:	bl	400ff0 <log_get_max_level_realm@plt>
  4014e0:	cmp	w0, #0x2
  4014e4:	b.le	40155c <main+0x55c>
  4014e8:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4014ec:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4014f0:	mov	x6, x21
  4014f4:	add	x5, x5, #0x4b2
  4014f8:	add	x4, x4, #0xa2e
  4014fc:	mov	w3, #0x18f                 	// #399
  401500:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401504:	mov	w1, w19
  401508:	add	x2, x2, #0x3aa
  40150c:	b	4010a8 <main+0xa8>
  401510:	ldrh	w0, [sp, #288]
  401514:	bl	40226c <verify_vc_allocation>
  401518:	mov	w19, w0
  40151c:	b	4014d4 <main+0x4d4>
  401520:	mov	w0, w20
  401524:	bl	4021f8 <verify_vc_kbmode>
  401528:	mov	w19, w0
  40152c:	tbz	w0, #31, 401568 <main+0x568>
  401530:	mov	w0, #0x0                   	// #0
  401534:	bl	400ff0 <log_get_max_level_realm@plt>
  401538:	cmp	w0, #0x2
  40153c:	b.le	40155c <main+0x55c>
  401540:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401544:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401548:	mov	x6, x21
  40154c:	add	x5, x5, #0x4da
  401550:	add	x4, x4, #0xa2e
  401554:	mov	w3, #0x193                 	// #403
  401558:	b	401500 <main+0x500>
  40155c:	neg	w19, w19
  401560:	and	w0, w19, #0xff
  401564:	b	401444 <main+0x444>
  401568:	mov	x0, x21
  40156c:	bl	400f70 <strdup@plt>
  401570:	cbnz	x0, 401590 <main+0x590>
  401574:	adrp	x3, 402000 <toggle_utf8_vc+0xb8>
  401578:	mov	w2, #0x197                 	// #407
  40157c:	add	x3, x3, #0xa2e
  401580:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401584:	add	x1, x1, #0x3aa
  401588:	bl	400fe0 <log_oom_internal@plt>
  40158c:	b	4010b0 <main+0xb0>
  401590:	mov	w19, w20
  401594:	mov	w20, #0xffffffff            	// #-1
  401598:	str	x0, [sp, #208]
  40159c:	b	4010b4 <main+0xb4>
  4015a0:	mov	x0, #0xb                   	// #11
  4015a4:	bl	400f10 <malloc@plt>
  4015a8:	str	x0, [sp, #288]
  4015ac:	cbnz	x0, 4015d4 <main+0x5d4>
  4015b0:	adrp	x3, 402000 <toggle_utf8_vc+0xb8>
  4015b4:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  4015b8:	add	x3, x3, #0xa1f
  4015bc:	add	x1, x1, #0x3aa
  4015c0:	mov	w2, #0x15d                 	// #349
  4015c4:	bl	400fe0 <log_oom_internal@plt>
  4015c8:	mov	w19, w0
  4015cc:	mov	w22, #0x0                   	// #0
  4015d0:	b	4016ac <main+0x6ac>
  4015d4:	adrp	x21, 402000 <toggle_utf8_vc+0xb8>
  4015d8:	mov	w23, #0x102                 	// #258
  4015dc:	add	x21, x21, #0x510
  4015e0:	mov	w20, #0x0                   	// #0
  4015e4:	mov	w22, #0x1                   	// #1
  4015e8:	movk	w23, #0x8, lsl #16
  4015ec:	mov	w0, w22
  4015f0:	bl	40226c <verify_vc_allocation>
  4015f4:	tbz	w0, #31, 401608 <main+0x608>
  4015f8:	cbnz	w20, 401600 <main+0x600>
  4015fc:	neg	w20, w0
  401600:	mov	w19, #0xffffffff            	// #-1
  401604:	b	401634 <main+0x634>
  401608:	ldr	x0, [sp, #288]
  40160c:	mov	w2, w22
  401610:	mov	x1, x21
  401614:	bl	400fd0 <sprintf@plt>
  401618:	ldr	x0, [sp, #288]
  40161c:	mov	w1, w23
  401620:	bl	400f20 <open_terminal@plt>
  401624:	mov	w19, w0
  401628:	tbz	w0, #31, 401684 <main+0x684>
  40162c:	cbnz	w20, 401634 <main+0x634>
  401630:	neg	w20, w0
  401634:	mov	w0, w19
  401638:	add	w22, w22, #0x1
  40163c:	bl	400e60 <safe_close@plt>
  401640:	cmp	w22, #0x40
  401644:	b.ne	4015ec <main+0x5ec>  // b.any
  401648:	mov	w0, #0x0                   	// #0
  40164c:	bl	400ff0 <log_get_max_level_realm@plt>
  401650:	cmp	w0, #0x2
  401654:	b.le	4016b8 <main+0x6b8>
  401658:	mov	w1, w20
  40165c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401660:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401664:	add	x5, x5, #0x51b
  401668:	add	x4, x4, #0xa1f
  40166c:	mov	w3, #0x17d                 	// #381
  401670:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401674:	mov	w0, #0x3                   	// #3
  401678:	add	x2, x2, #0x3aa
  40167c:	bl	400f30 <log_internal_realm@plt>
  401680:	b	4015c8 <main+0x5c8>
  401684:	bl	4021f8 <verify_vc_kbmode>
  401688:	tbz	w0, #31, 401698 <main+0x698>
  40168c:	cbnz	w20, 401634 <main+0x634>
  401690:	neg	w20, w0
  401694:	b	401634 <main+0x634>
  401698:	ldr	x0, [sp, #288]
  40169c:	str	x0, [sp, #208]
  4016a0:	mov	w0, #0xffffffff            	// #-1
  4016a4:	str	xzr, [sp, #288]
  4016a8:	bl	400e60 <safe_close@plt>
  4016ac:	add	x0, sp, #0x120
  4016b0:	bl	4021f0 <freep>
  4016b4:	b	4010c0 <main+0xc0>
  4016b8:	and	w0, w20, #0xff
  4016bc:	neg	w19, w0
  4016c0:	b	4015cc <main+0x5cc>
  4016c4:	bl	400ff0 <log_get_max_level_realm@plt>
  4016c8:	cmp	w0, #0x6
  4016cc:	b.le	4012b4 <main+0x2b4>
  4016d0:	cmp	w24, #0x0
  4016d4:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4016d8:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  4016dc:	add	x0, x0, #0x397
  4016e0:	add	x6, x6, #0x390
  4016e4:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4016e8:	csel	x6, x6, x0, ne  // ne = any
  4016ec:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4016f0:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  4016f4:	add	x5, x5, #0x6aa
  4016f8:	add	x4, x4, #0xa53
  4016fc:	add	x2, x2, #0x3aa
  401700:	mov	w3, #0x7b                  	// #123
  401704:	mov	w1, #0x0                   	// #0
  401708:	mov	w0, #0x7                   	// #7
  40170c:	b	4012b0 <main+0x2b0>
  401710:	mov	w1, #0x3                   	// #3
  401714:	b	401338 <main+0x338>
  401718:	ldr	w1, [sp, #288]
  40171c:	mov	x0, x23
  401720:	mov	w2, #0x3                   	// #3
  401724:	bl	400ee0 <wait_for_terminate_and_check@plt>
  401728:	mov	w20, w0
  40172c:	ldr	x4, [sp, #216]
  401730:	mov	x0, x4
  401734:	bl	401f2c <isempty>
  401738:	tst	w0, #0xff
  40173c:	b.ne	401930 <main+0x930>  // b.any
  401740:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401744:	add	x0, x0, #0x709
  401748:	adrp	x28, 402000 <toggle_utf8_vc+0xb8>
  40174c:	add	x28, x28, #0x6f7
  401750:	stp	x28, x0, [sp, #320]
  401754:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401758:	add	x0, x0, #0x6d0
  40175c:	str	x0, [sp, #336]
  401760:	ldr	x0, [sp, #208]
  401764:	str	x0, [sp, #344]
  401768:	ldr	x3, [sp, #224]
  40176c:	cbz	w24, 401928 <main+0x928>
  401770:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401774:	mov	w1, #0x5                   	// #5
  401778:	add	x0, x0, #0x6d6
  40177c:	str	x0, [sp, #352]
  401780:	mov	w2, w1
  401784:	add	x21, sp, #0x140
  401788:	add	w0, w1, #0x1
  40178c:	str	x4, [x21, x2, lsl #3]
  401790:	cbz	x3, 4017a0 <main+0x7a0>
  401794:	ubfiz	x0, x0, #3, #4
  401798:	str	x3, [x21, x0]
  40179c:	add	w0, w1, #0x2
  4017a0:	str	xzr, [x21, w0, uxtw #3]
  4017a4:	mov	w0, #0x0                   	// #0
  4017a8:	bl	400ff0 <log_get_max_level_realm@plt>
  4017ac:	cmp	w0, #0x6
  4017b0:	b.le	401820 <main+0x820>
  4017b4:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  4017b8:	add	x1, x1, #0x6d9
  4017bc:	mov	x2, #0x0                   	// #0
  4017c0:	mov	x0, x21
  4017c4:	bl	400f40 <strv_join_prefix@plt>
  4017c8:	mov	x23, x0
  4017cc:	mov	w0, #0x0                   	// #0
  4017d0:	str	x23, [sp, #288]
  4017d4:	bl	400ff0 <log_get_max_level_realm@plt>
  4017d8:	cmp	w0, #0x6
  4017dc:	b.le	401818 <main+0x818>
  4017e0:	cbnz	x23, 4017ec <main+0x7ec>
  4017e4:	adrp	x23, 402000 <toggle_utf8_vc+0xb8>
  4017e8:	add	x23, x23, #0x46e
  4017ec:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4017f0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4017f4:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  4017f8:	mov	x6, x23
  4017fc:	add	x5, x5, #0x6db
  401800:	add	x4, x4, #0xa65
  401804:	add	x2, x2, #0x3aa
  401808:	mov	w3, #0x98                  	// #152
  40180c:	mov	w1, #0x0                   	// #0
  401810:	mov	w0, #0x7                   	// #7
  401814:	bl	400f30 <log_internal_realm@plt>
  401818:	add	x0, sp, #0x120
  40181c:	bl	4021f0 <freep>
  401820:	add	x4, sp, #0x120
  401824:	mov	w3, #0x223                 	// #547
  401828:	mov	x2, #0x0                   	// #0
  40182c:	mov	x1, #0x0                   	// #0
  401830:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401834:	add	x0, x0, #0x70c
  401838:	bl	400f90 <safe_fork_full@plt>
  40183c:	mov	w23, w0
  401840:	cmp	w0, #0x0
  401844:	b.lt	401860 <main+0x860>  // b.tstop
  401848:	b.eq	401428 <main+0x428>  // b.none
  40184c:	ldr	w1, [sp, #288]
  401850:	mov	x0, x28
  401854:	mov	w2, #0x3                   	// #3
  401858:	bl	400ee0 <wait_for_terminate_and_check@plt>
  40185c:	mov	w23, w0
  401860:	cbz	w22, 401dcc <main+0xdcc>
  401864:	cbnz	w20, 401d50 <main+0xd50>
  401868:	mov	w0, #0x1                   	// #1
  40186c:	stp	xzr, xzr, [sp, #288]
  401870:	mov	x21, #0xffffffffffffffff    	// #-1
  401874:	stp	xzr, xzr, [sp, #304]
  401878:	str	wzr, [sp, #200]
  40187c:	strh	wzr, [sp, #204]
  401880:	str	xzr, [sp, #264]
  401884:	str	w0, [sp, #288]
  401888:	mov	x0, #0x3fffc               	// #262140
  40188c:	str	x21, [sp, #296]
  401890:	str	w21, [sp, #304]
  401894:	bl	400f10 <malloc@plt>
  401898:	str	x0, [sp, #256]
  40189c:	cbnz	x0, 401938 <main+0x938>
  4018a0:	adrp	x3, 402000 <toggle_utf8_vc+0xb8>
  4018a4:	add	x3, x3, #0xa8f
  4018a8:	mov	w2, #0xe9                  	// #233
  4018ac:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  4018b0:	add	x1, x1, #0x3aa
  4018b4:	bl	400fe0 <log_oom_internal@plt>
  4018b8:	add	x0, sp, #0x108
  4018bc:	bl	4021f0 <freep>
  4018c0:	add	x0, sp, #0x100
  4018c4:	bl	4021f0 <freep>
  4018c8:	cmp	w23, #0x0
  4018cc:	cset	w20, ne  // ne = any
  4018d0:	mov	w0, w19
  4018d4:	bl	400e60 <safe_close@plt>
  4018d8:	mov	x0, x26
  4018dc:	bl	4021f0 <freep>
  4018e0:	mov	x0, x27
  4018e4:	bl	4021f0 <freep>
  4018e8:	add	x0, sp, #0xe8
  4018ec:	bl	4021f0 <freep>
  4018f0:	mov	x0, x25
  4018f4:	bl	4021f0 <freep>
  4018f8:	add	x0, sp, #0xd8
  4018fc:	bl	4021f0 <freep>
  401900:	add	x0, sp, #0xd0
  401904:	bl	4021f0 <freep>
  401908:	ldr	x0, [sp, #176]
  40190c:	ldr	x1, [sp, #408]
  401910:	ldr	x0, [x0]
  401914:	eor	x0, x1, x0
  401918:	cbz	x0, 401ddc <main+0xddc>
  40191c:	bl	400f00 <__stack_chk_fail@plt>
  401920:	mov	w20, #0x0                   	// #0
  401924:	b	40172c <main+0x72c>
  401928:	mov	w1, #0x4                   	// #4
  40192c:	b	401780 <main+0x780>
  401930:	mov	w23, #0x0                   	// #0
  401934:	b	401860 <main+0x860>
  401938:	add	x2, sp, #0x120
  40193c:	mov	w0, w19
  401940:	mov	x1, #0x4b72                	// #19314
  401944:	bl	400f50 <ioctl@plt>
  401948:	tbz	w0, #31, 40198c <main+0x98c>
  40194c:	mov	w0, #0x0                   	// #0
  401950:	bl	400ff0 <log_get_max_level_realm@plt>
  401954:	cmp	w0, #0x3
  401958:	b.le	4019f8 <main+0x9f8>
  40195c:	bl	400ed0 <__errno_location@plt>
  401960:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401964:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401968:	add	x5, x5, #0x717
  40196c:	add	x4, x4, #0xa8f
  401970:	mov	w3, #0xf0                  	// #240
  401974:	ldr	w1, [x0]
  401978:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  40197c:	mov	w0, #0x4                   	// #4
  401980:	add	x2, x2, #0x3aa
  401984:	bl	400f30 <log_internal_realm@plt>
  401988:	b	4019f8 <main+0x9f8>
  40198c:	ldr	w20, [sp, #296]
  401990:	cmp	w20, #0x20
  401994:	b.hi	4019b0 <main+0x9b0>  // b.pmore
  401998:	ldr	w0, [sp, #300]
  40199c:	cmp	w0, #0x20
  4019a0:	b.hi	4019b0 <main+0x9b0>  // b.pmore
  4019a4:	ldr	w1, [sp, #304]
  4019a8:	cmp	w1, #0x200
  4019ac:	b.ls	401a3c <main+0xa3c>  // b.plast
  4019b0:	mov	w0, #0x0                   	// #0
  4019b4:	bl	400ff0 <log_get_max_level_realm@plt>
  4019b8:	cmp	w0, #0x3
  4019bc:	b.le	4019f8 <main+0x9f8>
  4019c0:	ldr	w7, [sp, #300]
  4019c4:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4019c8:	ldr	w0, [sp, #304]
  4019cc:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4019d0:	str	w0, [sp]
  4019d4:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  4019d8:	mov	w6, w20
  4019dc:	add	x5, x5, #0x757
  4019e0:	add	x4, x4, #0xa8f
  4019e4:	add	x2, x2, #0x3aa
  4019e8:	mov	w3, #0xf4                  	// #244
  4019ec:	mov	w1, #0x0                   	// #0
  4019f0:	mov	w0, #0x4                   	// #4
  4019f4:	bl	400f30 <log_internal_realm@plt>
  4019f8:	ldr	w0, [sp, #288]
  4019fc:	cbz	w0, 401b04 <main+0xb04>
  401a00:	mov	w0, #0x0                   	// #0
  401a04:	bl	400ff0 <log_get_max_level_realm@plt>
  401a08:	cmp	w0, #0x3
  401a0c:	b.le	401b04 <main+0xb04>
  401a10:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401a14:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401a18:	add	x5, x5, #0x825
  401a1c:	add	x4, x4, #0xa8f
  401a20:	mov	w3, #0x114                 	// #276
  401a24:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401a28:	mov	w1, #0x0                   	// #0
  401a2c:	add	x2, x2, #0x3aa
  401a30:	mov	w0, #0x4                   	// #4
  401a34:	bl	400f30 <log_internal_realm@plt>
  401a38:	b	401b04 <main+0xb04>
  401a3c:	add	w0, w20, #0x7
  401a40:	lsr	w0, w0, #3
  401a44:	lsl	w0, w0, #5
  401a48:	umull	x0, w0, w1
  401a4c:	cmp	x0, #0x0
  401a50:	csinc	x0, x0, xzr, ne  // ne = any
  401a54:	bl	400f10 <malloc@plt>
  401a58:	str	x0, [sp, #264]
  401a5c:	cbnz	x0, 401a70 <main+0xa70>
  401a60:	adrp	x3, 402000 <toggle_utf8_vc+0xb8>
  401a64:	mov	w2, #0xff                  	// #255
  401a68:	add	x3, x3, #0xa8f
  401a6c:	b	4018ac <main+0x8ac>
  401a70:	add	x2, sp, #0x120
  401a74:	mov	x1, #0x4b72                	// #19314
  401a78:	str	x0, [sp, #312]
  401a7c:	mov	w0, w19
  401a80:	bl	400f50 <ioctl@plt>
  401a84:	tbz	w0, #31, 401ab4 <main+0xab4>
  401a88:	mov	w0, #0x0                   	// #0
  401a8c:	bl	400ff0 <log_get_max_level_realm@plt>
  401a90:	cmp	w0, #0x3
  401a94:	b.le	4019f8 <main+0x9f8>
  401a98:	bl	400ed0 <__errno_location@plt>
  401a9c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401aa0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401aa4:	add	x5, x5, #0x7ac
  401aa8:	add	x4, x4, #0xa8f
  401aac:	mov	w3, #0x106                 	// #262
  401ab0:	b	401974 <main+0x974>
  401ab4:	ldr	x0, [sp, #256]
  401ab8:	add	x2, sp, #0x110
  401abc:	mov	x1, #0x4b66                	// #19302
  401ac0:	strh	w21, [sp, #272]
  401ac4:	str	x0, [sp, #280]
  401ac8:	mov	w0, w19
  401acc:	bl	400f50 <ioctl@plt>
  401ad0:	tbz	w0, #31, 401b00 <main+0xb00>
  401ad4:	mov	w0, #0x0                   	// #0
  401ad8:	bl	400ff0 <log_get_max_level_realm@plt>
  401adc:	cmp	w0, #0x3
  401ae0:	b.le	4019f8 <main+0x9f8>
  401ae4:	bl	400ed0 <__errno_location@plt>
  401ae8:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401aec:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401af0:	add	x5, x5, #0x7e9
  401af4:	add	x4, x4, #0xa8f
  401af8:	mov	w3, #0x10c                 	// #268
  401afc:	b	401974 <main+0x974>
  401b00:	str	wzr, [sp, #288]
  401b04:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  401b08:	mov	w21, #0x1                   	// #1
  401b0c:	add	x0, x0, #0x510
  401b10:	str	x0, [sp, #184]
  401b14:	cmp	w21, w22
  401b18:	b.eq	401d48 <main+0xd48>  // b.none
  401b1c:	mov	w0, w21
  401b20:	bl	40226c <verify_vc_allocation>
  401b24:	tbnz	w0, #31, 401d48 <main+0xd48>
  401b28:	ldr	x2, [sp, #184]
  401b2c:	mov	w3, w21
  401b30:	mov	x1, #0xb                   	// #11
  401b34:	add	x0, sp, #0x188
  401b38:	bl	400e40 <snprintf@plt>
  401b3c:	mov	w1, #0x102                 	// #258
  401b40:	add	x0, sp, #0x188
  401b44:	movk	w1, #0x8, lsl #16
  401b48:	bl	400f20 <open_terminal@plt>
  401b4c:	mov	w20, w0
  401b50:	tbz	w0, #31, 401b90 <main+0xb90>
  401b54:	mov	w0, #0x0                   	// #0
  401b58:	bl	400ff0 <log_get_max_level_realm@plt>
  401b5c:	cmp	w0, #0x3
  401b60:	b.le	401c24 <main+0xc24>
  401b64:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401b68:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401b6c:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401b70:	mov	w6, w21
  401b74:	add	x5, x5, #0x854
  401b78:	add	x4, x4, #0xa8f
  401b7c:	add	x2, x2, #0x3aa
  401b80:	mov	w1, w20
  401b84:	mov	w3, #0x121                 	// #289
  401b88:	mov	w0, #0x4                   	// #4
  401b8c:	b	401c20 <main+0xc20>
  401b90:	bl	4021f8 <verify_vc_kbmode>
  401b94:	tbnz	w0, #31, 401c24 <main+0xc24>
  401b98:	mov	w2, w24
  401b9c:	mov	w1, w20
  401ba0:	add	x0, sp, #0x188
  401ba4:	bl	401f48 <toggle_utf8_vc>
  401ba8:	ldr	w0, [sp, #288]
  401bac:	cbnz	w0, 401c24 <main+0xc24>
  401bb0:	add	x2, sp, #0x120
  401bb4:	mov	w0, w20
  401bb8:	mov	x1, #0x4b72                	// #19314
  401bbc:	bl	400f50 <ioctl@plt>
  401bc0:	tbz	w0, #31, 401c74 <main+0xc74>
  401bc4:	bl	400ed0 <__errno_location@plt>
  401bc8:	ldr	w28, [x0]
  401bcc:	add	x2, sp, #0xc4
  401bd0:	mov	w0, w20
  401bd4:	mov	x1, #0x4b3b                	// #19259
  401bd8:	bl	400f50 <ioctl@plt>
  401bdc:	tbnz	w0, #31, 401c3c <main+0xc3c>
  401be0:	ldr	w0, [sp, #196]
  401be4:	cbz	w0, 401c3c <main+0xc3c>
  401be8:	mov	w0, #0x0                   	// #0
  401bec:	bl	400ff0 <log_get_max_level_realm@plt>
  401bf0:	cmp	w0, #0x6
  401bf4:	b.le	401c24 <main+0xc24>
  401bf8:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401bfc:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401c00:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401c04:	mov	w6, w21
  401c08:	add	x5, x5, #0x887
  401c0c:	add	x4, x4, #0xa8f
  401c10:	add	x2, x2, #0x3aa
  401c14:	mov	w3, #0x13b                 	// #315
  401c18:	mov	w1, #0x0                   	// #0
  401c1c:	mov	w0, #0x7                   	// #7
  401c20:	bl	400f30 <log_internal_realm@plt>
  401c24:	mov	w0, w20
  401c28:	add	w21, w21, #0x1
  401c2c:	bl	400e60 <safe_close@plt>
  401c30:	cmp	w21, #0x40
  401c34:	b.ne	401b14 <main+0xb14>  // b.any
  401c38:	b	4018b8 <main+0x8b8>
  401c3c:	mov	w0, #0x0                   	// #0
  401c40:	bl	400ff0 <log_get_max_level_realm@plt>
  401c44:	cmp	w0, #0x3
  401c48:	b.le	401c24 <main+0xc24>
  401c4c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401c50:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401c54:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401c58:	mov	w6, w21
  401c5c:	add	x5, x5, #0x8b9
  401c60:	add	x4, x4, #0xa8f
  401c64:	add	x2, x2, #0x3aa
  401c68:	mov	w1, w28
  401c6c:	mov	w3, #0x13d                 	// #317
  401c70:	b	401b88 <main+0xb88>
  401c74:	add	x2, sp, #0xc8
  401c78:	mov	w0, w20
  401c7c:	mov	x1, #0x4b68                	// #19304
  401c80:	bl	400f50 <ioctl@plt>
  401c84:	tbz	w0, #31, 401cc4 <main+0xcc4>
  401c88:	mov	w0, #0x0                   	// #0
  401c8c:	bl	400ff0 <log_get_max_level_realm@plt>
  401c90:	cmp	w0, #0x3
  401c94:	b.le	401c24 <main+0xc24>
  401c98:	bl	400ed0 <__errno_location@plt>
  401c9c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401ca0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401ca4:	mov	w6, w21
  401ca8:	add	x5, x5, #0x8f6
  401cac:	add	x4, x4, #0xa8f
  401cb0:	mov	w3, #0x148                 	// #328
  401cb4:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401cb8:	ldr	w1, [x0]
  401cbc:	add	x2, x2, #0x3aa
  401cc0:	b	401b88 <main+0xb88>
  401cc4:	add	x2, sp, #0x110
  401cc8:	mov	w0, w20
  401ccc:	mov	x1, #0x4b67                	// #19303
  401cd0:	bl	400f50 <ioctl@plt>
  401cd4:	tbz	w0, #31, 401d08 <main+0xd08>
  401cd8:	mov	w0, #0x0                   	// #0
  401cdc:	bl	400ff0 <log_get_max_level_realm@plt>
  401ce0:	cmp	w0, #0x3
  401ce4:	b.le	401c24 <main+0xc24>
  401ce8:	bl	400ed0 <__errno_location@plt>
  401cec:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401cf0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401cf4:	mov	w6, w21
  401cf8:	add	x5, x5, #0x935
  401cfc:	add	x4, x4, #0xa8f
  401d00:	mov	w3, #0x14e                 	// #334
  401d04:	b	401cb4 <main+0xcb4>
  401d08:	mov	w0, #0x0                   	// #0
  401d0c:	bl	400ff0 <log_get_max_level_realm@plt>
  401d10:	cmp	w0, #0x6
  401d14:	b.le	401c24 <main+0xc24>
  401d18:	add	x6, sp, #0x188
  401d1c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401d20:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401d24:	add	x5, x5, #0x971
  401d28:	add	x4, x4, #0xa8f
  401d2c:	mov	w3, #0x152                 	// #338
  401d30:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401d34:	mov	w1, #0x0                   	// #0
  401d38:	add	x2, x2, #0x3aa
  401d3c:	mov	w0, #0x7                   	// #7
  401d40:	bl	400f30 <log_internal_realm@plt>
  401d44:	b	401c24 <main+0xc24>
  401d48:	mov	w20, #0xffffffff            	// #-1
  401d4c:	b	401c24 <main+0xc24>
  401d50:	mov	w0, #0x0                   	// #0
  401d54:	bl	400ff0 <log_get_max_level_realm@plt>
  401d58:	cmp	w20, #0x47
  401d5c:	b.ne	401d94 <main+0xd94>  // b.any
  401d60:	cmp	w0, #0x4
  401d64:	b.le	4018c8 <main+0x8c8>
  401d68:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401d6c:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401d70:	add	x5, x5, #0x99b
  401d74:	add	x4, x4, #0xa3f
  401d78:	mov	w3, #0x1d9                 	// #473
  401d7c:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401d80:	mov	w1, #0x0                   	// #0
  401d84:	add	x2, x2, #0x3aa
  401d88:	mov	w0, #0x5                   	// #5
  401d8c:	bl	400f30 <log_internal_realm@plt>
  401d90:	b	4018c8 <main+0x8c8>
  401d94:	cmp	w0, #0x3
  401d98:	b.le	401dc4 <main+0xdc4>
  401d9c:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  401da0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401da4:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401da8:	add	x5, x5, #0x9d1
  401dac:	add	x4, x4, #0xa3f
  401db0:	add	x2, x2, #0x3aa
  401db4:	mov	w3, #0x1db                 	// #475
  401db8:	mov	w1, #0x0                   	// #0
  401dbc:	mov	w0, #0x4                   	// #4
  401dc0:	bl	400f30 <log_internal_realm@plt>
  401dc4:	mov	w20, #0x1                   	// #1
  401dc8:	b	4018d0 <main+0x8d0>
  401dcc:	cbz	w20, 4018c8 <main+0x8c8>
  401dd0:	cmp	w20, #0x47
  401dd4:	b.ne	401dc4 <main+0xdc4>  // b.any
  401dd8:	b	4018c8 <main+0x8c8>
  401ddc:	mov	w0, w20
  401de0:	ldp	x29, x30, [sp, #80]
  401de4:	ldp	x19, x20, [sp, #96]
  401de8:	ldp	x21, x22, [sp, #112]
  401dec:	ldp	x23, x24, [sp, #128]
  401df0:	ldp	x25, x26, [sp, #144]
  401df4:	ldp	x27, x28, [sp, #160]
  401df8:	add	sp, sp, #0x1a0
  401dfc:	ret

0000000000401e00 <_start>:
  401e00:	mov	x29, #0x0                   	// #0
  401e04:	mov	x30, #0x0                   	// #0
  401e08:	mov	x5, x0
  401e0c:	ldr	x1, [sp]
  401e10:	add	x2, sp, #0x8
  401e14:	mov	x6, sp
  401e18:	movz	x0, #0x0, lsl #48
  401e1c:	movk	x0, #0x0, lsl #32
  401e20:	movk	x0, #0x40, lsl #16
  401e24:	movk	x0, #0x1000
  401e28:	movz	x3, #0x0, lsl #48
  401e2c:	movk	x3, #0x0, lsl #32
  401e30:	movk	x3, #0x40, lsl #16
  401e34:	movk	x3, #0x22e8
  401e38:	movz	x4, #0x0, lsl #48
  401e3c:	movk	x4, #0x0, lsl #32
  401e40:	movk	x4, #0x40, lsl #16
  401e44:	movk	x4, #0x2368
  401e48:	bl	400e00 <__libc_start_main@plt>
  401e4c:	bl	400eb0 <abort@plt>

0000000000401e50 <call_weak_fn>:
  401e50:	adrp	x0, 413000 <__FRAME_END__+0x10330>
  401e54:	ldr	x0, [x0, #4088]
  401e58:	cbz	x0, 401e60 <call_weak_fn+0x10>
  401e5c:	b	400e10 <__gmon_start__@plt>
  401e60:	ret

0000000000401e64 <deregister_tm_clones>:
  401e64:	adrp	x0, 414000 <__TMC_END__>
  401e68:	add	x1, x0, #0x0
  401e6c:	adrp	x0, 414000 <__TMC_END__>
  401e70:	add	x0, x0, #0x0
  401e74:	cmp	x1, x0
  401e78:	b.eq	401ea4 <deregister_tm_clones+0x40>  // b.none
  401e7c:	sub	sp, sp, #0x10
  401e80:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401e84:	ldr	x1, [x1, #896]
  401e88:	str	x1, [sp, #8]
  401e8c:	cbz	x1, 401e9c <deregister_tm_clones+0x38>
  401e90:	mov	x16, x1
  401e94:	add	sp, sp, #0x10
  401e98:	br	x16
  401e9c:	add	sp, sp, #0x10
  401ea0:	ret
  401ea4:	ret

0000000000401ea8 <register_tm_clones>:
  401ea8:	adrp	x0, 414000 <__TMC_END__>
  401eac:	add	x1, x0, #0x0
  401eb0:	adrp	x0, 414000 <__TMC_END__>
  401eb4:	add	x0, x0, #0x0
  401eb8:	sub	x1, x1, x0
  401ebc:	mov	x2, #0x2                   	// #2
  401ec0:	asr	x1, x1, #3
  401ec4:	sdiv	x1, x1, x2
  401ec8:	cbz	x1, 401ef4 <register_tm_clones+0x4c>
  401ecc:	sub	sp, sp, #0x10
  401ed0:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401ed4:	ldr	x2, [x2, #904]
  401ed8:	str	x2, [sp, #8]
  401edc:	cbz	x2, 401eec <register_tm_clones+0x44>
  401ee0:	mov	x16, x2
  401ee4:	add	sp, sp, #0x10
  401ee8:	br	x16
  401eec:	add	sp, sp, #0x10
  401ef0:	ret
  401ef4:	ret

0000000000401ef8 <__do_global_dtors_aux>:
  401ef8:	stp	x29, x30, [sp, #-32]!
  401efc:	mov	x29, sp
  401f00:	str	x19, [sp, #16]
  401f04:	adrp	x19, 414000 <__TMC_END__>
  401f08:	ldrb	w0, [x19]
  401f0c:	cbnz	w0, 401f1c <__do_global_dtors_aux+0x24>
  401f10:	bl	401e64 <deregister_tm_clones>
  401f14:	mov	w0, #0x1                   	// #1
  401f18:	strb	w0, [x19]
  401f1c:	ldr	x19, [sp, #16]
  401f20:	ldp	x29, x30, [sp], #32
  401f24:	ret

0000000000401f28 <frame_dummy>:
  401f28:	b	401ea8 <register_tm_clones>

0000000000401f2c <isempty>:
  401f2c:	cbz	x0, 401f40 <isempty+0x14>
  401f30:	ldrb	w0, [x0]
  401f34:	cmp	w0, #0x0
  401f38:	cset	w0, eq  // eq = none
  401f3c:	ret
  401f40:	mov	w0, #0x1                   	// #1
  401f44:	b	401f3c <isempty+0x10>

0000000000401f48 <toggle_utf8_vc>:
  401f48:	stp	x29, x30, [sp, #-144]!
  401f4c:	mov	x29, sp
  401f50:	stp	x19, x20, [sp, #16]
  401f54:	adrp	x20, 413000 <__FRAME_END__+0x10330>
  401f58:	add	x20, x20, #0xca0
  401f5c:	stp	x21, x22, [sp, #32]
  401f60:	mov	x21, x0
  401f64:	ldr	x0, [x20]
  401f68:	str	x0, [sp, #136]
  401f6c:	mov	x0, #0x0                   	// #0
  401f70:	str	x23, [sp, #48]
  401f74:	stp	xzr, xzr, [sp, #72]
  401f78:	stp	xzr, xzr, [sp, #88]
  401f7c:	stp	xzr, xzr, [sp, #104]
  401f80:	str	xzr, [sp, #120]
  401f84:	str	wzr, [sp, #128]
  401f88:	cbnz	x21, 401fac <toggle_utf8_vc+0x64>
  401f8c:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401f90:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401f94:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401f98:	add	x4, x4, #0xa10
  401f9c:	add	x2, x2, #0x3aa
  401fa0:	add	x1, x1, #0x3c8
  401fa4:	mov	w3, #0x5d                  	// #93
  401fa8:	bl	400e70 <log_assert_failed_realm@plt>
  401fac:	mov	w23, w1
  401fb0:	tbz	w1, #31, 401fd8 <toggle_utf8_vc+0x90>
  401fb4:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  401fb8:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  401fbc:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  401fc0:	add	x4, x4, #0xa10
  401fc4:	add	x2, x2, #0x3aa
  401fc8:	add	x1, x1, #0x3cd
  401fcc:	mov	w3, #0x5e                  	// #94
  401fd0:	mov	w0, #0x0                   	// #0
  401fd4:	b	401fa8 <toggle_utf8_vc+0x60>
  401fd8:	and	w22, w2, #0xff
  401fdc:	mov	w0, w23
  401fe0:	cmp	w22, #0x0
  401fe4:	mov	w2, #0x3                   	// #3
  401fe8:	mov	x1, #0x4b45                	// #19269
  401fec:	csinc	w2, w2, wzr, ne  // ne = any
  401ff0:	bl	400f50 <ioctl@plt>
  401ff4:	tbz	w0, #31, 402068 <toggle_utf8_vc+0x120>
  401ff8:	bl	400ed0 <__errno_location@plt>
  401ffc:	ldr	w19, [x0]
  402000:	mov	w0, #0x0                   	// #0
  402004:	bl	400ff0 <log_get_max_level_realm@plt>
  402008:	cmp	w0, #0x3
  40200c:	b.le	402114 <toggle_utf8_vc+0x1cc>
  402010:	cmp	w22, #0x0
  402014:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  402018:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  40201c:	add	x0, x0, #0x397
  402020:	add	x6, x6, #0x390
  402024:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  402028:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  40202c:	mov	x7, x21
  402030:	csel	x6, x6, x0, ne  // ne = any
  402034:	add	x5, x5, #0x3d5
  402038:	add	x4, x4, #0xa44
  40203c:	mov	w3, #0x62                  	// #98
  402040:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  402044:	mov	w1, w19
  402048:	add	x2, x2, #0x3aa
  40204c:	mov	w0, #0x4                   	// #4
  402050:	bl	400f30 <log_internal_realm@plt>
  402054:	ldr	x2, [sp, #136]
  402058:	ldr	x1, [x20]
  40205c:	eor	x1, x2, x1
  402060:	cbz	x1, 4021dc <toggle_utf8_vc+0x294>
  402064:	bl	400f00 <__stack_chk_fail@plt>
  402068:	cmp	w22, #0x0
  40206c:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  402070:	adrp	x1, 402000 <toggle_utf8_vc+0xb8>
  402074:	add	x0, x0, #0x3a3
  402078:	add	x1, x1, #0x39f
  40207c:	mov	w3, #0x0                   	// #0
  402080:	csel	x1, x1, x0, ne  // ne = any
  402084:	mov	x2, #0x3                   	// #3
  402088:	mov	w0, w23
  40208c:	bl	400e30 <loop_write@plt>
  402090:	mov	w19, w0
  402094:	tbz	w0, #31, 4020ec <toggle_utf8_vc+0x1a4>
  402098:	mov	w0, #0x0                   	// #0
  40209c:	bl	400ff0 <log_get_max_level_realm@plt>
  4020a0:	cmp	w0, #0x3
  4020a4:	b.le	4020dc <toggle_utf8_vc+0x194>
  4020a8:	cmp	w22, #0x0
  4020ac:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4020b0:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  4020b4:	add	x0, x0, #0x397
  4020b8:	add	x6, x6, #0x390
  4020bc:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4020c0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4020c4:	mov	x7, x21
  4020c8:	csel	x6, x6, x0, ne  // ne = any
  4020cc:	add	x5, x5, #0x3fa
  4020d0:	add	x4, x4, #0xa44
  4020d4:	mov	w3, #0x66                  	// #102
  4020d8:	b	402040 <toggle_utf8_vc+0xf8>
  4020dc:	neg	w0, w19
  4020e0:	and	w0, w0, #0xff
  4020e4:	neg	w0, w0
  4020e8:	b	402054 <toggle_utf8_vc+0x10c>
  4020ec:	add	x1, sp, #0x48
  4020f0:	mov	w0, w23
  4020f4:	bl	400f60 <tcgetattr@plt>
  4020f8:	tbz	w0, #31, 402120 <toggle_utf8_vc+0x1d8>
  4020fc:	bl	400ed0 <__errno_location@plt>
  402100:	ldr	w19, [x0]
  402104:	mov	w0, #0x0                   	// #0
  402108:	bl	400ff0 <log_get_max_level_realm@plt>
  40210c:	cmp	w0, #0x3
  402110:	b.gt	4021a8 <toggle_utf8_vc+0x260>
  402114:	cmp	w19, #0x0
  402118:	cneg	w0, w19, lt  // lt = tstop
  40211c:	b	4020e0 <toggle_utf8_vc+0x198>
  402120:	ldr	w0, [sp, #72]
  402124:	cmp	w22, #0x0
  402128:	add	x2, sp, #0x48
  40212c:	orr	w1, w0, #0x4000
  402130:	and	w0, w0, #0xffffbfff
  402134:	csel	w0, w0, w1, eq  // eq = none
  402138:	mov	w1, #0x0                   	// #0
  40213c:	str	w0, [sp, #72]
  402140:	mov	w0, w23
  402144:	bl	400fc0 <tcsetattr@plt>
  402148:	tbnz	w0, #31, 4020fc <toggle_utf8_vc+0x1b4>
  40214c:	mov	w0, #0x0                   	// #0
  402150:	bl	400ff0 <log_get_max_level_realm@plt>
  402154:	cmp	w0, #0x6
  402158:	b.le	4021a0 <toggle_utf8_vc+0x258>
  40215c:	cmp	w22, #0x0
  402160:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  402164:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  402168:	add	x0, x0, #0x397
  40216c:	add	x6, x6, #0x390
  402170:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  402174:	csel	x6, x6, x0, ne  // ne = any
  402178:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  40217c:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  402180:	mov	x7, x21
  402184:	add	x5, x5, #0x449
  402188:	add	x4, x4, #0xa44
  40218c:	add	x2, x2, #0x3aa
  402190:	mov	w3, #0x70                  	// #112
  402194:	mov	w1, #0x0                   	// #0
  402198:	mov	w0, #0x7                   	// #7
  40219c:	bl	400f30 <log_internal_realm@plt>
  4021a0:	mov	w0, #0x0                   	// #0
  4021a4:	b	402054 <toggle_utf8_vc+0x10c>
  4021a8:	cmp	w22, #0x0
  4021ac:	adrp	x0, 402000 <toggle_utf8_vc+0xb8>
  4021b0:	adrp	x6, 402000 <toggle_utf8_vc+0xb8>
  4021b4:	add	x0, x0, #0x397
  4021b8:	add	x6, x6, #0x390
  4021bc:	adrp	x5, 402000 <toggle_utf8_vc+0xb8>
  4021c0:	adrp	x4, 402000 <toggle_utf8_vc+0xb8>
  4021c4:	mov	x7, x21
  4021c8:	csel	x6, x6, x0, ne  // ne = any
  4021cc:	add	x5, x5, #0x427
  4021d0:	add	x4, x4, #0xa44
  4021d4:	mov	w3, #0x6e                  	// #110
  4021d8:	b	402040 <toggle_utf8_vc+0xf8>
  4021dc:	ldp	x19, x20, [sp, #16]
  4021e0:	ldp	x21, x22, [sp, #32]
  4021e4:	ldr	x23, [sp, #48]
  4021e8:	ldp	x29, x30, [sp], #144
  4021ec:	ret

00000000004021f0 <freep>:
  4021f0:	ldr	x0, [x0]
  4021f4:	b	400fb0 <free@plt>

00000000004021f8 <verify_vc_kbmode>:
  4021f8:	stp	x29, x30, [sp, #-48]!
  4021fc:	mov	x29, sp
  402200:	str	x19, [sp, #16]
  402204:	adrp	x19, 413000 <__FRAME_END__+0x10330>
  402208:	add	x19, x19, #0xca0
  40220c:	add	x2, sp, #0x24
  402210:	ldr	x1, [x19]
  402214:	str	x1, [sp, #40]
  402218:	mov	x1, #0x0                   	// #0
  40221c:	mov	x1, #0x4b44                	// #19268
  402220:	bl	400f50 <ioctl@plt>
  402224:	tbz	w0, #31, 402248 <verify_vc_kbmode+0x50>
  402228:	bl	400ed0 <__errno_location@plt>
  40222c:	ldr	w0, [x0]
  402230:	neg	w0, w0
  402234:	ldr	x2, [sp, #40]
  402238:	ldr	x1, [x19]
  40223c:	eor	x1, x2, x1
  402240:	cbz	x1, 402260 <verify_vc_kbmode+0x68>
  402244:	bl	400f00 <__stack_chk_fail@plt>
  402248:	ldr	w0, [sp, #36]
  40224c:	and	w0, w0, #0xfffffffd
  402250:	cmp	w0, #0x1
  402254:	mov	w0, #0xfffffff0            	// #-16
  402258:	csel	w0, w0, wzr, ne  // ne = any
  40225c:	b	402234 <verify_vc_kbmode+0x3c>
  402260:	ldr	x19, [sp, #16]
  402264:	ldp	x29, x30, [sp], #48
  402268:	ret

000000000040226c <verify_vc_allocation>:
  40226c:	stp	x29, x30, [sp, #-64]!
  402270:	mov	w3, w0
  402274:	adrp	x2, 402000 <toggle_utf8_vc+0xb8>
  402278:	mov	x29, sp
  40227c:	add	x2, x2, #0x461
  402280:	str	x19, [sp, #16]
  402284:	adrp	x19, 413000 <__FRAME_END__+0x10330>
  402288:	add	x19, x19, #0xca0
  40228c:	ldr	x1, [x19]
  402290:	str	x1, [sp, #56]
  402294:	mov	x1, #0x0                   	// #0
  402298:	add	x0, sp, #0x20
  40229c:	mov	x1, #0x13                  	// #19
  4022a0:	bl	400e40 <snprintf@plt>
  4022a4:	add	x0, sp, #0x20
  4022a8:	mov	w1, #0x0                   	// #0
  4022ac:	bl	400ea0 <access@plt>
  4022b0:	tbz	w0, #31, 4022d4 <verify_vc_allocation+0x68>
  4022b4:	bl	400ed0 <__errno_location@plt>
  4022b8:	ldr	w0, [x0]
  4022bc:	neg	w0, w0
  4022c0:	ldr	x2, [sp, #56]
  4022c4:	ldr	x1, [x19]
  4022c8:	eor	x1, x2, x1
  4022cc:	cbz	x1, 4022dc <verify_vc_allocation+0x70>
  4022d0:	bl	400f00 <__stack_chk_fail@plt>
  4022d4:	mov	w0, #0x0                   	// #0
  4022d8:	b	4022c0 <verify_vc_allocation+0x54>
  4022dc:	ldr	x19, [sp, #16]
  4022e0:	ldp	x29, x30, [sp], #64
  4022e4:	ret

00000000004022e8 <__libc_csu_init>:
  4022e8:	stp	x29, x30, [sp, #-64]!
  4022ec:	mov	x29, sp
  4022f0:	stp	x19, x20, [sp, #16]
  4022f4:	adrp	x20, 413000 <__FRAME_END__+0x10330>
  4022f8:	add	x20, x20, #0xc98
  4022fc:	stp	x21, x22, [sp, #32]
  402300:	adrp	x21, 413000 <__FRAME_END__+0x10330>
  402304:	add	x21, x21, #0xc90
  402308:	sub	x20, x20, x21
  40230c:	mov	w22, w0
  402310:	stp	x23, x24, [sp, #48]
  402314:	mov	x23, x1
  402318:	mov	x24, x2
  40231c:	bl	400dc0 <_init>
  402320:	cmp	xzr, x20, asr #3
  402324:	b.eq	402350 <__libc_csu_init+0x68>  // b.none
  402328:	asr	x20, x20, #3
  40232c:	mov	x19, #0x0                   	// #0
  402330:	ldr	x3, [x21, x19, lsl #3]
  402334:	mov	x2, x24
  402338:	add	x19, x19, #0x1
  40233c:	mov	x1, x23
  402340:	mov	w0, w22
  402344:	blr	x3
  402348:	cmp	x20, x19
  40234c:	b.ne	402330 <__libc_csu_init+0x48>  // b.any
  402350:	ldp	x19, x20, [sp, #16]
  402354:	ldp	x21, x22, [sp, #32]
  402358:	ldp	x23, x24, [sp, #48]
  40235c:	ldp	x29, x30, [sp], #64
  402360:	ret
  402364:	nop

0000000000402368 <__libc_csu_fini>:
  402368:	ret

Disassembly of section .fini:

000000000040236c <_fini>:
  40236c:	stp	x29, x30, [sp, #-16]!
  402370:	mov	x29, sp
  402374:	ldp	x29, x30, [sp], #16
  402378:	ret
