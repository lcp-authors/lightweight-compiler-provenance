
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//uname_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007f8 <_init>:
 7f8:	stp	x29, x30, [sp, #-16]!
 7fc:	mov	x29, sp
 800:	bl	8e0 <call_weak_fn>
 804:	ldp	x29, x30, [sp], #16
 808:	ret

Disassembly of section .plt:

0000000000000810 <.plt>:
 810:	stp	x16, x30, [sp, #-16]!
 814:	adrp	x16, 11000 <__FRAME_END__+0x1020c>
 818:	ldr	x17, [x16, #4088]
 81c:	add	x16, x16, #0xff8
 820:	br	x17
 824:	nop
 828:	nop
 82c:	nop

0000000000000830 <builtin_error@plt>:
 830:	adrp	x16, 12000 <builtin_error>
 834:	ldr	x17, [x16]
 838:	add	x16, x16, #0x0
 83c:	br	x17

0000000000000840 <__cxa_finalize@plt>:
 840:	adrp	x16, 12000 <builtin_error>
 844:	ldr	x17, [x16, #8]
 848:	add	x16, x16, #0x8
 84c:	br	x17

0000000000000850 <builtin_help@plt>:
 850:	adrp	x16, 12000 <builtin_error>
 854:	ldr	x17, [x16, #16]
 858:	add	x16, x16, #0x10
 85c:	br	x17

0000000000000860 <builtin_usage@plt>:
 860:	adrp	x16, 12000 <builtin_error>
 864:	ldr	x17, [x16, #24]
 868:	add	x16, x16, #0x18
 86c:	br	x17

0000000000000870 <strerror@plt>:
 870:	adrp	x16, 12000 <builtin_error>
 874:	ldr	x17, [x16, #32]
 878:	add	x16, x16, #0x20
 87c:	br	x17

0000000000000880 <__gmon_start__@plt>:
 880:	adrp	x16, 12000 <builtin_error>
 884:	ldr	x17, [x16, #40]
 888:	add	x16, x16, #0x28
 88c:	br	x17

0000000000000890 <internal_getopt@plt>:
 890:	adrp	x16, 12000 <builtin_error>
 894:	ldr	x17, [x16, #48]
 898:	add	x16, x16, #0x30
 89c:	br	x17

00000000000008a0 <reset_internal_getopt@plt>:
 8a0:	adrp	x16, 12000 <builtin_error>
 8a4:	ldr	x17, [x16, #56]
 8a8:	add	x16, x16, #0x38
 8ac:	br	x17

00000000000008b0 <printf@plt>:
 8b0:	adrp	x16, 12000 <builtin_error>
 8b4:	ldr	x17, [x16, #64]
 8b8:	add	x16, x16, #0x40
 8bc:	br	x17

00000000000008c0 <__errno_location@plt>:
 8c0:	adrp	x16, 12000 <builtin_error>
 8c4:	ldr	x17, [x16, #72]
 8c8:	add	x16, x16, #0x48
 8cc:	br	x17

00000000000008d0 <uname@plt>:
 8d0:	adrp	x16, 12000 <builtin_error>
 8d4:	ldr	x17, [x16, #80]
 8d8:	add	x16, x16, #0x50
 8dc:	br	x17

Disassembly of section .text:

00000000000008e0 <call_weak_fn>:
 8e0:	adrp	x0, 11000 <__FRAME_END__+0x1020c>
 8e4:	ldr	x0, [x0, #4048]
 8e8:	cbz	x0, 8f0 <call_weak_fn+0x10>
 8ec:	b	880 <__gmon_start__@plt>
 8f0:	ret
 8f4:	nop

00000000000008f8 <deregister_tm_clones>:
 8f8:	adrp	x0, 12000 <builtin_error>
 8fc:	add	x0, x0, #0xb0
 900:	adrp	x1, 12000 <builtin_error>
 904:	add	x1, x1, #0xb0
 908:	cmp	x1, x0
 90c:	b.eq	924 <deregister_tm_clones+0x2c>  // b.none
 910:	adrp	x1, 11000 <__FRAME_END__+0x1020c>
 914:	ldr	x1, [x1, #4032]
 918:	cbz	x1, 924 <deregister_tm_clones+0x2c>
 91c:	mov	x16, x1
 920:	br	x16
 924:	ret

0000000000000928 <register_tm_clones>:
 928:	adrp	x0, 12000 <builtin_error>
 92c:	add	x0, x0, #0xb0
 930:	adrp	x1, 12000 <builtin_error>
 934:	add	x1, x1, #0xb0
 938:	sub	x1, x1, x0
 93c:	lsr	x2, x1, #63
 940:	add	x1, x2, x1, asr #3
 944:	cmp	xzr, x1, asr #1
 948:	asr	x1, x1, #1
 94c:	b.eq	964 <register_tm_clones+0x3c>  // b.none
 950:	adrp	x2, 11000 <__FRAME_END__+0x1020c>
 954:	ldr	x2, [x2, #4064]
 958:	cbz	x2, 964 <register_tm_clones+0x3c>
 95c:	mov	x16, x2
 960:	br	x16
 964:	ret

0000000000000968 <__do_global_dtors_aux>:
 968:	stp	x29, x30, [sp, #-32]!
 96c:	mov	x29, sp
 970:	str	x19, [sp, #16]
 974:	adrp	x19, 12000 <builtin_error>
 978:	ldrb	w0, [x19, #176]
 97c:	cbnz	w0, 9a4 <__do_global_dtors_aux+0x3c>
 980:	adrp	x0, 11000 <__FRAME_END__+0x1020c>
 984:	ldr	x0, [x0, #4040]
 988:	cbz	x0, 998 <__do_global_dtors_aux+0x30>
 98c:	adrp	x0, 12000 <builtin_error>
 990:	ldr	x0, [x0, #88]
 994:	bl	840 <__cxa_finalize@plt>
 998:	bl	8f8 <deregister_tm_clones>
 99c:	mov	w0, #0x1                   	// #1
 9a0:	strb	w0, [x19, #176]
 9a4:	ldr	x19, [sp, #16]
 9a8:	ldp	x29, x30, [sp], #32
 9ac:	ret

00000000000009b0 <frame_dummy>:
 9b0:	b	928 <register_tm_clones>

00000000000009b4 <uname_builtin>:
 9b4:	sub	sp, sp, #0x1f0
 9b8:	stp	x29, x30, [sp, #464]
 9bc:	str	x28, [sp, #480]
 9c0:	add	x29, sp, #0x1d0
 9c4:	sub	x8, x29, #0x14
 9c8:	adrp	x9, 12000 <builtin_error>
 9cc:	add	x9, x9, #0xb4
 9d0:	stur	x0, [x8, #4]
 9d4:	str	wzr, [x9]
 9d8:	str	x8, [sp, #40]
 9dc:	str	x9, [sp, #32]
 9e0:	bl	8a0 <reset_internal_getopt@plt>
 9e4:	ldr	x8, [sp, #40]
 9e8:	ldur	x0, [x8, #4]
 9ec:	adrp	x1, 0 <_init-0x7f8>
 9f0:	add	x1, x1, #0xcc4
 9f4:	bl	890 <internal_getopt@plt>
 9f8:	ldr	x8, [sp, #40]
 9fc:	str	w0, [x8]
 a00:	mov	w9, #0xffffffff            	// #-1
 a04:	cmp	w0, w9
 a08:	b.eq	b3c <uname_builtin+0x188>  // b.none
 a0c:	ldr	x8, [sp, #40]
 a10:	ldr	w9, [x8]
 a14:	mov	w10, #0xffffff9d            	// #-99
 a18:	cmp	w9, w10
 a1c:	str	w9, [sp, #28]
 a20:	b.eq	b10 <uname_builtin+0x15c>  // b.none
 a24:	b	a28 <uname_builtin+0x74>
 a28:	ldr	w8, [sp, #28]
 a2c:	cmp	w8, #0x61
 a30:	b.eq	a98 <uname_builtin+0xe4>  // b.none
 a34:	b	a38 <uname_builtin+0x84>
 a38:	ldr	w8, [sp, #28]
 a3c:	cmp	w8, #0x6d
 a40:	b.eq	aac <uname_builtin+0xf8>  // b.none
 a44:	b	a48 <uname_builtin+0x94>
 a48:	ldr	w8, [sp, #28]
 a4c:	cmp	w8, #0x6e
 a50:	b.eq	ac0 <uname_builtin+0x10c>  // b.none
 a54:	b	a58 <uname_builtin+0xa4>
 a58:	ldr	w8, [sp, #28]
 a5c:	cmp	w8, #0x70
 a60:	b.eq	aac <uname_builtin+0xf8>  // b.none
 a64:	b	a68 <uname_builtin+0xb4>
 a68:	ldr	w8, [sp, #28]
 a6c:	cmp	w8, #0x72
 a70:	b.eq	ad4 <uname_builtin+0x120>  // b.none
 a74:	b	a78 <uname_builtin+0xc4>
 a78:	ldr	w8, [sp, #28]
 a7c:	cmp	w8, #0x73
 a80:	b.eq	ae8 <uname_builtin+0x134>  // b.none
 a84:	b	a88 <uname_builtin+0xd4>
 a88:	ldr	w8, [sp, #28]
 a8c:	cmp	w8, #0x76
 a90:	b.eq	afc <uname_builtin+0x148>  // b.none
 a94:	b	b24 <uname_builtin+0x170>
 a98:	ldr	x8, [sp, #32]
 a9c:	ldr	w9, [x8]
 aa0:	orr	w9, w9, #0x1f
 aa4:	str	w9, [x8]
 aa8:	b	b38 <uname_builtin+0x184>
 aac:	ldr	x8, [sp, #32]
 ab0:	ldr	w9, [x8]
 ab4:	orr	w9, w9, #0x10
 ab8:	str	w9, [x8]
 abc:	b	b38 <uname_builtin+0x184>
 ac0:	ldr	x8, [sp, #32]
 ac4:	ldr	w9, [x8]
 ac8:	orr	w9, w9, #0x2
 acc:	str	w9, [x8]
 ad0:	b	b38 <uname_builtin+0x184>
 ad4:	ldr	x8, [sp, #32]
 ad8:	ldr	w9, [x8]
 adc:	orr	w9, w9, #0x4
 ae0:	str	w9, [x8]
 ae4:	b	b38 <uname_builtin+0x184>
 ae8:	ldr	x8, [sp, #32]
 aec:	ldr	w9, [x8]
 af0:	orr	w9, w9, #0x1
 af4:	str	w9, [x8]
 af8:	b	b38 <uname_builtin+0x184>
 afc:	ldr	x8, [sp, #32]
 b00:	ldr	w9, [x8]
 b04:	orr	w9, w9, #0x8
 b08:	str	w9, [x8]
 b0c:	b	b38 <uname_builtin+0x184>
 b10:	bl	850 <builtin_help@plt>
 b14:	mov	w8, #0x102                 	// #258
 b18:	ldr	x9, [sp, #40]
 b1c:	str	w8, [x9, #16]
 b20:	b	c28 <uname_builtin+0x274>
 b24:	bl	860 <builtin_usage@plt>
 b28:	mov	w8, #0x102                 	// #258
 b2c:	ldr	x9, [sp, #40]
 b30:	str	w8, [x9, #16]
 b34:	b	c28 <uname_builtin+0x274>
 b38:	b	9e4 <uname_builtin+0x30>
 b3c:	adrp	x8, 11000 <__FRAME_END__+0x1020c>
 b40:	ldr	x8, [x8, #4056]
 b44:	ldr	x8, [x8]
 b48:	ldr	x9, [sp, #40]
 b4c:	stur	x8, [x9, #4]
 b50:	ldur	x8, [x9, #4]
 b54:	cbz	x8, b6c <uname_builtin+0x1b8>
 b58:	bl	860 <builtin_usage@plt>
 b5c:	mov	w8, #0x102                 	// #258
 b60:	ldr	x9, [sp, #40]
 b64:	str	w8, [x9, #16]
 b68:	b	c28 <uname_builtin+0x274>
 b6c:	ldr	x8, [sp, #32]
 b70:	ldr	w9, [x8]
 b74:	cbnz	w9, b84 <uname_builtin+0x1d0>
 b78:	mov	w8, #0x1                   	// #1
 b7c:	ldr	x9, [sp, #32]
 b80:	str	w8, [x9]
 b84:	add	x0, sp, #0x32
 b88:	bl	8d0 <uname@plt>
 b8c:	cmp	w0, #0x0
 b90:	cset	w8, ge  // ge = tcont
 b94:	tbnz	w8, #0, bcc <uname_builtin+0x218>
 b98:	bl	8c0 <__errno_location@plt>
 b9c:	ldr	w0, [x0]
 ba0:	bl	870 <strerror@plt>
 ba4:	adrp	x8, 0 <_init-0x7f8>
 ba8:	add	x8, x8, #0xccc
 bac:	str	x0, [sp, #16]
 bb0:	mov	x0, x8
 bb4:	ldr	x1, [sp, #16]
 bb8:	bl	830 <builtin_error@plt>
 bbc:	mov	w9, #0x1                   	// #1
 bc0:	ldr	x8, [sp, #40]
 bc4:	str	w9, [x8, #16]
 bc8:	b	c28 <uname_builtin+0x274>
 bcc:	mov	w0, #0x1                   	// #1
 bd0:	add	x8, sp, #0x32
 bd4:	mov	x1, x8
 bd8:	str	x8, [sp, #8]
 bdc:	bl	c40 <uprint>
 be0:	ldr	x8, [sp, #8]
 be4:	add	x1, x8, #0x41
 be8:	mov	w0, #0x2                   	// #2
 bec:	bl	c40 <uprint>
 bf0:	ldr	x8, [sp, #8]
 bf4:	add	x1, x8, #0x82
 bf8:	mov	w0, #0x4                   	// #4
 bfc:	bl	c40 <uprint>
 c00:	ldr	x8, [sp, #8]
 c04:	add	x1, x8, #0xc3
 c08:	mov	w0, #0x8                   	// #8
 c0c:	bl	c40 <uprint>
 c10:	ldr	x8, [sp, #8]
 c14:	add	x1, x8, #0x104
 c18:	mov	w0, #0x10                  	// #16
 c1c:	bl	c40 <uprint>
 c20:	ldr	x8, [sp, #40]
 c24:	str	wzr, [x8, #16]
 c28:	ldr	x8, [sp, #40]
 c2c:	ldr	w0, [x8, #16]
 c30:	ldr	x28, [sp, #480]
 c34:	ldp	x29, x30, [sp, #464]
 c38:	add	sp, sp, #0x1f0
 c3c:	ret

0000000000000c40 <uprint>:
 c40:	sub	sp, sp, #0x30
 c44:	stp	x29, x30, [sp, #32]
 c48:	add	x29, sp, #0x20
 c4c:	adrp	x8, 12000 <builtin_error>
 c50:	add	x8, x8, #0xb4
 c54:	stur	w0, [x29, #-4]
 c58:	str	x1, [sp, #16]
 c5c:	ldr	w9, [x8]
 c60:	ldur	w10, [x29, #-4]
 c64:	and	w9, w9, w10
 c68:	str	x8, [sp, #8]
 c6c:	cbz	w9, ca8 <uprint+0x68>
 c70:	ldur	w8, [x29, #-4]
 c74:	ldr	x9, [sp, #8]
 c78:	ldr	w10, [x9]
 c7c:	bic	w8, w10, w8
 c80:	str	w8, [x9]
 c84:	ldr	x1, [sp, #16]
 c88:	ldr	w8, [x9]
 c8c:	mov	w10, #0xa                   	// #10
 c90:	mov	w11, #0x20                  	// #32
 c94:	cmp	w8, #0x0
 c98:	csel	w2, w11, w10, ne  // ne = any
 c9c:	adrp	x0, 0 <_init-0x7f8>
 ca0:	add	x0, x0, #0xd4f
 ca4:	bl	8b0 <printf@plt>
 ca8:	ldp	x29, x30, [sp, #32]
 cac:	add	sp, sp, #0x30
 cb0:	ret

Disassembly of section .fini:

0000000000000cb4 <_fini>:
 cb4:	stp	x29, x30, [sp, #-16]!
 cb8:	mov	x29, sp
 cbc:	ldp	x29, x30, [sp], #16
 cc0:	ret
