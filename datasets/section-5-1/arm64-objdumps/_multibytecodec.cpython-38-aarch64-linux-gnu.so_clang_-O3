
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_multibytecodec.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000028d0 <.init>:
    28d0:	stp	x29, x30, [sp, #-16]!
    28d4:	mov	x29, sp
    28d8:	bl	2dc0 <PyUnicode_Substring@plt+0x10>
    28dc:	ldp	x29, x30, [sp], #16
    28e0:	ret

Disassembly of section .plt:

00000000000028f0 <memcpy@plt-0x20>:
    28f0:	stp	x16, x30, [sp, #-16]!
    28f4:	adrp	x16, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    28f8:	ldr	x17, [x16, #4088]
    28fc:	add	x16, x16, #0xff8
    2900:	br	x17
    2904:	nop
    2908:	nop
    290c:	nop

0000000000002910 <memcpy@plt>:
    2910:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2914:	ldr	x17, [x16]
    2918:	add	x16, x16, #0x0
    291c:	br	x17

0000000000002920 <_PyUnicode_Ready@plt>:
    2920:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2924:	ldr	x17, [x16, #8]
    2928:	add	x16, x16, #0x8
    292c:	br	x17

0000000000002930 <PySequence_Check@plt>:
    2930:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2934:	ldr	x17, [x16, #16]
    2938:	add	x16, x16, #0x10
    293c:	br	x17

0000000000002940 <strlen@plt>:
    2940:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2944:	ldr	x17, [x16, #24]
    2948:	add	x16, x16, #0x18
    294c:	br	x17

0000000000002950 <PyUnicodeDecodeError_SetStart@plt>:
    2950:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2954:	ldr	x17, [x16, #32]
    2958:	add	x16, x16, #0x20
    295c:	br	x17

0000000000002960 <_PyBytes_Resize@plt>:
    2960:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2964:	ldr	x17, [x16, #40]
    2968:	add	x16, x16, #0x28
    296c:	br	x17

0000000000002970 <PyMem_Free@plt>:
    2970:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2974:	ldr	x17, [x16, #48]
    2978:	add	x16, x16, #0x30
    297c:	br	x17

0000000000002980 <PyBuffer_Release@plt>:
    2980:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2984:	ldr	x17, [x16, #56]
    2988:	add	x16, x16, #0x38
    298c:	br	x17

0000000000002990 <PyUnicodeEncodeError_SetReason@plt>:
    2990:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2994:	ldr	x17, [x16, #64]
    2998:	add	x16, x16, #0x40
    299c:	br	x17

00000000000029a0 <PyObject_GetAttrString@plt>:
    29a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29a4:	ldr	x17, [x16, #72]
    29a8:	add	x16, x16, #0x48
    29ac:	br	x17

00000000000029b0 <__cxa_finalize@plt>:
    29b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29b4:	ldr	x17, [x16, #80]
    29b8:	add	x16, x16, #0x50
    29bc:	br	x17

00000000000029c0 <PyBuffer_IsContiguous@plt>:
    29c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29c4:	ldr	x17, [x16, #88]
    29c8:	add	x16, x16, #0x58
    29cc:	br	x17

00000000000029d0 <PyBytes_FromStringAndSize@plt>:
    29d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29d4:	ldr	x17, [x16, #96]
    29d8:	add	x16, x16, #0x60
    29dc:	br	x17

00000000000029e0 <PyUnicodeEncodeError_SetStart@plt>:
    29e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29e4:	ldr	x17, [x16, #104]
    29e8:	add	x16, x16, #0x68
    29ec:	br	x17

00000000000029f0 <_Py_Dealloc@plt>:
    29f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    29f4:	ldr	x17, [x16, #112]
    29f8:	add	x16, x16, #0x70
    29fc:	br	x17

0000000000002a00 <PyUnicodeDecodeError_SetReason@plt>:
    2a00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a04:	ldr	x17, [x16, #120]
    2a08:	add	x16, x16, #0x78
    2a0c:	br	x17

0000000000002a10 <PyErr_NoMemory@plt>:
    2a10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a14:	ldr	x17, [x16, #128]
    2a18:	add	x16, x16, #0x80
    2a1c:	br	x17

0000000000002a20 <_PyObject_CallFunction_SizeT@plt>:
    2a20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a24:	ldr	x17, [x16, #136]
    2a28:	add	x16, x16, #0x88
    2a2c:	br	x17

0000000000002a30 <PyUnicodeEncodeError_SetEnd@plt>:
    2a30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a34:	ldr	x17, [x16, #144]
    2a38:	add	x16, x16, #0x90
    2a3c:	br	x17

0000000000002a40 <PyObject_Str@plt>:
    2a40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a44:	ldr	x17, [x16, #152]
    2a48:	add	x16, x16, #0x98
    2a4c:	br	x17

0000000000002a50 <PyUnicode_Append@plt>:
    2a50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x17, [x16, #160]
    2a58:	add	x16, x16, #0xa0
    2a5c:	br	x17

0000000000002a60 <_PyUnicodeWriter_Dealloc@plt>:
    2a60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x17, [x16, #168]
    2a68:	add	x16, x16, #0xa8
    2a6c:	br	x17

0000000000002a70 <_PyArg_UnpackKeywords@plt>:
    2a70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a74:	ldr	x17, [x16, #176]
    2a78:	add	x16, x16, #0xb0
    2a7c:	br	x17

0000000000002a80 <PyErr_SetString@plt>:
    2a80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x17, [x16, #184]
    2a88:	add	x16, x16, #0xb8
    2a8c:	br	x17

0000000000002a90 <_PyLong_FromByteArray@plt>:
    2a90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2a94:	ldr	x17, [x16, #192]
    2a98:	add	x16, x16, #0xc0
    2a9c:	br	x17

0000000000002aa0 <PySequence_GetItem@plt>:
    2aa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2aa4:	ldr	x17, [x16, #200]
    2aa8:	add	x16, x16, #0xc8
    2aac:	br	x17

0000000000002ab0 <_PyUnicodeWriter_Init@plt>:
    2ab0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ab4:	ldr	x17, [x16, #208]
    2ab8:	add	x16, x16, #0xd0
    2abc:	br	x17

0000000000002ac0 <PyObject_Free@plt>:
    2ac0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x17, [x16, #216]
    2ac8:	add	x16, x16, #0xd8
    2acc:	br	x17

0000000000002ad0 <PyLong_FromSsize_t@plt>:
    2ad0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16, #224]
    2ad8:	add	x16, x16, #0xe0
    2adc:	br	x17

0000000000002ae0 <PyType_Ready@plt>:
    2ae0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #232]
    2ae8:	add	x16, x16, #0xe8
    2aec:	br	x17

0000000000002af0 <PyLong_AsSsize_t@plt>:
    2af0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #240]
    2af8:	add	x16, x16, #0xf0
    2afc:	br	x17

0000000000002b00 <PyBytes_Size@plt>:
    2b00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #248]
    2b08:	add	x16, x16, #0xf8
    2b0c:	br	x17

0000000000002b10 <_PyArg_BadArgument@plt>:
    2b10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #256]
    2b18:	add	x16, x16, #0x100
    2b1c:	br	x17

0000000000002b20 <PySequence_Size@plt>:
    2b20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #264]
    2b28:	add	x16, x16, #0x108
    2b2c:	br	x17

0000000000002b30 <PyErr_Clear@plt>:
    2b30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #272]
    2b38:	add	x16, x16, #0x110
    2b3c:	br	x17

0000000000002b40 <PyCapsule_IsValid@plt>:
    2b40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #280]
    2b48:	add	x16, x16, #0x118
    2b4c:	br	x17

0000000000002b50 <__gmon_start__@plt>:
    2b50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #288]
    2b58:	add	x16, x16, #0x120
    2b5c:	br	x17

0000000000002b60 <PyCodec_StrictErrors@plt>:
    2b60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #296]
    2b68:	add	x16, x16, #0x128
    2b6c:	br	x17

0000000000002b70 <PyTuple_New@plt>:
    2b70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #304]
    2b78:	add	x16, x16, #0x130
    2b7c:	br	x17

0000000000002b80 <_PyArg_CheckPositional@plt>:
    2b80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #312]
    2b88:	add	x16, x16, #0x138
    2b8c:	br	x17

0000000000002b90 <PyErr_Occurred@plt>:
    2b90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #320]
    2b98:	add	x16, x16, #0x140
    2b9c:	br	x17

0000000000002ba0 <PyModule_Create2@plt>:
    2ba0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #328]
    2ba8:	add	x16, x16, #0x148
    2bac:	br	x17

0000000000002bb0 <PyUnicodeDecodeError_SetEnd@plt>:
    2bb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #336]
    2bb8:	add	x16, x16, #0x150
    2bbc:	br	x17

0000000000002bc0 <PyObject_CallObject@plt>:
    2bc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #344]
    2bc8:	add	x16, x16, #0x158
    2bcc:	br	x17

0000000000002bd0 <strcmp@plt>:
    2bd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #352]
    2bd8:	add	x16, x16, #0x160
    2bdc:	br	x17

0000000000002be0 <_PyObject_CallMethod_SizeT@plt>:
    2be0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #360]
    2be8:	add	x16, x16, #0x168
    2bec:	br	x17

0000000000002bf0 <_PyArg_ParseTuple_SizeT@plt>:
    2bf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #368]
    2bf8:	add	x16, x16, #0x170
    2bfc:	br	x17

0000000000002c00 <PyUnicode_DecodeUTF8@plt>:
    2c00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #376]
    2c08:	add	x16, x16, #0x178
    2c0c:	br	x17

0000000000002c10 <Py_FatalError@plt>:
    2c10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #384]
    2c18:	add	x16, x16, #0x180
    2c1c:	br	x17

0000000000002c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2c20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #392]
    2c28:	add	x16, x16, #0x188
    2c2c:	br	x17

0000000000002c30 <_PyUnicodeWriter_WriteStr@plt>:
    2c30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #400]
    2c38:	add	x16, x16, #0x190
    2c3c:	br	x17

0000000000002c40 <_PyUnicodeWriter_WriteChar@plt>:
    2c40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #408]
    2c48:	add	x16, x16, #0x198
    2c4c:	br	x17

0000000000002c50 <PyObject_GetBuffer@plt>:
    2c50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #416]
    2c58:	add	x16, x16, #0x1a0
    2c5c:	br	x17

0000000000002c60 <PyUnicode_AsUTF8@plt>:
    2c60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #424]
    2c68:	add	x16, x16, #0x1a8
    2c6c:	br	x17

0000000000002c70 <_PyObject_New@plt>:
    2c70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #432]
    2c78:	add	x16, x16, #0x1b0
    2c7c:	br	x17

0000000000002c80 <PyUnicode_FromString@plt>:
    2c80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #440]
    2c88:	add	x16, x16, #0x1b8
    2c8c:	br	x17

0000000000002c90 <_PyObject_CallMethodIdObjArgs@plt>:
    2c90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #448]
    2c98:	add	x16, x16, #0x1c0
    2c9c:	br	x17

0000000000002ca0 <PyModule_AddObject@plt>:
    2ca0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #456]
    2ca8:	add	x16, x16, #0x1c8
    2cac:	br	x17

0000000000002cb0 <PyBytes_AsString@plt>:
    2cb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #464]
    2cb8:	add	x16, x16, #0x1d0
    2cbc:	br	x17

0000000000002cc0 <PyType_IsSubtype@plt>:
    2cc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #472]
    2cc8:	add	x16, x16, #0x1d8
    2ccc:	br	x17

0000000000002cd0 <_PyLong_AsByteArray@plt>:
    2cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #480]
    2cd8:	add	x16, x16, #0x1e0
    2cdc:	br	x17

0000000000002ce0 <PyUnicode_AsUTF8AndSize@plt>:
    2ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #488]
    2ce8:	add	x16, x16, #0x1e8
    2cec:	br	x17

0000000000002cf0 <PyErr_Format@plt>:
    2cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #496]
    2cf8:	add	x16, x16, #0x1f0
    2cfc:	br	x17

0000000000002d00 <PyCapsule_GetPointer@plt>:
    2d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #504]
    2d08:	add	x16, x16, #0x1f8
    2d0c:	br	x17

0000000000002d10 <_Py_BuildValue_SizeT@plt>:
    2d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #512]
    2d18:	add	x16, x16, #0x200
    2d1c:	br	x17

0000000000002d20 <PyUnicode_FromOrdinal@plt>:
    2d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #520]
    2d28:	add	x16, x16, #0x208
    2d2c:	br	x17

0000000000002d30 <PyUnicodeDecodeError_Create@plt>:
    2d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #528]
    2d38:	add	x16, x16, #0x210
    2d3c:	br	x17

0000000000002d40 <_PyLong_AsInt@plt>:
    2d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #536]
    2d48:	add	x16, x16, #0x218
    2d4c:	br	x17

0000000000002d50 <_PyUnicodeWriter_Finish@plt>:
    2d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #544]
    2d58:	add	x16, x16, #0x220
    2d5c:	br	x17

0000000000002d60 <PyUnicode_Splitlines@plt>:
    2d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #552]
    2d68:	add	x16, x16, #0x228
    2d6c:	br	x17

0000000000002d70 <PyMem_Malloc@plt>:
    2d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #560]
    2d78:	add	x16, x16, #0x230
    2d7c:	br	x17

0000000000002d80 <PyUnicode_New@plt>:
    2d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #568]
    2d88:	add	x16, x16, #0x238
    2d8c:	br	x17

0000000000002d90 <PyCodec_LookupError@plt>:
    2d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #576]
    2d98:	add	x16, x16, #0x240
    2d9c:	br	x17

0000000000002da0 <PyObject_GC_UnTrack@plt>:
    2da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #584]
    2da8:	add	x16, x16, #0x248
    2dac:	br	x17

0000000000002db0 <PyUnicode_Substring@plt>:
    2db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #592]
    2db8:	add	x16, x16, #0x250
    2dbc:	br	x17

Disassembly of section .text:

0000000000002dc0 <PyInit__multibytecodec@@Base-0xd4>:
    2dc0:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    2dc4:	ldr	x0, [x0, #4008]
    2dc8:	cbz	x0, 2dd0 <PyUnicode_Substring@plt+0x20>
    2dcc:	b	2b50 <__gmon_start__@plt>
    2dd0:	ret
    2dd4:	nop
    2dd8:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1616c>
    2ddc:	add	x0, x0, #0x18
    2de0:	adrp	x1, 19000 <PyInit__multibytecodec@@Base+0x1616c>
    2de4:	add	x1, x1, #0x18
    2de8:	cmp	x1, x0
    2dec:	b.eq	2e04 <PyUnicode_Substring@plt+0x54>  // b.none
    2df0:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    2df4:	ldr	x1, [x1, #3960]
    2df8:	cbz	x1, 2e04 <PyUnicode_Substring@plt+0x54>
    2dfc:	mov	x16, x1
    2e00:	br	x16
    2e04:	ret
    2e08:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1616c>
    2e0c:	add	x0, x0, #0x18
    2e10:	adrp	x1, 19000 <PyInit__multibytecodec@@Base+0x1616c>
    2e14:	add	x1, x1, #0x18
    2e18:	sub	x1, x1, x0
    2e1c:	lsr	x2, x1, #63
    2e20:	add	x1, x2, x1, asr #3
    2e24:	cmp	xzr, x1, asr #1
    2e28:	asr	x1, x1, #1
    2e2c:	b.eq	2e44 <PyUnicode_Substring@plt+0x94>  // b.none
    2e30:	adrp	x2, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    2e34:	ldr	x2, [x2, #4064]
    2e38:	cbz	x2, 2e44 <PyUnicode_Substring@plt+0x94>
    2e3c:	mov	x16, x2
    2e40:	br	x16
    2e44:	ret
    2e48:	stp	x29, x30, [sp, #-32]!
    2e4c:	mov	x29, sp
    2e50:	str	x19, [sp, #16]
    2e54:	adrp	x19, 19000 <PyInit__multibytecodec@@Base+0x1616c>
    2e58:	ldrb	w0, [x19, #24]
    2e5c:	cbnz	w0, 2e84 <PyUnicode_Substring@plt+0xd4>
    2e60:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    2e64:	ldr	x0, [x0, #3976]
    2e68:	cbz	x0, 2e78 <PyUnicode_Substring@plt+0xc8>
    2e6c:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2e70:	ldr	x0, [x0, #600]
    2e74:	bl	29b0 <__cxa_finalize@plt>
    2e78:	bl	2dd8 <PyUnicode_Substring@plt+0x28>
    2e7c:	mov	w0, #0x1                   	// #1
    2e80:	strb	w0, [x19, #24]
    2e84:	ldr	x19, [sp, #16]
    2e88:	ldp	x29, x30, [sp], #32
    2e8c:	ret
    2e90:	b	2e08 <PyUnicode_Substring@plt+0x58>

0000000000002e94 <PyInit__multibytecodec@@Base>:
    2e94:	stp	x29, x30, [sp, #-32]!
    2e98:	stp	x20, x19, [sp, #16]
    2e9c:	mov	x29, sp
    2ea0:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2ea4:	add	x0, x0, #0xe78
    2ea8:	bl	2ae0 <PyType_Ready@plt>
    2eac:	tbnz	w0, #31, 2f9c <PyInit__multibytecodec@@Base+0x108>
    2eb0:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2eb4:	add	x0, x0, #0x790
    2eb8:	mov	w1, #0x3f5                 	// #1013
    2ebc:	bl	2ba0 <PyModule_Create2@plt>
    2ec0:	mov	x19, x0
    2ec4:	cbz	x0, 2f8c <PyInit__multibytecodec@@Base+0xf8>
    2ec8:	adrp	x20, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2ecc:	add	x20, x20, #0x7f8
    2ed0:	mov	x0, x20
    2ed4:	bl	2ae0 <PyType_Ready@plt>
    2ed8:	tbnz	w0, #31, 2f9c <PyInit__multibytecodec@@Base+0x108>
    2edc:	ldr	x8, [x20]
    2ee0:	ldr	x1, [x20, #24]
    2ee4:	mov	x0, x19
    2ee8:	mov	x2, x20
    2eec:	add	x8, x8, #0x1
    2ef0:	str	x8, [x20]
    2ef4:	bl	2ca0 <PyModule_AddObject@plt>
    2ef8:	add	x0, x20, #0x1a0
    2efc:	bl	2ae0 <PyType_Ready@plt>
    2f00:	tbnz	w0, #31, 2f9c <PyInit__multibytecodec@@Base+0x108>
    2f04:	adrp	x20, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2f08:	add	x20, x20, #0x998
    2f0c:	ldr	x8, [x20]
    2f10:	ldr	x1, [x20, #24]
    2f14:	mov	x0, x19
    2f18:	mov	x2, x20
    2f1c:	add	x8, x8, #0x1
    2f20:	str	x8, [x20]
    2f24:	bl	2ca0 <PyModule_AddObject@plt>
    2f28:	add	x0, x20, #0x1a0
    2f2c:	bl	2ae0 <PyType_Ready@plt>
    2f30:	tbnz	w0, #31, 2f9c <PyInit__multibytecodec@@Base+0x108>
    2f34:	adrp	x20, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2f38:	add	x20, x20, #0xb38
    2f3c:	ldr	x8, [x20]
    2f40:	ldr	x1, [x20, #24]
    2f44:	mov	x0, x19
    2f48:	mov	x2, x20
    2f4c:	add	x8, x8, #0x1
    2f50:	str	x8, [x20]
    2f54:	bl	2ca0 <PyModule_AddObject@plt>
    2f58:	add	x0, x20, #0x1a0
    2f5c:	bl	2ae0 <PyType_Ready@plt>
    2f60:	tbnz	w0, #31, 2f9c <PyInit__multibytecodec@@Base+0x108>
    2f64:	adrp	x2, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    2f68:	add	x2, x2, #0xcd8
    2f6c:	ldr	x8, [x2]
    2f70:	ldr	x1, [x2, #24]
    2f74:	mov	x0, x19
    2f78:	add	x8, x8, #0x1
    2f7c:	str	x8, [x2]
    2f80:	bl	2ca0 <PyModule_AddObject@plt>
    2f84:	bl	2b90 <PyErr_Occurred@plt>
    2f88:	cbnz	x0, 2fb0 <PyInit__multibytecodec@@Base+0x11c>
    2f8c:	mov	x0, x19
    2f90:	ldp	x20, x19, [sp, #16]
    2f94:	ldp	x29, x30, [sp], #32
    2f98:	ret
    2f9c:	mov	x19, xzr
    2fa0:	mov	x0, x19
    2fa4:	ldp	x20, x19, [sp, #16]
    2fa8:	ldp	x29, x30, [sp], #32
    2fac:	ret
    2fb0:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    2fb4:	add	x0, x0, #0x9cd
    2fb8:	bl	2c10 <Py_FatalError@plt>
    2fbc:	stp	x29, x30, [sp, #-32]!
    2fc0:	str	x19, [sp, #16]
    2fc4:	mov	x29, sp
    2fc8:	mov	x19, x0
    2fcc:	bl	2da0 <PyObject_GC_UnTrack@plt>
    2fd0:	ldr	x0, [x19, #32]
    2fd4:	cbz	x0, 2ff8 <PyInit__multibytecodec@@Base+0x164>
    2fd8:	cbz	x0, 2fe4 <PyInit__multibytecodec@@Base+0x150>
    2fdc:	cmp	x0, #0x4
    2fe0:	b.cc	2ff8 <PyInit__multibytecodec@@Base+0x164>  // b.lo, b.ul, b.last
    2fe4:	ldr	x8, [x0]
    2fe8:	subs	x8, x8, #0x1
    2fec:	str	x8, [x0]
    2ff0:	b.ne	2ff8 <PyInit__multibytecodec@@Base+0x164>  // b.any
    2ff4:	bl	29f0 <_Py_Dealloc@plt>
    2ff8:	ldr	x0, [x19, #40]
    2ffc:	cbz	x0, 3018 <PyInit__multibytecodec@@Base+0x184>
    3000:	str	xzr, [x19, #40]
    3004:	ldr	x8, [x0]
    3008:	subs	x8, x8, #0x1
    300c:	str	x8, [x0]
    3010:	b.ne	3018 <PyInit__multibytecodec@@Base+0x184>  // b.any
    3014:	bl	29f0 <_Py_Dealloc@plt>
    3018:	ldr	x8, [x19, #8]
    301c:	mov	x0, x19
    3020:	ldr	x19, [sp, #16]
    3024:	ldr	x1, [x8, #320]
    3028:	ldp	x29, x30, [sp], #32
    302c:	br	x1
    3030:	stp	x29, x30, [sp, #-16]!
    3034:	mov	x29, sp
    3038:	ldr	x0, [x0, #32]
    303c:	cmp	x0, #0x0
    3040:	cset	w9, ne  // ne = any
    3044:	cmp	x0, #0x4
    3048:	cset	w10, cc  // cc = lo, ul, last
    304c:	cbz	x0, 3070 <PyInit__multibytecodec@@Base+0x1dc>
    3050:	and	w9, w10, w9
    3054:	tbnz	w9, #0, 3070 <PyInit__multibytecodec@@Base+0x1dc>
    3058:	mov	x8, x1
    305c:	mov	x1, x2
    3060:	blr	x8
    3064:	cbz	w0, 3070 <PyInit__multibytecodec@@Base+0x1dc>
    3068:	ldp	x29, x30, [sp], #16
    306c:	ret
    3070:	mov	w0, wzr
    3074:	ldp	x29, x30, [sp], #16
    3078:	ret
    307c:	mov	w0, wzr
    3080:	ret
    3084:	sub	sp, sp, #0x40
    3088:	stp	x29, x30, [sp, #16]
    308c:	stp	x22, x21, [sp, #32]
    3090:	stp	x20, x19, [sp, #48]
    3094:	add	x29, sp, #0x10
    3098:	mov	x8, x2
    309c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    30a0:	adrp	x3, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    30a4:	mov	x20, x0
    30a8:	add	x2, x2, #0xbe4
    30ac:	add	x3, x3, #0x768
    30b0:	add	x4, sp, #0x8
    30b4:	mov	x0, x1
    30b8:	mov	x1, x8
    30bc:	str	xzr, [sp, #8]
    30c0:	bl	2c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    30c4:	cbz	w0, 3158 <PyInit__multibytecodec@@Base+0x2c4>
    30c8:	ldr	x8, [x20, #304]
    30cc:	mov	x0, x20
    30d0:	mov	x1, xzr
    30d4:	blr	x8
    30d8:	mov	x19, x0
    30dc:	cbz	x0, 315c <PyInit__multibytecodec@@Base+0x2c8>
    30e0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    30e4:	add	x1, x1, #0xe3f
    30e8:	mov	x0, x20
    30ec:	bl	29a0 <PyObject_GetAttrString@plt>
    30f0:	mov	x20, x0
    30f4:	cbz	x0, 3124 <PyInit__multibytecodec@@Base+0x290>
    30f8:	ldr	x8, [x20, #8]
    30fc:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    3100:	add	x9, x9, #0xe78
    3104:	cmp	x8, x9
    3108:	b.eq	3174 <PyInit__multibytecodec@@Base+0x2e0>  // b.none
    310c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3110:	ldr	x8, [x8, #4000]
    3114:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3118:	add	x1, x1, #0xbfa
    311c:	ldr	x0, [x8]
    3120:	bl	2a80 <PyErr_SetString@plt>
    3124:	ldr	x8, [x19]
    3128:	subs	x8, x8, #0x1
    312c:	str	x8, [x19]
    3130:	b.ne	313c <PyInit__multibytecodec@@Base+0x2a8>  // b.any
    3134:	mov	x0, x19
    3138:	bl	29f0 <_Py_Dealloc@plt>
    313c:	cbz	x20, 3158 <PyInit__multibytecodec@@Base+0x2c4>
    3140:	ldr	x8, [x20]
    3144:	subs	x8, x8, #0x1
    3148:	str	x8, [x20]
    314c:	b.ne	3158 <PyInit__multibytecodec@@Base+0x2c4>  // b.any
    3150:	mov	x0, x20
    3154:	bl	29f0 <_Py_Dealloc@plt>
    3158:	mov	x19, xzr
    315c:	mov	x0, x19
    3160:	ldp	x20, x19, [sp, #48]
    3164:	ldp	x22, x21, [sp, #32]
    3168:	ldp	x29, x30, [sp, #16]
    316c:	add	sp, sp, #0x40
    3170:	ret
    3174:	ldr	x22, [x20, #16]
    3178:	str	xzr, [x19, #40]
    317c:	str	x22, [x19, #16]
    3180:	ldr	x21, [sp, #8]
    3184:	cbz	x21, 31dc <PyInit__multibytecodec@@Base+0x348>
    3188:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    318c:	add	x1, x1, #0xb8a
    3190:	mov	x0, x21
    3194:	bl	2bd0 <strcmp@plt>
    3198:	cbz	w0, 31dc <PyInit__multibytecodec@@Base+0x348>
    319c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    31a0:	add	x1, x1, #0xba5
    31a4:	mov	x0, x21
    31a8:	bl	2bd0 <strcmp@plt>
    31ac:	cbz	w0, 3218 <PyInit__multibytecodec@@Base+0x384>
    31b0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    31b4:	add	x1, x1, #0xbac
    31b8:	mov	x0, x21
    31bc:	bl	2bd0 <strcmp@plt>
    31c0:	cbz	w0, 3220 <PyInit__multibytecodec@@Base+0x38c>
    31c4:	mov	x0, x21
    31c8:	bl	2c80 <PyUnicode_FromString@plt>
    31cc:	str	x0, [x19, #32]
    31d0:	cbz	x0, 3124 <PyInit__multibytecodec@@Base+0x290>
    31d4:	ldr	x22, [x19, #16]
    31d8:	b	31e4 <PyInit__multibytecodec@@Base+0x350>
    31dc:	mov	w8, #0x1                   	// #1
    31e0:	str	x8, [x19, #32]
    31e4:	ldr	x8, [x22, #32]
    31e8:	cbz	x8, 31fc <PyInit__multibytecodec@@Base+0x368>
    31ec:	ldr	x1, [x22, #8]
    31f0:	add	x0, x19, #0x18
    31f4:	blr	x8
    31f8:	cbnz	w0, 3124 <PyInit__multibytecodec@@Base+0x290>
    31fc:	ldr	x8, [x20]
    3200:	subs	x8, x8, #0x1
    3204:	str	x8, [x20]
    3208:	b.ne	315c <PyInit__multibytecodec@@Base+0x2c8>  // b.any
    320c:	mov	x0, x20
    3210:	bl	29f0 <_Py_Dealloc@plt>
    3214:	b	315c <PyInit__multibytecodec@@Base+0x2c8>
    3218:	mov	w8, #0x2                   	// #2
    321c:	b	31e0 <PyInit__multibytecodec@@Base+0x34c>
    3220:	mov	w8, #0x3                   	// #3
    3224:	b	31e0 <PyInit__multibytecodec@@Base+0x34c>
    3228:	sub	sp, sp, #0x50
    322c:	stp	x29, x30, [sp, #32]
    3230:	str	x21, [sp, #48]
    3234:	stp	x20, x19, [sp, #64]
    3238:	add	x29, sp, #0x20
    323c:	mov	x20, x1
    3240:	mov	x19, x0
    3244:	cbz	x3, 328c <PyInit__multibytecodec@@Base+0x3f8>
    3248:	ldr	x8, [x3, #16]
    324c:	add	x21, x8, x2
    3250:	adrp	x4, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    3254:	add	x8, sp, #0x10
    3258:	add	x4, x4, #0x350
    325c:	mov	w5, #0x1                   	// #1
    3260:	mov	w6, #0x2                   	// #2
    3264:	mov	x0, x20
    3268:	mov	x1, x2
    326c:	mov	x2, xzr
    3270:	mov	w7, wzr
    3274:	str	x8, [sp]
    3278:	bl	2a70 <_PyArg_UnpackKeywords@plt>
    327c:	mov	x20, x0
    3280:	mov	x2, x21
    3284:	cbnz	x0, 32a4 <PyInit__multibytecodec@@Base+0x410>
    3288:	b	3308 <PyInit__multibytecodec@@Base+0x474>
    328c:	mov	x21, x2
    3290:	cbz	x20, 3250 <PyInit__multibytecodec@@Base+0x3bc>
    3294:	sub	x8, x2, #0x1
    3298:	cmp	x8, #0x2
    329c:	mov	x21, x2
    32a0:	b.cs	3250 <PyInit__multibytecodec@@Base+0x3bc>  // b.hs, b.nlast
    32a4:	ldr	x21, [x20]
    32a8:	cmp	x2, #0x1
    32ac:	b.ne	32c4 <PyInit__multibytecodec@@Base+0x430>  // b.any
    32b0:	mov	w2, wzr
    32b4:	mov	x0, x19
    32b8:	mov	x1, x21
    32bc:	bl	35a0 <PyInit__multibytecodec@@Base+0x70c>
    32c0:	b	3308 <PyInit__multibytecodec@@Base+0x474>
    32c4:	ldr	x8, [x20, #8]
    32c8:	ldr	x0, [x8, #8]
    32cc:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    32d0:	ldr	x8, [x8, #3968]
    32d4:	cmp	x0, x8
    32d8:	b.eq	32ec <PyInit__multibytecodec@@Base+0x458>  // b.none
    32dc:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    32e0:	ldr	x1, [x1, #3968]
    32e4:	bl	2cc0 <PyType_IsSubtype@plt>
    32e8:	cbz	w0, 331c <PyInit__multibytecodec@@Base+0x488>
    32ec:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    32f0:	ldr	x8, [x8, #4000]
    32f4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    32f8:	add	x1, x1, #0xa40
    32fc:	ldr	x0, [x8]
    3300:	bl	2a80 <PyErr_SetString@plt>
    3304:	mov	x0, xzr
    3308:	ldp	x20, x19, [sp, #64]
    330c:	ldr	x21, [sp, #48]
    3310:	ldp	x29, x30, [sp, #32]
    3314:	add	sp, sp, #0x50
    3318:	ret
    331c:	ldr	x0, [x20, #8]
    3320:	bl	2d40 <_PyLong_AsInt@plt>
    3324:	mov	w2, w0
    3328:	cmn	w0, #0x1
    332c:	b.ne	32b4 <PyInit__multibytecodec@@Base+0x420>  // b.any
    3330:	bl	2b90 <PyErr_Occurred@plt>
    3334:	cbnz	x0, 3304 <PyInit__multibytecodec@@Base+0x470>
    3338:	mov	w2, #0xffffffff            	// #-1
    333c:	b	32b4 <PyInit__multibytecodec@@Base+0x420>
    3340:	sub	sp, sp, #0x40
    3344:	stp	x29, x30, [sp, #32]
    3348:	stp	x20, x19, [sp, #48]
    334c:	add	x29, sp, #0x20
    3350:	mov	x19, x0
    3354:	ldr	x0, [x0, #40]
    3358:	cbz	x0, 33a0 <PyInit__multibytecodec@@Base+0x50c>
    335c:	mov	x1, sp
    3360:	bl	2ce0 <PyUnicode_AsUTF8AndSize@plt>
    3364:	cbz	x0, 3390 <PyInit__multibytecodec@@Base+0x4fc>
    3368:	ldr	x20, [sp]
    336c:	cmp	x20, #0x9
    3370:	b.lt	33ac <PyInit__multibytecodec@@Base+0x518>  // b.tstop
    3374:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3378:	ldr	x8, [x8, #4048]
    337c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3380:	add	x1, x1, #0xb6d
    3384:	ldr	x0, [x8]
    3388:	bl	2a80 <PyErr_SetString@plt>
    338c:	mov	x0, xzr
    3390:	ldp	x20, x19, [sp, #48]
    3394:	ldp	x29, x30, [sp, #32]
    3398:	add	sp, sp, #0x40
    339c:	ret
    33a0:	mov	w8, #0x1                   	// #1
    33a4:	strb	wzr, [sp, #12]
    33a8:	b	33c8 <PyInit__multibytecodec@@Base+0x534>
    33ac:	add	x8, sp, #0xc
    33b0:	mov	x1, x0
    33b4:	orr	x0, x8, #0x1
    33b8:	mov	x2, x20
    33bc:	strb	w20, [sp, #12]
    33c0:	bl	2910 <memcpy@plt>
    33c4:	add	x8, x20, #0x1
    33c8:	ldr	x9, [x19, #24]
    33cc:	add	x10, sp, #0xc
    33d0:	add	x1, x8, #0x8
    33d4:	add	x0, sp, #0xc
    33d8:	mov	w2, #0x1                   	// #1
    33dc:	mov	w3, wzr
    33e0:	str	x9, [x10, x8]
    33e4:	bl	2a90 <_PyLong_FromByteArray@plt>
    33e8:	ldp	x20, x19, [sp, #48]
    33ec:	ldp	x29, x30, [sp, #32]
    33f0:	add	sp, sp, #0x40
    33f4:	ret
    33f8:	sub	sp, sp, #0x50
    33fc:	stp	x29, x30, [sp, #32]
    3400:	str	x21, [sp, #48]
    3404:	stp	x20, x19, [sp, #64]
    3408:	add	x29, sp, #0x20
    340c:	ldr	x9, [x1, #8]
    3410:	mov	x8, x1
    3414:	ldrb	w9, [x9, #171]
    3418:	tbnz	w9, #0, 3444 <PyInit__multibytecodec@@Base+0x5b0>
    341c:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3420:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3424:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3428:	add	x0, x0, #0xa25
    342c:	add	x1, x1, #0xcae
    3430:	add	x2, x2, #0xb86
    3434:	mov	x3, x8
    3438:	bl	2b10 <_PyArg_BadArgument@plt>
    343c:	mov	x0, xzr
    3440:	b	34f4 <PyInit__multibytecodec@@Base+0x660>
    3444:	mov	x19, x0
    3448:	add	x1, sp, #0xc
    344c:	mov	w2, #0x11                  	// #17
    3450:	mov	w3, #0x1                   	// #1
    3454:	mov	x0, x8
    3458:	mov	w4, wzr
    345c:	bl	2cd0 <_PyLong_AsByteArray@plt>
    3460:	tbnz	w0, #31, 3488 <PyInit__multibytecodec@@Base+0x5f4>
    3464:	ldrb	w1, [sp, #12]
    3468:	cmp	x1, #0x9
    346c:	b.cc	3490 <PyInit__multibytecodec@@Base+0x5fc>  // b.lo, b.ul, b.last
    3470:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3474:	ldr	x8, [x8, #4048]
    3478:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    347c:	add	x1, x1, #0xb6d
    3480:	ldr	x0, [x8]
    3484:	bl	2a80 <PyErr_SetString@plt>
    3488:	mov	x0, xzr
    348c:	b	34f4 <PyInit__multibytecodec@@Base+0x660>
    3490:	add	x8, sp, #0xc
    3494:	orr	x20, x8, #0x1
    3498:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    349c:	add	x2, x2, #0xb8a
    34a0:	mov	x0, x20
    34a4:	bl	2c00 <PyUnicode_DecodeUTF8@plt>
    34a8:	cbz	x0, 34f4 <PyInit__multibytecodec@@Base+0x660>
    34ac:	mov	x21, x0
    34b0:	ldr	x0, [x19, #40]
    34b4:	cbz	x0, 34d0 <PyInit__multibytecodec@@Base+0x63c>
    34b8:	str	xzr, [x19, #40]
    34bc:	ldr	x8, [x0]
    34c0:	subs	x8, x8, #0x1
    34c4:	str	x8, [x0]
    34c8:	b.ne	34d0 <PyInit__multibytecodec@@Base+0x63c>  // b.any
    34cc:	bl	29f0 <_Py_Dealloc@plt>
    34d0:	str	x21, [x19, #40]
    34d4:	ldrb	w8, [sp, #12]
    34d8:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    34dc:	ldr	x8, [x20, x8]
    34e0:	str	x8, [x19, #24]
    34e4:	ldr	x0, [x0, #4016]
    34e8:	ldr	x8, [x0]
    34ec:	add	x8, x8, #0x1
    34f0:	str	x8, [x0]
    34f4:	ldp	x20, x19, [sp, #64]
    34f8:	ldr	x21, [sp, #48]
    34fc:	ldp	x29, x30, [sp, #32]
    3500:	add	sp, sp, #0x50
    3504:	ret
    3508:	sub	sp, sp, #0x30
    350c:	stp	x29, x30, [sp, #16]
    3510:	str	x19, [sp, #32]
    3514:	add	x29, sp, #0x10
    3518:	ldr	x9, [x0, #16]
    351c:	mov	x19, x0
    3520:	ldr	x8, [x9, #40]
    3524:	cbz	x8, 355c <PyInit__multibytecodec@@Base+0x6c8>
    3528:	add	x10, x29, #0x1c
    352c:	str	x10, [sp, #8]
    3530:	ldr	x1, [x9, #8]
    3534:	add	x0, x19, #0x18
    3538:	add	x2, sp, #0x8
    353c:	mov	w3, #0x4                   	// #4
    3540:	blr	x8
    3544:	cbz	x0, 355c <PyInit__multibytecodec@@Base+0x6c8>
    3548:	mov	x0, xzr
    354c:	ldr	x19, [sp, #32]
    3550:	ldp	x29, x30, [sp, #16]
    3554:	add	sp, sp, #0x30
    3558:	ret
    355c:	ldr	x0, [x19, #40]
    3560:	cbz	x0, 357c <PyInit__multibytecodec@@Base+0x6e8>
    3564:	str	xzr, [x19, #40]
    3568:	ldr	x8, [x0]
    356c:	subs	x8, x8, #0x1
    3570:	str	x8, [x0]
    3574:	b.ne	357c <PyInit__multibytecodec@@Base+0x6e8>  // b.any
    3578:	bl	29f0 <_Py_Dealloc@plt>
    357c:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3580:	ldr	x0, [x0, #4016]
    3584:	ldr	x8, [x0]
    3588:	add	x8, x8, #0x1
    358c:	str	x8, [x0]
    3590:	ldr	x19, [sp, #32]
    3594:	ldp	x29, x30, [sp, #16]
    3598:	add	sp, sp, #0x30
    359c:	ret
    35a0:	sub	sp, sp, #0x50
    35a4:	stp	x29, x30, [sp, #16]
    35a8:	stp	x24, x23, [sp, #32]
    35ac:	stp	x22, x21, [sp, #48]
    35b0:	stp	x20, x19, [sp, #64]
    35b4:	add	x29, sp, #0x10
    35b8:	ldr	x8, [x1, #8]
    35bc:	mov	w23, w2
    35c0:	mov	x20, x1
    35c4:	mov	x22, x0
    35c8:	ldrb	w8, [x8, #171]
    35cc:	tbnz	w8, #4, 361c <PyInit__multibytecodec@@Base+0x788>
    35d0:	mov	x0, x20
    35d4:	bl	2a40 <PyObject_Str@plt>
    35d8:	cbz	x0, 3820 <PyInit__multibytecodec@@Base+0x98c>
    35dc:	ldr	x8, [x0, #8]
    35e0:	mov	x19, x0
    35e4:	ldrb	w8, [x8, #171]
    35e8:	tbnz	w8, #4, 367c <PyInit__multibytecodec@@Base+0x7e8>
    35ec:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    35f0:	ldr	x8, [x8, #4000]
    35f4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    35f8:	add	x1, x1, #0xa65
    35fc:	ldr	x0, [x8]
    3600:	bl	2a80 <PyErr_SetString@plt>
    3604:	ldr	x8, [x19]
    3608:	subs	x8, x8, #0x1
    360c:	str	x8, [x19]
    3610:	b.ne	3820 <PyInit__multibytecodec@@Base+0x98c>  // b.any
    3614:	mov	x0, x19
    3618:	b	381c <PyInit__multibytecodec@@Base+0x988>
    361c:	mov	x19, xzr
    3620:	ldr	x21, [x22, #40]
    3624:	cbz	x21, 3688 <PyInit__multibytecodec@@Base+0x7f4>
    3628:	ldr	x8, [x21]
    362c:	add	x0, sp, #0x8
    3630:	mov	x1, x20
    3634:	add	x8, x8, #0x2
    3638:	str	x8, [x21]
    363c:	str	x21, [sp, #8]
    3640:	bl	2a50 <PyUnicode_Append@plt>
    3644:	ldr	x20, [sp, #8]
    3648:	cbz	x20, 37cc <PyInit__multibytecodec@@Base+0x938>
    364c:	ldr	x0, [x22, #40]
    3650:	cbz	x0, 3670 <PyInit__multibytecodec@@Base+0x7dc>
    3654:	str	xzr, [x22, #40]
    3658:	ldr	x8, [x0]
    365c:	subs	x8, x8, #0x1
    3660:	str	x8, [x0]
    3664:	b.ne	3670 <PyInit__multibytecodec@@Base+0x7dc>  // b.any
    3668:	bl	29f0 <_Py_Dealloc@plt>
    366c:	ldr	x20, [sp, #8]
    3670:	ldrb	w8, [x20, #32]
    3674:	tbz	w8, #7, 369c <PyInit__multibytecodec@@Base+0x808>
    3678:	b	36a8 <PyInit__multibytecodec@@Base+0x814>
    367c:	mov	x20, x19
    3680:	ldr	x21, [x22, #40]
    3684:	cbnz	x21, 3628 <PyInit__multibytecodec@@Base+0x794>
    3688:	ldr	x8, [x20]
    368c:	add	x8, x8, #0x1
    3690:	str	x8, [x20]
    3694:	ldrb	w8, [x20, #32]
    3698:	tbnz	w8, #7, 36a8 <PyInit__multibytecodec@@Base+0x814>
    369c:	mov	x0, x20
    36a0:	bl	2920 <_PyUnicode_Ready@plt>
    36a4:	tbnz	w0, #31, 37cc <PyInit__multibytecodec@@Base+0x938>
    36a8:	str	xzr, [sp, #8]
    36ac:	ldr	x0, [x22, #16]
    36b0:	ldr	x4, [x22, #32]
    36b4:	ldr	x24, [x20, #16]
    36b8:	cmp	w23, #0x0
    36bc:	mov	w8, #0x3                   	// #3
    36c0:	add	x1, x22, #0x18
    36c4:	csel	w5, wzr, w8, eq  // eq = none
    36c8:	add	x3, sp, #0x8
    36cc:	mov	x2, x20
    36d0:	bl	3850 <PyInit__multibytecodec@@Base+0x9bc>
    36d4:	cbz	x0, 3720 <PyInit__multibytecodec@@Base+0x88c>
    36d8:	mov	x23, x0
    36dc:	cbz	x21, 36f0 <PyInit__multibytecodec@@Base+0x85c>
    36e0:	ldr	x8, [x21]
    36e4:	subs	x8, x8, #0x1
    36e8:	str	x8, [x21]
    36ec:	b.eq	377c <PyInit__multibytecodec@@Base+0x8e8>  // b.none
    36f0:	ldr	x1, [sp, #8]
    36f4:	subs	x8, x24, x1
    36f8:	b.le	3790 <PyInit__multibytecodec@@Base+0x8fc>
    36fc:	cmp	x8, #0x3
    3700:	b.lt	3748 <PyInit__multibytecodec@@Base+0x8b4>  // b.tstop
    3704:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3708:	ldr	x8, [x8, #4048]
    370c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3710:	add	x1, x1, #0xa89
    3714:	ldr	x0, [x8]
    3718:	bl	2a80 <PyErr_SetString@plt>
    371c:	b	375c <PyInit__multibytecodec@@Base+0x8c8>
    3720:	ldr	x0, [x22, #40]
    3724:	str	x21, [x22, #40]
    3728:	cbz	x0, 37c8 <PyInit__multibytecodec@@Base+0x934>
    372c:	ldr	x8, [x0]
    3730:	subs	x8, x8, #0x1
    3734:	str	x8, [x0]
    3738:	b.eq	3840 <PyInit__multibytecodec@@Base+0x9ac>  // b.none
    373c:	mov	x21, xzr
    3740:	cbnz	x19, 37d0 <PyInit__multibytecodec@@Base+0x93c>
    3744:	b	37e8 <PyInit__multibytecodec@@Base+0x954>
    3748:	mov	x0, x20
    374c:	mov	x2, x24
    3750:	bl	2db0 <PyUnicode_Substring@plt>
    3754:	str	x0, [x22, #40]
    3758:	cbnz	x0, 3790 <PyInit__multibytecodec@@Base+0x8fc>
    375c:	ldr	x8, [x23]
    3760:	subs	x8, x8, #0x1
    3764:	str	x8, [x23]
    3768:	b.ne	37cc <PyInit__multibytecodec@@Base+0x938>  // b.any
    376c:	mov	x0, x23
    3770:	bl	29f0 <_Py_Dealloc@plt>
    3774:	cbnz	x19, 37d0 <PyInit__multibytecodec@@Base+0x93c>
    3778:	b	37e8 <PyInit__multibytecodec@@Base+0x954>
    377c:	mov	x0, x21
    3780:	bl	29f0 <_Py_Dealloc@plt>
    3784:	ldr	x1, [sp, #8]
    3788:	subs	x8, x24, x1
    378c:	b.gt	36fc <PyInit__multibytecodec@@Base+0x868>
    3790:	ldr	x8, [x20]
    3794:	subs	x8, x8, #0x1
    3798:	str	x8, [x20]
    379c:	b.ne	37a8 <PyInit__multibytecodec@@Base+0x914>  // b.any
    37a0:	mov	x0, x20
    37a4:	bl	29f0 <_Py_Dealloc@plt>
    37a8:	cbz	x19, 3824 <PyInit__multibytecodec@@Base+0x990>
    37ac:	ldr	x8, [x19]
    37b0:	subs	x8, x8, #0x1
    37b4:	str	x8, [x19]
    37b8:	b.ne	3824 <PyInit__multibytecodec@@Base+0x990>  // b.any
    37bc:	mov	x0, x19
    37c0:	bl	29f0 <_Py_Dealloc@plt>
    37c4:	b	3824 <PyInit__multibytecodec@@Base+0x990>
    37c8:	mov	x21, xzr
    37cc:	cbz	x19, 37e8 <PyInit__multibytecodec@@Base+0x954>
    37d0:	ldr	x8, [x19]
    37d4:	subs	x8, x8, #0x1
    37d8:	str	x8, [x19]
    37dc:	b.ne	37e8 <PyInit__multibytecodec@@Base+0x954>  // b.any
    37e0:	mov	x0, x19
    37e4:	bl	29f0 <_Py_Dealloc@plt>
    37e8:	cbz	x21, 3804 <PyInit__multibytecodec@@Base+0x970>
    37ec:	ldr	x8, [x21]
    37f0:	subs	x8, x8, #0x1
    37f4:	str	x8, [x21]
    37f8:	b.ne	3804 <PyInit__multibytecodec@@Base+0x970>  // b.any
    37fc:	mov	x0, x21
    3800:	bl	29f0 <_Py_Dealloc@plt>
    3804:	cbz	x20, 3820 <PyInit__multibytecodec@@Base+0x98c>
    3808:	ldr	x8, [x20]
    380c:	subs	x8, x8, #0x1
    3810:	str	x8, [x20]
    3814:	b.ne	3820 <PyInit__multibytecodec@@Base+0x98c>  // b.any
    3818:	mov	x0, x20
    381c:	bl	29f0 <_Py_Dealloc@plt>
    3820:	mov	x23, xzr
    3824:	mov	x0, x23
    3828:	ldp	x20, x19, [sp, #64]
    382c:	ldp	x22, x21, [sp, #48]
    3830:	ldp	x24, x23, [sp, #32]
    3834:	ldp	x29, x30, [sp, #16]
    3838:	add	sp, sp, #0x50
    383c:	ret
    3840:	bl	29f0 <_Py_Dealloc@plt>
    3844:	mov	x21, xzr
    3848:	cbnz	x19, 37d0 <PyInit__multibytecodec@@Base+0x93c>
    384c:	b	37e8 <PyInit__multibytecodec@@Base+0x954>
    3850:	sub	sp, sp, #0xa0
    3854:	stp	x29, x30, [sp, #64]
    3858:	stp	x28, x27, [sp, #80]
    385c:	stp	x26, x25, [sp, #96]
    3860:	stp	x24, x23, [sp, #112]
    3864:	stp	x22, x21, [sp, #128]
    3868:	stp	x20, x19, [sp, #144]
    386c:	add	x29, sp, #0x40
    3870:	ldrb	w8, [x2, #32]
    3874:	mov	w23, w5
    3878:	mov	x20, x4
    387c:	mov	x19, x3
    3880:	mov	x24, x2
    3884:	mov	x21, x1
    3888:	mov	x22, x0
    388c:	tbnz	w8, #7, 389c <PyInit__multibytecodec@@Base+0xa08>
    3890:	mov	x0, x24
    3894:	bl	2920 <_PyUnicode_Ready@plt>
    3898:	tbnz	w0, #31, 39e8 <PyInit__multibytecodec@@Base+0xb54>
    389c:	ldr	x26, [x24, #16]
    38a0:	tbnz	w23, #1, 38b8 <PyInit__multibytecodec@@Base+0xa24>
    38a4:	cbnz	x26, 38b8 <PyInit__multibytecodec@@Base+0xa24>
    38a8:	mov	x0, xzr
    38ac:	mov	x1, xzr
    38b0:	bl	29d0 <PyBytes_FromStringAndSize@plt>
    38b4:	b	39ec <PyInit__multibytecodec@@Base+0xb58>
    38b8:	stp	xzr, xzr, [sp, #48]
    38bc:	stp	x24, xzr, [sp, #8]
    38c0:	str	x26, [sp, #24]
    38c4:	ldr	w28, [x24, #32]
    38c8:	tbnz	w28, #5, 3990 <PyInit__multibytecodec@@Base+0xafc>
    38cc:	ldr	x25, [x24, #72]
    38d0:	mov	x8, #0x3ffffffffffffff8    	// #4611686018427387896
    38d4:	cmp	x26, x8
    38d8:	b.ge	39ac <PyInit__multibytecodec@@Base+0xb18>  // b.tcont
    38dc:	lsl	x8, x26, #1
    38e0:	add	x1, x8, #0x10
    38e4:	mov	x0, xzr
    38e8:	bl	29d0 <PyBytes_FromStringAndSize@plt>
    38ec:	str	x0, [sp, #56]
    38f0:	cbz	x0, 39b0 <PyInit__multibytecodec@@Base+0xb1c>
    38f4:	add	x8, x0, #0x20
    38f8:	add	x9, sp, #0x8
    38fc:	str	x8, [sp, #32]
    3900:	add	x27, x9, #0x8
    3904:	ldr	x9, [x0, #16]
    3908:	add	x10, sp, #0x8
    390c:	ubfx	w28, w28, #2, #3
    3910:	add	x24, x10, #0x18
    3914:	add	x8, x8, x9
    3918:	cmp	x26, #0x1
    391c:	str	x8, [sp, #40]
    3920:	tbnz	w23, #0, 3a0c <PyInit__multibytecodec@@Base+0xb78>
    3924:	b.lt	3a78 <PyInit__multibytecodec@@Base+0xbe4>  // b.tstop
    3928:	ldp	x9, x8, [sp, #32]
    392c:	ldr	x10, [x22, #24]
    3930:	ldr	x1, [x22, #8]
    3934:	mov	x0, x21
    3938:	sub	x7, x8, x9
    393c:	mov	w2, w28
    3940:	mov	x3, x25
    3944:	mov	x4, x27
    3948:	mov	x5, x26
    394c:	mov	x6, x24
    3950:	str	w23, [sp]
    3954:	blr	x10
    3958:	cmn	x0, #0x2
    395c:	b.eq	3a78 <PyInit__multibytecodec@@Base+0xbe4>  // b.none
    3960:	mov	x4, x0
    3964:	cbz	x0, 3a78 <PyInit__multibytecodec@@Base+0xbe4>
    3968:	add	x2, sp, #0x8
    396c:	mov	x0, x22
    3970:	mov	x1, x21
    3974:	mov	x3, x20
    3978:	bl	3b40 <PyInit__multibytecodec@@Base+0xcac>
    397c:	cbnz	w0, 39b0 <PyInit__multibytecodec@@Base+0xb1c>
    3980:	ldp	x8, x26, [sp, #16]
    3984:	cmp	x8, x26
    3988:	b.lt	3928 <PyInit__multibytecodec@@Base+0xa94>  // b.tstop
    398c:	b	3a78 <PyInit__multibytecodec@@Base+0xbe4>
    3990:	add	x8, x24, #0x30
    3994:	add	x9, x24, #0x48
    3998:	tst	w28, #0x40
    399c:	csel	x25, x9, x8, eq  // eq = none
    39a0:	mov	x8, #0x3ffffffffffffff8    	// #4611686018427387896
    39a4:	cmp	x26, x8
    39a8:	b.lt	38dc <PyInit__multibytecodec@@Base+0xa48>  // b.tstop
    39ac:	bl	2a10 <PyErr_NoMemory@plt>
    39b0:	ldr	x0, [sp, #48]
    39b4:	cbz	x0, 39cc <PyInit__multibytecodec@@Base+0xb38>
    39b8:	ldr	x8, [x0]
    39bc:	subs	x8, x8, #0x1
    39c0:	str	x8, [x0]
    39c4:	b.ne	39cc <PyInit__multibytecodec@@Base+0xb38>  // b.any
    39c8:	bl	29f0 <_Py_Dealloc@plt>
    39cc:	ldr	x0, [sp, #56]
    39d0:	cbz	x0, 39ec <PyInit__multibytecodec@@Base+0xb58>
    39d4:	ldr	x8, [x0]
    39d8:	subs	x8, x8, #0x1
    39dc:	str	x8, [x0]
    39e0:	b.ne	39e8 <PyInit__multibytecodec@@Base+0xb54>  // b.any
    39e4:	bl	29f0 <_Py_Dealloc@plt>
    39e8:	mov	x0, xzr
    39ec:	ldp	x20, x19, [sp, #144]
    39f0:	ldp	x22, x21, [sp, #128]
    39f4:	ldp	x24, x23, [sp, #112]
    39f8:	ldp	x26, x25, [sp, #96]
    39fc:	ldp	x28, x27, [sp, #80]
    3a00:	ldp	x29, x30, [sp, #64]
    3a04:	add	sp, sp, #0xa0
    3a08:	ret
    3a0c:	b.lt	3a78 <PyInit__multibytecodec@@Base+0xbe4>  // b.tstop
    3a10:	ldp	x9, x8, [sp, #32]
    3a14:	ldr	x10, [x22, #24]
    3a18:	ldr	x1, [x22, #8]
    3a1c:	mov	x0, x21
    3a20:	sub	x7, x8, x9
    3a24:	mov	w2, w28
    3a28:	mov	x3, x25
    3a2c:	mov	x4, x27
    3a30:	mov	x5, x26
    3a34:	mov	x6, x24
    3a38:	str	w23, [sp]
    3a3c:	blr	x10
    3a40:	cbz	x0, 3a78 <PyInit__multibytecodec@@Base+0xbe4>
    3a44:	mov	x26, x0
    3a48:	add	x2, sp, #0x8
    3a4c:	mov	x0, x22
    3a50:	mov	x1, x21
    3a54:	mov	x3, x20
    3a58:	mov	x4, x26
    3a5c:	bl	3b40 <PyInit__multibytecodec@@Base+0xcac>
    3a60:	cbnz	w0, 39b0 <PyInit__multibytecodec@@Base+0xb1c>
    3a64:	cmn	x26, #0x2
    3a68:	b.eq	3a78 <PyInit__multibytecodec@@Base+0xbe4>  // b.none
    3a6c:	ldp	x8, x26, [sp, #16]
    3a70:	cmp	x8, x26
    3a74:	b.lt	3a10 <PyInit__multibytecodec@@Base+0xb7c>  // b.tstop
    3a78:	tbz	w23, #1, 3ae0 <PyInit__multibytecodec@@Base+0xc4c>
    3a7c:	ldr	x8, [x22, #40]
    3a80:	cbz	x8, 3ae0 <PyInit__multibytecodec@@Base+0xc4c>
    3a84:	ldp	x10, x9, [sp, #32]
    3a88:	ldr	x1, [x22, #8]
    3a8c:	mov	x0, x21
    3a90:	mov	x2, x24
    3a94:	sub	x3, x9, x10
    3a98:	blr	x8
    3a9c:	cbz	x0, 3ae0 <PyInit__multibytecodec@@Base+0xc4c>
    3aa0:	mov	x4, x0
    3aa4:	add	x2, sp, #0x8
    3aa8:	mov	x0, x22
    3aac:	mov	x1, x21
    3ab0:	mov	x3, x20
    3ab4:	bl	3b40 <PyInit__multibytecodec@@Base+0xcac>
    3ab8:	cbnz	w0, 39b0 <PyInit__multibytecodec@@Base+0xb1c>
    3abc:	ldp	x10, x9, [sp, #32]
    3ac0:	ldr	x8, [x22, #40]
    3ac4:	ldr	x1, [x22, #8]
    3ac8:	mov	x0, x21
    3acc:	sub	x3, x9, x10
    3ad0:	mov	x2, x24
    3ad4:	blr	x8
    3ad8:	mov	x4, x0
    3adc:	cbnz	x0, 3aa4 <PyInit__multibytecodec@@Base+0xc10>
    3ae0:	ldr	x8, [sp, #56]
    3ae4:	ldr	x9, [sp, #32]
    3ae8:	ldr	x10, [x8, #16]
    3aec:	sub	x8, x9, x8
    3af0:	sub	x1, x8, #0x20
    3af4:	cmp	x1, x10
    3af8:	b.eq	3b10 <PyInit__multibytecodec@@Base+0xc7c>  // b.none
    3afc:	add	x8, sp, #0x8
    3b00:	add	x0, x8, #0x30
    3b04:	bl	2960 <_PyBytes_Resize@plt>
    3b08:	cmn	w0, #0x1
    3b0c:	b.eq	39b0 <PyInit__multibytecodec@@Base+0xb1c>  // b.none
    3b10:	cbz	x19, 3b1c <PyInit__multibytecodec@@Base+0xc88>
    3b14:	ldr	x8, [sp, #16]
    3b18:	str	x8, [x19]
    3b1c:	ldr	x0, [sp, #48]
    3b20:	cbz	x0, 3b38 <PyInit__multibytecodec@@Base+0xca4>
    3b24:	ldr	x8, [x0]
    3b28:	subs	x8, x8, #0x1
    3b2c:	str	x8, [x0]
    3b30:	b.ne	3b38 <PyInit__multibytecodec@@Base+0xca4>  // b.any
    3b34:	bl	29f0 <_Py_Dealloc@plt>
    3b38:	ldr	x0, [sp, #56]
    3b3c:	b	39ec <PyInit__multibytecodec@@Base+0xb58>
    3b40:	sub	sp, sp, #0x90
    3b44:	stp	x29, x30, [sp, #48]
    3b48:	stp	x28, x27, [sp, #64]
    3b4c:	stp	x26, x25, [sp, #80]
    3b50:	stp	x24, x23, [sp, #96]
    3b54:	stp	x22, x21, [sp, #112]
    3b58:	stp	x20, x19, [sp, #128]
    3b5c:	add	x29, sp, #0x30
    3b60:	mov	x24, x4
    3b64:	mov	x22, x3
    3b68:	mov	x19, x2
    3b6c:	mov	x28, x1
    3b70:	cmp	x4, #0x0
    3b74:	mov	x21, x0
    3b78:	b.le	3bb8 <PyInit__multibytecodec@@Base+0xd24>
    3b7c:	adrp	x20, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3b80:	add	x20, x20, #0xaa1
    3b84:	cmp	x22, #0x3
    3b88:	b.ne	3d24 <PyInit__multibytecodec@@Base+0xe90>  // b.any
    3b8c:	mov	w0, #0x3f                  	// #63
    3b90:	stp	x22, x20, [sp, #16]
    3b94:	stur	x28, [x29, #-16]
    3b98:	bl	2d20 <PyUnicode_FromOrdinal@plt>
    3b9c:	cbz	x0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3ba0:	ldr	w8, [x0, #32]
    3ba4:	mov	x26, x0
    3ba8:	ubfx	w22, w8, #2, #3
    3bac:	tbnz	w8, #5, 3c84 <PyInit__multibytecodec@@Base+0xdf0>
    3bb0:	ldr	x23, [x26, #72]
    3bb4:	b	3c94 <PyInit__multibytecodec@@Base+0xe00>
    3bb8:	cmn	x24, #0x3
    3bbc:	b.eq	3c3c <PyInit__multibytecodec@@Base+0xda8>  // b.none
    3bc0:	cmn	x24, #0x2
    3bc4:	b.eq	3c50 <PyInit__multibytecodec@@Base+0xdbc>  // b.none
    3bc8:	cmn	x24, #0x1
    3bcc:	b.ne	3c68 <PyInit__multibytecodec@@Base+0xdd4>  // b.any
    3bd0:	mov	x0, x19
    3bd4:	ldr	x20, [x0, #48]!
    3bd8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    3bdc:	ldr	x8, [x20, #16]
    3be0:	asr	x9, x8, #1
    3be4:	cmp	x8, #0x0
    3be8:	orr	x9, x9, #0x1
    3bec:	csinv	x9, x9, xzr, ge  // ge = tcont
    3bf0:	sub	x10, x10, x9
    3bf4:	cmp	x8, x10
    3bf8:	b.gt	3f24 <PyInit__multibytecodec@@Base+0x1090>
    3bfc:	ldur	x21, [x0, #-24]
    3c00:	add	x1, x9, x8
    3c04:	bl	2960 <_PyBytes_Resize@plt>
    3c08:	cmn	w0, #0x1
    3c0c:	b.eq	3f38 <PyInit__multibytecodec@@Base+0x10a4>  // b.none
    3c10:	ldr	x8, [x19, #48]
    3c14:	sub	x9, x21, x20
    3c18:	sub	x9, x9, #0x20
    3c1c:	mov	w0, wzr
    3c20:	add	x10, x8, #0x20
    3c24:	add	x9, x10, x9
    3c28:	str	x9, [x19, #24]
    3c2c:	ldr	x8, [x8, #16]
    3c30:	add	x8, x10, x8
    3c34:	str	x8, [x19, #32]
    3c38:	b	3f38 <PyInit__multibytecodec@@Base+0x10a4>
    3c3c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3c40:	ldr	x8, [x8, #3984]
    3c44:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3c48:	add	x1, x1, #0xada
    3c4c:	b	3c78 <PyInit__multibytecodec@@Base+0xde4>
    3c50:	ldr	x24, [x19, #8]
    3c54:	adrp	x20, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3c58:	add	x20, x20, #0xabc
    3c5c:	cmp	x22, #0x3
    3c60:	b.ne	3d24 <PyInit__multibytecodec@@Base+0xe90>  // b.any
    3c64:	b	3b8c <PyInit__multibytecodec@@Base+0xcf8>
    3c68:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3c6c:	ldr	x8, [x8, #3984]
    3c70:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3c74:	add	x1, x1, #0xaef
    3c78:	ldr	x0, [x8]
    3c7c:	bl	2a80 <PyErr_SetString@plt>
    3c80:	b	3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3c84:	add	x9, x26, #0x30
    3c88:	add	x10, x26, #0x48
    3c8c:	tst	w8, #0x40
    3c90:	csel	x23, x10, x9, eq  // eq = none
    3c94:	stur	xzr, [x29, #-8]
    3c98:	mov	x25, x19
    3c9c:	ldur	x28, [x29, #-16]
    3ca0:	ldr	x8, [x25, #24]!
    3ca4:	ldr	x10, [x21, #24]
    3ca8:	ldr	x1, [x21, #8]
    3cac:	sub	x4, x29, #0x8
    3cb0:	ldr	x9, [x25, #8]
    3cb4:	mov	w5, #0x1                   	// #1
    3cb8:	mov	x0, x28
    3cbc:	mov	w2, w22
    3cc0:	sub	x7, x9, x8
    3cc4:	mov	x3, x23
    3cc8:	mov	x6, x25
    3ccc:	add	x27, x25, #0x18
    3cd0:	str	wzr, [sp]
    3cd4:	blr	x10
    3cd8:	mov	x20, x0
    3cdc:	cmn	x0, #0x1
    3ce0:	b.eq	3db8 <PyInit__multibytecodec@@Base+0xf24>  // b.none
    3ce4:	ldr	x8, [x26]
    3ce8:	subs	x8, x8, #0x1
    3cec:	str	x8, [x26]
    3cf0:	b.ne	3cfc <PyInit__multibytecodec@@Base+0xe68>  // b.any
    3cf4:	mov	x0, x26
    3cf8:	bl	29f0 <_Py_Dealloc@plt>
    3cfc:	cbz	x20, 3d20 <PyInit__multibytecodec@@Base+0xe8c>
    3d00:	ldp	x20, x8, [x19, #24]
    3d04:	sub	x8, x8, x20
    3d08:	cmp	x8, #0x0
    3d0c:	b.le	3efc <PyInit__multibytecodec@@Base+0x1068>
    3d10:	add	x8, x20, #0x1
    3d14:	mov	w9, #0x3f                  	// #63
    3d18:	str	x8, [x25]
    3d1c:	strb	w9, [x20]
    3d20:	ldp	x22, x20, [sp, #16]
    3d24:	ldr	x4, [x19, #8]
    3d28:	and	x8, x22, #0xfffffffffffffffe
    3d2c:	cmp	x8, #0x2
    3d30:	add	x23, x4, x24
    3d34:	b.ne	3de4 <PyInit__multibytecodec@@Base+0xf50>  // b.any
    3d38:	mov	w0, wzr
    3d3c:	str	x23, [x19, #8]
    3d40:	b	3f38 <PyInit__multibytecodec@@Base+0x10a4>
    3d44:	ldr	x28, [x25]
    3d48:	add	x1, x9, x8
    3d4c:	mov	x0, x27
    3d50:	bl	2960 <_PyBytes_Resize@plt>
    3d54:	cmn	w0, #0x1
    3d58:	b.eq	3f34 <PyInit__multibytecodec@@Base+0x10a0>  // b.none
    3d5c:	ldr	x8, [x19, #48]
    3d60:	sub	x9, x28, x20
    3d64:	sub	x9, x9, #0x20
    3d68:	ldur	x28, [x29, #-16]
    3d6c:	add	x10, x8, #0x20
    3d70:	add	x9, x10, x9
    3d74:	str	x9, [x19, #24]
    3d78:	ldr	x8, [x8, #16]
    3d7c:	sub	x4, x29, #0x8
    3d80:	mov	w5, #0x1                   	// #1
    3d84:	mov	x0, x28
    3d88:	add	x8, x10, x8
    3d8c:	str	x8, [x19, #32]
    3d90:	ldr	x10, [x21, #24]
    3d94:	ldr	x1, [x21, #8]
    3d98:	sub	x7, x8, x9
    3d9c:	mov	w2, w22
    3da0:	mov	x3, x23
    3da4:	mov	x6, x25
    3da8:	str	wzr, [sp]
    3dac:	blr	x10
    3db0:	cmn	x0, #0x1
    3db4:	b.ne	3f58 <PyInit__multibytecodec@@Base+0x10c4>  // b.any
    3db8:	ldr	x20, [x27]
    3dbc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    3dc0:	ldr	x8, [x20, #16]
    3dc4:	asr	x9, x8, #1
    3dc8:	orr	x9, x9, #0x1
    3dcc:	cmp	x8, #0x0
    3dd0:	csinv	x9, x9, xzr, ge  // ge = tcont
    3dd4:	sub	x10, x10, x9
    3dd8:	cmp	x8, x10
    3ddc:	b.le	3d44 <PyInit__multibytecodec@@Base+0xeb0>
    3de0:	b	3f24 <PyInit__multibytecodec@@Base+0x1090>
    3de4:	ldr	x0, [x19, #40]
    3de8:	cbz	x0, 3e20 <PyInit__multibytecodec@@Base+0xf8c>
    3dec:	mov	x1, x4
    3df0:	bl	29e0 <PyUnicodeEncodeError_SetStart@plt>
    3df4:	cbnz	w0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3df8:	ldr	x0, [x19, #40]
    3dfc:	mov	x1, x23
    3e00:	bl	2a30 <PyUnicodeEncodeError_SetEnd@plt>
    3e04:	cbnz	w0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3e08:	ldr	x0, [x19, #40]
    3e0c:	mov	x1, x20
    3e10:	bl	2990 <PyUnicodeEncodeError_SetReason@plt>
    3e14:	cbnz	w0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3e18:	ldr	x1, [x19, #40]
    3e1c:	b	3e54 <PyInit__multibytecodec@@Base+0xfc0>
    3e20:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3e24:	ldr	x8, [x8, #4024]
    3e28:	ldr	x2, [x21]
    3e2c:	ldr	x3, [x19]
    3e30:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3e34:	ldr	x0, [x8]
    3e38:	add	x1, x1, #0xb05
    3e3c:	mov	x5, x23
    3e40:	mov	x6, x20
    3e44:	bl	2a20 <_PyObject_CallFunction_SizeT@plt>
    3e48:	mov	x1, x0
    3e4c:	str	x0, [x19, #40]
    3e50:	cbz	x0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3e54:	cmp	x22, #0x1
    3e58:	b.eq	3f2c <PyInit__multibytecodec@@Base+0x1098>  // b.none
    3e5c:	mov	x0, x22
    3e60:	bl	411c <PyInit__multibytecodec@@Base+0x1288>
    3e64:	cbz	x0, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3e68:	ldr	x8, [x0, #8]
    3e6c:	mov	x22, x0
    3e70:	ldrb	w8, [x8, #171]
    3e74:	tbz	w8, #2, 3ea8 <PyInit__multibytecodec@@Base+0x1014>
    3e78:	ldr	x8, [x22, #16]
    3e7c:	cmp	x8, #0x2
    3e80:	b.ne	3ea8 <PyInit__multibytecodec@@Base+0x1014>  // b.any
    3e84:	ldr	x23, [x22, #24]
    3e88:	ldr	x8, [x23, #8]
    3e8c:	ldr	x8, [x8, #168]
    3e90:	tst	x8, #0x18000000
    3e94:	b.eq	3ea8 <PyInit__multibytecodec@@Base+0x1014>  // b.none
    3e98:	ldr	x9, [x22, #32]
    3e9c:	ldr	x9, [x9, #8]
    3ea0:	ldrb	w9, [x9, #171]
    3ea4:	tbnz	w9, #0, 3fb0 <PyInit__multibytecodec@@Base+0x111c>
    3ea8:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    3eac:	ldr	x8, [x8, #4000]
    3eb0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    3eb4:	add	x1, x1, #0xb0b
    3eb8:	ldr	x0, [x8]
    3ebc:	bl	2a80 <PyErr_SetString@plt>
    3ec0:	mov	x23, xzr
    3ec4:	ldr	x8, [x22]
    3ec8:	subs	x8, x8, #0x1
    3ecc:	str	x8, [x22]
    3ed0:	b.ne	3edc <PyInit__multibytecodec@@Base+0x1048>  // b.any
    3ed4:	mov	x0, x22
    3ed8:	bl	29f0 <_Py_Dealloc@plt>
    3edc:	cbz	x23, 3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3ee0:	ldr	x8, [x23]
    3ee4:	subs	x8, x8, #0x1
    3ee8:	str	x8, [x23]
    3eec:	b.ne	3f34 <PyInit__multibytecodec@@Base+0x10a0>  // b.any
    3ef0:	mov	x0, x23
    3ef4:	bl	29f0 <_Py_Dealloc@plt>
    3ef8:	b	3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3efc:	ldr	x23, [x27]
    3f00:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    3f04:	ldr	x8, [x23, #16]
    3f08:	asr	x9, x8, #1
    3f0c:	cmp	x8, #0x3
    3f10:	orr	x9, x9, #0x1
    3f14:	csinc	x9, x9, xzr, gt
    3f18:	sub	x10, x10, x9
    3f1c:	cmp	x8, x10
    3f20:	b.le	3f70 <PyInit__multibytecodec@@Base+0x10dc>
    3f24:	bl	2a10 <PyErr_NoMemory@plt>
    3f28:	b	3f34 <PyInit__multibytecodec@@Base+0x10a0>
    3f2c:	mov	x0, x1
    3f30:	bl	2b60 <PyCodec_StrictErrors@plt>
    3f34:	mov	w0, #0xffffffff            	// #-1
    3f38:	ldp	x20, x19, [sp, #128]
    3f3c:	ldp	x22, x21, [sp, #112]
    3f40:	ldp	x24, x23, [sp, #96]
    3f44:	ldp	x26, x25, [sp, #80]
    3f48:	ldp	x28, x27, [sp, #64]
    3f4c:	ldp	x29, x30, [sp, #48]
    3f50:	add	sp, sp, #0x90
    3f54:	ret
    3f58:	mov	x20, x0
    3f5c:	ldr	x8, [x26]
    3f60:	subs	x8, x8, #0x1
    3f64:	str	x8, [x26]
    3f68:	b.ne	3cfc <PyInit__multibytecodec@@Base+0xe68>  // b.any
    3f6c:	b	3cf4 <PyInit__multibytecodec@@Base+0xe60>
    3f70:	add	x1, x9, x8
    3f74:	mov	x0, x27
    3f78:	bl	2960 <_PyBytes_Resize@plt>
    3f7c:	cmn	w0, #0x1
    3f80:	b.eq	3f34 <PyInit__multibytecodec@@Base+0x10a0>  // b.none
    3f84:	ldr	x8, [x19, #48]
    3f88:	sub	x9, x20, x23
    3f8c:	sub	x9, x9, #0x20
    3f90:	ldur	x28, [x29, #-16]
    3f94:	add	x10, x8, #0x20
    3f98:	add	x20, x10, x9
    3f9c:	str	x20, [x19, #24]
    3fa0:	ldr	x8, [x8, #16]
    3fa4:	add	x8, x10, x8
    3fa8:	str	x8, [x19, #32]
    3fac:	b	3d10 <PyInit__multibytecodec@@Base+0xe7c>
    3fb0:	tbnz	w8, #28, 3fc4 <PyInit__multibytecodec@@Base+0x1130>
    3fb4:	ldr	x8, [x23]
    3fb8:	add	x8, x8, #0x1
    3fbc:	str	x8, [x23]
    3fc0:	b	3fe8 <PyInit__multibytecodec@@Base+0x1154>
    3fc4:	sub	x3, x29, #0x8
    3fc8:	mov	w4, #0x1                   	// #1
    3fcc:	mov	w5, #0x1                   	// #1
    3fd0:	mov	x0, x21
    3fd4:	mov	x1, x28
    3fd8:	mov	x2, x23
    3fdc:	bl	3850 <PyInit__multibytecodec@@Base+0x9bc>
    3fe0:	mov	x23, x0
    3fe4:	cbz	x0, 3ec4 <PyInit__multibytecodec@@Base+0x1030>
    3fe8:	ldr	x20, [x23, #16]
    3fec:	cmp	x20, #0x1
    3ff0:	b.lt	4088 <PyInit__multibytecodec@@Base+0x11f4>  // b.tstop
    3ff4:	ldp	x21, x8, [x19, #24]
    3ff8:	sub	x8, x8, x21
    3ffc:	cmp	x20, x8
    4000:	b.le	406c <PyInit__multibytecodec@@Base+0x11d8>
    4004:	mov	x0, x19
    4008:	ldr	x24, [x0, #48]!
    400c:	ldr	x8, [x24, #16]
    4010:	asr	x9, x8, #1
    4014:	orr	x10, x9, #0x1
    4018:	cmp	x9, x20
    401c:	csel	x9, x10, x20, gt
    4020:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    4024:	sub	x10, x10, x9
    4028:	cmp	x8, x10
    402c:	b.le	4038 <PyInit__multibytecodec@@Base+0x11a4>
    4030:	bl	2a10 <PyErr_NoMemory@plt>
    4034:	b	3ec4 <PyInit__multibytecodec@@Base+0x1030>
    4038:	add	x1, x9, x8
    403c:	bl	2960 <_PyBytes_Resize@plt>
    4040:	cmn	w0, #0x1
    4044:	b.eq	3ec4 <PyInit__multibytecodec@@Base+0x1030>  // b.none
    4048:	ldr	x8, [x19, #48]
    404c:	sub	x9, x21, x24
    4050:	sub	x9, x9, #0x20
    4054:	add	x10, x8, #0x20
    4058:	add	x21, x10, x9
    405c:	str	x21, [x19, #24]
    4060:	ldr	x8, [x8, #16]
    4064:	add	x8, x10, x8
    4068:	str	x8, [x19, #32]
    406c:	add	x1, x23, #0x20
    4070:	mov	x0, x21
    4074:	mov	x2, x20
    4078:	bl	2910 <memcpy@plt>
    407c:	ldr	x8, [x19, #24]
    4080:	add	x8, x8, x20
    4084:	str	x8, [x19, #24]
    4088:	ldr	x0, [x22, #32]
    408c:	bl	2af0 <PyLong_AsSsize_t@plt>
    4090:	mov	x20, x0
    4094:	tbnz	x0, #63, 40e0 <PyInit__multibytecodec@@Base+0x124c>
    4098:	ldr	x8, [x19, #16]
    409c:	cmp	x20, x8
    40a0:	b.gt	40e8 <PyInit__multibytecodec@@Base+0x1254>
    40a4:	str	x20, [x19, #8]
    40a8:	ldr	x8, [x22]
    40ac:	subs	x8, x8, #0x1
    40b0:	str	x8, [x22]
    40b4:	b.ne	40c0 <PyInit__multibytecodec@@Base+0x122c>  // b.any
    40b8:	mov	x0, x22
    40bc:	bl	29f0 <_Py_Dealloc@plt>
    40c0:	ldr	x8, [x23]
    40c4:	subs	x8, x8, #0x1
    40c8:	str	x8, [x23]
    40cc:	b.ne	40d8 <PyInit__multibytecodec@@Base+0x1244>  // b.any
    40d0:	mov	x0, x23
    40d4:	bl	29f0 <_Py_Dealloc@plt>
    40d8:	mov	w0, wzr
    40dc:	b	3f38 <PyInit__multibytecodec@@Base+0x10a4>
    40e0:	bl	2b90 <PyErr_Occurred@plt>
    40e4:	cbz	x0, 410c <PyInit__multibytecodec@@Base+0x1278>
    40e8:	bl	2b30 <PyErr_Clear@plt>
    40ec:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    40f0:	ldr	x8, [x8, #4032]
    40f4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    40f8:	add	x1, x1, #0xb3f
    40fc:	mov	x2, x20
    4100:	ldr	x0, [x8]
    4104:	bl	2cf0 <PyErr_Format@plt>
    4108:	b	3ec4 <PyInit__multibytecodec@@Base+0x1030>
    410c:	ldr	x8, [x19, #16]
    4110:	adds	x20, x8, x20
    4114:	b.pl	409c <PyInit__multibytecodec@@Base+0x1208>  // b.nfrst
    4118:	b	40e8 <PyInit__multibytecodec@@Base+0x1254>
    411c:	stp	x29, x30, [sp, #-48]!
    4120:	str	x21, [sp, #16]
    4124:	stp	x20, x19, [sp, #32]
    4128:	mov	x29, sp
    412c:	mov	x20, x1
    4130:	bl	2c60 <PyUnicode_AsUTF8@plt>
    4134:	cbz	x0, 41b0 <PyInit__multibytecodec@@Base+0x131c>
    4138:	bl	2d90 <PyCodec_LookupError@plt>
    413c:	cbz	x0, 41b0 <PyInit__multibytecodec@@Base+0x131c>
    4140:	mov	x19, x0
    4144:	mov	w0, #0x1                   	// #1
    4148:	bl	2b70 <PyTuple_New@plt>
    414c:	cbz	x0, 4198 <PyInit__multibytecodec@@Base+0x1304>
    4150:	str	x20, [x0, #24]
    4154:	ldr	x8, [x20]
    4158:	mov	x21, x0
    415c:	mov	x0, x19
    4160:	mov	x1, x21
    4164:	add	x8, x8, #0x1
    4168:	str	x8, [x20]
    416c:	bl	2bc0 <PyObject_CallObject@plt>
    4170:	ldr	x8, [x21]
    4174:	mov	x20, x0
    4178:	subs	x8, x8, #0x1
    417c:	str	x8, [x21]
    4180:	b.eq	41c8 <PyInit__multibytecodec@@Base+0x1334>  // b.none
    4184:	ldr	x8, [x19]
    4188:	subs	x8, x8, #0x1
    418c:	str	x8, [x19]
    4190:	b.ne	41b4 <PyInit__multibytecodec@@Base+0x1320>  // b.any
    4194:	b	41e0 <PyInit__multibytecodec@@Base+0x134c>
    4198:	ldr	x8, [x19]
    419c:	subs	x8, x8, #0x1
    41a0:	str	x8, [x19]
    41a4:	b.ne	41b0 <PyInit__multibytecodec@@Base+0x131c>  // b.any
    41a8:	mov	x0, x19
    41ac:	bl	29f0 <_Py_Dealloc@plt>
    41b0:	mov	x20, xzr
    41b4:	mov	x0, x20
    41b8:	ldp	x20, x19, [sp, #32]
    41bc:	ldr	x21, [sp, #16]
    41c0:	ldp	x29, x30, [sp], #48
    41c4:	ret
    41c8:	mov	x0, x21
    41cc:	bl	29f0 <_Py_Dealloc@plt>
    41d0:	ldr	x8, [x19]
    41d4:	subs	x8, x8, #0x1
    41d8:	str	x8, [x19]
    41dc:	b.ne	41b4 <PyInit__multibytecodec@@Base+0x1320>  // b.any
    41e0:	mov	x0, x19
    41e4:	bl	29f0 <_Py_Dealloc@plt>
    41e8:	b	41b4 <PyInit__multibytecodec@@Base+0x1320>
    41ec:	ldr	x0, [x0, #32]
    41f0:	sub	x8, x0, #0x1
    41f4:	cmp	x8, #0x3
    41f8:	b.cs	420c <PyInit__multibytecodec@@Base+0x1378>  // b.hs, b.nlast
    41fc:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4200:	add	x9, x9, #0xd78
    4204:	ldr	x0, [x9, x8, lsl #3]
    4208:	b	2c80 <PyUnicode_FromString@plt>
    420c:	ldr	x8, [x0]
    4210:	add	x8, x8, #0x1
    4214:	str	x8, [x0]
    4218:	ret
    421c:	stp	x29, x30, [sp, #-32]!
    4220:	stp	x20, x19, [sp, #16]
    4224:	mov	x29, sp
    4228:	cbz	x1, 424c <PyInit__multibytecodec@@Base+0x13b8>
    422c:	ldr	x8, [x1, #8]
    4230:	ldrb	w8, [x8, #171]
    4234:	tbnz	w8, #4, 4274 <PyInit__multibytecodec@@Base+0x13e0>
    4238:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    423c:	ldr	x8, [x8, #4000]
    4240:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4244:	add	x1, x1, #0xbcc
    4248:	b	425c <PyInit__multibytecodec@@Base+0x13c8>
    424c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4250:	ldr	x8, [x8, #4056]
    4254:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4258:	add	x1, x1, #0xbb4
    425c:	ldr	x0, [x8]
    4260:	bl	2a80 <PyErr_SetString@plt>
    4264:	mov	w0, #0xffffffff            	// #-1
    4268:	ldp	x20, x19, [sp, #16]
    426c:	ldp	x29, x30, [sp], #32
    4270:	ret
    4274:	mov	x19, x0
    4278:	mov	x0, x1
    427c:	bl	2c60 <PyUnicode_AsUTF8@plt>
    4280:	cbz	x0, 42d0 <PyInit__multibytecodec@@Base+0x143c>
    4284:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4288:	add	x1, x1, #0xb8a
    428c:	mov	x20, x0
    4290:	bl	2bd0 <strcmp@plt>
    4294:	cbz	w0, 42e0 <PyInit__multibytecodec@@Base+0x144c>
    4298:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    429c:	add	x1, x1, #0xba5
    42a0:	mov	x0, x20
    42a4:	bl	2bd0 <strcmp@plt>
    42a8:	cbz	w0, 42f0 <PyInit__multibytecodec@@Base+0x145c>
    42ac:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    42b0:	add	x1, x1, #0xbac
    42b4:	mov	x0, x20
    42b8:	bl	2bd0 <strcmp@plt>
    42bc:	cbz	w0, 4320 <PyInit__multibytecodec@@Base+0x148c>
    42c0:	mov	x0, x20
    42c4:	bl	2c80 <PyUnicode_FromString@plt>
    42c8:	mov	x20, x0
    42cc:	cbnz	x0, 42f4 <PyInit__multibytecodec@@Base+0x1460>
    42d0:	mov	w0, #0xffffffff            	// #-1
    42d4:	ldp	x20, x19, [sp, #16]
    42d8:	ldp	x29, x30, [sp], #32
    42dc:	ret
    42e0:	mov	w20, #0x1                   	// #1
    42e4:	ldr	x0, [x19, #32]
    42e8:	cbnz	x0, 42fc <PyInit__multibytecodec@@Base+0x1468>
    42ec:	b	432c <PyInit__multibytecodec@@Base+0x1498>
    42f0:	mov	w20, #0x2                   	// #2
    42f4:	ldr	x0, [x19, #32]
    42f8:	cbz	x0, 432c <PyInit__multibytecodec@@Base+0x1498>
    42fc:	cbz	x0, 4308 <PyInit__multibytecodec@@Base+0x1474>
    4300:	cmp	x0, #0x4
    4304:	b.cc	432c <PyInit__multibytecodec@@Base+0x1498>  // b.lo, b.ul, b.last
    4308:	ldr	x8, [x0]
    430c:	subs	x8, x8, #0x1
    4310:	str	x8, [x0]
    4314:	b.ne	432c <PyInit__multibytecodec@@Base+0x1498>  // b.any
    4318:	bl	29f0 <_Py_Dealloc@plt>
    431c:	b	432c <PyInit__multibytecodec@@Base+0x1498>
    4320:	mov	w20, #0x3                   	// #3
    4324:	ldr	x0, [x19, #32]
    4328:	cbnz	x0, 42fc <PyInit__multibytecodec@@Base+0x1468>
    432c:	mov	w0, wzr
    4330:	str	x20, [x19, #32]
    4334:	ldp	x20, x19, [sp, #16]
    4338:	ldp	x29, x30, [sp], #32
    433c:	ret
    4340:	stp	x29, x30, [sp, #-32]!
    4344:	str	x19, [sp, #16]
    4348:	mov	x29, sp
    434c:	mov	x19, x0
    4350:	bl	2da0 <PyObject_GC_UnTrack@plt>
    4354:	ldr	x0, [x19, #32]
    4358:	cbz	x0, 437c <PyInit__multibytecodec@@Base+0x14e8>
    435c:	cbz	x0, 4368 <PyInit__multibytecodec@@Base+0x14d4>
    4360:	cmp	x0, #0x4
    4364:	b.cc	437c <PyInit__multibytecodec@@Base+0x14e8>  // b.lo, b.ul, b.last
    4368:	ldr	x8, [x0]
    436c:	subs	x8, x8, #0x1
    4370:	str	x8, [x0]
    4374:	b.ne	437c <PyInit__multibytecodec@@Base+0x14e8>  // b.any
    4378:	bl	29f0 <_Py_Dealloc@plt>
    437c:	ldr	x8, [x19, #8]
    4380:	mov	x0, x19
    4384:	ldr	x19, [sp, #16]
    4388:	ldr	x1, [x8, #320]
    438c:	ldp	x29, x30, [sp], #32
    4390:	br	x1
    4394:	stp	x29, x30, [sp, #-16]!
    4398:	mov	x29, sp
    439c:	ldr	x0, [x0, #32]
    43a0:	cmp	x0, #0x0
    43a4:	cset	w9, ne  // ne = any
    43a8:	cmp	x0, #0x4
    43ac:	cset	w10, cc  // cc = lo, ul, last
    43b0:	cbz	x0, 43d4 <PyInit__multibytecodec@@Base+0x1540>
    43b4:	and	w9, w10, w9
    43b8:	tbnz	w9, #0, 43d4 <PyInit__multibytecodec@@Base+0x1540>
    43bc:	mov	x8, x1
    43c0:	mov	x1, x2
    43c4:	blr	x8
    43c8:	cbz	w0, 43d4 <PyInit__multibytecodec@@Base+0x1540>
    43cc:	ldp	x29, x30, [sp], #16
    43d0:	ret
    43d4:	mov	w0, wzr
    43d8:	ldp	x29, x30, [sp], #16
    43dc:	ret
    43e0:	mov	w0, wzr
    43e4:	ret
    43e8:	sub	sp, sp, #0x40
    43ec:	stp	x29, x30, [sp, #16]
    43f0:	stp	x22, x21, [sp, #32]
    43f4:	stp	x20, x19, [sp, #48]
    43f8:	add	x29, sp, #0x10
    43fc:	mov	x8, x2
    4400:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4404:	adrp	x3, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    4408:	mov	x20, x0
    440c:	add	x2, x2, #0xcb7
    4410:	add	x3, x3, #0x768
    4414:	add	x4, sp, #0x8
    4418:	mov	x0, x1
    441c:	mov	x1, x8
    4420:	str	xzr, [sp, #8]
    4424:	bl	2c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    4428:	cbz	w0, 44bc <PyInit__multibytecodec@@Base+0x1628>
    442c:	ldr	x8, [x20, #304]
    4430:	mov	x0, x20
    4434:	mov	x1, xzr
    4438:	blr	x8
    443c:	mov	x19, x0
    4440:	cbz	x0, 44c0 <PyInit__multibytecodec@@Base+0x162c>
    4444:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4448:	add	x1, x1, #0xe3f
    444c:	mov	x0, x20
    4450:	bl	29a0 <PyObject_GetAttrString@plt>
    4454:	mov	x20, x0
    4458:	cbz	x0, 4488 <PyInit__multibytecodec@@Base+0x15f4>
    445c:	ldr	x8, [x20, #8]
    4460:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    4464:	add	x9, x9, #0xe78
    4468:	cmp	x8, x9
    446c:	b.eq	44d8 <PyInit__multibytecodec@@Base+0x1644>  // b.none
    4470:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4474:	ldr	x8, [x8, #4000]
    4478:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    447c:	add	x1, x1, #0xbfa
    4480:	ldr	x0, [x8]
    4484:	bl	2a80 <PyErr_SetString@plt>
    4488:	ldr	x8, [x19]
    448c:	subs	x8, x8, #0x1
    4490:	str	x8, [x19]
    4494:	b.ne	44a0 <PyInit__multibytecodec@@Base+0x160c>  // b.any
    4498:	mov	x0, x19
    449c:	bl	29f0 <_Py_Dealloc@plt>
    44a0:	cbz	x20, 44bc <PyInit__multibytecodec@@Base+0x1628>
    44a4:	ldr	x8, [x20]
    44a8:	subs	x8, x8, #0x1
    44ac:	str	x8, [x20]
    44b0:	b.ne	44bc <PyInit__multibytecodec@@Base+0x1628>  // b.any
    44b4:	mov	x0, x20
    44b8:	bl	29f0 <_Py_Dealloc@plt>
    44bc:	mov	x19, xzr
    44c0:	mov	x0, x19
    44c4:	ldp	x20, x19, [sp, #48]
    44c8:	ldp	x22, x21, [sp, #32]
    44cc:	ldp	x29, x30, [sp, #16]
    44d0:	add	sp, sp, #0x40
    44d4:	ret
    44d8:	ldr	x22, [x20, #16]
    44dc:	str	xzr, [x19, #48]
    44e0:	str	x22, [x19, #16]
    44e4:	ldr	x21, [sp, #8]
    44e8:	cbz	x21, 4540 <PyInit__multibytecodec@@Base+0x16ac>
    44ec:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    44f0:	add	x1, x1, #0xb8a
    44f4:	mov	x0, x21
    44f8:	bl	2bd0 <strcmp@plt>
    44fc:	cbz	w0, 4540 <PyInit__multibytecodec@@Base+0x16ac>
    4500:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4504:	add	x1, x1, #0xba5
    4508:	mov	x0, x21
    450c:	bl	2bd0 <strcmp@plt>
    4510:	cbz	w0, 457c <PyInit__multibytecodec@@Base+0x16e8>
    4514:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4518:	add	x1, x1, #0xbac
    451c:	mov	x0, x21
    4520:	bl	2bd0 <strcmp@plt>
    4524:	cbz	w0, 4584 <PyInit__multibytecodec@@Base+0x16f0>
    4528:	mov	x0, x21
    452c:	bl	2c80 <PyUnicode_FromString@plt>
    4530:	str	x0, [x19, #32]
    4534:	cbz	x0, 4488 <PyInit__multibytecodec@@Base+0x15f4>
    4538:	ldr	x22, [x19, #16]
    453c:	b	4548 <PyInit__multibytecodec@@Base+0x16b4>
    4540:	mov	w8, #0x1                   	// #1
    4544:	str	x8, [x19, #32]
    4548:	ldr	x8, [x22, #56]
    454c:	cbz	x8, 4560 <PyInit__multibytecodec@@Base+0x16cc>
    4550:	ldr	x1, [x22, #8]
    4554:	add	x0, x19, #0x18
    4558:	blr	x8
    455c:	cbnz	w0, 4488 <PyInit__multibytecodec@@Base+0x15f4>
    4560:	ldr	x8, [x20]
    4564:	subs	x8, x8, #0x1
    4568:	str	x8, [x20]
    456c:	b.ne	44c0 <PyInit__multibytecodec@@Base+0x162c>  // b.any
    4570:	mov	x0, x20
    4574:	bl	29f0 <_Py_Dealloc@plt>
    4578:	b	44c0 <PyInit__multibytecodec@@Base+0x162c>
    457c:	mov	w8, #0x2                   	// #2
    4580:	b	4544 <PyInit__multibytecodec@@Base+0x16b0>
    4584:	mov	w8, #0x3                   	// #3
    4588:	b	4544 <PyInit__multibytecodec@@Base+0x16b0>
    458c:	sub	sp, sp, #0x130
    4590:	stp	x29, x30, [sp, #208]
    4594:	str	x28, [sp, #224]
    4598:	stp	x26, x25, [sp, #240]
    459c:	stp	x24, x23, [sp, #256]
    45a0:	stp	x22, x21, [sp, #272]
    45a4:	stp	x20, x19, [sp, #288]
    45a8:	add	x29, sp, #0xd0
    45ac:	mov	x21, x2
    45b0:	mov	x20, x1
    45b4:	mov	x19, x0
    45b8:	cbz	x3, 45c4 <PyInit__multibytecodec@@Base+0x1730>
    45bc:	ldr	x22, [x3, #16]
    45c0:	b	45c8 <PyInit__multibytecodec@@Base+0x1734>
    45c4:	mov	x22, xzr
    45c8:	movi	v0.2d, #0x0
    45cc:	stp	q0, q0, [sp, #64]
    45d0:	stp	q0, q0, [sp, #32]
    45d4:	str	q0, [sp, #16]
    45d8:	cbz	x20, 45ec <PyInit__multibytecodec@@Base+0x1758>
    45dc:	sub	x8, x21, #0x1
    45e0:	cmp	x8, #0x1
    45e4:	b.hi	45ec <PyInit__multibytecodec@@Base+0x1758>  // b.pmore
    45e8:	cbz	x3, 4620 <PyInit__multibytecodec@@Base+0x178c>
    45ec:	adrp	x4, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    45f0:	add	x8, sp, #0x68
    45f4:	add	x4, x4, #0x430
    45f8:	mov	w5, #0x1                   	// #1
    45fc:	mov	w6, #0x2                   	// #2
    4600:	mov	x0, x20
    4604:	mov	x1, x21
    4608:	mov	x2, xzr
    460c:	mov	w7, wzr
    4610:	str	x8, [sp]
    4614:	bl	2a70 <_PyArg_UnpackKeywords@plt>
    4618:	mov	x20, x0
    461c:	cbz	x0, 4634 <PyInit__multibytecodec@@Base+0x17a0>
    4620:	ldr	x0, [x20]
    4624:	add	x1, sp, #0x10
    4628:	mov	w2, wzr
    462c:	bl	2c50 <PyObject_GetBuffer@plt>
    4630:	cbz	w0, 466c <PyInit__multibytecodec@@Base+0x17d8>
    4634:	mov	x19, xzr
    4638:	ldr	x8, [sp, #24]
    463c:	cbz	x8, 4648 <PyInit__multibytecodec@@Base+0x17b4>
    4640:	add	x0, sp, #0x10
    4644:	bl	2980 <PyBuffer_Release@plt>
    4648:	mov	x0, x19
    464c:	ldp	x20, x19, [sp, #288]
    4650:	ldp	x22, x21, [sp, #272]
    4654:	ldp	x24, x23, [sp, #256]
    4658:	ldp	x26, x25, [sp, #240]
    465c:	ldr	x28, [sp, #224]
    4660:	ldp	x29, x30, [sp, #208]
    4664:	add	sp, sp, #0x130
    4668:	ret
    466c:	add	x0, sp, #0x10
    4670:	mov	w1, #0x43                  	// #67
    4674:	bl	29c0 <PyBuffer_IsContiguous@plt>
    4678:	cbz	w0, 4700 <PyInit__multibytecodec@@Base+0x186c>
    467c:	add	x8, x22, x21
    4680:	cmp	x8, #0x1
    4684:	b.ne	4724 <PyInit__multibytecodec@@Base+0x1890>  // b.any
    4688:	mov	w24, wzr
    468c:	ldr	x21, [sp, #16]
    4690:	ldr	x25, [sp, #32]
    4694:	sub	x8, x29, #0x58
    4698:	add	x20, x8, #0x20
    469c:	mov	x0, x20
    46a0:	bl	2ab0 <_PyUnicodeWriter_Init@plt>
    46a4:	stur	xzr, [x29, #-64]
    46a8:	ldr	x23, [x19, #48]
    46ac:	cbz	x23, 4770 <PyInit__multibytecodec@@Base+0x18dc>
    46b0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    46b4:	sub	x8, x8, x23
    46b8:	cmp	x8, x25
    46bc:	b.lt	4768 <PyInit__multibytecodec@@Base+0x18d4>  // b.tstop
    46c0:	add	x26, x23, x25
    46c4:	mov	x0, x26
    46c8:	bl	2d70 <PyMem_Malloc@plt>
    46cc:	cbz	x0, 4768 <PyInit__multibytecodec@@Base+0x18d4>
    46d0:	ldr	x2, [x19, #48]
    46d4:	add	x1, x19, #0x28
    46d8:	mov	x22, x0
    46dc:	bl	2910 <memcpy@plt>
    46e0:	ldr	x8, [x19, #48]
    46e4:	mov	x1, x21
    46e8:	mov	x2, x25
    46ec:	add	x0, x22, x8
    46f0:	bl	2910 <memcpy@plt>
    46f4:	mov	x25, x26
    46f8:	str	xzr, [x19, #48]
    46fc:	b	4774 <PyInit__multibytecodec@@Base+0x18e0>
    4700:	ldr	x3, [x20]
    4704:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4708:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    470c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4710:	add	x0, x0, #0xc2f
    4714:	add	x1, x1, #0xc36
    4718:	add	x2, x2, #0xc47
    471c:	bl	2b10 <_PyArg_BadArgument@plt>
    4720:	b	4634 <PyInit__multibytecodec@@Base+0x17a0>
    4724:	ldr	x8, [x20, #8]
    4728:	ldr	x0, [x8, #8]
    472c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4730:	ldr	x8, [x8, #3968]
    4734:	cmp	x0, x8
    4738:	b.eq	474c <PyInit__multibytecodec@@Base+0x18b8>  // b.none
    473c:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4740:	ldr	x1, [x1, #3968]
    4744:	bl	2cc0 <PyType_IsSubtype@plt>
    4748:	cbz	w0, 48c4 <PyInit__multibytecodec@@Base+0x1a30>
    474c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4750:	ldr	x8, [x8, #4000]
    4754:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4758:	add	x1, x1, #0xa40
    475c:	ldr	x0, [x8]
    4760:	bl	2a80 <PyErr_SetString@plt>
    4764:	b	4634 <PyInit__multibytecodec@@Base+0x17a0>
    4768:	bl	2a10 <PyErr_NoMemory@plt>
    476c:	b	4914 <PyInit__multibytecodec@@Base+0x1a80>
    4770:	mov	x22, x21
    4774:	ldur	x9, [x29, #-16]
    4778:	add	x8, x22, x25
    477c:	cmp	x22, x8
    4780:	stp	x22, x22, [x29, #-88]
    4784:	add	x9, x9, x25
    4788:	stur	x8, [x29, #-72]
    478c:	stur	x9, [x29, #-16]
    4790:	b.cs	47f0 <PyInit__multibytecodec@@Base+0x195c>  // b.hs, b.nlast
    4794:	add	x25, x19, #0x18
    4798:	mov	x9, x22
    479c:	ldr	x10, [x19, #16]
    47a0:	sub	x3, x8, x9
    47a4:	sub	x2, x29, #0x58
    47a8:	mov	x0, x25
    47ac:	ldr	x11, [x10, #48]
    47b0:	ldr	x1, [x10, #8]
    47b4:	mov	x4, x20
    47b8:	blr	x11
    47bc:	cmn	x0, #0x2
    47c0:	b.eq	47f0 <PyInit__multibytecodec@@Base+0x195c>  // b.none
    47c4:	mov	x3, x0
    47c8:	cbz	x0, 47f0 <PyInit__multibytecodec@@Base+0x195c>
    47cc:	ldr	x0, [x19, #16]
    47d0:	ldr	x2, [x19, #32]
    47d4:	sub	x1, x29, #0x58
    47d8:	bl	4b58 <PyInit__multibytecodec@@Base+0x1cc4>
    47dc:	cbnz	w0, 4900 <PyInit__multibytecodec@@Base+0x1a6c>
    47e0:	ldur	x9, [x29, #-88]
    47e4:	ldur	x8, [x29, #-72]
    47e8:	cmp	x9, x8
    47ec:	b.cc	479c <PyInit__multibytecodec@@Base+0x1908>  // b.lo, b.ul, b.last
    47f0:	cbz	w24, 4834 <PyInit__multibytecodec@@Base+0x19a0>
    47f4:	ldur	x8, [x29, #-88]
    47f8:	ldur	x9, [x29, #-72]
    47fc:	cmp	x8, x9
    4800:	b.cs	4834 <PyInit__multibytecodec@@Base+0x19a0>  // b.hs, b.nlast
    4804:	ldr	x0, [x19, #16]
    4808:	ldr	x2, [x19, #32]
    480c:	sub	x1, x29, #0x58
    4810:	mov	x3, #0xfffffffffffffffe    	// #-2
    4814:	bl	4b58 <PyInit__multibytecodec@@Base+0x1cc4>
    4818:	cbz	w0, 4834 <PyInit__multibytecodec@@Base+0x19a0>
    481c:	add	x0, x19, #0x28
    4820:	mov	x1, x22
    4824:	mov	x2, x23
    4828:	bl	2910 <memcpy@plt>
    482c:	str	x23, [x19, #48]
    4830:	b	4900 <PyInit__multibytecodec@@Base+0x1a6c>
    4834:	ldur	x1, [x29, #-88]
    4838:	ldur	x9, [x29, #-72]
    483c:	cmp	x1, x9
    4840:	b.cs	4884 <PyInit__multibytecodec@@Base+0x19f0>  // b.hs, b.nlast
    4844:	ldr	x8, [x19, #48]
    4848:	sub	x23, x9, x1
    484c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    4850:	sub	x9, x9, x8
    4854:	cmp	x23, x9
    4858:	b.gt	48e8 <PyInit__multibytecodec@@Base+0x1a54>
    485c:	add	x9, x8, x23
    4860:	cmp	x9, #0x8
    4864:	b.gt	48e8 <PyInit__multibytecodec@@Base+0x1a54>
    4868:	add	x8, x19, x8
    486c:	add	x0, x8, #0x28
    4870:	mov	x2, x23
    4874:	bl	2910 <memcpy@plt>
    4878:	ldr	x8, [x19, #48]
    487c:	add	x8, x8, x23
    4880:	str	x8, [x19, #48]
    4884:	mov	x0, x20
    4888:	bl	2d50 <_PyUnicodeWriter_Finish@plt>
    488c:	cbz	x0, 4900 <PyInit__multibytecodec@@Base+0x1a6c>
    4890:	mov	x19, x0
    4894:	cmp	x22, x21
    4898:	b.eq	48a4 <PyInit__multibytecodec@@Base+0x1a10>  // b.none
    489c:	mov	x0, x22
    48a0:	bl	2970 <PyMem_Free@plt>
    48a4:	ldur	x0, [x29, #-64]
    48a8:	cbz	x0, 4638 <PyInit__multibytecodec@@Base+0x17a4>
    48ac:	ldr	x8, [x0]
    48b0:	subs	x8, x8, #0x1
    48b4:	str	x8, [x0]
    48b8:	b.ne	4638 <PyInit__multibytecodec@@Base+0x17a4>  // b.any
    48bc:	bl	29f0 <_Py_Dealloc@plt>
    48c0:	b	4638 <PyInit__multibytecodec@@Base+0x17a4>
    48c4:	ldr	x0, [x20, #8]
    48c8:	bl	2d40 <_PyLong_AsInt@plt>
    48cc:	mov	w24, w0
    48d0:	cmn	w0, #0x1
    48d4:	b.ne	468c <PyInit__multibytecodec@@Base+0x17f8>  // b.any
    48d8:	bl	2b90 <PyErr_Occurred@plt>
    48dc:	cbnz	x0, 4634 <PyInit__multibytecodec@@Base+0x17a0>
    48e0:	mov	w24, #0xffffffff            	// #-1
    48e4:	b	468c <PyInit__multibytecodec@@Base+0x17f8>
    48e8:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    48ec:	ldr	x8, [x8, #4048]
    48f0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    48f4:	add	x1, x1, #0xa89
    48f8:	ldr	x0, [x8]
    48fc:	bl	2a80 <PyErr_SetString@plt>
    4900:	cbz	x22, 4914 <PyInit__multibytecodec@@Base+0x1a80>
    4904:	cmp	x22, x21
    4908:	b.eq	4914 <PyInit__multibytecodec@@Base+0x1a80>  // b.none
    490c:	mov	x0, x22
    4910:	bl	2970 <PyMem_Free@plt>
    4914:	ldur	x0, [x29, #-64]
    4918:	cbz	x0, 4930 <PyInit__multibytecodec@@Base+0x1a9c>
    491c:	ldr	x8, [x0]
    4920:	subs	x8, x8, #0x1
    4924:	str	x8, [x0]
    4928:	b.ne	4930 <PyInit__multibytecodec@@Base+0x1a9c>  // b.any
    492c:	bl	29f0 <_Py_Dealloc@plt>
    4930:	mov	x0, x20
    4934:	bl	2a60 <_PyUnicodeWriter_Dealloc@plt>
    4938:	b	4634 <PyInit__multibytecodec@@Base+0x17a0>
    493c:	stp	x29, x30, [sp, #-32]!
    4940:	stp	x20, x19, [sp, #16]
    4944:	mov	x29, sp
    4948:	ldr	x1, [x0, #48]
    494c:	mov	x20, x0
    4950:	add	x0, x0, #0x28
    4954:	bl	29d0 <PyBytes_FromStringAndSize@plt>
    4958:	cbz	x0, 49a4 <PyInit__multibytecodec@@Base+0x1b10>
    495c:	mov	x19, x0
    4960:	add	x0, x20, #0x18
    4964:	mov	w1, #0x8                   	// #8
    4968:	mov	w2, #0x1                   	// #1
    496c:	mov	w3, wzr
    4970:	bl	2a90 <_PyLong_FromByteArray@plt>
    4974:	cbz	x0, 4994 <PyInit__multibytecodec@@Base+0x1b00>
    4978:	mov	x1, x19
    497c:	ldp	x20, x19, [sp, #16]
    4980:	mov	x2, x0
    4984:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4988:	add	x0, x0, #0xc8d
    498c:	ldp	x29, x30, [sp], #32
    4990:	b	2d10 <_Py_BuildValue_SizeT@plt>
    4994:	ldr	x8, [x19]
    4998:	subs	x8, x8, #0x1
    499c:	str	x8, [x19]
    49a0:	b.eq	49b4 <PyInit__multibytecodec@@Base+0x1b20>  // b.none
    49a4:	ldp	x20, x19, [sp, #16]
    49a8:	mov	x0, xzr
    49ac:	ldp	x29, x30, [sp], #32
    49b0:	ret
    49b4:	mov	x0, x19
    49b8:	bl	29f0 <_Py_Dealloc@plt>
    49bc:	ldp	x20, x19, [sp, #16]
    49c0:	mov	x0, xzr
    49c4:	ldp	x29, x30, [sp], #32
    49c8:	ret
    49cc:	sub	sp, sp, #0x40
    49d0:	stp	x29, x30, [sp, #32]
    49d4:	stp	x20, x19, [sp, #48]
    49d8:	add	x29, sp, #0x20
    49dc:	ldr	x9, [x1, #8]
    49e0:	mov	x8, x1
    49e4:	ldrb	w9, [x9, #171]
    49e8:	tbnz	w9, #2, 4a20 <PyInit__multibytecodec@@Base+0x1b8c>
    49ec:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    49f0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    49f4:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    49f8:	add	x0, x0, #0xa25
    49fc:	add	x1, x1, #0xcae
    4a00:	add	x2, x2, #0xc87
    4a04:	mov	x3, x8
    4a08:	bl	2b10 <_PyArg_BadArgument@plt>
    4a0c:	mov	x0, xzr
    4a10:	ldp	x20, x19, [sp, #48]
    4a14:	ldp	x29, x30, [sp, #32]
    4a18:	add	sp, sp, #0x40
    4a1c:	ret
    4a20:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4a24:	ldr	x3, [x3, #4040]
    4a28:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4a2c:	mov	x19, x0
    4a30:	add	x1, x1, #0xc90
    4a34:	sub	x2, x29, #0x8
    4a38:	add	x4, sp, #0x10
    4a3c:	mov	x0, x8
    4a40:	bl	2bf0 <_PyArg_ParseTuple_SizeT@plt>
    4a44:	cbz	w0, 4a98 <PyInit__multibytecodec@@Base+0x1c04>
    4a48:	ldr	x0, [sp, #16]
    4a4c:	add	x1, sp, #0x8
    4a50:	mov	w2, #0x8                   	// #8
    4a54:	mov	w3, #0x1                   	// #1
    4a58:	mov	w4, wzr
    4a5c:	bl	2cd0 <_PyLong_AsByteArray@plt>
    4a60:	tbnz	w0, #31, 4a98 <PyInit__multibytecodec@@Base+0x1c04>
    4a64:	ldur	x0, [x29, #-8]
    4a68:	bl	2b00 <PyBytes_Size@plt>
    4a6c:	cmn	x0, #0x1
    4a70:	b.eq	4a98 <PyInit__multibytecodec@@Base+0x1c04>  // b.none
    4a74:	mov	x20, x0
    4a78:	cmp	x0, #0x9
    4a7c:	b.lt	4aac <PyInit__multibytecodec@@Base+0x1c18>  // b.tstop
    4a80:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4a84:	ldr	x8, [x8, #4048]
    4a88:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4a8c:	add	x1, x1, #0xb6d
    4a90:	ldr	x0, [x8]
    4a94:	bl	2a80 <PyErr_SetString@plt>
    4a98:	mov	x0, xzr
    4a9c:	ldp	x20, x19, [sp, #48]
    4aa0:	ldp	x29, x30, [sp, #32]
    4aa4:	add	sp, sp, #0x40
    4aa8:	ret
    4aac:	ldur	x0, [x29, #-8]
    4ab0:	bl	2cb0 <PyBytes_AsString@plt>
    4ab4:	cbz	x0, 4a10 <PyInit__multibytecodec@@Base+0x1b7c>
    4ab8:	mov	x1, x0
    4abc:	add	x0, x19, #0x28
    4ac0:	mov	x2, x20
    4ac4:	str	x20, [x19, #48]
    4ac8:	bl	2910 <memcpy@plt>
    4acc:	ldr	x8, [sp, #8]
    4ad0:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4ad4:	str	x8, [x19, #24]
    4ad8:	ldr	x0, [x0, #4016]
    4adc:	ldr	x8, [x0]
    4ae0:	add	x8, x8, #0x1
    4ae4:	str	x8, [x0]
    4ae8:	ldp	x20, x19, [sp, #48]
    4aec:	ldp	x29, x30, [sp, #32]
    4af0:	add	sp, sp, #0x40
    4af4:	ret
    4af8:	stp	x29, x30, [sp, #-32]!
    4afc:	str	x19, [sp, #16]
    4b00:	mov	x29, sp
    4b04:	ldr	x9, [x0, #16]
    4b08:	mov	x19, x0
    4b0c:	ldr	x8, [x9, #64]
    4b10:	cbz	x8, 4b34 <PyInit__multibytecodec@@Base+0x1ca0>
    4b14:	ldr	x1, [x9, #8]
    4b18:	add	x0, x19, #0x18
    4b1c:	blr	x8
    4b20:	cbz	x0, 4b34 <PyInit__multibytecodec@@Base+0x1ca0>
    4b24:	mov	x0, xzr
    4b28:	ldr	x19, [sp, #16]
    4b2c:	ldp	x29, x30, [sp], #32
    4b30:	ret
    4b34:	str	xzr, [x19, #48]
    4b38:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4b3c:	ldr	x0, [x0, #4016]
    4b40:	ldr	x8, [x0]
    4b44:	add	x8, x8, #0x1
    4b48:	str	x8, [x0]
    4b4c:	ldr	x19, [sp, #16]
    4b50:	ldp	x29, x30, [sp], #32
    4b54:	ret
    4b58:	stp	x29, x30, [sp, #-64]!
    4b5c:	str	x23, [sp, #16]
    4b60:	stp	x22, x21, [sp, #32]
    4b64:	stp	x20, x19, [sp, #48]
    4b68:	mov	x29, sp
    4b6c:	mov	x23, x3
    4b70:	mov	x20, x2
    4b74:	mov	x19, x1
    4b78:	cmp	x3, #0x0
    4b7c:	mov	x22, x0
    4b80:	b.le	4ba8 <PyInit__multibytecodec@@Base+0x1d14>
    4b84:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4b88:	add	x21, x21, #0xaa1
    4b8c:	cmp	x20, #0x3
    4b90:	b.ne	4c24 <PyInit__multibytecodec@@Base+0x1d90>  // b.any
    4b94:	add	x0, x19, #0x20
    4b98:	mov	w1, #0xfffd                	// #65533
    4b9c:	bl	2c40 <_PyUnicodeWriter_WriteChar@plt>
    4ba0:	tbz	w0, #31, 4c24 <PyInit__multibytecodec@@Base+0x1d90>
    4ba4:	b	4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4ba8:	add	x8, x23, #0x4
    4bac:	cmp	x8, #0x3
    4bb0:	b.hi	4bec <PyInit__multibytecodec@@Base+0x1d58>  // b.pmore
    4bb4:	adrp	x9, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4bb8:	add	x9, x9, #0x4e8
    4bbc:	adr	x10, 4bd0 <PyInit__multibytecodec@@Base+0x1d3c>
    4bc0:	ldrb	w11, [x9, x8]
    4bc4:	add	x10, x10, x11, lsl #2
    4bc8:	mov	w0, wzr
    4bcc:	br	x10
    4bd0:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4bd4:	ldr	x8, [x8, #3984]
    4bd8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4bdc:	add	x1, x1, #0xada
    4be0:	ldr	x0, [x8]
    4be4:	bl	2a80 <PyErr_SetString@plt>
    4be8:	b	4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4bec:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4bf0:	ldr	x8, [x8, #3984]
    4bf4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4bf8:	add	x1, x1, #0xaef
    4bfc:	ldr	x0, [x8]
    4c00:	bl	2a80 <PyErr_SetString@plt>
    4c04:	b	4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4c08:	ldr	x8, [x19, #16]
    4c0c:	ldr	x9, [x19]
    4c10:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4c14:	add	x21, x21, #0xabc
    4c18:	sub	x23, x8, x9
    4c1c:	cmp	x20, #0x3
    4c20:	b.eq	4b94 <PyInit__multibytecodec@@Base+0x1d00>  // b.none
    4c24:	and	x8, x20, #0xfffffffffffffffe
    4c28:	cmp	x8, #0x2
    4c2c:	b.ne	4c44 <PyInit__multibytecodec@@Base+0x1db0>  // b.any
    4c30:	ldr	x8, [x19]
    4c34:	mov	w0, wzr
    4c38:	add	x8, x8, x23
    4c3c:	str	x8, [x19]
    4c40:	b	4d40 <PyInit__multibytecodec@@Base+0x1eac>
    4c44:	ldp	x8, x1, [x19]
    4c48:	ldr	x0, [x19, #24]
    4c4c:	sub	x3, x8, x1
    4c50:	add	x23, x3, x23
    4c54:	cbz	x0, 4c8c <PyInit__multibytecodec@@Base+0x1df8>
    4c58:	mov	x1, x3
    4c5c:	bl	2950 <PyUnicodeDecodeError_SetStart@plt>
    4c60:	cbnz	w0, 4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4c64:	ldr	x0, [x19, #24]
    4c68:	mov	x1, x23
    4c6c:	bl	2bb0 <PyUnicodeDecodeError_SetEnd@plt>
    4c70:	cbnz	w0, 4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4c74:	ldr	x0, [x19, #24]
    4c78:	mov	x1, x21
    4c7c:	bl	2a00 <PyUnicodeDecodeError_SetReason@plt>
    4c80:	cbnz	w0, 4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4c84:	ldr	x1, [x19, #24]
    4c88:	b	4cb0 <PyInit__multibytecodec@@Base+0x1e1c>
    4c8c:	ldr	x8, [x19, #16]
    4c90:	ldr	x0, [x22]
    4c94:	mov	x4, x23
    4c98:	mov	x5, x21
    4c9c:	sub	x2, x8, x1
    4ca0:	bl	2d30 <PyUnicodeDecodeError_Create@plt>
    4ca4:	mov	x1, x0
    4ca8:	str	x0, [x19, #24]
    4cac:	cbz	x0, 4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4cb0:	cmp	x20, #0x1
    4cb4:	b.eq	4d34 <PyInit__multibytecodec@@Base+0x1ea0>  // b.none
    4cb8:	mov	x0, x20
    4cbc:	bl	411c <PyInit__multibytecodec@@Base+0x1288>
    4cc0:	cbz	x0, 4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4cc4:	ldr	x8, [x0, #8]
    4cc8:	mov	x20, x0
    4ccc:	ldrb	w8, [x8, #171]
    4cd0:	tbz	w8, #2, 4d00 <PyInit__multibytecodec@@Base+0x1e6c>
    4cd4:	ldr	x8, [x20, #16]
    4cd8:	cmp	x8, #0x2
    4cdc:	b.ne	4d00 <PyInit__multibytecodec@@Base+0x1e6c>  // b.any
    4ce0:	ldr	x1, [x20, #24]
    4ce4:	ldr	x8, [x1, #8]
    4ce8:	ldrb	w8, [x8, #171]
    4cec:	tbz	w8, #4, 4d00 <PyInit__multibytecodec@@Base+0x1e6c>
    4cf0:	ldr	x8, [x20, #32]
    4cf4:	ldr	x8, [x8, #8]
    4cf8:	ldrb	w8, [x8, #171]
    4cfc:	tbnz	w8, #0, 4d54 <PyInit__multibytecodec@@Base+0x1ec0>
    4d00:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4d04:	ldr	x8, [x8, #4000]
    4d08:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4d0c:	add	x1, x1, #0xc59
    4d10:	ldr	x0, [x8]
    4d14:	bl	2a80 <PyErr_SetString@plt>
    4d18:	ldr	x8, [x20]
    4d1c:	subs	x8, x8, #0x1
    4d20:	str	x8, [x20]
    4d24:	b.ne	4d3c <PyInit__multibytecodec@@Base+0x1ea8>  // b.any
    4d28:	mov	x0, x20
    4d2c:	bl	29f0 <_Py_Dealloc@plt>
    4d30:	b	4d3c <PyInit__multibytecodec@@Base+0x1ea8>
    4d34:	mov	x0, x1
    4d38:	bl	2b60 <PyCodec_StrictErrors@plt>
    4d3c:	mov	w0, #0xffffffff            	// #-1
    4d40:	ldp	x20, x19, [sp, #48]
    4d44:	ldp	x22, x21, [sp, #32]
    4d48:	ldr	x23, [sp, #16]
    4d4c:	ldp	x29, x30, [sp], #64
    4d50:	ret
    4d54:	add	x0, x19, #0x20
    4d58:	bl	2c30 <_PyUnicodeWriter_WriteStr@plt>
    4d5c:	tbnz	w0, #31, 4d18 <PyInit__multibytecodec@@Base+0x1e84>
    4d60:	ldr	x0, [x20, #32]
    4d64:	bl	2af0 <PyLong_AsSsize_t@plt>
    4d68:	mov	x21, x0
    4d6c:	tbnz	x0, #63, 4da4 <PyInit__multibytecodec@@Base+0x1f10>
    4d70:	ldp	x9, x8, [x19, #8]
    4d74:	add	x9, x9, x21
    4d78:	cmp	x9, x8
    4d7c:	b.hi	4dbc <PyInit__multibytecodec@@Base+0x1f28>  // b.pmore
    4d80:	str	x9, [x19]
    4d84:	ldr	x8, [x20]
    4d88:	subs	x8, x8, #0x1
    4d8c:	str	x8, [x20]
    4d90:	b.ne	4d9c <PyInit__multibytecodec@@Base+0x1f08>  // b.any
    4d94:	mov	x0, x20
    4d98:	bl	29f0 <_Py_Dealloc@plt>
    4d9c:	mov	w0, wzr
    4da0:	b	4d40 <PyInit__multibytecodec@@Base+0x1eac>
    4da4:	bl	2b90 <PyErr_Occurred@plt>
    4da8:	cbnz	x0, 4dbc <PyInit__multibytecodec@@Base+0x1f28>
    4dac:	ldp	x9, x8, [x19, #8]
    4db0:	sub	x10, x8, x9
    4db4:	adds	x21, x10, x21
    4db8:	b.pl	4d74 <PyInit__multibytecodec@@Base+0x1ee0>  // b.nfrst
    4dbc:	bl	2b30 <PyErr_Clear@plt>
    4dc0:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4dc4:	ldr	x8, [x8, #4032]
    4dc8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4dcc:	add	x1, x1, #0xb3f
    4dd0:	mov	x2, x21
    4dd4:	ldr	x0, [x8]
    4dd8:	bl	2cf0 <PyErr_Format@plt>
    4ddc:	b	4d18 <PyInit__multibytecodec@@Base+0x1e84>
    4de0:	stp	x29, x30, [sp, #-32]!
    4de4:	str	x19, [sp, #16]
    4de8:	mov	x29, sp
    4dec:	mov	x19, x0
    4df0:	bl	2da0 <PyObject_GC_UnTrack@plt>
    4df4:	ldr	x0, [x19, #32]
    4df8:	cbz	x0, 4e1c <PyInit__multibytecodec@@Base+0x1f88>
    4dfc:	cbz	x0, 4e08 <PyInit__multibytecodec@@Base+0x1f74>
    4e00:	cmp	x0, #0x4
    4e04:	b.cc	4e1c <PyInit__multibytecodec@@Base+0x1f88>  // b.lo, b.ul, b.last
    4e08:	ldr	x8, [x0]
    4e0c:	subs	x8, x8, #0x1
    4e10:	str	x8, [x0]
    4e14:	b.ne	4e1c <PyInit__multibytecodec@@Base+0x1f88>  // b.any
    4e18:	bl	29f0 <_Py_Dealloc@plt>
    4e1c:	ldr	x0, [x19, #56]
    4e20:	cbz	x0, 4e38 <PyInit__multibytecodec@@Base+0x1fa4>
    4e24:	ldr	x8, [x0]
    4e28:	subs	x8, x8, #0x1
    4e2c:	str	x8, [x0]
    4e30:	b.ne	4e38 <PyInit__multibytecodec@@Base+0x1fa4>  // b.any
    4e34:	bl	29f0 <_Py_Dealloc@plt>
    4e38:	ldr	x8, [x19, #8]
    4e3c:	mov	x0, x19
    4e40:	ldr	x19, [sp, #16]
    4e44:	ldr	x1, [x8, #320]
    4e48:	ldp	x29, x30, [sp], #32
    4e4c:	br	x1
    4e50:	stp	x29, x30, [sp, #-48]!
    4e54:	str	x21, [sp, #16]
    4e58:	stp	x20, x19, [sp, #32]
    4e5c:	mov	x29, sp
    4e60:	mov	x21, x0
    4e64:	ldr	x0, [x0, #32]
    4e68:	mov	x20, x2
    4e6c:	mov	x19, x1
    4e70:	cmp	x0, #0x0
    4e74:	cset	w8, ne  // ne = any
    4e78:	cmp	x0, #0x4
    4e7c:	cset	w9, cc  // cc = lo, ul, last
    4e80:	cbz	x0, 4ea8 <PyInit__multibytecodec@@Base+0x2014>
    4e84:	and	w8, w9, w8
    4e88:	tbnz	w8, #0, 4ea8 <PyInit__multibytecodec@@Base+0x2014>
    4e8c:	mov	x1, x20
    4e90:	blr	x19
    4e94:	cbz	w0, 4ea8 <PyInit__multibytecodec@@Base+0x2014>
    4e98:	ldp	x20, x19, [sp, #32]
    4e9c:	ldr	x21, [sp, #16]
    4ea0:	ldp	x29, x30, [sp], #48
    4ea4:	ret
    4ea8:	ldr	x0, [x21, #56]
    4eac:	cbz	x0, 4ebc <PyInit__multibytecodec@@Base+0x2028>
    4eb0:	mov	x1, x20
    4eb4:	blr	x19
    4eb8:	cbnz	w0, 4e98 <PyInit__multibytecodec@@Base+0x2004>
    4ebc:	mov	w0, wzr
    4ec0:	ldp	x20, x19, [sp, #32]
    4ec4:	ldr	x21, [sp, #16]
    4ec8:	ldp	x29, x30, [sp], #48
    4ecc:	ret
    4ed0:	mov	w0, wzr
    4ed4:	ret
    4ed8:	sub	sp, sp, #0x40
    4edc:	stp	x29, x30, [sp, #16]
    4ee0:	stp	x22, x21, [sp, #32]
    4ee4:	stp	x20, x19, [sp, #48]
    4ee8:	add	x29, sp, #0x10
    4eec:	mov	x8, x2
    4ef0:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4ef4:	adrp	x3, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    4ef8:	mov	x20, x0
    4efc:	add	x2, x2, #0xd52
    4f00:	add	x3, x3, #0x778
    4f04:	add	x4, sp, #0x8
    4f08:	mov	x5, sp
    4f0c:	mov	x0, x1
    4f10:	mov	x1, x8
    4f14:	str	xzr, [sp]
    4f18:	bl	2c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    4f1c:	cbz	w0, 4fb0 <PyInit__multibytecodec@@Base+0x211c>
    4f20:	ldr	x8, [x20, #304]
    4f24:	mov	x0, x20
    4f28:	mov	x1, xzr
    4f2c:	blr	x8
    4f30:	mov	x19, x0
    4f34:	cbz	x0, 4fb4 <PyInit__multibytecodec@@Base+0x2120>
    4f38:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4f3c:	add	x1, x1, #0xe3f
    4f40:	mov	x0, x20
    4f44:	bl	29a0 <PyObject_GetAttrString@plt>
    4f48:	mov	x20, x0
    4f4c:	cbz	x0, 4f7c <PyInit__multibytecodec@@Base+0x20e8>
    4f50:	ldr	x8, [x20, #8]
    4f54:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    4f58:	add	x9, x9, #0xe78
    4f5c:	cmp	x8, x9
    4f60:	b.eq	4fcc <PyInit__multibytecodec@@Base+0x2138>  // b.none
    4f64:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    4f68:	ldr	x8, [x8, #4000]
    4f6c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4f70:	add	x1, x1, #0xbfa
    4f74:	ldr	x0, [x8]
    4f78:	bl	2a80 <PyErr_SetString@plt>
    4f7c:	ldr	x8, [x19]
    4f80:	subs	x8, x8, #0x1
    4f84:	str	x8, [x19]
    4f88:	b.ne	4f94 <PyInit__multibytecodec@@Base+0x2100>  // b.any
    4f8c:	mov	x0, x19
    4f90:	bl	29f0 <_Py_Dealloc@plt>
    4f94:	cbz	x20, 4fb0 <PyInit__multibytecodec@@Base+0x211c>
    4f98:	ldr	x8, [x20]
    4f9c:	subs	x8, x8, #0x1
    4fa0:	str	x8, [x20]
    4fa4:	b.ne	4fb0 <PyInit__multibytecodec@@Base+0x211c>  // b.any
    4fa8:	mov	x0, x20
    4fac:	bl	29f0 <_Py_Dealloc@plt>
    4fb0:	mov	x19, xzr
    4fb4:	mov	x0, x19
    4fb8:	ldp	x20, x19, [sp, #48]
    4fbc:	ldp	x22, x21, [sp, #32]
    4fc0:	ldp	x29, x30, [sp, #16]
    4fc4:	add	sp, sp, #0x40
    4fc8:	ret
    4fcc:	ldr	x22, [x20, #16]
    4fd0:	str	x22, [x19, #16]
    4fd4:	ldr	x8, [sp, #8]
    4fd8:	str	x8, [x19, #56]
    4fdc:	ldr	x9, [x8]
    4fe0:	add	x9, x9, #0x1
    4fe4:	str	x9, [x8]
    4fe8:	str	xzr, [x19, #48]
    4fec:	ldr	x21, [sp]
    4ff0:	cbz	x21, 5048 <PyInit__multibytecodec@@Base+0x21b4>
    4ff4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    4ff8:	add	x1, x1, #0xb8a
    4ffc:	mov	x0, x21
    5000:	bl	2bd0 <strcmp@plt>
    5004:	cbz	w0, 5048 <PyInit__multibytecodec@@Base+0x21b4>
    5008:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    500c:	add	x1, x1, #0xba5
    5010:	mov	x0, x21
    5014:	bl	2bd0 <strcmp@plt>
    5018:	cbz	w0, 5084 <PyInit__multibytecodec@@Base+0x21f0>
    501c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5020:	add	x1, x1, #0xbac
    5024:	mov	x0, x21
    5028:	bl	2bd0 <strcmp@plt>
    502c:	cbz	w0, 508c <PyInit__multibytecodec@@Base+0x21f8>
    5030:	mov	x0, x21
    5034:	bl	2c80 <PyUnicode_FromString@plt>
    5038:	str	x0, [x19, #32]
    503c:	cbz	x0, 4f7c <PyInit__multibytecodec@@Base+0x20e8>
    5040:	ldr	x22, [x19, #16]
    5044:	b	5050 <PyInit__multibytecodec@@Base+0x21bc>
    5048:	mov	w8, #0x1                   	// #1
    504c:	str	x8, [x19, #32]
    5050:	ldr	x8, [x22, #56]
    5054:	cbz	x8, 5068 <PyInit__multibytecodec@@Base+0x21d4>
    5058:	ldr	x1, [x22, #8]
    505c:	add	x0, x19, #0x18
    5060:	blr	x8
    5064:	cbnz	w0, 4f7c <PyInit__multibytecodec@@Base+0x20e8>
    5068:	ldr	x8, [x20]
    506c:	subs	x8, x8, #0x1
    5070:	str	x8, [x20]
    5074:	b.ne	4fb4 <PyInit__multibytecodec@@Base+0x2120>  // b.any
    5078:	mov	x0, x20
    507c:	bl	29f0 <_Py_Dealloc@plt>
    5080:	b	4fb4 <PyInit__multibytecodec@@Base+0x2120>
    5084:	mov	w8, #0x2                   	// #2
    5088:	b	504c <PyInit__multibytecodec@@Base+0x21b8>
    508c:	mov	w8, #0x3                   	// #3
    5090:	b	504c <PyInit__multibytecodec@@Base+0x21b8>
    5094:	stp	x29, x30, [sp, #-48]!
    5098:	str	x21, [sp, #16]
    509c:	stp	x20, x19, [sp, #32]
    50a0:	mov	x29, sp
    50a4:	mov	x21, x2
    50a8:	mov	x20, x1
    50ac:	cmp	x2, #0x2
    50b0:	mov	x19, x0
    50b4:	b.cc	50d4 <PyInit__multibytecodec@@Base+0x2240>  // b.lo, b.ul, b.last
    50b8:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    50bc:	add	x0, x0, #0xce3
    50c0:	mov	w3, #0x1                   	// #1
    50c4:	mov	x1, x21
    50c8:	mov	x2, xzr
    50cc:	bl	2b80 <_PyArg_CheckPositional@plt>
    50d0:	cbz	w0, 513c <PyInit__multibytecodec@@Base+0x22a8>
    50d4:	cmp	x21, #0x1
    50d8:	b.lt	5134 <PyInit__multibytecodec@@Base+0x22a0>  // b.tstop
    50dc:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    50e0:	ldr	x0, [x20]
    50e4:	ldr	x8, [x8, #4016]
    50e8:	cmp	x0, x8
    50ec:	b.eq	5134 <PyInit__multibytecodec@@Base+0x22a0>  // b.none
    50f0:	ldr	x8, [x0, #8]
    50f4:	ldrb	w8, [x8, #171]
    50f8:	tbnz	w8, #0, 5118 <PyInit__multibytecodec@@Base+0x2284>
    50fc:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5100:	ldr	x8, [x8, #4000]
    5104:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5108:	add	x1, x1, #0xcfb
    510c:	ldr	x0, [x8]
    5110:	bl	2a80 <PyErr_SetString@plt>
    5114:	b	513c <PyInit__multibytecodec@@Base+0x22a8>
    5118:	bl	2af0 <PyLong_AsSsize_t@plt>
    511c:	cmn	x0, #0x1
    5120:	b.eq	5134 <PyInit__multibytecodec@@Base+0x22a0>  // b.none
    5124:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5128:	mov	x2, x0
    512c:	add	x1, x1, #0xce3
    5130:	b	515c <PyInit__multibytecodec@@Base+0x22c8>
    5134:	bl	2b90 <PyErr_Occurred@plt>
    5138:	cbz	x0, 5150 <PyInit__multibytecodec@@Base+0x22bc>
    513c:	ldp	x20, x19, [sp, #32]
    5140:	ldr	x21, [sp, #16]
    5144:	mov	x0, xzr
    5148:	ldp	x29, x30, [sp], #48
    514c:	ret
    5150:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5154:	add	x1, x1, #0xce3
    5158:	mov	x2, #0xffffffffffffffff    	// #-1
    515c:	mov	x0, x19
    5160:	ldp	x20, x19, [sp, #32]
    5164:	ldr	x21, [sp, #16]
    5168:	ldp	x29, x30, [sp], #48
    516c:	b	53a4 <PyInit__multibytecodec@@Base+0x2510>
    5170:	stp	x29, x30, [sp, #-48]!
    5174:	str	x21, [sp, #16]
    5178:	stp	x20, x19, [sp, #32]
    517c:	mov	x29, sp
    5180:	mov	x21, x2
    5184:	mov	x20, x1
    5188:	cmp	x2, #0x2
    518c:	mov	x19, x0
    5190:	b.cc	51b0 <PyInit__multibytecodec@@Base+0x231c>  // b.lo, b.ul, b.last
    5194:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5198:	add	x0, x0, #0xce8
    519c:	mov	w3, #0x1                   	// #1
    51a0:	mov	x1, x21
    51a4:	mov	x2, xzr
    51a8:	bl	2b80 <_PyArg_CheckPositional@plt>
    51ac:	cbz	w0, 5218 <PyInit__multibytecodec@@Base+0x2384>
    51b0:	cmp	x21, #0x1
    51b4:	b.lt	5210 <PyInit__multibytecodec@@Base+0x237c>  // b.tstop
    51b8:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    51bc:	ldr	x0, [x20]
    51c0:	ldr	x8, [x8, #4016]
    51c4:	cmp	x0, x8
    51c8:	b.eq	5210 <PyInit__multibytecodec@@Base+0x237c>  // b.none
    51cc:	ldr	x8, [x0, #8]
    51d0:	ldrb	w8, [x8, #171]
    51d4:	tbnz	w8, #0, 51f4 <PyInit__multibytecodec@@Base+0x2360>
    51d8:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    51dc:	ldr	x8, [x8, #4000]
    51e0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    51e4:	add	x1, x1, #0xcfb
    51e8:	ldr	x0, [x8]
    51ec:	bl	2a80 <PyErr_SetString@plt>
    51f0:	b	5218 <PyInit__multibytecodec@@Base+0x2384>
    51f4:	bl	2af0 <PyLong_AsSsize_t@plt>
    51f8:	cmn	x0, #0x1
    51fc:	b.eq	5210 <PyInit__multibytecodec@@Base+0x237c>  // b.none
    5200:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5204:	mov	x2, x0
    5208:	add	x1, x1, #0xce8
    520c:	b	5238 <PyInit__multibytecodec@@Base+0x23a4>
    5210:	bl	2b90 <PyErr_Occurred@plt>
    5214:	cbz	x0, 522c <PyInit__multibytecodec@@Base+0x2398>
    5218:	ldp	x20, x19, [sp, #32]
    521c:	ldr	x21, [sp, #16]
    5220:	mov	x0, xzr
    5224:	ldp	x29, x30, [sp], #48
    5228:	ret
    522c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5230:	add	x1, x1, #0xce8
    5234:	mov	x2, #0xffffffffffffffff    	// #-1
    5238:	mov	x0, x19
    523c:	ldp	x20, x19, [sp, #32]
    5240:	ldr	x21, [sp, #16]
    5244:	ldp	x29, x30, [sp], #48
    5248:	b	53a4 <PyInit__multibytecodec@@Base+0x2510>
    524c:	stp	x29, x30, [sp, #-48]!
    5250:	str	x21, [sp, #16]
    5254:	stp	x20, x19, [sp, #32]
    5258:	mov	x29, sp
    525c:	mov	x21, x2
    5260:	mov	x20, x1
    5264:	cmp	x2, #0x2
    5268:	mov	x19, x0
    526c:	b.cc	528c <PyInit__multibytecodec@@Base+0x23f8>  // b.lo, b.ul, b.last
    5270:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5274:	add	x0, x0, #0xcf1
    5278:	mov	w3, #0x1                   	// #1
    527c:	mov	x1, x21
    5280:	mov	x2, xzr
    5284:	bl	2b80 <_PyArg_CheckPositional@plt>
    5288:	cbz	w0, 532c <PyInit__multibytecodec@@Base+0x2498>
    528c:	cmp	x21, #0x1
    5290:	b.lt	52e0 <PyInit__multibytecodec@@Base+0x244c>  // b.tstop
    5294:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5298:	ldr	x0, [x20]
    529c:	ldr	x8, [x8, #4016]
    52a0:	cmp	x0, x8
    52a4:	b.eq	52e0 <PyInit__multibytecodec@@Base+0x244c>  // b.none
    52a8:	ldr	x8, [x0, #8]
    52ac:	ldrb	w8, [x8, #171]
    52b0:	tbnz	w8, #0, 52d0 <PyInit__multibytecodec@@Base+0x243c>
    52b4:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    52b8:	ldr	x8, [x8, #4000]
    52bc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    52c0:	add	x1, x1, #0xcfb
    52c4:	ldr	x0, [x8]
    52c8:	bl	2a80 <PyErr_SetString@plt>
    52cc:	b	532c <PyInit__multibytecodec@@Base+0x2498>
    52d0:	bl	2af0 <PyLong_AsSsize_t@plt>
    52d4:	mov	x2, x0
    52d8:	cmn	x0, #0x1
    52dc:	b.ne	52ec <PyInit__multibytecodec@@Base+0x2458>  // b.any
    52e0:	bl	2b90 <PyErr_Occurred@plt>
    52e4:	cbnz	x0, 532c <PyInit__multibytecodec@@Base+0x2498>
    52e8:	mov	x2, #0xffffffffffffffff    	// #-1
    52ec:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    52f0:	add	x1, x1, #0xce3
    52f4:	mov	x0, x19
    52f8:	bl	53a4 <PyInit__multibytecodec@@Base+0x2510>
    52fc:	cbz	x0, 532c <PyInit__multibytecodec@@Base+0x2498>
    5300:	mov	w1, #0x1                   	// #1
    5304:	mov	x20, x0
    5308:	bl	2d60 <PyUnicode_Splitlines@plt>
    530c:	ldr	x8, [x20]
    5310:	mov	x19, x0
    5314:	subs	x8, x8, #0x1
    5318:	str	x8, [x20]
    531c:	b.ne	5330 <PyInit__multibytecodec@@Base+0x249c>  // b.any
    5320:	mov	x0, x20
    5324:	bl	29f0 <_Py_Dealloc@plt>
    5328:	b	5330 <PyInit__multibytecodec@@Base+0x249c>
    532c:	mov	x19, xzr
    5330:	mov	x0, x19
    5334:	ldp	x20, x19, [sp, #32]
    5338:	ldr	x21, [sp, #16]
    533c:	ldp	x29, x30, [sp], #48
    5340:	ret
    5344:	stp	x29, x30, [sp, #-32]!
    5348:	str	x19, [sp, #16]
    534c:	mov	x29, sp
    5350:	ldr	x9, [x0, #16]
    5354:	mov	x19, x0
    5358:	ldr	x8, [x9, #64]
    535c:	cbz	x8, 5380 <PyInit__multibytecodec@@Base+0x24ec>
    5360:	ldr	x1, [x9, #8]
    5364:	add	x0, x19, #0x18
    5368:	blr	x8
    536c:	cbz	x0, 5380 <PyInit__multibytecodec@@Base+0x24ec>
    5370:	mov	x0, xzr
    5374:	ldr	x19, [sp, #16]
    5378:	ldp	x29, x30, [sp], #32
    537c:	ret
    5380:	str	xzr, [x19, #48]
    5384:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5388:	ldr	x0, [x0, #4016]
    538c:	ldr	x8, [x0]
    5390:	add	x8, x8, #0x1
    5394:	str	x8, [x0]
    5398:	ldr	x19, [sp, #16]
    539c:	ldp	x29, x30, [sp], #32
    53a0:	ret
    53a4:	sub	sp, sp, #0xc0
    53a8:	stp	x29, x30, [sp, #96]
    53ac:	stp	x28, x27, [sp, #112]
    53b0:	stp	x26, x25, [sp, #128]
    53b4:	stp	x24, x23, [sp, #144]
    53b8:	stp	x22, x21, [sp, #160]
    53bc:	stp	x20, x19, [sp, #176]
    53c0:	add	x29, sp, #0x60
    53c4:	cbz	x2, 5618 <PyInit__multibytecodec@@Base+0x2784>
    53c8:	add	x8, sp, #0x8
    53cc:	add	x19, x8, #0x20
    53d0:	mov	x21, x0
    53d4:	mov	x0, x19
    53d8:	mov	x22, x2
    53dc:	mov	x20, x1
    53e0:	bl	2ab0 <_PyUnicodeWriter_Init@plt>
    53e4:	add	x23, x21, #0x28
    53e8:	add	x24, x21, #0x18
    53ec:	str	xzr, [sp, #32]
    53f0:	ldr	x0, [x21, #56]
    53f4:	mov	x1, x20
    53f8:	tbnz	x22, #63, 5418 <PyInit__multibytecodec@@Base+0x2584>
    53fc:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5400:	add	x2, x2, #0xd14
    5404:	mov	x3, x22
    5408:	bl	2be0 <_PyObject_CallMethod_SizeT@plt>
    540c:	mov	x27, x0
    5410:	cbnz	x0, 5428 <PyInit__multibytecodec@@Base+0x2594>
    5414:	b	5684 <PyInit__multibytecodec@@Base+0x27f0>
    5418:	mov	x2, xzr
    541c:	bl	2be0 <_PyObject_CallMethod_SizeT@plt>
    5420:	mov	x27, x0
    5424:	cbz	x0, 5684 <PyInit__multibytecodec@@Base+0x27f0>
    5428:	ldr	x8, [x27, #8]
    542c:	ldrb	w9, [x8, #171]
    5430:	tbz	w9, #3, 562c <PyInit__multibytecodec@@Base+0x2798>
    5434:	ldr	x8, [x21, #48]
    5438:	ldr	x25, [x27, #16]
    543c:	cmp	x8, #0x1
    5440:	b.lt	54b4 <PyInit__multibytecodec@@Base+0x2620>  // b.tstop
    5444:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5448:	sub	x9, x9, x8
    544c:	cmp	x25, x9
    5450:	b.gt	564c <PyInit__multibytecodec@@Base+0x27b8>
    5454:	add	x1, x8, x25
    5458:	mov	x0, xzr
    545c:	bl	29d0 <PyBytes_FromStringAndSize@plt>
    5460:	cbz	x0, 5668 <PyInit__multibytecodec@@Base+0x27d4>
    5464:	ldr	x2, [x21, #48]
    5468:	add	x28, x0, #0x20
    546c:	mov	x26, x0
    5470:	mov	x0, x28
    5474:	mov	x1, x23
    5478:	bl	2910 <memcpy@plt>
    547c:	ldr	x8, [x21, #48]
    5480:	ldr	x2, [x27, #16]
    5484:	add	x1, x27, #0x20
    5488:	add	x0, x28, x8
    548c:	bl	2910 <memcpy@plt>
    5490:	ldr	x8, [x27]
    5494:	subs	x8, x8, #0x1
    5498:	str	x8, [x27]
    549c:	b.ne	54a8 <PyInit__multibytecodec@@Base+0x2614>  // b.any
    54a0:	mov	x0, x27
    54a4:	bl	29f0 <_Py_Dealloc@plt>
    54a8:	str	xzr, [x21, #48]
    54ac:	ldr	x28, [x26, #16]
    54b0:	b	54bc <PyInit__multibytecodec@@Base+0x2628>
    54b4:	mov	x28, x25
    54b8:	mov	x26, x27
    54bc:	ldr	x10, [sp, #80]
    54c0:	add	x8, x26, #0x20
    54c4:	add	x9, x8, x28
    54c8:	cmp	x28, #0x1
    54cc:	add	x10, x10, x28
    54d0:	stp	x8, x8, [sp, #8]
    54d4:	str	x9, [sp, #24]
    54d8:	str	x10, [sp, #80]
    54dc:	b.lt	553c <PyInit__multibytecodec@@Base+0x26a8>  // b.tstop
    54e0:	cmp	x9, x8
    54e4:	b.ls	553c <PyInit__multibytecodec@@Base+0x26a8>  // b.plast
    54e8:	ldr	x10, [x21, #16]
    54ec:	sub	x3, x9, x8
    54f0:	add	x2, sp, #0x8
    54f4:	mov	x0, x24
    54f8:	ldr	x11, [x10, #48]
    54fc:	ldr	x1, [x10, #8]
    5500:	mov	x4, x19
    5504:	blr	x11
    5508:	cmn	x0, #0x2
    550c:	b.eq	553c <PyInit__multibytecodec@@Base+0x26a8>  // b.none
    5510:	mov	x3, x0
    5514:	cbz	x0, 553c <PyInit__multibytecodec@@Base+0x26a8>
    5518:	ldr	x0, [x21, #16]
    551c:	ldr	x2, [x21, #32]
    5520:	add	x1, sp, #0x8
    5524:	bl	4b58 <PyInit__multibytecodec@@Base+0x1cc4>
    5528:	cbnz	w0, 566c <PyInit__multibytecodec@@Base+0x27d8>
    552c:	ldr	x8, [sp, #8]
    5530:	ldr	x9, [sp, #24]
    5534:	cmp	x8, x9
    5538:	b.cc	54e8 <PyInit__multibytecodec@@Base+0x2654>  // b.lo, b.ul, b.last
    553c:	tbnz	x22, #63, 5544 <PyInit__multibytecodec@@Base+0x26b0>
    5540:	cbnz	x25, 556c <PyInit__multibytecodec@@Base+0x26d8>
    5544:	ldr	x8, [sp, #8]
    5548:	ldr	x9, [sp, #24]
    554c:	cmp	x8, x9
    5550:	b.cs	556c <PyInit__multibytecodec@@Base+0x26d8>  // b.hs, b.nlast
    5554:	ldr	x0, [x21, #16]
    5558:	ldr	x2, [x21, #32]
    555c:	add	x1, sp, #0x8
    5560:	mov	x3, #0xfffffffffffffffe    	// #-2
    5564:	bl	4b58 <PyInit__multibytecodec@@Base+0x1cc4>
    5568:	cbnz	w0, 566c <PyInit__multibytecodec@@Base+0x27d8>
    556c:	ldr	x1, [sp, #8]
    5570:	ldr	x9, [sp, #24]
    5574:	cmp	x1, x9
    5578:	b.cs	55bc <PyInit__multibytecodec@@Base+0x2728>  // b.hs, b.nlast
    557c:	ldr	x8, [x21, #48]
    5580:	sub	x27, x9, x1
    5584:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    5588:	sub	x9, x9, x8
    558c:	cmp	x27, x9
    5590:	b.gt	56d0 <PyInit__multibytecodec@@Base+0x283c>
    5594:	add	x9, x27, x8
    5598:	cmp	x9, #0x8
    559c:	b.gt	56d0 <PyInit__multibytecodec@@Base+0x283c>
    55a0:	add	x8, x21, x8
    55a4:	add	x0, x8, #0x28
    55a8:	mov	x2, x27
    55ac:	bl	2910 <memcpy@plt>
    55b0:	ldr	x8, [x21, #48]
    55b4:	add	x8, x8, x27
    55b8:	str	x8, [x21, #48]
    55bc:	ldr	x8, [x26]
    55c0:	subs	x8, x8, #0x1
    55c4:	str	x8, [x26]
    55c8:	b.ne	55d4 <PyInit__multibytecodec@@Base+0x2740>  // b.any
    55cc:	mov	x0, x26
    55d0:	bl	29f0 <_Py_Dealloc@plt>
    55d4:	tbnz	x22, #63, 55e8 <PyInit__multibytecodec@@Base+0x2754>
    55d8:	cbz	x28, 55e8 <PyInit__multibytecodec@@Base+0x2754>
    55dc:	ldr	x8, [sp, #72]
    55e0:	mov	w22, #0x1                   	// #1
    55e4:	cbz	x8, 53f0 <PyInit__multibytecodec@@Base+0x255c>
    55e8:	mov	x0, x19
    55ec:	bl	2d50 <_PyUnicodeWriter_Finish@plt>
    55f0:	cbz	x0, 5684 <PyInit__multibytecodec@@Base+0x27f0>
    55f4:	mov	x20, x0
    55f8:	ldr	x0, [sp, #32]
    55fc:	cbz	x0, 56ac <PyInit__multibytecodec@@Base+0x2818>
    5600:	ldr	x8, [x0]
    5604:	subs	x8, x8, #0x1
    5608:	str	x8, [x0]
    560c:	b.ne	56ac <PyInit__multibytecodec@@Base+0x2818>  // b.any
    5610:	bl	29f0 <_Py_Dealloc@plt>
    5614:	b	56ac <PyInit__multibytecodec@@Base+0x2818>
    5618:	mov	x0, xzr
    561c:	mov	w1, wzr
    5620:	bl	2d80 <PyUnicode_New@plt>
    5624:	mov	x20, x0
    5628:	b	56ac <PyInit__multibytecodec@@Base+0x2818>
    562c:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5630:	ldr	x9, [x9, #4000]
    5634:	ldr	x2, [x8, #24]
    5638:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    563c:	add	x1, x1, #0xd16
    5640:	ldr	x0, [x9]
    5644:	bl	2cf0 <PyErr_Format@plt>
    5648:	b	5650 <PyInit__multibytecodec@@Base+0x27bc>
    564c:	bl	2a10 <PyErr_NoMemory@plt>
    5650:	mov	x26, x27
    5654:	ldr	x8, [x26]
    5658:	subs	x8, x8, #0x1
    565c:	str	x8, [x26]
    5660:	b.ne	5684 <PyInit__multibytecodec@@Base+0x27f0>  // b.any
    5664:	b	567c <PyInit__multibytecodec@@Base+0x27e8>
    5668:	mov	x26, x27
    566c:	ldr	x8, [x26]
    5670:	subs	x8, x8, #0x1
    5674:	str	x8, [x26]
    5678:	b.ne	5684 <PyInit__multibytecodec@@Base+0x27f0>  // b.any
    567c:	mov	x0, x26
    5680:	bl	29f0 <_Py_Dealloc@plt>
    5684:	ldr	x0, [sp, #32]
    5688:	cbz	x0, 56a0 <PyInit__multibytecodec@@Base+0x280c>
    568c:	ldr	x8, [x0]
    5690:	subs	x8, x8, #0x1
    5694:	str	x8, [x0]
    5698:	b.ne	56a0 <PyInit__multibytecodec@@Base+0x280c>  // b.any
    569c:	bl	29f0 <_Py_Dealloc@plt>
    56a0:	mov	x0, x19
    56a4:	bl	2a60 <_PyUnicodeWriter_Dealloc@plt>
    56a8:	mov	x20, xzr
    56ac:	mov	x0, x20
    56b0:	ldp	x20, x19, [sp, #176]
    56b4:	ldp	x22, x21, [sp, #160]
    56b8:	ldp	x24, x23, [sp, #144]
    56bc:	ldp	x26, x25, [sp, #128]
    56c0:	ldp	x28, x27, [sp, #112]
    56c4:	ldp	x29, x30, [sp, #96]
    56c8:	add	sp, sp, #0xc0
    56cc:	ret
    56d0:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    56d4:	ldr	x8, [x8, #4048]
    56d8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    56dc:	add	x1, x1, #0xa89
    56e0:	ldr	x0, [x8]
    56e4:	bl	2a80 <PyErr_SetString@plt>
    56e8:	ldr	x8, [x26]
    56ec:	subs	x8, x8, #0x1
    56f0:	str	x8, [x26]
    56f4:	b.ne	5684 <PyInit__multibytecodec@@Base+0x27f0>  // b.any
    56f8:	b	567c <PyInit__multibytecodec@@Base+0x27e8>
    56fc:	stp	x29, x30, [sp, #-32]!
    5700:	str	x19, [sp, #16]
    5704:	mov	x29, sp
    5708:	mov	x19, x0
    570c:	bl	2da0 <PyObject_GC_UnTrack@plt>
    5710:	ldr	x0, [x19, #32]
    5714:	cbz	x0, 5738 <PyInit__multibytecodec@@Base+0x28a4>
    5718:	cbz	x0, 5724 <PyInit__multibytecodec@@Base+0x2890>
    571c:	cmp	x0, #0x4
    5720:	b.cc	5738 <PyInit__multibytecodec@@Base+0x28a4>  // b.lo, b.ul, b.last
    5724:	ldr	x8, [x0]
    5728:	subs	x8, x8, #0x1
    572c:	str	x8, [x0]
    5730:	b.ne	5738 <PyInit__multibytecodec@@Base+0x28a4>  // b.any
    5734:	bl	29f0 <_Py_Dealloc@plt>
    5738:	ldr	x0, [x19, #48]
    573c:	cbz	x0, 5754 <PyInit__multibytecodec@@Base+0x28c0>
    5740:	ldr	x8, [x0]
    5744:	subs	x8, x8, #0x1
    5748:	str	x8, [x0]
    574c:	b.ne	5754 <PyInit__multibytecodec@@Base+0x28c0>  // b.any
    5750:	bl	29f0 <_Py_Dealloc@plt>
    5754:	ldr	x8, [x19, #8]
    5758:	mov	x0, x19
    575c:	ldr	x19, [sp, #16]
    5760:	ldr	x1, [x8, #320]
    5764:	ldp	x29, x30, [sp], #32
    5768:	br	x1
    576c:	stp	x29, x30, [sp, #-48]!
    5770:	str	x21, [sp, #16]
    5774:	stp	x20, x19, [sp, #32]
    5778:	mov	x29, sp
    577c:	mov	x21, x0
    5780:	ldr	x0, [x0, #32]
    5784:	mov	x20, x2
    5788:	mov	x19, x1
    578c:	cmp	x0, #0x0
    5790:	cset	w8, ne  // ne = any
    5794:	cmp	x0, #0x4
    5798:	cset	w9, cc  // cc = lo, ul, last
    579c:	cbz	x0, 57c4 <PyInit__multibytecodec@@Base+0x2930>
    57a0:	and	w8, w9, w8
    57a4:	tbnz	w8, #0, 57c4 <PyInit__multibytecodec@@Base+0x2930>
    57a8:	mov	x1, x20
    57ac:	blr	x19
    57b0:	cbz	w0, 57c4 <PyInit__multibytecodec@@Base+0x2930>
    57b4:	ldp	x20, x19, [sp, #32]
    57b8:	ldr	x21, [sp, #16]
    57bc:	ldp	x29, x30, [sp], #48
    57c0:	ret
    57c4:	ldr	x0, [x21, #48]
    57c8:	cbz	x0, 57d8 <PyInit__multibytecodec@@Base+0x2944>
    57cc:	mov	x1, x20
    57d0:	blr	x19
    57d4:	cbnz	w0, 57b4 <PyInit__multibytecodec@@Base+0x2920>
    57d8:	mov	w0, wzr
    57dc:	ldp	x20, x19, [sp, #32]
    57e0:	ldr	x21, [sp, #16]
    57e4:	ldp	x29, x30, [sp], #48
    57e8:	ret
    57ec:	mov	w0, wzr
    57f0:	ret
    57f4:	sub	sp, sp, #0x40
    57f8:	stp	x29, x30, [sp, #16]
    57fc:	stp	x22, x21, [sp, #32]
    5800:	stp	x20, x19, [sp, #48]
    5804:	add	x29, sp, #0x10
    5808:	mov	x8, x2
    580c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5810:	adrp	x3, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    5814:	mov	x20, x0
    5818:	add	x2, x2, #0xda8
    581c:	add	x3, x3, #0x778
    5820:	add	x4, sp, #0x8
    5824:	mov	x5, sp
    5828:	mov	x0, x1
    582c:	mov	x1, x8
    5830:	str	xzr, [sp]
    5834:	bl	2c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    5838:	cbz	w0, 58cc <PyInit__multibytecodec@@Base+0x2a38>
    583c:	ldr	x8, [x20, #304]
    5840:	mov	x0, x20
    5844:	mov	x1, xzr
    5848:	blr	x8
    584c:	mov	x19, x0
    5850:	cbz	x0, 58d0 <PyInit__multibytecodec@@Base+0x2a3c>
    5854:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5858:	add	x1, x1, #0xe3f
    585c:	mov	x0, x20
    5860:	bl	29a0 <PyObject_GetAttrString@plt>
    5864:	mov	x20, x0
    5868:	cbz	x0, 5898 <PyInit__multibytecodec@@Base+0x2a04>
    586c:	ldr	x8, [x20, #8]
    5870:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    5874:	add	x9, x9, #0xe78
    5878:	cmp	x8, x9
    587c:	b.eq	58e8 <PyInit__multibytecodec@@Base+0x2a54>  // b.none
    5880:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5884:	ldr	x8, [x8, #4000]
    5888:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    588c:	add	x1, x1, #0xbfa
    5890:	ldr	x0, [x8]
    5894:	bl	2a80 <PyErr_SetString@plt>
    5898:	ldr	x8, [x19]
    589c:	subs	x8, x8, #0x1
    58a0:	str	x8, [x19]
    58a4:	b.ne	58b0 <PyInit__multibytecodec@@Base+0x2a1c>  // b.any
    58a8:	mov	x0, x19
    58ac:	bl	29f0 <_Py_Dealloc@plt>
    58b0:	cbz	x20, 58cc <PyInit__multibytecodec@@Base+0x2a38>
    58b4:	ldr	x8, [x20]
    58b8:	subs	x8, x8, #0x1
    58bc:	str	x8, [x20]
    58c0:	b.ne	58cc <PyInit__multibytecodec@@Base+0x2a38>  // b.any
    58c4:	mov	x0, x20
    58c8:	bl	29f0 <_Py_Dealloc@plt>
    58cc:	mov	x19, xzr
    58d0:	mov	x0, x19
    58d4:	ldp	x20, x19, [sp, #48]
    58d8:	ldp	x22, x21, [sp, #32]
    58dc:	ldp	x29, x30, [sp, #16]
    58e0:	add	sp, sp, #0x40
    58e4:	ret
    58e8:	ldr	x22, [x20, #16]
    58ec:	str	x22, [x19, #16]
    58f0:	ldr	x8, [sp, #8]
    58f4:	str	x8, [x19, #48]
    58f8:	ldr	x9, [x8]
    58fc:	add	x9, x9, #0x1
    5900:	str	x9, [x8]
    5904:	str	xzr, [x19, #40]
    5908:	ldr	x21, [sp]
    590c:	cbz	x21, 5964 <PyInit__multibytecodec@@Base+0x2ad0>
    5910:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5914:	add	x1, x1, #0xb8a
    5918:	mov	x0, x21
    591c:	bl	2bd0 <strcmp@plt>
    5920:	cbz	w0, 5964 <PyInit__multibytecodec@@Base+0x2ad0>
    5924:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5928:	add	x1, x1, #0xba5
    592c:	mov	x0, x21
    5930:	bl	2bd0 <strcmp@plt>
    5934:	cbz	w0, 59a0 <PyInit__multibytecodec@@Base+0x2b0c>
    5938:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    593c:	add	x1, x1, #0xbac
    5940:	mov	x0, x21
    5944:	bl	2bd0 <strcmp@plt>
    5948:	cbz	w0, 59a8 <PyInit__multibytecodec@@Base+0x2b14>
    594c:	mov	x0, x21
    5950:	bl	2c80 <PyUnicode_FromString@plt>
    5954:	str	x0, [x19, #32]
    5958:	cbz	x0, 5898 <PyInit__multibytecodec@@Base+0x2a04>
    595c:	ldr	x22, [x19, #16]
    5960:	b	596c <PyInit__multibytecodec@@Base+0x2ad8>
    5964:	mov	w8, #0x1                   	// #1
    5968:	str	x8, [x19, #32]
    596c:	ldr	x8, [x22, #32]
    5970:	cbz	x8, 5984 <PyInit__multibytecodec@@Base+0x2af0>
    5974:	ldr	x1, [x22, #8]
    5978:	add	x0, x19, #0x18
    597c:	blr	x8
    5980:	cbnz	w0, 5898 <PyInit__multibytecodec@@Base+0x2a04>
    5984:	ldr	x8, [x20]
    5988:	subs	x8, x8, #0x1
    598c:	str	x8, [x20]
    5990:	b.ne	58d0 <PyInit__multibytecodec@@Base+0x2a3c>  // b.any
    5994:	mov	x0, x20
    5998:	bl	29f0 <_Py_Dealloc@plt>
    599c:	b	58d0 <PyInit__multibytecodec@@Base+0x2a3c>
    59a0:	mov	w8, #0x2                   	// #2
    59a4:	b	5968 <PyInit__multibytecodec@@Base+0x2ad4>
    59a8:	mov	w8, #0x3                   	// #3
    59ac:	b	5968 <PyInit__multibytecodec@@Base+0x2ad4>
    59b0:	stp	x29, x30, [sp, #-32]!
    59b4:	stp	x20, x19, [sp, #16]
    59b8:	mov	x29, sp
    59bc:	mov	w2, wzr
    59c0:	mov	x20, x0
    59c4:	bl	35a0 <PyInit__multibytecodec@@Base+0x70c>
    59c8:	cbz	x0, 5a2c <PyInit__multibytecodec@@Base+0x2b98>
    59cc:	mov	x19, x0
    59d0:	ldr	x0, [x20, #48]
    59d4:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    59d8:	add	x1, x1, #0x630
    59dc:	mov	x2, x19
    59e0:	mov	x3, xzr
    59e4:	bl	2c90 <_PyObject_CallMethodIdObjArgs@plt>
    59e8:	ldr	x8, [x19]
    59ec:	mov	x20, x0
    59f0:	subs	x8, x8, #0x1
    59f4:	str	x8, [x19]
    59f8:	b.eq	5a38 <PyInit__multibytecodec@@Base+0x2ba4>  // b.none
    59fc:	cbz	x20, 5a44 <PyInit__multibytecodec@@Base+0x2bb0>
    5a00:	ldr	x8, [x20]
    5a04:	subs	x8, x8, #0x1
    5a08:	str	x8, [x20]
    5a0c:	b.ne	5a18 <PyInit__multibytecodec@@Base+0x2b84>  // b.any
    5a10:	mov	x0, x20
    5a14:	bl	29f0 <_Py_Dealloc@plt>
    5a18:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5a1c:	ldr	x0, [x0, #4016]
    5a20:	ldr	x8, [x0]
    5a24:	add	x8, x8, #0x1
    5a28:	str	x8, [x0]
    5a2c:	ldp	x20, x19, [sp, #16]
    5a30:	ldp	x29, x30, [sp], #32
    5a34:	ret
    5a38:	mov	x0, x19
    5a3c:	bl	29f0 <_Py_Dealloc@plt>
    5a40:	cbnz	x20, 5a00 <PyInit__multibytecodec@@Base+0x2b6c>
    5a44:	mov	x0, xzr
    5a48:	ldp	x20, x19, [sp, #16]
    5a4c:	ldp	x29, x30, [sp], #32
    5a50:	ret
    5a54:	stp	x29, x30, [sp, #-80]!
    5a58:	str	x25, [sp, #16]
    5a5c:	stp	x24, x23, [sp, #32]
    5a60:	stp	x22, x21, [sp, #48]
    5a64:	stp	x20, x19, [sp, #64]
    5a68:	mov	x29, sp
    5a6c:	mov	x20, x0
    5a70:	mov	x0, x1
    5a74:	mov	x19, x1
    5a78:	bl	2930 <PySequence_Check@plt>
    5a7c:	cbz	w0, 5b80 <PyInit__multibytecodec@@Base+0x2cec>
    5a80:	mov	x0, x19
    5a84:	bl	2b20 <PySequence_Size@plt>
    5a88:	cmp	x0, #0x1
    5a8c:	b.lt	5b70 <PyInit__multibytecodec@@Base+0x2cdc>  // b.tstop
    5a90:	adrp	x21, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    5a94:	mov	x22, xzr
    5a98:	mov	w25, #0x1                   	// #1
    5a9c:	add	x21, x21, #0x630
    5aa0:	mov	x0, x19
    5aa4:	mov	x1, x22
    5aa8:	bl	2aa0 <PySequence_GetItem@plt>
    5aac:	cbz	x0, 5bb4 <PyInit__multibytecodec@@Base+0x2d20>
    5ab0:	mov	x22, x0
    5ab4:	mov	x0, x20
    5ab8:	mov	x1, x22
    5abc:	mov	w2, wzr
    5ac0:	bl	35a0 <PyInit__multibytecodec@@Base+0x70c>
    5ac4:	cbz	x0, 5b34 <PyInit__multibytecodec@@Base+0x2ca0>
    5ac8:	mov	x23, x0
    5acc:	ldr	x0, [x20, #48]
    5ad0:	mov	x1, x21
    5ad4:	mov	x2, x23
    5ad8:	mov	x3, xzr
    5adc:	bl	2c90 <_PyObject_CallMethodIdObjArgs@plt>
    5ae0:	ldr	x8, [x23]
    5ae4:	mov	x24, x0
    5ae8:	subs	x8, x8, #0x1
    5aec:	str	x8, [x23]
    5af0:	b.eq	5b28 <PyInit__multibytecodec@@Base+0x2c94>  // b.none
    5af4:	cbz	x24, 5b34 <PyInit__multibytecodec@@Base+0x2ca0>
    5af8:	ldr	x8, [x24]
    5afc:	subs	x8, x8, #0x1
    5b00:	str	x8, [x24]
    5b04:	b.ne	5b10 <PyInit__multibytecodec@@Base+0x2c7c>  // b.any
    5b08:	mov	x0, x24
    5b0c:	bl	29f0 <_Py_Dealloc@plt>
    5b10:	mov	w23, wzr
    5b14:	ldr	x8, [x22]
    5b18:	subs	x8, x8, #0x1
    5b1c:	str	x8, [x22]
    5b20:	b.ne	5b50 <PyInit__multibytecodec@@Base+0x2cbc>  // b.any
    5b24:	b	5b48 <PyInit__multibytecodec@@Base+0x2cb4>
    5b28:	mov	x0, x23
    5b2c:	bl	29f0 <_Py_Dealloc@plt>
    5b30:	cbnz	x24, 5af8 <PyInit__multibytecodec@@Base+0x2c64>
    5b34:	mov	w23, #0xffffffff            	// #-1
    5b38:	ldr	x8, [x22]
    5b3c:	subs	x8, x8, #0x1
    5b40:	str	x8, [x22]
    5b44:	b.ne	5b50 <PyInit__multibytecodec@@Base+0x2cbc>  // b.any
    5b48:	mov	x0, x22
    5b4c:	bl	29f0 <_Py_Dealloc@plt>
    5b50:	cmn	w23, #0x1
    5b54:	b.eq	5b78 <PyInit__multibytecodec@@Base+0x2ce4>  // b.none
    5b58:	mov	x0, x19
    5b5c:	sxtw	x22, w25
    5b60:	bl	2b20 <PySequence_Size@plt>
    5b64:	cmp	x0, x22
    5b68:	add	w25, w25, #0x1
    5b6c:	b.gt	5aa0 <PyInit__multibytecodec@@Base+0x2c0c>
    5b70:	bl	2b90 <PyErr_Occurred@plt>
    5b74:	cbz	x0, 5ba0 <PyInit__multibytecodec@@Base+0x2d0c>
    5b78:	mov	x0, xzr
    5b7c:	b	5bb4 <PyInit__multibytecodec@@Base+0x2d20>
    5b80:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5b84:	ldr	x8, [x8, #4000]
    5b88:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5b8c:	add	x1, x1, #0xd8a
    5b90:	ldr	x0, [x8]
    5b94:	bl	2a80 <PyErr_SetString@plt>
    5b98:	mov	x0, xzr
    5b9c:	b	5bb4 <PyInit__multibytecodec@@Base+0x2d20>
    5ba0:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5ba4:	ldr	x0, [x0, #4016]
    5ba8:	ldr	x8, [x0]
    5bac:	add	x8, x8, #0x1
    5bb0:	str	x8, [x0]
    5bb4:	ldp	x20, x19, [sp, #64]
    5bb8:	ldp	x22, x21, [sp, #48]
    5bbc:	ldp	x24, x23, [sp, #32]
    5bc0:	ldr	x25, [sp, #16]
    5bc4:	ldp	x29, x30, [sp], #80
    5bc8:	ret
    5bcc:	stp	x29, x30, [sp, #-32]!
    5bd0:	stp	x20, x19, [sp, #16]
    5bd4:	mov	x29, sp
    5bd8:	ldr	x2, [x0, #40]
    5bdc:	cbz	x2, 5c60 <PyInit__multibytecodec@@Base+0x2dcc>
    5be0:	mov	x20, x0
    5be4:	ldr	x0, [x0, #16]
    5be8:	ldr	x4, [x20, #32]
    5bec:	add	x1, x20, #0x18
    5bf0:	mov	w5, #0x3                   	// #3
    5bf4:	mov	x3, xzr
    5bf8:	bl	3850 <PyInit__multibytecodec@@Base+0x9bc>
    5bfc:	ldr	x8, [x20, #40]
    5c00:	mov	x19, x0
    5c04:	cbz	x8, 5c1c <PyInit__multibytecodec@@Base+0x2d88>
    5c08:	str	xzr, [x20, #40]
    5c0c:	ldr	x9, [x8]
    5c10:	subs	x9, x9, #0x1
    5c14:	str	x9, [x8]
    5c18:	b.eq	5c80 <PyInit__multibytecodec@@Base+0x2dec>  // b.none
    5c1c:	cbz	x19, 5c8c <PyInit__multibytecodec@@Base+0x2df8>
    5c20:	mov	x0, x19
    5c24:	bl	2b00 <PyBytes_Size@plt>
    5c28:	cmp	x0, #0x1
    5c2c:	b.lt	5c48 <PyInit__multibytecodec@@Base+0x2db4>  // b.tstop
    5c30:	ldr	x0, [x20, #48]
    5c34:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    5c38:	add	x1, x1, #0x630
    5c3c:	mov	x2, x19
    5c40:	bl	2c90 <_PyObject_CallMethodIdObjArgs@plt>
    5c44:	cbz	x0, 5c9c <PyInit__multibytecodec@@Base+0x2e08>
    5c48:	ldr	x8, [x19]
    5c4c:	subs	x8, x8, #0x1
    5c50:	str	x8, [x19]
    5c54:	b.ne	5c60 <PyInit__multibytecodec@@Base+0x2dcc>  // b.any
    5c58:	mov	x0, x19
    5c5c:	bl	29f0 <_Py_Dealloc@plt>
    5c60:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5c64:	ldr	x0, [x0, #4016]
    5c68:	ldr	x8, [x0]
    5c6c:	add	x8, x8, #0x1
    5c70:	str	x8, [x0]
    5c74:	ldp	x20, x19, [sp, #16]
    5c78:	ldp	x29, x30, [sp], #32
    5c7c:	ret
    5c80:	mov	x0, x8
    5c84:	bl	29f0 <_Py_Dealloc@plt>
    5c88:	cbnz	x19, 5c20 <PyInit__multibytecodec@@Base+0x2d8c>
    5c8c:	mov	x0, xzr
    5c90:	ldp	x20, x19, [sp, #16]
    5c94:	ldp	x29, x30, [sp], #32
    5c98:	ret
    5c9c:	ldr	x8, [x19]
    5ca0:	subs	x8, x8, #0x1
    5ca4:	str	x8, [x19]
    5ca8:	b.eq	5cbc <PyInit__multibytecodec@@Base+0x2e28>  // b.none
    5cac:	mov	x0, xzr
    5cb0:	ldp	x20, x19, [sp, #16]
    5cb4:	ldp	x29, x30, [sp], #32
    5cb8:	ret
    5cbc:	mov	x0, x19
    5cc0:	bl	29f0 <_Py_Dealloc@plt>
    5cc4:	mov	x0, xzr
    5cc8:	ldp	x20, x19, [sp, #16]
    5ccc:	ldp	x29, x30, [sp], #32
    5cd0:	ret
    5cd4:	b	2ac0 <PyObject_Free@plt>
    5cd8:	sub	sp, sp, #0x60
    5cdc:	stp	x29, x30, [sp, #32]
    5ce0:	str	x23, [sp, #48]
    5ce4:	stp	x22, x21, [sp, #64]
    5ce8:	stp	x20, x19, [sp, #80]
    5cec:	add	x29, sp, #0x20
    5cf0:	mov	x19, x0
    5cf4:	cbz	x3, 5d3c <PyInit__multibytecodec@@Base+0x2ea8>
    5cf8:	ldr	x8, [x3, #16]
    5cfc:	add	x20, x8, x2
    5d00:	adrp	x4, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    5d04:	add	x8, sp, #0x10
    5d08:	add	x4, x4, #0x6a8
    5d0c:	mov	w5, #0x1                   	// #1
    5d10:	mov	w6, #0x2                   	// #2
    5d14:	mov	x0, x1
    5d18:	mov	x1, x2
    5d1c:	mov	x2, xzr
    5d20:	mov	w7, wzr
    5d24:	str	x8, [sp]
    5d28:	bl	2a70 <_PyArg_UnpackKeywords@plt>
    5d2c:	mov	x1, x0
    5d30:	mov	x2, x20
    5d34:	cbnz	x0, 5d54 <PyInit__multibytecodec@@Base+0x2ec0>
    5d38:	b	5fac <PyInit__multibytecodec@@Base+0x3118>
    5d3c:	mov	x20, x2
    5d40:	cbz	x1, 5d00 <PyInit__multibytecodec@@Base+0x2e6c>
    5d44:	sub	x8, x2, #0x1
    5d48:	cmp	x8, #0x2
    5d4c:	mov	x20, x2
    5d50:	b.cs	5d00 <PyInit__multibytecodec@@Base+0x2e6c>  // b.hs, b.nlast
    5d54:	ldr	x20, [x1]
    5d58:	cmp	x2, #0x1
    5d5c:	b.eq	5da0 <PyInit__multibytecodec@@Base+0x2f0c>  // b.none
    5d60:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5d64:	ldr	x3, [x1, #8]
    5d68:	ldr	x8, [x8, #4016]
    5d6c:	cmp	x3, x8
    5d70:	b.eq	5da0 <PyInit__multibytecodec@@Base+0x2f0c>  // b.none
    5d74:	ldr	x8, [x3, #8]
    5d78:	ldrb	w8, [x8, #171]
    5d7c:	tbnz	w8, #4, 5df8 <PyInit__multibytecodec@@Base+0x2f64>
    5d80:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5d84:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5d88:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5d8c:	add	x0, x0, #0xa15
    5d90:	add	x1, x1, #0xde0
    5d94:	add	x2, x2, #0xdf2
    5d98:	bl	2b10 <_PyArg_BadArgument@plt>
    5d9c:	b	5fac <PyInit__multibytecodec@@Base+0x3118>
    5da0:	mov	x23, xzr
    5da4:	ldr	x8, [x20, #8]
    5da8:	ldrb	w8, [x8, #171]
    5dac:	tbnz	w8, #4, 5de8 <PyInit__multibytecodec@@Base+0x2f54>
    5db0:	mov	x0, x20
    5db4:	bl	2a40 <PyObject_Str@plt>
    5db8:	cbz	x0, 5fac <PyInit__multibytecodec@@Base+0x3118>
    5dbc:	ldr	x8, [x0, #8]
    5dc0:	mov	x20, x0
    5dc4:	ldrb	w8, [x8, #171]
    5dc8:	tbnz	w8, #4, 5e38 <PyInit__multibytecodec@@Base+0x2fa4>
    5dcc:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5dd0:	ldr	x8, [x8, #4000]
    5dd4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5dd8:	add	x1, x1, #0xdfe
    5ddc:	ldr	x0, [x8]
    5de0:	bl	2a80 <PyErr_SetString@plt>
    5de4:	b	5f94 <PyInit__multibytecodec@@Base+0x3100>
    5de8:	mov	x21, xzr
    5dec:	ldrb	w8, [x20, #32]
    5df0:	tbz	w8, #7, 5e44 <PyInit__multibytecodec@@Base+0x2fb0>
    5df4:	b	5e50 <PyInit__multibytecodec@@Base+0x2fbc>
    5df8:	add	x1, x29, #0x18
    5dfc:	mov	x0, x3
    5e00:	bl	2ce0 <PyUnicode_AsUTF8AndSize@plt>
    5e04:	cbz	x0, 5fac <PyInit__multibytecodec@@Base+0x3118>
    5e08:	mov	x23, x0
    5e0c:	bl	2940 <strlen@plt>
    5e10:	ldr	x8, [x29, #24]
    5e14:	cmp	x0, x8
    5e18:	b.eq	5da4 <PyInit__multibytecodec@@Base+0x2f10>  // b.none
    5e1c:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    5e20:	ldr	x8, [x8, #3992]
    5e24:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5e28:	add	x1, x1, #0xdc8
    5e2c:	ldr	x0, [x8]
    5e30:	bl	2a80 <PyErr_SetString@plt>
    5e34:	b	5fac <PyInit__multibytecodec@@Base+0x3118>
    5e38:	mov	x21, x20
    5e3c:	ldrb	w8, [x20, #32]
    5e40:	tbnz	w8, #7, 5e50 <PyInit__multibytecodec@@Base+0x2fbc>
    5e44:	mov	x0, x20
    5e48:	bl	2920 <_PyUnicode_Ready@plt>
    5e4c:	tbnz	w0, #31, 5f78 <PyInit__multibytecodec@@Base+0x30e4>
    5e50:	ldr	x22, [x20, #16]
    5e54:	cbz	x23, 5ea8 <PyInit__multibytecodec@@Base+0x3014>
    5e58:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5e5c:	add	x1, x1, #0xb8a
    5e60:	mov	x0, x23
    5e64:	bl	2bd0 <strcmp@plt>
    5e68:	cbz	w0, 5ea8 <PyInit__multibytecodec@@Base+0x3014>
    5e6c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5e70:	add	x1, x1, #0xba5
    5e74:	mov	x0, x23
    5e78:	bl	2bd0 <strcmp@plt>
    5e7c:	cbz	w0, 5fcc <PyInit__multibytecodec@@Base+0x3138>
    5e80:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    5e84:	add	x1, x1, #0xbac
    5e88:	mov	x0, x23
    5e8c:	bl	2bd0 <strcmp@plt>
    5e90:	cbz	w0, 5fd4 <PyInit__multibytecodec@@Base+0x3140>
    5e94:	mov	x0, x23
    5e98:	bl	2c80 <PyUnicode_FromString@plt>
    5e9c:	mov	x23, x0
    5ea0:	cbnz	x0, 5eac <PyInit__multibytecodec@@Base+0x3018>
    5ea4:	b	5f78 <PyInit__multibytecodec@@Base+0x30e4>
    5ea8:	mov	w23, #0x1                   	// #1
    5eac:	ldr	x0, [x19, #16]
    5eb0:	ldr	x8, [x0, #32]
    5eb4:	cbz	x8, 5ecc <PyInit__multibytecodec@@Base+0x3038>
    5eb8:	ldr	x1, [x0, #8]
    5ebc:	add	x0, x29, #0x18
    5ec0:	blr	x8
    5ec4:	cbnz	w0, 5f54 <PyInit__multibytecodec@@Base+0x30c0>
    5ec8:	ldr	x0, [x19, #16]
    5ecc:	add	x1, x29, #0x18
    5ed0:	mov	w5, #0x3                   	// #3
    5ed4:	mov	x2, x20
    5ed8:	mov	x3, xzr
    5edc:	mov	x4, x23
    5ee0:	bl	3850 <PyInit__multibytecodec@@Base+0x9bc>
    5ee4:	cbz	x0, 5f54 <PyInit__multibytecodec@@Base+0x30c0>
    5ee8:	mov	x20, x0
    5eec:	cbz	x23, 5ef8 <PyInit__multibytecodec@@Base+0x3064>
    5ef0:	cmp	x23, #0x4
    5ef4:	b.cc	5f10 <PyInit__multibytecodec@@Base+0x307c>  // b.lo, b.ul, b.last
    5ef8:	ldr	x8, [x23]
    5efc:	subs	x8, x8, #0x1
    5f00:	str	x8, [x23]
    5f04:	b.ne	5f10 <PyInit__multibytecodec@@Base+0x307c>  // b.any
    5f08:	mov	x0, x23
    5f0c:	bl	29f0 <_Py_Dealloc@plt>
    5f10:	cbz	x21, 5f2c <PyInit__multibytecodec@@Base+0x3098>
    5f14:	ldr	x8, [x21]
    5f18:	subs	x8, x8, #0x1
    5f1c:	str	x8, [x21]
    5f20:	b.ne	5f2c <PyInit__multibytecodec@@Base+0x3098>  // b.any
    5f24:	mov	x0, x21
    5f28:	bl	29f0 <_Py_Dealloc@plt>
    5f2c:	mov	w0, #0x2                   	// #2
    5f30:	bl	2b70 <PyTuple_New@plt>
    5f34:	cbz	x0, 5f94 <PyInit__multibytecodec@@Base+0x3100>
    5f38:	mov	x19, x0
    5f3c:	str	x20, [x0, #24]
    5f40:	mov	x0, x22
    5f44:	bl	2ad0 <PyLong_FromSsize_t@plt>
    5f48:	cbz	x0, 5fdc <PyInit__multibytecodec@@Base+0x3148>
    5f4c:	str	x0, [x19, #32]
    5f50:	b	5fb0 <PyInit__multibytecodec@@Base+0x311c>
    5f54:	cbz	x23, 5f60 <PyInit__multibytecodec@@Base+0x30cc>
    5f58:	cmp	x23, #0x4
    5f5c:	b.cc	5f78 <PyInit__multibytecodec@@Base+0x30e4>  // b.lo, b.ul, b.last
    5f60:	ldr	x8, [x23]
    5f64:	subs	x8, x8, #0x1
    5f68:	str	x8, [x23]
    5f6c:	b.ne	5f78 <PyInit__multibytecodec@@Base+0x30e4>  // b.any
    5f70:	mov	x0, x23
    5f74:	bl	29f0 <_Py_Dealloc@plt>
    5f78:	cbz	x21, 5fac <PyInit__multibytecodec@@Base+0x3118>
    5f7c:	ldr	x8, [x21]
    5f80:	subs	x8, x8, #0x1
    5f84:	str	x8, [x21]
    5f88:	b.ne	5fac <PyInit__multibytecodec@@Base+0x3118>  // b.any
    5f8c:	mov	x0, x21
    5f90:	b	5fa8 <PyInit__multibytecodec@@Base+0x3114>
    5f94:	ldr	x8, [x20]
    5f98:	subs	x8, x8, #0x1
    5f9c:	str	x8, [x20]
    5fa0:	b.ne	5fac <PyInit__multibytecodec@@Base+0x3118>  // b.any
    5fa4:	mov	x0, x20
    5fa8:	bl	29f0 <_Py_Dealloc@plt>
    5fac:	mov	x19, xzr
    5fb0:	mov	x0, x19
    5fb4:	ldp	x20, x19, [sp, #80]
    5fb8:	ldp	x22, x21, [sp, #64]
    5fbc:	ldr	x23, [sp, #48]
    5fc0:	ldp	x29, x30, [sp, #32]
    5fc4:	add	sp, sp, #0x60
    5fc8:	ret
    5fcc:	mov	w23, #0x2                   	// #2
    5fd0:	b	5eac <PyInit__multibytecodec@@Base+0x3018>
    5fd4:	mov	w23, #0x3                   	// #3
    5fd8:	b	5eac <PyInit__multibytecodec@@Base+0x3018>
    5fdc:	ldr	x8, [x19]
    5fe0:	subs	x8, x8, #0x1
    5fe4:	str	x8, [x19]
    5fe8:	b.ne	5fac <PyInit__multibytecodec@@Base+0x3118>  // b.any
    5fec:	mov	x0, x19
    5ff0:	b	5fa8 <PyInit__multibytecodec@@Base+0x3114>
    5ff4:	sub	sp, sp, #0x110
    5ff8:	stp	x29, x30, [sp, #208]
    5ffc:	stp	x28, x23, [sp, #224]
    6000:	stp	x22, x21, [sp, #240]
    6004:	stp	x20, x19, [sp, #256]
    6008:	add	x29, sp, #0xd0
    600c:	mov	x21, x2
    6010:	mov	x20, x1
    6014:	mov	x19, x0
    6018:	cbz	x3, 6024 <PyInit__multibytecodec@@Base+0x3190>
    601c:	ldr	x22, [x3, #16]
    6020:	b	6028 <PyInit__multibytecodec@@Base+0x3194>
    6024:	mov	x22, xzr
    6028:	movi	v0.2d, #0x0
    602c:	stp	q0, q0, [sp, #64]
    6030:	stp	q0, q0, [sp, #32]
    6034:	str	q0, [sp, #16]
    6038:	cbz	x20, 604c <PyInit__multibytecodec@@Base+0x31b8>
    603c:	sub	x8, x21, #0x1
    6040:	cmp	x8, #0x1
    6044:	b.hi	604c <PyInit__multibytecodec@@Base+0x31b8>  // b.pmore
    6048:	cbz	x3, 6080 <PyInit__multibytecodec@@Base+0x31ec>
    604c:	adrp	x4, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    6050:	add	x8, sp, #0x60
    6054:	add	x4, x4, #0x6e8
    6058:	mov	w5, #0x1                   	// #1
    605c:	mov	w6, #0x2                   	// #2
    6060:	mov	x0, x20
    6064:	mov	x1, x21
    6068:	mov	x2, xzr
    606c:	mov	w7, wzr
    6070:	str	x8, [sp]
    6074:	bl	2a70 <_PyArg_UnpackKeywords@plt>
    6078:	mov	x20, x0
    607c:	cbz	x0, 6094 <PyInit__multibytecodec@@Base+0x3200>
    6080:	ldr	x0, [x20]
    6084:	add	x1, sp, #0x10
    6088:	mov	w2, wzr
    608c:	bl	2c50 <PyObject_GetBuffer@plt>
    6090:	cbz	w0, 60c4 <PyInit__multibytecodec@@Base+0x3230>
    6094:	mov	x19, xzr
    6098:	ldr	x8, [sp, #24]
    609c:	cbz	x8, 60a8 <PyInit__multibytecodec@@Base+0x3214>
    60a0:	add	x0, sp, #0x10
    60a4:	bl	2980 <PyBuffer_Release@plt>
    60a8:	mov	x0, x19
    60ac:	ldp	x20, x19, [sp, #256]
    60b0:	ldp	x22, x21, [sp, #240]
    60b4:	ldp	x28, x23, [sp, #224]
    60b8:	ldp	x29, x30, [sp, #208]
    60bc:	add	sp, sp, #0x110
    60c0:	ret
    60c4:	add	x0, sp, #0x10
    60c8:	mov	w1, #0x43                  	// #67
    60cc:	bl	29c0 <PyBuffer_IsContiguous@plt>
    60d0:	cbz	w0, 617c <PyInit__multibytecodec@@Base+0x32e8>
    60d4:	add	x8, x22, x21
    60d8:	cmp	x8, #0x1
    60dc:	b.eq	611c <PyInit__multibytecodec@@Base+0x3288>  // b.none
    60e0:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    60e4:	ldr	x3, [x20, #8]
    60e8:	ldr	x8, [x8, #4016]
    60ec:	cmp	x3, x8
    60f0:	b.eq	611c <PyInit__multibytecodec@@Base+0x3288>  // b.none
    60f4:	ldr	x8, [x3, #8]
    60f8:	ldrb	w8, [x8, #171]
    60fc:	tbnz	w8, #4, 636c <PyInit__multibytecodec@@Base+0x34d8>
    6100:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6104:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6108:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    610c:	add	x0, x0, #0xc2f
    6110:	add	x1, x1, #0xde0
    6114:	add	x2, x2, #0xdf2
    6118:	b	6198 <PyInit__multibytecodec@@Base+0x3304>
    611c:	mov	x21, xzr
    6120:	ldr	x23, [sp, #16]
    6124:	ldr	x20, [sp, #32]
    6128:	cbz	x21, 61ac <PyInit__multibytecodec@@Base+0x3318>
    612c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6130:	add	x1, x1, #0xb8a
    6134:	mov	x0, x21
    6138:	bl	2bd0 <strcmp@plt>
    613c:	cbz	w0, 61ac <PyInit__multibytecodec@@Base+0x3318>
    6140:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6144:	add	x1, x1, #0xba5
    6148:	mov	x0, x21
    614c:	bl	2bd0 <strcmp@plt>
    6150:	cbz	w0, 63ac <PyInit__multibytecodec@@Base+0x3518>
    6154:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6158:	add	x1, x1, #0xbac
    615c:	mov	x0, x21
    6160:	bl	2bd0 <strcmp@plt>
    6164:	cbz	w0, 63b4 <PyInit__multibytecodec@@Base+0x3520>
    6168:	mov	x0, x21
    616c:	bl	2c80 <PyUnicode_FromString@plt>
    6170:	mov	x21, x0
    6174:	cbnz	x0, 61b0 <PyInit__multibytecodec@@Base+0x331c>
    6178:	b	6094 <PyInit__multibytecodec@@Base+0x3200>
    617c:	ldr	x3, [x20]
    6180:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6184:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6188:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x316c>
    618c:	add	x0, x0, #0xc2f
    6190:	add	x1, x1, #0xc36
    6194:	add	x2, x2, #0xc47
    6198:	bl	2b10 <_PyArg_BadArgument@plt>
    619c:	mov	x19, xzr
    61a0:	ldr	x8, [sp, #24]
    61a4:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    61a8:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    61ac:	mov	w21, #0x1                   	// #1
    61b0:	cbz	x20, 6304 <PyInit__multibytecodec@@Base+0x3470>
    61b4:	sub	x8, x29, #0x60
    61b8:	add	x22, x8, #0x20
    61bc:	mov	x0, x22
    61c0:	bl	2ab0 <_PyUnicodeWriter_Init@plt>
    61c4:	add	x8, x23, x20
    61c8:	stur	x20, [x29, #-24]
    61cc:	stp	x23, x23, [x29, #-96]
    61d0:	stp	x8, xzr, [x29, #-80]
    61d4:	ldr	x9, [x19, #16]
    61d8:	ldr	x8, [x9, #56]
    61dc:	cbz	x8, 6230 <PyInit__multibytecodec@@Base+0x339c>
    61e0:	ldr	x1, [x9, #8]
    61e4:	sub	x0, x29, #0x8
    61e8:	blr	x8
    61ec:	cbnz	w0, 62ac <PyInit__multibytecodec@@Base+0x3418>
    61f0:	b	6230 <PyInit__multibytecodec@@Base+0x339c>
    61f4:	ldr	x10, [x19, #16]
    61f8:	sub	x3, x9, x8
    61fc:	sub	x0, x29, #0x8
    6200:	sub	x2, x29, #0x60
    6204:	ldr	x11, [x10, #48]
    6208:	ldr	x1, [x10, #8]
    620c:	mov	x4, x22
    6210:	blr	x11
    6214:	cbz	x0, 6240 <PyInit__multibytecodec@@Base+0x33ac>
    6218:	mov	x3, x0
    621c:	ldr	x0, [x19, #16]
    6220:	sub	x1, x29, #0x60
    6224:	mov	x2, x21
    6228:	bl	4b58 <PyInit__multibytecodec@@Base+0x1cc4>
    622c:	cbnz	w0, 62ac <PyInit__multibytecodec@@Base+0x3418>
    6230:	ldur	x8, [x29, #-96]
    6234:	ldur	x9, [x29, #-80]
    6238:	cmp	x8, x9
    623c:	b.cc	61f4 <PyInit__multibytecodec@@Base+0x3360>  // b.lo, b.ul, b.last
    6240:	mov	x0, x22
    6244:	bl	2d50 <_PyUnicodeWriter_Finish@plt>
    6248:	cbz	x0, 62ac <PyInit__multibytecodec@@Base+0x3418>
    624c:	mov	x23, x0
    6250:	ldur	x0, [x29, #-72]
    6254:	cbz	x0, 626c <PyInit__multibytecodec@@Base+0x33d8>
    6258:	ldr	x8, [x0]
    625c:	subs	x8, x8, #0x1
    6260:	str	x8, [x0]
    6264:	b.ne	626c <PyInit__multibytecodec@@Base+0x33d8>  // b.any
    6268:	bl	29f0 <_Py_Dealloc@plt>
    626c:	cbz	x21, 6278 <PyInit__multibytecodec@@Base+0x33e4>
    6270:	cmp	x21, #0x4
    6274:	b.cc	6290 <PyInit__multibytecodec@@Base+0x33fc>  // b.lo, b.ul, b.last
    6278:	ldr	x8, [x21]
    627c:	subs	x8, x8, #0x1
    6280:	str	x8, [x21]
    6284:	b.ne	6290 <PyInit__multibytecodec@@Base+0x33fc>  // b.any
    6288:	mov	x0, x21
    628c:	bl	29f0 <_Py_Dealloc@plt>
    6290:	mov	w0, #0x2                   	// #2
    6294:	bl	2b70 <PyTuple_New@plt>
    6298:	cbz	x0, 640c <PyInit__multibytecodec@@Base+0x3578>
    629c:	mov	x19, x0
    62a0:	str	x23, [x0, #24]
    62a4:	mov	x0, x20
    62a8:	b	6354 <PyInit__multibytecodec@@Base+0x34c0>
    62ac:	cbz	x21, 62b8 <PyInit__multibytecodec@@Base+0x3424>
    62b0:	cmp	x21, #0x4
    62b4:	b.cc	62d0 <PyInit__multibytecodec@@Base+0x343c>  // b.lo, b.ul, b.last
    62b8:	ldr	x8, [x21]
    62bc:	subs	x8, x8, #0x1
    62c0:	str	x8, [x21]
    62c4:	b.ne	62d0 <PyInit__multibytecodec@@Base+0x343c>  // b.any
    62c8:	mov	x0, x21
    62cc:	bl	29f0 <_Py_Dealloc@plt>
    62d0:	ldur	x0, [x29, #-72]
    62d4:	cbz	x0, 62ec <PyInit__multibytecodec@@Base+0x3458>
    62d8:	ldr	x8, [x0]
    62dc:	subs	x8, x8, #0x1
    62e0:	str	x8, [x0]
    62e4:	b.ne	62ec <PyInit__multibytecodec@@Base+0x3458>  // b.any
    62e8:	bl	29f0 <_Py_Dealloc@plt>
    62ec:	mov	x0, x22
    62f0:	bl	2a60 <_PyUnicodeWriter_Dealloc@plt>
    62f4:	mov	x19, xzr
    62f8:	ldr	x8, [sp, #24]
    62fc:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    6300:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    6304:	cbz	x21, 6310 <PyInit__multibytecodec@@Base+0x347c>
    6308:	cmp	x21, #0x4
    630c:	b.cc	6328 <PyInit__multibytecodec@@Base+0x3494>  // b.lo, b.ul, b.last
    6310:	ldr	x8, [x21]
    6314:	subs	x8, x8, #0x1
    6318:	str	x8, [x21]
    631c:	b.ne	6328 <PyInit__multibytecodec@@Base+0x3494>  // b.any
    6320:	mov	x0, x21
    6324:	bl	29f0 <_Py_Dealloc@plt>
    6328:	mov	x0, xzr
    632c:	mov	w1, wzr
    6330:	bl	2d80 <PyUnicode_New@plt>
    6334:	cbz	x0, 6094 <PyInit__multibytecodec@@Base+0x3200>
    6338:	mov	x20, x0
    633c:	mov	w0, #0x2                   	// #2
    6340:	bl	2b70 <PyTuple_New@plt>
    6344:	cbz	x0, 63e4 <PyInit__multibytecodec@@Base+0x3550>
    6348:	mov	x19, x0
    634c:	str	x20, [x0, #24]
    6350:	mov	x0, xzr
    6354:	bl	2ad0 <PyLong_FromSsize_t@plt>
    6358:	cbz	x0, 63bc <PyInit__multibytecodec@@Base+0x3528>
    635c:	str	x0, [x19, #32]
    6360:	ldr	x8, [sp, #24]
    6364:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    6368:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    636c:	sub	x1, x29, #0x60
    6370:	mov	x0, x3
    6374:	bl	2ce0 <PyUnicode_AsUTF8AndSize@plt>
    6378:	cbz	x0, 6094 <PyInit__multibytecodec@@Base+0x3200>
    637c:	mov	x21, x0
    6380:	bl	2940 <strlen@plt>
    6384:	ldur	x8, [x29, #-96]
    6388:	cmp	x0, x8
    638c:	b.eq	6120 <PyInit__multibytecodec@@Base+0x328c>  // b.none
    6390:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    6394:	ldr	x8, [x8, #3992]
    6398:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    639c:	add	x1, x1, #0xdc8
    63a0:	ldr	x0, [x8]
    63a4:	bl	2a80 <PyErr_SetString@plt>
    63a8:	b	6094 <PyInit__multibytecodec@@Base+0x3200>
    63ac:	mov	w21, #0x2                   	// #2
    63b0:	b	61b0 <PyInit__multibytecodec@@Base+0x331c>
    63b4:	mov	w21, #0x3                   	// #3
    63b8:	b	61b0 <PyInit__multibytecodec@@Base+0x331c>
    63bc:	ldr	x8, [x19]
    63c0:	subs	x8, x8, #0x1
    63c4:	str	x8, [x19]
    63c8:	b.ne	6094 <PyInit__multibytecodec@@Base+0x3200>  // b.any
    63cc:	mov	x0, x19
    63d0:	bl	29f0 <_Py_Dealloc@plt>
    63d4:	mov	x19, xzr
    63d8:	ldr	x8, [sp, #24]
    63dc:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    63e0:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    63e4:	ldr	x8, [x20]
    63e8:	subs	x8, x8, #0x1
    63ec:	str	x8, [x20]
    63f0:	b.ne	6094 <PyInit__multibytecodec@@Base+0x3200>  // b.any
    63f4:	mov	x0, x20
    63f8:	bl	29f0 <_Py_Dealloc@plt>
    63fc:	mov	x19, xzr
    6400:	ldr	x8, [sp, #24]
    6404:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    6408:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    640c:	ldr	x8, [x23]
    6410:	subs	x8, x8, #0x1
    6414:	str	x8, [x23]
    6418:	b.ne	6094 <PyInit__multibytecodec@@Base+0x3200>  // b.any
    641c:	mov	x0, x23
    6420:	bl	29f0 <_Py_Dealloc@plt>
    6424:	mov	x19, xzr
    6428:	ldr	x8, [sp, #24]
    642c:	cbnz	x8, 60a0 <PyInit__multibytecodec@@Base+0x320c>
    6430:	b	60a8 <PyInit__multibytecodec@@Base+0x3214>
    6434:	stp	x29, x30, [sp, #-32]!
    6438:	str	x19, [sp, #16]
    643c:	mov	x29, sp
    6440:	mov	x19, x1
    6444:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    6448:	add	x1, x1, #0xe45
    644c:	mov	x0, x19
    6450:	bl	2b40 <PyCapsule_IsValid@plt>
    6454:	cbz	w0, 6490 <PyInit__multibytecodec@@Base+0x35fc>
    6458:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    645c:	add	x1, x1, #0xe45
    6460:	mov	x0, x19
    6464:	bl	2d00 <PyCapsule_GetPointer@plt>
    6468:	ldr	x8, [x0, #16]
    646c:	mov	x19, x0
    6470:	cbz	x8, 64b8 <PyInit__multibytecodec@@Base+0x3624>
    6474:	ldr	x0, [x19, #8]
    6478:	blr	x8
    647c:	cbz	w0, 64b8 <PyInit__multibytecodec@@Base+0x3624>
    6480:	mov	x0, xzr
    6484:	ldr	x19, [sp, #16]
    6488:	ldp	x29, x30, [sp], #32
    648c:	ret
    6490:	adrp	x8, 17000 <PyInit__multibytecodec@@Base+0x1416c>
    6494:	ldr	x8, [x8, #3992]
    6498:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x316c>
    649c:	add	x1, x1, #0xe5c
    64a0:	ldr	x0, [x8]
    64a4:	bl	2a80 <PyErr_SetString@plt>
    64a8:	mov	x0, xzr
    64ac:	ldr	x19, [sp, #16]
    64b0:	ldp	x29, x30, [sp], #32
    64b4:	ret
    64b8:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1516c>
    64bc:	add	x0, x0, #0xe78
    64c0:	bl	2c70 <_PyObject_New@plt>
    64c4:	cbz	x0, 6484 <PyInit__multibytecodec@@Base+0x35f0>
    64c8:	str	x19, [x0, #16]
    64cc:	ldr	x19, [sp, #16]
    64d0:	ldp	x29, x30, [sp], #32
    64d4:	ret

Disassembly of section .fini:

00000000000064d8 <.fini>:
    64d8:	stp	x29, x30, [sp, #-16]!
    64dc:	mov	x29, sp
    64e0:	ldp	x29, x30, [sp], #16
    64e4:	ret
