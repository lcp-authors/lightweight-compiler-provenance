
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003c28 <.init>:
    3c28:	stp	x29, x30, [sp, #-16]!
    3c2c:	mov	x29, sp
    3c30:	bl	42a0 <PySequence_Fast@plt+0x10>
    3c34:	ldp	x29, x30, [sp], #16
    3c38:	ret

Disassembly of section .plt:

0000000000003c40 <memcpy@plt-0x20>:
    3c40:	stp	x16, x30, [sp, #-16]!
    3c44:	adrp	x16, 1c000 <PyInit__elementtree@@Base+0x11c04>
    3c48:	ldr	x17, [x16, #4088]
    3c4c:	add	x16, x16, #0xff8
    3c50:	br	x17
    3c54:	nop
    3c58:	nop
    3c5c:	nop

0000000000003c60 <memcpy@plt>:
    3c60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16]
    3c68:	add	x16, x16, #0x0
    3c6c:	br	x17

0000000000003c70 <PyUnicode_FromFormat@plt>:
    3c70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #8]
    3c78:	add	x16, x16, #0x8
    3c7c:	br	x17

0000000000003c80 <memmove@plt>:
    3c80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #16]
    3c88:	add	x16, x16, #0x10
    3c8c:	br	x17

0000000000003c90 <PyList_New@plt>:
    3c90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #24]
    3c98:	add	x16, x16, #0x18
    3c9c:	br	x17

0000000000003ca0 <_PyUnicode_Ready@plt>:
    3ca0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #32]
    3ca8:	add	x16, x16, #0x20
    3cac:	br	x17

0000000000003cb0 <strlen@plt>:
    3cb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #40]
    3cb8:	add	x16, x16, #0x28
    3cbc:	br	x17

0000000000003cc0 <PyDict_Items@plt>:
    3cc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #48]
    3cc8:	add	x16, x16, #0x30
    3ccc:	br	x17

0000000000003cd0 <_PyObject_LookupAttrId@plt>:
    3cd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #56]
    3cd8:	add	x16, x16, #0x38
    3cdc:	br	x17

0000000000003ce0 <_PyBytes_Resize@plt>:
    3ce0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #64]
    3ce8:	add	x16, x16, #0x40
    3cec:	br	x17

0000000000003cf0 <PyObject_ClearWeakRefs@plt>:
    3cf0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #72]
    3cf8:	add	x16, x16, #0x48
    3cfc:	br	x17

0000000000003d00 <PyNumber_AsSsize_t@plt>:
    3d00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #80]
    3d08:	add	x16, x16, #0x50
    3d0c:	br	x17

0000000000003d10 <PyMem_Free@plt>:
    3d10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #88]
    3d18:	add	x16, x16, #0x58
    3d1c:	br	x17

0000000000003d20 <PyBuffer_Release@plt>:
    3d20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #96]
    3d28:	add	x16, x16, #0x60
    3d2c:	br	x17

0000000000003d30 <PyNumber_Add@plt>:
    3d30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #104]
    3d38:	add	x16, x16, #0x68
    3d3c:	br	x17

0000000000003d40 <PyObject_GetAttrString@plt>:
    3d40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #112]
    3d48:	add	x16, x16, #0x70
    3d4c:	br	x17

0000000000003d50 <__cxa_finalize@plt>:
    3d50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #120]
    3d58:	add	x16, x16, #0x78
    3d5c:	br	x17

0000000000003d60 <PyUnicode_Join@plt>:
    3d60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #128]
    3d68:	add	x16, x16, #0x80
    3d6c:	br	x17

0000000000003d70 <PyList_SetSlice@plt>:
    3d70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #136]
    3d78:	add	x16, x16, #0x88
    3d7c:	br	x17

0000000000003d80 <PyBytes_FromStringAndSize@plt>:
    3d80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #144]
    3d88:	add	x16, x16, #0x90
    3d8c:	br	x17

0000000000003d90 <PyObject_SetAttrString@plt>:
    3d90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #152]
    3d98:	add	x16, x16, #0x98
    3d9c:	br	x17

0000000000003da0 <PyErr_WarnEx@plt>:
    3da0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #160]
    3da8:	add	x16, x16, #0xa0
    3dac:	br	x17

0000000000003db0 <_Py_Dealloc@plt>:
    3db0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #168]
    3db8:	add	x16, x16, #0xa8
    3dbc:	br	x17

0000000000003dc0 <PyErr_NoMemory@plt>:
    3dc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #176]
    3dc8:	add	x16, x16, #0xb0
    3dcc:	br	x17

0000000000003dd0 <PyErr_SetObject@plt>:
    3dd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #184]
    3dd8:	add	x16, x16, #0xb8
    3ddc:	br	x17

0000000000003de0 <PyObject_GC_Del@plt>:
    3de0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #192]
    3de8:	add	x16, x16, #0xc0
    3dec:	br	x17

0000000000003df0 <_PyObject_CallFunction_SizeT@plt>:
    3df0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #200]
    3df8:	add	x16, x16, #0xc8
    3dfc:	br	x17

0000000000003e00 <PyObject_GC_Track@plt>:
    3e00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #208]
    3e08:	add	x16, x16, #0xd0
    3e0c:	br	x17

0000000000003e10 <_PyArg_UnpackKeywords@plt>:
    3e10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #216]
    3e18:	add	x16, x16, #0xd8
    3e1c:	br	x17

0000000000003e20 <PyErr_SetString@plt>:
    3e20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #224]
    3e28:	add	x16, x16, #0xe0
    3e2c:	br	x17

0000000000003e30 <_PyObject_GC_New@plt>:
    3e30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #232]
    3e38:	add	x16, x16, #0xe8
    3e3c:	br	x17

0000000000003e40 <PyObject_Malloc@plt>:
    3e40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #240]
    3e48:	add	x16, x16, #0xf0
    3e4c:	br	x17

0000000000003e50 <PyModule_GetState@plt>:
    3e50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #248]
    3e58:	add	x16, x16, #0xf8
    3e5c:	br	x17

0000000000003e60 <PyUnicode_AsEncodedString@plt>:
    3e60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #256]
    3e68:	add	x16, x16, #0x100
    3e6c:	br	x17

0000000000003e70 <PyMem_Realloc@plt>:
    3e70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #264]
    3e78:	add	x16, x16, #0x108
    3e7c:	br	x17

0000000000003e80 <PyErr_SetNone@plt>:
    3e80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #272]
    3e88:	add	x16, x16, #0x110
    3e8c:	br	x17

0000000000003e90 <PyErr_ExceptionMatches@plt>:
    3e90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #280]
    3e98:	add	x16, x16, #0x118
    3e9c:	br	x17

0000000000003ea0 <memset@plt>:
    3ea0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #288]
    3ea8:	add	x16, x16, #0x120
    3eac:	br	x17

0000000000003eb0 <PyObject_Free@plt>:
    3eb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #296]
    3eb8:	add	x16, x16, #0x128
    3ebc:	br	x17

0000000000003ec0 <PyLong_FromSsize_t@plt>:
    3ec0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #304]
    3ec8:	add	x16, x16, #0x130
    3ecc:	br	x17

0000000000003ed0 <PyCapsule_Import@plt>:
    3ed0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #312]
    3ed8:	add	x16, x16, #0x138
    3edc:	br	x17

0000000000003ee0 <PyType_Ready@plt>:
    3ee0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #320]
    3ee8:	add	x16, x16, #0x140
    3eec:	br	x17

0000000000003ef0 <PyLong_FromLong@plt>:
    3ef0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #328]
    3ef8:	add	x16, x16, #0x148
    3efc:	br	x17

0000000000003f00 <PyLong_AsSsize_t@plt>:
    3f00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #336]
    3f08:	add	x16, x16, #0x150
    3f0c:	br	x17

0000000000003f10 <PyObject_RichCompareBool@plt>:
    3f10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #344]
    3f18:	add	x16, x16, #0x158
    3f1c:	br	x17

0000000000003f20 <_PyArg_BadArgument@plt>:
    3f20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #352]
    3f28:	add	x16, x16, #0x160
    3f2c:	br	x17

0000000000003f30 <PyErr_NewException@plt>:
    3f30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #360]
    3f38:	add	x16, x16, #0x168
    3f3c:	br	x17

0000000000003f40 <PyErr_Clear@plt>:
    3f40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #368]
    3f48:	add	x16, x16, #0x170
    3f4c:	br	x17

0000000000003f50 <PyList_Append@plt>:
    3f50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #376]
    3f58:	add	x16, x16, #0x178
    3f5c:	br	x17

0000000000003f60 <PySlice_AdjustIndices@plt>:
    3f60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #384]
    3f68:	add	x16, x16, #0x180
    3f6c:	br	x17

0000000000003f70 <PyDict_Update@plt>:
    3f70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #392]
    3f78:	add	x16, x16, #0x188
    3f7c:	br	x17

0000000000003f80 <__gmon_start__@plt>:
    3f80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #400]
    3f88:	add	x16, x16, #0x190
    3f8c:	br	x17

0000000000003f90 <PyTuple_New@plt>:
    3f90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #408]
    3f98:	add	x16, x16, #0x198
    3f9c:	br	x17

0000000000003fa0 <PyThreadState_Get@plt>:
    3fa0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #416]
    3fa8:	add	x16, x16, #0x1a0
    3fac:	br	x17

0000000000003fb0 <_PyArg_CheckPositional@plt>:
    3fb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #424]
    3fb8:	add	x16, x16, #0x1a8
    3fbc:	br	x17

0000000000003fc0 <PyDict_DelItem@plt>:
    3fc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #432]
    3fc8:	add	x16, x16, #0x1b0
    3fcc:	br	x17

0000000000003fd0 <PyErr_Occurred@plt>:
    3fd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #440]
    3fd8:	add	x16, x16, #0x1b8
    3fdc:	br	x17

0000000000003fe0 <PyModule_Create2@plt>:
    3fe0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #448]
    3fe8:	add	x16, x16, #0x1c0
    3fec:	br	x17

0000000000003ff0 <PyImport_ImportModule@plt>:
    3ff0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #456]
    3ff8:	add	x16, x16, #0x1c8
    3ffc:	br	x17

0000000000004000 <PyList_SetItem@plt>:
    4000:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #464]
    4008:	add	x16, x16, #0x1d0
    400c:	br	x17

0000000000004010 <PyState_FindModule@plt>:
    4010:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #472]
    4018:	add	x16, x16, #0x1d8
    401c:	br	x17

0000000000004020 <PyObject_CallFunctionObjArgs@plt>:
    4020:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #480]
    4028:	add	x16, x16, #0x1e0
    402c:	br	x17

0000000000004030 <Py_ReprEnter@plt>:
    4030:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #488]
    4038:	add	x16, x16, #0x1e8
    403c:	br	x17

0000000000004040 <strcmp@plt>:
    4040:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #496]
    4048:	add	x16, x16, #0x1f0
    404c:	br	x17

0000000000004050 <_PyObject_SetAttrId@plt>:
    4050:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #504]
    4058:	add	x16, x16, #0x1f8
    405c:	br	x17

0000000000004060 <_PyArg_ParseTuple_SizeT@plt>:
    4060:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #512]
    4068:	add	x16, x16, #0x200
    406c:	br	x17

0000000000004070 <_Py_CheckFunctionResult@plt>:
    4070:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #520]
    4078:	add	x16, x16, #0x208
    407c:	br	x17

0000000000004080 <PyUnicode_DecodeUTF8@plt>:
    4080:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #528]
    4088:	add	x16, x16, #0x210
    408c:	br	x17

0000000000004090 <_PyTrash_thread_deposit_object@plt>:
    4090:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #536]
    4098:	add	x16, x16, #0x218
    409c:	br	x17

00000000000040a0 <PyObject_IsTrue@plt>:
    40a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #544]
    40a8:	add	x16, x16, #0x220
    40ac:	br	x17

00000000000040b0 <PyObject_Realloc@plt>:
    40b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #552]
    40b8:	add	x16, x16, #0x228
    40bc:	br	x17

00000000000040c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    40c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #560]
    40c8:	add	x16, x16, #0x230
    40cc:	br	x17

00000000000040d0 <PyDict_New@plt>:
    40d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #568]
    40d8:	add	x16, x16, #0x238
    40dc:	br	x17

00000000000040e0 <PyCallable_Check@plt>:
    40e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #576]
    40e8:	add	x16, x16, #0x240
    40ec:	br	x17

00000000000040f0 <PyObject_GetBuffer@plt>:
    40f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #584]
    40f8:	add	x16, x16, #0x248
    40fc:	br	x17

0000000000004100 <PyDict_Next@plt>:
    4100:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #592]
    4108:	add	x16, x16, #0x250
    410c:	br	x17

0000000000004110 <PyUnicode_AsUTF8@plt>:
    4110:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #600]
    4118:	add	x16, x16, #0x258
    411c:	br	x17

0000000000004120 <strncat@plt>:
    4120:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #608]
    4128:	add	x16, x16, #0x260
    412c:	br	x17

0000000000004130 <PyDict_Keys@plt>:
    4130:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #616]
    4138:	add	x16, x16, #0x268
    413c:	br	x17

0000000000004140 <_PyObject_GetAttrId@plt>:
    4140:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #624]
    4148:	add	x16, x16, #0x270
    414c:	br	x17

0000000000004150 <PyUnicode_FromString@plt>:
    4150:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #632]
    4158:	add	x16, x16, #0x278
    415c:	br	x17

0000000000004160 <_PyObject_CallMethodIdObjArgs@plt>:
    4160:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #640]
    4168:	add	x16, x16, #0x280
    416c:	br	x17

0000000000004170 <PyModule_AddObject@plt>:
    4170:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #648]
    4178:	add	x16, x16, #0x288
    417c:	br	x17

0000000000004180 <PySlice_Unpack@plt>:
    4180:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #656]
    4188:	add	x16, x16, #0x290
    418c:	br	x17

0000000000004190 <PyDict_SetItem@plt>:
    4190:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #664]
    4198:	add	x16, x16, #0x298
    419c:	br	x17

00000000000041a0 <PyDict_Copy@plt>:
    41a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #672]
    41a8:	add	x16, x16, #0x2a0
    41ac:	br	x17

00000000000041b0 <PyType_IsSubtype@plt>:
    41b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #680]
    41b8:	add	x16, x16, #0x2a8
    41bc:	br	x17

00000000000041c0 <PyUnicode_AsUTF8AndSize@plt>:
    41c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #688]
    41c8:	add	x16, x16, #0x2b0
    41cc:	br	x17

00000000000041d0 <PyErr_Format@plt>:
    41d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #696]
    41d8:	add	x16, x16, #0x2b8
    41dc:	br	x17

00000000000041e0 <_Py_BuildValue_SizeT@plt>:
    41e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #704]
    41e8:	add	x16, x16, #0x2c0
    41ec:	br	x17

00000000000041f0 <Py_ReprLeave@plt>:
    41f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #712]
    41f8:	add	x16, x16, #0x2c8
    41fc:	br	x17

0000000000004200 <PyUnicode_FromStringAndSize@plt>:
    4200:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #720]
    4208:	add	x16, x16, #0x2d0
    420c:	br	x17

0000000000004210 <_PyTrash_thread_destroy_chain@plt>:
    4210:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #728]
    4218:	add	x16, x16, #0x2d8
    421c:	br	x17

0000000000004220 <_PyObject_MakeTpCall@plt>:
    4220:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #736]
    4228:	add	x16, x16, #0x2e0
    422c:	br	x17

0000000000004230 <PyNumber_Index@plt>:
    4230:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #744]
    4238:	add	x16, x16, #0x2e8
    423c:	br	x17

0000000000004240 <PyMem_Malloc@plt>:
    4240:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #752]
    4248:	add	x16, x16, #0x2f0
    424c:	br	x17

0000000000004250 <PyUnicode_New@plt>:
    4250:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4254:	ldr	x17, [x16, #760]
    4258:	add	x16, x16, #0x2f8
    425c:	br	x17

0000000000004260 <PyTuple_Pack@plt>:
    4260:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4264:	ldr	x17, [x16, #768]
    4268:	add	x16, x16, #0x300
    426c:	br	x17

0000000000004270 <PyObject_GC_UnTrack@plt>:
    4270:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4274:	ldr	x17, [x16, #776]
    4278:	add	x16, x16, #0x308
    427c:	br	x17

0000000000004280 <PyDict_GetItemWithError@plt>:
    4280:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4284:	ldr	x17, [x16, #784]
    4288:	add	x16, x16, #0x310
    428c:	br	x17

0000000000004290 <PySequence_Fast@plt>:
    4290:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4294:	ldr	x17, [x16, #792]
    4298:	add	x16, x16, #0x318
    429c:	br	x17

Disassembly of section .text:

00000000000042a0 <PyInit__elementtree@@Base-0x615c>:
    42a0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    42a4:	ldr	x0, [x0, #3960]
    42a8:	cbz	x0, 42b0 <PySequence_Fast@plt+0x20>
    42ac:	b	3f80 <__gmon_start__@plt>
    42b0:	ret
    42b4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    42b8:	add	x0, x0, #0x430
    42bc:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x13c04>
    42c0:	add	x1, x1, #0x430
    42c4:	cmp	x1, x0
    42c8:	b.eq	42e0 <PySequence_Fast@plt+0x50>  // b.none
    42cc:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    42d0:	ldr	x1, [x1, #3888]
    42d4:	cbz	x1, 42e0 <PySequence_Fast@plt+0x50>
    42d8:	mov	x16, x1
    42dc:	br	x16
    42e0:	ret
    42e4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    42e8:	add	x0, x0, #0x430
    42ec:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x13c04>
    42f0:	add	x1, x1, #0x430
    42f4:	sub	x1, x1, x0
    42f8:	mov	x2, #0x2                   	// #2
    42fc:	asr	x1, x1, #3
    4300:	sdiv	x1, x1, x2
    4304:	cbz	x1, 431c <PySequence_Fast@plt+0x8c>
    4308:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x11c04>
    430c:	ldr	x2, [x2, #4048]
    4310:	cbz	x2, 431c <PySequence_Fast@plt+0x8c>
    4314:	mov	x16, x2
    4318:	br	x16
    431c:	ret
    4320:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    4324:	ldrb	w1, [x0, #1072]
    4328:	cbnz	w1, 436c <PySequence_Fast@plt+0xdc>
    432c:	stp	x29, x30, [sp, #-32]!
    4330:	mov	x29, sp
    4334:	str	x19, [sp, #16]
    4338:	mov	x19, x0
    433c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4340:	ldr	x0, [x0, #3904]
    4344:	cbz	x0, 4354 <PySequence_Fast@plt+0xc4>
    4348:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    434c:	ldr	x0, [x0, #800]
    4350:	bl	3d50 <__cxa_finalize@plt>
    4354:	bl	42b4 <PySequence_Fast@plt+0x24>
    4358:	mov	w0, #0x1                   	// #1
    435c:	strb	w0, [x19, #1072]
    4360:	ldr	x19, [sp, #16]
    4364:	ldp	x29, x30, [sp], #32
    4368:	ret
    436c:	ret
    4370:	b	42e4 <PySequence_Fast@plt+0x54>
    4374:	stp	x29, x30, [sp, #-16]!
    4378:	mov	x1, #0x0                   	// #0
    437c:	mov	x29, sp
    4380:	ldr	x2, [x0, #304]
    4384:	blr	x2
    4388:	cbz	x0, 43ac <PySequence_Fast@plt+0x11c>
    438c:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4390:	str	xzr, [x0, #48]
    4394:	ldr	x1, [x1, #3976]
    4398:	stp	x1, x1, [x0, #16]
    439c:	stp	x1, xzr, [x0, #32]
    43a0:	ldr	x2, [x1]
    43a4:	add	x2, x2, #0x3
    43a8:	str	x2, [x1]
    43ac:	ldp	x29, x30, [sp], #16
    43b0:	ret
    43b4:	mov	x3, x0
    43b8:	ldr	x0, [x0, #8]
    43bc:	ldr	x0, [x0, #168]
    43c0:	tbz	w0, #28, 451c <PySequence_Fast@plt+0x28c>
    43c4:	ldrb	w0, [x3, #32]
    43c8:	ldr	x5, [x3, #16]
    43cc:	tbz	w0, #5, 440c <PySequence_Fast@plt+0x17c>
    43d0:	add	x1, x3, #0x30
    43d4:	add	x2, x3, #0x48
    43d8:	tst	x0, #0x40
    43dc:	csel	x1, x2, x1, eq  // eq = none
    43e0:	ldrb	w3, [x3, #32]
    43e4:	cmp	x5, #0x2
    43e8:	ubfx	x3, x3, #2, #3
    43ec:	b.le	4404 <PySequence_Fast@plt+0x174>
    43f0:	cmp	w3, #0x1
    43f4:	b.ne	4414 <PySequence_Fast@plt+0x184>  // b.any
    43f8:	ldrb	w0, [x1]
    43fc:	cmp	w0, #0x7b
    4400:	b.eq	446c <PySequence_Fast@plt+0x1dc>  // b.none
    4404:	mov	w0, #0x1                   	// #1
    4408:	b	4498 <PySequence_Fast@plt+0x208>
    440c:	ldr	x1, [x3, #72]
    4410:	b	43e0 <PySequence_Fast@plt+0x150>
    4414:	cmp	w3, #0x2
    4418:	b.ne	4444 <PySequence_Fast@plt+0x1b4>  // b.any
    441c:	ldrh	w0, [x1]
    4420:	cmp	w0, #0x7b
    4424:	b.ne	4404 <PySequence_Fast@plt+0x174>  // b.any
    4428:	ldrh	w0, [x1, #2]
    442c:	cmp	w0, #0x7d
    4430:	b.eq	4478 <PySequence_Fast@plt+0x1e8>  // b.none
    4434:	cmp	w0, #0x2a
    4438:	b.ne	4404 <PySequence_Fast@plt+0x174>  // b.any
    443c:	ldrh	w0, [x1, #4]
    4440:	b	448c <PySequence_Fast@plt+0x1fc>
    4444:	ldr	w0, [x1]
    4448:	cmp	w0, #0x7b
    444c:	b.ne	4404 <PySequence_Fast@plt+0x174>  // b.any
    4450:	ldr	w0, [x1, #4]
    4454:	cmp	w0, #0x7d
    4458:	b.eq	4478 <PySequence_Fast@plt+0x1e8>  // b.none
    445c:	cmp	w0, #0x2a
    4460:	b.ne	4404 <PySequence_Fast@plt+0x174>  // b.any
    4464:	ldr	w0, [x1, #8]
    4468:	b	448c <PySequence_Fast@plt+0x1fc>
    446c:	ldrb	w0, [x1, #1]
    4470:	cmp	w0, #0x7d
    4474:	b.ne	4480 <PySequence_Fast@plt+0x1f0>  // b.any
    4478:	mov	w0, #0x1                   	// #1
    447c:	b	44ec <PySequence_Fast@plt+0x25c>
    4480:	cmp	w0, #0x2a
    4484:	b.ne	4404 <PySequence_Fast@plt+0x174>  // b.any
    4488:	ldrb	w0, [x1, #2]
    448c:	cmp	w0, #0x7d
    4490:	mov	w0, #0x1                   	// #1
    4494:	b.eq	44ec <PySequence_Fast@plt+0x25c>  // b.none
    4498:	mov	x6, #0x31                  	// #49
    449c:	mov	x2, #0x0                   	// #0
    44a0:	movk	x6, #0x40, lsl #16
    44a4:	movk	x6, #0x2, lsl #48
    44a8:	cmp	x2, x5
    44ac:	b.lt	44b8 <PySequence_Fast@plt+0x228>  // b.tstop
    44b0:	mov	w0, #0x0                   	// #0
    44b4:	b	44ec <PySequence_Fast@plt+0x25c>
    44b8:	cmp	w3, #0x1
    44bc:	b.ne	44f0 <PySequence_Fast@plt+0x260>  // b.any
    44c0:	ldrb	w4, [x1, x2]
    44c4:	cmp	w4, #0x7b
    44c8:	b.eq	4508 <PySequence_Fast@plt+0x278>  // b.none
    44cc:	cmp	w4, #0x7d
    44d0:	b.eq	4514 <PySequence_Fast@plt+0x284>  // b.none
    44d4:	cbz	w0, 450c <PySequence_Fast@plt+0x27c>
    44d8:	sub	w4, w4, #0x2a
    44dc:	cmp	w4, #0x31
    44e0:	b.hi	450c <PySequence_Fast@plt+0x27c>  // b.pmore
    44e4:	lsr	x4, x6, x4
    44e8:	tbz	w4, #0, 450c <PySequence_Fast@plt+0x27c>
    44ec:	ret
    44f0:	cmp	w3, #0x2
    44f4:	b.ne	4500 <PySequence_Fast@plt+0x270>  // b.any
    44f8:	ldrh	w4, [x1, x2, lsl #1]
    44fc:	b	44c4 <PySequence_Fast@plt+0x234>
    4500:	ldr	w4, [x1, x2, lsl #2]
    4504:	b	44c4 <PySequence_Fast@plt+0x234>
    4508:	mov	w0, #0x0                   	// #0
    450c:	add	x2, x2, #0x1
    4510:	b	44a8 <PySequence_Fast@plt+0x218>
    4514:	mov	w0, #0x1                   	// #1
    4518:	b	450c <PySequence_Fast@plt+0x27c>
    451c:	tbz	w0, #27, 4478 <PySequence_Fast@plt+0x1e8>
    4520:	ldr	x4, [x3, #16]
    4524:	cmp	x4, #0x2
    4528:	b.le	45b0 <PySequence_Fast@plt+0x320>
    452c:	ldrb	w0, [x3, #32]
    4530:	cmp	w0, #0x7b
    4534:	b.ne	45b0 <PySequence_Fast@plt+0x320>  // b.any
    4538:	ldrb	w0, [x3, #33]
    453c:	cmp	w0, #0x7d
    4540:	b.eq	4478 <PySequence_Fast@plt+0x1e8>  // b.none
    4544:	cmp	w0, #0x2a
    4548:	b.ne	45b0 <PySequence_Fast@plt+0x320>  // b.any
    454c:	ldrb	w0, [x3, #34]
    4550:	cmp	w0, #0x7d
    4554:	mov	w0, #0x1                   	// #1
    4558:	b.eq	44ec <PySequence_Fast@plt+0x25c>  // b.none
    455c:	mov	x5, #0x31                  	// #49
    4560:	add	x3, x3, #0x20
    4564:	movk	x5, #0x40, lsl #16
    4568:	mov	x2, #0x0                   	// #0
    456c:	movk	x5, #0x2, lsl #48
    4570:	cmp	x2, x4
    4574:	b.ge	44b0 <PySequence_Fast@plt+0x220>  // b.tcont
    4578:	ldrb	w1, [x3, x2]
    457c:	cmp	w1, #0x7b
    4580:	b.eq	45b8 <PySequence_Fast@plt+0x328>  // b.none
    4584:	cmp	w1, #0x7d
    4588:	b.eq	45c0 <PySequence_Fast@plt+0x330>  // b.none
    458c:	cbz	w0, 45a8 <PySequence_Fast@plt+0x318>
    4590:	sub	w1, w1, #0x2a
    4594:	and	w1, w1, #0xff
    4598:	cmp	w1, #0x31
    459c:	b.hi	45a8 <PySequence_Fast@plt+0x318>  // b.pmore
    45a0:	lsr	x1, x5, x1
    45a4:	tbnz	w1, #0, 44ec <PySequence_Fast@plt+0x25c>
    45a8:	add	x2, x2, #0x1
    45ac:	b	4570 <PySequence_Fast@plt+0x2e0>
    45b0:	mov	w0, #0x1                   	// #1
    45b4:	b	455c <PySequence_Fast@plt+0x2cc>
    45b8:	mov	w0, #0x0                   	// #0
    45bc:	b	45a8 <PySequence_Fast@plt+0x318>
    45c0:	mov	w0, #0x1                   	// #1
    45c4:	b	45a8 <PySequence_Fast@plt+0x318>
    45c8:	ldr	x0, [x0, #40]
    45cc:	cbz	x0, 45d8 <PySequence_Fast@plt+0x348>
    45d0:	ldr	x0, [x0, #8]
    45d4:	ret
    45d8:	mov	x0, #0x0                   	// #0
    45dc:	b	45d4 <PySequence_Fast@plt+0x344>
    45e0:	ldr	x0, [x0, #16]
    45e4:	ldr	x1, [x0]
    45e8:	add	x1, x1, #0x1
    45ec:	str	x1, [x0]
    45f0:	ret
    45f4:	stp	x29, x30, [sp, #-16]!
    45f8:	mov	x1, #0x0                   	// #0
    45fc:	mov	x29, sp
    4600:	ldr	x2, [x0, #304]
    4604:	blr	x2
    4608:	cbz	x0, 4628 <PySequence_Fast@plt+0x398>
    460c:	stp	xzr, xzr, [x0, #16]
    4610:	stp	xzr, xzr, [x0, #32]
    4614:	stp	xzr, xzr, [x0, #48]
    4618:	stp	xzr, xzr, [x0, #64]
    461c:	stp	xzr, xzr, [x0, #80]
    4620:	stp	xzr, xzr, [x0, #96]
    4624:	str	xzr, [x0, #112]
    4628:	ldp	x29, x30, [sp], #16
    462c:	ret
    4630:	stp	x29, x30, [sp, #-48]!
    4634:	mov	x29, sp
    4638:	stp	x19, x20, [sp, #16]
    463c:	mov	x19, x1
    4640:	mov	x20, x2
    4644:	str	x21, [sp, #32]
    4648:	bl	3e50 <PyModule_GetState@plt>
    464c:	mov	x21, x0
    4650:	ldr	x0, [x0]
    4654:	cbnz	x0, 4690 <PySequence_Fast@plt+0x400>
    4658:	ldr	x0, [x21, #8]
    465c:	cbnz	x0, 46ac <PySequence_Fast@plt+0x41c>
    4660:	ldr	x0, [x21, #16]
    4664:	cbnz	x0, 46bc <PySequence_Fast@plt+0x42c>
    4668:	ldr	x0, [x21, #24]
    466c:	cbnz	x0, 46cc <PySequence_Fast@plt+0x43c>
    4670:	ldr	x0, [x21, #32]
    4674:	cbz	x0, 469c <PySequence_Fast@plt+0x40c>
    4678:	mov	x1, x20
    467c:	mov	x16, x19
    4680:	ldp	x19, x20, [sp, #16]
    4684:	ldr	x21, [sp, #32]
    4688:	ldp	x29, x30, [sp], #48
    468c:	br	x16
    4690:	mov	x1, x20
    4694:	blr	x19
    4698:	cbz	w0, 4658 <PySequence_Fast@plt+0x3c8>
    469c:	ldp	x19, x20, [sp, #16]
    46a0:	ldr	x21, [sp, #32]
    46a4:	ldp	x29, x30, [sp], #48
    46a8:	ret
    46ac:	mov	x1, x20
    46b0:	blr	x19
    46b4:	cbz	w0, 4660 <PySequence_Fast@plt+0x3d0>
    46b8:	b	469c <PySequence_Fast@plt+0x40c>
    46bc:	mov	x1, x20
    46c0:	blr	x19
    46c4:	cbz	w0, 4668 <PySequence_Fast@plt+0x3d8>
    46c8:	b	469c <PySequence_Fast@plt+0x40c>
    46cc:	mov	x1, x20
    46d0:	blr	x19
    46d4:	cbz	w0, 4670 <PySequence_Fast@plt+0x3e0>
    46d8:	b	469c <PySequence_Fast@plt+0x40c>
    46dc:	sub	sp, sp, #0x50
    46e0:	stp	x29, x30, [sp, #16]
    46e4:	add	x29, sp, #0x10
    46e8:	stp	x19, x20, [sp, #32]
    46ec:	mov	x20, x0
    46f0:	mov	x0, x1
    46f4:	stp	x21, x22, [sp, #48]
    46f8:	mov	x1, x2
    46fc:	cbz	x3, 4794 <PySequence_Fast@plt+0x504>
    4700:	ldr	x2, [x3, #16]
    4704:	add	x21, x2, x1
    4708:	cmp	x3, #0x0
    470c:	sub	x2, x1, #0x1
    4710:	ccmp	x2, #0x1, #0x2, eq  // eq = none
    4714:	adrp	x19, 1d000 <PyInit__elementtree@@Base+0x12c04>
    4718:	b.hi	4720 <PySequence_Fast@plt+0x490>  // b.pmore
    471c:	cbnz	x0, 4744 <PySequence_Fast@plt+0x4b4>
    4720:	add	x2, sp, #0x40
    4724:	str	x2, [sp]
    4728:	add	x4, x19, #0x9c0
    472c:	mov	w7, #0x0                   	// #0
    4730:	mov	w6, #0x2                   	// #2
    4734:	mov	w5, #0x1                   	// #1
    4738:	mov	x2, #0x0                   	// #0
    473c:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    4740:	cbz	x0, 4780 <PySequence_Fast@plt+0x4f0>
    4744:	cmp	x21, #0x1
    4748:	ldr	x22, [x0]
    474c:	b.eq	479c <PySequence_Fast@plt+0x50c>  // b.none
    4750:	ldr	x21, [x0, #8]
    4754:	add	x19, x19, #0x9c0
    4758:	add	x0, x19, #0x40
    475c:	bl	4010 <PyState_FindModule@plt>
    4760:	bl	3e50 <PyModule_GetState@plt>
    4764:	ldr	x0, [x0, #16]
    4768:	mov	x4, x21
    476c:	mov	x3, x22
    4770:	mov	x2, x20
    4774:	add	x1, x19, #0xa8
    4778:	mov	x5, #0x0                   	// #0
    477c:	bl	4160 <_PyObject_CallMethodIdObjArgs@plt>
    4780:	ldp	x29, x30, [sp, #16]
    4784:	ldp	x19, x20, [sp, #32]
    4788:	ldp	x21, x22, [sp, #48]
    478c:	add	sp, sp, #0x50
    4790:	ret
    4794:	mov	x2, #0x0                   	// #0
    4798:	b	4704 <PySequence_Fast@plt+0x474>
    479c:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x11c04>
    47a0:	ldr	x21, [x21, #3976]
    47a4:	b	4754 <PySequence_Fast@plt+0x4c4>
    47a8:	stp	x29, x30, [sp, #-48]!
    47ac:	mov	x29, sp
    47b0:	stp	x19, x20, [sp, #16]
    47b4:	mov	x20, x0
    47b8:	mov	x19, x1
    47bc:	ldr	x0, [x0, #48]
    47c0:	str	x21, [sp, #32]
    47c4:	cbnz	x0, 4808 <PySequence_Fast@plt+0x578>
    47c8:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    47cc:	ldr	x0, [x20, #32]
    47d0:	ldr	x1, [x1, #3976]
    47d4:	cmp	x0, x1
    47d8:	b.ne	47ec <PySequence_Fast@plt+0x55c>  // b.any
    47dc:	ldr	x1, [x0]
    47e0:	add	x1, x1, #0x1
    47e4:	str	x1, [x0]
    47e8:	b	4858 <PySequence_Fast@plt+0x5c8>
    47ec:	ldr	x0, [x19]
    47f0:	add	x0, x0, #0x1
    47f4:	str	x0, [x19]
    47f8:	str	x19, [x20, #48]
    47fc:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4800:	ldr	x0, [x0, #3976]
    4804:	b	47dc <PySequence_Fast@plt+0x54c>
    4808:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    480c:	ldr	x2, [x0, #8]
    4810:	ldr	x1, [x1, #3912]
    4814:	cmp	x2, x1
    4818:	b.ne	487c <PySequence_Fast@plt+0x5ec>  // b.any
    481c:	ldr	x1, [x0]
    4820:	cmp	x1, #0x1
    4824:	b.ne	487c <PySequence_Fast@plt+0x5ec>  // b.any
    4828:	ldr	x1, [x19, #8]
    482c:	cmp	x1, x2
    4830:	b.ne	487c <PySequence_Fast@plt+0x5ec>  // b.any
    4834:	ldr	x1, [x19, #16]
    4838:	cmp	x1, #0x1
    483c:	b.ne	487c <PySequence_Fast@plt+0x5ec>  // b.any
    4840:	ldr	x21, [x0, #16]
    4844:	add	x0, x20, #0x30
    4848:	add	x1, x21, #0x1
    484c:	bl	3ce0 <_PyBytes_Resize@plt>
    4850:	tbz	w0, #31, 4868 <PySequence_Fast@plt+0x5d8>
    4854:	mov	x0, #0x0                   	// #0
    4858:	ldp	x19, x20, [sp, #16]
    485c:	ldr	x21, [sp, #32]
    4860:	ldp	x29, x30, [sp], #48
    4864:	ret
    4868:	ldr	x0, [x20, #48]
    486c:	ldrb	w1, [x19, #32]
    4870:	add	x0, x0, x21
    4874:	strb	w1, [x0, #32]
    4878:	b	47fc <PySequence_Fast@plt+0x56c>
    487c:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4880:	ldr	x1, [x1, #4064]
    4884:	cmp	x2, x1
    4888:	b.ne	489c <PySequence_Fast@plt+0x60c>  // b.any
    488c:	mov	x1, x19
    4890:	bl	3f50 <PyList_Append@plt>
    4894:	tbz	w0, #31, 47fc <PySequence_Fast@plt+0x56c>
    4898:	b	4854 <PySequence_Fast@plt+0x5c4>
    489c:	mov	x0, #0x2                   	// #2
    48a0:	bl	3c90 <PyList_New@plt>
    48a4:	cbz	x0, 4854 <PySequence_Fast@plt+0x5c4>
    48a8:	ldr	x2, [x0, #24]
    48ac:	ldr	x1, [x20, #48]
    48b0:	str	x1, [x2]
    48b4:	ldr	x1, [x19]
    48b8:	add	x1, x1, #0x1
    48bc:	str	x1, [x19]
    48c0:	str	x19, [x2, #8]
    48c4:	str	x0, [x20, #48]
    48c8:	b	47fc <PySequence_Fast@plt+0x56c>
    48cc:	b	47a8 <PySequence_Fast@plt+0x518>
    48d0:	mov	w2, #0x2                   	// #2
    48d4:	mov	w3, #0x9                   	// #9
    48d8:	mov	w1, w2
    48dc:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    48e0:	add	x0, x0, #0x624
    48e4:	b	3c70 <PyUnicode_FromFormat@plt>
    48e8:	stp	x29, x30, [sp, #-32]!
    48ec:	mov	x29, sp
    48f0:	ldr	x1, [x0, #8]
    48f4:	ldr	x0, [x0, #40]
    48f8:	str	x19, [sp, #16]
    48fc:	ldr	x19, [x1, #32]
    4900:	cbz	x0, 4920 <PySequence_Fast@plt+0x690>
    4904:	ldr	x2, [x0, #24]
    4908:	add	x1, x0, #0x20
    490c:	add	x19, x19, #0x40
    4910:	cmp	x2, x1
    4914:	b.eq	4920 <PySequence_Fast@plt+0x690>  // b.none
    4918:	ldr	x0, [x0, #16]
    491c:	add	x19, x19, x0, lsl #3
    4920:	cmn	x19, #0x1
    4924:	b.eq	4938 <PySequence_Fast@plt+0x6a8>  // b.none
    4928:	mov	x0, x19
    492c:	ldr	x19, [sp, #16]
    4930:	ldp	x29, x30, [sp], #32
    4934:	b	3ec0 <PyLong_FromSsize_t@plt>
    4938:	bl	3fd0 <PyErr_Occurred@plt>
    493c:	cbz	x0, 4928 <PySequence_Fast@plt+0x698>
    4940:	mov	x0, #0x0                   	// #0
    4944:	ldr	x19, [sp, #16]
    4948:	ldp	x29, x30, [sp], #32
    494c:	ret
    4950:	stp	x29, x30, [sp, #-48]!
    4954:	mov	x29, sp
    4958:	stp	x19, x20, [sp, #16]
    495c:	mov	x19, x0
    4960:	mov	x20, x1
    4964:	ldr	x0, [x0, #16]
    4968:	stp	x21, x22, [sp, #32]
    496c:	mov	x21, x2
    4970:	cbnz	x0, 499c <PySequence_Fast@plt+0x70c>
    4974:	ldr	x0, [x19, #24]
    4978:	ands	x0, x0, #0xfffffffffffffffe
    497c:	b.ne	49b8 <PySequence_Fast@plt+0x728>  // b.any
    4980:	ldr	x0, [x19, #32]
    4984:	ands	x0, x0, #0xfffffffffffffffe
    4988:	b.ne	49c8 <PySequence_Fast@plt+0x738>  // b.any
    498c:	ldr	x0, [x19, #40]
    4990:	cbnz	x0, 49d8 <PySequence_Fast@plt+0x748>
    4994:	mov	w0, #0x0                   	// #0
    4998:	b	49a8 <PySequence_Fast@plt+0x718>
    499c:	mov	x1, x2
    49a0:	blr	x20
    49a4:	cbz	w0, 4974 <PySequence_Fast@plt+0x6e4>
    49a8:	ldp	x19, x20, [sp, #16]
    49ac:	ldp	x21, x22, [sp, #32]
    49b0:	ldp	x29, x30, [sp], #48
    49b4:	ret
    49b8:	mov	x1, x21
    49bc:	blr	x20
    49c0:	cbz	w0, 4980 <PySequence_Fast@plt+0x6f0>
    49c4:	b	49a8 <PySequence_Fast@plt+0x718>
    49c8:	mov	x1, x21
    49cc:	blr	x20
    49d0:	cbz	w0, 498c <PySequence_Fast@plt+0x6fc>
    49d4:	b	49a8 <PySequence_Fast@plt+0x718>
    49d8:	ldr	x0, [x0]
    49dc:	cbnz	x0, 4a08 <PySequence_Fast@plt+0x778>
    49e0:	mov	x22, #0x0                   	// #0
    49e4:	ldr	x0, [x19, #40]
    49e8:	ldr	x1, [x0, #8]
    49ec:	cmp	x22, x1
    49f0:	b.ge	4994 <PySequence_Fast@plt+0x704>  // b.tcont
    49f4:	ldr	x0, [x0, #24]
    49f8:	ldr	x0, [x0, x22, lsl #3]
    49fc:	cbnz	x0, 4a18 <PySequence_Fast@plt+0x788>
    4a00:	add	x22, x22, #0x1
    4a04:	b	49e4 <PySequence_Fast@plt+0x754>
    4a08:	mov	x1, x21
    4a0c:	blr	x20
    4a10:	cbz	w0, 49e0 <PySequence_Fast@plt+0x750>
    4a14:	b	49a8 <PySequence_Fast@plt+0x718>
    4a18:	mov	x1, x21
    4a1c:	blr	x20
    4a20:	cbz	w0, 4a00 <PySequence_Fast@plt+0x770>
    4a24:	b	49a8 <PySequence_Fast@plt+0x718>
    4a28:	stp	x29, x30, [sp, #-48]!
    4a2c:	mov	x29, sp
    4a30:	stp	x19, x20, [sp, #16]
    4a34:	mov	x19, x0
    4a38:	ldr	x20, [x0, #24]
    4a3c:	stp	x21, x22, [sp, #32]
    4a40:	mov	x21, x1
    4a44:	mov	x22, x2
    4a48:	sub	x20, x20, #0x1
    4a4c:	cmn	x20, #0x1
    4a50:	b.ne	4a7c <PySequence_Fast@plt+0x7ec>  // b.any
    4a54:	ldr	x0, [x19, #40]
    4a58:	cbnz	x0, 4aa8 <PySequence_Fast@plt+0x818>
    4a5c:	ldr	x0, [x19, #48]
    4a60:	cbz	x0, 4a98 <PySequence_Fast@plt+0x808>
    4a64:	mov	x1, x22
    4a68:	mov	x16, x21
    4a6c:	ldp	x19, x20, [sp, #16]
    4a70:	ldp	x21, x22, [sp, #32]
    4a74:	ldp	x29, x30, [sp], #48
    4a78:	br	x16
    4a7c:	ldr	x1, [x19, #16]
    4a80:	lsl	x0, x20, #4
    4a84:	ldr	x0, [x1, x0]
    4a88:	cbz	x0, 4a48 <PySequence_Fast@plt+0x7b8>
    4a8c:	mov	x1, x22
    4a90:	blr	x21
    4a94:	cbz	w0, 4a48 <PySequence_Fast@plt+0x7b8>
    4a98:	ldp	x19, x20, [sp, #16]
    4a9c:	ldp	x21, x22, [sp, #32]
    4aa0:	ldp	x29, x30, [sp], #48
    4aa4:	ret
    4aa8:	mov	x1, x22
    4aac:	blr	x21
    4ab0:	cbz	w0, 4a5c <PySequence_Fast@plt+0x7cc>
    4ab4:	b	4a98 <PySequence_Fast@plt+0x808>
    4ab8:	stp	x29, x30, [sp, #-48]!
    4abc:	mov	x29, sp
    4ac0:	stp	x19, x20, [sp, #16]
    4ac4:	mov	x20, x0
    4ac8:	mov	x19, x1
    4acc:	ldr	x0, [x0, #144]
    4ad0:	str	x21, [sp, #32]
    4ad4:	mov	x21, x2
    4ad8:	cbnz	x0, 4b6c <PySequence_Fast@plt+0x8dc>
    4adc:	ldr	x0, [x20, #136]
    4ae0:	cbnz	x0, 4b88 <PySequence_Fast@plt+0x8f8>
    4ae4:	ldr	x0, [x20, #128]
    4ae8:	cbnz	x0, 4b98 <PySequence_Fast@plt+0x908>
    4aec:	ldr	x0, [x20, #120]
    4af0:	cbnz	x0, 4ba8 <PySequence_Fast@plt+0x918>
    4af4:	ldr	x0, [x20, #112]
    4af8:	cbnz	x0, 4bb8 <PySequence_Fast@plt+0x928>
    4afc:	ldr	x0, [x20, #104]
    4b00:	cbnz	x0, 4bc8 <PySequence_Fast@plt+0x938>
    4b04:	ldr	x0, [x20, #96]
    4b08:	cbnz	x0, 4bd8 <PySequence_Fast@plt+0x948>
    4b0c:	ldr	x0, [x20, #16]
    4b10:	cbnz	x0, 4be8 <PySequence_Fast@plt+0x958>
    4b14:	ldr	x0, [x20, #24]
    4b18:	cbnz	x0, 4bf8 <PySequence_Fast@plt+0x968>
    4b1c:	ldr	x0, [x20, #32]
    4b20:	cbnz	x0, 4c08 <PySequence_Fast@plt+0x978>
    4b24:	ldr	x0, [x20, #40]
    4b28:	cbnz	x0, 4c18 <PySequence_Fast@plt+0x988>
    4b2c:	ldr	x0, [x20, #48]
    4b30:	cbnz	x0, 4c28 <PySequence_Fast@plt+0x998>
    4b34:	ldr	x0, [x20, #56]
    4b38:	cbnz	x0, 4c38 <PySequence_Fast@plt+0x9a8>
    4b3c:	ldr	x0, [x20, #88]
    4b40:	cbnz	x0, 4c48 <PySequence_Fast@plt+0x9b8>
    4b44:	ldr	x0, [x20, #80]
    4b48:	cbnz	x0, 4c58 <PySequence_Fast@plt+0x9c8>
    4b4c:	ldr	x0, [x20, #72]
    4b50:	cbz	x0, 4b78 <PySequence_Fast@plt+0x8e8>
    4b54:	mov	x1, x21
    4b58:	mov	x16, x19
    4b5c:	ldp	x19, x20, [sp, #16]
    4b60:	ldr	x21, [sp, #32]
    4b64:	ldp	x29, x30, [sp], #48
    4b68:	br	x16
    4b6c:	mov	x1, x2
    4b70:	blr	x19
    4b74:	cbz	w0, 4adc <PySequence_Fast@plt+0x84c>
    4b78:	ldp	x19, x20, [sp, #16]
    4b7c:	ldr	x21, [sp, #32]
    4b80:	ldp	x29, x30, [sp], #48
    4b84:	ret
    4b88:	mov	x1, x21
    4b8c:	blr	x19
    4b90:	cbz	w0, 4ae4 <PySequence_Fast@plt+0x854>
    4b94:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4b98:	mov	x1, x21
    4b9c:	blr	x19
    4ba0:	cbz	w0, 4aec <PySequence_Fast@plt+0x85c>
    4ba4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4ba8:	mov	x1, x21
    4bac:	blr	x19
    4bb0:	cbz	w0, 4af4 <PySequence_Fast@plt+0x864>
    4bb4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4bb8:	mov	x1, x21
    4bbc:	blr	x19
    4bc0:	cbz	w0, 4afc <PySequence_Fast@plt+0x86c>
    4bc4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4bc8:	mov	x1, x21
    4bcc:	blr	x19
    4bd0:	cbz	w0, 4b04 <PySequence_Fast@plt+0x874>
    4bd4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4bd8:	mov	x1, x21
    4bdc:	blr	x19
    4be0:	cbz	w0, 4b0c <PySequence_Fast@plt+0x87c>
    4be4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4be8:	mov	x1, x21
    4bec:	blr	x19
    4bf0:	cbz	w0, 4b14 <PySequence_Fast@plt+0x884>
    4bf4:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4bf8:	mov	x1, x21
    4bfc:	blr	x19
    4c00:	cbz	w0, 4b1c <PySequence_Fast@plt+0x88c>
    4c04:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c08:	mov	x1, x21
    4c0c:	blr	x19
    4c10:	cbz	w0, 4b24 <PySequence_Fast@plt+0x894>
    4c14:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c18:	mov	x1, x21
    4c1c:	blr	x19
    4c20:	cbz	w0, 4b2c <PySequence_Fast@plt+0x89c>
    4c24:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c28:	mov	x1, x21
    4c2c:	blr	x19
    4c30:	cbz	w0, 4b34 <PySequence_Fast@plt+0x8a4>
    4c34:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c38:	mov	x1, x21
    4c3c:	blr	x19
    4c40:	cbz	w0, 4b3c <PySequence_Fast@plt+0x8ac>
    4c44:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c48:	mov	x1, x21
    4c4c:	blr	x19
    4c50:	cbz	w0, 4b44 <PySequence_Fast@plt+0x8b4>
    4c54:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c58:	mov	x1, x21
    4c5c:	blr	x19
    4c60:	cbz	w0, 4b4c <PySequence_Fast@plt+0x8bc>
    4c64:	b	4b78 <PySequence_Fast@plt+0x8e8>
    4c68:	stp	x29, x30, [sp, #-48]!
    4c6c:	mov	x29, sp
    4c70:	stp	x19, x20, [sp, #16]
    4c74:	mov	x20, x0
    4c78:	mov	x19, x1
    4c7c:	ldr	x0, [x0, #112]
    4c80:	str	x21, [sp, #32]
    4c84:	mov	x21, x2
    4c88:	cbnz	x0, 4cfc <PySequence_Fast@plt+0xa6c>
    4c8c:	ldr	x0, [x20, #96]
    4c90:	cbnz	x0, 4d18 <PySequence_Fast@plt+0xa88>
    4c94:	ldr	x0, [x20, #88]
    4c98:	cbnz	x0, 4d28 <PySequence_Fast@plt+0xa98>
    4c9c:	ldr	x0, [x20, #80]
    4ca0:	cbnz	x0, 4d38 <PySequence_Fast@plt+0xaa8>
    4ca4:	ldr	x0, [x20, #72]
    4ca8:	cbnz	x0, 4d48 <PySequence_Fast@plt+0xab8>
    4cac:	ldr	x0, [x20, #64]
    4cb0:	cbnz	x0, 4d58 <PySequence_Fast@plt+0xac8>
    4cb4:	ldr	x0, [x20, #48]
    4cb8:	cbnz	x0, 4d68 <PySequence_Fast@plt+0xad8>
    4cbc:	ldr	x0, [x20, #56]
    4cc0:	cbnz	x0, 4d78 <PySequence_Fast@plt+0xae8>
    4cc4:	ldr	x0, [x20, #104]
    4cc8:	cbnz	x0, 4d88 <PySequence_Fast@plt+0xaf8>
    4ccc:	ldr	x0, [x20, #24]
    4cd0:	cbnz	x0, 4d98 <PySequence_Fast@plt+0xb08>
    4cd4:	ldr	x0, [x20, #32]
    4cd8:	cbnz	x0, 4da8 <PySequence_Fast@plt+0xb18>
    4cdc:	ldr	x0, [x20, #40]
    4ce0:	cbz	x0, 4d08 <PySequence_Fast@plt+0xa78>
    4ce4:	mov	x1, x21
    4ce8:	mov	x16, x19
    4cec:	ldp	x19, x20, [sp, #16]
    4cf0:	ldr	x21, [sp, #32]
    4cf4:	ldp	x29, x30, [sp], #48
    4cf8:	br	x16
    4cfc:	mov	x1, x2
    4d00:	blr	x19
    4d04:	cbz	w0, 4c8c <PySequence_Fast@plt+0x9fc>
    4d08:	ldp	x19, x20, [sp, #16]
    4d0c:	ldr	x21, [sp, #32]
    4d10:	ldp	x29, x30, [sp], #48
    4d14:	ret
    4d18:	mov	x1, x21
    4d1c:	blr	x19
    4d20:	cbz	w0, 4c94 <PySequence_Fast@plt+0xa04>
    4d24:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d28:	mov	x1, x21
    4d2c:	blr	x19
    4d30:	cbz	w0, 4c9c <PySequence_Fast@plt+0xa0c>
    4d34:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d38:	mov	x1, x21
    4d3c:	blr	x19
    4d40:	cbz	w0, 4ca4 <PySequence_Fast@plt+0xa14>
    4d44:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d48:	mov	x1, x21
    4d4c:	blr	x19
    4d50:	cbz	w0, 4cac <PySequence_Fast@plt+0xa1c>
    4d54:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d58:	mov	x1, x21
    4d5c:	blr	x19
    4d60:	cbz	w0, 4cb4 <PySequence_Fast@plt+0xa24>
    4d64:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d68:	mov	x1, x21
    4d6c:	blr	x19
    4d70:	cbz	w0, 4cbc <PySequence_Fast@plt+0xa2c>
    4d74:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d78:	mov	x1, x21
    4d7c:	blr	x19
    4d80:	cbz	w0, 4cc4 <PySequence_Fast@plt+0xa34>
    4d84:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d88:	mov	x1, x21
    4d8c:	blr	x19
    4d90:	cbz	w0, 4ccc <PySequence_Fast@plt+0xa3c>
    4d94:	b	4d08 <PySequence_Fast@plt+0xa78>
    4d98:	mov	x1, x21
    4d9c:	blr	x19
    4da0:	cbz	w0, 4cd4 <PySequence_Fast@plt+0xa44>
    4da4:	b	4d08 <PySequence_Fast@plt+0xa78>
    4da8:	mov	x1, x21
    4dac:	blr	x19
    4db0:	cbz	w0, 4cdc <PySequence_Fast@plt+0xa4c>
    4db4:	b	4d08 <PySequence_Fast@plt+0xa78>
    4db8:	ldr	x0, [x0, #40]
    4dbc:	cbz	x0, 4dd0 <PySequence_Fast@plt+0xb40>
    4dc0:	tbnz	x1, #63, 4dd0 <PySequence_Fast@plt+0xb40>
    4dc4:	ldr	x2, [x0, #8]
    4dc8:	cmp	x2, x1
    4dcc:	b.gt	4dfc <PySequence_Fast@plt+0xb6c>
    4dd0:	stp	x29, x30, [sp, #-16]!
    4dd4:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4dd8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    4ddc:	mov	x29, sp
    4de0:	ldr	x0, [x0, #3984]
    4de4:	add	x1, x1, #0x633
    4de8:	ldr	x0, [x0]
    4dec:	bl	3e20 <PyErr_SetString@plt>
    4df0:	mov	x0, #0x0                   	// #0
    4df4:	ldp	x29, x30, [sp], #16
    4df8:	ret
    4dfc:	ldr	x0, [x0, #24]
    4e00:	ldr	x0, [x0, x1, lsl #3]
    4e04:	ldr	x1, [x0]
    4e08:	add	x1, x1, #0x1
    4e0c:	str	x1, [x0]
    4e10:	ret
    4e14:	stp	x29, x30, [sp, #-80]!
    4e18:	mov	x29, sp
    4e1c:	ldr	x2, [x1, #8]
    4e20:	stp	x19, x20, [sp, #16]
    4e24:	mov	x19, x0
    4e28:	mov	x0, x1
    4e2c:	ldr	x1, [x2, #96]
    4e30:	str	x21, [sp, #32]
    4e34:	cbz	x1, 4e9c <PySequence_Fast@plt+0xc0c>
    4e38:	ldr	x1, [x1, #264]
    4e3c:	cbz	x1, 4e9c <PySequence_Fast@plt+0xc0c>
    4e40:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4e44:	ldr	x1, [x1, #3984]
    4e48:	ldr	x1, [x1]
    4e4c:	bl	3d00 <PyNumber_AsSsize_t@plt>
    4e50:	mov	x20, x0
    4e54:	cmn	x0, #0x1
    4e58:	b.ne	4e88 <PySequence_Fast@plt+0xbf8>  // b.any
    4e5c:	bl	3fd0 <PyErr_Occurred@plt>
    4e60:	cbnz	x0, 4f60 <PySequence_Fast@plt+0xcd0>
    4e64:	ldr	x0, [x19, #40]
    4e68:	cbnz	x0, 4e90 <PySequence_Fast@plt+0xc00>
    4e6c:	mov	x1, x20
    4e70:	mov	x0, x19
    4e74:	bl	4db8 <PySequence_Fast@plt+0xb28>
    4e78:	ldp	x19, x20, [sp, #16]
    4e7c:	ldr	x21, [sp, #32]
    4e80:	ldp	x29, x30, [sp], #80
    4e84:	ret
    4e88:	tbz	x0, #63, 4e6c <PySequence_Fast@plt+0xbdc>
    4e8c:	b	4e64 <PySequence_Fast@plt+0xbd4>
    4e90:	ldr	x0, [x0, #8]
    4e94:	add	x20, x20, x0
    4e98:	b	4e6c <PySequence_Fast@plt+0xbdc>
    4e9c:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4ea0:	ldr	x1, [x1, #3952]
    4ea4:	cmp	x2, x1
    4ea8:	b.ne	4f48 <PySequence_Fast@plt+0xcb8>  // b.any
    4eac:	ldr	x1, [x19, #40]
    4eb0:	cbnz	x1, 4ec0 <PySequence_Fast@plt+0xc30>
    4eb4:	mov	x0, #0x0                   	// #0
    4eb8:	bl	3c90 <PyList_New@plt>
    4ebc:	b	4e78 <PySequence_Fast@plt+0xbe8>
    4ec0:	add	x21, sp, #0x40
    4ec4:	add	x20, sp, #0x38
    4ec8:	add	x3, sp, #0x48
    4ecc:	mov	x2, x21
    4ed0:	mov	x1, x20
    4ed4:	bl	4180 <PySlice_Unpack@plt>
    4ed8:	tbnz	w0, #31, 4f60 <PySequence_Fast@plt+0xcd0>
    4edc:	ldr	x0, [x19, #40]
    4ee0:	mov	x1, x20
    4ee4:	ldr	x3, [sp, #72]
    4ee8:	mov	x2, x21
    4eec:	ldr	x0, [x0, #8]
    4ef0:	bl	3f60 <PySlice_AdjustIndices@plt>
    4ef4:	mov	x20, x0
    4ef8:	cmp	x0, #0x0
    4efc:	b.le	4eb4 <PySequence_Fast@plt+0xc24>
    4f00:	bl	3c90 <PyList_New@plt>
    4f04:	cbz	x0, 4f60 <PySequence_Fast@plt+0xcd0>
    4f08:	ldr	x1, [x19, #40]
    4f0c:	ldr	x5, [x0, #24]
    4f10:	ldr	x2, [sp, #56]
    4f14:	ldr	x6, [x1, #24]
    4f18:	mov	x1, #0x0                   	// #0
    4f1c:	ldr	x3, [x6, x2, lsl #3]
    4f20:	ldr	x4, [x3]
    4f24:	add	x4, x4, #0x1
    4f28:	str	x4, [x3]
    4f2c:	str	x3, [x5, x1, lsl #3]
    4f30:	add	x1, x1, #0x1
    4f34:	ldr	x3, [sp, #72]
    4f38:	cmp	x20, x1
    4f3c:	add	x2, x2, x3
    4f40:	b.ne	4f1c <PySequence_Fast@plt+0xc8c>  // b.any
    4f44:	b	4e78 <PySequence_Fast@plt+0xbe8>
    4f48:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    4f4c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    4f50:	add	x1, x1, #0x64c
    4f54:	ldr	x0, [x0, #3944]
    4f58:	ldr	x0, [x0]
    4f5c:	bl	3e20 <PyErr_SetString@plt>
    4f60:	mov	x0, #0x0                   	// #0
    4f64:	b	4e78 <PySequence_Fast@plt+0xbe8>
    4f68:	sub	sp, sp, #0x40
    4f6c:	stp	x29, x30, [sp, #16]
    4f70:	add	x29, sp, #0x10
    4f74:	stp	x19, x20, [sp, #32]
    4f78:	mov	x20, x0
    4f7c:	mov	x0, x1
    4f80:	mov	x1, x2
    4f84:	cbz	x3, 4fe8 <PySequence_Fast@plt+0xd58>
    4f88:	ldr	x2, [x3, #16]
    4f8c:	add	x19, x2, x1
    4f90:	cmp	x3, #0x0
    4f94:	sub	x2, x1, #0x1
    4f98:	ccmp	x2, #0x1, #0x2, eq  // eq = none
    4f9c:	b.hi	4fa4 <PySequence_Fast@plt+0xd14>  // b.pmore
    4fa0:	cbnz	x0, 4ff0 <PySequence_Fast@plt+0xd60>
    4fa4:	add	x2, sp, #0x30
    4fa8:	str	x2, [sp]
    4fac:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x12c04>
    4fb0:	add	x4, x4, #0x9c0
    4fb4:	add	x4, x4, #0xc0
    4fb8:	mov	w7, #0x0                   	// #0
    4fbc:	mov	w6, #0x2                   	// #2
    4fc0:	mov	w5, #0x1                   	// #1
    4fc4:	mov	x2, #0x0                   	// #0
    4fc8:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    4fcc:	cbnz	x0, 4ff0 <PySequence_Fast@plt+0xd60>
    4fd0:	mov	x19, #0x0                   	// #0
    4fd4:	mov	x0, x19
    4fd8:	ldp	x29, x30, [sp, #16]
    4fdc:	ldp	x19, x20, [sp, #32]
    4fe0:	add	sp, sp, #0x40
    4fe4:	ret
    4fe8:	mov	x2, #0x0                   	// #0
    4fec:	b	4f8c <PySequence_Fast@plt+0xcfc>
    4ff0:	cmp	x19, #0x1
    4ff4:	b.eq	5040 <PySequence_Fast@plt+0xdb0>  // b.none
    4ff8:	ldr	x19, [x0, #8]
    4ffc:	ldr	x1, [x20, #40]
    5000:	cbz	x1, 5030 <PySequence_Fast@plt+0xda0>
    5004:	ldr	x2, [x1]
    5008:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    500c:	ldr	x1, [x1, #3976]
    5010:	cmp	x2, x1
    5014:	b.eq	5030 <PySequence_Fast@plt+0xda0>  // b.none
    5018:	ldr	x1, [x0]
    501c:	mov	x0, x2
    5020:	bl	4280 <PyDict_GetItemWithError@plt>
    5024:	cbnz	x0, 504c <PySequence_Fast@plt+0xdbc>
    5028:	bl	3fd0 <PyErr_Occurred@plt>
    502c:	cbnz	x0, 4fd0 <PySequence_Fast@plt+0xd40>
    5030:	ldr	x0, [x19]
    5034:	add	x0, x0, #0x1
    5038:	str	x0, [x19]
    503c:	b	4fd4 <PySequence_Fast@plt+0xd44>
    5040:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5044:	ldr	x19, [x19, #3976]
    5048:	b	4ffc <PySequence_Fast@plt+0xd6c>
    504c:	mov	x19, x0
    5050:	b	5030 <PySequence_Fast@plt+0xda0>
    5054:	ldr	x2, [x0, #24]
    5058:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    505c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    5060:	add	x1, x1, #0x66d
    5064:	ldr	x0, [x0, #3944]
    5068:	ldr	x0, [x0]
    506c:	b	41d0 <PyErr_Format@plt>
    5070:	stp	x29, x30, [sp, #-32]!
    5074:	mov	x29, sp
    5078:	stp	x19, x20, [sp, #16]
    507c:	mov	x20, x0
    5080:	mov	x19, x1
    5084:	mov	x0, #0x40                  	// #64
    5088:	bl	3e40 <PyObject_Malloc@plt>
    508c:	str	x0, [x20]
    5090:	cbnz	x0, 50a8 <PySequence_Fast@plt+0xe18>
    5094:	bl	3dc0 <PyErr_NoMemory@plt>
    5098:	mov	w0, #0xffffffff            	// #-1
    509c:	ldp	x19, x20, [sp, #16]
    50a0:	ldp	x29, x30, [sp], #32
    50a4:	ret
    50a8:	cbnz	x19, 50b4 <PySequence_Fast@plt+0xe24>
    50ac:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    50b0:	ldr	x19, [x19, #3976]
    50b4:	ldr	x1, [x19]
    50b8:	add	x1, x1, #0x1
    50bc:	str	x1, [x19]
    50c0:	mov	x1, #0x4                   	// #4
    50c4:	stp	x19, xzr, [x0]
    50c8:	str	x1, [x0, #16]
    50cc:	add	x1, x0, #0x20
    50d0:	str	x1, [x0, #24]
    50d4:	mov	w0, #0x0                   	// #0
    50d8:	b	509c <PySequence_Fast@plt+0xe0c>
    50dc:	stp	x29, x30, [sp, #-48]!
    50e0:	mov	x29, sp
    50e4:	str	x21, [sp, #32]
    50e8:	mov	x21, x0
    50ec:	ldr	x0, [x0, #40]
    50f0:	stp	x19, x20, [sp, #16]
    50f4:	mov	x19, x1
    50f8:	cbz	x0, 5124 <PySequence_Fast@plt+0xe94>
    50fc:	ldr	x2, [x21, #40]
    5100:	ldp	x1, x0, [x2, #8]
    5104:	add	x1, x19, x1
    5108:	cmp	x0, x1
    510c:	b.lt	513c <PySequence_Fast@plt+0xeac>  // b.tstop
    5110:	mov	w0, #0x0                   	// #0
    5114:	ldp	x19, x20, [sp, #16]
    5118:	ldr	x21, [sp, #32]
    511c:	ldp	x29, x30, [sp], #48
    5120:	ret
    5124:	add	x0, x21, #0x28
    5128:	mov	x1, #0x0                   	// #0
    512c:	bl	5070 <PySequence_Fast@plt+0xde0>
    5130:	tbz	w0, #31, 50fc <PySequence_Fast@plt+0xe6c>
    5134:	mov	w0, #0xffffffff            	// #-1
    5138:	b	5114 <PySequence_Fast@plt+0xe84>
    513c:	cmp	x1, #0x9
    5140:	mov	x0, #0x6                   	// #6
    5144:	add	x1, x1, x1, asr #3
    5148:	mov	x19, #0x3                   	// #3
    514c:	csel	x19, x19, x0, lt  // lt = tstop
    5150:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    5154:	adds	x19, x19, x1
    5158:	csinc	x19, x19, xzr, ne  // ne = any
    515c:	cmp	x19, x0
    5160:	b.hi	5184 <PySequence_Fast@plt+0xef4>  // b.pmore
    5164:	ldr	x0, [x2, #24]
    5168:	add	x2, x2, #0x20
    516c:	lsl	x1, x19, #3
    5170:	cmp	x0, x2
    5174:	b.eq	518c <PySequence_Fast@plt+0xefc>  // b.none
    5178:	bl	40b0 <PyObject_Realloc@plt>
    517c:	mov	x20, x0
    5180:	cbnz	x0, 51b0 <PySequence_Fast@plt+0xf20>
    5184:	bl	3dc0 <PyErr_NoMemory@plt>
    5188:	b	5134 <PySequence_Fast@plt+0xea4>
    518c:	mov	x0, x1
    5190:	bl	3e40 <PyObject_Malloc@plt>
    5194:	mov	x20, x0
    5198:	cbz	x0, 5184 <PySequence_Fast@plt+0xef4>
    519c:	ldr	x1, [x21, #40]
    51a0:	ldr	x2, [x1, #8]
    51a4:	ldr	x1, [x1, #24]
    51a8:	lsl	x2, x2, #3
    51ac:	bl	3c60 <memcpy@plt>
    51b0:	ldr	x0, [x21, #40]
    51b4:	stp	x19, x20, [x0, #16]
    51b8:	b	5110 <PySequence_Fast@plt+0xe80>
    51bc:	stp	x29, x30, [sp, #-32]!
    51c0:	mov	x29, sp
    51c4:	stp	x19, x20, [sp, #16]
    51c8:	mov	x20, x0
    51cc:	mov	x19, x1
    51d0:	ldr	x0, [x1, #8]
    51d4:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    51d8:	add	x1, x1, #0x328
    51dc:	cmp	x0, x1
    51e0:	b.eq	51fc <PySequence_Fast@plt+0xf6c>  // b.none
    51e4:	bl	41b0 <PyType_IsSubtype@plt>
    51e8:	cbnz	w0, 51fc <PySequence_Fast@plt+0xf6c>
    51ec:	ldr	x0, [x19, #8]
    51f0:	bl	5054 <PySequence_Fast@plt+0xdc4>
    51f4:	mov	w0, #0xffffffff            	// #-1
    51f8:	b	5234 <PySequence_Fast@plt+0xfa4>
    51fc:	mov	x0, x20
    5200:	mov	x1, #0x1                   	// #1
    5204:	bl	50dc <PySequence_Fast@plt+0xe4c>
    5208:	tbnz	w0, #31, 51f4 <PySequence_Fast@plt+0xf64>
    520c:	ldr	x1, [x20, #40]
    5210:	ldr	x0, [x19]
    5214:	ldr	x2, [x1, #24]
    5218:	add	x0, x0, #0x1
    521c:	str	x0, [x19]
    5220:	ldr	x0, [x1, #8]
    5224:	str	x19, [x2, x0, lsl #3]
    5228:	add	x0, x0, #0x1
    522c:	str	x0, [x1, #8]
    5230:	mov	w0, #0x0                   	// #0
    5234:	ldp	x19, x20, [sp, #16]
    5238:	ldp	x29, x30, [sp], #32
    523c:	ret
    5240:	stp	x29, x30, [sp, #-48]!
    5244:	mov	x29, sp
    5248:	str	x21, [sp, #32]
    524c:	mov	x21, x0
    5250:	ldr	x0, [x1, #8]
    5254:	stp	x19, x20, [sp, #16]
    5258:	adrp	x20, 1d000 <PyInit__elementtree@@Base+0x12c04>
    525c:	add	x20, x20, #0x328
    5260:	mov	x19, x1
    5264:	cmp	x0, x20
    5268:	b.eq	529c <PySequence_Fast@plt+0x100c>  // b.none
    526c:	mov	x1, x20
    5270:	bl	41b0 <PyType_IsSubtype@plt>
    5274:	cbnz	w0, 529c <PySequence_Fast@plt+0x100c>
    5278:	ldr	x2, [x20, #24]
    527c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    5280:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    5284:	mov	x3, x19
    5288:	add	x1, x1, #0x68f
    528c:	add	x0, x0, #0x698
    5290:	bl	3f20 <_PyArg_BadArgument@plt>
    5294:	mov	x0, #0x0                   	// #0
    5298:	b	52c0 <PySequence_Fast@plt+0x1030>
    529c:	mov	x1, x19
    52a0:	mov	x0, x21
    52a4:	bl	51bc <PySequence_Fast@plt+0xf2c>
    52a8:	tbnz	w0, #31, 5294 <PySequence_Fast@plt+0x1004>
    52ac:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    52b0:	ldr	x0, [x0, #3976]
    52b4:	ldr	x1, [x0]
    52b8:	add	x1, x1, #0x1
    52bc:	str	x1, [x0]
    52c0:	ldp	x19, x20, [sp, #16]
    52c4:	ldr	x21, [sp, #32]
    52c8:	ldp	x29, x30, [sp], #48
    52cc:	ret
    52d0:	stp	x29, x30, [sp, #-32]!
    52d4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    52d8:	mov	x2, #0x1                   	// #1
    52dc:	mov	x29, sp
    52e0:	str	x19, [sp, #16]
    52e4:	mov	x19, x0
    52e8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    52ec:	add	x1, x1, #0x69f
    52f0:	ldr	x0, [x0, #3936]
    52f4:	ldr	x0, [x0]
    52f8:	bl	3da0 <PyErr_WarnEx@plt>
    52fc:	tbz	w0, #31, 5310 <PySequence_Fast@plt+0x1080>
    5300:	mov	x0, #0x0                   	// #0
    5304:	ldr	x19, [sp, #16]
    5308:	ldp	x29, x30, [sp], #32
    530c:	ret
    5310:	ldr	x0, [x19, #40]
    5314:	cbnz	x0, 5324 <PySequence_Fast@plt+0x1094>
    5318:	ldr	x19, [sp, #16]
    531c:	ldp	x29, x30, [sp], #32
    5320:	b	3c90 <PyList_New@plt>
    5324:	ldr	x0, [x0, #8]
    5328:	bl	3c90 <PyList_New@plt>
    532c:	cbz	x0, 5300 <PySequence_Fast@plt+0x1070>
    5330:	ldr	x4, [x19, #40]
    5334:	mov	x1, #0x0                   	// #0
    5338:	ldr	x2, [x4, #8]
    533c:	cmp	x1, x2
    5340:	b.ge	5304 <PySequence_Fast@plt+0x1074>  // b.tcont
    5344:	ldr	x2, [x4, #24]
    5348:	lsl	x5, x1, #3
    534c:	add	x1, x1, #0x1
    5350:	ldr	x2, [x2, x5]
    5354:	ldr	x3, [x2]
    5358:	add	x3, x3, #0x1
    535c:	str	x3, [x2]
    5360:	ldr	x3, [x0, #24]
    5364:	str	x2, [x3, x5]
    5368:	b	5338 <PySequence_Fast@plt+0x10a8>
    536c:	ldr	x1, [x0]
    5370:	sub	x1, x1, #0x1
    5374:	str	x1, [x0]
    5378:	cbnz	x1, 5380 <PySequence_Fast@plt+0x10f0>
    537c:	b	3db0 <_Py_Dealloc@plt>
    5380:	ret
    5384:	stp	x29, x30, [sp, #-32]!
    5388:	mov	x1, #0x0                   	// #0
    538c:	mov	x29, sp
    5390:	stp	x19, x20, [sp, #16]
    5394:	mov	x20, x0
    5398:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    539c:	add	x0, x0, #0x779
    53a0:	bl	4200 <PyUnicode_FromStringAndSize@plt>
    53a4:	mov	x19, x0
    53a8:	cbz	x0, 53c4 <PySequence_Fast@plt+0x1134>
    53ac:	mov	x1, x20
    53b0:	bl	3d60 <PyUnicode_Join@plt>
    53b4:	mov	x20, x0
    53b8:	mov	x0, x19
    53bc:	mov	x19, x20
    53c0:	bl	536c <PySequence_Fast@plt+0x10dc>
    53c4:	mov	x0, x19
    53c8:	ldp	x19, x20, [sp, #16]
    53cc:	ldp	x29, x30, [sp], #32
    53d0:	ret
    53d4:	stp	x29, x30, [sp, #-64]!
    53d8:	mov	x29, sp
    53dc:	stp	x19, x20, [sp, #16]
    53e0:	mov	x19, x1
    53e4:	ldr	x1, [x0, #8]
    53e8:	stp	x21, x22, [sp, #32]
    53ec:	stp	x23, x24, [sp, #48]
    53f0:	mov	x23, x0
    53f4:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    53f8:	add	x0, x0, #0x328
    53fc:	mov	x24, x3
    5400:	cmp	x1, x0
    5404:	b.ne	5480 <PySequence_Fast@plt+0x11f0>  // b.any
    5408:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    540c:	ldr	x3, [x2]
    5410:	ldr	x1, [x1, #3976]
    5414:	and	x0, x3, #0xfffffffffffffffe
    5418:	cmp	x0, x1
    541c:	b.ne	5450 <PySequence_Fast@plt+0x11c0>  // b.any
    5420:	ldr	x1, [x19]
    5424:	adrp	x3, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5428:	ldr	x3, [x3, #4064]
    542c:	ldr	x4, [x1, #8]
    5430:	and	x1, x1, #0xfffffffffffffffe
    5434:	cmp	x4, x3
    5438:	cset	x3, eq  // eq = none
    543c:	orr	x1, x3, x1
    5440:	str	x1, [x2]
    5444:	str	xzr, [x19]
    5448:	bl	536c <PySequence_Fast@plt+0x10dc>
    544c:	b	550c <PySequence_Fast@plt+0x127c>
    5450:	tbz	w3, #0, 5480 <PySequence_Fast@plt+0x11f0>
    5454:	ldr	x3, [x19]
    5458:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    545c:	mov	x1, x2
    5460:	bl	3d70 <PyList_SetSlice@plt>
    5464:	tbz	w0, #31, 5504 <PySequence_Fast@plt+0x1274>
    5468:	mov	w0, #0xffffffff            	// #-1
    546c:	ldp	x19, x20, [sp, #16]
    5470:	ldp	x21, x22, [sp, #32]
    5474:	ldp	x23, x24, [sp, #48]
    5478:	ldp	x29, x30, [sp], #64
    547c:	ret
    5480:	mov	x1, x24
    5484:	mov	x0, x23
    5488:	bl	4140 <_PyObject_GetAttrId@plt>
    548c:	mov	x20, x0
    5490:	cbz	x0, 5468 <PySequence_Fast@plt+0x11d8>
    5494:	ldr	x0, [x19]
    5498:	bl	5384 <PySequence_Fast@plt+0x10f4>
    549c:	mov	x22, x0
    54a0:	cbnz	x0, 54b0 <PySequence_Fast@plt+0x1220>
    54a4:	mov	x0, x20
    54a8:	bl	536c <PySequence_Fast@plt+0x10dc>
    54ac:	b	5468 <PySequence_Fast@plt+0x11d8>
    54b0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    54b4:	ldr	x0, [x0, #3976]
    54b8:	cmp	x20, x0
    54bc:	b.eq	5514 <PySequence_Fast@plt+0x1284>  // b.none
    54c0:	mov	x1, x22
    54c4:	mov	x0, x20
    54c8:	bl	3d30 <PyNumber_Add@plt>
    54cc:	mov	x21, x0
    54d0:	mov	x0, x22
    54d4:	bl	536c <PySequence_Fast@plt+0x10dc>
    54d8:	mov	x0, x20
    54dc:	bl	536c <PySequence_Fast@plt+0x10dc>
    54e0:	cbz	x21, 5468 <PySequence_Fast@plt+0x11d8>
    54e4:	mov	x2, x21
    54e8:	mov	x1, x24
    54ec:	mov	x0, x23
    54f0:	bl	4050 <_PyObject_SetAttrId@plt>
    54f4:	mov	w20, w0
    54f8:	mov	x0, x21
    54fc:	bl	536c <PySequence_Fast@plt+0x10dc>
    5500:	tbnz	w20, #31, 5468 <PySequence_Fast@plt+0x11d8>
    5504:	ldr	x0, [x19]
    5508:	cbnz	x0, 5444 <PySequence_Fast@plt+0x11b4>
    550c:	mov	w0, #0x0                   	// #0
    5510:	b	546c <PySequence_Fast@plt+0x11dc>
    5514:	mov	x0, x20
    5518:	mov	x21, x22
    551c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5520:	b	54e4 <PySequence_Fast@plt+0x1254>
    5524:	ldr	x4, [x0, #8]
    5528:	adrp	x3, 1d000 <PyInit__elementtree@@Base+0x12c04>
    552c:	add	x3, x3, #0x328
    5530:	cmp	x4, x3
    5534:	b.ne	553c <PySequence_Fast@plt+0x12ac>  // b.any
    5538:	b	51bc <PySequence_Fast@plt+0xf2c>
    553c:	stp	x29, x30, [sp, #-16]!
    5540:	mov	x2, x1
    5544:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5548:	add	x1, x1, #0x9c0
    554c:	mov	x29, sp
    5550:	add	x1, x1, #0x100
    5554:	mov	x3, #0x0                   	// #0
    5558:	bl	4160 <_PyObject_CallMethodIdObjArgs@plt>
    555c:	cbz	x0, 5570 <PySequence_Fast@plt+0x12e0>
    5560:	bl	536c <PySequence_Fast@plt+0x10dc>
    5564:	mov	w0, #0x0                   	// #0
    5568:	ldp	x29, x30, [sp], #16
    556c:	ret
    5570:	mov	w0, #0xffffffff            	// #-1
    5574:	b	5568 <PySequence_Fast@plt+0x12d8>
    5578:	stp	x29, x30, [sp, #-32]!
    557c:	mov	x1, #0x0                   	// #0
    5580:	mov	x29, sp
    5584:	ldr	x2, [x0, #304]
    5588:	str	x19, [sp, #16]
    558c:	blr	x2
    5590:	mov	x19, x0
    5594:	cbz	x0, 55ec <PySequence_Fast@plt+0x135c>
    5598:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    559c:	str	xzr, [x19, #48]
    55a0:	stp	xzr, xzr, [x19, #72]
    55a4:	ldr	x0, [x0, #3976]
    55a8:	stp	xzr, x0, [x19, #16]
    55ac:	str	x0, [x19, #32]
    55b0:	ldr	x1, [x0]
    55b4:	str	xzr, [x19, #88]
    55b8:	add	x1, x1, #0x2
    55bc:	str	x1, [x0]
    55c0:	mov	x0, #0x14                  	// #20
    55c4:	bl	3c90 <PyList_New@plt>
    55c8:	str	x0, [x19, #56]
    55cc:	cbnz	x0, 55fc <PySequence_Fast@plt+0x136c>
    55d0:	ldr	x0, [x19, #24]
    55d4:	bl	536c <PySequence_Fast@plt+0x10dc>
    55d8:	ldr	x0, [x19, #32]
    55dc:	bl	536c <PySequence_Fast@plt+0x10dc>
    55e0:	mov	x0, x19
    55e4:	mov	x19, #0x0                   	// #0
    55e8:	bl	536c <PySequence_Fast@plt+0x10dc>
    55ec:	mov	x0, x19
    55f0:	ldr	x19, [sp, #16]
    55f4:	ldp	x29, x30, [sp], #32
    55f8:	ret
    55fc:	str	xzr, [x19, #64]
    5600:	stp	xzr, xzr, [x19, #96]
    5604:	stp	xzr, xzr, [x19, #112]
    5608:	stp	xzr, xzr, [x19, #128]
    560c:	str	xzr, [x19, #144]
    5610:	strh	wzr, [x19, #152]
    5614:	b	55ec <PySequence_Fast@plt+0x135c>
    5618:	stp	x29, x30, [sp, #-32]!
    561c:	mov	x29, sp
    5620:	str	x19, [sp, #16]
    5624:	mov	x19, x0
    5628:	ldr	x0, [x0, #16]
    562c:	cbz	x0, 5644 <PySequence_Fast@plt+0x13b4>
    5630:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x13c04>
    5634:	ldr	x1, [x1, #1080]
    5638:	ldr	x1, [x1, #72]
    563c:	str	xzr, [x19, #16]
    5640:	blr	x1
    5644:	ldr	x0, [x19, #112]
    5648:	cbz	x0, 5654 <PySequence_Fast@plt+0x13c4>
    564c:	str	xzr, [x19, #112]
    5650:	bl	536c <PySequence_Fast@plt+0x10dc>
    5654:	ldr	x0, [x19, #96]
    5658:	cbz	x0, 5664 <PySequence_Fast@plt+0x13d4>
    565c:	str	xzr, [x19, #96]
    5660:	bl	536c <PySequence_Fast@plt+0x10dc>
    5664:	ldr	x0, [x19, #88]
    5668:	cbz	x0, 5674 <PySequence_Fast@plt+0x13e4>
    566c:	str	xzr, [x19, #88]
    5670:	bl	536c <PySequence_Fast@plt+0x10dc>
    5674:	ldr	x0, [x19, #80]
    5678:	cbz	x0, 5684 <PySequence_Fast@plt+0x13f4>
    567c:	str	xzr, [x19, #80]
    5680:	bl	536c <PySequence_Fast@plt+0x10dc>
    5684:	ldr	x0, [x19, #72]
    5688:	cbz	x0, 5694 <PySequence_Fast@plt+0x1404>
    568c:	str	xzr, [x19, #72]
    5690:	bl	536c <PySequence_Fast@plt+0x10dc>
    5694:	ldr	x0, [x19, #64]
    5698:	cbz	x0, 56a4 <PySequence_Fast@plt+0x1414>
    569c:	str	xzr, [x19, #64]
    56a0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56a4:	ldr	x0, [x19, #48]
    56a8:	cbz	x0, 56b4 <PySequence_Fast@plt+0x1424>
    56ac:	str	xzr, [x19, #48]
    56b0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56b4:	ldr	x0, [x19, #56]
    56b8:	cbz	x0, 56c4 <PySequence_Fast@plt+0x1434>
    56bc:	str	xzr, [x19, #56]
    56c0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56c4:	ldr	x0, [x19, #104]
    56c8:	cbz	x0, 56d4 <PySequence_Fast@plt+0x1444>
    56cc:	str	xzr, [x19, #104]
    56d0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56d4:	ldr	x0, [x19, #24]
    56d8:	cbz	x0, 56e4 <PySequence_Fast@plt+0x1454>
    56dc:	str	xzr, [x19, #24]
    56e0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56e4:	ldr	x0, [x19, #32]
    56e8:	cbz	x0, 56f4 <PySequence_Fast@plt+0x1464>
    56ec:	str	xzr, [x19, #32]
    56f0:	bl	536c <PySequence_Fast@plt+0x10dc>
    56f4:	ldr	x0, [x19, #40]
    56f8:	cbz	x0, 5704 <PySequence_Fast@plt+0x1474>
    56fc:	str	xzr, [x19, #40]
    5700:	bl	536c <PySequence_Fast@plt+0x10dc>
    5704:	mov	w0, #0x0                   	// #0
    5708:	ldr	x19, [sp, #16]
    570c:	ldp	x29, x30, [sp], #32
    5710:	ret
    5714:	stp	x29, x30, [sp, #-32]!
    5718:	mov	x29, sp
    571c:	str	x19, [sp, #16]
    5720:	mov	x19, x0
    5724:	bl	4270 <PyObject_GC_UnTrack@plt>
    5728:	mov	x0, x19
    572c:	bl	5618 <PySequence_Fast@plt+0x1388>
    5730:	ldr	x0, [x19, #8]
    5734:	ldr	x1, [x0, #320]
    5738:	mov	x0, x19
    573c:	ldr	x19, [sp, #16]
    5740:	mov	x16, x1
    5744:	ldp	x29, x30, [sp], #32
    5748:	br	x16
    574c:	ldr	x2, [x0]
    5750:	str	x1, [x0]
    5754:	and	x0, x2, #0xfffffffffffffffe
    5758:	b	536c <PySequence_Fast@plt+0x10dc>
    575c:	sub	sp, sp, #0x50
    5760:	stp	x29, x30, [sp, #32]
    5764:	add	x29, sp, #0x20
    5768:	stp	x19, x20, [sp, #48]
    576c:	mov	x20, x0
    5770:	ldr	x0, [x0, #40]
    5774:	str	x21, [sp, #64]
    5778:	cbz	x0, 5830 <PySequence_Fast@plt+0x15a0>
    577c:	ldr	x0, [x0, #8]
    5780:	bl	3c90 <PyList_New@plt>
    5784:	mov	x19, x0
    5788:	cbz	x0, 58b4 <PySequence_Fast@plt+0x1624>
    578c:	ldr	x8, [x20, #40]
    5790:	mov	x0, #0x0                   	// #0
    5794:	ldr	x1, [x19, #16]
    5798:	cmp	x0, x1
    579c:	b.lt	5838 <PySequence_Fast@plt+0x15a8>  // b.tstop
    57a0:	ldp	x2, x7, [x20, #16]
    57a4:	adrp	x9, a000 <PySequence_Fast@plt+0x5d70>
    57a8:	ldr	x4, [x20, #32]
    57ac:	adrp	x5, a000 <PySequence_Fast@plt+0x5d70>
    57b0:	adrp	x3, a000 <PySequence_Fast@plt+0x5d70>
    57b4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    57b8:	and	x4, x4, #0xfffffffffffffffe
    57bc:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    57c0:	and	x7, x7, #0xfffffffffffffffe
    57c4:	cbz	x8, 5860 <PySequence_Fast@plt+0x15d0>
    57c8:	ldr	x6, [x8]
    57cc:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x11c04>
    57d0:	ldr	x8, [x8, #3976]
    57d4:	cmp	x6, x8
    57d8:	b.eq	5860 <PySequence_Fast@plt+0x15d0>  // b.none
    57dc:	add	x0, x0, #0x723
    57e0:	stp	x7, x0, [sp]
    57e4:	add	x5, x5, #0x701
    57e8:	str	x4, [sp, #16]
    57ec:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    57f0:	add	x3, x3, #0x708
    57f4:	add	x1, x1, #0x712
    57f8:	add	x7, x9, #0xd25
    57fc:	mov	x4, x19
    5800:	add	x0, x0, #0x716
    5804:	bl	41e0 <_Py_BuildValue_SizeT@plt>
    5808:	mov	x20, x0
    580c:	cbz	x0, 58ac <PySequence_Fast@plt+0x161c>
    5810:	mov	x0, x19
    5814:	bl	536c <PySequence_Fast@plt+0x10dc>
    5818:	mov	x0, x20
    581c:	ldp	x29, x30, [sp, #32]
    5820:	ldp	x19, x20, [sp, #48]
    5824:	ldr	x21, [sp, #64]
    5828:	add	sp, sp, #0x50
    582c:	ret
    5830:	mov	x0, #0x0                   	// #0
    5834:	b	5780 <PySequence_Fast@plt+0x14f0>
    5838:	ldr	x1, [x8, #24]
    583c:	lsl	x3, x0, #3
    5840:	add	x0, x0, #0x1
    5844:	ldr	x1, [x1, x3]
    5848:	ldr	x2, [x1]
    584c:	add	x2, x2, #0x1
    5850:	str	x2, [x1]
    5854:	ldr	x2, [x19, #24]
    5858:	str	x1, [x2, x3]
    585c:	b	5794 <PySequence_Fast@plt+0x1504>
    5860:	add	x0, x0, #0x723
    5864:	stp	x0, x4, [sp]
    5868:	add	x6, x9, #0xd25
    586c:	add	x5, x5, #0x701
    5870:	add	x3, x3, #0x708
    5874:	add	x1, x1, #0x712
    5878:	mov	x4, x19
    587c:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    5880:	add	x0, x0, #0x728
    5884:	bl	41e0 <_Py_BuildValue_SizeT@plt>
    5888:	b	5808 <PySequence_Fast@plt+0x1578>
    588c:	ldr	x0, [x19, #24]
    5890:	ldr	x0, [x0, x21, lsl #3]
    5894:	add	x21, x21, #0x1
    5898:	bl	536c <PySequence_Fast@plt+0x10dc>
    589c:	ldr	x0, [x19, #16]
    58a0:	cmp	x21, x0
    58a4:	b.lt	588c <PySequence_Fast@plt+0x15fc>  // b.tstop
    58a8:	b	5810 <PySequence_Fast@plt+0x1580>
    58ac:	mov	x21, #0x0                   	// #0
    58b0:	b	589c <PySequence_Fast@plt+0x160c>
    58b4:	mov	x20, #0x0                   	// #0
    58b8:	b	5818 <PySequence_Fast@plt+0x1588>
    58bc:	stp	x29, x30, [sp, #-48]!
    58c0:	mov	x29, sp
    58c4:	ldr	x3, [x0, #40]
    58c8:	stp	x19, x20, [sp, #16]
    58cc:	stp	x21, x22, [sp, #32]
    58d0:	cbz	x3, 58e8 <PySequence_Fast@plt+0x1658>
    58d4:	tbnz	x1, #63, 58e8 <PySequence_Fast@plt+0x1658>
    58d8:	mov	x19, x2
    58dc:	ldr	x2, [x3, #8]
    58e0:	cmp	x2, x1
    58e4:	b.gt	5914 <PySequence_Fast@plt+0x1684>
    58e8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    58ec:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    58f0:	add	x1, x1, #0x736
    58f4:	ldr	x0, [x0, #3984]
    58f8:	ldr	x0, [x0]
    58fc:	bl	3e20 <PyErr_SetString@plt>
    5900:	mov	w0, #0xffffffff            	// #-1
    5904:	ldp	x19, x20, [sp, #16]
    5908:	ldp	x21, x22, [sp, #32]
    590c:	ldp	x29, x30, [sp], #48
    5910:	ret
    5914:	mov	x20, x0
    5918:	lsl	x21, x1, #3
    591c:	ldr	x0, [x3, #24]
    5920:	add	x1, x0, x1, lsl #3
    5924:	ldr	x22, [x0, x21]
    5928:	cbz	x19, 597c <PySequence_Fast@plt+0x16ec>
    592c:	ldr	x0, [x19, #8]
    5930:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5934:	add	x1, x1, #0x328
    5938:	cmp	x0, x1
    593c:	b.eq	5954 <PySequence_Fast@plt+0x16c4>  // b.none
    5940:	bl	41b0 <PyType_IsSubtype@plt>
    5944:	cbnz	w0, 5954 <PySequence_Fast@plt+0x16c4>
    5948:	ldr	x0, [x19, #8]
    594c:	bl	5054 <PySequence_Fast@plt+0xdc4>
    5950:	b	5900 <PySequence_Fast@plt+0x1670>
    5954:	ldr	x0, [x19]
    5958:	add	x0, x0, #0x1
    595c:	str	x0, [x19]
    5960:	ldr	x0, [x20, #40]
    5964:	ldr	x0, [x0, #24]
    5968:	str	x19, [x0, x21]
    596c:	mov	x0, x22
    5970:	bl	536c <PySequence_Fast@plt+0x10dc>
    5974:	mov	w0, #0x0                   	// #0
    5978:	b	5904 <PySequence_Fast@plt+0x1674>
    597c:	sub	x4, x2, #0x1
    5980:	add	x2, x0, x2, lsl #3
    5984:	str	x4, [x3, #8]
    5988:	add	x1, x1, #0x8
    598c:	cmp	x1, x2
    5990:	b.eq	596c <PySequence_Fast@plt+0x16dc>  // b.none
    5994:	ldr	x0, [x1]
    5998:	stur	x0, [x1, #-8]
    599c:	b	5988 <PySequence_Fast@plt+0x16f8>
    59a0:	stp	x29, x30, [sp, #-32]!
    59a4:	mov	x29, sp
    59a8:	str	x19, [sp, #16]
    59ac:	mov	x19, x0
    59b0:	ldr	x0, [x0, #144]
    59b4:	cbz	x0, 59c0 <PySequence_Fast@plt+0x1730>
    59b8:	str	xzr, [x19, #144]
    59bc:	bl	536c <PySequence_Fast@plt+0x10dc>
    59c0:	ldr	x0, [x19, #136]
    59c4:	cbz	x0, 59d0 <PySequence_Fast@plt+0x1740>
    59c8:	str	xzr, [x19, #136]
    59cc:	bl	536c <PySequence_Fast@plt+0x10dc>
    59d0:	ldr	x0, [x19, #128]
    59d4:	cbz	x0, 59e0 <PySequence_Fast@plt+0x1750>
    59d8:	str	xzr, [x19, #128]
    59dc:	bl	536c <PySequence_Fast@plt+0x10dc>
    59e0:	ldr	x0, [x19, #120]
    59e4:	cbz	x0, 59f0 <PySequence_Fast@plt+0x1760>
    59e8:	str	xzr, [x19, #120]
    59ec:	bl	536c <PySequence_Fast@plt+0x10dc>
    59f0:	ldr	x0, [x19, #112]
    59f4:	cbz	x0, 5a00 <PySequence_Fast@plt+0x1770>
    59f8:	str	xzr, [x19, #112]
    59fc:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a00:	ldr	x0, [x19, #104]
    5a04:	cbz	x0, 5a10 <PySequence_Fast@plt+0x1780>
    5a08:	str	xzr, [x19, #104]
    5a0c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a10:	ldr	x0, [x19, #96]
    5a14:	cbz	x0, 5a20 <PySequence_Fast@plt+0x1790>
    5a18:	str	xzr, [x19, #96]
    5a1c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a20:	ldr	x0, [x19, #56]
    5a24:	cbz	x0, 5a30 <PySequence_Fast@plt+0x17a0>
    5a28:	str	xzr, [x19, #56]
    5a2c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a30:	ldr	x0, [x19, #48]
    5a34:	cbz	x0, 5a40 <PySequence_Fast@plt+0x17b0>
    5a38:	str	xzr, [x19, #48]
    5a3c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a40:	ldr	x0, [x19, #32]
    5a44:	cbz	x0, 5a50 <PySequence_Fast@plt+0x17c0>
    5a48:	str	xzr, [x19, #32]
    5a4c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a50:	ldr	x0, [x19, #40]
    5a54:	cbz	x0, 5a60 <PySequence_Fast@plt+0x17d0>
    5a58:	str	xzr, [x19, #40]
    5a5c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a60:	ldr	x0, [x19, #24]
    5a64:	cbz	x0, 5a70 <PySequence_Fast@plt+0x17e0>
    5a68:	str	xzr, [x19, #24]
    5a6c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a70:	ldr	x0, [x19, #88]
    5a74:	cbz	x0, 5a80 <PySequence_Fast@plt+0x17f0>
    5a78:	str	xzr, [x19, #88]
    5a7c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a80:	ldr	x0, [x19, #80]
    5a84:	cbz	x0, 5a90 <PySequence_Fast@plt+0x1800>
    5a88:	str	xzr, [x19, #80]
    5a8c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5a90:	ldr	x0, [x19, #72]
    5a94:	cbz	x0, 5aa0 <PySequence_Fast@plt+0x1810>
    5a98:	str	xzr, [x19, #72]
    5a9c:	bl	536c <PySequence_Fast@plt+0x10dc>
    5aa0:	ldr	x0, [x19, #16]
    5aa4:	cbz	x0, 5ab0 <PySequence_Fast@plt+0x1820>
    5aa8:	str	xzr, [x19, #16]
    5aac:	bl	536c <PySequence_Fast@plt+0x10dc>
    5ab0:	mov	w0, #0x0                   	// #0
    5ab4:	ldr	x19, [sp, #16]
    5ab8:	ldp	x29, x30, [sp], #32
    5abc:	ret
    5ac0:	stp	x29, x30, [sp, #-32]!
    5ac4:	mov	x29, sp
    5ac8:	str	x19, [sp, #16]
    5acc:	mov	x19, x0
    5ad0:	bl	4270 <PyObject_GC_UnTrack@plt>
    5ad4:	mov	x0, x19
    5ad8:	bl	59a0 <PySequence_Fast@plt+0x1710>
    5adc:	ldr	x0, [x19, #8]
    5ae0:	ldr	x1, [x0, #320]
    5ae4:	mov	x0, x19
    5ae8:	ldr	x19, [sp, #16]
    5aec:	mov	x16, x1
    5af0:	ldp	x29, x30, [sp], #32
    5af4:	br	x16
    5af8:	stp	x29, x30, [sp, #-32]!
    5afc:	mov	x29, sp
    5b00:	str	x19, [sp, #16]
    5b04:	bl	3e50 <PyModule_GetState@plt>
    5b08:	mov	x19, x0
    5b0c:	ldr	x0, [x0]
    5b10:	cbz	x0, 5b1c <PySequence_Fast@plt+0x188c>
    5b14:	str	xzr, [x19]
    5b18:	bl	536c <PySequence_Fast@plt+0x10dc>
    5b1c:	ldr	x0, [x19, #8]
    5b20:	cbz	x0, 5b2c <PySequence_Fast@plt+0x189c>
    5b24:	str	xzr, [x19, #8]
    5b28:	bl	536c <PySequence_Fast@plt+0x10dc>
    5b2c:	ldr	x0, [x19, #16]
    5b30:	cbz	x0, 5b3c <PySequence_Fast@plt+0x18ac>
    5b34:	str	xzr, [x19, #16]
    5b38:	bl	536c <PySequence_Fast@plt+0x10dc>
    5b3c:	ldr	x0, [x19, #24]
    5b40:	cbz	x0, 5b4c <PySequence_Fast@plt+0x18bc>
    5b44:	str	xzr, [x19, #24]
    5b48:	bl	536c <PySequence_Fast@plt+0x10dc>
    5b4c:	ldr	x0, [x19, #32]
    5b50:	cbz	x0, 5b5c <PySequence_Fast@plt+0x18cc>
    5b54:	str	xzr, [x19, #32]
    5b58:	bl	536c <PySequence_Fast@plt+0x10dc>
    5b5c:	mov	w0, #0x0                   	// #0
    5b60:	ldr	x19, [sp, #16]
    5b64:	ldp	x29, x30, [sp], #32
    5b68:	ret
    5b6c:	b	5af8 <PySequence_Fast@plt+0x1868>
    5b70:	cbz	x0, 5b78 <PySequence_Fast@plt+0x18e8>
    5b74:	b	536c <PySequence_Fast@plt+0x10dc>
    5b78:	ret
    5b7c:	stp	x29, x30, [sp, #-32]!
    5b80:	mov	x29, sp
    5b84:	stp	x19, x20, [sp, #16]
    5b88:	mov	x19, x0
    5b8c:	ldr	x20, [x0, #24]
    5b90:	str	xzr, [x0, #24]
    5b94:	bl	4270 <PyObject_GC_UnTrack@plt>
    5b98:	sub	x20, x20, #0x1
    5b9c:	cmn	x20, #0x1
    5ba0:	ldr	x0, [x19, #16]
    5ba4:	b.ne	5bcc <PySequence_Fast@plt+0x193c>  // b.any
    5ba8:	bl	3d10 <PyMem_Free@plt>
    5bac:	ldr	x0, [x19, #48]
    5bb0:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5bb4:	ldr	x0, [x19, #40]
    5bb8:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5bbc:	mov	x0, x19
    5bc0:	ldp	x19, x20, [sp, #16]
    5bc4:	ldp	x29, x30, [sp], #32
    5bc8:	b	3de0 <PyObject_GC_Del@plt>
    5bcc:	lsl	x1, x20, #4
    5bd0:	ldr	x0, [x0, x1]
    5bd4:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5bd8:	b	5b98 <PySequence_Fast@plt+0x1908>
    5bdc:	sub	sp, sp, #0x90
    5be0:	stp	x29, x30, [sp, #16]
    5be4:	add	x29, sp, #0x10
    5be8:	stp	x19, x20, [sp, #32]
    5bec:	mov	x20, x0
    5bf0:	stp	x21, x22, [sp, #48]
    5bf4:	mov	x21, x1
    5bf8:	stp	x23, x24, [sp, #64]
    5bfc:	ldr	x1, [x1, #16]
    5c00:	str	x25, [sp, #80]
    5c04:	cbz	x2, 5c74 <PySequence_Fast@plt+0x19e4>
    5c08:	ldr	x22, [x2, #16]
    5c0c:	add	x22, x22, x1
    5c10:	add	x21, x21, #0x18
    5c14:	cbnz	x2, 5c20 <PySequence_Fast@plt+0x1990>
    5c18:	cmp	x1, #0x1
    5c1c:	b.ls	5c7c <PySequence_Fast@plt+0x19ec>  // b.plast
    5c20:	add	x0, sp, #0x68
    5c24:	str	x0, [sp]
    5c28:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5c2c:	add	x4, x4, #0x9c0
    5c30:	mov	x0, x21
    5c34:	add	x4, x4, #0x118
    5c38:	mov	w7, #0x0                   	// #0
    5c3c:	mov	w6, #0x1                   	// #1
    5c40:	mov	w5, #0x0                   	// #0
    5c44:	mov	x3, #0x0                   	// #0
    5c48:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    5c4c:	mov	x21, x0
    5c50:	cbnz	x0, 5c7c <PySequence_Fast@plt+0x19ec>
    5c54:	mov	w0, #0xffffffff            	// #-1
    5c58:	ldp	x29, x30, [sp, #16]
    5c5c:	ldp	x19, x20, [sp, #32]
    5c60:	ldp	x21, x22, [sp, #48]
    5c64:	ldp	x23, x24, [sp, #64]
    5c68:	ldr	x25, [sp, #80]
    5c6c:	add	sp, sp, #0x90
    5c70:	ret
    5c74:	mov	x22, #0x0                   	// #0
    5c78:	b	5c0c <PySequence_Fast@plt+0x197c>
    5c7c:	cbz	x22, 5ddc <PySequence_Fast@plt+0x1b4c>
    5c80:	ldr	x25, [x21]
    5c84:	cbz	x25, 5e34 <PySequence_Fast@plt+0x1ba4>
    5c88:	subs	x22, x22, #0x1
    5c8c:	b.ne	5e3c <PySequence_Fast@plt+0x1bac>  // b.any
    5c90:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5c94:	mov	w21, #0x0                   	// #0
    5c98:	mov	w24, #0x0                   	// #0
    5c9c:	ldr	x19, [x19, #3976]
    5ca0:	mov	x23, x19
    5ca4:	b	5d0c <PySequence_Fast@plt+0x1a7c>
    5ca8:	subs	x22, x22, #0x1
    5cac:	b.eq	5dc8 <PySequence_Fast@plt+0x1b38>  // b.none
    5cb0:	ldr	x19, [x21, #16]
    5cb4:	cbz	x19, 5ccc <PySequence_Fast@plt+0x1a3c>
    5cb8:	subs	x22, x22, #0x1
    5cbc:	b.ne	5cd4 <PySequence_Fast@plt+0x1a44>  // b.any
    5cc0:	mov	w21, #0x0                   	// #0
    5cc4:	mov	w24, #0x0                   	// #0
    5cc8:	b	5d0c <PySequence_Fast@plt+0x1a7c>
    5ccc:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5cd0:	ldr	x19, [x19, #3976]
    5cd4:	ldr	x0, [x21, #24]
    5cd8:	cbz	x0, 5cf8 <PySequence_Fast@plt+0x1a68>
    5cdc:	bl	40a0 <PyObject_IsTrue@plt>
    5ce0:	mov	w24, w0
    5ce4:	tbnz	w0, #31, 5c54 <PySequence_Fast@plt+0x19c4>
    5ce8:	cmp	x22, #0x1
    5cec:	b.ne	5cfc <PySequence_Fast@plt+0x1a6c>  // b.any
    5cf0:	mov	w21, #0x0                   	// #0
    5cf4:	b	5d0c <PySequence_Fast@plt+0x1a7c>
    5cf8:	mov	w24, #0x0                   	// #0
    5cfc:	ldr	x0, [x21, #32]
    5d00:	bl	40a0 <PyObject_IsTrue@plt>
    5d04:	mov	w21, w0
    5d08:	tbnz	w0, #31, 5c54 <PySequence_Fast@plt+0x19c4>
    5d0c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5d10:	ldr	x0, [x0, #3976]
    5d14:	cmp	x25, x0
    5d18:	b.eq	5df0 <PySequence_Fast@plt+0x1b60>  // b.none
    5d1c:	ldr	x1, [x25]
    5d20:	ldr	x0, [x20, #72]
    5d24:	add	x1, x1, #0x1
    5d28:	str	x1, [x25]
    5d2c:	str	x25, [x20, #72]
    5d30:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5d34:	adrp	x22, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5d38:	ldr	x0, [x22, #3976]
    5d3c:	cmp	x23, x0
    5d40:	b.ne	5d60 <PySequence_Fast@plt+0x1ad0>  // b.any
    5d44:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5d48:	add	x0, x0, #0x9c0
    5d4c:	add	x0, x0, #0x40
    5d50:	bl	4010 <PyState_FindModule@plt>
    5d54:	bl	3e50 <PyModule_GetState@plt>
    5d58:	ldr	x23, [x0, #24]
    5d5c:	cbz	x23, 5e04 <PySequence_Fast@plt+0x1b74>
    5d60:	ldr	x0, [x23]
    5d64:	add	x0, x0, #0x1
    5d68:	str	x0, [x23]
    5d6c:	ldr	x0, [x20, #80]
    5d70:	str	x23, [x20, #80]
    5d74:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5d78:	strb	w24, [x20, #152]
    5d7c:	ldr	x22, [x22, #3976]
    5d80:	cmp	x19, x22
    5d84:	b.ne	5da4 <PySequence_Fast@plt+0x1b14>  // b.any
    5d88:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5d8c:	add	x0, x0, #0x9c0
    5d90:	add	x0, x0, #0x40
    5d94:	bl	4010 <PyState_FindModule@plt>
    5d98:	bl	3e50 <PyModule_GetState@plt>
    5d9c:	ldr	x19, [x0, #32]
    5da0:	cbz	x19, 5e1c <PySequence_Fast@plt+0x1b8c>
    5da4:	ldr	x0, [x19]
    5da8:	add	x0, x0, #0x1
    5dac:	str	x0, [x19]
    5db0:	ldr	x0, [x20, #88]
    5db4:	str	x19, [x20, #88]
    5db8:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    5dbc:	strb	w21, [x20, #153]
    5dc0:	mov	w0, #0x0                   	// #0
    5dc4:	b	5c58 <PySequence_Fast@plt+0x19c8>
    5dc8:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5dcc:	mov	w21, #0x0                   	// #0
    5dd0:	mov	w24, #0x0                   	// #0
    5dd4:	ldr	x19, [x19, #3976]
    5dd8:	b	5d0c <PySequence_Fast@plt+0x1a7c>
    5ddc:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5de0:	mov	w21, #0x0                   	// #0
    5de4:	mov	w24, #0x0                   	// #0
    5de8:	ldr	x19, [x19, #3976]
    5dec:	mov	x23, x19
    5df0:	ldr	x0, [x20, #72]
    5df4:	cbz	x0, 5d34 <PySequence_Fast@plt+0x1aa4>
    5df8:	str	xzr, [x20, #72]
    5dfc:	bl	536c <PySequence_Fast@plt+0x10dc>
    5e00:	b	5d34 <PySequence_Fast@plt+0x1aa4>
    5e04:	ldr	x0, [x20, #80]
    5e08:	cbz	x0, 5e14 <PySequence_Fast@plt+0x1b84>
    5e0c:	str	xzr, [x20, #80]
    5e10:	bl	536c <PySequence_Fast@plt+0x10dc>
    5e14:	strb	wzr, [x20, #152]
    5e18:	b	5d7c <PySequence_Fast@plt+0x1aec>
    5e1c:	ldr	x0, [x20, #88]
    5e20:	cbz	x0, 5e2c <PySequence_Fast@plt+0x1b9c>
    5e24:	str	xzr, [x20, #88]
    5e28:	bl	536c <PySequence_Fast@plt+0x10dc>
    5e2c:	strb	wzr, [x20, #153]
    5e30:	b	5dc0 <PySequence_Fast@plt+0x1b30>
    5e34:	adrp	x25, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5e38:	ldr	x25, [x25, #3976]
    5e3c:	ldr	x23, [x21, #8]
    5e40:	cbnz	x23, 5ca8 <PySequence_Fast@plt+0x1a18>
    5e44:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5e48:	ldr	x23, [x23, #3976]
    5e4c:	b	5cb0 <PySequence_Fast@plt+0x1a20>
    5e50:	stp	x29, x30, [sp, #-64]!
    5e54:	mov	x29, sp
    5e58:	stp	x19, x20, [sp, #16]
    5e5c:	mov	x20, x1
    5e60:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    5e64:	add	x1, x1, #0x779
    5e68:	stp	x21, x22, [sp, #32]
    5e6c:	mov	x22, x0
    5e70:	mov	x0, x20
    5e74:	str	x23, [sp, #48]
    5e78:	bl	4290 <PySequence_Fast@plt>
    5e7c:	mov	x19, x0
    5e80:	cbz	x0, 5eb8 <PySequence_Fast@plt+0x1c28>
    5e84:	add	x23, x0, #0x18
    5e88:	mov	x21, #0x0                   	// #0
    5e8c:	ldr	x0, [x19, #16]
    5e90:	cmp	x0, x21
    5e94:	b.gt	5ef0 <PySequence_Fast@plt+0x1c60>
    5e98:	mov	x0, x19
    5e9c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5ea0:	bl	536c <PySequence_Fast@plt+0x10dc>
    5ea4:	ldr	x19, [x19, #3976]
    5ea8:	ldr	x0, [x19]
    5eac:	add	x0, x0, #0x1
    5eb0:	str	x0, [x19]
    5eb4:	b	5ed8 <PySequence_Fast@plt+0x1c48>
    5eb8:	ldr	x0, [x20, #8]
    5ebc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    5ec0:	add	x1, x1, #0x75a
    5ec4:	ldr	x2, [x0, #24]
    5ec8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5ecc:	ldr	x0, [x0, #3944]
    5ed0:	ldr	x0, [x0]
    5ed4:	bl	41d0 <PyErr_Format@plt>
    5ed8:	mov	x0, x19
    5edc:	ldp	x19, x20, [sp, #16]
    5ee0:	ldp	x21, x22, [sp, #32]
    5ee4:	ldr	x23, [sp, #48]
    5ee8:	ldp	x29, x30, [sp], #64
    5eec:	ret
    5ef0:	ldr	x0, [x19, #8]
    5ef4:	ldr	x0, [x0, #168]
    5ef8:	tbz	w0, #25, 5f38 <PySequence_Fast@plt+0x1ca8>
    5efc:	ldr	x0, [x19, #24]
    5f00:	ldr	x20, [x0, x21, lsl #3]
    5f04:	mov	x1, x20
    5f08:	ldr	x0, [x20]
    5f0c:	add	x0, x0, #0x1
    5f10:	str	x0, [x20]
    5f14:	mov	x0, x22
    5f18:	bl	51bc <PySequence_Fast@plt+0xf2c>
    5f1c:	tbz	w0, #31, 5f40 <PySequence_Fast@plt+0x1cb0>
    5f20:	mov	x0, x19
    5f24:	bl	536c <PySequence_Fast@plt+0x10dc>
    5f28:	mov	x0, x20
    5f2c:	mov	x19, #0x0                   	// #0
    5f30:	bl	536c <PySequence_Fast@plt+0x10dc>
    5f34:	b	5ed8 <PySequence_Fast@plt+0x1c48>
    5f38:	ldr	x20, [x23, x21, lsl #3]
    5f3c:	b	5f04 <PySequence_Fast@plt+0x1c74>
    5f40:	mov	x0, x20
    5f44:	add	x21, x21, #0x1
    5f48:	bl	536c <PySequence_Fast@plt+0x10dc>
    5f4c:	b	5e8c <PySequence_Fast@plt+0x1bfc>
    5f50:	stp	x29, x30, [sp, #-96]!
    5f54:	mov	x29, sp
    5f58:	stp	x19, x20, [sp, #16]
    5f5c:	mov	x19, x2
    5f60:	stp	x21, x22, [sp, #32]
    5f64:	mov	x21, x1
    5f68:	stp	x23, x24, [sp, #48]
    5f6c:	stp	x25, x26, [sp, #64]
    5f70:	mov	x25, x0
    5f74:	sub	x0, x2, #0x1
    5f78:	stp	x27, x28, [sp, #80]
    5f7c:	cmp	x0, #0x1
    5f80:	b.hi	5f98 <PySequence_Fast@plt+0x1d08>  // b.pmore
    5f84:	cmp	x19, #0x1
    5f88:	b.gt	5fd8 <PySequence_Fast@plt+0x1d48>
    5f8c:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5f90:	ldr	x20, [x20, #3976]
    5f94:	b	5fdc <PySequence_Fast@plt+0x1d4c>
    5f98:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    5f9c:	mov	x1, x19
    5fa0:	add	x0, x0, #0x77a
    5fa4:	mov	x3, #0x2                   	// #2
    5fa8:	mov	x2, #0x1                   	// #1
    5fac:	bl	3fb0 <_PyArg_CheckPositional@plt>
    5fb0:	cbnz	w0, 5f84 <PySequence_Fast@plt+0x1cf4>
    5fb4:	mov	x20, #0x0                   	// #0
    5fb8:	mov	x0, x20
    5fbc:	ldp	x19, x20, [sp, #16]
    5fc0:	ldp	x21, x22, [sp, #32]
    5fc4:	ldp	x23, x24, [sp, #48]
    5fc8:	ldp	x25, x26, [sp, #64]
    5fcc:	ldp	x27, x28, [sp, #80]
    5fd0:	ldp	x29, x30, [sp], #96
    5fd4:	ret
    5fd8:	ldr	x20, [x21, #8]
    5fdc:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    5fe0:	ldr	x19, [x25, #24]
    5fe4:	add	x0, x0, #0x328
    5fe8:	add	x0, x0, #0x1a0
    5fec:	ldr	x1, [x19, #8]
    5ff0:	cmp	x1, x0
    5ff4:	b.eq	6014 <PySequence_Fast@plt+0x1d84>  // b.none
    5ff8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    5ffc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6000:	add	x1, x1, #0x785
    6004:	ldr	x0, [x0, #3944]
    6008:	ldr	x0, [x0]
    600c:	bl	3e20 <PyErr_SetString@plt>
    6010:	b	5fb4 <PySequence_Fast@plt+0x1d24>
    6014:	ldr	x0, [x21]
    6018:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    601c:	add	x1, x1, #0x698
    6020:	bl	3d40 <PyObject_GetAttrString@plt>
    6024:	mov	x1, x0
    6028:	cbz	x0, 5fb4 <PySequence_Fast@plt+0x1d24>
    602c:	ldr	x0, [x19, #96]
    6030:	str	x1, [x19, #96]
    6034:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    6038:	ldr	x0, [x19, #104]
    603c:	cbz	x0, 6048 <PySequence_Fast@plt+0x1db8>
    6040:	str	xzr, [x19, #104]
    6044:	bl	536c <PySequence_Fast@plt+0x10dc>
    6048:	ldr	x0, [x19, #112]
    604c:	cbz	x0, 6058 <PySequence_Fast@plt+0x1dc8>
    6050:	str	xzr, [x19, #112]
    6054:	bl	536c <PySequence_Fast@plt+0x10dc>
    6058:	ldr	x0, [x19, #120]
    605c:	cbz	x0, 6068 <PySequence_Fast@plt+0x1dd8>
    6060:	str	xzr, [x19, #120]
    6064:	bl	536c <PySequence_Fast@plt+0x10dc>
    6068:	ldr	x0, [x19, #128]
    606c:	cbz	x0, 6078 <PySequence_Fast@plt+0x1de8>
    6070:	str	xzr, [x19, #128]
    6074:	bl	536c <PySequence_Fast@plt+0x10dc>
    6078:	ldr	x0, [x19, #136]
    607c:	cbz	x0, 6088 <PySequence_Fast@plt+0x1df8>
    6080:	str	xzr, [x19, #136]
    6084:	bl	536c <PySequence_Fast@plt+0x10dc>
    6088:	ldr	x0, [x19, #144]
    608c:	cbz	x0, 6098 <PySequence_Fast@plt+0x1e08>
    6090:	str	xzr, [x19, #144]
    6094:	bl	536c <PySequence_Fast@plt+0x10dc>
    6098:	adrp	x24, 1c000 <PyInit__elementtree@@Base+0x11c04>
    609c:	ldr	x0, [x24, #3976]
    60a0:	cmp	x20, x0
    60a4:	b.ne	60c8 <PySequence_Fast@plt+0x1e38>  // b.any
    60a8:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    60ac:	add	x0, x0, #0x69b
    60b0:	bl	4150 <PyUnicode_FromString@plt>
    60b4:	str	x0, [x19, #112]
    60b8:	ldr	x0, [x20]
    60bc:	add	x0, x0, #0x1
    60c0:	str	x0, [x20]
    60c4:	b	5fb8 <PySequence_Fast@plt+0x1d28>
    60c8:	mov	x0, x20
    60cc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    60d0:	add	x1, x1, #0x7c7
    60d4:	bl	4290 <PySequence_Fast@plt>
    60d8:	mov	x23, x0
    60dc:	cbz	x0, 5fb4 <PySequence_Fast@plt+0x1d24>
    60e0:	adrp	x26, a000 <PySequence_Fast@plt+0x5d70>
    60e4:	adrp	x27, a000 <PySequence_Fast@plt+0x5d70>
    60e8:	add	x28, x0, #0x18
    60ec:	add	x26, x26, #0x7f9
    60f0:	add	x27, x27, #0x69b
    60f4:	mov	x20, #0x0                   	// #0
    60f8:	ldr	x0, [x23, #16]
    60fc:	cmp	x20, x0
    6100:	b.lt	6114 <PySequence_Fast@plt+0x1e84>  // b.tstop
    6104:	mov	x0, x23
    6108:	bl	536c <PySequence_Fast@plt+0x10dc>
    610c:	ldr	x20, [x24, #3976]
    6110:	b	60b8 <PySequence_Fast@plt+0x1e28>
    6114:	ldr	x0, [x23, #8]
    6118:	ldr	x0, [x0, #168]
    611c:	tbz	w0, #25, 6168 <PySequence_Fast@plt+0x1ed8>
    6120:	ldr	x0, [x23, #24]
    6124:	ldr	x21, [x0, x20, lsl #3]
    6128:	ldr	x0, [x21, #8]
    612c:	ldr	x0, [x0, #168]
    6130:	tbz	w0, #28, 6170 <PySequence_Fast@plt+0x1ee0>
    6134:	mov	x0, x21
    6138:	bl	4110 <PyUnicode_AsUTF8@plt>
    613c:	mov	x22, x0
    6140:	cbnz	x0, 6178 <PySequence_Fast@plt+0x1ee8>
    6144:	mov	x0, x23
    6148:	bl	536c <PySequence_Fast@plt+0x10dc>
    614c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6150:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6154:	add	x1, x1, #0x7e1
    6158:	ldr	x0, [x0, #3928]
    615c:	ldr	x0, [x0]
    6160:	bl	41d0 <PyErr_Format@plt>
    6164:	b	5fb4 <PySequence_Fast@plt+0x1d24>
    6168:	ldr	x21, [x28, x20, lsl #3]
    616c:	b	6128 <PySequence_Fast@plt+0x1e98>
    6170:	tbz	w0, #27, 6144 <PySequence_Fast@plt+0x1eb4>
    6174:	add	x22, x21, #0x20
    6178:	ldr	x0, [x21]
    617c:	mov	x1, x26
    6180:	add	x0, x0, #0x1
    6184:	str	x0, [x21]
    6188:	mov	x0, x22
    618c:	bl	4040 <strcmp@plt>
    6190:	cbnz	w0, 61a8 <PySequence_Fast@plt+0x1f18>
    6194:	ldr	x0, [x19, #104]
    6198:	str	x21, [x19, #104]
    619c:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    61a0:	add	x20, x20, #0x1
    61a4:	b	60f8 <PySequence_Fast@plt+0x1e68>
    61a8:	mov	x1, x27
    61ac:	mov	x0, x22
    61b0:	bl	4040 <strcmp@plt>
    61b4:	cbnz	w0, 61c4 <PySequence_Fast@plt+0x1f34>
    61b8:	ldr	x0, [x19, #112]
    61bc:	str	x21, [x19, #112]
    61c0:	b	619c <PySequence_Fast@plt+0x1f0c>
    61c4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    61c8:	mov	x0, x22
    61cc:	add	x1, x1, #0x7ff
    61d0:	bl	4040 <strcmp@plt>
    61d4:	cbnz	w0, 620c <PySequence_Fast@plt+0x1f7c>
    61d8:	ldr	x0, [x19, #120]
    61dc:	str	x21, [x19, #120]
    61e0:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    61e4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    61e8:	adrp	x2, 9000 <PySequence_Fast@plt+0x4d70>
    61ec:	adrp	x1, 9000 <PySequence_Fast@plt+0x4d70>
    61f0:	add	x2, x2, #0x70
    61f4:	ldr	x0, [x0, #1080]
    61f8:	add	x1, x1, #0x158
    61fc:	ldr	x3, [x0, #112]
    6200:	ldr	x0, [x25, #16]
    6204:	blr	x3
    6208:	b	61a0 <PySequence_Fast@plt+0x1f10>
    620c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6210:	mov	x0, x22
    6214:	add	x1, x1, #0x808
    6218:	bl	4040 <strcmp@plt>
    621c:	cbnz	w0, 622c <PySequence_Fast@plt+0x1f9c>
    6220:	ldr	x0, [x19, #128]
    6224:	str	x21, [x19, #128]
    6228:	b	61e0 <PySequence_Fast@plt+0x1f50>
    622c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6230:	mov	x0, x22
    6234:	add	x1, x1, #0x80f
    6238:	bl	4040 <strcmp@plt>
    623c:	cbnz	w0, 626c <PySequence_Fast@plt+0x1fdc>
    6240:	ldr	x0, [x19, #136]
    6244:	str	x21, [x19, #136]
    6248:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    624c:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    6250:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    6254:	add	x1, x1, #0xd0c
    6258:	ldr	x0, [x0, #1080]
    625c:	ldr	x2, [x0, #88]
    6260:	ldr	x0, [x25, #16]
    6264:	blr	x2
    6268:	b	61a0 <PySequence_Fast@plt+0x1f10>
    626c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6270:	mov	x0, x22
    6274:	add	x1, x1, #0x817
    6278:	bl	4040 <strcmp@plt>
    627c:	cbnz	w0, 62a4 <PySequence_Fast@plt+0x2014>
    6280:	ldr	x0, [x19, #144]
    6284:	str	x21, [x19, #144]
    6288:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    628c:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    6290:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    6294:	add	x1, x1, #0xaf0
    6298:	ldr	x0, [x0, #1080]
    629c:	ldr	x2, [x0, #120]
    62a0:	b	6260 <PySequence_Fast@plt+0x1fd0>
    62a4:	mov	x0, x21
    62a8:	bl	536c <PySequence_Fast@plt+0x10dc>
    62ac:	mov	x0, x23
    62b0:	bl	536c <PySequence_Fast@plt+0x10dc>
    62b4:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    62b8:	mov	x2, x22
    62bc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    62c0:	add	x1, x1, #0x81a
    62c4:	ldr	x0, [x0, #3928]
    62c8:	ldr	x0, [x0]
    62cc:	bl	41d0 <PyErr_Format@plt>
    62d0:	b	5fb4 <PySequence_Fast@plt+0x1d24>
    62d4:	stp	x29, x30, [sp, #-48]!
    62d8:	mov	x29, sp
    62dc:	stp	x19, x20, [sp, #16]
    62e0:	str	x21, [sp, #32]
    62e4:	mov	x21, x0
    62e8:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    62ec:	add	x0, x0, #0x701
    62f0:	bl	4150 <PyUnicode_FromString@plt>
    62f4:	cbnz	x0, 6310 <PySequence_Fast@plt+0x2080>
    62f8:	mov	x19, #0x0                   	// #0
    62fc:	mov	x0, x19
    6300:	ldp	x19, x20, [sp, #16]
    6304:	ldr	x21, [sp, #32]
    6308:	ldp	x29, x30, [sp], #48
    630c:	ret
    6310:	mov	x1, x0
    6314:	mov	x20, x0
    6318:	mov	x0, x21
    631c:	bl	4280 <PyDict_GetItemWithError@plt>
    6320:	mov	x19, x0
    6324:	cbz	x0, 63b4 <PySequence_Fast@plt+0x2124>
    6328:	ldr	x1, [x0, #8]
    632c:	ldr	x1, [x1, #168]
    6330:	tbnz	w1, #29, 6360 <PySequence_Fast@plt+0x20d0>
    6334:	mov	x0, x20
    6338:	bl	536c <PySequence_Fast@plt+0x10dc>
    633c:	ldr	x0, [x19, #8]
    6340:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6344:	add	x1, x1, #0x82d
    6348:	ldr	x2, [x0, #24]
    634c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6350:	ldr	x0, [x0, #3944]
    6354:	ldr	x0, [x0]
    6358:	bl	41d0 <PyErr_Format@plt>
    635c:	b	62f8 <PySequence_Fast@plt+0x2068>
    6360:	bl	41a0 <PyDict_Copy@plt>
    6364:	mov	x19, x0
    6368:	cbnz	x0, 6398 <PySequence_Fast@plt+0x2108>
    636c:	mov	x19, #0x0                   	// #0
    6370:	mov	x0, x20
    6374:	bl	536c <PySequence_Fast@plt+0x10dc>
    6378:	cbz	x19, 62f8 <PySequence_Fast@plt+0x2068>
    637c:	mov	x1, x21
    6380:	mov	x0, x19
    6384:	bl	3f70 <PyDict_Update@plt>
    6388:	tbz	w0, #31, 62fc <PySequence_Fast@plt+0x206c>
    638c:	mov	x0, x19
    6390:	bl	536c <PySequence_Fast@plt+0x10dc>
    6394:	b	62f8 <PySequence_Fast@plt+0x2068>
    6398:	mov	x1, x20
    639c:	mov	x0, x21
    63a0:	bl	3fc0 <PyDict_DelItem@plt>
    63a4:	tbz	w0, #31, 6370 <PySequence_Fast@plt+0x20e0>
    63a8:	mov	x0, x19
    63ac:	bl	536c <PySequence_Fast@plt+0x10dc>
    63b0:	b	636c <PySequence_Fast@plt+0x20dc>
    63b4:	bl	3fd0 <PyErr_Occurred@plt>
    63b8:	cbnz	x0, 636c <PySequence_Fast@plt+0x20dc>
    63bc:	bl	40d0 <PyDict_New@plt>
    63c0:	mov	x19, x0
    63c4:	b	6370 <PySequence_Fast@plt+0x20e0>
    63c8:	stp	x29, x30, [sp, #-64]!
    63cc:	mov	x29, sp
    63d0:	str	x21, [sp, #32]
    63d4:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x11c04>
    63d8:	add	x4, sp, #0x38
    63dc:	stp	x19, x20, [sp, #16]
    63e0:	mov	x20, x0
    63e4:	ldr	x3, [x21, #3992]
    63e8:	mov	x0, x1
    63ec:	mov	x19, x2
    63f0:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    63f4:	add	x2, sp, #0x30
    63f8:	add	x1, x1, #0x84d
    63fc:	str	xzr, [sp, #56]
    6400:	bl	4060 <_PyArg_ParseTuple_SizeT@plt>
    6404:	cbnz	w0, 641c <PySequence_Fast@plt+0x218c>
    6408:	mov	w0, #0xffffffff            	// #-1
    640c:	ldp	x19, x20, [sp, #16]
    6410:	ldr	x21, [sp, #32]
    6414:	ldp	x29, x30, [sp], #64
    6418:	ret
    641c:	ldr	x0, [sp, #56]
    6420:	cbz	x0, 64b8 <PySequence_Fast@plt+0x2228>
    6424:	bl	41a0 <PyDict_Copy@plt>
    6428:	str	x0, [sp, #56]
    642c:	cbz	x0, 6408 <PySequence_Fast@plt+0x2178>
    6430:	cbnz	x19, 64a0 <PySequence_Fast@plt+0x2210>
    6434:	ldr	x1, [sp, #56]
    6438:	cbnz	x1, 64d0 <PySequence_Fast@plt+0x2240>
    643c:	ldr	x0, [sp, #56]
    6440:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6444:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    6448:	ldr	x1, [sp, #48]
    644c:	ldr	x0, [x1]
    6450:	add	x0, x0, #0x1
    6454:	str	x0, [x1]
    6458:	ldr	x0, [x20, #16]
    645c:	str	x1, [x20, #16]
    6460:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    6464:	ldr	x19, [x19, #3976]
    6468:	mov	x1, x19
    646c:	ldr	x0, [x19]
    6470:	add	x0, x0, #0x1
    6474:	str	x0, [x19]
    6478:	add	x0, x20, #0x18
    647c:	bl	574c <PySequence_Fast@plt+0x14bc>
    6480:	ldr	x0, [x19]
    6484:	mov	x1, x19
    6488:	add	x0, x0, #0x1
    648c:	str	x0, [x19]
    6490:	add	x0, x20, #0x20
    6494:	bl	574c <PySequence_Fast@plt+0x14bc>
    6498:	mov	w0, #0x0                   	// #0
    649c:	b	640c <PySequence_Fast@plt+0x217c>
    64a0:	mov	x1, x19
    64a4:	bl	3f70 <PyDict_Update@plt>
    64a8:	tbz	w0, #31, 6434 <PySequence_Fast@plt+0x21a4>
    64ac:	ldr	x0, [sp, #56]
    64b0:	bl	536c <PySequence_Fast@plt+0x10dc>
    64b4:	b	6408 <PySequence_Fast@plt+0x2178>
    64b8:	cbz	x19, 6434 <PySequence_Fast@plt+0x21a4>
    64bc:	mov	x0, x19
    64c0:	bl	62d4 <PySequence_Fast@plt+0x2044>
    64c4:	str	x0, [sp, #56]
    64c8:	cbnz	x0, 6434 <PySequence_Fast@plt+0x21a4>
    64cc:	b	6408 <PySequence_Fast@plt+0x2178>
    64d0:	ldr	x0, [x21, #3992]
    64d4:	ldr	x2, [x1, #8]
    64d8:	cmp	x2, x0
    64dc:	b.ne	64e8 <PySequence_Fast@plt+0x2258>  // b.any
    64e0:	ldr	x0, [x1, #16]
    64e4:	cbz	x0, 643c <PySequence_Fast@plt+0x21ac>
    64e8:	add	x0, x20, #0x28
    64ec:	bl	5070 <PySequence_Fast@plt+0xde0>
    64f0:	tbz	w0, #31, 643c <PySequence_Fast@plt+0x21ac>
    64f4:	b	64ac <PySequence_Fast@plt+0x221c>
    64f8:	stp	x29, x30, [sp, #-48]!
    64fc:	mov	x29, sp
    6500:	stp	x19, x20, [sp, #16]
    6504:	mov	x20, x0
    6508:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    650c:	add	x0, x0, #0x328
    6510:	stp	x21, x22, [sp, #32]
    6514:	add	x0, x0, #0x340
    6518:	mov	x21, x1
    651c:	mov	w22, w2
    6520:	bl	3e30 <_PyObject_GC_New@plt>
    6524:	mov	x19, x0
    6528:	cbz	x0, 6574 <PySequence_Fast@plt+0x22e4>
    652c:	ldr	x1, [x21]
    6530:	add	x1, x1, #0x1
    6534:	str	x1, [x21]
    6538:	ldr	x1, [x20]
    653c:	str	x21, [x0, #48]
    6540:	str	w22, [x0, #56]
    6544:	add	x1, x1, #0x1
    6548:	str	x1, [x20]
    654c:	str	x20, [x0, #40]
    6550:	bl	3e00 <PyObject_GC_Track@plt>
    6554:	mov	x0, #0x80                  	// #128
    6558:	bl	4240 <PyMem_Malloc@plt>
    655c:	str	x0, [x19, #16]
    6560:	cbnz	x0, 6588 <PySequence_Fast@plt+0x22f8>
    6564:	mov	x0, x19
    6568:	mov	x19, #0x0                   	// #0
    656c:	bl	536c <PySequence_Fast@plt+0x10dc>
    6570:	bl	3dc0 <PyErr_NoMemory@plt>
    6574:	mov	x0, x19
    6578:	ldp	x19, x20, [sp, #16]
    657c:	ldp	x21, x22, [sp, #32]
    6580:	ldp	x29, x30, [sp], #48
    6584:	ret
    6588:	mov	x0, #0x8                   	// #8
    658c:	stp	xzr, x0, [x19, #24]
    6590:	b	6574 <PySequence_Fast@plt+0x22e4>
    6594:	stp	x29, x30, [sp, #-32]!
    6598:	mov	x29, sp
    659c:	stp	x19, x20, [sp, #16]
    65a0:	mov	x20, x0
    65a4:	mov	x19, x1
    65a8:	ldr	x0, [x1, #8]
    65ac:	ldr	x0, [x0, #168]
    65b0:	tbz	w0, #28, 6694 <PySequence_Fast@plt+0x2404>
    65b4:	ldrsb	w0, [x1, #32]
    65b8:	tbz	w0, #31, 6620 <PySequence_Fast@plt+0x2390>
    65bc:	ldr	x0, [x19, #16]
    65c0:	cmp	x0, #0x1
    65c4:	b.ne	6608 <PySequence_Fast@plt+0x2378>  // b.any
    65c8:	ldrb	w3, [x19, #32]
    65cc:	and	w1, w3, #0x1c
    65d0:	and	w0, w3, #0x20
    65d4:	cmp	w1, #0x4
    65d8:	b.ne	6644 <PySequence_Fast@plt+0x23b4>  // b.any
    65dc:	cbz	w0, 663c <PySequence_Fast@plt+0x23ac>
    65e0:	add	x1, x19, #0x30
    65e4:	add	x2, x19, #0x48
    65e8:	tst	x3, #0x40
    65ec:	csel	x1, x2, x1, eq  // eq = none
    65f0:	ldrb	w0, [x1]
    65f4:	cmp	w0, #0x2a
    65f8:	cset	w0, eq  // eq = none
    65fc:	cbz	w0, 6608 <PySequence_Fast@plt+0x2378>
    6600:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6604:	ldr	x19, [x19, #3976]
    6608:	mov	x1, x19
    660c:	mov	x0, x20
    6610:	mov	w2, #0x0                   	// #0
    6614:	ldp	x19, x20, [sp, #16]
    6618:	ldp	x29, x30, [sp], #32
    661c:	b	64f8 <PySequence_Fast@plt+0x2268>
    6620:	mov	x0, x1
    6624:	bl	3ca0 <_PyUnicode_Ready@plt>
    6628:	tbz	w0, #31, 65bc <PySequence_Fast@plt+0x232c>
    662c:	mov	x0, #0x0                   	// #0
    6630:	ldp	x19, x20, [sp, #16]
    6634:	ldp	x29, x30, [sp], #32
    6638:	ret
    663c:	ldr	x1, [x19, #72]
    6640:	b	65f0 <PySequence_Fast@plt+0x2360>
    6644:	cmp	w1, #0x8
    6648:	b.ne	6670 <PySequence_Fast@plt+0x23e0>  // b.any
    664c:	cbz	w0, 6668 <PySequence_Fast@plt+0x23d8>
    6650:	add	x1, x19, #0x30
    6654:	add	x2, x19, #0x48
    6658:	tst	x3, #0x40
    665c:	csel	x1, x2, x1, eq  // eq = none
    6660:	ldrh	w0, [x1]
    6664:	b	65f4 <PySequence_Fast@plt+0x2364>
    6668:	ldr	x1, [x19, #72]
    666c:	b	6660 <PySequence_Fast@plt+0x23d0>
    6670:	cbz	w0, 668c <PySequence_Fast@plt+0x23fc>
    6674:	add	x1, x19, #0x30
    6678:	add	x2, x19, #0x48
    667c:	tst	x3, #0x40
    6680:	csel	x1, x2, x1, eq  // eq = none
    6684:	ldr	w0, [x1]
    6688:	b	65f4 <PySequence_Fast@plt+0x2364>
    668c:	ldr	x1, [x19, #72]
    6690:	b	6684 <PySequence_Fast@plt+0x23f4>
    6694:	tbz	w0, #27, 6608 <PySequence_Fast@plt+0x2378>
    6698:	ldr	x0, [x1, #16]
    669c:	cmp	x0, #0x1
    66a0:	b.ne	6608 <PySequence_Fast@plt+0x2378>  // b.any
    66a4:	ldrb	w0, [x1, #32]
    66a8:	cmp	w0, #0x2a
    66ac:	b.ne	6608 <PySequence_Fast@plt+0x2378>  // b.any
    66b0:	b	6600 <PySequence_Fast@plt+0x2370>
    66b4:	sub	sp, sp, #0x40
    66b8:	stp	x29, x30, [sp, #16]
    66bc:	add	x29, sp, #0x10
    66c0:	stp	x19, x20, [sp, #32]
    66c4:	mov	x20, x0
    66c8:	mov	x0, x1
    66cc:	mov	x1, x2
    66d0:	cbz	x3, 672c <PySequence_Fast@plt+0x249c>
    66d4:	ldr	x2, [x3, #16]
    66d8:	add	x19, x2, x1
    66dc:	cbnz	x3, 66ec <PySequence_Fast@plt+0x245c>
    66e0:	cmp	x0, #0x0
    66e4:	ccmp	x1, #0x1, #0x2, ne  // ne = any
    66e8:	b.ls	6734 <PySequence_Fast@plt+0x24a4>  // b.plast
    66ec:	add	x2, sp, #0x38
    66f0:	str	x2, [sp]
    66f4:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x12c04>
    66f8:	add	x4, x4, #0x9c0
    66fc:	add	x4, x4, #0x158
    6700:	mov	w7, #0x0                   	// #0
    6704:	mov	w6, #0x1                   	// #1
    6708:	mov	w5, #0x0                   	// #0
    670c:	mov	x2, #0x0                   	// #0
    6710:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    6714:	cbnz	x0, 6734 <PySequence_Fast@plt+0x24a4>
    6718:	mov	x0, #0x0                   	// #0
    671c:	ldp	x29, x30, [sp, #16]
    6720:	ldp	x19, x20, [sp, #32]
    6724:	add	sp, sp, #0x40
    6728:	ret
    672c:	mov	x2, #0x0                   	// #0
    6730:	b	66d8 <PySequence_Fast@plt+0x2448>
    6734:	cbz	x19, 676c <PySequence_Fast@plt+0x24dc>
    6738:	ldr	x19, [x0]
    673c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6740:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6744:	mov	x2, #0x1                   	// #1
    6748:	ldr	x0, [x0, #3936]
    674c:	add	x1, x1, #0x85a
    6750:	ldr	x0, [x0]
    6754:	bl	3da0 <PyErr_WarnEx@plt>
    6758:	tbnz	w0, #31, 6718 <PySequence_Fast@plt+0x2488>
    675c:	mov	x1, x19
    6760:	mov	x0, x20
    6764:	bl	6594 <PySequence_Fast@plt+0x2304>
    6768:	b	671c <PySequence_Fast@plt+0x248c>
    676c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6770:	ldr	x19, [x19, #3976]
    6774:	b	673c <PySequence_Fast@plt+0x24ac>
    6778:	sub	sp, sp, #0x40
    677c:	stp	x29, x30, [sp, #16]
    6780:	add	x29, sp, #0x10
    6784:	stp	x19, x20, [sp, #32]
    6788:	mov	x20, x0
    678c:	mov	x0, x1
    6790:	mov	x1, x2
    6794:	cbz	x3, 67fc <PySequence_Fast@plt+0x256c>
    6798:	ldr	x2, [x3, #16]
    679c:	add	x19, x2, x1
    67a0:	cbnz	x3, 67b0 <PySequence_Fast@plt+0x2520>
    67a4:	cmp	x0, #0x0
    67a8:	ccmp	x1, #0x1, #0x2, ne  // ne = any
    67ac:	b.ls	67dc <PySequence_Fast@plt+0x254c>  // b.plast
    67b0:	add	x2, sp, #0x38
    67b4:	str	x2, [sp]
    67b8:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x12c04>
    67bc:	add	x4, x4, #0x9c0
    67c0:	add	x4, x4, #0x198
    67c4:	mov	w7, #0x0                   	// #0
    67c8:	mov	w6, #0x1                   	// #1
    67cc:	mov	w5, #0x0                   	// #0
    67d0:	mov	x2, #0x0                   	// #0
    67d4:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    67d8:	cbz	x0, 67ec <PySequence_Fast@plt+0x255c>
    67dc:	cbz	x19, 6804 <PySequence_Fast@plt+0x2574>
    67e0:	ldr	x1, [x0]
    67e4:	mov	x0, x20
    67e8:	bl	6594 <PySequence_Fast@plt+0x2304>
    67ec:	ldp	x29, x30, [sp, #16]
    67f0:	ldp	x19, x20, [sp, #32]
    67f4:	add	sp, sp, #0x40
    67f8:	ret
    67fc:	mov	x2, #0x0                   	// #0
    6800:	b	679c <PySequence_Fast@plt+0x250c>
    6804:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6808:	ldr	x1, [x1, #3976]
    680c:	b	67e4 <PySequence_Fast@plt+0x2554>
    6810:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6814:	mov	w2, #0x1                   	// #1
    6818:	ldr	x1, [x1, #3976]
    681c:	b	64f8 <PySequence_Fast@plt+0x2268>
    6820:	sub	sp, sp, #0x60
    6824:	stp	x29, x30, [sp, #16]
    6828:	add	x29, sp, #0x10
    682c:	stp	x19, x20, [sp, #32]
    6830:	stp	x21, x22, [sp, #48]
    6834:	mov	x21, x0
    6838:	mov	x0, x1
    683c:	str	x23, [sp, #64]
    6840:	mov	x1, x2
    6844:	cbz	x3, 6898 <PySequence_Fast@plt+0x2608>
    6848:	ldr	x2, [x3, #16]
    684c:	add	x20, x2, x1
    6850:	cmp	x3, #0x0
    6854:	sub	x2, x1, #0x1
    6858:	ccmp	x2, #0x1, #0x2, eq  // eq = none
    685c:	adrp	x19, 1d000 <PyInit__elementtree@@Base+0x12c04>
    6860:	b.hi	6868 <PySequence_Fast@plt+0x25d8>  // b.pmore
    6864:	cbnz	x0, 68a0 <PySequence_Fast@plt+0x2610>
    6868:	add	x2, sp, #0x50
    686c:	str	x2, [sp]
    6870:	add	x4, x19, #0x9c0
    6874:	mov	w7, #0x0                   	// #0
    6878:	add	x4, x4, #0x1d8
    687c:	mov	w6, #0x2                   	// #2
    6880:	mov	w5, #0x1                   	// #1
    6884:	mov	x2, #0x0                   	// #0
    6888:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    688c:	cbnz	x0, 68a0 <PySequence_Fast@plt+0x2610>
    6890:	mov	x19, #0x0                   	// #0
    6894:	b	6904 <PySequence_Fast@plt+0x2674>
    6898:	mov	x2, #0x0                   	// #0
    689c:	b	684c <PySequence_Fast@plt+0x25bc>
    68a0:	cmp	x20, #0x1
    68a4:	ldr	x22, [x0]
    68a8:	b.eq	6920 <PySequence_Fast@plt+0x2690>  // b.none
    68ac:	ldr	x20, [x0, #8]
    68b0:	add	x0, x19, #0x9c0
    68b4:	add	x0, x0, #0x40
    68b8:	bl	4010 <PyState_FindModule@plt>
    68bc:	bl	3e50 <PyModule_GetState@plt>
    68c0:	mov	x7, x0
    68c4:	mov	x0, x22
    68c8:	bl	43b4 <PySequence_Fast@plt+0x124>
    68cc:	cbnz	w0, 68e0 <PySequence_Fast@plt+0x2650>
    68d0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    68d4:	ldr	x0, [x0, #3976]
    68d8:	cmp	x20, x0
    68dc:	b.eq	692c <PySequence_Fast@plt+0x269c>  // b.none
    68e0:	ldr	x0, [x7, #16]
    68e4:	add	x1, x19, #0x9c0
    68e8:	mov	x4, x20
    68ec:	mov	x3, x22
    68f0:	mov	x2, x21
    68f4:	add	x1, x1, #0x218
    68f8:	mov	x5, #0x0                   	// #0
    68fc:	bl	4160 <_PyObject_CallMethodIdObjArgs@plt>
    6900:	mov	x19, x0
    6904:	mov	x0, x19
    6908:	ldp	x29, x30, [sp, #16]
    690c:	ldp	x19, x20, [sp, #32]
    6910:	ldp	x21, x22, [sp, #48]
    6914:	ldr	x23, [sp, #64]
    6918:	add	sp, sp, #0x60
    691c:	ret
    6920:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6924:	ldr	x20, [x20, #3976]
    6928:	b	68b0 <PySequence_Fast@plt+0x2620>
    692c:	mov	x0, #0x0                   	// #0
    6930:	bl	3c90 <PyList_New@plt>
    6934:	mov	x19, x0
    6938:	cbz	x0, 6890 <PySequence_Fast@plt+0x2600>
    693c:	ldr	x0, [x21, #40]
    6940:	cbz	x0, 6904 <PySequence_Fast@plt+0x2674>
    6944:	mov	x23, #0x0                   	// #0
    6948:	ldr	x0, [x21, #40]
    694c:	ldr	x1, [x0, #8]
    6950:	cmp	x23, x1
    6954:	b.ge	6904 <PySequence_Fast@plt+0x2674>  // b.tcont
    6958:	ldr	x0, [x0, #24]
    695c:	mov	x1, x22
    6960:	mov	w2, #0x2                   	// #2
    6964:	ldr	x20, [x0, x23, lsl #3]
    6968:	ldr	x0, [x20]
    696c:	add	x0, x0, #0x1
    6970:	str	x0, [x20]
    6974:	ldr	x0, [x20, #16]
    6978:	bl	3f10 <PyObject_RichCompareBool@plt>
    697c:	cmp	w0, #0x0
    6980:	cbz	w0, 69ac <PySequence_Fast@plt+0x271c>
    6984:	b.ge	699c <PySequence_Fast@plt+0x270c>  // b.tcont
    6988:	mov	x0, x20
    698c:	bl	536c <PySequence_Fast@plt+0x10dc>
    6990:	mov	x0, x19
    6994:	bl	536c <PySequence_Fast@plt+0x10dc>
    6998:	b	6890 <PySequence_Fast@plt+0x2600>
    699c:	mov	x1, x20
    69a0:	mov	x0, x19
    69a4:	bl	3f50 <PyList_Append@plt>
    69a8:	tbnz	w0, #31, 6988 <PySequence_Fast@plt+0x26f8>
    69ac:	mov	x0, x20
    69b0:	add	x23, x23, #0x1
    69b4:	bl	536c <PySequence_Fast@plt+0x10dc>
    69b8:	b	6948 <PySequence_Fast@plt+0x26b8>
    69bc:	sub	sp, sp, #0x70
    69c0:	stp	x29, x30, [sp, #16]
    69c4:	add	x29, sp, #0x10
    69c8:	stp	x19, x20, [sp, #32]
    69cc:	stp	x21, x22, [sp, #48]
    69d0:	mov	x21, x0
    69d4:	mov	x0, x1
    69d8:	stp	x23, x24, [sp, #64]
    69dc:	mov	x1, x2
    69e0:	str	x25, [sp, #80]
    69e4:	cbz	x3, 6a54 <PySequence_Fast@plt+0x27c4>
    69e8:	ldr	x2, [x3, #16]
    69ec:	add	x19, x2, x1
    69f0:	cmp	x3, #0x0
    69f4:	sub	x2, x1, #0x1
    69f8:	ccmp	x2, #0x1, #0x2, eq  // eq = none
    69fc:	adrp	x20, 1d000 <PyInit__elementtree@@Base+0x12c04>
    6a00:	b.hi	6a08 <PySequence_Fast@plt+0x2778>  // b.pmore
    6a04:	cbnz	x0, 6a5c <PySequence_Fast@plt+0x27cc>
    6a08:	add	x2, sp, #0x60
    6a0c:	str	x2, [sp]
    6a10:	add	x4, x20, #0x9c0
    6a14:	mov	w7, #0x0                   	// #0
    6a18:	add	x4, x4, #0x230
    6a1c:	mov	w6, #0x2                   	// #2
    6a20:	mov	w5, #0x1                   	// #1
    6a24:	mov	x2, #0x0                   	// #0
    6a28:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    6a2c:	cbnz	x0, 6a5c <PySequence_Fast@plt+0x27cc>
    6a30:	mov	x19, #0x0                   	// #0
    6a34:	mov	x0, x19
    6a38:	ldp	x29, x30, [sp, #16]
    6a3c:	ldp	x19, x20, [sp, #32]
    6a40:	ldp	x21, x22, [sp, #48]
    6a44:	ldp	x23, x24, [sp, #64]
    6a48:	ldr	x25, [sp, #80]
    6a4c:	add	sp, sp, #0x70
    6a50:	ret
    6a54:	mov	x2, #0x0                   	// #0
    6a58:	b	69ec <PySequence_Fast@plt+0x275c>
    6a5c:	cmp	x19, #0x1
    6a60:	ldr	x25, [x0]
    6a64:	b.eq	6ac8 <PySequence_Fast@plt+0x2838>  // b.none
    6a68:	ldr	x19, [x0, #8]
    6a6c:	add	x0, x20, #0x9c0
    6a70:	add	x0, x0, #0x40
    6a74:	bl	4010 <PyState_FindModule@plt>
    6a78:	bl	3e50 <PyModule_GetState@plt>
    6a7c:	mov	x7, x0
    6a80:	mov	x0, x25
    6a84:	bl	43b4 <PySequence_Fast@plt+0x124>
    6a88:	cbnz	w0, 6aa0 <PySequence_Fast@plt+0x2810>
    6a8c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6a90:	mov	x22, x0
    6a94:	ldr	x1, [x0, #3976]
    6a98:	cmp	x19, x1
    6a9c:	b.eq	6ad4 <PySequence_Fast@plt+0x2844>  // b.none
    6aa0:	ldr	x0, [x7, #16]
    6aa4:	add	x1, x20, #0x9c0
    6aa8:	mov	x4, x19
    6aac:	mov	x3, x25
    6ab0:	mov	x2, x21
    6ab4:	add	x1, x1, #0x270
    6ab8:	mov	x5, #0x0                   	// #0
    6abc:	bl	4160 <_PyObject_CallMethodIdObjArgs@plt>
    6ac0:	mov	x19, x0
    6ac4:	b	6a34 <PySequence_Fast@plt+0x27a4>
    6ac8:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6acc:	ldr	x19, [x19, #3976]
    6ad0:	b	6a6c <PySequence_Fast@plt+0x27dc>
    6ad4:	ldr	x0, [x21, #40]
    6ad8:	cbnz	x0, 6b50 <PySequence_Fast@plt+0x28c0>
    6adc:	ldr	x0, [x19]
    6ae0:	add	x0, x0, #0x1
    6ae4:	str	x0, [x19]
    6ae8:	b	6a34 <PySequence_Fast@plt+0x27a4>
    6aec:	ldr	x0, [x0, #24]
    6af0:	mov	x1, x25
    6af4:	mov	w2, #0x2                   	// #2
    6af8:	ldr	x20, [x0, x23, lsl #3]
    6afc:	ldr	x0, [x20]
    6b00:	add	x0, x0, #0x1
    6b04:	str	x0, [x20]
    6b08:	ldr	x0, [x20, #16]
    6b0c:	bl	3f10 <PyObject_RichCompareBool@plt>
    6b10:	mov	w24, w0
    6b14:	cmp	w0, #0x0
    6b18:	b.gt	6b58 <PySequence_Fast@plt+0x28c8>
    6b1c:	mov	x0, x20
    6b20:	bl	536c <PySequence_Fast@plt+0x10dc>
    6b24:	cbnz	w24, 6a30 <PySequence_Fast@plt+0x27a0>
    6b28:	add	x23, x23, #0x1
    6b2c:	ldr	x0, [x21, #40]
    6b30:	ldr	x1, [x0, #8]
    6b34:	cmp	x23, x1
    6b38:	b.lt	6aec <PySequence_Fast@plt+0x285c>  // b.tstop
    6b3c:	ldr	x0, [x22, #3976]
    6b40:	ldr	x1, [x0]
    6b44:	add	x1, x1, #0x1
    6b48:	str	x1, [x0]
    6b4c:	b	6a34 <PySequence_Fast@plt+0x27a4>
    6b50:	mov	x23, #0x0                   	// #0
    6b54:	b	6b2c <PySequence_Fast@plt+0x289c>
    6b58:	mov	x19, x20
    6b5c:	b	6a34 <PySequence_Fast@plt+0x27a4>
    6b60:	stp	x29, x30, [sp, #-112]!
    6b64:	mov	x29, sp
    6b68:	stp	x19, x20, [sp, #16]
    6b6c:	mov	x19, x1
    6b70:	ldr	x1, [x1, #8]
    6b74:	stp	x21, x22, [sp, #32]
    6b78:	mov	x21, x0
    6b7c:	stp	x23, x24, [sp, #48]
    6b80:	mov	x22, x2
    6b84:	ldr	x0, [x1, #96]
    6b88:	stp	x25, x26, [sp, #64]
    6b8c:	cbz	x0, 6c04 <PySequence_Fast@plt+0x2974>
    6b90:	ldr	x0, [x0, #264]
    6b94:	cbz	x0, 6c04 <PySequence_Fast@plt+0x2974>
    6b98:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6b9c:	ldr	x0, [x0, #3984]
    6ba0:	ldr	x1, [x0]
    6ba4:	mov	x0, x19
    6ba8:	bl	3d00 <PyNumber_AsSsize_t@plt>
    6bac:	mov	x19, x0
    6bb0:	cmn	x0, #0x1
    6bb4:	b.ne	6bf0 <PySequence_Fast@plt+0x2960>  // b.any
    6bb8:	bl	3fd0 <PyErr_Occurred@plt>
    6bbc:	cbnz	x0, 6fdc <PySequence_Fast@plt+0x2d4c>
    6bc0:	ldr	x0, [x21, #40]
    6bc4:	cbnz	x0, 6bf8 <PySequence_Fast@plt+0x2968>
    6bc8:	mov	x2, x22
    6bcc:	mov	x1, x19
    6bd0:	mov	x0, x21
    6bd4:	bl	58bc <PySequence_Fast@plt+0x162c>
    6bd8:	ldp	x19, x20, [sp, #16]
    6bdc:	ldp	x21, x22, [sp, #32]
    6be0:	ldp	x23, x24, [sp, #48]
    6be4:	ldp	x25, x26, [sp, #64]
    6be8:	ldp	x29, x30, [sp], #112
    6bec:	ret
    6bf0:	tbz	x0, #63, 6bc8 <PySequence_Fast@plt+0x2938>
    6bf4:	b	6bc0 <PySequence_Fast@plt+0x2930>
    6bf8:	ldr	x0, [x0, #8]
    6bfc:	add	x19, x19, x0
    6c00:	b	6bc8 <PySequence_Fast@plt+0x2938>
    6c04:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6c08:	ldr	x0, [x0, #3952]
    6c0c:	cmp	x1, x0
    6c10:	b.ne	6fc0 <PySequence_Fast@plt+0x2d30>  // b.any
    6c14:	ldr	x0, [x21, #40]
    6c18:	cbz	x0, 6c44 <PySequence_Fast@plt+0x29b4>
    6c1c:	add	x23, sp, #0x60
    6c20:	add	x20, sp, #0x58
    6c24:	add	x3, sp, #0x68
    6c28:	mov	x2, x23
    6c2c:	mov	x1, x20
    6c30:	mov	x0, x19
    6c34:	bl	4180 <PySlice_Unpack@plt>
    6c38:	tbz	w0, #31, 6c58 <PySequence_Fast@plt+0x29c8>
    6c3c:	mov	w0, #0xffffffff            	// #-1
    6c40:	b	6bd8 <PySequence_Fast@plt+0x2948>
    6c44:	add	x0, x21, #0x28
    6c48:	mov	x1, #0x0                   	// #0
    6c4c:	bl	5070 <PySequence_Fast@plt+0xde0>
    6c50:	tbz	w0, #31, 6c1c <PySequence_Fast@plt+0x298c>
    6c54:	b	6c3c <PySequence_Fast@plt+0x29ac>
    6c58:	ldr	x0, [x21, #40]
    6c5c:	mov	x2, x23
    6c60:	ldr	x3, [sp, #104]
    6c64:	mov	x1, x20
    6c68:	ldr	x0, [x0, #8]
    6c6c:	bl	3f60 <PySlice_AdjustIndices@plt>
    6c70:	mov	x19, x0
    6c74:	cbnz	x22, 6d74 <PySequence_Fast@plt+0x2ae4>
    6c78:	cmp	x0, #0x0
    6c7c:	b.le	6d18 <PySequence_Fast@plt+0x2a88>
    6c80:	ldr	x0, [sp, #104]
    6c84:	tbz	x0, #63, 6ca8 <PySequence_Fast@plt+0x2a18>
    6c88:	ldr	x2, [sp, #88]
    6c8c:	add	x1, x2, #0x1
    6c90:	str	x1, [sp, #96]
    6c94:	sub	x1, x19, #0x1
    6c98:	madd	x1, x1, x0, x2
    6c9c:	neg	x0, x0
    6ca0:	str	x1, [sp, #88]
    6ca4:	str	x0, [sp, #104]
    6ca8:	mov	x0, x19
    6cac:	bl	3c90 <PyList_New@plt>
    6cb0:	mov	x22, x0
    6cb4:	cbz	x0, 6c3c <PySequence_Fast@plt+0x29ac>
    6cb8:	ldr	x20, [sp, #88]
    6cbc:	mov	x23, #0x0                   	// #0
    6cc0:	ldp	x0, x1, [sp, #96]
    6cc4:	ldr	x3, [x21, #40]
    6cc8:	cmp	x0, x20
    6ccc:	ldr	x2, [x3, #8]
    6cd0:	b.hi	6d20 <PySequence_Fast@plt+0x2a90>  // b.pmore
    6cd4:	ldr	x0, [sp, #88]
    6cd8:	madd	x1, x19, x1, x0
    6cdc:	cmp	x1, x2
    6ce0:	b.cs	6d00 <PySequence_Fast@plt+0x2a70>  // b.hs, b.nlast
    6ce4:	ldr	x0, [x3, #24]
    6ce8:	sub	x3, x1, x19
    6cec:	sub	x2, x2, x1
    6cf0:	add	x1, x0, x1, lsl #3
    6cf4:	lsl	x2, x2, #3
    6cf8:	add	x0, x0, x3, lsl #3
    6cfc:	bl	3c80 <memmove@plt>
    6d00:	ldr	x1, [x21, #40]
    6d04:	ldr	x0, [x1, #8]
    6d08:	sub	x0, x0, x19
    6d0c:	str	x0, [x1, #8]
    6d10:	mov	x0, x22
    6d14:	bl	536c <PySequence_Fast@plt+0x10dc>
    6d18:	mov	w0, #0x0                   	// #0
    6d1c:	b	6bd8 <PySequence_Fast@plt+0x2948>
    6d20:	add	x4, x20, x1
    6d24:	sub	x0, x2, #0x1
    6d28:	cmp	x4, x2
    6d2c:	sub	x0, x0, x20
    6d30:	sub	x1, x1, #0x1
    6d34:	lsl	x2, x20, #3
    6d38:	csel	x1, x0, x1, cs  // cs = hs, nlast
    6d3c:	ldr	x0, [x3, #24]
    6d40:	ldr	x3, [x22, #24]
    6d44:	ldr	x4, [x0, x2]
    6d48:	str	x4, [x3, x23, lsl #3]
    6d4c:	sub	x4, x20, x23
    6d50:	add	x3, x2, #0x8
    6d54:	lsl	x2, x1, #3
    6d58:	add	x1, x0, x3
    6d5c:	add	x0, x0, x4, lsl #3
    6d60:	add	x23, x23, #0x1
    6d64:	bl	3c80 <memmove@plt>
    6d68:	ldr	x0, [sp, #104]
    6d6c:	add	x20, x20, x0
    6d70:	b	6cc0 <PySequence_Fast@plt+0x2a30>
    6d74:	mov	x0, x22
    6d78:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6d7c:	add	x1, x1, #0x779
    6d80:	bl	4290 <PySequence_Fast@plt>
    6d84:	mov	x20, x0
    6d88:	cbnz	x0, 6db0 <PySequence_Fast@plt+0x2b20>
    6d8c:	ldr	x0, [x22, #8]
    6d90:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6d94:	add	x1, x1, #0x75a
    6d98:	ldr	x2, [x0, #24]
    6d9c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6da0:	ldr	x0, [x0, #3944]
    6da4:	ldr	x0, [x0]
    6da8:	bl	41d0 <PyErr_Format@plt>
    6dac:	b	6c3c <PySequence_Fast@plt+0x29ac>
    6db0:	ldr	x1, [sp, #104]
    6db4:	ldr	x22, [x0, #16]
    6db8:	cmp	x1, #0x1
    6dbc:	b.eq	6eb4 <PySequence_Fast@plt+0x2c24>  // b.none
    6dc0:	cmp	x19, x22
    6dc4:	b.ne	6e8c <PySequence_Fast@plt+0x2bfc>  // b.any
    6dc8:	adrp	x24, 1d000 <PyInit__elementtree@@Base+0x12c04>
    6dcc:	add	x26, x20, #0x18
    6dd0:	add	x24, x24, #0x328
    6dd4:	mov	x23, #0x0                   	// #0
    6dd8:	cmp	x23, x22
    6ddc:	b.lt	6ed8 <PySequence_Fast@plt+0x2c48>  // b.tstop
    6de0:	cmp	x19, #0x0
    6de4:	b.le	6f20 <PySequence_Fast@plt+0x2c90>
    6de8:	mov	x0, x19
    6dec:	bl	3c90 <PyList_New@plt>
    6df0:	mov	x23, x0
    6df4:	cbz	x0, 6ecc <PySequence_Fast@plt+0x2c3c>
    6df8:	ldr	x0, [x21, #40]
    6dfc:	ldr	x2, [sp, #104]
    6e00:	ldr	x1, [x0, #24]
    6e04:	ldr	x0, [sp, #88]
    6e08:	lsl	x2, x2, #3
    6e0c:	ldr	x3, [x23, #24]
    6e10:	add	x0, x1, x0, lsl #3
    6e14:	mov	x1, #0x0                   	// #0
    6e18:	ldr	x4, [x0]
    6e1c:	str	x4, [x3, x1, lsl #3]
    6e20:	add	x1, x1, #0x1
    6e24:	add	x0, x0, x2
    6e28:	cmp	x19, x1
    6e2c:	b.ne	6e18 <PySequence_Fast@plt+0x2b88>  // b.any
    6e30:	cmp	x19, x22
    6e34:	ldr	x1, [x21, #40]
    6e38:	b.le	6f44 <PySequence_Fast@plt+0x2cb4>
    6e3c:	sub	x3, x22, x19
    6e40:	ldr	x5, [x1, #8]
    6e44:	lsl	x3, x3, #3
    6e48:	ldr	x0, [sp, #96]
    6e4c:	cmp	x5, x0
    6e50:	b.gt	6f28 <PySequence_Fast@plt+0x2c98>
    6e54:	ldr	x3, [sp, #88]
    6e58:	add	x5, x20, #0x18
    6e5c:	mov	x0, #0x0                   	// #0
    6e60:	cmp	x0, x22
    6e64:	b.lt	6f80 <PySequence_Fast@plt+0x2cf0>  // b.tstop
    6e68:	ldr	x0, [x1, #8]
    6e6c:	sub	x0, x0, x19
    6e70:	add	x0, x0, x22
    6e74:	str	x0, [x1, #8]
    6e78:	mov	x0, x20
    6e7c:	bl	536c <PySequence_Fast@plt+0x10dc>
    6e80:	mov	x0, x23
    6e84:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    6e88:	b	6d18 <PySequence_Fast@plt+0x2a88>
    6e8c:	bl	536c <PySequence_Fast@plt+0x10dc>
    6e90:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6e94:	mov	x3, x19
    6e98:	mov	x2, x22
    6e9c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6ea0:	ldr	x0, [x0, #3928]
    6ea4:	add	x1, x1, #0x8bd
    6ea8:	ldr	x0, [x0]
    6eac:	bl	41d0 <PyErr_Format@plt>
    6eb0:	b	6c3c <PySequence_Fast@plt+0x29ac>
    6eb4:	cmp	x19, x22
    6eb8:	b.ge	6dc8 <PySequence_Fast@plt+0x2b38>  // b.tcont
    6ebc:	sub	x1, x22, x19
    6ec0:	mov	x0, x21
    6ec4:	bl	50dc <PySequence_Fast@plt+0xe4c>
    6ec8:	tbz	w0, #31, 6dc8 <PySequence_Fast@plt+0x2b38>
    6ecc:	mov	x0, x20
    6ed0:	bl	536c <PySequence_Fast@plt+0x10dc>
    6ed4:	b	6c3c <PySequence_Fast@plt+0x29ac>
    6ed8:	ldr	x0, [x20, #8]
    6edc:	ldr	x0, [x0, #168]
    6ee0:	tbz	w0, #25, 6f10 <PySequence_Fast@plt+0x2c80>
    6ee4:	ldr	x0, [x20, #24]
    6ee8:	ldr	x25, [x0, x23, lsl #3]
    6eec:	ldr	x0, [x25, #8]
    6ef0:	cmp	x0, x24
    6ef4:	b.eq	6f18 <PySequence_Fast@plt+0x2c88>  // b.none
    6ef8:	mov	x1, x24
    6efc:	bl	41b0 <PyType_IsSubtype@plt>
    6f00:	cbnz	w0, 6f18 <PySequence_Fast@plt+0x2c88>
    6f04:	ldr	x0, [x25, #8]
    6f08:	bl	5054 <PySequence_Fast@plt+0xdc4>
    6f0c:	b	6ecc <PySequence_Fast@plt+0x2c3c>
    6f10:	ldr	x25, [x26, x23, lsl #3]
    6f14:	b	6eec <PySequence_Fast@plt+0x2c5c>
    6f18:	add	x23, x23, #0x1
    6f1c:	b	6dd8 <PySequence_Fast@plt+0x2b48>
    6f20:	mov	x23, #0x0                   	// #0
    6f24:	b	6e30 <PySequence_Fast@plt+0x2ba0>
    6f28:	ldr	x2, [x1, #24]
    6f2c:	lsl	x4, x0, #3
    6f30:	add	x0, x0, #0x1
    6f34:	ldr	x6, [x2, x4]
    6f38:	add	x2, x2, x3
    6f3c:	str	x6, [x2, x4]
    6f40:	b	6e4c <PySequence_Fast@plt+0x2bbc>
    6f44:	b.ge	6e54 <PySequence_Fast@plt+0x2bc4>  // b.tcont
    6f48:	ldr	x0, [x1, #8]
    6f4c:	sub	x3, x22, x19
    6f50:	ldr	x5, [sp, #96]
    6f54:	lsl	x3, x3, #3
    6f58:	sub	x0, x0, #0x1
    6f5c:	cmp	x5, x0
    6f60:	b.gt	6e54 <PySequence_Fast@plt+0x2bc4>
    6f64:	ldr	x2, [x1, #24]
    6f68:	lsl	x4, x0, #3
    6f6c:	sub	x0, x0, #0x1
    6f70:	ldr	x6, [x2, x4]
    6f74:	add	x2, x2, x3
    6f78:	str	x6, [x2, x4]
    6f7c:	b	6f5c <PySequence_Fast@plt+0x2ccc>
    6f80:	ldr	x2, [x20, #8]
    6f84:	ldr	x2, [x2, #168]
    6f88:	tbz	w2, #25, 6fb8 <PySequence_Fast@plt+0x2d28>
    6f8c:	ldr	x2, [x20, #24]
    6f90:	ldr	x2, [x2, x0, lsl #3]
    6f94:	add	x0, x0, #0x1
    6f98:	ldr	x4, [x2]
    6f9c:	add	x4, x4, #0x1
    6fa0:	str	x4, [x2]
    6fa4:	ldr	x4, [x1, #24]
    6fa8:	str	x2, [x4, x3, lsl #3]
    6fac:	ldr	x2, [sp, #104]
    6fb0:	add	x3, x3, x2
    6fb4:	b	6e60 <PySequence_Fast@plt+0x2bd0>
    6fb8:	ldr	x2, [x5, x0, lsl #3]
    6fbc:	b	6f94 <PySequence_Fast@plt+0x2d04>
    6fc0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    6fc4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    6fc8:	add	x1, x1, #0x64c
    6fcc:	ldr	x0, [x0, #3944]
    6fd0:	ldr	x0, [x0]
    6fd4:	bl	3e20 <PyErr_SetString@plt>
    6fd8:	b	6c3c <PySequence_Fast@plt+0x29ac>
    6fdc:	mov	w0, w19
    6fe0:	b	6bd8 <PySequence_Fast@plt+0x2948>
    6fe4:	stp	x29, x30, [sp, #-80]!
    6fe8:	mov	x29, sp
    6fec:	stp	x19, x20, [sp, #16]
    6ff0:	stp	x21, x22, [sp, #32]
    6ff4:	stp	x23, x24, [sp, #48]
    6ff8:	mov	x23, x1
    6ffc:	mov	x24, x0
    7000:	mov	x0, x1
    7004:	str	x25, [sp, #64]
    7008:	bl	3cb0 <strlen@plt>
    700c:	mov	x1, x0
    7010:	mov	x22, x0
    7014:	mov	x25, x0
    7018:	mov	x0, x23
    701c:	bl	3d80 <PyBytes_FromStringAndSize@plt>
    7020:	mov	x19, x0
    7024:	cbz	x0, 70a8 <PySequence_Fast@plt+0x2e18>
    7028:	mov	x1, x0
    702c:	ldr	x0, [x24]
    7030:	bl	4280 <PyDict_GetItemWithError@plt>
    7034:	mov	x20, x0
    7038:	cbz	x0, 7058 <PySequence_Fast@plt+0x2dc8>
    703c:	ldr	x0, [x0]
    7040:	add	x0, x0, #0x1
    7044:	str	x0, [x20]
    7048:	mov	x0, x19
    704c:	mov	x19, x20
    7050:	bl	536c <PySequence_Fast@plt+0x10dc>
    7054:	b	70a8 <PySequence_Fast@plt+0x2e18>
    7058:	bl	3fd0 <PyErr_Occurred@plt>
    705c:	cbnz	x0, 7048 <PySequence_Fast@plt+0x2db8>
    7060:	mov	x0, #0x0                   	// #0
    7064:	b	7078 <PySequence_Fast@plt+0x2de8>
    7068:	ldrb	w1, [x23, x0]
    706c:	cmp	w1, #0x7d
    7070:	b.eq	7084 <PySequence_Fast@plt+0x2df4>  // b.none
    7074:	add	x0, x0, #0x1
    7078:	cmp	x22, x0
    707c:	b.gt	7068 <PySequence_Fast@plt+0x2dd8>
    7080:	b.eq	7124 <PySequence_Fast@plt+0x2e94>  // b.none
    7084:	add	x25, x22, #0x1
    7088:	mov	x0, #0x0                   	// #0
    708c:	mov	x1, x25
    7090:	bl	3d80 <PyBytes_FromStringAndSize@plt>
    7094:	mov	x21, x0
    7098:	cbnz	x0, 70c4 <PySequence_Fast@plt+0x2e34>
    709c:	mov	x0, x19
    70a0:	mov	x19, #0x0                   	// #0
    70a4:	bl	536c <PySequence_Fast@plt+0x10dc>
    70a8:	mov	x0, x19
    70ac:	ldp	x19, x20, [sp, #16]
    70b0:	ldp	x21, x22, [sp, #32]
    70b4:	ldp	x23, x24, [sp, #48]
    70b8:	ldr	x25, [sp, #64]
    70bc:	ldp	x29, x30, [sp], #80
    70c0:	ret
    70c4:	mov	w0, #0x7b                  	// #123
    70c8:	strb	w0, [x21, #32]
    70cc:	mov	x2, x22
    70d0:	mov	x1, x23
    70d4:	add	x0, x21, #0x21
    70d8:	bl	3c60 <memcpy@plt>
    70dc:	mov	x1, x25
    70e0:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    70e4:	add	x2, x2, #0x902
    70e8:	add	x0, x21, #0x20
    70ec:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    70f0:	mov	x20, x0
    70f4:	mov	x0, x21
    70f8:	bl	536c <PySequence_Fast@plt+0x10dc>
    70fc:	cbz	x20, 709c <PySequence_Fast@plt+0x2e0c>
    7100:	ldr	x0, [x24]
    7104:	mov	x2, x20
    7108:	mov	x1, x19
    710c:	bl	4190 <PyDict_SetItem@plt>
    7110:	tbz	w0, #31, 7048 <PySequence_Fast@plt+0x2db8>
    7114:	mov	x0, x19
    7118:	bl	536c <PySequence_Fast@plt+0x10dc>
    711c:	mov	x0, x20
    7120:	b	70a0 <PySequence_Fast@plt+0x2e10>
    7124:	ldr	x0, [x19]
    7128:	mov	x21, x19
    712c:	add	x0, x0, #0x1
    7130:	str	x0, [x19]
    7134:	b	70dc <PySequence_Fast@plt+0x2e4c>
    7138:	stp	x29, x30, [sp, #-80]!
    713c:	mov	x29, sp
    7140:	stp	x19, x20, [sp, #16]
    7144:	mov	x19, x2
    7148:	mov	x20, x3
    714c:	stp	x21, x22, [sp, #32]
    7150:	mov	x22, x0
    7154:	mov	x21, x1
    7158:	str	x23, [sp, #48]
    715c:	bl	3fd0 <PyErr_Occurred@plt>
    7160:	cbnz	x0, 719c <PySequence_Fast@plt+0x2f0c>
    7164:	add	x23, x22, #0x28
    7168:	mov	x1, x21
    716c:	mov	x0, x23
    7170:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    7174:	mov	x21, x0
    7178:	cbz	x0, 719c <PySequence_Fast@plt+0x2f0c>
    717c:	cbz	x19, 71b0 <PySequence_Fast@plt+0x2f20>
    7180:	mov	x1, x19
    7184:	mov	x0, x23
    7188:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    718c:	mov	x19, x0
    7190:	cbnz	x0, 71c4 <PySequence_Fast@plt+0x2f34>
    7194:	mov	x0, x21
    7198:	bl	536c <PySequence_Fast@plt+0x10dc>
    719c:	ldp	x19, x20, [sp, #16]
    71a0:	ldp	x21, x22, [sp, #32]
    71a4:	ldr	x23, [sp, #48]
    71a8:	ldp	x29, x30, [sp], #80
    71ac:	ret
    71b0:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    71b4:	ldr	x19, [x19, #3976]
    71b8:	ldr	x0, [x19]
    71bc:	add	x0, x0, #0x1
    71c0:	str	x0, [x19]
    71c4:	cbz	x20, 71ec <PySequence_Fast@plt+0x2f5c>
    71c8:	mov	x1, x20
    71cc:	mov	x0, x23
    71d0:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    71d4:	mov	x20, x0
    71d8:	cbnz	x0, 7200 <PySequence_Fast@plt+0x2f70>
    71dc:	mov	x0, x21
    71e0:	bl	536c <PySequence_Fast@plt+0x10dc>
    71e4:	mov	x0, x19
    71e8:	b	7198 <PySequence_Fast@plt+0x2f08>
    71ec:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    71f0:	ldr	x20, [x20, #3976]
    71f4:	ldr	x0, [x20]
    71f8:	add	x0, x0, #0x1
    71fc:	str	x0, [x20]
    7200:	ldr	x0, [x22, #104]
    7204:	cbz	x0, 7234 <PySequence_Fast@plt+0x2fa4>
    7208:	mov	x3, x19
    720c:	mov	x2, x20
    7210:	mov	x1, x21
    7214:	mov	x4, #0x0                   	// #0
    7218:	bl	4020 <PyObject_CallFunctionObjArgs@plt>
    721c:	str	x0, [sp, #72]
    7220:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    7224:	mov	x0, x21
    7228:	bl	536c <PySequence_Fast@plt+0x10dc>
    722c:	mov	x0, x20
    7230:	b	71e0 <PySequence_Fast@plt+0x2f50>
    7234:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    7238:	add	x1, x1, #0x9c0
    723c:	add	x2, sp, #0x48
    7240:	add	x1, x1, #0x288
    7244:	mov	x0, x22
    7248:	bl	3cd0 <_PyObject_LookupAttrId@plt>
    724c:	cmp	w0, #0x0
    7250:	b.le	7224 <PySequence_Fast@plt+0x2f94>
    7254:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7258:	mov	x2, #0x1                   	// #1
    725c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7260:	add	x1, x1, #0x909
    7264:	ldr	x0, [x0, #4024]
    7268:	ldr	x0, [x0]
    726c:	bl	3da0 <PyErr_WarnEx@plt>
    7270:	ldr	x0, [sp, #72]
    7274:	bl	536c <PySequence_Fast@plt+0x10dc>
    7278:	b	7224 <PySequence_Fast@plt+0x2f94>
    727c:	mov	x2, x0
    7280:	ldr	x0, [x0, #48]
    7284:	cbz	x0, 72bc <PySequence_Fast@plt+0x302c>
    7288:	ldr	x0, [x2, #40]
    728c:	add	x1, x2, #0x30
    7290:	adrp	x3, 1d000 <PyInit__elementtree@@Base+0x12c04>
    7294:	cbnz	x0, 72ac <PySequence_Fast@plt+0x301c>
    7298:	ldr	x0, [x2, #32]
    729c:	add	x3, x3, #0x9c0
    72a0:	add	x3, x3, #0x2a0
    72a4:	add	x2, x0, #0x18
    72a8:	b	53d4 <PySequence_Fast@plt+0x1144>
    72ac:	add	x3, x3, #0x9c0
    72b0:	add	x2, x0, #0x20
    72b4:	add	x3, x3, #0x2b8
    72b8:	b	72a8 <PySequence_Fast@plt+0x3018>
    72bc:	mov	w0, #0x0                   	// #0
    72c0:	ret
    72c4:	stp	x29, x30, [sp, #-16]!
    72c8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    72cc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    72d0:	mov	x29, sp
    72d4:	ldr	x0, [x0, #4008]
    72d8:	add	x1, x1, #0x96b
    72dc:	ldr	x0, [x0]
    72e0:	bl	3e20 <PyErr_SetString@plt>
    72e4:	mov	w0, #0xffffffff            	// #-1
    72e8:	ldp	x29, x30, [sp], #16
    72ec:	ret
    72f0:	cbnz	x1, 72f8 <PySequence_Fast@plt+0x3068>
    72f4:	b	72c4 <PySequence_Fast@plt+0x3034>
    72f8:	stp	x29, x30, [sp, #-16]!
    72fc:	add	x0, x0, #0x20
    7300:	mov	x29, sp
    7304:	ldr	x3, [x1]
    7308:	add	x3, x3, #0x1
    730c:	str	x3, [x1]
    7310:	bl	574c <PySequence_Fast@plt+0x14bc>
    7314:	mov	w0, #0x0                   	// #0
    7318:	ldp	x29, x30, [sp], #16
    731c:	ret
    7320:	cbnz	x1, 7328 <PySequence_Fast@plt+0x3098>
    7324:	b	72c4 <PySequence_Fast@plt+0x3034>
    7328:	stp	x29, x30, [sp, #-16]!
    732c:	add	x0, x0, #0x18
    7330:	mov	x29, sp
    7334:	ldr	x3, [x1]
    7338:	add	x3, x3, #0x1
    733c:	str	x3, [x1]
    7340:	bl	574c <PySequence_Fast@plt+0x14bc>
    7344:	mov	w0, #0x0                   	// #0
    7348:	ldp	x29, x30, [sp], #16
    734c:	ret
    7350:	cbnz	x1, 7358 <PySequence_Fast@plt+0x30c8>
    7354:	b	72c4 <PySequence_Fast@plt+0x3034>
    7358:	stp	x29, x30, [sp, #-32]!
    735c:	mov	x29, sp
    7360:	stp	x19, x20, [sp, #16]
    7364:	mov	x20, x0
    7368:	mov	x19, x1
    736c:	ldr	x0, [x0, #40]
    7370:	cbz	x0, 73a0 <PySequence_Fast@plt+0x3110>
    7374:	ldr	x0, [x19]
    7378:	ldr	x1, [x20, #40]
    737c:	add	x0, x0, #0x1
    7380:	str	x0, [x19]
    7384:	ldr	x0, [x1]
    7388:	str	x19, [x1]
    738c:	bl	536c <PySequence_Fast@plt+0x10dc>
    7390:	mov	w0, #0x0                   	// #0
    7394:	ldp	x19, x20, [sp, #16]
    7398:	ldp	x29, x30, [sp], #32
    739c:	ret
    73a0:	add	x0, x20, #0x28
    73a4:	mov	x1, #0x0                   	// #0
    73a8:	bl	5070 <PySequence_Fast@plt+0xde0>
    73ac:	tbz	w0, #31, 7374 <PySequence_Fast@plt+0x30e4>
    73b0:	mov	w0, #0xffffffff            	// #-1
    73b4:	b	7394 <PySequence_Fast@plt+0x3104>
    73b8:	stp	x29, x30, [sp, #-64]!
    73bc:	cmp	x2, #0x2
    73c0:	mov	x29, sp
    73c4:	stp	x19, x20, [sp, #16]
    73c8:	mov	x19, x1
    73cc:	stp	x21, x22, [sp, #32]
    73d0:	mov	x21, x0
    73d4:	stp	x23, x24, [sp, #48]
    73d8:	b.ne	7458 <PySequence_Fast@plt+0x31c8>  // b.any
    73dc:	ldr	x0, [x21, #40]
    73e0:	ldp	x23, x24, [x19]
    73e4:	cbnz	x0, 73f8 <PySequence_Fast@plt+0x3168>
    73e8:	add	x0, x21, #0x28
    73ec:	mov	x1, #0x0                   	// #0
    73f0:	bl	5070 <PySequence_Fast@plt+0xde0>
    73f4:	tbnz	w0, #31, 7474 <PySequence_Fast@plt+0x31e4>
    73f8:	ldr	x0, [x21, #40]
    73fc:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7400:	mov	x19, x1
    7404:	ldr	x22, [x1, #3976]
    7408:	ldr	x20, [x0]
    740c:	cmp	x20, x22
    7410:	b.ne	748c <PySequence_Fast@plt+0x31fc>  // b.any
    7414:	bl	40d0 <PyDict_New@plt>
    7418:	mov	x20, x0
    741c:	cbz	x0, 7474 <PySequence_Fast@plt+0x31e4>
    7420:	mov	x0, x22
    7424:	bl	536c <PySequence_Fast@plt+0x10dc>
    7428:	ldr	x0, [x21, #40]
    742c:	str	x20, [x0]
    7430:	mov	x2, x24
    7434:	mov	x1, x23
    7438:	mov	x0, x20
    743c:	bl	4190 <PyDict_SetItem@plt>
    7440:	tbnz	w0, #31, 7474 <PySequence_Fast@plt+0x31e4>
    7444:	ldr	x0, [x19, #3976]
    7448:	ldr	x1, [x0]
    744c:	add	x1, x1, #0x1
    7450:	str	x1, [x0]
    7454:	b	7478 <PySequence_Fast@plt+0x31e8>
    7458:	mov	x1, x2
    745c:	mov	x3, #0x2                   	// #2
    7460:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    7464:	mov	x2, x3
    7468:	add	x0, x0, #0x98a
    746c:	bl	3fb0 <_PyArg_CheckPositional@plt>
    7470:	cbnz	w0, 73dc <PySequence_Fast@plt+0x314c>
    7474:	mov	x0, #0x0                   	// #0
    7478:	ldp	x19, x20, [sp, #16]
    747c:	ldp	x21, x22, [sp, #32]
    7480:	ldp	x23, x24, [sp, #48]
    7484:	ldp	x29, x30, [sp], #64
    7488:	ret
    748c:	cbnz	x20, 7430 <PySequence_Fast@plt+0x31a0>
    7490:	b	7474 <PySequence_Fast@plt+0x31e4>
    7494:	stp	x29, x30, [sp, #-48]!
    7498:	mov	x29, sp
    749c:	stp	x19, x20, [sp, #16]
    74a0:	ldr	x19, [x0]
    74a4:	str	x21, [sp, #32]
    74a8:	tbz	w19, #0, 74e4 <PySequence_Fast@plt+0x3254>
    74ac:	and	x20, x19, #0xfffffffffffffffe
    74b0:	mov	x21, x0
    74b4:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    74b8:	ldr	x0, [x0, #4064]
    74bc:	ldr	x1, [x20, #8]
    74c0:	cmp	x1, x0
    74c4:	b.ne	74f8 <PySequence_Fast@plt+0x3268>  // b.any
    74c8:	mov	x0, x20
    74cc:	bl	5384 <PySequence_Fast@plt+0x10f4>
    74d0:	mov	x19, x0
    74d4:	cbz	x0, 74e4 <PySequence_Fast@plt+0x3254>
    74d8:	str	x19, [x21]
    74dc:	mov	x0, x20
    74e0:	bl	536c <PySequence_Fast@plt+0x10dc>
    74e4:	mov	x0, x19
    74e8:	ldp	x19, x20, [sp, #16]
    74ec:	ldr	x21, [sp, #32]
    74f0:	ldp	x29, x30, [sp], #48
    74f4:	ret
    74f8:	mov	x19, x20
    74fc:	b	74e4 <PySequence_Fast@plt+0x3254>
    7500:	sub	sp, sp, #0x80
    7504:	stp	x29, x30, [sp, #16]
    7508:	add	x29, sp, #0x10
    750c:	stp	x19, x20, [sp, #32]
    7510:	stp	x21, x22, [sp, #48]
    7514:	mov	x22, x0
    7518:	mov	x0, x1
    751c:	stp	x23, x24, [sp, #64]
    7520:	mov	x1, x2
    7524:	str	x25, [sp, #80]
    7528:	cbz	x3, 7598 <PySequence_Fast@plt+0x3308>
    752c:	ldr	x20, [x3, #16]
    7530:	sub	x2, x1, #0x1
    7534:	cmp	x3, #0x0
    7538:	add	x20, x20, x1
    753c:	ccmp	x2, #0x2, #0x2, eq  // eq = none
    7540:	adrp	x23, 1d000 <PyInit__elementtree@@Base+0x12c04>
    7544:	b.hi	754c <PySequence_Fast@plt+0x32bc>  // b.pmore
    7548:	cbnz	x0, 75a0 <PySequence_Fast@plt+0x3310>
    754c:	add	x2, sp, #0x68
    7550:	str	x2, [sp]
    7554:	add	x4, x23, #0x9c0
    7558:	mov	w7, #0x0                   	// #0
    755c:	add	x4, x4, #0x2d0
    7560:	mov	w6, #0x3                   	// #3
    7564:	mov	w5, #0x1                   	// #1
    7568:	mov	x2, #0x0                   	// #0
    756c:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    7570:	cbnz	x0, 75a0 <PySequence_Fast@plt+0x3310>
    7574:	mov	x19, #0x0                   	// #0
    7578:	mov	x0, x19
    757c:	ldp	x29, x30, [sp, #16]
    7580:	ldp	x19, x20, [sp, #32]
    7584:	ldp	x21, x22, [sp, #48]
    7588:	ldp	x23, x24, [sp, #64]
    758c:	ldr	x25, [sp, #80]
    7590:	add	sp, sp, #0x80
    7594:	ret
    7598:	mov	x20, #0x0                   	// #0
    759c:	b	7530 <PySequence_Fast@plt+0x32a0>
    75a0:	cmp	x20, #0x1
    75a4:	ldr	x24, [x0]
    75a8:	b.eq	7630 <PySequence_Fast@plt+0x33a0>  // b.none
    75ac:	ldr	x19, [x0, #8]
    75b0:	cbz	x19, 75c8 <PySequence_Fast@plt+0x3338>
    75b4:	cmp	x20, #0x2
    75b8:	b.ne	75d0 <PySequence_Fast@plt+0x3340>  // b.any
    75bc:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    75c0:	ldr	x20, [x20, #3976]
    75c4:	b	75d4 <PySequence_Fast@plt+0x3344>
    75c8:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    75cc:	ldr	x19, [x19, #3976]
    75d0:	ldr	x20, [x0, #16]
    75d4:	add	x0, x23, #0x9c0
    75d8:	add	x0, x0, #0x40
    75dc:	bl	4010 <PyState_FindModule@plt>
    75e0:	bl	3e50 <PyModule_GetState@plt>
    75e4:	mov	x7, x0
    75e8:	mov	x0, x24
    75ec:	bl	43b4 <PySequence_Fast@plt+0x124>
    75f0:	cbnz	w0, 7604 <PySequence_Fast@plt+0x3374>
    75f4:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x11c04>
    75f8:	ldr	x0, [x21, #3976]
    75fc:	cmp	x20, x0
    7600:	b.eq	7640 <PySequence_Fast@plt+0x33b0>  // b.none
    7604:	ldr	x0, [x7, #16]
    7608:	add	x1, x23, #0x9c0
    760c:	mov	x5, x20
    7610:	mov	x4, x19
    7614:	mov	x3, x24
    7618:	mov	x2, x22
    761c:	add	x1, x1, #0x310
    7620:	mov	x6, #0x0                   	// #0
    7624:	bl	4160 <_PyObject_CallMethodIdObjArgs@plt>
    7628:	mov	x19, x0
    762c:	b	7578 <PySequence_Fast@plt+0x32e8>
    7630:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7634:	ldr	x20, [x20, #3976]
    7638:	mov	x19, x20
    763c:	b	75d4 <PySequence_Fast@plt+0x3344>
    7640:	ldr	x0, [x22, #40]
    7644:	cbnz	x0, 76f4 <PySequence_Fast@plt+0x3464>
    7648:	ldr	x0, [x19]
    764c:	add	x0, x0, #0x1
    7650:	str	x0, [x19]
    7654:	b	7578 <PySequence_Fast@plt+0x32e8>
    7658:	cbz	x0, 7668 <PySequence_Fast@plt+0x33d8>
    765c:	ldr	x0, [x0]
    7660:	add	x0, x0, #0x1
    7664:	str	x0, [x19]
    7668:	mov	x0, x20
    766c:	bl	536c <PySequence_Fast@plt+0x10dc>
    7670:	b	7578 <PySequence_Fast@plt+0x32e8>
    7674:	mov	x0, x20
    7678:	bl	536c <PySequence_Fast@plt+0x10dc>
    767c:	cbnz	w25, 7574 <PySequence_Fast@plt+0x32e4>
    7680:	add	x23, x23, #0x1
    7684:	ldr	x0, [x22, #40]
    7688:	ldr	x1, [x0, #8]
    768c:	cmp	x23, x1
    7690:	b.ge	7648 <PySequence_Fast@plt+0x33b8>  // b.tcont
    7694:	ldr	x0, [x0, #24]
    7698:	mov	x1, x24
    769c:	mov	w2, #0x2                   	// #2
    76a0:	ldr	x20, [x0, x23, lsl #3]
    76a4:	ldr	x0, [x20]
    76a8:	add	x0, x0, #0x1
    76ac:	str	x0, [x20]
    76b0:	ldr	x0, [x20, #16]
    76b4:	bl	3f10 <PyObject_RichCompareBool@plt>
    76b8:	mov	w25, w0
    76bc:	cmp	w0, #0x0
    76c0:	b.le	7674 <PySequence_Fast@plt+0x33e4>
    76c4:	add	x0, x20, #0x18
    76c8:	bl	7494 <PySequence_Fast@plt+0x3204>
    76cc:	ldr	x21, [x21, #3976]
    76d0:	mov	x19, x0
    76d4:	cmp	x0, x21
    76d8:	b.ne	7658 <PySequence_Fast@plt+0x33c8>  // b.any
    76dc:	mov	x0, x20
    76e0:	bl	536c <PySequence_Fast@plt+0x10dc>
    76e4:	mov	w1, #0x0                   	// #0
    76e8:	mov	x0, #0x0                   	// #0
    76ec:	bl	4250 <PyUnicode_New@plt>
    76f0:	b	7628 <PySequence_Fast@plt+0x3398>
    76f4:	mov	x23, #0x0                   	// #0
    76f8:	b	7684 <PySequence_Fast@plt+0x33f4>
    76fc:	stp	x29, x30, [sp, #-64]!
    7700:	mov	x29, sp
    7704:	stp	x21, x22, [sp, #32]
    7708:	adrp	x22, 1c000 <PyInit__elementtree@@Base+0x11c04>
    770c:	ldr	x22, [x22, #3976]
    7710:	stp	x19, x20, [sp, #16]
    7714:	mov	x20, x0
    7718:	stp	x23, x24, [sp, #48]
    771c:	mov	x23, x22
    7720:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
    7724:	ldr	x0, [x20, #24]
    7728:	cbnz	x0, 77d0 <PySequence_Fast@plt+0x3540>
    772c:	ldr	x19, [x20, #40]
    7730:	cbnz	x19, 775c <PySequence_Fast@plt+0x34cc>
    7734:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7738:	ldr	x0, [x0, #4016]
    773c:	ldr	x0, [x0]
    7740:	bl	3e80 <PyErr_SetNone@plt>
    7744:	mov	x0, x19
    7748:	ldp	x19, x20, [sp, #16]
    774c:	ldp	x21, x22, [sp, #32]
    7750:	ldp	x23, x24, [sp, #48]
    7754:	ldp	x29, x30, [sp], #64
    7758:	ret
    775c:	str	xzr, [x20, #40]
    7760:	ldp	x0, x1, [x20, #24]
    7764:	cmp	x0, x1
    7768:	b.lt	7790 <PySequence_Fast@plt+0x3500>  // b.tstop
    776c:	lsl	x21, x1, #1
    7770:	cmp	x24, x1, lsl #1
    7774:	b.cc	784c <PySequence_Fast@plt+0x35bc>  // b.lo, b.ul, b.last
    7778:	ldr	x0, [x20, #16]
    777c:	lsl	x1, x1, #5
    7780:	bl	3e70 <PyMem_Realloc@plt>
    7784:	cbz	x0, 784c <PySequence_Fast@plt+0x35bc>
    7788:	str	x0, [x20, #16]
    778c:	str	x21, [x20, #32]
    7790:	ldp	x2, x0, [x20, #16]
    7794:	add	x1, x0, #0x1
    7798:	str	x1, [x20, #24]
    779c:	lsl	x3, x0, #4
    77a0:	add	x0, x2, x0, lsl #4
    77a4:	ldr	x1, [x19]
    77a8:	add	x1, x1, #0x1
    77ac:	str	x1, [x19]
    77b0:	str	x19, [x2, x3]
    77b4:	str	xzr, [x0, #8]
    77b8:	ldr	w0, [x20, #56]
    77bc:	cbz	w0, 7860 <PySequence_Fast@plt+0x35d0>
    77c0:	add	x0, x19, #0x18
    77c4:	mov	x21, x19
    77c8:	bl	7494 <PySequence_Fast@plt+0x3204>
    77cc:	b	7818 <PySequence_Fast@plt+0x3588>
    77d0:	lsl	x1, x0, #4
    77d4:	ldr	x2, [x20, #16]
    77d8:	sub	x1, x1, #0x10
    77dc:	add	x3, x2, x1
    77e0:	ldr	x21, [x2, x1]
    77e4:	ldr	x2, [x21, #40]
    77e8:	cbz	x2, 77fc <PySequence_Fast@plt+0x356c>
    77ec:	ldr	x4, [x2, #8]
    77f0:	ldr	x1, [x3, #8]
    77f4:	cmp	x4, x1
    77f8:	b.gt	782c <PySequence_Fast@plt+0x359c>
    77fc:	ldr	w1, [x20, #56]
    7800:	sub	x0, x0, #0x1
    7804:	str	x0, [x20, #24]
    7808:	cbz	w1, 789c <PySequence_Fast@plt+0x360c>
    780c:	cbz	x0, 789c <PySequence_Fast@plt+0x360c>
    7810:	add	x0, x21, #0x20
    7814:	bl	7494 <PySequence_Fast@plt+0x3204>
    7818:	mov	x19, x0
    781c:	cbnz	x0, 7894 <PySequence_Fast@plt+0x3604>
    7820:	mov	x0, x21
    7824:	bl	536c <PySequence_Fast@plt+0x10dc>
    7828:	b	7744 <PySequence_Fast@plt+0x34b4>
    782c:	ldr	x0, [x2, #24]
    7830:	ldr	x19, [x0, x1, lsl #3]
    7834:	add	x1, x1, #0x1
    7838:	str	x1, [x3, #8]
    783c:	ldr	x0, [x19]
    7840:	add	x0, x0, #0x1
    7844:	str	x0, [x19]
    7848:	b	7760 <PySequence_Fast@plt+0x34d0>
    784c:	mov	x0, x19
    7850:	bl	536c <PySequence_Fast@plt+0x10dc>
    7854:	bl	3dc0 <PyErr_NoMemory@plt>
    7858:	mov	x19, #0x0                   	// #0
    785c:	b	7744 <PySequence_Fast@plt+0x34b4>
    7860:	ldr	x1, [x20, #48]
    7864:	cmp	x1, x23
    7868:	b.eq	7744 <PySequence_Fast@plt+0x34b4>  // b.none
    786c:	ldr	x0, [x19, #16]
    7870:	mov	w2, #0x2                   	// #2
    7874:	bl	3f10 <PyObject_RichCompareBool@plt>
    7878:	mov	w21, w0
    787c:	cmp	w0, #0x0
    7880:	b.gt	7744 <PySequence_Fast@plt+0x34b4>
    7884:	mov	x0, x19
    7888:	bl	536c <PySequence_Fast@plt+0x10dc>
    788c:	cbz	w21, 7724 <PySequence_Fast@plt+0x3494>
    7890:	b	7858 <PySequence_Fast@plt+0x35c8>
    7894:	cmp	x0, x22
    7898:	b.ne	78a8 <PySequence_Fast@plt+0x3618>  // b.any
    789c:	mov	x0, x21
    78a0:	bl	536c <PySequence_Fast@plt+0x10dc>
    78a4:	b	7724 <PySequence_Fast@plt+0x3494>
    78a8:	ldr	x0, [x0]
    78ac:	add	x0, x0, #0x1
    78b0:	str	x0, [x19]
    78b4:	mov	x0, x21
    78b8:	bl	536c <PySequence_Fast@plt+0x10dc>
    78bc:	mov	x0, x19
    78c0:	bl	40a0 <PyObject_IsTrue@plt>
    78c4:	b	7878 <PySequence_Fast@plt+0x35e8>
    78c8:	cbnz	x1, 78d0 <PySequence_Fast@plt+0x3640>
    78cc:	b	72c4 <PySequence_Fast@plt+0x3034>
    78d0:	stp	x29, x30, [sp, #-16]!
    78d4:	mov	x2, x0
    78d8:	mov	x29, sp
    78dc:	ldr	x0, [x1]
    78e0:	add	x0, x0, #0x1
    78e4:	str	x0, [x1]
    78e8:	ldr	x0, [x2, #16]
    78ec:	str	x1, [x2, #16]
    78f0:	bl	536c <PySequence_Fast@plt+0x10dc>
    78f4:	mov	w0, #0x0                   	// #0
    78f8:	ldp	x29, x30, [sp], #16
    78fc:	ret
    7900:	stp	x29, x30, [sp, #-32]!
    7904:	mov	x29, sp
    7908:	stp	x19, x20, [sp, #16]
    790c:	mov	x19, x0
    7910:	mov	x20, #0x0                   	// #0
    7914:	ldr	x0, [x0]
    7918:	bl	536c <PySequence_Fast@plt+0x10dc>
    791c:	ldr	x1, [x19, #8]
    7920:	ldr	x0, [x19, #24]
    7924:	cmp	x20, x1
    7928:	b.lt	794c <PySequence_Fast@plt+0x36bc>  // b.tstop
    792c:	add	x1, x19, #0x20
    7930:	cmp	x0, x1
    7934:	b.eq	793c <PySequence_Fast@plt+0x36ac>  // b.none
    7938:	bl	3eb0 <PyObject_Free@plt>
    793c:	mov	x0, x19
    7940:	ldp	x19, x20, [sp, #16]
    7944:	ldp	x29, x30, [sp], #32
    7948:	b	3eb0 <PyObject_Free@plt>
    794c:	ldr	x0, [x0, x20, lsl #3]
    7950:	add	x20, x20, #0x1
    7954:	bl	536c <PySequence_Fast@plt+0x10dc>
    7958:	b	791c <PySequence_Fast@plt+0x368c>
    795c:	cbnz	x0, 798c <PySequence_Fast@plt+0x36fc>
    7960:	stp	x29, x30, [sp, #-16]!
    7964:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7968:	mov	x29, sp
    796c:	ldr	x0, [x0, #4008]
    7970:	ldr	x0, [x0]
    7974:	bl	3e90 <PyErr_ExceptionMatches@plt>
    7978:	cbz	w0, 7994 <PySequence_Fast@plt+0x3704>
    797c:	bl	3f40 <PyErr_Clear@plt>
    7980:	mov	w0, #0x0                   	// #0
    7984:	ldp	x29, x30, [sp], #16
    7988:	ret
    798c:	mov	w0, #0x0                   	// #0
    7990:	ret
    7994:	mov	w0, #0xffffffff            	// #-1
    7998:	b	7984 <PySequence_Fast@plt+0x36f4>
    799c:	sub	sp, sp, #0x70
    79a0:	stp	x29, x30, [sp, #16]
    79a4:	add	x29, sp, #0x10
    79a8:	stp	x19, x20, [sp, #32]
    79ac:	mov	x19, x0
    79b0:	mov	x0, x1
    79b4:	stp	x21, x22, [sp, #48]
    79b8:	ldr	x1, [x1, #16]
    79bc:	str	x23, [sp, #64]
    79c0:	cbz	x2, 7a24 <PySequence_Fast@plt+0x3794>
    79c4:	ldr	x21, [x2, #16]
    79c8:	add	x21, x21, x1
    79cc:	add	x0, x0, #0x18
    79d0:	orr	x3, x2, x1
    79d4:	cbz	x3, 7a2c <PySequence_Fast@plt+0x379c>
    79d8:	add	x3, sp, #0x60
    79dc:	str	x3, [sp]
    79e0:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x12c04>
    79e4:	add	x4, x4, #0x9c0
    79e8:	add	x4, x4, #0x328
    79ec:	mov	w7, #0x0                   	// #0
    79f0:	mov	w6, #0x0                   	// #0
    79f4:	mov	w5, #0x0                   	// #0
    79f8:	mov	x3, #0x0                   	// #0
    79fc:	bl	3e10 <_PyArg_UnpackKeywords@plt>
    7a00:	cbnz	x0, 7a2c <PySequence_Fast@plt+0x379c>
    7a04:	mov	w20, #0xffffffff            	// #-1
    7a08:	mov	w0, w20
    7a0c:	ldp	x29, x30, [sp, #16]
    7a10:	ldp	x19, x20, [sp, #32]
    7a14:	ldp	x21, x22, [sp, #48]
    7a18:	ldr	x23, [sp, #64]
    7a1c:	add	sp, sp, #0x70
    7a20:	ret
    7a24:	mov	x21, #0x0                   	// #0
    7a28:	b	79c8 <PySequence_Fast@plt+0x3738>
    7a2c:	cbz	x21, 7ac0 <PySequence_Fast@plt+0x3830>
    7a30:	ldr	x20, [x0]
    7a34:	cbz	x20, 7a40 <PySequence_Fast@plt+0x37b0>
    7a38:	cmp	x21, #0x1
    7a3c:	b.eq	7af4 <PySequence_Fast@plt+0x3864>  // b.none
    7a40:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7a44:	ldr	x0, [x0, #8]
    7a48:	ldr	x1, [x1, #3976]
    7a4c:	cmp	x0, x1
    7a50:	b.eq	7af4 <PySequence_Fast@plt+0x3864>  // b.none
    7a54:	ldr	x1, [x0, #8]
    7a58:	ldr	x1, [x1, #168]
    7a5c:	tbz	w1, #28, 7a9c <PySequence_Fast@plt+0x380c>
    7a60:	add	x1, sp, #0x58
    7a64:	bl	41c0 <PyUnicode_AsUTF8AndSize@plt>
    7a68:	mov	x22, x0
    7a6c:	cbz	x0, 7a04 <PySequence_Fast@plt+0x3774>
    7a70:	bl	3cb0 <strlen@plt>
    7a74:	ldr	x1, [sp, #88]
    7a78:	cmp	x0, x1
    7a7c:	b.eq	7ac8 <PySequence_Fast@plt+0x3838>  // b.none
    7a80:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7a84:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7a88:	add	x1, x1, #0x98e
    7a8c:	ldr	x0, [x0, #3928]
    7a90:	ldr	x0, [x0]
    7a94:	bl	3e20 <PyErr_SetString@plt>
    7a98:	b	7a04 <PySequence_Fast@plt+0x3774>
    7a9c:	mov	x3, x0
    7aa0:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    7aa4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7aa8:	add	x2, x2, #0x9a6
    7aac:	add	x1, x1, #0x9b2
    7ab0:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    7ab4:	add	x0, x0, #0xed7
    7ab8:	bl	3f20 <_PyArg_BadArgument@plt>
    7abc:	b	7a04 <PySequence_Fast@plt+0x3774>
    7ac0:	mov	x22, #0x0                   	// #0
    7ac4:	mov	x20, #0x0                   	// #0
    7ac8:	bl	40d0 <PyDict_New@plt>
    7acc:	str	x0, [x19, #32]
    7ad0:	cbz	x0, 7a04 <PySequence_Fast@plt+0x3774>
    7ad4:	bl	40d0 <PyDict_New@plt>
    7ad8:	str	x0, [x19, #40]
    7adc:	cbnz	x0, 7afc <PySequence_Fast@plt+0x386c>
    7ae0:	ldr	x0, [x19, #32]
    7ae4:	cbz	x0, 7a04 <PySequence_Fast@plt+0x3774>
    7ae8:	str	xzr, [x19, #32]
    7aec:	bl	536c <PySequence_Fast@plt+0x10dc>
    7af0:	b	7a04 <PySequence_Fast@plt+0x3774>
    7af4:	mov	x22, #0x0                   	// #0
    7af8:	b	7ac8 <PySequence_Fast@plt+0x3838>
    7afc:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x13c04>
    7b00:	adrp	x23, 1d000 <PyInit__elementtree@@Base+0x12c04>
    7b04:	add	x1, x23, #0x328
    7b08:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    7b0c:	ldr	x0, [x21, #1080]
    7b10:	add	x2, x2, #0x721
    7b14:	add	x1, x1, #0x4e0
    7b18:	ldr	x3, [x0, #64]
    7b1c:	mov	x0, x22
    7b20:	blr	x3
    7b24:	str	x0, [x19, #16]
    7b28:	cbnz	x0, 7b54 <PySequence_Fast@plt+0x38c4>
    7b2c:	ldr	x0, [x19, #32]
    7b30:	cbz	x0, 7b3c <PySequence_Fast@plt+0x38ac>
    7b34:	str	xzr, [x19, #32]
    7b38:	bl	536c <PySequence_Fast@plt+0x10dc>
    7b3c:	ldr	x0, [x19, #40]
    7b40:	cbz	x0, 7b4c <PySequence_Fast@plt+0x38bc>
    7b44:	str	xzr, [x19, #40]
    7b48:	bl	536c <PySequence_Fast@plt+0x10dc>
    7b4c:	bl	3dc0 <PyErr_NoMemory@plt>
    7b50:	b	7a04 <PySequence_Fast@plt+0x3774>
    7b54:	ldr	x1, [x21, #1080]
    7b58:	ldr	x2, [x1, #168]
    7b5c:	cbz	x2, 7b70 <PySequence_Fast@plt+0x38e0>
    7b60:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7b64:	ldr	x1, [x1, #4040]
    7b68:	ldr	x1, [x1, #16]
    7b6c:	blr	x2
    7b70:	cbz	x20, 7d8c <PySequence_Fast@plt+0x3afc>
    7b74:	ldr	x0, [x20]
    7b78:	add	x0, x0, #0x1
    7b7c:	str	x0, [x20]
    7b80:	str	x20, [x19, #24]
    7b84:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7b88:	add	x1, x1, #0x9c6
    7b8c:	mov	x0, x20
    7b90:	bl	3d40 <PyObject_GetAttrString@plt>
    7b94:	str	x0, [x19, #48]
    7b98:	bl	795c <PySequence_Fast@plt+0x36cc>
    7b9c:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7ba0:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7ba4:	add	x1, x1, #0x9cf
    7ba8:	mov	x0, x20
    7bac:	bl	3d40 <PyObject_GetAttrString@plt>
    7bb0:	str	x0, [x19, #56]
    7bb4:	bl	795c <PySequence_Fast@plt+0x36cc>
    7bb8:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7bbc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7bc0:	add	x1, x1, #0x7f9
    7bc4:	mov	x0, x20
    7bc8:	bl	3d40 <PyObject_GetAttrString@plt>
    7bcc:	str	x0, [x19, #64]
    7bd0:	bl	795c <PySequence_Fast@plt+0x36cc>
    7bd4:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7bd8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7bdc:	add	x1, x1, #0x9d6
    7be0:	mov	x0, x20
    7be4:	bl	3d40 <PyObject_GetAttrString@plt>
    7be8:	str	x0, [x19, #72]
    7bec:	bl	795c <PySequence_Fast@plt+0x36cc>
    7bf0:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7bf4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7bf8:	add	x1, x1, #0x69b
    7bfc:	mov	x0, x20
    7c00:	bl	3d40 <PyObject_GetAttrString@plt>
    7c04:	str	x0, [x19, #80]
    7c08:	bl	795c <PySequence_Fast@plt+0x36cc>
    7c0c:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7c10:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7c14:	add	x1, x1, #0x80f
    7c18:	mov	x0, x20
    7c1c:	bl	3d40 <PyObject_GetAttrString@plt>
    7c20:	str	x0, [x19, #88]
    7c24:	bl	795c <PySequence_Fast@plt+0x36cc>
    7c28:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7c2c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7c30:	add	x1, x1, #0x817
    7c34:	mov	x0, x20
    7c38:	bl	3d40 <PyObject_GetAttrString@plt>
    7c3c:	str	x0, [x19, #96]
    7c40:	bl	795c <PySequence_Fast@plt+0x36cc>
    7c44:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7c48:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7c4c:	add	x1, x1, #0x9db
    7c50:	mov	x0, x20
    7c54:	bl	3d40 <PyObject_GetAttrString@plt>
    7c58:	str	x0, [x19, #112]
    7c5c:	bl	795c <PySequence_Fast@plt+0x36cc>
    7c60:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7c64:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7c68:	add	x1, x1, #0x9e1
    7c6c:	mov	x0, x20
    7c70:	bl	3d40 <PyObject_GetAttrString@plt>
    7c74:	str	x0, [x19, #104]
    7c78:	bl	795c <PySequence_Fast@plt+0x36cc>
    7c7c:	mov	w20, w0
    7c80:	cbnz	w0, 7a04 <PySequence_Fast@plt+0x3774>
    7c84:	ldr	x0, [x21, #1080]
    7c88:	mov	x1, x19
    7c8c:	ldr	x2, [x0, #136]
    7c90:	ldr	x0, [x19, #16]
    7c94:	blr	x2
    7c98:	ldr	x0, [x19, #48]
    7c9c:	cbnz	x0, 7ca8 <PySequence_Fast@plt+0x3a18>
    7ca0:	ldr	x0, [x19, #56]
    7ca4:	cbz	x0, 7cc8 <PySequence_Fast@plt+0x3a38>
    7ca8:	ldr	x0, [x21, #1080]
    7cac:	adrp	x2, 9000 <PySequence_Fast@plt+0x4d70>
    7cb0:	adrp	x1, 9000 <PySequence_Fast@plt+0x4d70>
    7cb4:	add	x2, x2, #0x70
    7cb8:	add	x1, x1, #0x158
    7cbc:	ldr	x3, [x0, #112]
    7cc0:	ldr	x0, [x19, #16]
    7cc4:	blr	x3
    7cc8:	ldr	x0, [x21, #1080]
    7ccc:	adrp	x2, 8000 <PySequence_Fast@plt+0x3d70>
    7cd0:	adrp	x1, 9000 <PySequence_Fast@plt+0x4d70>
    7cd4:	add	x2, x2, #0xfd4
    7cd8:	add	x1, x1, #0x7a0
    7cdc:	ldr	x3, [x0, #104]
    7ce0:	ldr	x0, [x19, #16]
    7ce4:	blr	x3
    7ce8:	ldr	x0, [x21, #1080]
    7cec:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    7cf0:	add	x1, x1, #0xe78
    7cf4:	ldr	x2, [x0, #96]
    7cf8:	ldr	x0, [x19, #16]
    7cfc:	blr	x2
    7d00:	ldr	x0, [x21, #1080]
    7d04:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    7d08:	add	x1, x1, #0xdd4
    7d0c:	ldr	x2, [x0, #80]
    7d10:	ldr	x0, [x19, #16]
    7d14:	blr	x2
    7d18:	ldr	x0, [x19, #88]
    7d1c:	cbz	x0, 7d38 <PySequence_Fast@plt+0x3aa8>
    7d20:	ldr	x0, [x21, #1080]
    7d24:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    7d28:	add	x1, x1, #0xd0c
    7d2c:	ldr	x2, [x0, #88]
    7d30:	ldr	x0, [x19, #16]
    7d34:	blr	x2
    7d38:	ldr	x0, [x19, #96]
    7d3c:	cbz	x0, 7d58 <PySequence_Fast@plt+0x3ac8>
    7d40:	ldr	x0, [x21, #1080]
    7d44:	adrp	x1, 8000 <PySequence_Fast@plt+0x3d70>
    7d48:	add	x1, x1, #0xaf0
    7d4c:	ldr	x2, [x0, #120]
    7d50:	ldr	x0, [x19, #16]
    7d54:	blr	x2
    7d58:	ldr	x0, [x21, #1080]
    7d5c:	adrp	x1, 7000 <PySequence_Fast@plt+0x2d70>
    7d60:	add	x1, x1, #0x138
    7d64:	ldr	x2, [x0, #144]
    7d68:	ldr	x0, [x19, #16]
    7d6c:	blr	x2
    7d70:	ldr	x0, [x21, #1080]
    7d74:	mov	x2, #0x0                   	// #0
    7d78:	ldr	x3, [x0, #128]
    7d7c:	ldr	x1, [x0, #160]
    7d80:	ldr	x0, [x19, #16]
    7d84:	blr	x3
    7d88:	b	7a08 <PySequence_Fast@plt+0x3778>
    7d8c:	add	x23, x23, #0x328
    7d90:	mov	x2, #0x0                   	// #0
    7d94:	add	x0, x23, #0x1a0
    7d98:	mov	x1, #0x0                   	// #0
    7d9c:	bl	5578 <PySequence_Fast@plt+0x12e8>
    7da0:	mov	x20, x0
    7da4:	cbnz	x0, 7b80 <PySequence_Fast@plt+0x38f0>
    7da8:	ldr	x0, [x19, #32]
    7dac:	cbz	x0, 7db8 <PySequence_Fast@plt+0x3b28>
    7db0:	str	xzr, [x19, #32]
    7db4:	bl	536c <PySequence_Fast@plt+0x10dc>
    7db8:	ldr	x0, [x19, #40]
    7dbc:	cbz	x0, 7a04 <PySequence_Fast@plt+0x3774>
    7dc0:	str	xzr, [x19, #40]
    7dc4:	b	7aec <PySequence_Fast@plt+0x385c>
    7dc8:	ldr	x0, [x0, #40]
    7dcc:	cbz	x0, 7de4 <PySequence_Fast@plt+0x3b54>
    7dd0:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7dd4:	ldr	x0, [x0]
    7dd8:	ldr	x1, [x1, #3976]
    7ddc:	cmp	x0, x1
    7de0:	b.ne	7dec <PySequence_Fast@plt+0x3b5c>  // b.any
    7de4:	mov	x0, #0x0                   	// #0
    7de8:	b	3c90 <PyList_New@plt>
    7dec:	b	4130 <PyDict_Keys@plt>
    7df0:	ldr	x0, [x0, #40]
    7df4:	cbz	x0, 7e0c <PySequence_Fast@plt+0x3b7c>
    7df8:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7dfc:	ldr	x0, [x0]
    7e00:	ldr	x1, [x1, #3976]
    7e04:	cmp	x0, x1
    7e08:	b.ne	7e14 <PySequence_Fast@plt+0x3b84>  // b.any
    7e0c:	mov	x0, #0x0                   	// #0
    7e10:	b	3c90 <PyList_New@plt>
    7e14:	b	3cc0 <PyDict_Items@plt>
    7e18:	stp	x29, x30, [sp, #-48]!
    7e1c:	mov	x29, sp
    7e20:	stp	x21, x22, [sp, #32]
    7e24:	mov	x22, x0
    7e28:	mov	x21, x1
    7e2c:	ldr	x0, [x1, #8]
    7e30:	stp	x19, x20, [sp, #16]
    7e34:	adrp	x19, 1d000 <PyInit__elementtree@@Base+0x12c04>
    7e38:	add	x19, x19, #0x328
    7e3c:	cmp	x0, x19
    7e40:	b.eq	7e74 <PySequence_Fast@plt+0x3be4>  // b.none
    7e44:	mov	x1, x19
    7e48:	bl	41b0 <PyType_IsSubtype@plt>
    7e4c:	cbnz	w0, 7e74 <PySequence_Fast@plt+0x3be4>
    7e50:	ldr	x2, [x19, #24]
    7e54:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7e58:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    7e5c:	mov	x3, x21
    7e60:	add	x1, x1, #0x68f
    7e64:	add	x0, x0, #0x9e9
    7e68:	bl	3f20 <_PyArg_BadArgument@plt>
    7e6c:	mov	x20, #0x0                   	// #0
    7e70:	b	7e98 <PySequence_Fast@plt+0x3c08>
    7e74:	ldr	x20, [x22, #40]
    7e78:	mov	x19, #0x0                   	// #0
    7e7c:	cbnz	x20, 7ec8 <PySequence_Fast@plt+0x3c38>
    7e80:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7e84:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7e88:	add	x1, x1, #0x9f0
    7e8c:	ldr	x0, [x0, #3928]
    7e90:	ldr	x0, [x0]
    7e94:	bl	3e20 <PyErr_SetString@plt>
    7e98:	mov	x0, x20
    7e9c:	ldp	x19, x20, [sp, #16]
    7ea0:	ldp	x21, x22, [sp, #32]
    7ea4:	ldp	x29, x30, [sp], #48
    7ea8:	ret
    7eac:	mov	x1, x21
    7eb0:	mov	w2, #0x2                   	// #2
    7eb4:	bl	3f10 <PyObject_RichCompareBool@plt>
    7eb8:	cmp	w0, #0x0
    7ebc:	b.gt	7ee8 <PySequence_Fast@plt+0x3c58>
    7ec0:	b.ne	7e6c <PySequence_Fast@plt+0x3bdc>  // b.any
    7ec4:	add	x19, x19, #0x1
    7ec8:	ldr	x0, [x22, #40]
    7ecc:	ldr	x1, [x0, #8]
    7ed0:	cmp	x19, x1
    7ed4:	b.ge	7ee8 <PySequence_Fast@plt+0x3c58>  // b.tcont
    7ed8:	ldr	x0, [x0, #24]
    7edc:	ldr	x0, [x0, x19, lsl #3]
    7ee0:	cmp	x21, x0
    7ee4:	b.ne	7eac <PySequence_Fast@plt+0x3c1c>  // b.any
    7ee8:	ldr	x3, [x22, #40]
    7eec:	ldr	x1, [x3, #8]
    7ef0:	cmp	x19, x1
    7ef4:	b.lt	7f14 <PySequence_Fast@plt+0x3c84>  // b.tstop
    7ef8:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7efc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7f00:	add	x1, x1, #0x9f0
    7f04:	ldr	x0, [x0, #3928]
    7f08:	ldr	x0, [x0]
    7f0c:	bl	3e20 <PyErr_SetString@plt>
    7f10:	b	7e6c <PySequence_Fast@plt+0x3bdc>
    7f14:	ldr	x2, [x3, #24]
    7f18:	sub	x4, x1, #0x1
    7f1c:	add	x1, x2, x1, lsl #3
    7f20:	ldr	x0, [x2, x19, lsl #3]
    7f24:	add	x19, x2, x19, lsl #3
    7f28:	str	x4, [x3, #8]
    7f2c:	add	x19, x19, #0x8
    7f30:	cmp	x19, x1
    7f34:	b.ne	7f54 <PySequence_Fast@plt+0x3cc4>  // b.any
    7f38:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7f3c:	bl	536c <PySequence_Fast@plt+0x10dc>
    7f40:	ldr	x20, [x20, #3976]
    7f44:	ldr	x0, [x20]
    7f48:	add	x0, x0, #0x1
    7f4c:	str	x0, [x20]
    7f50:	b	7e98 <PySequence_Fast@plt+0x3c08>
    7f54:	ldr	x2, [x19]
    7f58:	stur	x2, [x19, #-8]
    7f5c:	b	7f2c <PySequence_Fast@plt+0x3c9c>
    7f60:	stp	x29, x30, [sp, #-48]!
    7f64:	cmp	x2, #0x2
    7f68:	mov	x29, sp
    7f6c:	stp	x19, x20, [sp, #16]
    7f70:	mov	x20, x0
    7f74:	stp	x21, x22, [sp, #32]
    7f78:	mov	x21, x1
    7f7c:	b.ne	7fb4 <PySequence_Fast@plt+0x3d24>  // b.any
    7f80:	ldr	x0, [x21]
    7f84:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7f88:	ldr	x1, [x1, #3896]
    7f8c:	ldr	x0, [x0, #8]
    7f90:	cmp	x0, x1
    7f94:	b.ne	7fe4 <PySequence_Fast@plt+0x3d54>  // b.any
    7f98:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    7f9c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    7fa0:	add	x1, x1, #0xa15
    7fa4:	ldr	x0, [x0, #3944]
    7fa8:	ldr	x0, [x0]
    7fac:	bl	3e20 <PyErr_SetString@plt>
    7fb0:	b	7fd0 <PySequence_Fast@plt+0x3d40>
    7fb4:	mov	x1, x2
    7fb8:	mov	x3, #0x2                   	// #2
    7fbc:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    7fc0:	mov	x2, x3
    7fc4:	add	x0, x0, #0xa0e
    7fc8:	bl	3fb0 <_PyArg_CheckPositional@plt>
    7fcc:	cbnz	w0, 7f80 <PySequence_Fast@plt+0x3cf0>
    7fd0:	mov	x0, #0x0                   	// #0
    7fd4:	ldp	x19, x20, [sp, #16]
    7fd8:	ldp	x21, x22, [sp, #32]
    7fdc:	ldp	x29, x30, [sp], #48
    7fe0:	ret
    7fe4:	bl	41b0 <PyType_IsSubtype@plt>
    7fe8:	cbnz	w0, 7f98 <PySequence_Fast@plt+0x3d08>
    7fec:	ldr	x0, [x21]
    7ff0:	bl	4230 <PyNumber_Index@plt>
    7ff4:	mov	x22, x0
    7ff8:	cbnz	x0, 804c <PySequence_Fast@plt+0x3dbc>
    7ffc:	bl	3fd0 <PyErr_Occurred@plt>
    8000:	cbnz	x0, 7fd0 <PySequence_Fast@plt+0x3d40>
    8004:	mov	x19, #0xffffffffffffffff    	// #-1
    8008:	ldr	x0, [x21, #8]
    800c:	adrp	x22, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8010:	add	x22, x22, #0x328
    8014:	ldr	x0, [x0, #8]
    8018:	cmp	x0, x22
    801c:	b.eq	8068 <PySequence_Fast@plt+0x3dd8>  // b.none
    8020:	mov	x1, x22
    8024:	bl	41b0 <PyType_IsSubtype@plt>
    8028:	cbnz	w0, 8068 <PySequence_Fast@plt+0x3dd8>
    802c:	ldr	x3, [x21, #8]
    8030:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8034:	ldr	x2, [x22, #24]
    8038:	add	x1, x1, #0xa3a
    803c:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8040:	add	x0, x0, #0xa0e
    8044:	bl	3f20 <_PyArg_BadArgument@plt>
    8048:	b	7fd0 <PySequence_Fast@plt+0x3d40>
    804c:	bl	3f00 <PyLong_AsSsize_t@plt>
    8050:	mov	x19, x0
    8054:	mov	x0, x22
    8058:	bl	536c <PySequence_Fast@plt+0x10dc>
    805c:	cmn	x19, #0x1
    8060:	b.ne	8008 <PySequence_Fast@plt+0x3d78>  // b.any
    8064:	b	7ffc <PySequence_Fast@plt+0x3d6c>
    8068:	ldr	x0, [x20, #40]
    806c:	ldr	x21, [x21, #8]
    8070:	cbz	x0, 80e8 <PySequence_Fast@plt+0x3e58>
    8074:	ldr	x0, [x20, #40]
    8078:	ldr	x0, [x0, #8]
    807c:	tbz	x19, #63, 8088 <PySequence_Fast@plt+0x3df8>
    8080:	adds	x19, x19, x0
    8084:	csel	x19, x19, xzr, pl  // pl = nfrst
    8088:	cmp	x19, x0
    808c:	mov	x1, #0x1                   	// #1
    8090:	csel	x19, x19, x0, le
    8094:	mov	x0, x20
    8098:	bl	50dc <PySequence_Fast@plt+0xe4c>
    809c:	tbnz	w0, #31, 7fd0 <PySequence_Fast@plt+0x3d40>
    80a0:	ldr	x1, [x20, #40]
    80a4:	ldr	x0, [x1, #8]
    80a8:	ldr	x2, [x1, #24]
    80ac:	cmp	x19, x0
    80b0:	b.lt	80fc <PySequence_Fast@plt+0x3e6c>  // b.tstop
    80b4:	ldr	x0, [x21]
    80b8:	add	x0, x0, #0x1
    80bc:	str	x0, [x21]
    80c0:	str	x21, [x2, x19, lsl #3]
    80c4:	ldr	x0, [x1, #8]
    80c8:	add	x0, x0, #0x1
    80cc:	str	x0, [x1, #8]
    80d0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    80d4:	ldr	x0, [x0, #3976]
    80d8:	ldr	x1, [x0]
    80dc:	add	x1, x1, #0x1
    80e0:	str	x1, [x0]
    80e4:	b	7fd4 <PySequence_Fast@plt+0x3d44>
    80e8:	add	x0, x20, #0x28
    80ec:	mov	x1, #0x0                   	// #0
    80f0:	bl	5070 <PySequence_Fast@plt+0xde0>
    80f4:	tbz	w0, #31, 8074 <PySequence_Fast@plt+0x3de4>
    80f8:	b	7fd0 <PySequence_Fast@plt+0x3d40>
    80fc:	add	x3, x2, x0, lsl #3
    8100:	ldur	x3, [x3, #-8]
    8104:	str	x3, [x2, x0, lsl #3]
    8108:	sub	x0, x0, #0x1
    810c:	b	80ac <PySequence_Fast@plt+0x3e1c>
    8110:	stp	x29, x30, [sp, #-32]!
    8114:	mov	x29, sp
    8118:	ldr	x1, [x0, #16]
    811c:	stp	x19, x20, [sp, #16]
    8120:	mov	x19, x0
    8124:	cbnz	x1, 8140 <PySequence_Fast@plt+0x3eb0>
    8128:	ldp	x19, x20, [sp, #16]
    812c:	mov	x1, x0
    8130:	ldp	x29, x30, [sp], #32
    8134:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8138:	add	x0, x0, #0xa45
    813c:	b	3c70 <PyUnicode_FromFormat@plt>
    8140:	bl	4030 <Py_ReprEnter@plt>
    8144:	cmp	w0, #0x0
    8148:	cbnz	w0, 817c <PySequence_Fast@plt+0x3eec>
    814c:	ldr	x1, [x19, #16]
    8150:	mov	x2, x19
    8154:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8158:	add	x0, x0, #0xa55
    815c:	bl	3c70 <PyUnicode_FromFormat@plt>
    8160:	mov	x20, x0
    8164:	mov	x0, x19
    8168:	bl	41f0 <Py_ReprLeave@plt>
    816c:	mov	x0, x20
    8170:	ldp	x19, x20, [sp, #16]
    8174:	ldp	x29, x30, [sp], #32
    8178:	ret
    817c:	b.le	81a0 <PySequence_Fast@plt+0x3f10>
    8180:	ldr	x0, [x19, #8]
    8184:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8188:	add	x1, x1, #0xa68
    818c:	ldr	x2, [x0, #24]
    8190:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8194:	ldr	x0, [x0, #3920]
    8198:	ldr	x0, [x0]
    819c:	bl	41d0 <PyErr_Format@plt>
    81a0:	mov	x20, #0x0                   	// #0
    81a4:	b	816c <PySequence_Fast@plt+0x3edc>
    81a8:	stp	x29, x30, [sp, #-64]!
    81ac:	cmp	x2, #0x2
    81b0:	mov	x29, sp
    81b4:	stp	x19, x20, [sp, #16]
    81b8:	mov	x19, x1
    81bc:	stp	x21, x22, [sp, #32]
    81c0:	str	x23, [sp, #48]
    81c4:	b.ne	8220 <PySequence_Fast@plt+0x3f90>  // b.any
    81c8:	ldp	x22, x21, [x19]
    81cc:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    81d0:	add	x0, x0, #0x9c0
    81d4:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    81d8:	add	x0, x0, #0x40
    81dc:	bl	4010 <PyState_FindModule@plt>
    81e0:	bl	3e50 <PyModule_GetState@plt>
    81e4:	mov	x19, x0
    81e8:	mov	x0, x22
    81ec:	bl	40e0 <PyCallable_Check@plt>
    81f0:	cbz	w0, 8244 <PySequence_Fast@plt+0x3fb4>
    81f4:	mov	x0, x21
    81f8:	bl	40e0 <PyCallable_Check@plt>
    81fc:	cbnz	w0, 8274 <PySequence_Fast@plt+0x3fe4>
    8200:	ldr	x0, [x20, #3976]
    8204:	cmp	x21, x0
    8208:	b.eq	8274 <PySequence_Fast@plt+0x3fe4>  // b.none
    820c:	ldr	x0, [x21, #8]
    8210:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8214:	add	x1, x1, #0xac6
    8218:	ldr	x2, [x0, #24]
    821c:	b	8260 <PySequence_Fast@plt+0x3fd0>
    8220:	mov	x1, x2
    8224:	mov	x3, #0x2                   	// #2
    8228:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    822c:	mov	x2, x3
    8230:	add	x0, x0, #0xa8a
    8234:	bl	3fb0 <_PyArg_CheckPositional@plt>
    8238:	cbnz	w0, 81c8 <PySequence_Fast@plt+0x3f38>
    823c:	mov	x23, #0x0                   	// #0
    8240:	b	82d0 <PySequence_Fast@plt+0x4040>
    8244:	ldr	x0, [x20, #3976]
    8248:	cmp	x22, x0
    824c:	b.eq	81f4 <PySequence_Fast@plt+0x3f64>  // b.none
    8250:	ldr	x0, [x22, #8]
    8254:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8258:	add	x1, x1, #0xa99
    825c:	ldr	x2, [x0, #24]
    8260:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8264:	ldr	x0, [x0, #3944]
    8268:	ldr	x0, [x0]
    826c:	bl	41d0 <PyErr_Format@plt>
    8270:	b	823c <PySequence_Fast@plt+0x3fac>
    8274:	ldr	x1, [x19, #24]
    8278:	cbnz	x1, 8280 <PySequence_Fast@plt+0x3ff0>
    827c:	ldr	x1, [x20, #3976]
    8280:	ldr	x2, [x19, #32]
    8284:	cbnz	x2, 828c <PySequence_Fast@plt+0x3ffc>
    8288:	ldr	x2, [x20, #3976]
    828c:	mov	x0, #0x2                   	// #2
    8290:	bl	4260 <PyTuple_Pack@plt>
    8294:	mov	x23, x0
    8298:	ldr	x0, [x20, #3976]
    829c:	cmp	x22, x0
    82a0:	ldr	x0, [x19, #24]
    82a4:	b.ne	82e8 <PySequence_Fast@plt+0x4058>  // b.any
    82a8:	cbz	x0, 82b4 <PySequence_Fast@plt+0x4024>
    82ac:	str	xzr, [x19, #24]
    82b0:	bl	536c <PySequence_Fast@plt+0x10dc>
    82b4:	ldr	x20, [x20, #3976]
    82b8:	ldr	x0, [x19, #32]
    82bc:	cmp	x21, x20
    82c0:	b.ne	8300 <PySequence_Fast@plt+0x4070>  // b.any
    82c4:	cbz	x0, 82d0 <PySequence_Fast@plt+0x4040>
    82c8:	str	xzr, [x19, #32]
    82cc:	bl	536c <PySequence_Fast@plt+0x10dc>
    82d0:	mov	x0, x23
    82d4:	ldp	x19, x20, [sp, #16]
    82d8:	ldp	x21, x22, [sp, #32]
    82dc:	ldr	x23, [sp, #48]
    82e0:	ldp	x29, x30, [sp], #64
    82e4:	ret
    82e8:	ldr	x1, [x22]
    82ec:	add	x1, x1, #0x1
    82f0:	str	x1, [x22]
    82f4:	str	x22, [x19, #24]
    82f8:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    82fc:	b	82b4 <PySequence_Fast@plt+0x4024>
    8300:	ldr	x1, [x21]
    8304:	add	x1, x1, #0x1
    8308:	str	x1, [x21]
    830c:	str	x21, [x19, #32]
    8310:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8314:	b	82d0 <PySequence_Fast@plt+0x4040>
    8318:	stp	x29, x30, [sp, #-32]!
    831c:	mov	x4, x1
    8320:	mov	x5, x2
    8324:	mov	x29, sp
    8328:	ldr	x3, [x0, #8]
    832c:	ldr	x6, [x3, #56]
    8330:	ldr	x3, [x3, #168]
    8334:	str	x19, [sp, #16]
    8338:	mov	x19, x0
    833c:	tbz	w3, #11, 8348 <PySequence_Fast@plt+0x40b8>
    8340:	ldr	x6, [x0, x6]
    8344:	cbnz	x6, 8364 <PySequence_Fast@plt+0x40d4>
    8348:	mov	x0, x19
    834c:	and	x2, x5, #0x7fffffffffffffff
    8350:	ldr	x19, [sp, #16]
    8354:	mov	x1, x4
    8358:	ldp	x29, x30, [sp], #32
    835c:	mov	x3, #0x0                   	// #0
    8360:	b	4220 <_PyObject_MakeTpCall@plt>
    8364:	mov	x3, #0x0                   	// #0
    8368:	blr	x6
    836c:	mov	x1, x0
    8370:	mov	x0, x19
    8374:	ldr	x19, [sp, #16]
    8378:	mov	x2, #0x0                   	// #0
    837c:	ldp	x29, x30, [sp], #32
    8380:	b	4070 <_Py_CheckFunctionResult@plt>
    8384:	b	8318 <PySequence_Fast@plt+0x4088>
    8388:	cbz	x1, 83ec <PySequence_Fast@plt+0x415c>
    838c:	stp	x29, x30, [sp, #-48]!
    8390:	mov	x29, sp
    8394:	str	x19, [sp, #16]
    8398:	mov	x19, x0
    839c:	mov	x0, #0x2                   	// #2
    83a0:	bl	4260 <PyTuple_Pack@plt>
    83a4:	str	x0, [sp, #40]
    83a8:	cbz	x0, 83e4 <PySequence_Fast@plt+0x4154>
    83ac:	ldr	x0, [x19]
    83b0:	add	x1, sp, #0x28
    83b4:	mov	x2, #0x1                   	// #1
    83b8:	bl	8384 <PySequence_Fast@plt+0x40f4>
    83bc:	mov	x19, x0
    83c0:	ldr	x0, [sp, #40]
    83c4:	bl	536c <PySequence_Fast@plt+0x10dc>
    83c8:	cbz	x19, 83e4 <PySequence_Fast@plt+0x4154>
    83cc:	mov	x0, x19
    83d0:	bl	536c <PySequence_Fast@plt+0x10dc>
    83d4:	mov	w0, #0x0                   	// #0
    83d8:	ldr	x19, [sp, #16]
    83dc:	ldp	x29, x30, [sp], #48
    83e0:	ret
    83e4:	mov	w0, #0xffffffff            	// #-1
    83e8:	b	83d8 <PySequence_Fast@plt+0x4148>
    83ec:	mov	w0, #0x0                   	// #0
    83f0:	ret
    83f4:	stp	x29, x30, [sp, #-32]!
    83f8:	mov	x29, sp
    83fc:	stp	x19, x20, [sp, #16]
    8400:	mov	x19, x0
    8404:	bl	727c <PySequence_Fast@plt+0x2fec>
    8408:	tbz	w0, #31, 841c <PySequence_Fast@plt+0x418c>
    840c:	mov	x0, #0x0                   	// #0
    8410:	ldp	x19, x20, [sp, #16]
    8414:	ldp	x29, x30, [sp], #32
    8418:	ret
    841c:	ldr	x0, [x19, #64]
    8420:	cbnz	x0, 8440 <PySequence_Fast@plt+0x41b0>
    8424:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8428:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    842c:	add	x1, x1, #0xaee
    8430:	ldr	x0, [x0, #3984]
    8434:	ldr	x0, [x0]
    8438:	bl	3e20 <PyErr_SetString@plt>
    843c:	b	840c <PySequence_Fast@plt+0x417c>
    8440:	ldp	x1, x20, [x19, #24]
    8444:	ldr	x0, [x1]
    8448:	str	x1, [x19, #32]
    844c:	add	x0, x0, #0x1
    8450:	str	x0, [x1]
    8454:	ldr	x0, [x19, #40]
    8458:	str	x1, [x19, #40]
    845c:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8460:	ldp	x1, x0, [x19, #56]
    8464:	ldr	x1, [x1, #24]
    8468:	sub	x0, x0, #0x1
    846c:	str	x0, [x19, #64]
    8470:	ldr	x0, [x1, x0, lsl #3]
    8474:	ldr	x1, [x0]
    8478:	str	x0, [x19, #24]
    847c:	add	x1, x1, #0x1
    8480:	str	x1, [x0]
    8484:	mov	x0, x20
    8488:	bl	536c <PySequence_Fast@plt+0x10dc>
    848c:	ldr	x2, [x19, #32]
    8490:	add	x0, x19, #0x60
    8494:	ldr	x1, [x19, #112]
    8498:	bl	8388 <PySequence_Fast@plt+0x40f8>
    849c:	tbnz	w0, #31, 840c <PySequence_Fast@plt+0x417c>
    84a0:	ldr	x0, [x19, #32]
    84a4:	ldr	x1, [x0]
    84a8:	add	x1, x1, #0x1
    84ac:	str	x1, [x0]
    84b0:	b	8410 <PySequence_Fast@plt+0x4180>
    84b4:	b	83f4 <PySequence_Fast@plt+0x4164>
    84b8:	stp	x29, x30, [sp, #-80]!
    84bc:	mov	x29, sp
    84c0:	stp	x19, x20, [sp, #16]
    84c4:	mov	w20, w0
    84c8:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    84cc:	add	x0, x0, #0x9c0
    84d0:	mov	x19, x3
    84d4:	add	x0, x0, #0x40
    84d8:	stp	x21, x22, [sp, #32]
    84dc:	mov	x22, x1
    84e0:	str	x23, [sp, #48]
    84e4:	mov	x23, x2
    84e8:	bl	4010 <PyState_FindModule@plt>
    84ec:	bl	3e50 <PyModule_GetState@plt>
    84f0:	mov	x21, x0
    84f4:	cbnz	x19, 8510 <PySequence_Fast@plt+0x4280>
    84f8:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    84fc:	ldr	x0, [x0, #1080]
    8500:	ldr	x1, [x0, #24]
    8504:	mov	w0, w20
    8508:	blr	x1
    850c:	mov	x19, x0
    8510:	mov	x3, x23
    8514:	mov	x2, x22
    8518:	mov	x1, x19
    851c:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8520:	add	x0, x0, #0xb03
    8524:	bl	3c70 <PyUnicode_FromFormat@plt>
    8528:	str	x0, [sp, #72]
    852c:	cbz	x0, 8594 <PySequence_Fast@plt+0x4304>
    8530:	ldr	x0, [x21]
    8534:	add	x1, sp, #0x48
    8538:	mov	x2, #0x1                   	// #1
    853c:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8540:	mov	x19, x0
    8544:	ldr	x0, [sp, #72]
    8548:	bl	536c <PySequence_Fast@plt+0x10dc>
    854c:	cbz	x19, 8594 <PySequence_Fast@plt+0x4304>
    8550:	mov	w0, w20
    8554:	bl	3ef0 <PyLong_FromLong@plt>
    8558:	mov	x20, x0
    855c:	cbnz	x0, 8568 <PySequence_Fast@plt+0x42d8>
    8560:	mov	x0, x19
    8564:	b	8590 <PySequence_Fast@plt+0x4300>
    8568:	mov	x2, x0
    856c:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8570:	mov	x0, x19
    8574:	add	x1, x1, #0xb1c
    8578:	bl	3d90 <PyObject_SetAttrString@plt>
    857c:	cmn	w0, #0x1
    8580:	b.ne	85a8 <PySequence_Fast@plt+0x4318>  // b.any
    8584:	mov	x0, x19
    8588:	bl	536c <PySequence_Fast@plt+0x10dc>
    858c:	mov	x0, x20
    8590:	bl	536c <PySequence_Fast@plt+0x10dc>
    8594:	ldp	x19, x20, [sp, #16]
    8598:	ldp	x21, x22, [sp, #32]
    859c:	ldr	x23, [sp, #48]
    85a0:	ldp	x29, x30, [sp], #80
    85a4:	ret
    85a8:	mov	x0, x20
    85ac:	bl	536c <PySequence_Fast@plt+0x10dc>
    85b0:	mov	x2, x23
    85b4:	mov	x1, x22
    85b8:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    85bc:	add	x0, x0, #0xb21
    85c0:	bl	41e0 <_Py_BuildValue_SizeT@plt>
    85c4:	mov	x20, x0
    85c8:	cbz	x0, 8560 <PySequence_Fast@plt+0x42d0>
    85cc:	mov	x2, x0
    85d0:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    85d4:	mov	x0, x19
    85d8:	add	x1, x1, #0xb26
    85dc:	bl	3d90 <PyObject_SetAttrString@plt>
    85e0:	cmn	w0, #0x1
    85e4:	b.eq	8584 <PySequence_Fast@plt+0x42f4>  // b.none
    85e8:	mov	x0, x20
    85ec:	bl	536c <PySequence_Fast@plt+0x10dc>
    85f0:	ldr	x0, [x21]
    85f4:	mov	x1, x19
    85f8:	bl	3dd0 <PyErr_SetObject@plt>
    85fc:	b	8560 <PySequence_Fast@plt+0x42d0>
    8600:	stp	x29, x30, [sp, #-64]!
    8604:	mov	x29, sp
    8608:	stp	x21, x22, [sp, #32]
    860c:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x13c04>
    8610:	stp	x19, x20, [sp, #16]
    8614:	mov	x20, x0
    8618:	ldr	x0, [x21, #1080]
    861c:	ldr	x4, [x0, #56]
    8620:	ldr	x0, [x20]
    8624:	str	x23, [sp, #48]
    8628:	blr	x4
    862c:	mov	w22, w0
    8630:	bl	3fd0 <PyErr_Occurred@plt>
    8634:	cbnz	x0, 86bc <PySequence_Fast@plt+0x442c>
    8638:	cbnz	w22, 86a4 <PySequence_Fast@plt+0x4414>
    863c:	mov	x19, x0
    8640:	ldr	x0, [x21, #1080]
    8644:	ldr	x1, [x0, #32]
    8648:	ldr	x0, [x20]
    864c:	blr	x1
    8650:	mov	w22, w0
    8654:	ldr	x0, [x21, #1080]
    8658:	ldr	x1, [x0, #48]
    865c:	ldr	x0, [x20]
    8660:	blr	x1
    8664:	mov	x23, x0
    8668:	ldr	x0, [x21, #1080]
    866c:	ldr	x1, [x0, #40]
    8670:	ldr	x0, [x20]
    8674:	blr	x1
    8678:	mov	x2, x0
    867c:	mov	x1, x23
    8680:	mov	w0, w22
    8684:	mov	x3, #0x0                   	// #0
    8688:	bl	84b8 <PySequence_Fast@plt+0x4228>
    868c:	mov	x0, x19
    8690:	ldp	x19, x20, [sp, #16]
    8694:	ldp	x21, x22, [sp, #32]
    8698:	ldr	x23, [sp, #48]
    869c:	ldp	x29, x30, [sp], #64
    86a0:	ret
    86a4:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    86a8:	ldr	x19, [x19, #3976]
    86ac:	ldr	x0, [x19]
    86b0:	add	x0, x0, #0x1
    86b4:	str	x0, [x19]
    86b8:	b	868c <PySequence_Fast@plt+0x43fc>
    86bc:	mov	x19, #0x0                   	// #0
    86c0:	b	868c <PySequence_Fast@plt+0x43fc>
    86c4:	stp	x29, x30, [sp, #-80]!
    86c8:	mov	x29, sp
    86cc:	stp	x19, x20, [sp, #16]
    86d0:	stp	x21, x22, [sp, #32]
    86d4:	mov	x22, x0
    86d8:	mov	x0, x1
    86dc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    86e0:	add	x1, x1, #0xb2f
    86e4:	stp	x23, x24, [sp, #48]
    86e8:	str	x25, [sp, #64]
    86ec:	bl	3d40 <PyObject_GetAttrString@plt>
    86f0:	cbz	x0, 87e4 <PySequence_Fast@plt+0x4554>
    86f4:	adrp	x24, 1c000 <PyInit__elementtree@@Base+0x11c04>
    86f8:	adrp	x25, 1c000 <PyInit__elementtree@@Base+0x11c04>
    86fc:	adrp	x23, a000 <PySequence_Fast@plt+0x5d70>
    8700:	mov	x20, x0
    8704:	ldr	x24, [x24, #4032]
    8708:	add	x23, x23, #0x818
    870c:	ldr	x25, [x25, #3912]
    8710:	mov	x1, x23
    8714:	mov	x0, x20
    8718:	mov	w2, #0x10000               	// #65536
    871c:	bl	3df0 <_PyObject_CallFunction_SizeT@plt>
    8720:	mov	x19, x0
    8724:	cbnz	x0, 8734 <PySequence_Fast@plt+0x44a4>
    8728:	mov	x0, x20
    872c:	bl	536c <PySequence_Fast@plt+0x10dc>
    8730:	b	87e8 <PySequence_Fast@plt+0x4558>
    8734:	ldr	x1, [x0, #8]
    8738:	cmp	x1, x24
    873c:	b.ne	8804 <PySequence_Fast@plt+0x4574>  // b.any
    8740:	ldr	x1, [x0, #16]
    8744:	cbnz	x1, 87b8 <PySequence_Fast@plt+0x4528>
    8748:	bl	536c <PySequence_Fast@plt+0x10dc>
    874c:	mov	x0, x20
    8750:	bl	536c <PySequence_Fast@plt+0x10dc>
    8754:	add	x0, x22, #0x10
    8758:	mov	w3, #0x1                   	// #1
    875c:	mov	w2, #0x0                   	// #0
    8760:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8764:	add	x1, x1, #0x779
    8768:	bl	8600 <PySequence_Fast@plt+0x4370>
    876c:	mov	x19, x0
    8770:	cbz	x0, 87e4 <PySequence_Fast@plt+0x4554>
    8774:	ldr	x2, [x22, #24]
    8778:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    877c:	add	x1, x1, #0x328
    8780:	add	x1, x1, #0x1a0
    8784:	ldr	x2, [x2, #8]
    8788:	cmp	x2, x1
    878c:	b.ne	87e8 <PySequence_Fast@plt+0x4558>  // b.any
    8790:	bl	536c <PySequence_Fast@plt+0x10dc>
    8794:	ldr	x0, [x22, #24]
    8798:	ldr	x19, [x0, #16]
    879c:	cbnz	x19, 87a8 <PySequence_Fast@plt+0x4518>
    87a0:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    87a4:	ldr	x19, [x19, #3976]
    87a8:	ldr	x0, [x19]
    87ac:	add	x0, x0, #0x1
    87b0:	str	x0, [x19]
    87b4:	b	87e8 <PySequence_Fast@plt+0x4558>
    87b8:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    87bc:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    87c0:	add	x2, x2, #0xb34
    87c4:	add	x1, x1, #0xb42
    87c8:	bl	3e60 <PyUnicode_AsEncodedString@plt>
    87cc:	mov	x21, x0
    87d0:	mov	x0, x19
    87d4:	bl	536c <PySequence_Fast@plt+0x10dc>
    87d8:	cbnz	x21, 8820 <PySequence_Fast@plt+0x4590>
    87dc:	mov	x0, x20
    87e0:	bl	536c <PySequence_Fast@plt+0x10dc>
    87e4:	mov	x19, #0x0                   	// #0
    87e8:	mov	x0, x19
    87ec:	ldp	x19, x20, [sp, #16]
    87f0:	ldp	x21, x22, [sp, #32]
    87f4:	ldp	x23, x24, [sp, #48]
    87f8:	ldr	x25, [sp, #64]
    87fc:	ldp	x29, x30, [sp], #80
    8800:	ret
    8804:	cmp	x1, x25
    8808:	b.eq	8814 <PySequence_Fast@plt+0x4584>  // b.none
    880c:	mov	x0, x19
    8810:	b	8748 <PySequence_Fast@plt+0x44b8>
    8814:	ldr	x0, [x0, #16]
    8818:	cbz	x0, 880c <PySequence_Fast@plt+0x457c>
    881c:	mov	x21, x19
    8820:	ldr	x2, [x21, #16]
    8824:	mov	x0, #0x7fffffff            	// #2147483647
    8828:	cmp	x2, x0
    882c:	b.le	885c <PySequence_Fast@plt+0x45cc>
    8830:	mov	x0, x21
    8834:	bl	536c <PySequence_Fast@plt+0x10dc>
    8838:	mov	x0, x20
    883c:	bl	536c <PySequence_Fast@plt+0x10dc>
    8840:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8844:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    8848:	add	x1, x1, #0xb48
    884c:	ldr	x0, [x0, #3968]
    8850:	ldr	x0, [x0]
    8854:	bl	3e20 <PyErr_SetString@plt>
    8858:	b	87e4 <PySequence_Fast@plt+0x4554>
    885c:	add	x1, x21, #0x20
    8860:	mov	w3, #0x0                   	// #0
    8864:	add	x0, x22, #0x10
    8868:	bl	8600 <PySequence_Fast@plt+0x4370>
    886c:	mov	x19, x0
    8870:	mov	x0, x21
    8874:	bl	536c <PySequence_Fast@plt+0x10dc>
    8878:	cbz	x19, 8728 <PySequence_Fast@plt+0x4498>
    887c:	mov	x0, x19
    8880:	bl	536c <PySequence_Fast@plt+0x10dc>
    8884:	b	8710 <PySequence_Fast@plt+0x4480>
    8888:	stp	x29, x30, [sp, #-128]!
    888c:	mov	x29, sp
    8890:	str	x21, [sp, #32]
    8894:	mov	x21, x0
    8898:	mov	x0, x1
    889c:	stp	x19, x20, [sp, #16]
    88a0:	add	x20, sp, #0x30
    88a4:	ldr	x1, [x1, #8]
    88a8:	ldr	x1, [x1, #168]
    88ac:	tbz	w1, #28, 8938 <PySequence_Fast@plt+0x46a8>
    88b0:	mov	x1, x20
    88b4:	bl	41c0 <PyUnicode_AsUTF8AndSize@plt>
    88b8:	mov	x19, x0
    88bc:	cbz	x0, 8924 <PySequence_Fast@plt+0x4694>
    88c0:	ldr	x1, [sp, #48]
    88c4:	mov	x0, #0x7fffffff            	// #2147483647
    88c8:	cmp	x1, x0
    88cc:	b.le	88f0 <PySequence_Fast@plt+0x4660>
    88d0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    88d4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    88d8:	add	x1, x1, #0xb48
    88dc:	ldr	x0, [x0, #3968]
    88e0:	ldr	x0, [x0]
    88e4:	bl	3e20 <PyErr_SetString@plt>
    88e8:	mov	x19, #0x0                   	// #0
    88ec:	b	8924 <PySequence_Fast@plt+0x4694>
    88f0:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    88f4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    88f8:	add	x1, x1, #0xb42
    88fc:	ldr	x0, [x0, #1080]
    8900:	ldr	x2, [x0, #152]
    8904:	ldr	x0, [x21, #16]!
    8908:	blr	x2
    890c:	ldr	w2, [sp, #48]
    8910:	mov	x1, x19
    8914:	mov	x0, x21
    8918:	mov	w3, #0x0                   	// #0
    891c:	bl	8600 <PySequence_Fast@plt+0x4370>
    8920:	mov	x19, x0
    8924:	mov	x0, x19
    8928:	ldp	x19, x20, [sp, #16]
    892c:	ldr	x21, [sp, #32]
    8930:	ldp	x29, x30, [sp], #128
    8934:	ret
    8938:	mov	x1, x20
    893c:	mov	w2, #0x0                   	// #0
    8940:	bl	40f0 <PyObject_GetBuffer@plt>
    8944:	tbnz	w0, #31, 88e8 <PySequence_Fast@plt+0x4658>
    8948:	ldr	x2, [sp, #64]
    894c:	mov	x0, #0x7fffffff            	// #2147483647
    8950:	cmp	x2, x0
    8954:	b.le	8964 <PySequence_Fast@plt+0x46d4>
    8958:	mov	x0, x20
    895c:	bl	3d20 <PyBuffer_Release@plt>
    8960:	b	88d0 <PySequence_Fast@plt+0x4640>
    8964:	ldr	x1, [sp, #48]
    8968:	mov	w3, #0x0                   	// #0
    896c:	add	x0, x21, #0x10
    8970:	bl	8600 <PySequence_Fast@plt+0x4370>
    8974:	mov	x19, x0
    8978:	mov	x0, x20
    897c:	bl	3d20 <PyBuffer_Release@plt>
    8980:	b	8924 <PySequence_Fast@plt+0x4694>
    8984:	stp	x29, x30, [sp, #-64]!
    8988:	mov	x29, sp
    898c:	stp	x19, x20, [sp, #16]
    8990:	mov	x20, x0
    8994:	mov	x19, x1
    8998:	str	x21, [sp, #32]
    899c:	mov	x21, x2
    89a0:	stp	x1, x2, [sp, #48]
    89a4:	bl	727c <PySequence_Fast@plt+0x2fec>
    89a8:	tbz	w0, #31, 89c4 <PySequence_Fast@plt+0x4734>
    89ac:	mov	x19, #0x0                   	// #0
    89b0:	mov	x0, x19
    89b4:	ldp	x19, x20, [sp, #16]
    89b8:	ldr	x21, [sp, #32]
    89bc:	ldp	x29, x30, [sp], #64
    89c0:	ret
    89c4:	ldr	x0, [x20, #88]
    89c8:	cbz	x0, 8a4c <PySequence_Fast@plt+0x47bc>
    89cc:	add	x1, sp, #0x30
    89d0:	mov	x2, #0x2                   	// #2
    89d4:	bl	8384 <PySequence_Fast@plt+0x40f4>
    89d8:	mov	x19, x0
    89dc:	cbz	x0, 89ac <PySequence_Fast@plt+0x471c>
    89e0:	ldrb	w0, [x20, #153]
    89e4:	cbz	w0, 8a20 <PySequence_Fast@plt+0x4790>
    89e8:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    89ec:	ldr	x0, [x20, #24]
    89f0:	ldr	x1, [x1, #3976]
    89f4:	cmp	x0, x1
    89f8:	b.eq	8a20 <PySequence_Fast@plt+0x4790>  // b.none
    89fc:	mov	x1, x19
    8a00:	bl	5524 <PySequence_Fast@plt+0x1294>
    8a04:	tbnz	w0, #31, 8a40 <PySequence_Fast@plt+0x47b0>
    8a08:	ldr	x0, [x19]
    8a0c:	add	x0, x0, #0x1
    8a10:	str	x0, [x19]
    8a14:	ldr	x0, [x20, #40]
    8a18:	str	x19, [x20, #40]
    8a1c:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8a20:	ldr	x0, [x20, #96]
    8a24:	cbz	x0, 89b0 <PySequence_Fast@plt+0x4720>
    8a28:	ldr	x1, [x20, #144]
    8a2c:	cbz	x1, 89b0 <PySequence_Fast@plt+0x4720>
    8a30:	mov	x2, x19
    8a34:	add	x0, x20, #0x60
    8a38:	bl	8388 <PySequence_Fast@plt+0x40f8>
    8a3c:	tbz	w0, #31, 89b0 <PySequence_Fast@plt+0x4720>
    8a40:	mov	x0, x19
    8a44:	bl	536c <PySequence_Fast@plt+0x10dc>
    8a48:	b	89ac <PySequence_Fast@plt+0x471c>
    8a4c:	mov	x1, x19
    8a50:	mov	x2, x21
    8a54:	mov	x0, #0x2                   	// #2
    8a58:	bl	4260 <PyTuple_Pack@plt>
    8a5c:	mov	x19, x0
    8a60:	cbnz	x0, 8a20 <PySequence_Fast@plt+0x4790>
    8a64:	b	89ac <PySequence_Fast@plt+0x471c>
    8a68:	stp	x29, x30, [sp, #-48]!
    8a6c:	mov	x29, sp
    8a70:	stp	x19, x20, [sp, #16]
    8a74:	mov	x20, x1
    8a78:	mov	x19, x2
    8a7c:	str	x21, [sp, #32]
    8a80:	mov	x21, x0
    8a84:	sub	x0, x2, #0x1
    8a88:	cmp	x0, #0x1
    8a8c:	b.hi	8aa8 <PySequence_Fast@plt+0x4818>  // b.pmore
    8a90:	cmp	x19, #0x1
    8a94:	ldr	x1, [x20]
    8a98:	b.gt	8ad8 <PySequence_Fast@plt+0x4848>
    8a9c:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8aa0:	ldr	x2, [x2, #3976]
    8aa4:	b	8adc <PySequence_Fast@plt+0x484c>
    8aa8:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8aac:	mov	x1, x19
    8ab0:	add	x0, x0, #0x817
    8ab4:	mov	x3, #0x2                   	// #2
    8ab8:	mov	x2, #0x1                   	// #1
    8abc:	bl	3fb0 <_PyArg_CheckPositional@plt>
    8ac0:	cbnz	w0, 8a90 <PySequence_Fast@plt+0x4800>
    8ac4:	mov	x0, #0x0                   	// #0
    8ac8:	ldp	x19, x20, [sp, #16]
    8acc:	ldr	x21, [sp, #32]
    8ad0:	ldp	x29, x30, [sp], #48
    8ad4:	ret
    8ad8:	ldr	x2, [x20, #8]
    8adc:	mov	x0, x21
    8ae0:	ldp	x19, x20, [sp, #16]
    8ae4:	ldr	x21, [sp, #32]
    8ae8:	ldp	x29, x30, [sp], #48
    8aec:	b	8984 <PySequence_Fast@plt+0x46f4>
    8af0:	stp	x29, x30, [sp, #-64]!
    8af4:	mov	x29, sp
    8af8:	stp	x19, x20, [sp, #16]
    8afc:	mov	x19, x1
    8b00:	mov	x20, x2
    8b04:	stp	x21, x22, [sp, #32]
    8b08:	mov	x21, x0
    8b0c:	bl	3fd0 <PyErr_Occurred@plt>
    8b10:	cbnz	x0, 8bb4 <PySequence_Fast@plt+0x4924>
    8b14:	ldr	x22, [x21, #24]
    8b18:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8b1c:	add	x0, x0, #0x328
    8b20:	add	x0, x0, #0x1a0
    8b24:	ldr	x1, [x22, #8]
    8b28:	cmp	x1, x0
    8b2c:	b.ne	8bc4 <PySequence_Fast@plt+0x4934>  // b.any
    8b30:	ldr	x0, [x22, #96]
    8b34:	cbz	x0, 8b40 <PySequence_Fast@plt+0x48b0>
    8b38:	ldr	x0, [x22, #144]
    8b3c:	cbnz	x0, 8b48 <PySequence_Fast@plt+0x48b8>
    8b40:	ldrb	w0, [x22, #153]
    8b44:	cbz	w0, 8bb4 <PySequence_Fast@plt+0x4924>
    8b48:	mov	x0, x19
    8b4c:	adrp	x21, a000 <PySequence_Fast@plt+0x5d70>
    8b50:	bl	3cb0 <strlen@plt>
    8b54:	add	x21, x21, #0x902
    8b58:	mov	x1, x0
    8b5c:	mov	x2, x21
    8b60:	mov	x0, x19
    8b64:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8b68:	mov	x19, x0
    8b6c:	cbz	x0, 8c2c <PySequence_Fast@plt+0x499c>
    8b70:	mov	x0, x20
    8b74:	bl	3cb0 <strlen@plt>
    8b78:	mov	x2, x21
    8b7c:	mov	x1, x0
    8b80:	mov	x0, x20
    8b84:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8b88:	mov	x20, x0
    8b8c:	cbz	x0, 8c30 <PySequence_Fast@plt+0x49a0>
    8b90:	mov	x2, x0
    8b94:	mov	x1, x19
    8b98:	mov	x0, x22
    8b9c:	bl	8984 <PySequence_Fast@plt+0x46f4>
    8ba0:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8ba4:	mov	x0, x20
    8ba8:	bl	536c <PySequence_Fast@plt+0x10dc>
    8bac:	mov	x0, x19
    8bb0:	bl	536c <PySequence_Fast@plt+0x10dc>
    8bb4:	ldp	x19, x20, [sp, #16]
    8bb8:	ldp	x21, x22, [sp, #32]
    8bbc:	ldp	x29, x30, [sp], #64
    8bc0:	ret
    8bc4:	ldr	x0, [x21, #96]
    8bc8:	cbz	x0, 8bb4 <PySequence_Fast@plt+0x4924>
    8bcc:	mov	x0, x19
    8bd0:	adrp	x22, a000 <PySequence_Fast@plt+0x5d70>
    8bd4:	bl	3cb0 <strlen@plt>
    8bd8:	add	x22, x22, #0x902
    8bdc:	mov	x1, x0
    8be0:	mov	x2, x22
    8be4:	mov	x0, x19
    8be8:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8bec:	mov	x19, x0
    8bf0:	cbz	x0, 8c2c <PySequence_Fast@plt+0x499c>
    8bf4:	mov	x0, x20
    8bf8:	bl	3cb0 <strlen@plt>
    8bfc:	mov	x2, x22
    8c00:	mov	x1, x0
    8c04:	mov	x0, x20
    8c08:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8c0c:	mov	x20, x0
    8c10:	cbz	x0, 8c30 <PySequence_Fast@plt+0x49a0>
    8c14:	ldr	x0, [x21, #96]
    8c18:	add	x1, sp, #0x30
    8c1c:	mov	x2, #0x2                   	// #2
    8c20:	stp	x19, x20, [sp, #48]
    8c24:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8c28:	b	8ba0 <PySequence_Fast@plt+0x4910>
    8c2c:	mov	x19, #0x0                   	// #0
    8c30:	mov	x0, x19
    8c34:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8c38:	b	8bb4 <PySequence_Fast@plt+0x4924>
    8c3c:	stp	x29, x30, [sp, #-48]!
    8c40:	mov	x29, sp
    8c44:	stp	x19, x20, [sp, #16]
    8c48:	mov	x20, x0
    8c4c:	str	x1, [sp, #40]
    8c50:	bl	727c <PySequence_Fast@plt+0x2fec>
    8c54:	tbz	w0, #31, 8c6c <PySequence_Fast@plt+0x49dc>
    8c58:	mov	x19, #0x0                   	// #0
    8c5c:	mov	x0, x19
    8c60:	ldp	x19, x20, [sp, #16]
    8c64:	ldp	x29, x30, [sp], #48
    8c68:	ret
    8c6c:	ldr	x0, [x20, #80]
    8c70:	cbz	x0, 8cf4 <PySequence_Fast@plt+0x4a64>
    8c74:	add	x1, sp, #0x28
    8c78:	mov	x2, #0x1                   	// #1
    8c7c:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8c80:	mov	x19, x0
    8c84:	cbz	x0, 8c58 <PySequence_Fast@plt+0x49c8>
    8c88:	ldrb	w0, [x20, #152]
    8c8c:	cbz	w0, 8cc8 <PySequence_Fast@plt+0x4a38>
    8c90:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    8c94:	ldr	x0, [x20, #24]
    8c98:	ldr	x1, [x1, #3976]
    8c9c:	cmp	x0, x1
    8ca0:	b.eq	8cc8 <PySequence_Fast@plt+0x4a38>  // b.none
    8ca4:	mov	x1, x19
    8ca8:	bl	5524 <PySequence_Fast@plt+0x1294>
    8cac:	tbnz	w0, #31, 8ce8 <PySequence_Fast@plt+0x4a58>
    8cb0:	ldr	x0, [x19]
    8cb4:	add	x0, x0, #0x1
    8cb8:	str	x0, [x19]
    8cbc:	ldr	x0, [x20, #40]
    8cc0:	str	x19, [x20, #40]
    8cc4:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8cc8:	ldr	x0, [x20, #96]
    8ccc:	cbz	x0, 8c5c <PySequence_Fast@plt+0x49cc>
    8cd0:	ldr	x1, [x20, #136]
    8cd4:	cbz	x1, 8c5c <PySequence_Fast@plt+0x49cc>
    8cd8:	mov	x2, x19
    8cdc:	add	x0, x20, #0x60
    8ce0:	bl	8388 <PySequence_Fast@plt+0x40f8>
    8ce4:	tbz	w0, #31, 8c5c <PySequence_Fast@plt+0x49cc>
    8ce8:	mov	x0, x19
    8cec:	bl	536c <PySequence_Fast@plt+0x10dc>
    8cf0:	b	8c58 <PySequence_Fast@plt+0x49c8>
    8cf4:	ldr	x19, [sp, #40]
    8cf8:	ldr	x0, [x19]
    8cfc:	add	x0, x0, #0x1
    8d00:	str	x0, [x19]
    8d04:	b	8cc8 <PySequence_Fast@plt+0x4a38>
    8d08:	b	8c3c <PySequence_Fast@plt+0x49ac>
    8d0c:	stp	x29, x30, [sp, #-64]!
    8d10:	mov	x29, sp
    8d14:	stp	x19, x20, [sp, #16]
    8d18:	mov	x20, x0
    8d1c:	mov	x19, x1
    8d20:	str	x21, [sp, #32]
    8d24:	bl	3fd0 <PyErr_Occurred@plt>
    8d28:	cbnz	x0, 8d84 <PySequence_Fast@plt+0x4af4>
    8d2c:	ldr	x21, [x20, #24]
    8d30:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8d34:	add	x0, x0, #0x328
    8d38:	add	x0, x0, #0x1a0
    8d3c:	ldr	x1, [x21, #8]
    8d40:	cmp	x1, x0
    8d44:	b.ne	8d94 <PySequence_Fast@plt+0x4b04>  // b.any
    8d48:	mov	x0, x19
    8d4c:	bl	3cb0 <strlen@plt>
    8d50:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    8d54:	mov	x1, x0
    8d58:	add	x2, x2, #0x902
    8d5c:	mov	x0, x19
    8d60:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8d64:	str	x0, [sp, #56]
    8d68:	mov	x1, x0
    8d6c:	cbz	x0, 8d84 <PySequence_Fast@plt+0x4af4>
    8d70:	mov	x0, x21
    8d74:	bl	8c3c <PySequence_Fast@plt+0x49ac>
    8d78:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8d7c:	ldr	x0, [sp, #56]
    8d80:	bl	536c <PySequence_Fast@plt+0x10dc>
    8d84:	ldp	x19, x20, [sp, #16]
    8d88:	ldr	x21, [sp, #32]
    8d8c:	ldp	x29, x30, [sp], #64
    8d90:	ret
    8d94:	ldr	x0, [x20, #88]
    8d98:	cbz	x0, 8d84 <PySequence_Fast@plt+0x4af4>
    8d9c:	mov	x0, x19
    8da0:	bl	3cb0 <strlen@plt>
    8da4:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    8da8:	mov	x1, x0
    8dac:	add	x2, x2, #0x902
    8db0:	mov	x0, x19
    8db4:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8db8:	str	x0, [sp, #56]
    8dbc:	cbz	x0, 8d84 <PySequence_Fast@plt+0x4af4>
    8dc0:	ldr	x0, [x20, #88]
    8dc4:	add	x1, sp, #0x38
    8dc8:	mov	x2, #0x1                   	// #1
    8dcc:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8dd0:	b	8d78 <PySequence_Fast@plt+0x4ae8>
    8dd4:	stp	x29, x30, [sp, #-64]!
    8dd8:	mov	x29, sp
    8ddc:	stp	x19, x20, [sp, #16]
    8de0:	mov	x19, x0
    8de4:	mov	x20, x1
    8de8:	str	x21, [sp, #32]
    8dec:	mov	w21, w2
    8df0:	bl	3fd0 <PyErr_Occurred@plt>
    8df4:	cbnz	x0, 8e4c <PySequence_Fast@plt+0x4bbc>
    8df8:	sxtw	x1, w21
    8dfc:	mov	x0, x20
    8e00:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    8e04:	add	x2, x2, #0x902
    8e08:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8e0c:	str	x0, [sp, #56]
    8e10:	mov	x1, x0
    8e14:	cbz	x0, 8e4c <PySequence_Fast@plt+0x4bbc>
    8e18:	ldr	x0, [x19, #24]
    8e1c:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8e20:	add	x2, x2, #0x328
    8e24:	add	x2, x2, #0x1a0
    8e28:	ldr	x3, [x0, #8]
    8e2c:	cmp	x3, x2
    8e30:	b.ne	8e5c <PySequence_Fast@plt+0x4bcc>  // b.any
    8e34:	bl	47a8 <PySequence_Fast@plt+0x518>
    8e38:	mov	x19, x0
    8e3c:	ldr	x0, [sp, #56]
    8e40:	bl	536c <PySequence_Fast@plt+0x10dc>
    8e44:	mov	x0, x19
    8e48:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8e4c:	ldp	x19, x20, [sp, #16]
    8e50:	ldr	x21, [sp, #32]
    8e54:	ldp	x29, x30, [sp], #64
    8e58:	ret
    8e5c:	ldr	x19, [x19, #72]
    8e60:	cbz	x19, 8e3c <PySequence_Fast@plt+0x4bac>
    8e64:	add	x1, sp, #0x38
    8e68:	mov	x0, x19
    8e6c:	mov	x2, #0x1                   	// #1
    8e70:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8e74:	b	8e38 <PySequence_Fast@plt+0x4ba8>
    8e78:	stp	x29, x30, [sp, #-208]!
    8e7c:	mov	x29, sp
    8e80:	stp	x19, x20, [sp, #16]
    8e84:	sxtw	x19, w2
    8e88:	cmp	w19, #0x1
    8e8c:	stp	x21, x22, [sp, #32]
    8e90:	str	x23, [sp, #48]
    8e94:	b.le	8f18 <PySequence_Fast@plt+0x4c88>
    8e98:	mov	x20, x0
    8e9c:	ldrb	w0, [x1]
    8ea0:	mov	x22, x1
    8ea4:	cmp	w0, #0x26
    8ea8:	b.ne	8f18 <PySequence_Fast@plt+0x4c88>  // b.any
    8eac:	bl	3fd0 <PyErr_Occurred@plt>
    8eb0:	cbnz	x0, 8f18 <PySequence_Fast@plt+0x4c88>
    8eb4:	sub	w1, w19, #0x2
    8eb8:	add	x0, x22, #0x1
    8ebc:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    8ec0:	add	x2, x2, #0x902
    8ec4:	sxtw	x1, w1
    8ec8:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    8ecc:	mov	x21, x0
    8ed0:	cbz	x0, 8f18 <PySequence_Fast@plt+0x4c88>
    8ed4:	mov	x1, x0
    8ed8:	ldr	x0, [x20, #32]
    8edc:	bl	4280 <PyDict_GetItemWithError@plt>
    8ee0:	str	x0, [sp, #72]
    8ee4:	mov	x1, x0
    8ee8:	cbz	x0, 8f44 <PySequence_Fast@plt+0x4cb4>
    8eec:	ldr	x0, [x20, #24]
    8ef0:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8ef4:	add	x2, x2, #0x328
    8ef8:	add	x2, x2, #0x1a0
    8efc:	ldr	x3, [x0, #8]
    8f00:	cmp	x3, x2
    8f04:	b.ne	8f2c <PySequence_Fast@plt+0x4c9c>  // b.any
    8f08:	bl	47a8 <PySequence_Fast@plt+0x518>
    8f0c:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    8f10:	mov	x0, x21
    8f14:	bl	536c <PySequence_Fast@plt+0x10dc>
    8f18:	ldp	x19, x20, [sp, #16]
    8f1c:	ldp	x21, x22, [sp, #32]
    8f20:	ldr	x23, [sp, #48]
    8f24:	ldp	x29, x30, [sp], #208
    8f28:	ret
    8f2c:	ldr	x0, [x20, #72]
    8f30:	cbz	x0, 8f0c <PySequence_Fast@plt+0x4c7c>
    8f34:	add	x1, sp, #0x48
    8f38:	mov	x2, #0x1                   	// #1
    8f3c:	bl	8384 <PySequence_Fast@plt+0x40f4>
    8f40:	b	8f0c <PySequence_Fast@plt+0x4c7c>
    8f44:	bl	3fd0 <PyErr_Occurred@plt>
    8f48:	cbnz	x0, 8f10 <PySequence_Fast@plt+0x4c80>
    8f4c:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    8f50:	add	x0, x0, #0xf40
    8f54:	mov	w1, #0x0                   	// #0
    8f58:	add	x23, sp, #0x50
    8f5c:	ldp	x2, x3, [x0]
    8f60:	stp	x2, x3, [sp, #80]
    8f64:	ldrh	w0, [x0, #16]
    8f68:	strh	w0, [sp, #96]
    8f6c:	add	x0, sp, #0x62
    8f70:	mov	x2, #0x6e                  	// #110
    8f74:	bl	3ea0 <memset@plt>
    8f78:	cmp	w19, #0x64
    8f7c:	mov	x0, x23
    8f80:	mov	x2, #0x64                  	// #100
    8f84:	csel	x2, x19, x2, le
    8f88:	mov	x19, x23
    8f8c:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x13c04>
    8f90:	mov	x1, x22
    8f94:	bl	4120 <strncat@plt>
    8f98:	ldr	x0, [x23, #1080]
    8f9c:	ldr	x1, [x0, #48]
    8fa0:	ldr	x0, [x20, #16]
    8fa4:	blr	x1
    8fa8:	mov	x22, x0
    8fac:	ldr	x0, [x23, #1080]
    8fb0:	ldr	x1, [x0, #40]
    8fb4:	ldr	x0, [x20, #16]
    8fb8:	blr	x1
    8fbc:	mov	x2, x0
    8fc0:	mov	x3, x19
    8fc4:	mov	x1, x22
    8fc8:	mov	w0, #0xb                   	// #11
    8fcc:	bl	84b8 <PySequence_Fast@plt+0x4228>
    8fd0:	b	8f10 <PySequence_Fast@plt+0x4c80>
    8fd4:	stp	x29, x30, [sp, #-64]!
    8fd8:	mov	x29, sp
    8fdc:	stp	x19, x20, [sp, #16]
    8fe0:	mov	x20, x0
    8fe4:	str	x21, [sp, #32]
    8fe8:	mov	x21, x1
    8fec:	bl	3fd0 <PyErr_Occurred@plt>
    8ff0:	cbnz	x0, 9024 <PySequence_Fast@plt+0x4d94>
    8ff4:	mov	x19, x0
    8ff8:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    8ffc:	ldr	x0, [x20, #24]
    9000:	add	x2, x2, #0x328
    9004:	add	x2, x2, #0x1a0
    9008:	ldr	x1, [x0, #8]
    900c:	cmp	x1, x2
    9010:	b.ne	9034 <PySequence_Fast@plt+0x4da4>  // b.any
    9014:	bl	83f4 <PySequence_Fast@plt+0x4164>
    9018:	mov	x19, x0
    901c:	mov	x0, x19
    9020:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    9024:	ldp	x19, x20, [sp, #16]
    9028:	ldr	x21, [sp, #32]
    902c:	ldp	x29, x30, [sp], #64
    9030:	ret
    9034:	ldr	x0, [x20, #80]
    9038:	cbz	x0, 901c <PySequence_Fast@plt+0x4d8c>
    903c:	mov	x1, x21
    9040:	add	x0, x20, #0x28
    9044:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    9048:	str	x0, [sp, #56]
    904c:	cbz	x0, 901c <PySequence_Fast@plt+0x4d8c>
    9050:	ldr	x0, [x20, #80]
    9054:	add	x1, sp, #0x38
    9058:	mov	x2, #0x1                   	// #1
    905c:	bl	8384 <PySequence_Fast@plt+0x40f4>
    9060:	mov	x19, x0
    9064:	ldr	x0, [sp, #56]
    9068:	bl	536c <PySequence_Fast@plt+0x10dc>
    906c:	b	901c <PySequence_Fast@plt+0x4d8c>
    9070:	stp	x29, x30, [sp, #-64]!
    9074:	mov	x29, sp
    9078:	stp	x19, x20, [sp, #16]
    907c:	mov	x20, x1
    9080:	str	x21, [sp, #32]
    9084:	mov	x21, x0
    9088:	bl	3fd0 <PyErr_Occurred@plt>
    908c:	cbnz	x0, 90fc <PySequence_Fast@plt+0x4e6c>
    9090:	mov	x19, x0
    9094:	cbnz	x20, 90a0 <PySequence_Fast@plt+0x4e10>
    9098:	adrp	x20, a000 <PySequence_Fast@plt+0x5d70>
    909c:	add	x20, x20, #0x779
    90a0:	ldr	x0, [x21, #24]
    90a4:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    90a8:	add	x1, x1, #0x328
    90ac:	add	x1, x1, #0x1a0
    90b0:	ldr	x2, [x0, #8]
    90b4:	cmp	x2, x1
    90b8:	b.ne	910c <PySequence_Fast@plt+0x4e7c>  // b.any
    90bc:	ldr	x1, [x0, #96]
    90c0:	cbz	x1, 90f4 <PySequence_Fast@plt+0x4e64>
    90c4:	ldr	x1, [x0, #128]
    90c8:	cbz	x1, 90f4 <PySequence_Fast@plt+0x4e64>
    90cc:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    90d0:	add	x0, x0, #0x60
    90d4:	ldr	x20, [x20, #3976]
    90d8:	mov	x2, x20
    90dc:	bl	8388 <PySequence_Fast@plt+0x40f8>
    90e0:	tbnz	w0, #31, 90f4 <PySequence_Fast@plt+0x4e64>
    90e4:	ldr	x0, [x20]
    90e8:	mov	x19, x20
    90ec:	add	x0, x0, #0x1
    90f0:	str	x0, [x20]
    90f4:	mov	x0, x19
    90f8:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    90fc:	ldp	x19, x20, [sp, #16]
    9100:	ldr	x21, [sp, #32]
    9104:	ldp	x29, x30, [sp], #64
    9108:	ret
    910c:	ldr	x0, [x21, #56]
    9110:	cbz	x0, 90f4 <PySequence_Fast@plt+0x4e64>
    9114:	mov	x0, x20
    9118:	bl	3cb0 <strlen@plt>
    911c:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    9120:	mov	x1, x0
    9124:	add	x2, x2, #0x902
    9128:	mov	x0, x20
    912c:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    9130:	str	x0, [sp, #56]
    9134:	cbz	x0, 90fc <PySequence_Fast@plt+0x4e6c>
    9138:	ldr	x0, [x21, #56]
    913c:	add	x1, sp, #0x38
    9140:	mov	x2, #0x1                   	// #1
    9144:	bl	8384 <PySequence_Fast@plt+0x40f4>
    9148:	mov	x19, x0
    914c:	ldr	x0, [sp, #56]
    9150:	bl	536c <PySequence_Fast@plt+0x10dc>
    9154:	b	90f4 <PySequence_Fast@plt+0x4e64>
    9158:	stp	x29, x30, [sp, #-80]!
    915c:	mov	x29, sp
    9160:	stp	x19, x20, [sp, #16]
    9164:	mov	x20, x2
    9168:	stp	x21, x22, [sp, #32]
    916c:	mov	x21, x1
    9170:	str	x23, [sp, #48]
    9174:	mov	x23, x0
    9178:	bl	3fd0 <PyErr_Occurred@plt>
    917c:	cbnz	x0, 9214 <PySequence_Fast@plt+0x4f84>
    9180:	cbnz	x20, 918c <PySequence_Fast@plt+0x4efc>
    9184:	adrp	x20, a000 <PySequence_Fast@plt+0x5d70>
    9188:	add	x20, x20, #0x779
    918c:	cbnz	x21, 9198 <PySequence_Fast@plt+0x4f08>
    9190:	adrp	x21, a000 <PySequence_Fast@plt+0x5d70>
    9194:	add	x21, x21, #0x779
    9198:	ldr	x22, [x23, #24]
    919c:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    91a0:	add	x0, x0, #0x328
    91a4:	add	x0, x0, #0x1a0
    91a8:	ldr	x1, [x22, #8]
    91ac:	cmp	x1, x0
    91b0:	b.ne	92ac <PySequence_Fast@plt+0x501c>  // b.any
    91b4:	ldr	x19, [x22, #96]
    91b8:	cbz	x19, 9280 <PySequence_Fast@plt+0x4ff0>
    91bc:	ldr	x19, [x22, #120]
    91c0:	cbz	x19, 9280 <PySequence_Fast@plt+0x4ff0>
    91c4:	mov	x0, x21
    91c8:	adrp	x19, a000 <PySequence_Fast@plt+0x5d70>
    91cc:	bl	3cb0 <strlen@plt>
    91d0:	add	x19, x19, #0x902
    91d4:	mov	x1, x0
    91d8:	mov	x2, x19
    91dc:	mov	x0, x21
    91e0:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    91e4:	mov	x21, x0
    91e8:	cbz	x0, 9214 <PySequence_Fast@plt+0x4f84>
    91ec:	mov	x0, x20
    91f0:	bl	3cb0 <strlen@plt>
    91f4:	mov	x2, x19
    91f8:	mov	x1, x0
    91fc:	mov	x0, x20
    9200:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    9204:	mov	x20, x0
    9208:	cbnz	x0, 9228 <PySequence_Fast@plt+0x4f98>
    920c:	mov	x0, x21
    9210:	bl	536c <PySequence_Fast@plt+0x10dc>
    9214:	ldp	x19, x20, [sp, #16]
    9218:	ldp	x21, x22, [sp, #32]
    921c:	ldr	x23, [sp, #48]
    9220:	ldp	x29, x30, [sp], #80
    9224:	ret
    9228:	ldr	x0, [x22, #96]
    922c:	cbz	x0, 9294 <PySequence_Fast@plt+0x5004>
    9230:	ldr	x0, [x22, #120]
    9234:	cbz	x0, 9294 <PySequence_Fast@plt+0x5004>
    9238:	mov	x2, x20
    923c:	mov	x1, x21
    9240:	mov	x0, #0x2                   	// #2
    9244:	bl	4260 <PyTuple_Pack@plt>
    9248:	mov	x19, x0
    924c:	cbz	x0, 9270 <PySequence_Fast@plt+0x4fe0>
    9250:	ldr	x1, [x22, #120]
    9254:	mov	x2, x0
    9258:	add	x0, x22, #0x60
    925c:	bl	8388 <PySequence_Fast@plt+0x40f8>
    9260:	tbz	w0, #31, 928c <PySequence_Fast@plt+0x4ffc>
    9264:	mov	x0, x19
    9268:	mov	x19, #0x0                   	// #0
    926c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9270:	mov	x0, x20
    9274:	bl	536c <PySequence_Fast@plt+0x10dc>
    9278:	mov	x0, x21
    927c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9280:	mov	x0, x19
    9284:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    9288:	b	9214 <PySequence_Fast@plt+0x4f84>
    928c:	mov	x0, x19
    9290:	bl	536c <PySequence_Fast@plt+0x10dc>
    9294:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9298:	ldr	x19, [x19, #3976]
    929c:	ldr	x0, [x19]
    92a0:	add	x0, x0, #0x1
    92a4:	str	x0, [x19]
    92a8:	b	9270 <PySequence_Fast@plt+0x4fe0>
    92ac:	ldr	x19, [x23, #48]
    92b0:	cbz	x19, 9280 <PySequence_Fast@plt+0x4ff0>
    92b4:	mov	x0, x21
    92b8:	adrp	x19, a000 <PySequence_Fast@plt+0x5d70>
    92bc:	bl	3cb0 <strlen@plt>
    92c0:	add	x19, x19, #0x902
    92c4:	mov	x1, x0
    92c8:	mov	x2, x19
    92cc:	mov	x0, x21
    92d0:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    92d4:	mov	x21, x0
    92d8:	cbz	x0, 9214 <PySequence_Fast@plt+0x4f84>
    92dc:	mov	x0, x20
    92e0:	bl	3cb0 <strlen@plt>
    92e4:	mov	x2, x19
    92e8:	mov	x1, x0
    92ec:	mov	x0, x20
    92f0:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    92f4:	mov	x20, x0
    92f8:	cbz	x0, 920c <PySequence_Fast@plt+0x4f7c>
    92fc:	ldr	x0, [x23, #48]
    9300:	add	x1, sp, #0x40
    9304:	mov	x2, #0x2                   	// #2
    9308:	stp	x21, x20, [sp, #64]
    930c:	bl	8384 <PySequence_Fast@plt+0x40f4>
    9310:	mov	x19, x0
    9314:	b	9270 <PySequence_Fast@plt+0x4fe0>
    9318:	stp	x29, x30, [sp, #-16]!
    931c:	add	x0, x0, #0x20
    9320:	mov	x29, sp
    9324:	bl	7494 <PySequence_Fast@plt+0x3204>
    9328:	cbz	x0, 9338 <PySequence_Fast@plt+0x50a8>
    932c:	ldr	x1, [x0]
    9330:	add	x1, x1, #0x1
    9334:	str	x1, [x0]
    9338:	ldp	x29, x30, [sp], #16
    933c:	ret
    9340:	stp	x29, x30, [sp, #-16]!
    9344:	add	x0, x0, #0x18
    9348:	mov	x29, sp
    934c:	bl	7494 <PySequence_Fast@plt+0x3204>
    9350:	cbz	x0, 9360 <PySequence_Fast@plt+0x50d0>
    9354:	ldr	x1, [x0]
    9358:	add	x1, x1, #0x1
    935c:	str	x1, [x0]
    9360:	ldp	x29, x30, [sp], #16
    9364:	ret
    9368:	ldr	x0, [x0, #16]
    936c:	cbnz	x0, 9378 <PySequence_Fast@plt+0x50e8>
    9370:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9374:	ldr	x0, [x0, #3976]
    9378:	ldr	x1, [x0]
    937c:	add	x1, x1, #0x1
    9380:	str	x1, [x0]
    9384:	ret
    9388:	mov	x1, x0
    938c:	ldr	x0, [x0]
    9390:	cbz	x0, 939c <PySequence_Fast@plt+0x510c>
    9394:	str	xzr, [x1]
    9398:	b	7900 <PySequence_Fast@plt+0x3670>
    939c:	ret
    93a0:	stp	x29, x30, [sp, #-32]!
    93a4:	mov	x29, sp
    93a8:	stp	x19, x20, [sp, #16]
    93ac:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    93b0:	mov	x20, x0
    93b4:	add	x0, x0, #0x28
    93b8:	bl	9388 <PySequence_Fast@plt+0x50f8>
    93bc:	ldr	x19, [x19, #3976]
    93c0:	mov	x1, x19
    93c4:	ldr	x0, [x19]
    93c8:	add	x0, x0, #0x1
    93cc:	str	x0, [x19]
    93d0:	add	x0, x20, #0x18
    93d4:	bl	574c <PySequence_Fast@plt+0x14bc>
    93d8:	ldr	x0, [x19]
    93dc:	mov	x1, x19
    93e0:	add	x0, x0, #0x1
    93e4:	str	x0, [x19]
    93e8:	add	x0, x20, #0x20
    93ec:	bl	574c <PySequence_Fast@plt+0x14bc>
    93f0:	ldr	x0, [x19]
    93f4:	add	x0, x0, #0x1
    93f8:	str	x0, [x19]
    93fc:	mov	x0, x19
    9400:	ldp	x19, x20, [sp, #16]
    9404:	ldp	x29, x30, [sp], #32
    9408:	ret
    940c:	stp	x29, x30, [sp, #-32]!
    9410:	mov	x29, sp
    9414:	str	x19, [sp, #16]
    9418:	mov	x19, x0
    941c:	ldr	x0, [x0, #16]
    9420:	cbz	x0, 942c <PySequence_Fast@plt+0x519c>
    9424:	str	xzr, [x19, #16]
    9428:	bl	536c <PySequence_Fast@plt+0x10dc>
    942c:	ldr	x0, [x19, #24]
    9430:	cbz	x0, 9440 <PySequence_Fast@plt+0x51b0>
    9434:	add	x0, x19, #0x18
    9438:	mov	x1, #0x0                   	// #0
    943c:	bl	574c <PySequence_Fast@plt+0x14bc>
    9440:	ldr	x0, [x19, #32]
    9444:	cbz	x0, 9454 <PySequence_Fast@plt+0x51c4>
    9448:	add	x0, x19, #0x20
    944c:	mov	x1, #0x0                   	// #0
    9450:	bl	574c <PySequence_Fast@plt+0x14bc>
    9454:	add	x0, x19, #0x28
    9458:	bl	9388 <PySequence_Fast@plt+0x50f8>
    945c:	mov	w0, #0x0                   	// #0
    9460:	ldr	x19, [sp, #16]
    9464:	ldp	x29, x30, [sp], #32
    9468:	ret
    946c:	stp	x29, x30, [sp, #-32]!
    9470:	mov	x29, sp
    9474:	stp	x19, x20, [sp, #16]
    9478:	mov	x20, x0
    947c:	bl	4270 <PyObject_GC_UnTrack@plt>
    9480:	ldr	x0, [x20, #8]
    9484:	ldr	x1, [x0, #48]
    9488:	adrp	x0, 9000 <PySequence_Fast@plt+0x4d70>
    948c:	add	x0, x0, #0x46c
    9490:	cmp	x1, x0
    9494:	b.ne	9518 <PySequence_Fast@plt+0x5288>  // b.any
    9498:	bl	3fa0 <PyThreadState_Get@plt>
    949c:	mov	x19, x0
    94a0:	ldr	w0, [x0, #184]
    94a4:	cmp	w0, #0x31
    94a8:	b.le	94bc <PySequence_Fast@plt+0x522c>
    94ac:	mov	x0, x20
    94b0:	ldp	x19, x20, [sp, #16]
    94b4:	ldp	x29, x30, [sp], #32
    94b8:	b	4090 <_PyTrash_thread_deposit_object@plt>
    94bc:	add	w0, w0, #0x1
    94c0:	str	w0, [x19, #184]
    94c4:	ldr	x0, [x20, #48]
    94c8:	cbz	x0, 94d4 <PySequence_Fast@plt+0x5244>
    94cc:	mov	x0, x20
    94d0:	bl	3cf0 <PyObject_ClearWeakRefs@plt>
    94d4:	mov	x0, x20
    94d8:	bl	940c <PySequence_Fast@plt+0x517c>
    94dc:	ldr	x0, [x20, #8]
    94e0:	ldr	x1, [x0, #320]
    94e4:	mov	x0, x20
    94e8:	blr	x1
    94ec:	cbz	x19, 9520 <PySequence_Fast@plt+0x5290>
    94f0:	ldr	w0, [x19, #184]
    94f4:	ldr	x1, [x19, #192]
    94f8:	sub	w0, w0, #0x1
    94fc:	str	w0, [x19, #184]
    9500:	cbz	x1, 9520 <PySequence_Fast@plt+0x5290>
    9504:	cmp	w0, #0x0
    9508:	b.gt	9520 <PySequence_Fast@plt+0x5290>
    950c:	ldp	x19, x20, [sp, #16]
    9510:	ldp	x29, x30, [sp], #32
    9514:	b	4210 <_PyTrash_thread_destroy_chain@plt>
    9518:	mov	x19, #0x0                   	// #0
    951c:	b	94c4 <PySequence_Fast@plt+0x5234>
    9520:	ldp	x19, x20, [sp, #16]
    9524:	ldp	x29, x30, [sp], #32
    9528:	ret
    952c:	stp	x29, x30, [sp, #-48]!
    9530:	mov	x29, sp
    9534:	stp	x19, x20, [sp, #16]
    9538:	mov	x20, x0
    953c:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    9540:	add	x0, x0, #0x328
    9544:	str	x21, [sp, #32]
    9548:	mov	x21, x1
    954c:	bl	3e30 <_PyObject_GC_New@plt>
    9550:	mov	x19, x0
    9554:	cbz	x0, 95cc <PySequence_Fast@plt+0x533c>
    9558:	ldr	x1, [x20]
    955c:	str	xzr, [x0, #40]
    9560:	add	x1, x1, #0x1
    9564:	str	x1, [x20]
    9568:	str	x20, [x0, #16]
    956c:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9570:	str	xzr, [x0, #48]
    9574:	ldr	x20, [x20, #3976]
    9578:	stp	x20, x20, [x0, #24]
    957c:	ldr	x1, [x20]
    9580:	add	x1, x1, #0x2
    9584:	str	x1, [x20]
    9588:	bl	3e00 <PyObject_GC_Track@plt>
    958c:	cmp	x21, x20
    9590:	b.eq	95cc <PySequence_Fast@plt+0x533c>  // b.none
    9594:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9598:	ldr	x1, [x21, #8]
    959c:	ldr	x0, [x0, #3992]
    95a0:	cmp	x1, x0
    95a4:	b.ne	95b0 <PySequence_Fast@plt+0x5320>  // b.any
    95a8:	ldr	x0, [x21, #16]
    95ac:	cbz	x0, 95cc <PySequence_Fast@plt+0x533c>
    95b0:	mov	x1, x21
    95b4:	add	x0, x19, #0x28
    95b8:	bl	5070 <PySequence_Fast@plt+0xde0>
    95bc:	tbz	w0, #31, 95cc <PySequence_Fast@plt+0x533c>
    95c0:	mov	x0, x19
    95c4:	mov	x19, #0x0                   	// #0
    95c8:	bl	536c <PySequence_Fast@plt+0x10dc>
    95cc:	mov	x0, x19
    95d0:	ldp	x19, x20, [sp, #16]
    95d4:	ldr	x21, [sp, #32]
    95d8:	ldp	x29, x30, [sp], #48
    95dc:	ret
    95e0:	stp	x29, x30, [sp, #-48]!
    95e4:	mov	x29, sp
    95e8:	stp	x19, x20, [sp, #16]
    95ec:	mov	x20, x0
    95f0:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    95f4:	add	x0, x0, #0x9c0
    95f8:	mov	x19, x1
    95fc:	add	x0, x0, #0x40
    9600:	stp	x21, x22, [sp, #32]
    9604:	mov	x21, x2
    9608:	bl	4010 <PyState_FindModule@plt>
    960c:	bl	3e50 <PyModule_GetState@plt>
    9610:	mov	x22, x0
    9614:	mov	x0, x20
    9618:	bl	727c <PySequence_Fast@plt+0x2fec>
    961c:	tbz	w0, #31, 9628 <PySequence_Fast@plt+0x5398>
    9620:	mov	x19, #0x0                   	// #0
    9624:	b	977c <PySequence_Fast@plt+0x54ec>
    9628:	ldr	x0, [x20, #72]
    962c:	cbnz	x0, 9644 <PySequence_Fast@plt+0x53b4>
    9630:	mov	x1, x21
    9634:	mov	x0, x19
    9638:	bl	952c <PySequence_Fast@plt+0x529c>
    963c:	mov	x19, x0
    9640:	b	9680 <PySequence_Fast@plt+0x53f0>
    9644:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9648:	ldr	x1, [x1, #3976]
    964c:	cmp	x21, x1
    9650:	b.ne	96c4 <PySequence_Fast@plt+0x5434>  // b.any
    9654:	bl	40d0 <PyDict_New@plt>
    9658:	mov	x21, x0
    965c:	cbz	x0, 9620 <PySequence_Fast@plt+0x5390>
    9660:	mov	x2, x0
    9664:	mov	x1, x19
    9668:	ldr	x0, [x20, #72]
    966c:	mov	x3, #0x0                   	// #0
    9670:	bl	4020 <PyObject_CallFunctionObjArgs@plt>
    9674:	mov	x19, x0
    9678:	mov	x0, x21
    967c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9680:	cbz	x19, 9620 <PySequence_Fast@plt+0x5390>
    9684:	ldr	x0, [x20, #40]
    9688:	ldr	x21, [x20, #24]
    968c:	cbz	x0, 9698 <PySequence_Fast@plt+0x5408>
    9690:	str	xzr, [x20, #40]
    9694:	bl	536c <PySequence_Fast@plt+0x10dc>
    9698:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    969c:	ldr	x0, [x0, #3976]
    96a0:	cmp	x21, x0
    96a4:	b.eq	96d8 <PySequence_Fast@plt+0x5448>  // b.none
    96a8:	mov	x1, x19
    96ac:	mov	x0, x21
    96b0:	bl	5524 <PySequence_Fast@plt+0x1294>
    96b4:	tbz	w0, #31, 9704 <PySequence_Fast@plt+0x5474>
    96b8:	mov	x0, x19
    96bc:	bl	536c <PySequence_Fast@plt+0x10dc>
    96c0:	b	9620 <PySequence_Fast@plt+0x5390>
    96c4:	mov	x2, x21
    96c8:	mov	x1, x19
    96cc:	mov	x3, #0x0                   	// #0
    96d0:	bl	4020 <PyObject_CallFunctionObjArgs@plt>
    96d4:	b	963c <PySequence_Fast@plt+0x53ac>
    96d8:	ldr	x0, [x20, #16]
    96dc:	cbz	x0, 96f4 <PySequence_Fast@plt+0x5464>
    96e0:	ldr	x0, [x22]
    96e4:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    96e8:	add	x1, x1, #0xb64
    96ec:	bl	3e20 <PyErr_SetString@plt>
    96f0:	b	96b8 <PySequence_Fast@plt+0x5428>
    96f4:	ldr	x0, [x19]
    96f8:	add	x0, x0, #0x1
    96fc:	str	x0, [x19]
    9700:	str	x19, [x20, #16]
    9704:	ldp	x0, x1, [x20, #56]
    9708:	ldr	x2, [x0, #16]
    970c:	cmp	x1, x2
    9710:	b.ge	9790 <PySequence_Fast@plt+0x5500>  // b.tcont
    9714:	mov	x2, x21
    9718:	bl	4000 <PyList_SetItem@plt>
    971c:	tbnz	w0, #31, 96b8 <PySequence_Fast@plt+0x5428>
    9720:	ldr	x0, [x21]
    9724:	add	x0, x0, #0x1
    9728:	str	x0, [x21]
    972c:	ldr	x0, [x20, #64]
    9730:	add	x0, x0, #0x1
    9734:	str	x0, [x20, #64]
    9738:	ldr	x0, [x19]
    973c:	add	x0, x0, #0x1
    9740:	str	x0, [x19]
    9744:	ldr	x0, [x20, #24]
    9748:	str	x19, [x20, #24]
    974c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9750:	ldr	x0, [x19]
    9754:	add	x0, x0, #0x1
    9758:	str	x0, [x19]
    975c:	ldr	x0, [x20, #32]
    9760:	str	x19, [x20, #32]
    9764:	bl	536c <PySequence_Fast@plt+0x10dc>
    9768:	ldr	x1, [x20, #104]
    976c:	mov	x2, x19
    9770:	add	x0, x20, #0x60
    9774:	bl	8388 <PySequence_Fast@plt+0x40f8>
    9778:	tbnz	w0, #31, 96b8 <PySequence_Fast@plt+0x5428>
    977c:	mov	x0, x19
    9780:	ldp	x19, x20, [sp, #16]
    9784:	ldp	x21, x22, [sp, #32]
    9788:	ldp	x29, x30, [sp], #48
    978c:	ret
    9790:	mov	x1, x21
    9794:	bl	3f50 <PyList_Append@plt>
    9798:	tbz	w0, #31, 972c <PySequence_Fast@plt+0x549c>
    979c:	b	96b8 <PySequence_Fast@plt+0x5428>
    97a0:	stp	x29, x30, [sp, #-96]!
    97a4:	mov	x29, sp
    97a8:	stp	x19, x20, [sp, #16]
    97ac:	mov	x19, x1
    97b0:	stp	x21, x22, [sp, #32]
    97b4:	mov	x22, x0
    97b8:	stp	x23, x24, [sp, #48]
    97bc:	mov	x23, x2
    97c0:	stp	x25, x26, [sp, #64]
    97c4:	str	x27, [sp, #80]
    97c8:	bl	3fd0 <PyErr_Occurred@plt>
    97cc:	cbnz	x0, 9968 <PySequence_Fast@plt+0x56d8>
    97d0:	add	x26, x22, #0x28
    97d4:	mov	x1, x19
    97d8:	mov	x0, x26
    97dc:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    97e0:	mov	x20, x0
    97e4:	cbz	x0, 9968 <PySequence_Fast@plt+0x56d8>
    97e8:	ldr	x0, [x23]
    97ec:	cbz	x0, 990c <PySequence_Fast@plt+0x567c>
    97f0:	bl	40d0 <PyDict_New@plt>
    97f4:	mov	x19, x0
    97f8:	cbz	x0, 98bc <PySequence_Fast@plt+0x562c>
    97fc:	adrp	x25, a000 <PySequence_Fast@plt+0x5d70>
    9800:	add	x25, x25, #0x902
    9804:	ldr	x1, [x23]
    9808:	cbz	x1, 9814 <PySequence_Fast@plt+0x5584>
    980c:	ldr	x0, [x23, #8]
    9810:	cbnz	x0, 9870 <PySequence_Fast@plt+0x55e0>
    9814:	ldr	x0, [x22, #24]
    9818:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x12c04>
    981c:	add	x1, x1, #0x328
    9820:	add	x1, x1, #0x1a0
    9824:	ldr	x2, [x0, #8]
    9828:	cmp	x2, x1
    982c:	b.ne	9924 <PySequence_Fast@plt+0x5694>  // b.any
    9830:	mov	x2, x19
    9834:	mov	x1, x20
    9838:	bl	95e0 <PySequence_Fast@plt+0x5350>
    983c:	mov	x21, x0
    9840:	mov	x0, x20
    9844:	bl	536c <PySequence_Fast@plt+0x10dc>
    9848:	mov	x0, x19
    984c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9850:	mov	x0, x21
    9854:	ldp	x19, x20, [sp, #16]
    9858:	ldp	x21, x22, [sp, #32]
    985c:	ldp	x23, x24, [sp, #48]
    9860:	ldp	x25, x26, [sp, #64]
    9864:	ldr	x27, [sp, #80]
    9868:	ldp	x29, x30, [sp], #96
    986c:	b	5b70 <PySequence_Fast@plt+0x18e0>
    9870:	mov	x0, x26
    9874:	bl	6fe4 <PySequence_Fast@plt+0x2d54>
    9878:	ldr	x24, [x23, #8]
    987c:	mov	x21, x0
    9880:	mov	x0, x24
    9884:	bl	3cb0 <strlen@plt>
    9888:	mov	x2, x25
    988c:	mov	x1, x0
    9890:	mov	x0, x24
    9894:	bl	4080 <PyUnicode_DecodeUTF8@plt>
    9898:	cmp	x21, #0x0
    989c:	mov	x24, x0
    98a0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    98a4:	b.ne	98dc <PySequence_Fast@plt+0x564c>  // b.any
    98a8:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    98ac:	mov	x0, x21
    98b0:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    98b4:	mov	x0, x19
    98b8:	bl	536c <PySequence_Fast@plt+0x10dc>
    98bc:	mov	x0, x20
    98c0:	ldp	x19, x20, [sp, #16]
    98c4:	ldp	x21, x22, [sp, #32]
    98c8:	ldp	x23, x24, [sp, #48]
    98cc:	ldp	x25, x26, [sp, #64]
    98d0:	ldr	x27, [sp, #80]
    98d4:	ldp	x29, x30, [sp], #96
    98d8:	b	536c <PySequence_Fast@plt+0x10dc>
    98dc:	mov	x2, x0
    98e0:	mov	x1, x21
    98e4:	mov	x0, x19
    98e8:	bl	4190 <PyDict_SetItem@plt>
    98ec:	mov	w27, w0
    98f0:	mov	x0, x24
    98f4:	bl	536c <PySequence_Fast@plt+0x10dc>
    98f8:	mov	x0, x21
    98fc:	bl	536c <PySequence_Fast@plt+0x10dc>
    9900:	tbnz	w27, #31, 98b4 <PySequence_Fast@plt+0x5624>
    9904:	add	x23, x23, #0x10
    9908:	b	9804 <PySequence_Fast@plt+0x5574>
    990c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9910:	ldr	x19, [x19, #3976]
    9914:	ldr	x0, [x19]
    9918:	add	x0, x0, #0x1
    991c:	str	x0, [x19]
    9920:	b	9814 <PySequence_Fast@plt+0x5584>
    9924:	ldr	x21, [x22, #64]
    9928:	cbz	x21, 9840 <PySequence_Fast@plt+0x55b0>
    992c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9930:	ldr	x0, [x0, #3976]
    9934:	cmp	x19, x0
    9938:	b.ne	9950 <PySequence_Fast@plt+0x56c0>  // b.any
    993c:	mov	x0, x19
    9940:	bl	536c <PySequence_Fast@plt+0x10dc>
    9944:	bl	40d0 <PyDict_New@plt>
    9948:	mov	x19, x0
    994c:	cbz	x0, 98bc <PySequence_Fast@plt+0x562c>
    9950:	ldr	x0, [x22, #64]
    9954:	mov	x2, x19
    9958:	mov	x1, x20
    995c:	mov	x3, #0x0                   	// #0
    9960:	bl	4020 <PyObject_CallFunctionObjArgs@plt>
    9964:	b	983c <PySequence_Fast@plt+0x55ac>
    9968:	ldp	x19, x20, [sp, #16]
    996c:	ldp	x21, x22, [sp, #32]
    9970:	ldp	x23, x24, [sp, #48]
    9974:	ldp	x25, x26, [sp, #64]
    9978:	ldr	x27, [sp, #80]
    997c:	ldp	x29, x30, [sp], #96
    9980:	ret
    9984:	stp	x29, x30, [sp, #-48]!
    9988:	mov	x29, sp
    998c:	stp	x19, x20, [sp, #16]
    9990:	mov	x20, x1
    9994:	mov	x19, x2
    9998:	str	x21, [sp, #32]
    999c:	mov	x21, x0
    99a0:	sub	x0, x2, #0x1
    99a4:	cmp	x0, #0x1
    99a8:	b.hi	99c4 <PySequence_Fast@plt+0x5734>  // b.pmore
    99ac:	cmp	x19, #0x1
    99b0:	ldr	x1, [x20]
    99b4:	b.gt	99f4 <PySequence_Fast@plt+0x5764>
    99b8:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x11c04>
    99bc:	ldr	x2, [x2, #3976]
    99c0:	b	99f8 <PySequence_Fast@plt+0x5768>
    99c4:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    99c8:	mov	x1, x19
    99cc:	add	x0, x0, #0x7f9
    99d0:	mov	x3, #0x2                   	// #2
    99d4:	mov	x2, #0x1                   	// #1
    99d8:	bl	3fb0 <_PyArg_CheckPositional@plt>
    99dc:	cbnz	w0, 99ac <PySequence_Fast@plt+0x571c>
    99e0:	mov	x0, #0x0                   	// #0
    99e4:	ldp	x19, x20, [sp, #16]
    99e8:	ldr	x21, [sp, #32]
    99ec:	ldp	x29, x30, [sp], #48
    99f0:	ret
    99f4:	ldr	x2, [x20, #8]
    99f8:	mov	x0, x21
    99fc:	ldp	x19, x20, [sp, #16]
    9a00:	ldr	x21, [sp, #32]
    9a04:	ldp	x29, x30, [sp], #48
    9a08:	b	95e0 <PySequence_Fast@plt+0x5350>
    9a0c:	stp	x29, x30, [sp, #-32]!
    9a10:	mov	x29, sp
    9a14:	stp	x19, x20, [sp, #16]
    9a18:	mov	x20, x0
    9a1c:	ldr	x0, [x0, #16]
    9a20:	ldr	x1, [x20, #40]
    9a24:	cbz	x1, 9aa8 <PySequence_Fast@plt+0x5818>
    9a28:	ldr	x1, [x1]
    9a2c:	bl	952c <PySequence_Fast@plt+0x529c>
    9a30:	mov	x19, x0
    9a34:	cbz	x0, 9ac0 <PySequence_Fast@plt+0x5830>
    9a38:	ldr	x1, [x20, #24]
    9a3c:	and	x2, x1, #0xfffffffffffffffe
    9a40:	ldr	x0, [x2]
    9a44:	add	x0, x0, #0x1
    9a48:	str	x0, [x2]
    9a4c:	add	x0, x19, #0x18
    9a50:	bl	574c <PySequence_Fast@plt+0x14bc>
    9a54:	ldr	x1, [x20, #32]
    9a58:	and	x2, x1, #0xfffffffffffffffe
    9a5c:	ldr	x0, [x2]
    9a60:	add	x0, x0, #0x1
    9a64:	str	x0, [x2]
    9a68:	add	x0, x19, #0x20
    9a6c:	bl	574c <PySequence_Fast@plt+0x14bc>
    9a70:	ldr	x0, [x20, #40]
    9a74:	cbz	x0, 9ac0 <PySequence_Fast@plt+0x5830>
    9a78:	ldr	x1, [x0, #8]
    9a7c:	mov	x0, x19
    9a80:	bl	50dc <PySequence_Fast@plt+0xe4c>
    9a84:	tbnz	w0, #31, 9ab4 <PySequence_Fast@plt+0x5824>
    9a88:	ldr	x3, [x19, #40]
    9a8c:	mov	x0, #0x0                   	// #0
    9a90:	ldr	x4, [x20, #40]
    9a94:	ldr	x1, [x4, #8]
    9a98:	cmp	x0, x1
    9a9c:	b.lt	9ad0 <PySequence_Fast@plt+0x5840>  // b.tstop
    9aa0:	str	x1, [x3, #8]
    9aa4:	b	9ac0 <PySequence_Fast@plt+0x5830>
    9aa8:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9aac:	ldr	x1, [x1, #3976]
    9ab0:	b	9a2c <PySequence_Fast@plt+0x579c>
    9ab4:	mov	x0, x19
    9ab8:	mov	x19, #0x0                   	// #0
    9abc:	bl	536c <PySequence_Fast@plt+0x10dc>
    9ac0:	mov	x0, x19
    9ac4:	ldp	x19, x20, [sp, #16]
    9ac8:	ldp	x29, x30, [sp], #32
    9acc:	ret
    9ad0:	ldr	x1, [x4, #24]
    9ad4:	lsl	x5, x0, #3
    9ad8:	add	x0, x0, #0x1
    9adc:	ldr	x1, [x1, x5]
    9ae0:	ldr	x2, [x1]
    9ae4:	add	x2, x2, #0x1
    9ae8:	str	x2, [x1]
    9aec:	ldr	x2, [x3, #24]
    9af0:	str	x1, [x2, x5]
    9af4:	b	9a94 <PySequence_Fast@plt+0x5804>
    9af8:	stp	x29, x30, [sp, #-32]!
    9afc:	cmp	x2, #0x2
    9b00:	mov	x29, sp
    9b04:	stp	x19, x20, [sp, #16]
    9b08:	mov	x19, x1
    9b0c:	b.ne	9b34 <PySequence_Fast@plt+0x58a4>  // b.any
    9b10:	ldp	x20, x0, [x19]
    9b14:	bl	41a0 <PyDict_Copy@plt>
    9b18:	mov	x19, x0
    9b1c:	cbnz	x0, 9b54 <PySequence_Fast@plt+0x58c4>
    9b20:	mov	x20, #0x0                   	// #0
    9b24:	mov	x0, x20
    9b28:	ldp	x19, x20, [sp, #16]
    9b2c:	ldp	x29, x30, [sp], #32
    9b30:	ret
    9b34:	mov	x1, x2
    9b38:	mov	x3, #0x2                   	// #2
    9b3c:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    9b40:	mov	x2, x3
    9b44:	add	x0, x0, #0xb83
    9b48:	bl	3fb0 <_PyArg_CheckPositional@plt>
    9b4c:	cbnz	w0, 9b10 <PySequence_Fast@plt+0x5880>
    9b50:	b	9b20 <PySequence_Fast@plt+0x5890>
    9b54:	mov	x1, x0
    9b58:	mov	x0, x20
    9b5c:	bl	952c <PySequence_Fast@plt+0x529c>
    9b60:	mov	x20, x0
    9b64:	mov	x0, x19
    9b68:	bl	536c <PySequence_Fast@plt+0x10dc>
    9b6c:	b	9b24 <PySequence_Fast@plt+0x5894>
    9b70:	stp	x29, x30, [sp, #-64]!
    9b74:	adrp	x5, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9b78:	mov	x0, x1
    9b7c:	mov	x29, sp
    9b80:	ldr	x5, [x5, #3992]
    9b84:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    9b88:	add	x6, sp, #0x38
    9b8c:	add	x4, sp, #0x30
    9b90:	add	x3, sp, #0x28
    9b94:	add	x1, x1, #0xb8f
    9b98:	str	x19, [sp, #16]
    9b9c:	mov	x19, x2
    9ba0:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    9ba4:	add	x2, x2, #0x328
    9ba8:	str	xzr, [sp, #56]
    9bac:	bl	4060 <_PyArg_ParseTuple_SizeT@plt>
    9bb0:	cbnz	w0, 9bc8 <PySequence_Fast@plt+0x5938>
    9bb4:	mov	x19, #0x0                   	// #0
    9bb8:	mov	x0, x19
    9bbc:	ldr	x19, [sp, #16]
    9bc0:	ldp	x29, x30, [sp], #64
    9bc4:	ret
    9bc8:	ldr	x0, [sp, #56]
    9bcc:	cbz	x0, 9bf8 <PySequence_Fast@plt+0x5968>
    9bd0:	bl	41a0 <PyDict_Copy@plt>
    9bd4:	str	x0, [sp, #56]
    9bd8:	cbz	x0, 9bb4 <PySequence_Fast@plt+0x5924>
    9bdc:	cbz	x19, 9c0c <PySequence_Fast@plt+0x597c>
    9be0:	mov	x1, x19
    9be4:	bl	3f70 <PyDict_Update@plt>
    9be8:	tbz	w0, #31, 9c0c <PySequence_Fast@plt+0x597c>
    9bec:	ldr	x0, [sp, #56]
    9bf0:	bl	536c <PySequence_Fast@plt+0x10dc>
    9bf4:	b	9bb4 <PySequence_Fast@plt+0x5924>
    9bf8:	cbz	x19, 9c3c <PySequence_Fast@plt+0x59ac>
    9bfc:	mov	x0, x19
    9c00:	bl	62d4 <PySequence_Fast@plt+0x2044>
    9c04:	str	x0, [sp, #56]
    9c08:	cbz	x0, 9bb4 <PySequence_Fast@plt+0x5924>
    9c0c:	ldp	x0, x1, [sp, #48]
    9c10:	bl	952c <PySequence_Fast@plt+0x529c>
    9c14:	mov	x19, x0
    9c18:	ldr	x0, [sp, #56]
    9c1c:	bl	536c <PySequence_Fast@plt+0x10dc>
    9c20:	cbz	x19, 9bb4 <PySequence_Fast@plt+0x5924>
    9c24:	ldr	x0, [sp, #40]
    9c28:	mov	x1, x19
    9c2c:	bl	51bc <PySequence_Fast@plt+0xf2c>
    9c30:	tbz	w0, #31, 9bb8 <PySequence_Fast@plt+0x5928>
    9c34:	mov	x0, x19
    9c38:	b	9bf0 <PySequence_Fast@plt+0x5960>
    9c3c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9c40:	ldr	x0, [x0, #3976]
    9c44:	str	x0, [sp, #56]
    9c48:	ldr	x1, [x0]
    9c4c:	add	x1, x1, #0x1
    9c50:	str	x1, [x0]
    9c54:	b	9c0c <PySequence_Fast@plt+0x597c>
    9c58:	stp	x29, x30, [sp, #-80]!
    9c5c:	mov	x29, sp
    9c60:	stp	x21, x22, [sp, #32]
    9c64:	mov	x21, x0
    9c68:	mov	x22, x1
    9c6c:	ldr	x0, [x0, #16]
    9c70:	stp	x19, x20, [sp, #16]
    9c74:	stp	x23, x24, [sp, #48]
    9c78:	str	x25, [sp, #64]
    9c7c:	bl	9e30 <PySequence_Fast@plt+0x5ba0>
    9c80:	cbnz	x0, 9c8c <PySequence_Fast@plt+0x59fc>
    9c84:	mov	x19, #0x0                   	// #0
    9c88:	b	9dac <PySequence_Fast@plt+0x5b1c>
    9c8c:	mov	x23, x0
    9c90:	ldr	x0, [x21, #40]
    9c94:	cbz	x0, 9cb8 <PySequence_Fast@plt+0x5a28>
    9c98:	ldr	x0, [x0]
    9c9c:	mov	x1, x22
    9ca0:	bl	9e30 <PySequence_Fast@plt+0x5ba0>
    9ca4:	mov	x20, x0
    9ca8:	cbnz	x0, 9ccc <PySequence_Fast@plt+0x5a3c>
    9cac:	mov	x0, x23
    9cb0:	bl	536c <PySequence_Fast@plt+0x10dc>
    9cb4:	b	9c84 <PySequence_Fast@plt+0x59f4>
    9cb8:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9cbc:	ldr	x20, [x20, #3976]
    9cc0:	ldr	x0, [x20]
    9cc4:	add	x0, x0, #0x1
    9cc8:	str	x0, [x20]
    9ccc:	mov	x1, x20
    9cd0:	mov	x0, x23
    9cd4:	bl	952c <PySequence_Fast@plt+0x529c>
    9cd8:	mov	x19, x0
    9cdc:	mov	x0, x23
    9ce0:	bl	536c <PySequence_Fast@plt+0x10dc>
    9ce4:	mov	x0, x20
    9ce8:	bl	536c <PySequence_Fast@plt+0x10dc>
    9cec:	cbz	x19, 9c84 <PySequence_Fast@plt+0x59f4>
    9cf0:	ldr	x0, [x21, #24]
    9cf4:	mov	x1, x22
    9cf8:	and	x0, x0, #0xfffffffffffffffe
    9cfc:	bl	9e30 <PySequence_Fast@plt+0x5ba0>
    9d00:	mov	x1, x0
    9d04:	cbz	x0, 9e14 <PySequence_Fast@plt+0x5b84>
    9d08:	ldr	x0, [x21, #24]
    9d0c:	bfxil	x1, x0, #0, #1
    9d10:	add	x0, x19, #0x18
    9d14:	bl	574c <PySequence_Fast@plt+0x14bc>
    9d18:	ldr	x0, [x21, #32]
    9d1c:	mov	x1, x22
    9d20:	and	x0, x0, #0xfffffffffffffffe
    9d24:	bl	9e30 <PySequence_Fast@plt+0x5ba0>
    9d28:	mov	x1, x0
    9d2c:	cbz	x0, 9e14 <PySequence_Fast@plt+0x5b84>
    9d30:	ldr	x0, [x21, #32]
    9d34:	bfxil	x1, x0, #0, #1
    9d38:	add	x0, x19, #0x20
    9d3c:	bl	574c <PySequence_Fast@plt+0x14bc>
    9d40:	ldr	x0, [x21, #40]
    9d44:	cbz	x0, 9d7c <PySequence_Fast@plt+0x5aec>
    9d48:	ldr	x1, [x0, #8]
    9d4c:	mov	x0, x19
    9d50:	bl	50dc <PySequence_Fast@plt+0xe4c>
    9d54:	tbnz	w0, #31, 9e14 <PySequence_Fast@plt+0x5b84>
    9d58:	adrp	x24, 1d000 <PyInit__elementtree@@Base+0x12c04>
    9d5c:	add	x24, x24, #0x328
    9d60:	mov	x23, #0x0                   	// #0
    9d64:	ldr	x1, [x21, #40]
    9d68:	ldr	x0, [x1, #8]
    9d6c:	cmp	x0, x23
    9d70:	b.gt	9dc8 <PySequence_Fast@plt+0x5b38>
    9d74:	ldr	x1, [x19, #40]
    9d78:	str	x0, [x1, #8]
    9d7c:	mov	x0, x21
    9d80:	bl	3ec0 <PyLong_FromSsize_t@plt>
    9d84:	mov	x20, x0
    9d88:	cbz	x0, 9e14 <PySequence_Fast@plt+0x5b84>
    9d8c:	mov	x1, x0
    9d90:	mov	x2, x19
    9d94:	mov	x0, x22
    9d98:	bl	4190 <PyDict_SetItem@plt>
    9d9c:	mov	w21, w0
    9da0:	mov	x0, x20
    9da4:	bl	536c <PySequence_Fast@plt+0x10dc>
    9da8:	tbnz	w21, #31, 9e14 <PySequence_Fast@plt+0x5b84>
    9dac:	mov	x0, x19
    9db0:	ldp	x19, x20, [sp, #16]
    9db4:	ldp	x21, x22, [sp, #32]
    9db8:	ldp	x23, x24, [sp, #48]
    9dbc:	ldr	x25, [sp, #64]
    9dc0:	ldp	x29, x30, [sp], #80
    9dc4:	ret
    9dc8:	ldr	x0, [x1, #24]
    9dcc:	lsl	x25, x23, #3
    9dd0:	mov	x1, x22
    9dd4:	ldr	x0, [x0, x25]
    9dd8:	bl	9e30 <PySequence_Fast@plt+0x5ba0>
    9ddc:	mov	x20, x0
    9de0:	cbz	x0, 9e0c <PySequence_Fast@plt+0x5b7c>
    9de4:	ldr	x0, [x0, #8]
    9de8:	cmp	x0, x24
    9dec:	b.eq	9e1c <PySequence_Fast@plt+0x5b8c>  // b.none
    9df0:	mov	x1, x24
    9df4:	bl	41b0 <PyType_IsSubtype@plt>
    9df8:	cbnz	w0, 9e1c <PySequence_Fast@plt+0x5b8c>
    9dfc:	ldr	x0, [x20, #8]
    9e00:	bl	5054 <PySequence_Fast@plt+0xdc4>
    9e04:	mov	x0, x20
    9e08:	bl	536c <PySequence_Fast@plt+0x10dc>
    9e0c:	ldr	x0, [x19, #40]
    9e10:	str	x23, [x0, #8]
    9e14:	mov	x0, x19
    9e18:	b	9cb0 <PySequence_Fast@plt+0x5a20>
    9e1c:	ldr	x0, [x19, #40]
    9e20:	add	x23, x23, #0x1
    9e24:	ldr	x0, [x0, #24]
    9e28:	str	x20, [x0, x25]
    9e2c:	b	9d64 <PySequence_Fast@plt+0x5ad4>
    9e30:	stp	x29, x30, [sp, #-96]!
    9e34:	adrp	x3, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9e38:	mov	x29, sp
    9e3c:	ldr	x3, [x3, #3976]
    9e40:	stp	x19, x20, [sp, #16]
    9e44:	mov	x20, x0
    9e48:	stp	x21, x22, [sp, #32]
    9e4c:	cmp	x0, x3
    9e50:	stp	x23, x24, [sp, #48]
    9e54:	ldr	x2, [x0]
    9e58:	b.eq	9e70 <PySequence_Fast@plt+0x5be0>  // b.none
    9e5c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9e60:	ldr	x3, [x0, #8]
    9e64:	ldr	x19, [x19, #4032]
    9e68:	cmp	x3, x19
    9e6c:	b.ne	9e94 <PySequence_Fast@plt+0x5c04>  // b.any
    9e70:	mov	x19, x20
    9e74:	add	x2, x2, #0x1
    9e78:	str	x2, [x20]
    9e7c:	mov	x0, x19
    9e80:	ldp	x19, x20, [sp, #16]
    9e84:	ldp	x21, x22, [sp, #32]
    9e88:	ldp	x23, x24, [sp, #48]
    9e8c:	ldp	x29, x30, [sp], #96
    9e90:	ret
    9e94:	mov	x21, x1
    9e98:	cmp	x2, #0x1
    9e9c:	b.ne	9f04 <PySequence_Fast@plt+0x5c74>  // b.any
    9ea0:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9ea4:	ldr	x2, [x2, #3992]
    9ea8:	cmp	x3, x2
    9eac:	b.ne	9f3c <PySequence_Fast@plt+0x5cac>  // b.any
    9eb0:	add	x24, sp, #0x48
    9eb4:	add	x23, sp, #0x40
    9eb8:	add	x22, sp, #0x50
    9ebc:	str	xzr, [sp, #80]
    9ec0:	mov	x3, x24
    9ec4:	mov	x2, x23
    9ec8:	mov	x1, x22
    9ecc:	mov	x0, x20
    9ed0:	bl	4100 <PyDict_Next@plt>
    9ed4:	cbnz	w0, 9ee4 <PySequence_Fast@plt+0x5c54>
    9ed8:	mov	x0, x20
    9edc:	bl	41a0 <PyDict_Copy@plt>
    9ee0:	b	9f50 <PySequence_Fast@plt+0x5cc0>
    9ee4:	ldr	x0, [sp, #64]
    9ee8:	ldr	x0, [x0, #8]
    9eec:	cmp	x0, x19
    9ef0:	b.ne	9f04 <PySequence_Fast@plt+0x5c74>  // b.any
    9ef4:	ldr	x0, [sp, #72]
    9ef8:	ldr	x0, [x0, #8]
    9efc:	cmp	x0, x19
    9f00:	b.eq	9ec0 <PySequence_Fast@plt+0x5c30>  // b.none
    9f04:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x12c04>
    9f08:	add	x0, x0, #0x9c0
    9f0c:	add	x0, x0, #0x40
    9f10:	bl	4010 <PyState_FindModule@plt>
    9f14:	bl	3e50 <PyModule_GetState@plt>
    9f18:	ldr	x19, [x0, #8]
    9f1c:	cbnz	x19, 9f58 <PySequence_Fast@plt+0x5cc8>
    9f20:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9f24:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    9f28:	add	x1, x1, #0xba1
    9f2c:	ldr	x0, [x0, #3920]
    9f30:	ldr	x0, [x0]
    9f34:	bl	3e20 <PyErr_SetString@plt>
    9f38:	b	9e7c <PySequence_Fast@plt+0x5bec>
    9f3c:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    9f40:	add	x2, x2, #0x328
    9f44:	cmp	x3, x2
    9f48:	b.ne	9f04 <PySequence_Fast@plt+0x5c74>  // b.any
    9f4c:	bl	9c58 <PySequence_Fast@plt+0x59c8>
    9f50:	mov	x19, x0
    9f54:	b	9e7c <PySequence_Fast@plt+0x5bec>
    9f58:	add	x1, sp, #0x50
    9f5c:	mov	x0, x19
    9f60:	mov	x2, #0x2                   	// #2
    9f64:	stp	x20, x21, [sp, #80]
    9f68:	bl	8384 <PySequence_Fast@plt+0x40f4>
    9f6c:	b	9f50 <PySequence_Fast@plt+0x5cc0>
    9f70:	ldr	x2, [x1, #8]
    9f74:	ldr	x2, [x2, #168]
    9f78:	tbz	w2, #29, 9f80 <PySequence_Fast@plt+0x5cf0>
    9f7c:	b	9c58 <PySequence_Fast@plt+0x59c8>
    9f80:	stp	x29, x30, [sp, #-16]!
    9f84:	mov	x3, x1
    9f88:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    9f8c:	mov	x29, sp
    9f90:	add	x2, x2, #0xbbb
    9f94:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    9f98:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    9f9c:	add	x1, x1, #0x68f
    9fa0:	add	x0, x0, #0xbc0
    9fa4:	bl	3f20 <_PyArg_BadArgument@plt>
    9fa8:	mov	x0, #0x0                   	// #0
    9fac:	ldp	x29, x30, [sp], #16
    9fb0:	ret
    9fb4:	stp	x29, x30, [sp, #-48]!
    9fb8:	mov	x29, sp
    9fbc:	stp	x19, x20, [sp, #16]
    9fc0:	mov	x20, x0
    9fc4:	ldr	x0, [x0, #40]
    9fc8:	str	x21, [sp, #32]
    9fcc:	cbz	x0, a014 <PySequence_Fast@plt+0x5d84>
    9fd0:	ldr	x0, [x20, #40]
    9fd4:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x11c04>
    9fd8:	ldr	x21, [x21, #3976]
    9fdc:	ldr	x19, [x0]
    9fe0:	cmp	x19, x21
    9fe4:	b.ne	a03c <PySequence_Fast@plt+0x5dac>  // b.any
    9fe8:	bl	40d0 <PyDict_New@plt>
    9fec:	mov	x19, x0
    9ff0:	cbz	x0, a024 <PySequence_Fast@plt+0x5d94>
    9ff4:	mov	x0, x21
    9ff8:	bl	536c <PySequence_Fast@plt+0x10dc>
    9ffc:	ldr	x0, [x20, #40]
    a000:	str	x19, [x0]
    a004:	ldr	x0, [x19]
    a008:	add	x0, x0, #0x1
    a00c:	str	x0, [x19]
    a010:	b	a028 <PySequence_Fast@plt+0x5d98>
    a014:	add	x0, x20, #0x28
    a018:	mov	x1, #0x0                   	// #0
    a01c:	bl	5070 <PySequence_Fast@plt+0xde0>
    a020:	tbz	w0, #31, 9fd0 <PySequence_Fast@plt+0x5d40>
    a024:	mov	x19, #0x0                   	// #0
    a028:	mov	x0, x19
    a02c:	ldp	x19, x20, [sp, #16]
    a030:	ldr	x21, [sp, #32]
    a034:	ldp	x29, x30, [sp], #48
    a038:	ret
    a03c:	cbnz	x19, a004 <PySequence_Fast@plt+0x5d74>
    a040:	b	a024 <PySequence_Fast@plt+0x5d94>
    a044:	stp	x29, x30, [sp, #-32]!
    a048:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a04c:	add	x1, x1, #0x779
    a050:	mov	x29, sp
    a054:	mov	w3, #0x1                   	// #1
    a058:	mov	w2, #0x0                   	// #0
    a05c:	str	x19, [sp, #16]
    a060:	mov	x19, x0
    a064:	add	x0, x0, #0x10
    a068:	bl	8600 <PySequence_Fast@plt+0x4370>
    a06c:	mov	x1, x0
    a070:	cbz	x0, a0b4 <PySequence_Fast@plt+0x5e24>
    a074:	ldr	x3, [x19, #24]
    a078:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x12c04>
    a07c:	add	x2, x2, #0x328
    a080:	add	x2, x2, #0x1a0
    a084:	ldr	x3, [x3, #8]
    a088:	cmp	x3, x2
    a08c:	b.ne	a0c4 <PySequence_Fast@plt+0x5e34>  // b.any
    a090:	bl	536c <PySequence_Fast@plt+0x10dc>
    a094:	ldr	x0, [x19, #24]
    a098:	ldr	x1, [x0, #16]
    a09c:	cbnz	x1, a0a8 <PySequence_Fast@plt+0x5e18>
    a0a0:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a0a4:	ldr	x1, [x1, #3976]
    a0a8:	ldr	x0, [x1]
    a0ac:	add	x0, x0, #0x1
    a0b0:	str	x0, [x1]
    a0b4:	mov	x0, x1
    a0b8:	ldr	x19, [sp, #16]
    a0bc:	ldp	x29, x30, [sp], #32
    a0c0:	ret
    a0c4:	ldr	x2, [x19, #112]
    a0c8:	cbz	x2, a0b4 <PySequence_Fast@plt+0x5e24>
    a0cc:	bl	536c <PySequence_Fast@plt+0x10dc>
    a0d0:	ldr	x0, [x19, #112]
    a0d4:	mov	x2, #0x0                   	// #0
    a0d8:	ldr	x19, [sp, #16]
    a0dc:	mov	x1, #0x0                   	// #0
    a0e0:	ldp	x29, x30, [sp], #32
    a0e4:	b	8318 <PySequence_Fast@plt+0x4088>
    a0e8:	sub	sp, sp, #0xa0
    a0ec:	stp	x29, x30, [sp, #16]
    a0f0:	add	x29, sp, #0x10
    a0f4:	stp	x19, x20, [sp, #32]
    a0f8:	mov	x20, x0
    a0fc:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a100:	mov	x19, x1
    a104:	stp	x21, x22, [sp, #48]
    a108:	ldr	x0, [x0, #3992]
    a10c:	stp	x23, x24, [sp, #64]
    a110:	ldr	x1, [x1, #8]
    a114:	stp	x25, x26, [sp, #80]
    a118:	stp	x27, x28, [sp, #96]
    a11c:	cmp	x1, x0
    a120:	b.eq	a168 <PySequence_Fast@plt+0x5ed8>  // b.none
    a124:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a128:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a12c:	mov	x2, x19
    a130:	add	x1, x1, #0xbcd
    a134:	ldr	x0, [x0, #3944]
    a138:	mov	x21, #0x0                   	// #0
    a13c:	ldr	x0, [x0]
    a140:	bl	41d0 <PyErr_Format@plt>
    a144:	mov	x0, x21
    a148:	ldp	x29, x30, [sp, #16]
    a14c:	ldp	x19, x20, [sp, #32]
    a150:	ldp	x21, x22, [sp, #48]
    a154:	ldp	x23, x24, [sp, #64]
    a158:	ldp	x25, x26, [sp, #80]
    a15c:	ldp	x27, x28, [sp, #96]
    a160:	add	sp, sp, #0xa0
    a164:	ret
    a168:	mov	x0, #0x0                   	// #0
    a16c:	stp	xzr, xzr, [sp, #120]
    a170:	stp	xzr, xzr, [sp, #136]
    a174:	str	xzr, [sp, #152]
    a178:	bl	3f90 <PyTuple_New@plt>
    a17c:	mov	x21, x0
    a180:	cbz	x0, a144 <PySequence_Fast@plt+0x5eb4>
    a184:	add	x1, sp, #0x98
    a188:	str	x1, [sp]
    a18c:	adrp	x3, 1d000 <PyInit__elementtree@@Base+0x12c04>
    a190:	add	x3, x3, #0x9c0
    a194:	adrp	x2, a000 <PySequence_Fast@plt+0x5d70>
    a198:	add	x7, sp, #0x90
    a19c:	add	x6, sp, #0x88
    a1a0:	add	x5, sp, #0x80
    a1a4:	add	x4, sp, #0x78
    a1a8:	add	x3, x3, #0x368
    a1ac:	add	x2, x2, #0xbff
    a1b0:	mov	x1, x19
    a1b4:	bl	40c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    a1b8:	cbnz	w0, a1c4 <PySequence_Fast@plt+0x5f34>
    a1bc:	mov	x19, #0x0                   	// #0
    a1c0:	b	a1ec <PySequence_Fast@plt+0x5f5c>
    a1c4:	ldp	x19, x22, [sp, #120]
    a1c8:	ldp	x25, x24, [sp, #136]
    a1cc:	ldr	x23, [sp, #152]
    a1d0:	cbnz	x19, a1fc <PySequence_Fast@plt+0x5f6c>
    a1d4:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a1d8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a1dc:	add	x1, x1, #0xc07
    a1e0:	ldr	x0, [x0, #3944]
    a1e4:	ldr	x0, [x0]
    a1e8:	bl	3e20 <PyErr_SetString@plt>
    a1ec:	mov	x0, x21
    a1f0:	mov	x21, x19
    a1f4:	bl	536c <PySequence_Fast@plt+0x10dc>
    a1f8:	b	a144 <PySequence_Fast@plt+0x5eb4>
    a1fc:	ldr	x0, [x19]
    a200:	add	x0, x0, #0x1
    a204:	str	x0, [x19]
    a208:	ldr	x0, [x20, #16]
    a20c:	str	x19, [x20, #16]
    a210:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    a214:	cbz	x25, a2a4 <PySequence_Fast@plt+0x6014>
    a218:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a21c:	ldr	x1, [x25, #8]
    a220:	and	x25, x25, #0xfffffffffffffffe
    a224:	ldr	x0, [x0, #4064]
    a228:	cmp	x1, x0
    a22c:	cset	x1, eq  // eq = none
    a230:	orr	x1, x1, x25
    a234:	and	x2, x1, #0xfffffffffffffffe
    a238:	ldr	x0, [x2]
    a23c:	add	x0, x0, #0x1
    a240:	str	x0, [x2]
    a244:	add	x0, x20, #0x18
    a248:	bl	574c <PySequence_Fast@plt+0x14bc>
    a24c:	cbz	x24, a2b0 <PySequence_Fast@plt+0x6020>
    a250:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a254:	ldr	x1, [x24, #8]
    a258:	and	x24, x24, #0xfffffffffffffffe
    a25c:	ldr	x0, [x0, #4064]
    a260:	cmp	x1, x0
    a264:	cset	x1, eq  // eq = none
    a268:	orr	x1, x1, x24
    a26c:	and	x2, x1, #0xfffffffffffffffe
    a270:	ldr	x0, [x2]
    a274:	add	x0, x0, #0x1
    a278:	str	x0, [x2]
    a27c:	add	x0, x20, #0x20
    a280:	bl	574c <PySequence_Fast@plt+0x14bc>
    a284:	orr	x0, x22, x23
    a288:	cbnz	x0, a2bc <PySequence_Fast@plt+0x602c>
    a28c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a290:	ldr	x19, [x19, #3976]
    a294:	ldr	x0, [x19]
    a298:	add	x0, x0, #0x1
    a29c:	str	x0, [x19]
    a2a0:	b	a1ec <PySequence_Fast@plt+0x5f5c>
    a2a4:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a2a8:	ldr	x1, [x1, #3976]
    a2ac:	b	a234 <PySequence_Fast@plt+0x5fa4>
    a2b0:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a2b4:	ldr	x1, [x1, #3976]
    a2b8:	b	a26c <PySequence_Fast@plt+0x5fdc>
    a2bc:	cbz	x23, a3c4 <PySequence_Fast@plt+0x6134>
    a2c0:	ldr	x0, [x23, #8]
    a2c4:	ldr	x0, [x0, #168]
    a2c8:	tbnz	w0, #25, a2e8 <PySequence_Fast@plt+0x6058>
    a2cc:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a2d0:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a2d4:	add	x1, x1, #0xc1b
    a2d8:	ldr	x0, [x0, #3944]
    a2dc:	ldr	x0, [x0]
    a2e0:	bl	3e20 <PyErr_SetString@plt>
    a2e4:	b	a1bc <PySequence_Fast@plt+0x5f2c>
    a2e8:	ldr	x27, [x23, #16]
    a2ec:	mov	x0, x20
    a2f0:	ldr	x19, [x20, #40]
    a2f4:	str	xzr, [x20, #40]
    a2f8:	mov	x1, x27
    a2fc:	bl	50dc <PySequence_Fast@plt+0xe4c>
    a300:	cbz	w0, a314 <PySequence_Fast@plt+0x6084>
    a304:	add	x0, x20, #0x28
    a308:	bl	9388 <PySequence_Fast@plt+0x50f8>
    a30c:	str	x19, [x20, #40]
    a310:	b	a1bc <PySequence_Fast@plt+0x5f2c>
    a314:	cbz	x19, a330 <PySequence_Fast@plt+0x60a0>
    a318:	ldr	x0, [x20, #40]
    a31c:	ldr	x1, [x19]
    a320:	str	x1, [x0]
    a324:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a328:	ldr	x0, [x0, #3976]
    a32c:	str	x0, [x19]
    a330:	adrp	x26, 1d000 <PyInit__elementtree@@Base+0x12c04>
    a334:	add	x26, x26, #0x328
    a338:	mov	x24, #0x0                   	// #0
    a33c:	cmp	x27, x24
    a340:	b.gt	a360 <PySequence_Fast@plt+0x60d0>
    a344:	ldr	x0, [x20, #40]
    a348:	str	x27, [x0, #8]
    a34c:	cbnz	x22, a3dc <PySequence_Fast@plt+0x614c>
    a350:	cbz	x19, a28c <PySequence_Fast@plt+0x5ffc>
    a354:	mov	x0, x19
    a358:	bl	7900 <PySequence_Fast@plt+0x3670>
    a35c:	b	a28c <PySequence_Fast@plt+0x5ffc>
    a360:	ldr	x0, [x23, #24]
    a364:	lsl	x28, x24, #3
    a368:	ldr	x25, [x0, x28]
    a36c:	ldr	x0, [x25, #8]
    a370:	cmp	x0, x26
    a374:	b.eq	a3a4 <PySequence_Fast@plt+0x6114>  // b.none
    a378:	mov	x1, x26
    a37c:	bl	41b0 <PyType_IsSubtype@plt>
    a380:	cbnz	w0, a3a4 <PySequence_Fast@plt+0x6114>
    a384:	ldr	x0, [x25, #8]
    a388:	bl	5054 <PySequence_Fast@plt+0xdc4>
    a38c:	ldr	x0, [x20, #40]
    a390:	str	x24, [x0, #8]
    a394:	cbz	x19, a1bc <PySequence_Fast@plt+0x5f2c>
    a398:	mov	x0, x19
    a39c:	bl	7900 <PySequence_Fast@plt+0x3670>
    a3a0:	b	a1bc <PySequence_Fast@plt+0x5f2c>
    a3a4:	ldr	x0, [x25]
    a3a8:	add	x24, x24, #0x1
    a3ac:	add	x0, x0, #0x1
    a3b0:	str	x0, [x25]
    a3b4:	ldr	x0, [x20, #40]
    a3b8:	ldr	x0, [x0, #24]
    a3bc:	str	x25, [x0, x28]
    a3c0:	b	a33c <PySequence_Fast@plt+0x60ac>
    a3c4:	mov	x0, x20
    a3c8:	mov	x1, #0x0                   	// #0
    a3cc:	bl	50dc <PySequence_Fast@plt+0xe4c>
    a3d0:	cbnz	w0, a1bc <PySequence_Fast@plt+0x5f2c>
    a3d4:	cbz	x22, a28c <PySequence_Fast@plt+0x5ffc>
    a3d8:	mov	x19, #0x0                   	// #0
    a3dc:	ldr	x0, [x22]
    a3e0:	ldr	x1, [x20, #40]
    a3e4:	add	x0, x0, #0x1
    a3e8:	str	x0, [x22]
    a3ec:	ldr	x0, [x1]
    a3f0:	str	x22, [x1]
    a3f4:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    a3f8:	b	a350 <PySequence_Fast@plt+0x60c0>

000000000000a3fc <PyInit__elementtree@@Base>:
    a3fc:	stp	x29, x30, [sp, #-64]!
    a400:	mov	x29, sp
    a404:	stp	x19, x20, [sp, #16]
    a408:	adrp	x19, 1d000 <PyInit__elementtree@@Base+0x12c04>
    a40c:	add	x19, x19, #0x9c0
    a410:	add	x19, x19, #0x40
    a414:	stp	x21, x22, [sp, #32]
    a418:	mov	x0, x19
    a41c:	str	x23, [sp, #48]
    a420:	bl	4010 <PyState_FindModule@plt>
    a424:	mov	x21, x0
    a428:	cbz	x0, a450 <PyInit__elementtree@@Base+0x54>
    a42c:	ldr	x0, [x0]
    a430:	add	x0, x0, #0x1
    a434:	str	x0, [x21]
    a438:	mov	x0, x21
    a43c:	ldp	x19, x20, [sp, #16]
    a440:	ldp	x21, x22, [sp, #32]
    a444:	ldr	x23, [sp, #48]
    a448:	ldp	x29, x30, [sp], #64
    a44c:	ret
    a450:	adrp	x22, 1d000 <PyInit__elementtree@@Base+0x12c04>
    a454:	add	x20, x22, #0x328
    a458:	add	x0, x20, #0x340
    a45c:	bl	3ee0 <PyType_Ready@plt>
    a460:	tbnz	w0, #31, a438 <PyInit__elementtree@@Base+0x3c>
    a464:	add	x0, x20, #0x1a0
    a468:	bl	3ee0 <PyType_Ready@plt>
    a46c:	tbnz	w0, #31, a438 <PyInit__elementtree@@Base+0x3c>
    a470:	mov	x0, x20
    a474:	bl	3ee0 <PyType_Ready@plt>
    a478:	tbnz	w0, #31, a438 <PyInit__elementtree@@Base+0x3c>
    a47c:	add	x0, x20, #0x4f8
    a480:	bl	3ee0 <PyType_Ready@plt>
    a484:	tbnz	w0, #31, a438 <PyInit__elementtree@@Base+0x3c>
    a488:	mov	x0, x19
    a48c:	mov	w1, #0x3f5                 	// #1013
    a490:	bl	3fe0 <PyModule_Create2@plt>
    a494:	mov	x19, x0
    a498:	cbz	x0, a438 <PyInit__elementtree@@Base+0x3c>
    a49c:	bl	3e50 <PyModule_GetState@plt>
    a4a0:	mov	x23, x0
    a4a4:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    a4a8:	add	x0, x0, #0xc39
    a4ac:	bl	3ff0 <PyImport_ImportModule@plt>
    a4b0:	mov	x20, x0
    a4b4:	cbz	x0, a438 <PyInit__elementtree@@Base+0x3c>
    a4b8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a4bc:	add	x1, x1, #0xc35
    a4c0:	bl	3d40 <PyObject_GetAttrString@plt>
    a4c4:	str	x0, [x23, #8]
    a4c8:	mov	x0, x20
    a4cc:	bl	5b70 <PySequence_Fast@plt+0x18e0>
    a4d0:	ldr	x0, [x23, #8]
    a4d4:	cbz	x0, a438 <PyInit__elementtree@@Base+0x3c>
    a4d8:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    a4dc:	add	x0, x0, #0xc3e
    a4e0:	bl	3ff0 <PyImport_ImportModule@plt>
    a4e4:	str	x0, [x23, #16]
    a4e8:	cbz	x0, a438 <PyInit__elementtree@@Base+0x3c>
    a4ec:	mov	w1, #0x0                   	// #0
    a4f0:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    a4f4:	add	x0, x0, #0xc54
    a4f8:	bl	3ed0 <PyCapsule_Import@plt>
    a4fc:	mov	x20, x0
    a500:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x13c04>
    a504:	str	x20, [x0, #1080]
    a508:	cbz	x20, a438 <PyInit__elementtree@@Base+0x3c>
    a50c:	ldr	x0, [x20]
    a510:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a514:	add	x1, x1, #0xc67
    a518:	bl	4040 <strcmp@plt>
    a51c:	cbnz	w0, a54c <PyInit__elementtree@@Base+0x150>
    a520:	ldr	w0, [x20, #8]
    a524:	cmp	w0, #0xaf
    a528:	b.ls	a54c <PyInit__elementtree@@Base+0x150>  // b.plast
    a52c:	ldr	w0, [x20, #12]
    a530:	cmp	w0, #0x2
    a534:	b.ne	a54c <PyInit__elementtree@@Base+0x150>  // b.any
    a538:	ldr	x1, [x20, #16]
    a53c:	mov	x0, #0x2                   	// #2
    a540:	movk	x0, #0x9, lsl #32
    a544:	cmp	x1, x0
    a548:	b.eq	a568 <PyInit__elementtree@@Base+0x16c>  // b.none
    a54c:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a550:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a554:	add	x1, x1, #0xc7e
    a558:	ldr	x0, [x0, #4000]
    a55c:	ldr	x0, [x0]
    a560:	bl	3e20 <PyErr_SetString@plt>
    a564:	b	a438 <PyInit__elementtree@@Base+0x3c>
    a568:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x11c04>
    a56c:	mov	x2, #0x0                   	// #0
    a570:	add	x20, x22, #0x328
    a574:	mov	x21, x19
    a578:	ldr	x0, [x0, #4056]
    a57c:	ldr	x1, [x0]
    a580:	adrp	x0, a000 <PySequence_Fast@plt+0x5d70>
    a584:	add	x0, x0, #0xc9e
    a588:	bl	3f30 <PyErr_NewException@plt>
    a58c:	mov	x2, x0
    a590:	ldr	x0, [x0]
    a594:	str	x2, [x23]
    a598:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a59c:	add	x1, x1, #0xcb4
    a5a0:	add	x0, x0, #0x1
    a5a4:	str	x0, [x2]
    a5a8:	mov	x0, x19
    a5ac:	bl	4170 <PyModule_AddObject@plt>
    a5b0:	ldr	x0, [x22, #808]
    a5b4:	mov	x2, x20
    a5b8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a5bc:	add	x1, x1, #0xbf7
    a5c0:	add	x0, x0, #0x1
    a5c4:	str	x0, [x22, #808]
    a5c8:	mov	x0, x19
    a5cc:	bl	4170 <PyModule_AddObject@plt>
    a5d0:	ldr	x0, [x20, #416]
    a5d4:	add	x2, x20, #0x1a0
    a5d8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a5dc:	add	x1, x1, #0xef7
    a5e0:	add	x0, x0, #0x1
    a5e4:	str	x0, [x20, #416]
    a5e8:	mov	x0, x19
    a5ec:	bl	4170 <PyModule_AddObject@plt>
    a5f0:	ldr	x0, [x20, #1272]
    a5f4:	add	x2, x20, #0x4f8
    a5f8:	adrp	x1, a000 <PySequence_Fast@plt+0x5d70>
    a5fc:	add	x1, x1, #0xed7
    a600:	add	x0, x0, #0x1
    a604:	str	x0, [x20, #1272]
    a608:	mov	x0, x19
    a60c:	bl	4170 <PyModule_AddObject@plt>
    a610:	b	a438 <PyInit__elementtree@@Base+0x3c>

Disassembly of section .fini:

000000000000a614 <.fini>:
    a614:	stp	x29, x30, [sp, #-16]!
    a618:	mov	x29, sp
    a61c:	ldp	x29, x30, [sp], #16
    a620:	ret
