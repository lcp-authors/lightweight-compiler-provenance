
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000b9c8 <.init>:
    b9c8:	stp	x29, x30, [sp, #-16]!
    b9cc:	mov	x29, sp
    b9d0:	bl	cd60 <__gmpfr_flags@plt>
    b9d4:	ldp	x29, x30, [sp], #16
    b9d8:	ret

Disassembly of section .plt:

000000000000b9e0 <mpfr_agm@plt-0x20>:
    b9e0:	stp	x16, x30, [sp, #-16]!
    b9e4:	adrp	x16, 80000 <__gmpfr_l2b@@Base+0x200>
    b9e8:	ldr	x17, [x16, #4088]
    b9ec:	add	x16, x16, #0xff8
    b9f0:	br	x17
    b9f4:	nop
    b9f8:	nop
    b9fc:	nop

000000000000ba00 <mpfr_agm@plt>:
    ba00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba04:	ldr	x17, [x16]
    ba08:	add	x16, x16, #0x0
    ba0c:	br	x17

000000000000ba10 <memcpy@plt>:
    ba10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba14:	ldr	x17, [x16, #8]
    ba18:	add	x16, x16, #0x8
    ba1c:	br	x17

000000000000ba20 <__gmpz_get_si@plt>:
    ba20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba24:	ldr	x17, [x16, #16]
    ba28:	add	x16, x16, #0x10
    ba2c:	br	x17

000000000000ba30 <__gmpz_tdiv_r_2exp@plt>:
    ba30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba34:	ldr	x17, [x16, #24]
    ba38:	add	x16, x16, #0x18
    ba3c:	br	x17

000000000000ba40 <mpfr_set_ld@plt>:
    ba40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba44:	ldr	x17, [x16, #32]
    ba48:	add	x16, x16, #0x20
    ba4c:	br	x17

000000000000ba50 <mpfr_mul_ui@plt>:
    ba50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba54:	ldr	x17, [x16, #40]
    ba58:	add	x16, x16, #0x28
    ba5c:	br	x17

000000000000ba60 <__gmpn_tdiv_qr@plt>:
    ba60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba64:	ldr	x17, [x16, #48]
    ba68:	add	x16, x16, #0x30
    ba6c:	br	x17

000000000000ba70 <mpfr_cot@plt>:
    ba70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba74:	ldr	x17, [x16, #56]
    ba78:	add	x16, x16, #0x38
    ba7c:	br	x17

000000000000ba80 <mpfr_set_si_2exp@plt>:
    ba80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba84:	ldr	x17, [x16, #64]
    ba88:	add	x16, x16, #0x40
    ba8c:	br	x17

000000000000ba90 <__gmpz_scan1@plt>:
    ba90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ba94:	ldr	x17, [x16, #72]
    ba98:	add	x16, x16, #0x48
    ba9c:	br	x17

000000000000baa0 <mpfr_random_deviate_value@plt>:
    baa0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    baa4:	ldr	x17, [x16, #80]
    baa8:	add	x16, x16, #0x50
    baac:	br	x17

000000000000bab0 <strlen@plt>:
    bab0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bab4:	ldr	x17, [x16, #88]
    bab8:	add	x16, x16, #0x58
    babc:	br	x17

000000000000bac0 <fputs@plt>:
    bac0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bac4:	ldr	x17, [x16, #96]
    bac8:	add	x16, x16, #0x60
    bacc:	br	x17

000000000000bad0 <__gmpz_tdiv_qr@plt>:
    bad0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bad4:	ldr	x17, [x16, #104]
    bad8:	add	x16, x16, #0x68
    badc:	br	x17

000000000000bae0 <__gmpn_copyd@plt>:
    bae0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bae4:	ldr	x17, [x16, #112]
    bae8:	add	x16, x16, #0x70
    baec:	br	x17

000000000000baf0 <mpfr_cosh@plt>:
    baf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    baf4:	ldr	x17, [x16, #120]
    baf8:	add	x16, x16, #0x78
    bafc:	br	x17

000000000000bb00 <mpfr_tanh@plt>:
    bb00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb04:	ldr	x17, [x16, #128]
    bb08:	add	x16, x16, #0x80
    bb0c:	br	x17

000000000000bb10 <mpfr_free_cache@plt>:
    bb10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb14:	ldr	x17, [x16, #136]
    bb18:	add	x16, x16, #0x88
    bb1c:	br	x17

000000000000bb20 <mpfr_ui_pow_ui@plt>:
    bb20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb24:	ldr	x17, [x16, #144]
    bb28:	add	x16, x16, #0x90
    bb2c:	br	x17

000000000000bb30 <__gmpz_tdiv_q@plt>:
    bb30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb34:	ldr	x17, [x16, #152]
    bb38:	add	x16, x16, #0x98
    bb3c:	br	x17

000000000000bb40 <__gmpfr_ceil_exp2@plt>:
    bb40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb44:	ldr	x17, [x16, #160]
    bb48:	add	x16, x16, #0xa0
    bb4c:	br	x17

000000000000bb50 <mpfr_set_nan@plt>:
    bb50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb54:	ldr	x17, [x16, #168]
    bb58:	add	x16, x16, #0xa8
    bb5c:	br	x17

000000000000bb60 <__gmpz_cdiv_q_2exp@plt>:
    bb60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb64:	ldr	x17, [x16, #176]
    bb68:	add	x16, x16, #0xb0
    bb6c:	br	x17

000000000000bb70 <mpfr_sub@plt>:
    bb70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb74:	ldr	x17, [x16, #184]
    bb78:	add	x16, x16, #0xb8
    bb7c:	br	x17

000000000000bb80 <__gmpn_set_str@plt>:
    bb80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb84:	ldr	x17, [x16, #192]
    bb88:	add	x16, x16, #0xc0
    bb8c:	br	x17

000000000000bb90 <mpfr_mul_2si@plt>:
    bb90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bb94:	ldr	x17, [x16, #200]
    bb98:	add	x16, x16, #0xc8
    bb9c:	br	x17

000000000000bba0 <mpfr_gamma_one_and_two_third@plt>:
    bba0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bba4:	ldr	x17, [x16, #208]
    bba8:	add	x16, x16, #0xd0
    bbac:	br	x17

000000000000bbb0 <mpfr_cmp_z@plt>:
    bbb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bbb4:	ldr	x17, [x16, #216]
    bbb8:	add	x16, x16, #0xd8
    bbbc:	br	x17

000000000000bbc0 <mpfr_fits_intmax_p@plt>:
    bbc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bbc4:	ldr	x17, [x16, #224]
    bbc8:	add	x16, x16, #0xe0
    bbcc:	br	x17

000000000000bbd0 <mpfr_init@plt>:
    bbd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bbd4:	ldr	x17, [x16, #232]
    bbd8:	add	x16, x16, #0xe8
    bbdc:	br	x17

000000000000bbe0 <mpfr_tan@plt>:
    bbe0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bbe4:	ldr	x17, [x16, #240]
    bbe8:	add	x16, x16, #0xf0
    bbec:	br	x17

000000000000bbf0 <mpfr_fdump@plt>:
    bbf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bbf4:	ldr	x17, [x16, #248]
    bbf8:	add	x16, x16, #0xf8
    bbfc:	br	x17

000000000000bc00 <__gmpz_cmpabs_ui@plt>:
    bc00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc04:	ldr	x17, [x16, #256]
    bc08:	add	x16, x16, #0x100
    bc0c:	br	x17

000000000000bc10 <mpfr_strtofr@plt>:
    bc10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc14:	ldr	x17, [x16, #264]
    bc18:	add	x16, x16, #0x108
    bc1c:	br	x17

000000000000bc20 <mpfr_vasnprintf_aux@plt>:
    bc20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc24:	ldr	x17, [x16, #272]
    bc28:	add	x16, x16, #0x110
    bc2c:	br	x17

000000000000bc30 <__gmpz_sub_ui@plt>:
    bc30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc34:	ldr	x17, [x16, #280]
    bc38:	add	x16, x16, #0x118
    bc3c:	br	x17

000000000000bc40 <mpfr_ubf_zexp2exp@plt>:
    bc40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc44:	ldr	x17, [x16, #288]
    bc48:	add	x16, x16, #0x120
    bc4c:	br	x17

000000000000bc50 <__gmp_get_memory_functions@plt>:
    bc50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc54:	ldr	x17, [x16, #296]
    bc58:	add	x16, x16, #0x128
    bc5c:	br	x17

000000000000bc60 <__gmpz_sqrt@plt>:
    bc60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc64:	ldr	x17, [x16, #304]
    bc68:	add	x16, x16, #0x130
    bc6c:	br	x17

000000000000bc70 <__gmpfr_int_ceil_log2@plt>:
    bc70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc74:	ldr	x17, [x16, #312]
    bc78:	add	x16, x16, #0x138
    bc7c:	br	x17

000000000000bc80 <mpfr_mulhigh_n@plt>:
    bc80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc84:	ldr	x17, [x16, #320]
    bc88:	add	x16, x16, #0x140
    bc8c:	br	x17

000000000000bc90 <mpfr_set_erangeflag@plt>:
    bc90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bc94:	ldr	x17, [x16, #328]
    bc98:	add	x16, x16, #0x148
    bc9c:	br	x17

000000000000bca0 <mpfr_get_ui@plt>:
    bca0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bca4:	ldr	x17, [x16, #336]
    bca8:	add	x16, x16, #0x150
    bcac:	br	x17

000000000000bcb0 <__gmpz_set_ui@plt>:
    bcb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bcb4:	ldr	x17, [x16, #344]
    bcb8:	add	x16, x16, #0x158
    bcbc:	br	x17

000000000000bcc0 <__gmpn_lshift@plt>:
    bcc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bcc4:	ldr	x17, [x16, #352]
    bcc8:	add	x16, x16, #0x160
    bccc:	br	x17

000000000000bcd0 <__gmpfr_floor_log2@plt>:
    bcd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bcd4:	ldr	x17, [x16, #360]
    bcd8:	add	x16, x16, #0x168
    bcdc:	br	x17

000000000000bce0 <__gmpn_rshift@plt>:
    bce0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bce4:	ldr	x17, [x16, #368]
    bce8:	add	x16, x16, #0x170
    bcec:	br	x17

000000000000bcf0 <mpfr_cmp_d@plt>:
    bcf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bcf4:	ldr	x17, [x16, #376]
    bcf8:	add	x16, x16, #0x178
    bcfc:	br	x17

000000000000bd00 <__cxa_finalize@plt>:
    bd00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd04:	ldr	x17, [x16, #384]
    bd08:	add	x16, x16, #0x180
    bd0c:	br	x17

000000000000bd10 <sprintf@plt>:
    bd10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd14:	ldr	x17, [x16, #392]
    bd18:	add	x16, x16, #0x188
    bd1c:	br	x17

000000000000bd20 <putc@plt>:
    bd20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd24:	ldr	x17, [x16, #400]
    bd28:	add	x16, x16, #0x190
    bd2c:	br	x17

000000000000bd30 <mpfr_get_d@plt>:
    bd30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd34:	ldr	x17, [x16, #408]
    bd38:	add	x16, x16, #0x198
    bd3c:	br	x17

000000000000bd40 <mpfr_set_f@plt>:
    bd40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd44:	ldr	x17, [x16, #416]
    bd48:	add	x16, x16, #0x1a0
    bd4c:	br	x17

000000000000bd50 <mpfr_mul@plt>:
    bd50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd54:	ldr	x17, [x16, #424]
    bd58:	add	x16, x16, #0x1a8
    bd5c:	br	x17

000000000000bd60 <mpfr_sub_z@plt>:
    bd60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd64:	ldr	x17, [x16, #432]
    bd68:	add	x16, x16, #0x1b0
    bd6c:	br	x17

000000000000bd70 <mpfr_neg@plt>:
    bd70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd74:	ldr	x17, [x16, #440]
    bd78:	add	x16, x16, #0x1b8
    bd7c:	br	x17

000000000000bd80 <mpfr_exp10@plt>:
    bd80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd84:	ldr	x17, [x16, #448]
    bd88:	add	x16, x16, #0x1c0
    bd8c:	br	x17

000000000000bd90 <mpfr_pow@plt>:
    bd90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bd94:	ldr	x17, [x16, #456]
    bd98:	add	x16, x16, #0x1c8
    bd9c:	br	x17

000000000000bda0 <fputc@plt>:
    bda0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bda4:	ldr	x17, [x16, #464]
    bda8:	add	x16, x16, #0x1d0
    bdac:	br	x17

000000000000bdb0 <mpfr_cmp2@plt>:
    bdb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bdb4:	ldr	x17, [x16, #472]
    bdb8:	add	x16, x16, #0x1d8
    bdbc:	br	x17

000000000000bdc0 <mpfr_tmp_allocate@plt>:
    bdc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bdc4:	ldr	x17, [x16, #480]
    bdc8:	add	x16, x16, #0x1e0
    bdcc:	br	x17

000000000000bdd0 <mpfr_nextbelow@plt>:
    bdd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bdd4:	ldr	x17, [x16, #488]
    bdd8:	add	x16, x16, #0x1e8
    bddc:	br	x17

000000000000bde0 <__gmpz_sub@plt>:
    bde0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bde4:	ldr	x17, [x16, #496]
    bde8:	add	x16, x16, #0x1f0
    bdec:	br	x17

000000000000bdf0 <mpfr_random_deviate_clear@plt>:
    bdf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bdf4:	ldr	x17, [x16, #504]
    bdf8:	add	x16, x16, #0x1f8
    bdfc:	br	x17

000000000000be00 <mpfr_get_z@plt>:
    be00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be04:	ldr	x17, [x16, #512]
    be08:	add	x16, x16, #0x200
    be0c:	br	x17

000000000000be10 <__gmpn_com@plt>:
    be10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be14:	ldr	x17, [x16, #520]
    be18:	add	x16, x16, #0x208
    be1c:	br	x17

000000000000be20 <mpfr_exp_3@plt>:
    be20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be24:	ldr	x17, [x16, #528]
    be28:	add	x16, x16, #0x210
    be2c:	br	x17

000000000000be30 <__gmpz_fdiv_q@plt>:
    be30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be34:	ldr	x17, [x16, #536]
    be38:	add	x16, x16, #0x218
    be3c:	br	x17

000000000000be40 <mpfr_set_d@plt>:
    be40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be44:	ldr	x17, [x16, #544]
    be48:	add	x16, x16, #0x220
    be4c:	br	x17

000000000000be50 <mpfr_fits_ulong_p@plt>:
    be50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be54:	ldr	x17, [x16, #552]
    be58:	add	x16, x16, #0x228
    be5c:	br	x17

000000000000be60 <__gmpn_sub_n@plt>:
    be60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be64:	ldr	x17, [x16, #560]
    be68:	add	x16, x16, #0x230
    be6c:	br	x17

000000000000be70 <mpfr_clear_cache@plt>:
    be70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be74:	ldr	x17, [x16, #568]
    be78:	add	x16, x16, #0x238
    be7c:	br	x17

000000000000be80 <mpfr_div_ui2@plt>:
    be80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be84:	ldr	x17, [x16, #576]
    be88:	add	x16, x16, #0x240
    be8c:	br	x17

000000000000be90 <__gmpz_fits_slong_p@plt>:
    be90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    be94:	ldr	x17, [x16, #584]
    be98:	add	x16, x16, #0x248
    be9c:	br	x17

000000000000bea0 <localeconv@plt>:
    bea0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bea4:	ldr	x17, [x16, #592]
    bea8:	add	x16, x16, #0x250
    beac:	br	x17

000000000000beb0 <__gmpz_cdiv_q_ui@plt>:
    beb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    beb4:	ldr	x17, [x16, #600]
    beb8:	add	x16, x16, #0x258
    bebc:	br	x17

000000000000bec0 <mpfr_frac@plt>:
    bec0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bec4:	ldr	x17, [x16, #608]
    bec8:	add	x16, x16, #0x260
    becc:	br	x17

000000000000bed0 <mpfr_set_prec@plt>:
    bed0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bed4:	ldr	x17, [x16, #616]
    bed8:	add	x16, x16, #0x268
    bedc:	br	x17

000000000000bee0 <__gmpz_cmpabs@plt>:
    bee0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bee4:	ldr	x17, [x16, #624]
    bee8:	add	x16, x16, #0x270
    beec:	br	x17

000000000000bef0 <mpfr_pow_z@plt>:
    bef0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bef4:	ldr	x17, [x16, #632]
    bef8:	add	x16, x16, #0x278
    befc:	br	x17

000000000000bf00 <mpfr_powerof2_raw@plt>:
    bf00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf04:	ldr	x17, [x16, #640]
    bf08:	add	x16, x16, #0x280
    bf0c:	br	x17

000000000000bf10 <__gmpz_setbit@plt>:
    bf10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf14:	ldr	x17, [x16, #648]
    bf18:	add	x16, x16, #0x288
    bf1c:	br	x17

000000000000bf20 <__gmpfr_isqrt@plt>:
    bf20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf24:	ldr	x17, [x16, #656]
    bf28:	add	x16, x16, #0x290
    bf2c:	br	x17

000000000000bf30 <mpfr_rint_trunc@plt>:
    bf30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf34:	ldr	x17, [x16, #664]
    bf38:	add	x16, x16, #0x298
    bf3c:	br	x17

000000000000bf40 <mpfr_overflow@plt>:
    bf40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf44:	ldr	x17, [x16, #672]
    bf48:	add	x16, x16, #0x2a0
    bf4c:	br	x17

000000000000bf50 <mpfr_cmp_ui_2exp@plt>:
    bf50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf54:	ldr	x17, [x16, #680]
    bf58:	add	x16, x16, #0x2a8
    bf5c:	br	x17

000000000000bf60 <__gmpz_divexact@plt>:
    bf60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf64:	ldr	x17, [x16, #688]
    bf68:	add	x16, x16, #0x2b0
    bf6c:	br	x17

000000000000bf70 <mpfr_pow_ui@plt>:
    bf70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf74:	ldr	x17, [x16, #696]
    bf78:	add	x16, x16, #0x2b8
    bf7c:	br	x17

000000000000bf80 <mpfr_ubf_mul_exact@plt>:
    bf80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf84:	ldr	x17, [x16, #704]
    bf88:	add	x16, x16, #0x2c0
    bf8c:	br	x17

000000000000bf90 <mpfr_mpz_init@plt>:
    bf90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bf94:	ldr	x17, [x16, #712]
    bf98:	add	x16, x16, #0x2c8
    bf9c:	br	x17

000000000000bfa0 <__gmpz_set@plt>:
    bfa0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bfa4:	ldr	x17, [x16, #720]
    bfa8:	add	x16, x16, #0x2d0
    bfac:	br	x17

000000000000bfb0 <mpfr_bernoulli_freecache@plt>:
    bfb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bfb4:	ldr	x17, [x16, #728]
    bfb8:	add	x16, x16, #0x2d8
    bfbc:	br	x17

000000000000bfc0 <__gmpz_fac_ui@plt>:
    bfc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bfc4:	ldr	x17, [x16, #736]
    bfc8:	add	x16, x16, #0x2e0
    bfcc:	br	x17

000000000000bfd0 <__gmpfr_vasprintf@plt>:
    bfd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bfd4:	ldr	x17, [x16, #744]
    bfd8:	add	x16, x16, #0x2e8
    bfdc:	br	x17

000000000000bfe0 <__gmpz_tstbit@plt>:
    bfe0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bfe4:	ldr	x17, [x16, #752]
    bfe8:	add	x16, x16, #0x2f0
    bfec:	br	x17

000000000000bff0 <__gmpz_mul@plt>:
    bff0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    bff4:	ldr	x17, [x16, #760]
    bff8:	add	x16, x16, #0x2f8
    bffc:	br	x17

000000000000c000 <__gmpfr_set_uj_2exp@plt>:
    c000:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c004:	ldr	x17, [x16, #768]
    c008:	add	x16, x16, #0x300
    c00c:	br	x17

000000000000c010 <mpfr_fits_uintmax_p@plt>:
    c010:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c014:	ldr	x17, [x16, #776]
    c018:	add	x16, x16, #0x308
    c01c:	br	x17

000000000000c020 <mpfr_sincos_fast@plt>:
    c020:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c024:	ldr	x17, [x16, #784]
    c028:	add	x16, x16, #0x310
    c02c:	br	x17

000000000000c030 <mpfr_z_sub@plt>:
    c030:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c034:	ldr	x17, [x16, #792]
    c038:	add	x16, x16, #0x318
    c03c:	br	x17

000000000000c040 <__gmpz_tdiv_q_ui@plt>:
    c040:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c044:	ldr	x17, [x16, #800]
    c048:	add	x16, x16, #0x320
    c04c:	br	x17

000000000000c050 <__gmp_vasprintf@plt>:
    c050:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c054:	ldr	x17, [x16, #808]
    c058:	add	x16, x16, #0x328
    c05c:	br	x17

000000000000c060 <mpfr_sub_si@plt>:
    c060:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c064:	ldr	x17, [x16, #816]
    c068:	add	x16, x16, #0x330
    c06c:	br	x17

000000000000c070 <mpfr_clear@plt>:
    c070:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c074:	ldr	x17, [x16, #824]
    c078:	add	x16, x16, #0x338
    c07c:	br	x17

000000000000c080 <__gmpfr_set_sj@plt>:
    c080:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c084:	ldr	x17, [x16, #832]
    c088:	add	x16, x16, #0x340
    c08c:	br	x17

000000000000c090 <mpfr_log@plt>:
    c090:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c094:	ldr	x17, [x16, #840]
    c098:	add	x16, x16, #0x348
    c09c:	br	x17

000000000000c0a0 <mpfr_lgamma@plt>:
    c0a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0a4:	ldr	x17, [x16, #848]
    c0a8:	add	x16, x16, #0x350
    c0ac:	br	x17

000000000000c0b0 <__gmpfr_cuberoot@plt>:
    c0b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0b4:	ldr	x17, [x16, #856]
    c0b8:	add	x16, x16, #0x358
    c0bc:	br	x17

000000000000c0c0 <__gmp_asprintf@plt>:
    c0c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0c4:	ldr	x17, [x16, #864]
    c0c8:	add	x16, x16, #0x360
    c0cc:	br	x17

000000000000c0d0 <mpfr_setmax@plt>:
    c0d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0d4:	ldr	x17, [x16, #872]
    c0d8:	add	x16, x16, #0x368
    c0dc:	br	x17

000000000000c0e0 <__gmpz_swap@plt>:
    c0e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0e4:	ldr	x17, [x16, #880]
    c0e8:	add	x16, x16, #0x370
    c0ec:	br	x17

000000000000c0f0 <mpfr_sub1sp@plt>:
    c0f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c0f4:	ldr	x17, [x16, #888]
    c0f8:	add	x16, x16, #0x378
    c0fc:	br	x17

000000000000c100 <__gmpz_mul_ui@plt>:
    c100:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c104:	ldr	x17, [x16, #896]
    c108:	add	x16, x16, #0x380
    c10c:	br	x17

000000000000c110 <memset@plt>:
    c110:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c114:	ldr	x17, [x16, #904]
    c118:	add	x16, x16, #0x388
    c11c:	br	x17

000000000000c120 <mpfr_nextabove@plt>:
    c120:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c124:	ldr	x17, [x16, #912]
    c128:	add	x16, x16, #0x390
    c12c:	br	x17

000000000000c130 <__gmpz_fdiv_q_2exp@plt>:
    c130:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c134:	ldr	x17, [x16, #920]
    c138:	add	x16, x16, #0x398
    c13c:	br	x17

000000000000c140 <mpfr_divhigh_n@plt>:
    c140:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c144:	ldr	x17, [x16, #928]
    c148:	add	x16, x16, #0x3a0
    c14c:	br	x17

000000000000c150 <mpfr_random_deviate_init@plt>:
    c150:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c154:	ldr	x17, [x16, #936]
    c158:	add	x16, x16, #0x3a8
    c15c:	br	x17

000000000000c160 <mpfr_integer_p@plt>:
    c160:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c164:	ldr	x17, [x16, #944]
    c168:	add	x16, x16, #0x3b0
    c16c:	br	x17

000000000000c170 <mpfr_mpz_clear@plt>:
    c170:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c174:	ldr	x17, [x16, #952]
    c178:	add	x16, x16, #0x3b8
    c17c:	br	x17

000000000000c180 <__gmpf_set_ui@plt>:
    c180:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c184:	ldr	x17, [x16, #960]
    c188:	add	x16, x16, #0x3c0
    c18c:	br	x17

000000000000c190 <mpfr_get_si@plt>:
    c190:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c194:	ldr	x17, [x16, #968]
    c198:	add	x16, x16, #0x3c8
    c19c:	br	x17

000000000000c1a0 <mpfr_add@plt>:
    c1a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1a4:	ldr	x17, [x16, #976]
    c1a8:	add	x16, x16, #0x3d0
    c1ac:	br	x17

000000000000c1b0 <mpfr_clears@plt>:
    c1b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1b4:	ldr	x17, [x16, #984]
    c1b8:	add	x16, x16, #0x3d8
    c1bc:	br	x17

000000000000c1c0 <mpfr_reallocate_func@plt>:
    c1c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1c4:	ldr	x17, [x16, #992]
    c1c8:	add	x16, x16, #0x3e0
    c1cc:	br	x17

000000000000c1d0 <mpfr_log2@plt>:
    c1d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1d4:	ldr	x17, [x16, #1000]
    c1d8:	add	x16, x16, #0x3e8
    c1dc:	br	x17

000000000000c1e0 <mpfr_erf@plt>:
    c1e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1e4:	ldr	x17, [x16, #1008]
    c1e8:	add	x16, x16, #0x3f0
    c1ec:	br	x17

000000000000c1f0 <mpfr_set@plt>:
    c1f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c1f4:	ldr	x17, [x16, #1016]
    c1f8:	add	x16, x16, #0x3f8
    c1fc:	br	x17

000000000000c200 <__gmpz_mul_2exp@plt>:
    c200:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c204:	ldr	x17, [x16, #1024]
    c208:	add	x16, x16, #0x400
    c20c:	br	x17

000000000000c210 <mpfr_floor@plt>:
    c210:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c214:	ldr	x17, [x16, #1032]
    c218:	add	x16, x16, #0x408
    c21c:	br	x17

000000000000c220 <mpfr_round@plt>:
    c220:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c224:	ldr	x17, [x16, #1040]
    c228:	add	x16, x16, #0x410
    c22c:	br	x17

000000000000c230 <mpfr_free_pool@plt>:
    c230:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c234:	ldr	x17, [x16, #1048]
    c238:	add	x16, x16, #0x418
    c23c:	br	x17

000000000000c240 <mpfr_set_z@plt>:
    c240:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c244:	ldr	x17, [x16, #1056]
    c248:	add	x16, x16, #0x420
    c24c:	br	x17

000000000000c250 <mpfr_fma@plt>:
    c250:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c254:	ldr	x17, [x16, #1064]
    c258:	add	x16, x16, #0x428
    c25c:	br	x17

000000000000c260 <mpfr_add_ui@plt>:
    c260:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c264:	ldr	x17, [x16, #1072]
    c268:	add	x16, x16, #0x430
    c26c:	br	x17

000000000000c270 <mpfr_clear_flags@plt>:
    c270:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c274:	ldr	x17, [x16, #1080]
    c278:	add	x16, x16, #0x438
    c27c:	br	x17

000000000000c280 <mpfr_roundeven@plt>:
    c280:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c284:	ldr	x17, [x16, #1088]
    c288:	add	x16, x16, #0x440
    c28c:	br	x17

000000000000c290 <__gmpz_addmul@plt>:
    c290:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c294:	ldr	x17, [x16, #1096]
    c298:	add	x16, x16, #0x448
    c29c:	br	x17

000000000000c2a0 <getc@plt>:
    c2a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2a4:	ldr	x17, [x16, #1104]
    c2a8:	add	x16, x16, #0x450
    c2ac:	br	x17

000000000000c2b0 <mpfr_setmin@plt>:
    c2b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2b4:	ldr	x17, [x16, #1112]
    c2b8:	add	x16, x16, #0x458
    c2bc:	br	x17

000000000000c2c0 <mpfr_mul_2ui@plt>:
    c2c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2c4:	ldr	x17, [x16, #1120]
    c2c8:	add	x16, x16, #0x460
    c2cc:	br	x17

000000000000c2d0 <__gmp_urandomm_ui@plt>:
    c2d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2d4:	ldr	x17, [x16, #1128]
    c2d8:	add	x16, x16, #0x468
    c2dc:	br	x17

000000000000c2e0 <__gmpz_root@plt>:
    c2e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2e4:	ldr	x17, [x16, #1136]
    c2e8:	add	x16, x16, #0x470
    c2ec:	br	x17

000000000000c2f0 <mpfr_ui_div@plt>:
    c2f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c2f4:	ldr	x17, [x16, #1144]
    c2f8:	add	x16, x16, #0x478
    c2fc:	br	x17

000000000000c300 <mpfr_rint@plt>:
    c300:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c304:	ldr	x17, [x16, #1152]
    c308:	add	x16, x16, #0x480
    c30c:	br	x17

000000000000c310 <mpfr_random_deviate_tstbit@plt>:
    c310:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c314:	ldr	x17, [x16, #1160]
    c318:	add	x16, x16, #0x488
    c31c:	br	x17

000000000000c320 <mpfr_sinh@plt>:
    c320:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c324:	ldr	x17, [x16, #1168]
    c328:	add	x16, x16, #0x490
    c32c:	br	x17

000000000000c330 <__gmpz_pow_ui@plt>:
    c330:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c334:	ldr	x17, [x16, #1176]
    c338:	add	x16, x16, #0x498
    c33c:	br	x17

000000000000c340 <mpfr_set_str_binary@plt>:
    c340:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c344:	ldr	x17, [x16, #1184]
    c348:	add	x16, x16, #0x4a0
    c34c:	br	x17

000000000000c350 <mpfr_can_round_raw@plt>:
    c350:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c354:	ldr	x17, [x16, #1192]
    c358:	add	x16, x16, #0x4a8
    c35c:	br	x17

000000000000c360 <__gmpz_add_ui@plt>:
    c360:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c364:	ldr	x17, [x16, #1200]
    c368:	add	x16, x16, #0x4b0
    c36c:	br	x17

000000000000c370 <mpfr_round_p@plt>:
    c370:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c374:	ldr	x17, [x16, #1208]
    c378:	add	x16, x16, #0x4b8
    c37c:	br	x17

000000000000c380 <mpfr_cache@plt>:
    c380:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c384:	ldr	x17, [x16, #1216]
    c388:	add	x16, x16, #0x4c0
    c38c:	br	x17

000000000000c390 <__gmon_start__@plt>:
    c390:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c394:	ldr	x17, [x16, #1224]
    c398:	add	x16, x16, #0x4c8
    c39c:	br	x17

000000000000c3a0 <mpfr_add_d@plt>:
    c3a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3a4:	ldr	x17, [x16, #1232]
    c3a8:	add	x16, x16, #0x4d0
    c3ac:	br	x17

000000000000c3b0 <__gmpn_sqr@plt>:
    c3b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3b4:	ldr	x17, [x16, #1240]
    c3b8:	add	x16, x16, #0x4d8
    c3bc:	br	x17

000000000000c3c0 <mpfr_underflow@plt>:
    c3c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3c4:	ldr	x17, [x16, #1248]
    c3c8:	add	x16, x16, #0x4e0
    c3cc:	br	x17

000000000000c3d0 <mpfr_cmp_si_2exp@plt>:
    c3d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3d4:	ldr	x17, [x16, #1256]
    c3d8:	add	x16, x16, #0x4e8
    c3dc:	br	x17

000000000000c3e0 <abort@plt>:
    c3e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3e4:	ldr	x17, [x16, #1264]
    c3e8:	add	x16, x16, #0x4f0
    c3ec:	br	x17

000000000000c3f0 <mpfr_trunc@plt>:
    c3f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c3f4:	ldr	x17, [x16, #1272]
    c3f8:	add	x16, x16, #0x4f8
    c3fc:	br	x17

000000000000c400 <mpfr_sqr@plt>:
    c400:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c404:	ldr	x17, [x16, #1280]
    c408:	add	x16, x16, #0x500
    c40c:	br	x17

000000000000c410 <mpfr_tmp_free@plt>:
    c410:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c414:	ldr	x17, [x16, #1288]
    c418:	add	x16, x16, #0x508
    c41c:	br	x17

000000000000c420 <mpfr_div_2si@plt>:
    c420:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c424:	ldr	x17, [x16, #1296]
    c428:	add	x16, x16, #0x510
    c42c:	br	x17

000000000000c430 <mpfr_cos@plt>:
    c430:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c434:	ldr	x17, [x16, #1304]
    c438:	add	x16, x16, #0x518
    c43c:	br	x17

000000000000c440 <__gmpz_realloc2@plt>:
    c440:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c444:	ldr	x17, [x16, #1312]
    c448:	add	x16, x16, #0x520
    c44c:	br	x17

000000000000c450 <mpfr_sin@plt>:
    c450:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c454:	ldr	x17, [x16, #1320]
    c458:	add	x16, x16, #0x528
    c45c:	br	x17

000000000000c460 <mpfr_nexttozero@plt>:
    c460:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c464:	ldr	x17, [x16, #1328]
    c468:	add	x16, x16, #0x530
    c46c:	br	x17

000000000000c470 <__gmpn_mul_n@plt>:
    c470:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c474:	ldr	x17, [x16, #1336]
    c478:	add	x16, x16, #0x538
    c47c:	br	x17

000000000000c480 <mpfr_add_z@plt>:
    c480:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c484:	ldr	x17, [x16, #1344]
    c488:	add	x16, x16, #0x540
    c48c:	br	x17

000000000000c490 <mpfr_sqrhigh_n@plt>:
    c490:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c494:	ldr	x17, [x16, #1352]
    c498:	add	x16, x16, #0x548
    c49c:	br	x17

000000000000c4a0 <mpfr_swap@plt>:
    c4a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4a4:	ldr	x17, [x16, #1360]
    c4a8:	add	x16, x16, #0x550
    c4ac:	br	x17

000000000000c4b0 <__gmpz_scan0@plt>:
    c4b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4b4:	ldr	x17, [x16, #1368]
    c4b8:	add	x16, x16, #0x558
    c4bc:	br	x17

000000000000c4c0 <__gmpn_submul_1@plt>:
    c4c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4c4:	ldr	x17, [x16, #1376]
    c4c8:	add	x16, x16, #0x560
    c4cc:	br	x17

000000000000c4d0 <mpfr_mul_z@plt>:
    c4d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4d4:	ldr	x17, [x16, #1384]
    c4d8:	add	x16, x16, #0x568
    c4dc:	br	x17

000000000000c4e0 <__gmpz_ui_pow_ui@plt>:
    c4e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4e4:	ldr	x17, [x16, #1392]
    c4e8:	add	x16, x16, #0x570
    c4ec:	br	x17

000000000000c4f0 <mpfr_set_z_2exp@plt>:
    c4f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c4f4:	ldr	x17, [x16, #1400]
    c4f8:	add	x16, x16, #0x578
    c4fc:	br	x17

000000000000c500 <mpfr_get_str@plt>:
    c500:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c504:	ldr	x17, [x16, #1408]
    c508:	add	x16, x16, #0x580
    c50c:	br	x17

000000000000c510 <mpfr_remquo@plt>:
    c510:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c514:	ldr	x17, [x16, #1416]
    c518:	add	x16, x16, #0x588
    c51c:	br	x17

000000000000c520 <__gmpn_copyi@plt>:
    c520:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c524:	ldr	x17, [x16, #1424]
    c528:	add	x16, x16, #0x590
    c52c:	br	x17

000000000000c530 <mpfr_sub_ui@plt>:
    c530:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c534:	ldr	x17, [x16, #1432]
    c538:	add	x16, x16, #0x598
    c53c:	br	x17

000000000000c540 <mpfr_round_near_x@plt>:
    c540:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c544:	ldr	x17, [x16, #1440]
    c548:	add	x16, x16, #0x5a0
    c54c:	br	x17

000000000000c550 <__gmp_fprintf@plt>:
    c550:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c554:	ldr	x17, [x16, #1448]
    c558:	add	x16, x16, #0x5a8
    c55c:	br	x17

000000000000c560 <__gmpq_set_ui@plt>:
    c560:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c564:	ldr	x17, [x16, #1456]
    c568:	add	x16, x16, #0x5b0
    c56c:	br	x17

000000000000c570 <__gmpz_divexact_ui@plt>:
    c570:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c574:	ldr	x17, [x16, #1464]
    c578:	add	x16, x16, #0x5b8
    c57c:	br	x17

000000000000c580 <mpfr_get_ld@plt>:
    c580:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c584:	ldr	x17, [x16, #1472]
    c588:	add	x16, x16, #0x5c0
    c58c:	br	x17

000000000000c590 <mpfr_random_deviate_swap@plt>:
    c590:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c594:	ldr	x17, [x16, #1480]
    c598:	add	x16, x16, #0x5c8
    c59c:	br	x17

000000000000c5a0 <__gmpn_add_n@plt>:
    c5a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5a4:	ldr	x17, [x16, #1488]
    c5a8:	add	x16, x16, #0x5d0
    c5ac:	br	x17

000000000000c5b0 <mpfr_set_inf@plt>:
    c5b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5b4:	ldr	x17, [x16, #1496]
    c5b8:	add	x16, x16, #0x5d8
    c5bc:	br	x17

000000000000c5c0 <mpfr_yn@plt>:
    c5c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5c4:	ldr	x17, [x16, #1504]
    c5c8:	add	x16, x16, #0x5e0
    c5cc:	br	x17

000000000000c5d0 <mpfr_si_sub@plt>:
    c5d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5d4:	ldr	x17, [x16, #1512]
    c5d8:	add	x16, x16, #0x5e8
    c5dc:	br	x17

000000000000c5e0 <__gmpn_get_str@plt>:
    c5e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5e4:	ldr	x17, [x16, #1520]
    c5e8:	add	x16, x16, #0x5f0
    c5ec:	br	x17

000000000000c5f0 <mpfr_set_ui_2exp@plt>:
    c5f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c5f4:	ldr	x17, [x16, #1528]
    c5f8:	add	x16, x16, #0x5f8
    c5fc:	br	x17

000000000000c600 <mpfr_lngamma@plt>:
    c600:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c604:	ldr	x17, [x16, #1536]
    c608:	add	x16, x16, #0x600
    c60c:	br	x17

000000000000c610 <__gmpz_fdiv_q_ui@plt>:
    c610:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c614:	ldr	x17, [x16, #1544]
    c618:	add	x16, x16, #0x608
    c61c:	br	x17

000000000000c620 <mpfr_div@plt>:
    c620:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c624:	ldr	x17, [x16, #1552]
    c628:	add	x16, x16, #0x610
    c62c:	br	x17

000000000000c630 <__ctype_b_loc@plt>:
    c630:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c634:	ldr	x17, [x16, #1560]
    c638:	add	x16, x16, #0x618
    c63c:	br	x17

000000000000c640 <__gmpz_clear@plt>:
    c640:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c644:	ldr	x17, [x16, #1568]
    c648:	add	x16, x16, #0x620
    c64c:	br	x17

000000000000c650 <strtol@plt>:
    c650:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c654:	ldr	x17, [x16, #1576]
    c658:	add	x16, x16, #0x628
    c65c:	br	x17

000000000000c660 <fread@plt>:
    c660:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c664:	ldr	x17, [x16, #1584]
    c668:	add	x16, x16, #0x630
    c66c:	br	x17

000000000000c670 <mpfr_nexttoinf@plt>:
    c670:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c674:	ldr	x17, [x16, #1592]
    c678:	add	x16, x16, #0x638
    c67c:	br	x17

000000000000c680 <__gmpz_mul_si@plt>:
    c680:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c684:	ldr	x17, [x16, #1600]
    c688:	add	x16, x16, #0x640
    c68c:	br	x17

000000000000c690 <mpfr_atan@plt>:
    c690:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c694:	ldr	x17, [x16, #1608]
    c698:	add	x16, x16, #0x648
    c69c:	br	x17

000000000000c6a0 <mpfr_set4@plt>:
    c6a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6a4:	ldr	x17, [x16, #1616]
    c6a8:	add	x16, x16, #0x650
    c6ac:	br	x17

000000000000c6b0 <mpfr_rootn_ui@plt>:
    c6b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6b4:	ldr	x17, [x16, #1624]
    c6b8:	add	x16, x16, #0x658
    c6bc:	br	x17

000000000000c6c0 <mpfr_set_str@plt>:
    c6c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6c4:	ldr	x17, [x16, #1632]
    c6c8:	add	x16, x16, #0x660
    c6cc:	br	x17

000000000000c6d0 <__gmpf_neg@plt>:
    c6d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6d4:	ldr	x17, [x16, #1640]
    c6d8:	add	x16, x16, #0x668
    c6dc:	br	x17

000000000000c6e0 <mpfr_fac_ui@plt>:
    c6e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6e4:	ldr	x17, [x16, #1648]
    c6e8:	add	x16, x16, #0x670
    c6ec:	br	x17

000000000000c6f0 <mpfr_pow_general@plt>:
    c6f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c6f4:	ldr	x17, [x16, #1656]
    c6f8:	add	x16, x16, #0x678
    c6fc:	br	x17

000000000000c700 <mpfr_log1p@plt>:
    c700:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c704:	ldr	x17, [x16, #1664]
    c708:	add	x16, x16, #0x680
    c70c:	br	x17

000000000000c710 <mpfr_sgn@plt>:
    c710:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c714:	ldr	x17, [x16, #1672]
    c718:	add	x16, x16, #0x688
    c71c:	br	x17

000000000000c720 <mpfr_round_raw_4@plt>:
    c720:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c724:	ldr	x17, [x16, #1680]
    c728:	add	x16, x16, #0x690
    c72c:	br	x17

000000000000c730 <ungetc@plt>:
    c730:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c734:	ldr	x17, [x16, #1688]
    c738:	add	x16, x16, #0x698
    c73c:	br	x17

000000000000c740 <__gmpz_tdiv_q_2exp@plt>:
    c740:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c744:	ldr	x17, [x16, #1696]
    c748:	add	x16, x16, #0x6a0
    c74c:	br	x17

000000000000c750 <mpfr_exp@plt>:
    c750:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c754:	ldr	x17, [x16, #1704]
    c758:	add	x16, x16, #0x6a8
    c75c:	br	x17

000000000000c760 <mpfr_round_raw_2@plt>:
    c760:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c764:	ldr	x17, [x16, #1712]
    c768:	add	x16, x16, #0x6b0
    c76c:	br	x17

000000000000c770 <__gmpz_cdiv_q@plt>:
    c770:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c774:	ldr	x17, [x16, #1720]
    c778:	add	x16, x16, #0x6b8
    c77c:	br	x17

000000000000c780 <mpfr_add1@plt>:
    c780:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c784:	ldr	x17, [x16, #1728]
    c788:	add	x16, x16, #0x6c0
    c78c:	br	x17

000000000000c790 <mpfr_fits_slong_p@plt>:
    c790:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c794:	ldr	x17, [x16, #1736]
    c798:	add	x16, x16, #0x6c8
    c79c:	br	x17

000000000000c7a0 <__gmpn_mul@plt>:
    c7a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7a4:	ldr	x17, [x16, #1744]
    c7a8:	add	x16, x16, #0x6d0
    c7ac:	br	x17

000000000000c7b0 <mpfr_gamma@plt>:
    c7b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7b4:	ldr	x17, [x16, #1752]
    c7b8:	add	x16, x16, #0x6d8
    c7bc:	br	x17

000000000000c7c0 <__gmpn_divrem_1@plt>:
    c7c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7c4:	ldr	x17, [x16, #1760]
    c7c8:	add	x16, x16, #0x6e0
    c7cc:	br	x17

000000000000c7d0 <mpfr_powerof2_raw2@plt>:
    c7d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7d4:	ldr	x17, [x16, #1768]
    c7d8:	add	x16, x16, #0x6e8
    c7dc:	br	x17

000000000000c7e0 <mpfr_random_deviate_reset@plt>:
    c7e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7e4:	ldr	x17, [x16, #1776]
    c7e8:	add	x16, x16, #0x6f0
    c7ec:	br	x17

000000000000c7f0 <mpfr_add_si@plt>:
    c7f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c7f4:	ldr	x17, [x16, #1784]
    c7f8:	add	x16, x16, #0x6f8
    c7fc:	br	x17

000000000000c800 <__gmpz_cmp_si@plt>:
    c800:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c804:	ldr	x17, [x16, #1792]
    c808:	add	x16, x16, #0x700
    c80c:	br	x17

000000000000c810 <mpfr_rand_raw@plt>:
    c810:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c814:	ldr	x17, [x16, #1800]
    c818:	add	x16, x16, #0x708
    c81c:	br	x17

000000000000c820 <mpfr_div_si@plt>:
    c820:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c824:	ldr	x17, [x16, #1808]
    c828:	add	x16, x16, #0x710
    c82c:	br	x17

000000000000c830 <mpfr_bernoulli_cache@plt>:
    c830:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c834:	ldr	x17, [x16, #1816]
    c838:	add	x16, x16, #0x718
    c83c:	br	x17

000000000000c840 <mpfr_sqrt_ui@plt>:
    c840:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c844:	ldr	x17, [x16, #1824]
    c848:	add	x16, x16, #0x720
    c84c:	br	x17

000000000000c850 <mpfr_set_q@plt>:
    c850:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c854:	ldr	x17, [x16, #1832]
    c858:	add	x16, x16, #0x728
    c85c:	br	x17

000000000000c860 <__gmpn_popcount@plt>:
    c860:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c864:	ldr	x17, [x16, #1840]
    c868:	add	x16, x16, #0x730
    c86c:	br	x17

000000000000c870 <mpfr_exp_2@plt>:
    c870:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c874:	ldr	x17, [x16, #1848]
    c878:	add	x16, x16, #0x738
    c87c:	br	x17

000000000000c880 <__gmpz_submul@plt>:
    c880:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c884:	ldr	x17, [x16, #1856]
    c888:	add	x16, x16, #0x740
    c88c:	br	x17

000000000000c890 <mpfr_free_str@plt>:
    c890:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c894:	ldr	x17, [x16, #1864]
    c898:	add	x16, x16, #0x748
    c89c:	br	x17

000000000000c8a0 <__gmpz_mod@plt>:
    c8a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8a4:	ldr	x17, [x16, #1872]
    c8a8:	add	x16, x16, #0x750
    c8ac:	br	x17

000000000000c8b0 <mpfr_si_div@plt>:
    c8b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8b4:	ldr	x17, [x16, #1880]
    c8b8:	add	x16, x16, #0x758
    c8bc:	br	x17

000000000000c8c0 <fwrite@plt>:
    c8c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8c4:	ldr	x17, [x16, #1888]
    c8c8:	add	x16, x16, #0x760
    c8cc:	br	x17

000000000000c8d0 <__gmpz_cmp@plt>:
    c8d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8d4:	ldr	x17, [x16, #1896]
    c8d8:	add	x16, x16, #0x768
    c8dc:	br	x17

000000000000c8e0 <mpfr_abort_prec_max@plt>:
    c8e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8e4:	ldr	x17, [x16, #1904]
    c8e8:	add	x16, x16, #0x770
    c8ec:	br	x17

000000000000c8f0 <mpfr_div_2ui@plt>:
    c8f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c8f4:	ldr	x17, [x16, #1912]
    c8f8:	add	x16, x16, #0x778
    c8fc:	br	x17

000000000000c900 <mpfr_mpz_init2@plt>:
    c900:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c904:	ldr	x17, [x16, #1920]
    c908:	add	x16, x16, #0x780
    c90c:	br	x17

000000000000c910 <strcpy@plt>:
    c910:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c914:	ldr	x17, [x16, #1928]
    c918:	add	x16, x16, #0x788
    c91c:	br	x17

000000000000c920 <__gmpfr_set_sj_2exp@plt>:
    c920:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c924:	ldr	x17, [x16, #1936]
    c928:	add	x16, x16, #0x790
    c92c:	br	x17

000000000000c930 <mpfr_sqrt@plt>:
    c930:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c934:	ldr	x17, [x16, #1944]
    c938:	add	x16, x16, #0x798
    c93c:	br	x17

000000000000c940 <strncat@plt>:
    c940:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c944:	ldr	x17, [x16, #1952]
    c948:	add	x16, x16, #0x7a0
    c94c:	br	x17

000000000000c950 <__gmpfr_ceil_log2@plt>:
    c950:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c954:	ldr	x17, [x16, #1960]
    c958:	add	x16, x16, #0x7a8
    c95c:	br	x17

000000000000c960 <mpfr_mul_si@plt>:
    c960:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c964:	ldr	x17, [x16, #1968]
    c968:	add	x16, x16, #0x7b0
    c96c:	br	x17

000000000000c970 <mpfr_prec_round@plt>:
    c970:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c974:	ldr	x17, [x16, #1976]
    c978:	add	x16, x16, #0x7b8
    c97c:	br	x17

000000000000c980 <mpfr_ceil@plt>:
    c980:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c984:	ldr	x17, [x16, #1984]
    c988:	add	x16, x16, #0x7c0
    c98c:	br	x17

000000000000c990 <mpfr_min_prec@plt>:
    c990:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c994:	ldr	x17, [x16, #1992]
    c998:	add	x16, x16, #0x7c8
    c99c:	br	x17

000000000000c9a0 <mpfr_cmp3@plt>:
    c9a0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9a4:	ldr	x17, [x16, #2000]
    c9a8:	add	x16, x16, #0x7d0
    c9ac:	br	x17

000000000000c9b0 <mpfr_cmpabs@plt>:
    c9b0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9b4:	ldr	x17, [x16, #2008]
    c9b8:	add	x16, x16, #0x7d8
    c9bc:	br	x17

000000000000c9c0 <__gmpz_add@plt>:
    c9c0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9c4:	ldr	x17, [x16, #2016]
    c9c8:	add	x16, x16, #0x7e0
    c9cc:	br	x17

000000000000c9d0 <mpfr_extract@plt>:
    c9d0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9d4:	ldr	x17, [x16, #2024]
    c9d8:	add	x16, x16, #0x7e8
    c9dc:	br	x17

000000000000c9e0 <mpfr_eint@plt>:
    c9e0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9e4:	ldr	x17, [x16, #2032]
    c9e8:	add	x16, x16, #0x7f0
    c9ec:	br	x17

000000000000c9f0 <mpfr_digamma@plt>:
    c9f0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    c9f4:	ldr	x17, [x16, #2040]
    c9f8:	add	x16, x16, #0x7f8
    c9fc:	br	x17

000000000000ca00 <mpfr_less_p@plt>:
    ca00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca04:	ldr	x17, [x16, #2048]
    ca08:	add	x16, x16, #0x800
    ca0c:	br	x17

000000000000ca10 <mpfr_ui_pow@plt>:
    ca10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca14:	ldr	x17, [x16, #2056]
    ca18:	add	x16, x16, #0x808
    ca1c:	br	x17

000000000000ca20 <mpfr_round_raw@plt>:
    ca20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca24:	ldr	x17, [x16, #2064]
    ca28:	add	x16, x16, #0x810
    ca2c:	br	x17

000000000000ca30 <mpfr_random_deviate_less@plt>:
    ca30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca34:	ldr	x17, [x16, #2072]
    ca38:	add	x16, x16, #0x818
    ca3c:	br	x17

000000000000ca40 <__gmpn_perfect_square_p@plt>:
    ca40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca44:	ldr	x17, [x16, #2080]
    ca48:	add	x16, x16, #0x820
    ca4c:	br	x17

000000000000ca50 <mpfr_ui_sub@plt>:
    ca50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca54:	ldr	x17, [x16, #2088]
    ca58:	add	x16, x16, #0x828
    ca5c:	br	x17

000000000000ca60 <mpfr_equal_p@plt>:
    ca60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca64:	ldr	x17, [x16, #2096]
    ca68:	add	x16, x16, #0x830
    ca6c:	br	x17

000000000000ca70 <mpfr_sub1@plt>:
    ca70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca74:	ldr	x17, [x16, #2104]
    ca78:	add	x16, x16, #0x838
    ca7c:	br	x17

000000000000ca80 <mpfr_init2@plt>:
    ca80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca84:	ldr	x17, [x16, #2112]
    ca88:	add	x16, x16, #0x840
    ca8c:	br	x17

000000000000ca90 <__gmpz_init2@plt>:
    ca90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ca94:	ldr	x17, [x16, #2120]
    ca98:	add	x16, x16, #0x848
    ca9c:	br	x17

000000000000caa0 <__gmpn_scan1@plt>:
    caa0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    caa4:	ldr	x17, [x16, #2128]
    caa8:	add	x16, x16, #0x850
    caac:	br	x17

000000000000cab0 <mpfr_ubf_exp_less_p@plt>:
    cab0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cab4:	ldr	x17, [x16, #2136]
    cab8:	add	x16, x16, #0x858
    cabc:	br	x17

000000000000cac0 <mpfr_get_z_2exp@plt>:
    cac0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cac4:	ldr	x17, [x16, #2144]
    cac8:	add	x16, x16, #0x860
    cacc:	br	x17

000000000000cad0 <strncpy@plt>:
    cad0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cad4:	ldr	x17, [x16, #2152]
    cad8:	add	x16, x16, #0x868
    cadc:	br	x17

000000000000cae0 <mpfr_set_1_2@plt>:
    cae0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cae4:	ldr	x17, [x16, #2160]
    cae8:	add	x16, x16, #0x870
    caec:	br	x17

000000000000caf0 <__gmpq_div_2exp@plt>:
    caf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    caf4:	ldr	x17, [x16, #2168]
    caf8:	add	x16, x16, #0x878
    cafc:	br	x17

000000000000cb00 <mpfr_ubf_diff_exp@plt>:
    cb00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb04:	ldr	x17, [x16, #2176]
    cb08:	add	x16, x16, #0x880
    cb0c:	br	x17

000000000000cb10 <__gmp_urandomb_ui@plt>:
    cb10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb14:	ldr	x17, [x16, #2184]
    cb18:	add	x16, x16, #0x888
    cb1c:	br	x17

000000000000cb20 <__gmpz_cmp_ui@plt>:
    cb20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb24:	ldr	x17, [x16, #2192]
    cb28:	add	x16, x16, #0x890
    cb2c:	br	x17

000000000000cb30 <mpfr_check_range@plt>:
    cb30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb34:	ldr	x17, [x16, #2200]
    cb38:	add	x16, x16, #0x898
    cb3c:	br	x17

000000000000cb40 <mpfr_assert_fail@plt>:
    cb40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb44:	ldr	x17, [x16, #2208]
    cb48:	add	x16, x16, #0x8a0
    cb4c:	br	x17

000000000000cb50 <__gmpz_init@plt>:
    cb50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb54:	ldr	x17, [x16, #2216]
    cb58:	add	x16, x16, #0x8a8
    cb5c:	br	x17

000000000000cb60 <__gmpz_sizeinbase@plt>:
    cb60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb64:	ldr	x17, [x16, #2224]
    cb68:	add	x16, x16, #0x8b0
    cb6c:	br	x17

000000000000cb70 <__gmpz_set_si@plt>:
    cb70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb74:	ldr	x17, [x16, #2232]
    cb78:	add	x16, x16, #0x8b8
    cb7c:	br	x17

000000000000cb80 <mpfr_ceil_mul@plt>:
    cb80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb84:	ldr	x17, [x16, #2240]
    cb88:	add	x16, x16, #0x8c0
    cb8c:	br	x17

000000000000cb90 <mpfr_number_p@plt>:
    cb90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cb94:	ldr	x17, [x16, #2248]
    cb98:	add	x16, x16, #0x8c8
    cb9c:	br	x17

000000000000cba0 <mpfr_scale2@plt>:
    cba0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cba4:	ldr	x17, [x16, #2256]
    cba8:	add	x16, x16, #0x8d0
    cbac:	br	x17

000000000000cbb0 <mpfr_add1sp@plt>:
    cbb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cbb4:	ldr	x17, [x16, #2264]
    cbb8:	add	x16, x16, #0x8d8
    cbbc:	br	x17

000000000000cbc0 <__gmpz_powm_ui@plt>:
    cbc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cbc4:	ldr	x17, [x16, #2272]
    cbc8:	add	x16, x16, #0x8e0
    cbcc:	br	x17

000000000000cbd0 <mpfr_get_d_2exp@plt>:
    cbd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cbd4:	ldr	x17, [x16, #2280]
    cbd8:	add	x16, x16, #0x8e8
    cbdc:	br	x17

000000000000cbe0 <mpfr_mpn_exp@plt>:
    cbe0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cbe4:	ldr	x17, [x16, #2288]
    cbe8:	add	x16, x16, #0x8f0
    cbec:	br	x17

000000000000cbf0 <printf@plt>:
    cbf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cbf4:	ldr	x17, [x16, #2296]
    cbf8:	add	x16, x16, #0x8f8
    cbfc:	br	x17

000000000000cc00 <__errno_location@plt>:
    cc00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc04:	ldr	x17, [x16, #2304]
    cc08:	add	x16, x16, #0x900
    cc0c:	br	x17

000000000000cc10 <mpfr_jn@plt>:
    cc10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc14:	ldr	x17, [x16, #2312]
    cc18:	add	x16, x16, #0x908
    cc1c:	br	x17

000000000000cc20 <mpfr_free_func@plt>:
    cc20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc24:	ldr	x17, [x16, #2320]
    cc28:	add	x16, x16, #0x910
    cc2c:	br	x17

000000000000cc30 <__gmpz_addmul_ui@plt>:
    cc30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc34:	ldr	x17, [x16, #2328]
    cc38:	add	x16, x16, #0x918
    cc3c:	br	x17

000000000000cc40 <mpfr_sin_cos@plt>:
    cc40:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc44:	ldr	x17, [x16, #2336]
    cc48:	add	x16, x16, #0x920
    cc4c:	br	x17

000000000000cc50 <mpfr_inits2@plt>:
    cc50:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc54:	ldr	x17, [x16, #2344]
    cc58:	add	x16, x16, #0x928
    cc5c:	br	x17

000000000000cc60 <mpfr_div_ui@plt>:
    cc60:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc64:	ldr	x17, [x16, #2352]
    cc68:	add	x16, x16, #0x930
    cc6c:	br	x17

000000000000cc70 <mpfr_fmodquo@plt>:
    cc70:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc74:	ldr	x17, [x16, #2360]
    cc78:	add	x16, x16, #0x938
    cc7c:	br	x17

000000000000cc80 <mpfr_div_z@plt>:
    cc80:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc84:	ldr	x17, [x16, #2368]
    cc88:	add	x16, x16, #0x940
    cc8c:	br	x17

000000000000cc90 <mpfr_exp2@plt>:
    cc90:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cc94:	ldr	x17, [x16, #2376]
    cc98:	add	x16, x16, #0x948
    cc9c:	br	x17

000000000000cca0 <mpfr_odd_p@plt>:
    cca0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cca4:	ldr	x17, [x16, #2384]
    cca8:	add	x16, x16, #0x950
    ccac:	br	x17

000000000000ccb0 <__gmpn_divrem@plt>:
    ccb0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ccb4:	ldr	x17, [x16, #2392]
    ccb8:	add	x16, x16, #0x958
    ccbc:	br	x17

000000000000ccc0 <__gmpn_sqrtrem@plt>:
    ccc0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ccc4:	ldr	x17, [x16, #2400]
    ccc8:	add	x16, x16, #0x960
    cccc:	br	x17

000000000000ccd0 <__gmpn_addmul_1@plt>:
    ccd0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ccd4:	ldr	x17, [x16, #2408]
    ccd8:	add	x16, x16, #0x968
    ccdc:	br	x17

000000000000cce0 <fprintf@plt>:
    cce0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cce4:	ldr	x17, [x16, #2416]
    cce8:	add	x16, x16, #0x970
    ccec:	br	x17

000000000000ccf0 <mpfr_allocate_func@plt>:
    ccf0:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    ccf4:	ldr	x17, [x16, #2424]
    ccf8:	add	x16, x16, #0x978
    ccfc:	br	x17

000000000000cd00 <__gmpz_urandomb@plt>:
    cd00:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cd04:	ldr	x17, [x16, #2432]
    cd08:	add	x16, x16, #0x980
    cd0c:	br	x17

000000000000cd10 <mpfr_remainder@plt>:
    cd10:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cd14:	ldr	x17, [x16, #2440]
    cd18:	add	x16, x16, #0x988
    cd1c:	br	x17

000000000000cd20 <mpfr_cbrt@plt>:
    cd20:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cd24:	ldr	x17, [x16, #2448]
    cd28:	add	x16, x16, #0x990
    cd2c:	br	x17

000000000000cd30 <__gmpn_mul_1@plt>:
    cd30:	adrp	x16, 81000 <mpfr_agm@@Base+0x72438>
    cd34:	ldr	x17, [x16, #2456]
    cd38:	add	x16, x16, #0x998
    cd3c:	br	x17

000000000000cd40 <__gmpfr_emin@plt>:
    cd40:	stp	x2, x3, [sp, #-16]!
    cd44:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
    cd48:	adrp	x3, 80000 <__gmpfr_l2b@@Base+0x200>
    cd4c:	ldr	x2, [x2, #4064]

000000000000cd50 <__gmpfr_emax@plt>:
    cd50:	add	x3, x3, #0xfe8
    cd54:	br	x2
    cd58:	nop
    cd5c:	nop

Disassembly of section .text:

000000000000cd60 <mpfr_get_emin@@Base-0xd4>:
    cd60:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
    cd64:	ldr	x0, [x0, #4024]
    cd68:	cbz	x0, cd70 <__gmpfr_cache_const_log2@plt>
    cd6c:	b	c390 <__gmon_start__@plt>
    cd70:	ret
    cd74:	nop
    cd78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cd7c:	add	x0, x0, #0xa68
    cd80:	adrp	x1, 81000 <mpfr_agm@@Base+0x72438>
    cd84:	add	x1, x1, #0xa68
    cd88:	cmp	x1, x0
    cd8c:	b.eq	cda4 <__gmpfr_default_fp_bit_precision@plt+0x4>  // b.none
    cd90:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
    cd94:	ldr	x1, [x1, #3936]
    cd98:	cbz	x1, cda4 <__gmpfr_default_fp_bit_precision@plt+0x4>
    cd9c:	mov	x16, x1
    cda0:	br	x16
    cda4:	ret
    cda8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cdac:	add	x0, x0, #0xa68
    cdb0:	adrp	x1, 81000 <mpfr_agm@@Base+0x72438>
    cdb4:	add	x1, x1, #0xa68
    cdb8:	sub	x1, x1, x0
    cdbc:	lsr	x2, x1, #63
    cdc0:	add	x1, x2, x1, asr #3
    cdc4:	cmp	xzr, x1, asr #1
    cdc8:	asr	x1, x1, #1
    cdcc:	b.eq	cde4 <*ABS*+0x148@plt+0x4>  // b.none
    cdd0:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
    cdd4:	ldr	x2, [x2, #4056]
    cdd8:	cbz	x2, cde4 <*ABS*+0x148@plt+0x4>
    cddc:	mov	x16, x2
    cde0:	br	x16
    cde4:	ret
    cde8:	stp	x29, x30, [sp, #-32]!
    cdec:	mov	x29, sp
    cdf0:	str	x19, [sp, #16]
    cdf4:	adrp	x19, 81000 <mpfr_agm@@Base+0x72438>
    cdf8:	ldrb	w0, [x19, #2664]
    cdfc:	cbnz	w0, ce24 <*ABS*+0x160@plt+0x34>
    ce00:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
    ce04:	ldr	x0, [x0, #3952]
    ce08:	cbz	x0, ce18 <*ABS*+0x160@plt+0x28>
    ce0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ce10:	ldr	x0, [x0, #2656]
    ce14:	bl	bd00 <__cxa_finalize@plt>
    ce18:	bl	cd78 <__gmpfr_cache_const_log2@plt+0x8>
    ce1c:	mov	w0, #0x1                   	// #1
    ce20:	strb	w0, [x19, #2664]
    ce24:	ldr	x19, [sp, #16]
    ce28:	ldp	x29, x30, [sp], #32
    ce2c:	ret
    ce30:	b	cda8 <__gmpfr_default_fp_bit_precision@plt+0x8>

000000000000ce34 <mpfr_get_emin@@Base>:
    ce34:	stp	x29, x30, [sp, #-16]!
    ce38:	mov	x29, sp
    ce3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ce40:	ldr	x1, [x0, #2512]
    ce44:	add	x0, x0, #0x9d0
    ce48:	blr	x1
    ce4c:	mrs	x1, tpidr_el0
    ce50:	ldr	x0, [x1, x0]
    ce54:	ldp	x29, x30, [sp], #16
    ce58:	ret

000000000000ce5c <mpfr_set_emin@@Base>:
    ce5c:	mov	x1, x0
    ce60:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ce64:	add	x0, x1, x0
    ce68:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
    ce6c:	cmp	x0, x2
    ce70:	b.hi	cea0 <mpfr_set_emin@@Base+0x44>  // b.pmore
    ce74:	stp	x29, x30, [sp, #-16]!
    ce78:	mov	x29, sp
    ce7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ce80:	ldr	x2, [x0, #2512]
    ce84:	add	x0, x0, #0x9d0
    ce88:	blr	x2
    ce8c:	mrs	x2, tpidr_el0
    ce90:	str	x1, [x2, x0]
    ce94:	mov	w0, #0x0                   	// #0
    ce98:	ldp	x29, x30, [sp], #16
    ce9c:	ret
    cea0:	mov	w0, #0x1                   	// #1
    cea4:	ret

000000000000cea8 <mpfr_get_emin_min@@Base>:
    cea8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    ceac:	ret

000000000000ceb0 <mpfr_get_emin_max@@Base>:
    ceb0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ceb4:	ret

000000000000ceb8 <mpfr_get_emax@@Base>:
    ceb8:	stp	x29, x30, [sp, #-16]!
    cebc:	mov	x29, sp
    cec0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cec4:	ldr	x1, [x0, #2544]
    cec8:	add	x0, x0, #0x9f0
    cecc:	blr	x1
    ced0:	mrs	x1, tpidr_el0
    ced4:	ldr	x0, [x1, x0]
    ced8:	ldp	x29, x30, [sp], #16
    cedc:	ret

000000000000cee0 <mpfr_set_emax@@Base>:
    cee0:	mov	x1, x0
    cee4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cee8:	add	x0, x1, x0
    ceec:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
    cef0:	cmp	x0, x2
    cef4:	b.hi	cf24 <mpfr_set_emax@@Base+0x44>  // b.pmore
    cef8:	stp	x29, x30, [sp, #-16]!
    cefc:	mov	x29, sp
    cf00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cf04:	ldr	x2, [x0, #2544]
    cf08:	add	x0, x0, #0x9f0
    cf0c:	blr	x2
    cf10:	mrs	x2, tpidr_el0
    cf14:	str	x1, [x2, x0]
    cf18:	mov	w0, #0x0                   	// #0
    cf1c:	ldp	x29, x30, [sp], #16
    cf20:	ret
    cf24:	mov	w0, #0x1                   	// #1
    cf28:	ret

000000000000cf2c <mpfr_get_emax_min@@Base>:
    cf2c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cf30:	ret

000000000000cf34 <mpfr_get_emax_max@@Base>:
    cf34:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cf38:	ret

000000000000cf3c <mpfr_flags_clear@@Base>:
    cf3c:	stp	x29, x30, [sp, #-16]!
    cf40:	mov	x29, sp
    cf44:	mov	w1, w0
    cf48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cf4c:	ldr	x2, [x0, #2576]
    cf50:	add	x0, x0, #0xa10
    cf54:	blr	x2
    cf58:	mrs	x2, tpidr_el0
    cf5c:	add	x0, x2, x0
    cf60:	eor	w1, w1, #0x3f
    cf64:	ldr	w2, [x0]
    cf68:	and	w1, w1, w2
    cf6c:	str	w1, [x0]
    cf70:	ldp	x29, x30, [sp], #16
    cf74:	ret

000000000000cf78 <mpfr_flags_set@@Base>:
    cf78:	stp	x29, x30, [sp, #-16]!
    cf7c:	mov	x29, sp
    cf80:	mov	w2, w0
    cf84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cf88:	ldr	x1, [x0, #2576]
    cf8c:	add	x0, x0, #0xa10
    cf90:	blr	x1
    cf94:	mrs	x1, tpidr_el0
    cf98:	add	x0, x1, x0
    cf9c:	ldr	w1, [x0]
    cfa0:	orr	w1, w1, w2
    cfa4:	str	w1, [x0]
    cfa8:	ldp	x29, x30, [sp], #16
    cfac:	ret

000000000000cfb0 <mpfr_flags_test@@Base>:
    cfb0:	stp	x29, x30, [sp, #-16]!
    cfb4:	mov	x29, sp
    cfb8:	mov	w1, w0
    cfbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cfc0:	ldr	x2, [x0, #2576]
    cfc4:	add	x0, x0, #0xa10
    cfc8:	blr	x2
    cfcc:	mrs	x2, tpidr_el0
    cfd0:	ldr	w0, [x2, x0]
    cfd4:	and	w0, w1, w0
    cfd8:	ldp	x29, x30, [sp], #16
    cfdc:	ret

000000000000cfe0 <mpfr_flags_save@@Base>:
    cfe0:	stp	x29, x30, [sp, #-16]!
    cfe4:	mov	x29, sp
    cfe8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    cfec:	ldr	x1, [x0, #2576]
    cff0:	add	x0, x0, #0xa10
    cff4:	blr	x1
    cff8:	mrs	x1, tpidr_el0
    cffc:	ldr	w0, [x1, x0]
    d000:	ldp	x29, x30, [sp], #16
    d004:	ret

000000000000d008 <mpfr_flags_restore@@Base>:
    d008:	stp	x29, x30, [sp, #-16]!
    d00c:	mov	x29, sp
    d010:	mov	w3, w0
    d014:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d018:	ldr	x2, [x0, #2576]
    d01c:	add	x0, x0, #0xa10
    d020:	blr	x2
    d024:	mrs	x2, tpidr_el0
    d028:	add	x0, x2, x0
    d02c:	eor	w2, w1, #0x3f
    d030:	ldr	w4, [x0]
    d034:	and	w2, w2, w4
    d038:	and	w1, w1, w3
    d03c:	orr	w1, w2, w1
    d040:	str	w1, [x0]
    d044:	ldp	x29, x30, [sp], #16
    d048:	ret

000000000000d04c <mpfr_clear_flags@@Base>:
    d04c:	stp	x29, x30, [sp, #-16]!
    d050:	mov	x29, sp
    d054:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d058:	ldr	x1, [x0, #2576]
    d05c:	add	x0, x0, #0xa10
    d060:	blr	x1
    d064:	mrs	x1, tpidr_el0
    d068:	str	wzr, [x1, x0]
    d06c:	ldp	x29, x30, [sp], #16
    d070:	ret

000000000000d074 <mpfr_clear_underflow@@Base>:
    d074:	stp	x29, x30, [sp, #-16]!
    d078:	mov	x29, sp
    d07c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d080:	ldr	x1, [x0, #2576]
    d084:	add	x0, x0, #0xa10
    d088:	blr	x1
    d08c:	mrs	x1, tpidr_el0
    d090:	add	x0, x1, x0
    d094:	ldr	w1, [x0]
    d098:	and	w1, w1, #0x3e
    d09c:	str	w1, [x0]
    d0a0:	ldp	x29, x30, [sp], #16
    d0a4:	ret

000000000000d0a8 <mpfr_clear_overflow@@Base>:
    d0a8:	stp	x29, x30, [sp, #-16]!
    d0ac:	mov	x29, sp
    d0b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d0b4:	ldr	x1, [x0, #2576]
    d0b8:	add	x0, x0, #0xa10
    d0bc:	blr	x1
    d0c0:	mrs	x1, tpidr_el0
    d0c4:	add	x0, x1, x0
    d0c8:	ldr	w1, [x0]
    d0cc:	mov	w2, #0x3d                  	// #61
    d0d0:	and	w1, w1, w2
    d0d4:	str	w1, [x0]
    d0d8:	ldp	x29, x30, [sp], #16
    d0dc:	ret

000000000000d0e0 <mpfr_clear_divby0@@Base>:
    d0e0:	stp	x29, x30, [sp, #-16]!
    d0e4:	mov	x29, sp
    d0e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d0ec:	ldr	x1, [x0, #2576]
    d0f0:	add	x0, x0, #0xa10
    d0f4:	blr	x1
    d0f8:	mrs	x1, tpidr_el0
    d0fc:	add	x0, x1, x0
    d100:	ldr	w1, [x0]
    d104:	and	w1, w1, #0x1f
    d108:	str	w1, [x0]
    d10c:	ldp	x29, x30, [sp], #16
    d110:	ret

000000000000d114 <mpfr_clear_nanflag@@Base>:
    d114:	stp	x29, x30, [sp, #-16]!
    d118:	mov	x29, sp
    d11c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d120:	ldr	x1, [x0, #2576]
    d124:	add	x0, x0, #0xa10
    d128:	blr	x1
    d12c:	mrs	x1, tpidr_el0
    d130:	add	x0, x1, x0
    d134:	ldr	w1, [x0]
    d138:	mov	w2, #0x3b                  	// #59
    d13c:	and	w1, w1, w2
    d140:	str	w1, [x0]
    d144:	ldp	x29, x30, [sp], #16
    d148:	ret

000000000000d14c <mpfr_clear_inexflag@@Base>:
    d14c:	stp	x29, x30, [sp, #-16]!
    d150:	mov	x29, sp
    d154:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d158:	ldr	x1, [x0, #2576]
    d15c:	add	x0, x0, #0xa10
    d160:	blr	x1
    d164:	mrs	x1, tpidr_el0
    d168:	add	x0, x1, x0
    d16c:	ldr	w1, [x0]
    d170:	mov	w2, #0x37                  	// #55
    d174:	and	w1, w1, w2
    d178:	str	w1, [x0]
    d17c:	ldp	x29, x30, [sp], #16
    d180:	ret

000000000000d184 <mpfr_clear_erangeflag@@Base>:
    d184:	stp	x29, x30, [sp, #-16]!
    d188:	mov	x29, sp
    d18c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d190:	ldr	x1, [x0, #2576]
    d194:	add	x0, x0, #0xa10
    d198:	blr	x1
    d19c:	mrs	x1, tpidr_el0
    d1a0:	add	x0, x1, x0
    d1a4:	ldr	w1, [x0]
    d1a8:	mov	w2, #0x2f                  	// #47
    d1ac:	and	w1, w1, w2
    d1b0:	str	w1, [x0]
    d1b4:	ldp	x29, x30, [sp], #16
    d1b8:	ret

000000000000d1bc <mpfr_set_underflow@@Base>:
    d1bc:	stp	x29, x30, [sp, #-16]!
    d1c0:	mov	x29, sp
    d1c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d1c8:	ldr	x1, [x0, #2576]
    d1cc:	add	x0, x0, #0xa10
    d1d0:	blr	x1
    d1d4:	mrs	x1, tpidr_el0
    d1d8:	add	x0, x1, x0
    d1dc:	ldr	w1, [x0]
    d1e0:	orr	w1, w1, #0x1
    d1e4:	str	w1, [x0]
    d1e8:	ldp	x29, x30, [sp], #16
    d1ec:	ret

000000000000d1f0 <mpfr_set_overflow@@Base>:
    d1f0:	stp	x29, x30, [sp, #-16]!
    d1f4:	mov	x29, sp
    d1f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d1fc:	ldr	x1, [x0, #2576]
    d200:	add	x0, x0, #0xa10
    d204:	blr	x1
    d208:	mrs	x1, tpidr_el0
    d20c:	add	x0, x1, x0
    d210:	ldr	w1, [x0]
    d214:	orr	w1, w1, #0x2
    d218:	str	w1, [x0]
    d21c:	ldp	x29, x30, [sp], #16
    d220:	ret

000000000000d224 <mpfr_set_divby0@@Base>:
    d224:	stp	x29, x30, [sp, #-16]!
    d228:	mov	x29, sp
    d22c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d230:	ldr	x1, [x0, #2576]
    d234:	add	x0, x0, #0xa10
    d238:	blr	x1
    d23c:	mrs	x1, tpidr_el0
    d240:	add	x0, x1, x0
    d244:	ldr	w1, [x0]
    d248:	orr	w1, w1, #0x20
    d24c:	str	w1, [x0]
    d250:	ldp	x29, x30, [sp], #16
    d254:	ret

000000000000d258 <mpfr_set_nanflag@@Base>:
    d258:	stp	x29, x30, [sp, #-16]!
    d25c:	mov	x29, sp
    d260:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d264:	ldr	x1, [x0, #2576]
    d268:	add	x0, x0, #0xa10
    d26c:	blr	x1
    d270:	mrs	x1, tpidr_el0
    d274:	add	x0, x1, x0
    d278:	ldr	w1, [x0]
    d27c:	orr	w1, w1, #0x4
    d280:	str	w1, [x0]
    d284:	ldp	x29, x30, [sp], #16
    d288:	ret

000000000000d28c <mpfr_set_inexflag@@Base>:
    d28c:	stp	x29, x30, [sp, #-16]!
    d290:	mov	x29, sp
    d294:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d298:	ldr	x1, [x0, #2576]
    d29c:	add	x0, x0, #0xa10
    d2a0:	blr	x1
    d2a4:	mrs	x1, tpidr_el0
    d2a8:	add	x0, x1, x0
    d2ac:	ldr	w1, [x0]
    d2b0:	orr	w1, w1, #0x8
    d2b4:	str	w1, [x0]
    d2b8:	ldp	x29, x30, [sp], #16
    d2bc:	ret

000000000000d2c0 <mpfr_set_erangeflag@@Base>:
    d2c0:	stp	x29, x30, [sp, #-16]!
    d2c4:	mov	x29, sp
    d2c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d2cc:	ldr	x1, [x0, #2576]
    d2d0:	add	x0, x0, #0xa10
    d2d4:	blr	x1
    d2d8:	mrs	x1, tpidr_el0
    d2dc:	add	x0, x1, x0
    d2e0:	ldr	w1, [x0]
    d2e4:	orr	w1, w1, #0x10
    d2e8:	str	w1, [x0]
    d2ec:	ldp	x29, x30, [sp], #16
    d2f0:	ret

000000000000d2f4 <mpfr_underflow_p@@Base>:
    d2f4:	stp	x29, x30, [sp, #-16]!
    d2f8:	mov	x29, sp
    d2fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d300:	ldr	x1, [x0, #2576]
    d304:	add	x0, x0, #0xa10
    d308:	blr	x1
    d30c:	mrs	x1, tpidr_el0
    d310:	ldr	w0, [x1, x0]
    d314:	and	w0, w0, #0x1
    d318:	ldp	x29, x30, [sp], #16
    d31c:	ret

000000000000d320 <mpfr_overflow_p@@Base>:
    d320:	stp	x29, x30, [sp, #-16]!
    d324:	mov	x29, sp
    d328:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d32c:	ldr	x1, [x0, #2576]
    d330:	add	x0, x0, #0xa10
    d334:	blr	x1
    d338:	mrs	x1, tpidr_el0
    d33c:	ldr	w0, [x1, x0]
    d340:	and	w0, w0, #0x2
    d344:	ldp	x29, x30, [sp], #16
    d348:	ret

000000000000d34c <mpfr_divby0_p@@Base>:
    d34c:	stp	x29, x30, [sp, #-16]!
    d350:	mov	x29, sp
    d354:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d358:	ldr	x1, [x0, #2576]
    d35c:	add	x0, x0, #0xa10
    d360:	blr	x1
    d364:	mrs	x1, tpidr_el0
    d368:	ldr	w0, [x1, x0]
    d36c:	and	w0, w0, #0x20
    d370:	ldp	x29, x30, [sp], #16
    d374:	ret

000000000000d378 <mpfr_nanflag_p@@Base>:
    d378:	stp	x29, x30, [sp, #-16]!
    d37c:	mov	x29, sp
    d380:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d384:	ldr	x1, [x0, #2576]
    d388:	add	x0, x0, #0xa10
    d38c:	blr	x1
    d390:	mrs	x1, tpidr_el0
    d394:	ldr	w0, [x1, x0]
    d398:	and	w0, w0, #0x4
    d39c:	ldp	x29, x30, [sp], #16
    d3a0:	ret

000000000000d3a4 <mpfr_inexflag_p@@Base>:
    d3a4:	stp	x29, x30, [sp, #-16]!
    d3a8:	mov	x29, sp
    d3ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d3b0:	ldr	x1, [x0, #2576]
    d3b4:	add	x0, x0, #0xa10
    d3b8:	blr	x1
    d3bc:	mrs	x1, tpidr_el0
    d3c0:	ldr	w0, [x1, x0]
    d3c4:	and	w0, w0, #0x8
    d3c8:	ldp	x29, x30, [sp], #16
    d3cc:	ret

000000000000d3d0 <mpfr_erangeflag_p@@Base>:
    d3d0:	stp	x29, x30, [sp, #-16]!
    d3d4:	mov	x29, sp
    d3d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d3dc:	ldr	x1, [x0, #2576]
    d3e0:	add	x0, x0, #0xa10
    d3e4:	blr	x1
    d3e8:	mrs	x1, tpidr_el0
    d3ec:	ldr	w0, [x1, x0]
    d3f0:	and	w0, w0, #0x10
    d3f4:	ldp	x29, x30, [sp], #16
    d3f8:	ret

000000000000d3fc <mpfr_underflow@@Base>:
    d3fc:	stp	x29, x30, [sp, #-32]!
    d400:	mov	x29, sp
    d404:	stp	x19, x20, [sp, #16]
    d408:	mov	x20, x0
    d40c:	mov	w19, w2
    d410:	cmp	w1, #0x1
    d414:	b.eq	d424 <mpfr_underflow@@Base+0x28>  // b.none
    d418:	add	w1, w1, w2, lsr #31
    d41c:	cmp	w1, #0x3
    d420:	b.ne	d478 <mpfr_underflow@@Base+0x7c>  // b.any
    d424:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d428:	str	x0, [x20, #16]
    d42c:	mov	w1, #0xffffffff            	// #-1
    d430:	str	w19, [x20, #8]
    d434:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d438:	ldr	x2, [x0, #2576]
    d43c:	add	x0, x0, #0xa10
    d440:	blr	x2
    d444:	mrs	x2, tpidr_el0
    d448:	add	x0, x2, x0
    d44c:	ldr	w2, [x0]
    d450:	mov	w3, #0x9                   	// #9
    d454:	orr	w2, w2, w3
    d458:	str	w2, [x0]
    d45c:	cmp	w19, #0x0
    d460:	b.gt	d468 <mpfr_underflow@@Base+0x6c>
    d464:	neg	w1, w1
    d468:	mov	w0, w1
    d46c:	ldp	x19, x20, [sp, #16]
    d470:	ldp	x29, x30, [sp], #32
    d474:	ret
    d478:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d47c:	ldr	x1, [x0, #2512]
    d480:	add	x0, x0, #0x9d0
    d484:	blr	x1
    d488:	mrs	x1, tpidr_el0
    d48c:	ldr	x1, [x1, x0]
    d490:	mov	x0, x20
    d494:	bl	c2b0 <mpfr_setmin@plt>
    d498:	mov	w1, #0x1                   	// #1
    d49c:	b	d430 <mpfr_underflow@@Base+0x34>

000000000000d4a0 <mpfr_overflow@@Base>:
    d4a0:	stp	x29, x30, [sp, #-32]!
    d4a4:	mov	x29, sp
    d4a8:	stp	x19, x20, [sp, #16]
    d4ac:	mov	x20, x0
    d4b0:	mov	w19, w2
    d4b4:	cmp	w1, #0x1
    d4b8:	b.eq	d4c8 <mpfr_overflow@@Base+0x28>  // b.none
    d4bc:	add	w1, w1, w2, lsr #31
    d4c0:	cmp	w1, #0x3
    d4c4:	b.ne	d534 <mpfr_overflow@@Base+0x94>  // b.any
    d4c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d4cc:	ldr	x1, [x0, #2544]
    d4d0:	add	x0, x0, #0x9f0
    d4d4:	blr	x1
    d4d8:	mrs	x1, tpidr_el0
    d4dc:	ldr	x1, [x1, x0]
    d4e0:	mov	x0, x20
    d4e4:	bl	c0d0 <mpfr_setmax@plt>
    d4e8:	mov	w1, #0xffffffff            	// #-1
    d4ec:	str	w19, [x20, #8]
    d4f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d4f4:	ldr	x2, [x0, #2576]
    d4f8:	add	x0, x0, #0xa10
    d4fc:	blr	x2
    d500:	mrs	x2, tpidr_el0
    d504:	add	x0, x2, x0
    d508:	ldr	w2, [x0]
    d50c:	mov	w3, #0xa                   	// #10
    d510:	orr	w2, w2, w3
    d514:	str	w2, [x0]
    d518:	cmp	w19, #0x0
    d51c:	b.gt	d524 <mpfr_overflow@@Base+0x84>
    d520:	neg	w1, w1
    d524:	mov	w0, w1
    d528:	ldp	x19, x20, [sp, #16]
    d52c:	ldp	x29, x30, [sp], #32
    d530:	ret
    d534:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d538:	str	x0, [x20, #16]
    d53c:	mov	w1, #0x1                   	// #1
    d540:	b	d4ec <mpfr_overflow@@Base+0x4c>

000000000000d544 <mpfr_check_range@@Base>:
    d544:	stp	x29, x30, [sp, #-32]!
    d548:	mov	x29, sp
    d54c:	stp	x19, x20, [sp, #16]
    d550:	mov	w19, w1
    d554:	mov	w1, w2
    d558:	ldr	x3, [x0, #16]
    d55c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    d560:	cmp	x3, x2
    d564:	b.le	d650 <mpfr_check_range@@Base+0x10c>
    d568:	mov	x20, x0
    d56c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d570:	ldr	x2, [x0, #2512]
    d574:	add	x0, x0, #0x9d0
    d578:	blr	x2
    d57c:	mrs	x2, tpidr_el0
    d580:	ldr	x0, [x2, x0]
    d584:	cmp	x3, x0
    d588:	b.lt	d5e4 <mpfr_check_range@@Base+0xa0>  // b.tstop
    d58c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d590:	ldr	x2, [x0, #2544]
    d594:	add	x0, x0, #0x9f0
    d598:	blr	x2
    d59c:	mrs	x2, tpidr_el0
    d5a0:	ldr	x0, [x2, x0]
    d5a4:	cmp	x3, x0
    d5a8:	b.gt	d63c <mpfr_check_range@@Base+0xf8>
    d5ac:	cbz	w19, d5d4 <mpfr_check_range@@Base+0x90>
    d5b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d5b4:	ldr	x1, [x0, #2576]
    d5b8:	add	x0, x0, #0xa10
    d5bc:	blr	x1
    d5c0:	mrs	x1, tpidr_el0
    d5c4:	add	x0, x1, x0
    d5c8:	ldr	w1, [x0]
    d5cc:	orr	w1, w1, #0x8
    d5d0:	str	w1, [x0]
    d5d4:	mov	w0, w19
    d5d8:	ldp	x19, x20, [sp, #16]
    d5dc:	ldp	x29, x30, [sp], #32
    d5e0:	ret
    d5e4:	cbnz	w1, d614 <mpfr_check_range@@Base+0xd0>
    d5e8:	add	x3, x3, #0x1
    d5ec:	cmp	x0, x3
    d5f0:	b.gt	d634 <mpfr_check_range@@Base+0xf0>
    d5f4:	mov	x0, x20
    d5f8:	bl	bf00 <mpfr_powerof2_raw@plt>
    d5fc:	mov	w1, w0
    d600:	cbz	w0, d614 <mpfr_check_range@@Base+0xd0>
    d604:	ldr	w0, [x20, #8]
    d608:	tbz	w0, #31, d628 <mpfr_check_range@@Base+0xe4>
    d60c:	cmp	w19, #0x0
    d610:	cset	w1, le
    d614:	ldr	w2, [x20, #8]
    d618:	mov	x0, x20
    d61c:	bl	c3c0 <mpfr_underflow@plt>
    d620:	mov	w19, w0
    d624:	b	d5d4 <mpfr_check_range@@Base+0x90>
    d628:	mvn	w1, w19
    d62c:	lsr	w1, w1, #31
    d630:	b	d614 <mpfr_check_range@@Base+0xd0>
    d634:	mov	w1, #0x1                   	// #1
    d638:	b	d614 <mpfr_check_range@@Base+0xd0>
    d63c:	ldr	w2, [x20, #8]
    d640:	mov	x0, x20
    d644:	bl	bf40 <mpfr_overflow@plt>
    d648:	mov	w19, w0
    d64c:	b	d5d4 <mpfr_check_range@@Base+0x90>
    d650:	cmp	w19, #0x0
    d654:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d658:	ccmp	x3, x0, #0x0, ne  // ne = any
    d65c:	b.ne	d5ac <mpfr_check_range@@Base+0x68>  // b.any
    d660:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d664:	ldr	x1, [x0, #2576]
    d668:	add	x0, x0, #0xa10
    d66c:	blr	x1
    d670:	mrs	x1, tpidr_el0
    d674:	add	x0, x1, x0
    d678:	ldr	w1, [x0]
    d67c:	orr	w1, w1, #0x2
    d680:	str	w1, [x0]
    d684:	b	d5b0 <mpfr_check_range@@Base+0x6c>

000000000000d688 <mpfr_extract@@Base>:
    d688:	stp	x29, x30, [sp, #-64]!
    d68c:	mov	x29, sp
    d690:	stp	x19, x20, [sp, #16]
    d694:	stp	x21, x22, [sp, #32]
    d698:	mov	x20, x0
    d69c:	mov	x21, x1
    d6a0:	mov	x22, #0x1                   	// #1
    d6a4:	lsl	x22, x22, x2
    d6a8:	cbz	w2, d76c <mpfr_extract@@Base+0xe4>
    d6ac:	str	x23, [sp, #48]
    d6b0:	lsr	x19, x22, #1
    d6b4:	ldr	x0, [x1]
    d6b8:	add	x23, x0, #0x3e
    d6bc:	subs	x0, x0, #0x1
    d6c0:	csel	x23, x23, x0, mi  // mi = first
    d6c4:	asr	x23, x23, #6
    d6c8:	add	x23, x23, #0x1
    d6cc:	sub	x1, x22, #0x1
    d6d0:	mov	x0, #0xfffffffe            	// #4294967294
    d6d4:	cmp	x1, x0
    d6d8:	b.hi	d738 <mpfr_extract@@Base+0xb0>  // b.pmore
    d6dc:	lsl	x1, x19, #6
    d6e0:	mov	x0, x20
    d6e4:	bl	c440 <__gmpz_realloc2@plt>
    d6e8:	mov	x2, x23
    d6ec:	cmp	x23, x22
    d6f0:	b.cs	d754 <mpfr_extract@@Base+0xcc>  // b.hs, b.nlast
    d6f4:	lsl	x2, x19, #3
    d6f8:	mov	w1, #0x0                   	// #0
    d6fc:	ldr	x0, [x20, #8]
    d700:	bl	c110 <memset@plt>
    d704:	cmp	x23, x19
    d708:	b.cc	d75c <mpfr_extract@@Base+0xd4>  // b.lo, b.ul, b.last
    d70c:	sub	x0, x22, x23
    d710:	ldr	x1, [x20, #8]
    d714:	add	x0, x1, x0, lsl #3
    d718:	ldr	x1, [x21, #24]
    d71c:	cmp	x0, x1
    d720:	b.eq	d764 <mpfr_extract@@Base+0xdc>  // b.none
    d724:	sub	x2, x23, x19
    d728:	lsl	x2, x2, #3
    d72c:	bl	ba10 <memcpy@plt>
    d730:	ldr	x23, [sp, #48]
    d734:	b	d7b8 <mpfr_extract@@Base+0x130>
    d738:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d73c:	add	x2, x2, #0xf60
    d740:	mov	w1, #0x28                  	// #40
    d744:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d748:	add	x0, x0, #0xf88
    d74c:	bl	cb40 <mpfr_assert_fail@plt>
    d750:	b	d6dc <mpfr_extract@@Base+0x54>
    d754:	ldr	x23, [sp, #48]
    d758:	b	d798 <mpfr_extract@@Base+0x110>
    d75c:	ldr	x23, [sp, #48]
    d760:	b	d7b8 <mpfr_extract@@Base+0x130>
    d764:	ldr	x23, [sp, #48]
    d768:	b	d7b8 <mpfr_extract@@Base+0x130>
    d76c:	ldr	x0, [x1]
    d770:	add	x2, x0, #0x3e
    d774:	subs	x0, x0, #0x1
    d778:	csel	x2, x2, x0, mi  // mi = first
    d77c:	asr	x2, x2, #6
    d780:	add	x19, x2, #0x1
    d784:	mov	x1, #0x40                  	// #64
    d788:	mov	x0, x20
    d78c:	bl	c440 <__gmpz_realloc2@plt>
    d790:	mov	x2, x19
    d794:	mov	x19, #0x1                   	// #1
    d798:	ldr	x0, [x20, #8]
    d79c:	ldr	x1, [x21, #24]
    d7a0:	sub	x2, x2, x22
    d7a4:	add	x1, x1, x2, lsl #3
    d7a8:	cmp	x0, x1
    d7ac:	b.eq	d7b8 <mpfr_extract@@Base+0x130>  // b.none
    d7b0:	lsl	x2, x19, #3
    d7b4:	bl	ba10 <memcpy@plt>
    d7b8:	cbz	x19, d7d4 <mpfr_extract@@Base+0x14c>
    d7bc:	ldr	x3, [x20, #8]
    d7c0:	sub	x3, x3, #0x8
    d7c4:	ldr	x2, [x3, x19, lsl #3]
    d7c8:	cbnz	x2, d7d4 <mpfr_extract@@Base+0x14c>
    d7cc:	subs	x19, x19, #0x1
    d7d0:	b.ne	d7c4 <mpfr_extract@@Base+0x13c>  // b.any
    d7d4:	ldr	w0, [x21, #8]
    d7d8:	cmp	w0, #0x0
    d7dc:	cneg	w19, w19, lt  // lt = tstop
    d7e0:	str	w19, [x20, #4]
    d7e4:	ldp	x19, x20, [sp, #16]
    d7e8:	ldp	x21, x22, [sp, #32]
    d7ec:	ldp	x29, x30, [sp], #64
    d7f0:	ret

000000000000d7f4 <__gmpfr_ceil_exp2@@Base>:
    d7f4:	stp	x29, x30, [sp, #-32]!
    d7f8:	mov	x29, sp
    d7fc:	str	d8, [sp, #16]
    d800:	fmov	d8, d0
    d804:	mov	x0, #0x4090000000000000    	// #4652218415073722368
    d808:	fmov	d0, x0
    d80c:	fcmpe	d8, d0
    d810:	b.hi	d848 <__gmpfr_ceil_exp2@@Base+0x54>  // b.pmore
    d814:	fcvtzs	x0, d8
    d818:	scvtf	d0, x0
    d81c:	fcmp	d0, d8
    d820:	cinc	x0, x0, ne  // ne = any
    d824:	cmn	x0, #0x3fe
    d828:	mov	x1, #0xfffffffffffffc02    	// #-1022
    d82c:	csel	x0, x0, x1, ge  // ge = tcont
    d830:	add	w0, w0, #0x3ff
    d834:	ubfiz	x0, x0, #52, #11
    d838:	fmov	d0, x0
    d83c:	ldr	d8, [sp, #16]
    d840:	ldp	x29, x30, [sp], #32
    d844:	ret
    d848:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d84c:	add	x2, x2, #0xf98
    d850:	mov	w1, #0x26                  	// #38
    d854:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d858:	add	x0, x0, #0xfa8
    d85c:	bl	cb40 <mpfr_assert_fail@plt>
    d860:	b	d814 <__gmpfr_ceil_exp2@@Base+0x20>

000000000000d864 <__gmpfr_ceil_log2@@Base>:
    d864:	fmov	x1, d0
    d868:	ubfx	x2, x1, #52, #11
    d86c:	sub	x0, x2, #0x3ff
    d870:	cmp	x0, #0x3fe
    d874:	b.gt	d898 <__gmpfr_ceil_log2@@Base+0x34>
    d878:	mov	x3, #0x3ff                 	// #1023
    d87c:	bfi	x1, x3, #52, #11
    d880:	sub	x2, x2, #0x3fe
    d884:	fmov	d0, #1.000000000000000000e+00
    d888:	fmov	d1, x1
    d88c:	fcmp	d0, d1
    d890:	csel	x0, x2, x0, ne  // ne = any
    d894:	ret
    d898:	stp	x29, x30, [sp, #-16]!
    d89c:	mov	x29, sp
    d8a0:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d8a4:	add	x2, x2, #0xfb8
    d8a8:	mov	w1, #0x28                  	// #40
    d8ac:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d8b0:	add	x0, x0, #0xfc8
    d8b4:	bl	cb40 <mpfr_assert_fail@plt>

000000000000d8b8 <__gmpfr_floor_log2@@Base>:
    d8b8:	fmov	x0, d0
    d8bc:	ubfx	x0, x0, #52, #11
    d8c0:	sub	x0, x0, #0x3ff
    d8c4:	cmp	x0, #0x3fe
    d8c8:	b.gt	d8d0 <__gmpfr_floor_log2@@Base+0x18>
    d8cc:	ret
    d8d0:	stp	x29, x30, [sp, #-16]!
    d8d4:	mov	x29, sp
    d8d8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d8dc:	add	x2, x2, #0xfb8
    d8e0:	mov	w1, #0x25                  	// #37
    d8e4:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x17b0>
    d8e8:	add	x0, x0, #0xfd8
    d8ec:	bl	cb40 <mpfr_assert_fail@plt>

000000000000d8f0 <mpfr_add@@Base>:
    d8f0:	stp	x29, x30, [sp, #-48]!
    d8f4:	mov	x29, sp
    d8f8:	stp	x19, x20, [sp, #16]
    d8fc:	stp	x21, x22, [sp, #32]
    d900:	mov	x22, x0
    d904:	mov	x19, x1
    d908:	mov	x20, x2
    d90c:	mov	w21, w3
    d910:	ldr	x1, [x1, #16]
    d914:	mov	x2, #0x5                   	// #5
    d918:	movk	x2, #0x8000, lsl #48
    d91c:	cmp	x1, x2
    d920:	b.lt	d980 <mpfr_add@@Base+0x90>  // b.tstop
    d924:	ldr	x0, [x20, #16]
    d928:	cmp	x0, x2
    d92c:	b.lt	dc0c <mpfr_add@@Base+0x31c>  // b.tstop
    d930:	ldr	w3, [x19, #8]
    d934:	ldr	w2, [x20, #8]
    d938:	cmp	w3, w2
    d93c:	b.ne	db78 <mpfr_add@@Base+0x288>  // b.any
    d940:	ldr	x2, [x19]
    d944:	ldr	x3, [x22]
    d948:	cmp	x3, x2
    d94c:	b.ne	dbc4 <mpfr_add@@Base+0x2d4>  // b.any
    d950:	ldr	x3, [x20]
    d954:	cmp	x2, x3
    d958:	b.ne	dbc4 <mpfr_add@@Base+0x2d4>  // b.any
    d95c:	mov	w3, w21
    d960:	mov	x2, x20
    d964:	mov	x1, x19
    d968:	mov	x0, x22
    d96c:	bl	cbb0 <mpfr_add1sp@plt>
    d970:	ldp	x19, x20, [sp, #16]
    d974:	ldp	x21, x22, [sp, #32]
    d978:	ldp	x29, x30, [sp], #48
    d97c:	ret
    d980:	mov	x0, #0x2                   	// #2
    d984:	movk	x0, #0x8000, lsl #48
    d988:	cmp	x1, x0
    d98c:	b.eq	da00 <mpfr_add@@Base+0x110>  // b.none
    d990:	ldr	x0, [x20, #16]
    d994:	mov	x2, #0x2                   	// #2
    d998:	movk	x2, #0x8000, lsl #48
    d99c:	cmp	x0, x2
    d9a0:	b.eq	da00 <mpfr_add@@Base+0x110>  // b.none
    d9a4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    d9a8:	cmp	x1, x2
    d9ac:	b.ne	dc20 <mpfr_add@@Base+0x330>  // b.any
    d9b0:	cmp	x0, x2
    d9b4:	b.ne	da38 <mpfr_add@@Base+0x148>  // b.any
    d9b8:	ldr	w1, [x19, #8]
    d9bc:	ldr	w0, [x20, #8]
    d9c0:	cmp	w1, w0
    d9c4:	b.eq	da38 <mpfr_add@@Base+0x148>  // b.none
    d9c8:	mov	x0, #0x2                   	// #2
    d9cc:	movk	x0, #0x8000, lsl #48
    d9d0:	str	x0, [x22, #16]
    d9d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    d9d8:	ldr	x1, [x0, #2576]
    d9dc:	add	x0, x0, #0xa10
    d9e0:	blr	x1
    d9e4:	mrs	x1, tpidr_el0
    d9e8:	add	x0, x1, x0
    d9ec:	ldr	w1, [x0]
    d9f0:	orr	w1, w1, #0x4
    d9f4:	str	w1, [x0]
    d9f8:	mov	w0, #0x0                   	// #0
    d9fc:	b	d970 <mpfr_add@@Base+0x80>
    da00:	mov	x0, #0x2                   	// #2
    da04:	movk	x0, #0x8000, lsl #48
    da08:	str	x0, [x22, #16]
    da0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    da10:	ldr	x1, [x0, #2576]
    da14:	add	x0, x0, #0xa10
    da18:	blr	x1
    da1c:	mrs	x1, tpidr_el0
    da20:	add	x0, x1, x0
    da24:	ldr	w1, [x0]
    da28:	orr	w1, w1, #0x4
    da2c:	str	w1, [x0]
    da30:	mov	w0, #0x0                   	// #0
    da34:	b	d970 <mpfr_add@@Base+0x80>
    da38:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    da3c:	str	x0, [x22, #16]
    da40:	ldr	w0, [x19, #8]
    da44:	str	w0, [x22, #8]
    da48:	mov	w0, #0x0                   	// #0
    da4c:	b	d970 <mpfr_add@@Base+0x80>
    da50:	str	x2, [x22, #16]
    da54:	ldr	w0, [x20, #8]
    da58:	str	w0, [x22, #8]
    da5c:	mov	w0, #0x0                   	// #0
    da60:	b	d970 <mpfr_add@@Base+0x80>
    da64:	cmp	x0, x2
    da68:	b.ne	db00 <mpfr_add@@Base+0x210>  // b.any
    da6c:	cmp	w21, #0x3
    da70:	b.eq	dab0 <mpfr_add@@Base+0x1c0>  // b.none
    da74:	ldr	w0, [x19, #8]
    da78:	tbnz	w0, #31, da9c <mpfr_add@@Base+0x1ac>
    da7c:	ldr	w1, [x19, #8]
    da80:	mov	w0, #0x1                   	// #1
    da84:	tbnz	w1, #31, daec <mpfr_add@@Base+0x1fc>
    da88:	str	w0, [x22, #8]
    da8c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    da90:	str	x0, [x22, #16]
    da94:	mov	w0, #0x0                   	// #0
    da98:	b	d970 <mpfr_add@@Base+0x80>
    da9c:	ldr	w0, [x20, #8]
    daa0:	tbz	w0, #31, da7c <mpfr_add@@Base+0x18c>
    daa4:	cmp	w21, #0x3
    daa8:	b.ne	da7c <mpfr_add@@Base+0x18c>  // b.any
    daac:	b	dac8 <mpfr_add@@Base+0x1d8>
    dab0:	ldr	w0, [x19, #8]
    dab4:	cmp	w0, #0x0
    dab8:	b.le	dac8 <mpfr_add@@Base+0x1d8>
    dabc:	ldr	w0, [x20, #8]
    dac0:	cmp	w0, #0x0
    dac4:	b.le	dbfc <mpfr_add@@Base+0x30c>
    dac8:	ldr	w1, [x19, #8]
    dacc:	mov	w0, #0xffffffff            	// #-1
    dad0:	cmp	w1, #0x0
    dad4:	b.le	da88 <mpfr_add@@Base+0x198>
    dad8:	ldr	w1, [x20, #8]
    dadc:	mov	w0, #0x1                   	// #1
    dae0:	cmp	w1, w0
    dae4:	cneg	w0, w0, lt  // lt = tstop
    dae8:	b	da88 <mpfr_add@@Base+0x198>
    daec:	ldr	w1, [x20, #8]
    daf0:	mov	w0, #0xffffffff            	// #-1
    daf4:	cmp	w1, w0
    daf8:	cneg	w0, w0, gt
    dafc:	b	da88 <mpfr_add@@Base+0x198>
    db00:	ldr	w3, [x20, #8]
    db04:	mov	w2, w21
    db08:	mov	x1, x20
    db0c:	mov	x0, x22
    db10:	bl	c6a0 <mpfr_set4@plt>
    db14:	b	d970 <mpfr_add@@Base+0x80>
    db18:	ldr	w3, [x19, #8]
    db1c:	mov	w2, w21
    db20:	mov	x1, x19
    db24:	mov	x0, x22
    db28:	bl	c6a0 <mpfr_set4@plt>
    db2c:	b	d970 <mpfr_add@@Base+0x80>
    db30:	mov	w3, w21
    db34:	mov	x2, x20
    db38:	mov	x1, x19
    db3c:	mov	x0, x22
    db40:	bl	ca70 <mpfr_sub1@plt>
    db44:	b	d970 <mpfr_add@@Base+0x80>
    db48:	mov	x1, x20
    db4c:	mov	x0, x19
    db50:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
    db54:	cmp	w0, #0x0
    db58:	cset	w0, ne  // ne = any
    db5c:	b	dc70 <mpfr_add@@Base+0x380>
    db60:	mov	w3, w21
    db64:	mov	x2, x20
    db68:	mov	x1, x19
    db6c:	mov	x0, x22
    db70:	bl	c780 <mpfr_add1@plt>
    db74:	b	d970 <mpfr_add@@Base+0x80>
    db78:	ldr	x0, [x19]
    db7c:	ldr	x1, [x22]
    db80:	cmp	x1, x0
    db84:	b.ne	dbac <mpfr_add@@Base+0x2bc>  // b.any
    db88:	ldr	x1, [x20]
    db8c:	cmp	x0, x1
    db90:	b.ne	dbac <mpfr_add@@Base+0x2bc>  // b.any
    db94:	mov	w3, w21
    db98:	mov	x2, x20
    db9c:	mov	x1, x19
    dba0:	mov	x0, x22
    dba4:	bl	c0f0 <mpfr_sub1sp@plt>
    dba8:	b	d970 <mpfr_add@@Base+0x80>
    dbac:	mov	w3, w21
    dbb0:	mov	x2, x20
    dbb4:	mov	x1, x19
    dbb8:	mov	x0, x22
    dbbc:	bl	ca70 <mpfr_sub1@plt>
    dbc0:	b	d970 <mpfr_add@@Base+0x80>
    dbc4:	cmp	x1, x0
    dbc8:	b.ge	dbe4 <mpfr_add@@Base+0x2f4>  // b.tcont
    dbcc:	mov	w3, w21
    dbd0:	mov	x2, x19
    dbd4:	mov	x1, x20
    dbd8:	mov	x0, x22
    dbdc:	bl	c780 <mpfr_add1@plt>
    dbe0:	b	d970 <mpfr_add@@Base+0x80>
    dbe4:	mov	w3, w21
    dbe8:	mov	x2, x20
    dbec:	mov	x1, x19
    dbf0:	mov	x0, x22
    dbf4:	bl	c780 <mpfr_add1@plt>
    dbf8:	b	d970 <mpfr_add@@Base+0x80>
    dbfc:	ldr	w0, [x20, #8]
    dc00:	cmp	w0, #0x0
    dc04:	b.gt	daa4 <mpfr_add@@Base+0x1b4>
    dc08:	b	dac8 <mpfr_add@@Base+0x1d8>
    dc0c:	ldr	x0, [x20, #16]
    dc10:	mov	x2, #0x2                   	// #2
    dc14:	movk	x2, #0x8000, lsl #48
    dc18:	cmp	x0, x2
    dc1c:	b.eq	da00 <mpfr_add@@Base+0x110>  // b.none
    dc20:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    dc24:	cmp	x0, x2
    dc28:	b.eq	da50 <mpfr_add@@Base+0x160>  // b.none
    dc2c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    dc30:	cmp	x1, x2
    dc34:	b.eq	da64 <mpfr_add@@Base+0x174>  // b.none
    dc38:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    dc3c:	cmp	x0, x2
    dc40:	b.eq	db18 <mpfr_add@@Base+0x228>  // b.none
    dc44:	ldr	w3, [x19, #8]
    dc48:	ldr	w2, [x20, #8]
    dc4c:	cmp	w3, w2
    dc50:	b.ne	db30 <mpfr_add@@Base+0x240>  // b.any
    dc54:	mov	x2, #0x4                   	// #4
    dc58:	movk	x2, #0x8000, lsl #48
    dc5c:	cmp	x0, x2
    dc60:	ccmp	x1, x2, #0x4, ne  // ne = any
    dc64:	b.eq	db48 <mpfr_add@@Base+0x258>  // b.none
    dc68:	cmp	x1, x0
    dc6c:	cset	w0, lt  // lt = tstop
    dc70:	cbz	w0, db60 <mpfr_add@@Base+0x270>
    dc74:	mov	w3, w21
    dc78:	mov	x2, x19
    dc7c:	mov	x1, x20
    dc80:	mov	x0, x22
    dc84:	bl	c780 <mpfr_add1@plt>
    dc88:	b	d970 <mpfr_add@@Base+0x80>

000000000000dc8c <mpfr_add1@@Base>:
    dc8c:	stp	x29, x30, [sp, #-176]!
    dc90:	mov	x29, sp
    dc94:	stp	x19, x20, [sp, #16]
    dc98:	stp	x21, x22, [sp, #32]
    dc9c:	stp	x23, x24, [sp, #48]
    dca0:	stp	x25, x26, [sp, #64]
    dca4:	stp	x27, x28, [sp, #80]
    dca8:	mov	x25, x0
    dcac:	mov	x26, x1
    dcb0:	mov	x27, x2
    dcb4:	mov	w24, w3
    dcb8:	ldr	x28, [x1, #16]
    dcbc:	mov	x0, #0x4                   	// #4
    dcc0:	movk	x0, #0x8000, lsl #48
    dcc4:	cmp	x28, x0
    dcc8:	b.eq	dee8 <mpfr_add1@@Base+0x25c>  // b.none
    dccc:	str	xzr, [x29, #168]
    dcd0:	ldr	x21, [x25]
    dcd4:	add	x23, x21, #0x3e
    dcd8:	subs	x0, x21, #0x1
    dcdc:	csel	x23, x23, x0, mi  // mi = first
    dce0:	asr	x23, x23, #6
    dce4:	add	x0, x23, #0x1
    dce8:	str	x0, [x29, #144]
    dcec:	lsl	x0, x0, #6
    dcf0:	str	x0, [x29, #136]
    dcf4:	sub	w21, w0, w21
    dcf8:	ldr	x0, [x26]
    dcfc:	add	x22, x0, #0x3e
    dd00:	subs	x0, x0, #0x1
    dd04:	csel	x0, x22, x0, mi  // mi = first
    dd08:	asr	x22, x0, #6
    dd0c:	add	x0, x22, #0x1
    dd10:	str	x0, [x29, #104]
    dd14:	ldr	x0, [x27]
    dd18:	add	x2, x0, #0x3e
    dd1c:	subs	x0, x0, #0x1
    dd20:	csel	x0, x2, x0, mi  // mi = first
    dd24:	asr	x0, x0, #6
    dd28:	str	x0, [x29, #112]
    dd2c:	add	x0, x0, #0x1
    dd30:	str	x0, [x29, #120]
    dd34:	ldr	x20, [x25, #24]
    dd38:	ldr	x0, [x26, #24]
    dd3c:	str	x0, [x29, #128]
    dd40:	ldr	x1, [x27, #24]
    dd44:	str	x1, [x29, #152]
    dd48:	cmp	x20, x0
    dd4c:	b.eq	df2c <mpfr_add1@@Base+0x2a0>  // b.none
    dd50:	ldr	x0, [x29, #152]
    dd54:	cmp	x20, x0
    dd58:	b.eq	df94 <mpfr_add1@@Base+0x308>  // b.none
    dd5c:	ldr	w0, [x26, #8]
    dd60:	str	w0, [x25, #8]
    dd64:	cmp	w24, #0x2
    dd68:	b.eq	dff0 <mpfr_add1@@Base+0x364>  // b.none
    dd6c:	cmp	w24, #0x3
    dd70:	b.eq	e000 <mpfr_add1@@Base+0x374>  // b.none
    dd74:	ldr	x0, [x27, #16]
    dd78:	sub	x19, x28, x0
    dd7c:	mov	x1, #0x4                   	// #4
    dd80:	movk	x1, #0x8000, lsl #48
    dd84:	cmp	x0, x1
    dd88:	b.eq	e010 <mpfr_add1@@Base+0x384>  // b.none
    dd8c:	str	x19, [x29, #96]
    dd90:	ldr	x0, [x29, #136]
    dd94:	cmp	x0, x19
    dd98:	b.ls	e024 <mpfr_add1@@Base+0x398>  // b.plast
    dd9c:	ldr	x0, [x29, #136]
    dda0:	sub	x0, x0, x19
    dda4:	add	x2, x0, #0x3e
    dda8:	subs	x0, x0, #0x1
    ddac:	csel	x2, x2, x0, mi  // mi = first
    ddb0:	asr	x2, x2, #6
    ddb4:	add	x26, x2, #0x1
    ddb8:	ldr	x0, [x29, #112]
    ddbc:	cmp	x0, x2
    ddc0:	b.lt	e08c <mpfr_add1@@Base+0x400>  // b.tstop
    ddc4:	add	x2, x19, #0x3f
    ddc8:	cmp	x19, #0x0
    ddcc:	csel	x2, x2, x19, lt  // lt = tstop
    ddd0:	asr	x2, x2, #6
    ddd4:	ldr	x0, [x29, #144]
    ddd8:	sub	x27, x0, x2
    dddc:	add	x27, x20, x27, lsl #3
    dde0:	lsl	x2, x2, #3
    dde4:	mov	w1, #0x0                   	// #0
    dde8:	mov	x0, x27
    ddec:	bl	c110 <memset@plt>
    ddf0:	negs	x0, x19
    ddf4:	and	x3, x19, #0x3f
    ddf8:	and	x0, x0, #0x3f
    ddfc:	csneg	x3, x3, x0, mi  // mi = first
    de00:	cbz	w3, e0b8 <mpfr_add1@@Base+0x42c>
    de04:	lsl	x0, x26, #3
    de08:	str	x0, [x29, #112]
    de0c:	sub	x0, x27, x0
    de10:	ldr	x1, [x29, #120]
    de14:	sub	x1, x1, x26
    de18:	mov	x2, x26
    de1c:	ldr	x4, [x29, #152]
    de20:	add	x1, x4, x1, lsl #3
    de24:	mov	x26, x0
    de28:	bl	bce0 <__gmpn_rshift@plt>
    de2c:	cmp	x26, x20
    de30:	b.hi	e0a8 <mpfr_add1@@Base+0x41c>  // b.pmore
    de34:	cmp	x23, x22
    de38:	b.le	e0e0 <mpfr_add1@@Base+0x454>
    de3c:	sub	x0, x23, x22
    de40:	add	x0, x20, x0, lsl #3
    de44:	ldr	x3, [x29, #104]
    de48:	ldr	x2, [x29, #128]
    de4c:	mov	x1, x0
    de50:	bl	c5a0 <__gmpn_add_n@plt>
    de54:	cbnz	x0, e100 <mpfr_add1@@Base+0x474>
    de58:	cbz	w21, e98c <mpfr_add1@@Base+0xd00>
    de5c:	mov	x0, #0x1                   	// #1
    de60:	lsl	x0, x0, x21
    de64:	sub	x1, x0, #0x1
    de68:	ldr	x3, [x20]
    de6c:	and	x2, x3, x1
    de70:	neg	x0, x0
    de74:	and	x0, x0, x3
    de78:	str	x0, [x20]
    de7c:	sub	w26, w21, #0x1
    de80:	lsr	x26, x2, x26
    de84:	cmp	w21, #0x1
    de88:	b.le	e9b0 <mpfr_add1@@Base+0xd24>
    de8c:	lsr	x0, x1, #1
    de90:	ands	x2, x2, x0
    de94:	b.eq	e864 <mpfr_add1@@Base+0xbd8>  // b.none
    de98:	cmp	x0, x2
    de9c:	b.eq	e7a4 <mpfr_add1@@Base+0xb18>  // b.none
    dea0:	cmp	w24, #0x0
    dea4:	cset	w2, eq  // eq = none
    dea8:	cmp	w2, #0x0
    deac:	ccmp	w24, #0x5, #0x4, eq  // eq = none
    deb0:	b.eq	e7d8 <mpfr_add1@@Base+0xb4c>  // b.none
    deb4:	mov	w27, #0xffffffff            	// #-1
    deb8:	cmp	w24, #0x1
    debc:	b.eq	e56c <mpfr_add1@@Base+0x8e0>  // b.none
    dec0:	cmp	w24, #0x4
    dec4:	b.ne	e5a4 <mpfr_add1@@Base+0x918>  // b.any
    dec8:	orr	w26, w26, w27
    decc:	cbz	w26, e580 <mpfr_add1@@Base+0x8f4>
    ded0:	ldr	w0, [x25, #8]
    ded4:	mov	w2, #0x0                   	// #0
    ded8:	cmp	w0, #0x0
    dedc:	mov	w26, #0x1                   	// #1
    dee0:	csinv	w26, w26, wzr, gt
    dee4:	b	e8cc <mpfr_add1@@Base+0xc40>
    dee8:	add	x0, x1, #0x20
    deec:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
    def0:	mov	x28, x0
    def4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    def8:	ldr	x1, [x0, #2544]
    defc:	add	x0, x0, #0x9f0
    df00:	blr	x1
    df04:	mrs	x1, tpidr_el0
    df08:	ldr	x0, [x1, x0]
    df0c:	cmp	x0, x28
    df10:	b.ge	dccc <mpfr_add1@@Base+0x40>  // b.tcont
    df14:	ldr	w2, [x26, #8]
    df18:	mov	w1, w24
    df1c:	mov	x0, x25
    df20:	bl	bf40 <mpfr_overflow@plt>
    df24:	mov	w26, w0
    df28:	b	e840 <mpfr_add1@@Base+0xbb4>
    df2c:	ldr	x0, [x29, #104]
    df30:	lsl	x19, x0, #3
    df34:	cmp	x19, #0x4, lsl #12
    df38:	b.hi	df80 <mpfr_add1@@Base+0x2f4>  // b.pmore
    df3c:	add	x0, x19, #0xf
    df40:	and	x0, x0, #0xfffffffffffffff0
    df44:	sub	sp, sp, x0
    df48:	mov	x0, sp
    df4c:	str	x0, [x29, #128]
    df50:	ldr	x0, [x29, #128]
    df54:	cmp	x0, x20
    df58:	b.eq	df68 <mpfr_add1@@Base+0x2dc>  // b.none
    df5c:	mov	x2, x19
    df60:	mov	x1, x20
    df64:	bl	ba10 <memcpy@plt>
    df68:	ldr	x0, [x29, #152]
    df6c:	cmp	x20, x0
    df70:	ldr	x1, [x29, #128]
    df74:	csel	x0, x0, x1, ne  // ne = any
    df78:	str	x0, [x29, #152]
    df7c:	b	dd5c <mpfr_add1@@Base+0xd0>
    df80:	mov	x1, x19
    df84:	add	x0, x29, #0xa8
    df88:	bl	bdc0 <mpfr_tmp_allocate@plt>
    df8c:	str	x0, [x29, #128]
    df90:	b	df50 <mpfr_add1@@Base+0x2c4>
    df94:	ldr	x0, [x29, #120]
    df98:	lsl	x19, x0, #3
    df9c:	cmp	x19, #0x4, lsl #12
    dfa0:	b.hi	dfd4 <mpfr_add1@@Base+0x348>  // b.pmore
    dfa4:	add	x0, x19, #0xf
    dfa8:	and	x0, x0, #0xfffffffffffffff0
    dfac:	sub	sp, sp, x0
    dfb0:	mov	x0, sp
    dfb4:	str	x0, [x29, #152]
    dfb8:	ldr	x0, [x29, #152]
    dfbc:	cmp	x0, x20
    dfc0:	b.eq	dfe8 <mpfr_add1@@Base+0x35c>  // b.none
    dfc4:	mov	x2, x19
    dfc8:	mov	x1, x20
    dfcc:	bl	ba10 <memcpy@plt>
    dfd0:	b	dd5c <mpfr_add1@@Base+0xd0>
    dfd4:	mov	x1, x19
    dfd8:	add	x0, x29, #0xa8
    dfdc:	bl	bdc0 <mpfr_tmp_allocate@plt>
    dfe0:	str	x0, [x29, #152]
    dfe4:	b	dfb8 <mpfr_add1@@Base+0x32c>
    dfe8:	str	x20, [x29, #152]
    dfec:	b	dd5c <mpfr_add1@@Base+0xd0>
    dff0:	cmp	w0, #0x0
    dff4:	mov	w24, #0x4                   	// #4
    dff8:	csinc	w24, w24, wzr, gt
    dffc:	b	dd74 <mpfr_add1@@Base+0xe8>
    e000:	cmp	w0, #0x0
    e004:	mov	w24, #0x4                   	// #4
    e008:	csinc	w24, w24, wzr, lt  // lt = tstop
    e00c:	b	dd74 <mpfr_add1@@Base+0xe8>
    e010:	mov	x1, x27
    e014:	mov	x0, x26
    e018:	bl	cb00 <mpfr_ubf_diff_exp@plt>
    e01c:	mov	x19, x0
    e020:	b	dd8c <mpfr_add1@@Base+0x100>
    e024:	cmp	x23, x22
    e028:	b.gt	e054 <mpfr_add1@@Base+0x3c8>
    e02c:	sub	x1, x22, x23
    e030:	ldr	x0, [x29, #128]
    e034:	add	x1, x0, x1, lsl #3
    e038:	cmp	x1, x20
    e03c:	b.eq	de58 <mpfr_add1@@Base+0x1cc>  // b.none
    e040:	ldr	x0, [x29, #144]
    e044:	lsl	x2, x0, #3
    e048:	mov	x0, x20
    e04c:	bl	ba10 <memcpy@plt>
    e050:	b	de58 <mpfr_add1@@Base+0x1cc>
    e054:	sub	x26, x23, x22
    e058:	lsl	x26, x26, #3
    e05c:	add	x0, x20, x26
    e060:	ldr	x1, [x29, #128]
    e064:	cmp	x0, x1
    e068:	b.eq	e078 <mpfr_add1@@Base+0x3ec>  // b.none
    e06c:	ldr	x2, [x29, #104]
    e070:	lsl	x2, x2, #3
    e074:	bl	ba10 <memcpy@plt>
    e078:	mov	x2, x26
    e07c:	mov	w1, #0x0                   	// #0
    e080:	mov	x0, x20
    e084:	bl	c110 <memset@plt>
    e088:	b	de58 <mpfr_add1@@Base+0x1cc>
    e08c:	sub	x2, x2, x0
    e090:	lsl	x2, x2, #3
    e094:	mov	w1, #0x0                   	// #0
    e098:	mov	x0, x20
    e09c:	bl	c110 <memset@plt>
    e0a0:	ldr	x26, [x29, #120]
    e0a4:	b	ddc4 <mpfr_add1@@Base+0x138>
    e0a8:	ldr	x1, [x29, #112]
    e0ac:	sub	x27, x27, x1
    e0b0:	stur	x0, [x27, #-8]
    e0b4:	b	de34 <mpfr_add1@@Base+0x1a8>
    e0b8:	lsl	x2, x26, #3
    e0bc:	sub	x0, x27, x2
    e0c0:	ldr	x1, [x29, #120]
    e0c4:	sub	x1, x1, x26
    e0c8:	ldr	x3, [x29, #152]
    e0cc:	add	x1, x3, x1, lsl #3
    e0d0:	cmp	x0, x1
    e0d4:	b.eq	de34 <mpfr_add1@@Base+0x1a8>  // b.none
    e0d8:	bl	ba10 <memcpy@plt>
    e0dc:	b	de34 <mpfr_add1@@Base+0x1a8>
    e0e0:	sub	x2, x22, x23
    e0e4:	ldr	x3, [x29, #144]
    e0e8:	ldr	x0, [x29, #128]
    e0ec:	add	x2, x0, x2, lsl #3
    e0f0:	mov	x1, x20
    e0f4:	mov	x0, x20
    e0f8:	bl	c5a0 <__gmpn_add_n@plt>
    e0fc:	b	de54 <mpfr_add1@@Base+0x1c8>
    e100:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e104:	ldr	x1, [x0, #2544]
    e108:	add	x0, x0, #0x9f0
    e10c:	blr	x1
    e110:	mrs	x1, tpidr_el0
    e114:	ldr	x0, [x1, x0]
    e118:	cmp	x0, x28
    e11c:	b.eq	e194 <mpfr_add1@@Base+0x508>  // b.none
    e120:	add	x28, x28, #0x1
    e124:	ldr	x1, [x20]
    e128:	lsr	x26, x1, x21
    e12c:	and	w26, w26, #0x1
    e130:	cbz	w21, e90c <mpfr_add1@@Base+0xc80>
    e134:	mov	x0, #0x1                   	// #1
    e138:	lsl	x0, x0, x21
    e13c:	sub	x2, x0, #0x1
    e140:	neg	x0, x0, lsl #1
    e144:	and	x0, x0, x1
    e148:	str	x0, [x20]
    e14c:	ands	x1, x1, x2
    e150:	b.eq	e914 <mpfr_add1@@Base+0xc88>  // b.none
    e154:	cmp	x2, x1
    e158:	b.eq	e964 <mpfr_add1@@Base+0xcd8>  // b.none
    e15c:	mov	w3, #0x1                   	// #1
    e160:	ldr	x19, [x29, #144]
    e164:	mov	x2, x19
    e168:	mov	x1, x20
    e16c:	mov	x0, x20
    e170:	bl	bce0 <__gmpn_rshift@plt>
    e174:	lsl	x0, x19, #3
    e178:	sub	x0, x0, #0x8
    e17c:	ldr	x1, [x20, x0]
    e180:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    e184:	add	x1, x1, x2
    e188:	str	x1, [x20, x0]
    e18c:	mov	w27, #0xffffffff            	// #-1
    e190:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e194:	ldr	w2, [x25, #8]
    e198:	mov	w1, w24
    e19c:	mov	x0, x25
    e1a0:	bl	bf40 <mpfr_overflow@plt>
    e1a4:	mov	w26, w0
    e1a8:	b	e810 <mpfr_add1@@Base+0xb84>
    e1ac:	mov	w27, #0x0                   	// #0
    e1b0:	cmp	w27, #0x0
    e1b4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    e1b8:	b.gt	e1d4 <mpfr_add1@@Base+0x548>
    e1bc:	mov	w27, #0x1                   	// #1
    e1c0:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e1c4:	mov	w27, #0xffffffff            	// #-1
    e1c8:	mov	w26, w27
    e1cc:	b	e1b0 <mpfr_add1@@Base+0x524>
    e1d0:	mov	w27, #0xffffffff            	// #-1
    e1d4:	sub	x22, x22, x23
    e1d8:	tbz	x1, #63, e244 <mpfr_add1@@Base+0x5b8>
    e1dc:	sub	x0, x22, #0x1
    e1e0:	ldr	x2, [x29, #128]
    e1e4:	ldr	x2, [x2, x0, lsl #3]
    e1e8:	add	x22, x1, x22
    e1ec:	mov	x3, x22
    e1f0:	b	e220 <mpfr_add1@@Base+0x594>
    e1f4:	tbnz	w26, #31, e238 <mpfr_add1@@Base+0x5ac>
    e1f8:	cmn	x2, #0x1
    e1fc:	b.ne	e658 <mpfr_add1@@Base+0x9cc>  // b.any
    e200:	mov	w27, #0x1                   	// #1
    e204:	cbz	x0, e660 <mpfr_add1@@Base+0x9d4>
    e208:	sub	x1, x3, x0
    e20c:	cmp	x22, x0
    e210:	b.eq	e244 <mpfr_add1@@Base+0x5b8>  // b.none
    e214:	sub	x0, x0, #0x1
    e218:	ldr	x1, [x29, #128]
    e21c:	ldr	x2, [x1, x0, lsl #3]
    e220:	cmp	w27, #0x0
    e224:	b.le	e1f4 <mpfr_add1@@Base+0x568>
    e228:	cmp	w24, #0x5
    e22c:	ccmn	x2, #0x1, #0x0, ne  // ne = any
    e230:	b.eq	e204 <mpfr_add1@@Base+0x578>  // b.none
    e234:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e238:	lsr	x26, x2, #63
    e23c:	orr	x2, x2, #0x8000000000000000
    e240:	b	e1f8 <mpfr_add1@@Base+0x56c>
    e244:	ldr	x0, [x29, #120]
    e248:	cmp	x1, x0
    e24c:	b.gt	e684 <mpfr_add1@@Base+0x9f8>
    e250:	negs	x5, x19
    e254:	and	x19, x19, #0x3f
    e258:	and	x5, x5, #0x3f
    e25c:	csneg	x5, x19, x5, mi  // mi = first
    e260:	mov	w6, w5
    e264:	cmp	w5, #0x0
    e268:	cset	w2, eq  // eq = none
    e26c:	subs	x1, x0, x1
    e270:	csel	w2, w2, wzr, eq  // eq = none
    e274:	cbnz	w2, e684 <mpfr_add1@@Base+0x9f8>
    e278:	mov	x7, #0x0                   	// #0
    e27c:	cmp	x0, x1
    e280:	b.eq	e28c <mpfr_add1@@Base+0x600>  // b.none
    e284:	ldr	x0, [x29, #152]
    e288:	ldr	x7, [x0, x1, lsl #3]
    e28c:	tbnz	w27, #31, e2dc <mpfr_add1@@Base+0x650>
    e290:	cmp	w24, #0x5
    e294:	b.eq	e448 <mpfr_add1@@Base+0x7bc>  // b.none
    e298:	mov	x11, #0x1                   	// #1
    e29c:	lsl	x11, x11, x21
    e2a0:	ldr	x0, [x29, #144]
    e2a4:	add	x12, x20, x0, lsl #3
    e2a8:	sub	x12, x12, #0x8
    e2ac:	mov	x14, x20
    e2b0:	add	x9, x20, x23, lsl #3
    e2b4:	mov	x4, x1
    e2b8:	mov	x3, x22
    e2bc:	ldr	x0, [x29, #152]
    e2c0:	sub	x8, x0, #0x8
    e2c4:	mov	w10, #0x40                  	// #64
    e2c8:	sub	w10, w10, w6
    e2cc:	sub	x1, x1, #0x1
    e2d0:	mrs	x15, tpidr_el0
    e2d4:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
    e2d8:	b	e390 <mpfr_add1@@Base+0x704>
    e2dc:	cbz	w5, e304 <mpfr_add1@@Base+0x678>
    e2e0:	neg	w3, w5
    e2e4:	lsl	x3, x7, x3
    e2e8:	subs	x1, x1, #0x1
    e2ec:	b.mi	e310 <mpfr_add1@@Base+0x684>  // b.first
    e2f0:	ldr	x0, [x29, #152]
    e2f4:	ldr	x7, [x0, x1, lsl #3]
    e2f8:	lsr	x0, x7, x5
    e2fc:	add	x3, x3, x0
    e300:	b	e310 <mpfr_add1@@Base+0x684>
    e304:	sub	x1, x1, #0x1
    e308:	ldr	x0, [x29, #152]
    e30c:	ldr	x3, [x0, x1, lsl #3]
    e310:	sub	x22, x22, #0x1
    e314:	ldr	x0, [x29, #128]
    e318:	ldr	x0, [x0, x22, lsl #3]
    e31c:	adds	x3, x3, x0
    e320:	b.cc	e754 <mpfr_add1@@Base+0xac8>  // b.lo, b.ul, b.last
    e324:	tbnz	w26, #31, e718 <mpfr_add1@@Base+0xa8c>
    e328:	eor	w0, w26, #0x1
    e32c:	cmp	w26, #0x1
    e330:	b.eq	e77c <mpfr_add1@@Base+0xaf0>  // b.none
    e334:	mov	w26, w0
    e338:	b	e764 <mpfr_add1@@Base+0xad8>
    e33c:	ldr	w2, [x25, #8]
    e340:	mov	w1, w24
    e344:	mov	x0, x25
    e348:	bl	bf40 <mpfr_overflow@plt>
    e34c:	mov	w26, w0
    e350:	b	e810 <mpfr_add1@@Base+0xb84>
    e354:	cbz	x0, e6b0 <mpfr_add1@@Base+0xa24>
    e358:	ldr	x0, [x8, x4, lsl #3]
    e35c:	sub	x3, x3, #0x1
    e360:	ldr	x2, [x29, #128]
    e364:	ldr	x2, [x2, x3, lsl #3]
    e368:	adds	x2, x0, x2
    e36c:	b.cc	e41c <mpfr_add1@@Base+0x790>  // b.lo, b.ul, b.last
    e370:	cmp	w27, #0x1
    e374:	b.ne	e3c0 <mpfr_add1@@Base+0x734>  // b.any
    e378:	cmp	w26, #0x1
    e37c:	b.eq	e3c8 <mpfr_add1@@Base+0x73c>  // b.none
    e380:	eor	w26, w26, #0x1
    e384:	cbnz	x2, e7c4 <mpfr_add1@@Base+0xb38>
    e388:	mov	w27, #0x0                   	// #0
    e38c:	sub	x4, x4, #0x1
    e390:	mov	x0, x4
    e394:	cbz	x3, e450 <mpfr_add1@@Base+0x7c4>
    e398:	cbz	w6, e354 <mpfr_add1@@Base+0x6c8>
    e39c:	tbnz	x0, #63, e680 <mpfr_add1@@Base+0x9f4>
    e3a0:	lsl	x0, x7, x10
    e3a4:	sub	x2, x3, x22
    e3a8:	cmn	x1, x2
    e3ac:	b.mi	e35c <mpfr_add1@@Base+0x6d0>  // b.first
    e3b0:	ldr	x7, [x8, x4, lsl #3]
    e3b4:	lsr	x2, x7, x6
    e3b8:	add	x0, x0, x2
    e3bc:	b	e35c <mpfr_add1@@Base+0x6d0>
    e3c0:	eor	w27, w27, #0x1
    e3c4:	b	e434 <mpfr_add1@@Base+0x7a8>
    e3c8:	ldr	x0, [x20]
    e3cc:	add	x0, x11, x0
    e3d0:	str	x0, [x20]
    e3d4:	mov	w26, #0x0                   	// #0
    e3d8:	cmp	x11, x0
    e3dc:	b.ls	e384 <mpfr_add1@@Base+0x6f8>  // b.plast
    e3e0:	mov	x16, x14
    e3e4:	cmp	x9, x16
    e3e8:	b.eq	e6b8 <mpfr_add1@@Base+0xa2c>  // b.none
    e3ec:	ldr	x0, [x16, #8]
    e3f0:	add	x0, x0, #0x1
    e3f4:	str	x0, [x16, #8]!
    e3f8:	cbz	x0, e3e4 <mpfr_add1@@Base+0x758>
    e3fc:	mov	w26, #0x0                   	// #0
    e400:	b	e384 <mpfr_add1@@Base+0x6f8>
    e404:	ldr	w2, [x25, #8]
    e408:	mov	w1, w24
    e40c:	mov	x0, x25
    e410:	bl	bf40 <mpfr_overflow@plt>
    e414:	mov	w26, w0
    e418:	b	e810 <mpfr_add1@@Base+0xb84>
    e41c:	cmp	w27, #0x0
    e420:	ccmp	x2, #0x0, #0x4, eq  // eq = none
    e424:	b.ne	e668 <mpfr_add1@@Base+0x9dc>  // b.any
    e428:	cmp	w27, #0x0
    e42c:	ccmn	x2, #0x1, #0x4, ne  // ne = any
    e430:	b.eq	e38c <mpfr_add1@@Base+0x700>  // b.none
    e434:	cmp	w24, #0x0
    e438:	cset	w2, eq  // eq = none
    e43c:	cmp	w2, #0x0
    e440:	ccmp	w24, #0x5, #0x4, eq  // eq = none
    e444:	b.ne	deb8 <mpfr_add1@@Base+0x22c>  // b.any
    e448:	cbz	w27, e8ac <mpfr_add1@@Base+0xc20>
    e44c:	b	e7d8 <mpfr_add1@@Base+0xb4c>
    e450:	cmp	w27, #0x0
    e454:	ccmp	x4, #0x0, #0x1, eq  // eq = none
    e458:	b.lt	e434 <mpfr_add1@@Base+0x7a8>  // b.tstop
    e45c:	cbz	w5, e46c <mpfr_add1@@Base+0x7e0>
    e460:	neg	w5, w5
    e464:	lsl	x7, x7, x5
    e468:	cbnz	x7, e670 <mpfr_add1@@Base+0x9e4>
    e46c:	cbz	x0, e894 <mpfr_add1@@Base+0xc08>
    e470:	sub	x0, x0, #0x1
    e474:	ldr	x1, [x29, #152]
    e478:	ldr	x1, [x1, x0, lsl #3]
    e47c:	cbz	x1, e46c <mpfr_add1@@Base+0x7e0>
    e480:	mov	w27, #0x1                   	// #1
    e484:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e488:	sub	x22, x22, #0x1
    e48c:	ldr	x0, [x29, #128]
    e490:	ldr	x0, [x0, x22, lsl #3]
    e494:	tbnz	w26, #31, e4a4 <mpfr_add1@@Base+0x818>
    e498:	cmp	x0, #0x0
    e49c:	cset	w27, ne  // ne = any
    e4a0:	b	e688 <mpfr_add1@@Base+0x9fc>
    e4a4:	lsr	x26, x0, #63
    e4a8:	and	x0, x0, #0x7fffffffffffffff
    e4ac:	b	e498 <mpfr_add1@@Base+0x80c>
    e4b0:	ldr	x0, [x29, #136]
    e4b4:	ldr	x2, [x29, #96]
    e4b8:	cmp	x0, x2
    e4bc:	b.cs	e4d0 <mpfr_add1@@Base+0x844>  // b.hs, b.nlast
    e4c0:	cmp	w26, #0x0
    e4c4:	csel	w26, w26, wzr, ge  // ge = tcont
    e4c8:	mov	w27, #0x1                   	// #1
    e4cc:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e4d0:	negs	x2, x19
    e4d4:	and	x19, x19, #0x3f
    e4d8:	and	x2, x2, #0x3f
    e4dc:	csneg	x19, x19, x2, mi  // mi = first
    e4e0:	cmp	w19, #0x0
    e4e4:	cset	w2, eq  // eq = none
    e4e8:	ldr	x0, [x29, #120]
    e4ec:	subs	x1, x0, x1
    e4f0:	csel	w2, w2, wzr, eq  // eq = none
    e4f4:	cbz	w2, e504 <mpfr_add1@@Base+0x878>
    e4f8:	cmp	w26, #0x0
    e4fc:	csel	w26, w26, wzr, ge  // ge = tcont
    e500:	b	e894 <mpfr_add1@@Base+0xc08>
    e504:	cbz	w19, e548 <mpfr_add1@@Base+0x8bc>
    e508:	ldr	x0, [x29, #152]
    e50c:	ldr	x0, [x0, x1, lsl #3]
    e510:	neg	w19, w19
    e514:	lsl	x19, x0, x19
    e518:	tbnz	w26, #31, e558 <mpfr_add1@@Base+0x8cc>
    e51c:	cmp	x19, #0x0
    e520:	ccmp	w24, #0x5, #0x0, eq  // eq = none
    e524:	b.eq	e8ac <mpfr_add1@@Base+0xc20>  // b.none
    e528:	cbnz	x19, e678 <mpfr_add1@@Base+0x9ec>
    e52c:	cbz	x1, e894 <mpfr_add1@@Base+0xc08>
    e530:	sub	x1, x1, #0x1
    e534:	ldr	x0, [x29, #152]
    e538:	ldr	x0, [x0, x1, lsl #3]
    e53c:	cbnz	x0, e564 <mpfr_add1@@Base+0x8d8>
    e540:	cbnz	x1, e530 <mpfr_add1@@Base+0x8a4>
    e544:	b	e894 <mpfr_add1@@Base+0xc08>
    e548:	sub	x1, x1, #0x1
    e54c:	ldr	x0, [x29, #152]
    e550:	ldr	x19, [x0, x1, lsl #3]
    e554:	b	e518 <mpfr_add1@@Base+0x88c>
    e558:	lsr	x26, x19, #63
    e55c:	and	x19, x19, #0x7fffffffffffffff
    e560:	b	e51c <mpfr_add1@@Base+0x890>
    e564:	mov	w27, #0x1                   	// #1
    e568:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e56c:	orr	w26, w26, w27
    e570:	cbz	w26, e580 <mpfr_add1@@Base+0x8f4>
    e574:	ldr	w0, [x25, #8]
    e578:	cmp	w0, #0x0
    e57c:	csinv	w26, w24, wzr, lt  // lt = tstop
    e580:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e584:	ldr	x1, [x0, #2512]
    e588:	add	x0, x0, #0x9d0
    e58c:	blr	x1
    e590:	mrs	x1, tpidr_el0
    e594:	ldr	x0, [x1, x0]
    e598:	cmp	x0, x28
    e59c:	b.le	e80c <mpfr_add1@@Base+0xb80>
    e5a0:	b	e5f8 <mpfr_add1@@Base+0x96c>
    e5a4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x17b0>
    e5a8:	add	x2, x2, #0xfe8
    e5ac:	mov	w1, #0x221                 	// #545
    e5b0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    e5b4:	add	x0, x0, #0x0
    e5b8:	bl	cb40 <mpfr_assert_fail@plt>
    e5bc:	ldr	w2, [x25, #8]
    e5c0:	mov	w1, w24
    e5c4:	mov	x0, x25
    e5c8:	bl	bf40 <mpfr_overflow@plt>
    e5cc:	mov	w26, w0
    e5d0:	b	e810 <mpfr_add1@@Base+0xb84>
    e5d4:	cbz	w2, e5f8 <mpfr_add1@@Base+0x96c>
    e5d8:	sub	x0, x0, #0x1
    e5dc:	cmp	x0, x28
    e5e0:	b.gt	e610 <mpfr_add1@@Base+0x984>
    e5e4:	tbnz	w26, #31, e618 <mpfr_add1@@Base+0x98c>
    e5e8:	mov	x0, x25
    e5ec:	bl	bf00 <mpfr_powerof2_raw@plt>
    e5f0:	cmp	w0, #0x0
    e5f4:	cset	w24, ne  // ne = any
    e5f8:	ldr	w2, [x25, #8]
    e5fc:	mov	w1, w24
    e600:	mov	x0, x25
    e604:	bl	c3c0 <mpfr_underflow@plt>
    e608:	mov	w26, w0
    e60c:	b	e810 <mpfr_add1@@Base+0xb84>
    e610:	mov	w24, #0x1                   	// #1
    e614:	b	e5f8 <mpfr_add1@@Base+0x96c>
    e618:	mov	w24, #0x0                   	// #0
    e61c:	b	e5f8 <mpfr_add1@@Base+0x96c>
    e620:	bl	c410 <mpfr_tmp_free@plt>
    e624:	b	e818 <mpfr_add1@@Base+0xb8c>
    e628:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e62c:	ldr	x1, [x0, #2544]
    e630:	add	x0, x0, #0x9f0
    e634:	blr	x1
    e638:	mrs	x1, tpidr_el0
    e63c:	ldr	x0, [x1, x0]
    e640:	cmp	x0, x28
    e644:	b.eq	e5bc <mpfr_add1@@Base+0x930>  // b.none
    e648:	add	x28, x28, #0x1
    e64c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e650:	str	x0, [x20, x23, lsl #3]
    e654:	b	e7ec <mpfr_add1@@Base+0xb60>
    e658:	mov	w27, #0x1                   	// #1
    e65c:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e660:	mov	w27, #0x1                   	// #1
    e664:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e668:	mov	w27, #0x1                   	// #1
    e66c:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e670:	mov	w27, #0x1                   	// #1
    e674:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e678:	mov	w27, #0x1                   	// #1
    e67c:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e680:	mov	x22, x3
    e684:	tbnz	w27, #31, e488 <mpfr_add1@@Base+0x7fc>
    e688:	cmp	w27, #0x0
    e68c:	ccmp	w24, #0x5, #0x4, eq  // eq = none
    e690:	b.eq	e434 <mpfr_add1@@Base+0x7a8>  // b.none
    e694:	cbz	x22, e894 <mpfr_add1@@Base+0xc08>
    e698:	sub	x22, x22, #0x1
    e69c:	ldr	x0, [x29, #128]
    e6a0:	ldr	x0, [x0, x22, lsl #3]
    e6a4:	cbz	x0, e694 <mpfr_add1@@Base+0xa08>
    e6a8:	mov	w27, #0x1                   	// #1
    e6ac:	b	e7c4 <mpfr_add1@@Base+0xb38>
    e6b0:	mov	x22, x3
    e6b4:	b	e684 <mpfr_add1@@Base+0x9f8>
    e6b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e6bc:	ldr	x16, [x0, #2544]
    e6c0:	add	x0, x0, #0x9f0
    e6c4:	blr	x16
    e6c8:	ldr	x0, [x15, x0]
    e6cc:	cmp	x0, x28
    e6d0:	b.eq	e404 <mpfr_add1@@Base+0x778>  // b.none
    e6d4:	add	x28, x28, #0x1
    e6d8:	str	x13, [x12]
    e6dc:	mov	w26, #0x0                   	// #0
    e6e0:	b	e384 <mpfr_add1@@Base+0x6f8>
    e6e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e6e8:	ldr	x4, [x0, #2544]
    e6ec:	add	x0, x0, #0x9f0
    e6f0:	blr	x4
    e6f4:	mrs	x4, tpidr_el0
    e6f8:	ldr	x0, [x4, x0]
    e6fc:	cmp	x0, x28
    e700:	b.eq	e33c <mpfr_add1@@Base+0x6b0>  // b.none
    e704:	add	x28, x28, #0x1
    e708:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e70c:	str	x0, [x20, x23, lsl #3]
    e710:	mov	w26, #0x0                   	// #0
    e714:	b	e764 <mpfr_add1@@Base+0xad8>
    e718:	mov	x4, #0x1                   	// #1
    e71c:	lsl	x4, x4, x21
    e720:	ldr	x0, [x20]
    e724:	add	x0, x4, x0
    e728:	str	x0, [x20]
    e72c:	cmp	x4, x0
    e730:	b.ls	e758 <mpfr_add1@@Base+0xacc>  // b.plast
    e734:	mov	x0, x20
    e738:	add	x8, x20, x23, lsl #3
    e73c:	cmp	x0, x8
    e740:	b.eq	e6e4 <mpfr_add1@@Base+0xa58>  // b.none
    e744:	ldr	x4, [x0, #8]
    e748:	add	x4, x4, #0x1
    e74c:	str	x4, [x0, #8]!
    e750:	cbz	x4, e73c <mpfr_add1@@Base+0xab0>
    e754:	tbz	w26, #31, e764 <mpfr_add1@@Base+0xad8>
    e758:	lsr	x26, x3, #63
    e75c:	ubfx	x0, x3, #62, #1
    e760:	orr	x3, x0, x3, lsl #1
    e764:	cmp	x3, #0x0
    e768:	cset	w27, ne  // ne = any
    e76c:	sub	x3, x3, #0x1
    e770:	cmn	x3, #0x3
    e774:	b.hi	e290 <mpfr_add1@@Base+0x604>  // b.pmore
    e778:	b	e434 <mpfr_add1@@Base+0x7a8>
    e77c:	mov	x4, #0x1                   	// #1
    e780:	lsl	x4, x4, x21
    e784:	ldr	x0, [x20]
    e788:	add	x0, x4, x0
    e78c:	str	x0, [x20]
    e790:	mov	w26, #0x0                   	// #0
    e794:	cmp	x4, x0
    e798:	b.ls	e764 <mpfr_add1@@Base+0xad8>  // b.plast
    e79c:	mov	w26, #0x0                   	// #0
    e7a0:	b	e734 <mpfr_add1@@Base+0xaa8>
    e7a4:	add	x1, x19, #0x3f
    e7a8:	cmp	x19, #0x0
    e7ac:	csel	x1, x1, x19, lt  // lt = tstop
    e7b0:	ldr	x0, [x29, #144]
    e7b4:	sub	x1, x0, x1, asr #6
    e7b8:	cmp	x23, x22
    e7bc:	b.lt	e96c <mpfr_add1@@Base+0xce0>  // b.tstop
    e7c0:	mov	w27, #0x1                   	// #1
    e7c4:	cmp	w24, #0x0
    e7c8:	cset	w2, eq  // eq = none
    e7cc:	cmp	w2, #0x0
    e7d0:	ccmp	w24, #0x5, #0x4, eq  // eq = none
    e7d4:	b.ne	deb8 <mpfr_add1@@Base+0x22c>  // b.any
    e7d8:	cbnz	w26, e8bc <mpfr_add1@@Base+0xc30>
    e7dc:	ldr	w0, [x25, #8]
    e7e0:	mov	w26, #0xffffffff            	// #-1
    e7e4:	cmp	w0, #0x0
    e7e8:	cneg	w26, w26, lt  // lt = tstop
    e7ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e7f0:	ldr	x1, [x0, #2512]
    e7f4:	add	x0, x0, #0x9d0
    e7f8:	blr	x1
    e7fc:	mrs	x1, tpidr_el0
    e800:	ldr	x0, [x1, x0]
    e804:	cmp	x0, x28
    e808:	b.gt	e5d4 <mpfr_add1@@Base+0x948>
    e80c:	str	x28, [x25, #16]
    e810:	ldr	x0, [x29, #168]
    e814:	cbnz	x0, e620 <mpfr_add1@@Base+0x994>
    e818:	cbz	w26, e840 <mpfr_add1@@Base+0xbb4>
    e81c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    e820:	ldr	x1, [x0, #2576]
    e824:	add	x0, x0, #0xa10
    e828:	blr	x1
    e82c:	mrs	x1, tpidr_el0
    e830:	add	x0, x1, x0
    e834:	ldr	w1, [x0]
    e838:	orr	w1, w1, #0x8
    e83c:	str	w1, [x0]
    e840:	mov	w0, w26
    e844:	mov	sp, x29
    e848:	ldp	x19, x20, [sp, #16]
    e84c:	ldp	x21, x22, [sp, #32]
    e850:	ldp	x23, x24, [sp, #48]
    e854:	ldp	x25, x26, [sp, #64]
    e858:	ldp	x27, x28, [sp, #80]
    e85c:	ldp	x29, x30, [sp], #176
    e860:	ret
    e864:	add	x1, x19, #0x3f
    e868:	cmp	x19, #0x0
    e86c:	csel	x1, x1, x19, lt  // lt = tstop
    e870:	ldr	x0, [x29, #144]
    e874:	sub	x1, x0, x1, asr #6
    e878:	cmp	x23, x22
    e87c:	b.lt	e1ac <mpfr_add1@@Base+0x520>  // b.tstop
    e880:	ldr	x0, [x29, #120]
    e884:	cmp	x0, x1
    e888:	b.ge	e4b0 <mpfr_add1@@Base+0x824>  // b.tcont
    e88c:	cmp	w26, #0x0
    e890:	csel	w26, w26, wzr, ge  // ge = tcont
    e894:	cmp	w24, #0x0
    e898:	cset	w2, eq  // eq = none
    e89c:	cmp	w2, #0x0
    e8a0:	ccmp	w24, #0x5, #0x4, eq  // eq = none
    e8a4:	mov	w27, #0x0                   	// #0
    e8a8:	b.ne	deb8 <mpfr_add1@@Base+0x22c>  // b.any
    e8ac:	cbz	w26, e7ec <mpfr_add1@@Base+0xb60>
    e8b0:	ldr	x0, [x20]
    e8b4:	lsr	x0, x0, x21
    e8b8:	tbz	w0, #0, e7dc <mpfr_add1@@Base+0xb50>
    e8bc:	ldr	w0, [x25, #8]
    e8c0:	mov	w26, #0xffffffff            	// #-1
    e8c4:	cmp	w0, #0x0
    e8c8:	cneg	w26, w26, gt
    e8cc:	mov	x0, #0x1                   	// #1
    e8d0:	lsl	x21, x0, x21
    e8d4:	ldr	x0, [x20]
    e8d8:	add	x0, x21, x0
    e8dc:	str	x0, [x20]
    e8e0:	cmp	x21, x0
    e8e4:	b.ls	e7ec <mpfr_add1@@Base+0xb60>  // b.plast
    e8e8:	mov	x1, x20
    e8ec:	add	x3, x20, x23, lsl #3
    e8f0:	cmp	x3, x1
    e8f4:	b.eq	e628 <mpfr_add1@@Base+0x99c>  // b.none
    e8f8:	ldr	x0, [x1, #8]
    e8fc:	add	x0, x0, #0x1
    e900:	str	x0, [x1, #8]!
    e904:	cbz	x0, e8f0 <mpfr_add1@@Base+0xc64>
    e908:	b	e7ec <mpfr_add1@@Base+0xb60>
    e90c:	mov	w27, #0xffffffff            	// #-1
    e910:	b	e918 <mpfr_add1@@Base+0xc8c>
    e914:	mov	w27, #0x0                   	// #0
    e918:	mov	w3, #0x1                   	// #1
    e91c:	ldr	x2, [x29, #144]
    e920:	mov	x1, x20
    e924:	mov	x0, x20
    e928:	bl	bce0 <__gmpn_rshift@plt>
    e92c:	ldr	x3, [x29, #144]
    e930:	lsl	x0, x3, #3
    e934:	sub	x0, x0, #0x8
    e938:	ldr	x1, [x20, x0]
    e93c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    e940:	add	x1, x1, x2
    e944:	str	x1, [x20, x0]
    e948:	add	x1, x19, #0x3f
    e94c:	cmp	x19, #0x0
    e950:	csel	x1, x1, x19, lt  // lt = tstop
    e954:	sub	x1, x3, x1, asr #6
    e958:	cmp	x23, x22
    e95c:	b.ge	e9d0 <mpfr_add1@@Base+0xd44>  // b.tcont
    e960:	b	e1b0 <mpfr_add1@@Base+0x524>
    e964:	mov	w27, #0x1                   	// #1
    e968:	b	e918 <mpfr_add1@@Base+0xc8c>
    e96c:	sub	x22, x22, x23
    e970:	mov	w27, #0x1                   	// #1
    e974:	tbz	x1, #63, e244 <mpfr_add1@@Base+0x5b8>
    e978:	sub	x0, x22, #0x1
    e97c:	ldr	x2, [x29, #128]
    e980:	ldr	x2, [x2, x0, lsl #3]
    e984:	mov	w27, #0x1                   	// #1
    e988:	b	e1e8 <mpfr_add1@@Base+0x55c>
    e98c:	add	x1, x19, #0x3f
    e990:	cmp	x19, #0x0
    e994:	csel	x1, x1, x19, lt  // lt = tstop
    e998:	ldr	x0, [x29, #144]
    e99c:	sub	x1, x0, x1, asr #6
    e9a0:	cmp	x23, x22
    e9a4:	b.lt	e1c4 <mpfr_add1@@Base+0x538>  // b.tstop
    e9a8:	mov	w26, #0xffffffff            	// #-1
    e9ac:	b	e880 <mpfr_add1@@Base+0xbf4>
    e9b0:	add	x1, x19, #0x3f
    e9b4:	cmp	x19, #0x0
    e9b8:	csel	x1, x1, x19, lt  // lt = tstop
    e9bc:	ldr	x0, [x29, #144]
    e9c0:	sub	x1, x0, x1, asr #6
    e9c4:	cmp	x23, x22
    e9c8:	b.lt	e1d0 <mpfr_add1@@Base+0x544>  // b.tstop
    e9cc:	mov	w27, #0xffffffff            	// #-1
    e9d0:	cmp	w27, #0x1
    e9d4:	b.ne	e880 <mpfr_add1@@Base+0xbf4>  // b.any
    e9d8:	b	e7c4 <mpfr_add1@@Base+0xb38>

000000000000e9dc <mpfr_add_ui@@Base>:
    e9dc:	stp	x29, x30, [sp, #-128]!
    e9e0:	mov	x29, sp
    e9e4:	stp	x19, x20, [sp, #16]
    e9e8:	stp	x21, x22, [sp, #32]
    e9ec:	mov	x19, x0
    e9f0:	mov	w21, w3
    e9f4:	cbz	x2, eb04 <mpfr_add_ui@@Base+0x128>
    e9f8:	mov	x4, x2
    e9fc:	ldr	x0, [x1, #16]
    ea00:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    ea04:	cmp	x0, x2
    ea08:	b.le	eb18 <mpfr_add_ui@@Base+0x13c>
    ea0c:	stp	x23, x24, [sp, #48]
    ea10:	stp	x25, x26, [sp, #64]
    ea14:	mov	x2, #0x40                  	// #64
    ea18:	str	x2, [sp, #96]
    ea1c:	add	x0, sp, #0x58
    ea20:	str	x0, [sp, #120]
    ea24:	mov	w0, #0x1                   	// #1
    ea28:	str	w0, [sp, #104]
    ea2c:	clz	x5, x4
    ea30:	lsl	x4, x4, x5
    ea34:	str	x4, [sp, #88]
    ea38:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ea3c:	ldr	x3, [x0, #2576]
    ea40:	add	x0, x0, #0xa10
    ea44:	blr	x3
    ea48:	mrs	x3, tpidr_el0
    ea4c:	add	x26, x3, x0
    ea50:	ldr	w20, [x3, x0]
    ea54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ea58:	ldr	x4, [x0, #2512]
    ea5c:	add	x0, x0, #0x9d0
    ea60:	blr	x4
    ea64:	add	x25, x3, x0
    ea68:	ldr	x23, [x3, x0]
    ea6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ea70:	ldr	x4, [x0, #2544]
    ea74:	add	x0, x0, #0x9f0
    ea78:	blr	x4
    ea7c:	add	x24, x3, x0
    ea80:	ldr	x22, [x3, x0]
    ea84:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    ea88:	str	x0, [x25]
    ea8c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ea90:	str	x0, [x24]
    ea94:	sub	w2, w2, w5
    ea98:	sxtw	x2, w2
    ea9c:	str	x2, [sp, #112]
    eaa0:	mov	w3, w21
    eaa4:	add	x2, sp, #0x60
    eaa8:	mov	x0, x19
    eaac:	bl	c1a0 <mpfr_add@plt>
    eab0:	mov	w1, w0
    eab4:	ldr	w0, [x26]
    eab8:	orr	w20, w20, w0
    eabc:	str	w20, [x26]
    eac0:	str	x23, [x25]
    eac4:	str	x22, [x24]
    eac8:	ldr	x0, [x19, #16]
    eacc:	cmp	x23, x0
    ead0:	ccmp	x22, x0, #0x1, le
    ead4:	b.lt	eb90 <mpfr_add_ui@@Base+0x1b4>  // b.tstop
    ead8:	cbz	w1, ebac <mpfr_add_ui@@Base+0x1d0>
    eadc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    eae0:	ldr	x2, [x0, #2576]
    eae4:	add	x0, x0, #0xa10
    eae8:	blr	x2
    eaec:	orr	w20, w20, #0x8
    eaf0:	mrs	x2, tpidr_el0
    eaf4:	str	w20, [x2, x0]
    eaf8:	ldp	x23, x24, [sp, #48]
    eafc:	ldp	x25, x26, [sp, #64]
    eb00:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    eb04:	ldr	w3, [x1, #8]
    eb08:	mov	w2, w21
    eb0c:	bl	c6a0 <mpfr_set4@plt>
    eb10:	mov	w1, w0
    eb14:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    eb18:	mov	x2, #0x2                   	// #2
    eb1c:	movk	x2, #0x8000, lsl #48
    eb20:	cmp	x0, x2
    eb24:	b.eq	eb4c <mpfr_add_ui@@Base+0x170>  // b.none
    eb28:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    eb2c:	cmp	x0, x2
    eb30:	b.eq	eb7c <mpfr_add_ui@@Base+0x1a0>  // b.none
    eb34:	mov	x2, #0x0                   	// #0
    eb38:	mov	x1, x4
    eb3c:	mov	x0, x19
    eb40:	bl	c5f0 <mpfr_set_ui_2exp@plt>
    eb44:	mov	w1, w0
    eb48:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    eb4c:	str	x2, [x19, #16]
    eb50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    eb54:	ldr	x1, [x0, #2576]
    eb58:	add	x0, x0, #0xa10
    eb5c:	blr	x1
    eb60:	mrs	x1, tpidr_el0
    eb64:	add	x0, x1, x0
    eb68:	ldr	w1, [x0]
    eb6c:	orr	w1, w1, #0x4
    eb70:	str	w1, [x0]
    eb74:	mov	w1, #0x0                   	// #0
    eb78:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    eb7c:	str	x2, [x19, #16]
    eb80:	ldr	w0, [x1, #8]
    eb84:	str	w0, [x19, #8]
    eb88:	mov	w1, #0x0                   	// #0
    eb8c:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    eb90:	mov	w2, w21
    eb94:	mov	x0, x19
    eb98:	bl	cb30 <mpfr_check_range@plt>
    eb9c:	mov	w1, w0
    eba0:	ldp	x23, x24, [sp, #48]
    eba4:	ldp	x25, x26, [sp, #64]
    eba8:	b	ebb4 <mpfr_add_ui@@Base+0x1d8>
    ebac:	ldp	x23, x24, [sp, #48]
    ebb0:	ldp	x25, x26, [sp, #64]
    ebb4:	mov	w0, w1
    ebb8:	ldp	x19, x20, [sp, #16]
    ebbc:	ldp	x21, x22, [sp, #32]
    ebc0:	ldp	x29, x30, [sp], #128
    ebc4:	ret

000000000000ebc8 <mpfr_agm@@Base>:
    ebc8:	stp	x29, x30, [sp, #-432]!
    ebcc:	mov	x29, sp
    ebd0:	stp	x19, x20, [sp, #16]
    ebd4:	stp	x21, x22, [sp, #32]
    ebd8:	stp	x23, x24, [sp, #48]
    ebdc:	stp	x25, x26, [sp, #64]
    ebe0:	stp	x27, x28, [sp, #80]
    ebe4:	mov	x25, x0
    ebe8:	mov	x21, x1
    ebec:	mov	x20, x2
    ebf0:	str	w3, [x29, #180]
    ebf4:	ldr	x0, [x2, #16]
    ebf8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    ebfc:	cmp	x0, x1
    ec00:	b.le	f0f0 <mpfr_agm@@Base+0x528>
    ec04:	ldr	x2, [x21, #16]
    ec08:	cmp	x2, x1
    ec0c:	b.le	f100 <mpfr_agm@@Base+0x538>
    ec10:	ldr	w0, [x20, #8]
    ec14:	tbnz	w0, #31, f1ec <mpfr_agm@@Base+0x624>
    ec18:	ldr	w0, [x21, #8]
    ec1c:	tbnz	w0, #31, f1ec <mpfr_agm@@Base+0x624>
    ec20:	ldr	x28, [x25]
    ec24:	cmp	x28, #0x1
    ec28:	b.eq	f23c <mpfr_agm@@Base+0x674>  // b.none
    ec2c:	b.le	f224 <mpfr_agm@@Base+0x65c>
    ec30:	sub	x0, x28, #0x1
    ec34:	clz	x1, x0
    ec38:	mov	w0, #0x40                  	// #64
    ec3c:	sub	w0, w0, w1
    ec40:	sxtw	x0, w0
    ec44:	add	x0, x0, x28
    ec48:	add	x19, x0, #0xf
    ec4c:	add	x22, x0, #0x4d
    ec50:	adds	x0, x0, #0xe
    ec54:	csel	x22, x22, x0, mi  // mi = first
    ec58:	asr	x22, x22, #6
    ec5c:	add	x22, x22, #0x1
    ec60:	mov	w2, #0x1                   	// #1
    ec64:	mov	x1, x21
    ec68:	mov	x0, x20
    ec6c:	bl	c9a0 <mpfr_cmp3@plt>
    ec70:	cbz	w0, f244 <mpfr_agm@@Base+0x67c>
    ec74:	cmp	w0, #0x0
    ec78:	csel	x1, x21, x20, le
    ec7c:	csel	x20, x20, x21, le
    ec80:	mov	x21, x1
    ec84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ec88:	ldr	x1, [x0, #2576]
    ec8c:	add	x0, x0, #0xa10
    ec90:	blr	x1
    ec94:	mrs	x1, tpidr_el0
    ec98:	ldr	w0, [x1, x0]
    ec9c:	str	w0, [x29, #176]
    eca0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    eca4:	ldr	x2, [x0, #2512]
    eca8:	add	x0, x0, #0x9d0
    ecac:	blr	x2
    ecb0:	add	x2, x1, x0
    ecb4:	ldr	x0, [x1, x0]
    ecb8:	str	x0, [x29, #112]
    ecbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ecc0:	ldr	x3, [x0, #2544]
    ecc4:	add	x0, x0, #0x9f0
    ecc8:	blr	x3
    eccc:	ldr	x3, [x1, x0]
    ecd0:	str	x3, [x29, #104]
    ecd4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
    ecd8:	str	x3, [x2]
    ecdc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    ece0:	str	x2, [x1, x0]
    ece4:	str	xzr, [x29, #232]
    ece8:	mov	x0, #0x40                  	// #64
    ecec:	str	x0, [x29, #120]
    ecf0:	str	xzr, [x29, #160]
    ecf4:	add	x0, x29, #0x150
    ecf8:	str	x0, [x29, #168]
    ecfc:	lsl	x22, x22, #3
    ed00:	cmp	x22, #0x4, lsl #12
    ed04:	b.hi	f260 <mpfr_agm@@Base+0x698>  // b.pmore
    ed08:	add	x22, x22, #0xf
    ed0c:	and	x22, x22, #0xfffffffffffffff0
    ed10:	sub	sp, sp, x22
    ed14:	str	x19, [x29, #400]
    ed18:	mov	x0, sp
    ed1c:	str	x0, [x29, #424]
    ed20:	mov	w0, #0x1                   	// #1
    ed24:	str	w0, [x29, #408]
    ed28:	sub	sp, sp, x22
    ed2c:	str	x19, [x29, #368]
    ed30:	mov	x1, sp
    ed34:	str	x1, [x29, #392]
    ed38:	str	w0, [x29, #376]
    ed3c:	sub	sp, sp, x22
    ed40:	str	x19, [x29, #336]
    ed44:	mov	x1, sp
    ed48:	str	x1, [x29, #360]
    ed4c:	str	w0, [x29, #344]
    ed50:	sub	sp, sp, x22
    ed54:	mov	x0, sp
    ed58:	str	x19, [x29, #304]
    ed5c:	str	x0, [x29, #328]
    ed60:	mov	w0, #0x1                   	// #1
    ed64:	str	w0, [x29, #312]
    ed68:	add	x23, x29, #0x190
    ed6c:	add	x24, x29, #0x170
    ed70:	adrp	x26, 5f000 <mpfr_free_pool@@Base+0x27b0>
    ed74:	add	x26, x26, #0xc8
    ed78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    ed7c:	ldr	x1, [x0, #2576]
    ed80:	add	x0, x0, #0xa10
    ed84:	blr	x1
    ed88:	mrs	x1, tpidr_el0
    ed8c:	add	x22, x1, x0
    ed90:	str	wzr, [x1, x0]
    ed94:	mov	w3, #0x0                   	// #0
    ed98:	mov	x2, x21
    ed9c:	mov	x1, x20
    eda0:	mov	x0, x23
    eda4:	bl	bd50 <mpfr_mul@plt>
    eda8:	mov	w3, #0x0                   	// #0
    edac:	mov	x2, x21
    edb0:	mov	x1, x20
    edb4:	mov	x0, x24
    edb8:	bl	c1a0 <mpfr_add@plt>
    edbc:	ldr	w0, [x22]
    edc0:	tst	x0, #0x3
    edc4:	b.ne	f2c0 <mpfr_agm@@Base+0x6f8>  // b.any
    edc8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    edcc:	ldr	x1, [x0, #2576]
    edd0:	add	x0, x0, #0xa10
    edd4:	blr	x1
    edd8:	mrs	x1, tpidr_el0
    eddc:	str	wzr, [x1, x0]
    ede0:	add	x0, x29, #0x190
    ede4:	mov	w2, #0x0                   	// #0
    ede8:	mov	x1, x0
    edec:	bl	c930 <mpfr_sqrt@plt>
    edf0:	add	x0, x29, #0x170
    edf4:	mov	w3, #0x0                   	// #0
    edf8:	mov	x2, #0x1                   	// #1
    edfc:	mov	x1, x0
    ee00:	bl	c8f0 <mpfr_div_2ui@plt>
    ee04:	str	x19, [x29, #128]
    ee08:	add	x0, x19, #0x1
    ee0c:	add	x0, x0, x0, lsr #63
    ee10:	asr	x0, x0, #1
    ee14:	str	x0, [x29, #144]
    ee18:	mov	x22, #0x1                   	// #1
    ee1c:	str	xzr, [x29, #136]
    ee20:	add	x0, x29, #0xc0
    ee24:	str	x0, [x29, #184]
    ee28:	add	x23, x29, #0xc8
    ee2c:	ldr	x2, [x29, #184]
    ee30:	add	x1, x29, #0x170
    ee34:	add	x0, x29, #0x190
    ee38:	bl	bdb0 <mpfr_cmp2@plt>
    ee3c:	cbz	w0, f4ec <mpfr_agm@@Base+0x924>
    ee40:	sub	x0, x19, #0x1
    ee44:	ldr	x1, [x29, #192]
    ee48:	cmp	x0, x1
    ee4c:	b.le	f4e4 <mpfr_agm@@Base+0x91c>
    ee50:	add	x27, x29, #0x170
    ee54:	add	x26, x29, #0x190
    ee58:	add	x24, x29, #0x130
    ee5c:	mov	w3, #0x0                   	// #0
    ee60:	mov	x2, x27
    ee64:	mov	x1, x26
    ee68:	mov	x0, x24
    ee6c:	bl	c1a0 <mpfr_add@plt>
    ee70:	mov	w3, #0x0                   	// #0
    ee74:	mov	x2, #0x1                   	// #1
    ee78:	mov	x1, x24
    ee7c:	mov	x0, x24
    ee80:	bl	c8f0 <mpfr_div_2ui@plt>
    ee84:	ldr	x0, [x29, #192]
    ee88:	cmp	x19, x0, lsl #2
    ee8c:	b.ge	f420 <mpfr_agm@@Base+0x858>  // b.tcont
    ee90:	ldr	x1, [x29, #144]
    ee94:	mov	x0, x23
    ee98:	bl	ca80 <mpfr_init2@plt>
    ee9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    eea0:	ldr	x1, [x0, #2576]
    eea4:	add	x0, x0, #0xa10
    eea8:	blr	x1
    eeac:	mrs	x1, tpidr_el0
    eeb0:	add	x2, x1, x0
    eeb4:	str	x2, [x29, #152]
    eeb8:	str	wzr, [x1, x0]
    eebc:	mov	w3, #0x0                   	// #0
    eec0:	mov	x2, x26
    eec4:	mov	x1, x27
    eec8:	mov	x0, x23
    eecc:	bl	bb70 <mpfr_sub@plt>
    eed0:	mov	w2, #0x0                   	// #0
    eed4:	mov	x1, x23
    eed8:	mov	x0, x23
    eedc:	bl	c400 <mpfr_sqr@plt>
    eee0:	mov	w3, #0x0                   	// #0
    eee4:	mov	x2, #0x4                   	// #4
    eee8:	mov	x1, x23
    eeec:	mov	x0, x23
    eef0:	bl	c8f0 <mpfr_div_2ui@plt>
    eef4:	mov	w3, #0x0                   	// #0
    eef8:	mov	x2, x24
    eefc:	mov	x1, x23
    ef00:	mov	x0, x23
    ef04:	bl	c620 <mpfr_div@plt>
    ef08:	ldr	x2, [x29, #152]
    ef0c:	ldr	w0, [x2]
    ef10:	tbnz	w0, #0, f418 <mpfr_agm@@Base+0x850>
    ef14:	add	x23, x29, #0xc8
    ef18:	mov	w3, #0x0                   	// #0
    ef1c:	mov	x2, x23
    ef20:	add	x1, x29, #0x130
    ef24:	add	x0, x29, #0x170
    ef28:	bl	bb70 <mpfr_sub@plt>
    ef2c:	ldr	x2, [x29, #320]
    ef30:	ldr	x24, [x29, #384]
    ef34:	sub	x24, x2, x24
    ef38:	mov	x0, x23
    ef3c:	bl	c070 <mpfr_clear@plt>
    ef40:	add	x0, x22, x22, lsl #3
    ef44:	lsl	x0, x0, #1
    ef48:	cmn	x0, #0x32
    ef4c:	b.eq	f50c <mpfr_agm@@Base+0x944>  // b.none
    ef50:	add	x1, x0, #0x33
    ef54:	cmp	x1, #0x1
    ef58:	b.ls	f4f4 <mpfr_agm@@Base+0x92c>  // b.plast
    ef5c:	add	x0, x0, #0x32
    ef60:	clz	x0, x0
    ef64:	mov	w2, #0x40                  	// #64
    ef68:	sub	w0, w2, w0
    ef6c:	sxtw	x0, w0
    ef70:	cmn	x22, #0x1
    ef74:	b.eq	f52c <mpfr_agm@@Base+0x964>  // b.none
    ef78:	cmn	x22, #0x2
    ef7c:	b.cs	f514 <mpfr_agm@@Base+0x94c>  // b.hs, b.nlast
    ef80:	add	x22, x22, #0x1
    ef84:	clz	x22, x22
    ef88:	mov	w1, #0x40                  	// #64
    ef8c:	sub	w22, w1, w22
    ef90:	sxtw	x22, w22
    ef94:	add	x1, x19, #0x3
    ef98:	cmp	x19, #0x0
    ef9c:	csel	x1, x1, x19, lt  // lt = tstop
    efa0:	cmp	x22, x1, asr #2
    efa4:	b.gt	f534 <mpfr_agm@@Base+0x96c>
    efa8:	ldr	x2, [x29, #384]
    efac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    efb0:	cmp	x2, x1
    efb4:	b.le	f534 <mpfr_agm@@Base+0x96c>
    efb8:	ldr	w1, [x29, #180]
    efbc:	cmp	w1, #0x0
    efc0:	cinc	x3, x28, eq  // eq = none
    efc4:	ldr	x1, [x29, #128]
    efc8:	sub	x2, x1, x24
    efcc:	ldr	x4, [x29, #368]
    efd0:	add	x1, x4, #0x3e
    efd4:	subs	x4, x4, #0x1
    efd8:	csel	x1, x1, x4, mi  // mi = first
    efdc:	asr	x1, x1, #6
    efe0:	sub	x2, x2, x0
    efe4:	add	x1, x1, #0x1
    efe8:	ldr	x0, [x29, #392]
    efec:	bl	c370 <mpfr_round_p@plt>
    eff0:	cbz	w0, f534 <mpfr_agm@@Base+0x96c>
    eff4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    eff8:	ldr	x1, [x0, #2576]
    effc:	add	x0, x0, #0xa10
    f000:	blr	x1
    f004:	mrs	x1, tpidr_el0
    f008:	ldr	w0, [x1, x0]
    f00c:	mov	w1, #0x37                  	// #55
    f010:	tst	w0, w1
    f014:	b.ne	f590 <mpfr_agm@@Base+0x9c8>  // b.any
    f018:	ldr	w3, [x29, #376]
    f01c:	ldr	w2, [x29, #180]
    f020:	add	x1, x29, #0x170
    f024:	mov	x0, x25
    f028:	bl	c6a0 <mpfr_set4@plt>
    f02c:	mov	w19, w0
    f030:	ldr	x0, [x29, #160]
    f034:	ldr	x1, [x29, #136]
    f038:	add	x0, x0, x1
    f03c:	ldr	x1, [x25, #16]
    f040:	sub	x0, x1, x0
    f044:	str	x0, [x25, #16]
    f048:	ldr	x0, [x29, #232]
    f04c:	cbnz	x0, f658 <mpfr_agm@@Base+0xa90>
    f050:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f054:	ldr	x1, [x0, #2576]
    f058:	add	x0, x0, #0xa10
    f05c:	blr	x1
    f060:	mrs	x1, tpidr_el0
    f064:	ldr	w4, [x29, #176]
    f068:	str	w4, [x1, x0]
    f06c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f070:	ldr	x2, [x0, #2512]
    f074:	add	x0, x0, #0x9d0
    f078:	blr	x2
    f07c:	ldr	x2, [x29, #112]
    f080:	str	x2, [x1, x0]
    f084:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f088:	ldr	x3, [x0, #2544]
    f08c:	add	x0, x0, #0x9f0
    f090:	blr	x3
    f094:	ldr	x3, [x29, #104]
    f098:	str	x3, [x1, x0]
    f09c:	ldr	x0, [x25, #16]
    f0a0:	cmp	x2, x0
    f0a4:	ccmp	x3, x0, #0x1, le
    f0a8:	b.lt	f660 <mpfr_agm@@Base+0xa98>  // b.tstop
    f0ac:	cbz	w19, f0cc <mpfr_agm@@Base+0x504>
    f0b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f0b4:	ldr	x1, [x0, #2576]
    f0b8:	add	x0, x0, #0xa10
    f0bc:	blr	x1
    f0c0:	orr	w1, w4, #0x8
    f0c4:	mrs	x2, tpidr_el0
    f0c8:	str	w1, [x2, x0]
    f0cc:	mov	w0, w19
    f0d0:	mov	sp, x29
    f0d4:	ldp	x19, x20, [sp, #16]
    f0d8:	ldp	x21, x22, [sp, #32]
    f0dc:	ldp	x23, x24, [sp, #48]
    f0e0:	ldp	x25, x26, [sp, #64]
    f0e4:	ldp	x27, x28, [sp, #80]
    f0e8:	ldp	x29, x30, [sp], #432
    f0ec:	ret
    f0f0:	mov	x1, #0x2                   	// #2
    f0f4:	movk	x1, #0x8000, lsl #48
    f0f8:	cmp	x0, x1
    f0fc:	b.eq	f164 <mpfr_agm@@Base+0x59c>  // b.none
    f100:	ldr	x1, [x21, #16]
    f104:	mov	x2, #0x2                   	// #2
    f108:	movk	x2, #0x8000, lsl #48
    f10c:	cmp	x1, x2
    f110:	b.eq	f164 <mpfr_agm@@Base+0x59c>  // b.none
    f114:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    f118:	cmp	x1, x2
    f11c:	ccmp	x0, x2, #0x4, ne  // ne = any
    f120:	b.ne	f1d4 <mpfr_agm@@Base+0x60c>  // b.any
    f124:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    f128:	cmp	x0, x2
    f12c:	b.eq	f19c <mpfr_agm@@Base+0x5d4>  // b.none
    f130:	ldr	w0, [x20, #8]
    f134:	cmp	w0, #0x0
    f138:	ccmp	x1, x2, #0x4, gt
    f13c:	b.eq	f19c <mpfr_agm@@Base+0x5d4>  // b.none
    f140:	ldr	w0, [x21, #8]
    f144:	cmp	w0, #0x0
    f148:	b.le	f19c <mpfr_agm@@Base+0x5d4>
    f14c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    f150:	str	x0, [x25, #16]
    f154:	ldr	w0, [x20, #8]
    f158:	str	w0, [x25, #8]
    f15c:	mov	w19, #0x0                   	// #0
    f160:	b	f0cc <mpfr_agm@@Base+0x504>
    f164:	mov	x0, #0x2                   	// #2
    f168:	movk	x0, #0x8000, lsl #48
    f16c:	str	x0, [x25, #16]
    f170:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f174:	ldr	x1, [x0, #2576]
    f178:	add	x0, x0, #0xa10
    f17c:	blr	x1
    f180:	mrs	x1, tpidr_el0
    f184:	add	x0, x1, x0
    f188:	ldr	w1, [x0]
    f18c:	orr	w1, w1, #0x4
    f190:	str	w1, [x0]
    f194:	mov	w19, #0x0                   	// #0
    f198:	b	f0cc <mpfr_agm@@Base+0x504>
    f19c:	mov	x0, #0x2                   	// #2
    f1a0:	movk	x0, #0x8000, lsl #48
    f1a4:	str	x0, [x25, #16]
    f1a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f1ac:	ldr	x1, [x0, #2576]
    f1b0:	add	x0, x0, #0xa10
    f1b4:	blr	x1
    f1b8:	mrs	x1, tpidr_el0
    f1bc:	add	x0, x1, x0
    f1c0:	ldr	w1, [x0]
    f1c4:	orr	w1, w1, #0x4
    f1c8:	str	w1, [x0]
    f1cc:	mov	w19, #0x0                   	// #0
    f1d0:	b	f0cc <mpfr_agm@@Base+0x504>
    f1d4:	mov	w0, #0x1                   	// #1
    f1d8:	str	w0, [x25, #8]
    f1dc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f1e0:	str	x0, [x25, #16]
    f1e4:	mov	w19, #0x0                   	// #0
    f1e8:	b	f0cc <mpfr_agm@@Base+0x504>
    f1ec:	mov	x0, #0x2                   	// #2
    f1f0:	movk	x0, #0x8000, lsl #48
    f1f4:	str	x0, [x25, #16]
    f1f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f1fc:	ldr	x1, [x0, #2576]
    f200:	add	x0, x0, #0xa10
    f204:	blr	x1
    f208:	mrs	x1, tpidr_el0
    f20c:	add	x0, x1, x0
    f210:	ldr	w1, [x0]
    f214:	orr	w1, w1, #0x4
    f218:	str	w1, [x0]
    f21c:	mov	w19, #0x0                   	// #0
    f220:	b	f0cc <mpfr_agm@@Base+0x504>
    f224:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f228:	add	x2, x2, #0x8
    f22c:	mov	w1, #0x5f                  	// #95
    f230:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f234:	add	x0, x0, #0x10
    f238:	bl	cb40 <mpfr_assert_fail@plt>
    f23c:	mov	x0, #0x0                   	// #0
    f240:	b	ec44 <mpfr_agm@@Base+0x7c>
    f244:	ldr	w3, [x20, #8]
    f248:	ldr	w2, [x29, #180]
    f24c:	mov	x1, x20
    f250:	mov	x0, x25
    f254:	bl	c6a0 <mpfr_set4@plt>
    f258:	mov	w19, w0
    f25c:	b	f0cc <mpfr_agm@@Base+0x504>
    f260:	add	x23, x29, #0xe8
    f264:	mov	x1, x22
    f268:	mov	x0, x23
    f26c:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f270:	str	x19, [x29, #400]
    f274:	str	x0, [x29, #424]
    f278:	mov	w24, #0x1                   	// #1
    f27c:	str	w24, [x29, #408]
    f280:	mov	x1, x22
    f284:	mov	x0, x23
    f288:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f28c:	str	x19, [x29, #368]
    f290:	str	x0, [x29, #392]
    f294:	str	w24, [x29, #376]
    f298:	mov	x1, x22
    f29c:	mov	x0, x23
    f2a0:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f2a4:	str	x19, [x29, #336]
    f2a8:	str	x0, [x29, #360]
    f2ac:	str	w24, [x29, #344]
    f2b0:	mov	x1, x22
    f2b4:	mov	x0, x23
    f2b8:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f2bc:	b	ed58 <mpfr_agm@@Base+0x190>
    f2c0:	ldr	x1, [x29, #160]
    f2c4:	cbnz	x1, f350 <mpfr_agm@@Base+0x788>
    f2c8:	ldr	x27, [x20, #16]
    f2cc:	ldr	x22, [x21, #16]
    f2d0:	tbnz	w0, #1, f368 <mpfr_agm@@Base+0x7a0>
    f2d4:	cmp	x22, #0x0
    f2d8:	ccmp	x27, x22, #0x0, le
    f2dc:	b.gt	f3e8 <mpfr_agm@@Base+0x820>
    f2e0:	mov	x0, #0xc000000000000003    	// #-4611686018427387901
    f2e4:	sub	x0, x0, x27
    f2e8:	sub	x0, x0, x22
    f2ec:	add	x1, x0, x0, lsr #63
    f2f0:	asr	x1, x1, #1
    f2f4:	str	x1, [x29, #160]
    f2f8:	cmp	x0, #0x1
    f2fc:	b.le	f400 <mpfr_agm@@Base+0x838>
    f300:	ldr	x0, [x20]
    f304:	str	x0, [x29, #272]
    f308:	ldr	w0, [x20, #8]
    f30c:	str	w0, [x29, #280]
    f310:	ldr	x1, [x29, #160]
    f314:	add	x27, x1, x27
    f318:	str	x27, [x29, #288]
    f31c:	ldr	x0, [x20, #24]
    f320:	str	x0, [x29, #296]
    f324:	ldr	x0, [x21]
    f328:	str	x0, [x29, #240]
    f32c:	ldr	w0, [x21, #8]
    f330:	str	w0, [x29, #248]
    f334:	add	x22, x1, x22
    f338:	str	x22, [x29, #256]
    f33c:	ldr	x0, [x21, #24]
    f340:	str	x0, [x29, #264]
    f344:	add	x20, x29, #0x110
    f348:	add	x21, x29, #0xf0
    f34c:	b	ed78 <mpfr_agm@@Base+0x1b0>
    f350:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f354:	add	x2, x2, #0x18
    f358:	mov	w1, #0x8d                  	// #141
    f35c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f360:	add	x0, x0, #0x10
    f364:	bl	cb40 <mpfr_assert_fail@plt>
    f368:	add	x0, x27, x22
    f36c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    f370:	cmp	x0, x1
    f374:	b.gt	f39c <mpfr_agm@@Base+0x7d4>
    f378:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    f37c:	cmp	x22, x0
    f380:	b.ne	f3b8 <mpfr_agm@@Base+0x7f0>  // b.any
    f384:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    f388:	cmp	x27, x0
    f38c:	b.le	f3d0 <mpfr_agm@@Base+0x808>
    f390:	mov	x0, #0xffffffffffffffff    	// #-1
    f394:	str	x0, [x29, #160]
    f398:	b	f300 <mpfr_agm@@Base+0x738>
    f39c:	mov	x1, #0x2                   	// #2
    f3a0:	movk	x1, #0xc000, lsl #48
    f3a4:	add	x0, x0, x1
    f3a8:	add	x0, x0, x0, lsr #63
    f3ac:	neg	x0, x0, asr #1
    f3b0:	str	x0, [x29, #160]
    f3b4:	b	f300 <mpfr_agm@@Base+0x738>
    f3b8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f3bc:	add	x2, x2, #0x28
    f3c0:	mov	w1, #0xaf                  	// #175
    f3c4:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f3c8:	add	x0, x0, #0x10
    f3cc:	bl	cb40 <mpfr_assert_fail@plt>
    f3d0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f3d4:	add	x2, x2, #0x78
    f3d8:	mov	w1, #0xb3                  	// #179
    f3dc:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f3e0:	add	x0, x0, #0x10
    f3e4:	bl	cb40 <mpfr_assert_fail@plt>
    f3e8:	mov	x2, x26
    f3ec:	mov	w1, #0xc1                  	// #193
    f3f0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f3f4:	add	x0, x0, #0x10
    f3f8:	bl	cb40 <mpfr_assert_fail@plt>
    f3fc:	b	f2e0 <mpfr_agm@@Base+0x718>
    f400:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f404:	add	x2, x2, #0xe0
    f408:	mov	w1, #0xc3                  	// #195
    f40c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f410:	add	x0, x0, #0x10
    f414:	bl	cb40 <mpfr_assert_fail@plt>
    f418:	mov	x0, x23
    f41c:	bl	c070 <mpfr_clear@plt>
    f420:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f424:	ldr	x1, [x0, #2576]
    f428:	add	x0, x0, #0xa10
    f42c:	blr	x1
    f430:	mrs	x1, tpidr_el0
    f434:	add	x2, x1, x0
    f438:	str	x2, [x29, #152]
    f43c:	str	wzr, [x1, x0]
    f440:	mov	w3, #0x0                   	// #0
    f444:	mov	x2, x27
    f448:	mov	x1, x26
    f44c:	ldr	x0, [x29, #168]
    f450:	bl	bd50 <mpfr_mul@plt>
    f454:	ldr	x2, [x29, #152]
    f458:	ldr	w1, [x2]
    f45c:	tbnz	w1, #1, f484 <mpfr_agm@@Base+0x8bc>
    f460:	mov	w2, #0x0                   	// #0
    f464:	ldr	x1, [x29, #168]
    f468:	add	x0, x29, #0x190
    f46c:	bl	c930 <mpfr_sqrt@plt>
    f470:	add	x1, x29, #0x130
    f474:	add	x0, x29, #0x170
    f478:	bl	c4a0 <mpfr_swap@plt>
    f47c:	add	x22, x22, #0x1
    f480:	b	ee2c <mpfr_agm@@Base+0x264>
    f484:	ldr	x3, [x29, #416]
    f488:	ldr	x2, [x29, #384]
    f48c:	add	x0, x3, x2
    f490:	mov	x4, #0x2                   	// #2
    f494:	movk	x4, #0xc000, lsl #48
    f498:	add	x0, x0, x4
    f49c:	add	x0, x0, x0, lsr #63
    f4a0:	neg	x0, x0, asr #1
    f4a4:	add	x3, x3, x0
    f4a8:	str	x3, [x29, #416]
    f4ac:	add	x2, x2, x0
    f4b0:	str	x2, [x29, #384]
    f4b4:	ldr	x2, [x29, #136]
    f4b8:	add	x0, x2, x0
    f4bc:	str	x0, [x29, #136]
    f4c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f4c4:	ldr	x2, [x0, #2576]
    f4c8:	add	x0, x0, #0xa10
    f4cc:	blr	x2
    f4d0:	mov	w2, #0x3d                  	// #61
    f4d4:	and	w1, w1, w2
    f4d8:	mrs	x2, tpidr_el0
    f4dc:	str	w1, [x2, x0]
    f4e0:	b	ee5c <mpfr_agm@@Base+0x294>
    f4e4:	mov	x24, #0x0                   	// #0
    f4e8:	b	ef40 <mpfr_agm@@Base+0x378>
    f4ec:	mov	x24, #0x0                   	// #0
    f4f0:	b	ef40 <mpfr_agm@@Base+0x378>
    f4f4:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f4f8:	add	x2, x2, #0xf0
    f4fc:	mov	w1, #0x117                 	// #279
    f500:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f504:	add	x0, x0, #0x10
    f508:	bl	cb40 <mpfr_assert_fail@plt>
    f50c:	mov	w0, #0x0                   	// #0
    f510:	b	ef6c <mpfr_agm@@Base+0x3a4>
    f514:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f518:	add	x2, x2, #0x108
    f51c:	mov	w1, #0x11a                 	// #282
    f520:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f524:	add	x0, x0, #0x10
    f528:	bl	cb40 <mpfr_assert_fail@plt>
    f52c:	mov	x22, #0x0                   	// #0
    f530:	b	ef94 <mpfr_agm@@Base+0x3cc>
    f534:	mov	x0, #0xfffffffffffffeff    	// #-257
    f538:	movk	x0, #0x7fff, lsl #48
    f53c:	sub	x0, x0, x19
    f540:	ldr	x1, [x29, #120]
    f544:	cmp	x0, x1
    f548:	b.lt	f578 <mpfr_agm@@Base+0x9b0>  // b.tstop
    f54c:	ldr	x0, [x29, #120]
    f550:	add	x19, x19, x0
    f554:	add	x0, x19, x19, lsr #63
    f558:	asr	x0, x0, #1
    f55c:	str	x0, [x29, #120]
    f560:	add	x22, x19, #0x3e
    f564:	subs	x0, x19, #0x1
    f568:	csel	x22, x22, x0, mi  // mi = first
    f56c:	asr	x22, x22, #6
    f570:	add	x22, x22, #0x1
    f574:	b	ecfc <mpfr_agm@@Base+0x134>
    f578:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f57c:	add	x2, x2, #0x118
    f580:	mov	w1, #0x11f                 	// #287
    f584:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f588:	add	x0, x0, #0x10
    f58c:	bl	cb40 <mpfr_assert_fail@plt>
    f590:	tbnz	w0, #1, f604 <mpfr_agm@@Base+0xa3c>
    f594:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f598:	ldr	x1, [x0, #2576]
    f59c:	add	x0, x0, #0xa10
    f5a0:	blr	x1
    f5a4:	mrs	x1, tpidr_el0
    f5a8:	ldr	w0, [x1, x0]
    f5ac:	tbnz	w0, #0, f620 <mpfr_agm@@Base+0xa58>
    f5b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f5b4:	ldr	x1, [x0, #2576]
    f5b8:	add	x0, x0, #0xa10
    f5bc:	blr	x1
    f5c0:	mrs	x1, tpidr_el0
    f5c4:	ldr	w0, [x1, x0]
    f5c8:	tbnz	w0, #5, f63c <mpfr_agm@@Base+0xa74>
    f5cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f5d0:	ldr	x1, [x0, #2576]
    f5d4:	add	x0, x0, #0xa10
    f5d8:	blr	x1
    f5dc:	mrs	x1, tpidr_el0
    f5e0:	ldr	w0, [x1, x0]
    f5e4:	tbz	w0, #2, f018 <mpfr_agm@@Base+0x450>
    f5e8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f5ec:	add	x2, x2, #0x1c0
    f5f0:	mov	w1, #0x12a                 	// #298
    f5f4:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f5f8:	add	x0, x0, #0x10
    f5fc:	bl	cb40 <mpfr_assert_fail@plt>
    f600:	b	f018 <mpfr_agm@@Base+0x450>
    f604:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f608:	add	x2, x2, #0x160
    f60c:	mov	w1, #0x127                 	// #295
    f610:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f614:	add	x0, x0, #0x10
    f618:	bl	cb40 <mpfr_assert_fail@plt>
    f61c:	b	f594 <mpfr_agm@@Base+0x9cc>
    f620:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f624:	add	x2, x2, #0x180
    f628:	mov	w1, #0x128                 	// #296
    f62c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f630:	add	x0, x0, #0x10
    f634:	bl	cb40 <mpfr_assert_fail@plt>
    f638:	b	f5b0 <mpfr_agm@@Base+0x9e8>
    f63c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f640:	add	x2, x2, #0x1a0
    f644:	mov	w1, #0x129                 	// #297
    f648:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
    f64c:	add	x0, x0, #0x10
    f650:	bl	cb40 <mpfr_assert_fail@plt>
    f654:	b	f5cc <mpfr_agm@@Base+0xa04>
    f658:	bl	c410 <mpfr_tmp_free@plt>
    f65c:	b	f050 <mpfr_agm@@Base+0x488>
    f660:	ldr	w2, [x29, #180]
    f664:	mov	w1, w19
    f668:	mov	x0, x25
    f66c:	bl	cb30 <mpfr_check_range@plt>
    f670:	mov	w19, w0
    f674:	b	f0cc <mpfr_agm@@Base+0x504>

000000000000f678 <mpfr_clear@@Base>:
    f678:	stp	x29, x30, [sp, #-32]!
    f67c:	mov	x29, sp
    f680:	str	x19, [sp, #16]
    f684:	mov	x19, x0
    f688:	ldr	x0, [x0, #24]
    f68c:	ldr	x1, [x0, #-8]!
    f690:	add	x1, x1, #0x1
    f694:	lsl	x1, x1, #3
    f698:	bl	cc20 <mpfr_free_func@plt>
    f69c:	str	xzr, [x19, #24]
    f6a0:	ldr	x19, [sp, #16]
    f6a4:	ldp	x29, x30, [sp], #32
    f6a8:	ret

000000000000f6ac <mpfr_cmp3@@Base>:
    f6ac:	mov	x5, x0
    f6b0:	ldr	w0, [x1, #8]
    f6b4:	mul	w2, w2, w0
    f6b8:	ldr	x3, [x5, #16]
    f6bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    f6c0:	cmp	x3, x0
    f6c4:	b.le	f760 <mpfr_cmp3@@Base+0xb4>
    f6c8:	ldr	x4, [x1, #16]
    f6cc:	cmp	x4, x0
    f6d0:	b.le	f84c <mpfr_cmp3@@Base+0x1a0>
    f6d4:	ldr	w0, [x5, #8]
    f6d8:	cmp	w0, w2
    f6dc:	b.ne	f880 <mpfr_cmp3@@Base+0x1d4>  // b.any
    f6e0:	mov	w0, w2
    f6e4:	cmp	x3, x4
    f6e8:	b.gt	f880 <mpfr_cmp3@@Base+0x1d4>
    f6ec:	b.lt	f7fc <mpfr_cmp3@@Base+0x150>  // b.tstop
    f6f0:	ldr	x0, [x5]
    f6f4:	add	x3, x0, #0x3e
    f6f8:	subs	x0, x0, #0x1
    f6fc:	csel	x3, x3, x0, mi  // mi = first
    f700:	asr	x3, x3, #6
    f704:	ldr	x0, [x1]
    f708:	add	x4, x0, #0x3e
    f70c:	subs	x0, x0, #0x1
    f710:	csel	x4, x4, x0, mi  // mi = first
    f714:	asr	x4, x4, #6
    f718:	ldr	x5, [x5, #24]
    f71c:	ldr	x6, [x1, #24]
    f720:	ldr	x1, [x5, x3, lsl #3]
    f724:	ldr	x0, [x6, x4, lsl #3]
    f728:	cmp	x1, x0
    f72c:	b.hi	f834 <mpfr_cmp3@@Base+0x188>  // b.pmore
    f730:	b.cc	f804 <mpfr_cmp3@@Base+0x158>  // b.lo, b.ul, b.last
    f734:	sub	x4, x4, #0x1
    f738:	subs	x3, x3, #0x1
    f73c:	ccmp	x4, #0x0, #0x1, pl  // pl = nfrst
    f740:	b.ge	f720 <mpfr_cmp3@@Base+0x74>  // b.tcont
    f744:	tbnz	x3, #63, f80c <mpfr_cmp3@@Base+0x160>
    f748:	ldr	x0, [x5, x3, lsl #3]
    f74c:	cbnz	x0, f83c <mpfr_cmp3@@Base+0x190>
    f750:	sub	x3, x3, #0x1
    f754:	cmn	x3, #0x1
    f758:	b.ne	f748 <mpfr_cmp3@@Base+0x9c>  // b.any
    f75c:	ret
    f760:	mov	x0, #0x2                   	// #2
    f764:	movk	x0, #0x8000, lsl #48
    f768:	cmp	x3, x0
    f76c:	b.eq	f7b0 <mpfr_cmp3@@Base+0x104>  // b.none
    f770:	ldr	x0, [x1, #16]
    f774:	mov	x1, #0x2                   	// #2
    f778:	movk	x1, #0x8000, lsl #48
    f77c:	cmp	x0, x1
    f780:	b.eq	f7b0 <mpfr_cmp3@@Base+0x104>  // b.none
    f784:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    f788:	cmp	x3, x1
    f78c:	b.ne	f860 <mpfr_cmp3@@Base+0x1b4>  // b.any
    f790:	cmp	x0, x1
    f794:	b.ne	f7a8 <mpfr_cmp3@@Base+0xfc>  // b.any
    f798:	ldr	w1, [x5, #8]
    f79c:	mov	w0, #0x0                   	// #0
    f7a0:	cmp	w1, w2
    f7a4:	b.eq	f880 <mpfr_cmp3@@Base+0x1d4>  // b.none
    f7a8:	ldr	w0, [x5, #8]
    f7ac:	ret
    f7b0:	stp	x29, x30, [sp, #-16]!
    f7b4:	mov	x29, sp
    f7b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f7bc:	ldr	x1, [x0, #2576]
    f7c0:	add	x0, x0, #0xa10
    f7c4:	blr	x1
    f7c8:	mrs	x1, tpidr_el0
    f7cc:	add	x0, x1, x0
    f7d0:	ldr	w1, [x0]
    f7d4:	orr	w1, w1, #0x10
    f7d8:	str	w1, [x0]
    f7dc:	mov	w0, #0x0                   	// #0
    f7e0:	ldp	x29, x30, [sp], #16
    f7e4:	ret
    f7e8:	neg	w0, w2
    f7ec:	ret
    f7f0:	cmp	x0, x1
    f7f4:	csneg	w0, wzr, w2, eq  // eq = none
    f7f8:	ret
    f7fc:	neg	w0, w2
    f800:	ret
    f804:	neg	w0, w2
    f808:	ret
    f80c:	tbnz	x4, #63, f844 <mpfr_cmp3@@Base+0x198>
    f810:	ldr	x0, [x6, x4, lsl #3]
    f814:	cbnz	x0, f82c <mpfr_cmp3@@Base+0x180>
    f818:	sub	x4, x4, #0x1
    f81c:	cmn	x4, #0x1
    f820:	b.ne	f810 <mpfr_cmp3@@Base+0x164>  // b.any
    f824:	mov	w0, #0x0                   	// #0
    f828:	ret
    f82c:	neg	w0, w2
    f830:	ret
    f834:	mov	w0, w2
    f838:	ret
    f83c:	mov	w0, w2
    f840:	ret
    f844:	mov	w0, #0x0                   	// #0
    f848:	ret
    f84c:	ldr	x0, [x1, #16]
    f850:	mov	x1, #0x2                   	// #2
    f854:	movk	x1, #0x8000, lsl #48
    f858:	cmp	x0, x1
    f85c:	b.eq	f7b0 <mpfr_cmp3@@Base+0x104>  // b.none
    f860:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    f864:	cmp	x0, x1
    f868:	b.eq	f7e8 <mpfr_cmp3@@Base+0x13c>  // b.none
    f86c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    f870:	cmp	x3, x1
    f874:	b.eq	f7f0 <mpfr_cmp3@@Base+0x144>  // b.none
    f878:	ldr	w0, [x5, #8]
    f87c:	ret
    f880:	ret

000000000000f884 <mpfr_cmp@@Base>:
    f884:	stp	x29, x30, [sp, #-16]!
    f888:	mov	x29, sp
    f88c:	mov	w2, #0x1                   	// #1
    f890:	bl	c9a0 <mpfr_cmp3@plt>
    f894:	ldp	x29, x30, [sp], #16
    f898:	ret

000000000000f89c <mpfr_cmpabs@@Base>:
    f89c:	mov	x4, x0
    f8a0:	ldr	x2, [x0, #16]
    f8a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    f8a8:	cmp	x2, x0
    f8ac:	b.le	f940 <mpfr_cmpabs@@Base+0xa4>
    f8b0:	ldr	x3, [x1, #16]
    f8b4:	cmp	x3, x0
    f8b8:	b.le	f9fc <mpfr_cmpabs@@Base+0x160>
    f8bc:	mov	w0, #0x1                   	// #1
    f8c0:	cmp	x2, x3
    f8c4:	b.gt	fa20 <mpfr_cmpabs@@Base+0x184>
    f8c8:	mov	w0, #0xffffffff            	// #-1
    f8cc:	b.lt	fa20 <mpfr_cmpabs@@Base+0x184>  // b.tstop
    f8d0:	ldr	x0, [x4]
    f8d4:	add	x2, x0, #0x3e
    f8d8:	subs	x0, x0, #0x1
    f8dc:	csel	x2, x2, x0, mi  // mi = first
    f8e0:	asr	x2, x2, #6
    f8e4:	ldr	x0, [x1]
    f8e8:	add	x3, x0, #0x3e
    f8ec:	subs	x0, x0, #0x1
    f8f0:	csel	x3, x3, x0, mi  // mi = first
    f8f4:	asr	x3, x3, #6
    f8f8:	ldr	x4, [x4, #24]
    f8fc:	ldr	x5, [x1, #24]
    f900:	ldr	x1, [x4, x2, lsl #3]
    f904:	ldr	x0, [x5, x3, lsl #3]
    f908:	cmp	x1, x0
    f90c:	b.hi	f9d4 <mpfr_cmpabs@@Base+0x138>  // b.pmore
    f910:	b.cc	f9dc <mpfr_cmpabs@@Base+0x140>  // b.lo, b.ul, b.last
    f914:	sub	x3, x3, #0x1
    f918:	subs	x2, x2, #0x1
    f91c:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
    f920:	b.ge	f900 <mpfr_cmpabs@@Base+0x64>  // b.tcont
    f924:	tbnz	x2, #63, f9b8 <mpfr_cmpabs@@Base+0x11c>
    f928:	ldr	x0, [x4, x2, lsl #3]
    f92c:	cbnz	x0, f9e4 <mpfr_cmpabs@@Base+0x148>
    f930:	sub	x2, x2, #0x1
    f934:	cmn	x2, #0x1
    f938:	b.ne	f928 <mpfr_cmpabs@@Base+0x8c>  // b.any
    f93c:	ret
    f940:	mov	x0, #0x2                   	// #2
    f944:	movk	x0, #0x8000, lsl #48
    f948:	cmp	x2, x0
    f94c:	b.eq	f974 <mpfr_cmpabs@@Base+0xd8>  // b.none
    f950:	ldr	x1, [x1, #16]
    f954:	cmp	x1, x0
    f958:	b.eq	f974 <mpfr_cmpabs@@Base+0xd8>  // b.none
    f95c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    f960:	cmp	x2, x0
    f964:	b.ne	fa10 <mpfr_cmpabs@@Base+0x174>  // b.any
    f968:	cmp	x1, x0
    f96c:	cset	w0, ne  // ne = any
    f970:	ret
    f974:	stp	x29, x30, [sp, #-16]!
    f978:	mov	x29, sp
    f97c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    f980:	ldr	x1, [x0, #2576]
    f984:	add	x0, x0, #0xa10
    f988:	blr	x1
    f98c:	mrs	x1, tpidr_el0
    f990:	add	x0, x1, x0
    f994:	ldr	w1, [x0]
    f998:	orr	w1, w1, #0x10
    f99c:	str	w1, [x0]
    f9a0:	mov	w0, #0x0                   	// #0
    f9a4:	ldp	x29, x30, [sp], #16
    f9a8:	ret
    f9ac:	cmp	x2, x3
    f9b0:	cset	w0, ne  // ne = any
    f9b4:	ret
    f9b8:	tbnz	x3, #63, f9ec <mpfr_cmpabs@@Base+0x150>
    f9bc:	ldr	x0, [x5, x3, lsl #3]
    f9c0:	cbnz	x0, f9f4 <mpfr_cmpabs@@Base+0x158>
    f9c4:	sub	x3, x3, #0x1
    f9c8:	cmn	x3, #0x1
    f9cc:	b.ne	f9bc <mpfr_cmpabs@@Base+0x120>  // b.any
    f9d0:	ret
    f9d4:	mov	w0, #0x1                   	// #1
    f9d8:	ret
    f9dc:	mov	w0, #0xffffffff            	// #-1
    f9e0:	ret
    f9e4:	mov	w0, #0x1                   	// #1
    f9e8:	ret
    f9ec:	mov	w0, #0x0                   	// #0
    f9f0:	ret
    f9f4:	mov	w0, #0xffffffff            	// #-1
    f9f8:	ret
    f9fc:	ldr	x1, [x1, #16]
    fa00:	mov	x0, #0x2                   	// #2
    fa04:	movk	x0, #0x8000, lsl #48
    fa08:	cmp	x1, x0
    fa0c:	b.eq	f974 <mpfr_cmpabs@@Base+0xd8>  // b.none
    fa10:	mov	w0, #0xffffffff            	// #-1
    fa14:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    fa18:	cmp	x1, x3
    fa1c:	b.eq	f9ac <mpfr_cmpabs@@Base+0x110>  // b.none
    fa20:	ret

000000000000fa24 <mpfr_cmp_si_2exp@@Base>:
    fa24:	mov	x4, x0
    fa28:	mov	w3, #0x1                   	// #1
    fa2c:	cmp	x1, #0x0
    fa30:	cneg	w3, w3, lt  // lt = tstop
    fa34:	ldr	x5, [x0, #16]
    fa38:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    fa3c:	cmp	x5, x0
    fa40:	b.le	fa58 <mpfr_cmp_si_2exp@@Base+0x34>
    fa44:	ldr	w0, [x4, #8]
    fa48:	cmp	x1, #0x0
    fa4c:	ccmp	w0, w3, #0x0, ne  // ne = any
    fa50:	b.eq	fab4 <mpfr_cmp_si_2exp@@Base+0x90>  // b.none
    fa54:	ret
    fa58:	b.eq	faa0 <mpfr_cmp_si_2exp@@Base+0x7c>  // b.none
    fa5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    fa60:	cmp	x5, x0
    fa64:	b.eq	faa8 <mpfr_cmp_si_2exp@@Base+0x84>  // b.none
    fa68:	stp	x29, x30, [sp, #-16]!
    fa6c:	mov	x29, sp
    fa70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    fa74:	ldr	x1, [x0, #2576]
    fa78:	add	x0, x0, #0xa10
    fa7c:	blr	x1
    fa80:	mrs	x1, tpidr_el0
    fa84:	add	x0, x1, x0
    fa88:	ldr	w1, [x0]
    fa8c:	orr	w1, w1, #0x10
    fa90:	str	w1, [x0]
    fa94:	mov	w0, #0x0                   	// #0
    fa98:	ldp	x29, x30, [sp], #16
    fa9c:	ret
    faa0:	ldr	w0, [x4, #8]
    faa4:	ret
    faa8:	cmp	x1, #0x0
    faac:	csneg	w0, wzr, w3, eq  // eq = none
    fab0:	ret
    fab4:	cmp	x1, #0x0
    fab8:	cneg	x1, x1, lt  // lt = tstop
    fabc:	cmp	x5, x2
    fac0:	b.le	fb50 <mpfr_cmp_si_2exp@@Base+0x12c>
    fac4:	mov	x0, #0xffffffffffffffbe    	// #-66
    fac8:	movk	x0, #0x3fff, lsl #48
    facc:	cmp	x2, x0
    fad0:	b.gt	fae4 <mpfr_cmp_si_2exp@@Base+0xc0>
    fad4:	add	x6, x2, #0x40
    fad8:	mov	w0, w3
    fadc:	cmp	x5, x6
    fae0:	b.gt	fa54 <mpfr_cmp_si_2exp@@Base+0x30>
    fae4:	clz	x6, x1
    fae8:	sub	w2, w5, w2
    faec:	mov	w5, #0x40                  	// #64
    faf0:	sub	w5, w5, w6
    faf4:	mov	w0, w3
    faf8:	cmp	w2, w5
    fafc:	b.gt	fa54 <mpfr_cmp_si_2exp@@Base+0x30>
    fb00:	b.lt	fb58 <mpfr_cmp_si_2exp@@Base+0x134>  // b.tstop
    fb04:	lsl	x1, x1, x6
    fb08:	ldr	x0, [x4]
    fb0c:	add	x2, x0, #0x3e
    fb10:	subs	x0, x0, #0x1
    fb14:	csel	x2, x2, x0, mi  // mi = first
    fb18:	asr	x2, x2, #6
    fb1c:	ldr	x4, [x4, #24]
    fb20:	ldr	x5, [x4, x2, lsl #3]
    fb24:	mov	w0, w3
    fb28:	cmp	x5, x1
    fb2c:	b.hi	fa54 <mpfr_cmp_si_2exp@@Base+0x30>  // b.pmore
    fb30:	b.cc	fb60 <mpfr_cmp_si_2exp@@Base+0x13c>  // b.lo, b.ul, b.last
    fb34:	cmp	x2, #0x0
    fb38:	b.le	fb68 <mpfr_cmp_si_2exp@@Base+0x144>
    fb3c:	sub	x2, x2, #0x1
    fb40:	ldr	x0, [x4, x2, lsl #3]
    fb44:	cbz	x0, fb34 <mpfr_cmp_si_2exp@@Base+0x110>
    fb48:	mov	w0, w3
    fb4c:	ret
    fb50:	neg	w0, w3
    fb54:	ret
    fb58:	neg	w0, w3
    fb5c:	ret
    fb60:	neg	w0, w3
    fb64:	ret
    fb68:	mov	w0, #0x0                   	// #0
    fb6c:	ret

000000000000fb70 <mpfr_cmp_si@@Base>:
    fb70:	stp	x29, x30, [sp, #-16]!
    fb74:	mov	x29, sp
    fb78:	mov	x2, #0x0                   	// #0
    fb7c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
    fb80:	ldp	x29, x30, [sp], #16
    fb84:	ret

000000000000fb88 <mpfr_cmp_ui_2exp@@Base>:
    fb88:	mov	x4, x0
    fb8c:	ldr	x3, [x0, #16]
    fb90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    fb94:	cmp	x3, x0
    fb98:	b.le	fc3c <mpfr_cmp_ui_2exp@@Base+0xb4>
    fb9c:	ldr	w0, [x4, #8]
    fba0:	tbnz	w0, #31, fcac <mpfr_cmp_ui_2exp@@Base+0x124>
    fba4:	cbz	x1, fcb4 <mpfr_cmp_ui_2exp@@Base+0x12c>
    fba8:	cmp	x3, x2
    fbac:	b.le	fcbc <mpfr_cmp_ui_2exp@@Base+0x134>
    fbb0:	mov	x0, #0xffffffffffffffbe    	// #-66
    fbb4:	movk	x0, #0x3fff, lsl #48
    fbb8:	cmp	x2, x0
    fbbc:	b.gt	fbd0 <mpfr_cmp_ui_2exp@@Base+0x48>
    fbc0:	add	x5, x2, #0x40
    fbc4:	mov	w0, #0x1                   	// #1
    fbc8:	cmp	x3, x5
    fbcc:	b.gt	fc60 <mpfr_cmp_ui_2exp@@Base+0xd8>
    fbd0:	clz	x6, x1
    fbd4:	sub	w3, w3, w2
    fbd8:	mov	w5, #0x40                  	// #64
    fbdc:	sub	w5, w5, w6
    fbe0:	mov	w0, #0x1                   	// #1
    fbe4:	cmp	w3, w5
    fbe8:	b.gt	fc60 <mpfr_cmp_ui_2exp@@Base+0xd8>
    fbec:	b.lt	fcc4 <mpfr_cmp_ui_2exp@@Base+0x13c>  // b.tstop
    fbf0:	lsl	x2, x1, x6
    fbf4:	ldr	x0, [x4]
    fbf8:	add	x1, x0, #0x3e
    fbfc:	subs	x0, x0, #0x1
    fc00:	csel	x1, x1, x0, mi  // mi = first
    fc04:	asr	x1, x1, #6
    fc08:	ldr	x3, [x4, #24]
    fc0c:	ldr	x4, [x3, x1, lsl #3]
    fc10:	mov	w0, #0x1                   	// #1
    fc14:	cmp	x4, x2
    fc18:	b.hi	fc60 <mpfr_cmp_ui_2exp@@Base+0xd8>  // b.pmore
    fc1c:	b.cc	fccc <mpfr_cmp_ui_2exp@@Base+0x144>  // b.lo, b.ul, b.last
    fc20:	cmp	x1, #0x0
    fc24:	b.le	fca4 <mpfr_cmp_ui_2exp@@Base+0x11c>
    fc28:	sub	x1, x1, #0x1
    fc2c:	ldr	x0, [x3, x1, lsl #3]
    fc30:	cbz	x0, fc20 <mpfr_cmp_ui_2exp@@Base+0x98>
    fc34:	mov	w0, #0x1                   	// #1
    fc38:	ret
    fc3c:	mov	x0, #0x2                   	// #2
    fc40:	movk	x0, #0x8000, lsl #48
    fc44:	cmp	x3, x0
    fc48:	b.eq	fc64 <mpfr_cmp_ui_2exp@@Base+0xdc>  // b.none
    fc4c:	cmp	x1, #0x0
    fc50:	csetm	w0, ne  // ne = any
    fc54:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    fc58:	cmp	x3, x1
    fc5c:	b.eq	fc9c <mpfr_cmp_ui_2exp@@Base+0x114>  // b.none
    fc60:	ret
    fc64:	stp	x29, x30, [sp, #-16]!
    fc68:	mov	x29, sp
    fc6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
    fc70:	ldr	x1, [x0, #2576]
    fc74:	add	x0, x0, #0xa10
    fc78:	blr	x1
    fc7c:	mrs	x1, tpidr_el0
    fc80:	add	x0, x1, x0
    fc84:	ldr	w1, [x0]
    fc88:	orr	w1, w1, #0x10
    fc8c:	str	w1, [x0]
    fc90:	mov	w0, #0x0                   	// #0
    fc94:	ldp	x29, x30, [sp], #16
    fc98:	ret
    fc9c:	ldr	w0, [x4, #8]
    fca0:	ret
    fca4:	mov	w0, #0x0                   	// #0
    fca8:	ret
    fcac:	mov	w0, #0xffffffff            	// #-1
    fcb0:	ret
    fcb4:	mov	w0, #0x1                   	// #1
    fcb8:	ret
    fcbc:	mov	w0, #0xffffffff            	// #-1
    fcc0:	ret
    fcc4:	mov	w0, #0xffffffff            	// #-1
    fcc8:	ret
    fccc:	mov	w0, #0xffffffff            	// #-1
    fcd0:	ret

000000000000fcd4 <mpfr_cmp_ui@@Base>:
    fcd4:	stp	x29, x30, [sp, #-16]!
    fcd8:	mov	x29, sp
    fcdc:	mov	x2, #0x0                   	// #0
    fce0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
    fce4:	ldp	x29, x30, [sp], #16
    fce8:	ret

000000000000fcec <mpfr_greater_p@@Base>:
    fcec:	mov	x3, x0
    fcf0:	ldr	x2, [x0, #16]
    fcf4:	mov	x0, #0x2                   	// #2
    fcf8:	movk	x0, #0x8000, lsl #48
    fcfc:	cmp	x2, x0
    fd00:	b.eq	fd44 <mpfr_greater_p@@Base+0x58>  // b.none
    fd04:	ldr	x4, [x1, #16]
    fd08:	mov	w0, #0x0                   	// #0
    fd0c:	mov	x2, #0x2                   	// #2
    fd10:	movk	x2, #0x8000, lsl #48
    fd14:	cmp	x4, x2
    fd18:	b.ne	fd20 <mpfr_greater_p@@Base+0x34>  // b.any
    fd1c:	ret
    fd20:	stp	x29, x30, [sp, #-16]!
    fd24:	mov	x29, sp
    fd28:	mov	w2, #0x1                   	// #1
    fd2c:	mov	x0, x3
    fd30:	bl	c9a0 <mpfr_cmp3@plt>
    fd34:	cmp	w0, #0x0
    fd38:	cset	w0, gt
    fd3c:	ldp	x29, x30, [sp], #16
    fd40:	ret
    fd44:	mov	w0, #0x0                   	// #0
    fd48:	ret

000000000000fd4c <mpfr_greaterequal_p@@Base>:
    fd4c:	mov	x3, x0
    fd50:	ldr	x2, [x0, #16]
    fd54:	mov	x0, #0x2                   	// #2
    fd58:	movk	x0, #0x8000, lsl #48
    fd5c:	cmp	x2, x0
    fd60:	b.eq	fda4 <mpfr_greaterequal_p@@Base+0x58>  // b.none
    fd64:	ldr	x4, [x1, #16]
    fd68:	mov	w0, #0x0                   	// #0
    fd6c:	mov	x2, #0x2                   	// #2
    fd70:	movk	x2, #0x8000, lsl #48
    fd74:	cmp	x4, x2
    fd78:	b.ne	fd80 <mpfr_greaterequal_p@@Base+0x34>  // b.any
    fd7c:	ret
    fd80:	stp	x29, x30, [sp, #-16]!
    fd84:	mov	x29, sp
    fd88:	mov	w2, #0x1                   	// #1
    fd8c:	mov	x0, x3
    fd90:	bl	c9a0 <mpfr_cmp3@plt>
    fd94:	mvn	w0, w0
    fd98:	lsr	w0, w0, #31
    fd9c:	ldp	x29, x30, [sp], #16
    fda0:	ret
    fda4:	mov	w0, #0x0                   	// #0
    fda8:	ret

000000000000fdac <mpfr_less_p@@Base>:
    fdac:	mov	x3, x0
    fdb0:	ldr	x2, [x0, #16]
    fdb4:	mov	x0, #0x2                   	// #2
    fdb8:	movk	x0, #0x8000, lsl #48
    fdbc:	cmp	x2, x0
    fdc0:	b.eq	fe00 <mpfr_less_p@@Base+0x54>  // b.none
    fdc4:	ldr	x4, [x1, #16]
    fdc8:	mov	w0, #0x0                   	// #0
    fdcc:	mov	x2, #0x2                   	// #2
    fdd0:	movk	x2, #0x8000, lsl #48
    fdd4:	cmp	x4, x2
    fdd8:	b.ne	fde0 <mpfr_less_p@@Base+0x34>  // b.any
    fddc:	ret
    fde0:	stp	x29, x30, [sp, #-16]!
    fde4:	mov	x29, sp
    fde8:	mov	w2, #0x1                   	// #1
    fdec:	mov	x0, x3
    fdf0:	bl	c9a0 <mpfr_cmp3@plt>
    fdf4:	lsr	w0, w0, #31
    fdf8:	ldp	x29, x30, [sp], #16
    fdfc:	ret
    fe00:	mov	w0, #0x0                   	// #0
    fe04:	ret

000000000000fe08 <mpfr_lessequal_p@@Base>:
    fe08:	mov	x3, x0
    fe0c:	ldr	x2, [x0, #16]
    fe10:	mov	x0, #0x2                   	// #2
    fe14:	movk	x0, #0x8000, lsl #48
    fe18:	cmp	x2, x0
    fe1c:	b.eq	fe60 <mpfr_lessequal_p@@Base+0x58>  // b.none
    fe20:	ldr	x4, [x1, #16]
    fe24:	mov	w0, #0x0                   	// #0
    fe28:	mov	x2, #0x2                   	// #2
    fe2c:	movk	x2, #0x8000, lsl #48
    fe30:	cmp	x4, x2
    fe34:	b.ne	fe3c <mpfr_lessequal_p@@Base+0x34>  // b.any
    fe38:	ret
    fe3c:	stp	x29, x30, [sp, #-16]!
    fe40:	mov	x29, sp
    fe44:	mov	w2, #0x1                   	// #1
    fe48:	mov	x0, x3
    fe4c:	bl	c9a0 <mpfr_cmp3@plt>
    fe50:	cmp	w0, #0x0
    fe54:	cset	w0, le
    fe58:	ldp	x29, x30, [sp], #16
    fe5c:	ret
    fe60:	mov	w0, #0x0                   	// #0
    fe64:	ret

000000000000fe68 <mpfr_lessgreater_p@@Base>:
    fe68:	mov	x3, x0
    fe6c:	ldr	x2, [x0, #16]
    fe70:	mov	x0, #0x2                   	// #2
    fe74:	movk	x0, #0x8000, lsl #48
    fe78:	cmp	x2, x0
    fe7c:	b.eq	fec0 <mpfr_lessgreater_p@@Base+0x58>  // b.none
    fe80:	ldr	x4, [x1, #16]
    fe84:	mov	w0, #0x0                   	// #0
    fe88:	mov	x2, #0x2                   	// #2
    fe8c:	movk	x2, #0x8000, lsl #48
    fe90:	cmp	x4, x2
    fe94:	b.ne	fe9c <mpfr_lessgreater_p@@Base+0x34>  // b.any
    fe98:	ret
    fe9c:	stp	x29, x30, [sp, #-16]!
    fea0:	mov	x29, sp
    fea4:	mov	w2, #0x1                   	// #1
    fea8:	mov	x0, x3
    feac:	bl	c9a0 <mpfr_cmp3@plt>
    feb0:	cmp	w0, #0x0
    feb4:	cset	w0, ne  // ne = any
    feb8:	ldp	x29, x30, [sp], #16
    febc:	ret
    fec0:	mov	w0, #0x0                   	// #0
    fec4:	ret

000000000000fec8 <mpfr_equal_p@@Base>:
    fec8:	mov	x3, x0
    fecc:	ldr	x2, [x0, #16]
    fed0:	mov	x0, #0x2                   	// #2
    fed4:	movk	x0, #0x8000, lsl #48
    fed8:	cmp	x2, x0
    fedc:	b.eq	ff20 <mpfr_equal_p@@Base+0x58>  // b.none
    fee0:	ldr	x4, [x1, #16]
    fee4:	mov	w0, #0x0                   	// #0
    fee8:	mov	x2, #0x2                   	// #2
    feec:	movk	x2, #0x8000, lsl #48
    fef0:	cmp	x4, x2
    fef4:	b.ne	fefc <mpfr_equal_p@@Base+0x34>  // b.any
    fef8:	ret
    fefc:	stp	x29, x30, [sp, #-16]!
    ff00:	mov	x29, sp
    ff04:	mov	w2, #0x1                   	// #1
    ff08:	mov	x0, x3
    ff0c:	bl	c9a0 <mpfr_cmp3@plt>
    ff10:	cmp	w0, #0x0
    ff14:	cset	w0, eq  // eq = none
    ff18:	ldp	x29, x30, [sp], #16
    ff1c:	ret
    ff20:	mov	w0, #0x0                   	// #0
    ff24:	ret

000000000000ff28 <mpfr_unordered_p@@Base>:
    ff28:	ldr	x2, [x0, #16]
    ff2c:	mov	x0, #0x2                   	// #2
    ff30:	movk	x0, #0x8000, lsl #48
    ff34:	cmp	x2, x0
    ff38:	b.eq	ff4c <mpfr_unordered_p@@Base+0x24>  // b.none
    ff3c:	ldr	x1, [x1, #16]
    ff40:	cmp	x1, x0
    ff44:	cset	w0, eq  // eq = none
    ff48:	ret
    ff4c:	mov	w0, #0x1                   	// #1
    ff50:	b	ff48 <mpfr_unordered_p@@Base+0x20>

000000000000ff54 <mpfr_div_2exp@@Base>:
    ff54:	stp	x29, x30, [sp, #-16]!
    ff58:	mov	x29, sp
    ff5c:	bl	c8f0 <mpfr_div_2ui@plt>
    ff60:	ldp	x29, x30, [sp], #16
    ff64:	ret

000000000000ff68 <mpfr_div_2si@@Base>:
    ff68:	stp	x29, x30, [sp, #-80]!
    ff6c:	mov	x29, sp
    ff70:	stp	x19, x20, [sp, #16]
    ff74:	stp	x21, x22, [sp, #32]
    ff78:	stp	x23, x24, [sp, #48]
    ff7c:	mov	x19, x0
    ff80:	mov	w23, w3
    ff84:	ldr	x22, [x1, #16]
    ff88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    ff8c:	cmp	x22, x0
    ff90:	b.le	10120 <mpfr_div_2si@@Base+0x1b8>
    ff94:	mov	x20, x2
    ff98:	mov	w21, #0x0                   	// #0
    ff9c:	cmp	x1, x19
    ffa0:	b.eq	1009c <mpfr_div_2si@@Base+0x134>  // b.none
    ffa4:	ldr	w21, [x1, #8]
    ffa8:	str	w21, [x19, #8]
    ffac:	ldr	x0, [x19]
    ffb0:	ldr	x2, [x1]
    ffb4:	cmp	x0, x2
    ffb8:	b.eq	10138 <mpfr_div_2si@@Base+0x1d0>  // b.none
    ffbc:	ldr	x24, [x19, #24]
    ffc0:	b.ge	1016c <mpfr_div_2si@@Base+0x204>  // b.tcont
    ffc4:	str	x25, [sp, #64]
    ffc8:	add	x4, x2, #0x3e
    ffcc:	subs	x2, x2, #0x1
    ffd0:	csel	x4, x4, x2, mi  // mi = first
    ffd4:	asr	x4, x4, #6
    ffd8:	add	x6, x0, #0x3e
    ffdc:	subs	x2, x0, #0x1
    ffe0:	csel	x6, x6, x2, mi  // mi = first
    ffe4:	asr	x6, x6, #6
    ffe8:	add	x2, x6, #0x1
    ffec:	neg	w0, w0
    fff0:	sub	x8, x4, x6
    fff4:	ldr	x9, [x1, #24]
    fff8:	add	x1, x9, x8, lsl #3
    fffc:	ands	w0, w0, #0x3f
   10000:	b.eq	101c8 <mpfr_div_2si@@Base+0x260>  // b.none
   10004:	sub	w5, w0, #0x1
   10008:	mov	x0, #0x1                   	// #1
   1000c:	lsl	x0, x0, x5
   10010:	ldr	x3, [x9, x8, lsl #3]
   10014:	and	x7, x3, x0
   10018:	sub	x0, x0, #0x1
   1001c:	and	x3, x0, x3
   10020:	cmp	w23, #0x0
   10024:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   10028:	b.ne	10050 <mpfr_div_2si@@Base+0xe8>  // b.any
   1002c:	subs	x4, x4, x6
   10030:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   10034:	b.ne	10050 <mpfr_div_2si@@Base+0xe8>  // b.any
   10038:	mvn	x0, x4
   1003c:	add	x0, x1, x0, lsl #3
   10040:	ldr	x3, [x0, x4, lsl #3]
   10044:	subs	x4, x4, #0x1
   10048:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   1004c:	b.eq	10040 <mpfr_div_2si@@Base+0xd8>  // b.none
   10050:	mov	x25, #0x2                   	// #2
   10054:	lsl	x25, x25, x5
   10058:	cmp	w23, #0x5
   1005c:	b.eq	10218 <mpfr_div_2si@@Base+0x2b0>  // b.none
   10060:	cbnz	w23, 1037c <mpfr_div_2si@@Base+0x414>
   10064:	cbnz	x7, 10234 <mpfr_div_2si@@Base+0x2cc>
   10068:	orr	x3, x7, x3
   1006c:	cmp	x3, #0x0
   10070:	csneg	w21, wzr, w21, eq  // eq = none
   10074:	cmp	x24, x1
   10078:	b.eq	10088 <mpfr_div_2si@@Base+0x120>  // b.none
   1007c:	lsl	x2, x2, #3
   10080:	mov	x0, x24
   10084:	bl	ba10 <memcpy@plt>
   10088:	neg	x5, x25
   1008c:	ldr	x1, [x24]
   10090:	and	x5, x1, x5
   10094:	str	x5, [x24]
   10098:	ldr	x25, [sp, #64]
   1009c:	cmp	x20, #0x0
   100a0:	b.gt	1029c <mpfr_div_2si@@Base+0x334>
   100a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   100a8:	ldr	x1, [x0, #2544]
   100ac:	add	x0, x0, #0x9f0
   100b0:	blr	x1
   100b4:	mrs	x1, tpidr_el0
   100b8:	ldr	x0, [x1, x0]
   100bc:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   100c0:	sub	x1, x1, x20
   100c4:	cmp	x1, x0
   100c8:	b.gt	10344 <mpfr_div_2si@@Base+0x3dc>
   100cc:	add	x0, x0, x20
   100d0:	cmp	x0, x22
   100d4:	b.lt	10344 <mpfr_div_2si@@Base+0x3dc>  // b.tstop
   100d8:	sub	x20, x22, x20
   100dc:	str	x20, [x19, #16]
   100e0:	cbz	w21, 10108 <mpfr_div_2si@@Base+0x1a0>
   100e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   100e8:	ldr	x1, [x0, #2576]
   100ec:	add	x0, x0, #0xa10
   100f0:	blr	x1
   100f4:	mrs	x1, tpidr_el0
   100f8:	add	x0, x1, x0
   100fc:	ldr	w1, [x0]
   10100:	orr	w1, w1, #0x8
   10104:	str	w1, [x0]
   10108:	mov	w0, w21
   1010c:	ldp	x19, x20, [sp, #16]
   10110:	ldp	x21, x22, [sp, #32]
   10114:	ldp	x23, x24, [sp, #48]
   10118:	ldp	x29, x30, [sp], #80
   1011c:	ret
   10120:	ldr	w3, [x1, #8]
   10124:	mov	w2, w23
   10128:	mov	x0, x19
   1012c:	bl	c6a0 <mpfr_set4@plt>
   10130:	mov	w21, w0
   10134:	b	10108 <mpfr_div_2si@@Base+0x1a0>
   10138:	ldr	x0, [x19, #24]
   1013c:	ldr	x1, [x1, #24]
   10140:	mov	w21, #0x0                   	// #0
   10144:	cmp	x0, x1
   10148:	b.eq	1009c <mpfr_div_2si@@Base+0x134>  // b.none
   1014c:	add	x3, x2, #0x3e
   10150:	subs	x2, x2, #0x1
   10154:	csel	x2, x3, x2, mi  // mi = first
   10158:	asr	x2, x2, #6
   1015c:	add	x2, x2, #0x1
   10160:	lsl	x2, x2, #3
   10164:	bl	ba10 <memcpy@plt>
   10168:	b	1009c <mpfr_div_2si@@Base+0x134>
   1016c:	add	x3, x2, #0x3e
   10170:	subs	x2, x2, #0x1
   10174:	csel	x2, x3, x2, mi  // mi = first
   10178:	asr	x3, x2, #6
   1017c:	add	x2, x3, #0x1
   10180:	add	x21, x0, #0x3e
   10184:	subs	x0, x0, #0x1
   10188:	csel	x0, x21, x0, mi  // mi = first
   1018c:	asr	x21, x0, #6
   10190:	sub	x21, x21, x3
   10194:	lsl	x21, x21, #3
   10198:	add	x0, x24, x21
   1019c:	ldr	x1, [x1, #24]
   101a0:	cmp	x0, x1
   101a4:	b.eq	101b0 <mpfr_div_2si@@Base+0x248>  // b.none
   101a8:	lsl	x2, x2, #3
   101ac:	bl	ba10 <memcpy@plt>
   101b0:	mov	x2, x21
   101b4:	mov	w1, #0x0                   	// #0
   101b8:	mov	x0, x24
   101bc:	bl	c110 <memset@plt>
   101c0:	mov	w21, #0x0                   	// #0
   101c4:	b	1009c <mpfr_div_2si@@Base+0x134>
   101c8:	ldur	x0, [x1, #-8]
   101cc:	and	x7, x0, #0x8000000000000000
   101d0:	and	x3, x0, #0x7fffffffffffffff
   101d4:	cmp	w23, #0x0
   101d8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   101dc:	b.lt	10370 <mpfr_div_2si@@Base+0x408>  // b.tstop
   101e0:	sub	x4, x4, x6
   101e4:	subs	x5, x4, #0x1
   101e8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   101ec:	b.ne	10210 <mpfr_div_2si@@Base+0x2a8>  // b.any
   101f0:	mvn	x4, x4
   101f4:	add	x0, x1, x4, lsl #3
   101f8:	ldr	x3, [x0, x5, lsl #3]
   101fc:	subs	x5, x5, #0x1
   10200:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   10204:	b.eq	101f8 <mpfr_div_2si@@Base+0x290>  // b.none
   10208:	mov	x25, #0x1                   	// #1
   1020c:	b	10058 <mpfr_div_2si@@Base+0xf0>
   10210:	mov	x25, #0x1                   	// #1
   10214:	b	10058 <mpfr_div_2si@@Base+0xf0>
   10218:	mov	w21, #0x0                   	// #0
   1021c:	b	10074 <mpfr_div_2si@@Base+0x10c>
   10220:	mov	w21, #0x0                   	// #0
   10224:	b	10074 <mpfr_div_2si@@Base+0x10c>
   10228:	mov	x25, #0x1                   	// #1
   1022c:	mov	w21, #0x0                   	// #0
   10230:	b	10074 <mpfr_div_2si@@Base+0x10c>
   10234:	cbnz	x3, 10398 <mpfr_div_2si@@Base+0x430>
   10238:	ldr	x0, [x9, x8, lsl #3]
   1023c:	tst	x25, x0
   10240:	b.ne	10398 <mpfr_div_2si@@Base+0x430>  // b.any
   10244:	neg	w21, w21
   10248:	b	10074 <mpfr_div_2si@@Base+0x10c>
   1024c:	cmp	x24, x1
   10250:	b.eq	103d8 <mpfr_div_2si@@Base+0x470>  // b.none
   10254:	cmp	x6, x0
   10258:	b.le	103d8 <mpfr_div_2si@@Base+0x470>
   1025c:	ldr	x2, [x1, x4, lsl #3]
   10260:	str	x2, [x24, x4, lsl #3]
   10264:	cmp	x6, x4
   10268:	add	x4, x4, #0x1
   1026c:	b.gt	1025c <mpfr_div_2si@@Base+0x2f4>
   10270:	b	103d8 <mpfr_div_2si@@Base+0x470>
   10274:	mov	x0, #0x1                   	// #1
   10278:	cmp	x2, x0
   1027c:	b.le	1035c <mpfr_div_2si@@Base+0x3f4>
   10280:	ldr	x3, [x1, x0, lsl #3]
   10284:	add	x3, x3, #0x1
   10288:	str	x3, [x24, x0, lsl #3]
   1028c:	add	x4, x0, #0x1
   10290:	cbnz	x3, 1024c <mpfr_div_2si@@Base+0x2e4>
   10294:	mov	x0, x4
   10298:	b	10278 <mpfr_div_2si@@Base+0x310>
   1029c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   102a0:	ldr	x1, [x0, #2512]
   102a4:	add	x0, x0, #0x9d0
   102a8:	blr	x1
   102ac:	mrs	x1, tpidr_el0
   102b0:	ldr	x1, [x1, x0]
   102b4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   102b8:	sub	x0, x0, x20
   102bc:	cmp	x0, x1
   102c0:	b.lt	102d0 <mpfr_div_2si@@Base+0x368>  // b.tstop
   102c4:	add	x0, x1, x20
   102c8:	cmp	x0, x22
   102cc:	b.le	100d8 <mpfr_div_2si@@Base+0x170>
   102d0:	cbnz	w23, 10310 <mpfr_div_2si@@Base+0x3a8>
   102d4:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   102d8:	sub	x0, x0, x20
   102dc:	cmp	x1, x0
   102e0:	b.gt	10334 <mpfr_div_2si@@Base+0x3cc>
   102e4:	sub	x20, x20, #0x1
   102e8:	add	x1, x20, x1
   102ec:	cmp	x1, x22
   102f0:	b.gt	1033c <mpfr_div_2si@@Base+0x3d4>
   102f4:	ldr	w0, [x19, #8]
   102f8:	tbnz	w0, #31, 10328 <mpfr_div_2si@@Base+0x3c0>
   102fc:	tbnz	w21, #31, 10310 <mpfr_div_2si@@Base+0x3a8>
   10300:	mov	x0, x19
   10304:	bl	bf00 <mpfr_powerof2_raw@plt>
   10308:	cmp	w0, #0x0
   1030c:	cset	w23, ne  // ne = any
   10310:	ldr	w2, [x19, #8]
   10314:	mov	w1, w23
   10318:	mov	x0, x19
   1031c:	bl	c3c0 <mpfr_underflow@plt>
   10320:	mov	w21, w0
   10324:	b	10108 <mpfr_div_2si@@Base+0x1a0>
   10328:	cmp	w21, #0x0
   1032c:	b.le	10300 <mpfr_div_2si@@Base+0x398>
   10330:	b	10310 <mpfr_div_2si@@Base+0x3a8>
   10334:	mov	w23, #0x1                   	// #1
   10338:	b	10310 <mpfr_div_2si@@Base+0x3a8>
   1033c:	mov	w23, #0x1                   	// #1
   10340:	b	10310 <mpfr_div_2si@@Base+0x3a8>
   10344:	ldr	w2, [x19, #8]
   10348:	mov	w1, w23
   1034c:	mov	x0, x19
   10350:	bl	bf40 <mpfr_overflow@plt>
   10354:	mov	w21, w0
   10358:	b	10108 <mpfr_div_2si@@Base+0x1a0>
   1035c:	add	x2, x24, x2, lsl #3
   10360:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10364:	stur	x0, [x2, #-8]
   10368:	add	x22, x22, #0x1
   1036c:	b	103d8 <mpfr_div_2si@@Base+0x470>
   10370:	mov	x25, #0x1                   	// #1
   10374:	cmp	w23, #0x5
   10378:	b.eq	10228 <mpfr_div_2si@@Base+0x2c0>  // b.none
   1037c:	cmp	w23, #0x1
   10380:	b.eq	10068 <mpfr_div_2si@@Base+0x100>  // b.none
   10384:	add	w0, w23, w21, lsr #31
   10388:	cmp	w0, #0x3
   1038c:	b.eq	10068 <mpfr_div_2si@@Base+0x100>  // b.none
   10390:	orr	x3, x7, x3
   10394:	cbz	x3, 10220 <mpfr_div_2si@@Base+0x2b8>
   10398:	ldr	x0, [x9, x8, lsl #3]
   1039c:	add	x0, x25, x0
   103a0:	str	x0, [x24]
   103a4:	cmp	x25, x0
   103a8:	b.hi	10274 <mpfr_div_2si@@Base+0x30c>  // b.pmore
   103ac:	cmp	x24, x1
   103b0:	b.eq	103d8 <mpfr_div_2si@@Base+0x470>  // b.none
   103b4:	cmp	x2, #0x1
   103b8:	b.le	103d8 <mpfr_div_2si@@Base+0x470>
   103bc:	add	x6, x6, #0x1
   103c0:	mov	x0, #0x1                   	// #1
   103c4:	ldr	x2, [x1, x0, lsl #3]
   103c8:	str	x2, [x24, x0, lsl #3]
   103cc:	add	x0, x0, #0x1
   103d0:	cmp	x6, x0
   103d4:	b.ne	103c4 <mpfr_div_2si@@Base+0x45c>  // b.any
   103d8:	neg	x5, x25
   103dc:	ldr	x0, [x24]
   103e0:	and	x5, x0, x5
   103e4:	str	x5, [x24]
   103e8:	ldr	x25, [sp, #64]
   103ec:	b	1009c <mpfr_div_2si@@Base+0x134>

00000000000103f0 <mpfr_div_2ui@@Base>:
   103f0:	stp	x29, x30, [sp, #-80]!
   103f4:	mov	x29, sp
   103f8:	stp	x19, x20, [sp, #16]
   103fc:	stp	x21, x22, [sp, #32]
   10400:	mov	x20, x0
   10404:	mov	w22, w3
   10408:	cbz	x2, 105b0 <mpfr_div_2ui@@Base+0x1c0>
   1040c:	stp	x23, x24, [sp, #48]
   10410:	mov	x19, x2
   10414:	ldr	x23, [x1, #16]
   10418:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1041c:	cmp	x23, x0
   10420:	b.le	105ac <mpfr_div_2ui@@Base+0x1bc>
   10424:	mov	w21, #0x0                   	// #0
   10428:	cmp	x1, x20
   1042c:	b.eq	10528 <mpfr_div_2ui@@Base+0x138>  // b.none
   10430:	ldr	w21, [x1, #8]
   10434:	str	w21, [x20, #8]
   10438:	ldr	x0, [x20]
   1043c:	ldr	x2, [x1]
   10440:	cmp	x0, x2
   10444:	b.eq	105c8 <mpfr_div_2ui@@Base+0x1d8>  // b.none
   10448:	ldr	x24, [x20, #24]
   1044c:	b.ge	105fc <mpfr_div_2ui@@Base+0x20c>  // b.tcont
   10450:	str	x25, [sp, #64]
   10454:	add	x4, x2, #0x3e
   10458:	subs	x2, x2, #0x1
   1045c:	csel	x4, x4, x2, mi  // mi = first
   10460:	asr	x4, x4, #6
   10464:	add	x6, x0, #0x3e
   10468:	subs	x2, x0, #0x1
   1046c:	csel	x6, x6, x2, mi  // mi = first
   10470:	asr	x6, x6, #6
   10474:	add	x2, x6, #0x1
   10478:	neg	w0, w0
   1047c:	sub	x8, x4, x6
   10480:	ldr	x9, [x1, #24]
   10484:	add	x1, x9, x8, lsl #3
   10488:	ands	w0, w0, #0x3f
   1048c:	b.eq	10658 <mpfr_div_2ui@@Base+0x268>  // b.none
   10490:	sub	w5, w0, #0x1
   10494:	mov	x0, #0x1                   	// #1
   10498:	lsl	x0, x0, x5
   1049c:	ldr	x3, [x9, x8, lsl #3]
   104a0:	and	x7, x3, x0
   104a4:	sub	x0, x0, #0x1
   104a8:	and	x3, x0, x3
   104ac:	cmp	w22, #0x0
   104b0:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   104b4:	b.ne	104dc <mpfr_div_2ui@@Base+0xec>  // b.any
   104b8:	subs	x4, x4, x6
   104bc:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   104c0:	b.ne	104dc <mpfr_div_2ui@@Base+0xec>  // b.any
   104c4:	mvn	x0, x4
   104c8:	add	x0, x1, x0, lsl #3
   104cc:	ldr	x3, [x0, x4, lsl #3]
   104d0:	subs	x4, x4, #0x1
   104d4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   104d8:	b.eq	104cc <mpfr_div_2ui@@Base+0xdc>  // b.none
   104dc:	mov	x25, #0x2                   	// #2
   104e0:	lsl	x25, x25, x5
   104e4:	cmp	w22, #0x5
   104e8:	b.eq	106a8 <mpfr_div_2ui@@Base+0x2b8>  // b.none
   104ec:	cbnz	w22, 107a0 <mpfr_div_2ui@@Base+0x3b0>
   104f0:	cbnz	x7, 106c4 <mpfr_div_2ui@@Base+0x2d4>
   104f4:	orr	x3, x3, x7
   104f8:	cmp	x3, #0x0
   104fc:	csneg	w21, wzr, w21, eq  // eq = none
   10500:	cmp	x24, x1
   10504:	b.eq	10514 <mpfr_div_2ui@@Base+0x124>  // b.none
   10508:	lsl	x2, x2, #3
   1050c:	mov	x0, x24
   10510:	bl	ba10 <memcpy@plt>
   10514:	neg	x5, x25
   10518:	ldr	x0, [x24]
   1051c:	and	x5, x0, x5
   10520:	str	x5, [x24]
   10524:	ldr	x25, [sp, #64]
   10528:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1052c:	ldr	x1, [x0, #2512]
   10530:	add	x0, x0, #0x9d0
   10534:	blr	x1
   10538:	mrs	x1, tpidr_el0
   1053c:	ldr	x0, [x1, x0]
   10540:	sub	x0, x23, x0
   10544:	add	x0, x0, #0x1
   10548:	cmp	x19, x0
   1054c:	b.cs	1072c <mpfr_div_2ui@@Base+0x33c>  // b.hs, b.nlast
   10550:	mov	x0, x19
   10554:	tbz	x19, #63, 10564 <mpfr_div_2ui@@Base+0x174>
   10558:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1055c:	add	x23, x23, x0
   10560:	add	x0, x19, x0
   10564:	sub	x23, x23, x0
   10568:	str	x23, [x20, #16]
   1056c:	cbz	w21, 10814 <mpfr_div_2ui@@Base+0x424>
   10570:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10574:	ldr	x1, [x0, #2576]
   10578:	add	x0, x0, #0xa10
   1057c:	blr	x1
   10580:	mrs	x1, tpidr_el0
   10584:	add	x0, x1, x0
   10588:	ldr	w1, [x0]
   1058c:	orr	w1, w1, #0x8
   10590:	str	w1, [x0]
   10594:	ldp	x23, x24, [sp, #48]
   10598:	mov	w0, w21
   1059c:	ldp	x19, x20, [sp, #16]
   105a0:	ldp	x21, x22, [sp, #32]
   105a4:	ldp	x29, x30, [sp], #80
   105a8:	ret
   105ac:	ldp	x23, x24, [sp, #48]
   105b0:	ldr	w3, [x1, #8]
   105b4:	mov	w2, w22
   105b8:	mov	x0, x20
   105bc:	bl	c6a0 <mpfr_set4@plt>
   105c0:	mov	w21, w0
   105c4:	b	10598 <mpfr_div_2ui@@Base+0x1a8>
   105c8:	ldr	x0, [x20, #24]
   105cc:	ldr	x1, [x1, #24]
   105d0:	mov	w21, #0x0                   	// #0
   105d4:	cmp	x0, x1
   105d8:	b.eq	10528 <mpfr_div_2ui@@Base+0x138>  // b.none
   105dc:	add	x3, x2, #0x3e
   105e0:	subs	x2, x2, #0x1
   105e4:	csel	x2, x3, x2, mi  // mi = first
   105e8:	asr	x2, x2, #6
   105ec:	add	x2, x2, #0x1
   105f0:	lsl	x2, x2, #3
   105f4:	bl	ba10 <memcpy@plt>
   105f8:	b	10528 <mpfr_div_2ui@@Base+0x138>
   105fc:	add	x3, x2, #0x3e
   10600:	subs	x2, x2, #0x1
   10604:	csel	x2, x3, x2, mi  // mi = first
   10608:	asr	x3, x2, #6
   1060c:	add	x2, x3, #0x1
   10610:	add	x21, x0, #0x3e
   10614:	subs	x0, x0, #0x1
   10618:	csel	x0, x21, x0, mi  // mi = first
   1061c:	asr	x21, x0, #6
   10620:	sub	x21, x21, x3
   10624:	lsl	x21, x21, #3
   10628:	add	x0, x24, x21
   1062c:	ldr	x1, [x1, #24]
   10630:	cmp	x0, x1
   10634:	b.eq	10640 <mpfr_div_2ui@@Base+0x250>  // b.none
   10638:	lsl	x2, x2, #3
   1063c:	bl	ba10 <memcpy@plt>
   10640:	mov	x2, x21
   10644:	mov	w1, #0x0                   	// #0
   10648:	mov	x0, x24
   1064c:	bl	c110 <memset@plt>
   10650:	mov	w21, #0x0                   	// #0
   10654:	b	10528 <mpfr_div_2ui@@Base+0x138>
   10658:	ldur	x0, [x1, #-8]
   1065c:	and	x7, x0, #0x8000000000000000
   10660:	and	x3, x0, #0x7fffffffffffffff
   10664:	cmp	w22, #0x0
   10668:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1066c:	b.lt	10794 <mpfr_div_2ui@@Base+0x3a4>  // b.tstop
   10670:	sub	x4, x4, x6
   10674:	subs	x5, x4, #0x1
   10678:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   1067c:	b.ne	106a0 <mpfr_div_2ui@@Base+0x2b0>  // b.any
   10680:	mvn	x4, x4
   10684:	add	x0, x1, x4, lsl #3
   10688:	ldr	x3, [x0, x5, lsl #3]
   1068c:	subs	x5, x5, #0x1
   10690:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   10694:	b.eq	10688 <mpfr_div_2ui@@Base+0x298>  // b.none
   10698:	mov	x25, #0x1                   	// #1
   1069c:	b	104e4 <mpfr_div_2ui@@Base+0xf4>
   106a0:	mov	x25, #0x1                   	// #1
   106a4:	b	104e4 <mpfr_div_2ui@@Base+0xf4>
   106a8:	mov	w21, #0x0                   	// #0
   106ac:	b	10500 <mpfr_div_2ui@@Base+0x110>
   106b0:	mov	w21, #0x0                   	// #0
   106b4:	b	10500 <mpfr_div_2ui@@Base+0x110>
   106b8:	mov	x25, #0x1                   	// #1
   106bc:	mov	w21, #0x0                   	// #0
   106c0:	b	10500 <mpfr_div_2ui@@Base+0x110>
   106c4:	cbnz	x3, 107bc <mpfr_div_2ui@@Base+0x3cc>
   106c8:	ldr	x0, [x9, x8, lsl #3]
   106cc:	tst	x25, x0
   106d0:	b.ne	107bc <mpfr_div_2ui@@Base+0x3cc>  // b.any
   106d4:	neg	w21, w21
   106d8:	b	10500 <mpfr_div_2ui@@Base+0x110>
   106dc:	cmp	x24, x1
   106e0:	b.eq	107fc <mpfr_div_2ui@@Base+0x40c>  // b.none
   106e4:	cmp	x6, x0
   106e8:	b.le	107fc <mpfr_div_2ui@@Base+0x40c>
   106ec:	ldr	x2, [x1, x4, lsl #3]
   106f0:	str	x2, [x24, x4, lsl #3]
   106f4:	cmp	x6, x4
   106f8:	add	x4, x4, #0x1
   106fc:	b.gt	106ec <mpfr_div_2ui@@Base+0x2fc>
   10700:	b	107fc <mpfr_div_2ui@@Base+0x40c>
   10704:	mov	x0, #0x1                   	// #1
   10708:	cmp	x2, x0
   1070c:	b.le	10780 <mpfr_div_2ui@@Base+0x390>
   10710:	ldr	x3, [x1, x0, lsl #3]
   10714:	add	x3, x3, #0x1
   10718:	str	x3, [x24, x0, lsl #3]
   1071c:	add	x4, x0, #0x1
   10720:	cbnz	x3, 106dc <mpfr_div_2ui@@Base+0x2ec>
   10724:	mov	x0, x4
   10728:	b	10708 <mpfr_div_2ui@@Base+0x318>
   1072c:	cbnz	w22, 10750 <mpfr_div_2ui@@Base+0x360>
   10730:	b.hi	10778 <mpfr_div_2ui@@Base+0x388>  // b.pmore
   10734:	ldr	w0, [x20, #8]
   10738:	tbnz	w0, #31, 1076c <mpfr_div_2ui@@Base+0x37c>
   1073c:	tbnz	w21, #31, 10750 <mpfr_div_2ui@@Base+0x360>
   10740:	mov	x0, x20
   10744:	bl	bf00 <mpfr_powerof2_raw@plt>
   10748:	cmp	w0, #0x0
   1074c:	cset	w22, ne  // ne = any
   10750:	ldr	w2, [x20, #8]
   10754:	mov	w1, w22
   10758:	mov	x0, x20
   1075c:	bl	c3c0 <mpfr_underflow@plt>
   10760:	mov	w21, w0
   10764:	ldp	x23, x24, [sp, #48]
   10768:	b	10598 <mpfr_div_2ui@@Base+0x1a8>
   1076c:	cmp	w21, #0x0
   10770:	b.le	10740 <mpfr_div_2ui@@Base+0x350>
   10774:	b	10750 <mpfr_div_2ui@@Base+0x360>
   10778:	mov	w22, #0x1                   	// #1
   1077c:	b	10750 <mpfr_div_2ui@@Base+0x360>
   10780:	add	x2, x24, x2, lsl #3
   10784:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10788:	stur	x0, [x2, #-8]
   1078c:	add	x23, x23, #0x1
   10790:	b	107fc <mpfr_div_2ui@@Base+0x40c>
   10794:	mov	x25, #0x1                   	// #1
   10798:	cmp	w22, #0x5
   1079c:	b.eq	106b8 <mpfr_div_2ui@@Base+0x2c8>  // b.none
   107a0:	cmp	w22, #0x1
   107a4:	b.eq	104f4 <mpfr_div_2ui@@Base+0x104>  // b.none
   107a8:	add	w0, w22, w21, lsr #31
   107ac:	cmp	w0, #0x3
   107b0:	b.eq	104f4 <mpfr_div_2ui@@Base+0x104>  // b.none
   107b4:	orr	x3, x7, x3
   107b8:	cbz	x3, 106b0 <mpfr_div_2ui@@Base+0x2c0>
   107bc:	ldr	x0, [x9, x8, lsl #3]
   107c0:	add	x0, x25, x0
   107c4:	str	x0, [x24]
   107c8:	cmp	x25, x0
   107cc:	b.hi	10704 <mpfr_div_2ui@@Base+0x314>  // b.pmore
   107d0:	cmp	x24, x1
   107d4:	b.eq	107fc <mpfr_div_2ui@@Base+0x40c>  // b.none
   107d8:	cmp	x2, #0x1
   107dc:	b.le	107fc <mpfr_div_2ui@@Base+0x40c>
   107e0:	add	x6, x6, #0x1
   107e4:	mov	x0, #0x1                   	// #1
   107e8:	ldr	x2, [x1, x0, lsl #3]
   107ec:	str	x2, [x24, x0, lsl #3]
   107f0:	add	x0, x0, #0x1
   107f4:	cmp	x0, x6
   107f8:	b.ne	107e8 <mpfr_div_2ui@@Base+0x3f8>  // b.any
   107fc:	neg	x5, x25
   10800:	ldr	x0, [x24]
   10804:	and	x5, x0, x5
   10808:	str	x5, [x24]
   1080c:	ldr	x25, [sp, #64]
   10810:	b	10528 <mpfr_div_2ui@@Base+0x138>
   10814:	ldp	x23, x24, [sp, #48]
   10818:	b	10598 <mpfr_div_2ui@@Base+0x1a8>
   1081c:	cbz	x1, 10834 <mpfr_div_2ui@@Base+0x444>
   10820:	sub	x1, x1, #0x1
   10824:	ldr	x2, [x0, x1, lsl #3]
   10828:	cbz	x2, 1081c <mpfr_div_2ui@@Base+0x42c>
   1082c:	mov	w0, #0x1                   	// #1
   10830:	ret
   10834:	mov	w0, #0x0                   	// #0
   10838:	b	10830 <mpfr_div_2ui@@Base+0x440>
   1083c:	mov	x8, x0
   10840:	cbz	x2, 108a8 <mpfr_div_2ui@@Base+0x4b8>
   10844:	mov	x0, x3
   10848:	mov	x5, #0x0                   	// #0
   1084c:	add	x10, x1, #0x8
   10850:	mov	x9, #0x1                   	// #1
   10854:	b	10874 <mpfr_div_2ui@@Base+0x484>
   10858:	ldr	x7, [x1, x5, lsl #3]
   1085c:	b	10884 <mpfr_div_2ui@@Base+0x494>
   10860:	mov	x0, x9
   10864:	str	x6, [x8, x5, lsl #3]
   10868:	add	x5, x5, #0x1
   1086c:	cmp	x5, x2
   10870:	b.eq	108ac <mpfr_div_2ui@@Base+0x4bc>  // b.none
   10874:	cbz	w4, 10858 <mpfr_div_2ui@@Base+0x468>
   10878:	ldr	x7, [x10, x5, lsl #3]
   1087c:	ldr	x3, [x1, x5, lsl #3]
   10880:	extr	x7, x7, x3, #1
   10884:	ldr	x3, [x8, x5, lsl #3]
   10888:	sub	x6, x3, x0
   1088c:	sub	x6, x6, x7
   10890:	cmp	x3, x7
   10894:	b.cc	10860 <mpfr_div_2ui@@Base+0x470>  // b.lo, b.ul, b.last
   10898:	cmp	x0, #0x0
   1089c:	ccmn	x6, #0x1, #0x0, ne  // ne = any
   108a0:	cset	x0, eq  // eq = none
   108a4:	b	10864 <mpfr_div_2ui@@Base+0x474>
   108a8:	mov	x0, x3
   108ac:	ret

00000000000108b0 <mpfr_div@@Base>:
   108b0:	stp	x29, x30, [sp, #-288]!
   108b4:	mov	x29, sp
   108b8:	stp	x19, x20, [sp, #16]
   108bc:	stp	x21, x22, [sp, #32]
   108c0:	stp	x23, x24, [sp, #48]
   108c4:	stp	x25, x26, [sp, #64]
   108c8:	stp	x27, x28, [sp, #80]
   108cc:	mov	x22, x0
   108d0:	mov	x21, x1
   108d4:	mov	x20, x2
   108d8:	ldr	x2, [x1, #16]
   108dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   108e0:	cmp	x2, x0
   108e4:	b.le	10c24 <mpfr_div@@Base+0x374>
   108e8:	mov	w26, w3
   108ec:	ldr	x27, [x20, #16]
   108f0:	cmp	x27, x0
   108f4:	b.le	10c34 <mpfr_div@@Base+0x384>
   108f8:	ldr	x0, [x1]
   108fc:	ldr	x23, [x22]
   10900:	cmp	x0, x23
   10904:	b.eq	10da8 <mpfr_div@@Base+0x4f8>  // b.none
   10908:	add	x19, x0, #0x3e
   1090c:	subs	x0, x0, #0x1
   10910:	csel	x0, x19, x0, mi  // mi = first
   10914:	asr	x19, x0, #6
   10918:	add	x0, x19, #0x1
   1091c:	str	x0, [x29, #208]
   10920:	ldr	x1, [x20]
   10924:	add	x0, x1, #0x3e
   10928:	subs	x1, x1, #0x1
   1092c:	csel	x1, x0, x1, mi  // mi = first
   10930:	asr	x0, x1, #6
   10934:	str	x0, [x29, #112]
   10938:	add	x24, x0, #0x1
   1093c:	add	x0, x23, #0x3e
   10940:	subs	x1, x23, #0x1
   10944:	csel	x0, x0, x1, mi  // mi = first
   10948:	asr	x0, x0, #6
   1094c:	str	x0, [x29, #120]
   10950:	add	x0, x0, #0x1
   10954:	str	x0, [x29, #216]
   10958:	ldr	x0, [x22, #24]
   1095c:	str	x0, [x29, #168]
   10960:	ldr	x0, [x21, #24]
   10964:	str	x0, [x29, #192]
   10968:	ldr	x25, [x20, #24]
   1096c:	cmp	x24, #0x1
   10970:	b.le	117ac <mpfr_div@@Base+0xefc>
   10974:	ldr	x0, [x29, #216]
   10978:	cmp	x0, #0x1f
   1097c:	b.gt	11904 <mpfr_div@@Base+0x1054>
   10980:	str	xzr, [x29, #280]
   10984:	ldr	w0, [x21, #8]
   10988:	ldr	w23, [x20, #8]
   1098c:	mul	w0, w0, w23
   10990:	str	w0, [x29, #144]
   10994:	str	w0, [x22, #8]
   10998:	ldr	x0, [x29, #208]
   1099c:	str	x0, [x29, #200]
   109a0:	lsl	x23, x0, #3
   109a4:	ldr	x0, [x29, #192]
   109a8:	add	x0, x0, x23
   109ac:	ldur	x1, [x0, #-8]
   109b0:	lsl	x0, x24, #3
   109b4:	str	x0, [x29, #104]
   109b8:	add	x0, x25, x0
   109bc:	ldur	x0, [x0, #-8]
   109c0:	cmp	x1, x0
   109c4:	b.eq	11ba4 <mpfr_div@@Base+0x12f4>  // b.none
   109c8:	cmp	x1, x0
   109cc:	cset	w0, hi  // hi = pmore
   109d0:	str	w0, [x29, #180]
   109d4:	ldr	x0, [x21, #16]
   109d8:	ldr	x1, [x20, #16]
   109dc:	sub	x0, x0, x1
   109e0:	ldr	w1, [x29, #180]
   109e4:	add	x27, x0, w1, sxtw
   109e8:	ldr	x0, [x22]
   109ec:	neg	w0, w0
   109f0:	and	w0, w0, #0x3f
   109f4:	str	w0, [x29, #184]
   109f8:	str	w26, [x29, #152]
   109fc:	cmp	w26, #0x1
   10a00:	b.eq	10a20 <mpfr_div@@Base+0x170>  // b.none
   10a04:	ldr	w0, [x29, #144]
   10a08:	mvn	w0, w0
   10a0c:	lsr	w0, w0, #31
   10a10:	add	w0, w0, #0x2
   10a14:	cmp	w0, w26
   10a18:	cset	w0, eq  // eq = none
   10a1c:	str	w0, [x29, #152]
   10a20:	ldr	x0, [x29, #216]
   10a24:	cmp	x0, #0x18
   10a28:	ccmp	x24, #0x18, #0x4, gt
   10a2c:	b.gt	11c24 <mpfr_div@@Base+0x1374>
   10a30:	ldr	w0, [x29, #184]
   10a34:	orr	w0, w26, w0
   10a38:	ldr	x20, [x29, #168]
   10a3c:	ldr	x19, [x29, #216]
   10a40:	cbz	w0, 11e70 <mpfr_div@@Base+0x15c0>
   10a44:	lsl	x0, x19, #1
   10a48:	str	x0, [x29, #160]
   10a4c:	lsl	x1, x19, #4
   10a50:	cmp	x1, #0x4, lsl #12
   10a54:	b.hi	11ea8 <mpfr_div@@Base+0x15f8>  // b.pmore
   10a58:	sub	sp, sp, x1
   10a5c:	mov	x0, sp
   10a60:	str	x0, [x29, #200]
   10a64:	ldr	x0, [x29, #160]
   10a68:	ldr	x1, [x29, #208]
   10a6c:	cmp	x0, x1
   10a70:	b.le	11ee4 <mpfr_div@@Base+0x1634>
   10a74:	sub	x21, x0, x1
   10a78:	lsl	x2, x21, #3
   10a7c:	mov	w1, #0x0                   	// #0
   10a80:	ldr	x0, [x29, #200]
   10a84:	bl	c110 <memset@plt>
   10a88:	ldr	w0, [x29, #180]
   10a8c:	cbnz	w0, 11eb8 <mpfr_div@@Base+0x1608>
   10a90:	ldr	x0, [x29, #200]
   10a94:	add	x0, x0, x21, lsl #3
   10a98:	str	xzr, [x29, #128]
   10a9c:	ldr	x1, [x29, #192]
   10aa0:	cmp	x0, x1
   10aa4:	b.eq	10ab4 <mpfr_div@@Base+0x204>  // b.none
   10aa8:	mov	x2, x23
   10aac:	bl	ba10 <memcpy@plt>
   10ab0:	str	xzr, [x29, #128]
   10ab4:	cmp	x19, x24
   10ab8:	b.gt	11fa8 <mpfr_div@@Base+0x16f8>
   10abc:	sub	x23, x24, x19
   10ac0:	cmp	x20, x25
   10ac4:	b.eq	11f58 <mpfr_div@@Base+0x16a8>  // b.none
   10ac8:	add	x21, x25, x23, lsl #3
   10acc:	mov	x1, x23
   10ad0:	mov	x0, x25
   10ad4:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   10ad8:	cmp	w0, #0x0
   10adc:	cset	x28, ne  // ne = any
   10ae0:	mov	x2, #0x0                   	// #0
   10ae4:	sub	x5, x19, x2
   10ae8:	mov	x4, x21
   10aec:	ldr	x0, [x29, #160]
   10af0:	sub	x3, x0, x2
   10af4:	ldr	x21, [x29, #200]
   10af8:	add	x2, x21, x2, lsl #3
   10afc:	mov	x1, #0x0                   	// #0
   10b00:	mov	x0, x20
   10b04:	bl	ccb0 <__gmpn_divrem@plt>
   10b08:	str	x0, [x29, #96]
   10b0c:	mov	w23, #0x1                   	// #1
   10b10:	ldr	x0, [x29, #128]
   10b14:	cbnz	x0, 10b2c <mpfr_div@@Base+0x27c>
   10b18:	mov	x1, x19
   10b1c:	mov	x0, x21
   10b20:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   10b24:	cmp	w0, #0x0
   10b28:	cset	w23, ne  // ne = any
   10b2c:	sxtw	x23, w23
   10b30:	orr	x21, x28, x23
   10b34:	ldr	x0, [x29, #216]
   10b38:	cmp	x19, x0
   10b3c:	b.ne	11fb8 <mpfr_div@@Base+0x1708>  // b.any
   10b40:	mov	x28, #0xffffffffffffffff    	// #-1
   10b44:	ldr	w1, [x29, #184]
   10b48:	lsl	x28, x28, x1
   10b4c:	ldr	x0, [x20]
   10b50:	bic	x28, x0, x28
   10b54:	ldr	x0, [x20]
   10b58:	eor	x0, x0, x28
   10b5c:	str	x0, [x20]
   10b60:	orr	x21, x28, x21
   10b64:	cmp	x21, #0x0
   10b68:	cset	w0, ne  // ne = any
   10b6c:	cmp	x19, x24
   10b70:	b.lt	11ffc <mpfr_div@@Base+0x174c>  // b.tstop
   10b74:	cbnz	w26, 11fe0 <mpfr_div@@Base+0x1730>
   10b78:	sub	w1, w1, #0x1
   10b7c:	mov	x21, #0x1                   	// #1
   10b80:	lsl	x21, x21, x1
   10b84:	and	x0, x21, x28
   10b88:	str	x0, [x29, #136]
   10b8c:	bic	x21, x28, x21
   10b90:	orr	x21, x21, x23
   10b94:	ldr	w0, [x29, #152]
   10b98:	cbnz	w0, 12564 <mpfr_div@@Base+0x1cb4>
   10b9c:	ldr	x0, [x29, #136]
   10ba0:	orr	x0, x21, x0
   10ba4:	cbz	x0, 1255c <mpfr_div@@Base+0x1cac>
   10ba8:	cbnz	w26, 10bd0 <mpfr_div@@Base+0x320>
   10bac:	mov	w23, #0xffffffff            	// #-1
   10bb0:	ldr	x0, [x29, #136]
   10bb4:	cbz	x0, 12574 <mpfr_div@@Base+0x1cc4>
   10bb8:	cbnz	x21, 10bd0 <mpfr_div@@Base+0x320>
   10bbc:	ldr	x0, [x29, #168]
   10bc0:	ldr	x0, [x0]
   10bc4:	ldrb	w1, [x29, #184]
   10bc8:	lsr	x0, x0, x1
   10bcc:	tbz	w0, #0, 12574 <mpfr_div@@Base+0x1cc4>
   10bd0:	mov	x1, #0x1                   	// #1
   10bd4:	ldrb	w0, [x29, #184]
   10bd8:	lsl	x1, x1, x0
   10bdc:	ldr	x2, [x29, #168]
   10be0:	ldr	x0, [x2]
   10be4:	add	x0, x1, x0
   10be8:	str	x0, [x2]
   10bec:	mov	w23, #0x1                   	// #1
   10bf0:	cmp	x1, x0
   10bf4:	b.ls	12574 <mpfr_div@@Base+0x1cc4>  // b.plast
   10bf8:	mov	x1, x2
   10bfc:	ldr	x0, [x29, #120]
   10c00:	add	x2, x2, x0, lsl #3
   10c04:	cmp	x2, x1
   10c08:	b.eq	12738 <mpfr_div@@Base+0x1e88>  // b.none
   10c0c:	ldr	x0, [x1, #8]
   10c10:	add	x0, x0, #0x1
   10c14:	str	x0, [x1, #8]!
   10c18:	cbz	x0, 10c04 <mpfr_div@@Base+0x354>
   10c1c:	mov	w23, #0x1                   	// #1
   10c20:	b	12574 <mpfr_div@@Base+0x1cc4>
   10c24:	mov	x0, #0x2                   	// #2
   10c28:	movk	x0, #0x8000, lsl #48
   10c2c:	cmp	x2, x0
   10c30:	b.eq	10cc0 <mpfr_div@@Base+0x410>  // b.none
   10c34:	ldr	x1, [x20, #16]
   10c38:	mov	x0, #0x2                   	// #2
   10c3c:	movk	x0, #0x8000, lsl #48
   10c40:	cmp	x1, x0
   10c44:	b.eq	10cc0 <mpfr_div@@Base+0x410>  // b.none
   10c48:	ldr	w0, [x21, #8]
   10c4c:	ldr	w1, [x20, #8]
   10c50:	mul	w0, w0, w1
   10c54:	str	w0, [x22, #8]
   10c58:	ldr	x0, [x21, #16]
   10c5c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   10c60:	cmp	x0, x1
   10c64:	b.eq	10cf8 <mpfr_div@@Base+0x448>  // b.none
   10c68:	ldr	x1, [x20, #16]
   10c6c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   10c70:	cmp	x1, x2
   10c74:	b.eq	10d50 <mpfr_div@@Base+0x4a0>  // b.none
   10c78:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10c7c:	cmp	x1, x2
   10c80:	b.ne	10d98 <mpfr_div@@Base+0x4e8>  // b.any
   10c84:	cmp	x0, x2
   10c88:	b.eq	10d60 <mpfr_div@@Base+0x4b0>  // b.none
   10c8c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10c90:	str	x0, [x22, #16]
   10c94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10c98:	ldr	x1, [x0, #2576]
   10c9c:	add	x0, x0, #0xa10
   10ca0:	blr	x1
   10ca4:	mrs	x1, tpidr_el0
   10ca8:	add	x0, x1, x0
   10cac:	ldr	w1, [x0]
   10cb0:	orr	w1, w1, #0x20
   10cb4:	str	w1, [x0]
   10cb8:	mov	w23, #0x0                   	// #0
   10cbc:	b	125f0 <mpfr_div@@Base+0x1d40>
   10cc0:	mov	x0, #0x2                   	// #2
   10cc4:	movk	x0, #0x8000, lsl #48
   10cc8:	str	x0, [x22, #16]
   10ccc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10cd0:	ldr	x1, [x0, #2576]
   10cd4:	add	x0, x0, #0xa10
   10cd8:	blr	x1
   10cdc:	mrs	x1, tpidr_el0
   10ce0:	add	x0, x1, x0
   10ce4:	ldr	w1, [x0]
   10ce8:	orr	w1, w1, #0x4
   10cec:	str	w1, [x0]
   10cf0:	mov	w23, #0x0                   	// #0
   10cf4:	b	125f0 <mpfr_div@@Base+0x1d40>
   10cf8:	ldr	x1, [x20, #16]
   10cfc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10d00:	cmp	x1, x0
   10d04:	b.eq	10d18 <mpfr_div@@Base+0x468>  // b.none
   10d08:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10d0c:	str	x0, [x22, #16]
   10d10:	mov	w23, #0x0                   	// #0
   10d14:	b	125f0 <mpfr_div@@Base+0x1d40>
   10d18:	mov	x0, #0x2                   	// #2
   10d1c:	movk	x0, #0x8000, lsl #48
   10d20:	str	x0, [x22, #16]
   10d24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10d28:	ldr	x1, [x0, #2576]
   10d2c:	add	x0, x0, #0xa10
   10d30:	blr	x1
   10d34:	mrs	x1, tpidr_el0
   10d38:	add	x0, x1, x0
   10d3c:	ldr	w1, [x0]
   10d40:	orr	w1, w1, #0x4
   10d44:	str	w1, [x0]
   10d48:	mov	w23, #0x0                   	// #0
   10d4c:	b	125f0 <mpfr_div@@Base+0x1d40>
   10d50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10d54:	str	x0, [x22, #16]
   10d58:	mov	w23, #0x0                   	// #0
   10d5c:	b	125f0 <mpfr_div@@Base+0x1d40>
   10d60:	mov	x0, #0x2                   	// #2
   10d64:	movk	x0, #0x8000, lsl #48
   10d68:	str	x0, [x22, #16]
   10d6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10d70:	ldr	x1, [x0, #2576]
   10d74:	add	x0, x0, #0xa10
   10d78:	blr	x1
   10d7c:	mrs	x1, tpidr_el0
   10d80:	add	x0, x1, x0
   10d84:	ldr	w1, [x0]
   10d88:	orr	w1, w1, #0x4
   10d8c:	str	w1, [x0]
   10d90:	mov	w23, #0x0                   	// #0
   10d94:	b	125f0 <mpfr_div@@Base+0x1d40>
   10d98:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10d9c:	str	x0, [x22, #16]
   10da0:	mov	w23, #0x0                   	// #0
   10da4:	b	125f0 <mpfr_div@@Base+0x1d40>
   10da8:	ldr	x1, [x20]
   10dac:	cmp	x23, x1
   10db0:	b.eq	10dd0 <mpfr_div@@Base+0x520>  // b.none
   10db4:	add	x19, x0, #0x3e
   10db8:	subs	x0, x0, #0x1
   10dbc:	csel	x0, x19, x0, mi  // mi = first
   10dc0:	asr	x19, x0, #6
   10dc4:	add	x0, x19, #0x1
   10dc8:	str	x0, [x29, #208]
   10dcc:	b	10924 <mpfr_div@@Base+0x74>
   10dd0:	cmp	x23, #0x3f
   10dd4:	b.le	10ef0 <mpfr_div@@Base+0x640>
   10dd8:	sub	x3, x23, #0x41
   10ddc:	cmp	x3, #0x3e
   10de0:	b.ls	111f0 <mpfr_div@@Base+0x940>  // b.plast
   10de4:	cmp	x23, #0x40
   10de8:	b.ne	10db4 <mpfr_div@@Base+0x504>  // b.any
   10dec:	ldr	x5, [x22, #24]
   10df0:	sub	x2, x2, x27
   10df4:	ldr	x0, [x21, #24]
   10df8:	ldr	x7, [x0]
   10dfc:	ldr	x0, [x20, #24]
   10e00:	ldr	x4, [x0]
   10e04:	sub	x3, x7, x4
   10e08:	cmp	x7, x4
   10e0c:	csel	x3, x3, x7, cs  // cs = hs, nlast
   10e10:	lsr	x1, x4, #55
   10e14:	sub	x1, x1, #0x100
   10e18:	lsr	x6, x4, #24
   10e1c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
   10e20:	add	x0, x0, #0x1e0
   10e24:	ldr	x8, [x0, x1, lsl #3]
   10e28:	sub	x8, x8, #0x1
   10e2c:	add	x0, x0, #0x800
   10e30:	ldr	x0, [x0, x1, lsl #3]
   10e34:	madd	x0, x6, x0, x0
   10e38:	sub	x1, x8, x0, lsr #40
   10e3c:	madd	x6, x6, x1, x1
   10e40:	mov	x0, #0x1000000000000000    	// #1152921504606846976
   10e44:	sub	x0, x0, x6
   10e48:	mul	x0, x0, x1
   10e4c:	lsl	x1, x1, #13
   10e50:	add	x0, x1, x0, lsr #47
   10e54:	sbfx	x1, x4, #0, #1
   10e58:	and	x1, x1, x0
   10e5c:	lsr	x1, x1, #1
   10e60:	sub	x6, x4, #0x1
   10e64:	lsr	x6, x6, #1
   10e68:	madd	x6, x6, x0, x0
   10e6c:	sub	x1, x1, x6
   10e70:	umulh	x1, x0, x1
   10e74:	lsr	x1, x1, #1
   10e78:	add	x0, x1, x0, lsl #31
   10e7c:	umulh	x0, x3, x0
   10e80:	add	x0, x0, x3
   10e84:	umulh	x6, x0, x4
   10e88:	mul	x1, x4, x0
   10e8c:	negs	x8, x1
   10e90:	sbc	x6, x3, x6
   10e94:	mov	x3, x6
   10e98:	mov	x1, x8
   10e9c:	cmp	x6, #0x0
   10ea0:	ccmp	x4, x8, #0x0, eq  // eq = none
   10ea4:	b.hi	10ec4 <mpfr_div@@Base+0x614>  // b.pmore
   10ea8:	add	x0, x0, #0x1
   10eac:	cmp	x1, x4
   10eb0:	sbc	x3, x3, xzr
   10eb4:	sub	x1, x1, x4
   10eb8:	cmp	x3, #0x0
   10ebc:	ccmp	x4, x1, #0x0, eq  // eq = none
   10ec0:	b.ls	10ea8 <mpfr_div@@Base+0x5f8>  // b.plast
   10ec4:	cmp	x7, x4
   10ec8:	b.cs	115f8 <mpfr_div@@Base+0xd48>  // b.hs, b.nlast
   10ecc:	str	x0, [x5]
   10ed0:	lsl	x0, x1, #1
   10ed4:	cmp	x4, x0
   10ed8:	mov	x3, #0x0                   	// #0
   10edc:	ccmp	x1, x0, #0x2, hi  // hi = pmore
   10ee0:	b.ls	1160c <mpfr_div@@Base+0xd5c>  // b.plast
   10ee4:	sub	x1, x0, x4
   10ee8:	mov	x3, #0x1                   	// #1
   10eec:	b	1160c <mpfr_div@@Base+0xd5c>
   10ef0:	ldr	x3, [x22, #24]
   10ef4:	sub	x2, x2, x27
   10ef8:	ldr	x0, [x21, #24]
   10efc:	ldr	x8, [x0]
   10f00:	ldr	x0, [x20, #24]
   10f04:	ldr	x7, [x0]
   10f08:	mov	x0, #0x40                  	// #64
   10f0c:	sub	x23, x0, x23
   10f10:	mov	x4, #0x1                   	// #1
   10f14:	lsl	x4, x4, x23
   10f18:	sub	x5, x4, #0x1
   10f1c:	cmp	x8, x7
   10f20:	cset	w6, cs  // cs = hs, nlast
   10f24:	sub	x0, x8, x7
   10f28:	csel	x8, x0, x8, cs  // cs = hs, nlast
   10f2c:	lsr	x1, x7, #55
   10f30:	sub	x1, x1, #0x100
   10f34:	lsr	x9, x7, #24
   10f38:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x27b0>
   10f3c:	add	x0, x0, #0x1e0
   10f40:	ldr	x10, [x0, x1, lsl #3]
   10f44:	sub	x10, x10, #0x1
   10f48:	add	x0, x0, #0x800
   10f4c:	ldr	x1, [x0, x1, lsl #3]
   10f50:	madd	x1, x9, x1, x1
   10f54:	sub	x1, x10, x1, lsr #40
   10f58:	madd	x9, x9, x1, x1
   10f5c:	mov	x0, #0x1000000000000000    	// #1152921504606846976
   10f60:	sub	x0, x0, x9
   10f64:	mul	x0, x0, x1
   10f68:	lsl	x1, x1, #13
   10f6c:	add	x0, x1, x0, lsr #47
   10f70:	sbfx	x1, x7, #0, #1
   10f74:	and	x1, x1, x0
   10f78:	lsr	x1, x1, #1
   10f7c:	sub	x9, x7, #0x1
   10f80:	lsr	x9, x9, #1
   10f84:	madd	x9, x9, x0, x0
   10f88:	sub	x1, x1, x9
   10f8c:	umulh	x1, x0, x1
   10f90:	lsr	x1, x1, #1
   10f94:	add	x0, x1, x0, lsl #31
   10f98:	umulh	x0, x8, x0
   10f9c:	add	x0, x0, x8
   10fa0:	lsr	x9, x0, x6
   10fa4:	lsr	x1, x5, #1
   10fa8:	add	x5, x9, #0x2
   10fac:	and	x5, x5, x1
   10fb0:	cmp	x5, #0x2
   10fb4:	b.ls	11050 <mpfr_div@@Base+0x7a0>  // b.plast
   10fb8:	sub	w5, w23, #0x1
   10fbc:	mov	x0, #0x1                   	// #1
   10fc0:	lsl	x5, x0, x5
   10fc4:	and	x5, x5, x9
   10fc8:	mov	x1, x0
   10fcc:	orr	x0, x9, #0x8000000000000000
   10fd0:	neg	x7, x4
   10fd4:	and	x0, x0, x7
   10fd8:	str	x0, [x3]
   10fdc:	and	x6, x6, #0xff
   10fe0:	add	x2, x6, x2
   10fe4:	ldr	w23, [x21, #8]
   10fe8:	ldr	w0, [x20, #8]
   10fec:	mul	w23, w23, w0
   10ff0:	str	w23, [x22, #8]
   10ff4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   10ff8:	ldr	x6, [x0, #2544]
   10ffc:	add	x0, x0, #0x9f0
   11000:	blr	x6
   11004:	mrs	x6, tpidr_el0
   11008:	ldr	x0, [x6, x0]
   1100c:	cmp	x2, x0
   11010:	b.gt	110bc <mpfr_div@@Base+0x80c>
   11014:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11018:	ldr	x6, [x0, #2512]
   1101c:	add	x0, x0, #0x9d0
   11020:	blr	x6
   11024:	mrs	x6, tpidr_el0
   11028:	ldr	x0, [x6, x0]
   1102c:	cmp	x2, x0
   11030:	b.lt	110d4 <mpfr_div@@Base+0x824>  // b.tstop
   11034:	str	x2, [x22, #16]
   11038:	orr	x0, x1, x5
   1103c:	cmp	x0, #0x0
   11040:	ccmp	w26, #0x5, #0x4, ne  // ne = any
   11044:	b.ne	11118 <mpfr_div@@Base+0x868>  // b.any
   11048:	mov	w23, #0x0                   	// #0
   1104c:	b	125f0 <mpfr_div@@Base+0x1d40>
   11050:	umulh	x5, x0, x7
   11054:	mul	x9, x7, x0
   11058:	negs	x10, x9
   1105c:	sbc	x8, x8, x5
   11060:	mov	x9, x8
   11064:	mov	x5, x10
   11068:	cmp	x8, #0x0
   1106c:	ccmp	x7, x10, #0x0, eq  // eq = none
   11070:	b.hi	11090 <mpfr_div@@Base+0x7e0>  // b.pmore
   11074:	add	x0, x0, #0x1
   11078:	cmp	x5, x7
   1107c:	sbc	x9, x9, xzr
   11080:	sub	x5, x5, x7
   11084:	cmp	x9, #0x0
   11088:	ccmp	x7, x5, #0x0, eq  // eq = none
   1108c:	b.ls	11074 <mpfr_div@@Base+0x7c4>  // b.plast
   11090:	and	x7, x6, #0xff
   11094:	and	x7, x7, x0
   11098:	orr	x7, x7, x5
   1109c:	lsr	x9, x0, x6
   110a0:	sub	w23, w23, #0x1
   110a4:	mov	x5, #0x1                   	// #1
   110a8:	lsl	x5, x5, x23
   110ac:	and	x5, x5, x9
   110b0:	and	x1, x1, x9
   110b4:	orr	x1, x1, x7
   110b8:	b	10fcc <mpfr_div@@Base+0x71c>
   110bc:	mov	w2, w23
   110c0:	mov	w1, w26
   110c4:	mov	x0, x22
   110c8:	bl	bf40 <mpfr_overflow@plt>
   110cc:	mov	w23, w0
   110d0:	b	125f0 <mpfr_div@@Base+0x1d40>
   110d4:	cbnz	w26, 110f8 <mpfr_div@@Base+0x848>
   110d8:	sub	x0, x0, #0x1
   110dc:	cmp	x2, x0
   110e0:	b.lt	11110 <mpfr_div@@Base+0x860>  // b.tstop
   110e4:	ldr	x2, [x3]
   110e8:	cmp	x1, #0x0
   110ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   110f0:	ccmp	x2, x0, #0x0, eq  // eq = none
   110f4:	cset	w26, eq  // eq = none
   110f8:	mov	w2, w23
   110fc:	mov	w1, w26
   11100:	mov	x0, x22
   11104:	bl	c3c0 <mpfr_underflow@plt>
   11108:	mov	w23, w0
   1110c:	b	125f0 <mpfr_div@@Base+0x1d40>
   11110:	mov	w26, #0x1                   	// #1
   11114:	b	110f8 <mpfr_div@@Base+0x848>
   11118:	cbnz	w26, 1118c <mpfr_div@@Base+0x8dc>
   1111c:	cbz	x5, 111a0 <mpfr_div@@Base+0x8f0>
   11120:	ldr	x0, [x3]
   11124:	adds	x4, x4, x0
   11128:	b.ne	111d0 <mpfr_div@@Base+0x920>  // b.any
   1112c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11130:	str	x0, [x3]
   11134:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11138:	ldr	x1, [x0, #2544]
   1113c:	add	x0, x0, #0x9f0
   11140:	blr	x1
   11144:	mrs	x1, tpidr_el0
   11148:	ldr	x0, [x1, x0]
   1114c:	cmp	x2, x0
   11150:	b.ge	111d8 <mpfr_div@@Base+0x928>  // b.tcont
   11154:	add	x2, x2, #0x1
   11158:	str	x2, [x22, #16]
   1115c:	ldr	w23, [x22, #8]
   11160:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   11164:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11168:	ldr	x1, [x0, #2576]
   1116c:	add	x0, x0, #0xa10
   11170:	blr	x1
   11174:	mrs	x1, tpidr_el0
   11178:	add	x0, x1, x0
   1117c:	ldr	w1, [x0]
   11180:	orr	w1, w1, #0x8
   11184:	str	w1, [x0]
   11188:	b	125f0 <mpfr_div@@Base+0x1d40>
   1118c:	cmp	w26, #0x1
   11190:	b.eq	111a0 <mpfr_div@@Base+0x8f0>  // b.none
   11194:	add	w0, w26, w23, lsr #31
   11198:	cmp	w0, #0x3
   1119c:	b.ne	11120 <mpfr_div@@Base+0x870>  // b.any
   111a0:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   111a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   111a8:	ldr	x1, [x0, #2576]
   111ac:	add	x0, x0, #0xa10
   111b0:	blr	x1
   111b4:	mrs	x1, tpidr_el0
   111b8:	add	x0, x1, x0
   111bc:	ldr	w1, [x0]
   111c0:	orr	w1, w1, #0x8
   111c4:	str	w1, [x0]
   111c8:	neg	w23, w23
   111cc:	b	125f0 <mpfr_div@@Base+0x1d40>
   111d0:	str	x4, [x3]
   111d4:	b	1115c <mpfr_div@@Base+0x8ac>
   111d8:	ldr	w2, [x22, #8]
   111dc:	mov	w1, w26
   111e0:	mov	x0, x22
   111e4:	bl	bf40 <mpfr_overflow@plt>
   111e8:	mov	w23, w0
   111ec:	b	125f0 <mpfr_div@@Base+0x1d40>
   111f0:	ldr	x8, [x22, #24]
   111f4:	sub	x2, x2, x27
   111f8:	mov	x0, #0x80                  	// #128
   111fc:	sub	x23, x0, x23
   11200:	mov	x10, #0x1                   	// #1
   11204:	lsl	x10, x10, x23
   11208:	sub	x9, x10, #0x1
   1120c:	ldr	x0, [x20, #24]
   11210:	ldr	x4, [x0, #8]
   11214:	ldr	x11, [x0]
   11218:	ldr	x0, [x21, #24]
   1121c:	ldr	x6, [x0, #8]
   11220:	ldr	x13, [x0]
   11224:	cmp	x4, x6
   11228:	b.cc	11238 <mpfr_div@@Base+0x988>  // b.lo, b.ul, b.last
   1122c:	mov	w12, #0x0                   	// #0
   11230:	ccmp	x11, x13, #0x2, eq  // eq = none
   11234:	b.hi	11248 <mpfr_div@@Base+0x998>  // b.pmore
   11238:	subs	x0, x13, x11
   1123c:	sbc	x6, x6, x4
   11240:	mov	x13, x0
   11244:	mov	w12, #0x1                   	// #1
   11248:	cmn	x4, #0x1
   1124c:	b.eq	1147c <mpfr_div@@Base+0xbcc>  // b.none
   11250:	add	x0, x4, #0x1
   11254:	lsr	x3, x0, #55
   11258:	sub	x3, x3, #0x100
   1125c:	lsr	x5, x0, #24
   11260:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x27b0>
   11264:	add	x1, x1, #0x1e0
   11268:	ldr	x7, [x1, x3, lsl #3]
   1126c:	sub	x7, x7, #0x1
   11270:	add	x1, x1, #0x800
   11274:	ldr	x1, [x1, x3, lsl #3]
   11278:	madd	x1, x5, x1, x1
   1127c:	sub	x3, x7, x1, lsr #40
   11280:	madd	x5, x5, x3, x3
   11284:	mov	x1, #0x1000000000000000    	// #1152921504606846976
   11288:	sub	x1, x1, x5
   1128c:	mul	x1, x1, x3
   11290:	lsl	x3, x3, #13
   11294:	add	x1, x3, x1, lsr #47
   11298:	sbfx	x0, x0, #0, #1
   1129c:	and	x0, x0, x1
   112a0:	lsr	x0, x0, #1
   112a4:	lsr	x3, x4, #1
   112a8:	madd	x3, x3, x1, x1
   112ac:	sub	x0, x0, x3
   112b0:	umulh	x0, x1, x0
   112b4:	lsr	x0, x0, #1
   112b8:	add	x1, x0, x1, lsl #31
   112bc:	umulh	x0, x6, x1
   112c0:	add	x0, x6, x0
   112c4:	umulh	x16, x0, x4
   112c8:	umulh	x14, x0, x11
   112cc:	madd	x7, x4, x0, x14
   112d0:	mul	x3, x11, x0
   112d4:	cmp	x3, #0x0
   112d8:	cset	w15, ne  // ne = any
   112dc:	cinc	x5, x7, ne  // ne = any
   112e0:	sub	x3, x13, x5
   112e4:	sub	x6, x6, x16
   112e8:	cmp	x5, #0x0
   112ec:	ccmp	w15, #0x0, #0x4, eq  // eq = none
   112f0:	cset	x5, ne  // ne = any
   112f4:	cmp	x13, x3
   112f8:	cinc	x5, x5, cc  // cc = lo, ul, last
   112fc:	sub	x6, x6, x5
   11300:	cmp	x14, x7
   11304:	cset	x5, hi  // hi = pmore
   11308:	sub	x6, x6, x5
   1130c:	umulh	x5, x3, x1
   11310:	adds	x3, x3, x5
   11314:	adc	x0, x0, x6
   11318:	cbz	x6, 11338 <mpfr_div@@Base+0xa88>
   1131c:	mov	x7, x6
   11320:	mov	x5, x3
   11324:	adds	x5, x5, x1
   11328:	cinc	x0, x0, cs  // cs = hs, nlast
   1132c:	subs	x7, x7, #0x1
   11330:	b.ne	11324 <mpfr_div@@Base+0xa74>  // b.any
   11334:	madd	x3, x1, x6, x3
   11338:	add	x5, x3, #0x15
   1133c:	and	x5, x5, x9, lsr #1
   11340:	mov	x1, #0x1                   	// #1
   11344:	cmp	x5, #0x15
   11348:	b.ls	11484 <mpfr_div@@Base+0xbd4>  // b.plast
   1134c:	cbz	w12, 11368 <mpfr_div@@Base+0xab8>
   11350:	add	x2, x2, #0x1
   11354:	and	x4, x3, #0x1
   11358:	orr	x1, x1, x4
   1135c:	extr	x3, x0, x3, #1
   11360:	lsr	x0, x0, #1
   11364:	orr	x0, x0, #0x8000000000000000
   11368:	sub	w23, w23, #0x1
   1136c:	mov	x4, #0x1                   	// #1
   11370:	lsl	x4, x4, x23
   11374:	and	x5, x4, x3
   11378:	eor	x4, x9, x4
   1137c:	and	x4, x4, x3
   11380:	orr	x1, x4, x1
   11384:	str	x0, [x8, #8]
   11388:	neg	x0, x10
   1138c:	and	x3, x0, x3
   11390:	str	x3, [x8]
   11394:	ldr	w23, [x21, #8]
   11398:	ldr	w0, [x20, #8]
   1139c:	mul	w23, w23, w0
   113a0:	str	w23, [x22, #8]
   113a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   113a8:	ldr	x3, [x0, #2544]
   113ac:	add	x0, x0, #0x9f0
   113b0:	blr	x3
   113b4:	mrs	x3, tpidr_el0
   113b8:	ldr	x0, [x3, x0]
   113bc:	cmp	x0, x2
   113c0:	b.lt	1152c <mpfr_div@@Base+0xc7c>  // b.tstop
   113c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   113c8:	ldr	x3, [x0, #2512]
   113cc:	add	x0, x0, #0x9d0
   113d0:	blr	x3
   113d4:	mrs	x3, tpidr_el0
   113d8:	ldr	x0, [x3, x0]
   113dc:	cmp	x2, x0
   113e0:	b.lt	11544 <mpfr_div@@Base+0xc94>  // b.tstop
   113e4:	str	x2, [x22, #16]
   113e8:	orr	x1, x5, x1
   113ec:	cmp	x1, #0x0
   113f0:	ccmp	w26, #0x5, #0x4, ne  // ne = any
   113f4:	b.eq	12730 <mpfr_div@@Base+0x1e80>  // b.none
   113f8:	cbnz	w26, 11594 <mpfr_div@@Base+0xce4>
   113fc:	cbz	x5, 115a8 <mpfr_div@@Base+0xcf8>
   11400:	ldr	x0, [x8]
   11404:	add	x10, x10, x0
   11408:	str	x10, [x8]
   1140c:	cmp	x10, #0x0
   11410:	ldr	x0, [x8, #8]
   11414:	cinc	x0, x0, eq  // eq = none
   11418:	cbnz	x0, 115d8 <mpfr_div@@Base+0xd28>
   1141c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11420:	str	x0, [x8, #8]
   11424:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11428:	ldr	x1, [x0, #2544]
   1142c:	add	x0, x0, #0x9f0
   11430:	blr	x1
   11434:	mrs	x1, tpidr_el0
   11438:	ldr	x0, [x1, x0]
   1143c:	cmp	x2, x0
   11440:	b.ge	115e0 <mpfr_div@@Base+0xd30>  // b.tcont
   11444:	add	x2, x2, #0x1
   11448:	str	x2, [x22, #16]
   1144c:	ldr	w23, [x22, #8]
   11450:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   11454:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11458:	ldr	x1, [x0, #2576]
   1145c:	add	x0, x0, #0xa10
   11460:	blr	x1
   11464:	mrs	x1, tpidr_el0
   11468:	add	x0, x1, x0
   1146c:	ldr	w1, [x0]
   11470:	orr	w1, w1, #0x8
   11474:	str	w1, [x0]
   11478:	b	125f0 <mpfr_div@@Base+0x1d40>
   1147c:	mov	x1, #0x0                   	// #0
   11480:	b	112bc <mpfr_div@@Base+0xa0c>
   11484:	umulh	x1, x3, x11
   11488:	umulh	x6, x3, x4
   1148c:	mul	x14, x3, x4
   11490:	umulh	x15, x0, x11
   11494:	mul	x7, x0, x11
   11498:	msub	x5, x0, x4, x13
   1149c:	add	x6, x6, x15
   114a0:	sub	x5, x5, x6
   114a4:	adds	x1, x1, x14
   114a8:	cset	x13, cs  // cs = hs, nlast
   114ac:	adds	x1, x1, x7
   114b0:	cinc	x6, x13, cs  // cs = hs, nlast
   114b4:	sub	x5, x5, x6
   114b8:	mneg	x6, x11, x3
   114bc:	cmp	x6, #0x0
   114c0:	cinc	x1, x1, ne  // ne = any
   114c4:	neg	x1, x1
   114c8:	orr	x7, x6, x1
   114cc:	cmp	x7, #0x0
   114d0:	cset	x7, ne  // ne = any
   114d4:	sub	x5, x5, x7
   114d8:	mov	w13, #0x1                   	// #1
   114dc:	b	1150c <mpfr_div@@Base+0xc5c>
   114e0:	adds	x3, x3, #0x1
   114e4:	cinc	x0, x0, eq  // eq = none
   114e8:	mov	w7, w13
   114ec:	cmp	x4, x1
   114f0:	b.hi	114fc <mpfr_div@@Base+0xc4c>  // b.pmore
   114f4:	ccmp	x11, x6, #0x0, eq  // eq = none
   114f8:	cset	w7, hi  // hi = pmore
   114fc:	sub	x5, x5, w7, sxtw
   11500:	subs	x7, x6, x11
   11504:	sbc	x1, x1, x4
   11508:	mov	x6, x7
   1150c:	cmp	x5, #0x0
   11510:	ccmp	x4, x1, #0x0, eq  // eq = none
   11514:	b.cc	114e0 <mpfr_div@@Base+0xc30>  // b.lo, b.ul, b.last
   11518:	cmp	x4, x1
   1151c:	ccmp	x11, x6, #0x2, eq  // eq = none
   11520:	b.ls	114e0 <mpfr_div@@Base+0xc30>  // b.plast
   11524:	orr	x1, x1, x6
   11528:	b	1134c <mpfr_div@@Base+0xa9c>
   1152c:	mov	w2, w23
   11530:	mov	w1, w26
   11534:	mov	x0, x22
   11538:	bl	bf40 <mpfr_overflow@plt>
   1153c:	mov	w23, w0
   11540:	b	125f0 <mpfr_div@@Base+0x1d40>
   11544:	cbnz	w26, 11574 <mpfr_div@@Base+0xcc4>
   11548:	sub	x0, x0, #0x1
   1154c:	cmp	x2, x0
   11550:	b.lt	1158c <mpfr_div@@Base+0xcdc>  // b.tstop
   11554:	ldr	x2, [x8, #8]
   11558:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1155c:	cmp	x2, x0
   11560:	b.ne	11574 <mpfr_div@@Base+0xcc4>  // b.any
   11564:	ldr	x0, [x8]
   11568:	orr	x1, x1, x0
   1156c:	cmp	x1, #0x0
   11570:	cset	w26, eq  // eq = none
   11574:	mov	w2, w23
   11578:	mov	w1, w26
   1157c:	mov	x0, x22
   11580:	bl	c3c0 <mpfr_underflow@plt>
   11584:	mov	w23, w0
   11588:	b	125f0 <mpfr_div@@Base+0x1d40>
   1158c:	mov	w26, #0x1                   	// #1
   11590:	b	11574 <mpfr_div@@Base+0xcc4>
   11594:	cmp	w26, #0x1
   11598:	b.eq	115a8 <mpfr_div@@Base+0xcf8>  // b.none
   1159c:	add	w0, w26, w23, lsr #31
   115a0:	cmp	w0, #0x3
   115a4:	b.ne	11400 <mpfr_div@@Base+0xb50>  // b.any
   115a8:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   115ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   115b0:	ldr	x1, [x0, #2576]
   115b4:	add	x0, x0, #0xa10
   115b8:	blr	x1
   115bc:	mrs	x1, tpidr_el0
   115c0:	add	x0, x1, x0
   115c4:	ldr	w1, [x0]
   115c8:	orr	w1, w1, #0x8
   115cc:	str	w1, [x0]
   115d0:	neg	w23, w23
   115d4:	b	125f0 <mpfr_div@@Base+0x1d40>
   115d8:	str	x0, [x8, #8]
   115dc:	b	1144c <mpfr_div@@Base+0xb9c>
   115e0:	ldr	w2, [x22, #8]
   115e4:	mov	w1, w26
   115e8:	mov	x0, x22
   115ec:	bl	bf40 <mpfr_overflow@plt>
   115f0:	mov	w23, w0
   115f4:	b	125f0 <mpfr_div@@Base+0x1d40>
   115f8:	lsr	x3, x0, #1
   115fc:	orr	x3, x3, #0x8000000000000000
   11600:	str	x3, [x5]
   11604:	and	x3, x0, #0x1
   11608:	add	x2, x2, #0x1
   1160c:	ldr	w23, [x21, #8]
   11610:	ldr	w0, [x20, #8]
   11614:	mul	w23, w23, w0
   11618:	str	w23, [x22, #8]
   1161c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11620:	ldr	x4, [x0, #2544]
   11624:	add	x0, x0, #0x9f0
   11628:	blr	x4
   1162c:	mrs	x4, tpidr_el0
   11630:	ldr	x0, [x4, x0]
   11634:	cmp	x0, x2
   11638:	b.lt	11678 <mpfr_div@@Base+0xdc8>  // b.tstop
   1163c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11640:	ldr	x4, [x0, #2512]
   11644:	add	x0, x0, #0x9d0
   11648:	blr	x4
   1164c:	mrs	x4, tpidr_el0
   11650:	ldr	x0, [x4, x0]
   11654:	cmp	x2, x0
   11658:	b.lt	11690 <mpfr_div@@Base+0xde0>  // b.tstop
   1165c:	str	x2, [x22, #16]
   11660:	orr	x1, x1, x3
   11664:	cmp	x1, #0x0
   11668:	ccmp	w26, #0x5, #0x4, ne  // ne = any
   1166c:	b.ne	116d4 <mpfr_div@@Base+0xe24>  // b.any
   11670:	mov	w23, #0x0                   	// #0
   11674:	b	125f0 <mpfr_div@@Base+0x1d40>
   11678:	mov	w2, w23
   1167c:	mov	w1, w26
   11680:	mov	x0, x22
   11684:	bl	bf40 <mpfr_overflow@plt>
   11688:	mov	w23, w0
   1168c:	b	125f0 <mpfr_div@@Base+0x1d40>
   11690:	cbnz	w26, 116b4 <mpfr_div@@Base+0xe04>
   11694:	sub	x0, x0, #0x1
   11698:	cmp	x2, x0
   1169c:	b.lt	116cc <mpfr_div@@Base+0xe1c>  // b.tstop
   116a0:	ldr	x2, [x5]
   116a4:	cmp	x1, #0x0
   116a8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   116ac:	ccmp	x2, x0, #0x0, eq  // eq = none
   116b0:	cset	w26, eq  // eq = none
   116b4:	mov	w2, w23
   116b8:	mov	w1, w26
   116bc:	mov	x0, x22
   116c0:	bl	c3c0 <mpfr_underflow@plt>
   116c4:	mov	w23, w0
   116c8:	b	125f0 <mpfr_div@@Base+0x1d40>
   116cc:	mov	w26, #0x1                   	// #1
   116d0:	b	116b4 <mpfr_div@@Base+0xe04>
   116d4:	cbnz	w26, 11748 <mpfr_div@@Base+0xe98>
   116d8:	cbz	x3, 1175c <mpfr_div@@Base+0xeac>
   116dc:	ldr	x0, [x5]
   116e0:	adds	x0, x0, #0x1
   116e4:	b.ne	1178c <mpfr_div@@Base+0xedc>  // b.any
   116e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   116ec:	str	x0, [x5]
   116f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   116f4:	ldr	x1, [x0, #2544]
   116f8:	add	x0, x0, #0x9f0
   116fc:	blr	x1
   11700:	mrs	x1, tpidr_el0
   11704:	ldr	x0, [x1, x0]
   11708:	cmp	x2, x0
   1170c:	b.ge	11794 <mpfr_div@@Base+0xee4>  // b.tcont
   11710:	add	x2, x2, #0x1
   11714:	str	x2, [x22, #16]
   11718:	ldr	w23, [x22, #8]
   1171c:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   11720:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11724:	ldr	x1, [x0, #2576]
   11728:	add	x0, x0, #0xa10
   1172c:	blr	x1
   11730:	mrs	x1, tpidr_el0
   11734:	add	x0, x1, x0
   11738:	ldr	w1, [x0]
   1173c:	orr	w1, w1, #0x8
   11740:	str	w1, [x0]
   11744:	b	125f0 <mpfr_div@@Base+0x1d40>
   11748:	cmp	w26, #0x1
   1174c:	b.eq	1175c <mpfr_div@@Base+0xeac>  // b.none
   11750:	add	w0, w26, w23, lsr #31
   11754:	cmp	w0, #0x3
   11758:	b.ne	116dc <mpfr_div@@Base+0xe2c>  // b.any
   1175c:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   11760:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11764:	ldr	x1, [x0, #2576]
   11768:	add	x0, x0, #0xa10
   1176c:	blr	x1
   11770:	mrs	x1, tpidr_el0
   11774:	add	x0, x1, x0
   11778:	ldr	w1, [x0]
   1177c:	orr	w1, w1, #0x8
   11780:	str	w1, [x0]
   11784:	neg	w23, w23
   11788:	b	125f0 <mpfr_div@@Base+0x1d40>
   1178c:	str	x0, [x5]
   11790:	b	11718 <mpfr_div@@Base+0xe68>
   11794:	ldr	w2, [x22, #8]
   11798:	mov	w1, w26
   1179c:	mov	x0, x22
   117a0:	bl	bf40 <mpfr_overflow@plt>
   117a4:	mov	w23, w0
   117a8:	b	125f0 <mpfr_div@@Base+0x1d40>
   117ac:	sub	x2, x2, #0x3f
   117b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   117b4:	ldr	x1, [x0, #2512]
   117b8:	add	x0, x0, #0x9d0
   117bc:	blr	x1
   117c0:	mrs	x1, tpidr_el0
   117c4:	ldr	x0, [x1, x0]
   117c8:	cmp	x2, x0
   117cc:	b.le	10974 <mpfr_div@@Base+0xc4>
   117d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   117d4:	ldr	x1, [x0, #2544]
   117d8:	add	x0, x0, #0x9f0
   117dc:	blr	x1
   117e0:	mrs	x1, tpidr_el0
   117e4:	ldr	x0, [x1, x0]
   117e8:	cmp	x2, x0
   117ec:	b.gt	10974 <mpfr_div@@Base+0xc4>
   117f0:	ldr	w0, [x20, #8]
   117f4:	cmp	w0, #0x0
   117f8:	b.le	11898 <mpfr_div@@Base+0xfe8>
   117fc:	mov	w3, w26
   11800:	ldr	x2, [x25]
   11804:	mov	x1, x21
   11808:	mov	x0, x22
   1180c:	bl	cc60 <mpfr_div_ui@plt>
   11810:	mov	w23, w0
   11814:	ldr	x0, [x22, #16]
   11818:	sub	x27, x0, x27
   1181c:	str	x27, [x22, #16]
   11820:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11824:	ldr	x1, [x0, #2544]
   11828:	add	x0, x0, #0x9f0
   1182c:	blr	x1
   11830:	mrs	x1, tpidr_el0
   11834:	ldr	x1, [x1, x0]
   11838:	sub	x0, x1, #0x3f
   1183c:	cmp	x27, x0
   11840:	b.ge	118d4 <mpfr_div@@Base+0x1024>  // b.tcont
   11844:	add	x27, x27, #0x40
   11848:	str	x27, [x22, #16]
   1184c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11850:	ldr	x2, [x0, #2512]
   11854:	add	x0, x0, #0x9d0
   11858:	blr	x2
   1185c:	mrs	x2, tpidr_el0
   11860:	ldr	x0, [x2, x0]
   11864:	cmp	x27, x0
   11868:	ccmp	x1, x27, #0x1, ge  // ge = tcont
   1186c:	b.lt	118ec <mpfr_div@@Base+0x103c>  // b.tstop
   11870:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   11874:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11878:	ldr	x1, [x0, #2576]
   1187c:	add	x0, x0, #0xa10
   11880:	blr	x1
   11884:	add	x0, x2, x0
   11888:	ldr	w1, [x0]
   1188c:	orr	w1, w1, #0x8
   11890:	str	w1, [x0]
   11894:	b	125f0 <mpfr_div@@Base+0x1d40>
   11898:	ldr	x2, [x25]
   1189c:	mov	w3, #0x3                   	// #3
   118a0:	cmp	w26, #0x2
   118a4:	b.eq	118b4 <mpfr_div@@Base+0x1004>  // b.none
   118a8:	cmp	w26, w3
   118ac:	mov	w3, #0x2                   	// #2
   118b0:	csel	w3, w26, w3, ne  // ne = any
   118b4:	mov	x1, x21
   118b8:	mov	x0, x22
   118bc:	bl	cc60 <mpfr_div_ui@plt>
   118c0:	neg	w23, w0
   118c4:	ldr	w0, [x22, #8]
   118c8:	neg	w0, w0
   118cc:	str	w0, [x22, #8]
   118d0:	b	11814 <mpfr_div@@Base+0xf64>
   118d4:	ldr	w2, [x22, #8]
   118d8:	mov	w1, w26
   118dc:	mov	x0, x22
   118e0:	bl	bf40 <mpfr_overflow@plt>
   118e4:	mov	w23, w0
   118e8:	b	125f0 <mpfr_div@@Base+0x1d40>
   118ec:	mov	w2, w26
   118f0:	mov	w1, w23
   118f4:	mov	x0, x22
   118f8:	bl	cb30 <mpfr_check_range@plt>
   118fc:	mov	w23, w0
   11900:	b	125f0 <mpfr_div@@Base+0x1d40>
   11904:	add	x23, x23, #0x40
   11908:	add	x0, x29, #0xe8
   1190c:	bl	bf90 <mpfr_mpz_init@plt>
   11910:	add	x28, x29, #0xf8
   11914:	mov	x0, x28
   11918:	bl	bf90 <mpfr_mpz_init@plt>
   1191c:	add	x27, x29, #0x108
   11920:	mov	x0, x27
   11924:	bl	bf90 <mpfr_mpz_init@plt>
   11928:	mov	x1, x21
   1192c:	mov	x0, x28
   11930:	bl	cac0 <mpfr_get_z_2exp@plt>
   11934:	str	x0, [x29, #200]
   11938:	mov	x1, x20
   1193c:	mov	x0, x27
   11940:	bl	cac0 <mpfr_get_z_2exp@plt>
   11944:	str	x0, [x29, #184]
   11948:	mov	w1, #0x2                   	// #2
   1194c:	mov	x0, x27
   11950:	bl	cb60 <__gmpz_sizeinbase@plt>
   11954:	mov	x27, x0
   11958:	cmp	x23, x0
   1195c:	b.lt	119f8 <mpfr_div@@Base+0x1148>  // b.tstop
   11960:	mov	w1, #0x2                   	// #2
   11964:	add	x0, x29, #0xf8
   11968:	bl	cb60 <__gmpz_sizeinbase@plt>
   1196c:	add	x27, x23, x27
   11970:	cmp	x0, x27
   11974:	b.gt	11a20 <mpfr_div@@Base+0x1170>
   11978:	b.lt	11a44 <mpfr_div@@Base+0x1194>  // b.tstop
   1197c:	add	x27, x29, #0xe8
   11980:	add	x2, x29, #0x108
   11984:	add	x1, x29, #0xf8
   11988:	mov	x0, x27
   1198c:	bl	bb30 <__gmpz_tdiv_q@plt>
   11990:	mov	w1, #0x2                   	// #2
   11994:	mov	x0, x27
   11998:	bl	cb60 <__gmpz_sizeinbase@plt>
   1199c:	sub	x23, x0, x23
   119a0:	add	x28, x23, #0x1
   119a4:	mov	x1, x28
   119a8:	mov	x0, x27
   119ac:	bl	ba90 <__gmpz_scan1@plt>
   119b0:	add	x23, x23, #0x40
   119b4:	cmp	w26, #0x0
   119b8:	cset	x1, eq  // eq = none
   119bc:	sub	x23, x23, x1
   119c0:	cmp	x0, x23
   119c4:	b.cs	119dc <mpfr_div@@Base+0x112c>  // b.hs, b.nlast
   119c8:	mov	x1, x28
   119cc:	add	x0, x29, #0xe8
   119d0:	bl	c4b0 <__gmpz_scan0@plt>
   119d4:	cmp	x23, x0
   119d8:	b.hi	11a68 <mpfr_div@@Base+0x11b8>  // b.pmore
   119dc:	add	x0, x29, #0xe8
   119e0:	bl	c170 <mpfr_mpz_clear@plt>
   119e4:	add	x0, x29, #0xf8
   119e8:	bl	c170 <mpfr_mpz_clear@plt>
   119ec:	add	x0, x29, #0x108
   119f0:	bl	c170 <mpfr_mpz_clear@plt>
   119f4:	b	10980 <mpfr_div@@Base+0xd0>
   119f8:	sub	x27, x0, x23
   119fc:	add	x0, x29, #0x108
   11a00:	mov	x2, x27
   11a04:	mov	x1, x0
   11a08:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   11a0c:	ldr	x0, [x29, #184]
   11a10:	add	x0, x0, x27
   11a14:	str	x0, [x29, #184]
   11a18:	mov	x27, x23
   11a1c:	b	11960 <mpfr_div@@Base+0x10b0>
   11a20:	sub	x27, x0, x27
   11a24:	add	x0, x29, #0xf8
   11a28:	mov	x2, x27
   11a2c:	mov	x1, x0
   11a30:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   11a34:	ldr	x0, [x29, #200]
   11a38:	add	x0, x0, x27
   11a3c:	str	x0, [x29, #200]
   11a40:	b	1197c <mpfr_div@@Base+0x10cc>
   11a44:	sub	x27, x27, x0
   11a48:	add	x0, x29, #0xf8
   11a4c:	mov	x2, x27
   11a50:	mov	x1, x0
   11a54:	bl	c200 <__gmpz_mul_2exp@plt>
   11a58:	ldr	x0, [x29, #200]
   11a5c:	sub	x0, x0, x27
   11a60:	str	x0, [x29, #200]
   11a64:	b	1197c <mpfr_div@@Base+0x10cc>
   11a68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11a6c:	ldr	x1, [x0, #2576]
   11a70:	add	x0, x0, #0xa10
   11a74:	blr	x1
   11a78:	mrs	x1, tpidr_el0
   11a7c:	add	x2, x1, x0
   11a80:	str	x2, [x29, #144]
   11a84:	ldr	w4, [x1, x0]
   11a88:	str	w4, [x29, #180]
   11a8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11a90:	ldr	x3, [x0, #2512]
   11a94:	add	x0, x0, #0x9d0
   11a98:	blr	x3
   11a9c:	add	x27, x1, x0
   11aa0:	ldr	x2, [x1, x0]
   11aa4:	str	x2, [x29, #160]
   11aa8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11aac:	ldr	x3, [x0, #2544]
   11ab0:	add	x0, x0, #0x9f0
   11ab4:	blr	x3
   11ab8:	add	x28, x1, x0
   11abc:	ldr	x3, [x1, x0]
   11ac0:	str	x3, [x29, #152]
   11ac4:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   11ac8:	str	x1, [x27]
   11acc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   11ad0:	str	x1, [x28]
   11ad4:	mov	w2, w26
   11ad8:	add	x1, x29, #0xe8
   11adc:	mov	x0, x22
   11ae0:	bl	c240 <mpfr_set_z@plt>
   11ae4:	mov	w23, w0
   11ae8:	ldr	x0, [x29, #144]
   11aec:	ldr	w4, [x29, #180]
   11af0:	str	w4, [x0]
   11af4:	ldr	x2, [x29, #160]
   11af8:	str	x2, [x27]
   11afc:	ldr	x3, [x29, #152]
   11b00:	str	x3, [x28]
   11b04:	ldr	x1, [x22, #16]
   11b08:	mov	x0, #0x4                   	// #4
   11b0c:	movk	x0, #0x8000, lsl #48
   11b10:	cmp	x1, x0
   11b14:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   11b18:	ccmp	x1, x0, #0x4, ge  // ge = tcont
   11b1c:	cset	w27, eq  // eq = none
   11b20:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   11b24:	cmp	x1, x0
   11b28:	csinc	w27, w27, wzr, ne  // ne = any
   11b2c:	ldr	x0, [x29, #200]
   11b30:	ldr	x5, [x29, #184]
   11b34:	sub	x0, x0, x5
   11b38:	add	x0, x0, x1
   11b3c:	str	x0, [x22, #16]
   11b40:	cmp	x2, x0
   11b44:	ccmp	x3, x0, #0x1, le
   11b48:	b.lt	11b8c <mpfr_div@@Base+0x12dc>  // b.tstop
   11b4c:	cbz	w23, 11b6c <mpfr_div@@Base+0x12bc>
   11b50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   11b54:	ldr	x1, [x0, #2576]
   11b58:	add	x0, x0, #0xa10
   11b5c:	blr	x1
   11b60:	orr	w1, w4, #0x8
   11b64:	mrs	x2, tpidr_el0
   11b68:	str	w1, [x2, x0]
   11b6c:	add	x0, x29, #0xe8
   11b70:	bl	c170 <mpfr_mpz_clear@plt>
   11b74:	add	x0, x29, #0xf8
   11b78:	bl	c170 <mpfr_mpz_clear@plt>
   11b7c:	add	x0, x29, #0x108
   11b80:	bl	c170 <mpfr_mpz_clear@plt>
   11b84:	cbz	w27, 125f0 <mpfr_div@@Base+0x1d40>
   11b88:	b	10980 <mpfr_div@@Base+0xd0>
   11b8c:	mov	w2, w26
   11b90:	mov	w1, w23
   11b94:	mov	x0, x22
   11b98:	bl	cb30 <mpfr_check_range@plt>
   11b9c:	mov	w23, w0
   11ba0:	b	11b6c <mpfr_div@@Base+0x12bc>
   11ba4:	ldr	x1, [x29, #112]
   11ba8:	ldr	x5, [x29, #192]
   11bac:	cmp	x19, #0x0
   11bb0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   11bb4:	b.eq	11bec <mpfr_div@@Base+0x133c>  // b.none
   11bb8:	sub	x19, x19, #0x1
   11bbc:	sub	x1, x1, #0x1
   11bc0:	ldr	x2, [x5, x19, lsl #3]
   11bc4:	ldr	x0, [x25, x1, lsl #3]
   11bc8:	cmp	x2, x0
   11bcc:	b.eq	11bac <mpfr_div@@Base+0x12fc>  // b.none
   11bd0:	ldr	x0, [x29, #192]
   11bd4:	ldr	x2, [x0, x19, lsl #3]
   11bd8:	ldr	x0, [x25, x1, lsl #3]
   11bdc:	cmp	x0, x2
   11be0:	cset	w0, cc  // cc = lo, ul, last
   11be4:	str	w0, [x29, #180]
   11be8:	b	109d4 <mpfr_div@@Base+0x124>
   11bec:	ldr	x0, [x29, #192]
   11bf0:	ldr	x2, [x0, x19, lsl #3]
   11bf4:	ldr	x0, [x25, x1, lsl #3]
   11bf8:	cmp	x2, x0
   11bfc:	b.ne	11bdc <mpfr_div@@Base+0x132c>  // b.any
   11c00:	mov	w0, #0x1                   	// #1
   11c04:	str	w0, [x29, #180]
   11c08:	cbz	x1, 109d4 <mpfr_div@@Base+0x124>
   11c0c:	mov	x0, x25
   11c10:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   11c14:	cmp	w0, #0x0
   11c18:	cset	w0, eq  // eq = none
   11c1c:	str	w0, [x29, #180]
   11c20:	b	109d4 <mpfr_div@@Base+0x124>
   11c24:	ldr	x0, [x29, #120]
   11c28:	add	x19, x0, #0x2
   11c2c:	lsl	x20, x19, #4
   11c30:	cmp	x20, #0x4, lsl #12
   11c34:	b.hi	11c78 <mpfr_div@@Base+0x13c8>  // b.pmore
   11c38:	sub	sp, sp, x20
   11c3c:	mov	x21, sp
   11c40:	lsl	x28, x19, #1
   11c44:	ldr	x0, [x29, #208]
   11c48:	cmp	x0, x19, lsl #1
   11c4c:	b.lt	11c8c <mpfr_div@@Base+0x13dc>  // b.tstop
   11c50:	ldr	x0, [x29, #200]
   11c54:	sub	x1, x0, x28
   11c58:	ldr	x0, [x29, #192]
   11c5c:	add	x1, x0, x1, lsl #3
   11c60:	cmp	x1, x21
   11c64:	b.eq	11cc4 <mpfr_div@@Base+0x1414>  // b.none
   11c68:	mov	x2, x20
   11c6c:	mov	x0, x21
   11c70:	bl	ba10 <memcpy@plt>
   11c74:	b	11cc4 <mpfr_div@@Base+0x1414>
   11c78:	mov	x1, x20
   11c7c:	add	x0, x29, #0x118
   11c80:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11c84:	mov	x21, x0
   11c88:	b	11c40 <mpfr_div@@Base+0x1390>
   11c8c:	ldr	x0, [x29, #200]
   11c90:	sub	x0, x28, x0
   11c94:	add	x0, x21, x0, lsl #3
   11c98:	ldr	x1, [x29, #192]
   11c9c:	cmp	x0, x1
   11ca0:	b.eq	11cac <mpfr_div@@Base+0x13fc>  // b.none
   11ca4:	mov	x2, x23
   11ca8:	bl	ba10 <memcpy@plt>
   11cac:	ldr	x0, [x29, #208]
   11cb0:	sub	x2, x28, x0
   11cb4:	lsl	x2, x2, #3
   11cb8:	mov	w1, #0x0                   	// #0
   11cbc:	mov	x0, x21
   11cc0:	bl	c110 <memset@plt>
   11cc4:	cmp	x24, x19
   11cc8:	b.lt	11dac <mpfr_div@@Base+0x14fc>  // b.tstop
   11ccc:	sub	x0, x24, x19
   11cd0:	add	x0, x25, x0, lsl #3
   11cd4:	str	x0, [x29, #200]
   11cd8:	lsl	x0, x19, #3
   11cdc:	str	x0, [x29, #160]
   11ce0:	cmp	x0, #0x4, lsl #12
   11ce4:	b.hi	11e14 <mpfr_div@@Base+0x1564>  // b.pmore
   11ce8:	add	x0, x0, #0xf
   11cec:	and	x0, x0, #0xfffffffffffffff0
   11cf0:	sub	sp, sp, x0
   11cf4:	mov	x20, sp
   11cf8:	mov	x3, x19
   11cfc:	ldr	x2, [x29, #200]
   11d00:	mov	x1, x21
   11d04:	mov	x0, x20
   11d08:	bl	c140 <mpfr_divhigh_n@plt>
   11d0c:	add	x28, x28, #0x1
   11d10:	clz	x28, x28
   11d14:	lsl	x21, x19, #6
   11d18:	mov	w1, #0x40                  	// #64
   11d1c:	sub	w28, w1, w28
   11d20:	sub	x21, x21, w28, sxtw
   11d24:	cmp	x0, #0x1
   11d28:	b.eq	11e28 <mpfr_div@@Base+0x1578>  // b.none
   11d2c:	cmp	w26, #0x0
   11d30:	ldr	x3, [x22]
   11d34:	cinc	x3, x3, eq  // eq = none
   11d38:	mov	x2, x21
   11d3c:	mov	x1, x19
   11d40:	mov	x0, x20
   11d44:	bl	c370 <mpfr_round_p@plt>
   11d48:	cbz	w0, 10a30 <mpfr_div@@Base+0x180>
   11d4c:	add	x1, x20, #0x8
   11d50:	ldr	x0, [x29, #168]
   11d54:	cmp	x1, x0
   11d58:	b.eq	11d68 <mpfr_div@@Base+0x14b8>  // b.none
   11d5c:	ldr	x2, [x29, #216]
   11d60:	lsl	x2, x2, #3
   11d64:	bl	ba10 <memcpy@plt>
   11d68:	mov	x0, #0xffffffffffffffff    	// #-1
   11d6c:	ldr	w3, [x29, #184]
   11d70:	lsl	x1, x0, x3
   11d74:	ldr	x2, [x29, #168]
   11d78:	ldr	x0, [x2]
   11d7c:	and	x0, x0, x1
   11d80:	str	x0, [x2]
   11d84:	cbnz	w26, 11e60 <mpfr_div@@Base+0x15b0>
   11d88:	cmp	w3, #0x0
   11d8c:	b.le	11e54 <mpfr_div@@Base+0x15a4>
   11d90:	sub	w0, w3, #0x1
   11d94:	ldr	x1, [x20, #8]
   11d98:	lsr	x0, x1, x0
   11d9c:	and	x0, x0, #0x1
   11da0:	mov	w23, #0xffffffff            	// #-1
   11da4:	cbz	x0, 12574 <mpfr_div@@Base+0x1cc4>
   11da8:	b	10bd0 <mpfr_div@@Base+0x320>
   11dac:	lsl	x1, x19, #3
   11db0:	cmp	x1, #0x4, lsl #12
   11db4:	b.hi	11e04 <mpfr_div@@Base+0x1554>  // b.pmore
   11db8:	add	x0, x1, #0xf
   11dbc:	and	x0, x0, #0xfffffffffffffff0
   11dc0:	sub	sp, sp, x0
   11dc4:	mov	x0, sp
   11dc8:	str	x0, [x29, #200]
   11dcc:	sub	x0, x19, x24
   11dd0:	ldr	x1, [x29, #200]
   11dd4:	add	x0, x1, x0, lsl #3
   11dd8:	cmp	x0, x25
   11ddc:	b.eq	11dec <mpfr_div@@Base+0x153c>  // b.none
   11de0:	ldr	x2, [x29, #104]
   11de4:	mov	x1, x25
   11de8:	bl	ba10 <memcpy@plt>
   11dec:	sub	x2, x19, x24
   11df0:	lsl	x2, x2, #3
   11df4:	mov	w1, #0x0                   	// #0
   11df8:	ldr	x0, [x29, #200]
   11dfc:	bl	c110 <memset@plt>
   11e00:	b	11cd8 <mpfr_div@@Base+0x1428>
   11e04:	add	x0, x29, #0x118
   11e08:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11e0c:	str	x0, [x29, #200]
   11e10:	b	11dcc <mpfr_div@@Base+0x151c>
   11e14:	ldr	x1, [x29, #160]
   11e18:	add	x0, x29, #0x118
   11e1c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11e20:	mov	x20, x0
   11e24:	b	11cf8 <mpfr_div@@Base+0x1448>
   11e28:	mov	w3, #0x1                   	// #1
   11e2c:	mov	x2, x19
   11e30:	mov	x1, x20
   11e34:	mov	x0, x20
   11e38:	bl	bce0 <__gmpn_rshift@plt>
   11e3c:	ldr	x0, [x29, #160]
   11e40:	sub	x0, x0, #0x8
   11e44:	ldr	x1, [x20, x0]
   11e48:	orr	x1, x1, #0x8000000000000000
   11e4c:	str	x1, [x20, x0]
   11e50:	b	11d2c <mpfr_div@@Base+0x147c>
   11e54:	ldr	x0, [x20]
   11e58:	lsr	x0, x0, #63
   11e5c:	b	11da0 <mpfr_div@@Base+0x14f0>
   11e60:	ldr	w0, [x29, #152]
   11e64:	mov	w23, #0xffffffff            	// #-1
   11e68:	cbnz	w0, 12574 <mpfr_div@@Base+0x1cc4>
   11e6c:	b	10bd0 <mpfr_div@@Base+0x320>
   11e70:	ldr	x0, [x29, #120]
   11e74:	add	x19, x0, #0x2
   11e78:	lsl	x1, x19, #3
   11e7c:	cmp	x1, #0x4, lsl #12
   11e80:	b.hi	11e98 <mpfr_div@@Base+0x15e8>  // b.pmore
   11e84:	add	x1, x1, #0xf
   11e88:	and	x1, x1, #0xfffffffffffffff0
   11e8c:	sub	sp, sp, x1
   11e90:	mov	x20, sp
   11e94:	b	10a44 <mpfr_div@@Base+0x194>
   11e98:	add	x0, x29, #0x118
   11e9c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11ea0:	mov	x20, x0
   11ea4:	b	10a44 <mpfr_div@@Base+0x194>
   11ea8:	add	x0, x29, #0x118
   11eac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11eb0:	str	x0, [x29, #200]
   11eb4:	b	10a64 <mpfr_div@@Base+0x1b4>
   11eb8:	lsl	x0, x21, #3
   11ebc:	sub	x23, x0, #0x8
   11ec0:	mov	w3, #0x1                   	// #1
   11ec4:	ldr	x2, [x29, #208]
   11ec8:	ldr	x1, [x29, #192]
   11ecc:	ldr	x21, [x29, #200]
   11ed0:	add	x0, x21, x0
   11ed4:	bl	bce0 <__gmpn_rshift@plt>
   11ed8:	str	x0, [x21, x23]
   11edc:	str	xzr, [x29, #128]
   11ee0:	b	10ab4 <mpfr_div@@Base+0x204>
   11ee4:	ldr	x0, [x29, #208]
   11ee8:	ldr	x1, [x29, #160]
   11eec:	sub	x21, x0, x1
   11ef0:	ldr	w0, [x29, #180]
   11ef4:	cbnz	w0, 11f34 <mpfr_div@@Base+0x1684>
   11ef8:	ldr	x0, [x29, #192]
   11efc:	add	x1, x0, x21, lsl #3
   11f00:	ldr	x0, [x29, #200]
   11f04:	cmp	x1, x0
   11f08:	b.eq	11f14 <mpfr_div@@Base+0x1664>  // b.none
   11f0c:	lsl	x2, x19, #4
   11f10:	bl	ba10 <memcpy@plt>
   11f14:	mov	x1, x21
   11f18:	ldr	x0, [x29, #192]
   11f1c:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   11f20:	cmp	w0, #0x0
   11f24:	cset	w1, ne  // ne = any
   11f28:	sxtw	x0, w1
   11f2c:	str	x0, [x29, #128]
   11f30:	b	10ab4 <mpfr_div@@Base+0x204>
   11f34:	mov	w3, #0x1                   	// #1
   11f38:	mov	x2, x1
   11f3c:	ldr	x0, [x29, #192]
   11f40:	add	x1, x0, x21, lsl #3
   11f44:	ldr	x0, [x29, #200]
   11f48:	bl	bce0 <__gmpn_rshift@plt>
   11f4c:	ldr	w1, [x29, #180]
   11f50:	cbnz	x0, 11f28 <mpfr_div@@Base+0x1678>
   11f54:	b	11f14 <mpfr_div@@Base+0x1664>
   11f58:	lsl	x1, x19, #3
   11f5c:	cmp	x1, #0x4, lsl #12
   11f60:	b.hi	11f90 <mpfr_div@@Base+0x16e0>  // b.pmore
   11f64:	add	x1, x1, #0xf
   11f68:	and	x1, x1, #0xfffffffffffffff0
   11f6c:	sub	sp, sp, x1
   11f70:	mov	x21, sp
   11f74:	cmp	x21, x25
   11f78:	b.eq	11fa0 <mpfr_div@@Base+0x16f0>  // b.none
   11f7c:	ldr	x2, [x29, #104]
   11f80:	mov	x1, x25
   11f84:	mov	x0, x21
   11f88:	bl	ba10 <memcpy@plt>
   11f8c:	b	10acc <mpfr_div@@Base+0x21c>
   11f90:	add	x0, x29, #0x118
   11f94:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11f98:	mov	x21, x0
   11f9c:	b	11f74 <mpfr_div@@Base+0x16c4>
   11fa0:	mov	x21, x25
   11fa4:	b	10acc <mpfr_div@@Base+0x21c>
   11fa8:	sub	x2, x19, x24
   11fac:	mov	x21, x25
   11fb0:	mov	x28, #0x0                   	// #0
   11fb4:	b	10ae4 <mpfr_div@@Base+0x234>
   11fb8:	add	x1, x20, #0x8
   11fbc:	ldr	x0, [x29, #168]
   11fc0:	cmp	x1, x0
   11fc4:	b.eq	11fd4 <mpfr_div@@Base+0x1724>  // b.none
   11fc8:	ldr	x2, [x29, #216]
   11fcc:	lsl	x2, x2, #3
   11fd0:	bl	ba10 <memcpy@plt>
   11fd4:	ldr	x28, [x20]
   11fd8:	mov	w1, #0x40                  	// #64
   11fdc:	b	10b54 <mpfr_div@@Base+0x2a4>
   11fe0:	cmp	x21, #0x0
   11fe4:	ldr	w1, [x29, #152]
   11fe8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   11fec:	b.eq	12614 <mpfr_div@@Base+0x1d64>  // b.none
   11ff0:	and	x21, x0, #0xff
   11ff4:	str	xzr, [x29, #136]
   11ff8:	b	10b94 <mpfr_div@@Base+0x2e4>
   11ffc:	mov	w23, #0x0                   	// #0
   12000:	cbz	x21, 12574 <mpfr_div@@Base+0x1cc4>
   12004:	cbnz	w26, 120ec <mpfr_div@@Base+0x183c>
   12008:	sub	w1, w1, #0x1
   1200c:	mov	x21, #0x1                   	// #1
   12010:	lsl	x1, x21, x1
   12014:	and	x0, x1, x28
   12018:	str	x0, [x29, #136]
   1201c:	bic	x21, x28, x1
   12020:	cmp	x21, #0x1
   12024:	b.hi	10b94 <mpfr_div@@Base+0x2e4>  // b.pmore
   12028:	ldr	x0, [x29, #104]
   1202c:	cmp	x0, #0x4, lsl #12
   12030:	b.hi	120f8 <mpfr_div@@Base+0x1848>  // b.pmore
   12034:	add	x0, x0, #0xf
   12038:	and	x0, x0, #0xfffffffffffffff0
   1203c:	sub	sp, sp, x0
   12040:	mov	x23, sp
   12044:	sub	x24, x24, x19
   12048:	ldr	x0, [x20]
   1204c:	eor	x0, x0, x28
   12050:	str	x0, [x20]
   12054:	cmp	x19, x24
   12058:	b.lt	1210c <mpfr_div@@Base+0x185c>  // b.tstop
   1205c:	mov	x4, x24
   12060:	mov	x3, x25
   12064:	mov	x2, x19
   12068:	mov	x1, x20
   1206c:	mov	x0, x23
   12070:	bl	c7a0 <__gmpn_mul@plt>
   12074:	ldr	x0, [x29, #96]
   12078:	cbnz	x0, 12128 <mpfr_div@@Base+0x1878>
   1207c:	ldr	x0, [x20]
   12080:	eor	x28, x0, x28
   12084:	str	x28, [x20]
   12088:	sub	x0, x19, #0x1
   1208c:	add	x20, x23, x24, lsl #3
   12090:	ldr	x3, [x29, #200]
   12094:	ldr	x1, [x20, x0, lsl #3]
   12098:	ldr	x2, [x3, x0, lsl #3]
   1209c:	cmp	x2, x1
   120a0:	b.ne	121bc <mpfr_div@@Base+0x190c>  // b.any
   120a4:	sub	x0, x0, #0x1
   120a8:	cmn	x0, #0x1
   120ac:	b.ne	12094 <mpfr_div@@Base+0x17e4>  // b.any
   120b0:	ldr	x0, [x29, #160]
   120b4:	ldr	x1, [x29, #208]
   120b8:	cmp	x0, x1
   120bc:	b.gt	1243c <mpfr_div@@Base+0x1b8c>
   120c0:	sub	x0, x1, x0
   120c4:	cmp	x0, x24
   120c8:	b.gt	12364 <mpfr_div@@Base+0x1ab4>
   120cc:	sub	x1, x24, x0
   120d0:	cmp	x0, #0x0
   120d4:	b.le	12248 <mpfr_div@@Base+0x1998>
   120d8:	add	x4, x23, x1, lsl #3
   120dc:	ldr	x7, [x29, #192]
   120e0:	add	x5, x7, #0x8
   120e4:	ldr	w6, [x29, #180]
   120e8:	b	121e8 <mpfr_div@@Base+0x1938>
   120ec:	mov	x21, x28
   120f0:	str	xzr, [x29, #136]
   120f4:	b	12020 <mpfr_div@@Base+0x1770>
   120f8:	ldr	x1, [x29, #104]
   120fc:	add	x0, x29, #0x118
   12100:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12104:	mov	x23, x0
   12108:	b	12044 <mpfr_div@@Base+0x1794>
   1210c:	mov	x4, x19
   12110:	mov	x3, x20
   12114:	mov	x2, x24
   12118:	mov	x1, x25
   1211c:	mov	x0, x23
   12120:	bl	c7a0 <__gmpn_mul@plt>
   12124:	b	12074 <mpfr_div@@Base+0x17c4>
   12128:	add	x0, x23, x19, lsl #3
   1212c:	mov	x3, x24
   12130:	mov	x2, x25
   12134:	mov	x1, x0
   12138:	bl	c5a0 <__gmpn_add_n@plt>
   1213c:	ldr	x1, [x20]
   12140:	eor	x28, x1, x28
   12144:	str	x28, [x20]
   12148:	cbz	x0, 12088 <mpfr_div@@Base+0x17d8>
   1214c:	cbnz	w26, 1252c <mpfr_div@@Base+0x1c7c>
   12150:	ldr	w23, [x29, #184]
   12154:	cmp	w23, #0x1
   12158:	b.ne	12518 <mpfr_div@@Base+0x1c68>  // b.any
   1215c:	ldr	x0, [x29, #136]
   12160:	cbnz	x0, 12698 <mpfr_div@@Base+0x1de8>
   12164:	str	w26, [x29, #184]
   12168:	mov	x0, #0x1                   	// #1
   1216c:	ldrb	w1, [x29, #184]
   12170:	lsl	x0, x0, x1
   12174:	ldr	x3, [x29, #168]
   12178:	ldr	x2, [x3]
   1217c:	sub	x1, x2, x0
   12180:	str	x1, [x3]
   12184:	mov	x1, #0x0                   	// #0
   12188:	cmp	x0, x2
   1218c:	b.ls	12624 <mpfr_div@@Base+0x1d74>  // b.plast
   12190:	mov	x0, x3
   12194:	ldr	x1, [x29, #120]
   12198:	add	x3, x3, x1, lsl #3
   1219c:	cmp	x0, x3
   121a0:	b.eq	12620 <mpfr_div@@Base+0x1d70>  // b.none
   121a4:	ldr	x1, [x0, #8]
   121a8:	sub	x2, x1, #0x1
   121ac:	str	x2, [x0, #8]!
   121b0:	cbz	x1, 1219c <mpfr_div@@Base+0x18ec>
   121b4:	mov	x1, #0x0                   	// #0
   121b8:	b	12624 <mpfr_div@@Base+0x1d74>
   121bc:	b.cc	12270 <mpfr_div@@Base+0x19c0>  // b.lo, b.ul, b.last
   121c0:	ldr	w0, [x29, #152]
   121c4:	mov	x21, #0x1                   	// #1
   121c8:	cbz	w0, 10ba8 <mpfr_div@@Base+0x2f8>
   121cc:	mov	x21, #0x1                   	// #1
   121d0:	b	12564 <mpfr_div@@Base+0x1cb4>
   121d4:	ldr	x2, [x7, x0, lsl #3]
   121d8:	b	121fc <mpfr_div@@Base+0x194c>
   121dc:	cmp	x0, #0x0
   121e0:	ccmp	x3, x2, #0x0, gt
   121e4:	b.ne	1223c <mpfr_div@@Base+0x198c>  // b.any
   121e8:	sub	x0, x0, #0x1
   121ec:	cbz	w6, 121d4 <mpfr_div@@Base+0x1924>
   121f0:	ldr	x2, [x5, x0, lsl #3]
   121f4:	ldr	x3, [x7, x0, lsl #3]
   121f8:	extr	x2, x2, x3, #1
   121fc:	ldr	x3, [x4, x0, lsl #3]
   12200:	cmp	x3, x2
   12204:	b.ls	121dc <mpfr_div@@Base+0x192c>  // b.plast
   12208:	mov	w2, #0x1                   	// #1
   1220c:	ldr	w0, [x29, #180]
   12210:	cbz	w0, 12784 <mpfr_div@@Base+0x1ed4>
   12214:	ldr	x0, [x29, #192]
   12218:	ldr	x0, [x0]
   1221c:	lsl	x0, x0, #63
   12220:	cmp	w2, #0x0
   12224:	cset	w3, eq  // eq = none
   12228:	cmp	x1, #0x0
   1222c:	ccmp	w3, #0x0, #0x4, gt
   12230:	b.eq	12354 <mpfr_div@@Base+0x1aa4>  // b.none
   12234:	mov	x3, #0x0                   	// #0
   12238:	b	12260 <mpfr_div@@Base+0x19b0>
   1223c:	cmp	x3, x2
   12240:	csetm	w2, cc  // cc = lo, ul, last
   12244:	b	1220c <mpfr_div@@Base+0x195c>
   12248:	mov	w2, #0x0                   	// #0
   1224c:	b	1220c <mpfr_div@@Base+0x195c>
   12250:	cmp	x1, #0x0
   12254:	ccmp	x0, x2, #0x0, gt
   12258:	b.ne	12348 <mpfr_div@@Base+0x1a98>  // b.any
   1225c:	mov	x0, x3
   12260:	sub	x1, x1, #0x1
   12264:	ldr	x2, [x23, x1, lsl #3]
   12268:	cmp	x0, x2
   1226c:	b.cs	12250 <mpfr_div@@Base+0x19a0>  // b.hs, b.nlast
   12270:	ldr	x0, [x29, #128]
   12274:	cbz	x0, 12308 <mpfr_div@@Base+0x1a58>
   12278:	ldr	x0, [x29, #208]
   1227c:	ldr	x1, [x29, #160]
   12280:	sub	x2, x0, x1
   12284:	cmp	x24, x2
   12288:	b.ge	1245c <mpfr_div@@Base+0x1bac>  // b.tcont
   1228c:	sub	x28, x2, x24
   12290:	ldr	w0, [x29, #180]
   12294:	cbz	w0, 12760 <mpfr_div@@Base+0x1eb0>
   12298:	ldr	x0, [x29, #192]
   1229c:	ldr	x3, [x0, x28, lsl #3]
   122a0:	and	x3, x3, #0x1
   122a4:	mov	w0, #0x1                   	// #1
   122a8:	cbz	x3, 1276c <mpfr_div@@Base+0x1ebc>
   122ac:	sxtw	x0, w0
   122b0:	str	x0, [x29, #128]
   122b4:	ldr	w4, [x29, #180]
   122b8:	mov	x3, x0
   122bc:	mov	x2, x24
   122c0:	ldr	x0, [x29, #192]
   122c4:	add	x1, x0, x28, lsl #3
   122c8:	mov	x0, x23
   122cc:	bl	1083c <mpfr_div_2ui@@Base+0x44c>
   122d0:	mov	x1, x0
   122d4:	ldr	x2, [x20]
   122d8:	sub	x0, x2, x1
   122dc:	str	x0, [x20]
   122e0:	mov	x0, #0x1                   	// #1
   122e4:	cmp	x1, x2
   122e8:	b.ls	12308 <mpfr_div@@Base+0x1a58>  // b.plast
   122ec:	cmp	x19, x0
   122f0:	b.eq	12308 <mpfr_div@@Base+0x1a58>  // b.none
   122f4:	ldr	x1, [x20, x0, lsl #3]
   122f8:	sub	x2, x1, #0x1
   122fc:	str	x2, [x20, x0, lsl #3]
   12300:	add	x0, x0, #0x1
   12304:	cbz	x1, 122ec <mpfr_div@@Base+0x1a3c>
   12308:	mov	x3, x19
   1230c:	ldr	x2, [x29, #200]
   12310:	mov	x1, x20
   12314:	mov	x0, x20
   12318:	bl	be60 <__gmpn_sub_n@plt>
   1231c:	ldr	x2, [x29, #112]
   12320:	ldr	x1, [x23, x2, lsl #3]
   12324:	ldr	x0, [x25, x2, lsl #3]
   12328:	cmp	x1, x0
   1232c:	b.ne	124c4 <mpfr_div@@Base+0x1c14>  // b.any
   12330:	subs	x2, x2, #0x1
   12334:	b.pl	12320 <mpfr_div@@Base+0x1a70>  // b.nfrst
   12338:	ldr	x0, [x29, #128]
   1233c:	cbnz	x0, 1214c <mpfr_div@@Base+0x189c>
   12340:	mov	w23, #0x0                   	// #0
   12344:	b	124cc <mpfr_div@@Base+0x1c1c>
   12348:	cmp	x0, x2
   1234c:	csetm	w2, hi  // hi = pmore
   12350:	b	12454 <mpfr_div@@Base+0x1ba4>
   12354:	cmp	x0, #0x0
   12358:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1235c:	b.eq	1244c <mpfr_div@@Base+0x1b9c>  // b.none
   12360:	b	121c0 <mpfr_div@@Base+0x1910>
   12364:	sub	x0, x0, x24
   12368:	cmp	x24, #0x0
   1236c:	b.le	123c0 <mpfr_div@@Base+0x1b10>
   12370:	ldr	x1, [x29, #192]
   12374:	add	x4, x1, x0, lsl #3
   12378:	add	x5, x4, #0x8
   1237c:	mov	x1, x24
   12380:	ldr	w6, [x29, #180]
   12384:	b	12394 <mpfr_div@@Base+0x1ae4>
   12388:	ldr	x2, [x4, x1, lsl #3]
   1238c:	b	123a8 <mpfr_div@@Base+0x1af8>
   12390:	cbz	x1, 123c0 <mpfr_div@@Base+0x1b10>
   12394:	sub	x1, x1, #0x1
   12398:	cbz	w6, 12388 <mpfr_div@@Base+0x1ad8>
   1239c:	ldr	x2, [x5, x1, lsl #3]
   123a0:	ldr	x3, [x4, x1, lsl #3]
   123a4:	extr	x2, x2, x3, #1
   123a8:	ldr	x3, [x23, x1, lsl #3]
   123ac:	cmp	x3, x2
   123b0:	b.hi	12798 <mpfr_div@@Base+0x1ee8>  // b.pmore
   123b4:	b.cs	12390 <mpfr_div@@Base+0x1ae0>  // b.hs, b.nlast
   123b8:	mov	w2, #0xffffffff            	// #-1
   123bc:	b	1279c <mpfr_div@@Base+0x1eec>
   123c0:	cmp	x0, #0x0
   123c4:	b.le	12430 <mpfr_div@@Base+0x1b80>
   123c8:	ldr	x5, [x29, #192]
   123cc:	add	x4, x5, #0x8
   123d0:	ldr	w2, [x29, #180]
   123d4:	b	123f0 <mpfr_div@@Base+0x1b40>
   123d8:	ldr	x1, [x5, x0, lsl #3]
   123dc:	cmp	x1, #0x0
   123e0:	cset	w3, eq  // eq = none
   123e4:	cmp	x0, #0x0
   123e8:	ccmp	w3, #0x0, #0x4, gt
   123ec:	b.eq	12408 <mpfr_div@@Base+0x1b58>  // b.none
   123f0:	sub	x0, x0, #0x1
   123f4:	cbz	w2, 123d8 <mpfr_div@@Base+0x1b28>
   123f8:	ldr	x1, [x4, x0, lsl #3]
   123fc:	ldr	x3, [x5, x0, lsl #3]
   12400:	extr	x1, x1, x3, #1
   12404:	b	123dc <mpfr_div@@Base+0x1b2c>
   12408:	cmp	x1, #0x0
   1240c:	csetm	w2, ne  // ne = any
   12410:	ldr	w0, [x29, #180]
   12414:	cmp	w0, #0x0
   12418:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1241c:	b.eq	12454 <mpfr_div@@Base+0x1ba4>  // b.none
   12420:	ldr	x0, [x29, #192]
   12424:	ldr	x0, [x0]
   12428:	tbz	w0, #0, 1244c <mpfr_div@@Base+0x1b9c>
   1242c:	b	121c0 <mpfr_div@@Base+0x1910>
   12430:	mov	w0, #0x1                   	// #1
   12434:	mov	w2, #0x0                   	// #0
   12438:	b	127a4 <mpfr_div@@Base+0x1ef4>
   1243c:	mov	x1, x24
   12440:	mov	x0, x23
   12444:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   12448:	mov	w2, w0
   1244c:	cmp	w2, #0x0
   12450:	b.gt	12270 <mpfr_div@@Base+0x19c0>
   12454:	cbz	w2, 10b94 <mpfr_div@@Base+0x2e4>
   12458:	b	121c0 <mpfr_div@@Base+0x1910>
   1245c:	ldr	w0, [x29, #180]
   12460:	cbz	w0, 1275c <mpfr_div@@Base+0x1eac>
   12464:	ldr	x0, [x29, #192]
   12468:	ldr	x3, [x0]
   1246c:	and	x3, x3, #0x1
   12470:	b.le	124bc <mpfr_div@@Base+0x1c0c>
   12474:	cbz	x3, 1249c <mpfr_div@@Base+0x1bec>
   12478:	sub	x1, x24, x2
   1247c:	lsl	x1, x1, #3
   12480:	sub	x1, x1, #0x8
   12484:	ldr	x0, [x23, x1]
   12488:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   1248c:	add	x3, x0, x3
   12490:	str	x3, [x23, x1]
   12494:	mvn	x0, x0
   12498:	lsr	x3, x0, #63
   1249c:	sub	x24, x24, x2
   124a0:	ldr	w4, [x29, #180]
   124a4:	ldr	x1, [x29, #192]
   124a8:	add	x0, x23, x24, lsl #3
   124ac:	bl	1083c <mpfr_div_2ui@@Base+0x44c>
   124b0:	mov	x1, x0
   124b4:	str	xzr, [x29, #128]
   124b8:	b	122d4 <mpfr_div@@Base+0x1a24>
   124bc:	mov	x28, #0x0                   	// #0
   124c0:	b	122a4 <mpfr_div@@Base+0x19f4>
   124c4:	mov	w23, #0xffffffff            	// #-1
   124c8:	b.hi	1214c <mpfr_div@@Base+0x189c>  // b.pmore
   124cc:	cmp	x21, #0x1
   124d0:	b.eq	1250c <mpfr_div@@Base+0x1c5c>  // b.none
   124d4:	ldr	x0, [x29, #136]
   124d8:	cbnz	x0, 12574 <mpfr_div@@Base+0x1cc4>
   124dc:	cbz	w26, 126c4 <mpfr_div@@Base+0x1e14>
   124e0:	ldr	w0, [x29, #184]
   124e4:	orr	w23, w0, w23
   124e8:	cmp	w23, #0x0
   124ec:	cset	w0, ne  // ne = any
   124f0:	ldr	w1, [x29, #152]
   124f4:	cmp	w1, #0x0
   124f8:	mov	w23, #0x1                   	// #1
   124fc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   12500:	b.ne	12698 <mpfr_div@@Base+0x1de8>  // b.any
   12504:	neg	w23, w0
   12508:	b	12634 <mpfr_div@@Base+0x1d84>
   1250c:	cmp	w23, #0x0
   12510:	cset	x21, ne  // ne = any
   12514:	b	10b94 <mpfr_div@@Base+0x2e4>
   12518:	mov	w23, #0xffffffff            	// #-1
   1251c:	ldr	x0, [x29, #136]
   12520:	cmp	x0, #0x0
   12524:	cneg	w23, w23, eq  // eq = none
   12528:	b	12698 <mpfr_div@@Base+0x1de8>
   1252c:	ldr	w0, [x29, #152]
   12530:	cbz	w0, 12548 <mpfr_div@@Base+0x1c98>
   12534:	mov	w23, #0xffffffff            	// #-1
   12538:	ldr	w0, [x29, #184]
   1253c:	cmp	w0, #0x0
   12540:	b.gt	12634 <mpfr_div@@Base+0x1d84>
   12544:	b	12168 <mpfr_div@@Base+0x18b8>
   12548:	mov	w23, #0x1                   	// #1
   1254c:	ldr	w0, [x29, #184]
   12550:	cmp	w0, #0x0
   12554:	b.gt	12698 <mpfr_div@@Base+0x1de8>
   12558:	b	12634 <mpfr_div@@Base+0x1d84>
   1255c:	str	x0, [x29, #136]
   12560:	mov	x21, x0
   12564:	ldr	x0, [x29, #136]
   12568:	orr	x23, x0, x21
   1256c:	cmp	x23, #0x0
   12570:	csetm	w23, ne  // ne = any
   12574:	ldr	x0, [x29, #280]
   12578:	cbnz	x0, 126cc <mpfr_div@@Base+0x1e1c>
   1257c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12580:	ldr	x1, [x0, #2544]
   12584:	add	x0, x0, #0x9f0
   12588:	blr	x1
   1258c:	mrs	x1, tpidr_el0
   12590:	ldr	x0, [x1, x0]
   12594:	cmp	x0, x27
   12598:	b.lt	126d4 <mpfr_div@@Base+0x1e24>  // b.tstop
   1259c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   125a0:	ldr	x1, [x0, #2512]
   125a4:	add	x0, x0, #0x9d0
   125a8:	blr	x1
   125ac:	mrs	x1, tpidr_el0
   125b0:	ldr	x0, [x1, x0]
   125b4:	cmp	x0, x27
   125b8:	b.gt	126ec <mpfr_div@@Base+0x1e3c>
   125bc:	str	x27, [x22, #16]
   125c0:	ldr	w0, [x29, #144]
   125c4:	mul	w23, w0, w23
   125c8:	cbz	w23, 125f0 <mpfr_div@@Base+0x1d40>
   125cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   125d0:	ldr	x1, [x0, #2576]
   125d4:	add	x0, x0, #0xa10
   125d8:	blr	x1
   125dc:	mrs	x1, tpidr_el0
   125e0:	add	x0, x1, x0
   125e4:	ldr	w1, [x0]
   125e8:	orr	w1, w1, #0x8
   125ec:	str	w1, [x0]
   125f0:	mov	w0, w23
   125f4:	mov	sp, x29
   125f8:	ldp	x19, x20, [sp, #16]
   125fc:	ldp	x21, x22, [sp, #32]
   12600:	ldp	x23, x24, [sp, #48]
   12604:	ldp	x25, x26, [sp, #64]
   12608:	ldp	x27, x28, [sp, #80]
   1260c:	ldp	x29, x30, [sp], #288
   12610:	ret
   12614:	str	xzr, [x29, #136]
   12618:	mov	x21, #0x1                   	// #1
   1261c:	b	10ba8 <mpfr_div@@Base+0x2f8>
   12620:	mov	x1, #0x1                   	// #1
   12624:	ldr	x0, [x29, #96]
   12628:	sub	x0, x0, x1
   1262c:	str	x0, [x29, #96]
   12630:	mov	w23, #0xffffffff            	// #-1
   12634:	mov	x0, #0x1                   	// #1
   12638:	ldrb	w1, [x29, #184]
   1263c:	lsl	x0, x0, x1
   12640:	ldr	x3, [x29, #168]
   12644:	ldr	x1, [x3]
   12648:	sub	x2, x1, x0
   1264c:	str	x2, [x3]
   12650:	mov	x2, #0x0                   	// #0
   12654:	cmp	x0, x1
   12658:	b.ls	1268c <mpfr_div@@Base+0x1ddc>  // b.plast
   1265c:	mov	x0, x3
   12660:	ldr	x2, [x29, #120]
   12664:	add	x3, x3, x2, lsl #3
   12668:	cmp	x0, x3
   1266c:	b.eq	12688 <mpfr_div@@Base+0x1dd8>  // b.none
   12670:	ldr	x1, [x0, #8]
   12674:	sub	x2, x1, #0x1
   12678:	str	x2, [x0, #8]!
   1267c:	cbz	x1, 12668 <mpfr_div@@Base+0x1db8>
   12680:	mov	x2, #0x0                   	// #0
   12684:	b	1268c <mpfr_div@@Base+0x1ddc>
   12688:	mov	x2, #0x1                   	// #1
   1268c:	ldr	x0, [x29, #96]
   12690:	sub	x0, x0, x2
   12694:	str	x0, [x29, #96]
   12698:	ldr	x0, [x29, #96]
   1269c:	cbz	x0, 12574 <mpfr_div@@Base+0x1cc4>
   126a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   126a4:	cmp	x27, x0
   126a8:	cinc	x27, x27, ne  // ne = any
   126ac:	ldr	x0, [x29, #216]
   126b0:	ldr	x1, [x29, #168]
   126b4:	add	x0, x1, x0, lsl #3
   126b8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   126bc:	stur	x1, [x0, #-8]
   126c0:	b	12574 <mpfr_div@@Base+0x1cc4>
   126c4:	mov	w23, #0x1                   	// #1
   126c8:	b	12698 <mpfr_div@@Base+0x1de8>
   126cc:	bl	c410 <mpfr_tmp_free@plt>
   126d0:	b	1257c <mpfr_div@@Base+0x1ccc>
   126d4:	ldr	w2, [x29, #144]
   126d8:	mov	w1, w26
   126dc:	mov	x0, x22
   126e0:	bl	bf40 <mpfr_overflow@plt>
   126e4:	mov	w23, w0
   126e8:	b	125f0 <mpfr_div@@Base+0x1d40>
   126ec:	cbnz	w26, 12710 <mpfr_div@@Base+0x1e60>
   126f0:	sub	x0, x0, #0x1
   126f4:	cmp	x0, x27
   126f8:	b.gt	12728 <mpfr_div@@Base+0x1e78>
   126fc:	tbnz	w23, #31, 12710 <mpfr_div@@Base+0x1e60>
   12700:	mov	x0, x22
   12704:	bl	bf00 <mpfr_powerof2_raw@plt>
   12708:	cmp	w0, #0x0
   1270c:	cset	w26, ne  // ne = any
   12710:	ldr	w2, [x29, #144]
   12714:	mov	w1, w26
   12718:	mov	x0, x22
   1271c:	bl	c3c0 <mpfr_underflow@plt>
   12720:	mov	w23, w0
   12724:	b	125f0 <mpfr_div@@Base+0x1d40>
   12728:	mov	w26, #0x1                   	// #1
   1272c:	b	12710 <mpfr_div@@Base+0x1e60>
   12730:	mov	w23, #0x0                   	// #0
   12734:	b	125f0 <mpfr_div@@Base+0x1d40>
   12738:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1273c:	cmp	x27, x0
   12740:	cinc	x27, x27, ne  // ne = any
   12744:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12748:	ldr	x1, [x29, #168]
   1274c:	ldr	x2, [x29, #120]
   12750:	str	x0, [x1, x2, lsl #3]
   12754:	mov	w23, #0x1                   	// #1
   12758:	b	12574 <mpfr_div@@Base+0x1cc4>
   1275c:	mov	x28, #0x0                   	// #0
   12760:	mov	x3, #0x0                   	// #0
   12764:	cmp	x24, x2
   12768:	b.gt	1249c <mpfr_div@@Base+0x1bec>
   1276c:	mov	x1, x28
   12770:	ldr	x0, [x29, #192]
   12774:	bl	1081c <mpfr_div_2ui@@Base+0x42c>
   12778:	cmp	w0, #0x0
   1277c:	cset	w0, ne  // ne = any
   12780:	b	122ac <mpfr_div@@Base+0x19fc>
   12784:	cmp	w2, #0x0
   12788:	mov	x0, #0x0                   	// #0
   1278c:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   12790:	b.gt	12234 <mpfr_div@@Base+0x1984>
   12794:	b	1244c <mpfr_div@@Base+0x1b9c>
   12798:	mov	w2, #0x1                   	// #1
   1279c:	cmp	w2, #0x0
   127a0:	cset	w0, eq  // eq = none
   127a4:	ldr	w1, [x29, #180]
   127a8:	cmp	w1, #0x0
   127ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   127b0:	b.eq	1244c <mpfr_div@@Base+0x1b9c>  // b.none
   127b4:	b	12420 <mpfr_div@@Base+0x1b70>

00000000000127b8 <mpfr_div_ui@@Base>:
   127b8:	stp	x29, x30, [sp, #-160]!
   127bc:	mov	x29, sp
   127c0:	stp	x19, x20, [sp, #16]
   127c4:	stp	x21, x22, [sp, #32]
   127c8:	stp	x23, x24, [sp, #48]
   127cc:	stp	x25, x26, [sp, #64]
   127d0:	stp	x27, x28, [sp, #80]
   127d4:	mov	x20, x0
   127d8:	mov	x21, x2
   127dc:	str	w3, [x29, #140]
   127e0:	ldr	x0, [x1, #16]
   127e4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   127e8:	cmp	x0, x2
   127ec:	b.le	128b8 <mpfr_div_ui@@Base+0x100>
   127f0:	cmp	x21, #0x1
   127f4:	b.ls	1296c <mpfr_div_ui@@Base+0x1b4>  // b.plast
   127f8:	sub	x0, x21, #0x1
   127fc:	tst	x0, x21
   12800:	b.eq	129c4 <mpfr_div_ui@@Base+0x20c>  // b.none
   12804:	ldr	w0, [x1, #8]
   12808:	str	w0, [x20, #8]
   1280c:	str	xzr, [x29, #152]
   12810:	ldr	x0, [x1]
   12814:	add	x19, x0, #0x3e
   12818:	subs	x0, x0, #0x1
   1281c:	csel	x19, x19, x0, mi  // mi = first
   12820:	asr	x19, x19, #6
   12824:	add	x19, x19, #0x1
   12828:	ldr	x0, [x20]
   1282c:	add	x22, x0, #0x3e
   12830:	subs	x0, x0, #0x1
   12834:	csel	x22, x22, x0, mi  // mi = first
   12838:	asr	x22, x22, #6
   1283c:	add	x0, x22, #0x1
   12840:	str	x0, [x29, #104]
   12844:	ldr	x0, [x1, #24]
   12848:	str	x0, [x29, #128]
   1284c:	ldr	x26, [x20, #24]
   12850:	ldr	x24, [x1, #16]
   12854:	add	x22, x22, #0x2
   12858:	sub	x0, x22, x19
   1285c:	str	x0, [x29, #112]
   12860:	lsl	x28, x22, #3
   12864:	cmp	x28, #0x4, lsl #12
   12868:	b.hi	129e8 <mpfr_div_ui@@Base+0x230>  // b.pmore
   1286c:	add	x0, x28, #0xf
   12870:	and	x0, x0, #0xfffffffffffffff0
   12874:	sub	sp, sp, x0
   12878:	mov	x27, sp
   1287c:	ldr	x1, [x29, #112]
   12880:	tbnz	x1, #63, 129fc <mpfr_div_ui@@Base+0x244>
   12884:	mov	x4, x21
   12888:	mov	x3, x19
   1288c:	ldr	x2, [x29, #128]
   12890:	mov	x0, x27
   12894:	bl	c7c0 <__gmpn_divrem_1@plt>
   12898:	str	x0, [x29, #120]
   1289c:	sub	x22, x19, x22
   128a0:	cmp	x22, #0x0
   128a4:	b.le	12a9c <mpfr_div_ui@@Base+0x2e4>
   128a8:	ldr	x1, [x29, #128]
   128ac:	mov	x0, x1
   128b0:	add	x22, x1, x22, lsl #3
   128b4:	b	12a30 <mpfr_div_ui@@Base+0x278>
   128b8:	mov	x2, #0x2                   	// #2
   128bc:	movk	x2, #0x8000, lsl #48
   128c0:	cmp	x0, x2
   128c4:	b.eq	12910 <mpfr_div_ui@@Base+0x158>  // b.none
   128c8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   128cc:	cmp	x0, x2
   128d0:	b.eq	12940 <mpfr_div_ui@@Base+0x188>  // b.none
   128d4:	cbnz	x21, 12954 <mpfr_div_ui@@Base+0x19c>
   128d8:	mov	x0, #0x2                   	// #2
   128dc:	movk	x0, #0x8000, lsl #48
   128e0:	str	x0, [x20, #16]
   128e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   128e8:	ldr	x1, [x0, #2576]
   128ec:	add	x0, x0, #0xa10
   128f0:	blr	x1
   128f4:	mrs	x1, tpidr_el0
   128f8:	add	x0, x1, x0
   128fc:	ldr	w1, [x0]
   12900:	orr	w1, w1, #0x4
   12904:	str	w1, [x0]
   12908:	mov	w1, #0x0                   	// #0
   1290c:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   12910:	str	x2, [x20, #16]
   12914:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12918:	ldr	x1, [x0, #2576]
   1291c:	add	x0, x0, #0xa10
   12920:	blr	x1
   12924:	mrs	x1, tpidr_el0
   12928:	add	x0, x1, x0
   1292c:	ldr	w1, [x0]
   12930:	orr	w1, w1, #0x4
   12934:	str	w1, [x0]
   12938:	mov	w1, #0x0                   	// #0
   1293c:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   12940:	str	x2, [x20, #16]
   12944:	ldr	w0, [x1, #8]
   12948:	str	w0, [x20, #8]
   1294c:	mov	w1, #0x0                   	// #0
   12950:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   12954:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12958:	str	x0, [x20, #16]
   1295c:	ldr	w0, [x1, #8]
   12960:	str	w0, [x20, #8]
   12964:	mov	w1, #0x0                   	// #0
   12968:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   1296c:	cbnz	x21, 129ac <mpfr_div_ui@@Base+0x1f4>
   12970:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   12974:	str	x0, [x20, #16]
   12978:	ldr	w0, [x1, #8]
   1297c:	str	w0, [x20, #8]
   12980:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12984:	ldr	x1, [x0, #2576]
   12988:	add	x0, x0, #0xa10
   1298c:	blr	x1
   12990:	mrs	x1, tpidr_el0
   12994:	add	x0, x1, x0
   12998:	ldr	w1, [x0]
   1299c:	orr	w1, w1, #0x20
   129a0:	str	w1, [x0]
   129a4:	mov	w1, #0x0                   	// #0
   129a8:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   129ac:	ldr	w3, [x1, #8]
   129b0:	ldr	w2, [x29, #140]
   129b4:	mov	x0, x20
   129b8:	bl	c6a0 <mpfr_set4@plt>
   129bc:	mov	w1, w0
   129c0:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   129c4:	clz	x0, x0
   129c8:	mov	w2, #0x40                  	// #64
   129cc:	sub	w2, w2, w0
   129d0:	ldr	w3, [x29, #140]
   129d4:	sxtw	x2, w2
   129d8:	mov	x0, x20
   129dc:	bl	c420 <mpfr_div_2si@plt>
   129e0:	mov	w1, w0
   129e4:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   129e8:	mov	x1, x28
   129ec:	add	x0, x29, #0x98
   129f0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   129f4:	mov	x27, x0
   129f8:	b	1287c <mpfr_div_ui@@Base+0xc4>
   129fc:	mov	x4, x21
   12a00:	mov	x3, x22
   12a04:	ldr	x0, [x29, #112]
   12a08:	ldr	x1, [x29, #128]
   12a0c:	sub	x2, x1, x0, lsl #3
   12a10:	mov	x1, #0x0                   	// #0
   12a14:	mov	x0, x27
   12a18:	bl	c7c0 <__gmpn_divrem_1@plt>
   12a1c:	str	x0, [x29, #120]
   12a20:	b	1289c <mpfr_div_ui@@Base+0xe4>
   12a24:	add	x0, x0, #0x8
   12a28:	cmp	x0, x22
   12a2c:	b.eq	12a3c <mpfr_div_ui@@Base+0x284>  // b.none
   12a30:	ldr	x19, [x0]
   12a34:	cbz	x19, 12a24 <mpfr_div_ui@@Base+0x26c>
   12a38:	mov	x19, #0x1                   	// #1
   12a3c:	ldr	x0, [x29, #120]
   12a40:	orr	x23, x19, x0
   12a44:	ldr	x22, [x20]
   12a48:	neg	w22, w22
   12a4c:	and	w22, w22, #0x3f
   12a50:	sub	x2, x28, #0x8
   12a54:	ldr	x25, [x27, x2]
   12a58:	cbnz	x25, 12b58 <mpfr_div_ui@@Base+0x3a0>
   12a5c:	cmp	x27, x26
   12a60:	b.eq	12a70 <mpfr_div_ui@@Base+0x2b8>  // b.none
   12a64:	mov	x1, x27
   12a68:	mov	x0, x26
   12a6c:	bl	ba10 <memcpy@plt>
   12a70:	sub	x24, x24, #0x40
   12a74:	cbnz	w22, 12b28 <mpfr_div_ui@@Base+0x370>
   12a78:	ldr	x1, [x29, #120]
   12a7c:	sub	x0, x21, x1
   12a80:	cmp	x0, x1
   12a84:	b.hi	12aa4 <mpfr_div_ui@@Base+0x2ec>  // b.pmore
   12a88:	lsl	x23, x1, #1
   12a8c:	sub	x21, x23, x21
   12a90:	orr	x23, x21, x19
   12a94:	mov	x25, #0x1                   	// #1
   12a98:	b	12ba4 <mpfr_div_ui@@Base+0x3ec>
   12a9c:	mov	x19, #0x0                   	// #0
   12aa0:	b	12a3c <mpfr_div_ui@@Base+0x284>
   12aa4:	lsr	x21, x21, #1
   12aa8:	ldr	x0, [x29, #112]
   12aac:	cmp	x0, #0x0
   12ab0:	ldr	x0, [x29, #120]
   12ab4:	ccmp	x21, x0, #0x0, lt  // lt = tstop
   12ab8:	b.ne	12ba4 <mpfr_div_ui@@Base+0x3ec>  // b.any
   12abc:	ldr	x0, [x29, #112]
   12ac0:	mvn	x0, x0
   12ac4:	ldr	x1, [x29, #128]
   12ac8:	ldr	x0, [x1, x0, lsl #3]
   12acc:	tbz	x0, #63, 12ba4 <mpfr_div_ui@@Base+0x3ec>
   12ad0:	lsl	x23, x0, #1
   12ad4:	mov	x25, #0x1                   	// #1
   12ad8:	cmp	xzr, x0, lsl #1
   12adc:	b.ne	12ba4 <mpfr_div_ui@@Base+0x3ec>  // b.any
   12ae0:	ldr	x0, [x29, #112]
   12ae4:	mvn	x1, x0
   12ae8:	cmp	x1, #0x0
   12aec:	b.le	12c58 <mpfr_div_ui@@Base+0x4a0>
   12af0:	ldr	x2, [x29, #128]
   12af4:	mov	x0, x2
   12af8:	add	x1, x2, x1, lsl #3
   12afc:	b	12b0c <mpfr_div_ui@@Base+0x354>
   12b00:	add	x0, x0, #0x8
   12b04:	cmp	x0, x1
   12b08:	b.eq	12b20 <mpfr_div_ui@@Base+0x368>  // b.none
   12b0c:	ldr	x23, [x0]
   12b10:	cbz	x23, 12b00 <mpfr_div_ui@@Base+0x348>
   12b14:	mov	x23, #0x1                   	// #1
   12b18:	mov	x25, x23
   12b1c:	b	12ba4 <mpfr_div_ui@@Base+0x3ec>
   12b20:	mov	x25, #0x1                   	// #1
   12b24:	b	12ba4 <mpfr_div_ui@@Base+0x3ec>
   12b28:	ldr	x0, [x27]
   12b2c:	sub	w1, w22, #0x1
   12b30:	mov	x25, #0x1                   	// #1
   12b34:	lsl	x25, x25, x1
   12b38:	and	x25, x25, x0
   12b3c:	mov	x23, #0xffffffffffffffff    	// #-1
   12b40:	lsl	x23, x23, x1
   12b44:	bic	x23, x0, x23
   12b48:	ldr	x0, [x29, #120]
   12b4c:	orr	x23, x23, x0
   12b50:	orr	x23, x23, x19
   12b54:	b	12ba4 <mpfr_div_ui@@Base+0x3ec>
   12b58:	clz	x19, x25
   12b5c:	mov	x1, x27
   12b60:	ldr	x21, [x1], #8
   12b64:	lsl	x21, x21, x19
   12b68:	mov	w3, w19
   12b6c:	ldr	x2, [x29, #104]
   12b70:	mov	x0, x26
   12b74:	bl	bcc0 <__gmpn_lshift@plt>
   12b78:	ldr	x0, [x27]
   12b7c:	neg	w1, w19
   12b80:	lsr	x0, x0, x1
   12b84:	ldr	x1, [x26]
   12b88:	orr	x0, x0, x1
   12b8c:	str	x0, [x26]
   12b90:	cbnz	w22, 12c30 <mpfr_div_ui@@Base+0x478>
   12b94:	and	x25, x21, #0x8000000000000000
   12b98:	and	x21, x21, #0x7fffffffffffffff
   12b9c:	orr	x23, x23, x21
   12ba0:	sub	x24, x24, x19
   12ba4:	mov	x0, #0xffffffffffffffff    	// #-1
   12ba8:	lsl	x1, x0, x22
   12bac:	ldr	x0, [x26]
   12bb0:	and	x0, x0, x1
   12bb4:	str	x0, [x26]
   12bb8:	ldr	x0, [x29, #152]
   12bbc:	cbnz	x0, 12c60 <mpfr_div_ui@@Base+0x4a8>
   12bc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12bc4:	ldr	x1, [x0, #2512]
   12bc8:	add	x0, x0, #0x9d0
   12bcc:	blr	x1
   12bd0:	mrs	x1, tpidr_el0
   12bd4:	ldr	x0, [x1, x0]
   12bd8:	sub	x0, x0, #0x1
   12bdc:	cmp	x0, x24
   12be0:	b.gt	12c68 <mpfr_div_ui@@Base+0x4b0>
   12be4:	orr	x0, x25, x23
   12be8:	cbz	x0, 12d98 <mpfr_div_ui@@Base+0x5e0>
   12bec:	ldr	w0, [x29, #140]
   12bf0:	cmp	w0, #0x2
   12bf4:	b.eq	12c88 <mpfr_div_ui@@Base+0x4d0>  // b.none
   12bf8:	ldr	w0, [x29, #140]
   12bfc:	cmp	w0, #0x3
   12c00:	b.eq	12d4c <mpfr_div_ui@@Base+0x594>  // b.none
   12c04:	ldr	w0, [x29, #140]
   12c08:	cmp	w0, #0x4
   12c0c:	b.eq	12c94 <mpfr_div_ui@@Base+0x4dc>  // b.none
   12c10:	and	w0, w0, #0xfffffffb
   12c14:	cmp	w0, #0x1
   12c18:	b.eq	12cec <mpfr_div_ui@@Base+0x534>  // b.none
   12c1c:	cbnz	x25, 12d60 <mpfr_div_ui@@Base+0x5a8>
   12c20:	ldr	w1, [x20, #8]
   12c24:	neg	w1, w1
   12c28:	str	wzr, [x29, #140]
   12c2c:	b	12cf4 <mpfr_div_ui@@Base+0x53c>
   12c30:	sub	w2, w22, #0x1
   12c34:	mov	x25, #0x1                   	// #1
   12c38:	lsl	x25, x25, x2
   12c3c:	and	x25, x25, x0
   12c40:	mov	x1, #0xffffffffffffffff    	// #-1
   12c44:	lsl	x1, x1, x2
   12c48:	bic	x0, x0, x1
   12c4c:	orr	x21, x0, x21
   12c50:	orr	x23, x23, x21
   12c54:	b	12ba0 <mpfr_div_ui@@Base+0x3e8>
   12c58:	mov	x25, #0x1                   	// #1
   12c5c:	b	12ba4 <mpfr_div_ui@@Base+0x3ec>
   12c60:	bl	c410 <mpfr_tmp_free@plt>
   12c64:	b	12bc0 <mpfr_div_ui@@Base+0x408>
   12c68:	ldr	w0, [x29, #140]
   12c6c:	cmp	w0, #0x0
   12c70:	ldr	w2, [x20, #8]
   12c74:	csinc	w1, w0, wzr, ne  // ne = any
   12c78:	mov	x0, x20
   12c7c:	bl	c3c0 <mpfr_underflow@plt>
   12c80:	mov	w1, w0
   12c84:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   12c88:	ldr	w0, [x20, #8]
   12c8c:	cmp	w0, #0x0
   12c90:	b.le	12ce4 <mpfr_div_ui@@Base+0x52c>
   12c94:	ldr	w1, [x20, #8]
   12c98:	mov	w0, #0x4                   	// #4
   12c9c:	str	w0, [x29, #140]
   12ca0:	mov	x0, #0x1                   	// #1
   12ca4:	lsl	x22, x0, x22
   12ca8:	ldr	x0, [x26]
   12cac:	add	x0, x22, x0
   12cb0:	str	x0, [x26]
   12cb4:	cmp	x22, x0
   12cb8:	b.ls	12cf4 <mpfr_div_ui@@Base+0x53c>  // b.plast
   12cbc:	mov	x3, x26
   12cc0:	sub	x0, x28, #0x10
   12cc4:	add	x0, x0, x26
   12cc8:	cmp	x3, x0
   12ccc:	b.eq	12dec <mpfr_div_ui@@Base+0x634>  // b.none
   12cd0:	ldr	x2, [x3, #8]
   12cd4:	add	x2, x2, #0x1
   12cd8:	str	x2, [x3, #8]!
   12cdc:	cbz	x2, 12cc8 <mpfr_div_ui@@Base+0x510>
   12ce0:	b	12cf4 <mpfr_div_ui@@Base+0x53c>
   12ce4:	mov	w0, #0x1                   	// #1
   12ce8:	str	w0, [x29, #140]
   12cec:	ldr	w1, [x20, #8]
   12cf0:	neg	w1, w1
   12cf4:	str	x24, [x20, #16]
   12cf8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12cfc:	ldr	x2, [x0, #2512]
   12d00:	add	x0, x0, #0x9d0
   12d04:	blr	x2
   12d08:	mrs	x2, tpidr_el0
   12d0c:	ldr	x0, [x2, x0]
   12d10:	cmp	x0, x24
   12d14:	b.gt	12d38 <mpfr_div_ui@@Base+0x580>
   12d18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12d1c:	ldr	x2, [x0, #2544]
   12d20:	add	x0, x0, #0x9f0
   12d24:	blr	x2
   12d28:	mrs	x2, tpidr_el0
   12d2c:	ldr	x0, [x2, x0]
   12d30:	cmp	x0, x24
   12d34:	b.ge	12da0 <mpfr_div_ui@@Base+0x5e8>  // b.tcont
   12d38:	ldr	w2, [x29, #140]
   12d3c:	mov	x0, x20
   12d40:	bl	cb30 <mpfr_check_range@plt>
   12d44:	mov	w1, w0
   12d48:	b	12dc8 <mpfr_div_ui@@Base+0x610>
   12d4c:	ldr	w0, [x20, #8]
   12d50:	tbnz	w0, #31, 12c94 <mpfr_div_ui@@Base+0x4dc>
   12d54:	mov	w0, #0x1                   	// #1
   12d58:	str	w0, [x29, #140]
   12d5c:	b	12cec <mpfr_div_ui@@Base+0x534>
   12d60:	cbz	x23, 12d70 <mpfr_div_ui@@Base+0x5b8>
   12d64:	ldr	w1, [x20, #8]
   12d68:	str	wzr, [x29, #140]
   12d6c:	b	12ca0 <mpfr_div_ui@@Base+0x4e8>
   12d70:	ldr	x0, [x26]
   12d74:	lsr	x0, x0, x22
   12d78:	tbz	w0, #0, 12d88 <mpfr_div_ui@@Base+0x5d0>
   12d7c:	ldr	w1, [x20, #8]
   12d80:	str	wzr, [x29, #140]
   12d84:	b	12ca0 <mpfr_div_ui@@Base+0x4e8>
   12d88:	ldr	w1, [x20, #8]
   12d8c:	neg	w1, w1
   12d90:	str	wzr, [x29, #140]
   12d94:	b	12cf4 <mpfr_div_ui@@Base+0x53c>
   12d98:	mov	w1, #0x0                   	// #0
   12d9c:	b	12cf4 <mpfr_div_ui@@Base+0x53c>
   12da0:	cbz	w1, 12dc8 <mpfr_div_ui@@Base+0x610>
   12da4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12da8:	ldr	x2, [x0, #2576]
   12dac:	add	x0, x0, #0xa10
   12db0:	blr	x2
   12db4:	mrs	x2, tpidr_el0
   12db8:	add	x0, x2, x0
   12dbc:	ldr	w2, [x0]
   12dc0:	orr	w2, w2, #0x8
   12dc4:	str	w2, [x0]
   12dc8:	mov	w0, w1
   12dcc:	mov	sp, x29
   12dd0:	ldp	x19, x20, [sp, #16]
   12dd4:	ldp	x21, x22, [sp, #32]
   12dd8:	ldp	x23, x24, [sp, #48]
   12ddc:	ldp	x25, x26, [sp, #64]
   12de0:	ldp	x27, x28, [sp, #80]
   12de4:	ldp	x29, x30, [sp], #160
   12de8:	ret
   12dec:	add	x24, x24, #0x1
   12df0:	add	x26, x26, x28
   12df4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12df8:	stur	x0, [x26, #-16]
   12dfc:	b	12cf4 <mpfr_div_ui@@Base+0x53c>

0000000000012e00 <mpfr_fdump@@Base>:
   12e00:	stp	x29, x30, [sp, #-128]!
   12e04:	mov	x29, sp
   12e08:	stp	x21, x22, [sp, #32]
   12e0c:	stp	x27, x28, [sp, #80]
   12e10:	mov	x22, x0
   12e14:	mov	x28, x1
   12e18:	ldr	w0, [x1, #8]
   12e1c:	tbnz	w0, #31, 12ea8 <mpfr_fdump@@Base+0xa8>
   12e20:	ldr	x0, [x28, #16]
   12e24:	mov	x1, #0x2                   	// #2
   12e28:	movk	x1, #0x8000, lsl #48
   12e2c:	cmp	x0, x1
   12e30:	b.eq	12eb8 <mpfr_fdump@@Base+0xb8>  // b.none
   12e34:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12e38:	cmp	x0, x1
   12e3c:	b.eq	12ed4 <mpfr_fdump@@Base+0xd4>  // b.none
   12e40:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   12e44:	cmp	x0, x1
   12e48:	b.eq	12ef0 <mpfr_fdump@@Base+0xf0>  // b.none
   12e4c:	stp	x19, x20, [sp, #16]
   12e50:	stp	x23, x24, [sp, #48]
   12e54:	ldr	x0, [x28, #24]
   12e58:	str	x0, [sp, #104]
   12e5c:	ldr	x20, [x28]
   12e60:	mov	x3, x22
   12e64:	mov	x2, #0x2                   	// #2
   12e68:	mov	x1, #0x1                   	// #1
   12e6c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   12e70:	add	x0, x0, #0x1f0
   12e74:	bl	c8c0 <fwrite@plt>
   12e78:	add	x27, x20, #0x3e
   12e7c:	subs	x0, x20, #0x1
   12e80:	csel	x27, x27, x0, mi  // mi = first
   12e84:	asr	x27, x27, #6
   12e88:	cmn	x20, #0x3e
   12e8c:	b.lt	12f9c <mpfr_fdump@@Base+0x19c>  // b.tstop
   12e90:	stp	x25, x26, [sp, #64]
   12e94:	mov	w23, #0x0                   	// #0
   12e98:	mov	w0, #0x1                   	// #1
   12e9c:	add	x25, sp, #0x78
   12ea0:	mov	w26, #0x54                  	// #84
   12ea4:	b	12f6c <mpfr_fdump@@Base+0x16c>
   12ea8:	mov	x1, x22
   12eac:	mov	w0, #0x2d                  	// #45
   12eb0:	bl	bda0 <fputc@plt>
   12eb4:	b	12e20 <mpfr_fdump@@Base+0x20>
   12eb8:	mov	x3, x22
   12ebc:	mov	x2, #0x5                   	// #5
   12ec0:	mov	x1, #0x1                   	// #1
   12ec4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   12ec8:	add	x0, x0, #0x1e0
   12ecc:	bl	c8c0 <fwrite@plt>
   12ed0:	b	13044 <mpfr_fdump@@Base+0x244>
   12ed4:	mov	x3, x22
   12ed8:	mov	x2, #0x5                   	// #5
   12edc:	mov	x1, #0x1                   	// #1
   12ee0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   12ee4:	add	x0, x0, #0x1e8
   12ee8:	bl	c8c0 <fwrite@plt>
   12eec:	b	13044 <mpfr_fdump@@Base+0x244>
   12ef0:	mov	x1, x22
   12ef4:	mov	w0, #0x30                  	// #48
   12ef8:	bl	bda0 <fputc@plt>
   12efc:	b	13044 <mpfr_fdump@@Base+0x244>
   12f00:	mov	w23, w0
   12f04:	ldp	x25, x26, [sp, #64]
   12f08:	b	12fb8 <mpfr_fdump@@Base+0x1b8>
   12f0c:	lsr	x19, x19, #1
   12f10:	cbz	x19, 12f60 <mpfr_fdump@@Base+0x160>
   12f14:	tst	x21, x19
   12f18:	cset	w0, ne  // ne = any
   12f1c:	mov	x1, x22
   12f20:	add	w0, w0, #0x30
   12f24:	bl	bd20 <putc@plt>
   12f28:	subs	x20, x20, #0x1
   12f2c:	b.ne	12f0c <mpfr_fdump@@Base+0x10c>  // b.any
   12f30:	sub	x0, x19, #0x1
   12f34:	tst	x0, x21
   12f38:	b.eq	12fb4 <mpfr_fdump@@Base+0x1b4>  // b.none
   12f3c:	mov	x1, x22
   12f40:	mov	w0, w24
   12f44:	bl	bd20 <putc@plt>
   12f48:	add	w0, w23, #0x1
   12f4c:	strb	w26, [x25, w23, sxtw]
   12f50:	lsr	x19, x19, #1
   12f54:	cbz	x19, 12f00 <mpfr_fdump@@Base+0x100>
   12f58:	mov	w23, w0
   12f5c:	b	12f14 <mpfr_fdump@@Base+0x114>
   12f60:	mov	w0, #0x0                   	// #0
   12f64:	subs	x27, x27, #0x1
   12f68:	b.mi	12f94 <mpfr_fdump@@Base+0x194>  // b.first
   12f6c:	ldr	x1, [sp, #104]
   12f70:	ldr	x21, [x1, x27, lsl #3]
   12f74:	cbz	w0, 12f88 <mpfr_fdump@@Base+0x188>
   12f78:	tbnz	x21, #63, 12f88 <mpfr_fdump@@Base+0x188>
   12f7c:	mov	w0, #0x4e                  	// #78
   12f80:	strb	w0, [x25, w23, sxtw]
   12f84:	add	w23, w23, #0x1
   12f88:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   12f8c:	mov	w24, #0x5b                  	// #91
   12f90:	b	12f14 <mpfr_fdump@@Base+0x114>
   12f94:	ldp	x25, x26, [sp, #64]
   12f98:	b	12fa0 <mpfr_fdump@@Base+0x1a0>
   12f9c:	mov	w23, #0x0                   	// #0
   12fa0:	tbz	x20, #63, 12fb8 <mpfr_fdump@@Base+0x1b8>
   12fa4:	mov	x1, x22
   12fa8:	mov	w0, #0x5d                  	// #93
   12fac:	bl	bd20 <putc@plt>
   12fb0:	b	12fb8 <mpfr_fdump@@Base+0x1b8>
   12fb4:	ldp	x25, x26, [sp, #64]
   12fb8:	ldr	x19, [x28, #16]
   12fbc:	mov	x0, #0x4                   	// #4
   12fc0:	movk	x0, #0x8000, lsl #48
   12fc4:	cmp	x19, x0
   12fc8:	b.eq	13014 <mpfr_fdump@@Base+0x214>  // b.none
   12fcc:	mov	x2, x19
   12fd0:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   12fd4:	add	x1, x1, #0x200
   12fd8:	mov	x0, x22
   12fdc:	bl	cce0 <fprintf@plt>
   12fe0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   12fe4:	ldr	x1, [x0, #2512]
   12fe8:	add	x0, x0, #0x9d0
   12fec:	blr	x1
   12ff0:	mrs	x1, tpidr_el0
   12ff4:	ldr	x0, [x1, x0]
   12ff8:	cmp	x19, x0
   12ffc:	b.ge	13060 <mpfr_fdump@@Base+0x260>  // b.tcont
   13000:	add	w0, w23, #0x1
   13004:	add	x1, sp, #0x78
   13008:	mov	w2, #0x3c                  	// #60
   1300c:	strb	w2, [x1, w23, sxtw]
   13010:	b	13038 <mpfr_fdump@@Base+0x238>
   13014:	add	x2, x28, #0x20
   13018:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1301c:	add	x1, x1, #0x1f8
   13020:	mov	x0, x22
   13024:	bl	c550 <__gmp_fprintf@plt>
   13028:	add	w0, w23, #0x1
   1302c:	add	x1, sp, #0x78
   13030:	mov	w2, #0x55                  	// #85
   13034:	strb	w2, [x1, w23, sxtw]
   13038:	cbnz	w0, 13098 <mpfr_fdump@@Base+0x298>
   1303c:	ldp	x19, x20, [sp, #16]
   13040:	ldp	x23, x24, [sp, #48]
   13044:	mov	x1, x22
   13048:	mov	w0, #0xa                   	// #10
   1304c:	bl	bd20 <putc@plt>
   13050:	ldp	x21, x22, [sp, #32]
   13054:	ldp	x27, x28, [sp, #80]
   13058:	ldp	x29, x30, [sp], #128
   1305c:	ret
   13060:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13064:	ldr	x1, [x0, #2544]
   13068:	add	x0, x0, #0x9f0
   1306c:	blr	x1
   13070:	mrs	x1, tpidr_el0
   13074:	ldr	x1, [x1, x0]
   13078:	mov	w0, w23
   1307c:	cmp	x19, x1
   13080:	b.le	13038 <mpfr_fdump@@Base+0x238>
   13084:	add	w0, w23, #0x1
   13088:	add	x1, sp, #0x78
   1308c:	mov	w2, #0x3e                  	// #62
   13090:	strb	w2, [x1, w23, sxtw]
   13094:	b	13038 <mpfr_fdump@@Base+0x238>
   13098:	add	x2, sp, #0x78
   1309c:	strb	wzr, [x2, w0, sxtw]
   130a0:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   130a4:	add	x1, x1, #0x208
   130a8:	mov	x0, x22
   130ac:	bl	cce0 <fprintf@plt>
   130b0:	ldp	x19, x20, [sp, #16]
   130b4:	ldp	x23, x24, [sp, #48]
   130b8:	b	13044 <mpfr_fdump@@Base+0x244>

00000000000130bc <mpfr_dump@@Base>:
   130bc:	stp	x29, x30, [sp, #-16]!
   130c0:	mov	x29, sp
   130c4:	mov	x1, x0
   130c8:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   130cc:	ldr	x0, [x0, #3992]
   130d0:	ldr	x0, [x0]
   130d4:	bl	bbf0 <mpfr_fdump@plt>
   130d8:	ldp	x29, x30, [sp], #16
   130dc:	ret

00000000000130e0 <mpfr_eq@@Base>:
   130e0:	mov	x3, x0
   130e4:	ldr	x4, [x0, #16]
   130e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   130ec:	cmp	x4, x0
   130f0:	b.le	1311c <mpfr_eq@@Base+0x3c>
   130f4:	ldr	x5, [x1, #16]
   130f8:	cmp	x5, x0
   130fc:	b.le	1332c <mpfr_eq@@Base+0x24c>
   13100:	ldr	w6, [x3, #8]
   13104:	ldr	w0, [x1, #8]
   13108:	cmp	w6, w0
   1310c:	mov	w0, #0x0                   	// #0
   13110:	ccmp	x4, x5, #0x0, eq  // eq = none
   13114:	b.eq	13168 <mpfr_eq@@Base+0x88>  // b.none
   13118:	ret
   1311c:	mov	w0, #0x0                   	// #0
   13120:	mov	x2, #0x2                   	// #2
   13124:	movk	x2, #0x8000, lsl #48
   13128:	cmp	x4, x2
   1312c:	b.eq	13118 <mpfr_eq@@Base+0x38>  // b.none
   13130:	ldr	x2, [x1, #16]
   13134:	mov	x5, #0x2                   	// #2
   13138:	movk	x5, #0x8000, lsl #48
   1313c:	cmp	x2, x5
   13140:	b.eq	13118 <mpfr_eq@@Base+0x38>  // b.none
   13144:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   13148:	cmp	x2, x0
   1314c:	ccmp	x4, x0, #0x0, eq  // eq = none
   13150:	b.ne	13344 <mpfr_eq@@Base+0x264>  // b.any
   13154:	ldr	w2, [x3, #8]
   13158:	ldr	w0, [x1, #8]
   1315c:	cmp	w2, w0
   13160:	cset	w0, eq  // eq = none
   13164:	b	13118 <mpfr_eq@@Base+0x38>
   13168:	ldr	x0, [x3]
   1316c:	add	x5, x0, #0x3e
   13170:	subs	x0, x0, #0x1
   13174:	csel	x5, x5, x0, mi  // mi = first
   13178:	asr	x5, x5, #6
   1317c:	add	x6, x5, #0x1
   13180:	ldr	x4, [x1]
   13184:	add	x0, x4, #0x3e
   13188:	subs	x4, x4, #0x1
   1318c:	csel	x0, x0, x4, mi  // mi = first
   13190:	asr	x0, x0, #6
   13194:	add	x4, x0, #0x1
   13198:	cmp	x5, x0
   1319c:	b.ge	13234 <mpfr_eq@@Base+0x154>  // b.tcont
   131a0:	ldr	x5, [x1, #24]
   131a4:	ldr	x11, [x3, #24]
   131a8:	cmp	x4, x6
   131ac:	b.le	13260 <mpfr_eq@@Base+0x180>
   131b0:	lsl	x7, x6, #6
   131b4:	cmp	x2, x6, lsl #6
   131b8:	b.ls	132f0 <mpfr_eq@@Base+0x210>  // b.plast
   131bc:	sub	x7, x2, x7
   131c0:	sub	w8, w4, #0x1
   131c4:	sub	w8, w8, w6
   131c8:	cmp	x7, #0x3f
   131cc:	ccmp	w8, #0x0, #0x1, hi  // hi = pmore
   131d0:	b.lt	1320c <mpfr_eq@@Base+0x12c>  // b.tstop
   131d4:	sub	w0, w8, #0x1
   131d8:	sxtw	x0, w0
   131dc:	add	x10, x5, #0x8
   131e0:	add	w8, w0, #0x1
   131e4:	ldr	x3, [x10, x0, lsl #3]
   131e8:	cbnz	x3, 1320c <mpfr_eq@@Base+0x12c>
   131ec:	mov	w8, w0
   131f0:	sub	x7, x7, #0x40
   131f4:	mvn	w3, w0
   131f8:	cmp	x7, #0x3f
   131fc:	cset	w9, hi  // hi = pmore
   13200:	tst	w9, w3, lsr #31
   13204:	sub	x0, x0, #0x1
   13208:	b.ne	131e0 <mpfr_eq@@Base+0x100>  // b.any
   1320c:	tbnz	w8, #31, 132f8 <mpfr_eq@@Base+0x218>
   13210:	cmp	x7, #0x3f
   13214:	b.hi	1324c <mpfr_eq@@Base+0x16c>  // b.pmore
   13218:	ldr	x0, [x5, w8, sxtw #3]
   1321c:	neg	w7, w7
   13220:	lsr	x7, x0, x7
   13224:	mov	w0, #0x0                   	// #0
   13228:	cbnz	x7, 13118 <mpfr_eq@@Base+0x38>
   1322c:	mov	x0, x6
   13230:	b	13264 <mpfr_eq@@Base+0x184>
   13234:	ldr	x5, [x3, #24]
   13238:	ldr	x11, [x1, #24]
   1323c:	mov	x0, x4
   13240:	mov	x4, x6
   13244:	mov	x6, x0
   13248:	b	131a8 <mpfr_eq@@Base+0xc8>
   1324c:	ldr	x1, [x5, w8, sxtw #3]
   13250:	mov	w0, #0x0                   	// #0
   13254:	cbnz	x1, 13118 <mpfr_eq@@Base+0x38>
   13258:	mov	x0, x6
   1325c:	b	13264 <mpfr_eq@@Base+0x184>
   13260:	mov	x0, x4
   13264:	sub	x3, x2, #0x1
   13268:	lsr	x3, x3, #6
   1326c:	add	x3, x3, #0x1
   13270:	cmp	x3, x0
   13274:	b.cs	13300 <mpfr_eq@@Base+0x220>  // b.hs, b.nlast
   13278:	mov	x0, x3
   1327c:	sub	x4, x4, x0
   13280:	add	x5, x5, x4, lsl #3
   13284:	sub	x1, x6, x0
   13288:	add	x1, x11, x1, lsl #3
   1328c:	sub	x0, x0, #0x1
   13290:	cmp	x2, #0x3f
   13294:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   13298:	b.le	132c0 <mpfr_eq@@Base+0x1e0>
   1329c:	ldr	x4, [x5, x0, lsl #3]
   132a0:	ldr	x3, [x1, x0, lsl #3]
   132a4:	cmp	x4, x3
   132a8:	b.ne	13324 <mpfr_eq@@Base+0x244>  // b.any
   132ac:	sub	x2, x2, #0x40
   132b0:	sub	x0, x0, #0x1
   132b4:	cmp	x2, #0x3f
   132b8:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   132bc:	b.gt	1329c <mpfr_eq@@Base+0x1bc>
   132c0:	tst	x2, #0x3f
   132c4:	b.eq	13310 <mpfr_eq@@Base+0x230>  // b.none
   132c8:	and	w2, w2, #0x3f
   132cc:	mov	w3, #0x40                  	// #64
   132d0:	sub	w2, w3, w2
   132d4:	ldr	x3, [x5, x0, lsl #3]
   132d8:	lsr	x3, x3, x2
   132dc:	ldr	x0, [x1, x0, lsl #3]
   132e0:	lsr	x2, x0, x2
   132e4:	cmp	x3, x2
   132e8:	cset	w0, eq  // eq = none
   132ec:	b	13118 <mpfr_eq@@Base+0x38>
   132f0:	mov	x0, x6
   132f4:	b	13264 <mpfr_eq@@Base+0x184>
   132f8:	mov	x0, x6
   132fc:	b	13264 <mpfr_eq@@Base+0x184>
   13300:	lsl	x1, x0, #6
   13304:	cmp	x2, x1
   13308:	csel	x2, x2, x1, ls  // ls = plast
   1330c:	b	1327c <mpfr_eq@@Base+0x19c>
   13310:	ldr	x2, [x5, x0, lsl #3]
   13314:	ldr	x0, [x1, x0, lsl #3]
   13318:	cmp	x2, x0
   1331c:	cset	w0, eq  // eq = none
   13320:	b	13118 <mpfr_eq@@Base+0x38>
   13324:	mov	w0, #0x0                   	// #0
   13328:	b	13118 <mpfr_eq@@Base+0x38>
   1332c:	ldr	x2, [x1, #16]
   13330:	mov	w0, #0x0                   	// #0
   13334:	mov	x1, #0x2                   	// #2
   13338:	movk	x1, #0x8000, lsl #48
   1333c:	cmp	x2, x1
   13340:	b.eq	13118 <mpfr_eq@@Base+0x38>  // b.none
   13344:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13348:	cmp	x4, x0
   1334c:	ccmp	x2, x0, #0x0, eq  // eq = none
   13350:	cset	w0, eq  // eq = none
   13354:	b	13118 <mpfr_eq@@Base+0x38>

0000000000013358 <mpfr_exp10@@Base>:
   13358:	stp	x29, x30, [sp, #-16]!
   1335c:	mov	x29, sp
   13360:	mov	w3, w2
   13364:	mov	x2, x1
   13368:	mov	x1, #0xa                   	// #10
   1336c:	bl	ca10 <mpfr_ui_pow@plt>
   13370:	ldp	x29, x30, [sp], #16
   13374:	ret

0000000000013378 <mpfr_exp2@@Base>:
   13378:	stp	x29, x30, [sp, #-192]!
   1337c:	mov	x29, sp
   13380:	stp	x19, x20, [sp, #16]
   13384:	stp	x21, x22, [sp, #32]
   13388:	mov	x19, x0
   1338c:	mov	x21, x1
   13390:	mov	w20, w2
   13394:	ldr	x0, [x1, #16]
   13398:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1339c:	cmp	x0, x1
   133a0:	b.le	13684 <mpfr_exp2@@Base+0x30c>
   133a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   133a8:	ldr	x1, [x0, #2512]
   133ac:	add	x0, x0, #0x9d0
   133b0:	blr	x1
   133b4:	mrs	x1, tpidr_el0
   133b8:	ldr	x1, [x1, x0]
   133bc:	mov	x2, #0x0                   	// #0
   133c0:	sub	x1, x1, #0x2
   133c4:	mov	x0, x21
   133c8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   133cc:	cmp	w0, #0x0
   133d0:	b.le	13710 <mpfr_exp2@@Base+0x398>
   133d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   133d8:	ldr	x1, [x0, #2544]
   133dc:	add	x0, x0, #0x9f0
   133e0:	blr	x1
   133e4:	mov	x2, #0x0                   	// #0
   133e8:	mrs	x1, tpidr_el0
   133ec:	ldr	x1, [x1, x0]
   133f0:	mov	x0, x21
   133f4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   133f8:	tbz	w0, #31, 1372c <mpfr_exp2@@Base+0x3b4>
   133fc:	stp	x23, x24, [sp, #48]
   13400:	stp	x25, x26, [sp, #64]
   13404:	stp	x27, x28, [sp, #80]
   13408:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1340c:	ldr	x1, [x0, #2576]
   13410:	add	x0, x0, #0xa10
   13414:	blr	x1
   13418:	mrs	x1, tpidr_el0
   1341c:	ldr	w24, [x1, x0]
   13420:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13424:	ldr	x2, [x0, #2512]
   13428:	add	x0, x0, #0x9d0
   1342c:	blr	x2
   13430:	add	x2, x1, x0
   13434:	ldr	x27, [x1, x0]
   13438:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1343c:	ldr	x3, [x0, #2544]
   13440:	add	x0, x0, #0x9f0
   13444:	blr	x3
   13448:	ldr	x26, [x1, x0]
   1344c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   13450:	str	x3, [x2]
   13454:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   13458:	str	x2, [x1, x0]
   1345c:	ldr	x2, [x21, #16]
   13460:	tbz	x2, #63, 13478 <mpfr_exp2@@Base+0x100>
   13464:	neg	x2, x2
   13468:	ldr	x0, [x19]
   1346c:	add	x0, x0, #0x1
   13470:	cmp	x2, x0
   13474:	b.hi	13744 <mpfr_exp2@@Base+0x3cc>  // b.pmore
   13478:	mov	w1, #0x1                   	// #1
   1347c:	mov	x0, x21
   13480:	bl	c190 <mpfr_get_si@plt>
   13484:	mov	x23, x0
   13488:	str	x0, [sp, #104]
   1348c:	add	x22, sp, #0xa0
   13490:	ldr	x1, [x21]
   13494:	mov	x0, x22
   13498:	bl	ca80 <mpfr_init2@plt>
   1349c:	mov	w3, #0x0                   	// #0
   134a0:	mov	x2, x23
   134a4:	mov	x1, x21
   134a8:	mov	x0, x22
   134ac:	bl	c060 <mpfr_sub_si@plt>
   134b0:	ldr	x1, [sp, #176]
   134b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   134b8:	cmp	x1, x0
   134bc:	b.eq	1382c <mpfr_exp2@@Base+0x4b4>  // b.none
   134c0:	ldr	x25, [x19]
   134c4:	add	x23, x25, #0x5
   134c8:	cmp	x25, #0x1
   134cc:	b.eq	13860 <mpfr_exp2@@Base+0x4e8>  // b.none
   134d0:	b.le	13848 <mpfr_exp2@@Base+0x4d0>
   134d4:	sub	x0, x25, #0x1
   134d8:	clz	x1, x0
   134dc:	mov	w0, #0x40                  	// #64
   134e0:	sub	w0, w0, w1
   134e4:	sxtw	x0, w0
   134e8:	add	x23, x23, x0
   134ec:	mov	x1, x23
   134f0:	add	x0, sp, #0x80
   134f4:	bl	ca80 <mpfr_init2@plt>
   134f8:	mov	x0, #0x40                  	// #64
   134fc:	str	x0, [sp, #120]
   13500:	add	x21, sp, #0x80
   13504:	mov	w28, #0x2                   	// #2
   13508:	add	x0, sp, #0xa0
   1350c:	str	x0, [sp, #112]
   13510:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13514:	ldr	x1, [x0, #2560]
   13518:	add	x0, x0, #0xa00
   1351c:	blr	x1
   13520:	mov	w2, w28
   13524:	mrs	x1, tpidr_el0
   13528:	add	x1, x1, x0
   1352c:	mov	x0, x21
   13530:	bl	c380 <mpfr_cache@plt>
   13534:	mov	w3, w28
   13538:	mov	x2, x21
   1353c:	ldr	x1, [sp, #112]
   13540:	mov	x0, x21
   13544:	bl	bd50 <mpfr_mul@plt>
   13548:	ldr	x22, [sp, #144]
   1354c:	add	x22, x22, #0x2
   13550:	sub	x22, x23, x22
   13554:	mov	w2, #0x0                   	// #0
   13558:	mov	x1, x21
   1355c:	mov	x0, x21
   13560:	bl	c750 <mpfr_exp@plt>
   13564:	ldr	x1, [sp, #144]
   13568:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1356c:	cmp	x1, x0
   13570:	b.le	13868 <mpfr_exp2@@Base+0x4f0>
   13574:	cmp	w20, #0x0
   13578:	cinc	x3, x25, eq  // eq = none
   1357c:	ldr	x0, [sp, #128]
   13580:	add	x1, x0, #0x3e
   13584:	subs	x0, x0, #0x1
   13588:	csel	x1, x1, x0, mi  // mi = first
   1358c:	asr	x1, x1, #6
   13590:	mov	x2, x22
   13594:	add	x1, x1, #0x1
   13598:	ldr	x0, [sp, #152]
   1359c:	bl	c370 <mpfr_round_p@plt>
   135a0:	cbz	w0, 13868 <mpfr_exp2@@Base+0x4f0>
   135a4:	add	x21, sp, #0x80
   135a8:	ldr	w3, [sp, #136]
   135ac:	mov	w2, w20
   135b0:	mov	x1, x21
   135b4:	mov	x0, x19
   135b8:	bl	c6a0 <mpfr_set4@plt>
   135bc:	mov	w22, w0
   135c0:	mov	x0, x21
   135c4:	bl	c070 <mpfr_clear@plt>
   135c8:	add	x0, sp, #0xa0
   135cc:	bl	c070 <mpfr_clear@plt>
   135d0:	cbz	w20, 138bc <mpfr_exp2@@Base+0x544>
   135d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   135d8:	ldr	x1, [x0, #2576]
   135dc:	add	x0, x0, #0xa10
   135e0:	blr	x1
   135e4:	mrs	x1, tpidr_el0
   135e8:	str	wzr, [x1, x0]
   135ec:	mov	w3, w20
   135f0:	ldr	x2, [sp, #104]
   135f4:	mov	x1, x19
   135f8:	mov	x0, x19
   135fc:	bl	bb90 <mpfr_mul_2si@plt>
   13600:	mov	w2, w0
   13604:	cbnz	w0, 13988 <mpfr_exp2@@Base+0x610>
   13608:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1360c:	ldr	x1, [x0, #2576]
   13610:	add	x0, x0, #0xa10
   13614:	blr	x1
   13618:	mrs	x2, tpidr_el0
   1361c:	ldr	w1, [x2, x0]
   13620:	orr	w1, w24, w1
   13624:	str	w1, [x2, x0]
   13628:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1362c:	ldr	x3, [x0, #2512]
   13630:	add	x0, x0, #0x9d0
   13634:	blr	x3
   13638:	str	x27, [x2, x0]
   1363c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13640:	ldr	x3, [x0, #2544]
   13644:	add	x0, x0, #0x9f0
   13648:	blr	x3
   1364c:	str	x26, [x2, x0]
   13650:	ldr	x0, [x19, #16]
   13654:	cmp	x26, x0
   13658:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   1365c:	b.gt	1395c <mpfr_exp2@@Base+0x5e4>
   13660:	cbnz	w22, 13980 <mpfr_exp2@@Base+0x608>
   13664:	ldp	x23, x24, [sp, #48]
   13668:	ldp	x25, x26, [sp, #64]
   1366c:	ldp	x27, x28, [sp, #80]
   13670:	mov	w0, w22
   13674:	ldp	x19, x20, [sp, #16]
   13678:	ldp	x21, x22, [sp, #32]
   1367c:	ldp	x29, x30, [sp], #192
   13680:	ret
   13684:	mov	x1, #0x2                   	// #2
   13688:	movk	x1, #0x8000, lsl #48
   1368c:	cmp	x0, x1
   13690:	b.eq	136bc <mpfr_exp2@@Base+0x344>  // b.none
   13694:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13698:	cmp	x0, x1
   1369c:	b.eq	136ec <mpfr_exp2@@Base+0x374>  // b.none
   136a0:	mov	w3, w2
   136a4:	mov	x2, #0x0                   	// #0
   136a8:	mov	x1, #0x1                   	// #1
   136ac:	mov	x0, x19
   136b0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   136b4:	mov	w22, w0
   136b8:	b	13670 <mpfr_exp2@@Base+0x2f8>
   136bc:	str	x1, [x19, #16]
   136c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   136c4:	ldr	x1, [x0, #2576]
   136c8:	add	x0, x0, #0xa10
   136cc:	blr	x1
   136d0:	mrs	x1, tpidr_el0
   136d4:	add	x0, x1, x0
   136d8:	ldr	w1, [x0]
   136dc:	orr	w1, w1, #0x4
   136e0:	str	w1, [x0]
   136e4:	mov	w22, #0x0                   	// #0
   136e8:	b	13670 <mpfr_exp2@@Base+0x2f8>
   136ec:	ldr	w1, [x21, #8]
   136f0:	cmp	w1, #0x0
   136f4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   136f8:	csel	x0, x0, x1, gt
   136fc:	str	x0, [x19, #16]
   13700:	mov	w0, #0x1                   	// #1
   13704:	str	w0, [x19, #8]
   13708:	mov	w22, #0x0                   	// #0
   1370c:	b	13670 <mpfr_exp2@@Base+0x2f8>
   13710:	cmp	w20, #0x0
   13714:	mov	w2, #0x1                   	// #1
   13718:	csel	w1, w20, w2, ne  // ne = any
   1371c:	mov	x0, x19
   13720:	bl	c3c0 <mpfr_underflow@plt>
   13724:	mov	w22, w0
   13728:	b	13670 <mpfr_exp2@@Base+0x2f8>
   1372c:	mov	w2, #0x1                   	// #1
   13730:	mov	w1, w20
   13734:	mov	x0, x19
   13738:	bl	bf40 <mpfr_overflow@plt>
   1373c:	mov	w22, w0
   13740:	b	13670 <mpfr_exp2@@Base+0x2f8>
   13744:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13748:	ldr	x1, [x0, #2576]
   1374c:	add	x0, x0, #0xa10
   13750:	blr	x1
   13754:	mrs	x1, tpidr_el0
   13758:	str	wzr, [x1, x0]
   1375c:	ldr	w0, [x21, #8]
   13760:	cmp	w0, #0x0
   13764:	mov	w4, w20
   13768:	cset	w3, gt
   1376c:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   13770:	ldr	x1, [x1, #3928]
   13774:	mov	x0, x19
   13778:	bl	c540 <mpfr_round_near_x@plt>
   1377c:	mov	w22, w0
   13780:	cbz	w0, 13478 <mpfr_exp2@@Base+0x100>
   13784:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13788:	ldr	x1, [x0, #2576]
   1378c:	add	x0, x0, #0xa10
   13790:	blr	x1
   13794:	mrs	x2, tpidr_el0
   13798:	ldr	w1, [x2, x0]
   1379c:	orr	w1, w24, w1
   137a0:	str	w1, [x2, x0]
   137a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   137a8:	ldr	x3, [x0, #2512]
   137ac:	add	x0, x0, #0x9d0
   137b0:	blr	x3
   137b4:	str	x27, [x2, x0]
   137b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   137bc:	ldr	x3, [x0, #2544]
   137c0:	add	x0, x0, #0x9f0
   137c4:	blr	x3
   137c8:	str	x26, [x2, x0]
   137cc:	ldr	x0, [x19, #16]
   137d0:	cmp	x27, x0
   137d4:	ccmp	x26, x0, #0x1, le
   137d8:	b.lt	13808 <mpfr_exp2@@Base+0x490>  // b.tstop
   137dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   137e0:	ldr	x2, [x0, #2576]
   137e4:	add	x0, x0, #0xa10
   137e8:	blr	x2
   137ec:	orr	w1, w1, #0x8
   137f0:	mrs	x2, tpidr_el0
   137f4:	str	w1, [x2, x0]
   137f8:	ldp	x23, x24, [sp, #48]
   137fc:	ldp	x25, x26, [sp, #64]
   13800:	ldp	x27, x28, [sp, #80]
   13804:	b	13670 <mpfr_exp2@@Base+0x2f8>
   13808:	mov	w2, w20
   1380c:	mov	w1, w22
   13810:	mov	x0, x19
   13814:	bl	cb30 <mpfr_check_range@plt>
   13818:	mov	w22, w0
   1381c:	ldp	x23, x24, [sp, #48]
   13820:	ldp	x25, x26, [sp, #64]
   13824:	ldp	x27, x28, [sp, #80]
   13828:	b	13670 <mpfr_exp2@@Base+0x2f8>
   1382c:	mov	w3, #0x0                   	// #0
   13830:	mov	x2, #0x0                   	// #0
   13834:	mov	x1, #0x1                   	// #1
   13838:	mov	x0, x19
   1383c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   13840:	mov	w22, #0x0                   	// #0
   13844:	b	135c8 <mpfr_exp2@@Base+0x250>
   13848:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   1384c:	add	x2, x2, #0x218
   13850:	mov	w1, #0x73                  	// #115
   13854:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   13858:	add	x0, x0, #0x228
   1385c:	bl	cb40 <mpfr_assert_fail@plt>
   13860:	mov	x0, #0x0                   	// #0
   13864:	b	134e8 <mpfr_exp2@@Base+0x170>
   13868:	mov	x0, #0xfffffffffffffeff    	// #-257
   1386c:	movk	x0, #0x7fff, lsl #48
   13870:	sub	x0, x0, x23
   13874:	ldr	x1, [sp, #120]
   13878:	cmp	x0, x1
   1387c:	b.lt	138a4 <mpfr_exp2@@Base+0x52c>  // b.tstop
   13880:	ldr	x0, [sp, #120]
   13884:	add	x23, x23, x0
   13888:	add	x0, x23, x23, lsr #63
   1388c:	asr	x0, x0, #1
   13890:	str	x0, [sp, #120]
   13894:	mov	x1, x23
   13898:	mov	x0, x21
   1389c:	bl	bed0 <mpfr_set_prec@plt>
   138a0:	b	13510 <mpfr_exp2@@Base+0x198>
   138a4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   138a8:	add	x2, x2, #0x230
   138ac:	mov	w1, #0x86                  	// #134
   138b0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   138b4:	add	x0, x0, #0x228
   138b8:	bl	cb40 <mpfr_assert_fail@plt>
   138bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   138c0:	ldr	x1, [x0, #2512]
   138c4:	add	x0, x0, #0x9d0
   138c8:	blr	x1
   138cc:	mrs	x1, tpidr_el0
   138d0:	ldr	x0, [x1, x0]
   138d4:	sub	x0, x0, #0x1
   138d8:	ldr	x1, [sp, #104]
   138dc:	cmp	x0, x1
   138e0:	b.ne	135d4 <mpfr_exp2@@Base+0x25c>  // b.any
   138e4:	ldr	x0, [x19, #16]
   138e8:	cbnz	x0, 135d4 <mpfr_exp2@@Base+0x25c>
   138ec:	mov	x0, x19
   138f0:	bl	bf00 <mpfr_powerof2_raw@plt>
   138f4:	cbz	w0, 135d4 <mpfr_exp2@@Base+0x25c>
   138f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   138fc:	ldr	x1, [x0, #2512]
   13900:	add	x0, x0, #0x9d0
   13904:	blr	x1
   13908:	mrs	x2, tpidr_el0
   1390c:	add	x4, x2, x0
   13910:	ldr	x3, [x2, x0]
   13914:	str	x3, [x19, #16]
   13918:	orr	w1, w24, #0x1
   1391c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13920:	ldr	x5, [x0, #2576]
   13924:	add	x0, x0, #0xa10
   13928:	blr	x5
   1392c:	str	w1, [x2, x0]
   13930:	str	x27, [x4]
   13934:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13938:	ldr	x4, [x0, #2544]
   1393c:	add	x0, x0, #0x9f0
   13940:	blr	x4
   13944:	str	x26, [x2, x0]
   13948:	cmp	x26, x3
   1394c:	mov	w2, #0x1                   	// #1
   13950:	ccmp	x27, x3, #0x0, ge  // ge = tcont
   13954:	mov	w22, w2
   13958:	b.le	139e4 <mpfr_exp2@@Base+0x66c>
   1395c:	mov	w2, w20
   13960:	mov	w1, w22
   13964:	mov	x0, x19
   13968:	bl	cb30 <mpfr_check_range@plt>
   1396c:	mov	w22, w0
   13970:	ldp	x23, x24, [sp, #48]
   13974:	ldp	x25, x26, [sp, #64]
   13978:	ldp	x27, x28, [sp, #80]
   1397c:	b	13670 <mpfr_exp2@@Base+0x2f8>
   13980:	mov	w2, w22
   13984:	b	139e4 <mpfr_exp2@@Base+0x66c>
   13988:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1398c:	ldr	x1, [x0, #2576]
   13990:	add	x0, x0, #0xa10
   13994:	blr	x1
   13998:	mrs	x3, tpidr_el0
   1399c:	ldr	w1, [x3, x0]
   139a0:	orr	w1, w24, w1
   139a4:	str	w1, [x3, x0]
   139a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   139ac:	ldr	x4, [x0, #2512]
   139b0:	add	x0, x0, #0x9d0
   139b4:	blr	x4
   139b8:	str	x27, [x3, x0]
   139bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   139c0:	ldr	x4, [x0, #2544]
   139c4:	add	x0, x0, #0x9f0
   139c8:	blr	x4
   139cc:	str	x26, [x3, x0]
   139d0:	ldr	x0, [x19, #16]
   139d4:	cmp	x27, x0
   139d8:	ccmp	x26, x0, #0x1, le
   139dc:	mov	w22, w2
   139e0:	b.lt	1395c <mpfr_exp2@@Base+0x5e4>  // b.tstop
   139e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   139e8:	ldr	x3, [x0, #2576]
   139ec:	add	x0, x0, #0xa10
   139f0:	blr	x3
   139f4:	orr	w1, w1, #0x8
   139f8:	mrs	x3, tpidr_el0
   139fc:	str	w1, [x3, x0]
   13a00:	mov	w22, w2
   13a04:	ldp	x23, x24, [sp, #48]
   13a08:	ldp	x25, x26, [sp, #64]
   13a0c:	ldp	x27, x28, [sp, #80]
   13a10:	b	13670 <mpfr_exp2@@Base+0x2f8>
   13a14:	stp	x29, x30, [sp, #-176]!
   13a18:	mov	x29, sp
   13a1c:	str	x0, [sp, #168]
   13a20:	str	x4, [sp, #136]
   13a24:	str	x5, [sp, #152]
   13a28:	ldr	x0, [x0]
   13a2c:	str	x0, [sp, #144]
   13a30:	cmp	w3, #0x3e
   13a34:	b.hi	13b4c <mpfr_exp2@@Base+0x7d4>  // b.pmore
   13a38:	stp	x19, x20, [sp, #16]
   13a3c:	stp	x21, x22, [sp, #32]
   13a40:	stp	x23, x24, [sp, #48]
   13a44:	stp	x27, x28, [sp, #80]
   13a48:	mov	x19, x1
   13a4c:	mov	x23, x2
   13a50:	mov	w21, w3
   13a54:	sxtw	x22, w3
   13a58:	add	x22, x22, #0x1
   13a5c:	ldr	x1, [sp, #136]
   13a60:	add	x0, x1, x22, lsl #4
   13a64:	str	x0, [sp, #128]
   13a68:	add	w0, w3, #0x1
   13a6c:	lsl	w0, w0, #1
   13a70:	add	x0, x1, w0, sxtw #4
   13a74:	str	x0, [sp, #120]
   13a78:	ldr	x0, [sp, #152]
   13a7c:	add	x28, x0, x22, lsl #3
   13a80:	mov	x1, #0x0                   	// #0
   13a84:	mov	x0, x19
   13a88:	bl	ba90 <__gmpz_scan1@plt>
   13a8c:	mov	x20, x0
   13a90:	tbnz	x0, #63, 13b78 <mpfr_exp2@@Base+0x800>
   13a94:	mov	x2, x0
   13a98:	mov	x1, x19
   13a9c:	mov	x0, x19
   13aa0:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   13aa4:	sub	x0, x23, x20
   13aa8:	str	x0, [sp, #104]
   13aac:	mov	x1, x19
   13ab0:	ldr	x19, [sp, #120]
   13ab4:	mov	x0, x19
   13ab8:	bl	bfa0 <__gmpz_set@plt>
   13abc:	cmp	w21, #0x1
   13ac0:	b.le	13af4 <mpfr_exp2@@Base+0x77c>
   13ac4:	mov	x0, x19
   13ac8:	add	x19, x19, #0x10
   13acc:	sub	w20, w21, #0x2
   13ad0:	add	x20, x0, x20, lsl #4
   13ad4:	add	x20, x20, #0x20
   13ad8:	sub	x1, x19, #0x10
   13adc:	mov	x2, x1
   13ae0:	mov	x0, x19
   13ae4:	bl	bff0 <__gmpz_mul@plt>
   13ae8:	add	x19, x19, #0x10
   13aec:	cmp	x19, x20
   13af0:	b.ne	13ad8 <mpfr_exp2@@Base+0x760>  // b.any
   13af4:	mov	x1, #0x1                   	// #1
   13af8:	ldr	x0, [sp, #136]
   13afc:	bl	bcb0 <__gmpz_set_ui@plt>
   13b00:	mov	x1, #0x1                   	// #1
   13b04:	ldr	x0, [sp, #128]
   13b08:	bl	bcb0 <__gmpz_set_ui@plt>
   13b0c:	ldr	x0, [sp, #152]
   13b10:	str	xzr, [x0]
   13b14:	str	xzr, [x0, x22, lsl #3]
   13b18:	mov	x0, #0x1                   	// #1
   13b1c:	lsl	x0, x0, x21
   13b20:	str	x0, [sp, #160]
   13b24:	ldr	x1, [sp, #144]
   13b28:	cmp	x1, #0x0
   13b2c:	ccmp	x0, #0x1, #0x0, gt
   13b30:	b.ls	13ee8 <mpfr_exp2@@Base+0xb70>  // b.plast
   13b34:	stp	x25, x26, [sp, #64]
   13b38:	str	wzr, [sp, #100]
   13b3c:	mov	x19, #0x0                   	// #0
   13b40:	mov	x0, #0x1                   	// #1
   13b44:	str	x0, [sp, #112]
   13b48:	b	13bb0 <mpfr_exp2@@Base+0x838>
   13b4c:	stp	x19, x20, [sp, #16]
   13b50:	stp	x21, x22, [sp, #32]
   13b54:	stp	x23, x24, [sp, #48]
   13b58:	stp	x25, x26, [sp, #64]
   13b5c:	stp	x27, x28, [sp, #80]
   13b60:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   13b64:	add	x2, x2, #0x278
   13b68:	mov	w1, #0x34                  	// #52
   13b6c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   13b70:	add	x0, x0, #0x2a0
   13b74:	bl	cb40 <mpfr_assert_fail@plt>
   13b78:	stp	x25, x26, [sp, #64]
   13b7c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   13b80:	add	x2, x2, #0x2a8
   13b84:	mov	w1, #0x3d                  	// #61
   13b88:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   13b8c:	add	x0, x0, #0x2a0
   13b90:	bl	cb40 <mpfr_assert_fail@plt>
   13b94:	str	w20, [sp, #100]
   13b98:	ldr	x0, [sp, #144]
   13b9c:	cmp	x0, x19
   13ba0:	ldr	x0, [sp, #112]
   13ba4:	ldr	x1, [sp, #160]
   13ba8:	ccmp	x0, x1, #0x2, gt
   13bac:	b.cs	13d0c <mpfr_exp2@@Base+0x994>  // b.hs, b.nlast
   13bb0:	ldr	w23, [sp, #100]
   13bb4:	add	w20, w23, #0x1
   13bb8:	sxtw	x21, w20
   13bbc:	sbfiz	x25, x20, #3, #32
   13bc0:	str	xzr, [x28, x21, lsl #3]
   13bc4:	lsl	x21, x21, #4
   13bc8:	ldr	x0, [sp, #136]
   13bcc:	add	x22, x0, x21
   13bd0:	ldr	x0, [sp, #112]
   13bd4:	add	x27, x0, #0x1
   13bd8:	str	x27, [sp, #112]
   13bdc:	mov	x1, x27
   13be0:	mov	x0, x22
   13be4:	bl	bcb0 <__gmpz_set_ui@plt>
   13be8:	ldr	x0, [sp, #128]
   13bec:	add	x21, x0, x21
   13bf0:	mov	x1, x27
   13bf4:	mov	x0, x21
   13bf8:	bl	bcb0 <__gmpz_set_ui@plt>
   13bfc:	tbnz	w27, #0, 13b94 <mpfr_exp2@@Base+0x81c>
   13c00:	sxtw	x23, w23
   13c04:	ldr	x24, [sp, #120]
   13c08:	ldr	x0, [sp, #152]
   13c0c:	add	x25, x0, x25
   13c10:	mov	x2, x24
   13c14:	mov	x1, x21
   13c18:	mov	x0, x21
   13c1c:	bl	bff0 <__gmpz_mul@plt>
   13c20:	sub	x20, x21, #0x10
   13c24:	mov	x2, x22
   13c28:	mov	x1, x20
   13c2c:	mov	x0, x20
   13c30:	bl	bff0 <__gmpz_mul@plt>
   13c34:	ldr	w0, [sp, #100]
   13c38:	sub	w19, w0, w23
   13c3c:	ldr	x0, [sp, #104]
   13c40:	lsl	x19, x0, x19
   13c44:	mov	x2, x19
   13c48:	mov	x1, x20
   13c4c:	mov	x0, x20
   13c50:	bl	c200 <__gmpz_mul_2exp@plt>
   13c54:	mov	x2, x21
   13c58:	mov	x1, x20
   13c5c:	mov	x0, x20
   13c60:	bl	c9c0 <__gmpz_add@plt>
   13c64:	sub	x26, x22, #0x10
   13c68:	mov	x2, x22
   13c6c:	mov	x1, x26
   13c70:	mov	x0, x26
   13c74:	bl	bff0 <__gmpz_mul@plt>
   13c78:	ldr	x0, [x28, x23, lsl #3]
   13c7c:	add	x0, x0, #0x1
   13c80:	str	x0, [x28, x23, lsl #3]
   13c84:	ldr	w0, [x22, #4]
   13c88:	cmp	w0, #0x0
   13c8c:	cneg	w0, w0, lt  // lt = tstop
   13c90:	ldr	x1, [x22, #8]
   13c94:	add	x1, x1, w0, sxtw #3
   13c98:	ldur	x3, [x1, #-8]
   13c9c:	ldr	w1, [x24, #4]
   13ca0:	cmp	w1, #0x0
   13ca4:	cneg	w1, w1, lt  // lt = tstop
   13ca8:	ldr	x2, [x24, #8]
   13cac:	add	x2, x2, w1, sxtw #3
   13cb0:	ldur	x2, [x2, #-8]
   13cb4:	sbfiz	x0, x0, #6, #32
   13cb8:	clz	x3, x3
   13cbc:	sub	x0, x0, x3
   13cc0:	add	x19, x0, x19
   13cc4:	sbfiz	x1, x1, #6, #32
   13cc8:	clz	x0, x2
   13ccc:	sub	x1, x1, x0
   13cd0:	sub	x19, x19, x1
   13cd4:	sub	x19, x19, #0x1
   13cd8:	ldur	x0, [x25, #-8]
   13cdc:	add	x19, x19, x0
   13ce0:	stur	x19, [x25, #-8]
   13ce4:	str	x19, [x25], #-8
   13ce8:	lsr	x27, x27, #1
   13cec:	mov	w0, w23
   13cf0:	sub	x23, x23, #0x1
   13cf4:	mov	x21, x20
   13cf8:	add	x24, x24, #0x10
   13cfc:	mov	x22, x26
   13d00:	tbz	w27, #0, 13c10 <mpfr_exp2@@Base+0x898>
   13d04:	str	w0, [sp, #100]
   13d08:	b	13b98 <mpfr_exp2@@Base+0x820>
   13d0c:	ldr	w1, [sp, #100]
   13d10:	cmp	w1, #0x0
   13d14:	b.le	13efc <mpfr_exp2@@Base+0xb84>
   13d18:	add	x28, x28, w1, sxtw #3
   13d1c:	sbfiz	x0, x1, #4, #32
   13d20:	ldr	x2, [sp, #128]
   13d24:	add	x20, x2, x0
   13d28:	ldr	x3, [sp, #136]
   13d2c:	add	x21, x3, x0
   13d30:	sub	w24, w1, #0x1
   13d34:	sub	x24, x0, x24, lsl #4
   13d38:	sub	x0, x2, #0x10
   13d3c:	add	x24, x24, x0
   13d40:	mov	x23, #0x0                   	// #0
   13d44:	mov	x25, #0x1                   	// #1
   13d48:	ldur	x2, [x28, #-8]
   13d4c:	ldr	x0, [sp, #120]
   13d50:	add	x2, x0, x2, lsl #4
   13d54:	mov	x1, x20
   13d58:	mov	x0, x20
   13d5c:	bl	bff0 <__gmpz_mul@plt>
   13d60:	sub	x19, x20, #0x10
   13d64:	mov	x2, x21
   13d68:	mov	x1, x19
   13d6c:	mov	x0, x19
   13d70:	bl	bff0 <__gmpz_mul@plt>
   13d74:	ldr	x0, [x28], #-8
   13d78:	lsl	x0, x25, x0
   13d7c:	add	x23, x23, x0
   13d80:	ldr	x0, [sp, #104]
   13d84:	mul	x2, x0, x23
   13d88:	mov	x1, x19
   13d8c:	mov	x0, x19
   13d90:	bl	c200 <__gmpz_mul_2exp@plt>
   13d94:	mov	x2, x20
   13d98:	mov	x1, x19
   13d9c:	mov	x0, x19
   13da0:	bl	c9c0 <__gmpz_add@plt>
   13da4:	sub	x22, x21, #0x10
   13da8:	mov	x2, x21
   13dac:	mov	x1, x22
   13db0:	mov	x0, x22
   13db4:	bl	bff0 <__gmpz_mul@plt>
   13db8:	mov	x20, x19
   13dbc:	mov	x21, x22
   13dc0:	cmp	x19, x24
   13dc4:	b.ne	13d48 <mpfr_exp2@@Base+0x9d0>  // b.any
   13dc8:	ldr	x0, [sp, #128]
   13dcc:	ldr	w0, [x0, #4]
   13dd0:	ldp	x25, x26, [sp, #64]
   13dd4:	cmp	w0, #0x0
   13dd8:	cneg	w0, w0, lt  // lt = tstop
   13ddc:	ldr	x3, [sp, #128]
   13de0:	ldr	x1, [x3, #8]
   13de4:	add	x1, x1, w0, sxtw #3
   13de8:	ldur	x1, [x1, #-8]
   13dec:	sbfiz	x0, x0, #6, #32
   13df0:	clz	x1, x1
   13df4:	sub	x0, x0, x1
   13df8:	ldr	x1, [sp, #144]
   13dfc:	lsl	x2, x1, #1
   13e00:	subs	x19, x0, x2
   13e04:	b.mi	13ebc <mpfr_exp2@@Base+0xb44>  // b.first
   13e08:	mov	x2, x19
   13e0c:	mov	x1, x3
   13e10:	mov	x0, x3
   13e14:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   13e18:	ldr	x3, [sp, #136]
   13e1c:	ldr	w0, [x3, #4]
   13e20:	cmp	w0, #0x0
   13e24:	cneg	w0, w0, lt  // lt = tstop
   13e28:	ldr	x1, [x3, #8]
   13e2c:	add	x1, x1, w0, sxtw #3
   13e30:	ldur	x1, [x1, #-8]
   13e34:	sbfiz	x0, x0, #6, #32
   13e38:	clz	x1, x1
   13e3c:	sub	x0, x0, x1
   13e40:	ldr	x1, [sp, #144]
   13e44:	sub	x2, x0, x1
   13e48:	sub	x19, x19, x2
   13e4c:	cmp	x2, #0x0
   13e50:	b.le	13ed0 <mpfr_exp2@@Base+0xb58>
   13e54:	mov	x1, x3
   13e58:	mov	x0, x3
   13e5c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   13e60:	ldr	x2, [sp, #136]
   13e64:	ldr	x20, [sp, #128]
   13e68:	mov	x1, x20
   13e6c:	mov	x0, x20
   13e70:	bl	bb30 <__gmpz_tdiv_q@plt>
   13e74:	mov	w2, #0x3                   	// #3
   13e78:	mov	x1, x20
   13e7c:	ldr	x20, [sp, #168]
   13e80:	mov	x0, x20
   13e84:	bl	c240 <mpfr_set_z@plt>
   13e88:	ldr	x0, [x20, #16]
   13e8c:	add	x19, x19, x0
   13e90:	ldr	x0, [sp, #112]
   13e94:	sub	x0, x0, #0x1
   13e98:	ldr	x2, [sp, #104]
   13e9c:	msub	x19, x0, x2, x19
   13ea0:	str	x19, [x20, #16]
   13ea4:	ldp	x19, x20, [sp, #16]
   13ea8:	ldp	x21, x22, [sp, #32]
   13eac:	ldp	x23, x24, [sp, #48]
   13eb0:	ldp	x27, x28, [sp, #80]
   13eb4:	ldp	x29, x30, [sp], #176
   13eb8:	ret
   13ebc:	sub	x2, x2, x0
   13ec0:	ldr	x0, [sp, #128]
   13ec4:	mov	x1, x0
   13ec8:	bl	c200 <__gmpz_mul_2exp@plt>
   13ecc:	b	13e18 <mpfr_exp2@@Base+0xaa0>
   13ed0:	ldr	x1, [sp, #144]
   13ed4:	sub	x2, x1, x0
   13ed8:	ldr	x0, [sp, #136]
   13edc:	mov	x1, x0
   13ee0:	bl	c200 <__gmpz_mul_2exp@plt>
   13ee4:	b	13e60 <mpfr_exp2@@Base+0xae8>
   13ee8:	mov	x0, #0x1                   	// #1
   13eec:	str	x0, [sp, #112]
   13ef0:	ldr	x0, [sp, #128]
   13ef4:	ldr	w0, [x0, #4]
   13ef8:	b	13dd4 <mpfr_exp2@@Base+0xa5c>
   13efc:	ldp	x25, x26, [sp, #64]
   13f00:	b	13ef0 <mpfr_exp2@@Base+0xb78>

0000000000013f04 <mpfr_exp_3@@Base>:
   13f04:	stp	x29, x30, [sp, #-320]!
   13f08:	mov	x29, sp
   13f0c:	stp	x19, x20, [sp, #16]
   13f10:	stp	x21, x22, [sp, #32]
   13f14:	stp	x23, x24, [sp, #48]
   13f18:	stp	x25, x26, [sp, #64]
   13f1c:	stp	x27, x28, [sp, #80]
   13f20:	str	x0, [sp, #168]
   13f24:	mov	x19, x1
   13f28:	str	w2, [sp, #184]
   13f2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13f30:	ldr	x1, [x0, #2576]
   13f34:	add	x0, x0, #0xa10
   13f38:	blr	x1
   13f3c:	mrs	x1, tpidr_el0
   13f40:	ldr	w0, [x1, x0]
   13f44:	str	w0, [sp, #188]
   13f48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13f4c:	ldr	x2, [x0, #2512]
   13f50:	add	x0, x0, #0x9d0
   13f54:	blr	x2
   13f58:	add	x2, x1, x0
   13f5c:	ldr	x0, [x1, x0]
   13f60:	str	x0, [sp, #192]
   13f64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   13f68:	ldr	x3, [x0, #2544]
   13f6c:	add	x0, x0, #0x9f0
   13f70:	blr	x3
   13f74:	ldr	x3, [x1, x0]
   13f78:	str	x3, [sp, #200]
   13f7c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   13f80:	str	x3, [x2]
   13f84:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   13f88:	str	x2, [x1, x0]
   13f8c:	ldr	x0, [x19]
   13f90:	cmp	x0, #0x1
   13f94:	b.eq	140a8 <mpfr_exp_3@@Base+0x1a4>  // b.none
   13f98:	b.le	1408c <mpfr_exp_3@@Base+0x188>
   13f9c:	ldr	x0, [x19]
   13fa0:	sub	x0, x0, #0x1
   13fa4:	clz	x0, x0
   13fa8:	mov	w1, #0x3a                  	// #58
   13fac:	subs	w0, w1, w0
   13fb0:	csel	w0, w0, wzr, pl  // pl = nfrst
   13fb4:	str	w0, [sp, #156]
   13fb8:	ldr	x21, [x19, #16]
   13fbc:	str	x21, [sp, #160]
   13fc0:	add	x20, sp, #0x100
   13fc4:	ldr	x1, [x19]
   13fc8:	mov	x0, x20
   13fcc:	bl	ca80 <mpfr_init2@plt>
   13fd0:	ldr	w3, [x19, #8]
   13fd4:	mov	w2, #0x3                   	// #3
   13fd8:	mov	x1, x19
   13fdc:	mov	x0, x20
   13fe0:	bl	c6a0 <mpfr_set4@plt>
   13fe4:	str	xzr, [sp, #128]
   13fe8:	cmp	x21, #0x0
   13fec:	b.gt	140b0 <mpfr_exp_3@@Base+0x1ac>
   13ff0:	ldr	x0, [sp, #168]
   13ff4:	ldr	x20, [x0]
   13ff8:	ldrsw	x19, [sp, #156]
   13ffc:	add	x0, x20, x19
   14000:	cmp	x0, #0x1
   14004:	b.eq	140f0 <mpfr_exp_3@@Base+0x1ec>  // b.none
   14008:	cmp	x0, #0x1
   1400c:	b.le	140d4 <mpfr_exp_3@@Base+0x1d0>
   14010:	ldr	x0, [sp, #168]
   14014:	ldr	x0, [x0]
   14018:	add	x0, x19, x0
   1401c:	sub	x0, x0, #0x1
   14020:	clz	x0, x0
   14024:	mov	w1, #0x40                  	// #64
   14028:	sub	w0, w1, w0
   1402c:	sxtw	x0, w0
   14030:	add	x0, x20, x0
   14034:	str	x0, [sp, #112]
   14038:	add	x20, x0, #0x22
   1403c:	ldr	x0, [sp, #128]
   14040:	add	x20, x20, x0
   14044:	mov	x1, x20
   14048:	add	x0, sp, #0x120
   1404c:	bl	ca80 <mpfr_init2@plt>
   14050:	mov	x1, x20
   14054:	add	x0, sp, #0xe0
   14058:	bl	ca80 <mpfr_init2@plt>
   1405c:	add	x0, sp, #0xd0
   14060:	bl	bf90 <mpfr_mpz_init@plt>
   14064:	mov	x0, #0x40                  	// #64
   14068:	str	x0, [sp, #120]
   1406c:	add	x0, sp, #0x100
   14070:	str	x0, [sp, #104]
   14074:	add	x28, sp, #0xd0
   14078:	add	x19, sp, #0xe0
   1407c:	add	x0, sp, #0x120
   14080:	str	x0, [sp, #176]
   14084:	mov	x26, x0
   14088:	b	14338 <mpfr_exp_3@@Base+0x434>
   1408c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   14090:	add	x2, x2, #0x2c8
   14094:	mov	w1, #0xb7                  	// #183
   14098:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   1409c:	add	x0, x0, #0x2a0
   140a0:	bl	cb40 <mpfr_assert_fail@plt>
   140a4:	b	13f9c <mpfr_exp_3@@Base+0x98>
   140a8:	str	wzr, [sp, #156]
   140ac:	b	13fb8 <mpfr_exp_3@@Base+0xb4>
   140b0:	mov	w3, #0x0                   	// #0
   140b4:	mov	x2, x21
   140b8:	mov	x1, x19
   140bc:	add	x0, sp, #0x100
   140c0:	bl	c8f0 <mpfr_div_2ui@plt>
   140c4:	str	x21, [sp, #128]
   140c8:	ldr	x0, [sp, #272]
   140cc:	str	x0, [sp, #160]
   140d0:	b	13ff0 <mpfr_exp_3@@Base+0xec>
   140d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   140d8:	add	x2, x2, #0x2e0
   140dc:	mov	w1, #0xcb                  	// #203
   140e0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   140e4:	add	x0, x0, #0x2a0
   140e8:	bl	cb40 <mpfr_assert_fail@plt>
   140ec:	b	14010 <mpfr_exp_3@@Base+0x10c>
   140f0:	mov	x0, #0x0                   	// #0
   140f4:	b	14030 <mpfr_exp_3@@Base+0x12c>
   140f8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   140fc:	add	x2, x2, #0x308
   14100:	mov	w1, #0xd8                  	// #216
   14104:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   14108:	add	x0, x0, #0x2a0
   1410c:	bl	cb40 <mpfr_assert_fail@plt>
   14110:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   14114:	add	x2, x2, #0x318
   14118:	mov	w1, #0xf5                  	// #245
   1411c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   14120:	add	x0, x0, #0x2a0
   14124:	bl	cb40 <mpfr_assert_fail@plt>
   14128:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1412c:	ldr	x1, [x0, #2576]
   14130:	add	x0, x0, #0xa10
   14134:	blr	x1
   14138:	mrs	x1, tpidr_el0
   1413c:	str	wzr, [x1, x0]
   14140:	ldr	x0, [sp, #128]
   14144:	cmp	x0, #0x1
   14148:	b.le	14174 <mpfr_exp_3@@Base+0x270>
   1414c:	sub	w22, w0, #0x1
   14150:	mov	w20, #0x0                   	// #0
   14154:	mov	w21, #0x3                   	// #3
   14158:	mov	w2, w21
   1415c:	mov	x1, x19
   14160:	mov	x0, x19
   14164:	bl	c400 <mpfr_sqr@plt>
   14168:	add	w20, w20, #0x1
   1416c:	cmp	w22, w20
   14170:	b.ne	14158 <mpfr_exp_3@@Base+0x254>  // b.any
   14174:	mov	w2, #0x3                   	// #3
   14178:	mov	x1, x19
   1417c:	mov	x0, x26
   14180:	bl	c400 <mpfr_sqr@plt>
   14184:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14188:	ldr	x1, [x0, #2576]
   1418c:	add	x0, x0, #0xa10
   14190:	blr	x1
   14194:	mrs	x1, tpidr_el0
   14198:	ldr	w0, [x1, x0]
   1419c:	tbnz	w0, #1, 141b0 <mpfr_exp_3@@Base+0x2ac>
   141a0:	mov	w21, #0x0                   	// #0
   141a4:	tbnz	w0, #0, 141d4 <mpfr_exp_3@@Base+0x2d0>
   141a8:	ldr	x20, [sp, #176]
   141ac:	b	144f0 <mpfr_exp_3@@Base+0x5ec>
   141b0:	mov	w2, #0x1                   	// #1
   141b4:	ldr	w1, [sp, #184]
   141b8:	ldr	x0, [sp, #168]
   141bc:	bl	bf40 <mpfr_overflow@plt>
   141c0:	mov	w19, w0
   141c4:	ldr	w0, [sp, #188]
   141c8:	orr	w0, w0, #0x2
   141cc:	str	w0, [sp, #188]
   141d0:	b	1455c <mpfr_exp_3@@Base+0x658>
   141d4:	mov	w3, #0x3                   	// #3
   141d8:	mov	x2, #0x1                   	// #1
   141dc:	mov	x1, x19
   141e0:	mov	x0, x19
   141e4:	bl	c2c0 <mpfr_mul_2ui@plt>
   141e8:	mov	w2, #0x3                   	// #3
   141ec:	mov	x1, x19
   141f0:	mov	x0, x26
   141f4:	bl	c400 <mpfr_sqr@plt>
   141f8:	ldr	x1, [sp, #304]
   141fc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   14200:	cmp	x1, x0
   14204:	b.eq	14210 <mpfr_exp_3@@Base+0x30c>  // b.none
   14208:	mov	w21, #0x1                   	// #1
   1420c:	b	141a8 <mpfr_exp_3@@Base+0x2a4>
   14210:	ldr	w0, [sp, #184]
   14214:	cmp	w0, #0x0
   14218:	mov	w2, #0x1                   	// #1
   1421c:	csel	w1, w0, w2, ne  // ne = any
   14220:	ldr	x0, [sp, #168]
   14224:	bl	c3c0 <mpfr_underflow@plt>
   14228:	mov	w19, w0
   1422c:	ldr	w0, [sp, #188]
   14230:	orr	w0, w0, #0x1
   14234:	str	w0, [sp, #188]
   14238:	b	1455c <mpfr_exp_3@@Base+0x658>
   1423c:	ldr	x0, [sp, #168]
   14240:	ldr	x20, [x0, #16]
   14244:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   14248:	cmp	x20, x0
   1424c:	b.le	1455c <mpfr_exp_3@@Base+0x658>
   14250:	ldr	w3, [sp, #184]
   14254:	mov	x2, #0xfffffffffffffffe    	// #-2
   14258:	ldr	x21, [sp, #168]
   1425c:	mov	x1, x21
   14260:	mov	x0, x21
   14264:	bl	bb90 <mpfr_mul_2si@plt>
   14268:	mov	w1, w0
   1426c:	cbz	w0, 1455c <mpfr_exp_3@@Base+0x658>
   14270:	cmp	w19, #0x0
   14274:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
   14278:	b.eq	1428c <mpfr_exp_3@@Base+0x388>  // b.none
   1427c:	ldr	x2, [x21, #16]
   14280:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   14284:	cmp	x2, x0
   14288:	b.eq	142a0 <mpfr_exp_3@@Base+0x39c>  // b.none
   1428c:	ldr	w0, [sp, #188]
   14290:	orr	w0, w0, #0x1
   14294:	str	w0, [sp, #188]
   14298:	mov	w19, w1
   1429c:	b	1455c <mpfr_exp_3@@Base+0x658>
   142a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   142a4:	ldr	x2, [x0, #2512]
   142a8:	add	x0, x0, #0x9d0
   142ac:	blr	x2
   142b0:	mrs	x2, tpidr_el0
   142b4:	ldr	x0, [x2, x0]
   142b8:	add	x0, x0, #0x1
   142bc:	cmp	x20, x0
   142c0:	b.ne	1428c <mpfr_exp_3@@Base+0x388>  // b.any
   142c4:	mov	w2, #0x1                   	// #1
   142c8:	mov	w1, #0x2                   	// #2
   142cc:	ldr	x0, [sp, #168]
   142d0:	bl	c3c0 <mpfr_underflow@plt>
   142d4:	mov	w1, w0
   142d8:	b	1428c <mpfr_exp_3@@Base+0x388>
   142dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   142e0:	movk	x0, #0x7fff, lsl #48
   142e4:	ldr	x1, [sp, #112]
   142e8:	sub	x0, x0, x1
   142ec:	ldr	x1, [sp, #120]
   142f0:	cmp	x0, x1
   142f4:	b.lt	145e8 <mpfr_exp_3@@Base+0x6e4>  // b.tstop
   142f8:	ldr	x0, [sp, #112]
   142fc:	ldr	x1, [sp, #120]
   14300:	add	x1, x0, x1
   14304:	str	x1, [sp, #112]
   14308:	add	x0, x1, x1, lsr #63
   1430c:	asr	x0, x0, #1
   14310:	str	x0, [sp, #120]
   14314:	add	x20, x1, #0x22
   14318:	ldr	x0, [sp, #128]
   1431c:	add	x20, x20, x0
   14320:	mov	x1, x20
   14324:	mov	x0, x26
   14328:	bl	bed0 <mpfr_set_prec@plt>
   1432c:	mov	x1, x20
   14330:	mov	x0, x19
   14334:	bl	bed0 <mpfr_set_prec@plt>
   14338:	cmp	x20, #0x1
   1433c:	b.eq	14600 <mpfr_exp_3@@Base+0x6fc>  // b.none
   14340:	b.le	140f8 <mpfr_exp_3@@Base+0x1f4>
   14344:	sub	x0, x20, #0x1
   14348:	clz	x0, x0
   1434c:	mov	w23, #0x3a                  	// #58
   14350:	sub	w23, w23, w0
   14354:	mov	w24, #0x3c                  	// #60
   14358:	sub	w24, w24, w0
   1435c:	add	w20, w24, w24, lsl #1
   14360:	str	w20, [sp, #152]
   14364:	sbfiz	x0, x20, #4, #32
   14368:	str	x0, [sp, #136]
   1436c:	bl	ccf0 <mpfr_allocate_func@plt>
   14370:	mov	x22, x0
   14374:	mov	w0, w20
   14378:	cmp	w20, #0x0
   1437c:	b.le	14624 <mpfr_exp_3@@Base+0x720>
   14380:	mov	x20, x22
   14384:	sub	w21, w0, #0x1
   14388:	add	x0, x22, #0x10
   1438c:	add	x21, x0, x21, lsl #4
   14390:	mov	x0, x20
   14394:	bl	bf90 <mpfr_mpz_init@plt>
   14398:	add	x20, x20, #0x10
   1439c:	cmp	x20, x21
   143a0:	b.ne	14390 <mpfr_exp_3@@Base+0x48c>  // b.any
   143a4:	lsl	w24, w24, #1
   143a8:	sbfiz	x0, x24, #3, #32
   143ac:	str	x0, [sp, #144]
   143b0:	bl	ccf0 <mpfr_allocate_func@plt>
   143b4:	mov	x24, x0
   143b8:	mov	w2, #0x0                   	// #0
   143bc:	ldr	x1, [sp, #104]
   143c0:	mov	x0, x28
   143c4:	bl	c9d0 <mpfr_extract@plt>
   143c8:	ldr	x0, [sp, #160]
   143cc:	mov	x27, x0
   143d0:	mov	x5, x24
   143d4:	mov	x4, x22
   143d8:	add	w3, w23, #0x1
   143dc:	mov	x2, #0x60                  	// #96
   143e0:	sub	x2, x2, x0
   143e4:	mov	x1, x28
   143e8:	mov	x0, x19
   143ec:	bl	13a14 <mpfr_exp2@@Base+0x69c>
   143f0:	mov	w20, #0x20                  	// #32
   143f4:	mov	w21, #0x3                   	// #3
   143f8:	mov	w2, w21
   143fc:	mov	x1, x19
   14400:	mov	x0, x19
   14404:	bl	c400 <mpfr_sqr@plt>
   14408:	subs	w20, w20, #0x1
   1440c:	b.ne	143f8 <mpfr_exp_3@@Base+0x4f4>  // b.any
   14410:	ldr	w0, [sp, #156]
   14414:	cmp	w23, w0
   14418:	csel	w25, w23, w0, le
   1441c:	cmp	w25, #0x0
   14420:	b.le	14494 <mpfr_exp_3@@Base+0x590>
   14424:	mov	w20, #0x1                   	// #1
   14428:	mov	x21, #0x80                  	// #128
   1442c:	add	w23, w23, w20
   14430:	mov	w2, w20
   14434:	ldr	x1, [sp, #104]
   14438:	mov	x0, x28
   1443c:	bl	c9d0 <mpfr_extract@plt>
   14440:	ldr	w0, [sp, #212]
   14444:	cbz	w0, 14478 <mpfr_exp_3@@Base+0x574>
   14448:	mov	x5, x24
   1444c:	mov	x4, x22
   14450:	sub	w3, w23, w20
   14454:	sub	x2, x21, x27
   14458:	mov	x1, x28
   1445c:	mov	x0, x26
   14460:	bl	13a14 <mpfr_exp2@@Base+0x69c>
   14464:	mov	w3, #0x3                   	// #3
   14468:	mov	x2, x26
   1446c:	mov	x1, x19
   14470:	mov	x0, x19
   14474:	bl	bd50 <mpfr_mul@plt>
   14478:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   1447c:	cmp	x21, x0
   14480:	b.hi	14110 <mpfr_exp_3@@Base+0x20c>  // b.pmore
   14484:	lsl	x21, x21, #1
   14488:	add	w20, w20, #0x1
   1448c:	cmp	w25, w20
   14490:	b.ge	14430 <mpfr_exp_3@@Base+0x52c>  // b.tcont
   14494:	ldr	w0, [sp, #152]
   14498:	cmp	w0, #0x0
   1449c:	b.le	144c4 <mpfr_exp_3@@Base+0x5c0>
   144a0:	mov	x20, x22
   144a4:	sub	w21, w0, #0x1
   144a8:	add	x0, x22, #0x10
   144ac:	add	x21, x0, x21, lsl #4
   144b0:	mov	x0, x20
   144b4:	bl	c170 <mpfr_mpz_clear@plt>
   144b8:	add	x20, x20, #0x10
   144bc:	cmp	x20, x21
   144c0:	b.ne	144b0 <mpfr_exp_3@@Base+0x5ac>  // b.any
   144c4:	ldr	x1, [sp, #136]
   144c8:	mov	x0, x22
   144cc:	bl	cc20 <mpfr_free_func@plt>
   144d0:	ldr	x1, [sp, #144]
   144d4:	mov	x0, x24
   144d8:	bl	cc20 <mpfr_free_func@plt>
   144dc:	mov	w21, #0x0                   	// #0
   144e0:	mov	x20, x19
   144e4:	ldr	x0, [sp, #128]
   144e8:	cmp	x0, #0x0
   144ec:	b.gt	14128 <mpfr_exp_3@@Base+0x224>
   144f0:	ldr	x1, [x20, #16]
   144f4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   144f8:	cmp	x1, x0
   144fc:	b.le	142dc <mpfr_exp_3@@Base+0x3d8>
   14500:	ldr	w0, [sp, #184]
   14504:	cmp	w0, #0x0
   14508:	cset	w22, eq  // eq = none
   1450c:	ldr	x0, [sp, #168]
   14510:	ldr	x3, [x0]
   14514:	cinc	x3, x3, eq  // eq = none
   14518:	ldr	x0, [x20]
   1451c:	add	x1, x0, #0x3e
   14520:	subs	x0, x0, #0x1
   14524:	csel	x1, x1, x0, mi  // mi = first
   14528:	asr	x1, x1, #6
   1452c:	ldr	x2, [sp, #112]
   14530:	add	x1, x1, #0x1
   14534:	ldr	x0, [x20, #24]
   14538:	bl	c370 <mpfr_round_p@plt>
   1453c:	cbz	w0, 142dc <mpfr_exp_3@@Base+0x3d8>
   14540:	ldr	w3, [x20, #8]
   14544:	ldr	w2, [sp, #184]
   14548:	mov	x1, x20
   1454c:	ldr	x0, [sp, #168]
   14550:	bl	c6a0 <mpfr_set4@plt>
   14554:	mov	w19, w0
   14558:	cbnz	w21, 1423c <mpfr_exp_3@@Base+0x338>
   1455c:	add	x0, sp, #0xd0
   14560:	bl	c170 <mpfr_mpz_clear@plt>
   14564:	add	x0, sp, #0xe0
   14568:	bl	c070 <mpfr_clear@plt>
   1456c:	add	x0, sp, #0x120
   14570:	bl	c070 <mpfr_clear@plt>
   14574:	add	x0, sp, #0x100
   14578:	bl	c070 <mpfr_clear@plt>
   1457c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14580:	ldr	x1, [x0, #2576]
   14584:	add	x0, x0, #0xa10
   14588:	blr	x1
   1458c:	mrs	x1, tpidr_el0
   14590:	ldr	w2, [sp, #188]
   14594:	str	w2, [x1, x0]
   14598:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1459c:	ldr	x2, [x0, #2512]
   145a0:	add	x0, x0, #0x9d0
   145a4:	blr	x2
   145a8:	ldr	x2, [sp, #192]
   145ac:	str	x2, [x1, x0]
   145b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   145b4:	ldr	x2, [x0, #2544]
   145b8:	add	x0, x0, #0x9f0
   145bc:	blr	x2
   145c0:	ldr	x2, [sp, #200]
   145c4:	str	x2, [x1, x0]
   145c8:	mov	w0, w19
   145cc:	ldp	x19, x20, [sp, #16]
   145d0:	ldp	x21, x22, [sp, #32]
   145d4:	ldp	x23, x24, [sp, #48]
   145d8:	ldp	x25, x26, [sp, #64]
   145dc:	ldp	x27, x28, [sp, #80]
   145e0:	ldp	x29, x30, [sp], #320
   145e4:	ret
   145e8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   145ec:	add	x2, x2, #0x340
   145f0:	mov	w1, #0x146                 	// #326
   145f4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   145f8:	add	x0, x0, #0x2a0
   145fc:	bl	cb40 <mpfr_assert_fail@plt>
   14600:	mov	x0, #0xffffffffffffff40    	// #-192
   14604:	bl	ccf0 <mpfr_allocate_func@plt>
   14608:	mov	x22, x0
   1460c:	mov	w23, #0xfffffffa            	// #-6
   14610:	mov	x0, #0xffffffffffffff40    	// #-192
   14614:	str	x0, [sp, #136]
   14618:	mov	w0, #0xfffffff4            	// #-12
   1461c:	str	w0, [sp, #152]
   14620:	mov	w24, #0xfffffffc            	// #-4
   14624:	lsl	w24, w24, #1
   14628:	sbfiz	x0, x24, #3, #32
   1462c:	str	x0, [sp, #144]
   14630:	bl	ccf0 <mpfr_allocate_func@plt>
   14634:	mov	x24, x0
   14638:	mov	w2, #0x0                   	// #0
   1463c:	ldr	x1, [sp, #104]
   14640:	mov	x0, x28
   14644:	bl	c9d0 <mpfr_extract@plt>
   14648:	b	143c8 <mpfr_exp_3@@Base+0x4c4>

000000000001464c <mpfr_exp@@Base>:
   1464c:	stp	x29, x30, [sp, #-144]!
   14650:	mov	x29, sp
   14654:	stp	x19, x20, [sp, #16]
   14658:	stp	x21, x22, [sp, #32]
   1465c:	mov	x20, x0
   14660:	mov	x19, x1
   14664:	mov	w21, w2
   14668:	ldr	x0, [x1, #16]
   1466c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   14670:	cmp	x0, x1
   14674:	b.le	1484c <mpfr_exp@@Base+0x200>
   14678:	stp	x23, x24, [sp, #48]
   1467c:	stp	x25, x26, [sp, #64]
   14680:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14684:	ldr	x1, [x0, #2544]
   14688:	add	x0, x0, #0x9f0
   1468c:	blr	x1
   14690:	mrs	x1, tpidr_el0
   14694:	ldr	x22, [x1, x0]
   14698:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1469c:	ldr	x2, [x0, #2464]
   146a0:	add	x0, x0, #0x9a0
   146a4:	blr	x2
   146a8:	ldr	x0, [x1, x0]
   146ac:	cmp	x22, x0
   146b0:	b.ne	148d8 <mpfr_exp@@Base+0x28c>  // b.any
   146b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   146b8:	ldr	x1, [x0, #2464]
   146bc:	add	x0, x0, #0x9a0
   146c0:	blr	x1
   146c4:	mrs	x1, tpidr_el0
   146c8:	add	x1, x1, x0
   146cc:	mov	w2, #0x1                   	// #1
   146d0:	add	x1, x1, #0x8
   146d4:	mov	x0, x19
   146d8:	bl	c9a0 <mpfr_cmp3@plt>
   146dc:	tbz	w0, #31, 14a00 <mpfr_exp@@Base+0x3b4>
   146e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   146e4:	ldr	x1, [x0, #2512]
   146e8:	add	x0, x0, #0x9d0
   146ec:	blr	x1
   146f0:	mrs	x1, tpidr_el0
   146f4:	ldr	x22, [x1, x0]
   146f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   146fc:	ldr	x2, [x0, #2464]
   14700:	add	x0, x0, #0x9a0
   14704:	blr	x2
   14708:	add	x0, x1, x0
   1470c:	ldr	x0, [x0, #48]
   14710:	cmp	x22, x0
   14714:	b.ne	14a20 <mpfr_exp@@Base+0x3d4>  // b.any
   14718:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1471c:	ldr	x1, [x0, #2464]
   14720:	add	x0, x0, #0x9a0
   14724:	blr	x1
   14728:	mrs	x1, tpidr_el0
   1472c:	add	x1, x1, x0
   14730:	mov	w2, #0x1                   	// #1
   14734:	add	x1, x1, #0x38
   14738:	mov	x0, x19
   1473c:	bl	c9a0 <mpfr_cmp3@plt>
   14740:	cmp	w0, #0x0
   14744:	b.le	14b84 <mpfr_exp@@Base+0x538>
   14748:	ldr	x0, [x19, #16]
   1474c:	ldr	x1, [x20]
   14750:	tbnz	x0, #63, 14ba8 <mpfr_exp@@Base+0x55c>
   14754:	mov	x0, #0x61a7                	// #24999
   14758:	cmp	x1, x0
   1475c:	b.gt	14c90 <mpfr_exp@@Base+0x644>
   14760:	str	x27, [sp, #80]
   14764:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14768:	ldr	x1, [x0, #2576]
   1476c:	add	x0, x0, #0xa10
   14770:	blr	x1
   14774:	mrs	x1, tpidr_el0
   14778:	add	x24, x1, x0
   1477c:	ldr	w26, [x1, x0]
   14780:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14784:	ldr	x2, [x0, #2512]
   14788:	add	x0, x0, #0x9d0
   1478c:	blr	x2
   14790:	add	x23, x1, x0
   14794:	ldr	x25, [x1, x0]
   14798:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1479c:	ldr	x2, [x0, #2544]
   147a0:	add	x0, x0, #0x9f0
   147a4:	blr	x2
   147a8:	add	x22, x1, x0
   147ac:	ldr	x27, [x1, x0]
   147b0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   147b4:	str	x0, [x23]
   147b8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   147bc:	str	x0, [x22]
   147c0:	mov	w2, w21
   147c4:	mov	x1, x19
   147c8:	mov	x0, x20
   147cc:	bl	c870 <mpfr_exp_2@plt>
   147d0:	mov	w1, w0
   147d4:	ldr	w0, [x24]
   147d8:	orr	w26, w0, w26
   147dc:	str	w26, [x24]
   147e0:	str	x25, [x23]
   147e4:	str	x27, [x22]
   147e8:	ldr	x27, [sp, #80]
   147ec:	ldr	x2, [x20, #16]
   147f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   147f4:	ldr	x3, [x0, #2512]
   147f8:	add	x0, x0, #0x9d0
   147fc:	blr	x3
   14800:	mrs	x3, tpidr_el0
   14804:	ldr	x0, [x3, x0]
   14808:	cmp	x2, x0
   1480c:	b.lt	14830 <mpfr_exp@@Base+0x1e4>  // b.tstop
   14810:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14814:	ldr	x3, [x0, #2544]
   14818:	add	x0, x0, #0x9f0
   1481c:	blr	x3
   14820:	mrs	x3, tpidr_el0
   14824:	ldr	x0, [x3, x0]
   14828:	cmp	x2, x0
   1482c:	b.le	14cd8 <mpfr_exp@@Base+0x68c>
   14830:	mov	w2, w21
   14834:	mov	x0, x20
   14838:	bl	cb30 <mpfr_check_range@plt>
   1483c:	mov	w1, w0
   14840:	ldp	x23, x24, [sp, #48]
   14844:	ldp	x25, x26, [sp, #64]
   14848:	b	14ce4 <mpfr_exp@@Base+0x698>
   1484c:	mov	x1, #0x2                   	// #2
   14850:	movk	x1, #0x8000, lsl #48
   14854:	cmp	x0, x1
   14858:	b.eq	14884 <mpfr_exp@@Base+0x238>  // b.none
   1485c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   14860:	cmp	x0, x1
   14864:	b.eq	148b4 <mpfr_exp@@Base+0x268>  // b.none
   14868:	mov	w3, w2
   1486c:	mov	x2, #0x0                   	// #0
   14870:	mov	x1, #0x1                   	// #1
   14874:	mov	x0, x20
   14878:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1487c:	mov	w1, w0
   14880:	b	14ce4 <mpfr_exp@@Base+0x698>
   14884:	str	x1, [x20, #16]
   14888:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1488c:	ldr	x1, [x0, #2576]
   14890:	add	x0, x0, #0xa10
   14894:	blr	x1
   14898:	mrs	x1, tpidr_el0
   1489c:	add	x0, x1, x0
   148a0:	ldr	w1, [x0]
   148a4:	orr	w1, w1, #0x4
   148a8:	str	w1, [x0]
   148ac:	mov	w1, #0x0                   	// #0
   148b0:	b	14ce4 <mpfr_exp@@Base+0x698>
   148b4:	ldr	w1, [x19, #8]
   148b8:	cmp	w1, #0x0
   148bc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   148c0:	csel	x0, x0, x1, gt
   148c4:	str	x0, [x20, #16]
   148c8:	mov	w0, #0x1                   	// #1
   148cc:	str	w0, [x20, #8]
   148d0:	mov	w1, #0x0                   	// #0
   148d4:	b	14ce4 <mpfr_exp@@Base+0x698>
   148d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   148dc:	ldr	x1, [x0, #2576]
   148e0:	add	x0, x0, #0xa10
   148e4:	blr	x1
   148e8:	mrs	x1, tpidr_el0
   148ec:	ldr	w24, [x1, x0]
   148f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   148f4:	ldr	x2, [x0, #2512]
   148f8:	add	x0, x0, #0x9d0
   148fc:	blr	x2
   14900:	ldr	x23, [x1, x0]
   14904:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   14908:	str	x2, [x1, x0]
   1490c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14910:	ldr	x2, [x0, #2544]
   14914:	add	x0, x0, #0x9f0
   14918:	blr	x2
   1491c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   14920:	str	x2, [x1, x0]
   14924:	mov	x0, #0x40                  	// #64
   14928:	str	x0, [sp, #112]
   1492c:	add	x0, sp, #0x68
   14930:	str	x0, [sp, #136]
   14934:	mov	w2, #0x1                   	// #1
   14938:	str	w2, [sp, #120]
   1493c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14940:	ldr	x3, [x0, #2464]
   14944:	add	x0, x0, #0x9a0
   14948:	blr	x3
   1494c:	add	x0, x1, x0
   14950:	add	x1, x0, #0x8
   14954:	mov	x3, #0x20                  	// #32
   14958:	str	x3, [x0, #8]
   1495c:	add	x0, x0, #0x28
   14960:	str	x0, [x1, #24]
   14964:	str	w2, [x1, #8]
   14968:	mov	w3, #0x0                   	// #0
   1496c:	mov	x2, #0x0                   	// #0
   14970:	mov	x1, x22
   14974:	add	x0, sp, #0x70
   14978:	bl	ba80 <mpfr_set_si_2exp@plt>
   1497c:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   14980:	ldr	x0, [x1, #4048]
   14984:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   14988:	ldr	x1, [x1, #3984]
   1498c:	cmp	x22, #0x0
   14990:	csel	x1, x1, x0, lt  // lt = tstop
   14994:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14998:	ldr	x2, [x0, #2464]
   1499c:	add	x0, x0, #0x9a0
   149a0:	blr	x2
   149a4:	mrs	x25, tpidr_el0
   149a8:	add	x26, x25, x0
   149ac:	mov	w3, #0x2                   	// #2
   149b0:	add	x2, sp, #0x70
   149b4:	add	x0, x26, #0x8
   149b8:	bl	bd50 <mpfr_mul@plt>
   149bc:	str	x22, [x26]
   149c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   149c4:	ldr	x1, [x0, #2576]
   149c8:	add	x0, x0, #0xa10
   149cc:	blr	x1
   149d0:	str	w24, [x25, x0]
   149d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   149d8:	ldr	x1, [x0, #2512]
   149dc:	add	x0, x0, #0x9d0
   149e0:	blr	x1
   149e4:	str	x23, [x25, x0]
   149e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   149ec:	ldr	x1, [x0, #2544]
   149f0:	add	x0, x0, #0x9f0
   149f4:	blr	x1
   149f8:	str	x22, [x25, x0]
   149fc:	b	146b4 <mpfr_exp@@Base+0x68>
   14a00:	mov	w2, #0x1                   	// #1
   14a04:	mov	w1, w21
   14a08:	mov	x0, x20
   14a0c:	bl	bf40 <mpfr_overflow@plt>
   14a10:	mov	w1, w0
   14a14:	ldp	x23, x24, [sp, #48]
   14a18:	ldp	x25, x26, [sp, #64]
   14a1c:	b	14ce4 <mpfr_exp@@Base+0x698>
   14a20:	str	x27, [sp, #80]
   14a24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14a28:	ldr	x1, [x0, #2576]
   14a2c:	add	x0, x0, #0xa10
   14a30:	blr	x1
   14a34:	mrs	x1, tpidr_el0
   14a38:	ldr	w25, [x1, x0]
   14a3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14a40:	ldr	x2, [x0, #2544]
   14a44:	add	x0, x0, #0x9f0
   14a48:	blr	x2
   14a4c:	add	x2, x1, x0
   14a50:	ldr	x24, [x1, x0]
   14a54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14a58:	ldr	x3, [x0, #2512]
   14a5c:	add	x0, x0, #0x9d0
   14a60:	blr	x3
   14a64:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   14a68:	str	x3, [x1, x0]
   14a6c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   14a70:	str	x0, [x2]
   14a74:	mov	x0, #0x3f                  	// #63
   14a78:	str	x0, [sp, #112]
   14a7c:	add	x0, sp, #0x68
   14a80:	str	x0, [sp, #136]
   14a84:	mov	w2, #0x1                   	// #1
   14a88:	str	w2, [sp, #120]
   14a8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14a90:	ldr	x3, [x0, #2464]
   14a94:	add	x0, x0, #0x9a0
   14a98:	blr	x3
   14a9c:	add	x0, x1, x0
   14aa0:	add	x1, x0, #0x38
   14aa4:	mov	x3, #0x20                  	// #32
   14aa8:	str	x3, [x0, #56]
   14aac:	add	x0, x0, #0x58
   14ab0:	str	x0, [x1, #24]
   14ab4:	str	w2, [x1, #8]
   14ab8:	add	x23, sp, #0x70
   14abc:	mov	w3, #0x0                   	// #0
   14ac0:	mov	x2, #0x0                   	// #0
   14ac4:	mov	x1, x22
   14ac8:	mov	x0, x23
   14acc:	bl	ba80 <mpfr_set_si_2exp@plt>
   14ad0:	mov	w3, #0x0                   	// #0
   14ad4:	mov	x2, #0x2                   	// #2
   14ad8:	mov	x1, x23
   14adc:	mov	x0, x23
   14ae0:	bl	c530 <mpfr_sub_ui@plt>
   14ae4:	mvn	x2, x22
   14ae8:	lsr	x2, x2, #63
   14aec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14af0:	ldr	x1, [x0, #2560]
   14af4:	add	x0, x0, #0xa00
   14af8:	blr	x1
   14afc:	mrs	x23, tpidr_el0
   14b00:	add	x1, x23, x0
   14b04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14b08:	ldr	x3, [x0, #2464]
   14b0c:	add	x0, x0, #0x9a0
   14b10:	blr	x3
   14b14:	add	x27, x23, x0
   14b18:	add	x26, x27, #0x38
   14b1c:	add	w2, w2, #0x2
   14b20:	mov	x0, x26
   14b24:	bl	c380 <mpfr_cache@plt>
   14b28:	mov	w3, #0x3                   	// #3
   14b2c:	add	x2, sp, #0x70
   14b30:	mov	x1, x26
   14b34:	mov	x0, x26
   14b38:	bl	bd50 <mpfr_mul@plt>
   14b3c:	str	x22, [x27, #48]
   14b40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14b44:	ldr	x1, [x0, #2576]
   14b48:	add	x0, x0, #0xa10
   14b4c:	blr	x1
   14b50:	str	w25, [x23, x0]
   14b54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14b58:	ldr	x1, [x0, #2512]
   14b5c:	add	x0, x0, #0x9d0
   14b60:	blr	x1
   14b64:	str	x22, [x23, x0]
   14b68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14b6c:	ldr	x1, [x0, #2544]
   14b70:	add	x0, x0, #0x9f0
   14b74:	blr	x1
   14b78:	str	x24, [x23, x0]
   14b7c:	ldr	x27, [sp, #80]
   14b80:	b	14718 <mpfr_exp@@Base+0xcc>
   14b84:	cmp	w21, #0x0
   14b88:	mov	w2, #0x1                   	// #1
   14b8c:	csel	w1, w21, w2, ne  // ne = any
   14b90:	mov	x0, x20
   14b94:	bl	c3c0 <mpfr_underflow@plt>
   14b98:	mov	w1, w0
   14b9c:	ldp	x23, x24, [sp, #48]
   14ba0:	ldp	x25, x26, [sp, #64]
   14ba4:	b	14ce4 <mpfr_exp@@Base+0x698>
   14ba8:	neg	x0, x0
   14bac:	cmp	x0, x1
   14bb0:	b.ls	14754 <mpfr_exp@@Base+0x108>  // b.plast
   14bb4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14bb8:	ldr	x1, [x0, #2512]
   14bbc:	add	x0, x0, #0x9d0
   14bc0:	blr	x1
   14bc4:	mrs	x1, tpidr_el0
   14bc8:	add	x2, x1, x0
   14bcc:	ldr	x22, [x1, x0]
   14bd0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14bd4:	ldr	x3, [x0, #2544]
   14bd8:	add	x0, x0, #0x9f0
   14bdc:	blr	x3
   14be0:	ldr	x23, [x1, x0]
   14be4:	ldr	w19, [x19, #8]
   14be8:	str	xzr, [x2]
   14bec:	mov	x2, #0x2                   	// #2
   14bf0:	str	x2, [x1, x0]
   14bf4:	mov	w0, #0x1                   	// #1
   14bf8:	str	w0, [x20, #8]
   14bfc:	tbz	w19, #31, 14c60 <mpfr_exp@@Base+0x614>
   14c00:	and	w0, w21, #0xfffffffd
   14c04:	cmp	w0, #0x1
   14c08:	b.eq	14c4c <mpfr_exp@@Base+0x600>  // b.none
   14c0c:	mov	x1, #0x1                   	// #1
   14c10:	mov	x0, x20
   14c14:	bl	c2b0 <mpfr_setmin@plt>
   14c18:	neg	w1, w19
   14c1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14c20:	ldr	x2, [x0, #2512]
   14c24:	add	x0, x0, #0x9d0
   14c28:	blr	x2
   14c2c:	mrs	x2, tpidr_el0
   14c30:	str	x22, [x2, x0]
   14c34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14c38:	ldr	x3, [x0, #2544]
   14c3c:	add	x0, x0, #0x9f0
   14c40:	blr	x3
   14c44:	str	x23, [x2, x0]
   14c48:	b	147ec <mpfr_exp@@Base+0x1a0>
   14c4c:	mov	x1, #0x0                   	// #0
   14c50:	mov	x0, x20
   14c54:	bl	c0d0 <mpfr_setmax@plt>
   14c58:	mov	w1, #0xffffffff            	// #-1
   14c5c:	b	14c1c <mpfr_exp@@Base+0x5d0>
   14c60:	mov	x1, #0x1                   	// #1
   14c64:	mov	x0, x20
   14c68:	bl	c2b0 <mpfr_setmin@plt>
   14c6c:	cmp	w19, #0x0
   14c70:	b.le	14c18 <mpfr_exp@@Base+0x5cc>
   14c74:	sub	w0, w21, #0x2
   14c78:	tst	w0, #0xfffffffd
   14c7c:	b.ne	14c18 <mpfr_exp@@Base+0x5cc>  // b.any
   14c80:	mov	x0, x20
   14c84:	bl	c120 <mpfr_nextabove@plt>
   14c88:	mov	w1, #0x1                   	// #1
   14c8c:	b	14c1c <mpfr_exp@@Base+0x5d0>
   14c90:	mov	w2, w21
   14c94:	mov	x1, x19
   14c98:	mov	x0, x20
   14c9c:	bl	be20 <mpfr_exp_3@plt>
   14ca0:	mov	w1, w0
   14ca4:	b	147ec <mpfr_exp@@Base+0x1a0>
   14ca8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14cac:	ldr	x2, [x0, #2576]
   14cb0:	add	x0, x0, #0xa10
   14cb4:	blr	x2
   14cb8:	mrs	x2, tpidr_el0
   14cbc:	add	x0, x2, x0
   14cc0:	ldr	w2, [x0]
   14cc4:	orr	w2, w2, #0x8
   14cc8:	str	w2, [x0]
   14ccc:	ldp	x23, x24, [sp, #48]
   14cd0:	ldp	x25, x26, [sp, #64]
   14cd4:	b	14ce4 <mpfr_exp@@Base+0x698>
   14cd8:	cbnz	w1, 14ca8 <mpfr_exp@@Base+0x65c>
   14cdc:	ldp	x23, x24, [sp, #48]
   14ce0:	ldp	x25, x26, [sp, #64]
   14ce4:	mov	w0, w1
   14ce8:	ldp	x19, x20, [sp, #16]
   14cec:	ldp	x21, x22, [sp, #32]
   14cf0:	ldp	x29, x30, [sp], #144
   14cf4:	ret

0000000000014cf8 <mpfr_frac@@Base>:
   14cf8:	stp	x29, x30, [sp, #-160]!
   14cfc:	mov	x29, sp
   14d00:	stp	x19, x20, [sp, #16]
   14d04:	stp	x23, x24, [sp, #48]
   14d08:	mov	x20, x0
   14d0c:	mov	x24, x1
   14d10:	str	w2, [sp, #108]
   14d14:	ldr	x0, [x1, #16]
   14d18:	mov	x1, #0x2                   	// #2
   14d1c:	movk	x1, #0x8000, lsl #48
   14d20:	cmp	x0, x1
   14d24:	b.eq	14dd0 <mpfr_frac@@Base+0xd8>  // b.none
   14d28:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   14d2c:	cmp	x0, x1
   14d30:	b.eq	14e00 <mpfr_frac@@Base+0x108>  // b.none
   14d34:	mov	x0, x24
   14d38:	bl	c160 <mpfr_integer_p@plt>
   14d3c:	cbnz	w0, 14e00 <mpfr_frac@@Base+0x108>
   14d40:	stp	x25, x26, [sp, #64]
   14d44:	ldr	x26, [x24, #16]
   14d48:	cmp	x26, #0x0
   14d4c:	b.le	14e18 <mpfr_frac@@Base+0x120>
   14d50:	stp	x21, x22, [sp, #32]
   14d54:	stp	x27, x28, [sp, #80]
   14d58:	ldr	x0, [x24]
   14d5c:	add	x19, x0, #0x3e
   14d60:	subs	x0, x0, #0x1
   14d64:	csel	x19, x19, x0, mi  // mi = first
   14d68:	add	x0, x26, #0x3f
   14d6c:	cmp	x26, #0x0
   14d70:	csel	x0, x0, x26, lt  // lt = tstop
   14d74:	neg	x0, x0, asr #6
   14d78:	add	x19, x0, x19, asr #6
   14d7c:	ldr	x22, [x24, #24]
   14d80:	negs	x28, x26
   14d84:	and	x26, x26, #0x3f
   14d88:	and	x28, x28, #0x3f
   14d8c:	csneg	x28, x26, x28, mi  // mi = first
   14d90:	ldr	x0, [x22, x19, lsl #3]
   14d94:	lsl	x0, x0, x28
   14d98:	cbz	x0, 14e38 <mpfr_frac@@Base+0x140>
   14d9c:	clz	x1, x0
   14da0:	neg	w26, w1
   14da4:	sxtw	x26, w26
   14da8:	add	w28, w1, w28
   14dac:	lsl	x23, x0, x1
   14db0:	cmp	w28, #0x3f
   14db4:	b.le	14e70 <mpfr_frac@@Base+0x178>
   14db8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   14dbc:	add	x2, x2, #0x390
   14dc0:	mov	w1, #0x50                  	// #80
   14dc4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   14dc8:	add	x0, x0, #0x3a0
   14dcc:	bl	cb40 <mpfr_assert_fail@plt>
   14dd0:	str	x1, [x20, #16]
   14dd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14dd8:	ldr	x1, [x0, #2576]
   14ddc:	add	x0, x0, #0xa10
   14de0:	blr	x1
   14de4:	mrs	x1, tpidr_el0
   14de8:	add	x0, x1, x0
   14dec:	ldr	w1, [x0]
   14df0:	orr	w1, w1, #0x4
   14df4:	str	w1, [x0]
   14df8:	mov	w1, #0x0                   	// #0
   14dfc:	b	150e4 <mpfr_frac@@Base+0x3ec>
   14e00:	ldr	w0, [x24, #8]
   14e04:	str	w0, [x20, #8]
   14e08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   14e0c:	str	x0, [x20, #16]
   14e10:	mov	w1, #0x0                   	// #0
   14e14:	b	150e4 <mpfr_frac@@Base+0x3ec>
   14e18:	ldr	w3, [x24, #8]
   14e1c:	ldr	w2, [sp, #108]
   14e20:	mov	x1, x24
   14e24:	mov	x0, x20
   14e28:	bl	c6a0 <mpfr_set4@plt>
   14e2c:	mov	w1, w0
   14e30:	ldp	x25, x26, [sp, #64]
   14e34:	b	150e4 <mpfr_frac@@Base+0x3ec>
   14e38:	sub	w26, w28, #0x40
   14e3c:	sxtw	x26, w26
   14e40:	sub	x19, x19, #0x1
   14e44:	ldr	x0, [x22, x19, lsl #3]
   14e48:	cbnz	x0, 14e5c <mpfr_frac@@Base+0x164>
   14e4c:	sub	x26, x26, #0x40
   14e50:	sub	x19, x19, #0x1
   14e54:	ldr	x0, [x22, x19, lsl #3]
   14e58:	cbz	x0, 14e4c <mpfr_frac@@Base+0x154>
   14e5c:	tbnz	x19, #63, 14fe4 <mpfr_frac@@Base+0x2ec>
   14e60:	clz	x1, x0
   14e64:	mov	w28, w1
   14e68:	sub	x26, x26, x1
   14e6c:	lsl	x23, x0, x1
   14e70:	ldr	x0, [x20]
   14e74:	add	x1, x0, #0x3e
   14e78:	subs	x0, x0, #0x1
   14e7c:	csel	x0, x1, x0, mi  // mi = first
   14e80:	mov	x21, x20
   14e84:	cmp	x19, x0, asr #6
   14e88:	b.gt	14ffc <mpfr_frac@@Base+0x304>
   14e8c:	ldr	w0, [x24, #8]
   14e90:	str	w0, [x21, #8]
   14e94:	ldr	x0, [x21]
   14e98:	add	x1, x0, #0x3e
   14e9c:	subs	x0, x0, #0x1
   14ea0:	csel	x0, x1, x0, mi  // mi = first
   14ea4:	asr	x25, x0, #6
   14ea8:	cmp	x19, x0, asr #6
   14eac:	b.gt	15014 <mpfr_frac@@Base+0x31c>
   14eb0:	sub	x27, x25, x19
   14eb4:	ldr	x24, [x21, #24]
   14eb8:	cbz	w28, 1502c <mpfr_frac@@Base+0x334>
   14ebc:	mov	x0, #0x0                   	// #0
   14ec0:	cbnz	x19, 15040 <mpfr_frac@@Base+0x348>
   14ec4:	orr	x0, x23, x0
   14ec8:	str	x0, [x24, x25, lsl #3]
   14ecc:	cmp	x27, #0x0
   14ed0:	b.gt	15058 <mpfr_frac@@Base+0x360>
   14ed4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14ed8:	ldr	x1, [x0, #2576]
   14edc:	add	x0, x0, #0xa10
   14ee0:	blr	x1
   14ee4:	mrs	x1, tpidr_el0
   14ee8:	ldr	w19, [x1, x0]
   14eec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14ef0:	ldr	x2, [x0, #2512]
   14ef4:	add	x0, x0, #0x9d0
   14ef8:	blr	x2
   14efc:	add	x2, x1, x0
   14f00:	ldr	x22, [x1, x0]
   14f04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14f08:	ldr	x3, [x0, #2544]
   14f0c:	add	x0, x0, #0x9f0
   14f10:	blr	x3
   14f14:	ldr	x27, [x1, x0]
   14f18:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   14f1c:	str	x3, [x2]
   14f20:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   14f24:	str	x2, [x1, x0]
   14f28:	cmp	x21, x20
   14f2c:	b.eq	1506c <mpfr_frac@@Base+0x374>  // b.none
   14f30:	str	xzr, [x21, #16]
   14f34:	ldr	w3, [x21, #8]
   14f38:	ldr	w2, [sp, #108]
   14f3c:	mov	x1, x21
   14f40:	mov	x0, x20
   14f44:	bl	c6a0 <mpfr_set4@plt>
   14f48:	str	w0, [sp, #124]
   14f4c:	mov	x0, x21
   14f50:	bl	c070 <mpfr_clear@plt>
   14f54:	ldr	x0, [x20, #16]
   14f58:	add	x26, x0, x26
   14f5c:	str	x26, [x20, #16]
   14f60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14f64:	ldr	x1, [x0, #2576]
   14f68:	add	x0, x0, #0xa10
   14f6c:	blr	x1
   14f70:	mrs	x1, tpidr_el0
   14f74:	str	w19, [x1, x0]
   14f78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14f7c:	ldr	x2, [x0, #2512]
   14f80:	add	x0, x0, #0x9d0
   14f84:	blr	x2
   14f88:	str	x22, [x1, x0]
   14f8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14f90:	ldr	x2, [x0, #2544]
   14f94:	add	x0, x0, #0x9f0
   14f98:	blr	x2
   14f9c:	str	x27, [x1, x0]
   14fa0:	ldr	x0, [x20, #16]
   14fa4:	cmp	x27, x0
   14fa8:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   14fac:	b.gt	150b4 <mpfr_frac@@Base+0x3bc>
   14fb0:	ldr	w1, [sp, #124]
   14fb4:	cbz	w1, 150d8 <mpfr_frac@@Base+0x3e0>
   14fb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   14fbc:	ldr	x2, [x0, #2576]
   14fc0:	add	x0, x0, #0xa10
   14fc4:	blr	x2
   14fc8:	orr	w19, w19, #0x8
   14fcc:	mrs	x2, tpidr_el0
   14fd0:	str	w19, [x2, x0]
   14fd4:	ldp	x21, x22, [sp, #32]
   14fd8:	ldp	x25, x26, [sp, #64]
   14fdc:	ldp	x27, x28, [sp, #80]
   14fe0:	b	150e4 <mpfr_frac@@Base+0x3ec>
   14fe4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   14fe8:	add	x2, x2, #0x3a8
   14fec:	mov	w1, #0x59                  	// #89
   14ff0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   14ff4:	add	x0, x0, #0x3a0
   14ff8:	bl	cb40 <mpfr_assert_fail@plt>
   14ffc:	add	x1, x19, #0x1
   15000:	add	x21, sp, #0x80
   15004:	lsl	x1, x1, #6
   15008:	mov	x0, x21
   1500c:	bl	ca80 <mpfr_init2@plt>
   15010:	b	14e8c <mpfr_frac@@Base+0x194>
   15014:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   15018:	add	x2, x2, #0x3b0
   1501c:	mov	w1, #0x6b                  	// #107
   15020:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15024:	add	x0, x0, #0x3a0
   15028:	bl	cb40 <mpfr_assert_fail@plt>
   1502c:	add	x2, x19, #0x1
   15030:	mov	x1, x22
   15034:	add	x0, x24, x27, lsl #3
   15038:	bl	bae0 <__gmpn_copyd@plt>
   1503c:	b	14ecc <mpfr_frac@@Base+0x1d4>
   15040:	mov	w3, w28
   15044:	mov	x2, x19
   15048:	mov	x1, x22
   1504c:	add	x0, x24, x27, lsl #3
   15050:	bl	bcc0 <__gmpn_lshift@plt>
   15054:	b	14ec4 <mpfr_frac@@Base+0x1cc>
   15058:	lsl	x2, x27, #3
   1505c:	mov	w1, #0x0                   	// #0
   15060:	mov	x0, x24
   15064:	bl	c110 <memset@plt>
   15068:	b	14ed4 <mpfr_frac@@Base+0x1dc>
   1506c:	str	x26, [x20, #16]
   15070:	ldr	w3, [x20, #8]
   15074:	add	x2, x25, #0x1
   15078:	add	x6, sp, #0x7c
   1507c:	ldr	w5, [sp, #108]
   15080:	ldr	x4, [x20]
   15084:	lsr	w3, w3, #31
   15088:	lsl	x2, x2, #6
   1508c:	mov	x1, x24
   15090:	mov	x0, x24
   15094:	bl	ca20 <mpfr_round_raw@plt>
   15098:	cbz	w0, 14f60 <mpfr_frac@@Base+0x268>
   1509c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   150a0:	str	x0, [x24, x25, lsl #3]
   150a4:	ldr	x0, [x20, #16]
   150a8:	add	x0, x0, #0x1
   150ac:	str	x0, [x20, #16]
   150b0:	b	14f60 <mpfr_frac@@Base+0x268>
   150b4:	ldr	w2, [sp, #108]
   150b8:	ldr	w1, [sp, #124]
   150bc:	mov	x0, x20
   150c0:	bl	cb30 <mpfr_check_range@plt>
   150c4:	mov	w1, w0
   150c8:	ldp	x21, x22, [sp, #32]
   150cc:	ldp	x25, x26, [sp, #64]
   150d0:	ldp	x27, x28, [sp, #80]
   150d4:	b	150e4 <mpfr_frac@@Base+0x3ec>
   150d8:	ldp	x21, x22, [sp, #32]
   150dc:	ldp	x25, x26, [sp, #64]
   150e0:	ldp	x27, x28, [sp, #80]
   150e4:	mov	w0, w1
   150e8:	ldp	x19, x20, [sp, #16]
   150ec:	ldp	x23, x24, [sp, #48]
   150f0:	ldp	x29, x30, [sp], #160
   150f4:	ret

00000000000150f8 <mpfr_frexp@@Base>:
   150f8:	stp	x29, x30, [sp, #-80]!
   150fc:	mov	x29, sp
   15100:	stp	x19, x20, [sp, #16]
   15104:	stp	x21, x22, [sp, #32]
   15108:	stp	x23, x24, [sp, #48]
   1510c:	str	x25, [sp, #64]
   15110:	mov	x23, x0
   15114:	mov	x20, x1
   15118:	mov	x19, x2
   1511c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15120:	ldr	x1, [x0, #2576]
   15124:	add	x0, x0, #0xa10
   15128:	blr	x1
   1512c:	mrs	x1, tpidr_el0
   15130:	ldr	w25, [x1, x0]
   15134:	ldr	x0, [x2, #16]
   15138:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1513c:	cmp	x0, x1
   15140:	b.le	151cc <mpfr_frexp@@Base+0xd4>
   15144:	mov	w22, w3
   15148:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1514c:	ldr	x1, [x0, #2576]
   15150:	add	x0, x0, #0xa10
   15154:	blr	x1
   15158:	mrs	x1, tpidr_el0
   1515c:	add	x24, x1, x0
   15160:	str	wzr, [x1, x0]
   15164:	ldr	w3, [x2, #8]
   15168:	mov	w2, w22
   1516c:	mov	x1, x19
   15170:	mov	x0, x20
   15174:	bl	c6a0 <mpfr_set4@plt>
   15178:	mov	w21, w0
   1517c:	ldr	w0, [x24]
   15180:	str	w25, [x24]
   15184:	tbnz	w0, #1, 15240 <mpfr_frexp@@Base+0x148>
   15188:	ldr	x0, [x20, #16]
   1518c:	str	x0, [x23]
   15190:	str	xzr, [x20, #16]
   15194:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15198:	ldr	x1, [x0, #2512]
   1519c:	add	x0, x0, #0x9d0
   151a0:	blr	x1
   151a4:	mrs	x1, tpidr_el0
   151a8:	ldr	x0, [x1, x0]
   151ac:	cmp	x0, #0x0
   151b0:	b.le	1529c <mpfr_frexp@@Base+0x1a4>
   151b4:	mov	w2, w22
   151b8:	mov	w1, w21
   151bc:	mov	x0, x20
   151c0:	bl	cb30 <mpfr_check_range@plt>
   151c4:	mov	w21, w0
   151c8:	b	152e0 <mpfr_frexp@@Base+0x1e8>
   151cc:	mov	x1, #0x2                   	// #2
   151d0:	movk	x1, #0x8000, lsl #48
   151d4:	cmp	x0, x1
   151d8:	b.eq	15204 <mpfr_frexp@@Base+0x10c>  // b.none
   151dc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   151e0:	cmp	x0, x1
   151e4:	b.eq	1522c <mpfr_frexp@@Base+0x134>  // b.none
   151e8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   151ec:	str	x0, [x20, #16]
   151f0:	ldr	w0, [x2, #8]
   151f4:	str	w0, [x20, #8]
   151f8:	str	xzr, [x23]
   151fc:	mov	w21, #0x0                   	// #0
   15200:	b	152e0 <mpfr_frexp@@Base+0x1e8>
   15204:	str	x1, [x20, #16]
   15208:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1520c:	ldr	x1, [x0, #2576]
   15210:	add	x0, x0, #0xa10
   15214:	blr	x1
   15218:	orr	w25, w25, #0x4
   1521c:	mrs	x1, tpidr_el0
   15220:	str	w25, [x1, x0]
   15224:	mov	w21, #0x0                   	// #0
   15228:	b	152e0 <mpfr_frexp@@Base+0x1e8>
   1522c:	str	x1, [x20, #16]
   15230:	ldr	w0, [x2, #8]
   15234:	str	w0, [x20, #8]
   15238:	mov	w21, #0x0                   	// #0
   1523c:	b	152e0 <mpfr_frexp@@Base+0x1e8>
   15240:	ldr	x0, [x19, #16]
   15244:	add	x0, x0, #0x1
   15248:	str	x0, [x23]
   1524c:	mov	w3, w22
   15250:	mov	x2, #0xffffffffffffffff    	// #-1
   15254:	ldrsw	x1, [x19, #8]
   15258:	mov	x0, x20
   1525c:	bl	ba80 <mpfr_set_si_2exp@plt>
   15260:	mov	w1, w0
   15264:	cbnz	w0, 15270 <mpfr_frexp@@Base+0x178>
   15268:	cbz	w21, 152e0 <mpfr_frexp@@Base+0x1e8>
   1526c:	mov	w1, w21
   15270:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15274:	ldr	x2, [x0, #2576]
   15278:	add	x0, x0, #0xa10
   1527c:	blr	x2
   15280:	mrs	x2, tpidr_el0
   15284:	add	x0, x2, x0
   15288:	ldr	w2, [x0]
   1528c:	orr	w2, w2, #0x8
   15290:	str	w2, [x0]
   15294:	mov	w21, w1
   15298:	b	152e0 <mpfr_frexp@@Base+0x1e8>
   1529c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   152a0:	ldr	x1, [x0, #2544]
   152a4:	add	x0, x0, #0x9f0
   152a8:	blr	x1
   152ac:	mrs	x1, tpidr_el0
   152b0:	ldr	x0, [x1, x0]
   152b4:	tbnz	x0, #63, 151b4 <mpfr_frexp@@Base+0xbc>
   152b8:	cbz	w21, 152e0 <mpfr_frexp@@Base+0x1e8>
   152bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   152c0:	ldr	x1, [x0, #2576]
   152c4:	add	x0, x0, #0xa10
   152c8:	blr	x1
   152cc:	mrs	x1, tpidr_el0
   152d0:	add	x0, x1, x0
   152d4:	ldr	w1, [x0]
   152d8:	orr	w1, w1, #0x8
   152dc:	str	w1, [x0]
   152e0:	mov	w0, w21
   152e4:	ldp	x19, x20, [sp, #16]
   152e8:	ldp	x21, x22, [sp, #32]
   152ec:	ldp	x23, x24, [sp, #48]
   152f0:	ldr	x25, [sp, #64]
   152f4:	ldp	x29, x30, [sp], #80
   152f8:	ret

00000000000152fc <mpfr_get_d@@Base>:
   152fc:	stp	x29, x30, [sp, #-48]!
   15300:	mov	x29, sp
   15304:	stp	x19, x20, [sp, #16]
   15308:	mov	w5, w1
   1530c:	ldr	x19, [x0, #16]
   15310:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   15314:	cmp	x19, x1
   15318:	b.le	15398 <mpfr_get_d@@Base+0x9c>
   1531c:	ldr	w20, [x0, #8]
   15320:	lsr	w3, w20, #31
   15324:	cmp	w5, #0x4
   15328:	b.eq	153f8 <mpfr_get_d@@Base+0xfc>  // b.none
   1532c:	cmn	x19, #0x431
   15330:	b.lt	1540c <mpfr_get_d@@Base+0x110>  // b.tstop
   15334:	cmp	x19, #0x400
   15338:	b.gt	15474 <mpfr_get_d@@Base+0x178>
   1533c:	add	w4, w19, #0x432
   15340:	cmn	x19, #0x3fd
   15344:	mov	w1, #0x35                  	// #53
   15348:	csel	w4, w4, w1, lt  // lt = tstop
   1534c:	sxtw	x4, w4
   15350:	ldr	x2, [x0]
   15354:	ldr	x1, [x0, #24]
   15358:	add	x0, sp, #0x28
   1535c:	bl	c720 <mpfr_round_raw_4@plt>
   15360:	cbnz	w0, 154a8 <mpfr_get_d@@Base+0x1ac>
   15364:	ldr	d0, [sp, #40]
   15368:	ucvtf	d0, d0
   1536c:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   15370:	fmov	d1, x0
   15374:	fmul	d0, d0, d1
   15378:	mov	w0, w19
   1537c:	bl	cba0 <mpfr_scale2@plt>
   15380:	fneg	d1, d0
   15384:	cmp	w20, #0x0
   15388:	fcsel	d0, d1, d0, lt  // lt = tstop
   1538c:	ldp	x19, x20, [sp, #16]
   15390:	ldp	x29, x30, [sp], #48
   15394:	ret
   15398:	mov	x1, #0x2                   	// #2
   1539c:	movk	x1, #0x8000, lsl #48
   153a0:	cmp	x19, x1
   153a4:	b.eq	153d0 <mpfr_get_d@@Base+0xd4>  // b.none
   153a8:	ldr	w1, [x0, #8]
   153ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   153b0:	cmp	x19, x0
   153b4:	b.eq	153dc <mpfr_get_d@@Base+0xe0>  // b.none
   153b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   153bc:	fmov	d0, x0
   153c0:	cmp	w1, #0x0
   153c4:	movi	d1, #0x0
   153c8:	fcsel	d0, d0, d1, lt  // lt = tstop
   153cc:	b	1538c <mpfr_get_d@@Base+0x90>
   153d0:	movi	d0, #0x0
   153d4:	fdiv	d0, d0, d0
   153d8:	b	1538c <mpfr_get_d@@Base+0x90>
   153dc:	tbnz	w1, #31, 153ec <mpfr_get_d@@Base+0xf0>
   153e0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   153e4:	ldr	d0, [x0, #1080]
   153e8:	b	1538c <mpfr_get_d@@Base+0x90>
   153ec:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   153f0:	ldr	d0, [x0, #1072]
   153f4:	b	1538c <mpfr_get_d@@Base+0x90>
   153f8:	tbnz	w20, #31, 15510 <mpfr_get_d@@Base+0x214>
   153fc:	cmn	x19, #0x431
   15400:	b.lt	15504 <mpfr_get_d@@Base+0x208>  // b.tstop
   15404:	mov	w5, #0x2                   	// #2
   15408:	b	15334 <mpfr_get_d@@Base+0x38>
   1540c:	tbnz	w20, #31, 15444 <mpfr_get_d@@Base+0x148>
   15410:	cmp	w5, #0x2
   15414:	b.eq	154e0 <mpfr_get_d@@Base+0x1e4>  // b.none
   15418:	movi	d0, #0x0
   1541c:	cbnz	w5, 1538c <mpfr_get_d@@Base+0x90>
   15420:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   15424:	mov	x1, #0x1                   	// #1
   15428:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1542c:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   15430:	ldr	d0, [x1, #1040]
   15434:	cmp	w0, #0x0
   15438:	b.gt	154e8 <mpfr_get_d@@Base+0x1ec>
   1543c:	movi	d0, #0x0
   15440:	b	1538c <mpfr_get_d@@Base+0x90>
   15444:	cmp	w5, #0x3
   15448:	b.eq	154c8 <mpfr_get_d@@Base+0x1cc>  // b.none
   1544c:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   15450:	ldr	d0, [x1, #1032]
   15454:	cbnz	w5, 1538c <mpfr_get_d@@Base+0x90>
   15458:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1545c:	mov	x1, #0xffffffffffffffff    	// #-1
   15460:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   15464:	tbnz	w0, #31, 154d4 <mpfr_get_d@@Base+0x1d8>
   15468:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   1546c:	ldr	d0, [x0, #1032]
   15470:	b	1538c <mpfr_get_d@@Base+0x90>
   15474:	tbnz	w20, #31, 15490 <mpfr_get_d@@Base+0x194>
   15478:	and	w5, w5, #0xfffffffd
   1547c:	cmp	w5, #0x1
   15480:	b.eq	154bc <mpfr_get_d@@Base+0x1c0>  // b.none
   15484:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15488:	ldr	d0, [x0, #1080]
   1548c:	b	1538c <mpfr_get_d@@Base+0x90>
   15490:	sub	w5, w5, #0x1
   15494:	cmp	w5, #0x1
   15498:	b.ls	154b0 <mpfr_get_d@@Base+0x1b4>  // b.plast
   1549c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154a0:	ldr	d0, [x0, #1072]
   154a4:	b	1538c <mpfr_get_d@@Base+0x90>
   154a8:	fmov	d0, #1.000000000000000000e+00
   154ac:	b	15378 <mpfr_get_d@@Base+0x7c>
   154b0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154b4:	ldr	d0, [x0, #1048]
   154b8:	b	1538c <mpfr_get_d@@Base+0x90>
   154bc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154c0:	ldr	d0, [x0, #1056]
   154c4:	b	1538c <mpfr_get_d@@Base+0x90>
   154c8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154cc:	ldr	d0, [x0, #1064]
   154d0:	b	154e8 <mpfr_get_d@@Base+0x1ec>
   154d4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154d8:	ldr	d0, [x0, #1064]
   154dc:	b	154e8 <mpfr_get_d@@Base+0x1ec>
   154e0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154e4:	ldr	d0, [x0, #1040]
   154e8:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   154ec:	fmov	d1, x0
   154f0:	fmul	d0, d0, d1
   154f4:	b	1538c <mpfr_get_d@@Base+0x90>
   154f8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   154fc:	ldr	d0, [x0, #1064]
   15500:	b	154e8 <mpfr_get_d@@Base+0x1ec>
   15504:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15508:	ldr	d0, [x0, #1040]
   1550c:	b	154e8 <mpfr_get_d@@Base+0x1ec>
   15510:	cmn	x19, #0x431
   15514:	b.lt	154f8 <mpfr_get_d@@Base+0x1fc>  // b.tstop
   15518:	mov	w5, #0x3                   	// #3
   1551c:	b	15334 <mpfr_get_d@@Base+0x38>

0000000000015520 <mpfr_get_d1@@Base>:
   15520:	stp	x29, x30, [sp, #-16]!
   15524:	mov	x29, sp
   15528:	mov	x2, x0
   1552c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15530:	ldr	x1, [x0, #2640]
   15534:	add	x0, x0, #0xa50
   15538:	blr	x1
   1553c:	mrs	x1, tpidr_el0
   15540:	ldr	w1, [x1, x0]
   15544:	mov	x0, x2
   15548:	bl	bd30 <mpfr_get_d@plt>
   1554c:	ldp	x29, x30, [sp], #16
   15550:	ret

0000000000015554 <mpfr_get_d_2exp@@Base>:
   15554:	stp	x29, x30, [sp, #-80]!
   15558:	mov	x29, sp
   1555c:	stp	x19, x20, [sp, #16]
   15560:	str	d8, [sp, #32]
   15564:	mov	x20, x0
   15568:	mov	x19, x1
   1556c:	mov	w1, w2
   15570:	ldr	x3, [x19, #16]
   15574:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   15578:	cmp	x3, x2
   1557c:	b.le	155d0 <mpfr_get_d_2exp@@Base+0x7c>
   15580:	ldr	x0, [x19]
   15584:	str	x0, [sp, #48]
   15588:	ldr	w0, [x19, #8]
   1558c:	str	w0, [sp, #56]
   15590:	str	xzr, [sp, #64]
   15594:	ldr	x0, [x19, #24]
   15598:	str	x0, [sp, #72]
   1559c:	add	x0, sp, #0x30
   155a0:	bl	bd30 <mpfr_get_d@plt>
   155a4:	fmov	d8, d0
   155a8:	ldr	x19, [x19, #16]
   155ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   155b0:	cmp	x19, x0
   155b4:	b.le	15718 <mpfr_get_d_2exp@@Base+0x1c4>
   155b8:	fmov	d0, #1.000000000000000000e+00
   155bc:	fcmp	d8, d0
   155c0:	b.ne	15638 <mpfr_get_d_2exp@@Base+0xe4>  // b.any
   155c4:	add	x19, x19, #0x1
   155c8:	fmov	d8, #5.000000000000000000e-01
   155cc:	b	1571c <mpfr_get_d_2exp@@Base+0x1c8>
   155d0:	str	xzr, [x0]
   155d4:	ldr	x0, [x19, #16]
   155d8:	mov	x1, #0x2                   	// #2
   155dc:	movk	x1, #0x8000, lsl #48
   155e0:	cmp	x0, x1
   155e4:	b.eq	15610 <mpfr_get_d_2exp@@Base+0xbc>  // b.none
   155e8:	ldr	w2, [x19, #8]
   155ec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   155f0:	cmp	x0, x1
   155f4:	b.eq	1561c <mpfr_get_d_2exp@@Base+0xc8>  // b.none
   155f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   155fc:	fmov	d8, x0
   15600:	cmp	w2, #0x0
   15604:	movi	d0, #0x0
   15608:	fcsel	d8, d8, d0, lt  // lt = tstop
   1560c:	b	15720 <mpfr_get_d_2exp@@Base+0x1cc>
   15610:	movi	d8, #0x0
   15614:	fdiv	d8, d8, d8
   15618:	b	15720 <mpfr_get_d_2exp@@Base+0x1cc>
   1561c:	tbnz	w2, #31, 1562c <mpfr_get_d_2exp@@Base+0xd8>
   15620:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15624:	ldr	d8, [x0, #1080]
   15628:	b	15720 <mpfr_get_d_2exp@@Base+0x1cc>
   1562c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15630:	ldr	d8, [x0, #1072]
   15634:	b	15720 <mpfr_get_d_2exp@@Base+0x1cc>
   15638:	fmov	d0, #-1.000000000000000000e+00
   1563c:	fcmp	d8, d0
   15640:	b.ne	15650 <mpfr_get_d_2exp@@Base+0xfc>  // b.any
   15644:	add	x19, x19, #0x1
   15648:	fmov	d8, #-5.000000000000000000e-01
   1564c:	b	1571c <mpfr_get_d_2exp@@Base+0x1c8>
   15650:	fmov	d0, #5.000000000000000000e-01
   15654:	fcmpe	d8, d0
   15658:	b.lt	1569c <mpfr_get_d_2exp@@Base+0x148>  // b.tstop
   1565c:	fmov	d0, #1.000000000000000000e+00
   15660:	fcmpe	d8, d0
   15664:	b.mi	1571c <mpfr_get_d_2exp@@Base+0x1c8>  // b.first
   15668:	fmov	d0, #-5.000000000000000000e-01
   1566c:	fcmpe	d8, d0
   15670:	b.hi	15734 <mpfr_get_d_2exp@@Base+0x1e0>  // b.pmore
   15674:	fmov	d0, #-1.000000000000000000e+00
   15678:	fcmpe	d8, d0
   1567c:	b.gt	1571c <mpfr_get_d_2exp@@Base+0x1c8>
   15680:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   15684:	add	x2, x2, #0x3c0
   15688:	mov	w1, #0xad                  	// #173
   1568c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15690:	add	x0, x0, #0x400
   15694:	bl	cb40 <mpfr_assert_fail@plt>
   15698:	b	1574c <mpfr_get_d_2exp@@Base+0x1f8>
   1569c:	fmov	d0, #-5.000000000000000000e-01
   156a0:	fcmpe	d8, d0
   156a4:	b.ls	156dc <mpfr_get_d_2exp@@Base+0x188>  // b.plast
   156a8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   156ac:	add	x2, x2, #0x3c0
   156b0:	mov	w1, #0xad                  	// #173
   156b4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   156b8:	add	x0, x0, #0x400
   156bc:	bl	cb40 <mpfr_assert_fail@plt>
   156c0:	fmov	d0, #5.000000000000000000e-01
   156c4:	fcmpe	d8, d0
   156c8:	b.ge	1574c <mpfr_get_d_2exp@@Base+0x1f8>  // b.tcont
   156cc:	fmov	d0, #-5.000000000000000000e-01
   156d0:	fcmpe	d8, d0
   156d4:	b.hi	1571c <mpfr_get_d_2exp@@Base+0x1c8>  // b.pmore
   156d8:	b	1570c <mpfr_get_d_2exp@@Base+0x1b8>
   156dc:	fmov	d0, #-1.000000000000000000e+00
   156e0:	fcmpe	d8, d0
   156e4:	b.gt	1571c <mpfr_get_d_2exp@@Base+0x1c8>
   156e8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   156ec:	add	x2, x2, #0x3c0
   156f0:	mov	w1, #0xad                  	// #173
   156f4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   156f8:	add	x0, x0, #0x400
   156fc:	bl	cb40 <mpfr_assert_fail@plt>
   15700:	fmov	d0, #5.000000000000000000e-01
   15704:	fcmpe	d8, d0
   15708:	b.ge	1574c <mpfr_get_d_2exp@@Base+0x1f8>  // b.tcont
   1570c:	fmov	d0, #-1.000000000000000000e+00
   15710:	fcmpe	d8, d0
   15714:	b	1571c <mpfr_get_d_2exp@@Base+0x1c8>
   15718:	mov	x19, #0x0                   	// #0
   1571c:	str	x19, [x20]
   15720:	fmov	d0, d8
   15724:	ldp	x19, x20, [sp, #16]
   15728:	ldr	d8, [sp, #32]
   1572c:	ldp	x29, x30, [sp], #80
   15730:	ret
   15734:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   15738:	add	x2, x2, #0x3c0
   1573c:	mov	w1, #0xad                  	// #173
   15740:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15744:	add	x0, x0, #0x400
   15748:	bl	cb40 <mpfr_assert_fail@plt>
   1574c:	fmov	d0, #1.000000000000000000e+00
   15750:	fcmpe	d8, d0
   15754:	b.mi	1571c <mpfr_get_d_2exp@@Base+0x1c8>  // b.first
   15758:	fmov	d0, #-5.000000000000000000e-01
   1575c:	fcmpe	d8, d0
   15760:	b.ls	1570c <mpfr_get_d_2exp@@Base+0x1b8>  // b.plast
   15764:	b	1571c <mpfr_get_d_2exp@@Base+0x1c8>

0000000000015768 <mpfr_get_exp@@Base>:
   15768:	stp	x29, x30, [sp, #-32]!
   1576c:	mov	x29, sp
   15770:	str	x19, [sp, #16]
   15774:	mov	x19, x0
   15778:	ldr	x1, [x0, #16]
   1577c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   15780:	cmp	x1, x0
   15784:	b.le	15798 <mpfr_get_exp@@Base+0x30>
   15788:	ldr	x0, [x19, #16]
   1578c:	ldr	x19, [sp, #16]
   15790:	ldp	x29, x30, [sp], #32
   15794:	ret
   15798:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   1579c:	add	x2, x2, #0x440
   157a0:	mov	w1, #0x1d                  	// #29
   157a4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   157a8:	add	x0, x0, #0xcf0
   157ac:	bl	cb40 <mpfr_assert_fail@plt>
   157b0:	b	15788 <mpfr_get_exp@@Base+0x20>
   157b4:	stp	x29, x30, [sp, #-144]!
   157b8:	mov	x29, sp
   157bc:	stp	x19, x20, [sp, #16]
   157c0:	stp	x21, x22, [sp, #32]
   157c4:	stp	x23, x24, [sp, #48]
   157c8:	stp	x25, x26, [sp, #64]
   157cc:	stp	x27, x28, [sp, #80]
   157d0:	str	x1, [x29, #120]
   157d4:	cmp	x4, #0x0
   157d8:	b.gt	158d4 <mpfr_get_exp@@Base+0x16c>
   157dc:	mov	x21, x0
   157e0:	mov	x25, x2
   157e4:	mov	x24, x3
   157e8:	mov	x22, x4
   157ec:	mov	x27, x5
   157f0:	mov	w23, w6
   157f4:	mov	x19, x7
   157f8:	neg	x0, x3, lsl #6
   157fc:	cmp	x0, x4
   15800:	b.ge	158ec <mpfr_get_exp@@Base+0x184>  // b.tcont
   15804:	str	xzr, [x29, #128]
   15808:	sub	w1, w6, #0x2
   1580c:	adrp	x20, 60000 <mpfr_free_pool@@Base+0x37b0>
   15810:	add	x20, x20, #0xdb0
   15814:	add	x0, x20, #0x28
   15818:	adrp	x20, 60000 <mpfr_free_pool@@Base+0x37b0>
   1581c:	add	x20, x20, #0xdb0
   15820:	cmp	w1, #0x23
   15824:	csel	x20, x20, x0, cc  // cc = lo, ul, last
   15828:	tbnz	x5, #63, 15854 <mpfr_get_exp@@Base+0xec>
   1582c:	lsl	x2, x3, #6
   15830:	add	x3, x2, x4
   15834:	ldr	w0, [x29, #144]
   15838:	cmp	w0, #0x0
   1583c:	cinc	x3, x3, eq  // eq = none
   15840:	sub	x2, x2, x5
   15844:	mov	x1, x24
   15848:	mov	x0, x25
   1584c:	bl	c370 <mpfr_round_p@plt>
   15850:	cbz	w0, 15b00 <mpfr_get_exp@@Base+0x398>
   15854:	add	x26, x22, #0x3f
   15858:	cmp	x22, #0x0
   1585c:	csel	x26, x26, x22, lt  // lt = tstop
   15860:	neg	x26, x26, asr #6
   15864:	neg	x28, x22
   15868:	negs	x0, x28
   1586c:	and	x1, x28, #0x3f
   15870:	and	x0, x0, #0x3f
   15874:	csneg	x0, x1, x0, mi  // mi = first
   15878:	str	x0, [x29, #112]
   1587c:	lsl	x0, x26, #3
   15880:	str	x0, [x29, #104]
   15884:	add	x0, x25, x0
   15888:	str	x0, [x29, #96]
   1588c:	lsl	x2, x24, #6
   15890:	add	x6, x29, #0x8c
   15894:	ldr	w5, [x29, #144]
   15898:	add	x4, x2, x22
   1589c:	mov	w3, #0x0                   	// #0
   158a0:	mov	x1, x25
   158a4:	bl	ca20 <mpfr_round_raw@plt>
   158a8:	sxtw	x1, w0
   158ac:	cbz	w0, 15920 <mpfr_get_exp@@Base+0x1b8>
   158b0:	tst	x28, #0x3f
   158b4:	b.eq	15904 <mpfr_get_exp@@Base+0x19c>  // b.none
   158b8:	add	x1, x25, x24, lsl #3
   158bc:	ldr	w0, [x29, #112]
   158c0:	sub	w2, w0, #0x1
   158c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   158c8:	lsr	x0, x0, x2
   158cc:	stur	x0, [x1, #-8]
   158d0:	b	15928 <mpfr_get_exp@@Base+0x1c0>
   158d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   158d8:	add	x2, x2, #0xd00
   158dc:	mov	w1, #0x62                  	// #98
   158e0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   158e4:	add	x0, x0, #0xd08
   158e8:	bl	cb40 <mpfr_assert_fail@plt>
   158ec:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   158f0:	add	x2, x2, #0xd18
   158f4:	mov	w1, #0x64                  	// #100
   158f8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   158fc:	add	x0, x0, #0xd08
   15900:	bl	cb40 <mpfr_assert_fail@plt>
   15904:	add	x0, x25, x24, lsl #3
   15908:	stur	x1, [x0, #-8]
   1590c:	sub	x26, x26, #0x1
   15910:	ldr	x0, [x29, #104]
   15914:	add	x0, x25, x0
   15918:	stur	xzr, [x0, #-8]
   1591c:	b	15928 <mpfr_get_exp@@Base+0x1c0>
   15920:	tst	x28, #0x3f
   15924:	b.ne	159d0 <mpfr_get_exp@@Base+0x268>  // b.any
   15928:	add	x1, x19, #0x3
   1592c:	cmp	x1, #0x4, lsl #12
   15930:	b.hi	159e8 <mpfr_get_exp@@Base+0x280>  // b.pmore
   15934:	add	x1, x1, #0xf
   15938:	and	x1, x1, #0xfffffffffffffff0
   1593c:	sub	sp, sp, x1
   15940:	mov	x22, sp
   15944:	cmp	w23, #0x0
   15948:	cneg	w23, w23, lt  // lt = tstop
   1594c:	sub	x3, x24, x26
   15950:	add	x2, x25, x26, lsl #3
   15954:	mov	w1, w23
   15958:	mov	x0, x22
   1595c:	bl	c5e0 <__gmpn_get_str@plt>
   15960:	cmp	x19, x0
   15964:	b.hi	159f8 <mpfr_get_exp@@Base+0x290>  // b.pmore
   15968:	sub	x1, x0, x19
   1596c:	ldr	x2, [x29, #120]
   15970:	str	x1, [x2]
   15974:	add	x1, x19, #0x1
   15978:	cmp	x1, x0
   1597c:	b.eq	15a10 <mpfr_get_exp@@Base+0x2a8>  // b.none
   15980:	cbz	x19, 159a0 <mpfr_get_exp@@Base+0x238>
   15984:	mov	x0, #0x0                   	// #0
   15988:	ldrb	w1, [x22, x0]
   1598c:	ldrb	w1, [x20, x1]
   15990:	strb	w1, [x21, x0]
   15994:	add	x0, x0, #0x1
   15998:	cmp	x19, x0
   1599c:	b.ne	15988 <mpfr_get_exp@@Base+0x220>  // b.any
   159a0:	strb	wzr, [x21, x19]
   159a4:	ldr	x0, [x29, #128]
   159a8:	cbnz	x0, 15b0c <mpfr_get_exp@@Base+0x3a4>
   159ac:	ldr	w0, [x29, #140]
   159b0:	mov	sp, x29
   159b4:	ldp	x19, x20, [sp, #16]
   159b8:	ldp	x21, x22, [sp, #32]
   159bc:	ldp	x23, x24, [sp, #48]
   159c0:	ldp	x25, x26, [sp, #64]
   159c4:	ldp	x27, x28, [sp, #80]
   159c8:	ldp	x29, x30, [sp], #144
   159cc:	ret
   159d0:	ldr	w3, [x29, #112]
   159d4:	sub	x2, x24, x26
   159d8:	ldr	x0, [x29, #96]
   159dc:	mov	x1, x0
   159e0:	bl	bce0 <__gmpn_rshift@plt>
   159e4:	b	15928 <mpfr_get_exp@@Base+0x1c0>
   159e8:	add	x0, x29, #0x80
   159ec:	bl	bdc0 <mpfr_tmp_allocate@plt>
   159f0:	mov	x22, x0
   159f4:	b	15944 <mpfr_get_exp@@Base+0x1dc>
   159f8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   159fc:	add	x2, x2, #0xd30
   15a00:	mov	w1, #0x9d                  	// #157
   15a04:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15a08:	add	x0, x0, #0xd08
   15a0c:	bl	cb40 <mpfr_assert_fail@plt>
   15a10:	ldr	w1, [x29, #140]
   15a14:	cbnz	w1, 15a24 <mpfr_get_exp@@Base+0x2bc>
   15a18:	add	x2, x22, x0
   15a1c:	ldurb	w2, [x2, #-1]
   15a20:	cbz	w2, 15980 <mpfr_get_exp@@Base+0x218>
   15a24:	ldr	w2, [x29, #144]
   15a28:	cbnz	w2, 15a7c <mpfr_get_exp@@Base+0x314>
   15a2c:	add	x2, x22, x0
   15a30:	ldurb	w2, [x2, #-1]
   15a34:	lsl	w3, w2, #1
   15a38:	cmp	w23, w2, lsl #1
   15a3c:	b.eq	15a54 <mpfr_get_exp@@Base+0x2ec>  // b.none
   15a40:	cmp	w3, w23
   15a44:	b.ge	15a8c <mpfr_get_exp@@Base+0x324>  // b.tcont
   15a48:	mov	w0, #0xffffffff            	// #-1
   15a4c:	str	w0, [x29, #140]
   15a50:	b	15980 <mpfr_get_exp@@Base+0x218>
   15a54:	cmp	w1, #0x0
   15a58:	ccmp	x27, #0x0, #0x0, eq  // eq = none
   15a5c:	b.lt	15a6c <mpfr_get_exp@@Base+0x304>  // b.tstop
   15a60:	mov	w0, #0xfffffffd            	// #-3
   15a64:	str	w0, [x29, #140]
   15a68:	b	159a4 <mpfr_get_exp@@Base+0x23c>
   15a6c:	add	x1, x22, x0
   15a70:	ldurb	w1, [x1, #-2]
   15a74:	tbz	w1, #0, 15a48 <mpfr_get_exp@@Base+0x2e0>
   15a78:	b	15a8c <mpfr_get_exp@@Base+0x324>
   15a7c:	ldr	w1, [x29, #144]
   15a80:	sub	w1, w1, #0x2
   15a84:	tst	w1, #0xfffffffd
   15a88:	b.ne	15a48 <mpfr_get_exp@@Base+0x2e0>  // b.any
   15a8c:	add	x1, x22, x0
   15a90:	ldurb	w1, [x1, #-1]
   15a94:	cbz	w1, 15adc <mpfr_get_exp@@Base+0x374>
   15a98:	cmp	x0, #0x1
   15a9c:	b.ls	15ae8 <mpfr_get_exp@@Base+0x380>  // b.plast
   15aa0:	sub	x0, x0, #0x2
   15aa4:	add	x2, x22, x0
   15aa8:	ldrb	w1, [x22, x0]
   15aac:	sub	w23, w23, #0x1
   15ab0:	cmp	w1, w23
   15ab4:	b.ne	15ad4 <mpfr_get_exp@@Base+0x36c>  // b.any
   15ab8:	add	x3, x22, #0x1
   15abc:	sub	x0, x0, #0x1
   15ac0:	strb	wzr, [x3, x0]
   15ac4:	add	x2, x22, x0
   15ac8:	ldrb	w1, [x22, x0]
   15acc:	cmp	w23, w1
   15ad0:	b.eq	15abc <mpfr_get_exp@@Base+0x354>  // b.none
   15ad4:	add	w1, w1, #0x1
   15ad8:	strb	w1, [x2]
   15adc:	mov	w0, #0x1                   	// #1
   15ae0:	str	w0, [x29, #140]
   15ae4:	b	15980 <mpfr_get_exp@@Base+0x218>
   15ae8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   15aec:	add	x2, x2, #0xd40
   15af0:	mov	w1, #0xd2                  	// #210
   15af4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15af8:	add	x0, x0, #0xd08
   15afc:	bl	cb40 <mpfr_assert_fail@plt>
   15b00:	mov	w0, #0x3                   	// #3
   15b04:	str	w0, [x29, #140]
   15b08:	b	159a4 <mpfr_get_exp@@Base+0x23c>
   15b0c:	bl	c410 <mpfr_tmp_free@plt>
   15b10:	b	159ac <mpfr_get_exp@@Base+0x244>

0000000000015b14 <mpfr_ceil_mul@@Base>:
   15b14:	stp	x29, x30, [sp, #-96]!
   15b18:	mov	x29, sp
   15b1c:	stp	x19, x20, [sp, #16]
   15b20:	str	x21, [sp, #32]
   15b24:	mov	w19, w1
   15b28:	mov	w21, w2
   15b2c:	mov	x1, #0x3f                  	// #63
   15b30:	str	x1, [sp, #64]
   15b34:	add	x1, sp, #0x38
   15b38:	str	x1, [sp, #88]
   15b3c:	mov	w1, #0x1                   	// #1
   15b40:	str	w1, [sp, #72]
   15b44:	add	x20, sp, #0x40
   15b48:	mov	w3, #0x2                   	// #2
   15b4c:	mov	x2, #0x0                   	// #0
   15b50:	mov	x1, x0
   15b54:	mov	x0, x20
   15b58:	bl	ba80 <mpfr_set_si_2exp@plt>
   15b5c:	sub	w19, w19, #0x2
   15b60:	sxtw	x21, w21
   15b64:	add	x19, x21, w19, sxtw #1
   15b68:	mov	w3, #0x2                   	// #2
   15b6c:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   15b70:	ldr	x2, [x2, #4016]
   15b74:	add	x2, x2, x19, lsl #5
   15b78:	mov	x1, x20
   15b7c:	mov	x0, x20
   15b80:	bl	bd50 <mpfr_mul@plt>
   15b84:	mov	w1, #0x2                   	// #2
   15b88:	mov	x0, x20
   15b8c:	bl	c190 <mpfr_get_si@plt>
   15b90:	ldp	x19, x20, [sp, #16]
   15b94:	ldr	x21, [sp, #32]
   15b98:	ldp	x29, x30, [sp], #96
   15b9c:	ret

0000000000015ba0 <mpfr_get_str@@Base>:
   15ba0:	stp	x29, x30, [sp, #-272]!
   15ba4:	mov	x29, sp
   15ba8:	stp	x19, x20, [sp, #16]
   15bac:	stp	x21, x22, [sp, #32]
   15bb0:	stp	x23, x24, [sp, #48]
   15bb4:	stp	x25, x26, [sp, #64]
   15bb8:	stp	x27, x28, [sp, #80]
   15bbc:	sub	sp, sp, #0x10
   15bc0:	str	x0, [x29, #128]
   15bc4:	str	x1, [x29, #200]
   15bc8:	str	w2, [x29, #188]
   15bcc:	str	x3, [x29, #224]
   15bd0:	cmn	w2, #0x24
   15bd4:	b.lt	167c0 <mpfr_get_str@@Base+0xc20>  // b.tstop
   15bd8:	mov	x26, x4
   15bdc:	add	w0, w2, #0x1
   15be0:	cmp	w2, #0x3e
   15be4:	ccmp	w0, #0x2, #0x0, le
   15be8:	b.ls	167c8 <mpfr_get_str@@Base+0xc28>  // b.plast
   15bec:	sub	w1, w2, #0x2
   15bf0:	adrp	x19, 60000 <mpfr_free_pool@@Base+0x37b0>
   15bf4:	add	x19, x19, #0xdb0
   15bf8:	add	x0, x19, #0x28
   15bfc:	adrp	x19, 60000 <mpfr_free_pool@@Base+0x37b0>
   15c00:	add	x19, x19, #0xdb0
   15c04:	cmp	w1, #0x23
   15c08:	csel	x19, x19, x0, cc  // cc = lo, ul, last
   15c0c:	cmp	w2, #0x0
   15c10:	cneg	w0, w2, lt  // lt = tstop
   15c14:	str	w0, [x29, #172]
   15c18:	cmp	w5, #0x5
   15c1c:	csel	w0, w5, wzr, ne  // ne = any
   15c20:	str	w0, [x29, #184]
   15c24:	ldr	x0, [x4, #16]
   15c28:	mov	x1, #0x2                   	// #2
   15c2c:	movk	x1, #0x8000, lsl #48
   15c30:	cmp	x0, x1
   15c34:	b.eq	15d98 <mpfr_get_str@@Base+0x1f8>  // b.none
   15c38:	ldr	w22, [x4, #8]
   15c3c:	lsr	w20, w22, #31
   15c40:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   15c44:	cmp	x0, x1
   15c48:	b.eq	15df8 <mpfr_get_str@@Base+0x258>  // b.none
   15c4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15c50:	ldr	x1, [x0, #2576]
   15c54:	add	x0, x0, #0xa10
   15c58:	blr	x1
   15c5c:	mrs	x1, tpidr_el0
   15c60:	ldr	w0, [x1, x0]
   15c64:	str	w0, [x29, #116]
   15c68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15c6c:	ldr	x2, [x0, #2512]
   15c70:	add	x0, x0, #0x9d0
   15c74:	blr	x2
   15c78:	add	x2, x1, x0
   15c7c:	ldr	x0, [x1, x0]
   15c80:	str	x0, [x29, #104]
   15c84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15c88:	ldr	x3, [x0, #2544]
   15c8c:	add	x0, x0, #0x9f0
   15c90:	blr	x3
   15c94:	ldr	x3, [x1, x0]
   15c98:	str	x3, [x29, #96]
   15c9c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   15ca0:	str	x3, [x2]
   15ca4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   15ca8:	str	x2, [x1, x0]
   15cac:	ldr	x0, [x29, #224]
   15cb0:	cbnz	x0, 15ce0 <mpfr_get_str@@Base+0x140>
   15cb4:	ldr	w1, [x29, #172]
   15cb8:	sub	w0, w1, #0x1
   15cbc:	tst	w0, w1
   15cc0:	b.ne	15e40 <mpfr_get_str@@Base+0x2a0>  // b.any
   15cc4:	ldr	x0, [x4]
   15cc8:	sub	x0, x0, #0x1
   15ccc:	mov	w2, #0x1                   	// #1
   15cd0:	ldr	w1, [x29, #172]
   15cd4:	bl	cb80 <mpfr_ceil_mul@plt>
   15cd8:	add	x0, x0, #0x1
   15cdc:	str	x0, [x29, #224]
   15ce0:	ldr	x0, [x29, #128]
   15ce4:	cbz	x0, 15e48 <mpfr_get_str@@Base+0x2a8>
   15ce8:	ldr	x0, [x29, #128]
   15cec:	str	x0, [x29, #176]
   15cf0:	tbnz	w22, #31, 15e64 <mpfr_get_str@@Base+0x2c4>
   15cf4:	ldr	x0, [x26, #16]
   15cf8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   15cfc:	cmp	x0, x1
   15d00:	b.eq	15e78 <mpfr_get_str@@Base+0x2d8>  // b.none
   15d04:	ldr	x1, [x26, #24]
   15d08:	str	x1, [x29, #208]
   15d0c:	ldr	w1, [x29, #172]
   15d10:	sub	w21, w1, #0x1
   15d14:	ands	w21, w21, w1
   15d18:	b.eq	15ef0 <mpfr_get_str@@Base+0x350>  // b.none
   15d1c:	tbnz	w22, #31, 16104 <mpfr_get_str@@Base+0x564>
   15d20:	mov	w2, #0x1                   	// #1
   15d24:	ldr	w21, [x29, #172]
   15d28:	mov	w1, w21
   15d2c:	sub	x0, x0, #0x1
   15d30:	bl	cb80 <mpfr_ceil_mul@plt>
   15d34:	mov	x20, x0
   15d38:	str	x0, [x29, #232]
   15d3c:	ldr	x19, [x29, #224]
   15d40:	str	x19, [x29, #192]
   15d44:	mov	w2, #0x0                   	// #0
   15d48:	mov	w1, w21
   15d4c:	mov	x0, x19
   15d50:	bl	cb80 <mpfr_ceil_mul@plt>
   15d54:	add	x28, x0, #0x1
   15d58:	cmp	x19, x20
   15d5c:	b.ge	16130 <mpfr_get_str@@Base+0x590>  // b.tcont
   15d60:	sub	x1, x20, x19
   15d64:	str	x1, [x29, #216]
   15d68:	cmp	x28, #0x1
   15d6c:	b.eq	16168 <mpfr_get_str@@Base+0x5c8>  // b.none
   15d70:	clz	x0, x0
   15d74:	mov	w1, #0x40                  	// #64
   15d78:	sub	w0, w1, w0
   15d7c:	cmp	x28, #0x1
   15d80:	b.le	16150 <mpfr_get_str@@Base+0x5b0>
   15d84:	add	x28, x28, w0, sxtw
   15d88:	ldr	x0, [x29, #216]
   15d8c:	cbnz	x0, 16168 <mpfr_get_str@@Base+0x5c8>
   15d90:	str	xzr, [x29, #256]
   15d94:	b	16194 <mpfr_get_str@@Base+0x5f4>
   15d98:	ldr	x0, [x29, #128]
   15d9c:	cbz	x0, 15de8 <mpfr_get_str@@Base+0x248>
   15da0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15da4:	add	x0, x0, #0x1e0
   15da8:	ldr	w1, [x0]
   15dac:	ldr	x2, [x29, #128]
   15db0:	str	w1, [x2]
   15db4:	ldrh	w0, [x0, #4]
   15db8:	strh	w0, [x2, #4]
   15dbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15dc0:	ldr	x1, [x0, #2576]
   15dc4:	add	x0, x0, #0xa10
   15dc8:	blr	x1
   15dcc:	mrs	x1, tpidr_el0
   15dd0:	add	x0, x1, x0
   15dd4:	ldr	w1, [x0]
   15dd8:	orr	w1, w1, #0x4
   15ddc:	str	w1, [x0]
   15de0:	mov	x0, x2
   15de4:	b	167a0 <mpfr_get_str@@Base+0xc00>
   15de8:	mov	x0, #0x6                   	// #6
   15dec:	bl	ccf0 <mpfr_allocate_func@plt>
   15df0:	str	x0, [x29, #128]
   15df4:	b	15da0 <mpfr_get_str@@Base+0x200>
   15df8:	ldr	x0, [x29, #128]
   15dfc:	cbz	x0, 15e2c <mpfr_get_str@@Base+0x28c>
   15e00:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   15e04:	add	x0, x0, #0x1e8
   15e08:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   15e0c:	add	x1, x1, #0xd50
   15e10:	cmp	w22, #0x0
   15e14:	csel	x1, x1, x0, lt  // lt = tstop
   15e18:	ldr	x19, [x29, #128]
   15e1c:	mov	x0, x19
   15e20:	bl	c910 <strcpy@plt>
   15e24:	mov	x0, x19
   15e28:	b	167a0 <mpfr_get_str@@Base+0xc00>
   15e2c:	add	w0, w20, #0x6
   15e30:	sxtw	x0, w0
   15e34:	bl	ccf0 <mpfr_allocate_func@plt>
   15e38:	str	x0, [x29, #128]
   15e3c:	b	15e00 <mpfr_get_str@@Base+0x260>
   15e40:	ldr	x0, [x4]
   15e44:	b	15ccc <mpfr_get_str@@Base+0x12c>
   15e48:	and	x0, x20, #0xff
   15e4c:	add	x0, x0, #0x1
   15e50:	ldr	x1, [x29, #224]
   15e54:	add	x0, x0, x1
   15e58:	bl	ccf0 <mpfr_allocate_func@plt>
   15e5c:	str	x0, [x29, #128]
   15e60:	b	15ce8 <mpfr_get_str@@Base+0x148>
   15e64:	mov	x1, x0
   15e68:	mov	w0, #0x2d                  	// #45
   15e6c:	strb	w0, [x1], #1
   15e70:	str	x1, [x29, #176]
   15e74:	b	15cf4 <mpfr_get_str@@Base+0x154>
   15e78:	ldr	x20, [x29, #224]
   15e7c:	mov	x2, x20
   15e80:	mov	w1, #0x30                  	// #48
   15e84:	ldr	x19, [x29, #176]
   15e88:	mov	x0, x19
   15e8c:	bl	c110 <memset@plt>
   15e90:	strb	wzr, [x19, x20]
   15e94:	ldr	x0, [x29, #200]
   15e98:	str	xzr, [x0]
   15e9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15ea0:	ldr	x1, [x0, #2576]
   15ea4:	add	x0, x0, #0xa10
   15ea8:	blr	x1
   15eac:	mrs	x1, tpidr_el0
   15eb0:	ldr	w2, [x29, #116]
   15eb4:	str	w2, [x1, x0]
   15eb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15ebc:	ldr	x2, [x0, #2512]
   15ec0:	add	x0, x0, #0x9d0
   15ec4:	blr	x2
   15ec8:	ldr	x2, [x29, #104]
   15ecc:	str	x2, [x1, x0]
   15ed0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   15ed4:	ldr	x2, [x0, #2544]
   15ed8:	add	x0, x0, #0x9f0
   15edc:	blr	x2
   15ee0:	ldr	x2, [x29, #96]
   15ee4:	str	x2, [x1, x0]
   15ee8:	ldr	x0, [x29, #128]
   15eec:	b	167a0 <mpfr_get_str@@Base+0xc00>
   15ef0:	ldrsw	x1, [x29, #172]
   15ef4:	clz	x1, x1
   15ef8:	mov	w2, #0x3f                  	// #63
   15efc:	sub	w1, w2, w1
   15f00:	str	w1, [x29, #216]
   15f04:	sxtw	x28, w1
   15f08:	sub	x23, x0, #0x1
   15f0c:	sdiv	x23, x23, x28
   15f10:	msub	x20, x28, x23, x0
   15f14:	cmp	x20, #0x0
   15f18:	b.le	16074 <mpfr_get_str@@Base+0x4d4>
   15f1c:	ldr	x0, [x29, #224]
   15f20:	sub	x22, x0, #0x1
   15f24:	ldrsw	x0, [x29, #216]
   15f28:	madd	x22, x22, x0, x20
   15f2c:	add	x0, x22, #0x3e
   15f30:	subs	x1, x22, #0x1
   15f34:	csel	x0, x0, x1, mi  // mi = first
   15f38:	asr	x0, x0, #6
   15f3c:	add	x27, x0, #0x1
   15f40:	str	xzr, [x29, #256]
   15f44:	add	x0, x0, #0x2
   15f48:	str	x0, [x29, #192]
   15f4c:	lsl	x24, x0, #3
   15f50:	cmp	x24, #0x4, lsl #12
   15f54:	b.hi	16080 <mpfr_get_str@@Base+0x4e0>  // b.pmore
   15f58:	add	x0, x24, #0xf
   15f5c:	and	x0, x0, #0xfffffffffffffff0
   15f60:	sub	sp, sp, x0
   15f64:	add	x25, sp, #0x10
   15f68:	lsl	x0, x27, #6
   15f6c:	sub	x0, x0, x22
   15f70:	str	x0, [x29, #232]
   15f74:	ldr	x2, [x26]
   15f78:	ldr	w0, [x26, #8]
   15f7c:	cmp	w0, #0x0
   15f80:	csinc	w21, w21, wzr, ge  // ge = tcont
   15f84:	add	x6, x29, #0xfc
   15f88:	ldr	w5, [x29, #184]
   15f8c:	mov	x4, x22
   15f90:	mov	w3, w21
   15f94:	ldr	x1, [x29, #208]
   15f98:	mov	x0, x25
   15f9c:	bl	ca20 <mpfr_round_raw@plt>
   15fa0:	sxtw	x0, w0
   15fa4:	add	x24, x25, x24
   15fa8:	stur	x0, [x24, #-8]
   15fac:	cbz	x0, 15fbc <mpfr_get_str@@Base+0x41c>
   15fb0:	cmp	x28, x20
   15fb4:	b.eq	160b4 <mpfr_get_str@@Base+0x514>  // b.none
   15fb8:	ldr	x27, [x29, #192]
   15fbc:	ldr	x0, [x29, #232]
   15fc0:	cbnz	x0, 160d0 <mpfr_get_str@@Base+0x530>
   15fc4:	mov	x3, x27
   15fc8:	mov	x2, x25
   15fcc:	ldr	w1, [x29, #172]
   15fd0:	ldr	x20, [x29, #176]
   15fd4:	mov	x0, x20
   15fd8:	bl	c5e0 <__gmpn_get_str@plt>
   15fdc:	ldr	x2, [x29, #224]
   15fe0:	cbz	x2, 16000 <mpfr_get_str@@Base+0x460>
   15fe4:	mov	x0, x20
   15fe8:	add	x2, x2, x20
   15fec:	ldrb	w1, [x0]
   15ff0:	ldrb	w1, [x19, x1]
   15ff4:	strb	w1, [x0], #1
   15ff8:	cmp	x2, x0
   15ffc:	b.ne	15fec <mpfr_get_str@@Base+0x44c>  // b.any
   16000:	ldr	x0, [x29, #176]
   16004:	ldr	x1, [x29, #224]
   16008:	strb	wzr, [x0, x1]
   1600c:	add	x23, x23, #0x1
   16010:	ldr	x0, [x29, #200]
   16014:	str	x23, [x0]
   16018:	ldr	x0, [x29, #256]
   1601c:	cbnz	x0, 160fc <mpfr_get_str@@Base+0x55c>
   16020:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16024:	ldr	x1, [x0, #2576]
   16028:	add	x0, x0, #0xa10
   1602c:	blr	x1
   16030:	mrs	x1, tpidr_el0
   16034:	ldr	w2, [x29, #116]
   16038:	str	w2, [x1, x0]
   1603c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16040:	ldr	x2, [x0, #2512]
   16044:	add	x0, x0, #0x9d0
   16048:	blr	x2
   1604c:	ldr	x2, [x29, #104]
   16050:	str	x2, [x1, x0]
   16054:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16058:	ldr	x2, [x0, #2544]
   1605c:	add	x0, x0, #0x9f0
   16060:	blr	x2
   16064:	ldr	x2, [x29, #96]
   16068:	str	x2, [x1, x0]
   1606c:	ldr	x0, [x29, #128]
   16070:	b	167a0 <mpfr_get_str@@Base+0xc00>
   16074:	sub	x23, x23, #0x1
   16078:	add	x20, x20, x28
   1607c:	b	15f1c <mpfr_get_str@@Base+0x37c>
   16080:	mov	x1, x24
   16084:	add	x0, x29, #0x100
   16088:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1608c:	mov	x25, x0
   16090:	lsl	x0, x27, #6
   16094:	sub	x0, x0, x22
   16098:	str	x0, [x29, #232]
   1609c:	ldr	x2, [x26]
   160a0:	ldr	x1, [x26, #16]
   160a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   160a8:	cmp	x1, x0
   160ac:	b.eq	15f84 <mpfr_get_str@@Base+0x3e4>  // b.none
   160b0:	b	15f78 <mpfr_get_str@@Base+0x3d8>
   160b4:	ldr	w3, [x29, #216]
   160b8:	ldr	x2, [x29, #192]
   160bc:	mov	x1, x25
   160c0:	mov	x0, x25
   160c4:	bl	bce0 <__gmpn_rshift@plt>
   160c8:	add	x23, x23, #0x1
   160cc:	b	15fbc <mpfr_get_str@@Base+0x41c>
   160d0:	ldr	w3, [x29, #232]
   160d4:	mov	x2, x27
   160d8:	mov	x1, x25
   160dc:	mov	x0, x25
   160e0:	bl	bce0 <__gmpn_rshift@plt>
   160e4:	add	x0, x25, x27, lsl #3
   160e8:	ldur	x0, [x0, #-8]
   160ec:	cmp	x0, #0x0
   160f0:	cset	x0, eq  // eq = none
   160f4:	sub	x27, x27, x0
   160f8:	b	15fc4 <mpfr_get_str@@Base+0x424>
   160fc:	bl	c410 <mpfr_tmp_free@plt>
   16100:	b	16020 <mpfr_get_str@@Base+0x480>
   16104:	ldr	w2, [x29, #184]
   16108:	cmp	w2, #0x2
   1610c:	b.eq	16124 <mpfr_get_str@@Base+0x584>  // b.none
   16110:	cmp	w2, #0x3
   16114:	mov	w1, #0x2                   	// #2
   16118:	csel	w1, w2, w1, ne  // ne = any
   1611c:	str	w1, [x29, #184]
   16120:	b	15d20 <mpfr_get_str@@Base+0x180>
   16124:	mov	w1, #0x3                   	// #3
   16128:	str	w1, [x29, #184]
   1612c:	b	15d20 <mpfr_get_str@@Base+0x180>
   16130:	ldr	x1, [x29, #224]
   16134:	ldr	x2, [x29, #232]
   16138:	sub	x1, x1, x2
   1613c:	str	x1, [x29, #216]
   16140:	cmp	x28, #0x1
   16144:	b.ne	15d70 <mpfr_get_str@@Base+0x1d0>  // b.any
   16148:	mov	w0, #0x0                   	// #0
   1614c:	b	15d84 <mpfr_get_str@@Base+0x1e4>
   16150:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   16154:	add	x2, x2, #0xd58
   16158:	mov	w1, #0x983                 	// #2435
   1615c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   16160:	add	x0, x0, #0xd08
   16164:	bl	cb40 <mpfr_assert_fail@plt>
   16168:	ldr	x0, [x29, #216]
   1616c:	cmp	x0, #0x1
   16170:	b.eq	161b0 <mpfr_get_str@@Base+0x610>  // b.none
   16174:	sub	x0, x0, #0x1
   16178:	clz	x1, x0
   1617c:	mov	w0, #0x40                  	// #64
   16180:	sub	w0, w0, w1
   16184:	sbfiz	x1, x0, #1, #32
   16188:	add	x0, x1, w0, sxtw
   1618c:	add	x28, x28, x0
   16190:	str	xzr, [x29, #256]
   16194:	mov	x0, #0x40                  	// #64
   16198:	str	x0, [x29, #152]
   1619c:	add	x0, x29, #0x100
   161a0:	str	x0, [x29, #120]
   161a4:	add	x0, x29, #0x108
   161a8:	str	x0, [x29, #136]
   161ac:	b	165c0 <mpfr_get_str@@Base+0xa20>
   161b0:	mov	x0, #0x0                   	// #0
   161b4:	b	1618c <mpfr_get_str@@Base+0x5ec>
   161b8:	mov	x1, x24
   161bc:	ldr	x0, [x29, #120]
   161c0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   161c4:	mov	x22, x0
   161c8:	b	165f0 <mpfr_get_str@@Base+0xa50>
   161cc:	cmp	x20, x25
   161d0:	b.cs	16218 <mpfr_get_str@@Base+0x678>  // b.hs, b.nlast
   161d4:	mov	x1, #0x0                   	// #0
   161d8:	ldr	x0, [x29, #208]
   161dc:	bl	caa0 <__gmpn_scan1@plt>
   161e0:	sub	x1, x21, x19
   161e4:	lsl	x1, x1, #6
   161e8:	cmp	x0, x1
   161ec:	cset	w25, cs  // cs = hs, nlast
   161f0:	cset	x23, cc  // cc = lo, ul, last
   161f4:	sub	x19, x21, x19
   161f8:	ldr	x0, [x29, #208]
   161fc:	add	x1, x0, x19, lsl #3
   16200:	cmp	x1, x22
   16204:	b.eq	16254 <mpfr_get_str@@Base+0x6b4>  // b.none
   16208:	mov	x2, x24
   1620c:	mov	x0, x22
   16210:	bl	ba10 <memcpy@plt>
   16214:	b	16254 <mpfr_get_str@@Base+0x6b4>
   16218:	b.eq	162d4 <mpfr_get_str@@Base+0x734>  // b.none
   1621c:	sub	x19, x19, x21
   16220:	lsl	x19, x19, #3
   16224:	add	x0, x22, x19
   16228:	ldr	x1, [x29, #208]
   1622c:	cmp	x0, x1
   16230:	b.eq	1623c <mpfr_get_str@@Base+0x69c>  // b.none
   16234:	lsl	x2, x25, #3
   16238:	bl	ba10 <memcpy@plt>
   1623c:	mov	x2, x19
   16240:	mov	w1, #0x0                   	// #0
   16244:	mov	x0, x22
   16248:	bl	c110 <memset@plt>
   1624c:	mov	x23, #0x0                   	// #0
   16250:	mov	w25, #0x1                   	// #1
   16254:	ldr	x0, [x26, #16]
   16258:	sub	x0, x0, x20, lsl #6
   1625c:	str	x0, [x29, #264]
   16260:	cmp	w25, #0x0
   16264:	ldr	w0, [x29, #184]
   16268:	str	w0, [sp]
   1626c:	ldr	x7, [x29, #224]
   16270:	ldr	w6, [x29, #188]
   16274:	csinv	x5, x23, xzr, eq  // eq = none
   16278:	ldr	x4, [x29, #264]
   1627c:	mov	x3, x20
   16280:	mov	x2, x22
   16284:	ldr	x1, [x29, #200]
   16288:	ldr	x0, [x29, #176]
   1628c:	bl	157b4 <mpfr_get_exp@@Base+0x4c>
   16290:	mov	w19, w0
   16294:	ldr	x0, [x29, #256]
   16298:	cbnz	x0, 16588 <mpfr_get_str@@Base+0x9e8>
   1629c:	cmp	w19, #0x3
   162a0:	b.eq	16590 <mpfr_get_str@@Base+0x9f0>  // b.none
   162a4:	cmn	w19, #0x3
   162a8:	b.ne	16730 <mpfr_get_str@@Base+0xb90>  // b.any
   162ac:	ldr	x1, [x29, #192]
   162b0:	ldr	x0, [x29, #232]
   162b4:	cmp	x1, x0
   162b8:	b.le	16714 <mpfr_get_str@@Base+0xb74>
   162bc:	add	x0, x0, #0x1
   162c0:	str	x0, [x29, #232]
   162c4:	ldr	x0, [x29, #216]
   162c8:	sub	x0, x0, #0x1
   162cc:	str	x0, [x29, #216]
   162d0:	b	165bc <mpfr_get_str@@Base+0xa1c>
   162d4:	mov	x23, #0x0                   	// #0
   162d8:	mov	w25, #0x1                   	// #1
   162dc:	b	161f4 <mpfr_get_str@@Base+0x654>
   162e0:	mov	w25, #0x0                   	// #0
   162e4:	cmn	x23, #0x1
   162e8:	b.ne	1666c <mpfr_get_str@@Base+0xacc>  // b.any
   162ec:	mov	x1, #0x0                   	// #0
   162f0:	ldr	x0, [x29, #208]
   162f4:	bl	caa0 <__gmpn_scan1@plt>
   162f8:	sub	x19, x21, x19
   162fc:	cmp	x0, x19, lsl #6
   16300:	cset	w25, cs  // cs = hs, nlast
   16304:	b	1666c <mpfr_get_str@@Base+0xacc>
   16308:	mov	x1, x19
   1630c:	ldr	x0, [x29, #120]
   16310:	bl	bdc0 <mpfr_tmp_allocate@plt>
   16314:	mov	x21, x0
   16318:	b	16698 <mpfr_get_str@@Base+0xaf8>
   1631c:	add	x27, x21, x27, lsl #3
   16320:	mov	w3, #0x1                   	// #1
   16324:	mov	x2, x20
   16328:	mov	x1, x27
   1632c:	mov	x0, x22
   16330:	bl	bcc0 <__gmpn_lshift@plt>
   16334:	ldur	x0, [x27, #-8]
   16338:	ldr	x1, [x22]
   1633c:	orr	x0, x1, x0, lsr #63
   16340:	str	x0, [x22]
   16344:	ldr	x0, [x29, #264]
   16348:	sub	x0, x0, #0x1
   1634c:	str	x0, [x29, #264]
   16350:	b	16260 <mpfr_get_str@@Base+0x6c0>
   16354:	mov	x4, x20
   16358:	ldr	x3, [x29, #216]
   1635c:	ldr	w2, [x29, #172]
   16360:	ldr	x1, [x29, #136]
   16364:	mov	x0, x22
   16368:	bl	cbe0 <mpfr_mpn_exp@plt>
   1636c:	mov	x27, x0
   16370:	cmn	x0, #0x1
   16374:	cset	w0, eq  // eq = none
   16378:	str	w0, [x29, #168]
   1637c:	lsl	x23, x20, #4
   16380:	cmp	x23, #0x4, lsl #12
   16384:	b.hi	163fc <mpfr_get_str@@Base+0x85c>  // b.pmore
   16388:	sub	sp, sp, x23
   1638c:	add	x0, sp, #0x10
   16390:	str	x0, [x29, #160]
   16394:	add	x1, x24, #0x8
   16398:	cmp	x1, #0x4, lsl #12
   1639c:	b.hi	16410 <mpfr_get_str@@Base+0x870>  // b.pmore
   163a0:	add	x1, x1, #0xf
   163a4:	and	x1, x1, #0xfffffffffffffff0
   163a8:	sub	sp, sp, x1
   163ac:	add	x19, sp, #0x10
   163b0:	cmp	x24, #0x4, lsl #12
   163b4:	b.hi	16420 <mpfr_get_str@@Base+0x880>  // b.pmore
   163b8:	add	x0, x24, #0xf
   163bc:	and	x0, x0, #0xfffffffffffffff0
   163c0:	sub	sp, sp, x0
   163c4:	add	x0, sp, #0x10
   163c8:	str	x0, [x29, #144]
   163cc:	lsl	x21, x20, #1
   163d0:	cmp	x25, x20, lsl #1
   163d4:	b.cc	16434 <mpfr_get_str@@Base+0x894>  // b.lo, b.ul, b.last
   163d8:	sub	x1, x25, x21
   163dc:	ldr	x0, [x29, #208]
   163e0:	add	x1, x0, x1, lsl #3
   163e4:	ldr	x0, [x29, #160]
   163e8:	cmp	x1, x0
   163ec:	b.eq	16468 <mpfr_get_str@@Base+0x8c8>  // b.none
   163f0:	mov	x2, x23
   163f4:	bl	ba10 <memcpy@plt>
   163f8:	b	16468 <mpfr_get_str@@Base+0x8c8>
   163fc:	mov	x1, x23
   16400:	ldr	x0, [x29, #120]
   16404:	bl	bdc0 <mpfr_tmp_allocate@plt>
   16408:	str	x0, [x29, #160]
   1640c:	b	16394 <mpfr_get_str@@Base+0x7f4>
   16410:	ldr	x0, [x29, #120]
   16414:	bl	bdc0 <mpfr_tmp_allocate@plt>
   16418:	mov	x19, x0
   1641c:	b	163b0 <mpfr_get_str@@Base+0x810>
   16420:	mov	x1, x24
   16424:	ldr	x0, [x29, #120]
   16428:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1642c:	str	x0, [x29, #144]
   16430:	b	163cc <mpfr_get_str@@Base+0x82c>
   16434:	sub	x23, x21, x25
   16438:	lsl	x23, x23, #3
   1643c:	ldr	x0, [x29, #160]
   16440:	add	x0, x0, x23
   16444:	ldr	x1, [x29, #208]
   16448:	cmp	x0, x1
   1644c:	b.eq	16458 <mpfr_get_str@@Base+0x8b8>  // b.none
   16450:	lsl	x2, x25, #3
   16454:	bl	ba10 <memcpy@plt>
   16458:	mov	x2, x23
   1645c:	mov	w1, #0x0                   	// #0
   16460:	ldr	x0, [x29, #160]
   16464:	bl	c110 <memset@plt>
   16468:	ldr	w0, [x29, #168]
   1646c:	cmp	w0, #0x0
   16470:	ccmp	x21, x25, #0x2, ne  // ne = any
   16474:	b.cc	16504 <mpfr_get_str@@Base+0x964>  // b.lo, b.ul, b.last
   16478:	mov	x6, x20
   1647c:	mov	x5, x22
   16480:	mov	x4, x21
   16484:	ldr	x3, [x29, #160]
   16488:	mov	x2, #0x0                   	// #0
   1648c:	ldr	x1, [x29, #144]
   16490:	mov	x0, x19
   16494:	bl	ba60 <__gmpn_tdiv_qr@plt>
   16498:	ldr	x0, [x26, #16]
   1649c:	ldr	x1, [x29, #264]
   164a0:	sub	x0, x0, x1
   164a4:	sub	x0, x0, x20, lsl #7
   164a8:	str	x0, [x29, #264]
   164ac:	mov	w25, #0x0                   	// #0
   164b0:	cmn	x27, #0x1
   164b4:	b.ne	164cc <mpfr_get_str@@Base+0x92c>  // b.any
   164b8:	mov	x1, x20
   164bc:	ldr	x0, [x29, #144]
   164c0:	bl	c860 <__gmpn_popcount@plt>
   164c4:	cmp	x0, #0x0
   164c8:	cset	w25, eq  // eq = none
   164cc:	ldr	x0, [x19, x20, lsl #3]
   164d0:	cmp	x0, #0x1
   164d4:	b.eq	16554 <mpfr_get_str@@Base+0x9b4>  // b.none
   164d8:	cmp	x22, x19
   164dc:	b.eq	164f0 <mpfr_get_str@@Base+0x950>  // b.none
   164e0:	mov	x2, x24
   164e4:	mov	x1, x19
   164e8:	mov	x0, x22
   164ec:	bl	ba10 <memcpy@plt>
   164f0:	add	x23, x27, #0x2
   164f4:	cmn	x27, #0x1
   164f8:	mov	x0, #0x2                   	// #2
   164fc:	csel	x23, x23, x0, ne  // ne = any
   16500:	b	16260 <mpfr_get_str@@Base+0x6c0>
   16504:	mov	x1, #0x0                   	// #0
   16508:	ldr	x0, [x29, #208]
   1650c:	bl	caa0 <__gmpn_scan1@plt>
   16510:	sub	x25, x25, x21
   16514:	cmp	x0, x25, lsl #6
   16518:	b.cc	167d0 <mpfr_get_str@@Base+0xc30>  // b.lo, b.ul, b.last
   1651c:	mov	x6, x20
   16520:	mov	x5, x22
   16524:	mov	x4, x21
   16528:	ldr	x3, [x29, #160]
   1652c:	mov	x2, #0x0                   	// #0
   16530:	ldr	x1, [x29, #144]
   16534:	mov	x0, x19
   16538:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1653c:	ldr	x0, [x26, #16]
   16540:	ldr	x1, [x29, #264]
   16544:	sub	x0, x0, x1
   16548:	sub	x0, x0, x20, lsl #7
   1654c:	str	x0, [x29, #264]
   16550:	b	164b8 <mpfr_get_str@@Base+0x918>
   16554:	mov	w3, #0x1                   	// #1
   16558:	mov	x2, x20
   1655c:	mov	x1, x19
   16560:	mov	x0, x22
   16564:	bl	bce0 <__gmpn_rshift@plt>
   16568:	sub	x24, x24, #0x8
   1656c:	ldr	x0, [x22, x24]
   16570:	orr	x0, x0, #0x8000000000000000
   16574:	str	x0, [x22, x24]
   16578:	ldr	x0, [x29, #264]
   1657c:	add	x0, x0, #0x1
   16580:	str	x0, [x29, #264]
   16584:	b	164f0 <mpfr_get_str@@Base+0x950>
   16588:	bl	c410 <mpfr_tmp_free@plt>
   1658c:	b	1629c <mpfr_get_str@@Base+0x6fc>
   16590:	mov	x0, #0xfffffffffffffeff    	// #-257
   16594:	movk	x0, #0x7fff, lsl #48
   16598:	sub	x0, x0, x28
   1659c:	ldr	x1, [x29, #152]
   165a0:	cmp	x1, x0
   165a4:	b.gt	166fc <mpfr_get_str@@Base+0xb5c>
   165a8:	ldr	x0, [x29, #152]
   165ac:	add	x28, x28, x0
   165b0:	add	x0, x28, x28, lsr #63
   165b4:	asr	x0, x0, #1
   165b8:	str	x0, [x29, #152]
   165bc:	str	xzr, [x29, #256]
   165c0:	add	x19, x28, #0x3e
   165c4:	subs	x1, x28, #0x1
   165c8:	csel	x19, x19, x1, mi  // mi = first
   165cc:	asr	x19, x19, #6
   165d0:	add	x20, x19, #0x1
   165d4:	lsl	x24, x20, #3
   165d8:	cmp	x24, #0x4, lsl #12
   165dc:	b.hi	161b8 <mpfr_get_str@@Base+0x618>  // b.pmore
   165e0:	add	x0, x24, #0xf
   165e4:	and	x0, x0, #0xfffffffffffffff0
   165e8:	sub	sp, sp, x0
   165ec:	add	x22, sp, #0x10
   165f0:	ldr	x0, [x26]
   165f4:	add	x21, x0, #0x3e
   165f8:	subs	x0, x0, #0x1
   165fc:	csel	x0, x21, x0, mi  // mi = first
   16600:	asr	x21, x0, #6
   16604:	add	x25, x21, #0x1
   16608:	ldr	x0, [x29, #232]
   1660c:	ldr	x1, [x29, #224]
   16610:	cmp	x0, x1
   16614:	b.eq	161cc <mpfr_get_str@@Base+0x62c>  // b.none
   16618:	ldr	x0, [x29, #192]
   1661c:	ldr	x1, [x29, #232]
   16620:	cmp	x0, x1
   16624:	b.le	16354 <mpfr_get_str@@Base+0x7b4>
   16628:	mov	x4, x20
   1662c:	ldr	x3, [x29, #216]
   16630:	ldr	w2, [x29, #172]
   16634:	ldr	x1, [x29, #136]
   16638:	mov	x0, x22
   1663c:	bl	cbe0 <mpfr_mpn_exp@plt>
   16640:	mov	x23, x0
   16644:	sub	x0, x21, x19
   16648:	ldr	x1, [x29, #208]
   1664c:	add	x0, x1, x0, lsl #3
   16650:	cmp	x20, x25
   16654:	csel	x0, x0, x1, ls  // ls = plast
   16658:	str	x0, [x29, #160]
   1665c:	csel	x27, x20, x25, ls  // ls = plast
   16660:	b.cc	162e0 <mpfr_get_str@@Base+0x740>  // b.lo, b.ul, b.last
   16664:	cmn	x23, #0x1
   16668:	cset	w25, eq  // eq = none
   1666c:	cmp	x23, #0x0
   16670:	csinc	x23, x23, xzr, gt
   16674:	add	x23, x23, #0x1
   16678:	add	x19, x20, x27
   1667c:	lsl	x19, x19, #3
   16680:	cmp	x19, #0x4, lsl #12
   16684:	b.hi	16308 <mpfr_get_str@@Base+0x768>  // b.pmore
   16688:	add	x0, x19, #0xf
   1668c:	and	x0, x0, #0xfffffffffffffff0
   16690:	sub	sp, sp, x0
   16694:	add	x21, sp, #0x10
   16698:	mov	x4, x27
   1669c:	ldr	x3, [x29, #160]
   166a0:	mov	x2, x20
   166a4:	mov	x1, x22
   166a8:	mov	x0, x21
   166ac:	bl	c7a0 <__gmpn_mul@plt>
   166b0:	ldr	x1, [x26, #16]
   166b4:	ldr	x0, [x29, #264]
   166b8:	add	x0, x0, x1
   166bc:	str	x0, [x29, #264]
   166c0:	mov	x1, #0x0                   	// #0
   166c4:	mov	x0, x21
   166c8:	bl	caa0 <__gmpn_scan1@plt>
   166cc:	cmp	x0, x27, lsl #6
   166d0:	csel	w25, w25, wzr, cs  // cs = hs, nlast
   166d4:	add	x19, x21, x19
   166d8:	ldur	x0, [x19, #-8]
   166dc:	tbz	x0, #63, 1631c <mpfr_get_str@@Base+0x77c>
   166e0:	add	x1, x21, x27, lsl #3
   166e4:	cmp	x1, x22
   166e8:	b.eq	16260 <mpfr_get_str@@Base+0x6c0>  // b.none
   166ec:	mov	x2, x24
   166f0:	mov	x0, x22
   166f4:	bl	ba10 <memcpy@plt>
   166f8:	b	16260 <mpfr_get_str@@Base+0x6c0>
   166fc:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   16700:	add	x2, x2, #0xd68
   16704:	mov	w1, #0x9f9                 	// #2553
   16708:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   1670c:	add	x0, x0, #0xd08
   16710:	bl	cb40 <mpfr_assert_fail@plt>
   16714:	ldr	x0, [x29, #232]
   16718:	add	x0, x0, #0x1
   1671c:	str	x0, [x29, #232]
   16720:	ldr	x0, [x29, #216]
   16724:	add	x0, x0, #0x1
   16728:	str	x0, [x29, #216]
   1672c:	b	165bc <mpfr_get_str@@Base+0xa1c>
   16730:	ldr	w1, [x29, #116]
   16734:	orr	w0, w1, #0x8
   16738:	cmp	w19, #0x0
   1673c:	csel	w2, w0, w1, ne  // ne = any
   16740:	ldr	x1, [x29, #200]
   16744:	ldr	x0, [x1]
   16748:	ldr	x3, [x29, #232]
   1674c:	add	x0, x0, x3
   16750:	str	x0, [x1]
   16754:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16758:	ldr	x1, [x0, #2576]
   1675c:	add	x0, x0, #0xa10
   16760:	blr	x1
   16764:	mrs	x1, tpidr_el0
   16768:	str	w2, [x1, x0]
   1676c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16770:	ldr	x2, [x0, #2512]
   16774:	add	x0, x0, #0x9d0
   16778:	blr	x2
   1677c:	ldr	x2, [x29, #104]
   16780:	str	x2, [x1, x0]
   16784:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16788:	ldr	x2, [x0, #2544]
   1678c:	add	x0, x0, #0x9f0
   16790:	blr	x2
   16794:	ldr	x2, [x29, #96]
   16798:	str	x2, [x1, x0]
   1679c:	ldr	x0, [x29, #128]
   167a0:	mov	sp, x29
   167a4:	ldp	x19, x20, [sp, #16]
   167a8:	ldp	x21, x22, [sp, #32]
   167ac:	ldp	x23, x24, [sp, #48]
   167b0:	ldp	x25, x26, [sp, #64]
   167b4:	ldp	x27, x28, [sp, #80]
   167b8:	ldp	x29, x30, [sp], #272
   167bc:	ret
   167c0:	mov	x0, #0x0                   	// #0
   167c4:	b	167a0 <mpfr_get_str@@Base+0xc00>
   167c8:	mov	x0, #0x0                   	// #0
   167cc:	b	167a0 <mpfr_get_str@@Base+0xc00>
   167d0:	mov	x6, x20
   167d4:	mov	x5, x22
   167d8:	mov	x4, x21
   167dc:	ldr	x3, [x29, #160]
   167e0:	mov	x2, #0x0                   	// #0
   167e4:	ldr	x1, [x29, #144]
   167e8:	mov	x0, x19
   167ec:	bl	ba60 <__gmpn_tdiv_qr@plt>
   167f0:	ldr	x0, [x26, #16]
   167f4:	ldr	x1, [x29, #264]
   167f8:	sub	x0, x0, x1
   167fc:	sub	x0, x0, x20, lsl #7
   16800:	str	x0, [x29, #264]
   16804:	mov	w25, #0x0                   	// #0
   16808:	b	164cc <mpfr_get_str@@Base+0x92c>

000000000001680c <mpfr_free_str@@Base>:
   1680c:	stp	x29, x30, [sp, #-32]!
   16810:	mov	x29, sp
   16814:	str	x19, [sp, #16]
   16818:	mov	x19, x0
   1681c:	bl	bab0 <strlen@plt>
   16820:	add	x1, x0, #0x1
   16824:	mov	x0, x19
   16828:	bl	cc20 <mpfr_free_func@plt>
   1682c:	ldr	x19, [sp, #16]
   16830:	ldp	x29, x30, [sp], #32
   16834:	ret

0000000000016838 <mpfr_init@@Base>:
   16838:	stp	x29, x30, [sp, #-16]!
   1683c:	mov	x29, sp
   16840:	mov	x2, x0
   16844:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   16848:	ldr	x1, [x0, #2528]
   1684c:	add	x0, x0, #0x9e0
   16850:	blr	x1
   16854:	mrs	x1, tpidr_el0
   16858:	ldr	x1, [x1, x0]
   1685c:	mov	x0, x2
   16860:	bl	ca80 <mpfr_init2@plt>
   16864:	ldp	x29, x30, [sp], #16
   16868:	ret

000000000001686c <__gmpfr_inp_str@@Base>:
   1686c:	stp	x29, x30, [sp, #-112]!
   16870:	mov	x29, sp
   16874:	stp	x19, x20, [sp, #16]
   16878:	stp	x21, x22, [sp, #32]
   1687c:	stp	x23, x24, [sp, #48]
   16880:	stp	x25, x26, [sp, #64]
   16884:	stp	x27, x28, [sp, #80]
   16888:	mov	x27, x0
   1688c:	mov	x25, x1
   16890:	mov	w28, w2
   16894:	str	w3, [sp, #108]
   16898:	mov	x0, #0x64                  	// #100
   1689c:	bl	ccf0 <mpfr_allocate_func@plt>
   168a0:	mov	x22, x0
   168a4:	mov	x21, #0x0                   	// #0
   168a8:	mov	x0, x25
   168ac:	bl	c2a0 <getc@plt>
   168b0:	mov	w19, w0
   168b4:	mov	x26, x21
   168b8:	add	x21, x21, #0x1
   168bc:	bl	c630 <__ctype_b_loc@plt>
   168c0:	mov	x20, x0
   168c4:	ldr	x0, [x0]
   168c8:	ldrh	w0, [x0, w19, sxtw #1]
   168cc:	tbnz	w0, #13, 168a8 <__gmpfr_inp_str@@Base+0x3c>
   168d0:	mov	x21, #0x0                   	// #0
   168d4:	mov	x24, #0x64                  	// #100
   168d8:	b	168e0 <__gmpfr_inp_str@@Base+0x74>
   168dc:	mov	x21, x23
   168e0:	cmn	w19, #0x1
   168e4:	b.eq	16934 <__gmpfr_inp_str@@Base+0xc8>  // b.none
   168e8:	ldr	x0, [x20]
   168ec:	ldrh	w0, [x0, w19, sxtw #1]
   168f0:	tbnz	w0, #13, 16934 <__gmpfr_inp_str@@Base+0xc8>
   168f4:	add	x23, x21, #0x1
   168f8:	strb	w19, [x22, x21]
   168fc:	mov	x0, x25
   16900:	bl	c2a0 <getc@plt>
   16904:	mov	w19, w0
   16908:	cmp	x24, x23
   1690c:	b.hi	168dc <__gmpfr_inp_str@@Base+0x70>  // b.pmore
   16910:	add	x21, x24, x24, lsl #1
   16914:	lsr	x21, x21, #1
   16918:	mov	x2, x21
   1691c:	mov	x1, x24
   16920:	mov	x0, x22
   16924:	bl	c1c0 <mpfr_reallocate_func@plt>
   16928:	mov	x22, x0
   1692c:	mov	x24, x21
   16930:	b	168dc <__gmpfr_inp_str@@Base+0x70>
   16934:	mov	x1, x25
   16938:	mov	w0, w19
   1693c:	bl	c730 <ungetc@plt>
   16940:	strb	wzr, [x22, x21]
   16944:	ldr	w3, [sp, #108]
   16948:	mov	w2, w28
   1694c:	mov	x1, x22
   16950:	mov	x0, x27
   16954:	bl	c6c0 <mpfr_set_str@plt>
   16958:	mov	w19, w0
   1695c:	mov	x1, x24
   16960:	mov	x0, x22
   16964:	bl	cc20 <mpfr_free_func@plt>
   16968:	add	x21, x26, x21
   1696c:	cmn	w19, #0x1
   16970:	csel	x0, x21, xzr, ne  // ne = any
   16974:	ldp	x19, x20, [sp, #16]
   16978:	ldp	x21, x22, [sp, #32]
   1697c:	ldp	x23, x24, [sp, #48]
   16980:	ldp	x25, x26, [sp, #64]
   16984:	ldp	x27, x28, [sp, #80]
   16988:	ldp	x29, x30, [sp], #112
   1698c:	ret

0000000000016990 <mpfr_integer_p@@Base>:
   16990:	ldr	x2, [x0, #16]
   16994:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   16998:	cmp	x2, x1
   1699c:	b.le	16a18 <mpfr_integer_p@@Base+0x88>
   169a0:	cmp	x2, #0x0
   169a4:	b.le	16a54 <mpfr_integer_p@@Base+0xc4>
   169a8:	ldr	x3, [x0]
   169ac:	cmp	x2, x3
   169b0:	b.cs	16a5c <mpfr_integer_p@@Base+0xcc>  // b.hs, b.nlast
   169b4:	add	x1, x3, #0x3e
   169b8:	subs	x3, x3, #0x1
   169bc:	csel	x1, x1, x3, mi  // mi = first
   169c0:	add	x3, x2, #0x3f
   169c4:	cmp	x2, #0x0
   169c8:	csel	x3, x3, x2, lt  // lt = tstop
   169cc:	neg	x3, x3, asr #6
   169d0:	ldr	x4, [x0, #24]
   169d4:	adds	x1, x3, x1, asr #6
   169d8:	b.mi	16a28 <mpfr_integer_p@@Base+0x98>  // b.first
   169dc:	negs	x0, x2
   169e0:	and	x2, x2, #0x3f
   169e4:	and	x0, x0, #0x3f
   169e8:	csneg	x2, x2, x0, mi  // mi = first
   169ec:	ldr	x0, [x4, x1, lsl #3]
   169f0:	lsl	x2, x0, x2
   169f4:	mov	w0, #0x0                   	// #0
   169f8:	cbnz	x2, 16a48 <mpfr_integer_p@@Base+0xb8>
   169fc:	sub	x1, x1, #0x1
   16a00:	cmn	x1, #0x1
   16a04:	b.eq	16a4c <mpfr_integer_p@@Base+0xbc>  // b.none
   16a08:	ldr	x0, [x4, x1, lsl #3]
   16a0c:	cbz	x0, 169fc <mpfr_integer_p@@Base+0x6c>
   16a10:	mov	w0, #0x0                   	// #0
   16a14:	ret
   16a18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   16a1c:	cmp	x2, x0
   16a20:	cset	w0, eq  // eq = none
   16a24:	ret
   16a28:	stp	x29, x30, [sp, #-16]!
   16a2c:	mov	x29, sp
   16a30:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   16a34:	add	x2, x2, #0x3d0
   16a38:	mov	w1, #0x34                  	// #52
   16a3c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   16a40:	add	x0, x0, #0x3d8
   16a44:	bl	cb40 <mpfr_assert_fail@plt>
   16a48:	ret
   16a4c:	mov	w0, #0x1                   	// #1
   16a50:	ret
   16a54:	mov	w0, #0x0                   	// #0
   16a58:	ret
   16a5c:	mov	w0, #0x1                   	// #1
   16a60:	ret

0000000000016a64 <mpfr_inf_p@@Base>:
   16a64:	ldr	x1, [x0, #16]
   16a68:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16a6c:	cmp	x1, x0
   16a70:	cset	w0, eq  // eq = none
   16a74:	ret

0000000000016a78 <mpfr_nan_p@@Base>:
   16a78:	ldr	x1, [x0, #16]
   16a7c:	mov	x0, #0x2                   	// #2
   16a80:	movk	x0, #0x8000, lsl #48
   16a84:	cmp	x1, x0
   16a88:	cset	w0, eq  // eq = none
   16a8c:	ret

0000000000016a90 <mpfr_number_p@@Base>:
   16a90:	ldr	x0, [x0, #16]
   16a94:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   16a98:	add	x0, x0, x1
   16a9c:	cmp	x0, #0x1
   16aa0:	cset	w0, hi  // hi = pmore
   16aa4:	ret
   16aa8:	stp	x29, x30, [sp, #-96]!
   16aac:	mov	x29, sp
   16ab0:	stp	x19, x20, [sp, #16]
   16ab4:	stp	x21, x22, [sp, #32]
   16ab8:	mov	x21, x0
   16abc:	mov	x22, x1
   16ac0:	mov	x20, x2
   16ac4:	mov	x19, x3
   16ac8:	add	x0, x3, #0x1
   16acc:	cmp	x0, x4
   16ad0:	b.ne	16b74 <mpfr_number_p@@Base+0xe4>  // b.any
   16ad4:	cbnz	x3, 16b10 <mpfr_number_p@@Base+0x80>
   16ad8:	mov	x1, #0x3                   	// #3
   16adc:	mov	x0, x22
   16ae0:	bl	bcb0 <__gmpz_set_ui@plt>
   16ae4:	lsl	x1, x19, #3
   16ae8:	add	x1, x1, #0x4
   16aec:	mov	x0, x20
   16af0:	bl	bcb0 <__gmpz_set_ui@plt>
   16af4:	mov	x1, x22
   16af8:	mov	x0, x21
   16afc:	bl	bfa0 <__gmpz_set@plt>
   16b00:	ldp	x19, x20, [sp, #16]
   16b04:	ldp	x21, x22, [sp, #32]
   16b08:	ldp	x29, x30, [sp], #96
   16b0c:	ret
   16b10:	mov	x1, x3
   16b14:	mov	x0, x22
   16b18:	bl	bcb0 <__gmpz_set_ui@plt>
   16b1c:	ldr	w0, [x22, #4]
   16b20:	neg	w0, w0
   16b24:	str	w0, [x22, #4]
   16b28:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   16b2c:	cmp	x19, x0
   16b30:	b.ls	16ae4 <mpfr_number_p@@Base+0x54>  // b.plast
   16b34:	mov	x1, x19
   16b38:	mov	x0, x20
   16b3c:	bl	bcb0 <__gmpz_set_ui@plt>
   16b40:	mov	x2, #0x1                   	// #1
   16b44:	mov	x1, x20
   16b48:	mov	x0, x20
   16b4c:	bl	c200 <__gmpz_mul_2exp@plt>
   16b50:	mov	x2, #0x1                   	// #1
   16b54:	mov	x1, x20
   16b58:	mov	x0, x20
   16b5c:	bl	c360 <__gmpz_add_ui@plt>
   16b60:	mov	x2, #0x2                   	// #2
   16b64:	mov	x1, x20
   16b68:	mov	x0, x20
   16b6c:	bl	c200 <__gmpz_mul_2exp@plt>
   16b70:	b	16af4 <mpfr_number_p@@Base+0x64>
   16b74:	stp	x23, x24, [sp, #48]
   16b78:	stp	x25, x26, [sp, #64]
   16b7c:	str	x27, [sp, #80]
   16b80:	mov	x23, x4
   16b84:	mov	w24, w5
   16b88:	lsr	x25, x4, #1
   16b8c:	add	x25, x25, x3, lsr #1
   16b90:	and	x0, x3, x4
   16b94:	and	x0, x0, #0x1
   16b98:	add	x25, x25, x0
   16b9c:	mov	w5, #0x1                   	// #1
   16ba0:	mov	x4, x25
   16ba4:	mov	x0, x21
   16ba8:	bl	16aa8 <mpfr_number_p@@Base+0x18>
   16bac:	add	x19, x21, #0x10
   16bb0:	add	x27, x22, #0x10
   16bb4:	add	x26, x20, #0x10
   16bb8:	mov	w5, w24
   16bbc:	mov	x4, x23
   16bc0:	mov	x3, x25
   16bc4:	mov	x2, x26
   16bc8:	mov	x1, x27
   16bcc:	mov	x0, x19
   16bd0:	bl	16aa8 <mpfr_number_p@@Base+0x18>
   16bd4:	mov	x2, x26
   16bd8:	mov	x1, x21
   16bdc:	mov	x0, x21
   16be0:	bl	bff0 <__gmpz_mul@plt>
   16be4:	mov	x2, x22
   16be8:	mov	x1, x19
   16bec:	mov	x0, x19
   16bf0:	bl	bff0 <__gmpz_mul@plt>
   16bf4:	mov	x2, x19
   16bf8:	mov	x1, x21
   16bfc:	mov	x0, x21
   16c00:	bl	c9c0 <__gmpz_add@plt>
   16c04:	cbnz	w24, 16c54 <mpfr_number_p@@Base+0x1c4>
   16c08:	mov	x2, x26
   16c0c:	mov	x1, x20
   16c10:	mov	x0, x20
   16c14:	bl	bff0 <__gmpz_mul@plt>
   16c18:	mov	x1, #0x0                   	// #0
   16c1c:	mov	x0, x21
   16c20:	bl	ba90 <__gmpz_scan1@plt>
   16c24:	mov	x19, x0
   16c28:	cbz	x0, 16d44 <mpfr_number_p@@Base+0x2b4>
   16c2c:	mov	x1, #0x0                   	// #0
   16c30:	mov	x0, x20
   16c34:	bl	ba90 <__gmpz_scan1@plt>
   16c38:	cmp	x19, x0
   16c3c:	csel	x19, x19, x0, ls  // ls = plast
   16c40:	cbnz	x19, 16c98 <mpfr_number_p@@Base+0x208>
   16c44:	ldp	x23, x24, [sp, #48]
   16c48:	ldp	x25, x26, [sp, #64]
   16c4c:	ldr	x27, [sp, #80]
   16c50:	b	16b00 <mpfr_number_p@@Base+0x70>
   16c54:	mov	x2, x27
   16c58:	mov	x1, x22
   16c5c:	mov	x0, x22
   16c60:	bl	bff0 <__gmpz_mul@plt>
   16c64:	mov	x2, x26
   16c68:	mov	x1, x20
   16c6c:	mov	x0, x20
   16c70:	bl	bff0 <__gmpz_mul@plt>
   16c74:	mov	x1, #0x0                   	// #0
   16c78:	mov	x0, x21
   16c7c:	bl	ba90 <__gmpz_scan1@plt>
   16c80:	mov	x19, x0
   16c84:	cbnz	x0, 16d08 <mpfr_number_p@@Base+0x278>
   16c88:	ldp	x23, x24, [sp, #48]
   16c8c:	ldp	x25, x26, [sp, #64]
   16c90:	ldr	x27, [sp, #80]
   16c94:	b	16b00 <mpfr_number_p@@Base+0x70>
   16c98:	mov	x2, x19
   16c9c:	mov	x1, x21
   16ca0:	mov	x0, x21
   16ca4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   16ca8:	mov	x2, x19
   16cac:	mov	x1, x20
   16cb0:	mov	x0, x20
   16cb4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   16cb8:	ldp	x23, x24, [sp, #48]
   16cbc:	ldp	x25, x26, [sp, #64]
   16cc0:	ldr	x27, [sp, #80]
   16cc4:	b	16b00 <mpfr_number_p@@Base+0x70>
   16cc8:	mov	x2, x19
   16ccc:	mov	x1, x21
   16cd0:	mov	x0, x21
   16cd4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   16cd8:	mov	x2, x19
   16cdc:	mov	x1, x20
   16ce0:	mov	x0, x20
   16ce4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   16ce8:	mov	x2, x19
   16cec:	mov	x1, x22
   16cf0:	mov	x0, x22
   16cf4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   16cf8:	ldp	x23, x24, [sp, #48]
   16cfc:	ldp	x25, x26, [sp, #64]
   16d00:	ldr	x27, [sp, #80]
   16d04:	b	16b00 <mpfr_number_p@@Base+0x70>
   16d08:	mov	x1, #0x0                   	// #0
   16d0c:	mov	x0, x20
   16d10:	bl	ba90 <__gmpz_scan1@plt>
   16d14:	cmp	x0, x19
   16d18:	csel	x19, x0, x19, ls  // ls = plast
   16d1c:	mov	x1, #0x0                   	// #0
   16d20:	mov	x0, x22
   16d24:	bl	ba90 <__gmpz_scan1@plt>
   16d28:	cmp	x0, x19
   16d2c:	csel	x19, x0, x19, ls  // ls = plast
   16d30:	cbnz	x19, 16cc8 <mpfr_number_p@@Base+0x238>
   16d34:	ldp	x23, x24, [sp, #48]
   16d38:	ldp	x25, x26, [sp, #64]
   16d3c:	ldr	x27, [sp, #80]
   16d40:	b	16b00 <mpfr_number_p@@Base+0x70>
   16d44:	ldp	x23, x24, [sp, #48]
   16d48:	ldp	x25, x26, [sp, #64]
   16d4c:	ldr	x27, [sp, #80]
   16d50:	b	16b00 <mpfr_number_p@@Base+0x70>

0000000000016d54 <mpfr_const_log2_internal@@Base>:
   16d54:	stp	x29, x30, [sp, #-352]!
   16d58:	mov	x29, sp
   16d5c:	stp	x19, x20, [sp, #16]
   16d60:	stp	x21, x22, [sp, #32]
   16d64:	stp	x23, x24, [sp, #48]
   16d68:	stp	x25, x26, [sp, #64]
   16d6c:	stp	x27, x28, [sp, #80]
   16d70:	str	x0, [x29, #104]
   16d74:	str	w1, [x29, #140]
   16d78:	ldr	x28, [x0]
   16d7c:	add	x27, x28, #0x9
   16d80:	cmp	x28, #0x42c
   16d84:	b.ls	16d98 <mpfr_const_log2_internal@@Base+0x44>  // b.plast
   16d88:	add	x27, x28, #0xa
   16d8c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   16d90:	cmp	x27, x0
   16d94:	b.ge	16f58 <mpfr_const_log2_internal@@Base+0x204>  // b.tcont
   16d98:	add	x19, x27, #0x3e
   16d9c:	subs	x0, x27, #0x1
   16da0:	csel	x19, x19, x0, mi  // mi = first
   16da4:	asr	x19, x19, #6
   16da8:	add	x19, x19, #0x1
   16dac:	lsl	x0, x19, #1
   16db0:	cmp	x0, #0x10
   16db4:	b.gt	16f5c <mpfr_const_log2_internal@@Base+0x208>
   16db8:	str	xzr, [x29, #144]
   16dbc:	add	x0, x29, #0xa0
   16dc0:	str	x0, [x29, #152]
   16dc4:	str	x27, [x29, #320]
   16dc8:	ldr	x1, [x29, #152]
   16dcc:	str	x1, [x29, #344]
   16dd0:	mov	w0, #0x1                   	// #1
   16dd4:	str	w0, [x29, #328]
   16dd8:	str	x27, [x29, #288]
   16ddc:	add	x19, x1, x19, lsl #3
   16de0:	str	x19, [x29, #312]
   16de4:	str	w0, [x29, #296]
   16de8:	mov	x0, #0x40                  	// #64
   16dec:	str	x0, [x29, #96]
   16df0:	add	x0, x29, #0x140
   16df4:	str	x0, [x29, #120]
   16df8:	add	x0, x29, #0x120
   16dfc:	str	x0, [x29, #112]
   16e00:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   16e04:	movk	x0, #0x5556
   16e08:	smulh	x0, x27, x0
   16e0c:	sub	x0, x0, x27, asr #63
   16e10:	add	x1, x0, #0x1
   16e14:	str	x1, [x29, #128]
   16e18:	clz	x1, x0
   16e1c:	mov	w0, #0x41                  	// #65
   16e20:	sub	w0, w0, w1
   16e24:	sxtw	x20, w0
   16e28:	add	x0, x20, w0, sxtw #1
   16e2c:	mov	x1, sp
   16e30:	sub	x0, x1, x0, lsl #4
   16e34:	mov	sp, x0
   16e38:	mov	x21, sp
   16e3c:	lsl	x20, x20, #4
   16e40:	add	x23, x21, x20
   16e44:	add	x22, x23, x20
   16e48:	mov	x19, #0x0                   	// #0
   16e4c:	mov	x25, x21
   16e50:	mov	x26, x23
   16e54:	mov	x24, x22
   16e58:	add	x0, x21, x19
   16e5c:	bl	bf90 <mpfr_mpz_init@plt>
   16e60:	add	x0, x23, x19
   16e64:	bl	bf90 <mpfr_mpz_init@plt>
   16e68:	add	x0, x22, x19
   16e6c:	bl	bf90 <mpfr_mpz_init@plt>
   16e70:	add	x19, x19, #0x10
   16e74:	cmp	x20, x19
   16e78:	b.ne	16e58 <mpfr_const_log2_internal@@Base+0x104>  // b.any
   16e7c:	mov	w5, #0x0                   	// #0
   16e80:	ldr	x4, [x29, #128]
   16e84:	mov	x3, #0x0                   	// #0
   16e88:	mov	x2, x22
   16e8c:	mov	x1, x23
   16e90:	mov	x0, x21
   16e94:	bl	16aa8 <mpfr_number_p@@Base+0x18>
   16e98:	mov	w2, #0x0                   	// #0
   16e9c:	mov	x1, x21
   16ea0:	ldr	x19, [x29, #120]
   16ea4:	mov	x0, x19
   16ea8:	bl	c240 <mpfr_set_z@plt>
   16eac:	mov	w2, #0x0                   	// #0
   16eb0:	mov	x1, x22
   16eb4:	ldr	x21, [x29, #112]
   16eb8:	mov	x0, x21
   16ebc:	bl	c240 <mpfr_set_z@plt>
   16ec0:	mov	w3, #0x0                   	// #0
   16ec4:	mov	x2, x21
   16ec8:	mov	x1, x19
   16ecc:	mov	x0, x19
   16ed0:	bl	c620 <mpfr_div@plt>
   16ed4:	mov	x19, #0x0                   	// #0
   16ed8:	add	x0, x25, x19
   16edc:	bl	c170 <mpfr_mpz_clear@plt>
   16ee0:	add	x0, x26, x19
   16ee4:	bl	c170 <mpfr_mpz_clear@plt>
   16ee8:	add	x0, x24, x19
   16eec:	bl	c170 <mpfr_mpz_clear@plt>
   16ef0:	add	x19, x19, #0x10
   16ef4:	cmp	x20, x19
   16ef8:	b.ne	16ed8 <mpfr_const_log2_internal@@Base+0x184>  // b.any
   16efc:	mov	x0, #0x93df                	// #37855
   16f00:	movk	x0, #0x4, lsl #16
   16f04:	cmp	x28, x0
   16f08:	b.hi	16f70 <mpfr_const_log2_internal@@Base+0x21c>  // b.pmore
   16f0c:	ldr	w3, [x29, #328]
   16f10:	ldr	w2, [x29, #140]
   16f14:	add	x1, x29, #0x140
   16f18:	ldr	x0, [x29, #104]
   16f1c:	bl	c6a0 <mpfr_set4@plt>
   16f20:	mov	w19, w0
   16f24:	ldr	x1, [x29, #144]
   16f28:	cbz	x1, 16f34 <mpfr_const_log2_internal@@Base+0x1e0>
   16f2c:	ldr	x0, [x29, #152]
   16f30:	bl	cc20 <mpfr_free_func@plt>
   16f34:	mov	w0, w19
   16f38:	mov	sp, x29
   16f3c:	ldp	x19, x20, [sp, #16]
   16f40:	ldp	x21, x22, [sp, #32]
   16f44:	ldp	x23, x24, [sp, #48]
   16f48:	ldp	x25, x26, [sp, #64]
   16f4c:	ldp	x27, x28, [sp, #80]
   16f50:	ldp	x29, x30, [sp], #352
   16f54:	ret
   16f58:	bl	c8e0 <mpfr_abort_prec_max@plt>
   16f5c:	lsl	x0, x19, #4
   16f60:	str	x0, [x29, #144]
   16f64:	bl	ccf0 <mpfr_allocate_func@plt>
   16f68:	str	x0, [x29, #152]
   16f6c:	b	16dc4 <mpfr_const_log2_internal@@Base+0x70>
   16f70:	ldr	x1, [x29, #336]
   16f74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16f78:	cmp	x1, x0
   16f7c:	b.le	16fb4 <mpfr_const_log2_internal@@Base+0x260>
   16f80:	ldr	w0, [x29, #140]
   16f84:	cmp	w0, #0x0
   16f88:	cinc	x3, x28, eq  // eq = none
   16f8c:	ldr	x0, [x29, #320]
   16f90:	add	x1, x0, #0x3e
   16f94:	subs	x0, x0, #0x1
   16f98:	csel	x1, x1, x0, mi  // mi = first
   16f9c:	asr	x1, x1, #6
   16fa0:	sub	x2, x27, #0x2
   16fa4:	add	x1, x1, #0x1
   16fa8:	ldr	x0, [x29, #344]
   16fac:	bl	c370 <mpfr_round_p@plt>
   16fb0:	cbnz	w0, 16f0c <mpfr_const_log2_internal@@Base+0x1b8>
   16fb4:	mov	x0, #0xfffffffffffffeff    	// #-257
   16fb8:	movk	x0, #0x7fff, lsl #48
   16fbc:	sub	x0, x0, x27
   16fc0:	ldr	x1, [x29, #96]
   16fc4:	cmp	x0, x1
   16fc8:	b.lt	17040 <mpfr_const_log2_internal@@Base+0x2ec>  // b.tstop
   16fcc:	ldr	x0, [x29, #96]
   16fd0:	add	x27, x27, x0
   16fd4:	add	x0, x27, x27, lsr #63
   16fd8:	asr	x0, x0, #1
   16fdc:	str	x0, [x29, #96]
   16fe0:	ldr	x1, [x29, #144]
   16fe4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   16fe8:	cmp	x27, x0
   16fec:	b.ge	17058 <mpfr_const_log2_internal@@Base+0x304>  // b.tcont
   16ff0:	add	x19, x27, #0x3e
   16ff4:	subs	x0, x27, #0x1
   16ff8:	csel	x19, x19, x0, mi  // mi = first
   16ffc:	asr	x19, x19, #6
   17000:	add	x19, x19, #0x1
   17004:	lsl	x0, x19, #4
   17008:	str	x0, [x29, #144]
   1700c:	cbnz	x1, 1705c <mpfr_const_log2_internal@@Base+0x308>
   17010:	bl	ccf0 <mpfr_allocate_func@plt>
   17014:	str	x0, [x29, #152]
   17018:	str	x27, [x29, #320]
   1701c:	ldr	x1, [x29, #152]
   17020:	str	x1, [x29, #344]
   17024:	mov	w0, #0x1                   	// #1
   17028:	str	w0, [x29, #328]
   1702c:	str	x27, [x29, #288]
   17030:	add	x19, x1, x19, lsl #3
   17034:	str	x19, [x29, #312]
   17038:	str	w0, [x29, #296]
   1703c:	b	16e00 <mpfr_const_log2_internal@@Base+0xac>
   17040:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17044:	add	x2, x2, #0x3e8
   17048:	mov	w1, #0xb1                  	// #177
   1704c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17050:	add	x0, x0, #0x430
   17054:	bl	cb40 <mpfr_assert_fail@plt>
   17058:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1705c:	mov	x2, x0
   17060:	ldr	x0, [x29, #152]
   17064:	bl	c1c0 <mpfr_reallocate_func@plt>
   17068:	str	x0, [x29, #152]
   1706c:	b	17018 <mpfr_const_log2_internal@@Base+0x2c4>

0000000000017070 <mpfr_const_log2@@Base>:
   17070:	stp	x29, x30, [sp, #-16]!
   17074:	mov	x29, sp
   17078:	mov	x3, x0
   1707c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17080:	ldr	x2, [x0, #2560]
   17084:	add	x0, x0, #0xa00
   17088:	blr	x2
   1708c:	mov	w2, w1
   17090:	mrs	x1, tpidr_el0
   17094:	add	x1, x1, x0
   17098:	mov	x0, x3
   1709c:	bl	c380 <mpfr_cache@plt>
   170a0:	ldp	x29, x30, [sp], #16
   170a4:	ret

00000000000170a8 <mpfr_log@@Base>:
   170a8:	stp	x29, x30, [sp, #-352]!
   170ac:	mov	x29, sp
   170b0:	stp	x19, x20, [sp, #16]
   170b4:	stp	x23, x24, [sp, #48]
   170b8:	stp	x27, x28, [sp, #80]
   170bc:	mov	x24, x0
   170c0:	mov	x23, x1
   170c4:	str	w2, [sp, #128]
   170c8:	ldr	x27, [x1, #16]
   170cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   170d0:	cmp	x27, x0
   170d4:	b.le	173e4 <mpfr_log@@Base+0x33c>
   170d8:	ldr	w0, [x1, #8]
   170dc:	tbnz	w0, #31, 174c4 <mpfr_log@@Base+0x41c>
   170e0:	cmp	x27, #0x1
   170e4:	b.eq	174fc <mpfr_log@@Base+0x454>  // b.none
   170e8:	stp	x21, x22, [sp, #32]
   170ec:	stp	x25, x26, [sp, #64]
   170f0:	ldr	x26, [x24]
   170f4:	cmp	x26, #0x1
   170f8:	b.eq	176c0 <mpfr_log@@Base+0x618>  // b.none
   170fc:	b.le	17528 <mpfr_log@@Base+0x480>
   17100:	sub	x1, x26, #0x1
   17104:	clz	x0, x1
   17108:	mov	w1, #0x40                  	// #64
   1710c:	sub	w1, w1, w0
   17110:	lsl	w1, w1, #1
   17114:	add	x1, x26, w1, sxtw
   17118:	add	x22, x1, #0xa
   1711c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17120:	ldr	x2, [x0, #2576]
   17124:	add	x0, x0, #0xa10
   17128:	blr	x2
   1712c:	mrs	x2, tpidr_el0
   17130:	ldr	w0, [x2, x0]
   17134:	str	w0, [sp, #132]
   17138:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1713c:	ldr	x3, [x0, #2512]
   17140:	add	x0, x0, #0x9d0
   17144:	blr	x3
   17148:	add	x3, x2, x0
   1714c:	ldr	x28, [x2, x0]
   17150:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17154:	ldr	x4, [x0, #2544]
   17158:	add	x0, x0, #0x9f0
   1715c:	blr	x4
   17160:	ldr	x4, [x2, x0]
   17164:	str	x4, [sp, #136]
   17168:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   1716c:	str	x4, [x3]
   17170:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   17174:	str	x3, [x2, x0]
   17178:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1717c:	cmp	x22, x0
   17180:	b.ge	17540 <mpfr_log@@Base+0x498>  // b.tcont
   17184:	add	x19, x1, #0x48
   17188:	adds	x1, x1, #0x9
   1718c:	csel	x1, x19, x1, mi  // mi = first
   17190:	asr	x19, x1, #6
   17194:	add	x19, x19, #0x1
   17198:	lsl	x0, x19, #1
   1719c:	cmp	x0, #0x10
   171a0:	b.gt	17544 <mpfr_log@@Base+0x49c>
   171a4:	str	xzr, [sp, #144]
   171a8:	add	x0, sp, #0xa0
   171ac:	str	x0, [sp, #152]
   171b0:	str	x22, [sp, #320]
   171b4:	ldr	x1, [sp, #152]
   171b8:	str	x1, [sp, #344]
   171bc:	mov	w0, #0x1                   	// #1
   171c0:	str	w0, [sp, #328]
   171c4:	str	x22, [sp, #288]
   171c8:	add	x19, x1, x19, lsl #3
   171cc:	str	x19, [sp, #312]
   171d0:	str	w0, [sp, #296]
   171d4:	mov	x0, #0x40                  	// #64
   171d8:	str	x0, [sp, #120]
   171dc:	add	x21, sp, #0x120
   171e0:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   171e4:	ldr	x0, [x0, #3976]
   171e8:	str	x0, [sp, #104]
   171ec:	add	x20, sp, #0x140
   171f0:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   171f4:	ldr	x0, [x0, #3928]
   171f8:	str	x0, [sp, #112]
   171fc:	add	x19, x22, #0x3
   17200:	add	x19, x19, x19, lsr #63
   17204:	asr	x19, x19, #1
   17208:	sub	x19, x19, x27
   1720c:	mov	w3, #0x0                   	// #0
   17210:	mov	x2, x19
   17214:	mov	x1, x23
   17218:	mov	x0, x21
   1721c:	bl	bb90 <mpfr_mul_2si@plt>
   17220:	mov	w3, #0x0                   	// #0
   17224:	mov	x2, x21
   17228:	ldr	x1, [sp, #104]
   1722c:	mov	x0, x20
   17230:	bl	c620 <mpfr_div@plt>
   17234:	mov	w3, #0x0                   	// #0
   17238:	mov	x2, x20
   1723c:	ldr	x1, [sp, #112]
   17240:	mov	x0, x21
   17244:	bl	ba00 <mpfr_agm@plt>
   17248:	mov	w3, #0x0                   	// #0
   1724c:	mov	x2, #0x1                   	// #1
   17250:	mov	x1, x21
   17254:	mov	x0, x21
   17258:	bl	c2c0 <mpfr_mul_2ui@plt>
   1725c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17260:	ldr	x1, [x0, #2624]
   17264:	add	x0, x0, #0xa40
   17268:	blr	x1
   1726c:	mrs	x25, tpidr_el0
   17270:	mov	w2, #0x0                   	// #0
   17274:	add	x1, x25, x0
   17278:	mov	x0, x20
   1727c:	bl	c380 <mpfr_cache@plt>
   17280:	mov	w3, #0x0                   	// #0
   17284:	mov	x2, x21
   17288:	mov	x1, x20
   1728c:	mov	x0, x21
   17290:	bl	c620 <mpfr_div@plt>
   17294:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17298:	ldr	x1, [x0, #2560]
   1729c:	add	x0, x0, #0xa00
   172a0:	blr	x1
   172a4:	mov	w2, #0x0                   	// #0
   172a8:	add	x1, x25, x0
   172ac:	mov	x0, x20
   172b0:	bl	c380 <mpfr_cache@plt>
   172b4:	mov	w3, #0x0                   	// #0
   172b8:	mov	x2, x19
   172bc:	mov	x1, x20
   172c0:	mov	x0, x20
   172c4:	bl	c960 <mpfr_mul_si@plt>
   172c8:	mov	w3, #0x0                   	// #0
   172cc:	mov	x2, x20
   172d0:	mov	x1, x21
   172d4:	mov	x0, x20
   172d8:	bl	bb70 <mpfr_sub@plt>
   172dc:	ldr	x0, [sp, #336]
   172e0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   172e4:	cmp	x0, x1
   172e8:	b.le	175a4 <mpfr_log@@Base+0x4fc>
   172ec:	ldr	x19, [sp, #304]
   172f0:	cmp	x19, x1
   172f4:	b.le	175a4 <mpfr_log@@Base+0x4fc>
   172f8:	subs	x19, x19, x0
   172fc:	csel	x19, x19, xzr, pl  // pl = nfrst
   17300:	ldr	w0, [sp, #128]
   17304:	cmp	w0, #0x0
   17308:	cinc	x3, x26, eq  // eq = none
   1730c:	sub	x2, x22, x19
   17310:	ldr	x0, [sp, #320]
   17314:	add	x1, x0, #0x3e
   17318:	subs	x0, x0, #0x1
   1731c:	csel	x1, x1, x0, mi  // mi = first
   17320:	asr	x1, x1, #6
   17324:	sub	x2, x2, #0x4
   17328:	add	x1, x1, #0x1
   1732c:	ldr	x0, [sp, #344]
   17330:	bl	c370 <mpfr_round_p@plt>
   17334:	cbz	w0, 17558 <mpfr_log@@Base+0x4b0>
   17338:	ldr	w3, [sp, #328]
   1733c:	ldr	w2, [sp, #128]
   17340:	add	x1, sp, #0x140
   17344:	mov	x0, x24
   17348:	bl	c6a0 <mpfr_set4@plt>
   1734c:	mov	w19, w0
   17350:	ldr	x1, [sp, #144]
   17354:	cbz	x1, 17360 <mpfr_log@@Base+0x2b8>
   17358:	ldr	x0, [sp, #152]
   1735c:	bl	cc20 <mpfr_free_func@plt>
   17360:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17364:	ldr	x1, [x0, #2576]
   17368:	add	x0, x0, #0xa10
   1736c:	blr	x1
   17370:	mrs	x1, tpidr_el0
   17374:	ldr	w3, [sp, #132]
   17378:	str	w3, [x1, x0]
   1737c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17380:	ldr	x2, [x0, #2512]
   17384:	add	x0, x0, #0x9d0
   17388:	blr	x2
   1738c:	str	x28, [x1, x0]
   17390:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17394:	ldr	x2, [x0, #2544]
   17398:	add	x0, x0, #0x9f0
   1739c:	blr	x2
   173a0:	ldr	x2, [sp, #136]
   173a4:	str	x2, [x1, x0]
   173a8:	ldr	x0, [x24, #16]
   173ac:	cmp	x0, x2
   173b0:	ccmp	x28, x0, #0x0, le
   173b4:	b.gt	176a0 <mpfr_log@@Base+0x5f8>
   173b8:	cbz	w19, 17728 <mpfr_log@@Base+0x680>
   173bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   173c0:	ldr	x1, [x0, #2576]
   173c4:	add	x0, x0, #0xa10
   173c8:	blr	x1
   173cc:	orr	w2, w3, #0x8
   173d0:	mrs	x1, tpidr_el0
   173d4:	str	w2, [x1, x0]
   173d8:	ldp	x21, x22, [sp, #32]
   173dc:	ldp	x25, x26, [sp, #64]
   173e0:	b	17730 <mpfr_log@@Base+0x688>
   173e4:	mov	x0, #0x2                   	// #2
   173e8:	movk	x0, #0x8000, lsl #48
   173ec:	cmp	x27, x0
   173f0:	b.eq	17420 <mpfr_log@@Base+0x378>  // b.none
   173f4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   173f8:	cmp	x27, x0
   173fc:	b.ne	17488 <mpfr_log@@Base+0x3e0>  // b.any
   17400:	ldr	w0, [x1, #8]
   17404:	tbnz	w0, #31, 17450 <mpfr_log@@Base+0x3a8>
   17408:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1740c:	str	x0, [x24, #16]
   17410:	mov	w0, #0x1                   	// #1
   17414:	str	w0, [x24, #8]
   17418:	mov	w19, #0x0                   	// #0
   1741c:	b	17730 <mpfr_log@@Base+0x688>
   17420:	str	x0, [x24, #16]
   17424:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17428:	ldr	x1, [x0, #2576]
   1742c:	add	x0, x0, #0xa10
   17430:	blr	x1
   17434:	mrs	x1, tpidr_el0
   17438:	add	x0, x1, x0
   1743c:	ldr	w1, [x0]
   17440:	orr	w1, w1, #0x4
   17444:	str	w1, [x0]
   17448:	mov	w19, #0x0                   	// #0
   1744c:	b	17730 <mpfr_log@@Base+0x688>
   17450:	mov	x0, #0x2                   	// #2
   17454:	movk	x0, #0x8000, lsl #48
   17458:	str	x0, [x24, #16]
   1745c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17460:	ldr	x1, [x0, #2576]
   17464:	add	x0, x0, #0xa10
   17468:	blr	x1
   1746c:	mrs	x1, tpidr_el0
   17470:	add	x0, x1, x0
   17474:	ldr	w1, [x0]
   17478:	orr	w1, w1, #0x4
   1747c:	str	w1, [x0]
   17480:	mov	w19, #0x0                   	// #0
   17484:	b	17730 <mpfr_log@@Base+0x688>
   17488:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1748c:	str	x0, [x24, #16]
   17490:	mov	w0, #0xffffffff            	// #-1
   17494:	str	w0, [x24, #8]
   17498:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1749c:	ldr	x1, [x0, #2576]
   174a0:	add	x0, x0, #0xa10
   174a4:	blr	x1
   174a8:	mrs	x1, tpidr_el0
   174ac:	add	x0, x1, x0
   174b0:	ldr	w1, [x0]
   174b4:	orr	w1, w1, #0x20
   174b8:	str	w1, [x0]
   174bc:	mov	w19, #0x0                   	// #0
   174c0:	b	17730 <mpfr_log@@Base+0x688>
   174c4:	mov	x0, #0x2                   	// #2
   174c8:	movk	x0, #0x8000, lsl #48
   174cc:	str	x0, [x24, #16]
   174d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   174d4:	ldr	x1, [x0, #2576]
   174d8:	add	x0, x0, #0xa10
   174dc:	blr	x1
   174e0:	mrs	x1, tpidr_el0
   174e4:	add	x0, x1, x0
   174e8:	ldr	w1, [x0]
   174ec:	orr	w1, w1, #0x4
   174f0:	str	w1, [x0]
   174f4:	mov	w19, #0x0                   	// #0
   174f8:	b	17730 <mpfr_log@@Base+0x688>
   174fc:	mov	x2, #0x0                   	// #0
   17500:	mov	x1, #0x1                   	// #1
   17504:	mov	x0, x23
   17508:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   1750c:	mov	w19, w0
   17510:	cbnz	w0, 170e8 <mpfr_log@@Base+0x40>
   17514:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17518:	str	x0, [x24, #16]
   1751c:	mov	w0, #0x1                   	// #1
   17520:	str	w0, [x24, #8]
   17524:	b	17730 <mpfr_log@@Base+0x688>
   17528:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   1752c:	add	x2, x2, #0x8
   17530:	mov	w1, #0x70                  	// #112
   17534:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17538:	add	x0, x0, #0x440
   1753c:	bl	cb40 <mpfr_assert_fail@plt>
   17540:	bl	c8e0 <mpfr_abort_prec_max@plt>
   17544:	lsl	x0, x19, #4
   17548:	str	x0, [sp, #144]
   1754c:	bl	ccf0 <mpfr_allocate_func@plt>
   17550:	str	x0, [sp, #152]
   17554:	b	171b0 <mpfr_log@@Base+0x108>
   17558:	cmp	x22, #0x1
   1755c:	b.eq	1759c <mpfr_log@@Base+0x4f4>  // b.none
   17560:	b.le	17584 <mpfr_log@@Base+0x4dc>
   17564:	sub	x0, x22, #0x1
   17568:	clz	x1, x0
   1756c:	mov	w0, #0x40                  	// #64
   17570:	sub	w0, w0, w1
   17574:	sxtw	x0, w0
   17578:	add	x19, x0, x19
   1757c:	add	x22, x19, x22
   17580:	b	175c4 <mpfr_log@@Base+0x51c>
   17584:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17588:	add	x2, x2, #0x448
   1758c:	mov	w1, #0xac                  	// #172
   17590:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17594:	add	x0, x0, #0x440
   17598:	bl	cb40 <mpfr_assert_fail@plt>
   1759c:	mov	x0, #0x0                   	// #0
   175a0:	b	17578 <mpfr_log@@Base+0x4d0>
   175a4:	cmp	x22, #0x1
   175a8:	b.eq	17668 <mpfr_log@@Base+0x5c0>  // b.none
   175ac:	b.le	17650 <mpfr_log@@Base+0x5a8>
   175b0:	sub	x19, x22, #0x1
   175b4:	clz	x0, x19
   175b8:	mov	w19, #0x40                  	// #64
   175bc:	sub	w19, w19, w0
   175c0:	add	x22, x22, w19, sxtw
   175c4:	mov	x0, #0xfffffffffffffeff    	// #-257
   175c8:	movk	x0, #0x7fff, lsl #48
   175cc:	sub	x0, x0, x22
   175d0:	ldr	x1, [sp, #120]
   175d4:	cmp	x0, x1
   175d8:	b.lt	17670 <mpfr_log@@Base+0x5c8>  // b.tstop
   175dc:	ldr	x0, [sp, #120]
   175e0:	add	x22, x22, x0
   175e4:	add	x0, x22, x22, lsr #63
   175e8:	asr	x0, x0, #1
   175ec:	str	x0, [sp, #120]
   175f0:	ldr	x1, [sp, #144]
   175f4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   175f8:	cmp	x22, x0
   175fc:	b.ge	17688 <mpfr_log@@Base+0x5e0>  // b.tcont
   17600:	add	x19, x22, #0x3e
   17604:	subs	x0, x22, #0x1
   17608:	csel	x19, x19, x0, mi  // mi = first
   1760c:	asr	x19, x19, #6
   17610:	add	x19, x19, #0x1
   17614:	lsl	x0, x19, #4
   17618:	str	x0, [sp, #144]
   1761c:	cbnz	x1, 1768c <mpfr_log@@Base+0x5e4>
   17620:	bl	ccf0 <mpfr_allocate_func@plt>
   17624:	str	x0, [sp, #152]
   17628:	str	x22, [sp, #320]
   1762c:	ldr	x1, [sp, #152]
   17630:	str	x1, [sp, #344]
   17634:	mov	w0, #0x1                   	// #1
   17638:	str	w0, [sp, #328]
   1763c:	str	x22, [sp, #288]
   17640:	add	x19, x1, x19, lsl #3
   17644:	str	x19, [sp, #312]
   17648:	str	w0, [sp, #296]
   1764c:	b	171fc <mpfr_log@@Base+0x154>
   17650:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17654:	add	x2, x2, #0x448
   17658:	mov	w1, #0xb2                  	// #178
   1765c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17660:	add	x0, x0, #0x440
   17664:	bl	cb40 <mpfr_assert_fail@plt>
   17668:	mov	w19, #0x0                   	// #0
   1766c:	b	175c0 <mpfr_log@@Base+0x518>
   17670:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   17674:	add	x2, x2, #0x118
   17678:	mov	w1, #0xb5                  	// #181
   1767c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17680:	add	x0, x0, #0x440
   17684:	bl	cb40 <mpfr_assert_fail@plt>
   17688:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1768c:	mov	x2, x0
   17690:	ldr	x0, [sp, #152]
   17694:	bl	c1c0 <mpfr_reallocate_func@plt>
   17698:	str	x0, [sp, #152]
   1769c:	b	17628 <mpfr_log@@Base+0x580>
   176a0:	ldr	w2, [sp, #128]
   176a4:	mov	w1, w19
   176a8:	mov	x0, x24
   176ac:	bl	cb30 <mpfr_check_range@plt>
   176b0:	mov	w19, w0
   176b4:	ldp	x21, x22, [sp, #32]
   176b8:	ldp	x25, x26, [sp, #64]
   176bc:	b	17730 <mpfr_log@@Base+0x688>
   176c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   176c4:	ldr	x1, [x0, #2576]
   176c8:	add	x0, x0, #0xa10
   176cc:	blr	x1
   176d0:	mrs	x1, tpidr_el0
   176d4:	ldr	w0, [x1, x0]
   176d8:	str	w0, [sp, #132]
   176dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   176e0:	ldr	x2, [x0, #2512]
   176e4:	add	x0, x0, #0x9d0
   176e8:	blr	x2
   176ec:	add	x2, x1, x0
   176f0:	ldr	x28, [x1, x0]
   176f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   176f8:	ldr	x3, [x0, #2544]
   176fc:	add	x0, x0, #0x9f0
   17700:	blr	x3
   17704:	ldr	x3, [x1, x0]
   17708:	str	x3, [sp, #136]
   1770c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   17710:	str	x3, [x2]
   17714:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   17718:	str	x2, [x1, x0]
   1771c:	mov	x19, x26
   17720:	mov	x22, #0xb                   	// #11
   17724:	b	171a4 <mpfr_log@@Base+0xfc>
   17728:	ldp	x21, x22, [sp, #32]
   1772c:	ldp	x25, x26, [sp, #64]
   17730:	mov	w0, w19
   17734:	ldp	x19, x20, [sp, #16]
   17738:	ldp	x23, x24, [sp, #48]
   1773c:	ldp	x27, x28, [sp, #80]
   17740:	ldp	x29, x30, [sp], #352
   17744:	ret

0000000000017748 <mpfr_modf@@Base>:
   17748:	stp	x29, x30, [sp, #-64]!
   1774c:	mov	x29, sp
   17750:	stp	x19, x20, [sp, #16]
   17754:	stp	x21, x22, [sp, #32]
   17758:	str	x23, [sp, #48]
   1775c:	cmp	x0, x1
   17760:	b.eq	17834 <mpfr_modf@@Base+0xec>  // b.none
   17764:	mov	x22, x0
   17768:	mov	x23, x1
   1776c:	mov	x19, x2
   17770:	mov	w21, w3
   17774:	ldr	x2, [x2, #16]
   17778:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   1777c:	cmp	x2, x3
   17780:	b.le	1784c <mpfr_modf@@Base+0x104>
   17784:	cmp	x2, #0x0
   17788:	b.le	178d8 <mpfr_modf@@Base+0x190>
   1778c:	ldr	x0, [x19]
   17790:	cmp	x2, x0
   17794:	b.ge	17944 <mpfr_modf@@Base+0x1fc>  // b.tcont
   17798:	cmp	x22, x19
   1779c:	b.ne	179ac <mpfr_modf@@Base+0x264>  // b.any
   177a0:	cmp	x1, x19
   177a4:	b.eq	179d8 <mpfr_modf@@Base+0x290>  // b.none
   177a8:	mov	w2, w21
   177ac:	mov	x1, x19
   177b0:	mov	x0, x23
   177b4:	bl	bec0 <mpfr_frac@plt>
   177b8:	mov	w20, w0
   177bc:	mov	w2, w21
   177c0:	mov	x1, x19
   177c4:	mov	x0, x22
   177c8:	bl	bf30 <mpfr_rint_trunc@plt>
   177cc:	mov	w22, w0
   177d0:	cbz	w22, 17a28 <mpfr_modf@@Base+0x2e0>
   177d4:	cmp	w22, #0x0
   177d8:	cset	w22, le
   177dc:	add	w22, w22, #0x1
   177e0:	cbz	w20, 17a20 <mpfr_modf@@Base+0x2d8>
   177e4:	cmp	w20, #0x0
   177e8:	mov	w0, #0x4                   	// #4
   177ec:	mov	w20, #0x8                   	// #8
   177f0:	csel	w0, w0, w20, gt
   177f4:	orr	w20, w0, w22
   177f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   177fc:	ldr	x1, [x0, #2576]
   17800:	add	x0, x0, #0xa10
   17804:	blr	x1
   17808:	mrs	x1, tpidr_el0
   1780c:	add	x0, x1, x0
   17810:	ldr	w1, [x0]
   17814:	orr	w1, w1, #0x8
   17818:	str	w1, [x0]
   1781c:	mov	w0, w20
   17820:	ldp	x19, x20, [sp, #16]
   17824:	ldp	x21, x22, [sp, #32]
   17828:	ldr	x23, [sp, #48]
   1782c:	ldp	x29, x30, [sp], #64
   17830:	ret
   17834:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17838:	add	x2, x2, #0x450
   1783c:	mov	w1, #0x2b                  	// #43
   17840:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   17844:	add	x0, x0, #0x460
   17848:	bl	cb40 <mpfr_assert_fail@plt>
   1784c:	mov	x0, #0x2                   	// #2
   17850:	movk	x0, #0x8000, lsl #48
   17854:	cmp	x2, x0
   17858:	b.eq	17890 <mpfr_modf@@Base+0x148>  // b.none
   1785c:	ldr	w0, [x19, #8]
   17860:	str	w0, [x22, #8]
   17864:	ldr	w0, [x19, #8]
   17868:	str	w0, [x1, #8]
   1786c:	ldr	x1, [x19, #16]
   17870:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17874:	cmp	x1, x0
   17878:	b.eq	178c4 <mpfr_modf@@Base+0x17c>  // b.none
   1787c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17880:	str	x0, [x22, #16]
   17884:	str	x0, [x23, #16]
   17888:	mov	w20, #0x0                   	// #0
   1788c:	b	1781c <mpfr_modf@@Base+0xd4>
   17890:	str	x0, [x22, #16]
   17894:	str	x0, [x1, #16]
   17898:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1789c:	ldr	x1, [x0, #2576]
   178a0:	add	x0, x0, #0xa10
   178a4:	blr	x1
   178a8:	mrs	x1, tpidr_el0
   178ac:	add	x0, x1, x0
   178b0:	ldr	w1, [x0]
   178b4:	orr	w1, w1, #0x4
   178b8:	str	w1, [x0]
   178bc:	mov	w20, #0x0                   	// #0
   178c0:	b	1781c <mpfr_modf@@Base+0xd4>
   178c4:	str	x0, [x22, #16]
   178c8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   178cc:	str	x0, [x23, #16]
   178d0:	mov	w20, #0x0                   	// #0
   178d4:	b	1781c <mpfr_modf@@Base+0xd4>
   178d8:	cmp	x1, x19
   178dc:	b.eq	179f0 <mpfr_modf@@Base+0x2a8>  // b.none
   178e0:	ldr	w3, [x19, #8]
   178e4:	mov	w2, w21
   178e8:	mov	x1, x19
   178ec:	mov	x0, x23
   178f0:	bl	c6a0 <mpfr_set4@plt>
   178f4:	mov	w20, w0
   178f8:	ldr	w0, [x19, #8]
   178fc:	str	w0, [x22, #8]
   17900:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17904:	str	x0, [x22, #16]
   17908:	cbz	w20, 1781c <mpfr_modf@@Base+0xd4>
   1790c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17910:	ldr	x1, [x0, #2576]
   17914:	add	x0, x0, #0xa10
   17918:	blr	x1
   1791c:	mrs	x1, tpidr_el0
   17920:	add	x0, x1, x0
   17924:	ldr	w1, [x0]
   17928:	orr	w1, w1, #0x8
   1792c:	str	w1, [x0]
   17930:	cmp	w20, #0x0
   17934:	mov	w20, #0x4                   	// #4
   17938:	mov	w0, #0x8                   	// #8
   1793c:	csel	w20, w20, w0, gt
   17940:	b	1781c <mpfr_modf@@Base+0xd4>
   17944:	cmp	x22, x19
   17948:	b.eq	17a08 <mpfr_modf@@Base+0x2c0>  // b.none
   1794c:	ldr	w3, [x19, #8]
   17950:	mov	w2, w21
   17954:	mov	x1, x19
   17958:	mov	x0, x22
   1795c:	bl	c6a0 <mpfr_set4@plt>
   17960:	mov	w20, w0
   17964:	ldr	w0, [x19, #8]
   17968:	str	w0, [x23, #8]
   1796c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17970:	str	x0, [x23, #16]
   17974:	cbz	w20, 1781c <mpfr_modf@@Base+0xd4>
   17978:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1797c:	ldr	x1, [x0, #2576]
   17980:	add	x0, x0, #0xa10
   17984:	blr	x1
   17988:	mrs	x1, tpidr_el0
   1798c:	add	x0, x1, x0
   17990:	ldr	w1, [x0]
   17994:	orr	w1, w1, #0x8
   17998:	str	w1, [x0]
   1799c:	cmp	w20, #0x0
   179a0:	cset	w20, le
   179a4:	add	w20, w20, #0x1
   179a8:	b	1781c <mpfr_modf@@Base+0xd4>
   179ac:	mov	w2, w21
   179b0:	mov	x1, x19
   179b4:	mov	x0, x22
   179b8:	bl	bf30 <mpfr_rint_trunc@plt>
   179bc:	mov	w22, w0
   179c0:	mov	w2, w21
   179c4:	mov	x1, x19
   179c8:	mov	x0, x23
   179cc:	bl	bec0 <mpfr_frac@plt>
   179d0:	mov	w20, w0
   179d4:	b	177d0 <mpfr_modf@@Base+0x88>
   179d8:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   179dc:	add	x2, x2, #0x468
   179e0:	mov	w1, #0x60                  	// #96
   179e4:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   179e8:	add	x0, x0, #0x460
   179ec:	bl	cb40 <mpfr_assert_fail@plt>
   179f0:	ldr	w0, [x19, #8]
   179f4:	str	w0, [x22, #8]
   179f8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   179fc:	str	x0, [x22, #16]
   17a00:	mov	w20, #0x0                   	// #0
   17a04:	b	1781c <mpfr_modf@@Base+0xd4>
   17a08:	ldr	w0, [x19, #8]
   17a0c:	str	w0, [x1, #8]
   17a10:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17a14:	str	x0, [x1, #16]
   17a18:	mov	w20, #0x0                   	// #0
   17a1c:	b	1781c <mpfr_modf@@Base+0xd4>
   17a20:	mov	w20, w22
   17a24:	b	177f8 <mpfr_modf@@Base+0xb0>
   17a28:	cbz	w20, 1781c <mpfr_modf@@Base+0xd4>
   17a2c:	b	177e4 <mpfr_modf@@Base+0x9c>

0000000000017a30 <mpfr_mul_2exp@@Base>:
   17a30:	stp	x29, x30, [sp, #-16]!
   17a34:	mov	x29, sp
   17a38:	bl	c2c0 <mpfr_mul_2ui@plt>
   17a3c:	ldp	x29, x30, [sp], #16
   17a40:	ret

0000000000017a44 <mpfr_mul_2si@@Base>:
   17a44:	stp	x29, x30, [sp, #-80]!
   17a48:	mov	x29, sp
   17a4c:	stp	x19, x20, [sp, #16]
   17a50:	stp	x21, x22, [sp, #32]
   17a54:	stp	x23, x24, [sp, #48]
   17a58:	mov	x19, x0
   17a5c:	mov	w23, w3
   17a60:	ldr	x22, [x1, #16]
   17a64:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17a68:	cmp	x22, x0
   17a6c:	b.le	17c08 <mpfr_mul_2si@@Base+0x1c4>
   17a70:	mov	x21, x2
   17a74:	mov	w20, #0x0                   	// #0
   17a78:	cmp	x1, x19
   17a7c:	b.eq	17b78 <mpfr_mul_2si@@Base+0x134>  // b.none
   17a80:	ldr	w20, [x1, #8]
   17a84:	str	w20, [x19, #8]
   17a88:	ldr	x0, [x19]
   17a8c:	ldr	x2, [x1]
   17a90:	cmp	x0, x2
   17a94:	b.eq	17c20 <mpfr_mul_2si@@Base+0x1dc>  // b.none
   17a98:	ldr	x24, [x19, #24]
   17a9c:	b.ge	17c54 <mpfr_mul_2si@@Base+0x210>  // b.tcont
   17aa0:	str	x25, [sp, #64]
   17aa4:	add	x4, x2, #0x3e
   17aa8:	subs	x2, x2, #0x1
   17aac:	csel	x4, x4, x2, mi  // mi = first
   17ab0:	asr	x4, x4, #6
   17ab4:	add	x6, x0, #0x3e
   17ab8:	subs	x2, x0, #0x1
   17abc:	csel	x6, x6, x2, mi  // mi = first
   17ac0:	asr	x6, x6, #6
   17ac4:	add	x2, x6, #0x1
   17ac8:	neg	w0, w0
   17acc:	sub	x8, x4, x6
   17ad0:	ldr	x9, [x1, #24]
   17ad4:	add	x1, x9, x8, lsl #3
   17ad8:	ands	w0, w0, #0x3f
   17adc:	b.eq	17cb0 <mpfr_mul_2si@@Base+0x26c>  // b.none
   17ae0:	sub	w5, w0, #0x1
   17ae4:	mov	x0, #0x1                   	// #1
   17ae8:	lsl	x0, x0, x5
   17aec:	ldr	x3, [x9, x8, lsl #3]
   17af0:	and	x7, x3, x0
   17af4:	sub	x0, x0, #0x1
   17af8:	and	x3, x0, x3
   17afc:	cmp	w23, #0x0
   17b00:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   17b04:	b.ne	17b2c <mpfr_mul_2si@@Base+0xe8>  // b.any
   17b08:	subs	x4, x4, x6
   17b0c:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   17b10:	b.ne	17b2c <mpfr_mul_2si@@Base+0xe8>  // b.any
   17b14:	mvn	x0, x4
   17b18:	add	x0, x1, x0, lsl #3
   17b1c:	ldr	x3, [x0, x4, lsl #3]
   17b20:	subs	x4, x4, #0x1
   17b24:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   17b28:	b.eq	17b1c <mpfr_mul_2si@@Base+0xd8>  // b.none
   17b2c:	mov	x25, #0x2                   	// #2
   17b30:	lsl	x25, x25, x5
   17b34:	cmp	w23, #0x5
   17b38:	b.eq	17d00 <mpfr_mul_2si@@Base+0x2bc>  // b.none
   17b3c:	cbnz	w23, 17e54 <mpfr_mul_2si@@Base+0x410>
   17b40:	cbnz	x7, 17d1c <mpfr_mul_2si@@Base+0x2d8>
   17b44:	orr	x3, x7, x3
   17b48:	cmp	x3, #0x0
   17b4c:	csneg	w20, wzr, w20, eq  // eq = none
   17b50:	cmp	x24, x1
   17b54:	b.eq	17b64 <mpfr_mul_2si@@Base+0x120>  // b.none
   17b58:	lsl	x2, x2, #3
   17b5c:	mov	x0, x24
   17b60:	bl	ba10 <memcpy@plt>
   17b64:	neg	x5, x25
   17b68:	ldr	x1, [x24]
   17b6c:	and	x5, x1, x5
   17b70:	str	x5, [x24]
   17b74:	ldr	x25, [sp, #64]
   17b78:	tbz	x21, #63, 17d84 <mpfr_mul_2si@@Base+0x340>
   17b7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17b80:	ldr	x1, [x0, #2512]
   17b84:	add	x0, x0, #0x9d0
   17b88:	blr	x1
   17b8c:	mrs	x1, tpidr_el0
   17b90:	ldr	x1, [x1, x0]
   17b94:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   17b98:	add	x0, x21, x0
   17b9c:	cmp	x0, x1
   17ba0:	b.lt	17bb0 <mpfr_mul_2si@@Base+0x16c>  // b.tstop
   17ba4:	sub	x0, x1, x21
   17ba8:	cmp	x0, x22
   17bac:	b.le	17db8 <mpfr_mul_2si@@Base+0x374>
   17bb0:	cbnz	w23, 17bf0 <mpfr_mul_2si@@Base+0x1ac>
   17bb4:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   17bb8:	add	x0, x21, x0
   17bbc:	cmp	x1, x0
   17bc0:	b.gt	17e24 <mpfr_mul_2si@@Base+0x3e0>
   17bc4:	add	x21, x21, #0x1
   17bc8:	sub	x1, x1, x21
   17bcc:	cmp	x1, x22
   17bd0:	b.gt	17e2c <mpfr_mul_2si@@Base+0x3e8>
   17bd4:	ldr	w0, [x19, #8]
   17bd8:	tbnz	w0, #31, 17e18 <mpfr_mul_2si@@Base+0x3d4>
   17bdc:	tbnz	w20, #31, 17bf0 <mpfr_mul_2si@@Base+0x1ac>
   17be0:	mov	x0, x19
   17be4:	bl	bf00 <mpfr_powerof2_raw@plt>
   17be8:	cmp	w0, #0x0
   17bec:	cset	w23, ne  // ne = any
   17bf0:	ldr	w2, [x19, #8]
   17bf4:	mov	w1, w23
   17bf8:	mov	x0, x19
   17bfc:	bl	c3c0 <mpfr_underflow@plt>
   17c00:	mov	w20, w0
   17c04:	b	17de8 <mpfr_mul_2si@@Base+0x3a4>
   17c08:	ldr	w3, [x1, #8]
   17c0c:	mov	w2, w23
   17c10:	mov	x0, x19
   17c14:	bl	c6a0 <mpfr_set4@plt>
   17c18:	mov	w20, w0
   17c1c:	b	17de8 <mpfr_mul_2si@@Base+0x3a4>
   17c20:	ldr	x0, [x19, #24]
   17c24:	ldr	x1, [x1, #24]
   17c28:	mov	w20, #0x0                   	// #0
   17c2c:	cmp	x0, x1
   17c30:	b.eq	17b78 <mpfr_mul_2si@@Base+0x134>  // b.none
   17c34:	add	x3, x2, #0x3e
   17c38:	subs	x2, x2, #0x1
   17c3c:	csel	x2, x3, x2, mi  // mi = first
   17c40:	asr	x2, x2, #6
   17c44:	add	x2, x2, #0x1
   17c48:	lsl	x2, x2, #3
   17c4c:	bl	ba10 <memcpy@plt>
   17c50:	b	17b78 <mpfr_mul_2si@@Base+0x134>
   17c54:	add	x3, x2, #0x3e
   17c58:	subs	x2, x2, #0x1
   17c5c:	csel	x2, x3, x2, mi  // mi = first
   17c60:	asr	x3, x2, #6
   17c64:	add	x2, x3, #0x1
   17c68:	add	x20, x0, #0x3e
   17c6c:	subs	x0, x0, #0x1
   17c70:	csel	x0, x20, x0, mi  // mi = first
   17c74:	asr	x20, x0, #6
   17c78:	sub	x20, x20, x3
   17c7c:	lsl	x20, x20, #3
   17c80:	add	x0, x24, x20
   17c84:	ldr	x1, [x1, #24]
   17c88:	cmp	x0, x1
   17c8c:	b.eq	17c98 <mpfr_mul_2si@@Base+0x254>  // b.none
   17c90:	lsl	x2, x2, #3
   17c94:	bl	ba10 <memcpy@plt>
   17c98:	mov	x2, x20
   17c9c:	mov	w1, #0x0                   	// #0
   17ca0:	mov	x0, x24
   17ca4:	bl	c110 <memset@plt>
   17ca8:	mov	w20, #0x0                   	// #0
   17cac:	b	17b78 <mpfr_mul_2si@@Base+0x134>
   17cb0:	ldur	x0, [x1, #-8]
   17cb4:	and	x7, x0, #0x8000000000000000
   17cb8:	and	x3, x0, #0x7fffffffffffffff
   17cbc:	cmp	w23, #0x0
   17cc0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   17cc4:	b.lt	17e48 <mpfr_mul_2si@@Base+0x404>  // b.tstop
   17cc8:	sub	x4, x4, x6
   17ccc:	subs	x5, x4, #0x1
   17cd0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   17cd4:	b.ne	17cf8 <mpfr_mul_2si@@Base+0x2b4>  // b.any
   17cd8:	mvn	x4, x4
   17cdc:	add	x0, x1, x4, lsl #3
   17ce0:	ldr	x3, [x0, x5, lsl #3]
   17ce4:	subs	x5, x5, #0x1
   17ce8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   17cec:	b.eq	17ce0 <mpfr_mul_2si@@Base+0x29c>  // b.none
   17cf0:	mov	x25, #0x1                   	// #1
   17cf4:	b	17b34 <mpfr_mul_2si@@Base+0xf0>
   17cf8:	mov	x25, #0x1                   	// #1
   17cfc:	b	17b34 <mpfr_mul_2si@@Base+0xf0>
   17d00:	mov	w20, #0x0                   	// #0
   17d04:	b	17b50 <mpfr_mul_2si@@Base+0x10c>
   17d08:	mov	w20, #0x0                   	// #0
   17d0c:	b	17b50 <mpfr_mul_2si@@Base+0x10c>
   17d10:	mov	x25, #0x1                   	// #1
   17d14:	mov	w20, #0x0                   	// #0
   17d18:	b	17b50 <mpfr_mul_2si@@Base+0x10c>
   17d1c:	cbnz	x3, 17e70 <mpfr_mul_2si@@Base+0x42c>
   17d20:	ldr	x0, [x9, x8, lsl #3]
   17d24:	tst	x25, x0
   17d28:	b.ne	17e70 <mpfr_mul_2si@@Base+0x42c>  // b.any
   17d2c:	neg	w20, w20
   17d30:	b	17b50 <mpfr_mul_2si@@Base+0x10c>
   17d34:	cmp	x24, x1
   17d38:	b.eq	17eb0 <mpfr_mul_2si@@Base+0x46c>  // b.none
   17d3c:	cmp	x6, x0
   17d40:	b.le	17eb0 <mpfr_mul_2si@@Base+0x46c>
   17d44:	ldr	x2, [x1, x4, lsl #3]
   17d48:	str	x2, [x24, x4, lsl #3]
   17d4c:	cmp	x6, x4
   17d50:	add	x4, x4, #0x1
   17d54:	b.gt	17d44 <mpfr_mul_2si@@Base+0x300>
   17d58:	b	17eb0 <mpfr_mul_2si@@Base+0x46c>
   17d5c:	mov	x0, #0x1                   	// #1
   17d60:	cmp	x2, x0
   17d64:	b.le	17e34 <mpfr_mul_2si@@Base+0x3f0>
   17d68:	ldr	x3, [x1, x0, lsl #3]
   17d6c:	add	x3, x3, #0x1
   17d70:	str	x3, [x24, x0, lsl #3]
   17d74:	add	x4, x0, #0x1
   17d78:	cbnz	x3, 17d34 <mpfr_mul_2si@@Base+0x2f0>
   17d7c:	mov	x0, x4
   17d80:	b	17d60 <mpfr_mul_2si@@Base+0x31c>
   17d84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17d88:	ldr	x1, [x0, #2544]
   17d8c:	add	x0, x0, #0x9f0
   17d90:	blr	x1
   17d94:	mrs	x1, tpidr_el0
   17d98:	ldr	x0, [x1, x0]
   17d9c:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   17da0:	add	x1, x21, x1
   17da4:	cmp	x1, x0
   17da8:	b.gt	17e00 <mpfr_mul_2si@@Base+0x3bc>
   17dac:	sub	x0, x0, x21
   17db0:	cmp	x0, x22
   17db4:	b.lt	17e00 <mpfr_mul_2si@@Base+0x3bc>  // b.tstop
   17db8:	add	x21, x22, x21
   17dbc:	str	x21, [x19, #16]
   17dc0:	cbz	w20, 17de8 <mpfr_mul_2si@@Base+0x3a4>
   17dc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17dc8:	ldr	x1, [x0, #2576]
   17dcc:	add	x0, x0, #0xa10
   17dd0:	blr	x1
   17dd4:	mrs	x1, tpidr_el0
   17dd8:	add	x0, x1, x0
   17ddc:	ldr	w1, [x0]
   17de0:	orr	w1, w1, #0x8
   17de4:	str	w1, [x0]
   17de8:	mov	w0, w20
   17dec:	ldp	x19, x20, [sp, #16]
   17df0:	ldp	x21, x22, [sp, #32]
   17df4:	ldp	x23, x24, [sp, #48]
   17df8:	ldp	x29, x30, [sp], #80
   17dfc:	ret
   17e00:	ldr	w2, [x19, #8]
   17e04:	mov	w1, w23
   17e08:	mov	x0, x19
   17e0c:	bl	bf40 <mpfr_overflow@plt>
   17e10:	mov	w20, w0
   17e14:	b	17de8 <mpfr_mul_2si@@Base+0x3a4>
   17e18:	cmp	w20, #0x0
   17e1c:	b.le	17be0 <mpfr_mul_2si@@Base+0x19c>
   17e20:	b	17bf0 <mpfr_mul_2si@@Base+0x1ac>
   17e24:	mov	w23, #0x1                   	// #1
   17e28:	b	17bf0 <mpfr_mul_2si@@Base+0x1ac>
   17e2c:	mov	w23, #0x1                   	// #1
   17e30:	b	17bf0 <mpfr_mul_2si@@Base+0x1ac>
   17e34:	add	x2, x24, x2, lsl #3
   17e38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   17e3c:	stur	x0, [x2, #-8]
   17e40:	add	x22, x22, #0x1
   17e44:	b	17eb0 <mpfr_mul_2si@@Base+0x46c>
   17e48:	mov	x25, #0x1                   	// #1
   17e4c:	cmp	w23, #0x5
   17e50:	b.eq	17d10 <mpfr_mul_2si@@Base+0x2cc>  // b.none
   17e54:	cmp	w23, #0x1
   17e58:	b.eq	17b44 <mpfr_mul_2si@@Base+0x100>  // b.none
   17e5c:	add	w0, w23, w20, lsr #31
   17e60:	cmp	w0, #0x3
   17e64:	b.eq	17b44 <mpfr_mul_2si@@Base+0x100>  // b.none
   17e68:	orr	x3, x7, x3
   17e6c:	cbz	x3, 17d08 <mpfr_mul_2si@@Base+0x2c4>
   17e70:	ldr	x0, [x9, x8, lsl #3]
   17e74:	add	x0, x25, x0
   17e78:	str	x0, [x24]
   17e7c:	cmp	x25, x0
   17e80:	b.hi	17d5c <mpfr_mul_2si@@Base+0x318>  // b.pmore
   17e84:	cmp	x24, x1
   17e88:	b.eq	17eb0 <mpfr_mul_2si@@Base+0x46c>  // b.none
   17e8c:	cmp	x2, #0x1
   17e90:	b.le	17eb0 <mpfr_mul_2si@@Base+0x46c>
   17e94:	add	x6, x6, #0x1
   17e98:	mov	x0, #0x1                   	// #1
   17e9c:	ldr	x2, [x1, x0, lsl #3]
   17ea0:	str	x2, [x24, x0, lsl #3]
   17ea4:	add	x0, x0, #0x1
   17ea8:	cmp	x6, x0
   17eac:	b.ne	17e9c <mpfr_mul_2si@@Base+0x458>  // b.any
   17eb0:	neg	x5, x25
   17eb4:	ldr	x0, [x24]
   17eb8:	and	x5, x0, x5
   17ebc:	str	x5, [x24]
   17ec0:	ldr	x25, [sp, #64]
   17ec4:	b	17b78 <mpfr_mul_2si@@Base+0x134>

0000000000017ec8 <mpfr_mul_2ui@@Base>:
   17ec8:	stp	x29, x30, [sp, #-64]!
   17ecc:	mov	x29, sp
   17ed0:	stp	x19, x20, [sp, #16]
   17ed4:	stp	x21, x22, [sp, #32]
   17ed8:	stp	x23, x24, [sp, #48]
   17edc:	mov	x19, x0
   17ee0:	mov	x20, x2
   17ee4:	mov	w21, w3
   17ee8:	mov	w22, #0x0                   	// #0
   17eec:	cmp	x0, x1
   17ef0:	b.eq	17f04 <mpfr_mul_2ui@@Base+0x3c>  // b.none
   17ef4:	ldr	w3, [x1, #8]
   17ef8:	mov	w2, w21
   17efc:	bl	c6a0 <mpfr_set4@plt>
   17f00:	mov	w22, w0
   17f04:	ldr	x1, [x19, #16]
   17f08:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   17f0c:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   17f10:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17f14:	cmp	x1, x0
   17f18:	b.le	17f60 <mpfr_mul_2ui@@Base+0x98>
   17f1c:	tbnz	x20, #63, 17f78 <mpfr_mul_2ui@@Base+0xb0>
   17f20:	ldr	x3, [x19, #16]
   17f24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   17f28:	ldr	x2, [x0, #2544]
   17f2c:	add	x0, x0, #0x9f0
   17f30:	blr	x2
   17f34:	mrs	x2, tpidr_el0
   17f38:	ldr	x2, [x2, x0]
   17f3c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   17f40:	add	x0, x20, x0
   17f44:	cmp	x0, x2
   17f48:	b.gt	17f9c <mpfr_mul_2ui@@Base+0xd4>
   17f4c:	sub	x2, x2, x20
   17f50:	cmp	x2, x3
   17f54:	b.lt	17f9c <mpfr_mul_2ui@@Base+0xd4>  // b.tstop
   17f58:	add	x1, x20, x3
   17f5c:	str	x1, [x19, #16]
   17f60:	mov	w0, w22
   17f64:	ldp	x19, x20, [sp, #16]
   17f68:	ldp	x21, x22, [sp, #32]
   17f6c:	ldp	x23, x24, [sp, #48]
   17f70:	ldp	x29, x30, [sp], #64
   17f74:	ret
   17f78:	add	x20, x20, x24
   17f7c:	mov	w3, w21
   17f80:	mov	x2, x23
   17f84:	mov	x1, x19
   17f88:	mov	x0, x19
   17f8c:	bl	17ec8 <mpfr_mul_2ui@@Base>
   17f90:	cbz	w0, 17f1c <mpfr_mul_2ui@@Base+0x54>
   17f94:	mov	w22, w0
   17f98:	b	17f60 <mpfr_mul_2ui@@Base+0x98>
   17f9c:	ldr	w2, [x19, #8]
   17fa0:	mov	w1, w21
   17fa4:	mov	x0, x19
   17fa8:	bl	bf40 <mpfr_overflow@plt>
   17fac:	mov	w22, w0
   17fb0:	b	17f60 <mpfr_mul_2ui@@Base+0x98>

0000000000017fb4 <mpfr_mul@@Base>:
   17fb4:	stp	x29, x30, [sp, #-288]!
   17fb8:	mov	x29, sp
   17fbc:	stp	x19, x20, [sp, #16]
   17fc0:	stp	x21, x22, [sp, #32]
   17fc4:	stp	x23, x24, [sp, #48]
   17fc8:	stp	x25, x26, [sp, #64]
   17fcc:	stp	x27, x28, [sp, #80]
   17fd0:	mov	x21, x0
   17fd4:	mov	x23, x1
   17fd8:	mov	x22, x2
   17fdc:	ldr	x1, [x1, #16]
   17fe0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17fe4:	cmp	x1, x0
   17fe8:	b.le	18358 <mpfr_mul@@Base+0x3a4>
   17fec:	mov	w24, w3
   17ff0:	ldr	x2, [x2, #16]
   17ff4:	cmp	x2, x0
   17ff8:	b.le	1966c <mpfr_mul@@Base+0x16b8>
   17ffc:	ldr	x26, [x21]
   18000:	ldr	x20, [x23]
   18004:	ldr	x0, [x22]
   18008:	cmp	x26, x20
   1800c:	ccmp	x26, x0, #0x0, eq  // eq = none
   18010:	b.ne	1803c <mpfr_mul@@Base+0x88>  // b.any
   18014:	cmp	x26, #0x3f
   18018:	b.le	1846c <mpfr_mul@@Base+0x4b8>
   1801c:	sub	x3, x26, #0x41
   18020:	cmp	x3, #0x3e
   18024:	b.ls	186d8 <mpfr_mul@@Base+0x724>  // b.plast
   18028:	cmp	x26, #0x40
   1802c:	b.eq	189f0 <mpfr_mul@@Base+0xa3c>  // b.none
   18030:	sub	x3, x26, #0x81
   18034:	cmp	x3, #0x3e
   18038:	b.ls	18bc8 <mpfr_mul@@Base+0xc14>  // b.plast
   1803c:	ldr	w4, [x23, #8]
   18040:	ldr	w3, [x22, #8]
   18044:	mul	w3, w4, w3
   18048:	str	w3, [x29, #188]
   1804c:	add	x1, x1, x2
   18050:	str	x1, [x29, #160]
   18054:	add	x2, x20, x0
   18058:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   1805c:	cmp	x2, x1
   18060:	b.cs	18f44 <mpfr_mul@@Base+0xf90>  // b.hs, b.nlast
   18064:	add	x1, x20, #0x3e
   18068:	subs	x2, x20, #0x1
   1806c:	csel	x1, x1, x2, mi  // mi = first
   18070:	asr	x1, x1, #6
   18074:	str	x1, [x29, #168]
   18078:	add	x27, x1, #0x1
   1807c:	add	x1, x0, #0x3e
   18080:	subs	x2, x0, #0x1
   18084:	csel	x1, x1, x2, mi  // mi = first
   18088:	asr	x1, x1, #6
   1808c:	str	x1, [x29, #152]
   18090:	add	x28, x1, #0x1
   18094:	add	x1, x27, x28
   18098:	str	x1, [x29, #144]
   1809c:	add	x20, x20, x0
   180a0:	add	x19, x20, #0x3e
   180a4:	subs	x0, x20, #0x1
   180a8:	csel	x19, x19, x0, mi  // mi = first
   180ac:	asr	x19, x19, #6
   180b0:	add	x0, x19, #0x1
   180b4:	str	x0, [x29, #176]
   180b8:	str	xzr, [x29, #280]
   180bc:	lsl	x0, x1, #3
   180c0:	str	x0, [x29, #136]
   180c4:	cmp	x0, #0x4, lsl #12
   180c8:	b.hi	18f5c <mpfr_mul@@Base+0xfa8>  // b.pmore
   180cc:	add	x0, x0, #0xf
   180d0:	and	x0, x0, #0xfffffffffffffff0
   180d4:	sub	sp, sp, x0
   180d8:	mov	x25, sp
   180dc:	ldr	x0, [x29, #168]
   180e0:	ldr	x1, [x29, #152]
   180e4:	cmp	x0, x1
   180e8:	b.lt	18f70 <mpfr_mul@@Base+0xfbc>  // b.tstop
   180ec:	cmp	x27, #0x2
   180f0:	b.gt	18fd0 <mpfr_mul@@Base+0x101c>
   180f4:	ldr	x0, [x23, #24]
   180f8:	ldr	x0, [x0]
   180fc:	ldr	x1, [x22, #24]
   18100:	ldr	x1, [x1]
   18104:	add	x5, x25, #0x8
   18108:	umulh	x2, x0, x1
   1810c:	str	x2, [x25, #8]
   18110:	mul	x0, x0, x1
   18114:	str	x0, [x25]
   18118:	mov	x0, x2
   1811c:	cmp	x27, #0x1
   18120:	b.eq	181b4 <mpfr_mul@@Base+0x200>  // b.none
   18124:	cmp	x28, #0x1
   18128:	b.eq	18f8c <mpfr_mul@@Base+0xfd8>  // b.none
   1812c:	ldr	x0, [x23, #24]
   18130:	ldr	x0, [x0, #8]
   18134:	ldr	x1, [x22, #24]
   18138:	ldr	x3, [x1]
   1813c:	umulh	x1, x0, x3
   18140:	ldr	x2, [x25, #8]
   18144:	mul	x0, x0, x3
   18148:	adds	x3, x2, x0
   1814c:	adc	x0, x1, xzr
   18150:	str	x0, [x25, #16]
   18154:	str	x3, [x5]
   18158:	ldr	x1, [x23, #24]
   1815c:	ldr	x0, [x1]
   18160:	ldr	x2, [x22, #24]
   18164:	ldr	x2, [x2, #8]
   18168:	umulh	x6, x0, x2
   1816c:	ldr	x1, [x1, #8]
   18170:	umulh	x3, x1, x2
   18174:	mul	x1, x2, x1
   18178:	adds	x4, x6, x1
   1817c:	adc	x1, x3, xzr
   18180:	str	x1, [x25, #24]
   18184:	ldr	x1, [x25, #16]
   18188:	ldr	x3, [x25, #8]
   1818c:	mul	x0, x0, x2
   18190:	adds	x2, x3, x0
   18194:	adc	x0, x1, x4
   18198:	str	x0, [x25, #16]
   1819c:	str	x2, [x5]
   181a0:	ldr	x0, [x25, #16]
   181a4:	cmp	x0, x4
   181a8:	ldr	x0, [x25, #24]
   181ac:	cinc	x0, x0, cc  // cc = lo, ul, last
   181b0:	str	x0, [x25, #24]
   181b4:	lsr	x1, x0, #63
   181b8:	str	x1, [x29, #168]
   181bc:	ldr	x1, [x29, #144]
   181c0:	ldr	x2, [x29, #176]
   181c4:	sub	x1, x1, x2
   181c8:	add	x1, x25, x1, lsl #3
   181cc:	str	x1, [x29, #152]
   181d0:	tbz	x0, #63, 18fc0 <mpfr_mul@@Base+0x100c>
   181d4:	ldr	x0, [x29, #160]
   181d8:	ldr	x1, [x29, #168]
   181dc:	add	x6, x0, x1
   181e0:	sub	x26, x6, #0x1
   181e4:	ldr	x0, [x21]
   181e8:	ldr	x25, [x21, #24]
   181ec:	cmp	x20, x0
   181f0:	b.le	193fc <mpfr_mul@@Base+0x1448>
   181f4:	add	x5, x0, #0x3e
   181f8:	subs	x1, x0, #0x1
   181fc:	csel	x5, x5, x1, mi  // mi = first
   18200:	asr	x5, x5, #6
   18204:	add	x2, x5, #0x1
   18208:	neg	w0, w0
   1820c:	sub	x7, x19, x5
   18210:	ldr	x8, [x29, #152]
   18214:	add	x1, x8, x7, lsl #3
   18218:	ands	w0, w0, #0x3f
   1821c:	b.eq	19448 <mpfr_mul@@Base+0x1494>  // b.none
   18220:	sub	w4, w0, #0x1
   18224:	mov	x3, #0x1                   	// #1
   18228:	lsl	x3, x3, x4
   1822c:	ldr	x0, [x8, x7, lsl #3]
   18230:	and	x7, x0, x3
   18234:	sub	x3, x3, #0x1
   18238:	and	x0, x3, x0
   1823c:	cmp	w24, #0x0
   18240:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   18244:	b.ne	1826c <mpfr_mul@@Base+0x2b8>  // b.any
   18248:	subs	x19, x19, x5
   1824c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   18250:	b.ne	1826c <mpfr_mul@@Base+0x2b8>  // b.any
   18254:	mvn	x3, x19
   18258:	add	x3, x1, x3, lsl #3
   1825c:	ldr	x0, [x3, x19, lsl #3]
   18260:	subs	x19, x19, #0x1
   18264:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   18268:	b.eq	1825c <mpfr_mul@@Base+0x2a8>  // b.none
   1826c:	mov	x20, #0x2                   	// #2
   18270:	lsl	x20, x20, x4
   18274:	cmp	w24, #0x5
   18278:	b.eq	19498 <mpfr_mul@@Base+0x14e4>  // b.none
   1827c:	cbnz	w24, 195f4 <mpfr_mul@@Base+0x1640>
   18280:	cbnz	x7, 194b4 <mpfr_mul@@Base+0x1500>
   18284:	orr	x0, x0, x7
   18288:	cmp	x0, #0x0
   1828c:	ldr	w0, [x29, #188]
   18290:	csneg	w19, wzr, w0, eq  // eq = none
   18294:	cmp	x25, x1
   18298:	b.eq	182a8 <mpfr_mul@@Base+0x2f4>  // b.none
   1829c:	lsl	x2, x2, #3
   182a0:	mov	x0, x25
   182a4:	bl	ba10 <memcpy@plt>
   182a8:	neg	x20, x20
   182ac:	ldr	x0, [x25]
   182b0:	and	x20, x0, x20
   182b4:	str	x20, [x25]
   182b8:	ldr	x0, [x29, #280]
   182bc:	cbnz	x0, 19524 <mpfr_mul@@Base+0x1570>
   182c0:	str	x26, [x21, #16]
   182c4:	ldr	w0, [x29, #188]
   182c8:	str	w0, [x21, #8]
   182cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   182d0:	ldr	x1, [x0, #2544]
   182d4:	add	x0, x0, #0x9f0
   182d8:	blr	x1
   182dc:	mrs	x1, tpidr_el0
   182e0:	ldr	x0, [x1, x0]
   182e4:	cmp	x0, x26
   182e8:	b.lt	1952c <mpfr_mul@@Base+0x1578>  // b.tstop
   182ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   182f0:	ldr	x1, [x0, #2512]
   182f4:	add	x0, x0, #0x9d0
   182f8:	blr	x1
   182fc:	mrs	x1, tpidr_el0
   18300:	ldr	x0, [x1, x0]
   18304:	cmp	x0, x26
   18308:	b.gt	19544 <mpfr_mul@@Base+0x1590>
   1830c:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18310:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18314:	ldr	x1, [x0, #2576]
   18318:	add	x0, x0, #0xa10
   1831c:	blr	x1
   18320:	mrs	x1, tpidr_el0
   18324:	add	x0, x1, x0
   18328:	ldr	w1, [x0]
   1832c:	orr	w1, w1, #0x8
   18330:	str	w1, [x0]
   18334:	mov	w0, w19
   18338:	mov	sp, x29
   1833c:	ldp	x19, x20, [sp, #16]
   18340:	ldp	x21, x22, [sp, #32]
   18344:	ldp	x23, x24, [sp, #48]
   18348:	ldp	x25, x26, [sp, #64]
   1834c:	ldp	x27, x28, [sp, #80]
   18350:	ldp	x29, x30, [sp], #288
   18354:	ret
   18358:	mov	x0, #0x2                   	// #2
   1835c:	movk	x0, #0x8000, lsl #48
   18360:	cmp	x1, x0
   18364:	b.eq	183a8 <mpfr_mul@@Base+0x3f4>  // b.none
   18368:	ldr	x2, [x2, #16]
   1836c:	cmp	x2, x0
   18370:	b.eq	183a8 <mpfr_mul@@Base+0x3f4>  // b.none
   18374:	ldr	w0, [x23, #8]
   18378:	ldr	w3, [x22, #8]
   1837c:	mul	w0, w0, w3
   18380:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   18384:	cmp	x1, x3
   18388:	b.ne	1968c <mpfr_mul@@Base+0x16d8>  // b.any
   1838c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   18390:	cmp	x2, x1
   18394:	b.eq	183e0 <mpfr_mul@@Base+0x42c>  // b.none
   18398:	str	w0, [x21, #8]
   1839c:	str	x3, [x21, #16]
   183a0:	mov	w19, #0x0                   	// #0
   183a4:	b	18334 <mpfr_mul@@Base+0x380>
   183a8:	mov	x0, #0x2                   	// #2
   183ac:	movk	x0, #0x8000, lsl #48
   183b0:	str	x0, [x21, #16]
   183b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   183b8:	ldr	x1, [x0, #2576]
   183bc:	add	x0, x0, #0xa10
   183c0:	blr	x1
   183c4:	mrs	x1, tpidr_el0
   183c8:	add	x0, x1, x0
   183cc:	ldr	w1, [x0]
   183d0:	orr	w1, w1, #0x4
   183d4:	str	w1, [x0]
   183d8:	mov	w19, #0x0                   	// #0
   183dc:	b	18334 <mpfr_mul@@Base+0x380>
   183e0:	mov	x0, #0x2                   	// #2
   183e4:	movk	x0, #0x8000, lsl #48
   183e8:	str	x0, [x21, #16]
   183ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   183f0:	ldr	x1, [x0, #2576]
   183f4:	add	x0, x0, #0xa10
   183f8:	blr	x1
   183fc:	mrs	x1, tpidr_el0
   18400:	add	x0, x1, x0
   18404:	ldr	w1, [x0]
   18408:	orr	w1, w1, #0x4
   1840c:	str	w1, [x0]
   18410:	mov	w19, #0x0                   	// #0
   18414:	b	18334 <mpfr_mul@@Base+0x380>
   18418:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1841c:	cmp	x1, x2
   18420:	b.eq	18434 <mpfr_mul@@Base+0x480>  // b.none
   18424:	str	w0, [x21, #8]
   18428:	str	x3, [x21, #16]
   1842c:	mov	w19, #0x0                   	// #0
   18430:	b	18334 <mpfr_mul@@Base+0x380>
   18434:	mov	x0, #0x2                   	// #2
   18438:	movk	x0, #0x8000, lsl #48
   1843c:	str	x0, [x21, #16]
   18440:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18444:	ldr	x1, [x0, #2576]
   18448:	add	x0, x0, #0xa10
   1844c:	blr	x1
   18450:	mrs	x1, tpidr_el0
   18454:	add	x0, x1, x0
   18458:	ldr	w1, [x0]
   1845c:	orr	w1, w1, #0x4
   18460:	str	w1, [x0]
   18464:	mov	w19, #0x0                   	// #0
   18468:	b	18334 <mpfr_mul@@Base+0x380>
   1846c:	ldr	x7, [x21, #24]
   18470:	ldr	x0, [x23, #24]
   18474:	ldr	x3, [x0]
   18478:	ldr	x0, [x22, #24]
   1847c:	ldr	x6, [x0]
   18480:	mov	x0, #0x40                  	// #64
   18484:	sub	x26, x0, x26
   18488:	mov	x5, #0x1                   	// #1
   1848c:	lsl	x5, x5, x26
   18490:	sub	x4, x5, #0x1
   18494:	add	x1, x1, x2
   18498:	umulh	x0, x3, x6
   1849c:	mul	x3, x3, x6
   184a0:	tbnz	x0, #63, 184b0 <mpfr_mul@@Base+0x4fc>
   184a4:	sub	x1, x1, #0x1
   184a8:	extr	x0, x0, x3, #63
   184ac:	lsl	x3, x3, #1
   184b0:	sub	w6, w26, #0x1
   184b4:	mov	x2, #0x1                   	// #1
   184b8:	lsl	x2, x2, x6
   184bc:	and	x6, x2, x0
   184c0:	eor	x2, x4, x2
   184c4:	and	x2, x2, x0
   184c8:	orr	x2, x2, x3
   184cc:	neg	x3, x5
   184d0:	and	x0, x0, x3
   184d4:	str	x0, [x7]
   184d8:	ldr	w19, [x23, #8]
   184dc:	ldr	w0, [x22, #8]
   184e0:	mul	w19, w19, w0
   184e4:	str	w19, [x21, #8]
   184e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   184ec:	ldr	x4, [x0, #2544]
   184f0:	add	x0, x0, #0x9f0
   184f4:	blr	x4
   184f8:	mrs	x4, tpidr_el0
   184fc:	ldr	x0, [x4, x0]
   18500:	cmp	x0, x1
   18504:	b.lt	18544 <mpfr_mul@@Base+0x590>  // b.tstop
   18508:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1850c:	ldr	x4, [x0, #2512]
   18510:	add	x0, x0, #0x9d0
   18514:	blr	x4
   18518:	mrs	x4, tpidr_el0
   1851c:	ldr	x0, [x4, x0]
   18520:	cmp	x1, x0
   18524:	b.lt	1855c <mpfr_mul@@Base+0x5a8>  // b.tstop
   18528:	str	x1, [x21, #16]
   1852c:	orr	x0, x6, x2
   18530:	cmp	x0, #0x0
   18534:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   18538:	b.ne	185a4 <mpfr_mul@@Base+0x5f0>  // b.any
   1853c:	mov	w19, #0x0                   	// #0
   18540:	b	18334 <mpfr_mul@@Base+0x380>
   18544:	mov	w2, w19
   18548:	mov	w1, w24
   1854c:	mov	x0, x21
   18550:	bl	bf40 <mpfr_overflow@plt>
   18554:	mov	w19, w0
   18558:	b	18334 <mpfr_mul@@Base+0x380>
   1855c:	sub	x0, x0, #0x1
   18560:	cmp	x1, x0
   18564:	b.ne	18628 <mpfr_mul@@Base+0x674>  // b.any
   18568:	ldr	x4, [x7]
   1856c:	cmp	x3, x4
   18570:	b.ne	195a4 <mpfr_mul@@Base+0x15f0>  // b.any
   18574:	cmp	w24, #0x0
   18578:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   1857c:	b.ne	1959c <mpfr_mul@@Base+0x15e8>  // b.any
   18580:	cmp	w24, #0x4
   18584:	b.eq	196ac <mpfr_mul@@Base+0x16f8>  // b.none
   18588:	mvn	w3, w19
   1858c:	add	w3, w24, w3, lsr #31
   18590:	cmp	w3, #0x3
   18594:	b.ne	195a4 <mpfr_mul@@Base+0x15f0>  // b.any
   18598:	orr	x3, x6, x2
   1859c:	cbz	x3, 195a4 <mpfr_mul@@Base+0x15f0>
   185a0:	str	x0, [x21, #16]
   185a4:	cbz	w24, 18674 <mpfr_mul@@Base+0x6c0>
   185a8:	cmp	w24, #0x1
   185ac:	b.eq	18688 <mpfr_mul@@Base+0x6d4>  // b.none
   185b0:	add	w0, w24, w19, lsr #31
   185b4:	cmp	w0, #0x3
   185b8:	b.eq	18688 <mpfr_mul@@Base+0x6d4>  // b.none
   185bc:	ldr	x0, [x7]
   185c0:	adds	x0, x5, x0
   185c4:	b.ne	186b8 <mpfr_mul@@Base+0x704>  // b.any
   185c8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   185cc:	str	x0, [x7]
   185d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   185d4:	ldr	x2, [x0, #2544]
   185d8:	add	x0, x0, #0x9f0
   185dc:	blr	x2
   185e0:	mrs	x2, tpidr_el0
   185e4:	ldr	x0, [x2, x0]
   185e8:	cmp	x1, x0
   185ec:	b.ge	186c0 <mpfr_mul@@Base+0x70c>  // b.tcont
   185f0:	add	x1, x1, #0x1
   185f4:	str	x1, [x21, #16]
   185f8:	ldr	w19, [x21, #8]
   185fc:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18600:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18604:	ldr	x1, [x0, #2576]
   18608:	add	x0, x0, #0xa10
   1860c:	blr	x1
   18610:	mrs	x1, tpidr_el0
   18614:	add	x0, x1, x0
   18618:	ldr	w1, [x0]
   1861c:	orr	w1, w1, #0x8
   18620:	str	w1, [x0]
   18624:	b	18334 <mpfr_mul@@Base+0x380>
   18628:	cbnz	w24, 1864c <mpfr_mul@@Base+0x698>
   1862c:	b.lt	18664 <mpfr_mul@@Base+0x6b0>  // b.tstop
   18630:	ldr	x1, [x7]
   18634:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18638:	cmp	x1, x0
   1863c:	b.ne	1866c <mpfr_mul@@Base+0x6b8>  // b.any
   18640:	orr	x2, x6, x2
   18644:	cmp	x2, #0x0
   18648:	cset	w24, eq  // eq = none
   1864c:	mov	w2, w19
   18650:	mov	w1, w24
   18654:	mov	x0, x21
   18658:	bl	c3c0 <mpfr_underflow@plt>
   1865c:	mov	w19, w0
   18660:	b	18334 <mpfr_mul@@Base+0x380>
   18664:	mov	w24, #0x1                   	// #1
   18668:	b	1864c <mpfr_mul@@Base+0x698>
   1866c:	mov	w24, #0x0                   	// #0
   18670:	b	1864c <mpfr_mul@@Base+0x698>
   18674:	cbz	x6, 18688 <mpfr_mul@@Base+0x6d4>
   18678:	cbnz	x2, 185bc <mpfr_mul@@Base+0x608>
   1867c:	ldr	x0, [x7]
   18680:	lsr	x26, x0, x26
   18684:	tbnz	w26, #0, 185bc <mpfr_mul@@Base+0x608>
   18688:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   1868c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18690:	ldr	x1, [x0, #2576]
   18694:	add	x0, x0, #0xa10
   18698:	blr	x1
   1869c:	mrs	x1, tpidr_el0
   186a0:	add	x0, x1, x0
   186a4:	ldr	w1, [x0]
   186a8:	orr	w1, w1, #0x8
   186ac:	str	w1, [x0]
   186b0:	neg	w19, w19
   186b4:	b	18334 <mpfr_mul@@Base+0x380>
   186b8:	str	x0, [x7]
   186bc:	b	185f8 <mpfr_mul@@Base+0x644>
   186c0:	ldr	w2, [x21, #8]
   186c4:	mov	w1, w24
   186c8:	mov	x0, x21
   186cc:	bl	bf40 <mpfr_overflow@plt>
   186d0:	mov	w19, w0
   186d4:	b	18334 <mpfr_mul@@Base+0x380>
   186d8:	ldr	x7, [x21, #24]
   186dc:	add	x1, x1, x2
   186e0:	mov	x0, #0x80                  	// #128
   186e4:	sub	x26, x0, x26
   186e8:	mov	x5, #0x1                   	// #1
   186ec:	lsl	x5, x5, x26
   186f0:	sub	x4, x5, #0x1
   186f4:	ldr	x3, [x23, #24]
   186f8:	ldr	x0, [x22, #24]
   186fc:	ldr	x6, [x3, #8]
   18700:	ldr	x8, [x0, #8]
   18704:	umulh	x2, x6, x8
   18708:	ldr	x12, [x0]
   1870c:	umulh	x9, x6, x12
   18710:	madd	x0, x6, x8, x9
   18714:	cmp	x9, x0
   18718:	cinc	x2, x2, hi  // hi = pmore
   1871c:	ldr	x11, [x3]
   18720:	umulh	x3, x11, x8
   18724:	adds	x0, x0, x3
   18728:	cinc	x2, x2, cs  // cs = hs, nlast
   1872c:	add	x9, x0, #0x2
   18730:	and	x9, x9, x4, lsr #2
   18734:	mov	x3, #0x1                   	// #1
   18738:	mov	x10, x3
   1873c:	cmp	x9, #0x2
   18740:	b.ls	187f4 <mpfr_mul@@Base+0x840>  // b.plast
   18744:	tbnz	x2, #63, 18758 <mpfr_mul@@Base+0x7a4>
   18748:	sub	x1, x1, #0x1
   1874c:	extr	x2, x2, x0, #63
   18750:	extr	x0, x0, x10, #63
   18754:	lsl	x10, x10, #1
   18758:	str	x2, [x7, #8]
   1875c:	sub	w6, w26, #0x1
   18760:	mov	x2, #0x1                   	// #1
   18764:	lsl	x2, x2, x6
   18768:	and	x6, x2, x0
   1876c:	orr	x3, x3, x10
   18770:	eor	x2, x4, x2
   18774:	and	x2, x2, x0
   18778:	orr	x2, x2, x3
   1877c:	neg	x3, x5
   18780:	and	x0, x0, x3
   18784:	str	x0, [x7]
   18788:	ldr	w19, [x23, #8]
   1878c:	ldr	w0, [x22, #8]
   18790:	mul	w19, w19, w0
   18794:	str	w19, [x21, #8]
   18798:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1879c:	ldr	x4, [x0, #2544]
   187a0:	add	x0, x0, #0x9f0
   187a4:	blr	x4
   187a8:	mrs	x4, tpidr_el0
   187ac:	ldr	x0, [x4, x0]
   187b0:	cmp	x0, x1
   187b4:	b.lt	18838 <mpfr_mul@@Base+0x884>  // b.tstop
   187b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   187bc:	ldr	x4, [x0, #2512]
   187c0:	add	x0, x0, #0x9d0
   187c4:	blr	x4
   187c8:	mrs	x4, tpidr_el0
   187cc:	ldr	x0, [x4, x0]
   187d0:	cmp	x1, x0
   187d4:	b.lt	18850 <mpfr_mul@@Base+0x89c>  // b.tstop
   187d8:	str	x1, [x21, #16]
   187dc:	orr	x0, x6, x2
   187e0:	cmp	x0, #0x0
   187e4:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   187e8:	b.ne	188a4 <mpfr_mul@@Base+0x8f0>  // b.any
   187ec:	mov	w19, #0x0                   	// #0
   187f0:	b	18334 <mpfr_mul@@Base+0x380>
   187f4:	mul	x6, x6, x12
   187f8:	mul	x8, x8, x11
   187fc:	umulh	x9, x11, x12
   18800:	mul	x3, x12, x11
   18804:	adds	x6, x6, x9
   18808:	cset	w9, cs  // cs = hs, nlast
   1880c:	cinc	x0, x0, cs  // cs = hs, nlast
   18810:	cmp	x0, #0x0
   18814:	ccmp	w9, #0x0, #0x4, eq  // eq = none
   18818:	cinc	x2, x2, ne  // ne = any
   1881c:	adds	x10, x8, x6
   18820:	cset	w6, cs  // cs = hs, nlast
   18824:	cinc	x0, x0, cs  // cs = hs, nlast
   18828:	cmp	x0, #0x0
   1882c:	ccmp	w6, #0x0, #0x4, eq  // eq = none
   18830:	cinc	x2, x2, ne  // ne = any
   18834:	b	18744 <mpfr_mul@@Base+0x790>
   18838:	mov	w2, w19
   1883c:	mov	w1, w24
   18840:	mov	x0, x21
   18844:	bl	bf40 <mpfr_overflow@plt>
   18848:	mov	w19, w0
   1884c:	b	18334 <mpfr_mul@@Base+0x380>
   18850:	sub	x0, x0, #0x1
   18854:	cmp	x1, x0
   18858:	b.ne	18938 <mpfr_mul@@Base+0x984>  // b.any
   1885c:	ldr	x4, [x7, #8]
   18860:	cmn	x4, #0x1
   18864:	b.ne	195b4 <mpfr_mul@@Base+0x1600>  // b.any
   18868:	ldr	x4, [x7]
   1886c:	cmp	x3, x4
   18870:	b.ne	195b4 <mpfr_mul@@Base+0x1600>  // b.any
   18874:	cmp	w24, #0x0
   18878:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   1887c:	b.ne	195ac <mpfr_mul@@Base+0x15f8>  // b.any
   18880:	cmp	w24, #0x4
   18884:	b.eq	196bc <mpfr_mul@@Base+0x1708>  // b.none
   18888:	mvn	w3, w19
   1888c:	add	w3, w24, w3, lsr #31
   18890:	cmp	w3, #0x3
   18894:	b.ne	195b4 <mpfr_mul@@Base+0x1600>  // b.any
   18898:	orr	x3, x6, x2
   1889c:	cbz	x3, 195b4 <mpfr_mul@@Base+0x1600>
   188a0:	str	x0, [x21, #16]
   188a4:	cbz	w24, 1898c <mpfr_mul@@Base+0x9d8>
   188a8:	cmp	w24, #0x1
   188ac:	b.eq	189a0 <mpfr_mul@@Base+0x9ec>  // b.none
   188b0:	add	w0, w24, w19, lsr #31
   188b4:	cmp	w0, #0x3
   188b8:	b.eq	189a0 <mpfr_mul@@Base+0x9ec>  // b.none
   188bc:	ldr	x0, [x7]
   188c0:	add	x5, x5, x0
   188c4:	str	x5, [x7]
   188c8:	cmp	x5, #0x0
   188cc:	ldr	x0, [x7, #8]
   188d0:	cinc	x0, x0, eq  // eq = none
   188d4:	cbnz	x0, 189d0 <mpfr_mul@@Base+0xa1c>
   188d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   188dc:	str	x0, [x7, #8]
   188e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   188e4:	ldr	x2, [x0, #2544]
   188e8:	add	x0, x0, #0x9f0
   188ec:	blr	x2
   188f0:	mrs	x2, tpidr_el0
   188f4:	ldr	x0, [x2, x0]
   188f8:	cmp	x1, x0
   188fc:	b.ge	189d8 <mpfr_mul@@Base+0xa24>  // b.tcont
   18900:	add	x1, x1, #0x1
   18904:	str	x1, [x21, #16]
   18908:	ldr	w19, [x21, #8]
   1890c:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18910:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18914:	ldr	x1, [x0, #2576]
   18918:	add	x0, x0, #0xa10
   1891c:	blr	x1
   18920:	mrs	x1, tpidr_el0
   18924:	add	x0, x1, x0
   18928:	ldr	w1, [x0]
   1892c:	orr	w1, w1, #0x8
   18930:	str	w1, [x0]
   18934:	b	18334 <mpfr_mul@@Base+0x380>
   18938:	cbnz	w24, 18964 <mpfr_mul@@Base+0x9b0>
   1893c:	b.lt	1897c <mpfr_mul@@Base+0x9c8>  // b.tstop
   18940:	ldr	x1, [x7, #8]
   18944:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18948:	cmp	x1, x0
   1894c:	b.ne	18984 <mpfr_mul@@Base+0x9d0>  // b.any
   18950:	ldr	x0, [x7]
   18954:	orr	x6, x6, x0
   18958:	orr	x2, x6, x2
   1895c:	cmp	x2, #0x0
   18960:	cset	w24, eq  // eq = none
   18964:	mov	w2, w19
   18968:	mov	w1, w24
   1896c:	mov	x0, x21
   18970:	bl	c3c0 <mpfr_underflow@plt>
   18974:	mov	w19, w0
   18978:	b	18334 <mpfr_mul@@Base+0x380>
   1897c:	mov	w24, #0x1                   	// #1
   18980:	b	18964 <mpfr_mul@@Base+0x9b0>
   18984:	mov	w24, #0x0                   	// #0
   18988:	b	18964 <mpfr_mul@@Base+0x9b0>
   1898c:	cbz	x6, 189a0 <mpfr_mul@@Base+0x9ec>
   18990:	cbnz	x2, 188bc <mpfr_mul@@Base+0x908>
   18994:	ldr	x0, [x7]
   18998:	lsr	x26, x0, x26
   1899c:	tbnz	w26, #0, 188bc <mpfr_mul@@Base+0x908>
   189a0:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   189a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   189a8:	ldr	x1, [x0, #2576]
   189ac:	add	x0, x0, #0xa10
   189b0:	blr	x1
   189b4:	mrs	x1, tpidr_el0
   189b8:	add	x0, x1, x0
   189bc:	ldr	w1, [x0]
   189c0:	orr	w1, w1, #0x8
   189c4:	str	w1, [x0]
   189c8:	neg	w19, w19
   189cc:	b	18334 <mpfr_mul@@Base+0x380>
   189d0:	str	x0, [x7, #8]
   189d4:	b	18908 <mpfr_mul@@Base+0x954>
   189d8:	ldr	w2, [x21, #8]
   189dc:	mov	w1, w24
   189e0:	mov	x0, x21
   189e4:	bl	bf40 <mpfr_overflow@plt>
   189e8:	mov	w19, w0
   189ec:	b	18334 <mpfr_mul@@Base+0x380>
   189f0:	ldr	x5, [x21, #24]
   189f4:	ldr	x0, [x23, #24]
   189f8:	ldr	x0, [x0]
   189fc:	ldr	x3, [x22, #24]
   18a00:	ldr	x4, [x3]
   18a04:	add	x1, x1, x2
   18a08:	umulh	x3, x0, x4
   18a0c:	mul	x2, x0, x4
   18a10:	tbnz	x3, #63, 18a20 <mpfr_mul@@Base+0xa6c>
   18a14:	sub	x1, x1, #0x1
   18a18:	extr	x3, x3, x2, #63
   18a1c:	lsl	x2, x2, #1
   18a20:	str	x3, [x5]
   18a24:	ldr	w19, [x23, #8]
   18a28:	ldr	w0, [x22, #8]
   18a2c:	mul	w19, w19, w0
   18a30:	str	w19, [x21, #8]
   18a34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18a38:	ldr	x3, [x0, #2544]
   18a3c:	add	x0, x0, #0x9f0
   18a40:	blr	x3
   18a44:	mrs	x3, tpidr_el0
   18a48:	ldr	x0, [x3, x0]
   18a4c:	cmp	x0, x1
   18a50:	b.lt	18a8c <mpfr_mul@@Base+0xad8>  // b.tstop
   18a54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18a58:	ldr	x3, [x0, #2512]
   18a5c:	add	x0, x0, #0x9d0
   18a60:	blr	x3
   18a64:	mrs	x3, tpidr_el0
   18a68:	ldr	x0, [x3, x0]
   18a6c:	cmp	x1, x0
   18a70:	b.lt	18aa4 <mpfr_mul@@Base+0xaf0>  // b.tstop
   18a74:	str	x1, [x21, #16]
   18a78:	cmp	x2, #0x0
   18a7c:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   18a80:	b.ne	18ae8 <mpfr_mul@@Base+0xb34>  // b.any
   18a84:	mov	w19, #0x0                   	// #0
   18a88:	b	18334 <mpfr_mul@@Base+0x380>
   18a8c:	mov	w2, w19
   18a90:	mov	w1, w24
   18a94:	mov	x0, x21
   18a98:	bl	bf40 <mpfr_overflow@plt>
   18a9c:	mov	w19, w0
   18aa0:	b	18334 <mpfr_mul@@Base+0x380>
   18aa4:	sub	x0, x0, #0x1
   18aa8:	cmp	x1, x0
   18aac:	b.ne	18b6c <mpfr_mul@@Base+0xbb8>  // b.any
   18ab0:	ldr	x3, [x5]
   18ab4:	cmn	x3, #0x1
   18ab8:	b.ne	195bc <mpfr_mul@@Base+0x1608>  // b.any
   18abc:	cmp	w24, #0x0
   18ac0:	ccmp	x2, #0x0, #0x0, eq  // eq = none
   18ac4:	b.lt	196cc <mpfr_mul@@Base+0x1718>  // b.tstop
   18ac8:	cmp	w24, #0x4
   18acc:	b.eq	19714 <mpfr_mul@@Base+0x1760>  // b.none
   18ad0:	mvn	w3, w19
   18ad4:	add	w3, w24, w3, lsr #31
   18ad8:	cmp	w3, #0x3
   18adc:	b.ne	195bc <mpfr_mul@@Base+0x1608>  // b.any
   18ae0:	cbz	x2, 195bc <mpfr_mul@@Base+0x1608>
   18ae4:	str	x0, [x21, #16]
   18ae8:	cbz	w24, 196d0 <mpfr_mul@@Base+0x171c>
   18aec:	cmp	w24, #0x1
   18af0:	b.eq	196e4 <mpfr_mul@@Base+0x1730>  // b.none
   18af4:	add	w0, w24, w19, lsr #31
   18af8:	cmp	w0, #0x3
   18afc:	b.eq	196e4 <mpfr_mul@@Base+0x1730>  // b.none
   18b00:	ldr	x0, [x5]
   18b04:	adds	x0, x0, #0x1
   18b08:	b.ne	18ba8 <mpfr_mul@@Base+0xbf4>  // b.any
   18b0c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18b10:	str	x0, [x5]
   18b14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18b18:	ldr	x2, [x0, #2544]
   18b1c:	add	x0, x0, #0x9f0
   18b20:	blr	x2
   18b24:	mrs	x2, tpidr_el0
   18b28:	ldr	x0, [x2, x0]
   18b2c:	cmp	x1, x0
   18b30:	b.ge	18bb0 <mpfr_mul@@Base+0xbfc>  // b.tcont
   18b34:	add	x1, x1, #0x1
   18b38:	str	x1, [x21, #16]
   18b3c:	ldr	w19, [x21, #8]
   18b40:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18b44:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18b48:	ldr	x1, [x0, #2576]
   18b4c:	add	x0, x0, #0xa10
   18b50:	blr	x1
   18b54:	mrs	x1, tpidr_el0
   18b58:	add	x0, x1, x0
   18b5c:	ldr	w1, [x0]
   18b60:	orr	w1, w1, #0x8
   18b64:	str	w1, [x0]
   18b68:	b	18334 <mpfr_mul@@Base+0x380>
   18b6c:	cbnz	w24, 18b88 <mpfr_mul@@Base+0xbd4>
   18b70:	b.lt	18ba0 <mpfr_mul@@Base+0xbec>  // b.tstop
   18b74:	ldr	x1, [x5]
   18b78:	cmp	x2, #0x0
   18b7c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18b80:	ccmp	x1, x0, #0x0, eq  // eq = none
   18b84:	cset	w24, eq  // eq = none
   18b88:	mov	w2, w19
   18b8c:	mov	w1, w24
   18b90:	mov	x0, x21
   18b94:	bl	c3c0 <mpfr_underflow@plt>
   18b98:	mov	w19, w0
   18b9c:	b	18334 <mpfr_mul@@Base+0x380>
   18ba0:	mov	w24, #0x1                   	// #1
   18ba4:	b	18b88 <mpfr_mul@@Base+0xbd4>
   18ba8:	str	x0, [x5]
   18bac:	b	18b3c <mpfr_mul@@Base+0xb88>
   18bb0:	ldr	w2, [x21, #8]
   18bb4:	mov	w1, w24
   18bb8:	mov	x0, x21
   18bbc:	bl	bf40 <mpfr_overflow@plt>
   18bc0:	mov	w19, w0
   18bc4:	b	18334 <mpfr_mul@@Base+0x380>
   18bc8:	ldr	x25, [x21, #24]
   18bcc:	add	x20, x1, x2
   18bd0:	mov	x27, #0xc0                  	// #192
   18bd4:	sub	x27, x27, x26
   18bd8:	mov	x26, #0x1                   	// #1
   18bdc:	lsl	x26, x26, x27
   18be0:	sub	x19, x26, #0x1
   18be4:	ldr	x1, [x23, #24]
   18be8:	ldr	x2, [x22, #24]
   18bec:	ldr	x4, [x1, #16]
   18bf0:	ldr	x8, [x2, #16]
   18bf4:	umulh	x7, x4, x8
   18bf8:	ldr	x9, [x2, #8]
   18bfc:	umulh	x0, x4, x9
   18c00:	madd	x3, x4, x8, x0
   18c04:	cmp	x0, x3
   18c08:	cinc	x7, x7, hi  // hi = pmore
   18c0c:	ldr	x6, [x1, #8]
   18c10:	umulh	x10, x6, x8
   18c14:	mul	x5, x8, x6
   18c18:	madd	x0, x4, x9, x5
   18c1c:	ldr	x11, [x2]
   18c20:	umulh	x4, x4, x11
   18c24:	cmp	x5, x0
   18c28:	cset	x5, hi  // hi = pmore
   18c2c:	adds	x0, x0, x4
   18c30:	cinc	x4, x5, cs  // cs = hs, nlast
   18c34:	umulh	x6, x6, x9
   18c38:	ldr	x5, [x1]
   18c3c:	umulh	x8, x5, x8
   18c40:	adds	x0, x0, x6
   18c44:	cset	x5, cs  // cs = hs, nlast
   18c48:	adds	x0, x0, x8
   18c4c:	adc	x4, x4, x5
   18c50:	adds	x3, x3, x10
   18c54:	cset	x5, cs  // cs = hs, nlast
   18c58:	adds	x3, x3, x4
   18c5c:	adc	x4, x7, x5
   18c60:	add	x6, x0, #0x4
   18c64:	and	x6, x6, x19, lsr #2
   18c68:	mov	x5, #0x1                   	// #1
   18c6c:	mov	x7, x5
   18c70:	cmp	x6, #0x4
   18c74:	b.ls	18d30 <mpfr_mul@@Base+0xd7c>  // b.plast
   18c78:	tbnz	x4, #63, 18c90 <mpfr_mul@@Base+0xcdc>
   18c7c:	sub	x20, x20, #0x1
   18c80:	extr	x4, x4, x3, #63
   18c84:	extr	x3, x3, x0, #63
   18c88:	extr	x0, x0, x7, #63
   18c8c:	lsl	x7, x7, #1
   18c90:	str	x4, [x25, #16]
   18c94:	str	x3, [x25, #8]
   18c98:	sub	w2, w27, #0x1
   18c9c:	mov	x1, #0x1                   	// #1
   18ca0:	lsl	x1, x1, x2
   18ca4:	and	x2, x1, x0
   18ca8:	orr	x5, x5, x7
   18cac:	eor	x1, x19, x1
   18cb0:	and	x1, x1, x0
   18cb4:	orr	x1, x1, x5
   18cb8:	neg	x3, x26
   18cbc:	and	x0, x0, x3
   18cc0:	str	x0, [x25]
   18cc4:	ldr	w19, [x23, #8]
   18cc8:	ldr	w0, [x22, #8]
   18ccc:	mul	w19, w19, w0
   18cd0:	str	w19, [x21, #8]
   18cd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18cd8:	ldr	x4, [x0, #2544]
   18cdc:	add	x0, x0, #0x9f0
   18ce0:	blr	x4
   18ce4:	mrs	x4, tpidr_el0
   18ce8:	ldr	x0, [x4, x0]
   18cec:	cmp	x0, x20
   18cf0:	b.lt	18d5c <mpfr_mul@@Base+0xda8>  // b.tstop
   18cf4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18cf8:	ldr	x4, [x0, #2512]
   18cfc:	add	x0, x0, #0x9d0
   18d00:	blr	x4
   18d04:	mrs	x4, tpidr_el0
   18d08:	ldr	x0, [x4, x0]
   18d0c:	cmp	x20, x0
   18d10:	b.lt	18d74 <mpfr_mul@@Base+0xdc0>  // b.tstop
   18d14:	str	x20, [x21, #16]
   18d18:	orr	x0, x2, x1
   18d1c:	cmp	x0, #0x0
   18d20:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   18d24:	b.ne	18dd4 <mpfr_mul@@Base+0xe20>  // b.any
   18d28:	mov	w19, #0x0                   	// #0
   18d2c:	b	18334 <mpfr_mul@@Base+0x380>
   18d30:	mov	x3, #0x3                   	// #3
   18d34:	add	x0, x29, #0xe8
   18d38:	bl	c470 <__gmpn_mul_n@plt>
   18d3c:	ldr	x4, [x29, #272]
   18d40:	ldr	x3, [x29, #264]
   18d44:	ldr	x0, [x29, #256]
   18d48:	ldr	x7, [x29, #248]
   18d4c:	ldr	x5, [x29, #240]
   18d50:	ldr	x1, [x29, #232]
   18d54:	orr	x5, x5, x1
   18d58:	b	18c78 <mpfr_mul@@Base+0xcc4>
   18d5c:	mov	w2, w19
   18d60:	mov	w1, w24
   18d64:	mov	x0, x21
   18d68:	bl	bf40 <mpfr_overflow@plt>
   18d6c:	mov	w19, w0
   18d70:	b	18334 <mpfr_mul@@Base+0x380>
   18d74:	sub	x0, x0, #0x1
   18d78:	cmp	x20, x0
   18d7c:	b.ne	18e7c <mpfr_mul@@Base+0xec8>  // b.any
   18d80:	ldr	x4, [x25, #16]
   18d84:	cmn	x4, #0x1
   18d88:	b.ne	195cc <mpfr_mul@@Base+0x1618>  // b.any
   18d8c:	ldr	x4, [x25, #8]
   18d90:	cmn	x4, #0x1
   18d94:	b.ne	195cc <mpfr_mul@@Base+0x1618>  // b.any
   18d98:	ldr	x4, [x25]
   18d9c:	cmp	x3, x4
   18da0:	b.ne	195cc <mpfr_mul@@Base+0x1618>  // b.any
   18da4:	cmp	w24, #0x0
   18da8:	ccmp	x2, #0x0, #0x4, eq  // eq = none
   18dac:	b.ne	195c4 <mpfr_mul@@Base+0x1610>  // b.any
   18db0:	cmp	w24, #0x4
   18db4:	b.eq	19720 <mpfr_mul@@Base+0x176c>  // b.none
   18db8:	mvn	w3, w19
   18dbc:	add	w3, w24, w3, lsr #31
   18dc0:	cmp	w3, #0x3
   18dc4:	b.ne	195cc <mpfr_mul@@Base+0x1618>  // b.any
   18dc8:	orr	x3, x2, x1
   18dcc:	cbz	x3, 195cc <mpfr_mul@@Base+0x1618>
   18dd0:	str	x0, [x21, #16]
   18dd4:	cbz	w24, 18ee0 <mpfr_mul@@Base+0xf2c>
   18dd8:	cmp	w24, #0x1
   18ddc:	b.eq	18ef4 <mpfr_mul@@Base+0xf40>  // b.none
   18de0:	add	w0, w24, w19, lsr #31
   18de4:	cmp	w0, #0x3
   18de8:	b.eq	18ef4 <mpfr_mul@@Base+0xf40>  // b.none
   18dec:	ldr	x0, [x25]
   18df0:	add	x26, x26, x0
   18df4:	str	x26, [x25]
   18df8:	cmp	x26, #0x0
   18dfc:	ldr	x0, [x25, #8]
   18e00:	cinc	x0, x0, eq  // eq = none
   18e04:	str	x0, [x25, #8]
   18e08:	orr	x26, x26, x0
   18e0c:	cmp	x26, #0x0
   18e10:	ldr	x0, [x25, #16]
   18e14:	cinc	x0, x0, eq  // eq = none
   18e18:	cbnz	x0, 18f24 <mpfr_mul@@Base+0xf70>
   18e1c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18e20:	str	x0, [x25, #16]
   18e24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18e28:	ldr	x1, [x0, #2544]
   18e2c:	add	x0, x0, #0x9f0
   18e30:	blr	x1
   18e34:	mrs	x1, tpidr_el0
   18e38:	ldr	x0, [x1, x0]
   18e3c:	cmp	x20, x0
   18e40:	b.ge	18f2c <mpfr_mul@@Base+0xf78>  // b.tcont
   18e44:	add	x1, x20, #0x1
   18e48:	str	x1, [x21, #16]
   18e4c:	ldr	w19, [x21, #8]
   18e50:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18e54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18e58:	ldr	x1, [x0, #2576]
   18e5c:	add	x0, x0, #0xa10
   18e60:	blr	x1
   18e64:	mrs	x1, tpidr_el0
   18e68:	add	x0, x1, x0
   18e6c:	ldr	w1, [x0]
   18e70:	orr	w1, w1, #0x8
   18e74:	str	w1, [x0]
   18e78:	b	18334 <mpfr_mul@@Base+0x380>
   18e7c:	cbnz	w24, 18eb0 <mpfr_mul@@Base+0xefc>
   18e80:	b.lt	18ec8 <mpfr_mul@@Base+0xf14>  // b.tstop
   18e84:	ldr	x3, [x25, #16]
   18e88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18e8c:	cmp	x3, x0
   18e90:	b.ne	18ed0 <mpfr_mul@@Base+0xf1c>  // b.any
   18e94:	ldr	x0, [x25, #8]
   18e98:	cbnz	x0, 18ed8 <mpfr_mul@@Base+0xf24>
   18e9c:	ldr	x0, [x25]
   18ea0:	orr	x2, x2, x0
   18ea4:	orr	x1, x2, x1
   18ea8:	cmp	x1, #0x0
   18eac:	cset	w24, eq  // eq = none
   18eb0:	mov	w2, w19
   18eb4:	mov	w1, w24
   18eb8:	mov	x0, x21
   18ebc:	bl	c3c0 <mpfr_underflow@plt>
   18ec0:	mov	w19, w0
   18ec4:	b	18334 <mpfr_mul@@Base+0x380>
   18ec8:	mov	w24, #0x1                   	// #1
   18ecc:	b	18eb0 <mpfr_mul@@Base+0xefc>
   18ed0:	mov	w24, #0x0                   	// #0
   18ed4:	b	18eb0 <mpfr_mul@@Base+0xefc>
   18ed8:	mov	w24, #0x0                   	// #0
   18edc:	b	18eb0 <mpfr_mul@@Base+0xefc>
   18ee0:	cbz	x2, 18ef4 <mpfr_mul@@Base+0xf40>
   18ee4:	cbnz	x1, 18dec <mpfr_mul@@Base+0xe38>
   18ee8:	ldr	x0, [x25]
   18eec:	lsr	x27, x0, x27
   18ef0:	tbnz	w27, #0, 18dec <mpfr_mul@@Base+0xe38>
   18ef4:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   18ef8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   18efc:	ldr	x1, [x0, #2576]
   18f00:	add	x0, x0, #0xa10
   18f04:	blr	x1
   18f08:	mrs	x1, tpidr_el0
   18f0c:	add	x0, x1, x0
   18f10:	ldr	w1, [x0]
   18f14:	orr	w1, w1, #0x8
   18f18:	str	w1, [x0]
   18f1c:	neg	w19, w19
   18f20:	b	18334 <mpfr_mul@@Base+0x380>
   18f24:	str	x0, [x25, #16]
   18f28:	b	18e4c <mpfr_mul@@Base+0xe98>
   18f2c:	ldr	w2, [x21, #8]
   18f30:	mov	w1, w24
   18f34:	mov	x0, x21
   18f38:	bl	bf40 <mpfr_overflow@plt>
   18f3c:	mov	w19, w0
   18f40:	b	18334 <mpfr_mul@@Base+0x380>
   18f44:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   18f48:	add	x2, x2, #0x478
   18f4c:	mov	w1, #0x318                 	// #792
   18f50:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   18f54:	add	x0, x0, #0x4c8
   18f58:	bl	cb40 <mpfr_assert_fail@plt>
   18f5c:	ldr	x1, [x29, #136]
   18f60:	add	x0, x29, #0x118
   18f64:	bl	bdc0 <mpfr_tmp_allocate@plt>
   18f68:	mov	x25, x0
   18f6c:	b	180dc <mpfr_mul@@Base+0x128>
   18f70:	mov	x0, x27
   18f74:	mov	x27, x28
   18f78:	mov	x28, x0
   18f7c:	mov	x0, x23
   18f80:	mov	x23, x22
   18f84:	mov	x22, x0
   18f88:	b	180ec <mpfr_mul@@Base+0x138>
   18f8c:	ldr	x0, [x23, #24]
   18f90:	ldr	x0, [x0, #8]
   18f94:	ldr	x1, [x22, #24]
   18f98:	ldr	x3, [x1]
   18f9c:	umulh	x1, x0, x3
   18fa0:	ldr	x2, [x25, #8]
   18fa4:	mul	x0, x0, x3
   18fa8:	adds	x3, x2, x0
   18fac:	adc	x0, x1, xzr
   18fb0:	str	x0, [x25, #16]
   18fb4:	str	x3, [x5]
   18fb8:	ldr	x0, [x25, #16]
   18fbc:	b	181b4 <mpfr_mul@@Base+0x200>
   18fc0:	mov	w3, #0x1                   	// #1
   18fc4:	mov	x0, x1
   18fc8:	bl	bcc0 <__gmpn_lshift@plt>
   18fcc:	b	181d4 <mpfr_mul@@Base+0x220>
   18fd0:	cmp	x28, #0x14
   18fd4:	b.gt	19020 <mpfr_mul@@Base+0x106c>
   18fd8:	mov	x4, x28
   18fdc:	ldr	x3, [x22, #24]
   18fe0:	mov	x2, x27
   18fe4:	ldr	x1, [x23, #24]
   18fe8:	mov	x0, x25
   18fec:	bl	c7a0 <__gmpn_mul@plt>
   18ff0:	lsr	x1, x0, #63
   18ff4:	str	x1, [x29, #168]
   18ff8:	ldr	x1, [x29, #144]
   18ffc:	ldr	x2, [x29, #176]
   19000:	sub	x1, x1, x2
   19004:	add	x1, x25, x1, lsl #3
   19008:	str	x1, [x29, #152]
   1900c:	tbnz	x0, #63, 181d4 <mpfr_mul@@Base+0x220>
   19010:	mov	w3, #0x1                   	// #1
   19014:	mov	x0, x1
   19018:	bl	bcc0 <__gmpn_lshift@plt>
   1901c:	b	181d4 <mpfr_mul@@Base+0x220>
   19020:	ldr	x0, [x23, #24]
   19024:	str	x0, [x29, #152]
   19028:	ldr	x1, [x22, #24]
   1902c:	str	x1, [x29, #168]
   19030:	ldr	x0, [x0]
   19034:	cbz	x0, 19134 <mpfr_mul@@Base+0x1180>
   19038:	ldr	x0, [x29, #168]
   1903c:	ldr	x0, [x0]
   19040:	cbz	x0, 19168 <mpfr_mul@@Base+0x11b4>
   19044:	ldr	x1, [x21]
   19048:	add	x0, x1, #0x3e
   1904c:	subs	x1, x1, #0x1
   19050:	csel	x0, x0, x1, mi  // mi = first
   19054:	asr	x0, x0, #6
   19058:	add	x0, x0, #0x2
   1905c:	cmp	x28, x0
   19060:	csel	x2, x28, x0, le
   19064:	str	x2, [x29, #128]
   19068:	lsl	x3, x2, #6
   1906c:	str	x3, [x29, #104]
   19070:	add	x0, x2, #0x1
   19074:	str	x0, [x29, #112]
   19078:	clz	x1, x0
   1907c:	mov	w0, #0x40                  	// #64
   19080:	sub	w0, w0, w1
   19084:	sub	x1, x3, w0, sxtw
   19088:	str	x1, [x29, #120]
   1908c:	sub	x0, x27, x2
   19090:	ldr	x3, [x29, #152]
   19094:	add	x0, x3, x0, lsl #3
   19098:	str	x0, [x29, #152]
   1909c:	sub	x0, x28, x2
   190a0:	ldr	x2, [x29, #168]
   190a4:	add	x0, x2, x0, lsl #3
   190a8:	str	x0, [x29, #168]
   190ac:	sub	x0, x1, #0x4
   190b0:	cmp	x26, x0
   190b4:	b.ge	19220 <mpfr_mul@@Base+0x126c>  // b.tcont
   190b8:	cmp	x23, x22
   190bc:	b.eq	193b8 <mpfr_mul@@Base+0x1404>  // b.none
   190c0:	ldr	x3, [x29, #128]
   190c4:	ldr	x0, [x29, #144]
   190c8:	sub	x0, x0, x3, lsl #1
   190cc:	ldr	x2, [x29, #168]
   190d0:	ldr	x1, [x29, #152]
   190d4:	add	x0, x25, x0, lsl #3
   190d8:	bl	bc80 <mpfr_mulhigh_n@plt>
   190dc:	ldr	x0, [x29, #136]
   190e0:	add	x0, x25, x0
   190e4:	ldur	x0, [x0, #-8]
   190e8:	lsr	x1, x0, #63
   190ec:	str	x1, [x29, #168]
   190f0:	tbz	x0, #63, 193d4 <mpfr_mul@@Base+0x1420>
   190f4:	ldr	x0, [x29, #144]
   190f8:	ldr	x1, [x29, #176]
   190fc:	sub	x0, x0, x1
   19100:	add	x0, x25, x0, lsl #3
   19104:	str	x0, [x29, #152]
   19108:	cmp	w24, #0x5
   1910c:	csinc	w24, w24, wzr, ne  // ne = any
   19110:	cmp	w24, #0x0
   19114:	ldr	x2, [x29, #120]
   19118:	sub	x2, x2, #0x1
   1911c:	cinc	x3, x26, eq  // eq = none
   19120:	ldr	x4, [x29, #168]
   19124:	add	x2, x2, x4
   19128:	bl	c370 <mpfr_round_p@plt>
   1912c:	cbnz	w0, 181d4 <mpfr_mul@@Base+0x220>
   19130:	b	18fd8 <mpfr_mul@@Base+0x1024>
   19134:	ldr	x0, [x29, #152]
   19138:	ldr	x0, [x0, #8]
   1913c:	cbnz	x0, 19038 <mpfr_mul@@Base+0x1084>
   19140:	ldr	x0, [x29, #280]
   19144:	cbnz	x0, 19178 <mpfr_mul@@Base+0x11c4>
   19148:	ldr	x0, [x29, #152]
   1914c:	ldr	x0, [x0]
   19150:	cbnz	x0, 19180 <mpfr_mul@@Base+0x11cc>
   19154:	ldr	x0, [x29, #152]
   19158:	add	x0, x0, #0x8
   1915c:	str	x0, [x29, #152]
   19160:	sub	x27, x27, #0x1
   19164:	b	19148 <mpfr_mul@@Base+0x1194>
   19168:	ldr	x0, [x29, #168]
   1916c:	ldr	x0, [x0, #8]
   19170:	cbnz	x0, 19044 <mpfr_mul@@Base+0x1090>
   19174:	b	19140 <mpfr_mul@@Base+0x118c>
   19178:	bl	c410 <mpfr_tmp_free@plt>
   1917c:	b	19148 <mpfr_mul@@Base+0x1194>
   19180:	ldr	x0, [x29, #168]
   19184:	ldr	x0, [x0]
   19188:	cbnz	x0, 191a0 <mpfr_mul@@Base+0x11ec>
   1918c:	ldr	x0, [x29, #168]
   19190:	add	x0, x0, #0x8
   19194:	str	x0, [x29, #168]
   19198:	sub	x28, x28, #0x1
   1919c:	b	19180 <mpfr_mul@@Base+0x11cc>
   191a0:	ldr	w0, [x23, #8]
   191a4:	str	w0, [x29, #208]
   191a8:	ldr	x0, [x23, #16]
   191ac:	str	x0, [x29, #216]
   191b0:	lsl	x27, x27, #6
   191b4:	str	x27, [x29, #200]
   191b8:	ldr	x0, [x29, #152]
   191bc:	str	x0, [x29, #224]
   191c0:	cmp	x23, x22
   191c4:	b.eq	19204 <mpfr_mul@@Base+0x1250>  // b.none
   191c8:	ldr	w0, [x22, #8]
   191cc:	str	w0, [x29, #240]
   191d0:	ldr	x0, [x22, #16]
   191d4:	str	x0, [x29, #248]
   191d8:	lsl	x28, x28, #6
   191dc:	str	x28, [x29, #232]
   191e0:	ldr	x0, [x29, #168]
   191e4:	str	x0, [x29, #256]
   191e8:	mov	w3, w24
   191ec:	add	x2, x29, #0xe8
   191f0:	add	x1, x29, #0xc8
   191f4:	mov	x0, x21
   191f8:	bl	17fb4 <mpfr_mul@@Base>
   191fc:	mov	w19, w0
   19200:	b	18334 <mpfr_mul@@Base+0x380>
   19204:	add	x1, x29, #0xc8
   19208:	mov	w3, w24
   1920c:	mov	x2, x1
   19210:	mov	x0, x21
   19214:	bl	17fb4 <mpfr_mul@@Base>
   19218:	mov	w19, w0
   1921c:	b	18334 <mpfr_mul@@Base+0x380>
   19220:	ldr	x0, [x29, #120]
   19224:	add	x0, x0, #0x3b
   19228:	cmp	x26, x0
   1922c:	ccmp	x27, #0x15, #0x4, le
   19230:	b.le	18fd8 <mpfr_mul@@Base+0x1024>
   19234:	ldr	x0, [x29, #128]
   19238:	cmp	x27, x0
   1923c:	b.le	192dc <mpfr_mul@@Base+0x1328>
   19240:	ldr	x0, [x29, #152]
   19244:	sub	x0, x0, #0x8
   19248:	str	x0, [x29, #152]
   1924c:	cmp	x23, x22
   19250:	b.eq	1926c <mpfr_mul@@Base+0x12b8>  // b.none
   19254:	ldr	x0, [x29, #128]
   19258:	cmp	x28, x0
   1925c:	b.le	1933c <mpfr_mul@@Base+0x1388>
   19260:	ldr	x0, [x29, #168]
   19264:	sub	x0, x0, #0x8
   19268:	str	x0, [x29, #168]
   1926c:	ldr	x3, [x29, #128]
   19270:	add	x1, x3, #0x2
   19274:	clz	x2, x1
   19278:	ldr	x0, [x29, #104]
   1927c:	add	x0, x0, #0x40
   19280:	mov	w1, #0x40                  	// #64
   19284:	sub	w1, w1, w2
   19288:	sub	x0, x0, w1, sxtw
   1928c:	str	x0, [x29, #120]
   19290:	add	x0, x3, #0x1
   19294:	lsl	x1, x0, #1
   19298:	str	x1, [x29, #128]
   1929c:	ldr	x1, [x29, #144]
   192a0:	cmp	x1, x0, lsl #1
   192a4:	b.ge	193ac <mpfr_mul@@Base+0x13f8>  // b.tcont
   192a8:	ldr	x0, [x29, #112]
   192ac:	lsl	x1, x0, #4
   192b0:	cmp	x1, #0x4, lsl #12
   192b4:	b.hi	1939c <mpfr_mul@@Base+0x13e8>  // b.pmore
   192b8:	sub	sp, sp, x1
   192bc:	mov	x25, sp
   192c0:	ldr	x0, [x29, #128]
   192c4:	ldr	x1, [x29, #144]
   192c8:	sub	x0, x0, x1
   192cc:	add	x25, x25, x0, lsl #3
   192d0:	ldr	x0, [x29, #112]
   192d4:	str	x0, [x29, #128]
   192d8:	b	190b8 <mpfr_mul@@Base+0x1104>
   192dc:	ldr	x0, [x29, #112]
   192e0:	lsl	x1, x0, #3
   192e4:	cmp	x1, #0x4, lsl #12
   192e8:	b.hi	1932c <mpfr_mul@@Base+0x1378>  // b.pmore
   192ec:	add	x0, x1, #0xf
   192f0:	and	x0, x0, #0xfffffffffffffff0
   192f4:	sub	sp, sp, x0
   192f8:	mov	x0, sp
   192fc:	str	x0, [x29, #152]
   19300:	ldr	x0, [x29, #152]
   19304:	str	xzr, [x0], #8
   19308:	ldr	x2, [x23, #24]
   1930c:	ldr	x3, [x29, #128]
   19310:	sub	x1, x27, x3
   19314:	add	x1, x2, x1, lsl #3
   19318:	cmp	x0, x1
   1931c:	b.eq	1924c <mpfr_mul@@Base+0x1298>  // b.none
   19320:	lsl	x2, x3, #3
   19324:	bl	ba10 <memcpy@plt>
   19328:	b	1924c <mpfr_mul@@Base+0x1298>
   1932c:	add	x0, x29, #0x118
   19330:	bl	bdc0 <mpfr_tmp_allocate@plt>
   19334:	str	x0, [x29, #152]
   19338:	b	19300 <mpfr_mul@@Base+0x134c>
   1933c:	ldr	x0, [x29, #112]
   19340:	lsl	x1, x0, #3
   19344:	cmp	x1, #0x4, lsl #12
   19348:	b.hi	1938c <mpfr_mul@@Base+0x13d8>  // b.pmore
   1934c:	add	x0, x1, #0xf
   19350:	and	x0, x0, #0xfffffffffffffff0
   19354:	sub	sp, sp, x0
   19358:	mov	x0, sp
   1935c:	str	x0, [x29, #168]
   19360:	ldr	x0, [x29, #168]
   19364:	str	xzr, [x0], #8
   19368:	ldr	x2, [x22, #24]
   1936c:	ldr	x3, [x29, #128]
   19370:	sub	x1, x28, x3
   19374:	add	x1, x2, x1, lsl #3
   19378:	cmp	x0, x1
   1937c:	b.eq	1926c <mpfr_mul@@Base+0x12b8>  // b.none
   19380:	lsl	x2, x3, #3
   19384:	bl	ba10 <memcpy@plt>
   19388:	b	1926c <mpfr_mul@@Base+0x12b8>
   1938c:	add	x0, x29, #0x118
   19390:	bl	bdc0 <mpfr_tmp_allocate@plt>
   19394:	str	x0, [x29, #168]
   19398:	b	19360 <mpfr_mul@@Base+0x13ac>
   1939c:	add	x0, x29, #0x118
   193a0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   193a4:	mov	x25, x0
   193a8:	b	192c0 <mpfr_mul@@Base+0x130c>
   193ac:	ldr	x0, [x29, #112]
   193b0:	str	x0, [x29, #128]
   193b4:	b	190b8 <mpfr_mul@@Base+0x1104>
   193b8:	ldr	x2, [x29, #128]
   193bc:	ldr	x0, [x29, #144]
   193c0:	sub	x0, x0, x2, lsl #1
   193c4:	ldr	x1, [x29, #152]
   193c8:	add	x0, x25, x0, lsl #3
   193cc:	bl	c490 <mpfr_sqrhigh_n@plt>
   193d0:	b	190dc <mpfr_mul@@Base+0x1128>
   193d4:	ldr	x0, [x29, #144]
   193d8:	ldr	x1, [x29, #128]
   193dc:	sub	x0, x0, x1
   193e0:	add	x0, x25, x0, lsl #3
   193e4:	sub	x0, x0, #0x8
   193e8:	mov	w3, #0x1                   	// #1
   193ec:	add	x2, x1, #0x1
   193f0:	mov	x1, x0
   193f4:	bl	bcc0 <__gmpn_lshift@plt>
   193f8:	b	190f4 <mpfr_mul@@Base+0x1140>
   193fc:	add	x1, x0, #0x3e
   19400:	subs	x0, x0, #0x1
   19404:	csel	x0, x1, x0, mi  // mi = first
   19408:	asr	x0, x0, #6
   1940c:	sub	x19, x0, x19
   19410:	lsl	x19, x19, #3
   19414:	add	x0, x25, x19
   19418:	ldr	x1, [x29, #152]
   1941c:	cmp	x0, x1
   19420:	b.eq	19430 <mpfr_mul@@Base+0x147c>  // b.none
   19424:	ldr	x2, [x29, #176]
   19428:	lsl	x2, x2, #3
   1942c:	bl	ba10 <memcpy@plt>
   19430:	mov	x2, x19
   19434:	mov	w1, #0x0                   	// #0
   19438:	mov	x0, x25
   1943c:	bl	c110 <memset@plt>
   19440:	mov	w19, #0x0                   	// #0
   19444:	b	182b8 <mpfr_mul@@Base+0x304>
   19448:	ldur	x3, [x1, #-8]
   1944c:	and	x7, x3, #0x8000000000000000
   19450:	and	x0, x3, #0x7fffffffffffffff
   19454:	cmp	w24, #0x0
   19458:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   1945c:	b.lt	195e8 <mpfr_mul@@Base+0x1634>  // b.tstop
   19460:	sub	x19, x19, x5
   19464:	subs	x4, x19, #0x1
   19468:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1946c:	b.ne	19490 <mpfr_mul@@Base+0x14dc>  // b.any
   19470:	mvn	x19, x19
   19474:	add	x3, x1, x19, lsl #3
   19478:	ldr	x0, [x3, x4, lsl #3]
   1947c:	subs	x4, x4, #0x1
   19480:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   19484:	b.eq	19478 <mpfr_mul@@Base+0x14c4>  // b.none
   19488:	mov	x20, #0x1                   	// #1
   1948c:	b	18274 <mpfr_mul@@Base+0x2c0>
   19490:	mov	x20, #0x1                   	// #1
   19494:	b	18274 <mpfr_mul@@Base+0x2c0>
   19498:	mov	w19, #0x0                   	// #0
   1949c:	b	18294 <mpfr_mul@@Base+0x2e0>
   194a0:	mov	w19, #0x0                   	// #0
   194a4:	b	18294 <mpfr_mul@@Base+0x2e0>
   194a8:	mov	x20, #0x1                   	// #1
   194ac:	mov	w19, #0x0                   	// #0
   194b0:	b	18294 <mpfr_mul@@Base+0x2e0>
   194b4:	cbnz	x0, 19614 <mpfr_mul@@Base+0x1660>
   194b8:	ldr	x0, [x1]
   194bc:	tst	x20, x0
   194c0:	b.ne	19614 <mpfr_mul@@Base+0x1660>  // b.any
   194c4:	ldr	w0, [x29, #188]
   194c8:	neg	w19, w0
   194cc:	b	18294 <mpfr_mul@@Base+0x2e0>
   194d0:	cmp	x25, x1
   194d4:	b.eq	19654 <mpfr_mul@@Base+0x16a0>  // b.none
   194d8:	cmp	x5, x0
   194dc:	b.le	19654 <mpfr_mul@@Base+0x16a0>
   194e0:	ldr	x2, [x1, x4, lsl #3]
   194e4:	str	x2, [x25, x4, lsl #3]
   194e8:	cmp	x5, x4
   194ec:	add	x4, x4, #0x1
   194f0:	b.gt	194e0 <mpfr_mul@@Base+0x152c>
   194f4:	b	19654 <mpfr_mul@@Base+0x16a0>
   194f8:	add	x7, x5, #0x1
   194fc:	mov	x0, #0x1                   	// #1
   19500:	cmp	x7, x0
   19504:	b.eq	195d4 <mpfr_mul@@Base+0x1620>  // b.none
   19508:	ldr	x3, [x1, x0, lsl #3]
   1950c:	add	x3, x3, #0x1
   19510:	str	x3, [x25, x0, lsl #3]
   19514:	add	x4, x0, #0x1
   19518:	cbnz	x3, 194d0 <mpfr_mul@@Base+0x151c>
   1951c:	mov	x0, x4
   19520:	b	19500 <mpfr_mul@@Base+0x154c>
   19524:	bl	c410 <mpfr_tmp_free@plt>
   19528:	b	182c0 <mpfr_mul@@Base+0x30c>
   1952c:	ldr	w2, [x29, #188]
   19530:	mov	w1, w24
   19534:	mov	x0, x21
   19538:	bl	bf40 <mpfr_overflow@plt>
   1953c:	mov	w19, w0
   19540:	b	18334 <mpfr_mul@@Base+0x380>
   19544:	cbnz	w24, 1957c <mpfr_mul@@Base+0x15c8>
   19548:	ldr	x1, [x29, #168]
   1954c:	ldr	x2, [x29, #160]
   19550:	add	x1, x1, x2
   19554:	cmp	x0, x1
   19558:	b.gt	19594 <mpfr_mul@@Base+0x15e0>
   1955c:	mov	x0, x23
   19560:	bl	bf00 <mpfr_powerof2_raw@plt>
   19564:	mov	w24, w0
   19568:	cbz	w0, 1957c <mpfr_mul@@Base+0x15c8>
   1956c:	mov	x0, x22
   19570:	bl	bf00 <mpfr_powerof2_raw@plt>
   19574:	cmp	w0, #0x0
   19578:	cset	w24, ne  // ne = any
   1957c:	ldr	w2, [x29, #188]
   19580:	mov	w1, w24
   19584:	mov	x0, x21
   19588:	bl	c3c0 <mpfr_underflow@plt>
   1958c:	mov	w19, w0
   19590:	b	18334 <mpfr_mul@@Base+0x380>
   19594:	mov	w24, #0x1                   	// #1
   19598:	b	1957c <mpfr_mul@@Base+0x15c8>
   1959c:	str	x0, [x21, #16]
   195a0:	b	18678 <mpfr_mul@@Base+0x6c4>
   195a4:	cbz	w24, 18630 <mpfr_mul@@Base+0x67c>
   195a8:	b	1864c <mpfr_mul@@Base+0x698>
   195ac:	str	x0, [x21, #16]
   195b0:	b	18990 <mpfr_mul@@Base+0x9dc>
   195b4:	cbz	w24, 18940 <mpfr_mul@@Base+0x98c>
   195b8:	b	18964 <mpfr_mul@@Base+0x9b0>
   195bc:	cbz	w24, 18b74 <mpfr_mul@@Base+0xbc0>
   195c0:	b	18b88 <mpfr_mul@@Base+0xbd4>
   195c4:	str	x0, [x21, #16]
   195c8:	b	18ee4 <mpfr_mul@@Base+0xf30>
   195cc:	cbz	w24, 18e84 <mpfr_mul@@Base+0xed0>
   195d0:	b	18eb0 <mpfr_mul@@Base+0xefc>
   195d4:	add	x2, x25, x2, lsl #3
   195d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   195dc:	stur	x0, [x2, #-8]
   195e0:	mov	x26, x6
   195e4:	b	19654 <mpfr_mul@@Base+0x16a0>
   195e8:	mov	x20, #0x1                   	// #1
   195ec:	cmp	w24, #0x5
   195f0:	b.eq	194a8 <mpfr_mul@@Base+0x14f4>  // b.none
   195f4:	cmp	w24, #0x1
   195f8:	b.eq	18284 <mpfr_mul@@Base+0x2d0>  // b.none
   195fc:	ldr	w3, [x29, #188]
   19600:	add	w3, w24, w3, lsr #31
   19604:	cmp	w3, #0x3
   19608:	b.eq	18284 <mpfr_mul@@Base+0x2d0>  // b.none
   1960c:	orr	x0, x7, x0
   19610:	cbz	x0, 194a0 <mpfr_mul@@Base+0x14ec>
   19614:	ldr	x0, [x1]
   19618:	add	x0, x20, x0
   1961c:	str	x0, [x25]
   19620:	cmp	x20, x0
   19624:	b.hi	194f8 <mpfr_mul@@Base+0x1544>  // b.pmore
   19628:	cmp	x25, x1
   1962c:	b.eq	19654 <mpfr_mul@@Base+0x16a0>  // b.none
   19630:	cmp	x2, #0x1
   19634:	b.le	19654 <mpfr_mul@@Base+0x16a0>
   19638:	add	x5, x5, #0x1
   1963c:	mov	x0, #0x1                   	// #1
   19640:	ldr	x2, [x1, x0, lsl #3]
   19644:	str	x2, [x25, x0, lsl #3]
   19648:	add	x0, x0, #0x1
   1964c:	cmp	x5, x0
   19650:	b.ne	19640 <mpfr_mul@@Base+0x168c>  // b.any
   19654:	neg	x20, x20
   19658:	ldr	x0, [x25]
   1965c:	and	x20, x0, x20
   19660:	str	x20, [x25]
   19664:	ldr	w19, [x29, #188]
   19668:	b	182b8 <mpfr_mul@@Base+0x304>
   1966c:	ldr	x2, [x22, #16]
   19670:	mov	x0, #0x2                   	// #2
   19674:	movk	x0, #0x8000, lsl #48
   19678:	cmp	x2, x0
   1967c:	b.eq	183a8 <mpfr_mul@@Base+0x3f4>  // b.none
   19680:	ldr	w0, [x22, #8]
   19684:	ldr	w3, [x23, #8]
   19688:	mul	w0, w0, w3
   1968c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   19690:	cmp	x2, x3
   19694:	b.eq	18418 <mpfr_mul@@Base+0x464>  // b.none
   19698:	str	w0, [x21, #8]
   1969c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   196a0:	str	x0, [x21, #16]
   196a4:	mov	w19, #0x0                   	// #0
   196a8:	b	18334 <mpfr_mul@@Base+0x380>
   196ac:	orr	x3, x6, x2
   196b0:	cbz	x3, 195a4 <mpfr_mul@@Base+0x15f0>
   196b4:	str	x0, [x21, #16]
   196b8:	b	185a4 <mpfr_mul@@Base+0x5f0>
   196bc:	orr	x3, x6, x2
   196c0:	cbz	x3, 195b4 <mpfr_mul@@Base+0x1600>
   196c4:	str	x0, [x21, #16]
   196c8:	b	188a4 <mpfr_mul@@Base+0x8f0>
   196cc:	str	x0, [x21, #16]
   196d0:	tbz	x2, #63, 196e4 <mpfr_mul@@Base+0x1730>
   196d4:	tst	x2, #0x7fffffffffffffff
   196d8:	b.ne	18b00 <mpfr_mul@@Base+0xb4c>  // b.any
   196dc:	ldr	x0, [x5]
   196e0:	tbnz	w0, #0, 18b00 <mpfr_mul@@Base+0xb4c>
   196e4:	cbz	w19, 18334 <mpfr_mul@@Base+0x380>
   196e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   196ec:	ldr	x1, [x0, #2576]
   196f0:	add	x0, x0, #0xa10
   196f4:	blr	x1
   196f8:	mrs	x1, tpidr_el0
   196fc:	add	x0, x1, x0
   19700:	ldr	w1, [x0]
   19704:	orr	w1, w1, #0x8
   19708:	str	w1, [x0]
   1970c:	neg	w19, w19
   19710:	b	18334 <mpfr_mul@@Base+0x380>
   19714:	cbz	x2, 195bc <mpfr_mul@@Base+0x1608>
   19718:	str	x0, [x21, #16]
   1971c:	b	18ae8 <mpfr_mul@@Base+0xb34>
   19720:	orr	x3, x2, x1
   19724:	cbz	x3, 195cc <mpfr_mul@@Base+0x1618>
   19728:	str	x0, [x21, #16]
   1972c:	b	18dd4 <mpfr_mul@@Base+0xe20>

0000000000019730 <mpfr_mul_ui@@Base>:
   19730:	stp	x29, x30, [sp, #-96]!
   19734:	mov	x29, sp
   19738:	stp	x19, x20, [sp, #16]
   1973c:	stp	x21, x22, [sp, #32]
   19740:	stp	x23, x24, [sp, #48]
   19744:	stp	x25, x26, [sp, #64]
   19748:	mov	x20, x0
   1974c:	mov	x19, x1
   19750:	mov	x22, x2
   19754:	ldr	x0, [x1, #16]
   19758:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1975c:	cmp	x0, x1
   19760:	b.le	1995c <mpfr_mul_ui@@Base+0x22c>
   19764:	mov	w21, w3
   19768:	cmp	x2, #0x1
   1976c:	b.ls	19a10 <mpfr_mul_ui@@Base+0x2e0>  // b.plast
   19770:	sub	x0, x2, #0x1
   19774:	tst	x0, x2
   19778:	b.eq	19a64 <mpfr_mul_ui@@Base+0x334>  // b.none
   1977c:	ldr	x0, [x19]
   19780:	add	x25, x0, #0x3e
   19784:	subs	x0, x0, #0x1
   19788:	csel	x25, x25, x0, mi  // mi = first
   1978c:	asr	x25, x25, #6
   19790:	add	x26, x25, #0x1
   19794:	str	xzr, [x29, #88]
   19798:	add	x25, x25, #0x2
   1979c:	lsl	x23, x25, #3
   197a0:	cmp	x23, #0x4, lsl #12
   197a4:	b.hi	19a88 <mpfr_mul_ui@@Base+0x358>  // b.pmore
   197a8:	add	x0, x23, #0xf
   197ac:	and	x0, x0, #0xfffffffffffffff0
   197b0:	sub	sp, sp, x0
   197b4:	mov	x24, sp
   197b8:	sub	x23, x23, #0x8
   197bc:	mov	x3, x22
   197c0:	mov	x2, x26
   197c4:	ldr	x1, [x19, #24]
   197c8:	mov	x0, x24
   197cc:	bl	cd30 <__gmpn_mul_1@plt>
   197d0:	str	x0, [x24, x23]
   197d4:	tbnz	x0, #63, 19a9c <mpfr_mul_ui@@Base+0x36c>
   197d8:	clz	x3, x0
   197dc:	mov	w23, w3
   197e0:	mov	x2, x25
   197e4:	mov	x1, x24
   197e8:	mov	x0, x24
   197ec:	bl	bcc0 <__gmpn_lshift@plt>
   197f0:	lsl	x1, x25, #6
   197f4:	ldr	x0, [x20]
   197f8:	ldr	x22, [x20, #24]
   197fc:	cmp	x0, x25, lsl #6
   19800:	b.ge	19aa4 <mpfr_mul_ui@@Base+0x374>  // b.tcont
   19804:	add	x4, x1, #0x3e
   19808:	subs	x1, x1, #0x1
   1980c:	csel	x4, x4, x1, mi  // mi = first
   19810:	asr	x4, x4, #6
   19814:	add	x6, x0, #0x3e
   19818:	subs	x1, x0, #0x1
   1981c:	csel	x6, x6, x1, mi  // mi = first
   19820:	asr	x6, x6, #6
   19824:	add	x2, x6, #0x1
   19828:	neg	w0, w0
   1982c:	sub	x7, x4, x6
   19830:	add	x1, x24, x7, lsl #3
   19834:	ands	w0, w0, #0x3f
   19838:	b.eq	19b00 <mpfr_mul_ui@@Base+0x3d0>  // b.none
   1983c:	sub	w5, w0, #0x1
   19840:	mov	x3, #0x1                   	// #1
   19844:	lsl	x3, x3, x5
   19848:	ldr	x0, [x24, x7, lsl #3]
   1984c:	and	x7, x0, x3
   19850:	sub	x3, x3, #0x1
   19854:	and	x0, x3, x0
   19858:	cmp	w21, #0x0
   1985c:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   19860:	b.ne	19888 <mpfr_mul_ui@@Base+0x158>  // b.any
   19864:	subs	x4, x4, x6
   19868:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1986c:	b.ne	19888 <mpfr_mul_ui@@Base+0x158>  // b.any
   19870:	mvn	x3, x4
   19874:	add	x3, x1, x3, lsl #3
   19878:	ldr	x0, [x3, x4, lsl #3]
   1987c:	subs	x4, x4, #0x1
   19880:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   19884:	b.eq	19878 <mpfr_mul_ui@@Base+0x148>  // b.none
   19888:	mov	x25, #0x2                   	// #2
   1988c:	lsl	x25, x25, x5
   19890:	cmp	w21, #0x5
   19894:	b.eq	19b50 <mpfr_mul_ui@@Base+0x420>  // b.none
   19898:	cbnz	w21, 19c24 <mpfr_mul_ui@@Base+0x4f4>
   1989c:	cbnz	x7, 19b74 <mpfr_mul_ui@@Base+0x444>
   198a0:	orr	x0, x0, x7
   198a4:	cbz	x0, 19b58 <mpfr_mul_ui@@Base+0x428>
   198a8:	ldr	w24, [x19, #8]
   198ac:	neg	w24, w24
   198b0:	cmp	x22, x1
   198b4:	b.eq	198c4 <mpfr_mul_ui@@Base+0x194>  // b.none
   198b8:	lsl	x2, x2, #3
   198bc:	mov	x0, x22
   198c0:	bl	ba10 <memcpy@plt>
   198c4:	neg	x5, x25
   198c8:	ldr	x1, [x22]
   198cc:	and	x5, x1, x5
   198d0:	str	x5, [x22]
   198d4:	ldr	x0, [x29, #88]
   198d8:	cbnz	x0, 19be4 <mpfr_mul_ui@@Base+0x4b4>
   198dc:	mov	w1, #0x40                  	// #64
   198e0:	sub	w23, w1, w23
   198e4:	sxtw	x23, w23
   198e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   198ec:	ldr	x1, [x0, #2544]
   198f0:	add	x0, x0, #0x9f0
   198f4:	blr	x1
   198f8:	mrs	x1, tpidr_el0
   198fc:	ldr	x0, [x1, x0]
   19900:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   19904:	add	x1, x23, x1
   19908:	cmp	x1, x0
   1990c:	b.gt	19bec <mpfr_mul_ui@@Base+0x4bc>
   19910:	ldr	x1, [x19, #16]
   19914:	sub	x0, x0, x23
   19918:	cmp	x1, x0
   1991c:	b.gt	19bec <mpfr_mul_ui@@Base+0x4bc>
   19920:	add	x23, x23, x1
   19924:	str	x23, [x20, #16]
   19928:	ldr	w0, [x19, #8]
   1992c:	str	w0, [x20, #8]
   19930:	cbz	w24, 19a28 <mpfr_mul_ui@@Base+0x2f8>
   19934:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19938:	ldr	x1, [x0, #2576]
   1993c:	add	x0, x0, #0xa10
   19940:	blr	x1
   19944:	mrs	x1, tpidr_el0
   19948:	add	x0, x1, x0
   1994c:	ldr	w1, [x0]
   19950:	orr	w1, w1, #0x8
   19954:	str	w1, [x0]
   19958:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   1995c:	mov	x1, #0x2                   	// #2
   19960:	movk	x1, #0x8000, lsl #48
   19964:	cmp	x0, x1
   19968:	b.eq	19990 <mpfr_mul_ui@@Base+0x260>  // b.none
   1996c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   19970:	cmp	x0, x1
   19974:	b.ne	199f8 <mpfr_mul_ui@@Base+0x2c8>  // b.any
   19978:	cbz	x2, 199c0 <mpfr_mul_ui@@Base+0x290>
   1997c:	str	x1, [x20, #16]
   19980:	ldr	w0, [x19, #8]
   19984:	str	w0, [x20, #8]
   19988:	mov	w24, #0x0                   	// #0
   1998c:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   19990:	str	x1, [x20, #16]
   19994:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19998:	ldr	x1, [x0, #2576]
   1999c:	add	x0, x0, #0xa10
   199a0:	blr	x1
   199a4:	mrs	x1, tpidr_el0
   199a8:	add	x0, x1, x0
   199ac:	ldr	w1, [x0]
   199b0:	orr	w1, w1, #0x4
   199b4:	str	w1, [x0]
   199b8:	mov	w24, #0x0                   	// #0
   199bc:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   199c0:	mov	x0, #0x2                   	// #2
   199c4:	movk	x0, #0x8000, lsl #48
   199c8:	str	x0, [x20, #16]
   199cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   199d0:	ldr	x1, [x0, #2576]
   199d4:	add	x0, x0, #0xa10
   199d8:	blr	x1
   199dc:	mrs	x1, tpidr_el0
   199e0:	add	x0, x1, x0
   199e4:	ldr	w1, [x0]
   199e8:	orr	w1, w1, #0x4
   199ec:	str	w1, [x0]
   199f0:	mov	w24, #0x0                   	// #0
   199f4:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   199f8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   199fc:	str	x0, [x20, #16]
   19a00:	ldr	w0, [x19, #8]
   19a04:	str	w0, [x20, #8]
   19a08:	mov	w24, #0x0                   	// #0
   19a0c:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   19a10:	cbnz	x2, 19a48 <mpfr_mul_ui@@Base+0x318>
   19a14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   19a18:	str	x0, [x20, #16]
   19a1c:	ldr	w0, [x19, #8]
   19a20:	str	w0, [x20, #8]
   19a24:	mov	w24, #0x0                   	// #0
   19a28:	mov	w0, w24
   19a2c:	mov	sp, x29
   19a30:	ldp	x19, x20, [sp, #16]
   19a34:	ldp	x21, x22, [sp, #32]
   19a38:	ldp	x23, x24, [sp, #48]
   19a3c:	ldp	x25, x26, [sp, #64]
   19a40:	ldp	x29, x30, [sp], #96
   19a44:	ret
   19a48:	ldr	w3, [x19, #8]
   19a4c:	mov	w2, w21
   19a50:	mov	x1, x19
   19a54:	mov	x0, x20
   19a58:	bl	c6a0 <mpfr_set4@plt>
   19a5c:	mov	w24, w0
   19a60:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   19a64:	clz	x0, x0
   19a68:	mov	w1, #0x40                  	// #64
   19a6c:	sub	w0, w1, w0
   19a70:	sxtw	x2, w0
   19a74:	mov	x1, x19
   19a78:	mov	x0, x20
   19a7c:	bl	bb90 <mpfr_mul_2si@plt>
   19a80:	mov	w24, w0
   19a84:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   19a88:	mov	x1, x23
   19a8c:	add	x0, x29, #0x58
   19a90:	bl	bdc0 <mpfr_tmp_allocate@plt>
   19a94:	mov	x24, x0
   19a98:	b	197b8 <mpfr_mul_ui@@Base+0x88>
   19a9c:	mov	w23, #0x0                   	// #0
   19aa0:	b	197f0 <mpfr_mul_ui@@Base+0xc0>
   19aa4:	add	x2, x1, #0x3e
   19aa8:	subs	x1, x1, #0x1
   19aac:	csel	x1, x2, x1, mi  // mi = first
   19ab0:	asr	x1, x1, #6
   19ab4:	add	x2, x1, #0x1
   19ab8:	add	x25, x0, #0x3e
   19abc:	subs	x0, x0, #0x1
   19ac0:	csel	x0, x25, x0, mi  // mi = first
   19ac4:	asr	x25, x0, #6
   19ac8:	sub	x25, x25, x1
   19acc:	lsl	x25, x25, #3
   19ad0:	add	x0, x22, x25
   19ad4:	cmp	x0, x24
   19ad8:	b.eq	19ae8 <mpfr_mul_ui@@Base+0x3b8>  // b.none
   19adc:	lsl	x2, x2, #3
   19ae0:	mov	x1, x24
   19ae4:	bl	ba10 <memcpy@plt>
   19ae8:	mov	x2, x25
   19aec:	mov	w1, #0x0                   	// #0
   19af0:	mov	x0, x22
   19af4:	bl	c110 <memset@plt>
   19af8:	mov	w24, #0x0                   	// #0
   19afc:	b	198d4 <mpfr_mul_ui@@Base+0x1a4>
   19b00:	ldur	x3, [x1, #-8]
   19b04:	and	x7, x3, #0x8000000000000000
   19b08:	and	x0, x3, #0x7fffffffffffffff
   19b0c:	cmp	w21, #0x0
   19b10:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   19b14:	b.lt	19c18 <mpfr_mul_ui@@Base+0x4e8>  // b.tstop
   19b18:	sub	x4, x4, x6
   19b1c:	subs	x3, x4, #0x1
   19b20:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   19b24:	b.ne	19b48 <mpfr_mul_ui@@Base+0x418>  // b.any
   19b28:	mvn	x4, x4
   19b2c:	add	x4, x1, x4, lsl #3
   19b30:	ldr	x0, [x4, x3, lsl #3]
   19b34:	subs	x3, x3, #0x1
   19b38:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   19b3c:	b.eq	19b30 <mpfr_mul_ui@@Base+0x400>  // b.none
   19b40:	mov	x25, #0x1                   	// #1
   19b44:	b	19890 <mpfr_mul_ui@@Base+0x160>
   19b48:	mov	x25, #0x1                   	// #1
   19b4c:	b	19890 <mpfr_mul_ui@@Base+0x160>
   19b50:	mov	w24, #0x0                   	// #0
   19b54:	b	198b0 <mpfr_mul_ui@@Base+0x180>
   19b58:	mov	w24, #0x0                   	// #0
   19b5c:	b	198b0 <mpfr_mul_ui@@Base+0x180>
   19b60:	mov	w24, #0x0                   	// #0
   19b64:	b	198b0 <mpfr_mul_ui@@Base+0x180>
   19b68:	mov	x25, #0x1                   	// #1
   19b6c:	mov	w24, #0x0                   	// #0
   19b70:	b	198b0 <mpfr_mul_ui@@Base+0x180>
   19b74:	cbnz	x0, 19c44 <mpfr_mul_ui@@Base+0x514>
   19b78:	ldr	x0, [x1]
   19b7c:	tst	x25, x0
   19b80:	b.ne	19c44 <mpfr_mul_ui@@Base+0x514>  // b.any
   19b84:	ldr	w24, [x19, #8]
   19b88:	neg	w24, w24
   19b8c:	b	198b0 <mpfr_mul_ui@@Base+0x180>
   19b90:	cmp	x22, x1
   19b94:	b.eq	19c88 <mpfr_mul_ui@@Base+0x558>  // b.none
   19b98:	cmp	x6, x0
   19b9c:	b.le	19c88 <mpfr_mul_ui@@Base+0x558>
   19ba0:	ldr	x2, [x1, x4, lsl #3]
   19ba4:	str	x2, [x22, x4, lsl #3]
   19ba8:	cmp	x6, x4
   19bac:	add	x4, x4, #0x1
   19bb0:	b.gt	19ba0 <mpfr_mul_ui@@Base+0x470>
   19bb4:	b	19c88 <mpfr_mul_ui@@Base+0x558>
   19bb8:	add	x5, x6, #0x1
   19bbc:	mov	x0, #0x1                   	// #1
   19bc0:	cmp	x5, x0
   19bc4:	b.eq	19c04 <mpfr_mul_ui@@Base+0x4d4>  // b.none
   19bc8:	ldr	x3, [x1, x0, lsl #3]
   19bcc:	add	x3, x3, #0x1
   19bd0:	str	x3, [x22, x0, lsl #3]
   19bd4:	add	x4, x0, #0x1
   19bd8:	cbnz	x3, 19b90 <mpfr_mul_ui@@Base+0x460>
   19bdc:	mov	x0, x4
   19be0:	b	19bc0 <mpfr_mul_ui@@Base+0x490>
   19be4:	bl	c410 <mpfr_tmp_free@plt>
   19be8:	b	198dc <mpfr_mul_ui@@Base+0x1ac>
   19bec:	ldr	w2, [x19, #8]
   19bf0:	mov	w1, w21
   19bf4:	mov	x0, x20
   19bf8:	bl	bf40 <mpfr_overflow@plt>
   19bfc:	mov	w24, w0
   19c00:	b	19a28 <mpfr_mul_ui@@Base+0x2f8>
   19c04:	add	x2, x22, x2, lsl #3
   19c08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   19c0c:	stur	x0, [x2, #-8]
   19c10:	sub	w23, w23, #0x1
   19c14:	b	19c88 <mpfr_mul_ui@@Base+0x558>
   19c18:	mov	x25, #0x1                   	// #1
   19c1c:	cmp	w21, #0x5
   19c20:	b.eq	19b68 <mpfr_mul_ui@@Base+0x438>  // b.none
   19c24:	cmp	w21, #0x1
   19c28:	b.eq	198a0 <mpfr_mul_ui@@Base+0x170>  // b.none
   19c2c:	ldr	w3, [x19, #8]
   19c30:	add	w3, w21, w3, lsr #31
   19c34:	cmp	w3, #0x3
   19c38:	b.eq	198a0 <mpfr_mul_ui@@Base+0x170>  // b.none
   19c3c:	orr	x0, x7, x0
   19c40:	cbz	x0, 19b60 <mpfr_mul_ui@@Base+0x430>
   19c44:	ldr	w24, [x19, #8]
   19c48:	ldr	x0, [x1]
   19c4c:	add	x0, x25, x0
   19c50:	str	x0, [x22]
   19c54:	cmp	x25, x0
   19c58:	b.hi	19bb8 <mpfr_mul_ui@@Base+0x488>  // b.pmore
   19c5c:	cmp	x22, x1
   19c60:	b.eq	19c88 <mpfr_mul_ui@@Base+0x558>  // b.none
   19c64:	cmp	x2, #0x1
   19c68:	b.le	19c88 <mpfr_mul_ui@@Base+0x558>
   19c6c:	add	x6, x6, #0x1
   19c70:	mov	x0, #0x1                   	// #1
   19c74:	ldr	x2, [x1, x0, lsl #3]
   19c78:	str	x2, [x22, x0, lsl #3]
   19c7c:	add	x0, x0, #0x1
   19c80:	cmp	x6, x0
   19c84:	b.ne	19c74 <mpfr_mul_ui@@Base+0x544>  // b.any
   19c88:	neg	x5, x25
   19c8c:	ldr	x0, [x22]
   19c90:	and	x5, x0, x5
   19c94:	str	x5, [x22]
   19c98:	b	198d4 <mpfr_mul_ui@@Base+0x1a4>

0000000000019c9c <mpfr_neg@@Base>:
   19c9c:	stp	x29, x30, [sp, #-16]!
   19ca0:	mov	x29, sp
   19ca4:	cmp	x0, x1
   19ca8:	b.ne	19cd8 <mpfr_neg@@Base+0x3c>  // b.any
   19cac:	ldr	w2, [x0, #8]
   19cb0:	neg	w2, w2
   19cb4:	str	w2, [x0, #8]
   19cb8:	ldr	x2, [x1, #16]
   19cbc:	mov	w0, #0x0                   	// #0
   19cc0:	mov	x1, #0x2                   	// #2
   19cc4:	movk	x1, #0x8000, lsl #48
   19cc8:	cmp	x2, x1
   19ccc:	b.eq	19ce8 <mpfr_neg@@Base+0x4c>  // b.none
   19cd0:	ldp	x29, x30, [sp], #16
   19cd4:	ret
   19cd8:	ldr	w3, [x1, #8]
   19cdc:	neg	w3, w3
   19ce0:	bl	c6a0 <mpfr_set4@plt>
   19ce4:	b	19cd0 <mpfr_neg@@Base+0x34>
   19ce8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19cec:	ldr	x1, [x0, #2576]
   19cf0:	add	x0, x0, #0xa10
   19cf4:	blr	x1
   19cf8:	mrs	x1, tpidr_el0
   19cfc:	add	x0, x1, x0
   19d00:	ldr	w1, [x0]
   19d04:	orr	w1, w1, #0x4
   19d08:	str	w1, [x0]
   19d0c:	mov	w0, #0x0                   	// #0
   19d10:	b	19cd0 <mpfr_neg@@Base+0x34>

0000000000019d14 <mpfr_nexttozero@@Base>:
   19d14:	stp	x29, x30, [sp, #-32]!
   19d18:	mov	x29, sp
   19d1c:	str	x19, [sp, #16]
   19d20:	mov	x19, x0
   19d24:	ldr	x0, [x0, #16]
   19d28:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   19d2c:	cmp	x0, x1
   19d30:	b.le	19dac <mpfr_nexttozero@@Base+0x98>
   19d34:	ldr	x1, [x19]
   19d38:	add	x3, x1, #0x3e
   19d3c:	subs	x0, x1, #0x1
   19d40:	csel	x3, x3, x0, mi  // mi = first
   19d44:	asr	x3, x3, #6
   19d48:	add	x0, x3, #0x1
   19d4c:	ldr	x5, [x19, #24]
   19d50:	neg	w1, w1
   19d54:	mov	x2, #0x1                   	// #1
   19d58:	lsl	x1, x2, x1
   19d5c:	ldr	x2, [x5]
   19d60:	sub	x4, x2, x1
   19d64:	str	x4, [x5]
   19d68:	cmp	x1, x2
   19d6c:	b.ls	19d90 <mpfr_nexttozero@@Base+0x7c>  // b.plast
   19d70:	mov	x1, x5
   19d74:	add	x3, x5, x3, lsl #3
   19d78:	cmp	x1, x3
   19d7c:	b.eq	19d90 <mpfr_nexttozero@@Base+0x7c>  // b.none
   19d80:	ldr	x2, [x1, #8]
   19d84:	sub	x4, x2, #0x1
   19d88:	str	x4, [x1, #8]!
   19d8c:	cbz	x2, 19d78 <mpfr_nexttozero@@Base+0x64>
   19d90:	lsl	x1, x0, #3
   19d94:	sub	x1, x1, #0x8
   19d98:	ldr	x0, [x5, x1]
   19d9c:	tbz	x0, #63, 19e2c <mpfr_nexttozero@@Base+0x118>
   19da0:	ldr	x19, [sp, #16]
   19da4:	ldp	x29, x30, [sp], #32
   19da8:	ret
   19dac:	b.eq	19dec <mpfr_nexttozero@@Base+0xd8>  // b.none
   19db0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   19db4:	cmp	x0, x1
   19db8:	b.ne	19e10 <mpfr_nexttozero@@Base+0xfc>  // b.any
   19dbc:	ldr	w0, [x19, #8]
   19dc0:	neg	w0, w0
   19dc4:	str	w0, [x19, #8]
   19dc8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19dcc:	ldr	x1, [x0, #2512]
   19dd0:	add	x0, x0, #0x9d0
   19dd4:	blr	x1
   19dd8:	mrs	x1, tpidr_el0
   19ddc:	ldr	x1, [x1, x0]
   19de0:	mov	x0, x19
   19de4:	bl	c2b0 <mpfr_setmin@plt>
   19de8:	b	19da0 <mpfr_nexttozero@@Base+0x8c>
   19dec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19df0:	ldr	x1, [x0, #2544]
   19df4:	add	x0, x0, #0x9f0
   19df8:	blr	x1
   19dfc:	mrs	x1, tpidr_el0
   19e00:	ldr	x1, [x1, x0]
   19e04:	mov	x0, x19
   19e08:	bl	c0d0 <mpfr_setmax@plt>
   19e0c:	b	19da0 <mpfr_nexttozero@@Base+0x8c>
   19e10:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   19e14:	add	x2, x2, #0x4d0
   19e18:	mov	w1, #0x2b                  	// #43
   19e1c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   19e20:	add	x0, x0, #0x508
   19e24:	bl	cb40 <mpfr_assert_fail@plt>
   19e28:	b	19dbc <mpfr_nexttozero@@Base+0xa8>
   19e2c:	ldr	x2, [x19, #16]
   19e30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19e34:	ldr	x3, [x0, #2512]
   19e38:	add	x0, x0, #0x9d0
   19e3c:	blr	x3
   19e40:	mrs	x3, tpidr_el0
   19e44:	ldr	x0, [x3, x0]
   19e48:	cmp	x0, x2
   19e4c:	b.eq	19e68 <mpfr_nexttozero@@Base+0x154>  // b.none
   19e50:	sub	x2, x2, #0x1
   19e54:	str	x2, [x19, #16]
   19e58:	ldr	x0, [x5, x1]
   19e5c:	orr	x0, x0, #0x8000000000000000
   19e60:	str	x0, [x5, x1]
   19e64:	b	19da0 <mpfr_nexttozero@@Base+0x8c>
   19e68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   19e6c:	str	x0, [x19, #16]
   19e70:	b	19da0 <mpfr_nexttozero@@Base+0x8c>

0000000000019e74 <mpfr_nexttoinf@@Base>:
   19e74:	stp	x29, x30, [sp, #-16]!
   19e78:	mov	x29, sp
   19e7c:	mov	x3, x0
   19e80:	ldr	x0, [x0, #16]
   19e84:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   19e88:	cmp	x0, x1
   19e8c:	b.le	19ef0 <mpfr_nexttoinf@@Base+0x7c>
   19e90:	ldr	x4, [x3]
   19e94:	ldr	x5, [x3, #24]
   19e98:	neg	w0, w4
   19e9c:	mov	x1, #0x1                   	// #1
   19ea0:	lsl	x1, x1, x0
   19ea4:	ldr	x0, [x5]
   19ea8:	add	x0, x1, x0
   19eac:	str	x0, [x5]
   19eb0:	cmp	x1, x0
   19eb4:	b.ls	19ee8 <mpfr_nexttoinf@@Base+0x74>  // b.plast
   19eb8:	mov	x2, x5
   19ebc:	add	x0, x4, #0x3e
   19ec0:	subs	x4, x4, #0x1
   19ec4:	csel	x4, x0, x4, mi  // mi = first
   19ec8:	asr	x4, x4, #6
   19ecc:	add	x0, x5, x4, lsl #3
   19ed0:	cmp	x2, x0
   19ed4:	b.eq	19f2c <mpfr_nexttoinf@@Base+0xb8>  // b.none
   19ed8:	ldr	x1, [x2, #8]
   19edc:	add	x1, x1, #0x1
   19ee0:	str	x1, [x2, #8]!
   19ee4:	cbz	x1, 19ed0 <mpfr_nexttoinf@@Base+0x5c>
   19ee8:	ldp	x29, x30, [sp], #16
   19eec:	ret
   19ef0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   19ef4:	cmp	x0, x1
   19ef8:	b.ne	19ee8 <mpfr_nexttoinf@@Base+0x74>  // b.any
   19efc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19f00:	ldr	x1, [x0, #2512]
   19f04:	add	x0, x0, #0x9d0
   19f08:	blr	x1
   19f0c:	mrs	x1, tpidr_el0
   19f10:	ldr	x1, [x1, x0]
   19f14:	mov	x0, x3
   19f18:	bl	c2b0 <mpfr_setmin@plt>
   19f1c:	b	19ee8 <mpfr_nexttoinf@@Base+0x74>
   19f20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   19f24:	str	x0, [x3, #16]
   19f28:	b	19ee8 <mpfr_nexttoinf@@Base+0x74>
   19f2c:	ldr	x1, [x3, #16]
   19f30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19f34:	ldr	x2, [x0, #2544]
   19f38:	add	x0, x0, #0x9f0
   19f3c:	blr	x2
   19f40:	mrs	x2, tpidr_el0
   19f44:	ldr	x0, [x2, x0]
   19f48:	cmp	x0, x1
   19f4c:	b.eq	19f20 <mpfr_nexttoinf@@Base+0xac>  // b.none
   19f50:	add	x1, x1, #0x1
   19f54:	str	x1, [x3, #16]
   19f58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   19f5c:	str	x0, [x5, x4, lsl #3]
   19f60:	b	19ee8 <mpfr_nexttoinf@@Base+0x74>

0000000000019f64 <mpfr_nextabove@@Base>:
   19f64:	stp	x29, x30, [sp, #-16]!
   19f68:	mov	x29, sp
   19f6c:	ldr	x2, [x0, #16]
   19f70:	mov	x1, #0x2                   	// #2
   19f74:	movk	x1, #0x8000, lsl #48
   19f78:	cmp	x2, x1
   19f7c:	b.eq	19f94 <mpfr_nextabove@@Base+0x30>  // b.none
   19f80:	ldr	w1, [x0, #8]
   19f84:	tbnz	w1, #31, 19fbc <mpfr_nextabove@@Base+0x58>
   19f88:	bl	c670 <mpfr_nexttoinf@plt>
   19f8c:	ldp	x29, x30, [sp], #16
   19f90:	ret
   19f94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19f98:	ldr	x1, [x0, #2576]
   19f9c:	add	x0, x0, #0xa10
   19fa0:	blr	x1
   19fa4:	mrs	x1, tpidr_el0
   19fa8:	add	x0, x1, x0
   19fac:	ldr	w1, [x0]
   19fb0:	orr	w1, w1, #0x4
   19fb4:	str	w1, [x0]
   19fb8:	b	19f8c <mpfr_nextabove@@Base+0x28>
   19fbc:	bl	c460 <mpfr_nexttozero@plt>
   19fc0:	b	19f8c <mpfr_nextabove@@Base+0x28>

0000000000019fc4 <mpfr_nextbelow@@Base>:
   19fc4:	stp	x29, x30, [sp, #-16]!
   19fc8:	mov	x29, sp
   19fcc:	ldr	x2, [x0, #16]
   19fd0:	mov	x1, #0x2                   	// #2
   19fd4:	movk	x1, #0x8000, lsl #48
   19fd8:	cmp	x2, x1
   19fdc:	b.eq	19ff4 <mpfr_nextbelow@@Base+0x30>  // b.none
   19fe0:	ldr	w1, [x0, #8]
   19fe4:	tbnz	w1, #31, 1a01c <mpfr_nextbelow@@Base+0x58>
   19fe8:	bl	c460 <mpfr_nexttozero@plt>
   19fec:	ldp	x29, x30, [sp], #16
   19ff0:	ret
   19ff4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   19ff8:	ldr	x1, [x0, #2576]
   19ffc:	add	x0, x0, #0xa10
   1a000:	blr	x1
   1a004:	mrs	x1, tpidr_el0
   1a008:	add	x0, x1, x0
   1a00c:	ldr	w1, [x0]
   1a010:	orr	w1, w1, #0x4
   1a014:	str	w1, [x0]
   1a018:	b	19fec <mpfr_nextbelow@@Base+0x28>
   1a01c:	bl	c670 <mpfr_nexttoinf@plt>
   1a020:	b	19fec <mpfr_nextbelow@@Base+0x28>

000000000001a024 <mpfr_nexttoward@@Base>:
   1a024:	stp	x29, x30, [sp, #-32]!
   1a028:	mov	x29, sp
   1a02c:	str	x19, [sp, #16]
   1a030:	mov	x19, x0
   1a034:	ldr	x2, [x0, #16]
   1a038:	mov	x0, #0x2                   	// #2
   1a03c:	movk	x0, #0x8000, lsl #48
   1a040:	cmp	x2, x0
   1a044:	b.eq	1a084 <mpfr_nexttoward@@Base+0x60>  // b.none
   1a048:	ldr	x2, [x1, #16]
   1a04c:	mov	x0, #0x2                   	// #2
   1a050:	movk	x0, #0x8000, lsl #48
   1a054:	cmp	x2, x0
   1a058:	b.eq	1a0ac <mpfr_nexttoward@@Base+0x88>  // b.none
   1a05c:	mov	w2, #0x1                   	// #1
   1a060:	mov	x0, x19
   1a064:	bl	c9a0 <mpfr_cmp3@plt>
   1a068:	cbz	w0, 1a078 <mpfr_nexttoward@@Base+0x54>
   1a06c:	tbnz	w0, #31, 1a0d8 <mpfr_nexttoward@@Base+0xb4>
   1a070:	mov	x0, x19
   1a074:	bl	bdd0 <mpfr_nextbelow@plt>
   1a078:	ldr	x19, [sp, #16]
   1a07c:	ldp	x29, x30, [sp], #32
   1a080:	ret
   1a084:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1a088:	ldr	x1, [x0, #2576]
   1a08c:	add	x0, x0, #0xa10
   1a090:	blr	x1
   1a094:	mrs	x1, tpidr_el0
   1a098:	add	x0, x1, x0
   1a09c:	ldr	w1, [x0]
   1a0a0:	orr	w1, w1, #0x4
   1a0a4:	str	w1, [x0]
   1a0a8:	b	1a078 <mpfr_nexttoward@@Base+0x54>
   1a0ac:	str	x0, [x19, #16]
   1a0b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1a0b4:	ldr	x1, [x0, #2576]
   1a0b8:	add	x0, x0, #0xa10
   1a0bc:	blr	x1
   1a0c0:	mrs	x1, tpidr_el0
   1a0c4:	add	x0, x1, x0
   1a0c8:	ldr	w1, [x0]
   1a0cc:	orr	w1, w1, #0x4
   1a0d0:	str	w1, [x0]
   1a0d4:	b	1a078 <mpfr_nexttoward@@Base+0x54>
   1a0d8:	mov	x0, x19
   1a0dc:	bl	c120 <mpfr_nextabove@plt>
   1a0e0:	b	1a078 <mpfr_nexttoward@@Base+0x54>

000000000001a0e4 <__gmpfr_out_str@@Base>:
   1a0e4:	stp	x29, x30, [sp, #-80]!
   1a0e8:	mov	x29, sp
   1a0ec:	stp	x19, x20, [sp, #16]
   1a0f0:	mov	x20, x0
   1a0f4:	sub	w0, w1, #0x2
   1a0f8:	cmp	w0, #0x3c
   1a0fc:	b.hi	1a180 <__gmpfr_out_str@@Base+0x9c>  // b.pmore
   1a100:	stp	x21, x22, [sp, #32]
   1a104:	mov	w22, w1
   1a108:	mov	w5, w4
   1a10c:	ldr	x0, [x3, #16]
   1a110:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a114:	cmp	x0, x1
   1a118:	b.le	1a1a0 <__gmpfr_out_str@@Base+0xbc>
   1a11c:	str	x23, [sp, #48]
   1a120:	mov	x4, x3
   1a124:	mov	x3, x2
   1a128:	mov	w2, w22
   1a12c:	add	x1, sp, #0x48
   1a130:	mov	x0, #0x0                   	// #0
   1a134:	bl	c500 <mpfr_get_str@plt>
   1a138:	mov	x21, x0
   1a13c:	bl	bab0 <strlen@plt>
   1a140:	add	x19, x0, #0x1
   1a144:	ldrb	w0, [x21]
   1a148:	mov	x23, x21
   1a14c:	cmp	w0, #0x2d
   1a150:	b.eq	1a244 <__gmpfr_out_str@@Base+0x160>  // b.none
   1a154:	mov	x1, x20
   1a158:	ldrb	w0, [x23], #1
   1a15c:	bl	bda0 <fputc@plt>
   1a160:	cmn	w0, #0x1
   1a164:	b.ne	1a25c <__gmpfr_out_str@@Base+0x178>  // b.any
   1a168:	mov	x1, x19
   1a16c:	mov	x0, x21
   1a170:	bl	cc20 <mpfr_free_func@plt>
   1a174:	mov	x19, #0x0                   	// #0
   1a178:	ldr	x23, [sp, #48]
   1a17c:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>
   1a180:	stp	x21, x22, [sp, #32]
   1a184:	str	x23, [sp, #48]
   1a188:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a18c:	add	x2, x2, #0x528
   1a190:	mov	w1, #0x2c                  	// #44
   1a194:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a198:	add	x0, x0, #0x540
   1a19c:	bl	cb40 <mpfr_assert_fail@plt>
   1a1a0:	mov	x1, #0x2                   	// #2
   1a1a4:	movk	x1, #0x8000, lsl #48
   1a1a8:	cmp	x0, x1
   1a1ac:	b.eq	1a1f0 <__gmpfr_out_str@@Base+0x10c>  // b.none
   1a1b0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a1b4:	cmp	x0, x1
   1a1b8:	b.eq	1a210 <__gmpfr_out_str@@Base+0x12c>  // b.none
   1a1bc:	ldr	w2, [x3, #8]
   1a1c0:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a1c4:	add	x0, x0, #0x510
   1a1c8:	adrp	x1, 67000 <mpfr_bases@@Base+0x1900>
   1a1cc:	add	x1, x1, #0x8b8
   1a1d0:	cmp	w2, #0x0
   1a1d4:	csel	x1, x1, x0, gt
   1a1d8:	mov	x0, x20
   1a1dc:	bl	cce0 <fprintf@plt>
   1a1e0:	cmp	w0, #0x0
   1a1e4:	csel	w0, w0, wzr, ge  // ge = tcont
   1a1e8:	sxtw	x19, w0
   1a1ec:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>
   1a1f0:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1a1f4:	add	x1, x1, #0x1e0
   1a1f8:	mov	x0, x20
   1a1fc:	bl	cce0 <fprintf@plt>
   1a200:	cmp	w0, #0x0
   1a204:	csel	w0, w0, wzr, ge  // ge = tcont
   1a208:	sxtw	x19, w0
   1a20c:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>
   1a210:	ldr	w2, [x3, #8]
   1a214:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   1a218:	add	x0, x0, #0xd50
   1a21c:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1a220:	add	x1, x1, #0x1e8
   1a224:	cmp	w2, #0x0
   1a228:	csel	x1, x1, x0, gt
   1a22c:	mov	x0, x20
   1a230:	bl	cce0 <fprintf@plt>
   1a234:	cmp	w0, #0x0
   1a238:	csel	w0, w0, wzr, ge  // ge = tcont
   1a23c:	sxtw	x19, w0
   1a240:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>
   1a244:	mov	x1, x20
   1a248:	bl	bda0 <fputc@plt>
   1a24c:	cmn	w0, #0x1
   1a250:	b.eq	1a168 <__gmpfr_out_str@@Base+0x84>  // b.none
   1a254:	add	x23, x21, #0x1
   1a258:	b	1a154 <__gmpfr_out_str@@Base+0x70>
   1a25c:	bl	bea0 <localeconv@plt>
   1a260:	ldr	x0, [x0]
   1a264:	ldrb	w1, [x0, #1]
   1a268:	mov	w0, #0x2e                  	// #46
   1a26c:	cbz	w1, 1a2f8 <__gmpfr_out_str@@Base+0x214>
   1a270:	mov	x1, x20
   1a274:	bl	bda0 <fputc@plt>
   1a278:	cmn	w0, #0x1
   1a27c:	b.eq	1a168 <__gmpfr_out_str@@Base+0x84>  // b.none
   1a280:	mov	x1, x20
   1a284:	mov	x0, x23
   1a288:	bl	bac0 <fputs@plt>
   1a28c:	mov	w23, w0
   1a290:	mov	x1, x19
   1a294:	mov	x0, x21
   1a298:	bl	cc20 <mpfr_free_func@plt>
   1a29c:	cmn	w23, #0x1
   1a2a0:	b.eq	1a308 <__gmpfr_out_str@@Base+0x224>  // b.none
   1a2a4:	ldr	x2, [sp, #72]
   1a2a8:	sub	x2, x2, #0x1
   1a2ac:	str	x2, [sp, #72]
   1a2b0:	cbz	x2, 1a314 <__gmpfr_out_str@@Base+0x230>
   1a2b4:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a2b8:	add	x0, x0, #0x520
   1a2bc:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a2c0:	add	x1, x1, #0x518
   1a2c4:	cmp	w22, #0xb
   1a2c8:	csel	x1, x1, x0, lt  // lt = tstop
   1a2cc:	mov	x0, x20
   1a2d0:	bl	cce0 <fprintf@plt>
   1a2d4:	add	x19, x19, w0, sxtw
   1a2d8:	cmp	w0, #0x0
   1a2dc:	csel	x19, x19, xzr, ge  // ge = tcont
   1a2e0:	ldr	x23, [sp, #48]
   1a2e4:	mov	x0, x19
   1a2e8:	ldp	x21, x22, [sp, #32]
   1a2ec:	ldp	x19, x20, [sp, #16]
   1a2f0:	ldp	x29, x30, [sp], #80
   1a2f4:	ret
   1a2f8:	bl	bea0 <localeconv@plt>
   1a2fc:	ldr	x0, [x0]
   1a300:	ldrb	w0, [x0]
   1a304:	b	1a270 <__gmpfr_out_str@@Base+0x18c>
   1a308:	mov	x19, #0x0                   	// #0
   1a30c:	ldr	x23, [sp, #48]
   1a310:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>
   1a314:	ldr	x23, [sp, #48]
   1a318:	b	1a2e4 <__gmpfr_out_str@@Base+0x200>

000000000001a31c <mpfr_snprintf@@Base>:
   1a31c:	stp	x29, x30, [sp, #-256]!
   1a320:	mov	x29, sp
   1a324:	str	x3, [sp, #216]
   1a328:	str	x4, [sp, #224]
   1a32c:	str	x5, [sp, #232]
   1a330:	str	x6, [sp, #240]
   1a334:	str	x7, [sp, #248]
   1a338:	str	q0, [sp, #80]
   1a33c:	str	q1, [sp, #96]
   1a340:	str	q2, [sp, #112]
   1a344:	str	q3, [sp, #128]
   1a348:	str	q4, [sp, #144]
   1a34c:	str	q5, [sp, #160]
   1a350:	str	q6, [sp, #176]
   1a354:	str	q7, [sp, #192]
   1a358:	add	x3, sp, #0x100
   1a35c:	str	x3, [sp, #48]
   1a360:	str	x3, [sp, #56]
   1a364:	add	x3, sp, #0xd0
   1a368:	str	x3, [sp, #64]
   1a36c:	mov	w3, #0xffffffd8            	// #-40
   1a370:	str	w3, [sp, #72]
   1a374:	mov	w3, #0xffffff80            	// #-128
   1a378:	str	w3, [sp, #76]
   1a37c:	ldp	x4, x5, [sp, #48]
   1a380:	stp	x4, x5, [sp, #16]
   1a384:	ldp	x4, x5, [sp, #64]
   1a388:	stp	x4, x5, [sp, #32]
   1a38c:	add	x4, sp, #0x10
   1a390:	mov	x3, x2
   1a394:	mov	x2, x1
   1a398:	mov	x1, x0
   1a39c:	mov	x0, #0x0                   	// #0
   1a3a0:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1a3a4:	ldp	x29, x30, [sp], #256
   1a3a8:	ret

000000000001a3ac <__gmpfr_vsnprintf@@Base>:
   1a3ac:	stp	x29, x30, [sp, #-48]!
   1a3b0:	mov	x29, sp
   1a3b4:	ldp	x4, x5, [x3]
   1a3b8:	stp	x4, x5, [sp, #16]
   1a3bc:	ldp	x4, x5, [x3, #16]
   1a3c0:	stp	x4, x5, [sp, #32]
   1a3c4:	add	x4, sp, #0x10
   1a3c8:	mov	x3, x2
   1a3cc:	mov	x2, x1
   1a3d0:	mov	x1, x0
   1a3d4:	mov	x0, #0x0                   	// #0
   1a3d8:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1a3dc:	ldp	x29, x30, [sp], #48
   1a3e0:	ret

000000000001a3e4 <__gmpfr_vasprintf@@Base>:
   1a3e4:	stp	x29, x30, [sp, #-48]!
   1a3e8:	mov	x29, sp
   1a3ec:	ldp	x4, x5, [x2]
   1a3f0:	stp	x4, x5, [sp, #16]
   1a3f4:	ldp	x2, x3, [x2, #16]
   1a3f8:	stp	x2, x3, [sp, #32]
   1a3fc:	add	x4, sp, #0x10
   1a400:	mov	x3, x1
   1a404:	mov	x2, #0x0                   	// #0
   1a408:	mov	x1, #0x0                   	// #0
   1a40c:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1a410:	ldp	x29, x30, [sp], #48
   1a414:	ret

000000000001a418 <mpfr_printf@@Base>:
   1a418:	stp	x29, x30, [sp, #-304]!
   1a41c:	mov	x29, sp
   1a420:	str	x19, [sp, #16]
   1a424:	str	x1, [sp, #248]
   1a428:	str	x2, [sp, #256]
   1a42c:	str	x3, [sp, #264]
   1a430:	str	x4, [sp, #272]
   1a434:	str	x5, [sp, #280]
   1a438:	str	x6, [sp, #288]
   1a43c:	str	x7, [sp, #296]
   1a440:	str	q0, [sp, #112]
   1a444:	str	q1, [sp, #128]
   1a448:	str	q2, [sp, #144]
   1a44c:	str	q3, [sp, #160]
   1a450:	str	q4, [sp, #176]
   1a454:	str	q5, [sp, #192]
   1a458:	str	q6, [sp, #208]
   1a45c:	str	q7, [sp, #224]
   1a460:	add	x1, sp, #0x130
   1a464:	str	x1, [sp, #72]
   1a468:	str	x1, [sp, #80]
   1a46c:	add	x1, sp, #0xf0
   1a470:	str	x1, [sp, #88]
   1a474:	mov	w1, #0xffffffc8            	// #-56
   1a478:	str	w1, [sp, #96]
   1a47c:	mov	w1, #0xffffff80            	// #-128
   1a480:	str	w1, [sp, #100]
   1a484:	ldp	x2, x3, [sp, #72]
   1a488:	stp	x2, x3, [sp, #32]
   1a48c:	ldp	x2, x3, [sp, #88]
   1a490:	stp	x2, x3, [sp, #48]
   1a494:	add	x2, sp, #0x20
   1a498:	mov	x1, x0
   1a49c:	add	x0, sp, #0x68
   1a4a0:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a4a4:	tbnz	w0, #31, 1a4d4 <mpfr_printf@@Base+0xbc>
   1a4a8:	ldr	x1, [sp, #104]
   1a4ac:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a4b0:	add	x0, x0, #0x550
   1a4b4:	bl	cbf0 <printf@plt>
   1a4b8:	mov	w19, w0
   1a4bc:	ldr	x0, [sp, #104]
   1a4c0:	bl	c890 <mpfr_free_str@plt>
   1a4c4:	mov	w0, w19
   1a4c8:	ldr	x19, [sp, #16]
   1a4cc:	ldp	x29, x30, [sp], #304
   1a4d0:	ret
   1a4d4:	ldr	x0, [sp, #104]
   1a4d8:	cbz	x0, 1a4e0 <mpfr_printf@@Base+0xc8>
   1a4dc:	bl	c890 <mpfr_free_str@plt>
   1a4e0:	mov	w19, #0xffffffff            	// #-1
   1a4e4:	b	1a4c4 <mpfr_printf@@Base+0xac>

000000000001a4e8 <__gmpfr_vprintf@@Base>:
   1a4e8:	stp	x29, x30, [sp, #-80]!
   1a4ec:	mov	x29, sp
   1a4f0:	str	x19, [sp, #16]
   1a4f4:	ldp	x2, x3, [x1]
   1a4f8:	stp	x2, x3, [sp, #32]
   1a4fc:	ldp	x2, x3, [x1, #16]
   1a500:	stp	x2, x3, [sp, #48]
   1a504:	add	x2, sp, #0x20
   1a508:	mov	x1, x0
   1a50c:	add	x0, sp, #0x48
   1a510:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a514:	tbnz	w0, #31, 1a544 <__gmpfr_vprintf@@Base+0x5c>
   1a518:	ldr	x1, [sp, #72]
   1a51c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a520:	add	x0, x0, #0x550
   1a524:	bl	cbf0 <printf@plt>
   1a528:	mov	w19, w0
   1a52c:	ldr	x0, [sp, #72]
   1a530:	bl	c890 <mpfr_free_str@plt>
   1a534:	mov	w0, w19
   1a538:	ldr	x19, [sp, #16]
   1a53c:	ldp	x29, x30, [sp], #80
   1a540:	ret
   1a544:	ldr	x0, [sp, #72]
   1a548:	mov	w19, #0xffffffff            	// #-1
   1a54c:	cbz	x0, 1a534 <__gmpfr_vprintf@@Base+0x4c>
   1a550:	bl	c890 <mpfr_free_str@plt>
   1a554:	b	1a534 <__gmpfr_vprintf@@Base+0x4c>

000000000001a558 <__gmpfr_fprintf@@Base>:
   1a558:	stp	x29, x30, [sp, #-288]!
   1a55c:	mov	x29, sp
   1a560:	str	x19, [sp, #16]
   1a564:	mov	x19, x0
   1a568:	str	x2, [sp, #240]
   1a56c:	str	x3, [sp, #248]
   1a570:	str	x4, [sp, #256]
   1a574:	str	x5, [sp, #264]
   1a578:	str	x6, [sp, #272]
   1a57c:	str	x7, [sp, #280]
   1a580:	str	q0, [sp, #112]
   1a584:	str	q1, [sp, #128]
   1a588:	str	q2, [sp, #144]
   1a58c:	str	q3, [sp, #160]
   1a590:	str	q4, [sp, #176]
   1a594:	str	q5, [sp, #192]
   1a598:	str	q6, [sp, #208]
   1a59c:	str	q7, [sp, #224]
   1a5a0:	add	x0, sp, #0x120
   1a5a4:	str	x0, [sp, #72]
   1a5a8:	str	x0, [sp, #80]
   1a5ac:	add	x0, sp, #0xf0
   1a5b0:	str	x0, [sp, #88]
   1a5b4:	mov	w0, #0xffffffd0            	// #-48
   1a5b8:	str	w0, [sp, #96]
   1a5bc:	mov	w0, #0xffffff80            	// #-128
   1a5c0:	str	w0, [sp, #100]
   1a5c4:	ldp	x2, x3, [sp, #72]
   1a5c8:	stp	x2, x3, [sp, #32]
   1a5cc:	ldp	x2, x3, [sp, #88]
   1a5d0:	stp	x2, x3, [sp, #48]
   1a5d4:	add	x2, sp, #0x20
   1a5d8:	add	x0, sp, #0x68
   1a5dc:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a5e0:	tbnz	w0, #31, 1a614 <__gmpfr_fprintf@@Base+0xbc>
   1a5e4:	ldr	x2, [sp, #104]
   1a5e8:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a5ec:	add	x1, x1, #0x550
   1a5f0:	mov	x0, x19
   1a5f4:	bl	cce0 <fprintf@plt>
   1a5f8:	mov	w19, w0
   1a5fc:	ldr	x0, [sp, #104]
   1a600:	bl	c890 <mpfr_free_str@plt>
   1a604:	mov	w0, w19
   1a608:	ldr	x19, [sp, #16]
   1a60c:	ldp	x29, x30, [sp], #288
   1a610:	ret
   1a614:	ldr	x0, [sp, #104]
   1a618:	cbz	x0, 1a620 <__gmpfr_fprintf@@Base+0xc8>
   1a61c:	bl	c890 <mpfr_free_str@plt>
   1a620:	mov	w19, #0xffffffff            	// #-1
   1a624:	b	1a604 <__gmpfr_fprintf@@Base+0xac>

000000000001a628 <__gmpfr_vfprintf@@Base>:
   1a628:	stp	x29, x30, [sp, #-80]!
   1a62c:	mov	x29, sp
   1a630:	str	x19, [sp, #16]
   1a634:	mov	x19, x0
   1a638:	ldp	x4, x5, [x2]
   1a63c:	stp	x4, x5, [sp, #32]
   1a640:	ldp	x2, x3, [x2, #16]
   1a644:	stp	x2, x3, [sp, #48]
   1a648:	add	x2, sp, #0x20
   1a64c:	add	x0, sp, #0x48
   1a650:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a654:	tbnz	w0, #31, 1a688 <__gmpfr_vfprintf@@Base+0x60>
   1a658:	ldr	x2, [sp, #72]
   1a65c:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a660:	add	x1, x1, #0x550
   1a664:	mov	x0, x19
   1a668:	bl	cce0 <fprintf@plt>
   1a66c:	mov	w19, w0
   1a670:	ldr	x0, [sp, #72]
   1a674:	bl	c890 <mpfr_free_str@plt>
   1a678:	mov	w0, w19
   1a67c:	ldr	x19, [sp, #16]
   1a680:	ldp	x29, x30, [sp], #80
   1a684:	ret
   1a688:	ldr	x0, [sp, #72]
   1a68c:	mov	w19, #0xffffffff            	// #-1
   1a690:	cbz	x0, 1a678 <__gmpfr_vfprintf@@Base+0x50>
   1a694:	bl	c890 <mpfr_free_str@plt>
   1a698:	b	1a678 <__gmpfr_vfprintf@@Base+0x50>

000000000001a69c <mpfr_sprintf@@Base>:
   1a69c:	stp	x29, x30, [sp, #-288]!
   1a6a0:	mov	x29, sp
   1a6a4:	str	x19, [sp, #16]
   1a6a8:	mov	x19, x0
   1a6ac:	str	x2, [sp, #240]
   1a6b0:	str	x3, [sp, #248]
   1a6b4:	str	x4, [sp, #256]
   1a6b8:	str	x5, [sp, #264]
   1a6bc:	str	x6, [sp, #272]
   1a6c0:	str	x7, [sp, #280]
   1a6c4:	str	q0, [sp, #112]
   1a6c8:	str	q1, [sp, #128]
   1a6cc:	str	q2, [sp, #144]
   1a6d0:	str	q3, [sp, #160]
   1a6d4:	str	q4, [sp, #176]
   1a6d8:	str	q5, [sp, #192]
   1a6dc:	str	q6, [sp, #208]
   1a6e0:	str	q7, [sp, #224]
   1a6e4:	add	x0, sp, #0x120
   1a6e8:	str	x0, [sp, #72]
   1a6ec:	str	x0, [sp, #80]
   1a6f0:	add	x0, sp, #0xf0
   1a6f4:	str	x0, [sp, #88]
   1a6f8:	mov	w0, #0xffffffd0            	// #-48
   1a6fc:	str	w0, [sp, #96]
   1a700:	mov	w0, #0xffffff80            	// #-128
   1a704:	str	w0, [sp, #100]
   1a708:	ldp	x2, x3, [sp, #72]
   1a70c:	stp	x2, x3, [sp, #32]
   1a710:	ldp	x2, x3, [sp, #88]
   1a714:	stp	x2, x3, [sp, #48]
   1a718:	add	x2, sp, #0x20
   1a71c:	add	x0, sp, #0x68
   1a720:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a724:	tbnz	w0, #31, 1a758 <mpfr_sprintf@@Base+0xbc>
   1a728:	ldr	x2, [sp, #104]
   1a72c:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a730:	add	x1, x1, #0x550
   1a734:	mov	x0, x19
   1a738:	bl	bd10 <sprintf@plt>
   1a73c:	mov	w19, w0
   1a740:	ldr	x0, [sp, #104]
   1a744:	bl	c890 <mpfr_free_str@plt>
   1a748:	mov	w0, w19
   1a74c:	ldr	x19, [sp, #16]
   1a750:	ldp	x29, x30, [sp], #288
   1a754:	ret
   1a758:	ldr	x0, [sp, #104]
   1a75c:	cbz	x0, 1a764 <mpfr_sprintf@@Base+0xc8>
   1a760:	bl	c890 <mpfr_free_str@plt>
   1a764:	mov	w19, #0xffffffff            	// #-1
   1a768:	b	1a748 <mpfr_sprintf@@Base+0xac>

000000000001a76c <__gmpfr_vsprintf@@Base>:
   1a76c:	stp	x29, x30, [sp, #-80]!
   1a770:	mov	x29, sp
   1a774:	str	x19, [sp, #16]
   1a778:	mov	x19, x0
   1a77c:	ldp	x4, x5, [x2]
   1a780:	stp	x4, x5, [sp, #32]
   1a784:	ldp	x2, x3, [x2, #16]
   1a788:	stp	x2, x3, [sp, #48]
   1a78c:	add	x2, sp, #0x20
   1a790:	add	x0, sp, #0x48
   1a794:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a798:	tbnz	w0, #31, 1a7cc <__gmpfr_vsprintf@@Base+0x60>
   1a79c:	ldr	x2, [sp, #72]
   1a7a0:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a7a4:	add	x1, x1, #0x550
   1a7a8:	mov	x0, x19
   1a7ac:	bl	bd10 <sprintf@plt>
   1a7b0:	mov	w19, w0
   1a7b4:	ldr	x0, [sp, #72]
   1a7b8:	bl	c890 <mpfr_free_str@plt>
   1a7bc:	mov	w0, w19
   1a7c0:	ldr	x19, [sp, #16]
   1a7c4:	ldp	x29, x30, [sp], #80
   1a7c8:	ret
   1a7cc:	ldr	x0, [sp, #72]
   1a7d0:	mov	w19, #0xffffffff            	// #-1
   1a7d4:	cbz	x0, 1a7bc <__gmpfr_vsprintf@@Base+0x50>
   1a7d8:	bl	c890 <mpfr_free_str@plt>
   1a7dc:	b	1a7bc <__gmpfr_vsprintf@@Base+0x50>

000000000001a7e0 <mpfr_asprintf@@Base>:
   1a7e0:	stp	x29, x30, [sp, #-272]!
   1a7e4:	mov	x29, sp
   1a7e8:	str	x19, [sp, #16]
   1a7ec:	mov	x19, x0
   1a7f0:	str	x2, [sp, #224]
   1a7f4:	str	x3, [sp, #232]
   1a7f8:	str	x4, [sp, #240]
   1a7fc:	str	x5, [sp, #248]
   1a800:	str	x6, [sp, #256]
   1a804:	str	x7, [sp, #264]
   1a808:	str	q0, [sp, #96]
   1a80c:	str	q1, [sp, #112]
   1a810:	str	q2, [sp, #128]
   1a814:	str	q3, [sp, #144]
   1a818:	str	q4, [sp, #160]
   1a81c:	str	q5, [sp, #176]
   1a820:	str	q6, [sp, #192]
   1a824:	str	q7, [sp, #208]
   1a828:	add	x2, sp, #0x110
   1a82c:	str	x2, [sp, #64]
   1a830:	str	x2, [sp, #72]
   1a834:	add	x2, sp, #0xe0
   1a838:	str	x2, [sp, #80]
   1a83c:	mov	w2, #0xffffffd0            	// #-48
   1a840:	str	w2, [sp, #88]
   1a844:	mov	w2, #0xffffff80            	// #-128
   1a848:	str	w2, [sp, #92]
   1a84c:	ldp	x2, x3, [sp, #64]
   1a850:	stp	x2, x3, [sp, #32]
   1a854:	ldp	x2, x3, [sp, #80]
   1a858:	stp	x2, x3, [sp, #48]
   1a85c:	add	x2, sp, #0x20
   1a860:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1a864:	tbnz	w0, #31, 1a874 <mpfr_asprintf@@Base+0x94>
   1a868:	ldr	x19, [sp, #16]
   1a86c:	ldp	x29, x30, [sp], #272
   1a870:	ret
   1a874:	ldr	x0, [x19]
   1a878:	cbz	x0, 1a880 <mpfr_asprintf@@Base+0xa0>
   1a87c:	bl	c890 <mpfr_free_str@plt>
   1a880:	mov	w0, #0xffffffff            	// #-1
   1a884:	b	1a868 <mpfr_asprintf@@Base+0x88>
   1a888:	ldr	x2, [x0, #24]
   1a88c:	cmn	x2, #0x1
   1a890:	b.eq	1a8bc <mpfr_asprintf@@Base+0xdc>  // b.none
   1a894:	adds	x2, x2, x1
   1a898:	ccmp	x1, x2, #0x2, pl  // pl = nfrst
   1a89c:	b.hi	1a8ac <mpfr_asprintf@@Base+0xcc>  // b.pmore
   1a8a0:	str	x2, [x0, #24]
   1a8a4:	mov	w0, #0x0                   	// #0
   1a8a8:	ret
   1a8ac:	mov	x1, #0xffffffffffffffff    	// #-1
   1a8b0:	str	x1, [x0, #24]
   1a8b4:	mov	w0, #0x1                   	// #1
   1a8b8:	b	1a8a8 <mpfr_asprintf@@Base+0xc8>
   1a8bc:	mov	w0, #0x1                   	// #1
   1a8c0:	b	1a8a8 <mpfr_asprintf@@Base+0xc8>
   1a8c4:	stp	x29, x30, [sp, #-48]!
   1a8c8:	mov	x29, sp
   1a8cc:	stp	x19, x20, [sp, #16]
   1a8d0:	str	x21, [sp, #32]
   1a8d4:	mov	x19, x0
   1a8d8:	ldr	x21, [x0, #8]
   1a8dc:	ldr	x0, [x0]
   1a8e0:	sub	x21, x21, x0
   1a8e4:	and	x20, x1, #0xfffffffffffff000
   1a8e8:	adds	x20, x20, #0x1, lsl #12
   1a8ec:	ccmp	x1, x20, #0x2, cc  // cc = lo, ul, last
   1a8f0:	b.hi	1a93c <mpfr_asprintf@@Base+0x15c>  // b.pmore
   1a8f4:	mvn	x0, x20
   1a8f8:	ldr	x1, [x19, #16]
   1a8fc:	cmp	x1, x0
   1a900:	b.cs	1a958 <mpfr_asprintf@@Base+0x178>  // b.hs, b.nlast
   1a904:	ldr	x1, [x19, #16]
   1a908:	add	x2, x1, x20
   1a90c:	ldr	x0, [x19]
   1a910:	bl	c1c0 <mpfr_reallocate_func@plt>
   1a914:	str	x0, [x19]
   1a918:	ldr	x1, [x19, #16]
   1a91c:	add	x20, x1, x20
   1a920:	str	x20, [x19, #16]
   1a924:	add	x0, x0, x21
   1a928:	str	x0, [x19, #8]
   1a92c:	ldp	x19, x20, [sp, #16]
   1a930:	ldr	x21, [sp, #32]
   1a934:	ldp	x29, x30, [sp], #48
   1a938:	ret
   1a93c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a940:	add	x2, x2, #0x558
   1a944:	mov	w1, #0x260                 	// #608
   1a948:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a94c:	add	x0, x0, #0x570
   1a950:	bl	cb40 <mpfr_assert_fail@plt>
   1a954:	b	1a8f4 <mpfr_asprintf@@Base+0x114>
   1a958:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a95c:	add	x2, x2, #0x580
   1a960:	mov	w1, #0x265                 	// #613
   1a964:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1a968:	add	x0, x0, #0x570
   1a96c:	bl	cb40 <mpfr_assert_fail@plt>
   1a970:	b	1a904 <mpfr_asprintf@@Base+0x124>
   1a974:	cbz	x0, 1a9cc <mpfr_asprintf@@Base+0x1ec>
   1a978:	stp	x29, x30, [sp, #-48]!
   1a97c:	mov	x29, sp
   1a980:	stp	x19, x20, [sp, #16]
   1a984:	str	x21, [sp, #32]
   1a988:	mov	x19, x0
   1a98c:	mov	x21, #0x10                  	// #16
   1a990:	b	1a9b0 <mpfr_asprintf@@Base+0x1d0>
   1a994:	bl	c890 <mpfr_free_str@plt>
   1a998:	ldr	x20, [x19, #8]
   1a99c:	mov	x1, x21
   1a9a0:	mov	x0, x19
   1a9a4:	bl	cc20 <mpfr_free_func@plt>
   1a9a8:	cbz	x20, 1a9bc <mpfr_asprintf@@Base+0x1dc>
   1a9ac:	mov	x19, x20
   1a9b0:	ldr	x0, [x19]
   1a9b4:	cbnz	x0, 1a994 <mpfr_asprintf@@Base+0x1b4>
   1a9b8:	b	1a998 <mpfr_asprintf@@Base+0x1b8>
   1a9bc:	ldp	x19, x20, [sp, #16]
   1a9c0:	ldr	x21, [sp, #32]
   1a9c4:	ldp	x29, x30, [sp], #48
   1a9c8:	ret
   1a9cc:	ret
   1a9d0:	stp	x29, x30, [sp, #-32]!
   1a9d4:	mov	x29, sp
   1a9d8:	stp	x19, x20, [sp, #16]
   1a9dc:	mov	x20, x1
   1a9e0:	mov	x19, x0
   1a9e4:	ldr	x0, [x0, #8]
   1a9e8:	cbnz	x0, 1a9e0 <mpfr_asprintf@@Base+0x200>
   1a9ec:	mov	x0, #0x10                  	// #16
   1a9f0:	bl	ccf0 <mpfr_allocate_func@plt>
   1a9f4:	str	x0, [x19, #8]
   1a9f8:	str	xzr, [x0, #8]
   1a9fc:	str	x20, [x0]
   1aa00:	mov	x0, x20
   1aa04:	ldp	x19, x20, [sp, #16]
   1aa08:	ldp	x29, x30, [sp], #32
   1aa0c:	ret
   1aa10:	stp	x29, x30, [sp, #-80]!
   1aa14:	mov	x29, sp
   1aa18:	stp	x21, x22, [sp, #32]
   1aa1c:	stp	x23, x24, [sp, #48]
   1aa20:	stp	x25, x26, [sp, #64]
   1aa24:	mov	x23, x0
   1aa28:	mov	w21, w1
   1aa2c:	mov	x22, x2
   1aa30:	mov	x24, x3
   1aa34:	ldr	w26, [x4, #28]
   1aa38:	ldr	x0, [x4, #16]
   1aa3c:	cbnz	x0, 1aa60 <mpfr_asprintf@@Base+0x280>
   1aa40:	stp	x19, x20, [sp, #16]
   1aa44:	cmp	w1, #0xa
   1aa48:	b.gt	1aa80 <mpfr_asprintf@@Base+0x2a0>
   1aa4c:	add	w19, w1, #0x2f
   1aa50:	and	w19, w19, #0xff
   1aa54:	mov	x20, #0x8                   	// #8
   1aa58:	mov	w25, #0x1                   	// #1
   1aa5c:	b	1ab18 <mpfr_asprintf@@Base+0x338>
   1aa60:	mov	w5, w26
   1aa64:	mov	x4, x3
   1aa68:	mov	x3, x2
   1aa6c:	mov	w2, w1
   1aa70:	mov	x1, x23
   1aa74:	mov	x0, #0x0                   	// #0
   1aa78:	bl	c500 <mpfr_get_str@plt>
   1aa7c:	b	1ab40 <mpfr_asprintf@@Base+0x360>
   1aa80:	add	w0, w1, #0x56
   1aa84:	and	w0, w0, #0xff
   1aa88:	add	w19, w1, #0x3c
   1aa8c:	and	w19, w19, #0xff
   1aa90:	cmp	w1, #0x24
   1aa94:	csel	w19, w19, w0, gt
   1aa98:	b	1aa54 <mpfr_asprintf@@Base+0x274>
   1aa9c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1aaa0:	add	x2, x2, #0x5a0
   1aaa4:	mov	w1, #0x3df                 	// #991
   1aaa8:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1aaac:	add	x0, x0, #0x570
   1aab0:	bl	cb40 <mpfr_assert_fail@plt>
   1aab4:	mov	w5, w25
   1aab8:	mov	x4, x24
   1aabc:	mov	x3, x20
   1aac0:	mov	w2, w21
   1aac4:	mov	x1, x23
   1aac8:	mov	x0, #0x0                   	// #0
   1aacc:	bl	c500 <mpfr_get_str@plt>
   1aad0:	ldrb	w1, [x0]
   1aad4:	cmp	w1, #0x2d
   1aad8:	cset	w2, eq  // eq = none
   1aadc:	cset	x1, eq  // eq = none
   1aae0:	cinc	x4, x0, eq  // eq = none
   1aae4:	ldrb	w2, [x0, w2, uxtw]
   1aae8:	cmp	w2, w19
   1aaec:	b.ne	1aafc <mpfr_asprintf@@Base+0x31c>  // b.any
   1aaf0:	ldrb	w5, [x4, #1]!
   1aaf4:	cmp	w5, w19
   1aaf8:	b.eq	1aaf0 <mpfr_asprintf@@Base+0x310>  // b.none
   1aafc:	add	x1, x1, x20
   1ab00:	add	x1, x0, x1
   1ab04:	cmp	x4, x1
   1ab08:	b.cc	1ab54 <mpfr_asprintf@@Base+0x374>  // b.lo, b.ul, b.last
   1ab0c:	bl	c890 <mpfr_free_str@plt>
   1ab10:	tbnz	x20, #63, 1aa9c <mpfr_asprintf@@Base+0x2bc>
   1ab14:	lsl	x20, x20, #1
   1ab18:	cmp	x20, x22
   1ab1c:	b.cc	1aab4 <mpfr_asprintf@@Base+0x2d4>  // b.lo, b.ul, b.last
   1ab20:	mov	w5, w26
   1ab24:	mov	x4, x24
   1ab28:	mov	x3, x22
   1ab2c:	mov	w2, w21
   1ab30:	mov	x1, x23
   1ab34:	mov	x0, #0x0                   	// #0
   1ab38:	bl	c500 <mpfr_get_str@plt>
   1ab3c:	ldp	x19, x20, [sp, #16]
   1ab40:	ldp	x21, x22, [sp, #32]
   1ab44:	ldp	x23, x24, [sp, #48]
   1ab48:	ldp	x25, x26, [sp, #64]
   1ab4c:	ldp	x29, x30, [sp], #80
   1ab50:	ret
   1ab54:	ldp	x19, x20, [sp, #16]
   1ab58:	b	1ab40 <mpfr_asprintf@@Base+0x360>
   1ab5c:	stp	x29, x30, [sp, #-144]!
   1ab60:	mov	x29, sp
   1ab64:	stp	x19, x20, [sp, #16]
   1ab68:	stp	x21, x22, [sp, #32]
   1ab6c:	stp	x23, x24, [sp, #48]
   1ab70:	stp	x25, x26, [sp, #64]
   1ab74:	mov	x19, x0
   1ab78:	mov	x26, x1
   1ab7c:	mov	x22, x2
   1ab80:	ldr	w24, [x2, #8]
   1ab84:	ldrb	w21, [x2, #32]
   1ab88:	and	w20, w21, #0xfffffffd
   1ab8c:	and	w20, w20, #0xff
   1ab90:	and	w21, w21, #0xffffffdf
   1ab94:	and	w21, w21, #0xff
   1ab98:	cmp	w21, #0x47
   1ab9c:	b.ne	1abac <mpfr_asprintf@@Base+0x3cc>  // b.any
   1aba0:	ldrb	w0, [x2]
   1aba4:	mov	w25, #0x1                   	// #1
   1aba8:	tbnz	w0, #0, 1abb8 <mpfr_asprintf@@Base+0x3d8>
   1abac:	cmp	w21, #0x47
   1abb0:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1abb4:	cset	w25, gt
   1abb8:	ldr	w0, [x26, #8]
   1abbc:	tbnz	w0, #31, 1abe8 <mpfr_asprintf@@Base+0x408>
   1abc0:	ldrb	w0, [x22]
   1abc4:	mov	w1, #0xa                   	// #10
   1abc8:	tst	w0, w1
   1abcc:	b.eq	1abf0 <mpfr_asprintf@@Base+0x410>  // b.none
   1abd0:	tst	x0, #0x8
   1abd4:	mov	w0, #0x2b                  	// #43
   1abd8:	mov	w1, #0x20                  	// #32
   1abdc:	csel	w0, w0, w1, ne  // ne = any
   1abe0:	strb	w0, [x19, #16]
   1abe4:	b	1abf0 <mpfr_asprintf@@Base+0x410>
   1abe8:	mov	w0, #0x2d                  	// #45
   1abec:	strb	w0, [x19, #16]
   1abf0:	mov	x0, #0x1                   	// #1
   1abf4:	str	x0, [x19, #56]
   1abf8:	cbz	x3, 1ac90 <mpfr_asprintf@@Base+0x4b0>
   1abfc:	ldr	x0, [x3]
   1ac00:	str	x0, [sp, #136]
   1ac04:	ldr	x23, [x3, #8]
   1ac08:	ldrsw	x0, [x26, #8]
   1ac0c:	add	x23, x23, x0, lsr #63
   1ac10:	str	x23, [x19, #48]
   1ac14:	cbz	w24, 1acdc <mpfr_asprintf@@Base+0x4fc>
   1ac18:	add	x26, x23, #0x1
   1ac1c:	mov	x0, x26
   1ac20:	bl	bab0 <strlen@plt>
   1ac24:	cbnz	w25, 1ac4c <mpfr_asprintf@@Base+0x46c>
   1ac28:	ldrb	w1, [x23, x0]
   1ac2c:	cmp	w1, #0x30
   1ac30:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1ac34:	b.eq	1ac4c <mpfr_asprintf@@Base+0x46c>  // b.none
   1ac38:	sub	x0, x0, #0x1
   1ac3c:	ldrb	w1, [x23, x0]
   1ac40:	cmp	w1, #0x30
   1ac44:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1ac48:	b.ne	1ac38 <mpfr_asprintf@@Base+0x458>  // b.any
   1ac4c:	mov	x1, #0x7fffffff            	// #2147483647
   1ac50:	cmp	x0, x1
   1ac54:	b.hi	1adf4 <mpfr_asprintf@@Base+0x614>  // b.pmore
   1ac58:	cbz	x0, 1acdc <mpfr_asprintf@@Base+0x4fc>
   1ac5c:	str	x26, [x19, #80]
   1ac60:	str	x0, [x19, #88]
   1ac64:	cmp	w21, #0x47
   1ac68:	b.ne	1ac74 <mpfr_asprintf@@Base+0x494>  // b.any
   1ac6c:	ldrb	w1, [x22]
   1ac70:	tbz	w1, #0, 1acec <mpfr_asprintf@@Base+0x50c>
   1ac74:	cmp	w24, #0x0
   1ac78:	b.le	1acec <mpfr_asprintf@@Base+0x50c>
   1ac7c:	cmp	w24, w0
   1ac80:	b.le	1acec <mpfr_asprintf@@Base+0x50c>
   1ac84:	sub	w0, w24, w0
   1ac88:	str	w0, [x19, #96]
   1ac8c:	b	1acec <mpfr_asprintf@@Base+0x50c>
   1ac90:	sxtw	x2, w24
   1ac94:	cmp	w24, #0x0
   1ac98:	ldp	x0, x1, [x22]
   1ac9c:	stp	x0, x1, [sp, #80]
   1aca0:	ldp	x0, x1, [x22, #16]
   1aca4:	stp	x0, x1, [sp, #96]
   1aca8:	ldr	x0, [x22, #32]
   1acac:	str	x0, [sp, #112]
   1acb0:	add	x4, sp, #0x50
   1acb4:	mov	x3, x26
   1acb8:	csinc	x2, xzr, x2, lt  // lt = tstop
   1acbc:	mov	w1, #0xa                   	// #10
   1acc0:	add	x0, sp, #0x88
   1acc4:	bl	1aa10 <mpfr_asprintf@@Base+0x230>
   1acc8:	mov	x23, x0
   1accc:	mov	x1, x0
   1acd0:	ldr	x0, [x19, #120]
   1acd4:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1acd8:	b	1ac08 <mpfr_asprintf@@Base+0x428>
   1acdc:	ldr	x0, [x19, #88]
   1ace0:	cbnz	x0, 1acec <mpfr_asprintf@@Base+0x50c>
   1ace4:	ldrb	w0, [x22]
   1ace8:	tbz	w0, #0, 1ad04 <mpfr_asprintf@@Base+0x524>
   1acec:	bl	bea0 <localeconv@plt>
   1acf0:	ldr	x0, [x0]
   1acf4:	ldrb	w1, [x0, #1]
   1acf8:	mov	w0, #0x2e                  	// #46
   1acfc:	cbz	w1, 1add8 <mpfr_asprintf@@Base+0x5f8>
   1ad00:	strb	w0, [x19, #68]
   1ad04:	ldr	x1, [sp, #136]
   1ad08:	subs	x1, x1, #0x1
   1ad0c:	str	x1, [sp, #136]
   1ad10:	cneg	x1, x1, mi  // mi = first
   1ad14:	mov	x2, #0x3                   	// #3
   1ad18:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1ad1c:	movk	x0, #0xcccd
   1ad20:	cmp	x1, #0x9
   1ad24:	b.ls	1ade8 <mpfr_asprintf@@Base+0x608>  // b.plast
   1ad28:	add	x2, x2, #0x1
   1ad2c:	mov	x3, x1
   1ad30:	umulh	x1, x1, x0
   1ad34:	lsr	x1, x1, #3
   1ad38:	cmp	x3, #0x63
   1ad3c:	b.hi	1ad28 <mpfr_asprintf@@Base+0x548>  // b.pmore
   1ad40:	str	x2, [x19, #112]
   1ad44:	cmp	x2, #0x3
   1ad48:	b.ls	1ade8 <mpfr_asprintf@@Base+0x608>  // b.plast
   1ad4c:	ldr	x0, [x19, #112]
   1ad50:	add	x0, x0, #0x1
   1ad54:	bl	ccf0 <mpfr_allocate_func@plt>
   1ad58:	mov	x21, x0
   1ad5c:	mov	x1, x0
   1ad60:	ldr	x0, [x19, #120]
   1ad64:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1ad68:	str	x0, [x19, #104]
   1ad6c:	cmp	w20, #0x45
   1ad70:	mov	w0, #0x65                  	// #101
   1ad74:	csel	w20, w20, w0, eq  // eq = none
   1ad78:	strb	w20, [sp, #128]
   1ad7c:	strb	wzr, [sp, #129]
   1ad80:	add	x19, sp, #0x80
   1ad84:	mov	x0, x19
   1ad88:	bl	bab0 <strlen@plt>
   1ad8c:	add	x2, x19, x0
   1ad90:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1ad94:	add	x1, x1, #0x5c0
   1ad98:	ldr	w3, [x1]
   1ad9c:	str	w3, [x19, x0]
   1ada0:	ldur	w0, [x1, #3]
   1ada4:	stur	w0, [x2, #3]
   1ada8:	ldr	x2, [sp, #136]
   1adac:	mov	x1, x19
   1adb0:	mov	x0, x21
   1adb4:	bl	bd10 <sprintf@plt>
   1adb8:	cmp	w0, #0x0
   1adbc:	csetm	w0, lt  // lt = tstop
   1adc0:	ldp	x19, x20, [sp, #16]
   1adc4:	ldp	x21, x22, [sp, #32]
   1adc8:	ldp	x23, x24, [sp, #48]
   1adcc:	ldp	x25, x26, [sp, #64]
   1add0:	ldp	x29, x30, [sp], #144
   1add4:	ret
   1add8:	bl	bea0 <localeconv@plt>
   1addc:	ldr	x0, [x0]
   1ade0:	ldrb	w0, [x0]
   1ade4:	b	1ad00 <mpfr_asprintf@@Base+0x520>
   1ade8:	mov	x0, #0x4                   	// #4
   1adec:	str	x0, [x19, #112]
   1adf0:	b	1ad4c <mpfr_asprintf@@Base+0x56c>
   1adf4:	mov	w0, #0xffffffff            	// #-1
   1adf8:	b	1adc0 <mpfr_asprintf@@Base+0x5e0>
   1adfc:	stp	x29, x30, [sp, #-80]!
   1ae00:	mov	x29, sp
   1ae04:	stp	x19, x20, [sp, #16]
   1ae08:	str	x21, [sp, #32]
   1ae0c:	mov	x20, x0
   1ae10:	ldr	x0, [x0]
   1ae14:	cmp	x0, #0x40
   1ae18:	add	x19, sp, #0x30
   1ae1c:	mov	x1, #0x40                  	// #64
   1ae20:	csel	x1, x0, x1, ge  // ge = tcont
   1ae24:	mov	x0, x19
   1ae28:	bl	ca80 <mpfr_init2@plt>
   1ae2c:	mov	w2, #0x1                   	// #1
   1ae30:	mov	w1, #0xa                   	// #10
   1ae34:	ldr	x0, [x20, #16]
   1ae38:	bl	cb80 <mpfr_ceil_mul@plt>
   1ae3c:	mov	x21, x0
   1ae40:	mov	w3, #0x2                   	// #2
   1ae44:	mov	x2, #0x0                   	// #0
   1ae48:	sub	x1, x0, #0x1
   1ae4c:	mov	x0, x19
   1ae50:	bl	ba80 <mpfr_set_si_2exp@plt>
   1ae54:	mov	w3, #0x2                   	// #2
   1ae58:	mov	x2, x19
   1ae5c:	mov	x1, #0xa                   	// #10
   1ae60:	mov	x0, x19
   1ae64:	bl	ca10 <mpfr_ui_pow@plt>
   1ae68:	mov	x1, x19
   1ae6c:	mov	x0, x20
   1ae70:	bl	c9b0 <mpfr_cmpabs@plt>
   1ae74:	eor	x19, x0, #0x80000000
   1ae78:	lsr	w19, w19, #31
   1ae7c:	add	x19, x19, x21
   1ae80:	sub	x19, x19, #0x2
   1ae84:	add	x0, sp, #0x30
   1ae88:	bl	c070 <mpfr_clear@plt>
   1ae8c:	mov	x0, x19
   1ae90:	ldp	x19, x20, [sp, #16]
   1ae94:	ldr	x21, [sp, #32]
   1ae98:	ldp	x29, x30, [sp], #80
   1ae9c:	ret
   1aea0:	stp	x29, x30, [sp, #-192]!
   1aea4:	mov	x29, sp
   1aea8:	stp	x19, x20, [sp, #16]
   1aeac:	stp	x21, x22, [sp, #32]
   1aeb0:	stp	x23, x24, [sp, #48]
   1aeb4:	stp	x25, x26, [sp, #64]
   1aeb8:	mov	x20, x0
   1aebc:	mov	x21, x1
   1aec0:	mov	x19, x2
   1aec4:	mov	x25, x3
   1aec8:	ldr	w23, [x2, #8]
   1aecc:	ldr	w26, [x2, #28]
   1aed0:	ldrb	w22, [x2, #32]
   1aed4:	and	w22, w22, #0xffffffdf
   1aed8:	and	w22, w22, #0xff
   1aedc:	mov	w24, #0x1                   	// #1
   1aee0:	cmp	w22, #0x47
   1aee4:	b.ne	1aef0 <mpfr_asprintf@@Base+0x710>  // b.any
   1aee8:	ldrb	w24, [x2]
   1aeec:	and	w24, w24, #0x1
   1aef0:	ldr	w0, [x21, #8]
   1aef4:	tbnz	w0, #31, 1af20 <mpfr_asprintf@@Base+0x740>
   1aef8:	ldrb	w0, [x19]
   1aefc:	mov	w1, #0xa                   	// #10
   1af00:	tst	w0, w1
   1af04:	b.eq	1af28 <mpfr_asprintf@@Base+0x748>  // b.none
   1af08:	tst	x0, #0x8
   1af0c:	mov	w0, #0x2b                  	// #43
   1af10:	mov	w1, #0x20                  	// #32
   1af14:	csel	w0, w0, w1, ne  // ne = any
   1af18:	strb	w0, [x20, #16]
   1af1c:	b	1af28 <mpfr_asprintf@@Base+0x748>
   1af20:	mov	w0, #0x2d                  	// #45
   1af24:	strb	w0, [x20, #16]
   1af28:	ldr	x0, [x21, #16]
   1af2c:	cmp	x0, #0x0
   1af30:	b.le	1b010 <mpfr_asprintf@@Base+0x830>
   1af34:	mov	x0, x21
   1af38:	bl	1adfc <mpfr_asprintf@@Base+0x61c>
   1af3c:	str	x0, [sp, #184]
   1af40:	mov	x1, #0x7fffffff            	// #2147483647
   1af44:	cmp	x0, x1
   1af48:	b.gt	1b4a0 <mpfr_asprintf@@Base+0xcc0>
   1af4c:	cbz	x25, 1b390 <mpfr_asprintf@@Base+0xbb0>
   1af50:	ldr	x0, [x25]
   1af54:	str	x0, [sp, #184]
   1af58:	ldr	x22, [x25, #8]
   1af5c:	ldrsw	x0, [x21, #8]
   1af60:	add	x22, x22, x0, lsr #63
   1af64:	str	x22, [x20, #48]
   1af68:	mov	x0, x22
   1af6c:	bl	bab0 <strlen@plt>
   1af70:	mov	x21, x0
   1af74:	ldr	x0, [sp, #184]
   1af78:	cmp	x0, x21
   1af7c:	b.ls	1b3d8 <mpfr_asprintf@@Base+0xbf8>  // b.plast
   1af80:	sub	w0, w0, w21
   1af84:	str	w0, [x20, #64]
   1af88:	str	x21, [x20, #56]
   1af8c:	ldrb	w25, [x19]
   1af90:	tbnz	w25, #4, 1b3e0 <mpfr_asprintf@@Base+0xc00>
   1af94:	ldr	x1, [x20, #56]
   1af98:	add	x22, x22, x1
   1af9c:	sub	x19, x21, x1
   1afa0:	cbnz	w24, 1b4b0 <mpfr_asprintf@@Base+0xcd0>
   1afa4:	sub	x2, x19, #0x1
   1afa8:	add	x0, x22, x2
   1afac:	ldrb	w2, [x22, x2]
   1afb0:	cmp	w2, #0x30
   1afb4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1afb8:	b.eq	1afd8 <mpfr_asprintf@@Base+0x7f8>  // b.none
   1afbc:	sub	x21, x1, x21
   1afc0:	add	x21, x0, x21
   1afc4:	sub	x19, x19, #0x1
   1afc8:	ldrb	w1, [x21, x19]
   1afcc:	cmp	w1, #0x30
   1afd0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1afd4:	b.ne	1afc4 <mpfr_asprintf@@Base+0x7e4>  // b.any
   1afd8:	cbz	x19, 1b4bc <mpfr_asprintf@@Base+0xcdc>
   1afdc:	mov	x0, #0x7fffffff            	// #2147483647
   1afe0:	cmp	x19, x0
   1afe4:	b.hi	1b4a8 <mpfr_asprintf@@Base+0xcc8>  // b.pmore
   1afe8:	bl	bea0 <localeconv@plt>
   1afec:	ldr	x0, [x0]
   1aff0:	ldrb	w1, [x0, #1]
   1aff4:	mov	w0, #0x2e                  	// #46
   1aff8:	cbz	w1, 1b41c <mpfr_asprintf@@Base+0xc3c>
   1affc:	strb	w0, [x20, #68]
   1b000:	str	x22, [x20, #80]
   1b004:	str	x19, [x20, #88]
   1b008:	cbz	w24, 1b4bc <mpfr_asprintf@@Base+0xcdc>
   1b00c:	b	1b4b4 <mpfr_asprintf@@Base+0xcd4>
   1b010:	mov	x0, #0x1                   	// #1
   1b014:	str	x0, [x20, #56]
   1b018:	mov	x0, #0x2                   	// #2
   1b01c:	bl	ccf0 <mpfr_allocate_func@plt>
   1b020:	mov	x1, x0
   1b024:	mov	w0, #0x30                  	// #48
   1b028:	strb	w0, [x1]
   1b02c:	strb	wzr, [x1, #1]
   1b030:	ldr	x0, [x20, #120]
   1b034:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1b038:	str	x0, [x20, #48]
   1b03c:	cbnz	w23, 1b0f8 <mpfr_asprintf@@Base+0x918>
   1b040:	ldr	x0, [x21]
   1b044:	str	x0, [sp, #152]
   1b048:	mov	w0, #0x1                   	// #1
   1b04c:	str	w0, [sp, #160]
   1b050:	ldr	x0, [x21, #16]
   1b054:	str	x0, [sp, #168]
   1b058:	ldr	x0, [x21, #24]
   1b05c:	str	x0, [sp, #176]
   1b060:	cmp	w26, #0x4
   1b064:	b.eq	1b0ac <mpfr_asprintf@@Base+0x8cc>  // b.none
   1b068:	cmp	w26, #0x3
   1b06c:	b.eq	1b094 <mpfr_asprintf@@Base+0x8b4>  // b.none
   1b070:	cmp	w26, #0x2
   1b074:	b.eq	1b0a0 <mpfr_asprintf@@Base+0x8c0>  // b.none
   1b078:	cbnz	w26, 1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b07c:	fmov	d0, #5.000000000000000000e-01
   1b080:	add	x0, sp, #0x98
   1b084:	bl	bcf0 <mpfr_cmp_d@plt>
   1b088:	cmp	w0, #0x0
   1b08c:	b.gt	1b0ac <mpfr_asprintf@@Base+0x8cc>
   1b090:	b	1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b094:	ldr	w0, [x21, #8]
   1b098:	tbz	w0, #31, 1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b09c:	b	1b0ac <mpfr_asprintf@@Base+0x8cc>
   1b0a0:	ldr	w0, [x21, #8]
   1b0a4:	cmp	w0, #0x0
   1b0a8:	b.le	1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b0ac:	ldr	x0, [x20, #48]
   1b0b0:	mov	w1, #0x31                  	// #49
   1b0b4:	strb	w1, [x0]
   1b0b8:	ldrb	w0, [x19]
   1b0bc:	tbnz	w0, #0, 1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b0c0:	ldr	w0, [x20, #72]
   1b0c4:	cbnz	w0, 1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b0c8:	ldr	x0, [x20, #88]
   1b0cc:	cbnz	x0, 1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b0d0:	ldr	w0, [x20, #96]
   1b0d4:	cbz	w0, 1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b0d8:	bl	bea0 <localeconv@plt>
   1b0dc:	ldr	x0, [x0]
   1b0e0:	ldrb	w1, [x0, #1]
   1b0e4:	mov	w0, #0x2e                  	// #46
   1b0e8:	cbz	w1, 1b380 <mpfr_asprintf@@Base+0xba0>
   1b0ec:	strb	w0, [x20, #68]
   1b0f0:	mov	w0, #0x0                   	// #0
   1b0f4:	b	1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b0f8:	str	x27, [sp, #80]
   1b0fc:	mov	x0, x21
   1b100:	bl	1adfc <mpfr_asprintf@@Base+0x61c>
   1b104:	str	x0, [sp, #184]
   1b108:	neg	w1, w23
   1b10c:	sxtw	x27, w1
   1b110:	cmp	x0, w1, sxtw
   1b114:	b.ge	1b250 <mpfr_asprintf@@Base+0xa70>  // b.tcont
   1b118:	cmp	w26, #0x3
   1b11c:	b.eq	1b18c <mpfr_asprintf@@Base+0x9ac>  // b.none
   1b120:	b.gt	1b144 <mpfr_asprintf@@Base+0x964>
   1b124:	cmp	w26, #0x1
   1b128:	b.eq	1b198 <mpfr_asprintf@@Base+0x9b8>  // b.none
   1b12c:	cmp	w26, #0x2
   1b130:	b.ne	1b1a4 <mpfr_asprintf@@Base+0x9c4>  // b.any
   1b134:	ldr	w0, [x21, #8]
   1b138:	cmp	w0, #0x0
   1b13c:	cset	w21, gt
   1b140:	b	1b194 <mpfr_asprintf@@Base+0x9b4>
   1b144:	sub	w26, w26, #0x4
   1b148:	cmp	w26, #0x1
   1b14c:	b.hi	1b238 <mpfr_asprintf@@Base+0xa58>  // b.pmore
   1b150:	sub	w23, w23, #0x1
   1b154:	str	w23, [x20, #72]
   1b158:	mov	x0, #0x1                   	// #1
   1b15c:	str	x0, [x20, #88]
   1b160:	mov	x0, #0x2                   	// #2
   1b164:	bl	ccf0 <mpfr_allocate_func@plt>
   1b168:	mov	x1, x0
   1b16c:	mov	w0, #0x31                  	// #49
   1b170:	strb	w0, [x1]
   1b174:	strb	wzr, [x1, #1]
   1b178:	ldr	x0, [x20, #120]
   1b17c:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1b180:	str	x0, [x20, #80]
   1b184:	ldr	x27, [sp, #80]
   1b188:	b	1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b18c:	ldr	w0, [x21, #8]
   1b190:	lsr	w21, w0, #31
   1b194:	cbnz	w21, 1b150 <mpfr_asprintf@@Base+0x970>
   1b198:	str	w23, [x20, #72]
   1b19c:	ldr	x27, [sp, #80]
   1b1a0:	b	1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b1a4:	ldr	x24, [x21]
   1b1a8:	cmp	x24, #0x38
   1b1ac:	mov	x0, #0x38                  	// #56
   1b1b0:	csel	x24, x24, x0, ge  // ge = tcont
   1b1b4:	cbnz	w26, 1b238 <mpfr_asprintf@@Base+0xa58>
   1b1b8:	add	x1, x24, #0x8
   1b1bc:	add	x0, sp, #0x98
   1b1c0:	bl	ca80 <mpfr_init2@plt>
   1b1c4:	add	x22, sp, #0x98
   1b1c8:	mov	w26, #0x3                   	// #3
   1b1cc:	mov	x25, #0x1                   	// #1
   1b1d0:	add	x24, x24, #0x8
   1b1d4:	mov	x1, x24
   1b1d8:	mov	x0, x22
   1b1dc:	bl	bed0 <mpfr_set_prec@plt>
   1b1e0:	mov	w3, #0x0                   	// #0
   1b1e4:	mov	x2, #0x0                   	// #0
   1b1e8:	mov	x1, x27
   1b1ec:	mov	x0, x22
   1b1f0:	bl	ba80 <mpfr_set_si_2exp@plt>
   1b1f4:	mov	w2, w26
   1b1f8:	mov	x1, x22
   1b1fc:	mov	x0, x22
   1b200:	bl	bd80 <mpfr_exp10@plt>
   1b204:	mov	w3, #0x0                   	// #0
   1b208:	mov	x2, x25
   1b20c:	mov	x1, x22
   1b210:	mov	x0, x22
   1b214:	bl	c8f0 <mpfr_div_2ui@plt>
   1b218:	mov	x1, x21
   1b21c:	mov	x0, x22
   1b220:	bl	c9b0 <mpfr_cmpabs@plt>
   1b224:	cbz	w0, 1b1d0 <mpfr_asprintf@@Base+0x9f0>
   1b228:	lsr	w21, w0, #31
   1b22c:	add	x0, sp, #0x98
   1b230:	bl	c070 <mpfr_clear@plt>
   1b234:	b	1b194 <mpfr_asprintf@@Base+0x9b4>
   1b238:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b23c:	add	x2, x2, #0x5c8
   1b240:	mov	w1, #0x58f                 	// #1423
   1b244:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b248:	add	x0, x0, #0x570
   1b24c:	bl	cb40 <mpfr_assert_fail@plt>
   1b250:	cbz	x25, 1b2e0 <mpfr_asprintf@@Base+0xb00>
   1b254:	ldr	x0, [x25]
   1b258:	str	x0, [sp, #184]
   1b25c:	ldr	x25, [x25, #8]
   1b260:	ldrsw	x0, [x21, #8]
   1b264:	add	x25, x25, x0, lsr #63
   1b268:	ldr	x21, [sp, #184]
   1b26c:	cmp	x21, #0x1
   1b270:	b.eq	1b328 <mpfr_asprintf@@Base+0xb48>  // b.none
   1b274:	str	x25, [x20, #80]
   1b278:	neg	w26, w21
   1b27c:	str	w26, [x20, #72]
   1b280:	mov	x0, x25
   1b284:	bl	bab0 <strlen@plt>
   1b288:	cbnz	w24, 1b2b8 <mpfr_asprintf@@Base+0xad8>
   1b28c:	add	x1, x25, x0
   1b290:	ldurb	w1, [x1, #-1]
   1b294:	cmp	w1, #0x30
   1b298:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1b29c:	b.eq	1b2b8 <mpfr_asprintf@@Base+0xad8>  // b.none
   1b2a0:	sub	x25, x25, #0x1
   1b2a4:	sub	x0, x0, #0x1
   1b2a8:	ldrb	w1, [x25, x0]
   1b2ac:	cmp	w1, #0x30
   1b2b0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1b2b4:	b.ne	1b2a4 <mpfr_asprintf@@Base+0xac4>  // b.any
   1b2b8:	mov	x1, #0x7fffffff            	// #2147483647
   1b2bc:	cmp	x0, x1
   1b2c0:	b.hi	1b494 <mpfr_asprintf@@Base+0xcb4>  // b.pmore
   1b2c4:	str	x0, [x20, #88]
   1b2c8:	cmp	w22, #0x47
   1b2cc:	b.ne	1b350 <mpfr_asprintf@@Base+0xb70>  // b.any
   1b2d0:	ldrb	w1, [x19]
   1b2d4:	tbnz	w1, #0, 1b4dc <mpfr_asprintf@@Base+0xcfc>
   1b2d8:	ldr	x27, [sp, #80]
   1b2dc:	b	1b0c0 <mpfr_asprintf@@Base+0x8e0>
   1b2e0:	ldp	x2, x3, [x19]
   1b2e4:	stp	x2, x3, [sp, #96]
   1b2e8:	ldp	x2, x3, [x19, #16]
   1b2ec:	stp	x2, x3, [sp, #112]
   1b2f0:	ldr	x1, [x19, #32]
   1b2f4:	str	x1, [sp, #128]
   1b2f8:	add	x0, x0, #0x1
   1b2fc:	add	x4, sp, #0x60
   1b300:	mov	x3, x21
   1b304:	add	x2, x0, w23, sxtw
   1b308:	mov	w1, #0xa                   	// #10
   1b30c:	add	x0, sp, #0xb8
   1b310:	bl	1aa10 <mpfr_asprintf@@Base+0x230>
   1b314:	mov	x25, x0
   1b318:	mov	x1, x0
   1b31c:	ldr	x0, [x20, #120]
   1b320:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1b324:	b	1b260 <mpfr_asprintf@@Base+0xa80>
   1b328:	ldr	x0, [x20, #48]
   1b32c:	mov	w1, #0x31                  	// #49
   1b330:	strb	w1, [x0]
   1b334:	cmp	w22, #0x47
   1b338:	b.ne	1b344 <mpfr_asprintf@@Base+0xb64>  // b.any
   1b33c:	ldrb	w0, [x19]
   1b340:	tbz	w0, #0, 1b378 <mpfr_asprintf@@Base+0xb98>
   1b344:	str	w23, [x20, #72]
   1b348:	ldr	x27, [sp, #80]
   1b34c:	b	1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b350:	add	x26, x0, w26, sxtw
   1b354:	cmp	x26, w23, sxtw
   1b358:	b.cc	1b364 <mpfr_asprintf@@Base+0xb84>  // b.lo, b.ul, b.last
   1b35c:	ldr	x27, [sp, #80]
   1b360:	b	1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b364:	add	w21, w23, w21
   1b368:	sub	w0, w21, w0
   1b36c:	str	w0, [x20, #96]
   1b370:	ldr	x27, [sp, #80]
   1b374:	b	1b0b8 <mpfr_asprintf@@Base+0x8d8>
   1b378:	ldr	x27, [sp, #80]
   1b37c:	b	1b0c0 <mpfr_asprintf@@Base+0x8e0>
   1b380:	bl	bea0 <localeconv@plt>
   1b384:	ldr	x0, [x0]
   1b388:	ldrb	w0, [x0]
   1b38c:	b	1b0ec <mpfr_asprintf@@Base+0x90c>
   1b390:	ldp	x2, x3, [x19]
   1b394:	stp	x2, x3, [sp, #96]
   1b398:	ldp	x2, x3, [x19, #16]
   1b39c:	stp	x2, x3, [sp, #112]
   1b3a0:	ldr	x1, [x19, #32]
   1b3a4:	str	x1, [sp, #128]
   1b3a8:	add	x0, x0, w23, sxtw
   1b3ac:	add	x4, sp, #0x60
   1b3b0:	mov	x3, x21
   1b3b4:	add	x2, x0, #0x1
   1b3b8:	mov	w1, #0xa                   	// #10
   1b3bc:	add	x0, sp, #0xb8
   1b3c0:	bl	1aa10 <mpfr_asprintf@@Base+0x230>
   1b3c4:	mov	x22, x0
   1b3c8:	mov	x1, x0
   1b3cc:	ldr	x0, [x20, #120]
   1b3d0:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1b3d4:	b	1af5c <mpfr_asprintf@@Base+0x77c>
   1b3d8:	str	x0, [x20, #56]
   1b3dc:	b	1af8c <mpfr_asprintf@@Base+0x7ac>
   1b3e0:	bl	bea0 <localeconv@plt>
   1b3e4:	ldr	x0, [x0, #8]
   1b3e8:	ldrb	w0, [x0]
   1b3ec:	cbnz	w0, 1b3f8 <mpfr_asprintf@@Base+0xc18>
   1b3f0:	strb	w0, [x20, #40]
   1b3f4:	b	1af94 <mpfr_asprintf@@Base+0x7b4>
   1b3f8:	bl	bea0 <localeconv@plt>
   1b3fc:	ldr	x0, [x0, #8]
   1b400:	ldrb	w1, [x0, #1]
   1b404:	mov	w0, #0x0                   	// #0
   1b408:	cbnz	w1, 1b3f0 <mpfr_asprintf@@Base+0xc10>
   1b40c:	bl	bea0 <localeconv@plt>
   1b410:	ldr	x0, [x0, #8]
   1b414:	ldrb	w0, [x0]
   1b418:	b	1b3f0 <mpfr_asprintf@@Base+0xc10>
   1b41c:	bl	bea0 <localeconv@plt>
   1b420:	ldr	x0, [x0]
   1b424:	ldrb	w0, [x0]
   1b428:	b	1affc <mpfr_asprintf@@Base+0x81c>
   1b42c:	bl	bea0 <localeconv@plt>
   1b430:	ldr	x0, [x0]
   1b434:	ldrb	w1, [x0, #1]
   1b438:	mov	w0, #0x2e                  	// #46
   1b43c:	cbz	w1, 1b454 <mpfr_asprintf@@Base+0xc74>
   1b440:	strb	w0, [x20, #68]
   1b444:	ldr	x0, [x20, #88]
   1b448:	sub	w23, w23, w0
   1b44c:	str	w23, [x20, #96]
   1b450:	b	1b4bc <mpfr_asprintf@@Base+0xcdc>
   1b454:	bl	bea0 <localeconv@plt>
   1b458:	ldr	x0, [x0]
   1b45c:	ldrb	w0, [x0]
   1b460:	b	1b440 <mpfr_asprintf@@Base+0xc60>
   1b464:	bl	bea0 <localeconv@plt>
   1b468:	ldr	x0, [x0]
   1b46c:	ldrb	w1, [x0, #1]
   1b470:	mov	w0, #0x2e                  	// #46
   1b474:	cbz	w1, 1b484 <mpfr_asprintf@@Base+0xca4>
   1b478:	strb	w0, [x20, #68]
   1b47c:	mov	w0, #0x0                   	// #0
   1b480:	b	1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b484:	bl	bea0 <localeconv@plt>
   1b488:	ldr	x0, [x0]
   1b48c:	ldrb	w0, [x0]
   1b490:	b	1b478 <mpfr_asprintf@@Base+0xc98>
   1b494:	mov	w0, #0xffffffff            	// #-1
   1b498:	ldr	x27, [sp, #80]
   1b49c:	b	1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b4a0:	mov	w0, #0xffffffff            	// #-1
   1b4a4:	b	1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b4a8:	mov	w0, #0xffffffff            	// #-1
   1b4ac:	b	1b4c4 <mpfr_asprintf@@Base+0xce4>
   1b4b0:	cbnz	x19, 1afdc <mpfr_asprintf@@Base+0x7fc>
   1b4b4:	cmp	x19, w23, sxtw
   1b4b8:	b.cc	1b42c <mpfr_asprintf@@Base+0xc4c>  // b.lo, b.ul, b.last
   1b4bc:	mov	w0, #0x0                   	// #0
   1b4c0:	tbnz	w25, #0, 1b464 <mpfr_asprintf@@Base+0xc84>
   1b4c4:	ldp	x19, x20, [sp, #16]
   1b4c8:	ldp	x21, x22, [sp, #32]
   1b4cc:	ldp	x23, x24, [sp, #48]
   1b4d0:	ldp	x25, x26, [sp, #64]
   1b4d4:	ldp	x29, x30, [sp], #192
   1b4d8:	ret
   1b4dc:	add	x26, x0, w26, sxtw
   1b4e0:	cmp	x26, w23, sxtw
   1b4e4:	b.cc	1b364 <mpfr_asprintf@@Base+0xb84>  // b.lo, b.ul, b.last
   1b4e8:	ldr	x27, [sp, #80]
   1b4ec:	b	1b0d8 <mpfr_asprintf@@Base+0x8f8>
   1b4f0:	stp	x29, x30, [sp, #-48]!
   1b4f4:	mov	x29, sp
   1b4f8:	stp	x19, x20, [sp, #16]
   1b4fc:	stp	x21, x22, [sp, #32]
   1b500:	mov	x21, x0
   1b504:	and	w22, w1, #0xff
   1b508:	mov	x19, x2
   1b50c:	mov	x1, x2
   1b510:	bl	1a888 <mpfr_asprintf@@Base+0xa8>
   1b514:	mov	w20, #0x1                   	// #1
   1b518:	cbnz	w0, 1b570 <mpfr_asprintf@@Base+0xd90>
   1b51c:	mov	w20, w0
   1b520:	ldr	x0, [x21, #16]
   1b524:	cbz	x0, 1b570 <mpfr_asprintf@@Base+0xd90>
   1b528:	mvn	x1, x19
   1b52c:	cmp	x0, x1
   1b530:	b.cs	1b584 <mpfr_asprintf@@Base+0xda4>  // b.hs, b.nlast
   1b534:	ldr	x1, [x21, #8]
   1b538:	add	x1, x1, x19
   1b53c:	ldr	x0, [x21]
   1b540:	ldr	x2, [x21, #16]
   1b544:	add	x0, x0, x2
   1b548:	cmp	x1, x0
   1b54c:	b.cs	1b5a0 <mpfr_asprintf@@Base+0xdc0>  // b.hs, b.nlast
   1b550:	cmp	x19, #0x1
   1b554:	b.ne	1b5b0 <mpfr_asprintf@@Base+0xdd0>  // b.any
   1b558:	ldr	x0, [x21, #8]
   1b55c:	strb	w22, [x0]
   1b560:	ldr	x0, [x21, #8]
   1b564:	add	x1, x0, x19
   1b568:	str	x1, [x21, #8]
   1b56c:	strb	wzr, [x0, x19]
   1b570:	mov	w0, w20
   1b574:	ldp	x19, x20, [sp, #16]
   1b578:	ldp	x21, x22, [sp, #32]
   1b57c:	ldp	x29, x30, [sp], #48
   1b580:	ret
   1b584:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b588:	add	x2, x2, #0x580
   1b58c:	mov	w1, #0x29a                 	// #666
   1b590:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b594:	add	x0, x0, #0x570
   1b598:	bl	cb40 <mpfr_assert_fail@plt>
   1b59c:	b	1b534 <mpfr_asprintf@@Base+0xd54>
   1b5a0:	mov	x1, x19
   1b5a4:	mov	x0, x21
   1b5a8:	bl	1a8c4 <mpfr_asprintf@@Base+0xe4>
   1b5ac:	b	1b550 <mpfr_asprintf@@Base+0xd70>
   1b5b0:	mov	x2, x19
   1b5b4:	mov	w1, w22
   1b5b8:	ldr	x0, [x21, #8]
   1b5bc:	bl	c110 <memset@plt>
   1b5c0:	b	1b560 <mpfr_asprintf@@Base+0xd80>
   1b5c4:	stp	x29, x30, [sp, #-48]!
   1b5c8:	mov	x29, sp
   1b5cc:	stp	x19, x20, [sp, #16]
   1b5d0:	stp	x21, x22, [sp, #32]
   1b5d4:	mov	x19, x0
   1b5d8:	mov	x22, x1
   1b5dc:	mov	x20, x2
   1b5e0:	mov	x1, x2
   1b5e4:	bl	1a888 <mpfr_asprintf@@Base+0xa8>
   1b5e8:	mov	w21, #0x1                   	// #1
   1b5ec:	cbnz	w0, 1b640 <mpfr_asprintf@@Base+0xe60>
   1b5f0:	mov	w21, w0
   1b5f4:	ldr	x0, [x19, #16]
   1b5f8:	cbz	x0, 1b640 <mpfr_asprintf@@Base+0xe60>
   1b5fc:	mvn	x1, x20
   1b600:	cmp	x0, x1
   1b604:	b.cs	1b654 <mpfr_asprintf@@Base+0xe74>  // b.hs, b.nlast
   1b608:	ldr	x1, [x19, #8]
   1b60c:	add	x1, x1, x20
   1b610:	ldr	x0, [x19]
   1b614:	ldr	x2, [x19, #16]
   1b618:	add	x0, x0, x2
   1b61c:	cmp	x1, x0
   1b620:	b.cs	1b670 <mpfr_asprintf@@Base+0xe90>  // b.hs, b.nlast
   1b624:	mov	x2, x20
   1b628:	mov	x1, x22
   1b62c:	ldr	x0, [x19, #8]
   1b630:	bl	c940 <strncat@plt>
   1b634:	ldr	x2, [x19, #8]
   1b638:	add	x20, x2, x20
   1b63c:	str	x20, [x19, #8]
   1b640:	mov	w0, w21
   1b644:	ldp	x19, x20, [sp, #16]
   1b648:	ldp	x21, x22, [sp, #32]
   1b64c:	ldp	x29, x30, [sp], #48
   1b650:	ret
   1b654:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b658:	add	x2, x2, #0x5e8
   1b65c:	mov	w1, #0x27e                 	// #638
   1b660:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b664:	add	x0, x0, #0x570
   1b668:	bl	cb40 <mpfr_assert_fail@plt>
   1b66c:	b	1b608 <mpfr_asprintf@@Base+0xe28>
   1b670:	mov	x1, x20
   1b674:	mov	x0, x19
   1b678:	bl	1a8c4 <mpfr_asprintf@@Base+0xe4>
   1b67c:	b	1b624 <mpfr_asprintf@@Base+0xe44>

000000000001b680 <mpfr_vasnprintf_aux@@Base>:
   1b680:	sub	sp, sp, #0x2b0
   1b684:	stp	x29, x30, [sp, #16]
   1b688:	add	x29, sp, #0x10
   1b68c:	stp	x19, x20, [sp, #32]
   1b690:	stp	x21, x22, [sp, #48]
   1b694:	stp	x23, x24, [sp, #64]
   1b698:	stp	x25, x26, [sp, #80]
   1b69c:	stp	x27, x28, [sp, #96]
   1b6a0:	mov	x5, x0
   1b6a4:	str	x0, [x29, #160]
   1b6a8:	str	x1, [x29, #96]
   1b6ac:	mov	x6, x2
   1b6b0:	str	x2, [x29, #144]
   1b6b4:	mov	x27, x3
   1b6b8:	mov	x25, x4
   1b6bc:	ldr	x28, [x4]
   1b6c0:	ldr	x0, [x4, #8]
   1b6c4:	str	x0, [x29, #192]
   1b6c8:	ldr	x0, [x4, #16]
   1b6cc:	str	x0, [x29, #176]
   1b6d0:	ldr	w26, [x4, #24]
   1b6d4:	ldr	w0, [x4, #28]
   1b6d8:	str	w0, [x29, #188]
   1b6dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1b6e0:	ldr	x1, [x0, #2576]
   1b6e4:	add	x0, x0, #0xa10
   1b6e8:	blr	x1
   1b6ec:	mrs	x1, tpidr_el0
   1b6f0:	ldr	w0, [x1, x0]
   1b6f4:	str	w0, [x29, #184]
   1b6f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1b6fc:	ldr	x2, [x0, #2512]
   1b700:	add	x0, x0, #0x9d0
   1b704:	blr	x2
   1b708:	add	x2, x1, x0
   1b70c:	ldr	x0, [x1, x0]
   1b710:	str	x0, [x29, #136]
   1b714:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1b718:	ldr	x3, [x0, #2544]
   1b71c:	add	x0, x0, #0x9f0
   1b720:	blr	x3
   1b724:	ldr	x3, [x1, x0]
   1b728:	str	x3, [x29, #128]
   1b72c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1b730:	str	x3, [x2]
   1b734:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1b738:	str	x2, [x1, x0]
   1b73c:	orr	x0, x5, x6
   1b740:	str	x0, [x29, #104]
   1b744:	cbnz	x0, 1ddac <mpfr_vasnprintf_aux@@Base+0x272c>
   1b748:	str	x0, [x29, #656]
   1b74c:	str	xzr, [x29, #664]
   1b750:	ldp	x0, x1, [x25]
   1b754:	add	x2, x29, #0x2a0
   1b758:	stp	x0, x1, [x2, #-104]
   1b75c:	ldp	x0, x1, [x25, #16]
   1b760:	stp	x0, x1, [x2, #-88]
   1b764:	ldrb	w0, [x27]
   1b768:	cbz	w0, 1dcd0 <mpfr_vasnprintf_aux@@Base+0x2650>
   1b76c:	ldr	x0, [x29, #160]
   1b770:	cmp	x0, #0x0
   1b774:	ldr	x0, [x29, #144]
   1b778:	csinc	x0, x0, xzr, eq  // eq = none
   1b77c:	str	x0, [x29, #152]
   1b780:	str	x27, [x29, #208]
   1b784:	mov	w1, #0x0                   	// #0
   1b788:	mov	x22, #0x71                  	// #113
   1b78c:	movk	x22, #0x71, lsl #32
   1b790:	mov	x23, #0x800000              	// #8388608
   1b794:	movk	x23, #0xc, lsl #32
   1b798:	add	x0, x29, #0x280
   1b79c:	str	x0, [x29, #200]
   1b7a0:	mov	x2, x27
   1b7a4:	mov	w27, w26
   1b7a8:	mov	x26, x25
   1b7ac:	b	1bdf0 <mpfr_vasnprintf_aux@@Base+0x770>
   1b7b0:	add	x3, x2, #0x1
   1b7b4:	cbz	w0, 1dd88 <mpfr_vasnprintf_aux@@Base+0x2708>
   1b7b8:	mov	x4, x3
   1b7bc:	mov	w3, #0x20                  	// #32
   1b7c0:	str	w3, [x29, #228]
   1b7c4:	str	wzr, [x29, #224]
   1b7c8:	str	wzr, [x29, #232]
   1b7cc:	str	wzr, [x29, #248]
   1b7d0:	str	wzr, [x29, #240]
   1b7d4:	str	wzr, [x29, #236]
   1b7d8:	mov	w5, #0x1                   	// #1
   1b7dc:	b	1b818 <mpfr_vasnprintf_aux@@Base+0x198>
   1b7e0:	cmp	w0, #0x20
   1b7e4:	b.ne	1b914 <mpfr_vasnprintf_aux@@Base+0x294>  // b.any
   1b7e8:	add	x3, x4, #0x1
   1b7ec:	str	w5, [x29, #240]
   1b7f0:	b	1b80c <mpfr_vasnprintf_aux@@Base+0x18c>
   1b7f4:	cmp	w0, #0x2d
   1b7f8:	b.eq	1b85c <mpfr_vasnprintf_aux@@Base+0x1dc>  // b.none
   1b7fc:	cmp	w0, #0x30
   1b800:	b.ne	1b914 <mpfr_vasnprintf_aux@@Base+0x294>  // b.any
   1b804:	add	x3, x4, #0x1
   1b808:	str	w0, [x29, #228]
   1b80c:	ldrb	w0, [x3]
   1b810:	add	x4, x4, #0x1
   1b814:	cbz	w0, 1dda4 <mpfr_vasnprintf_aux@@Base+0x2724>
   1b818:	mov	x3, x4
   1b81c:	cmp	w0, #0x2b
   1b820:	b.eq	1b850 <mpfr_vasnprintf_aux@@Base+0x1d0>  // b.none
   1b824:	b.hi	1b7f4 <mpfr_vasnprintf_aux@@Base+0x174>  // b.pmore
   1b828:	cmp	w0, #0x23
   1b82c:	b.eq	1b844 <mpfr_vasnprintf_aux@@Base+0x1c4>  // b.none
   1b830:	cmp	w0, #0x27
   1b834:	b.ne	1b7e0 <mpfr_vasnprintf_aux@@Base+0x160>  // b.any
   1b838:	add	x3, x4, #0x1
   1b83c:	str	w5, [x29, #224]
   1b840:	b	1b80c <mpfr_vasnprintf_aux@@Base+0x18c>
   1b844:	add	x3, x4, #0x1
   1b848:	str	w5, [x29, #236]
   1b84c:	b	1b80c <mpfr_vasnprintf_aux@@Base+0x18c>
   1b850:	add	x3, x4, #0x1
   1b854:	str	w5, [x29, #232]
   1b858:	b	1b80c <mpfr_vasnprintf_aux@@Base+0x18c>
   1b85c:	add	x3, x4, #0x1
   1b860:	str	w5, [x29, #248]
   1b864:	b	1b80c <mpfr_vasnprintf_aux@@Base+0x18c>
   1b868:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b86c:	add	x2, x2, #0x640
   1b870:	mov	w1, #0x80f                 	// #2063
   1b874:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b878:	add	x0, x0, #0x570
   1b87c:	bl	cb40 <mpfr_assert_fail@plt>
   1b880:	tbnz	w27, #31, 1b8e4 <mpfr_vasnprintf_aux@@Base+0x264>
   1b884:	add	x4, x28, #0xb
   1b888:	mov	x0, x28
   1b88c:	and	x28, x4, #0xfffffffffffffff8
   1b890:	ldr	w20, [x0]
   1b894:	add	x3, x3, #0x1
   1b898:	tbnz	w20, #31, 1b97c <mpfr_vasnprintf_aux@@Base+0x2fc>
   1b89c:	ldrb	w0, [x3]
   1b8a0:	cmp	w0, #0x2e
   1b8a4:	b.eq	1b9b4 <mpfr_vasnprintf_aux@@Base+0x334>  // b.none
   1b8a8:	mov	w25, #0xffffffff            	// #-1
   1b8ac:	ldrb	w0, [x3]
   1b8b0:	cmp	w0, #0x52
   1b8b4:	b.eq	1bc10 <mpfr_vasnprintf_aux@@Base+0x590>  // b.none
   1b8b8:	b.hi	1baf0 <mpfr_vasnprintf_aux@@Base+0x470>  // b.pmore
   1b8bc:	cmp	w0, #0x4e
   1b8c0:	b.eq	1bbf8 <mpfr_vasnprintf_aux@@Base+0x578>  // b.none
   1b8c4:	b.ls	1baa8 <mpfr_vasnprintf_aux@@Base+0x428>  // b.plast
   1b8c8:	cmp	w0, #0x50
   1b8cc:	b.eq	1bc04 <mpfr_vasnprintf_aux@@Base+0x584>  // b.none
   1b8d0:	cmp	w0, #0x51
   1b8d4:	b.ne	1bae4 <mpfr_vasnprintf_aux@@Base+0x464>  // b.any
   1b8d8:	add	x24, x3, #0x1
   1b8dc:	mov	w21, #0xa                   	// #10
   1b8e0:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1b8e4:	add	w4, w27, #0x8
   1b8e8:	cmp	w4, #0x0
   1b8ec:	b.le	1b904 <mpfr_vasnprintf_aux@@Base+0x284>
   1b8f0:	add	x5, x28, #0xb
   1b8f4:	mov	w27, w4
   1b8f8:	mov	x0, x28
   1b8fc:	and	x28, x5, #0xfffffffffffffff8
   1b900:	b	1b890 <mpfr_vasnprintf_aux@@Base+0x210>
   1b904:	ldr	x0, [x29, #192]
   1b908:	add	x0, x0, w27, sxtw
   1b90c:	mov	w27, w4
   1b910:	b	1b890 <mpfr_vasnprintf_aux@@Base+0x210>
   1b914:	ldrb	w0, [x3]
   1b918:	mov	w20, #0x0                   	// #0
   1b91c:	mov	w5, #0x7fffffff            	// #2147483647
   1b920:	cbz	w0, 1dda4 <mpfr_vasnprintf_aux@@Base+0x2724>
   1b924:	cmp	w0, #0x2a
   1b928:	b.eq	1b880 <mpfr_vasnprintf_aux@@Base+0x200>  // b.none
   1b92c:	sub	w4, w0, #0x30
   1b930:	and	w4, w4, #0xff
   1b934:	cmp	w4, #0x9
   1b938:	b.hi	1b898 <mpfr_vasnprintf_aux@@Base+0x218>  // b.pmore
   1b93c:	add	w4, w20, w20, lsl #2
   1b940:	lsl	w4, w4, #1
   1b944:	mov	w6, #0xcccc                	// #52428
   1b948:	movk	w6, #0xccc, lsl #16
   1b94c:	cmp	w20, w6
   1b950:	csel	w4, w4, w5, le
   1b954:	sub	w0, w0, #0x30
   1b958:	cmp	w0, #0x9
   1b95c:	b.hi	1b868 <mpfr_vasnprintf_aux@@Base+0x1e8>  // b.pmore
   1b960:	sub	w6, w5, w0
   1b964:	add	w0, w4, w0
   1b968:	cmp	w6, w4
   1b96c:	csel	w20, w0, w5, ge  // ge = tcont
   1b970:	ldrb	w0, [x3, #1]!
   1b974:	cbnz	w0, 1b924 <mpfr_vasnprintf_aux@@Base+0x2a4>
   1b978:	tbz	w20, #31, 1b8a8 <mpfr_vasnprintf_aux@@Base+0x228>
   1b97c:	neg	w4, w20
   1b980:	mov	w0, #0x80000001            	// #-2147483647
   1b984:	cmp	w20, w0
   1b988:	b.eq	1b99c <mpfr_vasnprintf_aux@@Base+0x31c>  // b.none
   1b98c:	mov	w20, w4
   1b990:	mov	w0, #0x1                   	// #1
   1b994:	str	w0, [x29, #248]
   1b998:	b	1b89c <mpfr_vasnprintf_aux@@Base+0x21c>
   1b99c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b9a0:	add	x2, x2, #0x658
   1b9a4:	mov	w1, #0x815                 	// #2069
   1b9a8:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1b9ac:	add	x0, x0, #0x570
   1b9b0:	bl	cb40 <mpfr_assert_fail@plt>
   1b9b4:	add	x5, x3, #0x1
   1b9b8:	ldrb	w0, [x3, #1]
   1b9bc:	cbz	w0, 1ba6c <mpfr_vasnprintf_aux@@Base+0x3ec>
   1b9c0:	mov	x3, x5
   1b9c4:	mov	w25, #0x0                   	// #0
   1b9c8:	mov	w6, #0x7fffffff            	// #2147483647
   1b9cc:	cmp	w0, #0x2a
   1b9d0:	b.eq	1ba4c <mpfr_vasnprintf_aux@@Base+0x3cc>  // b.none
   1b9d4:	sub	w4, w0, #0x30
   1b9d8:	and	w4, w4, #0xff
   1b9dc:	cmp	w4, #0x9
   1b9e0:	b.hi	1ba64 <mpfr_vasnprintf_aux@@Base+0x3e4>  // b.pmore
   1b9e4:	add	w4, w25, w25, lsl #2
   1b9e8:	lsl	w4, w4, #1
   1b9ec:	mov	w7, #0xcccc                	// #52428
   1b9f0:	movk	w7, #0xccc, lsl #16
   1b9f4:	cmp	w25, w7
   1b9f8:	csel	w4, w4, w6, le
   1b9fc:	sub	w0, w0, #0x30
   1ba00:	cmp	w0, #0x9
   1ba04:	b.hi	1ba34 <mpfr_vasnprintf_aux@@Base+0x3b4>  // b.pmore
   1ba08:	sub	w7, w6, w0
   1ba0c:	add	w0, w4, w0
   1ba10:	cmp	w7, w4
   1ba14:	csel	w25, w0, w6, ge  // ge = tcont
   1ba18:	ldrb	w0, [x3, #1]!
   1ba1c:	cbnz	w0, 1b9cc <mpfr_vasnprintf_aux@@Base+0x34c>
   1ba20:	cmp	x5, x3
   1ba24:	b.eq	1ba6c <mpfr_vasnprintf_aux@@Base+0x3ec>  // b.none
   1ba28:	mov	x24, x3
   1ba2c:	mov	w21, #0x0                   	// #0
   1ba30:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1ba34:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1ba38:	add	x2, x2, #0x640
   1ba3c:	mov	w1, #0x81a                 	// #2074
   1ba40:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1ba44:	add	x0, x0, #0x570
   1ba48:	bl	cb40 <mpfr_assert_fail@plt>
   1ba4c:	tbnz	w27, #31, 1ba78 <mpfr_vasnprintf_aux@@Base+0x3f8>
   1ba50:	add	x4, x28, #0xb
   1ba54:	mov	x0, x28
   1ba58:	and	x28, x4, #0xfffffffffffffff8
   1ba5c:	ldr	w25, [x0]
   1ba60:	add	x3, x3, #0x1
   1ba64:	cmp	x3, x5
   1ba68:	b.ne	1b8ac <mpfr_vasnprintf_aux@@Base+0x22c>  // b.any
   1ba6c:	mov	x3, x5
   1ba70:	mov	w25, #0xffffffff            	// #-1
   1ba74:	b	1b8ac <mpfr_vasnprintf_aux@@Base+0x22c>
   1ba78:	add	w4, w27, #0x8
   1ba7c:	cmp	w4, #0x0
   1ba80:	b.le	1ba98 <mpfr_vasnprintf_aux@@Base+0x418>
   1ba84:	add	x6, x28, #0xb
   1ba88:	mov	w27, w4
   1ba8c:	mov	x0, x28
   1ba90:	and	x28, x6, #0xfffffffffffffff8
   1ba94:	b	1ba5c <mpfr_vasnprintf_aux@@Base+0x3dc>
   1ba98:	ldr	x0, [x29, #192]
   1ba9c:	add	x0, x0, w27, sxtw
   1baa0:	mov	w27, w4
   1baa4:	b	1ba5c <mpfr_vasnprintf_aux@@Base+0x3dc>
   1baa8:	cmp	w0, #0x4c
   1baac:	b.eq	1bbec <mpfr_vasnprintf_aux@@Base+0x56c>  // b.none
   1bab0:	cmp	w0, #0x4d
   1bab4:	b.ne	1bac4 <mpfr_vasnprintf_aux@@Base+0x444>  // b.any
   1bab8:	add	x24, x3, #0x1
   1babc:	mov	w21, #0xb                   	// #11
   1bac0:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bac4:	cmp	w0, #0x46
   1bac8:	b.ne	1bad8 <mpfr_vasnprintf_aux@@Base+0x458>  // b.any
   1bacc:	add	x24, x3, #0x1
   1bad0:	mov	w21, #0x9                   	// #9
   1bad4:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bad8:	mov	x24, x3
   1badc:	mov	w21, #0x0                   	// #0
   1bae0:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bae4:	mov	x24, x3
   1bae8:	mov	w21, #0x0                   	// #0
   1baec:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1baf0:	cmp	w0, #0x6c
   1baf4:	b.eq	1bbbc <mpfr_vasnprintf_aux@@Base+0x53c>  // b.none
   1baf8:	b.ls	1bb18 <mpfr_vasnprintf_aux@@Base+0x498>  // b.plast
   1bafc:	cmp	w0, #0x74
   1bb00:	b.eq	1bbe0 <mpfr_vasnprintf_aux@@Base+0x560>  // b.none
   1bb04:	cmp	w0, #0x7a
   1bb08:	b.ne	1bb8c <mpfr_vasnprintf_aux@@Base+0x50c>  // b.any
   1bb0c:	add	x24, x3, #0x1
   1bb10:	mov	w21, #0x6                   	// #6
   1bb14:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bb18:	cmp	w0, #0x68
   1bb1c:	b.eq	1bb98 <mpfr_vasnprintf_aux@@Base+0x518>  // b.none
   1bb20:	cmp	w0, #0x6a
   1bb24:	b.ne	1bb6c <mpfr_vasnprintf_aux@@Base+0x4ec>  // b.any
   1bb28:	add	x24, x3, #0x1
   1bb2c:	mov	w21, #0x5                   	// #5
   1bb30:	ldrb	w19, [x24]
   1bb34:	cmp	w19, #0x6e
   1bb38:	b.eq	1def8 <mpfr_vasnprintf_aux@@Base+0x2878>  // b.none
   1bb3c:	b.hi	1bda4 <mpfr_vasnprintf_aux@@Base+0x724>  // b.pmore
   1bb40:	cmp	w19, #0x62
   1bb44:	b.eq	1be3c <mpfr_vasnprintf_aux@@Base+0x7bc>  // b.none
   1bb48:	b.ls	1bc48 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.plast
   1bb4c:	cmp	w19, #0x64
   1bb50:	b.eq	1bdd0 <mpfr_vasnprintf_aux@@Base+0x750>  // b.none
   1bb54:	b.ls	1bd84 <mpfr_vasnprintf_aux@@Base+0x704>  // b.plast
   1bb58:	cmp	w19, #0x67
   1bb5c:	b.ls	1bd78 <mpfr_vasnprintf_aux@@Base+0x6f8>  // b.plast
   1bb60:	cmp	w19, #0x69
   1bb64:	b.eq	1bdd0 <mpfr_vasnprintf_aux@@Base+0x750>  // b.none
   1bb68:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1bb6c:	cmp	w0, #0x5a
   1bb70:	b.ne	1bb80 <mpfr_vasnprintf_aux@@Base+0x500>  // b.any
   1bb74:	add	x24, x3, #0x1
   1bb78:	mov	w21, #0xd                   	// #13
   1bb7c:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bb80:	mov	x24, x3
   1bb84:	mov	w21, #0x0                   	// #0
   1bb88:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bb8c:	mov	x24, x3
   1bb90:	mov	w21, #0x0                   	// #0
   1bb94:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bb98:	ldrb	w0, [x3, #1]
   1bb9c:	cmp	w0, #0x68
   1bba0:	b.eq	1bbb0 <mpfr_vasnprintf_aux@@Base+0x530>  // b.none
   1bba4:	add	x24, x3, #0x1
   1bba8:	mov	w21, #0x2                   	// #2
   1bbac:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbb0:	add	x24, x3, #0x2
   1bbb4:	mov	w21, #0x1                   	// #1
   1bbb8:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbbc:	ldrb	w0, [x3, #1]
   1bbc0:	cmp	w0, #0x6c
   1bbc4:	b.eq	1bbd4 <mpfr_vasnprintf_aux@@Base+0x554>  // b.none
   1bbc8:	add	x24, x3, #0x1
   1bbcc:	mov	w21, #0x3                   	// #3
   1bbd0:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbd4:	add	x24, x3, #0x2
   1bbd8:	mov	w21, #0x4                   	// #4
   1bbdc:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbe0:	add	x24, x3, #0x1
   1bbe4:	mov	w21, #0x7                   	// #7
   1bbe8:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbec:	add	x24, x3, #0x1
   1bbf0:	mov	w21, #0x8                   	// #8
   1bbf4:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bbf8:	add	x24, x3, #0x1
   1bbfc:	mov	w21, #0xc                   	// #12
   1bc00:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bc04:	add	x24, x3, #0x1
   1bc08:	mov	w21, #0xe                   	// #14
   1bc0c:	b	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>
   1bc10:	add	x24, x3, #0x1
   1bc14:	ldrb	w0, [x3, #1]
   1bc18:	cmp	w0, #0x55
   1bc1c:	b.eq	1bd3c <mpfr_vasnprintf_aux@@Base+0x6bc>  // b.none
   1bc20:	cmp	w0, #0x55
   1bc24:	b.hi	1bc64 <mpfr_vasnprintf_aux@@Base+0x5e4>  // b.pmore
   1bc28:	cmp	w0, #0x44
   1bc2c:	b.eq	1bd2c <mpfr_vasnprintf_aux@@Base+0x6ac>  // b.none
   1bc30:	cmp	w0, #0x4e
   1bc34:	b.eq	1bd5c <mpfr_vasnprintf_aux@@Base+0x6dc>  // b.none
   1bc38:	cmp	w0, #0x2a
   1bc3c:	b.eq	1bc88 <mpfr_vasnprintf_aux@@Base+0x608>  // b.none
   1bc40:	ldrb	w19, [x3, #1]
   1bc44:	mov	w21, #0xf                   	// #15
   1bc48:	cmp	w19, #0x47
   1bc4c:	b.hi	1bd68 <mpfr_vasnprintf_aux@@Base+0x6e8>  // b.pmore
   1bc50:	cmp	w19, #0x44
   1bc54:	b.hi	1bd78 <mpfr_vasnprintf_aux@@Base+0x6f8>  // b.pmore
   1bc58:	cmp	w19, #0x41
   1bc5c:	b.eq	1bd78 <mpfr_vasnprintf_aux@@Base+0x6f8>  // b.none
   1bc60:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1bc64:	cmp	w0, #0x59
   1bc68:	b.eq	1bd4c <mpfr_vasnprintf_aux@@Base+0x6cc>  // b.none
   1bc6c:	mov	w21, #0xf                   	// #15
   1bc70:	cmp	w0, #0x5a
   1bc74:	b.ne	1bb30 <mpfr_vasnprintf_aux@@Base+0x4b0>  // b.any
   1bc78:	add	x24, x3, #0x2
   1bc7c:	mov	w0, #0x1                   	// #1
   1bc80:	str	w0, [x29, #216]
   1bc84:	b	1bca4 <mpfr_vasnprintf_aux@@Base+0x624>
   1bc88:	add	x24, x3, #0x2
   1bc8c:	tbnz	w27, #31, 1bcfc <mpfr_vasnprintf_aux@@Base+0x67c>
   1bc90:	add	x3, x28, #0xb
   1bc94:	mov	x0, x28
   1bc98:	and	x28, x3, #0xfffffffffffffff8
   1bc9c:	ldr	w0, [x0]
   1bca0:	str	w0, [x29, #216]
   1bca4:	ldrb	w19, [x24]
   1bca8:	cmp	w19, #0x69
   1bcac:	b.eq	1bce0 <mpfr_vasnprintf_aux@@Base+0x660>  // b.none
   1bcb0:	b.ls	1dbac <mpfr_vasnprintf_aux@@Base+0x252c>  // b.plast
   1bcb4:	cmp	w19, #0x70
   1bcb8:	b.eq	1bee0 <mpfr_vasnprintf_aux@@Base+0x860>  // b.none
   1bcbc:	b.ls	1dc28 <mpfr_vasnprintf_aux@@Base+0x25a8>  // b.plast
   1bcc0:	cmp	w19, #0x73
   1bcc4:	b.eq	1bec4 <mpfr_vasnprintf_aux@@Base+0x844>  // b.none
   1bcc8:	cmp	w19, #0x72
   1bccc:	b.ls	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.plast
   1bcd0:	cmp	w19, #0x75
   1bcd4:	b.eq	1bce0 <mpfr_vasnprintf_aux@@Base+0x660>  // b.none
   1bcd8:	cmp	w19, #0x78
   1bcdc:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1bce0:	mov	w21, #0xf                   	// #15
   1bce4:	sub	w3, w21, #0xa
   1bce8:	sub	w0, w21, #0x1
   1bcec:	cmp	w3, #0x4
   1bcf0:	ccmp	w0, #0x6, #0x0, hi  // hi = pmore
   1bcf4:	cset	w0, ls  // ls = plast
   1bcf8:	b	1bd9c <mpfr_vasnprintf_aux@@Base+0x71c>
   1bcfc:	add	w3, w27, #0x8
   1bd00:	cmp	w3, #0x0
   1bd04:	b.le	1bd1c <mpfr_vasnprintf_aux@@Base+0x69c>
   1bd08:	add	x4, x28, #0xb
   1bd0c:	mov	w27, w3
   1bd10:	mov	x0, x28
   1bd14:	and	x28, x4, #0xfffffffffffffff8
   1bd18:	b	1bc9c <mpfr_vasnprintf_aux@@Base+0x61c>
   1bd1c:	ldr	x0, [x29, #192]
   1bd20:	add	x0, x0, w27, sxtw
   1bd24:	mov	w27, w3
   1bd28:	b	1bc9c <mpfr_vasnprintf_aux@@Base+0x61c>
   1bd2c:	add	x24, x3, #0x2
   1bd30:	mov	w0, #0x3                   	// #3
   1bd34:	str	w0, [x29, #216]
   1bd38:	b	1bca4 <mpfr_vasnprintf_aux@@Base+0x624>
   1bd3c:	add	x24, x3, #0x2
   1bd40:	mov	w0, #0x2                   	// #2
   1bd44:	str	w0, [x29, #216]
   1bd48:	b	1bca4 <mpfr_vasnprintf_aux@@Base+0x624>
   1bd4c:	add	x24, x3, #0x2
   1bd50:	mov	w0, #0x4                   	// #4
   1bd54:	str	w0, [x29, #216]
   1bd58:	b	1bca4 <mpfr_vasnprintf_aux@@Base+0x624>
   1bd5c:	add	x24, x3, #0x2
   1bd60:	str	wzr, [x29, #216]
   1bd64:	b	1bca4 <mpfr_vasnprintf_aux@@Base+0x624>
   1bd68:	cmp	w19, #0x58
   1bd6c:	b.eq	1bdd0 <mpfr_vasnprintf_aux@@Base+0x750>  // b.none
   1bd70:	cmp	w19, #0x61
   1bd74:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1bd78:	cbnz	w21, 1be2c <mpfr_vasnprintf_aux@@Base+0x7ac>
   1bd7c:	str	wzr, [x29, #216]
   1bd80:	b	1dc38 <mpfr_vasnprintf_aux@@Base+0x25b8>
   1bd84:	str	wzr, [x29, #216]
   1bd88:	cmp	w19, #0x63
   1bd8c:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1bd90:	cmp	w21, #0x0
   1bd94:	ccmp	w21, #0x3, #0x4, ne  // ne = any
   1bd98:	cset	w0, eq  // eq = none
   1bd9c:	cbz	w0, 1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1bda0:	b	1dc38 <mpfr_vasnprintf_aux@@Base+0x25b8>
   1bda4:	cmp	w19, #0x70
   1bda8:	b.eq	1becc <mpfr_vasnprintf_aux@@Base+0x84c>  // b.none
   1bdac:	b.ls	1bddc <mpfr_vasnprintf_aux@@Base+0x75c>  // b.plast
   1bdb0:	cmp	w19, #0x73
   1bdb4:	b.eq	1beb4 <mpfr_vasnprintf_aux@@Base+0x834>  // b.none
   1bdb8:	cmp	w19, #0x72
   1bdbc:	b.ls	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.plast
   1bdc0:	cmp	w19, #0x75
   1bdc4:	b.eq	1bdd0 <mpfr_vasnprintf_aux@@Base+0x750>  // b.none
   1bdc8:	cmp	w19, #0x78
   1bdcc:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1bdd0:	cbz	w21, 1bd7c <mpfr_vasnprintf_aux@@Base+0x6fc>
   1bdd4:	str	wzr, [x29, #216]
   1bdd8:	b	1bce4 <mpfr_vasnprintf_aux@@Base+0x664>
   1bddc:	cmp	w19, #0x6f
   1bde0:	b.eq	1bdd0 <mpfr_vasnprintf_aux@@Base+0x750>  // b.none
   1bde4:	ldrb	w0, [x24]
   1bde8:	cbz	w0, 1dc3c <mpfr_vasnprintf_aux@@Base+0x25bc>
   1bdec:	mov	x2, x24
   1bdf0:	ldrb	w0, [x2]
   1bdf4:	cmp	w0, #0x25
   1bdf8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1bdfc:	b.eq	1be10 <mpfr_vasnprintf_aux@@Base+0x790>  // b.none
   1be00:	ldrb	w0, [x2, #1]!
   1be04:	cmp	w0, #0x25
   1be08:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1be0c:	b.ne	1be00 <mpfr_vasnprintf_aux@@Base+0x780>  // b.any
   1be10:	cbz	w0, 1da64 <mpfr_vasnprintf_aux@@Base+0x23e4>
   1be14:	ldrb	w0, [x2, #1]
   1be18:	cmp	w0, #0x25
   1be1c:	b.ne	1b7b0 <mpfr_vasnprintf_aux@@Base+0x130>  // b.any
   1be20:	add	x24, x2, #0x2
   1be24:	mov	w1, #0x1                   	// #1
   1be28:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1be2c:	str	wzr, [x29, #216]
   1be30:	b	1dc14 <mpfr_vasnprintf_aux@@Base+0x2594>
   1be34:	mov	w21, #0xf                   	// #15
   1be38:	b	1dc14 <mpfr_vasnprintf_aux@@Base+0x2594>
   1be3c:	str	wzr, [x29, #216]
   1be40:	cmp	w21, #0xf
   1be44:	cset	w0, eq  // eq = none
   1be48:	mov	w19, #0x62                  	// #98
   1be4c:	cbz	w0, 1bdec <mpfr_vasnprintf_aux@@Base+0x76c>
   1be50:	add	x24, x24, #0x1
   1be54:	cmp	w19, #0x6e
   1be58:	b.eq	1bee8 <mpfr_vasnprintf_aux@@Base+0x868>  // b.none
   1be5c:	cmp	w21, #0xe
   1be60:	b.eq	1c1ec <mpfr_vasnprintf_aux@@Base+0xb6c>  // b.none
   1be64:	cmp	w21, #0xf
   1be68:	b.eq	1c45c <mpfr_vasnprintf_aux@@Base+0xddc>  // b.none
   1be6c:	cmp	w21, #0x8
   1be70:	b.eq	1d7e0 <mpfr_vasnprintf_aux@@Base+0x2160>  // b.none
   1be74:	b.hi	1d604 <mpfr_vasnprintf_aux@@Base+0x1f84>  // b.pmore
   1be78:	cmp	w21, #0x5
   1be7c:	b.eq	1d764 <mpfr_vasnprintf_aux@@Base+0x20e4>  // b.none
   1be80:	b.hi	1d5e0 <mpfr_vasnprintf_aux@@Base+0x1f60>  // b.pmore
   1be84:	cmp	w21, #0x3
   1be88:	b.eq	1d674 <mpfr_vasnprintf_aux@@Base+0x1ff4>  // b.none
   1be8c:	b.ls	1d5c0 <mpfr_vasnprintf_aux@@Base+0x1f40>  // b.plast
   1be90:	cmp	w21, #0x4
   1be94:	b.ne	1d91c <mpfr_vasnprintf_aux@@Base+0x229c>  // b.any
   1be98:	tbnz	w27, #31, 1d748 <mpfr_vasnprintf_aux@@Base+0x20c8>
   1be9c:	add	x0, x28, #0xf
   1bea0:	and	x28, x0, #0xfffffffffffffff8
   1bea4:	mov	w1, #0x1                   	// #1
   1bea8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1beac:	mov	w21, #0xf                   	// #15
   1beb0:	b	1be40 <mpfr_vasnprintf_aux@@Base+0x7c0>
   1beb4:	str	wzr, [x29, #216]
   1beb8:	b	1bd90 <mpfr_vasnprintf_aux@@Base+0x710>
   1bebc:	mov	w21, #0xf                   	// #15
   1bec0:	b	1bd90 <mpfr_vasnprintf_aux@@Base+0x710>
   1bec4:	mov	w21, #0xf                   	// #15
   1bec8:	b	1bd90 <mpfr_vasnprintf_aux@@Base+0x710>
   1becc:	str	wzr, [x29, #216]
   1bed0:	cmp	w21, #0x0
   1bed4:	cset	w0, eq  // eq = none
   1bed8:	mov	w19, #0x70                  	// #112
   1bedc:	b	1be4c <mpfr_vasnprintf_aux@@Base+0x7cc>
   1bee0:	mov	w21, #0xf                   	// #15
   1bee4:	b	1bed0 <mpfr_vasnprintf_aux@@Base+0x850>
   1bee8:	tbnz	w27, #31, 1bfc8 <mpfr_vasnprintf_aux@@Base+0x948>
   1beec:	add	x3, x28, #0xf
   1bef0:	mov	x0, x28
   1bef4:	and	x28, x3, #0xfffffffffffffff8
   1bef8:	ldr	x19, [x0]
   1befc:	ldr	x0, [x29, #208]
   1bf00:	sub	x20, x2, x0
   1bf04:	cbz	w1, 1c020 <mpfr_vasnprintf_aux@@Base+0x9a0>
   1bf08:	str	xzr, [x29, #400]
   1bf0c:	add	x1, x20, #0x1
   1bf10:	cmp	x1, #0x4, lsl #12
   1bf14:	b.hi	1bff8 <mpfr_vasnprintf_aux@@Base+0x978>  // b.pmore
   1bf18:	add	x0, x1, #0xf
   1bf1c:	and	x0, x0, #0xfffffffffffffff0
   1bf20:	sub	sp, sp, x0
   1bf24:	add	x25, sp, #0x10
   1bf28:	mov	x2, x20
   1bf2c:	ldr	x1, [x29, #208]
   1bf30:	mov	x0, x25
   1bf34:	bl	cad0 <strncpy@plt>
   1bf38:	strb	wzr, [x25, x20]
   1bf3c:	add	x0, x29, #0x2a0
   1bf40:	ldp	x0, x1, [x0, #-104]
   1bf44:	stp	x0, x1, [x29, #304]
   1bf48:	add	x0, x29, #0x2a0
   1bf4c:	ldp	x0, x1, [x0, #-88]
   1bf50:	stp	x0, x1, [x29, #320]
   1bf54:	add	x2, x29, #0x130
   1bf58:	mov	x1, x25
   1bf5c:	add	x0, x29, #0x1b8
   1bf60:	bl	c050 <__gmp_vasprintf@plt>
   1bf64:	tbnz	w0, #31, 1c008 <mpfr_vasnprintf_aux@@Base+0x988>
   1bf68:	sxtw	x2, w0
   1bf6c:	ldr	x1, [x29, #440]
   1bf70:	ldr	x0, [x29, #200]
   1bf74:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1bf78:	ldr	x0, [x29, #440]
   1bf7c:	bl	c890 <mpfr_free_str@plt>
   1bf80:	ldr	x0, [x29, #400]
   1bf84:	cbnz	x0, 1c018 <mpfr_vasnprintf_aux@@Base+0x998>
   1bf88:	cmp	w21, #0x7
   1bf8c:	b.eq	1c12c <mpfr_vasnprintf_aux@@Base+0xaac>  // b.none
   1bf90:	b.ls	1c040 <mpfr_vasnprintf_aux@@Base+0x9c0>  // b.plast
   1bf94:	cmp	w21, #0xc
   1bf98:	b.eq	1c14c <mpfr_vasnprintf_aux@@Base+0xacc>  // b.none
   1bf9c:	b.ls	1c0d4 <mpfr_vasnprintf_aux@@Base+0xa54>  // b.plast
   1bfa0:	cmp	w21, #0xd
   1bfa4:	b.eq	1c1d0 <mpfr_vasnprintf_aux@@Base+0xb50>  // b.none
   1bfa8:	cmp	w21, #0xf
   1bfac:	b.ne	1c1e0 <mpfr_vasnprintf_aux@@Base+0xb60>  // b.any
   1bfb0:	ldr	w3, [x29, #216]
   1bfb4:	mov	x2, #0x0                   	// #0
   1bfb8:	ldr	x1, [x29, #664]
   1bfbc:	mov	x0, x19
   1bfc0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1bfc4:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1bfc8:	add	w3, w27, #0x8
   1bfcc:	cmp	w3, #0x0
   1bfd0:	b.le	1bfe8 <mpfr_vasnprintf_aux@@Base+0x968>
   1bfd4:	add	x4, x28, #0xf
   1bfd8:	mov	w27, w3
   1bfdc:	mov	x0, x28
   1bfe0:	and	x28, x4, #0xfffffffffffffff8
   1bfe4:	b	1bef8 <mpfr_vasnprintf_aux@@Base+0x878>
   1bfe8:	ldr	x0, [x29, #192]
   1bfec:	add	x0, x0, w27, sxtw
   1bff0:	mov	w27, w3
   1bff4:	b	1bef8 <mpfr_vasnprintf_aux@@Base+0x878>
   1bff8:	add	x0, x29, #0x190
   1bffc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1c000:	mov	x25, x0
   1c004:	b	1bf28 <mpfr_vasnprintf_aux@@Base+0x8a8>
   1c008:	ldr	x0, [x29, #400]
   1c00c:	cbz	x0, 1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c010:	bl	c410 <mpfr_tmp_free@plt>
   1c014:	b	1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c018:	bl	c410 <mpfr_tmp_free@plt>
   1c01c:	b	1bf88 <mpfr_vasnprintf_aux@@Base+0x908>
   1c020:	ldr	x0, [x29, #208]
   1c024:	cmp	x0, x2
   1c028:	b.eq	1bf88 <mpfr_vasnprintf_aux@@Base+0x908>  // b.none
   1c02c:	mov	x2, x20
   1c030:	mov	x1, x0
   1c034:	ldr	x0, [x29, #200]
   1c038:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c03c:	b	1bf88 <mpfr_vasnprintf_aux@@Base+0x908>
   1c040:	cmp	w21, #0x4
   1c044:	b.eq	1c114 <mpfr_vasnprintf_aux@@Base+0xa94>  // b.none
   1c048:	b.ls	1c068 <mpfr_vasnprintf_aux@@Base+0x9e8>  // b.plast
   1c04c:	cmp	w21, #0x5
   1c050:	b.eq	1c120 <mpfr_vasnprintf_aux@@Base+0xaa0>  // b.none
   1c054:	cmp	w21, #0x6
   1c058:	b.ne	1c1e0 <mpfr_vasnprintf_aux@@Base+0xb60>  // b.any
   1c05c:	ldr	x0, [x29, #664]
   1c060:	str	x0, [x19]
   1c064:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c068:	cmp	w21, #0x2
   1c06c:	b.eq	1c108 <mpfr_vasnprintf_aux@@Base+0xa88>  // b.none
   1c070:	cmp	w21, #0x3
   1c074:	b.ne	1c084 <mpfr_vasnprintf_aux@@Base+0xa04>  // b.any
   1c078:	ldr	x0, [x29, #664]
   1c07c:	str	x0, [x19]
   1c080:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c084:	cmp	w21, #0x1
   1c088:	b.ne	1c1e0 <mpfr_vasnprintf_aux@@Base+0xb60>  // b.any
   1c08c:	ldr	x0, [x29, #664]
   1c090:	strb	w0, [x19]
   1c094:	str	x28, [x26]
   1c098:	ldr	x0, [x29, #192]
   1c09c:	str	x0, [x26, #8]
   1c0a0:	ldr	x0, [x29, #176]
   1c0a4:	str	x0, [x26, #16]
   1c0a8:	str	w27, [x26, #24]
   1c0ac:	ldr	w0, [x29, #188]
   1c0b0:	str	w0, [x26, #28]
   1c0b4:	ldp	x0, x1, [x26]
   1c0b8:	add	x2, x29, #0x2a0
   1c0bc:	stp	x0, x1, [x2, #-104]
   1c0c0:	ldp	x0, x1, [x26, #16]
   1c0c4:	stp	x0, x1, [x2, #-88]
   1c0c8:	str	x24, [x29, #208]
   1c0cc:	mov	w1, #0x0                   	// #0
   1c0d0:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1c0d4:	cmp	w21, #0xa
   1c0d8:	b.eq	1c138 <mpfr_vasnprintf_aux@@Base+0xab8>  // b.none
   1c0dc:	cmp	w21, #0xb
   1c0e0:	b.ne	1c0f0 <mpfr_vasnprintf_aux@@Base+0xa70>  // b.any
   1c0e4:	ldr	x0, [x29, #664]
   1c0e8:	str	x0, [x19]
   1c0ec:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c0f0:	cmp	w21, #0x9
   1c0f4:	b.ne	1c1e0 <mpfr_vasnprintf_aux@@Base+0xb60>  // b.any
   1c0f8:	ldr	x1, [x29, #664]
   1c0fc:	mov	x0, x19
   1c100:	bl	c180 <__gmpf_set_ui@plt>
   1c104:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c108:	ldr	x0, [x29, #664]
   1c10c:	strh	w0, [x19]
   1c110:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c114:	ldr	x0, [x29, #664]
   1c118:	str	x0, [x19]
   1c11c:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c120:	ldr	x0, [x29, #664]
   1c124:	str	x0, [x19]
   1c128:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c12c:	ldr	x0, [x29, #664]
   1c130:	str	x0, [x19]
   1c134:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c138:	mov	x2, #0x1                   	// #1
   1c13c:	ldr	x1, [x29, #664]
   1c140:	mov	x0, x19
   1c144:	bl	c560 <__gmpq_set_ui@plt>
   1c148:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c14c:	tbnz	w27, #31, 1c198 <mpfr_vasnprintf_aux@@Base+0xb18>
   1c150:	add	x1, x28, #0xf
   1c154:	mov	x0, x28
   1c158:	and	x28, x1, #0xfffffffffffffff8
   1c15c:	ldr	x0, [x0]
   1c160:	tbnz	x0, #63, 1c1c8 <mpfr_vasnprintf_aux@@Base+0xb48>
   1c164:	cbz	x0, 1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c168:	ldr	x1, [x29, #664]
   1c16c:	str	x1, [x19]
   1c170:	cmp	x0, #0x1
   1c174:	b.eq	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>  // b.none
   1c178:	sub	x0, x0, #0x1
   1c17c:	mov	x1, #0x0                   	// #0
   1c180:	add	x19, x19, #0x8
   1c184:	str	xzr, [x19, x1, lsl #3]
   1c188:	add	x1, x1, #0x1
   1c18c:	cmp	x0, x1
   1c190:	b.ne	1c184 <mpfr_vasnprintf_aux@@Base+0xb04>  // b.any
   1c194:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c198:	add	w1, w27, #0x8
   1c19c:	cmp	w1, #0x0
   1c1a0:	b.le	1c1b8 <mpfr_vasnprintf_aux@@Base+0xb38>
   1c1a4:	add	x2, x28, #0xf
   1c1a8:	mov	w27, w1
   1c1ac:	mov	x0, x28
   1c1b0:	and	x28, x2, #0xfffffffffffffff8
   1c1b4:	b	1c15c <mpfr_vasnprintf_aux@@Base+0xadc>
   1c1b8:	ldr	x0, [x29, #192]
   1c1bc:	add	x0, x0, w27, sxtw
   1c1c0:	mov	w27, w1
   1c1c4:	b	1c15c <mpfr_vasnprintf_aux@@Base+0xadc>
   1c1c8:	neg	x0, x0
   1c1cc:	b	1c168 <mpfr_vasnprintf_aux@@Base+0xae8>
   1c1d0:	ldr	x1, [x29, #664]
   1c1d4:	mov	x0, x19
   1c1d8:	bl	bcb0 <__gmpz_set_ui@plt>
   1c1dc:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c1e0:	ldr	x0, [x29, #664]
   1c1e4:	str	w0, [x19]
   1c1e8:	b	1c094 <mpfr_vasnprintf_aux@@Base+0xa14>
   1c1ec:	tbnz	w27, #31, 1c3e4 <mpfr_vasnprintf_aux@@Base+0xd64>
   1c1f0:	add	x3, x28, #0xf
   1c1f4:	mov	x0, x28
   1c1f8:	and	x28, x3, #0xfffffffffffffff8
   1c1fc:	ldr	x0, [x0]
   1c200:	str	x0, [x29, #216]
   1c204:	ldr	x0, [x29, #208]
   1c208:	sub	x21, x2, x0
   1c20c:	cbz	w1, 1c43c <mpfr_vasnprintf_aux@@Base+0xdbc>
   1c210:	str	xzr, [x29, #400]
   1c214:	add	x1, x21, #0x1
   1c218:	cmp	x1, #0x4, lsl #12
   1c21c:	b.hi	1c414 <mpfr_vasnprintf_aux@@Base+0xd94>  // b.pmore
   1c220:	add	x0, x1, #0xf
   1c224:	and	x0, x0, #0xfffffffffffffff0
   1c228:	sub	sp, sp, x0
   1c22c:	add	x0, sp, #0x10
   1c230:	str	x0, [x29, #168]
   1c234:	mov	x2, x21
   1c238:	ldr	x1, [x29, #208]
   1c23c:	ldr	x0, [x29, #168]
   1c240:	bl	cad0 <strncpy@plt>
   1c244:	ldr	x3, [x29, #168]
   1c248:	strb	wzr, [x3, x21]
   1c24c:	add	x0, x29, #0x2a0
   1c250:	ldp	x0, x1, [x0, #-104]
   1c254:	stp	x0, x1, [x29, #304]
   1c258:	add	x0, x29, #0x2a0
   1c25c:	ldp	x0, x1, [x0, #-88]
   1c260:	stp	x0, x1, [x29, #320]
   1c264:	add	x2, x29, #0x130
   1c268:	mov	x1, x3
   1c26c:	add	x0, x29, #0x1b8
   1c270:	bl	c050 <__gmp_vasprintf@plt>
   1c274:	tbnz	w0, #31, 1c424 <mpfr_vasnprintf_aux@@Base+0xda4>
   1c278:	sxtw	x2, w0
   1c27c:	ldr	x1, [x29, #440]
   1c280:	ldr	x0, [x29, #200]
   1c284:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c288:	ldr	x0, [x29, #440]
   1c28c:	bl	c890 <mpfr_free_str@plt>
   1c290:	ldr	x0, [x29, #400]
   1c294:	cbnz	x0, 1c434 <mpfr_vasnprintf_aux@@Base+0xdb4>
   1c298:	str	x28, [x26]
   1c29c:	ldr	x0, [x29, #192]
   1c2a0:	str	x0, [x26, #8]
   1c2a4:	ldr	x0, [x29, #176]
   1c2a8:	str	x0, [x26, #16]
   1c2ac:	str	w27, [x26, #24]
   1c2b0:	ldr	w0, [x29, #188]
   1c2b4:	str	w0, [x26, #28]
   1c2b8:	ldp	x0, x1, [x26]
   1c2bc:	add	x2, x29, #0x2a0
   1c2c0:	stp	x0, x1, [x2, #-104]
   1c2c4:	ldp	x0, x1, [x26, #16]
   1c2c8:	stp	x0, x1, [x2, #-88]
   1c2cc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c2d0:	add	x0, x0, #0x210
   1c2d4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   1c2d8:	add	x2, x2, #0x8b8
   1c2dc:	ldr	w1, [x29, #228]
   1c2e0:	cmp	w1, #0x30
   1c2e4:	csel	x2, x2, x0, eq  // eq = none
   1c2e8:	ldrb	w0, [x29, #600]
   1c2ec:	ldr	w1, [x29, #236]
   1c2f0:	bfxil	w0, w1, #0, #1
   1c2f4:	ldr	w1, [x29, #240]
   1c2f8:	bfi	w0, w1, #1, #1
   1c2fc:	ldr	w1, [x29, #248]
   1c300:	bfi	w0, w1, #2, #1
   1c304:	ldr	w1, [x29, #232]
   1c308:	bfi	w0, w1, #3, #1
   1c30c:	ldr	w1, [x29, #224]
   1c310:	bfi	w0, w1, #4, #1
   1c314:	strb	w0, [x29, #600]
   1c318:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c31c:	add	x1, x1, #0x210
   1c320:	adrp	x3, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c324:	add	x3, x3, #0x608
   1c328:	tst	x0, #0x1
   1c32c:	csel	x3, x3, x1, ne  // ne = any
   1c330:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c334:	add	x1, x1, #0x210
   1c338:	adrp	x4, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c33c:	add	x4, x4, #0x610
   1c340:	tst	x0, #0x8
   1c344:	csel	x4, x4, x1, ne  // ne = any
   1c348:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c34c:	add	x1, x1, #0x210
   1c350:	adrp	x5, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c354:	add	x5, x5, #0x618
   1c358:	tst	x0, #0x2
   1c35c:	csel	x5, x5, x1, ne  // ne = any
   1c360:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c364:	add	x1, x1, #0x210
   1c368:	adrp	x6, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c36c:	add	x6, x6, #0x620
   1c370:	tst	x0, #0x4
   1c374:	csel	x6, x6, x1, ne  // ne = any
   1c378:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x37b0>
   1c37c:	add	x1, x1, #0x210
   1c380:	adrp	x7, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c384:	add	x7, x7, #0x628
   1c388:	tst	x0, #0x10
   1c38c:	add	x0, x29, #0x1b8
   1c390:	str	w19, [sp]
   1c394:	csel	x7, x7, x1, ne  // ne = any
   1c398:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1c39c:	add	x1, x1, #0x670
   1c3a0:	mov	x19, x0
   1c3a4:	bl	bd10 <sprintf@plt>
   1c3a8:	ldr	x4, [x29, #216]
   1c3ac:	mov	w3, w25
   1c3b0:	mov	w2, w20
   1c3b4:	mov	x1, x19
   1c3b8:	add	x0, x29, #0x190
   1c3bc:	bl	c0c0 <__gmp_asprintf@plt>
   1c3c0:	sxtw	x2, w0
   1c3c4:	ldr	x1, [x29, #400]
   1c3c8:	ldr	x0, [x29, #200]
   1c3cc:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c3d0:	ldr	x0, [x29, #400]
   1c3d4:	bl	c890 <mpfr_free_str@plt>
   1c3d8:	str	x24, [x29, #208]
   1c3dc:	mov	w1, #0x0                   	// #0
   1c3e0:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1c3e4:	add	w3, w27, #0x8
   1c3e8:	cmp	w3, #0x0
   1c3ec:	b.le	1c404 <mpfr_vasnprintf_aux@@Base+0xd84>
   1c3f0:	add	x4, x28, #0xf
   1c3f4:	mov	w27, w3
   1c3f8:	mov	x0, x28
   1c3fc:	and	x28, x4, #0xfffffffffffffff8
   1c400:	b	1c1fc <mpfr_vasnprintf_aux@@Base+0xb7c>
   1c404:	ldr	x0, [x29, #192]
   1c408:	add	x0, x0, w27, sxtw
   1c40c:	mov	w27, w3
   1c410:	b	1c1fc <mpfr_vasnprintf_aux@@Base+0xb7c>
   1c414:	add	x0, x29, #0x190
   1c418:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1c41c:	str	x0, [x29, #168]
   1c420:	b	1c234 <mpfr_vasnprintf_aux@@Base+0xbb4>
   1c424:	ldr	x0, [x29, #400]
   1c428:	cbz	x0, 1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c42c:	bl	c410 <mpfr_tmp_free@plt>
   1c430:	b	1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c434:	bl	c410 <mpfr_tmp_free@plt>
   1c438:	b	1c298 <mpfr_vasnprintf_aux@@Base+0xc18>
   1c43c:	ldr	x0, [x29, #208]
   1c440:	cmp	x0, x2
   1c444:	b.eq	1c298 <mpfr_vasnprintf_aux@@Base+0xc18>  // b.none
   1c448:	mov	x2, x21
   1c44c:	mov	x1, x0
   1c450:	ldr	x0, [x29, #200]
   1c454:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c458:	b	1c298 <mpfr_vasnprintf_aux@@Base+0xc18>
   1c45c:	and	w0, w19, #0xffffffdf
   1c460:	and	w3, w0, #0xff
   1c464:	str	w3, [x29, #168]
   1c468:	sub	w3, w19, #0x61
   1c46c:	and	w3, w3, #0xff
   1c470:	sub	w0, w0, #0x45
   1c474:	and	w0, w0, #0xff
   1c478:	cmp	w19, #0x41
   1c47c:	ccmp	w3, #0x1, #0x0, ne  // ne = any
   1c480:	ccmp	w0, #0x2, #0x0, hi  // hi = pmore
   1c484:	b.hi	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.pmore
   1c488:	tbnz	w27, #31, 1c728 <mpfr_vasnprintf_aux@@Base+0x10a8>
   1c48c:	add	x3, x28, #0xf
   1c490:	mov	x0, x28
   1c494:	and	x28, x3, #0xfffffffffffffff8
   1c498:	ldr	x21, [x0]
   1c49c:	ldr	x0, [x29, #208]
   1c4a0:	sub	x0, x2, x0
   1c4a4:	str	x0, [x29, #120]
   1c4a8:	cbz	w1, 1c780 <mpfr_vasnprintf_aux@@Base+0x1100>
   1c4ac:	str	xzr, [x29, #400]
   1c4b0:	add	x1, x0, #0x1
   1c4b4:	cmp	x1, #0x4, lsl #12
   1c4b8:	b.hi	1c758 <mpfr_vasnprintf_aux@@Base+0x10d8>  // b.pmore
   1c4bc:	add	x0, x1, #0xf
   1c4c0:	and	x0, x0, #0xfffffffffffffff0
   1c4c4:	sub	sp, sp, x0
   1c4c8:	add	x0, sp, #0x10
   1c4cc:	str	x0, [x29, #112]
   1c4d0:	ldr	x2, [x29, #120]
   1c4d4:	ldr	x1, [x29, #208]
   1c4d8:	ldr	x0, [x29, #112]
   1c4dc:	bl	cad0 <strncpy@plt>
   1c4e0:	ldr	x3, [x29, #112]
   1c4e4:	ldr	x0, [x29, #120]
   1c4e8:	strb	wzr, [x3, x0]
   1c4ec:	add	x0, x29, #0x2a0
   1c4f0:	ldp	x0, x1, [x0, #-104]
   1c4f4:	stp	x0, x1, [x29, #304]
   1c4f8:	add	x0, x29, #0x2a0
   1c4fc:	ldp	x0, x1, [x0, #-88]
   1c500:	stp	x0, x1, [x29, #320]
   1c504:	add	x2, x29, #0x130
   1c508:	mov	x1, x3
   1c50c:	add	x0, x29, #0x1b8
   1c510:	bl	c050 <__gmp_vasprintf@plt>
   1c514:	tbnz	w0, #31, 1c768 <mpfr_vasnprintf_aux@@Base+0x10e8>
   1c518:	sxtw	x2, w0
   1c51c:	ldr	x1, [x29, #440]
   1c520:	ldr	x0, [x29, #200]
   1c524:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c528:	ldr	x0, [x29, #440]
   1c52c:	bl	c890 <mpfr_free_str@plt>
   1c530:	ldr	x0, [x29, #400]
   1c534:	cbnz	x0, 1c778 <mpfr_vasnprintf_aux@@Base+0x10f8>
   1c538:	str	x28, [x26]
   1c53c:	ldr	x0, [x29, #192]
   1c540:	str	x0, [x26, #8]
   1c544:	ldr	x0, [x29, #176]
   1c548:	str	x0, [x26, #16]
   1c54c:	str	w27, [x26, #24]
   1c550:	ldr	w0, [x29, #188]
   1c554:	str	w0, [x26, #28]
   1c558:	ldp	x0, x1, [x26]
   1c55c:	add	x2, x29, #0x2a0
   1c560:	stp	x0, x1, [x2, #-104]
   1c564:	ldp	x0, x1, [x26, #16]
   1c568:	stp	x0, x1, [x2, #-88]
   1c56c:	ldrb	w0, [x29, #360]
   1c570:	ldr	w1, [x29, #236]
   1c574:	bfxil	w0, w1, #0, #1
   1c578:	ldr	w1, [x29, #240]
   1c57c:	bfi	w0, w1, #1, #1
   1c580:	ldr	w1, [x29, #248]
   1c584:	bfi	w0, w1, #2, #1
   1c588:	ldr	w1, [x29, #232]
   1c58c:	bfi	w0, w1, #3, #1
   1c590:	ldr	w1, [x29, #224]
   1c594:	bfi	w0, w1, #4, #1
   1c598:	strb	w0, [x29, #360]
   1c59c:	str	w20, [x29, #364]
   1c5a0:	str	w25, [x29, #368]
   1c5a4:	ldr	x1, [x29, #152]
   1c5a8:	str	x1, [x29, #376]
   1c5ac:	mov	w1, #0xf                   	// #15
   1c5b0:	str	w1, [x29, #384]
   1c5b4:	ldr	w1, [x29, #216]
   1c5b8:	str	w1, [x29, #388]
   1c5bc:	strb	w19, [x29, #392]
   1c5c0:	ldr	w2, [x29, #228]
   1c5c4:	strb	w2, [x29, #393]
   1c5c8:	and	w1, w0, #0xff
   1c5cc:	str	w1, [x29, #120]
   1c5d0:	mov	w1, #0x2                   	// #2
   1c5d4:	tbnz	w0, #2, 1c5e0 <mpfr_vasnprintf_aux@@Base+0xf60>
   1c5d8:	cmp	w2, #0x30
   1c5dc:	cset	w1, eq  // eq = none
   1c5e0:	str	w1, [x29, #440]
   1c5e4:	str	xzr, [x29, #448]
   1c5e8:	strb	wzr, [x29, #456]
   1c5ec:	str	xzr, [x29, #464]
   1c5f0:	str	xzr, [x29, #472]
   1c5f4:	strb	wzr, [x29, #480]
   1c5f8:	str	xzr, [x29, #488]
   1c5fc:	str	xzr, [x29, #496]
   1c600:	str	wzr, [x29, #504]
   1c604:	strb	wzr, [x29, #508]
   1c608:	str	wzr, [x29, #512]
   1c60c:	str	xzr, [x29, #520]
   1c610:	str	xzr, [x29, #528]
   1c614:	str	wzr, [x29, #536]
   1c618:	str	xzr, [x29, #544]
   1c61c:	str	xzr, [x29, #552]
   1c620:	mov	x0, #0x10                  	// #16
   1c624:	bl	ccf0 <mpfr_allocate_func@plt>
   1c628:	str	x0, [x29, #560]
   1c62c:	str	xzr, [x0]
   1c630:	str	xzr, [x0, #8]
   1c634:	ldr	w0, [x29, #168]
   1c638:	cmp	w0, #0x41
   1c63c:	cset	w0, eq  // eq = none
   1c640:	str	w0, [x29, #112]
   1c644:	sub	w0, w19, #0x45
   1c648:	and	w0, w0, #0xff
   1c64c:	cmp	w0, #0x2
   1c650:	cset	w0, ls  // ls = plast
   1c654:	cmp	w19, #0x41
   1c658:	csinc	w0, w0, wzr, ne  // ne = any
   1c65c:	str	w0, [x29, #208]
   1c660:	ldr	x0, [x21, #16]
   1c664:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1c668:	cmp	x0, x1
   1c66c:	b.le	1c7a0 <mpfr_vasnprintf_aux@@Base+0x1120>
   1c670:	mov	x1, #0x4                   	// #4
   1c674:	movk	x1, #0x8000, lsl #48
   1c678:	cmp	x0, x1
   1c67c:	b.eq	1c9fc <mpfr_vasnprintf_aux@@Base+0x137c>  // b.none
   1c680:	cmp	w19, #0x62
   1c684:	cset	w1, eq  // eq = none
   1c688:	str	w1, [x29, #208]
   1c68c:	ldr	w2, [x29, #112]
   1c690:	cmp	w2, #0x0
   1c694:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   1c698:	b.eq	1d10c <mpfr_vasnprintf_aux@@Base+0x1a8c>  // b.none
   1c69c:	ldrb	w0, [x29, #400]
   1c6a0:	ldr	w1, [x29, #236]
   1c6a4:	bfxil	w0, w1, #0, #1
   1c6a8:	ldr	w1, [x29, #240]
   1c6ac:	bfi	w0, w1, #1, #1
   1c6b0:	ldr	w1, [x29, #248]
   1c6b4:	bfi	w0, w1, #2, #1
   1c6b8:	ldr	w1, [x29, #232]
   1c6bc:	bfi	w0, w1, #3, #1
   1c6c0:	ldr	w1, [x29, #224]
   1c6c4:	bfi	w0, w1, #4, #1
   1c6c8:	strb	w0, [x29, #400]
   1c6cc:	str	w20, [x29, #404]
   1c6d0:	str	w25, [x29, #408]
   1c6d4:	ldr	x0, [x29, #152]
   1c6d8:	str	x0, [x29, #416]
   1c6dc:	mov	w0, #0xf                   	// #15
   1c6e0:	str	w0, [x29, #424]
   1c6e4:	ldr	w0, [x29, #216]
   1c6e8:	str	w0, [x29, #428]
   1c6ec:	strb	w19, [x29, #432]
   1c6f0:	ldrb	w0, [x29, #228]
   1c6f4:	strb	w0, [x29, #433]
   1c6f8:	ldr	w0, [x21, #8]
   1c6fc:	tbnz	w0, #31, 1ca68 <mpfr_vasnprintf_aux@@Base+0x13e8>
   1c700:	mov	w0, #0xa                   	// #10
   1c704:	ldr	w1, [x29, #120]
   1c708:	tst	w1, w0
   1c70c:	b.eq	1ca70 <mpfr_vasnprintf_aux@@Base+0x13f0>  // b.none
   1c710:	tst	x1, #0x8
   1c714:	mov	w0, #0x2b                  	// #43
   1c718:	mov	w1, #0x20                  	// #32
   1c71c:	csel	w0, w0, w1, ne  // ne = any
   1c720:	strb	w0, [x29, #456]
   1c724:	b	1ca70 <mpfr_vasnprintf_aux@@Base+0x13f0>
   1c728:	add	w3, w27, #0x8
   1c72c:	cmp	w3, #0x0
   1c730:	b.le	1c748 <mpfr_vasnprintf_aux@@Base+0x10c8>
   1c734:	add	x4, x28, #0xf
   1c738:	mov	w27, w3
   1c73c:	mov	x0, x28
   1c740:	and	x28, x4, #0xfffffffffffffff8
   1c744:	b	1c498 <mpfr_vasnprintf_aux@@Base+0xe18>
   1c748:	ldr	x0, [x29, #192]
   1c74c:	add	x0, x0, w27, sxtw
   1c750:	mov	w27, w3
   1c754:	b	1c498 <mpfr_vasnprintf_aux@@Base+0xe18>
   1c758:	add	x0, x29, #0x190
   1c75c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1c760:	str	x0, [x29, #112]
   1c764:	b	1c4d0 <mpfr_vasnprintf_aux@@Base+0xe50>
   1c768:	ldr	x0, [x29, #400]
   1c76c:	cbz	x0, 1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c770:	bl	c410 <mpfr_tmp_free@plt>
   1c774:	b	1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1c778:	bl	c410 <mpfr_tmp_free@plt>
   1c77c:	b	1c538 <mpfr_vasnprintf_aux@@Base+0xeb8>
   1c780:	ldr	x0, [x29, #208]
   1c784:	cmp	x0, x2
   1c788:	b.eq	1c538 <mpfr_vasnprintf_aux@@Base+0xeb8>  // b.none
   1c78c:	ldr	x2, [x29, #120]
   1c790:	mov	x1, x0
   1c794:	ldr	x0, [x29, #200]
   1c798:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1c79c:	b	1c538 <mpfr_vasnprintf_aux@@Base+0xeb8>
   1c7a0:	mov	x1, #0x2                   	// #2
   1c7a4:	movk	x1, #0x8000, lsl #48
   1c7a8:	cmp	x0, x1
   1c7ac:	b.eq	1c7ec <mpfr_vasnprintf_aux@@Base+0x116c>  // b.none
   1c7b0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1c7b4:	cmp	x0, x1
   1c7b8:	b.eq	1c844 <mpfr_vasnprintf_aux@@Base+0x11c4>  // b.none
   1c7bc:	ldr	w0, [x21, #8]
   1c7c0:	tbnz	w0, #31, 1c8b0 <mpfr_vasnprintf_aux@@Base+0x1230>
   1c7c4:	mov	w0, #0xa                   	// #10
   1c7c8:	ldr	w1, [x29, #120]
   1c7cc:	tst	w1, w0
   1c7d0:	b.eq	1c8b8 <mpfr_vasnprintf_aux@@Base+0x1238>  // b.none
   1c7d4:	tst	x1, #0x8
   1c7d8:	mov	w0, #0x2b                  	// #43
   1c7dc:	mov	w1, #0x20                  	// #32
   1c7e0:	csel	w0, w0, w1, ne  // ne = any
   1c7e4:	strb	w0, [x29, #456]
   1c7e8:	b	1c8b8 <mpfr_vasnprintf_aux@@Base+0x1238>
   1c7ec:	ldr	w0, [x29, #440]
   1c7f0:	cmp	w0, #0x1
   1c7f4:	b.eq	1c83c <mpfr_vasnprintf_aux@@Base+0x11bc>  // b.none
   1c7f8:	mov	x0, #0x3                   	// #3
   1c7fc:	str	x0, [x29, #496]
   1c800:	mov	x0, #0x4                   	// #4
   1c804:	bl	ccf0 <mpfr_allocate_func@plt>
   1c808:	mov	x1, x0
   1c80c:	ldr	w0, [x29, #208]
   1c810:	cmp	w0, #0x0
   1c814:	mov	w0, #0x616e                	// #24942
   1c818:	movk	w0, #0x6e, lsl #16
   1c81c:	mov	w2, #0x414e                	// #16718
   1c820:	movk	w2, #0x4e, lsl #16
   1c824:	csel	w0, w0, w2, eq  // eq = none
   1c828:	str	w0, [x1]
   1c82c:	ldr	x0, [x29, #560]
   1c830:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1c834:	str	x0, [x29, #488]
   1c838:	b	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>
   1c83c:	str	wzr, [x29, #440]
   1c840:	b	1c7f8 <mpfr_vasnprintf_aux@@Base+0x1178>
   1c844:	ldr	w0, [x29, #440]
   1c848:	cmp	w0, #0x1
   1c84c:	b.eq	1c89c <mpfr_vasnprintf_aux@@Base+0x121c>  // b.none
   1c850:	ldr	w0, [x21, #8]
   1c854:	tbnz	w0, #31, 1c8a4 <mpfr_vasnprintf_aux@@Base+0x1224>
   1c858:	mov	x0, #0x3                   	// #3
   1c85c:	str	x0, [x29, #496]
   1c860:	mov	x0, #0x4                   	// #4
   1c864:	bl	ccf0 <mpfr_allocate_func@plt>
   1c868:	mov	x1, x0
   1c86c:	ldr	w0, [x29, #208]
   1c870:	cmp	w0, #0x0
   1c874:	mov	w0, #0x6e69                	// #28265
   1c878:	movk	w0, #0x66, lsl #16
   1c87c:	mov	w2, #0x4e49                	// #20041
   1c880:	movk	w2, #0x46, lsl #16
   1c884:	csel	w0, w0, w2, eq  // eq = none
   1c888:	str	w0, [x1]
   1c88c:	ldr	x0, [x29, #560]
   1c890:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1c894:	str	x0, [x29, #488]
   1c898:	b	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>
   1c89c:	str	wzr, [x29, #440]
   1c8a0:	b	1c850 <mpfr_vasnprintf_aux@@Base+0x11d0>
   1c8a4:	mov	w0, #0x2d                  	// #45
   1c8a8:	strb	w0, [x29, #456]
   1c8ac:	b	1c858 <mpfr_vasnprintf_aux@@Base+0x11d8>
   1c8b0:	mov	w0, #0x2d                  	// #45
   1c8b4:	strb	w0, [x29, #456]
   1c8b8:	ldr	w0, [x29, #168]
   1c8bc:	cmp	w0, #0x41
   1c8c0:	b.eq	1c960 <mpfr_vasnprintf_aux@@Base+0x12e0>  // b.none
   1c8c4:	mov	x0, #0x1                   	// #1
   1c8c8:	str	x0, [x29, #496]
   1c8cc:	mov	x0, #0x2                   	// #2
   1c8d0:	bl	ccf0 <mpfr_allocate_func@plt>
   1c8d4:	mov	x1, x0
   1c8d8:	mov	w0, #0x30                  	// #48
   1c8dc:	strb	w0, [x1]
   1c8e0:	strb	wzr, [x1, #1]
   1c8e4:	ldr	x0, [x29, #560]
   1c8e8:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1c8ec:	str	x0, [x29, #488]
   1c8f0:	cmp	w25, #0x0
   1c8f4:	b.le	1c9c8 <mpfr_vasnprintf_aux@@Base+0x1348>
   1c8f8:	ldr	w0, [x29, #168]
   1c8fc:	cmp	w0, #0x47
   1c900:	b.ne	1ddcc <mpfr_vasnprintf_aux@@Base+0x274c>  // b.any
   1c904:	ldr	x0, [x29, #120]
   1c908:	tbnz	w0, #0, 1dde8 <mpfr_vasnprintf_aux@@Base+0x2768>
   1c90c:	ldr	w0, [x29, #168]
   1c910:	cmp	w0, #0x45
   1c914:	ldr	w0, [x29, #112]
   1c918:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1c91c:	mov	w0, #0x62                  	// #98
   1c920:	ccmp	w19, w0, #0x4, eq  // eq = none
   1c924:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1c928:	mov	x0, #0x3                   	// #3
   1c92c:	str	x0, [x29, #552]
   1c930:	mov	x0, #0x4                   	// #4
   1c934:	bl	ccf0 <mpfr_allocate_func@plt>
   1c938:	mov	x1, x0
   1c93c:	ldr	w0, [x29, #208]
   1c940:	cmp	w0, #0x0
   1c944:	mov	w0, #0x2b50                	// #11088
   1c948:	movk	w0, #0x30, lsl #16
   1c94c:	mov	w2, #0x2b70                	// #11120
   1c950:	movk	w2, #0x30, lsl #16
   1c954:	csel	w0, w0, w2, ne  // ne = any
   1c958:	str	w0, [x1]
   1c95c:	b	1de6c <mpfr_vasnprintf_aux@@Base+0x27ec>
   1c960:	mov	x0, #0x2                   	// #2
   1c964:	str	x0, [x29, #472]
   1c968:	mov	x0, #0x3                   	// #3
   1c96c:	bl	ccf0 <mpfr_allocate_func@plt>
   1c970:	mov	x1, x0
   1c974:	mov	w0, #0x30                  	// #48
   1c978:	strb	w0, [x1]
   1c97c:	ldr	w0, [x29, #208]
   1c980:	cmp	w0, #0x0
   1c984:	mov	w0, #0x58                  	// #88
   1c988:	mov	w2, #0x78                  	// #120
   1c98c:	csel	w0, w0, w2, ne  // ne = any
   1c990:	strb	w0, [x1, #1]
   1c994:	strb	wzr, [x1, #2]
   1c998:	ldr	x0, [x29, #560]
   1c99c:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1c9a0:	str	x0, [x29, #464]
   1c9a4:	b	1c8c4 <mpfr_vasnprintf_aux@@Base+0x1244>
   1c9a8:	bl	bea0 <localeconv@plt>
   1c9ac:	ldr	x0, [x0]
   1c9b0:	ldrb	w0, [x0]
   1c9b4:	strb	w0, [x29, #508]
   1c9b8:	ldr	w0, [x29, #168]
   1c9bc:	cmp	w0, #0x47
   1c9c0:	b.ne	1de04 <mpfr_vasnprintf_aux@@Base+0x2784>  // b.any
   1c9c4:	b	1de00 <mpfr_vasnprintf_aux@@Base+0x2780>
   1c9c8:	ldr	x0, [x29, #120]
   1c9cc:	tbz	w0, #0, 1de08 <mpfr_vasnprintf_aux@@Base+0x2788>
   1c9d0:	bl	bea0 <localeconv@plt>
   1c9d4:	ldr	x0, [x0]
   1c9d8:	ldrb	w1, [x0, #1]
   1c9dc:	mov	w0, #0x2e                  	// #46
   1c9e0:	cbz	w1, 1c9ec <mpfr_vasnprintf_aux@@Base+0x136c>
   1c9e4:	strb	w0, [x29, #508]
   1c9e8:	b	1de08 <mpfr_vasnprintf_aux@@Base+0x2788>
   1c9ec:	bl	bea0 <localeconv@plt>
   1c9f0:	ldr	x0, [x0]
   1c9f4:	ldrb	w0, [x0]
   1c9f8:	b	1c9e4 <mpfr_vasnprintf_aux@@Base+0x1364>
   1c9fc:	ldr	w0, [x29, #440]
   1ca00:	cmp	w0, #0x1
   1ca04:	b.eq	1ca54 <mpfr_vasnprintf_aux@@Base+0x13d4>  // b.none
   1ca08:	ldr	w0, [x21, #8]
   1ca0c:	tbnz	w0, #31, 1ca5c <mpfr_vasnprintf_aux@@Base+0x13dc>
   1ca10:	mov	x0, #0x3                   	// #3
   1ca14:	str	x0, [x29, #496]
   1ca18:	mov	x0, #0x4                   	// #4
   1ca1c:	bl	ccf0 <mpfr_allocate_func@plt>
   1ca20:	mov	x1, x0
   1ca24:	ldr	w0, [x29, #208]
   1ca28:	cmp	w0, #0x0
   1ca2c:	mov	w0, #0x6275                	// #25205
   1ca30:	movk	w0, #0x66, lsl #16
   1ca34:	mov	w2, #0x4255                	// #16981
   1ca38:	movk	w2, #0x46, lsl #16
   1ca3c:	csel	w0, w0, w2, eq  // eq = none
   1ca40:	str	w0, [x1]
   1ca44:	ldr	x0, [x29, #560]
   1ca48:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1ca4c:	str	x0, [x29, #488]
   1ca50:	b	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>
   1ca54:	str	wzr, [x29, #440]
   1ca58:	b	1ca08 <mpfr_vasnprintf_aux@@Base+0x1388>
   1ca5c:	mov	w0, #0x2d                  	// #45
   1ca60:	strb	w0, [x29, #456]
   1ca64:	b	1ca10 <mpfr_vasnprintf_aux@@Base+0x1390>
   1ca68:	mov	w0, #0x2d                  	// #45
   1ca6c:	strb	w0, [x29, #456]
   1ca70:	ldr	w0, [x29, #168]
   1ca74:	cmp	w0, #0x41
   1ca78:	b.eq	1ca90 <mpfr_vasnprintf_aux@@Base+0x1410>  // b.none
   1ca7c:	mov	x0, #0x1                   	// #1
   1ca80:	str	x0, [x29, #496]
   1ca84:	mov	w0, #0x2                   	// #2
   1ca88:	str	w0, [x29, #240]
   1ca8c:	b	1cae8 <mpfr_vasnprintf_aux@@Base+0x1468>
   1ca90:	mov	x0, #0x2                   	// #2
   1ca94:	str	x0, [x29, #472]
   1ca98:	mov	x0, #0x3                   	// #3
   1ca9c:	bl	ccf0 <mpfr_allocate_func@plt>
   1caa0:	mov	x1, x0
   1caa4:	mov	w0, #0x30                  	// #48
   1caa8:	strb	w0, [x1]
   1caac:	cmp	w19, #0x41
   1cab0:	b.eq	1decc <mpfr_vasnprintf_aux@@Base+0x284c>  // b.none
   1cab4:	mov	w0, #0x78                  	// #120
   1cab8:	strb	w0, [x1, #1]
   1cabc:	strb	wzr, [x1, #2]
   1cac0:	ldr	x0, [x29, #560]
   1cac4:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1cac8:	str	x0, [x29, #464]
   1cacc:	mov	x0, #0x1                   	// #1
   1cad0:	str	x0, [x29, #496]
   1cad4:	cmp	w19, #0x62
   1cad8:	mov	w1, #0x2                   	// #2
   1cadc:	mov	w0, #0x10                  	// #16
   1cae0:	csel	w0, w1, w0, eq  // eq = none
   1cae4:	str	w0, [x29, #240]
   1cae8:	cbz	w25, 1cc3c <mpfr_vasnprintf_aux@@Base+0x15bc>
   1caec:	sxtw	x2, w25
   1caf0:	cmp	w25, #0x0
   1caf4:	ldp	x0, x1, [x29, #400]
   1caf8:	stp	x0, x1, [x29, #256]
   1cafc:	ldp	x0, x1, [x29, #416]
   1cb00:	stp	x0, x1, [x29, #272]
   1cb04:	ldr	x0, [x29, #432]
   1cb08:	str	x0, [x29, #288]
   1cb0c:	add	x4, x29, #0x100
   1cb10:	mov	x3, x21
   1cb14:	csinc	x2, xzr, x2, lt  // lt = tstop
   1cb18:	ldr	w1, [x29, #240]
   1cb1c:	add	x0, x29, #0x158
   1cb20:	bl	1aa10 <mpfr_asprintf@@Base+0x230>
   1cb24:	str	x0, [x29, #248]
   1cb28:	mov	x1, x0
   1cb2c:	ldr	x0, [x29, #560]
   1cb30:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1cb34:	ldrsw	x0, [x21, #8]
   1cb38:	ldr	x2, [x29, #248]
   1cb3c:	add	x0, x2, x0, lsr #63
   1cb40:	str	x0, [x29, #248]
   1cb44:	str	x0, [x29, #488]
   1cb48:	ldr	w0, [x29, #240]
   1cb4c:	cmp	w0, #0x10
   1cb50:	b.eq	1cbe0 <mpfr_vasnprintf_aux@@Base+0x1560>  // b.none
   1cb54:	ldr	x1, [x29, #344]
   1cb58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1cb5c:	cmp	x1, x0
   1cb60:	b.eq	1cc20 <mpfr_vasnprintf_aux@@Base+0x15a0>  // b.none
   1cb64:	ldr	x0, [x29, #344]
   1cb68:	sub	x0, x0, #0x1
   1cb6c:	str	x0, [x29, #344]
   1cb70:	cmp	w19, #0x41
   1cb74:	b.eq	1de7c <mpfr_vasnprintf_aux@@Base+0x27fc>  // b.none
   1cb78:	ldr	x2, [x29, #248]
   1cb7c:	add	x21, x2, #0x1
   1cb80:	mov	x0, x21
   1cb84:	bl	bab0 <strlen@plt>
   1cb88:	tbz	w25, #31, 1cbb4 <mpfr_vasnprintf_aux@@Base+0x1534>
   1cb8c:	ldr	x2, [x29, #248]
   1cb90:	ldrb	w1, [x2, x0]
   1cb94:	cmp	w1, #0x30
   1cb98:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1cb9c:	b.eq	1cbb4 <mpfr_vasnprintf_aux@@Base+0x1534>  // b.none
   1cba0:	sub	x0, x0, #0x1
   1cba4:	ldrb	w1, [x2, x0]
   1cba8:	cmp	w1, #0x30
   1cbac:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1cbb0:	b.ne	1cba0 <mpfr_vasnprintf_aux@@Base+0x1520>  // b.any
   1cbb4:	mov	x1, #0x7fffffff            	// #2147483647
   1cbb8:	cmp	x0, x1
   1cbbc:	b.hi	1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>  // b.pmore
   1cbc0:	cbz	x0, 1ceb8 <mpfr_vasnprintf_aux@@Base+0x1838>
   1cbc4:	str	x21, [x29, #520]
   1cbc8:	str	x0, [x29, #528]
   1cbcc:	cmp	w25, w0
   1cbd0:	b.le	1cec8 <mpfr_vasnprintf_aux@@Base+0x1848>
   1cbd4:	sub	w0, w25, w0
   1cbd8:	str	w0, [x29, #536]
   1cbdc:	b	1cec8 <mpfr_vasnprintf_aux@@Base+0x1848>
   1cbe0:	ldr	x1, [x29, #344]
   1cbe4:	mov	x0, #0xe000000000000001    	// #-2305843009213693951
   1cbe8:	cmp	x1, x0
   1cbec:	b.le	1cc04 <mpfr_vasnprintf_aux@@Base+0x1584>
   1cbf0:	ldr	x0, [x29, #344]
   1cbf4:	sub	x0, x0, #0x1
   1cbf8:	lsl	x0, x0, #2
   1cbfc:	str	x0, [x29, #344]
   1cc00:	b	1cb70 <mpfr_vasnprintf_aux@@Base+0x14f0>
   1cc04:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cc08:	add	x2, x2, #0x688
   1cc0c:	mov	w1, #0x41f                 	// #1055
   1cc10:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cc14:	add	x0, x0, #0x570
   1cc18:	bl	cb40 <mpfr_assert_fail@plt>
   1cc1c:	b	1cbf0 <mpfr_vasnprintf_aux@@Base+0x1570>
   1cc20:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cc24:	add	x2, x2, #0x6b8
   1cc28:	mov	w1, #0x428                 	// #1064
   1cc2c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cc30:	add	x0, x0, #0x570
   1cc34:	bl	cb40 <mpfr_assert_fail@plt>
   1cc38:	b	1cb64 <mpfr_vasnprintf_aux@@Base+0x14e4>
   1cc3c:	ldr	w0, [x29, #240]
   1cc40:	cmp	w0, #0x2
   1cc44:	b.eq	1deb8 <mpfr_vasnprintf_aux@@Base+0x2838>  // b.none
   1cc48:	ldr	w0, [x29, #216]
   1cc4c:	cmp	w0, #0x1
   1cc50:	b.eq	1cd1c <mpfr_vasnprintf_aux@@Base+0x169c>  // b.none
   1cc54:	mov	x0, #0x4                   	// #4
   1cc58:	ldr	w1, [x29, #216]
   1cc5c:	cmp	w1, #0x3
   1cc60:	b.eq	1cd04 <mpfr_vasnprintf_aux@@Base+0x1684>  // b.none
   1cc64:	ldr	w1, [x29, #216]
   1cc68:	cmp	w1, #0x2
   1cc6c:	b.eq	1cd70 <mpfr_vasnprintf_aux@@Base+0x16f0>  // b.none
   1cc70:	ldr	x1, [x21]
   1cc74:	cmp	x0, x1
   1cc78:	b.ge	1cd10 <mpfr_vasnprintf_aux@@Base+0x1690>  // b.tcont
   1cc7c:	add	x2, x1, #0x3e
   1cc80:	subs	x1, x1, #0x1
   1cc84:	csel	x1, x2, x1, mi  // mi = first
   1cc88:	asr	x1, x1, #6
   1cc8c:	ldr	x2, [x21, #24]
   1cc90:	ldr	x2, [x2, x1, lsl #3]
   1cc94:	mov	w3, w0
   1cc98:	neg	w1, w0
   1cc9c:	mov	x0, #0x1                   	// #1
   1cca0:	lsl	x0, x0, x1
   1cca4:	sub	x0, x0, #0x1
   1cca8:	orr	x1, x2, x0
   1ccac:	cmn	x1, #0x1
   1ccb0:	b.ne	1cd10 <mpfr_vasnprintf_aux@@Base+0x1690>  // b.any
   1ccb4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1ccb8:	lsr	x1, x1, x3
   1ccbc:	ldr	w3, [x29, #216]
   1ccc0:	cmp	w3, #0x0
   1ccc4:	csel	x0, x1, x0, eq  // eq = none
   1ccc8:	tst	x2, x0
   1cccc:	b.eq	1cd10 <mpfr_vasnprintf_aux@@Base+0x1690>  // b.none
   1ccd0:	mov	x0, #0x2                   	// #2
   1ccd4:	bl	ccf0 <mpfr_allocate_func@plt>
   1ccd8:	mov	x1, x0
   1ccdc:	str	x0, [x29, #248]
   1cce0:	mov	w0, #0x31                  	// #49
   1cce4:	strb	w0, [x1]
   1cce8:	strb	wzr, [x1, #1]
   1ccec:	ldr	x0, [x29, #560]
   1ccf0:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1ccf4:	str	x0, [x29, #488]
   1ccf8:	ldr	x0, [x21, #16]
   1ccfc:	str	x0, [x29, #344]
   1cd00:	b	1ce08 <mpfr_vasnprintf_aux@@Base+0x1788>
   1cd04:	ldr	w1, [x21, #8]
   1cd08:	cmp	w1, #0x0
   1cd0c:	b.le	1cc70 <mpfr_vasnprintf_aux@@Base+0x15f0>
   1cd10:	ldr	w0, [x29, #240]
   1cd14:	cmp	w0, #0x2
   1cd18:	b.eq	1cd7c <mpfr_vasnprintf_aux@@Base+0x16fc>  // b.none
   1cd1c:	ldr	x1, [x21]
   1cd20:	add	x0, x1, #0x3e
   1cd24:	subs	x1, x1, #0x1
   1cd28:	csel	x0, x0, x1, mi  // mi = first
   1cd2c:	asr	x0, x0, #6
   1cd30:	ldr	x1, [x21, #24]
   1cd34:	ldr	x1, [x1, x0, lsl #3]
   1cd38:	lsr	x0, x1, #60
   1cd3c:	str	w0, [x29, #240]
   1cd40:	ldr	w2, [x29, #216]
   1cd44:	cmp	w2, #0x4
   1cd48:	b.eq	1cdc0 <mpfr_vasnprintf_aux@@Base+0x1740>  // b.none
   1cd4c:	cmp	w2, #0x2
   1cd50:	b.eq	1cdb4 <mpfr_vasnprintf_aux@@Base+0x1734>  // b.none
   1cd54:	ldr	w2, [x29, #216]
   1cd58:	cmp	w2, #0x3
   1cd5c:	b.eq	1ce34 <mpfr_vasnprintf_aux@@Base+0x17b4>  // b.none
   1cd60:	ldr	w2, [x29, #216]
   1cd64:	cbnz	w2, 1cdc8 <mpfr_vasnprintf_aux@@Base+0x1748>
   1cd68:	tbz	x1, #59, 1cdc8 <mpfr_vasnprintf_aux@@Base+0x1748>
   1cd6c:	b	1cdc0 <mpfr_vasnprintf_aux@@Base+0x1740>
   1cd70:	ldr	w1, [x21, #8]
   1cd74:	tbz	w1, #31, 1cc70 <mpfr_vasnprintf_aux@@Base+0x15f0>
   1cd78:	b	1cd10 <mpfr_vasnprintf_aux@@Base+0x1690>
   1cd7c:	mov	x0, #0x2                   	// #2
   1cd80:	bl	ccf0 <mpfr_allocate_func@plt>
   1cd84:	mov	x1, x0
   1cd88:	str	x0, [x29, #248]
   1cd8c:	mov	w0, #0x31                  	// #49
   1cd90:	strb	w0, [x1]
   1cd94:	strb	wzr, [x1, #1]
   1cd98:	ldr	x0, [x29, #560]
   1cd9c:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1cda0:	str	x0, [x29, #488]
   1cda4:	ldr	x0, [x21, #16]
   1cda8:	sub	x0, x0, #0x1
   1cdac:	str	x0, [x29, #344]
   1cdb0:	b	1ce08 <mpfr_vasnprintf_aux@@Base+0x1788>
   1cdb4:	ldr	w1, [x21, #8]
   1cdb8:	cmp	w1, #0x0
   1cdbc:	b.le	1cdc8 <mpfr_vasnprintf_aux@@Base+0x1748>
   1cdc0:	add	w0, w0, #0x1
   1cdc4:	str	w0, [x29, #240]
   1cdc8:	mov	x0, #0x2                   	// #2
   1cdcc:	bl	ccf0 <mpfr_allocate_func@plt>
   1cdd0:	mov	x1, x0
   1cdd4:	str	x0, [x29, #248]
   1cdd8:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cddc:	add	x0, x0, #0x730
   1cde0:	ldr	w2, [x29, #240]
   1cde4:	ldrb	w0, [x0, w2, sxtw]
   1cde8:	strb	w0, [x1]
   1cdec:	strb	wzr, [x1, #1]
   1cdf0:	ldr	x0, [x29, #560]
   1cdf4:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1cdf8:	str	x0, [x29, #488]
   1cdfc:	ldr	x0, [x21, #16]
   1ce00:	sub	x0, x0, #0x4
   1ce04:	str	x0, [x29, #344]
   1ce08:	cmp	w19, #0x41
   1ce0c:	b.eq	1dea8 <mpfr_vasnprintf_aux@@Base+0x2828>  // b.none
   1ce10:	cmp	w25, #0x0
   1ce14:	ldr	w0, [x29, #208]
   1ce18:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1ce1c:	b.eq	1ceb8 <mpfr_vasnprintf_aux@@Base+0x1838>  // b.none
   1ce20:	ldr	x0, [x29, #248]
   1ce24:	add	x21, x0, #0x1
   1ce28:	mov	x0, x21
   1ce2c:	bl	bab0 <strlen@plt>
   1ce30:	b	1cbb4 <mpfr_vasnprintf_aux@@Base+0x1534>
   1ce34:	ldr	w1, [x21, #8]
   1ce38:	tbz	w1, #31, 1cdc8 <mpfr_vasnprintf_aux@@Base+0x1748>
   1ce3c:	b	1cdc0 <mpfr_vasnprintf_aux@@Base+0x1740>
   1ce40:	cmp	w0, #0x61
   1ce44:	b.ne	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>  // b.any
   1ce48:	strb	w2, [x1]
   1ce4c:	ldrb	w0, [x1, #1]!
   1ce50:	cbz	w0, 1cea8 <mpfr_vasnprintf_aux@@Base+0x1828>
   1ce54:	cmp	w0, #0x64
   1ce58:	b.eq	1ce98 <mpfr_vasnprintf_aux@@Base+0x1818>  // b.none
   1ce5c:	b.hi	1ce78 <mpfr_vasnprintf_aux@@Base+0x17f8>  // b.pmore
   1ce60:	cmp	w0, #0x62
   1ce64:	b.eq	1ce90 <mpfr_vasnprintf_aux@@Base+0x1810>  // b.none
   1ce68:	cmp	w0, #0x63
   1ce6c:	b.ne	1ce40 <mpfr_vasnprintf_aux@@Base+0x17c0>  // b.any
   1ce70:	strb	w3, [x1]
   1ce74:	b	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>
   1ce78:	cmp	w0, #0x65
   1ce7c:	b.eq	1cea0 <mpfr_vasnprintf_aux@@Base+0x1820>  // b.none
   1ce80:	cmp	w0, #0x66
   1ce84:	b.ne	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>  // b.any
   1ce88:	strb	w5, [x1]
   1ce8c:	b	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>
   1ce90:	strb	w4, [x1]
   1ce94:	b	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>
   1ce98:	strb	w7, [x1]
   1ce9c:	b	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>
   1cea0:	strb	w6, [x1]
   1cea4:	b	1ce4c <mpfr_vasnprintf_aux@@Base+0x17cc>
   1cea8:	cmp	w25, #0x0
   1ceac:	ldr	w0, [x29, #208]
   1ceb0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1ceb4:	b.ne	1cb78 <mpfr_vasnprintf_aux@@Base+0x14f8>  // b.any
   1ceb8:	ldr	x0, [x29, #528]
   1cebc:	cbnz	x0, 1cec8 <mpfr_vasnprintf_aux@@Base+0x1848>
   1cec0:	ldr	x0, [x29, #120]
   1cec4:	tbz	w0, #0, 1cee0 <mpfr_vasnprintf_aux@@Base+0x1860>
   1cec8:	bl	bea0 <localeconv@plt>
   1cecc:	ldr	x0, [x0]
   1ced0:	ldrb	w1, [x0, #1]
   1ced4:	mov	w0, #0x2e                  	// #46
   1ced8:	cbz	w1, 1d0fc <mpfr_vasnprintf_aux@@Base+0x1a7c>
   1cedc:	strb	w0, [x29, #508]
   1cee0:	mov	x0, #0x3                   	// #3
   1cee4:	str	x0, [x29, #552]
   1cee8:	ldr	x0, [x29, #344]
   1ceec:	cmp	x0, #0x0
   1cef0:	cneg	x0, x0, lt  // lt = tstop
   1cef4:	mov	x1, #0x3                   	// #3
   1cef8:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   1cefc:	movk	x3, #0xcccd
   1cf00:	cmp	x0, #0x9
   1cf04:	b.ls	1cf24 <mpfr_vasnprintf_aux@@Base+0x18a4>  // b.plast
   1cf08:	add	x1, x1, #0x1
   1cf0c:	mov	x2, x0
   1cf10:	umulh	x0, x0, x3
   1cf14:	lsr	x0, x0, #3
   1cf18:	cmp	x2, #0x63
   1cf1c:	b.hi	1cf08 <mpfr_vasnprintf_aux@@Base+0x1888>  // b.pmore
   1cf20:	str	x1, [x29, #552]
   1cf24:	ldr	x0, [x29, #552]
   1cf28:	add	x0, x0, #0x1
   1cf2c:	bl	ccf0 <mpfr_allocate_func@plt>
   1cf30:	mov	x21, x0
   1cf34:	mov	x1, x0
   1cf38:	ldr	x0, [x29, #560]
   1cf3c:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1cf40:	str	x0, [x29, #544]
   1cf44:	cmp	w19, #0x41
   1cf48:	mov	w0, #0x50                  	// #80
   1cf4c:	mov	w1, #0x70                  	// #112
   1cf50:	csel	w0, w0, w1, eq  // eq = none
   1cf54:	strb	w0, [x29, #352]
   1cf58:	strb	wzr, [x29, #353]
   1cf5c:	add	x19, x29, #0x160
   1cf60:	mov	x0, x19
   1cf64:	bl	bab0 <strlen@plt>
   1cf68:	mov	x1, x0
   1cf6c:	add	x2, x19, x0
   1cf70:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1cf74:	add	x0, x0, #0x6e0
   1cf78:	ldr	w3, [x0]
   1cf7c:	str	w3, [x19, x1]
   1cf80:	ldur	w0, [x0, #3]
   1cf84:	stur	w0, [x2, #3]
   1cf88:	ldr	x2, [x29, #344]
   1cf8c:	mov	x1, x19
   1cf90:	mov	x0, x21
   1cf94:	bl	bd10 <sprintf@plt>
   1cf98:	tbnz	w0, #31, 1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1cf9c:	ldrb	w0, [x29, #456]
   1cfa0:	cmp	w0, #0x0
   1cfa4:	cset	w3, ne  // ne = any
   1cfa8:	ldr	x0, [x29, #472]
   1cfac:	tbnz	x0, #63, 1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1cfb0:	ldr	x2, [x29, #496]
   1cfb4:	tbnz	x2, #63, 1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1cfb8:	ldr	w1, [x29, #504]
   1cfbc:	add	w3, w1, w3
   1cfc0:	add	w0, w2, w0
   1cfc4:	add	w0, w0, w3
   1cfc8:	ldrb	w3, [x29, #480]
   1cfcc:	cbz	w3, 1cfec <mpfr_vasnprintf_aux@@Base+0x196c>
   1cfd0:	sub	x2, x2, #0x1
   1cfd4:	add	x1, x2, w1, sxtw
   1cfd8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1cfdc:	movk	x2, #0xaaab
   1cfe0:	umulh	x1, x1, x2
   1cfe4:	lsr	x1, x1, #1
   1cfe8:	add	w0, w0, w1
   1cfec:	ldrb	w1, [x29, #508]
   1cff0:	cmp	w1, #0x0
   1cff4:	cinc	w0, w0, ne  // ne = any
   1cff8:	ldr	w1, [x29, #512]
   1cffc:	ldr	x2, [x29, #528]
   1d000:	tbnz	x2, #63, 1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1d004:	add	w2, w1, w2
   1d008:	ldr	w1, [x29, #536]
   1d00c:	ldr	x3, [x29, #552]
   1d010:	tbnz	x3, #63, 1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1d014:	add	w1, w1, w3
   1d018:	add	w1, w1, w2
   1d01c:	add	w0, w1, w0
   1d020:	cmp	w0, w20
   1d024:	b.cs	1d034 <mpfr_vasnprintf_aux@@Base+0x19b4>  // b.hs, b.nlast
   1d028:	sub	w0, w20, w0
   1d02c:	str	x0, [x29, #448]
   1d030:	mov	w0, w20
   1d034:	ldr	x1, [x29, #152]
   1d038:	cbz	x1, 1d300 <mpfr_vasnprintf_aux@@Base+0x1c80>
   1d03c:	ldr	w0, [x29, #440]
   1d040:	cbnz	w0, 1d04c <mpfr_vasnprintf_aux@@Base+0x19cc>
   1d044:	ldr	x2, [x29, #448]
   1d048:	cbnz	x2, 1d310 <mpfr_vasnprintf_aux@@Base+0x1c90>
   1d04c:	ldrb	w1, [x29, #456]
   1d050:	cbnz	w1, 1d320 <mpfr_vasnprintf_aux@@Base+0x1ca0>
   1d054:	ldr	x1, [x29, #464]
   1d058:	cbz	x1, 1d068 <mpfr_vasnprintf_aux@@Base+0x19e8>
   1d05c:	ldr	x2, [x29, #472]
   1d060:	ldr	x0, [x29, #200]
   1d064:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1d068:	ldr	w0, [x29, #440]
   1d06c:	cmp	w0, #0x1
   1d070:	b.eq	1d330 <mpfr_vasnprintf_aux@@Base+0x1cb0>  // b.none
   1d074:	ldr	x0, [x29, #488]
   1d078:	cbz	x0, 1d348 <mpfr_vasnprintf_aux@@Base+0x1cc8>
   1d07c:	ldrb	w25, [x29, #480]
   1d080:	cbnz	w25, 1d364 <mpfr_vasnprintf_aux@@Base+0x1ce4>
   1d084:	ldr	x2, [x29, #496]
   1d088:	ldr	x1, [x29, #488]
   1d08c:	ldr	x0, [x29, #200]
   1d090:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1d094:	ldr	w2, [x29, #504]
   1d098:	cbnz	w2, 1d55c <mpfr_vasnprintf_aux@@Base+0x1edc>
   1d09c:	ldrb	w1, [x29, #508]
   1d0a0:	cbnz	w1, 1d570 <mpfr_vasnprintf_aux@@Base+0x1ef0>
   1d0a4:	ldr	w2, [x29, #512]
   1d0a8:	cbnz	w2, 1d580 <mpfr_vasnprintf_aux@@Base+0x1f00>
   1d0ac:	ldr	x1, [x29, #520]
   1d0b0:	cbz	x1, 1d0c0 <mpfr_vasnprintf_aux@@Base+0x1a40>
   1d0b4:	ldr	x2, [x29, #528]
   1d0b8:	ldr	x0, [x29, #200]
   1d0bc:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1d0c0:	ldr	w2, [x29, #536]
   1d0c4:	cbnz	w2, 1d594 <mpfr_vasnprintf_aux@@Base+0x1f14>
   1d0c8:	ldr	x1, [x29, #544]
   1d0cc:	cbz	x1, 1d0dc <mpfr_vasnprintf_aux@@Base+0x1a5c>
   1d0d0:	ldr	x2, [x29, #552]
   1d0d4:	ldr	x0, [x29, #200]
   1d0d8:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1d0dc:	ldr	w0, [x29, #440]
   1d0e0:	cmp	w0, #0x2
   1d0e4:	b.eq	1d5a8 <mpfr_vasnprintf_aux@@Base+0x1f28>  // b.none
   1d0e8:	ldr	x0, [x29, #560]
   1d0ec:	bl	1a974 <mpfr_asprintf@@Base+0x194>
   1d0f0:	str	x24, [x29, #208]
   1d0f4:	mov	w1, #0x0                   	// #0
   1d0f8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d0fc:	bl	bea0 <localeconv@plt>
   1d100:	ldr	x0, [x0]
   1d104:	ldrb	w0, [x0]
   1d108:	b	1cedc <mpfr_vasnprintf_aux@@Base+0x185c>
   1d10c:	ldr	w1, [x29, #168]
   1d110:	cmp	w1, #0x46
   1d114:	b.ne	1d180 <mpfr_vasnprintf_aux@@Base+0x1b00>  // b.any
   1d118:	cmp	w25, #0x0
   1d11c:	mov	w0, #0x6                   	// #6
   1d120:	csel	w25, w25, w0, ge  // ge = tcont
   1d124:	str	w25, [x29, #368]
   1d128:	mov	w0, #0xf                   	// #15
   1d12c:	str	w0, [x29, #384]
   1d130:	add	x0, x29, #0x200
   1d134:	ldp	x0, x1, [x0, #-152]
   1d138:	stp	x0, x1, [x29, #256]
   1d13c:	add	x0, x29, #0x200
   1d140:	ldp	x0, x1, [x0, #-136]
   1d144:	stp	x0, x1, [x29, #272]
   1d148:	ldr	x0, [x29, #392]
   1d14c:	str	x0, [x29, #288]
   1d150:	mov	x3, #0x0                   	// #0
   1d154:	add	x2, x29, #0x100
   1d158:	mov	x1, x21
   1d15c:	add	x0, x29, #0x1b8
   1d160:	bl	1aea0 <mpfr_asprintf@@Base+0x6c0>
   1d164:	cmn	w0, #0x1
   1d168:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1d16c:	ldr	x0, [x29, #560]
   1d170:	bl	1a974 <mpfr_asprintf@@Base+0x194>
   1d174:	mov	x0, #0xffffffffffffffff    	// #-1
   1d178:	str	x0, [x29, #664]
   1d17c:	b	1d0f0 <mpfr_vasnprintf_aux@@Base+0x1a70>
   1d180:	ldr	w1, [x29, #168]
   1d184:	cmp	w1, #0x45
   1d188:	b.eq	1d260 <mpfr_vasnprintf_aux@@Base+0x1be0>  // b.none
   1d18c:	tbnz	w25, #31, 1d2a8 <mpfr_vasnprintf_aux@@Base+0x1c28>
   1d190:	cmp	w25, #0x0
   1d194:	csinc	w25, w25, wzr, ne  // ne = any
   1d198:	ldr	x3, [x21]
   1d19c:	sub	x3, x3, x0
   1d1a0:	cmp	x0, #0x0
   1d1a4:	b.le	1d1c8 <mpfr_vasnprintf_aux@@Base+0x1b48>
   1d1a8:	add	x0, x0, #0x2
   1d1ac:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   1d1b0:	movk	x1, #0x5556
   1d1b4:	smulh	x1, x0, x1
   1d1b8:	sub	x0, x1, x0, asr #63
   1d1bc:	cmp	x3, #0x0
   1d1c0:	csel	x3, x3, xzr, ge  // ge = tcont
   1d1c4:	add	x3, x0, x3
   1d1c8:	sxtw	x19, w25
   1d1cc:	cmp	x19, x3
   1d1d0:	ldr	w5, [x29, #216]
   1d1d4:	mov	x4, x21
   1d1d8:	csel	x3, x19, x3, le
   1d1dc:	mov	w2, #0xa                   	// #10
   1d1e0:	add	x1, x29, #0x190
   1d1e4:	mov	x0, #0x0                   	// #0
   1d1e8:	bl	c500 <mpfr_get_str@plt>
   1d1ec:	mov	x1, x0
   1d1f0:	str	x0, [x29, #408]
   1d1f4:	ldr	x0, [x29, #560]
   1d1f8:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1d1fc:	ldr	x0, [x29, #400]
   1d200:	sub	x1, x0, #0x1
   1d204:	cmp	x19, x1
   1d208:	ccmn	x1, #0x4, #0x1, gt
   1d20c:	b.ge	1d2b0 <mpfr_vasnprintf_aux@@Base+0x1c30>  // b.tcont
   1d210:	sub	w25, w25, #0x1
   1d214:	str	w25, [x29, #368]
   1d218:	mov	w0, #0xf                   	// #15
   1d21c:	str	w0, [x29, #384]
   1d220:	add	x0, x29, #0x200
   1d224:	ldp	x0, x1, [x0, #-152]
   1d228:	stp	x0, x1, [x29, #256]
   1d22c:	add	x0, x29, #0x200
   1d230:	ldp	x0, x1, [x0, #-136]
   1d234:	stp	x0, x1, [x29, #272]
   1d238:	ldr	x0, [x29, #392]
   1d23c:	str	x0, [x29, #288]
   1d240:	add	x3, x29, #0x190
   1d244:	add	x2, x29, #0x100
   1d248:	mov	x1, x21
   1d24c:	add	x0, x29, #0x1b8
   1d250:	bl	1ab5c <mpfr_asprintf@@Base+0x37c>
   1d254:	cmn	w0, #0x1
   1d258:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1d25c:	b	1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1d260:	mov	w0, #0xf                   	// #15
   1d264:	str	w0, [x29, #384]
   1d268:	add	x0, x29, #0x200
   1d26c:	ldp	x0, x1, [x0, #-152]
   1d270:	stp	x0, x1, [x29, #256]
   1d274:	add	x0, x29, #0x200
   1d278:	ldp	x0, x1, [x0, #-136]
   1d27c:	stp	x0, x1, [x29, #272]
   1d280:	ldr	x0, [x29, #392]
   1d284:	str	x0, [x29, #288]
   1d288:	mov	x3, #0x0                   	// #0
   1d28c:	add	x2, x29, #0x100
   1d290:	mov	x1, x21
   1d294:	add	x0, x29, #0x1b8
   1d298:	bl	1ab5c <mpfr_asprintf@@Base+0x37c>
   1d29c:	cmn	w0, #0x1
   1d2a0:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1d2a4:	b	1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1d2a8:	mov	w25, #0x6                   	// #6
   1d2ac:	b	1d198 <mpfr_vasnprintf_aux@@Base+0x1b18>
   1d2b0:	sub	w0, w25, w0
   1d2b4:	str	w0, [x29, #368]
   1d2b8:	mov	w0, #0xf                   	// #15
   1d2bc:	str	w0, [x29, #384]
   1d2c0:	add	x0, x29, #0x200
   1d2c4:	ldp	x0, x1, [x0, #-152]
   1d2c8:	stp	x0, x1, [x29, #256]
   1d2cc:	add	x0, x29, #0x200
   1d2d0:	ldp	x0, x1, [x0, #-136]
   1d2d4:	stp	x0, x1, [x29, #272]
   1d2d8:	ldr	x0, [x29, #392]
   1d2dc:	str	x0, [x29, #288]
   1d2e0:	add	x3, x29, #0x190
   1d2e4:	add	x2, x29, #0x100
   1d2e8:	mov	x1, x21
   1d2ec:	add	x0, x29, #0x1b8
   1d2f0:	bl	1aea0 <mpfr_asprintf@@Base+0x6c0>
   1d2f4:	cmn	w0, #0x1
   1d2f8:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1d2fc:	b	1d16c <mpfr_vasnprintf_aux@@Base+0x1aec>
   1d300:	mov	w1, w0
   1d304:	ldr	x0, [x29, #200]
   1d308:	bl	1a888 <mpfr_asprintf@@Base+0xa8>
   1d30c:	b	1d0e8 <mpfr_vasnprintf_aux@@Base+0x1a68>
   1d310:	mov	w1, #0x20                  	// #32
   1d314:	ldr	x0, [x29, #200]
   1d318:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d31c:	b	1d04c <mpfr_vasnprintf_aux@@Base+0x19cc>
   1d320:	mov	x2, #0x1                   	// #1
   1d324:	ldr	x0, [x29, #200]
   1d328:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d32c:	b	1d054 <mpfr_vasnprintf_aux@@Base+0x19d4>
   1d330:	ldr	x2, [x29, #448]
   1d334:	cbz	x2, 1d074 <mpfr_vasnprintf_aux@@Base+0x19f4>
   1d338:	mov	w1, #0x30                  	// #48
   1d33c:	ldr	x0, [x29, #200]
   1d340:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d344:	b	1d074 <mpfr_vasnprintf_aux@@Base+0x19f4>
   1d348:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1d34c:	add	x2, x2, #0x6e8
   1d350:	mov	w1, #0x7a3                 	// #1955
   1d354:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1d358:	add	x0, x0, #0x570
   1d35c:	bl	cb40 <mpfr_assert_fail@plt>
   1d360:	b	1d07c <mpfr_vasnprintf_aux@@Base+0x19fc>
   1d364:	ldr	x20, [x29, #488]
   1d368:	ldr	x19, [x29, #496]
   1d36c:	ldrsw	x1, [x29, #504]
   1d370:	mvn	x0, x1
   1d374:	cmp	x19, x0
   1d378:	b.hi	1d3a8 <mpfr_vasnprintf_aux@@Base+0x1d28>  // b.pmore
   1d37c:	add	x1, x19, x1
   1d380:	sub	x0, x1, #0x1
   1d384:	str	x0, [x29, #248]
   1d388:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1d38c:	movk	x21, #0xaaab
   1d390:	umulh	x21, x0, x21
   1d394:	lsr	x2, x21, #1
   1d398:	str	x2, [x29, #240]
   1d39c:	mvn	x0, x2
   1d3a0:	cmp	x1, x0
   1d3a4:	b.ls	1d3b4 <mpfr_vasnprintf_aux@@Base+0x1d34>  // b.plast
   1d3a8:	mov	x0, #0xffffffffffffffff    	// #-1
   1d3ac:	str	x0, [x29, #664]
   1d3b0:	b	1d0e8 <mpfr_vasnprintf_aux@@Base+0x1a68>
   1d3b4:	add	x21, x1, x2
   1d3b8:	mov	x1, x21
   1d3bc:	ldr	x0, [x29, #200]
   1d3c0:	bl	1a888 <mpfr_asprintf@@Base+0xa8>
   1d3c4:	cbnz	w0, 1d3a8 <mpfr_vasnprintf_aux@@Base+0x1d28>
   1d3c8:	ldr	x0, [x29, #656]
   1d3cc:	cbz	x0, 1d09c <mpfr_vasnprintf_aux@@Base+0x1a1c>
   1d3d0:	mvn	x1, x21
   1d3d4:	cmp	x0, x1
   1d3d8:	b.cs	1d45c <mpfr_vasnprintf_aux@@Base+0x1ddc>  // b.hs, b.nlast
   1d3dc:	ldr	x1, [x29, #648]
   1d3e0:	add	x1, x1, x21
   1d3e4:	ldr	x0, [x29, #640]
   1d3e8:	ldr	x2, [x29, #656]
   1d3ec:	add	x0, x0, x2
   1d3f0:	cmp	x1, x0
   1d3f4:	b.cs	1d478 <mpfr_vasnprintf_aux@@Base+0x1df8>  // b.hs, b.nlast
   1d3f8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1d3fc:	movk	x0, #0xaaab
   1d400:	ldr	x2, [x29, #248]
   1d404:	umulh	x0, x2, x0
   1d408:	and	x1, x0, #0xfffffffffffffffe
   1d40c:	add	x0, x1, x0, lsr #1
   1d410:	sub	x0, x2, x0
   1d414:	add	x21, x0, #0x1
   1d418:	ldr	x0, [x29, #648]
   1d41c:	cmp	x19, x21
   1d420:	b.cc	1d488 <mpfr_vasnprintf_aux@@Base+0x1e08>  // b.lo, b.ul, b.last
   1d424:	mov	x2, x21
   1d428:	mov	x1, x20
   1d42c:	bl	ba10 <memcpy@plt>
   1d430:	add	x20, x20, x21
   1d434:	sub	x19, x19, x21
   1d438:	ldr	x0, [x29, #648]
   1d43c:	add	x0, x0, x21
   1d440:	str	x0, [x29, #648]
   1d444:	ldr	x0, [x29, #248]
   1d448:	cmp	x0, #0x2
   1d44c:	b.ls	1d550 <mpfr_vasnprintf_aux@@Base+0x1ed0>  // b.plast
   1d450:	str	xzr, [x29, #248]
   1d454:	mov	w21, #0x30                  	// #48
   1d458:	b	1d514 <mpfr_vasnprintf_aux@@Base+0x1e94>
   1d45c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1d460:	add	x2, x2, #0x708
   1d464:	mov	w1, #0x2d6                 	// #726
   1d468:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1d46c:	add	x0, x0, #0x570
   1d470:	bl	cb40 <mpfr_assert_fail@plt>
   1d474:	b	1d3dc <mpfr_vasnprintf_aux@@Base+0x1d5c>
   1d478:	mov	x1, x21
   1d47c:	ldr	x0, [x29, #200]
   1d480:	bl	1a8c4 <mpfr_asprintf@@Base+0xe4>
   1d484:	b	1d3f8 <mpfr_vasnprintf_aux@@Base+0x1d78>
   1d488:	mov	x2, x19
   1d48c:	mov	x1, x20
   1d490:	bl	ba10 <memcpy@plt>
   1d494:	sub	x2, x21, x19
   1d498:	mov	w1, #0x30                  	// #48
   1d49c:	ldr	x0, [x29, #648]
   1d4a0:	add	x0, x0, x19
   1d4a4:	bl	c110 <memset@plt>
   1d4a8:	mov	x19, #0x0                   	// #0
   1d4ac:	b	1d438 <mpfr_vasnprintf_aux@@Base+0x1db8>
   1d4b0:	mov	x2, x19
   1d4b4:	mov	x1, x20
   1d4b8:	ldr	x0, [x29, #648]
   1d4bc:	bl	ba10 <memcpy@plt>
   1d4c0:	mov	x0, #0x3                   	// #3
   1d4c4:	sub	x2, x0, x19
   1d4c8:	mov	w1, #0x30                  	// #48
   1d4cc:	ldr	x0, [x29, #648]
   1d4d0:	add	x0, x0, x19
   1d4d4:	bl	c110 <memset@plt>
   1d4d8:	mov	x19, #0x0                   	// #0
   1d4dc:	b	1d4f0 <mpfr_vasnprintf_aux@@Base+0x1e70>
   1d4e0:	ldr	x0, [x29, #648]
   1d4e4:	mov	w1, #0x3030                	// #12336
   1d4e8:	strh	w1, [x0]
   1d4ec:	strb	w21, [x0, #2]
   1d4f0:	ldr	x0, [x29, #648]
   1d4f4:	add	x0, x0, #0x3
   1d4f8:	str	x0, [x29, #648]
   1d4fc:	ldr	x0, [x29, #248]
   1d500:	add	x0, x0, #0x1
   1d504:	str	x0, [x29, #248]
   1d508:	ldr	x1, [x29, #240]
   1d50c:	cmp	x1, x0
   1d510:	b.ls	1d550 <mpfr_vasnprintf_aux@@Base+0x1ed0>  // b.plast
   1d514:	ldr	x0, [x29, #648]
   1d518:	add	x1, x0, #0x1
   1d51c:	str	x1, [x29, #648]
   1d520:	strb	w25, [x0]
   1d524:	cbz	x19, 1d4e0 <mpfr_vasnprintf_aux@@Base+0x1e60>
   1d528:	cmp	x19, #0x2
   1d52c:	b.ls	1d4b0 <mpfr_vasnprintf_aux@@Base+0x1e30>  // b.plast
   1d530:	ldr	x0, [x29, #648]
   1d534:	ldrh	w1, [x20]
   1d538:	strh	w1, [x0]
   1d53c:	ldrb	w1, [x20, #2]
   1d540:	strb	w1, [x0, #2]
   1d544:	sub	x19, x19, #0x3
   1d548:	add	x20, x20, #0x3
   1d54c:	b	1d4f0 <mpfr_vasnprintf_aux@@Base+0x1e70>
   1d550:	ldr	x0, [x29, #648]
   1d554:	strb	wzr, [x0]
   1d558:	b	1d09c <mpfr_vasnprintf_aux@@Base+0x1a1c>
   1d55c:	sxtw	x2, w2
   1d560:	mov	w1, #0x30                  	// #48
   1d564:	ldr	x0, [x29, #200]
   1d568:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d56c:	b	1d09c <mpfr_vasnprintf_aux@@Base+0x1a1c>
   1d570:	mov	x2, #0x1                   	// #1
   1d574:	ldr	x0, [x29, #200]
   1d578:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d57c:	b	1d0a4 <mpfr_vasnprintf_aux@@Base+0x1a24>
   1d580:	sxtw	x2, w2
   1d584:	mov	w1, #0x30                  	// #48
   1d588:	ldr	x0, [x29, #200]
   1d58c:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d590:	b	1d0ac <mpfr_vasnprintf_aux@@Base+0x1a2c>
   1d594:	sxtw	x2, w2
   1d598:	mov	w1, #0x30                  	// #48
   1d59c:	ldr	x0, [x29, #200]
   1d5a0:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d5a4:	b	1d0c8 <mpfr_vasnprintf_aux@@Base+0x1a48>
   1d5a8:	ldr	x2, [x29, #448]
   1d5ac:	cbz	x2, 1d0e8 <mpfr_vasnprintf_aux@@Base+0x1a68>
   1d5b0:	mov	w1, #0x20                  	// #32
   1d5b4:	ldr	x0, [x29, #200]
   1d5b8:	bl	1b4f0 <mpfr_asprintf@@Base+0xd10>
   1d5bc:	b	1d0e8 <mpfr_vasnprintf_aux@@Base+0x1a68>
   1d5c0:	sub	w21, w21, #0x1
   1d5c4:	cmp	w21, #0x1
   1d5c8:	b.hi	1d91c <mpfr_vasnprintf_aux@@Base+0x229c>  // b.pmore
   1d5cc:	tbnz	w27, #31, 1d658 <mpfr_vasnprintf_aux@@Base+0x1fd8>
   1d5d0:	add	x0, x28, #0xb
   1d5d4:	and	x28, x0, #0xfffffffffffffff8
   1d5d8:	mov	w1, #0x1                   	// #1
   1d5dc:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d5e0:	cmp	w21, #0x6
   1d5e4:	b.eq	1d794 <mpfr_vasnprintf_aux@@Base+0x2114>  // b.none
   1d5e8:	cmp	w21, #0x7
   1d5ec:	b.ne	1d91c <mpfr_vasnprintf_aux@@Base+0x229c>  // b.any
   1d5f0:	tbnz	w27, #31, 1d7c4 <mpfr_vasnprintf_aux@@Base+0x2144>
   1d5f4:	add	x0, x28, #0xf
   1d5f8:	and	x28, x0, #0xfffffffffffffff8
   1d5fc:	mov	w1, #0x1                   	// #1
   1d600:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d604:	cmp	w21, #0xb
   1d608:	b.eq	1d870 <mpfr_vasnprintf_aux@@Base+0x21f0>  // b.none
   1d60c:	b.ls	1d634 <mpfr_vasnprintf_aux@@Base+0x1fb4>  // b.plast
   1d610:	cmp	w21, #0xc
   1d614:	b.eq	1d8a0 <mpfr_vasnprintf_aux@@Base+0x2220>  // b.none
   1d618:	cmp	w21, #0xd
   1d61c:	b.ne	1d91c <mpfr_vasnprintf_aux@@Base+0x229c>  // b.any
   1d620:	tbnz	w27, #31, 1d900 <mpfr_vasnprintf_aux@@Base+0x2280>
   1d624:	add	x0, x28, #0xf
   1d628:	and	x28, x0, #0xfffffffffffffff8
   1d62c:	mov	w1, #0x1                   	// #1
   1d630:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d634:	cmp	w21, #0x9
   1d638:	b.eq	1d824 <mpfr_vasnprintf_aux@@Base+0x21a4>  // b.none
   1d63c:	cmp	w21, #0xa
   1d640:	b.ne	1d91c <mpfr_vasnprintf_aux@@Base+0x229c>  // b.any
   1d644:	tbnz	w27, #31, 1d854 <mpfr_vasnprintf_aux@@Base+0x21d4>
   1d648:	add	x0, x28, #0xf
   1d64c:	and	x28, x0, #0xfffffffffffffff8
   1d650:	mov	w1, #0x1                   	// #1
   1d654:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d658:	add	w27, w27, #0x8
   1d65c:	mov	w1, #0x1                   	// #1
   1d660:	cmp	w27, #0x0
   1d664:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d668:	add	x0, x28, #0xb
   1d66c:	and	x28, x0, #0xfffffffffffffff8
   1d670:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d674:	cmp	w19, #0x64
   1d678:	mov	w0, #0x69                  	// #105
   1d67c:	ccmp	w19, w0, #0x4, ne  // ne = any
   1d680:	cset	w0, eq  // eq = none
   1d684:	cmp	w19, #0x6f
   1d688:	mov	w1, #0x75                  	// #117
   1d68c:	ccmp	w19, w1, #0x4, ne  // ne = any
   1d690:	csinc	w0, w0, wzr, ne  // ne = any
   1d694:	and	w1, w19, #0xffffffdf
   1d698:	and	w1, w1, #0xff
   1d69c:	cmp	w1, #0x58
   1d6a0:	csinc	w0, w0, wzr, ne  // ne = any
   1d6a4:	cbz	w0, 1d6d8 <mpfr_vasnprintf_aux@@Base+0x2058>
   1d6a8:	tbnz	w27, #31, 1d6bc <mpfr_vasnprintf_aux@@Base+0x203c>
   1d6ac:	add	x0, x28, #0xf
   1d6b0:	and	x28, x0, #0xfffffffffffffff8
   1d6b4:	mov	w1, #0x1                   	// #1
   1d6b8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d6bc:	add	w27, w27, #0x8
   1d6c0:	mov	w1, #0x1                   	// #1
   1d6c4:	cmp	w27, #0x0
   1d6c8:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d6cc:	add	x0, x28, #0xf
   1d6d0:	and	x28, x0, #0xfffffffffffffff8
   1d6d4:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d6d8:	cmp	w19, #0x63
   1d6dc:	b.eq	1d6fc <mpfr_vasnprintf_aux@@Base+0x207c>  // b.none
   1d6e0:	mov	w1, #0x1                   	// #1
   1d6e4:	cmp	w19, #0x73
   1d6e8:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1d6ec:	tbnz	w27, #31, 1d72c <mpfr_vasnprintf_aux@@Base+0x20ac>
   1d6f0:	add	x0, x28, #0xb
   1d6f4:	and	x28, x0, #0xfffffffffffffff8
   1d6f8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d6fc:	tbnz	w27, #31, 1d710 <mpfr_vasnprintf_aux@@Base+0x2090>
   1d700:	add	x0, x28, #0xb
   1d704:	and	x28, x0, #0xfffffffffffffff8
   1d708:	mov	w1, #0x1                   	// #1
   1d70c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d710:	add	w27, w27, #0x8
   1d714:	mov	w1, #0x1                   	// #1
   1d718:	cmp	w27, #0x0
   1d71c:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d720:	add	x0, x28, #0xb
   1d724:	and	x28, x0, #0xfffffffffffffff8
   1d728:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d72c:	add	w27, w27, #0x8
   1d730:	cmp	w27, #0x0
   1d734:	b.le	1da5c <mpfr_vasnprintf_aux@@Base+0x23dc>
   1d738:	add	x0, x28, #0xb
   1d73c:	and	x28, x0, #0xfffffffffffffff8
   1d740:	mov	w1, #0x1                   	// #1
   1d744:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d748:	add	w27, w27, #0x8
   1d74c:	mov	w1, #0x1                   	// #1
   1d750:	cmp	w27, #0x0
   1d754:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d758:	add	x0, x28, #0xf
   1d75c:	and	x28, x0, #0xfffffffffffffff8
   1d760:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d764:	tbnz	w27, #31, 1d778 <mpfr_vasnprintf_aux@@Base+0x20f8>
   1d768:	add	x0, x28, #0xf
   1d76c:	and	x28, x0, #0xfffffffffffffff8
   1d770:	mov	w1, #0x1                   	// #1
   1d774:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d778:	add	w27, w27, #0x8
   1d77c:	mov	w1, #0x1                   	// #1
   1d780:	cmp	w27, #0x0
   1d784:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d788:	add	x0, x28, #0xf
   1d78c:	and	x28, x0, #0xfffffffffffffff8
   1d790:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d794:	tbnz	w27, #31, 1d7a8 <mpfr_vasnprintf_aux@@Base+0x2128>
   1d798:	add	x0, x28, #0xf
   1d79c:	and	x28, x0, #0xfffffffffffffff8
   1d7a0:	mov	w1, #0x1                   	// #1
   1d7a4:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7a8:	add	w27, w27, #0x8
   1d7ac:	mov	w1, #0x1                   	// #1
   1d7b0:	cmp	w27, #0x0
   1d7b4:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7b8:	add	x0, x28, #0xf
   1d7bc:	and	x28, x0, #0xfffffffffffffff8
   1d7c0:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7c4:	add	w27, w27, #0x8
   1d7c8:	mov	w1, #0x1                   	// #1
   1d7cc:	cmp	w27, #0x0
   1d7d0:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7d4:	add	x0, x28, #0xf
   1d7d8:	and	x28, x0, #0xfffffffffffffff8
   1d7dc:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7e0:	ldr	w0, [x29, #188]
   1d7e4:	tbnz	w0, #31, 1d7fc <mpfr_vasnprintf_aux@@Base+0x217c>
   1d7e8:	add	x0, x28, #0xf
   1d7ec:	and	x0, x0, #0xfffffffffffffff0
   1d7f0:	add	x28, x0, #0x10
   1d7f4:	mov	w1, #0x1                   	// #1
   1d7f8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d7fc:	ldr	w0, [x29, #188]
   1d800:	add	w0, w0, #0x10
   1d804:	str	w0, [x29, #188]
   1d808:	mov	w1, #0x1                   	// #1
   1d80c:	cmp	w0, #0x0
   1d810:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d814:	add	x0, x28, #0xf
   1d818:	and	x0, x0, #0xfffffffffffffff0
   1d81c:	add	x28, x0, #0x10
   1d820:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d824:	tbnz	w27, #31, 1d838 <mpfr_vasnprintf_aux@@Base+0x21b8>
   1d828:	add	x0, x28, #0xf
   1d82c:	and	x28, x0, #0xfffffffffffffff8
   1d830:	mov	w1, #0x1                   	// #1
   1d834:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d838:	add	w27, w27, #0x8
   1d83c:	mov	w1, #0x1                   	// #1
   1d840:	cmp	w27, #0x0
   1d844:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d848:	add	x0, x28, #0xf
   1d84c:	and	x28, x0, #0xfffffffffffffff8
   1d850:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d854:	add	w27, w27, #0x8
   1d858:	mov	w1, #0x1                   	// #1
   1d85c:	cmp	w27, #0x0
   1d860:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d864:	add	x0, x28, #0xf
   1d868:	and	x28, x0, #0xfffffffffffffff8
   1d86c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d870:	tbnz	w27, #31, 1d884 <mpfr_vasnprintf_aux@@Base+0x2204>
   1d874:	add	x0, x28, #0xf
   1d878:	and	x28, x0, #0xfffffffffffffff8
   1d87c:	mov	w1, #0x1                   	// #1
   1d880:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d884:	add	w27, w27, #0x8
   1d888:	mov	w1, #0x1                   	// #1
   1d88c:	cmp	w27, #0x0
   1d890:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d894:	add	x0, x28, #0xf
   1d898:	and	x28, x0, #0xfffffffffffffff8
   1d89c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d8a0:	tbnz	w27, #31, 1d8bc <mpfr_vasnprintf_aux@@Base+0x223c>
   1d8a4:	add	x0, x28, #0xf
   1d8a8:	and	x28, x0, #0xfffffffffffffff8
   1d8ac:	add	x0, x28, #0xf
   1d8b0:	and	x28, x0, #0xfffffffffffffff8
   1d8b4:	mov	w1, #0x1                   	// #1
   1d8b8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d8bc:	add	w0, w27, #0x8
   1d8c0:	cmp	w0, #0x0
   1d8c4:	b.le	1d8d8 <mpfr_vasnprintf_aux@@Base+0x2258>
   1d8c8:	add	x1, x28, #0xf
   1d8cc:	and	x28, x1, #0xfffffffffffffff8
   1d8d0:	mov	w27, w0
   1d8d4:	b	1d8ac <mpfr_vasnprintf_aux@@Base+0x222c>
   1d8d8:	cbz	w0, 1d8f8 <mpfr_vasnprintf_aux@@Base+0x2278>
   1d8dc:	add	w27, w27, #0x10
   1d8e0:	mov	w1, #0x1                   	// #1
   1d8e4:	cmp	w27, #0x0
   1d8e8:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d8ec:	add	x0, x28, #0xf
   1d8f0:	and	x28, x0, #0xfffffffffffffff8
   1d8f4:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d8f8:	mov	w27, w0
   1d8fc:	b	1d8ac <mpfr_vasnprintf_aux@@Base+0x222c>
   1d900:	add	w27, w27, #0x8
   1d904:	mov	w1, #0x1                   	// #1
   1d908:	cmp	w27, #0x0
   1d90c:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d910:	add	x0, x28, #0xf
   1d914:	and	x28, x0, #0xfffffffffffffff8
   1d918:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d91c:	cmp	w19, #0x67
   1d920:	b.ls	1d958 <mpfr_vasnprintf_aux@@Base+0x22d8>  // b.plast
   1d924:	sub	w0, w19, #0x69
   1d928:	and	w1, w0, #0xff
   1d92c:	cmp	w1, #0xf
   1d930:	b.hi	1d988 <mpfr_vasnprintf_aux@@Base+0x2308>  // b.pmore
   1d934:	mov	x0, #0x1                   	// #1
   1d938:	lsl	x0, x0, x1
   1d93c:	mov	x1, #0x9041                	// #36929
   1d940:	tst	x0, x1
   1d944:	b.ne	1d990 <mpfr_vasnprintf_aux@@Base+0x2310>  // b.any
   1d948:	tbnz	w0, #7, 1da2c <mpfr_vasnprintf_aux@@Base+0x23ac>
   1d94c:	tbnz	w0, #10, 1d9fc <mpfr_vasnprintf_aux@@Base+0x237c>
   1d950:	mov	w1, #0x1                   	// #1
   1d954:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d958:	mov	w1, #0x1                   	// #1
   1d95c:	cmp	w19, #0x40
   1d960:	b.ls	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.plast
   1d964:	sub	w19, w19, #0x41
   1d968:	mov	x0, #0x1                   	// #1
   1d96c:	lsl	x19, x0, x19
   1d970:	tst	x19, x22
   1d974:	b.ne	1d9c0 <mpfr_vasnprintf_aux@@Base+0x2340>  // b.any
   1d978:	tst	x19, x23
   1d97c:	b.ne	1d990 <mpfr_vasnprintf_aux@@Base+0x2310>  // b.any
   1d980:	mov	w1, #0x1                   	// #1
   1d984:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d988:	mov	w1, #0x1                   	// #1
   1d98c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d990:	tbnz	w27, #31, 1d9a4 <mpfr_vasnprintf_aux@@Base+0x2324>
   1d994:	add	x0, x28, #0xb
   1d998:	and	x28, x0, #0xfffffffffffffff8
   1d99c:	mov	w1, #0x1                   	// #1
   1d9a0:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9a4:	add	w27, w27, #0x8
   1d9a8:	mov	w1, #0x1                   	// #1
   1d9ac:	cmp	w27, #0x0
   1d9b0:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9b4:	add	x0, x28, #0xb
   1d9b8:	and	x28, x0, #0xfffffffffffffff8
   1d9bc:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9c0:	ldr	w0, [x29, #188]
   1d9c4:	tbnz	w0, #31, 1d9d8 <mpfr_vasnprintf_aux@@Base+0x2358>
   1d9c8:	add	x0, x28, #0xf
   1d9cc:	and	x28, x0, #0xfffffffffffffff8
   1d9d0:	mov	w1, #0x1                   	// #1
   1d9d4:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9d8:	ldr	w0, [x29, #188]
   1d9dc:	add	w0, w0, #0x10
   1d9e0:	str	w0, [x29, #188]
   1d9e4:	mov	w1, #0x1                   	// #1
   1d9e8:	cmp	w0, #0x0
   1d9ec:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9f0:	add	x0, x28, #0xf
   1d9f4:	and	x28, x0, #0xfffffffffffffff8
   1d9f8:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1d9fc:	tbnz	w27, #31, 1da10 <mpfr_vasnprintf_aux@@Base+0x2390>
   1da00:	add	x0, x28, #0xf
   1da04:	and	x28, x0, #0xfffffffffffffff8
   1da08:	mov	w1, #0x1                   	// #1
   1da0c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da10:	add	w27, w27, #0x8
   1da14:	mov	w1, #0x1                   	// #1
   1da18:	cmp	w27, #0x0
   1da1c:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da20:	add	x0, x28, #0xf
   1da24:	and	x28, x0, #0xfffffffffffffff8
   1da28:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da2c:	tbnz	w27, #31, 1da40 <mpfr_vasnprintf_aux@@Base+0x23c0>
   1da30:	add	x0, x28, #0xf
   1da34:	and	x28, x0, #0xfffffffffffffff8
   1da38:	mov	w1, #0x1                   	// #1
   1da3c:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da40:	add	w27, w27, #0x8
   1da44:	mov	w1, #0x1                   	// #1
   1da48:	cmp	w27, #0x0
   1da4c:	b.le	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da50:	add	x0, x28, #0xf
   1da54:	and	x28, x0, #0xfffffffffffffff8
   1da58:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da5c:	mov	w1, #0x1                   	// #1
   1da60:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1da64:	mov	x24, x2
   1da68:	b	1dc3c <mpfr_vasnprintf_aux@@Base+0x25bc>
   1da6c:	add	x0, x29, #0x190
   1da70:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1da74:	mov	x20, x0
   1da78:	b	1dc70 <mpfr_vasnprintf_aux@@Base+0x25f0>
   1da7c:	ldr	x0, [x29, #400]
   1da80:	cbnz	x0, 1db14 <mpfr_vasnprintf_aux@@Base+0x2494>
   1da84:	ldr	x0, [x29, #664]
   1da88:	cmn	x0, #0x1
   1da8c:	b.ne	1daa8 <mpfr_vasnprintf_aux@@Base+0x2428>  // b.any
   1da90:	ldr	w0, [x29, #184]
   1da94:	orr	w0, w0, #0x10
   1da98:	str	w0, [x29, #184]
   1da9c:	bl	cc00 <__errno_location@plt>
   1daa0:	mov	w1, #0x4b                  	// #75
   1daa4:	str	w1, [x0]
   1daa8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1daac:	ldr	x1, [x0, #2576]
   1dab0:	add	x0, x0, #0xa10
   1dab4:	blr	x1
   1dab8:	mrs	x1, tpidr_el0
   1dabc:	ldr	w2, [x29, #184]
   1dac0:	str	w2, [x1, x0]
   1dac4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1dac8:	ldr	x2, [x0, #2512]
   1dacc:	add	x0, x0, #0x9d0
   1dad0:	blr	x2
   1dad4:	ldr	x2, [x29, #136]
   1dad8:	str	x2, [x1, x0]
   1dadc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1dae0:	ldr	x2, [x0, #2544]
   1dae4:	add	x0, x0, #0x9f0
   1dae8:	blr	x2
   1daec:	ldr	x2, [x29, #128]
   1daf0:	str	x2, [x1, x0]
   1daf4:	ldr	x0, [x29, #160]
   1daf8:	cbz	x0, 1db9c <mpfr_vasnprintf_aux@@Base+0x251c>
   1dafc:	str	xzr, [x0]
   1db00:	ldr	x1, [x29, #656]
   1db04:	ldr	x0, [x29, #640]
   1db08:	bl	cc20 <mpfr_free_func@plt>
   1db0c:	mov	w19, #0xffffffff            	// #-1
   1db10:	b	1dd54 <mpfr_vasnprintf_aux@@Base+0x26d4>
   1db14:	bl	c410 <mpfr_tmp_free@plt>
   1db18:	b	1da84 <mpfr_vasnprintf_aux@@Base+0x2404>
   1db1c:	bl	c410 <mpfr_tmp_free@plt>
   1db20:	b	1dcd0 <mpfr_vasnprintf_aux@@Base+0x2650>
   1db24:	mov	x2, x19
   1db28:	ldr	x1, [x29, #208]
   1db2c:	add	x0, x29, #0x280
   1db30:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1db34:	b	1dcd0 <mpfr_vasnprintf_aux@@Base+0x2650>
   1db38:	ldr	x1, [x29, #104]
   1db3c:	cbz	x1, 1dd08 <mpfr_vasnprintf_aux@@Base+0x2688>
   1db40:	sxtw	x20, w0
   1db44:	ldr	x1, [x29, #144]
   1db48:	cmp	x1, w0, sxtw
   1db4c:	b.ls	1db78 <mpfr_vasnprintf_aux@@Base+0x24f8>  // b.plast
   1db50:	mov	x2, x20
   1db54:	ldr	x1, [x29, #640]
   1db58:	ldr	x21, [x29, #96]
   1db5c:	mov	x0, x21
   1db60:	bl	cad0 <strncpy@plt>
   1db64:	strb	wzr, [x21, x20]
   1db68:	ldr	x1, [x29, #656]
   1db6c:	ldr	x0, [x29, #640]
   1db70:	bl	cc20 <mpfr_free_func@plt>
   1db74:	b	1dd08 <mpfr_vasnprintf_aux@@Base+0x2688>
   1db78:	ldr	x0, [x29, #144]
   1db7c:	sub	x20, x0, #0x1
   1db80:	mov	x2, x20
   1db84:	ldr	x1, [x29, #640]
   1db88:	ldr	x21, [x29, #96]
   1db8c:	mov	x0, x21
   1db90:	bl	cad0 <strncpy@plt>
   1db94:	strb	wzr, [x21, x20]
   1db98:	b	1db68 <mpfr_vasnprintf_aux@@Base+0x24e8>
   1db9c:	mov	w19, #0xffffffff            	// #-1
   1dba0:	ldr	x0, [x29, #104]
   1dba4:	cbz	x0, 1dd54 <mpfr_vasnprintf_aux@@Base+0x26d4>
   1dba8:	b	1db00 <mpfr_vasnprintf_aux@@Base+0x2480>
   1dbac:	cmp	w19, #0x62
   1dbb0:	b.eq	1beac <mpfr_vasnprintf_aux@@Base+0x82c>  // b.none
   1dbb4:	b.ls	1dbe0 <mpfr_vasnprintf_aux@@Base+0x2560>  // b.plast
   1dbb8:	cmp	w19, #0x63
   1dbbc:	b.eq	1bebc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1dbc0:	cmp	w19, #0x64
   1dbc4:	b.eq	1bce0 <mpfr_vasnprintf_aux@@Base+0x660>  // b.none
   1dbc8:	sub	w0, w19, #0x65
   1dbcc:	and	w0, w0, #0xff
   1dbd0:	mov	w21, #0xf                   	// #15
   1dbd4:	cmp	w0, #0x2
   1dbd8:	b.hi	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.pmore
   1dbdc:	b	1dc14 <mpfr_vasnprintf_aux@@Base+0x2594>
   1dbe0:	cmp	w19, #0x47
   1dbe4:	b.hi	1dc00 <mpfr_vasnprintf_aux@@Base+0x2580>  // b.pmore
   1dbe8:	cmp	w19, #0x44
   1dbec:	b.hi	1be34 <mpfr_vasnprintf_aux@@Base+0x7b4>  // b.pmore
   1dbf0:	mov	w21, #0xf                   	// #15
   1dbf4:	cmp	w19, #0x41
   1dbf8:	b.eq	1dc14 <mpfr_vasnprintf_aux@@Base+0x2594>  // b.none
   1dbfc:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1dc00:	cmp	w19, #0x58
   1dc04:	b.eq	1bce0 <mpfr_vasnprintf_aux@@Base+0x660>  // b.none
   1dc08:	mov	w21, #0xf                   	// #15
   1dc0c:	cmp	w19, #0x61
   1dc10:	b.ne	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>  // b.any
   1dc14:	sub	w0, w21, #0x8
   1dc18:	cmp	w0, #0x1
   1dc1c:	ccmp	w21, #0xf, #0x4, hi  // hi = pmore
   1dc20:	cset	w0, eq  // eq = none
   1dc24:	b	1bd9c <mpfr_vasnprintf_aux@@Base+0x71c>
   1dc28:	mov	w21, #0xf                   	// #15
   1dc2c:	cmp	w19, #0x6e
   1dc30:	b.ne	1dd7c <mpfr_vasnprintf_aux@@Base+0x26fc>  // b.any
   1dc34:	mov	w19, #0x6e                  	// #110
   1dc38:	cbnz	w19, 1be50 <mpfr_vasnprintf_aux@@Base+0x7d0>
   1dc3c:	ldr	x0, [x29, #208]
   1dc40:	cmp	x24, x0
   1dc44:	b.eq	1dcd0 <mpfr_vasnprintf_aux@@Base+0x2650>  // b.none
   1dc48:	sub	x19, x24, x0
   1dc4c:	cbz	w1, 1db24 <mpfr_vasnprintf_aux@@Base+0x24a4>
   1dc50:	str	xzr, [x29, #400]
   1dc54:	add	x1, x19, #0x1
   1dc58:	cmp	x1, #0x4, lsl #12
   1dc5c:	b.hi	1da6c <mpfr_vasnprintf_aux@@Base+0x23ec>  // b.pmore
   1dc60:	add	x0, x1, #0xf
   1dc64:	and	x0, x0, #0xfffffffffffffff0
   1dc68:	sub	sp, sp, x0
   1dc6c:	add	x20, sp, #0x10
   1dc70:	mov	x2, x19
   1dc74:	ldr	x1, [x29, #208]
   1dc78:	mov	x0, x20
   1dc7c:	bl	cad0 <strncpy@plt>
   1dc80:	strb	wzr, [x20, x19]
   1dc84:	add	x0, x29, #0x2a0
   1dc88:	ldp	x0, x1, [x0, #-104]
   1dc8c:	stp	x0, x1, [x29, #256]
   1dc90:	add	x0, x29, #0x2a0
   1dc94:	ldp	x0, x1, [x0, #-88]
   1dc98:	stp	x0, x1, [x29, #272]
   1dc9c:	add	x2, x29, #0x100
   1dca0:	mov	x1, x20
   1dca4:	add	x0, x29, #0x1b8
   1dca8:	bl	c050 <__gmp_vasprintf@plt>
   1dcac:	tbnz	w0, #31, 1da7c <mpfr_vasnprintf_aux@@Base+0x23fc>
   1dcb0:	sxtw	x2, w0
   1dcb4:	ldr	x1, [x29, #440]
   1dcb8:	add	x0, x29, #0x280
   1dcbc:	bl	1b5c4 <mpfr_asprintf@@Base+0xde4>
   1dcc0:	ldr	x0, [x29, #440]
   1dcc4:	bl	c890 <mpfr_free_str@plt>
   1dcc8:	ldr	x0, [x29, #400]
   1dccc:	cbnz	x0, 1db1c <mpfr_vasnprintf_aux@@Base+0x249c>
   1dcd0:	ldr	x0, [x29, #664]
   1dcd4:	mov	x1, #0x7fffffff            	// #2147483647
   1dcd8:	cmp	x0, x1
   1dcdc:	ccmn	x0, #0x1, #0x4, le
   1dce0:	b.eq	1da90 <mpfr_vasnprintf_aux@@Base+0x2410>  // b.none
   1dce4:	mov	w19, w0
   1dce8:	ldr	x20, [x29, #160]
   1dcec:	cbz	x20, 1db38 <mpfr_vasnprintf_aux@@Base+0x24b8>
   1dcf0:	add	w0, w0, #0x1
   1dcf4:	sxtw	x2, w0
   1dcf8:	ldr	x1, [x29, #656]
   1dcfc:	ldr	x0, [x29, #640]
   1dd00:	bl	c1c0 <mpfr_reallocate_func@plt>
   1dd04:	str	x0, [x20]
   1dd08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1dd0c:	ldr	x1, [x0, #2576]
   1dd10:	add	x0, x0, #0xa10
   1dd14:	blr	x1
   1dd18:	mrs	x1, tpidr_el0
   1dd1c:	ldr	w2, [x29, #184]
   1dd20:	str	w2, [x1, x0]
   1dd24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1dd28:	ldr	x2, [x0, #2512]
   1dd2c:	add	x0, x0, #0x9d0
   1dd30:	blr	x2
   1dd34:	ldr	x2, [x29, #136]
   1dd38:	str	x2, [x1, x0]
   1dd3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1dd40:	ldr	x2, [x0, #2544]
   1dd44:	add	x0, x0, #0x9f0
   1dd48:	blr	x2
   1dd4c:	ldr	x2, [x29, #128]
   1dd50:	str	x2, [x1, x0]
   1dd54:	mov	w0, w19
   1dd58:	sub	sp, x29, #0x10
   1dd5c:	ldp	x19, x20, [sp, #32]
   1dd60:	ldp	x21, x22, [sp, #48]
   1dd64:	ldp	x23, x24, [sp, #64]
   1dd68:	ldp	x25, x26, [sp, #80]
   1dd6c:	ldp	x27, x28, [sp, #96]
   1dd70:	ldp	x29, x30, [sp, #16]
   1dd74:	add	sp, sp, #0x2b0
   1dd78:	ret
   1dd7c:	cmp	w19, #0x6f
   1dd80:	b.eq	1bce0 <mpfr_vasnprintf_aux@@Base+0x660>  // b.none
   1dd84:	b	1bde4 <mpfr_vasnprintf_aux@@Base+0x764>
   1dd88:	mov	w0, #0x20                  	// #32
   1dd8c:	str	w0, [x29, #228]
   1dd90:	str	wzr, [x29, #224]
   1dd94:	str	wzr, [x29, #232]
   1dd98:	str	wzr, [x29, #248]
   1dd9c:	str	wzr, [x29, #240]
   1dda0:	str	wzr, [x29, #236]
   1dda4:	mov	w20, #0x0                   	// #0
   1dda8:	b	1b89c <mpfr_vasnprintf_aux@@Base+0x21c>
   1ddac:	mov	x0, #0x1000                	// #4096
   1ddb0:	bl	ccf0 <mpfr_allocate_func@plt>
   1ddb4:	str	x0, [x29, #640]
   1ddb8:	strb	wzr, [x0]
   1ddbc:	ldr	x0, [x29, #640]
   1ddc0:	str	x0, [x29, #648]
   1ddc4:	mov	x0, #0x1000                	// #4096
   1ddc8:	b	1b748 <mpfr_vasnprintf_aux@@Base+0xc8>
   1ddcc:	bl	bea0 <localeconv@plt>
   1ddd0:	ldr	x0, [x0]
   1ddd4:	ldrb	w0, [x0, #1]
   1ddd8:	cbz	w0, 1c9a8 <mpfr_vasnprintf_aux@@Base+0x1328>
   1dddc:	mov	w0, #0x2e                  	// #46
   1dde0:	strb	w0, [x29, #508]
   1dde4:	b	1de04 <mpfr_vasnprintf_aux@@Base+0x2784>
   1dde8:	bl	bea0 <localeconv@plt>
   1ddec:	ldr	x0, [x0]
   1ddf0:	ldrb	w0, [x0, #1]
   1ddf4:	cbz	w0, 1c9a8 <mpfr_vasnprintf_aux@@Base+0x1328>
   1ddf8:	mov	w0, #0x2e                  	// #46
   1ddfc:	strb	w0, [x29, #508]
   1de00:	sub	w25, w25, #0x1
   1de04:	str	w25, [x29, #536]
   1de08:	ldr	w1, [x29, #168]
   1de0c:	cmp	w1, #0x45
   1de10:	ldr	w0, [x29, #112]
   1de14:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1de18:	mov	w0, #0x62                  	// #98
   1de1c:	ccmp	w19, w0, #0x4, eq  // eq = none
   1de20:	b.ne	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   1de24:	cmp	w1, #0x45
   1de28:	b.ne	1c928 <mpfr_vasnprintf_aux@@Base+0x12a8>  // b.any
   1de2c:	mov	x0, #0x4                   	// #4
   1de30:	str	x0, [x29, #552]
   1de34:	mov	x0, #0x5                   	// #5
   1de38:	bl	ccf0 <mpfr_allocate_func@plt>
   1de3c:	mov	x1, x0
   1de40:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1de44:	add	x2, x0, #0x638
   1de48:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1de4c:	add	x0, x0, #0x630
   1de50:	ldr	w3, [x29, #208]
   1de54:	cmp	w3, #0x0
   1de58:	csel	x0, x0, x2, ne  // ne = any
   1de5c:	ldr	w2, [x0]
   1de60:	str	w2, [x1]
   1de64:	ldrb	w0, [x0, #4]
   1de68:	strb	w0, [x1, #4]
   1de6c:	ldr	x0, [x29, #560]
   1de70:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1de74:	str	x0, [x29, #544]
   1de78:	b	1cf9c <mpfr_vasnprintf_aux@@Base+0x191c>
   1de7c:	ldr	x0, [x29, #248]
   1de80:	ldrb	w0, [x0]
   1de84:	cbz	w0, 1cb78 <mpfr_vasnprintf_aux@@Base+0x14f8>
   1de88:	ldr	x1, [x29, #248]
   1de8c:	mov	w7, #0x44                  	// #68
   1de90:	mov	w6, #0x45                  	// #69
   1de94:	mov	w5, #0x46                  	// #70
   1de98:	mov	w4, #0x42                  	// #66
   1de9c:	mov	w3, #0x43                  	// #67
   1dea0:	mov	w2, #0x41                  	// #65
   1dea4:	b	1ce54 <mpfr_vasnprintf_aux@@Base+0x17d4>
   1dea8:	ldr	x0, [x29, #248]
   1deac:	ldrb	w0, [x0]
   1deb0:	cbnz	w0, 1de88 <mpfr_vasnprintf_aux@@Base+0x2808>
   1deb4:	b	1ceb8 <mpfr_vasnprintf_aux@@Base+0x1838>
   1deb8:	ldr	w0, [x29, #216]
   1debc:	cmp	w0, #0x1
   1dec0:	b.eq	1cd7c <mpfr_vasnprintf_aux@@Base+0x16fc>  // b.none
   1dec4:	mov	x0, #0x1                   	// #1
   1dec8:	b	1cc58 <mpfr_vasnprintf_aux@@Base+0x15d8>
   1decc:	mov	w0, #0x58                  	// #88
   1ded0:	strb	w0, [x1, #1]
   1ded4:	strb	wzr, [x1, #2]
   1ded8:	ldr	x0, [x29, #560]
   1dedc:	bl	1a9d0 <mpfr_asprintf@@Base+0x1f0>
   1dee0:	str	x0, [x29, #464]
   1dee4:	mov	x0, #0x1                   	// #1
   1dee8:	str	x0, [x29, #496]
   1deec:	mov	w0, #0x10                  	// #16
   1def0:	str	w0, [x29, #240]
   1def4:	b	1cae8 <mpfr_vasnprintf_aux@@Base+0x1468>
   1def8:	str	wzr, [x29, #216]
   1defc:	b	1dc34 <mpfr_vasnprintf_aux@@Base+0x25b4>

000000000001df00 <mpfr_const_pi_internal@@Base>:
   1df00:	stp	x29, x30, [sp, #-432]!
   1df04:	mov	x29, sp
   1df08:	stp	x19, x20, [sp, #16]
   1df0c:	stp	x21, x22, [sp, #32]
   1df10:	stp	x23, x24, [sp, #48]
   1df14:	stp	x25, x26, [sp, #64]
   1df18:	stp	x27, x28, [sp, #80]
   1df1c:	str	x0, [sp, #112]
   1df20:	str	w1, [sp, #108]
   1df24:	ldr	x2, [x0]
   1df28:	str	x2, [sp, #96]
   1df2c:	add	x0, x2, #0x10
   1df30:	mov	x1, #0x1c72                	// #7282
   1df34:	movk	x1, #0x71c7, lsl #16
   1df38:	movk	x1, #0xc71c, lsl #32
   1df3c:	movk	x1, #0x1c71, lsl #48
   1df40:	smulh	x1, x0, x1
   1df44:	sub	x0, x1, x0, asr #63
   1df48:	cmp	xzr, x0, lsr #2
   1df4c:	b.eq	1e190 <mpfr_const_pi_internal@@Base+0x290>  // b.none
   1df50:	add	x1, x2, #0x12
   1df54:	mov	x27, #0x2                   	// #2
   1df58:	mov	x2, #0x1c72                	// #7282
   1df5c:	movk	x2, #0x71c7, lsl #16
   1df60:	movk	x2, #0xc71c, lsl #32
   1df64:	movk	x2, #0x1c71, lsl #48
   1df68:	add	x27, x27, #0x1
   1df6c:	smulh	x0, x1, x2
   1df70:	sub	x0, x0, x1, asr #63
   1df74:	asr	x0, x0, x27
   1df78:	add	x1, x1, #0x2
   1df7c:	cbnz	x0, 1df68 <mpfr_const_pi_internal@@Base+0x68>
   1df80:	add	x0, x27, x27, lsl #1
   1df84:	ldr	x1, [sp, #96]
   1df88:	add	x0, x0, x1
   1df8c:	add	x25, x0, #0xe
   1df90:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   1df94:	cmp	x25, x1
   1df98:	b.ge	1e198 <mpfr_const_pi_internal@@Base+0x298>  // b.tcont
   1df9c:	add	x19, x0, #0x4c
   1dfa0:	adds	x0, x0, #0xd
   1dfa4:	csel	x0, x19, x0, mi  // mi = first
   1dfa8:	asr	x19, x0, #6
   1dfac:	add	x19, x19, #0x1
   1dfb0:	add	x0, x19, x19, lsl #2
   1dfb4:	cmp	x0, #0x10
   1dfb8:	b.gt	1e19c <mpfr_const_pi_internal@@Base+0x29c>
   1dfbc:	str	xzr, [sp, #128]
   1dfc0:	add	x0, sp, #0x90
   1dfc4:	str	x0, [sp, #136]
   1dfc8:	str	x25, [sp, #400]
   1dfcc:	ldr	x1, [sp, #136]
   1dfd0:	str	x1, [sp, #424]
   1dfd4:	mov	w0, #0x1                   	// #1
   1dfd8:	str	w0, [sp, #408]
   1dfdc:	str	x25, [sp, #368]
   1dfe0:	add	x2, x1, x19, lsl #3
   1dfe4:	str	x2, [sp, #392]
   1dfe8:	str	w0, [sp, #376]
   1dfec:	str	x25, [sp, #336]
   1dff0:	add	x2, x1, x19, lsl #4
   1dff4:	str	x2, [sp, #360]
   1dff8:	str	w0, [sp, #344]
   1dffc:	str	x25, [sp, #304]
   1e000:	add	x2, x19, x19, lsl #1
   1e004:	add	x2, x1, x2, lsl #3
   1e008:	str	x2, [sp, #328]
   1e00c:	str	w0, [sp, #312]
   1e010:	str	x25, [sp, #272]
   1e014:	add	x19, x1, x19, lsl #5
   1e018:	str	x19, [sp, #296]
   1e01c:	str	w0, [sp, #280]
   1e020:	mov	x0, #0x40                  	// #64
   1e024:	str	x0, [sp, #120]
   1e028:	add	x21, sp, #0x190
   1e02c:	mov	x26, #0x1                   	// #1
   1e030:	add	x23, sp, #0x170
   1e034:	add	x19, sp, #0x150
   1e038:	add	x28, sp, #0x130
   1e03c:	mov	w3, #0x0                   	// #0
   1e040:	mov	x2, #0x0                   	// #0
   1e044:	mov	x1, x26
   1e048:	mov	x0, x21
   1e04c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1e050:	mov	w3, #0x0                   	// #0
   1e054:	mov	x2, #0x0                   	// #0
   1e058:	mov	x1, x26
   1e05c:	mov	x0, x23
   1e060:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1e064:	mov	w3, #0x0                   	// #0
   1e068:	mov	x2, #0xffffffffffffffff    	// #-1
   1e06c:	mov	x1, x26
   1e070:	mov	x0, x19
   1e074:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1e078:	mov	w3, #0x0                   	// #0
   1e07c:	mov	x2, #0xfffffffffffffffe    	// #-2
   1e080:	mov	x1, x26
   1e084:	mov	x0, x28
   1e088:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1e08c:	mov	x24, #0x0                   	// #0
   1e090:	add	x20, sp, #0x110
   1e094:	mov	w3, #0x0                   	// #0
   1e098:	mov	x2, x19
   1e09c:	mov	x1, x23
   1e0a0:	mov	x0, x20
   1e0a4:	bl	c1a0 <mpfr_add@plt>
   1e0a8:	mov	w3, #0x0                   	// #0
   1e0ac:	mov	x2, #0x2                   	// #2
   1e0b0:	mov	x1, x20
   1e0b4:	mov	x0, x20
   1e0b8:	bl	c8f0 <mpfr_div_2ui@plt>
   1e0bc:	mov	w2, #0x0                   	// #0
   1e0c0:	mov	x1, x19
   1e0c4:	mov	x0, x19
   1e0c8:	bl	c930 <mpfr_sqrt@plt>
   1e0cc:	mov	w3, #0x0                   	// #0
   1e0d0:	mov	x2, x19
   1e0d4:	mov	x1, x21
   1e0d8:	mov	x0, x21
   1e0dc:	bl	c1a0 <mpfr_add@plt>
   1e0e0:	mov	w3, #0x0                   	// #0
   1e0e4:	mov	x2, x26
   1e0e8:	mov	x1, x21
   1e0ec:	mov	x0, x21
   1e0f0:	bl	c8f0 <mpfr_div_2ui@plt>
   1e0f4:	mov	w3, #0x0                   	// #0
   1e0f8:	mov	x2, x21
   1e0fc:	mov	x1, x21
   1e100:	mov	x0, x23
   1e104:	bl	bd50 <mpfr_mul@plt>
   1e108:	mov	w3, #0x0                   	// #0
   1e10c:	mov	x2, x20
   1e110:	mov	x1, x23
   1e114:	mov	x0, x19
   1e118:	bl	bb70 <mpfr_sub@plt>
   1e11c:	mov	w3, #0x0                   	// #0
   1e120:	mov	x2, x26
   1e124:	mov	x1, x19
   1e128:	mov	x0, x19
   1e12c:	bl	c2c0 <mpfr_mul_2ui@plt>
   1e130:	mov	w3, #0x0                   	// #0
   1e134:	mov	x2, x19
   1e138:	mov	x1, x23
   1e13c:	mov	x0, x20
   1e140:	bl	bb70 <mpfr_sub@plt>
   1e144:	ldr	x22, [sp, #288]
   1e148:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1e14c:	cmp	x22, x0
   1e150:	csneg	x22, x25, x22, eq  // eq = none
   1e154:	mov	w3, #0x0                   	// #0
   1e158:	mov	x2, x24
   1e15c:	mov	x1, x20
   1e160:	mov	x0, x20
   1e164:	bl	c2c0 <mpfr_mul_2ui@plt>
   1e168:	mov	w3, #0x0                   	// #0
   1e16c:	mov	x2, x20
   1e170:	mov	x1, x28
   1e174:	mov	x0, x28
   1e178:	bl	bb70 <mpfr_sub@plt>
   1e17c:	sub	x0, x25, x24
   1e180:	cmp	x0, x22
   1e184:	b.le	1e1b0 <mpfr_const_pi_internal@@Base+0x2b0>
   1e188:	add	x24, x24, #0x1
   1e18c:	b	1e094 <mpfr_const_pi_internal@@Base+0x194>
   1e190:	mov	x27, #0x2                   	// #2
   1e194:	b	1df80 <mpfr_const_pi_internal@@Base+0x80>
   1e198:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1e19c:	lsl	x0, x0, #3
   1e1a0:	str	x0, [sp, #128]
   1e1a4:	bl	ccf0 <mpfr_allocate_func@plt>
   1e1a8:	str	x0, [sp, #136]
   1e1ac:	b	1dfc8 <mpfr_const_pi_internal@@Base+0xc8>
   1e1b0:	mov	w3, #0x0                   	// #0
   1e1b4:	mov	x2, x28
   1e1b8:	mov	x1, x19
   1e1bc:	mov	x0, x23
   1e1c0:	bl	c620 <mpfr_div@plt>
   1e1c4:	ldr	x1, [sp, #384]
   1e1c8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1e1cc:	cmp	x1, x0
   1e1d0:	b.le	1e258 <mpfr_const_pi_internal@@Base+0x358>
   1e1d4:	ldr	w0, [sp, #108]
   1e1d8:	cmp	w0, #0x0
   1e1dc:	ldr	x0, [sp, #96]
   1e1e0:	cinc	x3, x0, eq  // eq = none
   1e1e4:	sub	x2, x25, x24, lsl #1
   1e1e8:	ldr	x0, [sp, #368]
   1e1ec:	add	x1, x0, #0x3e
   1e1f0:	subs	x0, x0, #0x1
   1e1f4:	csel	x1, x1, x0, mi  // mi = first
   1e1f8:	asr	x1, x1, #6
   1e1fc:	sub	x2, x2, #0x8
   1e200:	add	x1, x1, #0x1
   1e204:	ldr	x0, [sp, #392]
   1e208:	bl	c370 <mpfr_round_p@plt>
   1e20c:	cbz	w0, 1e258 <mpfr_const_pi_internal@@Base+0x358>
   1e210:	ldr	w3, [sp, #376]
   1e214:	ldr	w2, [sp, #108]
   1e218:	add	x1, sp, #0x170
   1e21c:	ldr	x0, [sp, #112]
   1e220:	bl	c6a0 <mpfr_set4@plt>
   1e224:	mov	w19, w0
   1e228:	ldr	x1, [sp, #128]
   1e22c:	cbz	x1, 1e238 <mpfr_const_pi_internal@@Base+0x338>
   1e230:	ldr	x0, [sp, #136]
   1e234:	bl	cc20 <mpfr_free_func@plt>
   1e238:	mov	w0, w19
   1e23c:	ldp	x19, x20, [sp, #16]
   1e240:	ldp	x21, x22, [sp, #32]
   1e244:	ldp	x23, x24, [sp, #48]
   1e248:	ldp	x25, x26, [sp, #64]
   1e24c:	ldp	x27, x28, [sp, #80]
   1e250:	ldp	x29, x30, [sp], #432
   1e254:	ret
   1e258:	add	x25, x27, x25
   1e25c:	mov	x0, #0xfffffffffffffeff    	// #-257
   1e260:	movk	x0, #0x7fff, lsl #48
   1e264:	sub	x0, x0, x25
   1e268:	ldr	x1, [sp, #120]
   1e26c:	cmp	x0, x1
   1e270:	b.lt	1e320 <mpfr_const_pi_internal@@Base+0x420>  // b.tstop
   1e274:	ldr	x0, [sp, #120]
   1e278:	add	x25, x0, x25
   1e27c:	add	x0, x25, x25, lsr #63
   1e280:	asr	x0, x0, #1
   1e284:	str	x0, [sp, #120]
   1e288:	ldr	x1, [sp, #128]
   1e28c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1e290:	cmp	x25, x0
   1e294:	b.ge	1e338 <mpfr_const_pi_internal@@Base+0x438>  // b.tcont
   1e298:	add	x20, x25, #0x3e
   1e29c:	subs	x0, x25, #0x1
   1e2a0:	csel	x20, x20, x0, mi  // mi = first
   1e2a4:	asr	x20, x20, #6
   1e2a8:	add	x20, x20, #0x1
   1e2ac:	add	x0, x20, x20, lsl #2
   1e2b0:	lsl	x0, x0, #3
   1e2b4:	str	x0, [sp, #128]
   1e2b8:	cbnz	x1, 1e33c <mpfr_const_pi_internal@@Base+0x43c>
   1e2bc:	bl	ccf0 <mpfr_allocate_func@plt>
   1e2c0:	str	x0, [sp, #136]
   1e2c4:	str	x25, [sp, #400]
   1e2c8:	ldr	x1, [sp, #136]
   1e2cc:	str	x1, [sp, #424]
   1e2d0:	mov	w0, #0x1                   	// #1
   1e2d4:	str	w0, [sp, #408]
   1e2d8:	str	x25, [sp, #368]
   1e2dc:	add	x2, x1, x20, lsl #3
   1e2e0:	str	x2, [sp, #392]
   1e2e4:	str	w0, [sp, #376]
   1e2e8:	str	x25, [sp, #336]
   1e2ec:	add	x2, x1, x20, lsl #4
   1e2f0:	str	x2, [sp, #360]
   1e2f4:	str	w0, [sp, #344]
   1e2f8:	str	x25, [sp, #304]
   1e2fc:	add	x2, x20, x20, lsl #1
   1e300:	add	x2, x1, x2, lsl #3
   1e304:	str	x2, [sp, #328]
   1e308:	str	w0, [sp, #312]
   1e30c:	str	x25, [sp, #272]
   1e310:	add	x20, x1, x20, lsl #5
   1e314:	str	x20, [sp, #296]
   1e318:	str	w0, [sp, #280]
   1e31c:	b	1e03c <mpfr_const_pi_internal@@Base+0x13c>
   1e320:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   1e324:	add	x2, x2, #0x118
   1e328:	mov	w1, #0x6c                  	// #108
   1e32c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e330:	add	x0, x0, #0x748
   1e334:	bl	cb40 <mpfr_assert_fail@plt>
   1e338:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1e33c:	mov	x2, x0
   1e340:	ldr	x0, [sp, #136]
   1e344:	bl	c1c0 <mpfr_reallocate_func@plt>
   1e348:	str	x0, [sp, #136]
   1e34c:	b	1e2c4 <mpfr_const_pi_internal@@Base+0x3c4>

000000000001e350 <mpfr_const_pi@@Base>:
   1e350:	stp	x29, x30, [sp, #-16]!
   1e354:	mov	x29, sp
   1e358:	mov	x3, x0
   1e35c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e360:	ldr	x2, [x0, #2624]
   1e364:	add	x0, x0, #0xa40
   1e368:	blr	x2
   1e36c:	mov	w2, w1
   1e370:	mrs	x1, tpidr_el0
   1e374:	add	x1, x1, x0
   1e378:	mov	x0, x3
   1e37c:	bl	c380 <mpfr_cache@plt>
   1e380:	ldp	x29, x30, [sp], #16
   1e384:	ret

000000000001e388 <mpfr_pow_general@@Base>:
   1e388:	stp	x29, x30, [sp, #-352]!
   1e38c:	mov	x29, sp
   1e390:	stp	x19, x20, [sp, #16]
   1e394:	stp	x21, x22, [sp, #32]
   1e398:	stp	x23, x24, [sp, #48]
   1e39c:	stp	x25, x26, [sp, #64]
   1e3a0:	stp	x27, x28, [sp, #80]
   1e3a4:	mov	x22, x0
   1e3a8:	mov	x21, x2
   1e3ac:	mov	w23, w3
   1e3b0:	str	w4, [sp, #148]
   1e3b4:	str	x5, [sp, #136]
   1e3b8:	ldr	x24, [x0]
   1e3bc:	ldr	x0, [x1]
   1e3c0:	str	x0, [sp, #224]
   1e3c4:	mov	w0, #0x1                   	// #1
   1e3c8:	str	w0, [sp, #232]
   1e3cc:	ldr	x0, [x1, #16]
   1e3d0:	str	x0, [sp, #240]
   1e3d4:	ldr	x0, [x1, #24]
   1e3d8:	str	x0, [sp, #248]
   1e3dc:	ldr	w0, [x1, #8]
   1e3e0:	str	wzr, [sp, #144]
   1e3e4:	tbnz	w0, #31, 1e4d0 <mpfr_pow_general@@Base+0x148>
   1e3e8:	add	x20, x24, #0x9
   1e3ec:	cmp	x24, #0x1
   1e3f0:	b.eq	1e528 <mpfr_pow_general@@Base+0x1a0>  // b.none
   1e3f4:	b.le	1e510 <mpfr_pow_general@@Base+0x188>
   1e3f8:	sub	x0, x24, #0x1
   1e3fc:	clz	x1, x0
   1e400:	mov	w0, #0x40                  	// #64
   1e404:	sub	w0, w0, w1
   1e408:	sxtw	x0, w0
   1e40c:	add	x20, x20, x0
   1e410:	mov	x1, x20
   1e414:	add	x0, sp, #0x140
   1e418:	bl	ca80 <mpfr_init2@plt>
   1e41c:	mov	x0, #0x40                  	// #64
   1e420:	str	x0, [sp, #112]
   1e424:	str	wzr, [sp, #128]
   1e428:	mov	w26, #0x0                   	// #0
   1e42c:	add	x0, sp, #0xe0
   1e430:	str	x0, [sp, #96]
   1e434:	add	x19, sp, #0x140
   1e438:	add	x25, sp, #0x120
   1e43c:	add	x27, sp, #0x100
   1e440:	ldr	w2, [x21, #8]
   1e444:	lsr	w2, w2, #31
   1e448:	add	w2, w2, #0x2
   1e44c:	ldr	x1, [sp, #96]
   1e450:	mov	x0, x19
   1e454:	bl	c090 <mpfr_log@plt>
   1e458:	mov	w3, #0x2                   	// #2
   1e45c:	mov	x2, x19
   1e460:	mov	x1, x21
   1e464:	mov	x0, x19
   1e468:	bl	bd50 <mpfr_mul@plt>
   1e46c:	cbnz	w26, 1e530 <mpfr_pow_general@@Base+0x1a8>
   1e470:	ldr	x0, [sp, #336]
   1e474:	cmn	x0, #0x2
   1e478:	mov	x1, #0xfffffffffffffffe    	// #-2
   1e47c:	csel	x0, x0, x1, ge  // ge = tcont
   1e480:	add	x0, x0, #0x3
   1e484:	str	x0, [sp, #104]
   1e488:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e48c:	ldr	x1, [x0, #2576]
   1e490:	add	x0, x0, #0xa10
   1e494:	blr	x1
   1e498:	mrs	x1, tpidr_el0
   1e49c:	add	x28, x1, x0
   1e4a0:	str	wzr, [x1, x0]
   1e4a4:	mov	w2, #0x0                   	// #0
   1e4a8:	mov	x1, x19
   1e4ac:	mov	x0, x19
   1e4b0:	bl	c750 <mpfr_exp@plt>
   1e4b4:	ldr	w2, [x28]
   1e4b8:	ldr	x0, [sp, #336]
   1e4bc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1e4c0:	cmp	x0, x1
   1e4c4:	b.le	1e734 <mpfr_pow_general@@Base+0x3ac>
   1e4c8:	tbz	w2, #0, 1e5f0 <mpfr_pow_general@@Base+0x268>
   1e4cc:	b	1e744 <mpfr_pow_general@@Base+0x3bc>
   1e4d0:	mov	x0, x2
   1e4d4:	bl	cca0 <mpfr_odd_p@plt>
   1e4d8:	str	w0, [sp, #144]
   1e4dc:	cbz	w0, 1e3e8 <mpfr_pow_general@@Base+0x60>
   1e4e0:	cmp	w23, #0x2
   1e4e4:	b.eq	1e500 <mpfr_pow_general@@Base+0x178>  // b.none
   1e4e8:	mov	w0, #0x1                   	// #1
   1e4ec:	str	w0, [sp, #144]
   1e4f0:	cmp	w23, #0x3
   1e4f4:	b.ne	1e3e8 <mpfr_pow_general@@Base+0x60>  // b.any
   1e4f8:	mov	w23, #0x2                   	// #2
   1e4fc:	b	1e3e8 <mpfr_pow_general@@Base+0x60>
   1e500:	mov	w0, #0x1                   	// #1
   1e504:	str	w0, [sp, #144]
   1e508:	mov	w23, #0x3                   	// #3
   1e50c:	b	1e3e8 <mpfr_pow_general@@Base+0x60>
   1e510:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e514:	add	x2, x2, #0x758
   1e518:	mov	w1, #0x9f                  	// #159
   1e51c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e520:	add	x0, x0, #0x768
   1e524:	bl	cb40 <mpfr_assert_fail@plt>
   1e528:	mov	x0, #0x0                   	// #0
   1e52c:	b	1e40c <mpfr_pow_general@@Base+0x84>
   1e530:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e534:	ldr	x1, [x0, #2560]
   1e538:	add	x0, x0, #0xa00
   1e53c:	blr	x1
   1e540:	mrs	x1, tpidr_el0
   1e544:	mov	w2, #0x3                   	// #3
   1e548:	mov	x28, x1
   1e54c:	add	x1, x1, x0
   1e550:	mov	x0, x25
   1e554:	bl	c380 <mpfr_cache@plt>
   1e558:	mov	w3, #0x3                   	// #3
   1e55c:	mov	x2, x27
   1e560:	mov	x1, x25
   1e564:	mov	x0, x25
   1e568:	bl	bd50 <mpfr_mul@plt>
   1e56c:	mov	w3, #0x2                   	// #2
   1e570:	mov	x2, x25
   1e574:	mov	x1, x19
   1e578:	mov	x0, x19
   1e57c:	bl	bb70 <mpfr_sub@plt>
   1e580:	ldr	x0, [sp, #336]
   1e584:	cmn	x0, #0x2
   1e588:	mov	x1, #0xfffffffffffffffe    	// #-2
   1e58c:	csel	x0, x0, x1, ge  // ge = tcont
   1e590:	add	x0, x0, #0x3
   1e594:	ldr	x1, [sp, #272]
   1e598:	cmp	x1, x0
   1e59c:	csel	x0, x1, x0, ge  // ge = tcont
   1e5a0:	add	x0, x0, #0x1
   1e5a4:	str	x0, [sp, #104]
   1e5a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e5ac:	ldr	x1, [x0, #2576]
   1e5b0:	add	x0, x0, #0xa10
   1e5b4:	blr	x1
   1e5b8:	add	x1, x28, x0
   1e5bc:	str	x1, [sp, #120]
   1e5c0:	str	wzr, [x28, x0]
   1e5c4:	mov	w2, #0x0                   	// #0
   1e5c8:	mov	x1, x19
   1e5cc:	mov	x0, x19
   1e5d0:	bl	c750 <mpfr_exp@plt>
   1e5d4:	ldr	x1, [sp, #120]
   1e5d8:	ldr	w2, [x1]
   1e5dc:	ldr	x1, [sp, #336]
   1e5e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1e5e4:	cmp	x1, x0
   1e5e8:	b.le	1e71c <mpfr_pow_general@@Base+0x394>
   1e5ec:	tbnz	w2, #0, 1e71c <mpfr_pow_general@@Base+0x394>
   1e5f0:	cmp	w23, #0x0
   1e5f4:	cset	w0, eq  // eq = none
   1e5f8:	str	w0, [sp, #120]
   1e5fc:	cinc	x3, x24, eq  // eq = none
   1e600:	ldr	x0, [sp, #320]
   1e604:	add	x1, x0, #0x3e
   1e608:	subs	x0, x0, #0x1
   1e60c:	csel	x1, x1, x0, mi  // mi = first
   1e610:	asr	x1, x1, #6
   1e614:	ldr	x0, [sp, #104]
   1e618:	sub	x2, x20, x0
   1e61c:	add	x1, x1, #0x1
   1e620:	ldr	x0, [sp, #344]
   1e624:	bl	c370 <mpfr_round_p@plt>
   1e628:	cbz	w0, 1e8bc <mpfr_pow_general@@Base+0x534>
   1e62c:	ldr	w3, [sp, #328]
   1e630:	mov	w2, w23
   1e634:	add	x1, sp, #0x140
   1e638:	mov	x0, x22
   1e63c:	bl	c6a0 <mpfr_set4@plt>
   1e640:	mov	w19, w0
   1e644:	cbz	w26, 1e6e0 <mpfr_pow_general@@Base+0x358>
   1e648:	mov	w1, #0x0                   	// #0
   1e64c:	add	x0, sp, #0x100
   1e650:	bl	c190 <mpfr_get_si@plt>
   1e654:	mov	x20, x0
   1e658:	cmp	w19, #0x0
   1e65c:	ldr	w0, [sp, #120]
   1e660:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   1e664:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   1e668:	b.lt	1eac8 <mpfr_pow_general@@Base+0x740>  // b.tstop
   1e66c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e670:	ldr	x1, [x0, #2576]
   1e674:	add	x0, x0, #0xa10
   1e678:	blr	x1
   1e67c:	mrs	x1, tpidr_el0
   1e680:	str	wzr, [x1, x0]
   1e684:	mov	w3, w23
   1e688:	mov	x2, x20
   1e68c:	mov	x1, x22
   1e690:	mov	x0, x22
   1e694:	bl	bb90 <mpfr_mul_2si@plt>
   1e698:	mov	w20, w0
   1e69c:	cbz	w20, 1e6d0 <mpfr_pow_general@@Base+0x348>
   1e6a0:	mov	w19, w20
   1e6a4:	ldr	x3, [sp, #136]
   1e6a8:	cbz	x3, 1e6d0 <mpfr_pow_general@@Base+0x348>
   1e6ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e6b0:	ldr	x1, [x0, #2576]
   1e6b4:	add	x0, x0, #0xa10
   1e6b8:	blr	x1
   1e6bc:	ldr	w1, [x3]
   1e6c0:	mrs	x2, tpidr_el0
   1e6c4:	ldr	w0, [x2, x0]
   1e6c8:	orr	w1, w1, w0
   1e6cc:	str	w1, [x3]
   1e6d0:	mov	x2, #0x0                   	// #0
   1e6d4:	add	x1, sp, #0x100
   1e6d8:	add	x0, sp, #0x120
   1e6dc:	bl	c1b0 <mpfr_clears@plt>
   1e6e0:	add	x0, sp, #0x140
   1e6e4:	bl	c070 <mpfr_clear@plt>
   1e6e8:	ldr	w0, [sp, #144]
   1e6ec:	cbz	w0, 1e6fc <mpfr_pow_general@@Base+0x374>
   1e6f0:	mov	w0, #0xffffffff            	// #-1
   1e6f4:	str	w0, [x22, #8]
   1e6f8:	neg	w19, w19
   1e6fc:	mov	w0, w19
   1e700:	ldp	x19, x20, [sp, #16]
   1e704:	ldp	x21, x22, [sp, #32]
   1e708:	ldp	x23, x24, [sp, #48]
   1e70c:	ldp	x25, x26, [sp, #64]
   1e710:	ldp	x27, x28, [sp, #80]
   1e714:	ldp	x29, x30, [sp], #352
   1e718:	ret
   1e71c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e720:	add	x2, x2, #0x770
   1e724:	mov	w1, #0xcd                  	// #205
   1e728:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e72c:	add	x0, x0, #0x768
   1e730:	bl	cb40 <mpfr_assert_fail@plt>
   1e734:	mov	x1, #0x2                   	// #2
   1e738:	movk	x1, #0x8000, lsl #48
   1e73c:	cmp	x0, x1
   1e740:	b.eq	1e7bc <mpfr_pow_general@@Base+0x434>  // b.none
   1e744:	ldr	x0, [sp, #336]
   1e748:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1e74c:	cmp	x0, x1
   1e750:	b.eq	1e7d8 <mpfr_pow_general@@Base+0x450>  // b.none
   1e754:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1e758:	cmp	x0, x1
   1e75c:	b.eq	1e810 <mpfr_pow_general@@Base+0x488>  // b.none
   1e760:	cmp	x20, #0x3f
   1e764:	b.le	1e8a8 <mpfr_pow_general@@Base+0x520>
   1e768:	mov	x1, x20
   1e76c:	mov	x0, x25
   1e770:	bl	ca80 <mpfr_init2@plt>
   1e774:	mov	x1, #0x40                  	// #64
   1e778:	mov	x0, x27
   1e77c:	bl	ca80 <mpfr_init2@plt>
   1e780:	mov	w2, #0x0                   	// #0
   1e784:	ldr	x1, [sp, #96]
   1e788:	mov	x0, x27
   1e78c:	bl	c1d0 <mpfr_log2@plt>
   1e790:	mov	w3, #0x0                   	// #0
   1e794:	mov	x2, x27
   1e798:	mov	x1, x21
   1e79c:	mov	x0, x27
   1e7a0:	bl	bd50 <mpfr_mul@plt>
   1e7a4:	mov	w2, #0xffffffff            	// #-1
   1e7a8:	mov	x1, x27
   1e7ac:	mov	x0, x27
   1e7b0:	bl	c300 <mpfr_rint@plt>
   1e7b4:	mov	w26, #0x1                   	// #1
   1e7b8:	b	1e440 <mpfr_pow_general@@Base+0xb8>
   1e7bc:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e7c0:	add	x2, x2, #0x780
   1e7c4:	mov	w1, #0xce                  	// #206
   1e7c8:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1e7cc:	add	x0, x0, #0x768
   1e7d0:	bl	cb40 <mpfr_assert_fail@plt>
   1e7d4:	b	1e744 <mpfr_pow_general@@Base+0x3bc>
   1e7d8:	cmp	w23, #0x0
   1e7dc:	mov	w2, #0x1                   	// #1
   1e7e0:	csel	w1, w23, w2, ne  // ne = any
   1e7e4:	mov	x0, x22
   1e7e8:	bl	c3c0 <mpfr_underflow@plt>
   1e7ec:	mov	w19, w0
   1e7f0:	ldr	x0, [sp, #136]
   1e7f4:	cbz	x0, 1e6e0 <mpfr_pow_general@@Base+0x358>
   1e7f8:	mov	x2, x0
   1e7fc:	ldr	w0, [x0]
   1e800:	mov	w1, #0x9                   	// #9
   1e804:	orr	w0, w0, w1
   1e808:	str	w0, [x2]
   1e80c:	b	1e6e0 <mpfr_pow_general@@Base+0x358>
   1e810:	ldr	w2, [x21, #8]
   1e814:	mvn	w2, w2
   1e818:	lsr	w2, w2, #31
   1e81c:	add	w2, w2, #0x2
   1e820:	ldr	x1, [sp, #96]
   1e824:	mov	x0, x19
   1e828:	bl	c090 <mpfr_log@plt>
   1e82c:	mov	w3, #0x3                   	// #3
   1e830:	mov	x2, x19
   1e834:	mov	x1, x21
   1e838:	mov	x0, x19
   1e83c:	bl	bd50 <mpfr_mul@plt>
   1e840:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1e844:	ldr	x1, [x0, #2576]
   1e848:	add	x0, x0, #0xa10
   1e84c:	blr	x1
   1e850:	mrs	x1, tpidr_el0
   1e854:	add	x26, x1, x0
   1e858:	str	wzr, [x1, x0]
   1e85c:	mov	w2, #0x3                   	// #3
   1e860:	mov	x1, x19
   1e864:	mov	x0, x19
   1e868:	bl	c750 <mpfr_exp@plt>
   1e86c:	ldr	w0, [x26]
   1e870:	tbz	w0, #1, 1e760 <mpfr_pow_general@@Base+0x3d8>
   1e874:	mov	w2, #0x1                   	// #1
   1e878:	mov	w1, w23
   1e87c:	mov	x0, x22
   1e880:	bl	bf40 <mpfr_overflow@plt>
   1e884:	mov	w19, w0
   1e888:	ldr	x0, [sp, #136]
   1e88c:	cbz	x0, 1e6e0 <mpfr_pow_general@@Base+0x358>
   1e890:	mov	x2, x0
   1e894:	ldr	w0, [x0]
   1e898:	mov	w1, #0xa                   	// #10
   1e89c:	orr	w0, w0, w1
   1e8a0:	str	w0, [x2]
   1e8a4:	b	1e6e0 <mpfr_pow_general@@Base+0x358>
   1e8a8:	mov	x1, #0x40                  	// #64
   1e8ac:	mov	x0, x19
   1e8b0:	bl	bed0 <mpfr_set_prec@plt>
   1e8b4:	mov	x20, #0x40                  	// #64
   1e8b8:	b	1e768 <mpfr_pow_general@@Base+0x3e0>
   1e8bc:	ldr	w0, [sp, #128]
   1e8c0:	ldr	w1, [sp, #148]
   1e8c4:	orr	w0, w0, w1
   1e8c8:	cbz	w0, 1e918 <mpfr_pow_general@@Base+0x590>
   1e8cc:	mov	x0, #0xfffffffffffffeff    	// #-257
   1e8d0:	movk	x0, #0x7fff, lsl #48
   1e8d4:	sub	x0, x0, x20
   1e8d8:	ldr	x1, [sp, #112]
   1e8dc:	cmp	x0, x1
   1e8e0:	b.lt	1eab0 <mpfr_pow_general@@Base+0x728>  // b.tstop
   1e8e4:	ldr	x0, [sp, #112]
   1e8e8:	add	x20, x20, x0
   1e8ec:	add	x0, x20, x20, lsr #63
   1e8f0:	asr	x0, x0, #1
   1e8f4:	str	x0, [sp, #112]
   1e8f8:	mov	x1, x20
   1e8fc:	mov	x0, x19
   1e900:	bl	bed0 <mpfr_set_prec@plt>
   1e904:	cbz	w26, 1e440 <mpfr_pow_general@@Base+0xb8>
   1e908:	mov	x1, x20
   1e90c:	mov	x0, x25
   1e910:	bl	bed0 <mpfr_set_prec@plt>
   1e914:	b	1e440 <mpfr_pow_general@@Base+0xb8>
   1e918:	ldr	w0, [x21, #8]
   1e91c:	tbnz	w0, #31, 1eb68 <mpfr_pow_general@@Base+0x7e0>
   1e920:	add	x28, sp, #0xb0
   1e924:	mov	x0, x28
   1e928:	bl	bf90 <mpfr_mpz_init@plt>
   1e92c:	mov	x1, x21
   1e930:	mov	x0, x28
   1e934:	bl	cac0 <mpfr_get_z_2exp@plt>
   1e938:	str	x0, [sp, #104]
   1e93c:	mov	x1, #0x0                   	// #0
   1e940:	mov	x0, x28
   1e944:	bl	ba90 <__gmpz_scan1@plt>
   1e948:	str	x0, [sp, #128]
   1e94c:	mov	x2, x0
   1e950:	mov	x1, x28
   1e954:	mov	x0, x28
   1e958:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1e95c:	ldr	x1, [sp, #104]
   1e960:	ldr	x0, [sp, #128]
   1e964:	add	x0, x1, x0
   1e968:	str	x0, [sp, #104]
   1e96c:	add	x28, sp, #0xa0
   1e970:	mov	x0, x28
   1e974:	bl	bf90 <mpfr_mpz_init@plt>
   1e978:	ldr	x1, [sp, #96]
   1e97c:	mov	x0, x28
   1e980:	bl	cac0 <mpfr_get_z_2exp@plt>
   1e984:	str	x0, [sp, #128]
   1e988:	mov	x1, #0x0                   	// #0
   1e98c:	mov	x0, x28
   1e990:	bl	ba90 <__gmpz_scan1@plt>
   1e994:	str	x0, [sp, #152]
   1e998:	mov	x2, x0
   1e99c:	mov	x1, x28
   1e9a0:	mov	x0, x28
   1e9a4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1e9a8:	ldr	x1, [sp, #128]
   1e9ac:	ldr	x0, [sp, #152]
   1e9b0:	add	x28, x1, x0
   1e9b4:	add	x0, sp, #0xa0
   1e9b8:	str	x0, [sp, #128]
   1e9bc:	b	1ea10 <mpfr_pow_general@@Base+0x688>
   1e9c0:	mov	x2, #0x1                   	// #1
   1e9c4:	ldr	x0, [sp, #128]
   1e9c8:	mov	x1, x0
   1e9cc:	bl	c200 <__gmpz_mul_2exp@plt>
   1e9d0:	sub	x28, x28, #0x1
   1e9d4:	ldrsw	x1, [sp, #164]
   1e9d8:	cmp	x1, #0x0
   1e9dc:	b.le	1ea18 <mpfr_pow_general@@Base+0x690>
   1e9e0:	ldr	x0, [sp, #168]
   1e9e4:	bl	ca40 <__gmpn_perfect_square_p@plt>
   1e9e8:	cbz	w0, 1eb74 <mpfr_pow_general@@Base+0x7ec>
   1e9ec:	ldr	x0, [sp, #128]
   1e9f0:	mov	x1, x0
   1e9f4:	bl	bc60 <__gmpz_sqrt@plt>
   1e9f8:	add	x28, x28, x28, lsr #63
   1e9fc:	asr	x28, x28, #1
   1ea00:	ldr	x0, [sp, #104]
   1ea04:	adds	x0, x0, #0x1
   1ea08:	str	x0, [sp, #104]
   1ea0c:	b.eq	1ea20 <mpfr_pow_general@@Base+0x698>  // b.none
   1ea10:	tbz	w28, #0, 1e9d4 <mpfr_pow_general@@Base+0x64c>
   1ea14:	b	1e9c0 <mpfr_pow_general@@Base+0x638>
   1ea18:	cset	w0, eq  // eq = none
   1ea1c:	b	1e9e8 <mpfr_pow_general@@Base+0x660>
   1ea20:	ldr	w0, [sp, #164]
   1ea24:	cmp	w0, #0x0
   1ea28:	cneg	w0, w0, lt  // lt = tstop
   1ea2c:	ldr	x1, [sp, #168]
   1ea30:	add	x1, x1, w0, sxtw #3
   1ea34:	ldur	x1, [x1, #-8]
   1ea38:	sbfiz	x0, x0, #6, #32
   1ea3c:	clz	x1, x1
   1ea40:	add	x20, sp, #0xc0
   1ea44:	sub	x1, x0, x1
   1ea48:	mov	x0, x20
   1ea4c:	bl	ca80 <mpfr_init2@plt>
   1ea50:	add	x21, sp, #0xa0
   1ea54:	mov	w2, #0x0                   	// #0
   1ea58:	mov	x1, x21
   1ea5c:	mov	x0, x20
   1ea60:	bl	c240 <mpfr_set_z@plt>
   1ea64:	mov	w3, #0x0                   	// #0
   1ea68:	mov	x2, x28
   1ea6c:	mov	x1, x20
   1ea70:	mov	x0, x20
   1ea74:	bl	bb90 <mpfr_mul_2si@plt>
   1ea78:	add	x24, sp, #0xb0
   1ea7c:	mov	w3, w23
   1ea80:	mov	x2, x24
   1ea84:	mov	x1, x20
   1ea88:	mov	x0, x22
   1ea8c:	bl	bef0 <mpfr_pow_z@plt>
   1ea90:	mov	w19, w0
   1ea94:	mov	x0, x20
   1ea98:	bl	c070 <mpfr_clear@plt>
   1ea9c:	mov	x0, x21
   1eaa0:	bl	c170 <mpfr_mpz_clear@plt>
   1eaa4:	mov	x0, x24
   1eaa8:	bl	c170 <mpfr_mpz_clear@plt>
   1eaac:	b	1e644 <mpfr_pow_general@@Base+0x2bc>
   1eab0:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1eab4:	add	x2, x2, #0x7c0
   1eab8:	mov	w1, #0x113                 	// #275
   1eabc:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1eac0:	add	x0, x0, #0x768
   1eac4:	bl	cb40 <mpfr_assert_fail@plt>
   1eac8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1eacc:	ldr	x1, [x0, #2512]
   1ead0:	add	x0, x0, #0x9d0
   1ead4:	blr	x1
   1ead8:	mrs	x1, tpidr_el0
   1eadc:	ldr	x0, [x1, x0]
   1eae0:	sub	x0, x0, #0x1
   1eae4:	sub	x0, x0, x20
   1eae8:	ldr	x1, [x22, #16]
   1eaec:	cmp	x1, x0
   1eaf0:	b.ne	1e66c <mpfr_pow_general@@Base+0x2e4>  // b.any
   1eaf4:	mov	x0, x22
   1eaf8:	bl	bf00 <mpfr_powerof2_raw@plt>
   1eafc:	cbz	w0, 1e66c <mpfr_pow_general@@Base+0x2e4>
   1eb00:	ldr	x1, [x22]
   1eb04:	cmp	x1, #0x1
   1eb08:	b.le	1eb18 <mpfr_pow_general@@Base+0x790>
   1eb0c:	mov	x0, x22
   1eb10:	bl	c120 <mpfr_nextabove@plt>
   1eb14:	b	1e66c <mpfr_pow_general@@Base+0x2e4>
   1eb18:	add	x21, sp, #0xc0
   1eb1c:	add	x1, x1, #0x1
   1eb20:	mov	x0, x21
   1eb24:	bl	ca80 <mpfr_init2@plt>
   1eb28:	ldr	w3, [x22, #8]
   1eb2c:	mov	w2, #0x1                   	// #1
   1eb30:	mov	x1, x22
   1eb34:	mov	x0, x21
   1eb38:	bl	c6a0 <mpfr_set4@plt>
   1eb3c:	mov	x0, x21
   1eb40:	bl	c120 <mpfr_nextabove@plt>
   1eb44:	mov	w3, #0x0                   	// #0
   1eb48:	mov	x2, x20
   1eb4c:	mov	x1, x21
   1eb50:	mov	x0, x22
   1eb54:	bl	bb90 <mpfr_mul_2si@plt>
   1eb58:	mov	w20, w0
   1eb5c:	mov	x0, x21
   1eb60:	bl	c070 <mpfr_clear@plt>
   1eb64:	b	1e69c <mpfr_pow_general@@Base+0x314>
   1eb68:	mov	w0, #0x1                   	// #1
   1eb6c:	str	w0, [sp, #128]
   1eb70:	b	1e8cc <mpfr_pow_general@@Base+0x544>
   1eb74:	add	x0, sp, #0xa0
   1eb78:	bl	c170 <mpfr_mpz_clear@plt>
   1eb7c:	add	x0, sp, #0xb0
   1eb80:	bl	c170 <mpfr_mpz_clear@plt>
   1eb84:	mov	w0, #0x1                   	// #1
   1eb88:	str	w0, [sp, #128]
   1eb8c:	b	1e8cc <mpfr_pow_general@@Base+0x544>

000000000001eb90 <mpfr_pow@@Base>:
   1eb90:	stp	x29, x30, [sp, #-160]!
   1eb94:	mov	x29, sp
   1eb98:	stp	x19, x20, [sp, #16]
   1eb9c:	stp	x21, x22, [sp, #32]
   1eba0:	stp	x23, x24, [sp, #48]
   1eba4:	mov	x21, x0
   1eba8:	mov	x19, x1
   1ebac:	mov	x20, x2
   1ebb0:	mov	w22, w3
   1ebb4:	ldr	x23, [x1, #16]
   1ebb8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1ebbc:	cmp	x23, x0
   1ebc0:	b.le	1edec <mpfr_pow@@Base+0x25c>
   1ebc4:	ldr	x0, [x2, #16]
   1ebc8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1ebcc:	cmp	x0, x1
   1ebd0:	b.le	1f5b8 <mpfr_pow@@Base+0xa28>
   1ebd4:	mov	x0, x2
   1ebd8:	bl	c160 <mpfr_integer_p@plt>
   1ebdc:	mov	w23, w0
   1ebe0:	ldr	w0, [x19, #8]
   1ebe4:	cmp	w0, #0x0
   1ebe8:	ccmp	w23, #0x0, #0x0, lt  // lt = tstop
   1ebec:	b.eq	1f010 <mpfr_pow@@Base+0x480>  // b.none
   1ebf0:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   1ebf4:	ldr	x1, [x1, #3928]
   1ebf8:	mov	x0, x19
   1ebfc:	bl	c9b0 <mpfr_cmpabs@plt>
   1ec00:	mov	w24, w0
   1ec04:	cbz	w0, 1f048 <mpfr_pow@@Base+0x4b8>
   1ec08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ec0c:	ldr	x1, [x0, #2544]
   1ec10:	add	x0, x0, #0x9f0
   1ec14:	blr	x1
   1ec18:	mrs	x1, tpidr_el0
   1ec1c:	ldr	x1, [x1, x0]
   1ec20:	mov	x0, #0x3ffffffe            	// #1073741822
   1ec24:	cmp	x1, x0
   1ec28:	b.le	1ec74 <mpfr_pow@@Base+0xe4>
   1ec2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ec30:	ldr	x2, [x0, #2512]
   1ec34:	add	x0, x0, #0x9d0
   1ec38:	blr	x2
   1ec3c:	mrs	x2, tpidr_el0
   1ec40:	ldr	x2, [x2, x0]
   1ec44:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   1ec48:	cmp	x2, x0
   1ec4c:	b.gt	1ec74 <mpfr_pow@@Base+0xe4>
   1ec50:	ldr	x0, [x20, #16]
   1ec54:	cmp	x0, #0xf
   1ec58:	b.gt	1ec74 <mpfr_pow@@Base+0xe4>
   1ec5c:	ldr	x0, [x19, #16]
   1ec60:	add	x0, x0, #0x7, lsl #12
   1ec64:	add	x0, x0, #0xffe
   1ec68:	mov	x2, #0xfffd                	// #65533
   1ec6c:	cmp	x0, x2
   1ec70:	b.ls	1f61c <mpfr_pow@@Base+0xa8c>  // b.plast
   1ec74:	ldr	w0, [x20, #8]
   1ec78:	mul	w0, w24, w0
   1ec7c:	cmp	w0, #0x0
   1ec80:	b.gt	1f098 <mpfr_pow@@Base+0x508>
   1ec84:	ldr	w0, [x20, #8]
   1ec88:	tbnz	w0, #31, 1f22c <mpfr_pow@@Base+0x69c>
   1ec8c:	ldr	x0, [x19, #16]
   1ec90:	lsr	x0, x0, #63
   1ec94:	and	w0, w0, #0xff
   1ec98:	cbz	w0, 1f66c <mpfr_pow@@Base+0xadc>
   1ec9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1eca0:	ldr	x1, [x0, #2576]
   1eca4:	add	x0, x0, #0xa10
   1eca8:	blr	x1
   1ecac:	mrs	x1, tpidr_el0
   1ecb0:	ldr	w0, [x1, x0]
   1ecb4:	str	w0, [sp, #136]
   1ecb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ecbc:	ldr	x2, [x0, #2512]
   1ecc0:	add	x0, x0, #0x9d0
   1ecc4:	blr	x2
   1ecc8:	add	x2, x1, x0
   1eccc:	ldr	x0, [x1, x0]
   1ecd0:	str	x0, [sp, #144]
   1ecd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ecd8:	ldr	x3, [x0, #2544]
   1ecdc:	add	x0, x0, #0x9f0
   1ece0:	blr	x3
   1ece4:	ldr	x3, [x1, x0]
   1ece8:	str	x3, [sp, #152]
   1ecec:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1ecf0:	str	x3, [x2]
   1ecf4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1ecf8:	str	x2, [x1, x0]
   1ecfc:	mov	x0, #0x40                  	// #64
   1ed00:	str	x0, [sp, #104]
   1ed04:	add	x0, sp, #0x60
   1ed08:	str	x0, [sp, #128]
   1ed0c:	mov	w0, #0x1                   	// #1
   1ed10:	str	w0, [sp, #112]
   1ed14:	mov	w3, #0x0                   	// #0
   1ed18:	mov	x2, #0x0                   	// #0
   1ed1c:	ldr	x1, [x19, #16]
   1ed20:	add	x0, sp, #0x68
   1ed24:	bl	ba80 <mpfr_set_si_2exp@plt>
   1ed28:	cbnz	w0, 1f23c <mpfr_pow@@Base+0x6ac>
   1ed2c:	ldr	w0, [x20, #8]
   1ed30:	tbnz	w0, #31, 1f25c <mpfr_pow@@Base+0x6cc>
   1ed34:	add	x0, sp, #0x68
   1ed38:	mov	w3, #0x2                   	// #2
   1ed3c:	mov	x2, x20
   1ed40:	mov	x1, x0
   1ed44:	bl	bd50 <mpfr_mul@plt>
   1ed48:	ldr	w0, [x20, #8]
   1ed4c:	tbnz	w0, #31, 1f294 <mpfr_pow@@Base+0x704>
   1ed50:	mov	w1, #0x2                   	// #2
   1ed54:	add	x0, sp, #0x68
   1ed58:	bl	c190 <mpfr_get_si@plt>
   1ed5c:	mov	x3, x0
   1ed60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ed64:	ldr	x1, [x0, #2576]
   1ed68:	add	x0, x0, #0xa10
   1ed6c:	blr	x1
   1ed70:	mrs	x1, tpidr_el0
   1ed74:	ldr	w2, [sp, #136]
   1ed78:	str	w2, [x1, x0]
   1ed7c:	ldr	x2, [sp, #144]
   1ed80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ed84:	ldr	x4, [x0, #2512]
   1ed88:	add	x0, x0, #0x9d0
   1ed8c:	blr	x4
   1ed90:	str	x2, [x1, x0]
   1ed94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ed98:	ldr	x4, [x0, #2544]
   1ed9c:	add	x0, x0, #0x9f0
   1eda0:	blr	x4
   1eda4:	ldr	x4, [sp, #152]
   1eda8:	str	x4, [x1, x0]
   1edac:	cbz	w22, 1f660 <mpfr_pow@@Base+0xad0>
   1edb0:	sub	x2, x2, #0x1
   1edb4:	cmp	x3, x2
   1edb8:	b.gt	1f66c <mpfr_pow@@Base+0xadc>
   1edbc:	ldr	w0, [x19, #8]
   1edc0:	tbz	w0, #31, 1f2a8 <mpfr_pow@@Base+0x718>
   1edc4:	mov	x0, x20
   1edc8:	bl	cca0 <mpfr_odd_p@plt>
   1edcc:	mov	w2, #0x1                   	// #1
   1edd0:	cmp	w0, #0x0
   1edd4:	cneg	w2, w2, ne  // ne = any
   1edd8:	mov	w1, w22
   1eddc:	mov	x0, x21
   1ede0:	bl	c3c0 <mpfr_underflow@plt>
   1ede4:	mov	w24, w0
   1ede8:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1edec:	ldr	x0, [x2, #16]
   1edf0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1edf4:	cmp	x0, x1
   1edf8:	b.eq	1ee3c <mpfr_pow@@Base+0x2ac>  // b.none
   1edfc:	mov	x1, #0x2                   	// #2
   1ee00:	movk	x1, #0x8000, lsl #48
   1ee04:	cmp	x23, x1
   1ee08:	b.ne	1f5c4 <mpfr_pow@@Base+0xa34>  // b.any
   1ee0c:	str	x1, [x21, #16]
   1ee10:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ee14:	ldr	x1, [x0, #2576]
   1ee18:	add	x0, x0, #0xa10
   1ee1c:	blr	x1
   1ee20:	mrs	x1, tpidr_el0
   1ee24:	add	x0, x1, x0
   1ee28:	ldr	w1, [x0]
   1ee2c:	orr	w1, w1, #0x4
   1ee30:	str	w1, [x0]
   1ee34:	mov	w24, #0x0                   	// #0
   1ee38:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ee3c:	mov	w3, w22
   1ee40:	mov	x2, #0x0                   	// #0
   1ee44:	mov	x1, #0x1                   	// #1
   1ee48:	mov	x0, x21
   1ee4c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1ee50:	mov	w24, w0
   1ee54:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ee58:	mov	x2, #0x0                   	// #0
   1ee5c:	mov	x1, #0x1                   	// #1
   1ee60:	mov	x0, x19
   1ee64:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   1ee68:	cbz	w0, 1eea4 <mpfr_pow@@Base+0x314>
   1ee6c:	mov	x0, #0x2                   	// #2
   1ee70:	movk	x0, #0x8000, lsl #48
   1ee74:	str	x0, [x21, #16]
   1ee78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ee7c:	ldr	x1, [x0, #2576]
   1ee80:	add	x0, x0, #0xa10
   1ee84:	blr	x1
   1ee88:	mrs	x1, tpidr_el0
   1ee8c:	add	x0, x1, x0
   1ee90:	ldr	w1, [x0]
   1ee94:	orr	w1, w1, #0x4
   1ee98:	str	w1, [x0]
   1ee9c:	mov	w24, #0x0                   	// #0
   1eea0:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1eea4:	mov	w3, w22
   1eea8:	mov	x2, #0x0                   	// #0
   1eeac:	mov	x1, #0x1                   	// #1
   1eeb0:	mov	x0, x21
   1eeb4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1eeb8:	mov	w24, w0
   1eebc:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1eec0:	cmp	x23, x1
   1eec4:	b.eq	1ef04 <mpfr_pow@@Base+0x374>  // b.none
   1eec8:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   1eecc:	ldr	x1, [x1, #3928]
   1eed0:	mov	x0, x19
   1eed4:	bl	c9b0 <mpfr_cmpabs@plt>
   1eed8:	ldr	w1, [x20, #8]
   1eedc:	mul	w0, w0, w1
   1eee0:	mov	w1, #0x1                   	// #1
   1eee4:	str	w1, [x21, #8]
   1eee8:	cmp	w0, #0x0
   1eeec:	b.gt	1ef28 <mpfr_pow@@Base+0x398>
   1eef0:	tbz	w0, #31, 1ef38 <mpfr_pow@@Base+0x3a8>
   1eef4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1eef8:	str	x0, [x21, #16]
   1eefc:	mov	w24, #0x0                   	// #0
   1ef00:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ef04:	ldr	w0, [x20, #8]
   1ef08:	cmp	w0, #0x0
   1ef0c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ef10:	csel	x23, x23, x0, gt
   1ef14:	str	x23, [x21, #16]
   1ef18:	mov	w0, #0x1                   	// #1
   1ef1c:	str	w0, [x21, #8]
   1ef20:	mov	w24, #0x0                   	// #0
   1ef24:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ef28:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1ef2c:	str	x0, [x21, #16]
   1ef30:	mov	w24, #0x0                   	// #0
   1ef34:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ef38:	mov	w3, w22
   1ef3c:	mov	x2, #0x0                   	// #0
   1ef40:	mov	x1, #0x1                   	// #1
   1ef44:	mov	x0, x21
   1ef48:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1ef4c:	mov	w24, w0
   1ef50:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ef54:	ldr	w0, [x19, #8]
   1ef58:	tbnz	w0, #31, 1ef84 <mpfr_pow@@Base+0x3f4>
   1ef5c:	ldr	w0, [x20, #8]
   1ef60:	cmp	w0, #0x0
   1ef64:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1ef68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ef6c:	csel	x0, x0, x1, le
   1ef70:	str	x0, [x21, #16]
   1ef74:	mov	w0, #0x1                   	// #1
   1ef78:	str	w0, [x21, #8]
   1ef7c:	mov	w24, #0x0                   	// #0
   1ef80:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1ef84:	mov	x0, x20
   1ef88:	bl	cca0 <mpfr_odd_p@plt>
   1ef8c:	ldr	w1, [x20, #8]
   1ef90:	cmp	w1, #0x0
   1ef94:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1ef98:	csel	x23, x23, x1, gt
   1ef9c:	str	x23, [x21, #16]
   1efa0:	cbz	w0, 1ef74 <mpfr_pow@@Base+0x3e4>
   1efa4:	mov	w0, #0xffffffff            	// #-1
   1efa8:	str	w0, [x21, #8]
   1efac:	mov	w24, #0x0                   	// #0
   1efb0:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1efb4:	mov	x0, x20
   1efb8:	bl	cca0 <mpfr_odd_p@plt>
   1efbc:	cmp	w0, #0x0
   1efc0:	cset	w24, ne  // ne = any
   1efc4:	ldr	w0, [x20, #8]
   1efc8:	tbz	w0, #31, 1f600 <mpfr_pow@@Base+0xa70>
   1efcc:	b	1efd4 <mpfr_pow@@Base+0x444>
   1efd0:	mov	w24, #0x0                   	// #0
   1efd4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1efd8:	str	x0, [x21, #16]
   1efdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1efe0:	ldr	x1, [x0, #2576]
   1efe4:	add	x0, x0, #0xa10
   1efe8:	blr	x1
   1efec:	mrs	x1, tpidr_el0
   1eff0:	add	x0, x1, x0
   1eff4:	ldr	w1, [x0]
   1eff8:	orr	w1, w1, #0x20
   1effc:	str	w1, [x0]
   1f000:	b	1f608 <mpfr_pow@@Base+0xa78>
   1f004:	mov	w0, #0x1                   	// #1
   1f008:	str	w0, [x21, #8]
   1f00c:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f010:	mov	x0, #0x2                   	// #2
   1f014:	movk	x0, #0x8000, lsl #48
   1f018:	str	x0, [x21, #16]
   1f01c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f020:	ldr	x1, [x0, #2576]
   1f024:	add	x0, x0, #0xa10
   1f028:	blr	x1
   1f02c:	mrs	x1, tpidr_el0
   1f030:	add	x0, x1, x0
   1f034:	ldr	w1, [x0]
   1f038:	orr	w1, w1, #0x4
   1f03c:	str	w1, [x0]
   1f040:	mov	w24, #0x0                   	// #0
   1f044:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f048:	ldr	w0, [x19, #8]
   1f04c:	mov	x1, #0x1                   	// #1
   1f050:	tbnz	w0, #31, 1f080 <mpfr_pow@@Base+0x4f0>
   1f054:	mov	w3, w22
   1f058:	mov	x2, #0x0                   	// #0
   1f05c:	mov	x0, x21
   1f060:	bl	ba80 <mpfr_set_si_2exp@plt>
   1f064:	mov	w24, w0
   1f068:	mov	w0, w24
   1f06c:	ldp	x19, x20, [sp, #16]
   1f070:	ldp	x21, x22, [sp, #32]
   1f074:	ldp	x23, x24, [sp, #48]
   1f078:	ldp	x29, x30, [sp], #160
   1f07c:	ret
   1f080:	mov	x0, x20
   1f084:	bl	cca0 <mpfr_odd_p@plt>
   1f088:	mov	x1, #0x1                   	// #1
   1f08c:	cmp	w0, #0x0
   1f090:	cneg	x1, x1, ne  // ne = any
   1f094:	b	1f054 <mpfr_pow@@Base+0x4c4>
   1f098:	stp	x25, x26, [sp, #64]
   1f09c:	stp	x27, x28, [sp, #80]
   1f0a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f0a4:	ldr	x2, [x0, #2576]
   1f0a8:	add	x0, x0, #0xa10
   1f0ac:	blr	x2
   1f0b0:	mrs	x2, tpidr_el0
   1f0b4:	ldr	w0, [x2, x0]
   1f0b8:	str	w0, [sp, #136]
   1f0bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f0c0:	ldr	x3, [x0, #2512]
   1f0c4:	add	x0, x0, #0x9d0
   1f0c8:	blr	x3
   1f0cc:	ldr	x3, [x2, x0]
   1f0d0:	str	x3, [sp, #144]
   1f0d4:	str	x1, [sp, #152]
   1f0d8:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   1f0dc:	str	x1, [x2, x0]
   1f0e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f0e4:	ldr	x1, [x0, #2544]
   1f0e8:	add	x0, x0, #0x9f0
   1f0ec:	blr	x1
   1f0f0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1f0f4:	str	x1, [x2, x0]
   1f0f8:	mov	x1, #0x35                  	// #53
   1f0fc:	add	x0, sp, #0x68
   1f100:	bl	ca80 <mpfr_init2@plt>
   1f104:	ldr	w0, [x19, #8]
   1f108:	cmp	w0, #0x0
   1f10c:	b.gt	1f1d4 <mpfr_pow@@Base+0x644>
   1f110:	cmp	w24, #0x0
   1f114:	cset	w2, le
   1f118:	add	x25, sp, #0x68
   1f11c:	add	w2, w2, #0x1
   1f120:	mov	x1, x19
   1f124:	mov	x0, x25
   1f128:	bl	bd70 <mpfr_neg@plt>
   1f12c:	mov	w2, #0x1                   	// #1
   1f130:	mov	x1, x25
   1f134:	mov	x0, x25
   1f138:	bl	c1d0 <mpfr_log2@plt>
   1f13c:	add	x25, sp, #0x68
   1f140:	mov	w3, #0x1                   	// #1
   1f144:	mov	x2, x20
   1f148:	mov	x1, x25
   1f14c:	mov	x0, x25
   1f150:	bl	bd50 <mpfr_mul@plt>
   1f154:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f158:	ldr	x1, [x0, #2544]
   1f15c:	add	x0, x0, #0x9f0
   1f160:	blr	x1
   1f164:	mrs	x26, tpidr_el0
   1f168:	add	x28, x26, x0
   1f16c:	mov	x2, #0x0                   	// #0
   1f170:	ldr	x1, [x26, x0]
   1f174:	mov	x0, x25
   1f178:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1f17c:	mov	w27, w0
   1f180:	mov	x0, x25
   1f184:	bl	c070 <mpfr_clear@plt>
   1f188:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f18c:	ldr	x1, [x0, #2576]
   1f190:	add	x0, x0, #0xa10
   1f194:	blr	x1
   1f198:	ldr	w1, [sp, #136]
   1f19c:	str	w1, [x26, x0]
   1f1a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f1a4:	ldr	x1, [x0, #2512]
   1f1a8:	add	x0, x0, #0x9d0
   1f1ac:	blr	x1
   1f1b0:	ldr	x1, [sp, #144]
   1f1b4:	str	x1, [x26, x0]
   1f1b8:	ldr	x0, [sp, #152]
   1f1bc:	str	x0, [x28]
   1f1c0:	cmp	w27, #0x0
   1f1c4:	b.gt	1f1e8 <mpfr_pow@@Base+0x658>
   1f1c8:	ldp	x25, x26, [sp, #64]
   1f1cc:	ldp	x27, x28, [sp, #80]
   1f1d0:	b	1ec84 <mpfr_pow@@Base+0xf4>
   1f1d4:	mov	w2, #0x1                   	// #1
   1f1d8:	mov	x1, x19
   1f1dc:	add	x0, sp, #0x68
   1f1e0:	bl	c1d0 <mpfr_log2@plt>
   1f1e4:	b	1f13c <mpfr_pow@@Base+0x5ac>
   1f1e8:	ldr	w0, [x19, #8]
   1f1ec:	tbz	w0, #31, 1f224 <mpfr_pow@@Base+0x694>
   1f1f0:	mov	x0, x20
   1f1f4:	bl	cca0 <mpfr_odd_p@plt>
   1f1f8:	mov	w1, #0xffffffff            	// #-1
   1f1fc:	cmp	w0, #0x0
   1f200:	cneg	w1, w1, eq  // eq = none
   1f204:	mov	w2, w1
   1f208:	mov	w1, w22
   1f20c:	mov	x0, x21
   1f210:	bl	bf40 <mpfr_overflow@plt>
   1f214:	mov	w24, w0
   1f218:	ldp	x25, x26, [sp, #64]
   1f21c:	ldp	x27, x28, [sp, #80]
   1f220:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f224:	mov	w1, #0x1                   	// #1
   1f228:	b	1f204 <mpfr_pow@@Base+0x674>
   1f22c:	ldr	x0, [x19, #16]
   1f230:	cmp	x0, #0x1
   1f234:	cset	w0, gt
   1f238:	b	1ec98 <mpfr_pow@@Base+0x108>
   1f23c:	stp	x25, x26, [sp, #64]
   1f240:	stp	x27, x28, [sp, #80]
   1f244:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f248:	add	x2, x2, #0x808
   1f24c:	mov	w1, #0x24b                 	// #587
   1f250:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f254:	add	x0, x0, #0x768
   1f258:	bl	cb40 <mpfr_assert_fail@plt>
   1f25c:	add	x0, sp, #0x68
   1f260:	mov	w3, #0x0                   	// #0
   1f264:	mov	x2, #0x1                   	// #1
   1f268:	mov	x1, x0
   1f26c:	bl	c530 <mpfr_sub_ui@plt>
   1f270:	cbz	w0, 1ed34 <mpfr_pow@@Base+0x1a4>
   1f274:	stp	x25, x26, [sp, #64]
   1f278:	stp	x27, x28, [sp, #80]
   1f27c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f280:	add	x2, x2, #0x808
   1f284:	mov	w1, #0x24f                 	// #591
   1f288:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f28c:	add	x0, x0, #0x768
   1f290:	bl	cb40 <mpfr_assert_fail@plt>
   1f294:	add	x0, sp, #0x68
   1f298:	bl	c120 <mpfr_nextabove@plt>
   1f29c:	b	1ed50 <mpfr_pow@@Base+0x1c0>
   1f2a0:	mov	w22, #0x1                   	// #1
   1f2a4:	b	1edbc <mpfr_pow@@Base+0x22c>
   1f2a8:	mov	w2, #0x1                   	// #1
   1f2ac:	b	1edd8 <mpfr_pow@@Base+0x248>
   1f2b0:	ldr	x24, [x19, #16]
   1f2b4:	sub	x24, x24, #0x1
   1f2b8:	ldr	w23, [x19, #8]
   1f2bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f2c0:	ldr	x1, [x0, #2576]
   1f2c4:	add	x0, x0, #0xa10
   1f2c8:	blr	x1
   1f2cc:	mrs	x1, tpidr_el0
   1f2d0:	ldr	w0, [x1, x0]
   1f2d4:	str	w0, [sp, #136]
   1f2d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f2dc:	ldr	x2, [x0, #2512]
   1f2e0:	add	x0, x0, #0x9d0
   1f2e4:	blr	x2
   1f2e8:	add	x2, x1, x0
   1f2ec:	ldr	x0, [x1, x0]
   1f2f0:	str	x0, [sp, #144]
   1f2f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f2f8:	ldr	x3, [x0, #2544]
   1f2fc:	add	x0, x0, #0x9f0
   1f300:	blr	x3
   1f304:	ldr	x3, [x1, x0]
   1f308:	str	x3, [sp, #152]
   1f30c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1f310:	str	x3, [x2]
   1f314:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1f318:	str	x2, [x1, x0]
   1f31c:	ldr	x1, [x20]
   1f320:	add	x19, sp, #0x68
   1f324:	add	x1, x1, #0x40
   1f328:	mov	x0, x19
   1f32c:	bl	ca80 <mpfr_init2@plt>
   1f330:	mov	w3, #0x0                   	// #0
   1f334:	mov	x2, x24
   1f338:	mov	x1, x20
   1f33c:	mov	x0, x19
   1f340:	bl	c960 <mpfr_mul_si@plt>
   1f344:	cbnz	w0, 1f410 <mpfr_pow@@Base+0x880>
   1f348:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f34c:	ldr	x1, [x0, #2576]
   1f350:	add	x0, x0, #0xa10
   1f354:	blr	x1
   1f358:	mrs	x1, tpidr_el0
   1f35c:	str	wzr, [x1, x0]
   1f360:	add	x19, sp, #0x68
   1f364:	mov	w2, w22
   1f368:	mov	x1, x19
   1f36c:	mov	x0, x21
   1f370:	bl	cc90 <mpfr_exp2@plt>
   1f374:	mov	w24, w0
   1f378:	mov	x0, x19
   1f37c:	bl	c070 <mpfr_clear@plt>
   1f380:	tbnz	w23, #31, 1f430 <mpfr_pow@@Base+0x8a0>
   1f384:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f388:	ldr	x1, [x0, #2576]
   1f38c:	add	x0, x0, #0xa10
   1f390:	blr	x1
   1f394:	mrs	x2, tpidr_el0
   1f398:	ldr	w3, [x2, x0]
   1f39c:	ldr	w1, [sp, #136]
   1f3a0:	orr	w1, w1, w3
   1f3a4:	str	w1, [sp, #136]
   1f3a8:	str	w1, [x2, x0]
   1f3ac:	ldr	x3, [sp, #144]
   1f3b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f3b4:	ldr	x4, [x0, #2512]
   1f3b8:	add	x0, x0, #0x9d0
   1f3bc:	blr	x4
   1f3c0:	str	x3, [x2, x0]
   1f3c4:	ldr	x4, [sp, #152]
   1f3c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f3cc:	ldr	x5, [x0, #2544]
   1f3d0:	add	x0, x0, #0x9f0
   1f3d4:	blr	x5
   1f3d8:	str	x4, [x2, x0]
   1f3dc:	ldr	x0, [x21, #16]
   1f3e0:	cmp	x4, x0
   1f3e4:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   1f3e8:	b.gt	1f454 <mpfr_pow@@Base+0x8c4>
   1f3ec:	cbz	w24, 1f068 <mpfr_pow@@Base+0x4d8>
   1f3f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f3f4:	ldr	x2, [x0, #2576]
   1f3f8:	add	x0, x0, #0xa10
   1f3fc:	blr	x2
   1f400:	orr	w1, w1, #0x8
   1f404:	mrs	x2, tpidr_el0
   1f408:	str	w1, [x2, x0]
   1f40c:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f410:	stp	x25, x26, [sp, #64]
   1f414:	stp	x27, x28, [sp, #80]
   1f418:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f41c:	add	x2, x2, #0x818
   1f420:	mov	w1, #0x289                 	// #649
   1f424:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f428:	add	x0, x0, #0x768
   1f42c:	bl	cb40 <mpfr_assert_fail@plt>
   1f430:	mov	x0, x20
   1f434:	bl	cca0 <mpfr_odd_p@plt>
   1f438:	cbz	w0, 1f384 <mpfr_pow@@Base+0x7f4>
   1f43c:	mov	w2, w22
   1f440:	mov	x1, x21
   1f444:	mov	x0, x21
   1f448:	bl	bd70 <mpfr_neg@plt>
   1f44c:	neg	w24, w24
   1f450:	b	1f384 <mpfr_pow@@Base+0x7f4>
   1f454:	mov	w2, w22
   1f458:	mov	w1, w24
   1f45c:	mov	x0, x21
   1f460:	bl	cb30 <mpfr_check_range@plt>
   1f464:	mov	w24, w0
   1f468:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f46c:	ldr	x0, [x19, #16]
   1f470:	mov	x2, #0x1                   	// #1
   1f474:	sub	x2, x2, x0
   1f478:	b	1f700 <mpfr_pow@@Base+0xb70>
   1f47c:	mov	x2, #0x0                   	// #0
   1f480:	mov	x1, #0xffffffffffffffff    	// #-1
   1f484:	mov	x0, x19
   1f488:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1f48c:	cmp	w0, #0x0
   1f490:	b.le	1f4a4 <mpfr_pow@@Base+0x914>
   1f494:	ldr	x0, [x19, #16]
   1f498:	mov	x2, #0x1                   	// #1
   1f49c:	sub	x2, x2, x0
   1f4a0:	b	1f700 <mpfr_pow@@Base+0xb70>
   1f4a4:	ldr	x2, [x19, #16]
   1f4a8:	b	1f700 <mpfr_pow@@Base+0xb70>
   1f4ac:	stp	x25, x26, [sp, #64]
   1f4b0:	stp	x27, x28, [sp, #80]
   1f4b4:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f4b8:	add	x2, x2, #0x828
   1f4bc:	mov	w1, #0x2aa                 	// #682
   1f4c0:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1f4c4:	add	x0, x0, #0x768
   1f4c8:	bl	cb40 <mpfr_assert_fail@plt>
   1f4cc:	mov	x2, #0x0                   	// #0
   1f4d0:	b	1f724 <mpfr_pow@@Base+0xb94>
   1f4d4:	ldr	w0, [x20, #8]
   1f4d8:	cmp	w0, #0x0
   1f4dc:	cset	w3, gt
   1f4e0:	mov	w4, w22
   1f4e4:	eor	w3, w3, w24, lsr #31
   1f4e8:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   1f4ec:	ldr	x1, [x1, #3928]
   1f4f0:	mov	x0, x21
   1f4f4:	bl	c540 <mpfr_round_near_x@plt>
   1f4f8:	mov	w24, w0
   1f4fc:	cbz	w0, 1f75c <mpfr_pow@@Base+0xbcc>
   1f500:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f504:	ldr	x1, [x0, #2576]
   1f508:	add	x0, x0, #0xa10
   1f50c:	blr	x1
   1f510:	mrs	x2, tpidr_el0
   1f514:	ldr	w3, [x2, x0]
   1f518:	ldr	w1, [sp, #136]
   1f51c:	orr	w1, w1, w3
   1f520:	str	w1, [sp, #136]
   1f524:	str	w1, [x2, x0]
   1f528:	ldr	x3, [sp, #144]
   1f52c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f530:	ldr	x4, [x0, #2512]
   1f534:	add	x0, x0, #0x9d0
   1f538:	blr	x4
   1f53c:	str	x3, [x2, x0]
   1f540:	ldr	x4, [sp, #152]
   1f544:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f548:	ldr	x5, [x0, #2544]
   1f54c:	add	x0, x0, #0x9f0
   1f550:	blr	x5
   1f554:	str	x4, [x2, x0]
   1f558:	ldr	x0, [x21, #16]
   1f55c:	cmp	x4, x0
   1f560:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   1f564:	b.gt	1f588 <mpfr_pow@@Base+0x9f8>
   1f568:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f56c:	ldr	x2, [x0, #2576]
   1f570:	add	x0, x0, #0xa10
   1f574:	blr	x2
   1f578:	orr	w1, w1, #0x8
   1f57c:	mrs	x2, tpidr_el0
   1f580:	str	w1, [x2, x0]
   1f584:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f588:	mov	w2, w22
   1f58c:	mov	w1, w24
   1f590:	mov	x0, x21
   1f594:	bl	cb30 <mpfr_check_range@plt>
   1f598:	mov	w24, w0
   1f59c:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f5a0:	mov	w2, w22
   1f5a4:	mov	w1, w24
   1f5a8:	mov	x0, x21
   1f5ac:	bl	cb30 <mpfr_check_range@plt>
   1f5b0:	mov	w24, w0
   1f5b4:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f5b8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1f5bc:	cmp	x0, x1
   1f5c0:	b.eq	1ee3c <mpfr_pow@@Base+0x2ac>  // b.none
   1f5c4:	mov	x1, #0x2                   	// #2
   1f5c8:	movk	x1, #0x8000, lsl #48
   1f5cc:	cmp	x0, x1
   1f5d0:	b.eq	1ee58 <mpfr_pow@@Base+0x2c8>  // b.none
   1f5d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1f5d8:	cmp	x0, x1
   1f5dc:	b.eq	1eec0 <mpfr_pow@@Base+0x330>  // b.none
   1f5e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f5e4:	cmp	x23, x0
   1f5e8:	b.eq	1ef54 <mpfr_pow@@Base+0x3c4>  // b.none
   1f5ec:	ldr	w0, [x19, #8]
   1f5f0:	tbnz	w0, #31, 1efb4 <mpfr_pow@@Base+0x424>
   1f5f4:	ldr	w0, [x20, #8]
   1f5f8:	mov	w24, #0x0                   	// #0
   1f5fc:	tbnz	w0, #31, 1efd0 <mpfr_pow@@Base+0x440>
   1f600:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f604:	str	x0, [x21, #16]
   1f608:	cbz	w24, 1f004 <mpfr_pow@@Base+0x474>
   1f60c:	mov	w0, #0xffffffff            	// #-1
   1f610:	str	w0, [x21, #8]
   1f614:	mov	w24, #0x0                   	// #0
   1f618:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f61c:	cbz	w23, 1f67c <mpfr_pow@@Base+0xaec>
   1f620:	add	x23, sp, #0x68
   1f624:	mov	x0, x23
   1f628:	bl	bf90 <mpfr_mpz_init@plt>
   1f62c:	mov	w2, #0x0                   	// #0
   1f630:	mov	x1, x20
   1f634:	mov	x0, x23
   1f638:	bl	be00 <mpfr_get_z@plt>
   1f63c:	mov	w3, w22
   1f640:	mov	x2, x23
   1f644:	mov	x1, x19
   1f648:	mov	x0, x21
   1f64c:	bl	bef0 <mpfr_pow_z@plt>
   1f650:	mov	w24, w0
   1f654:	mov	x0, x23
   1f658:	bl	c170 <mpfr_mpz_clear@plt>
   1f65c:	b	1f068 <mpfr_pow@@Base+0x4d8>
   1f660:	sub	x2, x2, #0x2
   1f664:	cmp	x3, x2
   1f668:	b.le	1f2a0 <mpfr_pow@@Base+0x710>
   1f66c:	cbz	w23, 1f67c <mpfr_pow@@Base+0xaec>
   1f670:	ldr	x0, [x20, #16]
   1f674:	cmp	x0, #0x100
   1f678:	b.le	1f620 <mpfr_pow@@Base+0xa90>
   1f67c:	mov	x0, x19
   1f680:	bl	bf00 <mpfr_powerof2_raw@plt>
   1f684:	cbnz	w0, 1f2b0 <mpfr_pow@@Base+0x720>
   1f688:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f68c:	ldr	x1, [x0, #2576]
   1f690:	add	x0, x0, #0xa10
   1f694:	blr	x1
   1f698:	mrs	x1, tpidr_el0
   1f69c:	ldr	w0, [x1, x0]
   1f6a0:	str	w0, [sp, #136]
   1f6a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f6a8:	ldr	x2, [x0, #2512]
   1f6ac:	add	x0, x0, #0x9d0
   1f6b0:	blr	x2
   1f6b4:	add	x2, x1, x0
   1f6b8:	ldr	x0, [x1, x0]
   1f6bc:	str	x0, [sp, #144]
   1f6c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f6c4:	ldr	x3, [x0, #2544]
   1f6c8:	add	x0, x0, #0x9f0
   1f6cc:	blr	x3
   1f6d0:	ldr	x3, [x1, x0]
   1f6d4:	str	x3, [sp, #152]
   1f6d8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1f6dc:	str	x3, [x2]
   1f6e0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1f6e4:	str	x2, [x1, x0]
   1f6e8:	ldr	w0, [x19, #8]
   1f6ec:	cmp	w0, #0x0
   1f6f0:	b.le	1f47c <mpfr_pow@@Base+0x8ec>
   1f6f4:	cmp	w24, #0x0
   1f6f8:	b.le	1f46c <mpfr_pow@@Base+0x8dc>
   1f6fc:	ldr	x2, [x19, #16]
   1f700:	cmp	x2, #0x1
   1f704:	b.eq	1f4cc <mpfr_pow@@Base+0x93c>  // b.none
   1f708:	cmp	x2, #0x1
   1f70c:	b.le	1f4ac <mpfr_pow@@Base+0x91c>
   1f710:	sub	x2, x2, #0x1
   1f714:	clz	x0, x2
   1f718:	mov	w2, #0x40                  	// #64
   1f71c:	sub	w2, w2, w0
   1f720:	sxtw	x2, w2
   1f724:	ldr	x1, [x20, #16]
   1f728:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f72c:	ldr	x3, [x0, #2576]
   1f730:	add	x0, x0, #0xa10
   1f734:	blr	x3
   1f738:	mrs	x3, tpidr_el0
   1f73c:	str	wzr, [x3, x0]
   1f740:	adds	x2, x2, x1
   1f744:	b.pl	1f75c <mpfr_pow@@Base+0xbcc>  // b.nfrst
   1f748:	neg	x2, x2
   1f74c:	ldr	x0, [x21]
   1f750:	add	x0, x0, #0x1
   1f754:	cmp	x2, x0
   1f758:	b.hi	1f4d4 <mpfr_pow@@Base+0x944>  // b.pmore
   1f75c:	add	x5, sp, #0x88
   1f760:	mov	w4, w23
   1f764:	mov	w3, w22
   1f768:	mov	x2, x20
   1f76c:	mov	x1, x19
   1f770:	mov	x0, x21
   1f774:	bl	c6f0 <mpfr_pow_general@plt>
   1f778:	mov	w24, w0
   1f77c:	ldr	w2, [sp, #136]
   1f780:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f784:	ldr	x1, [x0, #2576]
   1f788:	add	x0, x0, #0xa10
   1f78c:	blr	x1
   1f790:	mrs	x1, tpidr_el0
   1f794:	str	w2, [x1, x0]
   1f798:	ldr	x3, [sp, #144]
   1f79c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f7a0:	ldr	x4, [x0, #2512]
   1f7a4:	add	x0, x0, #0x9d0
   1f7a8:	blr	x4
   1f7ac:	str	x3, [x1, x0]
   1f7b0:	ldr	x4, [sp, #152]
   1f7b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f7b8:	ldr	x5, [x0, #2544]
   1f7bc:	add	x0, x0, #0x9f0
   1f7c0:	blr	x5
   1f7c4:	str	x4, [x1, x0]
   1f7c8:	ldr	x0, [x21, #16]
   1f7cc:	cmp	x4, x0
   1f7d0:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   1f7d4:	b.gt	1f5a0 <mpfr_pow@@Base+0xa10>
   1f7d8:	cbz	w24, 1f068 <mpfr_pow@@Base+0x4d8>
   1f7dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f7e0:	ldr	x1, [x0, #2576]
   1f7e4:	add	x0, x0, #0xa10
   1f7e8:	blr	x1
   1f7ec:	orr	w2, w2, #0x8
   1f7f0:	mrs	x1, tpidr_el0
   1f7f4:	str	w2, [x1, x0]
   1f7f8:	b	1f068 <mpfr_pow@@Base+0x4d8>

000000000001f7fc <mpfr_pow_si@@Base>:
   1f7fc:	stp	x29, x30, [sp, #-240]!
   1f800:	mov	x29, sp
   1f804:	stp	x19, x20, [sp, #16]
   1f808:	stp	x21, x22, [sp, #32]
   1f80c:	mov	x21, x0
   1f810:	mov	x20, x1
   1f814:	mov	x19, x2
   1f818:	mov	w22, w3
   1f81c:	tbz	x2, #63, 1fa9c <mpfr_pow_si@@Base+0x2a0>
   1f820:	ldr	x2, [x1, #16]
   1f824:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f828:	cmp	x2, x0
   1f82c:	b.le	1fab8 <mpfr_pow_si@@Base+0x2bc>
   1f830:	sub	x2, x2, #0x1
   1f834:	ldrsw	x1, [x1, #8]
   1f838:	mov	x0, x20
   1f83c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1f840:	cbz	w0, 1fb70 <mpfr_pow_si@@Base+0x374>
   1f844:	stp	x23, x24, [sp, #48]
   1f848:	stp	x25, x26, [sp, #64]
   1f84c:	stp	x27, x28, [sp, #80]
   1f850:	neg	x27, x19
   1f854:	clz	x1, x27
   1f858:	ldr	x24, [x21]
   1f85c:	mov	w0, #0x40                  	// #64
   1f860:	sub	w0, w0, w1
   1f864:	sxtw	x0, w0
   1f868:	str	x0, [sp, #128]
   1f86c:	add	x23, x0, x24
   1f870:	add	x23, x23, #0x3
   1f874:	cmp	x24, #0x1
   1f878:	b.eq	1fc30 <mpfr_pow_si@@Base+0x434>  // b.none
   1f87c:	b.le	1fc18 <mpfr_pow_si@@Base+0x41c>
   1f880:	sub	x0, x24, #0x1
   1f884:	clz	x1, x0
   1f888:	mov	w0, #0x40                  	// #64
   1f88c:	sub	w0, w0, w1
   1f890:	sxtw	x0, w0
   1f894:	add	x23, x23, x0
   1f898:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f89c:	ldr	x1, [x0, #2576]
   1f8a0:	add	x0, x0, #0xa10
   1f8a4:	blr	x1
   1f8a8:	mrs	x1, tpidr_el0
   1f8ac:	ldr	w0, [x1, x0]
   1f8b0:	str	w0, [sp, #108]
   1f8b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f8b8:	ldr	x2, [x0, #2512]
   1f8bc:	add	x0, x0, #0x9d0
   1f8c0:	blr	x2
   1f8c4:	add	x2, x1, x0
   1f8c8:	ldr	x0, [x1, x0]
   1f8cc:	str	x0, [sp, #112]
   1f8d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f8d4:	ldr	x3, [x0, #2544]
   1f8d8:	add	x0, x0, #0x9f0
   1f8dc:	blr	x3
   1f8e0:	ldr	x3, [x1, x0]
   1f8e4:	str	x3, [sp, #120]
   1f8e8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1f8ec:	str	x3, [x2]
   1f8f0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1f8f4:	str	x2, [x1, x0]
   1f8f8:	mov	x1, x23
   1f8fc:	add	x0, sp, #0x90
   1f900:	bl	ca80 <mpfr_init2@plt>
   1f904:	ldr	x0, [x20, #16]
   1f908:	mov	w1, #0x1                   	// #1
   1f90c:	str	w1, [sp, #104]
   1f910:	cmp	x0, #0x0
   1f914:	b.le	1f92c <mpfr_pow_si@@Base+0x130>
   1f918:	ldr	w0, [x20, #8]
   1f91c:	cmp	w0, #0x0
   1f920:	cset	w0, le
   1f924:	add	w0, w0, #0x2
   1f928:	str	w0, [sp, #104]
   1f92c:	mov	x0, #0x40                  	// #64
   1f930:	str	x0, [sp, #136]
   1f934:	mrs	x25, tpidr_el0
   1f938:	add	x26, sp, #0x90
   1f93c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f940:	ldr	x1, [x0, #2576]
   1f944:	add	x0, x0, #0xa10
   1f948:	blr	x1
   1f94c:	add	x28, x25, x0
   1f950:	str	wzr, [x25, x0]
   1f954:	ldr	w3, [sp, #104]
   1f958:	mov	x2, x20
   1f95c:	mov	x1, #0x1                   	// #1
   1f960:	mov	x0, x26
   1f964:	bl	c2f0 <mpfr_ui_div@plt>
   1f968:	ldr	w0, [x28]
   1f96c:	tbnz	w0, #1, 1fc38 <mpfr_pow_si@@Base+0x43c>
   1f970:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1f974:	ldr	x1, [x0, #2576]
   1f978:	add	x0, x0, #0xa10
   1f97c:	blr	x1
   1f980:	str	wzr, [x25, x0]
   1f984:	mov	w3, w22
   1f988:	mov	x2, x27
   1f98c:	mov	x1, x26
   1f990:	mov	x0, x26
   1f994:	bl	bf70 <mpfr_pow_ui@plt>
   1f998:	ldr	w0, [x28]
   1f99c:	tbnz	w0, #1, 1fc38 <mpfr_pow_si@@Base+0x43c>
   1f9a0:	tbnz	w0, #0, 1fcbc <mpfr_pow_si@@Base+0x4c0>
   1f9a4:	ldr	x1, [sp, #160]
   1f9a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f9ac:	cmp	x1, x0
   1f9b0:	b.le	1fdf0 <mpfr_pow_si@@Base+0x5f4>
   1f9b4:	cmp	w22, #0x0
   1f9b8:	cinc	x3, x24, eq  // eq = none
   1f9bc:	ldr	x0, [sp, #128]
   1f9c0:	sub	x2, x23, x0
   1f9c4:	ldr	x0, [sp, #144]
   1f9c8:	add	x1, x0, #0x3e
   1f9cc:	subs	x0, x0, #0x1
   1f9d0:	csel	x1, x1, x0, mi  // mi = first
   1f9d4:	asr	x1, x1, #6
   1f9d8:	sub	x2, x2, #0x2
   1f9dc:	add	x1, x1, #0x1
   1f9e0:	ldr	x0, [sp, #168]
   1f9e4:	bl	c370 <mpfr_round_p@plt>
   1f9e8:	cbz	w0, 1fdf0 <mpfr_pow_si@@Base+0x5f4>
   1f9ec:	add	x20, sp, #0x90
   1f9f0:	ldr	w3, [sp, #152]
   1f9f4:	mov	w2, w22
   1f9f8:	mov	x1, x20
   1f9fc:	mov	x0, x21
   1fa00:	bl	c6a0 <mpfr_set4@plt>
   1fa04:	mov	w19, w0
   1fa08:	mov	x0, x20
   1fa0c:	bl	c070 <mpfr_clear@plt>
   1fa10:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fa14:	ldr	x1, [x0, #2576]
   1fa18:	add	x0, x0, #0xa10
   1fa1c:	blr	x1
   1fa20:	mrs	x1, tpidr_el0
   1fa24:	ldr	w4, [sp, #108]
   1fa28:	str	w4, [x1, x0]
   1fa2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fa30:	ldr	x2, [x0, #2512]
   1fa34:	add	x0, x0, #0x9d0
   1fa38:	blr	x2
   1fa3c:	ldr	x2, [sp, #112]
   1fa40:	str	x2, [x1, x0]
   1fa44:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fa48:	ldr	x3, [x0, #2544]
   1fa4c:	add	x0, x0, #0x9f0
   1fa50:	blr	x3
   1fa54:	ldr	x3, [sp, #120]
   1fa58:	str	x3, [x1, x0]
   1fa5c:	ldr	x0, [x21, #16]
   1fa60:	cmp	x3, x0
   1fa64:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   1fa68:	b.gt	1fe44 <mpfr_pow_si@@Base+0x648>
   1fa6c:	cbz	w19, 1fe68 <mpfr_pow_si@@Base+0x66c>
   1fa70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fa74:	ldr	x1, [x0, #2576]
   1fa78:	add	x0, x0, #0xa10
   1fa7c:	blr	x1
   1fa80:	orr	w1, w4, #0x8
   1fa84:	mrs	x2, tpidr_el0
   1fa88:	str	w1, [x2, x0]
   1fa8c:	ldp	x23, x24, [sp, #48]
   1fa90:	ldp	x25, x26, [sp, #64]
   1fa94:	ldp	x27, x28, [sp, #80]
   1fa98:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fa9c:	bl	bf70 <mpfr_pow_ui@plt>
   1faa0:	mov	w19, w0
   1faa4:	mov	w0, w19
   1faa8:	ldp	x19, x20, [sp, #16]
   1faac:	ldp	x21, x22, [sp, #32]
   1fab0:	ldp	x29, x30, [sp], #240
   1fab4:	ret
   1fab8:	mov	x0, #0x2                   	// #2
   1fabc:	movk	x0, #0x8000, lsl #48
   1fac0:	cmp	x2, x0
   1fac4:	b.eq	1fb28 <mpfr_pow_si@@Base+0x32c>  // b.none
   1fac8:	ldr	w0, [x1, #8]
   1facc:	eor	x19, x19, #0x1
   1fad0:	and	w19, w19, #0x1
   1fad4:	cmp	w0, #0x0
   1fad8:	csinc	w19, w19, wzr, le
   1fadc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1fae0:	cmp	x2, x0
   1fae4:	b.eq	1fb58 <mpfr_pow_si@@Base+0x35c>  // b.none
   1fae8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1faec:	str	x0, [x21, #16]
   1faf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1faf4:	ldr	x1, [x0, #2576]
   1faf8:	add	x0, x0, #0xa10
   1fafc:	blr	x1
   1fb00:	mrs	x1, tpidr_el0
   1fb04:	add	x0, x1, x0
   1fb08:	ldr	w1, [x0]
   1fb0c:	orr	w1, w1, #0x20
   1fb10:	str	w1, [x0]
   1fb14:	cbz	w19, 1fb64 <mpfr_pow_si@@Base+0x368>
   1fb18:	mov	w0, #0x1                   	// #1
   1fb1c:	str	w0, [x21, #8]
   1fb20:	mov	w19, #0x0                   	// #0
   1fb24:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fb28:	str	x0, [x21, #16]
   1fb2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fb30:	ldr	x1, [x0, #2576]
   1fb34:	add	x0, x0, #0xa10
   1fb38:	blr	x1
   1fb3c:	mrs	x1, tpidr_el0
   1fb40:	add	x0, x1, x0
   1fb44:	ldr	w1, [x0]
   1fb48:	orr	w1, w1, #0x4
   1fb4c:	str	w1, [x0]
   1fb50:	mov	w19, #0x0                   	// #0
   1fb54:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fb58:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1fb5c:	str	x0, [x21, #16]
   1fb60:	b	1fb14 <mpfr_pow_si@@Base+0x318>
   1fb64:	mov	w0, #0xffffffff            	// #-1
   1fb68:	str	w0, [x21, #8]
   1fb6c:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fb70:	ldr	x1, [x20, #16]
   1fb74:	sub	x1, x1, #0x1
   1fb78:	cmn	x19, #0x1
   1fb7c:	cset	w0, eq  // eq = none
   1fb80:	cmp	x1, #0x0
   1fb84:	ccmp	w0, #0x0, #0x0, gt
   1fb88:	b.ne	1fbdc <mpfr_pow_si@@Base+0x3e0>  // b.any
   1fb8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fb90:	ldr	x2, [x0, #2512]
   1fb94:	add	x0, x0, #0x9d0
   1fb98:	blr	x2
   1fb9c:	mrs	x2, tpidr_el0
   1fba0:	ldr	x0, [x2, x0]
   1fba4:	sub	x0, x0, #0x1
   1fba8:	sdiv	x0, x0, x19
   1fbac:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   1fbb0:	cmp	x0, x1
   1fbb4:	b.lt	1fbbc <mpfr_pow_si@@Base+0x3c0>  // b.tstop
   1fbb8:	mul	x2, x19, x1
   1fbbc:	mov	x1, #0x1                   	// #1
   1fbc0:	tbz	w19, #0, 1fbc8 <mpfr_pow_si@@Base+0x3cc>
   1fbc4:	ldrsw	x1, [x20, #8]
   1fbc8:	mov	w3, w22
   1fbcc:	mov	x0, x21
   1fbd0:	bl	ba80 <mpfr_set_si_2exp@plt>
   1fbd4:	mov	w19, w0
   1fbd8:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fbdc:	cmp	x1, #0x0
   1fbe0:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   1fbe4:	b.ne	1fbb8 <mpfr_pow_si@@Base+0x3bc>  // b.any
   1fbe8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fbec:	ldr	x2, [x0, #2544]
   1fbf0:	add	x0, x0, #0x9f0
   1fbf4:	blr	x2
   1fbf8:	mrs	x2, tpidr_el0
   1fbfc:	ldr	x0, [x2, x0]
   1fc00:	sub	x0, x0, #0x1
   1fc04:	sdiv	x0, x0, x19
   1fc08:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1fc0c:	cmp	x0, x1
   1fc10:	b.gt	1fbbc <mpfr_pow_si@@Base+0x3c0>
   1fc14:	b	1fbb8 <mpfr_pow_si@@Base+0x3bc>
   1fc18:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   1fc1c:	add	x2, x2, #0x218
   1fc20:	mov	w1, #0x9d                  	// #157
   1fc24:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1fc28:	add	x0, x0, #0x838
   1fc2c:	bl	cb40 <mpfr_assert_fail@plt>
   1fc30:	mov	x0, #0x0                   	// #0
   1fc34:	b	1f894 <mpfr_pow_si@@Base+0x98>
   1fc38:	add	x0, sp, #0x90
   1fc3c:	bl	c070 <mpfr_clear@plt>
   1fc40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fc44:	ldr	x1, [x0, #2576]
   1fc48:	add	x0, x0, #0xa10
   1fc4c:	blr	x1
   1fc50:	mrs	x1, tpidr_el0
   1fc54:	ldr	w2, [sp, #108]
   1fc58:	str	w2, [x1, x0]
   1fc5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fc60:	ldr	x2, [x0, #2512]
   1fc64:	add	x0, x0, #0x9d0
   1fc68:	blr	x2
   1fc6c:	ldr	x2, [sp, #112]
   1fc70:	str	x2, [x1, x0]
   1fc74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fc78:	ldr	x2, [x0, #2544]
   1fc7c:	add	x0, x0, #0x9f0
   1fc80:	blr	x2
   1fc84:	ldr	x2, [sp, #120]
   1fc88:	str	x2, [x1, x0]
   1fc8c:	tbz	w27, #0, 1fcb4 <mpfr_pow_si@@Base+0x4b8>
   1fc90:	ldr	w2, [x20, #8]
   1fc94:	mov	w1, w22
   1fc98:	mov	x0, x21
   1fc9c:	bl	bf40 <mpfr_overflow@plt>
   1fca0:	mov	w19, w0
   1fca4:	ldp	x23, x24, [sp, #48]
   1fca8:	ldp	x25, x26, [sp, #64]
   1fcac:	ldp	x27, x28, [sp, #80]
   1fcb0:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fcb4:	mov	w2, #0x1                   	// #1
   1fcb8:	b	1fc94 <mpfr_pow_si@@Base+0x498>
   1fcbc:	add	x0, sp, #0x90
   1fcc0:	bl	c070 <mpfr_clear@plt>
   1fcc4:	cbnz	w22, 1fd74 <mpfr_pow_si@@Base+0x578>
   1fcc8:	mov	x1, #0x2                   	// #2
   1fccc:	add	x0, sp, #0xb0
   1fcd0:	bl	ca80 <mpfr_init2@plt>
   1fcd4:	add	x23, sp, #0xd0
   1fcd8:	mov	x1, #0x40                  	// #64
   1fcdc:	mov	x0, x23
   1fce0:	bl	ca80 <mpfr_init2@plt>
   1fce4:	mov	w3, #0x0                   	// #0
   1fce8:	mov	x2, #0x0                   	// #0
   1fcec:	mov	x1, x19
   1fcf0:	mov	x0, x23
   1fcf4:	bl	ba80 <mpfr_set_si_2exp@plt>
   1fcf8:	cbnz	w0, 1fd5c <mpfr_pow_si@@Base+0x560>
   1fcfc:	add	x23, sp, #0xd0
   1fd00:	add	x6, sp, #0xb0
   1fd04:	mov	x5, #0x0                   	// #0
   1fd08:	mov	w4, #0x1                   	// #1
   1fd0c:	mov	w3, #0x0                   	// #0
   1fd10:	mov	x2, x23
   1fd14:	mov	x1, x20
   1fd18:	mov	x20, x6
   1fd1c:	mov	x0, x6
   1fd20:	bl	c6f0 <mpfr_pow_general@plt>
   1fd24:	mov	w19, w0
   1fd28:	mov	x0, x23
   1fd2c:	bl	c070 <mpfr_clear@plt>
   1fd30:	ldr	w3, [sp, #184]
   1fd34:	mov	w2, #0x0                   	// #0
   1fd38:	mov	x1, x20
   1fd3c:	mov	x0, x21
   1fd40:	bl	c6a0 <mpfr_set4@plt>
   1fd44:	mov	x0, x20
   1fd48:	bl	c070 <mpfr_clear@plt>
   1fd4c:	ldr	w0, [sp, #108]
   1fd50:	orr	w0, w0, #0x1
   1fd54:	str	w0, [sp, #108]
   1fd58:	b	1fa10 <mpfr_pow_si@@Base+0x214>
   1fd5c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1fd60:	add	x2, x2, #0x818
   1fd64:	mov	w1, #0xd8                  	// #216
   1fd68:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1fd6c:	add	x0, x0, #0x838
   1fd70:	bl	cb40 <mpfr_assert_fail@plt>
   1fd74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fd78:	ldr	x1, [x0, #2576]
   1fd7c:	add	x0, x0, #0xa10
   1fd80:	blr	x1
   1fd84:	mrs	x1, tpidr_el0
   1fd88:	ldr	w2, [sp, #108]
   1fd8c:	str	w2, [x1, x0]
   1fd90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fd94:	ldr	x2, [x0, #2512]
   1fd98:	add	x0, x0, #0x9d0
   1fd9c:	blr	x2
   1fda0:	ldr	x2, [sp, #112]
   1fda4:	str	x2, [x1, x0]
   1fda8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fdac:	ldr	x2, [x0, #2544]
   1fdb0:	add	x0, x0, #0x9f0
   1fdb4:	blr	x2
   1fdb8:	ldr	x2, [sp, #120]
   1fdbc:	str	x2, [x1, x0]
   1fdc0:	tbz	w27, #0, 1fde8 <mpfr_pow_si@@Base+0x5ec>
   1fdc4:	ldr	w2, [x20, #8]
   1fdc8:	mov	w1, w22
   1fdcc:	mov	x0, x21
   1fdd0:	bl	c3c0 <mpfr_underflow@plt>
   1fdd4:	mov	w19, w0
   1fdd8:	ldp	x23, x24, [sp, #48]
   1fddc:	ldp	x25, x26, [sp, #64]
   1fde0:	ldp	x27, x28, [sp, #80]
   1fde4:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fde8:	mov	w2, #0x1                   	// #1
   1fdec:	b	1fdc8 <mpfr_pow_si@@Base+0x5cc>
   1fdf0:	mov	x0, #0xfffffffffffffeff    	// #-257
   1fdf4:	movk	x0, #0x7fff, lsl #48
   1fdf8:	sub	x0, x0, x23
   1fdfc:	ldr	x1, [sp, #136]
   1fe00:	cmp	x0, x1
   1fe04:	b.lt	1fe2c <mpfr_pow_si@@Base+0x630>  // b.tstop
   1fe08:	ldr	x0, [sp, #136]
   1fe0c:	add	x23, x23, x0
   1fe10:	add	x0, x23, x23, lsr #63
   1fe14:	asr	x0, x0, #1
   1fe18:	str	x0, [sp, #136]
   1fe1c:	mov	x1, x23
   1fe20:	mov	x0, x26
   1fe24:	bl	bed0 <mpfr_set_prec@plt>
   1fe28:	b	1f93c <mpfr_pow_si@@Base+0x140>
   1fe2c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   1fe30:	add	x2, x2, #0x230
   1fe34:	mov	w1, #0xed                  	// #237
   1fe38:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   1fe3c:	add	x0, x0, #0x838
   1fe40:	bl	cb40 <mpfr_assert_fail@plt>
   1fe44:	mov	w2, w22
   1fe48:	mov	w1, w19
   1fe4c:	mov	x0, x21
   1fe50:	bl	cb30 <mpfr_check_range@plt>
   1fe54:	mov	w19, w0
   1fe58:	ldp	x23, x24, [sp, #48]
   1fe5c:	ldp	x25, x26, [sp, #64]
   1fe60:	ldp	x27, x28, [sp, #80]
   1fe64:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>
   1fe68:	ldp	x23, x24, [sp, #48]
   1fe6c:	ldp	x25, x26, [sp, #64]
   1fe70:	ldp	x27, x28, [sp, #80]
   1fe74:	b	1faa4 <mpfr_pow_si@@Base+0x2a8>

000000000001fe78 <mpfr_pow_ui@@Base>:
   1fe78:	stp	x29, x30, [sp, #-192]!
   1fe7c:	mov	x29, sp
   1fe80:	stp	x19, x20, [sp, #16]
   1fe84:	stp	x27, x28, [sp, #80]
   1fe88:	mov	x27, x0
   1fe8c:	str	w3, [sp, #96]
   1fe90:	cbz	x2, 200bc <mpfr_pow_ui@@Base+0x244>
   1fe94:	stp	x21, x22, [sp, #32]
   1fe98:	stp	x23, x24, [sp, #48]
   1fe9c:	mov	x24, x1
   1fea0:	mov	x22, x2
   1fea4:	ldr	x0, [x1, #16]
   1fea8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1feac:	cmp	x0, x1
   1feb0:	b.le	200d4 <mpfr_pow_ui@@Base+0x25c>
   1feb4:	cmp	x2, #0x2
   1feb8:	b.ls	201a8 <mpfr_pow_ui@@Base+0x330>  // b.plast
   1febc:	stp	x25, x26, [sp, #64]
   1fec0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fec4:	ldr	x1, [x0, #2576]
   1fec8:	add	x0, x0, #0xa10
   1fecc:	blr	x1
   1fed0:	mrs	x1, tpidr_el0
   1fed4:	ldr	w0, [x1, x0]
   1fed8:	str	w0, [sp, #100]
   1fedc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fee0:	ldr	x2, [x0, #2512]
   1fee4:	add	x0, x0, #0x9d0
   1fee8:	blr	x2
   1feec:	add	x2, x1, x0
   1fef0:	ldr	x0, [x1, x0]
   1fef4:	str	x0, [sp, #104]
   1fef8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fefc:	ldr	x3, [x0, #2544]
   1ff00:	add	x0, x0, #0x9f0
   1ff04:	blr	x3
   1ff08:	ldr	x3, [x1, x0]
   1ff0c:	str	x3, [sp, #112]
   1ff10:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1ff14:	str	x3, [x2]
   1ff18:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1ff1c:	str	x2, [x1, x0]
   1ff20:	ldr	x0, [x27]
   1ff24:	add	x19, x0, #0x43
   1ff28:	cmp	x0, #0x1
   1ff2c:	b.eq	20210 <mpfr_pow_ui@@Base+0x398>  // b.none
   1ff30:	cmp	x0, #0x1
   1ff34:	b.le	201f4 <mpfr_pow_ui@@Base+0x37c>
   1ff38:	ldr	x0, [x27]
   1ff3c:	sub	x0, x0, #0x1
   1ff40:	clz	x1, x0
   1ff44:	mov	w0, #0x40                  	// #64
   1ff48:	sub	w0, w0, w1
   1ff4c:	sxtw	x0, w0
   1ff50:	add	x0, x19, x0
   1ff54:	str	x0, [sp, #120]
   1ff58:	mov	x1, x0
   1ff5c:	add	x0, sp, #0xa0
   1ff60:	bl	ca80 <mpfr_init2@plt>
   1ff64:	ldr	w0, [x24, #8]
   1ff68:	cmp	w0, #0x0
   1ff6c:	cset	w28, le
   1ff70:	add	w28, w28, #0x2
   1ff74:	mov	x0, #0x40                  	// #64
   1ff78:	str	x0, [sp, #136]
   1ff7c:	mrs	x23, tpidr_el0
   1ff80:	add	x20, sp, #0xa0
   1ff84:	mov	w25, #0x2                   	// #2
   1ff88:	mov	x1, x22
   1ff8c:	mov	w0, #0x0                   	// #0
   1ff90:	mov	w19, w0
   1ff94:	add	w0, w0, #0x1
   1ff98:	lsr	x1, x1, #1
   1ff9c:	cbnz	x1, 1ff90 <mpfr_pow_ui@@Base+0x118>
   1ffa0:	sxtw	x0, w0
   1ffa4:	str	x0, [sp, #128]
   1ffa8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1ffac:	ldr	x1, [x0, #2576]
   1ffb0:	add	x0, x0, #0xa10
   1ffb4:	blr	x1
   1ffb8:	str	wzr, [x23, x0]
   1ffbc:	mov	w3, w25
   1ffc0:	mov	x2, x24
   1ffc4:	mov	x1, x24
   1ffc8:	mov	x0, x20
   1ffcc:	bl	bd50 <mpfr_mul@plt>
   1ffd0:	mov	w21, w0
   1ffd4:	sub	w0, w19, #0x1
   1ffd8:	lsr	x0, x22, x0
   1ffdc:	tbnz	w0, #0, 20218 <mpfr_pow_ui@@Base+0x3a0>
   1ffe0:	mov	w26, #0x27                  	// #39
   1ffe4:	subs	w19, w19, #0x2
   1ffe8:	b.pl	20258 <mpfr_pow_ui@@Base+0x3e0>  // b.nfrst
   1ffec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   1fff0:	ldr	x1, [x0, #2576]
   1fff4:	add	x0, x0, #0xa10
   1fff8:	blr	x1
   1fffc:	ldr	w0, [x23, x0]
   20000:	cbnz	w21, 20298 <mpfr_pow_ui@@Base+0x420>
   20004:	tst	x0, #0x3
   20008:	b.ne	20350 <mpfr_pow_ui@@Base+0x4d8>  // b.any
   2000c:	add	x20, sp, #0xa0
   20010:	ldr	w3, [sp, #168]
   20014:	ldr	w2, [sp, #96]
   20018:	mov	x1, x20
   2001c:	mov	x0, x27
   20020:	bl	c6a0 <mpfr_set4@plt>
   20024:	mov	w19, w0
   20028:	mov	x0, x20
   2002c:	bl	c070 <mpfr_clear@plt>
   20030:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20034:	ldr	x1, [x0, #2576]
   20038:	add	x0, x0, #0xa10
   2003c:	blr	x1
   20040:	mrs	x1, tpidr_el0
   20044:	ldr	w4, [sp, #100]
   20048:	str	w4, [x1, x0]
   2004c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20050:	ldr	x2, [x0, #2512]
   20054:	add	x0, x0, #0x9d0
   20058:	blr	x2
   2005c:	ldr	x2, [sp, #104]
   20060:	str	x2, [x1, x0]
   20064:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20068:	ldr	x3, [x0, #2544]
   2006c:	add	x0, x0, #0x9f0
   20070:	blr	x3
   20074:	ldr	x3, [sp, #112]
   20078:	str	x3, [x1, x0]
   2007c:	ldr	x0, [x27, #16]
   20080:	cmp	x3, x0
   20084:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   20088:	b.gt	203ec <mpfr_pow_ui@@Base+0x574>
   2008c:	cbz	w19, 20410 <mpfr_pow_ui@@Base+0x598>
   20090:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20094:	ldr	x1, [x0, #2576]
   20098:	add	x0, x0, #0xa10
   2009c:	blr	x1
   200a0:	orr	w1, w4, #0x8
   200a4:	mrs	x2, tpidr_el0
   200a8:	str	w1, [x2, x0]
   200ac:	ldp	x21, x22, [sp, #32]
   200b0:	ldp	x23, x24, [sp, #48]
   200b4:	ldp	x25, x26, [sp, #64]
   200b8:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   200bc:	mov	w3, w3
   200c0:	mov	x2, #0x0                   	// #0
   200c4:	mov	x1, #0x1                   	// #1
   200c8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   200cc:	mov	w19, w0
   200d0:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   200d4:	mov	x1, #0x2                   	// #2
   200d8:	movk	x1, #0x8000, lsl #48
   200dc:	cmp	x0, x1
   200e0:	b.eq	2011c <mpfr_pow_ui@@Base+0x2a4>  // b.none
   200e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   200e8:	cmp	x0, x1
   200ec:	b.eq	20154 <mpfr_pow_ui@@Base+0x2dc>  // b.none
   200f0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   200f4:	str	x0, [x27, #16]
   200f8:	ldr	w0, [x24, #8]
   200fc:	cmp	w0, #0x0
   20100:	b.le	2018c <mpfr_pow_ui@@Base+0x314>
   20104:	mov	w0, #0x1                   	// #1
   20108:	str	w0, [x27, #8]
   2010c:	mov	w19, #0x0                   	// #0
   20110:	ldp	x21, x22, [sp, #32]
   20114:	ldp	x23, x24, [sp, #48]
   20118:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   2011c:	str	x1, [x27, #16]
   20120:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20124:	ldr	x1, [x0, #2576]
   20128:	add	x0, x0, #0xa10
   2012c:	blr	x1
   20130:	mrs	x1, tpidr_el0
   20134:	add	x0, x1, x0
   20138:	ldr	w1, [x0]
   2013c:	orr	w1, w1, #0x4
   20140:	str	w1, [x0]
   20144:	mov	w19, #0x0                   	// #0
   20148:	ldp	x21, x22, [sp, #32]
   2014c:	ldp	x23, x24, [sp, #48]
   20150:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   20154:	ldr	w1, [x24, #8]
   20158:	mov	w0, #0x1                   	// #1
   2015c:	tbnz	w1, #31, 2017c <mpfr_pow_ui@@Base+0x304>
   20160:	str	w0, [x27, #8]
   20164:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   20168:	str	x0, [x27, #16]
   2016c:	mov	w19, #0x0                   	// #0
   20170:	ldp	x21, x22, [sp, #32]
   20174:	ldp	x23, x24, [sp, #48]
   20178:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   2017c:	mov	w0, #0xffffffff            	// #-1
   20180:	tst	x2, #0x1
   20184:	cneg	w0, w0, eq  // eq = none
   20188:	b	20160 <mpfr_pow_ui@@Base+0x2e8>
   2018c:	tbz	w2, #0, 20104 <mpfr_pow_ui@@Base+0x28c>
   20190:	mov	w0, #0xffffffff            	// #-1
   20194:	str	w0, [x27, #8]
   20198:	mov	w19, #0x0                   	// #0
   2019c:	ldp	x21, x22, [sp, #32]
   201a0:	ldp	x23, x24, [sp, #48]
   201a4:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   201a8:	cmp	x2, #0x1
   201ac:	b.ls	201d0 <mpfr_pow_ui@@Base+0x358>  // b.plast
   201b0:	ldr	w2, [sp, #96]
   201b4:	mov	x1, x24
   201b8:	mov	x0, x27
   201bc:	bl	c400 <mpfr_sqr@plt>
   201c0:	mov	w19, w0
   201c4:	ldp	x21, x22, [sp, #32]
   201c8:	ldp	x23, x24, [sp, #48]
   201cc:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   201d0:	ldr	w3, [x24, #8]
   201d4:	ldr	w2, [sp, #96]
   201d8:	mov	x1, x24
   201dc:	mov	x0, x27
   201e0:	bl	c6a0 <mpfr_set4@plt>
   201e4:	mov	w19, w0
   201e8:	ldp	x21, x22, [sp, #32]
   201ec:	ldp	x23, x24, [sp, #48]
   201f0:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   201f4:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   201f8:	add	x2, x2, #0x848
   201fc:	mov	w1, #0x5e                  	// #94
   20200:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   20204:	add	x0, x0, #0x860
   20208:	bl	cb40 <mpfr_assert_fail@plt>
   2020c:	b	1ff38 <mpfr_pow_ui@@Base+0xc0>
   20210:	mov	x0, #0x0                   	// #0
   20214:	b	1ff50 <mpfr_pow_ui@@Base+0xd8>
   20218:	mov	w3, w28
   2021c:	mov	x2, x24
   20220:	mov	x1, x20
   20224:	mov	x0, x20
   20228:	bl	bd50 <mpfr_mul@plt>
   2022c:	orr	w21, w21, w0
   20230:	b	1ffe0 <mpfr_pow_ui@@Base+0x168>
   20234:	mov	w3, w28
   20238:	mov	x2, x24
   2023c:	mov	x1, x20
   20240:	mov	x0, x20
   20244:	bl	bd50 <mpfr_mul@plt>
   20248:	orr	w21, w21, w0
   2024c:	sub	w19, w19, #0x1
   20250:	cmn	w19, #0x1
   20254:	b.eq	1ffec <mpfr_pow_ui@@Base+0x174>  // b.none
   20258:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2025c:	ldr	x1, [x0, #2576]
   20260:	add	x0, x0, #0xa10
   20264:	blr	x1
   20268:	ldr	w0, [x23, x0]
   2026c:	tst	w0, w26
   20270:	b.ne	1ffec <mpfr_pow_ui@@Base+0x174>  // b.any
   20274:	mov	w3, w25
   20278:	mov	x2, x20
   2027c:	mov	x1, x20
   20280:	mov	x0, x20
   20284:	bl	bd50 <mpfr_mul@plt>
   20288:	orr	w21, w21, w0
   2028c:	lsr	x0, x22, x19
   20290:	tbz	w0, #0, 2024c <mpfr_pow_ui@@Base+0x3d4>
   20294:	b	20234 <mpfr_pow_ui@@Base+0x3bc>
   20298:	tst	x0, #0x3
   2029c:	b.ne	20350 <mpfr_pow_ui@@Base+0x4d8>  // b.any
   202a0:	ldr	x1, [sp, #176]
   202a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   202a8:	cmp	x1, x0
   202ac:	b.le	202f4 <mpfr_pow_ui@@Base+0x47c>
   202b0:	ldr	w0, [sp, #96]
   202b4:	cmp	w0, #0x0
   202b8:	ldr	x3, [x27]
   202bc:	cinc	x3, x3, eq  // eq = none
   202c0:	ldr	x0, [sp, #120]
   202c4:	sub	x2, x0, #0x1
   202c8:	ldr	x0, [sp, #160]
   202cc:	add	x1, x0, #0x3e
   202d0:	subs	x0, x0, #0x1
   202d4:	csel	x1, x1, x0, mi  // mi = first
   202d8:	asr	x1, x1, #6
   202dc:	ldr	x0, [sp, #128]
   202e0:	sub	x2, x2, x0
   202e4:	add	x1, x1, #0x1
   202e8:	ldr	x0, [sp, #184]
   202ec:	bl	c370 <mpfr_round_p@plt>
   202f0:	cbnz	w0, 2000c <mpfr_pow_ui@@Base+0x194>
   202f4:	mov	x0, #0xfffffffffffffeff    	// #-257
   202f8:	movk	x0, #0x7fff, lsl #48
   202fc:	ldr	x1, [sp, #120]
   20300:	sub	x0, x0, x1
   20304:	ldr	x1, [sp, #136]
   20308:	cmp	x0, x1
   2030c:	b.lt	20338 <mpfr_pow_ui@@Base+0x4c0>  // b.tstop
   20310:	ldr	x0, [sp, #120]
   20314:	ldr	x1, [sp, #136]
   20318:	add	x1, x0, x1
   2031c:	str	x1, [sp, #120]
   20320:	add	x0, x1, x1, lsr #63
   20324:	asr	x0, x0, #1
   20328:	str	x0, [sp, #136]
   2032c:	mov	x0, x20
   20330:	bl	bed0 <mpfr_set_prec@plt>
   20334:	b	1ff88 <mpfr_pow_ui@@Base+0x110>
   20338:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2033c:	add	x2, x2, #0xd68
   20340:	mov	w1, #0x86                  	// #134
   20344:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   20348:	add	x0, x0, #0x860
   2034c:	bl	cb40 <mpfr_assert_fail@plt>
   20350:	add	x0, sp, #0xa0
   20354:	bl	c070 <mpfr_clear@plt>
   20358:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2035c:	ldr	x1, [x0, #2576]
   20360:	add	x0, x0, #0xa10
   20364:	blr	x1
   20368:	mrs	x1, tpidr_el0
   2036c:	ldr	w2, [sp, #100]
   20370:	str	w2, [x1, x0]
   20374:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20378:	ldr	x2, [x0, #2512]
   2037c:	add	x0, x0, #0x9d0
   20380:	blr	x2
   20384:	ldr	x2, [sp, #104]
   20388:	str	x2, [x1, x0]
   2038c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   20390:	ldr	x2, [x0, #2544]
   20394:	add	x0, x0, #0x9f0
   20398:	blr	x2
   2039c:	ldr	x2, [sp, #112]
   203a0:	str	x2, [x1, x0]
   203a4:	add	x20, sp, #0x90
   203a8:	mov	x0, x20
   203ac:	bl	bf90 <mpfr_mpz_init@plt>
   203b0:	mov	x1, x22
   203b4:	mov	x0, x20
   203b8:	bl	bcb0 <__gmpz_set_ui@plt>
   203bc:	ldr	w3, [sp, #96]
   203c0:	mov	x2, x20
   203c4:	mov	x1, x24
   203c8:	mov	x0, x27
   203cc:	bl	bef0 <mpfr_pow_z@plt>
   203d0:	mov	w19, w0
   203d4:	mov	x0, x20
   203d8:	bl	c170 <mpfr_mpz_clear@plt>
   203dc:	ldp	x21, x22, [sp, #32]
   203e0:	ldp	x23, x24, [sp, #48]
   203e4:	ldp	x25, x26, [sp, #64]
   203e8:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   203ec:	ldr	w2, [sp, #96]
   203f0:	mov	w1, w19
   203f4:	mov	x0, x27
   203f8:	bl	cb30 <mpfr_check_range@plt>
   203fc:	mov	w19, w0
   20400:	ldp	x21, x22, [sp, #32]
   20404:	ldp	x23, x24, [sp, #48]
   20408:	ldp	x25, x26, [sp, #64]
   2040c:	b	2041c <mpfr_pow_ui@@Base+0x5a4>
   20410:	ldp	x21, x22, [sp, #32]
   20414:	ldp	x23, x24, [sp, #48]
   20418:	ldp	x25, x26, [sp, #64]
   2041c:	mov	w0, w19
   20420:	ldp	x19, x20, [sp, #16]
   20424:	ldp	x27, x28, [sp, #80]
   20428:	ldp	x29, x30, [sp], #192
   2042c:	ret

0000000000020430 <mpfr_print_mant_binary@@Base>:
   20430:	stp	x29, x30, [sp, #-112]!
   20434:	mov	x29, sp
   20438:	stp	x19, x20, [sp, #16]
   2043c:	stp	x21, x22, [sp, #32]
   20440:	stp	x23, x24, [sp, #48]
   20444:	stp	x25, x26, [sp, #64]
   20448:	stp	x27, x28, [sp, #80]
   2044c:	mov	x24, x1
   20450:	mov	x23, x2
   20454:	add	x1, x2, #0x3e
   20458:	subs	x2, x2, #0x1
   2045c:	csel	x1, x1, x2, mi  // mi = first
   20460:	asr	x20, x1, #6
   20464:	str	x20, [sp, #104]
   20468:	mov	x1, x0
   2046c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   20470:	add	x0, x0, #0x870
   20474:	bl	cbf0 <printf@plt>
   20478:	mov	x21, #0x40                  	// #64
   2047c:	mov	x28, #0x0                   	// #0
   20480:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   20484:	ldr	x25, [x0, #3992]
   20488:	mov	x27, x25
   2048c:	mov	w26, #0x5b                  	// #91
   20490:	b	204f8 <mpfr_print_mant_binary@@Base+0xc8>
   20494:	ldr	x1, [x27]
   20498:	mov	w0, w26
   2049c:	bl	bd20 <putc@plt>
   204a0:	cmp	x19, x21
   204a4:	b.eq	204d4 <mpfr_print_mant_binary@@Base+0xa4>  // b.none
   204a8:	sub	w1, w22, w19
   204ac:	ldr	x0, [x24, x20, lsl #3]
   204b0:	lsr	x0, x0, x1
   204b4:	and	x0, x0, #0x1
   204b8:	ldr	x1, [x25]
   204bc:	add	w0, w0, #0x30
   204c0:	bl	bd20 <putc@plt>
   204c4:	add	x19, x19, #0x1
   204c8:	cmp	x23, x19
   204cc:	b.ne	204a0 <mpfr_print_mant_binary@@Base+0x70>  // b.any
   204d0:	b	20494 <mpfr_print_mant_binary@@Base+0x64>
   204d4:	add	x28, x28, #0x40
   204d8:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   204dc:	ldr	x0, [x0, #3992]
   204e0:	ldr	x1, [x0]
   204e4:	mov	w0, #0x2e                  	// #46
   204e8:	bl	bd20 <putc@plt>
   204ec:	add	x21, x21, #0x40
   204f0:	subs	x20, x20, #0x1
   204f4:	b.mi	20504 <mpfr_print_mant_binary@@Base+0xd4>  // b.first
   204f8:	mov	x19, x28
   204fc:	add	w22, w28, #0x3f
   20500:	b	204a8 <mpfr_print_mant_binary@@Base+0x78>
   20504:	ldr	x0, [sp, #104]
   20508:	cmp	x0, #0x0
   2050c:	csel	x0, x0, xzr, ge  // ge = tcont
   20510:	add	x0, x0, #0x1
   20514:	cmp	x23, x0, lsl #6
   20518:	b.le	2054c <mpfr_print_mant_binary@@Base+0x11c>
   2051c:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   20520:	ldr	x0, [x0, #3992]
   20524:	ldr	x1, [x0]
   20528:	mov	w0, #0xa                   	// #10
   2052c:	bl	bd20 <putc@plt>
   20530:	ldp	x19, x20, [sp, #16]
   20534:	ldp	x21, x22, [sp, #32]
   20538:	ldp	x23, x24, [sp, #48]
   2053c:	ldp	x25, x26, [sp, #64]
   20540:	ldp	x27, x28, [sp, #80]
   20544:	ldp	x29, x30, [sp], #112
   20548:	ret
   2054c:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   20550:	ldr	x0, [x0, #3992]
   20554:	ldr	x1, [x0]
   20558:	mov	w0, #0x5d                  	// #93
   2055c:	bl	bd20 <putc@plt>
   20560:	b	2051c <mpfr_print_mant_binary@@Base+0xec>

0000000000020564 <mpfr_print_rnd_mode@@Base>:
   20564:	mov	w2, w0
   20568:	cmp	w0, #0x3
   2056c:	b.eq	205bc <mpfr_print_rnd_mode@@Base+0x58>  // b.none
   20570:	b.gt	205a0 <mpfr_print_rnd_mode@@Base+0x3c>
   20574:	cmp	w0, #0x1
   20578:	b.eq	205c8 <mpfr_print_rnd_mode@@Base+0x64>  // b.none
   2057c:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   20580:	add	x0, x1, #0x888
   20584:	cmp	w2, #0x2
   20588:	b.eq	2059c <mpfr_print_rnd_mode@@Base+0x38>  // b.none
   2058c:	adrp	x1, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   20590:	add	x1, x1, #0x8a8
   20594:	cmp	w2, #0x0
   20598:	csel	x0, x1, xzr, eq  // eq = none
   2059c:	ret
   205a0:	cmp	w0, #0x4
   205a4:	b.eq	205d4 <mpfr_print_rnd_mode@@Base+0x70>  // b.none
   205a8:	cmp	w0, #0x5
   205ac:	b.ne	205e0 <mpfr_print_rnd_mode@@Base+0x7c>  // b.any
   205b0:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   205b4:	add	x0, x0, #0x8c8
   205b8:	b	2059c <mpfr_print_rnd_mode@@Base+0x38>
   205bc:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   205c0:	add	x0, x0, #0x898
   205c4:	b	2059c <mpfr_print_rnd_mode@@Base+0x38>
   205c8:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   205cc:	add	x0, x0, #0x878
   205d0:	b	2059c <mpfr_print_rnd_mode@@Base+0x38>
   205d4:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   205d8:	add	x0, x0, #0x8b8
   205dc:	b	2059c <mpfr_print_rnd_mode@@Base+0x38>
   205e0:	mov	x0, #0x0                   	// #0
   205e4:	b	2059c <mpfr_print_rnd_mode@@Base+0x38>

00000000000205e8 <mpfr_reldiff@@Base>:
   205e8:	stp	x29, x30, [sp, #-96]!
   205ec:	mov	x29, sp
   205f0:	stp	x19, x20, [sp, #16]
   205f4:	stp	x21, x22, [sp, #32]
   205f8:	mov	x19, x0
   205fc:	mov	x20, x1
   20600:	mov	x22, x2
   20604:	mov	w21, w3
   20608:	ldr	x0, [x1, #16]
   2060c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   20610:	cmp	x0, x1
   20614:	b.le	20678 <mpfr_reldiff@@Base+0x90>
   20618:	ldr	x2, [x2, #16]
   2061c:	cmp	x2, x1
   20620:	b.le	20770 <mpfr_reldiff@@Base+0x188>
   20624:	cmp	x20, x19
   20628:	b.eq	206fc <mpfr_reldiff@@Base+0x114>  // b.none
   2062c:	mov	w3, w21
   20630:	mov	x2, x22
   20634:	mov	x1, x20
   20638:	mov	x0, x19
   2063c:	bl	bb70 <mpfr_sub@plt>
   20640:	mov	w3, #0x1                   	// #1
   20644:	mov	w2, w21
   20648:	mov	x1, x19
   2064c:	mov	x0, x19
   20650:	bl	c6a0 <mpfr_set4@plt>
   20654:	mov	w3, w21
   20658:	mov	x2, x20
   2065c:	mov	x1, x19
   20660:	mov	x0, x19
   20664:	bl	c620 <mpfr_div@plt>
   20668:	ldp	x19, x20, [sp, #16]
   2066c:	ldp	x21, x22, [sp, #32]
   20670:	ldp	x29, x30, [sp], #96
   20674:	ret
   20678:	mov	x1, #0x2                   	// #2
   2067c:	movk	x1, #0x8000, lsl #48
   20680:	cmp	x0, x1
   20684:	b.eq	206c0 <mpfr_reldiff@@Base+0xd8>  // b.none
   20688:	ldr	x1, [x2, #16]
   2068c:	mov	x2, #0x2                   	// #2
   20690:	movk	x2, #0x8000, lsl #48
   20694:	cmp	x1, x2
   20698:	b.eq	206c0 <mpfr_reldiff@@Base+0xd8>  // b.none
   2069c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   206a0:	cmp	x0, x2
   206a4:	b.ne	20784 <mpfr_reldiff@@Base+0x19c>  // b.any
   206a8:	cmp	x1, x2
   206ac:	b.eq	206d0 <mpfr_reldiff@@Base+0xe8>  // b.none
   206b0:	mov	x0, #0x2                   	// #2
   206b4:	movk	x0, #0x8000, lsl #48
   206b8:	str	x0, [x19, #16]
   206bc:	b	20668 <mpfr_reldiff@@Base+0x80>
   206c0:	mov	x0, #0x2                   	// #2
   206c4:	movk	x0, #0x8000, lsl #48
   206c8:	str	x0, [x19, #16]
   206cc:	b	20668 <mpfr_reldiff@@Base+0x80>
   206d0:	ldr	w1, [x22, #8]
   206d4:	ldr	w0, [x20, #8]
   206d8:	cmp	w1, w0
   206dc:	b.ne	206b0 <mpfr_reldiff@@Base+0xc8>  // b.any
   206e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   206e4:	str	x0, [x19, #16]
   206e8:	b	20668 <mpfr_reldiff@@Base+0x80>
   206ec:	ldr	w0, [x20, #8]
   206f0:	str	w0, [x19, #8]
   206f4:	str	x2, [x19, #16]
   206f8:	b	20668 <mpfr_reldiff@@Base+0x80>
   206fc:	str	x23, [sp, #48]
   20700:	add	x23, sp, #0x40
   20704:	ldr	x1, [x20]
   20708:	mov	x0, x23
   2070c:	bl	ca80 <mpfr_init2@plt>
   20710:	ldr	w3, [x20, #8]
   20714:	mov	w2, #0x0                   	// #0
   20718:	mov	x1, x20
   2071c:	mov	x0, x23
   20720:	bl	c6a0 <mpfr_set4@plt>
   20724:	mov	w3, w21
   20728:	mov	x2, x22
   2072c:	mov	x1, x20
   20730:	mov	x0, x19
   20734:	bl	bb70 <mpfr_sub@plt>
   20738:	mov	w3, #0x1                   	// #1
   2073c:	mov	w2, w21
   20740:	mov	x1, x19
   20744:	mov	x0, x19
   20748:	bl	c6a0 <mpfr_set4@plt>
   2074c:	mov	w3, w21
   20750:	mov	x2, x23
   20754:	mov	x1, x19
   20758:	mov	x0, x19
   2075c:	bl	c620 <mpfr_div@plt>
   20760:	mov	x0, x23
   20764:	bl	c070 <mpfr_clear@plt>
   20768:	ldr	x23, [sp, #48]
   2076c:	b	20668 <mpfr_reldiff@@Base+0x80>
   20770:	ldr	x1, [x22, #16]
   20774:	mov	x2, #0x2                   	// #2
   20778:	movk	x2, #0x8000, lsl #48
   2077c:	cmp	x1, x2
   20780:	b.eq	206c0 <mpfr_reldiff@@Base+0xd8>  // b.none
   20784:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   20788:	cmp	x1, x2
   2078c:	b.eq	206ec <mpfr_reldiff@@Base+0x104>  // b.none
   20790:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   20794:	cmp	x0, x1
   20798:	b.ne	20624 <mpfr_reldiff@@Base+0x3c>  // b.any
   2079c:	mov	w3, w21
   207a0:	mov	x2, #0x0                   	// #0
   207a4:	ldrsw	x1, [x22, #8]
   207a8:	mov	x0, x19
   207ac:	bl	ba80 <mpfr_set_si_2exp@plt>
   207b0:	b	20668 <mpfr_reldiff@@Base+0x80>

00000000000207b4 <mpfr_round_raw@@Base>:
   207b4:	stp	x29, x30, [sp, #-48]!
   207b8:	mov	x29, sp
   207bc:	stp	x19, x20, [sp, #16]
   207c0:	mov	x19, x0
   207c4:	mov	x8, x2
   207c8:	mov	w20, #0x1                   	// #1
   207cc:	cmp	w5, #0x5
   207d0:	b.eq	20908 <mpfr_round_raw@@Base+0x154>  // b.none
   207d4:	add	x7, x8, #0x3e
   207d8:	subs	x2, x8, #0x1
   207dc:	csel	x7, x7, x2, mi  // mi = first
   207e0:	asr	x7, x7, #6
   207e4:	add	x7, x7, #0x1
   207e8:	add	x2, x4, #0x3f
   207ec:	cmp	x4, #0x0
   207f0:	csel	x2, x2, x4, lt  // lt = tstop
   207f4:	asr	x2, x2, #6
   207f8:	and	w0, w4, #0x3f
   207fc:	cmp	x8, x4
   20800:	b.le	20918 <mpfr_round_raw@@Base+0x164>
   20804:	str	x21, [sp, #32]
   20808:	cbnz	w20, 20820 <mpfr_round_raw@@Base+0x6c>
   2080c:	cmp	w5, #0x1
   20810:	b.eq	20bec <mpfr_round_raw@@Base+0x438>  // b.none
   20814:	add	w4, w5, w3
   20818:	cmp	w4, #0x3
   2081c:	b.eq	20bec <mpfr_round_raw@@Base+0x438>  // b.none
   20820:	sub	x4, x7, x2
   20824:	sub	x4, x4, #0x1
   20828:	cbz	w0, 20950 <mpfr_round_raw@@Base+0x19c>
   2082c:	add	x2, x2, #0x1
   20830:	neg	w21, w0
   20834:	mov	x8, #0x1                   	// #1
   20838:	lsl	x21, x8, x21
   2083c:	sub	x8, x21, #0x1
   20840:	neg	x21, x21
   20844:	ldr	x9, [x1, x4, lsl #3]
   20848:	and	x8, x8, x9
   2084c:	add	w9, w5, #0x1
   20850:	cmp	w9, #0x1
   20854:	b.ls	2095c <mpfr_round_raw@@Base+0x1a8>  // b.plast
   20858:	cmp	w5, #0x1
   2085c:	b.eq	20ae0 <mpfr_round_raw@@Base+0x32c>  // b.none
   20860:	add	w5, w5, w3
   20864:	cmp	w5, #0x3
   20868:	b.eq	20ae0 <mpfr_round_raw@@Base+0x32c>  // b.none
   2086c:	cmp	x4, #0x0
   20870:	ccmp	x8, #0x0, #0x0, gt
   20874:	b.eq	20b40 <mpfr_round_raw@@Base+0x38c>  // b.none
   20878:	cbz	x8, 20b58 <mpfr_round_raw@@Base+0x3a4>
   2087c:	mov	w4, #0x1                   	// #1
   20880:	sub	w3, w4, w3, lsl #1
   20884:	str	w3, [x6]
   20888:	sub	x7, x7, x2
   2088c:	add	x3, x1, x7, lsl #3
   20890:	neg	w5, w0
   20894:	mov	x4, #0x1                   	// #1
   20898:	lsl	x4, x4, x5
   2089c:	cmp	w0, #0x0
   208a0:	csinc	x0, x4, xzr, ne  // ne = any
   208a4:	ldr	x1, [x1, x7, lsl #3]
   208a8:	add	x1, x0, x1
   208ac:	str	x1, [x19]
   208b0:	cmp	x0, x1
   208b4:	b.hi	20b84 <mpfr_round_raw@@Base+0x3d0>  // b.pmore
   208b8:	mov	x20, #0x0                   	// #0
   208bc:	cmp	x3, x19
   208c0:	b.eq	208e8 <mpfr_round_raw@@Base+0x134>  // b.none
   208c4:	cmp	x2, #0x1
   208c8:	b.le	20be4 <mpfr_round_raw@@Base+0x430>
   208cc:	mov	x0, #0x1                   	// #1
   208d0:	ldr	x1, [x3, x0, lsl #3]
   208d4:	str	x1, [x19, x0, lsl #3]
   208d8:	add	x0, x0, #0x1
   208dc:	cmp	x2, x0
   208e0:	b.ne	208d0 <mpfr_round_raw@@Base+0x11c>  // b.any
   208e4:	mov	x20, #0x0                   	// #0
   208e8:	ldr	x0, [x19]
   208ec:	and	x21, x0, x21
   208f0:	str	x21, [x19]
   208f4:	ldr	x21, [sp, #32]
   208f8:	mov	w0, w20
   208fc:	ldp	x19, x20, [sp, #16]
   20900:	ldp	x29, x30, [sp], #48
   20904:	ret
   20908:	str	wzr, [x6]
   2090c:	mov	w20, #0x0                   	// #0
   20910:	mov	w5, #0x1                   	// #1
   20914:	b	207d4 <mpfr_round_raw@@Base+0x20>
   20918:	cmp	w0, #0x0
   2091c:	cinc	x2, x2, ne  // ne = any
   20920:	str	wzr, [x6]
   20924:	sub	x2, x2, x7
   20928:	lsl	x20, x2, #3
   2092c:	mov	x2, x7
   20930:	add	x0, x19, x20
   20934:	bl	bae0 <__gmpn_copyd@plt>
   20938:	mov	x2, x20
   2093c:	mov	w1, #0x0                   	// #0
   20940:	mov	x0, x19
   20944:	bl	c110 <memset@plt>
   20948:	mov	w20, #0x0                   	// #0
   2094c:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20950:	mov	x8, #0xffffffffffffffff    	// #-1
   20954:	mov	x21, x8
   20958:	b	20844 <mpfr_round_raw@@Base+0x90>
   2095c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   20960:	lsr	x9, x9, x0
   20964:	tst	x8, x9
   20968:	b.eq	20ae0 <mpfr_round_raw@@Base+0x32c>  // b.none
   2096c:	cmn	w5, #0x1
   20970:	b.eq	20a38 <mpfr_round_raw@@Base+0x284>  // b.none
   20974:	bic	x8, x8, x9
   20978:	cmp	x4, #0x0
   2097c:	ccmp	x8, #0x0, #0x0, gt
   20980:	b.eq	20a08 <mpfr_round_raw@@Base+0x254>  // b.none
   20984:	cbz	x8, 20a20 <mpfr_round_raw@@Base+0x26c>
   20988:	mov	w4, #0x1                   	// #1
   2098c:	sub	w3, w4, w3, lsl #1
   20990:	str	w3, [x6]
   20994:	sub	x7, x7, x2
   20998:	add	x3, x1, x7, lsl #3
   2099c:	neg	w5, w0
   209a0:	mov	x4, #0x1                   	// #1
   209a4:	lsl	x4, x4, x5
   209a8:	cmp	w0, #0x0
   209ac:	csinc	x0, x4, xzr, ne  // ne = any
   209b0:	ldr	x1, [x1, x7, lsl #3]
   209b4:	add	x1, x0, x1
   209b8:	str	x1, [x19]
   209bc:	cmp	x0, x1
   209c0:	b.hi	20a78 <mpfr_round_raw@@Base+0x2c4>  // b.pmore
   209c4:	mov	x20, #0x0                   	// #0
   209c8:	cmp	x3, x19
   209cc:	b.eq	209f4 <mpfr_round_raw@@Base+0x240>  // b.none
   209d0:	cmp	x2, #0x1
   209d4:	b.le	20ad8 <mpfr_round_raw@@Base+0x324>
   209d8:	mov	x0, #0x1                   	// #1
   209dc:	ldr	x1, [x3, x0, lsl #3]
   209e0:	str	x1, [x19, x0, lsl #3]
   209e4:	add	x0, x0, #0x1
   209e8:	cmp	x2, x0
   209ec:	b.ne	209dc <mpfr_round_raw@@Base+0x228>  // b.any
   209f0:	mov	x20, #0x0                   	// #0
   209f4:	ldr	x0, [x19]
   209f8:	and	x21, x0, x21
   209fc:	str	x21, [x19]
   20a00:	ldr	x21, [sp, #32]
   20a04:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20a08:	sub	x4, x4, #0x1
   20a0c:	ldr	x8, [x1, x4, lsl #3]
   20a10:	cmp	x4, #0x0
   20a14:	ccmp	x8, #0x0, #0x0, gt
   20a18:	b.ne	20984 <mpfr_round_raw@@Base+0x1d0>  // b.any
   20a1c:	b	20a08 <mpfr_round_raw@@Base+0x254>
   20a20:	sub	x5, x7, x2
   20a24:	add	x8, x1, x5, lsl #3
   20a28:	eor	x4, x21, x21, lsl #1
   20a2c:	ldr	x5, [x1, x5, lsl #3]
   20a30:	tst	x4, x5
   20a34:	b.eq	20a48 <mpfr_round_raw@@Base+0x294>  // b.none
   20a38:	mov	w4, #0x2                   	// #2
   20a3c:	sub	w3, w4, w3, lsl #2
   20a40:	str	w3, [x6]
   20a44:	b	20994 <mpfr_round_raw@@Base+0x1e0>
   20a48:	lsl	w0, w3, #2
   20a4c:	sub	w0, w0, #0x2
   20a50:	str	w0, [x6]
   20a54:	mov	x1, x8
   20a58:	mov	x0, x19
   20a5c:	bl	c520 <__gmpn_copyi@plt>
   20a60:	ldr	x0, [x19]
   20a64:	and	x21, x0, x21
   20a68:	str	x21, [x19]
   20a6c:	mov	w20, #0x0                   	// #0
   20a70:	ldr	x21, [sp, #32]
   20a74:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20a78:	mov	x1, #0x1                   	// #1
   20a7c:	cmp	x2, x1
   20a80:	b.le	20ac8 <mpfr_round_raw@@Base+0x314>
   20a84:	ldr	x0, [x3, x1, lsl #3]
   20a88:	add	x0, x0, #0x1
   20a8c:	str	x0, [x19, x1, lsl #3]
   20a90:	add	x1, x1, #0x1
   20a94:	cbz	x0, 20a7c <mpfr_round_raw@@Base+0x2c8>
   20a98:	mov	x20, #0x0                   	// #0
   20a9c:	cmp	x3, x19
   20aa0:	b.eq	209f4 <mpfr_round_raw@@Base+0x240>  // b.none
   20aa4:	cmp	x2, x1
   20aa8:	b.le	20ad0 <mpfr_round_raw@@Base+0x31c>
   20aac:	ldr	x0, [x3, x1, lsl #3]
   20ab0:	str	x0, [x19, x1, lsl #3]
   20ab4:	add	x1, x1, #0x1
   20ab8:	cmp	x2, x1
   20abc:	b.ne	20aac <mpfr_round_raw@@Base+0x2f8>  // b.any
   20ac0:	mov	x20, #0x0                   	// #0
   20ac4:	b	209f4 <mpfr_round_raw@@Base+0x240>
   20ac8:	mov	x20, #0x1                   	// #1
   20acc:	b	209f4 <mpfr_round_raw@@Base+0x240>
   20ad0:	mov	x20, #0x0                   	// #0
   20ad4:	b	209f4 <mpfr_round_raw@@Base+0x240>
   20ad8:	mov	x20, #0x0                   	// #0
   20adc:	b	209f4 <mpfr_round_raw@@Base+0x240>
   20ae0:	cmp	x4, #0x0
   20ae4:	ccmp	x8, #0x0, #0x0, gt
   20ae8:	b.eq	20b28 <mpfr_round_raw@@Base+0x374>  // b.none
   20aec:	lsl	w3, w3, #1
   20af0:	sub	w3, w3, #0x1
   20af4:	cmp	x8, #0x0
   20af8:	csel	w3, w3, wzr, ne  // ne = any
   20afc:	str	w3, [x6]
   20b00:	sub	x7, x7, x2
   20b04:	add	x1, x1, x7, lsl #3
   20b08:	mov	x0, x19
   20b0c:	bl	c520 <__gmpn_copyi@plt>
   20b10:	ldr	x0, [x19]
   20b14:	and	x21, x0, x21
   20b18:	str	x21, [x19]
   20b1c:	mov	w20, #0x0                   	// #0
   20b20:	ldr	x21, [sp, #32]
   20b24:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20b28:	sub	x4, x4, #0x1
   20b2c:	ldr	x8, [x1, x4, lsl #3]
   20b30:	cmp	x4, #0x0
   20b34:	ccmp	x8, #0x0, #0x0, gt
   20b38:	b.ne	20aec <mpfr_round_raw@@Base+0x338>  // b.any
   20b3c:	b	20b28 <mpfr_round_raw@@Base+0x374>
   20b40:	sub	x4, x4, #0x1
   20b44:	ldr	x8, [x1, x4, lsl #3]
   20b48:	cmp	x4, #0x0
   20b4c:	ccmp	x8, #0x0, #0x0, gt
   20b50:	b.ne	20878 <mpfr_round_raw@@Base+0xc4>  // b.any
   20b54:	b	20b40 <mpfr_round_raw@@Base+0x38c>
   20b58:	str	wzr, [x6]
   20b5c:	sub	x7, x7, x2
   20b60:	add	x1, x1, x7, lsl #3
   20b64:	mov	x0, x19
   20b68:	bl	c520 <__gmpn_copyi@plt>
   20b6c:	ldr	x0, [x19]
   20b70:	and	x21, x0, x21
   20b74:	str	x21, [x19]
   20b78:	mov	w20, #0x0                   	// #0
   20b7c:	ldr	x21, [sp, #32]
   20b80:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20b84:	mov	x1, #0x1                   	// #1
   20b88:	cmp	x2, x1
   20b8c:	b.le	20bd4 <mpfr_round_raw@@Base+0x420>
   20b90:	ldr	x0, [x3, x1, lsl #3]
   20b94:	add	x0, x0, #0x1
   20b98:	str	x0, [x19, x1, lsl #3]
   20b9c:	add	x1, x1, #0x1
   20ba0:	cbz	x0, 20b88 <mpfr_round_raw@@Base+0x3d4>
   20ba4:	mov	x20, #0x0                   	// #0
   20ba8:	cmp	x3, x19
   20bac:	b.eq	208e8 <mpfr_round_raw@@Base+0x134>  // b.none
   20bb0:	cmp	x2, x1
   20bb4:	b.le	20bdc <mpfr_round_raw@@Base+0x428>
   20bb8:	ldr	x0, [x3, x1, lsl #3]
   20bbc:	str	x0, [x19, x1, lsl #3]
   20bc0:	add	x1, x1, #0x1
   20bc4:	cmp	x2, x1
   20bc8:	b.ne	20bb8 <mpfr_round_raw@@Base+0x404>  // b.any
   20bcc:	mov	x20, #0x0                   	// #0
   20bd0:	b	208e8 <mpfr_round_raw@@Base+0x134>
   20bd4:	mov	x20, #0x1                   	// #1
   20bd8:	b	208e8 <mpfr_round_raw@@Base+0x134>
   20bdc:	mov	x20, #0x0                   	// #0
   20be0:	b	208e8 <mpfr_round_raw@@Base+0x134>
   20be4:	mov	x20, #0x0                   	// #0
   20be8:	b	208e8 <mpfr_round_raw@@Base+0x134>
   20bec:	cbz	w0, 20c28 <mpfr_round_raw@@Base+0x474>
   20bf0:	add	x2, x2, #0x1
   20bf4:	neg	w0, w0
   20bf8:	mov	x21, #0x1                   	// #1
   20bfc:	lsl	x0, x21, x0
   20c00:	neg	x21, x0
   20c04:	sub	x7, x7, x2
   20c08:	add	x1, x1, x7, lsl #3
   20c0c:	mov	x0, x19
   20c10:	bl	c520 <__gmpn_copyi@plt>
   20c14:	ldr	x0, [x19]
   20c18:	and	x21, x0, x21
   20c1c:	str	x21, [x19]
   20c20:	ldr	x21, [sp, #32]
   20c24:	b	208f8 <mpfr_round_raw@@Base+0x144>
   20c28:	mov	x21, #0xffffffffffffffff    	// #-1
   20c2c:	b	20c04 <mpfr_round_raw@@Base+0x450>

0000000000020c30 <mpfr_round_raw_2@@Base>:
   20c30:	mov	x6, x0
   20c34:	and	w5, w4, #0xfffffffb
   20c38:	cmp	w5, #0x1
   20c3c:	ccmp	x1, x3, #0x4, ne  // ne = any
   20c40:	mov	w0, #0x0                   	// #0
   20c44:	b.le	20cc8 <mpfr_round_raw_2@@Base+0x98>
   20c48:	add	w2, w2, w4
   20c4c:	mov	w0, #0x0                   	// #0
   20c50:	cmp	w2, #0x3
   20c54:	b.eq	20cc8 <mpfr_round_raw_2@@Base+0x98>  // b.none
   20c58:	add	x5, x3, #0x3f
   20c5c:	cmp	x3, #0x0
   20c60:	csel	x5, x5, x3, lt  // lt = tstop
   20c64:	asr	x5, x5, #6
   20c68:	ands	w3, w3, #0x3f
   20c6c:	b.eq	20ccc <mpfr_round_raw_2@@Base+0x9c>  // b.none
   20c70:	add	x10, x5, #0x1
   20c74:	neg	w0, w3
   20c78:	mov	x2, #0x1                   	// #1
   20c7c:	lsl	x0, x2, x0
   20c80:	sub	x8, x0, #0x1
   20c84:	neg	x7, x0
   20c88:	add	x2, x1, #0x3e
   20c8c:	subs	x1, x1, #0x1
   20c90:	csel	x1, x2, x1, mi  // mi = first
   20c94:	asr	x1, x1, #6
   20c98:	add	x9, x1, #0x1
   20c9c:	sub	x1, x1, x5
   20ca0:	ldr	x0, [x6, x1, lsl #3]
   20ca4:	and	x0, x8, x0
   20ca8:	add	w2, w4, #0x1
   20cac:	cmp	w2, #0x1
   20cb0:	b.ls	20cdc <mpfr_round_raw_2@@Base+0xac>  // b.plast
   20cb4:	cmp	x1, #0x0
   20cb8:	ccmp	x0, #0x0, #0x0, gt
   20cbc:	b.eq	20d68 <mpfr_round_raw_2@@Base+0x138>  // b.none
   20cc0:	cmp	x0, #0x0
   20cc4:	cset	w0, ne  // ne = any
   20cc8:	ret
   20ccc:	mov	x10, x5
   20cd0:	mov	x8, #0xffffffffffffffff    	// #-1
   20cd4:	mov	x7, x8
   20cd8:	b	20c88 <mpfr_round_raw_2@@Base+0x58>
   20cdc:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   20ce0:	lsr	x3, x2, x3
   20ce4:	tst	x0, x3
   20ce8:	b.eq	20d54 <mpfr_round_raw_2@@Base+0x124>  // b.none
   20cec:	cmn	w4, #0x1
   20cf0:	b.eq	20d80 <mpfr_round_raw_2@@Base+0x150>  // b.none
   20cf4:	bics	x3, x0, x3
   20cf8:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   20cfc:	b.gt	20d20 <mpfr_round_raw_2@@Base+0xf0>
   20d00:	mov	w0, #0x1                   	// #1
   20d04:	cbnz	x3, 20cc8 <mpfr_round_raw_2@@Base+0x98>
   20d08:	sub	x9, x9, x10
   20d0c:	eor	x0, x7, x7, lsl #1
   20d10:	ldr	x1, [x6, x9, lsl #3]
   20d14:	tst	x0, x1
   20d18:	cset	w0, ne  // ne = any
   20d1c:	b	20cc8 <mpfr_round_raw_2@@Base+0x98>
   20d20:	sub	x1, x1, #0x1
   20d24:	ldr	x3, [x6, x1, lsl #3]
   20d28:	cmp	x3, #0x0
   20d2c:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   20d30:	b.le	20d00 <mpfr_round_raw_2@@Base+0xd0>
   20d34:	b	20d20 <mpfr_round_raw_2@@Base+0xf0>
   20d38:	sub	x1, x1, #0x1
   20d3c:	ldr	x0, [x6, x1, lsl #3]
   20d40:	cmp	x0, #0x0
   20d44:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   20d48:	b.gt	20d38 <mpfr_round_raw_2@@Base+0x108>
   20d4c:	mov	w0, #0x0                   	// #0
   20d50:	b	20cc8 <mpfr_round_raw_2@@Base+0x98>
   20d54:	cmp	x1, #0x0
   20d58:	ccmp	x0, #0x0, #0x0, gt
   20d5c:	b.eq	20d38 <mpfr_round_raw_2@@Base+0x108>  // b.none
   20d60:	mov	w0, #0x0                   	// #0
   20d64:	b	20cc8 <mpfr_round_raw_2@@Base+0x98>
   20d68:	sub	x1, x1, #0x1
   20d6c:	ldr	x0, [x6, x1, lsl #3]
   20d70:	cmp	x1, #0x0
   20d74:	ccmp	x0, #0x0, #0x0, gt
   20d78:	b.ne	20cc0 <mpfr_round_raw_2@@Base+0x90>  // b.any
   20d7c:	b	20d68 <mpfr_round_raw_2@@Base+0x138>
   20d80:	mov	w0, #0x1                   	// #1
   20d84:	b	20cc8 <mpfr_round_raw_2@@Base+0x98>

0000000000020d88 <mpfr_round_raw_4@@Base>:
   20d88:	stp	x29, x30, [sp, #-32]!
   20d8c:	mov	x29, sp
   20d90:	stp	x19, x20, [sp, #16]
   20d94:	mov	x19, x0
   20d98:	mov	x0, x2
   20d9c:	cmp	w5, #0x5
   20da0:	csinc	w5, w5, wzr, ne  // ne = any
   20da4:	add	x6, x2, #0x3e
   20da8:	subs	x2, x2, #0x1
   20dac:	csel	x6, x6, x2, mi  // mi = first
   20db0:	asr	x6, x6, #6
   20db4:	add	x6, x6, #0x1
   20db8:	add	x2, x4, #0x3f
   20dbc:	cmp	x4, #0x0
   20dc0:	csel	x2, x2, x4, lt  // lt = tstop
   20dc4:	asr	x2, x2, #6
   20dc8:	and	w7, w4, #0x3f
   20dcc:	cmp	x0, x4
   20dd0:	b.le	20ea0 <mpfr_round_raw_4@@Base+0x118>
   20dd4:	cmp	w5, #0x1
   20dd8:	b.eq	21120 <mpfr_round_raw_4@@Base+0x398>  // b.none
   20ddc:	add	w3, w5, w3
   20de0:	cmp	w3, #0x3
   20de4:	b.eq	21120 <mpfr_round_raw_4@@Base+0x398>  // b.none
   20de8:	sub	x0, x6, x2
   20dec:	sub	x0, x0, #0x1
   20df0:	cbz	w7, 20ed4 <mpfr_round_raw_4@@Base+0x14c>
   20df4:	add	x2, x2, #0x1
   20df8:	neg	w20, w7
   20dfc:	mov	x3, #0x1                   	// #1
   20e00:	lsl	x20, x3, x20
   20e04:	sub	x3, x20, #0x1
   20e08:	neg	x20, x20
   20e0c:	ldr	x4, [x1, x0, lsl #3]
   20e10:	and	x3, x3, x4
   20e14:	add	w4, w5, #0x1
   20e18:	cmp	w4, #0x1
   20e1c:	b.ls	20ee0 <mpfr_round_raw_4@@Base+0x158>  // b.plast
   20e20:	cmp	x0, #0x0
   20e24:	ccmp	x3, #0x0, #0x0, gt
   20e28:	b.eq	2107c <mpfr_round_raw_4@@Base+0x2f4>  // b.none
   20e2c:	cbz	x3, 21094 <mpfr_round_raw_4@@Base+0x30c>
   20e30:	sub	x6, x6, x2
   20e34:	add	x3, x1, x6, lsl #3
   20e38:	neg	w4, w7
   20e3c:	mov	x0, #0x1                   	// #1
   20e40:	lsl	x0, x0, x4
   20e44:	cmp	w7, #0x0
   20e48:	csinc	x0, x0, xzr, ne  // ne = any
   20e4c:	ldr	x1, [x1, x6, lsl #3]
   20e50:	add	x1, x0, x1
   20e54:	str	x1, [x19]
   20e58:	cmp	x0, x1
   20e5c:	b.hi	210b8 <mpfr_round_raw_4@@Base+0x330>  // b.pmore
   20e60:	mov	x0, #0x0                   	// #0
   20e64:	cmp	x3, x19
   20e68:	b.eq	20e90 <mpfr_round_raw_4@@Base+0x108>  // b.none
   20e6c:	cmp	x2, #0x1
   20e70:	b.le	21118 <mpfr_round_raw_4@@Base+0x390>
   20e74:	mov	x0, #0x1                   	// #1
   20e78:	ldr	x1, [x3, x0, lsl #3]
   20e7c:	str	x1, [x19, x0, lsl #3]
   20e80:	add	x0, x0, #0x1
   20e84:	cmp	x2, x0
   20e88:	b.ne	20e78 <mpfr_round_raw_4@@Base+0xf0>  // b.any
   20e8c:	mov	x0, #0x0                   	// #0
   20e90:	ldr	x1, [x19]
   20e94:	and	x20, x1, x20
   20e98:	str	x20, [x19]
   20e9c:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   20ea0:	cmp	w7, #0x0
   20ea4:	cinc	x2, x2, ne  // ne = any
   20ea8:	sub	x2, x2, x6
   20eac:	lsl	x20, x2, #3
   20eb0:	mov	x2, x6
   20eb4:	add	x0, x19, x20
   20eb8:	bl	bae0 <__gmpn_copyd@plt>
   20ebc:	mov	x2, x20
   20ec0:	mov	w1, #0x0                   	// #0
   20ec4:	mov	x0, x19
   20ec8:	bl	c110 <memset@plt>
   20ecc:	mov	w0, #0x0                   	// #0
   20ed0:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   20ed4:	mov	x3, #0xffffffffffffffff    	// #-1
   20ed8:	mov	x20, x3
   20edc:	b	20e0c <mpfr_round_raw_4@@Base+0x84>
   20ee0:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   20ee4:	lsr	x4, x4, x7
   20ee8:	tst	x3, x4
   20eec:	b.eq	20f7c <mpfr_round_raw_4@@Base+0x1f4>  // b.none
   20ef0:	cmn	w5, #0x1
   20ef4:	b.eq	20f0c <mpfr_round_raw_4@@Base+0x184>  // b.none
   20ef8:	bic	x3, x3, x4
   20efc:	cmp	x0, #0x0
   20f00:	ccmp	x3, #0x0, #0x0, gt
   20f04:	b.eq	20fac <mpfr_round_raw_4@@Base+0x224>  // b.none
   20f08:	cbz	x3, 20fc4 <mpfr_round_raw_4@@Base+0x23c>
   20f0c:	sub	x6, x6, x2
   20f10:	add	x3, x1, x6, lsl #3
   20f14:	neg	w4, w7
   20f18:	mov	x0, #0x1                   	// #1
   20f1c:	lsl	x0, x0, x4
   20f20:	cmp	w7, #0x0
   20f24:	csinc	x0, x0, xzr, ne  // ne = any
   20f28:	ldr	x1, [x1, x6, lsl #3]
   20f2c:	add	x1, x0, x1
   20f30:	str	x1, [x19]
   20f34:	cmp	x0, x1
   20f38:	b.hi	20ffc <mpfr_round_raw_4@@Base+0x274>  // b.pmore
   20f3c:	mov	x0, #0x0                   	// #0
   20f40:	cmp	x3, x19
   20f44:	b.eq	20f6c <mpfr_round_raw_4@@Base+0x1e4>  // b.none
   20f48:	cmp	x2, #0x1
   20f4c:	b.le	2105c <mpfr_round_raw_4@@Base+0x2d4>
   20f50:	mov	x0, #0x1                   	// #1
   20f54:	ldr	x1, [x3, x0, lsl #3]
   20f58:	str	x1, [x19, x0, lsl #3]
   20f5c:	add	x0, x0, #0x1
   20f60:	cmp	x2, x0
   20f64:	b.ne	20f54 <mpfr_round_raw_4@@Base+0x1cc>  // b.any
   20f68:	mov	x0, #0x0                   	// #0
   20f6c:	ldr	x1, [x19]
   20f70:	and	x20, x1, x20
   20f74:	str	x20, [x19]
   20f78:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   20f7c:	cmp	x3, #0x0
   20f80:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   20f84:	b.gt	21064 <mpfr_round_raw_4@@Base+0x2dc>
   20f88:	sub	x6, x6, x2
   20f8c:	add	x1, x1, x6, lsl #3
   20f90:	mov	x0, x19
   20f94:	bl	c520 <__gmpn_copyi@plt>
   20f98:	ldr	x0, [x19]
   20f9c:	and	x20, x0, x20
   20fa0:	str	x20, [x19]
   20fa4:	mov	w0, #0x0                   	// #0
   20fa8:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   20fac:	sub	x0, x0, #0x1
   20fb0:	ldr	x3, [x1, x0, lsl #3]
   20fb4:	cmp	x0, #0x0
   20fb8:	ccmp	x3, #0x0, #0x0, gt
   20fbc:	b.ne	20f08 <mpfr_round_raw_4@@Base+0x180>  // b.any
   20fc0:	b	20fac <mpfr_round_raw_4@@Base+0x224>
   20fc4:	sub	x3, x6, x2
   20fc8:	add	x4, x1, x3, lsl #3
   20fcc:	eor	x0, x20, x20, lsl #1
   20fd0:	ldr	x3, [x1, x3, lsl #3]
   20fd4:	tst	x0, x3
   20fd8:	b.ne	20f0c <mpfr_round_raw_4@@Base+0x184>  // b.any
   20fdc:	mov	x1, x4
   20fe0:	mov	x0, x19
   20fe4:	bl	c520 <__gmpn_copyi@plt>
   20fe8:	ldr	x0, [x19]
   20fec:	and	x20, x0, x20
   20ff0:	str	x20, [x19]
   20ff4:	mov	w0, #0x0                   	// #0
   20ff8:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   20ffc:	mov	x1, #0x1                   	// #1
   21000:	cmp	x2, x1
   21004:	b.le	2104c <mpfr_round_raw_4@@Base+0x2c4>
   21008:	ldr	x0, [x3, x1, lsl #3]
   2100c:	add	x0, x0, #0x1
   21010:	str	x0, [x19, x1, lsl #3]
   21014:	add	x1, x1, #0x1
   21018:	cbz	x0, 21000 <mpfr_round_raw_4@@Base+0x278>
   2101c:	mov	x0, #0x0                   	// #0
   21020:	cmp	x3, x19
   21024:	b.eq	20f6c <mpfr_round_raw_4@@Base+0x1e4>  // b.none
   21028:	cmp	x2, x1
   2102c:	b.le	21054 <mpfr_round_raw_4@@Base+0x2cc>
   21030:	ldr	x0, [x3, x1, lsl #3]
   21034:	str	x0, [x19, x1, lsl #3]
   21038:	add	x1, x1, #0x1
   2103c:	cmp	x2, x1
   21040:	b.ne	21030 <mpfr_round_raw_4@@Base+0x2a8>  // b.any
   21044:	mov	x0, #0x0                   	// #0
   21048:	b	20f6c <mpfr_round_raw_4@@Base+0x1e4>
   2104c:	mov	x0, #0x1                   	// #1
   21050:	b	20f6c <mpfr_round_raw_4@@Base+0x1e4>
   21054:	mov	x0, #0x0                   	// #0
   21058:	b	20f6c <mpfr_round_raw_4@@Base+0x1e4>
   2105c:	mov	x0, #0x0                   	// #0
   21060:	b	20f6c <mpfr_round_raw_4@@Base+0x1e4>
   21064:	sub	x0, x0, #0x1
   21068:	ldr	x3, [x1, x0, lsl #3]
   2106c:	cmp	x3, #0x0
   21070:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   21074:	b.le	20f88 <mpfr_round_raw_4@@Base+0x200>
   21078:	b	21064 <mpfr_round_raw_4@@Base+0x2dc>
   2107c:	sub	x0, x0, #0x1
   21080:	ldr	x3, [x1, x0, lsl #3]
   21084:	cmp	x0, #0x0
   21088:	ccmp	x3, #0x0, #0x0, gt
   2108c:	b.ne	20e2c <mpfr_round_raw_4@@Base+0xa4>  // b.any
   21090:	b	2107c <mpfr_round_raw_4@@Base+0x2f4>
   21094:	sub	x6, x6, x2
   21098:	add	x1, x1, x6, lsl #3
   2109c:	mov	x0, x19
   210a0:	bl	c520 <__gmpn_copyi@plt>
   210a4:	ldr	x0, [x19]
   210a8:	and	x20, x0, x20
   210ac:	str	x20, [x19]
   210b0:	mov	w0, #0x0                   	// #0
   210b4:	b	21158 <mpfr_round_raw_4@@Base+0x3d0>
   210b8:	mov	x1, #0x1                   	// #1
   210bc:	cmp	x2, x1
   210c0:	b.le	21108 <mpfr_round_raw_4@@Base+0x380>
   210c4:	ldr	x0, [x3, x1, lsl #3]
   210c8:	add	x0, x0, #0x1
   210cc:	str	x0, [x19, x1, lsl #3]
   210d0:	add	x1, x1, #0x1
   210d4:	cbz	x0, 210bc <mpfr_round_raw_4@@Base+0x334>
   210d8:	mov	x0, #0x0                   	// #0
   210dc:	cmp	x3, x19
   210e0:	b.eq	20e90 <mpfr_round_raw_4@@Base+0x108>  // b.none
   210e4:	cmp	x2, x1
   210e8:	b.le	21110 <mpfr_round_raw_4@@Base+0x388>
   210ec:	ldr	x0, [x3, x1, lsl #3]
   210f0:	str	x0, [x19, x1, lsl #3]
   210f4:	add	x1, x1, #0x1
   210f8:	cmp	x2, x1
   210fc:	b.ne	210ec <mpfr_round_raw_4@@Base+0x364>  // b.any
   21100:	mov	x0, #0x0                   	// #0
   21104:	b	20e90 <mpfr_round_raw_4@@Base+0x108>
   21108:	mov	x0, #0x1                   	// #1
   2110c:	b	20e90 <mpfr_round_raw_4@@Base+0x108>
   21110:	mov	x0, #0x0                   	// #0
   21114:	b	20e90 <mpfr_round_raw_4@@Base+0x108>
   21118:	mov	x0, #0x0                   	// #0
   2111c:	b	20e90 <mpfr_round_raw_4@@Base+0x108>
   21120:	cbz	w7, 21164 <mpfr_round_raw_4@@Base+0x3dc>
   21124:	add	x2, x2, #0x1
   21128:	neg	w0, w7
   2112c:	mov	x20, #0x1                   	// #1
   21130:	lsl	x0, x20, x0
   21134:	neg	x20, x0
   21138:	sub	x6, x6, x2
   2113c:	add	x1, x1, x6, lsl #3
   21140:	mov	x0, x19
   21144:	bl	c520 <__gmpn_copyi@plt>
   21148:	ldr	x0, [x19]
   2114c:	and	x20, x0, x20
   21150:	str	x20, [x19]
   21154:	mov	w0, #0x0                   	// #0
   21158:	ldp	x19, x20, [sp, #16]
   2115c:	ldp	x29, x30, [sp], #32
   21160:	ret
   21164:	mov	x20, #0xffffffffffffffff    	// #-1
   21168:	b	21138 <mpfr_round_raw_4@@Base+0x3b0>

000000000002116c <mpfr_prec_round@@Base>:
   2116c:	stp	x29, x30, [sp, #-96]!
   21170:	mov	x29, sp
   21174:	stp	x19, x20, [sp, #16]
   21178:	stp	x21, x22, [sp, #32]
   2117c:	stp	x23, x24, [sp, #48]
   21180:	stp	x25, x26, [sp, #64]
   21184:	mov	x20, x0
   21188:	mov	x21, x1
   2118c:	sub	x1, x1, #0x1
   21190:	mov	x0, #0xfffffffffffffefe    	// #-258
   21194:	movk	x0, #0x7fff, lsl #48
   21198:	cmp	x1, x0
   2119c:	b.hi	21270 <mpfr_prec_round@@Base+0x104>  // b.pmore
   211a0:	mov	w22, w2
   211a4:	add	x19, x21, #0x3e
   211a8:	subs	x0, x21, #0x1
   211ac:	csel	x19, x19, x0, mi  // mi = first
   211b0:	asr	x19, x19, #6
   211b4:	add	x24, x19, #0x1
   211b8:	ldr	x3, [x20]
   211bc:	add	x0, x3, #0x3e
   211c0:	subs	x3, x3, #0x1
   211c4:	csel	x3, x0, x3, mi  // mi = first
   211c8:	cmp	x19, x3, asr #6
   211cc:	b.gt	21288 <mpfr_prec_round@@Base+0x11c>
   211d0:	ldr	x1, [x20, #16]
   211d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   211d8:	cmp	x1, x0
   211dc:	b.le	212c0 <mpfr_prec_round@@Base+0x154>
   211e0:	str	xzr, [x29, #80]
   211e4:	lsl	x23, x24, #3
   211e8:	cmp	x23, #0x4, lsl #12
   211ec:	b.hi	21304 <mpfr_prec_round@@Base+0x198>  // b.pmore
   211f0:	add	x0, x23, #0xf
   211f4:	and	x0, x0, #0xfffffffffffffff0
   211f8:	sub	sp, sp, x0
   211fc:	mov	x25, sp
   21200:	ldr	x26, [x20, #24]
   21204:	ldr	w3, [x20, #8]
   21208:	add	x6, x29, #0x5c
   2120c:	mov	w5, w22
   21210:	mov	x4, x21
   21214:	lsr	w3, w3, #31
   21218:	ldr	x2, [x20]
   2121c:	mov	x1, x26
   21220:	mov	x0, x25
   21224:	bl	ca20 <mpfr_round_raw@plt>
   21228:	str	x21, [x20]
   2122c:	cbnz	w0, 21318 <mpfr_prec_round@@Base+0x1ac>
   21230:	cmp	x25, x26
   21234:	b.eq	21248 <mpfr_prec_round@@Base+0xdc>  // b.none
   21238:	mov	x2, x23
   2123c:	mov	x1, x25
   21240:	mov	x0, x26
   21244:	bl	ba10 <memcpy@plt>
   21248:	ldr	x0, [x29, #80]
   2124c:	cbnz	x0, 21380 <mpfr_prec_round@@Base+0x214>
   21250:	ldr	w0, [x29, #92]
   21254:	mov	sp, x29
   21258:	ldp	x19, x20, [sp, #16]
   2125c:	ldp	x21, x22, [sp, #32]
   21260:	ldp	x23, x24, [sp, #48]
   21264:	ldp	x25, x26, [sp, #64]
   21268:	ldp	x29, x30, [sp], #96
   2126c:	ret
   21270:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   21274:	add	x2, x2, #0x8d8
   21278:	mov	w1, #0x3b                  	// #59
   2127c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   21280:	add	x0, x0, #0x928
   21284:	bl	cb40 <mpfr_assert_fail@plt>
   21288:	ldr	x0, [x20, #24]
   2128c:	ldur	x1, [x0, #-8]
   21290:	cmp	x24, x1
   21294:	b.le	211d0 <mpfr_prec_round@@Base+0x64>
   21298:	add	x2, x19, #0x2
   2129c:	add	x1, x1, #0x1
   212a0:	lsl	x2, x2, #3
   212a4:	lsl	x1, x1, #3
   212a8:	sub	x0, x0, #0x8
   212ac:	bl	c1c0 <mpfr_reallocate_func@plt>
   212b0:	add	x1, x0, #0x8
   212b4:	str	x1, [x20, #24]
   212b8:	str	x24, [x0]
   212bc:	b	211d0 <mpfr_prec_round@@Base+0x64>
   212c0:	str	x21, [x20]
   212c4:	mov	w0, #0x0                   	// #0
   212c8:	mov	x2, #0x2                   	// #2
   212cc:	movk	x2, #0x8000, lsl #48
   212d0:	cmp	x1, x2
   212d4:	b.ne	21254 <mpfr_prec_round@@Base+0xe8>  // b.any
   212d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   212dc:	ldr	x1, [x0, #2576]
   212e0:	add	x0, x0, #0xa10
   212e4:	blr	x1
   212e8:	mrs	x1, tpidr_el0
   212ec:	add	x0, x1, x0
   212f0:	ldr	w1, [x0]
   212f4:	orr	w1, w1, #0x4
   212f8:	str	w1, [x0]
   212fc:	mov	w0, #0x0                   	// #0
   21300:	b	21254 <mpfr_prec_round@@Base+0xe8>
   21304:	mov	x1, x23
   21308:	add	x0, x29, #0x50
   2130c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   21310:	mov	x25, x0
   21314:	b	21200 <mpfr_prec_round@@Base+0x94>
   21318:	ldr	x1, [x20, #16]
   2131c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   21320:	ldr	x2, [x0, #2544]
   21324:	add	x0, x0, #0x9f0
   21328:	blr	x2
   2132c:	mrs	x2, tpidr_el0
   21330:	ldr	x0, [x2, x0]
   21334:	cmp	x0, x1
   21338:	b.eq	2136c <mpfr_prec_round@@Base+0x200>  // b.none
   2133c:	add	x1, x1, #0x1
   21340:	str	x1, [x20, #16]
   21344:	add	x23, x26, x23
   21348:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2134c:	stur	x0, [x23, #-8]
   21350:	cmp	x24, #0x1
   21354:	b.le	21248 <mpfr_prec_round@@Base+0xdc>
   21358:	lsl	x2, x19, #3
   2135c:	mov	w1, #0x0                   	// #0
   21360:	mov	x0, x26
   21364:	bl	c110 <memset@plt>
   21368:	b	21248 <mpfr_prec_round@@Base+0xdc>
   2136c:	ldr	w2, [x20, #8]
   21370:	mov	w1, w22
   21374:	mov	x0, x20
   21378:	bl	bf40 <mpfr_overflow@plt>
   2137c:	b	21248 <mpfr_prec_round@@Base+0xdc>
   21380:	bl	c410 <mpfr_tmp_free@plt>
   21384:	b	21250 <mpfr_prec_round@@Base+0xe4>

0000000000021388 <mpfr_can_round_raw@@Base>:
   21388:	stp	x29, x30, [sp, #-176]!
   2138c:	mov	x29, sp
   21390:	stp	x19, x20, [sp, #16]
   21394:	stp	x21, x22, [sp, #32]
   21398:	stp	x23, x24, [sp, #48]
   2139c:	stp	x25, x26, [sp, #64]
   213a0:	stp	x27, x28, [sp, #80]
   213a4:	cmp	x6, #0x0
   213a8:	b.le	21400 <mpfr_can_round_raw@@Base+0x78>
   213ac:	mov	x25, x0
   213b0:	mov	x21, x1
   213b4:	mov	x23, x3
   213b8:	mov	w22, w4
   213bc:	mov	w24, w5
   213c0:	mov	x20, x6
   213c4:	lsr	w0, w2, #31
   213c8:	str	w0, [x29, #140]
   213cc:	cmp	w4, #0x5
   213d0:	b.eq	21b24 <mpfr_can_round_raw@@Base+0x79c>  // b.none
   213d4:	cbz	w4, 21b24 <mpfr_can_round_raw@@Base+0x79c>
   213d8:	cmp	w4, #0x1
   213dc:	b.eq	213f0 <mpfr_can_round_raw@@Base+0x68>  // b.none
   213e0:	add	w22, w0, w4
   213e4:	cmp	w22, #0x3
   213e8:	mov	w22, #0x4                   	// #4
   213ec:	csinc	w22, w22, wzr, ne  // ne = any
   213f0:	cmp	w24, #0x5
   213f4:	b.ne	21b30 <mpfr_can_round_raw@@Base+0x7a8>  // b.any
   213f8:	mov	w24, #0x1                   	// #1
   213fc:	b	21b50 <mpfr_can_round_raw@@Base+0x7c8>
   21400:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   21404:	add	x2, x2, #0x938
   21408:	mov	w1, #0xbf                  	// #191
   2140c:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   21410:	add	x0, x0, #0x928
   21414:	bl	cb40 <mpfr_assert_fail@plt>
   21418:	mov	w22, #0x0                   	// #0
   2141c:	mov	w24, #0x0                   	// #0
   21420:	b	21b50 <mpfr_can_round_raw@@Base+0x7c8>
   21424:	cmp	w22, #0x4
   21428:	ccmp	w24, #0x1, #0x4, ne  // ne = any
   2142c:	b.ne	21b70 <mpfr_can_round_raw@@Base+0x7e8>  // b.any
   21430:	mov	w19, #0x0                   	// #0
   21434:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21438:	cmp	w24, #0x0
   2143c:	ccmp	w24, w22, #0x4, ne  // ne = any
   21440:	mov	w19, #0x0                   	// #0
   21444:	ccmp	x20, x23, #0x0, eq  // eq = none
   21448:	b.ge	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.tcont
   2144c:	mov	w19, w22
   21450:	cmp	w22, #0x1
   21454:	b.eq	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.none
   21458:	add	x20, x20, #0x1
   2145c:	mov	w19, #0x1                   	// #1
   21460:	cmp	x20, x23
   21464:	b.ne	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.any
   21468:	mov	x1, x21
   2146c:	mov	x0, x25
   21470:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   21474:	cmp	w0, #0x0
   21478:	cset	w19, eq  // eq = none
   2147c:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21480:	mov	x1, x21
   21484:	mov	x0, x25
   21488:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   2148c:	cbz	w0, 214c0 <mpfr_can_round_raw@@Base+0x138>
   21490:	cmp	w24, #0x1
   21494:	ccmp	w24, #0x4, #0x4, ne  // ne = any
   21498:	mov	w19, #0x0                   	// #0
   2149c:	ccmp	w24, w22, #0x4, eq  // eq = none
   214a0:	b.ne	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.any
   214a4:	mov	w19, w22
   214a8:	cmp	w22, #0x1
   214ac:	b.eq	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.none
   214b0:	add	x20, x20, #0x1
   214b4:	cmp	x20, x23
   214b8:	cset	w19, lt  // lt = tstop
   214bc:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   214c0:	cbnz	w24, 21570 <mpfr_can_round_raw@@Base+0x1e8>
   214c4:	add	x3, x20, #0x1
   214c8:	cmp	x3, x23
   214cc:	b.eq	21560 <mpfr_can_round_raw@@Base+0x1d8>  // b.none
   214d0:	mov	w19, #0x1                   	// #1
   214d4:	cmp	x26, x20
   214d8:	b.le	2197c <mpfr_can_round_raw@@Base+0x5f4>
   214dc:	add	x0, x20, #0x3f
   214e0:	cmp	x20, #0x0
   214e4:	csel	x0, x0, x20, lt  // lt = tstop
   214e8:	asr	x0, x0, #6
   214ec:	add	x0, x0, #0x1
   214f0:	sub	x0, x21, x0
   214f4:	mvn	w1, w20
   214f8:	ldr	x0, [x25, x0, lsl #3]
   214fc:	lsr	x0, x0, x1
   21500:	tbz	w0, #0, 2197c <mpfr_can_round_raw@@Base+0x5f4>
   21504:	mov	w4, #0x4                   	// #4
   21508:	ldr	w2, [x29, #140]
   2150c:	mov	x1, x26
   21510:	mov	x0, x25
   21514:	bl	c760 <mpfr_round_raw_2@plt>
   21518:	cbnz	w0, 2197c <mpfr_can_round_raw@@Base+0x5f4>
   2151c:	mov	w19, w22
   21520:	cbz	w22, 2197c <mpfr_can_round_raw@@Base+0x5f4>
   21524:	add	x0, x20, #0x3e
   21528:	subs	x1, x20, #0x1
   2152c:	csel	x0, x0, x1, mi  // mi = first
   21530:	asr	x0, x0, #6
   21534:	add	x0, x0, #0x1
   21538:	sub	x21, x21, x0
   2153c:	neg	w20, w20
   21540:	ldr	x19, [x25, x21, lsl #3]
   21544:	lsr	x19, x19, x20
   21548:	eor	x19, x19, #0x1
   2154c:	and	w19, w19, #0x1
   21550:	cmp	w22, #0x1
   21554:	cset	w0, eq  // eq = none
   21558:	eor	w19, w0, w19
   2155c:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21560:	ldr	x0, [x25]
   21564:	mov	w19, w24
   21568:	tbz	w0, #0, 214d0 <mpfr_can_round_raw@@Base+0x148>
   2156c:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21570:	mov	w19, #0x1                   	// #1
   21574:	cmp	w24, w22
   21578:	b.eq	2197c <mpfr_can_round_raw@@Base+0x5f4>  // b.none
   2157c:	mov	w4, #0x4                   	// #4
   21580:	mov	x3, x20
   21584:	ldr	w2, [x29, #140]
   21588:	mov	x1, x26
   2158c:	mov	x0, x25
   21590:	bl	c760 <mpfr_round_raw_2@plt>
   21594:	cmp	w0, #0x0
   21598:	cset	w19, ne  // ne = any
   2159c:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   215a0:	mov	x1, x26
   215a4:	add	x0, x29, #0xa8
   215a8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   215ac:	mov	x27, x0
   215b0:	b	21bf8 <mpfr_can_round_raw@@Base+0x870>
   215b4:	sub	x2, x21, x0
   215b8:	lsl	x2, x2, #3
   215bc:	mov	x1, x25
   215c0:	mov	x0, x27
   215c4:	bl	ba10 <memcpy@plt>
   215c8:	b	21c08 <mpfr_can_round_raw@@Base+0x880>
   215cc:	cmp	x5, x4
   215d0:	b.eq	21c9c <mpfr_can_round_raw@@Base+0x914>  // b.none
   215d4:	ldr	x2, [x29, #144]
   215d8:	cmp	x2, x1
   215dc:	b.le	21c9c <mpfr_can_round_raw@@Base+0x914>
   215e0:	ldr	x2, [x4, x3, lsl #3]
   215e4:	str	x2, [x5, x3, lsl #3]
   215e8:	ldr	x2, [x29, #144]
   215ec:	cmp	x2, x3
   215f0:	add	x3, x3, #0x1
   215f4:	b.gt	215e0 <mpfr_can_round_raw@@Base+0x258>
   215f8:	b	21c9c <mpfr_can_round_raw@@Base+0x914>
   215fc:	ldr	x1, [x29, #144]
   21600:	add	x6, x1, #0x1
   21604:	mov	x1, #0x1                   	// #1
   21608:	cmp	x6, x1
   2160c:	b.eq	2162c <mpfr_can_round_raw@@Base+0x2a4>  // b.none
   21610:	ldr	x2, [x4, x1, lsl #3]
   21614:	add	x2, x2, #0x1
   21618:	str	x2, [x5, x1, lsl #3]
   2161c:	add	x3, x1, #0x1
   21620:	cbnz	x2, 215cc <mpfr_can_round_raw@@Base+0x244>
   21624:	mov	x1, x3
   21628:	b	21608 <mpfr_can_round_raw@@Base+0x280>
   2162c:	cmp	x20, #0x80
   21630:	b.le	21690 <mpfr_can_round_raw@@Base+0x308>
   21634:	sub	x1, x26, #0x8
   21638:	add	x25, x25, x1
   2163c:	mov	x1, #0x1                   	// #1
   21640:	ldr	x3, [x25, x1, lsl #3]
   21644:	cmn	x3, #0x1
   21648:	cset	w2, eq  // eq = none
   2164c:	add	x1, x1, #0x1
   21650:	cmp	w2, #0x0
   21654:	ccmp	x1, x19, #0x0, ne  // ne = any
   21658:	b.lt	21640 <mpfr_can_round_raw@@Base+0x2b8>  // b.tstop
   2165c:	and	x2, x2, #0xff
   21660:	cmp	x20, x23
   21664:	mov	w19, #0x0                   	// #0
   21668:	ccmn	x3, #0x1, #0x4, eq  // eq = none
   2166c:	b.ne	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.any
   21670:	ldrb	w1, [x29, #136]
   21674:	lsr	x22, x22, x1
   21678:	and	x22, x22, #0x1
   2167c:	sxtw	x0, w0
   21680:	cbnz	x2, 21698 <mpfr_can_round_raw@@Base+0x310>
   21684:	eor	x0, x0, x22
   21688:	str	x0, [x29, #104]
   2168c:	b	21934 <mpfr_can_round_raw@@Base+0x5ac>
   21690:	mov	x2, #0x1                   	// #1
   21694:	b	21670 <mpfr_can_round_raw@@Base+0x2e8>
   21698:	mov	w19, #0x0                   	// #0
   2169c:	cmp	w24, #0x1
   216a0:	b.eq	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   216a4:	cmp	x0, x22
   216a8:	cset	w19, eq  // eq = none
   216ac:	cmp	w24, #0x4
   216b0:	b.ne	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.any
   216b4:	cmp	x20, x23
   216b8:	mov	w19, #0x0                   	// #0
   216bc:	ldr	x0, [x29, #152]
   216c0:	ccmp	x21, x0, #0x0, lt  // lt = tstop
   216c4:	b.ne	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.any
   216c8:	ldr	x0, [x27]
   216cc:	cmp	x0, #0x0
   216d0:	cset	w19, eq  // eq = none
   216d4:	b	21974 <mpfr_can_round_raw@@Base+0x5ec>
   216d8:	ldr	x0, [x29, #152]
   216dc:	sub	x2, x21, x0
   216e0:	lsl	x3, x2, #3
   216e4:	add	x4, x27, x3
   216e8:	add	x3, x25, x3
   216ec:	mov	x1, #0x1                   	// #1
   216f0:	ldrb	w0, [x29, #124]
   216f4:	lsl	x1, x1, x0
   216f8:	ldr	x0, [x25, x2, lsl #3]
   216fc:	add	x0, x1, x0
   21700:	str	x0, [x27, x2, lsl #3]
   21704:	cmp	x1, x0
   21708:	b.hi	217ac <mpfr_can_round_raw@@Base+0x424>  // b.pmore
   2170c:	cmp	x4, x3
   21710:	b.eq	21740 <mpfr_can_round_raw@@Base+0x3b8>  // b.none
   21714:	ldr	x0, [x29, #152]
   21718:	cmp	x0, #0x1
   2171c:	b.le	21740 <mpfr_can_round_raw@@Base+0x3b8>
   21720:	ldr	x0, [x29, #144]
   21724:	add	x2, x0, #0x1
   21728:	mov	x0, #0x1                   	// #1
   2172c:	ldr	x1, [x3, x0, lsl #3]
   21730:	str	x1, [x4, x0, lsl #3]
   21734:	add	x0, x0, #0x1
   21738:	cmp	x2, x0
   2173c:	b.ne	2172c <mpfr_can_round_raw@@Base+0x3a4>  // b.any
   21740:	add	x0, x27, x26
   21744:	ldur	x22, [x0, #-8]
   21748:	ldrb	w0, [x29, #136]
   2174c:	lsr	x22, x22, x0
   21750:	and	x22, x22, #0x1
   21754:	mov	w4, w24
   21758:	ldr	x3, [x29, #128]
   2175c:	ldr	w2, [x29, #140]
   21760:	lsl	x1, x21, #6
   21764:	mov	x0, x27
   21768:	bl	c760 <mpfr_round_raw_2@plt>
   2176c:	sxtw	x0, w0
   21770:	eor	x0, x0, x22
   21774:	str	x0, [x29, #104]
   21778:	b	21a9c <mpfr_can_round_raw@@Base+0x714>
   2177c:	cmp	x4, x3
   21780:	b.eq	21740 <mpfr_can_round_raw@@Base+0x3b8>  // b.none
   21784:	ldr	x1, [x29, #144]
   21788:	cmp	x1, x0
   2178c:	b.le	21740 <mpfr_can_round_raw@@Base+0x3b8>
   21790:	ldr	x1, [x3, x2, lsl #3]
   21794:	str	x1, [x4, x2, lsl #3]
   21798:	ldr	x1, [x29, #144]
   2179c:	cmp	x1, x2
   217a0:	add	x2, x2, #0x1
   217a4:	b.gt	21790 <mpfr_can_round_raw@@Base+0x408>
   217a8:	b	21740 <mpfr_can_round_raw@@Base+0x3b8>
   217ac:	ldr	x0, [x29, #144]
   217b0:	add	x5, x0, #0x1
   217b4:	mov	x0, #0x1                   	// #1
   217b8:	cmp	x0, x5
   217bc:	b.eq	217dc <mpfr_can_round_raw@@Base+0x454>  // b.none
   217c0:	ldr	x1, [x3, x0, lsl #3]
   217c4:	add	x1, x1, #0x1
   217c8:	str	x1, [x4, x0, lsl #3]
   217cc:	add	x2, x0, #0x1
   217d0:	cbnz	x1, 2177c <mpfr_can_round_raw@@Base+0x3f4>
   217d4:	mov	x0, x2
   217d8:	b	217b8 <mpfr_can_round_raw@@Base+0x430>
   217dc:	cmp	x20, #0x80
   217e0:	b.le	21cbc <mpfr_can_round_raw@@Base+0x934>
   217e4:	sub	x1, x26, #0x8
   217e8:	add	x1, x25, x1
   217ec:	mov	x0, #0x1                   	// #1
   217f0:	ldr	x28, [x1, x0, lsl #3]
   217f4:	add	x0, x0, #0x1
   217f8:	cmp	x0, x19
   217fc:	ccmn	x28, #0x1, #0x0, lt  // lt = tstop
   21800:	b.eq	217f0 <mpfr_can_round_raw@@Base+0x468>  // b.none
   21804:	add	x0, x27, x26
   21808:	ldur	x0, [x0, #-8]
   2180c:	ldrb	w1, [x29, #136]
   21810:	lsr	x0, x0, x1
   21814:	and	x0, x0, #0x1
   21818:	str	x0, [x29, #104]
   2181c:	mov	w4, w24
   21820:	ldr	x3, [x29, #128]
   21824:	ldr	w2, [x29, #140]
   21828:	lsl	x1, x21, #6
   2182c:	mov	x0, x27
   21830:	bl	c760 <mpfr_round_raw_2@plt>
   21834:	sxtw	x0, w0
   21838:	ldr	x1, [x29, #104]
   2183c:	eor	x0, x0, x1
   21840:	str	x0, [x29, #104]
   21844:	cmn	x28, #0x1
   21848:	b.ne	21a9c <mpfr_can_round_raw@@Base+0x714>  // b.any
   2184c:	mov	w19, w22
   21850:	cmp	w24, #0x1
   21854:	b.eq	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   21858:	cmp	w24, #0x4
   2185c:	b.eq	21870 <mpfr_can_round_raw@@Base+0x4e8>  // b.none
   21860:	add	x20, x20, #0x1
   21864:	cmp	x20, x23
   21868:	cset	w19, lt  // lt = tstop
   2186c:	b	21974 <mpfr_can_round_raw@@Base+0x5ec>
   21870:	add	x20, x20, #0x1
   21874:	cmp	x20, x23
   21878:	ldr	x0, [x29, #152]
   2187c:	ccmp	x21, x0, #0x0, lt  // lt = tstop
   21880:	b.ne	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.any
   21884:	ldr	x0, [x27]
   21888:	cmp	x0, #0x0
   2188c:	cset	w19, eq  // eq = none
   21890:	b	21974 <mpfr_can_round_raw@@Base+0x5ec>
   21894:	cmp	x4, x2
   21898:	b.eq	21b04 <mpfr_can_round_raw@@Base+0x77c>  // b.none
   2189c:	ldr	x3, [x29, #144]
   218a0:	cmp	x3, x0
   218a4:	b.le	21b04 <mpfr_can_round_raw@@Base+0x77c>
   218a8:	ldr	x3, [x2, x1, lsl #3]
   218ac:	str	x3, [x4, x1, lsl #3]
   218b0:	ldr	x3, [x29, #144]
   218b4:	cmp	x3, x1
   218b8:	add	x1, x1, #0x1
   218bc:	b.gt	218a8 <mpfr_can_round_raw@@Base+0x520>
   218c0:	b	21b04 <mpfr_can_round_raw@@Base+0x77c>
   218c4:	ldr	x0, [x29, #144]
   218c8:	add	x5, x0, #0x1
   218cc:	mov	x0, #0x1                   	// #1
   218d0:	cmp	x5, x0
   218d4:	b.eq	218f4 <mpfr_can_round_raw@@Base+0x56c>  // b.none
   218d8:	ldr	x3, [x2, x0, lsl #3]
   218dc:	sub	x1, x3, #0x1
   218e0:	str	x1, [x4, x0, lsl #3]
   218e4:	add	x1, x0, #0x1
   218e8:	cbnz	x3, 21894 <mpfr_can_round_raw@@Base+0x50c>
   218ec:	mov	x0, x1
   218f0:	b	218d0 <mpfr_can_round_raw@@Base+0x548>
   218f4:	sub	x3, x26, #0x8
   218f8:	cmp	x20, #0x40
   218fc:	b.le	219a0 <mpfr_can_round_raw@@Base+0x618>
   21900:	add	x2, x25, x26
   21904:	mov	x0, #0x0                   	// #0
   21908:	ldr	x1, [x2, x0, lsl #3]
   2190c:	add	x0, x0, #0x1
   21910:	cmp	x1, #0x0
   21914:	ccmp	x19, x0, #0x4, eq  // eq = none
   21918:	b.gt	21908 <mpfr_can_round_raw@@Base+0x580>
   2191c:	sub	x1, x1, #0x1
   21920:	cmp	x19, x0
   21924:	b.eq	219ac <mpfr_can_round_raw@@Base+0x624>  // b.none
   21928:	ldr	x0, [x29, #112]
   2192c:	cmp	x0, x23
   21930:	b.eq	219fc <mpfr_can_round_raw@@Base+0x674>  // b.none
   21934:	add	x26, x27, x26
   21938:	ldur	x0, [x26, #-8]
   2193c:	ldrb	w1, [x29, #136]
   21940:	lsr	x0, x0, x1
   21944:	and	x19, x0, #0x1
   21948:	mov	w4, w24
   2194c:	ldr	x3, [x29, #128]
   21950:	ldr	w2, [x29, #140]
   21954:	lsl	x1, x21, #6
   21958:	mov	x0, x27
   2195c:	bl	c760 <mpfr_round_raw_2@plt>
   21960:	sxtw	x0, w0
   21964:	eor	x0, x0, x19
   21968:	ldr	x1, [x29, #104]
   2196c:	cmp	x0, x1
   21970:	cset	w19, eq  // eq = none
   21974:	ldr	x0, [x29, #168]
   21978:	cbnz	x0, 21b14 <mpfr_can_round_raw@@Base+0x78c>
   2197c:	mov	w0, w19
   21980:	mov	sp, x29
   21984:	ldp	x19, x20, [sp, #16]
   21988:	ldp	x21, x22, [sp, #32]
   2198c:	ldp	x23, x24, [sp, #48]
   21990:	ldp	x25, x26, [sp, #64]
   21994:	ldp	x27, x28, [sp, #80]
   21998:	ldp	x29, x30, [sp], #176
   2199c:	ret
   219a0:	ldr	x1, [x27, x3]
   219a4:	mov	x0, #0x0                   	// #0
   219a8:	b	21920 <mpfr_can_round_raw@@Base+0x598>
   219ac:	tbnz	x1, #63, 21928 <mpfr_can_round_raw@@Base+0x5a0>
   219b0:	mov	w19, #0x0                   	// #0
   219b4:	cmp	w24, #0x1
   219b8:	b.eq	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   219bc:	ldr	w0, [x29, #120]
   219c0:	cmp	w0, #0x0
   219c4:	ccmp	w24, #0x4, #0x0, ne  // ne = any
   219c8:	ldr	x0, [x29, #104]
   219cc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   219d0:	b.ne	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.any
   219d4:	mov	w4, w24
   219d8:	ldr	x0, [x29, #128]
   219dc:	add	x3, x0, #0x1
   219e0:	ldr	w2, [x29, #140]
   219e4:	lsl	x1, x21, #6
   219e8:	mov	x0, x27
   219ec:	bl	c760 <mpfr_round_raw_2@plt>
   219f0:	cmp	w0, #0x0
   219f4:	cset	w19, ne  // ne = any
   219f8:	b	21974 <mpfr_can_round_raw@@Base+0x5ec>
   219fc:	mov	w19, #0x0                   	// #0
   21a00:	cbnz	w24, 21974 <mpfr_can_round_raw@@Base+0x5ec>
   21a04:	ldr	x0, [x25, x3]
   21a08:	ldrb	w1, [x29, #136]
   21a0c:	lsr	x0, x0, x1
   21a10:	mov	w19, w24
   21a14:	tbnz	w0, #0, 21974 <mpfr_can_round_raw@@Base+0x5ec>
   21a18:	lsl	x21, x21, #6
   21a1c:	mov	w4, #0x1                   	// #1
   21a20:	ldr	x22, [x29, #128]
   21a24:	mov	x3, x22
   21a28:	ldr	w20, [x29, #140]
   21a2c:	mov	w2, w20
   21a30:	mov	x1, x21
   21a34:	mov	x0, x25
   21a38:	bl	c760 <mpfr_round_raw_2@plt>
   21a3c:	mov	w19, w0
   21a40:	mov	w4, #0x4                   	// #4
   21a44:	mov	x3, x22
   21a48:	mov	w2, w20
   21a4c:	mov	x1, x21
   21a50:	mov	x0, x25
   21a54:	bl	c760 <mpfr_round_raw_2@plt>
   21a58:	cmp	w19, w0
   21a5c:	cset	w19, eq  // eq = none
   21a60:	b	21974 <mpfr_can_round_raw@@Base+0x5ec>
   21a64:	add	x0, x25, x26
   21a68:	ldur	x22, [x0, #-8]
   21a6c:	ldrb	w0, [x29, #136]
   21a70:	lsr	x22, x22, x0
   21a74:	and	x22, x22, #0x1
   21a78:	mov	w4, w24
   21a7c:	ldr	x3, [x29, #128]
   21a80:	ldr	w2, [x29, #140]
   21a84:	lsl	x1, x21, #6
   21a88:	mov	x0, x25
   21a8c:	bl	c760 <mpfr_round_raw_2@plt>
   21a90:	sxtw	x0, w0
   21a94:	eor	x0, x0, x22
   21a98:	str	x0, [x29, #104]
   21a9c:	ldr	x0, [x29, #152]
   21aa0:	sub	x1, x21, x0
   21aa4:	lsl	x2, x1, #3
   21aa8:	add	x4, x27, x2
   21aac:	add	x2, x25, x2
   21ab0:	mov	x0, #0x1                   	// #1
   21ab4:	ldrb	w3, [x29, #124]
   21ab8:	lsl	x0, x0, x3
   21abc:	ldr	x3, [x25, x1, lsl #3]
   21ac0:	sub	x5, x3, x0
   21ac4:	str	x5, [x27, x1, lsl #3]
   21ac8:	cmp	x0, x3
   21acc:	b.hi	218c4 <mpfr_can_round_raw@@Base+0x53c>  // b.pmore
   21ad0:	cmp	x4, x2
   21ad4:	b.eq	21b04 <mpfr_can_round_raw@@Base+0x77c>  // b.none
   21ad8:	ldr	x0, [x29, #152]
   21adc:	cmp	x0, #0x1
   21ae0:	b.le	21b04 <mpfr_can_round_raw@@Base+0x77c>
   21ae4:	ldr	x0, [x29, #144]
   21ae8:	add	x3, x0, #0x1
   21aec:	mov	x0, #0x1                   	// #1
   21af0:	ldr	x1, [x2, x0, lsl #3]
   21af4:	str	x1, [x4, x0, lsl #3]
   21af8:	add	x0, x0, #0x1
   21afc:	cmp	x3, x0
   21b00:	b.ne	21af0 <mpfr_can_round_raw@@Base+0x768>  // b.any
   21b04:	sub	x3, x26, #0x8
   21b08:	ldr	x1, [x27, x3]
   21b0c:	mov	x0, #0x0                   	// #0
   21b10:	b	21920 <mpfr_can_round_raw@@Base+0x598>
   21b14:	bl	c410 <mpfr_tmp_free@plt>
   21b18:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21b1c:	mov	w19, #0x0                   	// #0
   21b20:	b	2197c <mpfr_can_round_raw@@Base+0x5f4>
   21b24:	mov	w22, #0x0                   	// #0
   21b28:	cmp	w24, #0x5
   21b2c:	b.eq	21418 <mpfr_can_round_raw@@Base+0x90>  // b.none
   21b30:	cbz	w24, 21b50 <mpfr_can_round_raw@@Base+0x7c8>
   21b34:	cmp	w24, #0x1
   21b38:	b.eq	21b50 <mpfr_can_round_raw@@Base+0x7c8>  // b.none
   21b3c:	ldr	w0, [x29, #140]
   21b40:	add	w24, w0, w24
   21b44:	cmp	w24, #0x3
   21b48:	mov	w24, #0x4                   	// #4
   21b4c:	csinc	w24, w24, wzr, ne  // ne = any
   21b50:	cmp	w22, #0x0
   21b54:	cset	w0, eq  // eq = none
   21b58:	str	w0, [x29, #120]
   21b5c:	cinc	x0, x20, eq  // eq = none
   21b60:	str	x0, [x29, #112]
   21b64:	cmp	x0, x23
   21b68:	b.gt	21b1c <mpfr_can_round_raw@@Base+0x794>
   21b6c:	b.eq	21424 <mpfr_can_round_raw@@Base+0x9c>  // b.none
   21b70:	lsl	x26, x21, #6
   21b74:	cmp	x20, x21, lsl #6
   21b78:	b.gt	21438 <mpfr_can_round_raw@@Base+0xb0>
   21b7c:	cmp	x26, x23
   21b80:	b.lt	21480 <mpfr_can_round_raw@@Base+0xf8>  // b.tstop
   21b84:	add	x0, x23, #0x3e
   21b88:	subs	x1, x23, #0x1
   21b8c:	csel	x0, x0, x1, mi  // mi = first
   21b90:	asr	x0, x0, #6
   21b94:	neg	w1, w23
   21b98:	and	w1, w1, #0x3f
   21b9c:	str	w1, [x29, #124]
   21ba0:	add	x19, x20, #0x3e
   21ba4:	subs	x1, x20, #0x1
   21ba8:	csel	x19, x19, x1, mi  // mi = first
   21bac:	asr	x19, x19, #6
   21bb0:	neg	w1, w20
   21bb4:	and	w1, w1, #0x3f
   21bb8:	str	w1, [x29, #136]
   21bbc:	sub	x0, x0, x19
   21bc0:	str	x0, [x29, #144]
   21bc4:	sub	x21, x21, x19
   21bc8:	sub	x1, x20, x19, lsl #6
   21bcc:	str	x1, [x29, #128]
   21bd0:	str	xzr, [x29, #168]
   21bd4:	add	x0, x0, #0x1
   21bd8:	str	x0, [x29, #152]
   21bdc:	lsl	x26, x21, #3
   21be0:	cmp	x26, #0x4, lsl #12
   21be4:	b.hi	215a0 <mpfr_can_round_raw@@Base+0x218>  // b.pmore
   21be8:	add	x0, x26, #0xf
   21bec:	and	x0, x0, #0xfffffffffffffff0
   21bf0:	sub	sp, sp, x0
   21bf4:	mov	x27, sp
   21bf8:	cmp	x27, x25
   21bfc:	ldr	x0, [x29, #152]
   21c00:	ccmp	x21, x0, #0x4, ne  // ne = any
   21c04:	b.gt	215b4 <mpfr_can_round_raw@@Base+0x22c>
   21c08:	cbz	w22, 216d8 <mpfr_can_round_raw@@Base+0x350>
   21c0c:	cmp	w22, #0x1
   21c10:	b.ne	21a64 <mpfr_can_round_raw@@Base+0x6dc>  // b.any
   21c14:	add	x0, x25, x26
   21c18:	ldur	x22, [x0, #-8]
   21c1c:	mov	w4, w24
   21c20:	ldr	x3, [x29, #128]
   21c24:	ldr	w2, [x29, #140]
   21c28:	lsl	x1, x21, #6
   21c2c:	mov	x0, x25
   21c30:	bl	c760 <mpfr_round_raw_2@plt>
   21c34:	ldr	x1, [x29, #152]
   21c38:	sub	x3, x21, x1
   21c3c:	lsl	x4, x3, #3
   21c40:	add	x5, x27, x4
   21c44:	add	x4, x25, x4
   21c48:	mov	x2, #0x1                   	// #1
   21c4c:	ldrb	w1, [x29, #124]
   21c50:	lsl	x2, x2, x1
   21c54:	ldr	x1, [x25, x3, lsl #3]
   21c58:	add	x1, x2, x1
   21c5c:	str	x1, [x27, x3, lsl #3]
   21c60:	cmp	x2, x1
   21c64:	b.hi	215fc <mpfr_can_round_raw@@Base+0x274>  // b.pmore
   21c68:	cmp	x5, x4
   21c6c:	b.eq	21c9c <mpfr_can_round_raw@@Base+0x914>  // b.none
   21c70:	ldr	x1, [x29, #152]
   21c74:	cmp	x1, #0x1
   21c78:	b.le	21c9c <mpfr_can_round_raw@@Base+0x914>
   21c7c:	ldr	x1, [x29, #144]
   21c80:	add	x3, x1, #0x1
   21c84:	mov	x1, #0x1                   	// #1
   21c88:	ldr	x2, [x4, x1, lsl #3]
   21c8c:	str	x2, [x5, x1, lsl #3]
   21c90:	add	x1, x1, #0x1
   21c94:	cmp	x3, x1
   21c98:	b.ne	21c88 <mpfr_can_round_raw@@Base+0x900>  // b.any
   21c9c:	mov	w19, #0x0                   	// #0
   21ca0:	cmp	x20, x23
   21ca4:	b.eq	21974 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   21ca8:	ldrb	w1, [x29, #136]
   21cac:	lsr	x22, x22, x1
   21cb0:	and	x22, x22, #0x1
   21cb4:	sxtw	x0, w0
   21cb8:	b	21684 <mpfr_can_round_raw@@Base+0x2fc>
   21cbc:	mov	w4, w24
   21cc0:	ldr	x3, [x29, #128]
   21cc4:	ldr	w2, [x29, #140]
   21cc8:	lsl	x1, x21, #6
   21ccc:	mov	x0, x27
   21cd0:	bl	c760 <mpfr_round_raw_2@plt>
   21cd4:	b	2184c <mpfr_can_round_raw@@Base+0x4c4>

0000000000021cd8 <mpfr_can_round@@Base>:
   21cd8:	mov	w5, w3
   21cdc:	mov	x6, x4
   21ce0:	ldr	x4, [x0, #16]
   21ce4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   21ce8:	cmp	x4, x3
   21cec:	b.le	21d2c <mpfr_can_round@@Base+0x54>
   21cf0:	stp	x29, x30, [sp, #-16]!
   21cf4:	mov	x29, sp
   21cf8:	ldr	x8, [x0]
   21cfc:	add	x7, x8, #0x3e
   21d00:	subs	x8, x8, #0x1
   21d04:	csel	x7, x7, x8, mi  // mi = first
   21d08:	asr	x7, x7, #6
   21d0c:	mov	w4, w2
   21d10:	mov	x3, x1
   21d14:	ldr	w2, [x0, #8]
   21d18:	add	x1, x7, #0x1
   21d1c:	ldr	x0, [x0, #24]
   21d20:	bl	c350 <mpfr_can_round_raw@plt>
   21d24:	ldp	x29, x30, [sp], #16
   21d28:	ret
   21d2c:	mov	w0, #0x0                   	// #0
   21d30:	ret

0000000000021d34 <mpfr_set4@@Base>:
   21d34:	stp	x29, x30, [sp, #-48]!
   21d38:	mov	x29, sp
   21d3c:	str	x21, [sp, #32]
   21d40:	mov	x8, x0
   21d44:	mov	w9, w2
   21d48:	str	w3, [x0, #8]
   21d4c:	ldr	x0, [x1, #16]
   21d50:	str	x0, [x8, #16]
   21d54:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   21d58:	cmp	x0, x2
   21d5c:	b.le	21e88 <mpfr_set4@@Base+0x154>
   21d60:	ldr	x6, [x1]
   21d64:	ldr	x5, [x8]
   21d68:	cmp	x6, x5
   21d6c:	b.eq	21ec4 <mpfr_set4@@Base+0x190>  // b.none
   21d70:	stp	x19, x20, [sp, #16]
   21d74:	ldr	x19, [x8, #24]
   21d78:	b.le	21ef8 <mpfr_set4@@Base+0x1c4>
   21d7c:	add	x4, x6, #0x3e
   21d80:	subs	x6, x6, #0x1
   21d84:	csel	x4, x4, x6, mi  // mi = first
   21d88:	asr	x4, x4, #6
   21d8c:	add	x0, x5, #0x3e
   21d90:	subs	x2, x5, #0x1
   21d94:	csel	x0, x0, x2, mi  // mi = first
   21d98:	asr	x11, x0, #6
   21d9c:	add	x2, x11, #0x1
   21da0:	neg	w5, w5
   21da4:	sub	x12, x4, x11
   21da8:	ldr	x13, [x1, #24]
   21dac:	add	x1, x13, x12, lsl #3
   21db0:	ands	w5, w5, #0x3f
   21db4:	b.eq	21f58 <mpfr_set4@@Base+0x224>  // b.none
   21db8:	sub	w7, w5, #0x1
   21dbc:	mov	x6, #0x1                   	// #1
   21dc0:	lsl	x6, x6, x7
   21dc4:	ldr	x5, [x13, x12, lsl #3]
   21dc8:	and	x10, x5, x6
   21dcc:	sub	x6, x6, #0x1
   21dd0:	and	x5, x6, x5
   21dd4:	cmp	w9, #0x0
   21dd8:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   21ddc:	b.ne	21e04 <mpfr_set4@@Base+0xd0>  // b.any
   21de0:	subs	x4, x4, x11
   21de4:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   21de8:	b.ne	21e04 <mpfr_set4@@Base+0xd0>  // b.any
   21dec:	mvn	x0, x4
   21df0:	add	x0, x1, x0, lsl #3
   21df4:	ldr	x5, [x0, x4, lsl #3]
   21df8:	subs	x4, x4, #0x1
   21dfc:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   21e00:	b.eq	21df4 <mpfr_set4@@Base+0xc0>  // b.none
   21e04:	mov	x20, #0x2                   	// #2
   21e08:	lsl	x20, x20, x7
   21e0c:	cmp	w9, #0x5
   21e10:	b.eq	21fa8 <mpfr_set4@@Base+0x274>  // b.none
   21e14:	cbnz	w9, 2208c <mpfr_set4@@Base+0x358>
   21e18:	cbnz	x10, 21fc4 <mpfr_set4@@Base+0x290>
   21e1c:	orr	x5, x10, x5
   21e20:	cmp	x5, #0x0
   21e24:	csneg	w21, wzr, w3, eq  // eq = none
   21e28:	cmp	x19, x1
   21e2c:	b.eq	21e3c <mpfr_set4@@Base+0x108>  // b.none
   21e30:	lsl	x2, x2, #3
   21e34:	mov	x0, x19
   21e38:	bl	ba10 <memcpy@plt>
   21e3c:	neg	x7, x20
   21e40:	ldr	x0, [x19]
   21e44:	and	x7, x0, x7
   21e48:	str	x7, [x19]
   21e4c:	cbz	w21, 22100 <mpfr_set4@@Base+0x3cc>
   21e50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   21e54:	ldr	x1, [x0, #2576]
   21e58:	add	x0, x0, #0xa10
   21e5c:	blr	x1
   21e60:	mrs	x1, tpidr_el0
   21e64:	add	x0, x1, x0
   21e68:	ldr	w1, [x0]
   21e6c:	orr	w1, w1, #0x8
   21e70:	str	w1, [x0]
   21e74:	ldp	x19, x20, [sp, #16]
   21e78:	mov	w0, w21
   21e7c:	ldr	x21, [sp, #32]
   21e80:	ldp	x29, x30, [sp], #48
   21e84:	ret
   21e88:	mov	w21, #0x0                   	// #0
   21e8c:	mov	x1, #0x2                   	// #2
   21e90:	movk	x1, #0x8000, lsl #48
   21e94:	cmp	x0, x1
   21e98:	b.ne	21e78 <mpfr_set4@@Base+0x144>  // b.any
   21e9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   21ea0:	ldr	x1, [x0, #2576]
   21ea4:	add	x0, x0, #0xa10
   21ea8:	blr	x1
   21eac:	mrs	x1, tpidr_el0
   21eb0:	add	x0, x1, x0
   21eb4:	ldr	w1, [x0]
   21eb8:	orr	w1, w1, #0x4
   21ebc:	str	w1, [x0]
   21ec0:	b	21e78 <mpfr_set4@@Base+0x144>
   21ec4:	ldr	x0, [x8, #24]
   21ec8:	ldr	x1, [x1, #24]
   21ecc:	mov	w21, #0x0                   	// #0
   21ed0:	cmp	x0, x1
   21ed4:	b.eq	21e78 <mpfr_set4@@Base+0x144>  // b.none
   21ed8:	add	x2, x6, #0x3e
   21edc:	subs	x6, x6, #0x1
   21ee0:	csel	x2, x2, x6, mi  // mi = first
   21ee4:	asr	x2, x2, #6
   21ee8:	add	x2, x2, #0x1
   21eec:	lsl	x2, x2, #3
   21ef0:	bl	ba10 <memcpy@plt>
   21ef4:	b	21e78 <mpfr_set4@@Base+0x144>
   21ef8:	add	x0, x6, #0x3e
   21efc:	subs	x6, x6, #0x1
   21f00:	csel	x6, x0, x6, mi  // mi = first
   21f04:	asr	x0, x6, #6
   21f08:	add	x2, x0, #0x1
   21f0c:	add	x20, x5, #0x3e
   21f10:	subs	x5, x5, #0x1
   21f14:	csel	x5, x20, x5, mi  // mi = first
   21f18:	asr	x20, x5, #6
   21f1c:	sub	x20, x20, x0
   21f20:	lsl	x20, x20, #3
   21f24:	add	x0, x19, x20
   21f28:	ldr	x1, [x1, #24]
   21f2c:	cmp	x0, x1
   21f30:	b.eq	21f3c <mpfr_set4@@Base+0x208>  // b.none
   21f34:	lsl	x2, x2, #3
   21f38:	bl	ba10 <memcpy@plt>
   21f3c:	mov	x2, x20
   21f40:	mov	w1, #0x0                   	// #0
   21f44:	mov	x0, x19
   21f48:	bl	c110 <memset@plt>
   21f4c:	mov	w21, #0x0                   	// #0
   21f50:	ldp	x19, x20, [sp, #16]
   21f54:	b	21e78 <mpfr_set4@@Base+0x144>
   21f58:	ldur	x0, [x1, #-8]
   21f5c:	and	x10, x0, #0x8000000000000000
   21f60:	and	x5, x0, #0x7fffffffffffffff
   21f64:	cmp	w9, #0x0
   21f68:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   21f6c:	b.lt	22080 <mpfr_set4@@Base+0x34c>  // b.tstop
   21f70:	sub	x4, x4, x11
   21f74:	subs	x0, x4, #0x1
   21f78:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   21f7c:	b.ne	21fa0 <mpfr_set4@@Base+0x26c>  // b.any
   21f80:	mvn	x4, x4
   21f84:	add	x4, x1, x4, lsl #3
   21f88:	ldr	x5, [x4, x0, lsl #3]
   21f8c:	subs	x0, x0, #0x1
   21f90:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   21f94:	b.eq	21f88 <mpfr_set4@@Base+0x254>  // b.none
   21f98:	mov	x20, #0x1                   	// #1
   21f9c:	b	21e0c <mpfr_set4@@Base+0xd8>
   21fa0:	mov	x20, #0x1                   	// #1
   21fa4:	b	21e0c <mpfr_set4@@Base+0xd8>
   21fa8:	mov	w21, #0x0                   	// #0
   21fac:	b	21e28 <mpfr_set4@@Base+0xf4>
   21fb0:	mov	w21, #0x0                   	// #0
   21fb4:	b	21e28 <mpfr_set4@@Base+0xf4>
   21fb8:	mov	x20, #0x1                   	// #1
   21fbc:	mov	w21, #0x0                   	// #0
   21fc0:	b	21e28 <mpfr_set4@@Base+0xf4>
   21fc4:	cbnz	x5, 220a8 <mpfr_set4@@Base+0x374>
   21fc8:	ldr	x0, [x13, x12, lsl #3]
   21fcc:	neg	w21, w3
   21fd0:	tst	x20, x0
   21fd4:	b.eq	21e28 <mpfr_set4@@Base+0xf4>  // b.none
   21fd8:	b	220a8 <mpfr_set4@@Base+0x374>
   21fdc:	cmp	x19, x1
   21fe0:	b.eq	220e8 <mpfr_set4@@Base+0x3b4>  // b.none
   21fe4:	cmp	x11, x0
   21fe8:	b.le	220e8 <mpfr_set4@@Base+0x3b4>
   21fec:	ldr	x2, [x1, x5, lsl #3]
   21ff0:	str	x2, [x19, x5, lsl #3]
   21ff4:	cmp	x11, x5
   21ff8:	add	x5, x5, #0x1
   21ffc:	b.gt	21fec <mpfr_set4@@Base+0x2b8>
   22000:	b	220e8 <mpfr_set4@@Base+0x3b4>
   22004:	mov	x0, #0x1                   	// #1
   22008:	cmp	x2, x0
   2200c:	b.le	2202c <mpfr_set4@@Base+0x2f8>
   22010:	ldr	x4, [x1, x0, lsl #3]
   22014:	add	x4, x4, #0x1
   22018:	str	x4, [x19, x0, lsl #3]
   2201c:	add	x5, x0, #0x1
   22020:	cbnz	x4, 21fdc <mpfr_set4@@Base+0x2a8>
   22024:	mov	x0, x5
   22028:	b	22008 <mpfr_set4@@Base+0x2d4>
   2202c:	add	x2, x19, x2, lsl #3
   22030:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22034:	stur	x0, [x2, #-8]
   22038:	ldr	x1, [x8, #16]
   2203c:	add	x1, x1, #0x1
   22040:	str	x1, [x8, #16]
   22044:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22048:	ldr	x2, [x0, #2544]
   2204c:	add	x0, x0, #0x9f0
   22050:	blr	x2
   22054:	mrs	x2, tpidr_el0
   22058:	ldr	x0, [x2, x0]
   2205c:	cmp	x1, x0
   22060:	b.le	220e8 <mpfr_set4@@Base+0x3b4>
   22064:	mov	w2, w3
   22068:	mov	w1, w9
   2206c:	mov	x0, x8
   22070:	bl	bf40 <mpfr_overflow@plt>
   22074:	mov	w21, w0
   22078:	ldp	x19, x20, [sp, #16]
   2207c:	b	21e78 <mpfr_set4@@Base+0x144>
   22080:	mov	x20, #0x1                   	// #1
   22084:	cmp	w9, #0x5
   22088:	b.eq	21fb8 <mpfr_set4@@Base+0x284>  // b.none
   2208c:	cmp	w9, #0x1
   22090:	b.eq	21e1c <mpfr_set4@@Base+0xe8>  // b.none
   22094:	add	w0, w9, w3, lsr #31
   22098:	cmp	w0, #0x3
   2209c:	b.eq	21e1c <mpfr_set4@@Base+0xe8>  // b.none
   220a0:	orr	x5, x10, x5
   220a4:	cbz	x5, 21fb0 <mpfr_set4@@Base+0x27c>
   220a8:	ldr	x0, [x13, x12, lsl #3]
   220ac:	add	x0, x20, x0
   220b0:	str	x0, [x19]
   220b4:	cmp	x20, x0
   220b8:	b.hi	22004 <mpfr_set4@@Base+0x2d0>  // b.pmore
   220bc:	cmp	x19, x1
   220c0:	b.eq	220e8 <mpfr_set4@@Base+0x3b4>  // b.none
   220c4:	cmp	x2, #0x1
   220c8:	b.le	220e8 <mpfr_set4@@Base+0x3b4>
   220cc:	add	x11, x11, #0x1
   220d0:	mov	x0, #0x1                   	// #1
   220d4:	ldr	x2, [x1, x0, lsl #3]
   220d8:	str	x2, [x19, x0, lsl #3]
   220dc:	add	x0, x0, #0x1
   220e0:	cmp	x0, x11
   220e4:	b.ne	220d4 <mpfr_set4@@Base+0x3a0>  // b.any
   220e8:	neg	x7, x20
   220ec:	ldr	x0, [x19]
   220f0:	and	x7, x0, x7
   220f4:	str	x7, [x19]
   220f8:	mov	w21, w3
   220fc:	b	21e4c <mpfr_set4@@Base+0x118>
   22100:	ldp	x19, x20, [sp, #16]
   22104:	b	21e78 <mpfr_set4@@Base+0x144>

0000000000022108 <mpfr_set@@Base>:
   22108:	stp	x29, x30, [sp, #-16]!
   2210c:	mov	x29, sp
   22110:	ldr	w3, [x1, #8]
   22114:	bl	c6a0 <mpfr_set4@plt>
   22118:	ldp	x29, x30, [sp], #16
   2211c:	ret

0000000000022120 <mpfr_abs@@Base>:
   22120:	stp	x29, x30, [sp, #-16]!
   22124:	mov	x29, sp
   22128:	mov	w3, #0x1                   	// #1
   2212c:	bl	c6a0 <mpfr_set4@plt>
   22130:	ldp	x29, x30, [sp], #16
   22134:	ret

0000000000022138 <mpfr_set_1_2@@Base>:
   22138:	stp	x29, x30, [sp, #-64]!
   2213c:	mov	x29, sp
   22140:	stp	x19, x20, [sp, #16]
   22144:	stp	x21, x22, [sp, #32]
   22148:	stp	x23, x24, [sp, #48]
   2214c:	mov	x20, x0
   22150:	mov	x19, x1
   22154:	mov	w22, w2
   22158:	mov	w21, w3
   2215c:	ldr	x24, [x0]
   22160:	ldr	x1, [x1, #16]
   22164:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22168:	cmp	x1, x0
   2216c:	b.le	22228 <mpfr_set_1_2@@Base+0xf0>
   22170:	ldr	x0, [x19]
   22174:	cmp	x24, #0x3f
   22178:	b.gt	2231c <mpfr_set_1_2@@Base+0x1e4>
   2217c:	ldr	x3, [x19, #24]
   22180:	mov	x6, #0x40                  	// #64
   22184:	sub	x6, x6, x24
   22188:	mov	x2, #0x1                   	// #1
   2218c:	lsl	x2, x2, x6
   22190:	sub	x7, x2, #0x1
   22194:	cmp	x0, #0x40
   22198:	b.gt	2223c <mpfr_set_1_2@@Base+0x104>
   2219c:	ldr	x3, [x3]
   221a0:	sub	w1, w6, #0x1
   221a4:	mov	x0, #0x1                   	// #1
   221a8:	lsl	x1, x0, x1
   221ac:	and	x5, x1, x3
   221b0:	eor	x1, x1, x7
   221b4:	and	x1, x1, x3
   221b8:	neg	x0, x2
   221bc:	and	x0, x0, x3
   221c0:	ldr	x4, [x20, #24]
   221c4:	str	x0, [x4]
   221c8:	ldr	w23, [x19, #8]
   221cc:	str	w23, [x20, #8]
   221d0:	ldr	x0, [x19, #16]
   221d4:	str	x0, [x20, #16]
   221d8:	mul	w0, w23, w21
   221dc:	cmp	w0, #0x0
   221e0:	b.le	2226c <mpfr_set_1_2@@Base+0x134>
   221e4:	cmp	x5, #0x0
   221e8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   221ec:	b.eq	22394 <mpfr_set_1_2@@Base+0x25c>  // b.none
   221f0:	orr	x0, x5, x1
   221f4:	cbnz	x0, 22284 <mpfr_set_1_2@@Base+0x14c>
   221f8:	mov	w23, w21
   221fc:	cbz	w21, 22344 <mpfr_set_1_2@@Base+0x20c>
   22200:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22204:	ldr	x1, [x0, #2576]
   22208:	add	x0, x0, #0xa10
   2220c:	blr	x1
   22210:	mrs	x1, tpidr_el0
   22214:	add	x0, x1, x0
   22218:	ldr	w1, [x0]
   2221c:	orr	w1, w1, #0x8
   22220:	str	w1, [x0]
   22224:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   22228:	mov	x1, x19
   2222c:	mov	x0, x20
   22230:	bl	c1f0 <mpfr_set@plt>
   22234:	mov	w23, w21
   22238:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   2223c:	ldr	x8, [x3, #8]
   22240:	sub	w1, w6, #0x1
   22244:	mov	x4, #0x1                   	// #1
   22248:	lsl	x1, x4, x1
   2224c:	and	x5, x1, x8
   22250:	eor	x1, x1, x7
   22254:	and	x1, x1, x8
   22258:	ldr	x0, [x3]
   2225c:	orr	x1, x1, x0
   22260:	neg	x0, x2
   22264:	and	x0, x0, x8
   22268:	b	221c0 <mpfr_set_1_2@@Base+0x88>
   2226c:	sxtw	x21, w21
   22270:	orr	x1, x1, x21
   22274:	orr	x0, x5, x1
   22278:	cbnz	x0, 22284 <mpfr_set_1_2@@Base+0x14c>
   2227c:	mov	w23, #0x0                   	// #0
   22280:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   22284:	cbnz	w22, 22398 <mpfr_set_1_2@@Base+0x260>
   22288:	cbz	x5, 2229c <mpfr_set_1_2@@Base+0x164>
   2228c:	cbnz	x1, 223ac <mpfr_set_1_2@@Base+0x274>
   22290:	ldr	x0, [x4]
   22294:	lsr	x6, x0, x6
   22298:	tbnz	w6, #0, 223ac <mpfr_set_1_2@@Base+0x274>
   2229c:	cbz	w23, 22344 <mpfr_set_1_2@@Base+0x20c>
   222a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   222a4:	ldr	x1, [x0, #2576]
   222a8:	add	x0, x0, #0xa10
   222ac:	blr	x1
   222b0:	mrs	x1, tpidr_el0
   222b4:	add	x0, x1, x0
   222b8:	ldr	w1, [x0]
   222bc:	orr	w1, w1, #0x8
   222c0:	str	w1, [x0]
   222c4:	neg	w23, w23
   222c8:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   222cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   222d0:	str	x0, [x4]
   222d4:	ldr	x1, [x20, #16]
   222d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   222dc:	ldr	x2, [x0, #2544]
   222e0:	add	x0, x0, #0x9f0
   222e4:	blr	x2
   222e8:	mrs	x2, tpidr_el0
   222ec:	ldr	x0, [x2, x0]
   222f0:	cmp	x1, x0
   222f4:	b.ge	22304 <mpfr_set_1_2@@Base+0x1cc>  // b.tcont
   222f8:	add	x1, x1, #0x1
   222fc:	str	x1, [x20, #16]
   22300:	b	223bc <mpfr_set_1_2@@Base+0x284>
   22304:	ldr	w2, [x20, #8]
   22308:	mov	w1, w22
   2230c:	mov	x0, x20
   22310:	bl	bf40 <mpfr_overflow@plt>
   22314:	mov	w23, w0
   22318:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   2231c:	mov	x1, x19
   22320:	mov	x0, x20
   22324:	bl	c1f0 <mpfr_set@plt>
   22328:	mov	w23, w0
   2232c:	cbnz	w22, 2233c <mpfr_set_1_2@@Base+0x204>
   22330:	mul	w0, w0, w21
   22334:	cmp	w0, #0x0
   22338:	b.gt	2235c <mpfr_set_1_2@@Base+0x224>
   2233c:	cmp	w23, #0x0
   22340:	csel	w23, w23, w21, ne  // ne = any
   22344:	mov	w0, w23
   22348:	ldp	x19, x20, [sp, #16]
   2234c:	ldp	x21, x22, [sp, #32]
   22350:	ldp	x23, x24, [sp, #48]
   22354:	ldp	x29, x30, [sp], #64
   22358:	ret
   2235c:	mov	x0, x19
   22360:	bl	c990 <mpfr_min_prec@plt>
   22364:	add	x1, x24, #0x1
   22368:	cmp	x0, x1
   2236c:	b.ne	2233c <mpfr_set_1_2@@Base+0x204>  // b.any
   22370:	cmp	w21, #0x0
   22374:	b.le	22388 <mpfr_set_1_2@@Base+0x250>
   22378:	mov	x0, x20
   2237c:	bl	bdd0 <mpfr_nextbelow@plt>
   22380:	neg	w23, w21
   22384:	b	22344 <mpfr_set_1_2@@Base+0x20c>
   22388:	mov	x0, x20
   2238c:	bl	c120 <mpfr_nextabove@plt>
   22390:	b	22380 <mpfr_set_1_2@@Base+0x248>
   22394:	cbz	w22, 2229c <mpfr_set_1_2@@Base+0x164>
   22398:	cmp	w22, #0x1
   2239c:	b.eq	2229c <mpfr_set_1_2@@Base+0x164>  // b.none
   223a0:	add	w0, w22, w23, lsr #31
   223a4:	cmp	w0, #0x3
   223a8:	b.eq	2229c <mpfr_set_1_2@@Base+0x164>  // b.none
   223ac:	ldr	x0, [x4]
   223b0:	add	x2, x2, x0
   223b4:	str	x2, [x4]
   223b8:	cbz	x2, 222cc <mpfr_set_1_2@@Base+0x194>
   223bc:	ldr	w23, [x20, #8]
   223c0:	cbz	w23, 22344 <mpfr_set_1_2@@Base+0x20c>
   223c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   223c8:	ldr	x1, [x0, #2576]
   223cc:	add	x0, x0, #0xa10
   223d0:	blr	x1
   223d4:	mrs	x1, tpidr_el0
   223d8:	add	x0, x1, x0
   223dc:	ldr	w1, [x0]
   223e0:	orr	w1, w1, #0x8
   223e4:	str	w1, [x0]
   223e8:	b	22344 <mpfr_set_1_2@@Base+0x20c>

00000000000223ec <mpfr_setmax@@Base>:
   223ec:	str	x1, [x0, #16]
   223f0:	ldr	x2, [x0]
   223f4:	add	x1, x2, #0x3e
   223f8:	subs	x3, x2, #0x1
   223fc:	csel	x1, x1, x3, mi  // mi = first
   22400:	asr	x1, x1, #6
   22404:	add	x4, x1, #0x1
   22408:	ldr	x3, [x0, #24]
   2240c:	lsl	w0, w4, #6
   22410:	sub	w0, w0, w2
   22414:	mov	x2, #0xffffffffffffffff    	// #-1
   22418:	lsl	x2, x2, x0
   2241c:	str	x2, [x3]
   22420:	cmp	x4, #0x1
   22424:	b.le	22440 <mpfr_setmax@@Base+0x54>
   22428:	mov	x0, x3
   2242c:	add	x1, x3, x1, lsl #3
   22430:	mov	x2, #0xffffffffffffffff    	// #-1
   22434:	str	x2, [x0, #8]!
   22438:	cmp	x0, x1
   2243c:	b.ne	22434 <mpfr_setmax@@Base+0x48>  // b.any
   22440:	ret

0000000000022444 <mpfr_setmin@@Base>:
   22444:	stp	x29, x30, [sp, #-16]!
   22448:	mov	x29, sp
   2244c:	mov	x2, x0
   22450:	str	x1, [x0, #16]
   22454:	ldr	x0, [x0, #24]
   22458:	ldr	x1, [x2]
   2245c:	add	x2, x1, #0x3e
   22460:	subs	x1, x1, #0x1
   22464:	csel	x2, x2, x1, mi  // mi = first
   22468:	asr	x2, x2, #6
   2246c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   22470:	str	x1, [x0, x2, lsl #3]
   22474:	lsl	x2, x2, #3
   22478:	mov	w1, #0x0                   	// #0
   2247c:	bl	c110 <memset@plt>
   22480:	ldp	x29, x30, [sp], #16
   22484:	ret

0000000000022488 <mpfr_set_d@@Base>:
   22488:	stp	x29, x30, [sp, #-112]!
   2248c:	mov	x29, sp
   22490:	stp	x19, x20, [sp, #16]
   22494:	mov	x19, x0
   22498:	fcmp	d0, d0
   2249c:	b.ne	22564 <mpfr_set_d@@Base+0xdc>  // b.any
   224a0:	mov	w20, w1
   224a4:	fcmp	d0, #0.0
   224a8:	b.eq	2259c <mpfr_set_d@@Base+0x114>  // b.none
   224ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   224b0:	fmov	d1, x0
   224b4:	fcmpe	d0, d1
   224b8:	b.gt	225cc <mpfr_set_d@@Base+0x144>
   224bc:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   224c0:	fmov	d1, x0
   224c4:	fcmpe	d0, d1
   224c8:	b.mi	225cc <mpfr_set_d@@Base+0x144>  // b.first
   224cc:	stp	x21, x22, [sp, #32]
   224d0:	str	x23, [sp, #48]
   224d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   224d8:	ldr	x1, [x0, #2576]
   224dc:	add	x0, x0, #0xa10
   224e0:	blr	x1
   224e4:	mrs	x1, tpidr_el0
   224e8:	ldr	w21, [x1, x0]
   224ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   224f0:	ldr	x2, [x0, #2512]
   224f4:	add	x0, x0, #0x9d0
   224f8:	blr	x2
   224fc:	add	x2, x1, x0
   22500:	ldr	x22, [x1, x0]
   22504:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22508:	ldr	x3, [x0, #2544]
   2250c:	add	x0, x0, #0x9f0
   22510:	blr	x3
   22514:	ldr	x23, [x1, x0]
   22518:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2251c:	str	x3, [x2]
   22520:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   22524:	str	x2, [x1, x0]
   22528:	add	x0, sp, #0x48
   2252c:	str	x0, [sp, #104]
   22530:	mov	x0, #0x35                  	// #53
   22534:	str	x0, [sp, #80]
   22538:	fmov	x2, d0
   2253c:	ubfx	x0, x2, #52, #11
   22540:	cbz	w0, 225fc <mpfr_set_d@@Base+0x174>
   22544:	ubfx	x2, x2, #32, #20
   22548:	fmov	x1, d0
   2254c:	ubfiz	x1, x1, #11, #32
   22550:	orr	x2, x1, x2, lsl #43
   22554:	orr	x2, x2, #0x8000000000000000
   22558:	sub	w0, w0, #0x3fe
   2255c:	str	x2, [sp, #72]
   22560:	b	22620 <mpfr_set_d@@Base+0x198>
   22564:	mov	x0, #0x2                   	// #2
   22568:	movk	x0, #0x8000, lsl #48
   2256c:	str	x0, [x19, #16]
   22570:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22574:	ldr	x1, [x0, #2576]
   22578:	add	x0, x0, #0xa10
   2257c:	blr	x1
   22580:	mrs	x1, tpidr_el0
   22584:	add	x0, x1, x0
   22588:	ldr	w1, [x0]
   2258c:	orr	w1, w1, #0x4
   22590:	str	w1, [x0]
   22594:	mov	w1, #0x0                   	// #0
   22598:	b	226c0 <mpfr_set_d@@Base+0x238>
   2259c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   225a0:	str	x0, [x19, #16]
   225a4:	fmov	x1, d0
   225a8:	tbnz	x1, #63, 225bc <mpfr_set_d@@Base+0x134>
   225ac:	mov	w0, #0x1                   	// #1
   225b0:	str	w0, [x19, #8]
   225b4:	mov	w1, #0x0                   	// #0
   225b8:	b	226c0 <mpfr_set_d@@Base+0x238>
   225bc:	mov	w0, #0xffffffff            	// #-1
   225c0:	str	w0, [x19, #8]
   225c4:	mov	w1, #0x0                   	// #0
   225c8:	b	226c0 <mpfr_set_d@@Base+0x238>
   225cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   225d0:	str	x0, [x19, #16]
   225d4:	fcmpe	d0, #0.0
   225d8:	b.le	225ec <mpfr_set_d@@Base+0x164>
   225dc:	mov	w0, #0x1                   	// #1
   225e0:	str	w0, [x19, #8]
   225e4:	mov	w1, #0x0                   	// #0
   225e8:	b	226c0 <mpfr_set_d@@Base+0x238>
   225ec:	mov	w0, #0xffffffff            	// #-1
   225f0:	str	w0, [x19, #8]
   225f4:	mov	w1, #0x0                   	// #0
   225f8:	b	226c0 <mpfr_set_d@@Base+0x238>
   225fc:	ubfx	x2, x2, #32, #20
   22600:	fmov	x0, d0
   22604:	ubfiz	x0, x0, #11, #32
   22608:	orr	x2, x0, x2, lsl #43
   2260c:	clz	x1, x2
   22610:	mov	w0, #0xfffffc03            	// #-1021
   22614:	sub	w0, w0, w1
   22618:	lsl	x2, x2, x1
   2261c:	str	x2, [sp, #72]
   22620:	sxtw	x0, w0
   22624:	str	x0, [sp, #96]
   22628:	mov	w3, #0x1                   	// #1
   2262c:	fcmpe	d0, #0.0
   22630:	cneg	w3, w3, mi  // mi = first
   22634:	mov	w2, w20
   22638:	add	x1, sp, #0x50
   2263c:	mov	x0, x19
   22640:	bl	c6a0 <mpfr_set4@plt>
   22644:	mov	w1, w0
   22648:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2264c:	ldr	x2, [x0, #2576]
   22650:	add	x0, x0, #0xa10
   22654:	blr	x2
   22658:	mrs	x2, tpidr_el0
   2265c:	str	w21, [x2, x0]
   22660:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22664:	ldr	x3, [x0, #2512]
   22668:	add	x0, x0, #0x9d0
   2266c:	blr	x3
   22670:	str	x22, [x2, x0]
   22674:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22678:	ldr	x3, [x0, #2544]
   2267c:	add	x0, x0, #0x9f0
   22680:	blr	x3
   22684:	str	x23, [x2, x0]
   22688:	ldr	x0, [x19, #16]
   2268c:	cmp	x23, x0
   22690:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   22694:	b.gt	226d0 <mpfr_set_d@@Base+0x248>
   22698:	cbz	w1, 226ec <mpfr_set_d@@Base+0x264>
   2269c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   226a0:	ldr	x2, [x0, #2576]
   226a4:	add	x0, x0, #0xa10
   226a8:	blr	x2
   226ac:	orr	w21, w21, #0x8
   226b0:	mrs	x2, tpidr_el0
   226b4:	str	w21, [x2, x0]
   226b8:	ldp	x21, x22, [sp, #32]
   226bc:	ldr	x23, [sp, #48]
   226c0:	mov	w0, w1
   226c4:	ldp	x19, x20, [sp, #16]
   226c8:	ldp	x29, x30, [sp], #112
   226cc:	ret
   226d0:	mov	w2, w20
   226d4:	mov	x0, x19
   226d8:	bl	cb30 <mpfr_check_range@plt>
   226dc:	mov	w1, w0
   226e0:	ldp	x21, x22, [sp, #32]
   226e4:	ldr	x23, [sp, #48]
   226e8:	b	226c0 <mpfr_set_d@@Base+0x238>
   226ec:	ldp	x21, x22, [sp, #32]
   226f0:	ldr	x23, [sp, #48]
   226f4:	b	226c0 <mpfr_set_d@@Base+0x238>

00000000000226f8 <mpfr_set_default_prec@@Base>:
   226f8:	stp	x29, x30, [sp, #-16]!
   226fc:	mov	x29, sp
   22700:	mov	x1, x0
   22704:	sub	x2, x0, #0x1
   22708:	mov	x0, #0xfffffffffffffefe    	// #-258
   2270c:	movk	x0, #0x7fff, lsl #48
   22710:	cmp	x2, x0
   22714:	b.hi	22738 <mpfr_set_default_prec@@Base+0x40>  // b.pmore
   22718:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2271c:	ldr	x2, [x0, #2528]
   22720:	add	x0, x0, #0x9e0
   22724:	blr	x2
   22728:	mrs	x2, tpidr_el0
   2272c:	str	x1, [x2, x0]
   22730:	ldp	x29, x30, [sp], #16
   22734:	ret
   22738:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   2273c:	add	x2, x2, #0x8d8
   22740:	mov	w1, #0x20                  	// #32
   22744:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22748:	add	x0, x0, #0x948
   2274c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000022750 <mpfr_get_default_prec@@Base>:
   22750:	stp	x29, x30, [sp, #-16]!
   22754:	mov	x29, sp
   22758:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2275c:	ldr	x1, [x0, #2528]
   22760:	add	x0, x0, #0x9e0
   22764:	blr	x1
   22768:	mrs	x1, tpidr_el0
   2276c:	ldr	x0, [x1, x0]
   22770:	ldp	x29, x30, [sp], #16
   22774:	ret

0000000000022778 <mpfr_set_exp@@Base>:
   22778:	mov	x2, x0
   2277c:	ldr	x3, [x0, #16]
   22780:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22784:	cmp	x3, x0
   22788:	b.le	227e4 <mpfr_set_exp@@Base+0x6c>
   2278c:	stp	x29, x30, [sp, #-16]!
   22790:	mov	x29, sp
   22794:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22798:	ldr	x3, [x0, #2512]
   2279c:	add	x0, x0, #0x9d0
   227a0:	blr	x3
   227a4:	mrs	x3, tpidr_el0
   227a8:	ldr	x0, [x3, x0]
   227ac:	cmp	x0, x1
   227b0:	b.gt	227ec <mpfr_set_exp@@Base+0x74>
   227b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   227b8:	ldr	x3, [x0, #2544]
   227bc:	add	x0, x0, #0x9f0
   227c0:	blr	x3
   227c4:	mrs	x3, tpidr_el0
   227c8:	ldr	x0, [x3, x0]
   227cc:	cmp	x0, x1
   227d0:	b.lt	227f4 <mpfr_set_exp@@Base+0x7c>  // b.tstop
   227d4:	str	x1, [x2, #16]
   227d8:	mov	w0, #0x0                   	// #0
   227dc:	ldp	x29, x30, [sp], #16
   227e0:	ret
   227e4:	mov	w0, #0x1                   	// #1
   227e8:	ret
   227ec:	mov	w0, #0x1                   	// #1
   227f0:	b	227dc <mpfr_set_exp@@Base+0x64>
   227f4:	mov	w0, #0x1                   	// #1
   227f8:	b	227dc <mpfr_set_exp@@Base+0x64>

00000000000227fc <mpfr_set_default_rounding_mode@@Base>:
   227fc:	cmp	w0, #0x5
   22800:	b.hi	22830 <mpfr_set_default_rounding_mode@@Base+0x34>  // b.pmore
   22804:	stp	x29, x30, [sp, #-16]!
   22808:	mov	x29, sp
   2280c:	mov	w1, w0
   22810:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22814:	ldr	x2, [x0, #2640]
   22818:	add	x0, x0, #0xa50
   2281c:	blr	x2
   22820:	mrs	x2, tpidr_el0
   22824:	str	w1, [x2, x0]
   22828:	ldp	x29, x30, [sp], #16
   2282c:	ret
   22830:	ret

0000000000022834 <mpfr_get_default_rounding_mode@@Base>:
   22834:	stp	x29, x30, [sp, #-16]!
   22838:	mov	x29, sp
   2283c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22840:	ldr	x1, [x0, #2640]
   22844:	add	x0, x0, #0xa50
   22848:	blr	x1
   2284c:	mrs	x1, tpidr_el0
   22850:	ldr	w0, [x1, x0]
   22854:	ldp	x29, x30, [sp], #16
   22858:	ret

000000000002285c <mpfr_set_f@@Base>:
   2285c:	stp	x29, x30, [sp, #-112]!
   22860:	mov	x29, sp
   22864:	stp	x19, x20, [sp, #16]
   22868:	stp	x21, x22, [sp, #32]
   2286c:	stp	x23, x24, [sp, #48]
   22870:	stp	x25, x26, [sp, #64]
   22874:	stp	x27, x28, [sp, #80]
   22878:	mov	x19, x0
   2287c:	ldr	w0, [x1, #4]
   22880:	cmp	w0, #0x0
   22884:	cneg	w3, w0, lt  // lt = tstop
   22888:	cbz	w3, 22958 <mpfr_set_f@@Base+0xfc>
   2288c:	mov	x21, x1
   22890:	mov	w23, w2
   22894:	sxtw	x24, w3
   22898:	ldr	w1, [x19, #8]
   2289c:	mul	w0, w0, w1
   228a0:	tbnz	w0, #31, 22990 <mpfr_set_f@@Base+0x134>
   228a4:	ldr	x0, [x19]
   228a8:	add	x20, x0, #0x3e
   228ac:	subs	x0, x0, #0x1
   228b0:	csel	x20, x20, x0, mi  // mi = first
   228b4:	asr	x20, x20, #6
   228b8:	add	x20, x20, #0x1
   228bc:	ldr	x26, [x19, #24]
   228c0:	ldr	x25, [x21, #16]
   228c4:	sxtw	x0, w3
   228c8:	sbfiz	x3, x3, #3, #32
   228cc:	add	x1, x25, x3
   228d0:	ldur	x22, [x1, #-8]
   228d4:	clz	x22, x22
   228d8:	cmp	x24, x20
   228dc:	b.lt	22a08 <mpfr_set_f@@Base+0x1ac>  // b.tstop
   228e0:	lsl	x27, x24, #6
   228e4:	str	xzr, [x29, #96]
   228e8:	cmp	x3, #0x4, lsl #12
   228ec:	b.hi	229cc <mpfr_set_f@@Base+0x170>  // b.pmore
   228f0:	add	x3, x3, #0xf
   228f4:	and	x3, x3, #0xfffffffffffffff0
   228f8:	sub	sp, sp, x3
   228fc:	mov	x28, sp
   22900:	cbnz	x22, 229e0 <mpfr_set_f@@Base+0x184>
   22904:	cmp	x28, x25
   22908:	b.eq	2291c <mpfr_set_f@@Base+0xc0>  // b.none
   2290c:	lsl	x2, x24, #3
   22910:	mov	x1, x25
   22914:	mov	x0, x28
   22918:	bl	ba10 <memcpy@plt>
   2291c:	ldr	w3, [x21, #4]
   22920:	add	x6, x29, #0x6c
   22924:	mov	w5, w23
   22928:	ldr	x4, [x19]
   2292c:	lsr	w3, w3, #31
   22930:	mov	x2, x27
   22934:	mov	x1, x28
   22938:	mov	x0, x26
   2293c:	bl	ca20 <mpfr_round_raw@plt>
   22940:	mov	w24, w0
   22944:	cbnz	w0, 229f8 <mpfr_set_f@@Base+0x19c>
   22948:	ldr	x0, [x29, #96]
   2294c:	cbz	x0, 22a44 <mpfr_set_f@@Base+0x1e8>
   22950:	bl	c410 <mpfr_tmp_free@plt>
   22954:	b	22a44 <mpfr_set_f@@Base+0x1e8>
   22958:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2295c:	str	x0, [x19, #16]
   22960:	mov	w0, #0x1                   	// #1
   22964:	str	w0, [x19, #8]
   22968:	mov	w1, #0x0                   	// #0
   2296c:	mov	w0, w1
   22970:	mov	sp, x29
   22974:	ldp	x19, x20, [sp, #16]
   22978:	ldp	x21, x22, [sp, #32]
   2297c:	ldp	x23, x24, [sp, #48]
   22980:	ldp	x25, x26, [sp, #64]
   22984:	ldp	x27, x28, [sp, #80]
   22988:	ldp	x29, x30, [sp], #112
   2298c:	ret
   22990:	neg	w1, w1
   22994:	str	w1, [x19, #8]
   22998:	ldr	x0, [x19]
   2299c:	add	x20, x0, #0x3e
   229a0:	subs	x0, x0, #0x1
   229a4:	csel	x20, x20, x0, mi  // mi = first
   229a8:	asr	x20, x20, #6
   229ac:	add	x20, x20, #0x1
   229b0:	ldr	x26, [x19, #24]
   229b4:	ldr	x25, [x21, #16]
   229b8:	sxtw	x0, w3
   229bc:	sbfiz	x3, x3, #3, #32
   229c0:	add	x1, x25, x3
   229c4:	ldur	x22, [x1, #-8]
   229c8:	b	228d4 <mpfr_set_f@@Base+0x78>
   229cc:	mov	x1, x3
   229d0:	add	x0, x29, #0x60
   229d4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   229d8:	mov	x28, x0
   229dc:	b	22900 <mpfr_set_f@@Base+0xa4>
   229e0:	mov	w3, w22
   229e4:	mov	x2, x24
   229e8:	mov	x1, x25
   229ec:	mov	x0, x28
   229f0:	bl	bcc0 <__gmpn_lshift@plt>
   229f4:	b	2291c <mpfr_set_f@@Base+0xc0>
   229f8:	add	x20, x26, x20, lsl #3
   229fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22a00:	stur	x0, [x20, #-8]
   22a04:	b	22948 <mpfr_set_f@@Base+0xec>
   22a08:	cbnz	x22, 22ae0 <mpfr_set_f@@Base+0x284>
   22a0c:	sub	x0, x20, x0
   22a10:	add	x0, x26, x0, lsl #3
   22a14:	cmp	x0, x25
   22a18:	b.eq	22a28 <mpfr_set_f@@Base+0x1cc>  // b.none
   22a1c:	lsl	x2, x24, #3
   22a20:	mov	x1, x25
   22a24:	bl	ba10 <memcpy@plt>
   22a28:	sub	x2, x20, x24
   22a2c:	lsl	x2, x2, #3
   22a30:	mov	w1, #0x0                   	// #0
   22a34:	mov	x0, x26
   22a38:	bl	c110 <memset@plt>
   22a3c:	str	wzr, [x29, #108]
   22a40:	mov	w24, #0x0                   	// #0
   22a44:	ldr	x2, [x21, #8]
   22a48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22a4c:	ldr	x1, [x0, #2544]
   22a50:	add	x0, x0, #0x9f0
   22a54:	blr	x1
   22a58:	mrs	x1, tpidr_el0
   22a5c:	ldr	x3, [x1, x0]
   22a60:	add	x1, x3, #0x3e
   22a64:	subs	x0, x3, #0x1
   22a68:	csel	x1, x1, x0, mi  // mi = first
   22a6c:	asr	x1, x1, #6
   22a70:	add	x1, x1, #0x1
   22a74:	cmp	x2, x1
   22a78:	b.gt	22afc <mpfr_set_f@@Base+0x2a0>
   22a7c:	lsl	x2, x2, #6
   22a80:	sub	x22, x2, x22
   22a84:	add	x22, x22, w24, sxtw
   22a88:	str	x22, [x19, #16]
   22a8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22a90:	ldr	x1, [x0, #2512]
   22a94:	add	x0, x0, #0x9d0
   22a98:	blr	x1
   22a9c:	mrs	x1, tpidr_el0
   22aa0:	ldr	x0, [x1, x0]
   22aa4:	cmp	x22, x0
   22aa8:	ccmp	x3, x22, #0x1, ge  // ge = tcont
   22aac:	b.lt	22b14 <mpfr_set_f@@Base+0x2b8>  // b.tstop
   22ab0:	ldr	w1, [x29, #108]
   22ab4:	cbz	w1, 2296c <mpfr_set_f@@Base+0x110>
   22ab8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22abc:	ldr	x2, [x0, #2576]
   22ac0:	add	x0, x0, #0xa10
   22ac4:	blr	x2
   22ac8:	mrs	x2, tpidr_el0
   22acc:	add	x0, x2, x0
   22ad0:	ldr	w2, [x0]
   22ad4:	orr	w2, w2, #0x8
   22ad8:	str	w2, [x0]
   22adc:	b	2296c <mpfr_set_f@@Base+0x110>
   22ae0:	sub	x0, x20, x0
   22ae4:	mov	w3, w22
   22ae8:	mov	x2, x24
   22aec:	mov	x1, x25
   22af0:	add	x0, x26, x0, lsl #3
   22af4:	bl	bcc0 <__gmpn_lshift@plt>
   22af8:	b	22a28 <mpfr_set_f@@Base+0x1cc>
   22afc:	ldr	w2, [x19, #8]
   22b00:	mov	w1, w23
   22b04:	mov	x0, x19
   22b08:	bl	bf40 <mpfr_overflow@plt>
   22b0c:	mov	w1, w0
   22b10:	b	2296c <mpfr_set_f@@Base+0x110>
   22b14:	mov	w2, w23
   22b18:	ldr	w1, [x29, #108]
   22b1c:	mov	x0, x19
   22b20:	bl	cb30 <mpfr_check_range@plt>
   22b24:	mov	w1, w0
   22b28:	b	2296c <mpfr_set_f@@Base+0x110>

0000000000022b2c <mpfr_set_prec_raw@@Base>:
   22b2c:	stp	x29, x30, [sp, #-32]!
   22b30:	mov	x29, sp
   22b34:	stp	x19, x20, [sp, #16]
   22b38:	mov	x20, x0
   22b3c:	mov	x19, x1
   22b40:	sub	x1, x1, #0x1
   22b44:	mov	x0, #0xfffffffffffffefe    	// #-258
   22b48:	movk	x0, #0x7fff, lsl #48
   22b4c:	cmp	x1, x0
   22b50:	b.hi	22b74 <mpfr_set_prec_raw@@Base+0x48>  // b.pmore
   22b54:	ldr	x0, [x20, #24]
   22b58:	ldur	x0, [x0, #-8]
   22b5c:	cmp	x19, x0, lsl #6
   22b60:	b.gt	22b8c <mpfr_set_prec_raw@@Base+0x60>
   22b64:	str	x19, [x20]
   22b68:	ldp	x19, x20, [sp, #16]
   22b6c:	ldp	x29, x30, [sp], #32
   22b70:	ret
   22b74:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22b78:	add	x2, x2, #0x958
   22b7c:	mov	w1, #0x1c                  	// #28
   22b80:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22b84:	add	x0, x0, #0x9a0
   22b88:	bl	cb40 <mpfr_assert_fail@plt>
   22b8c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22b90:	add	x2, x2, #0x9b0
   22b94:	mov	w1, #0x1d                  	// #29
   22b98:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22b9c:	add	x0, x0, #0x9a0
   22ba0:	bl	cb40 <mpfr_assert_fail@plt>
   22ba4:	b	22b64 <mpfr_set_prec_raw@@Base+0x38>

0000000000022ba8 <mpfr_set_prec@@Base>:
   22ba8:	stp	x29, x30, [sp, #-48]!
   22bac:	mov	x29, sp
   22bb0:	stp	x19, x20, [sp, #16]
   22bb4:	str	x21, [sp, #32]
   22bb8:	mov	x20, x0
   22bbc:	mov	x19, x1
   22bc0:	sub	x1, x1, #0x1
   22bc4:	mov	x0, #0xfffffffffffffefe    	// #-258
   22bc8:	movk	x0, #0x7fff, lsl #48
   22bcc:	cmp	x1, x0
   22bd0:	b.hi	22c18 <mpfr_set_prec@@Base+0x70>  // b.pmore
   22bd4:	add	x2, x19, #0x3e
   22bd8:	subs	x0, x19, #0x1
   22bdc:	csel	x2, x2, x0, mi  // mi = first
   22be0:	asr	x2, x2, #6
   22be4:	add	x21, x2, #0x1
   22be8:	ldr	x0, [x20, #24]
   22bec:	ldur	x1, [x0, #-8]
   22bf0:	cmp	x21, x1
   22bf4:	b.gt	22c30 <mpfr_set_prec@@Base+0x88>
   22bf8:	str	x19, [x20]
   22bfc:	mov	x0, #0x2                   	// #2
   22c00:	movk	x0, #0x8000, lsl #48
   22c04:	str	x0, [x20, #16]
   22c08:	ldp	x19, x20, [sp, #16]
   22c0c:	ldr	x21, [sp, #32]
   22c10:	ldp	x29, x30, [sp], #48
   22c14:	ret
   22c18:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22c1c:	add	x2, x2, #0x958
   22c20:	mov	w1, #0x1f                  	// #31
   22c24:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   22c28:	add	x0, x0, #0xa10
   22c2c:	bl	cb40 <mpfr_assert_fail@plt>
   22c30:	add	x2, x2, #0x2
   22c34:	add	x1, x1, #0x1
   22c38:	lsl	x2, x2, #3
   22c3c:	lsl	x1, x1, #3
   22c40:	sub	x0, x0, #0x8
   22c44:	bl	c1c0 <mpfr_reallocate_func@plt>
   22c48:	add	x1, x0, #0x8
   22c4c:	str	x1, [x20, #24]
   22c50:	str	x21, [x0]
   22c54:	b	22bf8 <mpfr_set_prec@@Base+0x50>

0000000000022c58 <mpfr_get_prec@@Base>:
   22c58:	ldr	x0, [x0]
   22c5c:	ret
   22c60:	stp	x29, x30, [sp, #-64]!
   22c64:	mov	x29, sp
   22c68:	stp	x19, x20, [sp, #16]
   22c6c:	stp	x21, x22, [sp, #32]
   22c70:	stp	x23, x24, [sp, #48]
   22c74:	mov	x21, x0
   22c78:	mov	x22, x1
   22c7c:	ldr	x19, [x1, #8]
   22c80:	ldr	w3, [x1, #4]
   22c84:	cmp	w3, #0x0
   22c88:	cneg	w3, w3, lt  // lt = tstop
   22c8c:	sxtw	x20, w3
   22c90:	str	x20, [x2]
   22c94:	ldr	x0, [x19]
   22c98:	cbnz	x0, 22d34 <mpfr_get_prec@@Base+0xdc>
   22c9c:	mov	x3, x19
   22ca0:	sub	x20, x20, #0x1
   22ca4:	ldr	x2, [x19, #8]!
   22ca8:	cbz	x2, 22c9c <mpfr_get_prec@@Base+0x44>
   22cac:	lsl	x23, x20, #3
   22cb0:	ldr	x0, [x3, x20, lsl #3]
   22cb4:	clz	x24, x0
   22cb8:	lsl	x2, x20, #6
   22cbc:	sub	x2, x2, x24
   22cc0:	cmp	x2, #0x0
   22cc4:	csinc	x1, x2, xzr, gt
   22cc8:	mov	x0, x21
   22ccc:	bl	ca80 <mpfr_init2@plt>
   22cd0:	cbz	x24, 22d18 <mpfr_get_prec@@Base+0xc0>
   22cd4:	mov	w3, w24
   22cd8:	mov	x2, x20
   22cdc:	mov	x1, x19
   22ce0:	ldr	x0, [x21, #24]
   22ce4:	bl	bcc0 <__gmpn_lshift@plt>
   22ce8:	ldr	w1, [x22, #4]
   22cec:	mov	w0, #0x1                   	// #1
   22cf0:	cmp	w1, #0x0
   22cf4:	cneg	w0, w0, lt  // lt = tstop
   22cf8:	str	w0, [x21, #8]
   22cfc:	str	xzr, [x21, #16]
   22d00:	neg	w0, w24
   22d04:	ldp	x19, x20, [sp, #16]
   22d08:	ldp	x21, x22, [sp, #32]
   22d0c:	ldp	x23, x24, [sp, #48]
   22d10:	ldp	x29, x30, [sp], #64
   22d14:	ret
   22d18:	ldr	x0, [x21, #24]
   22d1c:	cmp	x0, x19
   22d20:	b.eq	22ce8 <mpfr_get_prec@@Base+0x90>  // b.none
   22d24:	mov	x2, x23
   22d28:	mov	x1, x19
   22d2c:	bl	ba10 <memcpy@plt>
   22d30:	b	22ce8 <mpfr_get_prec@@Base+0x90>
   22d34:	sbfiz	x23, x3, #3, #32
   22d38:	add	x0, x19, x23
   22d3c:	ldur	x0, [x0, #-8]
   22d40:	b	22cb4 <mpfr_get_prec@@Base+0x5c>

0000000000022d44 <mpfr_set_q@@Base>:
   22d44:	stp	x29, x30, [sp, #-160]!
   22d48:	mov	x29, sp
   22d4c:	stp	x19, x20, [sp, #16]
   22d50:	mov	x20, x0
   22d54:	ldr	w19, [x1, #4]
   22d58:	cbz	w19, 22f14 <mpfr_set_q@@Base+0x1d0>
   22d5c:	stp	x21, x22, [sp, #32]
   22d60:	stp	x25, x26, [sp, #64]
   22d64:	mov	w22, w2
   22d68:	add	x26, x1, #0x10
   22d6c:	ldr	w19, [x1, #20]
   22d70:	cbz	w19, 22f68 <mpfr_set_q@@Base+0x224>
   22d74:	stp	x23, x24, [sp, #48]
   22d78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22d7c:	ldr	x2, [x0, #2576]
   22d80:	add	x0, x0, #0xa10
   22d84:	blr	x2
   22d88:	mrs	x2, tpidr_el0
   22d8c:	ldr	w23, [x2, x0]
   22d90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22d94:	ldr	x3, [x0, #2512]
   22d98:	add	x0, x0, #0x9d0
   22d9c:	blr	x3
   22da0:	add	x3, x2, x0
   22da4:	ldr	x24, [x2, x0]
   22da8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22dac:	ldr	x4, [x0, #2544]
   22db0:	add	x0, x0, #0x9f0
   22db4:	blr	x4
   22db8:	ldr	x25, [x2, x0]
   22dbc:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   22dc0:	str	x4, [x3]
   22dc4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   22dc8:	str	x3, [x2, x0]
   22dcc:	add	x2, sp, #0x58
   22dd0:	add	x0, sp, #0x80
   22dd4:	bl	22c60 <mpfr_get_prec@@Base+0x8>
   22dd8:	mov	w21, w0
   22ddc:	add	x2, sp, #0x50
   22de0:	mov	x1, x26
   22de4:	add	x0, sp, #0x60
   22de8:	bl	22c60 <mpfr_get_prec@@Base+0x8>
   22dec:	mov	w26, w0
   22df0:	ldr	x1, [sp, #88]
   22df4:	ldr	x0, [sp, #80]
   22df8:	sub	x1, x1, x0
   22dfc:	str	x1, [sp, #88]
   22e00:	mov	x0, #0xffffffffffffff      	// #72057594037927935
   22e04:	cmp	x1, x0
   22e08:	b.gt	22f90 <mpfr_set_q@@Base+0x24c>
   22e0c:	mov	x0, #0xff00000000000000    	// #-72057594037927936
   22e10:	cmp	x1, x0
   22e14:	b.lt	22fe8 <mpfr_set_q@@Base+0x2a4>  // b.tstop
   22e18:	mov	w3, w22
   22e1c:	add	x2, sp, #0x60
   22e20:	add	x1, sp, #0x80
   22e24:	mov	x0, x20
   22e28:	bl	c620 <mpfr_div@plt>
   22e2c:	mov	w19, w0
   22e30:	sxtw	x21, w21
   22e34:	ldr	x2, [sp, #88]
   22e38:	add	x2, x21, x2, lsl #6
   22e3c:	mov	w3, w22
   22e40:	sub	x2, x2, w26, sxtw
   22e44:	mov	x1, x20
   22e48:	mov	x0, x20
   22e4c:	bl	bb90 <mpfr_mul_2si@plt>
   22e50:	mov	w1, w0
   22e54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22e58:	ldr	x2, [x0, #2576]
   22e5c:	add	x0, x0, #0xa10
   22e60:	blr	x2
   22e64:	mrs	x2, tpidr_el0
   22e68:	str	w23, [x2, x0]
   22e6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22e70:	ldr	x3, [x0, #2512]
   22e74:	add	x0, x0, #0x9d0
   22e78:	blr	x3
   22e7c:	str	x24, [x2, x0]
   22e80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22e84:	ldr	x3, [x0, #2544]
   22e88:	add	x0, x0, #0x9f0
   22e8c:	blr	x3
   22e90:	str	x25, [x2, x0]
   22e94:	cbnz	w1, 2307c <mpfr_set_q@@Base+0x338>
   22e98:	ldr	x0, [x20, #16]
   22e9c:	cmp	x25, x0
   22ea0:	ccmp	x24, x0, #0x0, ge  // ge = tcont
   22ea4:	b.gt	23044 <mpfr_set_q@@Base+0x300>
   22ea8:	cbz	w19, 23084 <mpfr_set_q@@Base+0x340>
   22eac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22eb0:	ldr	x1, [x0, #2576]
   22eb4:	add	x0, x0, #0xa10
   22eb8:	blr	x1
   22ebc:	orr	w23, w23, #0x8
   22ec0:	str	w23, [x2, x0]
   22ec4:	add	x0, sp, #0x60
   22ec8:	bl	c070 <mpfr_clear@plt>
   22ecc:	add	x0, sp, #0x80
   22ed0:	bl	c070 <mpfr_clear@plt>
   22ed4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22ed8:	ldr	x1, [x0, #2576]
   22edc:	add	x0, x0, #0xa10
   22ee0:	blr	x1
   22ee4:	mrs	x1, tpidr_el0
   22ee8:	add	x0, x1, x0
   22eec:	ldr	w1, [x0]
   22ef0:	orr	w1, w1, #0x8
   22ef4:	str	w1, [x0]
   22ef8:	ldp	x21, x22, [sp, #32]
   22efc:	ldp	x23, x24, [sp, #48]
   22f00:	ldp	x25, x26, [sp, #64]
   22f04:	mov	w0, w19
   22f08:	ldp	x19, x20, [sp, #16]
   22f0c:	ldp	x29, x30, [sp], #160
   22f10:	ret
   22f14:	ldr	w1, [x1, #20]
   22f18:	cbz	w1, 22f30 <mpfr_set_q@@Base+0x1ec>
   22f1c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22f20:	str	x0, [x20, #16]
   22f24:	mov	w0, #0x1                   	// #1
   22f28:	str	w0, [x20, #8]
   22f2c:	b	22f04 <mpfr_set_q@@Base+0x1c0>
   22f30:	mov	x0, #0x2                   	// #2
   22f34:	movk	x0, #0x8000, lsl #48
   22f38:	str	x0, [x20, #16]
   22f3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22f40:	ldr	x2, [x0, #2576]
   22f44:	add	x0, x0, #0xa10
   22f48:	blr	x2
   22f4c:	mrs	x2, tpidr_el0
   22f50:	add	x0, x2, x0
   22f54:	ldr	w2, [x0]
   22f58:	orr	w2, w2, #0x4
   22f5c:	str	w2, [x0]
   22f60:	mov	w19, w1
   22f64:	b	22f04 <mpfr_set_q@@Base+0x1c0>
   22f68:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22f6c:	str	x0, [x20, #16]
   22f70:	ldr	w1, [x1, #4]
   22f74:	mov	w0, #0x1                   	// #1
   22f78:	cmp	w1, #0x0
   22f7c:	cneg	w0, w0, lt  // lt = tstop
   22f80:	str	w0, [x20, #8]
   22f84:	ldp	x21, x22, [sp, #32]
   22f88:	ldp	x25, x26, [sp, #64]
   22f8c:	b	22f04 <mpfr_set_q@@Base+0x1c0>
   22f90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22f94:	ldr	x1, [x0, #2576]
   22f98:	add	x0, x0, #0xa10
   22f9c:	blr	x1
   22fa0:	mrs	x1, tpidr_el0
   22fa4:	str	w23, [x1, x0]
   22fa8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22fac:	ldr	x2, [x0, #2512]
   22fb0:	add	x0, x0, #0x9d0
   22fb4:	blr	x2
   22fb8:	str	x24, [x1, x0]
   22fbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22fc0:	ldr	x2, [x0, #2544]
   22fc4:	add	x0, x0, #0x9f0
   22fc8:	blr	x2
   22fcc:	str	x25, [x1, x0]
   22fd0:	ldr	w2, [x20, #8]
   22fd4:	mov	w1, w22
   22fd8:	mov	x0, x20
   22fdc:	bl	bf40 <mpfr_overflow@plt>
   22fe0:	mov	w19, w0
   22fe4:	b	23058 <mpfr_set_q@@Base+0x314>
   22fe8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   22fec:	ldr	x1, [x0, #2576]
   22ff0:	add	x0, x0, #0xa10
   22ff4:	blr	x1
   22ff8:	mrs	x1, tpidr_el0
   22ffc:	str	w23, [x1, x0]
   23000:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23004:	ldr	x2, [x0, #2512]
   23008:	add	x0, x0, #0x9d0
   2300c:	blr	x2
   23010:	str	x24, [x1, x0]
   23014:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23018:	ldr	x2, [x0, #2544]
   2301c:	add	x0, x0, #0x9f0
   23020:	blr	x2
   23024:	str	x25, [x1, x0]
   23028:	cmp	w22, #0x0
   2302c:	ldr	w2, [x20, #8]
   23030:	csinc	w1, w22, wzr, ne  // ne = any
   23034:	mov	x0, x20
   23038:	bl	c3c0 <mpfr_underflow@plt>
   2303c:	mov	w19, w0
   23040:	b	23058 <mpfr_set_q@@Base+0x314>
   23044:	mov	w2, w22
   23048:	mov	w1, w19
   2304c:	mov	x0, x20
   23050:	bl	cb30 <mpfr_check_range@plt>
   23054:	mov	w19, w0
   23058:	add	x0, sp, #0x60
   2305c:	bl	c070 <mpfr_clear@plt>
   23060:	add	x0, sp, #0x80
   23064:	bl	c070 <mpfr_clear@plt>
   23068:	cbnz	w19, 22ed4 <mpfr_set_q@@Base+0x190>
   2306c:	ldp	x21, x22, [sp, #32]
   23070:	ldp	x23, x24, [sp, #48]
   23074:	ldp	x25, x26, [sp, #64]
   23078:	b	22f04 <mpfr_set_q@@Base+0x1c0>
   2307c:	mov	w19, w1
   23080:	b	22ec4 <mpfr_set_q@@Base+0x180>
   23084:	add	x0, sp, #0x60
   23088:	bl	c070 <mpfr_clear@plt>
   2308c:	add	x0, sp, #0x80
   23090:	bl	c070 <mpfr_clear@plt>
   23094:	ldp	x21, x22, [sp, #32]
   23098:	ldp	x23, x24, [sp, #48]
   2309c:	ldp	x25, x26, [sp, #64]
   230a0:	b	22f04 <mpfr_set_q@@Base+0x1c0>

00000000000230a4 <mpfr_set_si@@Base>:
   230a4:	stp	x29, x30, [sp, #-16]!
   230a8:	mov	x29, sp
   230ac:	mov	w3, w2
   230b0:	mov	x2, #0x0                   	// #0
   230b4:	bl	ba80 <mpfr_set_si_2exp@plt>
   230b8:	ldp	x29, x30, [sp], #16
   230bc:	ret

00000000000230c0 <mpfr_set_str@@Base>:
   230c0:	mov	w4, w3
   230c4:	ldrb	w3, [x1]
   230c8:	cbz	w3, 230f8 <mpfr_set_str@@Base+0x38>
   230cc:	stp	x29, x30, [sp, #-32]!
   230d0:	mov	x29, sp
   230d4:	mov	w3, w2
   230d8:	add	x2, sp, #0x18
   230dc:	bl	bc10 <mpfr_strtofr@plt>
   230e0:	ldr	x0, [sp, #24]
   230e4:	ldrb	w0, [x0]
   230e8:	cmp	w0, #0x0
   230ec:	csetm	w0, ne  // ne = any
   230f0:	ldp	x29, x30, [sp], #32
   230f4:	ret
   230f8:	mov	w0, #0xffffffff            	// #-1
   230fc:	ret

0000000000023100 <mpfr_init_set_str@@Base>:
   23100:	stp	x29, x30, [sp, #-48]!
   23104:	mov	x29, sp
   23108:	stp	x19, x20, [sp, #16]
   2310c:	stp	x21, x22, [sp, #32]
   23110:	mov	x19, x0
   23114:	mov	x20, x1
   23118:	mov	w21, w2
   2311c:	mov	w22, w3
   23120:	bl	bbd0 <mpfr_init@plt>
   23124:	mov	w3, w22
   23128:	mov	w2, w21
   2312c:	mov	x1, x20
   23130:	mov	x0, x19
   23134:	bl	c6c0 <mpfr_set_str@plt>
   23138:	ldp	x19, x20, [sp, #16]
   2313c:	ldp	x21, x22, [sp, #32]
   23140:	ldp	x29, x30, [sp], #48
   23144:	ret

0000000000023148 <mpfr_set_str_binary@@Base>:
   23148:	stp	x29, x30, [sp, #-16]!
   2314c:	mov	x29, sp
   23150:	ldrb	w2, [x1]
   23154:	cmp	w2, #0x4e
   23158:	b.eq	23194 <mpfr_set_str_binary@@Base+0x4c>  // b.none
   2315c:	sub	w2, w2, #0x2b
   23160:	and	w2, w2, #0xfffffffd
   23164:	tst	w2, #0xff
   23168:	cset	w2, eq  // eq = none
   2316c:	ldrb	w2, [x1, w2, uxtw]
   23170:	cmp	w2, #0x49
   23174:	b.eq	231c8 <mpfr_set_str_binary@@Base+0x80>  // b.none
   23178:	mov	w4, #0x1                   	// #1
   2317c:	mov	w3, #0x2                   	// #2
   23180:	mov	x2, #0x0                   	// #0
   23184:	bl	bc10 <mpfr_strtofr@plt>
   23188:	cbnz	w0, 231e8 <mpfr_set_str_binary@@Base+0xa0>
   2318c:	ldp	x29, x30, [sp], #16
   23190:	ret
   23194:	mov	x1, #0x2                   	// #2
   23198:	movk	x1, #0x8000, lsl #48
   2319c:	str	x1, [x0, #16]
   231a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   231a4:	ldr	x1, [x0, #2576]
   231a8:	add	x0, x0, #0xa10
   231ac:	blr	x1
   231b0:	mrs	x1, tpidr_el0
   231b4:	add	x0, x1, x0
   231b8:	ldr	w1, [x0]
   231bc:	orr	w1, w1, #0x4
   231c0:	str	w1, [x0]
   231c4:	b	2318c <mpfr_set_str_binary@@Base+0x44>
   231c8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   231cc:	str	x2, [x0, #16]
   231d0:	ldrb	w1, [x1]
   231d4:	cmp	w1, #0x2d
   231d8:	mov	w1, #0xffffffff            	// #-1
   231dc:	csinc	w1, w1, wzr, eq  // eq = none
   231e0:	str	w1, [x0, #8]
   231e4:	b	2318c <mpfr_set_str_binary@@Base+0x44>
   231e8:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   231ec:	add	x2, x2, #0xa20
   231f0:	mov	w1, #0x36                  	// #54
   231f4:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   231f8:	add	x0, x0, #0xa30
   231fc:	bl	cb40 <mpfr_assert_fail@plt>

0000000000023200 <mpfr_set_ui@@Base>:
   23200:	stp	x29, x30, [sp, #-16]!
   23204:	mov	x29, sp
   23208:	mov	w3, w2
   2320c:	mov	x2, #0x0                   	// #0
   23210:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   23214:	ldp	x29, x30, [sp], #16
   23218:	ret

000000000002321c <mpfr_set_z@@Base>:
   2321c:	stp	x29, x30, [sp, #-16]!
   23220:	mov	x29, sp
   23224:	mov	w3, w2
   23228:	mov	x2, #0x0                   	// #0
   2322c:	bl	c4f0 <mpfr_set_z_2exp@plt>
   23230:	ldp	x29, x30, [sp], #16
   23234:	ret

0000000000023238 <mpfr_sqrt@@Base>:
   23238:	stp	x29, x30, [sp, #-208]!
   2323c:	mov	x29, sp
   23240:	stp	x19, x20, [sp, #16]
   23244:	stp	x21, x22, [sp, #32]
   23248:	stp	x23, x24, [sp, #48]
   2324c:	stp	x25, x26, [sp, #64]
   23250:	stp	x27, x28, [sp, #80]
   23254:	mov	x22, x0
   23258:	mov	x21, x1
   2325c:	str	w2, [x29, #124]
   23260:	ldr	x19, [x0]
   23264:	ldr	x0, [x1, #16]
   23268:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2326c:	cmp	x0, x1
   23270:	b.le	23454 <mpfr_sqrt@@Base+0x21c>
   23274:	ldr	w0, [x21, #8]
   23278:	tbnz	w0, #31, 2350c <mpfr_sqrt@@Base+0x2d4>
   2327c:	mov	w0, #0x1                   	// #1
   23280:	str	w0, [x22, #8]
   23284:	ldr	x0, [x21]
   23288:	cmp	x19, x0
   2328c:	b.eq	23544 <mpfr_sqrt@@Base+0x30c>  // b.none
   23290:	str	xzr, [x29, #200]
   23294:	neg	w24, w19
   23298:	and	w24, w24, #0x3f
   2329c:	ldr	w1, [x29, #124]
   232a0:	orr	w1, w1, w24
   232a4:	cbz	w1, 24440 <mpfr_sqrt@@Base+0x1208>
   232a8:	add	x20, x19, #0x3e
   232ac:	subs	x19, x19, #0x1
   232b0:	csel	x19, x20, x19, mi  // mi = first
   232b4:	asr	x20, x19, #6
   232b8:	add	x20, x20, #0x1
   232bc:	lsl	x25, x20, #1
   232c0:	add	x19, x0, #0x3e
   232c4:	subs	x0, x0, #0x1
   232c8:	csel	x0, x19, x0, mi  // mi = first
   232cc:	asr	x19, x0, #6
   232d0:	add	x19, x19, #0x1
   232d4:	ldr	x23, [x22, #24]
   232d8:	mov	x26, x23
   232dc:	str	wzr, [x29, #108]
   232e0:	ldr	x0, [x21, #24]
   232e4:	str	x0, [x29, #112]
   232e8:	ldr	x0, [x21, #16]
   232ec:	and	w0, w0, #0x1
   232f0:	str	w0, [x29, #120]
   232f4:	str	x25, [x29, #96]
   232f8:	lsl	x1, x25, #3
   232fc:	cmp	x1, #0x4, lsl #12
   23300:	b.hi	24190 <mpfr_sqrt@@Base+0xf58>  // b.pmore
   23304:	sub	sp, sp, x1
   23308:	mov	x27, sp
   2330c:	cmp	x25, x19
   23310:	b.lt	241bc <mpfr_sqrt@@Base+0xf84>  // b.tstop
   23314:	subs	x28, x25, x19
   23318:	b.eq	24410 <mpfr_sqrt@@Base+0x11d8>  // b.none
   2331c:	lsl	x2, x28, #3
   23320:	mov	w1, #0x0                   	// #0
   23324:	mov	x0, x27
   23328:	bl	c110 <memset@plt>
   2332c:	ldr	w0, [x29, #120]
   23330:	cbz	w0, 24418 <mpfr_sqrt@@Base+0x11e0>
   23334:	lsl	x0, x28, #3
   23338:	sub	x28, x0, #0x8
   2333c:	mov	w3, #0x1                   	// #1
   23340:	mov	x2, x19
   23344:	ldr	x1, [x29, #112]
   23348:	add	x0, x27, x0
   2334c:	bl	bce0 <__gmpn_rshift@plt>
   23350:	str	x0, [x27, x28]
   23354:	mov	x28, #0x0                   	// #0
   23358:	mov	x3, x25
   2335c:	mov	x2, x27
   23360:	mov	x1, #0x0                   	// #0
   23364:	mov	x0, x23
   23368:	bl	ccc0 <__gmpn_sqrtrem@plt>
   2336c:	orr	x1, x0, x28
   23370:	cmp	x1, #0x0
   23374:	cset	x2, ne  // ne = any
   23378:	ldr	x3, [x23]
   2337c:	mov	x1, #0x1                   	// #1
   23380:	lsl	x1, x1, x24
   23384:	sub	x1, x1, #0x1
   23388:	cmp	w24, #0x40
   2338c:	csinv	x1, x1, xzr, lt  // lt = tstop
   23390:	and	x4, x3, x1
   23394:	bic	x1, x3, x1
   23398:	str	x1, [x23]
   2339c:	orr	x2, x2, x4
   233a0:	ldr	x19, [x21, #16]
   233a4:	ldr	w3, [x29, #120]
   233a8:	add	x19, x19, w3, sxtw
   233ac:	add	x19, x19, x19, lsr #63
   233b0:	asr	x19, x19, #1
   233b4:	ldr	w3, [x29, #124]
   233b8:	and	w3, w3, #0xfffffffd
   233bc:	cmp	x2, #0x0
   233c0:	ccmp	w3, #0x1, #0x4, ne  // ne = any
   233c4:	b.ne	24230 <mpfr_sqrt@@Base+0xff8>  // b.any
   233c8:	cmp	x2, #0x0
   233cc:	csetm	w21, ne  // ne = any
   233d0:	ldr	w0, [x29, #108]
   233d4:	cbnz	w0, 24368 <mpfr_sqrt@@Base+0x1130>
   233d8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   233dc:	add	x0, x19, x0
   233e0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   233e4:	cmp	x0, x1
   233e8:	b.hi	24388 <mpfr_sqrt@@Base+0x1150>  // b.pmore
   233ec:	str	x19, [x22, #16]
   233f0:	ldr	x0, [x29, #200]
   233f4:	cbnz	x0, 243a0 <mpfr_sqrt@@Base+0x1168>
   233f8:	ldr	x1, [x22, #16]
   233fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23400:	ldr	x2, [x0, #2512]
   23404:	add	x0, x0, #0x9d0
   23408:	blr	x2
   2340c:	mrs	x2, tpidr_el0
   23410:	ldr	x0, [x2, x0]
   23414:	cmp	x1, x0
   23418:	b.lt	2343c <mpfr_sqrt@@Base+0x204>  // b.tstop
   2341c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23420:	ldr	x2, [x0, #2544]
   23424:	add	x0, x0, #0x9f0
   23428:	blr	x2
   2342c:	mrs	x2, tpidr_el0
   23430:	ldr	x0, [x2, x0]
   23434:	cmp	x1, x0
   23438:	b.le	243d0 <mpfr_sqrt@@Base+0x1198>
   2343c:	ldr	w2, [x29, #124]
   23440:	mov	w1, w21
   23444:	mov	x0, x22
   23448:	bl	cb30 <mpfr_check_range@plt>
   2344c:	mov	w21, w0
   23450:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23454:	mov	x1, #0x2                   	// #2
   23458:	movk	x1, #0x8000, lsl #48
   2345c:	cmp	x0, x1
   23460:	b.eq	23490 <mpfr_sqrt@@Base+0x258>  // b.none
   23464:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23468:	cmp	x0, x1
   2346c:	b.eq	234c0 <mpfr_sqrt@@Base+0x288>  // b.none
   23470:	ldr	w0, [x21, #8]
   23474:	tbnz	w0, #31, 234d4 <mpfr_sqrt@@Base+0x29c>
   23478:	mov	w0, #0x1                   	// #1
   2347c:	str	w0, [x22, #8]
   23480:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   23484:	str	x0, [x22, #16]
   23488:	mov	w21, #0x0                   	// #0
   2348c:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23490:	str	x1, [x22, #16]
   23494:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23498:	ldr	x1, [x0, #2576]
   2349c:	add	x0, x0, #0xa10
   234a0:	blr	x1
   234a4:	mrs	x1, tpidr_el0
   234a8:	add	x0, x1, x0
   234ac:	ldr	w1, [x0]
   234b0:	orr	w1, w1, #0x4
   234b4:	str	w1, [x0]
   234b8:	mov	w21, #0x0                   	// #0
   234bc:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   234c0:	ldr	w0, [x21, #8]
   234c4:	str	w0, [x22, #8]
   234c8:	str	x1, [x22, #16]
   234cc:	mov	w21, #0x0                   	// #0
   234d0:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   234d4:	mov	x0, #0x2                   	// #2
   234d8:	movk	x0, #0x8000, lsl #48
   234dc:	str	x0, [x22, #16]
   234e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   234e4:	ldr	x1, [x0, #2576]
   234e8:	add	x0, x0, #0xa10
   234ec:	blr	x1
   234f0:	mrs	x1, tpidr_el0
   234f4:	add	x0, x1, x0
   234f8:	ldr	w1, [x0]
   234fc:	orr	w1, w1, #0x4
   23500:	str	w1, [x0]
   23504:	mov	w21, #0x0                   	// #0
   23508:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   2350c:	mov	x0, #0x2                   	// #2
   23510:	movk	x0, #0x8000, lsl #48
   23514:	str	x0, [x22, #16]
   23518:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2351c:	ldr	x1, [x0, #2576]
   23520:	add	x0, x0, #0xa10
   23524:	blr	x1
   23528:	mrs	x1, tpidr_el0
   2352c:	add	x0, x1, x0
   23530:	ldr	w1, [x0]
   23534:	orr	w1, w1, #0x4
   23538:	str	w1, [x0]
   2353c:	mov	w21, #0x0                   	// #0
   23540:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23544:	cmp	x19, #0x3f
   23548:	b.le	23708 <mpfr_sqrt@@Base+0x4d0>
   2354c:	sub	x1, x19, #0x41
   23550:	cmp	x1, #0x3e
   23554:	b.ls	23a3c <mpfr_sqrt@@Base+0x804>  // b.plast
   23558:	cmp	x19, #0x40
   2355c:	b.ne	23290 <mpfr_sqrt@@Base+0x58>  // b.any
   23560:	ldr	x4, [x21, #16]
   23564:	ldr	x6, [x22, #24]
   23568:	ldr	x0, [x21, #24]
   2356c:	ldr	x5, [x0]
   23570:	mov	x8, #0x0                   	// #0
   23574:	tbz	w4, #0, 23584 <mpfr_sqrt@@Base+0x34c>
   23578:	lsl	x8, x5, #63
   2357c:	lsr	x5, x5, #1
   23580:	add	x4, x4, #0x1
   23584:	add	x4, x4, x4, lsr #63
   23588:	asr	x4, x4, #1
   2358c:	lsr	x2, x5, #54
   23590:	sub	x2, x2, #0x100
   23594:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x1c38>
   23598:	add	x0, x0, #0x2f0
   2359c:	ldr	x3, [x0, x2, lsl #3]
   235a0:	lsr	x1, x5, #27
   235a4:	lsl	x0, x3, #57
   235a8:	adrp	x7, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   235ac:	add	x7, x7, #0xaf0
   235b0:	ldr	x7, [x7, x2, lsl #3]
   235b4:	mov	x2, x1
   235b8:	madd	x7, x1, x7, x7
   235bc:	sub	x0, x0, x7
   235c0:	lsl	x3, x3, #11
   235c4:	add	x0, x3, x0, lsr #47
   235c8:	mul	x1, x0, x0
   235cc:	madd	x1, x2, x1, x1
   235d0:	neg	x1, x1
   235d4:	umulh	x1, x0, x1
   235d8:	lsr	x1, x1, #6
   235dc:	add	x3, x1, x0, lsl #10
   235e0:	lsr	x0, x5, #31
   235e4:	mul	x0, x0, x3
   235e8:	lsr	x0, x0, #32
   235ec:	msub	x1, x0, x0, x5
   235f0:	mov	x2, #0x1fffffffe           	// #8589934590
   235f4:	cmp	x1, x2
   235f8:	b.ls	23618 <mpfr_sqrt@@Base+0x3e0>  // b.plast
   235fc:	mvn	x2, x0, lsl #1
   23600:	mov	x7, #0x1fffffffe           	// #8589934590
   23604:	add	x1, x1, x2
   23608:	add	x0, x0, #0x1
   2360c:	sub	x2, x2, #0x2
   23610:	cmp	x1, x7
   23614:	b.hi	23604 <mpfr_sqrt@@Base+0x3cc>  // b.pmore
   23618:	lsl	x2, x0, #1
   2361c:	cmp	x1, x0, lsl #1
   23620:	b.ls	23630 <mpfr_sqrt@@Base+0x3f8>  // b.plast
   23624:	sub	x1, x1, #0x1
   23628:	sub	x1, x1, x2
   2362c:	add	x0, x0, #0x1
   23630:	mul	x1, x3, x1
   23634:	lsl	x0, x0, #32
   23638:	adds	x1, x0, x1, lsr #32
   2363c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23640:	csel	x1, x1, x0, mi  // mi = first
   23644:	umulh	x2, x1, x1
   23648:	mul	x3, x1, x1
   2364c:	subs	x0, x8, x3
   23650:	sbc	x5, x5, x2
   23654:	mov	x3, x5
   23658:	cbnz	x5, 2403c <mpfr_sqrt@@Base+0xe04>
   2365c:	mov	x3, #0x0                   	// #0
   23660:	cmp	x1, x0
   23664:	cset	w2, cc  // cc = lo, ul, last
   23668:	cmp	x3, #0x0
   2366c:	csinc	w2, w2, wzr, eq  // eq = none
   23670:	and	x3, x2, #0xff
   23674:	orr	x3, x3, x0
   23678:	str	x1, [x6]
   2367c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23680:	ldr	x5, [x0, #2544]
   23684:	add	x0, x0, #0x9f0
   23688:	blr	x5
   2368c:	mrs	x5, tpidr_el0
   23690:	ldr	x0, [x5, x0]
   23694:	cmp	x4, x0
   23698:	b.gt	24050 <mpfr_sqrt@@Base+0xe18>
   2369c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   236a0:	ldr	x5, [x0, #2512]
   236a4:	add	x0, x0, #0x9d0
   236a8:	blr	x5
   236ac:	mrs	x5, tpidr_el0
   236b0:	ldr	x0, [x5, x0]
   236b4:	cmp	x4, x0
   236b8:	b.lt	24068 <mpfr_sqrt@@Base+0xe30>  // b.tstop
   236bc:	str	x4, [x22, #16]
   236c0:	cmp	x3, #0x0
   236c4:	mov	w21, #0x0                   	// #0
   236c8:	ldr	w0, [x29, #124]
   236cc:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   236d0:	b.eq	243d4 <mpfr_sqrt@@Base+0x119c>  // b.none
   236d4:	cbnz	w0, 24098 <mpfr_sqrt@@Base+0xe60>
   236d8:	cbnz	w2, 240a8 <mpfr_sqrt@@Base+0xe70>
   236dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   236e0:	ldr	x1, [x0, #2576]
   236e4:	add	x0, x0, #0xa10
   236e8:	blr	x1
   236ec:	mrs	x1, tpidr_el0
   236f0:	add	x0, x1, x0
   236f4:	ldr	w1, [x0]
   236f8:	orr	w1, w1, #0x8
   236fc:	str	w1, [x0]
   23700:	mov	w21, #0xffffffff            	// #-1
   23704:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23708:	ldr	x4, [x21, #16]
   2370c:	mov	x5, #0x40                  	// #64
   23710:	sub	x19, x5, x19
   23714:	mov	x6, #0x1                   	// #1
   23718:	lsl	x6, x6, x19
   2371c:	sub	x8, x6, #0x1
   23720:	ldr	x7, [x22, #24]
   23724:	ldr	x0, [x21, #24]
   23728:	ldr	x9, [x0]
   2372c:	tbz	w4, #0, 23738 <mpfr_sqrt@@Base+0x500>
   23730:	lsr	x9, x9, #1
   23734:	add	x4, x4, #0x1
   23738:	add	x4, x4, x4, lsr #63
   2373c:	asr	x4, x4, #1
   23740:	lsr	x2, x9, #54
   23744:	sub	x2, x2, #0x100
   23748:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x1c38>
   2374c:	add	x0, x0, #0x2f0
   23750:	ldr	x1, [x0, x2, lsl #3]
   23754:	lsr	x3, x9, #27
   23758:	lsl	x0, x1, #57
   2375c:	adrp	x5, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   23760:	add	x5, x5, #0xaf0
   23764:	ldr	x2, [x5, x2, lsl #3]
   23768:	madd	x2, x3, x2, x2
   2376c:	sub	x0, x0, x2
   23770:	lsl	x1, x1, #11
   23774:	add	x0, x1, x0, lsr #47
   23778:	mul	x1, x0, x0
   2377c:	madd	x3, x3, x1, x1
   23780:	neg	x3, x3
   23784:	umulh	x3, x0, x3
   23788:	lsr	x3, x3, #6
   2378c:	add	x3, x3, x0, lsl #10
   23790:	lsr	x1, x9, #31
   23794:	mul	x1, x1, x3
   23798:	lsr	x1, x1, #32
   2379c:	msub	x0, x1, x1, x9
   237a0:	mov	x2, #0x1fffffffe           	// #8589934590
   237a4:	cmp	x0, x2
   237a8:	b.ls	237c8 <mpfr_sqrt@@Base+0x590>  // b.plast
   237ac:	mvn	x2, x1, lsl #1
   237b0:	mov	x5, #0x1fffffffe           	// #8589934590
   237b4:	add	x0, x0, x2
   237b8:	add	x1, x1, #0x1
   237bc:	sub	x2, x2, #0x2
   237c0:	cmp	x0, x5
   237c4:	b.hi	237b4 <mpfr_sqrt@@Base+0x57c>  // b.pmore
   237c8:	lsl	x2, x1, #1
   237cc:	cmp	x0, x1, lsl #1
   237d0:	b.ls	237e0 <mpfr_sqrt@@Base+0x5a8>  // b.plast
   237d4:	sub	x0, x0, #0x1
   237d8:	sub	x0, x0, x2
   237dc:	add	x1, x1, #0x1
   237e0:	mul	x0, x3, x0
   237e4:	lsl	x1, x1, #32
   237e8:	add	x0, x1, x0, lsr #32
   237ec:	add	x1, x0, #0x7
   237f0:	and	x1, x1, x8, lsr #1
   237f4:	cmp	x1, #0x7
   237f8:	b.ls	238c4 <mpfr_sqrt@@Base+0x68c>  // b.plast
   237fc:	sub	w19, w19, #0x1
   23800:	mov	x5, #0x1                   	// #1
   23804:	lsl	x5, x5, x19
   23808:	eor	x2, x8, x5
   2380c:	and	x2, x2, x0
   23810:	orr	x2, x2, #0x1
   23814:	neg	x3, x6
   23818:	and	x1, x3, x0
   2381c:	str	x1, [x7]
   23820:	ands	x5, x0, x5
   23824:	cset	w10, ne  // ne = any
   23828:	mov	w9, #0x0                   	// #0
   2382c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23830:	ldr	x8, [x0, #2544]
   23834:	add	x0, x0, #0x9f0
   23838:	blr	x8
   2383c:	mrs	x8, tpidr_el0
   23840:	ldr	x0, [x8, x0]
   23844:	cmp	x4, x0
   23848:	b.gt	23960 <mpfr_sqrt@@Base+0x728>
   2384c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23850:	ldr	x8, [x0, #2512]
   23854:	add	x0, x0, #0x9d0
   23858:	blr	x8
   2385c:	mrs	x8, tpidr_el0
   23860:	ldr	x0, [x8, x0]
   23864:	cmp	x4, x0
   23868:	b.lt	23978 <mpfr_sqrt@@Base+0x740>  // b.tstop
   2386c:	str	x4, [x22, #16]
   23870:	cmp	w9, #0x0
   23874:	mov	w21, #0x0                   	// #0
   23878:	ldr	w0, [x29, #124]
   2387c:	ccmp	w0, #0x5, #0x4, eq  // eq = none
   23880:	b.eq	243d4 <mpfr_sqrt@@Base+0x119c>  // b.none
   23884:	cbz	w0, 2449c <mpfr_sqrt@@Base+0x1264>
   23888:	ldr	w0, [x29, #124]
   2388c:	and	w0, w0, #0xfffffffd
   23890:	cmp	w0, #0x1
   23894:	b.ne	244a0 <mpfr_sqrt@@Base+0x1268>  // b.any
   23898:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2389c:	ldr	x1, [x0, #2576]
   238a0:	add	x0, x0, #0xa10
   238a4:	blr	x1
   238a8:	mrs	x1, tpidr_el0
   238ac:	add	x0, x1, x0
   238b0:	ldr	w1, [x0]
   238b4:	orr	w1, w1, #0x8
   238b8:	str	w1, [x0]
   238bc:	mov	w21, #0xffffffff            	// #-1
   238c0:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   238c4:	cmp	x0, #0x0
   238c8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   238cc:	csel	x0, x0, x1, lt  // lt = tstop
   238d0:	umulh	x1, x0, x0
   238d4:	mul	x3, x0, x0
   238d8:	negs	x2, x3
   238dc:	sbc	x9, x9, x1
   238e0:	mov	x1, x9
   238e4:	cbnz	x9, 2394c <mpfr_sqrt@@Base+0x714>
   238e8:	mov	x1, #0x0                   	// #0
   238ec:	orr	x2, x2, x1
   238f0:	sub	w19, w19, #0x1
   238f4:	mov	x9, #0x1                   	// #1
   238f8:	lsl	x9, x9, x19
   238fc:	eor	x5, x8, x9
   23900:	and	x5, x5, x0
   23904:	orr	x2, x5, x2
   23908:	neg	x3, x6
   2390c:	and	x1, x3, x0
   23910:	str	x1, [x7]
   23914:	ands	x5, x9, x0
   23918:	cset	w10, ne  // ne = any
   2391c:	cmp	x2, #0x0
   23920:	cset	w9, eq  // eq = none
   23924:	b	2382c <mpfr_sqrt@@Base+0x5f4>
   23928:	cmp	x0, x2
   2392c:	cset	x9, hi  // hi = pmore
   23930:	sub	x2, x2, x0
   23934:	add	x0, x0, #0x1
   23938:	cmp	x2, x0
   2393c:	cinc	x9, x9, cc  // cc = lo, ul, last
   23940:	sub	x2, x2, x0
   23944:	subs	x1, x1, x9
   23948:	b.eq	238e8 <mpfr_sqrt@@Base+0x6b0>  // b.none
   2394c:	cmp	x1, #0x1
   23950:	b.ne	23928 <mpfr_sqrt@@Base+0x6f0>  // b.any
   23954:	cmp	x2, x0, lsl #1
   23958:	b.hi	23928 <mpfr_sqrt@@Base+0x6f0>  // b.pmore
   2395c:	b	238ec <mpfr_sqrt@@Base+0x6b4>
   23960:	mov	w2, #0x1                   	// #1
   23964:	ldr	w1, [x29, #124]
   23968:	mov	x0, x22
   2396c:	bl	bf40 <mpfr_overflow@plt>
   23970:	mov	w21, w0
   23974:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23978:	ldr	w8, [x29, #124]
   2397c:	cbnz	w8, 239d4 <mpfr_sqrt@@Base+0x79c>
   23980:	sub	x0, x0, #0x1
   23984:	cmp	w10, #0x0
   23988:	ccmp	x1, x3, #0x0, ne  // ne = any
   2398c:	ccmp	x4, x0, #0x0, eq  // eq = none
   23990:	b.ne	239a0 <mpfr_sqrt@@Base+0x768>  // b.any
   23994:	str	x4, [x22, #16]
   23998:	cbz	x5, 23898 <mpfr_sqrt@@Base+0x660>
   2399c:	b	244a0 <mpfr_sqrt@@Base+0x1268>
   239a0:	cmp	x4, x0
   239a4:	b.lt	23a10 <mpfr_sqrt@@Base+0x7d8>  // b.tstop
   239a8:	cmp	w9, #0x0
   239ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   239b0:	ccmp	x1, x0, #0x0, ne  // ne = any
   239b4:	cset	w0, eq  // eq = none
   239b8:	str	w0, [x29, #124]
   239bc:	mov	w2, #0x1                   	// #1
   239c0:	ldr	w1, [x29, #124]
   239c4:	mov	x0, x22
   239c8:	bl	c3c0 <mpfr_underflow@plt>
   239cc:	mov	w21, w0
   239d0:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   239d4:	ldr	w8, [x29, #124]
   239d8:	sub	w8, w8, #0x2
   239dc:	tst	w8, #0xfffffffd
   239e0:	b.ne	239bc <mpfr_sqrt@@Base+0x784>  // b.any
   239e4:	sub	x0, x0, #0x1
   239e8:	cmp	x0, x4
   239ec:	ccmp	x1, x3, #0x0, eq  // eq = none
   239f0:	b.ne	239bc <mpfr_sqrt@@Base+0x784>  // b.any
   239f4:	orr	x2, x5, x2
   239f8:	cbz	x2, 239bc <mpfr_sqrt@@Base+0x784>
   239fc:	str	x4, [x22, #16]
   23a00:	cmp	w9, #0x0
   23a04:	ldr	w0, [x29, #124]
   23a08:	ccmp	w0, #0x5, #0x4, eq  // eq = none
   23a0c:	b.ne	244a0 <mpfr_sqrt@@Base+0x1268>  // b.any
   23a10:	mov	w0, #0x1                   	// #1
   23a14:	str	w0, [x29, #124]
   23a18:	b	239bc <mpfr_sqrt@@Base+0x784>
   23a1c:	str	x0, [x7]
   23a20:	b	244dc <mpfr_sqrt@@Base+0x12a4>
   23a24:	mov	w2, #0x1                   	// #1
   23a28:	ldr	w1, [x29, #124]
   23a2c:	mov	x0, x22
   23a30:	bl	bf40 <mpfr_overflow@plt>
   23a34:	mov	w21, w0
   23a38:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23a3c:	ldr	x0, [x21, #24]
   23a40:	ldr	x23, [x22, #24]
   23a44:	ldr	x20, [x21, #16]
   23a48:	mov	x1, #0x80                  	// #128
   23a4c:	sub	x19, x1, x19
   23a50:	tbz	w20, #0, 23ba8 <mpfr_sqrt@@Base+0x970>
   23a54:	ldr	x1, [x0, #8]
   23a58:	lsr	x1, x1, #1
   23a5c:	str	x1, [x29, #160]
   23a60:	ldr	x1, [x0, #8]
   23a64:	ldr	x2, [x0]
   23a68:	extr	x1, x1, x2, #1
   23a6c:	str	x1, [x29, #152]
   23a70:	ldr	x0, [x0]
   23a74:	lsl	x0, x0, #63
   23a78:	str	x0, [x29, #144]
   23a7c:	add	x20, x20, #0x1
   23a80:	add	x20, x20, x20, lsr #63
   23a84:	asr	x20, x20, #1
   23a88:	mov	x24, #0x1                   	// #1
   23a8c:	lsl	x24, x24, x19
   23a90:	sub	x21, x24, #0x1
   23a94:	ldr	x1, [x29, #160]
   23a98:	lsr	x4, x1, #54
   23a9c:	sub	x4, x4, #0x100
   23aa0:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x1c38>
   23aa4:	add	x0, x0, #0x2f0
   23aa8:	ldr	x3, [x0, x4, lsl #3]
   23aac:	lsr	x5, x1, #27
   23ab0:	lsl	x0, x3, #57
   23ab4:	adrp	x6, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   23ab8:	add	x6, x6, #0xaf0
   23abc:	ldr	x4, [x6, x4, lsl #3]
   23ac0:	madd	x4, x5, x4, x4
   23ac4:	sub	x0, x0, x4
   23ac8:	lsl	x3, x3, #11
   23acc:	add	x0, x3, x0, lsr #47
   23ad0:	mul	x2, x0, x0
   23ad4:	madd	x5, x5, x2, x2
   23ad8:	neg	x5, x5
   23adc:	umulh	x5, x0, x5
   23ae0:	lsr	x5, x5, #6
   23ae4:	add	x0, x5, x0, lsl #10
   23ae8:	mul	x5, x0, x0
   23aec:	umulh	x5, x5, x1
   23af0:	add	x5, x5, #0x2
   23af4:	mov	x2, #0x2000000000000000    	// #2305843009213693952
   23af8:	sub	x5, x2, x5, lsr #1
   23afc:	mul	x5, x0, x5
   23b00:	lsl	x0, x0, #33
   23b04:	add	x5, x0, x5, lsr #29
   23b08:	umulh	x4, x5, x1
   23b0c:	adds	x4, x1, x4
   23b10:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23b14:	csel	x4, x4, x0, mi  // mi = first
   23b18:	umulh	x0, x4, x4
   23b1c:	mul	x2, x4, x4
   23b20:	negs	x6, x2
   23b24:	sbc	x1, x1, x0
   23b28:	mov	x0, x1
   23b2c:	mov	x2, x6
   23b30:	cmp	x1, #0xf
   23b34:	b.ls	23b58 <mpfr_sqrt@@Base+0x920>  // b.plast
   23b38:	lsr	x0, x4, #60
   23b3c:	lsl	x2, x4, #4
   23b40:	subs	x3, x6, x2
   23b44:	sbc	x0, x1, x0
   23b48:	subs	x2, x3, #0x40
   23b4c:	sbc	x3, x0, xzr
   23b50:	mov	x0, x3
   23b54:	add	x4, x4, #0x8
   23b58:	cmp	x0, #0x7
   23b5c:	b.ls	23b80 <mpfr_sqrt@@Base+0x948>  // b.plast
   23b60:	lsr	x1, x4, #61
   23b64:	lsl	x6, x4, #3
   23b68:	subs	x3, x2, x6
   23b6c:	sbc	x2, x0, x1
   23b70:	subs	x1, x3, #0x10
   23b74:	sbc	x0, x2, xzr
   23b78:	mov	x2, x1
   23b7c:	add	x4, x4, #0x4
   23b80:	cmp	x0, #0x3
   23b84:	b.ls	23bdc <mpfr_sqrt@@Base+0x9a4>  // b.plast
   23b88:	lsr	x1, x4, #62
   23b8c:	lsl	x6, x4, #2
   23b90:	subs	x3, x2, x6
   23b94:	sbc	x1, x0, x1
   23b98:	subs	x2, x3, #0x4
   23b9c:	sbc	x0, x1, xzr
   23ba0:	add	x4, x4, #0x2
   23ba4:	b	23bdc <mpfr_sqrt@@Base+0x9a4>
   23ba8:	ldr	x1, [x0, #8]
   23bac:	str	x1, [x29, #160]
   23bb0:	ldr	x0, [x0]
   23bb4:	str	x0, [x29, #152]
   23bb8:	str	xzr, [x29, #144]
   23bbc:	b	23a80 <mpfr_sqrt@@Base+0x848>
   23bc0:	lsr	x3, x4, #63
   23bc4:	lsl	x1, x4, #1
   23bc8:	add	x1, x1, #0x1
   23bcc:	subs	x6, x2, x1
   23bd0:	sbc	x0, x0, x3
   23bd4:	mov	x2, x6
   23bd8:	add	x4, x4, #0x1
   23bdc:	cmp	x0, #0x1
   23be0:	b.hi	23bc0 <mpfr_sqrt@@Base+0x988>  // b.pmore
   23be4:	b.ne	23bf0 <mpfr_sqrt@@Base+0x9b8>  // b.any
   23be8:	cmp	x2, x4, lsl #1
   23bec:	b.hi	23bc0 <mpfr_sqrt@@Base+0x988>  // b.pmore
   23bf0:	ldr	x1, [x29, #152]
   23bf4:	adds	x1, x2, x1
   23bf8:	cinc	x0, x0, cs  // cs = hs, nlast
   23bfc:	extr	x1, x0, x1, #1
   23c00:	lsr	x0, x0, #1
   23c04:	umulh	x2, x5, x1
   23c08:	adds	x1, x1, x2
   23c0c:	adc	x4, x4, x0
   23c10:	cbz	x0, 23c1c <mpfr_sqrt@@Base+0x9e4>
   23c14:	adds	x1, x1, x5
   23c18:	cinc	x4, x4, cs  // cs = hs, nlast
   23c1c:	str	x1, [x23]
   23c20:	str	x4, [x23, #8]
   23c24:	add	x1, x1, #0x1a
   23c28:	and	x1, x1, x21, lsr #1
   23c2c:	mov	x2, #0x1                   	// #1
   23c30:	cmp	x1, #0x1e
   23c34:	b.ls	23d40 <mpfr_sqrt@@Base+0xb08>  // b.plast
   23c38:	ldr	x0, [x23]
   23c3c:	sub	w19, w19, #0x1
   23c40:	mov	x1, #0x1                   	// #1
   23c44:	lsl	x19, x1, x19
   23c48:	and	x4, x0, x19
   23c4c:	eor	x21, x21, x19
   23c50:	and	x21, x21, x0
   23c54:	orr	x21, x21, x2
   23c58:	neg	x2, x24
   23c5c:	and	x1, x0, x2
   23c60:	str	x1, [x23]
   23c64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23c68:	ldr	x3, [x0, #2544]
   23c6c:	add	x0, x0, #0x9f0
   23c70:	blr	x3
   23c74:	mrs	x3, tpidr_el0
   23c78:	ldr	x0, [x3, x0]
   23c7c:	cmp	x20, x0
   23c80:	b.gt	23ef4 <mpfr_sqrt@@Base+0xcbc>
   23c84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23c88:	ldr	x3, [x0, #2512]
   23c8c:	add	x0, x0, #0x9d0
   23c90:	blr	x3
   23c94:	mrs	x3, tpidr_el0
   23c98:	ldr	x0, [x3, x0]
   23c9c:	cmp	x20, x0
   23ca0:	b.lt	23f0c <mpfr_sqrt@@Base+0xcd4>  // b.tstop
   23ca4:	str	x20, [x22, #16]
   23ca8:	cmp	x21, #0x0
   23cac:	mov	w21, #0x0                   	// #0
   23cb0:	ldr	w0, [x29, #124]
   23cb4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   23cb8:	b.eq	243d4 <mpfr_sqrt@@Base+0x119c>  // b.none
   23cbc:	ldr	w0, [x29, #124]
   23cc0:	cbnz	w0, 23fb0 <mpfr_sqrt@@Base+0xd78>
   23cc4:	cbz	x4, 23fc0 <mpfr_sqrt@@Base+0xd88>
   23cc8:	ldr	x0, [x23]
   23ccc:	add	x24, x24, x0
   23cd0:	str	x24, [x23]
   23cd4:	cmp	x24, #0x0
   23cd8:	ldr	x0, [x23, #8]
   23cdc:	cinc	x0, x0, eq  // eq = none
   23ce0:	cbnz	x0, 23ff8 <mpfr_sqrt@@Base+0xdc0>
   23ce4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23ce8:	str	x0, [x23, #8]
   23cec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23cf0:	ldr	x1, [x0, #2544]
   23cf4:	add	x0, x0, #0x9f0
   23cf8:	blr	x1
   23cfc:	mrs	x1, tpidr_el0
   23d00:	ldr	x0, [x1, x0]
   23d04:	cmp	x20, x0
   23d08:	b.ge	24000 <mpfr_sqrt@@Base+0xdc8>  // b.tcont
   23d0c:	add	x20, x20, #0x1
   23d10:	str	x20, [x22, #16]
   23d14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23d18:	ldr	x1, [x0, #2576]
   23d1c:	add	x0, x0, #0xa10
   23d20:	blr	x1
   23d24:	mrs	x1, tpidr_el0
   23d28:	add	x0, x1, x0
   23d2c:	ldr	w1, [x0]
   23d30:	orr	w1, w1, #0x8
   23d34:	str	w1, [x0]
   23d38:	mov	w21, #0x1                   	// #1
   23d3c:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23d40:	str	xzr, [x29, #136]
   23d44:	add	x25, x29, #0xa8
   23d48:	mov	x2, #0x2                   	// #2
   23d4c:	mov	x1, x23
   23d50:	mov	x0, x25
   23d54:	bl	c3b0 <__gmpn_sqr@plt>
   23d58:	mov	x3, #0x3                   	// #3
   23d5c:	mov	x2, x25
   23d60:	add	x1, x29, #0x88
   23d64:	mov	x0, x25
   23d68:	bl	be60 <__gmpn_sub_n@plt>
   23d6c:	ldr	x4, [x23]
   23d70:	ldr	x0, [x23, #8]
   23d74:	extr	x5, x0, x4, #63
   23d78:	lsl	x4, x4, #1
   23d7c:	ldr	x2, [x29, #184]
   23d80:	tbz	x2, #63, 23df8 <mpfr_sqrt@@Base+0xbc0>
   23d84:	ldr	x3, [x29, #168]
   23d88:	ldr	x1, [x29, #176]
   23d8c:	mov	w7, #0x1                   	// #1
   23d90:	b	23da4 <mpfr_sqrt@@Base+0xb6c>
   23d94:	sxtw	x0, w0
   23d98:	add	x0, x0, #0x1
   23d9c:	adds	x2, x2, x0
   23da0:	b.pl	23dec <mpfr_sqrt@@Base+0xbb4>  // b.nfrst
   23da4:	cmp	x4, #0x1
   23da8:	cset	x0, ls  // ls = plast
   23dac:	sub	x5, x5, x0
   23db0:	mov	x0, x4
   23db4:	sub	x4, x4, #0x2
   23db8:	sub	x0, x0, #0x1
   23dbc:	add	x3, x3, x0
   23dc0:	cmp	x4, x3
   23dc4:	cset	w6, hi  // hi = pmore
   23dc8:	cinc	x0, x5, hi  // hi = pmore
   23dcc:	add	x1, x1, x0
   23dd0:	mov	w0, w7
   23dd4:	cmp	x5, x1
   23dd8:	b.hi	23d94 <mpfr_sqrt@@Base+0xb5c>  // b.pmore
   23ddc:	cmp	w6, #0x0
   23de0:	ccmp	x5, x1, #0x0, ne  // ne = any
   23de4:	cset	w0, eq  // eq = none
   23de8:	b	23d94 <mpfr_sqrt@@Base+0xb5c>
   23dec:	str	x1, [x29, #176]
   23df0:	str	x3, [x29, #168]
   23df4:	str	x2, [x29, #184]
   23df8:	ldr	x1, [x29, #176]
   23dfc:	ldr	x2, [x29, #184]
   23e00:	ldr	x3, [x29, #168]
   23e04:	mov	w0, #0x0                   	// #0
   23e08:	mov	w7, #0x0                   	// #0
   23e0c:	mov	w6, #0x1                   	// #1
   23e10:	b	23e9c <mpfr_sqrt@@Base+0xc64>
   23e14:	b.eq	23e54 <mpfr_sqrt@@Base+0xc1c>  // b.none
   23e18:	cbz	w0, 23e28 <mpfr_sqrt@@Base+0xbf0>
   23e1c:	str	x1, [x29, #176]
   23e20:	str	x3, [x29, #168]
   23e24:	str	x2, [x29, #184]
   23e28:	lsr	x0, x5, #1
   23e2c:	orr	x0, x0, #0x8000000000000000
   23e30:	str	x0, [x23, #8]
   23e34:	extr	x0, x5, x4, #1
   23e38:	str	x0, [x23]
   23e3c:	ldr	x2, [x29, #184]
   23e40:	ldr	x0, [x29, #168]
   23e44:	orr	x2, x2, x0
   23e48:	ldr	x0, [x29, #176]
   23e4c:	orr	x2, x2, x0
   23e50:	b	23c38 <mpfr_sqrt@@Base+0xa00>
   23e54:	cmp	x1, x5
   23e58:	b.hi	23ea4 <mpfr_sqrt@@Base+0xc6c>  // b.pmore
   23e5c:	b.ne	23ec4 <mpfr_sqrt@@Base+0xc8c>  // b.any
   23e60:	cmp	x4, x3
   23e64:	b.cs	23edc <mpfr_sqrt@@Base+0xca4>  // b.hs, b.nlast
   23e68:	mov	w0, w7
   23e6c:	sxtw	x0, w0
   23e70:	mvn	x0, x0
   23e74:	add	x2, x2, x0
   23e78:	cmp	x4, x3
   23e7c:	cinc	x0, x5, cs  // cs = hs, nlast
   23e80:	sub	x1, x1, x0
   23e84:	mvn	x0, x4
   23e88:	add	x3, x3, x0
   23e8c:	add	x4, x4, #0x2
   23e90:	cmp	x4, #0x1
   23e94:	cinc	x5, x5, ls  // ls = plast
   23e98:	mov	w0, w6
   23e9c:	cmp	x2, #0x1
   23ea0:	b.ls	23e14 <mpfr_sqrt@@Base+0xbdc>  // b.plast
   23ea4:	mov	w0, w6
   23ea8:	cmp	x1, x5
   23eac:	b.cc	23e6c <mpfr_sqrt@@Base+0xc34>  // b.lo, b.ul, b.last
   23eb0:	mov	w0, w7
   23eb4:	b.ne	23e6c <mpfr_sqrt@@Base+0xc34>  // b.any
   23eb8:	cmp	x4, x3
   23ebc:	cset	w0, cs  // cs = hs, nlast
   23ec0:	b	23e6c <mpfr_sqrt@@Base+0xc34>
   23ec4:	cbz	w0, 23e28 <mpfr_sqrt@@Base+0xbf0>
   23ec8:	str	x1, [x29, #176]
   23ecc:	str	x3, [x29, #168]
   23ed0:	mov	x0, #0x1                   	// #1
   23ed4:	str	x0, [x29, #184]
   23ed8:	b	23e28 <mpfr_sqrt@@Base+0xbf0>
   23edc:	cbz	w0, 23e28 <mpfr_sqrt@@Base+0xbf0>
   23ee0:	str	x1, [x29, #176]
   23ee4:	str	x3, [x29, #168]
   23ee8:	mov	x0, #0x1                   	// #1
   23eec:	str	x0, [x29, #184]
   23ef0:	b	23e28 <mpfr_sqrt@@Base+0xbf0>
   23ef4:	mov	w2, #0x1                   	// #1
   23ef8:	ldr	w1, [x29, #124]
   23efc:	mov	x0, x22
   23f00:	bl	bf40 <mpfr_overflow@plt>
   23f04:	mov	w21, w0
   23f08:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23f0c:	ldr	w3, [x29, #124]
   23f10:	cbnz	w3, 23f78 <mpfr_sqrt@@Base+0xd40>
   23f14:	sub	x0, x0, #0x1
   23f18:	cmp	x20, x0
   23f1c:	b.ne	23f3c <mpfr_sqrt@@Base+0xd04>  // b.any
   23f20:	ldr	x0, [x23, #8]
   23f24:	cmp	x4, #0x0
   23f28:	ccmp	x2, x1, #0x0, ne  // ne = any
   23f2c:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   23f30:	b.ne	23f40 <mpfr_sqrt@@Base+0xd08>  // b.any
   23f34:	str	x20, [x22, #16]
   23f38:	b	23cc8 <mpfr_sqrt@@Base+0xa90>
   23f3c:	b.lt	23fec <mpfr_sqrt@@Base+0xdb4>  // b.tstop
   23f40:	ldr	x2, [x23, #8]
   23f44:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23f48:	cmp	x2, x0
   23f4c:	b.ne	23f60 <mpfr_sqrt@@Base+0xd28>  // b.any
   23f50:	orr	x21, x21, x1
   23f54:	cmp	x21, #0x0
   23f58:	cset	w0, eq  // eq = none
   23f5c:	str	w0, [x29, #124]
   23f60:	mov	w2, #0x1                   	// #1
   23f64:	ldr	w1, [x29, #124]
   23f68:	mov	x0, x22
   23f6c:	bl	c3c0 <mpfr_underflow@plt>
   23f70:	mov	w21, w0
   23f74:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23f78:	ldr	w3, [x29, #124]
   23f7c:	sub	w3, w3, #0x2
   23f80:	tst	w3, #0xfffffffd
   23f84:	b.ne	23f60 <mpfr_sqrt@@Base+0xd28>  // b.any
   23f88:	sub	x0, x0, #0x1
   23f8c:	cmp	x20, x0
   23f90:	b.ne	23f60 <mpfr_sqrt@@Base+0xd28>  // b.any
   23f94:	ldr	x0, [x23, #8]
   23f98:	cmp	x2, x1
   23f9c:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   23fa0:	b.ne	23f60 <mpfr_sqrt@@Base+0xd28>  // b.any
   23fa4:	orr	x21, x4, x21
   23fa8:	cbz	x21, 23f60 <mpfr_sqrt@@Base+0xd28>
   23fac:	str	x20, [x22, #16]
   23fb0:	ldr	w0, [x29, #124]
   23fb4:	and	w0, w0, #0xfffffffd
   23fb8:	cmp	w0, #0x1
   23fbc:	b.ne	23cc8 <mpfr_sqrt@@Base+0xa90>  // b.any
   23fc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   23fc4:	ldr	x1, [x0, #2576]
   23fc8:	add	x0, x0, #0xa10
   23fcc:	blr	x1
   23fd0:	mrs	x1, tpidr_el0
   23fd4:	add	x0, x1, x0
   23fd8:	ldr	w1, [x0]
   23fdc:	orr	w1, w1, #0x8
   23fe0:	str	w1, [x0]
   23fe4:	mov	w21, #0xffffffff            	// #-1
   23fe8:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   23fec:	mov	w0, #0x1                   	// #1
   23ff0:	str	w0, [x29, #124]
   23ff4:	b	23f60 <mpfr_sqrt@@Base+0xd28>
   23ff8:	str	x0, [x23, #8]
   23ffc:	b	23d14 <mpfr_sqrt@@Base+0xadc>
   24000:	mov	w2, #0x1                   	// #1
   24004:	ldr	w1, [x29, #124]
   24008:	mov	x0, x22
   2400c:	bl	bf40 <mpfr_overflow@plt>
   24010:	mov	w21, w0
   24014:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   24018:	cmp	x1, x0
   2401c:	cset	x2, hi  // hi = pmore
   24020:	sub	x0, x0, x1
   24024:	add	x1, x1, #0x1
   24028:	cmp	x0, x1
   2402c:	cinc	x2, x2, cc  // cc = lo, ul, last
   24030:	sub	x0, x0, x1
   24034:	subs	x3, x3, x2
   24038:	b.eq	2365c <mpfr_sqrt@@Base+0x424>  // b.none
   2403c:	cmp	x3, #0x1
   24040:	b.ne	24018 <mpfr_sqrt@@Base+0xde0>  // b.any
   24044:	cmp	x0, x1, lsl #1
   24048:	b.hi	24018 <mpfr_sqrt@@Base+0xde0>  // b.pmore
   2404c:	b	23660 <mpfr_sqrt@@Base+0x428>
   24050:	mov	w2, #0x1                   	// #1
   24054:	ldr	w1, [x29, #124]
   24058:	mov	x0, x22
   2405c:	bl	bf40 <mpfr_overflow@plt>
   24060:	mov	w21, w0
   24064:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   24068:	ldr	w2, [x29, #124]
   2406c:	cbz	w2, 24110 <mpfr_sqrt@@Base+0xed8>
   24070:	ldr	w2, [x29, #124]
   24074:	sub	w2, w2, #0x2
   24078:	tst	w2, #0xfffffffd
   2407c:	b.ne	24130 <mpfr_sqrt@@Base+0xef8>  // b.any
   24080:	sub	x0, x0, #0x1
   24084:	cmp	x0, x4
   24088:	ccmn	x1, #0x1, #0x0, eq  // eq = none
   2408c:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   24090:	b.eq	24130 <mpfr_sqrt@@Base+0xef8>  // b.none
   24094:	str	x4, [x22, #16]
   24098:	ldr	w0, [x29, #124]
   2409c:	and	w0, w0, #0xfffffffd
   240a0:	cmp	w0, #0x1
   240a4:	b.eq	236dc <mpfr_sqrt@@Base+0x4a4>  // b.none
   240a8:	ldr	x0, [x6]
   240ac:	adds	x0, x0, #0x1
   240b0:	b.ne	24154 <mpfr_sqrt@@Base+0xf1c>  // b.any
   240b4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   240b8:	str	x0, [x6]
   240bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   240c0:	ldr	x1, [x0, #2544]
   240c4:	add	x0, x0, #0x9f0
   240c8:	blr	x1
   240cc:	mrs	x1, tpidr_el0
   240d0:	ldr	x0, [x1, x0]
   240d4:	cmp	x4, x0
   240d8:	b.ge	2415c <mpfr_sqrt@@Base+0xf24>  // b.tcont
   240dc:	add	x4, x4, #0x1
   240e0:	str	x4, [x22, #16]
   240e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   240e8:	ldr	x1, [x0, #2576]
   240ec:	add	x0, x0, #0xa10
   240f0:	blr	x1
   240f4:	mrs	x1, tpidr_el0
   240f8:	add	x0, x1, x0
   240fc:	ldr	w1, [x0]
   24100:	orr	w1, w1, #0x8
   24104:	str	w1, [x0]
   24108:	mov	w21, #0x1                   	// #1
   2410c:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   24110:	sub	x0, x0, #0x1
   24114:	cmp	x4, x0
   24118:	b.lt	24148 <mpfr_sqrt@@Base+0xf10>  // b.tstop
   2411c:	cmp	x3, #0x0
   24120:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24124:	ccmp	x1, x0, #0x0, eq  // eq = none
   24128:	cset	w0, eq  // eq = none
   2412c:	str	w0, [x29, #124]
   24130:	mov	w2, #0x1                   	// #1
   24134:	ldr	w1, [x29, #124]
   24138:	mov	x0, x22
   2413c:	bl	c3c0 <mpfr_underflow@plt>
   24140:	mov	w21, w0
   24144:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   24148:	mov	w0, #0x1                   	// #1
   2414c:	str	w0, [x29, #124]
   24150:	b	24130 <mpfr_sqrt@@Base+0xef8>
   24154:	str	x0, [x6]
   24158:	b	240e4 <mpfr_sqrt@@Base+0xeac>
   2415c:	mov	w2, #0x1                   	// #1
   24160:	ldr	w1, [x29, #124]
   24164:	mov	x0, x22
   24168:	bl	bf40 <mpfr_overflow@plt>
   2416c:	mov	w21, w0
   24170:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   24174:	add	x0, x29, #0xc8
   24178:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2417c:	mov	x23, x0
   24180:	mov	w24, #0x40                  	// #64
   24184:	mov	w0, #0x1                   	// #1
   24188:	str	w0, [x29, #108]
   2418c:	b	232e0 <mpfr_sqrt@@Base+0xa8>
   24190:	add	x0, x29, #0xc8
   24194:	bl	bdc0 <mpfr_tmp_allocate@plt>
   24198:	mov	x27, x0
   2419c:	b	2330c <mpfr_sqrt@@Base+0xd4>
   241a0:	mov	w3, #0x1                   	// #1
   241a4:	mov	x2, x19
   241a8:	ldr	x1, [x29, #112]
   241ac:	mov	x0, x27
   241b0:	bl	bce0 <__gmpn_rshift@plt>
   241b4:	mov	x28, x0
   241b8:	b	23358 <mpfr_sqrt@@Base+0x120>
   241bc:	sub	x19, x19, x25
   241c0:	ldr	w0, [x29, #120]
   241c4:	cbnz	w0, 24210 <mpfr_sqrt@@Base+0xfd8>
   241c8:	ldr	x0, [x29, #112]
   241cc:	add	x1, x0, x19, lsl #3
   241d0:	mov	x28, #0x0                   	// #0
   241d4:	cmp	x1, x27
   241d8:	b.eq	241e8 <mpfr_sqrt@@Base+0xfb0>  // b.none
   241dc:	lsl	x2, x20, #4
   241e0:	mov	x0, x27
   241e4:	bl	ba10 <memcpy@plt>
   241e8:	cmp	x28, #0x0
   241ec:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   241f0:	b.eq	23358 <mpfr_sqrt@@Base+0x120>  // b.none
   241f4:	sub	x19, x19, #0x1
   241f8:	ldr	x0, [x29, #112]
   241fc:	ldr	x28, [x0, x19, lsl #3]
   24200:	cmp	x28, #0x0
   24204:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   24208:	b.ne	241f4 <mpfr_sqrt@@Base+0xfbc>  // b.any
   2420c:	b	23358 <mpfr_sqrt@@Base+0x120>
   24210:	mov	w3, #0x1                   	// #1
   24214:	mov	x2, x25
   24218:	ldr	x0, [x29, #112]
   2421c:	add	x1, x0, x19, lsl #3
   24220:	mov	x0, x27
   24224:	bl	bce0 <__gmpn_rshift@plt>
   24228:	mov	x28, x0
   2422c:	b	241e8 <mpfr_sqrt@@Base+0xfb0>
   24230:	ldr	w2, [x29, #124]
   24234:	cbnz	w2, 24274 <mpfr_sqrt@@Base+0x103c>
   24238:	cmp	w24, #0x3f
   2423c:	b.gt	242e0 <mpfr_sqrt@@Base+0x10a8>
   24240:	sub	w2, w24, #0x1
   24244:	lsr	x3, x4, x2
   24248:	tbz	w3, #0, 24358 <mpfr_sqrt@@Base+0x1120>
   2424c:	mov	x3, #0x1                   	// #1
   24250:	lsl	x2, x3, x2
   24254:	cmp	x2, x4
   24258:	b.ne	24274 <mpfr_sqrt@@Base+0x103c>  // b.any
   2425c:	lsr	x1, x1, x24
   24260:	and	x1, x1, x3
   24264:	orr	x28, x28, x0
   24268:	orr	x28, x1, x28
   2426c:	mov	w21, #0xffffffff            	// #-1
   24270:	cbz	x28, 233d0 <mpfr_sqrt@@Base+0x198>
   24274:	ldr	w0, [x29, #108]
   24278:	cbnz	w0, 24348 <mpfr_sqrt@@Base+0x1110>
   2427c:	mov	x0, #0x1                   	// #1
   24280:	lsl	x24, x0, x24
   24284:	ldr	x1, [x23]
   24288:	add	x1, x24, x1
   2428c:	str	x1, [x26]
   24290:	cmp	x24, x1
   24294:	b.ls	24304 <mpfr_sqrt@@Base+0x10cc>  // b.plast
   24298:	cmp	x20, x0
   2429c:	b.le	243f8 <mpfr_sqrt@@Base+0x11c0>
   242a0:	ldr	x1, [x23, x0, lsl #3]
   242a4:	add	x1, x1, #0x1
   242a8:	str	x1, [x26, x0, lsl #3]
   242ac:	add	x0, x0, #0x1
   242b0:	cbz	x1, 24298 <mpfr_sqrt@@Base+0x1060>
   242b4:	mov	w21, #0x1                   	// #1
   242b8:	cmp	x23, x26
   242bc:	b.eq	233d8 <mpfr_sqrt@@Base+0x1a0>  // b.none
   242c0:	cmp	x20, x0
   242c4:	b.le	24330 <mpfr_sqrt@@Base+0x10f8>
   242c8:	ldr	x1, [x23, x0, lsl #3]
   242cc:	str	x1, [x26, x0, lsl #3]
   242d0:	add	x0, x0, #0x1
   242d4:	cmp	x20, x0
   242d8:	b.ne	242c8 <mpfr_sqrt@@Base+0x1090>  // b.any
   242dc:	b	24330 <mpfr_sqrt@@Base+0x10f8>
   242e0:	tbz	x4, #63, 24360 <mpfr_sqrt@@Base+0x1128>
   242e4:	orr	x28, x28, x0
   242e8:	cmp	x28, #0x0
   242ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   242f0:	ccmp	x4, x0, #0x0, eq  // eq = none
   242f4:	b.eq	24338 <mpfr_sqrt@@Base+0x1100>  // b.none
   242f8:	ldr	w0, [x29, #108]
   242fc:	cbnz	w0, 24348 <mpfr_sqrt@@Base+0x1110>
   24300:	str	x1, [x26]
   24304:	mov	w21, #0x1                   	// #1
   24308:	cmp	x23, x26
   2430c:	b.eq	233d8 <mpfr_sqrt@@Base+0x1a0>  // b.none
   24310:	cmp	x20, #0x1
   24314:	b.le	24330 <mpfr_sqrt@@Base+0x10f8>
   24318:	mov	x0, #0x1                   	// #1
   2431c:	ldr	x1, [x23, x0, lsl #3]
   24320:	str	x1, [x26, x0, lsl #3]
   24324:	add	x0, x0, #0x1
   24328:	cmp	x0, x20
   2432c:	b.ne	2431c <mpfr_sqrt@@Base+0x10e4>  // b.any
   24330:	mov	w21, #0x1                   	// #1
   24334:	b	233d8 <mpfr_sqrt@@Base+0x1a0>
   24338:	ldr	x0, [x23, #8]
   2433c:	mov	w21, #0xffffffff            	// #-1
   24340:	tbz	w0, #0, 233d0 <mpfr_sqrt@@Base+0x198>
   24344:	b	242f8 <mpfr_sqrt@@Base+0x10c0>
   24348:	add	x23, x23, #0x8
   2434c:	sub	x20, x20, #0x1
   24350:	mov	w24, #0x0                   	// #0
   24354:	b	2427c <mpfr_sqrt@@Base+0x1044>
   24358:	mov	w21, #0xffffffff            	// #-1
   2435c:	b	233d0 <mpfr_sqrt@@Base+0x198>
   24360:	mov	w21, #0xffffffff            	// #-1
   24364:	b	233d0 <mpfr_sqrt@@Base+0x198>
   24368:	add	x1, x23, #0x8
   2436c:	cmp	x1, x26
   24370:	b.eq	233d8 <mpfr_sqrt@@Base+0x1a0>  // b.none
   24374:	sub	x2, x20, #0x1
   24378:	lsl	x2, x2, #3
   2437c:	mov	x0, x26
   24380:	bl	ba10 <memcpy@plt>
   24384:	b	233d8 <mpfr_sqrt@@Base+0x1a0>
   24388:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   2438c:	add	x2, x2, #0xa40
   24390:	mov	w1, #0x2b5                 	// #693
   24394:	adrp	x0, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   24398:	add	x0, x0, #0xae8
   2439c:	bl	cb40 <mpfr_assert_fail@plt>
   243a0:	bl	c410 <mpfr_tmp_free@plt>
   243a4:	b	233f8 <mpfr_sqrt@@Base+0x1c0>
   243a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   243ac:	ldr	x1, [x0, #2576]
   243b0:	add	x0, x0, #0xa10
   243b4:	blr	x1
   243b8:	mrs	x1, tpidr_el0
   243bc:	add	x0, x1, x0
   243c0:	ldr	w1, [x0]
   243c4:	orr	w1, w1, #0x8
   243c8:	str	w1, [x0]
   243cc:	b	243d4 <mpfr_sqrt@@Base+0x119c>
   243d0:	cbnz	w21, 243a8 <mpfr_sqrt@@Base+0x1170>
   243d4:	mov	w0, w21
   243d8:	mov	sp, x29
   243dc:	ldp	x19, x20, [sp, #16]
   243e0:	ldp	x21, x22, [sp, #32]
   243e4:	ldp	x23, x24, [sp, #48]
   243e8:	ldp	x25, x26, [sp, #64]
   243ec:	ldp	x27, x28, [sp, #80]
   243f0:	ldp	x29, x30, [sp], #208
   243f4:	ret
   243f8:	add	x19, x19, #0x1
   243fc:	add	x20, x26, x20, lsl #3
   24400:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24404:	stur	x0, [x20, #-8]
   24408:	mov	w21, #0x1                   	// #1
   2440c:	b	233d8 <mpfr_sqrt@@Base+0x1a0>
   24410:	ldr	w0, [x29, #120]
   24414:	cbnz	w0, 241a0 <mpfr_sqrt@@Base+0xf68>
   24418:	ldr	x0, [x29, #96]
   2441c:	sub	x0, x0, x19
   24420:	add	x0, x27, x0, lsl #3
   24424:	mov	x28, #0x0                   	// #0
   24428:	ldr	x1, [x29, #112]
   2442c:	cmp	x0, x1
   24430:	b.eq	23358 <mpfr_sqrt@@Base+0x120>  // b.none
   24434:	lsl	x2, x19, #3
   24438:	bl	ba10 <memcpy@plt>
   2443c:	b	23358 <mpfr_sqrt@@Base+0x120>
   24440:	add	x20, x19, #0x3e
   24444:	subs	x19, x19, #0x1
   24448:	csel	x19, x20, x19, mi  // mi = first
   2444c:	asr	x20, x19, #6
   24450:	add	x20, x20, #0x2
   24454:	lsl	x25, x20, #1
   24458:	add	x19, x0, #0x3e
   2445c:	subs	x0, x0, #0x1
   24460:	csel	x0, x19, x0, mi  // mi = first
   24464:	asr	x19, x0, #6
   24468:	add	x19, x19, #0x1
   2446c:	ldr	x26, [x22, #24]
   24470:	lsl	x1, x20, #3
   24474:	cmp	x1, #0x4, lsl #12
   24478:	b.hi	24174 <mpfr_sqrt@@Base+0xf3c>  // b.pmore
   2447c:	add	x1, x1, #0xf
   24480:	and	x1, x1, #0xfffffffffffffff0
   24484:	sub	sp, sp, x1
   24488:	mov	x23, sp
   2448c:	mov	w24, #0x40                  	// #64
   24490:	mov	w0, #0x1                   	// #1
   24494:	str	w0, [x29, #108]
   24498:	b	232e0 <mpfr_sqrt@@Base+0xa8>
   2449c:	cbz	x5, 23898 <mpfr_sqrt@@Base+0x660>
   244a0:	ldr	x0, [x7]
   244a4:	adds	x0, x6, x0
   244a8:	b.ne	23a1c <mpfr_sqrt@@Base+0x7e4>  // b.any
   244ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   244b0:	str	x0, [x7]
   244b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   244b8:	ldr	x1, [x0, #2544]
   244bc:	add	x0, x0, #0x9f0
   244c0:	blr	x1
   244c4:	mrs	x1, tpidr_el0
   244c8:	ldr	x0, [x1, x0]
   244cc:	cmp	x4, x0
   244d0:	b.ge	23a24 <mpfr_sqrt@@Base+0x7ec>  // b.tcont
   244d4:	add	x4, x4, #0x1
   244d8:	str	x4, [x22, #16]
   244dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   244e0:	ldr	x1, [x0, #2576]
   244e4:	add	x0, x0, #0xa10
   244e8:	blr	x1
   244ec:	mrs	x1, tpidr_el0
   244f0:	add	x0, x1, x0
   244f4:	ldr	w1, [x0]
   244f8:	orr	w1, w1, #0x8
   244fc:	str	w1, [x0]
   24500:	mov	w21, #0x1                   	// #1
   24504:	b	243d4 <mpfr_sqrt@@Base+0x119c>

0000000000024508 <mpfr_sqrt_ui@@Base>:
   24508:	stp	x29, x30, [sp, #-128]!
   2450c:	mov	x29, sp
   24510:	stp	x19, x20, [sp, #16]
   24514:	mov	x19, x0
   24518:	cbnz	x1, 24540 <mpfr_sqrt_ui@@Base+0x38>
   2451c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   24520:	str	x0, [x19, #16]
   24524:	mov	w0, #0x1                   	// #1
   24528:	str	w0, [x19, #8]
   2452c:	mov	w1, #0x0                   	// #0
   24530:	mov	w0, w1
   24534:	ldp	x19, x20, [sp, #16]
   24538:	ldp	x29, x30, [sp], #128
   2453c:	ret
   24540:	stp	x21, x22, [sp, #32]
   24544:	stp	x23, x24, [sp, #48]
   24548:	stp	x25, x26, [sp, #64]
   2454c:	mov	w20, w2
   24550:	mov	x2, #0x40                  	// #64
   24554:	str	x2, [sp, #96]
   24558:	add	x0, sp, #0x58
   2455c:	str	x0, [sp, #120]
   24560:	mov	w0, #0x1                   	// #1
   24564:	str	w0, [sp, #104]
   24568:	clz	x3, x1
   2456c:	lsl	x1, x1, x3
   24570:	str	x1, [sp, #88]
   24574:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   24578:	ldr	x1, [x0, #2576]
   2457c:	add	x0, x0, #0xa10
   24580:	blr	x1
   24584:	mrs	x1, tpidr_el0
   24588:	add	x26, x1, x0
   2458c:	ldr	w21, [x1, x0]
   24590:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   24594:	ldr	x4, [x0, #2512]
   24598:	add	x0, x0, #0x9d0
   2459c:	blr	x4
   245a0:	add	x25, x1, x0
   245a4:	ldr	x22, [x1, x0]
   245a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   245ac:	ldr	x4, [x0, #2544]
   245b0:	add	x0, x0, #0x9f0
   245b4:	blr	x4
   245b8:	add	x24, x1, x0
   245bc:	ldr	x23, [x1, x0]
   245c0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   245c4:	str	x0, [x25]
   245c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   245cc:	str	x0, [x24]
   245d0:	sub	w2, w2, w3
   245d4:	sxtw	x2, w2
   245d8:	str	x2, [sp, #112]
   245dc:	mov	w2, w20
   245e0:	add	x1, sp, #0x60
   245e4:	mov	x0, x19
   245e8:	bl	c930 <mpfr_sqrt@plt>
   245ec:	mov	w1, w0
   245f0:	str	w21, [x26]
   245f4:	str	x22, [x25]
   245f8:	str	x23, [x24]
   245fc:	ldr	x0, [x19, #16]
   24600:	cmp	x23, x0
   24604:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   24608:	b.gt	2463c <mpfr_sqrt_ui@@Base+0x134>
   2460c:	cbz	w1, 2465c <mpfr_sqrt_ui@@Base+0x154>
   24610:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   24614:	ldr	x2, [x0, #2576]
   24618:	add	x0, x0, #0xa10
   2461c:	blr	x2
   24620:	orr	w21, w21, #0x8
   24624:	mrs	x2, tpidr_el0
   24628:	str	w21, [x2, x0]
   2462c:	ldp	x21, x22, [sp, #32]
   24630:	ldp	x23, x24, [sp, #48]
   24634:	ldp	x25, x26, [sp, #64]
   24638:	b	24530 <mpfr_sqrt_ui@@Base+0x28>
   2463c:	mov	w2, w20
   24640:	mov	x0, x19
   24644:	bl	cb30 <mpfr_check_range@plt>
   24648:	mov	w1, w0
   2464c:	ldp	x21, x22, [sp, #32]
   24650:	ldp	x23, x24, [sp, #48]
   24654:	ldp	x25, x26, [sp, #64]
   24658:	b	24530 <mpfr_sqrt_ui@@Base+0x28>
   2465c:	ldp	x21, x22, [sp, #32]
   24660:	ldp	x23, x24, [sp, #48]
   24664:	ldp	x25, x26, [sp, #64]
   24668:	b	24530 <mpfr_sqrt_ui@@Base+0x28>

000000000002466c <mpfr_sub@@Base>:
   2466c:	stp	x29, x30, [sp, #-48]!
   24670:	mov	x29, sp
   24674:	stp	x19, x20, [sp, #16]
   24678:	stp	x21, x22, [sp, #32]
   2467c:	mov	x21, x0
   24680:	mov	x19, x1
   24684:	mov	x20, x2
   24688:	mov	w22, w3
   2468c:	ldr	x0, [x1, #16]
   24690:	mov	x1, #0x5                   	// #5
   24694:	movk	x1, #0x8000, lsl #48
   24698:	cmp	x0, x1
   2469c:	b.lt	24704 <mpfr_sub@@Base+0x98>  // b.tstop
   246a0:	ldr	x1, [x2, #16]
   246a4:	mov	x2, #0x5                   	// #5
   246a8:	movk	x2, #0x8000, lsl #48
   246ac:	cmp	x1, x2
   246b0:	b.lt	249b4 <mpfr_sub@@Base+0x348>  // b.tstop
   246b4:	ldr	w3, [x19, #8]
   246b8:	ldr	w2, [x20, #8]
   246bc:	cmp	w3, w2
   246c0:	b.ne	248e8 <mpfr_sub@@Base+0x27c>  // b.any
   246c4:	ldr	x0, [x19]
   246c8:	ldr	x1, [x21]
   246cc:	cmp	x1, x0
   246d0:	b.ne	248d0 <mpfr_sub@@Base+0x264>  // b.any
   246d4:	ldr	x1, [x20]
   246d8:	cmp	x0, x1
   246dc:	b.ne	248d0 <mpfr_sub@@Base+0x264>  // b.any
   246e0:	mov	w3, w22
   246e4:	mov	x2, x20
   246e8:	mov	x1, x19
   246ec:	mov	x0, x21
   246f0:	bl	c0f0 <mpfr_sub1sp@plt>
   246f4:	ldp	x19, x20, [sp, #16]
   246f8:	ldp	x21, x22, [sp, #32]
   246fc:	ldp	x29, x30, [sp], #48
   24700:	ret
   24704:	mov	x1, #0x2                   	// #2
   24708:	movk	x1, #0x8000, lsl #48
   2470c:	cmp	x0, x1
   24710:	b.eq	24764 <mpfr_sub@@Base+0xf8>  // b.none
   24714:	ldr	x1, [x2, #16]
   24718:	mov	x2, #0x2                   	// #2
   2471c:	movk	x2, #0x8000, lsl #48
   24720:	cmp	x1, x2
   24724:	b.eq	24764 <mpfr_sub@@Base+0xf8>  // b.none
   24728:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2472c:	cmp	x0, x2
   24730:	b.ne	249c8 <mpfr_sub@@Base+0x35c>  // b.any
   24734:	cmp	x1, x2
   24738:	b.ne	2474c <mpfr_sub@@Base+0xe0>  // b.any
   2473c:	ldr	w1, [x19, #8]
   24740:	ldr	w0, [x20, #8]
   24744:	cmp	w1, w0
   24748:	b.eq	2479c <mpfr_sub@@Base+0x130>  // b.none
   2474c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   24750:	str	x0, [x21, #16]
   24754:	ldr	w0, [x19, #8]
   24758:	str	w0, [x21, #8]
   2475c:	mov	w0, #0x0                   	// #0
   24760:	b	246f4 <mpfr_sub@@Base+0x88>
   24764:	mov	x0, #0x2                   	// #2
   24768:	movk	x0, #0x8000, lsl #48
   2476c:	str	x0, [x21, #16]
   24770:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   24774:	ldr	x1, [x0, #2576]
   24778:	add	x0, x0, #0xa10
   2477c:	blr	x1
   24780:	mrs	x1, tpidr_el0
   24784:	add	x0, x1, x0
   24788:	ldr	w1, [x0]
   2478c:	orr	w1, w1, #0x4
   24790:	str	w1, [x0]
   24794:	mov	w0, #0x0                   	// #0
   24798:	b	246f4 <mpfr_sub@@Base+0x88>
   2479c:	mov	x0, #0x2                   	// #2
   247a0:	movk	x0, #0x8000, lsl #48
   247a4:	str	x0, [x21, #16]
   247a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   247ac:	ldr	x1, [x0, #2576]
   247b0:	add	x0, x0, #0xa10
   247b4:	blr	x1
   247b8:	mrs	x1, tpidr_el0
   247bc:	add	x0, x1, x0
   247c0:	ldr	w1, [x0]
   247c4:	orr	w1, w1, #0x4
   247c8:	str	w1, [x0]
   247cc:	mov	w0, #0x0                   	// #0
   247d0:	b	246f4 <mpfr_sub@@Base+0x88>
   247d4:	str	x2, [x21, #16]
   247d8:	ldr	w0, [x20, #8]
   247dc:	neg	w0, w0
   247e0:	str	w0, [x21, #8]
   247e4:	mov	w0, #0x0                   	// #0
   247e8:	b	246f4 <mpfr_sub@@Base+0x88>
   247ec:	cmp	x1, x2
   247f0:	b.ne	24854 <mpfr_sub@@Base+0x1e8>  // b.any
   247f4:	cmp	w22, #0x3
   247f8:	b.eq	24830 <mpfr_sub@@Base+0x1c4>  // b.none
   247fc:	ldr	w1, [x19, #8]
   24800:	mov	w0, #0x1                   	// #1
   24804:	tbnz	w1, #31, 2481c <mpfr_sub@@Base+0x1b0>
   24808:	str	w0, [x21, #8]
   2480c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   24810:	str	x0, [x21, #16]
   24814:	mov	w0, #0x0                   	// #0
   24818:	b	246f4 <mpfr_sub@@Base+0x88>
   2481c:	ldr	w1, [x20, #8]
   24820:	mov	w0, #0xffffffff            	// #-1
   24824:	cmp	w1, #0x1
   24828:	cneg	w0, w0, lt  // lt = tstop
   2482c:	b	24808 <mpfr_sub@@Base+0x19c>
   24830:	ldr	w1, [x19, #8]
   24834:	mov	w0, #0xffffffff            	// #-1
   24838:	cmp	w1, #0x0
   2483c:	b.le	24808 <mpfr_sub@@Base+0x19c>
   24840:	ldr	w1, [x20, #8]
   24844:	mov	w0, #0x1                   	// #1
   24848:	cmn	w1, #0x1
   2484c:	cneg	w0, w0, gt
   24850:	b	24808 <mpfr_sub@@Base+0x19c>
   24854:	mov	w2, w22
   24858:	mov	x1, x20
   2485c:	mov	x0, x21
   24860:	bl	bd70 <mpfr_neg@plt>
   24864:	b	246f4 <mpfr_sub@@Base+0x88>
   24868:	ldr	w3, [x19, #8]
   2486c:	mov	w2, w22
   24870:	mov	x1, x19
   24874:	mov	x0, x21
   24878:	bl	c6a0 <mpfr_set4@plt>
   2487c:	b	246f4 <mpfr_sub@@Base+0x88>
   24880:	mov	w3, w22
   24884:	mov	x2, x20
   24888:	mov	x1, x19
   2488c:	mov	x0, x21
   24890:	bl	ca70 <mpfr_sub1@plt>
   24894:	b	246f4 <mpfr_sub@@Base+0x88>
   24898:	mov	x1, x20
   2489c:	mov	x0, x19
   248a0:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
   248a4:	cmp	w0, #0x0
   248a8:	cset	w0, ne  // ne = any
   248ac:	b	24a18 <mpfr_sub@@Base+0x3ac>
   248b0:	mov	w22, #0x3                   	// #3
   248b4:	b	24a30 <mpfr_sub@@Base+0x3c4>
   248b8:	mov	w3, w22
   248bc:	mov	x2, x20
   248c0:	mov	x1, x19
   248c4:	mov	x0, x21
   248c8:	bl	c780 <mpfr_add1@plt>
   248cc:	b	246f4 <mpfr_sub@@Base+0x88>
   248d0:	mov	w3, w22
   248d4:	mov	x2, x20
   248d8:	mov	x1, x19
   248dc:	mov	x0, x21
   248e0:	bl	ca70 <mpfr_sub1@plt>
   248e4:	b	246f4 <mpfr_sub@@Base+0x88>
   248e8:	cmp	x0, x1
   248ec:	b.lt	24924 <mpfr_sub@@Base+0x2b8>  // b.tstop
   248f0:	ldr	x0, [x19]
   248f4:	ldr	x1, [x21]
   248f8:	cmp	x1, x0
   248fc:	b.ne	2499c <mpfr_sub@@Base+0x330>  // b.any
   24900:	ldr	x1, [x20]
   24904:	cmp	x0, x1
   24908:	b.ne	2499c <mpfr_sub@@Base+0x330>  // b.any
   2490c:	mov	w3, w22
   24910:	mov	x2, x20
   24914:	mov	x1, x19
   24918:	mov	x0, x21
   2491c:	bl	cbb0 <mpfr_add1sp@plt>
   24920:	b	246f4 <mpfr_sub@@Base+0x88>
   24924:	cmp	w22, #0x2
   24928:	b.eq	2497c <mpfr_sub@@Base+0x310>  // b.none
   2492c:	cmp	w22, #0x3
   24930:	mov	w0, #0x2                   	// #2
   24934:	csel	w22, w22, w0, ne  // ne = any
   24938:	ldr	x0, [x19]
   2493c:	ldr	x1, [x21]
   24940:	cmp	x1, x0
   24944:	b.ne	24984 <mpfr_sub@@Base+0x318>  // b.any
   24948:	ldr	x1, [x20]
   2494c:	cmp	x0, x1
   24950:	b.ne	24984 <mpfr_sub@@Base+0x318>  // b.any
   24954:	mov	w3, w22
   24958:	mov	x2, x19
   2495c:	mov	x1, x20
   24960:	mov	x0, x21
   24964:	bl	cbb0 <mpfr_add1sp@plt>
   24968:	ldr	w1, [x21, #8]
   2496c:	neg	w1, w1
   24970:	str	w1, [x21, #8]
   24974:	neg	w0, w0
   24978:	b	246f4 <mpfr_sub@@Base+0x88>
   2497c:	mov	w22, #0x3                   	// #3
   24980:	b	24938 <mpfr_sub@@Base+0x2cc>
   24984:	mov	w3, w22
   24988:	mov	x2, x19
   2498c:	mov	x1, x20
   24990:	mov	x0, x21
   24994:	bl	c780 <mpfr_add1@plt>
   24998:	b	24968 <mpfr_sub@@Base+0x2fc>
   2499c:	mov	w3, w22
   249a0:	mov	x2, x20
   249a4:	mov	x1, x19
   249a8:	mov	x0, x21
   249ac:	bl	c780 <mpfr_add1@plt>
   249b0:	b	246f4 <mpfr_sub@@Base+0x88>
   249b4:	ldr	x1, [x20, #16]
   249b8:	mov	x2, #0x2                   	// #2
   249bc:	movk	x2, #0x8000, lsl #48
   249c0:	cmp	x1, x2
   249c4:	b.eq	24764 <mpfr_sub@@Base+0xf8>  // b.none
   249c8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   249cc:	cmp	x1, x2
   249d0:	b.eq	247d4 <mpfr_sub@@Base+0x168>  // b.none
   249d4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   249d8:	cmp	x0, x2
   249dc:	b.eq	247ec <mpfr_sub@@Base+0x180>  // b.none
   249e0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   249e4:	cmp	x1, x2
   249e8:	b.eq	24868 <mpfr_sub@@Base+0x1fc>  // b.none
   249ec:	ldr	w3, [x19, #8]
   249f0:	ldr	w2, [x20, #8]
   249f4:	cmp	w3, w2
   249f8:	b.eq	24880 <mpfr_sub@@Base+0x214>  // b.none
   249fc:	mov	x2, #0x4                   	// #4
   24a00:	movk	x2, #0x8000, lsl #48
   24a04:	cmp	x1, x2
   24a08:	ccmp	x0, x2, #0x4, ne  // ne = any
   24a0c:	b.eq	24898 <mpfr_sub@@Base+0x22c>  // b.none
   24a10:	cmp	x0, x1
   24a14:	cset	w0, lt  // lt = tstop
   24a18:	cbz	w0, 248b8 <mpfr_sub@@Base+0x24c>
   24a1c:	cmp	w22, #0x2
   24a20:	b.eq	248b0 <mpfr_sub@@Base+0x244>  // b.none
   24a24:	cmp	w22, #0x3
   24a28:	mov	w0, #0x2                   	// #2
   24a2c:	csel	w22, w22, w0, ne  // ne = any
   24a30:	mov	w3, w22
   24a34:	mov	x2, x19
   24a38:	mov	x1, x20
   24a3c:	mov	x0, x21
   24a40:	bl	c780 <mpfr_add1@plt>
   24a44:	ldr	w1, [x21, #8]
   24a48:	neg	w1, w1
   24a4c:	str	w1, [x21, #8]
   24a50:	neg	w0, w0
   24a54:	b	246f4 <mpfr_sub@@Base+0x88>

0000000000024a58 <mpfr_sub1@@Base>:
   24a58:	stp	x29, x30, [sp, #-160]!
   24a5c:	mov	x29, sp
   24a60:	stp	x19, x20, [sp, #16]
   24a64:	stp	x21, x22, [sp, #32]
   24a68:	stp	x23, x24, [sp, #48]
   24a6c:	stp	x25, x26, [sp, #64]
   24a70:	stp	x27, x28, [sp, #80]
   24a74:	mov	x21, x0
   24a78:	mov	x19, x1
   24a7c:	mov	x24, x2
   24a80:	mov	w20, w3
   24a84:	str	xzr, [x29, #144]
   24a88:	ldr	x23, [x0, #24]
   24a8c:	ldr	x0, [x0]
   24a90:	add	x1, x0, #0x3e
   24a94:	subs	x0, x0, #0x1
   24a98:	csel	x0, x1, x0, mi  // mi = first
   24a9c:	asr	x0, x0, #6
   24aa0:	str	x0, [x29, #96]
   24aa4:	add	x22, x0, #0x1
   24aa8:	add	x2, x29, #0x98
   24aac:	mov	x1, x24
   24ab0:	mov	x0, x19
   24ab4:	bl	bdb0 <mpfr_cmp2@plt>
   24ab8:	mov	w25, w0
   24abc:	cbz	w0, 24d04 <mpfr_sub1@@Base+0x2ac>
   24ac0:	tbnz	w0, #31, 24d20 <mpfr_sub1@@Base+0x2c8>
   24ac4:	ldr	w0, [x19, #8]
   24ac8:	str	w0, [x21, #8]
   24acc:	ldr	x27, [x19, #16]
   24ad0:	mov	x0, #0x4                   	// #4
   24ad4:	movk	x0, #0x8000, lsl #48
   24ad8:	cmp	x27, x0
   24adc:	b.eq	24d38 <mpfr_sub1@@Base+0x2e0>  // b.none
   24ae0:	ldr	x25, [x24, #16]
   24ae4:	cmp	x25, x0
   24ae8:	b.eq	24d44 <mpfr_sub1@@Base+0x2ec>  // b.none
   24aec:	sub	x25, x27, x25
   24af0:	ldr	x28, [x21]
   24af4:	ldr	x0, [x19]
   24af8:	cmp	x28, x0
   24afc:	csel	x1, x28, x0, ge  // ge = tcont
   24b00:	add	x1, x1, #0x1
   24b04:	cmp	x1, x25
   24b08:	b.lt	24d58 <mpfr_sub1@@Base+0x300>  // b.tstop
   24b0c:	add	x1, x0, #0x3e
   24b10:	subs	x0, x0, #0x1
   24b14:	csel	x0, x1, x0, mi  // mi = first
   24b18:	asr	x0, x0, #6
   24b1c:	add	x1, x0, #0x1
   24b20:	str	x1, [x29, #136]
   24b24:	ldr	x3, [x29, #152]
   24b28:	neg	w2, w3
   24b2c:	and	x1, x2, #0x3f
   24b30:	adds	x1, x1, x3
   24b34:	add	x3, x1, #0x3f
   24b38:	csel	x1, x3, x1, mi  // mi = first
   24b3c:	asr	x1, x1, #6
   24b40:	str	x1, [x29, #120]
   24b44:	ands	w1, w2, #0x3f
   24b48:	str	w1, [x29, #112]
   24b4c:	b.eq	25140 <mpfr_sub1@@Base+0x6e8>  // b.none
   24b50:	add	x0, x0, #0x2
   24b54:	str	x0, [x29, #128]
   24b58:	lsl	x1, x0, #3
   24b5c:	cmp	x1, #0x4, lsl #12
   24b60:	b.hi	251a8 <mpfr_sub1@@Base+0x750>  // b.pmore
   24b64:	add	x1, x1, #0xf
   24b68:	and	x1, x1, #0xfffffffffffffff0
   24b6c:	sub	sp, sp, x1
   24b70:	mov	x26, sp
   24b74:	ldr	w3, [x29, #112]
   24b78:	ldr	x2, [x29, #136]
   24b7c:	ldr	x1, [x19, #24]
   24b80:	add	x0, x26, #0x8
   24b84:	bl	bce0 <__gmpn_rshift@plt>
   24b88:	str	x0, [x26]
   24b8c:	ldr	x0, [x24]
   24b90:	add	x19, x0, #0x3e
   24b94:	subs	x0, x0, #0x1
   24b98:	csel	x19, x19, x0, mi  // mi = first
   24b9c:	asr	x19, x19, #6
   24ba0:	add	x0, x19, #0x1
   24ba4:	str	x0, [x29, #112]
   24ba8:	ldr	x0, [x29, #152]
   24bac:	sub	w0, w25, w0
   24bb0:	ands	w0, w0, #0x3f
   24bb4:	str	w0, [x29, #108]
   24bb8:	b.eq	251c8 <mpfr_sub1@@Base+0x770>  // b.none
   24bbc:	add	x19, x19, #0x2
   24bc0:	lsl	x1, x19, #3
   24bc4:	cmp	x1, #0x4, lsl #12
   24bc8:	b.hi	2522c <mpfr_sub1@@Base+0x7d4>  // b.pmore
   24bcc:	add	x1, x1, #0xf
   24bd0:	and	x1, x1, #0xfffffffffffffff0
   24bd4:	sub	sp, sp, x1
   24bd8:	mov	x0, sp
   24bdc:	str	x0, [x29, #136]
   24be0:	ldr	w3, [x29, #108]
   24be4:	ldr	x2, [x29, #112]
   24be8:	ldr	x1, [x24, #24]
   24bec:	ldr	x24, [x29, #136]
   24bf0:	add	x0, x24, #0x8
   24bf4:	bl	bce0 <__gmpn_rshift@plt>
   24bf8:	str	x0, [x24]
   24bfc:	ldr	x0, [x29, #152]
   24c00:	cmp	x0, x25
   24c04:	b.lt	2523c <mpfr_sub1@@Base+0x7e4>  // b.tstop
   24c08:	sub	x0, x0, x25
   24c0c:	add	x25, x0, #0x7e
   24c10:	adds	x0, x0, #0x3f
   24c14:	csel	x0, x25, x0, mi  // mi = first
   24c18:	asr	x25, x0, #6
   24c1c:	ldr	x0, [x29, #120]
   24c20:	add	x0, x22, x0
   24c24:	str	x0, [x29, #112]
   24c28:	ldr	x1, [x29, #128]
   24c2c:	cmp	x0, x1
   24c30:	b.gt	25250 <mpfr_sub1@@Base+0x7f8>
   24c34:	sub	x1, x1, x0
   24c38:	add	x1, x26, x1, lsl #3
   24c3c:	cmp	x1, x23
   24c40:	b.eq	24c50 <mpfr_sub1@@Base+0x1f8>  // b.none
   24c44:	lsl	x2, x22, #3
   24c48:	mov	x0, x23
   24c4c:	bl	ba10 <memcpy@plt>
   24c50:	add	x24, x25, x22
   24c54:	cmp	x24, #0x0
   24c58:	b.le	24c70 <mpfr_sub1@@Base+0x218>
   24c5c:	tbnz	x25, #63, 252f8 <mpfr_sub1@@Base+0x8a0>
   24c60:	cmp	x19, x24
   24c64:	b.ge	252b8 <mpfr_sub1@@Base+0x860>  // b.tcont
   24c68:	cmp	x19, x25
   24c6c:	b.gt	252d8 <mpfr_sub1@@Base+0x880>
   24c70:	lsl	w0, w22, #6
   24c74:	sub	w28, w0, w28
   24c78:	ldr	x1, [x23]
   24c7c:	mov	x0, #0xffffffffffffffff    	// #-1
   24c80:	lsl	x0, x0, x28
   24c84:	bic	x2, x1, x0
   24c88:	and	x8, x1, x0
   24c8c:	str	x8, [x23]
   24c90:	cmp	w20, #0x5
   24c94:	b.eq	2559c <mpfr_sub1@@Base+0xb44>  // b.none
   24c98:	cbnz	w20, 25380 <mpfr_sub1@@Base+0x928>
   24c9c:	cbz	w28, 25808 <mpfr_sub1@@Base+0xdb0>
   24ca0:	sub	w1, w28, #0x1
   24ca4:	mov	x0, #0x1                   	// #1
   24ca8:	lsl	x0, x0, x1
   24cac:	cmp	x0, x2
   24cb0:	b.cc	2539c <mpfr_sub1@@Base+0x944>  // b.lo, b.ul, b.last
   24cb4:	cmp	x2, #0x0
   24cb8:	ccmp	x0, x2, #0x0, ne  // ne = any
   24cbc:	b.hi	255a4 <mpfr_sub1@@Base+0xb4c>  // b.pmore
   24cc0:	cbz	x2, 2580c <mpfr_sub1@@Base+0xdb4>
   24cc4:	ldr	x0, [x29, #128]
   24cc8:	ldr	x1, [x29, #112]
   24ccc:	sub	x1, x0, x1
   24cd0:	sub	x24, x19, x24
   24cd4:	cmp	x1, #0x0
   24cd8:	mov	w3, #0x2                   	// #2
   24cdc:	ccmp	x24, #0x0, #0x0, le
   24ce0:	b.gt	2582c <mpfr_sub1@@Base+0xdd4>
   24ce4:	lsr	x0, x8, x28
   24ce8:	mov	w3, #0x2                   	// #2
   24cec:	tbnz	w0, #0, 2539c <mpfr_sub1@@Base+0x944>
   24cf0:	cmp	w3, #0x0
   24cf4:	mov	w24, #0x1                   	// #1
   24cf8:	csinv	w24, w24, wzr, le
   24cfc:	mov	w20, #0x0                   	// #0
   24d00:	b	253dc <mpfr_sub1@@Base+0x984>
   24d04:	mov	w0, #0x1                   	// #1
   24d08:	cmp	w20, #0x3
   24d0c:	cneg	w0, w0, eq  // eq = none
   24d10:	str	w0, [x21, #8]
   24d14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   24d18:	str	x0, [x21, #16]
   24d1c:	b	2548c <mpfr_sub1@@Base+0xa34>
   24d20:	ldr	w0, [x19, #8]
   24d24:	neg	w0, w0
   24d28:	mov	x1, x19
   24d2c:	mov	x19, x24
   24d30:	mov	x24, x1
   24d34:	b	24ac8 <mpfr_sub1@@Base+0x70>
   24d38:	add	x0, x19, #0x20
   24d3c:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   24d40:	mov	x27, x0
   24d44:	mov	x1, x24
   24d48:	mov	x0, x19
   24d4c:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   24d50:	mov	x25, x0
   24d54:	b	24af0 <mpfr_sub1@@Base+0x98>
   24d58:	cmp	w20, #0x5
   24d5c:	b.eq	24e44 <mpfr_sub1@@Base+0x3ec>  // b.none
   24d60:	str	x27, [x21, #16]
   24d64:	ldr	x24, [x21, #24]
   24d68:	cmp	x28, x0
   24d6c:	b.ge	24e60 <mpfr_sub1@@Base+0x408>  // b.tcont
   24d70:	add	x1, x0, #0x3e
   24d74:	subs	x0, x0, #0x1
   24d78:	csel	x0, x1, x0, mi  // mi = first
   24d7c:	asr	x0, x0, #6
   24d80:	add	x4, x28, #0x3e
   24d84:	subs	x1, x28, #0x1
   24d88:	csel	x4, x4, x1, mi  // mi = first
   24d8c:	asr	x4, x4, #6
   24d90:	add	x2, x4, #0x1
   24d94:	neg	w3, w28
   24d98:	sub	x8, x0, x4
   24d9c:	ldr	x9, [x19, #24]
   24da0:	add	x1, x9, x8, lsl #3
   24da4:	ands	w3, w3, #0x3f
   24da8:	b.eq	24eb8 <mpfr_sub1@@Base+0x460>  // b.none
   24dac:	sub	w5, w3, #0x1
   24db0:	mov	x3, #0x1                   	// #1
   24db4:	lsl	x3, x3, x5
   24db8:	ldr	x6, [x9, x8, lsl #3]
   24dbc:	and	x7, x6, x3
   24dc0:	sub	x3, x3, #0x1
   24dc4:	and	x3, x3, x6
   24dc8:	cmp	w20, #0x0
   24dcc:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   24dd0:	b.ne	24dfc <mpfr_sub1@@Base+0x3a4>  // b.any
   24dd4:	mov	x0, x8
   24dd8:	cmp	x3, #0x0
   24ddc:	ccmp	x8, #0x0, #0x4, eq  // eq = none
   24de0:	b.eq	24dfc <mpfr_sub1@@Base+0x3a4>  // b.none
   24de4:	mvn	x6, x8
   24de8:	add	x6, x1, x6, lsl #3
   24dec:	ldr	x3, [x6, x0, lsl #3]
   24df0:	subs	x0, x0, #0x1
   24df4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   24df8:	b.eq	24dec <mpfr_sub1@@Base+0x394>  // b.none
   24dfc:	mov	x19, #0x2                   	// #2
   24e00:	lsl	x19, x19, x5
   24e04:	cbnz	w20, 24f98 <mpfr_sub1@@Base+0x540>
   24e08:	cbnz	x7, 24f18 <mpfr_sub1@@Base+0x4c0>
   24e0c:	orr	x3, x7, x3
   24e10:	cbz	x3, 24f08 <mpfr_sub1@@Base+0x4b0>
   24e14:	ldr	w25, [x21, #8]
   24e18:	neg	w25, w25
   24e1c:	cmp	x24, x1
   24e20:	b.eq	24e30 <mpfr_sub1@@Base+0x3d8>  // b.none
   24e24:	lsl	x2, x2, #3
   24e28:	mov	x0, x24
   24e2c:	bl	ba10 <memcpy@plt>
   24e30:	neg	x19, x19
   24e34:	ldr	x0, [x24]
   24e38:	and	x0, x0, x19
   24e3c:	str	x0, [x24]
   24e40:	b	2500c <mpfr_sub1@@Base+0x5b4>
   24e44:	ldr	w3, [x21, #8]
   24e48:	mov	w2, #0x1                   	// #1
   24e4c:	mov	x1, x19
   24e50:	mov	x0, x21
   24e54:	bl	c6a0 <mpfr_set4@plt>
   24e58:	mov	w25, w0
   24e5c:	b	2548c <mpfr_sub1@@Base+0xa34>
   24e60:	add	x1, x0, #0x3e
   24e64:	subs	x0, x0, #0x1
   24e68:	csel	x0, x1, x0, mi  // mi = first
   24e6c:	asr	x0, x0, #6
   24e70:	add	x2, x0, #0x1
   24e74:	add	x25, x28, #0x3e
   24e78:	subs	x1, x28, #0x1
   24e7c:	csel	x25, x25, x1, mi  // mi = first
   24e80:	asr	x25, x25, #6
   24e84:	sub	x25, x25, x0
   24e88:	lsl	x25, x25, #3
   24e8c:	add	x0, x24, x25
   24e90:	ldr	x1, [x19, #24]
   24e94:	cmp	x0, x1
   24e98:	b.eq	24ea4 <mpfr_sub1@@Base+0x44c>  // b.none
   24e9c:	lsl	x2, x2, #3
   24ea0:	bl	ba10 <memcpy@plt>
   24ea4:	mov	x2, x25
   24ea8:	mov	w1, #0x0                   	// #0
   24eac:	mov	x0, x24
   24eb0:	bl	c110 <memset@plt>
   24eb4:	b	25010 <mpfr_sub1@@Base+0x5b8>
   24eb8:	ldur	x5, [x1, #-8]
   24ebc:	and	x7, x5, #0x8000000000000000
   24ec0:	and	x3, x5, #0x7fffffffffffffff
   24ec4:	cmp	w20, #0x0
   24ec8:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   24ecc:	b.lt	24f94 <mpfr_sub1@@Base+0x53c>  // b.tstop
   24ed0:	sub	x0, x0, x4
   24ed4:	subs	x5, x0, #0x1
   24ed8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   24edc:	b.ne	24f00 <mpfr_sub1@@Base+0x4a8>  // b.any
   24ee0:	mvn	x0, x0
   24ee4:	add	x0, x1, x0, lsl #3
   24ee8:	ldr	x3, [x0, x5, lsl #3]
   24eec:	subs	x5, x5, #0x1
   24ef0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   24ef4:	b.eq	24ee8 <mpfr_sub1@@Base+0x490>  // b.none
   24ef8:	mov	x19, #0x1                   	// #1
   24efc:	b	24e04 <mpfr_sub1@@Base+0x3ac>
   24f00:	mov	x19, #0x1                   	// #1
   24f04:	b	24e04 <mpfr_sub1@@Base+0x3ac>
   24f08:	mov	w25, #0x0                   	// #0
   24f0c:	b	24e1c <mpfr_sub1@@Base+0x3c4>
   24f10:	mov	w25, #0x0                   	// #0
   24f14:	b	24e1c <mpfr_sub1@@Base+0x3c4>
   24f18:	cbnz	x3, 24fb8 <mpfr_sub1@@Base+0x560>
   24f1c:	ldr	x0, [x9, x8, lsl #3]
   24f20:	tst	x19, x0
   24f24:	b.ne	24f34 <mpfr_sub1@@Base+0x4dc>  // b.any
   24f28:	ldr	w25, [x21, #8]
   24f2c:	neg	w25, w25, lsl #1
   24f30:	b	24e1c <mpfr_sub1@@Base+0x3c4>
   24f34:	ldr	w25, [x21, #8]
   24f38:	lsl	w25, w25, #1
   24f3c:	b	24fbc <mpfr_sub1@@Base+0x564>
   24f40:	cmp	x24, x1
   24f44:	b.eq	24ffc <mpfr_sub1@@Base+0x5a4>  // b.none
   24f48:	cmp	x4, x0
   24f4c:	b.le	24ffc <mpfr_sub1@@Base+0x5a4>
   24f50:	ldr	x2, [x1, x5, lsl #3]
   24f54:	str	x2, [x24, x5, lsl #3]
   24f58:	cmp	x4, x5
   24f5c:	add	x5, x5, #0x1
   24f60:	b.gt	24f50 <mpfr_sub1@@Base+0x4f8>
   24f64:	b	24ffc <mpfr_sub1@@Base+0x5a4>
   24f68:	add	x6, x4, #0x1
   24f6c:	mov	x0, #0x1                   	// #1
   24f70:	cmp	x6, x0
   24f74:	b.eq	25734 <mpfr_sub1@@Base+0xcdc>  // b.none
   24f78:	ldr	x3, [x1, x0, lsl #3]
   24f7c:	add	x3, x3, #0x1
   24f80:	str	x3, [x24, x0, lsl #3]
   24f84:	add	x5, x0, #0x1
   24f88:	cbnz	x3, 24f40 <mpfr_sub1@@Base+0x4e8>
   24f8c:	mov	x0, x5
   24f90:	b	24f70 <mpfr_sub1@@Base+0x518>
   24f94:	mov	x19, #0x1                   	// #1
   24f98:	cmp	w20, #0x1
   24f9c:	b.eq	24e0c <mpfr_sub1@@Base+0x3b4>  // b.none
   24fa0:	ldr	w0, [x21, #8]
   24fa4:	add	w0, w20, w0, lsr #31
   24fa8:	cmp	w0, #0x3
   24fac:	b.eq	24e0c <mpfr_sub1@@Base+0x3b4>  // b.none
   24fb0:	orr	x3, x7, x3
   24fb4:	cbz	x3, 24f10 <mpfr_sub1@@Base+0x4b8>
   24fb8:	ldr	w25, [x21, #8]
   24fbc:	ldr	x0, [x9, x8, lsl #3]
   24fc0:	add	x0, x19, x0
   24fc4:	str	x0, [x24]
   24fc8:	cmp	x0, x19
   24fcc:	b.cc	24f68 <mpfr_sub1@@Base+0x510>  // b.lo, b.ul, b.last
   24fd0:	cmp	x24, x1
   24fd4:	b.eq	24ffc <mpfr_sub1@@Base+0x5a4>  // b.none
   24fd8:	cmp	x2, #0x1
   24fdc:	b.le	24ffc <mpfr_sub1@@Base+0x5a4>
   24fe0:	add	x4, x4, #0x1
   24fe4:	mov	x0, #0x1                   	// #1
   24fe8:	ldr	x2, [x1, x0, lsl #3]
   24fec:	str	x2, [x24, x0, lsl #3]
   24ff0:	add	x0, x0, #0x1
   24ff4:	cmp	x4, x0
   24ff8:	b.ne	24fe8 <mpfr_sub1@@Base+0x590>  // b.any
   24ffc:	neg	x19, x19
   25000:	ldr	x0, [x24]
   25004:	and	x0, x0, x19
   25008:	str	x0, [x24]
   2500c:	cbnz	w25, 250b4 <mpfr_sub1@@Base+0x65c>
   25010:	cmp	w20, #0x1
   25014:	b.eq	25028 <mpfr_sub1@@Base+0x5d0>  // b.none
   25018:	ldr	w25, [x21, #8]
   2501c:	add	w0, w20, w25, lsr #31
   25020:	cmp	w0, #0x3
   25024:	b.ne	25088 <mpfr_sub1@@Base+0x630>  // b.any
   25028:	lsl	w0, w22, #6
   2502c:	sub	w28, w0, w28
   25030:	mov	x0, #0x1                   	// #1
   25034:	lsl	x0, x0, x28
   25038:	ldr	x1, [x23]
   2503c:	sub	x2, x1, x0
   25040:	str	x2, [x23]
   25044:	cmp	x0, x1
   25048:	b.ls	25070 <mpfr_sub1@@Base+0x618>  // b.plast
   2504c:	mov	x0, x23
   25050:	ldr	x1, [x29, #96]
   25054:	add	x3, x23, x1, lsl #3
   25058:	cmp	x0, x3
   2505c:	b.eq	25070 <mpfr_sub1@@Base+0x618>  // b.none
   25060:	ldr	x1, [x0, #8]
   25064:	sub	x2, x1, #0x1
   25068:	str	x2, [x0, #8]!
   2506c:	cbz	x1, 25058 <mpfr_sub1@@Base+0x600>
   25070:	lsl	x0, x22, #3
   25074:	sub	x0, x0, #0x8
   25078:	ldr	x1, [x23, x0]
   2507c:	tbz	x1, #63, 2510c <mpfr_sub1@@Base+0x6b4>
   25080:	ldr	w25, [x21, #8]
   25084:	neg	w25, w25
   25088:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2508c:	ldr	x1, [x0, #2544]
   25090:	add	x0, x0, #0x9f0
   25094:	blr	x1
   25098:	ldr	x1, [x21, #16]
   2509c:	mrs	x2, tpidr_el0
   250a0:	ldr	x0, [x2, x0]
   250a4:	cmp	x1, x0
   250a8:	b.gt	25128 <mpfr_sub1@@Base+0x6d0>
   250ac:	cbz	w25, 2548c <mpfr_sub1@@Base+0xa34>
   250b0:	b	250e4 <mpfr_sub1@@Base+0x68c>
   250b4:	ldr	w0, [x21, #8]
   250b8:	cmp	w25, w0, lsl #1
   250bc:	b.eq	25028 <mpfr_sub1@@Base+0x5d0>  // b.none
   250c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   250c4:	ldr	x1, [x0, #2544]
   250c8:	add	x0, x0, #0x9f0
   250cc:	blr	x1
   250d0:	mrs	x1, tpidr_el0
   250d4:	ldr	x1, [x1, x0]
   250d8:	ldr	x0, [x21, #16]
   250dc:	cmp	x1, x0
   250e0:	b.lt	25128 <mpfr_sub1@@Base+0x6d0>  // b.tstop
   250e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   250e8:	ldr	x1, [x0, #2576]
   250ec:	add	x0, x0, #0xa10
   250f0:	blr	x1
   250f4:	mrs	x1, tpidr_el0
   250f8:	add	x0, x1, x0
   250fc:	ldr	w1, [x0]
   25100:	orr	w1, w1, #0x8
   25104:	str	w1, [x0]
   25108:	b	2548c <mpfr_sub1@@Base+0xa34>
   2510c:	ldr	x1, [x21, #16]
   25110:	sub	x1, x1, #0x1
   25114:	str	x1, [x21, #16]
   25118:	ldr	x1, [x23, x0]
   2511c:	orr	x1, x1, #0x8000000000000000
   25120:	str	x1, [x23, x0]
   25124:	b	25080 <mpfr_sub1@@Base+0x628>
   25128:	ldr	w2, [x21, #8]
   2512c:	mov	w1, w20
   25130:	mov	x0, x21
   25134:	bl	bf40 <mpfr_overflow@plt>
   25138:	mov	w25, w0
   2513c:	b	2548c <mpfr_sub1@@Base+0xa34>
   25140:	ldr	x26, [x19, #24]
   25144:	ldr	x0, [x29, #136]
   25148:	str	x0, [x29, #128]
   2514c:	cmp	x23, x26
   25150:	b.ne	24b8c <mpfr_sub1@@Base+0x134>  // b.any
   25154:	lsl	x19, x0, #3
   25158:	cmp	x19, #0x4, lsl #12
   2515c:	b.hi	25194 <mpfr_sub1@@Base+0x73c>  // b.pmore
   25160:	add	x0, x19, #0xf
   25164:	and	x0, x0, #0xfffffffffffffff0
   25168:	sub	sp, sp, x0
   2516c:	mov	x26, sp
   25170:	cmp	x26, x23
   25174:	b.eq	251b8 <mpfr_sub1@@Base+0x760>  // b.none
   25178:	mov	x2, x19
   2517c:	mov	x1, x23
   25180:	mov	x0, x26
   25184:	bl	ba10 <memcpy@plt>
   25188:	ldr	x0, [x29, #136]
   2518c:	str	x0, [x29, #128]
   25190:	b	24b8c <mpfr_sub1@@Base+0x134>
   25194:	mov	x1, x19
   25198:	add	x0, x29, #0x90
   2519c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   251a0:	mov	x26, x0
   251a4:	b	25170 <mpfr_sub1@@Base+0x718>
   251a8:	add	x0, x29, #0x90
   251ac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   251b0:	mov	x26, x0
   251b4:	b	24b74 <mpfr_sub1@@Base+0x11c>
   251b8:	mov	x26, x23
   251bc:	ldr	x0, [x29, #136]
   251c0:	str	x0, [x29, #128]
   251c4:	b	24b8c <mpfr_sub1@@Base+0x134>
   251c8:	ldr	x0, [x24, #24]
   251cc:	str	x0, [x29, #136]
   251d0:	cmp	x23, x0
   251d4:	b.eq	251e0 <mpfr_sub1@@Base+0x788>  // b.none
   251d8:	ldr	x19, [x29, #112]
   251dc:	b	24bfc <mpfr_sub1@@Base+0x1a4>
   251e0:	ldr	x0, [x29, #112]
   251e4:	lsl	x19, x0, #3
   251e8:	cmp	x19, #0x4, lsl #12
   251ec:	b.hi	25218 <mpfr_sub1@@Base+0x7c0>  // b.pmore
   251f0:	add	x0, x19, #0xf
   251f4:	and	x0, x0, #0xfffffffffffffff0
   251f8:	sub	sp, sp, x0
   251fc:	mov	x0, sp
   25200:	str	x0, [x29, #136]
   25204:	mov	x2, x19
   25208:	mov	x1, x23
   2520c:	ldr	x0, [x29, #136]
   25210:	bl	ba10 <memcpy@plt>
   25214:	b	251d8 <mpfr_sub1@@Base+0x780>
   25218:	mov	x1, x19
   2521c:	add	x0, x29, #0x90
   25220:	bl	bdc0 <mpfr_tmp_allocate@plt>
   25224:	str	x0, [x29, #136]
   25228:	b	25204 <mpfr_sub1@@Base+0x7ac>
   2522c:	add	x0, x29, #0x90
   25230:	bl	bdc0 <mpfr_tmp_allocate@plt>
   25234:	str	x0, [x29, #136]
   25238:	b	24be0 <mpfr_sub1@@Base+0x188>
   2523c:	subs	x25, x25, x0
   25240:	add	x0, x25, #0x3f
   25244:	csel	x25, x0, x25, mi  // mi = first
   25248:	neg	x25, x25, asr #6
   2524c:	b	24c1c <mpfr_sub1@@Base+0x1c4>
   25250:	ldr	x0, [x29, #128]
   25254:	ldr	x1, [x29, #120]
   25258:	cmp	x0, x1
   2525c:	b.le	252a4 <mpfr_sub1@@Base+0x84c>
   25260:	ldr	x3, [x29, #112]
   25264:	sub	x24, x3, x0
   25268:	lsl	x24, x24, #3
   2526c:	mov	x2, x24
   25270:	mov	w1, #0x0                   	// #0
   25274:	mov	x0, x23
   25278:	bl	c110 <memset@plt>
   2527c:	add	x0, x23, x24
   25280:	cmp	x0, x26
   25284:	b.eq	24c50 <mpfr_sub1@@Base+0x1f8>  // b.none
   25288:	ldr	x1, [x29, #128]
   2528c:	ldr	x2, [x29, #120]
   25290:	sub	x2, x1, x2
   25294:	lsl	x2, x2, #3
   25298:	mov	x1, x26
   2529c:	bl	ba10 <memcpy@plt>
   252a0:	b	24c50 <mpfr_sub1@@Base+0x1f8>
   252a4:	lsl	x2, x22, #3
   252a8:	mov	w1, #0x0                   	// #0
   252ac:	mov	x0, x23
   252b0:	bl	c110 <memset@plt>
   252b4:	b	24c50 <mpfr_sub1@@Base+0x1f8>
   252b8:	sub	x2, x19, x24
   252bc:	mov	x3, x22
   252c0:	ldr	x0, [x29, #136]
   252c4:	add	x2, x0, x2, lsl #3
   252c8:	mov	x1, x23
   252cc:	mov	x0, x23
   252d0:	bl	be60 <__gmpn_sub_n@plt>
   252d4:	b	24c70 <mpfr_sub1@@Base+0x218>
   252d8:	sub	x0, x25, x19
   252dc:	add	x0, x0, x22
   252e0:	add	x0, x23, x0, lsl #3
   252e4:	sub	x3, x19, x25
   252e8:	ldr	x2, [x29, #136]
   252ec:	mov	x1, x0
   252f0:	bl	be60 <__gmpn_sub_n@plt>
   252f4:	b	24c70 <mpfr_sub1@@Base+0x218>
   252f8:	cmp	x19, x24
   252fc:	b.lt	25360 <mpfr_sub1@@Base+0x908>  // b.tstop
   25300:	sub	x2, x19, x24
   25304:	mov	x3, x24
   25308:	ldr	x0, [x29, #136]
   2530c:	add	x2, x0, x2, lsl #3
   25310:	mov	x1, x23
   25314:	mov	x0, x23
   25318:	bl	be60 <__gmpn_sub_n@plt>
   2531c:	add	x1, x22, x25
   25320:	add	x2, x23, x1, lsl #3
   25324:	ldr	x3, [x23, x1, lsl #3]
   25328:	sub	x4, x3, x0
   2532c:	str	x4, [x23, x1, lsl #3]
   25330:	cmp	x0, x3
   25334:	b.ls	24c70 <mpfr_sub1@@Base+0x218>  // b.plast
   25338:	neg	x25, x25
   2533c:	mov	x0, #0x1                   	// #1
   25340:	cmp	x25, x0
   25344:	b.eq	24c70 <mpfr_sub1@@Base+0x218>  // b.none
   25348:	ldr	x1, [x2, x0, lsl #3]
   2534c:	sub	x3, x1, #0x1
   25350:	str	x3, [x2, x0, lsl #3]
   25354:	add	x0, x0, #0x1
   25358:	cbz	x1, 25340 <mpfr_sub1@@Base+0x8e8>
   2535c:	b	24c70 <mpfr_sub1@@Base+0x218>
   25360:	sub	x0, x22, x19
   25364:	add	x0, x0, x25
   25368:	add	x0, x23, x0, lsl #3
   2536c:	mov	x3, x19
   25370:	ldr	x2, [x29, #136]
   25374:	mov	x1, x0
   25378:	bl	be60 <__gmpn_sub_n@plt>
   2537c:	b	2531c <mpfr_sub1@@Base+0x8c4>
   25380:	ldr	w0, [x21, #8]
   25384:	add	w0, w20, w0, lsr #31
   25388:	cmp	w0, #0x3
   2538c:	b.eq	2584c <mpfr_sub1@@Base+0xdf4>  // b.none
   25390:	cbz	x2, 2580c <mpfr_sub1@@Base+0xdb4>
   25394:	cmp	w20, #0x1
   25398:	b.eq	255ac <mpfr_sub1@@Base+0xb54>  // b.none
   2539c:	mov	x0, #0x1                   	// #1
   253a0:	lsl	x28, x0, x28
   253a4:	add	x0, x8, x28
   253a8:	str	x0, [x23]
   253ac:	cmp	x28, x0
   253b0:	b.ls	253d8 <mpfr_sub1@@Base+0x980>  // b.plast
   253b4:	mov	x1, x23
   253b8:	ldr	x0, [x29, #96]
   253bc:	add	x2, x23, x0, lsl #3
   253c0:	cmp	x1, x2
   253c4:	b.eq	2575c <mpfr_sub1@@Base+0xd04>  // b.none
   253c8:	ldr	x0, [x1, #8]
   253cc:	add	x0, x0, #0x1
   253d0:	str	x0, [x1, #8]!
   253d4:	cbz	x0, 253c0 <mpfr_sub1@@Base+0x968>
   253d8:	mov	w24, #0x1                   	// #1
   253dc:	lsl	x22, x22, #3
   253e0:	sub	x22, x22, #0x8
   253e4:	ldr	x0, [x23, x22]
   253e8:	mov	w25, #0x0                   	// #0
   253ec:	tbz	x0, #63, 255d8 <mpfr_sub1@@Base+0xb80>
   253f0:	ldr	x0, [x29, #144]
   253f4:	cbnz	x0, 255f4 <mpfr_sub1@@Base+0xb9c>
   253f8:	ldr	x19, [x29, #152]
   253fc:	cbz	x19, 256cc <mpfr_sub1@@Base+0xc74>
   25400:	sub	x19, x19, w25, sxtw
   25404:	str	x19, [x29, #152]
   25408:	sub	x19, x27, x19
   2540c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   25410:	cmp	x27, x0
   25414:	b.eq	255fc <mpfr_sub1@@Base+0xba4>  // b.none
   25418:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2541c:	ldr	x1, [x0, #2512]
   25420:	add	x0, x0, #0x9d0
   25424:	blr	x1
   25428:	mrs	x1, tpidr_el0
   2542c:	ldr	x0, [x1, x0]
   25430:	cmp	x0, x19
   25434:	b.gt	2563c <mpfr_sub1@@Base+0xbe4>
   25438:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2543c:	ldr	x1, [x0, #2544]
   25440:	add	x0, x0, #0x9f0
   25444:	blr	x1
   25448:	mrs	x1, tpidr_el0
   2544c:	ldr	x0, [x1, x0]
   25450:	cmp	x0, x19
   25454:	b.lt	256b4 <mpfr_sub1@@Base+0xc5c>  // b.tstop
   25458:	str	x19, [x21, #16]
   2545c:	ldr	w25, [x21, #8]
   25460:	mul	w25, w24, w25
   25464:	cbz	w25, 2548c <mpfr_sub1@@Base+0xa34>
   25468:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2546c:	ldr	x1, [x0, #2576]
   25470:	add	x0, x0, #0xa10
   25474:	blr	x1
   25478:	mrs	x1, tpidr_el0
   2547c:	add	x0, x1, x0
   25480:	ldr	w1, [x0]
   25484:	orr	w1, w1, #0x8
   25488:	str	w1, [x0]
   2548c:	mov	w0, w25
   25490:	mov	sp, x29
   25494:	ldp	x19, x20, [sp, #16]
   25498:	ldp	x21, x22, [sp, #32]
   2549c:	ldp	x23, x24, [sp, #48]
   254a0:	ldp	x25, x26, [sp, #64]
   254a4:	ldp	x27, x28, [sp, #80]
   254a8:	ldp	x29, x30, [sp], #160
   254ac:	ret
   254b0:	cset	w3, hi  // hi = pmore
   254b4:	orr	w0, w6, w0
   254b8:	cbz	w0, 254e4 <mpfr_sub1@@Base+0xa8c>
   254bc:	mov	x24, x5
   254c0:	b	25874 <mpfr_sub1@@Base+0xe1c>
   254c4:	mov	x24, x5
   254c8:	b	25780 <mpfr_sub1@@Base+0xd28>
   254cc:	tbz	w3, #31, 254e8 <mpfr_sub1@@Base+0xa90>
   254d0:	tbnz	x4, #63, 254dc <mpfr_sub1@@Base+0xa84>
   254d4:	add	x2, x2, x9
   254d8:	b	25798 <mpfr_sub1@@Base+0xd40>
   254dc:	add	x4, x4, x9
   254e0:	b	25798 <mpfr_sub1@@Base+0xd40>
   254e4:	mov	x24, x5
   254e8:	tbz	x4, #63, 254f8 <mpfr_sub1@@Base+0xaa0>
   254ec:	add	x2, x2, x9
   254f0:	b	254fc <mpfr_sub1@@Base+0xaa4>
   254f4:	mov	x4, #0x0                   	// #0
   254f8:	add	x4, x4, x9
   254fc:	cmp	w3, #0x0
   25500:	b.le	257b0 <mpfr_sub1@@Base+0xd58>
   25504:	mov	w3, w10
   25508:	b	25888 <mpfr_sub1@@Base+0xe30>
   2550c:	cmp	w3, #0x2
   25510:	b.eq	25594 <mpfr_sub1@@Base+0xb3c>  // b.none
   25514:	mov	w24, #0xffffffff            	// #-1
   25518:	mov	w20, #0x0                   	// #0
   2551c:	b	253dc <mpfr_sub1@@Base+0x984>
   25520:	cmp	w20, #0x0
   25524:	ccmp	w3, #0x0, #0x4, eq  // eq = none
   25528:	b.eq	255d0 <mpfr_sub1@@Base+0xb78>  // b.none
   2552c:	lsr	x0, x8, x28
   25530:	tbz	w0, #0, 24cf0 <mpfr_sub1@@Base+0x298>
   25534:	mov	w20, #0x0                   	// #0
   25538:	tbz	w3, #31, 2539c <mpfr_sub1@@Base+0x944>
   2553c:	mov	w20, #0x0                   	// #0
   25540:	mov	x0, #0x1                   	// #1
   25544:	lsl	x28, x0, x28
   25548:	sub	x0, x8, x28
   2554c:	str	x0, [x23]
   25550:	cmp	x8, x28
   25554:	b.cs	255e8 <mpfr_sub1@@Base+0xb90>  // b.hs, b.nlast
   25558:	mov	x0, x23
   2555c:	ldr	x1, [x29, #96]
   25560:	add	x23, x23, x1, lsl #3
   25564:	cmp	x23, x0
   25568:	b.eq	25588 <mpfr_sub1@@Base+0xb30>  // b.none
   2556c:	ldr	x1, [x0, #8]
   25570:	sub	x2, x1, #0x1
   25574:	str	x2, [x0, #8]!
   25578:	cbz	x1, 25564 <mpfr_sub1@@Base+0xb0c>
   2557c:	mov	w25, #0x0                   	// #0
   25580:	mov	w24, #0xffffffff            	// #-1
   25584:	b	253f0 <mpfr_sub1@@Base+0x998>
   25588:	mov	w25, #0x0                   	// #0
   2558c:	mov	w24, #0xffffffff            	// #-1
   25590:	b	253f0 <mpfr_sub1@@Base+0x998>
   25594:	mov	w20, #0x0                   	// #0
   25598:	b	2539c <mpfr_sub1@@Base+0x944>
   2559c:	mov	w24, #0x0                   	// #0
   255a0:	b	253dc <mpfr_sub1@@Base+0x984>
   255a4:	mov	w24, #0xffffffff            	// #-1
   255a8:	b	253dc <mpfr_sub1@@Base+0x984>
   255ac:	mov	w24, #0xffffffff            	// #-1
   255b0:	b	253dc <mpfr_sub1@@Base+0x984>
   255b4:	mov	w24, #0x1                   	// #1
   255b8:	b	253dc <mpfr_sub1@@Base+0x984>
   255bc:	mov	w24, #0x1                   	// #1
   255c0:	mov	w20, #0x0                   	// #0
   255c4:	b	253dc <mpfr_sub1@@Base+0x984>
   255c8:	mov	w24, #0xffffffff            	// #-1
   255cc:	b	253dc <mpfr_sub1@@Base+0x984>
   255d0:	mov	w24, #0x0                   	// #0
   255d4:	b	253dc <mpfr_sub1@@Base+0x984>
   255d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   255dc:	str	x0, [x23, x22]
   255e0:	mov	w25, #0x1                   	// #1
   255e4:	b	253f0 <mpfr_sub1@@Base+0x998>
   255e8:	mov	w25, #0x0                   	// #0
   255ec:	mov	w24, #0xffffffff            	// #-1
   255f0:	b	253f0 <mpfr_sub1@@Base+0x998>
   255f4:	bl	c410 <mpfr_tmp_free@plt>
   255f8:	b	253f8 <mpfr_sub1@@Base+0x9a0>
   255fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25600:	ldr	x1, [x0, #2544]
   25604:	add	x0, x0, #0x9f0
   25608:	blr	x1
   2560c:	mrs	x1, tpidr_el0
   25610:	ldr	x0, [x1, x0]
   25614:	cmp	x0, x19
   25618:	b.ge	25690 <mpfr_sub1@@Base+0xc38>  // b.tcont
   2561c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25620:	ldr	x1, [x0, #2512]
   25624:	add	x0, x0, #0x9d0
   25628:	blr	x1
   2562c:	mrs	x1, tpidr_el0
   25630:	ldr	x0, [x1, x0]
   25634:	cmp	x0, x19
   25638:	b.le	256b4 <mpfr_sub1@@Base+0xc5c>
   2563c:	cbnz	w20, 25678 <mpfr_sub1@@Base+0xc20>
   25640:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25644:	ldr	x1, [x0, #2512]
   25648:	add	x0, x0, #0x9d0
   2564c:	blr	x1
   25650:	mrs	x1, tpidr_el0
   25654:	ldr	x0, [x1, x0]
   25658:	sub	x0, x0, #0x1
   2565c:	cmp	x0, x19
   25660:	b.gt	256ac <mpfr_sub1@@Base+0xc54>
   25664:	tbnz	w24, #31, 25678 <mpfr_sub1@@Base+0xc20>
   25668:	mov	x0, x21
   2566c:	bl	bf00 <mpfr_powerof2_raw@plt>
   25670:	cmp	w0, #0x0
   25674:	cset	w20, ne  // ne = any
   25678:	ldr	w2, [x21, #8]
   2567c:	mov	w1, w20
   25680:	mov	x0, x21
   25684:	bl	c3c0 <mpfr_underflow@plt>
   25688:	mov	w25, w0
   2568c:	b	2548c <mpfr_sub1@@Base+0xa34>
   25690:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   25694:	add	x2, x2, #0xaf0
   25698:	mov	w1, #0x298                 	// #664
   2569c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   256a0:	add	x0, x0, #0xb28
   256a4:	bl	cb40 <mpfr_assert_fail@plt>
   256a8:	b	2561c <mpfr_sub1@@Base+0xbc4>
   256ac:	mov	w20, #0x1                   	// #1
   256b0:	b	25678 <mpfr_sub1@@Base+0xc20>
   256b4:	ldr	w2, [x21, #8]
   256b8:	mov	w1, w20
   256bc:	mov	x0, x21
   256c0:	bl	bf40 <mpfr_overflow@plt>
   256c4:	mov	w25, w0
   256c8:	b	2548c <mpfr_sub1@@Base+0xa34>
   256cc:	sxtw	x19, w25
   256d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   256d4:	ldr	x1, [x0, #2544]
   256d8:	add	x0, x0, #0x9f0
   256dc:	blr	x1
   256e0:	mrs	x1, tpidr_el0
   256e4:	ldr	x0, [x1, x0]
   256e8:	sub	x0, x0, x19
   256ec:	cmp	x0, x27
   256f0:	b.lt	2571c <mpfr_sub1@@Base+0xcc4>  // b.tstop
   256f4:	add	x19, x19, x27
   256f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   256fc:	ldr	x1, [x0, #2512]
   25700:	add	x0, x0, #0x9d0
   25704:	blr	x1
   25708:	mrs	x1, tpidr_el0
   2570c:	ldr	x0, [x1, x0]
   25710:	cmp	x0, x19
   25714:	b.le	25458 <mpfr_sub1@@Base+0xa00>
   25718:	b	2563c <mpfr_sub1@@Base+0xbe4>
   2571c:	ldr	w2, [x21, #8]
   25720:	mov	w1, w20
   25724:	mov	x0, x21
   25728:	bl	bf40 <mpfr_overflow@plt>
   2572c:	mov	w25, w0
   25730:	b	2548c <mpfr_sub1@@Base+0xa34>
   25734:	add	x2, x24, x2, lsl #3
   25738:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2573c:	stur	x0, [x2, #-8]
   25740:	ldr	x0, [x21, #16]
   25744:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   25748:	cmp	x0, x1
   2574c:	b.eq	24ffc <mpfr_sub1@@Base+0x5a4>  // b.none
   25750:	add	x0, x0, #0x1
   25754:	str	x0, [x21, #16]
   25758:	b	24ffc <mpfr_sub1@@Base+0x5a4>
   2575c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   25760:	ldr	x1, [x29, #96]
   25764:	str	x0, [x23, x1, lsl #3]
   25768:	mov	w25, #0x1                   	// #1
   2576c:	mov	w24, w25
   25770:	b	253f0 <mpfr_sub1@@Base+0x998>
   25774:	mov	x24, x5
   25778:	mov	x4, #0x0                   	// #0
   2577c:	cbz	w3, 25860 <mpfr_sub1@@Base+0xe08>
   25780:	orr	w0, w6, w0
   25784:	cbz	w0, 254cc <mpfr_sub1@@Base+0xa74>
   25788:	tbz	w3, #31, 25874 <mpfr_sub1@@Base+0xe1c>
   2578c:	cmp	w20, #0x1
   25790:	b.eq	25540 <mpfr_sub1@@Base+0xae8>  // b.none
   25794:	cbnz	w20, 255b4 <mpfr_sub1@@Base+0xb5c>
   25798:	cmp	x2, x4
   2579c:	ccmn	w3, #0x1, #0x4, ls  // ls = plast
   257a0:	ccmp	w28, #0x0, #0x0, ne  // ne = any
   257a4:	b.gt	255bc <mpfr_sub1@@Base+0xb64>
   257a8:	cmp	x2, x4
   257ac:	b.cc	25540 <mpfr_sub1@@Base+0xae8>  // b.lo, b.ul, b.last
   257b0:	mov	w0, w7
   257b4:	cmp	x1, #0x0
   257b8:	ccmp	x24, #0x0, #0x0, le
   257bc:	b.le	25520 <mpfr_sub1@@Base+0xac8>
   257c0:	mov	x2, #0x0                   	// #0
   257c4:	cmp	x1, #0x0
   257c8:	b.le	257d4 <mpfr_sub1@@Base+0xd7c>
   257cc:	sub	x1, x1, #0x1
   257d0:	ldr	x2, [x26, x1, lsl #3]
   257d4:	cmp	x24, #0x0
   257d8:	b.le	25778 <mpfr_sub1@@Base+0xd20>
   257dc:	sub	x5, x24, #0x1
   257e0:	cmp	x19, x24
   257e4:	b.lt	25774 <mpfr_sub1@@Base+0xd1c>  // b.tstop
   257e8:	ldr	x4, [x29, #136]
   257ec:	ldr	x4, [x4, x5, lsl #3]
   257f0:	cbnz	w3, 254c4 <mpfr_sub1@@Base+0xa6c>
   257f4:	cmp	x2, x4
   257f8:	b.cs	254b0 <mpfr_sub1@@Base+0xa58>  // b.hs, b.nlast
   257fc:	sub	w3, w0, #0x2
   25800:	mov	x24, x5
   25804:	b	25780 <mpfr_sub1@@Base+0xd28>
   25808:	mov	w20, w28
   2580c:	ldr	x0, [x29, #128]
   25810:	ldr	x1, [x29, #112]
   25814:	sub	x1, x0, x1
   25818:	sub	x24, x19, x24
   2581c:	cmp	x1, #0x0
   25820:	mov	w3, #0x0                   	// #0
   25824:	ccmp	x24, #0x0, #0x0, le
   25828:	b.le	25844 <mpfr_sub1@@Base+0xdec>
   2582c:	mov	w0, #0x0                   	// #0
   25830:	orr	w6, w20, w28
   25834:	mov	w10, #0x2                   	// #2
   25838:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2583c:	mov	w7, #0x1                   	// #1
   25840:	b	257c0 <mpfr_sub1@@Base+0xd68>
   25844:	mov	w24, #0x0                   	// #0
   25848:	b	253dc <mpfr_sub1@@Base+0x984>
   2584c:	mov	w20, #0x1                   	// #1
   25850:	cbz	x2, 2580c <mpfr_sub1@@Base+0xdb4>
   25854:	mov	w24, #0xffffffff            	// #-1
   25858:	mov	w20, #0x1                   	// #1
   2585c:	b	253dc <mpfr_sub1@@Base+0x984>
   25860:	cmp	x2, #0x0
   25864:	cset	w3, ne  // ne = any
   25868:	orr	w0, w6, w0
   2586c:	mov	x4, #0x0                   	// #0
   25870:	cbz	w0, 254f4 <mpfr_sub1@@Base+0xa9c>
   25874:	cmp	w3, #0x0
   25878:	b.le	257b0 <mpfr_sub1@@Base+0xd58>
   2587c:	cmp	w20, #0x1
   25880:	b.eq	255c8 <mpfr_sub1@@Base+0xb70>  // b.none
   25884:	cbnz	w20, 2539c <mpfr_sub1@@Base+0x944>
   25888:	cmp	x2, x4
   2588c:	b.hi	2550c <mpfr_sub1@@Base+0xab4>  // b.pmore
   25890:	b.cs	257b0 <mpfr_sub1@@Base+0xd58>  // b.hs, b.nlast
   25894:	mov	w24, #0xffffffff            	// #-1
   25898:	mov	w20, #0x0                   	// #0
   2589c:	b	253dc <mpfr_sub1@@Base+0x984>

00000000000258a0 <mpfr_sub_ui@@Base>:
   258a0:	stp	x29, x30, [sp, #-128]!
   258a4:	mov	x29, sp
   258a8:	stp	x19, x20, [sp, #16]
   258ac:	stp	x21, x22, [sp, #32]
   258b0:	mov	x19, x0
   258b4:	mov	w21, w3
   258b8:	cbz	x2, 259c4 <mpfr_sub_ui@@Base+0x124>
   258bc:	ldr	x0, [x1, #16]
   258c0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   258c4:	cmp	x0, x3
   258c8:	b.le	259d8 <mpfr_sub_ui@@Base+0x138>
   258cc:	stp	x23, x24, [sp, #48]
   258d0:	stp	x25, x26, [sp, #64]
   258d4:	mov	x4, #0x40                  	// #64
   258d8:	str	x4, [sp, #96]
   258dc:	add	x0, sp, #0x58
   258e0:	str	x0, [sp, #120]
   258e4:	mov	w0, #0x1                   	// #1
   258e8:	str	w0, [sp, #104]
   258ec:	clz	x3, x2
   258f0:	lsl	x2, x2, x3
   258f4:	str	x2, [sp, #88]
   258f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   258fc:	ldr	x2, [x0, #2576]
   25900:	add	x0, x0, #0xa10
   25904:	blr	x2
   25908:	mrs	x2, tpidr_el0
   2590c:	add	x26, x2, x0
   25910:	ldr	w20, [x2, x0]
   25914:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25918:	ldr	x5, [x0, #2512]
   2591c:	add	x0, x0, #0x9d0
   25920:	blr	x5
   25924:	add	x25, x2, x0
   25928:	ldr	x22, [x2, x0]
   2592c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25930:	ldr	x5, [x0, #2544]
   25934:	add	x0, x0, #0x9f0
   25938:	blr	x5
   2593c:	add	x24, x2, x0
   25940:	ldr	x23, [x2, x0]
   25944:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   25948:	str	x0, [x25]
   2594c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   25950:	str	x0, [x24]
   25954:	sub	w4, w4, w3
   25958:	sxtw	x4, w4
   2595c:	str	x4, [sp, #112]
   25960:	mov	w3, w21
   25964:	add	x2, sp, #0x60
   25968:	mov	x0, x19
   2596c:	bl	bb70 <mpfr_sub@plt>
   25970:	mov	w1, w0
   25974:	ldr	w0, [x26]
   25978:	orr	w20, w20, w0
   2597c:	str	w20, [x26]
   25980:	str	x22, [x25]
   25984:	str	x23, [x24]
   25988:	ldr	x0, [x19, #16]
   2598c:	cmp	x23, x0
   25990:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   25994:	b.gt	25a38 <mpfr_sub_ui@@Base+0x198>
   25998:	cbz	w1, 25a54 <mpfr_sub_ui@@Base+0x1b4>
   2599c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   259a0:	ldr	x2, [x0, #2576]
   259a4:	add	x0, x0, #0xa10
   259a8:	blr	x2
   259ac:	orr	w20, w20, #0x8
   259b0:	mrs	x2, tpidr_el0
   259b4:	str	w20, [x2, x0]
   259b8:	ldp	x23, x24, [sp, #48]
   259bc:	ldp	x25, x26, [sp, #64]
   259c0:	b	25a5c <mpfr_sub_ui@@Base+0x1bc>
   259c4:	ldr	w3, [x1, #8]
   259c8:	mov	w2, w21
   259cc:	bl	c6a0 <mpfr_set4@plt>
   259d0:	mov	w1, w0
   259d4:	b	25a5c <mpfr_sub_ui@@Base+0x1bc>
   259d8:	mov	x3, #0x2                   	// #2
   259dc:	movk	x3, #0x8000, lsl #48
   259e0:	cmp	x0, x3
   259e4:	b.eq	25a08 <mpfr_sub_ui@@Base+0x168>  // b.none
   259e8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   259ec:	cmp	x0, x3
   259f0:	b.ne	258cc <mpfr_sub_ui@@Base+0x2c>  // b.any
   259f4:	str	x3, [x19, #16]
   259f8:	ldr	w0, [x1, #8]
   259fc:	str	w0, [x19, #8]
   25a00:	mov	w1, #0x0                   	// #0
   25a04:	b	25a5c <mpfr_sub_ui@@Base+0x1bc>
   25a08:	str	x3, [x19, #16]
   25a0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25a10:	ldr	x1, [x0, #2576]
   25a14:	add	x0, x0, #0xa10
   25a18:	blr	x1
   25a1c:	mrs	x1, tpidr_el0
   25a20:	add	x0, x1, x0
   25a24:	ldr	w1, [x0]
   25a28:	orr	w1, w1, #0x4
   25a2c:	str	w1, [x0]
   25a30:	mov	w1, #0x0                   	// #0
   25a34:	b	25a5c <mpfr_sub_ui@@Base+0x1bc>
   25a38:	mov	w2, w21
   25a3c:	mov	x0, x19
   25a40:	bl	cb30 <mpfr_check_range@plt>
   25a44:	mov	w1, w0
   25a48:	ldp	x23, x24, [sp, #48]
   25a4c:	ldp	x25, x26, [sp, #64]
   25a50:	b	25a5c <mpfr_sub_ui@@Base+0x1bc>
   25a54:	ldp	x23, x24, [sp, #48]
   25a58:	ldp	x25, x26, [sp, #64]
   25a5c:	mov	w0, w1
   25a60:	ldp	x19, x20, [sp, #16]
   25a64:	ldp	x21, x22, [sp, #32]
   25a68:	ldp	x29, x30, [sp], #128
   25a6c:	ret

0000000000025a70 <mpfr_rint@@Base>:
   25a70:	stp	x29, x30, [sp, #-128]!
   25a74:	mov	x29, sp
   25a78:	stp	x19, x20, [sp, #16]
   25a7c:	stp	x23, x24, [sp, #48]
   25a80:	stp	x25, x26, [sp, #64]
   25a84:	mov	x20, x0
   25a88:	mov	w24, w2
   25a8c:	ldr	x0, [x1, #16]
   25a90:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   25a94:	cmp	x0, x2
   25a98:	b.le	25aec <mpfr_rint@@Base+0x7c>
   25a9c:	stp	x21, x22, [sp, #32]
   25aa0:	stp	x27, x28, [sp, #80]
   25aa4:	ldr	w28, [x1, #8]
   25aa8:	str	w28, [x20, #8]
   25aac:	ldr	x21, [x1, #16]
   25ab0:	lsr	w27, w28, #31
   25ab4:	cmp	w24, #0x3
   25ab8:	b.eq	25b60 <mpfr_rint@@Base+0xf0>  // b.none
   25abc:	cmp	w28, #0x0
   25ac0:	cset	w27, gt
   25ac4:	cmp	w24, #0x2
   25ac8:	b.eq	25b60 <mpfr_rint@@Base+0xf0>  // b.none
   25acc:	cmp	w24, #0x1
   25ad0:	b.eq	26150 <mpfr_rint@@Base+0x6e0>  // b.none
   25ad4:	cmp	w24, #0x4
   25ad8:	b.eq	26160 <mpfr_rint@@Base+0x6f0>  // b.none
   25adc:	cmp	x21, #0x0
   25ae0:	b.le	25c68 <mpfr_rint@@Base+0x1f8>
   25ae4:	mov	w27, #0xffffffff            	// #-1
   25ae8:	b	25b68 <mpfr_rint@@Base+0xf8>
   25aec:	mov	x2, #0x2                   	// #2
   25af0:	movk	x2, #0x8000, lsl #48
   25af4:	cmp	x0, x2
   25af8:	b.eq	25b24 <mpfr_rint@@Base+0xb4>  // b.none
   25afc:	ldr	w0, [x1, #8]
   25b00:	str	w0, [x20, #8]
   25b04:	ldr	x1, [x1, #16]
   25b08:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   25b0c:	cmp	x1, x0
   25b10:	b.eq	25b54 <mpfr_rint@@Base+0xe4>  // b.none
   25b14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25b18:	str	x0, [x20, #16]
   25b1c:	mov	w25, #0x0                   	// #0
   25b20:	b	26100 <mpfr_rint@@Base+0x690>
   25b24:	str	x2, [x20, #16]
   25b28:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25b2c:	ldr	x1, [x0, #2576]
   25b30:	add	x0, x0, #0xa10
   25b34:	blr	x1
   25b38:	mrs	x1, tpidr_el0
   25b3c:	add	x0, x1, x0
   25b40:	ldr	w1, [x0]
   25b44:	orr	w1, w1, #0x4
   25b48:	str	w1, [x0]
   25b4c:	mov	w25, #0x0                   	// #0
   25b50:	b	26100 <mpfr_rint@@Base+0x690>
   25b54:	str	x0, [x20, #16]
   25b58:	mov	w25, #0x0                   	// #0
   25b5c:	b	26100 <mpfr_rint@@Base+0x690>
   25b60:	cmp	x21, #0x0
   25b64:	b.le	25c14 <mpfr_rint@@Base+0x1a4>
   25b68:	ldr	x22, [x1, #24]
   25b6c:	ldr	x23, [x20, #24]
   25b70:	ldr	x0, [x1]
   25b74:	add	x2, x0, #0x3e
   25b78:	subs	x0, x0, #0x1
   25b7c:	csel	x0, x2, x0, mi  // mi = first
   25b80:	asr	x2, x0, #6
   25b84:	add	x5, x2, #0x1
   25b88:	ldr	x19, [x20]
   25b8c:	add	x3, x19, #0x3e
   25b90:	subs	x0, x19, #0x1
   25b94:	csel	x3, x3, x0, mi  // mi = first
   25b98:	asr	x3, x3, #6
   25b9c:	add	x26, x3, #0x1
   25ba0:	neg	w19, w19
   25ba4:	and	w19, w19, #0x3f
   25ba8:	str	x21, [x20, #16]
   25bac:	add	x1, x21, #0x3e
   25bb0:	subs	x0, x21, #0x1
   25bb4:	csel	x1, x1, x0, mi  // mi = first
   25bb8:	asr	x0, x1, #6
   25bbc:	cmp	x5, x1, asr #6
   25bc0:	b.le	25ccc <mpfr_rint@@Base+0x25c>
   25bc4:	add	x1, x0, #0x1
   25bc8:	str	x1, [sp, #96]
   25bcc:	sub	x0, x2, x0
   25bd0:	negs	x4, x21
   25bd4:	and	x1, x21, #0x3f
   25bd8:	and	x4, x4, #0x3f
   25bdc:	csneg	x1, x1, x4, mi  // mi = first
   25be0:	str	w1, [sp, #104]
   25be4:	cbz	w1, 25bf8 <mpfr_rint@@Base+0x188>
   25be8:	ldr	x4, [x22, x0, lsl #3]
   25bec:	lsl	x1, x4, x1
   25bf0:	mov	w25, #0x2                   	// #2
   25bf4:	cbnz	x1, 25cd8 <mpfr_rint@@Base+0x268>
   25bf8:	cmp	x0, #0x0
   25bfc:	b.le	25cc4 <mpfr_rint@@Base+0x254>
   25c00:	sub	x0, x0, #0x1
   25c04:	ldr	x1, [x22, x0, lsl #3]
   25c08:	cbz	x1, 25bf8 <mpfr_rint@@Base+0x188>
   25c0c:	mov	w25, #0x2                   	// #2
   25c10:	b	25cd8 <mpfr_rint@@Base+0x268>
   25c14:	cbz	w27, 25c80 <mpfr_rint@@Base+0x210>
   25c18:	mov	w3, w24
   25c1c:	mov	x2, #0x0                   	// #0
   25c20:	sxtw	x1, w28
   25c24:	mov	x0, x20
   25c28:	bl	ba80 <mpfr_set_si_2exp@plt>
   25c2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25c30:	ldr	x1, [x0, #2576]
   25c34:	add	x0, x0, #0xa10
   25c38:	blr	x1
   25c3c:	mrs	x1, tpidr_el0
   25c40:	add	x0, x1, x0
   25c44:	ldr	w1, [x0]
   25c48:	orr	w1, w1, #0x8
   25c4c:	str	w1, [x0]
   25c50:	mov	w25, #0xfffffffe            	// #-2
   25c54:	cmp	w28, #0x0
   25c58:	cneg	w25, w25, gt
   25c5c:	ldp	x21, x22, [sp, #32]
   25c60:	ldp	x27, x28, [sp, #80]
   25c64:	b	26100 <mpfr_rint@@Base+0x690>
   25c68:	cbnz	x21, 25c80 <mpfr_rint@@Base+0x210>
   25c6c:	cmn	w24, #0x1
   25c70:	b.eq	25c18 <mpfr_rint@@Base+0x1a8>  // b.none
   25c74:	mov	x0, x1
   25c78:	bl	bf00 <mpfr_powerof2_raw@plt>
   25c7c:	cbz	w0, 25c18 <mpfr_rint@@Base+0x1a8>
   25c80:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25c84:	str	x0, [x20, #16]
   25c88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   25c8c:	ldr	x1, [x0, #2576]
   25c90:	add	x0, x0, #0xa10
   25c94:	blr	x1
   25c98:	mrs	x1, tpidr_el0
   25c9c:	add	x0, x1, x0
   25ca0:	ldr	w1, [x0]
   25ca4:	orr	w1, w1, #0x8
   25ca8:	str	w1, [x0]
   25cac:	mov	w25, #0x2                   	// #2
   25cb0:	cmp	w28, #0x0
   25cb4:	cneg	w25, w25, gt
   25cb8:	ldp	x21, x22, [sp, #32]
   25cbc:	ldp	x27, x28, [sp, #80]
   25cc0:	b	26100 <mpfr_rint@@Base+0x690>
   25cc4:	mov	w25, #0x0                   	// #0
   25cc8:	b	25cd8 <mpfr_rint@@Base+0x268>
   25ccc:	str	x5, [sp, #96]
   25cd0:	mov	w25, #0x0                   	// #0
   25cd4:	str	wzr, [sp, #104]
   25cd8:	ldr	x0, [sp, #96]
   25cdc:	cmp	x0, x26
   25ce0:	b.le	25e0c <mpfr_rint@@Base+0x39c>
   25ce4:	sub	x0, x2, x3
   25ce8:	str	x0, [sp, #96]
   25cec:	lsl	x0, x0, #3
   25cf0:	str	x0, [sp, #104]
   25cf4:	add	x1, x22, x0
   25cf8:	cmp	x1, x23
   25cfc:	b.eq	25d0c <mpfr_rint@@Base+0x29c>  // b.none
   25d00:	lsl	x2, x26, #3
   25d04:	mov	x0, x23
   25d08:	bl	ba10 <memcpy@plt>
   25d0c:	tbnz	w27, #31, 25d50 <mpfr_rint@@Base+0x2e0>
   25d10:	cbnz	w25, 2611c <mpfr_rint@@Base+0x6ac>
   25d14:	cbnz	w19, 26130 <mpfr_rint@@Base+0x6c0>
   25d18:	ldr	x0, [sp, #96]
   25d1c:	subs	x0, x0, #0x1
   25d20:	b.mi	26170 <mpfr_rint@@Base+0x700>  // b.first
   25d24:	ldr	x1, [x22, x0, lsl #3]
   25d28:	cbnz	x1, 26118 <mpfr_rint@@Base+0x6a8>
   25d2c:	sub	x0, x0, #0x1
   25d30:	cmn	x0, #0x1
   25d34:	b.ne	25d24 <mpfr_rint@@Base+0x2b4>  // b.any
   25d38:	mov	w25, #0x0                   	// #0
   25d3c:	cbnz	w19, 25fe4 <mpfr_rint@@Base+0x574>
   25d40:	mov	w25, w19
   25d44:	ldp	x21, x22, [sp, #32]
   25d48:	ldp	x27, x28, [sp, #80]
   25d4c:	b	26100 <mpfr_rint@@Base+0x690>
   25d50:	cbnz	w24, 25dcc <mpfr_rint@@Base+0x35c>
   25d54:	ldr	x1, [x23]
   25d58:	lsr	x0, x1, x19
   25d5c:	tbnz	w0, #0, 25dcc <mpfr_rint@@Base+0x35c>
   25d60:	cbz	w19, 25db8 <mpfr_rint@@Base+0x348>
   25d64:	mov	x0, #0xffffffffffffffff    	// #-1
   25d68:	lsl	x0, x0, x19
   25d6c:	bic	x0, x1, x0
   25d70:	sub	w2, w19, #0x1
   25d74:	mov	x1, #0x1                   	// #1
   25d78:	lsl	x1, x1, x2
   25d7c:	cmp	x0, x1
   25d80:	cset	w27, hi  // hi = pmore
   25d84:	b.ne	25d10 <mpfr_rint@@Base+0x2a0>  // b.any
   25d88:	ldr	x0, [sp, #96]
   25d8c:	sub	x0, x0, #0x1
   25d90:	cmp	w19, #0x0
   25d94:	cset	x1, eq  // eq = none
   25d98:	subs	x0, x0, x1
   25d9c:	b.mi	25d10 <mpfr_rint@@Base+0x2a0>  // b.first
   25da0:	ldr	x1, [x22, x0, lsl #3]
   25da4:	cbnz	x1, 25e04 <mpfr_rint@@Base+0x394>
   25da8:	sub	x0, x0, #0x1
   25dac:	cmn	x0, #0x1
   25db0:	b.ne	25da0 <mpfr_rint@@Base+0x330>  // b.any
   25db4:	b	25d10 <mpfr_rint@@Base+0x2a0>
   25db8:	ldr	x0, [sp, #104]
   25dbc:	add	x0, x22, x0
   25dc0:	ldur	x0, [x0, #-8]
   25dc4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25dc8:	b	25d7c <mpfr_rint@@Base+0x30c>
   25dcc:	cbz	w19, 25df0 <mpfr_rint@@Base+0x380>
   25dd0:	sub	w0, w19, #0x1
   25dd4:	ldr	x1, [x23]
   25dd8:	lsr	x0, x1, x0
   25ddc:	tbnz	w0, #0, 26124 <mpfr_rint@@Base+0x6b4>
   25de0:	mov	w27, #0x0                   	// #0
   25de4:	cbnz	w25, 2611c <mpfr_rint@@Base+0x6ac>
   25de8:	mov	w27, w25
   25dec:	b	26130 <mpfr_rint@@Base+0x6c0>
   25df0:	ldr	x0, [sp, #104]
   25df4:	add	x0, x22, x0
   25df8:	ldur	x27, [x0, #-8]
   25dfc:	lsr	x27, x27, #63
   25e00:	b	25d10 <mpfr_rint@@Base+0x2a0>
   25e04:	mov	w27, #0x1                   	// #1
   25e08:	b	25d10 <mpfr_rint@@Base+0x2a0>
   25e0c:	ldr	x2, [sp, #96]
   25e10:	sub	x1, x5, x2
   25e14:	str	x1, [sp, #120]
   25e18:	sub	x26, x26, x2
   25e1c:	cmp	x22, x23
   25e20:	b.eq	25e3c <mpfr_rint@@Base+0x3cc>  // b.none
   25e24:	add	x0, x23, x26, lsl #3
   25e28:	add	x1, x22, x1, lsl #3
   25e2c:	cmp	x0, x1
   25e30:	b.eq	25e3c <mpfr_rint@@Base+0x3cc>  // b.none
   25e34:	lsl	x2, x2, #3
   25e38:	bl	ba10 <memcpy@plt>
   25e3c:	lsl	x2, x26, #3
   25e40:	add	x4, x23, x2
   25e44:	str	x4, [sp, #112]
   25e48:	mov	w0, #0x40                  	// #64
   25e4c:	ldr	w1, [sp, #104]
   25e50:	sub	w0, w0, w1
   25e54:	cmp	w1, #0x0
   25e58:	csel	w3, w0, w1, ne  // ne = any
   25e5c:	str	w3, [sp, #104]
   25e60:	cmp	x26, #0x0
   25e64:	ccmp	w3, w19, #0x0, eq  // eq = none
   25e68:	b.ge	25eec <mpfr_rint@@Base+0x47c>  // b.tcont
   25e6c:	cbnz	w25, 25e8c <mpfr_rint@@Base+0x41c>
   25e70:	mov	x0, #0x1                   	// #1
   25e74:	lsl	x1, x0, x19
   25e78:	lsl	x0, x0, x3
   25e7c:	sub	x0, x1, x0
   25e80:	ldr	x1, [x4]
   25e84:	tst	x0, x1
   25e88:	cset	w25, ne  // ne = any
   25e8c:	tbz	w27, #31, 25fd0 <mpfr_rint@@Base+0x560>
   25e90:	cmp	w19, #0x0
   25e94:	cset	w0, eq  // eq = none
   25e98:	cbnz	w24, 25fb4 <mpfr_rint@@Base+0x544>
   25e9c:	ldr	x1, [sp, #112]
   25ea0:	ldr	x1, [x1]
   25ea4:	lsr	x3, x1, x19
   25ea8:	tbnz	w3, #0, 25f9c <mpfr_rint@@Base+0x52c>
   25eac:	cbz	w19, 25f38 <mpfr_rint@@Base+0x4c8>
   25eb0:	mov	x3, #0xffffffffffffffff    	// #-1
   25eb4:	lsl	x3, x3, x19
   25eb8:	bic	x1, x1, x3
   25ebc:	sub	w4, w19, #0x1
   25ec0:	mov	x3, #0x1                   	// #1
   25ec4:	lsl	x3, x3, x4
   25ec8:	cmp	x1, x3
   25ecc:	cset	w27, hi  // hi = pmore
   25ed0:	b.eq	25f6c <mpfr_rint@@Base+0x4fc>  // b.none
   25ed4:	mov	w1, #0x0                   	// #0
   25ed8:	mov	x0, x23
   25edc:	bl	c110 <memset@plt>
   25ee0:	ldr	x26, [sp, #96]
   25ee4:	ldr	x23, [sp, #112]
   25ee8:	b	25fe4 <mpfr_rint@@Base+0x574>
   25eec:	tbz	w27, #31, 26044 <mpfr_rint@@Base+0x5d4>
   25ef0:	ldr	w0, [sp, #104]
   25ef4:	cmp	w0, #0x0
   25ef8:	cset	w0, eq  // eq = none
   25efc:	ldr	x1, [sp, #120]
   25f00:	cmp	x1, #0x0
   25f04:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   25f08:	b.eq	25f2c <mpfr_rint@@Base+0x4bc>  // b.none
   25f0c:	mov	w1, #0x0                   	// #0
   25f10:	mov	x0, x23
   25f14:	bl	c110 <memset@plt>
   25f18:	ldr	x26, [sp, #96]
   25f1c:	ldr	x23, [sp, #112]
   25f20:	mov	w19, #0x0                   	// #0
   25f24:	mov	w27, #0x0                   	// #0
   25f28:	b	25ff8 <mpfr_rint@@Base+0x588>
   25f2c:	cbnz	w24, 25f98 <mpfr_rint@@Base+0x528>
   25f30:	ldr	w19, [sp, #104]
   25f34:	b	25e9c <mpfr_rint@@Base+0x42c>
   25f38:	ldr	x1, [sp, #120]
   25f3c:	add	x1, x22, x1, lsl #3
   25f40:	ldur	x3, [x1, #-8]
   25f44:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25f48:	cmp	x3, x1
   25f4c:	cset	w27, hi  // hi = pmore
   25f50:	b.eq	25f6c <mpfr_rint@@Base+0x4fc>  // b.none
   25f54:	mov	w1, #0x0                   	// #0
   25f58:	mov	x0, x23
   25f5c:	bl	c110 <memset@plt>
   25f60:	ldr	x26, [sp, #96]
   25f64:	ldr	x23, [sp, #112]
   25f68:	b	25ff8 <mpfr_rint@@Base+0x588>
   25f6c:	ldr	x1, [sp, #120]
   25f70:	sub	x1, x1, #0x1
   25f74:	and	x0, x0, #0xff
   25f78:	subs	x0, x1, x0
   25f7c:	b.mi	26048 <mpfr_rint@@Base+0x5d8>  // b.first
   25f80:	ldr	x1, [x22, x0, lsl #3]
   25f84:	cbnz	x1, 26064 <mpfr_rint@@Base+0x5f4>
   25f88:	sub	x0, x0, #0x1
   25f8c:	cmn	x0, #0x1
   25f90:	b.ne	25f80 <mpfr_rint@@Base+0x510>  // b.any
   25f94:	b	26048 <mpfr_rint@@Base+0x5d8>
   25f98:	ldr	w19, [sp, #104]
   25f9c:	cbnz	w19, 25fb4 <mpfr_rint@@Base+0x544>
   25fa0:	ldr	x0, [sp, #120]
   25fa4:	add	x22, x22, x0, lsl #3
   25fa8:	ldur	x27, [x22, #-8]
   25fac:	lsr	x27, x27, #63
   25fb0:	b	26048 <mpfr_rint@@Base+0x5d8>
   25fb4:	sub	w1, w19, #0x1
   25fb8:	ldr	x3, [sp, #112]
   25fbc:	ldr	x3, [x3]
   25fc0:	lsr	x1, x3, x1
   25fc4:	tbnz	w1, #0, 26180 <mpfr_rint@@Base+0x710>
   25fc8:	mov	w27, #0x0                   	// #0
   25fcc:	cbnz	w0, 25fa0 <mpfr_rint@@Base+0x530>
   25fd0:	mov	w1, #0x0                   	// #0
   25fd4:	mov	x0, x23
   25fd8:	bl	c110 <memset@plt>
   25fdc:	ldr	x26, [sp, #96]
   25fe0:	ldr	x23, [sp, #112]
   25fe4:	mov	x0, #0xffffffffffffffff    	// #-1
   25fe8:	lsl	x1, x0, x19
   25fec:	ldr	x0, [x23]
   25ff0:	and	x0, x0, x1
   25ff4:	str	x0, [x23]
   25ff8:	cbz	w25, 26188 <mpfr_rint@@Base+0x718>
   25ffc:	cbz	w27, 260cc <mpfr_rint@@Base+0x65c>
   26000:	mov	x0, #0x1                   	// #1
   26004:	lsl	x19, x0, x19
   26008:	ldr	x0, [x23]
   2600c:	add	x0, x19, x0
   26010:	str	x0, [x23]
   26014:	cmp	x19, x0
   26018:	b.ls	260cc <mpfr_rint@@Base+0x65c>  // b.plast
   2601c:	add	x1, x23, #0x8
   26020:	lsl	x26, x26, #3
   26024:	add	x2, x23, x26
   26028:	cmp	x2, x1
   2602c:	b.eq	26098 <mpfr_rint@@Base+0x628>  // b.none
   26030:	ldr	x0, [x1]
   26034:	add	x0, x0, #0x1
   26038:	str	x0, [x1], #8
   2603c:	cbz	x0, 26028 <mpfr_rint@@Base+0x5b8>
   26040:	b	260cc <mpfr_rint@@Base+0x65c>
   26044:	ldr	w19, [sp, #104]
   26048:	mov	w1, #0x0                   	// #0
   2604c:	mov	x0, x23
   26050:	bl	c110 <memset@plt>
   26054:	ldr	x26, [sp, #96]
   26058:	ldr	x23, [sp, #112]
   2605c:	cbz	w19, 25ff8 <mpfr_rint@@Base+0x588>
   26060:	b	25fe4 <mpfr_rint@@Base+0x574>
   26064:	mov	w27, #0x1                   	// #1
   26068:	b	26048 <mpfr_rint@@Base+0x5d8>
   2606c:	mov	w25, #0x1                   	// #1
   26070:	b	25fe4 <mpfr_rint@@Base+0x574>
   26074:	mov	w2, w28
   26078:	mov	w1, w24
   2607c:	mov	x0, x20
   26080:	bl	bf40 <mpfr_overflow@plt>
   26084:	tbz	w0, #31, 26194 <mpfr_rint@@Base+0x724>
   26088:	neg	w25, w25
   2608c:	ldp	x21, x22, [sp, #32]
   26090:	ldp	x27, x28, [sp, #80]
   26094:	b	26100 <mpfr_rint@@Base+0x690>
   26098:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2609c:	ldr	x1, [x0, #2544]
   260a0:	add	x0, x0, #0x9f0
   260a4:	blr	x1
   260a8:	mrs	x1, tpidr_el0
   260ac:	ldr	x0, [x1, x0]
   260b0:	cmp	x0, x21
   260b4:	b.eq	26074 <mpfr_rint@@Base+0x604>  // b.none
   260b8:	add	x21, x21, #0x1
   260bc:	str	x21, [x20, #16]
   260c0:	add	x26, x23, x26
   260c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   260c8:	stur	x0, [x26, #-8]
   260cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   260d0:	ldr	x1, [x0, #2576]
   260d4:	add	x0, x0, #0xa10
   260d8:	blr	x1
   260dc:	mrs	x1, tpidr_el0
   260e0:	add	x0, x1, x0
   260e4:	ldr	w1, [x0]
   260e8:	orr	w1, w1, #0x8
   260ec:	str	w1, [x0]
   260f0:	cmp	w27, w28, lsr #31
   260f4:	cneg	w25, w25, eq  // eq = none
   260f8:	ldp	x21, x22, [sp, #32]
   260fc:	ldp	x27, x28, [sp, #80]
   26100:	mov	w0, w25
   26104:	ldp	x19, x20, [sp, #16]
   26108:	ldp	x23, x24, [sp, #48]
   2610c:	ldp	x25, x26, [sp, #64]
   26110:	ldp	x29, x30, [sp], #128
   26114:	ret
   26118:	mov	w25, #0x1                   	// #1
   2611c:	cbz	w19, 25ffc <mpfr_rint@@Base+0x58c>
   26120:	b	25fe4 <mpfr_rint@@Base+0x574>
   26124:	mov	w27, #0x1                   	// #1
   26128:	cbnz	w25, 25fe4 <mpfr_rint@@Base+0x574>
   2612c:	mov	w27, #0x1                   	// #1
   26130:	ldr	x0, [x23]
   26134:	neg	w1, w19
   26138:	lsl	x0, x0, x1
   2613c:	cbnz	x0, 2606c <mpfr_rint@@Base+0x5fc>
   26140:	ldr	x0, [sp, #96]
   26144:	subs	x0, x0, #0x1
   26148:	b.pl	25d24 <mpfr_rint@@Base+0x2b4>  // b.nfrst
   2614c:	b	25d38 <mpfr_rint@@Base+0x2c8>
   26150:	cmp	x21, #0x0
   26154:	b.le	25c80 <mpfr_rint@@Base+0x210>
   26158:	mov	w27, #0x0                   	// #0
   2615c:	b	25b68 <mpfr_rint@@Base+0xf8>
   26160:	cmp	x21, #0x0
   26164:	b.le	25c18 <mpfr_rint@@Base+0x1a8>
   26168:	mov	w27, #0x1                   	// #1
   2616c:	b	25b68 <mpfr_rint@@Base+0xf8>
   26170:	mov	w25, w19
   26174:	ldp	x21, x22, [sp, #32]
   26178:	ldp	x27, x28, [sp, #80]
   2617c:	b	26100 <mpfr_rint@@Base+0x690>
   26180:	mov	w27, #0x1                   	// #1
   26184:	b	25fd0 <mpfr_rint@@Base+0x560>
   26188:	ldp	x21, x22, [sp, #32]
   2618c:	ldp	x27, x28, [sp, #80]
   26190:	b	26100 <mpfr_rint@@Base+0x690>
   26194:	ldp	x21, x22, [sp, #32]
   26198:	ldp	x27, x28, [sp, #80]
   2619c:	b	26100 <mpfr_rint@@Base+0x690>

00000000000261a0 <mpfr_roundeven@@Base>:
   261a0:	stp	x29, x30, [sp, #-16]!
   261a4:	mov	x29, sp
   261a8:	mov	w2, #0x0                   	// #0
   261ac:	bl	c300 <mpfr_rint@plt>
   261b0:	ldp	x29, x30, [sp], #16
   261b4:	ret

00000000000261b8 <mpfr_round@@Base>:
   261b8:	stp	x29, x30, [sp, #-16]!
   261bc:	mov	x29, sp
   261c0:	mov	w2, #0xffffffff            	// #-1
   261c4:	bl	c300 <mpfr_rint@plt>
   261c8:	ldp	x29, x30, [sp], #16
   261cc:	ret

00000000000261d0 <mpfr_trunc@@Base>:
   261d0:	stp	x29, x30, [sp, #-16]!
   261d4:	mov	x29, sp
   261d8:	mov	w2, #0x1                   	// #1
   261dc:	bl	c300 <mpfr_rint@plt>
   261e0:	ldp	x29, x30, [sp], #16
   261e4:	ret

00000000000261e8 <mpfr_ceil@@Base>:
   261e8:	stp	x29, x30, [sp, #-16]!
   261ec:	mov	x29, sp
   261f0:	mov	w2, #0x2                   	// #2
   261f4:	bl	c300 <mpfr_rint@plt>
   261f8:	ldp	x29, x30, [sp], #16
   261fc:	ret

0000000000026200 <mpfr_floor@@Base>:
   26200:	stp	x29, x30, [sp, #-16]!
   26204:	mov	x29, sp
   26208:	mov	w2, #0x3                   	// #3
   2620c:	bl	c300 <mpfr_rint@plt>
   26210:	ldp	x29, x30, [sp], #16
   26214:	ret

0000000000026218 <mpfr_rint_roundeven@@Base>:
   26218:	stp	x29, x30, [sp, #-96]!
   2621c:	mov	x29, sp
   26220:	stp	x19, x20, [sp, #16]
   26224:	stp	x21, x22, [sp, #32]
   26228:	mov	x21, x0
   2622c:	mov	x19, x1
   26230:	mov	w20, w2
   26234:	ldr	x2, [x1, #16]
   26238:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2623c:	cmp	x2, x1
   26240:	b.le	26250 <mpfr_rint_roundeven@@Base+0x38>
   26244:	mov	x0, x19
   26248:	bl	c160 <mpfr_integer_p@plt>
   2624c:	cbz	w0, 2627c <mpfr_rint_roundeven@@Base+0x64>
   26250:	ldr	w3, [x19, #8]
   26254:	mov	w2, w20
   26258:	mov	x1, x19
   2625c:	mov	x0, x21
   26260:	bl	c6a0 <mpfr_set4@plt>
   26264:	mov	w19, w0
   26268:	mov	w0, w19
   2626c:	ldp	x19, x20, [sp, #16]
   26270:	ldp	x21, x22, [sp, #32]
   26274:	ldp	x29, x30, [sp], #96
   26278:	ret
   2627c:	stp	x23, x24, [sp, #48]
   26280:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26284:	ldr	x1, [x0, #2576]
   26288:	add	x0, x0, #0xa10
   2628c:	blr	x1
   26290:	mrs	x1, tpidr_el0
   26294:	add	x23, x1, x0
   26298:	ldr	w24, [x1, x0]
   2629c:	add	x22, sp, #0x40
   262a0:	ldr	x1, [x19]
   262a4:	mov	x0, x22
   262a8:	bl	ca80 <mpfr_init2@plt>
   262ac:	str	wzr, [x23]
   262b0:	mov	x1, x19
   262b4:	mov	x0, x22
   262b8:	bl	c280 <mpfr_roundeven@plt>
   262bc:	ldr	w0, [x23]
   262c0:	str	w24, [x23]
   262c4:	tbnz	w0, #1, 262f0 <mpfr_rint_roundeven@@Base+0xd8>
   262c8:	ldr	w3, [sp, #72]
   262cc:	mov	w2, w20
   262d0:	add	x1, sp, #0x40
   262d4:	mov	x0, x21
   262d8:	bl	c6a0 <mpfr_set4@plt>
   262dc:	mov	w19, w0
   262e0:	add	x0, sp, #0x40
   262e4:	bl	c070 <mpfr_clear@plt>
   262e8:	ldp	x23, x24, [sp, #48]
   262ec:	b	26268 <mpfr_rint_roundeven@@Base+0x50>
   262f0:	ldr	w2, [x19, #8]
   262f4:	mov	w1, w20
   262f8:	mov	x0, x21
   262fc:	bl	bf40 <mpfr_overflow@plt>
   26300:	mov	w19, w0
   26304:	b	262e0 <mpfr_rint_roundeven@@Base+0xc8>

0000000000026308 <mpfr_rint_round@@Base>:
   26308:	stp	x29, x30, [sp, #-96]!
   2630c:	mov	x29, sp
   26310:	stp	x19, x20, [sp, #16]
   26314:	stp	x21, x22, [sp, #32]
   26318:	mov	x21, x0
   2631c:	mov	x19, x1
   26320:	mov	w20, w2
   26324:	ldr	x2, [x1, #16]
   26328:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2632c:	cmp	x2, x1
   26330:	b.le	26340 <mpfr_rint_round@@Base+0x38>
   26334:	mov	x0, x19
   26338:	bl	c160 <mpfr_integer_p@plt>
   2633c:	cbz	w0, 2636c <mpfr_rint_round@@Base+0x64>
   26340:	ldr	w3, [x19, #8]
   26344:	mov	w2, w20
   26348:	mov	x1, x19
   2634c:	mov	x0, x21
   26350:	bl	c6a0 <mpfr_set4@plt>
   26354:	mov	w19, w0
   26358:	mov	w0, w19
   2635c:	ldp	x19, x20, [sp, #16]
   26360:	ldp	x21, x22, [sp, #32]
   26364:	ldp	x29, x30, [sp], #96
   26368:	ret
   2636c:	stp	x23, x24, [sp, #48]
   26370:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26374:	ldr	x1, [x0, #2576]
   26378:	add	x0, x0, #0xa10
   2637c:	blr	x1
   26380:	mrs	x1, tpidr_el0
   26384:	add	x23, x1, x0
   26388:	ldr	w24, [x1, x0]
   2638c:	add	x22, sp, #0x40
   26390:	ldr	x1, [x19]
   26394:	mov	x0, x22
   26398:	bl	ca80 <mpfr_init2@plt>
   2639c:	str	wzr, [x23]
   263a0:	mov	x1, x19
   263a4:	mov	x0, x22
   263a8:	bl	c220 <mpfr_round@plt>
   263ac:	ldr	w0, [x23]
   263b0:	str	w24, [x23]
   263b4:	tbnz	w0, #1, 263e0 <mpfr_rint_round@@Base+0xd8>
   263b8:	ldr	w3, [sp, #72]
   263bc:	mov	w2, w20
   263c0:	add	x1, sp, #0x40
   263c4:	mov	x0, x21
   263c8:	bl	c6a0 <mpfr_set4@plt>
   263cc:	mov	w19, w0
   263d0:	add	x0, sp, #0x40
   263d4:	bl	c070 <mpfr_clear@plt>
   263d8:	ldp	x23, x24, [sp, #48]
   263dc:	b	26358 <mpfr_rint_round@@Base+0x50>
   263e0:	ldr	w2, [x19, #8]
   263e4:	mov	w1, w20
   263e8:	mov	x0, x21
   263ec:	bl	bf40 <mpfr_overflow@plt>
   263f0:	mov	w19, w0
   263f4:	b	263d0 <mpfr_rint_round@@Base+0xc8>

00000000000263f8 <mpfr_rint_trunc@@Base>:
   263f8:	stp	x29, x30, [sp, #-96]!
   263fc:	mov	x29, sp
   26400:	stp	x19, x20, [sp, #16]
   26404:	stp	x21, x22, [sp, #32]
   26408:	mov	x22, x0
   2640c:	mov	x19, x1
   26410:	mov	w20, w2
   26414:	ldr	x2, [x1, #16]
   26418:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2641c:	cmp	x2, x1
   26420:	b.le	26430 <mpfr_rint_trunc@@Base+0x38>
   26424:	mov	x0, x19
   26428:	bl	c160 <mpfr_integer_p@plt>
   2642c:	cbz	w0, 2645c <mpfr_rint_trunc@@Base+0x64>
   26430:	ldr	w3, [x19, #8]
   26434:	mov	w2, w20
   26438:	mov	x1, x19
   2643c:	mov	x0, x22
   26440:	bl	c6a0 <mpfr_set4@plt>
   26444:	mov	w19, w0
   26448:	mov	w0, w19
   2644c:	ldp	x19, x20, [sp, #16]
   26450:	ldp	x21, x22, [sp, #32]
   26454:	ldp	x29, x30, [sp], #96
   26458:	ret
   2645c:	stp	x23, x24, [sp, #48]
   26460:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26464:	ldr	x1, [x0, #2576]
   26468:	add	x0, x0, #0xa10
   2646c:	blr	x1
   26470:	mrs	x1, tpidr_el0
   26474:	add	x23, x1, x0
   26478:	ldr	w24, [x1, x0]
   2647c:	add	x21, sp, #0x40
   26480:	ldr	x1, [x19]
   26484:	mov	x0, x21
   26488:	bl	ca80 <mpfr_init2@plt>
   2648c:	mov	x1, x19
   26490:	mov	x0, x21
   26494:	bl	c3f0 <mpfr_trunc@plt>
   26498:	str	w24, [x23]
   2649c:	ldr	w3, [sp, #72]
   264a0:	mov	w2, w20
   264a4:	mov	x1, x21
   264a8:	mov	x0, x22
   264ac:	bl	c6a0 <mpfr_set4@plt>
   264b0:	mov	w19, w0
   264b4:	mov	x0, x21
   264b8:	bl	c070 <mpfr_clear@plt>
   264bc:	ldp	x23, x24, [sp, #48]
   264c0:	b	26448 <mpfr_rint_trunc@@Base+0x50>

00000000000264c4 <mpfr_rint_ceil@@Base>:
   264c4:	stp	x29, x30, [sp, #-96]!
   264c8:	mov	x29, sp
   264cc:	stp	x19, x20, [sp, #16]
   264d0:	stp	x21, x22, [sp, #32]
   264d4:	mov	x21, x0
   264d8:	mov	x19, x1
   264dc:	mov	w20, w2
   264e0:	ldr	x2, [x1, #16]
   264e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   264e8:	cmp	x2, x1
   264ec:	b.le	264fc <mpfr_rint_ceil@@Base+0x38>
   264f0:	mov	x0, x19
   264f4:	bl	c160 <mpfr_integer_p@plt>
   264f8:	cbz	w0, 26528 <mpfr_rint_ceil@@Base+0x64>
   264fc:	ldr	w3, [x19, #8]
   26500:	mov	w2, w20
   26504:	mov	x1, x19
   26508:	mov	x0, x21
   2650c:	bl	c6a0 <mpfr_set4@plt>
   26510:	mov	w19, w0
   26514:	mov	w0, w19
   26518:	ldp	x19, x20, [sp, #16]
   2651c:	ldp	x21, x22, [sp, #32]
   26520:	ldp	x29, x30, [sp], #96
   26524:	ret
   26528:	stp	x23, x24, [sp, #48]
   2652c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26530:	ldr	x1, [x0, #2576]
   26534:	add	x0, x0, #0xa10
   26538:	blr	x1
   2653c:	mrs	x1, tpidr_el0
   26540:	add	x23, x1, x0
   26544:	ldr	w24, [x1, x0]
   26548:	add	x22, sp, #0x40
   2654c:	ldr	x1, [x19]
   26550:	mov	x0, x22
   26554:	bl	ca80 <mpfr_init2@plt>
   26558:	str	wzr, [x23]
   2655c:	mov	x1, x19
   26560:	mov	x0, x22
   26564:	bl	c980 <mpfr_ceil@plt>
   26568:	ldr	w0, [x23]
   2656c:	str	w24, [x23]
   26570:	tbnz	w0, #1, 2659c <mpfr_rint_ceil@@Base+0xd8>
   26574:	ldr	w3, [sp, #72]
   26578:	mov	w2, w20
   2657c:	add	x1, sp, #0x40
   26580:	mov	x0, x21
   26584:	bl	c6a0 <mpfr_set4@plt>
   26588:	mov	w19, w0
   2658c:	add	x0, sp, #0x40
   26590:	bl	c070 <mpfr_clear@plt>
   26594:	ldp	x23, x24, [sp, #48]
   26598:	b	26514 <mpfr_rint_ceil@@Base+0x50>
   2659c:	mov	w2, #0x1                   	// #1
   265a0:	mov	w1, w20
   265a4:	mov	x0, x21
   265a8:	bl	bf40 <mpfr_overflow@plt>
   265ac:	mov	w19, w0
   265b0:	b	2658c <mpfr_rint_ceil@@Base+0xc8>

00000000000265b4 <mpfr_rint_floor@@Base>:
   265b4:	stp	x29, x30, [sp, #-96]!
   265b8:	mov	x29, sp
   265bc:	stp	x19, x20, [sp, #16]
   265c0:	stp	x21, x22, [sp, #32]
   265c4:	mov	x21, x0
   265c8:	mov	x19, x1
   265cc:	mov	w20, w2
   265d0:	ldr	x2, [x1, #16]
   265d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   265d8:	cmp	x2, x1
   265dc:	b.le	265ec <mpfr_rint_floor@@Base+0x38>
   265e0:	mov	x0, x19
   265e4:	bl	c160 <mpfr_integer_p@plt>
   265e8:	cbz	w0, 26618 <mpfr_rint_floor@@Base+0x64>
   265ec:	ldr	w3, [x19, #8]
   265f0:	mov	w2, w20
   265f4:	mov	x1, x19
   265f8:	mov	x0, x21
   265fc:	bl	c6a0 <mpfr_set4@plt>
   26600:	mov	w19, w0
   26604:	mov	w0, w19
   26608:	ldp	x19, x20, [sp, #16]
   2660c:	ldp	x21, x22, [sp, #32]
   26610:	ldp	x29, x30, [sp], #96
   26614:	ret
   26618:	stp	x23, x24, [sp, #48]
   2661c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26620:	ldr	x1, [x0, #2576]
   26624:	add	x0, x0, #0xa10
   26628:	blr	x1
   2662c:	mrs	x1, tpidr_el0
   26630:	add	x23, x1, x0
   26634:	ldr	w24, [x1, x0]
   26638:	add	x22, sp, #0x40
   2663c:	ldr	x1, [x19]
   26640:	mov	x0, x22
   26644:	bl	ca80 <mpfr_init2@plt>
   26648:	str	wzr, [x23]
   2664c:	mov	x1, x19
   26650:	mov	x0, x22
   26654:	bl	c210 <mpfr_floor@plt>
   26658:	ldr	w0, [x23]
   2665c:	str	w24, [x23]
   26660:	tbnz	w0, #1, 2668c <mpfr_rint_floor@@Base+0xd8>
   26664:	ldr	w3, [sp, #72]
   26668:	mov	w2, w20
   2666c:	add	x1, sp, #0x40
   26670:	mov	x0, x21
   26674:	bl	c6a0 <mpfr_set4@plt>
   26678:	mov	w19, w0
   2667c:	add	x0, sp, #0x40
   26680:	bl	c070 <mpfr_clear@plt>
   26684:	ldp	x23, x24, [sp, #48]
   26688:	b	26604 <mpfr_rint_floor@@Base+0x50>
   2668c:	mov	w2, #0xffffffff            	// #-1
   26690:	mov	w1, w20
   26694:	mov	x0, x21
   26698:	bl	bf40 <mpfr_overflow@plt>
   2669c:	mov	w19, w0
   266a0:	b	2667c <mpfr_rint_floor@@Base+0xc8>

00000000000266a4 <mpfr_ui_div@@Base>:
   266a4:	stp	x29, x30, [sp, #-128]!
   266a8:	mov	x29, sp
   266ac:	stp	x19, x20, [sp, #16]
   266b0:	stp	x21, x22, [sp, #32]
   266b4:	mov	x19, x0
   266b8:	mov	w21, w3
   266bc:	ldr	x0, [x2, #16]
   266c0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   266c4:	cmp	x0, x3
   266c8:	b.le	267c8 <mpfr_ui_div@@Base+0x124>
   266cc:	cbz	x1, 268c0 <mpfr_ui_div@@Base+0x21c>
   266d0:	stp	x23, x24, [sp, #48]
   266d4:	stp	x25, x26, [sp, #64]
   266d8:	mov	x4, #0x40                  	// #64
   266dc:	str	x4, [sp, #96]
   266e0:	add	x0, sp, #0x58
   266e4:	str	x0, [sp, #120]
   266e8:	mov	w0, #0x1                   	// #1
   266ec:	str	w0, [sp, #104]
   266f0:	clz	x3, x1
   266f4:	lsl	x1, x1, x3
   266f8:	str	x1, [sp, #88]
   266fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26700:	ldr	x1, [x0, #2576]
   26704:	add	x0, x0, #0xa10
   26708:	blr	x1
   2670c:	mrs	x1, tpidr_el0
   26710:	add	x26, x1, x0
   26714:	ldr	w20, [x1, x0]
   26718:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2671c:	ldr	x5, [x0, #2512]
   26720:	add	x0, x0, #0x9d0
   26724:	blr	x5
   26728:	add	x25, x1, x0
   2672c:	ldr	x22, [x1, x0]
   26730:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26734:	ldr	x5, [x0, #2544]
   26738:	add	x0, x0, #0x9f0
   2673c:	blr	x5
   26740:	add	x24, x1, x0
   26744:	ldr	x23, [x1, x0]
   26748:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2674c:	str	x0, [x25]
   26750:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   26754:	str	x0, [x24]
   26758:	sub	w4, w4, w3
   2675c:	sxtw	x4, w4
   26760:	str	x4, [sp, #112]
   26764:	mov	w3, w21
   26768:	add	x1, sp, #0x60
   2676c:	mov	x0, x19
   26770:	bl	c620 <mpfr_div@plt>
   26774:	mov	w1, w0
   26778:	ldr	w0, [x26]
   2677c:	orr	w20, w20, w0
   26780:	str	w20, [x26]
   26784:	str	x22, [x25]
   26788:	str	x23, [x24]
   2678c:	ldr	x0, [x19, #16]
   26790:	cmp	x23, x0
   26794:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   26798:	b.gt	268a4 <mpfr_ui_div@@Base+0x200>
   2679c:	cbz	w1, 268d8 <mpfr_ui_div@@Base+0x234>
   267a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   267a4:	ldr	x2, [x0, #2576]
   267a8:	add	x0, x0, #0xa10
   267ac:	blr	x2
   267b0:	orr	w20, w20, #0x8
   267b4:	mrs	x2, tpidr_el0
   267b8:	str	w20, [x2, x0]
   267bc:	ldp	x23, x24, [sp, #48]
   267c0:	ldp	x25, x26, [sp, #64]
   267c4:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   267c8:	mov	x3, #0x2                   	// #2
   267cc:	movk	x3, #0x8000, lsl #48
   267d0:	cmp	x0, x3
   267d4:	b.eq	26824 <mpfr_ui_div@@Base+0x180>  // b.none
   267d8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   267dc:	cmp	x0, x3
   267e0:	b.eq	26854 <mpfr_ui_div@@Base+0x1b0>  // b.none
   267e4:	cbz	x1, 2686c <mpfr_ui_div@@Base+0x1c8>
   267e8:	ldr	w0, [x2, #8]
   267ec:	str	w0, [x19, #8]
   267f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   267f4:	str	x0, [x19, #16]
   267f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   267fc:	ldr	x1, [x0, #2576]
   26800:	add	x0, x0, #0xa10
   26804:	blr	x1
   26808:	mrs	x1, tpidr_el0
   2680c:	add	x0, x1, x0
   26810:	ldr	w1, [x0]
   26814:	orr	w1, w1, #0x20
   26818:	str	w1, [x0]
   2681c:	mov	w1, #0x0                   	// #0
   26820:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   26824:	str	x3, [x19, #16]
   26828:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2682c:	ldr	x1, [x0, #2576]
   26830:	add	x0, x0, #0xa10
   26834:	blr	x1
   26838:	mrs	x1, tpidr_el0
   2683c:	add	x0, x1, x0
   26840:	ldr	w1, [x0]
   26844:	orr	w1, w1, #0x4
   26848:	str	w1, [x0]
   2684c:	mov	w1, #0x0                   	// #0
   26850:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   26854:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   26858:	str	x0, [x19, #16]
   2685c:	ldr	w0, [x2, #8]
   26860:	str	w0, [x19, #8]
   26864:	mov	w1, #0x0                   	// #0
   26868:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   2686c:	mov	x0, #0x2                   	// #2
   26870:	movk	x0, #0x8000, lsl #48
   26874:	str	x0, [x19, #16]
   26878:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2687c:	ldr	x1, [x0, #2576]
   26880:	add	x0, x0, #0xa10
   26884:	blr	x1
   26888:	mrs	x1, tpidr_el0
   2688c:	add	x0, x1, x0
   26890:	ldr	w1, [x0]
   26894:	orr	w1, w1, #0x4
   26898:	str	w1, [x0]
   2689c:	mov	w1, #0x0                   	// #0
   268a0:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   268a4:	mov	w2, w21
   268a8:	mov	x0, x19
   268ac:	bl	cb30 <mpfr_check_range@plt>
   268b0:	mov	w1, w0
   268b4:	ldp	x23, x24, [sp, #48]
   268b8:	ldp	x25, x26, [sp, #64]
   268bc:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   268c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   268c4:	str	x0, [x19, #16]
   268c8:	ldr	w0, [x2, #8]
   268cc:	str	w0, [x19, #8]
   268d0:	mov	w1, #0x0                   	// #0
   268d4:	b	268e0 <mpfr_ui_div@@Base+0x23c>
   268d8:	ldp	x23, x24, [sp, #48]
   268dc:	ldp	x25, x26, [sp, #64]
   268e0:	mov	w0, w1
   268e4:	ldp	x19, x20, [sp, #16]
   268e8:	ldp	x21, x22, [sp, #32]
   268ec:	ldp	x29, x30, [sp], #128
   268f0:	ret

00000000000268f4 <mpfr_ui_sub@@Base>:
   268f4:	stp	x29, x30, [sp, #-128]!
   268f8:	mov	x29, sp
   268fc:	stp	x19, x20, [sp, #16]
   26900:	stp	x21, x22, [sp, #32]
   26904:	mov	x19, x0
   26908:	mov	x6, x2
   2690c:	mov	w21, w3
   26910:	cbz	x1, 26a20 <mpfr_ui_sub@@Base+0x12c>
   26914:	ldr	x0, [x2, #16]
   26918:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2691c:	cmp	x0, x2
   26920:	b.le	26a34 <mpfr_ui_sub@@Base+0x140>
   26924:	stp	x23, x24, [sp, #48]
   26928:	stp	x25, x26, [sp, #64]
   2692c:	mov	x5, #0x40                  	// #64
   26930:	str	x5, [sp, #96]
   26934:	add	x0, sp, #0x58
   26938:	str	x0, [sp, #120]
   2693c:	mov	w0, #0x1                   	// #1
   26940:	str	w0, [sp, #104]
   26944:	clz	x2, x1
   26948:	lsl	x4, x1, x2
   2694c:	str	x4, [sp, #88]
   26950:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26954:	ldr	x1, [x0, #2576]
   26958:	add	x0, x0, #0xa10
   2695c:	blr	x1
   26960:	mrs	x3, tpidr_el0
   26964:	add	x26, x3, x0
   26968:	ldr	w20, [x3, x0]
   2696c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26970:	ldr	x1, [x0, #2512]
   26974:	add	x0, x0, #0x9d0
   26978:	blr	x1
   2697c:	add	x25, x3, x0
   26980:	ldr	x23, [x3, x0]
   26984:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26988:	ldr	x1, [x0, #2544]
   2698c:	add	x0, x0, #0x9f0
   26990:	blr	x1
   26994:	add	x24, x3, x0
   26998:	ldr	x22, [x3, x0]
   2699c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   269a0:	str	x0, [x25]
   269a4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   269a8:	str	x0, [x24]
   269ac:	sub	w5, w5, w2
   269b0:	sxtw	x5, w5
   269b4:	str	x5, [sp, #112]
   269b8:	mov	w3, w21
   269bc:	mov	x2, x6
   269c0:	add	x1, sp, #0x60
   269c4:	mov	x0, x19
   269c8:	bl	bb70 <mpfr_sub@plt>
   269cc:	mov	w1, w0
   269d0:	ldr	w0, [x26]
   269d4:	orr	w20, w20, w0
   269d8:	str	w20, [x26]
   269dc:	str	x23, [x25]
   269e0:	str	x22, [x24]
   269e4:	ldr	x0, [x19, #16]
   269e8:	cmp	x23, x0
   269ec:	ccmp	x22, x0, #0x1, le
   269f0:	b.lt	26aac <mpfr_ui_sub@@Base+0x1b8>  // b.tstop
   269f4:	cbz	w1, 26ac8 <mpfr_ui_sub@@Base+0x1d4>
   269f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   269fc:	ldr	x2, [x0, #2576]
   26a00:	add	x0, x0, #0xa10
   26a04:	blr	x2
   26a08:	orr	w20, w20, #0x8
   26a0c:	mrs	x2, tpidr_el0
   26a10:	str	w20, [x2, x0]
   26a14:	ldp	x23, x24, [sp, #48]
   26a18:	ldp	x25, x26, [sp, #64]
   26a1c:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26a20:	mov	w2, w3
   26a24:	mov	x1, x6
   26a28:	bl	bd70 <mpfr_neg@plt>
   26a2c:	mov	w1, w0
   26a30:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26a34:	mov	x2, #0x2                   	// #2
   26a38:	movk	x2, #0x8000, lsl #48
   26a3c:	cmp	x0, x2
   26a40:	b.eq	26a64 <mpfr_ui_sub@@Base+0x170>  // b.none
   26a44:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   26a48:	cmp	x0, x2
   26a4c:	b.eq	26a94 <mpfr_ui_sub@@Base+0x1a0>  // b.none
   26a50:	mov	x2, #0x0                   	// #0
   26a54:	mov	x0, x19
   26a58:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   26a5c:	mov	w1, w0
   26a60:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26a64:	str	x2, [x19, #16]
   26a68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26a6c:	ldr	x1, [x0, #2576]
   26a70:	add	x0, x0, #0xa10
   26a74:	blr	x1
   26a78:	mrs	x1, tpidr_el0
   26a7c:	add	x0, x1, x0
   26a80:	ldr	w1, [x0]
   26a84:	orr	w1, w1, #0x4
   26a88:	str	w1, [x0]
   26a8c:	mov	w1, #0x0                   	// #0
   26a90:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26a94:	str	x2, [x19, #16]
   26a98:	ldr	w0, [x6, #8]
   26a9c:	neg	w0, w0
   26aa0:	str	w0, [x19, #8]
   26aa4:	mov	w1, #0x0                   	// #0
   26aa8:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26aac:	mov	w2, w21
   26ab0:	mov	x0, x19
   26ab4:	bl	cb30 <mpfr_check_range@plt>
   26ab8:	mov	w1, w0
   26abc:	ldp	x23, x24, [sp, #48]
   26ac0:	ldp	x25, x26, [sp, #64]
   26ac4:	b	26ad0 <mpfr_ui_sub@@Base+0x1dc>
   26ac8:	ldp	x23, x24, [sp, #48]
   26acc:	ldp	x25, x26, [sp, #64]
   26ad0:	mov	w0, w1
   26ad4:	ldp	x19, x20, [sp, #16]
   26ad8:	ldp	x21, x22, [sp, #32]
   26adc:	ldp	x29, x30, [sp], #128
   26ae0:	ret

0000000000026ae4 <mpfr_urandom@@Base>:
   26ae4:	stp	x29, x30, [sp, #-112]!
   26ae8:	mov	x29, sp
   26aec:	stp	x19, x20, [sp, #16]
   26af0:	stp	x21, x22, [sp, #32]
   26af4:	stp	x23, x24, [sp, #48]
   26af8:	stp	x25, x26, [sp, #64]
   26afc:	stp	x27, x28, [sp, #80]
   26b00:	mov	x23, x0
   26b04:	mov	x21, x1
   26b08:	mov	w25, w2
   26b0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26b10:	ldr	x1, [x0, #2576]
   26b14:	add	x0, x0, #0xa10
   26b18:	blr	x1
   26b1c:	mrs	x1, tpidr_el0
   26b20:	ldr	w26, [x1, x0]
   26b24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26b28:	ldr	x2, [x0, #2512]
   26b2c:	add	x0, x0, #0x9d0
   26b30:	blr	x2
   26b34:	add	x2, x1, x0
   26b38:	ldr	x27, [x1, x0]
   26b3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26b40:	ldr	x3, [x0, #2544]
   26b44:	add	x0, x0, #0x9f0
   26b48:	blr	x3
   26b4c:	ldr	x28, [x1, x0]
   26b50:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   26b54:	str	x3, [x2]
   26b58:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   26b5c:	str	x2, [x1, x0]
   26b60:	ldr	x20, [x23, #24]
   26b64:	ldr	x22, [x23]
   26b68:	str	xzr, [x23, #16]
   26b6c:	mov	w0, #0x1                   	// #1
   26b70:	str	w0, [x23, #8]
   26b74:	mov	x19, #0x0                   	// #0
   26b78:	mov	x24, #0x8                   	// #8
   26b7c:	mov	x2, x24
   26b80:	mov	x1, x21
   26b84:	mov	x0, x20
   26b88:	bl	c810 <mpfr_rand_raw@plt>
   26b8c:	ldr	x0, [x20]
   26b90:	cbz	x0, 26d00 <mpfr_urandom@@Base+0x21c>
   26b94:	clz	x0, x0
   26b98:	sub	w0, w0, #0x38
   26b9c:	sub	x0, x19, w0, sxtw
   26ba0:	mov	x1, #0xc000000000000000    	// #-4611686018427387904
   26ba4:	cmp	x19, x1
   26ba8:	csel	x19, x0, x19, ge  // ge = tcont
   26bac:	cmp	x22, #0x1
   26bb0:	b.eq	26cd0 <mpfr_urandom@@Base+0x1ec>  // b.none
   26bb4:	sub	x2, x22, #0x1
   26bb8:	mov	x1, x21
   26bbc:	mov	x0, x20
   26bc0:	bl	c810 <mpfr_rand_raw@plt>
   26bc4:	ldr	x0, [x23]
   26bc8:	add	x24, x0, #0x3e
   26bcc:	subs	x0, x0, #0x1
   26bd0:	csel	x24, x24, x0, mi  // mi = first
   26bd4:	asr	x24, x24, #6
   26bd8:	add	x24, x24, #0x1
   26bdc:	lsl	x3, x24, #6
   26be0:	subs	x3, x3, x22
   26be4:	b.eq	26bf8 <mpfr_urandom@@Base+0x114>  // b.none
   26be8:	mov	x2, x24
   26bec:	mov	x1, x20
   26bf0:	mov	x0, x20
   26bf4:	bl	bcc0 <__gmpn_lshift@plt>
   26bf8:	lsl	x24, x24, #3
   26bfc:	sub	x24, x24, #0x8
   26c00:	ldr	x0, [x20, x24]
   26c04:	orr	x0, x0, #0x8000000000000000
   26c08:	str	x0, [x20, x24]
   26c0c:	mov	x2, #0x1                   	// #1
   26c10:	mov	x1, x21
   26c14:	add	x0, sp, #0x68
   26c18:	bl	c810 <mpfr_rand_raw@plt>
   26c1c:	ldr	x1, [sp, #104]
   26c20:	sub	w0, w25, #0x2
   26c24:	tst	w0, #0xfffffffd
   26c28:	b.eq	26cdc <mpfr_urandom@@Base+0x1f8>  // b.none
   26c2c:	cmp	x1, #0x0
   26c30:	mov	w1, #0xffffffff            	// #-1
   26c34:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   26c38:	b.eq	26cdc <mpfr_urandom@@Base+0x1f8>  // b.none
   26c3c:	ldr	x0, [x23, #16]
   26c40:	add	x19, x19, x0
   26c44:	str	x19, [x23, #16]
   26c48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26c4c:	ldr	x2, [x0, #2576]
   26c50:	add	x0, x0, #0xa10
   26c54:	blr	x2
   26c58:	mrs	x2, tpidr_el0
   26c5c:	str	w26, [x2, x0]
   26c60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26c64:	ldr	x3, [x0, #2512]
   26c68:	add	x0, x0, #0x9d0
   26c6c:	blr	x3
   26c70:	str	x27, [x2, x0]
   26c74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26c78:	ldr	x3, [x0, #2544]
   26c7c:	add	x0, x0, #0x9f0
   26c80:	blr	x3
   26c84:	str	x28, [x2, x0]
   26c88:	cmp	x28, x19
   26c8c:	ccmp	x27, x19, #0x0, ge  // ge = tcont
   26c90:	b.gt	26cec <mpfr_urandom@@Base+0x208>
   26c94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26c98:	ldr	x2, [x0, #2576]
   26c9c:	add	x0, x0, #0xa10
   26ca0:	blr	x2
   26ca4:	orr	w26, w26, #0x8
   26ca8:	mrs	x2, tpidr_el0
   26cac:	str	w26, [x2, x0]
   26cb0:	mov	w0, w1
   26cb4:	ldp	x19, x20, [sp, #16]
   26cb8:	ldp	x21, x22, [sp, #32]
   26cbc:	ldp	x23, x24, [sp, #48]
   26cc0:	ldp	x25, x26, [sp, #64]
   26cc4:	ldp	x27, x28, [sp, #80]
   26cc8:	ldp	x29, x30, [sp], #112
   26ccc:	ret
   26cd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26cd4:	str	x0, [x20]
   26cd8:	b	26c0c <mpfr_urandom@@Base+0x128>
   26cdc:	mov	x0, x23
   26ce0:	bl	c120 <mpfr_nextabove@plt>
   26ce4:	mov	w1, #0x1                   	// #1
   26ce8:	b	26c3c <mpfr_urandom@@Base+0x158>
   26cec:	mov	w2, w25
   26cf0:	mov	x0, x23
   26cf4:	bl	cb30 <mpfr_check_range@plt>
   26cf8:	mov	w1, w0
   26cfc:	b	26cb0 <mpfr_urandom@@Base+0x1cc>
   26d00:	sub	x0, x19, #0x8
   26d04:	mov	x1, #0xc000000000000000    	// #-4611686018427387904
   26d08:	cmp	x19, x1
   26d0c:	csel	x19, x0, x19, ge  // ge = tcont
   26d10:	b	26b7c <mpfr_urandom@@Base+0x98>

0000000000026d14 <mpfr_rand_raw@@Base>:
   26d14:	stp	x29, x30, [sp, #-64]!
   26d18:	mov	x29, sp
   26d1c:	stp	x19, x20, [sp, #16]
   26d20:	stp	x21, x22, [sp, #32]
   26d24:	cmp	x2, #0x0
   26d28:	b.le	26d98 <mpfr_rand_raw@@Base+0x84>
   26d2c:	mov	x20, x0
   26d30:	mov	x21, x1
   26d34:	mov	x19, x2
   26d38:	add	x22, sp, #0x30
   26d3c:	mov	x0, x22
   26d40:	bl	bf90 <mpfr_mpz_init@plt>
   26d44:	mov	x2, x19
   26d48:	mov	x1, x21
   26d4c:	mov	x0, x22
   26d50:	bl	cd00 <__gmpz_urandomb@plt>
   26d54:	ldr	x1, [sp, #56]
   26d58:	cmp	x1, x20
   26d5c:	b.eq	26d80 <mpfr_rand_raw@@Base+0x6c>  // b.none
   26d60:	add	x2, x19, #0x3e
   26d64:	subs	x19, x19, #0x1
   26d68:	csel	x2, x2, x19, mi  // mi = first
   26d6c:	asr	x2, x2, #6
   26d70:	add	x2, x2, #0x1
   26d74:	lsl	x2, x2, #3
   26d78:	mov	x0, x20
   26d7c:	bl	ba10 <memcpy@plt>
   26d80:	add	x0, sp, #0x30
   26d84:	bl	c170 <mpfr_mpz_clear@plt>
   26d88:	ldp	x19, x20, [sp, #16]
   26d8c:	ldp	x21, x22, [sp, #32]
   26d90:	ldp	x29, x30, [sp], #64
   26d94:	ret
   26d98:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   26d9c:	add	x2, x2, #0xb30
   26da0:	mov	w1, #0x26                  	// #38
   26da4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   26da8:	add	x0, x0, #0xb40
   26dac:	bl	cb40 <mpfr_assert_fail@plt>

0000000000026db0 <mpfr_urandomb@@Base>:
   26db0:	stp	x29, x30, [sp, #-64]!
   26db4:	mov	x29, sp
   26db8:	stp	x19, x20, [sp, #16]
   26dbc:	stp	x21, x22, [sp, #32]
   26dc0:	str	x23, [sp, #48]
   26dc4:	mov	x21, x0
   26dc8:	ldr	x22, [x0, #24]
   26dcc:	ldr	x2, [x0]
   26dd0:	add	x3, x2, #0x3e
   26dd4:	subs	x20, x2, #0x1
   26dd8:	csel	x3, x3, x20, mi  // mi = first
   26ddc:	asr	x20, x3, #6
   26de0:	add	x19, x20, #0x1
   26de4:	mov	w0, #0x1                   	// #1
   26de8:	str	w0, [x21, #8]
   26dec:	lsl	w23, w19, #6
   26df0:	sub	w23, w23, w2
   26df4:	mov	x0, x22
   26df8:	bl	c810 <mpfr_rand_raw@plt>
   26dfc:	cbz	w23, 26e14 <mpfr_urandomb@@Base+0x64>
   26e00:	mov	w3, w23
   26e04:	mov	x2, x19
   26e08:	mov	x1, x22
   26e0c:	mov	x0, x22
   26e10:	bl	bcc0 <__gmpn_lshift@plt>
   26e14:	mov	x1, #0x0                   	// #0
   26e18:	add	x3, x20, #0x1
   26e1c:	sub	x5, x22, #0x8
   26e20:	mov	x0, x19
   26e24:	sub	x4, x3, x19
   26e28:	mov	x20, x4
   26e2c:	ldr	x2, [x5, x19, lsl #3]
   26e30:	cbnz	x2, 26ed8 <mpfr_urandomb@@Base+0x128>
   26e34:	sub	x1, x1, #0x40
   26e38:	subs	x19, x19, #0x1
   26e3c:	b.ne	26e20 <mpfr_urandomb@@Base+0x70>  // b.any
   26e40:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   26e44:	str	x0, [x21, #16]
   26e48:	mov	w2, #0x0                   	// #0
   26e4c:	b	26e7c <mpfr_urandomb@@Base+0xcc>
   26e50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26e54:	ldr	x5, [x0, #2544]
   26e58:	add	x0, x0, #0x9f0
   26e5c:	blr	x5
   26e60:	mrs	x5, tpidr_el0
   26e64:	ldr	x0, [x5, x0]
   26e68:	cmp	x0, x1
   26e6c:	b.lt	26f10 <mpfr_urandomb@@Base+0x160>  // b.tstop
   26e70:	str	x1, [x21, #16]
   26e74:	cbnz	x3, 26e94 <mpfr_urandomb@@Base+0xe4>
   26e78:	cbnz	x20, 26eb0 <mpfr_urandomb@@Base+0x100>
   26e7c:	mov	w0, w2
   26e80:	ldp	x19, x20, [sp, #16]
   26e84:	ldp	x21, x22, [sp, #32]
   26e88:	ldr	x23, [sp, #48]
   26e8c:	ldp	x29, x30, [sp], #64
   26e90:	ret
   26e94:	mov	x2, x19
   26e98:	mov	x1, x22
   26e9c:	add	x0, x22, x4, lsl #3
   26ea0:	bl	bcc0 <__gmpn_lshift@plt>
   26ea4:	mov	w2, #0x0                   	// #0
   26ea8:	cbz	x20, 26e7c <mpfr_urandomb@@Base+0xcc>
   26eac:	b	26ec0 <mpfr_urandomb@@Base+0x110>
   26eb0:	mov	x2, x19
   26eb4:	mov	x1, x22
   26eb8:	add	x0, x22, x4, lsl #3
   26ebc:	bl	bae0 <__gmpn_copyd@plt>
   26ec0:	lsl	x2, x20, #3
   26ec4:	mov	w1, #0x0                   	// #0
   26ec8:	mov	x0, x22
   26ecc:	bl	c110 <memset@plt>
   26ed0:	mov	w2, #0x0                   	// #0
   26ed4:	b	26e7c <mpfr_urandomb@@Base+0xcc>
   26ed8:	cbz	x19, 26e40 <mpfr_urandomb@@Base+0x90>
   26edc:	add	x0, x22, x0, lsl #3
   26ee0:	ldur	x3, [x0, #-8]
   26ee4:	clz	x3, x3
   26ee8:	mov	w2, w3
   26eec:	sub	x1, x1, x3
   26ef0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26ef4:	ldr	x5, [x0, #2512]
   26ef8:	add	x0, x0, #0x9d0
   26efc:	blr	x5
   26f00:	mrs	x5, tpidr_el0
   26f04:	ldr	x0, [x5, x0]
   26f08:	cmp	x0, x1
   26f0c:	b.le	26e50 <mpfr_urandomb@@Base+0xa0>
   26f10:	mov	x0, #0x2                   	// #2
   26f14:	movk	x0, #0x8000, lsl #48
   26f18:	str	x0, [x21, #16]
   26f1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   26f20:	ldr	x1, [x0, #2576]
   26f24:	add	x0, x0, #0xa10
   26f28:	blr	x1
   26f2c:	mrs	x1, tpidr_el0
   26f30:	add	x0, x1, x0
   26f34:	ldr	w1, [x0]
   26f38:	orr	w1, w1, #0x4
   26f3c:	str	w1, [x0]
   26f40:	mov	w2, #0x1                   	// #1
   26f44:	b	26e7c <mpfr_urandomb@@Base+0xcc>

0000000000026f48 <mpfr_get_z_2exp@@Base>:
   26f48:	stp	x29, x30, [sp, #-48]!
   26f4c:	mov	x29, sp
   26f50:	stp	x19, x20, [sp, #16]
   26f54:	str	x21, [sp, #32]
   26f58:	mov	x21, x0
   26f5c:	mov	x20, x1
   26f60:	ldr	x0, [x1, #16]
   26f64:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   26f68:	cmp	x0, x1
   26f6c:	b.le	26ffc <mpfr_get_z_2exp@@Base+0xb4>
   26f70:	ldr	x0, [x20]
   26f74:	add	x19, x0, #0x3e
   26f78:	subs	x0, x0, #0x1
   26f7c:	csel	x19, x19, x0, mi  // mi = first
   26f80:	asr	x19, x19, #6
   26f84:	add	x19, x19, #0x1
   26f88:	mov	x0, #0x7fffffff            	// #2147483647
   26f8c:	cmp	x19, x0
   26f90:	b.gt	27058 <mpfr_get_z_2exp@@Base+0x110>
   26f94:	lsl	x1, x19, #6
   26f98:	mov	x0, x21
   26f9c:	bl	c440 <__gmpz_realloc2@plt>
   26fa0:	ldr	x3, [x20]
   26fa4:	neg	w3, w3
   26fa8:	ands	w3, w3, #0x3f
   26fac:	b.eq	27070 <mpfr_get_z_2exp@@Base+0x128>  // b.none
   26fb0:	mov	x2, x19
   26fb4:	ldr	x1, [x20, #24]
   26fb8:	ldr	x0, [x21, #8]
   26fbc:	bl	bce0 <__gmpn_rshift@plt>
   26fc0:	ldr	w0, [x20, #8]
   26fc4:	cmp	w0, #0x0
   26fc8:	cneg	w19, w19, lt  // lt = tstop
   26fcc:	str	w19, [x21, #4]
   26fd0:	ldr	x0, [x20, #16]
   26fd4:	ldr	x2, [x20]
   26fd8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   26fdc:	add	x1, x0, x1
   26fe0:	sub	x0, x0, x2
   26fe4:	cmp	x1, x2
   26fe8:	b.cc	2708c <mpfr_get_z_2exp@@Base+0x144>  // b.lo, b.ul, b.last
   26fec:	ldp	x19, x20, [sp, #16]
   26ff0:	ldr	x21, [sp, #32]
   26ff4:	ldp	x29, x30, [sp], #48
   26ff8:	ret
   26ffc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27000:	cmp	x0, x1
   27004:	b.ne	27030 <mpfr_get_z_2exp@@Base+0xe8>  // b.any
   27008:	mov	x1, #0x0                   	// #0
   2700c:	mov	x0, x21
   27010:	bl	bcb0 <__gmpz_set_ui@plt>
   27014:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27018:	ldr	x1, [x0, #2512]
   2701c:	add	x0, x0, #0x9d0
   27020:	blr	x1
   27024:	mrs	x1, tpidr_el0
   27028:	ldr	x0, [x1, x0]
   2702c:	b	26fec <mpfr_get_z_2exp@@Base+0xa4>
   27030:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27034:	ldr	x1, [x0, #2576]
   27038:	add	x0, x0, #0xa10
   2703c:	blr	x1
   27040:	mrs	x1, tpidr_el0
   27044:	add	x0, x1, x0
   27048:	ldr	w1, [x0]
   2704c:	orr	w1, w1, #0x10
   27050:	str	w1, [x0]
   27054:	b	27008 <mpfr_get_z_2exp@@Base+0xc0>
   27058:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2705c:	add	x2, x2, #0xb50
   27060:	mov	w1, #0x3c                  	// #60
   27064:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   27068:	add	x0, x0, #0xb68
   2706c:	bl	cb40 <mpfr_assert_fail@plt>
   27070:	ldr	x0, [x21, #8]
   27074:	ldr	x1, [x20, #24]
   27078:	cmp	x0, x1
   2707c:	b.eq	26fc0 <mpfr_get_z_2exp@@Base+0x78>  // b.none
   27080:	lsl	x2, x19, #3
   27084:	bl	ba10 <memcpy@plt>
   27088:	b	26fc0 <mpfr_get_z_2exp@@Base+0x78>
   2708c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27090:	ldr	x1, [x0, #2576]
   27094:	add	x0, x0, #0xa10
   27098:	blr	x1
   2709c:	mrs	x1, tpidr_el0
   270a0:	add	x0, x1, x0
   270a4:	ldr	w1, [x0]
   270a8:	orr	w1, w1, #0x10
   270ac:	str	w1, [x0]
   270b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   270b4:	b	26fec <mpfr_get_z_2exp@@Base+0xa4>

00000000000270b8 <mpfr_swap@@Base>:
   270b8:	ldr	x3, [x0]
   270bc:	ldr	x2, [x1]
   270c0:	str	x3, [x1]
   270c4:	str	x2, [x0]
   270c8:	ldr	w3, [x0, #8]
   270cc:	ldr	w2, [x1, #8]
   270d0:	str	w3, [x1, #8]
   270d4:	str	w2, [x0, #8]
   270d8:	ldr	x3, [x0, #16]
   270dc:	ldr	x2, [x1, #16]
   270e0:	str	x3, [x1, #16]
   270e4:	str	x2, [x0, #16]
   270e8:	ldr	x3, [x0, #24]
   270ec:	ldr	x2, [x1, #24]
   270f0:	str	x3, [x1, #24]
   270f4:	str	x2, [x0, #24]
   270f8:	ret

00000000000270fc <mpfr_fac_ui@@Base>:
   270fc:	stp	x29, x30, [sp, #-144]!
   27100:	mov	x29, sp
   27104:	stp	x19, x20, [sp, #16]
   27108:	stp	x25, x26, [sp, #64]
   2710c:	mov	x26, x0
   27110:	str	w2, [sp, #96]
   27114:	cmp	x1, #0x1
   27118:	b.ls	271c4 <mpfr_fac_ui@@Base+0xc8>  // b.plast
   2711c:	stp	x21, x22, [sp, #32]
   27120:	stp	x23, x24, [sp, #48]
   27124:	stp	x27, x28, [sp, #80]
   27128:	mov	x24, x1
   2712c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27130:	ldr	x1, [x0, #2576]
   27134:	add	x0, x0, #0xa10
   27138:	blr	x1
   2713c:	mrs	x1, tpidr_el0
   27140:	ldr	w0, [x1, x0]
   27144:	str	w0, [sp, #100]
   27148:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2714c:	ldr	x2, [x0, #2512]
   27150:	add	x0, x0, #0x9d0
   27154:	blr	x2
   27158:	add	x2, x1, x0
   2715c:	ldr	x27, [x1, x0]
   27160:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27164:	ldr	x3, [x0, #2544]
   27168:	add	x0, x0, #0x9f0
   2716c:	blr	x3
   27170:	ldr	x28, [x1, x0]
   27174:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   27178:	str	x3, [x2]
   2717c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   27180:	str	x2, [x1, x0]
   27184:	ldr	x1, [x26]
   27188:	str	x1, [sp, #104]
   2718c:	sub	x0, x24, #0x1
   27190:	clz	x0, x0
   27194:	mov	w23, #0x40                  	// #64
   27198:	sub	w23, w23, w0
   2719c:	lsl	w23, w23, #1
   271a0:	add	x23, x1, w23, sxtw
   271a4:	add	x23, x23, #0x7
   271a8:	mov	x1, x23
   271ac:	add	x0, sp, #0x70
   271b0:	bl	ca80 <mpfr_init2@plt>
   271b4:	mov	x25, #0x40                  	// #64
   271b8:	mov	w22, #0x1                   	// #1
   271bc:	add	x21, sp, #0x70
   271c0:	b	273c4 <mpfr_fac_ui@@Base+0x2c8>
   271c4:	mov	w3, w2
   271c8:	mov	x2, #0x0                   	// #0
   271cc:	mov	x1, #0x1                   	// #1
   271d0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   271d4:	mov	w20, w0
   271d8:	b	272c0 <mpfr_fac_ui@@Base+0x1c4>
   271dc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   271e0:	add	x2, x2, #0xb78
   271e4:	mov	w1, #0x4d                  	// #77
   271e8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   271ec:	add	x0, x0, #0xb88
   271f0:	bl	cb40 <mpfr_assert_fail@plt>
   271f4:	mov	x0, #0x0                   	// #0
   271f8:	b	27428 <mpfr_fac_ui@@Base+0x32c>
   271fc:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   27200:	add	x2, x2, #0x230
   27204:	mov	w1, #0x64                  	// #100
   27208:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2720c:	add	x0, x0, #0xb88
   27210:	bl	cb40 <mpfr_assert_fail@plt>
   27214:	ldr	w2, [sp, #96]
   27218:	mov	w1, w20
   2721c:	mov	x0, x26
   27220:	bl	cb30 <mpfr_check_range@plt>
   27224:	mov	w20, w0
   27228:	ldp	x21, x22, [sp, #32]
   2722c:	ldp	x23, x24, [sp, #48]
   27230:	ldp	x27, x28, [sp, #80]
   27234:	b	272c0 <mpfr_fac_ui@@Base+0x1c4>
   27238:	add	x0, sp, #0x70
   2723c:	bl	c070 <mpfr_clear@plt>
   27240:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27244:	ldr	x1, [x0, #2576]
   27248:	add	x0, x0, #0xa10
   2724c:	blr	x1
   27250:	mrs	x1, tpidr_el0
   27254:	ldr	w2, [sp, #100]
   27258:	str	w2, [x1, x0]
   2725c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27260:	ldr	x2, [x0, #2512]
   27264:	add	x0, x0, #0x9d0
   27268:	blr	x2
   2726c:	str	x27, [x1, x0]
   27270:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27274:	ldr	x2, [x0, #2544]
   27278:	add	x0, x0, #0x9f0
   2727c:	blr	x2
   27280:	str	x28, [x1, x0]
   27284:	ldr	x0, [x26, #16]
   27288:	cmp	x28, x0
   2728c:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   27290:	b.gt	27214 <mpfr_fac_ui@@Base+0x118>
   27294:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27298:	ldr	x1, [x0, #2576]
   2729c:	add	x0, x0, #0xa10
   272a0:	blr	x1
   272a4:	ldr	w1, [sp, #100]
   272a8:	orr	w2, w1, #0x8
   272ac:	mrs	x1, tpidr_el0
   272b0:	str	w2, [x1, x0]
   272b4:	ldp	x21, x22, [sp, #32]
   272b8:	ldp	x23, x24, [sp, #48]
   272bc:	ldp	x27, x28, [sp, #80]
   272c0:	mov	w0, w20
   272c4:	ldp	x19, x20, [sp, #16]
   272c8:	ldp	x25, x26, [sp, #64]
   272cc:	ldp	x29, x30, [sp], #144
   272d0:	ret
   272d4:	add	x19, sp, #0x70
   272d8:	ldr	w3, [sp, #120]
   272dc:	ldr	w2, [sp, #96]
   272e0:	mov	x1, x19
   272e4:	mov	x0, x26
   272e8:	bl	c6a0 <mpfr_set4@plt>
   272ec:	mov	w20, w0
   272f0:	mov	x0, x19
   272f4:	bl	c070 <mpfr_clear@plt>
   272f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   272fc:	ldr	x1, [x0, #2576]
   27300:	add	x0, x0, #0xa10
   27304:	blr	x1
   27308:	mrs	x1, tpidr_el0
   2730c:	ldr	w2, [sp, #100]
   27310:	str	w2, [x1, x0]
   27314:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27318:	ldr	x2, [x0, #2512]
   2731c:	add	x0, x0, #0x9d0
   27320:	blr	x2
   27324:	str	x27, [x1, x0]
   27328:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2732c:	ldr	x2, [x0, #2544]
   27330:	add	x0, x0, #0x9f0
   27334:	blr	x2
   27338:	str	x28, [x1, x0]
   2733c:	ldr	x0, [x26, #16]
   27340:	cmp	x28, x0
   27344:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   27348:	b.gt	27214 <mpfr_fac_ui@@Base+0x118>
   2734c:	cbnz	w20, 27294 <mpfr_fac_ui@@Base+0x198>
   27350:	ldp	x21, x22, [sp, #32]
   27354:	ldp	x23, x24, [sp, #48]
   27358:	ldp	x27, x28, [sp, #80]
   2735c:	b	272c0 <mpfr_fac_ui@@Base+0x1c4>
   27360:	ldr	w3, [sp, #120]
   27364:	ldr	w2, [sp, #96]
   27368:	mov	x1, x21
   2736c:	mov	x0, x26
   27370:	bl	c6a0 <mpfr_set4@plt>
   27374:	cmp	w20, #0x0
   27378:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   2737c:	b.le	27238 <mpfr_fac_ui@@Base+0x13c>
   27380:	cmp	w20, #0x0
   27384:	ccmp	w0, #0x0, #0x1, gt
   27388:	b.ge	27238 <mpfr_fac_ui@@Base+0x13c>  // b.tcont
   2738c:	cmp	w22, #0x1
   27390:	cset	w22, eq  // eq = none
   27394:	add	w22, w22, #0x1
   27398:	mov	x0, #0xfffffffffffffeff    	// #-257
   2739c:	movk	x0, #0x7fff, lsl #48
   273a0:	sub	x0, x0, x23
   273a4:	cmp	x0, x25
   273a8:	b.lt	271fc <mpfr_fac_ui@@Base+0x100>  // b.tstop
   273ac:	add	x23, x23, x25
   273b0:	add	x25, x23, x23, lsr #63
   273b4:	asr	x25, x25, #1
   273b8:	mov	x1, x23
   273bc:	mov	x0, x21
   273c0:	bl	bed0 <mpfr_set_prec@plt>
   273c4:	mov	w3, w22
   273c8:	mov	x2, #0x0                   	// #0
   273cc:	mov	x1, #0x1                   	// #1
   273d0:	mov	x0, x21
   273d4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   273d8:	mov	w20, w0
   273dc:	mov	x19, #0x2                   	// #2
   273e0:	mov	w3, w22
   273e4:	mov	x2, x19
   273e8:	mov	x1, x21
   273ec:	mov	x0, x21
   273f0:	bl	ba50 <mpfr_mul_ui@plt>
   273f4:	cmp	w20, #0x0
   273f8:	csel	w20, w20, w0, ne  // ne = any
   273fc:	add	x19, x19, #0x1
   27400:	cmp	x24, x19
   27404:	b.cs	273e0 <mpfr_fac_ui@@Base+0x2e4>  // b.hs, b.nlast
   27408:	sub	x2, x23, #0x1
   2740c:	cmp	x23, #0x1
   27410:	b.eq	271f4 <mpfr_fac_ui@@Base+0xf8>  // b.none
   27414:	b.le	271dc <mpfr_fac_ui@@Base+0xe0>
   27418:	clz	x0, x2
   2741c:	mov	w1, #0x40                  	// #64
   27420:	sub	w0, w1, w0
   27424:	sxtw	x0, w0
   27428:	cbz	w20, 272d4 <mpfr_fac_ui@@Base+0x1d8>
   2742c:	ldr	x1, [sp, #128]
   27430:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   27434:	cmp	x1, x3
   27438:	b.le	27398 <mpfr_fac_ui@@Base+0x29c>
   2743c:	ldr	w1, [sp, #96]
   27440:	cmp	w1, #0x0
   27444:	ldr	x1, [sp, #104]
   27448:	cinc	x3, x1, eq  // eq = none
   2744c:	ldr	x4, [sp, #112]
   27450:	add	x1, x4, #0x3e
   27454:	subs	x4, x4, #0x1
   27458:	csel	x1, x1, x4, mi  // mi = first
   2745c:	asr	x1, x1, #6
   27460:	sub	x2, x2, x0
   27464:	add	x1, x1, #0x1
   27468:	ldr	x0, [sp, #136]
   2746c:	bl	c370 <mpfr_round_p@plt>
   27470:	cbnz	w0, 27360 <mpfr_fac_ui@@Base+0x264>
   27474:	b	27398 <mpfr_fac_ui@@Base+0x29c>

0000000000027478 <mpfr_cosh@@Base>:
   27478:	stp	x29, x30, [sp, #-352]!
   2747c:	mov	x29, sp
   27480:	stp	x19, x20, [sp, #16]
   27484:	stp	x21, x22, [sp, #32]
   27488:	stp	x23, x24, [sp, #48]
   2748c:	mov	x20, x0
   27490:	mov	w23, w2
   27494:	ldr	x2, [x1, #16]
   27498:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2749c:	cmp	x2, x0
   274a0:	b.le	27728 <mpfr_cosh@@Base+0x2b0>
   274a4:	stp	x25, x26, [sp, #64]
   274a8:	stp	x27, x28, [sp, #80]
   274ac:	mov	x19, x1
   274b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   274b4:	ldr	x1, [x0, #2576]
   274b8:	add	x0, x0, #0xa10
   274bc:	blr	x1
   274c0:	mrs	x1, tpidr_el0
   274c4:	ldr	w25, [x1, x0]
   274c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   274cc:	ldr	x3, [x0, #2512]
   274d0:	add	x0, x0, #0x9d0
   274d4:	blr	x3
   274d8:	add	x3, x1, x0
   274dc:	ldr	x26, [x1, x0]
   274e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   274e4:	ldr	x4, [x0, #2544]
   274e8:	add	x0, x0, #0x9f0
   274ec:	blr	x4
   274f0:	ldr	x27, [x1, x0]
   274f4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   274f8:	str	x4, [x3]
   274fc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   27500:	str	x3, [x1, x0]
   27504:	neg	x2, x2, lsl #1
   27508:	cmp	x2, #0x0
   2750c:	b.le	27520 <mpfr_cosh@@Base+0xa8>
   27510:	ldr	x0, [x20]
   27514:	add	x0, x0, #0x1
   27518:	cmp	x2, x0
   2751c:	b.hi	277a4 <mpfr_cosh@@Base+0x32c>  // b.pmore
   27520:	ldr	x0, [x19]
   27524:	str	x0, [sp, #320]
   27528:	ldr	x0, [x19, #24]
   2752c:	str	x0, [sp, #344]
   27530:	mov	w0, #0x1                   	// #1
   27534:	str	w0, [sp, #328]
   27538:	ldr	x0, [x19, #16]
   2753c:	str	x0, [sp, #336]
   27540:	ldr	x22, [x20]
   27544:	add	x19, x22, #0x3
   27548:	cmp	x22, #0x1
   2754c:	b.eq	27964 <mpfr_cosh@@Base+0x4ec>  // b.none
   27550:	b.le	2783c <mpfr_cosh@@Base+0x3c4>
   27554:	sub	x0, x22, #0x1
   27558:	clz	x1, x0
   2755c:	mov	w0, #0x40                  	// #64
   27560:	sub	w0, w0, w1
   27564:	add	x19, x19, w0, sxtw
   27568:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2756c:	cmp	x19, x0
   27570:	b.ge	27854 <mpfr_cosh@@Base+0x3dc>  // b.tcont
   27574:	add	x21, x19, #0x3e
   27578:	subs	x0, x19, #0x1
   2757c:	csel	x21, x21, x0, mi  // mi = first
   27580:	asr	x21, x21, #6
   27584:	add	x21, x21, #0x1
   27588:	lsl	x0, x21, #1
   2758c:	cmp	x0, #0x10
   27590:	b.gt	27858 <mpfr_cosh@@Base+0x3e0>
   27594:	str	xzr, [sp, #176]
   27598:	add	x0, sp, #0xc0
   2759c:	str	x0, [sp, #184]
   275a0:	str	x19, [sp, #112]
   275a4:	ldr	x0, [sp, #184]
   275a8:	str	x0, [sp, #136]
   275ac:	mov	w1, #0x1                   	// #1
   275b0:	str	w1, [sp, #120]
   275b4:	str	x19, [sp, #144]
   275b8:	add	x21, x0, x21, lsl #3
   275bc:	str	x21, [sp, #168]
   275c0:	str	w1, [sp, #152]
   275c4:	mov	x0, #0x40                  	// #64
   275c8:	str	x0, [sp, #104]
   275cc:	add	x0, sp, #0x140
   275d0:	str	x0, [sp, #96]
   275d4:	add	x24, sp, #0x90
   275d8:	add	x21, sp, #0x70
   275dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   275e0:	ldr	x1, [x0, #2576]
   275e4:	add	x0, x0, #0xa10
   275e8:	blr	x1
   275ec:	mrs	x1, tpidr_el0
   275f0:	add	x28, x1, x0
   275f4:	str	wzr, [x1, x0]
   275f8:	mov	w2, #0x3                   	// #3
   275fc:	ldr	x1, [sp, #96]
   27600:	mov	x0, x24
   27604:	bl	c750 <mpfr_exp@plt>
   27608:	ldr	w0, [x28]
   2760c:	tbnz	w0, #1, 2786c <mpfr_cosh@@Base+0x3f4>
   27610:	mov	w3, #0x2                   	// #2
   27614:	mov	x2, x24
   27618:	mov	x1, #0x1                   	// #1
   2761c:	mov	x0, x21
   27620:	bl	c2f0 <mpfr_ui_div@plt>
   27624:	mov	w3, #0x2                   	// #2
   27628:	mov	x2, x21
   2762c:	mov	x1, x24
   27630:	mov	x0, x21
   27634:	bl	c1a0 <mpfr_add@plt>
   27638:	mov	w3, #0x0                   	// #0
   2763c:	mov	x2, #0x1                   	// #1
   27640:	mov	x1, x21
   27644:	mov	x0, x21
   27648:	bl	c8f0 <mpfr_div_2ui@plt>
   2764c:	sub	x2, x19, #0x3
   27650:	ldr	x1, [sp, #128]
   27654:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   27658:	cmp	x1, x0
   2765c:	b.le	27888 <mpfr_cosh@@Base+0x410>
   27660:	cmp	w23, #0x0
   27664:	cinc	x3, x22, eq  // eq = none
   27668:	ldr	x0, [sp, #112]
   2766c:	add	x1, x0, #0x3e
   27670:	subs	x0, x0, #0x1
   27674:	csel	x1, x1, x0, mi  // mi = first
   27678:	asr	x1, x1, #6
   2767c:	add	x1, x1, #0x1
   27680:	ldr	x0, [sp, #136]
   27684:	bl	c370 <mpfr_round_p@plt>
   27688:	cbz	w0, 27888 <mpfr_cosh@@Base+0x410>
   2768c:	ldr	w3, [sp, #120]
   27690:	mov	w2, w23
   27694:	add	x1, sp, #0x70
   27698:	mov	x0, x20
   2769c:	bl	c6a0 <mpfr_set4@plt>
   276a0:	mov	w21, w0
   276a4:	ldr	x1, [sp, #176]
   276a8:	cbz	x1, 276b4 <mpfr_cosh@@Base+0x23c>
   276ac:	ldr	x0, [sp, #184]
   276b0:	bl	cc20 <mpfr_free_func@plt>
   276b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   276b8:	ldr	x1, [x0, #2576]
   276bc:	add	x0, x0, #0xa10
   276c0:	blr	x1
   276c4:	mrs	x1, tpidr_el0
   276c8:	str	w25, [x1, x0]
   276cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   276d0:	ldr	x2, [x0, #2512]
   276d4:	add	x0, x0, #0x9d0
   276d8:	blr	x2
   276dc:	str	x26, [x1, x0]
   276e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   276e4:	ldr	x2, [x0, #2544]
   276e8:	add	x0, x0, #0x9f0
   276ec:	blr	x2
   276f0:	str	x27, [x1, x0]
   276f4:	ldr	x0, [x20, #16]
   276f8:	cmp	x27, x0
   276fc:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   27700:	b.gt	27944 <mpfr_cosh@@Base+0x4cc>
   27704:	cbnz	w21, 27814 <mpfr_cosh@@Base+0x39c>
   27708:	ldp	x25, x26, [sp, #64]
   2770c:	ldp	x27, x28, [sp, #80]
   27710:	mov	w0, w21
   27714:	ldp	x19, x20, [sp, #16]
   27718:	ldp	x21, x22, [sp, #32]
   2771c:	ldp	x23, x24, [sp, #48]
   27720:	ldp	x29, x30, [sp], #352
   27724:	ret
   27728:	mov	x0, #0x2                   	// #2
   2772c:	movk	x0, #0x8000, lsl #48
   27730:	cmp	x2, x0
   27734:	b.eq	27760 <mpfr_cosh@@Base+0x2e8>  // b.none
   27738:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2773c:	cmp	x2, x0
   27740:	b.eq	27790 <mpfr_cosh@@Base+0x318>  // b.none
   27744:	mov	w3, w23
   27748:	mov	x2, #0x0                   	// #0
   2774c:	mov	x1, #0x1                   	// #1
   27750:	mov	x0, x20
   27754:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   27758:	mov	w21, w0
   2775c:	b	27710 <mpfr_cosh@@Base+0x298>
   27760:	str	x0, [x20, #16]
   27764:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27768:	ldr	x1, [x0, #2576]
   2776c:	add	x0, x0, #0xa10
   27770:	blr	x1
   27774:	mrs	x1, tpidr_el0
   27778:	add	x0, x1, x0
   2777c:	ldr	w1, [x0]
   27780:	orr	w1, w1, #0x4
   27784:	str	w1, [x0]
   27788:	mov	w21, #0x0                   	// #0
   2778c:	b	27710 <mpfr_cosh@@Base+0x298>
   27790:	str	x0, [x20, #16]
   27794:	mov	w0, #0x1                   	// #1
   27798:	str	w0, [x20, #8]
   2779c:	mov	w21, #0x0                   	// #0
   277a0:	b	27710 <mpfr_cosh@@Base+0x298>
   277a4:	mov	w4, w23
   277a8:	mov	w3, #0x1                   	// #1
   277ac:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   277b0:	ldr	x1, [x1, #3928]
   277b4:	mov	x0, x20
   277b8:	bl	c540 <mpfr_round_near_x@plt>
   277bc:	mov	w21, w0
   277c0:	cbz	w0, 27520 <mpfr_cosh@@Base+0xa8>
   277c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   277c8:	ldr	x1, [x0, #2576]
   277cc:	add	x0, x0, #0xa10
   277d0:	blr	x1
   277d4:	mrs	x1, tpidr_el0
   277d8:	str	w25, [x1, x0]
   277dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   277e0:	ldr	x2, [x0, #2512]
   277e4:	add	x0, x0, #0x9d0
   277e8:	blr	x2
   277ec:	str	x26, [x1, x0]
   277f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   277f4:	ldr	x2, [x0, #2544]
   277f8:	add	x0, x0, #0x9f0
   277fc:	blr	x2
   27800:	str	x27, [x1, x0]
   27804:	ldr	x0, [x20, #16]
   27808:	cmp	x27, x0
   2780c:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   27810:	b.gt	27944 <mpfr_cosh@@Base+0x4cc>
   27814:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27818:	ldr	x1, [x0, #2576]
   2781c:	add	x0, x0, #0xa10
   27820:	blr	x1
   27824:	orr	w25, w25, #0x8
   27828:	mrs	x1, tpidr_el0
   2782c:	str	w25, [x1, x0]
   27830:	ldp	x25, x26, [sp, #64]
   27834:	ldp	x27, x28, [sp, #80]
   27838:	b	27710 <mpfr_cosh@@Base+0x298>
   2783c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   27840:	add	x2, x2, #0x218
   27844:	mov	w1, #0x53                  	// #83
   27848:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2784c:	add	x0, x0, #0xb98
   27850:	bl	cb40 <mpfr_assert_fail@plt>
   27854:	bl	c8e0 <mpfr_abort_prec_max@plt>
   27858:	lsl	x0, x21, #4
   2785c:	str	x0, [sp, #176]
   27860:	bl	ccf0 <mpfr_allocate_func@plt>
   27864:	str	x0, [sp, #184]
   27868:	b	275a0 <mpfr_cosh@@Base+0x128>
   2786c:	mov	w2, #0x1                   	// #1
   27870:	mov	w1, w23
   27874:	mov	x0, x20
   27878:	bl	bf40 <mpfr_overflow@plt>
   2787c:	mov	w21, w0
   27880:	orr	w25, w25, #0x2
   27884:	b	276a4 <mpfr_cosh@@Base+0x22c>
   27888:	mov	x0, #0xfffffffffffffeff    	// #-257
   2788c:	movk	x0, #0x7fff, lsl #48
   27890:	sub	x0, x0, x19
   27894:	ldr	x1, [sp, #104]
   27898:	cmp	x0, x1
   2789c:	b.lt	27914 <mpfr_cosh@@Base+0x49c>  // b.tstop
   278a0:	ldr	x0, [sp, #104]
   278a4:	add	x19, x19, x0
   278a8:	add	x0, x19, x19, lsr #63
   278ac:	asr	x0, x0, #1
   278b0:	str	x0, [sp, #104]
   278b4:	ldr	x1, [sp, #176]
   278b8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   278bc:	cmp	x19, x0
   278c0:	b.ge	2792c <mpfr_cosh@@Base+0x4b4>  // b.tcont
   278c4:	add	x28, x19, #0x3e
   278c8:	subs	x0, x19, #0x1
   278cc:	csel	x28, x28, x0, mi  // mi = first
   278d0:	asr	x28, x28, #6
   278d4:	add	x28, x28, #0x1
   278d8:	lsl	x0, x28, #4
   278dc:	str	x0, [sp, #176]
   278e0:	cbnz	x1, 27930 <mpfr_cosh@@Base+0x4b8>
   278e4:	bl	ccf0 <mpfr_allocate_func@plt>
   278e8:	str	x0, [sp, #184]
   278ec:	str	x19, [sp, #112]
   278f0:	ldr	x1, [sp, #184]
   278f4:	str	x1, [sp, #136]
   278f8:	mov	w0, #0x1                   	// #1
   278fc:	str	w0, [sp, #120]
   27900:	str	x19, [sp, #144]
   27904:	add	x28, x1, x28, lsl #3
   27908:	str	x28, [sp, #168]
   2790c:	str	w0, [sp, #152]
   27910:	b	275dc <mpfr_cosh@@Base+0x164>
   27914:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   27918:	add	x2, x2, #0x230
   2791c:	mov	w1, #0x76                  	// #118
   27920:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   27924:	add	x0, x0, #0xb98
   27928:	bl	cb40 <mpfr_assert_fail@plt>
   2792c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   27930:	mov	x2, x0
   27934:	ldr	x0, [sp, #184]
   27938:	bl	c1c0 <mpfr_reallocate_func@plt>
   2793c:	str	x0, [sp, #184]
   27940:	b	278ec <mpfr_cosh@@Base+0x474>
   27944:	mov	w2, w23
   27948:	mov	w1, w21
   2794c:	mov	x0, x20
   27950:	bl	cb30 <mpfr_check_range@plt>
   27954:	mov	w21, w0
   27958:	ldp	x25, x26, [sp, #64]
   2795c:	ldp	x27, x28, [sp, #80]
   27960:	b	27710 <mpfr_cosh@@Base+0x298>
   27964:	add	x21, x22, #0x41
   27968:	adds	x0, x22, #0x2
   2796c:	csel	x21, x21, x0, mi  // mi = first
   27970:	asr	x21, x21, #6
   27974:	add	x21, x21, #0x1
   27978:	b	27594 <mpfr_cosh@@Base+0x11c>

000000000002797c <mpfr_sinh@@Base>:
   2797c:	stp	x29, x30, [sp, #-352]!
   27980:	mov	x29, sp
   27984:	stp	x19, x20, [sp, #16]
   27988:	stp	x21, x22, [sp, #32]
   2798c:	stp	x23, x24, [sp, #48]
   27990:	mov	x23, x0
   27994:	mov	x22, x1
   27998:	str	w2, [sp, #104]
   2799c:	ldr	x2, [x1, #16]
   279a0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   279a4:	cmp	x2, x0
   279a8:	b.le	27c84 <mpfr_sinh@@Base+0x308>
   279ac:	neg	x2, x2, lsl #1
   279b0:	cmp	x2, #0x0
   279b4:	b.le	279cc <mpfr_sinh@@Base+0x50>
   279b8:	add	x2, x2, #0x2
   279bc:	ldr	x0, [x23]
   279c0:	add	x0, x0, #0x1
   279c4:	cmp	x0, x2
   279c8:	b.cc	27cfc <mpfr_sinh@@Base+0x380>  // b.lo, b.ul, b.last
   279cc:	stp	x25, x26, [sp, #64]
   279d0:	stp	x27, x28, [sp, #80]
   279d4:	ldr	x2, [x22]
   279d8:	str	x2, [sp, #320]
   279dc:	ldr	x0, [x22, #24]
   279e0:	str	x0, [sp, #344]
   279e4:	mov	w0, #0x1                   	// #1
   279e8:	str	w0, [sp, #328]
   279ec:	ldr	x3, [x22, #16]
   279f0:	str	x3, [sp, #336]
   279f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   279f8:	ldr	x1, [x0, #2576]
   279fc:	add	x0, x0, #0xa10
   27a00:	blr	x1
   27a04:	mrs	x1, tpidr_el0
   27a08:	ldr	w0, [x1, x0]
   27a0c:	str	w0, [sp, #108]
   27a10:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27a14:	ldr	x4, [x0, #2512]
   27a18:	add	x0, x0, #0x9d0
   27a1c:	blr	x4
   27a20:	add	x4, x1, x0
   27a24:	ldr	x27, [x1, x0]
   27a28:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27a2c:	ldr	x5, [x0, #2544]
   27a30:	add	x0, x0, #0x9f0
   27a34:	blr	x5
   27a38:	ldr	x28, [x1, x0]
   27a3c:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   27a40:	str	x5, [x4]
   27a44:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   27a48:	str	x4, [x1, x0]
   27a4c:	ldr	x20, [x23]
   27a50:	cmp	x20, x2
   27a54:	csel	x20, x20, x2, ge  // ge = tcont
   27a58:	cmp	x20, #0x1
   27a5c:	b.eq	27fd0 <mpfr_sinh@@Base+0x654>  // b.none
   27a60:	b.le	27d18 <mpfr_sinh@@Base+0x39c>
   27a64:	sub	x19, x20, #0x1
   27a68:	clz	x0, x19
   27a6c:	mov	w19, #0x40                  	// #64
   27a70:	sub	w19, w19, w0
   27a74:	add	x19, x20, w19, sxtw
   27a78:	add	x19, x19, #0x4
   27a7c:	tbnz	x3, #63, 27d34 <mpfr_sinh@@Base+0x3b8>
   27a80:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   27a84:	cmp	x19, x0
   27a88:	b.ge	27d3c <mpfr_sinh@@Base+0x3c0>  // b.tcont
   27a8c:	add	x20, x19, #0x3e
   27a90:	subs	x0, x19, #0x1
   27a94:	csel	x20, x20, x0, mi  // mi = first
   27a98:	asr	x20, x20, #6
   27a9c:	add	x20, x20, #0x1
   27aa0:	lsl	x0, x20, #1
   27aa4:	cmp	x0, #0x10
   27aa8:	b.gt	27d40 <mpfr_sinh@@Base+0x3c4>
   27aac:	str	xzr, [sp, #176]
   27ab0:	add	x0, sp, #0xc0
   27ab4:	str	x0, [sp, #184]
   27ab8:	str	x19, [sp, #112]
   27abc:	ldr	x0, [sp, #184]
   27ac0:	str	x0, [sp, #136]
   27ac4:	mov	w1, #0x1                   	// #1
   27ac8:	str	w1, [sp, #120]
   27acc:	str	x19, [sp, #144]
   27ad0:	add	x20, x0, x20, lsl #3
   27ad4:	str	x20, [sp, #168]
   27ad8:	str	w1, [sp, #152]
   27adc:	mov	x26, #0x40                  	// #64
   27ae0:	add	x24, sp, #0x140
   27ae4:	add	x21, sp, #0x70
   27ae8:	add	x25, sp, #0x90
   27aec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27af0:	ldr	x1, [x0, #2576]
   27af4:	add	x0, x0, #0xa10
   27af8:	blr	x1
   27afc:	mrs	x1, tpidr_el0
   27b00:	add	x20, x1, x0
   27b04:	str	wzr, [x1, x0]
   27b08:	mov	w2, #0x3                   	// #3
   27b0c:	mov	x1, x24
   27b10:	mov	x0, x21
   27b14:	bl	c750 <mpfr_exp@plt>
   27b18:	ldr	w0, [x20]
   27b1c:	tbnz	w0, #1, 27d54 <mpfr_sinh@@Base+0x3d8>
   27b20:	ldr	x20, [sp, #128]
   27b24:	mov	w3, #0x2                   	// #2
   27b28:	mov	x2, x21
   27b2c:	mov	x1, #0x1                   	// #1
   27b30:	mov	x0, x25
   27b34:	bl	c2f0 <mpfr_ui_div@plt>
   27b38:	mov	w3, #0x0                   	// #0
   27b3c:	mov	x2, x25
   27b40:	mov	x1, x21
   27b44:	mov	x0, x21
   27b48:	bl	bb70 <mpfr_sub@plt>
   27b4c:	mov	w3, #0x0                   	// #0
   27b50:	mov	x2, #0x1                   	// #1
   27b54:	mov	x1, x21
   27b58:	mov	x0, x21
   27b5c:	bl	c8f0 <mpfr_div_2ui@plt>
   27b60:	ldr	x0, [sp, #128]
   27b64:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27b68:	cmp	x0, x1
   27b6c:	b.eq	27ef8 <mpfr_sinh@@Base+0x57c>  // b.none
   27b70:	sub	x20, x20, x0
   27b74:	adds	x20, x20, #0x2
   27b78:	csel	x20, x20, xzr, pl  // pl = nfrst
   27b7c:	add	x20, x20, #0x1
   27b80:	sub	x20, x19, x20
   27b84:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   27b88:	cmp	x0, x1
   27b8c:	b.le	27efc <mpfr_sinh@@Base+0x580>
   27b90:	ldr	w0, [sp, #104]
   27b94:	cmp	w0, #0x0
   27b98:	ldr	x3, [x23]
   27b9c:	cinc	x3, x3, eq  // eq = none
   27ba0:	ldr	x0, [sp, #112]
   27ba4:	add	x1, x0, #0x3e
   27ba8:	subs	x0, x0, #0x1
   27bac:	csel	x1, x1, x0, mi  // mi = first
   27bb0:	asr	x1, x1, #6
   27bb4:	mov	x2, x20
   27bb8:	add	x1, x1, #0x1
   27bbc:	ldr	x0, [sp, #136]
   27bc0:	bl	c370 <mpfr_round_p@plt>
   27bc4:	cbz	w0, 27efc <mpfr_sinh@@Base+0x580>
   27bc8:	ldr	w3, [x22, #8]
   27bcc:	ldr	w2, [sp, #104]
   27bd0:	add	x1, sp, #0x70
   27bd4:	mov	x0, x23
   27bd8:	bl	c6a0 <mpfr_set4@plt>
   27bdc:	mov	w19, w0
   27be0:	ldr	x1, [sp, #176]
   27be4:	cbz	x1, 27bf0 <mpfr_sinh@@Base+0x274>
   27be8:	ldr	x0, [sp, #184]
   27bec:	bl	cc20 <mpfr_free_func@plt>
   27bf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27bf4:	ldr	x1, [x0, #2576]
   27bf8:	add	x0, x0, #0xa10
   27bfc:	blr	x1
   27c00:	mrs	x1, tpidr_el0
   27c04:	ldr	w2, [sp, #108]
   27c08:	str	w2, [x1, x0]
   27c0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27c10:	ldr	x3, [x0, #2512]
   27c14:	add	x0, x0, #0x9d0
   27c18:	blr	x3
   27c1c:	str	x27, [x1, x0]
   27c20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27c24:	ldr	x3, [x0, #2544]
   27c28:	add	x0, x0, #0x9f0
   27c2c:	blr	x3
   27c30:	str	x28, [x1, x0]
   27c34:	ldr	x0, [x23, #16]
   27c38:	cmp	x28, x0
   27c3c:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   27c40:	b.gt	27fb0 <mpfr_sinh@@Base+0x634>
   27c44:	cbz	w19, 27fdc <mpfr_sinh@@Base+0x660>
   27c48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27c4c:	ldr	x1, [x0, #2576]
   27c50:	add	x0, x0, #0xa10
   27c54:	blr	x1
   27c58:	orr	w2, w2, #0x8
   27c5c:	mrs	x1, tpidr_el0
   27c60:	str	w2, [x1, x0]
   27c64:	ldp	x25, x26, [sp, #64]
   27c68:	ldp	x27, x28, [sp, #80]
   27c6c:	mov	w0, w19
   27c70:	ldp	x19, x20, [sp, #16]
   27c74:	ldp	x21, x22, [sp, #32]
   27c78:	ldp	x23, x24, [sp, #48]
   27c7c:	ldp	x29, x30, [sp], #352
   27c80:	ret
   27c84:	mov	x0, #0x2                   	// #2
   27c88:	movk	x0, #0x8000, lsl #48
   27c8c:	cmp	x2, x0
   27c90:	b.eq	27cb8 <mpfr_sinh@@Base+0x33c>  // b.none
   27c94:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   27c98:	cmp	x2, x0
   27c9c:	b.eq	27ce8 <mpfr_sinh@@Base+0x36c>  // b.none
   27ca0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   27ca4:	str	x0, [x23, #16]
   27ca8:	ldr	w0, [x1, #8]
   27cac:	str	w0, [x23, #8]
   27cb0:	mov	w19, #0x0                   	// #0
   27cb4:	b	27c6c <mpfr_sinh@@Base+0x2f0>
   27cb8:	str	x0, [x23, #16]
   27cbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27cc0:	ldr	x1, [x0, #2576]
   27cc4:	add	x0, x0, #0xa10
   27cc8:	blr	x1
   27ccc:	mrs	x1, tpidr_el0
   27cd0:	add	x0, x1, x0
   27cd4:	ldr	w1, [x0]
   27cd8:	orr	w1, w1, #0x4
   27cdc:	str	w1, [x0]
   27ce0:	mov	w19, #0x0                   	// #0
   27ce4:	b	27c6c <mpfr_sinh@@Base+0x2f0>
   27ce8:	str	x0, [x23, #16]
   27cec:	ldr	w0, [x1, #8]
   27cf0:	str	w0, [x23, #8]
   27cf4:	mov	w19, #0x0                   	// #0
   27cf8:	b	27c6c <mpfr_sinh@@Base+0x2f0>
   27cfc:	ldr	w4, [sp, #104]
   27d00:	mov	w3, #0x1                   	// #1
   27d04:	mov	x0, x23
   27d08:	bl	c540 <mpfr_round_near_x@plt>
   27d0c:	mov	w19, w0
   27d10:	cbz	w0, 279cc <mpfr_sinh@@Base+0x50>
   27d14:	b	27c6c <mpfr_sinh@@Base+0x2f0>
   27d18:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   27d1c:	add	x2, x2, #0xb78
   27d20:	mov	w1, #0x52                  	// #82
   27d24:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   27d28:	add	x0, x0, #0xba0
   27d2c:	bl	cb40 <mpfr_assert_fail@plt>
   27d30:	mov	x19, #0x5                   	// #5
   27d34:	sub	x19, x19, x3, lsl #1
   27d38:	b	27a80 <mpfr_sinh@@Base+0x104>
   27d3c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   27d40:	lsl	x0, x20, #4
   27d44:	str	x0, [sp, #176]
   27d48:	bl	ccf0 <mpfr_allocate_func@plt>
   27d4c:	str	x0, [sp, #184]
   27d50:	b	27ab8 <mpfr_sinh@@Base+0x13c>
   27d54:	mov	w3, #0x3                   	// #3
   27d58:	mov	x2, #0x1                   	// #1
   27d5c:	mov	x1, x24
   27d60:	mov	x0, x25
   27d64:	bl	c8f0 <mpfr_div_2ui@plt>
   27d68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27d6c:	ldr	x1, [x0, #2576]
   27d70:	add	x0, x0, #0xa10
   27d74:	blr	x1
   27d78:	mrs	x1, tpidr_el0
   27d7c:	str	wzr, [x1, x0]
   27d80:	mov	w2, #0x3                   	// #3
   27d84:	mov	x1, x25
   27d88:	mov	x0, x21
   27d8c:	bl	baf0 <mpfr_cosh@plt>
   27d90:	ldr	w0, [x20]
   27d94:	tbnz	w0, #1, 27e7c <mpfr_sinh@@Base+0x500>
   27d98:	mov	w2, #0x3                   	// #3
   27d9c:	mov	x1, x25
   27da0:	mov	x0, x25
   27da4:	bl	2797c <mpfr_sinh@@Base>
   27da8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27dac:	ldr	x1, [x0, #2576]
   27db0:	add	x0, x0, #0xa10
   27db4:	blr	x1
   27db8:	mrs	x1, tpidr_el0
   27dbc:	add	x20, x1, x0
   27dc0:	str	wzr, [x1, x0]
   27dc4:	mov	w3, #0x3                   	// #3
   27dc8:	mov	x2, x25
   27dcc:	mov	x1, x21
   27dd0:	mov	x0, x21
   27dd4:	bl	bd50 <mpfr_mul@plt>
   27dd8:	ldr	w0, [x20]
   27ddc:	tbnz	w0, #1, 27ea0 <mpfr_sinh@@Base+0x524>
   27de0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   27de4:	ldr	x1, [x0, #2576]
   27de8:	add	x0, x0, #0xa10
   27dec:	blr	x1
   27df0:	mrs	x1, tpidr_el0
   27df4:	add	x20, x1, x0
   27df8:	str	wzr, [x1, x0]
   27dfc:	mov	w3, #0x0                   	// #0
   27e00:	mov	x2, #0x1                   	// #1
   27e04:	mov	x1, x21
   27e08:	mov	x0, x21
   27e0c:	bl	c2c0 <mpfr_mul_2ui@plt>
   27e10:	ldr	w0, [x20]
   27e14:	tbnz	w0, #1, 27ec4 <mpfr_sinh@@Base+0x548>
   27e18:	sub	x2, x19, #0x3
   27e1c:	ldr	x1, [sp, #128]
   27e20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   27e24:	cmp	x1, x0
   27e28:	b.le	27ee8 <mpfr_sinh@@Base+0x56c>
   27e2c:	ldr	w20, [sp, #104]
   27e30:	cmp	w20, #0x0
   27e34:	ldr	x3, [x23]
   27e38:	cinc	x3, x3, eq  // eq = none
   27e3c:	ldr	x0, [sp, #112]
   27e40:	add	x1, x0, #0x3e
   27e44:	subs	x0, x0, #0x1
   27e48:	csel	x1, x1, x0, mi  // mi = first
   27e4c:	asr	x1, x1, #6
   27e50:	add	x1, x1, #0x1
   27e54:	ldr	x0, [sp, #136]
   27e58:	bl	c370 <mpfr_round_p@plt>
   27e5c:	cbz	w0, 27ef0 <mpfr_sinh@@Base+0x574>
   27e60:	ldr	w3, [x22, #8]
   27e64:	mov	w2, w20
   27e68:	add	x1, sp, #0x70
   27e6c:	mov	x0, x23
   27e70:	bl	c6a0 <mpfr_set4@plt>
   27e74:	mov	w19, w0
   27e78:	b	27be0 <mpfr_sinh@@Base+0x264>
   27e7c:	ldr	w2, [x22, #8]
   27e80:	ldr	w1, [sp, #104]
   27e84:	mov	x0, x23
   27e88:	bl	bf40 <mpfr_overflow@plt>
   27e8c:	mov	w19, w0
   27e90:	ldr	w0, [sp, #108]
   27e94:	orr	w0, w0, #0x2
   27e98:	str	w0, [sp, #108]
   27e9c:	b	27be0 <mpfr_sinh@@Base+0x264>
   27ea0:	ldr	w2, [x22, #8]
   27ea4:	ldr	w1, [sp, #104]
   27ea8:	mov	x0, x23
   27eac:	bl	bf40 <mpfr_overflow@plt>
   27eb0:	mov	w19, w0
   27eb4:	ldr	w0, [sp, #108]
   27eb8:	orr	w0, w0, #0x2
   27ebc:	str	w0, [sp, #108]
   27ec0:	b	27be0 <mpfr_sinh@@Base+0x264>
   27ec4:	ldr	w2, [x22, #8]
   27ec8:	ldr	w1, [sp, #104]
   27ecc:	mov	x0, x23
   27ed0:	bl	bf40 <mpfr_overflow@plt>
   27ed4:	mov	w19, w0
   27ed8:	ldr	w0, [sp, #108]
   27edc:	orr	w0, w0, #0x2
   27ee0:	str	w0, [sp, #108]
   27ee4:	b	27be0 <mpfr_sinh@@Base+0x264>
   27ee8:	mov	x20, x19
   27eec:	b	27efc <mpfr_sinh@@Base+0x580>
   27ef0:	mov	x20, x19
   27ef4:	b	27efc <mpfr_sinh@@Base+0x580>
   27ef8:	mov	x20, x19
   27efc:	add	x19, x19, x20
   27f00:	mov	x0, #0xfffffffffffffeff    	// #-257
   27f04:	movk	x0, #0x7fff, lsl #48
   27f08:	sub	x0, x0, x19
   27f0c:	cmp	x0, x26
   27f10:	b.lt	27f80 <mpfr_sinh@@Base+0x604>  // b.tstop
   27f14:	add	x19, x26, x19
   27f18:	add	x26, x19, x19, lsr #63
   27f1c:	asr	x26, x26, #1
   27f20:	ldr	x1, [sp, #176]
   27f24:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   27f28:	cmp	x19, x0
   27f2c:	b.ge	27f98 <mpfr_sinh@@Base+0x61c>  // b.tcont
   27f30:	add	x20, x19, #0x3e
   27f34:	subs	x0, x19, #0x1
   27f38:	csel	x20, x20, x0, mi  // mi = first
   27f3c:	asr	x20, x20, #6
   27f40:	add	x20, x20, #0x1
   27f44:	lsl	x0, x20, #4
   27f48:	str	x0, [sp, #176]
   27f4c:	cbnz	x1, 27f9c <mpfr_sinh@@Base+0x620>
   27f50:	bl	ccf0 <mpfr_allocate_func@plt>
   27f54:	str	x0, [sp, #184]
   27f58:	str	x19, [sp, #112]
   27f5c:	ldr	x1, [sp, #184]
   27f60:	str	x1, [sp, #136]
   27f64:	mov	w0, #0x1                   	// #1
   27f68:	str	w0, [sp, #120]
   27f6c:	str	x19, [sp, #144]
   27f70:	add	x20, x1, x20, lsl #3
   27f74:	str	x20, [sp, #168]
   27f78:	str	w0, [sp, #152]
   27f7c:	b	27aec <mpfr_sinh@@Base+0x170>
   27f80:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   27f84:	add	x2, x2, #0x230
   27f88:	mov	w1, #0xaf                  	// #175
   27f8c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   27f90:	add	x0, x0, #0xba0
   27f94:	bl	cb40 <mpfr_assert_fail@plt>
   27f98:	bl	c8e0 <mpfr_abort_prec_max@plt>
   27f9c:	mov	x2, x0
   27fa0:	ldr	x0, [sp, #184]
   27fa4:	bl	c1c0 <mpfr_reallocate_func@plt>
   27fa8:	str	x0, [sp, #184]
   27fac:	b	27f58 <mpfr_sinh@@Base+0x5dc>
   27fb0:	ldr	w2, [sp, #104]
   27fb4:	mov	w1, w19
   27fb8:	mov	x0, x23
   27fbc:	bl	cb30 <mpfr_check_range@plt>
   27fc0:	mov	w19, w0
   27fc4:	ldp	x25, x26, [sp, #64]
   27fc8:	ldp	x27, x28, [sp, #80]
   27fcc:	b	27c6c <mpfr_sinh@@Base+0x2f0>
   27fd0:	tbnz	x3, #63, 27d30 <mpfr_sinh@@Base+0x3b4>
   27fd4:	mov	x19, #0x5                   	// #5
   27fd8:	b	27aac <mpfr_sinh@@Base+0x130>
   27fdc:	ldp	x25, x26, [sp, #64]
   27fe0:	ldp	x27, x28, [sp, #80]
   27fe4:	b	27c6c <mpfr_sinh@@Base+0x2f0>

0000000000027fe8 <mpfr_tanh@@Base>:
   27fe8:	stp	x29, x30, [sp, #-368]!
   27fec:	mov	x29, sp
   27ff0:	stp	x19, x20, [sp, #16]
   27ff4:	stp	x21, x22, [sp, #32]
   27ff8:	stp	x23, x24, [sp, #48]
   27ffc:	mov	x22, x0
   28000:	mov	x19, x1
   28004:	str	w2, [sp, #112]
   28008:	ldr	x2, [x1, #16]
   2800c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   28010:	cmp	x2, x0
   28014:	b.le	28318 <mpfr_tanh@@Base+0x330>
   28018:	neg	x2, x2, lsl #1
   2801c:	cmp	x2, #0x0
   28020:	b.le	28038 <mpfr_tanh@@Base+0x50>
   28024:	add	x2, x2, #0x1
   28028:	ldr	x0, [x22]
   2802c:	add	x0, x0, #0x1
   28030:	cmp	x0, x2
   28034:	b.cc	28398 <mpfr_tanh@@Base+0x3b0>  // b.lo, b.ul, b.last
   28038:	stp	x27, x28, [sp, #80]
   2803c:	ldr	x0, [x19]
   28040:	str	x0, [sp, #336]
   28044:	ldr	x0, [x19, #24]
   28048:	str	x0, [sp, #360]
   2804c:	mov	w0, #0x1                   	// #1
   28050:	str	w0, [sp, #344]
   28054:	ldr	x0, [x19, #16]
   28058:	str	x0, [sp, #352]
   2805c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28060:	ldr	x1, [x0, #2576]
   28064:	add	x0, x0, #0xa10
   28068:	blr	x1
   2806c:	mrs	x1, tpidr_el0
   28070:	ldr	w0, [x1, x0]
   28074:	str	w0, [sp, #116]
   28078:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2807c:	ldr	x2, [x0, #2512]
   28080:	add	x0, x0, #0x9d0
   28084:	blr	x2
   28088:	add	x2, x1, x0
   2808c:	ldr	x27, [x1, x0]
   28090:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28094:	ldr	x3, [x0, #2544]
   28098:	add	x0, x0, #0x9f0
   2809c:	blr	x3
   280a0:	ldr	x28, [x1, x0]
   280a4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   280a8:	str	x3, [x2]
   280ac:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   280b0:	str	x2, [x1, x0]
   280b4:	ldr	x24, [x22]
   280b8:	ldr	w23, [x19, #8]
   280bc:	mov	x2, #0x0                   	// #0
   280c0:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   280c4:	add	x0, sp, #0x150
   280c8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   280cc:	tbz	w0, #31, 283b4 <mpfr_tanh@@Base+0x3cc>
   280d0:	stp	x25, x26, [sp, #64]
   280d4:	cmp	x24, #0x1
   280d8:	b.eq	283fc <mpfr_tanh@@Base+0x414>  // b.none
   280dc:	b.le	283e4 <mpfr_tanh@@Base+0x3fc>
   280e0:	sub	x19, x24, #0x1
   280e4:	clz	x0, x19
   280e8:	mov	w19, #0x40                  	// #64
   280ec:	sub	w19, w19, w0
   280f0:	add	x19, x24, w19, sxtw
   280f4:	add	x19, x19, #0x4
   280f8:	ldr	x0, [sp, #352]
   280fc:	tbnz	x0, #63, 28408 <mpfr_tanh@@Base+0x420>
   28100:	ldr	x0, [sp, #336]
   28104:	cmp	x0, x19
   28108:	csel	x19, x0, x19, ge  // ge = tcont
   2810c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   28110:	cmp	x19, x0
   28114:	b.ge	2841c <mpfr_tanh@@Base+0x434>  // b.tcont
   28118:	add	x20, x19, #0x3e
   2811c:	subs	x0, x19, #0x1
   28120:	csel	x20, x20, x0, mi  // mi = first
   28124:	asr	x20, x20, #6
   28128:	add	x20, x20, #0x1
   2812c:	lsl	x0, x20, #1
   28130:	cmp	x0, #0x10
   28134:	b.gt	28420 <mpfr_tanh@@Base+0x438>
   28138:	str	xzr, [sp, #192]
   2813c:	add	x0, sp, #0xd0
   28140:	str	x0, [sp, #200]
   28144:	str	x19, [sp, #128]
   28148:	ldr	x1, [sp, #200]
   2814c:	str	x1, [sp, #152]
   28150:	mov	w0, #0x1                   	// #1
   28154:	str	w0, [sp, #136]
   28158:	str	x19, [sp, #160]
   2815c:	add	x20, x1, x20, lsl #3
   28160:	str	x20, [sp, #184]
   28164:	str	w0, [sp, #168]
   28168:	mov	x0, #0x40                  	// #64
   2816c:	str	x0, [sp, #120]
   28170:	add	x0, sp, #0x150
   28174:	str	x0, [sp, #104]
   28178:	add	x21, sp, #0xa0
   2817c:	mov	x25, #0x1                   	// #1
   28180:	add	x26, sp, #0x80
   28184:	mov	w3, #0x0                   	// #0
   28188:	mov	x2, x25
   2818c:	ldr	x1, [sp, #104]
   28190:	mov	x0, x21
   28194:	bl	c2c0 <mpfr_mul_2ui@plt>
   28198:	mov	w2, #0x0                   	// #0
   2819c:	mov	x1, x21
   281a0:	mov	x0, x21
   281a4:	bl	c750 <mpfr_exp@plt>
   281a8:	ldr	x20, [sp, #176]
   281ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   281b0:	cmp	x20, x0
   281b4:	b.eq	28434 <mpfr_tanh@@Base+0x44c>  // b.none
   281b8:	mov	w3, #0x3                   	// #3
   281bc:	mov	x2, x25
   281c0:	mov	x1, x21
   281c4:	mov	x0, x26
   281c8:	bl	c260 <mpfr_add_ui@plt>
   281cc:	mov	w3, #0x2                   	// #2
   281d0:	mov	x2, x25
   281d4:	mov	x1, x21
   281d8:	mov	x0, x21
   281dc:	bl	c530 <mpfr_sub_ui@plt>
   281e0:	ldr	x0, [sp, #176]
   281e4:	sub	x20, x20, x0
   281e8:	mov	w3, #0x0                   	// #0
   281ec:	mov	x2, x26
   281f0:	mov	x1, x21
   281f4:	mov	x0, x26
   281f8:	bl	c620 <mpfr_div@plt>
   281fc:	cmp	x20, #0x2
   28200:	mov	x0, #0x2                   	// #2
   28204:	csel	x20, x20, x0, ge  // ge = tcont
   28208:	add	x2, x20, x0
   2820c:	sub	x2, x19, x2
   28210:	add	x0, x19, x19, lsr #63
   28214:	cmp	x20, x0, asr #1
   28218:	b.ge	28480 <mpfr_tanh@@Base+0x498>  // b.tcont
   2821c:	ldr	x1, [sp, #144]
   28220:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   28224:	cmp	x1, x0
   28228:	b.le	28480 <mpfr_tanh@@Base+0x498>
   2822c:	ldr	w20, [sp, #112]
   28230:	cmp	w20, #0x0
   28234:	cinc	x3, x24, eq  // eq = none
   28238:	ldr	x0, [sp, #128]
   2823c:	add	x1, x0, #0x3e
   28240:	subs	x0, x0, #0x1
   28244:	csel	x1, x1, x0, mi  // mi = first
   28248:	asr	x1, x1, #6
   2824c:	add	x1, x1, #0x1
   28250:	ldr	x0, [sp, #152]
   28254:	bl	c370 <mpfr_round_p@plt>
   28258:	cbz	w0, 28480 <mpfr_tanh@@Base+0x498>
   2825c:	mov	w3, w23
   28260:	mov	w2, w20
   28264:	add	x1, sp, #0x80
   28268:	mov	x0, x22
   2826c:	bl	c6a0 <mpfr_set4@plt>
   28270:	mov	w23, w0
   28274:	ldp	x25, x26, [sp, #64]
   28278:	ldr	x1, [sp, #192]
   2827c:	cbz	x1, 28288 <mpfr_tanh@@Base+0x2a0>
   28280:	ldr	x0, [sp, #200]
   28284:	bl	cc20 <mpfr_free_func@plt>
   28288:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2828c:	ldr	x1, [x0, #2576]
   28290:	add	x0, x0, #0xa10
   28294:	blr	x1
   28298:	mrs	x1, tpidr_el0
   2829c:	ldr	w2, [sp, #116]
   282a0:	str	w2, [x1, x0]
   282a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   282a8:	ldr	x3, [x0, #2512]
   282ac:	add	x0, x0, #0x9d0
   282b0:	blr	x3
   282b4:	str	x27, [x1, x0]
   282b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   282bc:	ldr	x3, [x0, #2544]
   282c0:	add	x0, x0, #0x9f0
   282c4:	blr	x3
   282c8:	str	x28, [x1, x0]
   282cc:	ldr	x0, [x22, #16]
   282d0:	cmp	x28, x0
   282d4:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   282d8:	b.gt	28548 <mpfr_tanh@@Base+0x560>
   282dc:	cbz	w23, 28564 <mpfr_tanh@@Base+0x57c>
   282e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   282e4:	ldr	x1, [x0, #2576]
   282e8:	add	x0, x0, #0xa10
   282ec:	blr	x1
   282f0:	orr	w2, w2, #0x8
   282f4:	mrs	x1, tpidr_el0
   282f8:	str	w2, [x1, x0]
   282fc:	ldp	x27, x28, [sp, #80]
   28300:	mov	w0, w23
   28304:	ldp	x19, x20, [sp, #16]
   28308:	ldp	x21, x22, [sp, #32]
   2830c:	ldp	x23, x24, [sp, #48]
   28310:	ldp	x29, x30, [sp], #368
   28314:	ret
   28318:	mov	x0, #0x2                   	// #2
   2831c:	movk	x0, #0x8000, lsl #48
   28320:	cmp	x2, x0
   28324:	b.eq	2834c <mpfr_tanh@@Base+0x364>  // b.none
   28328:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2832c:	cmp	x2, x0
   28330:	b.eq	2837c <mpfr_tanh@@Base+0x394>  // b.none
   28334:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28338:	str	x0, [x22, #16]
   2833c:	ldr	w0, [x1, #8]
   28340:	str	w0, [x22, #8]
   28344:	mov	w23, #0x0                   	// #0
   28348:	b	28300 <mpfr_tanh@@Base+0x318>
   2834c:	str	x0, [x22, #16]
   28350:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28354:	ldr	x1, [x0, #2576]
   28358:	add	x0, x0, #0xa10
   2835c:	blr	x1
   28360:	mrs	x1, tpidr_el0
   28364:	add	x0, x1, x0
   28368:	ldr	w1, [x0]
   2836c:	orr	w1, w1, #0x4
   28370:	str	w1, [x0]
   28374:	mov	w23, #0x0                   	// #0
   28378:	b	28300 <mpfr_tanh@@Base+0x318>
   2837c:	ldr	w3, [sp, #112]
   28380:	mov	x2, #0x0                   	// #0
   28384:	ldrsw	x1, [x1, #8]
   28388:	mov	x0, x22
   2838c:	bl	ba80 <mpfr_set_si_2exp@plt>
   28390:	mov	w23, w0
   28394:	b	28300 <mpfr_tanh@@Base+0x318>
   28398:	ldr	w4, [sp, #112]
   2839c:	mov	w3, #0x0                   	// #0
   283a0:	mov	x0, x22
   283a4:	bl	c540 <mpfr_round_near_x@plt>
   283a8:	mov	w23, w0
   283ac:	cbz	w0, 28038 <mpfr_tanh@@Base+0x50>
   283b0:	b	28300 <mpfr_tanh@@Base+0x318>
   283b4:	str	xzr, [sp, #192]
   283b8:	add	x2, sp, #0xd0
   283bc:	str	x2, [sp, #200]
   283c0:	mov	x0, #0x1                   	// #1
   283c4:	str	x0, [sp, #128]
   283c8:	str	x2, [sp, #152]
   283cc:	str	w0, [sp, #136]
   283d0:	str	x0, [sp, #160]
   283d4:	add	x1, sp, #0xd8
   283d8:	str	x1, [sp, #184]
   283dc:	str	w0, [sp, #168]
   283e0:	b	28438 <mpfr_tanh@@Base+0x450>
   283e4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   283e8:	add	x2, x2, #0x218
   283ec:	mov	w1, #0x60                  	// #96
   283f0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   283f4:	add	x0, x0, #0xba8
   283f8:	bl	cb40 <mpfr_assert_fail@plt>
   283fc:	ldr	x0, [sp, #352]
   28400:	mov	x19, #0x5                   	// #5
   28404:	tbz	x0, #63, 2840c <mpfr_tanh@@Base+0x424>
   28408:	sub	x19, x19, x0
   2840c:	ldr	x0, [sp, #336]
   28410:	cmp	x0, x19
   28414:	csel	x19, x0, x19, ge  // ge = tcont
   28418:	b	2810c <mpfr_tanh@@Base+0x124>
   2841c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   28420:	lsl	x0, x20, #4
   28424:	str	x0, [sp, #192]
   28428:	bl	ccf0 <mpfr_allocate_func@plt>
   2842c:	str	x0, [sp, #200]
   28430:	b	28144 <mpfr_tanh@@Base+0x15c>
   28434:	ldp	x25, x26, [sp, #64]
   28438:	mov	w3, w23
   2843c:	mov	w2, #0x0                   	// #0
   28440:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   28444:	ldr	x1, [x1, #3928]
   28448:	mov	x0, x22
   2844c:	bl	c6a0 <mpfr_set4@plt>
   28450:	ldr	w0, [sp, #112]
   28454:	cmp	w0, #0x1
   28458:	b.eq	28468 <mpfr_tanh@@Base+0x480>  // b.none
   2845c:	add	w0, w0, w23, lsr #31
   28460:	cmp	w0, #0x3
   28464:	b.ne	28278 <mpfr_tanh@@Base+0x290>  // b.any
   28468:	neg	w23, w23
   2846c:	mov	x0, x22
   28470:	bl	c460 <mpfr_nexttozero@plt>
   28474:	b	28278 <mpfr_tanh@@Base+0x290>
   28478:	ldp	x25, x26, [sp, #64]
   2847c:	b	28438 <mpfr_tanh@@Base+0x450>
   28480:	ldr	x0, [sp, #144]
   28484:	cmp	x0, #0x1
   28488:	b.eq	28478 <mpfr_tanh@@Base+0x490>  // b.none
   2848c:	mov	x0, #0xfffffffffffffeff    	// #-257
   28490:	movk	x0, #0x7fff, lsl #48
   28494:	sub	x0, x0, x19
   28498:	ldr	x1, [sp, #120]
   2849c:	cmp	x0, x1
   284a0:	b.lt	28518 <mpfr_tanh@@Base+0x530>  // b.tstop
   284a4:	ldr	x0, [sp, #120]
   284a8:	add	x19, x19, x0
   284ac:	add	x0, x19, x19, lsr #63
   284b0:	asr	x0, x0, #1
   284b4:	str	x0, [sp, #120]
   284b8:	ldr	x1, [sp, #192]
   284bc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   284c0:	cmp	x19, x0
   284c4:	b.ge	28530 <mpfr_tanh@@Base+0x548>  // b.tcont
   284c8:	add	x20, x19, #0x3e
   284cc:	subs	x0, x19, #0x1
   284d0:	csel	x20, x20, x0, mi  // mi = first
   284d4:	asr	x20, x20, #6
   284d8:	add	x20, x20, #0x1
   284dc:	lsl	x0, x20, #4
   284e0:	str	x0, [sp, #192]
   284e4:	cbnz	x1, 28534 <mpfr_tanh@@Base+0x54c>
   284e8:	bl	ccf0 <mpfr_allocate_func@plt>
   284ec:	str	x0, [sp, #200]
   284f0:	str	x19, [sp, #128]
   284f4:	ldr	x1, [sp, #200]
   284f8:	str	x1, [sp, #152]
   284fc:	mov	w0, #0x1                   	// #1
   28500:	str	w0, [sp, #136]
   28504:	str	x19, [sp, #160]
   28508:	add	x20, x1, x20, lsl #3
   2850c:	str	x20, [sp, #184]
   28510:	str	w0, [sp, #168]
   28514:	b	28184 <mpfr_tanh@@Base+0x19c>
   28518:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2851c:	add	x2, x2, #0x230
   28520:	mov	w1, #0x9a                  	// #154
   28524:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   28528:	add	x0, x0, #0xba8
   2852c:	bl	cb40 <mpfr_assert_fail@plt>
   28530:	bl	c8e0 <mpfr_abort_prec_max@plt>
   28534:	mov	x2, x0
   28538:	ldr	x0, [sp, #200]
   2853c:	bl	c1c0 <mpfr_reallocate_func@plt>
   28540:	str	x0, [sp, #200]
   28544:	b	284f0 <mpfr_tanh@@Base+0x508>
   28548:	ldr	w2, [sp, #112]
   2854c:	mov	w1, w23
   28550:	mov	x0, x22
   28554:	bl	cb30 <mpfr_check_range@plt>
   28558:	mov	w23, w0
   2855c:	ldp	x27, x28, [sp, #80]
   28560:	b	28300 <mpfr_tanh@@Base+0x318>
   28564:	ldp	x27, x28, [sp, #80]
   28568:	b	28300 <mpfr_tanh@@Base+0x318>

000000000002856c <mpfr_sinh_cosh@@Base>:
   2856c:	stp	x29, x30, [sp, #-416]!
   28570:	mov	x29, sp
   28574:	cmp	x0, x1
   28578:	b.eq	286e8 <mpfr_sinh_cosh@@Base+0x17c>  // b.none
   2857c:	stp	x21, x22, [sp, #32]
   28580:	stp	x23, x24, [sp, #48]
   28584:	stp	x27, x28, [sp, #80]
   28588:	mov	x22, x0
   2858c:	mov	x23, x1
   28590:	mov	x27, x2
   28594:	mov	w28, w3
   28598:	ldr	x0, [x2, #16]
   2859c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   285a0:	cmp	x0, x1
   285a4:	b.le	28714 <mpfr_sinh_cosh@@Base+0x1a8>
   285a8:	stp	x19, x20, [sp, #16]
   285ac:	stp	x25, x26, [sp, #64]
   285b0:	ldr	x1, [x2]
   285b4:	str	x1, [sp, #384]
   285b8:	ldr	x1, [x2, #24]
   285bc:	str	x1, [sp, #408]
   285c0:	mov	w1, #0x1                   	// #1
   285c4:	str	w1, [sp, #392]
   285c8:	str	x0, [sp, #400]
   285cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   285d0:	ldr	x1, [x0, #2576]
   285d4:	add	x0, x0, #0xa10
   285d8:	blr	x1
   285dc:	mrs	x1, tpidr_el0
   285e0:	ldr	w0, [x1, x0]
   285e4:	str	w0, [sp, #124]
   285e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   285ec:	ldr	x2, [x0, #2512]
   285f0:	add	x0, x0, #0x9d0
   285f4:	blr	x2
   285f8:	add	x2, x1, x0
   285fc:	ldr	x0, [x1, x0]
   28600:	str	x0, [sp, #128]
   28604:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28608:	ldr	x3, [x0, #2544]
   2860c:	add	x0, x0, #0x9f0
   28610:	blr	x3
   28614:	ldr	x3, [x1, x0]
   28618:	str	x3, [sp, #136]
   2861c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   28620:	str	x3, [x2]
   28624:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   28628:	str	x2, [x1, x0]
   2862c:	ldr	x0, [x23]
   28630:	ldr	x19, [x22]
   28634:	cmp	x19, x0
   28638:	csel	x19, x19, x0, ge  // ge = tcont
   2863c:	cmp	x19, #0x1
   28640:	b.eq	287f8 <mpfr_sinh_cosh@@Base+0x28c>  // b.none
   28644:	b.le	287c8 <mpfr_sinh_cosh@@Base+0x25c>
   28648:	sub	x0, x19, #0x1
   2864c:	clz	x1, x0
   28650:	mov	w0, #0x40                  	// #64
   28654:	sub	w0, w0, w1
   28658:	add	x19, x19, w0, sxtw
   2865c:	add	x20, x19, #0x4
   28660:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   28664:	cmp	x20, x0
   28668:	b.ge	287e0 <mpfr_sinh_cosh@@Base+0x274>  // b.tcont
   2866c:	add	x0, x19, #0x42
   28670:	adds	x19, x19, #0x3
   28674:	csel	x19, x0, x19, mi  // mi = first
   28678:	asr	x19, x19, #6
   2867c:	add	x19, x19, #0x1
   28680:	add	x0, x19, x19, lsl #1
   28684:	cmp	x0, #0x10
   28688:	b.gt	287e4 <mpfr_sinh_cosh@@Base+0x278>
   2868c:	str	xzr, [sp, #240]
   28690:	add	x0, sp, #0x100
   28694:	str	x0, [sp, #248]
   28698:	str	x20, [sp, #144]
   2869c:	ldr	x1, [sp, #248]
   286a0:	str	x1, [sp, #168]
   286a4:	mov	w0, #0x1                   	// #1
   286a8:	str	w0, [sp, #152]
   286ac:	str	x20, [sp, #176]
   286b0:	add	x2, x1, x19, lsl #3
   286b4:	str	x2, [sp, #200]
   286b8:	str	w0, [sp, #184]
   286bc:	str	x20, [sp, #208]
   286c0:	add	x19, x1, x19, lsl #4
   286c4:	str	x19, [sp, #232]
   286c8:	str	w0, [sp, #216]
   286cc:	mov	x26, #0x40                  	// #64
   286d0:	add	x0, sp, #0x180
   286d4:	str	x0, [sp, #104]
   286d8:	add	x21, sp, #0x90
   286dc:	add	x25, sp, #0xd0
   286e0:	add	x24, sp, #0xb0
   286e4:	b	288d0 <mpfr_sinh_cosh@@Base+0x364>
   286e8:	stp	x19, x20, [sp, #16]
   286ec:	stp	x21, x22, [sp, #32]
   286f0:	stp	x23, x24, [sp, #48]
   286f4:	stp	x25, x26, [sp, #64]
   286f8:	stp	x27, x28, [sp, #80]
   286fc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   28700:	add	x2, x2, #0xbb0
   28704:	mov	w1, #0x28                  	// #40
   28708:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2870c:	add	x0, x0, #0xbc0
   28710:	bl	cb40 <mpfr_assert_fail@plt>
   28714:	mov	x1, #0x2                   	// #2
   28718:	movk	x1, #0x8000, lsl #48
   2871c:	cmp	x0, x1
   28720:	b.eq	28770 <mpfr_sinh_cosh@@Base+0x204>  // b.none
   28724:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   28728:	cmp	x0, x1
   2872c:	b.eq	287a4 <mpfr_sinh_cosh@@Base+0x238>  // b.none
   28730:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28734:	str	x0, [x22, #16]
   28738:	ldr	w0, [x2, #8]
   2873c:	str	w0, [x22, #8]
   28740:	mov	x2, #0x0                   	// #0
   28744:	mov	x1, #0x1                   	// #1
   28748:	mov	x0, x23
   2874c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   28750:	cbz	w0, 28be4 <mpfr_sinh_cosh@@Base+0x678>
   28754:	stp	x19, x20, [sp, #16]
   28758:	cmp	w0, #0x0
   2875c:	mov	w0, #0x4                   	// #4
   28760:	mov	w19, #0x8                   	// #8
   28764:	csel	w0, w0, w19, gt
   28768:	ldp	x19, x20, [sp, #16]
   2876c:	b	28be4 <mpfr_sinh_cosh@@Base+0x678>
   28770:	str	x1, [x23, #16]
   28774:	str	x1, [x22, #16]
   28778:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2877c:	ldr	x1, [x0, #2576]
   28780:	add	x0, x0, #0xa10
   28784:	blr	x1
   28788:	mrs	x1, tpidr_el0
   2878c:	add	x0, x1, x0
   28790:	ldr	w1, [x0]
   28794:	orr	w1, w1, #0x4
   28798:	str	w1, [x0]
   2879c:	mov	w0, #0x0                   	// #0
   287a0:	b	28be4 <mpfr_sinh_cosh@@Base+0x678>
   287a4:	mov	x0, x1
   287a8:	str	x1, [x22, #16]
   287ac:	ldr	w1, [x2, #8]
   287b0:	str	w1, [x22, #8]
   287b4:	str	x0, [x23, #16]
   287b8:	mov	w0, #0x1                   	// #1
   287bc:	str	w0, [x23, #8]
   287c0:	mov	w0, #0x0                   	// #0
   287c4:	b	28be4 <mpfr_sinh_cosh@@Base+0x678>
   287c8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   287cc:	add	x2, x2, #0xbd0
   287d0:	mov	w1, #0x60                  	// #96
   287d4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   287d8:	add	x0, x0, #0xbc0
   287dc:	bl	cb40 <mpfr_assert_fail@plt>
   287e0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   287e4:	lsl	x0, x0, #3
   287e8:	str	x0, [sp, #240]
   287ec:	bl	ccf0 <mpfr_allocate_func@plt>
   287f0:	str	x0, [sp, #248]
   287f4:	b	28698 <mpfr_sinh_cosh@@Base+0x12c>
   287f8:	mov	x20, #0x5                   	// #5
   287fc:	b	2868c <mpfr_sinh_cosh@@Base+0x120>
   28800:	mov	w2, #0x1                   	// #1
   28804:	mov	w1, w28
   28808:	mov	x0, x23
   2880c:	bl	bf40 <mpfr_overflow@plt>
   28810:	mov	w20, w0
   28814:	mov	w2, w28
   28818:	mov	x1, x27
   2881c:	mov	x0, x22
   28820:	bl	c320 <mpfr_sinh@plt>
   28824:	mov	w19, w0
   28828:	ldr	w0, [sp, #124]
   2882c:	orr	w0, w0, #0x2
   28830:	str	w0, [sp, #124]
   28834:	b	28a4c <mpfr_sinh_cosh@@Base+0x4e0>
   28838:	mov	x19, x20
   2883c:	add	x20, x20, x19
   28840:	mov	x0, #0xfffffffffffffeff    	// #-257
   28844:	movk	x0, #0x7fff, lsl #48
   28848:	sub	x0, x0, x20
   2884c:	cmp	x0, x26
   28850:	b.lt	28b34 <mpfr_sinh_cosh@@Base+0x5c8>  // b.tstop
   28854:	add	x20, x26, x20
   28858:	add	x26, x20, x20, lsr #63
   2885c:	asr	x26, x26, #1
   28860:	ldr	x1, [sp, #240]
   28864:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   28868:	cmp	x20, x0
   2886c:	b.ge	28b4c <mpfr_sinh_cosh@@Base+0x5e0>  // b.tcont
   28870:	add	x19, x20, #0x3e
   28874:	subs	x0, x20, #0x1
   28878:	csel	x19, x19, x0, mi  // mi = first
   2887c:	asr	x19, x19, #6
   28880:	add	x19, x19, #0x1
   28884:	add	x0, x19, x19, lsl #1
   28888:	lsl	x0, x0, #3
   2888c:	str	x0, [sp, #240]
   28890:	cbnz	x1, 28b50 <mpfr_sinh_cosh@@Base+0x5e4>
   28894:	bl	ccf0 <mpfr_allocate_func@plt>
   28898:	str	x0, [sp, #248]
   2889c:	str	x20, [sp, #144]
   288a0:	ldr	x1, [sp, #248]
   288a4:	str	x1, [sp, #168]
   288a8:	mov	w0, #0x1                   	// #1
   288ac:	str	w0, [sp, #152]
   288b0:	str	x20, [sp, #176]
   288b4:	add	x2, x1, x19, lsl #3
   288b8:	str	x2, [sp, #200]
   288bc:	str	w0, [sp, #184]
   288c0:	str	x20, [sp, #208]
   288c4:	add	x19, x1, x19, lsl #4
   288c8:	str	x19, [sp, #232]
   288cc:	str	w0, [sp, #216]
   288d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   288d4:	ldr	x1, [x0, #2576]
   288d8:	add	x0, x0, #0xa10
   288dc:	blr	x1
   288e0:	mrs	x1, tpidr_el0
   288e4:	add	x19, x1, x0
   288e8:	str	wzr, [x1, x0]
   288ec:	mov	w2, #0x3                   	// #3
   288f0:	ldr	x1, [sp, #104]
   288f4:	mov	x0, x21
   288f8:	bl	c750 <mpfr_exp@plt>
   288fc:	ldr	w0, [x19]
   28900:	tbnz	w0, #1, 28800 <mpfr_sinh_cosh@@Base+0x294>
   28904:	ldr	x19, [sp, #160]
   28908:	mov	w3, #0x2                   	// #2
   2890c:	mov	x2, x21
   28910:	mov	x1, #0x1                   	// #1
   28914:	mov	x0, x25
   28918:	bl	c2f0 <mpfr_ui_div@plt>
   2891c:	mov	w3, #0x2                   	// #2
   28920:	mov	x2, x25
   28924:	mov	x1, x21
   28928:	mov	x0, x24
   2892c:	bl	c1a0 <mpfr_add@plt>
   28930:	mov	w3, #0x0                   	// #0
   28934:	mov	x2, x25
   28938:	mov	x1, x21
   2893c:	mov	x0, x21
   28940:	bl	bb70 <mpfr_sub@plt>
   28944:	mov	w3, #0x0                   	// #0
   28948:	mov	x2, #0x1                   	// #1
   2894c:	mov	x1, x24
   28950:	mov	x0, x24
   28954:	bl	c8f0 <mpfr_div_2ui@plt>
   28958:	mov	w3, #0x0                   	// #0
   2895c:	mov	x2, #0x1                   	// #1
   28960:	mov	x1, x21
   28964:	mov	x0, x21
   28968:	bl	c8f0 <mpfr_div_2ui@plt>
   2896c:	ldr	x0, [sp, #160]
   28970:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   28974:	cmp	x0, x1
   28978:	b.eq	28838 <mpfr_sinh_cosh@@Base+0x2cc>  // b.none
   2897c:	sub	x19, x19, x0
   28980:	adds	x19, x19, #0x2
   28984:	csel	x19, x19, xzr, pl  // pl = nfrst
   28988:	add	x19, x19, #0x1
   2898c:	sub	x19, x20, x19
   28990:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   28994:	cmp	x0, x1
   28998:	b.le	2883c <mpfr_sinh_cosh@@Base+0x2d0>
   2899c:	cmp	w28, #0x0
   289a0:	cset	x0, eq  // eq = none
   289a4:	str	x0, [sp, #112]
   289a8:	ldr	x3, [x22]
   289ac:	cinc	x3, x3, eq  // eq = none
   289b0:	ldr	x0, [sp, #144]
   289b4:	add	x1, x0, #0x3e
   289b8:	subs	x0, x0, #0x1
   289bc:	csel	x1, x1, x0, mi  // mi = first
   289c0:	asr	x1, x1, #6
   289c4:	mov	x2, x19
   289c8:	add	x1, x1, #0x1
   289cc:	ldr	x0, [sp, #168]
   289d0:	bl	c370 <mpfr_round_p@plt>
   289d4:	cbz	w0, 2883c <mpfr_sinh_cosh@@Base+0x2d0>
   289d8:	ldr	x1, [sp, #192]
   289dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   289e0:	cmp	x1, x0
   289e4:	b.le	2883c <mpfr_sinh_cosh@@Base+0x2d0>
   289e8:	ldr	x3, [x23]
   289ec:	ldr	x0, [sp, #176]
   289f0:	add	x1, x0, #0x3e
   289f4:	subs	x0, x0, #0x1
   289f8:	csel	x1, x1, x0, mi  // mi = first
   289fc:	asr	x1, x1, #6
   28a00:	ldr	x0, [sp, #112]
   28a04:	add	x3, x0, x3
   28a08:	mov	x2, x19
   28a0c:	add	x1, x1, #0x1
   28a10:	ldr	x0, [sp, #200]
   28a14:	bl	c370 <mpfr_round_p@plt>
   28a18:	cbz	w0, 2883c <mpfr_sinh_cosh@@Base+0x2d0>
   28a1c:	ldr	w3, [x27, #8]
   28a20:	mov	w2, w28
   28a24:	add	x1, sp, #0x90
   28a28:	mov	x0, x22
   28a2c:	bl	c6a0 <mpfr_set4@plt>
   28a30:	mov	w19, w0
   28a34:	ldr	w3, [sp, #184]
   28a38:	mov	w2, w28
   28a3c:	add	x1, sp, #0xb0
   28a40:	mov	x0, x23
   28a44:	bl	c6a0 <mpfr_set4@plt>
   28a48:	mov	w20, w0
   28a4c:	ldr	x1, [sp, #240]
   28a50:	cbz	x1, 28a5c <mpfr_sinh_cosh@@Base+0x4f0>
   28a54:	ldr	x0, [sp, #248]
   28a58:	bl	cc20 <mpfr_free_func@plt>
   28a5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28a60:	ldr	x1, [x0, #2576]
   28a64:	add	x0, x0, #0xa10
   28a68:	blr	x1
   28a6c:	mrs	x1, tpidr_el0
   28a70:	ldr	w4, [sp, #124]
   28a74:	str	w4, [x1, x0]
   28a78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28a7c:	ldr	x2, [x0, #2512]
   28a80:	add	x0, x0, #0x9d0
   28a84:	blr	x2
   28a88:	ldr	x2, [sp, #128]
   28a8c:	str	x2, [x1, x0]
   28a90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28a94:	ldr	x3, [x0, #2544]
   28a98:	add	x0, x0, #0x9f0
   28a9c:	blr	x3
   28aa0:	ldr	x3, [sp, #136]
   28aa4:	str	x3, [x1, x0]
   28aa8:	ldr	x0, [x22, #16]
   28aac:	cmp	x3, x0
   28ab0:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   28ab4:	b.gt	28b64 <mpfr_sinh_cosh@@Base+0x5f8>
   28ab8:	cbz	w19, 28c60 <mpfr_sinh_cosh@@Base+0x6f4>
   28abc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28ac0:	ldr	x1, [x0, #2576]
   28ac4:	add	x0, x0, #0xa10
   28ac8:	blr	x1
   28acc:	mrs	x2, tpidr_el0
   28ad0:	orr	w1, w4, #0x8
   28ad4:	str	w1, [x2, x0]
   28ad8:	ldr	x1, [x23, #16]
   28adc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28ae0:	ldr	x3, [x0, #2512]
   28ae4:	add	x0, x0, #0x9d0
   28ae8:	blr	x3
   28aec:	ldr	x0, [x2, x0]
   28af0:	cmp	x0, x1
   28af4:	b.gt	28c3c <mpfr_sinh_cosh@@Base+0x6d0>
   28af8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28afc:	ldr	x2, [x0, #2544]
   28b00:	add	x0, x0, #0x9f0
   28b04:	blr	x2
   28b08:	mrs	x2, tpidr_el0
   28b0c:	ldr	x0, [x2, x0]
   28b10:	cmp	x1, x0
   28b14:	b.le	28bf8 <mpfr_sinh_cosh@@Base+0x68c>
   28b18:	mov	w2, w28
   28b1c:	mov	w1, w20
   28b20:	mov	x0, x23
   28b24:	bl	cb30 <mpfr_check_range@plt>
   28b28:	mov	w20, w0
   28b2c:	cbnz	w19, 28c50 <mpfr_sinh_cosh@@Base+0x6e4>
   28b30:	b	28c14 <mpfr_sinh_cosh@@Base+0x6a8>
   28b34:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   28b38:	add	x2, x2, #0xbd8
   28b3c:	mov	w1, #0x94                  	// #148
   28b40:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   28b44:	add	x0, x0, #0xbc0
   28b48:	bl	cb40 <mpfr_assert_fail@plt>
   28b4c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   28b50:	mov	x2, x0
   28b54:	ldr	x0, [sp, #248]
   28b58:	bl	c1c0 <mpfr_reallocate_func@plt>
   28b5c:	str	x0, [sp, #248]
   28b60:	b	2889c <mpfr_sinh_cosh@@Base+0x330>
   28b64:	mov	w2, w28
   28b68:	mov	w1, w19
   28b6c:	mov	x0, x22
   28b70:	bl	cb30 <mpfr_check_range@plt>
   28b74:	mov	w19, w0
   28b78:	ldr	x1, [x23, #16]
   28b7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28b80:	ldr	x2, [x0, #2512]
   28b84:	add	x0, x0, #0x9d0
   28b88:	blr	x2
   28b8c:	mrs	x2, tpidr_el0
   28b90:	ldr	x0, [x2, x0]
   28b94:	cmp	x1, x0
   28b98:	b.lt	28b18 <mpfr_sinh_cosh@@Base+0x5ac>  // b.tstop
   28b9c:	b	28af8 <mpfr_sinh_cosh@@Base+0x58c>
   28ba0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28ba4:	ldr	x1, [x0, #2576]
   28ba8:	add	x0, x0, #0xa10
   28bac:	blr	x1
   28bb0:	mrs	x1, tpidr_el0
   28bb4:	add	x0, x1, x0
   28bb8:	ldr	w1, [x0]
   28bbc:	orr	w1, w1, #0x8
   28bc0:	str	w1, [x0]
   28bc4:	cbnz	w19, 28c08 <mpfr_sinh_cosh@@Base+0x69c>
   28bc8:	cmp	w20, #0x0
   28bcc:	mov	w20, #0x4                   	// #4
   28bd0:	mov	w0, #0x8                   	// #8
   28bd4:	csel	w20, w20, w0, gt
   28bd8:	orr	w0, w19, w20
   28bdc:	ldp	x19, x20, [sp, #16]
   28be0:	ldp	x25, x26, [sp, #64]
   28be4:	ldp	x21, x22, [sp, #32]
   28be8:	ldp	x23, x24, [sp, #48]
   28bec:	ldp	x27, x28, [sp, #80]
   28bf0:	ldp	x29, x30, [sp], #416
   28bf4:	ret
   28bf8:	cbnz	w20, 28ba0 <mpfr_sinh_cosh@@Base+0x634>
   28bfc:	cbnz	w19, 28c24 <mpfr_sinh_cosh@@Base+0x6b8>
   28c00:	mov	w20, w19
   28c04:	b	28bd8 <mpfr_sinh_cosh@@Base+0x66c>
   28c08:	cmp	w19, #0x0
   28c0c:	b.le	28c1c <mpfr_sinh_cosh@@Base+0x6b0>
   28c10:	mov	w19, #0x1                   	// #1
   28c14:	cbnz	w20, 28bc8 <mpfr_sinh_cosh@@Base+0x65c>
   28c18:	b	28bd8 <mpfr_sinh_cosh@@Base+0x66c>
   28c1c:	mov	w19, #0x2                   	// #2
   28c20:	b	28bc8 <mpfr_sinh_cosh@@Base+0x65c>
   28c24:	cmp	w19, #0x0
   28c28:	b.le	28c34 <mpfr_sinh_cosh@@Base+0x6c8>
   28c2c:	mov	w19, #0x1                   	// #1
   28c30:	b	28bd8 <mpfr_sinh_cosh@@Base+0x66c>
   28c34:	mov	w19, #0x2                   	// #2
   28c38:	b	28c14 <mpfr_sinh_cosh@@Base+0x6a8>
   28c3c:	mov	w2, w28
   28c40:	mov	w1, w20
   28c44:	mov	x0, x23
   28c48:	bl	cb30 <mpfr_check_range@plt>
   28c4c:	mov	w20, w0
   28c50:	cmp	w19, #0x0
   28c54:	b.gt	28c10 <mpfr_sinh_cosh@@Base+0x6a4>
   28c58:	mov	w19, #0x2                   	// #2
   28c5c:	b	28c14 <mpfr_sinh_cosh@@Base+0x6a8>
   28c60:	ldr	x1, [x23, #16]
   28c64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28c68:	ldr	x2, [x0, #2512]
   28c6c:	add	x0, x0, #0x9d0
   28c70:	blr	x2
   28c74:	mrs	x2, tpidr_el0
   28c78:	ldr	x0, [x2, x0]
   28c7c:	cmp	x1, x0
   28c80:	b.ge	28af8 <mpfr_sinh_cosh@@Base+0x58c>  // b.tcont
   28c84:	mov	w2, w28
   28c88:	mov	w1, w20
   28c8c:	mov	x0, x23
   28c90:	bl	cb30 <mpfr_check_range@plt>
   28c94:	mov	w20, w0
   28c98:	b	28c14 <mpfr_sinh_cosh@@Base+0x6a8>

0000000000028c9c <mpfr_acosh@@Base>:
   28c9c:	stp	x29, x30, [sp, #-192]!
   28ca0:	mov	x29, sp
   28ca4:	stp	x19, x20, [sp, #16]
   28ca8:	stp	x21, x22, [sp, #32]
   28cac:	mov	x22, x0
   28cb0:	mov	x21, x1
   28cb4:	str	w2, [sp, #108]
   28cb8:	ldr	x0, [x1, #16]
   28cbc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   28cc0:	cmp	x0, x1
   28cc4:	b.le	28f2c <mpfr_acosh@@Base+0x290>
   28cc8:	mov	x2, #0x0                   	// #0
   28ccc:	mov	x1, #0x1                   	// #1
   28cd0:	mov	x0, x21
   28cd4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   28cd8:	mov	w19, w0
   28cdc:	tbnz	w0, #31, 28f88 <mpfr_acosh@@Base+0x2ec>
   28ce0:	cbz	w0, 28fc0 <mpfr_acosh@@Base+0x324>
   28ce4:	stp	x23, x24, [sp, #48]
   28ce8:	stp	x25, x26, [sp, #64]
   28cec:	stp	x27, x28, [sp, #80]
   28cf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28cf4:	ldr	x1, [x0, #2576]
   28cf8:	add	x0, x0, #0xa10
   28cfc:	blr	x1
   28d00:	mrs	x1, tpidr_el0
   28d04:	ldr	w24, [x1, x0]
   28d08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28d0c:	ldr	x2, [x0, #2512]
   28d10:	add	x0, x0, #0x9d0
   28d14:	blr	x2
   28d18:	add	x2, x1, x0
   28d1c:	ldr	x27, [x1, x0]
   28d20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28d24:	ldr	x3, [x0, #2544]
   28d28:	add	x0, x0, #0x9f0
   28d2c:	blr	x3
   28d30:	ldr	x28, [x1, x0]
   28d34:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   28d38:	str	x3, [x2]
   28d3c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   28d40:	str	x2, [x1, x0]
   28d44:	ldr	x25, [x22]
   28d48:	add	x23, x25, #0x4
   28d4c:	cmp	x25, #0x1
   28d50:	b.eq	28fec <mpfr_acosh@@Base+0x350>  // b.none
   28d54:	b.le	28fd4 <mpfr_acosh@@Base+0x338>
   28d58:	sub	x0, x25, #0x1
   28d5c:	clz	x1, x0
   28d60:	mov	w0, #0x40                  	// #64
   28d64:	sub	w0, w0, w1
   28d68:	sxtw	x0, w0
   28d6c:	add	x23, x23, x0
   28d70:	mov	x1, x23
   28d74:	add	x0, sp, #0x80
   28d78:	bl	ca80 <mpfr_init2@plt>
   28d7c:	mov	x0, #0x40                  	// #64
   28d80:	str	x0, [sp, #112]
   28d84:	mrs	x26, tpidr_el0
   28d88:	add	x20, sp, #0x80
   28d8c:	add	x0, sp, #0xa0
   28d90:	str	x0, [sp, #120]
   28d94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28d98:	ldr	x1, [x0, #2576]
   28d9c:	add	x0, x0, #0xa10
   28da0:	blr	x1
   28da4:	add	x19, x26, x0
   28da8:	str	wzr, [x26, x0]
   28dac:	mov	w3, #0x3                   	// #3
   28db0:	mov	x2, x21
   28db4:	mov	x1, x21
   28db8:	mov	x0, x20
   28dbc:	bl	bd50 <mpfr_mul@plt>
   28dc0:	ldr	w0, [x19]
   28dc4:	tbnz	w0, #1, 28ff4 <mpfr_acosh@@Base+0x358>
   28dc8:	ldr	x19, [sp, #144]
   28dcc:	mov	w3, #0x3                   	// #3
   28dd0:	mov	x2, #0x1                   	// #1
   28dd4:	mov	x1, x20
   28dd8:	mov	x0, x20
   28ddc:	bl	c530 <mpfr_sub_ui@plt>
   28de0:	ldr	x0, [sp, #144]
   28de4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   28de8:	cmp	x0, x1
   28dec:	b.eq	29064 <mpfr_acosh@@Base+0x3c8>  // b.none
   28df0:	sub	x19, x19, x0
   28df4:	mov	w2, #0x0                   	// #0
   28df8:	mov	x1, x20
   28dfc:	mov	x0, x20
   28e00:	bl	c930 <mpfr_sqrt@plt>
   28e04:	mov	w3, #0x0                   	// #0
   28e08:	mov	x2, x21
   28e0c:	mov	x1, x20
   28e10:	mov	x0, x20
   28e14:	bl	c1a0 <mpfr_add@plt>
   28e18:	mov	w2, #0x0                   	// #0
   28e1c:	mov	x1, x20
   28e20:	mov	x0, x20
   28e24:	bl	c090 <mpfr_log@plt>
   28e28:	cmp	x19, #0x0
   28e2c:	csinc	x2, x19, xzr, gt
   28e30:	add	x2, x2, #0x3
   28e34:	ldr	x19, [sp, #144]
   28e38:	subs	x2, x2, x19
   28e3c:	csinv	x2, x2, xzr, pl  // pl = nfrst
   28e40:	add	x2, x2, #0x1
   28e44:	ldr	x1, [sp, #144]
   28e48:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   28e4c:	cmp	x1, x0
   28e50:	b.le	290a4 <mpfr_acosh@@Base+0x408>
   28e54:	ldr	w0, [sp, #108]
   28e58:	cmp	w0, #0x0
   28e5c:	cinc	x3, x25, eq  // eq = none
   28e60:	ldr	x0, [sp, #128]
   28e64:	add	x1, x0, #0x3e
   28e68:	subs	x0, x0, #0x1
   28e6c:	csel	x1, x1, x0, mi  // mi = first
   28e70:	asr	x1, x1, #6
   28e74:	sub	x2, x23, x2
   28e78:	add	x1, x1, #0x1
   28e7c:	ldr	x0, [sp, #152]
   28e80:	bl	c370 <mpfr_round_p@plt>
   28e84:	cbz	w0, 290a4 <mpfr_acosh@@Base+0x408>
   28e88:	add	x20, sp, #0x80
   28e8c:	ldr	w3, [sp, #136]
   28e90:	ldr	w2, [sp, #108]
   28e94:	mov	x1, x20
   28e98:	mov	x0, x22
   28e9c:	bl	c6a0 <mpfr_set4@plt>
   28ea0:	mov	w19, w0
   28ea4:	mov	x0, x20
   28ea8:	bl	c070 <mpfr_clear@plt>
   28eac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28eb0:	ldr	x1, [x0, #2576]
   28eb4:	add	x0, x0, #0xa10
   28eb8:	blr	x1
   28ebc:	mrs	x1, tpidr_el0
   28ec0:	str	w24, [x1, x0]
   28ec4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28ec8:	ldr	x2, [x0, #2512]
   28ecc:	add	x0, x0, #0x9d0
   28ed0:	blr	x2
   28ed4:	str	x27, [x1, x0]
   28ed8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28edc:	ldr	x2, [x0, #2544]
   28ee0:	add	x0, x0, #0x9f0
   28ee4:	blr	x2
   28ee8:	str	x28, [x1, x0]
   28eec:	ldr	x0, [x22, #16]
   28ef0:	cmp	x28, x0
   28ef4:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   28ef8:	b.gt	290f8 <mpfr_acosh@@Base+0x45c>
   28efc:	cbz	w19, 2911c <mpfr_acosh@@Base+0x480>
   28f00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28f04:	ldr	x1, [x0, #2576]
   28f08:	add	x0, x0, #0xa10
   28f0c:	blr	x1
   28f10:	orr	w1, w24, #0x8
   28f14:	mrs	x2, tpidr_el0
   28f18:	str	w1, [x2, x0]
   28f1c:	ldp	x23, x24, [sp, #48]
   28f20:	ldp	x25, x26, [sp, #64]
   28f24:	ldp	x27, x28, [sp, #80]
   28f28:	b	29128 <mpfr_acosh@@Base+0x48c>
   28f2c:	b.ne	28f50 <mpfr_acosh@@Base+0x2b4>  // b.any
   28f30:	ldr	w0, [x21, #8]
   28f34:	cmp	w0, #0x0
   28f38:	b.le	28f50 <mpfr_acosh@@Base+0x2b4>
   28f3c:	str	x1, [x22, #16]
   28f40:	mov	w0, #0x1                   	// #1
   28f44:	str	w0, [x22, #8]
   28f48:	mov	w19, #0x0                   	// #0
   28f4c:	b	29128 <mpfr_acosh@@Base+0x48c>
   28f50:	mov	x0, #0x2                   	// #2
   28f54:	movk	x0, #0x8000, lsl #48
   28f58:	str	x0, [x22, #16]
   28f5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28f60:	ldr	x1, [x0, #2576]
   28f64:	add	x0, x0, #0xa10
   28f68:	blr	x1
   28f6c:	mrs	x1, tpidr_el0
   28f70:	add	x0, x1, x0
   28f74:	ldr	w1, [x0]
   28f78:	orr	w1, w1, #0x4
   28f7c:	str	w1, [x0]
   28f80:	mov	w19, #0x0                   	// #0
   28f84:	b	29128 <mpfr_acosh@@Base+0x48c>
   28f88:	mov	x0, #0x2                   	// #2
   28f8c:	movk	x0, #0x8000, lsl #48
   28f90:	str	x0, [x22, #16]
   28f94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   28f98:	ldr	x1, [x0, #2576]
   28f9c:	add	x0, x0, #0xa10
   28fa0:	blr	x1
   28fa4:	mrs	x1, tpidr_el0
   28fa8:	add	x0, x1, x0
   28fac:	ldr	w1, [x0]
   28fb0:	orr	w1, w1, #0x4
   28fb4:	str	w1, [x0]
   28fb8:	mov	w19, #0x0                   	// #0
   28fbc:	b	29128 <mpfr_acosh@@Base+0x48c>
   28fc0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28fc4:	str	x0, [x22, #16]
   28fc8:	mov	w0, #0x1                   	// #1
   28fcc:	str	w0, [x22, #8]
   28fd0:	b	29128 <mpfr_acosh@@Base+0x48c>
   28fd4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   28fd8:	add	x2, x2, #0x218
   28fdc:	mov	w1, #0x53                  	// #83
   28fe0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   28fe4:	add	x0, x0, #0xc20
   28fe8:	bl	cb40 <mpfr_assert_fail@plt>
   28fec:	mov	x0, #0x0                   	// #0
   28ff0:	b	28d6c <mpfr_acosh@@Base+0xd0>
   28ff4:	mov	w2, #0x0                   	// #0
   28ff8:	mov	x1, x21
   28ffc:	mov	x0, x20
   29000:	bl	c090 <mpfr_log@plt>
   29004:	ldr	x0, [sp, #144]
   29008:	sub	x1, x23, x0
   2900c:	cmp	x0, x23
   29010:	csinc	x1, x1, xzr, lt  // lt = tstop
   29014:	ldr	x19, [sp, #120]
   29018:	mov	x0, x19
   2901c:	bl	ca80 <mpfr_init2@plt>
   29020:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29024:	ldr	x1, [x0, #2560]
   29028:	add	x0, x0, #0xa00
   2902c:	blr	x1
   29030:	mov	w2, #0x0                   	// #0
   29034:	add	x1, x26, x0
   29038:	mov	x0, x19
   2903c:	bl	c380 <mpfr_cache@plt>
   29040:	mov	w3, #0x0                   	// #0
   29044:	mov	x2, x19
   29048:	mov	x1, x20
   2904c:	mov	x0, x20
   29050:	bl	c1a0 <mpfr_add@plt>
   29054:	mov	x0, x19
   29058:	bl	c070 <mpfr_clear@plt>
   2905c:	mov	x2, #0x1                   	// #1
   29060:	b	28e44 <mpfr_acosh@@Base+0x1a8>
   29064:	mov	w3, #0x3                   	// #3
   29068:	mov	x2, #0x1                   	// #1
   2906c:	mov	x1, x21
   29070:	mov	x0, x20
   29074:	bl	c530 <mpfr_sub_ui@plt>
   29078:	mov	w3, #0x0                   	// #0
   2907c:	mov	x2, #0x1                   	// #1
   29080:	mov	x1, x20
   29084:	mov	x0, x20
   29088:	bl	c2c0 <mpfr_mul_2ui@plt>
   2908c:	mov	w2, #0x0                   	// #0
   29090:	mov	x1, x20
   29094:	mov	x0, x20
   29098:	bl	c930 <mpfr_sqrt@plt>
   2909c:	mov	x2, #0x1                   	// #1
   290a0:	b	28e44 <mpfr_acosh@@Base+0x1a8>
   290a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   290a8:	movk	x0, #0x7fff, lsl #48
   290ac:	sub	x0, x0, x23
   290b0:	ldr	x1, [sp, #112]
   290b4:	cmp	x0, x1
   290b8:	b.lt	290e0 <mpfr_acosh@@Base+0x444>  // b.tstop
   290bc:	ldr	x0, [sp, #112]
   290c0:	add	x23, x23, x0
   290c4:	add	x0, x23, x23, lsr #63
   290c8:	asr	x0, x0, #1
   290cc:	str	x0, [sp, #112]
   290d0:	mov	x1, x23
   290d4:	mov	x0, x20
   290d8:	bl	bed0 <mpfr_set_prec@plt>
   290dc:	b	28d94 <mpfr_acosh@@Base+0xf8>
   290e0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   290e4:	add	x2, x2, #0x230
   290e8:	mov	w1, #0x92                  	// #146
   290ec:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   290f0:	add	x0, x0, #0xc20
   290f4:	bl	cb40 <mpfr_assert_fail@plt>
   290f8:	ldr	w2, [sp, #108]
   290fc:	mov	w1, w19
   29100:	mov	x0, x22
   29104:	bl	cb30 <mpfr_check_range@plt>
   29108:	mov	w19, w0
   2910c:	ldp	x23, x24, [sp, #48]
   29110:	ldp	x25, x26, [sp, #64]
   29114:	ldp	x27, x28, [sp, #80]
   29118:	b	29128 <mpfr_acosh@@Base+0x48c>
   2911c:	ldp	x23, x24, [sp, #48]
   29120:	ldp	x25, x26, [sp, #64]
   29124:	ldp	x27, x28, [sp, #80]
   29128:	mov	w0, w19
   2912c:	ldp	x19, x20, [sp, #16]
   29130:	ldp	x21, x22, [sp, #32]
   29134:	ldp	x29, x30, [sp], #192
   29138:	ret

000000000002913c <mpfr_asinh@@Base>:
   2913c:	stp	x29, x30, [sp, #-160]!
   29140:	mov	x29, sp
   29144:	stp	x19, x20, [sp, #16]
   29148:	stp	x21, x22, [sp, #32]
   2914c:	mov	x21, x0
   29150:	mov	x20, x1
   29154:	str	w2, [sp, #108]
   29158:	ldr	x2, [x1, #16]
   2915c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   29160:	cmp	x2, x0
   29164:	b.le	293b8 <mpfr_asinh@@Base+0x27c>
   29168:	neg	x2, x2, lsl #1
   2916c:	cmp	x2, #0x0
   29170:	b.le	29188 <mpfr_asinh@@Base+0x4c>
   29174:	add	x2, x2, #0x2
   29178:	ldr	x0, [x21]
   2917c:	add	x0, x0, #0x1
   29180:	cmp	x0, x2
   29184:	b.cc	29430 <mpfr_asinh@@Base+0x2f4>  // b.lo, b.ul, b.last
   29188:	stp	x23, x24, [sp, #48]
   2918c:	stp	x25, x26, [sp, #64]
   29190:	stp	x27, x28, [sp, #80]
   29194:	ldr	x22, [x21]
   29198:	ldr	w28, [x20, #8]
   2919c:	add	x23, x22, #0x4
   291a0:	cmp	x22, #0x1
   291a4:	b.eq	29464 <mpfr_asinh@@Base+0x328>  // b.none
   291a8:	b.le	2944c <mpfr_asinh@@Base+0x310>
   291ac:	sub	x0, x22, #0x1
   291b0:	clz	x1, x0
   291b4:	mov	w0, #0x40                  	// #64
   291b8:	sub	w0, w0, w1
   291bc:	sxtw	x0, w0
   291c0:	add	x23, x23, x0
   291c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   291c8:	ldr	x1, [x0, #2576]
   291cc:	add	x0, x0, #0xa10
   291d0:	blr	x1
   291d4:	mrs	x1, tpidr_el0
   291d8:	ldr	w24, [x1, x0]
   291dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   291e0:	ldr	x2, [x0, #2512]
   291e4:	add	x0, x0, #0x9d0
   291e8:	blr	x2
   291ec:	add	x2, x1, x0
   291f0:	ldr	x26, [x1, x0]
   291f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   291f8:	ldr	x3, [x0, #2544]
   291fc:	add	x0, x0, #0x9f0
   29200:	blr	x3
   29204:	ldr	x27, [x1, x0]
   29208:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2920c:	str	x3, [x2]
   29210:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   29214:	str	x2, [x1, x0]
   29218:	mov	x1, x23
   2921c:	add	x0, sp, #0x80
   29220:	bl	ca80 <mpfr_init2@plt>
   29224:	cmp	w28, #0x0
   29228:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   2922c:	ldr	x1, [x1, #3944]
   29230:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   29234:	ldr	x0, [x0, #4008]
   29238:	csel	x0, x1, x0, lt  // lt = tstop
   2923c:	str	x0, [sp, #112]
   29240:	mov	x0, #0x40                  	// #64
   29244:	str	x0, [sp, #120]
   29248:	add	x19, sp, #0x80
   2924c:	mov	w25, #0x3                   	// #3
   29250:	mov	w3, w25
   29254:	mov	x2, x20
   29258:	mov	x1, x20
   2925c:	mov	x0, x19
   29260:	bl	bd50 <mpfr_mul@plt>
   29264:	mov	w3, w25
   29268:	mov	x2, #0x1                   	// #1
   2926c:	mov	x1, x19
   29270:	mov	x0, x19
   29274:	bl	c260 <mpfr_add_ui@plt>
   29278:	mov	w2, #0x0                   	// #0
   2927c:	mov	x1, x19
   29280:	mov	x0, x19
   29284:	bl	c930 <mpfr_sqrt@plt>
   29288:	mov	w3, #0x0                   	// #0
   2928c:	mov	x2, x20
   29290:	mov	x1, x19
   29294:	mov	x0, x19
   29298:	ldr	x4, [sp, #112]
   2929c:	blr	x4
   292a0:	mov	w2, #0x0                   	// #0
   292a4:	mov	x1, x19
   292a8:	mov	x0, x19
   292ac:	bl	c090 <mpfr_log@plt>
   292b0:	ldr	x0, [sp, #144]
   292b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   292b8:	cmp	x0, x1
   292bc:	b.le	2946c <mpfr_asinh@@Base+0x330>
   292c0:	ldr	w1, [sp, #108]
   292c4:	cmp	w1, #0x0
   292c8:	cinc	x3, x22, eq  // eq = none
   292cc:	mov	x2, #0x4                   	// #4
   292d0:	subs	x2, x2, x0
   292d4:	csel	x2, x2, xzr, pl  // pl = nfrst
   292d8:	add	x2, x2, #0x1
   292dc:	ldr	x0, [sp, #128]
   292e0:	add	x1, x0, #0x3e
   292e4:	subs	x0, x0, #0x1
   292e8:	csel	x1, x1, x0, mi  // mi = first
   292ec:	asr	x1, x1, #6
   292f0:	sub	x2, x23, x2
   292f4:	add	x1, x1, #0x1
   292f8:	ldr	x0, [sp, #152]
   292fc:	bl	c370 <mpfr_round_p@plt>
   29300:	cbz	w0, 2946c <mpfr_asinh@@Base+0x330>
   29304:	add	x20, sp, #0x80
   29308:	mov	w3, w28
   2930c:	ldr	w2, [sp, #108]
   29310:	mov	x1, x20
   29314:	mov	x0, x21
   29318:	bl	c6a0 <mpfr_set4@plt>
   2931c:	mov	w19, w0
   29320:	mov	x0, x20
   29324:	bl	c070 <mpfr_clear@plt>
   29328:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2932c:	ldr	x1, [x0, #2576]
   29330:	add	x0, x0, #0xa10
   29334:	blr	x1
   29338:	mrs	x1, tpidr_el0
   2933c:	str	w24, [x1, x0]
   29340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29344:	ldr	x2, [x0, #2512]
   29348:	add	x0, x0, #0x9d0
   2934c:	blr	x2
   29350:	str	x26, [x1, x0]
   29354:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29358:	ldr	x2, [x0, #2544]
   2935c:	add	x0, x0, #0x9f0
   29360:	blr	x2
   29364:	str	x27, [x1, x0]
   29368:	ldr	x0, [x21, #16]
   2936c:	cmp	x27, x0
   29370:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   29374:	b.gt	294c0 <mpfr_asinh@@Base+0x384>
   29378:	cbz	w19, 294e4 <mpfr_asinh@@Base+0x3a8>
   2937c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29380:	ldr	x1, [x0, #2576]
   29384:	add	x0, x0, #0xa10
   29388:	blr	x1
   2938c:	orr	w1, w24, #0x8
   29390:	mrs	x2, tpidr_el0
   29394:	str	w1, [x2, x0]
   29398:	ldp	x23, x24, [sp, #48]
   2939c:	ldp	x25, x26, [sp, #64]
   293a0:	ldp	x27, x28, [sp, #80]
   293a4:	mov	w0, w19
   293a8:	ldp	x19, x20, [sp, #16]
   293ac:	ldp	x21, x22, [sp, #32]
   293b0:	ldp	x29, x30, [sp], #160
   293b4:	ret
   293b8:	mov	x0, #0x2                   	// #2
   293bc:	movk	x0, #0x8000, lsl #48
   293c0:	cmp	x2, x0
   293c4:	b.eq	293ec <mpfr_asinh@@Base+0x2b0>  // b.none
   293c8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   293cc:	cmp	x2, x0
   293d0:	b.eq	2941c <mpfr_asinh@@Base+0x2e0>  // b.none
   293d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   293d8:	str	x0, [x21, #16]
   293dc:	ldr	w0, [x1, #8]
   293e0:	str	w0, [x21, #8]
   293e4:	mov	w19, #0x0                   	// #0
   293e8:	b	293a4 <mpfr_asinh@@Base+0x268>
   293ec:	str	x0, [x21, #16]
   293f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   293f4:	ldr	x1, [x0, #2576]
   293f8:	add	x0, x0, #0xa10
   293fc:	blr	x1
   29400:	mrs	x1, tpidr_el0
   29404:	add	x0, x1, x0
   29408:	ldr	w1, [x0]
   2940c:	orr	w1, w1, #0x4
   29410:	str	w1, [x0]
   29414:	mov	w19, #0x0                   	// #0
   29418:	b	293a4 <mpfr_asinh@@Base+0x268>
   2941c:	str	x0, [x21, #16]
   29420:	ldr	w0, [x1, #8]
   29424:	str	w0, [x21, #8]
   29428:	mov	w19, #0x0                   	// #0
   2942c:	b	293a4 <mpfr_asinh@@Base+0x268>
   29430:	ldr	w4, [sp, #108]
   29434:	mov	w3, #0x0                   	// #0
   29438:	mov	x0, x21
   2943c:	bl	c540 <mpfr_round_near_x@plt>
   29440:	mov	w19, w0
   29444:	cbz	w0, 29188 <mpfr_asinh@@Base+0x4c>
   29448:	b	293a4 <mpfr_asinh@@Base+0x268>
   2944c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   29450:	add	x2, x2, #0x218
   29454:	mov	w1, #0x50                  	// #80
   29458:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2945c:	add	x0, x0, #0xc28
   29460:	bl	cb40 <mpfr_assert_fail@plt>
   29464:	mov	x0, #0x0                   	// #0
   29468:	b	291c0 <mpfr_asinh@@Base+0x84>
   2946c:	mov	x0, #0xfffffffffffffeff    	// #-257
   29470:	movk	x0, #0x7fff, lsl #48
   29474:	sub	x0, x0, x23
   29478:	ldr	x1, [sp, #120]
   2947c:	cmp	x0, x1
   29480:	b.lt	294a8 <mpfr_asinh@@Base+0x36c>  // b.tstop
   29484:	ldr	x0, [sp, #120]
   29488:	add	x23, x23, x0
   2948c:	add	x0, x23, x23, lsr #63
   29490:	asr	x0, x0, #1
   29494:	str	x0, [sp, #120]
   29498:	mov	x1, x23
   2949c:	mov	x0, x19
   294a0:	bl	bed0 <mpfr_set_prec@plt>
   294a4:	b	29250 <mpfr_asinh@@Base+0x114>
   294a8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   294ac:	add	x2, x2, #0x230
   294b0:	mov	w1, #0x6c                  	// #108
   294b4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   294b8:	add	x0, x0, #0xc28
   294bc:	bl	cb40 <mpfr_assert_fail@plt>
   294c0:	ldr	w2, [sp, #108]
   294c4:	mov	w1, w19
   294c8:	mov	x0, x21
   294cc:	bl	cb30 <mpfr_check_range@plt>
   294d0:	mov	w19, w0
   294d4:	ldp	x23, x24, [sp, #48]
   294d8:	ldp	x25, x26, [sp, #64]
   294dc:	ldp	x27, x28, [sp, #80]
   294e0:	b	293a4 <mpfr_asinh@@Base+0x268>
   294e4:	ldp	x23, x24, [sp, #48]
   294e8:	ldp	x25, x26, [sp, #64]
   294ec:	ldp	x27, x28, [sp, #80]
   294f0:	b	293a4 <mpfr_asinh@@Base+0x268>

00000000000294f4 <mpfr_atanh@@Base>:
   294f4:	stp	x29, x30, [sp, #-352]!
   294f8:	mov	x29, sp
   294fc:	stp	x19, x20, [sp, #16]
   29500:	stp	x21, x22, [sp, #32]
   29504:	mov	x22, x0
   29508:	mov	x20, x1
   2950c:	str	w2, [sp, #112]
   29510:	ldr	x2, [x1, #16]
   29514:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   29518:	cmp	x2, x0
   2951c:	b.le	297bc <mpfr_atanh@@Base+0x2c8>
   29520:	cmp	x2, #0x0
   29524:	b.gt	29818 <mpfr_atanh@@Base+0x324>
   29528:	neg	x2, x2, lsl #1
   2952c:	cmp	x2, #0x0
   29530:	b.le	29548 <mpfr_atanh@@Base+0x54>
   29534:	add	x2, x2, #0x1
   29538:	ldr	x0, [x22]
   2953c:	add	x0, x0, #0x1
   29540:	cmp	x0, x2
   29544:	b.cc	298a0 <mpfr_atanh@@Base+0x3ac>  // b.lo, b.ul, b.last
   29548:	stp	x23, x24, [sp, #48]
   2954c:	stp	x25, x26, [sp, #64]
   29550:	stp	x27, x28, [sp, #80]
   29554:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29558:	ldr	x1, [x0, #2576]
   2955c:	add	x0, x0, #0xa10
   29560:	blr	x1
   29564:	mrs	x1, tpidr_el0
   29568:	ldr	w0, [x1, x0]
   2956c:	str	w0, [sp, #116]
   29570:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29574:	ldr	x2, [x0, #2512]
   29578:	add	x0, x0, #0x9d0
   2957c:	blr	x2
   29580:	add	x2, x1, x0
   29584:	ldr	x0, [x1, x0]
   29588:	str	x0, [sp, #120]
   2958c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29590:	ldr	x3, [x0, #2544]
   29594:	add	x0, x0, #0x9f0
   29598:	blr	x3
   2959c:	ldr	x28, [x1, x0]
   295a0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   295a4:	str	x3, [x2]
   295a8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   295ac:	str	x2, [x1, x0]
   295b0:	ldr	x0, [x20]
   295b4:	str	x0, [sp, #320]
   295b8:	ldr	x1, [x20, #24]
   295bc:	str	x1, [sp, #344]
   295c0:	mov	w1, #0x1                   	// #1
   295c4:	str	w1, [sp, #328]
   295c8:	ldr	x1, [x20, #16]
   295cc:	str	x1, [sp, #336]
   295d0:	ldr	x25, [x22]
   295d4:	cmp	x0, x25
   295d8:	csel	x0, x0, x25, ge  // ge = tcont
   295dc:	cmp	x0, #0x1
   295e0:	b.eq	298d4 <mpfr_atanh@@Base+0x3e0>  // b.none
   295e4:	b.le	298bc <mpfr_atanh@@Base+0x3c8>
   295e8:	sub	x19, x0, #0x1
   295ec:	clz	x1, x19
   295f0:	mov	w19, #0x40                  	// #64
   295f4:	sub	w19, w19, w1
   295f8:	sxtw	x19, w19
   295fc:	add	x19, x19, x0
   29600:	add	x19, x19, #0x4
   29604:	mov	x1, x19
   29608:	add	x0, sp, #0x120
   2960c:	bl	ca80 <mpfr_init2@plt>
   29610:	mov	x1, x19
   29614:	add	x0, sp, #0x100
   29618:	bl	ca80 <mpfr_init2@plt>
   2961c:	mov	x0, #0x40                  	// #64
   29620:	str	x0, [sp, #152]
   29624:	add	x0, sp, #0x140
   29628:	str	x0, [sp, #104]
   2962c:	add	x0, sp, #0x100
   29630:	str	x0, [sp, #136]
   29634:	add	x21, sp, #0x120
   29638:	add	x23, sp, #0xc0
   2963c:	add	x26, sp, #0xe0
   29640:	mov	x0, x25
   29644:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   29648:	add	w0, w0, #0x1
   2964c:	sxtw	x0, w0
   29650:	sdiv	x0, x25, x0
   29654:	mvn	x0, x0
   29658:	ldr	x1, [sp, #336]
   2965c:	cmp	x1, x0
   29660:	b.le	298dc <mpfr_atanh@@Base+0x3e8>
   29664:	mov	w3, #0x2                   	// #2
   29668:	ldr	x27, [sp, #104]
   2966c:	mov	x2, x27
   29670:	mov	x1, #0x1                   	// #1
   29674:	ldr	x24, [sp, #136]
   29678:	mov	x0, x24
   2967c:	bl	ca50 <mpfr_ui_sub@plt>
   29680:	mov	w3, #0x3                   	// #3
   29684:	mov	x2, #0x1                   	// #1
   29688:	mov	x1, x27
   2968c:	mov	x0, x21
   29690:	bl	c260 <mpfr_add_ui@plt>
   29694:	mov	w3, #0x0                   	// #0
   29698:	mov	x2, x24
   2969c:	mov	x1, x21
   296a0:	mov	x0, x21
   296a4:	bl	c620 <mpfr_div@plt>
   296a8:	mov	w2, #0x0                   	// #0
   296ac:	mov	x1, x21
   296b0:	mov	x0, x21
   296b4:	bl	c090 <mpfr_log@plt>
   296b8:	mov	w3, #0x0                   	// #0
   296bc:	mov	x2, #0x1                   	// #1
   296c0:	mov	x1, x21
   296c4:	mov	x0, x21
   296c8:	bl	c8f0 <mpfr_div_2ui@plt>
   296cc:	mov	x2, #0x4                   	// #4
   296d0:	ldr	x24, [sp, #304]
   296d4:	subs	x2, x2, x24
   296d8:	csel	x2, x2, xzr, pl  // pl = nfrst
   296dc:	add	x2, x2, #0x1
   296e0:	sub	x2, x19, x2
   296e4:	ldr	x0, [sp, #304]
   296e8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   296ec:	cmp	x0, x1
   296f0:	b.ne	29a14 <mpfr_atanh@@Base+0x520>  // b.any
   296f4:	add	x0, sp, #0x120
   296f8:	ldr	w3, [x20, #8]
   296fc:	ldr	w2, [sp, #112]
   29700:	mov	x20, x0
   29704:	mov	x1, x0
   29708:	mov	x0, x22
   2970c:	bl	c6a0 <mpfr_set4@plt>
   29710:	mov	w19, w0
   29714:	mov	x0, x20
   29718:	bl	c070 <mpfr_clear@plt>
   2971c:	add	x0, sp, #0x100
   29720:	bl	c070 <mpfr_clear@plt>
   29724:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29728:	ldr	x1, [x0, #2576]
   2972c:	add	x0, x0, #0xa10
   29730:	blr	x1
   29734:	mrs	x1, tpidr_el0
   29738:	ldr	w3, [sp, #116]
   2973c:	str	w3, [x1, x0]
   29740:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29744:	ldr	x2, [x0, #2512]
   29748:	add	x0, x0, #0x9d0
   2974c:	blr	x2
   29750:	ldr	x2, [sp, #120]
   29754:	str	x2, [x1, x0]
   29758:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2975c:	ldr	x4, [x0, #2544]
   29760:	add	x0, x0, #0x9f0
   29764:	blr	x4
   29768:	str	x28, [x1, x0]
   2976c:	ldr	x0, [x22, #16]
   29770:	cmp	x28, x0
   29774:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   29778:	b.gt	29ab0 <mpfr_atanh@@Base+0x5bc>
   2977c:	cbz	w19, 29ad4 <mpfr_atanh@@Base+0x5e0>
   29780:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29784:	ldr	x1, [x0, #2576]
   29788:	add	x0, x0, #0xa10
   2978c:	blr	x1
   29790:	orr	w1, w3, #0x8
   29794:	mrs	x2, tpidr_el0
   29798:	str	w1, [x2, x0]
   2979c:	ldp	x23, x24, [sp, #48]
   297a0:	ldp	x25, x26, [sp, #64]
   297a4:	ldp	x27, x28, [sp, #80]
   297a8:	mov	w0, w19
   297ac:	ldp	x19, x20, [sp, #16]
   297b0:	ldp	x21, x22, [sp, #32]
   297b4:	ldp	x29, x30, [sp], #352
   297b8:	ret
   297bc:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   297c0:	add	x2, x2, x0
   297c4:	cmp	x2, #0x1
   297c8:	b.ls	297e4 <mpfr_atanh@@Base+0x2f0>  // b.plast
   297cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   297d0:	str	x0, [x22, #16]
   297d4:	ldr	w0, [x1, #8]
   297d8:	str	w0, [x22, #8]
   297dc:	mov	w19, #0x0                   	// #0
   297e0:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   297e4:	add	x0, x0, #0x4
   297e8:	str	x0, [x22, #16]
   297ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   297f0:	ldr	x1, [x0, #2576]
   297f4:	add	x0, x0, #0xa10
   297f8:	blr	x1
   297fc:	mrs	x1, tpidr_el0
   29800:	add	x0, x1, x0
   29804:	ldr	w1, [x0]
   29808:	orr	w1, w1, #0x4
   2980c:	str	w1, [x0]
   29810:	mov	w19, #0x0                   	// #0
   29814:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   29818:	cmp	x2, #0x1
   2981c:	b.eq	29858 <mpfr_atanh@@Base+0x364>  // b.none
   29820:	mov	x0, #0x2                   	// #2
   29824:	movk	x0, #0x8000, lsl #48
   29828:	str	x0, [x22, #16]
   2982c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29830:	ldr	x1, [x0, #2576]
   29834:	add	x0, x0, #0xa10
   29838:	blr	x1
   2983c:	mrs	x1, tpidr_el0
   29840:	add	x0, x1, x0
   29844:	ldr	w1, [x0]
   29848:	orr	w1, w1, #0x4
   2984c:	str	w1, [x0]
   29850:	mov	w19, #0x0                   	// #0
   29854:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   29858:	mov	x0, x1
   2985c:	bl	bf00 <mpfr_powerof2_raw@plt>
   29860:	cbz	w0, 29820 <mpfr_atanh@@Base+0x32c>
   29864:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   29868:	str	x0, [x22, #16]
   2986c:	ldr	w0, [x20, #8]
   29870:	str	w0, [x22, #8]
   29874:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29878:	ldr	x1, [x0, #2576]
   2987c:	add	x0, x0, #0xa10
   29880:	blr	x1
   29884:	mrs	x1, tpidr_el0
   29888:	add	x0, x1, x0
   2988c:	ldr	w1, [x0]
   29890:	orr	w1, w1, #0x20
   29894:	str	w1, [x0]
   29898:	mov	w19, #0x0                   	// #0
   2989c:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   298a0:	ldr	w4, [sp, #112]
   298a4:	mov	w3, #0x1                   	// #1
   298a8:	mov	x0, x22
   298ac:	bl	c540 <mpfr_round_near_x@plt>
   298b0:	mov	w19, w0
   298b4:	cbz	w0, 29548 <mpfr_atanh@@Base+0x54>
   298b8:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   298bc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   298c0:	add	x2, x2, #0xb78
   298c4:	mov	w1, #0xa1                  	// #161
   298c8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   298cc:	add	x0, x0, #0xc30
   298d0:	bl	cb40 <mpfr_assert_fail@plt>
   298d4:	mov	x19, #0x0                   	// #0
   298d8:	b	295fc <mpfr_atanh@@Base+0x108>
   298dc:	ldr	x0, [sp, #288]
   298e0:	mov	x27, x0
   298e4:	str	x0, [sp, #128]
   298e8:	mov	x1, x0
   298ec:	mov	x0, x23
   298f0:	bl	ca80 <mpfr_init2@plt>
   298f4:	mov	x1, x27
   298f8:	mov	x0, x26
   298fc:	bl	ca80 <mpfr_init2@plt>
   29900:	add	x24, sp, #0xa0
   29904:	mov	x1, x27
   29908:	mov	x0, x24
   2990c:	bl	ca80 <mpfr_init2@plt>
   29910:	ldr	w3, [sp, #328]
   29914:	mov	w2, #0x5                   	// #5
   29918:	ldr	x27, [sp, #104]
   2991c:	mov	x1, x27
   29920:	mov	x0, x23
   29924:	bl	c6a0 <mpfr_set4@plt>
   29928:	ldr	w3, [sp, #200]
   2992c:	mov	w2, #0x5                   	// #5
   29930:	mov	x1, x23
   29934:	mov	x0, x21
   29938:	bl	c6a0 <mpfr_set4@plt>
   2993c:	mov	w3, #0x5                   	// #5
   29940:	mov	x2, x27
   29944:	mov	x1, x27
   29948:	mov	x0, x24
   2994c:	bl	bd50 <mpfr_mul@plt>
   29950:	mov	x24, #0x3                   	// #3
   29954:	add	x0, sp, #0xa0
   29958:	str	x0, [sp, #144]
   2995c:	mov	w27, #0x5                   	// #5
   29960:	b	2997c <mpfr_atanh@@Base+0x488>
   29964:	mov	w3, w27
   29968:	mov	x2, x26
   2996c:	mov	x1, x21
   29970:	mov	x0, x21
   29974:	bl	c1a0 <mpfr_add@plt>
   29978:	add	x24, x24, #0x2
   2997c:	mov	w3, w27
   29980:	ldr	x2, [sp, #144]
   29984:	mov	x1, x23
   29988:	mov	x0, x23
   2998c:	bl	bd50 <mpfr_mul@plt>
   29990:	mov	w3, w27
   29994:	mov	x2, x24
   29998:	mov	x1, x23
   2999c:	mov	x0, x26
   299a0:	bl	cc60 <mpfr_div_ui@plt>
   299a4:	ldr	x0, [sp, #304]
   299a8:	ldr	x1, [sp, #128]
   299ac:	sub	x0, x0, x1
   299b0:	ldr	x1, [sp, #240]
   299b4:	cmp	x1, x0
   299b8:	b.gt	29964 <mpfr_atanh@@Base+0x470>
   299bc:	add	x0, x24, #0x8
   299c0:	lsr	x0, x0, #1
   299c4:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   299c8:	mov	w24, w0
   299cc:	add	w0, w0, #0x2
   299d0:	ldr	x1, [sp, #128]
   299d4:	cmp	x1, w0, sxtw
   299d8:	b.le	299fc <mpfr_atanh@@Base+0x508>
   299dc:	mov	x0, x23
   299e0:	bl	c070 <mpfr_clear@plt>
   299e4:	mov	x0, x26
   299e8:	bl	c070 <mpfr_clear@plt>
   299ec:	add	x0, sp, #0xa0
   299f0:	bl	c070 <mpfr_clear@plt>
   299f4:	sub	x2, x19, w24, sxtw
   299f8:	b	296e4 <mpfr_atanh@@Base+0x1f0>
   299fc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   29a00:	add	x2, x2, #0xc38
   29a04:	mov	w1, #0x56                  	// #86
   29a08:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   29a0c:	add	x0, x0, #0xc30
   29a10:	bl	cb40 <mpfr_assert_fail@plt>
   29a14:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   29a18:	cmp	x0, x1
   29a1c:	b.le	29a50 <mpfr_atanh@@Base+0x55c>
   29a20:	ldr	w0, [sp, #112]
   29a24:	cmp	w0, #0x0
   29a28:	cinc	x3, x25, eq  // eq = none
   29a2c:	ldr	x0, [sp, #288]
   29a30:	add	x1, x0, #0x3e
   29a34:	subs	x0, x0, #0x1
   29a38:	csel	x1, x1, x0, mi  // mi = first
   29a3c:	asr	x1, x1, #6
   29a40:	add	x1, x1, #0x1
   29a44:	ldr	x0, [sp, #312]
   29a48:	bl	c370 <mpfr_round_p@plt>
   29a4c:	cbnz	w0, 296f4 <mpfr_atanh@@Base+0x200>
   29a50:	mov	x0, #0xfffffffffffffeff    	// #-257
   29a54:	movk	x0, #0x7fff, lsl #48
   29a58:	sub	x0, x0, x19
   29a5c:	ldr	x1, [sp, #152]
   29a60:	cmp	x0, x1
   29a64:	b.lt	29a98 <mpfr_atanh@@Base+0x5a4>  // b.tstop
   29a68:	ldr	x0, [sp, #152]
   29a6c:	add	x19, x19, x0
   29a70:	add	x0, x19, x19, lsr #63
   29a74:	asr	x0, x0, #1
   29a78:	str	x0, [sp, #152]
   29a7c:	mov	x1, x19
   29a80:	mov	x0, x21
   29a84:	bl	bed0 <mpfr_set_prec@plt>
   29a88:	mov	x1, x19
   29a8c:	ldr	x0, [sp, #136]
   29a90:	bl	bed0 <mpfr_set_prec@plt>
   29a94:	b	29640 <mpfr_atanh@@Base+0x14c>
   29a98:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   29a9c:	add	x2, x2, #0x230
   29aa0:	mov	w1, #0xca                  	// #202
   29aa4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   29aa8:	add	x0, x0, #0xc30
   29aac:	bl	cb40 <mpfr_assert_fail@plt>
   29ab0:	ldr	w2, [sp, #112]
   29ab4:	mov	w1, w19
   29ab8:	mov	x0, x22
   29abc:	bl	cb30 <mpfr_check_range@plt>
   29ac0:	mov	w19, w0
   29ac4:	ldp	x23, x24, [sp, #48]
   29ac8:	ldp	x25, x26, [sp, #64]
   29acc:	ldp	x27, x28, [sp, #80]
   29ad0:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   29ad4:	ldp	x23, x24, [sp, #48]
   29ad8:	ldp	x25, x26, [sp, #64]
   29adc:	ldp	x27, x28, [sp, #80]
   29ae0:	b	297a8 <mpfr_atanh@@Base+0x2b4>
   29ae4:	stp	x29, x30, [sp, #-48]!
   29ae8:	mov	x29, sp
   29aec:	stp	x19, x20, [sp, #16]
   29af0:	str	x21, [sp, #32]
   29af4:	mov	x20, x0
   29af8:	ldr	x19, [x0]
   29afc:	add	x2, x19, #0x3e
   29b00:	subs	x0, x19, #0x1
   29b04:	csel	x2, x2, x0, mi  // mi = first
   29b08:	asr	x2, x2, #6
   29b0c:	add	x2, x2, #0x1
   29b10:	ldr	x21, [x20, #24]
   29b14:	mov	x0, #0x3                   	// #3
   29b18:	sub	x0, x0, x2
   29b1c:	add	x1, x1, x0, lsl #3
   29b20:	mov	x0, x21
   29b24:	bl	c520 <__gmpn_copyi@plt>
   29b28:	neg	w19, w19
   29b2c:	mov	x0, #0x1                   	// #1
   29b30:	lsl	x19, x0, x19
   29b34:	neg	x19, x19
   29b38:	ldr	x0, [x21]
   29b3c:	and	x19, x0, x19
   29b40:	str	x19, [x21]
   29b44:	str	xzr, [x20, #16]
   29b48:	ldp	x19, x20, [sp, #16]
   29b4c:	ldr	x21, [sp, #32]
   29b50:	ldp	x29, x30, [sp], #48
   29b54:	ret

0000000000029b58 <mpfr_atan@@Base>:
   29b58:	mov	x12, #0x12a0                	// #4768
   29b5c:	sub	sp, sp, x12
   29b60:	stp	x29, x30, [sp]
   29b64:	mov	x29, sp
   29b68:	stp	x21, x22, [sp, #32]
   29b6c:	str	x0, [sp, #184]
   29b70:	str	x1, [sp, #232]
   29b74:	str	w2, [sp, #228]
   29b78:	ldr	x0, [x1, #16]
   29b7c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   29b80:	cmp	x0, x1
   29b84:	b.le	29f2c <mpfr_atan@@Base+0x3d4>
   29b88:	neg	x0, x0, lsl #1
   29b8c:	cmp	x0, #0x0
   29b90:	b.le	29bac <mpfr_atan@@Base+0x54>
   29b94:	add	x2, x0, #0x1
   29b98:	ldr	x0, [sp, #184]
   29b9c:	ldr	x1, [x0]
   29ba0:	add	x1, x1, #0x1
   29ba4:	cmp	x1, x2
   29ba8:	b.cc	2a13c <mpfr_atan@@Base+0x5e4>  // b.lo, b.ul, b.last
   29bac:	stp	x19, x20, [sp, #16]
   29bb0:	ldr	x1, [sp, #232]
   29bb4:	ldr	x0, [x1]
   29bb8:	str	x0, [sp, #4736]
   29bbc:	ldr	x0, [x1, #24]
   29bc0:	str	x0, [sp, #4760]
   29bc4:	mov	w0, #0x1                   	// #1
   29bc8:	str	w0, [sp, #4744]
   29bcc:	ldr	x0, [x1, #16]
   29bd0:	str	x0, [sp, #4752]
   29bd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29bd8:	ldr	x1, [x0, #2576]
   29bdc:	add	x0, x0, #0xa10
   29be0:	blr	x1
   29be4:	mrs	x1, tpidr_el0
   29be8:	ldr	w0, [x1, x0]
   29bec:	str	w0, [sp, #268]
   29bf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29bf4:	ldr	x2, [x0, #2512]
   29bf8:	add	x0, x0, #0x9d0
   29bfc:	blr	x2
   29c00:	add	x2, x1, x0
   29c04:	ldr	x0, [x1, x0]
   29c08:	str	x0, [sp, #272]
   29c0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29c10:	ldr	x3, [x0, #2544]
   29c14:	add	x0, x0, #0x9f0
   29c18:	blr	x3
   29c1c:	ldr	x3, [x1, x0]
   29c20:	str	x3, [sp, #280]
   29c24:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   29c28:	str	x3, [x2]
   29c2c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   29c30:	str	x2, [x1, x0]
   29c34:	mov	x2, #0x0                   	// #0
   29c38:	mov	x1, #0x1                   	// #1
   29c3c:	add	x0, sp, #0x1, lsl #12
   29c40:	add	x0, x0, #0x280
   29c44:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   29c48:	str	w0, [sp, #224]
   29c4c:	cbz	w0, 2a158 <mpfr_atan@@Base+0x600>
   29c50:	stp	x23, x24, [sp, #48]
   29c54:	stp	x25, x26, [sp, #64]
   29c58:	stp	x27, x28, [sp, #80]
   29c5c:	ldr	x0, [sp, #184]
   29c60:	ldr	x19, [x0]
   29c64:	cmp	x19, #0x1
   29c68:	b.eq	2af54 <mpfr_atan@@Base+0x13fc>  // b.none
   29c6c:	b.le	2a284 <mpfr_atan@@Base+0x72c>
   29c70:	ldr	x0, [sp, #184]
   29c74:	ldr	x0, [x0]
   29c78:	sub	x0, x0, #0x1
   29c7c:	clz	x0, x0
   29c80:	mov	w21, #0x40                  	// #64
   29c84:	sub	w0, w21, w0
   29c88:	add	x21, x19, w0, sxtw
   29c8c:	add	x0, x21, #0x4
   29c90:	str	x0, [sp, #216]
   29c94:	add	x20, x21, #0x44
   29c98:	mov	x1, x20
   29c9c:	add	x0, sp, #0x1, lsl #12
   29ca0:	add	x0, x0, #0x1f0
   29ca4:	bl	c900 <mpfr_mpz_init2@plt>
   29ca8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   29cac:	cmp	x20, x0
   29cb0:	b.ge	2a2a0 <mpfr_atan@@Base+0x748>  // b.tcont
   29cb4:	add	x19, x21, #0x82
   29cb8:	adds	x0, x21, #0x43
   29cbc:	csel	x19, x19, x0, mi  // mi = first
   29cc0:	asr	x19, x19, #6
   29cc4:	add	x19, x19, #0x1
   29cc8:	lsl	x0, x19, #2
   29ccc:	cmp	x0, #0x10
   29cd0:	b.gt	2a2a4 <mpfr_atan@@Base+0x74c>
   29cd4:	str	xzr, [sp, #1328]
   29cd8:	add	x0, sp, #0x540
   29cdc:	str	x0, [sp, #1336]
   29ce0:	str	x20, [sp, #4672]
   29ce4:	ldr	x1, [sp, #1336]
   29ce8:	str	x1, [sp, #4696]
   29cec:	mov	w0, #0x1                   	// #1
   29cf0:	str	w0, [sp, #4680]
   29cf4:	str	x20, [sp, #4640]
   29cf8:	add	x2, x1, x19, lsl #3
   29cfc:	str	x2, [sp, #4664]
   29d00:	str	w0, [sp, #4648]
   29d04:	str	x20, [sp, #4608]
   29d08:	add	x2, x1, x19, lsl #4
   29d0c:	str	x2, [sp, #4632]
   29d10:	str	w0, [sp, #4616]
   29d14:	str	x20, [sp, #4704]
   29d18:	add	x19, x19, x19, lsl #1
   29d1c:	add	x1, x1, x19, lsl #3
   29d20:	str	x1, [sp, #4728]
   29d24:	str	w0, [sp, #4712]
   29d28:	mov	x0, #0x40                  	// #64
   29d2c:	str	x0, [sp, #288]
   29d30:	mov	w20, #0x0                   	// #0
   29d34:	add	x0, sp, #0x5c0
   29d38:	str	x0, [sp, #112]
   29d3c:	add	x0, sp, #0x130
   29d40:	str	x0, [sp, #296]
   29d44:	ldr	x0, [sp, #4752]
   29d48:	mov	x22, #0x2                   	// #2
   29d4c:	sub	x22, x22, x0
   29d50:	cmp	x0, #0x0
   29d54:	csinc	x22, x22, xzr, lt  // lt = tstop
   29d58:	ldr	x0, [sp, #216]
   29d5c:	add	x22, x0, x22
   29d60:	cmn	x22, #0x2
   29d64:	b.eq	2a2d8 <mpfr_atan@@Base+0x780>  // b.none
   29d68:	cmn	x22, #0x1
   29d6c:	b.lt	2a2b8 <mpfr_atan@@Base+0x760>  // b.tstop
   29d70:	add	x24, x22, #0x2
   29d74:	clz	x24, x24
   29d78:	mov	w23, #0x40                  	// #64
   29d7c:	sub	w23, w23, w24
   29d80:	add	x22, x22, #0x1
   29d84:	add	w0, w23, w23, lsl #1
   29d88:	cmp	w0, #0x3
   29d8c:	b.eq	2a2d0 <mpfr_atan@@Base+0x778>  // b.none
   29d90:	mov	w0, #0x3f                  	// #63
   29d94:	sub	w0, w0, w24
   29d98:	add	w0, w0, w0, lsl #1
   29d9c:	sxtw	x0, w0
   29da0:	clz	x0, x0
   29da4:	mov	w1, #0x40                  	// #64
   29da8:	sub	w0, w1, w0
   29dac:	sxtw	x0, w0
   29db0:	add	x22, x22, x0
   29db4:	ldr	x0, [sp, #184]
   29db8:	ldr	x0, [x0]
   29dbc:	cmp	x0, #0x64
   29dc0:	b.le	2a310 <mpfr_atan@@Base+0x7b8>
   29dc4:	cmp	x22, #0x1
   29dc8:	b.eq	2a308 <mpfr_atan@@Base+0x7b0>  // b.none
   29dcc:	b.le	2a2f0 <mpfr_atan@@Base+0x798>
   29dd0:	sub	x0, x22, #0x1
   29dd4:	clz	x1, x0
   29dd8:	mov	w0, #0x40                  	// #64
   29ddc:	sub	w0, w0, w1
   29de0:	add	w21, w0, w0, lsr #31
   29de4:	asr	w21, w21, #1
   29de8:	sub	w21, w21, #0x3
   29dec:	sxtw	x21, w21
   29df0:	lsl	x2, x21, #1
   29df4:	add	x0, x2, #0x9
   29df8:	str	x0, [sp, #248]
   29dfc:	add	x22, x22, x0
   29e00:	ldr	x1, [sp, #1328]
   29e04:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   29e08:	cmp	x22, x0
   29e0c:	b.ge	2a31c <mpfr_atan@@Base+0x7c4>  // b.tcont
   29e10:	add	x19, x22, #0x3e
   29e14:	subs	x0, x22, #0x1
   29e18:	csel	x19, x19, x0, mi  // mi = first
   29e1c:	asr	x19, x19, #6
   29e20:	add	x19, x19, #0x1
   29e24:	lsl	x0, x19, #5
   29e28:	str	x0, [sp, #1328]
   29e2c:	cbnz	x1, 2a320 <mpfr_atan@@Base+0x7c8>
   29e30:	bl	ccf0 <mpfr_allocate_func@plt>
   29e34:	str	x0, [sp, #1336]
   29e38:	str	x22, [sp, #4672]
   29e3c:	ldr	x1, [sp, #1336]
   29e40:	str	x1, [sp, #4696]
   29e44:	mov	w0, #0x1                   	// #1
   29e48:	str	w0, [sp, #4680]
   29e4c:	str	x22, [sp, #4640]
   29e50:	add	x2, x1, x19, lsl #3
   29e54:	str	x2, [sp, #4664]
   29e58:	str	w0, [sp, #4648]
   29e5c:	str	x22, [sp, #4608]
   29e60:	add	x2, x1, x19, lsl #4
   29e64:	str	x2, [sp, #4632]
   29e68:	str	w0, [sp, #4616]
   29e6c:	str	x22, [sp, #4704]
   29e70:	add	x19, x19, x19, lsl #1
   29e74:	add	x19, x1, x19, lsl #3
   29e78:	str	x19, [sp, #4728]
   29e7c:	str	w0, [sp, #4712]
   29e80:	mov	w0, #0x41                  	// #65
   29e84:	sub	w24, w0, w24
   29e88:	add	w1, w24, w24, lsl #1
   29e8c:	str	w1, [sp, #264]
   29e90:	cmp	w1, w20
   29e94:	b.le	29ecc <mpfr_atan@@Base+0x374>
   29e98:	ldr	x2, [sp, #112]
   29e9c:	add	x19, x2, w20, sxtw #4
   29ea0:	mvn	w0, w20
   29ea4:	add	w0, w0, w1
   29ea8:	add	x20, x0, w20, sxtw
   29eac:	add	x0, x2, #0x10
   29eb0:	add	x20, x0, x20, lsl #4
   29eb4:	mov	x1, x22
   29eb8:	mov	x0, x19
   29ebc:	bl	c900 <mpfr_mpz_init2@plt>
   29ec0:	add	x19, x19, #0x10
   29ec4:	cmp	x19, x20
   29ec8:	b.ne	29eb4 <mpfr_atan@@Base+0x35c>  // b.any
   29ecc:	ldr	w0, [sp, #224]
   29ed0:	cmp	w0, #0x0
   29ed4:	b.le	2a334 <mpfr_atan@@Base+0x7dc>
   29ed8:	mov	w3, #0x0                   	// #0
   29edc:	add	x2, sp, #0x1, lsl #12
   29ee0:	add	x2, x2, #0x280
   29ee4:	mov	x1, #0x1                   	// #1
   29ee8:	add	x0, sp, #0x1, lsl #12
   29eec:	add	x0, x0, #0x240
   29ef0:	bl	c2f0 <mpfr_ui_div@plt>
   29ef4:	ldr	x24, [sp, #4688]
   29ef8:	neg	x21, x21
   29efc:	mov	x26, #0x0                   	// #0
   29f00:	cmp	x21, x24
   29f04:	b.ge	2a42c <mpfr_atan@@Base+0x8d4>  // b.tcont
   29f08:	add	x20, sp, #0x1, lsl #12
   29f0c:	add	x20, x20, #0x240
   29f10:	add	x19, sp, #0x1, lsl #12
   29f14:	add	x19, x19, #0x220
   29f18:	mov	x22, #0x1                   	// #1
   29f1c:	add	x25, sp, #0x1, lsl #12
   29f20:	add	x25, x25, #0x280
   29f24:	ldr	w27, [sp, #224]
   29f28:	b	2a37c <mpfr_atan@@Base+0x824>
   29f2c:	mov	x1, #0x2                   	// #2
   29f30:	movk	x1, #0x8000, lsl #48
   29f34:	cmp	x0, x1
   29f38:	b.eq	29f68 <mpfr_atan@@Base+0x410>  // b.none
   29f3c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   29f40:	cmp	x0, x1
   29f44:	b.eq	29fa0 <mpfr_atan@@Base+0x448>  // b.none
   29f48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   29f4c:	ldr	x1, [sp, #184]
   29f50:	str	x0, [x1, #16]
   29f54:	ldr	x0, [sp, #232]
   29f58:	ldr	w0, [x0, #8]
   29f5c:	str	w0, [x1, #8]
   29f60:	mov	w21, #0x0                   	// #0
   29f64:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   29f68:	mov	x0, x1
   29f6c:	ldr	x1, [sp, #184]
   29f70:	str	x0, [x1, #16]
   29f74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29f78:	ldr	x1, [x0, #2576]
   29f7c:	add	x0, x0, #0xa10
   29f80:	blr	x1
   29f84:	mrs	x1, tpidr_el0
   29f88:	add	x0, x1, x0
   29f8c:	ldr	w1, [x0]
   29f90:	orr	w1, w1, #0x4
   29f94:	str	w1, [x0]
   29f98:	mov	w21, #0x0                   	// #0
   29f9c:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   29fa0:	stp	x19, x20, [sp, #16]
   29fa4:	stp	x23, x24, [sp, #48]
   29fa8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29fac:	ldr	x1, [x0, #2576]
   29fb0:	add	x0, x0, #0xa10
   29fb4:	blr	x1
   29fb8:	mrs	x1, tpidr_el0
   29fbc:	ldr	w19, [x1, x0]
   29fc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29fc4:	ldr	x2, [x0, #2512]
   29fc8:	add	x0, x0, #0x9d0
   29fcc:	blr	x2
   29fd0:	add	x2, x1, x0
   29fd4:	ldr	x22, [x1, x0]
   29fd8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   29fdc:	ldr	x3, [x0, #2544]
   29fe0:	add	x0, x0, #0x9f0
   29fe4:	blr	x3
   29fe8:	ldr	x20, [x1, x0]
   29fec:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   29ff0:	str	x3, [x2]
   29ff4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   29ff8:	str	x2, [x1, x0]
   29ffc:	ldr	x0, [sp, #232]
   2a000:	ldr	w0, [x0, #8]
   2a004:	cmp	w0, #0x0
   2a008:	b.gt	2a0f0 <mpfr_atan@@Base+0x598>
   2a00c:	mov	w2, #0x3                   	// #3
   2a010:	ldr	w0, [sp, #228]
   2a014:	cmp	w0, #0x2
   2a018:	b.eq	2a028 <mpfr_atan@@Base+0x4d0>  // b.none
   2a01c:	cmp	w0, w2
   2a020:	mov	w2, #0x2                   	// #2
   2a024:	csel	w2, w0, w2, ne  // ne = any
   2a028:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a02c:	ldr	x1, [x0, #2624]
   2a030:	add	x0, x0, #0xa40
   2a034:	blr	x1
   2a038:	mrs	x1, tpidr_el0
   2a03c:	add	x1, x1, x0
   2a040:	ldr	x23, [sp, #184]
   2a044:	mov	x0, x23
   2a048:	bl	c380 <mpfr_cache@plt>
   2a04c:	neg	w21, w0
   2a050:	ldr	w0, [x23, #8]
   2a054:	neg	w0, w0
   2a058:	str	w0, [x23, #8]
   2a05c:	ldr	w3, [sp, #228]
   2a060:	mov	x2, #0x1                   	// #1
   2a064:	ldr	x23, [sp, #184]
   2a068:	mov	x1, x23
   2a06c:	mov	x0, x23
   2a070:	bl	c8f0 <mpfr_div_2ui@plt>
   2a074:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a078:	ldr	x1, [x0, #2576]
   2a07c:	add	x0, x0, #0xa10
   2a080:	blr	x1
   2a084:	mrs	x1, tpidr_el0
   2a088:	str	w19, [x1, x0]
   2a08c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a090:	ldr	x2, [x0, #2512]
   2a094:	add	x0, x0, #0x9d0
   2a098:	blr	x2
   2a09c:	str	x22, [x1, x0]
   2a0a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a0a4:	ldr	x2, [x0, #2544]
   2a0a8:	add	x0, x0, #0x9f0
   2a0ac:	blr	x2
   2a0b0:	str	x20, [x1, x0]
   2a0b4:	ldr	x0, [x23, #16]
   2a0b8:	cmp	x22, x0
   2a0bc:	ccmp	x20, x0, #0x1, le
   2a0c0:	b.lt	2a11c <mpfr_atan@@Base+0x5c4>  // b.tstop
   2a0c4:	cbz	w21, 2af78 <mpfr_atan@@Base+0x1420>
   2a0c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a0cc:	ldr	x1, [x0, #2576]
   2a0d0:	add	x0, x0, #0xa10
   2a0d4:	blr	x1
   2a0d8:	orr	w19, w19, #0x8
   2a0dc:	mrs	x1, tpidr_el0
   2a0e0:	str	w19, [x1, x0]
   2a0e4:	ldp	x19, x20, [sp, #16]
   2a0e8:	ldp	x23, x24, [sp, #48]
   2a0ec:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2a0f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a0f4:	ldr	x1, [x0, #2624]
   2a0f8:	add	x0, x0, #0xa40
   2a0fc:	blr	x1
   2a100:	ldr	w2, [sp, #228]
   2a104:	mrs	x1, tpidr_el0
   2a108:	add	x1, x1, x0
   2a10c:	ldr	x0, [sp, #184]
   2a110:	bl	c380 <mpfr_cache@plt>
   2a114:	mov	w21, w0
   2a118:	b	2a05c <mpfr_atan@@Base+0x504>
   2a11c:	ldr	w2, [sp, #228]
   2a120:	mov	w1, w21
   2a124:	ldr	x0, [sp, #184]
   2a128:	bl	cb30 <mpfr_check_range@plt>
   2a12c:	mov	w21, w0
   2a130:	ldp	x19, x20, [sp, #16]
   2a134:	ldp	x23, x24, [sp, #48]
   2a138:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2a13c:	ldr	w4, [sp, #228]
   2a140:	mov	w3, #0x0                   	// #0
   2a144:	ldr	x1, [sp, #232]
   2a148:	bl	c540 <mpfr_round_near_x@plt>
   2a14c:	mov	w21, w0
   2a150:	cbz	w0, 29bac <mpfr_atan@@Base+0x54>
   2a154:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2a158:	ldr	x0, [sp, #232]
   2a15c:	ldr	w19, [x0, #8]
   2a160:	ldr	w0, [sp, #228]
   2a164:	mov	w2, w0
   2a168:	cmp	w19, #0x0
   2a16c:	b.le	2a238 <mpfr_atan@@Base+0x6e0>
   2a170:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a174:	ldr	x1, [x0, #2624]
   2a178:	add	x0, x0, #0xa40
   2a17c:	blr	x1
   2a180:	mrs	x1, tpidr_el0
   2a184:	add	x1, x1, x0
   2a188:	ldr	x20, [sp, #184]
   2a18c:	mov	x0, x20
   2a190:	bl	c380 <mpfr_cache@plt>
   2a194:	mov	w21, w0
   2a198:	tbnz	w19, #31, 2a254 <mpfr_atan@@Base+0x6fc>
   2a19c:	ldr	w3, [sp, #228]
   2a1a0:	mov	x2, #0x2                   	// #2
   2a1a4:	ldr	x19, [sp, #184]
   2a1a8:	mov	x1, x19
   2a1ac:	mov	x0, x19
   2a1b0:	bl	c8f0 <mpfr_div_2ui@plt>
   2a1b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a1b8:	ldr	x1, [x0, #2576]
   2a1bc:	add	x0, x0, #0xa10
   2a1c0:	blr	x1
   2a1c4:	mrs	x1, tpidr_el0
   2a1c8:	ldr	w4, [sp, #268]
   2a1cc:	str	w4, [x1, x0]
   2a1d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a1d4:	ldr	x2, [x0, #2512]
   2a1d8:	add	x0, x0, #0x9d0
   2a1dc:	blr	x2
   2a1e0:	ldr	x2, [sp, #272]
   2a1e4:	str	x2, [x1, x0]
   2a1e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a1ec:	ldr	x3, [x0, #2544]
   2a1f0:	add	x0, x0, #0x9f0
   2a1f4:	blr	x3
   2a1f8:	ldr	x3, [sp, #280]
   2a1fc:	str	x3, [x1, x0]
   2a200:	ldr	x0, [x19, #16]
   2a204:	cmp	x3, x0
   2a208:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2a20c:	b.gt	2a268 <mpfr_atan@@Base+0x710>
   2a210:	cbz	w21, 2af84 <mpfr_atan@@Base+0x142c>
   2a214:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2a218:	ldr	x1, [x0, #2576]
   2a21c:	add	x0, x0, #0xa10
   2a220:	blr	x1
   2a224:	orr	w2, w4, #0x8
   2a228:	mrs	x1, tpidr_el0
   2a22c:	str	w2, [x1, x0]
   2a230:	ldp	x19, x20, [sp, #16]
   2a234:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2a238:	mov	w2, #0x3                   	// #3
   2a23c:	cmp	w0, #0x2
   2a240:	b.eq	2a170 <mpfr_atan@@Base+0x618>  // b.none
   2a244:	cmp	w0, w2
   2a248:	mov	w2, #0x2                   	// #2
   2a24c:	csel	w2, w0, w2, ne  // ne = any
   2a250:	b	2a170 <mpfr_atan@@Base+0x618>
   2a254:	neg	w21, w0
   2a258:	ldr	w0, [x20, #8]
   2a25c:	neg	w0, w0
   2a260:	str	w0, [x20, #8]
   2a264:	b	2a19c <mpfr_atan@@Base+0x644>
   2a268:	ldr	w2, [sp, #228]
   2a26c:	mov	w1, w21
   2a270:	ldr	x0, [sp, #184]
   2a274:	bl	cb30 <mpfr_check_range@plt>
   2a278:	mov	w21, w0
   2a27c:	ldp	x19, x20, [sp, #16]
   2a280:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2a284:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a288:	add	x2, x2, #0xc48
   2a28c:	mov	w1, #0x166                 	// #358
   2a290:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a294:	add	x0, x0, #0xc68
   2a298:	bl	cb40 <mpfr_assert_fail@plt>
   2a29c:	b	29c70 <mpfr_atan@@Base+0x118>
   2a2a0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2a2a4:	lsl	x0, x19, #5
   2a2a8:	str	x0, [sp, #1328]
   2a2ac:	bl	ccf0 <mpfr_allocate_func@plt>
   2a2b0:	str	x0, [sp, #1336]
   2a2b4:	b	29ce0 <mpfr_atan@@Base+0x188>
   2a2b8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a2bc:	add	x2, x2, #0xc70
   2a2c0:	mov	w1, #0x176                 	// #374
   2a2c4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a2c8:	add	x0, x0, #0xc68
   2a2cc:	bl	cb40 <mpfr_assert_fail@plt>
   2a2d0:	mov	x0, #0x0                   	// #0
   2a2d4:	b	29db0 <mpfr_atan@@Base+0x258>
   2a2d8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a2dc:	add	x2, x2, #0xc90
   2a2e0:	mov	w1, #0x178                 	// #376
   2a2e4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a2e8:	add	x0, x0, #0xc68
   2a2ec:	bl	cb40 <mpfr_assert_fail@plt>
   2a2f0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2a2f4:	add	x2, x2, #0xd58
   2a2f8:	mov	w1, #0x17f                 	// #383
   2a2fc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a300:	add	x0, x0, #0xc68
   2a304:	bl	cb40 <mpfr_assert_fail@plt>
   2a308:	mov	x21, #0xfffffffffffffffd    	// #-3
   2a30c:	b	29df0 <mpfr_atan@@Base+0x298>
   2a310:	mov	x21, #0x0                   	// #0
   2a314:	str	xzr, [sp, #248]
   2a318:	b	29e00 <mpfr_atan@@Base+0x2a8>
   2a31c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2a320:	mov	x2, x0
   2a324:	ldr	x0, [sp, #1336]
   2a328:	bl	c1c0 <mpfr_reallocate_func@plt>
   2a32c:	str	x0, [sp, #1336]
   2a330:	b	29e38 <mpfr_atan@@Base+0x2e0>
   2a334:	ldr	w3, [sp, #4744]
   2a338:	mov	w2, #0x0                   	// #0
   2a33c:	add	x1, sp, #0x1, lsl #12
   2a340:	add	x1, x1, #0x280
   2a344:	add	x0, sp, #0x1, lsl #12
   2a348:	add	x0, x0, #0x240
   2a34c:	bl	c6a0 <mpfr_set4@plt>
   2a350:	b	29ef4 <mpfr_atan@@Base+0x39c>
   2a354:	mov	w3, #0x0                   	// #0
   2a358:	mov	x2, x20
   2a35c:	mov	x1, x19
   2a360:	mov	x0, x20
   2a364:	bl	c620 <mpfr_div@plt>
   2a368:	add	x26, x26, #0x1
   2a36c:	ldr	x0, [sp, #4688]
   2a370:	cmp	x21, x0
   2a374:	b.ge	2a3e8 <mpfr_atan@@Base+0x890>  // b.tcont
   2a378:	mov	x24, x0
   2a37c:	mov	w2, #0x0                   	// #0
   2a380:	mov	x1, x20
   2a384:	mov	x0, x19
   2a388:	bl	c400 <mpfr_sqr@plt>
   2a38c:	mov	w3, #0x0                   	// #0
   2a390:	mov	x2, x22
   2a394:	mov	x1, x19
   2a398:	mov	x0, x19
   2a39c:	bl	c260 <mpfr_add_ui@plt>
   2a3a0:	mov	w2, #0x0                   	// #0
   2a3a4:	mov	x1, x19
   2a3a8:	mov	x0, x19
   2a3ac:	bl	c930 <mpfr_sqrt@plt>
   2a3b0:	mov	w3, #0x0                   	// #0
   2a3b4:	mov	x2, x22
   2a3b8:	mov	x1, x19
   2a3bc:	mov	x0, x19
   2a3c0:	bl	c530 <mpfr_sub_ui@plt>
   2a3c4:	cmp	x26, #0x0
   2a3c8:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   2a3cc:	b.le	2a354 <mpfr_atan@@Base+0x7fc>
   2a3d0:	mov	w3, #0x0                   	// #0
   2a3d4:	mov	x2, x25
   2a3d8:	mov	x1, x19
   2a3dc:	mov	x0, x20
   2a3e0:	bl	bd50 <mpfr_mul@plt>
   2a3e4:	b	2a368 <mpfr_atan@@Base+0x810>
   2a3e8:	str	x26, [sp, #240]
   2a3ec:	mov	x0, #0x9                   	// #9
   2a3f0:	sub	x0, x0, x24, lsl #1
   2a3f4:	str	x0, [sp, #256]
   2a3f8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a3fc:	str	x0, [sp, #4720]
   2a400:	str	w23, [sp, #140]
   2a404:	add	w23, w23, #0x1
   2a408:	ldr	x0, [sp, #112]
   2a40c:	add	x23, x0, w23, sxtw #4
   2a410:	add	x0, x23, #0x10
   2a414:	str	x0, [sp, #128]
   2a418:	mov	x0, #0x1                   	// #1
   2a41c:	str	x0, [sp, #104]
   2a420:	add	x0, sp, #0x330
   2a424:	str	x0, [sp, #96]
   2a428:	b	2a9a0 <mpfr_atan@@Base+0xe48>
   2a42c:	str	xzr, [sp, #240]
   2a430:	str	xzr, [sp, #256]
   2a434:	b	2a3f8 <mpfr_atan@@Base+0x8a0>
   2a438:	ldr	x0, [sp, #104]
   2a43c:	cmp	x0, #0x8
   2a440:	b.ne	2a4b4 <mpfr_atan@@Base+0x95c>  // b.any
   2a444:	ldr	x0, [sp, #4600]
   2a448:	ldr	x1, [x0]
   2a44c:	add	x1, x1, #0x4
   2a450:	add	x1, x1, x1, lsl #1
   2a454:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a458:	add	x0, x0, #0xcf0
   2a45c:	add	x1, x0, x1, lsl #3
   2a460:	add	x0, sp, #0x1, lsl #12
   2a464:	add	x0, x0, #0x200
   2a468:	bl	29ae4 <mpfr_atanh@@Base+0x5f0>
   2a46c:	b	2a8e4 <mpfr_atan@@Base+0xd8c>
   2a470:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a474:	add	x1, x1, #0xcf0
   2a478:	add	x0, sp, #0x1, lsl #12
   2a47c:	add	x0, x0, #0x200
   2a480:	bl	29ae4 <mpfr_atanh@@Base+0x5f0>
   2a484:	b	2a8e4 <mpfr_atan@@Base+0xd8c>
   2a488:	ldr	x0, [sp, #4600]
   2a48c:	ldr	x1, [x0]
   2a490:	add	x1, x1, #0x1
   2a494:	add	x1, x1, x1, lsl #1
   2a498:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2a49c:	add	x0, x0, #0xcf0
   2a4a0:	add	x1, x0, x1, lsl #3
   2a4a4:	add	x0, sp, #0x1, lsl #12
   2a4a8:	add	x0, x0, #0x200
   2a4ac:	bl	29ae4 <mpfr_atanh@@Base+0x5f0>
   2a4b0:	b	2a8e4 <mpfr_atan@@Base+0xd8c>
   2a4b4:	ldr	x0, [sp, #128]
   2a4b8:	sub	x0, x0, #0x10
   2a4bc:	str	x0, [sp, #192]
   2a4c0:	ldr	w0, [sp, #140]
   2a4c4:	add	w0, w0, #0x1
   2a4c8:	lsl	w0, w0, #1
   2a4cc:	ldr	x1, [sp, #112]
   2a4d0:	add	x0, x1, w0, sxtw #4
   2a4d4:	str	x0, [sp, #144]
   2a4d8:	add	x19, sp, #0x1, lsl #12
   2a4dc:	add	x19, x19, #0x1f0
   2a4e0:	mov	x2, x19
   2a4e4:	mov	x1, x19
   2a4e8:	mov	x0, x19
   2a4ec:	bl	bff0 <__gmpz_mul@plt>
   2a4f0:	ldr	x0, [sp, #104]
   2a4f4:	lsl	x28, x0, #1
   2a4f8:	mov	x1, #0x0                   	// #0
   2a4fc:	mov	x0, x19
   2a500:	bl	ba90 <__gmpz_scan1@plt>
   2a504:	mov	x19, x0
   2a508:	cbnz	x0, 2a564 <mpfr_atan@@Base+0xa0c>
   2a50c:	str	xzr, [sp, #304]
   2a510:	mov	x1, #0x1                   	// #1
   2a514:	add	x0, sp, #0x1, lsl #12
   2a518:	add	x0, x0, #0x1f0
   2a51c:	bl	cb20 <__gmpz_cmp_ui@plt>
   2a520:	mov	w27, w0
   2a524:	cbnz	w0, 2a580 <mpfr_atan@@Base+0xa28>
   2a528:	mov	x0, #0x1                   	// #1
   2a52c:	lsl	x20, x0, x20
   2a530:	ldr	x0, [sp, #152]
   2a534:	udiv	x0, x0, x28
   2a538:	cmp	x20, x0
   2a53c:	csinc	x20, x20, x0, cc  // cc = lo, ul, last
   2a540:	sub	x20, x20, #0x1
   2a544:	and	x0, x20, #0xfffffffffffffffe
   2a548:	add	x0, x0, #0x4
   2a54c:	str	x0, [sp, #160]
   2a550:	mov	x23, #0x2                   	// #2
   2a554:	mov	x25, #0x3                   	// #3
   2a558:	str	x28, [sp, #120]
   2a55c:	ldr	x28, [sp, #144]
   2a560:	b	2a61c <mpfr_atan@@Base+0xac4>
   2a564:	add	x0, sp, #0x1, lsl #12
   2a568:	add	x0, x0, #0x1f0
   2a56c:	mov	x2, x19
   2a570:	mov	x1, x0
   2a574:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2a578:	sub	x28, x28, x19
   2a57c:	b	2a50c <mpfr_atan@@Base+0x9b4>
   2a580:	add	x1, sp, #0x1, lsl #12
   2a584:	add	x1, x1, #0x1f0
   2a588:	ldr	x0, [sp, #192]
   2a58c:	bl	bfa0 <__gmpz_set@plt>
   2a590:	ldr	w0, [sp, #140]
   2a594:	sub	w21, w0, #0x1
   2a598:	ldr	x19, [sp, #128]
   2a59c:	add	x0, x19, #0x10
   2a5a0:	add	x21, x0, x21, lsl #4
   2a5a4:	sub	x1, x19, #0x10
   2a5a8:	mov	x2, x1
   2a5ac:	mov	x0, x19
   2a5b0:	bl	bff0 <__gmpz_mul@plt>
   2a5b4:	add	x19, x19, #0x10
   2a5b8:	cmp	x19, x21
   2a5bc:	b.ne	2a5a4 <mpfr_atan@@Base+0xa4c>  // b.any
   2a5c0:	mov	x0, #0x1                   	// #1
   2a5c4:	lsl	x0, x0, x20
   2a5c8:	str	x0, [sp, #208]
   2a5cc:	mov	x0, #0x2                   	// #2
   2a5d0:	str	x0, [sp, #168]
   2a5d4:	mov	x0, #0x3                   	// #3
   2a5d8:	str	x0, [sp, #160]
   2a5dc:	mov	w22, #0x0                   	// #0
   2a5e0:	add	x0, sp, #0x1, lsl #12
   2a5e4:	add	x0, x0, #0x1f0
   2a5e8:	str	x0, [sp, #200]
   2a5ec:	ldr	x27, [sp, #296]
   2a5f0:	b	2ae90 <mpfr_atan@@Base+0x1338>
   2a5f4:	str	wzr, [sp, #120]
   2a5f8:	b	2ae54 <mpfr_atan@@Base+0x12fc>
   2a5fc:	mov	w27, w22
   2a600:	b	2a730 <mpfr_atan@@Base+0xbd8>
   2a604:	add	w27, w27, #0x1
   2a608:	add	x25, x25, #0x4
   2a60c:	add	x23, x23, #0x2
   2a610:	ldr	x0, [sp, #160]
   2a614:	cmp	x23, x0
   2a618:	b.eq	2a72c <mpfr_atan@@Base+0xbd4>  // b.none
   2a61c:	sxtw	x22, w27
   2a620:	add	x19, x22, #0x1
   2a624:	lsl	x19, x19, #4
   2a628:	add	x20, x28, x19
   2a62c:	mov	x1, x25
   2a630:	mov	x0, x20
   2a634:	bl	bcb0 <__gmpz_set_ui@plt>
   2a638:	sub	x24, x19, #0x10
   2a63c:	ldr	x0, [sp, #112]
   2a640:	add	x21, x0, x24
   2a644:	ldr	x2, [sp, #120]
   2a648:	mov	x1, x20
   2a64c:	mov	x0, x21
   2a650:	bl	c200 <__gmpz_mul_2exp@plt>
   2a654:	sub	x26, x25, #0x2
   2a658:	mov	x2, x26
   2a65c:	mov	x1, x21
   2a660:	mov	x0, x21
   2a664:	bl	bc30 <__gmpz_sub_ui@plt>
   2a668:	mov	x2, x26
   2a66c:	mov	x1, x20
   2a670:	add	x0, x28, x24
   2a674:	bl	c100 <__gmpz_mul_ui@plt>
   2a678:	ldr	x0, [sp, #96]
   2a67c:	mov	x1, #0x1                   	// #1
   2a680:	str	x1, [x0, x22, lsl #3]
   2a684:	str	w23, [sp, #176]
   2a688:	asr	w0, w23, #1
   2a68c:	sxtw	x26, w0
   2a690:	tbnz	w0, #0, 2a604 <mpfr_atan@@Base+0xaac>
   2a694:	sub	x19, x19, #0x20
   2a698:	add	x19, x28, x19
   2a69c:	mov	x24, #0x2                   	// #2
   2a6a0:	mov	x2, x19
   2a6a4:	mov	x1, x21
   2a6a8:	mov	x0, x21
   2a6ac:	bl	bff0 <__gmpz_mul@plt>
   2a6b0:	sub	x20, x21, #0x10
   2a6b4:	add	x27, x19, #0x10
   2a6b8:	mov	x2, x27
   2a6bc:	mov	x1, x20
   2a6c0:	mov	x0, x20
   2a6c4:	bl	bff0 <__gmpz_mul@plt>
   2a6c8:	sub	w2, w24, #0x1
   2a6cc:	ldr	x0, [sp, #120]
   2a6d0:	lsl	x2, x0, x2
   2a6d4:	mov	x1, x20
   2a6d8:	mov	x0, x20
   2a6dc:	bl	c200 <__gmpz_mul_2exp@plt>
   2a6e0:	mov	x2, x21
   2a6e4:	mov	x1, x20
   2a6e8:	mov	x0, x20
   2a6ec:	bl	c9c0 <__gmpz_add@plt>
   2a6f0:	mov	x2, x27
   2a6f4:	mov	x1, x19
   2a6f8:	mov	x0, x19
   2a6fc:	bl	bff0 <__gmpz_mul@plt>
   2a700:	sub	w27, w22, #0x1
   2a704:	ldr	x0, [sp, #96]
   2a708:	add	x0, x0, x22, lsl #3
   2a70c:	stur	x24, [x0, #-8]
   2a710:	lsr	x26, x26, #1
   2a714:	tbnz	w26, #0, 2a604 <mpfr_atan@@Base+0xaac>
   2a718:	sub	x22, x22, #0x1
   2a71c:	sub	x21, x21, #0x10
   2a720:	sub	x19, x19, #0x10
   2a724:	add	x24, x24, #0x1
   2a728:	b	2a6a0 <mpfr_atan@@Base+0xb48>
   2a72c:	ldr	x28, [sp, #120]
   2a730:	cmp	w27, #0x1
   2a734:	b.le	2ad48 <mpfr_atan@@Base+0x11f0>
   2a738:	sxtw	x27, w27
   2a73c:	sub	x20, x27, #0x1
   2a740:	lsl	x20, x20, #4
   2a744:	ldr	x0, [sp, #112]
   2a748:	add	x19, x0, x20
   2a74c:	ldr	x0, [sp, #144]
   2a750:	add	x20, x0, x20
   2a754:	mov	x23, #0x0                   	// #0
   2a758:	add	x26, sp, #0x1, lsl #12
   2a75c:	add	x26, x26, #0x1f0
   2a760:	mov	x24, #0x1                   	// #1
   2a764:	ldr	x25, [sp, #96]
   2a768:	b	2a7ec <mpfr_atan@@Base+0xc94>
   2a76c:	sub	w0, w27, #0x2
   2a770:	ldr	x2, [x25, w0, sxtw #3]
   2a774:	ldr	x0, [sp, #192]
   2a778:	add	x2, x0, x2, lsl #4
   2a77c:	mov	x1, x19
   2a780:	mov	x0, x19
   2a784:	bl	bff0 <__gmpz_mul@plt>
   2a788:	sub	x19, x19, #0x10
   2a78c:	mov	x2, x20
   2a790:	mov	x1, x19
   2a794:	mov	x0, x19
   2a798:	bl	bff0 <__gmpz_mul@plt>
   2a79c:	add	x0, x25, x27, lsl #3
   2a7a0:	ldur	x0, [x0, #-8]
   2a7a4:	lsl	x0, x24, x0
   2a7a8:	add	x23, x23, x0
   2a7ac:	mul	x2, x28, x23
   2a7b0:	mov	x1, x19
   2a7b4:	mov	x0, x19
   2a7b8:	bl	c200 <__gmpz_mul_2exp@plt>
   2a7bc:	mov	x2, x22
   2a7c0:	mov	x1, x19
   2a7c4:	mov	x0, x19
   2a7c8:	bl	c9c0 <__gmpz_add@plt>
   2a7cc:	mov	x2, x20
   2a7d0:	mov	x1, x21
   2a7d4:	mov	x0, x21
   2a7d8:	bl	bff0 <__gmpz_mul@plt>
   2a7dc:	sub	x27, x27, #0x1
   2a7e0:	sub	x20, x20, #0x10
   2a7e4:	cmp	w27, #0x1
   2a7e8:	b.le	2a818 <mpfr_atan@@Base+0xcc0>
   2a7ec:	mov	x22, x19
   2a7f0:	sub	x21, x20, #0x10
   2a7f4:	mov	x2, x21
   2a7f8:	mov	x1, x19
   2a7fc:	mov	x0, x19
   2a800:	bl	bff0 <__gmpz_mul@plt>
   2a804:	mov	x1, x24
   2a808:	mov	x0, x26
   2a80c:	bl	cb20 <__gmpz_cmp_ui@plt>
   2a810:	cbz	w0, 2a788 <mpfr_atan@@Base+0xc30>
   2a814:	b	2a76c <mpfr_atan@@Base+0xc14>
   2a818:	ldr	w0, [sp, #1476]
   2a81c:	cmp	w0, #0x0
   2a820:	cneg	w0, w0, lt  // lt = tstop
   2a824:	ldr	x1, [sp, #1480]
   2a828:	add	x1, x1, w0, sxtw #3
   2a82c:	ldur	x2, [x1, #-8]
   2a830:	sbfiz	x0, x0, #6, #32
   2a834:	clz	x2, x2
   2a838:	sub	x0, x0, x2
   2a83c:	ldr	x1, [sp, #152]
   2a840:	lsl	x2, x1, #1
   2a844:	subs	x19, x0, x2
   2a848:	b.mi	2aa90 <mpfr_atan@@Base+0xf38>  // b.first
   2a84c:	mov	x2, x19
   2a850:	ldr	x0, [sp, #112]
   2a854:	mov	x1, x0
   2a858:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2a85c:	ldr	x3, [sp, #144]
   2a860:	ldr	w0, [x3, #4]
   2a864:	cmp	w0, #0x0
   2a868:	cneg	w0, w0, lt  // lt = tstop
   2a86c:	ldr	x1, [x3, #8]
   2a870:	add	x1, x1, w0, sxtw #3
   2a874:	ldur	x2, [x1, #-8]
   2a878:	sbfiz	x0, x0, #6, #32
   2a87c:	clz	x2, x2
   2a880:	sub	x0, x0, x2
   2a884:	ldr	x1, [sp, #152]
   2a888:	sub	x2, x0, x1
   2a88c:	sub	x19, x19, x2
   2a890:	tbnz	x2, #63, 2aaa4 <mpfr_atan@@Base+0xf4c>
   2a894:	mov	x1, x3
   2a898:	mov	x0, x3
   2a89c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2a8a0:	ldr	x2, [sp, #144]
   2a8a4:	ldr	x20, [sp, #112]
   2a8a8:	mov	x1, x20
   2a8ac:	mov	x0, x20
   2a8b0:	bl	bb30 <__gmpz_tdiv_q@plt>
   2a8b4:	mov	w2, #0x3                   	// #3
   2a8b8:	mov	x1, x20
   2a8bc:	add	x0, sp, #0x1, lsl #12
   2a8c0:	add	x0, x0, #0x200
   2a8c4:	bl	c240 <mpfr_set_z@plt>
   2a8c8:	ldr	x0, [sp, #4624]
   2a8cc:	add	x19, x19, x0
   2a8d0:	ldr	w0, [sp, #176]
   2a8d4:	sub	w0, w0, #0x1
   2a8d8:	sxtw	x0, w0
   2a8dc:	msub	x19, x0, x28, x19
   2a8e0:	str	x19, [sp, #4624]
   2a8e4:	add	x21, sp, #0x1, lsl #12
   2a8e8:	add	x21, x21, #0x220
   2a8ec:	add	x20, sp, #0x1, lsl #12
   2a8f0:	add	x20, x20, #0x200
   2a8f4:	mov	w3, #0x0                   	// #0
   2a8f8:	mov	x2, x21
   2a8fc:	mov	x1, x20
   2a900:	mov	x0, x20
   2a904:	bl	bd50 <mpfr_mul@plt>
   2a908:	add	x0, sp, #0x1, lsl #12
   2a90c:	add	x0, x0, #0x260
   2a910:	mov	w3, #0x0                   	// #0
   2a914:	mov	x2, x20
   2a918:	mov	x1, x0
   2a91c:	bl	c1a0 <mpfr_add@plt>
   2a920:	add	x19, sp, #0x1, lsl #12
   2a924:	add	x19, x19, #0x240
   2a928:	mov	w3, #0x0                   	// #0
   2a92c:	mov	x2, x21
   2a930:	mov	x1, x19
   2a934:	mov	x0, x20
   2a938:	bl	bb70 <mpfr_sub@plt>
   2a93c:	mov	w3, #0x0                   	// #0
   2a940:	mov	x2, x21
   2a944:	mov	x1, x19
   2a948:	mov	x0, x19
   2a94c:	bl	bd50 <mpfr_mul@plt>
   2a950:	mov	w3, #0x0                   	// #0
   2a954:	mov	x2, #0x1                   	// #1
   2a958:	mov	x1, x19
   2a95c:	mov	x0, x19
   2a960:	bl	c260 <mpfr_add_ui@plt>
   2a964:	mov	w3, #0x0                   	// #0
   2a968:	mov	x2, x19
   2a96c:	mov	x1, x20
   2a970:	mov	x0, x19
   2a974:	bl	c620 <mpfr_div@plt>
   2a978:	ldr	x0, [sp, #104]
   2a97c:	lsl	x0, x0, #1
   2a980:	str	x0, [sp, #104]
   2a984:	ldr	x0, [sp, #128]
   2a988:	sub	x0, x0, #0x10
   2a98c:	str	x0, [sp, #128]
   2a990:	ldr	w0, [sp, #140]
   2a994:	subs	w0, w0, #0x1
   2a998:	str	w0, [sp, #140]
   2a99c:	b.eq	2aabc <mpfr_atan@@Base+0xf64>  // b.none
   2a9a0:	ldr	x1, [sp, #4688]
   2a9a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a9a8:	cmp	x1, x0
   2a9ac:	b.eq	2aabc <mpfr_atan@@Base+0xf64>  // b.none
   2a9b0:	add	x19, sp, #0x1, lsl #12
   2a9b4:	add	x19, x19, #0x220
   2a9b8:	mov	w3, #0x0                   	// #0
   2a9bc:	ldr	x21, [sp, #104]
   2a9c0:	mov	x2, x21
   2a9c4:	add	x1, sp, #0x1, lsl #12
   2a9c8:	add	x1, x1, #0x240
   2a9cc:	mov	x0, x19
   2a9d0:	bl	c2c0 <mpfr_mul_2ui@plt>
   2a9d4:	mov	w2, #0x1                   	// #1
   2a9d8:	mov	x1, x19
   2a9dc:	mov	x0, x19
   2a9e0:	bl	c300 <mpfr_rint@plt>
   2a9e4:	ldr	x1, [sp, #4656]
   2a9e8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a9ec:	cmp	x1, x0
   2a9f0:	b.eq	2a978 <mpfr_atan@@Base+0xe20>  // b.none
   2a9f4:	add	x19, sp, #0x1, lsl #12
   2a9f8:	add	x19, x19, #0x220
   2a9fc:	add	x20, sp, #0x1, lsl #12
   2aa00:	add	x20, x20, #0x1f0
   2aa04:	mov	x1, x19
   2aa08:	mov	x0, x20
   2aa0c:	bl	cac0 <mpfr_get_z_2exp@plt>
   2aa10:	neg	x2, x0
   2aa14:	mov	x1, x20
   2aa18:	mov	x0, x20
   2aa1c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2aa20:	mov	w2, #0x0                   	// #0
   2aa24:	mov	x1, x20
   2aa28:	mov	x0, x19
   2aa2c:	bl	c240 <mpfr_set_z@plt>
   2aa30:	mov	w3, #0x0                   	// #0
   2aa34:	mov	x2, x21
   2aa38:	mov	x1, x19
   2aa3c:	mov	x0, x19
   2aa40:	bl	c8f0 <mpfr_div_2ui@plt>
   2aa44:	ldr	w20, [sp, #140]
   2aa48:	ldr	x0, [sp, #4608]
   2aa4c:	str	x0, [sp, #152]
   2aa50:	cmp	x0, #0xc0
   2aa54:	b.gt	2a4b4 <mpfr_atan@@Base+0x95c>
   2aa58:	cmp	x21, #0x4
   2aa5c:	b.eq	2a488 <mpfr_atan@@Base+0x930>  // b.none
   2aa60:	b.hi	2a438 <mpfr_atan@@Base+0x8e0>  // b.pmore
   2aa64:	cmp	x21, #0x1
   2aa68:	b.eq	2a470 <mpfr_atan@@Base+0x918>  // b.none
   2aa6c:	cmp	x21, #0x2
   2aa70:	b.ne	2a4b4 <mpfr_atan@@Base+0x95c>  // b.any
   2aa74:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2aa78:	add	x1, x1, #0xcf0
   2aa7c:	add	x1, x1, #0x18
   2aa80:	add	x0, sp, #0x1, lsl #12
   2aa84:	add	x0, x0, #0x200
   2aa88:	bl	29ae4 <mpfr_atanh@@Base+0x5f0>
   2aa8c:	b	2a8e4 <mpfr_atan@@Base+0xd8c>
   2aa90:	sub	x2, x2, x0
   2aa94:	ldr	x0, [sp, #112]
   2aa98:	mov	x1, x0
   2aa9c:	bl	c200 <__gmpz_mul_2exp@plt>
   2aaa0:	b	2a85c <mpfr_atan@@Base+0xd04>
   2aaa4:	ldr	x1, [sp, #152]
   2aaa8:	sub	x2, x1, x0
   2aaac:	ldr	x0, [sp, #144]
   2aab0:	mov	x1, x0
   2aab4:	bl	c200 <__gmpz_mul_2exp@plt>
   2aab8:	b	2a8a0 <mpfr_atan@@Base+0xd48>
   2aabc:	add	x19, sp, #0x1, lsl #12
   2aac0:	add	x19, x19, #0x260
   2aac4:	mov	w3, #0x0                   	// #0
   2aac8:	add	x2, sp, #0x1, lsl #12
   2aacc:	add	x2, x2, #0x240
   2aad0:	mov	x1, x19
   2aad4:	mov	x0, x19
   2aad8:	bl	c1a0 <mpfr_add@plt>
   2aadc:	mov	w3, #0x0                   	// #0
   2aae0:	ldr	x2, [sp, #240]
   2aae4:	mov	x1, x19
   2aae8:	mov	x0, x19
   2aaec:	bl	c2c0 <mpfr_mul_2ui@plt>
   2aaf0:	ldr	w0, [sp, #224]
   2aaf4:	cmp	w0, #0x0
   2aaf8:	b.gt	2ac6c <mpfr_atan@@Base+0x1114>
   2aafc:	mov	w0, #0x1                   	// #1
   2ab00:	str	w0, [sp, #4712]
   2ab04:	ldr	x1, [sp, #4720]
   2ab08:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ab0c:	cmp	x1, x0
   2ab10:	b.le	2acc8 <mpfr_atan@@Base+0x1170>
   2ab14:	ldr	w0, [sp, #228]
   2ab18:	cmp	w0, #0x0
   2ab1c:	ldr	x0, [sp, #184]
   2ab20:	ldr	x3, [x0]
   2ab24:	cinc	x3, x3, eq  // eq = none
   2ab28:	ldr	x0, [sp, #216]
   2ab2c:	ldr	x1, [sp, #248]
   2ab30:	add	x2, x0, x1
   2ab34:	ldr	x0, [sp, #4704]
   2ab38:	add	x1, x0, #0x3e
   2ab3c:	subs	x0, x0, #0x1
   2ab40:	csel	x1, x1, x0, mi  // mi = first
   2ab44:	asr	x1, x1, #6
   2ab48:	ldr	x0, [sp, #256]
   2ab4c:	sub	x2, x2, x0
   2ab50:	add	x1, x1, #0x1
   2ab54:	ldr	x0, [sp, #4728]
   2ab58:	bl	c370 <mpfr_round_p@plt>
   2ab5c:	cbz	w0, 2acc8 <mpfr_atan@@Base+0x1170>
   2ab60:	ldr	x0, [sp, #232]
   2ab64:	ldr	w3, [x0, #8]
   2ab68:	ldr	w2, [sp, #228]
   2ab6c:	add	x1, sp, #0x1, lsl #12
   2ab70:	add	x1, x1, #0x260
   2ab74:	ldr	x0, [sp, #184]
   2ab78:	bl	c6a0 <mpfr_set4@plt>
   2ab7c:	mov	w21, w0
   2ab80:	add	x19, sp, #0x5c0
   2ab84:	ldr	w0, [sp, #264]
   2ab88:	sub	w20, w0, #0x1
   2ab8c:	add	x0, sp, #0x5d0
   2ab90:	add	x20, x0, x20, lsl #4
   2ab94:	mov	x0, x19
   2ab98:	bl	c170 <mpfr_mpz_clear@plt>
   2ab9c:	add	x19, x19, #0x10
   2aba0:	cmp	x19, x20
   2aba4:	b.ne	2ab94 <mpfr_atan@@Base+0x103c>  // b.any
   2aba8:	add	x0, sp, #0x1, lsl #12
   2abac:	add	x0, x0, #0x1f0
   2abb0:	bl	c170 <mpfr_mpz_clear@plt>
   2abb4:	ldr	x1, [sp, #1328]
   2abb8:	cbz	x1, 2abc4 <mpfr_atan@@Base+0x106c>
   2abbc:	ldr	x0, [sp, #1336]
   2abc0:	bl	cc20 <mpfr_free_func@plt>
   2abc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2abc8:	ldr	x1, [x0, #2576]
   2abcc:	add	x0, x0, #0xa10
   2abd0:	blr	x1
   2abd4:	mrs	x1, tpidr_el0
   2abd8:	ldr	w4, [sp, #268]
   2abdc:	str	w4, [x1, x0]
   2abe0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2abe4:	ldr	x2, [x0, #2512]
   2abe8:	add	x0, x0, #0x9d0
   2abec:	blr	x2
   2abf0:	ldr	x2, [sp, #272]
   2abf4:	str	x2, [x1, x0]
   2abf8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2abfc:	ldr	x3, [x0, #2544]
   2ac00:	add	x0, x0, #0x9f0
   2ac04:	blr	x3
   2ac08:	ldr	x3, [sp, #280]
   2ac0c:	str	x3, [x1, x0]
   2ac10:	ldr	x0, [sp, #184]
   2ac14:	ldr	x0, [x0, #16]
   2ac18:	cmp	x3, x0
   2ac1c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2ac20:	b.gt	2ad20 <mpfr_atan@@Base+0x11c8>
   2ac24:	cbz	w21, 2af8c <mpfr_atan@@Base+0x1434>
   2ac28:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ac2c:	ldr	x1, [x0, #2576]
   2ac30:	add	x0, x0, #0xa10
   2ac34:	blr	x1
   2ac38:	orr	w2, w4, #0x8
   2ac3c:	mrs	x1, tpidr_el0
   2ac40:	str	w2, [x1, x0]
   2ac44:	ldp	x19, x20, [sp, #16]
   2ac48:	ldp	x23, x24, [sp, #48]
   2ac4c:	ldp	x25, x26, [sp, #64]
   2ac50:	ldp	x27, x28, [sp, #80]
   2ac54:	mov	w0, w21
   2ac58:	ldp	x21, x22, [sp, #32]
   2ac5c:	ldp	x29, x30, [sp]
   2ac60:	mov	x12, #0x12a0                	// #4768
   2ac64:	add	sp, sp, x12
   2ac68:	ret
   2ac6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ac70:	ldr	x1, [x0, #2624]
   2ac74:	add	x0, x0, #0xa40
   2ac78:	blr	x1
   2ac7c:	add	x19, sp, #0x1, lsl #12
   2ac80:	add	x19, x19, #0x220
   2ac84:	mov	w2, #0x0                   	// #0
   2ac88:	mrs	x1, tpidr_el0
   2ac8c:	add	x1, x1, x0
   2ac90:	mov	x0, x19
   2ac94:	bl	c380 <mpfr_cache@plt>
   2ac98:	mov	w3, #0x0                   	// #0
   2ac9c:	mov	x2, #0x1                   	// #1
   2aca0:	mov	x1, x19
   2aca4:	mov	x0, x19
   2aca8:	bl	c8f0 <mpfr_div_2ui@plt>
   2acac:	add	x0, sp, #0x1, lsl #12
   2acb0:	add	x0, x0, #0x260
   2acb4:	mov	w3, #0x0                   	// #0
   2acb8:	mov	x2, x0
   2acbc:	mov	x1, x19
   2acc0:	bl	bb70 <mpfr_sub@plt>
   2acc4:	b	2aafc <mpfr_atan@@Base+0xfa4>
   2acc8:	mov	x0, #0xfffffffffffffeff    	// #-257
   2accc:	movk	x0, #0x7fff, lsl #48
   2acd0:	ldr	x1, [sp, #216]
   2acd4:	sub	x0, x0, x1
   2acd8:	ldr	x1, [sp, #288]
   2acdc:	cmp	x0, x1
   2ace0:	b.lt	2ad08 <mpfr_atan@@Base+0x11b0>  // b.tstop
   2ace4:	ldr	x0, [sp, #216]
   2ace8:	ldr	x1, [sp, #288]
   2acec:	add	x0, x0, x1
   2acf0:	str	x0, [sp, #216]
   2acf4:	add	x0, x0, x0, lsr #63
   2acf8:	asr	x0, x0, #1
   2acfc:	str	x0, [sp, #288]
   2ad00:	ldr	w20, [sp, #264]
   2ad04:	b	29d44 <mpfr_atan@@Base+0x1ec>
   2ad08:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2ad0c:	add	x2, x2, #0xca0
   2ad10:	mov	w1, #0x1f6                 	// #502
   2ad14:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2ad18:	add	x0, x0, #0xc68
   2ad1c:	bl	cb40 <mpfr_assert_fail@plt>
   2ad20:	ldr	w2, [sp, #228]
   2ad24:	mov	w1, w21
   2ad28:	ldr	x0, [sp, #184]
   2ad2c:	bl	cb30 <mpfr_check_range@plt>
   2ad30:	mov	w21, w0
   2ad34:	ldp	x19, x20, [sp, #16]
   2ad38:	ldp	x23, x24, [sp, #48]
   2ad3c:	ldp	x25, x26, [sp, #64]
   2ad40:	ldp	x27, x28, [sp, #80]
   2ad44:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2ad48:	ldr	w0, [sp, #1476]
   2ad4c:	b	2a81c <mpfr_atan@@Base+0xcc4>
   2ad50:	lsr	x23, x23, #1
   2ad54:	tbnz	w23, #0, 2af4c <mpfr_atan@@Base+0x13f4>
   2ad58:	mov	w0, #0x1                   	// #1
   2ad5c:	str	w0, [sp, #120]
   2ad60:	add	x24, x24, #0x1
   2ad64:	sub	x21, x21, #0x1
   2ad68:	sub	x19, x19, #0x10
   2ad6c:	sub	x20, x20, #0x10
   2ad70:	add	x25, x25, #0x10
   2ad74:	str	w21, [sp, #180]
   2ad78:	mov	x2, x20
   2ad7c:	mov	x1, x19
   2ad80:	mov	x0, x19
   2ad84:	bl	bff0 <__gmpz_mul@plt>
   2ad88:	mov	x2, x25
   2ad8c:	mov	x1, x19
   2ad90:	mov	x0, x19
   2ad94:	bl	bff0 <__gmpz_mul@plt>
   2ad98:	sub	x22, x19, #0x10
   2ad9c:	add	x26, x20, #0x10
   2ada0:	mov	x2, x26
   2ada4:	mov	x1, x22
   2ada8:	mov	x0, x22
   2adac:	bl	bff0 <__gmpz_mul@plt>
   2adb0:	sub	w2, w24, #0x1
   2adb4:	lsl	x2, x28, x2
   2adb8:	mov	x1, x22
   2adbc:	mov	x0, x22
   2adc0:	bl	c200 <__gmpz_mul_2exp@plt>
   2adc4:	mov	x2, x19
   2adc8:	mov	x1, x22
   2adcc:	mov	x0, x22
   2add0:	bl	c9c0 <__gmpz_add@plt>
   2add4:	mov	x2, x26
   2add8:	mov	x1, x20
   2addc:	mov	x0, x20
   2ade0:	bl	bff0 <__gmpz_mul@plt>
   2ade4:	sub	w22, w21, #0x1
   2ade8:	ldr	x0, [sp, #96]
   2adec:	add	x0, x0, x21, lsl #3
   2adf0:	stur	x24, [x0, #-8]
   2adf4:	ldr	w0, [x25, #20]
   2adf8:	cmp	w0, #0x0
   2adfc:	cneg	w1, w0, lt  // lt = tstop
   2ae00:	ldr	x0, [x25, #24]
   2ae04:	add	x0, x0, w1, sxtw #3
   2ae08:	ldur	x2, [x0, #-8]
   2ae0c:	lsl	x0, x28, x24
   2ae10:	sbfiz	x1, x1, #6, #32
   2ae14:	sub	x0, x0, x1
   2ae18:	clz	x1, x2
   2ae1c:	sub	x1, x1, #0x1
   2ae20:	add	x0, x0, x1
   2ae24:	cmp	w21, #0x1
   2ae28:	b.eq	2ae38 <mpfr_atan@@Base+0x12e0>  // b.none
   2ae2c:	sub	w1, w21, #0x2
   2ae30:	ldr	x1, [x27, w1, sxtw #3]
   2ae34:	add	x0, x0, x1
   2ae38:	add	x1, x27, x21, lsl #3
   2ae3c:	stur	x0, [x1, #-8]
   2ae40:	ldr	x1, [sp, #152]
   2ae44:	cmp	x1, x0
   2ae48:	b.lt	2ad50 <mpfr_atan@@Base+0x11f8>  // b.tstop
   2ae4c:	lsr	x23, x23, #1
   2ae50:	tbz	w23, #0, 2ad60 <mpfr_atan@@Base+0x1208>
   2ae54:	add	w22, w22, #0x1
   2ae58:	ldr	w0, [sp, #120]
   2ae5c:	cmp	w0, #0x0
   2ae60:	cset	w1, eq  // eq = none
   2ae64:	ldr	x0, [sp, #208]
   2ae68:	ldr	x2, [sp, #168]
   2ae6c:	cmp	x0, x2
   2ae70:	cset	w0, hi  // hi = pmore
   2ae74:	ldr	x3, [sp, #160]
   2ae78:	add	x3, x3, #0x4
   2ae7c:	str	x3, [sp, #160]
   2ae80:	add	x2, x2, #0x2
   2ae84:	str	x2, [sp, #168]
   2ae88:	tst	w1, w0
   2ae8c:	b.eq	2a5fc <mpfr_atan@@Base+0xaa4>  // b.none
   2ae90:	sxtw	x21, w22
   2ae94:	add	x20, x21, #0x1
   2ae98:	lsl	x20, x20, #4
   2ae9c:	ldr	x0, [sp, #144]
   2aea0:	add	x23, x0, x20
   2aea4:	ldr	x24, [sp, #160]
   2aea8:	mov	x1, x24
   2aeac:	mov	x0, x23
   2aeb0:	bl	bcb0 <__gmpz_set_ui@plt>
   2aeb4:	ldr	x19, [sp, #112]
   2aeb8:	add	x26, x19, x20
   2aebc:	sub	x25, x24, #0x2
   2aec0:	mov	x2, x25
   2aec4:	ldr	x1, [sp, #200]
   2aec8:	mov	x0, x26
   2aecc:	bl	c100 <__gmpz_mul_ui@plt>
   2aed0:	sub	x24, x20, #0x10
   2aed4:	add	x19, x19, x24
   2aed8:	mov	x2, x28
   2aedc:	mov	x1, x23
   2aee0:	mov	x0, x19
   2aee4:	bl	c200 <__gmpz_mul_2exp@plt>
   2aee8:	mov	x2, x26
   2aeec:	mov	x1, x19
   2aef0:	mov	x0, x19
   2aef4:	bl	bde0 <__gmpz_sub@plt>
   2aef8:	mov	x2, x25
   2aefc:	mov	x1, x23
   2af00:	ldr	x0, [sp, #144]
   2af04:	add	x0, x0, x24
   2af08:	bl	c100 <__gmpz_mul_ui@plt>
   2af0c:	mov	x0, #0x1                   	// #1
   2af10:	ldr	x1, [sp, #96]
   2af14:	str	x0, [x1, x21, lsl #3]
   2af18:	ldr	x0, [sp, #168]
   2af1c:	str	w0, [sp, #176]
   2af20:	asr	w0, w0, #1
   2af24:	sxtw	x23, w0
   2af28:	and	w1, w0, #0x1
   2af2c:	str	w1, [sp, #120]
   2af30:	tbnz	w0, #0, 2a5f4 <mpfr_atan@@Base+0xa9c>
   2af34:	sub	x20, x20, #0x20
   2af38:	ldr	x0, [sp, #144]
   2af3c:	add	x20, x0, x20
   2af40:	ldr	x25, [sp, #128]
   2af44:	mov	x24, #0x2                   	// #2
   2af48:	b	2ad74 <mpfr_atan@@Base+0x121c>
   2af4c:	ldr	w27, [sp, #180]
   2af50:	b	2a730 <mpfr_atan@@Base+0xbd8>
   2af54:	mov	x1, #0x45                  	// #69
   2af58:	add	x0, sp, #0x1, lsl #12
   2af5c:	add	x0, x0, #0x1f0
   2af60:	bl	c900 <mpfr_mpz_init2@plt>
   2af64:	mov	x20, #0x45                  	// #69
   2af68:	mov	x0, #0x5                   	// #5
   2af6c:	str	x0, [sp, #216]
   2af70:	mov	x19, #0x2                   	// #2
   2af74:	b	29cd4 <mpfr_atan@@Base+0x17c>
   2af78:	ldp	x19, x20, [sp, #16]
   2af7c:	ldp	x23, x24, [sp, #48]
   2af80:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2af84:	ldp	x19, x20, [sp, #16]
   2af88:	b	2ac54 <mpfr_atan@@Base+0x10fc>
   2af8c:	ldp	x19, x20, [sp, #16]
   2af90:	ldp	x23, x24, [sp, #48]
   2af94:	ldp	x25, x26, [sp, #64]
   2af98:	ldp	x27, x28, [sp, #80]
   2af9c:	b	2ac54 <mpfr_atan@@Base+0x10fc>

000000000002afa0 <mpfr_cmp2@@Base>:
   2afa0:	stp	x29, x30, [sp, #-160]!
   2afa4:	mov	x29, sp
   2afa8:	stp	x19, x20, [sp, #16]
   2afac:	stp	x21, x22, [sp, #32]
   2afb0:	stp	x23, x24, [sp, #48]
   2afb4:	stp	x25, x26, [sp, #64]
   2afb8:	stp	x27, x28, [sp, #80]
   2afbc:	mov	x19, x0
   2afc0:	mov	x21, x1
   2afc4:	mov	x26, x2
   2afc8:	str	xzr, [sp, #144]
   2afcc:	ldr	x1, [x0, #16]
   2afd0:	ldr	x3, [x21, #16]
   2afd4:	mov	x0, #0x4                   	// #4
   2afd8:	movk	x0, #0x8000, lsl #48
   2afdc:	cmp	x3, x0
   2afe0:	sub	x3, x1, x3
   2afe4:	ccmp	x1, x0, #0x4, ne  // ne = any
   2afe8:	b.eq	2b0a8 <mpfr_cmp2@@Base+0x108>  // b.none
   2afec:	tbnz	x3, #63, 2b118 <mpfr_cmp2@@Base+0x178>
   2aff0:	mov	x20, x3
   2aff4:	ldr	x22, [x19, #24]
   2aff8:	ldr	x24, [x21, #24]
   2affc:	ldr	x1, [x19]
   2b000:	add	x2, x1, #0x3e
   2b004:	subs	x0, x1, #0x1
   2b008:	csel	x2, x2, x0, mi  // mi = first
   2b00c:	asr	x2, x2, #6
   2b010:	ldr	x0, [x21]
   2b014:	add	x19, x0, #0x3e
   2b018:	subs	x4, x0, #0x1
   2b01c:	csel	x19, x19, x4, mi  // mi = first
   2b020:	asr	x19, x19, #6
   2b024:	cbnz	x3, 2b398 <mpfr_cmp2@@Base+0x3f8>
   2b028:	cmn	x1, #0x3e
   2b02c:	mov	x21, #0x0                   	// #0
   2b030:	mov	x1, #0xffffffffffffffc2    	// #-62
   2b034:	ccmp	x0, x1, #0x1, ge  // ge = tcont
   2b038:	b.lt	2b060 <mpfr_cmp2@@Base+0xc0>  // b.tstop
   2b03c:	ldr	x1, [x22, x2, lsl #3]
   2b040:	ldr	x0, [x24, x19, lsl #3]
   2b044:	cmp	x1, x0
   2b048:	b.ne	2b060 <mpfr_cmp2@@Base+0xc0>  // b.any
   2b04c:	sub	x19, x19, #0x1
   2b050:	add	x21, x21, #0x40
   2b054:	subs	x2, x2, #0x1
   2b058:	ccmp	x19, #0x0, #0x1, pl  // pl = nfrst
   2b05c:	b.ge	2b03c <mpfr_cmp2@@Base+0x9c>  // b.tcont
   2b060:	tbnz	x2, #63, 2b0bc <mpfr_cmp2@@Base+0x11c>
   2b064:	tbnz	x19, #63, 2b0d4 <mpfr_cmp2@@Base+0x134>
   2b068:	ldr	x1, [x22, x2, lsl #3]
   2b06c:	ldr	x0, [x24, x19, lsl #3]
   2b070:	mov	w27, #0x1                   	// #1
   2b074:	cmp	x1, x0
   2b078:	b.cs	2b098 <mpfr_cmp2@@Base+0xf8>  // b.hs, b.nlast
   2b07c:	mov	x0, x2
   2b080:	mov	x2, x19
   2b084:	mov	x19, x0
   2b088:	mov	x0, x22
   2b08c:	mov	x22, x24
   2b090:	mov	x24, x0
   2b094:	mov	w27, #0xffffffff            	// #-1
   2b098:	ldr	x0, [x24, x19, lsl #3]
   2b09c:	str	x0, [sp, #144]
   2b0a0:	mov	x25, x20
   2b0a4:	b	2b178 <mpfr_cmp2@@Base+0x1d8>
   2b0a8:	mov	x1, x21
   2b0ac:	mov	x0, x19
   2b0b0:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   2b0b4:	mov	x3, x0
   2b0b8:	b	2afec <mpfr_cmp2@@Base+0x4c>
   2b0bc:	mov	w27, #0x0                   	// #0
   2b0c0:	tbnz	x19, #63, 2b1c0 <mpfr_cmp2@@Base+0x220>
   2b0c4:	mov	x2, x19
   2b0c8:	mov	x22, x24
   2b0cc:	mov	w27, #0xffffffff            	// #-1
   2b0d0:	b	2b0d8 <mpfr_cmp2@@Base+0x138>
   2b0d4:	mov	w27, #0x1                   	// #1
   2b0d8:	ldr	x0, [x22, x2, lsl #3]
   2b0dc:	cbnz	x0, 2b108 <mpfr_cmp2@@Base+0x168>
   2b0e0:	subs	x2, x2, #0x1
   2b0e4:	b.mi	2b370 <mpfr_cmp2@@Base+0x3d0>  // b.first
   2b0e8:	add	x21, x21, #0x40
   2b0ec:	ldr	x0, [x22, x2, lsl #3]
   2b0f0:	cbnz	x0, 2b108 <mpfr_cmp2@@Base+0x168>
   2b0f4:	sub	x2, x2, #0x1
   2b0f8:	cmn	x2, #0x1
   2b0fc:	b.ne	2b0e8 <mpfr_cmp2@@Base+0x148>  // b.any
   2b100:	mov	w27, #0x0                   	// #0
   2b104:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b108:	clz	x0, x0
   2b10c:	add	x21, x0, x21
   2b110:	str	x21, [x26]
   2b114:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b118:	neg	x20, x3
   2b11c:	ldr	x22, [x21, #24]
   2b120:	ldr	x24, [x19, #24]
   2b124:	ldr	x0, [x21]
   2b128:	add	x2, x0, #0x3e
   2b12c:	subs	x0, x0, #0x1
   2b130:	csel	x0, x2, x0, mi  // mi = first
   2b134:	asr	x2, x0, #6
   2b138:	ldr	x0, [x19]
   2b13c:	add	x19, x0, #0x3e
   2b140:	subs	x0, x0, #0x1
   2b144:	csel	x0, x19, x0, mi  // mi = first
   2b148:	asr	x19, x0, #6
   2b14c:	mov	w27, #0xffffffff            	// #-1
   2b150:	cmp	x20, #0x3f
   2b154:	b.hi	2b1e0 <mpfr_cmp2@@Base+0x240>  // b.pmore
   2b158:	ldr	x0, [x24, x19, lsl #3]
   2b15c:	lsr	x0, x0, x20
   2b160:	str	x0, [sp, #144]
   2b164:	ldr	x0, [x24, x19, lsl #3]
   2b168:	mov	x25, x20
   2b16c:	neg	w20, w20
   2b170:	lsl	x20, x0, x20
   2b174:	mov	x21, #0x0                   	// #0
   2b178:	sub	x19, x19, #0x1
   2b17c:	sub	x23, x2, #0x1
   2b180:	ldr	x0, [x22, x2, lsl #3]
   2b184:	ldr	x1, [sp, #144]
   2b188:	sub	x0, x0, x1
   2b18c:	str	x0, [sp, #136]
   2b190:	cmp	x19, #0x0
   2b194:	ccmp	x20, #0x0, #0x0, lt  // lt = tstop
   2b198:	b.ne	2b1f0 <mpfr_cmp2@@Base+0x250>  // b.any
   2b19c:	mov	x20, #0x0                   	// #0
   2b1a0:	ldr	x1, [sp, #136]
   2b1a4:	clz	x2, x1
   2b1a8:	add	x21, x2, x21
   2b1ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2b1b0:	lsr	x0, x0, x2
   2b1b4:	cmp	x1, x0
   2b1b8:	b.eq	2b27c <mpfr_cmp2@@Base+0x2dc>  // b.none
   2b1bc:	str	x21, [x26]
   2b1c0:	mov	w0, w27
   2b1c4:	ldp	x19, x20, [sp, #16]
   2b1c8:	ldp	x21, x22, [sp, #32]
   2b1cc:	ldp	x23, x24, [sp, #48]
   2b1d0:	ldp	x25, x26, [sp, #64]
   2b1d4:	ldp	x27, x28, [sp, #80]
   2b1d8:	ldp	x29, x30, [sp], #160
   2b1dc:	ret
   2b1e0:	sub	x25, x20, #0x40
   2b1e4:	mov	x21, #0x0                   	// #0
   2b1e8:	mov	x20, #0x0                   	// #0
   2b1ec:	b	2b17c <mpfr_cmp2@@Base+0x1dc>
   2b1f0:	cmp	x0, #0x1
   2b1f4:	b.ne	2b1a0 <mpfr_cmp2@@Base+0x200>  // b.any
   2b1f8:	add	x0, sp, #0x90
   2b1fc:	str	x0, [sp, #104]
   2b200:	add	x0, sp, #0x98
   2b204:	str	x0, [sp, #112]
   2b208:	add	x0, sp, #0x88
   2b20c:	str	x0, [sp, #120]
   2b210:	mov	x28, #0x1                   	// #1
   2b214:	mov	x0, #0x0                   	// #0
   2b218:	tbnz	x23, #63, 2b220 <mpfr_cmp2@@Base+0x280>
   2b21c:	ldr	x0, [x22, x23, lsl #3]
   2b220:	str	x0, [sp, #152]
   2b224:	str	x20, [sp, #144]
   2b228:	tbnz	x19, #63, 2b2b0 <mpfr_cmp2@@Base+0x310>
   2b22c:	cbnz	x25, 2b298 <mpfr_cmp2@@Base+0x2f8>
   2b230:	ldr	x0, [x24, x19, lsl #3]
   2b234:	add	x0, x0, x20
   2b238:	str	x0, [sp, #144]
   2b23c:	mov	x3, x28
   2b240:	ldr	x2, [sp, #104]
   2b244:	ldr	x1, [sp, #112]
   2b248:	ldr	x0, [sp, #120]
   2b24c:	bl	be60 <__gmpn_sub_n@plt>
   2b250:	sub	x0, x28, x0
   2b254:	sub	x23, x23, #0x1
   2b258:	add	x1, x21, #0x40
   2b25c:	subs	x19, x19, #0x1
   2b260:	ccmp	x20, #0x0, #0x0, mi  // mi = first
   2b264:	b.ne	2b2b8 <mpfr_cmp2@@Base+0x318>  // b.any
   2b268:	mov	x20, #0x0                   	// #0
   2b26c:	cbz	x0, 2b2d8 <mpfr_cmp2@@Base+0x338>
   2b270:	add	x21, x21, #0x3f
   2b274:	ldr	x0, [sp, #136]
   2b278:	cbnz	x0, 2b2d0 <mpfr_cmp2@@Base+0x330>
   2b27c:	tbnz	x23, #63, 2b378 <mpfr_cmp2@@Base+0x3d8>
   2b280:	cmp	x19, #0x0
   2b284:	ccmp	x20, #0x0, #0x0, lt  // lt = tstop
   2b288:	mov	x2, #0x0                   	// #0
   2b28c:	mov	w3, #0x40                  	// #64
   2b290:	b.ne	2b33c <mpfr_cmp2@@Base+0x39c>  // b.any
   2b294:	b	2b35c <mpfr_cmp2@@Base+0x3bc>
   2b298:	ldr	x0, [x24, x19, lsl #3]
   2b29c:	add	x20, x20, x0, lsr #1
   2b2a0:	str	x20, [sp, #144]
   2b2a4:	ldr	x20, [x24, x19, lsl #3]
   2b2a8:	lsl	x20, x20, #63
   2b2ac:	b	2b23c <mpfr_cmp2@@Base+0x29c>
   2b2b0:	mov	x20, #0x0                   	// #0
   2b2b4:	b	2b23c <mpfr_cmp2@@Base+0x29c>
   2b2b8:	cmp	x0, #0x0
   2b2bc:	ldr	x2, [sp, #136]
   2b2c0:	ccmp	x2, #0x1, #0x0, eq  // eq = none
   2b2c4:	b.ne	2b26c <mpfr_cmp2@@Base+0x2cc>  // b.any
   2b2c8:	mov	x21, x1
   2b2cc:	b	2b214 <mpfr_cmp2@@Base+0x274>
   2b2d0:	str	x21, [x26]
   2b2d4:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b2d8:	mov	x21, x1
   2b2dc:	b	2b1a0 <mpfr_cmp2@@Base+0x200>
   2b2e0:	str	x20, [sp, #144]
   2b2e4:	tbnz	x19, #63, 2b30c <mpfr_cmp2@@Base+0x36c>
   2b2e8:	ldr	x0, [x24, x19, lsl #3]
   2b2ec:	lsr	x0, x0, x25
   2b2f0:	add	x0, x0, x20
   2b2f4:	str	x0, [sp, #144]
   2b2f8:	cbz	x25, 2b310 <mpfr_cmp2@@Base+0x370>
   2b2fc:	sub	w20, w3, w25
   2b300:	ldr	x0, [x24, x19, lsl #3]
   2b304:	lsl	x20, x0, x20
   2b308:	b	2b310 <mpfr_cmp2@@Base+0x370>
   2b30c:	mov	x20, x2
   2b310:	sub	x19, x19, #0x1
   2b314:	ldr	x1, [x22, x23, lsl #3]
   2b318:	ldr	x0, [sp, #144]
   2b31c:	cmp	x1, x0
   2b320:	b.ne	2b34c <mpfr_cmp2@@Base+0x3ac>  // b.any
   2b324:	sub	x23, x23, #0x1
   2b328:	cmn	x23, #0x1
   2b32c:	b.eq	2b378 <mpfr_cmp2@@Base+0x3d8>  // b.none
   2b330:	cmp	x19, #0x0
   2b334:	ccmp	x20, #0x0, #0x0, lt  // lt = tstop
   2b338:	b.eq	2b35c <mpfr_cmp2@@Base+0x3bc>  // b.none
   2b33c:	cmp	x25, #0x3f
   2b340:	b.ls	2b2e0 <mpfr_cmp2@@Base+0x340>  // b.plast
   2b344:	sub	x25, x25, #0x40
   2b348:	b	2b314 <mpfr_cmp2@@Base+0x374>
   2b34c:	cinc	x21, x21, cc  // cc = lo, ul, last
   2b350:	str	x21, [x26]
   2b354:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b358:	add	x21, x21, #0x1
   2b35c:	str	x21, [x26]
   2b360:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b364:	mvn	x19, x19
   2b368:	add	x21, x21, x19, lsr #63
   2b36c:	b	2b35c <mpfr_cmp2@@Base+0x3bc>
   2b370:	mov	w27, #0x0                   	// #0
   2b374:	b	2b1c0 <mpfr_cmp2@@Base+0x220>
   2b378:	cbnz	x20, 2b358 <mpfr_cmp2@@Base+0x3b8>
   2b37c:	tbnz	x19, #63, 2b35c <mpfr_cmp2@@Base+0x3bc>
   2b380:	ldr	x0, [x24, x19, lsl #3]
   2b384:	cbnz	x0, 2b364 <mpfr_cmp2@@Base+0x3c4>
   2b388:	sub	x19, x19, #0x1
   2b38c:	cmn	x19, #0x1
   2b390:	b.ne	2b380 <mpfr_cmp2@@Base+0x3e0>  // b.any
   2b394:	b	2b35c <mpfr_cmp2@@Base+0x3bc>
   2b398:	mov	w27, #0x1                   	// #1
   2b39c:	b	2b150 <mpfr_cmp2@@Base+0x1b0>
   2b3a0:	stp	x29, x30, [sp, #-32]!
   2b3a4:	mov	x29, sp
   2b3a8:	str	x19, [sp, #16]
   2b3ac:	mov	x19, x3
   2b3b0:	cmp	x3, x2
   2b3b4:	b.le	2b3d0 <mpfr_cmp2@@Base+0x430>
   2b3b8:	sub	x2, x3, x2
   2b3bc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2b3c0:	mov	x0, x19
   2b3c4:	ldr	x19, [sp, #16]
   2b3c8:	ldp	x29, x30, [sp], #32
   2b3cc:	ret
   2b3d0:	sub	x2, x2, x3
   2b3d4:	bl	c200 <__gmpz_mul_2exp@plt>
   2b3d8:	b	2b3c0 <mpfr_cmp2@@Base+0x420>
   2b3dc:	stp	x29, x30, [sp, #-32]!
   2b3e0:	mov	x29, sp
   2b3e4:	stp	x19, x20, [sp, #16]
   2b3e8:	mov	x20, x2
   2b3ec:	ldr	w3, [x1, #4]
   2b3f0:	cmp	w3, #0x0
   2b3f4:	cneg	w3, w3, lt  // lt = tstop
   2b3f8:	ldr	x2, [x1, #8]
   2b3fc:	add	x2, x2, w3, sxtw #3
   2b400:	ldur	x19, [x2, #-8]
   2b404:	sbfiz	x3, x3, #6, #32
   2b408:	clz	x19, x19
   2b40c:	sub	x19, x3, x19
   2b410:	cmp	x20, #0x0
   2b414:	ccmp	x20, x19, #0x0, ge  // ge = tcont
   2b418:	b.cs	2b434 <mpfr_cmp2@@Base+0x494>  // b.hs, b.nlast
   2b41c:	sub	x2, x19, x20
   2b420:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2b424:	sub	x0, x19, x20
   2b428:	ldp	x19, x20, [sp, #16]
   2b42c:	ldp	x29, x30, [sp], #32
   2b430:	ret
   2b434:	bl	bfa0 <__gmpz_set@plt>
   2b438:	mov	x0, #0x0                   	// #0
   2b43c:	b	2b428 <mpfr_cmp2@@Base+0x488>
   2b440:	stp	x29, x30, [sp, #-288]!
   2b444:	mov	x29, sp
   2b448:	stp	x19, x20, [sp, #16]
   2b44c:	stp	x21, x22, [sp, #32]
   2b450:	stp	x23, x24, [sp, #48]
   2b454:	stp	x25, x26, [sp, #64]
   2b458:	stp	x27, x28, [sp, #80]
   2b45c:	mov	x27, x0
   2b460:	mov	x25, x1
   2b464:	str	x2, [x29, #192]
   2b468:	str	x3, [x29, #208]
   2b46c:	ldr	x0, [x1, #16]
   2b470:	neg	x0, x0
   2b474:	sdiv	x0, x2, x0
   2b478:	bl	bf20 <__gmpfr_isqrt@plt>
   2b47c:	mov	x21, x0
   2b480:	cmp	x0, #0x2
   2b484:	mov	x0, #0x2                   	// #2
   2b488:	csel	x0, x21, x0, cs  // cs = hs, nlast
   2b48c:	str	x0, [x29, #216]
   2b490:	str	xzr, [x29, #232]
   2b494:	add	x24, x0, #0x1
   2b498:	lsl	x0, x24, #4
   2b49c:	str	x0, [x29, #200]
   2b4a0:	cmp	x0, #0x4, lsl #12
   2b4a4:	b.hi	2b5bc <mpfr_cmp2@@Base+0x61c>  // b.pmore
   2b4a8:	sub	sp, sp, x0
   2b4ac:	mov	x22, sp
   2b4b0:	lsl	x0, x24, #3
   2b4b4:	str	x0, [x29, #176]
   2b4b8:	cmp	x0, #0x4, lsl #12
   2b4bc:	b.hi	2b5d0 <mpfr_cmp2@@Base+0x630>  // b.pmore
   2b4c0:	add	x0, x0, #0xf
   2b4c4:	and	x0, x0, #0xfffffffffffffff0
   2b4c8:	sub	sp, sp, x0
   2b4cc:	mov	x0, sp
   2b4d0:	str	x0, [x29, #136]
   2b4d4:	add	x0, x29, #0xf0
   2b4d8:	bl	bf90 <mpfr_mpz_init@plt>
   2b4dc:	add	x0, x29, #0x100
   2b4e0:	bl	bf90 <mpfr_mpz_init@plt>
   2b4e4:	add	x0, x29, #0x110
   2b4e8:	bl	bf90 <mpfr_mpz_init@plt>
   2b4ec:	mov	x1, #0x0                   	// #0
   2b4f0:	mov	x0, x27
   2b4f4:	bl	bcb0 <__gmpz_set_ui@plt>
   2b4f8:	mov	x23, #0x1                   	// #1
   2b4fc:	ldr	x0, [x29, #192]
   2b500:	sub	x23, x23, x0
   2b504:	ldr	x0, [x29, #208]
   2b508:	str	x23, [x0]
   2b50c:	mov	x26, x22
   2b510:	ldr	x0, [x29, #200]
   2b514:	add	x20, x0, x22
   2b518:	mov	x19, x22
   2b51c:	mov	x0, x19
   2b520:	bl	bf90 <mpfr_mpz_init@plt>
   2b524:	add	x19, x19, #0x10
   2b528:	cmp	x19, x20
   2b52c:	b.ne	2b51c <mpfr_cmp2@@Base+0x57c>  // b.any
   2b530:	add	x28, x22, #0x10
   2b534:	mov	x1, x25
   2b538:	mov	x0, x28
   2b53c:	bl	cac0 <mpfr_get_z_2exp@plt>
   2b540:	mov	x2, x0
   2b544:	ldr	x20, [x29, #136]
   2b548:	str	x0, [x20, #8]
   2b54c:	mov	x3, x23
   2b550:	mov	x1, x28
   2b554:	mov	x0, x28
   2b558:	bl	2b3a0 <mpfr_cmp2@@Base+0x400>
   2b55c:	str	x0, [x20, #8]
   2b560:	add	x19, x29, #0x110
   2b564:	mov	x2, x28
   2b568:	mov	x1, x28
   2b56c:	mov	x0, x19
   2b570:	bl	bff0 <__gmpz_mul@plt>
   2b574:	ldr	x0, [x29, #192]
   2b578:	sub	x25, x0, #0x1
   2b57c:	mov	x2, x25
   2b580:	mov	x1, x19
   2b584:	add	x0, x22, #0x20
   2b588:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2b58c:	mov	x0, x20
   2b590:	str	x23, [x20, #16]
   2b594:	cmp	x21, #0x2
   2b598:	b.ls	2b63c <mpfr_cmp2@@Base+0x69c>  // b.plast
   2b59c:	add	x20, x22, #0x30
   2b5a0:	mov	x19, #0x3                   	// #3
   2b5a4:	add	x21, x29, #0x110
   2b5a8:	str	x26, [x29, #184]
   2b5ac:	ldr	x26, [x29, #216]
   2b5b0:	str	x24, [x29, #168]
   2b5b4:	mov	x24, x0
   2b5b8:	b	2b61c <mpfr_cmp2@@Base+0x67c>
   2b5bc:	ldr	x1, [x29, #200]
   2b5c0:	add	x0, x29, #0xe8
   2b5c4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2b5c8:	mov	x22, x0
   2b5cc:	b	2b4b0 <mpfr_cmp2@@Base+0x510>
   2b5d0:	ldr	x1, [x29, #176]
   2b5d4:	add	x0, x29, #0xe8
   2b5d8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2b5dc:	str	x0, [x29, #136]
   2b5e0:	b	2b4d4 <mpfr_cmp2@@Base+0x534>
   2b5e4:	lsr	x1, x19, #1
   2b5e8:	add	x1, x22, x1, lsl #4
   2b5ec:	mov	x2, x1
   2b5f0:	mov	x0, x21
   2b5f4:	bl	bff0 <__gmpz_mul@plt>
   2b5f8:	mov	x2, x25
   2b5fc:	mov	x1, x21
   2b600:	mov	x0, x20
   2b604:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2b608:	str	x23, [x24, x19, lsl #3]
   2b60c:	add	x19, x19, #0x1
   2b610:	add	x20, x20, #0x10
   2b614:	cmp	x26, x19
   2b618:	b.cc	2b634 <mpfr_cmp2@@Base+0x694>  // b.lo, b.ul, b.last
   2b61c:	tbz	w19, #0, 2b5e4 <mpfr_cmp2@@Base+0x644>
   2b620:	mov	x2, x28
   2b624:	sub	x1, x20, #0x10
   2b628:	mov	x0, x21
   2b62c:	bl	bff0 <__gmpz_mul@plt>
   2b630:	b	2b5f8 <mpfr_cmp2@@Base+0x658>
   2b634:	ldr	x26, [x29, #184]
   2b638:	ldr	x24, [x29, #168]
   2b63c:	mov	x1, #0x1                   	// #1
   2b640:	mov	x0, x22
   2b644:	bl	bcb0 <__gmpz_set_ui@plt>
   2b648:	mov	x2, x25
   2b64c:	mov	x1, x22
   2b650:	mov	x0, x22
   2b654:	bl	c200 <__gmpz_mul_2exp@plt>
   2b658:	ldr	x19, [x29, #136]
   2b65c:	str	x23, [x19]
   2b660:	mov	x1, #0x1                   	// #1
   2b664:	add	x0, x29, #0x100
   2b668:	bl	bcb0 <__gmpz_set_ui@plt>
   2b66c:	ldr	x2, [x29, #200]
   2b670:	sub	x0, x2, #0x20
   2b674:	add	x0, x22, x0
   2b678:	str	x0, [x29, #184]
   2b67c:	ldr	x3, [x29, #176]
   2b680:	sub	x0, x3, #0x10
   2b684:	add	x0, x19, x0
   2b688:	str	x0, [x29, #176]
   2b68c:	sub	x0, x2, #0x10
   2b690:	add	x0, x22, x0
   2b694:	str	x0, [x29, #168]
   2b698:	sub	x0, x3, #0x8
   2b69c:	add	x0, x19, x0
   2b6a0:	str	x0, [x29, #160]
   2b6a4:	ldr	x1, [x29, #216]
   2b6a8:	sub	x0, x1, #0x2
   2b6ac:	add	x0, x22, x0, lsl #4
   2b6b0:	str	x0, [x29, #152]
   2b6b4:	lsl	x0, x1, #4
   2b6b8:	str	x0, [x29, #104]
   2b6bc:	add	x0, x0, x26
   2b6c0:	str	x0, [x29, #112]
   2b6c4:	ldr	x0, [x29, #192]
   2b6c8:	mov	x21, x0
   2b6cc:	mov	x23, #0x0                   	// #0
   2b6d0:	mov	x25, #0x0                   	// #0
   2b6d4:	add	x19, x29, #0x110
   2b6d8:	add	x1, x29, #0x100
   2b6dc:	str	x1, [x29, #200]
   2b6e0:	add	x22, x29, #0xf0
   2b6e4:	neg	x0, x0
   2b6e8:	str	x0, [x29, #144]
   2b6ec:	str	x26, [x29, #128]
   2b6f0:	b	2b6fc <mpfr_cmp2@@Base+0x75c>
   2b6f4:	ldr	x0, [x29, #216]
   2b6f8:	add	x24, x24, x0
   2b6fc:	mov	x0, #0x1                   	// #1
   2b700:	sub	x3, x0, x21
   2b704:	ldr	x0, [x29, #176]
   2b708:	ldr	x2, [x0]
   2b70c:	ldr	x1, [x29, #184]
   2b710:	mov	x0, x19
   2b714:	bl	2b3a0 <mpfr_cmp2@@Base+0x400>
   2b718:	mov	x28, x0
   2b71c:	sub	x20, x24, #0x2
   2b720:	ldr	x26, [x29, #152]
   2b724:	mov	x2, x20
   2b728:	mov	x1, x19
   2b72c:	mov	x0, x19
   2b730:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2b734:	mov	x2, x26
   2b738:	mov	x1, x19
   2b73c:	mov	x0, x19
   2b740:	bl	c9c0 <__gmpz_add@plt>
   2b744:	sub	x20, x20, #0x1
   2b748:	sub	x26, x26, #0x10
   2b74c:	cmp	x20, x23
   2b750:	b.ne	2b724 <mpfr_cmp2@@Base+0x784>  // b.any
   2b754:	ldr	x20, [x29, #200]
   2b758:	mov	x2, x20
   2b75c:	mov	x1, x19
   2b760:	mov	x0, x19
   2b764:	bl	bff0 <__gmpz_mul@plt>
   2b768:	ldr	x0, [x29, #208]
   2b76c:	ldr	x3, [x0]
   2b770:	add	x2, x25, x28
   2b774:	mov	x1, x19
   2b778:	mov	x0, x19
   2b77c:	bl	2b3a0 <mpfr_cmp2@@Base+0x400>
   2b780:	mov	x2, x19
   2b784:	mov	x1, x27
   2b788:	mov	x0, x27
   2b78c:	bl	c9c0 <__gmpz_add@plt>
   2b790:	ldr	x2, [x29, #168]
   2b794:	mov	x1, x20
   2b798:	mov	x0, x19
   2b79c:	bl	bff0 <__gmpz_mul@plt>
   2b7a0:	ldr	x0, [x29, #160]
   2b7a4:	ldr	x0, [x0]
   2b7a8:	add	x25, x25, x0
   2b7ac:	mov	x1, #0x1                   	// #1
   2b7b0:	mov	x0, x22
   2b7b4:	bl	bcb0 <__gmpz_set_ui@plt>
   2b7b8:	add	x20, x23, #0x1
   2b7bc:	mov	x2, x20
   2b7c0:	mov	x1, x22
   2b7c4:	mov	x0, x22
   2b7c8:	bl	c100 <__gmpz_mul_ui@plt>
   2b7cc:	add	x20, x20, #0x1
   2b7d0:	cmp	x20, x24
   2b7d4:	b.ne	2b7bc <mpfr_cmp2@@Base+0x81c>  // b.any
   2b7d8:	mov	x2, x22
   2b7dc:	mov	x1, x19
   2b7e0:	mov	x0, x19
   2b7e4:	bl	be30 <__gmpz_fdiv_q@plt>
   2b7e8:	ldr	x0, [x29, #216]
   2b7ec:	add	x23, x23, x0
   2b7f0:	ldr	w0, [x29, #276]
   2b7f4:	cbz	w0, 2b8cc <mpfr_cmp2@@Base+0x92c>
   2b7f8:	mov	x2, x21
   2b7fc:	mov	x1, x19
   2b800:	ldr	x0, [x29, #200]
   2b804:	bl	2b3dc <mpfr_cmp2@@Base+0x43c>
   2b808:	add	x25, x25, x0
   2b80c:	ldr	w0, [x29, #260]
   2b810:	cbz	w0, 2b940 <mpfr_cmp2@@Base+0x9a0>
   2b814:	cmp	w0, #0x0
   2b818:	cneg	w0, w0, lt  // lt = tstop
   2b81c:	ldr	x1, [x29, #264]
   2b820:	add	x1, x1, w0, sxtw #3
   2b824:	ldur	x1, [x1, #-8]
   2b828:	sbfiz	x0, x0, #6, #32
   2b82c:	clz	x1, x1
   2b830:	sub	x0, x0, x1
   2b834:	ldr	w1, [x27, #4]
   2b838:	cmp	w1, #0x0
   2b83c:	cneg	w1, w1, lt  // lt = tstop
   2b840:	ldr	x2, [x27, #8]
   2b844:	add	x2, x2, w1, sxtw #3
   2b848:	ldur	x2, [x2, #-8]
   2b84c:	ldr	x3, [x29, #208]
   2b850:	ldr	x21, [x3]
   2b854:	ldr	x3, [x29, #192]
   2b858:	sub	x21, x3, x21
   2b85c:	sbfiz	x1, x1, #6, #32
   2b860:	clz	x2, x2
   2b864:	sub	x1, x1, x2
   2b868:	sub	x21, x21, x1
   2b86c:	add	x21, x21, x25
   2b870:	add	x21, x21, x0
   2b874:	add	x0, x25, x0
   2b878:	ldr	x1, [x29, #144]
   2b87c:	cmp	x0, x1
   2b880:	b.ls	2b8cc <mpfr_cmp2@@Base+0x92c>  // b.plast
   2b884:	cbz	x23, 2b6f4 <mpfr_cmp2@@Base+0x754>
   2b888:	ldr	x26, [x29, #136]
   2b88c:	ldr	x20, [x29, #128]
   2b890:	mov	x0, #0x1                   	// #1
   2b894:	sub	x28, x0, x21
   2b898:	str	x23, [x29, #120]
   2b89c:	ldr	x23, [x29, #112]
   2b8a0:	mov	x3, x28
   2b8a4:	ldr	x2, [x26]
   2b8a8:	mov	x1, x20
   2b8ac:	mov	x0, x20
   2b8b0:	bl	2b3a0 <mpfr_cmp2@@Base+0x400>
   2b8b4:	str	x0, [x26], #8
   2b8b8:	add	x20, x20, #0x10
   2b8bc:	cmp	x23, x20
   2b8c0:	b.ne	2b8a0 <mpfr_cmp2@@Base+0x900>  // b.any
   2b8c4:	ldr	x23, [x29, #120]
   2b8c8:	b	2b6f4 <mpfr_cmp2@@Base+0x754>
   2b8cc:	ldr	x26, [x29, #128]
   2b8d0:	ldr	x0, [x29, #104]
   2b8d4:	add	x19, x0, #0x10
   2b8d8:	add	x19, x19, x26
   2b8dc:	mov	x0, x26
   2b8e0:	bl	c170 <mpfr_mpz_clear@plt>
   2b8e4:	add	x26, x26, #0x10
   2b8e8:	cmp	x26, x19
   2b8ec:	b.ne	2b8dc <mpfr_cmp2@@Base+0x93c>  // b.any
   2b8f0:	ldr	x0, [x29, #232]
   2b8f4:	cbnz	x0, 2b938 <mpfr_cmp2@@Base+0x998>
   2b8f8:	add	x0, x29, #0x100
   2b8fc:	bl	c170 <mpfr_mpz_clear@plt>
   2b900:	add	x0, x29, #0x110
   2b904:	bl	c170 <mpfr_mpz_clear@plt>
   2b908:	add	x0, x29, #0xf0
   2b90c:	bl	c170 <mpfr_mpz_clear@plt>
   2b910:	add	x0, x23, #0x4
   2b914:	mul	x0, x0, x23
   2b918:	mov	sp, x29
   2b91c:	ldp	x19, x20, [sp, #16]
   2b920:	ldp	x21, x22, [sp, #32]
   2b924:	ldp	x23, x24, [sp, #48]
   2b928:	ldp	x25, x26, [sp, #64]
   2b92c:	ldp	x27, x28, [sp, #80]
   2b930:	ldp	x29, x30, [sp], #288
   2b934:	ret
   2b938:	bl	c410 <mpfr_tmp_free@plt>
   2b93c:	b	2b8f8 <mpfr_cmp2@@Base+0x958>
   2b940:	ldr	w1, [x27, #4]
   2b944:	mov	x0, #0x1                   	// #1
   2b948:	b	2b838 <mpfr_cmp2@@Base+0x898>

000000000002b94c <mpfr_exp_2@@Base>:
   2b94c:	stp	x29, x30, [sp, #-448]!
   2b950:	mov	x29, sp
   2b954:	stp	x19, x20, [sp, #16]
   2b958:	stp	x21, x22, [sp, #32]
   2b95c:	stp	x23, x24, [sp, #48]
   2b960:	stp	x25, x26, [sp, #64]
   2b964:	stp	x27, x28, [sp, #80]
   2b968:	str	x0, [sp, #152]
   2b96c:	str	x1, [sp, #128]
   2b970:	str	w2, [sp, #148]
   2b974:	ldr	x19, [x1, #16]
   2b978:	ldr	x0, [x0]
   2b97c:	str	x0, [sp, #120]
   2b980:	cmn	x19, #0x1
   2b984:	b.lt	2bc30 <mpfr_exp_2@@Base+0x2e4>  // b.tstop
   2b988:	mov	x0, #0x3f                  	// #63
   2b98c:	str	x0, [sp, #376]
   2b990:	add	x0, sp, #0xc8
   2b994:	str	x0, [sp, #400]
   2b998:	mov	w0, #0x1                   	// #1
   2b99c:	str	w0, [sp, #384]
   2b9a0:	mov	w3, #0x0                   	// #0
   2b9a4:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   2b9a8:	ldr	x2, [x2, #3984]
   2b9ac:	add	x0, sp, #0x178
   2b9b0:	bl	c620 <mpfr_div@plt>
   2b9b4:	ldr	x0, [sp, #392]
   2b9b8:	cmp	x0, #0x0
   2b9bc:	b.le	2c0bc <mpfr_exp_2@@Base+0x770>
   2b9c0:	ldr	x1, [sp, #400]
   2b9c4:	ldr	x1, [x1]
   2b9c8:	neg	w0, w0
   2b9cc:	lsr	x0, x1, x0
   2b9d0:	mov	x23, x0
   2b9d4:	ldr	w1, [sp, #384]
   2b9d8:	cmp	w1, #0x0
   2b9dc:	b.le	2bc24 <mpfr_exp_2@@Base+0x2d8>
   2b9e0:	cbz	x23, 2bc3c <mpfr_exp_2@@Base+0x2f0>
   2b9e4:	add	x0, x23, #0x1
   2b9e8:	tbnz	x23, #63, 2c0b0 <mpfr_exp_2@@Base+0x764>
   2b9ec:	clz	x0, x0
   2b9f0:	mov	w1, #0x40                  	// #64
   2b9f4:	sub	w0, w1, w0
   2b9f8:	str	w0, [sp, #144]
   2b9fc:	ldr	x0, [sp, #120]
   2ba00:	cmp	x0, #0x63
   2ba04:	b.gt	2bc44 <mpfr_exp_2@@Base+0x2f8>
   2ba08:	add	x0, x0, #0x1
   2ba0c:	add	x0, x0, x0, lsr #63
   2ba10:	asr	x0, x0, #1
   2ba14:	bl	bf20 <__gmpfr_isqrt@plt>
   2ba18:	add	x26, x0, #0x3
   2ba1c:	ldr	x0, [sp, #120]
   2ba20:	sub	x0, x0, #0x1
   2ba24:	udiv	x0, x0, x26
   2ba28:	add	x0, x0, #0xa
   2ba2c:	lsl	x0, x0, #1
   2ba30:	cmp	x0, #0x1
   2ba34:	b.ls	2bc58 <mpfr_exp_2@@Base+0x30c>  // b.plast
   2ba38:	sub	x0, x0, #0x1
   2ba3c:	clz	x0, x0
   2ba40:	mov	w21, #0x40                  	// #64
   2ba44:	sub	w21, w21, w0
   2ba48:	sxtw	x21, w21
   2ba4c:	add	x21, x21, x26, lsl #1
   2ba50:	ldr	x0, [sp, #120]
   2ba54:	add	x0, x0, #0xa
   2ba58:	add	x21, x21, x0
   2ba5c:	add	x0, x21, x19
   2ba60:	cmp	x19, #0x0
   2ba64:	csel	x21, x0, x21, gt
   2ba68:	ldrsw	x0, [sp, #144]
   2ba6c:	str	x0, [sp, #168]
   2ba70:	add	x20, x0, x21
   2ba74:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ba78:	cmp	x20, x0
   2ba7c:	b.ge	2bc70 <mpfr_exp_2@@Base+0x324>  // b.tcont
   2ba80:	add	x19, x20, #0x3e
   2ba84:	subs	x0, x20, #0x1
   2ba88:	csel	x19, x19, x0, mi  // mi = first
   2ba8c:	asr	x19, x19, #6
   2ba90:	add	x19, x19, #0x1
   2ba94:	lsl	x0, x19, #1
   2ba98:	cmp	x0, #0x10
   2ba9c:	b.gt	2bc74 <mpfr_exp_2@@Base+0x328>
   2baa0:	str	xzr, [sp, #216]
   2baa4:	add	x0, sp, #0xe8
   2baa8:	str	x0, [sp, #224]
   2baac:	str	x20, [sp, #376]
   2bab0:	ldr	x1, [sp, #224]
   2bab4:	str	x1, [sp, #400]
   2bab8:	mov	w0, #0x1                   	// #1
   2babc:	str	w0, [sp, #384]
   2bac0:	str	x20, [sp, #408]
   2bac4:	add	x19, x1, x19, lsl #3
   2bac8:	str	x19, [sp, #432]
   2bacc:	str	w0, [sp, #416]
   2bad0:	add	x0, sp, #0x168
   2bad4:	bl	bf90 <mpfr_mpz_init@plt>
   2bad8:	mov	x0, #0x40                  	// #64
   2badc:	str	x0, [sp, #136]
   2bae0:	add	x0, sp, #0x198
   2bae4:	str	x0, [sp, #104]
   2bae8:	add	x24, sp, #0x178
   2baec:	mov	w28, #0x2                   	// #2
   2baf0:	add	x19, sp, #0x168
   2baf4:	add	x0, sp, #0x1b8
   2baf8:	str	x0, [sp, #160]
   2bafc:	tbnz	x23, #63, 2c05c <mpfr_exp_2@@Base+0x710>
   2bb00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2bb04:	ldr	x1, [x0, #2560]
   2bb08:	add	x0, x0, #0xa00
   2bb0c:	blr	x1
   2bb10:	mov	w2, #0x1                   	// #1
   2bb14:	mrs	x1, tpidr_el0
   2bb18:	add	x1, x1, x0
   2bb1c:	ldr	x20, [sp, #104]
   2bb20:	mov	x0, x20
   2bb24:	bl	c380 <mpfr_cache@plt>
   2bb28:	cmp	x23, #0x0
   2bb2c:	mov	w3, #0x1                   	// #1
   2bb30:	cneg	x2, x23, lt  // lt = tstop
   2bb34:	mov	x1, x20
   2bb38:	mov	x0, x24
   2bb3c:	bl	ba50 <mpfr_mul_ui@plt>
   2bb40:	mov	w3, w28
   2bb44:	mov	x2, x24
   2bb48:	ldr	x1, [sp, #128]
   2bb4c:	mov	x0, x24
   2bb50:	bl	bb70 <mpfr_sub@plt>
   2bb54:	ldr	x0, [sp, #392]
   2bb58:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   2bb5c:	cmp	x0, x20
   2bb60:	b.le	2bb90 <mpfr_exp_2@@Base+0x244>
   2bb64:	ldr	w1, [sp, #384]
   2bb68:	tbz	w1, #31, 2bc88 <mpfr_exp_2@@Base+0x33c>
   2bb6c:	sub	x23, x23, #0x1
   2bb70:	mov	w3, w28
   2bb74:	ldr	x2, [sp, #104]
   2bb78:	mov	x1, x24
   2bb7c:	mov	x0, x24
   2bb80:	bl	c1a0 <mpfr_add@plt>
   2bb84:	ldr	x0, [sp, #392]
   2bb88:	cmp	x0, x20
   2bb8c:	b.gt	2bb64 <mpfr_exp_2@@Base+0x218>
   2bb90:	mov	x0, #0xfffffffffffffeff    	// #-257
   2bb94:	movk	x0, #0x7fff, lsl #48
   2bb98:	sub	x0, x0, x21
   2bb9c:	ldr	x1, [sp, #136]
   2bba0:	cmp	x0, x1
   2bba4:	b.lt	2c000 <mpfr_exp_2@@Base+0x6b4>  // b.tstop
   2bba8:	ldr	x0, [sp, #136]
   2bbac:	add	x21, x21, x0
   2bbb0:	add	x0, x21, x21, lsr #63
   2bbb4:	asr	x0, x0, #1
   2bbb8:	str	x0, [sp, #136]
   2bbbc:	ldr	x0, [sp, #168]
   2bbc0:	add	x20, x0, x21
   2bbc4:	ldr	x1, [sp, #216]
   2bbc8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2bbcc:	cmp	x20, x0
   2bbd0:	b.ge	2c018 <mpfr_exp_2@@Base+0x6cc>  // b.tcont
   2bbd4:	add	x22, x20, #0x3e
   2bbd8:	subs	x0, x20, #0x1
   2bbdc:	csel	x22, x22, x0, mi  // mi = first
   2bbe0:	asr	x22, x22, #6
   2bbe4:	add	x22, x22, #0x1
   2bbe8:	lsl	x0, x22, #4
   2bbec:	str	x0, [sp, #216]
   2bbf0:	cbnz	x1, 2c01c <mpfr_exp_2@@Base+0x6d0>
   2bbf4:	bl	ccf0 <mpfr_allocate_func@plt>
   2bbf8:	str	x0, [sp, #224]
   2bbfc:	str	x20, [sp, #376]
   2bc00:	ldr	x1, [sp, #224]
   2bc04:	str	x1, [sp, #400]
   2bc08:	mov	w0, #0x1                   	// #1
   2bc0c:	str	w0, [sp, #384]
   2bc10:	str	x20, [sp, #408]
   2bc14:	add	x22, x1, x22, lsl #3
   2bc18:	str	x22, [sp, #432]
   2bc1c:	str	w0, [sp, #416]
   2bc20:	b	2bafc <mpfr_exp_2@@Base+0x1b0>
   2bc24:	tbnz	x0, #63, 2c0ac <mpfr_exp_2@@Base+0x760>
   2bc28:	neg	x23, x0
   2bc2c:	b	2b9e0 <mpfr_exp_2@@Base+0x94>
   2bc30:	mov	x23, #0x0                   	// #0
   2bc34:	str	wzr, [sp, #144]
   2bc38:	b	2b9fc <mpfr_exp_2@@Base+0xb0>
   2bc3c:	str	wzr, [sp, #144]
   2bc40:	b	2b9fc <mpfr_exp_2@@Base+0xb0>
   2bc44:	ldr	x0, [sp, #120]
   2bc48:	lsl	x0, x0, #2
   2bc4c:	bl	c0b0 <__gmpfr_cuberoot@plt>
   2bc50:	mov	x26, x0
   2bc54:	b	2ba1c <mpfr_exp_2@@Base+0xd0>
   2bc58:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2bc5c:	add	x2, x2, #0xed0
   2bc60:	mov	w1, #0x9f                  	// #159
   2bc64:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2bc68:	add	x0, x0, #0xee8
   2bc6c:	bl	cb40 <mpfr_assert_fail@plt>
   2bc70:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2bc74:	lsl	x0, x19, #4
   2bc78:	str	x0, [sp, #216]
   2bc7c:	bl	ccf0 <mpfr_allocate_func@plt>
   2bc80:	str	x0, [sp, #224]
   2bc84:	b	2baac <mpfr_exp_2@@Base+0x160>
   2bc88:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2bc8c:	cmp	x0, x1
   2bc90:	b.le	2bb90 <mpfr_exp_2@@Base+0x244>
   2bc94:	ldr	w0, [sp, #144]
   2bc98:	cmp	w0, #0x0
   2bc9c:	b.le	2bcb0 <mpfr_exp_2@@Base+0x364>
   2bca0:	mov	w2, w28
   2bca4:	mov	x1, x21
   2bca8:	mov	x0, x24
   2bcac:	bl	c970 <mpfr_prec_round@plt>
   2bcb0:	mov	w3, w28
   2bcb4:	mov	x2, x26
   2bcb8:	mov	x1, x24
   2bcbc:	mov	x0, x24
   2bcc0:	bl	c8f0 <mpfr_div_2ui@plt>
   2bcc4:	ldr	x0, [sp, #120]
   2bcc8:	cmp	x0, #0x63
   2bccc:	b.gt	2bfc4 <mpfr_exp_2@@Base+0x678>
   2bcd0:	mov	x22, #0x1                   	// #1
   2bcd4:	sub	x0, x22, x21
   2bcd8:	str	x0, [sp, #440]
   2bcdc:	add	x20, sp, #0xb8
   2bce0:	mov	x0, x20
   2bce4:	bl	bf90 <mpfr_mpz_init@plt>
   2bce8:	add	x25, sp, #0xc8
   2bcec:	mov	x0, x25
   2bcf0:	bl	bf90 <mpfr_mpz_init@plt>
   2bcf4:	mov	x1, x22
   2bcf8:	mov	x0, x20
   2bcfc:	bl	bcb0 <__gmpz_set_ui@plt>
   2bd00:	mov	x1, x22
   2bd04:	mov	x0, x19
   2bd08:	bl	bcb0 <__gmpz_set_ui@plt>
   2bd0c:	sub	x2, x21, #0x1
   2bd10:	mov	x1, x19
   2bd14:	mov	x0, x19
   2bd18:	bl	c200 <__gmpz_mul_2exp@plt>
   2bd1c:	mov	x1, x24
   2bd20:	mov	x0, x25
   2bd24:	bl	cac0 <mpfr_get_z_2exp@plt>
   2bd28:	mov	x27, x0
   2bd2c:	mov	x2, x25
   2bd30:	mov	x1, x20
   2bd34:	mov	x0, x20
   2bd38:	bl	bff0 <__gmpz_mul@plt>
   2bd3c:	ldr	w0, [sp, #364]
   2bd40:	mov	x25, x27
   2bd44:	mov	x20, x22
   2bd48:	add	x22, sp, #0xb8
   2bd4c:	add	x1, sp, #0xc8
   2bd50:	str	x1, [sp, #96]
   2bd54:	b	2bdd0 <mpfr_exp_2@@Base+0x484>
   2bd58:	mov	x2, x20
   2bd5c:	mov	x1, x22
   2bd60:	mov	x0, x22
   2bd64:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2bd68:	ldr	w0, [sp, #188]
   2bd6c:	cbz	w0, 2be74 <mpfr_exp_2@@Base+0x528>
   2bd70:	mov	x2, x22
   2bd74:	mov	x1, x19
   2bd78:	mov	x0, x19
   2bd7c:	bl	c9c0 <__gmpz_add@plt>
   2bd80:	ldr	w2, [sp, #188]
   2bd84:	cmp	w2, #0x0
   2bd88:	cneg	w2, w2, lt  // lt = tstop
   2bd8c:	ldr	x0, [sp, #192]
   2bd90:	add	x0, x0, w2, sxtw #3
   2bd94:	ldur	x0, [x0, #-8]
   2bd98:	sbfiz	x2, x2, #6, #32
   2bd9c:	clz	x0, x0
   2bda0:	sub	x2, x2, x0
   2bda4:	ldr	x1, [sp, #96]
   2bda8:	mov	x0, x1
   2bdac:	bl	2b3dc <mpfr_cmp2@@Base+0x43c>
   2bdb0:	add	x27, x27, x0
   2bdb4:	add	x20, x20, #0x1
   2bdb8:	ldr	x2, [sp, #96]
   2bdbc:	mov	x1, x22
   2bdc0:	mov	x0, x22
   2bdc4:	bl	bff0 <__gmpz_mul@plt>
   2bdc8:	add	x25, x25, x27
   2bdcc:	ldr	w0, [sp, #364]
   2bdd0:	sub	x1, x20, #0x1
   2bdd4:	str	x1, [sp, #112]
   2bdd8:	cmp	w0, #0x0
   2bddc:	cneg	w0, w0, lt  // lt = tstop
   2bde0:	ldr	x1, [sp, #368]
   2bde4:	add	x1, x1, w0, sxtw #3
   2bde8:	ldur	x2, [x1, #-8]
   2bdec:	ldr	w1, [sp, #188]
   2bdf0:	cmp	w1, #0x0
   2bdf4:	cneg	w1, w1, lt  // lt = tstop
   2bdf8:	ldr	x3, [sp, #192]
   2bdfc:	add	x3, x3, w1, sxtw #3
   2be00:	ldur	x3, [x3, #-8]
   2be04:	sbfiz	x0, x0, #6, #32
   2be08:	clz	x2, x2
   2be0c:	sub	x2, x0, x2
   2be10:	ldr	x0, [sp, #440]
   2be14:	add	x2, x2, x0
   2be18:	sub	x2, x2, x25
   2be1c:	sbfiz	x1, x1, #6, #32
   2be20:	clz	x0, x3
   2be24:	sub	x1, x1, x0
   2be28:	sub	x2, x2, x1
   2be2c:	sub	x2, x21, x2
   2be30:	mov	x1, x22
   2be34:	mov	x0, x22
   2be38:	bl	2b3dc <mpfr_cmp2@@Base+0x43c>
   2be3c:	add	x25, x25, x0
   2be40:	cmp	x20, #0x1
   2be44:	b.ls	2c03c <mpfr_exp_2@@Base+0x6f0>  // b.plast
   2be48:	ldr	x0, [sp, #112]
   2be4c:	tst	x0, x20
   2be50:	b.ne	2bd58 <mpfr_exp_2@@Base+0x40c>  // b.any
   2be54:	clz	x2, x0
   2be58:	mov	w0, #0x40                  	// #64
   2be5c:	sub	w2, w0, w2
   2be60:	sxtw	x2, w2
   2be64:	mov	x1, x22
   2be68:	mov	x0, x22
   2be6c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2be70:	b	2bd68 <mpfr_exp_2@@Base+0x41c>
   2be74:	add	x0, sp, #0xb8
   2be78:	bl	c170 <mpfr_mpz_clear@plt>
   2be7c:	add	x0, sp, #0xc8
   2be80:	bl	c170 <mpfr_mpz_clear@plt>
   2be84:	madd	x20, x20, x20, x20
   2be88:	add	x20, x20, x20, lsl #1
   2be8c:	cbz	x26, 2bed8 <mpfr_exp_2@@Base+0x58c>
   2be90:	mov	x22, #0x0                   	// #0
   2be94:	mov	x2, x19
   2be98:	mov	x1, x19
   2be9c:	mov	x0, x19
   2bea0:	bl	bff0 <__gmpz_mul@plt>
   2bea4:	ldr	x0, [sp, #440]
   2bea8:	lsl	x0, x0, #1
   2beac:	str	x0, [sp, #440]
   2beb0:	mov	x2, x21
   2beb4:	mov	x1, x19
   2beb8:	mov	x0, x19
   2bebc:	bl	2b3dc <mpfr_cmp2@@Base+0x43c>
   2bec0:	ldr	x1, [sp, #440]
   2bec4:	add	x1, x1, x0
   2bec8:	str	x1, [sp, #440]
   2becc:	add	x22, x22, #0x1
   2bed0:	cmp	x26, x22
   2bed4:	b.ne	2be94 <mpfr_exp_2@@Base+0x548>  // b.any
   2bed8:	mov	w3, #0x0                   	// #0
   2bedc:	ldr	x2, [sp, #440]
   2bee0:	mov	x1, x19
   2bee4:	ldr	x0, [sp, #104]
   2bee8:	bl	c4f0 <mpfr_set_z_2exp@plt>
   2beec:	cmp	x20, #0x1
   2bef0:	b.eq	2bff8 <mpfr_exp_2@@Base+0x6ac>  // b.none
   2bef4:	cmp	x20, #0x1
   2bef8:	b.ls	2bfe0 <mpfr_exp_2@@Base+0x694>  // b.plast
   2befc:	sub	x20, x20, #0x1
   2bf00:	clz	x20, x20
   2bf04:	mov	w0, #0x40                  	// #64
   2bf08:	sub	w20, w0, w20
   2bf0c:	sxtw	x20, w20
   2bf10:	mov	x2, #0xfffffffffffffffe    	// #-2
   2bf14:	sub	x2, x2, x26
   2bf18:	ldr	x1, [sp, #424]
   2bf1c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2bf20:	cmp	x1, x0
   2bf24:	b.le	2bb90 <mpfr_exp_2@@Base+0x244>
   2bf28:	ldr	w22, [sp, #148]
   2bf2c:	cmp	w22, #0x0
   2bf30:	ldr	x0, [sp, #120]
   2bf34:	cinc	x3, x0, eq  // eq = none
   2bf38:	sub	x20, x21, x20
   2bf3c:	ldr	x0, [sp, #408]
   2bf40:	add	x1, x0, #0x3e
   2bf44:	subs	x0, x0, #0x1
   2bf48:	csel	x1, x1, x0, mi  // mi = first
   2bf4c:	asr	x1, x1, #6
   2bf50:	add	x2, x20, x2
   2bf54:	add	x1, x1, #0x1
   2bf58:	ldr	x0, [sp, #432]
   2bf5c:	bl	c370 <mpfr_round_p@plt>
   2bf60:	cbz	w0, 2bb90 <mpfr_exp_2@@Base+0x244>
   2bf64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2bf68:	ldr	x1, [x0, #2576]
   2bf6c:	add	x0, x0, #0xa10
   2bf70:	blr	x1
   2bf74:	mrs	x1, tpidr_el0
   2bf78:	str	wzr, [x1, x0]
   2bf7c:	mov	w3, w22
   2bf80:	mov	x2, x23
   2bf84:	add	x1, sp, #0x198
   2bf88:	ldr	x0, [sp, #152]
   2bf8c:	bl	bb90 <mpfr_mul_2si@plt>
   2bf90:	mov	w19, w0
   2bf94:	add	x0, sp, #0x168
   2bf98:	bl	c170 <mpfr_mpz_clear@plt>
   2bf9c:	ldr	x1, [sp, #216]
   2bfa0:	cbnz	x1, 2c030 <mpfr_exp_2@@Base+0x6e4>
   2bfa4:	mov	w0, w19
   2bfa8:	ldp	x19, x20, [sp, #16]
   2bfac:	ldp	x21, x22, [sp, #32]
   2bfb0:	ldp	x23, x24, [sp, #48]
   2bfb4:	ldp	x25, x26, [sp, #64]
   2bfb8:	ldp	x27, x28, [sp, #80]
   2bfbc:	ldp	x29, x30, [sp], #448
   2bfc0:	ret
   2bfc4:	ldr	x3, [sp, #160]
   2bfc8:	mov	x2, x21
   2bfcc:	mov	x1, x24
   2bfd0:	mov	x0, x19
   2bfd4:	bl	2b440 <mpfr_cmp2@@Base+0x4a0>
   2bfd8:	mov	x20, x0
   2bfdc:	b	2be8c <mpfr_exp_2@@Base+0x540>
   2bfe0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2bfe4:	add	x2, x2, #0xef0
   2bfe8:	mov	w1, #0xf5                  	// #245
   2bfec:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2bff0:	add	x0, x0, #0xee8
   2bff4:	bl	cb40 <mpfr_assert_fail@plt>
   2bff8:	mov	x20, #0x0                   	// #0
   2bffc:	b	2bf10 <mpfr_exp_2@@Base+0x5c4>
   2c000:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2c004:	add	x2, x2, #0xef8
   2c008:	mov	w1, #0x102                 	// #258
   2c00c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2c010:	add	x0, x0, #0xee8
   2c014:	bl	cb40 <mpfr_assert_fail@plt>
   2c018:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2c01c:	mov	x2, x0
   2c020:	ldr	x0, [sp, #224]
   2c024:	bl	c1c0 <mpfr_reallocate_func@plt>
   2c028:	str	x0, [sp, #224]
   2c02c:	b	2bbfc <mpfr_exp_2@@Base+0x2b0>
   2c030:	ldr	x0, [sp, #224]
   2c034:	bl	cc20 <mpfr_free_func@plt>
   2c038:	b	2bfa4 <mpfr_exp_2@@Base+0x658>
   2c03c:	ldr	w0, [sp, #188]
   2c040:	cbz	w0, 2be74 <mpfr_exp_2@@Base+0x528>
   2c044:	mov	x2, x22
   2c048:	mov	x1, x19
   2c04c:	mov	x0, x19
   2c050:	bl	c9c0 <__gmpz_add@plt>
   2c054:	ldr	w2, [sp, #188]
   2c058:	b	2bd84 <mpfr_exp_2@@Base+0x438>
   2c05c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c060:	ldr	x1, [x0, #2560]
   2c064:	add	x0, x0, #0xa00
   2c068:	blr	x1
   2c06c:	mov	w2, w28
   2c070:	mrs	x1, tpidr_el0
   2c074:	add	x1, x1, x0
   2c078:	ldr	x20, [sp, #104]
   2c07c:	mov	x0, x20
   2c080:	bl	c380 <mpfr_cache@plt>
   2c084:	cmp	x23, #0x0
   2c088:	mov	w3, w28
   2c08c:	cneg	x2, x23, lt  // lt = tstop
   2c090:	mov	x1, x20
   2c094:	mov	x0, x24
   2c098:	bl	ba50 <mpfr_mul_ui@plt>
   2c09c:	ldr	w0, [sp, #384]
   2c0a0:	neg	w0, w0
   2c0a4:	str	w0, [sp, #384]
   2c0a8:	b	2bb40 <mpfr_exp_2@@Base+0x1f4>
   2c0ac:	mov	x23, #0x8000000000000000    	// #-9223372036854775808
   2c0b0:	mov	x0, #0x1                   	// #1
   2c0b4:	sub	x0, x0, x23
   2c0b8:	b	2b9ec <mpfr_exp_2@@Base+0xa0>
   2c0bc:	mov	x23, #0x0                   	// #0
   2c0c0:	str	wzr, [sp, #144]
   2c0c4:	b	2b9fc <mpfr_exp_2@@Base+0xb0>

000000000002c0c8 <mpfr_asin@@Base>:
   2c0c8:	stp	x29, x30, [sp, #-144]!
   2c0cc:	mov	x29, sp
   2c0d0:	stp	x19, x20, [sp, #16]
   2c0d4:	stp	x21, x22, [sp, #32]
   2c0d8:	stp	x23, x24, [sp, #48]
   2c0dc:	mov	x21, x0
   2c0e0:	mov	x20, x1
   2c0e4:	mov	w23, w2
   2c0e8:	ldr	x2, [x1, #16]
   2c0ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2c0f0:	cmp	x2, x0
   2c0f4:	b.le	2c330 <mpfr_asin@@Base+0x268>
   2c0f8:	neg	x2, x2, lsl #1
   2c0fc:	cmp	x2, #0x0
   2c100:	b.le	2c118 <mpfr_asin@@Base+0x50>
   2c104:	add	x2, x2, #0x2
   2c108:	ldr	x0, [x21]
   2c10c:	add	x0, x0, #0x1
   2c110:	cmp	x0, x2
   2c114:	b.cc	2c38c <mpfr_asin@@Base+0x2c4>  // b.lo, b.ul, b.last
   2c118:	stp	x25, x26, [sp, #64]
   2c11c:	stp	x27, x28, [sp, #80]
   2c120:	add	x19, sp, #0x70
   2c124:	ldr	x1, [x20]
   2c128:	mov	x0, x19
   2c12c:	bl	ca80 <mpfr_init2@plt>
   2c130:	mov	w3, #0x1                   	// #1
   2c134:	mov	w2, #0x0                   	// #0
   2c138:	mov	x1, x20
   2c13c:	mov	x0, x19
   2c140:	bl	c6a0 <mpfr_set4@plt>
   2c144:	mov	x2, #0x0                   	// #0
   2c148:	mov	x1, #0x1                   	// #1
   2c14c:	mov	x0, x19
   2c150:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2c154:	mov	w19, w0
   2c158:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c15c:	ldr	x1, [x0, #2576]
   2c160:	add	x0, x0, #0xa10
   2c164:	blr	x1
   2c168:	mrs	x1, tpidr_el0
   2c16c:	ldr	w25, [x1, x0]
   2c170:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c174:	ldr	x2, [x0, #2512]
   2c178:	add	x0, x0, #0x9d0
   2c17c:	blr	x2
   2c180:	add	x2, x1, x0
   2c184:	ldr	x26, [x1, x0]
   2c188:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c18c:	ldr	x3, [x0, #2544]
   2c190:	add	x0, x0, #0x9f0
   2c194:	blr	x3
   2c198:	ldr	x27, [x1, x0]
   2c19c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2c1a0:	str	x3, [x2]
   2c1a4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2c1a8:	str	x2, [x1, x0]
   2c1ac:	tbz	w19, #31, 2c3a8 <mpfr_asin@@Base+0x2e0>
   2c1b0:	add	x0, sp, #0x70
   2c1b4:	mov	w3, #0x3                   	// #3
   2c1b8:	mov	x2, x0
   2c1bc:	mov	x1, #0x1                   	// #1
   2c1c0:	bl	ca50 <mpfr_ui_sub@plt>
   2c1c4:	mov	x24, #0x2                   	// #2
   2c1c8:	ldr	x0, [sp, #128]
   2c1cc:	sub	x24, x24, x0
   2c1d0:	ldr	x22, [x21]
   2c1d4:	add	x22, x22, #0xa
   2c1d8:	add	x22, x22, x24
   2c1dc:	mov	x0, #0x40                  	// #64
   2c1e0:	str	x0, [sp, #104]
   2c1e4:	add	x19, sp, #0x70
   2c1e8:	mov	x28, #0x8000000000000003    	// #-9223372036854775805
   2c1ec:	mov	x1, x22
   2c1f0:	mov	x0, x19
   2c1f4:	bl	bed0 <mpfr_set_prec@plt>
   2c1f8:	mov	w2, #0x0                   	// #0
   2c1fc:	mov	x1, x20
   2c200:	mov	x0, x19
   2c204:	bl	c400 <mpfr_sqr@plt>
   2c208:	mov	w3, #0x0                   	// #0
   2c20c:	mov	x2, x19
   2c210:	mov	x1, #0x1                   	// #1
   2c214:	mov	x0, x19
   2c218:	bl	ca50 <mpfr_ui_sub@plt>
   2c21c:	mov	w2, #0x0                   	// #0
   2c220:	mov	x1, x19
   2c224:	mov	x0, x19
   2c228:	bl	c930 <mpfr_sqrt@plt>
   2c22c:	mov	w3, #0x0                   	// #0
   2c230:	mov	x2, x19
   2c234:	mov	x1, x20
   2c238:	mov	x0, x19
   2c23c:	bl	c620 <mpfr_div@plt>
   2c240:	mov	w2, #0x0                   	// #0
   2c244:	mov	x1, x19
   2c248:	mov	x0, x19
   2c24c:	bl	c690 <mpfr_atan@plt>
   2c250:	ldr	x0, [sp, #128]
   2c254:	cmp	x0, x28
   2c258:	b.le	2c4b0 <mpfr_asin@@Base+0x3e8>
   2c25c:	cmp	w23, #0x0
   2c260:	ldr	x3, [x21]
   2c264:	cinc	x3, x3, eq  // eq = none
   2c268:	ldr	x0, [sp, #112]
   2c26c:	add	x1, x0, #0x3e
   2c270:	subs	x0, x0, #0x1
   2c274:	csel	x1, x1, x0, mi  // mi = first
   2c278:	asr	x1, x1, #6
   2c27c:	sub	x2, x22, x24
   2c280:	add	x1, x1, #0x1
   2c284:	ldr	x0, [sp, #136]
   2c288:	bl	c370 <mpfr_round_p@plt>
   2c28c:	cbz	w0, 2c4b0 <mpfr_asin@@Base+0x3e8>
   2c290:	add	x20, sp, #0x70
   2c294:	ldr	w3, [sp, #120]
   2c298:	mov	w2, w23
   2c29c:	mov	x1, x20
   2c2a0:	mov	x0, x21
   2c2a4:	bl	c6a0 <mpfr_set4@plt>
   2c2a8:	mov	w19, w0
   2c2ac:	mov	x0, x20
   2c2b0:	bl	c070 <mpfr_clear@plt>
   2c2b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c2b8:	ldr	x1, [x0, #2576]
   2c2bc:	add	x0, x0, #0xa10
   2c2c0:	blr	x1
   2c2c4:	mrs	x1, tpidr_el0
   2c2c8:	str	w25, [x1, x0]
   2c2cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c2d0:	ldr	x2, [x0, #2512]
   2c2d4:	add	x0, x0, #0x9d0
   2c2d8:	blr	x2
   2c2dc:	str	x26, [x1, x0]
   2c2e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c2e4:	ldr	x2, [x0, #2544]
   2c2e8:	add	x0, x0, #0x9f0
   2c2ec:	blr	x2
   2c2f0:	str	x27, [x1, x0]
   2c2f4:	ldr	x0, [x21, #16]
   2c2f8:	cmp	x27, x0
   2c2fc:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   2c300:	b.gt	2c4f8 <mpfr_asin@@Base+0x430>
   2c304:	cbz	w19, 2c518 <mpfr_asin@@Base+0x450>
   2c308:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c30c:	ldr	x1, [x0, #2576]
   2c310:	add	x0, x0, #0xa10
   2c314:	blr	x1
   2c318:	orr	w25, w25, #0x8
   2c31c:	mrs	x1, tpidr_el0
   2c320:	str	w25, [x1, x0]
   2c324:	ldp	x25, x26, [sp, #64]
   2c328:	ldp	x27, x28, [sp, #80]
   2c32c:	b	2c520 <mpfr_asin@@Base+0x458>
   2c330:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2c334:	add	x2, x2, x0
   2c338:	cmp	x2, #0x1
   2c33c:	b.ls	2c358 <mpfr_asin@@Base+0x290>  // b.plast
   2c340:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c344:	str	x0, [x21, #16]
   2c348:	ldr	w0, [x1, #8]
   2c34c:	str	w0, [x21, #8]
   2c350:	mov	w19, #0x0                   	// #0
   2c354:	b	2c520 <mpfr_asin@@Base+0x458>
   2c358:	add	x0, x0, #0x4
   2c35c:	str	x0, [x21, #16]
   2c360:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c364:	ldr	x1, [x0, #2576]
   2c368:	add	x0, x0, #0xa10
   2c36c:	blr	x1
   2c370:	mrs	x1, tpidr_el0
   2c374:	add	x0, x1, x0
   2c378:	ldr	w1, [x0]
   2c37c:	orr	w1, w1, #0x4
   2c380:	str	w1, [x0]
   2c384:	mov	w19, #0x0                   	// #0
   2c388:	b	2c520 <mpfr_asin@@Base+0x458>
   2c38c:	mov	w4, w23
   2c390:	mov	w3, #0x1                   	// #1
   2c394:	mov	x0, x21
   2c398:	bl	c540 <mpfr_round_near_x@plt>
   2c39c:	mov	w19, w0
   2c3a0:	cbz	w0, 2c118 <mpfr_asin@@Base+0x50>
   2c3a4:	b	2c520 <mpfr_asin@@Base+0x458>
   2c3a8:	add	x0, sp, #0x70
   2c3ac:	bl	c070 <mpfr_clear@plt>
   2c3b0:	cmp	w19, #0x0
   2c3b4:	b.gt	2c424 <mpfr_asin@@Base+0x35c>
   2c3b8:	ldr	w0, [x20, #8]
   2c3bc:	cmp	w0, #0x0
   2c3c0:	b.gt	2c484 <mpfr_asin@@Base+0x3bc>
   2c3c4:	mov	w2, #0x3                   	// #3
   2c3c8:	cmp	w23, #0x2
   2c3cc:	b.eq	2c3dc <mpfr_asin@@Base+0x314>  // b.none
   2c3d0:	cmp	w23, w2
   2c3d4:	mov	w2, #0x2                   	// #2
   2c3d8:	csel	w2, w23, w2, ne  // ne = any
   2c3dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c3e0:	ldr	x1, [x0, #2624]
   2c3e4:	add	x0, x0, #0xa40
   2c3e8:	blr	x1
   2c3ec:	mrs	x1, tpidr_el0
   2c3f0:	add	x1, x1, x0
   2c3f4:	mov	x0, x21
   2c3f8:	bl	c380 <mpfr_cache@plt>
   2c3fc:	neg	w19, w0
   2c400:	ldr	w0, [x21, #8]
   2c404:	neg	w0, w0
   2c408:	str	w0, [x21, #8]
   2c40c:	mov	w3, w23
   2c410:	mov	x2, #0x1                   	// #1
   2c414:	mov	x1, x21
   2c418:	mov	x0, x21
   2c41c:	bl	c8f0 <mpfr_div_2ui@plt>
   2c420:	b	2c2b4 <mpfr_asin@@Base+0x1ec>
   2c424:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c428:	ldr	x1, [x0, #2512]
   2c42c:	add	x0, x0, #0x9d0
   2c430:	blr	x1
   2c434:	mrs	x1, tpidr_el0
   2c438:	str	x26, [x1, x0]
   2c43c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c440:	ldr	x2, [x0, #2544]
   2c444:	add	x0, x0, #0x9f0
   2c448:	blr	x2
   2c44c:	str	x27, [x1, x0]
   2c450:	mov	x0, #0x2                   	// #2
   2c454:	movk	x0, #0x8000, lsl #48
   2c458:	str	x0, [x21, #16]
   2c45c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c460:	ldr	x2, [x0, #2576]
   2c464:	add	x0, x0, #0xa10
   2c468:	blr	x2
   2c46c:	orr	w25, w25, #0x4
   2c470:	str	w25, [x1, x0]
   2c474:	mov	w19, #0x0                   	// #0
   2c478:	ldp	x25, x26, [sp, #64]
   2c47c:	ldp	x27, x28, [sp, #80]
   2c480:	b	2c520 <mpfr_asin@@Base+0x458>
   2c484:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2c488:	ldr	x1, [x0, #2624]
   2c48c:	add	x0, x0, #0xa40
   2c490:	blr	x1
   2c494:	mov	w2, w23
   2c498:	mrs	x1, tpidr_el0
   2c49c:	add	x1, x1, x0
   2c4a0:	mov	x0, x21
   2c4a4:	bl	c380 <mpfr_cache@plt>
   2c4a8:	mov	w19, w0
   2c4ac:	b	2c40c <mpfr_asin@@Base+0x344>
   2c4b0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2c4b4:	movk	x0, #0x7fff, lsl #48
   2c4b8:	sub	x0, x0, x22
   2c4bc:	ldr	x1, [sp, #104]
   2c4c0:	cmp	x0, x1
   2c4c4:	b.lt	2c4e0 <mpfr_asin@@Base+0x418>  // b.tstop
   2c4c8:	ldr	x0, [sp, #104]
   2c4cc:	add	x22, x22, x0
   2c4d0:	add	x0, x22, x22, lsr #63
   2c4d4:	asr	x0, x0, #1
   2c4d8:	str	x0, [sp, #104]
   2c4dc:	b	2c1ec <mpfr_asin@@Base+0x124>
   2c4e0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2c4e4:	add	x2, x2, #0xd68
   2c4e8:	mov	w1, #0x73                  	// #115
   2c4ec:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2c4f0:	add	x0, x0, #0xf40
   2c4f4:	bl	cb40 <mpfr_assert_fail@plt>
   2c4f8:	mov	w2, w23
   2c4fc:	mov	w1, w19
   2c500:	mov	x0, x21
   2c504:	bl	cb30 <mpfr_check_range@plt>
   2c508:	mov	w19, w0
   2c50c:	ldp	x25, x26, [sp, #64]
   2c510:	ldp	x27, x28, [sp, #80]
   2c514:	b	2c520 <mpfr_asin@@Base+0x458>
   2c518:	ldp	x25, x26, [sp, #64]
   2c51c:	ldp	x27, x28, [sp, #80]
   2c520:	mov	w0, w19
   2c524:	ldp	x19, x20, [sp, #16]
   2c528:	ldp	x21, x22, [sp, #32]
   2c52c:	ldp	x23, x24, [sp, #48]
   2c530:	ldp	x29, x30, [sp], #144
   2c534:	ret
   2c538:	stp	x29, x30, [sp, #-32]!
   2c53c:	mov	x29, sp
   2c540:	str	x19, [sp, #16]
   2c544:	mov	x19, x0
   2c548:	bl	bf90 <mpfr_mpz_init@plt>
   2c54c:	add	x0, x19, #0x10
   2c550:	bl	bf90 <mpfr_mpz_init@plt>
   2c554:	add	x0, x19, #0x20
   2c558:	bl	bf90 <mpfr_mpz_init@plt>
   2c55c:	add	x0, x19, #0x30
   2c560:	bl	bf90 <mpfr_mpz_init@plt>
   2c564:	add	x0, x19, #0x40
   2c568:	bl	bf90 <mpfr_mpz_init@plt>
   2c56c:	add	x0, x19, #0x50
   2c570:	bl	bf90 <mpfr_mpz_init@plt>
   2c574:	ldr	x19, [sp, #16]
   2c578:	ldp	x29, x30, [sp], #32
   2c57c:	ret
   2c580:	stp	x29, x30, [sp, #-32]!
   2c584:	mov	x29, sp
   2c588:	str	x19, [sp, #16]
   2c58c:	mov	x19, x0
   2c590:	bl	c170 <mpfr_mpz_clear@plt>
   2c594:	add	x0, x19, #0x10
   2c598:	bl	c170 <mpfr_mpz_clear@plt>
   2c59c:	add	x0, x19, #0x20
   2c5a0:	bl	c170 <mpfr_mpz_clear@plt>
   2c5a4:	add	x0, x19, #0x30
   2c5a8:	bl	c170 <mpfr_mpz_clear@plt>
   2c5ac:	add	x0, x19, #0x40
   2c5b0:	bl	c170 <mpfr_mpz_clear@plt>
   2c5b4:	add	x0, x19, #0x50
   2c5b8:	bl	c170 <mpfr_mpz_clear@plt>
   2c5bc:	ldr	x19, [sp, #16]
   2c5c0:	ldp	x29, x30, [sp], #32
   2c5c4:	ret
   2c5c8:	stp	x29, x30, [sp, #-320]!
   2c5cc:	mov	x29, sp
   2c5d0:	stp	x19, x20, [sp, #16]
   2c5d4:	stp	x21, x22, [sp, #32]
   2c5d8:	mov	x19, x0
   2c5dc:	mov	x20, x1
   2c5e0:	mov	x22, x3
   2c5e4:	sub	x0, x2, x1
   2c5e8:	cmp	x0, #0x1
   2c5ec:	b.eq	2c784 <mpfr_asin@@Base+0x6bc>  // b.none
   2c5f0:	stp	x23, x24, [sp, #48]
   2c5f4:	stp	x25, x26, [sp, #64]
   2c5f8:	mov	x21, x2
   2c5fc:	mov	w23, w4
   2c600:	add	x24, x2, x1
   2c604:	lsr	x24, x24, #1
   2c608:	add	x26, sp, #0x80
   2c60c:	mov	x0, x26
   2c610:	bl	2c538 <mpfr_asin@@Base+0x470>
   2c614:	add	x25, sp, #0xe0
   2c618:	mov	x0, x25
   2c61c:	bl	2c538 <mpfr_asin@@Base+0x470>
   2c620:	mov	w4, #0x1                   	// #1
   2c624:	mov	x3, x22
   2c628:	mov	x2, x24
   2c62c:	mov	x1, x20
   2c630:	mov	x0, x26
   2c634:	bl	2c5c8 <mpfr_asin@@Base+0x500>
   2c638:	mov	w4, #0x1                   	// #1
   2c63c:	mov	x3, x22
   2c640:	mov	x2, x21
   2c644:	mov	x1, x24
   2c648:	mov	x0, x25
   2c64c:	bl	2c5c8 <mpfr_asin@@Base+0x500>
   2c650:	add	x0, sp, #0x50
   2c654:	bl	bf90 <mpfr_mpz_init@plt>
   2c658:	add	x0, sp, #0x60
   2c65c:	bl	bf90 <mpfr_mpz_init@plt>
   2c660:	add	x0, sp, #0x70
   2c664:	bl	bf90 <mpfr_mpz_init@plt>
   2c668:	cbnz	w23, 2c7f8 <mpfr_asin@@Base+0x730>
   2c66c:	add	x22, sp, #0xe0
   2c670:	add	x23, sp, #0xf0
   2c674:	add	x20, sp, #0x80
   2c678:	mov	x2, x23
   2c67c:	add	x1, sp, #0x90
   2c680:	add	x0, x19, #0x10
   2c684:	bl	bff0 <__gmpz_mul@plt>
   2c688:	add	x2, x22, #0x40
   2c68c:	add	x1, x20, #0x40
   2c690:	add	x0, x19, #0x40
   2c694:	bl	bff0 <__gmpz_mul@plt>
   2c698:	add	x21, sp, #0x50
   2c69c:	add	x2, x22, #0x20
   2c6a0:	mov	x1, x20
   2c6a4:	mov	x0, x21
   2c6a8:	bl	bff0 <__gmpz_mul@plt>
   2c6ac:	add	x0, sp, #0x70
   2c6b0:	add	x2, x20, #0x20
   2c6b4:	mov	x1, x23
   2c6b8:	mov	x20, x0
   2c6bc:	bl	bff0 <__gmpz_mul@plt>
   2c6c0:	mov	x2, x20
   2c6c4:	mov	x1, x21
   2c6c8:	add	x0, x19, #0x20
   2c6cc:	bl	c9c0 <__gmpz_add@plt>
   2c6d0:	add	x23, sp, #0xe0
   2c6d4:	add	x22, sp, #0x80
   2c6d8:	add	x21, sp, #0x60
   2c6dc:	add	x2, sp, #0x130
   2c6e0:	mov	x1, x22
   2c6e4:	mov	x0, x21
   2c6e8:	bl	bff0 <__gmpz_mul@plt>
   2c6ec:	add	x2, x22, #0x40
   2c6f0:	mov	x1, x21
   2c6f4:	mov	x0, x21
   2c6f8:	bl	bff0 <__gmpz_mul@plt>
   2c6fc:	add	x20, sp, #0x70
   2c700:	add	x2, x22, #0x50
   2c704:	add	x1, x23, #0x10
   2c708:	mov	x0, x20
   2c70c:	bl	bff0 <__gmpz_mul@plt>
   2c710:	add	x24, sp, #0x50
   2c714:	add	x2, x22, #0x30
   2c718:	mov	x1, x24
   2c71c:	mov	x0, x20
   2c720:	bl	c290 <__gmpz_addmul@plt>
   2c724:	add	x2, x23, #0x40
   2c728:	mov	x1, x20
   2c72c:	mov	x0, x20
   2c730:	bl	bff0 <__gmpz_mul@plt>
   2c734:	mov	x2, x20
   2c738:	mov	x1, x21
   2c73c:	add	x0, x19, #0x50
   2c740:	bl	c9c0 <__gmpz_add@plt>
   2c744:	mov	x0, x22
   2c748:	bl	2c580 <mpfr_asin@@Base+0x4b8>
   2c74c:	mov	x0, x23
   2c750:	bl	2c580 <mpfr_asin@@Base+0x4b8>
   2c754:	mov	x0, x24
   2c758:	bl	c170 <mpfr_mpz_clear@plt>
   2c75c:	mov	x0, x21
   2c760:	bl	c170 <mpfr_mpz_clear@plt>
   2c764:	mov	x0, x20
   2c768:	bl	c170 <mpfr_mpz_clear@plt>
   2c76c:	ldp	x23, x24, [sp, #48]
   2c770:	ldp	x25, x26, [sp, #64]
   2c774:	ldp	x19, x20, [sp, #16]
   2c778:	ldp	x21, x22, [sp, #32]
   2c77c:	ldp	x29, x30, [sp], #320
   2c780:	ret
   2c784:	mov	x1, x3
   2c788:	mov	x0, x19
   2c78c:	bl	bcb0 <__gmpz_set_ui@plt>
   2c790:	mov	x2, x19
   2c794:	mov	x1, x19
   2c798:	mov	x0, x19
   2c79c:	bl	bff0 <__gmpz_mul@plt>
   2c7a0:	add	x21, x19, #0x10
   2c7a4:	add	x20, x20, #0x1
   2c7a8:	mov	x1, x20
   2c7ac:	mov	x0, x21
   2c7b0:	bl	bcb0 <__gmpz_set_ui@plt>
   2c7b4:	mov	x2, x21
   2c7b8:	mov	x1, x21
   2c7bc:	mov	x0, x21
   2c7c0:	bl	bff0 <__gmpz_mul@plt>
   2c7c4:	mov	x1, #0x1                   	// #1
   2c7c8:	add	x0, x19, #0x30
   2c7cc:	bl	bcb0 <__gmpz_set_ui@plt>
   2c7d0:	mov	x1, x20
   2c7d4:	add	x0, x19, #0x40
   2c7d8:	bl	bcb0 <__gmpz_set_ui@plt>
   2c7dc:	mov	x1, x19
   2c7e0:	add	x0, x19, #0x20
   2c7e4:	bl	bfa0 <__gmpz_set@plt>
   2c7e8:	mov	x1, x19
   2c7ec:	add	x0, x19, #0x50
   2c7f0:	bl	bfa0 <__gmpz_set@plt>
   2c7f4:	b	2c774 <mpfr_asin@@Base+0x6ac>
   2c7f8:	add	x21, sp, #0xe0
   2c7fc:	add	x20, sp, #0x80
   2c800:	mov	x2, x21
   2c804:	mov	x1, x20
   2c808:	mov	x0, x19
   2c80c:	bl	bff0 <__gmpz_mul@plt>
   2c810:	add	x26, x21, #0x10
   2c814:	mov	x2, x26
   2c818:	add	x1, x20, #0x10
   2c81c:	add	x0, x19, #0x10
   2c820:	bl	bff0 <__gmpz_mul@plt>
   2c824:	add	x25, x21, #0x40
   2c828:	add	x24, x20, #0x40
   2c82c:	mov	x2, x25
   2c830:	mov	x1, x24
   2c834:	add	x0, x19, #0x40
   2c838:	bl	bff0 <__gmpz_mul@plt>
   2c83c:	add	x22, sp, #0x50
   2c840:	add	x2, x21, #0x20
   2c844:	mov	x1, x20
   2c848:	mov	x0, x22
   2c84c:	bl	bff0 <__gmpz_mul@plt>
   2c850:	add	x23, sp, #0x70
   2c854:	add	x2, x20, #0x20
   2c858:	mov	x1, x26
   2c85c:	mov	x0, x23
   2c860:	bl	bff0 <__gmpz_mul@plt>
   2c864:	mov	x2, x23
   2c868:	mov	x1, x22
   2c86c:	add	x0, x19, #0x20
   2c870:	bl	c9c0 <__gmpz_add@plt>
   2c874:	add	x0, x19, #0x30
   2c878:	mov	x2, x25
   2c87c:	add	x1, x20, #0x30
   2c880:	mov	x20, x0
   2c884:	bl	bff0 <__gmpz_mul@plt>
   2c888:	mov	x2, x24
   2c88c:	add	x1, x21, #0x30
   2c890:	mov	x0, x20
   2c894:	bl	c290 <__gmpz_addmul@plt>
   2c898:	b	2c6d0 <mpfr_asin@@Base+0x608>
   2c89c:	stp	x29, x30, [sp, #-160]!
   2c8a0:	mov	x29, sp
   2c8a4:	stp	x19, x20, [sp, #16]
   2c8a8:	stp	x21, x22, [sp, #32]
   2c8ac:	stp	x23, x24, [sp, #48]
   2c8b0:	mov	x22, x0
   2c8b4:	mov	x20, x1
   2c8b8:	mov	x21, x2
   2c8bc:	mov	x19, x3
   2c8c0:	mov	x24, x5
   2c8c4:	str	w6, [sp, #108]
   2c8c8:	sub	x0, x4, x3
   2c8cc:	cmp	x0, #0x1
   2c8d0:	b.ne	2c960 <mpfr_asin@@Base+0x898>  // b.any
   2c8d4:	cbnz	x3, 2c910 <mpfr_asin@@Base+0x848>
   2c8d8:	mov	x1, #0x1                   	// #1
   2c8dc:	mov	x0, x22
   2c8e0:	bl	bcb0 <__gmpz_set_ui@plt>
   2c8e4:	lsl	x1, x24, #2
   2c8e8:	mov	x0, x20
   2c8ec:	bl	bcb0 <__gmpz_set_ui@plt>
   2c8f0:	mov	x1, x22
   2c8f4:	mov	x0, x21
   2c8f8:	bl	bfa0 <__gmpz_set@plt>
   2c8fc:	ldp	x19, x20, [sp, #16]
   2c900:	ldp	x21, x22, [sp, #32]
   2c904:	ldp	x23, x24, [sp, #48]
   2c908:	ldp	x29, x30, [sp], #160
   2c90c:	ret
   2c910:	lsl	x1, x3, #1
   2c914:	sub	x1, x1, #0x1
   2c918:	mov	x0, x22
   2c91c:	bl	bcb0 <__gmpz_set_ui@plt>
   2c920:	mov	x2, #0x3                   	// #3
   2c924:	mov	x1, x22
   2c928:	mov	x0, x22
   2c92c:	bl	c330 <__gmpz_pow_ui@plt>
   2c930:	lsl	x1, x19, #5
   2c934:	mov	x0, x20
   2c938:	bl	bcb0 <__gmpz_set_ui@plt>
   2c93c:	mov	x2, x24
   2c940:	mov	x1, x20
   2c944:	mov	x0, x20
   2c948:	bl	c100 <__gmpz_mul_ui@plt>
   2c94c:	mov	x2, x24
   2c950:	mov	x1, x20
   2c954:	mov	x0, x20
   2c958:	bl	c100 <__gmpz_mul_ui@plt>
   2c95c:	b	2c8f0 <mpfr_asin@@Base+0x828>
   2c960:	stp	x25, x26, [sp, #64]
   2c964:	stp	x27, x28, [sp, #80]
   2c968:	mov	x23, x4
   2c96c:	add	x26, x4, x3
   2c970:	lsr	x26, x26, #1
   2c974:	add	x28, sp, #0x70
   2c978:	mov	x0, x28
   2c97c:	bl	bf90 <mpfr_mpz_init@plt>
   2c980:	add	x27, sp, #0x80
   2c984:	mov	x0, x27
   2c988:	bl	bf90 <mpfr_mpz_init@plt>
   2c98c:	add	x25, sp, #0x90
   2c990:	mov	x0, x25
   2c994:	bl	bf90 <mpfr_mpz_init@plt>
   2c998:	mov	w6, #0x1                   	// #1
   2c99c:	mov	x5, x24
   2c9a0:	mov	x4, x26
   2c9a4:	mov	x3, x19
   2c9a8:	mov	x2, x21
   2c9ac:	mov	x1, x20
   2c9b0:	mov	x0, x22
   2c9b4:	bl	2c89c <mpfr_asin@@Base+0x7d4>
   2c9b8:	mov	w6, #0x1                   	// #1
   2c9bc:	mov	x5, x24
   2c9c0:	mov	x4, x23
   2c9c4:	mov	x3, x26
   2c9c8:	mov	x2, x25
   2c9cc:	mov	x1, x27
   2c9d0:	mov	x0, x28
   2c9d4:	bl	2c89c <mpfr_asin@@Base+0x7d4>
   2c9d8:	mov	x2, x27
   2c9dc:	mov	x1, x21
   2c9e0:	mov	x0, x21
   2c9e4:	bl	bff0 <__gmpz_mul@plt>
   2c9e8:	mov	x2, x22
   2c9ec:	mov	x1, x25
   2c9f0:	mov	x0, x25
   2c9f4:	bl	bff0 <__gmpz_mul@plt>
   2c9f8:	mov	x2, x25
   2c9fc:	mov	x1, x21
   2ca00:	mov	x0, x21
   2ca04:	bl	c9c0 <__gmpz_add@plt>
   2ca08:	ldr	w0, [sp, #108]
   2ca0c:	cbnz	w0, 2ca48 <mpfr_asin@@Base+0x980>
   2ca10:	add	x19, sp, #0x80
   2ca14:	mov	x2, x19
   2ca18:	mov	x1, x20
   2ca1c:	mov	x0, x20
   2ca20:	bl	bff0 <__gmpz_mul@plt>
   2ca24:	add	x0, sp, #0x70
   2ca28:	bl	c170 <mpfr_mpz_clear@plt>
   2ca2c:	mov	x0, x19
   2ca30:	bl	c170 <mpfr_mpz_clear@plt>
   2ca34:	add	x0, sp, #0x90
   2ca38:	bl	c170 <mpfr_mpz_clear@plt>
   2ca3c:	ldp	x25, x26, [sp, #64]
   2ca40:	ldp	x27, x28, [sp, #80]
   2ca44:	b	2c8fc <mpfr_asin@@Base+0x834>
   2ca48:	add	x2, sp, #0x70
   2ca4c:	mov	x1, x22
   2ca50:	mov	x0, x22
   2ca54:	bl	bff0 <__gmpz_mul@plt>
   2ca58:	b	2ca10 <mpfr_asin@@Base+0x948>

000000000002ca5c <mpfr_const_euler_internal@@Base>:
   2ca5c:	stp	x29, x30, [sp, #-320]!
   2ca60:	mov	x29, sp
   2ca64:	stp	x19, x20, [sp, #16]
   2ca68:	stp	x21, x22, [sp, #32]
   2ca6c:	stp	x23, x24, [sp, #48]
   2ca70:	stp	x25, x26, [sp, #64]
   2ca74:	stp	x27, x28, [sp, #80]
   2ca78:	str	x0, [sp, #128]
   2ca7c:	str	w1, [sp, #108]
   2ca80:	ldr	x0, [x0]
   2ca84:	str	x0, [sp, #120]
   2ca88:	add	x22, x0, #0x18
   2ca8c:	mov	x1, x22
   2ca90:	add	x0, sp, #0x90
   2ca94:	bl	ca80 <mpfr_init2@plt>
   2ca98:	add	x0, sp, #0xe0
   2ca9c:	bl	2c538 <mpfr_asin@@Base+0x470>
   2caa0:	add	x0, sp, #0xd0
   2caa4:	bl	bf90 <mpfr_mpz_init@plt>
   2caa8:	add	x0, sp, #0xc0
   2caac:	bl	bf90 <mpfr_mpz_init@plt>
   2cab0:	add	x0, sp, #0xb0
   2cab4:	bl	bf90 <mpfr_mpz_init@plt>
   2cab8:	mov	x0, #0x40                  	// #64
   2cabc:	str	x0, [sp, #136]
   2cac0:	add	x19, sp, #0xd0
   2cac4:	mov	x27, #0x0                   	// #0
   2cac8:	add	x24, sp, #0xe0
   2cacc:	add	x0, x24, #0x10
   2cad0:	str	x0, [sp, #96]
   2cad4:	add	x1, x22, #0x5
   2cad8:	mov	x0, x19
   2cadc:	bl	bcb0 <__gmpz_set_ui@plt>
   2cae0:	mov	x2, #0x3882                	// #14466
   2cae4:	movk	x2, #0xd, lsl #16
   2cae8:	mov	x1, x19
   2caec:	mov	x0, x19
   2caf0:	bl	c100 <__gmpz_mul_ui@plt>
   2caf4:	mov	x2, #0x9680                	// #38528
   2caf8:	movk	x2, #0x98, lsl #16
   2cafc:	mov	x1, x19
   2cb00:	mov	x0, x19
   2cb04:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2cb08:	ldr	x0, [sp, #216]
   2cb0c:	ldr	x20, [x0]
   2cb10:	ldr	w0, [sp, #212]
   2cb14:	cmp	w0, #0x0
   2cb18:	csel	x20, x20, x27, ne  // ne = any
   2cb1c:	mov	x1, x20
   2cb20:	mov	x0, x19
   2cb24:	bl	bcb0 <__gmpz_set_ui@plt>
   2cb28:	mov	x2, #0xd882                	// #55426
   2cb2c:	movk	x2, #0x4b, lsl #16
   2cb30:	mov	x1, x19
   2cb34:	mov	x0, x19
   2cb38:	bl	c100 <__gmpz_mul_ui@plt>
   2cb3c:	mov	x2, #0x4240                	// #16960
   2cb40:	movk	x2, #0xf, lsl #16
   2cb44:	mov	x1, x19
   2cb48:	mov	x0, x19
   2cb4c:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2cb50:	mov	x2, #0x1                   	// #1
   2cb54:	mov	x1, x19
   2cb58:	mov	x0, x19
   2cb5c:	bl	c360 <__gmpz_add_ui@plt>
   2cb60:	ldr	x0, [sp, #216]
   2cb64:	ldr	x2, [x0]
   2cb68:	ldr	w0, [sp, #212]
   2cb6c:	cmp	w0, #0x0
   2cb70:	mov	w4, #0x0                   	// #0
   2cb74:	mov	x3, x20
   2cb78:	csel	x2, x2, xzr, ne  // ne = any
   2cb7c:	mov	x1, x27
   2cb80:	mov	x0, x24
   2cb84:	bl	2c5c8 <mpfr_asin@@Base+0x500>
   2cb88:	add	x23, x24, #0x20
   2cb8c:	ldr	x2, [sp, #96]
   2cb90:	mov	x1, x23
   2cb94:	mov	x0, x23
   2cb98:	bl	c9c0 <__gmpz_add@plt>
   2cb9c:	add	x28, x24, #0x40
   2cba0:	mov	x2, x28
   2cba4:	mov	x1, x23
   2cba8:	mov	x0, x19
   2cbac:	bl	bff0 <__gmpz_mul@plt>
   2cbb0:	str	x22, [sp, #112]
   2cbb4:	add	x26, x24, #0x50
   2cbb8:	add	x21, sp, #0xc0
   2cbbc:	mov	x2, x22
   2cbc0:	mov	x1, x26
   2cbc4:	mov	x0, x21
   2cbc8:	bl	c200 <__gmpz_mul_2exp@plt>
   2cbcc:	add	x25, sp, #0xb0
   2cbd0:	mov	x2, x19
   2cbd4:	mov	x1, x21
   2cbd8:	mov	x0, x25
   2cbdc:	bl	bb30 <__gmpz_tdiv_q@plt>
   2cbe0:	mov	w6, #0x0                   	// #0
   2cbe4:	mov	x5, x20
   2cbe8:	lsl	x4, x20, #1
   2cbec:	mov	x3, x27
   2cbf0:	mov	x2, x26
   2cbf4:	mov	x1, x28
   2cbf8:	add	x0, x24, #0x30
   2cbfc:	bl	2c89c <mpfr_asin@@Base+0x7d4>
   2cc00:	ldr	x1, [sp, #96]
   2cc04:	mov	x2, x1
   2cc08:	mov	x0, x19
   2cc0c:	bl	bff0 <__gmpz_mul@plt>
   2cc10:	mov	x2, x26
   2cc14:	mov	x1, x19
   2cc18:	mov	x0, x19
   2cc1c:	bl	bff0 <__gmpz_mul@plt>
   2cc20:	mov	x2, x23
   2cc24:	mov	x1, x23
   2cc28:	mov	x0, x21
   2cc2c:	bl	bff0 <__gmpz_mul@plt>
   2cc30:	mov	x2, x28
   2cc34:	mov	x1, x21
   2cc38:	mov	x0, x21
   2cc3c:	bl	bff0 <__gmpz_mul@plt>
   2cc40:	mov	x2, x22
   2cc44:	mov	x1, x19
   2cc48:	mov	x0, x19
   2cc4c:	bl	c200 <__gmpz_mul_2exp@plt>
   2cc50:	mov	x2, x21
   2cc54:	mov	x1, x19
   2cc58:	mov	x0, x19
   2cc5c:	bl	bb30 <__gmpz_tdiv_q@plt>
   2cc60:	mov	x2, x19
   2cc64:	mov	x1, x25
   2cc68:	mov	x0, x25
   2cc6c:	bl	bde0 <__gmpz_sub@plt>
   2cc70:	cmp	x20, #0x1
   2cc74:	b.eq	2cdc8 <mpfr_const_euler_internal@@Base+0x36c>  // b.none
   2cc78:	b.ls	2cdb0 <mpfr_const_euler_internal@@Base+0x354>  // b.plast
   2cc7c:	sub	x1, x20, #0x1
   2cc80:	clz	x0, x1
   2cc84:	mov	w1, #0x40                  	// #64
   2cc88:	sub	w1, w1, w0
   2cc8c:	sxtw	x1, w1
   2cc90:	add	x21, sp, #0x90
   2cc94:	add	x1, x22, x1
   2cc98:	mov	x0, x21
   2cc9c:	bl	bed0 <mpfr_set_prec@plt>
   2cca0:	mov	w3, #0x1                   	// #1
   2cca4:	mov	x2, x27
   2cca8:	mov	x1, x20
   2ccac:	mov	x0, x21
   2ccb0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2ccb4:	mov	w2, #0x1                   	// #1
   2ccb8:	mov	x1, x21
   2ccbc:	mov	x0, x21
   2ccc0:	bl	c090 <mpfr_log@plt>
   2ccc4:	mov	w3, #0x1                   	// #1
   2ccc8:	ldr	x20, [sp, #112]
   2cccc:	mov	x2, x20
   2ccd0:	mov	x1, x21
   2ccd4:	mov	x0, x21
   2ccd8:	bl	c2c0 <mpfr_mul_2ui@plt>
   2ccdc:	mov	w3, #0x1                   	// #1
   2cce0:	mov	x2, x21
   2cce4:	add	x1, sp, #0xb0
   2cce8:	mov	x0, x21
   2ccec:	bl	c030 <mpfr_z_sub@plt>
   2ccf0:	mov	w3, #0x1                   	// #1
   2ccf4:	mov	x2, x20
   2ccf8:	mov	x1, x21
   2ccfc:	mov	x0, x21
   2cd00:	bl	c8f0 <mpfr_div_2ui@plt>
   2cd04:	ldr	x1, [sp, #160]
   2cd08:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2cd0c:	cmp	x1, x0
   2cd10:	b.le	2cdd0 <mpfr_const_euler_internal@@Base+0x374>
   2cd14:	ldr	w0, [sp, #108]
   2cd18:	cmp	w0, #0x0
   2cd1c:	ldr	x0, [sp, #120]
   2cd20:	cinc	x3, x0, eq  // eq = none
   2cd24:	ldr	x0, [sp, #144]
   2cd28:	add	x1, x0, #0x3e
   2cd2c:	subs	x0, x0, #0x1
   2cd30:	csel	x1, x1, x0, mi  // mi = first
   2cd34:	asr	x1, x1, #6
   2cd38:	sub	x2, x22, #0x3
   2cd3c:	add	x1, x1, #0x1
   2cd40:	ldr	x0, [sp, #168]
   2cd44:	bl	c370 <mpfr_round_p@plt>
   2cd48:	cbz	w0, 2cdd0 <mpfr_const_euler_internal@@Base+0x374>
   2cd4c:	add	x19, sp, #0x90
   2cd50:	ldr	w3, [sp, #152]
   2cd54:	ldr	w2, [sp, #108]
   2cd58:	mov	x1, x19
   2cd5c:	ldr	x0, [sp, #128]
   2cd60:	bl	c6a0 <mpfr_set4@plt>
   2cd64:	mov	w20, w0
   2cd68:	mov	x0, x19
   2cd6c:	bl	c070 <mpfr_clear@plt>
   2cd70:	add	x0, sp, #0xd0
   2cd74:	bl	c170 <mpfr_mpz_clear@plt>
   2cd78:	add	x0, sp, #0xc0
   2cd7c:	bl	c170 <mpfr_mpz_clear@plt>
   2cd80:	add	x0, sp, #0xb0
   2cd84:	bl	c170 <mpfr_mpz_clear@plt>
   2cd88:	add	x0, sp, #0xe0
   2cd8c:	bl	2c580 <mpfr_asin@@Base+0x4b8>
   2cd90:	mov	w0, w20
   2cd94:	ldp	x19, x20, [sp, #16]
   2cd98:	ldp	x21, x22, [sp, #32]
   2cd9c:	ldp	x23, x24, [sp, #48]
   2cda0:	ldp	x25, x26, [sp, #64]
   2cda4:	ldp	x27, x28, [sp, #80]
   2cda8:	ldp	x29, x30, [sp], #320
   2cdac:	ret
   2cdb0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2cdb4:	add	x2, x2, #0xf48
   2cdb8:	mov	w1, #0xf9                  	// #249
   2cdbc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2cdc0:	add	x0, x0, #0xf50
   2cdc4:	bl	cb40 <mpfr_assert_fail@plt>
   2cdc8:	mov	x1, x27
   2cdcc:	b	2cc90 <mpfr_const_euler_internal@@Base+0x234>
   2cdd0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2cdd4:	movk	x0, #0x7fff, lsl #48
   2cdd8:	sub	x0, x0, x22
   2cddc:	ldr	x1, [sp, #136]
   2cde0:	cmp	x0, x1
   2cde4:	b.lt	2ce00 <mpfr_const_euler_internal@@Base+0x3a4>  // b.tstop
   2cde8:	ldr	x0, [sp, #136]
   2cdec:	add	x22, x22, x0
   2cdf0:	add	x0, x22, x22, lsr #63
   2cdf4:	asr	x0, x0, #1
   2cdf8:	str	x0, [sp, #136]
   2cdfc:	b	2cad4 <mpfr_const_euler_internal@@Base+0x78>
   2ce00:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2ce04:	add	x2, x2, #0xf60
   2ce08:	mov	w1, #0x107                 	// #263
   2ce0c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2ce10:	add	x0, x0, #0xf50
   2ce14:	bl	cb40 <mpfr_assert_fail@plt>

000000000002ce18 <mpfr_const_euler@@Base>:
   2ce18:	stp	x29, x30, [sp, #-16]!
   2ce1c:	mov	x29, sp
   2ce20:	mov	x3, x0
   2ce24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ce28:	ldr	x2, [x0, #2608]
   2ce2c:	add	x0, x0, #0xa30
   2ce30:	blr	x2
   2ce34:	mov	w2, w1
   2ce38:	mrs	x1, tpidr_el0
   2ce3c:	add	x1, x1, x0
   2ce40:	mov	x0, x3
   2ce44:	bl	c380 <mpfr_cache@plt>
   2ce48:	ldp	x29, x30, [sp], #16
   2ce4c:	ret

000000000002ce50 <mpfr_cos@@Base>:
   2ce50:	sub	sp, sp, #0x220
   2ce54:	stp	x29, x30, [sp]
   2ce58:	mov	x29, sp
   2ce5c:	stp	x19, x20, [sp, #16]
   2ce60:	str	x0, [sp, #128]
   2ce64:	str	x1, [sp, #136]
   2ce68:	str	w2, [sp, #184]
   2ce6c:	ldr	x0, [x1, #16]
   2ce70:	mov	x1, x0
   2ce74:	str	x0, [sp, #152]
   2ce78:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ce7c:	cmp	x1, x0
   2ce80:	b.le	2cfd4 <mpfr_cos@@Base+0x184>
   2ce84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ce88:	ldr	x1, [x0, #2576]
   2ce8c:	add	x0, x0, #0xa10
   2ce90:	blr	x1
   2ce94:	mrs	x1, tpidr_el0
   2ce98:	ldr	w0, [x1, x0]
   2ce9c:	str	w0, [sp, #188]
   2cea0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2cea4:	ldr	x2, [x0, #2512]
   2cea8:	add	x0, x0, #0x9d0
   2ceac:	blr	x2
   2ceb0:	add	x2, x1, x0
   2ceb4:	ldr	x0, [x1, x0]
   2ceb8:	str	x0, [sp, #200]
   2cebc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2cec0:	ldr	x3, [x0, #2544]
   2cec4:	add	x0, x0, #0x9f0
   2cec8:	blr	x3
   2cecc:	ldr	x3, [x1, x0]
   2ced0:	str	x3, [sp, #208]
   2ced4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2ced8:	str	x3, [x2]
   2cedc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2cee0:	str	x2, [x1, x0]
   2cee4:	ldr	x0, [sp, #152]
   2cee8:	neg	x2, x0, lsl #1
   2ceec:	cmp	x2, #0x0
   2cef0:	b.le	2cf0c <mpfr_cos@@Base+0xbc>
   2cef4:	add	x2, x2, #0x1
   2cef8:	ldr	x0, [sp, #128]
   2cefc:	ldr	x0, [x0]
   2cf00:	add	x0, x0, #0x1
   2cf04:	cmp	x0, x2
   2cf08:	b.cc	2d03c <mpfr_cos@@Base+0x1ec>  // b.lo, b.ul, b.last
   2cf0c:	ldr	x0, [sp, #128]
   2cf10:	ldr	x0, [x0]
   2cf14:	mov	x1, x0
   2cf18:	str	x0, [sp, #144]
   2cf1c:	mov	x0, #0x752f                	// #29999
   2cf20:	cmp	x1, x0
   2cf24:	b.gt	2d114 <mpfr_cos@@Base+0x2c4>
   2cf28:	stp	x21, x22, [sp, #32]
   2cf2c:	stp	x23, x24, [sp, #48]
   2cf30:	stp	x25, x26, [sp, #64]
   2cf34:	stp	x27, x28, [sp, #80]
   2cf38:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   2cf3c:	movk	x0, #0x5556
   2cf40:	ldr	x19, [sp, #144]
   2cf44:	smulh	x0, x19, x0
   2cf48:	sub	x0, x0, x19, asr #63
   2cf4c:	bl	bf20 <__gmpfr_isqrt@plt>
   2cf50:	str	x0, [sp, #176]
   2cf54:	cmp	x19, #0x1
   2cf58:	b.eq	2d1d4 <mpfr_cos@@Base+0x384>  // b.none
   2cf5c:	cmp	x19, #0x1
   2cf60:	b.le	2d1bc <mpfr_cos@@Base+0x36c>
   2cf64:	ldr	x0, [sp, #144]
   2cf68:	sub	x19, x0, #0x1
   2cf6c:	clz	x0, x19
   2cf70:	mov	w19, #0x40                  	// #64
   2cf74:	sub	w19, w19, w0
   2cf78:	lsl	w19, w19, #1
   2cf7c:	sxtw	x19, w19
   2cf80:	ldr	x0, [sp, #144]
   2cf84:	add	x19, x19, x0
   2cf88:	ldr	x0, [sp, #176]
   2cf8c:	add	x19, x19, x0, lsl #1
   2cf90:	add	x25, x19, #0x4
   2cf94:	ldr	x0, [sp, #152]
   2cf98:	cmp	x0, #0x2
   2cf9c:	b.le	2d1f4 <mpfr_cos@@Base+0x3a4>
   2cfa0:	add	x1, x0, x25
   2cfa4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2cfa8:	cmp	x1, x0
   2cfac:	b.gt	2d1dc <mpfr_cos@@Base+0x38c>
   2cfb0:	sub	x1, x1, #0x1
   2cfb4:	add	x0, sp, #0x1a0
   2cfb8:	bl	ca80 <mpfr_init2@plt>
   2cfbc:	mov	x1, x25
   2cfc0:	add	x0, sp, #0x1c0
   2cfc4:	bl	ca80 <mpfr_init2@plt>
   2cfc8:	mov	w0, #0x1                   	// #1
   2cfcc:	str	w0, [sp, #116]
   2cfd0:	b	2d1f8 <mpfr_cos@@Base+0x3a8>
   2cfd4:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2cfd8:	add	x0, x1, x0
   2cfdc:	cmp	x0, #0x1
   2cfe0:	b.ls	2d000 <mpfr_cos@@Base+0x1b0>  // b.plast
   2cfe4:	ldr	w3, [sp, #184]
   2cfe8:	mov	x2, #0x0                   	// #0
   2cfec:	mov	x1, #0x1                   	// #1
   2cff0:	ldr	x0, [sp, #128]
   2cff4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2cff8:	mov	w19, w0
   2cffc:	b	2d6d4 <mpfr_cos@@Base+0x884>
   2d000:	mov	x0, #0x2                   	// #2
   2d004:	movk	x0, #0x8000, lsl #48
   2d008:	ldr	x1, [sp, #128]
   2d00c:	str	x0, [x1, #16]
   2d010:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d014:	ldr	x1, [x0, #2576]
   2d018:	add	x0, x0, #0xa10
   2d01c:	blr	x1
   2d020:	mrs	x1, tpidr_el0
   2d024:	add	x0, x1, x0
   2d028:	ldr	w1, [x0]
   2d02c:	orr	w1, w1, #0x4
   2d030:	str	w1, [x0]
   2d034:	mov	w19, #0x0                   	// #0
   2d038:	b	2d6d4 <mpfr_cos@@Base+0x884>
   2d03c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d040:	ldr	x1, [x0, #2576]
   2d044:	add	x0, x0, #0xa10
   2d048:	blr	x1
   2d04c:	mrs	x1, tpidr_el0
   2d050:	str	wzr, [x1, x0]
   2d054:	ldr	w4, [sp, #184]
   2d058:	mov	w3, #0x0                   	// #0
   2d05c:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   2d060:	ldr	x1, [x1, #3928]
   2d064:	ldr	x0, [sp, #128]
   2d068:	bl	c540 <mpfr_round_near_x@plt>
   2d06c:	mov	w19, w0
   2d070:	cbz	w0, 2cf0c <mpfr_cos@@Base+0xbc>
   2d074:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d078:	ldr	x1, [x0, #2576]
   2d07c:	add	x0, x0, #0xa10
   2d080:	blr	x1
   2d084:	mrs	x2, tpidr_el0
   2d088:	ldr	w1, [x2, x0]
   2d08c:	ldr	w3, [sp, #188]
   2d090:	orr	w1, w3, w1
   2d094:	str	w1, [x2, x0]
   2d098:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d09c:	ldr	x3, [x0, #2512]
   2d0a0:	add	x0, x0, #0x9d0
   2d0a4:	blr	x3
   2d0a8:	ldr	x3, [sp, #200]
   2d0ac:	str	x3, [x2, x0]
   2d0b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d0b4:	ldr	x4, [x0, #2544]
   2d0b8:	add	x0, x0, #0x9f0
   2d0bc:	blr	x4
   2d0c0:	ldr	x4, [sp, #208]
   2d0c4:	str	x4, [x2, x0]
   2d0c8:	ldr	x0, [sp, #128]
   2d0cc:	ldr	x0, [x0, #16]
   2d0d0:	cmp	x4, x0
   2d0d4:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   2d0d8:	b.gt	2d0fc <mpfr_cos@@Base+0x2ac>
   2d0dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d0e0:	ldr	x2, [x0, #2576]
   2d0e4:	add	x0, x0, #0xa10
   2d0e8:	blr	x2
   2d0ec:	orr	w1, w1, #0x8
   2d0f0:	mrs	x2, tpidr_el0
   2d0f4:	str	w1, [x2, x0]
   2d0f8:	b	2d6d4 <mpfr_cos@@Base+0x884>
   2d0fc:	ldr	w2, [sp, #184]
   2d100:	mov	w1, w19
   2d104:	ldr	x0, [sp, #128]
   2d108:	bl	cb30 <mpfr_check_range@plt>
   2d10c:	mov	w19, w0
   2d110:	b	2d6d4 <mpfr_cos@@Base+0x884>
   2d114:	ldr	w3, [sp, #184]
   2d118:	ldr	x2, [sp, #136]
   2d11c:	ldr	x1, [sp, #128]
   2d120:	mov	x0, #0x0                   	// #0
   2d124:	bl	c020 <mpfr_sincos_fast@plt>
   2d128:	asr	w19, w0, #2
   2d12c:	cmp	w19, #0x2
   2d130:	b.ne	2d670 <mpfr_cos@@Base+0x820>  // b.any
   2d134:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d138:	ldr	x1, [x0, #2576]
   2d13c:	add	x0, x0, #0xa10
   2d140:	blr	x1
   2d144:	mrs	x1, tpidr_el0
   2d148:	ldr	w2, [sp, #188]
   2d14c:	str	w2, [x1, x0]
   2d150:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d154:	ldr	x2, [x0, #2512]
   2d158:	add	x0, x0, #0x9d0
   2d15c:	blr	x2
   2d160:	ldr	x2, [sp, #200]
   2d164:	str	x2, [x1, x0]
   2d168:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d16c:	ldr	x3, [x0, #2544]
   2d170:	add	x0, x0, #0x9f0
   2d174:	blr	x3
   2d178:	ldr	x3, [sp, #208]
   2d17c:	str	x3, [x1, x0]
   2d180:	ldr	x0, [sp, #128]
   2d184:	ldr	x0, [x0, #16]
   2d188:	cmp	x3, x0
   2d18c:	mov	w19, #0xffffffff            	// #-1
   2d190:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2d194:	b.gt	2d8d8 <mpfr_cos@@Base+0xa88>
   2d198:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d19c:	ldr	x1, [x0, #2576]
   2d1a0:	add	x0, x0, #0xa10
   2d1a4:	blr	x1
   2d1a8:	ldr	w1, [sp, #188]
   2d1ac:	orr	w2, w1, #0x8
   2d1b0:	mrs	x1, tpidr_el0
   2d1b4:	str	w2, [x1, x0]
   2d1b8:	b	2d6d4 <mpfr_cos@@Base+0x884>
   2d1bc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d1c0:	add	x2, x2, #0xfa8
   2d1c4:	mov	w1, #0xb1                  	// #177
   2d1c8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d1cc:	add	x0, x0, #0xfb8
   2d1d0:	bl	cb40 <mpfr_assert_fail@plt>
   2d1d4:	mov	x19, #0x0                   	// #0
   2d1d8:	b	2cf80 <mpfr_cos@@Base+0x130>
   2d1dc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d1e0:	add	x2, x2, #0xfc0
   2d1e4:	mov	w1, #0xb9                  	// #185
   2d1e8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d1ec:	add	x0, x0, #0xfb8
   2d1f0:	bl	cb40 <mpfr_assert_fail@plt>
   2d1f4:	str	wzr, [sp, #116]
   2d1f8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2d1fc:	cmp	x25, x0
   2d200:	b.ge	2d27c <mpfr_cos@@Base+0x42c>  // b.tcont
   2d204:	add	x0, x19, #0x42
   2d208:	adds	x19, x19, #0x3
   2d20c:	csel	x19, x0, x19, mi  // mi = first
   2d210:	asr	x19, x19, #6
   2d214:	add	x19, x19, #0x1
   2d218:	lsl	x0, x19, #1
   2d21c:	cmp	x0, #0x10
   2d220:	b.gt	2d280 <mpfr_cos@@Base+0x430>
   2d224:	str	xzr, [sp, #272]
   2d228:	add	x0, sp, #0x120
   2d22c:	str	x0, [sp, #280]
   2d230:	str	x25, [sp, #512]
   2d234:	ldr	x1, [sp, #280]
   2d238:	str	x1, [sp, #536]
   2d23c:	mov	w0, #0x1                   	// #1
   2d240:	str	w0, [sp, #520]
   2d244:	str	x25, [sp, #480]
   2d248:	add	x19, x1, x19, lsl #3
   2d24c:	str	x19, [sp, #504]
   2d250:	str	w0, [sp, #488]
   2d254:	mov	x0, #0x40                  	// #64
   2d258:	str	x0, [sp, #104]
   2d25c:	str	xzr, [sp, #216]
   2d260:	add	x26, sp, #0xe0
   2d264:	add	x27, sp, #0x100
   2d268:	add	x19, sp, #0xf0
   2d26c:	add	x0, sp, #0x200
   2d270:	str	x0, [sp, #120]
   2d274:	add	x28, sp, #0x1e0
   2d278:	b	2d7c0 <mpfr_cos@@Base+0x970>
   2d27c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2d280:	lsl	x0, x19, #4
   2d284:	str	x0, [sp, #272]
   2d288:	bl	ccf0 <mpfr_allocate_func@plt>
   2d28c:	str	x0, [sp, #280]
   2d290:	b	2d230 <mpfr_cos@@Base+0x3e0>
   2d294:	add	x1, sp, #0x1c0
   2d298:	mov	w3, #0x2                   	// #2
   2d29c:	mov	x2, x1
   2d2a0:	ldr	x0, [sp, #120]
   2d2a4:	bl	bd50 <mpfr_mul@plt>
   2d2a8:	ldr	x0, [sp, #528]
   2d2ac:	cmp	x0, #0x0
   2d2b0:	csel	x1, x0, xzr, ge  // ge = tcont
   2d2b4:	add	x1, x1, x1, lsr #63
   2d2b8:	ldr	x2, [sp, #176]
   2d2bc:	add	x2, x2, #0x1
   2d2c0:	add	x1, x2, x1, asr #1
   2d2c4:	str	x1, [sp, #160]
   2d2c8:	lsl	x1, x1, #1
   2d2cc:	str	x1, [sp, #192]
   2d2d0:	sub	x0, x0, x1
   2d2d4:	str	x0, [sp, #528]
   2d2d8:	mov	x0, x26
   2d2dc:	bl	bf90 <mpfr_mpz_init@plt>
   2d2e0:	mov	x0, x27
   2d2e4:	bl	bf90 <mpfr_mpz_init@plt>
   2d2e8:	mov	x0, x19
   2d2ec:	bl	bf90 <mpfr_mpz_init@plt>
   2d2f0:	ldr	x1, [sp, #120]
   2d2f4:	mov	x0, x26
   2d2f8:	bl	cac0 <mpfr_get_z_2exp@plt>
   2d2fc:	mov	x22, x0
   2d300:	mov	x1, #0x0                   	// #0
   2d304:	mov	x0, x26
   2d308:	bl	ba90 <__gmpz_scan1@plt>
   2d30c:	mov	x2, x0
   2d310:	add	x22, x0, x22
   2d314:	mov	x1, x26
   2d318:	mov	x0, x26
   2d31c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d320:	ldr	x20, [sp, #480]
   2d324:	ldr	x0, [sp, #528]
   2d328:	neg	x0, x0
   2d32c:	sdiv	x0, x20, x0
   2d330:	cmp	x0, #0x0
   2d334:	cinc	x0, x0, eq  // eq = none
   2d338:	cmp	x0, #0x1
   2d33c:	b.eq	2d3c8 <mpfr_cos@@Base+0x578>  // b.none
   2d340:	b.ls	2d3b0 <mpfr_cos@@Base+0x560>  // b.plast
   2d344:	sub	x0, x0, #0x1
   2d348:	clz	x0, x0
   2d34c:	mov	w24, #0x42                  	// #66
   2d350:	sub	w24, w24, w0
   2d354:	lsl	w24, w24, #1
   2d358:	sxtw	x24, w24
   2d35c:	mov	x1, #0x1                   	// #1
   2d360:	mov	x0, x27
   2d364:	bl	bcb0 <__gmpz_set_ui@plt>
   2d368:	add	x0, x20, x24
   2d36c:	str	x0, [sp, #168]
   2d370:	mov	x2, x0
   2d374:	mov	x1, x27
   2d378:	mov	x0, x27
   2d37c:	bl	c200 <__gmpz_mul_2exp@plt>
   2d380:	mov	x1, x27
   2d384:	mov	x0, x19
   2d388:	bl	bfa0 <__gmpz_set@plt>
   2d38c:	mov	x20, #0x1                   	// #1
   2d390:	mov	w23, #0x2                   	// #2
   2d394:	b	2d42c <mpfr_cos@@Base+0x5dc>
   2d398:	mov	w3, #0x2                   	// #2
   2d39c:	ldr	x1, [sp, #136]
   2d3a0:	mov	x2, x1
   2d3a4:	ldr	x0, [sp, #120]
   2d3a8:	bl	bd50 <mpfr_mul@plt>
   2d3ac:	b	2d2a8 <mpfr_cos@@Base+0x458>
   2d3b0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2d3b4:	add	x2, x2, #0x8
   2d3b8:	mov	w1, #0x4e                  	// #78
   2d3bc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d3c0:	add	x0, x0, #0xfb8
   2d3c4:	bl	cb40 <mpfr_assert_fail@plt>
   2d3c8:	mov	x24, #0x4                   	// #4
   2d3cc:	b	2d35c <mpfr_cos@@Base+0x50c>
   2d3d0:	sub	x21, x0, x21
   2d3d4:	mov	x2, x21
   2d3d8:	mov	x1, x26
   2d3dc:	mov	x0, x26
   2d3e0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d3e4:	add	x22, x22, x21
   2d3e8:	b	2d458 <mpfr_cos@@Base+0x608>
   2d3ec:	mov	x2, x20
   2d3f0:	mov	x1, x19
   2d3f4:	mov	x0, x19
   2d3f8:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2d3fc:	add	x2, x20, #0x1
   2d400:	mov	x1, x19
   2d404:	mov	x0, x19
   2d408:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2d40c:	and	x0, x20, #0x3
   2d410:	cmp	x0, #0x1
   2d414:	b.eq	2d498 <mpfr_cos@@Base+0x648>  // b.none
   2d418:	mov	x2, x19
   2d41c:	mov	x1, x27
   2d420:	mov	x0, x27
   2d424:	bl	c9c0 <__gmpz_add@plt>
   2d428:	add	x20, x20, #0x2
   2d42c:	mov	w1, w23
   2d430:	mov	x0, x19
   2d434:	bl	cb60 <__gmpz_sizeinbase@plt>
   2d438:	mov	x21, x0
   2d43c:	cmp	x24, x0
   2d440:	b.gt	2d4ac <mpfr_cos@@Base+0x65c>
   2d444:	mov	w1, w23
   2d448:	mov	x0, x26
   2d44c:	bl	cb60 <__gmpz_sizeinbase@plt>
   2d450:	cmp	x0, x21
   2d454:	b.gt	2d3d0 <mpfr_cos@@Base+0x580>
   2d458:	mov	x2, x26
   2d45c:	mov	x1, x19
   2d460:	mov	x0, x19
   2d464:	bl	bff0 <__gmpz_mul@plt>
   2d468:	neg	x2, x22
   2d46c:	mov	x1, x19
   2d470:	mov	x0, x19
   2d474:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d478:	mov	x0, #0xffffffff            	// #4294967295
   2d47c:	cmp	x20, x0
   2d480:	b.hi	2d3ec <mpfr_cos@@Base+0x59c>  // b.pmore
   2d484:	madd	x2, x20, x20, x20
   2d488:	mov	x1, x19
   2d48c:	mov	x0, x19
   2d490:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2d494:	b	2d40c <mpfr_cos@@Base+0x5bc>
   2d498:	mov	x2, x19
   2d49c:	mov	x1, x27
   2d4a0:	mov	x0, x27
   2d4a4:	bl	bde0 <__gmpz_sub@plt>
   2d4a8:	b	2d428 <mpfr_cos@@Base+0x5d8>
   2d4ac:	mov	w2, #0x0                   	// #0
   2d4b0:	mov	x1, x27
   2d4b4:	mov	x0, x28
   2d4b8:	bl	c240 <mpfr_set_z@plt>
   2d4bc:	mov	w3, #0x0                   	// #0
   2d4c0:	ldr	x2, [sp, #168]
   2d4c4:	mov	x1, x28
   2d4c8:	mov	x0, x28
   2d4cc:	bl	c8f0 <mpfr_div_2ui@plt>
   2d4d0:	mov	x0, x26
   2d4d4:	bl	c170 <mpfr_mpz_clear@plt>
   2d4d8:	mov	x0, x27
   2d4dc:	bl	c170 <mpfr_mpz_clear@plt>
   2d4e0:	mov	x0, x19
   2d4e4:	bl	c170 <mpfr_mpz_clear@plt>
   2d4e8:	sub	x20, x20, #0x1
   2d4ec:	lsr	x21, x20, #1
   2d4f0:	clz	x0, x21
   2d4f4:	mov	w21, #0x40                  	// #64
   2d4f8:	sub	w21, w21, w0
   2d4fc:	lsl	w21, w21, #1
   2d500:	add	w21, w21, #0x1
   2d504:	cmp	x20, #0x1
   2d508:	csinc	w21, w21, wzr, hi  // hi = pmore
   2d50c:	sxtw	x21, w21
   2d510:	ldr	x0, [sp, #512]
   2d514:	add	x20, x0, #0x3e
   2d518:	subs	x0, x0, #0x1
   2d51c:	csel	x0, x20, x0, mi  // mi = first
   2d520:	asr	x20, x0, #6
   2d524:	mov	w0, #0x1                   	// #1
   2d528:	str	w0, [sp, #520]
   2d52c:	mov	x0, #0x1                   	// #1
   2d530:	str	x0, [sp, #528]
   2d534:	lsl	x2, x20, #3
   2d538:	mov	w1, #0x0                   	// #0
   2d53c:	ldr	x0, [sp, #536]
   2d540:	bl	c110 <memset@plt>
   2d544:	ldr	x0, [sp, #536]
   2d548:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2d54c:	str	x1, [x0, x20, lsl #3]
   2d550:	ldr	x24, [sp, #160]
   2d554:	cmp	x24, #0x0
   2d558:	b.le	2d6e8 <mpfr_cos@@Base+0x898>
   2d55c:	mov	x20, #0x0                   	// #0
   2d560:	mov	w23, #0x2                   	// #2
   2d564:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   2d568:	str	x21, [sp, #160]
   2d56c:	ldr	x21, [sp, #120]
   2d570:	mov	w2, w23
   2d574:	mov	x1, x28
   2d578:	mov	x0, x28
   2d57c:	bl	c400 <mpfr_sqr@plt>
   2d580:	ldr	x0, [sp, #496]
   2d584:	add	x0, x0, #0x1
   2d588:	str	x0, [sp, #496]
   2d58c:	mov	w3, #0x0                   	// #0
   2d590:	mov	x2, x21
   2d594:	mov	x1, x28
   2d598:	mov	x0, x28
   2d59c:	bl	bb70 <mpfr_sub@plt>
   2d5a0:	ldr	x0, [sp, #496]
   2d5a4:	cmp	x0, x22
   2d5a8:	b.eq	2d828 <mpfr_cos@@Base+0x9d8>  // b.none
   2d5ac:	add	x20, x20, #0x1
   2d5b0:	cmp	x24, x20
   2d5b4:	b.ne	2d570 <mpfr_cos@@Base+0x720>  // b.any
   2d5b8:	ldr	x21, [sp, #160]
   2d5bc:	lsl	x21, x21, #1
   2d5c0:	add	x21, x21, #0x1
   2d5c4:	ldr	w0, [sp, #116]
   2d5c8:	cbnz	w0, 2d710 <mpfr_cos@@Base+0x8c0>
   2d5cc:	sub	x21, x21, #0x1
   2d5d0:	clz	x21, x21
   2d5d4:	mov	w0, #0x40                  	// #64
   2d5d8:	sub	w21, w0, w21
   2d5dc:	ldr	x0, [sp, #192]
   2d5e0:	add	x21, x0, w21, sxtw
   2d5e4:	ldr	x20, [sp, #496]
   2d5e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2d5ec:	cmp	x20, x0
   2d5f0:	b.le	2d718 <mpfr_cos@@Base+0x8c8>
   2d5f4:	ldr	w0, [sp, #184]
   2d5f8:	cmp	w0, #0x0
   2d5fc:	ldr	x0, [sp, #144]
   2d600:	cinc	x3, x0, eq  // eq = none
   2d604:	add	x2, x25, x20
   2d608:	ldr	x0, [sp, #480]
   2d60c:	add	x1, x0, #0x3e
   2d610:	subs	x0, x0, #0x1
   2d614:	csel	x1, x1, x0, mi  // mi = first
   2d618:	asr	x1, x1, #6
   2d61c:	sub	x2, x2, x21
   2d620:	add	x1, x1, #0x1
   2d624:	ldr	x0, [sp, #504]
   2d628:	bl	c370 <mpfr_round_p@plt>
   2d62c:	cbz	w0, 2d718 <mpfr_cos@@Base+0x8c8>
   2d630:	ldr	w3, [sp, #488]
   2d634:	ldr	w2, [sp, #184]
   2d638:	add	x1, sp, #0x1e0
   2d63c:	ldr	x0, [sp, #128]
   2d640:	bl	c6a0 <mpfr_set4@plt>
   2d644:	mov	w19, w0
   2d648:	ldr	x1, [sp, #272]
   2d64c:	cbz	x1, 2d658 <mpfr_cos@@Base+0x808>
   2d650:	ldr	x0, [sp, #280]
   2d654:	bl	cc20 <mpfr_free_func@plt>
   2d658:	ldr	w0, [sp, #116]
   2d65c:	cbnz	w0, 2d8b4 <mpfr_cos@@Base+0xa64>
   2d660:	ldp	x21, x22, [sp, #32]
   2d664:	ldp	x23, x24, [sp, #48]
   2d668:	ldp	x25, x26, [sp, #64]
   2d66c:	ldp	x27, x28, [sp, #80]
   2d670:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d674:	ldr	x1, [x0, #2576]
   2d678:	add	x0, x0, #0xa10
   2d67c:	blr	x1
   2d680:	mrs	x1, tpidr_el0
   2d684:	ldr	w2, [sp, #188]
   2d688:	str	w2, [x1, x0]
   2d68c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d690:	ldr	x2, [x0, #2512]
   2d694:	add	x0, x0, #0x9d0
   2d698:	blr	x2
   2d69c:	ldr	x2, [sp, #200]
   2d6a0:	str	x2, [x1, x0]
   2d6a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d6a8:	ldr	x3, [x0, #2544]
   2d6ac:	add	x0, x0, #0x9f0
   2d6b0:	blr	x3
   2d6b4:	ldr	x3, [sp, #208]
   2d6b8:	str	x3, [x1, x0]
   2d6bc:	ldr	x0, [sp, #128]
   2d6c0:	ldr	x0, [x0, #16]
   2d6c4:	cmp	x3, x0
   2d6c8:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2d6cc:	b.gt	2d8d8 <mpfr_cos@@Base+0xa88>
   2d6d0:	cbnz	w19, 2d198 <mpfr_cos@@Base+0x348>
   2d6d4:	mov	w0, w19
   2d6d8:	ldp	x19, x20, [sp, #16]
   2d6dc:	ldp	x29, x30, [sp]
   2d6e0:	add	sp, sp, #0x220
   2d6e4:	ret
   2d6e8:	lsl	x21, x21, #1
   2d6ec:	add	x21, x21, #0x1
   2d6f0:	ldr	w0, [sp, #116]
   2d6f4:	cbz	w0, 2d5cc <mpfr_cos@@Base+0x77c>
   2d6f8:	ldr	x0, [sp, #160]
   2d6fc:	cmp	x0, #0x0
   2d700:	mov	x0, #0x4                   	// #4
   2d704:	csinc	x0, x0, xzr, eq  // eq = none
   2d708:	add	x21, x21, x0
   2d70c:	b	2d5cc <mpfr_cos@@Base+0x77c>
   2d710:	mov	x0, #0x1                   	// #1
   2d714:	b	2d708 <mpfr_cos@@Base+0x8b8>
   2d718:	cmp	x25, x21
   2d71c:	ccmp	x20, #0x1, #0x0, gt
   2d720:	b.eq	2d740 <mpfr_cos@@Base+0x8f0>  // b.none
   2d724:	ldr	x0, [sp, #216]
   2d728:	cmp	x0, x20
   2d72c:	b.le	2d828 <mpfr_cos@@Base+0x9d8>
   2d730:	sub	x0, x0, x20
   2d734:	add	x25, x25, x0
   2d738:	str	x20, [sp, #216]
   2d73c:	b	2d828 <mpfr_cos@@Base+0x9d8>
   2d740:	sub	x21, x25, x21
   2d744:	ldr	w0, [sp, #184]
   2d748:	cmp	w0, #0x0
   2d74c:	ldr	x0, [sp, #144]
   2d750:	cinc	x0, x0, eq  // eq = none
   2d754:	cmp	x21, x0
   2d758:	b.lt	2d724 <mpfr_cos@@Base+0x8d4>  // b.tstop
   2d75c:	add	x0, sp, #0x1e0
   2d760:	bl	c460 <mpfr_nexttozero@plt>
   2d764:	b	2d630 <mpfr_cos@@Base+0x7e0>
   2d768:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2d76c:	add	x2, x2, #0x18
   2d770:	mov	w1, #0x117                 	// #279
   2d774:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2d778:	add	x0, x0, #0xfb8
   2d77c:	bl	cb40 <mpfr_assert_fail@plt>
   2d780:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2d784:	mov	x2, x0
   2d788:	ldr	x0, [sp, #280]
   2d78c:	bl	c1c0 <mpfr_reallocate_func@plt>
   2d790:	str	x0, [sp, #280]
   2d794:	str	x25, [sp, #512]
   2d798:	ldr	x1, [sp, #280]
   2d79c:	str	x1, [sp, #536]
   2d7a0:	mov	w0, #0x1                   	// #1
   2d7a4:	str	w0, [sp, #520]
   2d7a8:	str	x25, [sp, #480]
   2d7ac:	add	x20, x1, x20, lsl #3
   2d7b0:	str	x20, [sp, #504]
   2d7b4:	str	w0, [sp, #488]
   2d7b8:	ldr	w0, [sp, #116]
   2d7bc:	cbnz	w0, 2d890 <mpfr_cos@@Base+0xa40>
   2d7c0:	ldr	w0, [sp, #116]
   2d7c4:	cbz	w0, 2d398 <mpfr_cos@@Base+0x548>
   2d7c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d7cc:	ldr	x1, [x0, #2624]
   2d7d0:	add	x0, x0, #0xa40
   2d7d4:	blr	x1
   2d7d8:	add	x20, sp, #0x1a0
   2d7dc:	mov	w2, #0x0                   	// #0
   2d7e0:	mrs	x1, tpidr_el0
   2d7e4:	add	x1, x1, x0
   2d7e8:	mov	x0, x20
   2d7ec:	bl	c380 <mpfr_cache@plt>
   2d7f0:	mov	w3, #0x0                   	// #0
   2d7f4:	mov	x2, #0x1                   	// #1
   2d7f8:	mov	x1, x20
   2d7fc:	mov	x0, x20
   2d800:	bl	c2c0 <mpfr_mul_2ui@plt>
   2d804:	mov	w3, #0x0                   	// #0
   2d808:	mov	x2, x20
   2d80c:	ldr	x1, [sp, #136]
   2d810:	add	x0, sp, #0x1c0
   2d814:	bl	cd10 <mpfr_remainder@plt>
   2d818:	ldr	x1, [sp, #464]
   2d81c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2d820:	cmp	x1, x0
   2d824:	b.ne	2d294 <mpfr_cos@@Base+0x444>  // b.any
   2d828:	mov	x0, #0xfffffffffffffeff    	// #-257
   2d82c:	movk	x0, #0x7fff, lsl #48
   2d830:	sub	x0, x0, x25
   2d834:	ldr	x1, [sp, #104]
   2d838:	cmp	x0, x1
   2d83c:	b.lt	2d768 <mpfr_cos@@Base+0x918>  // b.tstop
   2d840:	ldr	x0, [sp, #104]
   2d844:	add	x25, x25, x0
   2d848:	add	x0, x25, x25, lsr #63
   2d84c:	asr	x0, x0, #1
   2d850:	str	x0, [sp, #104]
   2d854:	ldr	x1, [sp, #272]
   2d858:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2d85c:	cmp	x25, x0
   2d860:	b.ge	2d780 <mpfr_cos@@Base+0x930>  // b.tcont
   2d864:	add	x20, x25, #0x3e
   2d868:	subs	x0, x25, #0x1
   2d86c:	csel	x20, x20, x0, mi  // mi = first
   2d870:	asr	x20, x20, #6
   2d874:	add	x20, x20, #0x1
   2d878:	lsl	x0, x20, #4
   2d87c:	str	x0, [sp, #272]
   2d880:	cbnz	x1, 2d784 <mpfr_cos@@Base+0x934>
   2d884:	bl	ccf0 <mpfr_allocate_func@plt>
   2d888:	str	x0, [sp, #280]
   2d88c:	b	2d794 <mpfr_cos@@Base+0x944>
   2d890:	mov	x1, x25
   2d894:	add	x0, sp, #0x1c0
   2d898:	bl	bed0 <mpfr_set_prec@plt>
   2d89c:	ldr	x0, [sp, #152]
   2d8a0:	add	x1, x0, x25
   2d8a4:	sub	x1, x1, #0x1
   2d8a8:	add	x0, sp, #0x1a0
   2d8ac:	bl	bed0 <mpfr_set_prec@plt>
   2d8b0:	b	2d7c0 <mpfr_cos@@Base+0x970>
   2d8b4:	add	x0, sp, #0x1c0
   2d8b8:	bl	c070 <mpfr_clear@plt>
   2d8bc:	add	x0, sp, #0x1a0
   2d8c0:	bl	c070 <mpfr_clear@plt>
   2d8c4:	ldp	x21, x22, [sp, #32]
   2d8c8:	ldp	x23, x24, [sp, #48]
   2d8cc:	ldp	x25, x26, [sp, #64]
   2d8d0:	ldp	x27, x28, [sp, #80]
   2d8d4:	b	2d670 <mpfr_cos@@Base+0x820>
   2d8d8:	ldr	w2, [sp, #184]
   2d8dc:	mov	w1, w19
   2d8e0:	ldr	x0, [sp, #128]
   2d8e4:	bl	cb30 <mpfr_check_range@plt>
   2d8e8:	mov	w19, w0
   2d8ec:	b	2d6d4 <mpfr_cos@@Base+0x884>

000000000002d8f0 <mpfr_sin@@Base>:
   2d8f0:	stp	x29, x30, [sp, #-208]!
   2d8f4:	mov	x29, sp
   2d8f8:	stp	x19, x20, [sp, #16]
   2d8fc:	stp	x23, x24, [sp, #48]
   2d900:	stp	x25, x26, [sp, #64]
   2d904:	stp	x27, x28, [sp, #80]
   2d908:	mov	x28, x0
   2d90c:	mov	x25, x1
   2d910:	str	w2, [sp, #120]
   2d914:	ldr	x23, [x1, #16]
   2d918:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2d91c:	cmp	x23, x0
   2d920:	b.le	2da38 <mpfr_sin@@Base+0x148>
   2d924:	neg	x19, x23, lsl #1
   2d928:	cmp	x19, #0x0
   2d92c:	b.le	2d944 <mpfr_sin@@Base+0x54>
   2d930:	add	x2, x19, #0x2
   2d934:	ldr	x0, [x28]
   2d938:	add	x0, x0, #0x1
   2d93c:	cmp	x0, x2
   2d940:	b.cc	2da94 <mpfr_sin@@Base+0x1a4>  // b.lo, b.ul, b.last
   2d944:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d948:	ldr	x1, [x0, #2576]
   2d94c:	add	x0, x0, #0xa10
   2d950:	blr	x1
   2d954:	mrs	x1, tpidr_el0
   2d958:	ldr	w0, [x1, x0]
   2d95c:	str	w0, [sp, #124]
   2d960:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d964:	ldr	x2, [x0, #2512]
   2d968:	add	x0, x0, #0x9d0
   2d96c:	blr	x2
   2d970:	add	x2, x1, x0
   2d974:	ldr	x0, [x1, x0]
   2d978:	str	x0, [sp, #128]
   2d97c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2d980:	ldr	x3, [x0, #2544]
   2d984:	add	x0, x0, #0x9f0
   2d988:	blr	x3
   2d98c:	ldr	x3, [x1, x0]
   2d990:	str	x3, [sp, #136]
   2d994:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2d998:	str	x3, [x2]
   2d99c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2d9a0:	str	x2, [x1, x0]
   2d9a4:	ldr	x0, [x28]
   2d9a8:	mov	x1, x0
   2d9ac:	str	x0, [sp, #112]
   2d9b0:	mov	x0, #0x752f                	// #29999
   2d9b4:	cmp	x1, x0
   2d9b8:	b.gt	2dab0 <mpfr_sin@@Base+0x1c0>
   2d9bc:	stp	x21, x22, [sp, #32]
   2d9c0:	ldr	x0, [sp, #112]
   2d9c4:	cmp	x0, #0x1
   2d9c8:	b.eq	2db60 <mpfr_sin@@Base+0x270>  // b.none
   2d9cc:	b.le	2db48 <mpfr_sin@@Base+0x258>
   2d9d0:	ldr	x0, [sp, #112]
   2d9d4:	sub	x0, x0, #0x1
   2d9d8:	clz	x0, x0
   2d9dc:	mov	w20, #0x40                  	// #64
   2d9e0:	sub	w20, w20, w0
   2d9e4:	sxtw	x20, w20
   2d9e8:	ldr	x0, [sp, #112]
   2d9ec:	add	x20, x20, x0
   2d9f0:	add	x20, x20, #0x7
   2d9f4:	tbz	x23, #63, 2da10 <mpfr_sin@@Base+0x120>
   2d9f8:	mov	x0, #0xfffffffffffffeff    	// #-257
   2d9fc:	movk	x0, #0x7fff, lsl #48
   2da00:	sub	x0, x0, x20
   2da04:	add	x20, x20, x19
   2da08:	cmp	x0, x19
   2da0c:	b.lt	2db68 <mpfr_sin@@Base+0x278>  // b.tstop
   2da10:	add	x0, sp, #0xb0
   2da14:	bl	bbd0 <mpfr_init@plt>
   2da18:	add	x0, sp, #0x90
   2da1c:	bl	bbd0 <mpfr_init@plt>
   2da20:	mov	x21, #0x40                  	// #64
   2da24:	add	x19, sp, #0xb0
   2da28:	add	x22, sp, #0x90
   2da2c:	mov	x26, #0xfffffffffffffeff    	// #-257
   2da30:	movk	x26, #0x7fff, lsl #48
   2da34:	b	2dcb8 <mpfr_sin@@Base+0x3c8>
   2da38:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2da3c:	add	x23, x23, x0
   2da40:	cmp	x23, #0x1
   2da44:	b.ls	2da60 <mpfr_sin@@Base+0x170>  // b.plast
   2da48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2da4c:	str	x0, [x28, #16]
   2da50:	ldr	w0, [x1, #8]
   2da54:	str	w0, [x28, #8]
   2da58:	mov	w20, #0x0                   	// #0
   2da5c:	b	2de98 <mpfr_sin@@Base+0x5a8>
   2da60:	add	x0, x0, #0x4
   2da64:	str	x0, [x28, #16]
   2da68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2da6c:	ldr	x1, [x0, #2576]
   2da70:	add	x0, x0, #0xa10
   2da74:	blr	x1
   2da78:	mrs	x1, tpidr_el0
   2da7c:	add	x0, x1, x0
   2da80:	ldr	w1, [x0]
   2da84:	orr	w1, w1, #0x4
   2da88:	str	w1, [x0]
   2da8c:	mov	w20, #0x0                   	// #0
   2da90:	b	2de98 <mpfr_sin@@Base+0x5a8>
   2da94:	ldr	w4, [sp, #120]
   2da98:	mov	w3, #0x0                   	// #0
   2da9c:	mov	x0, x28
   2daa0:	bl	c540 <mpfr_round_near_x@plt>
   2daa4:	mov	w20, w0
   2daa8:	cbz	w0, 2d944 <mpfr_sin@@Base+0x54>
   2daac:	b	2de98 <mpfr_sin@@Base+0x5a8>
   2dab0:	ldr	w3, [sp, #120]
   2dab4:	mov	x2, x25
   2dab8:	mov	x1, #0x0                   	// #0
   2dabc:	mov	x0, x28
   2dac0:	bl	c020 <mpfr_sincos_fast@plt>
   2dac4:	and	w20, w0, #0x3
   2dac8:	cmp	w20, #0x2
   2dacc:	b.ne	2de18 <mpfr_sin@@Base+0x528>  // b.any
   2dad0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2dad4:	ldr	x1, [x0, #2576]
   2dad8:	add	x0, x0, #0xa10
   2dadc:	blr	x1
   2dae0:	mrs	x1, tpidr_el0
   2dae4:	ldr	w2, [sp, #124]
   2dae8:	str	w2, [x1, x0]
   2daec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2daf0:	ldr	x2, [x0, #2512]
   2daf4:	add	x0, x0, #0x9d0
   2daf8:	blr	x2
   2dafc:	ldr	x2, [sp, #128]
   2db00:	str	x2, [x1, x0]
   2db04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2db08:	ldr	x3, [x0, #2544]
   2db0c:	add	x0, x0, #0x9f0
   2db10:	blr	x3
   2db14:	ldr	x3, [sp, #136]
   2db18:	str	x3, [x1, x0]
   2db1c:	ldr	x0, [x28, #16]
   2db20:	cmp	x3, x0
   2db24:	mov	w20, #0xffffffff            	// #-1
   2db28:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2db2c:	b.le	2de78 <mpfr_sin@@Base+0x588>
   2db30:	ldr	w2, [sp, #120]
   2db34:	mov	w1, w20
   2db38:	mov	x0, x28
   2db3c:	bl	cb30 <mpfr_check_range@plt>
   2db40:	mov	w20, w0
   2db44:	b	2de98 <mpfr_sin@@Base+0x5a8>
   2db48:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2db4c:	add	x2, x2, #0xfa8
   2db50:	mov	w1, #0x55                  	// #85
   2db54:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2db58:	add	x0, x0, #0x60
   2db5c:	bl	cb40 <mpfr_assert_fail@plt>
   2db60:	mov	x20, #0x0                   	// #0
   2db64:	b	2d9e8 <mpfr_sin@@Base+0xf8>
   2db68:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2db6c:	add	x2, x2, #0x68
   2db70:	mov	w1, #0x60                  	// #96
   2db74:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2db78:	add	x0, x0, #0x60
   2db7c:	bl	cb40 <mpfr_assert_fail@plt>
   2db80:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2db84:	add	x2, x2, #0xfc0
   2db88:	mov	w1, #0x74                  	// #116
   2db8c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2db90:	add	x0, x0, #0x60
   2db94:	bl	cb40 <mpfr_assert_fail@plt>
   2db98:	mov	w3, #0x1                   	// #1
   2db9c:	mov	x2, x22
   2dba0:	mov	x1, x19
   2dba4:	mov	x0, x19
   2dba8:	bl	c1a0 <mpfr_add@plt>
   2dbac:	b	2dd68 <mpfr_sin@@Base+0x478>
   2dbb0:	mov	x24, x25
   2dbb4:	str	wzr, [sp, #104]
   2dbb8:	ldr	w27, [x24, #8]
   2dbbc:	mov	x1, x20
   2dbc0:	mov	x0, x19
   2dbc4:	bl	bed0 <mpfr_set_prec@plt>
   2dbc8:	mov	w2, #0x4                   	// #4
   2dbcc:	mov	x1, x24
   2dbd0:	mov	x0, x19
   2dbd4:	bl	c430 <mpfr_cos@plt>
   2dbd8:	mov	w3, #0x2                   	// #2
   2dbdc:	mov	x2, x19
   2dbe0:	mov	x1, x19
   2dbe4:	mov	x0, x19
   2dbe8:	bl	bd50 <mpfr_mul@plt>
   2dbec:	mov	w3, #0x1                   	// #1
   2dbf0:	mov	x2, x19
   2dbf4:	mov	x1, #0x1                   	// #1
   2dbf8:	mov	x0, x19
   2dbfc:	bl	ca50 <mpfr_ui_sub@plt>
   2dc00:	mov	w2, #0x1                   	// #1
   2dc04:	mov	x1, x19
   2dc08:	mov	x0, x19
   2dc0c:	bl	c930 <mpfr_sqrt@plt>
   2dc10:	tbnz	w27, #31, 2ddac <mpfr_sin@@Base+0x4bc>
   2dc14:	ldr	x0, [sp, #192]
   2dc18:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2dc1c:	cmp	x0, x1
   2dc20:	b.eq	2ddbc <mpfr_sin@@Base+0x4cc>  // b.none
   2dc24:	add	x24, x20, x0, lsl #1
   2dc28:	sub	x24, x24, #0x3
   2dc2c:	ldr	x1, [sp, #104]
   2dc30:	and	x1, x1, #0x1
   2dc34:	sub	x24, x24, x1
   2dc38:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2dc3c:	cmp	x0, x1
   2dc40:	b.le	2dc7c <mpfr_sin@@Base+0x38c>
   2dc44:	ldr	w0, [sp, #120]
   2dc48:	cmp	w0, #0x0
   2dc4c:	ldr	x0, [sp, #112]
   2dc50:	cinc	x3, x0, eq  // eq = none
   2dc54:	ldr	x0, [sp, #176]
   2dc58:	add	x1, x0, #0x3e
   2dc5c:	subs	x0, x0, #0x1
   2dc60:	csel	x1, x1, x0, mi  // mi = first
   2dc64:	asr	x1, x1, #6
   2dc68:	mov	x2, x24
   2dc6c:	add	x1, x1, #0x1
   2dc70:	ldr	x0, [sp, #200]
   2dc74:	bl	c370 <mpfr_round_p@plt>
   2dc78:	cbnz	w0, 2dde8 <mpfr_sin@@Base+0x4f8>
   2dc7c:	ldr	x1, [x28]
   2dc80:	sub	x0, x1, x24
   2dc84:	add	x0, x20, x0
   2dc88:	cmp	x1, x24
   2dc8c:	csel	x20, x0, x20, gt
   2dc90:	lsl	x0, x20, #1
   2dc94:	ldr	x1, [sp, #192]
   2dc98:	cmp	x1, #0x1
   2dc9c:	csel	x20, x0, x20, eq  // eq = none
   2dca0:	sub	x0, x26, x20
   2dca4:	cmp	x0, x21
   2dca8:	b.lt	2ddd0 <mpfr_sin@@Base+0x4e0>  // b.tstop
   2dcac:	add	x20, x20, x21
   2dcb0:	add	x21, x20, x20, lsr #63
   2dcb4:	asr	x21, x21, #1
   2dcb8:	cmp	x23, #0x1
   2dcbc:	b.le	2dbb0 <mpfr_sin@@Base+0x2c0>
   2dcc0:	add	x1, x23, x20
   2dcc4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2dcc8:	cmp	x1, x0
   2dccc:	b.gt	2db80 <mpfr_sin@@Base+0x290>
   2dcd0:	sub	x1, x1, #0x1
   2dcd4:	mov	x0, x19
   2dcd8:	bl	bed0 <mpfr_set_prec@plt>
   2dcdc:	mov	x1, x20
   2dce0:	mov	x0, x22
   2dce4:	bl	bed0 <mpfr_set_prec@plt>
   2dce8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2dcec:	ldr	x1, [x0, #2624]
   2dcf0:	add	x0, x0, #0xa40
   2dcf4:	blr	x1
   2dcf8:	mov	w2, #0x0                   	// #0
   2dcfc:	mrs	x1, tpidr_el0
   2dd00:	add	x1, x1, x0
   2dd04:	mov	x0, x19
   2dd08:	bl	c380 <mpfr_cache@plt>
   2dd0c:	mov	w3, #0x0                   	// #0
   2dd10:	mov	x2, #0x1                   	// #1
   2dd14:	mov	x1, x19
   2dd18:	mov	x0, x19
   2dd1c:	bl	c2c0 <mpfr_mul_2ui@plt>
   2dd20:	mov	w3, #0x0                   	// #0
   2dd24:	mov	x2, x19
   2dd28:	mov	x1, x25
   2dd2c:	mov	x0, x22
   2dd30:	bl	cd10 <mpfr_remainder@plt>
   2dd34:	mov	w3, #0x0                   	// #0
   2dd38:	mov	x2, #0x1                   	// #1
   2dd3c:	mov	x1, x19
   2dd40:	mov	x0, x19
   2dd44:	bl	c8f0 <mpfr_div_2ui@plt>
   2dd48:	ldr	w0, [sp, #152]
   2dd4c:	cmp	w0, #0x0
   2dd50:	b.le	2db98 <mpfr_sin@@Base+0x2a8>
   2dd54:	mov	w3, #0x1                   	// #1
   2dd58:	mov	x2, x22
   2dd5c:	mov	x1, x19
   2dd60:	mov	x0, x19
   2dd64:	bl	bb70 <mpfr_sub@plt>
   2dd68:	ldr	x1, [sp, #160]
   2dd6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2dd70:	cmp	x1, x0
   2dd74:	b.eq	2dca0 <mpfr_sin@@Base+0x3b0>  // b.none
   2dd78:	mov	x0, #0x3                   	// #3
   2dd7c:	sub	x0, x0, x20
   2dd80:	cmp	x1, x0
   2dd84:	b.lt	2dca0 <mpfr_sin@@Base+0x3b0>  // b.tstop
   2dd88:	ldr	x1, [sp, #192]
   2dd8c:	cmp	x0, x1
   2dd90:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2dd94:	ccmp	x1, x0, #0x4, le
   2dd98:	b.eq	2dca0 <mpfr_sin@@Base+0x3b0>  // b.none
   2dd9c:	mov	w0, #0x1                   	// #1
   2dda0:	str	w0, [sp, #104]
   2dda4:	mov	x24, x22
   2dda8:	b	2dbb8 <mpfr_sin@@Base+0x2c8>
   2ddac:	ldr	w0, [sp, #184]
   2ddb0:	neg	w0, w0
   2ddb4:	str	w0, [sp, #184]
   2ddb8:	b	2dc14 <mpfr_sin@@Base+0x324>
   2ddbc:	ldr	x0, [x25]
   2ddc0:	cmp	x0, x20
   2ddc4:	csel	x20, x0, x20, ge  // ge = tcont
   2ddc8:	lsl	x20, x20, #1
   2ddcc:	b	2dca0 <mpfr_sin@@Base+0x3b0>
   2ddd0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2ddd4:	add	x2, x2, #0x18
   2ddd8:	mov	w1, #0xb9                  	// #185
   2dddc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2dde0:	add	x0, x0, #0x60
   2dde4:	bl	cb40 <mpfr_assert_fail@plt>
   2dde8:	add	x19, sp, #0xb0
   2ddec:	ldr	w3, [sp, #184]
   2ddf0:	ldr	w2, [sp, #120]
   2ddf4:	mov	x1, x19
   2ddf8:	mov	x0, x28
   2ddfc:	bl	c6a0 <mpfr_set4@plt>
   2de00:	mov	w20, w0
   2de04:	mov	x0, x19
   2de08:	bl	c070 <mpfr_clear@plt>
   2de0c:	add	x0, sp, #0x90
   2de10:	bl	c070 <mpfr_clear@plt>
   2de14:	ldp	x21, x22, [sp, #32]
   2de18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2de1c:	ldr	x1, [x0, #2576]
   2de20:	add	x0, x0, #0xa10
   2de24:	blr	x1
   2de28:	mrs	x1, tpidr_el0
   2de2c:	ldr	w2, [sp, #124]
   2de30:	str	w2, [x1, x0]
   2de34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2de38:	ldr	x2, [x0, #2512]
   2de3c:	add	x0, x0, #0x9d0
   2de40:	blr	x2
   2de44:	ldr	x2, [sp, #128]
   2de48:	str	x2, [x1, x0]
   2de4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2de50:	ldr	x3, [x0, #2544]
   2de54:	add	x0, x0, #0x9f0
   2de58:	blr	x3
   2de5c:	ldr	x3, [sp, #136]
   2de60:	str	x3, [x1, x0]
   2de64:	ldr	x0, [x28, #16]
   2de68:	cmp	x3, x0
   2de6c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2de70:	b.gt	2db30 <mpfr_sin@@Base+0x240>
   2de74:	cbz	w20, 2de98 <mpfr_sin@@Base+0x5a8>
   2de78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2de7c:	ldr	x1, [x0, #2576]
   2de80:	add	x0, x0, #0xa10
   2de84:	blr	x1
   2de88:	ldr	w1, [sp, #124]
   2de8c:	orr	w2, w1, #0x8
   2de90:	mrs	x1, tpidr_el0
   2de94:	str	w2, [x1, x0]
   2de98:	mov	w0, w20
   2de9c:	ldp	x19, x20, [sp, #16]
   2dea0:	ldp	x23, x24, [sp, #48]
   2dea4:	ldp	x25, x26, [sp, #64]
   2dea8:	ldp	x27, x28, [sp, #80]
   2deac:	ldp	x29, x30, [sp], #208
   2deb0:	ret

000000000002deb4 <mpfr_tan@@Base>:
   2deb4:	stp	x29, x30, [sp, #-320]!
   2deb8:	mov	x29, sp
   2debc:	stp	x19, x20, [sp, #16]
   2dec0:	stp	x21, x22, [sp, #32]
   2dec4:	stp	x23, x24, [sp, #48]
   2dec8:	mov	x19, x0
   2decc:	mov	x22, x1
   2ded0:	mov	w23, w2
   2ded4:	ldr	x2, [x1, #16]
   2ded8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2dedc:	cmp	x2, x0
   2dee0:	b.le	2e108 <mpfr_tan@@Base+0x254>
   2dee4:	neg	x2, x2, lsl #1
   2dee8:	cmp	x2, #0x0
   2deec:	b.le	2df04 <mpfr_tan@@Base+0x50>
   2def0:	add	x2, x2, #0x1
   2def4:	ldr	x0, [x19]
   2def8:	add	x0, x0, #0x1
   2defc:	cmp	x0, x2
   2df00:	b.cc	2e164 <mpfr_tan@@Base+0x2b0>  // b.lo, b.ul, b.last
   2df04:	stp	x25, x26, [sp, #64]
   2df08:	stp	x27, x28, [sp, #80]
   2df0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2df10:	ldr	x1, [x0, #2576]
   2df14:	add	x0, x0, #0xa10
   2df18:	blr	x1
   2df1c:	mrs	x1, tpidr_el0
   2df20:	ldr	w25, [x1, x0]
   2df24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2df28:	ldr	x2, [x0, #2512]
   2df2c:	add	x0, x0, #0x9d0
   2df30:	blr	x2
   2df34:	add	x2, x1, x0
   2df38:	ldr	x27, [x1, x0]
   2df3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2df40:	ldr	x3, [x0, #2544]
   2df44:	add	x0, x0, #0x9f0
   2df48:	blr	x3
   2df4c:	ldr	x28, [x1, x0]
   2df50:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2df54:	str	x3, [x2]
   2df58:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2df5c:	str	x2, [x1, x0]
   2df60:	ldr	x21, [x19]
   2df64:	cmp	x21, #0x1
   2df68:	b.eq	2e198 <mpfr_tan@@Base+0x2e4>  // b.none
   2df6c:	b.le	2e180 <mpfr_tan@@Base+0x2cc>
   2df70:	sub	x0, x21, #0x1
   2df74:	clz	x1, x0
   2df78:	mov	w0, #0x40                  	// #64
   2df7c:	sub	w0, w0, w1
   2df80:	sxtw	x0, w0
   2df84:	add	x0, x0, x21
   2df88:	add	x20, x0, #0xd
   2df8c:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   2df90:	cmp	x20, x1
   2df94:	b.ge	2e1a0 <mpfr_tan@@Base+0x2ec>  // b.tcont
   2df98:	add	x24, x0, #0x4b
   2df9c:	adds	x0, x0, #0xc
   2dfa0:	csel	x0, x24, x0, mi  // mi = first
   2dfa4:	asr	x24, x0, #6
   2dfa8:	add	x24, x24, #0x1
   2dfac:	lsl	x0, x24, #1
   2dfb0:	cmp	x0, #0x10
   2dfb4:	b.gt	2e1a4 <mpfr_tan@@Base+0x2f0>
   2dfb8:	str	xzr, [sp, #112]
   2dfbc:	add	x0, sp, #0x80
   2dfc0:	str	x0, [sp, #120]
   2dfc4:	str	x20, [sp, #288]
   2dfc8:	ldr	x1, [sp, #120]
   2dfcc:	str	x1, [sp, #312]
   2dfd0:	mov	w0, #0x1                   	// #1
   2dfd4:	str	w0, [sp, #296]
   2dfd8:	str	x20, [sp, #256]
   2dfdc:	add	x24, x1, x24, lsl #3
   2dfe0:	str	x24, [sp, #280]
   2dfe4:	str	w0, [sp, #264]
   2dfe8:	mov	x0, #0x40                  	// #64
   2dfec:	str	x0, [sp, #96]
   2dff0:	add	x24, sp, #0x100
   2dff4:	add	x26, sp, #0x120
   2dff8:	mov	w3, #0x0                   	// #0
   2dffc:	mov	x2, x22
   2e000:	mov	x1, x24
   2e004:	mov	x0, x26
   2e008:	bl	cc40 <mpfr_sin_cos@plt>
   2e00c:	mov	w3, #0x0                   	// #0
   2e010:	mov	x2, x24
   2e014:	mov	x1, x26
   2e018:	mov	x0, x24
   2e01c:	bl	c620 <mpfr_div@plt>
   2e020:	cmp	w23, #0x0
   2e024:	cinc	x3, x21, eq  // eq = none
   2e028:	ldr	x0, [sp, #256]
   2e02c:	add	x1, x0, #0x3e
   2e030:	subs	x0, x0, #0x1
   2e034:	csel	x1, x1, x0, mi  // mi = first
   2e038:	asr	x1, x1, #6
   2e03c:	sub	x2, x20, #0x2
   2e040:	add	x1, x1, #0x1
   2e044:	ldr	x0, [sp, #280]
   2e048:	bl	c370 <mpfr_round_p@plt>
   2e04c:	cbz	w0, 2e1b8 <mpfr_tan@@Base+0x304>
   2e050:	ldr	w3, [sp, #264]
   2e054:	mov	w2, w23
   2e058:	add	x1, sp, #0x100
   2e05c:	mov	x0, x19
   2e060:	bl	c6a0 <mpfr_set4@plt>
   2e064:	mov	w20, w0
   2e068:	ldr	x1, [sp, #112]
   2e06c:	cbz	x1, 2e078 <mpfr_tan@@Base+0x1c4>
   2e070:	ldr	x0, [sp, #120]
   2e074:	bl	cc20 <mpfr_free_func@plt>
   2e078:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e07c:	ldr	x1, [x0, #2576]
   2e080:	add	x0, x0, #0xa10
   2e084:	blr	x1
   2e088:	mrs	x1, tpidr_el0
   2e08c:	str	w25, [x1, x0]
   2e090:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e094:	ldr	x2, [x0, #2512]
   2e098:	add	x0, x0, #0x9d0
   2e09c:	blr	x2
   2e0a0:	str	x27, [x1, x0]
   2e0a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e0a8:	ldr	x2, [x0, #2544]
   2e0ac:	add	x0, x0, #0x9f0
   2e0b0:	blr	x2
   2e0b4:	str	x28, [x1, x0]
   2e0b8:	ldr	x0, [x19, #16]
   2e0bc:	cmp	x28, x0
   2e0c0:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   2e0c4:	b.gt	2e280 <mpfr_tan@@Base+0x3cc>
   2e0c8:	cbz	w20, 2e2a0 <mpfr_tan@@Base+0x3ec>
   2e0cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e0d0:	ldr	x1, [x0, #2576]
   2e0d4:	add	x0, x0, #0xa10
   2e0d8:	blr	x1
   2e0dc:	orr	w25, w25, #0x8
   2e0e0:	mrs	x1, tpidr_el0
   2e0e4:	str	w25, [x1, x0]
   2e0e8:	ldp	x25, x26, [sp, #64]
   2e0ec:	ldp	x27, x28, [sp, #80]
   2e0f0:	mov	w0, w20
   2e0f4:	ldp	x19, x20, [sp, #16]
   2e0f8:	ldp	x21, x22, [sp, #32]
   2e0fc:	ldp	x23, x24, [sp, #48]
   2e100:	ldp	x29, x30, [sp], #320
   2e104:	ret
   2e108:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2e10c:	add	x2, x2, x0
   2e110:	cmp	x2, #0x1
   2e114:	b.ls	2e130 <mpfr_tan@@Base+0x27c>  // b.plast
   2e118:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2e11c:	str	x0, [x19, #16]
   2e120:	ldr	w0, [x1, #8]
   2e124:	str	w0, [x19, #8]
   2e128:	mov	w20, #0x0                   	// #0
   2e12c:	b	2e0f0 <mpfr_tan@@Base+0x23c>
   2e130:	add	x0, x0, #0x4
   2e134:	str	x0, [x19, #16]
   2e138:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e13c:	ldr	x1, [x0, #2576]
   2e140:	add	x0, x0, #0xa10
   2e144:	blr	x1
   2e148:	mrs	x1, tpidr_el0
   2e14c:	add	x0, x1, x0
   2e150:	ldr	w1, [x0]
   2e154:	orr	w1, w1, #0x4
   2e158:	str	w1, [x0]
   2e15c:	mov	w20, #0x0                   	// #0
   2e160:	b	2e0f0 <mpfr_tan@@Base+0x23c>
   2e164:	mov	w4, w23
   2e168:	mov	w3, #0x1                   	// #1
   2e16c:	mov	x0, x19
   2e170:	bl	c540 <mpfr_round_near_x@plt>
   2e174:	mov	w20, w0
   2e178:	cbz	w0, 2df04 <mpfr_tan@@Base+0x50>
   2e17c:	b	2e0f0 <mpfr_tan@@Base+0x23c>
   2e180:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   2e184:	add	x2, x2, #0xfa8
   2e188:	mov	w1, #0x42                  	// #66
   2e18c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2e190:	add	x0, x0, #0xa8
   2e194:	bl	cb40 <mpfr_assert_fail@plt>
   2e198:	mov	x0, #0x0                   	// #0
   2e19c:	b	2df84 <mpfr_tan@@Base+0xd0>
   2e1a0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2e1a4:	lsl	x0, x24, #4
   2e1a8:	str	x0, [sp, #112]
   2e1ac:	bl	ccf0 <mpfr_allocate_func@plt>
   2e1b0:	str	x0, [sp, #120]
   2e1b4:	b	2dfc4 <mpfr_tan@@Base+0x110>
   2e1b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   2e1bc:	movk	x0, #0x7fff, lsl #48
   2e1c0:	sub	x0, x0, x20
   2e1c4:	ldr	x1, [sp, #96]
   2e1c8:	cmp	x0, x1
   2e1cc:	b.lt	2e250 <mpfr_tan@@Base+0x39c>  // b.tstop
   2e1d0:	ldr	x0, [sp, #96]
   2e1d4:	add	x20, x20, x0
   2e1d8:	add	x0, x20, x20, lsr #63
   2e1dc:	asr	x0, x0, #1
   2e1e0:	str	x0, [sp, #96]
   2e1e4:	ldr	x1, [sp, #112]
   2e1e8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2e1ec:	cmp	x20, x0
   2e1f0:	b.ge	2e268 <mpfr_tan@@Base+0x3b4>  // b.tcont
   2e1f4:	add	x0, x20, #0x3e
   2e1f8:	subs	x2, x20, #0x1
   2e1fc:	csel	x0, x0, x2, mi  // mi = first
   2e200:	asr	x0, x0, #6
   2e204:	add	x0, x0, #0x1
   2e208:	str	x0, [sp, #104]
   2e20c:	lsl	x0, x0, #4
   2e210:	str	x0, [sp, #112]
   2e214:	cbnz	x1, 2e26c <mpfr_tan@@Base+0x3b8>
   2e218:	bl	ccf0 <mpfr_allocate_func@plt>
   2e21c:	str	x0, [sp, #120]
   2e220:	str	x20, [sp, #288]
   2e224:	ldr	x0, [sp, #120]
   2e228:	str	x0, [sp, #312]
   2e22c:	mov	w1, #0x1                   	// #1
   2e230:	str	w1, [sp, #296]
   2e234:	str	x20, [sp, #256]
   2e238:	ldr	x1, [sp, #104]
   2e23c:	add	x0, x0, x1, lsl #3
   2e240:	str	x0, [sp, #280]
   2e244:	mov	w0, #0x1                   	// #1
   2e248:	str	w0, [sp, #264]
   2e24c:	b	2dff8 <mpfr_tan@@Base+0x144>
   2e250:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2e254:	add	x2, x2, #0x18
   2e258:	mov	w1, #0x50                  	// #80
   2e25c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2e260:	add	x0, x0, #0xa8
   2e264:	bl	cb40 <mpfr_assert_fail@plt>
   2e268:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2e26c:	mov	x2, x0
   2e270:	ldr	x0, [sp, #120]
   2e274:	bl	c1c0 <mpfr_reallocate_func@plt>
   2e278:	str	x0, [sp, #120]
   2e27c:	b	2e220 <mpfr_tan@@Base+0x36c>
   2e280:	mov	w2, w23
   2e284:	mov	w1, w20
   2e288:	mov	x0, x19
   2e28c:	bl	cb30 <mpfr_check_range@plt>
   2e290:	mov	w20, w0
   2e294:	ldp	x25, x26, [sp, #64]
   2e298:	ldp	x27, x28, [sp, #80]
   2e29c:	b	2e0f0 <mpfr_tan@@Base+0x23c>
   2e2a0:	ldp	x25, x26, [sp, #64]
   2e2a4:	ldp	x27, x28, [sp, #80]
   2e2a8:	b	2e0f0 <mpfr_tan@@Base+0x23c>

000000000002e2ac <mpfr_fma@@Base>:
   2e2ac:	stp	x29, x30, [sp, #-352]!
   2e2b0:	mov	x29, sp
   2e2b4:	stp	x19, x20, [sp, #16]
   2e2b8:	stp	x21, x22, [sp, #32]
   2e2bc:	stp	x23, x24, [sp, #48]
   2e2c0:	stp	x25, x26, [sp, #64]
   2e2c4:	stp	x27, x28, [sp, #80]
   2e2c8:	mov	x23, x0
   2e2cc:	mov	x21, x1
   2e2d0:	mov	x20, x2
   2e2d4:	mov	x22, x3
   2e2d8:	mov	w25, w4
   2e2dc:	ldr	x24, [x1, #16]
   2e2e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2e2e4:	cmp	x24, x0
   2e2e8:	b.le	2e498 <mpfr_fma@@Base+0x1ec>
   2e2ec:	ldr	x0, [x2, #16]
   2e2f0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2e2f4:	cmp	x0, x1
   2e2f8:	b.le	2e4e0 <mpfr_fma@@Base+0x234>
   2e2fc:	ldr	x2, [x3, #16]
   2e300:	cmp	x2, x1
   2e304:	b.le	2eb30 <mpfr_fma@@Base+0x884>
   2e308:	add	x24, x24, x0
   2e30c:	ldr	x19, [x21]
   2e310:	ldr	x1, [x20]
   2e314:	cmp	x19, x1
   2e318:	b.eq	2e6bc <mpfr_fma@@Base+0x410>  // b.none
   2e31c:	add	x19, x19, x1
   2e320:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2e324:	cmp	x19, x0
   2e328:	b.ge	2e8fc <mpfr_fma@@Base+0x650>  // b.tcont
   2e32c:	add	x5, x19, #0x3e
   2e330:	subs	x0, x19, #0x1
   2e334:	csel	x5, x5, x0, mi  // mi = first
   2e338:	asr	x5, x5, #6
   2e33c:	add	x5, x5, #0x1
   2e340:	cmp	x5, #0x10
   2e344:	b.gt	2e914 <mpfr_fma@@Base+0x668>
   2e348:	str	xzr, [x29, #176]
   2e34c:	add	x0, x29, #0xc0
   2e350:	str	x0, [x29, #184]
   2e354:	str	x19, [x29, #320]
   2e358:	ldr	x0, [x29, #184]
   2e35c:	str	x0, [x29, #344]
   2e360:	mov	w0, #0x1                   	// #1
   2e364:	str	w0, [x29, #328]
   2e368:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e36c:	ldr	x1, [x0, #2576]
   2e370:	add	x0, x0, #0xa10
   2e374:	blr	x1
   2e378:	mrs	x1, tpidr_el0
   2e37c:	ldr	w26, [x1, x0]
   2e380:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e384:	ldr	x2, [x0, #2512]
   2e388:	add	x0, x0, #0x9d0
   2e38c:	blr	x2
   2e390:	add	x2, x1, x0
   2e394:	ldr	x27, [x1, x0]
   2e398:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e39c:	ldr	x3, [x0, #2544]
   2e3a0:	add	x0, x0, #0x9f0
   2e3a4:	blr	x3
   2e3a8:	ldr	x28, [x1, x0]
   2e3ac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2e3b0:	str	x3, [x2]
   2e3b4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2e3b8:	str	x2, [x1, x0]
   2e3bc:	mov	w3, #0x0                   	// #0
   2e3c0:	mov	x2, x20
   2e3c4:	mov	x1, x21
   2e3c8:	add	x0, x29, #0x140
   2e3cc:	bl	bd50 <mpfr_mul@plt>
   2e3d0:	cbnz	w0, 2e928 <mpfr_fma@@Base+0x67c>
   2e3d4:	mov	w3, w25
   2e3d8:	mov	x2, x22
   2e3dc:	add	x1, x29, #0x140
   2e3e0:	mov	x0, x23
   2e3e4:	bl	c1a0 <mpfr_add@plt>
   2e3e8:	mov	w19, w0
   2e3ec:	ldr	x1, [x29, #176]
   2e3f0:	cbz	x1, 2e3fc <mpfr_fma@@Base+0x150>
   2e3f4:	ldr	x0, [x29, #184]
   2e3f8:	bl	cc20 <mpfr_free_func@plt>
   2e3fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e400:	ldr	x1, [x0, #2576]
   2e404:	add	x0, x0, #0xa10
   2e408:	blr	x1
   2e40c:	mrs	x1, tpidr_el0
   2e410:	ldr	w2, [x1, x0]
   2e414:	orr	w26, w26, w2
   2e418:	str	w26, [x1, x0]
   2e41c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e420:	ldr	x2, [x0, #2512]
   2e424:	add	x0, x0, #0x9d0
   2e428:	blr	x2
   2e42c:	str	x27, [x1, x0]
   2e430:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e434:	ldr	x2, [x0, #2544]
   2e438:	add	x0, x0, #0x9f0
   2e43c:	blr	x2
   2e440:	str	x28, [x1, x0]
   2e444:	ldr	x0, [x23, #16]
   2e448:	cmp	x28, x0
   2e44c:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   2e450:	b.gt	2eb18 <mpfr_fma@@Base+0x86c>
   2e454:	cbz	w19, 2e474 <mpfr_fma@@Base+0x1c8>
   2e458:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e45c:	ldr	x1, [x0, #2576]
   2e460:	add	x0, x0, #0xa10
   2e464:	blr	x1
   2e468:	orr	w26, w26, #0x8
   2e46c:	mrs	x1, tpidr_el0
   2e470:	str	w26, [x1, x0]
   2e474:	mov	w0, w19
   2e478:	mov	sp, x29
   2e47c:	ldp	x19, x20, [sp, #16]
   2e480:	ldp	x21, x22, [sp, #32]
   2e484:	ldp	x23, x24, [sp, #48]
   2e488:	ldp	x25, x26, [sp, #64]
   2e48c:	ldp	x27, x28, [sp, #80]
   2e490:	ldp	x29, x30, [sp], #352
   2e494:	ret
   2e498:	mov	x0, #0x2                   	// #2
   2e49c:	movk	x0, #0x8000, lsl #48
   2e4a0:	cmp	x24, x0
   2e4a4:	b.ne	2e4e0 <mpfr_fma@@Base+0x234>  // b.any
   2e4a8:	mov	x0, #0x2                   	// #2
   2e4ac:	movk	x0, #0x8000, lsl #48
   2e4b0:	str	x0, [x23, #16]
   2e4b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e4b8:	ldr	x1, [x0, #2576]
   2e4bc:	add	x0, x0, #0xa10
   2e4c0:	blr	x1
   2e4c4:	mrs	x1, tpidr_el0
   2e4c8:	add	x0, x1, x0
   2e4cc:	ldr	w1, [x0]
   2e4d0:	orr	w1, w1, #0x4
   2e4d4:	str	w1, [x0]
   2e4d8:	mov	w19, #0x0                   	// #0
   2e4dc:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e4e0:	ldr	x0, [x20, #16]
   2e4e4:	mov	x1, #0x2                   	// #2
   2e4e8:	movk	x1, #0x8000, lsl #48
   2e4ec:	cmp	x0, x1
   2e4f0:	b.eq	2e4a8 <mpfr_fma@@Base+0x1fc>  // b.none
   2e4f4:	ldr	x1, [x22, #16]
   2e4f8:	mov	x2, #0x2                   	// #2
   2e4fc:	movk	x2, #0x8000, lsl #48
   2e500:	cmp	x1, x2
   2e504:	b.eq	2e4a8 <mpfr_fma@@Base+0x1fc>  // b.none
   2e508:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2e50c:	cmp	x0, x2
   2e510:	ccmp	x24, x2, #0x4, ne  // ne = any
   2e514:	b.ne	2e5bc <mpfr_fma@@Base+0x310>  // b.any
   2e518:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2e51c:	cmp	x24, x2
   2e520:	ccmp	x0, x2, #0x4, ne  // ne = any
   2e524:	b.eq	2e56c <mpfr_fma@@Base+0x2c0>  // b.none
   2e528:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2e52c:	cmp	x1, x0
   2e530:	b.eq	2e554 <mpfr_fma@@Base+0x2a8>  // b.none
   2e534:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2e538:	str	x0, [x23, #16]
   2e53c:	ldr	w0, [x21, #8]
   2e540:	ldr	w1, [x20, #8]
   2e544:	mul	w0, w0, w1
   2e548:	str	w0, [x23, #8]
   2e54c:	mov	w19, #0x0                   	// #0
   2e550:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e554:	ldr	w0, [x21, #8]
   2e558:	ldr	w1, [x20, #8]
   2e55c:	mul	w0, w0, w1
   2e560:	ldr	w1, [x22, #8]
   2e564:	cmp	w0, w1
   2e568:	b.eq	2e5a4 <mpfr_fma@@Base+0x2f8>  // b.none
   2e56c:	mov	x0, #0x2                   	// #2
   2e570:	movk	x0, #0x8000, lsl #48
   2e574:	str	x0, [x23, #16]
   2e578:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e57c:	ldr	x1, [x0, #2576]
   2e580:	add	x0, x0, #0xa10
   2e584:	blr	x1
   2e588:	mrs	x1, tpidr_el0
   2e58c:	add	x0, x1, x0
   2e590:	ldr	w1, [x0]
   2e594:	orr	w1, w1, #0x4
   2e598:	str	w1, [x0]
   2e59c:	mov	w19, #0x0                   	// #0
   2e5a0:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e5a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2e5a8:	str	x0, [x23, #16]
   2e5ac:	ldr	w0, [x22, #8]
   2e5b0:	str	w0, [x23, #8]
   2e5b4:	mov	w19, #0x0                   	// #0
   2e5b8:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e5bc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2e5c0:	cmp	x1, x2
   2e5c4:	b.eq	2e610 <mpfr_fma@@Base+0x364>  // b.none
   2e5c8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2e5cc:	cmp	x0, x2
   2e5d0:	ccmp	x24, x2, #0x4, ne  // ne = any
   2e5d4:	b.ne	2e6a0 <mpfr_fma@@Base+0x3f4>  // b.any
   2e5d8:	cmp	x1, x2
   2e5dc:	b.ne	2e684 <mpfr_fma@@Base+0x3d8>  // b.any
   2e5e0:	ldr	w0, [x21, #8]
   2e5e4:	ldr	w1, [x20, #8]
   2e5e8:	mul	w0, w0, w1
   2e5ec:	cmp	w25, #0x3
   2e5f0:	b.eq	2e64c <mpfr_fma@@Base+0x3a0>  // b.none
   2e5f4:	mov	w1, #0x1                   	// #1
   2e5f8:	tbnz	w0, #31, 2e624 <mpfr_fma@@Base+0x378>
   2e5fc:	str	w1, [x23, #8]
   2e600:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2e604:	str	x0, [x23, #16]
   2e608:	mov	w19, #0x0                   	// #0
   2e60c:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e610:	str	x2, [x23, #16]
   2e614:	ldr	w0, [x22, #8]
   2e618:	str	w0, [x23, #8]
   2e61c:	mov	w19, #0x0                   	// #0
   2e620:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e624:	ldr	w1, [x22, #8]
   2e628:	tbz	w1, #31, 2e638 <mpfr_fma@@Base+0x38c>
   2e62c:	cmp	w25, #0x3
   2e630:	b.eq	2e66c <mpfr_fma@@Base+0x3c0>  // b.none
   2e634:	tbz	w0, #31, 2e67c <mpfr_fma@@Base+0x3d0>
   2e638:	ldr	w0, [x22, #8]
   2e63c:	mov	w1, #0xffffffff            	// #-1
   2e640:	cmp	w0, w1
   2e644:	cneg	w1, w1, gt
   2e648:	b	2e5fc <mpfr_fma@@Base+0x350>
   2e64c:	mov	w1, #0xffffffff            	// #-1
   2e650:	cmp	w0, #0x0
   2e654:	b.le	2e5fc <mpfr_fma@@Base+0x350>
   2e658:	ldr	w0, [x22, #8]
   2e65c:	mov	w1, #0x1                   	// #1
   2e660:	cmp	w0, w1
   2e664:	cneg	w1, w1, lt  // lt = tstop
   2e668:	b	2e5fc <mpfr_fma@@Base+0x350>
   2e66c:	mov	w1, #0xffffffff            	// #-1
   2e670:	cmp	w0, #0x0
   2e674:	b.le	2e5fc <mpfr_fma@@Base+0x350>
   2e678:	b	2e658 <mpfr_fma@@Base+0x3ac>
   2e67c:	mov	w1, #0x1                   	// #1
   2e680:	b	2e5fc <mpfr_fma@@Base+0x350>
   2e684:	ldr	w3, [x22, #8]
   2e688:	mov	w2, w25
   2e68c:	mov	x1, x22
   2e690:	mov	x0, x23
   2e694:	bl	c6a0 <mpfr_set4@plt>
   2e698:	mov	w19, w0
   2e69c:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e6a0:	mov	w3, w25
   2e6a4:	mov	x2, x20
   2e6a8:	mov	x1, x21
   2e6ac:	mov	x0, x23
   2e6b0:	bl	bd50 <mpfr_mul@plt>
   2e6b4:	mov	w19, w0
   2e6b8:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e6bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e6c0:	ldr	x2, [x0, #2544]
   2e6c4:	add	x0, x0, #0x9f0
   2e6c8:	blr	x2
   2e6cc:	mrs	x2, tpidr_el0
   2e6d0:	ldr	x0, [x2, x0]
   2e6d4:	cmp	x0, x24
   2e6d8:	b.lt	2e31c <mpfr_fma@@Base+0x70>  // b.tstop
   2e6dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e6e0:	ldr	x2, [x0, #2512]
   2e6e4:	add	x0, x0, #0x9d0
   2e6e8:	blr	x2
   2e6ec:	mrs	x2, tpidr_el0
   2e6f0:	ldr	x0, [x2, x0]
   2e6f4:	cmp	x0, x24
   2e6f8:	b.ge	2e31c <mpfr_fma@@Base+0x70>  // b.tcont
   2e6fc:	cmp	x19, #0x3f
   2e700:	b.gt	2e710 <mpfr_fma@@Base+0x464>
   2e704:	ldr	x0, [x3]
   2e708:	cmp	x0, x19
   2e70c:	b.eq	2e7b8 <mpfr_fma@@Base+0x50c>  // b.none
   2e710:	add	x26, x19, #0x3e
   2e714:	subs	x0, x19, #0x1
   2e718:	csel	x26, x26, x0, mi  // mi = first
   2e71c:	asr	x26, x26, #6
   2e720:	add	x26, x26, #0x1
   2e724:	cmp	x26, #0x50
   2e728:	b.gt	2e31c <mpfr_fma@@Base+0x70>
   2e72c:	lsl	x28, x26, #1
   2e730:	str	xzr, [x29, #128]
   2e734:	lsl	x19, x26, #4
   2e738:	cmp	x19, #0x4, lsl #12
   2e73c:	b.hi	2e8c8 <mpfr_fma@@Base+0x61c>  // b.pmore
   2e740:	sub	sp, sp, x19
   2e744:	mov	x27, sp
   2e748:	lsl	x0, x26, #7
   2e74c:	str	x0, [x29, #320]
   2e750:	str	x27, [x29, #344]
   2e754:	mov	w0, #0x1                   	// #1
   2e758:	str	w0, [x29, #328]
   2e75c:	mov	x3, x26
   2e760:	ldr	x2, [x20, #24]
   2e764:	ldr	x1, [x21, #24]
   2e768:	mov	x0, x27
   2e76c:	bl	c470 <__gmpn_mul_n@plt>
   2e770:	add	x19, x27, x19
   2e774:	ldur	x0, [x19, #-8]
   2e778:	tbz	x0, #63, 2e8dc <mpfr_fma@@Base+0x630>
   2e77c:	str	x24, [x29, #336]
   2e780:	ldr	w0, [x21, #8]
   2e784:	ldr	w1, [x20, #8]
   2e788:	mul	w0, w0, w1
   2e78c:	str	w0, [x29, #328]
   2e790:	mov	w3, w25
   2e794:	mov	x2, x22
   2e798:	add	x1, x29, #0x140
   2e79c:	mov	x0, x23
   2e7a0:	bl	c1a0 <mpfr_add@plt>
   2e7a4:	mov	w19, w0
   2e7a8:	ldr	x0, [x29, #128]
   2e7ac:	cbz	x0, 2e474 <mpfr_fma@@Base+0x1c8>
   2e7b0:	bl	c410 <mpfr_tmp_free@plt>
   2e7b4:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e7b8:	ldr	x0, [x23]
   2e7bc:	cmp	x0, x19
   2e7c0:	b.ne	2e710 <mpfr_fma@@Base+0x464>  // b.any
   2e7c4:	ldr	x0, [x21, #24]
   2e7c8:	ldr	x0, [x0]
   2e7cc:	ldr	x1, [x20, #24]
   2e7d0:	ldr	x1, [x1]
   2e7d4:	umulh	x2, x0, x1
   2e7d8:	str	x2, [x29, #104]
   2e7dc:	mul	x0, x0, x1
   2e7e0:	str	x0, [x29, #96]
   2e7e4:	lsl	x19, x19, #1
   2e7e8:	str	x19, [x29, #128]
   2e7ec:	str	x19, [x29, #320]
   2e7f0:	add	x1, x29, #0x60
   2e7f4:	str	x1, [x29, #344]
   2e7f8:	add	x1, x29, #0x70
   2e7fc:	str	x1, [x29, #152]
   2e800:	ldr	w1, [x21, #8]
   2e804:	ldr	w2, [x20, #8]
   2e808:	mul	w1, w1, w2
   2e80c:	str	w1, [x29, #328]
   2e810:	ldr	w1, [x3, #8]
   2e814:	str	w1, [x29, #136]
   2e818:	ldr	x1, [x3, #16]
   2e81c:	str	x1, [x29, #144]
   2e820:	cmp	x19, #0x40
   2e824:	b.gt	2e88c <mpfr_fma@@Base+0x5e0>
   2e828:	ldr	x0, [x29, #104]
   2e82c:	tbnz	x0, #63, 2e880 <mpfr_fma@@Base+0x5d4>
   2e830:	lsl	x0, x0, #1
   2e834:	str	x0, [x29, #96]
   2e838:	sub	x24, x24, #0x1
   2e83c:	str	x24, [x29, #336]
   2e840:	ldr	x0, [x22, #24]
   2e844:	ldr	x0, [x0]
   2e848:	str	x0, [x29, #112]
   2e84c:	add	x19, x29, #0x140
   2e850:	mov	w3, w25
   2e854:	add	x2, x29, #0x80
   2e858:	mov	x1, x19
   2e85c:	mov	x0, x19
   2e860:	bl	c1a0 <mpfr_add@plt>
   2e864:	mov	w3, w0
   2e868:	mov	w2, w25
   2e86c:	mov	x1, x19
   2e870:	mov	x0, x23
   2e874:	bl	cae0 <mpfr_set_1_2@plt>
   2e878:	mov	w19, w0
   2e87c:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2e880:	str	x0, [x29, #96]
   2e884:	str	x24, [x29, #336]
   2e888:	b	2e840 <mpfr_fma@@Base+0x594>
   2e88c:	ldr	x1, [x3, #24]
   2e890:	ldr	x1, [x1]
   2e894:	str	x1, [x29, #120]
   2e898:	str	xzr, [x29, #112]
   2e89c:	ldr	x1, [x29, #104]
   2e8a0:	tbnz	x1, #63, 2e8c0 <mpfr_fma@@Base+0x614>
   2e8a4:	extr	x1, x1, x0, #63
   2e8a8:	str	x1, [x29, #104]
   2e8ac:	lsl	x0, x0, #1
   2e8b0:	str	x0, [x29, #96]
   2e8b4:	sub	x24, x24, #0x1
   2e8b8:	str	x24, [x29, #336]
   2e8bc:	b	2e84c <mpfr_fma@@Base+0x5a0>
   2e8c0:	str	x24, [x29, #336]
   2e8c4:	b	2e84c <mpfr_fma@@Base+0x5a0>
   2e8c8:	mov	x1, x19
   2e8cc:	add	x0, x29, #0x80
   2e8d0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2e8d4:	mov	x27, x0
   2e8d8:	b	2e748 <mpfr_fma@@Base+0x49c>
   2e8dc:	mov	w3, #0x1                   	// #1
   2e8e0:	mov	x2, x28
   2e8e4:	mov	x1, x27
   2e8e8:	mov	x0, x27
   2e8ec:	bl	bcc0 <__gmpn_lshift@plt>
   2e8f0:	sub	x24, x24, #0x1
   2e8f4:	str	x24, [x29, #336]
   2e8f8:	b	2e780 <mpfr_fma@@Base+0x4d4>
   2e8fc:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2e900:	add	x2, x2, #0xb0
   2e904:	mov	w1, #0xd5                  	// #213
   2e908:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2e90c:	add	x0, x0, #0xf8
   2e910:	bl	cb40 <mpfr_assert_fail@plt>
   2e914:	lsl	x0, x5, #3
   2e918:	str	x0, [x29, #176]
   2e91c:	bl	ccf0 <mpfr_allocate_func@plt>
   2e920:	str	x0, [x29, #184]
   2e924:	b	2e354 <mpfr_fma@@Base+0xa8>
   2e928:	ldr	x1, [x29, #336]
   2e92c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2e930:	cmp	x1, x0
   2e934:	b.eq	2e988 <mpfr_fma@@Base+0x6dc>  // b.none
   2e938:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e93c:	ldr	x1, [x0, #2512]
   2e940:	add	x0, x0, #0x9d0
   2e944:	blr	x1
   2e948:	mrs	x1, tpidr_el0
   2e94c:	ldr	x1, [x1, x0]
   2e950:	ldr	x2, [x22, #16]
   2e954:	sub	x2, x2, x1
   2e958:	ldr	x0, [x23]
   2e95c:	add	x0, x0, #0x1
   2e960:	ldr	x3, [x22]
   2e964:	cmp	x0, x3
   2e968:	csel	x0, x0, x3, ge  // ge = tcont
   2e96c:	cmp	x2, x0
   2e970:	b.ge	2ead8 <mpfr_fma@@Base+0x82c>  // b.tcont
   2e974:	ldr	x1, [x29, #176]
   2e978:	cbz	x1, 2e9cc <mpfr_fma@@Base+0x720>
   2e97c:	ldr	x0, [x29, #184]
   2e980:	bl	cc20 <mpfr_free_func@plt>
   2e984:	b	2e9cc <mpfr_fma@@Base+0x720>
   2e988:	ldr	w19, [x29, #328]
   2e98c:	ldr	x1, [x29, #176]
   2e990:	cbz	x1, 2e99c <mpfr_fma@@Base+0x6f0>
   2e994:	ldr	x0, [x29, #184]
   2e998:	bl	cc20 <mpfr_free_func@plt>
   2e99c:	ldr	w0, [x22, #8]
   2e9a0:	cmp	w0, w19
   2e9a4:	b.eq	2ea80 <mpfr_fma@@Base+0x7d4>  // b.none
   2e9a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2e9ac:	ldr	x1, [x0, #2544]
   2e9b0:	add	x0, x0, #0x9f0
   2e9b4:	blr	x1
   2e9b8:	mrs	x1, tpidr_el0
   2e9bc:	ldr	x0, [x1, x0]
   2e9c0:	add	x0, x0, #0x2
   2e9c4:	cmp	x0, x24
   2e9c8:	b.lt	2ea80 <mpfr_fma@@Base+0x7d4>  // b.tstop
   2e9cc:	str	xzr, [x29, #112]
   2e9d0:	ldr	x0, [x21]
   2e9d4:	add	x19, x0, #0x3e
   2e9d8:	subs	x0, x0, #0x1
   2e9dc:	csel	x19, x19, x0, mi  // mi = first
   2e9e0:	ldr	x1, [x20]
   2e9e4:	add	x0, x1, #0x3e
   2e9e8:	subs	x1, x1, #0x1
   2e9ec:	csel	x0, x0, x1, mi  // mi = first
   2e9f0:	asr	x0, x0, #6
   2e9f4:	add	x19, x0, x19, asr #6
   2e9f8:	add	x19, x19, #0x2
   2e9fc:	lsl	x1, x19, #3
   2ea00:	cmp	x1, #0x4, lsl #12
   2ea04:	b.hi	2eb00 <mpfr_fma@@Base+0x854>  // b.pmore
   2ea08:	add	x1, x1, #0xf
   2ea0c:	and	x1, x1, #0xfffffffffffffff0
   2ea10:	sub	sp, sp, x1
   2ea14:	mov	x0, sp
   2ea18:	lsl	x19, x19, #6
   2ea1c:	str	x19, [x29, #128]
   2ea20:	str	x0, [x29, #152]
   2ea24:	mov	w0, #0x1                   	// #1
   2ea28:	str	w0, [x29, #136]
   2ea2c:	add	x19, x29, #0x80
   2ea30:	mov	x2, x20
   2ea34:	mov	x1, x21
   2ea38:	mov	x0, x19
   2ea3c:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   2ea40:	bl	c270 <mpfr_clear_flags@plt>
   2ea44:	mov	w3, w25
   2ea48:	mov	x2, x22
   2ea4c:	mov	x1, x19
   2ea50:	mov	x0, x23
   2ea54:	bl	c1a0 <mpfr_add@plt>
   2ea58:	mov	w19, w0
   2ea5c:	mov	x0, #0x4                   	// #4
   2ea60:	movk	x0, #0x8000, lsl #48
   2ea64:	ldr	x1, [x29, #144]
   2ea68:	cmp	x1, x0
   2ea6c:	b.eq	2eb0c <mpfr_fma@@Base+0x860>  // b.none
   2ea70:	ldr	x0, [x29, #112]
   2ea74:	cbz	x0, 2e3fc <mpfr_fma@@Base+0x150>
   2ea78:	bl	c410 <mpfr_tmp_free@plt>
   2ea7c:	b	2e3fc <mpfr_fma@@Base+0x150>
   2ea80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ea84:	ldr	x1, [x0, #2576]
   2ea88:	add	x0, x0, #0xa10
   2ea8c:	blr	x1
   2ea90:	mrs	x1, tpidr_el0
   2ea94:	str	w26, [x1, x0]
   2ea98:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ea9c:	ldr	x2, [x0, #2512]
   2eaa0:	add	x0, x0, #0x9d0
   2eaa4:	blr	x2
   2eaa8:	str	x27, [x1, x0]
   2eaac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2eab0:	ldr	x2, [x0, #2544]
   2eab4:	add	x0, x0, #0x9f0
   2eab8:	blr	x2
   2eabc:	str	x28, [x1, x0]
   2eac0:	mov	w2, w19
   2eac4:	mov	w1, w25
   2eac8:	mov	x0, x23
   2eacc:	bl	bf40 <mpfr_overflow@plt>
   2ead0:	mov	w19, w0
   2ead4:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2ead8:	mov	x0, #0x1                   	// #1
   2eadc:	str	x0, [x29, #320]
   2eae0:	add	x0, x29, #0x140
   2eae4:	bl	c2b0 <mpfr_setmin@plt>
   2eae8:	ldr	w0, [x21, #8]
   2eaec:	ldr	w1, [x20, #8]
   2eaf0:	mul	w0, w0, w1
   2eaf4:	str	w0, [x29, #328]
   2eaf8:	bl	c270 <mpfr_clear_flags@plt>
   2eafc:	b	2e3d4 <mpfr_fma@@Base+0x128>
   2eb00:	add	x0, x29, #0x70
   2eb04:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2eb08:	b	2ea18 <mpfr_fma@@Base+0x76c>
   2eb0c:	add	x0, x29, #0xa0
   2eb10:	bl	c170 <mpfr_mpz_clear@plt>
   2eb14:	b	2ea70 <mpfr_fma@@Base+0x7c4>
   2eb18:	mov	w2, w25
   2eb1c:	mov	w1, w19
   2eb20:	mov	x0, x23
   2eb24:	bl	cb30 <mpfr_check_range@plt>
   2eb28:	mov	w19, w0
   2eb2c:	b	2e474 <mpfr_fma@@Base+0x1c8>
   2eb30:	ldr	x0, [x20, #16]
   2eb34:	b	2e4f4 <mpfr_fma@@Base+0x248>

000000000002eb38 <mpfr_fms@@Base>:
   2eb38:	stp	x29, x30, [sp, #-48]!
   2eb3c:	mov	x29, sp
   2eb40:	ldr	x5, [x3]
   2eb44:	str	x5, [sp, #16]
   2eb48:	ldr	w5, [x3, #8]
   2eb4c:	neg	w5, w5
   2eb50:	str	w5, [sp, #24]
   2eb54:	ldr	x5, [x3, #16]
   2eb58:	str	x5, [sp, #32]
   2eb5c:	ldr	x3, [x3, #24]
   2eb60:	str	x3, [sp, #40]
   2eb64:	add	x3, sp, #0x10
   2eb68:	bl	c250 <mpfr_fma@plt>
   2eb6c:	ldp	x29, x30, [sp], #48
   2eb70:	ret

000000000002eb74 <mpfr_hypot@@Base>:
   2eb74:	stp	x29, x30, [sp, #-256]!
   2eb78:	mov	x29, sp
   2eb7c:	stp	x19, x20, [sp, #16]
   2eb80:	stp	x21, x22, [sp, #32]
   2eb84:	mov	x22, x0
   2eb88:	mov	x20, x1
   2eb8c:	mov	x19, x2
   2eb90:	mov	w21, w3
   2eb94:	ldr	x0, [x1, #16]
   2eb98:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2eb9c:	cmp	x0, x1
   2eba0:	b.le	2ec7c <mpfr_hypot@@Base+0x108>
   2eba4:	ldr	x2, [x2, #16]
   2eba8:	cmp	x2, x1
   2ebac:	b.le	2ec88 <mpfr_hypot@@Base+0x114>
   2ebb0:	stp	x23, x24, [sp, #48]
   2ebb4:	stp	x25, x26, [sp, #64]
   2ebb8:	mov	x1, x19
   2ebbc:	mov	x0, x20
   2ebc0:	bl	c9b0 <mpfr_cmpabs@plt>
   2ebc4:	cmp	w0, #0x0
   2ebc8:	csel	x1, x20, x19, ge  // ge = tcont
   2ebcc:	csel	x19, x19, x20, ge  // ge = tcont
   2ebd0:	mov	x20, x1
   2ebd4:	ldr	x25, [x1, #16]
   2ebd8:	ldr	x0, [x19, #16]
   2ebdc:	sub	x2, x25, x0
   2ebe0:	ldr	x1, [x1]
   2ebe4:	ldr	x24, [x22]
   2ebe8:	cmp	w21, #0x0
   2ebec:	cset	w3, eq  // eq = none
   2ebf0:	cmp	x1, x24
   2ebf4:	csel	x0, x1, x24, ge  // ge = tcont
   2ebf8:	and	x4, x3, #0xff
   2ebfc:	add	x0, x0, x4
   2ec00:	lsl	x0, x0, #1
   2ec04:	cmp	w21, #0x4
   2ec08:	b.eq	2f1c0 <mpfr_hypot@@Base+0x64c>  // b.none
   2ec0c:	cmp	x0, x2
   2ec10:	b.cs	2ef7c <mpfr_hypot@@Base+0x408>  // b.hs, b.nlast
   2ec14:	cmp	w21, #0x2
   2ec18:	b.eq	2ed38 <mpfr_hypot@@Base+0x1c4>  // b.none
   2ec1c:	cmp	x1, x24
   2ec20:	b.gt	2edc4 <mpfr_hypot@@Base+0x250>
   2ec24:	mov	w3, #0x1                   	// #1
   2ec28:	mov	w2, w21
   2ec2c:	mov	x1, x20
   2ec30:	mov	x0, x22
   2ec34:	bl	c6a0 <mpfr_set4@plt>
   2ec38:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ec3c:	ldr	x1, [x0, #2576]
   2ec40:	add	x0, x0, #0xa10
   2ec44:	blr	x1
   2ec48:	mrs	x1, tpidr_el0
   2ec4c:	add	x0, x1, x0
   2ec50:	ldr	w1, [x0]
   2ec54:	orr	w1, w1, #0x8
   2ec58:	str	w1, [x0]
   2ec5c:	mov	w19, #0xffffffff            	// #-1
   2ec60:	ldp	x23, x24, [sp, #48]
   2ec64:	ldp	x25, x26, [sp, #64]
   2ec68:	mov	w0, w19
   2ec6c:	ldp	x19, x20, [sp, #16]
   2ec70:	ldp	x21, x22, [sp, #32]
   2ec74:	ldp	x29, x30, [sp], #256
   2ec78:	ret
   2ec7c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ec80:	cmp	x0, x1
   2ec84:	b.eq	2ecd4 <mpfr_hypot@@Base+0x160>  // b.none
   2ec88:	ldr	x1, [x19, #16]
   2ec8c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2ec90:	cmp	x1, x2
   2ec94:	b.eq	2ecd4 <mpfr_hypot@@Base+0x160>  // b.none
   2ec98:	mov	x2, #0x2                   	// #2
   2ec9c:	movk	x2, #0x8000, lsl #48
   2eca0:	cmp	x1, x2
   2eca4:	ccmp	x0, x2, #0x4, ne  // ne = any
   2eca8:	b.eq	2ecec <mpfr_hypot@@Base+0x178>  // b.none
   2ecac:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2ecb0:	cmp	x0, x1
   2ecb4:	b.eq	2ed1c <mpfr_hypot@@Base+0x1a8>  // b.none
   2ecb8:	mov	w3, #0x1                   	// #1
   2ecbc:	mov	w2, w21
   2ecc0:	mov	x1, x20
   2ecc4:	mov	x0, x22
   2ecc8:	bl	c6a0 <mpfr_set4@plt>
   2eccc:	mov	w19, w0
   2ecd0:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2ecd4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ecd8:	str	x0, [x22, #16]
   2ecdc:	mov	w0, #0x1                   	// #1
   2ece0:	str	w0, [x22, #8]
   2ece4:	mov	w19, #0x0                   	// #0
   2ece8:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2ecec:	str	x2, [x22, #16]
   2ecf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ecf4:	ldr	x1, [x0, #2576]
   2ecf8:	add	x0, x0, #0xa10
   2ecfc:	blr	x1
   2ed00:	mrs	x1, tpidr_el0
   2ed04:	add	x0, x1, x0
   2ed08:	ldr	w1, [x0]
   2ed0c:	orr	w1, w1, #0x4
   2ed10:	str	w1, [x0]
   2ed14:	mov	w19, #0x0                   	// #0
   2ed18:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2ed1c:	mov	w3, #0x1                   	// #1
   2ed20:	mov	w2, w21
   2ed24:	mov	x1, x19
   2ed28:	mov	x0, x22
   2ed2c:	bl	c6a0 <mpfr_set4@plt>
   2ed30:	mov	w19, w0
   2ed34:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2ed38:	mov	w3, #0x1                   	// #1
   2ed3c:	mov	w2, #0x2                   	// #2
   2ed40:	mov	x1, x20
   2ed44:	mov	x0, x22
   2ed48:	bl	c6a0 <mpfr_set4@plt>
   2ed4c:	cbz	w0, 2ed84 <mpfr_hypot@@Base+0x210>
   2ed50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ed54:	ldr	x1, [x0, #2576]
   2ed58:	add	x0, x0, #0xa10
   2ed5c:	blr	x1
   2ed60:	mrs	x1, tpidr_el0
   2ed64:	add	x0, x1, x0
   2ed68:	ldr	w1, [x0]
   2ed6c:	orr	w1, w1, #0x8
   2ed70:	str	w1, [x0]
   2ed74:	mov	w19, #0x1                   	// #1
   2ed78:	ldp	x23, x24, [sp, #48]
   2ed7c:	ldp	x25, x26, [sp, #64]
   2ed80:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2ed84:	mov	x0, x22
   2ed88:	bl	c670 <mpfr_nexttoinf@plt>
   2ed8c:	ldr	x1, [x22, #16]
   2ed90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ed94:	cmp	x1, x0
   2ed98:	b.ne	2ed50 <mpfr_hypot@@Base+0x1dc>  // b.any
   2ed9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2eda0:	ldr	x1, [x0, #2576]
   2eda4:	add	x0, x0, #0xa10
   2eda8:	blr	x1
   2edac:	mrs	x1, tpidr_el0
   2edb0:	add	x0, x1, x0
   2edb4:	ldr	w1, [x0]
   2edb8:	orr	w1, w1, #0x2
   2edbc:	str	w1, [x0]
   2edc0:	b	2ed50 <mpfr_hypot@@Base+0x1dc>
   2edc4:	str	x25, [x22, #16]
   2edc8:	mov	w0, #0x1                   	// #1
   2edcc:	str	w0, [x22, #8]
   2edd0:	ldr	x23, [x22, #24]
   2edd4:	add	x0, x1, #0x3e
   2edd8:	subs	x1, x1, #0x1
   2eddc:	csel	x1, x0, x1, mi  // mi = first
   2ede0:	asr	x0, x1, #6
   2ede4:	add	x5, x24, #0x3e
   2ede8:	subs	x1, x24, #0x1
   2edec:	csel	x5, x5, x1, mi  // mi = first
   2edf0:	asr	x5, x5, #6
   2edf4:	add	x2, x5, #0x1
   2edf8:	neg	w24, w24
   2edfc:	sub	x9, x0, x5
   2ee00:	ldr	x10, [x20, #24]
   2ee04:	add	x1, x10, x9, lsl #3
   2ee08:	ands	w24, w24, #0x3f
   2ee0c:	b.eq	2eed8 <mpfr_hypot@@Base+0x364>  // b.none
   2ee10:	sub	w6, w24, #0x1
   2ee14:	mov	x7, #0x1                   	// #1
   2ee18:	lsl	x8, x7, x6
   2ee1c:	ldr	x7, [x10, x9, lsl #3]
   2ee20:	sub	x4, x8, #0x1
   2ee24:	and	x4, x4, x7
   2ee28:	ands	x7, x7, x8
   2ee2c:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   2ee30:	b.eq	2ee58 <mpfr_hypot@@Base+0x2e4>  // b.none
   2ee34:	subs	x0, x0, x5
   2ee38:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   2ee3c:	b.ne	2ee58 <mpfr_hypot@@Base+0x2e4>  // b.any
   2ee40:	mvn	x3, x0
   2ee44:	add	x3, x1, x3, lsl #3
   2ee48:	ldr	x4, [x3, x0, lsl #3]
   2ee4c:	subs	x0, x0, #0x1
   2ee50:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   2ee54:	b.eq	2ee48 <mpfr_hypot@@Base+0x2d4>  // b.none
   2ee58:	mov	x20, #0x2                   	// #2
   2ee5c:	lsl	x20, x20, x6
   2ee60:	cmp	w21, #0x5
   2ee64:	b.eq	2f448 <mpfr_hypot@@Base+0x8d4>  // b.none
   2ee68:	cbnz	w21, 2f154 <mpfr_hypot@@Base+0x5e0>
   2ee6c:	cbnz	x7, 2f168 <mpfr_hypot@@Base+0x5f4>
   2ee70:	orr	x7, x7, x4
   2ee74:	cmp	x7, #0x0
   2ee78:	csetm	w19, ne  // ne = any
   2ee7c:	cmp	x23, x1
   2ee80:	b.eq	2ee90 <mpfr_hypot@@Base+0x31c>  // b.none
   2ee84:	lsl	x2, x2, #3
   2ee88:	mov	x0, x23
   2ee8c:	bl	ba10 <memcpy@plt>
   2ee90:	neg	x6, x20
   2ee94:	ldr	x0, [x23]
   2ee98:	and	x0, x0, x6
   2ee9c:	str	x0, [x23]
   2eea0:	cmp	w19, #0x0
   2eea4:	csinv	w19, w19, wzr, ne  // ne = any
   2eea8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2eeac:	ldr	x1, [x0, #2576]
   2eeb0:	add	x0, x0, #0xa10
   2eeb4:	blr	x1
   2eeb8:	mrs	x1, tpidr_el0
   2eebc:	add	x0, x1, x0
   2eec0:	ldr	w1, [x0]
   2eec4:	orr	w1, w1, #0x8
   2eec8:	str	w1, [x0]
   2eecc:	ldp	x23, x24, [sp, #48]
   2eed0:	ldp	x25, x26, [sp, #64]
   2eed4:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2eed8:	ldur	x6, [x1, #-8]
   2eedc:	and	x7, x6, #0x8000000000000000
   2eee0:	and	x4, x6, #0x7fffffffffffffff
   2eee4:	cmp	x6, #0x0
   2eee8:	ccmp	w3, #0x0, #0x0, lt  // lt = tstop
   2eeec:	b.eq	2f148 <mpfr_hypot@@Base+0x5d4>  // b.none
   2eef0:	sub	x0, x0, x5
   2eef4:	sub	x3, x0, #0x1
   2eef8:	cmp	x4, #0x0
   2eefc:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   2ef00:	b.eq	2ef24 <mpfr_hypot@@Base+0x3b0>  // b.none
   2ef04:	mvn	x0, x0
   2ef08:	add	x0, x1, x0, lsl #3
   2ef0c:	ldr	x4, [x0, x3, lsl #3]
   2ef10:	subs	x3, x3, #0x1
   2ef14:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   2ef18:	b.eq	2ef0c <mpfr_hypot@@Base+0x398>  // b.none
   2ef1c:	mov	x20, #0x1                   	// #1
   2ef20:	b	2ee60 <mpfr_hypot@@Base+0x2ec>
   2ef24:	mov	x20, #0x1                   	// #1
   2ef28:	b	2ee60 <mpfr_hypot@@Base+0x2ec>
   2ef2c:	cmp	x23, x1
   2ef30:	b.eq	2f1a8 <mpfr_hypot@@Base+0x634>  // b.none
   2ef34:	cmp	x5, x0
   2ef38:	b.le	2f1a8 <mpfr_hypot@@Base+0x634>
   2ef3c:	ldr	x2, [x1, x4, lsl #3]
   2ef40:	str	x2, [x23, x4, lsl #3]
   2ef44:	cmp	x5, x4
   2ef48:	add	x4, x4, #0x1
   2ef4c:	b.gt	2ef3c <mpfr_hypot@@Base+0x3c8>
   2ef50:	b	2f1a8 <mpfr_hypot@@Base+0x634>
   2ef54:	mov	x0, #0x1                   	// #1
   2ef58:	cmp	x2, x0
   2ef5c:	b.le	2f0f0 <mpfr_hypot@@Base+0x57c>
   2ef60:	ldr	x3, [x1, x0, lsl #3]
   2ef64:	add	x3, x3, #0x1
   2ef68:	str	x3, [x23, x0, lsl #3]
   2ef6c:	add	x4, x0, #0x1
   2ef70:	cbnz	x3, 2ef2c <mpfr_hypot@@Base+0x3b8>
   2ef74:	mov	x0, x4
   2ef78:	b	2ef58 <mpfr_hypot@@Base+0x3e4>
   2ef7c:	stp	x27, x28, [sp, #80]
   2ef80:	b	2f1d0 <mpfr_hypot@@Base+0x65c>
   2ef84:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   2ef88:	add	x2, x2, #0x758
   2ef8c:	mov	w1, #0x8c                  	// #140
   2ef90:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2ef94:	add	x0, x0, #0x100
   2ef98:	bl	cb40 <mpfr_assert_fail@plt>
   2ef9c:	mov	x23, #0x0                   	// #0
   2efa0:	b	2f200 <mpfr_hypot@@Base+0x68c>
   2efa4:	ldr	x1, [sp, #240]
   2efa8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2efac:	cmp	x1, x0
   2efb0:	b.le	2f028 <mpfr_hypot@@Base+0x4b4>
   2efb4:	cmp	w21, #0x0
   2efb8:	cinc	x3, x24, eq  // eq = none
   2efbc:	ldr	x0, [sp, #224]
   2efc0:	add	x1, x0, #0x3e
   2efc4:	subs	x0, x0, #0x1
   2efc8:	csel	x1, x1, x0, mi  // mi = first
   2efcc:	asr	x1, x1, #6
   2efd0:	sub	x2, x23, x2
   2efd4:	add	x1, x1, #0x1
   2efd8:	ldr	x0, [sp, #248]
   2efdc:	bl	c370 <mpfr_round_p@plt>
   2efe0:	cbz	w0, 2f028 <mpfr_hypot@@Base+0x4b4>
   2efe4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2efe8:	ldr	x1, [x0, #2576]
   2efec:	add	x0, x0, #0xa10
   2eff0:	blr	x1
   2eff4:	mrs	x1, tpidr_el0
   2eff8:	add	x20, x1, x0
   2effc:	str	wzr, [x1, x0]
   2f000:	mov	w3, w21
   2f004:	mov	x2, x25
   2f008:	add	x1, sp, #0xe0
   2f00c:	mov	x0, x22
   2f010:	bl	c420 <mpfr_div_2si@plt>
   2f014:	mov	w19, w0
   2f018:	ldr	w20, [x20]
   2f01c:	cmp	w0, #0x0
   2f020:	cset	w23, ne  // ne = any
   2f024:	b	2f38c <mpfr_hypot@@Base+0x818>
   2f028:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f02c:	movk	x0, #0x7fff, lsl #48
   2f030:	sub	x0, x0, x23
   2f034:	ldr	x1, [sp, #152]
   2f038:	cmp	x0, x1
   2f03c:	b.lt	2f07c <mpfr_hypot@@Base+0x508>  // b.tstop
   2f040:	ldr	x0, [sp, #152]
   2f044:	add	x23, x23, x0
   2f048:	add	x0, x23, x23, lsr #63
   2f04c:	asr	x0, x0, #1
   2f050:	str	x0, [sp, #152]
   2f054:	mov	x1, x23
   2f058:	ldr	x0, [sp, #112]
   2f05c:	bl	bed0 <mpfr_set_prec@plt>
   2f060:	mov	x1, x23
   2f064:	mov	x0, x28
   2f068:	bl	bed0 <mpfr_set_prec@plt>
   2f06c:	mov	x1, x23
   2f070:	ldr	x0, [sp, #104]
   2f074:	bl	bed0 <mpfr_set_prec@plt>
   2f078:	b	2f2b4 <mpfr_hypot@@Base+0x740>
   2f07c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2f080:	add	x2, x2, #0x230
   2f084:	mov	w1, #0xbd                  	// #189
   2f088:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2f08c:	add	x0, x0, #0x100
   2f090:	bl	cb40 <mpfr_assert_fail@plt>
   2f094:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f098:	ldr	x1, [x0, #2576]
   2f09c:	add	x0, x0, #0xa10
   2f0a0:	blr	x1
   2f0a4:	ldr	w1, [sp, #136]
   2f0a8:	orr	w2, w1, #0x2
   2f0ac:	mrs	x1, tpidr_el0
   2f0b0:	str	w2, [x1, x0]
   2f0b4:	b	2f3f4 <mpfr_hypot@@Base+0x880>
   2f0b8:	mov	w2, w21
   2f0bc:	mov	w1, w19
   2f0c0:	mov	x0, x22
   2f0c4:	bl	cb30 <mpfr_check_range@plt>
   2f0c8:	mov	w19, w0
   2f0cc:	ldp	x23, x24, [sp, #48]
   2f0d0:	ldp	x25, x26, [sp, #64]
   2f0d4:	ldp	x27, x28, [sp, #80]
   2f0d8:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2f0dc:	mov	w19, #0x0                   	// #0
   2f0e0:	ldp	x23, x24, [sp, #48]
   2f0e4:	ldp	x25, x26, [sp, #64]
   2f0e8:	ldp	x27, x28, [sp, #80]
   2f0ec:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2f0f0:	add	x2, x23, x2, lsl #3
   2f0f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2f0f8:	stur	x0, [x2, #-8]
   2f0fc:	ldr	x1, [x22, #16]
   2f100:	add	x1, x1, #0x1
   2f104:	str	x1, [x22, #16]
   2f108:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f10c:	ldr	x2, [x0, #2544]
   2f110:	add	x0, x0, #0x9f0
   2f114:	blr	x2
   2f118:	mrs	x2, tpidr_el0
   2f11c:	ldr	x0, [x2, x0]
   2f120:	cmp	x1, x0
   2f124:	b.le	2f1a8 <mpfr_hypot@@Base+0x634>
   2f128:	mov	w2, #0x1                   	// #1
   2f12c:	mov	w1, w21
   2f130:	mov	x0, x22
   2f134:	bl	bf40 <mpfr_overflow@plt>
   2f138:	mov	w19, w0
   2f13c:	ldp	x23, x24, [sp, #48]
   2f140:	ldp	x25, x26, [sp, #64]
   2f144:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2f148:	mov	x20, #0x1                   	// #1
   2f14c:	cmp	w21, #0x5
   2f150:	b.eq	2f444 <mpfr_hypot@@Base+0x8d0>  // b.none
   2f154:	and	w0, w21, #0xfffffffd
   2f158:	cmp	w0, #0x1
   2f15c:	b.eq	2ee70 <mpfr_hypot@@Base+0x2fc>  // b.none
   2f160:	orr	x7, x7, x4
   2f164:	cbz	x7, 2f448 <mpfr_hypot@@Base+0x8d4>
   2f168:	ldr	x0, [x10, x9, lsl #3]
   2f16c:	add	x0, x20, x0
   2f170:	str	x0, [x23]
   2f174:	cmp	x20, x0
   2f178:	b.hi	2ef54 <mpfr_hypot@@Base+0x3e0>  // b.pmore
   2f17c:	cmp	x23, x1
   2f180:	b.eq	2f1a8 <mpfr_hypot@@Base+0x634>  // b.none
   2f184:	cmp	x2, #0x1
   2f188:	b.le	2f1a8 <mpfr_hypot@@Base+0x634>
   2f18c:	add	x5, x5, #0x1
   2f190:	mov	x0, #0x1                   	// #1
   2f194:	ldr	x2, [x1, x0, lsl #3]
   2f198:	str	x2, [x23, x0, lsl #3]
   2f19c:	add	x0, x0, #0x1
   2f1a0:	cmp	x5, x0
   2f1a4:	b.ne	2f194 <mpfr_hypot@@Base+0x620>  // b.any
   2f1a8:	neg	x6, x20
   2f1ac:	ldr	x0, [x23]
   2f1b0:	and	x0, x0, x6
   2f1b4:	str	x0, [x23]
   2f1b8:	mov	w19, #0x1                   	// #1
   2f1bc:	b	2eea8 <mpfr_hypot@@Base+0x334>
   2f1c0:	cmp	x0, x2
   2f1c4:	b.cc	2ed38 <mpfr_hypot@@Base+0x1c4>  // b.lo, b.ul, b.last
   2f1c8:	stp	x27, x28, [sp, #80]
   2f1cc:	mov	w21, #0x2                   	// #2
   2f1d0:	ldr	x0, [x19]
   2f1d4:	cmp	x0, x1
   2f1d8:	csel	x0, x0, x1, ge  // ge = tcont
   2f1dc:	str	x0, [sp, #144]
   2f1e0:	cmp	x24, #0x1
   2f1e4:	b.eq	2ef9c <mpfr_hypot@@Base+0x428>  // b.none
   2f1e8:	b.le	2ef84 <mpfr_hypot@@Base+0x410>
   2f1ec:	sub	x23, x24, #0x1
   2f1f0:	clz	x0, x23
   2f1f4:	mov	w23, #0x40                  	// #64
   2f1f8:	sub	w23, w23, w0
   2f1fc:	sxtw	x23, w23
   2f200:	add	x23, x23, x24
   2f204:	add	x23, x23, #0x4
   2f208:	mov	x1, x23
   2f20c:	add	x0, sp, #0xe0
   2f210:	bl	ca80 <mpfr_init2@plt>
   2f214:	mov	x1, x23
   2f218:	add	x0, sp, #0xc0
   2f21c:	bl	ca80 <mpfr_init2@plt>
   2f220:	mov	x1, x23
   2f224:	add	x0, sp, #0xa0
   2f228:	bl	ca80 <mpfr_init2@plt>
   2f22c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f230:	ldr	x1, [x0, #2576]
   2f234:	add	x0, x0, #0xa10
   2f238:	blr	x1
   2f23c:	mrs	x1, tpidr_el0
   2f240:	ldr	w0, [x1, x0]
   2f244:	str	w0, [sp, #136]
   2f248:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f24c:	ldr	x2, [x0, #2512]
   2f250:	add	x0, x0, #0x9d0
   2f254:	blr	x2
   2f258:	add	x2, x1, x0
   2f25c:	ldr	x0, [x1, x0]
   2f260:	str	x0, [sp, #120]
   2f264:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f268:	ldr	x3, [x0, #2544]
   2f26c:	add	x0, x0, #0x9f0
   2f270:	blr	x3
   2f274:	ldr	x3, [x1, x0]
   2f278:	str	x3, [sp, #128]
   2f27c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2f280:	str	x3, [x2]
   2f284:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2f288:	str	x2, [x1, x0]
   2f28c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   2f290:	sub	x25, x0, x25
   2f294:	mov	x0, #0x40                  	// #64
   2f298:	str	x0, [sp, #152]
   2f29c:	add	x28, sp, #0xc0
   2f2a0:	mov	w27, #0x1                   	// #1
   2f2a4:	add	x0, sp, #0xa0
   2f2a8:	str	x0, [sp, #104]
   2f2ac:	add	x0, sp, #0xe0
   2f2b0:	str	x0, [sp, #112]
   2f2b4:	mov	w3, w27
   2f2b8:	mov	x2, x25
   2f2bc:	mov	x1, x20
   2f2c0:	mov	x0, x28
   2f2c4:	bl	bb90 <mpfr_mul_2si@plt>
   2f2c8:	mov	w26, w0
   2f2cc:	mov	w3, w27
   2f2d0:	mov	x2, x25
   2f2d4:	mov	x1, x19
   2f2d8:	ldr	x0, [sp, #104]
   2f2dc:	bl	bb90 <mpfr_mul_2si@plt>
   2f2e0:	orr	w2, w26, w0
   2f2e4:	str	w2, [sp, #140]
   2f2e8:	mov	w2, w27
   2f2ec:	mov	x1, x28
   2f2f0:	mov	x0, x28
   2f2f4:	bl	c400 <mpfr_sqr@plt>
   2f2f8:	mov	w26, w0
   2f2fc:	mov	w4, w27
   2f300:	mov	x3, x28
   2f304:	ldr	x1, [sp, #104]
   2f308:	mov	x2, x1
   2f30c:	ldr	x0, [sp, #112]
   2f310:	bl	c250 <mpfr_fma@plt>
   2f314:	orr	w26, w26, w0
   2f318:	ldr	w2, [sp, #140]
   2f31c:	orr	w26, w26, w2
   2f320:	mov	w2, w27
   2f324:	ldr	x0, [sp, #112]
   2f328:	mov	x1, x0
   2f32c:	bl	c930 <mpfr_sqrt@plt>
   2f330:	orr	w26, w0, w26
   2f334:	ldr	x0, [sp, #144]
   2f338:	cmp	x23, x0
   2f33c:	mov	x2, #0x4                   	// #4
   2f340:	mov	x0, #0x2                   	// #2
   2f344:	csel	x2, x2, x0, lt  // lt = tstop
   2f348:	cbnz	w26, 2efa4 <mpfr_hypot@@Base+0x430>
   2f34c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f350:	ldr	x1, [x0, #2576]
   2f354:	add	x0, x0, #0xa10
   2f358:	blr	x1
   2f35c:	mrs	x1, tpidr_el0
   2f360:	add	x20, x1, x0
   2f364:	str	wzr, [x1, x0]
   2f368:	mov	w3, w21
   2f36c:	mov	x2, x25
   2f370:	add	x1, sp, #0xe0
   2f374:	mov	x0, x22
   2f378:	bl	c420 <mpfr_div_2si@plt>
   2f37c:	mov	w19, w0
   2f380:	ldr	w20, [x20]
   2f384:	cmp	w0, #0x0
   2f388:	cset	w23, ne  // ne = any
   2f38c:	add	x0, sp, #0xe0
   2f390:	bl	c070 <mpfr_clear@plt>
   2f394:	add	x0, sp, #0xa0
   2f398:	bl	c070 <mpfr_clear@plt>
   2f39c:	add	x0, sp, #0xc0
   2f3a0:	bl	c070 <mpfr_clear@plt>
   2f3a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f3a8:	ldr	x1, [x0, #2576]
   2f3ac:	add	x0, x0, #0xa10
   2f3b0:	blr	x1
   2f3b4:	mrs	x1, tpidr_el0
   2f3b8:	ldr	w2, [sp, #136]
   2f3bc:	str	w2, [x1, x0]
   2f3c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f3c4:	ldr	x2, [x0, #2512]
   2f3c8:	add	x0, x0, #0x9d0
   2f3cc:	blr	x2
   2f3d0:	ldr	x2, [sp, #120]
   2f3d4:	str	x2, [x1, x0]
   2f3d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f3dc:	ldr	x2, [x0, #2544]
   2f3e0:	add	x0, x0, #0x9f0
   2f3e4:	blr	x2
   2f3e8:	ldr	x2, [sp, #128]
   2f3ec:	str	x2, [x1, x0]
   2f3f0:	tbnz	w20, #1, 2f094 <mpfr_hypot@@Base+0x520>
   2f3f4:	ldr	x0, [x22, #16]
   2f3f8:	ldr	x1, [sp, #128]
   2f3fc:	cmp	x1, x0
   2f400:	ldr	x1, [sp, #120]
   2f404:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   2f408:	b.gt	2f0b8 <mpfr_hypot@@Base+0x544>
   2f40c:	cbz	w23, 2f0dc <mpfr_hypot@@Base+0x568>
   2f410:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f414:	ldr	x1, [x0, #2576]
   2f418:	add	x0, x0, #0xa10
   2f41c:	blr	x1
   2f420:	mrs	x1, tpidr_el0
   2f424:	add	x0, x1, x0
   2f428:	ldr	w1, [x0]
   2f42c:	orr	w1, w1, #0x8
   2f430:	str	w1, [x0]
   2f434:	ldp	x23, x24, [sp, #48]
   2f438:	ldp	x25, x26, [sp, #64]
   2f43c:	ldp	x27, x28, [sp, #80]
   2f440:	b	2ec68 <mpfr_hypot@@Base+0xf4>
   2f444:	mov	x20, #0x1                   	// #1
   2f448:	mov	w19, #0x0                   	// #0
   2f44c:	cmp	x23, x1
   2f450:	b.ne	2ee84 <mpfr_hypot@@Base+0x310>  // b.any
   2f454:	neg	x6, x20
   2f458:	ldr	x0, [x23]
   2f45c:	and	x0, x0, x6
   2f460:	str	x0, [x23]
   2f464:	mov	w19, #0xffffffff            	// #-1
   2f468:	b	2eea8 <mpfr_hypot@@Base+0x334>

000000000002f46c <mpfr_log1p@@Base>:
   2f46c:	stp	x29, x30, [sp, #-224]!
   2f470:	mov	x29, sp
   2f474:	stp	x19, x20, [sp, #16]
   2f478:	stp	x23, x24, [sp, #48]
   2f47c:	mov	x23, x0
   2f480:	mov	x20, x1
   2f484:	str	w2, [sp, #96]
   2f488:	ldr	x2, [x1, #16]
   2f48c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f490:	cmp	x2, x0
   2f494:	b.le	2f4e0 <mpfr_log1p@@Base+0x74>
   2f498:	tbz	x2, #63, 2f5b4 <mpfr_log1p@@Base+0x148>
   2f49c:	ldr	w0, [x1, #8]
   2f4a0:	cmp	w0, #0x0
   2f4a4:	b.le	2f5a0 <mpfr_log1p@@Base+0x134>
   2f4a8:	mvn	x2, x2
   2f4ac:	cmp	x2, #0x0
   2f4b0:	b.le	2f5b4 <mpfr_log1p@@Base+0x148>
   2f4b4:	ldr	x0, [x23]
   2f4b8:	add	x0, x0, #0x1
   2f4bc:	cmp	x2, x0
   2f4c0:	b.ls	2f5b4 <mpfr_log1p@@Base+0x148>  // b.plast
   2f4c4:	ldr	w4, [sp, #96]
   2f4c8:	mov	w3, #0x0                   	// #0
   2f4cc:	mov	x0, x23
   2f4d0:	bl	c540 <mpfr_round_near_x@plt>
   2f4d4:	mov	w19, w0
   2f4d8:	cbz	w0, 2f5b4 <mpfr_log1p@@Base+0x148>
   2f4dc:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f4e0:	mov	x0, #0x2                   	// #2
   2f4e4:	movk	x0, #0x8000, lsl #48
   2f4e8:	cmp	x2, x0
   2f4ec:	b.eq	2f520 <mpfr_log1p@@Base+0xb4>  // b.none
   2f4f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f4f4:	cmp	x2, x0
   2f4f8:	b.ne	2f588 <mpfr_log1p@@Base+0x11c>  // b.any
   2f4fc:	ldr	w0, [x1, #8]
   2f500:	cmp	w0, #0x0
   2f504:	b.le	2f550 <mpfr_log1p@@Base+0xe4>
   2f508:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f50c:	str	x0, [x23, #16]
   2f510:	mov	w0, #0x1                   	// #1
   2f514:	str	w0, [x23, #8]
   2f518:	mov	w19, #0x0                   	// #0
   2f51c:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f520:	str	x0, [x23, #16]
   2f524:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f528:	ldr	x1, [x0, #2576]
   2f52c:	add	x0, x0, #0xa10
   2f530:	blr	x1
   2f534:	mrs	x1, tpidr_el0
   2f538:	add	x0, x1, x0
   2f53c:	ldr	w1, [x0]
   2f540:	orr	w1, w1, #0x4
   2f544:	str	w1, [x0]
   2f548:	mov	w19, #0x0                   	// #0
   2f54c:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f550:	mov	x0, #0x2                   	// #2
   2f554:	movk	x0, #0x8000, lsl #48
   2f558:	str	x0, [x23, #16]
   2f55c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f560:	ldr	x1, [x0, #2576]
   2f564:	add	x0, x0, #0xa10
   2f568:	blr	x1
   2f56c:	mrs	x1, tpidr_el0
   2f570:	add	x0, x1, x0
   2f574:	ldr	w1, [x0]
   2f578:	orr	w1, w1, #0x4
   2f57c:	str	w1, [x0]
   2f580:	mov	w19, #0x0                   	// #0
   2f584:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f588:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2f58c:	str	x0, [x23, #16]
   2f590:	ldr	w0, [x1, #8]
   2f594:	str	w0, [x23, #8]
   2f598:	mov	w19, #0x0                   	// #0
   2f59c:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f5a0:	neg	x2, x2
   2f5a4:	ldr	x0, [x23]
   2f5a8:	add	x0, x0, #0x1
   2f5ac:	cmp	x2, x0
   2f5b0:	b.hi	2f70c <mpfr_log1p@@Base+0x2a0>  // b.pmore
   2f5b4:	mov	x2, #0x0                   	// #0
   2f5b8:	mov	x1, #0xffffffffffffffff    	// #-1
   2f5bc:	mov	x0, x20
   2f5c0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   2f5c4:	mov	w19, w0
   2f5c8:	cmp	w0, #0x0
   2f5cc:	b.le	2f728 <mpfr_log1p@@Base+0x2bc>
   2f5d0:	stp	x21, x22, [sp, #32]
   2f5d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f5d8:	ldr	x1, [x0, #2576]
   2f5dc:	add	x0, x0, #0xa10
   2f5e0:	blr	x1
   2f5e4:	mrs	x1, tpidr_el0
   2f5e8:	ldr	w0, [x1, x0]
   2f5ec:	str	w0, [sp, #100]
   2f5f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f5f4:	ldr	x2, [x0, #2512]
   2f5f8:	add	x0, x0, #0x9d0
   2f5fc:	blr	x2
   2f600:	add	x2, x1, x0
   2f604:	ldr	x0, [x1, x0]
   2f608:	str	x0, [sp, #104]
   2f60c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f610:	ldr	x3, [x0, #2544]
   2f614:	add	x0, x0, #0x9f0
   2f618:	blr	x3
   2f61c:	ldr	x3, [x1, x0]
   2f620:	str	x3, [sp, #112]
   2f624:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2f628:	str	x3, [x2]
   2f62c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2f630:	str	x2, [x1, x0]
   2f634:	ldr	x22, [x23]
   2f638:	cmp	x22, #0x1
   2f63c:	b.eq	2f7bc <mpfr_log1p@@Base+0x350>  // b.none
   2f640:	b.le	2f79c <mpfr_log1p@@Base+0x330>
   2f644:	stp	x25, x26, [sp, #64]
   2f648:	sub	x19, x22, #0x1
   2f64c:	clz	x0, x19
   2f650:	mov	w19, #0x40                  	// #64
   2f654:	sub	w19, w19, w0
   2f658:	sxtw	x19, w19
   2f65c:	add	x19, x19, x22
   2f660:	add	x19, x19, #0x6
   2f664:	ldr	x0, [x20, #16]
   2f668:	sub	x1, x19, x0
   2f66c:	cmp	x0, #0x0
   2f670:	csel	x19, x1, x19, lt  // lt = tstop
   2f674:	mov	x1, x19
   2f678:	add	x0, sp, #0x80
   2f67c:	bl	ca80 <mpfr_init2@plt>
   2f680:	mov	x0, #0x40                  	// #64
   2f684:	str	x0, [sp, #120]
   2f688:	add	x21, sp, #0x80
   2f68c:	add	x25, sp, #0xa0
   2f690:	add	x26, sp, #0xc0
   2f694:	mov	x0, x22
   2f698:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2f69c:	add	w0, w0, #0x1
   2f6a0:	sxtw	x0, w0
   2f6a4:	sdiv	x0, x22, x0
   2f6a8:	neg	x0, x0
   2f6ac:	ldr	x1, [x20, #16]
   2f6b0:	cmp	x1, x0
   2f6b4:	b.gt	2f968 <mpfr_log1p@@Base+0x4fc>
   2f6b8:	stp	x27, x28, [sp, #80]
   2f6bc:	ldr	x28, [sp, #128]
   2f6c0:	mov	x1, x28
   2f6c4:	mov	x0, x25
   2f6c8:	bl	ca80 <mpfr_init2@plt>
   2f6cc:	mov	x1, x28
   2f6d0:	mov	x0, x26
   2f6d4:	bl	ca80 <mpfr_init2@plt>
   2f6d8:	ldr	w3, [x20, #8]
   2f6dc:	mov	w2, #0x5                   	// #5
   2f6e0:	mov	x1, x20
   2f6e4:	mov	x0, x25
   2f6e8:	bl	c6a0 <mpfr_set4@plt>
   2f6ec:	ldr	w3, [sp, #168]
   2f6f0:	mov	w2, #0x5                   	// #5
   2f6f4:	mov	x1, x25
   2f6f8:	mov	x0, x21
   2f6fc:	bl	c6a0 <mpfr_set4@plt>
   2f700:	mov	x24, #0x2                   	// #2
   2f704:	mov	w27, #0x5                   	// #5
   2f708:	b	2f7e0 <mpfr_log1p@@Base+0x374>
   2f70c:	ldr	w4, [sp, #96]
   2f710:	mov	w3, #0x1                   	// #1
   2f714:	mov	x0, x23
   2f718:	bl	c540 <mpfr_round_near_x@plt>
   2f71c:	mov	w19, w0
   2f720:	cbz	w0, 2f5b4 <mpfr_log1p@@Base+0x148>
   2f724:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f728:	cbnz	w0, 2f764 <mpfr_log1p@@Base+0x2f8>
   2f72c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f730:	str	x0, [x23, #16]
   2f734:	mov	w0, #0xffffffff            	// #-1
   2f738:	str	w0, [x23, #8]
   2f73c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f740:	ldr	x1, [x0, #2576]
   2f744:	add	x0, x0, #0xa10
   2f748:	blr	x1
   2f74c:	mrs	x1, tpidr_el0
   2f750:	add	x0, x1, x0
   2f754:	ldr	w1, [x0]
   2f758:	orr	w1, w1, #0x20
   2f75c:	str	w1, [x0]
   2f760:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f764:	mov	x0, #0x2                   	// #2
   2f768:	movk	x0, #0x8000, lsl #48
   2f76c:	str	x0, [x23, #16]
   2f770:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f774:	ldr	x1, [x0, #2576]
   2f778:	add	x0, x0, #0xa10
   2f77c:	blr	x1
   2f780:	mrs	x1, tpidr_el0
   2f784:	add	x0, x1, x0
   2f788:	ldr	w1, [x0]
   2f78c:	orr	w1, w1, #0x4
   2f790:	str	w1, [x0]
   2f794:	mov	w19, #0x0                   	// #0
   2f798:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f79c:	stp	x25, x26, [sp, #64]
   2f7a0:	stp	x27, x28, [sp, #80]
   2f7a4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2f7a8:	add	x2, x2, #0x218
   2f7ac:	mov	w1, #0xb9                  	// #185
   2f7b0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2f7b4:	add	x0, x0, #0x108
   2f7b8:	bl	cb40 <mpfr_assert_fail@plt>
   2f7bc:	stp	x25, x26, [sp, #64]
   2f7c0:	mov	x19, #0x0                   	// #0
   2f7c4:	b	2f65c <mpfr_log1p@@Base+0x1f0>
   2f7c8:	mov	w3, w27
   2f7cc:	mov	x2, x26
   2f7d0:	mov	x1, x21
   2f7d4:	mov	x0, x21
   2f7d8:	bl	bb70 <mpfr_sub@plt>
   2f7dc:	add	x24, x24, #0x1
   2f7e0:	mov	w3, w27
   2f7e4:	mov	x2, x20
   2f7e8:	mov	x1, x25
   2f7ec:	mov	x0, x25
   2f7f0:	bl	bd50 <mpfr_mul@plt>
   2f7f4:	mov	w3, w27
   2f7f8:	mov	x2, x24
   2f7fc:	mov	x1, x25
   2f800:	mov	x0, x26
   2f804:	bl	cc60 <mpfr_div_ui@plt>
   2f808:	ldr	x0, [sp, #144]
   2f80c:	sub	x0, x0, x28
   2f810:	ldr	x1, [sp, #208]
   2f814:	cmp	x1, x0
   2f818:	b.le	2f838 <mpfr_log1p@@Base+0x3cc>
   2f81c:	tbz	w24, #0, 2f7c8 <mpfr_log1p@@Base+0x35c>
   2f820:	mov	w3, w27
   2f824:	mov	x2, x26
   2f828:	mov	x1, x21
   2f82c:	mov	x0, x21
   2f830:	bl	c1a0 <mpfr_add@plt>
   2f834:	b	2f7dc <mpfr_log1p@@Base+0x370>
   2f838:	add	x0, x24, #0x4
   2f83c:	lsl	x0, x0, #1
   2f840:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2f844:	sxtw	x24, w0
   2f848:	cmp	x28, w0, sxtw
   2f84c:	b.le	2f950 <mpfr_log1p@@Base+0x4e4>
   2f850:	mov	x0, x25
   2f854:	bl	c070 <mpfr_clear@plt>
   2f858:	mov	x0, x26
   2f85c:	bl	c070 <mpfr_clear@plt>
   2f860:	sub	x2, x19, x24
   2f864:	ldp	x27, x28, [sp, #80]
   2f868:	ldr	x1, [sp, #144]
   2f86c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f870:	cmp	x1, x0
   2f874:	b.le	2f9c0 <mpfr_log1p@@Base+0x554>
   2f878:	ldr	w0, [sp, #96]
   2f87c:	cmp	w0, #0x0
   2f880:	cinc	x3, x22, eq  // eq = none
   2f884:	ldr	x0, [sp, #128]
   2f888:	add	x1, x0, #0x3e
   2f88c:	subs	x0, x0, #0x1
   2f890:	csel	x1, x1, x0, mi  // mi = first
   2f894:	asr	x1, x1, #6
   2f898:	add	x1, x1, #0x1
   2f89c:	ldr	x0, [sp, #152]
   2f8a0:	bl	c370 <mpfr_round_p@plt>
   2f8a4:	cbz	w0, 2f9c0 <mpfr_log1p@@Base+0x554>
   2f8a8:	ldr	w3, [sp, #136]
   2f8ac:	ldr	w2, [sp, #96]
   2f8b0:	add	x1, sp, #0x80
   2f8b4:	mov	x0, x23
   2f8b8:	bl	c6a0 <mpfr_set4@plt>
   2f8bc:	mov	w19, w0
   2f8c0:	add	x0, sp, #0x80
   2f8c4:	bl	c070 <mpfr_clear@plt>
   2f8c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f8cc:	ldr	x1, [x0, #2576]
   2f8d0:	add	x0, x0, #0xa10
   2f8d4:	blr	x1
   2f8d8:	mrs	x1, tpidr_el0
   2f8dc:	ldr	w4, [sp, #100]
   2f8e0:	str	w4, [x1, x0]
   2f8e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f8e8:	ldr	x2, [x0, #2512]
   2f8ec:	add	x0, x0, #0x9d0
   2f8f0:	blr	x2
   2f8f4:	ldr	x2, [sp, #104]
   2f8f8:	str	x2, [x1, x0]
   2f8fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f900:	ldr	x3, [x0, #2544]
   2f904:	add	x0, x0, #0x9f0
   2f908:	blr	x3
   2f90c:	ldr	x3, [sp, #112]
   2f910:	str	x3, [x1, x0]
   2f914:	ldr	x0, [x23, #16]
   2f918:	cmp	x3, x0
   2f91c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   2f920:	b.gt	2fa18 <mpfr_log1p@@Base+0x5ac>
   2f924:	cbz	w19, 2fa38 <mpfr_log1p@@Base+0x5cc>
   2f928:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2f92c:	ldr	x1, [x0, #2576]
   2f930:	add	x0, x0, #0xa10
   2f934:	blr	x1
   2f938:	orr	w1, w4, #0x8
   2f93c:	mrs	x2, tpidr_el0
   2f940:	str	w1, [x2, x0]
   2f944:	ldp	x21, x22, [sp, #32]
   2f948:	ldp	x25, x26, [sp, #64]
   2f94c:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2f950:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2f954:	add	x2, x2, #0x110
   2f958:	mov	w1, #0x56                  	// #86
   2f95c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2f960:	add	x0, x0, #0x108
   2f964:	bl	cb40 <mpfr_assert_fail@plt>
   2f968:	mov	w3, #0x0                   	// #0
   2f96c:	mov	x2, #0x1                   	// #1
   2f970:	mov	x1, x20
   2f974:	mov	x0, x21
   2f978:	bl	c260 <mpfr_add_ui@plt>
   2f97c:	cbz	w0, 2f9a8 <mpfr_log1p@@Base+0x53c>
   2f980:	mov	w2, #0x0                   	// #0
   2f984:	mov	x1, x21
   2f988:	mov	x0, x21
   2f98c:	bl	c090 <mpfr_log@plt>
   2f990:	mov	x2, #0x2                   	// #2
   2f994:	ldr	x24, [sp, #144]
   2f998:	subs	x2, x2, x24
   2f99c:	csel	x2, x2, xzr, pl  // pl = nfrst
   2f9a0:	sub	x2, x19, x2
   2f9a4:	b	2f868 <mpfr_log1p@@Base+0x3fc>
   2f9a8:	ldr	w2, [sp, #96]
   2f9ac:	add	x1, sp, #0x80
   2f9b0:	mov	x0, x23
   2f9b4:	bl	c090 <mpfr_log@plt>
   2f9b8:	mov	w19, w0
   2f9bc:	b	2f8c0 <mpfr_log1p@@Base+0x454>
   2f9c0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f9c4:	movk	x0, #0x7fff, lsl #48
   2f9c8:	sub	x0, x0, x19
   2f9cc:	ldr	x1, [sp, #120]
   2f9d0:	cmp	x0, x1
   2f9d4:	b.lt	2f9fc <mpfr_log1p@@Base+0x590>  // b.tstop
   2f9d8:	ldr	x0, [sp, #120]
   2f9dc:	add	x19, x19, x0
   2f9e0:	add	x0, x19, x19, lsr #63
   2f9e4:	asr	x0, x0, #1
   2f9e8:	str	x0, [sp, #120]
   2f9ec:	mov	x1, x19
   2f9f0:	mov	x0, x21
   2f9f4:	bl	bed0 <mpfr_set_prec@plt>
   2f9f8:	b	2f694 <mpfr_log1p@@Base+0x228>
   2f9fc:	stp	x27, x28, [sp, #80]
   2fa00:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2fa04:	add	x2, x2, #0x230
   2fa08:	mov	w1, #0xe7                  	// #231
   2fa0c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2fa10:	add	x0, x0, #0x108
   2fa14:	bl	cb40 <mpfr_assert_fail@plt>
   2fa18:	ldr	w2, [sp, #96]
   2fa1c:	mov	w1, w19
   2fa20:	mov	x0, x23
   2fa24:	bl	cb30 <mpfr_check_range@plt>
   2fa28:	mov	w19, w0
   2fa2c:	ldp	x21, x22, [sp, #32]
   2fa30:	ldp	x25, x26, [sp, #64]
   2fa34:	b	2fa40 <mpfr_log1p@@Base+0x5d4>
   2fa38:	ldp	x21, x22, [sp, #32]
   2fa3c:	ldp	x25, x26, [sp, #64]
   2fa40:	mov	w0, w19
   2fa44:	ldp	x19, x20, [sp, #16]
   2fa48:	ldp	x23, x24, [sp, #48]
   2fa4c:	ldp	x29, x30, [sp], #224
   2fa50:	ret

000000000002fa54 <mpfr_expm1@@Base>:
   2fa54:	stp	x29, x30, [sp, #-160]!
   2fa58:	mov	x29, sp
   2fa5c:	stp	x19, x20, [sp, #16]
   2fa60:	stp	x21, x22, [sp, #32]
   2fa64:	mov	x21, x0
   2fa68:	mov	x22, x1
   2fa6c:	str	w2, [sp, #100]
   2fa70:	ldr	x19, [x1, #16]
   2fa74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2fa78:	cmp	x19, x0
   2fa7c:	b.le	2fc64 <mpfr_expm1@@Base+0x210>
   2fa80:	stp	x23, x24, [sp, #48]
   2fa84:	stp	x27, x28, [sp, #80]
   2fa88:	tbnz	x19, #63, 2fd08 <mpfr_expm1@@Base+0x2b4>
   2fa8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fa90:	ldr	x1, [x0, #2576]
   2fa94:	add	x0, x0, #0xa10
   2fa98:	blr	x1
   2fa9c:	mrs	x1, tpidr_el0
   2faa0:	ldr	w24, [x1, x0]
   2faa4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2faa8:	ldr	x2, [x0, #2512]
   2faac:	add	x0, x0, #0x9d0
   2fab0:	blr	x2
   2fab4:	add	x2, x1, x0
   2fab8:	ldr	x27, [x1, x0]
   2fabc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fac0:	ldr	x3, [x0, #2544]
   2fac4:	add	x0, x0, #0x9f0
   2fac8:	blr	x3
   2facc:	ldr	x28, [x1, x0]
   2fad0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2fad4:	str	x3, [x2]
   2fad8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2fadc:	str	x2, [x1, x0]
   2fae0:	ldr	w0, [x22, #8]
   2fae4:	cmp	w0, #0x0
   2fae8:	ccmp	x19, #0x5, #0x4, lt  // lt = tstop
   2faec:	b.gt	2fdf8 <mpfr_expm1@@Base+0x3a4>
   2faf0:	stp	x25, x26, [sp, #64]
   2faf4:	ldr	x23, [x21]
   2faf8:	mov	x20, #0x7                   	// #7
   2fafc:	cmp	x23, #0x1
   2fb00:	b.eq	2fb28 <mpfr_expm1@@Base+0xd4>  // b.none
   2fb04:	cmp	x23, #0x1
   2fb08:	b.le	2ff60 <mpfr_expm1@@Base+0x50c>
   2fb0c:	sub	x20, x23, #0x1
   2fb10:	clz	x0, x20
   2fb14:	mov	w20, #0x40                  	// #64
   2fb18:	sub	w20, w20, w0
   2fb1c:	add	x20, x23, w20, sxtw
   2fb20:	add	x20, x20, #0x6
   2fb24:	tbnz	x19, #63, 2fd90 <mpfr_expm1@@Base+0x33c>
   2fb28:	mov	x1, x20
   2fb2c:	add	x0, sp, #0x80
   2fb30:	bl	ca80 <mpfr_init2@plt>
   2fb34:	mov	x0, #0x40                  	// #64
   2fb38:	str	x0, [sp, #104]
   2fb3c:	mrs	x26, tpidr_el0
   2fb40:	add	x25, sp, #0x80
   2fb44:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fb48:	ldr	x1, [x0, #2576]
   2fb4c:	add	x0, x0, #0xa10
   2fb50:	blr	x1
   2fb54:	add	x19, x26, x0
   2fb58:	str	wzr, [x26, x0]
   2fb5c:	mov	w2, #0x0                   	// #0
   2fb60:	mov	x1, x22
   2fb64:	mov	x0, x25
   2fb68:	bl	c750 <mpfr_exp@plt>
   2fb6c:	ldr	w0, [x19]
   2fb70:	tbnz	w0, #1, 2ff78 <mpfr_expm1@@Base+0x524>
   2fb74:	tbnz	w0, #0, 2ff94 <mpfr_expm1@@Base+0x540>
   2fb78:	ldr	x19, [sp, #144]
   2fb7c:	mov	w3, #0x0                   	// #0
   2fb80:	mov	x2, #0x1                   	// #1
   2fb84:	mov	x1, x25
   2fb88:	mov	x0, x25
   2fb8c:	bl	c530 <mpfr_sub_ui@plt>
   2fb90:	ldr	x0, [sp, #144]
   2fb94:	subs	x19, x19, x0
   2fb98:	csel	x19, x19, xzr, pl  // pl = nfrst
   2fb9c:	add	x19, x19, #0x1
   2fba0:	sub	x2, x20, x19
   2fba4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2fba8:	cmp	x0, x1
   2fbac:	b.le	30060 <mpfr_expm1@@Base+0x60c>
   2fbb0:	ldr	w19, [sp, #100]
   2fbb4:	cmp	w19, #0x0
   2fbb8:	cinc	x3, x23, eq  // eq = none
   2fbbc:	ldr	x0, [sp, #128]
   2fbc0:	add	x1, x0, #0x3e
   2fbc4:	subs	x0, x0, #0x1
   2fbc8:	csel	x1, x1, x0, mi  // mi = first
   2fbcc:	asr	x1, x1, #6
   2fbd0:	add	x1, x1, #0x1
   2fbd4:	ldr	x0, [sp, #152]
   2fbd8:	bl	c370 <mpfr_round_p@plt>
   2fbdc:	cbz	w0, 30060 <mpfr_expm1@@Base+0x60c>
   2fbe0:	ldr	w3, [sp, #136]
   2fbe4:	mov	w2, w19
   2fbe8:	add	x1, sp, #0x80
   2fbec:	mov	x0, x21
   2fbf0:	bl	c6a0 <mpfr_set4@plt>
   2fbf4:	mov	w20, w0
   2fbf8:	add	x0, sp, #0x80
   2fbfc:	bl	c070 <mpfr_clear@plt>
   2fc00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fc04:	ldr	x1, [x0, #2576]
   2fc08:	add	x0, x0, #0xa10
   2fc0c:	blr	x1
   2fc10:	mrs	x1, tpidr_el0
   2fc14:	str	w24, [x1, x0]
   2fc18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fc1c:	ldr	x2, [x0, #2512]
   2fc20:	add	x0, x0, #0x9d0
   2fc24:	blr	x2
   2fc28:	str	x27, [x1, x0]
   2fc2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fc30:	ldr	x2, [x0, #2544]
   2fc34:	add	x0, x0, #0x9f0
   2fc38:	blr	x2
   2fc3c:	str	x28, [x1, x0]
   2fc40:	ldr	x0, [x21, #16]
   2fc44:	cmp	x0, x28
   2fc48:	ccmp	x0, x27, #0x1, le
   2fc4c:	b.lt	300b4 <mpfr_expm1@@Base+0x660>  // b.tstop
   2fc50:	cbnz	w20, 30014 <mpfr_expm1@@Base+0x5c0>
   2fc54:	ldp	x23, x24, [sp, #48]
   2fc58:	ldp	x25, x26, [sp, #64]
   2fc5c:	ldp	x27, x28, [sp, #80]
   2fc60:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fc64:	mov	x0, #0x2                   	// #2
   2fc68:	movk	x0, #0x8000, lsl #48
   2fc6c:	cmp	x19, x0
   2fc70:	b.eq	2fca4 <mpfr_expm1@@Base+0x250>  // b.none
   2fc74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2fc78:	cmp	x19, x0
   2fc7c:	b.ne	2fcf0 <mpfr_expm1@@Base+0x29c>  // b.any
   2fc80:	ldr	w0, [x1, #8]
   2fc84:	cmp	w0, #0x0
   2fc88:	b.le	2fcd4 <mpfr_expm1@@Base+0x280>
   2fc8c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2fc90:	str	x0, [x21, #16]
   2fc94:	mov	w0, #0x1                   	// #1
   2fc98:	str	w0, [x21, #8]
   2fc9c:	mov	w20, #0x0                   	// #0
   2fca0:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fca4:	str	x0, [x21, #16]
   2fca8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fcac:	ldr	x1, [x0, #2576]
   2fcb0:	add	x0, x0, #0xa10
   2fcb4:	blr	x1
   2fcb8:	mrs	x1, tpidr_el0
   2fcbc:	add	x0, x1, x0
   2fcc0:	ldr	w1, [x0]
   2fcc4:	orr	w1, w1, #0x4
   2fcc8:	str	w1, [x0]
   2fccc:	mov	w20, #0x0                   	// #0
   2fcd0:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fcd4:	ldr	w3, [sp, #100]
   2fcd8:	mov	x2, #0x0                   	// #0
   2fcdc:	mov	x1, #0xffffffffffffffff    	// #-1
   2fce0:	mov	x0, x21
   2fce4:	bl	ba80 <mpfr_set_si_2exp@plt>
   2fce8:	mov	w20, w0
   2fcec:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fcf0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2fcf4:	str	x0, [x21, #16]
   2fcf8:	ldr	w0, [x1, #8]
   2fcfc:	str	w0, [x21, #8]
   2fd00:	mov	w20, #0x0                   	// #0
   2fd04:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fd08:	ldr	w0, [x1, #8]
   2fd0c:	cmp	w0, #0x0
   2fd10:	b.le	2fdbc <mpfr_expm1@@Base+0x368>
   2fd14:	neg	x2, x19
   2fd18:	ldr	x0, [x21]
   2fd1c:	add	x0, x0, #0x1
   2fd20:	cmp	x2, x0
   2fd24:	b.hi	2fd98 <mpfr_expm1@@Base+0x344>  // b.pmore
   2fd28:	stp	x25, x26, [sp, #64]
   2fd2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fd30:	ldr	x1, [x0, #2576]
   2fd34:	add	x0, x0, #0xa10
   2fd38:	blr	x1
   2fd3c:	mrs	x1, tpidr_el0
   2fd40:	ldr	w24, [x1, x0]
   2fd44:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fd48:	ldr	x2, [x0, #2512]
   2fd4c:	add	x0, x0, #0x9d0
   2fd50:	blr	x2
   2fd54:	add	x2, x1, x0
   2fd58:	ldr	x27, [x1, x0]
   2fd5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fd60:	ldr	x3, [x0, #2544]
   2fd64:	add	x0, x0, #0x9f0
   2fd68:	blr	x3
   2fd6c:	ldr	x28, [x1, x0]
   2fd70:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2fd74:	str	x3, [x2]
   2fd78:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2fd7c:	str	x2, [x1, x0]
   2fd80:	ldr	x23, [x21]
   2fd84:	mov	x20, #0x7                   	// #7
   2fd88:	cmp	x23, #0x1
   2fd8c:	b.ne	2fb04 <mpfr_expm1@@Base+0xb0>  // b.any
   2fd90:	sub	x20, x20, x19
   2fd94:	b	2fb28 <mpfr_expm1@@Base+0xd4>
   2fd98:	ldr	w4, [sp, #100]
   2fd9c:	mov	w3, #0x1                   	// #1
   2fda0:	mov	x0, x21
   2fda4:	bl	c540 <mpfr_round_near_x@plt>
   2fda8:	mov	w20, w0
   2fdac:	cbz	w0, 2fd28 <mpfr_expm1@@Base+0x2d4>
   2fdb0:	ldp	x23, x24, [sp, #48]
   2fdb4:	ldp	x27, x28, [sp, #80]
   2fdb8:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fdbc:	mov	x2, #0x1                   	// #1
   2fdc0:	sub	x2, x2, x19
   2fdc4:	ldr	x0, [x21]
   2fdc8:	add	x0, x0, #0x1
   2fdcc:	cmp	x0, x2
   2fdd0:	b.cs	2fd28 <mpfr_expm1@@Base+0x2d4>  // b.hs, b.nlast
   2fdd4:	ldr	w4, [sp, #100]
   2fdd8:	mov	w3, #0x0                   	// #0
   2fddc:	mov	x0, x21
   2fde0:	bl	c540 <mpfr_round_near_x@plt>
   2fde4:	mov	w20, w0
   2fde8:	cbz	w0, 2fd28 <mpfr_expm1@@Base+0x2d4>
   2fdec:	ldp	x23, x24, [sp, #48]
   2fdf0:	ldp	x27, x28, [sp, #80]
   2fdf4:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2fdf8:	mov	x0, #0x40                  	// #64
   2fdfc:	str	x0, [sp, #128]
   2fe00:	add	x0, sp, #0x78
   2fe04:	str	x0, [sp, #152]
   2fe08:	mov	w0, #0x1                   	// #1
   2fe0c:	str	w0, [sp, #136]
   2fe10:	add	x20, sp, #0x80
   2fe14:	mov	w3, #0x2                   	// #2
   2fe18:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   2fe1c:	ldr	x2, [x2, #4048]
   2fe20:	mov	x1, x22
   2fe24:	mov	x0, x20
   2fe28:	bl	c620 <mpfr_div@plt>
   2fe2c:	mov	x2, #0x0                   	// #0
   2fe30:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   2fe34:	mov	x0, x20
   2fe38:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   2fe3c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2fe40:	cmp	w0, #0x0
   2fe44:	b.gt	2fe70 <mpfr_expm1@@Base+0x41c>
   2fe48:	ldr	x0, [x21]
   2fe4c:	add	x0, x0, #0x1
   2fe50:	cmp	x2, x0
   2fe54:	b.hi	2fe88 <mpfr_expm1@@Base+0x434>  // b.pmore
   2fe58:	stp	x25, x26, [sp, #64]
   2fe5c:	ldr	x23, [x21]
   2fe60:	cmp	x23, #0x1
   2fe64:	b.ne	2fb04 <mpfr_expm1@@Base+0xb0>  // b.any
   2fe68:	mov	x20, #0x7                   	// #7
   2fe6c:	b	2fb28 <mpfr_expm1@@Base+0xd4>
   2fe70:	mov	w1, #0x2                   	// #2
   2fe74:	add	x0, sp, #0x80
   2fe78:	bl	c190 <mpfr_get_si@plt>
   2fe7c:	tbz	x0, #63, 2fe58 <mpfr_expm1@@Base+0x404>
   2fe80:	neg	x2, x0
   2fe84:	b	2fe48 <mpfr_expm1@@Base+0x3f4>
   2fe88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fe8c:	ldr	x1, [x0, #2576]
   2fe90:	add	x0, x0, #0xa10
   2fe94:	blr	x1
   2fe98:	mrs	x1, tpidr_el0
   2fe9c:	str	wzr, [x1, x0]
   2fea0:	ldr	w4, [sp, #100]
   2fea4:	mov	w3, #0x0                   	// #0
   2fea8:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   2feac:	ldr	x1, [x1, #4000]
   2feb0:	mov	x0, x21
   2feb4:	bl	c540 <mpfr_round_near_x@plt>
   2feb8:	mov	w20, w0
   2febc:	cbz	w0, 2fe58 <mpfr_expm1@@Base+0x404>
   2fec0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fec4:	ldr	x1, [x0, #2576]
   2fec8:	add	x0, x0, #0xa10
   2fecc:	blr	x1
   2fed0:	mrs	x2, tpidr_el0
   2fed4:	ldr	w1, [x2, x0]
   2fed8:	orr	w1, w24, w1
   2fedc:	str	w1, [x2, x0]
   2fee0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fee4:	ldr	x3, [x0, #2512]
   2fee8:	add	x0, x0, #0x9d0
   2feec:	blr	x3
   2fef0:	str	x27, [x2, x0]
   2fef4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fef8:	ldr	x3, [x0, #2544]
   2fefc:	add	x0, x0, #0x9f0
   2ff00:	blr	x3
   2ff04:	str	x28, [x2, x0]
   2ff08:	ldr	x0, [x21, #16]
   2ff0c:	cmp	x27, x0
   2ff10:	ccmp	x28, x0, #0x1, le
   2ff14:	b.lt	2ff40 <mpfr_expm1@@Base+0x4ec>  // b.tstop
   2ff18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ff1c:	ldr	x2, [x0, #2576]
   2ff20:	add	x0, x0, #0xa10
   2ff24:	blr	x2
   2ff28:	orr	w1, w1, #0x8
   2ff2c:	mrs	x2, tpidr_el0
   2ff30:	str	w1, [x2, x0]
   2ff34:	ldp	x23, x24, [sp, #48]
   2ff38:	ldp	x27, x28, [sp, #80]
   2ff3c:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2ff40:	ldr	w2, [sp, #100]
   2ff44:	mov	w1, w20
   2ff48:	mov	x0, x21
   2ff4c:	bl	cb30 <mpfr_check_range@plt>
   2ff50:	mov	w20, w0
   2ff54:	ldp	x23, x24, [sp, #48]
   2ff58:	ldp	x27, x28, [sp, #80]
   2ff5c:	b	3003c <mpfr_expm1@@Base+0x5e8>
   2ff60:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   2ff64:	add	x2, x2, #0x218
   2ff68:	mov	w1, #0x72                  	// #114
   2ff6c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   2ff70:	add	x0, x0, #0x118
   2ff74:	bl	cb40 <mpfr_assert_fail@plt>
   2ff78:	mov	w2, #0x1                   	// #1
   2ff7c:	ldr	w1, [sp, #100]
   2ff80:	mov	x0, x21
   2ff84:	bl	bf40 <mpfr_overflow@plt>
   2ff88:	mov	w20, w0
   2ff8c:	orr	w24, w24, #0x2
   2ff90:	b	2fbf8 <mpfr_expm1@@Base+0x1a4>
   2ff94:	ldr	w19, [sp, #100]
   2ff98:	mov	w3, w19
   2ff9c:	mov	x2, #0x0                   	// #0
   2ffa0:	mov	x1, #0xffffffffffffffff    	// #-1
   2ffa4:	mov	x0, x21
   2ffa8:	bl	ba80 <mpfr_set_si_2exp@plt>
   2ffac:	sub	w0, w19, #0x1
   2ffb0:	mov	w20, #0xffffffff            	// #-1
   2ffb4:	cmp	w0, #0x1
   2ffb8:	b.ls	30050 <mpfr_expm1@@Base+0x5fc>  // b.plast
   2ffbc:	add	x0, sp, #0x80
   2ffc0:	bl	c070 <mpfr_clear@plt>
   2ffc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ffc8:	ldr	x1, [x0, #2576]
   2ffcc:	add	x0, x0, #0xa10
   2ffd0:	blr	x1
   2ffd4:	mrs	x1, tpidr_el0
   2ffd8:	str	w24, [x1, x0]
   2ffdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2ffe0:	ldr	x2, [x0, #2512]
   2ffe4:	add	x0, x0, #0x9d0
   2ffe8:	blr	x2
   2ffec:	str	x27, [x1, x0]
   2fff0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   2fff4:	ldr	x2, [x0, #2544]
   2fff8:	add	x0, x0, #0x9f0
   2fffc:	blr	x2
   30000:	str	x28, [x1, x0]
   30004:	ldr	x0, [x21, #16]
   30008:	cmp	x0, x28
   3000c:	ccmp	x0, x27, #0x1, le
   30010:	b.lt	300b4 <mpfr_expm1@@Base+0x660>  // b.tstop
   30014:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30018:	ldr	x1, [x0, #2576]
   3001c:	add	x0, x0, #0xa10
   30020:	blr	x1
   30024:	orr	w2, w24, #0x8
   30028:	mrs	x1, tpidr_el0
   3002c:	str	w2, [x1, x0]
   30030:	ldp	x23, x24, [sp, #48]
   30034:	ldp	x25, x26, [sp, #64]
   30038:	ldp	x27, x28, [sp, #80]
   3003c:	mov	w0, w20
   30040:	ldp	x19, x20, [sp, #16]
   30044:	ldp	x21, x22, [sp, #32]
   30048:	ldp	x29, x30, [sp], #160
   3004c:	ret
   30050:	mov	x0, x21
   30054:	bl	c460 <mpfr_nexttozero@plt>
   30058:	mov	w20, #0x1                   	// #1
   3005c:	b	2ffbc <mpfr_expm1@@Base+0x568>
   30060:	mov	x0, #0xfffffffffffffeff    	// #-257
   30064:	movk	x0, #0x7fff, lsl #48
   30068:	sub	x0, x0, x20
   3006c:	ldr	x1, [sp, #104]
   30070:	cmp	x0, x1
   30074:	b.lt	3009c <mpfr_expm1@@Base+0x648>  // b.tstop
   30078:	ldr	x0, [sp, #104]
   3007c:	add	x20, x20, x0
   30080:	add	x0, x20, x20, lsr #63
   30084:	asr	x0, x0, #1
   30088:	str	x0, [sp, #104]
   3008c:	mov	x1, x20
   30090:	mov	x0, x25
   30094:	bl	bed0 <mpfr_set_prec@plt>
   30098:	b	2fb44 <mpfr_expm1@@Base+0xf0>
   3009c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   300a0:	add	x2, x2, #0x230
   300a4:	mov	w1, #0xa5                  	// #165
   300a8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   300ac:	add	x0, x0, #0x118
   300b0:	bl	cb40 <mpfr_assert_fail@plt>
   300b4:	ldr	w2, [sp, #100]
   300b8:	mov	w1, w20
   300bc:	mov	x0, x21
   300c0:	bl	cb30 <mpfr_check_range@plt>
   300c4:	mov	w20, w0
   300c8:	ldp	x23, x24, [sp, #48]
   300cc:	ldp	x25, x26, [sp, #64]
   300d0:	ldp	x27, x28, [sp, #80]
   300d4:	b	3003c <mpfr_expm1@@Base+0x5e8>

00000000000300d8 <mpfr_log2@@Base>:
   300d8:	stp	x29, x30, [sp, #-176]!
   300dc:	mov	x29, sp
   300e0:	stp	x19, x20, [sp, #16]
   300e4:	stp	x21, x22, [sp, #32]
   300e8:	mov	x20, x0
   300ec:	mov	x19, x1
   300f0:	ldr	x0, [x1, #16]
   300f4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   300f8:	cmp	x0, x1
   300fc:	b.le	3032c <mpfr_log2@@Base+0x254>
   30100:	mov	w22, w2
   30104:	ldr	w0, [x19, #8]
   30108:	tbnz	w0, #31, 3040c <mpfr_log2@@Base+0x334>
   3010c:	mov	x2, #0x0                   	// #0
   30110:	mov	x1, #0x1                   	// #1
   30114:	mov	x0, x19
   30118:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3011c:	mov	w21, w0
   30120:	cbz	w0, 30444 <mpfr_log2@@Base+0x36c>
   30124:	ldr	x2, [x19, #16]
   30128:	sub	x2, x2, #0x1
   3012c:	mov	x1, #0x1                   	// #1
   30130:	mov	x0, x19
   30134:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   30138:	cbz	w0, 30458 <mpfr_log2@@Base+0x380>
   3013c:	stp	x23, x24, [sp, #48]
   30140:	stp	x25, x26, [sp, #64]
   30144:	stp	x27, x28, [sp, #80]
   30148:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3014c:	ldr	x1, [x0, #2576]
   30150:	add	x0, x0, #0xa10
   30154:	blr	x1
   30158:	mrs	x1, tpidr_el0
   3015c:	ldr	w26, [x1, x0]
   30160:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30164:	ldr	x2, [x0, #2512]
   30168:	add	x0, x0, #0x9d0
   3016c:	blr	x2
   30170:	add	x2, x1, x0
   30174:	ldr	x27, [x1, x0]
   30178:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3017c:	ldr	x3, [x0, #2544]
   30180:	add	x0, x0, #0x9f0
   30184:	blr	x3
   30188:	ldr	x28, [x1, x0]
   3018c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   30190:	str	x3, [x2]
   30194:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   30198:	str	x2, [x1, x0]
   3019c:	ldr	x23, [x20]
   301a0:	add	x21, x23, #0x3
   301a4:	cmp	x23, #0x1
   301a8:	b.eq	30490 <mpfr_log2@@Base+0x3b8>  // b.none
   301ac:	b.le	30478 <mpfr_log2@@Base+0x3a0>
   301b0:	sub	x0, x23, #0x1
   301b4:	clz	x1, x0
   301b8:	mov	w0, #0x40                  	// #64
   301bc:	sub	w0, w0, w1
   301c0:	sxtw	x0, w0
   301c4:	add	x21, x21, x0
   301c8:	mov	x1, x21
   301cc:	add	x0, sp, #0x70
   301d0:	bl	ca80 <mpfr_init2@plt>
   301d4:	mov	x1, x21
   301d8:	add	x0, sp, #0x90
   301dc:	bl	ca80 <mpfr_init2@plt>
   301e0:	mov	x0, #0x40                  	// #64
   301e4:	str	x0, [sp, #104]
   301e8:	mrs	x0, tpidr_el0
   301ec:	str	x0, [sp, #96]
   301f0:	add	x24, sp, #0x70
   301f4:	add	x25, sp, #0x90
   301f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   301fc:	ldr	x1, [x0, #2560]
   30200:	add	x0, x0, #0xa00
   30204:	blr	x1
   30208:	mov	w2, #0x3                   	// #3
   3020c:	ldr	x1, [sp, #96]
   30210:	add	x1, x1, x0
   30214:	mov	x0, x24
   30218:	bl	c380 <mpfr_cache@plt>
   3021c:	mov	w2, #0x0                   	// #0
   30220:	mov	x1, x19
   30224:	mov	x0, x25
   30228:	bl	c090 <mpfr_log@plt>
   3022c:	mov	w3, #0x0                   	// #0
   30230:	mov	x2, x24
   30234:	mov	x1, x25
   30238:	mov	x0, x24
   3023c:	bl	c620 <mpfr_div@plt>
   30240:	sub	x2, x21, #0x3
   30244:	ldr	x1, [sp, #128]
   30248:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3024c:	cmp	x1, x0
   30250:	b.le	30498 <mpfr_log2@@Base+0x3c0>
   30254:	cmp	w22, #0x0
   30258:	cinc	x3, x23, eq  // eq = none
   3025c:	ldr	x0, [sp, #112]
   30260:	add	x1, x0, #0x3e
   30264:	subs	x0, x0, #0x1
   30268:	csel	x1, x1, x0, mi  // mi = first
   3026c:	asr	x1, x1, #6
   30270:	add	x1, x1, #0x1
   30274:	ldr	x0, [sp, #136]
   30278:	bl	c370 <mpfr_round_p@plt>
   3027c:	cbz	w0, 30498 <mpfr_log2@@Base+0x3c0>
   30280:	add	x19, sp, #0x70
   30284:	ldr	w3, [sp, #120]
   30288:	mov	w2, w22
   3028c:	mov	x1, x19
   30290:	mov	x0, x20
   30294:	bl	c6a0 <mpfr_set4@plt>
   30298:	mov	w21, w0
   3029c:	mov	x0, x19
   302a0:	bl	c070 <mpfr_clear@plt>
   302a4:	add	x0, sp, #0x90
   302a8:	bl	c070 <mpfr_clear@plt>
   302ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   302b0:	ldr	x1, [x0, #2576]
   302b4:	add	x0, x0, #0xa10
   302b8:	blr	x1
   302bc:	mrs	x1, tpidr_el0
   302c0:	str	w26, [x1, x0]
   302c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   302c8:	ldr	x2, [x0, #2512]
   302cc:	add	x0, x0, #0x9d0
   302d0:	blr	x2
   302d4:	str	x27, [x1, x0]
   302d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   302dc:	ldr	x2, [x0, #2544]
   302e0:	add	x0, x0, #0x9f0
   302e4:	blr	x2
   302e8:	str	x28, [x1, x0]
   302ec:	ldr	x0, [x20, #16]
   302f0:	cmp	x28, x0
   302f4:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   302f8:	b.gt	304f8 <mpfr_log2@@Base+0x420>
   302fc:	cbz	w21, 3051c <mpfr_log2@@Base+0x444>
   30300:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30304:	ldr	x1, [x0, #2576]
   30308:	add	x0, x0, #0xa10
   3030c:	blr	x1
   30310:	orr	w26, w26, #0x8
   30314:	mrs	x1, tpidr_el0
   30318:	str	w26, [x1, x0]
   3031c:	ldp	x23, x24, [sp, #48]
   30320:	ldp	x25, x26, [sp, #64]
   30324:	ldp	x27, x28, [sp, #80]
   30328:	b	30528 <mpfr_log2@@Base+0x450>
   3032c:	mov	x1, #0x2                   	// #2
   30330:	movk	x1, #0x8000, lsl #48
   30334:	cmp	x0, x1
   30338:	b.eq	30368 <mpfr_log2@@Base+0x290>  // b.none
   3033c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   30340:	cmp	x0, x1
   30344:	b.ne	303d0 <mpfr_log2@@Base+0x2f8>  // b.any
   30348:	ldr	w0, [x19, #8]
   3034c:	tbnz	w0, #31, 30398 <mpfr_log2@@Base+0x2c0>
   30350:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30354:	str	x0, [x20, #16]
   30358:	mov	w0, #0x1                   	// #1
   3035c:	str	w0, [x20, #8]
   30360:	mov	w21, #0x0                   	// #0
   30364:	b	30528 <mpfr_log2@@Base+0x450>
   30368:	str	x1, [x20, #16]
   3036c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30370:	ldr	x1, [x0, #2576]
   30374:	add	x0, x0, #0xa10
   30378:	blr	x1
   3037c:	mrs	x1, tpidr_el0
   30380:	add	x0, x1, x0
   30384:	ldr	w1, [x0]
   30388:	orr	w1, w1, #0x4
   3038c:	str	w1, [x0]
   30390:	mov	w21, #0x0                   	// #0
   30394:	b	30528 <mpfr_log2@@Base+0x450>
   30398:	mov	x0, #0x2                   	// #2
   3039c:	movk	x0, #0x8000, lsl #48
   303a0:	str	x0, [x20, #16]
   303a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   303a8:	ldr	x1, [x0, #2576]
   303ac:	add	x0, x0, #0xa10
   303b0:	blr	x1
   303b4:	mrs	x1, tpidr_el0
   303b8:	add	x0, x1, x0
   303bc:	ldr	w1, [x0]
   303c0:	orr	w1, w1, #0x4
   303c4:	str	w1, [x0]
   303c8:	mov	w21, #0x0                   	// #0
   303cc:	b	30528 <mpfr_log2@@Base+0x450>
   303d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   303d4:	str	x0, [x20, #16]
   303d8:	mov	w0, #0xffffffff            	// #-1
   303dc:	str	w0, [x20, #8]
   303e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   303e4:	ldr	x1, [x0, #2576]
   303e8:	add	x0, x0, #0xa10
   303ec:	blr	x1
   303f0:	mrs	x1, tpidr_el0
   303f4:	add	x0, x1, x0
   303f8:	ldr	w1, [x0]
   303fc:	orr	w1, w1, #0x20
   30400:	str	w1, [x0]
   30404:	mov	w21, #0x0                   	// #0
   30408:	b	30528 <mpfr_log2@@Base+0x450>
   3040c:	mov	x0, #0x2                   	// #2
   30410:	movk	x0, #0x8000, lsl #48
   30414:	str	x0, [x20, #16]
   30418:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3041c:	ldr	x1, [x0, #2576]
   30420:	add	x0, x0, #0xa10
   30424:	blr	x1
   30428:	mrs	x1, tpidr_el0
   3042c:	add	x0, x1, x0
   30430:	ldr	w1, [x0]
   30434:	orr	w1, w1, #0x4
   30438:	str	w1, [x0]
   3043c:	mov	w21, #0x0                   	// #0
   30440:	b	30528 <mpfr_log2@@Base+0x450>
   30444:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30448:	str	x0, [x20, #16]
   3044c:	mov	w0, #0x1                   	// #1
   30450:	str	w0, [x20, #8]
   30454:	b	30528 <mpfr_log2@@Base+0x450>
   30458:	ldr	x1, [x19, #16]
   3045c:	mov	w3, w22
   30460:	mov	x2, #0x0                   	// #0
   30464:	sub	x1, x1, #0x1
   30468:	mov	x0, x20
   3046c:	bl	ba80 <mpfr_set_si_2exp@plt>
   30470:	mov	w21, w0
   30474:	b	30528 <mpfr_log2@@Base+0x450>
   30478:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   3047c:	add	x2, x2, #0x218
   30480:	mov	w1, #0x6b                  	// #107
   30484:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   30488:	add	x0, x0, #0x120
   3048c:	bl	cb40 <mpfr_assert_fail@plt>
   30490:	mov	x0, #0x0                   	// #0
   30494:	b	301c4 <mpfr_log2@@Base+0xec>
   30498:	mov	x0, #0xfffffffffffffeff    	// #-257
   3049c:	movk	x0, #0x7fff, lsl #48
   304a0:	sub	x0, x0, x21
   304a4:	ldr	x1, [sp, #104]
   304a8:	cmp	x0, x1
   304ac:	b.lt	304e0 <mpfr_log2@@Base+0x408>  // b.tstop
   304b0:	ldr	x0, [sp, #104]
   304b4:	add	x21, x21, x0
   304b8:	add	x0, x21, x21, lsr #63
   304bc:	asr	x0, x0, #1
   304c0:	str	x0, [sp, #104]
   304c4:	mov	x1, x21
   304c8:	mov	x0, x24
   304cc:	bl	bed0 <mpfr_set_prec@plt>
   304d0:	mov	x1, x21
   304d4:	mov	x0, x25
   304d8:	bl	bed0 <mpfr_set_prec@plt>
   304dc:	b	301f8 <mpfr_log2@@Base+0x120>
   304e0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   304e4:	add	x2, x2, #0x230
   304e8:	mov	w1, #0x80                  	// #128
   304ec:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   304f0:	add	x0, x0, #0x120
   304f4:	bl	cb40 <mpfr_assert_fail@plt>
   304f8:	mov	w2, w22
   304fc:	mov	w1, w21
   30500:	mov	x0, x20
   30504:	bl	cb30 <mpfr_check_range@plt>
   30508:	mov	w21, w0
   3050c:	ldp	x23, x24, [sp, #48]
   30510:	ldp	x25, x26, [sp, #64]
   30514:	ldp	x27, x28, [sp, #80]
   30518:	b	30528 <mpfr_log2@@Base+0x450>
   3051c:	ldp	x23, x24, [sp, #48]
   30520:	ldp	x25, x26, [sp, #64]
   30524:	ldp	x27, x28, [sp, #80]
   30528:	mov	w0, w21
   3052c:	ldp	x19, x20, [sp, #16]
   30530:	ldp	x21, x22, [sp, #32]
   30534:	ldp	x29, x30, [sp], #176
   30538:	ret

000000000003053c <mpfr_log10@@Base>:
   3053c:	stp	x29, x30, [sp, #-176]!
   30540:	mov	x29, sp
   30544:	stp	x19, x20, [sp, #16]
   30548:	stp	x21, x22, [sp, #32]
   3054c:	mov	x20, x0
   30550:	mov	x19, x1
   30554:	ldr	x0, [x1, #16]
   30558:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3055c:	cmp	x0, x1
   30560:	b.le	30770 <mpfr_log10@@Base+0x234>
   30564:	mov	w22, w2
   30568:	ldr	w0, [x19, #8]
   3056c:	tbnz	w0, #31, 30850 <mpfr_log10@@Base+0x314>
   30570:	mov	x2, #0x0                   	// #0
   30574:	mov	x1, #0x1                   	// #1
   30578:	mov	x0, x19
   3057c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   30580:	mov	w21, w0
   30584:	cbz	w0, 30888 <mpfr_log10@@Base+0x34c>
   30588:	stp	x23, x24, [sp, #48]
   3058c:	stp	x25, x26, [sp, #64]
   30590:	stp	x27, x28, [sp, #80]
   30594:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30598:	ldr	x1, [x0, #2576]
   3059c:	add	x0, x0, #0xa10
   305a0:	blr	x1
   305a4:	mrs	x1, tpidr_el0
   305a8:	ldr	w26, [x1, x0]
   305ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   305b0:	ldr	x2, [x0, #2512]
   305b4:	add	x0, x0, #0x9d0
   305b8:	blr	x2
   305bc:	add	x2, x1, x0
   305c0:	ldr	x27, [x1, x0]
   305c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   305c8:	ldr	x3, [x0, #2544]
   305cc:	add	x0, x0, #0x9f0
   305d0:	blr	x3
   305d4:	ldr	x28, [x1, x0]
   305d8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   305dc:	str	x3, [x2]
   305e0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   305e4:	str	x2, [x1, x0]
   305e8:	ldr	x24, [x20]
   305ec:	add	x21, x24, #0x4
   305f0:	cmp	x24, #0x1
   305f4:	b.eq	308c4 <mpfr_log10@@Base+0x388>  // b.none
   305f8:	b.le	308ac <mpfr_log10@@Base+0x370>
   305fc:	sub	x0, x24, #0x1
   30600:	clz	x1, x0
   30604:	mov	w0, #0x40                  	// #64
   30608:	sub	w0, w0, w1
   3060c:	sxtw	x0, w0
   30610:	add	x21, x21, x0
   30614:	mov	x1, x21
   30618:	add	x0, sp, #0x70
   3061c:	bl	ca80 <mpfr_init2@plt>
   30620:	mov	x1, x21
   30624:	add	x0, sp, #0x90
   30628:	bl	ca80 <mpfr_init2@plt>
   3062c:	mov	x0, #0x40                  	// #64
   30630:	str	x0, [sp, #104]
   30634:	add	x23, sp, #0x70
   30638:	add	x25, sp, #0x90
   3063c:	mov	w3, #0x0                   	// #0
   30640:	mov	x2, #0x0                   	// #0
   30644:	mov	x1, #0xa                   	// #10
   30648:	mov	x0, x23
   3064c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30650:	mov	w2, #0x3                   	// #3
   30654:	mov	x1, x23
   30658:	mov	x0, x23
   3065c:	bl	c090 <mpfr_log@plt>
   30660:	mov	w2, #0x0                   	// #0
   30664:	mov	x1, x19
   30668:	mov	x0, x25
   3066c:	bl	c090 <mpfr_log@plt>
   30670:	mov	w3, #0x0                   	// #0
   30674:	mov	x2, x23
   30678:	mov	x1, x25
   3067c:	mov	x0, x23
   30680:	bl	c620 <mpfr_div@plt>
   30684:	sub	x2, x21, #0x4
   30688:	ldr	x1, [sp, #128]
   3068c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30690:	cmp	x1, x0
   30694:	b.le	308cc <mpfr_log10@@Base+0x390>
   30698:	cmp	w22, #0x0
   3069c:	cinc	x3, x24, eq  // eq = none
   306a0:	ldr	x0, [sp, #112]
   306a4:	add	x1, x0, #0x3e
   306a8:	subs	x0, x0, #0x1
   306ac:	csel	x1, x1, x0, mi  // mi = first
   306b0:	asr	x1, x1, #6
   306b4:	add	x1, x1, #0x1
   306b8:	ldr	x0, [sp, #136]
   306bc:	bl	c370 <mpfr_round_p@plt>
   306c0:	cbz	w0, 308cc <mpfr_log10@@Base+0x390>
   306c4:	add	x19, sp, #0x70
   306c8:	ldr	w3, [sp, #120]
   306cc:	mov	w2, w22
   306d0:	mov	x1, x19
   306d4:	mov	x0, x20
   306d8:	bl	c6a0 <mpfr_set4@plt>
   306dc:	mov	w21, w0
   306e0:	mov	x0, x19
   306e4:	bl	c070 <mpfr_clear@plt>
   306e8:	add	x0, sp, #0x90
   306ec:	bl	c070 <mpfr_clear@plt>
   306f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   306f4:	ldr	x1, [x0, #2576]
   306f8:	add	x0, x0, #0xa10
   306fc:	blr	x1
   30700:	mrs	x1, tpidr_el0
   30704:	str	w26, [x1, x0]
   30708:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3070c:	ldr	x2, [x0, #2512]
   30710:	add	x0, x0, #0x9d0
   30714:	blr	x2
   30718:	str	x27, [x1, x0]
   3071c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30720:	ldr	x2, [x0, #2544]
   30724:	add	x0, x0, #0x9f0
   30728:	blr	x2
   3072c:	str	x28, [x1, x0]
   30730:	ldr	x0, [x20, #16]
   30734:	cmp	x28, x0
   30738:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   3073c:	b.gt	30990 <mpfr_log10@@Base+0x454>
   30740:	cbz	w21, 309b4 <mpfr_log10@@Base+0x478>
   30744:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30748:	ldr	x1, [x0, #2576]
   3074c:	add	x0, x0, #0xa10
   30750:	blr	x1
   30754:	orr	w26, w26, #0x8
   30758:	mrs	x1, tpidr_el0
   3075c:	str	w26, [x1, x0]
   30760:	ldp	x23, x24, [sp, #48]
   30764:	ldp	x25, x26, [sp, #64]
   30768:	ldp	x27, x28, [sp, #80]
   3076c:	b	30898 <mpfr_log10@@Base+0x35c>
   30770:	mov	x1, #0x2                   	// #2
   30774:	movk	x1, #0x8000, lsl #48
   30778:	cmp	x0, x1
   3077c:	b.eq	307ac <mpfr_log10@@Base+0x270>  // b.none
   30780:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   30784:	cmp	x0, x1
   30788:	b.ne	30814 <mpfr_log10@@Base+0x2d8>  // b.any
   3078c:	ldr	w0, [x19, #8]
   30790:	tbnz	w0, #31, 307dc <mpfr_log10@@Base+0x2a0>
   30794:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30798:	str	x0, [x20, #16]
   3079c:	mov	w0, #0x1                   	// #1
   307a0:	str	w0, [x20, #8]
   307a4:	mov	w21, #0x0                   	// #0
   307a8:	b	30898 <mpfr_log10@@Base+0x35c>
   307ac:	str	x1, [x20, #16]
   307b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   307b4:	ldr	x1, [x0, #2576]
   307b8:	add	x0, x0, #0xa10
   307bc:	blr	x1
   307c0:	mrs	x1, tpidr_el0
   307c4:	add	x0, x1, x0
   307c8:	ldr	w1, [x0]
   307cc:	orr	w1, w1, #0x4
   307d0:	str	w1, [x0]
   307d4:	mov	w21, #0x0                   	// #0
   307d8:	b	30898 <mpfr_log10@@Base+0x35c>
   307dc:	mov	x0, #0x2                   	// #2
   307e0:	movk	x0, #0x8000, lsl #48
   307e4:	str	x0, [x20, #16]
   307e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   307ec:	ldr	x1, [x0, #2576]
   307f0:	add	x0, x0, #0xa10
   307f4:	blr	x1
   307f8:	mrs	x1, tpidr_el0
   307fc:	add	x0, x1, x0
   30800:	ldr	w1, [x0]
   30804:	orr	w1, w1, #0x4
   30808:	str	w1, [x0]
   3080c:	mov	w21, #0x0                   	// #0
   30810:	b	30898 <mpfr_log10@@Base+0x35c>
   30814:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30818:	str	x0, [x20, #16]
   3081c:	mov	w0, #0xffffffff            	// #-1
   30820:	str	w0, [x20, #8]
   30824:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30828:	ldr	x1, [x0, #2576]
   3082c:	add	x0, x0, #0xa10
   30830:	blr	x1
   30834:	mrs	x1, tpidr_el0
   30838:	add	x0, x1, x0
   3083c:	ldr	w1, [x0]
   30840:	orr	w1, w1, #0x20
   30844:	str	w1, [x0]
   30848:	mov	w21, #0x0                   	// #0
   3084c:	b	30898 <mpfr_log10@@Base+0x35c>
   30850:	mov	x0, #0x2                   	// #2
   30854:	movk	x0, #0x8000, lsl #48
   30858:	str	x0, [x20, #16]
   3085c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30860:	ldr	x1, [x0, #2576]
   30864:	add	x0, x0, #0xa10
   30868:	blr	x1
   3086c:	mrs	x1, tpidr_el0
   30870:	add	x0, x1, x0
   30874:	ldr	w1, [x0]
   30878:	orr	w1, w1, #0x4
   3087c:	str	w1, [x0]
   30880:	mov	w21, #0x0                   	// #0
   30884:	b	30898 <mpfr_log10@@Base+0x35c>
   30888:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3088c:	str	x0, [x20, #16]
   30890:	mov	w0, #0x1                   	// #1
   30894:	str	w0, [x20, #8]
   30898:	mov	w0, w21
   3089c:	ldp	x19, x20, [sp, #16]
   308a0:	ldp	x21, x22, [sp, #32]
   308a4:	ldp	x29, x30, [sp], #176
   308a8:	ret
   308ac:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   308b0:	add	x2, x2, #0x218
   308b4:	mov	w1, #0x69                  	// #105
   308b8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   308bc:	add	x0, x0, #0x128
   308c0:	bl	cb40 <mpfr_assert_fail@plt>
   308c4:	mov	x0, #0x0                   	// #0
   308c8:	b	30610 <mpfr_log10@@Base+0xd4>
   308cc:	ldr	w0, [sp, #120]
   308d0:	cmp	w0, #0x0
   308d4:	b.gt	30920 <mpfr_log10@@Base+0x3e4>
   308d8:	mov	x0, #0xfffffffffffffeff    	// #-257
   308dc:	movk	x0, #0x7fff, lsl #48
   308e0:	sub	x0, x0, x21
   308e4:	ldr	x1, [sp, #104]
   308e8:	cmp	x0, x1
   308ec:	b.lt	30978 <mpfr_log10@@Base+0x43c>  // b.tstop
   308f0:	ldr	x0, [sp, #104]
   308f4:	add	x21, x21, x0
   308f8:	add	x0, x21, x21, lsr #63
   308fc:	asr	x0, x0, #1
   30900:	str	x0, [sp, #104]
   30904:	mov	x1, x21
   30908:	mov	x0, x23
   3090c:	bl	bed0 <mpfr_set_prec@plt>
   30910:	mov	x1, x21
   30914:	mov	x0, x25
   30918:	bl	bed0 <mpfr_set_prec@plt>
   3091c:	b	3063c <mpfr_log10@@Base+0x100>
   30920:	mov	x0, x23
   30924:	bl	c160 <mpfr_integer_p@plt>
   30928:	cbz	w0, 308d8 <mpfr_log10@@Base+0x39c>
   3092c:	mov	w1, #0x0                   	// #0
   30930:	mov	x0, x23
   30934:	bl	be50 <mpfr_fits_ulong_p@plt>
   30938:	cbz	w0, 308d8 <mpfr_log10@@Base+0x39c>
   3093c:	mov	w1, #0x0                   	// #0
   30940:	mov	x0, x23
   30944:	bl	bca0 <mpfr_get_ui@plt>
   30948:	mov	w3, #0x0                   	// #0
   3094c:	mov	x2, x0
   30950:	mov	x1, #0xa                   	// #10
   30954:	mov	x0, x25
   30958:	bl	bb20 <mpfr_ui_pow_ui@plt>
   3095c:	cbnz	w0, 308d8 <mpfr_log10@@Base+0x39c>
   30960:	mov	w2, #0x1                   	// #1
   30964:	mov	x1, x25
   30968:	mov	x0, x19
   3096c:	bl	c9a0 <mpfr_cmp3@plt>
   30970:	cbnz	w0, 308d8 <mpfr_log10@@Base+0x39c>
   30974:	b	306c4 <mpfr_log10@@Base+0x188>
   30978:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   3097c:	add	x2, x2, #0x230
   30980:	mov	w1, #0x88                  	// #136
   30984:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   30988:	add	x0, x0, #0x128
   3098c:	bl	cb40 <mpfr_assert_fail@plt>
   30990:	mov	w2, w22
   30994:	mov	w1, w21
   30998:	mov	x0, x20
   3099c:	bl	cb30 <mpfr_check_range@plt>
   309a0:	mov	w21, w0
   309a4:	ldp	x23, x24, [sp, #48]
   309a8:	ldp	x25, x26, [sp, #64]
   309ac:	ldp	x27, x28, [sp, #80]
   309b0:	b	30898 <mpfr_log10@@Base+0x35c>
   309b4:	ldp	x23, x24, [sp, #48]
   309b8:	ldp	x25, x26, [sp, #64]
   309bc:	ldp	x27, x28, [sp, #80]
   309c0:	b	30898 <mpfr_log10@@Base+0x35c>

00000000000309c4 <mpfr_ui_pow@@Base>:
   309c4:	stp	x29, x30, [sp, #-144]!
   309c8:	mov	x29, sp
   309cc:	stp	x19, x20, [sp, #16]
   309d0:	stp	x21, x22, [sp, #32]
   309d4:	stp	x23, x24, [sp, #48]
   309d8:	stp	x25, x26, [sp, #64]
   309dc:	stp	x27, x28, [sp, #80]
   309e0:	mov	x20, x0
   309e4:	mov	x27, x2
   309e8:	mov	w21, w3
   309ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   309f0:	ldr	x2, [x0, #2576]
   309f4:	add	x0, x0, #0xa10
   309f8:	blr	x2
   309fc:	mrs	x4, tpidr_el0
   30a00:	add	x25, x4, x0
   30a04:	ldr	w19, [x4, x0]
   30a08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30a0c:	ldr	x2, [x0, #2512]
   30a10:	add	x0, x0, #0x9d0
   30a14:	blr	x2
   30a18:	add	x24, x4, x0
   30a1c:	ldr	x22, [x4, x0]
   30a20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30a24:	ldr	x2, [x0, #2544]
   30a28:	add	x0, x0, #0x9f0
   30a2c:	blr	x2
   30a30:	add	x23, x4, x0
   30a34:	ldr	x26, [x4, x0]
   30a38:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   30a3c:	str	x0, [x24]
   30a40:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   30a44:	str	x0, [x23]
   30a48:	mov	x0, #0x40                  	// #64
   30a4c:	str	x0, [sp, #112]
   30a50:	add	x0, sp, #0x68
   30a54:	str	x0, [sp, #136]
   30a58:	mov	w0, #0x1                   	// #1
   30a5c:	str	w0, [sp, #120]
   30a60:	add	x28, sp, #0x70
   30a64:	mov	w3, #0x0                   	// #0
   30a68:	mov	x2, #0x0                   	// #0
   30a6c:	mov	x0, x28
   30a70:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30a74:	mov	w3, w21
   30a78:	mov	x2, x27
   30a7c:	mov	x1, x28
   30a80:	mov	x0, x20
   30a84:	bl	bd90 <mpfr_pow@plt>
   30a88:	mov	w1, w0
   30a8c:	ldr	w2, [x25]
   30a90:	orr	w2, w19, w2
   30a94:	str	w2, [x25]
   30a98:	str	x22, [x24]
   30a9c:	str	x26, [x23]
   30aa0:	ldr	x0, [x20, #16]
   30aa4:	cmp	x26, x0
   30aa8:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   30aac:	b.gt	30af0 <mpfr_ui_pow@@Base+0x12c>
   30ab0:	cbz	w1, 30ad0 <mpfr_ui_pow@@Base+0x10c>
   30ab4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30ab8:	ldr	x3, [x0, #2576]
   30abc:	add	x0, x0, #0xa10
   30ac0:	blr	x3
   30ac4:	orr	w2, w2, #0x8
   30ac8:	mrs	x3, tpidr_el0
   30acc:	str	w2, [x3, x0]
   30ad0:	mov	w0, w1
   30ad4:	ldp	x19, x20, [sp, #16]
   30ad8:	ldp	x21, x22, [sp, #32]
   30adc:	ldp	x23, x24, [sp, #48]
   30ae0:	ldp	x25, x26, [sp, #64]
   30ae4:	ldp	x27, x28, [sp, #80]
   30ae8:	ldp	x29, x30, [sp], #144
   30aec:	ret
   30af0:	mov	w2, w21
   30af4:	mov	x0, x20
   30af8:	bl	cb30 <mpfr_check_range@plt>
   30afc:	mov	w1, w0
   30b00:	b	30ad0 <mpfr_ui_pow@@Base+0x10c>

0000000000030b04 <mpfr_ui_pow_ui@@Base>:
   30b04:	stp	x29, x30, [sp, #-160]!
   30b08:	mov	x29, sp
   30b0c:	stp	x19, x20, [sp, #16]
   30b10:	stp	x25, x26, [sp, #64]
   30b14:	mov	x26, x0
   30b18:	mov	x25, x1
   30b1c:	str	w3, [sp, #96]
   30b20:	cmp	x2, #0x1
   30b24:	b.ls	30c0c <mpfr_ui_pow_ui@@Base+0x108>  // b.plast
   30b28:	stp	x21, x22, [sp, #32]
   30b2c:	mov	x22, x2
   30b30:	mov	x0, x2
   30b34:	mov	w1, #0x0                   	// #0
   30b38:	cmp	x25, #0x1
   30b3c:	b.ls	30c3c <mpfr_ui_pow_ui@@Base+0x138>  // b.plast
   30b40:	stp	x23, x24, [sp, #48]
   30b44:	stp	x27, x28, [sp, #80]
   30b48:	mov	w24, w1
   30b4c:	add	w1, w1, #0x1
   30b50:	lsr	x0, x0, #1
   30b54:	cbnz	x0, 30b48 <mpfr_ui_pow_ui@@Base+0x44>
   30b58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30b5c:	ldr	x2, [x0, #2576]
   30b60:	add	x0, x0, #0xa10
   30b64:	blr	x2
   30b68:	mrs	x2, tpidr_el0
   30b6c:	ldr	w0, [x2, x0]
   30b70:	str	w0, [sp, #100]
   30b74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30b78:	ldr	x3, [x0, #2512]
   30b7c:	add	x0, x0, #0x9d0
   30b80:	blr	x3
   30b84:	add	x3, x2, x0
   30b88:	ldr	x28, [x2, x0]
   30b8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30b90:	ldr	x4, [x0, #2544]
   30b94:	add	x0, x0, #0x9f0
   30b98:	blr	x4
   30b9c:	ldr	x27, [x2, x0]
   30ba0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   30ba4:	str	x4, [x3]
   30ba8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   30bac:	str	x3, [x2, x0]
   30bb0:	ldr	x0, [x26]
   30bb4:	add	x0, x0, #0x3
   30bb8:	add	x0, x0, w1, sxtw
   30bbc:	str	x0, [sp, #112]
   30bc0:	mov	x1, x0
   30bc4:	add	x0, sp, #0x80
   30bc8:	bl	ca80 <mpfr_init2@plt>
   30bcc:	mov	x0, #0x40                  	// #64
   30bd0:	str	x0, [sp, #120]
   30bd4:	add	x19, sp, #0x80
   30bd8:	sub	w0, w24, #0x1
   30bdc:	add	x0, x0, #0x2
   30be0:	str	x0, [sp, #104]
   30be4:	mov	w3, #0x2                   	// #2
   30be8:	mov	x2, #0x0                   	// #0
   30bec:	mov	x1, x25
   30bf0:	mov	x0, x19
   30bf4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30bf8:	mov	w21, w0
   30bfc:	subs	w20, w24, #0x1
   30c00:	b.mi	30d84 <mpfr_ui_pow_ui@@Base+0x280>  // b.first
   30c04:	mov	w23, #0x2                   	// #2
   30c08:	b	30c88 <mpfr_ui_pow_ui@@Base+0x184>
   30c0c:	b.ne	30c24 <mpfr_ui_pow_ui@@Base+0x120>  // b.any
   30c10:	mov	w3, w3
   30c14:	mov	x2, #0x0                   	// #0
   30c18:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30c1c:	mov	w19, w0
   30c20:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>
   30c24:	ldr	w3, [sp, #96]
   30c28:	mov	x2, #0x0                   	// #0
   30c2c:	mov	x1, #0x1                   	// #1
   30c30:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30c34:	mov	w19, w0
   30c38:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>
   30c3c:	b.eq	30c5c <mpfr_ui_pow_ui@@Base+0x158>  // b.none
   30c40:	mov	w0, #0x1                   	// #1
   30c44:	str	w0, [x26, #8]
   30c48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30c4c:	str	x0, [x26, #16]
   30c50:	mov	w19, #0x0                   	// #0
   30c54:	ldp	x21, x22, [sp, #32]
   30c58:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>
   30c5c:	ldr	w3, [sp, #96]
   30c60:	mov	x2, #0x0                   	// #0
   30c64:	mov	x1, #0x1                   	// #1
   30c68:	mov	x0, x26
   30c6c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30c70:	mov	w19, w0
   30c74:	ldp	x21, x22, [sp, #32]
   30c78:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>
   30c7c:	sub	w20, w20, #0x1
   30c80:	cmn	w20, #0x1
   30c84:	b.eq	30cc4 <mpfr_ui_pow_ui@@Base+0x1c0>  // b.none
   30c88:	mov	w3, w23
   30c8c:	mov	x2, x19
   30c90:	mov	x1, x19
   30c94:	mov	x0, x19
   30c98:	bl	bd50 <mpfr_mul@plt>
   30c9c:	orr	w21, w21, w0
   30ca0:	lsr	x0, x22, x20
   30ca4:	tbz	w0, #0, 30c7c <mpfr_ui_pow_ui@@Base+0x178>
   30ca8:	mov	w3, w23
   30cac:	mov	x2, x25
   30cb0:	mov	x1, x19
   30cb4:	mov	x0, x19
   30cb8:	bl	ba50 <mpfr_mul_ui@plt>
   30cbc:	orr	w21, w21, w0
   30cc0:	b	30c7c <mpfr_ui_pow_ui@@Base+0x178>
   30cc4:	ldr	x2, [sp, #104]
   30cc8:	cbnz	w21, 30d8c <mpfr_ui_pow_ui@@Base+0x288>
   30ccc:	add	x20, sp, #0x80
   30cd0:	ldr	w3, [sp, #136]
   30cd4:	ldr	w2, [sp, #96]
   30cd8:	mov	x1, x20
   30cdc:	mov	x0, x26
   30ce0:	bl	c6a0 <mpfr_set4@plt>
   30ce4:	mov	w19, w0
   30ce8:	mov	x0, x20
   30cec:	bl	c070 <mpfr_clear@plt>
   30cf0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30cf4:	ldr	x1, [x0, #2576]
   30cf8:	add	x0, x0, #0xa10
   30cfc:	blr	x1
   30d00:	mrs	x1, tpidr_el0
   30d04:	ldr	w2, [sp, #100]
   30d08:	str	w2, [x1, x0]
   30d0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30d10:	ldr	x3, [x0, #2512]
   30d14:	add	x0, x0, #0x9d0
   30d18:	blr	x3
   30d1c:	str	x28, [x1, x0]
   30d20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30d24:	ldr	x3, [x0, #2544]
   30d28:	add	x0, x0, #0x9f0
   30d2c:	blr	x3
   30d30:	str	x27, [x1, x0]
   30d34:	ldr	x0, [x26, #16]
   30d38:	cmp	x28, x0
   30d3c:	ccmp	x27, x0, #0x1, le
   30d40:	b.lt	30e34 <mpfr_ui_pow_ui@@Base+0x330>  // b.tstop
   30d44:	cbz	w19, 30e58 <mpfr_ui_pow_ui@@Base+0x354>
   30d48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30d4c:	ldr	x1, [x0, #2576]
   30d50:	add	x0, x0, #0xa10
   30d54:	blr	x1
   30d58:	orr	w1, w2, #0x8
   30d5c:	mrs	x2, tpidr_el0
   30d60:	str	w1, [x2, x0]
   30d64:	ldp	x21, x22, [sp, #32]
   30d68:	ldp	x23, x24, [sp, #48]
   30d6c:	ldp	x27, x28, [sp, #80]
   30d70:	mov	w0, w19
   30d74:	ldp	x19, x20, [sp, #16]
   30d78:	ldp	x25, x26, [sp, #64]
   30d7c:	ldp	x29, x30, [sp], #160
   30d80:	ret
   30d84:	mov	x2, #0x1                   	// #1
   30d88:	b	30cc8 <mpfr_ui_pow_ui@@Base+0x1c4>
   30d8c:	ldr	x1, [sp, #144]
   30d90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30d94:	cmp	x1, x0
   30d98:	b.le	30dd8 <mpfr_ui_pow_ui@@Base+0x2d4>
   30d9c:	ldr	w0, [sp, #96]
   30da0:	cmp	w0, #0x0
   30da4:	ldr	x3, [x26]
   30da8:	cinc	x3, x3, eq  // eq = none
   30dac:	ldr	x0, [sp, #128]
   30db0:	add	x1, x0, #0x3e
   30db4:	subs	x0, x0, #0x1
   30db8:	csel	x1, x1, x0, mi  // mi = first
   30dbc:	asr	x1, x1, #6
   30dc0:	ldr	x0, [sp, #112]
   30dc4:	sub	x2, x0, x2
   30dc8:	add	x1, x1, #0x1
   30dcc:	ldr	x0, [sp, #152]
   30dd0:	bl	c370 <mpfr_round_p@plt>
   30dd4:	cbnz	w0, 30ccc <mpfr_ui_pow_ui@@Base+0x1c8>
   30dd8:	mov	x0, #0xfffffffffffffeff    	// #-257
   30ddc:	movk	x0, #0x7fff, lsl #48
   30de0:	ldr	x1, [sp, #112]
   30de4:	sub	x0, x0, x1
   30de8:	ldr	x1, [sp, #120]
   30dec:	cmp	x0, x1
   30df0:	b.lt	30e1c <mpfr_ui_pow_ui@@Base+0x318>  // b.tstop
   30df4:	ldr	x0, [sp, #112]
   30df8:	ldr	x1, [sp, #120]
   30dfc:	add	x1, x0, x1
   30e00:	str	x1, [sp, #112]
   30e04:	add	x0, x1, x1, lsr #63
   30e08:	asr	x0, x0, #1
   30e0c:	str	x0, [sp, #120]
   30e10:	mov	x0, x19
   30e14:	bl	bed0 <mpfr_set_prec@plt>
   30e18:	b	30be4 <mpfr_ui_pow_ui@@Base+0xe0>
   30e1c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   30e20:	add	x2, x2, #0xd68
   30e24:	mov	w1, #0x54                  	// #84
   30e28:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   30e2c:	add	x0, x0, #0x130
   30e30:	bl	cb40 <mpfr_assert_fail@plt>
   30e34:	ldr	w2, [sp, #96]
   30e38:	mov	w1, w19
   30e3c:	mov	x0, x26
   30e40:	bl	cb30 <mpfr_check_range@plt>
   30e44:	mov	w19, w0
   30e48:	ldp	x21, x22, [sp, #32]
   30e4c:	ldp	x23, x24, [sp, #48]
   30e50:	ldp	x27, x28, [sp, #80]
   30e54:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>
   30e58:	ldp	x21, x22, [sp, #32]
   30e5c:	ldp	x23, x24, [sp, #48]
   30e60:	ldp	x27, x28, [sp, #80]
   30e64:	b	30d70 <mpfr_ui_pow_ui@@Base+0x26c>

0000000000030e68 <mpfr_min@@Base>:
   30e68:	stp	x29, x30, [sp, #-48]!
   30e6c:	mov	x29, sp
   30e70:	stp	x19, x20, [sp, #16]
   30e74:	stp	x21, x22, [sp, #32]
   30e78:	mov	x22, x0
   30e7c:	mov	x21, x1
   30e80:	mov	x19, x2
   30e84:	mov	w20, w3
   30e88:	ldr	x2, [x1, #16]
   30e8c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   30e90:	cmp	x2, x4
   30e94:	b.le	30ee0 <mpfr_min@@Base+0x78>
   30e98:	ldr	x1, [x19, #16]
   30e9c:	cmp	x1, x4
   30ea0:	b.le	30fb4 <mpfr_min@@Base+0x14c>
   30ea4:	mov	w2, #0x1                   	// #1
   30ea8:	mov	x1, x19
   30eac:	mov	x0, x21
   30eb0:	bl	c9a0 <mpfr_cmp3@plt>
   30eb4:	cmp	w0, #0x0
   30eb8:	b.le	30f9c <mpfr_min@@Base+0x134>
   30ebc:	ldr	w3, [x19, #8]
   30ec0:	mov	w2, w20
   30ec4:	mov	x1, x19
   30ec8:	mov	x0, x22
   30ecc:	bl	c6a0 <mpfr_set4@plt>
   30ed0:	ldp	x19, x20, [sp, #16]
   30ed4:	ldp	x21, x22, [sp, #32]
   30ed8:	ldp	x29, x30, [sp], #48
   30edc:	ret
   30ee0:	mov	x0, #0x2                   	// #2
   30ee4:	movk	x0, #0x8000, lsl #48
   30ee8:	cmp	x2, x0
   30eec:	b.eq	30f34 <mpfr_min@@Base+0xcc>  // b.none
   30ef0:	ldr	x0, [x19, #16]
   30ef4:	mov	x1, #0x2                   	// #2
   30ef8:	movk	x1, #0x8000, lsl #48
   30efc:	cmp	x0, x1
   30f00:	b.eq	30fc8 <mpfr_min@@Base+0x160>  // b.none
   30f04:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   30f08:	cmp	x0, x1
   30f0c:	ccmp	x2, x1, #0x0, eq  // eq = none
   30f10:	b.ne	30ea4 <mpfr_min@@Base+0x3c>  // b.any
   30f14:	ldr	w3, [x21, #8]
   30f18:	tbnz	w3, #31, 30f88 <mpfr_min@@Base+0x120>
   30f1c:	ldr	w3, [x19, #8]
   30f20:	mov	w2, w20
   30f24:	mov	x1, x19
   30f28:	mov	x0, x22
   30f2c:	bl	c6a0 <mpfr_set4@plt>
   30f30:	b	30ed0 <mpfr_min@@Base+0x68>
   30f34:	ldr	x1, [x19, #16]
   30f38:	cmp	x1, x0
   30f3c:	b.eq	30f58 <mpfr_min@@Base+0xf0>  // b.none
   30f40:	ldr	w3, [x19, #8]
   30f44:	mov	w2, w20
   30f48:	mov	x1, x19
   30f4c:	mov	x0, x22
   30f50:	bl	c6a0 <mpfr_set4@plt>
   30f54:	b	30ed0 <mpfr_min@@Base+0x68>
   30f58:	str	x0, [x22, #16]
   30f5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   30f60:	ldr	x1, [x0, #2576]
   30f64:	add	x0, x0, #0xa10
   30f68:	blr	x1
   30f6c:	mrs	x1, tpidr_el0
   30f70:	add	x0, x1, x0
   30f74:	ldr	w1, [x0]
   30f78:	orr	w1, w1, #0x4
   30f7c:	str	w1, [x0]
   30f80:	mov	w0, #0x0                   	// #0
   30f84:	b	30ed0 <mpfr_min@@Base+0x68>
   30f88:	mov	w2, w20
   30f8c:	mov	x1, x21
   30f90:	mov	x0, x22
   30f94:	bl	c6a0 <mpfr_set4@plt>
   30f98:	b	30ed0 <mpfr_min@@Base+0x68>
   30f9c:	ldr	w3, [x21, #8]
   30fa0:	mov	w2, w20
   30fa4:	mov	x1, x21
   30fa8:	mov	x0, x22
   30fac:	bl	c6a0 <mpfr_set4@plt>
   30fb0:	b	30ed0 <mpfr_min@@Base+0x68>
   30fb4:	ldr	x1, [x19, #16]
   30fb8:	mov	x0, #0x2                   	// #2
   30fbc:	movk	x0, #0x8000, lsl #48
   30fc0:	cmp	x1, x0
   30fc4:	b.ne	30ea4 <mpfr_min@@Base+0x3c>  // b.any
   30fc8:	ldr	w3, [x21, #8]
   30fcc:	mov	w2, w20
   30fd0:	mov	x1, x21
   30fd4:	mov	x0, x22
   30fd8:	bl	c6a0 <mpfr_set4@plt>
   30fdc:	b	30ed0 <mpfr_min@@Base+0x68>

0000000000030fe0 <mpfr_max@@Base>:
   30fe0:	stp	x29, x30, [sp, #-48]!
   30fe4:	mov	x29, sp
   30fe8:	stp	x19, x20, [sp, #16]
   30fec:	stp	x21, x22, [sp, #32]
   30ff0:	mov	x22, x0
   30ff4:	mov	x19, x1
   30ff8:	mov	x20, x2
   30ffc:	mov	w21, w3
   31000:	ldr	x1, [x1, #16]
   31004:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   31008:	cmp	x1, x2
   3100c:	b.le	31058 <mpfr_max@@Base+0x78>
   31010:	ldr	x1, [x20, #16]
   31014:	cmp	x1, x2
   31018:	b.le	3112c <mpfr_max@@Base+0x14c>
   3101c:	mov	w2, #0x1                   	// #1
   31020:	mov	x1, x20
   31024:	mov	x0, x19
   31028:	bl	c9a0 <mpfr_cmp3@plt>
   3102c:	cmp	w0, #0x0
   31030:	b.le	31114 <mpfr_max@@Base+0x134>
   31034:	ldr	w3, [x19, #8]
   31038:	mov	w2, w21
   3103c:	mov	x1, x19
   31040:	mov	x0, x22
   31044:	bl	c6a0 <mpfr_set4@plt>
   31048:	ldp	x19, x20, [sp, #16]
   3104c:	ldp	x21, x22, [sp, #32]
   31050:	ldp	x29, x30, [sp], #48
   31054:	ret
   31058:	mov	x0, #0x2                   	// #2
   3105c:	movk	x0, #0x8000, lsl #48
   31060:	cmp	x1, x0
   31064:	b.eq	310a8 <mpfr_max@@Base+0xc8>  // b.none
   31068:	ldr	x0, [x20, #16]
   3106c:	mov	x2, #0x2                   	// #2
   31070:	movk	x2, #0x8000, lsl #48
   31074:	cmp	x0, x2
   31078:	b.eq	31140 <mpfr_max@@Base+0x160>  // b.none
   3107c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   31080:	cmp	x0, x2
   31084:	ccmp	x1, x2, #0x0, eq  // eq = none
   31088:	b.ne	3101c <mpfr_max@@Base+0x3c>  // b.any
   3108c:	ldr	w3, [x19, #8]
   31090:	tbnz	w3, #31, 310fc <mpfr_max@@Base+0x11c>
   31094:	mov	w2, w21
   31098:	mov	x1, x19
   3109c:	mov	x0, x22
   310a0:	bl	c6a0 <mpfr_set4@plt>
   310a4:	b	31048 <mpfr_max@@Base+0x68>
   310a8:	ldr	x1, [x20, #16]
   310ac:	cmp	x1, x0
   310b0:	b.eq	310cc <mpfr_max@@Base+0xec>  // b.none
   310b4:	ldr	w3, [x20, #8]
   310b8:	mov	w2, w21
   310bc:	mov	x1, x20
   310c0:	mov	x0, x22
   310c4:	bl	c6a0 <mpfr_set4@plt>
   310c8:	b	31048 <mpfr_max@@Base+0x68>
   310cc:	str	x0, [x22, #16]
   310d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   310d4:	ldr	x1, [x0, #2576]
   310d8:	add	x0, x0, #0xa10
   310dc:	blr	x1
   310e0:	mrs	x1, tpidr_el0
   310e4:	add	x0, x1, x0
   310e8:	ldr	w1, [x0]
   310ec:	orr	w1, w1, #0x4
   310f0:	str	w1, [x0]
   310f4:	mov	w0, #0x0                   	// #0
   310f8:	b	31048 <mpfr_max@@Base+0x68>
   310fc:	ldr	w3, [x20, #8]
   31100:	mov	w2, w21
   31104:	mov	x1, x20
   31108:	mov	x0, x22
   3110c:	bl	c6a0 <mpfr_set4@plt>
   31110:	b	31048 <mpfr_max@@Base+0x68>
   31114:	ldr	w3, [x20, #8]
   31118:	mov	w2, w21
   3111c:	mov	x1, x20
   31120:	mov	x0, x22
   31124:	bl	c6a0 <mpfr_set4@plt>
   31128:	b	31048 <mpfr_max@@Base+0x68>
   3112c:	ldr	x1, [x20, #16]
   31130:	mov	x0, #0x2                   	// #2
   31134:	movk	x0, #0x8000, lsl #48
   31138:	cmp	x1, x0
   3113c:	b.ne	3101c <mpfr_max@@Base+0x3c>  // b.any
   31140:	ldr	w3, [x19, #8]
   31144:	mov	w2, w21
   31148:	mov	x1, x19
   3114c:	mov	x0, x22
   31150:	bl	c6a0 <mpfr_set4@plt>
   31154:	b	31048 <mpfr_max@@Base+0x68>

0000000000031158 <mpfr_dim@@Base>:
   31158:	stp	x29, x30, [sp, #-48]!
   3115c:	mov	x29, sp
   31160:	stp	x19, x20, [sp, #16]
   31164:	stp	x21, x22, [sp, #32]
   31168:	mov	x22, x0
   3116c:	mov	x19, x1
   31170:	mov	x20, x2
   31174:	ldr	x2, [x1, #16]
   31178:	mov	x1, #0x2                   	// #2
   3117c:	movk	x1, #0x8000, lsl #48
   31180:	cmp	x2, x1
   31184:	b.eq	311d0 <mpfr_dim@@Base+0x78>  // b.none
   31188:	mov	w21, w3
   3118c:	ldr	x1, [x20, #16]
   31190:	mov	x0, #0x2                   	// #2
   31194:	movk	x0, #0x8000, lsl #48
   31198:	cmp	x1, x0
   3119c:	b.eq	311d0 <mpfr_dim@@Base+0x78>  // b.none
   311a0:	mov	w2, #0x1                   	// #1
   311a4:	mov	x1, x20
   311a8:	mov	x0, x19
   311ac:	bl	c9a0 <mpfr_cmp3@plt>
   311b0:	cmp	w0, #0x0
   311b4:	b.gt	31214 <mpfr_dim@@Base+0xbc>
   311b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   311bc:	str	x0, [x22, #16]
   311c0:	mov	w0, #0x1                   	// #1
   311c4:	str	w0, [x22, #8]
   311c8:	mov	w0, #0x0                   	// #0
   311cc:	b	31204 <mpfr_dim@@Base+0xac>
   311d0:	mov	x0, #0x2                   	// #2
   311d4:	movk	x0, #0x8000, lsl #48
   311d8:	str	x0, [x22, #16]
   311dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   311e0:	ldr	x1, [x0, #2576]
   311e4:	add	x0, x0, #0xa10
   311e8:	blr	x1
   311ec:	mrs	x1, tpidr_el0
   311f0:	add	x0, x1, x0
   311f4:	ldr	w1, [x0]
   311f8:	orr	w1, w1, #0x4
   311fc:	str	w1, [x0]
   31200:	mov	w0, #0x0                   	// #0
   31204:	ldp	x19, x20, [sp, #16]
   31208:	ldp	x21, x22, [sp, #32]
   3120c:	ldp	x29, x30, [sp], #48
   31210:	ret
   31214:	mov	w3, w21
   31218:	mov	x2, x20
   3121c:	mov	x1, x19
   31220:	mov	x0, x22
   31224:	bl	bb70 <mpfr_sub@plt>
   31228:	b	31204 <mpfr_dim@@Base+0xac>

000000000003122c <mpfr_signbit@@Base>:
   3122c:	ldr	w0, [x0, #8]
   31230:	lsr	w0, w0, #31
   31234:	ret

0000000000031238 <mpfr_copysign@@Base>:
   31238:	stp	x29, x30, [sp, #-16]!
   3123c:	mov	x29, sp
   31240:	mov	x4, x2
   31244:	mov	w2, w3
   31248:	ldr	w3, [x4, #8]
   3124c:	bl	c6a0 <mpfr_set4@plt>
   31250:	ldp	x29, x30, [sp], #16
   31254:	ret

0000000000031258 <mpfr_setsign@@Base>:
   31258:	stp	x29, x30, [sp, #-16]!
   3125c:	mov	x29, sp
   31260:	mov	w4, w2
   31264:	mov	w2, w3
   31268:	mov	w3, #0x1                   	// #1
   3126c:	cmp	w4, #0x0
   31270:	cneg	w3, w3, ne  // ne = any
   31274:	bl	c6a0 <mpfr_set4@plt>
   31278:	ldp	x29, x30, [sp], #16
   3127c:	ret
   31280:	stp	x29, x30, [sp, #-32]!
   31284:	mov	x29, sp
   31288:	stp	x19, x20, [sp, #16]
   3128c:	mov	x20, x0
   31290:	mov	x19, x1
   31294:	ldr	w2, [x1, #4]
   31298:	cmp	w2, #0x0
   3129c:	cneg	w2, w2, lt  // lt = tstop
   312a0:	sxtw	x2, w2
   312a4:	mov	x1, #0x40                  	// #64
   312a8:	cmp	x2, #0x1
   312ac:	b.ls	312c8 <mpfr_setsign@@Base+0x70>  // b.plast
   312b0:	ldr	x0, [x19, #8]
   312b4:	add	x0, x0, x2, lsl #3
   312b8:	ldur	x1, [x0, #-8]
   312bc:	lsl	x2, x2, #6
   312c0:	clz	x1, x1
   312c4:	sub	x1, x2, x1
   312c8:	mov	x0, x20
   312cc:	bl	ca80 <mpfr_init2@plt>
   312d0:	mov	w2, #0x0                   	// #0
   312d4:	mov	x1, x19
   312d8:	mov	x0, x20
   312dc:	bl	c240 <mpfr_set_z@plt>
   312e0:	cbnz	w0, 312f0 <mpfr_setsign@@Base+0x98>
   312e4:	ldp	x19, x20, [sp, #16]
   312e8:	ldp	x29, x30, [sp], #32
   312ec:	ret
   312f0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   312f4:	add	x2, x2, #0x140
   312f8:	mov	w1, #0x31                  	// #49
   312fc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31300:	add	x0, x0, #0x148
   31304:	bl	cb40 <mpfr_assert_fail@plt>
   31308:	stp	x29, x30, [sp, #-144]!
   3130c:	mov	x29, sp
   31310:	stp	x19, x20, [sp, #16]
   31314:	stp	x21, x22, [sp, #32]
   31318:	stp	x23, x24, [sp, #48]
   3131c:	stp	x25, x26, [sp, #64]
   31320:	stp	x27, x28, [sp, #80]
   31324:	mov	x20, x0
   31328:	str	x1, [sp, #104]
   3132c:	mov	x1, x2
   31330:	mov	w22, w3
   31334:	mov	x21, x4
   31338:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3133c:	ldr	x2, [x0, #2576]
   31340:	add	x0, x0, #0xa10
   31344:	blr	x2
   31348:	mrs	x3, tpidr_el0
   3134c:	add	x27, x3, x0
   31350:	ldr	w28, [x3, x0]
   31354:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31358:	ldr	x2, [x0, #2512]
   3135c:	add	x0, x0, #0x9d0
   31360:	blr	x2
   31364:	add	x26, x3, x0
   31368:	ldr	x23, [x3, x0]
   3136c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31370:	ldr	x2, [x0, #2544]
   31374:	add	x0, x0, #0x9f0
   31378:	blr	x2
   3137c:	add	x25, x3, x0
   31380:	ldr	x24, [x3, x0]
   31384:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   31388:	str	x0, [x26]
   3138c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   31390:	str	x0, [x25]
   31394:	add	x19, sp, #0x70
   31398:	mov	x0, x19
   3139c:	bl	31280 <mpfr_setsign@@Base+0x28>
   313a0:	mov	w3, w22
   313a4:	mov	x2, x19
   313a8:	ldr	x1, [sp, #104]
   313ac:	mov	x0, x20
   313b0:	blr	x21
   313b4:	mov	w21, w0
   313b8:	ldr	w0, [x27]
   313bc:	orr	w28, w28, w0
   313c0:	mov	x0, x19
   313c4:	bl	c070 <mpfr_clear@plt>
   313c8:	str	w28, [x27]
   313cc:	str	x23, [x26]
   313d0:	str	x24, [x25]
   313d4:	ldr	x0, [x20, #16]
   313d8:	cmp	x24, x0
   313dc:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   313e0:	b.gt	31424 <mpfr_setsign@@Base+0x1cc>
   313e4:	cbz	w21, 31404 <mpfr_setsign@@Base+0x1ac>
   313e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   313ec:	ldr	x1, [x0, #2576]
   313f0:	add	x0, x0, #0xa10
   313f4:	blr	x1
   313f8:	orr	w28, w28, #0x8
   313fc:	mrs	x1, tpidr_el0
   31400:	str	w28, [x1, x0]
   31404:	mov	w0, w21
   31408:	ldp	x19, x20, [sp, #16]
   3140c:	ldp	x21, x22, [sp, #32]
   31410:	ldp	x23, x24, [sp, #48]
   31414:	ldp	x25, x26, [sp, #64]
   31418:	ldp	x27, x28, [sp, #80]
   3141c:	ldp	x29, x30, [sp], #144
   31420:	ret
   31424:	mov	w2, w22
   31428:	mov	w1, w21
   3142c:	mov	x0, x20
   31430:	bl	cb30 <mpfr_check_range@plt>
   31434:	mov	w21, w0
   31438:	b	31404 <mpfr_setsign@@Base+0x1ac>

000000000003143c <mpfr_mul_z@@Base>:
   3143c:	stp	x29, x30, [sp, #-48]!
   31440:	mov	x29, sp
   31444:	stp	x19, x20, [sp, #16]
   31448:	stp	x21, x22, [sp, #32]
   3144c:	mov	x20, x0
   31450:	mov	x21, x1
   31454:	mov	x19, x2
   31458:	mov	w22, w3
   3145c:	mov	x0, x2
   31460:	bl	be90 <__gmpz_fits_slong_p@plt>
   31464:	cbz	w0, 31494 <mpfr_mul_z@@Base+0x58>
   31468:	mov	x0, x19
   3146c:	bl	ba20 <__gmpz_get_si@plt>
   31470:	mov	w3, w22
   31474:	mov	x2, x0
   31478:	mov	x1, x21
   3147c:	mov	x0, x20
   31480:	bl	c960 <mpfr_mul_si@plt>
   31484:	ldp	x19, x20, [sp, #16]
   31488:	ldp	x21, x22, [sp, #32]
   3148c:	ldp	x29, x30, [sp], #48
   31490:	ret
   31494:	adrp	x4, 80000 <__gmpfr_l2b@@Base+0x200>
   31498:	ldr	x4, [x4, #3960]
   3149c:	mov	w3, w22
   314a0:	mov	x2, x19
   314a4:	mov	x1, x21
   314a8:	mov	x0, x20
   314ac:	bl	31308 <mpfr_setsign@@Base+0xb0>
   314b0:	b	31484 <mpfr_mul_z@@Base+0x48>

00000000000314b4 <mpfr_div_z@@Base>:
   314b4:	stp	x29, x30, [sp, #-48]!
   314b8:	mov	x29, sp
   314bc:	stp	x19, x20, [sp, #16]
   314c0:	stp	x21, x22, [sp, #32]
   314c4:	mov	x20, x0
   314c8:	mov	x21, x1
   314cc:	mov	x19, x2
   314d0:	mov	w22, w3
   314d4:	mov	x0, x2
   314d8:	bl	be90 <__gmpz_fits_slong_p@plt>
   314dc:	cbz	w0, 3150c <mpfr_div_z@@Base+0x58>
   314e0:	mov	x0, x19
   314e4:	bl	ba20 <__gmpz_get_si@plt>
   314e8:	mov	w3, w22
   314ec:	mov	x2, x0
   314f0:	mov	x1, x21
   314f4:	mov	x0, x20
   314f8:	bl	c820 <mpfr_div_si@plt>
   314fc:	ldp	x19, x20, [sp, #16]
   31500:	ldp	x21, x22, [sp, #32]
   31504:	ldp	x29, x30, [sp], #48
   31508:	ret
   3150c:	adrp	x4, 80000 <__gmpfr_l2b@@Base+0x200>
   31510:	ldr	x4, [x4, #4040]
   31514:	mov	w3, w22
   31518:	mov	x2, x19
   3151c:	mov	x1, x21
   31520:	mov	x0, x20
   31524:	bl	31308 <mpfr_setsign@@Base+0xb0>
   31528:	b	314fc <mpfr_div_z@@Base+0x48>
   3152c:	stp	x29, x30, [sp, #-160]!
   31530:	mov	x29, sp
   31534:	stp	x19, x20, [sp, #16]
   31538:	stp	x21, x22, [sp, #32]
   3153c:	stp	x27, x28, [sp, #80]
   31540:	mov	x20, x0
   31544:	mov	x21, x1
   31548:	mov	x22, x3
   3154c:	ldr	w27, [x2, #4]
   31550:	cbz	w27, 316ac <mpfr_div_z@@Base+0x1f8>
   31554:	stp	x23, x24, [sp, #48]
   31558:	mov	x19, x2
   3155c:	mov	w23, w4
   31560:	ldr	w27, [x3, #4]
   31564:	cbz	w27, 316f0 <mpfr_div_z@@Base+0x23c>
   31568:	stp	x25, x26, [sp, #64]
   3156c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31570:	ldr	x1, [x0, #2576]
   31574:	add	x0, x0, #0xa10
   31578:	blr	x1
   3157c:	mrs	x1, tpidr_el0
   31580:	ldr	w24, [x1, x0]
   31584:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31588:	ldr	x2, [x0, #2512]
   3158c:	add	x0, x0, #0x9d0
   31590:	blr	x2
   31594:	add	x2, x1, x0
   31598:	ldr	x25, [x1, x0]
   3159c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   315a0:	ldr	x3, [x0, #2544]
   315a4:	add	x0, x0, #0x9f0
   315a8:	blr	x3
   315ac:	ldr	x26, [x1, x0]
   315b0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   315b4:	str	x3, [x2]
   315b8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   315bc:	str	x2, [x1, x0]
   315c0:	ldr	w5, [x19, #4]
   315c4:	cmp	w5, #0x0
   315c8:	cneg	w5, w5, lt  // lt = tstop
   315cc:	ldr	x0, [x19, #8]
   315d0:	add	x0, x0, w5, sxtw #3
   315d4:	ldur	x1, [x0, #-8]
   315d8:	sbfiz	x5, x5, #6, #32
   315dc:	clz	x1, x1
   315e0:	sub	x5, x5, x1
   315e4:	ldr	x1, [x21]
   315e8:	add	x27, sp, #0x60
   315ec:	add	x1, x5, x1
   315f0:	mov	x0, x27
   315f4:	bl	ca80 <mpfr_init2@plt>
   315f8:	mov	w3, #0x0                   	// #0
   315fc:	mov	x2, x19
   31600:	mov	x1, x21
   31604:	mov	x0, x27
   31608:	bl	c4d0 <mpfr_mul_z@plt>
   3160c:	cbnz	w0, 31720 <mpfr_div_z@@Base+0x26c>
   31610:	mov	w3, w23
   31614:	mov	x2, x22
   31618:	add	x1, sp, #0x60
   3161c:	mov	x0, x20
   31620:	bl	cc80 <mpfr_div_z@plt>
   31624:	mov	w27, w0
   31628:	add	x0, sp, #0x60
   3162c:	bl	c070 <mpfr_clear@plt>
   31630:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31634:	ldr	x1, [x0, #2576]
   31638:	add	x0, x0, #0xa10
   3163c:	blr	x1
   31640:	mrs	x1, tpidr_el0
   31644:	str	w24, [x1, x0]
   31648:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3164c:	ldr	x2, [x0, #2512]
   31650:	add	x0, x0, #0x9d0
   31654:	blr	x2
   31658:	str	x25, [x1, x0]
   3165c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31660:	ldr	x2, [x0, #2544]
   31664:	add	x0, x0, #0x9f0
   31668:	blr	x2
   3166c:	str	x26, [x1, x0]
   31670:	ldr	x0, [x20, #16]
   31674:	cmp	x26, x0
   31678:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   3167c:	b.gt	3182c <mpfr_div_z@@Base+0x378>
   31680:	cbz	w27, 3184c <mpfr_div_z@@Base+0x398>
   31684:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31688:	ldr	x1, [x0, #2576]
   3168c:	add	x0, x0, #0xa10
   31690:	blr	x1
   31694:	orr	w24, w24, #0x8
   31698:	mrs	x1, tpidr_el0
   3169c:	str	w24, [x1, x0]
   316a0:	ldp	x23, x24, [sp, #48]
   316a4:	ldp	x25, x26, [sp, #64]
   316a8:	b	31854 <mpfr_div_z@@Base+0x3a0>
   316ac:	ldr	w0, [x3, #4]
   316b0:	cbz	w0, 316dc <mpfr_div_z@@Base+0x228>
   316b4:	mov	w3, #0x0                   	// #0
   316b8:	mov	x2, #0x0                   	// #0
   316bc:	mov	x0, x20
   316c0:	bl	ba50 <mpfr_mul_ui@plt>
   316c4:	ldr	w0, [x22, #4]
   316c8:	tbz	w0, #31, 31854 <mpfr_div_z@@Base+0x3a0>
   316cc:	ldr	w0, [x20, #8]
   316d0:	neg	w0, w0
   316d4:	str	w0, [x20, #8]
   316d8:	b	31854 <mpfr_div_z@@Base+0x3a0>
   316dc:	mov	x1, #0x2                   	// #2
   316e0:	movk	x1, #0x8000, lsl #48
   316e4:	str	x1, [x20, #16]
   316e8:	mov	w27, w0
   316ec:	b	31854 <mpfr_div_z@@Base+0x3a0>
   316f0:	mov	w3, #0x0                   	// #0
   316f4:	mov	x2, #0x0                   	// #0
   316f8:	bl	cc60 <mpfr_div_ui@plt>
   316fc:	ldr	w0, [x19, #4]
   31700:	tbnz	w0, #31, 3170c <mpfr_div_z@@Base+0x258>
   31704:	ldp	x23, x24, [sp, #48]
   31708:	b	31854 <mpfr_div_z@@Base+0x3a0>
   3170c:	ldr	w0, [x20, #8]
   31710:	neg	w0, w0
   31714:	str	w0, [x20, #8]
   31718:	ldp	x23, x24, [sp, #48]
   3171c:	b	31854 <mpfr_div_z@@Base+0x3a0>
   31720:	ldr	x28, [x21, #16]
   31724:	ldr	x0, [x21]
   31728:	str	x0, [sp, #128]
   3172c:	ldr	w0, [x21, #8]
   31730:	str	w0, [sp, #136]
   31734:	str	xzr, [sp, #144]
   31738:	ldr	x0, [x21, #24]
   3173c:	str	x0, [sp, #152]
   31740:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31744:	ldr	x1, [x0, #2576]
   31748:	add	x0, x0, #0xa10
   3174c:	blr	x1
   31750:	mrs	x1, tpidr_el0
   31754:	add	x21, x1, x0
   31758:	str	wzr, [x1, x0]
   3175c:	add	x0, sp, #0x60
   31760:	mov	w3, #0x0                   	// #0
   31764:	mov	x2, x19
   31768:	add	x1, sp, #0x80
   3176c:	mov	x19, x0
   31770:	bl	c4d0 <mpfr_mul_z@plt>
   31774:	mov	w3, w23
   31778:	mov	x2, x22
   3177c:	mov	x1, x19
   31780:	mov	x0, x20
   31784:	bl	cc80 <mpfr_div_z@plt>
   31788:	mov	w27, w0
   3178c:	ldr	w1, [x21]
   31790:	mov	w0, #0x27                  	// #39
   31794:	tst	w1, w0
   31798:	b.ne	317f4 <mpfr_div_z@@Base+0x340>  // b.any
   3179c:	ldr	x1, [x20, #16]
   317a0:	add	x1, x28, x1
   317a4:	str	x1, [x20, #16]
   317a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   317ac:	ldr	x2, [x0, #2512]
   317b0:	add	x0, x0, #0x9d0
   317b4:	blr	x2
   317b8:	mrs	x2, tpidr_el0
   317bc:	ldr	x0, [x2, x0]
   317c0:	cmp	x1, x0
   317c4:	b.lt	31810 <mpfr_div_z@@Base+0x35c>  // b.tstop
   317c8:	ldr	x1, [x20, #16]
   317cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   317d0:	cmp	x1, x0
   317d4:	b.gt	31628 <mpfr_div_z@@Base+0x174>
   317d8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   317dc:	add	x2, x2, #0x1a8
   317e0:	mov	w1, #0xec                  	// #236
   317e4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   317e8:	add	x0, x0, #0x148
   317ec:	bl	cb40 <mpfr_assert_fail@plt>
   317f0:	b	31628 <mpfr_div_z@@Base+0x174>
   317f4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   317f8:	add	x2, x2, #0x158
   317fc:	mov	w1, #0xe8                  	// #232
   31800:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31804:	add	x0, x0, #0x148
   31808:	bl	cb40 <mpfr_assert_fail@plt>
   3180c:	b	3179c <mpfr_div_z@@Base+0x2e8>
   31810:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31814:	add	x2, x2, #0x180
   31818:	mov	w1, #0xeb                  	// #235
   3181c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31820:	add	x0, x0, #0x148
   31824:	bl	cb40 <mpfr_assert_fail@plt>
   31828:	b	317c8 <mpfr_div_z@@Base+0x314>
   3182c:	mov	w2, w23
   31830:	mov	w1, w27
   31834:	mov	x0, x20
   31838:	bl	cb30 <mpfr_check_range@plt>
   3183c:	mov	w27, w0
   31840:	ldp	x23, x24, [sp, #48]
   31844:	ldp	x25, x26, [sp, #64]
   31848:	b	31854 <mpfr_div_z@@Base+0x3a0>
   3184c:	ldp	x23, x24, [sp, #48]
   31850:	ldp	x25, x26, [sp, #64]
   31854:	mov	w0, w27
   31858:	ldp	x19, x20, [sp, #16]
   3185c:	ldp	x21, x22, [sp, #32]
   31860:	ldp	x27, x28, [sp, #80]
   31864:	ldp	x29, x30, [sp], #160
   31868:	ret

000000000003186c <mpfr_add_z@@Base>:
   3186c:	stp	x29, x30, [sp, #-48]!
   31870:	mov	x29, sp
   31874:	stp	x19, x20, [sp, #16]
   31878:	stp	x21, x22, [sp, #32]
   3187c:	mov	x20, x0
   31880:	mov	x21, x1
   31884:	mov	x19, x2
   31888:	mov	w22, w3
   3188c:	mov	x0, x2
   31890:	bl	be90 <__gmpz_fits_slong_p@plt>
   31894:	cbz	w0, 318c4 <mpfr_add_z@@Base+0x58>
   31898:	mov	x0, x19
   3189c:	bl	ba20 <__gmpz_get_si@plt>
   318a0:	mov	w3, w22
   318a4:	mov	x2, x0
   318a8:	mov	x1, x21
   318ac:	mov	x0, x20
   318b0:	bl	c7f0 <mpfr_add_si@plt>
   318b4:	ldp	x19, x20, [sp, #16]
   318b8:	ldp	x21, x22, [sp, #32]
   318bc:	ldp	x29, x30, [sp], #48
   318c0:	ret
   318c4:	adrp	x4, 80000 <__gmpfr_l2b@@Base+0x200>
   318c8:	ldr	x4, [x4, #4008]
   318cc:	mov	w3, w22
   318d0:	mov	x2, x19
   318d4:	mov	x1, x21
   318d8:	mov	x0, x20
   318dc:	bl	31308 <mpfr_setsign@@Base+0xb0>
   318e0:	b	318b4 <mpfr_add_z@@Base+0x48>

00000000000318e4 <mpfr_sub_z@@Base>:
   318e4:	stp	x29, x30, [sp, #-48]!
   318e8:	mov	x29, sp
   318ec:	stp	x19, x20, [sp, #16]
   318f0:	stp	x21, x22, [sp, #32]
   318f4:	mov	x20, x0
   318f8:	mov	x21, x1
   318fc:	mov	x19, x2
   31900:	mov	w22, w3
   31904:	mov	x0, x2
   31908:	bl	be90 <__gmpz_fits_slong_p@plt>
   3190c:	cbz	w0, 3193c <mpfr_sub_z@@Base+0x58>
   31910:	mov	x0, x19
   31914:	bl	ba20 <__gmpz_get_si@plt>
   31918:	mov	w3, w22
   3191c:	mov	x2, x0
   31920:	mov	x1, x21
   31924:	mov	x0, x20
   31928:	bl	c060 <mpfr_sub_si@plt>
   3192c:	ldp	x19, x20, [sp, #16]
   31930:	ldp	x21, x22, [sp, #32]
   31934:	ldp	x29, x30, [sp], #48
   31938:	ret
   3193c:	adrp	x4, 80000 <__gmpfr_l2b@@Base+0x200>
   31940:	ldr	x4, [x4, #3944]
   31944:	mov	w3, w22
   31948:	mov	x2, x19
   3194c:	mov	x1, x21
   31950:	mov	x0, x20
   31954:	bl	31308 <mpfr_setsign@@Base+0xb0>
   31958:	b	3192c <mpfr_sub_z@@Base+0x48>

000000000003195c <mpfr_z_sub@@Base>:
   3195c:	stp	x29, x30, [sp, #-128]!
   31960:	mov	x29, sp
   31964:	stp	x19, x20, [sp, #16]
   31968:	stp	x21, x22, [sp, #32]
   3196c:	mov	x20, x0
   31970:	mov	x19, x1
   31974:	mov	x22, x2
   31978:	mov	w21, w3
   3197c:	mov	x0, x1
   31980:	bl	be90 <__gmpz_fits_slong_p@plt>
   31984:	cbz	w0, 319bc <mpfr_z_sub@@Base+0x60>
   31988:	mov	x0, x19
   3198c:	bl	ba20 <__gmpz_get_si@plt>
   31990:	mov	w3, w21
   31994:	mov	x2, x22
   31998:	mov	x1, x0
   3199c:	mov	x0, x20
   319a0:	bl	c5d0 <mpfr_si_sub@plt>
   319a4:	mov	w22, w0
   319a8:	mov	w0, w22
   319ac:	ldp	x19, x20, [sp, #16]
   319b0:	ldp	x21, x22, [sp, #32]
   319b4:	ldp	x29, x30, [sp], #128
   319b8:	ret
   319bc:	stp	x23, x24, [sp, #48]
   319c0:	stp	x25, x26, [sp, #64]
   319c4:	stp	x27, x28, [sp, #80]
   319c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   319cc:	ldr	x1, [x0, #2576]
   319d0:	add	x0, x0, #0xa10
   319d4:	blr	x1
   319d8:	mrs	x1, tpidr_el0
   319dc:	add	x27, x1, x0
   319e0:	ldr	w28, [x1, x0]
   319e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   319e8:	ldr	x2, [x0, #2512]
   319ec:	add	x0, x0, #0x9d0
   319f0:	blr	x2
   319f4:	add	x26, x1, x0
   319f8:	ldr	x23, [x1, x0]
   319fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31a00:	ldr	x2, [x0, #2544]
   31a04:	add	x0, x0, #0x9f0
   31a08:	blr	x2
   31a0c:	add	x25, x1, x0
   31a10:	ldr	x24, [x1, x0]
   31a14:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   31a18:	str	x0, [x26]
   31a1c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   31a20:	str	x0, [x25]
   31a24:	add	x0, sp, #0x60
   31a28:	mov	x1, x19
   31a2c:	mov	x19, x0
   31a30:	bl	31280 <mpfr_setsign@@Base+0x28>
   31a34:	mov	w3, w21
   31a38:	mov	x2, x22
   31a3c:	mov	x1, x19
   31a40:	mov	x0, x20
   31a44:	bl	bb70 <mpfr_sub@plt>
   31a48:	mov	w22, w0
   31a4c:	ldr	w0, [x27]
   31a50:	orr	w28, w28, w0
   31a54:	mov	x0, x19
   31a58:	bl	c070 <mpfr_clear@plt>
   31a5c:	str	w28, [x27]
   31a60:	str	x23, [x26]
   31a64:	str	x24, [x25]
   31a68:	ldr	x0, [x20, #16]
   31a6c:	cmp	x24, x0
   31a70:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   31a74:	b.gt	31aa8 <mpfr_z_sub@@Base+0x14c>
   31a78:	cbz	w22, 31acc <mpfr_z_sub@@Base+0x170>
   31a7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31a80:	ldr	x1, [x0, #2576]
   31a84:	add	x0, x0, #0xa10
   31a88:	blr	x1
   31a8c:	orr	w28, w28, #0x8
   31a90:	mrs	x1, tpidr_el0
   31a94:	str	w28, [x1, x0]
   31a98:	ldp	x23, x24, [sp, #48]
   31a9c:	ldp	x25, x26, [sp, #64]
   31aa0:	ldp	x27, x28, [sp, #80]
   31aa4:	b	319a8 <mpfr_z_sub@@Base+0x4c>
   31aa8:	mov	w2, w21
   31aac:	mov	w1, w22
   31ab0:	mov	x0, x20
   31ab4:	bl	cb30 <mpfr_check_range@plt>
   31ab8:	mov	w22, w0
   31abc:	ldp	x23, x24, [sp, #48]
   31ac0:	ldp	x25, x26, [sp, #64]
   31ac4:	ldp	x27, x28, [sp, #80]
   31ac8:	b	319a8 <mpfr_z_sub@@Base+0x4c>
   31acc:	ldp	x23, x24, [sp, #48]
   31ad0:	ldp	x25, x26, [sp, #64]
   31ad4:	ldp	x27, x28, [sp, #80]
   31ad8:	b	319a8 <mpfr_z_sub@@Base+0x4c>

0000000000031adc <mpfr_cmp_z@@Base>:
   31adc:	stp	x29, x30, [sp, #-80]!
   31ae0:	mov	x29, sp
   31ae4:	stp	x19, x20, [sp, #16]
   31ae8:	mov	x20, x0
   31aec:	mov	x19, x1
   31af0:	ldr	x1, [x0, #16]
   31af4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31af8:	cmp	x1, x0
   31afc:	b.le	31bb0 <mpfr_cmp_z@@Base+0xd4>
   31b00:	mov	x0, x19
   31b04:	bl	be90 <__gmpz_fits_slong_p@plt>
   31b08:	cbnz	w0, 31bd8 <mpfr_cmp_z@@Base+0xfc>
   31b0c:	stp	x21, x22, [sp, #32]
   31b10:	ldr	w2, [x19, #4]
   31b14:	cmp	w2, #0x0
   31b18:	cneg	w2, w2, lt  // lt = tstop
   31b1c:	sxtw	x2, w2
   31b20:	mov	x1, #0x40                  	// #64
   31b24:	cmp	x2, #0x1
   31b28:	b.ls	31b44 <mpfr_cmp_z@@Base+0x68>  // b.plast
   31b2c:	ldr	x0, [x19, #8]
   31b30:	add	x0, x0, x2, lsl #3
   31b34:	ldur	x1, [x0, #-8]
   31b38:	lsl	x2, x2, #6
   31b3c:	clz	x1, x1
   31b40:	sub	x1, x2, x1
   31b44:	add	x21, sp, #0x30
   31b48:	mov	x0, x21
   31b4c:	bl	ca80 <mpfr_init2@plt>
   31b50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31b54:	ldr	x1, [x0, #2576]
   31b58:	add	x0, x0, #0xa10
   31b5c:	blr	x1
   31b60:	mrs	x1, tpidr_el0
   31b64:	ldr	w22, [x1, x0]
   31b68:	mov	w2, #0x0                   	// #0
   31b6c:	mov	x1, x19
   31b70:	mov	x0, x21
   31b74:	bl	c240 <mpfr_set_z@plt>
   31b78:	cbnz	w0, 31bf8 <mpfr_cmp_z@@Base+0x11c>
   31b7c:	add	x21, sp, #0x30
   31b80:	mov	w2, #0x1                   	// #1
   31b84:	mov	x1, x21
   31b88:	mov	x0, x20
   31b8c:	bl	c9a0 <mpfr_cmp3@plt>
   31b90:	mov	w19, w0
   31b94:	mov	x0, x21
   31b98:	bl	c070 <mpfr_clear@plt>
   31b9c:	ldp	x21, x22, [sp, #32]
   31ba0:	mov	w0, w19
   31ba4:	ldp	x19, x20, [sp, #16]
   31ba8:	ldp	x29, x30, [sp], #80
   31bac:	ret
   31bb0:	ldr	w0, [x19, #4]
   31bb4:	mov	x1, #0xffffffffffffffff    	// #-1
   31bb8:	tbnz	w0, #31, 31bc4 <mpfr_cmp_z@@Base+0xe8>
   31bbc:	cmp	w0, #0x0
   31bc0:	cset	x1, gt
   31bc4:	mov	x2, #0x0                   	// #0
   31bc8:	mov	x0, x20
   31bcc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   31bd0:	mov	w19, w0
   31bd4:	b	31ba0 <mpfr_cmp_z@@Base+0xc4>
   31bd8:	mov	x0, x19
   31bdc:	bl	ba20 <__gmpz_get_si@plt>
   31be0:	mov	x2, #0x0                   	// #0
   31be4:	mov	x1, x0
   31be8:	mov	x0, x20
   31bec:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   31bf0:	mov	w19, w0
   31bf4:	b	31ba0 <mpfr_cmp_z@@Base+0xc4>
   31bf8:	add	x0, sp, #0x30
   31bfc:	mov	w3, #0x1                   	// #1
   31c00:	mov	x2, #0x2                   	// #2
   31c04:	mov	x1, x0
   31c08:	bl	c8f0 <mpfr_div_2ui@plt>
   31c0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31c10:	ldr	x1, [x0, #2576]
   31c14:	add	x0, x0, #0xa10
   31c18:	blr	x1
   31c1c:	mrs	x1, tpidr_el0
   31c20:	str	w22, [x1, x0]
   31c24:	b	31b7c <mpfr_cmp_z@@Base+0xa0>

0000000000031c28 <mpfr_mul_q@@Base>:
   31c28:	stp	x29, x30, [sp, #-16]!
   31c2c:	mov	x29, sp
   31c30:	mov	w4, w3
   31c34:	add	x3, x2, #0x10
   31c38:	bl	3152c <mpfr_div_z@@Base+0x78>
   31c3c:	ldp	x29, x30, [sp], #16
   31c40:	ret

0000000000031c44 <mpfr_div_q@@Base>:
   31c44:	stp	x29, x30, [sp, #-16]!
   31c48:	mov	x29, sp
   31c4c:	mov	w4, w3
   31c50:	mov	x3, x2
   31c54:	add	x2, x2, #0x10
   31c58:	bl	3152c <mpfr_div_z@@Base+0x78>
   31c5c:	ldp	x29, x30, [sp], #16
   31c60:	ret

0000000000031c64 <mpfr_add_q@@Base>:
   31c64:	stp	x29, x30, [sp, #-192]!
   31c68:	mov	x29, sp
   31c6c:	stp	x19, x20, [sp, #16]
   31c70:	stp	x21, x22, [sp, #32]
   31c74:	mov	x20, x0
   31c78:	mov	x21, x1
   31c7c:	str	x2, [sp, #104]
   31c80:	str	w3, [sp, #116]
   31c84:	ldr	x0, [x1, #16]
   31c88:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   31c8c:	cmp	x0, x1
   31c90:	b.le	31e90 <mpfr_add_q@@Base+0x22c>
   31c94:	stp	x23, x24, [sp, #48]
   31c98:	stp	x25, x26, [sp, #64]
   31c9c:	stp	x27, x28, [sp, #80]
   31ca0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31ca4:	ldr	x1, [x0, #2576]
   31ca8:	add	x0, x0, #0xa10
   31cac:	blr	x1
   31cb0:	mrs	x1, tpidr_el0
   31cb4:	ldr	w25, [x1, x0]
   31cb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31cbc:	ldr	x2, [x0, #2512]
   31cc0:	add	x0, x0, #0x9d0
   31cc4:	blr	x2
   31cc8:	add	x2, x1, x0
   31ccc:	ldr	x26, [x1, x0]
   31cd0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31cd4:	ldr	x3, [x0, #2544]
   31cd8:	add	x0, x0, #0x9f0
   31cdc:	blr	x3
   31ce0:	ldr	x27, [x1, x0]
   31ce4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   31ce8:	str	x3, [x2]
   31cec:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   31cf0:	str	x2, [x1, x0]
   31cf4:	ldr	x19, [x20]
   31cf8:	add	x19, x19, #0xa
   31cfc:	mov	x1, x19
   31d00:	add	x0, sp, #0xa0
   31d04:	bl	ca80 <mpfr_init2@plt>
   31d08:	mov	x1, x19
   31d0c:	add	x0, sp, #0x80
   31d10:	bl	ca80 <mpfr_init2@plt>
   31d14:	mov	x0, #0x40                  	// #64
   31d18:	str	x0, [sp, #120]
   31d1c:	add	x23, sp, #0x80
   31d20:	mrs	x24, tpidr_el0
   31d24:	add	x22, sp, #0xa0
   31d28:	mov	w2, #0x0                   	// #0
   31d2c:	ldr	x1, [sp, #104]
   31d30:	mov	x0, x23
   31d34:	bl	c850 <mpfr_set_q@plt>
   31d38:	cbz	w0, 31f98 <mpfr_add_q@@Base+0x334>
   31d3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31d40:	ldr	x1, [x0, #2576]
   31d44:	add	x0, x0, #0xa10
   31d48:	blr	x1
   31d4c:	add	x28, x24, x0
   31d50:	str	wzr, [x24, x0]
   31d54:	mov	w3, #0x0                   	// #0
   31d58:	mov	x2, x23
   31d5c:	mov	x1, x21
   31d60:	mov	x0, x22
   31d64:	bl	c1a0 <mpfr_add@plt>
   31d68:	ldr	w0, [x28]
   31d6c:	tst	x0, #0x3
   31d70:	b.ne	31fb4 <mpfr_add_q@@Base+0x350>  // b.any
   31d74:	ldr	x1, [sp, #176]
   31d78:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31d7c:	cmp	x1, x0
   31d80:	b.eq	31fcc <mpfr_add_q@@Base+0x368>  // b.none
   31d84:	sub	x0, x19, #0x1
   31d88:	ldr	x2, [sp, #144]
   31d8c:	subs	x2, x2, x1
   31d90:	csel	x2, x2, xzr, pl  // pl = nfrst
   31d94:	sub	x2, x0, x2
   31d98:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31d9c:	cmp	x1, x0
   31da0:	b.le	31fcc <mpfr_add_q@@Base+0x368>
   31da4:	ldr	w28, [sp, #116]
   31da8:	cmp	w28, #0x0
   31dac:	ldr	x3, [x20]
   31db0:	cinc	x3, x3, eq  // eq = none
   31db4:	ldr	x0, [sp, #160]
   31db8:	add	x1, x0, #0x3e
   31dbc:	subs	x0, x0, #0x1
   31dc0:	csel	x1, x1, x0, mi  // mi = first
   31dc4:	asr	x1, x1, #6
   31dc8:	add	x1, x1, #0x1
   31dcc:	ldr	x0, [sp, #184]
   31dd0:	bl	c370 <mpfr_round_p@plt>
   31dd4:	cbz	w0, 31fcc <mpfr_add_q@@Base+0x368>
   31dd8:	ldr	w3, [sp, #168]
   31ddc:	mov	w2, w28
   31de0:	add	x1, sp, #0xa0
   31de4:	mov	x0, x20
   31de8:	bl	c6a0 <mpfr_set4@plt>
   31dec:	mov	w19, w0
   31df0:	add	x0, sp, #0xa0
   31df4:	bl	c070 <mpfr_clear@plt>
   31df8:	add	x0, sp, #0x80
   31dfc:	bl	c070 <mpfr_clear@plt>
   31e00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31e04:	ldr	x1, [x0, #2576]
   31e08:	add	x0, x0, #0xa10
   31e0c:	blr	x1
   31e10:	mrs	x1, tpidr_el0
   31e14:	str	w25, [x1, x0]
   31e18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31e1c:	ldr	x2, [x0, #2512]
   31e20:	add	x0, x0, #0x9d0
   31e24:	blr	x2
   31e28:	str	x26, [x1, x0]
   31e2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31e30:	ldr	x2, [x0, #2544]
   31e34:	add	x0, x0, #0x9f0
   31e38:	blr	x2
   31e3c:	str	x27, [x1, x0]
   31e40:	ldr	x0, [x20, #16]
   31e44:	cmp	x27, x0
   31e48:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   31e4c:	b.gt	3202c <mpfr_add_q@@Base+0x3c8>
   31e50:	cbz	w19, 32050 <mpfr_add_q@@Base+0x3ec>
   31e54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31e58:	ldr	x1, [x0, #2576]
   31e5c:	add	x0, x0, #0xa10
   31e60:	blr	x1
   31e64:	orr	w25, w25, #0x8
   31e68:	mrs	x1, tpidr_el0
   31e6c:	str	w25, [x1, x0]
   31e70:	ldp	x23, x24, [sp, #48]
   31e74:	ldp	x25, x26, [sp, #64]
   31e78:	ldp	x27, x28, [sp, #80]
   31e7c:	mov	w0, w19
   31e80:	ldp	x19, x20, [sp, #16]
   31e84:	ldp	x21, x22, [sp, #32]
   31e88:	ldp	x29, x30, [sp], #192
   31e8c:	ret
   31e90:	mov	x1, #0x2                   	// #2
   31e94:	movk	x1, #0x8000, lsl #48
   31e98:	cmp	x0, x1
   31e9c:	b.eq	31ed0 <mpfr_add_q@@Base+0x26c>  // b.none
   31ea0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   31ea4:	cmp	x0, x1
   31ea8:	b.eq	31f00 <mpfr_add_q@@Base+0x29c>  // b.none
   31eac:	ldr	x0, [sp, #104]
   31eb0:	ldr	w0, [x0, #4]
   31eb4:	cbz	w0, 31f7c <mpfr_add_q@@Base+0x318>
   31eb8:	ldr	w2, [sp, #116]
   31ebc:	ldr	x1, [sp, #104]
   31ec0:	mov	x0, x20
   31ec4:	bl	c850 <mpfr_set_q@plt>
   31ec8:	mov	w19, w0
   31ecc:	b	31e7c <mpfr_add_q@@Base+0x218>
   31ed0:	str	x1, [x20, #16]
   31ed4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31ed8:	ldr	x1, [x0, #2576]
   31edc:	add	x0, x0, #0xa10
   31ee0:	blr	x1
   31ee4:	mrs	x1, tpidr_el0
   31ee8:	add	x0, x1, x0
   31eec:	ldr	w1, [x0]
   31ef0:	orr	w1, w1, #0x4
   31ef4:	str	w1, [x0]
   31ef8:	mov	w19, #0x0                   	// #0
   31efc:	b	31e7c <mpfr_add_q@@Base+0x218>
   31f00:	ldr	x0, [sp, #104]
   31f04:	ldr	w19, [x0, #20]
   31f08:	cbz	w19, 31f24 <mpfr_add_q@@Base+0x2c0>
   31f0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31f10:	str	x0, [x20, #16]
   31f14:	ldr	w0, [x21, #8]
   31f18:	str	w0, [x20, #8]
   31f1c:	mov	w19, #0x0                   	// #0
   31f20:	b	31e7c <mpfr_add_q@@Base+0x218>
   31f24:	ldr	w1, [x0, #4]
   31f28:	mov	w0, #0xffffffff            	// #-1
   31f2c:	tbnz	w1, #31, 31f38 <mpfr_add_q@@Base+0x2d4>
   31f30:	cmp	w1, #0x0
   31f34:	cset	w0, gt
   31f38:	ldr	w1, [x21, #8]
   31f3c:	mul	w0, w0, w1
   31f40:	cmp	w0, #0x0
   31f44:	b.gt	31f0c <mpfr_add_q@@Base+0x2a8>
   31f48:	mov	x0, #0x2                   	// #2
   31f4c:	movk	x0, #0x8000, lsl #48
   31f50:	str	x0, [x20, #16]
   31f54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   31f58:	ldr	x1, [x0, #2576]
   31f5c:	add	x0, x0, #0xa10
   31f60:	blr	x1
   31f64:	mrs	x1, tpidr_el0
   31f68:	add	x0, x1, x0
   31f6c:	ldr	w1, [x0]
   31f70:	orr	w1, w1, #0x4
   31f74:	str	w1, [x0]
   31f78:	b	31e7c <mpfr_add_q@@Base+0x218>
   31f7c:	ldr	w3, [x21, #8]
   31f80:	ldr	w2, [sp, #116]
   31f84:	mov	x1, x21
   31f88:	mov	x0, x20
   31f8c:	bl	c6a0 <mpfr_set4@plt>
   31f90:	mov	w19, w0
   31f94:	b	31e7c <mpfr_add_q@@Base+0x218>
   31f98:	ldr	w3, [sp, #116]
   31f9c:	add	x2, sp, #0x80
   31fa0:	mov	x1, x21
   31fa4:	mov	x0, x20
   31fa8:	bl	c1a0 <mpfr_add@plt>
   31fac:	mov	w19, w0
   31fb0:	b	31df0 <mpfr_add_q@@Base+0x18c>
   31fb4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31fb8:	add	x2, x2, #0x1e8
   31fbc:	mov	w1, #0x144                 	// #324
   31fc0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   31fc4:	add	x0, x0, #0x148
   31fc8:	bl	cb40 <mpfr_assert_fail@plt>
   31fcc:	mov	x0, #0xfffffffffffffeff    	// #-257
   31fd0:	movk	x0, #0x7fff, lsl #48
   31fd4:	sub	x0, x0, x19
   31fd8:	ldr	x1, [sp, #120]
   31fdc:	cmp	x0, x1
   31fe0:	b.lt	32014 <mpfr_add_q@@Base+0x3b0>  // b.tstop
   31fe4:	ldr	x0, [sp, #120]
   31fe8:	add	x19, x19, x0
   31fec:	add	x0, x19, x19, lsr #63
   31ff0:	asr	x0, x0, #1
   31ff4:	str	x0, [sp, #120]
   31ff8:	mov	x1, x19
   31ffc:	mov	x0, x22
   32000:	bl	bed0 <mpfr_set_prec@plt>
   32004:	mov	x1, x19
   32008:	mov	x0, x23
   3200c:	bl	bed0 <mpfr_set_prec@plt>
   32010:	b	31d28 <mpfr_add_q@@Base+0xc4>
   32014:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   32018:	add	x2, x2, #0x118
   3201c:	mov	w1, #0x153                 	// #339
   32020:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32024:	add	x0, x0, #0x148
   32028:	bl	cb40 <mpfr_assert_fail@plt>
   3202c:	ldr	w2, [sp, #116]
   32030:	mov	w1, w19
   32034:	mov	x0, x20
   32038:	bl	cb30 <mpfr_check_range@plt>
   3203c:	mov	w19, w0
   32040:	ldp	x23, x24, [sp, #48]
   32044:	ldp	x25, x26, [sp, #64]
   32048:	ldp	x27, x28, [sp, #80]
   3204c:	b	31e7c <mpfr_add_q@@Base+0x218>
   32050:	ldp	x23, x24, [sp, #48]
   32054:	ldp	x25, x26, [sp, #64]
   32058:	ldp	x27, x28, [sp, #80]
   3205c:	b	31e7c <mpfr_add_q@@Base+0x218>

0000000000032060 <mpfr_sub_q@@Base>:
   32060:	stp	x29, x30, [sp, #-192]!
   32064:	mov	x29, sp
   32068:	stp	x19, x20, [sp, #16]
   3206c:	stp	x21, x22, [sp, #32]
   32070:	mov	x19, x0
   32074:	mov	x21, x1
   32078:	str	x2, [sp, #104]
   3207c:	mov	w22, w3
   32080:	ldr	x0, [x1, #16]
   32084:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   32088:	cmp	x0, x1
   3208c:	b.le	3228c <mpfr_sub_q@@Base+0x22c>
   32090:	stp	x23, x24, [sp, #48]
   32094:	stp	x25, x26, [sp, #64]
   32098:	stp	x27, x28, [sp, #80]
   3209c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   320a0:	ldr	x1, [x0, #2576]
   320a4:	add	x0, x0, #0xa10
   320a8:	blr	x1
   320ac:	mrs	x1, tpidr_el0
   320b0:	ldr	w24, [x1, x0]
   320b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   320b8:	ldr	x2, [x0, #2512]
   320bc:	add	x0, x0, #0x9d0
   320c0:	blr	x2
   320c4:	add	x2, x1, x0
   320c8:	ldr	x26, [x1, x0]
   320cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   320d0:	ldr	x3, [x0, #2544]
   320d4:	add	x0, x0, #0x9f0
   320d8:	blr	x3
   320dc:	ldr	x27, [x1, x0]
   320e0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   320e4:	str	x3, [x2]
   320e8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   320ec:	str	x2, [x1, x0]
   320f0:	ldr	x20, [x19]
   320f4:	add	x20, x20, #0xa
   320f8:	mov	x1, x20
   320fc:	add	x0, sp, #0xa0
   32100:	bl	ca80 <mpfr_init2@plt>
   32104:	mov	x1, x20
   32108:	add	x0, sp, #0x80
   3210c:	bl	ca80 <mpfr_init2@plt>
   32110:	mov	x0, #0x40                  	// #64
   32114:	str	x0, [sp, #120]
   32118:	add	x23, sp, #0x80
   3211c:	mrs	x25, tpidr_el0
   32120:	add	x0, sp, #0xa0
   32124:	str	x0, [sp, #112]
   32128:	mov	w2, #0x0                   	// #0
   3212c:	ldr	x1, [sp, #104]
   32130:	mov	x0, x23
   32134:	bl	c850 <mpfr_set_q@plt>
   32138:	cbz	w0, 323b8 <mpfr_sub_q@@Base+0x358>
   3213c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32140:	ldr	x1, [x0, #2576]
   32144:	add	x0, x0, #0xa10
   32148:	blr	x1
   3214c:	add	x28, x25, x0
   32150:	str	wzr, [x25, x0]
   32154:	mov	w3, #0x0                   	// #0
   32158:	mov	x2, x23
   3215c:	mov	x1, x21
   32160:	ldr	x0, [sp, #112]
   32164:	bl	bb70 <mpfr_sub@plt>
   32168:	ldr	w0, [x28]
   3216c:	tst	x0, #0x3
   32170:	b.ne	323d4 <mpfr_sub_q@@Base+0x374>  // b.any
   32174:	ldr	x1, [sp, #176]
   32178:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3217c:	cmp	x1, x0
   32180:	b.eq	323ec <mpfr_sub_q@@Base+0x38c>  // b.none
   32184:	sub	x0, x20, #0x1
   32188:	ldr	x2, [sp, #144]
   3218c:	subs	x2, x2, x1
   32190:	csel	x2, x2, xzr, pl  // pl = nfrst
   32194:	sub	x2, x0, x2
   32198:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3219c:	cmp	x1, x0
   321a0:	b.le	323ec <mpfr_sub_q@@Base+0x38c>
   321a4:	cmp	w22, #0x0
   321a8:	ldr	x3, [x19]
   321ac:	cinc	x3, x3, eq  // eq = none
   321b0:	ldr	x0, [sp, #160]
   321b4:	add	x1, x0, #0x3e
   321b8:	subs	x0, x0, #0x1
   321bc:	csel	x1, x1, x0, mi  // mi = first
   321c0:	asr	x1, x1, #6
   321c4:	add	x1, x1, #0x1
   321c8:	ldr	x0, [sp, #184]
   321cc:	bl	c370 <mpfr_round_p@plt>
   321d0:	cbz	w0, 323ec <mpfr_sub_q@@Base+0x38c>
   321d4:	ldr	w3, [sp, #168]
   321d8:	mov	w2, w22
   321dc:	add	x1, sp, #0xa0
   321e0:	mov	x0, x19
   321e4:	bl	c6a0 <mpfr_set4@plt>
   321e8:	mov	w20, w0
   321ec:	add	x0, sp, #0xa0
   321f0:	bl	c070 <mpfr_clear@plt>
   321f4:	add	x0, sp, #0x80
   321f8:	bl	c070 <mpfr_clear@plt>
   321fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32200:	ldr	x1, [x0, #2576]
   32204:	add	x0, x0, #0xa10
   32208:	blr	x1
   3220c:	mrs	x1, tpidr_el0
   32210:	str	w24, [x1, x0]
   32214:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32218:	ldr	x2, [x0, #2512]
   3221c:	add	x0, x0, #0x9d0
   32220:	blr	x2
   32224:	str	x26, [x1, x0]
   32228:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3222c:	ldr	x2, [x0, #2544]
   32230:	add	x0, x0, #0x9f0
   32234:	blr	x2
   32238:	str	x27, [x1, x0]
   3223c:	ldr	x0, [x19, #16]
   32240:	cmp	x27, x0
   32244:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   32248:	b.gt	3244c <mpfr_sub_q@@Base+0x3ec>
   3224c:	cbz	w20, 32470 <mpfr_sub_q@@Base+0x410>
   32250:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32254:	ldr	x1, [x0, #2576]
   32258:	add	x0, x0, #0xa10
   3225c:	blr	x1
   32260:	orr	w24, w24, #0x8
   32264:	mrs	x1, tpidr_el0
   32268:	str	w24, [x1, x0]
   3226c:	ldp	x23, x24, [sp, #48]
   32270:	ldp	x25, x26, [sp, #64]
   32274:	ldp	x27, x28, [sp, #80]
   32278:	mov	w0, w20
   3227c:	ldp	x19, x20, [sp, #16]
   32280:	ldp	x21, x22, [sp, #32]
   32284:	ldp	x29, x30, [sp], #192
   32288:	ret
   3228c:	mov	x1, #0x2                   	// #2
   32290:	movk	x1, #0x8000, lsl #48
   32294:	cmp	x0, x1
   32298:	b.eq	322ec <mpfr_sub_q@@Base+0x28c>  // b.none
   3229c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   322a0:	cmp	x0, x1
   322a4:	b.eq	3231c <mpfr_sub_q@@Base+0x2bc>  // b.none
   322a8:	ldr	x0, [sp, #104]
   322ac:	ldr	w0, [x0, #4]
   322b0:	cbz	w0, 32394 <mpfr_sub_q@@Base+0x334>
   322b4:	cmp	w3, #0x2
   322b8:	b.eq	323b0 <mpfr_sub_q@@Base+0x350>  // b.none
   322bc:	cmp	w3, #0x3
   322c0:	mov	w0, #0x2                   	// #2
   322c4:	csel	w22, w3, w0, ne  // ne = any
   322c8:	mov	w2, w22
   322cc:	ldr	x1, [sp, #104]
   322d0:	mov	x0, x19
   322d4:	bl	c850 <mpfr_set_q@plt>
   322d8:	ldr	w1, [x19, #8]
   322dc:	neg	w1, w1
   322e0:	str	w1, [x19, #8]
   322e4:	neg	w20, w0
   322e8:	b	32278 <mpfr_sub_q@@Base+0x218>
   322ec:	str	x1, [x19, #16]
   322f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   322f4:	ldr	x1, [x0, #2576]
   322f8:	add	x0, x0, #0xa10
   322fc:	blr	x1
   32300:	mrs	x1, tpidr_el0
   32304:	add	x0, x1, x0
   32308:	ldr	w1, [x0]
   3230c:	orr	w1, w1, #0x4
   32310:	str	w1, [x0]
   32314:	mov	w20, #0x0                   	// #0
   32318:	b	32278 <mpfr_sub_q@@Base+0x218>
   3231c:	ldr	x0, [sp, #104]
   32320:	ldr	w20, [x0, #20]
   32324:	cbz	w20, 32340 <mpfr_sub_q@@Base+0x2e0>
   32328:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3232c:	str	x0, [x19, #16]
   32330:	ldr	w0, [x21, #8]
   32334:	str	w0, [x19, #8]
   32338:	mov	w20, #0x0                   	// #0
   3233c:	b	32278 <mpfr_sub_q@@Base+0x218>
   32340:	ldr	w1, [x0, #4]
   32344:	mov	w0, #0xffffffff            	// #-1
   32348:	tbnz	w1, #31, 32354 <mpfr_sub_q@@Base+0x2f4>
   3234c:	cmp	w1, #0x0
   32350:	cset	w0, gt
   32354:	ldr	w1, [x21, #8]
   32358:	mul	w0, w0, w1
   3235c:	tbnz	w0, #31, 32328 <mpfr_sub_q@@Base+0x2c8>
   32360:	mov	x0, #0x2                   	// #2
   32364:	movk	x0, #0x8000, lsl #48
   32368:	str	x0, [x19, #16]
   3236c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32370:	ldr	x1, [x0, #2576]
   32374:	add	x0, x0, #0xa10
   32378:	blr	x1
   3237c:	mrs	x1, tpidr_el0
   32380:	add	x0, x1, x0
   32384:	ldr	w1, [x0]
   32388:	orr	w1, w1, #0x4
   3238c:	str	w1, [x0]
   32390:	b	32278 <mpfr_sub_q@@Base+0x218>
   32394:	ldr	w3, [x21, #8]
   32398:	mov	w2, w22
   3239c:	mov	x1, x21
   323a0:	mov	x0, x19
   323a4:	bl	c6a0 <mpfr_set4@plt>
   323a8:	mov	w20, w0
   323ac:	b	32278 <mpfr_sub_q@@Base+0x218>
   323b0:	mov	w22, #0x3                   	// #3
   323b4:	b	322c8 <mpfr_sub_q@@Base+0x268>
   323b8:	mov	w3, w22
   323bc:	add	x2, sp, #0x80
   323c0:	mov	x1, x21
   323c4:	mov	x0, x19
   323c8:	bl	bb70 <mpfr_sub@plt>
   323cc:	mov	w20, w0
   323d0:	b	321ec <mpfr_sub_q@@Base+0x18c>
   323d4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   323d8:	add	x2, x2, #0x1e8
   323dc:	mov	w1, #0x1a3                 	// #419
   323e0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   323e4:	add	x0, x0, #0x148
   323e8:	bl	cb40 <mpfr_assert_fail@plt>
   323ec:	mov	x0, #0xfffffffffffffeff    	// #-257
   323f0:	movk	x0, #0x7fff, lsl #48
   323f4:	sub	x0, x0, x20
   323f8:	ldr	x1, [sp, #120]
   323fc:	cmp	x0, x1
   32400:	b.lt	32434 <mpfr_sub_q@@Base+0x3d4>  // b.tstop
   32404:	ldr	x0, [sp, #120]
   32408:	add	x20, x20, x0
   3240c:	add	x0, x20, x20, lsr #63
   32410:	asr	x0, x0, #1
   32414:	str	x0, [sp, #120]
   32418:	mov	x1, x20
   3241c:	ldr	x0, [sp, #112]
   32420:	bl	bed0 <mpfr_set_prec@plt>
   32424:	mov	x1, x20
   32428:	mov	x0, x23
   3242c:	bl	bed0 <mpfr_set_prec@plt>
   32430:	b	32128 <mpfr_sub_q@@Base+0xc8>
   32434:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   32438:	add	x2, x2, #0x118
   3243c:	mov	w1, #0x1b3                 	// #435
   32440:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32444:	add	x0, x0, #0x148
   32448:	bl	cb40 <mpfr_assert_fail@plt>
   3244c:	mov	w2, w22
   32450:	mov	w1, w20
   32454:	mov	x0, x19
   32458:	bl	cb30 <mpfr_check_range@plt>
   3245c:	mov	w20, w0
   32460:	ldp	x23, x24, [sp, #48]
   32464:	ldp	x25, x26, [sp, #64]
   32468:	ldp	x27, x28, [sp, #80]
   3246c:	b	32278 <mpfr_sub_q@@Base+0x218>
   32470:	ldp	x23, x24, [sp, #48]
   32474:	ldp	x25, x26, [sp, #64]
   32478:	ldp	x27, x28, [sp, #80]
   3247c:	b	32278 <mpfr_sub_q@@Base+0x218>

0000000000032480 <mpfr_cmp_q@@Base>:
   32480:	stp	x29, x30, [sp, #-128]!
   32484:	mov	x29, sp
   32488:	stp	x19, x20, [sp, #16]
   3248c:	mov	x20, x0
   32490:	mov	x19, x1
   32494:	ldr	w2, [x1, #20]
   32498:	cbz	w2, 325a4 <mpfr_cmp_q@@Base+0x124>
   3249c:	ldr	x1, [x0, #16]
   324a0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   324a4:	cmp	x1, x0
   324a8:	b.le	32614 <mpfr_cmp_q@@Base+0x194>
   324ac:	stp	x21, x22, [sp, #32]
   324b0:	stp	x23, x24, [sp, #48]
   324b4:	stp	x25, x26, [sp, #64]
   324b8:	str	x27, [sp, #80]
   324bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   324c0:	ldr	x1, [x0, #2576]
   324c4:	add	x0, x0, #0xa10
   324c8:	blr	x1
   324cc:	mrs	x1, tpidr_el0
   324d0:	add	x25, x1, x0
   324d4:	ldr	w26, [x1, x0]
   324d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   324dc:	ldr	x3, [x0, #2512]
   324e0:	add	x0, x0, #0x9d0
   324e4:	blr	x3
   324e8:	add	x22, x1, x0
   324ec:	ldr	x24, [x1, x0]
   324f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   324f4:	ldr	x3, [x0, #2544]
   324f8:	add	x0, x0, #0x9f0
   324fc:	blr	x3
   32500:	add	x21, x1, x0
   32504:	ldr	x23, [x1, x0]
   32508:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   3250c:	str	x0, [x22]
   32510:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   32514:	str	x0, [x21]
   32518:	cmp	w2, #0x0
   3251c:	cneg	w2, w2, lt  // lt = tstop
   32520:	ldr	x0, [x19, #24]
   32524:	add	x0, x0, w2, sxtw #3
   32528:	ldur	x1, [x0, #-8]
   3252c:	sbfiz	x2, x2, #6, #32
   32530:	clz	x1, x1
   32534:	sub	x2, x2, x1
   32538:	ldr	x1, [x20]
   3253c:	add	x27, sp, #0x60
   32540:	add	x1, x2, x1
   32544:	mov	x0, x27
   32548:	bl	ca80 <mpfr_init2@plt>
   3254c:	mov	w3, #0x0                   	// #0
   32550:	add	x2, x19, #0x10
   32554:	mov	x1, x20
   32558:	mov	x0, x27
   3255c:	bl	c4d0 <mpfr_mul_z@plt>
   32560:	mov	x1, x19
   32564:	mov	x0, x27
   32568:	bl	bbb0 <mpfr_cmp_z@plt>
   3256c:	mov	w19, w0
   32570:	mov	x0, x27
   32574:	bl	c070 <mpfr_clear@plt>
   32578:	str	w26, [x25]
   3257c:	str	x24, [x22]
   32580:	str	x23, [x21]
   32584:	ldp	x21, x22, [sp, #32]
   32588:	ldp	x23, x24, [sp, #48]
   3258c:	ldp	x25, x26, [sp, #64]
   32590:	ldr	x27, [sp, #80]
   32594:	mov	w0, w19
   32598:	ldp	x19, x20, [sp, #16]
   3259c:	ldp	x29, x30, [sp], #128
   325a0:	ret
   325a4:	stp	x21, x22, [sp, #32]
   325a8:	stp	x23, x24, [sp, #48]
   325ac:	add	x21, sp, #0x60
   325b0:	mov	x1, #0x1                   	// #1
   325b4:	mov	x0, x21
   325b8:	bl	ca80 <mpfr_init2@plt>
   325bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   325c0:	ldr	x1, [x0, #2576]
   325c4:	add	x0, x0, #0xa10
   325c8:	blr	x1
   325cc:	mrs	x1, tpidr_el0
   325d0:	add	x22, x1, x0
   325d4:	ldr	w23, [x1, x0]
   325d8:	mov	w2, #0x0                   	// #0
   325dc:	mov	x1, x19
   325e0:	mov	x0, x21
   325e4:	bl	c850 <mpfr_set_q@plt>
   325e8:	str	w23, [x22]
   325ec:	mov	w2, #0x1                   	// #1
   325f0:	mov	x1, x21
   325f4:	mov	x0, x20
   325f8:	bl	c9a0 <mpfr_cmp3@plt>
   325fc:	mov	w19, w0
   32600:	mov	x0, x21
   32604:	bl	c070 <mpfr_clear@plt>
   32608:	ldp	x21, x22, [sp, #32]
   3260c:	ldp	x23, x24, [sp, #48]
   32610:	b	32594 <mpfr_cmp_q@@Base+0x114>
   32614:	ldr	w0, [x19, #4]
   32618:	mov	x1, #0xffffffffffffffff    	// #-1
   3261c:	tbnz	w0, #31, 32628 <mpfr_cmp_q@@Base+0x1a8>
   32620:	cmp	w0, #0x0
   32624:	cset	x1, gt
   32628:	mov	x2, #0x0                   	// #0
   3262c:	mov	x0, x20
   32630:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   32634:	mov	w19, w0
   32638:	b	32594 <mpfr_cmp_q@@Base+0x114>

000000000003263c <mpfr_cmp_f@@Base>:
   3263c:	stp	x29, x30, [sp, #-128]!
   32640:	mov	x29, sp
   32644:	stp	x19, x20, [sp, #16]
   32648:	mov	x19, x0
   3264c:	mov	x20, x1
   32650:	ldr	x1, [x0, #16]
   32654:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32658:	cmp	x1, x0
   3265c:	b.le	32748 <mpfr_cmp_f@@Base+0x10c>
   32660:	stp	x21, x22, [sp, #32]
   32664:	stp	x23, x24, [sp, #48]
   32668:	stp	x25, x26, [sp, #64]
   3266c:	str	x27, [sp, #80]
   32670:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32674:	ldr	x1, [x0, #2576]
   32678:	add	x0, x0, #0xa10
   3267c:	blr	x1
   32680:	mrs	x1, tpidr_el0
   32684:	add	x25, x1, x0
   32688:	ldr	w26, [x1, x0]
   3268c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32690:	ldr	x2, [x0, #2512]
   32694:	add	x0, x0, #0x9d0
   32698:	blr	x2
   3269c:	add	x22, x1, x0
   326a0:	ldr	x24, [x1, x0]
   326a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   326a8:	ldr	x2, [x0, #2544]
   326ac:	add	x0, x0, #0x9f0
   326b0:	blr	x2
   326b4:	add	x21, x1, x0
   326b8:	ldr	x23, [x1, x0]
   326bc:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   326c0:	str	x0, [x22]
   326c4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   326c8:	str	x0, [x21]
   326cc:	ldr	w2, [x20, #4]
   326d0:	cmp	w2, #0x0
   326d4:	cneg	w2, w2, lt  // lt = tstop
   326d8:	lsl	w2, w2, #6
   326dc:	add	w2, w2, #0x1
   326e0:	add	x27, sp, #0x60
   326e4:	sxtw	x1, w2
   326e8:	mov	x0, x27
   326ec:	bl	ca80 <mpfr_init2@plt>
   326f0:	mov	w2, #0x0                   	// #0
   326f4:	mov	x1, x20
   326f8:	mov	x0, x27
   326fc:	bl	bd40 <mpfr_set_f@plt>
   32700:	mov	w2, #0x1                   	// #1
   32704:	mov	x1, x27
   32708:	mov	x0, x19
   3270c:	bl	c9a0 <mpfr_cmp3@plt>
   32710:	mov	w19, w0
   32714:	mov	x0, x27
   32718:	bl	c070 <mpfr_clear@plt>
   3271c:	str	w26, [x25]
   32720:	str	x24, [x22]
   32724:	str	x23, [x21]
   32728:	ldp	x21, x22, [sp, #32]
   3272c:	ldp	x23, x24, [sp, #48]
   32730:	ldp	x25, x26, [sp, #64]
   32734:	ldr	x27, [sp, #80]
   32738:	mov	w0, w19
   3273c:	ldp	x19, x20, [sp, #16]
   32740:	ldp	x29, x30, [sp], #128
   32744:	ret
   32748:	ldr	w0, [x20, #4]
   3274c:	mov	x1, #0xffffffffffffffff    	// #-1
   32750:	tbnz	w0, #31, 3275c <mpfr_cmp_f@@Base+0x120>
   32754:	cmp	w0, #0x0
   32758:	cset	x1, gt
   3275c:	mov	x2, #0x0                   	// #0
   32760:	mov	x0, x19
   32764:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   32768:	mov	w19, w0
   3276c:	b	32738 <mpfr_cmp_f@@Base+0xfc>

0000000000032770 <mpfr_init2@@Base>:
   32770:	stp	x29, x30, [sp, #-48]!
   32774:	mov	x29, sp
   32778:	stp	x19, x20, [sp, #16]
   3277c:	str	x21, [sp, #32]
   32780:	mov	x21, x0
   32784:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   32788:	ldr	x0, [x0, #4032]
   3278c:	ldr	w0, [x0]
   32790:	cmp	w0, #0x40
   32794:	b.ne	32804 <mpfr_init2@@Base+0x94>  // b.any
   32798:	mov	x20, x1
   3279c:	sub	x1, x1, #0x1
   327a0:	mov	x0, #0xfffffffffffffefe    	// #-258
   327a4:	movk	x0, #0x7fff, lsl #48
   327a8:	cmp	x1, x0
   327ac:	b.hi	3281c <mpfr_init2@@Base+0xac>  // b.pmore
   327b0:	add	x19, x20, #0x3e
   327b4:	subs	x0, x20, #0x1
   327b8:	csel	x19, x19, x0, mi  // mi = first
   327bc:	asr	x19, x19, #6
   327c0:	add	x0, x19, #0x2
   327c4:	lsl	x0, x0, #3
   327c8:	bl	ccf0 <mpfr_allocate_func@plt>
   327cc:	str	x20, [x21]
   327d0:	mov	w1, #0x1                   	// #1
   327d4:	str	w1, [x21, #8]
   327d8:	add	x1, x0, #0x8
   327dc:	str	x1, [x21, #24]
   327e0:	add	x19, x19, #0x1
   327e4:	str	x19, [x0]
   327e8:	mov	x0, #0x2                   	// #2
   327ec:	movk	x0, #0x8000, lsl #48
   327f0:	str	x0, [x21, #16]
   327f4:	ldp	x19, x20, [sp, #16]
   327f8:	ldr	x21, [sp, #32]
   327fc:	ldp	x29, x30, [sp], #48
   32800:	ret
   32804:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32808:	add	x2, x2, #0x248
   3280c:	mov	w1, #0x27                  	// #39
   32810:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32814:	add	x0, x0, #0x268
   32818:	bl	cb40 <mpfr_assert_fail@plt>
   3281c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   32820:	add	x2, x2, #0x958
   32824:	mov	w1, #0x34                  	// #52
   32828:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3282c:	add	x0, x0, #0x268
   32830:	bl	cb40 <mpfr_assert_fail@plt>

0000000000032834 <mpfr_acos@@Base>:
   32834:	stp	x29, x30, [sp, #-208]!
   32838:	mov	x29, sp
   3283c:	stp	x19, x20, [sp, #16]
   32840:	stp	x21, x22, [sp, #32]
   32844:	mov	x22, x0
   32848:	mov	x21, x1
   3284c:	str	w2, [sp, #100]
   32850:	ldr	x0, [x1, #16]
   32854:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   32858:	cmp	x0, x1
   3285c:	b.le	32b24 <mpfr_acos@@Base+0x2f0>
   32860:	ldr	w20, [x21, #8]
   32864:	add	x19, sp, #0xb0
   32868:	ldr	x1, [x21]
   3286c:	mov	x0, x19
   32870:	bl	ca80 <mpfr_init2@plt>
   32874:	mov	w3, #0x1                   	// #1
   32878:	mov	w2, #0x0                   	// #0
   3287c:	mov	x1, x21
   32880:	mov	x0, x19
   32884:	bl	c6a0 <mpfr_set4@plt>
   32888:	mov	x2, #0x0                   	// #0
   3288c:	mov	x1, #0x1                   	// #1
   32890:	mov	x0, x19
   32894:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   32898:	mov	w19, w0
   3289c:	tbz	w0, #31, 32c80 <mpfr_acos@@Base+0x44c>
   328a0:	stp	x23, x24, [sp, #48]
   328a4:	stp	x25, x26, [sp, #64]
   328a8:	stp	x27, x28, [sp, #80]
   328ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   328b0:	ldr	x1, [x0, #2576]
   328b4:	add	x0, x0, #0xa10
   328b8:	blr	x1
   328bc:	mrs	x1, tpidr_el0
   328c0:	ldr	w24, [x1, x0]
   328c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   328c8:	ldr	x2, [x0, #2512]
   328cc:	add	x0, x0, #0x9d0
   328d0:	blr	x2
   328d4:	add	x2, x1, x0
   328d8:	ldr	x27, [x1, x0]
   328dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   328e0:	ldr	x3, [x0, #2544]
   328e4:	add	x0, x0, #0x9f0
   328e8:	blr	x3
   328ec:	ldr	x28, [x1, x0]
   328f0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   328f4:	str	x3, [x2]
   328f8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   328fc:	str	x2, [x1, x0]
   32900:	add	x0, sp, #0xb0
   32904:	mov	w3, #0x3                   	// #3
   32908:	mov	x2, x0
   3290c:	mov	x1, #0x1                   	// #1
   32910:	bl	ca50 <mpfr_ui_sub@plt>
   32914:	cmp	w20, #0x0
   32918:	b.le	32d14 <mpfr_acos@@Base+0x4e0>
   3291c:	mov	x23, #0x1                   	// #1
   32920:	ldr	x0, [sp, #192]
   32924:	sub	x23, x23, x0
   32928:	lsl	x23, x23, #1
   3292c:	add	x0, sp, #0xb0
   32930:	bl	c070 <mpfr_clear@plt>
   32934:	ldr	x0, [x22]
   32938:	cmp	x0, #0x1
   3293c:	b.eq	32d3c <mpfr_acos@@Base+0x508>  // b.none
   32940:	b.le	32d24 <mpfr_acos@@Base+0x4f0>
   32944:	sub	x20, x0, #0x1
   32948:	clz	x1, x20
   3294c:	mov	w20, #0x4a                  	// #74
   32950:	sub	w20, w20, w1
   32954:	sxtw	x20, w20
   32958:	add	x20, x23, x20
   3295c:	add	x20, x20, x0
   32960:	mov	x1, x20
   32964:	add	x0, sp, #0x70
   32968:	bl	ca80 <mpfr_init2@plt>
   3296c:	mov	x1, x20
   32970:	add	x0, sp, #0x90
   32974:	bl	ca80 <mpfr_init2@plt>
   32978:	mov	x0, #0x40                  	// #64
   3297c:	str	x0, [sp, #104]
   32980:	add	x19, sp, #0x70
   32984:	mov	x26, #0x1                   	// #1
   32988:	add	x25, sp, #0x90
   3298c:	mov	w2, #0x0                   	// #0
   32990:	mov	x1, x21
   32994:	mov	x0, x19
   32998:	bl	c400 <mpfr_sqr@plt>
   3299c:	mov	w3, #0x0                   	// #0
   329a0:	mov	x2, x19
   329a4:	mov	x1, x26
   329a8:	mov	x0, x19
   329ac:	bl	ca50 <mpfr_ui_sub@plt>
   329b0:	mov	w2, #0x0                   	// #0
   329b4:	mov	x1, x19
   329b8:	mov	x0, x19
   329bc:	bl	c930 <mpfr_sqrt@plt>
   329c0:	mov	w3, #0x0                   	// #0
   329c4:	mov	x2, x19
   329c8:	mov	x1, x21
   329cc:	mov	x0, x19
   329d0:	bl	c620 <mpfr_div@plt>
   329d4:	mov	w2, #0x0                   	// #0
   329d8:	mov	x1, x19
   329dc:	mov	x0, x25
   329e0:	bl	c690 <mpfr_atan@plt>
   329e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   329e8:	ldr	x1, [x0, #2624]
   329ec:	add	x0, x0, #0xa40
   329f0:	blr	x1
   329f4:	mov	w2, #0x0                   	// #0
   329f8:	mrs	x1, tpidr_el0
   329fc:	add	x1, x1, x0
   32a00:	mov	x0, x19
   32a04:	bl	c380 <mpfr_cache@plt>
   32a08:	mov	w3, #0x0                   	// #0
   32a0c:	mov	x2, x26
   32a10:	mov	x1, x19
   32a14:	mov	x0, x19
   32a18:	bl	c8f0 <mpfr_div_2ui@plt>
   32a1c:	mov	w3, #0x0                   	// #0
   32a20:	mov	x2, x25
   32a24:	mov	x1, x19
   32a28:	mov	x0, x25
   32a2c:	bl	bb70 <mpfr_sub@plt>
   32a30:	ldr	x1, [sp, #160]
   32a34:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32a38:	cmp	x1, x0
   32a3c:	b.le	32d44 <mpfr_acos@@Base+0x510>
   32a40:	ldr	w0, [sp, #100]
   32a44:	cmp	w0, #0x0
   32a48:	ldr	x3, [x22]
   32a4c:	cinc	x3, x3, eq  // eq = none
   32a50:	ldr	x0, [sp, #144]
   32a54:	add	x1, x0, #0x3e
   32a58:	subs	x0, x0, #0x1
   32a5c:	csel	x1, x1, x0, mi  // mi = first
   32a60:	asr	x1, x1, #6
   32a64:	sub	x2, x20, x23
   32a68:	add	x1, x1, #0x1
   32a6c:	ldr	x0, [sp, #168]
   32a70:	bl	c370 <mpfr_round_p@plt>
   32a74:	cbz	w0, 32d44 <mpfr_acos@@Base+0x510>
   32a78:	add	x20, sp, #0x90
   32a7c:	ldr	w3, [sp, #152]
   32a80:	ldr	w2, [sp, #100]
   32a84:	mov	x1, x20
   32a88:	mov	x0, x22
   32a8c:	bl	c6a0 <mpfr_set4@plt>
   32a90:	mov	w19, w0
   32a94:	add	x0, sp, #0x70
   32a98:	bl	c070 <mpfr_clear@plt>
   32a9c:	mov	x0, x20
   32aa0:	bl	c070 <mpfr_clear@plt>
   32aa4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32aa8:	ldr	x1, [x0, #2576]
   32aac:	add	x0, x0, #0xa10
   32ab0:	blr	x1
   32ab4:	mrs	x1, tpidr_el0
   32ab8:	str	w24, [x1, x0]
   32abc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32ac0:	ldr	x2, [x0, #2512]
   32ac4:	add	x0, x0, #0x9d0
   32ac8:	blr	x2
   32acc:	str	x27, [x1, x0]
   32ad0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32ad4:	ldr	x2, [x0, #2544]
   32ad8:	add	x0, x0, #0x9f0
   32adc:	blr	x2
   32ae0:	str	x28, [x1, x0]
   32ae4:	ldr	x0, [x22, #16]
   32ae8:	cmp	x28, x0
   32aec:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   32af0:	b.gt	32da4 <mpfr_acos@@Base+0x570>
   32af4:	cbz	w19, 32dd8 <mpfr_acos@@Base+0x5a4>
   32af8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32afc:	ldr	x1, [x0, #2576]
   32b00:	add	x0, x0, #0xa10
   32b04:	blr	x1
   32b08:	orr	w1, w24, #0x8
   32b0c:	mrs	x2, tpidr_el0
   32b10:	str	w1, [x2, x0]
   32b14:	ldp	x23, x24, [sp, #48]
   32b18:	ldp	x25, x26, [sp, #64]
   32b1c:	ldp	x27, x28, [sp, #80]
   32b20:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32b24:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   32b28:	add	x0, x0, x1
   32b2c:	cmp	x0, #0x1
   32b30:	b.ls	32c24 <mpfr_acos@@Base+0x3f0>  // b.plast
   32b34:	stp	x23, x24, [sp, #48]
   32b38:	stp	x25, x26, [sp, #64]
   32b3c:	stp	x27, x28, [sp, #80]
   32b40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32b44:	ldr	x1, [x0, #2576]
   32b48:	add	x0, x0, #0xa10
   32b4c:	blr	x1
   32b50:	mrs	x1, tpidr_el0
   32b54:	add	x27, x1, x0
   32b58:	ldr	w20, [x1, x0]
   32b5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32b60:	ldr	x2, [x0, #2512]
   32b64:	add	x0, x0, #0x9d0
   32b68:	blr	x2
   32b6c:	add	x26, x1, x0
   32b70:	ldr	x21, [x1, x0]
   32b74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32b78:	ldr	x2, [x0, #2544]
   32b7c:	add	x0, x0, #0x9f0
   32b80:	blr	x2
   32b84:	add	x25, x1, x0
   32b88:	ldr	x23, [x1, x0]
   32b8c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   32b90:	str	x0, [x26]
   32b94:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   32b98:	str	x0, [x25]
   32b9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32ba0:	ldr	x2, [x0, #2624]
   32ba4:	add	x0, x0, #0xa40
   32ba8:	blr	x2
   32bac:	ldr	w24, [sp, #100]
   32bb0:	mov	w2, w24
   32bb4:	add	x1, x1, x0
   32bb8:	mov	x0, x22
   32bbc:	bl	c380 <mpfr_cache@plt>
   32bc0:	mov	w19, w0
   32bc4:	mov	w3, w24
   32bc8:	mov	x2, #0x1                   	// #1
   32bcc:	mov	x1, x22
   32bd0:	mov	x0, x22
   32bd4:	bl	c8f0 <mpfr_div_2ui@plt>
   32bd8:	str	w20, [x27]
   32bdc:	str	x21, [x26]
   32be0:	str	x23, [x25]
   32be4:	ldr	x0, [x22, #16]
   32be8:	cmp	x23, x0
   32bec:	ccmp	x21, x0, #0x0, ge  // ge = tcont
   32bf0:	b.gt	32c5c <mpfr_acos@@Base+0x428>
   32bf4:	cbz	w19, 32dc8 <mpfr_acos@@Base+0x594>
   32bf8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32bfc:	ldr	x1, [x0, #2576]
   32c00:	add	x0, x0, #0xa10
   32c04:	blr	x1
   32c08:	orr	w20, w20, #0x8
   32c0c:	mrs	x1, tpidr_el0
   32c10:	str	w20, [x1, x0]
   32c14:	ldp	x23, x24, [sp, #48]
   32c18:	ldp	x25, x26, [sp, #64]
   32c1c:	ldp	x27, x28, [sp, #80]
   32c20:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32c24:	mov	x0, #0x2                   	// #2
   32c28:	movk	x0, #0x8000, lsl #48
   32c2c:	str	x0, [x22, #16]
   32c30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32c34:	ldr	x1, [x0, #2576]
   32c38:	add	x0, x0, #0xa10
   32c3c:	blr	x1
   32c40:	mrs	x1, tpidr_el0
   32c44:	add	x0, x1, x0
   32c48:	ldr	w1, [x0]
   32c4c:	orr	w1, w1, #0x4
   32c50:	str	w1, [x0]
   32c54:	mov	w19, #0x0                   	// #0
   32c58:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32c5c:	ldr	w2, [sp, #100]
   32c60:	mov	w1, w19
   32c64:	mov	x0, x22
   32c68:	bl	cb30 <mpfr_check_range@plt>
   32c6c:	mov	w19, w0
   32c70:	ldp	x23, x24, [sp, #48]
   32c74:	ldp	x25, x26, [sp, #64]
   32c78:	ldp	x27, x28, [sp, #80]
   32c7c:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32c80:	add	x0, sp, #0xb0
   32c84:	bl	c070 <mpfr_clear@plt>
   32c88:	cmp	w19, #0x0
   32c8c:	b.gt	32cb0 <mpfr_acos@@Base+0x47c>
   32c90:	cmp	w20, #0x0
   32c94:	b.le	32ce8 <mpfr_acos@@Base+0x4b4>
   32c98:	mov	w0, #0x1                   	// #1
   32c9c:	str	w0, [x22, #8]
   32ca0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32ca4:	str	x0, [x22, #16]
   32ca8:	mov	w19, #0x0                   	// #0
   32cac:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32cb0:	mov	x0, #0x2                   	// #2
   32cb4:	movk	x0, #0x8000, lsl #48
   32cb8:	str	x0, [x22, #16]
   32cbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32cc0:	ldr	x1, [x0, #2576]
   32cc4:	add	x0, x0, #0xa10
   32cc8:	blr	x1
   32ccc:	mrs	x1, tpidr_el0
   32cd0:	add	x0, x1, x0
   32cd4:	ldr	w1, [x0]
   32cd8:	orr	w1, w1, #0x4
   32cdc:	str	w1, [x0]
   32ce0:	mov	w19, #0x0                   	// #0
   32ce4:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32ce8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   32cec:	ldr	x1, [x0, #2624]
   32cf0:	add	x0, x0, #0xa40
   32cf4:	blr	x1
   32cf8:	ldr	w2, [sp, #100]
   32cfc:	mrs	x1, tpidr_el0
   32d00:	add	x1, x1, x0
   32d04:	mov	x0, x22
   32d08:	bl	c380 <mpfr_cache@plt>
   32d0c:	mov	w19, w0
   32d10:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32d14:	mov	x23, #0x2                   	// #2
   32d18:	ldr	x0, [sp, #192]
   32d1c:	sub	x23, x23, x0
   32d20:	b	3292c <mpfr_acos@@Base+0xf8>
   32d24:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   32d28:	add	x2, x2, #0xd58
   32d2c:	mov	w1, #0x60                  	// #96
   32d30:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32d34:	add	x0, x0, #0x270
   32d38:	bl	cb40 <mpfr_assert_fail@plt>
   32d3c:	mov	x20, #0xa                   	// #10
   32d40:	b	32958 <mpfr_acos@@Base+0x124>
   32d44:	mov	x0, #0xfffffffffffffeff    	// #-257
   32d48:	movk	x0, #0x7fff, lsl #48
   32d4c:	sub	x0, x0, x20
   32d50:	ldr	x1, [sp, #104]
   32d54:	cmp	x0, x1
   32d58:	b.lt	32d8c <mpfr_acos@@Base+0x558>  // b.tstop
   32d5c:	ldr	x0, [sp, #104]
   32d60:	add	x20, x20, x0
   32d64:	add	x0, x20, x20, lsr #63
   32d68:	asr	x0, x0, #1
   32d6c:	str	x0, [sp, #104]
   32d70:	mov	x1, x20
   32d74:	mov	x0, x19
   32d78:	bl	bed0 <mpfr_set_prec@plt>
   32d7c:	mov	x1, x20
   32d80:	mov	x0, x25
   32d84:	bl	bed0 <mpfr_set_prec@plt>
   32d88:	b	3298c <mpfr_acos@@Base+0x158>
   32d8c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   32d90:	add	x2, x2, #0xd68
   32d94:	mov	w1, #0x86                  	// #134
   32d98:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   32d9c:	add	x0, x0, #0x270
   32da0:	bl	cb40 <mpfr_assert_fail@plt>
   32da4:	ldr	w2, [sp, #100]
   32da8:	mov	w1, w19
   32dac:	mov	x0, x22
   32db0:	bl	cb30 <mpfr_check_range@plt>
   32db4:	mov	w19, w0
   32db8:	ldp	x23, x24, [sp, #48]
   32dbc:	ldp	x25, x26, [sp, #64]
   32dc0:	ldp	x27, x28, [sp, #80]
   32dc4:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32dc8:	ldp	x23, x24, [sp, #48]
   32dcc:	ldp	x25, x26, [sp, #64]
   32dd0:	ldp	x27, x28, [sp, #80]
   32dd4:	b	32de4 <mpfr_acos@@Base+0x5b0>
   32dd8:	ldp	x23, x24, [sp, #48]
   32ddc:	ldp	x25, x26, [sp, #64]
   32de0:	ldp	x27, x28, [sp, #80]
   32de4:	mov	w0, w19
   32de8:	ldp	x19, x20, [sp, #16]
   32dec:	ldp	x21, x22, [sp, #32]
   32df0:	ldp	x29, x30, [sp], #208
   32df4:	ret
   32df8:	stp	x29, x30, [sp, #-32]!
   32dfc:	mov	x29, sp
   32e00:	str	x19, [sp, #16]
   32e04:	ldr	w3, [x1, #4]
   32e08:	cmp	w3, #0x0
   32e0c:	cneg	w3, w3, lt  // lt = tstop
   32e10:	ldr	x4, [x1, #8]
   32e14:	add	x4, x4, w3, sxtw #3
   32e18:	ldur	x4, [x4, #-8]
   32e1c:	sbfiz	x3, x3, #6, #32
   32e20:	clz	x4, x4
   32e24:	sub	x3, x3, x4
   32e28:	sub	x19, x3, x2
   32e2c:	cmp	x3, x2
   32e30:	csel	x19, x19, xzr, gt
   32e34:	mov	x2, x19
   32e38:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   32e3c:	mov	x0, x19
   32e40:	ldr	x19, [sp, #16]
   32e44:	ldp	x29, x30, [sp], #32
   32e48:	ret
   32e4c:	mov	x12, #0x1500                	// #5376
   32e50:	sub	sp, sp, x12
   32e54:	stp	x29, x30, [sp]
   32e58:	mov	x29, sp
   32e5c:	stp	x19, x20, [sp, #16]
   32e60:	str	x0, [sp, #200]
   32e64:	str	x1, [sp, #208]
   32e68:	str	x2, [sp, #232]
   32e6c:	str	x3, [sp, #216]
   32e70:	str	x4, [sp, #224]
   32e74:	str	x5, [sp, #176]
   32e78:	ldr	w0, [x3, #4]
   32e7c:	cbz	w0, 33060 <mpfr_acos@@Base+0x82c>
   32e80:	stp	x21, x22, [sp, #32]
   32e84:	stp	x23, x24, [sp, #48]
   32e88:	stp	x25, x26, [sp, #64]
   32e8c:	add	x19, sp, #0x8f0
   32e90:	mov	x0, x19
   32e94:	bl	bf90 <mpfr_mpz_init@plt>
   32e98:	mov	x1, #0x0                   	// #0
   32e9c:	ldr	x25, [sp, #216]
   32ea0:	mov	x0, x25
   32ea4:	bl	ba90 <__gmpz_scan1@plt>
   32ea8:	mov	x21, x0
   32eac:	mov	x2, x0
   32eb0:	mov	x1, x25
   32eb4:	mov	x0, x19
   32eb8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   32ebc:	mov	x2, x19
   32ec0:	mov	x1, x19
   32ec4:	mov	x0, x19
   32ec8:	bl	bff0 <__gmpz_mul@plt>
   32ecc:	ldr	x26, [sp, #224]
   32ed0:	sub	x21, x26, x21
   32ed4:	lsl	x24, x21, #1
   32ed8:	str	x24, [sp, #128]
   32edc:	add	x20, sp, #0x1, lsl #12
   32ee0:	add	x20, x20, #0x100
   32ee4:	mov	x0, x20
   32ee8:	bl	bf90 <mpfr_mpz_init@plt>
   32eec:	mov	x1, #0x6                   	// #6
   32ef0:	mov	x0, x20
   32ef4:	bl	bcb0 <__gmpz_set_ui@plt>
   32ef8:	add	x23, sp, #0xd00
   32efc:	mov	x0, x23
   32f00:	bl	bf90 <mpfr_mpz_init@plt>
   32f04:	mov	x1, #0x6                   	// #6
   32f08:	mov	x0, x23
   32f0c:	bl	bcb0 <__gmpz_set_ui@plt>
   32f10:	add	x22, sp, #0x900
   32f14:	mov	x0, x22
   32f18:	bl	bf90 <mpfr_mpz_init@plt>
   32f1c:	mov	x1, x19
   32f20:	mov	x0, x22
   32f24:	bl	bfa0 <__gmpz_set@plt>
   32f28:	add	x0, x20, #0x10
   32f2c:	bl	bf90 <mpfr_mpz_init@plt>
   32f30:	add	x0, x23, #0x10
   32f34:	bl	bf90 <mpfr_mpz_init@plt>
   32f38:	add	x22, x22, #0x10
   32f3c:	mov	x0, x22
   32f40:	bl	bf90 <mpfr_mpz_init@plt>
   32f44:	mov	x2, x19
   32f48:	mov	x1, x19
   32f4c:	mov	x0, x22
   32f50:	bl	bff0 <__gmpz_mul@plt>
   32f54:	ldr	w0, [sp, #2324]
   32f58:	cmp	w0, #0x0
   32f5c:	cneg	w0, w0, lt  // lt = tstop
   32f60:	ldr	x1, [sp, #2328]
   32f64:	add	x1, x1, w0, sxtw #3
   32f68:	ldur	x1, [x1, #-8]
   32f6c:	sbfiz	x0, x0, #6, #32
   32f70:	clz	x1, x1
   32f74:	sub	x0, x0, x1
   32f78:	str	x0, [sp, #248]
   32f7c:	str	x24, [sp, #184]
   32f80:	mov	x2, x24
   32f84:	mov	x1, x20
   32f88:	mov	x0, x20
   32f8c:	bl	c200 <__gmpz_mul_2exp@plt>
   32f90:	mov	x2, x19
   32f94:	mov	x1, x20
   32f98:	mov	x0, x20
   32f9c:	bl	bde0 <__gmpz_sub@plt>
   32fa0:	mov	x0, #0x1                   	// #1
   32fa4:	str	x0, [sp, #1776]
   32fa8:	ldr	w0, [sp, #2292]
   32fac:	cmp	w0, #0x0
   32fb0:	cneg	w0, w0, lt  // lt = tstop
   32fb4:	ldr	x1, [sp, #2296]
   32fb8:	add	x1, x1, w0, sxtw #3
   32fbc:	ldur	x3, [x1, #-8]
   32fc0:	ldr	w1, [x25, #4]
   32fc4:	cmp	w1, #0x0
   32fc8:	cneg	w1, w1, lt  // lt = tstop
   32fcc:	ldr	x2, [x25, #8]
   32fd0:	add	x2, x2, w1, sxtw #3
   32fd4:	ldur	x2, [x2, #-8]
   32fd8:	sbfiz	x0, x0, #6, #32
   32fdc:	clz	x3, x3
   32fe0:	sub	x0, x0, x3
   32fe4:	sub	x0, x24, x0
   32fe8:	add	x0, x0, x26
   32fec:	sbfiz	x1, x1, #6, #32
   32ff0:	clz	x2, x2
   32ff4:	sub	x1, x1, x2
   32ff8:	sub	x0, x0, x1
   32ffc:	str	x0, [sp, #1264]
   33000:	ldr	x1, [sp, #176]
   33004:	cmp	x0, x1
   33008:	b.ge	33584 <mpfr_acos@@Base+0xd50>  // b.tcont
   3300c:	stp	x27, x28, [sp, #80]
   33010:	lsl	x0, x21, #2
   33014:	str	x0, [sp, #192]
   33018:	mov	x0, #0x6                   	// #6
   3301c:	str	x0, [sp, #144]
   33020:	mov	w28, #0x0                   	// #0
   33024:	mov	w0, #0x2                   	// #2
   33028:	str	w0, [sp, #172]
   3302c:	mov	x0, #0x2                   	// #2
   33030:	str	x0, [sp, #136]
   33034:	add	x0, sp, #0x6f0
   33038:	str	x0, [sp, #104]
   3303c:	add	x0, sp, #0xd00
   33040:	str	x0, [sp, #152]
   33044:	add	x0, sp, #0x1, lsl #12
   33048:	add	x0, x0, #0x100
   3304c:	str	x0, [sp, #160]
   33050:	add	x0, sp, #0x2f0
   33054:	mov	w19, w28
   33058:	mov	x28, x0
   3305c:	b	331b4 <mpfr_acos@@Base+0x980>
   33060:	mov	x1, #0x1                   	// #1
   33064:	ldr	x0, [sp, #200]
   33068:	bl	bcb0 <__gmpz_set_ui@plt>
   3306c:	mov	x1, #0x1                   	// #1
   33070:	ldr	x0, [sp, #208]
   33074:	bl	bcb0 <__gmpz_set_ui@plt>
   33078:	mov	x1, #0x1                   	// #1
   3307c:	ldr	x0, [sp, #232]
   33080:	bl	bcb0 <__gmpz_set_ui@plt>
   33084:	mov	x19, #0x0                   	// #0
   33088:	b	3356c <mpfr_acos@@Base+0xd38>
   3308c:	sub	w0, w21, #0x2
   33090:	ldr	x0, [x28, w0, sxtw #3]
   33094:	add	x23, x23, x0
   33098:	add	x0, x28, x21, lsl #3
   3309c:	stur	x23, [x0, #-8]
   330a0:	lsr	x24, x24, #1
   330a4:	sub	x21, x21, #0x1
   330a8:	sub	x22, x22, #0x10
   330ac:	add	x26, x26, #0x10
   330b0:	sub	x20, x20, #0x10
   330b4:	add	x25, x25, #0x8
   330b8:	tbnz	w24, #0, 33198 <mpfr_acos@@Base+0x964>
   330bc:	mov	x2, x26
   330c0:	mov	x1, x22
   330c4:	mov	x0, x22
   330c8:	bl	bff0 <__gmpz_mul@plt>
   330cc:	sub	w0, w21, #0x1
   330d0:	str	w0, [sp, #116]
   330d4:	sub	x19, x22, #0x10
   330d8:	add	x27, x20, #0x10
   330dc:	mov	x2, x27
   330e0:	mov	x1, x19
   330e4:	mov	x0, x19
   330e8:	bl	bff0 <__gmpz_mul@plt>
   330ec:	ldr	w0, [sp, #168]
   330f0:	sub	w23, w0, w21
   330f4:	ldr	x0, [sp, #128]
   330f8:	lsl	x23, x0, x23
   330fc:	mov	x2, x23
   33100:	mov	x1, x19
   33104:	mov	x0, x19
   33108:	bl	c200 <__gmpz_mul_2exp@plt>
   3310c:	mov	x2, x22
   33110:	mov	x1, x19
   33114:	mov	x0, x19
   33118:	bl	c9c0 <__gmpz_add@plt>
   3311c:	mov	x2, x27
   33120:	mov	x1, x20
   33124:	mov	x0, x20
   33128:	bl	bff0 <__gmpz_mul@plt>
   3312c:	lsl	x1, x21, #3
   33130:	ldr	x0, [sp, #104]
   33134:	add	x2, x1, x0
   33138:	ldur	x0, [x2, #-8]
   3313c:	add	x0, x0, #0x1
   33140:	stur	x0, [x2, #-8]
   33144:	ldr	w0, [x20, #20]
   33148:	cmp	w0, #0x0
   3314c:	cneg	w0, w0, lt  // lt = tstop
   33150:	ldr	x2, [x20, #24]
   33154:	add	x2, x2, w0, sxtw #3
   33158:	ldur	x2, [x2, #-8]
   3315c:	sbfiz	x0, x0, #6, #32
   33160:	clz	x2, x2
   33164:	sub	x0, x0, x2
   33168:	add	x23, x0, x23
   3316c:	ldr	x0, [x25]
   33170:	sub	x23, x23, x0
   33174:	sub	x23, x23, #0x1
   33178:	ldr	x0, [sp, #120]
   3317c:	add	x0, x1, x0
   33180:	ldur	x1, [x0, #-8]
   33184:	add	x23, x23, x1
   33188:	stur	x23, [x0, #-8]
   3318c:	cmp	w21, #0x1
   33190:	b.ne	3308c <mpfr_acos@@Base+0x858>  // b.any
   33194:	b	33098 <mpfr_acos@@Base+0x864>
   33198:	ldr	w19, [sp, #116]
   3319c:	ldr	x0, [sp, #144]
   331a0:	add	x0, x0, #0x4
   331a4:	str	x0, [sp, #144]
   331a8:	ldr	x0, [sp, #176]
   331ac:	cmp	x0, x23
   331b0:	b.le	33378 <mpfr_acos@@Base+0xb44>
   331b4:	add	w20, w19, #0x1
   331b8:	add	w21, w19, #0x2
   331bc:	ldr	w0, [sp, #172]
   331c0:	cmp	w21, w0
   331c4:	b.lt	335bc <mpfr_acos@@Base+0xd88>  // b.tstop
   331c8:	add	w0, w0, #0x1
   331cc:	str	w0, [sp, #172]
   331d0:	sxtw	x25, w21
   331d4:	sbfiz	x21, x21, #4, #32
   331d8:	ldr	x26, [sp, #160]
   331dc:	add	x0, x26, x21
   331e0:	bl	bf90 <mpfr_mpz_init@plt>
   331e4:	ldr	x27, [sp, #152]
   331e8:	add	x0, x27, x21
   331ec:	bl	bf90 <mpfr_mpz_init@plt>
   331f0:	add	x23, sp, #0x900
   331f4:	add	x24, x23, x21
   331f8:	mov	x0, x24
   331fc:	bl	bf90 <mpfr_mpz_init@plt>
   33200:	sub	x22, x21, #0x10
   33204:	add	x1, x23, x22
   33208:	mov	x2, x1
   3320c:	mov	x0, x24
   33210:	bl	bff0 <__gmpz_mul@plt>
   33214:	add	x0, sp, #0x904
   33218:	ldr	w0, [x0, x21]
   3321c:	cmp	w0, #0x0
   33220:	cneg	w0, w0, lt  // lt = tstop
   33224:	add	x1, sp, #0x908
   33228:	ldr	x1, [x1, x21]
   3322c:	add	x1, x1, w0, sxtw #3
   33230:	ldur	x1, [x1, #-8]
   33234:	sbfiz	x0, x0, #6, #32
   33238:	clz	x1, x1
   3323c:	sub	x0, x0, x1
   33240:	add	x1, sp, #0xf0
   33244:	str	x0, [x1, x25, lsl #3]
   33248:	sxtw	x23, w20
   3324c:	mov	x0, #0x1                   	// #1
   33250:	ldr	x1, [sp, #104]
   33254:	str	x0, [x1, x23, lsl #3]
   33258:	add	x21, x27, x22
   3325c:	ldr	x24, [sp, #144]
   33260:	mov	x1, x24
   33264:	mov	x0, x21
   33268:	bl	bcb0 <__gmpz_set_ui@plt>
   3326c:	add	x2, x24, #0x1
   33270:	mov	x1, x21
   33274:	mov	x0, x21
   33278:	bl	c100 <__gmpz_mul_ui@plt>
   3327c:	add	x22, x26, x22
   33280:	ldr	x2, [sp, #184]
   33284:	mov	x1, x21
   33288:	mov	x0, x22
   3328c:	bl	c200 <__gmpz_mul_2exp@plt>
   33290:	add	x2, sp, #0x8f0
   33294:	mov	x1, x22
   33298:	mov	x0, x22
   3329c:	bl	bde0 <__gmpz_sub@plt>
   332a0:	ldr	x0, [sp, #136]
   332a4:	lsl	x2, x0, #1
   332a8:	mov	x1, x21
   332ac:	mov	x0, x21
   332b0:	bl	c100 <__gmpz_mul_ui@plt>
   332b4:	sub	x2, x24, #0x1
   332b8:	mov	x1, x21
   332bc:	mov	x0, x21
   332c0:	bl	c100 <__gmpz_mul_ui@plt>
   332c4:	lsl	x23, x23, #4
   332c8:	add	x0, sp, #0xd04
   332cc:	ldr	w0, [x0, x23]
   332d0:	cmp	w0, #0x0
   332d4:	cneg	w0, w0, lt  // lt = tstop
   332d8:	sbfiz	x1, x20, #4, #32
   332dc:	add	x2, sp, #0xd08
   332e0:	ldr	x1, [x2, x1]
   332e4:	add	x1, x1, w0, sxtw #3
   332e8:	ldur	x1, [x1, #-8]
   332ec:	ldr	x23, [sp, #248]
   332f0:	ldr	x2, [sp, #192]
   332f4:	sub	x23, x2, x23
   332f8:	sub	x23, x23, #0x1
   332fc:	sbfiz	x0, x0, #6, #32
   33300:	clz	x1, x1
   33304:	sub	x0, x0, x1
   33308:	add	x23, x23, x0
   3330c:	add	x0, sp, #0x4f0
   33310:	str	x23, [x0, w20, sxtw #3]
   33314:	cbz	w20, 33320 <mpfr_acos@@Base+0xaec>
   33318:	ldr	x0, [x28, w19, sxtw #3]
   3331c:	add	x23, x23, x0
   33320:	str	x23, [x28, w20, sxtw #3]
   33324:	ldr	x0, [sp, #136]
   33328:	add	x0, x0, #0x2
   3332c:	str	x0, [sp, #136]
   33330:	lsr	x24, x0, #1
   33334:	tbnz	w0, #1, 33370 <mpfr_acos@@Base+0xb3c>
   33338:	sxtw	x21, w20
   3333c:	sbfiz	x20, x20, #4, #32
   33340:	ldr	x0, [sp, #160]
   33344:	add	x22, x0, x20
   33348:	add	x26, sp, #0x910
   3334c:	sub	x20, x20, #0x10
   33350:	ldr	x0, [sp, #152]
   33354:	add	x20, x0, x20
   33358:	add	x25, sp, #0xf8
   3335c:	add	w0, w19, #0x2
   33360:	str	w0, [sp, #168]
   33364:	add	x0, sp, #0x4f0
   33368:	str	x0, [sp, #120]
   3336c:	b	330bc <mpfr_acos@@Base+0x888>
   33370:	mov	w19, w20
   33374:	b	3319c <mpfr_acos@@Base+0x968>
   33378:	mov	w28, w19
   3337c:	cmp	w19, #0x0
   33380:	b.le	33598 <mpfr_acos@@Base+0xd64>
   33384:	add	x23, sp, #0x6f0
   33388:	add	x23, x23, w19, sxtw #3
   3338c:	sbfiz	x21, x19, #4, #32
   33390:	add	x20, sp, #0x1, lsl #12
   33394:	add	x20, x20, #0x100
   33398:	mov	x0, x21
   3339c:	add	x20, x20, x21
   333a0:	add	x21, sp, #0xd00
   333a4:	add	x21, x21, x0
   333a8:	mov	x24, #0x0                   	// #0
   333ac:	add	x26, sp, #0x900
   333b0:	mov	x25, #0x1                   	// #1
   333b4:	ldr	x27, [sp, #128]
   333b8:	sub	w28, w28, #0x1
   333bc:	ldur	x2, [x23, #-8]
   333c0:	add	x2, x26, x2, lsl #4
   333c4:	mov	x1, x20
   333c8:	mov	x0, x20
   333cc:	bl	bff0 <__gmpz_mul@plt>
   333d0:	sub	x19, x20, #0x10
   333d4:	mov	x2, x21
   333d8:	mov	x1, x19
   333dc:	mov	x0, x19
   333e0:	bl	bff0 <__gmpz_mul@plt>
   333e4:	ldr	x0, [x23], #-8
   333e8:	lsl	x0, x25, x0
   333ec:	add	x24, x24, x0
   333f0:	mul	x2, x27, x24
   333f4:	mov	x1, x19
   333f8:	mov	x0, x19
   333fc:	bl	c200 <__gmpz_mul_2exp@plt>
   33400:	mov	x2, x20
   33404:	mov	x1, x19
   33408:	mov	x0, x19
   3340c:	bl	c9c0 <__gmpz_add@plt>
   33410:	sub	x22, x21, #0x10
   33414:	mov	x2, x21
   33418:	mov	x1, x22
   3341c:	mov	x0, x22
   33420:	bl	bff0 <__gmpz_mul@plt>
   33424:	mov	x20, x19
   33428:	mov	x21, x22
   3342c:	cbnz	w28, 333b8 <mpfr_acos@@Base+0xb84>
   33430:	ldp	x27, x28, [sp, #80]
   33434:	ldr	x0, [sp, #136]
   33438:	sub	x0, x0, #0x1
   3343c:	ldr	x1, [sp, #128]
   33440:	mul	x19, x0, x1
   33444:	ldr	x22, [sp, #176]
   33448:	mov	x2, x22
   3344c:	add	x1, sp, #0xd00
   33450:	ldr	x0, [sp, #200]
   33454:	bl	32df8 <mpfr_acos@@Base+0x5c4>
   33458:	ldr	x1, [sp, #224]
   3345c:	add	x21, x1, x0
   33460:	add	x20, sp, #0x1, lsl #12
   33464:	add	x20, x20, #0x100
   33468:	mov	x2, x22
   3346c:	mov	x1, x20
   33470:	mov	x0, x20
   33474:	bl	32df8 <mpfr_acos@@Base+0x5c4>
   33478:	sub	x19, x19, x0
   3347c:	add	x19, x19, x21
   33480:	ldr	x2, [sp, #216]
   33484:	mov	x1, x20
   33488:	ldr	x20, [sp, #208]
   3348c:	mov	x0, x20
   33490:	bl	bff0 <__gmpz_mul@plt>
   33494:	mov	x2, x22
   33498:	mov	x1, x20
   3349c:	mov	x0, x20
   334a0:	bl	32df8 <mpfr_acos@@Base+0x5c4>
   334a4:	sub	x19, x19, x0
   334a8:	add	x0, sp, #0x8f0
   334ac:	bl	c170 <mpfr_mpz_clear@plt>
   334b0:	ldr	w0, [sp, #172]
   334b4:	cmp	w0, #0x0
   334b8:	b.le	33504 <mpfr_acos@@Base+0xcd0>
   334bc:	add	x20, sp, #0x1, lsl #12
   334c0:	add	x20, x20, #0x100
   334c4:	add	x23, sp, #0xd00
   334c8:	add	x22, sp, #0x900
   334cc:	sub	w21, w0, #0x1
   334d0:	add	x0, x20, #0x10
   334d4:	add	x21, x0, x21, lsl #4
   334d8:	mov	x0, x20
   334dc:	bl	c170 <mpfr_mpz_clear@plt>
   334e0:	mov	x0, x23
   334e4:	bl	c170 <mpfr_mpz_clear@plt>
   334e8:	mov	x0, x22
   334ec:	bl	c170 <mpfr_mpz_clear@plt>
   334f0:	add	x20, x20, #0x10
   334f4:	add	x23, x23, #0x10
   334f8:	add	x22, x22, #0x10
   334fc:	cmp	x20, x21
   33500:	b.ne	334d8 <mpfr_acos@@Base+0xca4>  // b.any
   33504:	mov	w1, #0x2                   	// #2
   33508:	ldr	x0, [sp, #200]
   3350c:	bl	cb60 <__gmpz_sizeinbase@plt>
   33510:	add	x0, x0, x19
   33514:	ldr	x1, [sp, #176]
   33518:	cmp	x0, x1
   3351c:	b.cc	335a0 <mpfr_acos@@Base+0xd6c>  // b.lo, b.ul, b.last
   33520:	ldr	x1, [sp, #200]
   33524:	mov	x2, x1
   33528:	ldr	x20, [sp, #232]
   3352c:	mov	x0, x20
   33530:	bl	bff0 <__gmpz_mul@plt>
   33534:	lsl	x2, x19, #1
   33538:	mov	x1, x20
   3353c:	mov	x0, x20
   33540:	bl	c200 <__gmpz_mul_2exp@plt>
   33544:	ldr	x1, [sp, #208]
   33548:	mov	x2, x1
   3354c:	mov	x0, x20
   33550:	bl	c880 <__gmpz_submul@plt>
   33554:	mov	x1, x20
   33558:	mov	x0, x20
   3355c:	bl	bc60 <__gmpz_sqrt@plt>
   33560:	ldp	x21, x22, [sp, #32]
   33564:	ldp	x23, x24, [sp, #48]
   33568:	ldp	x25, x26, [sp, #64]
   3356c:	mov	x0, x19
   33570:	ldp	x19, x20, [sp, #16]
   33574:	ldp	x29, x30, [sp]
   33578:	mov	x12, #0x1500                	// #5376
   3357c:	add	sp, sp, x12
   33580:	ret
   33584:	mov	w0, #0x2                   	// #2
   33588:	str	w0, [sp, #172]
   3358c:	mov	x0, #0x2                   	// #2
   33590:	str	x0, [sp, #136]
   33594:	b	33434 <mpfr_acos@@Base+0xc00>
   33598:	ldp	x27, x28, [sp, #80]
   3359c:	b	33434 <mpfr_acos@@Base+0xc00>
   335a0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   335a4:	add	x2, x2, #0x278
   335a8:	mov	w1, #0x1be                 	// #446
   335ac:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   335b0:	add	x0, x0, #0x2a0
   335b4:	bl	cb40 <mpfr_assert_fail@plt>
   335b8:	b	33520 <mpfr_acos@@Base+0xcec>
   335bc:	sxtw	x21, w20
   335c0:	mov	x0, #0x1                   	// #1
   335c4:	ldr	x1, [sp, #104]
   335c8:	str	x0, [x1, x21, lsl #3]
   335cc:	lsl	x21, x21, #4
   335d0:	ldr	x0, [sp, #152]
   335d4:	add	x22, x0, x21
   335d8:	ldr	x24, [sp, #144]
   335dc:	mov	x1, x24
   335e0:	mov	x0, x22
   335e4:	bl	bcb0 <__gmpz_set_ui@plt>
   335e8:	add	x2, x24, #0x1
   335ec:	mov	x1, x22
   335f0:	mov	x0, x22
   335f4:	bl	c100 <__gmpz_mul_ui@plt>
   335f8:	ldr	x0, [sp, #160]
   335fc:	add	x23, x0, x21
   33600:	ldr	x2, [sp, #184]
   33604:	mov	x1, x22
   33608:	mov	x0, x23
   3360c:	bl	c200 <__gmpz_mul_2exp@plt>
   33610:	add	x2, sp, #0x8f0
   33614:	mov	x1, x23
   33618:	mov	x0, x23
   3361c:	bl	bde0 <__gmpz_sub@plt>
   33620:	ldr	x0, [sp, #136]
   33624:	lsl	x2, x0, #1
   33628:	mov	x1, x22
   3362c:	mov	x0, x22
   33630:	bl	c100 <__gmpz_mul_ui@plt>
   33634:	sub	x2, x24, #0x1
   33638:	mov	x1, x22
   3363c:	mov	x0, x22
   33640:	bl	c100 <__gmpz_mul_ui@plt>
   33644:	add	x0, sp, #0xd04
   33648:	ldr	w0, [x0, x21]
   3364c:	b	332d0 <mpfr_acos@@Base+0xa9c>
   33650:	stp	x29, x30, [sp, #-272]!
   33654:	mov	x29, sp
   33658:	stp	x19, x20, [sp, #16]
   3365c:	stp	x21, x22, [sp, #32]
   33660:	stp	x23, x24, [sp, #48]
   33664:	stp	x25, x26, [sp, #64]
   33668:	stp	x27, x28, [sp, #80]
   3366c:	str	x0, [sp, #112]
   33670:	str	x1, [sp, #120]
   33674:	mov	x19, x2
   33678:	ldr	x26, [x0]
   3367c:	add	x20, sp, #0x80
   33680:	ldr	x1, [x2]
   33684:	mov	x0, x20
   33688:	bl	ca80 <mpfr_init2@plt>
   3368c:	add	x23, sp, #0x100
   33690:	mov	x0, x23
   33694:	bl	bf90 <mpfr_mpz_init@plt>
   33698:	add	x22, sp, #0xf0
   3369c:	mov	x0, x22
   336a0:	bl	bf90 <mpfr_mpz_init@plt>
   336a4:	add	x21, sp, #0xe0
   336a8:	mov	x0, x21
   336ac:	bl	bf90 <mpfr_mpz_init@plt>
   336b0:	add	x0, sp, #0xd0
   336b4:	bl	bf90 <mpfr_mpz_init@plt>
   336b8:	add	x0, sp, #0xc0
   336bc:	bl	bf90 <mpfr_mpz_init@plt>
   336c0:	add	x0, sp, #0xb0
   336c4:	bl	bf90 <mpfr_mpz_init@plt>
   336c8:	add	x0, sp, #0xa0
   336cc:	bl	bf90 <mpfr_mpz_init@plt>
   336d0:	ldr	w3, [x19, #8]
   336d4:	mov	w2, #0x0                   	// #0
   336d8:	mov	x1, x19
   336dc:	mov	x0, x20
   336e0:	bl	c6a0 <mpfr_set4@plt>
   336e4:	mov	x1, #0x1                   	// #1
   336e8:	mov	x0, x23
   336ec:	bl	bcb0 <__gmpz_set_ui@plt>
   336f0:	mov	x1, #0x0                   	// #0
   336f4:	mov	x0, x22
   336f8:	bl	bcb0 <__gmpz_set_ui@plt>
   336fc:	mov	x1, #0x1                   	// #1
   33700:	mov	x0, x21
   33704:	bl	bcb0 <__gmpz_set_ui@plt>
   33708:	add	x0, x26, x26, lsr #63
   3370c:	asr	x0, x0, #1
   33710:	str	x0, [sp, #96]
   33714:	mov	x28, #0x0                   	// #0
   33718:	mov	x23, #0x0                   	// #0
   3371c:	mov	x19, #0x1                   	// #1
   33720:	add	x25, sp, #0x80
   33724:	add	x20, sp, #0xe0
   33728:	add	x22, sp, #0xf0
   3372c:	add	x27, sp, #0xa0
   33730:	add	x21, sp, #0xb0
   33734:	b	338dc <mpfr_acos@@Base+0x10a8>
   33738:	mov	w3, #0x0                   	// #0
   3373c:	mov	x2, x19
   33740:	mov	x1, x25
   33744:	mov	x0, x25
   33748:	bl	c2c0 <mpfr_mul_2ui@plt>
   3374c:	mov	w2, #0x1                   	// #1
   33750:	mov	x1, x25
   33754:	mov	x0, x27
   33758:	bl	be00 <mpfr_get_z@plt>
   3375c:	ldr	w0, [sp, #164]
   33760:	cbz	w0, 338d4 <mpfr_acos@@Base+0x10a0>
   33764:	mov	w3, #0x0                   	// #0
   33768:	mov	x2, x27
   3376c:	mov	x1, x25
   33770:	mov	x0, x25
   33774:	bl	bd60 <mpfr_sub_z@plt>
   33778:	lsl	x4, x19, #1
   3377c:	mov	x5, x26
   33780:	sub	x4, x4, #0x1
   33784:	mov	x3, x27
   33788:	mov	x2, x21
   3378c:	add	x1, sp, #0xc0
   33790:	add	x0, sp, #0xd0
   33794:	bl	32e4c <mpfr_acos@@Base+0x618>
   33798:	mov	x24, x0
   3379c:	b	33948 <mpfr_acos@@Base+0x1114>
   337a0:	mov	x2, x20
   337a4:	mov	x1, x22
   337a8:	mov	x0, x27
   337ac:	bl	c9c0 <__gmpz_add@plt>
   337b0:	mov	x2, x21
   337b4:	mov	x1, x20
   337b8:	mov	x0, x20
   337bc:	bl	bff0 <__gmpz_mul@plt>
   337c0:	add	x24, sp, #0xc0
   337c4:	mov	x2, x24
   337c8:	mov	x1, x21
   337cc:	mov	x0, x21
   337d0:	bl	c9c0 <__gmpz_add@plt>
   337d4:	mov	x2, x24
   337d8:	mov	x1, x22
   337dc:	mov	x0, x24
   337e0:	bl	bff0 <__gmpz_mul@plt>
   337e4:	mov	x2, x21
   337e8:	mov	x1, x27
   337ec:	mov	x0, x27
   337f0:	bl	bff0 <__gmpz_mul@plt>
   337f4:	mov	x2, x24
   337f8:	mov	x1, x27
   337fc:	mov	x0, x22
   33800:	bl	bde0 <__gmpz_sub@plt>
   33804:	mov	x2, x20
   33808:	mov	x1, x22
   3380c:	mov	x0, x22
   33810:	bl	bde0 <__gmpz_sub@plt>
   33814:	mov	x2, x24
   33818:	mov	x1, x20
   3381c:	mov	x0, x20
   33820:	bl	bde0 <__gmpz_sub@plt>
   33824:	add	x24, sp, #0x100
   33828:	add	x2, sp, #0xd0
   3382c:	mov	x1, x24
   33830:	mov	x0, x24
   33834:	bl	bff0 <__gmpz_mul@plt>
   33838:	mov	x2, x26
   3383c:	mov	x1, x24
   33840:	mov	x0, x24
   33844:	bl	32df8 <mpfr_acos@@Base+0x5c4>
   33848:	str	x0, [sp, #104]
   3384c:	ldr	w0, [sp, #244]
   33850:	cmp	w0, #0x0
   33854:	cneg	w0, w0, lt  // lt = tstop
   33858:	ldr	x1, [sp, #248]
   3385c:	add	x1, x1, w0, sxtw #3
   33860:	ldur	x3, [x1, #-8]
   33864:	ldr	w1, [sp, #228]
   33868:	cmp	w1, #0x0
   3386c:	cneg	w1, w1, lt  // lt = tstop
   33870:	ldr	x2, [sp, #232]
   33874:	add	x2, x2, w1, sxtw #3
   33878:	ldur	x2, [x2, #-8]
   3387c:	sbfiz	x0, x0, #6, #32
   33880:	clz	x3, x3
   33884:	sub	x0, x0, x3
   33888:	sbfiz	x1, x1, #6, #32
   3388c:	clz	x2, x2
   33890:	sub	x1, x1, x2
   33894:	cmp	x0, x1
   33898:	csel	x0, x0, x1, ls  // ls = plast
   3389c:	sub	x24, x0, x26
   338a0:	cmp	x0, x26
   338a4:	csel	x24, x24, xzr, hi  // hi = pmore
   338a8:	mov	x2, x24
   338ac:	mov	x1, x22
   338b0:	mov	x0, x22
   338b4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   338b8:	mov	x2, x24
   338bc:	mov	x1, x20
   338c0:	mov	x0, x20
   338c4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   338c8:	ldr	x0, [sp, #104]
   338cc:	sub	x24, x0, x24
   338d0:	add	x23, x24, x23
   338d4:	lsl	x19, x19, #1
   338d8:	add	x28, x28, #0x1
   338dc:	mov	x0, x25
   338e0:	bl	c710 <mpfr_sgn@plt>
   338e4:	cmp	w0, #0x0
   338e8:	ccmp	x26, x19, #0x1, ne  // ne = any
   338ec:	b.lt	33980 <mpfr_acos@@Base+0x114c>  // b.tstop
   338f0:	ldr	x0, [sp, #96]
   338f4:	cmp	x0, x19
   338f8:	b.ge	33738 <mpfr_acos@@Base+0xf04>  // b.tcont
   338fc:	mov	x1, x25
   33900:	add	x0, sp, #0xc0
   33904:	bl	cac0 <mpfr_get_z_2exp@plt>
   33908:	sub	x24, x19, #0x1
   3390c:	sub	x24, x24, x0
   33910:	mov	x1, #0x1                   	// #1
   33914:	add	x0, sp, #0xd0
   33918:	bl	bcb0 <__gmpz_set_ui@plt>
   3391c:	mov	x1, #0x1                   	// #1
   33920:	mov	x0, x21
   33924:	bl	bcb0 <__gmpz_set_ui@plt>
   33928:	mov	x2, x24
   3392c:	mov	x1, x21
   33930:	mov	x0, x21
   33934:	bl	c200 <__gmpz_mul_2exp@plt>
   33938:	mov	w0, #0x1                   	// #1
   3393c:	str	w0, [sp, #136]
   33940:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   33944:	str	x0, [sp, #144]
   33948:	add	x23, x23, x24
   3394c:	cmp	x19, #0x1
   33950:	b.ne	337a0 <mpfr_acos@@Base+0xf6c>  // b.any
   33954:	add	x1, sp, #0xd0
   33958:	add	x0, sp, #0x100
   3395c:	bl	c0e0 <__gmpz_swap@plt>
   33960:	add	x1, sp, #0xc0
   33964:	mov	x0, x22
   33968:	bl	c0e0 <__gmpz_swap@plt>
   3396c:	mov	x1, x21
   33970:	mov	x0, x20
   33974:	bl	c0e0 <__gmpz_swap@plt>
   33978:	mov	x23, x24
   3397c:	b	338d4 <mpfr_acos@@Base+0x10a0>
   33980:	add	x0, x28, x28, lsl #1
   33984:	lsl	x0, x0, #2
   33988:	sub	x28, x0, x28
   3398c:	cmp	x28, #0x1
   33990:	b.ls	33a90 <mpfr_acos@@Base+0x125c>  // b.plast
   33994:	mov	x19, #0x0                   	// #0
   33998:	add	x0, x28, #0x1
   3399c:	lsr	x28, x0, #1
   339a0:	add	x19, x19, #0x1
   339a4:	cmp	x0, #0x3
   339a8:	b.hi	33998 <mpfr_acos@@Base+0x1164>  // b.pmore
   339ac:	add	x22, sp, #0xf0
   339b0:	mov	w2, #0x0                   	// #0
   339b4:	mov	x1, x22
   339b8:	ldr	x21, [sp, #112]
   339bc:	mov	x0, x21
   339c0:	bl	c240 <mpfr_set_z@plt>
   339c4:	add	x20, sp, #0x100
   339c8:	mov	w3, #0x0                   	// #0
   339cc:	mov	x2, x20
   339d0:	mov	x1, x21
   339d4:	mov	x0, x21
   339d8:	bl	cc80 <mpfr_div_z@plt>
   339dc:	mov	w3, #0x0                   	// #0
   339e0:	mov	x2, x23
   339e4:	mov	x1, x21
   339e8:	mov	x0, x21
   339ec:	bl	c8f0 <mpfr_div_2ui@plt>
   339f0:	add	x21, sp, #0xe0
   339f4:	mov	w2, #0x0                   	// #0
   339f8:	mov	x1, x21
   339fc:	ldr	x24, [sp, #120]
   33a00:	mov	x0, x24
   33a04:	bl	c240 <mpfr_set_z@plt>
   33a08:	mov	w3, #0x0                   	// #0
   33a0c:	mov	x2, x20
   33a10:	mov	x1, x24
   33a14:	mov	x0, x24
   33a18:	bl	cc80 <mpfr_div_z@plt>
   33a1c:	mov	w3, #0x0                   	// #0
   33a20:	mov	x2, x23
   33a24:	mov	x1, x24
   33a28:	mov	x0, x24
   33a2c:	bl	c8f0 <mpfr_div_2ui@plt>
   33a30:	mov	x0, x20
   33a34:	bl	c170 <mpfr_mpz_clear@plt>
   33a38:	mov	x0, x22
   33a3c:	bl	c170 <mpfr_mpz_clear@plt>
   33a40:	mov	x0, x21
   33a44:	bl	c170 <mpfr_mpz_clear@plt>
   33a48:	add	x0, sp, #0xd0
   33a4c:	bl	c170 <mpfr_mpz_clear@plt>
   33a50:	add	x0, sp, #0xc0
   33a54:	bl	c170 <mpfr_mpz_clear@plt>
   33a58:	add	x0, sp, #0xb0
   33a5c:	bl	c170 <mpfr_mpz_clear@plt>
   33a60:	add	x0, sp, #0xa0
   33a64:	bl	c170 <mpfr_mpz_clear@plt>
   33a68:	add	x0, sp, #0x80
   33a6c:	bl	c070 <mpfr_clear@plt>
   33a70:	mov	w0, w19
   33a74:	ldp	x19, x20, [sp, #16]
   33a78:	ldp	x21, x22, [sp, #32]
   33a7c:	ldp	x23, x24, [sp, #48]
   33a80:	ldp	x25, x26, [sp, #64]
   33a84:	ldp	x27, x28, [sp, #80]
   33a88:	ldp	x29, x30, [sp], #272
   33a8c:	ret
   33a90:	mov	x19, #0x0                   	// #0
   33a94:	b	339ac <mpfr_acos@@Base+0x1178>

0000000000033a98 <mpfr_sincos_fast@@Base>:
   33a98:	stp	x29, x30, [sp, #-416]!
   33a9c:	mov	x29, sp
   33aa0:	stp	x19, x20, [sp, #16]
   33aa4:	stp	x21, x22, [sp, #32]
   33aa8:	stp	x23, x24, [sp, #48]
   33aac:	stp	x25, x26, [sp, #64]
   33ab0:	stp	x27, x28, [sp, #80]
   33ab4:	str	x1, [sp, #120]
   33ab8:	str	w3, [sp, #116]
   33abc:	cmp	x0, x1
   33ac0:	b.eq	33b88 <mpfr_sincos_fast@@Base+0xf0>  // b.none
   33ac4:	mov	x28, x0
   33ac8:	mov	x22, x2
   33acc:	cbz	x0, 33ba0 <mpfr_sincos_fast@@Base+0x108>
   33ad0:	ldr	x0, [sp, #120]
   33ad4:	cbz	x0, 33bac <mpfr_sincos_fast@@Base+0x114>
   33ad8:	ldr	x0, [sp, #120]
   33adc:	ldr	x0, [x0]
   33ae0:	ldr	x20, [x28]
   33ae4:	cmp	x20, x0
   33ae8:	csel	x20, x20, x0, ge  // ge = tcont
   33aec:	cmp	x20, #0x1
   33af0:	b.eq	33be4 <mpfr_sincos_fast@@Base+0x14c>  // b.none
   33af4:	b.le	33bb4 <mpfr_sincos_fast@@Base+0x11c>
   33af8:	sub	x19, x20, #0x1
   33afc:	clz	x0, x19
   33b00:	mov	w19, #0x49                  	// #73
   33b04:	sub	w19, w19, w0
   33b08:	add	x19, x20, w19, sxtw
   33b0c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   33b10:	cmp	x19, x0
   33b14:	b.ge	33bcc <mpfr_sincos_fast@@Base+0x134>  // b.tcont
   33b18:	add	x20, x19, #0x3e
   33b1c:	subs	x0, x19, #0x1
   33b20:	csel	x20, x20, x0, mi  // mi = first
   33b24:	asr	x20, x20, #6
   33b28:	add	x20, x20, #0x1
   33b2c:	lsl	x0, x20, #1
   33b30:	cmp	x0, #0x10
   33b34:	b.gt	33bd0 <mpfr_sincos_fast@@Base+0x138>
   33b38:	str	xzr, [sp, #176]
   33b3c:	add	x0, sp, #0xc0
   33b40:	str	x0, [sp, #184]
   33b44:	str	x19, [sp, #352]
   33b48:	ldr	x1, [sp, #184]
   33b4c:	str	x1, [sp, #376]
   33b50:	mov	w0, #0x1                   	// #1
   33b54:	str	w0, [sp, #360]
   33b58:	str	x19, [sp, #320]
   33b5c:	add	x20, x1, x20, lsl #3
   33b60:	str	x20, [sp, #344]
   33b64:	str	w0, [sp, #328]
   33b68:	mov	x21, #0x40                  	// #64
   33b6c:	add	x24, sp, #0x180
   33b70:	add	x23, sp, #0x90
   33b74:	add	x0, sp, #0x88
   33b78:	str	x0, [sp, #104]
   33b7c:	add	x26, sp, #0x140
   33b80:	add	x25, sp, #0x160
   33b84:	b	33dd8 <mpfr_sincos_fast@@Base+0x340>
   33b88:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   33b8c:	add	x2, x2, #0x2b0
   33b90:	mov	w1, #0x247                 	// #583
   33b94:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   33b98:	add	x0, x0, #0x2a0
   33b9c:	bl	cb40 <mpfr_assert_fail@plt>
   33ba0:	ldr	x0, [sp, #120]
   33ba4:	ldr	x20, [x0]
   33ba8:	b	33aec <mpfr_sincos_fast@@Base+0x54>
   33bac:	ldr	x20, [x28]
   33bb0:	b	33aec <mpfr_sincos_fast@@Base+0x54>
   33bb4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   33bb8:	add	x2, x2, #0x2b8
   33bbc:	mov	w1, #0x24e                 	// #590
   33bc0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   33bc4:	add	x0, x0, #0x2a0
   33bc8:	bl	cb40 <mpfr_assert_fail@plt>
   33bcc:	bl	c8e0 <mpfr_abort_prec_max@plt>
   33bd0:	lsl	x0, x20, #4
   33bd4:	str	x0, [sp, #176]
   33bd8:	bl	ccf0 <mpfr_allocate_func@plt>
   33bdc:	str	x0, [sp, #184]
   33be0:	b	33b44 <mpfr_sincos_fast@@Base+0xac>
   33be4:	mov	x19, #0xa                   	// #10
   33be8:	b	33b38 <mpfr_sincos_fast@@Base+0xa0>
   33bec:	mov	x2, #0xffffffffffffffe1    	// #-31
   33bf0:	mov	x1, #0xed51                	// #60753
   33bf4:	movk	x1, #0x6487, lsl #16
   33bf8:	mov	x0, x22
   33bfc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   33c00:	cmp	w0, #0x0
   33c04:	b.gt	33de4 <mpfr_sincos_fast@@Base+0x34c>
   33c08:	mov	w3, #0x0                   	// #0
   33c0c:	mov	x2, x22
   33c10:	mov	x1, x26
   33c14:	mov	x0, x25
   33c18:	bl	33650 <mpfr_acos@@Base+0xe1c>
   33c1c:	sxtw	x20, w0
   33c20:	b	33ea4 <mpfr_sincos_fast@@Base+0x40c>
   33c24:	mov	x2, #0xffffffffffffffe1    	// #-31
   33c28:	mov	x1, #0xffffffffffff12af    	// #-60753
   33c2c:	movk	x1, #0x9b78, lsl #16
   33c30:	mov	x0, x22
   33c34:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   33c38:	tbnz	w0, #31, 33dec <mpfr_sincos_fast@@Base+0x354>
   33c3c:	ldr	x0, [x22]
   33c40:	str	x0, [sp, #384]
   33c44:	mov	w0, #0x1                   	// #1
   33c48:	str	w0, [sp, #392]
   33c4c:	ldr	x0, [x22, #16]
   33c50:	str	x0, [sp, #400]
   33c54:	ldr	x0, [x22, #24]
   33c58:	str	x0, [sp, #408]
   33c5c:	mov	w3, #0x0                   	// #0
   33c60:	mov	x2, x24
   33c64:	mov	x1, x26
   33c68:	mov	x0, x25
   33c6c:	bl	33650 <mpfr_acos@@Base+0xe1c>
   33c70:	sxtw	x20, w0
   33c74:	ldr	w0, [sp, #360]
   33c78:	neg	w0, w0
   33c7c:	str	w0, [sp, #360]
   33c80:	b	33ea4 <mpfr_sincos_fast@@Base+0x40c>
   33c84:	mov	w2, #0x0                   	// #0
   33c88:	mov	x1, x24
   33c8c:	mov	x0, x24
   33c90:	bl	bd70 <mpfr_neg@plt>
   33c94:	mov	w3, #0x0                   	// #0
   33c98:	mov	x2, x24
   33c9c:	mov	x1, x26
   33ca0:	mov	x0, x25
   33ca4:	bl	33650 <mpfr_acos@@Base+0xe1c>
   33ca8:	sxtw	x0, w0
   33cac:	add	x20, x0, #0x1
   33cb0:	mov	w2, #0x0                   	// #0
   33cb4:	mov	x1, x25
   33cb8:	mov	x0, x25
   33cbc:	bl	bd70 <mpfr_neg@plt>
   33cc0:	b	33e84 <mpfr_sincos_fast@@Base+0x3ec>
   33cc4:	mov	w2, #0x0                   	// #0
   33cc8:	mov	x1, x25
   33ccc:	mov	x0, x25
   33cd0:	bl	bd70 <mpfr_neg@plt>
   33cd4:	mov	w2, #0x0                   	// #0
   33cd8:	mov	x1, x26
   33cdc:	mov	x0, x26
   33ce0:	bl	bd70 <mpfr_neg@plt>
   33ce4:	b	33e8c <mpfr_sincos_fast@@Base+0x3f4>
   33ce8:	mov	w2, #0x0                   	// #0
   33cec:	mov	x1, x25
   33cf0:	mov	x0, x25
   33cf4:	bl	bd70 <mpfr_neg@plt>
   33cf8:	mov	x1, x26
   33cfc:	mov	x0, x25
   33d00:	bl	c4a0 <mpfr_swap@plt>
   33d04:	b	33e94 <mpfr_sincos_fast@@Base+0x3fc>
   33d08:	ldr	x2, [sp, #120]
   33d0c:	cbz	x2, 33fc4 <mpfr_sincos_fast@@Base+0x52c>
   33d10:	ldr	x1, [sp, #336]
   33d14:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33d18:	cmp	x1, x0
   33d1c:	b.le	33d5c <mpfr_sincos_fast@@Base+0x2c4>
   33d20:	ldr	w0, [sp, #116]
   33d24:	cmp	w0, #0x0
   33d28:	ldr	x3, [x2]
   33d2c:	cinc	x3, x3, eq  // eq = none
   33d30:	sub	x2, x20, x27
   33d34:	ldr	x0, [sp, #320]
   33d38:	add	x1, x0, #0x3e
   33d3c:	subs	x0, x0, #0x1
   33d40:	csel	x1, x1, x0, mi  // mi = first
   33d44:	asr	x1, x1, #6
   33d48:	sub	x2, x19, x2
   33d4c:	add	x1, x1, #0x1
   33d50:	ldr	x0, [sp, #344]
   33d54:	bl	c370 <mpfr_round_p@plt>
   33d58:	cbnz	w0, 33f38 <mpfr_sincos_fast@@Base+0x4a0>
   33d5c:	mov	x0, #0xfffffffffffffeff    	// #-257
   33d60:	movk	x0, #0x7fff, lsl #48
   33d64:	sub	x0, x0, x19
   33d68:	cmp	x0, x21
   33d6c:	b.lt	33efc <mpfr_sincos_fast@@Base+0x464>  // b.tstop
   33d70:	add	x19, x19, x21
   33d74:	add	x21, x19, x19, lsr #63
   33d78:	asr	x21, x21, #1
   33d7c:	ldr	x1, [sp, #176]
   33d80:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   33d84:	cmp	x19, x0
   33d88:	b.ge	33f14 <mpfr_sincos_fast@@Base+0x47c>  // b.tcont
   33d8c:	add	x20, x19, #0x3e
   33d90:	subs	x0, x19, #0x1
   33d94:	csel	x20, x20, x0, mi  // mi = first
   33d98:	asr	x20, x20, #6
   33d9c:	add	x20, x20, #0x1
   33da0:	lsl	x0, x20, #4
   33da4:	str	x0, [sp, #176]
   33da8:	cbnz	x1, 33f18 <mpfr_sincos_fast@@Base+0x480>
   33dac:	bl	ccf0 <mpfr_allocate_func@plt>
   33db0:	str	x0, [sp, #184]
   33db4:	str	x19, [sp, #352]
   33db8:	ldr	x1, [sp, #184]
   33dbc:	str	x1, [sp, #376]
   33dc0:	mov	w0, #0x1                   	// #1
   33dc4:	str	w0, [sp, #360]
   33dc8:	str	x19, [sp, #320]
   33dcc:	add	x20, x1, x20, lsl #3
   33dd0:	str	x20, [sp, #344]
   33dd4:	str	w0, [sp, #328]
   33dd8:	ldr	w0, [x22, #8]
   33ddc:	cmp	w0, #0x0
   33de0:	b.gt	33bec <mpfr_sincos_fast@@Base+0x154>
   33de4:	ldr	w0, [x22, #8]
   33de8:	tbnz	w0, #31, 33c24 <mpfr_sincos_fast@@Base+0x18c>
   33dec:	mov	x1, x19
   33df0:	mov	x0, x24
   33df4:	bl	ca80 <mpfr_init2@plt>
   33df8:	ldr	x0, [x22, #16]
   33dfc:	add	x1, x0, x19
   33e00:	cmp	x0, #0x0
   33e04:	csel	x1, x1, x19, gt
   33e08:	mov	x0, x23
   33e0c:	bl	ca80 <mpfr_init2@plt>
   33e10:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   33e14:	ldr	x1, [x0, #2624]
   33e18:	add	x0, x0, #0xa40
   33e1c:	blr	x1
   33e20:	mov	w2, #0x0                   	// #0
   33e24:	mrs	x1, tpidr_el0
   33e28:	add	x1, x1, x0
   33e2c:	mov	x0, x23
   33e30:	bl	c380 <mpfr_cache@plt>
   33e34:	mov	w3, #0x0                   	// #0
   33e38:	mov	x2, #0x1                   	// #1
   33e3c:	mov	x1, x23
   33e40:	mov	x0, x23
   33e44:	bl	c8f0 <mpfr_div_2ui@plt>
   33e48:	mov	w4, #0x0                   	// #0
   33e4c:	mov	x3, x23
   33e50:	mov	x2, x22
   33e54:	ldr	x1, [sp, #104]
   33e58:	mov	x0, x24
   33e5c:	bl	c510 <mpfr_remquo@plt>
   33e60:	ldr	w0, [sp, #392]
   33e64:	tbnz	w0, #31, 33c84 <mpfr_sincos_fast@@Base+0x1ec>
   33e68:	mov	w3, #0x0                   	// #0
   33e6c:	mov	x2, x24
   33e70:	mov	x1, x26
   33e74:	mov	x0, x25
   33e78:	bl	33650 <mpfr_acos@@Base+0xe1c>
   33e7c:	sxtw	x0, w0
   33e80:	add	x20, x0, #0x1
   33e84:	ldr	x0, [sp, #136]
   33e88:	tbnz	w0, #1, 33cc4 <mpfr_sincos_fast@@Base+0x22c>
   33e8c:	ldr	x0, [sp, #136]
   33e90:	tbnz	w0, #0, 33ce8 <mpfr_sincos_fast@@Base+0x250>
   33e94:	mov	x0, x24
   33e98:	bl	c070 <mpfr_clear@plt>
   33e9c:	mov	x0, x23
   33ea0:	bl	c070 <mpfr_clear@plt>
   33ea4:	ldr	x27, [sp, #336]
   33ea8:	cbz	x28, 33d08 <mpfr_sincos_fast@@Base+0x270>
   33eac:	ldr	x2, [sp, #368]
   33eb0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33eb4:	cmp	x2, x0
   33eb8:	b.le	33d5c <mpfr_sincos_fast@@Base+0x2c4>
   33ebc:	ldr	w0, [sp, #116]
   33ec0:	cmp	w0, #0x0
   33ec4:	ldr	x3, [x28]
   33ec8:	cinc	x3, x3, eq  // eq = none
   33ecc:	sub	x2, x20, x2
   33ed0:	ldr	x0, [sp, #352]
   33ed4:	add	x1, x0, #0x3e
   33ed8:	subs	x0, x0, #0x1
   33edc:	csel	x1, x1, x0, mi  // mi = first
   33ee0:	asr	x1, x1, #6
   33ee4:	sub	x2, x19, x2
   33ee8:	add	x1, x1, #0x1
   33eec:	ldr	x0, [sp, #376]
   33ef0:	bl	c370 <mpfr_round_p@plt>
   33ef4:	cbz	w0, 33d5c <mpfr_sincos_fast@@Base+0x2c4>
   33ef8:	b	33d08 <mpfr_sincos_fast@@Base+0x270>
   33efc:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   33f00:	add	x2, x2, #0x3e8
   33f04:	mov	w1, #0x28f                 	// #655
   33f08:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   33f0c:	add	x0, x0, #0x2a0
   33f10:	bl	cb40 <mpfr_assert_fail@plt>
   33f14:	bl	c8e0 <mpfr_abort_prec_max@plt>
   33f18:	mov	x2, x0
   33f1c:	ldr	x0, [sp, #184]
   33f20:	bl	c1c0 <mpfr_reallocate_func@plt>
   33f24:	str	x0, [sp, #184]
   33f28:	b	33db4 <mpfr_sincos_fast@@Base+0x31c>
   33f2c:	mov	w19, #0x0                   	// #0
   33f30:	mov	w20, #0x0                   	// #0
   33f34:	b	33f78 <mpfr_sincos_fast@@Base+0x4e0>
   33f38:	mov	w19, #0x0                   	// #0
   33f3c:	cbz	x28, 33f58 <mpfr_sincos_fast@@Base+0x4c0>
   33f40:	ldr	w3, [sp, #360]
   33f44:	ldr	w2, [sp, #116]
   33f48:	add	x1, sp, #0x160
   33f4c:	mov	x0, x28
   33f50:	bl	c6a0 <mpfr_set4@plt>
   33f54:	mov	w19, w0
   33f58:	ldr	w3, [sp, #328]
   33f5c:	ldr	w2, [sp, #116]
   33f60:	add	x1, sp, #0x140
   33f64:	ldr	x0, [sp, #120]
   33f68:	bl	c6a0 <mpfr_set4@plt>
   33f6c:	mov	w20, w0
   33f70:	ldr	x1, [sp, #176]
   33f74:	cbz	x1, 33f80 <mpfr_sincos_fast@@Base+0x4e8>
   33f78:	ldr	x0, [sp, #184]
   33f7c:	bl	cc20 <mpfr_free_func@plt>
   33f80:	cbz	w19, 33f90 <mpfr_sincos_fast@@Base+0x4f8>
   33f84:	cmp	w19, #0x0
   33f88:	cset	w19, le
   33f8c:	add	w19, w19, #0x1
   33f90:	cbz	w20, 33fa4 <mpfr_sincos_fast@@Base+0x50c>
   33f94:	cmp	w20, #0x0
   33f98:	mov	w0, #0x4                   	// #4
   33f9c:	mov	w20, #0x8                   	// #8
   33fa0:	csel	w20, w0, w20, gt
   33fa4:	orr	w0, w19, w20
   33fa8:	ldp	x19, x20, [sp, #16]
   33fac:	ldp	x21, x22, [sp, #32]
   33fb0:	ldp	x23, x24, [sp, #48]
   33fb4:	ldp	x25, x26, [sp, #64]
   33fb8:	ldp	x27, x28, [sp, #80]
   33fbc:	ldp	x29, x30, [sp], #416
   33fc0:	ret
   33fc4:	cbz	x28, 33fe8 <mpfr_sincos_fast@@Base+0x550>
   33fc8:	ldr	w3, [sp, #360]
   33fcc:	ldr	w2, [sp, #116]
   33fd0:	add	x1, sp, #0x160
   33fd4:	mov	x0, x28
   33fd8:	bl	c6a0 <mpfr_set4@plt>
   33fdc:	mov	w19, w0
   33fe0:	mov	w20, #0x0                   	// #0
   33fe4:	b	33f70 <mpfr_sincos_fast@@Base+0x4d8>
   33fe8:	ldr	x1, [sp, #176]
   33fec:	cbnz	x1, 33f2c <mpfr_sincos_fast@@Base+0x494>
   33ff0:	mov	w20, #0x0                   	// #0
   33ff4:	mov	w19, #0x0                   	// #0
   33ff8:	b	33f90 <mpfr_sincos_fast@@Base+0x4f8>

0000000000033ffc <mpfr_sin_cos@@Base>:
   33ffc:	stp	x29, x30, [sp, #-224]!
   34000:	mov	x29, sp
   34004:	str	x0, [sp, #128]
   34008:	str	w3, [sp, #136]
   3400c:	cmp	x0, x1
   34010:	b.eq	34118 <mpfr_sin_cos@@Base+0x11c>  // b.none
   34014:	stp	x19, x20, [sp, #16]
   34018:	stp	x23, x24, [sp, #48]
   3401c:	stp	x25, x26, [sp, #64]
   34020:	stp	x27, x28, [sp, #80]
   34024:	mov	x28, x1
   34028:	mov	x26, x2
   3402c:	ldr	x24, [x2, #16]
   34030:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34034:	cmp	x24, x0
   34038:	b.le	34144 <mpfr_sin_cos@@Base+0x148>
   3403c:	stp	x21, x22, [sp, #32]
   34040:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34044:	ldr	x1, [x0, #2576]
   34048:	add	x0, x0, #0xa10
   3404c:	blr	x1
   34050:	mrs	x1, tpidr_el0
   34054:	ldr	w0, [x1, x0]
   34058:	str	w0, [sp, #140]
   3405c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34060:	ldr	x2, [x0, #2512]
   34064:	add	x0, x0, #0x9d0
   34068:	blr	x2
   3406c:	add	x2, x1, x0
   34070:	ldr	x0, [x1, x0]
   34074:	str	x0, [sp, #144]
   34078:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3407c:	ldr	x3, [x0, #2544]
   34080:	add	x0, x0, #0x9f0
   34084:	blr	x3
   34088:	ldr	x3, [x1, x0]
   3408c:	str	x3, [sp, #152]
   34090:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   34094:	str	x3, [x2]
   34098:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3409c:	str	x2, [x1, x0]
   340a0:	ldr	x3, [x28]
   340a4:	ldr	x0, [sp, #128]
   340a8:	ldr	x0, [x0]
   340ac:	cmp	x3, x0
   340b0:	csel	x21, x3, x0, ge  // ge = tcont
   340b4:	cmp	x21, #0x1
   340b8:	b.eq	348ac <mpfr_sin_cos@@Base+0x8b0>  // b.none
   340bc:	b.le	341d4 <mpfr_sin_cos@@Base+0x1d8>
   340c0:	sub	x1, x21, #0x1
   340c4:	clz	x1, x1
   340c8:	mov	w19, #0x40                  	// #64
   340cc:	sub	w19, w19, w1
   340d0:	add	x19, x21, w19, sxtw
   340d4:	add	x19, x19, #0xd
   340d8:	tbnz	x24, #63, 348b8 <mpfr_sin_cos@@Base+0x8bc>
   340dc:	mov	x0, #0x752f                	// #29999
   340e0:	cmp	x21, x0
   340e4:	b.gt	34374 <mpfr_sin_cos@@Base+0x378>
   340e8:	add	x0, sp, #0xc0
   340ec:	bl	bbd0 <mpfr_init@plt>
   340f0:	add	x0, sp, #0xa0
   340f4:	bl	bbd0 <mpfr_init@plt>
   340f8:	mov	x21, #0x40                  	// #64
   340fc:	add	x20, sp, #0xc0
   34100:	mov	w25, #0x1                   	// #1
   34104:	mov	w22, #0x0                   	// #0
   34108:	add	x23, sp, #0xa0
   3410c:	mov	x27, #0xfffffffffffffeff    	// #-257
   34110:	movk	x27, #0x7fff, lsl #48
   34114:	b	347a8 <mpfr_sin_cos@@Base+0x7ac>
   34118:	stp	x19, x20, [sp, #16]
   3411c:	stp	x21, x22, [sp, #32]
   34120:	stp	x23, x24, [sp, #48]
   34124:	stp	x25, x26, [sp, #64]
   34128:	stp	x27, x28, [sp, #80]
   3412c:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34130:	add	x2, x2, #0x2c0
   34134:	mov	w1, #0x28                  	// #40
   34138:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3413c:	add	x0, x0, #0x2a0
   34140:	bl	cb40 <mpfr_assert_fail@plt>
   34144:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   34148:	add	x24, x24, x0
   3414c:	cmp	x24, #0x1
   34150:	b.ls	34198 <mpfr_sin_cos@@Base+0x19c>  // b.plast
   34154:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34158:	ldr	x1, [sp, #128]
   3415c:	str	x0, [x1, #16]
   34160:	ldr	w0, [x2, #8]
   34164:	str	w0, [x1, #8]
   34168:	ldr	w3, [sp, #136]
   3416c:	mov	x2, #0x0                   	// #0
   34170:	mov	x1, #0x1                   	// #1
   34174:	mov	x0, x28
   34178:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3417c:	mov	w20, w0
   34180:	cbz	w0, 343dc <mpfr_sin_cos@@Base+0x3e0>
   34184:	cmp	w0, #0x0
   34188:	mov	w20, #0x4                   	// #4
   3418c:	mov	w0, #0x8                   	// #8
   34190:	csel	w20, w20, w0, gt
   34194:	b	343dc <mpfr_sin_cos@@Base+0x3e0>
   34198:	add	x0, x0, #0x4
   3419c:	ldr	x1, [sp, #128]
   341a0:	str	x0, [x1, #16]
   341a4:	str	x0, [x28, #16]
   341a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   341ac:	ldr	x1, [x0, #2576]
   341b0:	add	x0, x0, #0xa10
   341b4:	blr	x1
   341b8:	mrs	x1, tpidr_el0
   341bc:	add	x0, x1, x0
   341c0:	ldr	w1, [x0]
   341c4:	orr	w1, w1, #0x4
   341c8:	str	w1, [x0]
   341cc:	mov	w20, #0x0                   	// #0
   341d0:	b	343dc <mpfr_sin_cos@@Base+0x3e0>
   341d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   341d8:	add	x2, x2, #0xd58
   341dc:	mov	w1, #0x47                  	// #71
   341e0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   341e4:	add	x0, x0, #0x2a0
   341e8:	bl	cb40 <mpfr_assert_fail@plt>
   341ec:	ldr	w4, [sp, #136]
   341f0:	mov	w3, #0x0                   	// #0
   341f4:	mov	x1, x26
   341f8:	ldr	x0, [sp, #128]
   341fc:	bl	c540 <mpfr_round_near_x@plt>
   34200:	mov	w20, w0
   34204:	cbz	w0, 348d8 <mpfr_sin_cos@@Base+0x8dc>
   34208:	add	x2, x22, #0x1
   3420c:	ldr	x0, [x28]
   34210:	add	x0, x0, #0x1
   34214:	cmp	x0, x2
   34218:	b.cs	348d8 <mpfr_sin_cos@@Base+0x8dc>  // b.hs, b.nlast
   3421c:	ldr	w4, [sp, #136]
   34220:	mov	w3, #0x0                   	// #0
   34224:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   34228:	ldr	x1, [x1, #3928]
   3422c:	mov	x0, x28
   34230:	bl	c540 <mpfr_round_near_x@plt>
   34234:	mov	w22, w0
   34238:	cbz	w0, 348d8 <mpfr_sin_cos@@Base+0x8dc>
   3423c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34240:	ldr	x1, [x0, #2576]
   34244:	add	x0, x0, #0xa10
   34248:	blr	x1
   3424c:	mrs	x1, tpidr_el0
   34250:	ldr	w0, [x1, x0]
   34254:	ldr	w1, [sp, #140]
   34258:	orr	w0, w1, w0
   3425c:	str	w0, [sp, #140]
   34260:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34264:	ldr	x1, [x0, #2576]
   34268:	add	x0, x0, #0xa10
   3426c:	blr	x1
   34270:	mrs	x1, tpidr_el0
   34274:	ldr	w2, [sp, #140]
   34278:	str	w2, [x1, x0]
   3427c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34280:	ldr	x2, [x0, #2512]
   34284:	add	x0, x0, #0x9d0
   34288:	blr	x2
   3428c:	ldr	x2, [sp, #144]
   34290:	str	x2, [x1, x0]
   34294:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34298:	ldr	x3, [x0, #2544]
   3429c:	add	x0, x0, #0x9f0
   342a0:	blr	x3
   342a4:	ldr	x3, [sp, #152]
   342a8:	str	x3, [x1, x0]
   342ac:	ldr	x0, [sp, #128]
   342b0:	ldr	x0, [x0, #16]
   342b4:	cmp	x2, x0
   342b8:	ccmp	x3, x0, #0x1, le
   342bc:	b.lt	34664 <mpfr_sin_cos@@Base+0x668>  // b.tstop
   342c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   342c4:	ldr	x1, [x0, #2576]
   342c8:	add	x0, x0, #0xa10
   342cc:	blr	x1
   342d0:	ldr	w1, [sp, #140]
   342d4:	orr	w2, w1, #0x8
   342d8:	mrs	x1, tpidr_el0
   342dc:	str	w2, [x1, x0]
   342e0:	b	345f8 <mpfr_sin_cos@@Base+0x5fc>
   342e4:	neg	x20, x24, lsl #1
   342e8:	add	x2, x20, #0x1
   342ec:	add	x3, x3, #0x1
   342f0:	cmp	x3, x2
   342f4:	b.cs	348d8 <mpfr_sin_cos@@Base+0x8dc>  // b.hs, b.nlast
   342f8:	ldr	w4, [sp, #136]
   342fc:	mov	w3, #0x0                   	// #0
   34300:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   34304:	ldr	x1, [x1, #3928]
   34308:	mov	x0, x28
   3430c:	bl	c540 <mpfr_round_near_x@plt>
   34310:	mov	w22, w0
   34314:	cbz	w0, 348d8 <mpfr_sin_cos@@Base+0x8dc>
   34318:	add	x2, x20, #0x2
   3431c:	ldr	x0, [sp, #128]
   34320:	ldr	x0, [x0]
   34324:	add	x0, x0, #0x1
   34328:	cmp	x0, x2
   3432c:	b.cs	348d8 <mpfr_sin_cos@@Base+0x8dc>  // b.hs, b.nlast
   34330:	ldr	w4, [sp, #136]
   34334:	mov	w3, #0x0                   	// #0
   34338:	mov	x1, x26
   3433c:	ldr	x0, [sp, #128]
   34340:	bl	c540 <mpfr_round_near_x@plt>
   34344:	mov	w20, w0
   34348:	cbz	w0, 348d8 <mpfr_sin_cos@@Base+0x8dc>
   3434c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34350:	ldr	x1, [x0, #2576]
   34354:	add	x0, x0, #0xa10
   34358:	blr	x1
   3435c:	mrs	x1, tpidr_el0
   34360:	ldr	w0, [x1, x0]
   34364:	ldr	w1, [sp, #140]
   34368:	orr	w0, w1, w0
   3436c:	str	w0, [sp, #140]
   34370:	b	34260 <mpfr_sin_cos@@Base+0x264>
   34374:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34378:	ldr	x1, [x0, #2576]
   3437c:	add	x0, x0, #0xa10
   34380:	blr	x1
   34384:	mrs	x1, tpidr_el0
   34388:	ldr	w2, [sp, #140]
   3438c:	str	w2, [x1, x0]
   34390:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34394:	ldr	x2, [x0, #2512]
   34398:	add	x0, x0, #0x9d0
   3439c:	blr	x2
   343a0:	ldr	x2, [sp, #144]
   343a4:	str	x2, [x1, x0]
   343a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   343ac:	ldr	x2, [x0, #2544]
   343b0:	add	x0, x0, #0x9f0
   343b4:	blr	x2
   343b8:	ldr	x2, [sp, #152]
   343bc:	str	x2, [x1, x0]
   343c0:	ldr	w3, [sp, #136]
   343c4:	mov	x2, x26
   343c8:	mov	x1, x28
   343cc:	ldr	x0, [sp, #128]
   343d0:	bl	c020 <mpfr_sincos_fast@plt>
   343d4:	mov	w20, w0
   343d8:	ldp	x21, x22, [sp, #32]
   343dc:	mov	w0, w20
   343e0:	ldp	x19, x20, [sp, #16]
   343e4:	ldp	x23, x24, [sp, #48]
   343e8:	ldp	x25, x26, [sp, #64]
   343ec:	ldp	x27, x28, [sp, #80]
   343f0:	ldp	x29, x30, [sp], #224
   343f4:	ret
   343f8:	mov	w3, w25
   343fc:	mov	x2, x23
   34400:	mov	x1, x20
   34404:	mov	x0, x20
   34408:	bl	c1a0 <mpfr_add@plt>
   3440c:	b	3484c <mpfr_sin_cos@@Base+0x850>
   34410:	ldr	x1, [sp, #192]
   34414:	mov	x0, x23
   34418:	bl	bed0 <mpfr_set_prec@plt>
   3441c:	mov	x1, x20
   34420:	mov	x0, x23
   34424:	bl	c4a0 <mpfr_swap@plt>
   34428:	mov	w2, #0x2                   	// #2
   3442c:	mov	x1, x23
   34430:	mov	x0, x20
   34434:	bl	c400 <mpfr_sqr@plt>
   34438:	mov	w3, w22
   3443c:	mov	x2, x20
   34440:	mov	x1, #0x1                   	// #1
   34444:	mov	x0, x20
   34448:	bl	ca50 <mpfr_ui_sub@plt>
   3444c:	mov	w2, w22
   34450:	mov	x1, x20
   34454:	mov	x0, x20
   34458:	bl	c930 <mpfr_sqrt@plt>
   3445c:	ldr	x1, [sp, #208]
   34460:	ldr	w0, [sp, #116]
   34464:	add	w0, w0, #0x1
   34468:	add	w0, w0, w0, lsl #1
   3446c:	sxtw	x0, w0
   34470:	sub	x0, x0, x1
   34474:	ldr	w2, [sp, #104]
   34478:	tbnz	w2, #31, 34520 <mpfr_sin_cos@@Base+0x524>
   3447c:	add	x2, x1, x19
   34480:	sub	x2, x2, x0
   34484:	str	x2, [sp, #104]
   34488:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3448c:	cmp	x1, x0
   34490:	b.le	344c8 <mpfr_sin_cos@@Base+0x4cc>
   34494:	ldr	x0, [sp, #128]
   34498:	ldr	x3, [x0]
   3449c:	ldr	x0, [sp, #192]
   344a0:	add	x1, x0, #0x3e
   344a4:	subs	x0, x0, #0x1
   344a8:	csel	x1, x1, x0, mi  // mi = first
   344ac:	asr	x1, x1, #6
   344b0:	ldr	x0, [sp, #120]
   344b4:	add	x3, x0, x3
   344b8:	add	x1, x1, #0x1
   344bc:	ldr	x0, [sp, #216]
   344c0:	bl	c370 <mpfr_round_p@plt>
   344c4:	cbnz	w0, 34548 <mpfr_sin_cos@@Base+0x54c>
   344c8:	ldr	x0, [sp, #128]
   344cc:	ldr	x1, [x0]
   344d0:	ldr	x2, [sp, #104]
   344d4:	sub	x0, x1, x2
   344d8:	add	x0, x19, x0
   344dc:	cmp	x1, x2
   344e0:	csel	x19, x0, x19, gt
   344e4:	ldr	x0, [sp, #208]
   344e8:	cmp	x0, #0x1
   344ec:	b.ne	34784 <mpfr_sin_cos@@Base+0x788>  // b.any
   344f0:	ldr	x1, [sp, #192]
   344f4:	add	x0, x1, #0x3e
   344f8:	subs	x1, x1, #0x1
   344fc:	csel	x0, x0, x1, mi  // mi = first
   34500:	asr	x0, x0, #6
   34504:	ldr	x1, [sp, #216]
   34508:	ldr	x2, [x1, x0, lsl #3]
   3450c:	lsl	x0, x19, #1
   34510:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   34514:	cmp	x2, x1
   34518:	csel	x19, x0, x19, eq  // eq = none
   3451c:	b	34784 <mpfr_sin_cos@@Base+0x788>
   34520:	ldr	w2, [sp, #200]
   34524:	neg	w2, w2
   34528:	str	w2, [sp, #200]
   3452c:	b	3447c <mpfr_sin_cos@@Base+0x480>
   34530:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34534:	add	x2, x2, #0x18
   34538:	mov	w1, #0xd2                  	// #210
   3453c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34540:	add	x0, x0, #0x2a0
   34544:	bl	cb40 <mpfr_assert_fail@plt>
   34548:	add	x21, sp, #0xc0
   3454c:	ldr	w3, [sp, #200]
   34550:	ldr	w22, [sp, #136]
   34554:	mov	w2, w22
   34558:	mov	x1, x21
   3455c:	ldr	x23, [sp, #128]
   34560:	mov	x0, x23
   34564:	bl	c6a0 <mpfr_set4@plt>
   34568:	mov	w20, w0
   3456c:	add	x19, sp, #0xa0
   34570:	ldr	w3, [sp, #168]
   34574:	mov	w2, w22
   34578:	mov	x1, x19
   3457c:	mov	x0, x28
   34580:	bl	c6a0 <mpfr_set4@plt>
   34584:	mov	w22, w0
   34588:	mov	x0, x21
   3458c:	bl	c070 <mpfr_clear@plt>
   34590:	mov	x0, x19
   34594:	bl	c070 <mpfr_clear@plt>
   34598:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3459c:	ldr	x1, [x0, #2576]
   345a0:	add	x0, x0, #0xa10
   345a4:	blr	x1
   345a8:	mrs	x1, tpidr_el0
   345ac:	ldr	w2, [sp, #140]
   345b0:	str	w2, [x1, x0]
   345b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   345b8:	ldr	x2, [x0, #2512]
   345bc:	add	x0, x0, #0x9d0
   345c0:	blr	x2
   345c4:	ldr	x2, [sp, #144]
   345c8:	str	x2, [x1, x0]
   345cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   345d0:	ldr	x3, [x0, #2544]
   345d4:	add	x0, x0, #0x9f0
   345d8:	blr	x3
   345dc:	ldr	x3, [sp, #152]
   345e0:	str	x3, [x1, x0]
   345e4:	ldr	x0, [x23, #16]
   345e8:	cmp	x3, x0
   345ec:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   345f0:	b.gt	34664 <mpfr_sin_cos@@Base+0x668>
   345f4:	cbnz	w20, 342c0 <mpfr_sin_cos@@Base+0x2c4>
   345f8:	ldr	x1, [x28, #16]
   345fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34600:	ldr	x2, [x0, #2512]
   34604:	add	x0, x0, #0x9d0
   34608:	blr	x2
   3460c:	mrs	x2, tpidr_el0
   34610:	ldr	x0, [x2, x0]
   34614:	cmp	x1, x0
   34618:	b.lt	3463c <mpfr_sin_cos@@Base+0x640>  // b.tstop
   3461c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34620:	ldr	x2, [x0, #2544]
   34624:	add	x0, x0, #0x9f0
   34628:	blr	x2
   3462c:	mrs	x2, tpidr_el0
   34630:	ldr	x0, [x2, x0]
   34634:	cmp	x1, x0
   34638:	b.le	346f4 <mpfr_sin_cos@@Base+0x6f8>
   3463c:	ldr	w2, [sp, #136]
   34640:	mov	w1, w22
   34644:	mov	x0, x28
   34648:	bl	cb30 <mpfr_check_range@plt>
   3464c:	mov	w22, w0
   34650:	cbnz	w20, 346a4 <mpfr_sin_cos@@Base+0x6a8>
   34654:	cbnz	w22, 346b4 <mpfr_sin_cos@@Base+0x6b8>
   34658:	mov	w20, w22
   3465c:	ldp	x21, x22, [sp, #32]
   34660:	b	343dc <mpfr_sin_cos@@Base+0x3e0>
   34664:	ldr	w2, [sp, #136]
   34668:	mov	w1, w20
   3466c:	ldr	x0, [sp, #128]
   34670:	bl	cb30 <mpfr_check_range@plt>
   34674:	mov	w20, w0
   34678:	b	345f8 <mpfr_sin_cos@@Base+0x5fc>
   3467c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34680:	ldr	x1, [x0, #2576]
   34684:	add	x0, x0, #0xa10
   34688:	blr	x1
   3468c:	mrs	x1, tpidr_el0
   34690:	add	x0, x1, x0
   34694:	ldr	w1, [x0]
   34698:	orr	w1, w1, #0x8
   3469c:	str	w1, [x0]
   346a0:	cbz	w20, 346b4 <mpfr_sin_cos@@Base+0x6b8>
   346a4:	cmp	w20, #0x0
   346a8:	cset	w20, le
   346ac:	add	w20, w20, #0x1
   346b0:	cbz	w22, 346c8 <mpfr_sin_cos@@Base+0x6cc>
   346b4:	cmp	w22, #0x0
   346b8:	mov	w0, #0x4                   	// #4
   346bc:	mov	w1, #0x8                   	// #8
   346c0:	csel	w0, w0, w1, gt
   346c4:	orr	w20, w20, w0
   346c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   346cc:	ldr	x1, [x0, #2576]
   346d0:	add	x0, x0, #0xa10
   346d4:	blr	x1
   346d8:	mrs	x1, tpidr_el0
   346dc:	add	x0, x1, x0
   346e0:	ldr	w1, [x0]
   346e4:	orr	w1, w1, #0x8
   346e8:	str	w1, [x0]
   346ec:	ldp	x21, x22, [sp, #32]
   346f0:	b	343dc <mpfr_sin_cos@@Base+0x3e0>
   346f4:	cbnz	w22, 3467c <mpfr_sin_cos@@Base+0x680>
   346f8:	cbnz	w20, 346a4 <mpfr_sin_cos@@Base+0x6a8>
   346fc:	ldp	x21, x22, [sp, #32]
   34700:	b	343dc <mpfr_sin_cos@@Base+0x3e0>
   34704:	ldr	w0, [sp, #168]
   34708:	str	w0, [sp, #104]
   3470c:	mov	x1, x19
   34710:	mov	x0, x20
   34714:	bl	bed0 <mpfr_set_prec@plt>
   34718:	mov	w2, w25
   3471c:	mov	x1, x23
   34720:	mov	x0, x20
   34724:	bl	c430 <mpfr_cos@plt>
   34728:	sub	x2, x19, #0x3
   3472c:	ldr	x0, [sp, #208]
   34730:	add	x2, x2, x0
   34734:	str	w25, [sp, #116]
   34738:	ldr	x1, [sp, #208]
   3473c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34740:	cmp	x1, x0
   34744:	b.le	34784 <mpfr_sin_cos@@Base+0x788>
   34748:	ldr	w0, [sp, #136]
   3474c:	cmp	w0, #0x0
   34750:	cset	x0, eq  // eq = none
   34754:	str	x0, [sp, #120]
   34758:	ldr	x3, [x28]
   3475c:	cinc	x3, x3, eq  // eq = none
   34760:	ldr	x0, [sp, #192]
   34764:	add	x1, x0, #0x3e
   34768:	subs	x0, x0, #0x1
   3476c:	csel	x1, x1, x0, mi  // mi = first
   34770:	asr	x1, x1, #6
   34774:	add	x1, x1, #0x1
   34778:	ldr	x0, [sp, #216]
   3477c:	bl	c370 <mpfr_round_p@plt>
   34780:	cbnz	w0, 34410 <mpfr_sin_cos@@Base+0x414>
   34784:	sub	x0, x27, x19
   34788:	cmp	x0, x21
   3478c:	b.lt	34530 <mpfr_sin_cos@@Base+0x534>  // b.tstop
   34790:	add	x19, x19, x21
   34794:	add	x21, x19, x19, lsr #63
   34798:	asr	x21, x21, #1
   3479c:	mov	x1, x19
   347a0:	mov	x0, x20
   347a4:	bl	bed0 <mpfr_set_prec@plt>
   347a8:	cmp	x24, #0x1
   347ac:	b.le	3487c <mpfr_sin_cos@@Base+0x880>
   347b0:	add	x1, x24, x19
   347b4:	sub	x1, x1, #0x1
   347b8:	mov	x0, x20
   347bc:	bl	bed0 <mpfr_set_prec@plt>
   347c0:	mov	x1, x19
   347c4:	mov	x0, x23
   347c8:	bl	bed0 <mpfr_set_prec@plt>
   347cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   347d0:	ldr	x1, [x0, #2624]
   347d4:	add	x0, x0, #0xa40
   347d8:	blr	x1
   347dc:	mov	w2, w22
   347e0:	mrs	x1, tpidr_el0
   347e4:	add	x1, x1, x0
   347e8:	mov	x0, x20
   347ec:	bl	c380 <mpfr_cache@plt>
   347f0:	mov	w3, w22
   347f4:	mov	x2, #0x1                   	// #1
   347f8:	mov	x1, x20
   347fc:	mov	x0, x20
   34800:	bl	c2c0 <mpfr_mul_2ui@plt>
   34804:	mov	w3, w22
   34808:	mov	x2, x20
   3480c:	mov	x1, x26
   34810:	mov	x0, x23
   34814:	bl	cd10 <mpfr_remainder@plt>
   34818:	mov	w3, w22
   3481c:	mov	x2, #0x1                   	// #1
   34820:	mov	x1, x20
   34824:	mov	x0, x20
   34828:	bl	c8f0 <mpfr_div_2ui@plt>
   3482c:	ldr	w0, [sp, #168]
   34830:	cmp	w0, #0x0
   34834:	b.le	343f8 <mpfr_sin_cos@@Base+0x3fc>
   34838:	mov	w3, w25
   3483c:	mov	x2, x23
   34840:	mov	x1, x20
   34844:	mov	x0, x20
   34848:	bl	bb70 <mpfr_sub@plt>
   3484c:	ldr	x1, [sp, #176]
   34850:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34854:	cmp	x1, x0
   34858:	b.eq	34784 <mpfr_sin_cos@@Base+0x788>  // b.none
   3485c:	mov	x0, #0x3                   	// #3
   34860:	sub	x0, x0, x19
   34864:	cmp	x1, x0
   34868:	b.lt	34784 <mpfr_sin_cos@@Base+0x788>  // b.tstop
   3486c:	ldr	x1, [sp, #208]
   34870:	cmp	x0, x1
   34874:	b.le	34704 <mpfr_sin_cos@@Base+0x708>
   34878:	b	34784 <mpfr_sin_cos@@Base+0x788>
   3487c:	ldr	w0, [x26, #8]
   34880:	str	w0, [sp, #104]
   34884:	mov	x1, x19
   34888:	mov	x0, x20
   3488c:	bl	bed0 <mpfr_set_prec@plt>
   34890:	mov	w2, w25
   34894:	mov	x1, x26
   34898:	mov	x0, x20
   3489c:	bl	c430 <mpfr_cos@plt>
   348a0:	mov	x2, x19
   348a4:	str	w22, [sp, #116]
   348a8:	b	34738 <mpfr_sin_cos@@Base+0x73c>
   348ac:	mov	x19, #0xe                   	// #14
   348b0:	tbz	x24, #63, 340e8 <mpfr_sin_cos@@Base+0xec>
   348b4:	mov	x19, #0xe                   	// #14
   348b8:	ldr	x1, [sp, #128]
   348bc:	cmp	x1, x26
   348c0:	b.eq	342e4 <mpfr_sin_cos@@Base+0x2e8>  // b.none
   348c4:	neg	x22, x24, lsl #1
   348c8:	add	x2, x22, #0x2
   348cc:	add	x0, x0, #0x1
   348d0:	cmp	x0, x2
   348d4:	b.cc	341ec <mpfr_sin_cos@@Base+0x1f0>  // b.lo, b.ul, b.last
   348d8:	sub	x19, x19, x24, lsl #1
   348dc:	b	340dc <mpfr_sin_cos@@Base+0xe0>

00000000000348e0 <mpfr_set_nan@@Base>:
   348e0:	stp	x29, x30, [sp, #-16]!
   348e4:	mov	x29, sp
   348e8:	mov	x1, #0x2                   	// #2
   348ec:	movk	x1, #0x8000, lsl #48
   348f0:	str	x1, [x0, #16]
   348f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   348f8:	ldr	x1, [x0, #2576]
   348fc:	add	x0, x0, #0xa10
   34900:	blr	x1
   34904:	mrs	x1, tpidr_el0
   34908:	add	x0, x1, x0
   3490c:	ldr	w1, [x0]
   34910:	orr	w1, w1, #0x4
   34914:	str	w1, [x0]
   34918:	ldp	x29, x30, [sp], #16
   3491c:	ret

0000000000034920 <mpfr_set_inf@@Base>:
   34920:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34924:	str	x2, [x0, #16]
   34928:	mov	w2, #0xffffffff            	// #-1
   3492c:	cmp	w1, #0x0
   34930:	cneg	w2, w2, ge  // ge = tcont
   34934:	str	w2, [x0, #8]
   34938:	ret

000000000003493c <mpfr_set_zero@@Base>:
   3493c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   34940:	str	x2, [x0, #16]
   34944:	cmp	w1, #0x0
   34948:	mov	w1, #0xffffffff            	// #-1
   3494c:	csinc	w1, w1, wzr, lt  // lt = tstop
   34950:	str	w1, [x0, #8]
   34954:	ret

0000000000034958 <mpfr_powerof2_raw2@@Base>:
   34958:	sub	x1, x1, #0x1
   3495c:	ldr	x3, [x0, x1, lsl #3]
   34960:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   34964:	cmp	x3, x2
   34968:	b.ne	34990 <mpfr_powerof2_raw2@@Base+0x38>  // b.any
   3496c:	cmp	x1, #0x0
   34970:	b.le	34988 <mpfr_powerof2_raw2@@Base+0x30>
   34974:	sub	x1, x1, #0x1
   34978:	ldr	x2, [x0, x1, lsl #3]
   3497c:	cbz	x2, 3496c <mpfr_powerof2_raw2@@Base+0x14>
   34980:	mov	w0, #0x0                   	// #0
   34984:	b	34994 <mpfr_powerof2_raw2@@Base+0x3c>
   34988:	mov	w0, #0x1                   	// #1
   3498c:	b	34994 <mpfr_powerof2_raw2@@Base+0x3c>
   34990:	mov	w0, #0x0                   	// #0
   34994:	ret

0000000000034998 <mpfr_powerof2_raw@@Base>:
   34998:	stp	x29, x30, [sp, #-16]!
   3499c:	mov	x29, sp
   349a0:	ldr	x2, [x0]
   349a4:	add	x1, x2, #0x3e
   349a8:	subs	x2, x2, #0x1
   349ac:	csel	x1, x1, x2, mi  // mi = first
   349b0:	asr	x1, x1, #6
   349b4:	add	x1, x1, #0x1
   349b8:	ldr	x0, [x0, #24]
   349bc:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   349c0:	ldp	x29, x30, [sp], #16
   349c4:	ret
   349c8:	stp	x29, x30, [sp, #-320]!
   349cc:	mov	x29, sp
   349d0:	stp	x19, x20, [sp, #16]
   349d4:	stp	x21, x22, [sp, #32]
   349d8:	stp	x23, x24, [sp, #48]
   349dc:	stp	x25, x26, [sp, #64]
   349e0:	mov	x24, x0
   349e4:	mov	x25, x2
   349e8:	mov	x20, x3
   349ec:	mov	x23, x4
   349f0:	mov	w22, w5
   349f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   349f8:	ldr	x2, [x0, #2576]
   349fc:	add	x0, x0, #0xa10
   34a00:	blr	x2
   34a04:	mrs	x2, tpidr_el0
   34a08:	add	x19, x2, x0
   34a0c:	str	wzr, [x2, x0]
   34a10:	mov	w3, #0x3                   	// #3
   34a14:	mov	x2, x1
   34a18:	add	x1, sp, #0xfc
   34a1c:	mov	x0, x20
   34a20:	bl	c0a0 <mpfr_lgamma@plt>
   34a24:	ldr	w1, [x19]
   34a28:	cbz	w0, 34b44 <mpfr_powerof2_raw@@Base+0x1ac>
   34a2c:	tbnz	w1, #1, 34b60 <mpfr_powerof2_raw@@Base+0x1c8>
   34a30:	str	x27, [sp, #80]
   34a34:	ldr	w3, [x20, #8]
   34a38:	mov	w2, #0x0                   	// #0
   34a3c:	mov	x1, x20
   34a40:	mov	x0, x23
   34a44:	bl	c6a0 <mpfr_set4@plt>
   34a48:	mov	x0, x23
   34a4c:	bl	c120 <mpfr_nextabove@plt>
   34a50:	ldr	w0, [sp, #252]
   34a54:	tbnz	w0, #31, 34bb8 <mpfr_powerof2_raw@@Base+0x220>
   34a58:	ldr	x21, [x24]
   34a5c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   34a60:	cmp	x21, x0
   34a64:	b.ge	34bd8 <mpfr_powerof2_raw@@Base+0x240>  // b.tcont
   34a68:	add	x19, x21, #0x3e
   34a6c:	subs	x0, x21, #0x1
   34a70:	csel	x19, x19, x0, mi  // mi = first
   34a74:	asr	x19, x19, #6
   34a78:	add	x19, x19, #0x1
   34a7c:	lsl	x0, x19, #1
   34a80:	cmp	x0, #0x10
   34a84:	b.gt	34bdc <mpfr_powerof2_raw@@Base+0x244>
   34a88:	str	xzr, [sp, #104]
   34a8c:	add	x0, sp, #0x78
   34a90:	str	x0, [sp, #112]
   34a94:	str	x21, [sp, #288]
   34a98:	ldr	x1, [sp, #112]
   34a9c:	str	x1, [sp, #312]
   34aa0:	mov	w0, #0x1                   	// #1
   34aa4:	str	w0, [sp, #296]
   34aa8:	str	x21, [sp, #256]
   34aac:	add	x19, x1, x19, lsl #3
   34ab0:	str	x19, [sp, #280]
   34ab4:	str	w0, [sp, #264]
   34ab8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34abc:	ldr	x1, [x0, #2576]
   34ac0:	add	x0, x0, #0xa10
   34ac4:	blr	x1
   34ac8:	mrs	x1, tpidr_el0
   34acc:	add	x26, x1, x0
   34ad0:	str	wzr, [x1, x0]
   34ad4:	add	x0, sp, #0x120
   34ad8:	mov	w2, w22
   34adc:	mov	x1, x20
   34ae0:	mov	x20, x0
   34ae4:	bl	c750 <mpfr_exp@plt>
   34ae8:	mov	w19, w0
   34aec:	ldr	w27, [x26]
   34af0:	str	wzr, [x26]
   34af4:	add	x21, sp, #0x100
   34af8:	mov	w2, w22
   34afc:	mov	x1, x23
   34b00:	mov	x0, x21
   34b04:	bl	c750 <mpfr_exp@plt>
   34b08:	mov	w22, w0
   34b0c:	ldr	w23, [x26]
   34b10:	mov	x1, x21
   34b14:	mov	x0, x20
   34b18:	bl	ca60 <mpfr_equal_p@plt>
   34b1c:	cmp	w0, #0x0
   34b20:	ccmp	w27, w23, #0x0, ne  // ne = any
   34b24:	b.eq	34bf0 <mpfr_powerof2_raw@@Base+0x258>  // b.none
   34b28:	mov	w19, #0x0                   	// #0
   34b2c:	ldr	x1, [sp, #104]
   34b30:	cbz	x1, 34c54 <mpfr_powerof2_raw@@Base+0x2bc>
   34b34:	ldr	x0, [sp, #112]
   34b38:	bl	cc20 <mpfr_free_func@plt>
   34b3c:	ldr	x27, [sp, #80]
   34b40:	b	34c58 <mpfr_powerof2_raw@@Base+0x2c0>
   34b44:	str	x27, [sp, #80]
   34b48:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34b4c:	add	x2, x2, #0x2c8
   34b50:	mov	w1, #0x4b                  	// #75
   34b54:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34b58:	add	x0, x0, #0x2d8
   34b5c:	bl	cb40 <mpfr_assert_fail@plt>
   34b60:	ldr	w0, [x20, #8]
   34b64:	cmp	w0, #0x0
   34b68:	b.le	34b90 <mpfr_powerof2_raw@@Base+0x1f8>
   34b6c:	ldr	w0, [x25]
   34b70:	orr	w0, w0, #0x2
   34b74:	str	w0, [x25]
   34b78:	ldr	w2, [sp, #252]
   34b7c:	mov	w1, w22
   34b80:	mov	x0, x24
   34b84:	bl	bf40 <mpfr_overflow@plt>
   34b88:	mov	w19, w0
   34b8c:	b	34c58 <mpfr_powerof2_raw@@Base+0x2c0>
   34b90:	ldr	w0, [x25]
   34b94:	orr	w0, w0, #0x1
   34b98:	str	w0, [x25]
   34b9c:	cmp	w22, #0x0
   34ba0:	ldr	w2, [sp, #252]
   34ba4:	csinc	w1, w22, wzr, ne  // ne = any
   34ba8:	mov	x0, x24
   34bac:	bl	c3c0 <mpfr_underflow@plt>
   34bb0:	mov	w19, w0
   34bb4:	b	34c58 <mpfr_powerof2_raw@@Base+0x2c0>
   34bb8:	cmp	w22, #0x2
   34bbc:	b.eq	34bd0 <mpfr_powerof2_raw@@Base+0x238>  // b.none
   34bc0:	cmp	w22, #0x3
   34bc4:	mov	w0, #0x2                   	// #2
   34bc8:	csel	w22, w22, w0, ne  // ne = any
   34bcc:	b	34a58 <mpfr_powerof2_raw@@Base+0xc0>
   34bd0:	mov	w22, #0x3                   	// #3
   34bd4:	b	34a58 <mpfr_powerof2_raw@@Base+0xc0>
   34bd8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   34bdc:	lsl	x0, x19, #4
   34be0:	str	x0, [sp, #104]
   34be4:	bl	ccf0 <mpfr_allocate_func@plt>
   34be8:	str	x0, [sp, #112]
   34bec:	b	34a94 <mpfr_powerof2_raw@@Base+0xfc>
   34bf0:	cmp	w19, #0x0
   34bf4:	ccmp	w22, #0x0, #0x4, gt
   34bf8:	b.le	34c2c <mpfr_powerof2_raw@@Base+0x294>
   34bfc:	ldr	w3, [sp, #252]
   34c00:	mov	w2, #0x0                   	// #0
   34c04:	add	x1, sp, #0x120
   34c08:	mov	x0, x24
   34c0c:	bl	c6a0 <mpfr_set4@plt>
   34c10:	ldr	w0, [sp, #252]
   34c14:	cmp	w0, #0x0
   34c18:	cneg	w19, w19, lt  // lt = tstop
   34c1c:	ldr	w0, [x25]
   34c20:	orr	w27, w0, w27
   34c24:	str	w27, [x25]
   34c28:	b	34b2c <mpfr_powerof2_raw@@Base+0x194>
   34c2c:	cmp	w19, #0x0
   34c30:	ccmp	w22, #0x0, #0x0, lt  // lt = tstop
   34c34:	b.lt	34bfc <mpfr_powerof2_raw@@Base+0x264>  // b.tstop
   34c38:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34c3c:	add	x2, x2, #0x2e8
   34c40:	mov	w1, #0x69                  	// #105
   34c44:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34c48:	add	x0, x0, #0x2d8
   34c4c:	bl	cb40 <mpfr_assert_fail@plt>
   34c50:	b	34bfc <mpfr_powerof2_raw@@Base+0x264>
   34c54:	ldr	x27, [sp, #80]
   34c58:	mov	w0, w19
   34c5c:	ldp	x19, x20, [sp, #16]
   34c60:	ldp	x21, x22, [sp, #32]
   34c64:	ldp	x23, x24, [sp, #48]
   34c68:	ldp	x25, x26, [sp, #64]
   34c6c:	ldp	x29, x30, [sp], #320
   34c70:	ret
   34c74:	stp	x29, x30, [sp, #-464]!
   34c78:	mov	x29, sp
   34c7c:	stp	x19, x20, [sp, #16]
   34c80:	stp	x21, x22, [sp, #32]
   34c84:	mov	x20, x0
   34c88:	str	x0, [sp, #208]
   34c8c:	mov	x0, x1
   34c90:	str	x1, [sp, #128]
   34c94:	str	w2, [sp, #204]
   34c98:	mov	x2, #0x0                   	// #0
   34c9c:	mov	x1, #0x1                   	// #1
   34ca0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   34ca4:	mov	w19, w0
   34ca8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34cac:	ldr	x1, [x0, #2576]
   34cb0:	add	x0, x0, #0xa10
   34cb4:	blr	x1
   34cb8:	mrs	x1, tpidr_el0
   34cbc:	ldr	w0, [x1, x0]
   34cc0:	str	w0, [sp, #280]
   34cc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34cc8:	ldr	x2, [x0, #2512]
   34ccc:	add	x0, x0, #0x9d0
   34cd0:	blr	x2
   34cd4:	add	x2, x1, x0
   34cd8:	ldr	x0, [x1, x0]
   34cdc:	str	x0, [sp, #288]
   34ce0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   34ce4:	ldr	x3, [x0, #2544]
   34ce8:	add	x0, x0, #0x9f0
   34cec:	blr	x3
   34cf0:	ldr	x3, [x1, x0]
   34cf4:	str	x3, [sp, #296]
   34cf8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   34cfc:	str	x3, [x2]
   34d00:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   34d04:	str	x2, [x1, x0]
   34d08:	ldr	x0, [x20]
   34d0c:	mov	x20, x0
   34d10:	str	x0, [sp, #192]
   34d14:	mov	x1, #0x1                   	// #1
   34d18:	add	x0, sp, #0x1b0
   34d1c:	bl	ca80 <mpfr_init2@plt>
   34d20:	mov	x1, #0x1                   	// #1
   34d24:	add	x0, sp, #0x190
   34d28:	bl	ca80 <mpfr_init2@plt>
   34d2c:	mov	x1, #0x1                   	// #1
   34d30:	add	x0, sp, #0x170
   34d34:	bl	ca80 <mpfr_init2@plt>
   34d38:	mov	x1, #0x1                   	// #1
   34d3c:	add	x0, sp, #0x150
   34d40:	bl	ca80 <mpfr_init2@plt>
   34d44:	mov	x1, #0x1                   	// #1
   34d48:	add	x0, sp, #0x130
   34d4c:	bl	ca80 <mpfr_init2@plt>
   34d50:	tbnz	w19, #31, 34e38 <mpfr_powerof2_raw@@Base+0x4a0>
   34d54:	ldr	x0, [sp, #192]
   34d58:	cmp	x0, #0x1
   34d5c:	b.eq	35be0 <mpfr_powerof2_raw@@Base+0x1248>  // b.none
   34d60:	cmp	x0, #0x1
   34d64:	b.le	3511c <mpfr_powerof2_raw@@Base+0x784>
   34d68:	stp	x23, x24, [sp, #48]
   34d6c:	stp	x25, x26, [sp, #64]
   34d70:	stp	x27, x28, [sp, #80]
   34d74:	ldr	x2, [sp, #192]
   34d78:	sub	x0, x2, #0x1
   34d7c:	clz	x1, x0
   34d80:	mov	w0, #0x40                  	// #64
   34d84:	sub	w0, w0, w1
   34d88:	add	x0, x2, w0, sxtw
   34d8c:	sub	x1, x0, #0x1
   34d90:	clz	x2, x1
   34d94:	mov	w1, #0x4d                  	// #77
   34d98:	sub	w1, w1, w2
   34d9c:	add	x0, x0, w1, sxtw
   34da0:	str	x0, [sp, #168]
   34da4:	mov	x0, #0x40                  	// #64
   34da8:	str	x0, [sp, #224]
   34dac:	add	x0, sp, #0x1b0
   34db0:	str	x0, [sp, #160]
   34db4:	add	x0, sp, #0x190
   34db8:	str	x0, [sp, #144]
   34dbc:	add	x0, sp, #0x150
   34dc0:	str	x0, [sp, #216]
   34dc4:	mov	x1, #0x35                  	// #53
   34dc8:	ldr	x0, [sp, #160]
   34dcc:	bl	bed0 <mpfr_set_prec@plt>
   34dd0:	ldr	x0, [sp, #168]
   34dd4:	cmp	x0, #0x64
   34dd8:	b.le	35144 <mpfr_powerof2_raw@@Base+0x7ac>
   34ddc:	ldr	x0, [sp, #168]
   34de0:	cmp	x0, #0x1f4
   34de4:	b.le	35310 <mpfr_powerof2_raw@@Base+0x978>
   34de8:	ldr	x0, [sp, #168]
   34dec:	cmp	x0, #0x3e8
   34df0:	b.le	35328 <mpfr_powerof2_raw@@Base+0x990>
   34df4:	ldr	x0, [sp, #168]
   34df8:	cmp	x0, #0x7d0
   34dfc:	b.le	35340 <mpfr_powerof2_raw@@Base+0x9a8>
   34e00:	mov	x0, #0x1388                	// #5000
   34e04:	ldr	x1, [sp, #168]
   34e08:	cmp	x1, x0
   34e0c:	b.le	35358 <mpfr_powerof2_raw@@Base+0x9c0>
   34e10:	mov	x0, #0x2710                	// #10000
   34e14:	ldr	x1, [sp, #168]
   34e18:	cmp	x1, x0
   34e1c:	b.gt	35370 <mpfr_powerof2_raw@@Base+0x9d8>
   34e20:	mov	w3, #0x0                   	// #0
   34e24:	mov	x2, #0xfffffffffffffff6    	// #-10
   34e28:	mov	x1, #0xd9a                 	// #3482
   34e2c:	ldr	x0, [sp, #160]
   34e30:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   34e34:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   34e38:	stp	x23, x24, [sp, #48]
   34e3c:	stp	x25, x26, [sp, #64]
   34e40:	stp	x27, x28, [sp, #80]
   34e44:	stp	d8, d9, [sp, #96]
   34e48:	cmp	x20, #0x1
   34e4c:	b.eq	35ad0 <mpfr_powerof2_raw@@Base+0x1138>  // b.none
   34e50:	cmp	x20, #0x1
   34e54:	b.le	34eac <mpfr_powerof2_raw@@Base+0x514>
   34e58:	ldr	x2, [sp, #192]
   34e5c:	sub	x0, x2, #0x1
   34e60:	clz	x1, x0
   34e64:	mov	w0, #0x40                  	// #64
   34e68:	sub	w0, w0, w1
   34e6c:	add	x0, x2, w0, sxtw
   34e70:	sub	x1, x0, #0x1
   34e74:	clz	x1, x1
   34e78:	mov	w20, #0x4e                  	// #78
   34e7c:	sub	w20, w20, w1
   34e80:	add	x20, x0, w20, sxtw
   34e84:	mov	x24, #0x40                  	// #64
   34e88:	add	x23, sp, #0x1b0
   34e8c:	add	x25, sp, #0x190
   34e90:	add	x26, sp, #0x170
   34e94:	add	x22, sp, #0x150
   34e98:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34e9c:	ldr	d9, [x0, #920]
   34ea0:	ldr	x27, [sp, #128]
   34ea4:	ldr	w28, [sp, #204]
   34ea8:	b	34fb8 <mpfr_powerof2_raw@@Base+0x620>
   34eac:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   34eb0:	add	x2, x2, #0xfa8
   34eb4:	mov	w1, #0x14a                 	// #330
   34eb8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   34ebc:	add	x0, x0, #0x2d8
   34ec0:	bl	cb40 <mpfr_assert_fail@plt>
   34ec4:	ldr	d8, [sp, #448]
   34ec8:	scvtf	d0, d8
   34ecc:	fmul	d0, d0, d9
   34ed0:	bl	c950 <__gmpfr_ceil_log2@plt>
   34ed4:	fmov	x1, d8
   34ed8:	add	x21, x1, x0
   34edc:	add	x21, x21, #0x1
   34ee0:	ldr	x0, [sp, #384]
   34ee4:	sub	x21, x21, x0
   34ee8:	b	35044 <mpfr_powerof2_raw@@Base+0x6ac>
   34eec:	cmp	x21, #0x0
   34ef0:	csinv	x21, x21, xzr, ge  // ge = tcont
   34ef4:	add	x21, x21, #0x1
   34ef8:	add	x19, x19, #0x1
   34efc:	ldr	x1, [sp, #352]
   34f00:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34f04:	cmp	x1, x0
   34f08:	b.eq	35ab8 <mpfr_powerof2_raw@@Base+0x1120>  // b.none
   34f0c:	sub	x19, x19, x1
   34f10:	adds	x0, x19, #0x1
   34f14:	csinv	x0, x0, xzr, pl  // pl = nfrst
   34f18:	add	x0, x0, #0x1
   34f1c:	ldr	x2, [sp, #384]
   34f20:	add	x21, x21, x2
   34f24:	add	x19, x1, x0
   34f28:	mov	w3, #0x0                   	// #0
   34f2c:	mov	x2, x26
   34f30:	mov	x1, x22
   34f34:	mov	x0, x23
   34f38:	bl	bb70 <mpfr_sub@plt>
   34f3c:	ldr	x1, [sp, #448]
   34f40:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34f44:	cmp	x1, x0
   34f48:	b.le	34f98 <mpfr_powerof2_raw@@Base+0x600>
   34f4c:	cmp	x19, x21
   34f50:	csel	x0, x19, x21, ge  // ge = tcont
   34f54:	sub	x0, x0, x1
   34f58:	adds	x0, x0, #0x1
   34f5c:	csinv	x0, x0, xzr, pl  // pl = nfrst
   34f60:	cmp	w28, #0x0
   34f64:	ldr	x1, [sp, #192]
   34f68:	cinc	x3, x1, eq  // eq = none
   34f6c:	add	x0, x0, #0x1
   34f70:	ldr	x2, [sp, #432]
   34f74:	add	x1, x2, #0x3e
   34f78:	subs	x2, x2, #0x1
   34f7c:	csel	x1, x1, x2, mi  // mi = first
   34f80:	asr	x1, x1, #6
   34f84:	sub	x2, x20, x0
   34f88:	add	x1, x1, #0x1
   34f8c:	ldr	x0, [sp, #456]
   34f90:	bl	c370 <mpfr_round_p@plt>
   34f94:	cbnz	w0, 35a98 <mpfr_powerof2_raw@@Base+0x1100>
   34f98:	mov	x0, #0xfffffffffffffeff    	// #-257
   34f9c:	movk	x0, #0x7fff, lsl #48
   34fa0:	sub	x0, x0, x20
   34fa4:	cmp	x0, x24
   34fa8:	b.lt	35104 <mpfr_powerof2_raw@@Base+0x76c>  // b.tstop
   34fac:	add	x20, x20, x24
   34fb0:	add	x24, x20, x20, lsr #63
   34fb4:	asr	x24, x24, #1
   34fb8:	mov	x1, x20
   34fbc:	mov	x0, x23
   34fc0:	bl	bed0 <mpfr_set_prec@plt>
   34fc4:	mov	x1, x20
   34fc8:	mov	x0, x25
   34fcc:	bl	bed0 <mpfr_set_prec@plt>
   34fd0:	mov	x1, x20
   34fd4:	mov	x0, x26
   34fd8:	bl	bed0 <mpfr_set_prec@plt>
   34fdc:	mov	x1, x20
   34fe0:	mov	x0, x22
   34fe4:	bl	bed0 <mpfr_set_prec@plt>
   34fe8:	mov	w3, #0x3                   	// #3
   34fec:	mov	x2, x27
   34ff0:	mov	x1, #0x2                   	// #2
   34ff4:	mov	x0, x23
   34ff8:	bl	ca50 <mpfr_ui_sub@plt>
   34ffc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35000:	ldr	x1, [x0, #2624]
   35004:	add	x0, x0, #0xa40
   35008:	blr	x1
   3500c:	mov	w2, #0x0                   	// #0
   35010:	mrs	x1, tpidr_el0
   35014:	add	x1, x1, x0
   35018:	mov	x0, x25
   3501c:	bl	c380 <mpfr_cache@plt>
   35020:	mov	w2, #0x0                   	// #0
   35024:	mov	x1, x23
   35028:	mov	x0, x26
   3502c:	bl	c600 <mpfr_lngamma@plt>
   35030:	mov	x21, #0x0                   	// #0
   35034:	ldr	x1, [sp, #384]
   35038:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3503c:	cmp	x1, x0
   35040:	b.ne	34ec4 <mpfr_powerof2_raw@@Base+0x52c>  // b.any
   35044:	mov	w3, #0x0                   	// #0
   35048:	mov	x2, x25
   3504c:	mov	x1, x23
   35050:	mov	x0, x23
   35054:	bl	bd50 <mpfr_mul@plt>
   35058:	ldr	x19, [sp, #448]
   3505c:	mov	w2, #0x0                   	// #0
   35060:	mov	x1, x23
   35064:	mov	x0, x23
   35068:	bl	c450 <mpfr_sin@plt>
   3506c:	ldr	x0, [sp, #448]
   35070:	sub	x19, x19, x0
   35074:	adds	x19, x19, #0x3
   35078:	csinv	x19, x19, xzr, pl  // pl = nfrst
   3507c:	mov	w3, #0x0                   	// #0
   35080:	mov	x2, #0x1                   	// #1
   35084:	mov	x1, x27
   35088:	mov	x0, x22
   3508c:	bl	c530 <mpfr_sub_ui@plt>
   35090:	mov	w3, #0x0                   	// #0
   35094:	mov	x2, x25
   35098:	mov	x1, x22
   3509c:	mov	x0, x22
   350a0:	bl	bd50 <mpfr_mul@plt>
   350a4:	mov	w3, #0x0                   	// #0
   350a8:	mov	x2, x23
   350ac:	mov	x1, x22
   350b0:	mov	x0, x22
   350b4:	bl	c620 <mpfr_div@plt>
   350b8:	mov	w3, #0x1                   	// #1
   350bc:	mov	w2, #0x0                   	// #0
   350c0:	mov	x1, x22
   350c4:	mov	x0, x22
   350c8:	bl	c6a0 <mpfr_set4@plt>
   350cc:	add	x19, x19, #0x3
   350d0:	cmp	x19, #0x2
   350d4:	mov	x0, #0x2                   	// #2
   350d8:	csel	x19, x19, x0, ge  // ge = tcont
   350dc:	mov	w2, #0x0                   	// #0
   350e0:	mov	x1, x22
   350e4:	mov	x0, x22
   350e8:	bl	c090 <mpfr_log@plt>
   350ec:	add	x0, x19, #0x2
   350f0:	cmp	x0, x20
   350f4:	b.lt	34eec <mpfr_powerof2_raw@@Base+0x554>  // b.tstop
   350f8:	add	x19, x19, #0x3
   350fc:	add	x20, x20, x19
   35100:	b	34f98 <mpfr_powerof2_raw@@Base+0x600>
   35104:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   35108:	add	x2, x2, #0x3e8
   3510c:	mov	w1, #0x1a5                 	// #421
   35110:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   35114:	add	x0, x0, #0x2d8
   35118:	bl	cb40 <mpfr_assert_fail@plt>
   3511c:	stp	x23, x24, [sp, #48]
   35120:	stp	x25, x26, [sp, #64]
   35124:	stp	x27, x28, [sp, #80]
   35128:	stp	d8, d9, [sp, #96]
   3512c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   35130:	add	x2, x2, #0xfa8
   35134:	mov	w1, #0x1b0                 	// #432
   35138:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3513c:	add	x0, x0, #0x2d8
   35140:	bl	cb40 <mpfr_assert_fail@plt>
   35144:	mov	w3, #0x0                   	// #0
   35148:	mov	x2, #0xfffffffffffffff6    	// #-10
   3514c:	mov	x1, #0x266                 	// #614
   35150:	ldr	x0, [sp, #160]
   35154:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35158:	mov	w3, #0x2                   	// #2
   3515c:	mov	x2, #0xfffffffffffffffc    	// #-4
   35160:	mov	x1, #0x4                   	// #4
   35164:	ldr	x19, [sp, #160]
   35168:	mov	x0, x19
   3516c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35170:	mov	w3, #0x2                   	// #2
   35174:	ldr	x2, [sp, #168]
   35178:	mov	x1, x19
   3517c:	mov	x0, x19
   35180:	bl	ba50 <mpfr_mul_ui@plt>
   35184:	mov	w2, #0x1                   	// #1
   35188:	mov	x1, x19
   3518c:	ldr	x0, [sp, #128]
   35190:	bl	c9a0 <mpfr_cmp3@plt>
   35194:	mov	x1, #0x3                   	// #3
   35198:	str	x1, [sp, #136]
   3519c:	tbnz	w0, #31, 35388 <mpfr_powerof2_raw@@Base+0x9f0>
   351a0:	ldr	x27, [sp, #168]
   351a4:	mov	x1, x27
   351a8:	ldr	x25, [sp, #160]
   351ac:	mov	x0, x25
   351b0:	bl	bed0 <mpfr_set_prec@plt>
   351b4:	mov	x1, x27
   351b8:	ldr	x22, [sp, #144]
   351bc:	mov	x0, x22
   351c0:	bl	bed0 <mpfr_set_prec@plt>
   351c4:	add	x19, sp, #0x170
   351c8:	mov	x1, x27
   351cc:	mov	x0, x19
   351d0:	bl	bed0 <mpfr_set_prec@plt>
   351d4:	mov	x1, x27
   351d8:	ldr	x26, [sp, #216]
   351dc:	mov	x0, x26
   351e0:	bl	bed0 <mpfr_set_prec@plt>
   351e4:	add	x20, sp, #0x130
   351e8:	mov	x1, x27
   351ec:	mov	x0, x20
   351f0:	bl	bed0 <mpfr_set_prec@plt>
   351f4:	mov	w3, #0x0                   	// #0
   351f8:	ldr	x2, [sp, #136]
   351fc:	ldr	x1, [sp, #128]
   35200:	mov	x0, x20
   35204:	bl	c260 <mpfr_add_ui@plt>
   35208:	mov	w2, #0x0                   	// #0
   3520c:	mov	x1, x20
   35210:	mov	x0, x25
   35214:	bl	c090 <mpfr_log@plt>
   35218:	mov	w3, #0x0                   	// #0
   3521c:	mov	x2, #0x1                   	// #1
   35220:	mov	x1, x20
   35224:	mov	x0, x22
   35228:	bl	c2c0 <mpfr_mul_2ui@plt>
   3522c:	mov	w3, #0x0                   	// #0
   35230:	mov	x2, #0x1                   	// #1
   35234:	mov	x1, x22
   35238:	mov	x0, x22
   3523c:	bl	c530 <mpfr_sub_ui@plt>
   35240:	mov	w3, #0x0                   	// #0
   35244:	mov	x2, x22
   35248:	mov	x1, x25
   3524c:	mov	x0, x25
   35250:	bl	bd50 <mpfr_mul@plt>
   35254:	mov	w3, #0x0                   	// #0
   35258:	mov	x2, #0x1                   	// #1
   3525c:	mov	x1, x25
   35260:	mov	x0, x25
   35264:	bl	c8f0 <mpfr_div_2ui@plt>
   35268:	mov	w3, #0x0                   	// #0
   3526c:	mov	x2, x20
   35270:	mov	x1, x25
   35274:	mov	x0, x25
   35278:	bl	bb70 <mpfr_sub@plt>
   3527c:	mov	w3, #0x0                   	// #0
   35280:	mov	x2, x20
   35284:	mov	x1, #0x1                   	// #1
   35288:	mov	x0, x19
   3528c:	bl	c2f0 <mpfr_ui_div@plt>
   35290:	mov	w3, #0x0                   	// #0
   35294:	mov	x2, #0xc                   	// #12
   35298:	mov	x1, x19
   3529c:	mov	x0, x22
   352a0:	bl	cc60 <mpfr_div_ui@plt>
   352a4:	ldr	w3, [sp, #408]
   352a8:	mov	w2, #0x0                   	// #0
   352ac:	mov	x21, x22
   352b0:	mov	x1, x22
   352b4:	mov	x0, x26
   352b8:	bl	c6a0 <mpfr_set4@plt>
   352bc:	mov	w3, #0x0                   	// #0
   352c0:	mov	x2, x26
   352c4:	mov	x1, x25
   352c8:	mov	x0, x25
   352cc:	bl	c1a0 <mpfr_add@plt>
   352d0:	mov	w3, #0x0                   	// #0
   352d4:	mov	x2, x19
   352d8:	mov	x1, x19
   352dc:	mov	x0, x19
   352e0:	bl	bd50 <mpfr_mul@plt>
   352e4:	ldr	x0, [sp, #352]
   352e8:	add	x0, x27, x0
   352ec:	ldr	x1, [sp, #448]
   352f0:	cmp	x0, x1
   352f4:	b.lt	355e4 <mpfr_powerof2_raw@@Base+0xc4c>  // b.tstop
   352f8:	mov	x20, #0x2                   	// #2
   352fc:	mov	x19, #0xfffffffffffffff9    	// #-7
   35300:	mov	x24, x20
   35304:	add	x23, sp, #0x170
   35308:	mov	x22, #0x80000000            	// #2147483648
   3530c:	b	3549c <mpfr_powerof2_raw@@Base+0xb04>
   35310:	mov	w3, #0x0                   	// #0
   35314:	mov	x2, #0xfffffffffffffff6    	// #-10
   35318:	mov	x1, #0x333                 	// #819
   3531c:	ldr	x0, [sp, #160]
   35320:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35324:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   35328:	mov	w3, #0x0                   	// #0
   3532c:	mov	x2, #0xfffffffffffffff6    	// #-10
   35330:	mov	x1, #0x533                 	// #1331
   35334:	ldr	x0, [sp, #160]
   35338:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3533c:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   35340:	mov	w3, #0x0                   	// #0
   35344:	mov	x2, #0xfffffffffffffff6    	// #-10
   35348:	mov	x1, #0x6cd                 	// #1741
   3534c:	ldr	x0, [sp, #160]
   35350:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35354:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   35358:	mov	w3, #0x0                   	// #0
   3535c:	mov	x2, #0xfffffffffffffff6    	// #-10
   35360:	mov	x1, #0x8cd                 	// #2253
   35364:	ldr	x0, [sp, #160]
   35368:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3536c:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   35370:	mov	w3, #0x0                   	// #0
   35374:	mov	x2, #0xffffffffffffffff    	// #-1
   35378:	mov	x1, #0x9                   	// #9
   3537c:	ldr	x0, [sp, #160]
   35380:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35384:	b	35158 <mpfr_powerof2_raw@@Base+0x7c0>
   35388:	mov	w3, #0x2                   	// #2
   3538c:	ldr	x2, [sp, #128]
   35390:	ldr	x19, [sp, #160]
   35394:	mov	x1, x19
   35398:	mov	x0, x19
   3539c:	bl	bb70 <mpfr_sub@plt>
   353a0:	mov	w1, #0x2                   	// #2
   353a4:	mov	x0, x19
   353a8:	bl	bca0 <mpfr_get_ui@plt>
   353ac:	cmp	x0, #0x3
   353b0:	mov	x1, #0x3                   	// #3
   353b4:	csel	x0, x0, x1, cs  // cs = hs, nlast
   353b8:	str	x0, [sp, #136]
   353bc:	b	351a0 <mpfr_powerof2_raw@@Base+0x808>
   353c0:	mov	w3, #0x0                   	// #0
   353c4:	mov	x2, #0xfffffffffffffffb    	// #-5
   353c8:	sub	x2, x2, x19
   353cc:	mov	x1, x21
   353d0:	mov	x0, x21
   353d4:	bl	ba50 <mpfr_mul_ui@plt>
   353d8:	lsl	x28, x24, #1
   353dc:	mov	w3, #0x0                   	// #0
   353e0:	mov	x2, #0xfffffffffffffffa    	// #-6
   353e4:	sub	x2, x2, x19
   353e8:	mov	x1, x21
   353ec:	mov	x0, x21
   353f0:	bl	ba50 <mpfr_mul_ui@plt>
   353f4:	mov	w3, #0x0                   	// #0
   353f8:	mov	x2, x28
   353fc:	mov	x1, x21
   35400:	mov	x0, x21
   35404:	bl	cc60 <mpfr_div_ui@plt>
   35408:	mov	w3, #0x0                   	// #0
   3540c:	mov	x2, #0xfffffffffffffffc    	// #-4
   35410:	sub	x2, x2, x19
   35414:	mov	x1, x21
   35418:	mov	x0, x21
   3541c:	bl	cc60 <mpfr_div_ui@plt>
   35420:	mov	w3, #0x0                   	// #0
   35424:	mov	x2, x28
   35428:	mov	x1, x21
   3542c:	mov	x0, x21
   35430:	bl	cc60 <mpfr_div_ui@plt>
   35434:	mov	w3, #0x0                   	// #0
   35438:	mov	x2, #0xfffffffffffffffe    	// #-2
   3543c:	sub	x2, x2, x19
   35440:	mov	x1, x21
   35444:	mov	x0, x21
   35448:	bl	cc60 <mpfr_div_ui@plt>
   3544c:	mov	x0, x24
   35450:	bl	c830 <mpfr_bernoulli_cache@plt>
   35454:	mov	w3, #0x0                   	// #0
   35458:	mov	x2, x0
   3545c:	mov	x1, x21
   35460:	mov	x0, x26
   35464:	bl	c4d0 <mpfr_mul_z@plt>
   35468:	mov	w3, #0x0                   	// #0
   3546c:	mov	x2, x26
   35470:	mov	x1, x25
   35474:	mov	x0, x25
   35478:	bl	c1a0 <mpfr_add@plt>
   3547c:	add	x24, x24, #0x1
   35480:	sub	x19, x19, #0x2
   35484:	add	x20, x20, #0x4
   35488:	ldr	x0, [sp, #352]
   3548c:	add	x0, x27, x0
   35490:	ldr	x1, [sp, #448]
   35494:	cmp	x0, x1
   35498:	b.lt	35504 <mpfr_powerof2_raw@@Base+0xb6c>  // b.tstop
   3549c:	mov	w3, #0x0                   	// #0
   354a0:	mov	x2, x23
   354a4:	mov	x1, x21
   354a8:	mov	x0, x21
   354ac:	bl	bd50 <mpfr_mul@plt>
   354b0:	cmp	x24, x22
   354b4:	b.hi	353c0 <mpfr_powerof2_raw@@Base+0xa28>  // b.pmore
   354b8:	sub	x2, x24, #0x1
   354bc:	mov	w3, #0x0                   	// #0
   354c0:	mul	x2, x2, x20
   354c4:	mov	x1, x21
   354c8:	mov	x0, x21
   354cc:	bl	ba50 <mpfr_mul_ui@plt>
   354d0:	add	x28, x20, #0x4
   354d4:	mul	x28, x28, x24
   354d8:	mov	w3, #0x0                   	// #0
   354dc:	mov	x2, x28
   354e0:	mov	x1, x21
   354e4:	mov	x0, x21
   354e8:	bl	cc60 <mpfr_div_ui@plt>
   354ec:	mov	w3, #0x0                   	// #0
   354f0:	add	x2, x28, x24, lsl #2
   354f4:	mov	x1, x21
   354f8:	mov	x0, x21
   354fc:	bl	cc60 <mpfr_div_ui@plt>
   35500:	b	3544c <mpfr_powerof2_raw@@Base+0xab4>
   35504:	str	x24, [sp, #232]
   35508:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3550c:	ldr	x1, [x0, #2624]
   35510:	add	x0, x0, #0xa40
   35514:	blr	x1
   35518:	mov	w2, #0x0                   	// #0
   3551c:	mrs	x1, tpidr_el0
   35520:	add	x1, x1, x0
   35524:	ldr	x19, [sp, #216]
   35528:	mov	x0, x19
   3552c:	bl	c380 <mpfr_cache@plt>
   35530:	mov	w3, #0x0                   	// #0
   35534:	mov	x2, #0x1                   	// #1
   35538:	mov	x1, x19
   3553c:	mov	x0, x19
   35540:	bl	c2c0 <mpfr_mul_2ui@plt>
   35544:	ldr	x0, [sp, #128]
   35548:	ldr	w3, [x0, #8]
   3554c:	mov	w2, #0x0                   	// #0
   35550:	mov	x1, x0
   35554:	ldr	x0, [sp, #144]
   35558:	bl	c6a0 <mpfr_set4@plt>
   3555c:	mov	x19, #0x2                   	// #2
   35560:	ldr	x1, [sp, #136]
   35564:	mov	x25, x19
   35568:	add	x19, x19, #0x1
   3556c:	mul	x0, x19, x19
   35570:	cmp	x0, x1
   35574:	b.cc	35564 <mpfr_powerof2_raw@@Base+0xbcc>  // b.lo, b.ul, b.last
   35578:	lsl	x0, x19, #5
   3557c:	str	x0, [sp, #240]
   35580:	bl	ccf0 <mpfr_allocate_func@plt>
   35584:	str	x0, [sp, #152]
   35588:	cmp	x25, #0x1
   3558c:	b.ls	355b4 <mpfr_powerof2_raw@@Base+0xc1c>  // b.plast
   35590:	add	x20, x0, #0x40
   35594:	add	x21, x0, x25, lsl #5
   35598:	ldr	x22, [sp, #168]
   3559c:	mov	x1, x22
   355a0:	mov	x0, x20
   355a4:	bl	ca80 <mpfr_init2@plt>
   355a8:	cmp	x20, x21
   355ac:	add	x20, x20, #0x20
   355b0:	b.ne	3559c <mpfr_powerof2_raw@@Base+0xc04>  // b.any
   355b4:	ldr	x22, [sp, #152]
   355b8:	add	x0, x22, #0x40
   355bc:	str	x0, [sp, #248]
   355c0:	mov	w2, #0x0                   	// #0
   355c4:	ldr	x23, [sp, #128]
   355c8:	mov	x1, x23
   355cc:	bl	c400 <mpfr_sqr@plt>
   355d0:	cmp	x25, #0x2
   355d4:	b.ls	35630 <mpfr_powerof2_raw@@Base+0xc98>  // b.plast
   355d8:	add	x21, x22, #0x60
   355dc:	mov	x20, #0x3                   	// #3
   355e0:	b	35614 <mpfr_powerof2_raw@@Base+0xc7c>
   355e4:	mov	x0, #0x2                   	// #2
   355e8:	str	x0, [sp, #232]
   355ec:	b	35508 <mpfr_powerof2_raw@@Base+0xb70>
   355f0:	mov	w3, #0x0                   	// #0
   355f4:	mov	x2, x23
   355f8:	sub	x1, x21, #0x20
   355fc:	mov	x0, x21
   35600:	bl	bd50 <mpfr_mul@plt>
   35604:	add	x20, x20, #0x1
   35608:	add	x21, x21, #0x20
   3560c:	cmp	x25, x20
   35610:	b.cc	35630 <mpfr_powerof2_raw@@Base+0xc98>  // b.lo, b.ul, b.last
   35614:	tbnz	w20, #0, 355f0 <mpfr_powerof2_raw@@Base+0xc58>
   35618:	lsr	x1, x20, #1
   3561c:	mov	w2, #0x0                   	// #0
   35620:	add	x1, x22, x1, lsl #5
   35624:	mov	x0, x21
   35628:	bl	c400 <mpfr_sqr@plt>
   3562c:	b	35604 <mpfr_powerof2_raw@@Base+0xc6c>
   35630:	lsl	x0, x19, #4
   35634:	str	x0, [sp, #256]
   35638:	bl	ccf0 <mpfr_allocate_func@plt>
   3563c:	mov	x27, x0
   35640:	mov	x22, x0
   35644:	add	x19, x25, #0x1
   35648:	lsl	x0, x19, #4
   3564c:	str	x0, [sp, #264]
   35650:	add	x20, x27, x0
   35654:	mov	x19, x27
   35658:	mov	x0, x19
   3565c:	bl	bf90 <mpfr_mpz_init@plt>
   35660:	add	x19, x19, #0x10
   35664:	cmp	x19, x20
   35668:	b.ne	35658 <mpfr_powerof2_raw@@Base+0xcc0>  // b.any
   3566c:	add	x0, x25, #0x1
   35670:	str	x0, [sp, #120]
   35674:	ldr	x1, [sp, #136]
   35678:	cmp	x0, x1
   3567c:	b.hi	357ac <mpfr_powerof2_raw@@Base+0xe14>  // b.pmore
   35680:	mov	x0, #0x1                   	// #1
   35684:	sub	x0, x0, x25
   35688:	str	x0, [sp, #176]
   3568c:	add	x28, sp, #0x170
   35690:	add	x0, sp, #0x130
   35694:	str	x0, [sp, #184]
   35698:	b	35774 <mpfr_powerof2_raw@@Base+0xddc>
   3569c:	add	x23, x23, #0x1
   356a0:	add	x21, x21, #0x1
   356a4:	mov	x19, x26
   356a8:	sub	x2, x21, #0x1
   356ac:	mov	x1, x27
   356b0:	mov	x0, x27
   356b4:	bl	c100 <__gmpz_mul_ui@plt>
   356b8:	cmp	x23, x25
   356bc:	b.eq	35bb4 <mpfr_powerof2_raw@@Base+0x121c>  // b.none
   356c0:	add	x26, x19, #0x10
   356c4:	mov	x1, x19
   356c8:	mov	x0, x26
   356cc:	bl	bfa0 <__gmpz_set@plt>
   356d0:	cbz	x23, 3569c <mpfr_powerof2_raw@@Base+0xd04>
   356d4:	mov	x2, x21
   356d8:	mov	x1, x19
   356dc:	mov	x0, x19
   356e0:	bl	c100 <__gmpz_mul_ui@plt>
   356e4:	sub	x20, x19, #0x10
   356e8:	mov	x2, x20
   356ec:	mov	x1, x19
   356f0:	mov	x0, x19
   356f4:	bl	c9c0 <__gmpz_add@plt>
   356f8:	mov	x19, x20
   356fc:	cmp	x20, x22
   35700:	b.ne	356d4 <mpfr_powerof2_raw@@Base+0xd3c>  // b.any
   35704:	b	3569c <mpfr_powerof2_raw@@Base+0xd04>
   35708:	add	x1, x20, x19, lsl #5
   3570c:	cmp	x19, #0x0
   35710:	csel	x1, x1, x21, ne  // ne = any
   35714:	add	x19, x19, #0x1
   35718:	mov	w3, #0x0                   	// #0
   3571c:	mov	x2, x24
   35720:	mov	x0, x23
   35724:	bl	c4d0 <mpfr_mul_z@plt>
   35728:	mov	w3, #0x0                   	// #0
   3572c:	mov	x2, x23
   35730:	mov	x1, x28
   35734:	mov	x0, x28
   35738:	bl	c1a0 <mpfr_add@plt>
   3573c:	add	x24, x24, #0x10
   35740:	cmp	x19, x25
   35744:	b.ne	35708 <mpfr_powerof2_raw@@Base+0xd70>  // b.any
   35748:	mov	w3, #0x0                   	// #0
   3574c:	mov	x2, x28
   35750:	ldr	x0, [sp, #144]
   35754:	mov	x1, x0
   35758:	bl	bd50 <mpfr_mul@plt>
   3575c:	ldr	x0, [sp, #120]
   35760:	add	x0, x25, x0
   35764:	ldr	x1, [sp, #136]
   35768:	cmp	x1, x0
   3576c:	b.cc	357b4 <mpfr_powerof2_raw@@Base+0xe1c>  // b.lo, b.ul, b.last
   35770:	str	x0, [sp, #120]
   35774:	mov	x1, #0x1                   	// #1
   35778:	mov	x0, x27
   3577c:	bl	bcb0 <__gmpz_set_ui@plt>
   35780:	cbz	x25, 35ba0 <mpfr_powerof2_raw@@Base+0x1208>
   35784:	add	x19, x27, #0x10
   35788:	mov	x1, x27
   3578c:	mov	x0, x19
   35790:	bl	bfa0 <__gmpz_set@plt>
   35794:	mov	x24, x19
   35798:	ldr	x0, [sp, #176]
   3579c:	ldr	x1, [sp, #120]
   357a0:	add	x21, x0, x1
   357a4:	mov	x23, #0x1                   	// #1
   357a8:	b	356a8 <mpfr_powerof2_raw@@Base+0xd10>
   357ac:	mov	x0, #0x1                   	// #1
   357b0:	str	x0, [sp, #120]
   357b4:	ldr	x0, [sp, #264]
   357b8:	add	x19, x27, x0
   357bc:	mov	x0, x22
   357c0:	bl	c170 <mpfr_mpz_clear@plt>
   357c4:	add	x22, x22, #0x10
   357c8:	cmp	x22, x19
   357cc:	b.ne	357bc <mpfr_powerof2_raw@@Base+0xe24>  // b.any
   357d0:	ldr	x1, [sp, #256]
   357d4:	mov	x0, x27
   357d8:	bl	cc20 <mpfr_free_func@plt>
   357dc:	cmp	x25, #0x1
   357e0:	b.ls	35804 <mpfr_powerof2_raw@@Base+0xe6c>  // b.plast
   357e4:	ldr	x19, [sp, #248]
   357e8:	ldr	x0, [sp, #152]
   357ec:	add	x25, x0, x25, lsl #5
   357f0:	mov	x0, x19
   357f4:	bl	c070 <mpfr_clear@plt>
   357f8:	cmp	x19, x25
   357fc:	add	x19, x19, #0x20
   35800:	b.ne	357f0 <mpfr_powerof2_raw@@Base+0xe58>  // b.any
   35804:	ldr	x1, [sp, #240]
   35808:	ldr	x0, [sp, #152]
   3580c:	bl	cc20 <mpfr_free_func@plt>
   35810:	ldr	x22, [sp, #136]
   35814:	ldr	x20, [sp, #120]
   35818:	cmp	x22, x20
   3581c:	b.ls	35860 <mpfr_powerof2_raw@@Base+0xec8>  // b.plast
   35820:	add	x19, sp, #0x170
   35824:	ldr	x23, [sp, #128]
   35828:	ldr	x21, [sp, #144]
   3582c:	mov	w3, #0x0                   	// #0
   35830:	mov	x2, x20
   35834:	mov	x1, x23
   35838:	mov	x0, x19
   3583c:	bl	c260 <mpfr_add_ui@plt>
   35840:	mov	w3, #0x0                   	// #0
   35844:	mov	x2, x19
   35848:	mov	x1, x21
   3584c:	mov	x0, x21
   35850:	bl	bd50 <mpfr_mul@plt>
   35854:	add	x20, x20, #0x1
   35858:	cmp	x22, x20
   3585c:	b.ne	3582c <mpfr_powerof2_raw@@Base+0xe94>  // b.any
   35860:	mov	w3, #0x0                   	// #0
   35864:	ldr	x19, [sp, #144]
   35868:	mov	x2, x19
   3586c:	mov	x1, x19
   35870:	mov	x0, x19
   35874:	bl	bd50 <mpfr_mul@plt>
   35878:	mov	w3, #0x0                   	// #0
   3587c:	mov	x2, x19
   35880:	ldr	x0, [sp, #216]
   35884:	mov	x1, x0
   35888:	bl	c620 <mpfr_div@plt>
   3588c:	ldr	x19, [sp, #448]
   35890:	mov	w2, #0x0                   	// #0
   35894:	ldr	x0, [sp, #160]
   35898:	mov	x1, x0
   3589c:	bl	c750 <mpfr_exp@plt>
   358a0:	ldr	x1, [sp, #448]
   358a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   358a8:	cmp	x1, x0
   358ac:	b.eq	35a1c <mpfr_powerof2_raw@@Base+0x1084>  // b.none
   358b0:	mov	w2, #0x0                   	// #0
   358b4:	ldr	x1, [sp, #216]
   358b8:	ldr	x20, [sp, #144]
   358bc:	mov	x0, x20
   358c0:	bl	c930 <mpfr_sqrt@plt>
   358c4:	mov	w3, #0x0                   	// #0
   358c8:	mov	x2, x20
   358cc:	ldr	x0, [sp, #160]
   358d0:	mov	x1, x0
   358d4:	bl	bd50 <mpfr_mul@plt>
   358d8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   358dc:	movk	x0, #0xcccd
   358e0:	ldr	x1, [sp, #232]
   358e4:	umulh	x0, x1, x0
   358e8:	lsr	x0, x0, #2
   358ec:	add	x0, x0, x0, lsl #1
   358f0:	add	x0, x0, #0x12
   358f4:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   358f8:	add	w0, w0, #0x2
   358fc:	add	x19, x19, w0, sxtw
   35900:	ldr	d0, [sp, #136]
   35904:	ucvtf	d0, d0
   35908:	fadd	d0, d0, d0
   3590c:	fmov	d1, #2.500000000000000000e+00
   35910:	fadd	d0, d0, d1
   35914:	bl	c950 <__gmpfr_ceil_log2@plt>
   35918:	add	x1, x0, #0x1
   3591c:	cmp	x19, x0
   35920:	csinc	x19, x1, x19, lt  // lt = tstop
   35924:	ldr	x1, [sp, #448]
   35928:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3592c:	cmp	x1, x0
   35930:	b.le	35a40 <mpfr_powerof2_raw@@Base+0x10a8>
   35934:	ldr	w0, [sp, #204]
   35938:	cmp	w0, #0x0
   3593c:	ldr	x0, [sp, #192]
   35940:	cinc	x3, x0, eq  // eq = none
   35944:	ldr	x0, [sp, #432]
   35948:	add	x1, x0, #0x3e
   3594c:	subs	x0, x0, #0x1
   35950:	csel	x1, x1, x0, mi  // mi = first
   35954:	asr	x1, x1, #6
   35958:	ldr	x0, [sp, #168]
   3595c:	sub	x2, x0, x19
   35960:	add	x1, x1, #0x1
   35964:	ldr	x0, [sp, #456]
   35968:	bl	c370 <mpfr_round_p@plt>
   3596c:	cbz	w0, 35a40 <mpfr_powerof2_raw@@Base+0x10a8>
   35970:	add	x20, sp, #0x1b0
   35974:	ldr	w3, [sp, #440]
   35978:	ldr	w2, [sp, #204]
   3597c:	mov	x1, x20
   35980:	ldr	x21, [sp, #208]
   35984:	mov	x0, x21
   35988:	bl	c6a0 <mpfr_set4@plt>
   3598c:	mov	w19, w0
   35990:	mov	x0, x20
   35994:	bl	c070 <mpfr_clear@plt>
   35998:	add	x0, sp, #0x190
   3599c:	bl	c070 <mpfr_clear@plt>
   359a0:	add	x0, sp, #0x170
   359a4:	bl	c070 <mpfr_clear@plt>
   359a8:	add	x0, sp, #0x150
   359ac:	bl	c070 <mpfr_clear@plt>
   359b0:	add	x0, sp, #0x130
   359b4:	bl	c070 <mpfr_clear@plt>
   359b8:	ldr	w1, [sp, #280]
   359bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   359c0:	ldr	x2, [x0, #2576]
   359c4:	add	x0, x0, #0xa10
   359c8:	blr	x2
   359cc:	mrs	x2, tpidr_el0
   359d0:	str	w1, [x2, x0]
   359d4:	ldr	x3, [sp, #288]
   359d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   359dc:	ldr	x4, [x0, #2512]
   359e0:	add	x0, x0, #0x9d0
   359e4:	blr	x4
   359e8:	str	x3, [x2, x0]
   359ec:	ldr	x4, [sp, #296]
   359f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   359f4:	ldr	x5, [x0, #2544]
   359f8:	add	x0, x0, #0x9f0
   359fc:	blr	x5
   35a00:	str	x4, [x2, x0]
   35a04:	ldr	x0, [x21, #16]
   35a08:	cmp	x4, x0
   35a0c:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   35a10:	b.gt	35aa0 <mpfr_powerof2_raw@@Base+0x1108>
   35a14:	cbz	w19, 35b80 <mpfr_powerof2_raw@@Base+0x11e8>
   35a18:	b	35b64 <mpfr_powerof2_raw@@Base+0x11cc>
   35a1c:	ldr	w5, [sp, #204]
   35a20:	ldr	x4, [sp, #144]
   35a24:	ldr	x3, [sp, #160]
   35a28:	add	x2, sp, #0x118
   35a2c:	ldr	x1, [sp, #128]
   35a30:	ldr	x0, [sp, #208]
   35a34:	bl	349c8 <mpfr_powerof2_raw@@Base+0x30>
   35a38:	mov	w19, w0
   35a3c:	cbnz	w0, 35adc <mpfr_powerof2_raw@@Base+0x1144>
   35a40:	mov	x0, #0xfffffffffffffeff    	// #-257
   35a44:	movk	x0, #0x7fff, lsl #48
   35a48:	ldr	x1, [sp, #168]
   35a4c:	sub	x0, x0, x1
   35a50:	ldr	x1, [sp, #224]
   35a54:	cmp	x0, x1
   35a58:	b.lt	35a7c <mpfr_powerof2_raw@@Base+0x10e4>  // b.tstop
   35a5c:	ldr	x0, [sp, #168]
   35a60:	ldr	x1, [sp, #224]
   35a64:	add	x0, x0, x1
   35a68:	str	x0, [sp, #168]
   35a6c:	add	x0, x0, x0, lsr #63
   35a70:	asr	x0, x0, #1
   35a74:	str	x0, [sp, #224]
   35a78:	b	34dc4 <mpfr_powerof2_raw@@Base+0x42c>
   35a7c:	stp	d8, d9, [sp, #96]
   35a80:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   35a84:	add	x2, x2, #0x3e8
   35a88:	mov	w1, #0x2b8                 	// #696
   35a8c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   35a90:	add	x0, x0, #0x2d8
   35a94:	bl	cb40 <mpfr_assert_fail@plt>
   35a98:	ldp	d8, d9, [sp, #96]
   35a9c:	b	35970 <mpfr_powerof2_raw@@Base+0xfd8>
   35aa0:	ldr	w2, [sp, #204]
   35aa4:	mov	w1, w19
   35aa8:	ldr	x0, [sp, #208]
   35aac:	bl	cb30 <mpfr_check_range@plt>
   35ab0:	mov	w19, w0
   35ab4:	b	35b80 <mpfr_powerof2_raw@@Base+0x11e8>
   35ab8:	cmp	x19, #0x0
   35abc:	csinv	x19, x19, xzr, ge  // ge = tcont
   35ac0:	add	x19, x19, #0x1
   35ac4:	ldr	x0, [sp, #384]
   35ac8:	add	x21, x21, x0
   35acc:	b	34f28 <mpfr_powerof2_raw@@Base+0x590>
   35ad0:	ldr	x0, [sp, #192]
   35ad4:	mov	w20, #0xe                   	// #14
   35ad8:	b	34e80 <mpfr_powerof2_raw@@Base+0x4e8>
   35adc:	add	x0, sp, #0x1b0
   35ae0:	bl	c070 <mpfr_clear@plt>
   35ae4:	add	x0, sp, #0x190
   35ae8:	bl	c070 <mpfr_clear@plt>
   35aec:	add	x0, sp, #0x170
   35af0:	bl	c070 <mpfr_clear@plt>
   35af4:	add	x0, sp, #0x150
   35af8:	bl	c070 <mpfr_clear@plt>
   35afc:	add	x0, sp, #0x130
   35b00:	bl	c070 <mpfr_clear@plt>
   35b04:	ldr	w1, [sp, #280]
   35b08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35b0c:	ldr	x2, [x0, #2576]
   35b10:	add	x0, x0, #0xa10
   35b14:	blr	x2
   35b18:	mrs	x2, tpidr_el0
   35b1c:	str	w1, [x2, x0]
   35b20:	ldr	x3, [sp, #288]
   35b24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35b28:	ldr	x4, [x0, #2512]
   35b2c:	add	x0, x0, #0x9d0
   35b30:	blr	x4
   35b34:	str	x3, [x2, x0]
   35b38:	ldr	x4, [sp, #296]
   35b3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35b40:	ldr	x5, [x0, #2544]
   35b44:	add	x0, x0, #0x9f0
   35b48:	blr	x5
   35b4c:	str	x4, [x2, x0]
   35b50:	ldr	x0, [sp, #208]
   35b54:	ldr	x0, [x0, #16]
   35b58:	cmp	x4, x0
   35b5c:	ccmp	x0, x3, #0x1, ge  // ge = tcont
   35b60:	b.lt	35aa0 <mpfr_powerof2_raw@@Base+0x1108>  // b.tstop
   35b64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35b68:	ldr	x2, [x0, #2576]
   35b6c:	add	x0, x0, #0xa10
   35b70:	blr	x2
   35b74:	orr	w1, w1, #0x8
   35b78:	mrs	x2, tpidr_el0
   35b7c:	str	w1, [x2, x0]
   35b80:	mov	w0, w19
   35b84:	ldp	x23, x24, [sp, #48]
   35b88:	ldp	x25, x26, [sp, #64]
   35b8c:	ldp	x27, x28, [sp, #80]
   35b90:	ldp	x19, x20, [sp, #16]
   35b94:	ldp	x21, x22, [sp, #32]
   35b98:	ldp	x29, x30, [sp], #464
   35b9c:	ret
   35ba0:	mov	w2, #0x0                   	// #0
   35ba4:	mov	x1, x27
   35ba8:	mov	x0, x28
   35bac:	bl	c240 <mpfr_set_z@plt>
   35bb0:	b	35748 <mpfr_powerof2_raw@@Base+0xdb0>
   35bb4:	mov	w2, #0x0                   	// #0
   35bb8:	mov	x1, x27
   35bbc:	mov	x0, x28
   35bc0:	bl	c240 <mpfr_set_z@plt>
   35bc4:	ldr	x21, [sp, #128]
   35bc8:	mov	x1, x21
   35bcc:	mov	x19, #0x0                   	// #0
   35bd0:	ldr	x0, [sp, #152]
   35bd4:	add	x20, x0, #0x20
   35bd8:	ldr	x23, [sp, #184]
   35bdc:	b	35714 <mpfr_powerof2_raw@@Base+0xd7c>
   35be0:	stp	x23, x24, [sp, #48]
   35be4:	stp	x25, x26, [sp, #64]
   35be8:	stp	x27, x28, [sp, #80]
   35bec:	ldr	x0, [sp, #192]
   35bf0:	mov	w1, #0xd                   	// #13
   35bf4:	b	34d9c <mpfr_powerof2_raw@@Base+0x404>

0000000000035bf8 <mpfr_gamma@@Base>:
   35bf8:	sub	sp, sp, #0x280
   35bfc:	stp	x29, x30, [sp]
   35c00:	mov	x29, sp
   35c04:	stp	x19, x20, [sp, #16]
   35c08:	stp	x21, x22, [sp, #32]
   35c0c:	mov	x20, x0
   35c10:	mov	x19, x1
   35c14:	ldr	x1, [x1, #16]
   35c18:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35c1c:	cmp	x1, x0
   35c20:	b.le	35d38 <mpfr_gamma@@Base+0x140>
   35c24:	mov	w22, w2
   35c28:	ldr	x2, [x19]
   35c2c:	ldr	x0, [x20]
   35c30:	cmp	x0, x2
   35c34:	csel	x0, x0, x2, ge  // ge = tcont
   35c38:	neg	x0, x0, lsl #1
   35c3c:	cmp	x1, x0
   35c40:	b.gt	35f5c <mpfr_gamma@@Base+0x364>
   35c44:	stp	x23, x24, [sp, #48]
   35c48:	stp	x25, x26, [sp, #64]
   35c4c:	ldr	w23, [x19, #8]
   35c50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35c54:	ldr	x2, [x0, #2576]
   35c58:	add	x0, x0, #0xa10
   35c5c:	blr	x2
   35c60:	mrs	x2, tpidr_el0
   35c64:	ldr	w0, [x2, x0]
   35c68:	str	w0, [sp, #328]
   35c6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35c70:	ldr	x3, [x0, #2512]
   35c74:	add	x0, x0, #0x9d0
   35c78:	blr	x3
   35c7c:	add	x3, x2, x0
   35c80:	ldr	x0, [x2, x0]
   35c84:	str	x0, [sp, #336]
   35c88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35c8c:	ldr	x4, [x0, #2544]
   35c90:	add	x0, x0, #0x9f0
   35c94:	blr	x4
   35c98:	ldr	x4, [x2, x0]
   35c9c:	str	x4, [sp, #344]
   35ca0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   35ca4:	str	x4, [x3]
   35ca8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   35cac:	str	x3, [x2, x0]
   35cb0:	cmp	w23, #0x0
   35cb4:	cset	w24, gt
   35cb8:	cmp	w24, #0x0
   35cbc:	mov	x0, #0x2                   	// #2
   35cc0:	movk	x0, #0xc000, lsl #48
   35cc4:	ccmp	x1, x0, #0x0, ne  // ne = any
   35cc8:	b.eq	35e18 <mpfr_gamma@@Base+0x220>  // b.none
   35ccc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35cd0:	ldr	x1, [x0, #2576]
   35cd4:	add	x0, x0, #0xa10
   35cd8:	blr	x1
   35cdc:	mrs	x1, tpidr_el0
   35ce0:	str	wzr, [x1, x0]
   35ce4:	mov	w3, w22
   35ce8:	mov	x2, x19
   35cec:	mov	x1, #0x1                   	// #1
   35cf0:	mov	x0, x20
   35cf4:	bl	c2f0 <mpfr_ui_div@plt>
   35cf8:	mov	w21, w0
   35cfc:	cbnz	w0, 35e6c <mpfr_gamma@@Base+0x274>
   35d00:	mov	w21, #0x1                   	// #1
   35d04:	tst	w22, #0xfffffffd
   35d08:	b.eq	35e94 <mpfr_gamma@@Base+0x29c>  // b.none
   35d0c:	cmp	w23, #0x0
   35d10:	mov	w21, #0x1                   	// #1
   35d14:	ccmp	w22, w21, #0x0, lt  // lt = tstop
   35d18:	b.eq	35e94 <mpfr_gamma@@Base+0x29c>  // b.none
   35d1c:	cmp	w24, #0x0
   35d20:	ccmp	w22, #0x4, #0x0, ne  // ne = any
   35d24:	b.eq	35e94 <mpfr_gamma@@Base+0x29c>  // b.none
   35d28:	mov	x0, x20
   35d2c:	bl	bdd0 <mpfr_nextbelow@plt>
   35d30:	mov	w21, #0xffffffff            	// #-1
   35d34:	b	35e94 <mpfr_gamma@@Base+0x29c>
   35d38:	mov	x0, #0x2                   	// #2
   35d3c:	movk	x0, #0x8000, lsl #48
   35d40:	cmp	x1, x0
   35d44:	b.eq	35d74 <mpfr_gamma@@Base+0x17c>  // b.none
   35d48:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35d4c:	cmp	x1, x0
   35d50:	b.ne	35ddc <mpfr_gamma@@Base+0x1e4>  // b.any
   35d54:	ldr	w0, [x19, #8]
   35d58:	tbnz	w0, #31, 35da4 <mpfr_gamma@@Base+0x1ac>
   35d5c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35d60:	str	x0, [x20, #16]
   35d64:	mov	w0, #0x1                   	// #1
   35d68:	str	w0, [x20, #8]
   35d6c:	mov	w21, #0x0                   	// #0
   35d70:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35d74:	str	x0, [x20, #16]
   35d78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35d7c:	ldr	x1, [x0, #2576]
   35d80:	add	x0, x0, #0xa10
   35d84:	blr	x1
   35d88:	mrs	x1, tpidr_el0
   35d8c:	add	x0, x1, x0
   35d90:	ldr	w1, [x0]
   35d94:	orr	w1, w1, #0x4
   35d98:	str	w1, [x0]
   35d9c:	mov	w21, #0x0                   	// #0
   35da0:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35da4:	mov	x0, #0x2                   	// #2
   35da8:	movk	x0, #0x8000, lsl #48
   35dac:	str	x0, [x20, #16]
   35db0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35db4:	ldr	x1, [x0, #2576]
   35db8:	add	x0, x0, #0xa10
   35dbc:	blr	x1
   35dc0:	mrs	x1, tpidr_el0
   35dc4:	add	x0, x1, x0
   35dc8:	ldr	w1, [x0]
   35dcc:	orr	w1, w1, #0x4
   35dd0:	str	w1, [x0]
   35dd4:	mov	w21, #0x0                   	// #0
   35dd8:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35ddc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35de0:	str	x0, [x20, #16]
   35de4:	ldr	w0, [x19, #8]
   35de8:	str	w0, [x20, #8]
   35dec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35df0:	ldr	x1, [x0, #2576]
   35df4:	add	x0, x0, #0xa10
   35df8:	blr	x1
   35dfc:	mrs	x1, tpidr_el0
   35e00:	add	x0, x1, x0
   35e04:	ldr	w1, [x0]
   35e08:	orr	w1, w1, #0x20
   35e0c:	str	w1, [x0]
   35e10:	mov	w21, #0x0                   	// #0
   35e14:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35e18:	and	w0, w22, #0xfffffffd
   35e1c:	cmp	w0, #0x1
   35e20:	b.ne	35ccc <mpfr_gamma@@Base+0xd4>  // b.any
   35e24:	mov	x0, x19
   35e28:	bl	bf00 <mpfr_powerof2_raw@plt>
   35e2c:	cmp	w0, #0x0
   35e30:	cset	w25, ne  // ne = any
   35e34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35e38:	ldr	x1, [x0, #2576]
   35e3c:	add	x0, x0, #0xa10
   35e40:	blr	x1
   35e44:	mrs	x1, tpidr_el0
   35e48:	str	wzr, [x1, x0]
   35e4c:	mov	w3, w22
   35e50:	mov	x2, x19
   35e54:	mov	x1, #0x1                   	// #1
   35e58:	mov	x0, x20
   35e5c:	bl	c2f0 <mpfr_ui_div@plt>
   35e60:	mov	w21, w0
   35e64:	cbz	w0, 35d0c <mpfr_gamma@@Base+0x114>
   35e68:	b	35e70 <mpfr_gamma@@Base+0x278>
   35e6c:	mov	w25, #0x0                   	// #0
   35e70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35e74:	ldr	x1, [x0, #2576]
   35e78:	add	x0, x0, #0xa10
   35e7c:	blr	x1
   35e80:	mrs	x1, tpidr_el0
   35e84:	ldr	w0, [x1, x0]
   35e88:	tst	x0, #0x2
   35e8c:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   35e90:	b.eq	35f10 <mpfr_gamma@@Base+0x318>  // b.none
   35e94:	ldr	w2, [sp, #328]
   35e98:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35e9c:	ldr	x1, [x0, #2576]
   35ea0:	add	x0, x0, #0xa10
   35ea4:	blr	x1
   35ea8:	mrs	x1, tpidr_el0
   35eac:	str	w2, [x1, x0]
   35eb0:	ldr	x4, [sp, #336]
   35eb4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35eb8:	ldr	x3, [x0, #2512]
   35ebc:	add	x0, x0, #0x9d0
   35ec0:	blr	x3
   35ec4:	str	x4, [x1, x0]
   35ec8:	ldr	x3, [sp, #344]
   35ecc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35ed0:	ldr	x5, [x0, #2544]
   35ed4:	add	x0, x0, #0x9f0
   35ed8:	blr	x5
   35edc:	str	x3, [x1, x0]
   35ee0:	ldr	x0, [x20, #16]
   35ee4:	cmp	x0, x4
   35ee8:	ccmp	x0, x3, #0x0, ge  // ge = tcont
   35eec:	b.le	35f20 <mpfr_gamma@@Base+0x328>
   35ef0:	mov	w2, w22
   35ef4:	mov	w1, w21
   35ef8:	mov	x0, x20
   35efc:	bl	cb30 <mpfr_check_range@plt>
   35f00:	mov	w21, w0
   35f04:	ldp	x23, x24, [sp, #48]
   35f08:	ldp	x25, x26, [sp, #64]
   35f0c:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35f10:	ldr	w1, [sp, #328]
   35f14:	orr	w0, w1, w0
   35f18:	str	w0, [sp, #328]
   35f1c:	b	35e94 <mpfr_gamma@@Base+0x29c>
   35f20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35f24:	ldr	x1, [x0, #2576]
   35f28:	add	x0, x0, #0xa10
   35f2c:	blr	x1
   35f30:	orr	w2, w2, #0x8
   35f34:	mrs	x1, tpidr_el0
   35f38:	str	w2, [x1, x0]
   35f3c:	ldp	x23, x24, [sp, #48]
   35f40:	ldp	x25, x26, [sp, #64]
   35f44:	mov	w0, w21
   35f48:	ldp	x19, x20, [sp, #16]
   35f4c:	ldp	x21, x22, [sp, #32]
   35f50:	ldp	x29, x30, [sp]
   35f54:	add	sp, sp, #0x280
   35f58:	ret
   35f5c:	mov	x0, x19
   35f60:	bl	c160 <mpfr_integer_p@plt>
   35f64:	cbz	w0, 36a28 <mpfr_gamma@@Base+0xe30>
   35f68:	ldr	w0, [x19, #8]
   35f6c:	tbnz	w0, #31, 35fa4 <mpfr_gamma@@Base+0x3ac>
   35f70:	mov	x2, #0x0                   	// #0
   35f74:	mov	x1, #0x1                   	// #1
   35f78:	mov	x0, x19
   35f7c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   35f80:	mov	w21, w0
   35f84:	cbnz	w0, 35fdc <mpfr_gamma@@Base+0x3e4>
   35f88:	mov	w3, w22
   35f8c:	mov	x2, #0x0                   	// #0
   35f90:	mov	x1, #0x1                   	// #1
   35f94:	mov	x0, x20
   35f98:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   35f9c:	mov	w21, w0
   35fa0:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35fa4:	mov	x0, #0x2                   	// #2
   35fa8:	movk	x0, #0x8000, lsl #48
   35fac:	str	x0, [x20, #16]
   35fb0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   35fb4:	ldr	x1, [x0, #2576]
   35fb8:	add	x0, x0, #0xa10
   35fbc:	blr	x1
   35fc0:	mrs	x1, tpidr_el0
   35fc4:	add	x0, x1, x0
   35fc8:	ldr	w1, [x0]
   35fcc:	orr	w1, w1, #0x4
   35fd0:	str	w1, [x0]
   35fd4:	mov	w21, #0x0                   	// #0
   35fd8:	b	35f44 <mpfr_gamma@@Base+0x34c>
   35fdc:	mov	w1, #0x0                   	// #0
   35fe0:	mov	x0, x19
   35fe4:	bl	be50 <mpfr_fits_ulong_p@plt>
   35fe8:	cbz	w0, 36a40 <mpfr_gamma@@Base+0xe48>
   35fec:	stp	x27, x28, [sp, #80]
   35ff0:	ldr	x27, [x20]
   35ff4:	mov	w1, #0x0                   	// #0
   35ff8:	mov	x0, x19
   35ffc:	bl	bca0 <mpfr_get_ui@plt>
   36000:	mov	x1, #0x68d8                	// #26840
   36004:	movk	x1, #0x2ab, lsl #16
   36008:	cmp	x0, x1
   3600c:	b.ls	36018 <mpfr_gamma@@Base+0x420>  // b.plast
   36010:	ldp	x27, x28, [sp, #80]
   36014:	b	36a40 <mpfr_gamma@@Base+0xe48>
   36018:	stp	x23, x24, [sp, #48]
   3601c:	stp	x25, x26, [sp, #64]
   36020:	sub	x23, x0, #0x1
   36024:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36028:	ldr	x1, [x0, #2576]
   3602c:	add	x0, x0, #0xa10
   36030:	blr	x1
   36034:	mrs	x26, tpidr_el0
   36038:	ldr	w28, [x26, x0]
   3603c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36040:	ldr	x1, [x0, #2512]
   36044:	add	x0, x0, #0x9d0
   36048:	blr	x1
   3604c:	add	x1, x26, x0
   36050:	ldr	x0, [x26, x0]
   36054:	str	x0, [sp, #96]
   36058:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3605c:	ldr	x2, [x0, #2544]
   36060:	add	x0, x0, #0x9f0
   36064:	blr	x2
   36068:	ldr	x2, [x26, x0]
   3606c:	str	x2, [sp, #104]
   36070:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   36074:	str	x2, [x1]
   36078:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3607c:	str	x1, [x26, x0]
   36080:	add	x24, sp, #0x98
   36084:	mov	x1, #0x26                  	// #38
   36088:	mov	x0, x24
   3608c:	bl	ca80 <mpfr_init2@plt>
   36090:	add	x25, sp, #0xb8
   36094:	mov	x1, #0x26                  	// #38
   36098:	mov	x0, x25
   3609c:	bl	ca80 <mpfr_init2@plt>
   360a0:	mov	w3, #0x1                   	// #1
   360a4:	mov	x2, #0x0                   	// #0
   360a8:	mov	x1, x23
   360ac:	mov	x0, x24
   360b0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   360b4:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   360b8:	add	x1, x1, #0x320
   360bc:	mov	x0, x25
   360c0:	bl	c340 <mpfr_set_str_binary@plt>
   360c4:	mov	w3, #0x1                   	// #1
   360c8:	mov	x2, x25
   360cc:	mov	x1, x24
   360d0:	mov	x0, x24
   360d4:	bl	c620 <mpfr_div@plt>
   360d8:	mov	w3, #0x1                   	// #1
   360dc:	mov	x2, x23
   360e0:	mov	x1, x24
   360e4:	mov	x0, x24
   360e8:	bl	bf70 <mpfr_pow_ui@plt>
   360ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   360f0:	ldr	x1, [x0, #2624]
   360f4:	add	x0, x0, #0xa40
   360f8:	blr	x1
   360fc:	mov	w2, #0x1                   	// #1
   36100:	add	x1, x26, x0
   36104:	mov	x0, x25
   36108:	bl	c380 <mpfr_cache@plt>
   3610c:	mov	w3, #0x1                   	// #1
   36110:	lsl	x2, x23, #1
   36114:	mov	x1, x25
   36118:	mov	x0, x25
   3611c:	bl	ba50 <mpfr_mul_ui@plt>
   36120:	mov	w2, #0x1                   	// #1
   36124:	mov	x1, x25
   36128:	mov	x0, x25
   3612c:	bl	c930 <mpfr_sqrt@plt>
   36130:	mov	w3, #0x1                   	// #1
   36134:	mov	x2, x25
   36138:	mov	x1, x24
   3613c:	mov	x0, x24
   36140:	bl	bd50 <mpfr_mul@plt>
   36144:	mov	w2, #0x1                   	// #1
   36148:	mov	x1, x24
   3614c:	mov	x0, x24
   36150:	bl	c1d0 <mpfr_log2@plt>
   36154:	mov	w1, #0x2                   	// #2
   36158:	mov	x0, x24
   3615c:	bl	bca0 <mpfr_get_ui@plt>
   36160:	mov	x24, x0
   36164:	cmp	x23, #0x1
   36168:	b.ls	3618c <mpfr_gamma@@Base+0x594>  // b.plast
   3616c:	lsr	x1, x23, #1
   36170:	mov	x0, #0x2                   	// #2
   36174:	sub	x24, x24, x1
   36178:	lsl	x0, x0, #1
   3617c:	cmp	x23, x0
   36180:	b.cc	3618c <mpfr_gamma@@Base+0x594>  // b.lo, b.ul, b.last
   36184:	udiv	x1, x23, x0
   36188:	b	36174 <mpfr_gamma@@Base+0x57c>
   3618c:	add	x0, sp, #0x98
   36190:	bl	c070 <mpfr_clear@plt>
   36194:	add	x0, sp, #0xb8
   36198:	bl	c070 <mpfr_clear@plt>
   3619c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   361a0:	ldr	x1, [x0, #2576]
   361a4:	add	x0, x0, #0xa10
   361a8:	blr	x1
   361ac:	mrs	x1, tpidr_el0
   361b0:	str	w28, [x1, x0]
   361b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   361b8:	ldr	x2, [x0, #2512]
   361bc:	add	x0, x0, #0x9d0
   361c0:	blr	x2
   361c4:	ldr	x2, [sp, #96]
   361c8:	str	x2, [x1, x0]
   361cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   361d0:	ldr	x2, [x0, #2544]
   361d4:	add	x0, x0, #0x9f0
   361d8:	blr	x2
   361dc:	ldr	x2, [sp, #104]
   361e0:	str	x2, [x1, x0]
   361e4:	cmp	w22, #0x0
   361e8:	cinc	x27, x27, eq  // eq = none
   361ec:	cmp	x27, x24
   361f0:	b.cs	36204 <mpfr_gamma@@Base+0x60c>  // b.hs, b.nlast
   361f4:	ldp	x23, x24, [sp, #48]
   361f8:	ldp	x25, x26, [sp, #64]
   361fc:	ldp	x27, x28, [sp, #80]
   36200:	b	36a40 <mpfr_gamma@@Base+0xe48>
   36204:	mov	w2, w22
   36208:	mov	x1, x23
   3620c:	mov	x0, x20
   36210:	bl	c6e0 <mpfr_fac_ui@plt>
   36214:	mov	w21, w0
   36218:	ldp	x23, x24, [sp, #48]
   3621c:	ldp	x25, x26, [sp, #64]
   36220:	ldp	x27, x28, [sp, #80]
   36224:	b	35f44 <mpfr_gamma@@Base+0x34c>
   36228:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3622c:	ldr	x1, [x0, #2512]
   36230:	add	x0, x0, #0x9d0
   36234:	blr	x1
   36238:	mrs	x1, tpidr_el0
   3623c:	str	x3, [x1, x0]
   36240:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36244:	ldr	x3, [x0, #2544]
   36248:	add	x0, x0, #0x9f0
   3624c:	blr	x3
   36250:	str	x2, [x1, x0]
   36254:	mov	w2, w22
   36258:	mov	x1, x19
   3625c:	mov	x0, x20
   36260:	bl	34c74 <mpfr_powerof2_raw@@Base+0x2dc>
   36264:	mov	w21, w0
   36268:	b	35f44 <mpfr_gamma@@Base+0x34c>
   3626c:	mov	w2, #0x1                   	// #1
   36270:	mov	w1, w22
   36274:	mov	x0, x20
   36278:	bl	bf40 <mpfr_overflow@plt>
   3627c:	mov	w21, w0
   36280:	ldp	x23, x24, [sp, #48]
   36284:	ldp	x25, x26, [sp, #64]
   36288:	b	35f44 <mpfr_gamma@@Base+0x34c>
   3628c:	stp	x23, x24, [sp, #48]
   36290:	stp	x25, x26, [sp, #64]
   36294:	ldr	w0, [x19, #8]
   36298:	tbnz	w0, #31, 362c8 <mpfr_gamma@@Base+0x6d0>
   3629c:	stp	x27, x28, [sp, #80]
   362a0:	ldr	x0, [x20]
   362a4:	ldr	w1, [x19, #8]
   362a8:	cmp	w1, #0x0
   362ac:	b.gt	365a4 <mpfr_gamma@@Base+0x9ac>
   362b0:	ldr	x2, [x19, #16]
   362b4:	cmp	x2, #0x0
   362b8:	b.le	36924 <mpfr_gamma@@Base+0xd2c>
   362bc:	ldr	x1, [x19]
   362c0:	add	x1, x1, #0x1
   362c4:	b	365b0 <mpfr_gamma@@Base+0x9b8>
   362c8:	add	x21, sp, #0x260
   362cc:	mov	x1, #0x35                  	// #53
   362d0:	mov	x0, x21
   362d4:	bl	ca80 <mpfr_init2@plt>
   362d8:	mov	x1, #0x35                  	// #53
   362dc:	add	x0, sp, #0x220
   362e0:	bl	ca80 <mpfr_init2@plt>
   362e4:	mov	x1, #0x35                  	// #53
   362e8:	add	x0, sp, #0x200
   362ec:	bl	ca80 <mpfr_init2@plt>
   362f0:	mov	w3, #0x3                   	// #3
   362f4:	mov	x2, x19
   362f8:	mov	x1, #0x2                   	// #2
   362fc:	mov	x0, x21
   36300:	bl	ca50 <mpfr_ui_sub@plt>
   36304:	mov	w2, #0x3                   	// #3
   36308:	mov	x1, x21
   3630c:	mov	x0, x21
   36310:	bl	c090 <mpfr_log@plt>
   36314:	mov	w3, #0x3                   	// #3
   36318:	mov	x2, #0x1                   	// #1
   3631c:	mov	x1, x21
   36320:	mov	x0, x21
   36324:	bl	c530 <mpfr_sub_ui@plt>
   36328:	mov	w3, #0x2                   	// #2
   3632c:	mov	x2, x19
   36330:	mov	x1, x21
   36334:	mov	x0, x21
   36338:	bl	bd50 <mpfr_mul@plt>
   3633c:	ldr	x0, [x19, #16]
   36340:	cmp	x0, #0x1
   36344:	b.le	363fc <mpfr_gamma@@Base+0x804>
   36348:	ldr	x23, [x19]
   3634c:	add	x23, x23, #0x1
   36350:	add	x23, x23, #0x11
   36354:	add	x24, sp, #0x220
   36358:	mov	x1, x23
   3635c:	mov	x0, x24
   36360:	bl	bed0 <mpfr_set_prec@plt>
   36364:	add	x21, sp, #0x200
   36368:	mov	x1, x23
   3636c:	mov	x0, x21
   36370:	bl	bed0 <mpfr_set_prec@plt>
   36374:	mov	w3, #0x0                   	// #0
   36378:	mov	x2, x19
   3637c:	mov	x1, #0x2                   	// #2
   36380:	mov	x0, x24
   36384:	bl	ca50 <mpfr_ui_sub@plt>
   36388:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3638c:	ldr	x1, [x0, #2624]
   36390:	add	x0, x0, #0xa40
   36394:	blr	x1
   36398:	mov	w2, #0x0                   	// #0
   3639c:	mrs	x1, tpidr_el0
   363a0:	add	x1, x1, x0
   363a4:	mov	x0, x21
   363a8:	bl	c380 <mpfr_cache@plt>
   363ac:	mov	w3, #0x0                   	// #0
   363b0:	mov	x2, x24
   363b4:	mov	x1, x21
   363b8:	mov	x0, x21
   363bc:	bl	bd50 <mpfr_mul@plt>
   363c0:	mov	w2, #0x0                   	// #0
   363c4:	mov	x1, x21
   363c8:	mov	x0, x24
   363cc:	bl	c450 <mpfr_sin@plt>
   363d0:	ldr	x0, [sp, #560]
   363d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   363d8:	cmp	x0, x1
   363dc:	b.ge	3640c <mpfr_gamma@@Base+0x814>  // b.tcont
   363e0:	mov	w24, #0x0                   	// #0
   363e4:	mov	x1, #0x2                   	// #2
   363e8:	movk	x1, #0x8000, lsl #48
   363ec:	cmp	x0, x1
   363f0:	b.ne	36410 <mpfr_gamma@@Base+0x818>  // b.any
   363f4:	bl	bc90 <mpfr_set_erangeflag@plt>
   363f8:	b	36410 <mpfr_gamma@@Base+0x818>
   363fc:	ldr	x23, [x19]
   36400:	add	x23, x23, #0x2
   36404:	sub	x23, x23, x0
   36408:	b	36350 <mpfr_gamma@@Base+0x758>
   3640c:	ldr	w24, [sp, #552]
   36410:	add	x23, sp, #0x220
   36414:	mov	w3, #0x1                   	// #1
   36418:	mov	w2, #0x0                   	// #0
   3641c:	mov	x1, x23
   36420:	mov	x0, x23
   36424:	bl	c6a0 <mpfr_set4@plt>
   36428:	add	x21, sp, #0x200
   3642c:	mov	w3, #0x2                   	// #2
   36430:	mov	x2, #0x3                   	// #3
   36434:	mov	x1, x21
   36438:	mov	x0, x21
   3643c:	bl	ba50 <mpfr_mul_ui@plt>
   36440:	mov	w3, #0x2                   	// #2
   36444:	mov	x2, #0x1                   	// #1
   36448:	mov	x1, x21
   3644c:	mov	x0, x21
   36450:	bl	c260 <mpfr_add_ui@plt>
   36454:	mov	w3, #0x2                   	// #2
   36458:	ldr	x2, [sp, #544]
   3645c:	mov	x1, x21
   36460:	mov	x0, x21
   36464:	bl	c8f0 <mpfr_div_2ui@plt>
   36468:	mov	w2, #0x1                   	// #1
   3646c:	mov	x1, x23
   36470:	mov	x0, x21
   36474:	bl	c9a0 <mpfr_cmp3@plt>
   36478:	tbnz	w0, #31, 3649c <mpfr_gamma@@Base+0x8a4>
   3647c:	stp	x27, x28, [sp, #80]
   36480:	add	x0, sp, #0x260
   36484:	bl	c070 <mpfr_clear@plt>
   36488:	add	x0, sp, #0x220
   3648c:	bl	c070 <mpfr_clear@plt>
   36490:	add	x0, sp, #0x200
   36494:	bl	c070 <mpfr_clear@plt>
   36498:	b	362a0 <mpfr_gamma@@Base+0x6a8>
   3649c:	add	x25, sp, #0x200
   364a0:	add	x21, sp, #0x220
   364a4:	mov	w3, #0x1                   	// #1
   364a8:	mov	x2, x25
   364ac:	mov	x1, x21
   364b0:	mov	x0, x21
   364b4:	bl	bb70 <mpfr_sub@plt>
   364b8:	mov	w3, #0x2                   	// #2
   364bc:	mov	x2, x21
   364c0:	mov	x1, #0xc                   	// #12
   364c4:	mov	x0, x21
   364c8:	bl	c2f0 <mpfr_ui_div@plt>
   364cc:	mov	w2, #0x2                   	// #2
   364d0:	mov	x1, x21
   364d4:	mov	x0, x21
   364d8:	bl	c1d0 <mpfr_log2@plt>
   364dc:	add	x23, sp, #0x260
   364e0:	mov	w3, #0x2                   	// #2
   364e4:	mov	x2, x23
   364e8:	mov	x1, x21
   364ec:	mov	x0, x23
   364f0:	bl	c1a0 <mpfr_add@plt>
   364f4:	mov	x2, #0x0                   	// #0
   364f8:	ldr	x1, [sp, #336]
   364fc:	sub	x1, x1, #0x2
   36500:	mov	x0, x23
   36504:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   36508:	mov	w26, w0
   3650c:	mov	x0, x23
   36510:	bl	c070 <mpfr_clear@plt>
   36514:	mov	x0, x21
   36518:	bl	c070 <mpfr_clear@plt>
   3651c:	mov	x0, x25
   36520:	bl	c070 <mpfr_clear@plt>
   36524:	cmp	w26, #0x0
   36528:	b.le	36534 <mpfr_gamma@@Base+0x93c>
   3652c:	stp	x27, x28, [sp, #80]
   36530:	b	362a0 <mpfr_gamma@@Base+0x6a8>
   36534:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36538:	ldr	x1, [x0, #2576]
   3653c:	add	x0, x0, #0xa10
   36540:	blr	x1
   36544:	mrs	x1, tpidr_el0
   36548:	ldr	w2, [sp, #328]
   3654c:	str	w2, [x1, x0]
   36550:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36554:	ldr	x2, [x0, #2512]
   36558:	add	x0, x0, #0x9d0
   3655c:	blr	x2
   36560:	ldr	x2, [sp, #336]
   36564:	str	x2, [x1, x0]
   36568:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3656c:	ldr	x2, [x0, #2544]
   36570:	add	x0, x0, #0x9f0
   36574:	blr	x2
   36578:	ldr	x2, [sp, #344]
   3657c:	str	x2, [x1, x0]
   36580:	cmp	w22, #0x0
   36584:	neg	w2, w24
   36588:	csinc	w1, w22, wzr, ne  // ne = any
   3658c:	mov	x0, x20
   36590:	bl	c3c0 <mpfr_underflow@plt>
   36594:	mov	w21, w0
   36598:	ldp	x23, x24, [sp, #48]
   3659c:	ldp	x25, x26, [sp, #64]
   365a0:	b	35f44 <mpfr_gamma@@Base+0x34c>
   365a4:	ldr	x1, [x19]
   365a8:	ldr	x2, [x19, #16]
   365ac:	sub	x1, x1, x2
   365b0:	cmp	x0, x1
   365b4:	csel	x1, x0, x1, ge  // ge = tcont
   365b8:	ldr	x2, [x19, #16]
   365bc:	cmp	x2, #0x1
   365c0:	b.le	36938 <mpfr_gamma@@Base+0xd40>
   365c4:	ldr	x0, [x19]
   365c8:	add	x0, x0, #0x1
   365cc:	cmp	x0, x1
   365d0:	csel	x0, x0, x1, ge  // ge = tcont
   365d4:	cmp	x0, #0x1
   365d8:	b.eq	36960 <mpfr_gamma@@Base+0xd68>  // b.none
   365dc:	b.le	36948 <mpfr_gamma@@Base+0xd50>
   365e0:	sub	x1, x0, #0x1
   365e4:	clz	x2, x1
   365e8:	mov	w1, #0x40                  	// #64
   365ec:	sub	w1, w1, w2
   365f0:	sxtw	x1, w1
   365f4:	add	x0, x0, x1
   365f8:	add	x23, x0, #0x14
   365fc:	add	x0, x0, #0x13
   36600:	clz	x0, x0
   36604:	mov	w1, #0x40                  	// #64
   36608:	sub	w0, w1, w0
   3660c:	add	x0, x23, w0, sxtw
   36610:	add	x24, x0, #0x14
   36614:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   36618:	cmp	x24, x1
   3661c:	b.ge	36968 <mpfr_gamma@@Base+0xd70>  // b.tcont
   36620:	add	x21, x0, #0x52
   36624:	adds	x0, x0, #0x13
   36628:	csel	x0, x21, x0, mi  // mi = first
   3662c:	asr	x21, x0, #6
   36630:	add	x21, x21, #0x1
   36634:	lsl	x0, x21, #2
   36638:	cmp	x0, #0x10
   3663c:	b.gt	3696c <mpfr_gamma@@Base+0xd74>
   36640:	str	xzr, [sp, #352]
   36644:	add	x0, sp, #0x170
   36648:	str	x0, [sp, #360]
   3664c:	str	x24, [sp, #608]
   36650:	ldr	x1, [sp, #360]
   36654:	str	x1, [sp, #632]
   36658:	mov	w0, #0x1                   	// #1
   3665c:	str	w0, [sp, #616]
   36660:	str	x24, [sp, #544]
   36664:	add	x2, x1, x21, lsl #3
   36668:	str	x2, [sp, #568]
   3666c:	str	w0, [sp, #552]
   36670:	str	x24, [sp, #512]
   36674:	add	x2, x1, x21, lsl #4
   36678:	str	x2, [sp, #536]
   3667c:	str	w0, [sp, #520]
   36680:	str	x24, [sp, #576]
   36684:	add	x21, x21, x21, lsl #1
   36688:	add	x21, x1, x21, lsl #3
   3668c:	str	x21, [sp, #600]
   36690:	str	w0, [sp, #584]
   36694:	add	x0, sp, #0x1f0
   36698:	bl	bf90 <mpfr_mpz_init@plt>
   3669c:	ldr	x1, [sp, #352]
   366a0:	mov	x27, #0x40                  	// #64
   366a4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   366a8:	cmp	x23, x0
   366ac:	b.ge	369e8 <mpfr_gamma@@Base+0xdf0>  // b.tcont
   366b0:	add	x25, sp, #0x260
   366b4:	add	x28, sp, #0x220
   366b8:	add	x26, sp, #0x200
   366bc:	add	x24, sp, #0x240
   366c0:	add	x0, sp, #0x148
   366c4:	str	x0, [sp, #96]
   366c8:	add	x21, x23, #0x3e
   366cc:	subs	x0, x23, #0x1
   366d0:	csel	x21, x21, x0, mi  // mi = first
   366d4:	asr	x21, x21, #6
   366d8:	add	x21, x21, #0x1
   366dc:	lsl	x0, x21, #5
   366e0:	str	x0, [sp, #352]
   366e4:	cbnz	x1, 36980 <mpfr_gamma@@Base+0xd88>
   366e8:	bl	ccf0 <mpfr_allocate_func@plt>
   366ec:	str	x0, [sp, #360]
   366f0:	str	x23, [sp, #608]
   366f4:	ldr	x1, [sp, #360]
   366f8:	str	x1, [sp, #632]
   366fc:	mov	w0, #0x1                   	// #1
   36700:	str	w0, [sp, #616]
   36704:	str	x23, [sp, #544]
   36708:	add	x2, x1, x21, lsl #3
   3670c:	str	x2, [sp, #568]
   36710:	str	w0, [sp, #552]
   36714:	str	x23, [sp, #512]
   36718:	add	x2, x1, x21, lsl #4
   3671c:	str	x2, [sp, #536]
   36720:	str	w0, [sp, #520]
   36724:	str	x23, [sp, #576]
   36728:	add	x21, x21, x21, lsl #1
   3672c:	add	x21, x1, x21, lsl #3
   36730:	str	x21, [sp, #600]
   36734:	str	w0, [sp, #584]
   36738:	mov	w3, #0x0                   	// #0
   3673c:	mov	x2, x19
   36740:	mov	x1, #0x2                   	// #2
   36744:	mov	x0, x25
   36748:	bl	ca50 <mpfr_ui_sub@plt>
   3674c:	mov	w2, #0x0                   	// #0
   36750:	mov	x1, x25
   36754:	mov	x0, x28
   36758:	bl	35bf8 <mpfr_gamma@@Base>
   3675c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36760:	ldr	x1, [x0, #2624]
   36764:	add	x0, x0, #0xa40
   36768:	blr	x1
   3676c:	mov	w2, #0x0                   	// #0
   36770:	mrs	x1, tpidr_el0
   36774:	add	x1, x1, x0
   36778:	mov	x0, x26
   3677c:	bl	c380 <mpfr_cache@plt>
   36780:	mov	w3, #0x0                   	// #0
   36784:	mov	x2, x25
   36788:	mov	x1, x26
   3678c:	mov	x0, x24
   36790:	bl	bd50 <mpfr_mul@plt>
   36794:	ldr	x21, [sp, #592]
   36798:	mov	w2, #0x0                   	// #0
   3679c:	mov	x1, x24
   367a0:	mov	x0, x24
   367a4:	bl	c450 <mpfr_sin@plt>
   367a8:	ldr	x1, [sp, #560]
   367ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   367b0:	cmp	x1, x0
   367b4:	b.eq	36994 <mpfr_gamma@@Base+0xd9c>  // b.none
   367b8:	add	x21, x21, #0x1
   367bc:	ldr	x2, [sp, #592]
   367c0:	sub	x21, x21, x2
   367c4:	mov	w3, #0x0                   	// #0
   367c8:	mov	x2, #0x1                   	// #1
   367cc:	mov	x1, x19
   367d0:	mov	x0, x25
   367d4:	bl	c530 <mpfr_sub_ui@plt>
   367d8:	mov	w3, #0x0                   	// #0
   367dc:	mov	x2, x25
   367e0:	mov	x1, x26
   367e4:	mov	x0, x25
   367e8:	bl	bd50 <mpfr_mul@plt>
   367ec:	mov	w3, #0x0                   	// #0
   367f0:	mov	x2, x28
   367f4:	mov	x1, x24
   367f8:	mov	x0, x24
   367fc:	bl	bd50 <mpfr_mul@plt>
   36800:	mov	w3, #0x0                   	// #0
   36804:	mov	x2, x24
   36808:	mov	x1, x25
   3680c:	mov	x0, x24
   36810:	bl	c620 <mpfr_div@plt>
   36814:	cmp	x21, #0x2
   36818:	mov	x2, #0x2                   	// #2
   3681c:	csel	x21, x21, x2, ge  // ge = tcont
   36820:	add	x21, x21, #0x4
   36824:	ldr	x1, [sp, #592]
   36828:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3682c:	cmp	x1, x0
   36830:	b.le	369b8 <mpfr_gamma@@Base+0xdc0>
   36834:	cmp	w22, #0x0
   36838:	ldr	x3, [x20]
   3683c:	cinc	x3, x3, eq  // eq = none
   36840:	ldr	x0, [sp, #576]
   36844:	add	x1, x0, #0x3e
   36848:	subs	x0, x0, #0x1
   3684c:	csel	x1, x1, x0, mi  // mi = first
   36850:	asr	x1, x1, #6
   36854:	sub	x2, x23, x21
   36858:	add	x1, x1, #0x1
   3685c:	ldr	x0, [sp, #600]
   36860:	bl	c370 <mpfr_round_p@plt>
   36864:	cbz	w0, 369b8 <mpfr_gamma@@Base+0xdc0>
   36868:	ldr	w3, [sp, #584]
   3686c:	mov	w2, w22
   36870:	add	x1, sp, #0x240
   36874:	mov	x0, x20
   36878:	bl	c6a0 <mpfr_set4@plt>
   3687c:	mov	w21, w0
   36880:	ldr	x1, [sp, #352]
   36884:	cbz	x1, 36890 <mpfr_gamma@@Base+0xc98>
   36888:	ldr	x0, [sp, #360]
   3688c:	bl	cc20 <mpfr_free_func@plt>
   36890:	add	x0, sp, #0x1f0
   36894:	bl	c170 <mpfr_mpz_clear@plt>
   36898:	ldr	w2, [sp, #328]
   3689c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   368a0:	ldr	x1, [x0, #2576]
   368a4:	add	x0, x0, #0xa10
   368a8:	blr	x1
   368ac:	mrs	x1, tpidr_el0
   368b0:	str	w2, [x1, x0]
   368b4:	ldr	x3, [sp, #336]
   368b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   368bc:	ldr	x4, [x0, #2512]
   368c0:	add	x0, x0, #0x9d0
   368c4:	blr	x4
   368c8:	str	x3, [x1, x0]
   368cc:	ldr	x4, [sp, #344]
   368d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   368d4:	ldr	x5, [x0, #2544]
   368d8:	add	x0, x0, #0x9f0
   368dc:	blr	x5
   368e0:	str	x4, [x1, x0]
   368e4:	ldr	x0, [x20, #16]
   368e8:	cmp	x4, x0
   368ec:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   368f0:	b.gt	36a04 <mpfr_gamma@@Base+0xe0c>
   368f4:	cbz	w21, 36c50 <mpfr_gamma@@Base+0x1058>
   368f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   368fc:	ldr	x1, [x0, #2576]
   36900:	add	x0, x0, #0xa10
   36904:	blr	x1
   36908:	orr	w2, w2, #0x8
   3690c:	mrs	x1, tpidr_el0
   36910:	str	w2, [x1, x0]
   36914:	ldp	x23, x24, [sp, #48]
   36918:	ldp	x25, x26, [sp, #64]
   3691c:	ldp	x27, x28, [sp, #80]
   36920:	b	35f44 <mpfr_gamma@@Base+0x34c>
   36924:	ldr	x1, [x19]
   36928:	add	x1, x1, #0x1
   3692c:	sub	x1, x1, x2
   36930:	cmp	x1, x0
   36934:	csel	x1, x1, x0, ge  // ge = tcont
   36938:	ldr	x0, [x19]
   3693c:	add	x0, x0, #0x2
   36940:	sub	x0, x0, x2
   36944:	b	365cc <mpfr_gamma@@Base+0x9d4>
   36948:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3694c:	add	x2, x2, #0x380
   36950:	mov	w1, #0x18f                 	// #399
   36954:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36958:	add	x0, x0, #0x390
   3695c:	bl	cb40 <mpfr_assert_fail@plt>
   36960:	mov	x1, #0x0                   	// #0
   36964:	b	365f4 <mpfr_gamma@@Base+0x9fc>
   36968:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3696c:	lsl	x0, x21, #5
   36970:	str	x0, [sp, #352]
   36974:	bl	ccf0 <mpfr_allocate_func@plt>
   36978:	str	x0, [sp, #360]
   3697c:	b	3664c <mpfr_gamma@@Base+0xa54>
   36980:	mov	x2, x0
   36984:	ldr	x0, [sp, #360]
   36988:	bl	c1c0 <mpfr_reallocate_func@plt>
   3698c:	str	x0, [sp, #360]
   36990:	b	366f0 <mpfr_gamma@@Base+0xaf8>
   36994:	mov	w5, w22
   36998:	mov	x4, x26
   3699c:	mov	x3, x28
   369a0:	ldr	x2, [sp, #96]
   369a4:	mov	x1, x19
   369a8:	mov	x0, x20
   369ac:	bl	349c8 <mpfr_powerof2_raw@@Base+0x30>
   369b0:	mov	w21, w0
   369b4:	cbnz	w0, 36880 <mpfr_gamma@@Base+0xc88>
   369b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   369bc:	movk	x0, #0x7fff, lsl #48
   369c0:	sub	x0, x0, x23
   369c4:	cmp	x27, x0
   369c8:	b.gt	369ec <mpfr_gamma@@Base+0xdf4>
   369cc:	add	x23, x23, x27
   369d0:	add	x27, x23, x23, lsr #63
   369d4:	asr	x27, x27, #1
   369d8:	ldr	x1, [sp, #352]
   369dc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   369e0:	cmp	x23, x0
   369e4:	b.lt	366c8 <mpfr_gamma@@Base+0xad0>  // b.tstop
   369e8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   369ec:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   369f0:	add	x2, x2, #0xca0
   369f4:	mov	w1, #0x1d2                 	// #466
   369f8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   369fc:	add	x0, x0, #0x390
   36a00:	bl	cb40 <mpfr_assert_fail@plt>
   36a04:	mov	w2, w22
   36a08:	mov	w1, w21
   36a0c:	mov	x0, x20
   36a10:	bl	cb30 <mpfr_check_range@plt>
   36a14:	mov	w21, w0
   36a18:	ldp	x23, x24, [sp, #48]
   36a1c:	ldp	x25, x26, [sp, #64]
   36a20:	ldp	x27, x28, [sp, #80]
   36a24:	b	35f44 <mpfr_gamma@@Base+0x34c>
   36a28:	mov	x2, #0x0                   	// #0
   36a2c:	mov	x1, #0x1                   	// #1
   36a30:	mov	x0, x19
   36a34:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   36a38:	mov	w21, w0
   36a3c:	cbz	w0, 35f88 <mpfr_gamma@@Base+0x390>
   36a40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36a44:	ldr	x1, [x0, #2576]
   36a48:	add	x0, x0, #0xa10
   36a4c:	blr	x1
   36a50:	mrs	x1, tpidr_el0
   36a54:	ldr	w0, [x1, x0]
   36a58:	str	w0, [sp, #328]
   36a5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36a60:	ldr	x2, [x0, #2512]
   36a64:	add	x0, x0, #0x9d0
   36a68:	blr	x2
   36a6c:	add	x4, x1, x0
   36a70:	ldr	x3, [x1, x0]
   36a74:	str	x3, [sp, #336]
   36a78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36a7c:	ldr	x2, [x0, #2544]
   36a80:	add	x0, x0, #0x9f0
   36a84:	blr	x2
   36a88:	ldr	x2, [x1, x0]
   36a8c:	str	x2, [sp, #344]
   36a90:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   36a94:	str	x5, [x4]
   36a98:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   36a9c:	str	x4, [x1, x0]
   36aa0:	cmp	w21, #0x0
   36aa4:	b.le	3628c <mpfr_gamma@@Base+0x694>
   36aa8:	ldr	x0, [x19, #16]
   36aac:	cmp	x0, #0x19
   36ab0:	b.le	36228 <mpfr_gamma@@Base+0x630>
   36ab4:	stp	x23, x24, [sp, #48]
   36ab8:	stp	x25, x26, [sp, #64]
   36abc:	str	xzr, [sp, #184]
   36ac0:	add	x2, sp, #0xc8
   36ac4:	str	x2, [sp, #192]
   36ac8:	mov	x1, #0x35                  	// #53
   36acc:	str	x1, [sp, #608]
   36ad0:	str	x2, [sp, #632]
   36ad4:	mov	w24, #0x1                   	// #1
   36ad8:	str	w24, [sp, #616]
   36adc:	str	x1, [sp, #120]
   36ae0:	add	x2, sp, #0xd0
   36ae4:	str	x2, [sp, #144]
   36ae8:	str	w24, [sp, #128]
   36aec:	str	x1, [sp, #152]
   36af0:	add	x0, sp, #0xd8
   36af4:	str	x0, [sp, #176]
   36af8:	str	w24, [sp, #160]
   36afc:	add	x23, sp, #0x98
   36b00:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36b04:	add	x1, x1, #0x348
   36b08:	mov	x0, x23
   36b0c:	bl	c340 <mpfr_set_str_binary@plt>
   36b10:	add	x21, sp, #0x260
   36b14:	mov	w3, w24
   36b18:	mov	x2, x23
   36b1c:	mov	x1, x19
   36b20:	mov	x0, x21
   36b24:	bl	bd50 <mpfr_mul@plt>
   36b28:	add	x25, sp, #0x78
   36b2c:	mov	w3, w24
   36b30:	mov	x2, #0x2                   	// #2
   36b34:	mov	x1, x19
   36b38:	mov	x0, x25
   36b3c:	bl	c530 <mpfr_sub_ui@plt>
   36b40:	mov	w3, w24
   36b44:	mov	x2, x25
   36b48:	mov	x1, x21
   36b4c:	mov	x0, x21
   36b50:	bl	bd90 <mpfr_pow@plt>
   36b54:	mov	w3, w24
   36b58:	mov	x2, x23
   36b5c:	mov	x1, x21
   36b60:	mov	x0, x21
   36b64:	bl	bd50 <mpfr_mul@plt>
   36b68:	mov	w3, w24
   36b6c:	mov	x2, x23
   36b70:	mov	x1, x21
   36b74:	mov	x0, x21
   36b78:	bl	bd50 <mpfr_mul@plt>
   36b7c:	mov	w3, w24
   36b80:	mov	x2, x19
   36b84:	mov	x1, x21
   36b88:	mov	x0, x21
   36b8c:	bl	bd50 <mpfr_mul@plt>
   36b90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36b94:	ldr	x1, [x0, #2576]
   36b98:	add	x0, x0, #0xa10
   36b9c:	blr	x1
   36ba0:	mrs	x1, tpidr_el0
   36ba4:	add	x23, x1, x0
   36ba8:	str	wzr, [x1, x0]
   36bac:	mov	w3, w24
   36bb0:	mov	x2, #0x1                   	// #1
   36bb4:	mov	x1, x21
   36bb8:	mov	x0, x21
   36bbc:	bl	c2c0 <mpfr_mul_2ui@plt>
   36bc0:	ldr	w23, [x23]
   36bc4:	ldr	x21, [sp, #624]
   36bc8:	ldr	x1, [sp, #184]
   36bcc:	cbz	x1, 36bd8 <mpfr_gamma@@Base+0xfe0>
   36bd0:	ldr	x0, [sp, #192]
   36bd4:	bl	cc20 <mpfr_free_func@plt>
   36bd8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36bdc:	ldr	x1, [x0, #2576]
   36be0:	add	x0, x0, #0xa10
   36be4:	blr	x1
   36be8:	mrs	x1, tpidr_el0
   36bec:	ldr	w2, [sp, #328]
   36bf0:	str	w2, [x1, x0]
   36bf4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36bf8:	ldr	x2, [x0, #2512]
   36bfc:	add	x0, x0, #0x9d0
   36c00:	blr	x2
   36c04:	ldr	x2, [sp, #336]
   36c08:	str	x2, [x1, x0]
   36c0c:	ldr	x2, [sp, #344]
   36c10:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36c14:	ldr	x3, [x0, #2544]
   36c18:	add	x0, x0, #0x9f0
   36c1c:	blr	x3
   36c20:	str	x2, [x1, x0]
   36c24:	tst	x23, #0x2
   36c28:	ccmp	x2, x21, #0x1, eq  // eq = none
   36c2c:	b.lt	3626c <mpfr_gamma@@Base+0x674>  // b.tstop
   36c30:	mov	w2, w22
   36c34:	mov	x1, x19
   36c38:	mov	x0, x20
   36c3c:	bl	34c74 <mpfr_powerof2_raw@@Base+0x2dc>
   36c40:	mov	w21, w0
   36c44:	ldp	x23, x24, [sp, #48]
   36c48:	ldp	x25, x26, [sp, #64]
   36c4c:	b	35f44 <mpfr_gamma@@Base+0x34c>
   36c50:	ldp	x23, x24, [sp, #48]
   36c54:	ldp	x25, x26, [sp, #64]
   36c58:	ldp	x27, x28, [sp, #80]
   36c5c:	b	35f44 <mpfr_gamma@@Base+0x34c>

0000000000036c60 <mpfr_set_ld@@Base>:
   36c60:	stp	x29, x30, [sp, #-192]!
   36c64:	mov	x29, sp
   36c68:	stp	x19, x20, [sp, #16]
   36c6c:	stp	x23, x24, [sp, #48]
   36c70:	stp	x25, x26, [sp, #64]
   36c74:	mov	x25, x0
   36c78:	str	q0, [sp, #96]
   36c7c:	ldr	x26, [sp, #96]
   36c80:	ldr	x24, [sp, #104]
   36c84:	str	w1, [sp, #120]
   36c88:	ubfx	x0, x24, #48, #15
   36c8c:	mov	w1, #0x7fff                	// #32767
   36c90:	cmp	w0, w1
   36c94:	b.eq	36d84 <mpfr_set_ld@@Base+0x124>  // b.none
   36c98:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36c9c:	add	x0, x0, #0x3a0
   36ca0:	ldr	q1, [x0]
   36ca4:	str	x26, [sp, #96]
   36ca8:	str	x24, [sp, #104]
   36cac:	ldr	q0, [sp, #96]
   36cb0:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   36cb4:	cmp	w0, #0x0
   36cb8:	b.gt	36dd4 <mpfr_set_ld@@Base+0x174>
   36cbc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36cc0:	add	x0, x0, #0x3b0
   36cc4:	ldr	q1, [x0]
   36cc8:	str	x26, [sp, #96]
   36ccc:	str	x24, [sp, #104]
   36cd0:	ldr	q0, [sp, #96]
   36cd4:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   36cd8:	tbnz	w0, #31, 36de8 <mpfr_set_ld@@Base+0x188>
   36cdc:	movi	v1.2d, #0x0
   36ce0:	str	x26, [sp, #96]
   36ce4:	str	x24, [sp, #104]
   36ce8:	ldr	q0, [sp, #96]
   36cec:	bl	5d420 <mpfr_free_pool@@Base+0xbd0>
   36cf0:	cbz	w0, 36dfc <mpfr_set_ld@@Base+0x19c>
   36cf4:	stp	x21, x22, [sp, #32]
   36cf8:	stp	x27, x28, [sp, #80]
   36cfc:	mov	x1, #0x71                  	// #113
   36d00:	add	x0, sp, #0xa0
   36d04:	bl	ca80 <mpfr_init2@plt>
   36d08:	mov	x1, #0x35                  	// #53
   36d0c:	add	x0, sp, #0x80
   36d10:	bl	ca80 <mpfr_init2@plt>
   36d14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36d18:	ldr	x1, [x0, #2576]
   36d1c:	add	x0, x0, #0xa10
   36d20:	blr	x1
   36d24:	mrs	x1, tpidr_el0
   36d28:	ldr	w0, [x1, x0]
   36d2c:	str	w0, [sp, #124]
   36d30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36d34:	ldr	x2, [x0, #2512]
   36d38:	add	x0, x0, #0x9d0
   36d3c:	blr	x2
   36d40:	add	x2, x1, x0
   36d44:	ldr	x27, [x1, x0]
   36d48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36d4c:	ldr	x3, [x0, #2544]
   36d50:	add	x0, x0, #0x9f0
   36d54:	blr	x3
   36d58:	ldr	x28, [x1, x0]
   36d5c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   36d60:	str	x3, [x2]
   36d64:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   36d68:	str	x2, [x1, x0]
   36d6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   36d70:	str	x0, [sp, #176]
   36d74:	mov	x20, x26
   36d78:	mov	x19, x24
   36d7c:	mov	w21, #0x0                   	// #0
   36d80:	b	3700c <mpfr_set_ld@@Base+0x3ac>
   36d84:	ubfx	x0, x24, #32, #16
   36d88:	orr	w0, w0, w24
   36d8c:	lsr	x2, x26, #32
   36d90:	orr	w1, w26, w2
   36d94:	orr	w0, w0, w1
   36d98:	cbz	w0, 36c98 <mpfr_set_ld@@Base+0x38>
   36d9c:	mov	x0, #0x2                   	// #2
   36da0:	movk	x0, #0x8000, lsl #48
   36da4:	str	x0, [x25, #16]
   36da8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   36dac:	ldr	x1, [x0, #2576]
   36db0:	add	x0, x0, #0xa10
   36db4:	blr	x1
   36db8:	mrs	x1, tpidr_el0
   36dbc:	add	x0, x1, x0
   36dc0:	ldr	w1, [x0]
   36dc4:	orr	w1, w1, #0x4
   36dc8:	str	w1, [x0]
   36dcc:	mov	w19, #0x0                   	// #0
   36dd0:	b	36e1c <mpfr_set_ld@@Base+0x1bc>
   36dd4:	mov	w1, #0x1                   	// #1
   36dd8:	mov	x0, x25
   36ddc:	bl	c5b0 <mpfr_set_inf@plt>
   36de0:	mov	w19, #0x0                   	// #0
   36de4:	b	36e1c <mpfr_set_ld@@Base+0x1bc>
   36de8:	mov	w1, #0xffffffff            	// #-1
   36dec:	mov	x0, x25
   36df0:	bl	c5b0 <mpfr_set_inf@plt>
   36df4:	mov	w19, #0x0                   	// #0
   36df8:	b	36e1c <mpfr_set_ld@@Base+0x1bc>
   36dfc:	str	x26, [sp, #96]
   36e00:	str	x24, [sp, #104]
   36e04:	ldr	q0, [sp, #96]
   36e08:	bl	5ebc8 <mpfr_free_pool@@Base+0x2378>
   36e0c:	ldr	w1, [sp, #120]
   36e10:	mov	x0, x25
   36e14:	bl	be40 <mpfr_set_d@plt>
   36e18:	mov	w19, w0
   36e1c:	mov	w0, w19
   36e20:	ldp	x19, x20, [sp, #16]
   36e24:	ldp	x23, x24, [sp, #48]
   36e28:	ldp	x25, x26, [sp, #64]
   36e2c:	ldp	x29, x30, [sp], #192
   36e30:	ret
   36e34:	eor	x1, x19, #0x8000000000000000
   36e38:	b	37070 <mpfr_set_ld@@Base+0x410>
   36e3c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36e40:	add	x0, x0, #0x3f0
   36e44:	ldr	q1, [x0]
   36e48:	str	x20, [sp, #96]
   36e4c:	str	x19, [sp, #104]
   36e50:	ldr	q0, [sp, #96]
   36e54:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   36e58:	str	q0, [sp, #96]
   36e5c:	ldr	x20, [sp, #96]
   36e60:	ldr	x19, [sp, #104]
   36e64:	add	w21, w21, #0x2, lsl #12
   36e68:	add	x0, sp, #0xa0
   36e6c:	mov	w3, #0x1                   	// #1
   36e70:	mov	x2, #0x2000                	// #8192
   36e74:	mov	x1, x0
   36e78:	bl	c420 <mpfr_div_2si@plt>
   36e7c:	b	37090 <mpfr_set_ld@@Base+0x430>
   36e80:	eor	x1, x19, #0x8000000000000000
   36e84:	b	370b0 <mpfr_set_ld@@Base+0x450>
   36e88:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36e8c:	add	x0, x0, #0x410
   36e90:	ldr	q1, [x0]
   36e94:	str	x20, [sp, #96]
   36e98:	str	x19, [sp, #104]
   36e9c:	ldr	q0, [sp, #96]
   36ea0:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   36ea4:	str	q0, [sp, #96]
   36ea8:	ldr	x20, [sp, #96]
   36eac:	ldr	x19, [sp, #104]
   36eb0:	add	w21, w21, #0x1, lsl #12
   36eb4:	add	x0, sp, #0xa0
   36eb8:	mov	w3, #0x1                   	// #1
   36ebc:	mov	x2, #0x1000                	// #4096
   36ec0:	mov	x1, x0
   36ec4:	bl	c420 <mpfr_div_2si@plt>
   36ec8:	b	370d0 <mpfr_set_ld@@Base+0x470>
   36ecc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36ed0:	add	x0, x0, #0x420
   36ed4:	ldr	q1, [x0]
   36ed8:	str	x20, [sp, #96]
   36edc:	str	x19, [sp, #104]
   36ee0:	ldr	q0, [sp, #96]
   36ee4:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   36ee8:	cmp	w0, #0x0
   36eec:	b.gt	36f30 <mpfr_set_ld@@Base+0x2d0>
   36ef0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36ef4:	add	x0, x0, #0x430
   36ef8:	ldr	q1, [x0]
   36efc:	str	x20, [sp, #96]
   36f00:	str	x19, [sp, #104]
   36f04:	ldr	q0, [sp, #96]
   36f08:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   36f0c:	str	q0, [sp, #96]
   36f10:	ldr	x20, [sp, #96]
   36f14:	ldr	x19, [sp, #104]
   36f18:	add	w21, w21, #0x800
   36f1c:	add	x0, sp, #0xa0
   36f20:	mov	w3, #0x1                   	// #1
   36f24:	mov	x2, #0x800                 	// #2048
   36f28:	mov	x1, x0
   36f2c:	bl	c420 <mpfr_div_2si@plt>
   36f30:	movi	v1.2d, #0x0
   36f34:	str	x20, [sp, #96]
   36f38:	str	x19, [sp, #104]
   36f3c:	ldr	q0, [sp, #96]
   36f40:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   36f44:	tbz	w0, #31, 37688 <mpfr_set_ld@@Base+0xa28>
   36f48:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36f4c:	add	x0, x0, #0x440
   36f50:	ldr	q1, [x0]
   36f54:	str	x20, [sp, #96]
   36f58:	str	x19, [sp, #104]
   36f5c:	ldr	q0, [sp, #96]
   36f60:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   36f64:	cmp	w0, #0x0
   36f68:	b.gt	36fb4 <mpfr_set_ld@@Base+0x354>
   36f6c:	mov	x23, x20
   36f70:	mov	x22, x19
   36f74:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36f78:	add	x0, x0, #0x450
   36f7c:	ldr	q1, [x0]
   36f80:	str	x23, [sp, #96]
   36f84:	str	x22, [sp, #104]
   36f88:	ldr	q0, [sp, #96]
   36f8c:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   36f90:	str	q0, [sp, #96]
   36f94:	ldr	x20, [sp, #96]
   36f98:	ldr	x19, [sp, #104]
   36f9c:	add	w21, w21, #0x400
   36fa0:	add	x0, sp, #0xa0
   36fa4:	mov	w3, #0x1                   	// #1
   36fa8:	mov	x2, #0x400                 	// #1024
   36fac:	mov	x1, x0
   36fb0:	bl	c420 <mpfr_div_2si@plt>
   36fb4:	movi	v1.2d, #0x0
   36fb8:	str	x20, [sp, #96]
   36fbc:	str	x19, [sp, #104]
   36fc0:	ldr	q0, [sp, #96]
   36fc4:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   36fc8:	tbz	w0, #31, 3713c <mpfr_set_ld@@Base+0x4dc>
   36fcc:	mov	x23, x20
   36fd0:	eor	x22, x19, #0x8000000000000000
   36fd4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   36fd8:	add	x0, x0, #0x460
   36fdc:	ldr	q1, [x0]
   36fe0:	str	x23, [sp, #96]
   36fe4:	str	x22, [sp, #104]
   36fe8:	ldr	q0, [sp, #96]
   36fec:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   36ff0:	tbz	w0, #31, 37148 <mpfr_set_ld@@Base+0x4e8>
   36ff4:	movi	v1.2d, #0x0
   36ff8:	str	x20, [sp, #96]
   36ffc:	str	x19, [sp, #104]
   37000:	ldr	q0, [sp, #96]
   37004:	bl	5d420 <mpfr_free_pool@@Base+0xbd0>
   37008:	cbz	w0, 375bc <mpfr_set_ld@@Base+0x95c>
   3700c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37010:	add	x0, x0, #0x3c0
   37014:	ldr	q1, [x0]
   37018:	str	x20, [sp, #96]
   3701c:	str	x19, [sp, #104]
   37020:	ldr	q0, [sp, #96]
   37024:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37028:	cmp	w0, #0x0
   3702c:	b.gt	37050 <mpfr_set_ld@@Base+0x3f0>
   37030:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37034:	add	x0, x0, #0x3d0
   37038:	ldr	q1, [x0]
   3703c:	str	x20, [sp, #96]
   37040:	str	x19, [sp, #104]
   37044:	ldr	q0, [sp, #96]
   37048:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   3704c:	tbz	w0, #31, 3718c <mpfr_set_ld@@Base+0x52c>
   37050:	movi	v1.2d, #0x0
   37054:	str	x20, [sp, #96]
   37058:	str	x19, [sp, #104]
   3705c:	ldr	q0, [sp, #96]
   37060:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37064:	mov	x2, x20
   37068:	mov	x1, x19
   3706c:	tbnz	w0, #31, 36e34 <mpfr_set_ld@@Base+0x1d4>
   37070:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37074:	add	x0, x0, #0x3e0
   37078:	ldr	q1, [x0]
   3707c:	str	x2, [sp, #96]
   37080:	str	x1, [sp, #104]
   37084:	ldr	q0, [sp, #96]
   37088:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   3708c:	tbz	w0, #31, 36e3c <mpfr_set_ld@@Base+0x1dc>
   37090:	movi	v1.2d, #0x0
   37094:	str	x20, [sp, #96]
   37098:	str	x19, [sp, #104]
   3709c:	ldr	q0, [sp, #96]
   370a0:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   370a4:	mov	x2, x20
   370a8:	mov	x1, x19
   370ac:	tbnz	w0, #31, 36e80 <mpfr_set_ld@@Base+0x220>
   370b0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   370b4:	add	x0, x0, #0x400
   370b8:	ldr	q1, [x0]
   370bc:	str	x2, [sp, #96]
   370c0:	str	x1, [sp, #104]
   370c4:	ldr	q0, [sp, #96]
   370c8:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   370cc:	tbz	w0, #31, 36e88 <mpfr_set_ld@@Base+0x228>
   370d0:	movi	v1.2d, #0x0
   370d4:	str	x20, [sp, #96]
   370d8:	str	x19, [sp, #104]
   370dc:	ldr	q0, [sp, #96]
   370e0:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   370e4:	tbnz	w0, #31, 36ecc <mpfr_set_ld@@Base+0x26c>
   370e8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   370ec:	add	x0, x0, #0x4a0
   370f0:	ldr	q1, [x0]
   370f4:	str	x20, [sp, #96]
   370f8:	str	x19, [sp, #104]
   370fc:	ldr	q0, [sp, #96]
   37100:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37104:	tbz	w0, #31, 36ef0 <mpfr_set_ld@@Base+0x290>
   37108:	mov	x23, x20
   3710c:	mov	x22, x19
   37110:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37114:	add	x0, x0, #0x4c0
   37118:	ldr	q1, [x0]
   3711c:	str	x23, [sp, #96]
   37120:	str	x22, [sp, #104]
   37124:	ldr	q0, [sp, #96]
   37128:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   3712c:	tbz	w0, #31, 36f74 <mpfr_set_ld@@Base+0x314>
   37130:	mov	x20, x23
   37134:	mov	x19, x22
   37138:	b	36fd4 <mpfr_set_ld@@Base+0x374>
   3713c:	mov	x23, x20
   37140:	mov	x22, x19
   37144:	b	36fd4 <mpfr_set_ld@@Base+0x374>
   37148:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3714c:	add	x0, x0, #0x470
   37150:	ldr	q1, [x0]
   37154:	str	x20, [sp, #96]
   37158:	str	x19, [sp, #104]
   3715c:	ldr	q0, [sp, #96]
   37160:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   37164:	str	q0, [sp, #96]
   37168:	ldr	x20, [sp, #96]
   3716c:	ldr	x19, [sp, #104]
   37170:	add	w21, w21, #0x200
   37174:	add	x0, sp, #0xa0
   37178:	mov	w3, #0x1                   	// #1
   3717c:	mov	x2, #0x200                 	// #512
   37180:	mov	x1, x0
   37184:	bl	c420 <mpfr_div_2si@plt>
   37188:	b	36ff4 <mpfr_set_ld@@Base+0x394>
   3718c:	movi	v1.2d, #0x0
   37190:	str	x20, [sp, #96]
   37194:	str	x19, [sp, #104]
   37198:	ldr	q0, [sp, #96]
   3719c:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   371a0:	mov	x23, x20
   371a4:	mov	x22, x19
   371a8:	tbnz	w0, #31, 37288 <mpfr_set_ld@@Base+0x628>
   371ac:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   371b0:	add	x0, x0, #0x450
   371b4:	ldr	q1, [x0]
   371b8:	str	x23, [sp, #96]
   371bc:	str	x22, [sp, #104]
   371c0:	ldr	q0, [sp, #96]
   371c4:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   371c8:	tbz	w0, #31, 374c8 <mpfr_set_ld@@Base+0x868>
   371cc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   371d0:	add	x0, x0, #0x3f0
   371d4:	ldr	q1, [x0]
   371d8:	str	x23, [sp, #96]
   371dc:	str	x22, [sp, #104]
   371e0:	ldr	q0, [sp, #96]
   371e4:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   371e8:	cmp	w0, #0x0
   371ec:	b.le	37290 <mpfr_set_ld@@Base+0x630>
   371f0:	movi	v1.2d, #0x0
   371f4:	str	x20, [sp, #96]
   371f8:	str	x19, [sp, #104]
   371fc:	ldr	q0, [sp, #96]
   37200:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37204:	tbnz	w0, #31, 372d4 <mpfr_set_ld@@Base+0x674>
   37208:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3720c:	add	x0, x0, #0x410
   37210:	ldr	q1, [x0]
   37214:	str	x20, [sp, #96]
   37218:	str	x19, [sp, #104]
   3721c:	ldr	q0, [sp, #96]
   37220:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37224:	cmp	w0, #0x0
   37228:	b.le	372f4 <mpfr_set_ld@@Base+0x694>
   3722c:	mov	x22, x20
   37230:	mov	x23, x19
   37234:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37238:	add	x0, x0, #0x430
   3723c:	ldr	q1, [x0]
   37240:	str	x20, [sp, #96]
   37244:	str	x19, [sp, #104]
   37248:	ldr	q0, [sp, #96]
   3724c:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37250:	cmp	w0, #0x0
   37254:	b.le	37374 <mpfr_set_ld@@Base+0x714>
   37258:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3725c:	add	x0, x0, #0x450
   37260:	ldr	q1, [x0]
   37264:	str	x22, [sp, #96]
   37268:	str	x23, [sp, #104]
   3726c:	ldr	q0, [sp, #96]
   37270:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37274:	cmp	w0, #0x0
   37278:	b.le	373f4 <mpfr_set_ld@@Base+0x794>
   3727c:	mov	x20, x22
   37280:	mov	x19, x23
   37284:	b	37454 <mpfr_set_ld@@Base+0x7f4>
   37288:	eor	x22, x19, #0x8000000000000000
   3728c:	b	371ac <mpfr_set_ld@@Base+0x54c>
   37290:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37294:	add	x0, x0, #0x3e0
   37298:	ldr	q1, [x0]
   3729c:	str	x20, [sp, #96]
   372a0:	str	x19, [sp, #104]
   372a4:	ldr	q0, [sp, #96]
   372a8:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   372ac:	str	q0, [sp, #96]
   372b0:	ldr	x20, [sp, #96]
   372b4:	ldr	x19, [sp, #104]
   372b8:	sub	w21, w21, #0x2, lsl #12
   372bc:	add	x0, sp, #0xa0
   372c0:	mov	w3, #0x1                   	// #1
   372c4:	mov	x2, #0x2000                	// #8192
   372c8:	mov	x1, x0
   372cc:	bl	bb90 <mpfr_mul_2si@plt>
   372d0:	b	371f0 <mpfr_set_ld@@Base+0x590>
   372d4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   372d8:	add	x0, x0, #0x480
   372dc:	ldr	q1, [x0]
   372e0:	str	x20, [sp, #96]
   372e4:	str	x19, [sp, #104]
   372e8:	ldr	q0, [sp, #96]
   372ec:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   372f0:	tbnz	w0, #31, 37334 <mpfr_set_ld@@Base+0x6d4>
   372f4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   372f8:	add	x0, x0, #0x400
   372fc:	ldr	q1, [x0]
   37300:	str	x20, [sp, #96]
   37304:	str	x19, [sp, #104]
   37308:	ldr	q0, [sp, #96]
   3730c:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   37310:	str	q0, [sp, #96]
   37314:	ldr	x20, [sp, #96]
   37318:	ldr	x19, [sp, #104]
   3731c:	sub	w21, w21, #0x1, lsl #12
   37320:	add	x0, sp, #0xa0
   37324:	mov	w3, #0x1                   	// #1
   37328:	mov	x2, #0x1000                	// #4096
   3732c:	mov	x1, x0
   37330:	bl	bb90 <mpfr_mul_2si@plt>
   37334:	movi	v1.2d, #0x0
   37338:	str	x20, [sp, #96]
   3733c:	str	x19, [sp, #104]
   37340:	ldr	q0, [sp, #96]
   37344:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37348:	tbz	w0, #31, 376a0 <mpfr_set_ld@@Base+0xa40>
   3734c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37350:	add	x0, x0, #0x490
   37354:	ldr	q1, [x0]
   37358:	str	x20, [sp, #96]
   3735c:	str	x19, [sp, #104]
   37360:	ldr	q0, [sp, #96]
   37364:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37368:	tbnz	w0, #31, 373b4 <mpfr_set_ld@@Base+0x754>
   3736c:	mov	x22, x20
   37370:	mov	x23, x19
   37374:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37378:	add	x0, x0, #0x4a0
   3737c:	ldr	q1, [x0]
   37380:	str	x22, [sp, #96]
   37384:	str	x23, [sp, #104]
   37388:	ldr	q0, [sp, #96]
   3738c:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   37390:	str	q0, [sp, #96]
   37394:	ldr	x20, [sp, #96]
   37398:	ldr	x19, [sp, #104]
   3739c:	sub	w21, w21, #0x800
   373a0:	add	x0, sp, #0xa0
   373a4:	mov	w3, #0x1                   	// #1
   373a8:	mov	x2, #0x800                 	// #2048
   373ac:	mov	x1, x0
   373b0:	bl	bb90 <mpfr_mul_2si@plt>
   373b4:	movi	v1.2d, #0x0
   373b8:	str	x20, [sp, #96]
   373bc:	str	x19, [sp, #104]
   373c0:	ldr	q0, [sp, #96]
   373c4:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   373c8:	tbz	w0, #31, 37694 <mpfr_set_ld@@Base+0xa34>
   373cc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   373d0:	add	x0, x0, #0x4b0
   373d4:	ldr	q1, [x0]
   373d8:	str	x20, [sp, #96]
   373dc:	str	x19, [sp, #104]
   373e0:	ldr	q0, [sp, #96]
   373e4:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   373e8:	tbnz	w0, #31, 37434 <mpfr_set_ld@@Base+0x7d4>
   373ec:	mov	x22, x20
   373f0:	mov	x23, x19
   373f4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   373f8:	add	x0, x0, #0x4c0
   373fc:	ldr	q1, [x0]
   37400:	str	x22, [sp, #96]
   37404:	str	x23, [sp, #104]
   37408:	ldr	q0, [sp, #96]
   3740c:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   37410:	str	q0, [sp, #96]
   37414:	ldr	x20, [sp, #96]
   37418:	ldr	x19, [sp, #104]
   3741c:	sub	w21, w21, #0x400
   37420:	add	x0, sp, #0xa0
   37424:	mov	w3, #0x1                   	// #1
   37428:	mov	x2, #0x400                 	// #1024
   3742c:	mov	x1, x0
   37430:	bl	bb90 <mpfr_mul_2si@plt>
   37434:	movi	v1.2d, #0x0
   37438:	str	x20, [sp, #96]
   3743c:	str	x19, [sp, #104]
   37440:	ldr	q0, [sp, #96]
   37444:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37448:	tbz	w0, #31, 374bc <mpfr_set_ld@@Base+0x85c>
   3744c:	mov	x22, x20
   37450:	eor	x23, x19, #0x8000000000000000
   37454:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37458:	add	x0, x0, #0x470
   3745c:	ldr	q1, [x0]
   37460:	str	x22, [sp, #96]
   37464:	str	x23, [sp, #104]
   37468:	ldr	q0, [sp, #96]
   3746c:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37470:	cmp	w0, #0x0
   37474:	b.gt	36ff4 <mpfr_set_ld@@Base+0x394>
   37478:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3747c:	add	x0, x0, #0x460
   37480:	ldr	q1, [x0]
   37484:	str	x20, [sp, #96]
   37488:	str	x19, [sp, #104]
   3748c:	ldr	q0, [sp, #96]
   37490:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   37494:	str	q0, [sp, #96]
   37498:	ldr	x20, [sp, #96]
   3749c:	ldr	x19, [sp, #104]
   374a0:	sub	w21, w21, #0x200
   374a4:	add	x0, sp, #0xa0
   374a8:	mov	w3, #0x1                   	// #1
   374ac:	mov	x2, #0x200                 	// #512
   374b0:	mov	x1, x0
   374b4:	bl	bb90 <mpfr_mul_2si@plt>
   374b8:	b	36ff4 <mpfr_set_ld@@Base+0x394>
   374bc:	mov	x22, x20
   374c0:	mov	x23, x19
   374c4:	b	37454 <mpfr_set_ld@@Base+0x7f4>
   374c8:	str	x20, [sp, #96]
   374cc:	str	x19, [sp, #104]
   374d0:	ldr	q0, [sp, #96]
   374d4:	bl	5ebc8 <mpfr_free_pool@@Base+0x2378>
   374d8:	add	x22, sp, #0x80
   374dc:	mov	w1, #0x1                   	// #1
   374e0:	mov	x0, x22
   374e4:	bl	be40 <mpfr_set_d@plt>
   374e8:	add	x0, sp, #0xa0
   374ec:	mov	w3, #0x1                   	// #1
   374f0:	mov	x2, x22
   374f4:	mov	x1, x0
   374f8:	bl	c1a0 <mpfr_add@plt>
   374fc:	cbnz	w0, 37548 <mpfr_set_ld@@Base+0x8e8>
   37500:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37504:	ldr	x1, [x0, #2640]
   37508:	add	x0, x0, #0xa50
   3750c:	blr	x1
   37510:	mrs	x1, tpidr_el0
   37514:	ldr	w1, [x1, x0]
   37518:	add	x0, sp, #0x80
   3751c:	bl	bd30 <mpfr_get_d@plt>
   37520:	bl	5ea78 <mpfr_free_pool@@Base+0x2228>
   37524:	mov	v1.16b, v0.16b
   37528:	str	x20, [sp, #96]
   3752c:	str	x19, [sp, #104]
   37530:	ldr	q0, [sp, #96]
   37534:	bl	5df98 <mpfr_free_pool@@Base+0x1748>
   37538:	str	q0, [sp, #96]
   3753c:	ldr	x20, [sp, #96]
   37540:	ldr	x19, [sp, #104]
   37544:	b	36ff4 <mpfr_set_ld@@Base+0x394>
   37548:	add	x0, sp, #0xa0
   3754c:	bl	cb90 <mpfr_number_p@plt>
   37550:	cbz	w0, 375bc <mpfr_set_ld@@Base+0x95c>
   37554:	ldr	x0, [x25]
   37558:	add	x1, x0, #0x1
   3755c:	ldr	x2, [sp, #160]
   37560:	cmp	x2, x1
   37564:	b.eq	37574 <mpfr_set_ld@@Base+0x914>  // b.none
   37568:	add	x0, sp, #0xa0
   3756c:	bl	bed0 <mpfr_set_prec@plt>
   37570:	b	36d6c <mpfr_set_ld@@Base+0x10c>
   37574:	ldr	x2, [sp, #184]
   37578:	mvn	w0, w0
   3757c:	mov	x1, #0x1                   	// #1
   37580:	lsl	x0, x1, x0
   37584:	ldr	w1, [sp, #120]
   37588:	cbnz	w1, 375ac <mpfr_set_ld@@Base+0x94c>
   3758c:	sxtw	x1, w0
   37590:	ldr	x3, [x2]
   37594:	and	x1, x1, x3
   37598:	ldrsw	x3, [sp, #168]
   3759c:	cmp	x1, x3, lsr #63
   375a0:	cset	w1, eq  // eq = none
   375a4:	add	w1, w1, #0x2
   375a8:	str	w1, [sp, #120]
   375ac:	sxtw	x0, w0
   375b0:	ldr	x1, [x2]
   375b4:	orr	x0, x1, x0
   375b8:	str	x0, [x2]
   375bc:	add	x20, sp, #0xa0
   375c0:	ldr	w3, [sp, #120]
   375c4:	sxtw	x2, w21
   375c8:	mov	x1, x20
   375cc:	mov	x0, x25
   375d0:	bl	bb90 <mpfr_mul_2si@plt>
   375d4:	mov	w19, w0
   375d8:	mov	x0, x20
   375dc:	bl	c070 <mpfr_clear@plt>
   375e0:	add	x0, sp, #0x80
   375e4:	bl	c070 <mpfr_clear@plt>
   375e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   375ec:	ldr	x1, [x0, #2576]
   375f0:	add	x0, x0, #0xa10
   375f4:	blr	x1
   375f8:	mrs	x1, tpidr_el0
   375fc:	ldr	w2, [sp, #124]
   37600:	str	w2, [x1, x0]
   37604:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37608:	ldr	x3, [x0, #2512]
   3760c:	add	x0, x0, #0x9d0
   37610:	blr	x3
   37614:	str	x27, [x1, x0]
   37618:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3761c:	ldr	x3, [x0, #2544]
   37620:	add	x0, x0, #0x9f0
   37624:	blr	x3
   37628:	str	x28, [x1, x0]
   3762c:	ldr	x0, [x25, #16]
   37630:	cmp	x28, x0
   37634:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   37638:	b.gt	37668 <mpfr_set_ld@@Base+0xa08>
   3763c:	cbz	w19, 376ac <mpfr_set_ld@@Base+0xa4c>
   37640:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37644:	ldr	x1, [x0, #2576]
   37648:	add	x0, x0, #0xa10
   3764c:	blr	x1
   37650:	orr	w1, w2, #0x8
   37654:	mrs	x2, tpidr_el0
   37658:	str	w1, [x2, x0]
   3765c:	ldp	x21, x22, [sp, #32]
   37660:	ldp	x27, x28, [sp, #80]
   37664:	b	36e1c <mpfr_set_ld@@Base+0x1bc>
   37668:	ldr	w2, [sp, #120]
   3766c:	mov	w1, w19
   37670:	mov	x0, x25
   37674:	bl	cb30 <mpfr_check_range@plt>
   37678:	mov	w19, w0
   3767c:	ldp	x21, x22, [sp, #32]
   37680:	ldp	x27, x28, [sp, #80]
   37684:	b	36e1c <mpfr_set_ld@@Base+0x1bc>
   37688:	mov	x23, x20
   3768c:	mov	x22, x19
   37690:	b	37110 <mpfr_set_ld@@Base+0x4b0>
   37694:	mov	x22, x20
   37698:	mov	x23, x19
   3769c:	b	37258 <mpfr_set_ld@@Base+0x5f8>
   376a0:	mov	x22, x20
   376a4:	mov	x23, x19
   376a8:	b	37234 <mpfr_set_ld@@Base+0x5d4>
   376ac:	ldp	x21, x22, [sp, #32]
   376b0:	ldp	x27, x28, [sp, #80]
   376b4:	b	36e1c <mpfr_set_ld@@Base+0x1bc>

00000000000376b8 <mpfr_get_ld@@Base>:
   376b8:	stp	x29, x30, [sp, #-208]!
   376bc:	mov	x29, sp
   376c0:	stp	x19, x20, [sp, #16]
   376c4:	stp	x21, x22, [sp, #32]
   376c8:	mov	x19, x0
   376cc:	mov	w21, w1
   376d0:	ldr	x1, [x0, #16]
   376d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   376d8:	cmp	x1, x0
   376dc:	b.le	378a0 <mpfr_get_ld@@Base+0x1e8>
   376e0:	stp	x23, x24, [sp, #48]
   376e4:	stp	x25, x26, [sp, #64]
   376e8:	stp	x27, x28, [sp, #80]
   376ec:	str	d8, [sp, #96]
   376f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   376f4:	ldr	x1, [x0, #2576]
   376f8:	add	x0, x0, #0xa10
   376fc:	blr	x1
   37700:	mrs	x2, tpidr_el0
   37704:	ldr	w27, [x2, x0]
   37708:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3770c:	ldr	x1, [x0, #2512]
   37710:	add	x0, x0, #0x9d0
   37714:	blr	x1
   37718:	add	x1, x2, x0
   3771c:	ldr	x26, [x2, x0]
   37720:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37724:	ldr	x3, [x0, #2544]
   37728:	add	x0, x0, #0x9f0
   3772c:	blr	x3
   37730:	ldr	x25, [x2, x0]
   37734:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   37738:	str	x3, [x1]
   3773c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   37740:	str	x1, [x2, x0]
   37744:	add	x20, sp, #0x90
   37748:	mov	x1, #0x71                  	// #113
   3774c:	mov	x0, x20
   37750:	bl	ca80 <mpfr_init2@plt>
   37754:	mov	x1, #0x71                  	// #113
   37758:	add	x0, sp, #0xb0
   3775c:	bl	ca80 <mpfr_init2@plt>
   37760:	ldr	w3, [x19, #8]
   37764:	mov	w2, w21
   37768:	mov	x1, x19
   3776c:	mov	x0, x20
   37770:	bl	c6a0 <mpfr_set4@plt>
   37774:	ldr	x21, [sp, #160]
   37778:	ldr	w28, [sp, #152]
   3777c:	str	xzr, [sp, #160]
   37780:	mov	w0, #0x1                   	// #1
   37784:	str	w0, [sp, #152]
   37788:	mov	x20, #0x0                   	// #0
   3778c:	mov	x19, #0x0                   	// #0
   37790:	add	x22, sp, #0x90
   37794:	add	x23, sp, #0xb0
   37798:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   3779c:	mov	w1, #0x0                   	// #0
   377a0:	mov	x0, x22
   377a4:	bl	bd30 <mpfr_get_d@plt>
   377a8:	fmov	d8, d0
   377ac:	bl	5ea78 <mpfr_free_pool@@Base+0x2228>
   377b0:	mov	v1.16b, v0.16b
   377b4:	str	x20, [sp, #112]
   377b8:	str	x19, [sp, #120]
   377bc:	ldr	q0, [sp, #112]
   377c0:	bl	5c8f8 <mpfr_free_pool@@Base+0xa8>
   377c4:	str	q0, [sp, #112]
   377c8:	ldr	x20, [sp, #112]
   377cc:	ldr	x19, [sp, #120]
   377d0:	mov	w1, #0x0                   	// #0
   377d4:	fmov	d0, d8
   377d8:	mov	x0, x23
   377dc:	bl	be40 <mpfr_set_d@plt>
   377e0:	mov	w3, #0x0                   	// #0
   377e4:	mov	x2, x23
   377e8:	mov	x1, x22
   377ec:	mov	x0, x22
   377f0:	bl	bb70 <mpfr_sub@plt>
   377f4:	ldr	x0, [sp, #160]
   377f8:	cmp	x0, x24
   377fc:	b.ne	3779c <mpfr_get_ld@@Base+0xe4>  // b.any
   37800:	add	x0, sp, #0xb0
   37804:	bl	c070 <mpfr_clear@plt>
   37808:	add	x0, sp, #0x90
   3780c:	bl	c070 <mpfr_clear@plt>
   37810:	cbz	x21, 37900 <mpfr_get_ld@@Base+0x248>
   37814:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37818:	add	x0, x0, #0x4e0
   3781c:	ldr	q1, [x0]
   37820:	str	x20, [sp, #112]
   37824:	str	x19, [sp, #120]
   37828:	ldr	q0, [sp, #112]
   3782c:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37830:	tbz	w0, #31, 37870 <mpfr_get_ld@@Base+0x1b8>
   37834:	str	x20, [sp, #112]
   37838:	str	x19, [sp, #120]
   3783c:	ldr	q1, [sp, #112]
   37840:	ldr	q0, [sp, #112]
   37844:	bl	5c8f8 <mpfr_free_pool@@Base+0xa8>
   37848:	str	q0, [sp, #112]
   3784c:	ldr	x20, [sp, #112]
   37850:	ldr	x19, [sp, #120]
   37854:	sub	x21, x21, #0x1
   37858:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3785c:	add	x0, x0, #0x4e0
   37860:	ldr	q1, [x0]
   37864:	ldr	q0, [sp, #112]
   37868:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   3786c:	tbnz	w0, #31, 37834 <mpfr_get_ld@@Base+0x17c>
   37870:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37874:	add	x0, x0, #0x4f0
   37878:	ldr	q0, [x0]
   3787c:	str	q0, [sp, #112]
   37880:	cmp	x21, #0x0
   37884:	b.gt	378d8 <mpfr_get_ld@@Base+0x220>
   37888:	neg	x21, x21
   3788c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37890:	add	x0, x0, #0x500
   37894:	ldr	q0, [x0]
   37898:	str	q0, [sp, #112]
   3789c:	b	378d8 <mpfr_get_ld@@Base+0x220>
   378a0:	mov	w1, w21
   378a4:	mov	x0, x19
   378a8:	bl	bd30 <mpfr_get_d@plt>
   378ac:	bl	5ea78 <mpfr_free_pool@@Base+0x2228>
   378b0:	str	q0, [sp, #112]
   378b4:	ldr	x20, [sp, #112]
   378b8:	ldr	x19, [sp, #120]
   378bc:	b	3795c <mpfr_get_ld@@Base+0x2a4>
   378c0:	asr	x21, x21, #1
   378c4:	cbz	x21, 37900 <mpfr_get_ld@@Base+0x248>
   378c8:	ldr	q0, [sp, #112]
   378cc:	mov	v1.16b, v0.16b
   378d0:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   378d4:	str	q0, [sp, #112]
   378d8:	tbz	w21, #0, 378c0 <mpfr_get_ld@@Base+0x208>
   378dc:	ldr	q1, [sp, #112]
   378e0:	str	x20, [sp, #128]
   378e4:	str	x19, [sp, #136]
   378e8:	ldr	q0, [sp, #128]
   378ec:	bl	5d7b0 <mpfr_free_pool@@Base+0xf60>
   378f0:	str	q0, [sp, #128]
   378f4:	ldr	x20, [sp, #128]
   378f8:	ldr	x19, [sp, #136]
   378fc:	b	378c0 <mpfr_get_ld@@Base+0x208>
   37900:	eor	x0, x19, #0x8000000000000000
   37904:	cmp	w28, #0x0
   37908:	csel	x19, x0, x19, lt  // lt = tstop
   3790c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37910:	ldr	x1, [x0, #2576]
   37914:	add	x0, x0, #0xa10
   37918:	blr	x1
   3791c:	mrs	x1, tpidr_el0
   37920:	str	w27, [x1, x0]
   37924:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37928:	ldr	x2, [x0, #2512]
   3792c:	add	x0, x0, #0x9d0
   37930:	blr	x2
   37934:	str	x26, [x1, x0]
   37938:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3793c:	ldr	x2, [x0, #2544]
   37940:	add	x0, x0, #0x9f0
   37944:	blr	x2
   37948:	str	x25, [x1, x0]
   3794c:	ldp	x23, x24, [sp, #48]
   37950:	ldp	x25, x26, [sp, #64]
   37954:	ldp	x27, x28, [sp, #80]
   37958:	ldr	d8, [sp, #96]
   3795c:	str	x20, [sp, #112]
   37960:	str	x19, [sp, #120]
   37964:	ldr	q0, [sp, #112]
   37968:	ldp	x19, x20, [sp, #16]
   3796c:	ldp	x21, x22, [sp, #32]
   37970:	ldp	x29, x30, [sp], #208
   37974:	ret

0000000000037978 <mpfr_get_ld_2exp@@Base>:
   37978:	stp	x29, x30, [sp, #-80]!
   3797c:	mov	x29, sp
   37980:	stp	x19, x20, [sp, #16]
   37984:	mov	x20, x0
   37988:	mov	x19, x1
   3798c:	mov	w1, w2
   37990:	ldr	x2, [x19, #16]
   37994:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   37998:	cmp	x2, x0
   3799c:	b.le	37a04 <mpfr_get_ld_2exp@@Base+0x8c>
   379a0:	ldr	x0, [x19]
   379a4:	str	x0, [sp, #48]
   379a8:	ldr	w0, [x19, #8]
   379ac:	str	w0, [sp, #56]
   379b0:	str	xzr, [sp, #64]
   379b4:	ldr	x0, [x19, #24]
   379b8:	str	x0, [sp, #72]
   379bc:	add	x0, sp, #0x30
   379c0:	bl	c580 <mpfr_get_ld@plt>
   379c4:	str	q0, [sp, #32]
   379c8:	ldr	x19, [x19, #16]
   379cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   379d0:	cmp	x19, x0
   379d4:	b.le	37bf4 <mpfr_get_ld_2exp@@Base+0x27c>
   379d8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   379dc:	add	x0, x0, #0x4e0
   379e0:	ldr	q1, [x0]
   379e4:	bl	5d420 <mpfr_free_pool@@Base+0xbd0>
   379e8:	cbnz	w0, 37a20 <mpfr_get_ld_2exp@@Base+0xa8>
   379ec:	add	x19, x19, #0x1
   379f0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   379f4:	add	x0, x0, #0x500
   379f8:	ldr	q0, [x0]
   379fc:	str	q0, [sp, #32]
   37a00:	b	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37a04:	mov	w2, w1
   37a08:	mov	x1, x19
   37a0c:	mov	x0, x20
   37a10:	bl	cbd0 <mpfr_get_d_2exp@plt>
   37a14:	bl	5ea78 <mpfr_free_pool@@Base+0x2228>
   37a18:	str	q0, [sp, #32]
   37a1c:	b	37bfc <mpfr_get_ld_2exp@@Base+0x284>
   37a20:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37a24:	add	x0, x0, #0x510
   37a28:	ldr	q1, [x0]
   37a2c:	ldr	q0, [sp, #32]
   37a30:	bl	5d420 <mpfr_free_pool@@Base+0xbd0>
   37a34:	cbnz	w0, 37a50 <mpfr_get_ld_2exp@@Base+0xd8>
   37a38:	add	x19, x19, #0x1
   37a3c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37a40:	add	x0, x0, #0x520
   37a44:	ldr	q0, [x0]
   37a48:	str	q0, [sp, #32]
   37a4c:	b	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37a50:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37a54:	add	x0, x0, #0x500
   37a58:	ldr	q1, [x0]
   37a5c:	ldr	q0, [sp, #32]
   37a60:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37a64:	tbnz	w0, #31, 37ad4 <mpfr_get_ld_2exp@@Base+0x15c>
   37a68:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37a6c:	add	x0, x0, #0x4e0
   37a70:	ldr	q1, [x0]
   37a74:	ldr	q0, [sp, #32]
   37a78:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37a7c:	tbnz	w0, #31, 37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37a80:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37a84:	add	x0, x0, #0x520
   37a88:	ldr	q1, [x0]
   37a8c:	ldr	q0, [sp, #32]
   37a90:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37a94:	cmp	w0, #0x0
   37a98:	b.gt	37c0c <mpfr_get_ld_2exp@@Base+0x294>
   37a9c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37aa0:	add	x0, x0, #0x510
   37aa4:	ldr	q1, [x0]
   37aa8:	ldr	q0, [sp, #32]
   37aac:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37ab0:	cmp	w0, #0x0
   37ab4:	b.gt	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37ab8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   37abc:	add	x2, x2, #0x3c0
   37ac0:	mov	w1, #0x10e                 	// #270
   37ac4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37ac8:	add	x0, x0, #0x4d0
   37acc:	bl	cb40 <mpfr_assert_fail@plt>
   37ad0:	b	37c24 <mpfr_get_ld_2exp@@Base+0x2ac>
   37ad4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37ad8:	add	x0, x0, #0x520
   37adc:	ldr	q1, [x0]
   37ae0:	ldr	q0, [sp, #32]
   37ae4:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37ae8:	cmp	w0, #0x0
   37aec:	b.le	37b70 <mpfr_get_ld_2exp@@Base+0x1f8>
   37af0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   37af4:	add	x2, x2, #0x3c0
   37af8:	mov	w1, #0x10e                 	// #270
   37afc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b00:	add	x0, x0, #0x4d0
   37b04:	bl	cb40 <mpfr_assert_fail@plt>
   37b08:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b0c:	add	x0, x0, #0x500
   37b10:	ldr	q1, [x0]
   37b14:	ldr	q0, [sp, #32]
   37b18:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37b1c:	tbz	w0, #31, 37c24 <mpfr_get_ld_2exp@@Base+0x2ac>
   37b20:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b24:	add	x0, x0, #0x520
   37b28:	ldr	q1, [x0]
   37b2c:	ldr	q0, [sp, #32]
   37b30:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37b34:	cmp	w0, #0x0
   37b38:	b.le	37bbc <mpfr_get_ld_2exp@@Base+0x244>
   37b3c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b40:	add	x0, x0, #0x500
   37b44:	ldr	q1, [x0]
   37b48:	ldr	q0, [sp, #32]
   37b4c:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37b50:	tbz	w0, #31, 37c58 <mpfr_get_ld_2exp@@Base+0x2e0>
   37b54:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b58:	add	x0, x0, #0x520
   37b5c:	ldr	q1, [x0]
   37b60:	ldr	q0, [sp, #32]
   37b64:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37b68:	cmp	w0, #0x0
   37b6c:	b	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37b70:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b74:	add	x0, x0, #0x510
   37b78:	ldr	q1, [x0]
   37b7c:	ldr	q0, [sp, #32]
   37b80:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37b84:	cmp	w0, #0x0
   37b88:	b.gt	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37b8c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   37b90:	add	x2, x2, #0x3c0
   37b94:	mov	w1, #0x10e                 	// #270
   37b98:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37b9c:	add	x0, x0, #0x4d0
   37ba0:	bl	cb40 <mpfr_assert_fail@plt>
   37ba4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37ba8:	add	x0, x0, #0x500
   37bac:	ldr	q1, [x0]
   37bb0:	ldr	q0, [sp, #32]
   37bb4:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37bb8:	tbz	w0, #31, 37c24 <mpfr_get_ld_2exp@@Base+0x2ac>
   37bbc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37bc0:	add	x0, x0, #0x510
   37bc4:	ldr	q1, [x0]
   37bc8:	ldr	q0, [sp, #32]
   37bcc:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37bd0:	cmp	w0, #0x0
   37bd4:	b.gt	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37bd8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37bdc:	add	x0, x0, #0x500
   37be0:	ldr	q1, [x0]
   37be4:	ldr	q0, [sp, #32]
   37be8:	bl	5d528 <mpfr_free_pool@@Base+0xcd8>
   37bec:	tbz	w0, #31, 37c58 <mpfr_get_ld_2exp@@Base+0x2e0>
   37bf0:	b	37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37bf4:	mov	x19, #0x0                   	// #0
   37bf8:	str	x19, [x20]
   37bfc:	ldr	q0, [sp, #32]
   37c00:	ldp	x19, x20, [sp, #16]
   37c04:	ldp	x29, x30, [sp], #80
   37c08:	ret
   37c0c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   37c10:	add	x2, x2, #0x3c0
   37c14:	mov	w1, #0x10e                 	// #270
   37c18:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37c1c:	add	x0, x0, #0x4d0
   37c20:	bl	cb40 <mpfr_assert_fail@plt>
   37c24:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37c28:	add	x0, x0, #0x4e0
   37c2c:	ldr	q1, [x0]
   37c30:	ldr	q0, [sp, #32]
   37c34:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37c38:	tbnz	w0, #31, 37bf8 <mpfr_get_ld_2exp@@Base+0x280>
   37c3c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37c40:	add	x0, x0, #0x520
   37c44:	ldr	q1, [x0]
   37c48:	ldr	q0, [sp, #32]
   37c4c:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37c50:	cmp	w0, #0x0
   37c54:	b.le	37bbc <mpfr_get_ld_2exp@@Base+0x244>
   37c58:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   37c5c:	add	x0, x0, #0x4e0
   37c60:	ldr	q1, [x0]
   37c64:	ldr	q0, [sp, #32]
   37c68:	bl	5d670 <mpfr_free_pool@@Base+0xe20>
   37c6c:	tbz	w0, #31, 37b54 <mpfr_get_ld_2exp@@Base+0x1dc>
   37c70:	b	37bf8 <mpfr_get_ld_2exp@@Base+0x280>

0000000000037c74 <mpfr_cbrt@@Base>:
   37c74:	stp	x29, x30, [sp, #-112]!
   37c78:	mov	x29, sp
   37c7c:	stp	x19, x20, [sp, #16]
   37c80:	stp	x21, x22, [sp, #32]
   37c84:	mov	x22, x0
   37c88:	mov	x19, x1
   37c8c:	ldr	x0, [x1, #16]
   37c90:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37c94:	cmp	x0, x1
   37c98:	b.le	37db8 <mpfr_cbrt@@Base+0x144>
   37c9c:	stp	x23, x24, [sp, #48]
   37ca0:	stp	x25, x26, [sp, #64]
   37ca4:	stp	x27, x28, [sp, #80]
   37ca8:	mov	w23, w2
   37cac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37cb0:	ldr	x1, [x0, #2576]
   37cb4:	add	x0, x0, #0xa10
   37cb8:	blr	x1
   37cbc:	mrs	x1, tpidr_el0
   37cc0:	ldr	w25, [x1, x0]
   37cc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37cc8:	ldr	x2, [x0, #2512]
   37ccc:	add	x0, x0, #0x9d0
   37cd0:	blr	x2
   37cd4:	add	x2, x1, x0
   37cd8:	ldr	x26, [x1, x0]
   37cdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37ce0:	ldr	x3, [x0, #2544]
   37ce4:	add	x0, x0, #0x9f0
   37ce8:	blr	x3
   37cec:	ldr	x27, [x1, x0]
   37cf0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   37cf4:	str	x3, [x2]
   37cf8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   37cfc:	str	x2, [x1, x0]
   37d00:	add	x20, sp, #0x60
   37d04:	mov	x0, x20
   37d08:	bl	bf90 <mpfr_mpz_init@plt>
   37d0c:	mov	x1, x19
   37d10:	mov	x0, x20
   37d14:	bl	cac0 <mpfr_get_z_2exp@plt>
   37d18:	mov	x21, x0
   37d1c:	ldr	w24, [x19, #8]
   37d20:	tbnz	w24, #31, 37e30 <mpfr_cbrt@@Base+0x1bc>
   37d24:	mov	x20, #0x5555555555555555    	// #6148914691236517205
   37d28:	movk	x20, #0x5556
   37d2c:	smulh	x20, x21, x20
   37d30:	sub	x20, x20, x21, asr #63
   37d34:	add	x20, x20, x20, lsl #1
   37d38:	subs	x20, x21, x20
   37d3c:	b.mi	37e40 <mpfr_cbrt@@Base+0x1cc>  // b.first
   37d40:	ldr	w1, [sp, #100]
   37d44:	cmp	w1, #0x0
   37d48:	cneg	w0, w1, lt  // lt = tstop
   37d4c:	ldr	x1, [sp, #104]
   37d50:	add	x1, x1, w0, sxtw #3
   37d54:	ldur	x2, [x1, #-8]
   37d58:	cmp	w23, #0x0
   37d5c:	ldr	x19, [x22]
   37d60:	cinc	x28, x19, eq  // eq = none
   37d64:	add	x1, x28, x28, lsl #1
   37d68:	sbfiz	x0, x0, #6, #32
   37d6c:	clz	x2, x2
   37d70:	sub	x0, x0, x2
   37d74:	sub	x1, x1, x0
   37d78:	sub	x1, x1, x20
   37d7c:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   37d80:	movk	x0, #0x5556
   37d84:	smulh	x0, x1, x0
   37d88:	sub	x1, x0, x1, asr #63
   37d8c:	add	x1, x1, x1, lsl #1
   37d90:	adds	x19, x1, x20
   37d94:	b.pl	37e4c <mpfr_cbrt@@Base+0x1d8>  // b.nfrst
   37d98:	cmp	x20, #0x0
   37d9c:	b.le	37e60 <mpfr_cbrt@@Base+0x1ec>
   37da0:	add	x0, sp, #0x60
   37da4:	mov	x2, x20
   37da8:	mov	x1, x0
   37dac:	bl	c200 <__gmpz_mul_2exp@plt>
   37db0:	sub	x21, x21, x20
   37db4:	b	37e60 <mpfr_cbrt@@Base+0x1ec>
   37db8:	mov	x1, #0x2                   	// #2
   37dbc:	movk	x1, #0x8000, lsl #48
   37dc0:	cmp	x0, x1
   37dc4:	b.eq	37dec <mpfr_cbrt@@Base+0x178>  // b.none
   37dc8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37dcc:	cmp	x0, x1
   37dd0:	b.eq	37e1c <mpfr_cbrt@@Base+0x1a8>  // b.none
   37dd4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   37dd8:	str	x0, [x22, #16]
   37ddc:	ldr	w0, [x19, #8]
   37de0:	str	w0, [x22, #8]
   37de4:	mov	w20, #0x0                   	// #0
   37de8:	b	38074 <mpfr_cbrt@@Base+0x400>
   37dec:	str	x1, [x22, #16]
   37df0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37df4:	ldr	x1, [x0, #2576]
   37df8:	add	x0, x0, #0xa10
   37dfc:	blr	x1
   37e00:	mrs	x1, tpidr_el0
   37e04:	add	x0, x1, x0
   37e08:	ldr	w1, [x0]
   37e0c:	orr	w1, w1, #0x4
   37e10:	str	w1, [x0]
   37e14:	mov	w20, #0x0                   	// #0
   37e18:	b	38074 <mpfr_cbrt@@Base+0x400>
   37e1c:	str	x1, [x22, #16]
   37e20:	ldr	w0, [x19, #8]
   37e24:	str	w0, [x22, #8]
   37e28:	mov	w20, #0x0                   	// #0
   37e2c:	b	38074 <mpfr_cbrt@@Base+0x400>
   37e30:	ldr	w0, [sp, #100]
   37e34:	neg	w0, w0
   37e38:	str	w0, [sp, #100]
   37e3c:	b	37d24 <mpfr_cbrt@@Base+0xb0>
   37e40:	add	x20, x20, #0x3
   37e44:	ldr	w1, [sp, #100]
   37e48:	b	37d44 <mpfr_cbrt@@Base+0xd0>
   37e4c:	add	x0, sp, #0x60
   37e50:	mov	x2, x19
   37e54:	mov	x1, x0
   37e58:	bl	c200 <__gmpz_mul_2exp@plt>
   37e5c:	sub	x21, x21, x19
   37e60:	add	x0, sp, #0x60
   37e64:	mov	x2, #0x3                   	// #3
   37e68:	mov	x1, x0
   37e6c:	bl	c2e0 <__gmpz_root@plt>
   37e70:	ldr	w19, [sp, #100]
   37e74:	cmp	w19, #0x0
   37e78:	cneg	w19, w19, lt  // lt = tstop
   37e7c:	ldr	x1, [sp, #104]
   37e80:	add	x1, x1, w19, sxtw #3
   37e84:	ldur	x1, [x1, #-8]
   37e88:	sbfiz	x19, x19, #6, #32
   37e8c:	clz	x1, x1
   37e90:	sub	x19, x19, x1
   37e94:	sub	x19, x19, x28
   37e98:	cmp	w0, #0x0
   37e9c:	cset	w20, eq  // eq = none
   37ea0:	cmp	x19, #0x0
   37ea4:	b.le	37edc <mpfr_cbrt@@Base+0x268>
   37ea8:	mov	w20, #0x1                   	// #1
   37eac:	cbz	w0, 37ec4 <mpfr_cbrt@@Base+0x250>
   37eb0:	mov	x1, #0x0                   	// #0
   37eb4:	add	x0, sp, #0x60
   37eb8:	bl	ba90 <__gmpz_scan1@plt>
   37ebc:	cmp	x0, x19
   37ec0:	cset	w20, lt  // lt = tstop
   37ec4:	add	x0, sp, #0x60
   37ec8:	mov	x2, x19
   37ecc:	mov	x1, x0
   37ed0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   37ed4:	add	x19, x19, x19, lsl #1
   37ed8:	add	x21, x21, x19
   37edc:	cbz	w20, 37f14 <mpfr_cbrt@@Base+0x2a0>
   37ee0:	tbnz	w24, #31, 37fd0 <mpfr_cbrt@@Base+0x35c>
   37ee4:	sub	w0, w23, #0x2
   37ee8:	tst	w0, #0xfffffffd
   37eec:	b.eq	37f04 <mpfr_cbrt@@Base+0x290>  // b.none
   37ef0:	cbnz	w23, 37fe8 <mpfr_cbrt@@Base+0x374>
   37ef4:	mov	x1, #0x0                   	// #0
   37ef8:	add	x0, sp, #0x60
   37efc:	bl	bfe0 <__gmpz_tstbit@plt>
   37f00:	cbz	w0, 37ff0 <mpfr_cbrt@@Base+0x37c>
   37f04:	add	x0, sp, #0x60
   37f08:	mov	x2, #0x1                   	// #1
   37f0c:	mov	x1, x0
   37f10:	bl	c360 <__gmpz_add_ui@plt>
   37f14:	mov	w2, #0x0                   	// #0
   37f18:	add	x1, sp, #0x60
   37f1c:	mov	x0, x22
   37f20:	bl	c240 <mpfr_set_z@plt>
   37f24:	add	w20, w20, w0
   37f28:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   37f2c:	movk	x0, #0x5556
   37f30:	smulh	x0, x21, x0
   37f34:	sub	x21, x0, x21, asr #63
   37f38:	ldr	x0, [x22, #16]
   37f3c:	add	x21, x0, x21
   37f40:	str	x21, [x22, #16]
   37f44:	tbnz	w24, #31, 38054 <mpfr_cbrt@@Base+0x3e0>
   37f48:	add	x0, sp, #0x60
   37f4c:	bl	c170 <mpfr_mpz_clear@plt>
   37f50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37f54:	ldr	x1, [x0, #2576]
   37f58:	add	x0, x0, #0xa10
   37f5c:	blr	x1
   37f60:	mrs	x1, tpidr_el0
   37f64:	str	w25, [x1, x0]
   37f68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37f6c:	ldr	x2, [x0, #2512]
   37f70:	add	x0, x0, #0x9d0
   37f74:	blr	x2
   37f78:	str	x26, [x1, x0]
   37f7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37f80:	ldr	x2, [x0, #2544]
   37f84:	add	x0, x0, #0x9f0
   37f88:	blr	x2
   37f8c:	str	x27, [x1, x0]
   37f90:	ldr	x0, [x22, #16]
   37f94:	cmp	x27, x0
   37f98:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   37f9c:	b.gt	37ffc <mpfr_cbrt@@Base+0x388>
   37fa0:	cbz	w20, 38068 <mpfr_cbrt@@Base+0x3f4>
   37fa4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   37fa8:	ldr	x1, [x0, #2576]
   37fac:	add	x0, x0, #0xa10
   37fb0:	blr	x1
   37fb4:	orr	w25, w25, #0x8
   37fb8:	mrs	x1, tpidr_el0
   37fbc:	str	w25, [x1, x0]
   37fc0:	ldp	x23, x24, [sp, #48]
   37fc4:	ldp	x25, x26, [sp, #64]
   37fc8:	ldp	x27, x28, [sp, #80]
   37fcc:	b	38074 <mpfr_cbrt@@Base+0x400>
   37fd0:	cmp	w23, #0x2
   37fd4:	b.eq	38020 <mpfr_cbrt@@Base+0x3ac>  // b.none
   37fd8:	cmp	w23, #0x3
   37fdc:	b.ne	37ee4 <mpfr_cbrt@@Base+0x270>  // b.any
   37fe0:	mov	w23, #0x2                   	// #2
   37fe4:	b	37f04 <mpfr_cbrt@@Base+0x290>
   37fe8:	mov	w20, #0xffffffff            	// #-1
   37fec:	b	37f14 <mpfr_cbrt@@Base+0x2a0>
   37ff0:	mov	w23, w0
   37ff4:	mov	w20, #0xffffffff            	// #-1
   37ff8:	b	37f14 <mpfr_cbrt@@Base+0x2a0>
   37ffc:	mov	w2, w23
   38000:	mov	w1, w20
   38004:	mov	x0, x22
   38008:	bl	cb30 <mpfr_check_range@plt>
   3800c:	mov	w20, w0
   38010:	ldp	x23, x24, [sp, #48]
   38014:	ldp	x25, x26, [sp, #64]
   38018:	ldp	x27, x28, [sp, #80]
   3801c:	b	38074 <mpfr_cbrt@@Base+0x400>
   38020:	mov	w2, #0x0                   	// #0
   38024:	add	x1, sp, #0x60
   38028:	mov	x0, x22
   3802c:	bl	c240 <mpfr_set_z@plt>
   38030:	sub	w20, w0, #0x1
   38034:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   38038:	movk	x0, #0x5556
   3803c:	smulh	x0, x21, x0
   38040:	sub	x21, x0, x21, asr #63
   38044:	ldr	x0, [x22, #16]
   38048:	add	x21, x0, x21
   3804c:	str	x21, [x22, #16]
   38050:	mov	w23, #0x3                   	// #3
   38054:	ldr	w0, [x22, #8]
   38058:	neg	w0, w0
   3805c:	str	w0, [x22, #8]
   38060:	neg	w20, w20
   38064:	b	37f48 <mpfr_cbrt@@Base+0x2d4>
   38068:	ldp	x23, x24, [sp, #48]
   3806c:	ldp	x25, x26, [sp, #64]
   38070:	ldp	x27, x28, [sp, #80]
   38074:	mov	w0, w20
   38078:	ldp	x19, x20, [sp, #16]
   3807c:	ldp	x21, x22, [sp, #32]
   38080:	ldp	x29, x30, [sp], #112
   38084:	ret

0000000000038088 <mpfr_fits_sshort_p@@Base>:
   38088:	stp	x29, x30, [sp, #-96]!
   3808c:	mov	x29, sp
   38090:	stp	x19, x20, [sp, #16]
   38094:	mov	x20, x0
   38098:	ldr	x0, [x0, #16]
   3809c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   380a0:	cmp	x0, x2
   380a4:	b.le	38184 <mpfr_fits_sshort_p@@Base+0xfc>
   380a8:	stp	x21, x22, [sp, #32]
   380ac:	mov	w21, w1
   380b0:	mov	w19, #0x1                   	// #1
   380b4:	cmp	x0, #0x0
   380b8:	b.le	381c0 <mpfr_fits_sshort_p@@Base+0x138>
   380bc:	ldr	w22, [x20, #8]
   380c0:	mov	w2, #0x0                   	// #0
   380c4:	tbnz	w22, #31, 38194 <mpfr_fits_sshort_p@@Base+0x10c>
   380c8:	add	w2, w2, #0x1
   380cc:	cmp	w2, #0xf
   380d0:	b.ne	380c8 <mpfr_fits_sshort_p@@Base+0x40>  // b.any
   380d4:	sub	w3, w2, #0x1
   380d8:	mov	w19, #0x1                   	// #1
   380dc:	cmp	x0, w3, sxtw
   380e0:	b.le	381c8 <mpfr_fits_sshort_p@@Base+0x140>
   380e4:	add	w1, w2, w19
   380e8:	mov	w19, #0x0                   	// #0
   380ec:	cmp	x0, w1, sxtw
   380f0:	b.ge	381d0 <mpfr_fits_sshort_p@@Base+0x148>  // b.tcont
   380f4:	str	x23, [sp, #48]
   380f8:	sxtw	x19, w2
   380fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38100:	ldr	x1, [x0, #2576]
   38104:	add	x0, x0, #0xa10
   38108:	blr	x1
   3810c:	mrs	x1, tpidr_el0
   38110:	ldr	w23, [x1, x0]
   38114:	mov	x1, x19
   38118:	add	x0, sp, #0x40
   3811c:	bl	ca80 <mpfr_init2@plt>
   38120:	cmp	w21, #0x5
   38124:	ldr	w3, [x20, #8]
   38128:	mov	w2, #0x4                   	// #4
   3812c:	csel	w2, w21, w2, ne  // ne = any
   38130:	mov	x1, x20
   38134:	add	x0, sp, #0x40
   38138:	bl	c6a0 <mpfr_set4@plt>
   3813c:	tbnz	w22, #31, 381a4 <mpfr_fits_sshort_p@@Base+0x11c>
   38140:	ldr	x0, [sp, #80]
   38144:	cmp	x0, x19
   38148:	cset	w19, eq  // eq = none
   3814c:	add	x0, sp, #0x40
   38150:	bl	c070 <mpfr_clear@plt>
   38154:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38158:	ldr	x1, [x0, #2576]
   3815c:	add	x0, x0, #0xa10
   38160:	blr	x1
   38164:	mrs	x1, tpidr_el0
   38168:	str	w23, [x1, x0]
   3816c:	ldp	x21, x22, [sp, #32]
   38170:	ldr	x23, [sp, #48]
   38174:	mov	w0, w19
   38178:	ldp	x19, x20, [sp, #16]
   3817c:	ldp	x29, x30, [sp], #96
   38180:	ret
   38184:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38188:	cmp	x0, x1
   3818c:	cset	w19, eq  // eq = none
   38190:	b	38174 <mpfr_fits_sshort_p@@Base+0xec>
   38194:	add	w2, w2, #0x1
   38198:	cmp	w2, #0x10
   3819c:	b.ne	38194 <mpfr_fits_sshort_p@@Base+0x10c>  // b.any
   381a0:	b	380d4 <mpfr_fits_sshort_p@@Base+0x4c>
   381a4:	mov	x2, #0x0                   	// #0
   381a8:	mov	x1, #0xffffffffffff8000    	// #-32768
   381ac:	add	x0, sp, #0x40
   381b0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   381b4:	mvn	w19, w0
   381b8:	lsr	w19, w19, #31
   381bc:	b	3814c <mpfr_fits_sshort_p@@Base+0xc4>
   381c0:	ldp	x21, x22, [sp, #32]
   381c4:	b	38174 <mpfr_fits_sshort_p@@Base+0xec>
   381c8:	ldp	x21, x22, [sp, #32]
   381cc:	b	38174 <mpfr_fits_sshort_p@@Base+0xec>
   381d0:	ldp	x21, x22, [sp, #32]
   381d4:	b	38174 <mpfr_fits_sshort_p@@Base+0xec>

00000000000381d8 <mpfr_fits_sint_p@@Base>:
   381d8:	stp	x29, x30, [sp, #-96]!
   381dc:	mov	x29, sp
   381e0:	stp	x19, x20, [sp, #16]
   381e4:	mov	x20, x0
   381e8:	ldr	x0, [x0, #16]
   381ec:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   381f0:	cmp	x0, x2
   381f4:	b.le	382d4 <mpfr_fits_sint_p@@Base+0xfc>
   381f8:	stp	x21, x22, [sp, #32]
   381fc:	mov	w21, w1
   38200:	mov	w19, #0x1                   	// #1
   38204:	cmp	x0, #0x0
   38208:	b.le	38310 <mpfr_fits_sint_p@@Base+0x138>
   3820c:	ldr	w22, [x20, #8]
   38210:	mov	w2, #0x0                   	// #0
   38214:	tbnz	w22, #31, 382e4 <mpfr_fits_sint_p@@Base+0x10c>
   38218:	add	w2, w2, #0x1
   3821c:	cmp	w2, #0x1f
   38220:	b.ne	38218 <mpfr_fits_sint_p@@Base+0x40>  // b.any
   38224:	sub	w3, w2, #0x1
   38228:	mov	w19, #0x1                   	// #1
   3822c:	cmp	x0, w3, sxtw
   38230:	b.le	38318 <mpfr_fits_sint_p@@Base+0x140>
   38234:	add	w1, w2, w19
   38238:	mov	w19, #0x0                   	// #0
   3823c:	cmp	x0, w1, sxtw
   38240:	b.ge	38320 <mpfr_fits_sint_p@@Base+0x148>  // b.tcont
   38244:	str	x23, [sp, #48]
   38248:	sxtw	x19, w2
   3824c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38250:	ldr	x1, [x0, #2576]
   38254:	add	x0, x0, #0xa10
   38258:	blr	x1
   3825c:	mrs	x1, tpidr_el0
   38260:	ldr	w23, [x1, x0]
   38264:	mov	x1, x19
   38268:	add	x0, sp, #0x40
   3826c:	bl	ca80 <mpfr_init2@plt>
   38270:	cmp	w21, #0x5
   38274:	ldr	w3, [x20, #8]
   38278:	mov	w2, #0x4                   	// #4
   3827c:	csel	w2, w21, w2, ne  // ne = any
   38280:	mov	x1, x20
   38284:	add	x0, sp, #0x40
   38288:	bl	c6a0 <mpfr_set4@plt>
   3828c:	tbnz	w22, #31, 382f4 <mpfr_fits_sint_p@@Base+0x11c>
   38290:	ldr	x0, [sp, #80]
   38294:	cmp	x0, x19
   38298:	cset	w19, eq  // eq = none
   3829c:	add	x0, sp, #0x40
   382a0:	bl	c070 <mpfr_clear@plt>
   382a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   382a8:	ldr	x1, [x0, #2576]
   382ac:	add	x0, x0, #0xa10
   382b0:	blr	x1
   382b4:	mrs	x1, tpidr_el0
   382b8:	str	w23, [x1, x0]
   382bc:	ldp	x21, x22, [sp, #32]
   382c0:	ldr	x23, [sp, #48]
   382c4:	mov	w0, w19
   382c8:	ldp	x19, x20, [sp, #16]
   382cc:	ldp	x29, x30, [sp], #96
   382d0:	ret
   382d4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   382d8:	cmp	x0, x1
   382dc:	cset	w19, eq  // eq = none
   382e0:	b	382c4 <mpfr_fits_sint_p@@Base+0xec>
   382e4:	add	w2, w2, #0x1
   382e8:	cmp	w2, #0x20
   382ec:	b.ne	382e4 <mpfr_fits_sint_p@@Base+0x10c>  // b.any
   382f0:	b	38224 <mpfr_fits_sint_p@@Base+0x4c>
   382f4:	mov	x2, #0x0                   	// #0
   382f8:	mov	x1, #0xffffffff80000000    	// #-2147483648
   382fc:	add	x0, sp, #0x40
   38300:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   38304:	mvn	w19, w0
   38308:	lsr	w19, w19, #31
   3830c:	b	3829c <mpfr_fits_sint_p@@Base+0xc4>
   38310:	ldp	x21, x22, [sp, #32]
   38314:	b	382c4 <mpfr_fits_sint_p@@Base+0xec>
   38318:	ldp	x21, x22, [sp, #32]
   3831c:	b	382c4 <mpfr_fits_sint_p@@Base+0xec>
   38320:	ldp	x21, x22, [sp, #32]
   38324:	b	382c4 <mpfr_fits_sint_p@@Base+0xec>

0000000000038328 <mpfr_fits_slong_p@@Base>:
   38328:	stp	x29, x30, [sp, #-96]!
   3832c:	mov	x29, sp
   38330:	stp	x19, x20, [sp, #16]
   38334:	mov	x20, x0
   38338:	ldr	x0, [x0, #16]
   3833c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   38340:	cmp	x0, x2
   38344:	b.le	38424 <mpfr_fits_slong_p@@Base+0xfc>
   38348:	stp	x21, x22, [sp, #32]
   3834c:	mov	w21, w1
   38350:	mov	w19, #0x1                   	// #1
   38354:	cmp	x0, #0x0
   38358:	b.le	38460 <mpfr_fits_slong_p@@Base+0x138>
   3835c:	ldr	w22, [x20, #8]
   38360:	mov	w2, #0x0                   	// #0
   38364:	tbnz	w22, #31, 38434 <mpfr_fits_slong_p@@Base+0x10c>
   38368:	add	w2, w2, #0x1
   3836c:	cmp	w2, #0x3f
   38370:	b.ne	38368 <mpfr_fits_slong_p@@Base+0x40>  // b.any
   38374:	sub	w3, w2, #0x1
   38378:	mov	w19, #0x1                   	// #1
   3837c:	cmp	x0, w3, sxtw
   38380:	b.le	38468 <mpfr_fits_slong_p@@Base+0x140>
   38384:	add	w1, w2, w19
   38388:	mov	w19, #0x0                   	// #0
   3838c:	cmp	x0, w1, sxtw
   38390:	b.ge	38470 <mpfr_fits_slong_p@@Base+0x148>  // b.tcont
   38394:	str	x23, [sp, #48]
   38398:	sxtw	x19, w2
   3839c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   383a0:	ldr	x1, [x0, #2576]
   383a4:	add	x0, x0, #0xa10
   383a8:	blr	x1
   383ac:	mrs	x1, tpidr_el0
   383b0:	ldr	w23, [x1, x0]
   383b4:	mov	x1, x19
   383b8:	add	x0, sp, #0x40
   383bc:	bl	ca80 <mpfr_init2@plt>
   383c0:	cmp	w21, #0x5
   383c4:	ldr	w3, [x20, #8]
   383c8:	mov	w2, #0x4                   	// #4
   383cc:	csel	w2, w21, w2, ne  // ne = any
   383d0:	mov	x1, x20
   383d4:	add	x0, sp, #0x40
   383d8:	bl	c6a0 <mpfr_set4@plt>
   383dc:	tbnz	w22, #31, 38444 <mpfr_fits_slong_p@@Base+0x11c>
   383e0:	ldr	x0, [sp, #80]
   383e4:	cmp	x0, x19
   383e8:	cset	w19, eq  // eq = none
   383ec:	add	x0, sp, #0x40
   383f0:	bl	c070 <mpfr_clear@plt>
   383f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   383f8:	ldr	x1, [x0, #2576]
   383fc:	add	x0, x0, #0xa10
   38400:	blr	x1
   38404:	mrs	x1, tpidr_el0
   38408:	str	w23, [x1, x0]
   3840c:	ldp	x21, x22, [sp, #32]
   38410:	ldr	x23, [sp, #48]
   38414:	mov	w0, w19
   38418:	ldp	x19, x20, [sp, #16]
   3841c:	ldp	x29, x30, [sp], #96
   38420:	ret
   38424:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38428:	cmp	x0, x1
   3842c:	cset	w19, eq  // eq = none
   38430:	b	38414 <mpfr_fits_slong_p@@Base+0xec>
   38434:	add	w2, w2, #0x1
   38438:	cmp	w2, #0x40
   3843c:	b.ne	38434 <mpfr_fits_slong_p@@Base+0x10c>  // b.any
   38440:	b	38374 <mpfr_fits_slong_p@@Base+0x4c>
   38444:	mov	x2, #0x0                   	// #0
   38448:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3844c:	add	x0, sp, #0x40
   38450:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   38454:	mvn	w19, w0
   38458:	lsr	w19, w19, #31
   3845c:	b	383ec <mpfr_fits_slong_p@@Base+0xc4>
   38460:	ldp	x21, x22, [sp, #32]
   38464:	b	38414 <mpfr_fits_slong_p@@Base+0xec>
   38468:	ldp	x21, x22, [sp, #32]
   3846c:	b	38414 <mpfr_fits_slong_p@@Base+0xec>
   38470:	ldp	x21, x22, [sp, #32]
   38474:	b	38414 <mpfr_fits_slong_p@@Base+0xec>

0000000000038478 <mpfr_fits_ushort_p@@Base>:
   38478:	stp	x29, x30, [sp, #-80]!
   3847c:	mov	x29, sp
   38480:	stp	x19, x20, [sp, #16]
   38484:	mov	x19, x0
   38488:	ldr	x0, [x0, #16]
   3848c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   38490:	cmp	x0, x2
   38494:	b.le	38554 <mpfr_fits_ushort_p@@Base+0xdc>
   38498:	stp	x21, x22, [sp, #32]
   3849c:	mov	w21, w1
   384a0:	ldr	w1, [x19, #8]
   384a4:	mov	w2, #0x0                   	// #0
   384a8:	tbnz	w1, #31, 38564 <mpfr_fits_ushort_p@@Base+0xec>
   384ac:	add	w2, w2, #0x1
   384b0:	cmp	w2, #0x10
   384b4:	b.ne	384ac <mpfr_fits_ushort_p@@Base+0x34>  // b.any
   384b8:	mov	w20, #0x1                   	// #1
   384bc:	cmp	x0, #0xf
   384c0:	b.le	385b4 <mpfr_fits_ushort_p@@Base+0x13c>
   384c4:	mov	w20, #0x0                   	// #0
   384c8:	cmp	x0, #0x10
   384cc:	b.gt	385bc <mpfr_fits_ushort_p@@Base+0x144>
   384d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   384d4:	ldr	x1, [x0, #2576]
   384d8:	add	x0, x0, #0xa10
   384dc:	blr	x1
   384e0:	mrs	x1, tpidr_el0
   384e4:	ldr	w22, [x1, x0]
   384e8:	mov	x1, #0x10                  	// #16
   384ec:	add	x0, sp, #0x30
   384f0:	bl	ca80 <mpfr_init2@plt>
   384f4:	cmp	w21, #0x5
   384f8:	add	x0, sp, #0x30
   384fc:	ldr	w3, [x19, #8]
   38500:	mov	w2, #0x2                   	// #2
   38504:	csel	w2, w21, w2, ne  // ne = any
   38508:	mov	x1, x19
   3850c:	mov	x19, x0
   38510:	bl	c6a0 <mpfr_set4@plt>
   38514:	ldr	x0, [sp, #64]
   38518:	cmp	x0, #0x10
   3851c:	cset	w20, eq  // eq = none
   38520:	mov	x0, x19
   38524:	bl	c070 <mpfr_clear@plt>
   38528:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3852c:	ldr	x1, [x0, #2576]
   38530:	add	x0, x0, #0xa10
   38534:	blr	x1
   38538:	mrs	x1, tpidr_el0
   3853c:	str	w22, [x1, x0]
   38540:	ldp	x21, x22, [sp, #32]
   38544:	mov	w0, w20
   38548:	ldp	x19, x20, [sp, #16]
   3854c:	ldp	x29, x30, [sp], #80
   38550:	ret
   38554:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38558:	cmp	x0, x1
   3855c:	cset	w20, eq  // eq = none
   38560:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   38564:	mov	w20, #0x0                   	// #0
   38568:	cmp	x0, #0x0
   3856c:	b.le	38578 <mpfr_fits_ushort_p@@Base+0x100>
   38570:	ldp	x21, x22, [sp, #32]
   38574:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   38578:	cbz	w21, 38590 <mpfr_fits_ushort_p@@Base+0x118>
   3857c:	sub	w1, w21, #0x1
   38580:	cmp	w1, #0x1
   38584:	cset	w20, ls  // ls = plast
   38588:	ldp	x21, x22, [sp, #32]
   3858c:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   38590:	mov	w20, #0x1                   	// #1
   38594:	cbz	x0, 385a0 <mpfr_fits_ushort_p@@Base+0x128>
   38598:	ldp	x21, x22, [sp, #32]
   3859c:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   385a0:	mov	x0, x19
   385a4:	bl	bf00 <mpfr_powerof2_raw@plt>
   385a8:	mov	w20, w0
   385ac:	ldp	x21, x22, [sp, #32]
   385b0:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   385b4:	ldp	x21, x22, [sp, #32]
   385b8:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>
   385bc:	ldp	x21, x22, [sp, #32]
   385c0:	b	38544 <mpfr_fits_ushort_p@@Base+0xcc>

00000000000385c4 <mpfr_fits_uint_p@@Base>:
   385c4:	stp	x29, x30, [sp, #-80]!
   385c8:	mov	x29, sp
   385cc:	stp	x19, x20, [sp, #16]
   385d0:	mov	x19, x0
   385d4:	ldr	x0, [x0, #16]
   385d8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   385dc:	cmp	x0, x2
   385e0:	b.le	386a0 <mpfr_fits_uint_p@@Base+0xdc>
   385e4:	stp	x21, x22, [sp, #32]
   385e8:	mov	w21, w1
   385ec:	ldr	w1, [x19, #8]
   385f0:	mov	w2, #0x0                   	// #0
   385f4:	tbnz	w1, #31, 386b0 <mpfr_fits_uint_p@@Base+0xec>
   385f8:	add	w2, w2, #0x1
   385fc:	cmp	w2, #0x20
   38600:	b.ne	385f8 <mpfr_fits_uint_p@@Base+0x34>  // b.any
   38604:	mov	w20, #0x1                   	// #1
   38608:	cmp	x0, #0x1f
   3860c:	b.le	38700 <mpfr_fits_uint_p@@Base+0x13c>
   38610:	mov	w20, #0x0                   	// #0
   38614:	cmp	x0, #0x20
   38618:	b.gt	38708 <mpfr_fits_uint_p@@Base+0x144>
   3861c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38620:	ldr	x1, [x0, #2576]
   38624:	add	x0, x0, #0xa10
   38628:	blr	x1
   3862c:	mrs	x1, tpidr_el0
   38630:	ldr	w22, [x1, x0]
   38634:	mov	x1, #0x20                  	// #32
   38638:	add	x0, sp, #0x30
   3863c:	bl	ca80 <mpfr_init2@plt>
   38640:	cmp	w21, #0x5
   38644:	add	x0, sp, #0x30
   38648:	ldr	w3, [x19, #8]
   3864c:	mov	w2, #0x2                   	// #2
   38650:	csel	w2, w21, w2, ne  // ne = any
   38654:	mov	x1, x19
   38658:	mov	x19, x0
   3865c:	bl	c6a0 <mpfr_set4@plt>
   38660:	ldr	x0, [sp, #64]
   38664:	cmp	x0, #0x20
   38668:	cset	w20, eq  // eq = none
   3866c:	mov	x0, x19
   38670:	bl	c070 <mpfr_clear@plt>
   38674:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38678:	ldr	x1, [x0, #2576]
   3867c:	add	x0, x0, #0xa10
   38680:	blr	x1
   38684:	mrs	x1, tpidr_el0
   38688:	str	w22, [x1, x0]
   3868c:	ldp	x21, x22, [sp, #32]
   38690:	mov	w0, w20
   38694:	ldp	x19, x20, [sp, #16]
   38698:	ldp	x29, x30, [sp], #80
   3869c:	ret
   386a0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   386a4:	cmp	x0, x1
   386a8:	cset	w20, eq  // eq = none
   386ac:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   386b0:	mov	w20, #0x0                   	// #0
   386b4:	cmp	x0, #0x0
   386b8:	b.le	386c4 <mpfr_fits_uint_p@@Base+0x100>
   386bc:	ldp	x21, x22, [sp, #32]
   386c0:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   386c4:	cbz	w21, 386dc <mpfr_fits_uint_p@@Base+0x118>
   386c8:	sub	w1, w21, #0x1
   386cc:	cmp	w1, #0x1
   386d0:	cset	w20, ls  // ls = plast
   386d4:	ldp	x21, x22, [sp, #32]
   386d8:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   386dc:	mov	w20, #0x1                   	// #1
   386e0:	cbz	x0, 386ec <mpfr_fits_uint_p@@Base+0x128>
   386e4:	ldp	x21, x22, [sp, #32]
   386e8:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   386ec:	mov	x0, x19
   386f0:	bl	bf00 <mpfr_powerof2_raw@plt>
   386f4:	mov	w20, w0
   386f8:	ldp	x21, x22, [sp, #32]
   386fc:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   38700:	ldp	x21, x22, [sp, #32]
   38704:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>
   38708:	ldp	x21, x22, [sp, #32]
   3870c:	b	38690 <mpfr_fits_uint_p@@Base+0xcc>

0000000000038710 <mpfr_fits_ulong_p@@Base>:
   38710:	stp	x29, x30, [sp, #-80]!
   38714:	mov	x29, sp
   38718:	stp	x19, x20, [sp, #16]
   3871c:	mov	x19, x0
   38720:	ldr	x0, [x0, #16]
   38724:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   38728:	cmp	x0, x2
   3872c:	b.le	387ec <mpfr_fits_ulong_p@@Base+0xdc>
   38730:	stp	x21, x22, [sp, #32]
   38734:	mov	w21, w1
   38738:	ldr	w1, [x19, #8]
   3873c:	mov	w2, #0x0                   	// #0
   38740:	tbnz	w1, #31, 387fc <mpfr_fits_ulong_p@@Base+0xec>
   38744:	add	w2, w2, #0x1
   38748:	cmp	w2, #0x40
   3874c:	b.ne	38744 <mpfr_fits_ulong_p@@Base+0x34>  // b.any
   38750:	mov	w20, #0x1                   	// #1
   38754:	cmp	x0, #0x3f
   38758:	b.le	3884c <mpfr_fits_ulong_p@@Base+0x13c>
   3875c:	mov	w20, #0x0                   	// #0
   38760:	cmp	x0, #0x40
   38764:	b.gt	38854 <mpfr_fits_ulong_p@@Base+0x144>
   38768:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3876c:	ldr	x1, [x0, #2576]
   38770:	add	x0, x0, #0xa10
   38774:	blr	x1
   38778:	mrs	x1, tpidr_el0
   3877c:	ldr	w22, [x1, x0]
   38780:	mov	x1, #0x40                  	// #64
   38784:	add	x0, sp, #0x30
   38788:	bl	ca80 <mpfr_init2@plt>
   3878c:	cmp	w21, #0x5
   38790:	add	x0, sp, #0x30
   38794:	ldr	w3, [x19, #8]
   38798:	mov	w2, #0x2                   	// #2
   3879c:	csel	w2, w21, w2, ne  // ne = any
   387a0:	mov	x1, x19
   387a4:	mov	x19, x0
   387a8:	bl	c6a0 <mpfr_set4@plt>
   387ac:	ldr	x0, [sp, #64]
   387b0:	cmp	x0, #0x40
   387b4:	cset	w20, eq  // eq = none
   387b8:	mov	x0, x19
   387bc:	bl	c070 <mpfr_clear@plt>
   387c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   387c4:	ldr	x1, [x0, #2576]
   387c8:	add	x0, x0, #0xa10
   387cc:	blr	x1
   387d0:	mrs	x1, tpidr_el0
   387d4:	str	w22, [x1, x0]
   387d8:	ldp	x21, x22, [sp, #32]
   387dc:	mov	w0, w20
   387e0:	ldp	x19, x20, [sp, #16]
   387e4:	ldp	x29, x30, [sp], #80
   387e8:	ret
   387ec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   387f0:	cmp	x0, x1
   387f4:	cset	w20, eq  // eq = none
   387f8:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   387fc:	mov	w20, #0x0                   	// #0
   38800:	cmp	x0, #0x0
   38804:	b.le	38810 <mpfr_fits_ulong_p@@Base+0x100>
   38808:	ldp	x21, x22, [sp, #32]
   3880c:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   38810:	cbz	w21, 38828 <mpfr_fits_ulong_p@@Base+0x118>
   38814:	sub	w1, w21, #0x1
   38818:	cmp	w1, #0x1
   3881c:	cset	w20, ls  // ls = plast
   38820:	ldp	x21, x22, [sp, #32]
   38824:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   38828:	mov	w20, #0x1                   	// #1
   3882c:	cbz	x0, 38838 <mpfr_fits_ulong_p@@Base+0x128>
   38830:	ldp	x21, x22, [sp, #32]
   38834:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   38838:	mov	x0, x19
   3883c:	bl	bf00 <mpfr_powerof2_raw@plt>
   38840:	mov	w20, w0
   38844:	ldp	x21, x22, [sp, #32]
   38848:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   3884c:	ldp	x21, x22, [sp, #32]
   38850:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>
   38854:	ldp	x21, x22, [sp, #32]
   38858:	b	387dc <mpfr_fits_ulong_p@@Base+0xcc>

000000000003885c <mpfr_fits_uintmax_p@@Base>:
   3885c:	stp	x29, x30, [sp, #-80]!
   38860:	mov	x29, sp
   38864:	stp	x19, x20, [sp, #16]
   38868:	mov	x19, x0
   3886c:	ldr	x0, [x0, #16]
   38870:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   38874:	cmp	x0, x2
   38878:	b.le	38938 <mpfr_fits_uintmax_p@@Base+0xdc>
   3887c:	stp	x21, x22, [sp, #32]
   38880:	mov	w21, w1
   38884:	ldr	w1, [x19, #8]
   38888:	mov	w2, #0x0                   	// #0
   3888c:	tbnz	w1, #31, 38948 <mpfr_fits_uintmax_p@@Base+0xec>
   38890:	add	w2, w2, #0x1
   38894:	cmp	w2, #0x40
   38898:	b.ne	38890 <mpfr_fits_uintmax_p@@Base+0x34>  // b.any
   3889c:	mov	w20, #0x1                   	// #1
   388a0:	cmp	x0, #0x3f
   388a4:	b.le	38998 <mpfr_fits_uintmax_p@@Base+0x13c>
   388a8:	mov	w20, #0x0                   	// #0
   388ac:	cmp	x0, #0x40
   388b0:	b.gt	389a0 <mpfr_fits_uintmax_p@@Base+0x144>
   388b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   388b8:	ldr	x1, [x0, #2576]
   388bc:	add	x0, x0, #0xa10
   388c0:	blr	x1
   388c4:	mrs	x1, tpidr_el0
   388c8:	ldr	w22, [x1, x0]
   388cc:	mov	x1, #0x40                  	// #64
   388d0:	add	x0, sp, #0x30
   388d4:	bl	ca80 <mpfr_init2@plt>
   388d8:	cmp	w21, #0x5
   388dc:	add	x0, sp, #0x30
   388e0:	ldr	w3, [x19, #8]
   388e4:	mov	w2, #0x2                   	// #2
   388e8:	csel	w2, w21, w2, ne  // ne = any
   388ec:	mov	x1, x19
   388f0:	mov	x19, x0
   388f4:	bl	c6a0 <mpfr_set4@plt>
   388f8:	ldr	x0, [sp, #64]
   388fc:	cmp	x0, #0x40
   38900:	cset	w20, eq  // eq = none
   38904:	mov	x0, x19
   38908:	bl	c070 <mpfr_clear@plt>
   3890c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38910:	ldr	x1, [x0, #2576]
   38914:	add	x0, x0, #0xa10
   38918:	blr	x1
   3891c:	mrs	x1, tpidr_el0
   38920:	str	w22, [x1, x0]
   38924:	ldp	x21, x22, [sp, #32]
   38928:	mov	w0, w20
   3892c:	ldp	x19, x20, [sp, #16]
   38930:	ldp	x29, x30, [sp], #80
   38934:	ret
   38938:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3893c:	cmp	x0, x1
   38940:	cset	w20, eq  // eq = none
   38944:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   38948:	mov	w20, #0x0                   	// #0
   3894c:	cmp	x0, #0x0
   38950:	b.le	3895c <mpfr_fits_uintmax_p@@Base+0x100>
   38954:	ldp	x21, x22, [sp, #32]
   38958:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   3895c:	cbz	w21, 38974 <mpfr_fits_uintmax_p@@Base+0x118>
   38960:	sub	w1, w21, #0x1
   38964:	cmp	w1, #0x1
   38968:	cset	w20, ls  // ls = plast
   3896c:	ldp	x21, x22, [sp, #32]
   38970:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   38974:	mov	w20, #0x1                   	// #1
   38978:	cbz	x0, 38984 <mpfr_fits_uintmax_p@@Base+0x128>
   3897c:	ldp	x21, x22, [sp, #32]
   38980:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   38984:	mov	x0, x19
   38988:	bl	bf00 <mpfr_powerof2_raw@plt>
   3898c:	mov	w20, w0
   38990:	ldp	x21, x22, [sp, #32]
   38994:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   38998:	ldp	x21, x22, [sp, #32]
   3899c:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>
   389a0:	ldp	x21, x22, [sp, #32]
   389a4:	b	38928 <mpfr_fits_uintmax_p@@Base+0xcc>

00000000000389a8 <mpfr_fits_intmax_p@@Base>:
   389a8:	stp	x29, x30, [sp, #-128]!
   389ac:	mov	x29, sp
   389b0:	stp	x19, x20, [sp, #16]
   389b4:	mov	x20, x0
   389b8:	ldr	x0, [x0, #16]
   389bc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   389c0:	cmp	x0, x2
   389c4:	b.le	38aa4 <mpfr_fits_intmax_p@@Base+0xfc>
   389c8:	stp	x21, x22, [sp, #32]
   389cc:	mov	w21, w1
   389d0:	mov	w19, #0x1                   	// #1
   389d4:	cmp	x0, #0x0
   389d8:	b.le	38b08 <mpfr_fits_intmax_p@@Base+0x160>
   389dc:	ldr	w22, [x20, #8]
   389e0:	mov	w2, #0x0                   	// #0
   389e4:	tbnz	w22, #31, 38ab4 <mpfr_fits_intmax_p@@Base+0x10c>
   389e8:	add	w2, w2, #0x1
   389ec:	cmp	w2, #0x3f
   389f0:	b.ne	389e8 <mpfr_fits_intmax_p@@Base+0x40>  // b.any
   389f4:	sub	w3, w2, #0x1
   389f8:	mov	w19, #0x1                   	// #1
   389fc:	cmp	x0, w3, sxtw
   38a00:	b.le	38b10 <mpfr_fits_intmax_p@@Base+0x168>
   38a04:	add	w1, w2, w19
   38a08:	mov	w19, #0x0                   	// #0
   38a0c:	cmp	x0, w1, sxtw
   38a10:	b.ge	38b18 <mpfr_fits_intmax_p@@Base+0x170>  // b.tcont
   38a14:	str	x23, [sp, #48]
   38a18:	sxtw	x19, w2
   38a1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38a20:	ldr	x1, [x0, #2576]
   38a24:	add	x0, x0, #0xa10
   38a28:	blr	x1
   38a2c:	mrs	x1, tpidr_el0
   38a30:	ldr	w23, [x1, x0]
   38a34:	mov	x1, x19
   38a38:	add	x0, sp, #0x60
   38a3c:	bl	ca80 <mpfr_init2@plt>
   38a40:	cmp	w21, #0x5
   38a44:	ldr	w3, [x20, #8]
   38a48:	mov	w2, #0x4                   	// #4
   38a4c:	csel	w2, w21, w2, ne  // ne = any
   38a50:	mov	x1, x20
   38a54:	add	x0, sp, #0x60
   38a58:	bl	c6a0 <mpfr_set4@plt>
   38a5c:	tbnz	w22, #31, 38ac4 <mpfr_fits_intmax_p@@Base+0x11c>
   38a60:	ldr	x0, [sp, #112]
   38a64:	cmp	x0, x19
   38a68:	cset	w19, eq  // eq = none
   38a6c:	add	x0, sp, #0x60
   38a70:	bl	c070 <mpfr_clear@plt>
   38a74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38a78:	ldr	x1, [x0, #2576]
   38a7c:	add	x0, x0, #0xa10
   38a80:	blr	x1
   38a84:	mrs	x1, tpidr_el0
   38a88:	str	w23, [x1, x0]
   38a8c:	ldp	x21, x22, [sp, #32]
   38a90:	ldr	x23, [sp, #48]
   38a94:	mov	w0, w19
   38a98:	ldp	x19, x20, [sp, #16]
   38a9c:	ldp	x29, x30, [sp], #128
   38aa0:	ret
   38aa4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38aa8:	cmp	x0, x1
   38aac:	cset	w19, eq  // eq = none
   38ab0:	b	38a94 <mpfr_fits_intmax_p@@Base+0xec>
   38ab4:	add	w2, w2, #0x1
   38ab8:	cmp	w2, #0x40
   38abc:	b.ne	38ab4 <mpfr_fits_intmax_p@@Base+0x10c>  // b.any
   38ac0:	b	389f4 <mpfr_fits_intmax_p@@Base+0x4c>
   38ac4:	add	x20, sp, #0x40
   38ac8:	mov	x1, x19
   38acc:	mov	x0, x20
   38ad0:	bl	ca80 <mpfr_init2@plt>
   38ad4:	mov	w2, #0x0                   	// #0
   38ad8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   38adc:	mov	x0, x20
   38ae0:	bl	c080 <__gmpfr_set_sj@plt>
   38ae4:	mov	w2, #0x1                   	// #1
   38ae8:	mov	x1, x20
   38aec:	add	x0, sp, #0x60
   38af0:	bl	c9a0 <mpfr_cmp3@plt>
   38af4:	mvn	w19, w0
   38af8:	lsr	w19, w19, #31
   38afc:	mov	x0, x20
   38b00:	bl	c070 <mpfr_clear@plt>
   38b04:	b	38a6c <mpfr_fits_intmax_p@@Base+0xc4>
   38b08:	ldp	x21, x22, [sp, #32]
   38b0c:	b	38a94 <mpfr_fits_intmax_p@@Base+0xec>
   38b10:	ldp	x21, x22, [sp, #32]
   38b14:	b	38a94 <mpfr_fits_intmax_p@@Base+0xec>
   38b18:	ldp	x21, x22, [sp, #32]
   38b1c:	b	38a94 <mpfr_fits_intmax_p@@Base+0xec>

0000000000038b20 <mpfr_get_si@@Base>:
   38b20:	stp	x29, x30, [sp, #-112]!
   38b24:	mov	x29, sp
   38b28:	stp	x19, x20, [sp, #16]
   38b2c:	stp	x23, x24, [sp, #48]
   38b30:	mov	x19, x0
   38b34:	mov	w23, w1
   38b38:	bl	c790 <mpfr_fits_slong_p@plt>
   38b3c:	cbz	w0, 38c94 <mpfr_get_si@@Base+0x174>
   38b40:	ldr	x1, [x19, #16]
   38b44:	mov	x20, #0x0                   	// #0
   38b48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38b4c:	cmp	x1, x0
   38b50:	b.eq	38c80 <mpfr_get_si@@Base+0x160>  // b.none
   38b54:	stp	x21, x22, [sp, #32]
   38b58:	str	x25, [sp, #64]
   38b5c:	mov	x2, #0x0                   	// #0
   38b60:	add	x2, x2, #0x1
   38b64:	cmp	x2, #0x3f
   38b68:	b.ne	38b60 <mpfr_get_si@@Base+0x40>  // b.any
   38b6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38b70:	ldr	x1, [x0, #2576]
   38b74:	add	x0, x0, #0xa10
   38b78:	blr	x1
   38b7c:	mrs	x2, tpidr_el0
   38b80:	add	x25, x2, x0
   38b84:	ldr	w24, [x2, x0]
   38b88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38b8c:	ldr	x1, [x0, #2512]
   38b90:	add	x0, x0, #0x9d0
   38b94:	blr	x1
   38b98:	add	x1, x2, x0
   38b9c:	ldr	x22, [x2, x0]
   38ba0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38ba4:	ldr	x3, [x0, #2544]
   38ba8:	add	x0, x0, #0x9f0
   38bac:	blr	x3
   38bb0:	ldr	x21, [x2, x0]
   38bb4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   38bb8:	str	x3, [x1]
   38bbc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   38bc0:	str	x1, [x2, x0]
   38bc4:	add	x20, sp, #0x50
   38bc8:	mov	x1, #0x3f                  	// #63
   38bcc:	mov	x0, x20
   38bd0:	bl	ca80 <mpfr_init2@plt>
   38bd4:	mov	w2, w23
   38bd8:	mov	x1, x19
   38bdc:	mov	x0, x20
   38be0:	bl	c300 <mpfr_rint@plt>
   38be4:	ldr	w0, [x25]
   38be8:	orr	w24, w24, w0
   38bec:	ldr	x2, [sp, #96]
   38bf0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38bf4:	cmp	x2, x0
   38bf8:	b.eq	38cf4 <mpfr_get_si@@Base+0x1d4>  // b.none
   38bfc:	ldr	x1, [sp, #80]
   38c00:	add	x0, x1, #0x3e
   38c04:	subs	x1, x1, #0x1
   38c08:	csel	x0, x0, x1, mi  // mi = first
   38c0c:	asr	x0, x0, #6
   38c10:	ldr	x1, [sp, #104]
   38c14:	ldr	x0, [x1, x0, lsl #3]
   38c18:	neg	w2, w2
   38c1c:	lsr	x2, x0, x2
   38c20:	ldr	w0, [x19, #8]
   38c24:	mov	x20, x2
   38c28:	cmp	w0, #0x0
   38c2c:	b.le	38ce4 <mpfr_get_si@@Base+0x1c4>
   38c30:	add	x0, sp, #0x50
   38c34:	bl	c070 <mpfr_clear@plt>
   38c38:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38c3c:	ldr	x1, [x0, #2576]
   38c40:	add	x0, x0, #0xa10
   38c44:	blr	x1
   38c48:	mrs	x1, tpidr_el0
   38c4c:	str	w24, [x1, x0]
   38c50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38c54:	ldr	x2, [x0, #2512]
   38c58:	add	x0, x0, #0x9d0
   38c5c:	blr	x2
   38c60:	str	x22, [x1, x0]
   38c64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38c68:	ldr	x2, [x0, #2544]
   38c6c:	add	x0, x0, #0x9f0
   38c70:	blr	x2
   38c74:	str	x21, [x1, x0]
   38c78:	ldp	x21, x22, [sp, #32]
   38c7c:	ldr	x25, [sp, #64]
   38c80:	mov	x0, x20
   38c84:	ldp	x19, x20, [sp, #16]
   38c88:	ldp	x23, x24, [sp, #48]
   38c8c:	ldp	x29, x30, [sp], #112
   38c90:	ret
   38c94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38c98:	ldr	x1, [x0, #2576]
   38c9c:	add	x0, x0, #0xa10
   38ca0:	blr	x1
   38ca4:	mrs	x1, tpidr_el0
   38ca8:	add	x0, x1, x0
   38cac:	ldr	w1, [x0]
   38cb0:	orr	w1, w1, #0x10
   38cb4:	str	w1, [x0]
   38cb8:	ldr	x1, [x19, #16]
   38cbc:	mov	x20, #0x0                   	// #0
   38cc0:	mov	x0, #0x2                   	// #2
   38cc4:	movk	x0, #0x8000, lsl #48
   38cc8:	cmp	x1, x0
   38ccc:	b.eq	38c80 <mpfr_get_si@@Base+0x160>  // b.none
   38cd0:	ldr	w0, [x19, #8]
   38cd4:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   38cd8:	cmp	w0, #0x0
   38cdc:	cinv	x20, x20, lt  // lt = tstop
   38ce0:	b	38c80 <mpfr_get_si@@Base+0x160>
   38ce4:	cmp	x2, #0x0
   38ce8:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
   38cec:	csneg	x20, x20, x2, lt  // lt = tstop
   38cf0:	b	38c30 <mpfr_get_si@@Base+0x110>
   38cf4:	mov	x20, #0x0                   	// #0
   38cf8:	b	38c30 <mpfr_get_si@@Base+0x110>

0000000000038cfc <mpfr_get_ui@@Base>:
   38cfc:	stp	x29, x30, [sp, #-112]!
   38d00:	mov	x29, sp
   38d04:	stp	x19, x20, [sp, #16]
   38d08:	stp	x23, x24, [sp, #48]
   38d0c:	mov	x19, x0
   38d10:	mov	w23, w1
   38d14:	bl	be50 <mpfr_fits_ulong_p@plt>
   38d18:	cbz	w0, 38e60 <mpfr_get_ui@@Base+0x164>
   38d1c:	ldr	x1, [x19, #16]
   38d20:	mov	x20, #0x0                   	// #0
   38d24:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38d28:	cmp	x1, x0
   38d2c:	b.eq	38e4c <mpfr_get_ui@@Base+0x150>  // b.none
   38d30:	stp	x21, x22, [sp, #32]
   38d34:	str	x25, [sp, #64]
   38d38:	mov	x2, #0x0                   	// #0
   38d3c:	add	x2, x2, #0x1
   38d40:	cmp	x2, #0x40
   38d44:	b.ne	38d3c <mpfr_get_ui@@Base+0x40>  // b.any
   38d48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38d4c:	ldr	x1, [x0, #2576]
   38d50:	add	x0, x0, #0xa10
   38d54:	blr	x1
   38d58:	mrs	x2, tpidr_el0
   38d5c:	add	x25, x2, x0
   38d60:	ldr	w24, [x2, x0]
   38d64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38d68:	ldr	x1, [x0, #2512]
   38d6c:	add	x0, x0, #0x9d0
   38d70:	blr	x1
   38d74:	add	x1, x2, x0
   38d78:	ldr	x22, [x2, x0]
   38d7c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38d80:	ldr	x3, [x0, #2544]
   38d84:	add	x0, x0, #0x9f0
   38d88:	blr	x3
   38d8c:	ldr	x21, [x2, x0]
   38d90:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   38d94:	str	x3, [x1]
   38d98:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   38d9c:	str	x1, [x2, x0]
   38da0:	add	x20, sp, #0x50
   38da4:	mov	x1, #0x40                  	// #64
   38da8:	mov	x0, x20
   38dac:	bl	ca80 <mpfr_init2@plt>
   38db0:	mov	w2, w23
   38db4:	mov	x1, x19
   38db8:	mov	x0, x20
   38dbc:	bl	c300 <mpfr_rint@plt>
   38dc0:	ldr	w0, [x25]
   38dc4:	orr	w24, w24, w0
   38dc8:	ldr	x2, [sp, #96]
   38dcc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38dd0:	cmp	x2, x0
   38dd4:	b.eq	38eb0 <mpfr_get_ui@@Base+0x1b4>  // b.none
   38dd8:	ldr	x1, [sp, #80]
   38ddc:	add	x0, x1, #0x3e
   38de0:	subs	x1, x1, #0x1
   38de4:	csel	x0, x0, x1, mi  // mi = first
   38de8:	asr	x0, x0, #6
   38dec:	ldr	x1, [sp, #104]
   38df0:	ldr	x20, [x1, x0, lsl #3]
   38df4:	neg	w2, w2
   38df8:	lsr	x20, x20, x2
   38dfc:	add	x0, sp, #0x50
   38e00:	bl	c070 <mpfr_clear@plt>
   38e04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38e08:	ldr	x1, [x0, #2576]
   38e0c:	add	x0, x0, #0xa10
   38e10:	blr	x1
   38e14:	mrs	x1, tpidr_el0
   38e18:	str	w24, [x1, x0]
   38e1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38e20:	ldr	x2, [x0, #2512]
   38e24:	add	x0, x0, #0x9d0
   38e28:	blr	x2
   38e2c:	str	x22, [x1, x0]
   38e30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38e34:	ldr	x2, [x0, #2544]
   38e38:	add	x0, x0, #0x9f0
   38e3c:	blr	x2
   38e40:	str	x21, [x1, x0]
   38e44:	ldp	x21, x22, [sp, #32]
   38e48:	ldr	x25, [sp, #64]
   38e4c:	mov	x0, x20
   38e50:	ldp	x19, x20, [sp, #16]
   38e54:	ldp	x23, x24, [sp, #48]
   38e58:	ldp	x29, x30, [sp], #112
   38e5c:	ret
   38e60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   38e64:	ldr	x1, [x0, #2576]
   38e68:	add	x0, x0, #0xa10
   38e6c:	blr	x1
   38e70:	mrs	x1, tpidr_el0
   38e74:	add	x0, x1, x0
   38e78:	ldr	w1, [x0]
   38e7c:	orr	w1, w1, #0x10
   38e80:	str	w1, [x0]
   38e84:	ldr	x1, [x19, #16]
   38e88:	mov	x20, #0x0                   	// #0
   38e8c:	mov	x0, #0x2                   	// #2
   38e90:	movk	x0, #0x8000, lsl #48
   38e94:	cmp	x1, x0
   38e98:	b.eq	38e4c <mpfr_get_ui@@Base+0x150>  // b.none
   38e9c:	ldrsw	x20, [x19, #8]
   38ea0:	mov	x0, #0x0                   	// #0
   38ea4:	cmp	x20, x0
   38ea8:	csetm	x20, ge  // ge = tcont
   38eac:	b	38e4c <mpfr_get_ui@@Base+0x150>
   38eb0:	mov	x20, #0x0                   	// #0
   38eb4:	b	38dfc <mpfr_get_ui@@Base+0x100>
   38eb8:	sub	sp, sp, #0x300
   38ebc:	stp	x29, x30, [sp]
   38ec0:	mov	x29, sp
   38ec4:	stp	x19, x20, [sp, #16]
   38ec8:	stp	x21, x22, [sp, #32]
   38ecc:	stp	x23, x24, [sp, #48]
   38ed0:	stp	x25, x26, [sp, #64]
   38ed4:	str	x0, [sp, #176]
   38ed8:	mov	x22, x1
   38edc:	str	w2, [sp, #168]
   38ee0:	ldr	x24, [x0]
   38ee4:	ldr	x25, [x1]
   38ee8:	ldr	x0, [x1, #16]
   38eec:	cmp	x0, #0x3
   38ef0:	b.le	38f18 <mpfr_get_ui@@Base+0x21c>
   38ef4:	sub	x0, x0, #0x1
   38ef8:	mov	x2, #0x1                   	// #1
   38efc:	lsl	x2, x2, x0
   38f00:	cmp	x0, #0x3f
   38f04:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   38f08:	csel	x2, x2, x0, lt  // lt = tstop
   38f0c:	add	x0, x24, #0x1
   38f10:	cmp	x2, x0
   38f14:	b.hi	39198 <mpfr_get_ui@@Base+0x49c>  // b.pmore
   38f18:	cmp	x24, #0x1
   38f1c:	b.eq	391e4 <mpfr_get_ui@@Base+0x4e8>  // b.none
   38f20:	b.le	391bc <mpfr_get_ui@@Base+0x4c0>
   38f24:	stp	d8, d9, [sp, #96]
   38f28:	stp	d10, d11, [sp, #112]
   38f2c:	stp	d12, d13, [sp, #128]
   38f30:	sub	x21, x24, #0x1
   38f34:	clz	x0, x21
   38f38:	mov	w21, #0x40                  	// #64
   38f3c:	sub	w21, w21, w0
   38f40:	sxtw	x21, w21
   38f44:	add	x21, x21, x24
   38f48:	add	x21, x21, #0xa
   38f4c:	ldr	x1, [x22, #16]
   38f50:	cmp	x1, x25
   38f54:	add	x19, sp, #0x260
   38f58:	csel	x1, x1, x25, ge  // ge = tcont
   38f5c:	mov	x0, x19
   38f60:	bl	ca80 <mpfr_init2@plt>
   38f64:	mov	w3, #0x0                   	// #0
   38f68:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   38f6c:	ldr	x2, [x2, #3928]
   38f70:	mov	x1, x22
   38f74:	mov	x0, x19
   38f78:	bl	bb70 <mpfr_sub@plt>
   38f7c:	str	xzr, [sp, #464]
   38f80:	add	x2, sp, #0x1e0
   38f84:	str	x2, [sp, #472]
   38f88:	mov	x0, #0x1                   	// #1
   38f8c:	str	x0, [sp, #736]
   38f90:	str	x2, [sp, #760]
   38f94:	str	w0, [sp, #744]
   38f98:	str	x0, [sp, #704]
   38f9c:	add	x2, sp, #0x1e8
   38fa0:	str	x2, [sp, #728]
   38fa4:	str	w0, [sp, #712]
   38fa8:	str	x0, [sp, #672]
   38fac:	add	x2, sp, #0x1f0
   38fb0:	str	x2, [sp, #696]
   38fb4:	str	w0, [sp, #680]
   38fb8:	str	x0, [sp, #640]
   38fbc:	add	x1, sp, #0x1f8
   38fc0:	str	x1, [sp, #664]
   38fc4:	str	w0, [sp, #648]
   38fc8:	mov	x0, #0x40                  	// #64
   38fcc:	str	x0, [sp, #184]
   38fd0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   38fd4:	ldr	d9, [x0, #1576]
   38fd8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   38fdc:	ldr	d11, [x0, #1584]
   38fe0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   38fe4:	ldr	d10, [x0, #1592]
   38fe8:	add	x0, sp, #0x120
   38fec:	str	x0, [sp, #144]
   38ff0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   38ff4:	ldr	d12, [x0, #1600]
   38ff8:	sub	x26, x21, #0x3
   38ffc:	add	x0, x26, x26, lsr #63
   39000:	neg	x0, x0, asr #1
   39004:	ldr	x1, [sp, #624]
   39008:	cmp	x1, x0
   3900c:	b.gt	39214 <mpfr_get_ui@@Base+0x518>
   39010:	add	x0, x21, #0x2
   39014:	add	x20, x21, #0x3
   39018:	cmp	x0, x25
   3901c:	csel	x20, x20, x25, ge  // ge = tcont
   39020:	ldr	x1, [sp, #464]
   39024:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   39028:	cmp	x20, x0
   3902c:	b.ge	391f8 <mpfr_get_ui@@Base+0x4fc>  // b.tcont
   39030:	add	x19, x20, #0x3e
   39034:	subs	x0, x20, #0x1
   39038:	csel	x19, x19, x0, mi  // mi = first
   3903c:	asr	x19, x19, #6
   39040:	add	x19, x19, #0x1
   39044:	lsl	x0, x19, #5
   39048:	str	x0, [sp, #464]
   3904c:	cbnz	x1, 39200 <mpfr_get_ui@@Base+0x504>
   39050:	bl	ccf0 <mpfr_allocate_func@plt>
   39054:	str	x0, [sp, #472]
   39058:	str	x20, [sp, #736]
   3905c:	ldr	x1, [sp, #472]
   39060:	str	x1, [sp, #760]
   39064:	mov	w0, #0x1                   	// #1
   39068:	str	w0, [sp, #744]
   3906c:	str	x20, [sp, #704]
   39070:	add	x2, x1, x19, lsl #3
   39074:	str	x2, [sp, #728]
   39078:	str	w0, [sp, #712]
   3907c:	str	x20, [sp, #672]
   39080:	add	x2, x1, x19, lsl #4
   39084:	str	x2, [sp, #696]
   39088:	str	w0, [sp, #680]
   3908c:	str	x20, [sp, #640]
   39090:	add	x19, x19, x19, lsl #1
   39094:	add	x19, x1, x19, lsl #3
   39098:	str	x19, [sp, #664]
   3909c:	str	w0, [sp, #648]
   390a0:	add	x19, sp, #0x2a0
   390a4:	mov	w3, #0x0                   	// #0
   390a8:	add	x2, sp, #0x260
   390ac:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   390b0:	ldr	x1, [x1, #3928]
   390b4:	mov	x0, x19
   390b8:	bl	c620 <mpfr_div@plt>
   390bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   390c0:	ldr	x1, [x0, #2608]
   390c4:	add	x0, x0, #0xa30
   390c8:	blr	x1
   390cc:	add	x20, sp, #0x280
   390d0:	mov	w2, #0x0                   	// #0
   390d4:	mrs	x1, tpidr_el0
   390d8:	add	x1, x1, x0
   390dc:	mov	x0, x20
   390e0:	bl	c380 <mpfr_cache@plt>
   390e4:	mov	w3, #0x0                   	// #0
   390e8:	mov	x2, x20
   390ec:	mov	x1, x19
   390f0:	mov	x0, x19
   390f4:	bl	c1a0 <mpfr_add@plt>
   390f8:	ldr	x1, [sp, #688]
   390fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39100:	cmp	x1, x0
   39104:	b.le	399f4 <mpfr_get_ui@@Base+0xcf8>
   39108:	ldr	w0, [sp, #168]
   3910c:	cmp	w0, #0x0
   39110:	cinc	x3, x24, eq  // eq = none
   39114:	ldr	x0, [sp, #672]
   39118:	add	x1, x0, #0x3e
   3911c:	subs	x0, x0, #0x1
   39120:	csel	x1, x1, x0, mi  // mi = first
   39124:	asr	x1, x1, #6
   39128:	mov	x2, x26
   3912c:	add	x1, x1, #0x1
   39130:	ldr	x0, [sp, #696]
   39134:	bl	c370 <mpfr_round_p@plt>
   39138:	cbz	w0, 399f4 <mpfr_get_ui@@Base+0xcf8>
   3913c:	ldr	w3, [sp, #680]
   39140:	ldr	w2, [sp, #168]
   39144:	add	x1, sp, #0x2a0
   39148:	ldr	x0, [sp, #176]
   3914c:	bl	c6a0 <mpfr_set4@plt>
   39150:	mov	w19, w0
   39154:	ldr	x1, [sp, #464]
   39158:	cbz	x1, 39164 <mpfr_get_ui@@Base+0x468>
   3915c:	ldr	x0, [sp, #472]
   39160:	bl	cc20 <mpfr_free_func@plt>
   39164:	add	x0, sp, #0x260
   39168:	bl	c070 <mpfr_clear@plt>
   3916c:	ldp	d8, d9, [sp, #96]
   39170:	ldp	d10, d11, [sp, #112]
   39174:	ldp	d12, d13, [sp, #128]
   39178:	mov	w0, w19
   3917c:	ldp	x19, x20, [sp, #16]
   39180:	ldp	x21, x22, [sp, #32]
   39184:	ldp	x23, x24, [sp, #48]
   39188:	ldp	x25, x26, [sp, #64]
   3918c:	ldp	x29, x30, [sp]
   39190:	add	sp, sp, #0x300
   39194:	ret
   39198:	ldr	w4, [sp, #168]
   3919c:	mov	w3, #0x1                   	// #1
   391a0:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   391a4:	ldr	x1, [x1, #3928]
   391a8:	ldr	x0, [sp, #176]
   391ac:	bl	c540 <mpfr_round_near_x@plt>
   391b0:	mov	w19, w0
   391b4:	cbz	w0, 38f18 <mpfr_get_ui@@Base+0x21c>
   391b8:	b	39178 <mpfr_get_ui@@Base+0x47c>
   391bc:	stp	x27, x28, [sp, #80]
   391c0:	stp	d8, d9, [sp, #96]
   391c4:	stp	d10, d11, [sp, #112]
   391c8:	stp	d12, d13, [sp, #128]
   391cc:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   391d0:	add	x2, x2, #0x530
   391d4:	mov	w1, #0xb6                  	// #182
   391d8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   391dc:	add	x0, x0, #0x540
   391e0:	bl	cb40 <mpfr_assert_fail@plt>
   391e4:	stp	d8, d9, [sp, #96]
   391e8:	stp	d10, d11, [sp, #112]
   391ec:	stp	d12, d13, [sp, #128]
   391f0:	mov	x21, #0x0                   	// #0
   391f4:	b	38f44 <mpfr_get_ui@@Base+0x248>
   391f8:	stp	x27, x28, [sp, #80]
   391fc:	bl	c8e0 <mpfr_abort_prec_max@plt>
   39200:	mov	x2, x0
   39204:	ldr	x0, [sp, #472]
   39208:	bl	c1c0 <mpfr_reallocate_func@plt>
   3920c:	str	x0, [sp, #472]
   39210:	b	39058 <mpfr_get_ui@@Base+0x35c>
   39214:	stp	x27, x28, [sp, #80]
   39218:	scvtf	d13, x21
   3921c:	mov	w1, #0x0                   	// #0
   39220:	mov	x0, x22
   39224:	bl	bd30 <mpfr_get_d@plt>
   39228:	fmov	d8, d0
   3922c:	bl	bcd0 <__gmpfr_floor_log2@plt>
   39230:	scvtf	d1, x0
   39234:	fmul	d1, d1, d9
   39238:	fsub	d1, d11, d1
   3923c:	fmul	d1, d1, d8
   39240:	fmul	d0, d13, d9
   39244:	fadd	d0, d0, d10
   39248:	fadd	d1, d1, d0
   3924c:	fcmpe	d1, #0.0
   39250:	b.ls	39794 <mpfr_get_ui@@Base+0xa98>  // b.plast
   39254:	fcvtzs	w0, d1
   39258:	add	w0, w0, w0, lsr #31
   3925c:	asr	w0, w0, #1
   39260:	add	w0, w0, #0x1
   39264:	str	w0, [sp, #172]
   39268:	scvtf	d0, w0
   3926c:	fadd	d0, d0, d0
   39270:	fadd	d8, d0, d8
   39274:	fmov	d0, #1.000000000000000000e+00
   39278:	fsub	d8, d8, d0
   3927c:	fdiv	d8, d8, d12
   39280:	fcvtzs	w0, d8
   39284:	add	w0, w0, #0x1
   39288:	str	w0, [sp, #212]
   3928c:	cmp	x21, #0x1
   39290:	b.le	397b8 <mpfr_get_ui@@Base+0xabc>
   39294:	sub	x0, x21, #0x1
   39298:	clz	x1, x0
   3929c:	mov	w0, #0x40                  	// #64
   392a0:	sub	w0, w0, w1
   392a4:	add	w0, w0, w0, lsl #1
   392a8:	add	w19, w0, w0, lsr #31
   392ac:	asr	w19, w19, #1
   392b0:	add	w19, w19, #0x4
   392b4:	add	x19, x21, w19, sxtw
   392b8:	cmp	x25, x19
   392bc:	csel	x19, x25, x19, ge  // ge = tcont
   392c0:	ldr	w20, [sp, #172]
   392c4:	add	w0, w20, #0x1
   392c8:	sbfiz	x0, x0, #5, #32
   392cc:	str	x0, [sp, #216]
   392d0:	bl	ccf0 <mpfr_allocate_func@plt>
   392d4:	str	x0, [sp, #192]
   392d8:	mov	w1, w20
   392dc:	cmp	w20, #0x0
   392e0:	b.le	3930c <mpfr_get_ui@@Base+0x610>
   392e4:	add	x20, x0, #0x20
   392e8:	sub	w23, w1, #0x1
   392ec:	add	x23, x0, x23, lsl #5
   392f0:	add	x23, x23, #0x40
   392f4:	mov	x1, x19
   392f8:	mov	x0, x20
   392fc:	bl	ca80 <mpfr_init2@plt>
   39300:	add	x20, x20, #0x20
   39304:	cmp	x20, x23
   39308:	b.ne	392f4 <mpfr_get_ui@@Base+0x5f8>  // b.any
   3930c:	ldr	x1, [sp, #464]
   39310:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   39314:	cmp	x19, x0
   39318:	b.ge	397d0 <mpfr_get_ui@@Base+0xad4>  // b.tcont
   3931c:	add	x20, x19, #0x3e
   39320:	subs	x0, x19, #0x1
   39324:	csel	x20, x20, x0, mi  // mi = first
   39328:	asr	x20, x20, #6
   3932c:	add	x20, x20, #0x1
   39330:	lsl	x0, x20, #5
   39334:	str	x0, [sp, #464]
   39338:	cbnz	x1, 397d4 <mpfr_get_ui@@Base+0xad8>
   3933c:	bl	ccf0 <mpfr_allocate_func@plt>
   39340:	str	x0, [sp, #472]
   39344:	str	x19, [sp, #736]
   39348:	ldr	x1, [sp, #472]
   3934c:	str	x1, [sp, #760]
   39350:	mov	w0, #0x1                   	// #1
   39354:	str	w0, [sp, #744]
   39358:	str	x19, [sp, #704]
   3935c:	add	x2, x1, x20, lsl #3
   39360:	str	x2, [sp, #728]
   39364:	str	w0, [sp, #712]
   39368:	str	x19, [sp, #672]
   3936c:	add	x2, x1, x20, lsl #4
   39370:	str	x2, [sp, #696]
   39374:	str	w0, [sp, #680]
   39378:	str	x19, [sp, #640]
   3937c:	add	x20, x20, x20, lsl #1
   39380:	add	x20, x1, x20, lsl #3
   39384:	str	x20, [sp, #664]
   39388:	str	w0, [sp, #648]
   3938c:	ldr	w20, [sp, #172]
   39390:	cmp	w20, #0x0
   39394:	b.gt	397e8 <mpfr_get_ui@@Base+0xaec>
   39398:	ldr	x19, [sp, #672]
   3939c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   393a0:	cmp	x19, x0
   393a4:	b.ge	39920 <mpfr_get_ui@@Base+0xc24>  // b.tcont
   393a8:	add	x20, x19, #0x3e
   393ac:	subs	x0, x19, #0x1
   393b0:	csel	x20, x20, x0, mi  // mi = first
   393b4:	asr	x20, x20, #6
   393b8:	add	x20, x20, #0x1
   393bc:	lsl	x0, x20, #1
   393c0:	cmp	x0, #0x10
   393c4:	b.gt	39924 <mpfr_get_ui@@Base+0xc28>
   393c8:	str	xzr, [sp, #320]
   393cc:	add	x0, sp, #0x150
   393d0:	str	x0, [sp, #328]
   393d4:	str	x19, [sp, #256]
   393d8:	ldr	x1, [sp, #328]
   393dc:	str	x1, [sp, #280]
   393e0:	mov	w0, #0x1                   	// #1
   393e4:	str	w0, [sp, #264]
   393e8:	str	x19, [sp, #288]
   393ec:	add	x20, x1, x20, lsl #3
   393f0:	str	x20, [sp, #312]
   393f4:	str	w0, [sp, #296]
   393f8:	mov	w2, #0x0                   	// #0
   393fc:	mov	x1, x22
   39400:	ldr	x27, [sp, #144]
   39404:	mov	x0, x27
   39408:	bl	bd70 <mpfr_neg@plt>
   3940c:	ldr	w23, [sp, #212]
   39410:	sxtw	x20, w23
   39414:	str	x20, [sp, #160]
   39418:	add	x19, sp, #0x100
   3941c:	mov	w3, #0x0                   	// #0
   39420:	mov	x2, x27
   39424:	mov	x1, x20
   39428:	mov	x0, x19
   3942c:	bl	ca10 <mpfr_ui_pow@plt>
   39430:	mov	w3, #0x0                   	// #0
   39434:	mov	x2, #0x1                   	// #1
   39438:	mov	x1, x19
   3943c:	mov	x0, x19
   39440:	bl	c8f0 <mpfr_div_2ui@plt>
   39444:	ldr	w3, [sp, #264]
   39448:	mov	w2, #0x0                   	// #0
   3944c:	mov	x1, x19
   39450:	add	x0, sp, #0x2a0
   39454:	bl	c6a0 <mpfr_set4@plt>
   39458:	sub	w19, w23, #0x1
   3945c:	cmp	w19, #0x1
   39460:	b.le	394b0 <mpfr_get_ui@@Base+0x7b4>
   39464:	sxtw	x19, w19
   39468:	sub	x27, x20, #0x2
   3946c:	sub	w0, w23, #0x3
   39470:	sub	x27, x27, x0
   39474:	add	x23, sp, #0x100
   39478:	add	x20, sp, #0x2a0
   3947c:	mov	w3, #0x0                   	// #0
   39480:	ldr	x2, [sp, #144]
   39484:	mov	x1, x19
   39488:	mov	x0, x23
   3948c:	bl	ca10 <mpfr_ui_pow@plt>
   39490:	mov	w3, #0x0                   	// #0
   39494:	mov	x2, x23
   39498:	mov	x1, x20
   3949c:	mov	x0, x20
   394a0:	bl	c1a0 <mpfr_add@plt>
   394a4:	sub	x19, x19, #0x1
   394a8:	cmp	x19, x27
   394ac:	b.ne	3947c <mpfr_get_ui@@Base+0x780>  // b.any
   394b0:	add	x0, sp, #0x2a0
   394b4:	mov	w3, #0x0                   	// #0
   394b8:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   394bc:	ldr	x2, [x2, #3928]
   394c0:	mov	x1, x0
   394c4:	bl	c1a0 <mpfr_add@plt>
   394c8:	ldr	x1, [sp, #320]
   394cc:	cbz	x1, 394d8 <mpfr_get_ui@@Base+0x7dc>
   394d0:	ldr	x0, [sp, #328]
   394d4:	bl	cc20 <mpfr_free_func@plt>
   394d8:	ldr	w0, [sp, #172]
   394dc:	cbz	w0, 39938 <mpfr_get_ui@@Base+0xc3c>
   394e0:	ldr	w0, [sp, #212]
   394e4:	mul	w0, w0, w0
   394e8:	sxtw	x0, w0
   394ec:	str	x0, [sp, #152]
   394f0:	ldr	x19, [sp, #736]
   394f4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   394f8:	cmp	x19, x0
   394fc:	b.ge	399c4 <mpfr_get_ui@@Base+0xcc8>  // b.tcont
   39500:	add	x20, x19, #0x3e
   39504:	subs	x0, x19, #0x1
   39508:	csel	x20, x20, x0, mi  // mi = first
   3950c:	asr	x20, x20, #6
   39510:	add	x20, x20, #0x1
   39514:	add	x0, x20, x20, lsl #1
   39518:	cmp	x0, #0x10
   3951c:	b.gt	399c8 <mpfr_get_ui@@Base+0xccc>
   39520:	str	xzr, [sp, #320]
   39524:	add	x0, sp, #0x150
   39528:	str	x0, [sp, #328]
   3952c:	str	x19, [sp, #224]
   39530:	ldr	x1, [sp, #328]
   39534:	str	x1, [sp, #248]
   39538:	mov	w0, #0x1                   	// #1
   3953c:	str	w0, [sp, #232]
   39540:	str	x19, [sp, #256]
   39544:	add	x2, x1, x20, lsl #3
   39548:	str	x2, [sp, #280]
   3954c:	str	w0, [sp, #264]
   39550:	str	x19, [sp, #288]
   39554:	add	x20, x1, x20, lsl #4
   39558:	str	x20, [sp, #312]
   3955c:	str	w0, [sp, #296]
   39560:	ldr	w19, [sp, #172]
   39564:	sub	w20, w19, #0x1
   39568:	lsl	w20, w20, #1
   3956c:	sxtw	x23, w19
   39570:	ldr	x0, [sp, #216]
   39574:	sub	x1, x0, #0x20
   39578:	ldr	x27, [sp, #192]
   3957c:	add	x1, x27, x1
   39580:	ldr	w3, [x1, #8]
   39584:	mov	w2, #0x0                   	// #0
   39588:	add	x0, sp, #0x100
   3958c:	bl	c6a0 <mpfr_set4@plt>
   39590:	cmp	w19, #0x1
   39594:	b.le	39654 <mpfr_get_ui@@Base+0x958>
   39598:	sxtw	x20, w20
   3959c:	sub	x23, x23, #0x1
   395a0:	add	x23, x27, x23, lsl #5
   395a4:	sub	x0, x20, #0x2
   395a8:	sub	w28, w19, #0x2
   395ac:	sub	x28, x0, x28, lsl #1
   395b0:	add	x27, sp, #0xe0
   395b4:	add	x19, sp, #0x100
   395b8:	mov	w3, #0x0                   	// #0
   395bc:	mov	x2, x20
   395c0:	mov	x1, x22
   395c4:	mov	x0, x27
   395c8:	bl	c260 <mpfr_add_ui@plt>
   395cc:	mov	w3, #0x0                   	// #0
   395d0:	mov	x2, x27
   395d4:	mov	x1, x19
   395d8:	mov	x0, x19
   395dc:	bl	bd50 <mpfr_mul@plt>
   395e0:	mov	w3, #0x0                   	// #0
   395e4:	sub	x2, x20, #0x1
   395e8:	mov	x1, x22
   395ec:	mov	x0, x27
   395f0:	bl	c260 <mpfr_add_ui@plt>
   395f4:	mov	w3, #0x0                   	// #0
   395f8:	mov	x2, x27
   395fc:	mov	x1, x19
   39600:	mov	x0, x19
   39604:	bl	bd50 <mpfr_mul@plt>
   39608:	mov	w3, #0x0                   	// #0
   3960c:	ldr	x2, [sp, #152]
   39610:	mov	x1, x19
   39614:	mov	x0, x19
   39618:	bl	cc60 <mpfr_div_ui@plt>
   3961c:	mov	w3, #0x0                   	// #0
   39620:	mov	x2, x23
   39624:	mov	x1, x19
   39628:	mov	x0, x19
   3962c:	bl	c1a0 <mpfr_add@plt>
   39630:	mov	x1, x23
   39634:	mov	x0, x19
   39638:	bl	c9b0 <mpfr_cmpabs@plt>
   3963c:	cmp	w0, #0x0
   39640:	b.gt	399dc <mpfr_get_ui@@Base+0xce0>
   39644:	sub	x20, x20, #0x2
   39648:	sub	x23, x23, #0x20
   3964c:	cmp	x20, x28
   39650:	b.ne	395b8 <mpfr_get_ui@@Base+0x8bc>  // b.any
   39654:	add	x20, sp, #0x100
   39658:	mov	w3, #0x0                   	// #0
   3965c:	mov	x2, x22
   39660:	mov	x1, x20
   39664:	mov	x0, x20
   39668:	bl	bd50 <mpfr_mul@plt>
   3966c:	add	x19, sp, #0xe0
   39670:	mov	w3, #0x0                   	// #0
   39674:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   39678:	ldr	x2, [x2, #3928]
   3967c:	mov	x1, x22
   39680:	mov	x0, x19
   39684:	bl	c1a0 <mpfr_add@plt>
   39688:	mov	w2, #0x0                   	// #0
   3968c:	mov	x1, x19
   39690:	mov	x0, x19
   39694:	bl	bd70 <mpfr_neg@plt>
   39698:	mov	w3, #0x0                   	// #0
   3969c:	mov	x2, x19
   396a0:	ldr	x1, [sp, #160]
   396a4:	ldr	x19, [sp, #144]
   396a8:	mov	x0, x19
   396ac:	bl	ca10 <mpfr_ui_pow@plt>
   396b0:	mov	w3, #0x0                   	// #0
   396b4:	mov	x2, x19
   396b8:	mov	x1, x20
   396bc:	add	x0, sp, #0x2e0
   396c0:	bl	bd50 <mpfr_mul@plt>
   396c4:	ldr	x1, [sp, #320]
   396c8:	cbz	x1, 396d4 <mpfr_get_ui@@Base+0x9d8>
   396cc:	ldr	x0, [sp, #328]
   396d0:	bl	cc20 <mpfr_free_func@plt>
   396d4:	add	x23, sp, #0x260
   396d8:	add	x20, sp, #0x2c0
   396dc:	mov	w3, #0x0                   	// #0
   396e0:	mov	x2, x23
   396e4:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   396e8:	ldr	x1, [x1, #3928]
   396ec:	mov	x0, x20
   396f0:	bl	c620 <mpfr_div@plt>
   396f4:	add	x19, sp, #0x280
   396f8:	mov	w3, #0x0                   	// #0
   396fc:	mov	x2, x23
   39700:	ldr	x1, [sp, #160]
   39704:	mov	x0, x19
   39708:	bl	ca10 <mpfr_ui_pow@plt>
   3970c:	mov	w3, #0x0                   	// #0
   39710:	mov	x2, x19
   39714:	mov	x1, x20
   39718:	mov	x0, x20
   3971c:	bl	c620 <mpfr_div@plt>
   39720:	add	x19, sp, #0x2a0
   39724:	mov	w3, #0x0                   	// #0
   39728:	mov	x2, x20
   3972c:	mov	x1, x19
   39730:	mov	x0, x19
   39734:	bl	c1a0 <mpfr_add@plt>
   39738:	mov	w3, #0x0                   	// #0
   3973c:	add	x2, sp, #0x2e0
   39740:	mov	x1, x19
   39744:	mov	x0, x19
   39748:	bl	c1a0 <mpfr_add@plt>
   3974c:	ldr	w0, [sp, #172]
   39750:	cmp	w0, #0x0
   39754:	b.le	39780 <mpfr_get_ui@@Base+0xa84>
   39758:	ldr	x1, [sp, #192]
   3975c:	add	x19, x1, #0x20
   39760:	sub	w20, w0, #0x1
   39764:	add	x20, x1, x20, lsl #5
   39768:	add	x20, x20, #0x40
   3976c:	mov	x0, x19
   39770:	bl	c070 <mpfr_clear@plt>
   39774:	add	x19, x19, #0x20
   39778:	cmp	x20, x19
   3977c:	b.ne	3976c <mpfr_get_ui@@Base+0xa70>  // b.any
   39780:	ldr	x1, [sp, #216]
   39784:	ldr	x0, [sp, #192]
   39788:	bl	cc20 <mpfr_free_func@plt>
   3978c:	ldp	x27, x28, [sp, #80]
   39790:	b	390f8 <mpfr_get_ui@@Base+0x3fc>
   39794:	fmov	d0, #1.000000000000000000e+00
   39798:	fsub	d0, d13, d0
   3979c:	fdiv	d0, d0, d8
   397a0:	bl	bb40 <__gmpfr_ceil_exp2@plt>
   397a4:	fcvtzs	w0, d0
   397a8:	add	w0, w0, #0x1
   397ac:	str	w0, [sp, #212]
   397b0:	str	wzr, [sp, #172]
   397b4:	b	3928c <mpfr_get_ui@@Base+0x590>
   397b8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   397bc:	add	x2, x2, #0x548
   397c0:	mov	w1, #0xef                  	// #239
   397c4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   397c8:	add	x0, x0, #0x540
   397cc:	bl	cb40 <mpfr_assert_fail@plt>
   397d0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   397d4:	mov	x2, x0
   397d8:	ldr	x0, [sp, #472]
   397dc:	bl	c1c0 <mpfr_reallocate_func@plt>
   397e0:	str	x0, [sp, #472]
   397e4:	b	39344 <mpfr_get_ui@@Base+0x648>
   397e8:	ldr	x23, [sp, #192]
   397ec:	add	x19, x23, #0x20
   397f0:	ldr	x1, [x23, #32]
   397f4:	add	x0, sp, #0x140
   397f8:	bl	ca80 <mpfr_init2@plt>
   397fc:	mov	w3, #0x0                   	// #0
   39800:	mov	x2, #0xc                   	// #12
   39804:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   39808:	ldr	x1, [x1, #3928]
   3980c:	mov	x0, x19
   39810:	bl	cc60 <mpfr_div_ui@plt>
   39814:	cmp	w20, #0x1
   39818:	b.le	39914 <mpfr_get_ui@@Base+0xc18>
   3981c:	add	x27, x23, #0x40
   39820:	str	x27, [sp, #200]
   39824:	add	w0, w20, #0x1
   39828:	str	w0, [sp, #208]
   3982c:	mov	x0, #0x1e                  	// #30
   39830:	str	x0, [sp, #152]
   39834:	mov	x0, #0x1                   	// #1
   39838:	str	x0, [sp, #160]
   3983c:	mov	w28, #0x2                   	// #2
   39840:	add	x20, sp, #0x140
   39844:	b	39894 <mpfr_get_ui@@Base+0xb98>
   39848:	mov	w3, #0x0                   	// #0
   3984c:	mov	x2, #0x18                  	// #24
   39850:	mov	x1, x20
   39854:	mov	x0, x27
   39858:	bl	cc60 <mpfr_div_ui@plt>
   3985c:	ldr	w0, [x27, #8]
   39860:	neg	w0, w0
   39864:	str	w0, [x27, #8]
   39868:	add	w28, w28, #0x1
   3986c:	ldr	x0, [sp, #160]
   39870:	add	x0, x0, #0x1
   39874:	str	x0, [sp, #160]
   39878:	ldr	x0, [sp, #152]
   3987c:	add	x0, x0, #0xc
   39880:	str	x0, [sp, #152]
   39884:	add	x27, x27, #0x20
   39888:	ldr	w0, [sp, #208]
   3988c:	cmp	w0, w28
   39890:	b.eq	39914 <mpfr_get_ui@@Base+0xc18>  // b.none
   39894:	mov	w3, #0x0                   	// #0
   39898:	mov	x2, #0x0                   	// #0
   3989c:	ldr	x19, [sp, #160]
   398a0:	mov	x1, x19
   398a4:	mov	x0, x20
   398a8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   398ac:	mov	w3, #0x0                   	// #0
   398b0:	ldr	x2, [sp, #152]
   398b4:	mov	x1, x20
   398b8:	mov	x0, x20
   398bc:	bl	cc60 <mpfr_div_ui@plt>
   398c0:	cmp	w28, #0x2
   398c4:	b.le	39848 <mpfr_get_ui@@Base+0xb4c>
   398c8:	ldr	x23, [sp, #200]
   398cc:	lsl	w2, w19, #1
   398d0:	madd	w2, w2, w19, w19
   398d4:	lsl	w2, w2, #3
   398d8:	mov	w3, #0x0                   	// #0
   398dc:	sxtw	x2, w2
   398e0:	mov	x1, x20
   398e4:	mov	x0, x20
   398e8:	bl	cc60 <mpfr_div_ui@plt>
   398ec:	mov	w3, #0x0                   	// #0
   398f0:	mov	x2, x23
   398f4:	mov	x1, x20
   398f8:	mov	x0, x20
   398fc:	bl	c1a0 <mpfr_add@plt>
   39900:	sub	w19, w19, #0x1
   39904:	add	x23, x23, #0x20
   39908:	cmp	w19, #0x1
   3990c:	b.ne	398cc <mpfr_get_ui@@Base+0xbd0>  // b.any
   39910:	b	39848 <mpfr_get_ui@@Base+0xb4c>
   39914:	add	x0, sp, #0x140
   39918:	bl	c070 <mpfr_clear@plt>
   3991c:	b	39398 <mpfr_get_ui@@Base+0x69c>
   39920:	bl	c8e0 <mpfr_abort_prec_max@plt>
   39924:	lsl	x0, x20, #4
   39928:	str	x0, [sp, #320]
   3992c:	bl	ccf0 <mpfr_allocate_func@plt>
   39930:	str	x0, [sp, #328]
   39934:	b	393d4 <mpfr_get_ui@@Base+0x6d8>
   39938:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3993c:	str	x0, [sp, #752]
   39940:	mov	w0, #0x1                   	// #1
   39944:	str	w0, [sp, #744]
   39948:	add	x23, sp, #0x260
   3994c:	add	x20, sp, #0x2c0
   39950:	mov	w3, #0x0                   	// #0
   39954:	mov	x2, x23
   39958:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   3995c:	ldr	x1, [x1, #3928]
   39960:	mov	x0, x20
   39964:	bl	c620 <mpfr_div@plt>
   39968:	add	x19, sp, #0x280
   3996c:	mov	w3, #0x0                   	// #0
   39970:	mov	x2, x23
   39974:	ldr	x1, [sp, #160]
   39978:	mov	x0, x19
   3997c:	bl	ca10 <mpfr_ui_pow@plt>
   39980:	mov	w3, #0x0                   	// #0
   39984:	mov	x2, x19
   39988:	mov	x1, x20
   3998c:	mov	x0, x20
   39990:	bl	c620 <mpfr_div@plt>
   39994:	add	x19, sp, #0x2a0
   39998:	mov	w3, #0x0                   	// #0
   3999c:	mov	x2, x20
   399a0:	mov	x1, x19
   399a4:	mov	x0, x19
   399a8:	bl	c1a0 <mpfr_add@plt>
   399ac:	mov	w3, #0x0                   	// #0
   399b0:	add	x2, sp, #0x2e0
   399b4:	mov	x1, x19
   399b8:	mov	x0, x19
   399bc:	bl	c1a0 <mpfr_add@plt>
   399c0:	b	39780 <mpfr_get_ui@@Base+0xa84>
   399c4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   399c8:	lsl	x0, x0, #3
   399cc:	str	x0, [sp, #320]
   399d0:	bl	ccf0 <mpfr_allocate_func@plt>
   399d4:	str	x0, [sp, #328]
   399d8:	b	3952c <mpfr_get_ui@@Base+0x830>
   399dc:	ldr	w3, [x23, #8]
   399e0:	mov	w2, #0x0                   	// #0
   399e4:	mov	x1, x23
   399e8:	mov	x0, x19
   399ec:	bl	c6a0 <mpfr_set4@plt>
   399f0:	b	39644 <mpfr_get_ui@@Base+0x948>
   399f4:	mov	x0, #0xfffffffffffffeff    	// #-257
   399f8:	movk	x0, #0x7fff, lsl #48
   399fc:	sub	x0, x0, x21
   39a00:	ldr	x1, [sp, #184]
   39a04:	cmp	x0, x1
   39a08:	b.lt	39a24 <mpfr_get_ui@@Base+0xd28>  // b.tstop
   39a0c:	ldr	x0, [sp, #184]
   39a10:	add	x21, x21, x0
   39a14:	add	x0, x21, x21, lsr #63
   39a18:	asr	x0, x0, #1
   39a1c:	str	x0, [sp, #184]
   39a20:	b	38ff8 <mpfr_get_ui@@Base+0x2fc>
   39a24:	stp	x27, x28, [sp, #80]
   39a28:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   39a2c:	add	x2, x2, #0x550
   39a30:	mov	w1, #0x112                 	// #274
   39a34:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   39a38:	add	x0, x0, #0x540
   39a3c:	bl	cb40 <mpfr_assert_fail@plt>
   39a40:	stp	x29, x30, [sp, #-96]!
   39a44:	mov	x29, sp
   39a48:	stp	x19, x20, [sp, #16]
   39a4c:	stp	x21, x22, [sp, #32]
   39a50:	stp	x23, x24, [sp, #48]
   39a54:	str	x25, [sp, #64]
   39a58:	mov	x20, x0
   39a5c:	mov	x23, x1
   39a60:	mov	x24, x2
   39a64:	mov	x19, x3
   39a68:	mov	x25, x4
   39a6c:	mov	w21, w5
   39a70:	add	x22, sp, #0x50
   39a74:	mov	x0, x22
   39a78:	bl	bf90 <mpfr_mpz_init@plt>
   39a7c:	mov	w2, #0x3                   	// #3
   39a80:	mov	x1, x24
   39a84:	mov	x0, x22
   39a88:	bl	be00 <mpfr_get_z@plt>
   39a8c:	mov	x1, #0x0                   	// #0
   39a90:	mov	x0, x22
   39a94:	bl	bfe0 <__gmpz_tstbit@plt>
   39a98:	cbz	w0, 39bd8 <mpfr_get_ui@@Base+0xedc>
   39a9c:	cmp	w21, #0x3
   39aa0:	b.eq	39c00 <mpfr_get_ui@@Base+0xf04>  // b.none
   39aa4:	mov	w3, #0x5                   	// #5
   39aa8:	sub	w3, w3, w21
   39aac:	mov	x2, x24
   39ab0:	mov	x1, x25
   39ab4:	mov	x0, x19
   39ab8:	bl	bd50 <mpfr_mul@plt>
   39abc:	mov	w3, #0x0                   	// #0
   39ac0:	mov	x2, #0x1                   	// #1
   39ac4:	mov	x1, x19
   39ac8:	mov	x0, x19
   39acc:	bl	c8f0 <mpfr_div_2ui@plt>
   39ad0:	mov	x1, #0x1                   	// #1
   39ad4:	add	x0, sp, #0x50
   39ad8:	bl	bfe0 <__gmpz_tstbit@plt>
   39adc:	cbz	w0, 39c0c <mpfr_get_ui@@Base+0xf10>
   39ae0:	mov	w2, #0x5                   	// #5
   39ae4:	sub	w2, w2, w21
   39ae8:	mov	x1, x19
   39aec:	mov	x0, x19
   39af0:	bl	c450 <mpfr_sin@plt>
   39af4:	mov	w3, #0x1                   	// #1
   39af8:	mov	w2, #0x0                   	// #0
   39afc:	mov	x1, x19
   39b00:	mov	x0, x19
   39b04:	bl	c6a0 <mpfr_set4@plt>
   39b08:	add	x0, sp, #0x50
   39b0c:	bl	c170 <mpfr_mpz_clear@plt>
   39b10:	mov	w2, w21
   39b14:	mov	x1, x23
   39b18:	mov	x0, x20
   39b1c:	bl	38eb8 <mpfr_get_ui@@Base+0x1bc>
   39b20:	mov	w3, w21
   39b24:	mov	x2, x19
   39b28:	mov	x1, x20
   39b2c:	mov	x0, x20
   39b30:	bl	bd50 <mpfr_mul@plt>
   39b34:	mov	w2, w21
   39b38:	mov	x1, x20
   39b3c:	mov	x0, x20
   39b40:	bl	c090 <mpfr_log@plt>
   39b44:	mov	w2, w21
   39b48:	mov	x1, x23
   39b4c:	mov	x0, x19
   39b50:	bl	c600 <mpfr_lngamma@plt>
   39b54:	mov	w3, w21
   39b58:	mov	x2, x19
   39b5c:	mov	x1, x20
   39b60:	mov	x0, x20
   39b64:	bl	c1a0 <mpfr_add@plt>
   39b68:	cmp	w21, #0x2
   39b6c:	b.eq	39c20 <mpfr_get_ui@@Base+0xf24>  // b.none
   39b70:	mov	w3, #0x2                   	// #2
   39b74:	mov	x2, #0x1                   	// #1
   39b78:	mov	x1, x25
   39b7c:	mov	x0, x19
   39b80:	bl	c2c0 <mpfr_mul_2ui@plt>
   39b84:	mov	w2, #0x2                   	// #2
   39b88:	mov	x1, x19
   39b8c:	mov	x0, x19
   39b90:	bl	c090 <mpfr_log@plt>
   39b94:	mov	w3, #0x2                   	// #2
   39b98:	mov	x2, x23
   39b9c:	mov	x1, x19
   39ba0:	mov	x0, x19
   39ba4:	bl	bd50 <mpfr_mul@plt>
   39ba8:	mov	w3, #0x3                   	// #3
   39bac:	mov	x2, x19
   39bb0:	mov	x1, x20
   39bb4:	mov	x0, x20
   39bb8:	bl	bb70 <mpfr_sub@plt>
   39bbc:	mov	w2, #0x3                   	// #3
   39bc0:	mov	x1, x20
   39bc4:	mov	x0, x20
   39bc8:	bl	c750 <mpfr_exp@plt>
   39bcc:	mov	x0, x25
   39bd0:	bl	bdd0 <mpfr_nextbelow@plt>
   39bd4:	b	39c7c <mpfr_get_ui@@Base+0xf80>
   39bd8:	mov	w3, w21
   39bdc:	mov	x2, x24
   39be0:	mov	x1, x25
   39be4:	mov	x0, x19
   39be8:	bl	bd50 <mpfr_mul@plt>
   39bec:	cmp	w21, #0x3
   39bf0:	b.ne	39abc <mpfr_get_ui@@Base+0xdc0>  // b.any
   39bf4:	mov	x0, x25
   39bf8:	bl	c120 <mpfr_nextabove@plt>
   39bfc:	b	39abc <mpfr_get_ui@@Base+0xdc0>
   39c00:	mov	x0, x25
   39c04:	bl	c120 <mpfr_nextabove@plt>
   39c08:	b	39aa4 <mpfr_get_ui@@Base+0xda8>
   39c0c:	mov	w2, w21
   39c10:	mov	x1, x19
   39c14:	mov	x0, x19
   39c18:	bl	c450 <mpfr_sin@plt>
   39c1c:	b	39b08 <mpfr_get_ui@@Base+0xe0c>
   39c20:	mov	w3, #0x3                   	// #3
   39c24:	mov	x2, #0x1                   	// #1
   39c28:	mov	x1, x25
   39c2c:	mov	x0, x19
   39c30:	bl	c2c0 <mpfr_mul_2ui@plt>
   39c34:	mov	w2, #0x3                   	// #3
   39c38:	mov	x1, x19
   39c3c:	mov	x0, x19
   39c40:	bl	c090 <mpfr_log@plt>
   39c44:	mov	w3, #0x3                   	// #3
   39c48:	mov	x2, x23
   39c4c:	mov	x1, x19
   39c50:	mov	x0, x19
   39c54:	bl	bd50 <mpfr_mul@plt>
   39c58:	mov	w3, #0x2                   	// #2
   39c5c:	mov	x2, x19
   39c60:	mov	x1, x20
   39c64:	mov	x0, x20
   39c68:	bl	bb70 <mpfr_sub@plt>
   39c6c:	mov	w2, #0x2                   	// #2
   39c70:	mov	x1, x20
   39c74:	mov	x0, x20
   39c78:	bl	c750 <mpfr_exp@plt>
   39c7c:	ldp	x19, x20, [sp, #16]
   39c80:	ldp	x21, x22, [sp, #32]
   39c84:	ldp	x23, x24, [sp, #48]
   39c88:	ldr	x25, [sp, #64]
   39c8c:	ldp	x29, x30, [sp], #96
   39c90:	ret

0000000000039c94 <mpfr_zeta@@Base>:
   39c94:	sub	sp, sp, #0x210
   39c98:	stp	x29, x30, [sp]
   39c9c:	mov	x29, sp
   39ca0:	stp	x19, x20, [sp, #16]
   39ca4:	stp	x21, x22, [sp, #32]
   39ca8:	stp	x23, x24, [sp, #48]
   39cac:	mov	x20, x0
   39cb0:	mov	x19, x1
   39cb4:	mov	w23, w2
   39cb8:	ldr	x0, [x1, #16]
   39cbc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   39cc0:	cmp	x0, x1
   39cc4:	b.le	39d90 <mpfr_zeta@@Base+0xfc>
   39cc8:	add	x2, x0, #0x1
   39ccc:	ldr	x1, [x20]
   39cd0:	neg	x1, x1
   39cd4:	cmp	x2, x1
   39cd8:	b.lt	39e58 <mpfr_zeta@@Base+0x1c4>  // b.tstop
   39cdc:	ldr	w1, [x19, #8]
   39ce0:	tbnz	w1, #31, 39f3c <mpfr_zeta@@Base+0x2a8>
   39ce4:	mov	w2, #0x1                   	// #1
   39ce8:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   39cec:	ldr	x1, [x1, #3928]
   39cf0:	mov	x0, x19
   39cf4:	bl	c9a0 <mpfr_cmp3@plt>
   39cf8:	mov	w21, w0
   39cfc:	cbz	w0, 39f78 <mpfr_zeta@@Base+0x2e4>
   39d00:	stp	x27, x28, [sp, #80]
   39d04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39d08:	ldr	x1, [x0, #2576]
   39d0c:	add	x0, x0, #0xa10
   39d10:	blr	x1
   39d14:	mrs	x1, tpidr_el0
   39d18:	ldr	w0, [x1, x0]
   39d1c:	str	w0, [sp, #152]
   39d20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39d24:	ldr	x2, [x0, #2512]
   39d28:	add	x0, x0, #0x9d0
   39d2c:	blr	x2
   39d30:	add	x2, x1, x0
   39d34:	ldr	x0, [x1, x0]
   39d38:	str	x0, [sp, #120]
   39d3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39d40:	ldr	x3, [x0, #2544]
   39d44:	add	x0, x0, #0x9f0
   39d48:	blr	x3
   39d4c:	ldr	x3, [x1, x0]
   39d50:	str	x3, [sp, #128]
   39d54:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   39d58:	str	x3, [x2]
   39d5c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   39d60:	str	x2, [x1, x0]
   39d64:	ldr	w0, [x19, #8]
   39d68:	cmp	w0, #0x0
   39d6c:	b.le	39fe0 <mpfr_zeta@@Base+0x34c>
   39d70:	ldr	x0, [x19, #16]
   39d74:	tbz	x0, #63, 39fc8 <mpfr_zeta@@Base+0x334>
   39d78:	stp	x25, x26, [sp, #64]
   39d7c:	ldr	x28, [x20]
   39d80:	ldr	x24, [x19]
   39d84:	add	x24, x24, #0x2
   39d88:	neg	x1, x0
   39d8c:	b	3a000 <mpfr_zeta@@Base+0x36c>
   39d90:	mov	x1, #0x2                   	// #2
   39d94:	movk	x1, #0x8000, lsl #48
   39d98:	cmp	x0, x1
   39d9c:	b.eq	39df0 <mpfr_zeta@@Base+0x15c>  // b.none
   39da0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   39da4:	cmp	x0, x1
   39da8:	b.ne	39e3c <mpfr_zeta@@Base+0x1a8>  // b.any
   39dac:	ldr	w0, [x19, #8]
   39db0:	cmp	w0, #0x0
   39db4:	b.gt	39e20 <mpfr_zeta@@Base+0x18c>
   39db8:	mov	x0, #0x2                   	// #2
   39dbc:	movk	x0, #0x8000, lsl #48
   39dc0:	str	x0, [x20, #16]
   39dc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39dc8:	ldr	x1, [x0, #2576]
   39dcc:	add	x0, x0, #0xa10
   39dd0:	blr	x1
   39dd4:	mrs	x1, tpidr_el0
   39dd8:	add	x0, x1, x0
   39ddc:	ldr	w1, [x0]
   39de0:	orr	w1, w1, #0x4
   39de4:	str	w1, [x0]
   39de8:	mov	w21, #0x0                   	// #0
   39dec:	b	39fac <mpfr_zeta@@Base+0x318>
   39df0:	str	x1, [x20, #16]
   39df4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39df8:	ldr	x1, [x0, #2576]
   39dfc:	add	x0, x0, #0xa10
   39e00:	blr	x1
   39e04:	mrs	x1, tpidr_el0
   39e08:	add	x0, x1, x0
   39e0c:	ldr	w1, [x0]
   39e10:	orr	w1, w1, #0x4
   39e14:	str	w1, [x0]
   39e18:	mov	w21, #0x0                   	// #0
   39e1c:	b	39fac <mpfr_zeta@@Base+0x318>
   39e20:	mov	w3, #0x0                   	// #0
   39e24:	mov	x2, #0x0                   	// #0
   39e28:	mov	x1, #0x1                   	// #1
   39e2c:	mov	x0, x20
   39e30:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   39e34:	mov	w21, w0
   39e38:	b	39fac <mpfr_zeta@@Base+0x318>
   39e3c:	mov	w3, w2
   39e40:	mov	x2, #0xffffffffffffffff    	// #-1
   39e44:	mov	x1, x2
   39e48:	mov	x0, x20
   39e4c:	bl	ba80 <mpfr_set_si_2exp@plt>
   39e50:	mov	w21, w0
   39e54:	b	39fac <mpfr_zeta@@Base+0x318>
   39e58:	ldr	w21, [x19, #8]
   39e5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39e60:	ldr	x1, [x0, #2576]
   39e64:	add	x0, x0, #0xa10
   39e68:	blr	x1
   39e6c:	mrs	x1, tpidr_el0
   39e70:	ldr	w19, [x1, x0]
   39e74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39e78:	ldr	x2, [x0, #2512]
   39e7c:	add	x0, x0, #0x9d0
   39e80:	blr	x2
   39e84:	add	x2, x1, x0
   39e88:	ldr	x22, [x1, x0]
   39e8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39e90:	ldr	x3, [x0, #2544]
   39e94:	add	x0, x0, #0x9f0
   39e98:	blr	x3
   39e9c:	ldr	x24, [x1, x0]
   39ea0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   39ea4:	str	x3, [x2]
   39ea8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   39eac:	str	x2, [x1, x0]
   39eb0:	mov	w3, w23
   39eb4:	mov	x2, #0xffffffffffffffff    	// #-1
   39eb8:	mov	x1, x2
   39ebc:	mov	x0, x20
   39ec0:	bl	ba80 <mpfr_set_si_2exp@plt>
   39ec4:	cmp	w23, #0x4
   39ec8:	b.eq	3a854 <mpfr_zeta@@Base+0xbc0>  // b.none
   39ecc:	sub	w0, w23, #0x1
   39ed0:	cmp	w21, #0x0
   39ed4:	ccmp	w0, #0x1, #0x2, lt  // lt = tstop
   39ed8:	b.ls	39f00 <mpfr_zeta@@Base+0x26c>  // b.plast
   39edc:	cmp	w21, #0x0
   39ee0:	cset	w0, gt
   39ee4:	cmp	w0, #0x0
   39ee8:	ccmp	w23, #0x3, #0x0, ne  // ne = any
   39eec:	b.eq	39f10 <mpfr_zeta@@Base+0x27c>  // b.none
   39ef0:	mov	w21, #0x1                   	// #1
   39ef4:	cmp	w23, #0x2
   39ef8:	b.eq	3a874 <mpfr_zeta@@Base+0xbe0>  // b.none
   39efc:	b	3a864 <mpfr_zeta@@Base+0xbd0>
   39f00:	mov	x0, x20
   39f04:	bl	c120 <mpfr_nextabove@plt>
   39f08:	mov	w21, #0x1                   	// #1
   39f0c:	b	3a874 <mpfr_zeta@@Base+0xbe0>
   39f10:	mov	x0, x20
   39f14:	bl	bdd0 <mpfr_nextbelow@plt>
   39f18:	mov	w23, #0x3                   	// #3
   39f1c:	mov	w21, #0xffffffff            	// #-1
   39f20:	b	3a874 <mpfr_zeta@@Base+0xbe0>
   39f24:	mov	w2, w23
   39f28:	mov	w1, w21
   39f2c:	mov	x0, x20
   39f30:	bl	cb30 <mpfr_check_range@plt>
   39f34:	mov	w21, w0
   39f38:	b	39fac <mpfr_zeta@@Base+0x318>
   39f3c:	ldp	x2, x3, [x19]
   39f40:	stp	x2, x3, [sp, #224]
   39f44:	ldp	x2, x3, [x19, #16]
   39f48:	stp	x2, x3, [sp, #240]
   39f4c:	sub	x0, x0, #0x1
   39f50:	str	x0, [sp, #240]
   39f54:	add	x0, sp, #0xe0
   39f58:	bl	c160 <mpfr_integer_p@plt>
   39f5c:	cbz	w0, 39ce4 <mpfr_zeta@@Base+0x50>
   39f60:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39f64:	str	x0, [x20, #16]
   39f68:	mov	w0, #0x1                   	// #1
   39f6c:	str	w0, [x20, #8]
   39f70:	mov	w21, #0x0                   	// #0
   39f74:	b	39fac <mpfr_zeta@@Base+0x318>
   39f78:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39f7c:	str	x0, [x20, #16]
   39f80:	mov	w0, #0x1                   	// #1
   39f84:	str	w0, [x20, #8]
   39f88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   39f8c:	ldr	x1, [x0, #2576]
   39f90:	add	x0, x0, #0xa10
   39f94:	blr	x1
   39f98:	mrs	x1, tpidr_el0
   39f9c:	add	x0, x1, x0
   39fa0:	ldr	w1, [x0]
   39fa4:	orr	w1, w1, #0x20
   39fa8:	str	w1, [x0]
   39fac:	mov	w0, w21
   39fb0:	ldp	x19, x20, [sp, #16]
   39fb4:	ldp	x21, x22, [sp, #32]
   39fb8:	ldp	x23, x24, [sp, #48]
   39fbc:	ldp	x29, x30, [sp]
   39fc0:	add	sp, sp, #0x210
   39fc4:	ret
   39fc8:	mov	w2, w23
   39fcc:	mov	x1, x19
   39fd0:	mov	x0, x20
   39fd4:	bl	38eb8 <mpfr_get_ui@@Base+0x1bc>
   39fd8:	mov	w21, w0
   39fdc:	b	3a478 <mpfr_zeta@@Base+0x7e4>
   39fe0:	stp	x25, x26, [sp, #64]
   39fe4:	ldr	x28, [x20]
   39fe8:	ldr	x24, [x19]
   39fec:	add	x24, x24, #0x2
   39ff0:	ldr	x0, [x19, #16]
   39ff4:	mov	x1, #0x0                   	// #0
   39ff8:	cmp	x0, #0x0
   39ffc:	b.le	39d88 <mpfr_zeta@@Base+0xf4>
   3a000:	add	x24, x24, x1
   3a004:	mov	x4, #0x0                   	// #0
   3a008:	add	x3, sp, #0xe0
   3a00c:	add	x2, sp, #0xc0
   3a010:	add	x1, sp, #0xa0
   3a014:	mov	x0, #0x40                  	// #64
   3a018:	bl	cc50 <mpfr_inits2@plt>
   3a01c:	mov	x2, #0x0                   	// #0
   3a020:	mov	x1, #0x1                   	// #1
   3a024:	mov	x0, x19
   3a028:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3a02c:	tbnz	w0, #31, 3a4fc <mpfr_zeta@@Base+0x868>
   3a030:	mov	w3, #0x2                   	// #2
   3a034:	mov	x2, #0x1                   	// #1
   3a038:	mov	x1, x19
   3a03c:	add	x0, sp, #0xa0
   3a040:	bl	c530 <mpfr_sub_ui@plt>
   3a044:	mov	w3, #0x2                   	// #2
   3a048:	mov	x2, #0xfffffffffffffff2    	// #-14
   3a04c:	sub	x2, x2, x28
   3a050:	mov	x1, #0x1                   	// #1
   3a054:	add	x0, sp, #0xc0
   3a058:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3a05c:	add	x0, x28, #0xd
   3a060:	ldr	x1, [sp, #176]
   3a064:	cmp	x0, x1
   3a068:	b.ge	3a514 <mpfr_zeta@@Base+0x880>  // b.tcont
   3a06c:	add	x0, sp, #0xa0
   3a070:	mov	w3, #0x2                   	// #2
   3a074:	mov	x2, #0x1                   	// #1
   3a078:	mov	x1, x0
   3a07c:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a080:	add	x22, sp, #0xc0
   3a084:	mov	w3, #0x2                   	// #2
   3a088:	mov	x2, #0x1                   	// #1
   3a08c:	mov	x1, x22
   3a090:	mov	x0, x22
   3a094:	bl	c260 <mpfr_add_ui@plt>
   3a098:	add	x21, sp, #0xa0
   3a09c:	mov	w3, #0x2                   	// #2
   3a0a0:	mov	x2, x22
   3a0a4:	mov	x1, x21
   3a0a8:	mov	x0, x21
   3a0ac:	bl	bd50 <mpfr_mul@plt>
   3a0b0:	mov	w3, #0x2                   	// #2
   3a0b4:	mov	x2, #0x1                   	// #1
   3a0b8:	mov	x1, x21
   3a0bc:	add	x0, sp, #0xe0
   3a0c0:	bl	c260 <mpfr_add_ui@plt>
   3a0c4:	ldr	x0, [sp, #240]
   3a0c8:	cmp	x0, #0x3
   3a0cc:	b.gt	3a52c <mpfr_zeta@@Base+0x898>
   3a0d0:	mov	w3, #0x2                   	// #2
   3a0d4:	mov	x2, #0x0                   	// #0
   3a0d8:	mov	x1, #0x8                   	// #8
   3a0dc:	add	x0, sp, #0xa0
   3a0e0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3a0e4:	add	x21, sp, #0xa0
   3a0e8:	mov	w3, #0x2                   	// #2
   3a0ec:	add	x2, x28, #0xe
   3a0f0:	mov	x1, x21
   3a0f4:	mov	x0, x21
   3a0f8:	bl	c8f0 <mpfr_div_2ui@plt>
   3a0fc:	mov	w3, #0x2                   	// #2
   3a100:	mov	x2, #0x1                   	// #1
   3a104:	mov	x1, x21
   3a108:	mov	x0, x21
   3a10c:	bl	c260 <mpfr_add_ui@plt>
   3a110:	add	x22, sp, #0xc0
   3a114:	mov	w3, #0x2                   	// #2
   3a118:	mov	x2, x22
   3a11c:	mov	x1, x21
   3a120:	mov	x0, x21
   3a124:	bl	bd50 <mpfr_mul@plt>
   3a128:	add	x25, sp, #0xe0
   3a12c:	mov	w3, #0x2                   	// #2
   3a130:	mov	x2, #0xd                   	// #13
   3a134:	mov	x1, x25
   3a138:	mov	x0, x22
   3a13c:	bl	c260 <mpfr_add_ui@plt>
   3a140:	mov	w3, #0x2                   	// #2
   3a144:	mov	x2, x21
   3a148:	mov	x1, x22
   3a14c:	mov	x0, x22
   3a150:	bl	bd50 <mpfr_mul@plt>
   3a154:	mov	w2, #0x2                   	// #2
   3a158:	mov	x1, x21
   3a15c:	mov	x0, x21
   3a160:	bl	c400 <mpfr_sqr@plt>
   3a164:	mov	w3, #0x2                   	// #2
   3a168:	mov	x2, x21
   3a16c:	mov	x1, x22
   3a170:	mov	x0, x22
   3a174:	bl	bd50 <mpfr_mul@plt>
   3a178:	ldr	x0, [sp, #208]
   3a17c:	mov	x26, x0
   3a180:	str	x0, [sp, #136]
   3a184:	mov	x3, #0x0                   	// #0
   3a188:	mov	x2, x25
   3a18c:	mov	x1, x22
   3a190:	mov	x0, x21
   3a194:	bl	c1b0 <mpfr_clears@plt>
   3a198:	add	x0, x28, x26
   3a19c:	cmp	x0, x24
   3a1a0:	csel	x24, x0, x24, ge  // ge = tcont
   3a1a4:	add	x21, x24, #0xa
   3a1a8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3a1ac:	cmp	x21, x0
   3a1b0:	b.ge	3a544 <mpfr_zeta@@Base+0x8b0>  // b.tcont
   3a1b4:	add	x22, x24, #0x48
   3a1b8:	adds	x24, x24, #0x9
   3a1bc:	csel	x24, x22, x24, mi  // mi = first
   3a1c0:	asr	x22, x24, #6
   3a1c4:	add	x22, x22, #0x1
   3a1c8:	lsl	x0, x22, #2
   3a1cc:	cmp	x0, #0x10
   3a1d0:	b.gt	3a548 <mpfr_zeta@@Base+0x8b4>
   3a1d4:	str	xzr, [sp, #256]
   3a1d8:	add	x0, sp, #0x110
   3a1dc:	str	x0, [sp, #264]
   3a1e0:	str	x21, [sp, #496]
   3a1e4:	ldr	x1, [sp, #264]
   3a1e8:	str	x1, [sp, #520]
   3a1ec:	mov	w0, #0x1                   	// #1
   3a1f0:	str	w0, [sp, #504]
   3a1f4:	str	x21, [sp, #464]
   3a1f8:	add	x2, x1, x22, lsl #3
   3a1fc:	str	x2, [sp, #488]
   3a200:	str	w0, [sp, #472]
   3a204:	str	x21, [sp, #432]
   3a208:	add	x2, x1, x22, lsl #4
   3a20c:	str	x2, [sp, #456]
   3a210:	str	w0, [sp, #440]
   3a214:	str	x21, [sp, #400]
   3a218:	add	x22, x22, x22, lsl #1
   3a21c:	add	x22, x1, x22, lsl #3
   3a220:	str	x22, [sp, #424]
   3a224:	str	w0, [sp, #408]
   3a228:	mov	x0, #0x40                  	// #64
   3a22c:	str	x0, [sp, #104]
   3a230:	add	x27, sp, #0x190
   3a234:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   3a238:	ldr	x0, [x0, #3928]
   3a23c:	str	x0, [sp, #112]
   3a240:	add	x26, sp, #0x1d0
   3a244:	add	x22, sp, #0x1b0
   3a248:	add	x25, sp, #0x1f0
   3a24c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a250:	ldr	x1, [x0, #2624]
   3a254:	add	x0, x0, #0xa40
   3a258:	blr	x1
   3a25c:	mov	w2, #0x3                   	// #3
   3a260:	mrs	x1, tpidr_el0
   3a264:	add	x1, x1, x0
   3a268:	mov	x0, x27
   3a26c:	bl	c380 <mpfr_cache@plt>
   3a270:	mov	w3, #0x0                   	// #0
   3a274:	mov	x2, x19
   3a278:	ldr	x1, [sp, #112]
   3a27c:	mov	x0, x26
   3a280:	bl	bb70 <mpfr_sub@plt>
   3a284:	mov	w2, #0x0                   	// #0
   3a288:	mov	x1, x26
   3a28c:	mov	x0, x22
   3a290:	bl	c7b0 <mpfr_gamma@plt>
   3a294:	ldr	x1, [sp, #448]
   3a298:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a29c:	cmp	x1, x0
   3a2a0:	b.eq	3a55c <mpfr_zeta@@Base+0x8c8>  // b.none
   3a2a4:	mov	w2, #0x0                   	// #0
   3a2a8:	mov	x1, x26
   3a2ac:	mov	x0, x25
   3a2b0:	bl	38eb8 <mpfr_get_ui@@Base+0x1bc>
   3a2b4:	mov	w3, #0x0                   	// #0
   3a2b8:	mov	x2, x22
   3a2bc:	mov	x1, x25
   3a2c0:	mov	x0, x25
   3a2c4:	bl	bd50 <mpfr_mul@plt>
   3a2c8:	mov	w3, #0x0                   	// #0
   3a2cc:	mov	x2, #0x1                   	// #1
   3a2d0:	mov	x1, x27
   3a2d4:	mov	x0, x22
   3a2d8:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a2dc:	mov	w2, #0x0                   	// #0
   3a2e0:	mov	x1, x26
   3a2e4:	mov	x0, x26
   3a2e8:	bl	bd70 <mpfr_neg@plt>
   3a2ec:	mov	w3, #0x0                   	// #0
   3a2f0:	mov	x2, x26
   3a2f4:	mov	x1, x22
   3a2f8:	mov	x0, x22
   3a2fc:	bl	bd90 <mpfr_pow@plt>
   3a300:	mov	w3, #0x0                   	// #0
   3a304:	mov	x2, x22
   3a308:	mov	x1, x25
   3a30c:	mov	x0, x25
   3a310:	bl	bd50 <mpfr_mul@plt>
   3a314:	mov	w3, #0x0                   	// #0
   3a318:	mov	x2, #0x1                   	// #1
   3a31c:	mov	x1, x25
   3a320:	mov	x0, x25
   3a324:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a328:	mov	w3, #0x0                   	// #0
   3a32c:	mov	x2, x27
   3a330:	mov	x1, x19
   3a334:	mov	x0, x22
   3a338:	bl	bd50 <mpfr_mul@plt>
   3a33c:	mov	w3, #0x0                   	// #0
   3a340:	mov	x2, #0x1                   	// #1
   3a344:	mov	x1, x22
   3a348:	mov	x0, x27
   3a34c:	bl	c8f0 <mpfr_div_2ui@plt>
   3a350:	mov	w2, #0x0                   	// #0
   3a354:	mov	x1, x27
   3a358:	mov	x0, x22
   3a35c:	bl	c450 <mpfr_sin@plt>
   3a360:	ldr	x1, [sp, #448]
   3a364:	tbz	x1, #63, 3a3f4 <mpfr_zeta@@Base+0x760>
   3a368:	neg	x2, x1
   3a36c:	mov	x0, #0xfffffffffffffeff    	// #-257
   3a370:	movk	x0, #0x7fff, lsl #48
   3a374:	sub	x0, x0, x21
   3a378:	cmp	x2, x0
   3a37c:	b.ge	3a7e8 <mpfr_zeta@@Base+0xb54>  // b.tcont
   3a380:	add	x24, sp, #0xe0
   3a384:	sub	x1, x21, x1
   3a388:	mov	x0, x24
   3a38c:	bl	ca80 <mpfr_init2@plt>
   3a390:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a394:	ldr	x1, [x0, #2624]
   3a398:	add	x0, x0, #0xa40
   3a39c:	blr	x1
   3a3a0:	mov	w2, #0x3                   	// #3
   3a3a4:	mrs	x1, tpidr_el0
   3a3a8:	add	x1, x1, x0
   3a3ac:	mov	x0, x24
   3a3b0:	bl	c380 <mpfr_cache@plt>
   3a3b4:	mov	w3, #0x0                   	// #0
   3a3b8:	mov	x2, x24
   3a3bc:	mov	x1, x19
   3a3c0:	mov	x0, x24
   3a3c4:	bl	bd50 <mpfr_mul@plt>
   3a3c8:	mov	w3, #0x0                   	// #0
   3a3cc:	mov	x2, #0x1                   	// #1
   3a3d0:	mov	x1, x24
   3a3d4:	mov	x0, x24
   3a3d8:	bl	c8f0 <mpfr_div_2ui@plt>
   3a3dc:	mov	w2, #0x0                   	// #0
   3a3e0:	mov	x1, x24
   3a3e4:	mov	x0, x22
   3a3e8:	bl	c450 <mpfr_sin@plt>
   3a3ec:	mov	x0, x24
   3a3f0:	bl	c070 <mpfr_clear@plt>
   3a3f4:	mov	w3, #0x0                   	// #0
   3a3f8:	mov	x2, x22
   3a3fc:	mov	x1, x25
   3a400:	mov	x0, x25
   3a404:	bl	bd50 <mpfr_mul@plt>
   3a408:	ldr	x1, [sp, #512]
   3a40c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a410:	cmp	x1, x0
   3a414:	b.le	3a668 <mpfr_zeta@@Base+0x9d4>
   3a418:	cmp	w23, #0x0
   3a41c:	cinc	x3, x28, eq  // eq = none
   3a420:	ldr	x0, [sp, #496]
   3a424:	add	x1, x0, #0x3e
   3a428:	subs	x0, x0, #0x1
   3a42c:	csel	x1, x1, x0, mi  // mi = first
   3a430:	asr	x1, x1, #6
   3a434:	ldr	x0, [sp, #136]
   3a438:	sub	x2, x21, x0
   3a43c:	add	x1, x1, #0x1
   3a440:	ldr	x0, [sp, #520]
   3a444:	bl	c370 <mpfr_round_p@plt>
   3a448:	cbz	w0, 3a668 <mpfr_zeta@@Base+0x9d4>
   3a44c:	ldr	w3, [sp, #504]
   3a450:	mov	w2, w23
   3a454:	add	x1, sp, #0x1f0
   3a458:	mov	x0, x20
   3a45c:	bl	c6a0 <mpfr_set4@plt>
   3a460:	mov	w21, w0
   3a464:	ldr	x1, [sp, #256]
   3a468:	cbz	x1, 3a830 <mpfr_zeta@@Base+0xb9c>
   3a46c:	ldr	x0, [sp, #264]
   3a470:	bl	cc20 <mpfr_free_func@plt>
   3a474:	ldp	x25, x26, [sp, #64]
   3a478:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a47c:	ldr	x1, [x0, #2576]
   3a480:	add	x0, x0, #0xa10
   3a484:	blr	x1
   3a488:	mrs	x1, tpidr_el0
   3a48c:	ldr	w4, [sp, #152]
   3a490:	str	w4, [x1, x0]
   3a494:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a498:	ldr	x2, [x0, #2512]
   3a49c:	add	x0, x0, #0x9d0
   3a4a0:	blr	x2
   3a4a4:	ldr	x2, [sp, #120]
   3a4a8:	str	x2, [x1, x0]
   3a4ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a4b0:	ldr	x3, [x0, #2544]
   3a4b4:	add	x0, x0, #0x9f0
   3a4b8:	blr	x3
   3a4bc:	ldr	x3, [sp, #128]
   3a4c0:	str	x3, [x1, x0]
   3a4c4:	ldr	x0, [x20, #16]
   3a4c8:	cmp	x3, x0
   3a4cc:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   3a4d0:	b.gt	3a838 <mpfr_zeta@@Base+0xba4>
   3a4d4:	cbz	w21, 3a8e4 <mpfr_zeta@@Base+0xc50>
   3a4d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a4dc:	ldr	x1, [x0, #2576]
   3a4e0:	add	x0, x0, #0xa10
   3a4e4:	blr	x1
   3a4e8:	orr	w2, w4, #0x8
   3a4ec:	mrs	x1, tpidr_el0
   3a4f0:	str	w2, [x1, x0]
   3a4f4:	ldp	x27, x28, [sp, #80]
   3a4f8:	b	39fac <mpfr_zeta@@Base+0x318>
   3a4fc:	mov	w3, #0x2                   	// #2
   3a500:	mov	x2, x19
   3a504:	mov	x1, #0x1                   	// #1
   3a508:	add	x0, sp, #0xa0
   3a50c:	bl	ca50 <mpfr_ui_sub@plt>
   3a510:	b	3a044 <mpfr_zeta@@Base+0x3b0>
   3a514:	mov	w3, #0x2                   	// #2
   3a518:	add	x2, x28, #0xe
   3a51c:	mov	x1, #0x1                   	// #1
   3a520:	add	x0, sp, #0xa0
   3a524:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3a528:	b	3a080 <mpfr_zeta@@Base+0x3ec>
   3a52c:	ldr	w3, [sp, #232]
   3a530:	mov	w2, #0x2                   	// #2
   3a534:	add	x1, sp, #0xe0
   3a538:	add	x0, sp, #0xa0
   3a53c:	bl	c6a0 <mpfr_set4@plt>
   3a540:	b	3a0e4 <mpfr_zeta@@Base+0x450>
   3a544:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3a548:	lsl	x0, x22, #5
   3a54c:	str	x0, [sp, #256]
   3a550:	bl	ccf0 <mpfr_allocate_func@plt>
   3a554:	str	x0, [sp, #264]
   3a558:	b	3a1e0 <mpfr_zeta@@Base+0x54c>
   3a55c:	mov	w5, #0x3                   	// #3
   3a560:	mov	x4, x27
   3a564:	mov	x3, x22
   3a568:	mov	x2, x19
   3a56c:	mov	x1, x26
   3a570:	mov	x0, x25
   3a574:	bl	39a40 <mpfr_get_ui@@Base+0xd44>
   3a578:	ldr	x1, [sp, #512]
   3a57c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a580:	cmp	x1, x0
   3a584:	b.eq	3a718 <mpfr_zeta@@Base+0xa84>  // b.none
   3a588:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a58c:	ldr	x2, [x0, #2544]
   3a590:	add	x0, x0, #0x9f0
   3a594:	blr	x2
   3a598:	mrs	x2, tpidr_el0
   3a59c:	ldr	x0, [x2, x0]
   3a5a0:	cmp	x1, x0
   3a5a4:	b.eq	3a718 <mpfr_zeta@@Base+0xa84>  // b.none
   3a5a8:	add	x24, sp, #0xc0
   3a5ac:	ldr	x1, [sp, #496]
   3a5b0:	mov	x0, x24
   3a5b4:	bl	ca80 <mpfr_init2@plt>
   3a5b8:	mov	w5, #0x2                   	// #2
   3a5bc:	mov	x4, x27
   3a5c0:	mov	x3, x22
   3a5c4:	mov	x2, x19
   3a5c8:	mov	x1, x26
   3a5cc:	mov	x0, x24
   3a5d0:	bl	39a40 <mpfr_get_ui@@Base+0xd44>
   3a5d4:	ldr	x1, [sp, #208]
   3a5d8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a5dc:	cmp	x1, x0
   3a5e0:	b.eq	3a668 <mpfr_zeta@@Base+0x9d4>  // b.none
   3a5e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a5e8:	ldr	x2, [x0, #2544]
   3a5ec:	add	x0, x0, #0x9f0
   3a5f0:	blr	x2
   3a5f4:	mrs	x2, tpidr_el0
   3a5f8:	ldr	x0, [x2, x0]
   3a5fc:	cmp	x1, x0
   3a600:	b.eq	3a668 <mpfr_zeta@@Base+0x9d4>  // b.none
   3a604:	add	x0, sp, #0xe0
   3a608:	mov	x1, x28
   3a60c:	mov	x24, x0
   3a610:	bl	ca80 <mpfr_init2@plt>
   3a614:	ldr	w3, [sp, #504]
   3a618:	mov	w2, w23
   3a61c:	mov	x1, x25
   3a620:	mov	x0, x24
   3a624:	bl	c6a0 <mpfr_set4@plt>
   3a628:	add	x0, sp, #0xc0
   3a62c:	mov	w2, w23
   3a630:	mov	x1, x28
   3a634:	str	x0, [sp, #144]
   3a638:	bl	c970 <mpfr_prec_round@plt>
   3a63c:	mov	w2, #0x1                   	// #1
   3a640:	ldr	x1, [sp, #144]
   3a644:	mov	x0, x24
   3a648:	bl	c9a0 <mpfr_cmp3@plt>
   3a64c:	str	w0, [sp, #156]
   3a650:	ldr	x0, [sp, #144]
   3a654:	bl	c070 <mpfr_clear@plt>
   3a658:	mov	x0, x24
   3a65c:	bl	c070 <mpfr_clear@plt>
   3a660:	ldr	w0, [sp, #156]
   3a664:	cbz	w0, 3a77c <mpfr_zeta@@Base+0xae8>
   3a668:	mov	x0, #0xfffffffffffffeff    	// #-257
   3a66c:	movk	x0, #0x7fff, lsl #48
   3a670:	sub	x0, x0, x21
   3a674:	ldr	x1, [sp, #104]
   3a678:	cmp	x0, x1
   3a67c:	b.lt	3a800 <mpfr_zeta@@Base+0xb6c>  // b.tstop
   3a680:	ldr	x0, [sp, #104]
   3a684:	add	x21, x21, x0
   3a688:	add	x0, x21, x21, lsr #63
   3a68c:	asr	x0, x0, #1
   3a690:	str	x0, [sp, #104]
   3a694:	ldr	x1, [sp, #256]
   3a698:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3a69c:	cmp	x21, x0
   3a6a0:	b.ge	3a818 <mpfr_zeta@@Base+0xb84>  // b.tcont
   3a6a4:	add	x24, x21, #0x3e
   3a6a8:	subs	x0, x21, #0x1
   3a6ac:	csel	x24, x24, x0, mi  // mi = first
   3a6b0:	asr	x24, x24, #6
   3a6b4:	add	x24, x24, #0x1
   3a6b8:	lsl	x0, x24, #5
   3a6bc:	str	x0, [sp, #256]
   3a6c0:	cbnz	x1, 3a81c <mpfr_zeta@@Base+0xb88>
   3a6c4:	bl	ccf0 <mpfr_allocate_func@plt>
   3a6c8:	str	x0, [sp, #264]
   3a6cc:	str	x21, [sp, #496]
   3a6d0:	ldr	x1, [sp, #264]
   3a6d4:	str	x1, [sp, #520]
   3a6d8:	mov	w0, #0x1                   	// #1
   3a6dc:	str	w0, [sp, #504]
   3a6e0:	str	x21, [sp, #464]
   3a6e4:	add	x2, x1, x24, lsl #3
   3a6e8:	str	x2, [sp, #488]
   3a6ec:	str	w0, [sp, #472]
   3a6f0:	str	x21, [sp, #432]
   3a6f4:	add	x2, x1, x24, lsl #4
   3a6f8:	str	x2, [sp, #456]
   3a6fc:	str	w0, [sp, #440]
   3a700:	str	x21, [sp, #400]
   3a704:	add	x24, x24, x24, lsl #1
   3a708:	add	x24, x1, x24, lsl #3
   3a70c:	str	x24, [sp, #424]
   3a710:	str	w0, [sp, #408]
   3a714:	b	3a24c <mpfr_zeta@@Base+0x5b8>
   3a718:	add	x0, sp, #0x1d0
   3a71c:	mov	w3, #0x0                   	// #0
   3a720:	mov	x2, #0x2                   	// #2
   3a724:	mov	x1, x19
   3a728:	mov	x19, x0
   3a72c:	bl	c8f0 <mpfr_div_2ui@plt>
   3a730:	mov	w2, #0x0                   	// #0
   3a734:	mov	x1, x19
   3a738:	mov	x0, x19
   3a73c:	bl	bec0 <mpfr_frac@plt>
   3a740:	mov	x2, #0xffffffffffffffff    	// #-1
   3a744:	mov	x1, x2
   3a748:	mov	x0, x19
   3a74c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3a750:	mov	w2, #0xffffffff            	// #-1
   3a754:	cmp	w0, #0x0
   3a758:	cneg	w2, w2, le
   3a75c:	mov	w1, w23
   3a760:	mov	x0, x20
   3a764:	bl	bf40 <mpfr_overflow@plt>
   3a768:	mov	w21, w0
   3a76c:	ldr	w0, [sp, #152]
   3a770:	orr	w0, w0, #0x2
   3a774:	str	w0, [sp, #152]
   3a778:	b	3a464 <mpfr_zeta@@Base+0x7d0>
   3a77c:	add	x0, sp, #0x1d0
   3a780:	mov	w3, #0x0                   	// #0
   3a784:	mov	x2, #0x2                   	// #2
   3a788:	mov	x1, x19
   3a78c:	mov	x19, x0
   3a790:	bl	c8f0 <mpfr_div_2ui@plt>
   3a794:	mov	w2, #0x0                   	// #0
   3a798:	mov	x1, x19
   3a79c:	mov	x0, x19
   3a7a0:	bl	bec0 <mpfr_frac@plt>
   3a7a4:	mov	x2, #0xffffffffffffffff    	// #-1
   3a7a8:	mov	x1, x2
   3a7ac:	mov	x0, x19
   3a7b0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3a7b4:	cmp	w0, #0x0
   3a7b8:	b.gt	3a7d4 <mpfr_zeta@@Base+0xb40>
   3a7bc:	add	x0, sp, #0x1f0
   3a7c0:	mov	w3, w23
   3a7c4:	mov	x2, #0x1                   	// #1
   3a7c8:	mov	x1, x0
   3a7cc:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a7d0:	b	3a44c <mpfr_zeta@@Base+0x7b8>
   3a7d4:	add	x0, sp, #0x1f0
   3a7d8:	mov	w2, w23
   3a7dc:	mov	x1, x0
   3a7e0:	bl	bd70 <mpfr_neg@plt>
   3a7e4:	b	3a7bc <mpfr_zeta@@Base+0xb28>
   3a7e8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3a7ec:	add	x2, x2, #0x598
   3a7f0:	mov	w1, #0x281                 	// #641
   3a7f4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3a7f8:	add	x0, x0, #0x540
   3a7fc:	bl	cb40 <mpfr_assert_fail@plt>
   3a800:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3a804:	add	x2, x2, #0x5e0
   3a808:	mov	w1, #0x290                 	// #656
   3a80c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3a810:	add	x0, x0, #0x540
   3a814:	bl	cb40 <mpfr_assert_fail@plt>
   3a818:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3a81c:	mov	x2, x0
   3a820:	ldr	x0, [sp, #264]
   3a824:	bl	c1c0 <mpfr_reallocate_func@plt>
   3a828:	str	x0, [sp, #264]
   3a82c:	b	3a6cc <mpfr_zeta@@Base+0xa38>
   3a830:	ldp	x25, x26, [sp, #64]
   3a834:	b	3a478 <mpfr_zeta@@Base+0x7e4>
   3a838:	mov	w2, w23
   3a83c:	mov	w1, w21
   3a840:	mov	x0, x20
   3a844:	bl	cb30 <mpfr_check_range@plt>
   3a848:	mov	w21, w0
   3a84c:	ldp	x27, x28, [sp, #80]
   3a850:	b	39fac <mpfr_zeta@@Base+0x318>
   3a854:	mov	w23, #0x3                   	// #3
   3a858:	cmp	w21, #0x0
   3a85c:	cset	w0, gt
   3a860:	b.gt	39f10 <mpfr_zeta@@Base+0x27c>
   3a864:	cmp	w0, #0x0
   3a868:	mov	w0, #0xffffffff            	// #-1
   3a86c:	ccmp	w23, #0x3, #0x4, ne  // ne = any
   3a870:	cneg	w21, w0, ne  // ne = any
   3a874:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a878:	ldr	x1, [x0, #2576]
   3a87c:	add	x0, x0, #0xa10
   3a880:	blr	x1
   3a884:	mrs	x1, tpidr_el0
   3a888:	str	w19, [x1, x0]
   3a88c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a890:	ldr	x2, [x0, #2512]
   3a894:	add	x0, x0, #0x9d0
   3a898:	blr	x2
   3a89c:	str	x22, [x1, x0]
   3a8a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a8a4:	ldr	x2, [x0, #2544]
   3a8a8:	add	x0, x0, #0x9f0
   3a8ac:	blr	x2
   3a8b0:	str	x24, [x1, x0]
   3a8b4:	ldr	x0, [x20, #16]
   3a8b8:	cmp	x24, x0
   3a8bc:	ccmp	x22, x0, #0x0, ge  // ge = tcont
   3a8c0:	b.gt	39f24 <mpfr_zeta@@Base+0x290>
   3a8c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a8c8:	ldr	x1, [x0, #2576]
   3a8cc:	add	x0, x0, #0xa10
   3a8d0:	blr	x1
   3a8d4:	orr	w19, w19, #0x8
   3a8d8:	mrs	x1, tpidr_el0
   3a8dc:	str	w19, [x1, x0]
   3a8e0:	b	39fac <mpfr_zeta@@Base+0x318>
   3a8e4:	ldp	x27, x28, [sp, #80]
   3a8e8:	b	39fac <mpfr_zeta@@Base+0x318>

000000000003a8ec <mpfr_cmp_d@@Base>:
   3a8ec:	stp	x29, x30, [sp, #-144]!
   3a8f0:	mov	x29, sp
   3a8f4:	stp	x19, x20, [sp, #16]
   3a8f8:	stp	x21, x22, [sp, #32]
   3a8fc:	stp	x23, x24, [sp, #48]
   3a900:	stp	x25, x26, [sp, #64]
   3a904:	str	x27, [sp, #80]
   3a908:	mov	x26, x0
   3a90c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a910:	ldr	x1, [x0, #2576]
   3a914:	add	x0, x0, #0xa10
   3a918:	blr	x1
   3a91c:	mrs	x1, tpidr_el0
   3a920:	add	x20, x1, x0
   3a924:	ldr	w25, [x1, x0]
   3a928:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a92c:	ldr	x2, [x0, #2512]
   3a930:	add	x0, x0, #0x9d0
   3a934:	blr	x2
   3a938:	add	x22, x1, x0
   3a93c:	ldr	x24, [x1, x0]
   3a940:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3a944:	ldr	x2, [x0, #2544]
   3a948:	add	x0, x0, #0x9f0
   3a94c:	blr	x2
   3a950:	add	x21, x1, x0
   3a954:	ldr	x23, [x1, x0]
   3a958:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   3a95c:	str	x0, [x22]
   3a960:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   3a964:	str	x0, [x21]
   3a968:	mov	x0, #0x35                  	// #53
   3a96c:	str	x0, [sp, #112]
   3a970:	add	x0, sp, #0x68
   3a974:	str	x0, [sp, #136]
   3a978:	mov	w27, #0x1                   	// #1
   3a97c:	str	w27, [sp, #120]
   3a980:	add	x19, sp, #0x70
   3a984:	mov	w1, #0x0                   	// #0
   3a988:	mov	x0, x19
   3a98c:	bl	be40 <mpfr_set_d@plt>
   3a990:	str	wzr, [x20]
   3a994:	mov	w2, w27
   3a998:	mov	x1, x19
   3a99c:	mov	x0, x26
   3a9a0:	bl	c9a0 <mpfr_cmp3@plt>
   3a9a4:	ldr	w1, [x20]
   3a9a8:	orr	w1, w1, w25
   3a9ac:	str	w1, [x20]
   3a9b0:	str	x24, [x22]
   3a9b4:	str	x23, [x21]
   3a9b8:	ldp	x19, x20, [sp, #16]
   3a9bc:	ldp	x21, x22, [sp, #32]
   3a9c0:	ldp	x23, x24, [sp, #48]
   3a9c4:	ldp	x25, x26, [sp, #64]
   3a9c8:	ldr	x27, [sp, #80]
   3a9cc:	ldp	x29, x30, [sp], #144
   3a9d0:	ret

000000000003a9d4 <mpfr_erf@@Base>:
   3a9d4:	sub	sp, sp, #0x200
   3a9d8:	stp	x29, x30, [sp]
   3a9dc:	mov	x29, sp
   3a9e0:	stp	x19, x20, [sp, #16]
   3a9e4:	stp	x21, x22, [sp, #32]
   3a9e8:	stp	x25, x26, [sp, #64]
   3a9ec:	mov	x26, x0
   3a9f0:	mov	x21, x1
   3a9f4:	str	w2, [sp, #128]
   3a9f8:	ldr	x2, [x1, #16]
   3a9fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3aa00:	cmp	x2, x0
   3aa04:	b.le	3adc8 <mpfr_erf@@Base+0x3f4>
   3aa08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3aa0c:	ldr	x1, [x0, #2576]
   3aa10:	add	x0, x0, #0xa10
   3aa14:	blr	x1
   3aa18:	mrs	x1, tpidr_el0
   3aa1c:	ldr	w0, [x1, x0]
   3aa20:	str	w0, [sp, #132]
   3aa24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3aa28:	ldr	x3, [x0, #2512]
   3aa2c:	add	x0, x0, #0x9d0
   3aa30:	blr	x3
   3aa34:	add	x3, x1, x0
   3aa38:	ldr	x0, [x1, x0]
   3aa3c:	str	x0, [sp, #136]
   3aa40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3aa44:	ldr	x4, [x0, #2544]
   3aa48:	add	x0, x0, #0x9f0
   3aa4c:	blr	x4
   3aa50:	ldr	x4, [x1, x0]
   3aa54:	str	x4, [sp, #144]
   3aa58:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3aa5c:	str	x4, [x3]
   3aa60:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   3aa64:	str	x3, [x1, x0]
   3aa68:	ldr	x1, [x26]
   3aa6c:	add	x0, x1, x1, lsr #63
   3aa70:	neg	x0, x0, asr #1
   3aa74:	cmp	x2, x0
   3aa78:	b.ge	3ac00 <mpfr_erf@@Base+0x22c>  // b.tcont
   3aa7c:	add	x19, sp, #0x128
   3aa80:	add	x1, x1, #0x11
   3aa84:	mov	x0, x19
   3aa88:	bl	ca80 <mpfr_init2@plt>
   3aa8c:	ldr	x1, [x26]
   3aa90:	add	x20, sp, #0x148
   3aa94:	add	x1, x1, #0x11
   3aa98:	mov	x0, x20
   3aa9c:	bl	ca80 <mpfr_init2@plt>
   3aaa0:	mov	w3, #0x2                   	// #2
   3aaa4:	mov	x2, x21
   3aaa8:	mov	x1, x21
   3aaac:	mov	x0, x19
   3aab0:	bl	bd50 <mpfr_mul@plt>
   3aab4:	mov	w3, #0x2                   	// #2
   3aab8:	mov	x2, #0x3                   	// #3
   3aabc:	mov	x1, x19
   3aac0:	mov	x0, x19
   3aac4:	bl	cc60 <mpfr_div_ui@plt>
   3aac8:	mov	w3, #0x1                   	// #1
   3aacc:	mov	x2, x19
   3aad0:	mov	x1, #0x1                   	// #1
   3aad4:	mov	x0, x19
   3aad8:	bl	ca50 <mpfr_ui_sub@plt>
   3aadc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3aae0:	ldr	x1, [x0, #2624]
   3aae4:	add	x0, x0, #0xa40
   3aae8:	blr	x1
   3aaec:	mrs	x22, tpidr_el0
   3aaf0:	add	x22, x22, x0
   3aaf4:	mov	w2, #0x2                   	// #2
   3aaf8:	mov	x1, x22
   3aafc:	mov	x0, x20
   3ab00:	bl	c380 <mpfr_cache@plt>
   3ab04:	mov	w2, #0x2                   	// #2
   3ab08:	mov	x1, x20
   3ab0c:	mov	x0, x20
   3ab10:	bl	c930 <mpfr_sqrt@plt>
   3ab14:	mov	w3, #0x1                   	// #1
   3ab18:	mov	x2, x20
   3ab1c:	mov	x1, x19
   3ab20:	mov	x0, x19
   3ab24:	bl	c620 <mpfr_div@plt>
   3ab28:	mov	w3, #0x1                   	// #1
   3ab2c:	mov	x2, #0x1                   	// #1
   3ab30:	mov	x1, x19
   3ab34:	mov	x0, x19
   3ab38:	bl	c2c0 <mpfr_mul_2ui@plt>
   3ab3c:	mov	w3, #0x1                   	// #1
   3ab40:	mov	x2, x21
   3ab44:	mov	x1, x19
   3ab48:	mov	x0, x19
   3ab4c:	bl	bd50 <mpfr_mul@plt>
   3ab50:	mov	w2, #0x3                   	// #3
   3ab54:	mov	x1, x22
   3ab58:	mov	x0, x20
   3ab5c:	bl	c380 <mpfr_cache@plt>
   3ab60:	mov	w2, #0x3                   	// #3
   3ab64:	mov	x1, x20
   3ab68:	mov	x0, x20
   3ab6c:	bl	c930 <mpfr_sqrt@plt>
   3ab70:	mov	w3, #0x3                   	// #3
   3ab74:	mov	x2, #0x1                   	// #1
   3ab78:	mov	x1, x20
   3ab7c:	mov	x0, x20
   3ab80:	bl	c8f0 <mpfr_div_2ui@plt>
   3ab84:	ldr	w0, [x21, #8]
   3ab88:	cmp	w0, #0x0
   3ab8c:	cset	w3, le
   3ab90:	add	x20, sp, #0x148
   3ab94:	add	w3, w3, #0x2
   3ab98:	mov	x2, x20
   3ab9c:	mov	x1, x21
   3aba0:	mov	x0, x20
   3aba4:	bl	c620 <mpfr_div@plt>
   3aba8:	ldr	w22, [sp, #128]
   3abac:	mov	w2, w22
   3abb0:	ldr	x1, [x26]
   3abb4:	add	x0, sp, #0x128
   3abb8:	bl	c970 <mpfr_prec_round@plt>
   3abbc:	mov	w19, w0
   3abc0:	mov	w2, w22
   3abc4:	ldr	x1, [x26]
   3abc8:	mov	x0, x20
   3abcc:	bl	c970 <mpfr_prec_round@plt>
   3abd0:	tbnz	w19, #31, 3b320 <mpfr_erf@@Base+0x94c>
   3abd4:	cmp	w19, #0x0
   3abd8:	cset	w1, gt
   3abdc:	tbnz	w0, #31, 3abf0 <mpfr_erf@@Base+0x21c>
   3abe0:	cmp	w0, #0x0
   3abe4:	cset	w0, gt
   3abe8:	cmp	w0, w1
   3abec:	b.eq	3b328 <mpfr_erf@@Base+0x954>  // b.none
   3abf0:	add	x0, sp, #0x128
   3abf4:	bl	c070 <mpfr_clear@plt>
   3abf8:	add	x0, sp, #0x148
   3abfc:	bl	c070 <mpfr_clear@plt>
   3ac00:	mov	x0, #0x35                  	// #53
   3ac04:	str	x0, [sp, #480]
   3ac08:	add	x0, sp, #0x1d8
   3ac0c:	str	x0, [sp, #504]
   3ac10:	mov	w20, #0x1                   	// #1
   3ac14:	str	w20, [sp, #488]
   3ac18:	add	x19, sp, #0x1e0
   3ac1c:	mov	w3, w20
   3ac20:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   3ac24:	ldr	x2, [x2, #4048]
   3ac28:	mov	x1, x21
   3ac2c:	mov	x0, x19
   3ac30:	bl	c620 <mpfr_div@plt>
   3ac34:	mov	w3, w20
   3ac38:	mov	x2, x21
   3ac3c:	mov	x1, x19
   3ac40:	mov	x0, x19
   3ac44:	bl	bd50 <mpfr_mul@plt>
   3ac48:	ldr	x1, [x26]
   3ac4c:	mov	x2, #0x0                   	// #0
   3ac50:	add	x1, x1, #0x1
   3ac54:	mov	x0, x19
   3ac58:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3ac5c:	cmp	w0, #0x0
   3ac60:	b.gt	3ae48 <mpfr_erf@@Base+0x474>
   3ac64:	stp	x23, x24, [sp, #48]
   3ac68:	stp	x27, x28, [sp, #80]
   3ac6c:	str	d8, [sp, #96]
   3ac70:	mov	w1, #0x0                   	// #0
   3ac74:	mov	x0, x21
   3ac78:	bl	bd30 <mpfr_get_d@plt>
   3ac7c:	fmul	d8, d0, d0
   3ac80:	ldr	x27, [x26]
   3ac84:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3ac88:	ldr	d1, [x0, #1576]
   3ac8c:	fdiv	d1, d8, d1
   3ac90:	fcvtzs	d1, d1
   3ac94:	fmov	x0, d1
   3ac98:	add	x20, x0, x27
   3ac9c:	add	x20, x20, #0x8
   3aca0:	cmp	x27, #0x1
   3aca4:	b.eq	3aecc <mpfr_erf@@Base+0x4f8>  // b.none
   3aca8:	b.le	3aeb4 <mpfr_erf@@Base+0x4e0>
   3acac:	sub	x0, x27, #0x1
   3acb0:	clz	x1, x0
   3acb4:	mov	w0, #0x40                  	// #64
   3acb8:	sub	w0, w0, w1
   3acbc:	sxtw	x0, w0
   3acc0:	add	x20, x20, x0
   3acc4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3acc8:	cmp	x20, x0
   3accc:	b.ge	3aed4 <mpfr_erf@@Base+0x500>  // b.tcont
   3acd0:	add	x19, x20, #0x3e
   3acd4:	subs	x0, x20, #0x1
   3acd8:	csel	x19, x19, x0, mi  // mi = first
   3acdc:	asr	x19, x19, #6
   3ace0:	add	x19, x19, #0x1
   3ace4:	lsl	x0, x19, #2
   3ace8:	cmp	x0, #0x10
   3acec:	b.gt	3aed8 <mpfr_erf@@Base+0x504>
   3acf0:	str	xzr, [sp, #328]
   3acf4:	add	x0, sp, #0x158
   3acf8:	str	x0, [sp, #336]
   3acfc:	str	x20, [sp, #168]
   3ad00:	ldr	x1, [sp, #336]
   3ad04:	str	x1, [sp, #192]
   3ad08:	mov	w0, #0x1                   	// #1
   3ad0c:	str	w0, [sp, #176]
   3ad10:	str	x20, [sp, #200]
   3ad14:	add	x2, x1, x19, lsl #3
   3ad18:	str	x2, [sp, #224]
   3ad1c:	str	w0, [sp, #208]
   3ad20:	str	x20, [sp, #232]
   3ad24:	add	x2, x1, x19, lsl #4
   3ad28:	str	x2, [sp, #256]
   3ad2c:	str	w0, [sp, #240]
   3ad30:	str	x20, [sp, #264]
   3ad34:	add	x19, x19, x19, lsl #1
   3ad38:	add	x19, x1, x19, lsl #3
   3ad3c:	str	x19, [sp, #288]
   3ad40:	str	w0, [sp, #272]
   3ad44:	mov	x0, #0x40                  	// #64
   3ad48:	str	x0, [sp, #152]
   3ad4c:	add	x0, sp, #0xa8
   3ad50:	str	x0, [sp, #120]
   3ad54:	mov	w24, #0x2                   	// #2
   3ad58:	add	x25, sp, #0xc8
   3ad5c:	add	x22, sp, #0xe8
   3ad60:	mov	w3, w24
   3ad64:	mov	x2, x21
   3ad68:	mov	x1, x21
   3ad6c:	ldr	x0, [sp, #120]
   3ad70:	bl	bd50 <mpfr_mul@plt>
   3ad74:	mov	w3, #0x0                   	// #0
   3ad78:	mov	x2, #0x0                   	// #0
   3ad7c:	mov	x1, #0x1                   	// #1
   3ad80:	mov	x0, x25
   3ad84:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3ad88:	mov	w3, #0x0                   	// #0
   3ad8c:	mov	x2, #0x0                   	// #0
   3ad90:	mov	x1, #0x1                   	// #1
   3ad94:	mov	x0, x22
   3ad98:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3ad9c:	mov	x1, #0x35                  	// #53
   3ada0:	add	x0, sp, #0x128
   3ada4:	bl	ca80 <mpfr_init2@plt>
   3ada8:	mov	w23, #0x1                   	// #1
   3adac:	str	w23, [sp, #304]
   3adb0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3adb4:	str	x0, [sp, #312]
   3adb8:	mov	w28, #0x3                   	// #3
   3adbc:	add	x0, sp, #0x108
   3adc0:	str	x0, [sp, #112]
   3adc4:	b	3afc8 <mpfr_erf@@Base+0x5f4>
   3adc8:	mov	x0, #0x2                   	// #2
   3adcc:	movk	x0, #0x8000, lsl #48
   3add0:	cmp	x2, x0
   3add4:	b.eq	3adfc <mpfr_erf@@Base+0x428>  // b.none
   3add8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3addc:	cmp	x2, x0
   3ade0:	b.eq	3ae2c <mpfr_erf@@Base+0x458>  // b.none
   3ade4:	ldr	w3, [x1, #8]
   3ade8:	mov	w2, #0x0                   	// #0
   3adec:	mov	x0, x26
   3adf0:	bl	c6a0 <mpfr_set4@plt>
   3adf4:	mov	w19, w0
   3adf8:	b	3b2ec <mpfr_erf@@Base+0x918>
   3adfc:	str	x0, [x26, #16]
   3ae00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3ae04:	ldr	x1, [x0, #2576]
   3ae08:	add	x0, x0, #0xa10
   3ae0c:	blr	x1
   3ae10:	mrs	x1, tpidr_el0
   3ae14:	add	x0, x1, x0
   3ae18:	ldr	w1, [x0]
   3ae1c:	orr	w1, w1, #0x4
   3ae20:	str	w1, [x0]
   3ae24:	mov	w19, #0x0                   	// #0
   3ae28:	b	3b2ec <mpfr_erf@@Base+0x918>
   3ae2c:	mov	w3, #0x0                   	// #0
   3ae30:	mov	x2, #0x0                   	// #0
   3ae34:	ldrsw	x1, [x1, #8]
   3ae38:	mov	x0, x26
   3ae3c:	bl	ba80 <mpfr_set_si_2exp@plt>
   3ae40:	mov	w19, w0
   3ae44:	b	3b2ec <mpfr_erf@@Base+0x918>
   3ae48:	ldr	w19, [x21, #8]
   3ae4c:	cmp	w19, #0x0
   3ae50:	b.le	3ae7c <mpfr_erf@@Base+0x4a8>
   3ae54:	ldr	w0, [sp, #128]
   3ae58:	tst	w0, #0xfffffffd
   3ae5c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
   3ae60:	b.ne	3ae98 <mpfr_erf@@Base+0x4c4>  // b.any
   3ae64:	mov	w3, w0
   3ae68:	mov	x2, #0x0                   	// #0
   3ae6c:	sxtw	x1, w19
   3ae70:	mov	x0, x26
   3ae74:	bl	ba80 <mpfr_set_si_2exp@plt>
   3ae78:	b	3b270 <mpfr_erf@@Base+0x89c>
   3ae7c:	ldr	w0, [sp, #128]
   3ae80:	cmp	w0, #0x2
   3ae84:	b.eq	3ae98 <mpfr_erf@@Base+0x4c4>  // b.none
   3ae88:	cmp	w0, #0x3
   3ae8c:	b.ne	3ae54 <mpfr_erf@@Base+0x480>  // b.any
   3ae90:	mov	w3, #0x2                   	// #2
   3ae94:	b	3ae68 <mpfr_erf@@Base+0x494>
   3ae98:	neg	w19, w19
   3ae9c:	mov	x1, #0x0                   	// #0
   3aea0:	mov	x0, x26
   3aea4:	bl	c0d0 <mpfr_setmax@plt>
   3aea8:	ldr	w0, [x21, #8]
   3aeac:	str	w0, [x26, #8]
   3aeb0:	b	3b270 <mpfr_erf@@Base+0x89c>
   3aeb4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   3aeb8:	add	x2, x2, #0xf48
   3aebc:	mov	w1, #0xc6                  	// #198
   3aec0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3aec4:	add	x0, x0, #0x648
   3aec8:	bl	cb40 <mpfr_assert_fail@plt>
   3aecc:	mov	x0, #0x0                   	// #0
   3aed0:	b	3acc0 <mpfr_erf@@Base+0x2ec>
   3aed4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3aed8:	lsl	x0, x19, #5
   3aedc:	str	x0, [sp, #328]
   3aee0:	bl	ccf0 <mpfr_allocate_func@plt>
   3aee4:	str	x0, [sp, #336]
   3aee8:	b	3acfc <mpfr_erf@@Base+0x328>
   3aeec:	mov	w3, #0x0                   	// #0
   3aef0:	ldr	x2, [sp, #112]
   3aef4:	mov	x1, x25
   3aef8:	mov	x0, x25
   3aefc:	bl	c1a0 <mpfr_add@plt>
   3af00:	ldr	x0, [sp, #216]
   3af04:	sub	x2, x19, x0
   3af08:	ldr	x19, [sp, #280]
   3af0c:	sub	x19, x19, x0
   3af10:	neg	x0, x20
   3af14:	cmp	x19, x0
   3af18:	b.ge	3af28 <mpfr_erf@@Base+0x554>  // b.tcont
   3af1c:	ucvtf	d0, w23
   3af20:	fcmpe	d8, d0
   3af24:	b.ls	3b03c <mpfr_erf@@Base+0x668>  // b.plast
   3af28:	add	x0, sp, #0x128
   3af2c:	mov	w3, w24
   3af30:	mov	x1, x0
   3af34:	bl	bb90 <mpfr_mul_2si@plt>
   3af38:	ucvtf	d1, w23
   3af3c:	fmov	d0, #8.000000000000000000e+00
   3af40:	fmul	d1, d1, d0
   3af44:	fmov	d0, #1.000000000000000000e+00
   3af48:	fadd	d1, d1, d0
   3af4c:	cmp	x19, #0x0
   3af50:	b.gt	3b024 <mpfr_erf@@Base+0x650>
   3af54:	mov	x0, x19
   3af58:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3af5c:	ldr	d0, [x1, #1680]
   3af60:	cmn	x19, #0xf
   3af64:	b.ge	3af8c <mpfr_erf@@Base+0x5b8>  // b.tcont
   3af68:	fmul	d1, d1, d0
   3af6c:	add	x0, x0, #0x10
   3af70:	cmn	x0, #0xf
   3af74:	b.lt	3af68 <mpfr_erf@@Base+0x594>  // b.tstop
   3af78:	mov	x0, #0xfffffffffffffff0    	// #-16
   3af7c:	sub	x0, x0, x19
   3af80:	and	x0, x0, #0xfffffffffffffff0
   3af84:	add	x19, x19, #0x10
   3af88:	add	x19, x0, x19
   3af8c:	add	x0, x19, #0x1
   3af90:	cbz	x19, 3afa8 <mpfr_erf@@Base+0x5d4>
   3af94:	fmov	d0, #5.000000000000000000e-01
   3af98:	fmul	d1, d1, d0
   3af9c:	add	x0, x0, #0x1
   3afa0:	cmp	x0, #0x1
   3afa4:	b.ne	3af98 <mpfr_erf@@Base+0x5c4>  // b.any
   3afa8:	add	x0, sp, #0x128
   3afac:	mov	w2, w24
   3afb0:	fmov	d0, #5.000000000000000000e-01
   3afb4:	fadd	d0, d1, d0
   3afb8:	mov	x1, x0
   3afbc:	bl	c3a0 <mpfr_add_d@plt>
   3afc0:	add	w23, w23, #0x1
   3afc4:	add	w28, w28, #0x2
   3afc8:	mov	w3, w24
   3afcc:	mov	x2, x22
   3afd0:	ldr	x1, [sp, #120]
   3afd4:	mov	x0, x22
   3afd8:	bl	bd50 <mpfr_mul@plt>
   3afdc:	mov	w3, w24
   3afe0:	mov	w2, w23
   3afe4:	mov	x1, x22
   3afe8:	mov	x0, x22
   3afec:	bl	cc60 <mpfr_div_ui@plt>
   3aff0:	mov	w3, w24
   3aff4:	mov	w2, w28
   3aff8:	mov	x1, x22
   3affc:	ldr	x0, [sp, #112]
   3b000:	bl	cc60 <mpfr_div_ui@plt>
   3b004:	ldr	x19, [sp, #216]
   3b008:	tbz	w23, #0, 3aeec <mpfr_erf@@Base+0x518>
   3b00c:	mov	w3, #0x0                   	// #0
   3b010:	ldr	x2, [sp, #112]
   3b014:	mov	x1, x25
   3b018:	mov	x0, x25
   3b01c:	bl	bb70 <mpfr_sub@plt>
   3b020:	b	3af00 <mpfr_erf@@Base+0x52c>
   3b024:	sub	x19, x19, #0x1
   3b028:	fadd	d1, d1, d1
   3b02c:	sub	x19, x19, #0x1
   3b030:	cmn	x19, #0x1
   3b034:	b.ne	3b028 <mpfr_erf@@Base+0x654>  // b.any
   3b038:	b	3afa8 <mpfr_erf@@Base+0x5d4>
   3b03c:	mov	w3, w24
   3b040:	mov	x2, x25
   3b044:	mov	x1, x21
   3b048:	mov	x0, x25
   3b04c:	bl	bd50 <mpfr_mul@plt>
   3b050:	ldr	x0, [sp, #216]
   3b054:	add	x0, x0, #0x1
   3b058:	str	x0, [sp, #216]
   3b05c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b060:	ldr	x1, [x0, #2624]
   3b064:	add	x0, x0, #0xa40
   3b068:	blr	x1
   3b06c:	mov	w2, #0x1                   	// #1
   3b070:	mrs	x1, tpidr_el0
   3b074:	add	x1, x1, x0
   3b078:	mov	x0, x22
   3b07c:	bl	c380 <mpfr_cache@plt>
   3b080:	mov	w2, #0x1                   	// #1
   3b084:	mov	x1, x22
   3b088:	mov	x0, x22
   3b08c:	bl	c930 <mpfr_sqrt@plt>
   3b090:	mov	w3, #0x0                   	// #0
   3b094:	mov	x2, x22
   3b098:	mov	x1, x25
   3b09c:	mov	x0, x25
   3b0a0:	bl	c620 <mpfr_div@plt>
   3b0a4:	add	x19, sp, #0x128
   3b0a8:	mov	w3, w24
   3b0ac:	mov	x2, #0x2                   	// #2
   3b0b0:	mov	x1, x19
   3b0b4:	mov	x0, x19
   3b0b8:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b0bc:	mov	w3, w24
   3b0c0:	mov	x2, #0xb                   	// #11
   3b0c4:	mov	x1, x19
   3b0c8:	mov	x0, x19
   3b0cc:	bl	c260 <mpfr_add_ui@plt>
   3b0d0:	ldr	x1, [sp, #312]
   3b0d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b0d8:	cmp	x1, x0
   3b0dc:	b.eq	3b168 <mpfr_erf@@Base+0x794>  // b.none
   3b0e0:	ldr	x19, [sp, #312]
   3b0e4:	add	x0, sp, #0x128
   3b0e8:	bl	c070 <mpfr_clear@plt>
   3b0ec:	ldr	x1, [sp, #216]
   3b0f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b0f4:	cmp	x1, x0
   3b0f8:	b.le	3b184 <mpfr_erf@@Base+0x7b0>
   3b0fc:	ldr	w0, [sp, #128]
   3b100:	cmp	w0, #0x0
   3b104:	cinc	x3, x27, eq  // eq = none
   3b108:	ldr	x0, [sp, #200]
   3b10c:	add	x1, x0, #0x3e
   3b110:	subs	x0, x0, #0x1
   3b114:	csel	x1, x1, x0, mi  // mi = first
   3b118:	asr	x1, x1, #6
   3b11c:	sub	x2, x20, x19
   3b120:	add	x1, x1, #0x1
   3b124:	ldr	x0, [sp, #224]
   3b128:	bl	c370 <mpfr_round_p@plt>
   3b12c:	cbz	w0, 3b184 <mpfr_erf@@Base+0x7b0>
   3b130:	ldr	w3, [sp, #208]
   3b134:	ldr	w2, [sp, #128]
   3b138:	add	x1, sp, #0xc8
   3b13c:	mov	x0, x26
   3b140:	bl	c6a0 <mpfr_set4@plt>
   3b144:	mov	w19, w0
   3b148:	ldr	x1, [sp, #328]
   3b14c:	cbz	x1, 3b264 <mpfr_erf@@Base+0x890>
   3b150:	ldr	x0, [sp, #336]
   3b154:	bl	cc20 <mpfr_free_func@plt>
   3b158:	ldp	x23, x24, [sp, #48]
   3b15c:	ldp	x27, x28, [sp, #80]
   3b160:	ldr	d8, [sp, #96]
   3b164:	b	3b270 <mpfr_erf@@Base+0x89c>
   3b168:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3b16c:	add	x2, x2, #0x650
   3b170:	mov	w1, #0xf7                  	// #247
   3b174:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3b178:	add	x0, x0, #0x648
   3b17c:	bl	cb40 <mpfr_assert_fail@plt>
   3b180:	b	3b0e0 <mpfr_erf@@Base+0x70c>
   3b184:	mov	x0, #0xfffffffffffffeff    	// #-257
   3b188:	movk	x0, #0x7fff, lsl #48
   3b18c:	sub	x0, x0, x20
   3b190:	ldr	x1, [sp, #152]
   3b194:	cmp	x0, x1
   3b198:	b.lt	3b234 <mpfr_erf@@Base+0x860>  // b.tstop
   3b19c:	ldr	x0, [sp, #152]
   3b1a0:	add	x20, x20, x0
   3b1a4:	add	x0, x20, x20, lsr #63
   3b1a8:	asr	x0, x0, #1
   3b1ac:	str	x0, [sp, #152]
   3b1b0:	ldr	x1, [sp, #328]
   3b1b4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3b1b8:	cmp	x20, x0
   3b1bc:	b.ge	3b24c <mpfr_erf@@Base+0x878>  // b.tcont
   3b1c0:	add	x19, x20, #0x3e
   3b1c4:	subs	x0, x20, #0x1
   3b1c8:	csel	x19, x19, x0, mi  // mi = first
   3b1cc:	asr	x19, x19, #6
   3b1d0:	add	x19, x19, #0x1
   3b1d4:	lsl	x0, x19, #5
   3b1d8:	str	x0, [sp, #328]
   3b1dc:	cbnz	x1, 3b250 <mpfr_erf@@Base+0x87c>
   3b1e0:	bl	ccf0 <mpfr_allocate_func@plt>
   3b1e4:	str	x0, [sp, #336]
   3b1e8:	str	x20, [sp, #168]
   3b1ec:	ldr	x1, [sp, #336]
   3b1f0:	str	x1, [sp, #192]
   3b1f4:	mov	w0, #0x1                   	// #1
   3b1f8:	str	w0, [sp, #176]
   3b1fc:	str	x20, [sp, #200]
   3b200:	add	x2, x1, x19, lsl #3
   3b204:	str	x2, [sp, #224]
   3b208:	str	w0, [sp, #208]
   3b20c:	str	x20, [sp, #232]
   3b210:	add	x2, x1, x19, lsl #4
   3b214:	str	x2, [sp, #256]
   3b218:	str	w0, [sp, #240]
   3b21c:	str	x20, [sp, #264]
   3b220:	add	x19, x19, x19, lsl #1
   3b224:	add	x19, x1, x19, lsl #3
   3b228:	str	x19, [sp, #288]
   3b22c:	str	w0, [sp, #272]
   3b230:	b	3ad60 <mpfr_erf@@Base+0x38c>
   3b234:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3b238:	add	x2, x2, #0x18
   3b23c:	mov	w1, #0xff                  	// #255
   3b240:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3b244:	add	x0, x0, #0x648
   3b248:	bl	cb40 <mpfr_assert_fail@plt>
   3b24c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3b250:	mov	x2, x0
   3b254:	ldr	x0, [sp, #336]
   3b258:	bl	c1c0 <mpfr_reallocate_func@plt>
   3b25c:	str	x0, [sp, #336]
   3b260:	b	3b1e8 <mpfr_erf@@Base+0x814>
   3b264:	ldp	x23, x24, [sp, #48]
   3b268:	ldp	x27, x28, [sp, #80]
   3b26c:	ldr	d8, [sp, #96]
   3b270:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b274:	ldr	x1, [x0, #2576]
   3b278:	add	x0, x0, #0xa10
   3b27c:	blr	x1
   3b280:	mrs	x1, tpidr_el0
   3b284:	ldr	w4, [sp, #132]
   3b288:	str	w4, [x1, x0]
   3b28c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b290:	ldr	x2, [x0, #2512]
   3b294:	add	x0, x0, #0x9d0
   3b298:	blr	x2
   3b29c:	ldr	x2, [sp, #136]
   3b2a0:	str	x2, [x1, x0]
   3b2a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b2a8:	ldr	x3, [x0, #2544]
   3b2ac:	add	x0, x0, #0x9f0
   3b2b0:	blr	x3
   3b2b4:	ldr	x3, [sp, #144]
   3b2b8:	str	x3, [x1, x0]
   3b2bc:	ldr	x0, [x26, #16]
   3b2c0:	cmp	x3, x0
   3b2c4:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   3b2c8:	b.gt	3b308 <mpfr_erf@@Base+0x934>
   3b2cc:	cbz	w19, 3b2ec <mpfr_erf@@Base+0x918>
   3b2d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b2d4:	ldr	x1, [x0, #2576]
   3b2d8:	add	x0, x0, #0xa10
   3b2dc:	blr	x1
   3b2e0:	orr	w2, w4, #0x8
   3b2e4:	mrs	x1, tpidr_el0
   3b2e8:	str	w2, [x1, x0]
   3b2ec:	mov	w0, w19
   3b2f0:	ldp	x19, x20, [sp, #16]
   3b2f4:	ldp	x21, x22, [sp, #32]
   3b2f8:	ldp	x25, x26, [sp, #64]
   3b2fc:	ldp	x29, x30, [sp]
   3b300:	add	sp, sp, #0x200
   3b304:	ret
   3b308:	ldr	w2, [sp, #128]
   3b30c:	mov	w1, w19
   3b310:	mov	x0, x26
   3b314:	bl	cb30 <mpfr_check_range@plt>
   3b318:	mov	w19, w0
   3b31c:	b	3b2ec <mpfr_erf@@Base+0x918>
   3b320:	mov	w1, #0xffffffff            	// #-1
   3b324:	tbz	w0, #31, 3abe0 <mpfr_erf@@Base+0x20c>
   3b328:	mov	w2, #0x1                   	// #1
   3b32c:	add	x1, sp, #0x148
   3b330:	add	x0, sp, #0x128
   3b334:	bl	c9a0 <mpfr_cmp3@plt>
   3b338:	cbnz	w0, 3abf0 <mpfr_erf@@Base+0x21c>
   3b33c:	add	x20, sp, #0x148
   3b340:	ldr	w3, [sp, #336]
   3b344:	ldr	w2, [sp, #128]
   3b348:	mov	x1, x20
   3b34c:	mov	x0, x26
   3b350:	bl	c6a0 <mpfr_set4@plt>
   3b354:	add	x0, sp, #0x128
   3b358:	bl	c070 <mpfr_clear@plt>
   3b35c:	mov	x0, x20
   3b360:	bl	c070 <mpfr_clear@plt>
   3b364:	b	3b270 <mpfr_erf@@Base+0x89c>

000000000003b368 <mpfr_inits@@Base>:
   3b368:	stp	x29, x30, [sp, #-112]!
   3b36c:	mov	x29, sp
   3b370:	str	x1, [sp, #56]
   3b374:	str	x2, [sp, #64]
   3b378:	str	x3, [sp, #72]
   3b37c:	str	x4, [sp, #80]
   3b380:	str	x5, [sp, #88]
   3b384:	str	x6, [sp, #96]
   3b388:	str	x7, [sp, #104]
   3b38c:	add	x1, sp, #0x70
   3b390:	str	x1, [sp, #16]
   3b394:	str	x1, [sp, #24]
   3b398:	add	x1, sp, #0x30
   3b39c:	str	x1, [sp, #32]
   3b3a0:	mov	w1, #0xffffffc8            	// #-56
   3b3a4:	str	w1, [sp, #40]
   3b3a8:	str	wzr, [sp, #44]
   3b3ac:	cbnz	x0, 3b3dc <mpfr_inits@@Base+0x74>
   3b3b0:	ldp	x29, x30, [sp], #112
   3b3b4:	ret
   3b3b8:	add	w2, w1, #0x8
   3b3bc:	str	w2, [sp, #40]
   3b3c0:	cmp	w2, #0x0
   3b3c4:	b.le	3b3fc <mpfr_inits@@Base+0x94>
   3b3c8:	add	x1, x0, #0xf
   3b3cc:	and	x1, x1, #0xfffffffffffffff8
   3b3d0:	str	x1, [sp, #16]
   3b3d4:	ldr	x0, [x0]
   3b3d8:	cbz	x0, 3b3b0 <mpfr_inits@@Base+0x48>
   3b3dc:	bl	bbd0 <mpfr_init@plt>
   3b3e0:	ldr	w1, [sp, #40]
   3b3e4:	ldr	x0, [sp, #16]
   3b3e8:	tbnz	w1, #31, 3b3b8 <mpfr_inits@@Base+0x50>
   3b3ec:	add	x1, x0, #0xf
   3b3f0:	and	x1, x1, #0xfffffffffffffff8
   3b3f4:	str	x1, [sp, #16]
   3b3f8:	b	3b3d4 <mpfr_inits@@Base+0x6c>
   3b3fc:	ldr	x0, [sp, #24]
   3b400:	add	x0, x0, w1, sxtw
   3b404:	b	3b3d4 <mpfr_inits@@Base+0x6c>

000000000003b408 <mpfr_inits2@@Base>:
   3b408:	stp	x29, x30, [sp, #-112]!
   3b40c:	mov	x29, sp
   3b410:	str	x19, [sp, #16]
   3b414:	mov	x19, x0
   3b418:	mov	x0, x1
   3b41c:	str	x2, [sp, #64]
   3b420:	str	x3, [sp, #72]
   3b424:	str	x4, [sp, #80]
   3b428:	str	x5, [sp, #88]
   3b42c:	str	x6, [sp, #96]
   3b430:	str	x7, [sp, #104]
   3b434:	add	x1, sp, #0x70
   3b438:	str	x1, [sp, #32]
   3b43c:	str	x1, [sp, #40]
   3b440:	add	x1, sp, #0x40
   3b444:	str	x1, [sp, #48]
   3b448:	mov	w1, #0xffffffd0            	// #-48
   3b44c:	str	w1, [sp, #56]
   3b450:	str	wzr, [sp, #60]
   3b454:	cbnz	x0, 3b488 <mpfr_inits2@@Base+0x80>
   3b458:	ldr	x19, [sp, #16]
   3b45c:	ldp	x29, x30, [sp], #112
   3b460:	ret
   3b464:	add	w0, w2, #0x8
   3b468:	str	w0, [sp, #56]
   3b46c:	cmp	w0, #0x0
   3b470:	b.le	3b4ac <mpfr_inits2@@Base+0xa4>
   3b474:	add	x0, x1, #0xf
   3b478:	and	x0, x0, #0xfffffffffffffff8
   3b47c:	str	x0, [sp, #32]
   3b480:	ldr	x0, [x1]
   3b484:	cbz	x0, 3b458 <mpfr_inits2@@Base+0x50>
   3b488:	mov	x1, x19
   3b48c:	bl	ca80 <mpfr_init2@plt>
   3b490:	ldr	w2, [sp, #56]
   3b494:	ldr	x1, [sp, #32]
   3b498:	tbnz	w2, #31, 3b464 <mpfr_inits2@@Base+0x5c>
   3b49c:	add	x2, x1, #0xf
   3b4a0:	and	x2, x2, #0xfffffffffffffff8
   3b4a4:	str	x2, [sp, #32]
   3b4a8:	b	3b480 <mpfr_inits2@@Base+0x78>
   3b4ac:	ldr	x1, [sp, #40]
   3b4b0:	add	x1, x1, w2, sxtw
   3b4b4:	b	3b480 <mpfr_inits2@@Base+0x78>

000000000003b4b8 <mpfr_clears@@Base>:
   3b4b8:	stp	x29, x30, [sp, #-112]!
   3b4bc:	mov	x29, sp
   3b4c0:	str	x1, [sp, #56]
   3b4c4:	str	x2, [sp, #64]
   3b4c8:	str	x3, [sp, #72]
   3b4cc:	str	x4, [sp, #80]
   3b4d0:	str	x5, [sp, #88]
   3b4d4:	str	x6, [sp, #96]
   3b4d8:	str	x7, [sp, #104]
   3b4dc:	add	x1, sp, #0x70
   3b4e0:	str	x1, [sp, #16]
   3b4e4:	str	x1, [sp, #24]
   3b4e8:	add	x1, sp, #0x30
   3b4ec:	str	x1, [sp, #32]
   3b4f0:	mov	w1, #0xffffffc8            	// #-56
   3b4f4:	str	w1, [sp, #40]
   3b4f8:	str	wzr, [sp, #44]
   3b4fc:	cbnz	x0, 3b52c <mpfr_clears@@Base+0x74>
   3b500:	ldp	x29, x30, [sp], #112
   3b504:	ret
   3b508:	add	w2, w1, #0x8
   3b50c:	str	w2, [sp, #40]
   3b510:	cmp	w2, #0x0
   3b514:	b.le	3b54c <mpfr_clears@@Base+0x94>
   3b518:	add	x1, x0, #0xf
   3b51c:	and	x1, x1, #0xfffffffffffffff8
   3b520:	str	x1, [sp, #16]
   3b524:	ldr	x0, [x0]
   3b528:	cbz	x0, 3b500 <mpfr_clears@@Base+0x48>
   3b52c:	bl	c070 <mpfr_clear@plt>
   3b530:	ldr	w1, [sp, #40]
   3b534:	ldr	x0, [sp, #16]
   3b538:	tbnz	w1, #31, 3b508 <mpfr_clears@@Base+0x50>
   3b53c:	add	x1, x0, #0xf
   3b540:	and	x1, x1, #0xfffffffffffffff8
   3b544:	str	x1, [sp, #16]
   3b548:	b	3b524 <mpfr_clears@@Base+0x6c>
   3b54c:	ldr	x0, [sp, #24]
   3b550:	add	x0, x0, w1, sxtw
   3b554:	b	3b524 <mpfr_clears@@Base+0x6c>

000000000003b558 <mpfr_sgn@@Base>:
   3b558:	mov	x1, x0
   3b55c:	ldr	x2, [x0, #16]
   3b560:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b564:	cmp	x2, x0
   3b568:	b.le	3b574 <mpfr_sgn@@Base+0x1c>
   3b56c:	ldr	w0, [x1, #8]
   3b570:	ret
   3b574:	mov	w0, #0x0                   	// #0
   3b578:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   3b57c:	cmp	x2, x3
   3b580:	b.ne	3b588 <mpfr_sgn@@Base+0x30>  // b.any
   3b584:	ret
   3b588:	mov	x0, #0x2                   	// #2
   3b58c:	movk	x0, #0x8000, lsl #48
   3b590:	cmp	x2, x0
   3b594:	b.ne	3b56c <mpfr_sgn@@Base+0x14>  // b.any
   3b598:	stp	x29, x30, [sp, #-16]!
   3b59c:	mov	x29, sp
   3b5a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b5a4:	ldr	x1, [x0, #2576]
   3b5a8:	add	x0, x0, #0xa10
   3b5ac:	blr	x1
   3b5b0:	mrs	x1, tpidr_el0
   3b5b4:	add	x0, x1, x0
   3b5b8:	ldr	w1, [x0]
   3b5bc:	orr	w1, w1, #0x10
   3b5c0:	str	w1, [x0]
   3b5c4:	mov	w0, #0x0                   	// #0
   3b5c8:	ldp	x29, x30, [sp], #16
   3b5cc:	ret

000000000003b5d0 <mpfr_check@@Base>:
   3b5d0:	mov	x1, x0
   3b5d4:	ldr	w0, [x0, #8]
   3b5d8:	add	w0, w0, #0x1
   3b5dc:	tst	w0, #0xfffffffd
   3b5e0:	b.ne	3b6fc <mpfr_check@@Base+0x12c>  // b.any
   3b5e4:	ldr	x3, [x1]
   3b5e8:	sub	x4, x3, #0x1
   3b5ec:	mov	w0, #0x0                   	// #0
   3b5f0:	mov	x2, #0xfffffffffffffefe    	// #-258
   3b5f4:	movk	x2, #0x7fff, lsl #48
   3b5f8:	cmp	x4, x2
   3b5fc:	b.hi	3b70c <mpfr_check@@Base+0x13c>  // b.pmore
   3b600:	ldr	x4, [x1, #24]
   3b604:	cbz	x4, 3b704 <mpfr_check@@Base+0x134>
   3b608:	ldur	x2, [x4, #-8]
   3b60c:	cmp	x2, #0x0
   3b610:	b.le	3b70c <mpfr_check@@Base+0x13c>
   3b614:	cmp	x3, x2, lsl #6
   3b618:	b.gt	3b70c <mpfr_check@@Base+0x13c>
   3b61c:	mov	x0, x4
   3b620:	add	x2, x4, x2, lsl #3
   3b624:	ldr	x5, [x0], #8
   3b628:	cmp	x0, x2
   3b62c:	b.ne	3b624 <mpfr_check@@Base+0x54>  // b.any
   3b630:	ldr	x1, [x1, #16]
   3b634:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b638:	cmp	x1, x0
   3b63c:	b.le	3b6e0 <mpfr_check@@Base+0x110>
   3b640:	add	x0, x3, #0x3e
   3b644:	subs	x2, x3, #0x1
   3b648:	csel	x0, x0, x2, mi  // mi = first
   3b64c:	asr	x0, x0, #6
   3b650:	ldr	x2, [x4, x0, lsl #3]
   3b654:	mov	w0, #0x0                   	// #0
   3b658:	tbz	x2, #63, 3b70c <mpfr_check@@Base+0x13c>
   3b65c:	negs	x0, x3
   3b660:	and	x3, x3, #0x3f
   3b664:	and	x0, x0, #0x3f
   3b668:	csneg	x3, x3, x0, mi  // mi = first
   3b66c:	cbz	w3, 3b68c <mpfr_check@@Base+0xbc>
   3b670:	ldr	x2, [x4]
   3b674:	neg	w3, w3
   3b678:	mov	x0, #0xffffffffffffffff    	// #-1
   3b67c:	lsl	x3, x0, x3
   3b680:	mov	w0, #0x0                   	// #0
   3b684:	bics	xzr, x2, x3
   3b688:	b.ne	3b70c <mpfr_check@@Base+0x13c>  // b.any
   3b68c:	stp	x29, x30, [sp, #-16]!
   3b690:	mov	x29, sp
   3b694:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b698:	ldr	x2, [x0, #2512]
   3b69c:	add	x0, x0, #0x9d0
   3b6a0:	blr	x2
   3b6a4:	mrs	x2, tpidr_el0
   3b6a8:	ldr	x2, [x2, x0]
   3b6ac:	mov	w0, #0x0                   	// #0
   3b6b0:	cmp	x1, x2
   3b6b4:	b.lt	3b6d8 <mpfr_check@@Base+0x108>  // b.tstop
   3b6b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b6bc:	ldr	x2, [x0, #2544]
   3b6c0:	add	x0, x0, #0x9f0
   3b6c4:	blr	x2
   3b6c8:	mrs	x2, tpidr_el0
   3b6cc:	ldr	x0, [x2, x0]
   3b6d0:	cmp	x1, x0
   3b6d4:	cset	w0, le
   3b6d8:	ldp	x29, x30, [sp], #16
   3b6dc:	ret
   3b6e0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3b6e4:	add	x0, x1, x0
   3b6e8:	cmp	x0, #0x1
   3b6ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b6f0:	ccmp	x1, x0, #0x4, hi  // hi = pmore
   3b6f4:	cset	w0, eq  // eq = none
   3b6f8:	ret
   3b6fc:	mov	w0, #0x0                   	// #0
   3b700:	ret
   3b704:	mov	w0, #0x0                   	// #0
   3b708:	ret
   3b70c:	ret

000000000003b710 <mpfr_sub1sp@@Base>:
   3b710:	stp	x29, x30, [sp, #-192]!
   3b714:	mov	x29, sp
   3b718:	stp	x19, x20, [sp, #16]
   3b71c:	stp	x21, x22, [sp, #32]
   3b720:	stp	x23, x24, [sp, #48]
   3b724:	stp	x25, x26, [sp, #64]
   3b728:	stp	x27, x28, [sp, #80]
   3b72c:	mov	x23, x0
   3b730:	mov	x21, x1
   3b734:	mov	x24, x2
   3b738:	str	w3, [x29, #172]
   3b73c:	ldr	x19, [x1]
   3b740:	ldr	x20, [x1, #16]
   3b744:	ldr	x22, [x2, #16]
   3b748:	add	x0, x19, #0x1
   3b74c:	str	x0, [x29, #160]
   3b750:	cmp	x19, #0x3f
   3b754:	b.le	3b910 <mpfr_sub1sp@@Base+0x200>
   3b758:	sub	x27, x19, #0x1
   3b75c:	sub	x0, x19, #0x41
   3b760:	cmp	x0, #0x3e
   3b764:	b.ls	3bc1c <mpfr_sub1sp@@Base+0x50c>  // b.plast
   3b768:	cmp	x19, #0x40
   3b76c:	b.eq	3c0d0 <mpfr_sub1sp@@Base+0x9c0>  // b.none
   3b770:	sub	x0, x19, #0x81
   3b774:	cmp	x0, #0x3e
   3b778:	b.ls	3c43c <mpfr_sub1sp@@Base+0xd2c>  // b.plast
   3b77c:	add	x25, x19, #0x3e
   3b780:	subs	x0, x19, #0x1
   3b784:	csel	x25, x25, x0, mi  // mi = first
   3b788:	asr	x25, x25, #6
   3b78c:	add	x26, x25, #0x1
   3b790:	str	xzr, [x29, #184]
   3b794:	cmp	x20, x22
   3b798:	b.eq	3ca34 <mpfr_sub1sp@@Base+0x1324>  // b.none
   3b79c:	b.ge	3ca64 <mpfr_sub1sp@@Base+0x1354>  // b.tcont
   3b7a0:	ldr	w0, [x21, #8]
   3b7a4:	neg	w0, w0
   3b7a8:	str	w0, [x23, #8]
   3b7ac:	str	x22, [x29, #136]
   3b7b0:	str	x20, [x29, #128]
   3b7b4:	sub	x20, x22, x20
   3b7b8:	cmp	x20, #0x1
   3b7bc:	b.ls	3cab0 <mpfr_sub1sp@@Base+0x13a0>  // b.plast
   3b7c0:	cmp	x19, x20
   3b7c4:	b.ls	3cdd4 <mpfr_sub1sp@@Base+0x16c4>  // b.plast
   3b7c8:	neg	w0, w19
   3b7cc:	and	w1, w0, #0x3f
   3b7d0:	str	w1, [x29, #152]
   3b7d4:	and	x0, x0, #0x3f
   3b7d8:	str	x0, [x29, #120]
   3b7dc:	lsl	x0, x26, #3
   3b7e0:	str	x0, [x29, #112]
   3b7e4:	cmp	x0, #0x4, lsl #12
   3b7e8:	b.hi	3cfb4 <mpfr_sub1sp@@Base+0x18a4>  // b.pmore
   3b7ec:	add	x0, x0, #0xf
   3b7f0:	and	x0, x0, #0xfffffffffffffff0
   3b7f4:	sub	sp, sp, x0
   3b7f8:	mov	x28, sp
   3b7fc:	lsr	x0, x20, #6
   3b800:	str	x0, [x29, #144]
   3b804:	ands	x3, x20, #0x3f
   3b808:	b.eq	3cfc8 <mpfr_sub1sp@@Base+0x18b8>  // b.none
   3b80c:	ldr	x0, [x29, #144]
   3b810:	cbnz	x0, 3d008 <mpfr_sub1sp@@Base+0x18f8>
   3b814:	mov	x2, x26
   3b818:	ldr	x1, [x21, #24]
   3b81c:	mov	x0, x28
   3b820:	bl	bce0 <__gmpn_rshift@plt>
   3b824:	ldr	x0, [x29, #120]
   3b828:	cbz	x0, 3d040 <mpfr_sub1sp@@Base+0x1930>
   3b82c:	ldr	x0, [x28]
   3b830:	ldr	w3, [x29, #152]
   3b834:	sub	w2, w3, #0x1
   3b838:	mov	x1, #0x1                   	// #1
   3b83c:	lsl	x1, x1, x2
   3b840:	and	x1, x1, x0
   3b844:	str	x1, [x29, #144]
   3b848:	mov	x20, #0xffffffffffffffff    	// #-1
   3b84c:	lsl	x20, x20, x2
   3b850:	bics	x20, x0, x20
   3b854:	b.ne	3d610 <mpfr_sub1sp@@Base+0x1f00>  // b.any
   3b858:	mov	w0, w3
   3b85c:	ldr	x1, [x29, #128]
   3b860:	add	x0, x0, x1
   3b864:	add	x27, x0, x27
   3b868:	ldr	x0, [x29, #136]
   3b86c:	sub	x27, x27, x0
   3b870:	cmp	x19, x27
   3b874:	b.lt	3b8d0 <mpfr_sub1sp@@Base+0x1c0>  // b.tstop
   3b878:	ldr	x2, [x21, #24]
   3b87c:	add	x0, x27, #0x3f
   3b880:	cmp	x27, #0x0
   3b884:	csel	x0, x0, x27, lt  // lt = tstop
   3b888:	sub	x0, x25, x0, asr #6
   3b88c:	negs	x1, x27
   3b890:	and	x27, x27, #0x3f
   3b894:	and	x1, x1, #0x3f
   3b898:	csneg	x27, x27, x1, mi  // mi = first
   3b89c:	mov	x1, #0x3f                  	// #63
   3b8a0:	sub	x1, x1, x27
   3b8a4:	mov	x27, #0xffffffffffffffff    	// #-1
   3b8a8:	lsl	x27, x27, x1
   3b8ac:	ldr	x1, [x2, x0, lsl #3]
   3b8b0:	bics	xzr, x1, x27
   3b8b4:	b.ne	3d610 <mpfr_sub1sp@@Base+0x1f00>  // b.any
   3b8b8:	subs	x0, x0, #0x1
   3b8bc:	b.mi	3b8c8 <mpfr_sub1sp@@Base+0x1b8>  // b.first
   3b8c0:	ldr	x1, [x2, x0, lsl #3]
   3b8c4:	cbz	x1, 3b8b8 <mpfr_sub1sp@@Base+0x1a8>
   3b8c8:	mvn	x0, x0
   3b8cc:	lsr	x20, x0, #63
   3b8d0:	ldr	x1, [x24, #24]
   3b8d4:	ldr	x0, [x29, #112]
   3b8d8:	sub	x19, x0, #0x8
   3b8dc:	ldr	x0, [x1, x19]
   3b8e0:	ldr	x2, [x28, x19]
   3b8e4:	sub	x0, x0, x2
   3b8e8:	mov	x2, #0xffffffffffffffff    	// #-1
   3b8ec:	str	x2, [x29, #104]
   3b8f0:	str	x2, [x29, #96]
   3b8f4:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3b8f8:	cmp	x0, x2
   3b8fc:	b.hi	3d644 <mpfr_sub1sp@@Base+0x1f34>  // b.pmore
   3b900:	cbnz	x20, 3d0b8 <mpfr_sub1sp@@Base+0x19a8>
   3b904:	str	x20, [x29, #104]
   3b908:	str	x20, [x29, #96]
   3b90c:	b	3d644 <mpfr_sub1sp@@Base+0x1f34>
   3b910:	ldr	x5, [x23, #24]
   3b914:	ldr	x2, [x1, #24]
   3b918:	ldr	x1, [x24, #24]
   3b91c:	cmp	x20, x22
   3b920:	b.eq	3ba48 <mpfr_sub1sp@@Base+0x338>  // b.none
   3b924:	b.le	3bb38 <mpfr_sub1sp@@Base+0x428>
   3b928:	ldr	w0, [x21, #8]
   3b92c:	str	w0, [x23, #8]
   3b930:	sub	x22, x20, x22
   3b934:	mov	x0, #0x40                  	// #64
   3b938:	sub	x19, x0, x19
   3b93c:	mov	x0, #0x1                   	// #1
   3b940:	lsl	x3, x0, x19
   3b944:	cmp	x22, #0x3f
   3b948:	b.hi	3badc <mpfr_sub1sp@@Base+0x3cc>  // b.pmore
   3b94c:	ldr	x0, [x1]
   3b950:	neg	w1, w22
   3b954:	lsl	x1, x0, x1
   3b958:	lsr	x22, x0, x22
   3b95c:	ldr	x0, [x2]
   3b960:	sub	x0, x0, x22
   3b964:	negs	x1, x1
   3b968:	cset	x2, ne  // ne = any
   3b96c:	sub	x0, x0, x2
   3b970:	clz	x2, x0
   3b974:	mov	x4, x2
   3b978:	cbz	x2, 3b98c <mpfr_sub1sp@@Base+0x27c>
   3b97c:	lsl	x0, x0, x2
   3b980:	neg	w6, w2
   3b984:	lsr	x6, x1, x6
   3b988:	orr	x0, x6, x0
   3b98c:	lsl	x1, x1, x2
   3b990:	sub	x20, x20, x4
   3b994:	sub	w6, w19, #0x1
   3b998:	mov	x2, #0x1                   	// #1
   3b99c:	lsl	x6, x2, x6
   3b9a0:	and	x4, x6, x0
   3b9a4:	sub	x2, x3, #0x1
   3b9a8:	eor	x2, x2, x6
   3b9ac:	and	x2, x2, x0
   3b9b0:	orr	x2, x2, x1
   3b9b4:	neg	x1, x3
   3b9b8:	and	x0, x1, x0
   3b9bc:	str	x0, [x5]
   3b9c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3b9c4:	ldr	x1, [x0, #2512]
   3b9c8:	add	x0, x0, #0x9d0
   3b9cc:	blr	x1
   3b9d0:	mrs	x1, tpidr_el0
   3b9d4:	ldr	x0, [x1, x0]
   3b9d8:	cmp	x0, x20
   3b9dc:	b.gt	3bb5c <mpfr_sub1sp@@Base+0x44c>
   3b9e0:	str	x20, [x23, #16]
   3b9e4:	orr	x0, x4, x2
   3b9e8:	cmp	x0, #0x0
   3b9ec:	mov	w1, #0x0                   	// #0
   3b9f0:	ldr	w0, [x29, #172]
   3b9f4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3b9f8:	b.eq	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>  // b.none
   3b9fc:	cbnz	w0, 3bbac <mpfr_sub1sp@@Base+0x49c>
   3ba00:	cbz	x4, 3ba14 <mpfr_sub1sp@@Base+0x304>
   3ba04:	cbnz	x2, 3bbc8 <mpfr_sub1sp@@Base+0x4b8>
   3ba08:	ldr	x0, [x5]
   3ba0c:	lsr	x19, x0, x19
   3ba10:	tbnz	w19, #0, 3bbc8 <mpfr_sub1sp@@Base+0x4b8>
   3ba14:	ldr	w1, [x23, #8]
   3ba18:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3ba1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3ba20:	ldr	x2, [x0, #2576]
   3ba24:	add	x0, x0, #0xa10
   3ba28:	blr	x2
   3ba2c:	mrs	x2, tpidr_el0
   3ba30:	add	x0, x2, x0
   3ba34:	ldr	w2, [x0]
   3ba38:	orr	w2, w2, #0x8
   3ba3c:	str	w2, [x0]
   3ba40:	neg	w1, w1
   3ba44:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3ba48:	ldr	x2, [x2]
   3ba4c:	ldr	x1, [x1]
   3ba50:	subs	x0, x2, x1
   3ba54:	b.eq	3baac <mpfr_sub1sp@@Base+0x39c>  // b.none
   3ba58:	cmp	x2, x0
   3ba5c:	b.cs	3bad0 <mpfr_sub1sp@@Base+0x3c0>  // b.hs, b.nlast
   3ba60:	sub	x0, x1, x2
   3ba64:	ldr	w1, [x21, #8]
   3ba68:	neg	w1, w1
   3ba6c:	str	w1, [x23, #8]
   3ba70:	clz	x1, x0
   3ba74:	lsl	x0, x0, x1
   3ba78:	str	x0, [x5]
   3ba7c:	sub	x20, x20, x1
   3ba80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3ba84:	ldr	x1, [x0, #2512]
   3ba88:	add	x0, x0, #0x9d0
   3ba8c:	blr	x1
   3ba90:	mrs	x1, tpidr_el0
   3ba94:	ldr	x0, [x1, x0]
   3ba98:	cmp	x0, x20
   3ba9c:	b.gt	3bb5c <mpfr_sub1sp@@Base+0x44c>
   3baa0:	str	x20, [x23, #16]
   3baa4:	mov	w1, #0x0                   	// #0
   3baa8:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3baac:	mov	w0, #0x1                   	// #1
   3bab0:	mov	w1, w3
   3bab4:	cmp	w1, #0x3
   3bab8:	cneg	w0, w0, eq  // eq = none
   3babc:	str	w0, [x23, #8]
   3bac0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3bac4:	str	x0, [x23, #16]
   3bac8:	mov	w1, #0x0                   	// #0
   3bacc:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bad0:	ldr	w1, [x21, #8]
   3bad4:	str	w1, [x23, #8]
   3bad8:	b	3ba70 <mpfr_sub1sp@@Base+0x360>
   3badc:	ldr	x0, [x2]
   3bae0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3bae4:	cmp	x0, x2
   3bae8:	b.ls	3bb00 <mpfr_sub1sp@@Base+0x3f0>  // b.plast
   3baec:	sub	x0, x0, x3
   3baf0:	str	x0, [x5]
   3baf4:	mov	x2, #0x1                   	// #1
   3baf8:	mov	x4, x2
   3bafc:	b	3b9c0 <mpfr_sub1sp@@Base+0x2b0>
   3bb00:	cmp	x22, #0x40
   3bb04:	mov	w4, #0x1                   	// #1
   3bb08:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   3bb0c:	b.gt	3bb20 <mpfr_sub1sp@@Base+0x410>
   3bb10:	ldr	x1, [x1]
   3bb14:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3bb18:	cmp	x1, x0
   3bb1c:	cset	w4, eq  // eq = none
   3bb20:	sxtw	x4, w4
   3bb24:	neg	x0, x3
   3bb28:	str	x0, [x5]
   3bb2c:	sub	x20, x20, #0x1
   3bb30:	mov	x2, #0x1                   	// #1
   3bb34:	b	3b9c0 <mpfr_sub1sp@@Base+0x2b0>
   3bb38:	ldr	w0, [x21, #8]
   3bb3c:	neg	w0, w0
   3bb40:	mov	x3, x2
   3bb44:	mov	x2, x1
   3bb48:	mov	x1, x3
   3bb4c:	mov	x3, x20
   3bb50:	mov	x20, x22
   3bb54:	mov	x22, x3
   3bb58:	b	3b92c <mpfr_sub1sp@@Base+0x21c>
   3bb5c:	ldr	w1, [x29, #172]
   3bb60:	cbnz	w1, 3bb88 <mpfr_sub1sp@@Base+0x478>
   3bb64:	sub	x0, x0, #0x1
   3bb68:	cmp	x0, x20
   3bb6c:	b.gt	3bba0 <mpfr_sub1sp@@Base+0x490>
   3bb70:	ldr	x1, [x5]
   3bb74:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3bb78:	cmp	x1, x0
   3bb7c:	ldr	w0, [x29, #172]
   3bb80:	csinc	w0, w0, wzr, ne  // ne = any
   3bb84:	str	w0, [x29, #172]
   3bb88:	ldr	w2, [x23, #8]
   3bb8c:	ldr	w1, [x29, #172]
   3bb90:	mov	x0, x23
   3bb94:	bl	c3c0 <mpfr_underflow@plt>
   3bb98:	mov	w1, w0
   3bb9c:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bba0:	mov	w0, #0x1                   	// #1
   3bba4:	str	w0, [x29, #172]
   3bba8:	b	3bb88 <mpfr_sub1sp@@Base+0x478>
   3bbac:	ldr	w1, [x29, #172]
   3bbb0:	cmp	w1, #0x1
   3bbb4:	b.eq	3ba14 <mpfr_sub1sp@@Base+0x304>  // b.none
   3bbb8:	ldr	w0, [x23, #8]
   3bbbc:	add	w0, w1, w0, lsr #31
   3bbc0:	cmp	w0, #0x3
   3bbc4:	b.eq	3ba14 <mpfr_sub1sp@@Base+0x304>  // b.none
   3bbc8:	ldr	x0, [x5]
   3bbcc:	add	x0, x3, x0
   3bbd0:	str	x0, [x5]
   3bbd4:	cbz	x0, 3bc08 <mpfr_sub1sp@@Base+0x4f8>
   3bbd8:	ldr	w1, [x23, #8]
   3bbdc:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bbe0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3bbe4:	ldr	x2, [x0, #2576]
   3bbe8:	add	x0, x0, #0xa10
   3bbec:	blr	x2
   3bbf0:	mrs	x2, tpidr_el0
   3bbf4:	add	x0, x2, x0
   3bbf8:	ldr	w2, [x0]
   3bbfc:	orr	w2, w2, #0x8
   3bc00:	str	w2, [x0]
   3bc04:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bc08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3bc0c:	str	x0, [x5]
   3bc10:	add	x20, x20, #0x1
   3bc14:	str	x20, [x23, #16]
   3bc18:	b	3bbd8 <mpfr_sub1sp@@Base+0x4c8>
   3bc1c:	ldr	x4, [x23, #24]
   3bc20:	ldr	x6, [x1, #24]
   3bc24:	ldr	x1, [x2, #24]
   3bc28:	cmp	x20, x22
   3bc2c:	b.eq	3bd9c <mpfr_sub1sp@@Base+0x68c>  // b.none
   3bc30:	b.le	3bfd4 <mpfr_sub1sp@@Base+0x8c4>
   3bc34:	ldr	w0, [x21, #8]
   3bc38:	str	w0, [x23, #8]
   3bc3c:	sub	x22, x20, x22
   3bc40:	mov	x0, #0x80                  	// #128
   3bc44:	sub	x19, x0, x19
   3bc48:	mov	x5, #0x1                   	// #1
   3bc4c:	lsl	x5, x5, x19
   3bc50:	sub	x2, x5, #0x1
   3bc54:	cmp	x22, #0x3f
   3bc58:	b.hi	3be90 <mpfr_sub1sp@@Base+0x780>  // b.pmore
   3bc5c:	ldr	x10, [x1, #8]
   3bc60:	mov	w7, #0x40                  	// #64
   3bc64:	sub	w8, w7, w22
   3bc68:	ldr	x7, [x1]
   3bc6c:	lsl	x9, x10, x8
   3bc70:	lsr	x0, x7, x22
   3bc74:	orr	x9, x9, x0
   3bc78:	ldr	x0, [x6]
   3bc7c:	sub	x3, x0, x9
   3bc80:	lsr	x22, x10, x22
   3bc84:	ldr	x1, [x6, #8]
   3bc88:	sub	x1, x1, x22
   3bc8c:	cmp	x9, x0
   3bc90:	cset	x0, hi  // hi = pmore
   3bc94:	sub	x1, x1, x0
   3bc98:	lsl	x7, x7, x8
   3bc9c:	cbz	x7, 3d3e0 <mpfr_sub1sp@@Base+0x1cd0>
   3bca0:	cmp	x3, #0x0
   3bca4:	cset	x0, eq  // eq = none
   3bca8:	sub	x0, x1, x0
   3bcac:	sub	x6, x3, #0x1
   3bcb0:	neg	x1, x7
   3bcb4:	mov	x3, x0
   3bcb8:	clz	x7, x3
   3bcbc:	cbz	x7, 3bce8 <mpfr_sub1sp@@Base+0x5d8>
   3bcc0:	mov	w0, #0x40                  	// #64
   3bcc4:	sub	w0, w0, w7
   3bcc8:	lsl	x3, x3, x7
   3bccc:	lsr	x9, x6, x0
   3bcd0:	orr	x3, x3, x9
   3bcd4:	lsl	x6, x6, x7
   3bcd8:	lsr	x0, x1, x0
   3bcdc:	orr	x6, x0, x6
   3bce0:	lsl	x1, x1, x7
   3bce4:	sub	x20, x20, x7
   3bce8:	str	x3, [x4, #8]
   3bcec:	sub	w3, w19, #0x1
   3bcf0:	mov	x0, #0x1                   	// #1
   3bcf4:	lsl	x0, x0, x3
   3bcf8:	and	x3, x0, x6
   3bcfc:	eor	x2, x2, x0
   3bd00:	and	x2, x2, x6
   3bd04:	orr	x2, x2, x1
   3bd08:	neg	x0, x5
   3bd0c:	and	x6, x0, x6
   3bd10:	str	x6, [x4]
   3bd14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3bd18:	ldr	x1, [x0, #2512]
   3bd1c:	add	x0, x0, #0x9d0
   3bd20:	blr	x1
   3bd24:	mrs	x1, tpidr_el0
   3bd28:	ldr	x0, [x1, x0]
   3bd2c:	cmp	x0, x20
   3bd30:	b.gt	3bff8 <mpfr_sub1sp@@Base+0x8e8>
   3bd34:	str	x20, [x23, #16]
   3bd38:	orr	x0, x3, x2
   3bd3c:	cmp	x0, #0x0
   3bd40:	mov	w1, #0x0                   	// #0
   3bd44:	ldr	w0, [x29, #172]
   3bd48:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3bd4c:	b.eq	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>  // b.none
   3bd50:	cbnz	w0, 3c050 <mpfr_sub1sp@@Base+0x940>
   3bd54:	cbz	x3, 3bd68 <mpfr_sub1sp@@Base+0x658>
   3bd58:	cbnz	x2, 3c06c <mpfr_sub1sp@@Base+0x95c>
   3bd5c:	ldr	x0, [x4]
   3bd60:	lsr	x19, x0, x19
   3bd64:	tbnz	w19, #0, 3c06c <mpfr_sub1sp@@Base+0x95c>
   3bd68:	ldr	w1, [x23, #8]
   3bd6c:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bd70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3bd74:	ldr	x2, [x0, #2576]
   3bd78:	add	x0, x0, #0xa10
   3bd7c:	blr	x2
   3bd80:	mrs	x2, tpidr_el0
   3bd84:	add	x0, x2, x0
   3bd88:	ldr	w2, [x0]
   3bd8c:	orr	w2, w2, #0x8
   3bd90:	str	w2, [x0]
   3bd94:	neg	w1, w1
   3bd98:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3bd9c:	ldr	x3, [x6]
   3bda0:	ldr	x5, [x1]
   3bda4:	sub	x2, x3, x5
   3bda8:	ldr	x7, [x6, #8]
   3bdac:	ldr	x1, [x1, #8]
   3bdb0:	cmp	x3, x5
   3bdb4:	cset	x6, cc  // cc = lo, ul, last
   3bdb8:	sub	x0, x7, x1
   3bdbc:	sub	x0, x0, x6
   3bdc0:	orr	x8, x2, x0
   3bdc4:	cbz	x8, 3be58 <mpfr_sub1sp@@Base+0x748>
   3bdc8:	cmp	x7, x0
   3bdcc:	b.hi	3be7c <mpfr_sub1sp@@Base+0x76c>  // b.pmore
   3bdd0:	ldr	w8, [x21, #8]
   3bdd4:	neg	w8, w8
   3bdd8:	subs	x2, x5, x3
   3bddc:	cset	x0, ne  // ne = any
   3bde0:	sub	x6, x6, x0
   3bde4:	sub	x0, x1, x7
   3bde8:	add	x0, x6, x0
   3bdec:	str	w8, [x23, #8]
   3bdf0:	cbnz	x0, 3be04 <mpfr_sub1sp@@Base+0x6f4>
   3bdf4:	sub	x20, x20, #0x40
   3bdf8:	mov	x1, x0
   3bdfc:	mov	x0, x2
   3be00:	mov	x2, x1
   3be04:	clz	x5, x0
   3be08:	cbz	x5, 3be84 <mpfr_sub1sp@@Base+0x774>
   3be0c:	neg	w1, w5
   3be10:	lsr	x1, x2, x1
   3be14:	lsl	x0, x0, x5
   3be18:	orr	x0, x1, x0
   3be1c:	str	x0, [x4, #8]
   3be20:	lsl	x2, x2, x5
   3be24:	str	x2, [x4]
   3be28:	sub	x20, x20, x5
   3be2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3be30:	ldr	x1, [x0, #2512]
   3be34:	add	x0, x0, #0x9d0
   3be38:	blr	x1
   3be3c:	mrs	x1, tpidr_el0
   3be40:	ldr	x0, [x1, x0]
   3be44:	cmp	x0, x20
   3be48:	b.gt	3bff8 <mpfr_sub1sp@@Base+0x8e8>
   3be4c:	str	x20, [x23, #16]
   3be50:	mov	w1, #0x0                   	// #0
   3be54:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3be58:	mov	w0, #0x1                   	// #1
   3be5c:	ldr	w1, [x29, #172]
   3be60:	cmp	w1, #0x3
   3be64:	cneg	w0, w0, eq  // eq = none
   3be68:	str	w0, [x23, #8]
   3be6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3be70:	str	x0, [x23, #16]
   3be74:	mov	w1, #0x0                   	// #0
   3be78:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3be7c:	ldr	w8, [x21, #8]
   3be80:	b	3bdec <mpfr_sub1sp@@Base+0x6dc>
   3be84:	str	x0, [x4, #8]
   3be88:	str	x2, [x4]
   3be8c:	b	3be2c <mpfr_sub1sp@@Base+0x71c>
   3be90:	cmp	x22, #0x7f
   3be94:	b.hi	3bf50 <mpfr_sub1sp@@Base+0x840>  // b.pmore
   3be98:	cmp	x22, #0x40
   3be9c:	b.eq	3bf48 <mpfr_sub1sp@@Base+0x838>  // b.none
   3bea0:	mov	w0, #0x80                  	// #128
   3bea4:	sub	w3, w0, w22
   3bea8:	ldr	x0, [x1, #8]
   3beac:	lsl	x0, x0, x3
   3beb0:	ldr	x3, [x1]
   3beb4:	cmp	x3, #0x0
   3beb8:	cset	x3, ne  // ne = any
   3bebc:	orr	x0, x0, x3
   3bec0:	cmp	x0, #0x0
   3bec4:	cset	w8, ne  // ne = any
   3bec8:	sub	w22, w22, #0x40
   3becc:	ldr	x3, [x1, #8]
   3bed0:	lsr	x3, x3, x22
   3bed4:	cinc	x3, x3, ne  // ne = any
   3bed8:	ldr	x1, [x6]
   3bedc:	sub	x7, x1, x3
   3bee0:	cmp	x3, x1
   3bee4:	cset	x9, hi  // hi = pmore
   3bee8:	ldr	x1, [x6, #8]
   3beec:	sub	x1, x1, x9
   3bef0:	cmp	x3, #0x0
   3bef4:	ccmp	w8, #0x0, #0x4, eq  // eq = none
   3bef8:	cset	x3, ne  // ne = any
   3befc:	neg	x0, x0
   3bf00:	subs	x1, x1, x3
   3bf04:	b.mi	3bf18 <mpfr_sub1sp@@Base+0x808>  // b.first
   3bf08:	extr	x1, x1, x7, #63
   3bf0c:	extr	x7, x7, x0, #63
   3bf10:	lsl	x0, x0, #1
   3bf14:	sub	x20, x20, #0x1
   3bf18:	str	x1, [x4, #8]
   3bf1c:	sub	w3, w19, #0x1
   3bf20:	mov	x1, #0x1                   	// #1
   3bf24:	lsl	x1, x1, x3
   3bf28:	and	x3, x1, x7
   3bf2c:	eor	x2, x2, x1
   3bf30:	and	x2, x2, x7
   3bf34:	orr	x2, x2, x0
   3bf38:	neg	x0, x5
   3bf3c:	and	x7, x0, x7
   3bf40:	str	x7, [x4]
   3bf44:	b	3bd14 <mpfr_sub1sp@@Base+0x604>
   3bf48:	ldr	x0, [x1]
   3bf4c:	b	3bec0 <mpfr_sub1sp@@Base+0x7b0>
   3bf50:	ldr	x2, [x6]
   3bf54:	cmp	x5, x2
   3bf58:	cset	x3, hi  // hi = pmore
   3bf5c:	ldr	x0, [x6, #8]
   3bf60:	subs	x0, x0, x3
   3bf64:	b.mi	3bfbc <mpfr_sub1sp@@Base+0x8ac>  // b.first
   3bf68:	cmp	x22, #0x80
   3bf6c:	mov	w3, #0x1                   	// #1
   3bf70:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   3bf74:	b.gt	3bf8c <mpfr_sub1sp@@Base+0x87c>
   3bf78:	ldr	x2, [x1, #8]
   3bf7c:	mov	w3, #0x0                   	// #0
   3bf80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3bf84:	cmp	x2, x0
   3bf88:	b.eq	3bfac <mpfr_sub1sp@@Base+0x89c>  // b.none
   3bf8c:	sxtw	x3, w3
   3bf90:	neg	x0, x5
   3bf94:	str	x0, [x4]
   3bf98:	mov	x0, #0xffffffffffffffff    	// #-1
   3bf9c:	str	x0, [x4, #8]
   3bfa0:	add	x20, x20, x0
   3bfa4:	mov	x2, #0x1                   	// #1
   3bfa8:	b	3bd14 <mpfr_sub1sp@@Base+0x604>
   3bfac:	ldr	x0, [x1]
   3bfb0:	cmp	x0, #0x0
   3bfb4:	cset	w3, eq  // eq = none
   3bfb8:	b	3bf8c <mpfr_sub1sp@@Base+0x87c>
   3bfbc:	sub	x2, x2, x5
   3bfc0:	str	x2, [x4]
   3bfc4:	str	x0, [x4, #8]
   3bfc8:	mov	x2, #0x1                   	// #1
   3bfcc:	mov	x3, x2
   3bfd0:	b	3bd14 <mpfr_sub1sp@@Base+0x604>
   3bfd4:	ldr	w0, [x21, #8]
   3bfd8:	neg	w0, w0
   3bfdc:	mov	x2, x6
   3bfe0:	mov	x6, x1
   3bfe4:	mov	x1, x2
   3bfe8:	mov	x2, x20
   3bfec:	mov	x20, x22
   3bff0:	mov	x22, x2
   3bff4:	b	3bc38 <mpfr_sub1sp@@Base+0x528>
   3bff8:	ldr	w1, [x29, #172]
   3bffc:	cbnz	w1, 3c02c <mpfr_sub1sp@@Base+0x91c>
   3c000:	sub	x0, x0, #0x1
   3c004:	cmp	x0, x20
   3c008:	b.gt	3c044 <mpfr_sub1sp@@Base+0x934>
   3c00c:	ldr	x1, [x4, #8]
   3c010:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c014:	cmp	x1, x0
   3c018:	b.ne	3c02c <mpfr_sub1sp@@Base+0x91c>  // b.any
   3c01c:	ldr	x0, [x4]
   3c020:	cmp	x0, #0x0
   3c024:	cset	w0, eq  // eq = none
   3c028:	str	w0, [x29, #172]
   3c02c:	ldr	w2, [x23, #8]
   3c030:	ldr	w1, [x29, #172]
   3c034:	mov	x0, x23
   3c038:	bl	c3c0 <mpfr_underflow@plt>
   3c03c:	mov	w1, w0
   3c040:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c044:	mov	w0, #0x1                   	// #1
   3c048:	str	w0, [x29, #172]
   3c04c:	b	3c02c <mpfr_sub1sp@@Base+0x91c>
   3c050:	ldr	w1, [x29, #172]
   3c054:	cmp	w1, #0x1
   3c058:	b.eq	3bd68 <mpfr_sub1sp@@Base+0x658>  // b.none
   3c05c:	ldr	w0, [x23, #8]
   3c060:	add	w0, w1, w0, lsr #31
   3c064:	cmp	w0, #0x3
   3c068:	b.eq	3bd68 <mpfr_sub1sp@@Base+0x658>  // b.none
   3c06c:	ldr	x0, [x4]
   3c070:	add	x5, x5, x0
   3c074:	str	x5, [x4]
   3c078:	cmp	x5, #0x0
   3c07c:	ldr	x0, [x4, #8]
   3c080:	cinc	x0, x0, eq  // eq = none
   3c084:	str	x0, [x4, #8]
   3c088:	cbz	x0, 3c0bc <mpfr_sub1sp@@Base+0x9ac>
   3c08c:	ldr	w1, [x23, #8]
   3c090:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c094:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c098:	ldr	x2, [x0, #2576]
   3c09c:	add	x0, x0, #0xa10
   3c0a0:	blr	x2
   3c0a4:	mrs	x2, tpidr_el0
   3c0a8:	add	x0, x2, x0
   3c0ac:	ldr	w2, [x0]
   3c0b0:	orr	w2, w2, #0x8
   3c0b4:	str	w2, [x0]
   3c0b8:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c0bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c0c0:	str	x0, [x4, #8]
   3c0c4:	add	x20, x20, #0x1
   3c0c8:	str	x20, [x23, #16]
   3c0cc:	b	3c08c <mpfr_sub1sp@@Base+0x97c>
   3c0d0:	ldr	x3, [x23, #24]
   3c0d4:	ldr	x1, [x1, #24]
   3c0d8:	ldr	x0, [x2, #24]
   3c0dc:	cmp	x20, x22
   3c0e0:	b.eq	3c134 <mpfr_sub1sp@@Base+0xa24>  // b.none
   3c0e4:	b.le	3c358 <mpfr_sub1sp@@Base+0xc48>
   3c0e8:	ldr	w2, [x21, #8]
   3c0ec:	str	w2, [x23, #8]
   3c0f0:	sub	x22, x20, x22
   3c0f4:	cmp	x22, #0x3f
   3c0f8:	b.hi	3c278 <mpfr_sub1sp@@Base+0xb68>  // b.pmore
   3c0fc:	ldr	x2, [x0]
   3c100:	neg	w0, w22
   3c104:	lsl	x0, x2, x0
   3c108:	lsr	x22, x2, x22
   3c10c:	ldr	x2, [x1]
   3c110:	sub	x2, x2, x22
   3c114:	negs	x0, x0
   3c118:	cset	x1, ne  // ne = any
   3c11c:	subs	x2, x2, x1
   3c120:	b.ne	3c1c8 <mpfr_sub1sp@@Base+0xab8>  // b.any
   3c124:	sub	x20, x20, #0x40
   3c128:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c12c:	str	x0, [x3]
   3c130:	b	3c16c <mpfr_sub1sp@@Base+0xa5c>
   3c134:	ldr	x1, [x1]
   3c138:	ldr	x2, [x0]
   3c13c:	subs	x0, x1, x2
   3c140:	b.eq	3c198 <mpfr_sub1sp@@Base+0xa88>  // b.none
   3c144:	cmp	x1, x0
   3c148:	b.cs	3c1bc <mpfr_sub1sp@@Base+0xaac>  // b.hs, b.nlast
   3c14c:	sub	x0, x2, x1
   3c150:	ldr	w1, [x21, #8]
   3c154:	neg	w1, w1
   3c158:	str	w1, [x23, #8]
   3c15c:	clz	x1, x0
   3c160:	lsl	x0, x0, x1
   3c164:	str	x0, [x3]
   3c168:	sub	x20, x20, x1
   3c16c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c170:	ldr	x1, [x0, #2512]
   3c174:	add	x0, x0, #0x9d0
   3c178:	blr	x1
   3c17c:	mrs	x1, tpidr_el0
   3c180:	ldr	x0, [x1, x0]
   3c184:	cmp	x20, x0
   3c188:	b.lt	3c37c <mpfr_sub1sp@@Base+0xc6c>  // b.tstop
   3c18c:	str	x20, [x23, #16]
   3c190:	mov	w1, #0x0                   	// #0
   3c194:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c198:	mov	w0, #0x1                   	// #1
   3c19c:	ldr	w1, [x29, #172]
   3c1a0:	cmp	w1, #0x3
   3c1a4:	cneg	w0, w0, eq  // eq = none
   3c1a8:	str	w0, [x23, #8]
   3c1ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3c1b0:	str	x0, [x23, #16]
   3c1b4:	mov	w1, #0x0                   	// #0
   3c1b8:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c1bc:	ldr	w1, [x21, #8]
   3c1c0:	str	w1, [x23, #8]
   3c1c4:	b	3c15c <mpfr_sub1sp@@Base+0xa4c>
   3c1c8:	clz	x4, x2
   3c1cc:	mov	x1, x4
   3c1d0:	cbz	x4, 3c1e4 <mpfr_sub1sp@@Base+0xad4>
   3c1d4:	lsl	x2, x2, x4
   3c1d8:	neg	w5, w4
   3c1dc:	lsr	x5, x0, x5
   3c1e0:	orr	x2, x5, x2
   3c1e4:	lsl	x0, x0, x4
   3c1e8:	sub	x20, x20, x1
   3c1ec:	and	x4, x0, #0x8000000000000000
   3c1f0:	and	x1, x0, #0x7fffffffffffffff
   3c1f4:	str	x2, [x3]
   3c1f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c1fc:	ldr	x2, [x0, #2512]
   3c200:	add	x0, x0, #0x9d0
   3c204:	blr	x2
   3c208:	mrs	x2, tpidr_el0
   3c20c:	ldr	x0, [x2, x0]
   3c210:	cmp	x0, x20
   3c214:	b.gt	3c37c <mpfr_sub1sp@@Base+0xc6c>
   3c218:	str	x20, [x23, #16]
   3c21c:	orr	x0, x4, x1
   3c220:	cmp	x0, #0x0
   3c224:	ldr	w0, [x29, #172]
   3c228:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3c22c:	b.eq	3d3d8 <mpfr_sub1sp@@Base+0x1cc8>  // b.none
   3c230:	cbnz	w0, 3c3cc <mpfr_sub1sp@@Base+0xcbc>
   3c234:	cbz	x4, 3c244 <mpfr_sub1sp@@Base+0xb34>
   3c238:	cbnz	x1, 3c3e8 <mpfr_sub1sp@@Base+0xcd8>
   3c23c:	ldr	x0, [x3]
   3c240:	tbnz	w0, #0, 3c3e8 <mpfr_sub1sp@@Base+0xcd8>
   3c244:	ldr	w1, [x23, #8]
   3c248:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c24c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c250:	ldr	x2, [x0, #2576]
   3c254:	add	x0, x0, #0xa10
   3c258:	blr	x2
   3c25c:	mrs	x2, tpidr_el0
   3c260:	add	x0, x2, x0
   3c264:	ldr	w2, [x0]
   3c268:	orr	w2, w2, #0x8
   3c26c:	str	w2, [x0]
   3c270:	neg	w1, w1
   3c274:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c278:	ldr	x2, [x1]
   3c27c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3c280:	cmp	x2, x1
   3c284:	b.ls	3c2c0 <mpfr_sub1sp@@Base+0xbb0>  // b.plast
   3c288:	cmp	x22, #0x40
   3c28c:	b.hi	3c2b4 <mpfr_sub1sp@@Base+0xba4>  // b.pmore
   3c290:	ldr	x1, [x0]
   3c294:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c298:	cmp	x1, x0
   3c29c:	cset	x4, eq  // eq = none
   3c2a0:	cset	w1, ne  // ne = any
   3c2a4:	sxtw	x1, w1
   3c2a8:	sub	x2, x2, #0x1
   3c2ac:	str	x2, [x3]
   3c2b0:	b	3c1f8 <mpfr_sub1sp@@Base+0xae8>
   3c2b4:	mov	x4, #0x1                   	// #1
   3c2b8:	mov	w1, w4
   3c2bc:	b	3c2a4 <mpfr_sub1sp@@Base+0xb94>
   3c2c0:	sub	x20, x20, #0x1
   3c2c4:	cmp	x22, #0x40
   3c2c8:	b.eq	3c2ec <mpfr_sub1sp@@Base+0xbdc>  // b.none
   3c2cc:	mov	x4, #0x1                   	// #1
   3c2d0:	mov	w1, w4
   3c2d4:	cmp	x22, #0x41
   3c2d8:	b.ls	3c31c <mpfr_sub1sp@@Base+0xc0c>  // b.plast
   3c2dc:	sxtw	x1, w1
   3c2e0:	mov	x0, #0xffffffffffffffff    	// #-1
   3c2e4:	str	x0, [x3]
   3c2e8:	b	3c1f8 <mpfr_sub1sp@@Base+0xae8>
   3c2ec:	ldr	x0, [x0]
   3c2f0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3c2f4:	cmp	x0, x1
   3c2f8:	b.ls	3c344 <mpfr_sub1sp@@Base+0xc34>  // b.plast
   3c2fc:	neg	x0, x0
   3c300:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3c304:	cmp	x0, x1
   3c308:	cset	x4, hi  // hi = pmore
   3c30c:	lsl	x1, x0, #2
   3c310:	mov	x0, #0xfffffffffffffffe    	// #-2
   3c314:	str	x0, [x3]
   3c318:	b	3c1f8 <mpfr_sub1sp@@Base+0xae8>
   3c31c:	ldr	x2, [x0]
   3c320:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3c324:	cmp	x2, x1
   3c328:	b.eq	3c350 <mpfr_sub1sp@@Base+0xc40>  // b.none
   3c32c:	mov	x4, #0x0                   	// #0
   3c330:	mov	w1, #0x1                   	// #1
   3c334:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c338:	cmp	x2, x0
   3c33c:	b.hi	3c2dc <mpfr_sub1sp@@Base+0xbcc>  // b.pmore
   3c340:	b	3c348 <mpfr_sub1sp@@Base+0xc38>
   3c344:	mov	x4, #0x0                   	// #0
   3c348:	mov	w1, #0x0                   	// #0
   3c34c:	b	3c2dc <mpfr_sub1sp@@Base+0xbcc>
   3c350:	mov	x4, #0x1                   	// #1
   3c354:	b	3c348 <mpfr_sub1sp@@Base+0xc38>
   3c358:	ldr	w2, [x21, #8]
   3c35c:	neg	w2, w2
   3c360:	mov	x4, x1
   3c364:	mov	x1, x0
   3c368:	mov	x0, x4
   3c36c:	mov	x4, x20
   3c370:	mov	x20, x22
   3c374:	mov	x22, x4
   3c378:	b	3c0ec <mpfr_sub1sp@@Base+0x9dc>
   3c37c:	ldr	w1, [x29, #172]
   3c380:	cbnz	w1, 3c3a8 <mpfr_sub1sp@@Base+0xc98>
   3c384:	sub	x0, x0, #0x1
   3c388:	cmp	x0, x20
   3c38c:	b.gt	3c3c0 <mpfr_sub1sp@@Base+0xcb0>
   3c390:	ldr	x1, [x3]
   3c394:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c398:	cmp	x1, x0
   3c39c:	ldr	w0, [x29, #172]
   3c3a0:	csinc	w0, w0, wzr, ne  // ne = any
   3c3a4:	str	w0, [x29, #172]
   3c3a8:	ldr	w2, [x23, #8]
   3c3ac:	ldr	w1, [x29, #172]
   3c3b0:	mov	x0, x23
   3c3b4:	bl	c3c0 <mpfr_underflow@plt>
   3c3b8:	mov	w1, w0
   3c3bc:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c3c0:	mov	w0, #0x1                   	// #1
   3c3c4:	str	w0, [x29, #172]
   3c3c8:	b	3c3a8 <mpfr_sub1sp@@Base+0xc98>
   3c3cc:	ldr	w1, [x29, #172]
   3c3d0:	cmp	w1, #0x1
   3c3d4:	b.eq	3c244 <mpfr_sub1sp@@Base+0xb34>  // b.none
   3c3d8:	ldr	w0, [x23, #8]
   3c3dc:	add	w0, w1, w0, lsr #31
   3c3e0:	cmp	w0, #0x3
   3c3e4:	b.eq	3c244 <mpfr_sub1sp@@Base+0xb34>  // b.none
   3c3e8:	ldr	x0, [x3]
   3c3ec:	add	x0, x0, #0x1
   3c3f0:	str	x0, [x3]
   3c3f4:	cbz	x0, 3c428 <mpfr_sub1sp@@Base+0xd18>
   3c3f8:	ldr	w1, [x23, #8]
   3c3fc:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c400:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c404:	ldr	x2, [x0, #2576]
   3c408:	add	x0, x0, #0xa10
   3c40c:	blr	x2
   3c410:	mrs	x2, tpidr_el0
   3c414:	add	x0, x2, x0
   3c418:	ldr	w2, [x0]
   3c41c:	orr	w2, w2, #0x8
   3c420:	str	w2, [x0]
   3c424:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c428:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c42c:	str	x0, [x3]
   3c430:	add	x20, x20, #0x1
   3c434:	str	x20, [x23, #16]
   3c438:	b	3c3f8 <mpfr_sub1sp@@Base+0xce8>
   3c43c:	ldr	x4, [x23, #24]
   3c440:	ldr	x6, [x1, #24]
   3c444:	ldr	x1, [x2, #24]
   3c448:	cmp	x20, x22
   3c44c:	b.eq	3c508 <mpfr_sub1sp@@Base+0xdf8>  // b.none
   3c450:	b.le	3c91c <mpfr_sub1sp@@Base+0x120c>
   3c454:	ldr	w0, [x21, #8]
   3c458:	str	w0, [x23, #8]
   3c45c:	sub	x22, x20, x22
   3c460:	mov	x0, #0xc0                  	// #192
   3c464:	sub	x19, x0, x19
   3c468:	mov	x5, #0x1                   	// #1
   3c46c:	lsl	x5, x5, x19
   3c470:	sub	x2, x5, #0x1
   3c474:	cmp	x22, #0x3f
   3c478:	b.hi	3c6c0 <mpfr_sub1sp@@Base+0xfb0>  // b.pmore
   3c47c:	ldr	x8, [x1]
   3c480:	mov	w3, #0x40                  	// #64
   3c484:	sub	w3, w3, w22
   3c488:	lsl	x9, x8, x3
   3c48c:	ldr	x11, [x6]
   3c490:	ldr	x0, [x1, #8]
   3c494:	lsl	x7, x0, x3
   3c498:	lsr	x8, x8, x22
   3c49c:	orr	x8, x7, x8
   3c4a0:	sub	x7, x11, x8
   3c4a4:	ldr	x10, [x6, #8]
   3c4a8:	ldr	x8, [x1, #16]
   3c4ac:	cmp	x11, x7
   3c4b0:	cset	w11, cc  // cc = lo, ul, last
   3c4b4:	lsl	x1, x8, x3
   3c4b8:	lsr	x0, x0, x22
   3c4bc:	orr	x1, x1, x0
   3c4c0:	sbc	x1, x10, x1
   3c4c4:	cmp	x10, x1
   3c4c8:	b.cc	3d414 <mpfr_sub1sp@@Base+0x1d04>  // b.lo, b.ul, b.last
   3c4cc:	lsr	x22, x8, x22
   3c4d0:	ldr	x3, [x6, #16]
   3c4d4:	sub	x22, x3, x22
   3c4d8:	cmp	w11, #0x0
   3c4dc:	ccmp	x10, x1, #0x0, ne  // ne = any
   3c4e0:	cset	x3, eq  // eq = none
   3c4e4:	sub	x3, x22, x3
   3c4e8:	cbnz	x9, 3c67c <mpfr_sub1sp@@Base+0xf6c>
   3c4ec:	cbnz	x3, 3d400 <mpfr_sub1sp@@Base+0x1cf0>
   3c4f0:	cbz	x1, 3c6a0 <mpfr_sub1sp@@Base+0xf90>
   3c4f4:	sub	x20, x20, #0x40
   3c4f8:	mov	x6, x1
   3c4fc:	mov	x1, x3
   3c500:	mov	x8, x7
   3c504:	b	3d44c <mpfr_sub1sp@@Base+0x1d3c>
   3c508:	ldr	x8, [x6]
   3c50c:	ldr	x9, [x1]
   3c510:	sub	x12, x8, x9
   3c514:	ldr	x7, [x6, #8]
   3c518:	ldr	x3, [x1, #8]
   3c51c:	cmp	x8, x9
   3c520:	cset	w5, cc  // cc = lo, ul, last
   3c524:	cset	x11, cc  // cc = lo, ul, last
   3c528:	sub	x2, x7, x3
   3c52c:	sub	x2, x2, x11
   3c530:	ldr	x6, [x6, #16]
   3c534:	ldr	x10, [x1, #16]
   3c538:	sub	x0, x6, x10
   3c53c:	mov	w1, #0x1                   	// #1
   3c540:	cmp	x7, x3
   3c544:	b.cc	3c554 <mpfr_sub1sp@@Base+0xe44>  // b.lo, b.ul, b.last
   3c548:	cmp	w5, #0x0
   3c54c:	ccmp	x7, x3, #0x0, ne  // ne = any
   3c550:	cset	w1, eq  // eq = none
   3c554:	sxtw	x1, w1
   3c558:	sub	x0, x0, x1
   3c55c:	orr	x5, x12, x2
   3c560:	orr	x5, x5, x0
   3c564:	cbz	x5, 3c630 <mpfr_sub1sp@@Base+0xf20>
   3c568:	cmp	x6, x0
   3c56c:	b.hi	3c654 <mpfr_sub1sp@@Base+0xf44>  // b.pmore
   3c570:	ldr	w5, [x21, #8]
   3c574:	neg	w5, w5
   3c578:	subs	x12, x9, x8
   3c57c:	cset	x2, ne  // ne = any
   3c580:	sub	x11, x11, x2
   3c584:	sub	x2, x3, x7
   3c588:	add	x2, x11, x2
   3c58c:	orr	x0, x12, x2
   3c590:	cmp	x0, #0x0
   3c594:	cset	x0, ne  // ne = any
   3c598:	sub	x1, x1, x0
   3c59c:	sub	x0, x10, x6
   3c5a0:	add	x0, x1, x0
   3c5a4:	str	w5, [x23, #8]
   3c5a8:	cbnz	x0, 3c5c4 <mpfr_sub1sp@@Base+0xeb4>
   3c5ac:	cbz	x2, 3c65c <mpfr_sub1sp@@Base+0xf4c>
   3c5b0:	sub	x20, x20, #0x40
   3c5b4:	mov	x1, x12
   3c5b8:	mov	x12, x0
   3c5bc:	mov	x0, x2
   3c5c0:	mov	x2, x1
   3c5c4:	clz	x1, x0
   3c5c8:	mov	x5, x1
   3c5cc:	cbz	x1, 3c66c <mpfr_sub1sp@@Base+0xf5c>
   3c5d0:	mov	w3, #0x40                  	// #64
   3c5d4:	sub	w3, w3, w1
   3c5d8:	lsl	x0, x0, x1
   3c5dc:	lsr	x6, x2, x3
   3c5e0:	orr	x0, x0, x6
   3c5e4:	str	x0, [x4, #16]
   3c5e8:	lsl	x2, x2, x1
   3c5ec:	lsr	x3, x12, x3
   3c5f0:	orr	x3, x2, x3
   3c5f4:	str	x3, [x4, #8]
   3c5f8:	lsl	x1, x12, x1
   3c5fc:	str	x1, [x4]
   3c600:	sub	x20, x20, x5
   3c604:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c608:	ldr	x1, [x0, #2512]
   3c60c:	add	x0, x0, #0x9d0
   3c610:	blr	x1
   3c614:	mrs	x1, tpidr_el0
   3c618:	ldr	x0, [x1, x0]
   3c61c:	cmp	x20, x0
   3c620:	b.lt	3c940 <mpfr_sub1sp@@Base+0x1230>  // b.tstop
   3c624:	str	x20, [x23, #16]
   3c628:	mov	w1, #0x0                   	// #0
   3c62c:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c630:	mov	w0, #0x1                   	// #1
   3c634:	ldr	w1, [x29, #172]
   3c638:	cmp	w1, #0x3
   3c63c:	cneg	w0, w0, eq  // eq = none
   3c640:	str	w0, [x23, #8]
   3c644:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3c648:	str	x0, [x23, #16]
   3c64c:	mov	w1, #0x0                   	// #0
   3c650:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c654:	ldr	w5, [x21, #8]
   3c658:	b	3c5a4 <mpfr_sub1sp@@Base+0xe94>
   3c65c:	sub	x20, x20, #0x80
   3c660:	mov	x0, x12
   3c664:	mov	x12, x2
   3c668:	b	3c5c4 <mpfr_sub1sp@@Base+0xeb4>
   3c66c:	str	x0, [x4, #16]
   3c670:	str	x2, [x4, #8]
   3c674:	str	x12, [x4]
   3c678:	b	3c604 <mpfr_sub1sp@@Base+0xef4>
   3c67c:	orr	x0, x7, x1
   3c680:	cmp	x0, #0x0
   3c684:	cset	x6, eq  // eq = none
   3c688:	sub	x6, x3, x6
   3c68c:	cmp	x7, #0x0
   3c690:	cset	x8, eq  // eq = none
   3c694:	sub	x8, x1, x8
   3c698:	sub	x3, x7, #0x1
   3c69c:	b	3d448 <mpfr_sub1sp@@Base+0x1d38>
   3c6a0:	sub	x20, x20, #0x80
   3c6a4:	mov	x3, x1
   3c6a8:	mov	x8, x1
   3c6ac:	mov	x6, x7
   3c6b0:	b	3d44c <mpfr_sub1sp@@Base+0x1d3c>
   3c6b4:	str	x6, [x4, #16]
   3c6b8:	str	x8, [x4, #8]
   3c6bc:	b	3d490 <mpfr_sub1sp@@Base+0x1d80>
   3c6c0:	cmp	x22, #0x7f
   3c6c4:	b.hi	3c784 <mpfr_sub1sp@@Base+0x1074>  // b.pmore
   3c6c8:	cmp	x22, #0x40
   3c6cc:	b.eq	3c76c <mpfr_sub1sp@@Base+0x105c>  // b.none
   3c6d0:	ldr	x0, [x1, #8]
   3c6d4:	mov	w3, #0x80                  	// #128
   3c6d8:	sub	w8, w3, w22
   3c6dc:	ldr	x3, [x1]
   3c6e0:	cmp	x3, #0x0
   3c6e4:	cset	x7, ne  // ne = any
   3c6e8:	lsl	x3, x0, x8
   3c6ec:	orr	x7, x7, x3
   3c6f0:	ldr	x3, [x1, #16]
   3c6f4:	lsl	x3, x3, x8
   3c6f8:	sub	w8, w22, #0x40
   3c6fc:	lsr	x0, x0, x8
   3c700:	orr	x3, x3, x0
   3c704:	ldr	x0, [x6]
   3c708:	sub	x3, x0, x3
   3c70c:	ldr	x8, [x6, #8]
   3c710:	cmp	x0, x3
   3c714:	cset	w9, cc  // cc = lo, ul, last
   3c718:	sub	w22, w22, #0x40
   3c71c:	ldr	x0, [x1, #16]
   3c720:	lsr	x0, x0, x22
   3c724:	sbc	x0, x8, x0
   3c728:	ldr	x1, [x6, #16]
   3c72c:	cmp	x8, x0
   3c730:	b.cc	3d540 <mpfr_sub1sp@@Base+0x1e30>  // b.lo, b.ul, b.last
   3c734:	cmp	w9, #0x0
   3c738:	ccmp	x8, x0, #0x0, ne  // ne = any
   3c73c:	cset	x6, eq  // eq = none
   3c740:	sub	x1, x1, x6
   3c744:	cbz	x7, 3d56c <mpfr_sub1sp@@Base+0x1e5c>
   3c748:	orr	x6, x3, x0
   3c74c:	cmp	x6, #0x0
   3c750:	cset	x6, eq  // eq = none
   3c754:	sub	x1, x1, x6
   3c758:	cmp	x3, #0x0
   3c75c:	cset	x6, eq  // eq = none
   3c760:	sub	x0, x0, x6
   3c764:	sub	x3, x3, #0x1
   3c768:	b	3d568 <mpfr_sub1sp@@Base+0x1e58>
   3c76c:	ldr	x7, [x1]
   3c770:	ldr	x3, [x1, #8]
   3c774:	b	3c704 <mpfr_sub1sp@@Base+0xff4>
   3c778:	str	x1, [x4, #16]
   3c77c:	str	x0, [x4, #8]
   3c780:	b	3d58c <mpfr_sub1sp@@Base+0x1e7c>
   3c784:	cmp	x22, #0xbf
   3c788:	b.hi	3c87c <mpfr_sub1sp@@Base+0x116c>  // b.pmore
   3c78c:	cmp	x22, #0x80
   3c790:	b.eq	3c858 <mpfr_sub1sp@@Base+0x1148>  // b.none
   3c794:	ldr	x0, [x1, #8]
   3c798:	ldr	x3, [x1]
   3c79c:	orr	x0, x0, x3
   3c7a0:	cmp	x0, #0x0
   3c7a4:	cset	x3, ne  // ne = any
   3c7a8:	mov	w0, #0xc0                  	// #192
   3c7ac:	sub	w7, w0, w22
   3c7b0:	ldr	x0, [x1, #16]
   3c7b4:	lsl	x0, x0, x7
   3c7b8:	orr	x3, x3, x0
   3c7bc:	ldr	x7, [x6]
   3c7c0:	negs	x3, x3
   3c7c4:	cset	w9, ne  // ne = any
   3c7c8:	sub	w22, w22, #0x80
   3c7cc:	ldr	x0, [x1, #16]
   3c7d0:	lsr	x0, x0, x22
   3c7d4:	sub	x0, x7, x0
   3c7d8:	cset	x1, ne  // ne = any
   3c7dc:	sub	x0, x0, x1
   3c7e0:	ldr	x8, [x6, #8]
   3c7e4:	mov	w1, #0x1                   	// #1
   3c7e8:	cmp	x7, x0
   3c7ec:	b.cc	3c7fc <mpfr_sub1sp@@Base+0x10ec>  // b.lo, b.ul, b.last
   3c7f0:	cmp	w9, #0x0
   3c7f4:	ccmp	x7, x0, #0x0, ne  // ne = any
   3c7f8:	cset	w1, eq  // eq = none
   3c7fc:	sub	x1, x8, w1, sxtw
   3c800:	cmp	x8, x1
   3c804:	ldr	x6, [x6, #16]
   3c808:	sbc	x6, x6, xzr
   3c80c:	tbnz	x6, #63, 3c870 <mpfr_sub1sp@@Base+0x1160>
   3c810:	extr	x6, x6, x1, #63
   3c814:	str	x6, [x4, #16]
   3c818:	extr	x1, x1, x0, #63
   3c81c:	str	x1, [x4, #8]
   3c820:	extr	x0, x0, x3, #63
   3c824:	lsl	x3, x3, #1
   3c828:	sub	x20, x20, #0x1
   3c82c:	sub	w6, w19, #0x1
   3c830:	mov	x1, #0x1                   	// #1
   3c834:	lsl	x1, x1, x6
   3c838:	and	x6, x1, x0
   3c83c:	eor	x2, x2, x1
   3c840:	and	x2, x2, x0
   3c844:	orr	x2, x2, x3
   3c848:	neg	x1, x5
   3c84c:	and	x0, x1, x0
   3c850:	str	x0, [x4]
   3c854:	b	3d4b8 <mpfr_sub1sp@@Base+0x1da8>
   3c858:	ldr	x0, [x1]
   3c85c:	cmp	x0, #0x0
   3c860:	cset	x3, ne  // ne = any
   3c864:	ldr	x0, [x1, #8]
   3c868:	orr	x3, x3, x0
   3c86c:	b	3c7bc <mpfr_sub1sp@@Base+0x10ac>
   3c870:	str	x6, [x4, #16]
   3c874:	str	x1, [x4, #8]
   3c878:	b	3c82c <mpfr_sub1sp@@Base+0x111c>
   3c87c:	ldr	x3, [x6]
   3c880:	ldr	x0, [x6, #8]
   3c884:	cmp	x5, x3
   3c888:	cset	x2, hi  // hi = pmore
   3c88c:	sub	x2, x0, x2
   3c890:	cmp	x0, x2
   3c894:	ldr	x0, [x6, #16]
   3c898:	sbc	x0, x0, xzr
   3c89c:	tbnz	x0, #63, 3c900 <mpfr_sub1sp@@Base+0x11f0>
   3c8a0:	cmp	x22, #0xc0
   3c8a4:	mov	w6, #0x1                   	// #1
   3c8a8:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   3c8ac:	b.gt	3c8c4 <mpfr_sub1sp@@Base+0x11b4>
   3c8b0:	ldr	x2, [x1, #16]
   3c8b4:	mov	w6, #0x0                   	// #0
   3c8b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c8bc:	cmp	x2, x0
   3c8c0:	b.eq	3c8e8 <mpfr_sub1sp@@Base+0x11d8>  // b.none
   3c8c4:	sxtw	x6, w6
   3c8c8:	neg	x0, x5
   3c8cc:	str	x0, [x4]
   3c8d0:	mov	x0, #0xffffffffffffffff    	// #-1
   3c8d4:	str	x0, [x4, #8]
   3c8d8:	str	x0, [x4, #16]
   3c8dc:	add	x20, x20, x0
   3c8e0:	mov	x2, #0x1                   	// #1
   3c8e4:	b	3d4b8 <mpfr_sub1sp@@Base+0x1da8>
   3c8e8:	ldr	x0, [x1, #8]
   3c8ec:	cbnz	x0, 3c8c4 <mpfr_sub1sp@@Base+0x11b4>
   3c8f0:	ldr	x0, [x1]
   3c8f4:	cmp	x0, #0x0
   3c8f8:	cset	w6, eq  // eq = none
   3c8fc:	b	3c8c4 <mpfr_sub1sp@@Base+0x11b4>
   3c900:	sub	x3, x3, x5
   3c904:	str	x3, [x4]
   3c908:	str	x2, [x4, #8]
   3c90c:	str	x0, [x4, #16]
   3c910:	mov	x2, #0x1                   	// #1
   3c914:	mov	x6, x2
   3c918:	b	3d4b8 <mpfr_sub1sp@@Base+0x1da8>
   3c91c:	ldr	w0, [x21, #8]
   3c920:	neg	w0, w0
   3c924:	mov	x2, x6
   3c928:	mov	x6, x1
   3c92c:	mov	x1, x2
   3c930:	mov	x2, x20
   3c934:	mov	x20, x22
   3c938:	mov	x22, x2
   3c93c:	b	3c458 <mpfr_sub1sp@@Base+0xd48>
   3c940:	ldr	w1, [x29, #172]
   3c944:	cbnz	w1, 3c97c <mpfr_sub1sp@@Base+0x126c>
   3c948:	sub	x0, x0, #0x1
   3c94c:	cmp	x0, x20
   3c950:	b.gt	3c994 <mpfr_sub1sp@@Base+0x1284>
   3c954:	ldr	x1, [x4, #16]
   3c958:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3c95c:	cmp	x1, x0
   3c960:	b.ne	3c97c <mpfr_sub1sp@@Base+0x126c>  // b.any
   3c964:	ldr	x0, [x4, #8]
   3c968:	cbnz	x0, 3c97c <mpfr_sub1sp@@Base+0x126c>
   3c96c:	ldr	x0, [x4]
   3c970:	cmp	x0, #0x0
   3c974:	cset	w0, eq  // eq = none
   3c978:	str	w0, [x29, #172]
   3c97c:	ldr	w2, [x23, #8]
   3c980:	ldr	w1, [x29, #172]
   3c984:	mov	x0, x23
   3c988:	bl	c3c0 <mpfr_underflow@plt>
   3c98c:	mov	w1, w0
   3c990:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c994:	mov	w0, #0x1                   	// #1
   3c998:	str	w0, [x29, #172]
   3c99c:	b	3c97c <mpfr_sub1sp@@Base+0x126c>
   3c9a0:	ldr	w1, [x29, #172]
   3c9a4:	cmp	w1, #0x1
   3c9a8:	b.eq	3d50c <mpfr_sub1sp@@Base+0x1dfc>  // b.none
   3c9ac:	ldr	w0, [x23, #8]
   3c9b0:	add	w0, w1, w0, lsr #31
   3c9b4:	cmp	w0, #0x3
   3c9b8:	b.eq	3d50c <mpfr_sub1sp@@Base+0x1dfc>  // b.none
   3c9bc:	ldr	x0, [x4]
   3c9c0:	add	x5, x5, x0
   3c9c4:	str	x5, [x4]
   3c9c8:	cmp	x5, #0x0
   3c9cc:	ldr	x0, [x4, #8]
   3c9d0:	cinc	x0, x0, eq  // eq = none
   3c9d4:	str	x0, [x4, #8]
   3c9d8:	orr	x5, x5, x0
   3c9dc:	cmp	x5, #0x0
   3c9e0:	ldr	x0, [x4, #16]
   3c9e4:	cinc	x0, x0, eq  // eq = none
   3c9e8:	str	x0, [x4, #16]
   3c9ec:	cbz	x0, 3ca20 <mpfr_sub1sp@@Base+0x1310>
   3c9f0:	ldr	w1, [x23, #8]
   3c9f4:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3c9f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3c9fc:	ldr	x2, [x0, #2576]
   3ca00:	add	x0, x0, #0xa10
   3ca04:	blr	x2
   3ca08:	mrs	x2, tpidr_el0
   3ca0c:	add	x0, x2, x0
   3ca10:	ldr	w2, [x0]
   3ca14:	orr	w2, w2, #0x8
   3ca18:	str	w2, [x0]
   3ca1c:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3ca20:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ca24:	str	x0, [x4, #16]
   3ca28:	add	x20, x20, #0x1
   3ca2c:	str	x20, [x23, #16]
   3ca30:	b	3c9f0 <mpfr_sub1sp@@Base+0x12e0>
   3ca34:	ldr	x2, [x1, #24]
   3ca38:	ldr	x1, [x24, #24]
   3ca3c:	mov	x0, x25
   3ca40:	ldr	x5, [x2, x0, lsl #3]
   3ca44:	ldr	x4, [x1, x0, lsl #3]
   3ca48:	cmp	x5, x4
   3ca4c:	b.eq	3ca84 <mpfr_sub1sp@@Base+0x1374>  // b.none
   3ca50:	tbnz	x0, #63, 3ca8c <mpfr_sub1sp@@Base+0x137c>
   3ca54:	ldr	x2, [x2, x0, lsl #3]
   3ca58:	ldr	x0, [x1, x0, lsl #3]
   3ca5c:	cmp	x2, x0
   3ca60:	b.ls	3b7a0 <mpfr_sub1sp@@Base+0x90>  // b.plast
   3ca64:	ldr	w0, [x21, #8]
   3ca68:	mov	x1, x22
   3ca6c:	mov	x22, x20
   3ca70:	mov	x20, x1
   3ca74:	mov	x1, x24
   3ca78:	mov	x24, x21
   3ca7c:	mov	x21, x1
   3ca80:	b	3b7a8 <mpfr_sub1sp@@Base+0x98>
   3ca84:	subs	x0, x0, #0x1
   3ca88:	b.pl	3ca40 <mpfr_sub1sp@@Base+0x1330>  // b.nfrst
   3ca8c:	mov	w0, #0x1                   	// #1
   3ca90:	ldr	w1, [x29, #172]
   3ca94:	cmp	w1, #0x3
   3ca98:	cneg	w0, w0, eq  // eq = none
   3ca9c:	str	w0, [x23, #8]
   3caa0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3caa4:	str	x0, [x23, #16]
   3caa8:	mov	w1, #0x0                   	// #0
   3caac:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3cab0:	cbz	x20, 3cb78 <mpfr_sub1sp@@Base+0x1468>
   3cab4:	ldr	x20, [x24, #24]
   3cab8:	ldr	x27, [x21, #24]
   3cabc:	lsl	x28, x25, #3
   3cac0:	ldr	x1, [x27, x25, lsl #3]
   3cac4:	ldr	x0, [x20, x25, lsl #3]
   3cac8:	sub	x0, x0, x1, lsr #1
   3cacc:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3cad0:	cmp	x0, x2
   3cad4:	b.ls	3cd54 <mpfr_sub1sp@@Base+0x1644>  // b.plast
   3cad8:	neg	w19, w19
   3cadc:	and	w19, w19, #0x3f
   3cae0:	mov	x0, #0x1                   	// #1
   3cae4:	lsl	x0, x0, x19
   3cae8:	ldr	x1, [x27]
   3caec:	and	x1, x0, x1
   3caf0:	str	x1, [x29, #160]
   3caf4:	neg	x0, x0
   3caf8:	str	x0, [x29, #152]
   3cafc:	ldr	x27, [x23, #24]
   3cb00:	add	x1, x28, #0x8
   3cb04:	cmp	x1, #0x4, lsl #12
   3cb08:	b.hi	3ccc4 <mpfr_sub1sp@@Base+0x15b4>  // b.pmore
   3cb0c:	add	x1, x1, #0xf
   3cb10:	and	x1, x1, #0xfffffffffffffff0
   3cb14:	sub	sp, sp, x1
   3cb18:	mov	x24, sp
   3cb1c:	mov	w3, #0x1                   	// #1
   3cb20:	mov	x2, x26
   3cb24:	ldr	x1, [x21, #24]
   3cb28:	mov	x0, x24
   3cb2c:	bl	bce0 <__gmpn_rshift@plt>
   3cb30:	ldr	x0, [x24]
   3cb34:	ldr	x1, [x29, #152]
   3cb38:	and	x0, x0, x1
   3cb3c:	str	x0, [x24]
   3cb40:	mov	x3, x26
   3cb44:	mov	x2, x24
   3cb48:	mov	x1, x20
   3cb4c:	mov	x0, x27
   3cb50:	bl	be60 <__gmpn_sub_n@plt>
   3cb54:	str	x22, [x23, #16]
   3cb58:	ldr	x0, [x29, #160]
   3cb5c:	cbnz	x0, 3ccd4 <mpfr_sub1sp@@Base+0x15c4>
   3cb60:	ldr	x0, [x29, #184]
   3cb64:	mov	w1, #0x0                   	// #0
   3cb68:	cbz	x0, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3cb6c:	bl	c410 <mpfr_tmp_free@plt>
   3cb70:	mov	w1, #0x0                   	// #0
   3cb74:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3cb78:	ldr	x19, [x23, #24]
   3cb7c:	mov	x3, x26
   3cb80:	ldr	x2, [x21, #24]
   3cb84:	ldr	x1, [x24, #24]
   3cb88:	mov	x0, x19
   3cb8c:	bl	be60 <__gmpn_sub_n@plt>
   3cb90:	add	x0, x19, x26, lsl #3
   3cb94:	ldur	x0, [x0, #-8]
   3cb98:	cbz	x0, 3cbf8 <mpfr_sub1sp@@Base+0x14e8>
   3cb9c:	clz	x3, x0
   3cba0:	mov	x20, x3
   3cba4:	cbz	x3, 3cbbc <mpfr_sub1sp@@Base+0x14ac>
   3cba8:	mov	x2, x26
   3cbac:	mov	x1, x19
   3cbb0:	mov	x0, x19
   3cbb4:	bl	bcc0 <__gmpn_lshift@plt>
   3cbb8:	sub	x22, x22, x20
   3cbbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3cbc0:	ldr	x1, [x0, #2512]
   3cbc4:	add	x0, x0, #0x9d0
   3cbc8:	blr	x1
   3cbcc:	mrs	x1, tpidr_el0
   3cbd0:	ldr	x0, [x1, x0]
   3cbd4:	cmp	x0, x22
   3cbd8:	b.gt	3cc50 <mpfr_sub1sp@@Base+0x1540>
   3cbdc:	str	x22, [x23, #16]
   3cbe0:	ldr	x0, [x29, #184]
   3cbe4:	mov	w1, #0x0                   	// #0
   3cbe8:	cbz	x0, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3cbec:	bl	c410 <mpfr_tmp_free@plt>
   3cbf0:	mov	w1, #0x0                   	// #0
   3cbf4:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3cbf8:	mov	x2, x25
   3cbfc:	sub	x25, x25, #0x1
   3cc00:	ldr	x0, [x19, x25, lsl #3]
   3cc04:	cbz	x0, 3cbf8 <mpfr_sub1sp@@Base+0x14e8>
   3cc08:	clz	x3, x0
   3cc0c:	mov	x20, x3
   3cc10:	sub	x26, x26, x2
   3cc14:	cbz	x3, 3cc40 <mpfr_sub1sp@@Base+0x1530>
   3cc18:	mov	x1, x19
   3cc1c:	add	x0, x19, x26, lsl #3
   3cc20:	bl	bcc0 <__gmpn_lshift@plt>
   3cc24:	lsl	x2, x26, #3
   3cc28:	mov	w1, #0x0                   	// #0
   3cc2c:	mov	x0, x19
   3cc30:	bl	c110 <memset@plt>
   3cc34:	add	x26, x20, x26, lsl #6
   3cc38:	sub	x22, x22, x26
   3cc3c:	b	3cbbc <mpfr_sub1sp@@Base+0x14ac>
   3cc40:	mov	x1, x19
   3cc44:	add	x0, x19, x26, lsl #3
   3cc48:	bl	bae0 <__gmpn_copyd@plt>
   3cc4c:	b	3cc24 <mpfr_sub1sp@@Base+0x1514>
   3cc50:	ldr	x0, [x29, #184]
   3cc54:	cbnz	x0, 3ccb0 <mpfr_sub1sp@@Base+0x15a0>
   3cc58:	ldr	w0, [x29, #172]
   3cc5c:	cbnz	w0, 3cc98 <mpfr_sub1sp@@Base+0x1588>
   3cc60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3cc64:	ldr	x1, [x0, #2512]
   3cc68:	add	x0, x0, #0x9d0
   3cc6c:	blr	x1
   3cc70:	mrs	x1, tpidr_el0
   3cc74:	ldr	x0, [x1, x0]
   3cc78:	sub	x0, x0, #0x1
   3cc7c:	cmp	x0, x22
   3cc80:	b.gt	3ccb8 <mpfr_sub1sp@@Base+0x15a8>
   3cc84:	mov	x0, x23
   3cc88:	bl	bf00 <mpfr_powerof2_raw@plt>
   3cc8c:	cmp	w0, #0x0
   3cc90:	cset	w0, ne  // ne = any
   3cc94:	str	w0, [x29, #172]
   3cc98:	ldr	w2, [x23, #8]
   3cc9c:	ldr	w1, [x29, #172]
   3cca0:	mov	x0, x23
   3cca4:	bl	c3c0 <mpfr_underflow@plt>
   3cca8:	mov	w1, w0
   3ccac:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3ccb0:	bl	c410 <mpfr_tmp_free@plt>
   3ccb4:	b	3cc58 <mpfr_sub1sp@@Base+0x1548>
   3ccb8:	mov	w0, #0x1                   	// #1
   3ccbc:	str	w0, [x29, #172]
   3ccc0:	b	3cc98 <mpfr_sub1sp@@Base+0x1588>
   3ccc4:	add	x0, x29, #0xb8
   3ccc8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3cccc:	mov	x24, x0
   3ccd0:	b	3cb1c <mpfr_sub1sp@@Base+0x140c>
   3ccd4:	mov	w0, w19
   3ccd8:	str	x0, [x29, #120]
   3ccdc:	ldr	w0, [x29, #172]
   3cce0:	cmp	w0, #0x5
   3cce4:	b.eq	3d360 <mpfr_sub1sp@@Base+0x1c50>  // b.none
   3cce8:	cbnz	w0, 3cd1c <mpfr_sub1sp@@Base+0x160c>
   3ccec:	ldr	x0, [x27]
   3ccf0:	lsr	x19, x0, x19
   3ccf4:	mov	x0, #0xffffffffffffffff    	// #-1
   3ccf8:	str	x0, [x29, #104]
   3ccfc:	str	x0, [x29, #96]
   3cd00:	mov	x0, #0x1                   	// #1
   3cd04:	str	x0, [x29, #144]
   3cd08:	and	x20, x19, x0
   3cd0c:	tbz	w19, #0, 3d688 <mpfr_sub1sp@@Base+0x1f78>
   3cd10:	str	x20, [x29, #144]
   3cd14:	mov	x20, #0x0                   	// #0
   3cd18:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3cd1c:	ldr	w0, [x23, #8]
   3cd20:	ldr	w1, [x29, #172]
   3cd24:	add	w0, w1, w0, lsr #31
   3cd28:	cmp	w0, #0x3
   3cd2c:	b.eq	3d220 <mpfr_sub1sp@@Base+0x1b10>  // b.none
   3cd30:	cmp	w1, #0x1
   3cd34:	b.eq	3d23c <mpfr_sub1sp@@Base+0x1b2c>  // b.none
   3cd38:	mov	x0, #0xffffffffffffffff    	// #-1
   3cd3c:	str	x0, [x29, #104]
   3cd40:	str	x0, [x29, #96]
   3cd44:	mov	x20, #0x0                   	// #0
   3cd48:	mov	x0, #0x1                   	// #1
   3cd4c:	str	x0, [x29, #144]
   3cd50:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3cd54:	tbnz	x0, #63, 3d7c4 <mpfr_sub1sp@@Base+0x20b4>
   3cd58:	ldr	x19, [x23, #24]
   3cd5c:	add	x1, x28, #0x8
   3cd60:	cmp	x1, #0x4, lsl #12
   3cd64:	b.hi	3cda8 <mpfr_sub1sp@@Base+0x1698>  // b.pmore
   3cd68:	add	x1, x1, #0xf
   3cd6c:	and	x1, x1, #0xfffffffffffffff0
   3cd70:	sub	sp, sp, x1
   3cd74:	mov	x20, sp
   3cd78:	mov	w3, #0x1                   	// #1
   3cd7c:	mov	x2, x26
   3cd80:	ldr	x1, [x24, #24]
   3cd84:	mov	x0, x20
   3cd88:	bl	bcc0 <__gmpn_lshift@plt>
   3cd8c:	mov	x3, x26
   3cd90:	mov	x2, x27
   3cd94:	mov	x1, x20
   3cd98:	mov	x0, x19
   3cd9c:	bl	be60 <__gmpn_sub_n@plt>
   3cda0:	sub	x22, x22, #0x1
   3cda4:	b	3cb90 <mpfr_sub1sp@@Base+0x1480>
   3cda8:	add	x0, x29, #0xb8
   3cdac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3cdb0:	mov	x20, x0
   3cdb4:	b	3cd78 <mpfr_sub1sp@@Base+0x1668>
   3cdb8:	lsl	x2, x26, #3
   3cdbc:	mov	w1, #0xffffffff            	// #-1
   3cdc0:	mov	x0, x19
   3cdc4:	bl	c110 <memset@plt>
   3cdc8:	sub	x22, x22, #0x1
   3cdcc:	str	x22, [x23, #16]
   3cdd0:	b	3d814 <mpfr_sub1sp@@Base+0x2104>
   3cdd4:	ldr	x27, [x23, #24]
   3cdd8:	neg	w1, w19
   3cddc:	and	w3, w1, #0x3f
   3cde0:	and	x1, x1, #0x3f
   3cde4:	str	x1, [x29, #120]
   3cde8:	b.eq	3ce6c <mpfr_sub1sp@@Base+0x175c>  // b.none
   3cdec:	add	x19, x19, #0x1
   3cdf0:	cmp	x19, x20
   3cdf4:	cset	w0, eq  // eq = none
   3cdf8:	cset	x1, eq  // eq = none
   3cdfc:	str	x1, [x29, #96]
   3ce00:	ldr	w1, [x29, #172]
   3ce04:	cmp	w1, #0x0
   3ce08:	cset	w19, eq  // eq = none
   3ce0c:	cmp	w0, #0x0
   3ce10:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   3ce14:	b.ne	3cf7c <mpfr_sub1sp@@Base+0x186c>  // b.any
   3ce18:	ldr	x1, [x24, #24]
   3ce1c:	mov	x0, #0xffffffffffffffff    	// #-1
   3ce20:	str	x0, [x29, #104]
   3ce24:	cmp	x1, x27
   3ce28:	b.eq	3ce38 <mpfr_sub1sp@@Base+0x1728>  // b.none
   3ce2c:	lsl	x2, x26, #3
   3ce30:	mov	x0, x27
   3ce34:	bl	ba10 <memcpy@plt>
   3ce38:	cmp	w19, #0x0
   3ce3c:	ldr	w1, [x29, #172]
   3ce40:	ccmp	w1, #0x5, #0x4, eq  // eq = none
   3ce44:	b.eq	3d3b0 <mpfr_sub1sp@@Base+0x1ca0>  // b.none
   3ce48:	ldr	w0, [x23, #8]
   3ce4c:	add	w0, w1, w0, lsr #31
   3ce50:	cmp	w0, #0x3
   3ce54:	b.eq	3d288 <mpfr_sub1sp@@Base+0x1b78>  // b.none
   3ce58:	cmp	w1, #0x1
   3ce5c:	b.eq	3d298 <mpfr_sub1sp@@Base+0x1b88>  // b.none
   3ce60:	mov	x20, #0x1                   	// #1
   3ce64:	str	xzr, [x29, #144]
   3ce68:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3ce6c:	ldr	x4, [x21, #24]
   3ce70:	lsl	x2, x26, #3
   3ce74:	add	x1, x4, x2
   3ce78:	ldur	x1, [x1, #-8]
   3ce7c:	ands	x5, x1, #0x4000000000000000
   3ce80:	str	x5, [x29, #96]
   3ce84:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
   3ce88:	ccmp	x1, x5, #0x0, eq  // eq = none
   3ce8c:	b.eq	3d82c <mpfr_sub1sp@@Base+0x211c>  // b.none
   3ce90:	mov	x20, #0x1                   	// #1
   3ce94:	ldr	x1, [x24, #24]
   3ce98:	ldr	w4, [x29, #172]
   3ce9c:	cmp	w4, #0x5
   3cea0:	b.ne	3cec0 <mpfr_sub1sp@@Base+0x17b0>  // b.any
   3cea4:	cmp	x27, x1
   3cea8:	b.eq	3d254 <mpfr_sub1sp@@Base+0x1b44>  // b.none
   3ceac:	mov	x0, x27
   3ceb0:	bl	ba10 <memcpy@plt>
   3ceb4:	mov	x0, #0x1                   	// #1
   3ceb8:	str	x0, [x29, #144]
   3cebc:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3cec0:	ldr	w4, [x29, #172]
   3cec4:	cbnz	w4, 3cf20 <mpfr_sub1sp@@Base+0x1810>
   3cec8:	cbz	x20, 3cee8 <mpfr_sub1sp@@Base+0x17d8>
   3cecc:	cmp	x27, x1
   3ced0:	b.eq	3d264 <mpfr_sub1sp@@Base+0x1b54>  // b.none
   3ced4:	mov	x0, x27
   3ced8:	bl	ba10 <memcpy@plt>
   3cedc:	mov	x0, #0x1                   	// #1
   3cee0:	str	x0, [x29, #144]
   3cee4:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3cee8:	ldr	x0, [x1]
   3ceec:	lsr	x3, x0, x3
   3cef0:	and	x19, x3, #0x1
   3cef4:	tbnz	w3, #0, 3cecc <mpfr_sub1sp@@Base+0x17bc>
   3cef8:	cmp	x27, x1
   3cefc:	b.eq	3d37c <mpfr_sub1sp@@Base+0x1c6c>  // b.none
   3cf00:	mov	x0, x27
   3cf04:	bl	ba10 <memcpy@plt>
   3cf08:	mov	x20, x19
   3cf0c:	mov	x0, #0xffffffffffffffff    	// #-1
   3cf10:	str	x0, [x29, #104]
   3cf14:	mov	x0, #0x1                   	// #1
   3cf18:	str	x0, [x29, #144]
   3cf1c:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3cf20:	ldr	w3, [x29, #172]
   3cf24:	add	w0, w3, w0, lsr #31
   3cf28:	cmp	w0, #0x3
   3cf2c:	b.eq	3cf5c <mpfr_sub1sp@@Base+0x184c>  // b.none
   3cf30:	cmp	w3, #0x1
   3cf34:	b.eq	3cf5c <mpfr_sub1sp@@Base+0x184c>  // b.none
   3cf38:	cmp	x27, x1
   3cf3c:	b.eq	3d398 <mpfr_sub1sp@@Base+0x1c88>  // b.none
   3cf40:	mov	x0, x27
   3cf44:	bl	ba10 <memcpy@plt>
   3cf48:	mov	x0, #0xffffffffffffffff    	// #-1
   3cf4c:	str	x0, [x29, #104]
   3cf50:	mov	x0, #0x1                   	// #1
   3cf54:	str	x0, [x29, #144]
   3cf58:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3cf5c:	cmp	x27, x1
   3cf60:	b.eq	3d274 <mpfr_sub1sp@@Base+0x1b64>  // b.none
   3cf64:	mov	x0, x27
   3cf68:	bl	ba10 <memcpy@plt>
   3cf6c:	mov	x0, #0x1                   	// #1
   3cf70:	str	x0, [x29, #144]
   3cf74:	str	w0, [x29, #172]
   3cf78:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3cf7c:	ldr	x1, [x21, #24]
   3cf80:	add	x0, x1, x26, lsl #3
   3cf84:	ldur	x2, [x0, #-8]
   3cf88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3cf8c:	cmp	x2, x0
   3cf90:	b.eq	3d850 <mpfr_sub1sp@@Base+0x2140>  // b.none
   3cf94:	mov	x0, #0x1                   	// #1
   3cf98:	str	x0, [x29, #104]
   3cf9c:	ldr	x1, [x24, #24]
   3cfa0:	cmp	x27, x1
   3cfa4:	b.ne	3ce2c <mpfr_sub1sp@@Base+0x171c>  // b.any
   3cfa8:	mov	x20, #0x1                   	// #1
   3cfac:	str	xzr, [x29, #144]
   3cfb0:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3cfb4:	ldr	x1, [x29, #112]
   3cfb8:	add	x0, x29, #0xb8
   3cfbc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3cfc0:	mov	x28, x0
   3cfc4:	b	3b7fc <mpfr_sub1sp@@Base+0xec>
   3cfc8:	ldr	x1, [x21, #24]
   3cfcc:	lsl	x20, x0, #3
   3cfd0:	add	x1, x1, x20
   3cfd4:	cmp	x1, x28
   3cfd8:	b.eq	3cfec <mpfr_sub1sp@@Base+0x18dc>  // b.none
   3cfdc:	sub	x2, x26, x0
   3cfe0:	lsl	x2, x2, #3
   3cfe4:	mov	x0, x28
   3cfe8:	bl	ba10 <memcpy@plt>
   3cfec:	ldr	x0, [x29, #144]
   3cff0:	sub	x0, x26, x0
   3cff4:	mov	x2, x20
   3cff8:	mov	w1, #0x0                   	// #0
   3cffc:	add	x0, x28, x0, lsl #3
   3d000:	bl	c110 <memset@plt>
   3d004:	b	3b824 <mpfr_sub1sp@@Base+0x114>
   3d008:	ldr	x0, [x29, #144]
   3d00c:	lsl	x20, x0, #3
   3d010:	ldr	x1, [x21, #24]
   3d014:	sub	x2, x26, x0
   3d018:	add	x1, x1, x20
   3d01c:	mov	x0, x28
   3d020:	bl	bce0 <__gmpn_rshift@plt>
   3d024:	ldr	x0, [x29, #144]
   3d028:	sub	x0, x26, x0
   3d02c:	mov	x2, x20
   3d030:	mov	w1, #0x0                   	// #0
   3d034:	add	x0, x28, x0, lsl #3
   3d038:	bl	c110 <memset@plt>
   3d03c:	b	3b824 <mpfr_sub1sp@@Base+0x114>
   3d040:	ldr	x2, [x21, #24]
   3d044:	ldr	x0, [x29, #128]
   3d048:	add	x1, x19, x0
   3d04c:	ldr	x0, [x29, #136]
   3d050:	subs	x1, x1, x0
   3d054:	add	x0, x1, #0x3f
   3d058:	csel	x0, x0, x1, mi  // mi = first
   3d05c:	sub	x0, x25, x0, asr #6
   3d060:	ldr	x4, [x2, x0, lsl #3]
   3d064:	negs	x3, x1
   3d068:	and	x1, x1, #0x3f
   3d06c:	and	x3, x3, #0x3f
   3d070:	csneg	x1, x1, x3, mi  // mi = first
   3d074:	mov	x3, #0x3f                  	// #63
   3d078:	sub	x1, x3, x1
   3d07c:	mov	x3, #0x1                   	// #1
   3d080:	lsl	x3, x3, x1
   3d084:	and	x3, x3, x4
   3d088:	str	x3, [x29, #144]
   3d08c:	mov	x3, #0xffffffffffffffff    	// #-1
   3d090:	lsl	x1, x3, x1
   3d094:	bics	xzr, x4, x1
   3d098:	b.ne	3d610 <mpfr_sub1sp@@Base+0x1f00>  // b.any
   3d09c:	subs	x0, x0, #0x1
   3d0a0:	b.mi	3d0ac <mpfr_sub1sp@@Base+0x199c>  // b.first
   3d0a4:	ldr	x1, [x2, x0, lsl #3]
   3d0a8:	cbz	x1, 3d09c <mpfr_sub1sp@@Base+0x198c>
   3d0ac:	mvn	x0, x0
   3d0b0:	lsr	x20, x0, #63
   3d0b4:	b	3b8d0 <mpfr_sub1sp@@Base+0x1c0>
   3d0b8:	ldr	x5, [x21, #24]
   3d0bc:	ldr	x0, [x29, #128]
   3d0c0:	ldr	x2, [x29, #136]
   3d0c4:	sub	x0, x0, x2
   3d0c8:	ldr	x2, [x29, #160]
   3d0cc:	adds	x0, x0, x2
   3d0d0:	add	x2, x0, #0x3f
   3d0d4:	csel	x2, x2, x0, mi  // mi = first
   3d0d8:	sub	x2, x25, x2, asr #6
   3d0dc:	ldr	x4, [x5, x2, lsl #3]
   3d0e0:	negs	x3, x0
   3d0e4:	and	x0, x0, #0x3f
   3d0e8:	and	x3, x3, #0x3f
   3d0ec:	csneg	x0, x0, x3, mi  // mi = first
   3d0f0:	mov	x3, #0x3f                  	// #63
   3d0f4:	sub	x3, x3, x0
   3d0f8:	mov	x0, #0x1                   	// #1
   3d0fc:	lsl	x0, x0, x3
   3d100:	mov	x20, #0x1                   	// #1
   3d104:	str	x20, [x29, #104]
   3d108:	ands	x0, x0, x4
   3d10c:	str	x0, [x29, #96]
   3d110:	b.eq	3d644 <mpfr_sub1sp@@Base+0x1f34>  // b.none
   3d114:	mov	x0, #0xffffffffffffffff    	// #-1
   3d118:	lsl	x0, x0, x3
   3d11c:	bics	xzr, x4, x0
   3d120:	b.ne	3d644 <mpfr_sub1sp@@Base+0x1f34>  // b.any
   3d124:	subs	x2, x2, #0x1
   3d128:	b.mi	3d134 <mpfr_sub1sp@@Base+0x1a24>  // b.first
   3d12c:	ldr	x0, [x5, x2, lsl #3]
   3d130:	cbz	x0, 3d124 <mpfr_sub1sp@@Base+0x1a14>
   3d134:	mvn	x2, x2
   3d138:	lsr	x0, x2, #63
   3d13c:	str	x0, [x29, #104]
   3d140:	mov	x20, #0x1                   	// #1
   3d144:	b	3d644 <mpfr_sub1sp@@Base+0x1f34>
   3d148:	mov	w3, #0x1                   	// #1
   3d14c:	mov	x2, x26
   3d150:	mov	x1, x27
   3d154:	mov	x0, x27
   3d158:	bl	bcc0 <__gmpn_lshift@plt>
   3d15c:	ldr	x0, [x29, #144]
   3d160:	cbnz	x0, 3d178 <mpfr_sub1sp@@Base+0x1a68>
   3d164:	sub	x22, x22, #0x1
   3d168:	ldr	x20, [x29, #104]
   3d16c:	ldr	x0, [x29, #96]
   3d170:	str	x0, [x29, #144]
   3d174:	b	3d67c <mpfr_sub1sp@@Base+0x1f6c>
   3d178:	ldr	x0, [x27]
   3d17c:	sub	x1, x0, x21
   3d180:	str	x1, [x27]
   3d184:	cmp	x21, x0
   3d188:	b.ls	3d164 <mpfr_sub1sp@@Base+0x1a54>  // b.plast
   3d18c:	mov	x0, x27
   3d190:	ldr	x1, [x29, #112]
   3d194:	sub	x3, x1, #0x8
   3d198:	add	x3, x3, x27
   3d19c:	ldr	x1, [x0, #8]
   3d1a0:	sub	x2, x1, #0x1
   3d1a4:	str	x2, [x0, #8]
   3d1a8:	cbnz	x1, 3d164 <mpfr_sub1sp@@Base+0x1a54>
   3d1ac:	add	x0, x0, #0x8
   3d1b0:	cmp	x0, x3
   3d1b4:	b.ne	3d19c <mpfr_sub1sp@@Base+0x1a8c>  // b.any
   3d1b8:	b	3d164 <mpfr_sub1sp@@Base+0x1a54>
   3d1bc:	ldr	w0, [x29, #172]
   3d1c0:	cbnz	w0, 3d1ec <mpfr_sub1sp@@Base+0x1adc>
   3d1c4:	ldr	x0, [x29, #144]
   3d1c8:	cbz	x0, 3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d1cc:	cbnz	x20, 3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d1d0:	ldr	x0, [x27]
   3d1d4:	ldrb	w1, [x29, #152]
   3d1d8:	lsr	x0, x0, x1
   3d1dc:	and	x1, x0, #0x1
   3d1e0:	tbnz	w0, #0, 3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d1e4:	mov	x20, x1
   3d1e8:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d1ec:	ldr	w0, [x23, #8]
   3d1f0:	ldr	w1, [x29, #172]
   3d1f4:	add	w0, w1, w0, lsr #31
   3d1f8:	cmp	w0, #0x3
   3d1fc:	b.eq	3d208 <mpfr_sub1sp@@Base+0x1af8>  // b.none
   3d200:	cmp	w1, #0x1
   3d204:	b.ne	3d688 <mpfr_sub1sp@@Base+0x1f78>  // b.any
   3d208:	ldr	x0, [x29, #144]
   3d20c:	orr	x0, x0, x20
   3d210:	cbz	x0, 3d3bc <mpfr_sub1sp@@Base+0x1cac>
   3d214:	mov	w0, #0x1                   	// #1
   3d218:	str	w0, [x29, #172]
   3d21c:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d220:	mov	x0, #0xffffffffffffffff    	// #-1
   3d224:	str	x0, [x29, #96]
   3d228:	mov	x20, #0x0                   	// #0
   3d22c:	mov	x0, #0x1                   	// #1
   3d230:	str	x0, [x29, #144]
   3d234:	str	w0, [x29, #172]
   3d238:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d23c:	mov	x0, #0xffffffffffffffff    	// #-1
   3d240:	str	x0, [x29, #96]
   3d244:	mov	x20, #0x0                   	// #0
   3d248:	mov	x0, #0x1                   	// #1
   3d24c:	str	x0, [x29, #144]
   3d250:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d254:	mov	x27, x1
   3d258:	mov	x0, #0x1                   	// #1
   3d25c:	str	x0, [x29, #144]
   3d260:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d264:	mov	x27, x1
   3d268:	mov	x0, #0x1                   	// #1
   3d26c:	str	x0, [x29, #144]
   3d270:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d274:	mov	x27, x1
   3d278:	mov	x0, #0x1                   	// #1
   3d27c:	str	x0, [x29, #144]
   3d280:	str	w0, [x29, #172]
   3d284:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d288:	mov	x20, #0x1                   	// #1
   3d28c:	str	xzr, [x29, #144]
   3d290:	str	w20, [x29, #172]
   3d294:	b	3d2a0 <mpfr_sub1sp@@Base+0x1b90>
   3d298:	mov	x20, #0x1                   	// #1
   3d29c:	str	xzr, [x29, #144]
   3d2a0:	mov	x3, #0x1                   	// #1
   3d2a4:	ldrb	w0, [x29, #120]
   3d2a8:	lsl	x3, x3, x0
   3d2ac:	ldr	x0, [x27]
   3d2b0:	sub	x1, x0, x3
   3d2b4:	str	x1, [x27]
   3d2b8:	cmp	x3, x0
   3d2bc:	b.ls	3d2e4 <mpfr_sub1sp@@Base+0x1bd4>  // b.plast
   3d2c0:	mov	x0, x27
   3d2c4:	add	x25, x27, x25, lsl #3
   3d2c8:	ldr	x1, [x0, #8]
   3d2cc:	sub	x2, x1, #0x1
   3d2d0:	str	x2, [x0, #8]
   3d2d4:	cbnz	x1, 3d2e4 <mpfr_sub1sp@@Base+0x1bd4>
   3d2d8:	add	x0, x0, #0x8
   3d2dc:	cmp	x0, x25
   3d2e0:	b.ne	3d2c8 <mpfr_sub1sp@@Base+0x1bb8>  // b.any
   3d2e4:	lsl	x0, x26, #3
   3d2e8:	sub	x0, x0, #0x8
   3d2ec:	ldr	x1, [x27, x0]
   3d2f0:	mov	w19, #0xffffffff            	// #-1
   3d2f4:	tbnz	x1, #63, 3d6b4 <mpfr_sub1sp@@Base+0x1fa4>
   3d2f8:	ldr	x1, [x27]
   3d2fc:	lsl	x1, x1, #1
   3d300:	str	x1, [x27]
   3d304:	ldr	x1, [x27, x0]
   3d308:	orr	x1, x1, #0x8000000000000000
   3d30c:	str	x1, [x27, x0]
   3d310:	sub	x22, x22, #0x1
   3d314:	ldr	w2, [x29, #172]
   3d318:	cmp	w2, #0x1
   3d31c:	cset	w1, eq  // eq = none
   3d320:	ldr	x0, [x29, #144]
   3d324:	cmp	x0, #0x0
   3d328:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   3d32c:	b.ne	3d5d0 <mpfr_sub1sp@@Base+0x1ec0>  // b.any
   3d330:	cmp	w2, #0x0
   3d334:	ldr	x4, [x29, #96]
   3d338:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   3d33c:	b.eq	3d5ec <mpfr_sub1sp@@Base+0x1edc>  // b.none
   3d340:	cmp	x0, #0x0
   3d344:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   3d348:	b.ne	3d5dc <mpfr_sub1sp@@Base+0x1ecc>  // b.any
   3d34c:	ldr	x0, [x27]
   3d350:	orr	x3, x0, x3
   3d354:	str	x3, [x27]
   3d358:	cbz	w2, 3d5f8 <mpfr_sub1sp@@Base+0x1ee8>
   3d35c:	b	3d5dc <mpfr_sub1sp@@Base+0x1ecc>
   3d360:	mov	x0, #0xffffffffffffffff    	// #-1
   3d364:	str	x0, [x29, #104]
   3d368:	str	x0, [x29, #96]
   3d36c:	mov	x20, #0x0                   	// #0
   3d370:	mov	x0, #0x1                   	// #1
   3d374:	str	x0, [x29, #144]
   3d378:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d37c:	mov	x20, x19
   3d380:	mov	x27, x1
   3d384:	mov	x0, #0xffffffffffffffff    	// #-1
   3d388:	str	x0, [x29, #104]
   3d38c:	mov	x0, #0x1                   	// #1
   3d390:	str	x0, [x29, #144]
   3d394:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d398:	mov	x27, x1
   3d39c:	mov	x0, #0xffffffffffffffff    	// #-1
   3d3a0:	str	x0, [x29, #104]
   3d3a4:	mov	x0, #0x1                   	// #1
   3d3a8:	str	x0, [x29, #144]
   3d3ac:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d3b0:	mov	x20, #0x1                   	// #1
   3d3b4:	str	xzr, [x29, #144]
   3d3b8:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d3bc:	mov	x20, x0
   3d3c0:	str	x0, [x29, #144]
   3d3c4:	mov	w0, #0x1                   	// #1
   3d3c8:	str	w0, [x29, #172]
   3d3cc:	b	3d688 <mpfr_sub1sp@@Base+0x1f78>
   3d3d0:	bl	c410 <mpfr_tmp_free@plt>
   3d3d4:	b	3d6c0 <mpfr_sub1sp@@Base+0x1fb0>
   3d3d8:	mov	w1, #0x0                   	// #0
   3d3dc:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d3e0:	cbnz	x1, 3d3f0 <mpfr_sub1sp@@Base+0x1ce0>
   3d3e4:	sub	x20, x20, #0x40
   3d3e8:	mov	x6, x1
   3d3ec:	b	3bcb8 <mpfr_sub1sp@@Base+0x5a8>
   3d3f0:	mov	x6, x3
   3d3f4:	mov	x3, x1
   3d3f8:	mov	x1, x7
   3d3fc:	b	3bcb8 <mpfr_sub1sp@@Base+0x5a8>
   3d400:	mov	x6, x3
   3d404:	mov	x8, x1
   3d408:	mov	x3, x7
   3d40c:	mov	x1, #0x0                   	// #0
   3d410:	b	3d44c <mpfr_sub1sp@@Base+0x1d3c>
   3d414:	ldr	x3, [x6, #16]
   3d418:	sub	x3, x3, #0x1
   3d41c:	lsr	x22, x8, x22
   3d420:	sub	x3, x3, x22
   3d424:	cbz	x9, 3c4ec <mpfr_sub1sp@@Base+0xddc>
   3d428:	orr	x0, x7, x1
   3d42c:	cmp	x0, #0x0
   3d430:	cset	x6, eq  // eq = none
   3d434:	sub	x6, x3, x6
   3d438:	cmp	x7, #0x0
   3d43c:	cset	x8, eq  // eq = none
   3d440:	sub	x8, x1, x8
   3d444:	sub	x3, x7, #0x1
   3d448:	neg	x1, x9
   3d44c:	clz	x9, x6
   3d450:	cbz	x9, 3c6b4 <mpfr_sub1sp@@Base+0xfa4>
   3d454:	mov	w7, #0x40                  	// #64
   3d458:	sub	w7, w7, w9
   3d45c:	lsl	x6, x6, x9
   3d460:	lsr	x0, x8, x7
   3d464:	orr	x6, x6, x0
   3d468:	str	x6, [x4, #16]
   3d46c:	lsl	x0, x8, x9
   3d470:	lsr	x6, x3, x7
   3d474:	orr	x0, x0, x6
   3d478:	str	x0, [x4, #8]
   3d47c:	lsl	x3, x3, x9
   3d480:	lsr	x7, x1, x7
   3d484:	orr	x3, x7, x3
   3d488:	lsl	x1, x1, x9
   3d48c:	sub	x20, x20, x9
   3d490:	sub	w6, w19, #0x1
   3d494:	mov	x0, #0x1                   	// #1
   3d498:	lsl	x0, x0, x6
   3d49c:	and	x6, x0, x3
   3d4a0:	eor	x2, x2, x0
   3d4a4:	and	x2, x2, x3
   3d4a8:	orr	x2, x2, x1
   3d4ac:	neg	x0, x5
   3d4b0:	and	x3, x0, x3
   3d4b4:	str	x3, [x4]
   3d4b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3d4bc:	ldr	x1, [x0, #2512]
   3d4c0:	add	x0, x0, #0x9d0
   3d4c4:	blr	x1
   3d4c8:	mrs	x1, tpidr_el0
   3d4cc:	ldr	x0, [x1, x0]
   3d4d0:	cmp	x0, x20
   3d4d4:	b.gt	3c940 <mpfr_sub1sp@@Base+0x1230>
   3d4d8:	str	x20, [x23, #16]
   3d4dc:	orr	x0, x6, x2
   3d4e0:	cmp	x0, #0x0
   3d4e4:	mov	w1, #0x0                   	// #0
   3d4e8:	ldr	w0, [x29, #172]
   3d4ec:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3d4f0:	b.eq	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>  // b.none
   3d4f4:	cbnz	w0, 3c9a0 <mpfr_sub1sp@@Base+0x1290>
   3d4f8:	cbz	x6, 3d50c <mpfr_sub1sp@@Base+0x1dfc>
   3d4fc:	cbnz	x2, 3c9bc <mpfr_sub1sp@@Base+0x12ac>
   3d500:	ldr	x0, [x4]
   3d504:	lsr	x19, x0, x19
   3d508:	tbnz	w19, #0, 3c9bc <mpfr_sub1sp@@Base+0x12ac>
   3d50c:	ldr	w1, [x23, #8]
   3d510:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d514:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3d518:	ldr	x2, [x0, #2576]
   3d51c:	add	x0, x0, #0xa10
   3d520:	blr	x2
   3d524:	mrs	x2, tpidr_el0
   3d528:	add	x0, x2, x0
   3d52c:	ldr	w2, [x0]
   3d530:	orr	w2, w2, #0x8
   3d534:	str	w2, [x0]
   3d538:	neg	w1, w1
   3d53c:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d540:	sub	x1, x1, #0x1
   3d544:	cbz	x7, 3d56c <mpfr_sub1sp@@Base+0x1e5c>
   3d548:	orr	x6, x3, x0
   3d54c:	cmp	x6, #0x0
   3d550:	cset	x6, eq  // eq = none
   3d554:	sub	x1, x1, x6
   3d558:	cmp	x3, #0x0
   3d55c:	cset	x6, eq  // eq = none
   3d560:	sub	x0, x0, x6
   3d564:	sub	x3, x3, #0x1
   3d568:	neg	x7, x7
   3d56c:	tbnz	x1, #63, 3c778 <mpfr_sub1sp@@Base+0x1068>
   3d570:	extr	x1, x1, x0, #63
   3d574:	str	x1, [x4, #16]
   3d578:	extr	x0, x0, x3, #63
   3d57c:	str	x0, [x4, #8]
   3d580:	extr	x3, x3, x7, #63
   3d584:	lsl	x7, x7, #1
   3d588:	sub	x20, x20, #0x1
   3d58c:	sub	w0, w19, #0x1
   3d590:	mov	x1, #0x1                   	// #1
   3d594:	lsl	x1, x1, x0
   3d598:	and	x6, x1, x3
   3d59c:	eor	x2, x2, x1
   3d5a0:	and	x2, x2, x3
   3d5a4:	orr	x2, x2, x7
   3d5a8:	neg	x0, x5
   3d5ac:	and	x3, x0, x3
   3d5b0:	str	x3, [x4]
   3d5b4:	b	3d4b8 <mpfr_sub1sp@@Base+0x1da8>
   3d5b8:	ldr	x0, [x29, #144]
   3d5bc:	cmp	x0, #0x0
   3d5c0:	ldr	w0, [x29, #172]
   3d5c4:	ccmp	w0, #0x1, #0x4, ne  // ne = any
   3d5c8:	b.eq	3d6a4 <mpfr_sub1sp@@Base+0x1f94>  // b.none
   3d5cc:	b	3d754 <mpfr_sub1sp@@Base+0x2044>
   3d5d0:	ldr	x0, [x27]
   3d5d4:	orr	x3, x0, x3
   3d5d8:	str	x3, [x27]
   3d5dc:	cmp	x20, #0x0
   3d5e0:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   3d5e4:	csetm	w19, eq  // eq = none
   3d5e8:	b	3d6b4 <mpfr_sub1sp@@Base+0x1fa4>
   3d5ec:	ldr	x0, [x27]
   3d5f0:	orr	x3, x0, x3
   3d5f4:	str	x3, [x27]
   3d5f8:	mov	w19, #0x1                   	// #1
   3d5fc:	b	3d6b4 <mpfr_sub1sp@@Base+0x1fa4>
   3d600:	ldr	x0, [x20, x0, lsl #3]
   3d604:	cmp	x0, x1
   3d608:	b.hi	3cad8 <mpfr_sub1sp@@Base+0x13c8>  // b.pmore
   3d60c:	b	3cd58 <mpfr_sub1sp@@Base+0x1648>
   3d610:	ldr	x1, [x24, #24]
   3d614:	ldr	x0, [x29, #112]
   3d618:	sub	x19, x0, #0x8
   3d61c:	ldr	x0, [x1, x19]
   3d620:	ldr	x2, [x28, x19]
   3d624:	sub	x0, x0, x2
   3d628:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3d62c:	cmp	x0, x2
   3d630:	b.ls	3d0b8 <mpfr_sub1sp@@Base+0x19a8>  // b.plast
   3d634:	mov	x20, #0x1                   	// #1
   3d638:	mov	x0, #0xffffffffffffffff    	// #-1
   3d63c:	str	x0, [x29, #104]
   3d640:	str	x0, [x29, #96]
   3d644:	mov	x21, #0x1                   	// #1
   3d648:	ldrb	w0, [x29, #152]
   3d64c:	lsl	x21, x21, x0
   3d650:	neg	x2, x21
   3d654:	ldr	x0, [x28]
   3d658:	and	x0, x0, x2
   3d65c:	str	x0, [x28]
   3d660:	ldr	x27, [x23, #24]
   3d664:	mov	x3, x26
   3d668:	mov	x2, x28
   3d66c:	mov	x0, x27
   3d670:	bl	be60 <__gmpn_sub_n@plt>
   3d674:	ldr	x0, [x27, x19]
   3d678:	tbz	x0, #63, 3d148 <mpfr_sub1sp@@Base+0x1a38>
   3d67c:	ldr	w0, [x29, #172]
   3d680:	cmp	w0, #0x5
   3d684:	b.ne	3d1bc <mpfr_sub1sp@@Base+0x1aac>  // b.any
   3d688:	lsl	x26, x26, #3
   3d68c:	sub	x26, x26, #0x8
   3d690:	add	x2, x27, x26
   3d694:	ldr	x1, [x27, x26]
   3d698:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d69c:	cmp	x1, x0
   3d6a0:	b.eq	3d714 <mpfr_sub1sp@@Base+0x2004>  // b.none
   3d6a4:	ldr	x0, [x29, #144]
   3d6a8:	orr	x20, x0, x20
   3d6ac:	cmp	x20, #0x0
   3d6b0:	cset	w19, ne  // ne = any
   3d6b4:	str	x22, [x23, #16]
   3d6b8:	ldr	x0, [x29, #184]
   3d6bc:	cbnz	x0, 3d3d0 <mpfr_sub1sp@@Base+0x1cc0>
   3d6c0:	ldr	w1, [x23, #8]
   3d6c4:	mul	w1, w19, w1
   3d6c8:	cbz	w1, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d6cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3d6d0:	ldr	x2, [x0, #2576]
   3d6d4:	add	x0, x0, #0xa10
   3d6d8:	blr	x2
   3d6dc:	mrs	x2, tpidr_el0
   3d6e0:	add	x0, x2, x0
   3d6e4:	ldr	w2, [x0]
   3d6e8:	orr	w2, w2, #0x8
   3d6ec:	str	w2, [x0]
   3d6f0:	mov	w0, w1
   3d6f4:	mov	sp, x29
   3d6f8:	ldp	x19, x20, [sp, #16]
   3d6fc:	ldp	x21, x22, [sp, #32]
   3d700:	ldp	x23, x24, [sp, #48]
   3d704:	ldp	x25, x26, [sp, #64]
   3d708:	ldp	x27, x28, [sp, #80]
   3d70c:	ldp	x29, x30, [sp], #192
   3d710:	ret
   3d714:	sub	x0, x25, #0x1
   3d718:	ldr	x1, [x27, x0, lsl #3]
   3d71c:	cbnz	x1, 3d6a4 <mpfr_sub1sp@@Base+0x1f94>
   3d720:	sub	x0, x0, #0x1
   3d724:	cmn	x0, #0x1
   3d728:	b.ne	3d718 <mpfr_sub1sp@@Base+0x2008>  // b.any
   3d72c:	ldr	w0, [x29, #172]
   3d730:	cmp	w0, #0x0
   3d734:	ldr	x0, [x29, #144]
   3d738:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   3d73c:	b.ne	3d5b8 <mpfr_sub1sp@@Base+0x1ea8>  // b.any
   3d740:	ldr	x0, [x29, #96]
   3d744:	cmp	x0, #0x0
   3d748:	ldr	x0, [x29, #104]
   3d74c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   3d750:	b.eq	3d6a4 <mpfr_sub1sp@@Base+0x1f94>  // b.none
   3d754:	mov	x0, #0x1                   	// #1
   3d758:	ldrb	w1, [x29, #120]
   3d75c:	lsl	x0, x0, x1
   3d760:	ldr	x1, [x27]
   3d764:	sub	x3, x1, x0
   3d768:	str	x3, [x27]
   3d76c:	cmp	x0, x1
   3d770:	b.ls	3d798 <mpfr_sub1sp@@Base+0x2088>  // b.plast
   3d774:	mov	x0, x27
   3d778:	add	x25, x27, x25, lsl #3
   3d77c:	ldr	x1, [x0, #8]
   3d780:	sub	x3, x1, #0x1
   3d784:	str	x3, [x0, #8]
   3d788:	cbnz	x1, 3d798 <mpfr_sub1sp@@Base+0x2088>
   3d78c:	add	x0, x0, #0x8
   3d790:	cmp	x0, x25
   3d794:	b.ne	3d77c <mpfr_sub1sp@@Base+0x206c>  // b.any
   3d798:	ldr	x0, [x2]
   3d79c:	orr	x0, x0, #0x8000000000000000
   3d7a0:	str	x0, [x2]
   3d7a4:	sub	x22, x22, #0x1
   3d7a8:	mov	w19, #0x0                   	// #0
   3d7ac:	cbz	x20, 3d6b4 <mpfr_sub1sp@@Base+0x1fa4>
   3d7b0:	mov	w1, #0x1                   	// #1
   3d7b4:	ldr	w0, [x29, #172]
   3d7b8:	cmp	w0, #0x0
   3d7bc:	cneg	w19, w1, eq  // eq = none
   3d7c0:	b	3d6b4 <mpfr_sub1sp@@Base+0x1fa4>
   3d7c4:	lsl	x1, x1, #63
   3d7c8:	sub	x0, x25, #0x1
   3d7cc:	ldr	x2, [x27, x0, lsl #3]
   3d7d0:	add	x1, x1, x2, lsr #1
   3d7d4:	ldr	x3, [x20, x0, lsl #3]
   3d7d8:	cmp	x3, x1
   3d7dc:	b.ne	3d600 <mpfr_sub1sp@@Base+0x1ef0>  // b.any
   3d7e0:	lsl	x1, x2, #63
   3d7e4:	sub	x0, x0, #0x1
   3d7e8:	cmn	x0, #0x1
   3d7ec:	b.ne	3d7cc <mpfr_sub1sp@@Base+0x20bc>  // b.any
   3d7f0:	ldr	x19, [x23, #24]
   3d7f4:	cbnz	x1, 3cdb8 <mpfr_sub1sp@@Base+0x16a8>
   3d7f8:	mov	x2, x28
   3d7fc:	mov	w1, #0x0                   	// #0
   3d800:	mov	x0, x19
   3d804:	bl	c110 <memset@plt>
   3d808:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d80c:	str	x0, [x19, x28]
   3d810:	str	x22, [x23, #16]
   3d814:	ldr	x0, [x29, #184]
   3d818:	mov	w1, #0x0                   	// #0
   3d81c:	cbz	x0, 3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d820:	bl	c410 <mpfr_tmp_free@plt>
   3d824:	mov	w1, #0x0                   	// #0
   3d828:	b	3d6f0 <mpfr_sub1sp@@Base+0x1fe0>
   3d82c:	sub	x1, x25, #0x1
   3d830:	ldr	x5, [x4, x1, lsl #3]
   3d834:	cbnz	x5, 3d844 <mpfr_sub1sp@@Base+0x2134>
   3d838:	sub	x1, x1, #0x1
   3d83c:	cmn	x1, #0x1
   3d840:	b.ne	3d830 <mpfr_sub1sp@@Base+0x2120>  // b.any
   3d844:	mvn	x1, x1
   3d848:	lsr	x20, x1, #63
   3d84c:	b	3ce94 <mpfr_sub1sp@@Base+0x1784>
   3d850:	sub	x0, x25, #0x1
   3d854:	ldr	x2, [x1, x0, lsl #3]
   3d858:	cbnz	x2, 3d868 <mpfr_sub1sp@@Base+0x2158>
   3d85c:	sub	x0, x0, #0x1
   3d860:	cmn	x0, #0x1
   3d864:	b.ne	3d854 <mpfr_sub1sp@@Base+0x2144>  // b.any
   3d868:	mvn	x0, x0
   3d86c:	lsr	x0, x0, #63
   3d870:	str	x0, [x29, #104]
   3d874:	b	3cf9c <mpfr_sub1sp@@Base+0x188c>

000000000003d878 <mpfr_get_version@@Base>:
   3d878:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3d87c:	add	x0, x0, #0x698
   3d880:	ret

000000000003d884 <mpfr_mpn_exp@@Base>:
   3d884:	stp	x29, x30, [sp, #-208]!
   3d888:	mov	x29, sp
   3d88c:	stp	x19, x20, [sp, #16]
   3d890:	stp	x21, x22, [sp, #32]
   3d894:	stp	x23, x24, [sp, #48]
   3d898:	stp	x25, x26, [sp, #64]
   3d89c:	stp	x27, x28, [sp, #80]
   3d8a0:	str	x1, [x29, #104]
   3d8a4:	str	x3, [x29, #168]
   3d8a8:	cmp	x3, #0x0
   3d8ac:	b.le	3d988 <mpfr_mpn_exp@@Base+0x104>
   3d8b0:	mov	x21, x0
   3d8b4:	mov	x24, x4
   3d8b8:	sub	w0, w2, #0x2
   3d8bc:	cmp	w0, #0x3c
   3d8c0:	b.hi	3d9a0 <mpfr_mpn_exp@@Base+0x11c>  // b.pmore
   3d8c4:	str	xzr, [x29, #200]
   3d8c8:	sxtw	x2, w2
   3d8cc:	clz	x0, x2
   3d8d0:	mov	x20, x0
   3d8d4:	mov	x1, #0x40                  	// #64
   3d8d8:	sub	x1, x1, x0
   3d8dc:	str	x1, [x29, #112]
   3d8e0:	lsl	x0, x2, x0
   3d8e4:	str	x0, [x29, #120]
   3d8e8:	neg	x20, x20
   3d8ec:	lsl	x25, x4, #4
   3d8f0:	cmp	x25, #0x4, lsl #12
   3d8f4:	b.hi	3d9b8 <mpfr_mpn_exp@@Base+0x134>  // b.pmore
   3d8f8:	sub	sp, sp, x25
   3d8fc:	mov	x23, sp
   3d900:	lsl	x26, x24, #3
   3d904:	str	x26, [x29, #128]
   3d908:	sub	x19, x26, #0x8
   3d90c:	ldr	x0, [x29, #120]
   3d910:	str	x0, [x21, x19]
   3d914:	sub	x22, x24, #0x1
   3d918:	lsl	x2, x22, #3
   3d91c:	mov	w1, #0x0                   	// #0
   3d920:	mov	x0, x21
   3d924:	bl	c110 <memset@plt>
   3d928:	sub	x20, x20, x22, lsl #6
   3d92c:	ldr	x0, [x29, #168]
   3d930:	clz	x0, x0
   3d934:	mov	x1, #0x40                  	// #64
   3d938:	sub	x0, x1, x0
   3d93c:	mov	x22, x0
   3d940:	str	x0, [x29, #184]
   3d944:	mov	w28, w0
   3d948:	mov	x2, x25
   3d94c:	mov	w1, #0x0                   	// #0
   3d950:	mov	x0, x23
   3d954:	bl	c110 <memset@plt>
   3d958:	subs	w22, w22, #0x2
   3d95c:	b.mi	3dbe0 <mpfr_mpn_exp@@Base+0x35c>  // b.first
   3d960:	lsl	x0, x24, #6
   3d964:	str	x0, [x29, #152]
   3d968:	str	wzr, [x29, #136]
   3d96c:	str	wzr, [x29, #140]
   3d970:	sub	x25, x25, #0x8
   3d974:	add	x0, x23, x26
   3d978:	str	x0, [x29, #176]
   3d97c:	add	x0, x23, x19
   3d980:	str	x0, [x29, #144]
   3d984:	b	3da78 <mpfr_mpn_exp@@Base+0x1f4>
   3d988:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3d98c:	add	x2, x2, #0x6a0
   3d990:	mov	w1, #0x36                  	// #54
   3d994:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3d998:	add	x0, x0, #0x6a8
   3d99c:	bl	cb40 <mpfr_assert_fail@plt>
   3d9a0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3d9a4:	add	x2, x2, #0x6b8
   3d9a8:	mov	w1, #0x37                  	// #55
   3d9ac:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3d9b0:	add	x0, x0, #0x6a8
   3d9b4:	bl	cb40 <mpfr_assert_fail@plt>
   3d9b8:	mov	x1, x25
   3d9bc:	add	x0, x29, #0xc8
   3d9c0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3d9c4:	mov	x23, x0
   3d9c8:	b	3d900 <mpfr_mpn_exp@@Base+0x7c>
   3d9cc:	ldr	x1, [x29, #200]
   3d9d0:	mov	x0, #0xfffffffffffffffe    	// #-2
   3d9d4:	cbnz	x1, 3d9f8 <mpfr_mpn_exp@@Base+0x174>
   3d9d8:	mov	sp, x29
   3d9dc:	ldp	x19, x20, [sp, #16]
   3d9e0:	ldp	x21, x22, [sp, #32]
   3d9e4:	ldp	x23, x24, [sp, #48]
   3d9e8:	ldp	x25, x26, [sp, #64]
   3d9ec:	ldp	x27, x28, [sp, #80]
   3d9f0:	ldp	x29, x30, [sp], #208
   3d9f4:	ret
   3d9f8:	mov	x0, x1
   3d9fc:	bl	c410 <mpfr_tmp_free@plt>
   3da00:	mov	x0, #0xfffffffffffffffe    	// #-2
   3da04:	b	3d9d8 <mpfr_mpn_exp@@Base+0x154>
   3da08:	ldr	x1, [x29, #152]
   3da0c:	add	x20, x0, x1
   3da10:	b	3dac8 <mpfr_mpn_exp@@Base+0x244>
   3da14:	mov	w3, #0x1                   	// #1
   3da18:	mov	x2, x24
   3da1c:	ldr	x1, [x29, #176]
   3da20:	mov	x0, x21
   3da24:	bl	bcc0 <__gmpn_lshift@plt>
   3da28:	mov	w3, #0x1                   	// #1
   3da2c:	mov	x2, #0x1                   	// #1
   3da30:	ldr	x0, [x29, #144]
   3da34:	mov	x1, x0
   3da38:	bl	bcc0 <__gmpn_lshift@plt>
   3da3c:	ldr	x1, [x21]
   3da40:	orr	x1, x1, x0
   3da44:	str	x1, [x21]
   3da48:	sub	x20, x20, #0x1
   3da4c:	ldr	x0, [x29, #184]
   3da50:	cmp	x0, w28, uxtw
   3da54:	b.eq	3db00 <mpfr_mpn_exp@@Base+0x27c>  // b.none
   3da58:	ldr	w0, [x29, #140]
   3da5c:	add	w0, w0, #0x1
   3da60:	str	w0, [x29, #140]
   3da64:	ldr	x0, [x29, #168]
   3da68:	asr	x0, x0, x22
   3da6c:	tbnz	w0, #0, 3db24 <mpfr_mpn_exp@@Base+0x2a0>
   3da70:	subs	w22, w22, #0x1
   3da74:	b.mi	3dbe8 <mpfr_mpn_exp@@Base+0x364>  // b.first
   3da78:	mov	x1, #0x0                   	// #0
   3da7c:	mov	x0, x21
   3da80:	bl	caa0 <__gmpn_scan1@plt>
   3da84:	lsr	x19, x0, #6
   3da88:	add	x27, x23, x19, lsl #4
   3da8c:	sub	x26, x24, x19
   3da90:	mov	x2, x26
   3da94:	add	x1, x21, x19, lsl #3
   3da98:	mov	x0, x27
   3da9c:	bl	c3b0 <__gmpn_sqr@plt>
   3daa0:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   3daa4:	cmn	x20, x0
   3daa8:	b.mi	3d9cc <mpfr_mpn_exp@@Base+0x148>  // b.first
   3daac:	lsl	x0, x20, #1
   3dab0:	tbnz	x20, #62, 3da08 <mpfr_mpn_exp@@Base+0x184>
   3dab4:	ldr	x1, [x29, #152]
   3dab8:	adds	x0, x1, x0
   3dabc:	b.cs	3d9cc <mpfr_mpn_exp@@Base+0x148>  // b.hs, b.nlast
   3dac0:	mov	x20, x0
   3dac4:	tbnz	x0, #63, 3d9cc <mpfr_mpn_exp@@Base+0x148>
   3dac8:	add	x0, x23, x25
   3dacc:	str	x0, [x29, #160]
   3dad0:	ldr	x0, [x23, x25]
   3dad4:	tbz	x0, #63, 3da14 <mpfr_mpn_exp@@Base+0x190>
   3dad8:	ldr	x0, [x29, #176]
   3dadc:	cmp	x0, x21
   3dae0:	b.eq	3daf4 <mpfr_mpn_exp@@Base+0x270>  // b.none
   3dae4:	ldr	x2, [x29, #128]
   3dae8:	mov	x1, x0
   3daec:	mov	x0, x21
   3daf0:	bl	ba10 <memcpy@plt>
   3daf4:	ldr	x0, [x29, #184]
   3daf8:	cmp	x0, w28, uxtw
   3dafc:	b.ne	3da64 <mpfr_mpn_exp@@Base+0x1e0>  // b.any
   3db00:	cmp	x24, x19, lsl #1
   3db04:	b.cc	3da64 <mpfr_mpn_exp@@Base+0x1e0>  // b.lo, b.ul, b.last
   3db08:	mov	x1, #0x0                   	// #0
   3db0c:	mov	x0, x27
   3db10:	bl	caa0 <__gmpn_scan1@plt>
   3db14:	sub	x19, x26, x19
   3db18:	cmp	x0, x19, lsl #6
   3db1c:	csel	w28, w28, w22, cs  // cs = hs, nlast
   3db20:	b	3da64 <mpfr_mpn_exp@@Base+0x1e0>
   3db24:	ldr	x3, [x29, #120]
   3db28:	mov	x2, x24
   3db2c:	mov	x1, x21
   3db30:	ldr	x19, [x29, #144]
   3db34:	mov	x0, x19
   3db38:	bl	cd30 <__gmpn_mul_1@plt>
   3db3c:	ldr	x1, [x29, #160]
   3db40:	str	x0, [x1]
   3db44:	ldr	x1, [x29, #112]
   3db48:	add	x20, x20, x1
   3db4c:	tbz	x0, #63, 3db88 <mpfr_mpn_exp@@Base+0x304>
   3db50:	ldr	x0, [x29, #176]
   3db54:	cmp	x0, x21
   3db58:	b.eq	3db6c <mpfr_mpn_exp@@Base+0x2e8>  // b.none
   3db5c:	ldr	x2, [x29, #128]
   3db60:	mov	x1, x0
   3db64:	mov	x0, x21
   3db68:	bl	ba10 <memcpy@plt>
   3db6c:	ldr	x0, [x29, #184]
   3db70:	cmp	x0, w28, uxtw
   3db74:	b.eq	3dbcc <mpfr_mpn_exp@@Base+0x348>  // b.none
   3db78:	ldr	w0, [x29, #136]
   3db7c:	add	w0, w0, #0x1
   3db80:	str	w0, [x29, #136]
   3db84:	b	3da70 <mpfr_mpn_exp@@Base+0x1ec>
   3db88:	mov	w3, #0x1                   	// #1
   3db8c:	mov	x2, x24
   3db90:	ldr	x1, [x29, #176]
   3db94:	mov	x0, x21
   3db98:	bl	bcc0 <__gmpn_lshift@plt>
   3db9c:	mov	w3, #0x1                   	// #1
   3dba0:	mov	x2, #0x1                   	// #1
   3dba4:	mov	x1, x19
   3dba8:	mov	x0, x19
   3dbac:	bl	bcc0 <__gmpn_lshift@plt>
   3dbb0:	ldr	x1, [x21]
   3dbb4:	orr	x1, x1, x0
   3dbb8:	str	x1, [x21]
   3dbbc:	sub	x20, x20, #0x1
   3dbc0:	ldr	x0, [x29, #184]
   3dbc4:	cmp	x0, w28, uxtw
   3dbc8:	b.ne	3da70 <mpfr_mpn_exp@@Base+0x1ec>  // b.any
   3dbcc:	ldr	x0, [x29, #144]
   3dbd0:	ldr	x0, [x0]
   3dbd4:	cmp	x0, #0x0
   3dbd8:	csel	w28, w28, w22, eq  // eq = none
   3dbdc:	b	3da70 <mpfr_mpn_exp@@Base+0x1ec>
   3dbe0:	str	wzr, [x29, #136]
   3dbe4:	str	wzr, [x29, #140]
   3dbe8:	add	w19, w28, #0x3
   3dbec:	ldr	x0, [x29, #200]
   3dbf0:	cbnz	x0, 3dc20 <mpfr_mpn_exp@@Base+0x39c>
   3dbf4:	ldr	x0, [x29, #104]
   3dbf8:	str	x20, [x0]
   3dbfc:	ldr	x0, [x29, #184]
   3dc00:	cmp	x0, w28, uxtw
   3dc04:	b.eq	3dc28 <mpfr_mpn_exp@@Base+0x3a4>  // b.none
   3dc08:	ldr	w0, [x29, #140]
   3dc0c:	add	w0, w0, w0, lsr #31
   3dc10:	ldr	w1, [x29, #136]
   3dc14:	add	w0, w1, w0, asr #1
   3dc18:	add	w0, w0, w19
   3dc1c:	b	3d9d8 <mpfr_mpn_exp@@Base+0x154>
   3dc20:	bl	c410 <mpfr_tmp_free@plt>
   3dc24:	b	3dbf4 <mpfr_mpn_exp@@Base+0x370>
   3dc28:	mov	x0, #0xffffffffffffffff    	// #-1
   3dc2c:	b	3d9d8 <mpfr_mpn_exp@@Base+0x154>

000000000003dc30 <mpfr_assert_fail@@Base>:
   3dc30:	stp	x29, x30, [sp, #-32]!
   3dc34:	mov	x29, sp
   3dc38:	stp	x19, x20, [sp, #16]
   3dc3c:	mov	x20, x2
   3dc40:	cbz	x0, 3dc90 <mpfr_assert_fail@@Base+0x60>
   3dc44:	mov	w19, w1
   3dc48:	ldrb	w1, [x0]
   3dc4c:	cbz	w1, 3dc90 <mpfr_assert_fail@@Base+0x60>
   3dc50:	mov	x2, x0
   3dc54:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3dc58:	add	x1, x1, #0x6d0
   3dc5c:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   3dc60:	ldr	x0, [x0, #3968]
   3dc64:	ldr	x0, [x0]
   3dc68:	bl	cce0 <fprintf@plt>
   3dc6c:	cmn	w19, #0x1
   3dc70:	b.eq	3dc90 <mpfr_assert_fail@@Base+0x60>  // b.none
   3dc74:	mov	w2, w19
   3dc78:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3dc7c:	add	x1, x1, #0x6d8
   3dc80:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   3dc84:	ldr	x0, [x0, #3968]
   3dc88:	ldr	x0, [x0]
   3dc8c:	bl	cce0 <fprintf@plt>
   3dc90:	mov	x2, x20
   3dc94:	adrp	x1, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3dc98:	add	x1, x1, #0x6e0
   3dc9c:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   3dca0:	ldr	x0, [x0, #3968]
   3dca4:	ldr	x0, [x0]
   3dca8:	bl	cce0 <fprintf@plt>
   3dcac:	bl	c3e0 <abort@plt>

000000000003dcb0 <mpfr_allocate_func@@Base>:
   3dcb0:	stp	x29, x30, [sp, #-64]!
   3dcb4:	mov	x29, sp
   3dcb8:	str	x19, [sp, #16]
   3dcbc:	mov	x19, x0
   3dcc0:	add	x2, sp, #0x28
   3dcc4:	add	x1, sp, #0x30
   3dcc8:	add	x0, sp, #0x38
   3dccc:	bl	bc50 <__gmp_get_memory_functions@plt>
   3dcd0:	mov	x0, x19
   3dcd4:	ldr	x1, [sp, #56]
   3dcd8:	blr	x1
   3dcdc:	ldr	x19, [sp, #16]
   3dce0:	ldp	x29, x30, [sp], #64
   3dce4:	ret

000000000003dce8 <mpfr_reallocate_func@@Base>:
   3dce8:	stp	x29, x30, [sp, #-80]!
   3dcec:	mov	x29, sp
   3dcf0:	stp	x19, x20, [sp, #16]
   3dcf4:	str	x21, [sp, #32]
   3dcf8:	mov	x19, x0
   3dcfc:	mov	x20, x1
   3dd00:	mov	x21, x2
   3dd04:	add	x2, sp, #0x38
   3dd08:	add	x1, sp, #0x40
   3dd0c:	add	x0, sp, #0x48
   3dd10:	bl	bc50 <__gmp_get_memory_functions@plt>
   3dd14:	mov	x2, x21
   3dd18:	mov	x1, x20
   3dd1c:	mov	x0, x19
   3dd20:	ldr	x3, [sp, #64]
   3dd24:	blr	x3
   3dd28:	ldp	x19, x20, [sp, #16]
   3dd2c:	ldr	x21, [sp, #32]
   3dd30:	ldp	x29, x30, [sp], #80
   3dd34:	ret

000000000003dd38 <mpfr_free_func@@Base>:
   3dd38:	stp	x29, x30, [sp, #-64]!
   3dd3c:	mov	x29, sp
   3dd40:	stp	x19, x20, [sp, #16]
   3dd44:	mov	x19, x0
   3dd48:	mov	x20, x1
   3dd4c:	add	x2, sp, #0x28
   3dd50:	add	x1, sp, #0x30
   3dd54:	add	x0, sp, #0x38
   3dd58:	bl	bc50 <__gmp_get_memory_functions@plt>
   3dd5c:	mov	x1, x20
   3dd60:	mov	x0, x19
   3dd64:	ldr	x2, [sp, #40]
   3dd68:	blr	x2
   3dd6c:	ldp	x19, x20, [sp, #16]
   3dd70:	ldp	x29, x30, [sp], #64
   3dd74:	ret

000000000003dd78 <mpfr_tmp_allocate@@Base>:
   3dd78:	stp	x29, x30, [sp, #-48]!
   3dd7c:	mov	x29, sp
   3dd80:	stp	x19, x20, [sp, #16]
   3dd84:	str	x21, [sp, #32]
   3dd88:	mov	x20, x0
   3dd8c:	mov	x21, x1
   3dd90:	mov	x0, #0x18                  	// #24
   3dd94:	bl	ccf0 <mpfr_allocate_func@plt>
   3dd98:	mov	x19, x0
   3dd9c:	mov	x0, x21
   3dda0:	bl	ccf0 <mpfr_allocate_func@plt>
   3dda4:	str	x0, [x19]
   3dda8:	str	x21, [x19, #8]
   3ddac:	ldr	x0, [x20]
   3ddb0:	str	x0, [x19, #16]
   3ddb4:	str	x19, [x20]
   3ddb8:	ldr	x0, [x19]
   3ddbc:	ldp	x19, x20, [sp, #16]
   3ddc0:	ldr	x21, [sp, #32]
   3ddc4:	ldp	x29, x30, [sp], #48
   3ddc8:	ret

000000000003ddcc <mpfr_tmp_free@@Base>:
   3ddcc:	cbz	x0, 3de10 <mpfr_tmp_free@@Base+0x44>
   3ddd0:	stp	x29, x30, [sp, #-32]!
   3ddd4:	mov	x29, sp
   3ddd8:	stp	x19, x20, [sp, #16]
   3dddc:	mov	x19, x0
   3dde0:	mov	x20, #0x18                  	// #24
   3dde4:	ldr	x1, [x19, #8]
   3dde8:	ldr	x0, [x19]
   3ddec:	bl	cc20 <mpfr_free_func@plt>
   3ddf0:	mov	x0, x19
   3ddf4:	ldr	x19, [x19, #16]
   3ddf8:	mov	x1, x20
   3ddfc:	bl	cc20 <mpfr_free_func@plt>
   3de00:	cbnz	x19, 3dde4 <mpfr_tmp_free@@Base+0x18>
   3de04:	ldp	x19, x20, [sp, #16]
   3de08:	ldp	x29, x30, [sp], #32
   3de0c:	ret
   3de10:	ret
   3de14:	stp	x29, x30, [sp, #-208]!
   3de18:	mov	x29, sp
   3de1c:	stp	x19, x20, [sp, #16]
   3de20:	stp	x21, x22, [sp, #32]
   3de24:	stp	x23, x24, [sp, #48]
   3de28:	stp	x25, x26, [sp, #64]
   3de2c:	stp	x27, x28, [sp, #80]
   3de30:	mov	x26, x0
   3de34:	str	x1, [sp, #120]
   3de38:	str	x2, [sp, #176]
   3de3c:	mov	x23, x3
   3de40:	mov	x27, x4
   3de44:	mov	x28, x5
   3de48:	str	x6, [sp, #112]
   3de4c:	str	x7, [sp, #144]
   3de50:	ldr	w0, [sp, #216]
   3de54:	sxtw	x3, w0
   3de58:	str	x3, [sp, #168]
   3de5c:	str	x1, [sp, #200]
   3de60:	sub	x1, x1, #0x1
   3de64:	str	x1, [sp, #160]
   3de68:	add	x1, x26, x1, lsl #3
   3de6c:	str	x1, [sp, #152]
   3de70:	add	w0, w0, #0x1
   3de74:	sub	x0, x2, w0, sxtw
   3de78:	str	x0, [sp, #184]
   3de7c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3de80:	add	x0, x0, x1
   3de84:	str	x0, [sp, #192]
   3de88:	b	3e32c <mpfr_tmp_free@@Base+0x560>
   3de8c:	cmp	x0, x28
   3de90:	b.gt	3df50 <mpfr_tmp_free@@Base+0x184>
   3de94:	ldr	x1, [sp, #96]
   3de98:	cmp	x0, x1
   3de9c:	csel	x0, x1, x0, le
   3dea0:	str	x0, [sp, #96]
   3dea4:	add	x20, x20, #0x1
   3dea8:	cmp	x27, x20
   3deac:	b.eq	3e158 <mpfr_tmp_free@@Base+0x38c>  // b.none
   3deb0:	ldr	x1, [x23, x20, lsl #3]
   3deb4:	ldr	x0, [x1, #16]
   3deb8:	cmp	x0, x24
   3debc:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3dec0:	ldr	x2, [x1]
   3dec4:	ldr	x26, [x1, #24]
   3dec8:	add	x19, x2, #0x3e
   3decc:	subs	x1, x2, #0x1
   3ded0:	csel	x19, x19, x1, mi  // mi = first
   3ded4:	asr	x19, x19, #6
   3ded8:	add	x19, x19, #0x1
   3dedc:	sub	x1, x0, x19, lsl #6
   3dee0:	subs	x3, x1, x28
   3dee4:	b.mi	3de8c <mpfr_tmp_free@@Base+0xc0>  // b.first
   3dee8:	add	x22, x3, #0x3f
   3deec:	cmp	x3, #0x0
   3def0:	csel	x22, x22, x3, lt  // lt = tstop
   3def4:	asr	x22, x22, #6
   3def8:	ldr	x1, [sp, #120]
   3defc:	sub	x25, x1, x22
   3df00:	cmp	x25, #0x0
   3df04:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3df08:	ldr	x1, [sp, #104]
   3df0c:	add	x22, x1, x22, lsl #3
   3df10:	ldr	x1, [sp, #112]
   3df14:	cmp	x0, x1
   3df18:	b.le	3e02c <mpfr_tmp_free@@Base+0x260>
   3df1c:	subs	x0, x0, x1
   3df20:	add	x1, x0, #0x3f
   3df24:	csel	x1, x1, x0, mi  // mi = first
   3df28:	sub	x19, x19, x1, asr #6
   3df2c:	cmp	x19, #0x0
   3df30:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3df34:	negs	x1, x0
   3df38:	and	x0, x0, #0x3f
   3df3c:	and	x1, x1, #0x3f
   3df40:	csneg	x0, x0, x1, mi  // mi = first
   3df44:	mov	w21, w0
   3df48:	str	w0, [sp, #132]
   3df4c:	b	3e034 <mpfr_tmp_free@@Base+0x268>
   3df50:	sub	x2, x0, x2
   3df54:	cmp	x2, x28
   3df58:	ldr	x2, [sp, #96]
   3df5c:	csel	x2, x2, x28, ge  // ge = tcont
   3df60:	str	x2, [sp, #96]
   3df64:	subs	x1, x28, x1
   3df68:	add	x2, x1, #0x3f
   3df6c:	csel	x2, x2, x1, mi  // mi = first
   3df70:	asr	x2, x2, #6
   3df74:	sub	x19, x19, x2
   3df78:	add	x26, x26, x2, lsl #3
   3df7c:	negs	x22, x1
   3df80:	and	x2, x1, #0x3f
   3df84:	and	x22, x22, #0x3f
   3df88:	csneg	x22, x2, x22, mi  // mi = first
   3df8c:	mov	w21, #0x0                   	// #0
   3df90:	ldr	x2, [sp, #112]
   3df94:	cmp	x0, x2
   3df98:	b.le	3dfbc <mpfr_tmp_free@@Base+0x1f0>
   3df9c:	subs	x0, x0, x2
   3dfa0:	add	x2, x0, #0x3f
   3dfa4:	csel	x2, x2, x0, mi  // mi = first
   3dfa8:	sub	x19, x19, x2, asr #6
   3dfac:	negs	x21, x0
   3dfb0:	and	x0, x0, #0x3f
   3dfb4:	and	x21, x21, #0x3f
   3dfb8:	csneg	x21, x0, x21, mi  // mi = first
   3dfbc:	tst	x1, #0x3f
   3dfc0:	b.eq	3e10c <mpfr_tmp_free@@Base+0x340>  // b.none
   3dfc4:	mov	w3, w22
   3dfc8:	mov	x2, x19
   3dfcc:	mov	x1, x26
   3dfd0:	ldr	x0, [sp, #144]
   3dfd4:	bl	bce0 <__gmpn_rshift@plt>
   3dfd8:	add	w21, w21, w22
   3dfdc:	cmp	w21, #0x3f
   3dfe0:	b.le	3dfec <mpfr_tmp_free@@Base+0x220>
   3dfe4:	sub	x19, x19, #0x1
   3dfe8:	sub	w21, w21, #0x40
   3dfec:	cbz	w21, 3e118 <mpfr_tmp_free@@Base+0x34c>
   3dff0:	lsl	x1, x19, #3
   3dff4:	sub	x1, x1, #0x8
   3dff8:	mov	w0, #0x40                  	// #64
   3dffc:	sub	w0, w0, w21
   3e000:	mov	x2, #0xffffffffffffffff    	// #-1
   3e004:	lsl	x0, x2, x0
   3e008:	ldr	x3, [sp, #144]
   3e00c:	ldr	x2, [x3, x1]
   3e010:	bic	x0, x2, x0
   3e014:	str	x0, [x3, x1]
   3e018:	ldr	x25, [sp, #136]
   3e01c:	mov	x26, x3
   3e020:	ldr	x22, [sp, #104]
   3e024:	mov	w21, #0x0                   	// #0
   3e028:	b	3e070 <mpfr_tmp_free@@Base+0x2a4>
   3e02c:	mov	w21, #0x0                   	// #0
   3e030:	str	wzr, [sp, #132]
   3e034:	tst	x3, #0x3f
   3e038:	b.eq	3e070 <mpfr_tmp_free@@Base+0x2a4>  // b.none
   3e03c:	negs	x21, x3
   3e040:	and	x3, x3, #0x3f
   3e044:	and	x21, x21, #0x3f
   3e048:	csneg	x21, x3, x21, mi  // mi = first
   3e04c:	mov	w3, w21
   3e050:	mov	x2, x19
   3e054:	mov	x1, x26
   3e058:	ldr	x26, [sp, #144]
   3e05c:	mov	x0, x26
   3e060:	bl	bcc0 <__gmpn_lshift@plt>
   3e064:	ldr	w2, [sp, #132]
   3e068:	subs	w21, w2, w21
   3e06c:	b.mi	3e0fc <mpfr_tmp_free@@Base+0x330>  // b.first
   3e070:	cbz	w21, 3e370 <mpfr_tmp_free@@Base+0x5a4>
   3e074:	sub	x19, x19, #0x1
   3e078:	ldr	x0, [x23, x20, lsl #3]
   3e07c:	ldr	w0, [x0, #8]
   3e080:	cmp	w0, #0x0
   3e084:	b.le	3e380 <mpfr_tmp_free@@Base+0x5b4>
   3e088:	mov	x0, #0x0                   	// #0
   3e08c:	cmp	x19, #0x0
   3e090:	b.gt	3e128 <mpfr_tmp_free@@Base+0x35c>
   3e094:	cbz	w21, 3e0b4 <mpfr_tmp_free@@Base+0x2e8>
   3e098:	mov	w1, #0x40                  	// #64
   3e09c:	sub	w1, w1, w21
   3e0a0:	mov	x2, #0xffffffffffffffff    	// #-1
   3e0a4:	lsl	x1, x2, x1
   3e0a8:	ldr	x2, [x26, x19, lsl #3]
   3e0ac:	bic	x1, x2, x1
   3e0b0:	add	x0, x0, x1
   3e0b4:	cmp	x19, x25
   3e0b8:	b.ge	3dea4 <mpfr_tmp_free@@Base+0xd8>  // b.tcont
   3e0bc:	add	x2, x22, x19, lsl #3
   3e0c0:	ldr	x1, [x22, x19, lsl #3]
   3e0c4:	add	x1, x0, x1
   3e0c8:	str	x1, [x22, x19, lsl #3]
   3e0cc:	cmp	x0, x1
   3e0d0:	b.ls	3dea4 <mpfr_tmp_free@@Base+0xd8>  // b.plast
   3e0d4:	mov	x0, #0x1                   	// #1
   3e0d8:	sub	x19, x25, x19
   3e0dc:	cmp	x19, x0
   3e0e0:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3e0e4:	ldr	x1, [x2, x0, lsl #3]
   3e0e8:	add	x1, x1, #0x1
   3e0ec:	str	x1, [x2, x0, lsl #3]
   3e0f0:	add	x0, x0, #0x1
   3e0f4:	cbz	x1, 3e0dc <mpfr_tmp_free@@Base+0x310>
   3e0f8:	b	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3e0fc:	add	w21, w21, #0x40
   3e100:	str	x0, [x26, x19, lsl #3]
   3e104:	add	x19, x19, #0x1
   3e108:	b	3e070 <mpfr_tmp_free@@Base+0x2a4>
   3e10c:	ldr	x25, [sp, #136]
   3e110:	ldr	x22, [sp, #104]
   3e114:	b	3e070 <mpfr_tmp_free@@Base+0x2a4>
   3e118:	ldr	x25, [sp, #136]
   3e11c:	ldr	x26, [sp, #144]
   3e120:	ldr	x22, [sp, #104]
   3e124:	b	3e070 <mpfr_tmp_free@@Base+0x2a4>
   3e128:	mov	x3, x19
   3e12c:	mov	x2, x26
   3e130:	mov	x1, x22
   3e134:	mov	x0, x22
   3e138:	bl	c5a0 <__gmpn_add_n@plt>
   3e13c:	b	3e094 <mpfr_tmp_free@@Base+0x2c8>
   3e140:	mov	x3, x19
   3e144:	mov	x2, x26
   3e148:	mov	x1, x22
   3e14c:	mov	x0, x22
   3e150:	bl	be60 <__gmpn_sub_n@plt>
   3e154:	b	3e38c <mpfr_tmp_free@@Base+0x5c0>
   3e158:	ldr	x26, [sp, #104]
   3e15c:	ldr	x0, [sp, #152]
   3e160:	ldr	x3, [x0]
   3e164:	asr	x3, x3, #63
   3e168:	ldr	x1, [sp, #160]
   3e16c:	mov	x0, #0x0                   	// #0
   3e170:	ldr	x2, [x26, x1, lsl #3]
   3e174:	cmp	x3, x2
   3e178:	b.ne	3e198 <mpfr_tmp_free@@Base+0x3cc>  // b.any
   3e17c:	add	x0, x0, #0x40
   3e180:	subs	x1, x1, #0x1
   3e184:	b.pl	3e170 <mpfr_tmp_free@@Base+0x3a4>  // b.nfrst
   3e188:	b	3e1a4 <mpfr_tmp_free@@Base+0x3d8>
   3e18c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3e190:	str	x0, [sp, #96]
   3e194:	b	3e15c <mpfr_tmp_free@@Base+0x390>
   3e198:	eor	x2, x3, x2
   3e19c:	clz	x2, x2
   3e1a0:	add	x0, x0, x2
   3e1a4:	cmp	x1, #0x0
   3e1a8:	ccmp	x3, #0x0, #0x0, lt  // lt = tstop
   3e1ac:	b.eq	3e2fc <mpfr_tmp_free@@Base+0x530>  // b.none
   3e1b0:	ldr	x1, [sp, #176]
   3e1b4:	add	x19, x1, x28
   3e1b8:	sub	x19, x19, x0
   3e1bc:	ldr	x2, [sp, #168]
   3e1c0:	ldr	x1, [sp, #96]
   3e1c4:	add	x2, x2, x1
   3e1c8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   3e1cc:	cmp	x1, x3
   3e1d0:	b.eq	3e258 <mpfr_tmp_free@@Base+0x48c>  // b.none
   3e1d4:	cmp	x19, x2
   3e1d8:	b.lt	3e1ec <mpfr_tmp_free@@Base+0x420>  // b.tstop
   3e1dc:	sub	x1, x19, x2
   3e1e0:	ldr	x3, [sp, #224]
   3e1e4:	cmp	x1, x3
   3e1e8:	b.cs	3e258 <mpfr_tmp_free@@Base+0x48c>  // b.hs, b.nlast
   3e1ec:	sub	x0, x0, #0x2
   3e1f0:	subs	x19, x2, x19
   3e1f4:	csel	x19, x19, xzr, pl  // pl = nfrst
   3e1f8:	subs	x19, x0, x19
   3e1fc:	add	x20, x19, #0x3f
   3e200:	csel	x20, x20, x19, mi  // mi = first
   3e204:	asr	x20, x20, #6
   3e208:	negs	x3, x19
   3e20c:	and	x0, x19, #0x3f
   3e210:	and	x3, x3, #0x3f
   3e214:	csneg	x3, x0, x3, mi  // mi = first
   3e218:	cbz	w3, 3e2cc <mpfr_tmp_free@@Base+0x500>
   3e21c:	ldr	x0, [sp, #200]
   3e220:	sub	x2, x0, x20
   3e224:	mov	x1, x26
   3e228:	add	x0, x26, x20, lsl #3
   3e22c:	bl	bcc0 <__gmpn_lshift@plt>
   3e230:	lsl	x2, x20, #3
   3e234:	mov	w1, #0x0                   	// #0
   3e238:	mov	x0, x26
   3e23c:	bl	c110 <memset@plt>
   3e240:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3e244:	add	x0, x19, x0
   3e248:	cmp	x0, x28
   3e24c:	b.gt	3e2e4 <mpfr_tmp_free@@Base+0x518>
   3e250:	sub	x28, x28, x19
   3e254:	b	3e324 <mpfr_tmp_free@@Base+0x558>
   3e258:	mov	x1, x19
   3e25c:	ldr	x2, [sp, #248]
   3e260:	cmp	x2, #0x0
   3e264:	ldr	x2, [sp, #240]
   3e268:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3e26c:	ldr	x2, [sp, #232]
   3e270:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3e274:	b.ne	3e294 <mpfr_tmp_free@@Base+0x4c8>  // b.any
   3e278:	ldr	x2, [sp, #240]
   3e27c:	ldr	x3, [sp, #248]
   3e280:	orr	x2, x2, x3
   3e284:	ldr	x3, [sp, #232]
   3e288:	orr	x2, x3, x2
   3e28c:	cbz	x2, 3e2b0 <mpfr_tmp_free@@Base+0x4e4>
   3e290:	cbz	x3, 3e2b0 <mpfr_tmp_free@@Base+0x4e4>
   3e294:	ldr	x2, [sp, #232]
   3e298:	str	x1, [x2]
   3e29c:	ldr	x1, [sp, #240]
   3e2a0:	str	x28, [x1]
   3e2a4:	ldr	x1, [sp, #248]
   3e2a8:	ldr	x2, [sp, #96]
   3e2ac:	str	x2, [x1]
   3e2b0:	ldp	x19, x20, [sp, #16]
   3e2b4:	ldp	x21, x22, [sp, #32]
   3e2b8:	ldp	x23, x24, [sp, #48]
   3e2bc:	ldp	x25, x26, [sp, #64]
   3e2c0:	ldp	x27, x28, [sp, #80]
   3e2c4:	ldp	x29, x30, [sp], #208
   3e2c8:	ret
   3e2cc:	ldr	x0, [sp, #200]
   3e2d0:	sub	x2, x0, x20
   3e2d4:	mov	x1, x26
   3e2d8:	add	x0, x26, x20, lsl #3
   3e2dc:	bl	bae0 <__gmpn_copyd@plt>
   3e2e0:	b	3e230 <mpfr_tmp_free@@Base+0x464>
   3e2e4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e2e8:	add	x2, x2, #0xf08
   3e2ec:	mov	w1, #0x1f3                 	// #499
   3e2f0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e2f4:	add	x0, x0, #0xf38
   3e2f8:	bl	cb40 <mpfr_assert_fail@plt>
   3e2fc:	ldr	x0, [sp, #96]
   3e300:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3e304:	cmp	x0, x1
   3e308:	b.eq	3e368 <mpfr_tmp_free@@Base+0x59c>  // b.none
   3e30c:	ldr	x1, [sp, #192]
   3e310:	cmp	x1, x0
   3e314:	b.gt	3e350 <mpfr_tmp_free@@Base+0x584>
   3e318:	ldr	x0, [sp, #96]
   3e31c:	ldr	x1, [sp, #184]
   3e320:	sub	x28, x0, x1
   3e324:	ldr	x0, [sp, #96]
   3e328:	str	x0, [sp, #112]
   3e32c:	cbz	x27, 3e18c <mpfr_tmp_free@@Base+0x3c0>
   3e330:	mov	x20, #0x0                   	// #0
   3e334:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3e338:	str	x0, [sp, #96]
   3e33c:	mov	x24, #0x8000000000000003    	// #-9223372036854775805
   3e340:	ldr	x0, [sp, #120]
   3e344:	str	x0, [sp, #136]
   3e348:	str	x26, [sp, #104]
   3e34c:	b	3deb0 <mpfr_tmp_free@@Base+0xe4>
   3e350:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e354:	add	x2, x2, #0xf40
   3e358:	mov	w1, #0x200                 	// #512
   3e35c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e360:	add	x0, x0, #0xf38
   3e364:	bl	cb40 <mpfr_assert_fail@plt>
   3e368:	mov	x0, #0x0                   	// #0
   3e36c:	b	3e2b0 <mpfr_tmp_free@@Base+0x4e4>
   3e370:	ldr	x0, [x23, x20, lsl #3]
   3e374:	ldr	w0, [x0, #8]
   3e378:	cmp	w0, #0x0
   3e37c:	b.gt	3e128 <mpfr_tmp_free@@Base+0x35c>
   3e380:	mov	x0, #0x0                   	// #0
   3e384:	cmp	x19, #0x0
   3e388:	b.gt	3e140 <mpfr_tmp_free@@Base+0x374>
   3e38c:	cbz	w21, 3e3ac <mpfr_tmp_free@@Base+0x5e0>
   3e390:	mov	w1, #0x40                  	// #64
   3e394:	sub	w1, w1, w21
   3e398:	mov	x2, #0xffffffffffffffff    	// #-1
   3e39c:	lsl	x1, x2, x1
   3e3a0:	ldr	x2, [x26, x19, lsl #3]
   3e3a4:	bic	x1, x2, x1
   3e3a8:	add	x0, x0, x1
   3e3ac:	cmp	x25, x19
   3e3b0:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3e3b4:	add	x2, x22, x19, lsl #3
   3e3b8:	ldr	x1, [x22, x19, lsl #3]
   3e3bc:	sub	x3, x1, x0
   3e3c0:	str	x3, [x22, x19, lsl #3]
   3e3c4:	cmp	x0, x1
   3e3c8:	b.ls	3dea4 <mpfr_tmp_free@@Base+0xd8>  // b.plast
   3e3cc:	mov	x0, #0x1                   	// #1
   3e3d0:	sub	x19, x25, x19
   3e3d4:	cmp	x19, x0
   3e3d8:	b.le	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3e3dc:	ldr	x1, [x2, x0, lsl #3]
   3e3e0:	sub	x3, x1, #0x1
   3e3e4:	str	x3, [x2, x0, lsl #3]
   3e3e8:	add	x0, x0, #0x1
   3e3ec:	cbz	x1, 3e3d4 <mpfr_tmp_free@@Base+0x608>
   3e3f0:	b	3dea4 <mpfr_tmp_free@@Base+0xd8>
   3e3f4:	stp	x29, x30, [sp, #-240]!
   3e3f8:	mov	x29, sp
   3e3fc:	stp	x19, x20, [sp, #16]
   3e400:	stp	x21, x22, [sp, #32]
   3e404:	stp	x23, x24, [sp, #48]
   3e408:	stp	x25, x26, [sp, #64]
   3e40c:	stp	x27, x28, [sp, #80]
   3e410:	sub	sp, sp, #0x30
   3e414:	str	x1, [x29, #176]
   3e418:	str	x2, [x29, #168]
   3e41c:	str	x4, [x29, #200]
   3e420:	ldr	x26, [x0, #24]
   3e424:	cmp	x5, #0x1
   3e428:	b.ls	3e680 <mpfr_tmp_free@@Base+0x8b4>  // b.plast
   3e42c:	mov	x24, x0
   3e430:	mov	w27, w3
   3e434:	sub	x5, x5, #0x1
   3e438:	clz	x0, x5
   3e43c:	mov	w1, #0x40                  	// #64
   3e440:	sub	w1, w1, w0
   3e444:	str	w1, [x29, #184]
   3e448:	ldr	x22, [x24]
   3e44c:	mov	w25, #0x41                  	// #65
   3e450:	sub	w25, w25, w0
   3e454:	sxtw	x25, w25
   3e458:	sxtw	x0, w1
   3e45c:	mov	x1, x0
   3e460:	str	x0, [x29, #128]
   3e464:	add	x0, x22, x25
   3e468:	add	x0, x0, x1
   3e46c:	add	x19, x0, #0x40
   3e470:	adds	x0, x0, #0x1
   3e474:	csel	x0, x19, x0, mi  // mi = first
   3e478:	asr	x19, x0, #6
   3e47c:	add	x19, x19, #0x1
   3e480:	lsl	x28, x19, #6
   3e484:	sub	x23, x28, x25
   3e488:	sub	x0, x28, x22
   3e48c:	add	x1, x0, #0x3e
   3e490:	subs	x0, x0, #0x1
   3e494:	csel	x0, x1, x0, mi  // mi = first
   3e498:	asr	x0, x0, #6
   3e49c:	str	x0, [x29, #112]
   3e4a0:	add	x2, x0, #0x1
   3e4a4:	str	x2, [x29, #136]
   3e4a8:	add	x21, x23, #0x7d
   3e4ac:	adds	x0, x23, #0x3e
   3e4b0:	csel	x21, x21, x0, mi  // mi = first
   3e4b4:	asr	x21, x21, #6
   3e4b8:	add	x21, x21, #0x1
   3e4bc:	str	xzr, [x29, #232]
   3e4c0:	add	x1, x19, x21
   3e4c4:	add	x1, x1, x2
   3e4c8:	lsl	x1, x1, #3
   3e4cc:	cmp	x1, #0x4, lsl #12
   3e4d0:	b.hi	3e698 <mpfr_tmp_free@@Base+0x8cc>  // b.pmore
   3e4d4:	add	x1, x1, #0xf
   3e4d8:	and	x1, x1, #0xfffffffffffffff0
   3e4dc:	sub	sp, sp, x1
   3e4e0:	add	x0, sp, #0x30
   3e4e4:	str	x0, [x29, #192]
   3e4e8:	ldr	x0, [x29, #192]
   3e4ec:	add	x20, x0, x21, lsl #3
   3e4f0:	lsl	x0, x19, #3
   3e4f4:	str	x0, [x29, #160]
   3e4f8:	mov	x2, x0
   3e4fc:	mov	w1, #0x0                   	// #0
   3e500:	mov	x0, x20
   3e504:	bl	c110 <memset@plt>
   3e508:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3e50c:	add	x0, x23, x0
   3e510:	ldr	x1, [x29, #200]
   3e514:	cmp	x0, x1
   3e518:	b.gt	3e6a8 <mpfr_tmp_free@@Base+0x8dc>
   3e51c:	ldr	x6, [x29, #200]
   3e520:	sub	x5, x6, x23
   3e524:	str	x5, [x29, #216]
   3e528:	add	x0, x29, #0xc8
   3e52c:	str	x0, [sp, #40]
   3e530:	add	x0, x29, #0xd8
   3e534:	str	x0, [sp, #32]
   3e538:	add	x0, x29, #0xe0
   3e53c:	str	x0, [sp, #24]
   3e540:	add	x0, x22, #0x3
   3e544:	str	x0, [sp, #16]
   3e548:	ldr	w0, [x29, #184]
   3e54c:	str	w0, [sp, #8]
   3e550:	str	x21, [sp]
   3e554:	ldr	x7, [x29, #192]
   3e558:	ldr	x4, [x29, #168]
   3e55c:	ldr	x3, [x29, #176]
   3e560:	mov	x2, x28
   3e564:	mov	x1, x19
   3e568:	mov	x0, x20
   3e56c:	bl	3de14 <mpfr_tmp_free@@Base+0x48>
   3e570:	mov	x23, x0
   3e574:	cbz	x0, 3e6c4 <mpfr_tmp_free@@Base+0x8f8>
   3e578:	ldr	x19, [x29, #224]
   3e57c:	sub	x19, x19, x22
   3e580:	ldr	x0, [x29, #160]
   3e584:	add	x0, x20, x0
   3e588:	ldur	x1, [x0, #-8]
   3e58c:	lsr	x0, x1, #63
   3e590:	str	x0, [x29, #152]
   3e594:	mov	w0, #0x1                   	// #1
   3e598:	cmp	x1, #0x0
   3e59c:	cneg	w0, w0, lt  // lt = tstop
   3e5a0:	str	w0, [x29, #188]
   3e5a4:	cmp	w27, #0x5
   3e5a8:	b.eq	3e6f4 <mpfr_tmp_free@@Base+0x928>  // b.none
   3e5ac:	ldr	x5, [x29, #216]
   3e5b0:	cmp	x5, x19
   3e5b4:	b.ge	3ea78 <mpfr_tmp_free@@Base+0xcac>  // b.tcont
   3e5b8:	subs	x3, x19, x5
   3e5bc:	add	x0, x3, #0x3f
   3e5c0:	csel	x0, x0, x3, mi  // mi = first
   3e5c4:	asr	x0, x0, #6
   3e5c8:	negs	x1, x3
   3e5cc:	and	x2, x3, #0x3f
   3e5d0:	and	x1, x1, #0x3f
   3e5d4:	csneg	x1, x2, x1, mi  // mi = first
   3e5d8:	mov	w6, w1
   3e5dc:	lsl	x7, x0, #3
   3e5e0:	ldr	x2, [x20, x0, lsl #3]
   3e5e4:	lsr	x4, x2, x1
   3e5e8:	and	x4, x4, #0x1
   3e5ec:	str	x4, [x29, #104]
   3e5f0:	cmp	w1, #0x0
   3e5f4:	b.le	3e75c <mpfr_tmp_free@@Base+0x990>
   3e5f8:	sub	w4, w1, #0x1
   3e5fc:	lsr	x4, x2, x4
   3e600:	and	x4, x4, #0x1
   3e604:	str	x4, [x29, #144]
   3e608:	ldr	x4, [x29, #200]
   3e60c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3e610:	cmp	x4, x8
   3e614:	b.eq	3e770 <mpfr_tmp_free@@Base+0x9a4>  // b.none
   3e618:	ldr	x8, [x29, #128]
   3e61c:	add	x4, x8, x4
   3e620:	sub	x4, x19, x4
   3e624:	cbnz	w1, 3e840 <mpfr_tmp_free@@Base+0xa74>
   3e628:	sub	x0, x0, #0x1
   3e62c:	add	x7, x20, x7
   3e630:	ldur	x2, [x7, #-8]
   3e634:	mov	w6, #0x40                  	// #64
   3e638:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
   3e63c:	sxtw	x7, w6
   3e640:	sub	x1, x4, x7
   3e644:	cmp	x7, x4
   3e648:	b.le	3e65c <mpfr_tmp_free@@Base+0x890>
   3e64c:	sub	w4, w6, w4
   3e650:	lsr	x2, x2, x4
   3e654:	lsr	x3, x3, x4
   3e658:	mov	x1, #0x0                   	// #0
   3e65c:	ands	x2, x2, x3
   3e660:	b.ne	3e88c <mpfr_tmp_free@@Base+0xac0>  // b.any
   3e664:	ldr	x3, [x29, #144]
   3e668:	cbz	x3, 3e8b4 <mpfr_tmp_free@@Base+0xae8>
   3e66c:	mov	w28, #0x1                   	// #1
   3e670:	cbnz	w27, 3e94c <mpfr_tmp_free@@Base+0xb80>
   3e674:	mov	w3, #0x2                   	// #2
   3e678:	str	w3, [x29, #124]
   3e67c:	b	3e8c0 <mpfr_tmp_free@@Base+0xaf4>
   3e680:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e684:	add	x2, x2, #0xf70
   3e688:	mov	w1, #0x22f                 	// #559
   3e68c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e690:	add	x0, x0, #0xf38
   3e694:	bl	cb40 <mpfr_assert_fail@plt>
   3e698:	add	x0, x29, #0xe8
   3e69c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3e6a0:	str	x0, [x29, #192]
   3e6a4:	b	3e4e8 <mpfr_tmp_free@@Base+0x71c>
   3e6a8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e6ac:	add	x2, x2, #0xf80
   3e6b0:	mov	w1, #0x278                 	// #632
   3e6b4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e6b8:	add	x0, x0, #0xf38
   3e6bc:	bl	cb40 <mpfr_assert_fail@plt>
   3e6c0:	b	3e51c <mpfr_tmp_free@@Base+0x750>
   3e6c4:	mov	w0, #0xffffffff            	// #-1
   3e6c8:	cmp	w27, #0x3
   3e6cc:	cneg	w0, w0, ne  // ne = any
   3e6d0:	str	w0, [x24, #8]
   3e6d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3e6d8:	str	x0, [x24, #16]
   3e6dc:	ldr	x0, [x29, #232]
   3e6e0:	cbnz	x0, 3e6ec <mpfr_tmp_free@@Base+0x920>
   3e6e4:	mov	w28, #0x0                   	// #0
   3e6e8:	b	3f1fc <mpfr_tmp_free@@Base+0x1430>
   3e6ec:	bl	c410 <mpfr_tmp_free@plt>
   3e6f0:	b	3e6e4 <mpfr_tmp_free@@Base+0x918>
   3e6f4:	ldr	x0, [x29, #216]
   3e6f8:	cmp	x0, x19
   3e6fc:	b.ge	3ee50 <mpfr_tmp_free@@Base+0x1084>  // b.tcont
   3e700:	subs	x0, x19, x0
   3e704:	add	x1, x0, #0x3f
   3e708:	csel	x1, x1, x0, mi  // mi = first
   3e70c:	asr	x2, x1, #6
   3e710:	negs	x1, x0
   3e714:	and	x0, x0, #0x3f
   3e718:	and	x1, x1, #0x3f
   3e71c:	csneg	x0, x0, x1, mi  // mi = first
   3e720:	cmp	w0, #0x0
   3e724:	b.le	3e744 <mpfr_tmp_free@@Base+0x978>
   3e728:	sub	w0, w0, #0x1
   3e72c:	ldr	x1, [x20, x2, lsl #3]
   3e730:	lsr	x0, x1, x0
   3e734:	and	w0, w0, #0x1
   3e738:	str	w0, [x29, #192]
   3e73c:	mov	w28, #0x0                   	// #0
   3e740:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3e744:	add	x1, x20, x2, lsl #3
   3e748:	ldur	x0, [x1, #-8]
   3e74c:	lsr	x0, x0, #63
   3e750:	str	x0, [x29, #192]
   3e754:	mov	w28, #0x0                   	// #0
   3e758:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3e75c:	add	x4, x20, x7
   3e760:	ldur	x4, [x4, #-8]
   3e764:	lsr	x4, x4, #63
   3e768:	str	x4, [x29, #144]
   3e76c:	b	3e608 <mpfr_tmp_free@@Base+0x83c>
   3e770:	ldr	x3, [x29, #144]
   3e774:	cbnz	x3, 3e800 <mpfr_tmp_free@@Base+0xa34>
   3e778:	cmp	w1, #0x1
   3e77c:	b.le	3e818 <mpfr_tmp_free@@Base+0xa4c>
   3e780:	sub	w1, w1, #0x1
   3e784:	mov	x3, #0xffffffffffffffff    	// #-1
   3e788:	lsl	x1, x3, x1
   3e78c:	bics	xzr, x2, x1
   3e790:	cset	w28, ne  // ne = any
   3e794:	cbnz	w28, 3e94c <mpfr_tmp_free@@Base+0xb80>
   3e798:	cmp	x0, #0x0
   3e79c:	b.le	3e834 <mpfr_tmp_free@@Base+0xa68>
   3e7a0:	sub	x0, x0, #0x1
   3e7a4:	ldr	x2, [x20, x0, lsl #3]
   3e7a8:	cmp	x2, #0x0
   3e7ac:	cset	w1, eq  // eq = none
   3e7b0:	cmp	x0, #0x0
   3e7b4:	ccmp	w1, #0x0, #0x4, gt
   3e7b8:	b.ne	3e7a0 <mpfr_tmp_free@@Base+0x9d4>  // b.any
   3e7bc:	cmp	x2, #0x0
   3e7c0:	cset	w28, ne  // ne = any
   3e7c4:	ldr	x0, [x29, #144]
   3e7c8:	cmp	x0, #0x0
   3e7cc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3e7d0:	b.eq	3e94c <mpfr_tmp_free@@Base+0xb80>  // b.none
   3e7d4:	str	xzr, [x29, #144]
   3e7d8:	mov	w28, #0x1                   	// #1
   3e7dc:	ldr	w0, [x29, #144]
   3e7e0:	str	w0, [x29, #192]
   3e7e4:	cbz	w27, 3e96c <mpfr_tmp_free@@Base+0xba0>
   3e7e8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e7ec:	add	x2, x2, #0xfb0
   3e7f0:	mov	w1, #0x390                 	// #912
   3e7f4:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3e7f8:	add	x0, x0, #0xf38
   3e7fc:	bl	cb40 <mpfr_assert_fail@plt>
   3e800:	cmp	w27, #0x0
   3e804:	ldr	x3, [x29, #104]
   3e808:	ccmp	x3, #0x0, #0x0, eq  // eq = none
   3e80c:	b.eq	3e778 <mpfr_tmp_free@@Base+0x9ac>  // b.none
   3e810:	mov	w28, #0x1                   	// #1
   3e814:	b	3e94c <mpfr_tmp_free@@Base+0xb80>
   3e818:	cbnz	w1, 3e798 <mpfr_tmp_free@@Base+0x9cc>
   3e81c:	sub	x0, x0, #0x1
   3e820:	add	x7, x20, x7
   3e824:	ldur	x1, [x7, #-8]
   3e828:	tst	x1, #0x7fffffffffffffff
   3e82c:	cset	w28, ne  // ne = any
   3e830:	b	3e794 <mpfr_tmp_free@@Base+0x9c8>
   3e834:	mov	w28, #0x0                   	// #0
   3e838:	mov	w1, #0x1                   	// #1
   3e83c:	b	3e7c4 <mpfr_tmp_free@@Base+0x9f8>
   3e840:	cmp	w1, #0x1
   3e844:	b.eq	3e85c <mpfr_tmp_free@@Base+0xa90>  // b.none
   3e848:	sub	w1, w1, #0x1
   3e84c:	mov	x3, #0x1                   	// #1
   3e850:	lsl	x1, x3, x1
   3e854:	sub	x3, x1, #0x1
   3e858:	b	3e63c <mpfr_tmp_free@@Base+0x870>
   3e85c:	cmp	x3, #0x3f
   3e860:	b.le	3e87c <mpfr_tmp_free@@Base+0xab0>
   3e864:	sub	x0, x0, #0x1
   3e868:	add	x7, x20, x7
   3e86c:	ldur	x2, [x7, #-8]
   3e870:	mov	w6, #0x41                  	// #65
   3e874:	mov	x3, #0xffffffffffffffff    	// #-1
   3e878:	b	3e63c <mpfr_tmp_free@@Base+0x870>
   3e87c:	mov	w6, #0x41                  	// #65
   3e880:	mov	x3, #0xffffffffffffffff    	// #-1
   3e884:	mov	x2, #0x0                   	// #0
   3e888:	b	3e63c <mpfr_tmp_free@@Base+0x870>
   3e88c:	mov	w28, #0x1                   	// #1
   3e890:	cmp	x3, x2
   3e894:	b.ne	3e94c <mpfr_tmp_free@@Base+0xb80>  // b.any
   3e898:	ldr	x2, [x29, #144]
   3e89c:	cbnz	x2, 3e904 <mpfr_tmp_free@@Base+0xb38>
   3e8a0:	cbnz	w27, 3f26c <mpfr_tmp_free@@Base+0x14a0>
   3e8a4:	mov	w2, #0x2                   	// #2
   3e8a8:	str	w2, [x29, #124]
   3e8ac:	mov	x2, #0xffffffffffffffff    	// #-1
   3e8b0:	b	3e8c0 <mpfr_tmp_free@@Base+0xaf4>
   3e8b4:	ldr	x2, [x29, #144]
   3e8b8:	mov	w3, #0x1                   	// #1
   3e8bc:	str	w3, [x29, #124]
   3e8c0:	ldr	w3, [x29, #124]
   3e8c4:	cmp	w3, #0x0
   3e8c8:	cset	w4, ne  // ne = any
   3e8cc:	cbz	x1, 3ea9c <mpfr_tmp_free@@Base+0xcd0>
   3e8d0:	cbz	x0, 3e914 <mpfr_tmp_free@@Base+0xb48>
   3e8d4:	sub	x0, x0, #0x1
   3e8d8:	ldr	x3, [x20, x0, lsl #3]
   3e8dc:	cmp	x1, #0x3f
   3e8e0:	b.gt	3e940 <mpfr_tmp_free@@Base+0xb74>
   3e8e4:	mov	w0, #0x40                  	// #64
   3e8e8:	sub	w1, w0, w1
   3e8ec:	lsr	x3, x3, x1
   3e8f0:	lsr	x2, x2, x1
   3e8f4:	mov	w28, #0x1                   	// #1
   3e8f8:	cmp	x3, x2
   3e8fc:	b.ne	3e94c <mpfr_tmp_free@@Base+0xb80>  // b.any
   3e900:	b	3ea9c <mpfr_tmp_free@@Base+0xcd0>
   3e904:	mov	w2, #0x1                   	// #1
   3e908:	str	w2, [x29, #124]
   3e90c:	mov	x2, #0xffffffffffffffff    	// #-1
   3e910:	b	3e8c0 <mpfr_tmp_free@@Base+0xaf4>
   3e914:	cbz	x2, 3ea9c <mpfr_tmp_free@@Base+0xcd0>
   3e918:	mov	w28, #0x1                   	// #1
   3e91c:	b	3e94c <mpfr_tmp_free@@Base+0xb80>
   3e920:	subs	x1, x1, #0x40
   3e924:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   3e928:	b.eq	3ea9c <mpfr_tmp_free@@Base+0xcd0>  // b.none
   3e92c:	cbz	x0, 3e914 <mpfr_tmp_free@@Base+0xb48>
   3e930:	sub	x0, x0, #0x1
   3e934:	ldr	x3, [x20, x0, lsl #3]
   3e938:	cmp	x1, #0x3f
   3e93c:	b.le	3e8e4 <mpfr_tmp_free@@Base+0xb18>
   3e940:	cmp	x3, x2
   3e944:	b.eq	3e920 <mpfr_tmp_free@@Base+0xb54>  // b.none
   3e948:	mov	w28, #0x1                   	// #1
   3e94c:	cmp	w27, #0x3
   3e950:	b.eq	3ec80 <mpfr_tmp_free@@Base+0xeb4>  // b.none
   3e954:	b.gt	3ec48 <mpfr_tmp_free@@Base+0xe7c>
   3e958:	cmp	w27, #0x1
   3e95c:	b.eq	3ec68 <mpfr_tmp_free@@Base+0xe9c>  // b.none
   3e960:	str	w28, [x29, #192]
   3e964:	cmp	w27, #0x2
   3e968:	b.ne	3e7dc <mpfr_tmp_free@@Base+0xa10>  // b.any
   3e96c:	cmp	w28, #0x0
   3e970:	ldr	w0, [x29, #192]
   3e974:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   3e978:	csinv	w28, w28, wzr, ne  // ne = any
   3e97c:	ldr	w0, [x29, #188]
   3e980:	str	w0, [x24, #8]
   3e984:	add	x21, x22, #0x3e
   3e988:	subs	x0, x22, #0x1
   3e98c:	csel	x21, x21, x0, mi  // mi = first
   3e990:	asr	x21, x21, #6
   3e994:	add	x25, x21, #0x1
   3e998:	lsl	w0, w25, #6
   3e99c:	sub	w0, w0, w22
   3e9a0:	str	w0, [x29, #188]
   3e9a4:	negs	x1, x23
   3e9a8:	and	x23, x23, #0x3f
   3e9ac:	and	x1, x1, #0x3f
   3e9b0:	csneg	x23, x23, x1, mi  // mi = first
   3e9b4:	ldr	x0, [x29, #216]
   3e9b8:	cmp	x0, x19
   3e9bc:	b.ge	3ee78 <mpfr_tmp_free@@Base+0x10ac>  // b.tcont
   3e9c0:	subs	x1, x19, x0
   3e9c4:	add	x19, x1, #0x3f
   3e9c8:	csel	x19, x19, x1, mi  // mi = first
   3e9cc:	asr	x19, x19, #6
   3e9d0:	cbz	w23, 3ee5c <mpfr_tmp_free@@Base+0x1090>
   3e9d4:	ldr	x1, [x29, #224]
   3e9d8:	subs	x0, x1, x0
   3e9dc:	add	x1, x0, #0x3f
   3e9e0:	csel	x1, x1, x0, mi  // mi = first
   3e9e4:	asr	x1, x1, #6
   3e9e8:	sub	x1, x1, x21
   3e9ec:	cmp	x19, x1
   3e9f0:	b.eq	3f23c <mpfr_tmp_free@@Base+0x1470>  // b.none
   3e9f4:	mov	w3, w23
   3e9f8:	mov	x2, x25
   3e9fc:	add	x1, x20, x1, lsl #3
   3ea00:	mov	x0, x26
   3ea04:	bl	bcc0 <__gmpn_lshift@plt>
   3ea08:	ldr	x0, [x20, x19, lsl #3]
   3ea0c:	neg	w23, w23
   3ea10:	lsr	x0, x0, x23
   3ea14:	ldr	x23, [x26]
   3ea18:	orr	x23, x23, x0
   3ea1c:	str	x23, [x26]
   3ea20:	cmp	x22, #0x1
   3ea24:	b.eq	3eef4 <mpfr_tmp_free@@Base+0x1128>  // b.none
   3ea28:	ldr	x0, [x29, #152]
   3ea2c:	cbz	x0, 3f060 <mpfr_tmp_free@@Base+0x1294>
   3ea30:	lsl	x0, x25, #3
   3ea34:	sub	x4, x0, #0x8
   3ea38:	ldr	w3, [x29, #192]
   3ea3c:	cmp	w3, #0x1
   3ea40:	b.le	3ef2c <mpfr_tmp_free@@Base+0x1160>
   3ea44:	mov	x0, #0x1                   	// #1
   3ea48:	ldrb	w1, [x29, #188]
   3ea4c:	lsl	x0, x0, x1
   3ea50:	ldr	x1, [x26]
   3ea54:	neg	x2, x0
   3ea58:	bic	x1, x2, x1
   3ea5c:	sub	x0, x1, x0
   3ea60:	str	x0, [x26]
   3ea64:	mov	x2, #0x1                   	// #1
   3ea68:	cbnz	x1, 3f024 <mpfr_tmp_free@@Base+0x1258>
   3ea6c:	add	x0, x26, #0x8
   3ea70:	mov	x2, #0x1                   	// #1
   3ea74:	b	3f004 <mpfr_tmp_free@@Base+0x1238>
   3ea78:	str	xzr, [x29, #104]
   3ea7c:	b.eq	3ec30 <mpfr_tmp_free@@Base+0xe64>  // b.none
   3ea80:	ldr	x1, [x29, #200]
   3ea84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ea88:	cmp	x1, x0
   3ea8c:	cset	w2, ne  // ne = any
   3ea90:	str	w2, [x29, #124]
   3ea94:	str	xzr, [x29, #144]
   3ea98:	b.eq	3ec40 <mpfr_tmp_free@@Base+0xe74>  // b.none
   3ea9c:	ldr	x1, [x29, #200]
   3eaa0:	ldr	x0, [x29, #160]
   3eaa4:	add	x28, x20, x0
   3eaa8:	ldr	x0, [x29, #136]
   3eaac:	lsl	x0, x0, #6
   3eab0:	str	x0, [x29, #160]
   3eab4:	ldr	x0, [x29, #128]
   3eab8:	add	x0, x0, x1
   3eabc:	cmp	x5, x0
   3eac0:	b.gt	3ecd0 <mpfr_tmp_free@@Base+0xf04>
   3eac4:	sub	x0, x0, x5
   3eac8:	add	x2, x0, #0x41
   3eacc:	adds	x0, x0, #0x2
   3ead0:	csel	x2, x2, x0, mi  // mi = first
   3ead4:	asr	x2, x2, #6
   3ead8:	negs	x1, x0
   3eadc:	and	x0, x0, #0x3f
   3eae0:	and	x1, x1, #0x3f
   3eae4:	csneg	x0, x0, x1, mi  // mi = first
   3eae8:	str	w0, [x29, #128]
   3eaec:	cbz	w0, 3ec88 <mpfr_tmp_free@@Base+0xebc>
   3eaf0:	mov	w1, #0x40                  	// #64
   3eaf4:	sub	w3, w1, w0
   3eaf8:	str	w3, [x29, #128]
   3eafc:	ldr	x0, [x29, #112]
   3eb00:	sub	x25, x0, x2
   3eb04:	add	x2, x2, #0x1
   3eb08:	mov	x1, x20
   3eb0c:	add	x0, x28, x25, lsl #3
   3eb10:	bl	bcc0 <__gmpn_lshift@plt>
   3eb14:	ldrsw	x0, [x29, #128]
   3eb18:	add	x0, x0, x25, lsl #6
   3eb1c:	mov	x1, x0
   3eb20:	str	x0, [x29, #128]
   3eb24:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3eb28:	add	x0, x1, x0
   3eb2c:	ldr	x1, [x29, #216]
   3eb30:	cmp	x0, x1
   3eb34:	b.gt	3ecb4 <mpfr_tmp_free@@Base+0xee8>
   3eb38:	ldr	x0, [x29, #216]
   3eb3c:	ldr	x1, [x29, #128]
   3eb40:	sub	x0, x0, x1
   3eb44:	str	x0, [x29, #128]
   3eb48:	lsl	x2, x25, #3
   3eb4c:	mov	w1, #0x0                   	// #0
   3eb50:	mov	x0, x28
   3eb54:	bl	c110 <memset@plt>
   3eb58:	str	xzr, [sp, #40]
   3eb5c:	str	xzr, [sp, #32]
   3eb60:	str	xzr, [sp, #24]
   3eb64:	mov	x0, #0x1                   	// #1
   3eb68:	str	x0, [sp, #16]
   3eb6c:	ldr	w0, [x29, #184]
   3eb70:	str	w0, [sp, #8]
   3eb74:	str	x21, [sp]
   3eb78:	ldr	x7, [x29, #192]
   3eb7c:	ldr	x6, [x29, #200]
   3eb80:	ldr	x5, [x29, #128]
   3eb84:	ldr	x4, [x29, #168]
   3eb88:	ldr	x3, [x29, #176]
   3eb8c:	ldr	x2, [x29, #160]
   3eb90:	ldr	x21, [x29, #136]
   3eb94:	mov	x1, x21
   3eb98:	mov	x0, x28
   3eb9c:	bl	3de14 <mpfr_tmp_free@@Base+0x48>
   3eba0:	cbz	x0, 3ed18 <mpfr_tmp_free@@Base+0xf4c>
   3eba4:	add	x28, x28, x21, lsl #3
   3eba8:	ldur	x1, [x28, #-8]
   3ebac:	mov	w0, #0xffffffff            	// #-1
   3ebb0:	cmn	x1, #0x1
   3ebb4:	cneg	w0, w0, gt
   3ebb8:	cmp	w27, #0x3
   3ebbc:	b.eq	3edc8 <mpfr_tmp_free@@Base+0xffc>  // b.none
   3ebc0:	cmp	w27, #0x1
   3ebc4:	cset	w1, eq  // eq = none
   3ebc8:	ldr	w2, [x29, #188]
   3ebcc:	cmp	w2, #0x0
   3ebd0:	cset	w2, gt
   3ebd4:	cmp	w1, #0x0
   3ebd8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   3ebdc:	b.eq	3ed44 <mpfr_tmp_free@@Base+0xf78>  // b.none
   3ebe0:	cmp	w0, #0x0
   3ebe4:	csetm	w28, ne  // ne = any
   3ebe8:	ldr	w1, [x29, #124]
   3ebec:	cmp	w1, #0x2
   3ebf0:	b.eq	3eddc <mpfr_tmp_free@@Base+0x1010>  // b.none
   3ebf4:	ldr	w1, [x29, #188]
   3ebf8:	cmp	w1, #0x0
   3ebfc:	ccmp	w27, #0x1, #0x0, gt
   3ec00:	b.ne	3ed94 <mpfr_tmp_free@@Base+0xfc8>  // b.any
   3ec04:	cmn	w0, #0x1
   3ec08:	b.eq	3ee04 <mpfr_tmp_free@@Base+0x1038>  // b.none
   3ec0c:	ldr	w1, [x29, #188]
   3ec10:	cmp	w1, #0x0
   3ec14:	ccmp	w27, #0x1, #0x0, lt  // lt = tstop
   3ec18:	b.eq	3edac <mpfr_tmp_free@@Base+0xfe0>  // b.none
   3ec1c:	ldr	w1, [x29, #188]
   3ec20:	cmp	w1, #0x0
   3ec24:	ccmp	w27, #0x4, #0x0, gt
   3ec28:	b.ne	3edb4 <mpfr_tmp_free@@Base+0xfe8>  // b.any
   3ec2c:	b	3edac <mpfr_tmp_free@@Base+0xfe0>
   3ec30:	ldr	x0, [x20]
   3ec34:	and	x0, x0, #0x1
   3ec38:	str	x0, [x29, #104]
   3ec3c:	b	3ea80 <mpfr_tmp_free@@Base+0xcb4>
   3ec40:	mov	w28, w2
   3ec44:	b	3e94c <mpfr_tmp_free@@Base+0xb80>
   3ec48:	cmp	w27, #0x4
   3ec4c:	b.ne	3e7e8 <mpfr_tmp_free@@Base+0xa1c>  // b.any
   3ec50:	cmp	w28, #0x0
   3ec54:	ldr	w0, [x29, #152]
   3ec58:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   3ec5c:	cset	w0, eq  // eq = none
   3ec60:	str	w0, [x29, #192]
   3ec64:	b	3e96c <mpfr_tmp_free@@Base+0xba0>
   3ec68:	cmp	w28, #0x0
   3ec6c:	ldr	w0, [x29, #152]
   3ec70:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   3ec74:	cset	w0, ne  // ne = any
   3ec78:	str	w0, [x29, #192]
   3ec7c:	b	3e96c <mpfr_tmp_free@@Base+0xba0>
   3ec80:	str	wzr, [x29, #192]
   3ec84:	b	3e96c <mpfr_tmp_free@@Base+0xba0>
   3ec88:	ldr	x0, [x29, #136]
   3ec8c:	sub	x25, x0, x2
   3ec90:	cmp	x25, #0x0
   3ec94:	b.le	3eb14 <mpfr_tmp_free@@Base+0xd48>
   3ec98:	add	x0, x28, x25, lsl #3
   3ec9c:	cmp	x0, x20
   3eca0:	b.eq	3eb14 <mpfr_tmp_free@@Base+0xd48>  // b.none
   3eca4:	lsl	x2, x2, #3
   3eca8:	mov	x1, x20
   3ecac:	bl	ba10 <memcpy@plt>
   3ecb0:	b	3eb14 <mpfr_tmp_free@@Base+0xd48>
   3ecb4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3ecb8:	add	x2, x2, #0xf08
   3ecbc:	mov	w1, #0x3de                 	// #990
   3ecc0:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3ecc4:	add	x0, x0, #0xf38
   3ecc8:	bl	cb40 <mpfr_assert_fail@plt>
   3eccc:	b	3eb38 <mpfr_tmp_free@@Base+0xd6c>
   3ecd0:	ldr	x0, [x29, #160]
   3ecd4:	sub	x25, x0, x25
   3ecd8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ecdc:	add	x0, x25, x0
   3ece0:	cmp	x1, x0
   3ece4:	b.lt	3ecfc <mpfr_tmp_free@@Base+0xf30>  // b.tstop
   3ece8:	ldr	x0, [x29, #200]
   3ecec:	sub	x0, x0, x25
   3ecf0:	str	x0, [x29, #128]
   3ecf4:	ldr	x25, [x29, #136]
   3ecf8:	b	3eb48 <mpfr_tmp_free@@Base+0xd7c>
   3ecfc:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3ed00:	add	x2, x2, #0xf80
   3ed04:	mov	w1, #0x3ec                 	// #1004
   3ed08:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3ed0c:	add	x0, x0, #0xf38
   3ed10:	bl	cb40 <mpfr_assert_fail@plt>
   3ed14:	b	3ece8 <mpfr_tmp_free@@Base+0xf1c>
   3ed18:	ldr	w0, [x29, #124]
   3ed1c:	cmp	w0, #0x1
   3ed20:	b.eq	3f254 <mpfr_tmp_free@@Base+0x1488>  // b.none
   3ed24:	ldr	x0, [x29, #104]
   3ed28:	cbnz	x0, 3edc0 <mpfr_tmp_free@@Base+0xff4>
   3ed2c:	cmp	w27, #0x1
   3ed30:	cset	w1, eq  // eq = none
   3ed34:	ldr	w0, [x29, #188]
   3ed38:	cmp	w0, #0x0
   3ed3c:	cset	w2, gt
   3ed40:	mov	w0, #0xffffffff            	// #-1
   3ed44:	cmp	w27, #0x4
   3ed48:	cset	w4, eq  // eq = none
   3ed4c:	ldr	w3, [x29, #188]
   3ed50:	lsr	w3, w3, #31
   3ed54:	cmp	w4, #0x0
   3ed58:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   3ed5c:	b.ne	3ebe0 <mpfr_tmp_free@@Base+0xe14>  // b.any
   3ed60:	cmp	w27, #0x2
   3ed64:	b.eq	3ed80 <mpfr_tmp_free@@Base+0xfb4>  // b.none
   3ed68:	cmp	w1, #0x0
   3ed6c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   3ed70:	b.ne	3ed80 <mpfr_tmp_free@@Base+0xfb4>  // b.any
   3ed74:	cmp	w2, #0x0
   3ed78:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   3ed7c:	b.eq	3ee14 <mpfr_tmp_free@@Base+0x1048>  // b.none
   3ed80:	cmp	w0, #0x0
   3ed84:	cset	w28, ne  // ne = any
   3ed88:	ldr	w1, [x29, #124]
   3ed8c:	cmp	w1, #0x2
   3ed90:	b.eq	3eddc <mpfr_tmp_free@@Base+0x1010>  // b.none
   3ed94:	ldr	w1, [x29, #188]
   3ed98:	cmp	w1, #0x0
   3ed9c:	ccmp	w27, #0x4, #0x0, lt  // lt = tstop
   3eda0:	b.eq	3edfc <mpfr_tmp_free@@Base+0x1030>  // b.none
   3eda4:	cmp	w27, #0x2
   3eda8:	b.ne	3ec0c <mpfr_tmp_free@@Base+0xe40>  // b.any
   3edac:	cmp	w0, #0x1
   3edb0:	b.eq	3ee40 <mpfr_tmp_free@@Base+0x1074>  // b.none
   3edb4:	ldr	w0, [x29, #144]
   3edb8:	str	w0, [x29, #192]
   3edbc:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3edc0:	mov	w0, #0x1                   	// #1
   3edc4:	b	3ebc0 <mpfr_tmp_free@@Base+0xdf4>
   3edc8:	cmp	w0, #0x0
   3edcc:	csetm	w28, ne  // ne = any
   3edd0:	ldr	w1, [x29, #124]
   3edd4:	cmp	w1, #0x2
   3edd8:	b.ne	3edf4 <mpfr_tmp_free@@Base+0x1028>  // b.any
   3eddc:	mov	w1, #0x1                   	// #1
   3ede0:	ldr	x2, [x29, #144]
   3ede4:	cmp	x2, #0x0
   3ede8:	cneg	w1, w1, ne  // ne = any
   3edec:	cmp	w1, w0
   3edf0:	b.eq	3ee2c <mpfr_tmp_free@@Base+0x1060>  // b.none
   3edf4:	cmp	w27, #0x3
   3edf8:	b.ne	3ebf4 <mpfr_tmp_free@@Base+0xe28>  // b.any
   3edfc:	cmn	w0, #0x1
   3ee00:	b.ne	3ec1c <mpfr_tmp_free@@Base+0xe50>  // b.any
   3ee04:	ldr	w0, [x29, #144]
   3ee08:	sub	w0, w0, #0x1
   3ee0c:	str	w0, [x29, #192]
   3ee10:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3ee14:	mov	w28, w0
   3ee18:	ldr	w1, [x29, #124]
   3ee1c:	cmp	w1, #0x1
   3ee20:	b.ne	3ed88 <mpfr_tmp_free@@Base+0xfbc>  // b.any
   3ee24:	neg	w28, w0
   3ee28:	b	3ed94 <mpfr_tmp_free@@Base+0xfc8>
   3ee2c:	mov	w0, #0x1                   	// #1
   3ee30:	ldr	w1, [x29, #144]
   3ee34:	sub	w0, w0, w1
   3ee38:	str	w0, [x29, #192]
   3ee3c:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3ee40:	ldr	w0, [x29, #144]
   3ee44:	add	w0, w0, #0x1
   3ee48:	str	w0, [x29, #192]
   3ee4c:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3ee50:	str	wzr, [x29, #192]
   3ee54:	mov	w28, #0x0                   	// #0
   3ee58:	b	3e97c <mpfr_tmp_free@@Base+0xbb0>
   3ee5c:	add	x1, x20, x19, lsl #3
   3ee60:	cmp	x1, x26
   3ee64:	b.eq	3ea20 <mpfr_tmp_free@@Base+0xc54>  // b.none
   3ee68:	lsl	x2, x25, #3
   3ee6c:	mov	x0, x26
   3ee70:	bl	ba10 <memcpy@plt>
   3ee74:	b	3ea20 <mpfr_tmp_free@@Base+0xc54>
   3ee78:	ldr	x1, [x29, #224]
   3ee7c:	sub	x0, x1, x0
   3ee80:	add	x19, x0, #0x7e
   3ee84:	adds	x1, x0, #0x3f
   3ee88:	csel	x19, x19, x1, mi  // mi = first
   3ee8c:	asr	x19, x19, #6
   3ee90:	cbz	w23, 3eecc <mpfr_tmp_free@@Base+0x1100>
   3ee94:	sub	x0, x25, x19
   3ee98:	mov	w3, w23
   3ee9c:	mov	x2, x19
   3eea0:	mov	x1, x20
   3eea4:	add	x0, x26, x0, lsl #3
   3eea8:	bl	bcc0 <__gmpn_lshift@plt>
   3eeac:	cmp	x25, x19
   3eeb0:	b.le	3ea20 <mpfr_tmp_free@@Base+0xc54>
   3eeb4:	sub	x2, x25, x19
   3eeb8:	lsl	x2, x2, #3
   3eebc:	mov	w1, #0x0                   	// #0
   3eec0:	mov	x0, x26
   3eec4:	bl	c110 <memset@plt>
   3eec8:	b	3ea20 <mpfr_tmp_free@@Base+0xc54>
   3eecc:	cmp	x0, #0x0
   3eed0:	b.le	3eeac <mpfr_tmp_free@@Base+0x10e0>
   3eed4:	sub	x0, x25, x19
   3eed8:	add	x0, x26, x0, lsl #3
   3eedc:	cmp	x0, x20
   3eee0:	b.eq	3eeac <mpfr_tmp_free@@Base+0x10e0>  // b.none
   3eee4:	lsl	x2, x19, #3
   3eee8:	mov	x1, x20
   3eeec:	bl	ba10 <memcpy@plt>
   3eef0:	b	3eeac <mpfr_tmp_free@@Base+0x10e0>
   3eef4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3eef8:	str	x0, [x26]
   3eefc:	mov	w0, #0x1                   	// #1
   3ef00:	ldr	w1, [x29, #192]
   3ef04:	sub	w0, w0, w1
   3ef08:	sxtw	x0, w0
   3ef0c:	sxtw	x1, w1
   3ef10:	ldr	w2, [x29, #152]
   3ef14:	cmp	w2, #0x0
   3ef18:	csel	x1, x1, x0, eq  // eq = none
   3ef1c:	ldr	x0, [x29, #224]
   3ef20:	add	x0, x0, x1
   3ef24:	str	x0, [x29, #224]
   3ef28:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3ef2c:	mov	w0, #0x1                   	// #1
   3ef30:	sub	w0, w0, w3
   3ef34:	sxtw	x0, w0
   3ef38:	ldr	w5, [x29, #188]
   3ef3c:	lsl	x0, x0, x5
   3ef40:	ldr	x1, [x26]
   3ef44:	mov	x2, #0xffffffffffffffff    	// #-1
   3ef48:	lsl	x2, x2, x5
   3ef4c:	bic	x1, x2, x1
   3ef50:	add	x1, x1, x0
   3ef54:	str	x1, [x26]
   3ef58:	cmp	x1, x0
   3ef5c:	b.cc	3ef6c <mpfr_tmp_free@@Base+0x11a0>  // b.lo, b.ul, b.last
   3ef60:	cmp	x0, #0x0
   3ef64:	ccmp	w3, #0x0, #0x0, eq  // eq = none
   3ef68:	b.ge	3efe0 <mpfr_tmp_free@@Base+0x1214>  // b.tcont
   3ef6c:	cmp	x25, #0x1
   3ef70:	b.eq	3ef98 <mpfr_tmp_free@@Base+0x11cc>  // b.none
   3ef74:	add	x0, x26, #0x8
   3ef78:	ldr	x2, [x26, #8]
   3ef7c:	cbnz	x2, 3efd8 <mpfr_tmp_free@@Base+0x120c>
   3ef80:	subs	x21, x21, #0x1
   3ef84:	b.eq	3ef98 <mpfr_tmp_free@@Base+0x11cc>  // b.none
   3ef88:	ldr	x2, [x0, #8]!
   3ef8c:	cbnz	x2, 3efb4 <mpfr_tmp_free@@Base+0x11e8>
   3ef90:	subs	x21, x21, #0x1
   3ef94:	b.ne	3ef88 <mpfr_tmp_free@@Base+0x11bc>  // b.any
   3ef98:	ldr	x0, [x26, x4]
   3ef9c:	orr	x0, x0, #0x8000000000000000
   3efa0:	str	x0, [x26, x4]
   3efa4:	ldr	x0, [x29, #224]
   3efa8:	add	x0, x0, #0x1
   3efac:	str	x0, [x29, #224]
   3efb0:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3efb4:	mov	x1, x0
   3efb8:	neg	x2, x2
   3efbc:	str	x2, [x0]
   3efc0:	subs	x2, x21, #0x1
   3efc4:	b.eq	3f148 <mpfr_tmp_free@@Base+0x137c>  // b.none
   3efc8:	add	x1, x1, #0x8
   3efcc:	add	x0, x0, #0x8
   3efd0:	bl	be10 <__gmpn_com@plt>
   3efd4:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3efd8:	mov	x1, x0
   3efdc:	b	3efb8 <mpfr_tmp_free@@Base+0x11ec>
   3efe0:	cmp	x25, #0x1
   3efe4:	b.le	3f148 <mpfr_tmp_free@@Base+0x137c>
   3efe8:	add	x0, x26, #0x8
   3efec:	mov	x2, x21
   3eff0:	mov	x1, x0
   3eff4:	bl	be10 <__gmpn_com@plt>
   3eff8:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3effc:	add	x2, x2, #0x1
   3f000:	add	x0, x0, #0x8
   3f004:	mov	x3, x0
   3f008:	ldr	x1, [x0]
   3f00c:	cmn	x1, #0x1
   3f010:	b.eq	3effc <mpfr_tmp_free@@Base+0x1230>  // b.none
   3f014:	mov	x0, #0xfffffffffffffffe    	// #-2
   3f018:	sub	x1, x0, x1
   3f01c:	str	x1, [x3]
   3f020:	add	x2, x2, #0x1
   3f024:	cmp	x2, x25
   3f028:	b.lt	3f04c <mpfr_tmp_free@@Base+0x1280>  // b.tstop
   3f02c:	ldr	x0, [x26, x4]
   3f030:	tbnz	x0, #63, 3f148 <mpfr_tmp_free@@Base+0x137c>
   3f034:	orr	x0, x0, #0x8000000000000000
   3f038:	str	x0, [x26, x4]
   3f03c:	ldr	x0, [x29, #224]
   3f040:	sub	x0, x0, #0x1
   3f044:	str	x0, [x29, #224]
   3f048:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f04c:	add	x0, x26, x2, lsl #3
   3f050:	sub	x2, x25, x2
   3f054:	mov	x1, x0
   3f058:	bl	be10 <__gmpn_com@plt>
   3f05c:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f060:	lsl	x25, x25, #3
   3f064:	sub	x25, x25, #0x8
   3f068:	mov	x1, #0x1                   	// #1
   3f06c:	ldr	w3, [x29, #188]
   3f070:	lsl	x1, x1, x3
   3f074:	neg	x0, x1
   3f078:	ldr	x2, [x26]
   3f07c:	and	x0, x0, x2
   3f080:	str	x0, [x26]
   3f084:	ldr	w2, [x29, #192]
   3f088:	cmp	w2, #0x0
   3f08c:	b.le	3f108 <mpfr_tmp_free@@Base+0x133c>
   3f090:	sxtw	x1, w2
   3f094:	lsl	x1, x1, x3
   3f098:	cbz	x1, 3f0d0 <mpfr_tmp_free@@Base+0x1304>
   3f09c:	add	x0, x0, x1
   3f0a0:	str	x0, [x26]
   3f0a4:	cmp	x1, x0
   3f0a8:	b.ls	3f148 <mpfr_tmp_free@@Base+0x137c>  // b.plast
   3f0ac:	mov	x1, x26
   3f0b0:	add	x21, x26, x21, lsl #3
   3f0b4:	cmp	x1, x21
   3f0b8:	b.eq	3f220 <mpfr_tmp_free@@Base+0x1454>  // b.none
   3f0bc:	ldr	x0, [x1, #8]
   3f0c0:	add	x0, x0, #0x1
   3f0c4:	str	x0, [x1, #8]!
   3f0c8:	cbz	x0, 3f0b4 <mpfr_tmp_free@@Base+0x12e8>
   3f0cc:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f0d0:	ldr	x0, [x26, #8]
   3f0d4:	add	x0, x0, #0x1
   3f0d8:	str	x0, [x26, #8]
   3f0dc:	cbnz	x0, 3f148 <mpfr_tmp_free@@Base+0x137c>
   3f0e0:	add	x1, x26, #0x10
   3f0e4:	add	x0, x26, #0x8
   3f0e8:	add	x21, x0, x21, lsl #3
   3f0ec:	cmp	x21, x1
   3f0f0:	b.eq	3f220 <mpfr_tmp_free@@Base+0x1454>  // b.none
   3f0f4:	ldr	x0, [x1]
   3f0f8:	add	x0, x0, #0x1
   3f0fc:	str	x0, [x1], #8
   3f100:	cbz	x0, 3f0ec <mpfr_tmp_free@@Base+0x1320>
   3f104:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f108:	ldr	w2, [x29, #192]
   3f10c:	tbz	w2, #31, 3f148 <mpfr_tmp_free@@Base+0x137c>
   3f110:	sub	x2, x0, x1
   3f114:	str	x2, [x26]
   3f118:	cmp	x1, x0
   3f11c:	b.ls	3f140 <mpfr_tmp_free@@Base+0x1374>  // b.plast
   3f120:	mov	x0, x26
   3f124:	add	x21, x26, x21, lsl #3
   3f128:	cmp	x0, x21
   3f12c:	b.eq	3f140 <mpfr_tmp_free@@Base+0x1374>  // b.none
   3f130:	ldr	x1, [x0, #8]
   3f134:	sub	x2, x1, #0x1
   3f138:	str	x2, [x0, #8]!
   3f13c:	cbz	x1, 3f128 <mpfr_tmp_free@@Base+0x135c>
   3f140:	ldr	x0, [x26, x25]
   3f144:	tbz	x0, #63, 3f1b4 <mpfr_tmp_free@@Base+0x13e8>
   3f148:	ldr	x0, [x29, #224]
   3f14c:	str	x0, [x24, #16]
   3f150:	ldr	x0, [x29, #232]
   3f154:	cbnz	x0, 3f1cc <mpfr_tmp_free@@Base+0x1400>
   3f158:	ldr	x1, [x24, #16]
   3f15c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f160:	ldr	x2, [x0, #2512]
   3f164:	add	x0, x0, #0x9d0
   3f168:	blr	x2
   3f16c:	mrs	x2, tpidr_el0
   3f170:	ldr	x0, [x2, x0]
   3f174:	cmp	x1, x0
   3f178:	b.lt	3f19c <mpfr_tmp_free@@Base+0x13d0>  // b.tstop
   3f17c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f180:	ldr	x2, [x0, #2544]
   3f184:	add	x0, x0, #0x9f0
   3f188:	blr	x2
   3f18c:	mrs	x2, tpidr_el0
   3f190:	ldr	x0, [x2, x0]
   3f194:	cmp	x1, x0
   3f198:	b.le	3f1d4 <mpfr_tmp_free@@Base+0x1408>
   3f19c:	mov	w2, w27
   3f1a0:	mov	w1, w28
   3f1a4:	mov	x0, x24
   3f1a8:	bl	cb30 <mpfr_check_range@plt>
   3f1ac:	mov	w28, w0
   3f1b0:	b	3f1fc <mpfr_tmp_free@@Base+0x1430>
   3f1b4:	orr	x0, x0, #0x8000000000000000
   3f1b8:	str	x0, [x26, x25]
   3f1bc:	ldr	x0, [x29, #224]
   3f1c0:	sub	x0, x0, #0x1
   3f1c4:	str	x0, [x29, #224]
   3f1c8:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f1cc:	bl	c410 <mpfr_tmp_free@plt>
   3f1d0:	b	3f158 <mpfr_tmp_free@@Base+0x138c>
   3f1d4:	cbz	w28, 3f1fc <mpfr_tmp_free@@Base+0x1430>
   3f1d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f1dc:	ldr	x1, [x0, #2576]
   3f1e0:	add	x0, x0, #0xa10
   3f1e4:	blr	x1
   3f1e8:	mrs	x1, tpidr_el0
   3f1ec:	add	x0, x1, x0
   3f1f0:	ldr	w1, [x0]
   3f1f4:	orr	w1, w1, #0x8
   3f1f8:	str	w1, [x0]
   3f1fc:	mov	w0, w28
   3f200:	mov	sp, x29
   3f204:	ldp	x19, x20, [sp, #16]
   3f208:	ldp	x21, x22, [sp, #32]
   3f20c:	ldp	x23, x24, [sp, #48]
   3f210:	ldp	x25, x26, [sp, #64]
   3f214:	ldp	x27, x28, [sp, #80]
   3f218:	ldp	x29, x30, [sp], #240
   3f21c:	ret
   3f220:	ldr	x0, [x26, x25]
   3f224:	orr	x0, x0, #0x8000000000000000
   3f228:	str	x0, [x26, x25]
   3f22c:	ldr	x0, [x29, #224]
   3f230:	add	x0, x0, #0x1
   3f234:	str	x0, [x29, #224]
   3f238:	b	3f148 <mpfr_tmp_free@@Base+0x137c>
   3f23c:	mov	w3, w23
   3f240:	mov	x2, x25
   3f244:	add	x1, x20, x1, lsl #3
   3f248:	mov	x0, x26
   3f24c:	bl	bcc0 <__gmpn_lshift@plt>
   3f250:	b	3ea20 <mpfr_tmp_free@@Base+0xc54>
   3f254:	mov	w0, #0x0                   	// #0
   3f258:	cmp	w27, #0x3
   3f25c:	b.ne	3ebc0 <mpfr_tmp_free@@Base+0xdf4>  // b.any
   3f260:	mov	w28, #0x0                   	// #0
   3f264:	mov	w0, #0x0                   	// #0
   3f268:	b	3edf4 <mpfr_tmp_free@@Base+0x1028>
   3f26c:	mov	w28, #0x1                   	// #1
   3f270:	b	3e94c <mpfr_tmp_free@@Base+0xb80>

000000000003f274 <mpfr_sum@@Base>:
   3f274:	stp	x29, x30, [sp, #-16]!
   3f278:	mov	x29, sp
   3f27c:	mov	x11, x0
   3f280:	mov	x9, x2
   3f284:	mov	w12, w3
   3f288:	cmp	x2, #0x2
   3f28c:	b.ls	3f2b8 <mpfr_sum@@Base+0x44>  // b.plast
   3f290:	mov	w13, #0x0                   	// #0
   3f294:	mov	w0, #0x0                   	// #0
   3f298:	mov	x5, #0x0                   	// #0
   3f29c:	mov	x7, #0x0                   	// #0
   3f2a0:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3f2a4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3f2a8:	mov	x3, #0x2                   	// #2
   3f2ac:	movk	x3, #0x8000, lsl #48
   3f2b0:	mov	w14, #0x1                   	// #1
   3f2b4:	b	3f384 <mpfr_sum@@Base+0x110>
   3f2b8:	cbz	x2, 3f2d4 <mpfr_sum@@Base+0x60>
   3f2bc:	cmp	x2, #0x1
   3f2c0:	b.eq	3f2ec <mpfr_sum@@Base+0x78>  // b.none
   3f2c4:	ldr	x2, [x1, #8]
   3f2c8:	ldr	x1, [x1]
   3f2cc:	bl	c1a0 <mpfr_add@plt>
   3f2d0:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f2d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3f2d8:	str	x0, [x11, #16]
   3f2dc:	mov	w0, #0x1                   	// #1
   3f2e0:	str	w0, [x11, #8]
   3f2e4:	mov	w0, #0x0                   	// #0
   3f2e8:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f2ec:	ldr	x1, [x1]
   3f2f0:	ldr	w3, [x1, #8]
   3f2f4:	mov	w2, w12
   3f2f8:	bl	c6a0 <mpfr_set4@plt>
   3f2fc:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f300:	cbnz	w0, 3f30c <mpfr_sum@@Base+0x98>
   3f304:	ldr	w0, [x8, #8]
   3f308:	b	3f374 <mpfr_sum@@Base+0x100>
   3f30c:	ldr	w2, [x8, #8]
   3f310:	cmp	w2, w0
   3f314:	b.eq	3f374 <mpfr_sum@@Base+0x100>  // b.none
   3f318:	mov	x0, #0x2                   	// #2
   3f31c:	movk	x0, #0x8000, lsl #48
   3f320:	str	x0, [x11, #16]
   3f324:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f328:	ldr	x1, [x0, #2576]
   3f32c:	add	x0, x0, #0xa10
   3f330:	blr	x1
   3f334:	mrs	x1, tpidr_el0
   3f338:	add	x0, x1, x0
   3f33c:	ldr	w1, [x0]
   3f340:	orr	w1, w1, #0x4
   3f344:	str	w1, [x0]
   3f348:	mov	w0, #0x0                   	// #0
   3f34c:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f350:	ldr	w2, [x8, #8]
   3f354:	cmp	w13, w2
   3f358:	b.eq	3f3b4 <mpfr_sum@@Base+0x140>  // b.none
   3f35c:	cmp	w12, #0x3
   3f360:	cneg	w13, w14, eq  // eq = none
   3f364:	b	3f374 <mpfr_sum@@Base+0x100>
   3f368:	cmp	x4, x6
   3f36c:	csel	x4, x4, x6, ge  // ge = tcont
   3f370:	add	x5, x5, #0x1
   3f374:	add	x2, x7, #0x1
   3f378:	cmp	x9, x2
   3f37c:	b.eq	3f3bc <mpfr_sum@@Base+0x148>  // b.none
   3f380:	mov	x7, x2
   3f384:	ldr	x8, [x1, x7, lsl #3]
   3f388:	ldr	x6, [x8, #16]
   3f38c:	cmp	x6, x10
   3f390:	b.gt	3f368 <mpfr_sum@@Base+0xf4>
   3f394:	cmp	x6, x3
   3f398:	b.eq	3f318 <mpfr_sum@@Base+0xa4>  // b.none
   3f39c:	cmp	x6, x10
   3f3a0:	b.eq	3f300 <mpfr_sum@@Base+0x8c>  // b.none
   3f3a4:	cbnz	x5, 3f374 <mpfr_sum@@Base+0x100>
   3f3a8:	cbnz	w13, 3f350 <mpfr_sum@@Base+0xdc>
   3f3ac:	ldr	w13, [x8, #8]
   3f3b0:	b	3f374 <mpfr_sum@@Base+0x100>
   3f3b4:	mov	w13, w2
   3f3b8:	b	3f374 <mpfr_sum@@Base+0x100>
   3f3bc:	cbnz	w0, 3f3e0 <mpfr_sum@@Base+0x16c>
   3f3c0:	cbz	x5, 3f3f4 <mpfr_sum@@Base+0x180>
   3f3c4:	cmp	x5, #0x2
   3f3c8:	b.ls	3f404 <mpfr_sum@@Base+0x190>  // b.plast
   3f3cc:	mov	w3, w12
   3f3d0:	mov	x0, x11
   3f3d4:	bl	3e3f4 <mpfr_tmp_free@@Base+0x628>
   3f3d8:	ldp	x29, x30, [sp], #16
   3f3dc:	ret
   3f3e0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3f3e4:	str	x1, [x11, #16]
   3f3e8:	str	w0, [x11, #8]
   3f3ec:	mov	w0, #0x0                   	// #0
   3f3f0:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f3f4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3f3f8:	str	x1, [x11, #16]
   3f3fc:	str	w13, [x11, #8]
   3f400:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f404:	mov	x6, #0xffffffffffffffff    	// #-1
   3f408:	mov	x4, #0x0                   	// #0
   3f40c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   3f410:	b	3f454 <mpfr_sum@@Base+0x1e0>
   3f414:	ldr	w3, [x0, #8]
   3f418:	mov	w2, w12
   3f41c:	mov	x1, x0
   3f420:	mov	x0, x11
   3f424:	bl	c6a0 <mpfr_set4@plt>
   3f428:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f42c:	mov	w3, w12
   3f430:	mov	x2, x0
   3f434:	ldr	x1, [x1, x6, lsl #3]
   3f438:	mov	x0, x11
   3f43c:	bl	c1a0 <mpfr_add@plt>
   3f440:	b	3f3d8 <mpfr_sum@@Base+0x164>
   3f444:	add	x0, x4, #0x1
   3f448:	cmp	x7, x4
   3f44c:	b.eq	3f47c <mpfr_sum@@Base+0x208>  // b.none
   3f450:	mov	x4, x0
   3f454:	ldr	x0, [x1, x4, lsl #3]
   3f458:	ldr	x2, [x0, #16]
   3f45c:	cmp	x2, x3
   3f460:	b.le	3f444 <mpfr_sum@@Base+0x1d0>
   3f464:	cmp	x5, #0x1
   3f468:	b.eq	3f414 <mpfr_sum@@Base+0x1a0>  // b.none
   3f46c:	cmn	x6, #0x1
   3f470:	b.ne	3f42c <mpfr_sum@@Base+0x1b8>  // b.any
   3f474:	mov	x6, x4
   3f478:	b	3f444 <mpfr_sum@@Base+0x1d0>
   3f47c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   3f480:	add	x2, x2, #0x8b8
   3f484:	mov	w1, #0x564                 	// #1380
   3f488:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   3f48c:	add	x0, x0, #0xf38
   3f490:	bl	cb40 <mpfr_assert_fail@plt>

000000000003f494 <mpfr_add1sp@@Base>:
   3f494:	stp	x29, x30, [sp, #-160]!
   3f498:	mov	x29, sp
   3f49c:	stp	x19, x20, [sp, #16]
   3f4a0:	stp	x21, x22, [sp, #32]
   3f4a4:	stp	x23, x24, [sp, #48]
   3f4a8:	stp	x25, x26, [sp, #64]
   3f4ac:	stp	x27, x28, [sp, #80]
   3f4b0:	mov	x21, x0
   3f4b4:	mov	x19, x1
   3f4b8:	mov	x22, x2
   3f4bc:	mov	w23, w3
   3f4c0:	str	xzr, [x29, #152]
   3f4c4:	ldr	w0, [x1, #8]
   3f4c8:	str	w0, [x21, #8]
   3f4cc:	ldr	x20, [x1]
   3f4d0:	sub	x0, x20, #0x1
   3f4d4:	str	x0, [x29, #136]
   3f4d8:	cmp	x20, #0x3f
   3f4dc:	b.le	3f524 <mpfr_add1sp@@Base+0x90>
   3f4e0:	sub	x0, x20, #0x41
   3f4e4:	cmp	x0, #0x3e
   3f4e8:	b.ls	3f7b8 <mpfr_add1sp@@Base+0x324>  // b.plast
   3f4ec:	cmp	x20, #0x40
   3f4f0:	b.eq	3fad4 <mpfr_add1sp@@Base+0x640>  // b.none
   3f4f4:	sub	x0, x20, #0x81
   3f4f8:	cmp	x0, #0x3e
   3f4fc:	b.ls	3fcf8 <mpfr_add1sp@@Base+0x864>  // b.plast
   3f500:	ldr	w0, [x1, #8]
   3f504:	lsr	w0, w0, #31
   3f508:	str	w0, [x29, #116]
   3f50c:	ldr	x0, [x1, #16]
   3f510:	ldr	x25, [x2, #16]
   3f514:	cmp	x25, x0
   3f518:	b.le	4064c <mpfr_add1sp@@Base+0x11b8>
   3f51c:	mov	x24, x0
   3f520:	b	4065c <mpfr_add1sp@@Base+0x11c8>
   3f524:	ldr	x3, [x1, #16]
   3f528:	ldr	x0, [x2, #16]
   3f52c:	ldr	x6, [x21, #24]
   3f530:	ldr	x5, [x1, #24]
   3f534:	ldr	x2, [x2, #24]
   3f538:	mov	x1, #0x40                  	// #64
   3f53c:	sub	x20, x1, x20
   3f540:	cmp	x3, x0
   3f544:	b.eq	3f5ac <mpfr_add1sp@@Base+0x118>  // b.none
   3f548:	b.le	3f660 <mpfr_add1sp@@Base+0x1cc>
   3f54c:	sub	x0, x3, x0
   3f550:	mov	x4, #0x1                   	// #1
   3f554:	lsl	x4, x4, x20
   3f558:	sub	x1, x4, #0x1
   3f55c:	cmp	x0, x20
   3f560:	b.cs	3f67c <mpfr_add1sp@@Base+0x1e8>  // b.hs, b.nlast
   3f564:	ldr	x5, [x5]
   3f568:	ldr	x2, [x2]
   3f56c:	lsr	x0, x2, x0
   3f570:	adds	x0, x0, x5
   3f574:	b.cc	3f584 <mpfr_add1sp@@Base+0xf0>  // b.lo, b.ul, b.last
   3f578:	lsr	x0, x0, #1
   3f57c:	orr	x0, x0, #0x8000000000000000
   3f580:	add	x3, x3, #0x1
   3f584:	sub	w5, w20, #0x1
   3f588:	mov	x2, #0x1                   	// #1
   3f58c:	lsl	x2, x2, x5
   3f590:	and	x5, x2, x0
   3f594:	eor	x2, x1, x2
   3f598:	and	x2, x2, x0
   3f59c:	neg	x4, x4
   3f5a0:	and	x0, x4, x0
   3f5a4:	str	x0, [x6]
   3f5a8:	b	3f5dc <mpfr_add1sp@@Base+0x148>
   3f5ac:	ldr	x0, [x5]
   3f5b0:	ldr	x1, [x2]
   3f5b4:	lsr	x1, x1, #1
   3f5b8:	add	x1, x1, x0, lsr #1
   3f5bc:	add	x3, x3, #0x1
   3f5c0:	sub	w2, w20, #0x1
   3f5c4:	mov	x0, #0x1                   	// #1
   3f5c8:	lsl	x0, x0, x2
   3f5cc:	and	x5, x0, x1
   3f5d0:	bic	x0, x1, x0
   3f5d4:	str	x0, [x6]
   3f5d8:	mov	x2, #0x0                   	// #0
   3f5dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f5e0:	ldr	x1, [x0, #2544]
   3f5e4:	add	x0, x0, #0x9f0
   3f5e8:	blr	x1
   3f5ec:	mrs	x1, tpidr_el0
   3f5f0:	ldr	x0, [x1, x0]
   3f5f4:	cmp	x0, x3
   3f5f8:	b.lt	3f6f4 <mpfr_add1sp@@Base+0x260>  // b.tstop
   3f5fc:	str	x3, [x21, #16]
   3f600:	orr	x0, x5, x2
   3f604:	cmp	x0, #0x0
   3f608:	mov	w1, #0x0                   	// #0
   3f60c:	ccmp	w23, #0x5, #0x4, ne  // ne = any
   3f610:	b.eq	407b0 <mpfr_add1sp@@Base+0x131c>  // b.none
   3f614:	cbnz	w23, 3f70c <mpfr_add1sp@@Base+0x278>
   3f618:	cbz	x5, 3f62c <mpfr_add1sp@@Base+0x198>
   3f61c:	cbnz	x2, 3f724 <mpfr_add1sp@@Base+0x290>
   3f620:	ldr	x0, [x6]
   3f624:	lsr	x0, x0, x20
   3f628:	tbnz	w0, #0, 3f724 <mpfr_add1sp@@Base+0x290>
   3f62c:	ldr	w1, [x21, #8]
   3f630:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3f634:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f638:	ldr	x2, [x0, #2576]
   3f63c:	add	x0, x0, #0xa10
   3f640:	blr	x2
   3f644:	mrs	x2, tpidr_el0
   3f648:	add	x0, x2, x0
   3f64c:	ldr	w2, [x0]
   3f650:	orr	w2, w2, #0x8
   3f654:	str	w2, [x0]
   3f658:	neg	w1, w1
   3f65c:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3f660:	mov	x1, x5
   3f664:	mov	x5, x2
   3f668:	mov	x2, x1
   3f66c:	mov	x1, x3
   3f670:	mov	x3, x0
   3f674:	mov	x0, x1
   3f678:	b	3f54c <mpfr_add1sp@@Base+0xb8>
   3f67c:	cmp	x0, #0x3f
   3f680:	b.hi	3f6e0 <mpfr_add1sp@@Base+0x24c>  // b.pmore
   3f684:	ldr	x7, [x2]
   3f688:	neg	w2, w0
   3f68c:	lsl	x8, x7, x2
   3f690:	ldr	x2, [x5]
   3f694:	lsr	x0, x7, x0
   3f698:	adds	x0, x0, x2
   3f69c:	b.cc	3f6b4 <mpfr_add1sp@@Base+0x220>  // b.lo, b.ul, b.last
   3f6a0:	and	x2, x0, #0x1
   3f6a4:	orr	x8, x8, x2
   3f6a8:	lsr	x0, x0, #1
   3f6ac:	orr	x0, x0, #0x8000000000000000
   3f6b0:	add	x3, x3, #0x1
   3f6b4:	sub	w5, w20, #0x1
   3f6b8:	mov	x2, #0x1                   	// #1
   3f6bc:	lsl	x2, x2, x5
   3f6c0:	and	x5, x2, x0
   3f6c4:	eor	x2, x1, x2
   3f6c8:	and	x2, x2, x0
   3f6cc:	orr	x2, x2, x8
   3f6d0:	neg	x4, x4
   3f6d4:	and	x4, x4, x0
   3f6d8:	str	x4, [x6]
   3f6dc:	b	3f5dc <mpfr_add1sp@@Base+0x148>
   3f6e0:	ldr	x0, [x5]
   3f6e4:	str	x0, [x6]
   3f6e8:	mov	x2, #0x1                   	// #1
   3f6ec:	mov	x5, #0x0                   	// #0
   3f6f0:	b	3f5dc <mpfr_add1sp@@Base+0x148>
   3f6f4:	ldr	w2, [x21, #8]
   3f6f8:	mov	w1, w23
   3f6fc:	mov	x0, x21
   3f700:	bl	bf40 <mpfr_overflow@plt>
   3f704:	mov	w1, w0
   3f708:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3f70c:	cmp	w23, #0x1
   3f710:	b.eq	3f62c <mpfr_add1sp@@Base+0x198>  // b.none
   3f714:	ldr	w0, [x21, #8]
   3f718:	add	w0, w23, w0, lsr #31
   3f71c:	cmp	w0, #0x3
   3f720:	b.eq	3f62c <mpfr_add1sp@@Base+0x198>  // b.none
   3f724:	mov	x0, #0x1                   	// #1
   3f728:	lsl	x20, x0, x20
   3f72c:	ldr	x0, [x6]
   3f730:	add	x20, x20, x0
   3f734:	str	x20, [x6]
   3f738:	cbz	x20, 3f76c <mpfr_add1sp@@Base+0x2d8>
   3f73c:	ldr	w1, [x21, #8]
   3f740:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3f744:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f748:	ldr	x2, [x0, #2576]
   3f74c:	add	x0, x0, #0xa10
   3f750:	blr	x2
   3f754:	mrs	x2, tpidr_el0
   3f758:	add	x0, x2, x0
   3f75c:	ldr	w2, [x0]
   3f760:	orr	w2, w2, #0x8
   3f764:	str	w2, [x0]
   3f768:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3f76c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f770:	str	x0, [x6]
   3f774:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f778:	ldr	x1, [x0, #2544]
   3f77c:	add	x0, x0, #0x9f0
   3f780:	blr	x1
   3f784:	mrs	x1, tpidr_el0
   3f788:	ldr	x0, [x1, x0]
   3f78c:	cmp	x3, x0
   3f790:	b.ge	3f7a0 <mpfr_add1sp@@Base+0x30c>  // b.tcont
   3f794:	add	x0, x3, #0x1
   3f798:	str	x0, [x21, #16]
   3f79c:	b	3f73c <mpfr_add1sp@@Base+0x2a8>
   3f7a0:	ldr	w2, [x21, #8]
   3f7a4:	mov	w1, w23
   3f7a8:	mov	x0, x21
   3f7ac:	bl	bf40 <mpfr_overflow@plt>
   3f7b0:	mov	w1, w0
   3f7b4:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3f7b8:	ldr	x3, [x1, #16]
   3f7bc:	ldr	x0, [x2, #16]
   3f7c0:	ldr	x5, [x21, #24]
   3f7c4:	ldr	x11, [x1, #24]
   3f7c8:	ldr	x12, [x2, #24]
   3f7cc:	mov	x1, #0x80                  	// #128
   3f7d0:	sub	x20, x1, x20
   3f7d4:	cmp	x3, x0
   3f7d8:	b.eq	3f8fc <mpfr_add1sp@@Base+0x468>  // b.none
   3f7dc:	b.le	3f948 <mpfr_add1sp@@Base+0x4b4>
   3f7e0:	sub	x2, x3, x0
   3f7e4:	mov	x1, #0x1                   	// #1
   3f7e8:	lsl	x7, x1, x20
   3f7ec:	sub	x10, x7, #0x1
   3f7f0:	cmp	x2, #0x3f
   3f7f4:	b.hi	3f964 <mpfr_add1sp@@Base+0x4d0>  // b.pmore
   3f7f8:	ldr	x6, [x12]
   3f7fc:	mov	w1, #0x40                  	// #64
   3f800:	sub	w1, w1, w2
   3f804:	lsl	x8, x6, x1
   3f808:	ldr	x9, [x11]
   3f80c:	ldr	x4, [x12, #8]
   3f810:	lsl	x0, x4, x1
   3f814:	lsr	x6, x6, x2
   3f818:	orr	x0, x0, x6
   3f81c:	ldr	x6, [x11, #8]
   3f820:	lsr	x2, x4, x2
   3f824:	adds	x0, x0, x9
   3f828:	adc	x2, x6, x2
   3f82c:	cmp	x6, x2
   3f830:	b.ls	3f84c <mpfr_add1sp@@Base+0x3b8>  // b.plast
   3f834:	and	x1, x0, #0x1
   3f838:	orr	x8, x8, x1
   3f83c:	extr	x0, x2, x0, #1
   3f840:	lsr	x2, x2, #1
   3f844:	orr	x2, x2, #0x8000000000000000
   3f848:	add	x3, x3, #0x1
   3f84c:	str	x2, [x5, #8]
   3f850:	sub	w2, w20, #0x1
   3f854:	mov	x1, #0x1                   	// #1
   3f858:	lsl	x1, x1, x2
   3f85c:	and	x6, x1, x0
   3f860:	eor	x1, x10, x1
   3f864:	and	x1, x1, x0
   3f868:	orr	x4, x1, x8
   3f86c:	neg	x1, x7
   3f870:	and	x0, x1, x0
   3f874:	str	x0, [x5]
   3f878:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f87c:	ldr	x1, [x0, #2544]
   3f880:	add	x0, x0, #0x9f0
   3f884:	blr	x1
   3f888:	mrs	x1, tpidr_el0
   3f88c:	ldr	x0, [x1, x0]
   3f890:	cmp	x0, x3
   3f894:	b.lt	3fa00 <mpfr_add1sp@@Base+0x56c>  // b.tstop
   3f898:	str	x3, [x21, #16]
   3f89c:	orr	x0, x6, x4
   3f8a0:	cmp	x0, #0x0
   3f8a4:	mov	w1, #0x0                   	// #0
   3f8a8:	ccmp	w23, #0x5, #0x4, ne  // ne = any
   3f8ac:	b.eq	407b0 <mpfr_add1sp@@Base+0x131c>  // b.none
   3f8b0:	cbnz	w23, 3fa18 <mpfr_add1sp@@Base+0x584>
   3f8b4:	cbz	x6, 3f8c8 <mpfr_add1sp@@Base+0x434>
   3f8b8:	cbnz	x4, 3fa30 <mpfr_add1sp@@Base+0x59c>
   3f8bc:	ldr	x0, [x5]
   3f8c0:	lsr	x0, x0, x20
   3f8c4:	tbnz	w0, #0, 3fa30 <mpfr_add1sp@@Base+0x59c>
   3f8c8:	ldr	w1, [x21, #8]
   3f8cc:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3f8d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3f8d4:	ldr	x2, [x0, #2576]
   3f8d8:	add	x0, x0, #0xa10
   3f8dc:	blr	x2
   3f8e0:	mrs	x2, tpidr_el0
   3f8e4:	add	x0, x2, x0
   3f8e8:	ldr	w2, [x0]
   3f8ec:	orr	w2, w2, #0x8
   3f8f0:	str	w2, [x0]
   3f8f4:	neg	w1, w1
   3f8f8:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3f8fc:	ldr	x0, [x11]
   3f900:	ldr	x2, [x12]
   3f904:	ldr	x1, [x11, #8]
   3f908:	ldr	x4, [x12, #8]
   3f90c:	adds	x0, x0, x2
   3f910:	adc	x1, x1, x4
   3f914:	extr	x0, x1, x0, #1
   3f918:	add	x3, x3, #0x1
   3f91c:	sub	w4, w20, #0x1
   3f920:	mov	x2, #0x1                   	// #1
   3f924:	lsl	x2, x2, x4
   3f928:	and	x6, x2, x0
   3f92c:	lsr	x1, x1, #1
   3f930:	orr	x1, x1, #0x8000000000000000
   3f934:	str	x1, [x5, #8]
   3f938:	bic	x0, x0, x2
   3f93c:	str	x0, [x5]
   3f940:	mov	x4, #0x0                   	// #0
   3f944:	b	3f878 <mpfr_add1sp@@Base+0x3e4>
   3f948:	mov	x1, x11
   3f94c:	mov	x11, x12
   3f950:	mov	x12, x1
   3f954:	mov	x1, x3
   3f958:	mov	x3, x0
   3f95c:	mov	x0, x1
   3f960:	b	3f7e0 <mpfr_add1sp@@Base+0x34c>
   3f964:	cmp	x2, #0x7f
   3f968:	b.hi	3f9e4 <mpfr_add1sp@@Base+0x550>  // b.pmore
   3f96c:	cmp	x2, #0x40
   3f970:	b.eq	3f9dc <mpfr_add1sp@@Base+0x548>  // b.none
   3f974:	mov	w4, #0x80                  	// #128
   3f978:	sub	w8, w4, w2
   3f97c:	ldr	x4, [x12, #8]
   3f980:	lsl	x4, x4, x8
   3f984:	ldr	x8, [x12]
   3f988:	orr	x8, x4, x8
   3f98c:	ldr	x1, [x11]
   3f990:	sub	w2, w2, #0x40
   3f994:	ldr	x0, [x12, #8]
   3f998:	lsr	x0, x0, x2
   3f99c:	adds	x0, x0, x1
   3f9a0:	ldr	x2, [x11, #8]
   3f9a4:	cinc	x2, x2, cs  // cs = hs, nlast
   3f9a8:	cbz	x2, 3f834 <mpfr_add1sp@@Base+0x3a0>
   3f9ac:	sub	w1, w20, #0x1
   3f9b0:	mov	x4, #0x1                   	// #1
   3f9b4:	lsl	x4, x4, x1
   3f9b8:	and	x6, x0, x4
   3f9bc:	eor	x4, x10, x4
   3f9c0:	and	x4, x4, x0
   3f9c4:	orr	x4, x4, x8
   3f9c8:	neg	x1, x7
   3f9cc:	and	x0, x1, x0
   3f9d0:	str	x0, [x5]
   3f9d4:	str	x2, [x5, #8]
   3f9d8:	b	3f878 <mpfr_add1sp@@Base+0x3e4>
   3f9dc:	ldr	x8, [x12]
   3f9e0:	b	3f98c <mpfr_add1sp@@Base+0x4f8>
   3f9e4:	ldr	x0, [x11]
   3f9e8:	str	x0, [x5]
   3f9ec:	ldr	x0, [x11, #8]
   3f9f0:	str	x0, [x5, #8]
   3f9f4:	mov	x4, #0x1                   	// #1
   3f9f8:	mov	x6, #0x0                   	// #0
   3f9fc:	b	3f878 <mpfr_add1sp@@Base+0x3e4>
   3fa00:	ldr	w2, [x21, #8]
   3fa04:	mov	w1, w23
   3fa08:	mov	x0, x21
   3fa0c:	bl	bf40 <mpfr_overflow@plt>
   3fa10:	mov	w1, w0
   3fa14:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fa18:	cmp	w23, #0x1
   3fa1c:	b.eq	3f8c8 <mpfr_add1sp@@Base+0x434>  // b.none
   3fa20:	ldr	w0, [x21, #8]
   3fa24:	add	w0, w23, w0, lsr #31
   3fa28:	cmp	w0, #0x3
   3fa2c:	b.eq	3f8c8 <mpfr_add1sp@@Base+0x434>  // b.none
   3fa30:	mov	x0, #0x1                   	// #1
   3fa34:	lsl	x20, x0, x20
   3fa38:	ldr	x0, [x5]
   3fa3c:	add	x20, x20, x0
   3fa40:	str	x20, [x5]
   3fa44:	cmp	x20, #0x0
   3fa48:	ldr	x0, [x5, #8]
   3fa4c:	cinc	x0, x0, eq  // eq = none
   3fa50:	str	x0, [x5, #8]
   3fa54:	cbz	x0, 3fa88 <mpfr_add1sp@@Base+0x5f4>
   3fa58:	ldr	w1, [x21, #8]
   3fa5c:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3fa60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fa64:	ldr	x2, [x0, #2576]
   3fa68:	add	x0, x0, #0xa10
   3fa6c:	blr	x2
   3fa70:	mrs	x2, tpidr_el0
   3fa74:	add	x0, x2, x0
   3fa78:	ldr	w2, [x0]
   3fa7c:	orr	w2, w2, #0x8
   3fa80:	str	w2, [x0]
   3fa84:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fa88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fa8c:	str	x0, [x5, #8]
   3fa90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fa94:	ldr	x1, [x0, #2544]
   3fa98:	add	x0, x0, #0x9f0
   3fa9c:	blr	x1
   3faa0:	mrs	x1, tpidr_el0
   3faa4:	ldr	x0, [x1, x0]
   3faa8:	cmp	x3, x0
   3faac:	b.ge	3fabc <mpfr_add1sp@@Base+0x628>  // b.tcont
   3fab0:	add	x0, x3, #0x1
   3fab4:	str	x0, [x21, #16]
   3fab8:	b	3fa58 <mpfr_add1sp@@Base+0x5c4>
   3fabc:	ldr	w2, [x21, #8]
   3fac0:	mov	w1, w23
   3fac4:	mov	x0, x21
   3fac8:	bl	bf40 <mpfr_overflow@plt>
   3facc:	mov	w1, w0
   3fad0:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fad4:	ldr	x5, [x1, #16]
   3fad8:	ldr	x0, [x2, #16]
   3fadc:	ldr	x6, [x21, #24]
   3fae0:	ldr	x1, [x1, #24]
   3fae4:	ldr	x3, [x2, #24]
   3fae8:	cmp	x5, x0
   3faec:	b.eq	3fb34 <mpfr_add1sp@@Base+0x6a0>  // b.none
   3faf0:	b.le	3fbd8 <mpfr_add1sp@@Base+0x744>
   3faf4:	sub	x0, x5, x0
   3faf8:	cmp	x0, #0x3f
   3fafc:	b.hi	3fc04 <mpfr_add1sp@@Base+0x770>  // b.pmore
   3fb00:	ldr	x4, [x1]
   3fb04:	ldr	x2, [x3]
   3fb08:	lsr	x1, x2, x0
   3fb0c:	neg	w0, w0
   3fb10:	lsl	x2, x2, x0
   3fb14:	adds	x1, x1, x4
   3fb18:	b.cc	3fbf4 <mpfr_add1sp@@Base+0x760>  // b.lo, b.ul, b.last
   3fb1c:	lsr	x0, x1, #1
   3fb20:	orr	x0, x0, #0x8000000000000000
   3fb24:	str	x0, [x6]
   3fb28:	and	x3, x1, #0x1
   3fb2c:	add	x5, x5, #0x1
   3fb30:	b	3fb58 <mpfr_add1sp@@Base+0x6c4>
   3fb34:	ldr	x0, [x1]
   3fb38:	ldr	x1, [x3]
   3fb3c:	add	x0, x0, x1
   3fb40:	and	x3, x0, #0x1
   3fb44:	lsr	x0, x0, #1
   3fb48:	orr	x0, x0, #0x8000000000000000
   3fb4c:	str	x0, [x6]
   3fb50:	add	x5, x5, #0x1
   3fb54:	mov	x2, #0x0                   	// #0
   3fb58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fb5c:	ldr	x1, [x0, #2544]
   3fb60:	add	x0, x0, #0x9f0
   3fb64:	blr	x1
   3fb68:	mrs	x1, tpidr_el0
   3fb6c:	ldr	x0, [x1, x0]
   3fb70:	cmp	x0, x5
   3fb74:	b.lt	3fc3c <mpfr_add1sp@@Base+0x7a8>  // b.tstop
   3fb78:	str	x5, [x21, #16]
   3fb7c:	orr	x0, x3, x2
   3fb80:	cmp	x0, #0x0
   3fb84:	mov	w1, #0x0                   	// #0
   3fb88:	ccmp	w23, #0x5, #0x4, ne  // ne = any
   3fb8c:	b.eq	407b0 <mpfr_add1sp@@Base+0x131c>  // b.none
   3fb90:	cbnz	w23, 3fc54 <mpfr_add1sp@@Base+0x7c0>
   3fb94:	cbz	x3, 3fba4 <mpfr_add1sp@@Base+0x710>
   3fb98:	cbnz	x2, 3fc6c <mpfr_add1sp@@Base+0x7d8>
   3fb9c:	ldr	x0, [x6]
   3fba0:	tbnz	w0, #0, 3fc6c <mpfr_add1sp@@Base+0x7d8>
   3fba4:	ldr	w1, [x21, #8]
   3fba8:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3fbac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fbb0:	ldr	x2, [x0, #2576]
   3fbb4:	add	x0, x0, #0xa10
   3fbb8:	blr	x2
   3fbbc:	mrs	x2, tpidr_el0
   3fbc0:	add	x0, x2, x0
   3fbc4:	ldr	w2, [x0]
   3fbc8:	orr	w2, w2, #0x8
   3fbcc:	str	w2, [x0]
   3fbd0:	neg	w1, w1
   3fbd4:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fbd8:	mov	x2, x1
   3fbdc:	mov	x1, x3
   3fbe0:	mov	x3, x2
   3fbe4:	mov	x2, x5
   3fbe8:	mov	x5, x0
   3fbec:	mov	x0, x2
   3fbf0:	b	3faf4 <mpfr_add1sp@@Base+0x660>
   3fbf4:	str	x1, [x6]
   3fbf8:	and	x3, x2, #0x8000000000000000
   3fbfc:	and	x2, x2, #0x7fffffffffffffff
   3fc00:	b	3fb58 <mpfr_add1sp@@Base+0x6c4>
   3fc04:	mov	w2, #0x1                   	// #1
   3fc08:	cmp	x0, #0x40
   3fc0c:	b.eq	3fc28 <mpfr_add1sp@@Base+0x794>  // b.none
   3fc10:	sxtw	x2, w2
   3fc14:	ldr	x1, [x1]
   3fc18:	str	x1, [x6]
   3fc1c:	cmp	x0, #0x40
   3fc20:	cset	x3, eq  // eq = none
   3fc24:	b	3fb58 <mpfr_add1sp@@Base+0x6c4>
   3fc28:	ldr	x3, [x3]
   3fc2c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3fc30:	cmp	x3, x2
   3fc34:	cset	w2, ne  // ne = any
   3fc38:	b	3fc10 <mpfr_add1sp@@Base+0x77c>
   3fc3c:	ldr	w2, [x21, #8]
   3fc40:	mov	w1, w23
   3fc44:	mov	x0, x21
   3fc48:	bl	bf40 <mpfr_overflow@plt>
   3fc4c:	mov	w1, w0
   3fc50:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fc54:	cmp	w23, #0x1
   3fc58:	b.eq	3fba4 <mpfr_add1sp@@Base+0x710>  // b.none
   3fc5c:	ldr	w0, [x21, #8]
   3fc60:	add	w0, w23, w0, lsr #31
   3fc64:	cmp	w0, #0x3
   3fc68:	b.eq	3fba4 <mpfr_add1sp@@Base+0x710>  // b.none
   3fc6c:	ldr	x0, [x6]
   3fc70:	add	x0, x0, #0x1
   3fc74:	str	x0, [x6]
   3fc78:	cbz	x0, 3fcac <mpfr_add1sp@@Base+0x818>
   3fc7c:	ldr	w1, [x21, #8]
   3fc80:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3fc84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fc88:	ldr	x2, [x0, #2576]
   3fc8c:	add	x0, x0, #0xa10
   3fc90:	blr	x2
   3fc94:	mrs	x2, tpidr_el0
   3fc98:	add	x0, x2, x0
   3fc9c:	ldr	w2, [x0]
   3fca0:	orr	w2, w2, #0x8
   3fca4:	str	w2, [x0]
   3fca8:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fcac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fcb0:	str	x0, [x6]
   3fcb4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3fcb8:	ldr	x1, [x0, #2544]
   3fcbc:	add	x0, x0, #0x9f0
   3fcc0:	blr	x1
   3fcc4:	mrs	x1, tpidr_el0
   3fcc8:	ldr	x0, [x1, x0]
   3fccc:	cmp	x5, x0
   3fcd0:	b.ge	3fce0 <mpfr_add1sp@@Base+0x84c>  // b.tcont
   3fcd4:	add	x0, x5, #0x1
   3fcd8:	str	x0, [x21, #16]
   3fcdc:	b	3fc7c <mpfr_add1sp@@Base+0x7e8>
   3fce0:	ldr	w2, [x21, #8]
   3fce4:	mov	w1, w23
   3fce8:	mov	x0, x21
   3fcec:	bl	bf40 <mpfr_overflow@plt>
   3fcf0:	mov	w1, w0
   3fcf4:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3fcf8:	ldr	x3, [x1, #16]
   3fcfc:	ldr	x0, [x2, #16]
   3fd00:	ldr	x4, [x21, #24]
   3fd04:	ldr	x8, [x1, #24]
   3fd08:	ldr	x6, [x2, #24]
   3fd0c:	mov	x1, #0xc0                  	// #192
   3fd10:	sub	x20, x1, x20
   3fd14:	cmp	x3, x0
   3fd18:	b.eq	3fdc8 <mpfr_add1sp@@Base+0x934>  // b.none
   3fd1c:	b.le	3fe48 <mpfr_add1sp@@Base+0x9b4>
   3fd20:	sub	x0, x3, x0
   3fd24:	mov	x7, #0x1                   	// #1
   3fd28:	lsl	x7, x7, x20
   3fd2c:	sub	x11, x7, #0x1
   3fd30:	cmp	x0, #0x3f
   3fd34:	b.hi	3ff34 <mpfr_add1sp@@Base+0xaa0>  // b.pmore
   3fd38:	ldr	x10, [x6]
   3fd3c:	mov	w1, #0x40                  	// #64
   3fd40:	sub	w1, w1, w0
   3fd44:	lsl	x2, x10, x1
   3fd48:	ldr	x12, [x8]
   3fd4c:	ldr	x9, [x6, #8]
   3fd50:	lsl	x5, x9, x1
   3fd54:	lsr	x10, x10, x0
   3fd58:	orr	x5, x5, x10
   3fd5c:	ldr	x10, [x8, #8]
   3fd60:	ldr	x6, [x6, #16]
   3fd64:	adds	x5, x5, x12
   3fd68:	cset	w12, cs  // cs = hs, nlast
   3fd6c:	lsl	x1, x6, x1
   3fd70:	lsr	x9, x9, x0
   3fd74:	orr	x1, x1, x9
   3fd78:	adc	x1, x10, x1
   3fd7c:	mov	w9, #0x1                   	// #1
   3fd80:	cmp	x10, x1
   3fd84:	b.hi	3fd94 <mpfr_add1sp@@Base+0x900>  // b.pmore
   3fd88:	cmp	w12, #0x0
   3fd8c:	ccmp	x10, x1, #0x0, ne  // ne = any
   3fd90:	cset	w9, eq  // eq = none
   3fd94:	sxtw	x9, w9
   3fd98:	ldr	x8, [x8, #16]
   3fd9c:	lsr	x0, x6, x0
   3fda0:	add	x0, x0, x8
   3fda4:	add	x0, x0, x9
   3fda8:	cmp	x8, x0
   3fdac:	b.hi	3fe64 <mpfr_add1sp@@Base+0x9d0>  // b.pmore
   3fdb0:	cmp	x9, #0x0
   3fdb4:	ccmp	x8, x0, #0x0, ne  // ne = any
   3fdb8:	b.eq	3fe64 <mpfr_add1sp@@Base+0x9d0>  // b.none
   3fdbc:	str	x1, [x4, #8]
   3fdc0:	str	x0, [x4, #16]
   3fdc4:	b	3fe88 <mpfr_add1sp@@Base+0x9f4>
   3fdc8:	ldr	x0, [x8]
   3fdcc:	ldr	x1, [x6]
   3fdd0:	ldr	x7, [x8, #8]
   3fdd4:	adds	x0, x0, x1
   3fdd8:	cset	w9, cs  // cs = hs, nlast
   3fddc:	ldr	x1, [x6, #8]
   3fde0:	adc	x5, x7, x1
   3fde4:	ldr	x1, [x8, #16]
   3fde8:	ldr	x2, [x6, #16]
   3fdec:	add	x2, x1, x2
   3fdf0:	mov	w1, #0x1                   	// #1
   3fdf4:	cmp	x7, x5
   3fdf8:	b.hi	3fe08 <mpfr_add1sp@@Base+0x974>  // b.pmore
   3fdfc:	cmp	w9, #0x0
   3fe00:	ccmp	x7, x5, #0x0, ne  // ne = any
   3fe04:	cset	w1, eq  // eq = none
   3fe08:	add	x1, x2, w1, sxtw
   3fe0c:	extr	x0, x5, x0, #1
   3fe10:	add	x3, x3, #0x1
   3fe14:	sub	w6, w20, #0x1
   3fe18:	mov	x2, #0x1                   	// #1
   3fe1c:	lsl	x2, x2, x6
   3fe20:	and	x8, x2, x0
   3fe24:	lsr	x6, x1, #1
   3fe28:	orr	x6, x6, #0x8000000000000000
   3fe2c:	str	x6, [x4, #16]
   3fe30:	extr	x1, x1, x5, #1
   3fe34:	str	x1, [x4, #8]
   3fe38:	bic	x0, x0, x2
   3fe3c:	str	x0, [x4]
   3fe40:	mov	x2, #0x0                   	// #0
   3fe44:	b	3feb0 <mpfr_add1sp@@Base+0xa1c>
   3fe48:	mov	x1, x8
   3fe4c:	mov	x8, x6
   3fe50:	mov	x6, x1
   3fe54:	mov	x1, x3
   3fe58:	mov	x3, x0
   3fe5c:	mov	x0, x1
   3fe60:	b	3fd20 <mpfr_add1sp@@Base+0x88c>
   3fe64:	and	x6, x5, #0x1
   3fe68:	orr	x2, x2, x6
   3fe6c:	extr	x5, x1, x5, #1
   3fe70:	extr	x1, x0, x1, #1
   3fe74:	str	x1, [x4, #8]
   3fe78:	lsr	x0, x0, #1
   3fe7c:	orr	x0, x0, #0x8000000000000000
   3fe80:	str	x0, [x4, #16]
   3fe84:	add	x3, x3, #0x1
   3fe88:	sub	w1, w20, #0x1
   3fe8c:	mov	x0, #0x1                   	// #1
   3fe90:	lsl	x0, x0, x1
   3fe94:	and	x8, x0, x5
   3fe98:	eor	x0, x11, x0
   3fe9c:	and	x0, x0, x5
   3fea0:	orr	x2, x0, x2
   3fea4:	neg	x6, x7
   3fea8:	and	x5, x6, x5
   3feac:	str	x5, [x4]
   3feb0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3feb4:	ldr	x1, [x0, #2544]
   3feb8:	add	x0, x0, #0x9f0
   3febc:	blr	x1
   3fec0:	mrs	x1, tpidr_el0
   3fec4:	ldr	x0, [x1, x0]
   3fec8:	cmp	x0, x3
   3fecc:	b.lt	400ac <mpfr_add1sp@@Base+0xc18>  // b.tstop
   3fed0:	str	x3, [x21, #16]
   3fed4:	orr	x0, x8, x2
   3fed8:	cmp	x0, #0x0
   3fedc:	mov	w1, #0x0                   	// #0
   3fee0:	ccmp	w23, #0x5, #0x4, ne  // ne = any
   3fee4:	b.eq	407b0 <mpfr_add1sp@@Base+0x131c>  // b.none
   3fee8:	cbnz	w23, 400c4 <mpfr_add1sp@@Base+0xc30>
   3feec:	cbz	x8, 3ff00 <mpfr_add1sp@@Base+0xa6c>
   3fef0:	cbnz	x2, 400dc <mpfr_add1sp@@Base+0xc48>
   3fef4:	ldr	x0, [x4]
   3fef8:	lsr	x0, x0, x20
   3fefc:	tbnz	w0, #0, 400dc <mpfr_add1sp@@Base+0xc48>
   3ff00:	ldr	w1, [x21, #8]
   3ff04:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   3ff08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   3ff0c:	ldr	x2, [x0, #2576]
   3ff10:	add	x0, x0, #0xa10
   3ff14:	blr	x2
   3ff18:	mrs	x2, tpidr_el0
   3ff1c:	add	x0, x2, x0
   3ff20:	ldr	w2, [x0]
   3ff24:	orr	w2, w2, #0x8
   3ff28:	str	w2, [x0]
   3ff2c:	neg	w1, w1
   3ff30:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   3ff34:	cmp	x0, #0x7f
   3ff38:	b.hi	3fff4 <mpfr_add1sp@@Base+0xb60>  // b.pmore
   3ff3c:	cmp	x0, #0x40
   3ff40:	b.eq	3ffe8 <mpfr_add1sp@@Base+0xb54>  // b.none
   3ff44:	ldr	x5, [x6, #8]
   3ff48:	mov	w1, #0x80                  	// #128
   3ff4c:	sub	w9, w1, w0
   3ff50:	lsl	x2, x5, x9
   3ff54:	ldr	x1, [x6]
   3ff58:	orr	x2, x2, x1
   3ff5c:	ldr	x1, [x6, #16]
   3ff60:	lsl	x1, x1, x9
   3ff64:	sub	w9, w0, #0x40
   3ff68:	lsr	x5, x5, x9
   3ff6c:	orr	x1, x1, x5
   3ff70:	ldr	x5, [x8]
   3ff74:	ldr	x9, [x8, #8]
   3ff78:	adds	x5, x5, x1
   3ff7c:	cset	w10, cs  // cs = hs, nlast
   3ff80:	sub	w0, w0, #0x40
   3ff84:	ldr	x1, [x6, #16]
   3ff88:	lsr	x1, x1, x0
   3ff8c:	adc	x1, x9, x1
   3ff90:	ldr	x6, [x8, #16]
   3ff94:	mov	w0, #0x1                   	// #1
   3ff98:	cmp	x9, x1
   3ff9c:	b.hi	3ffac <mpfr_add1sp@@Base+0xb18>  // b.pmore
   3ffa0:	cmp	w10, #0x0
   3ffa4:	ccmp	x9, x1, #0x0, ne  // ne = any
   3ffa8:	cset	w0, eq  // eq = none
   3ffac:	adds	x0, x6, w0, sxtw
   3ffb0:	b.eq	3fe64 <mpfr_add1sp@@Base+0x9d0>  // b.none
   3ffb4:	sub	w8, w20, #0x1
   3ffb8:	mov	x6, #0x1                   	// #1
   3ffbc:	lsl	x6, x6, x8
   3ffc0:	and	x8, x5, x6
   3ffc4:	eor	x6, x11, x6
   3ffc8:	and	x6, x6, x5
   3ffcc:	orr	x2, x6, x2
   3ffd0:	neg	x6, x7
   3ffd4:	and	x5, x6, x5
   3ffd8:	str	x5, [x4]
   3ffdc:	str	x1, [x4, #8]
   3ffe0:	str	x0, [x4, #16]
   3ffe4:	b	3feb0 <mpfr_add1sp@@Base+0xa1c>
   3ffe8:	ldr	x2, [x6]
   3ffec:	ldr	x1, [x6, #8]
   3fff0:	b	3ff70 <mpfr_add1sp@@Base+0xadc>
   3fff4:	cmp	x0, #0xbf
   3fff8:	b.hi	40088 <mpfr_add1sp@@Base+0xbf4>  // b.pmore
   3fffc:	mov	x1, #0x0                   	// #0
   40000:	cmp	x0, #0x80
   40004:	b.eq	40018 <mpfr_add1sp@@Base+0xb84>  // b.none
   40008:	mov	w1, #0xc0                  	// #192
   4000c:	sub	w2, w1, w0
   40010:	ldr	x1, [x6, #16]
   40014:	lsl	x1, x1, x2
   40018:	ldr	x2, [x6, #8]
   4001c:	ldr	x5, [x6]
   40020:	orr	x2, x2, x5
   40024:	orr	x2, x2, x1
   40028:	ldr	x1, [x8]
   4002c:	sub	w0, w0, #0x80
   40030:	ldr	x5, [x6, #16]
   40034:	lsr	x0, x5, x0
   40038:	ldr	x6, [x8, #8]
   4003c:	adds	x5, x0, x1
   40040:	cinc	x1, x6, cs  // cs = hs, nlast
   40044:	cmp	x6, x1
   40048:	ldr	x0, [x8, #16]
   4004c:	cinc	x0, x0, hi  // hi = pmore
   40050:	cbz	x0, 3fe64 <mpfr_add1sp@@Base+0x9d0>
   40054:	sub	w8, w20, #0x1
   40058:	mov	x6, #0x1                   	// #1
   4005c:	lsl	x6, x6, x8
   40060:	and	x8, x5, x6
   40064:	eor	x6, x11, x6
   40068:	and	x6, x6, x5
   4006c:	orr	x2, x6, x2
   40070:	neg	x6, x7
   40074:	and	x5, x6, x5
   40078:	str	x5, [x4]
   4007c:	str	x1, [x4, #8]
   40080:	str	x0, [x4, #16]
   40084:	b	3feb0 <mpfr_add1sp@@Base+0xa1c>
   40088:	ldr	x0, [x8]
   4008c:	str	x0, [x4]
   40090:	ldr	x0, [x8, #8]
   40094:	str	x0, [x4, #8]
   40098:	ldr	x0, [x8, #16]
   4009c:	str	x0, [x4, #16]
   400a0:	mov	x2, #0x1                   	// #1
   400a4:	mov	x8, #0x0                   	// #0
   400a8:	b	3feb0 <mpfr_add1sp@@Base+0xa1c>
   400ac:	ldr	w2, [x21, #8]
   400b0:	mov	w1, w23
   400b4:	mov	x0, x21
   400b8:	bl	bf40 <mpfr_overflow@plt>
   400bc:	mov	w1, w0
   400c0:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   400c4:	cmp	w23, #0x1
   400c8:	b.eq	3ff00 <mpfr_add1sp@@Base+0xa6c>  // b.none
   400cc:	ldr	w0, [x21, #8]
   400d0:	add	w0, w23, w0, lsr #31
   400d4:	cmp	w0, #0x3
   400d8:	b.eq	3ff00 <mpfr_add1sp@@Base+0xa6c>  // b.none
   400dc:	mov	x0, #0x1                   	// #1
   400e0:	lsl	x0, x0, x20
   400e4:	ldr	x1, [x4]
   400e8:	add	x0, x0, x1
   400ec:	str	x0, [x4]
   400f0:	cmp	x0, #0x0
   400f4:	ldr	x1, [x4, #8]
   400f8:	cinc	x1, x1, eq  // eq = none
   400fc:	str	x1, [x4, #8]
   40100:	orr	x0, x0, x1
   40104:	cmp	x0, #0x0
   40108:	ldr	x0, [x4, #16]
   4010c:	cinc	x0, x0, eq  // eq = none
   40110:	str	x0, [x4, #16]
   40114:	cbz	x0, 40148 <mpfr_add1sp@@Base+0xcb4>
   40118:	ldr	w1, [x21, #8]
   4011c:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   40120:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40124:	ldr	x2, [x0, #2576]
   40128:	add	x0, x0, #0xa10
   4012c:	blr	x2
   40130:	mrs	x2, tpidr_el0
   40134:	add	x0, x2, x0
   40138:	ldr	w2, [x0]
   4013c:	orr	w2, w2, #0x8
   40140:	str	w2, [x0]
   40144:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   40148:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4014c:	str	x0, [x4, #16]
   40150:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40154:	ldr	x1, [x0, #2544]
   40158:	add	x0, x0, #0x9f0
   4015c:	blr	x1
   40160:	mrs	x1, tpidr_el0
   40164:	ldr	x0, [x1, x0]
   40168:	cmp	x3, x0
   4016c:	b.ge	4017c <mpfr_add1sp@@Base+0xce8>  // b.tcont
   40170:	add	x0, x3, #0x1
   40174:	str	x0, [x21, #16]
   40178:	b	40118 <mpfr_add1sp@@Base+0xc84>
   4017c:	ldr	w2, [x21, #8]
   40180:	mov	w1, w23
   40184:	mov	x0, x21
   40188:	bl	bf40 <mpfr_overflow@plt>
   4018c:	mov	w1, w0
   40190:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   40194:	add	x25, x25, #0x1
   40198:	ldr	x20, [x21, #24]
   4019c:	mov	x3, x26
   401a0:	ldr	x2, [x19, #24]
   401a4:	ldr	x1, [x22, #24]
   401a8:	mov	x0, x20
   401ac:	bl	c5a0 <__gmpn_add_n@plt>
   401b0:	ldr	x22, [x20]
   401b4:	mov	w3, #0x1                   	// #1
   401b8:	mov	x2, x26
   401bc:	mov	x1, x20
   401c0:	mov	x0, x20
   401c4:	bl	bce0 <__gmpn_rshift@plt>
   401c8:	lsl	x26, x26, #3
   401cc:	sub	x26, x26, #0x8
   401d0:	ldr	x0, [x20, x26]
   401d4:	orr	x0, x0, #0x8000000000000000
   401d8:	str	x0, [x20, x26]
   401dc:	mov	x0, #0xffffffffffffffff    	// #-1
   401e0:	lsl	x0, x0, x27
   401e4:	ldr	x1, [x20]
   401e8:	and	x0, x0, x1
   401ec:	str	x0, [x20]
   401f0:	mov	w19, #0x0                   	// #0
   401f4:	cmp	w23, #0x5
   401f8:	b.eq	40754 <mpfr_add1sp@@Base+0x12c0>  // b.none
   401fc:	lsr	x22, x22, x27
   40200:	tbz	w22, #0, 40754 <mpfr_add1sp@@Base+0x12c0>
   40204:	cbnz	w23, 40270 <mpfr_add1sp@@Base+0xddc>
   40208:	lsr	x0, x0, x27
   4020c:	mov	w19, #0xffffffff            	// #-1
   40210:	tbz	w0, #0, 40754 <mpfr_add1sp@@Base+0x12c0>
   40214:	mov	x0, #0x1                   	// #1
   40218:	lsl	x27, x0, x27
   4021c:	ldr	x0, [x20]
   40220:	add	x0, x27, x0
   40224:	str	x0, [x20]
   40228:	cmp	x27, x0
   4022c:	b.ls	40628 <mpfr_add1sp@@Base+0x1194>  // b.plast
   40230:	mov	x1, x20
   40234:	ldr	x0, [x29, #120]
   40238:	add	x2, x20, x0, lsl #3
   4023c:	ldr	x0, [x1, #8]
   40240:	add	x0, x0, #0x1
   40244:	str	x0, [x1, #8]
   40248:	cbnz	x0, 40628 <mpfr_add1sp@@Base+0x1194>
   4024c:	add	x1, x1, #0x8
   40250:	cmp	x1, x2
   40254:	b.ne	4023c <mpfr_add1sp@@Base+0xda8>  // b.any
   40258:	add	x25, x25, #0x1
   4025c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40260:	ldr	x1, [x29, #120]
   40264:	str	x0, [x20, x1, lsl #3]
   40268:	mov	w19, #0x1                   	// #1
   4026c:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   40270:	ldr	w0, [x29, #116]
   40274:	add	w0, w0, w23
   40278:	cmp	w0, #0x3
   4027c:	b.eq	405c8 <mpfr_add1sp@@Base+0x1134>  // b.none
   40280:	mov	w19, #0xffffffff            	// #-1
   40284:	cmp	w23, #0x1
   40288:	b.ne	40214 <mpfr_add1sp@@Base+0xd80>  // b.any
   4028c:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   40290:	cmp	w23, #0x5
   40294:	b.ne	402b8 <mpfr_add1sp@@Base+0xe24>  // b.any
   40298:	ldr	x0, [x21, #24]
   4029c:	ldr	x1, [x22, #24]
   402a0:	cmp	x1, x0
   402a4:	b.eq	40600 <mpfr_add1sp@@Base+0x116c>  // b.none
   402a8:	lsl	x2, x26, #3
   402ac:	bl	ba10 <memcpy@plt>
   402b0:	mov	w19, #0xffffffff            	// #-1
   402b4:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   402b8:	cmp	x20, x24
   402bc:	b.cs	402f8 <mpfr_add1sp@@Base+0xe64>  // b.hs, b.nlast
   402c0:	cmp	w23, #0x1
   402c4:	b.ls	40298 <mpfr_add1sp@@Base+0xe04>  // b.plast
   402c8:	ldr	w0, [x29, #116]
   402cc:	add	w0, w0, w23
   402d0:	cmp	w0, #0x3
   402d4:	b.eq	40298 <mpfr_add1sp@@Base+0xe04>  // b.none
   402d8:	ldr	x20, [x21, #24]
   402dc:	ldr	x1, [x22, #24]
   402e0:	cmp	x1, x20
   402e4:	b.eq	40214 <mpfr_add1sp@@Base+0xd80>  // b.none
   402e8:	lsl	x2, x26, #3
   402ec:	mov	x0, x20
   402f0:	bl	ba10 <memcpy@plt>
   402f4:	b	40214 <mpfr_add1sp@@Base+0xd80>
   402f8:	cbnz	w23, 40344 <mpfr_add1sp@@Base+0xeb0>
   402fc:	ldr	x1, [x19, #24]
   40300:	add	x0, x1, x26, lsl #3
   40304:	ldur	x2, [x0, #-8]
   40308:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4030c:	cmp	x2, x0
   40310:	b.ne	402d8 <mpfr_add1sp@@Base+0xe44>  // b.any
   40314:	ldr	x0, [x29, #120]
   40318:	sub	x0, x0, #0x1
   4031c:	ldr	x2, [x1, x0, lsl #3]
   40320:	cbnz	x2, 402d8 <mpfr_add1sp@@Base+0xe44>
   40324:	sub	x0, x0, #0x1
   40328:	cmn	x0, #0x1
   4032c:	b.ne	4031c <mpfr_add1sp@@Base+0xe88>  // b.any
   40330:	ldr	x0, [x22, #24]
   40334:	ldr	x0, [x0]
   40338:	lsr	x0, x0, x27
   4033c:	tbz	w0, #0, 40298 <mpfr_add1sp@@Base+0xe04>
   40340:	b	402d8 <mpfr_add1sp@@Base+0xe44>
   40344:	cmp	w23, #0x1
   40348:	b.eq	40298 <mpfr_add1sp@@Base+0xe04>  // b.none
   4034c:	ldr	w0, [x29, #116]
   40350:	add	w0, w0, w23
   40354:	cmp	w0, #0x3
   40358:	b.ne	402d8 <mpfr_add1sp@@Base+0xe44>  // b.any
   4035c:	b	40298 <mpfr_add1sp@@Base+0xe04>
   40360:	ldr	x1, [x29, #96]
   40364:	add	x0, x29, #0x98
   40368:	bl	bdc0 <mpfr_tmp_allocate@plt>
   4036c:	mov	x28, x0
   40370:	b	406ac <mpfr_add1sp@@Base+0x1218>
   40374:	ldr	x1, [x19, #24]
   40378:	mov	x2, x0
   4037c:	lsl	x0, x0, #3
   40380:	str	x0, [x29, #104]
   40384:	add	x1, x1, x0
   40388:	cmp	x1, x28
   4038c:	b.eq	403a0 <mpfr_add1sp@@Base+0xf0c>  // b.none
   40390:	sub	x2, x26, x2
   40394:	lsl	x2, x2, #3
   40398:	mov	x0, x28
   4039c:	bl	ba10 <memcpy@plt>
   403a0:	ldr	x0, [x29, #128]
   403a4:	sub	x0, x26, x0
   403a8:	ldr	x2, [x29, #104]
   403ac:	mov	w1, #0x0                   	// #0
   403b0:	add	x0, x28, x0, lsl #3
   403b4:	bl	c110 <memset@plt>
   403b8:	b	406d4 <mpfr_add1sp@@Base+0x1240>
   403bc:	ldr	x0, [x29, #128]
   403c0:	lsl	x4, x0, #3
   403c4:	ldr	x1, [x19, #24]
   403c8:	sub	x2, x26, x0
   403cc:	str	x4, [x29, #104]
   403d0:	add	x1, x1, x4
   403d4:	mov	x0, x28
   403d8:	bl	bce0 <__gmpn_rshift@plt>
   403dc:	ldr	x0, [x29, #128]
   403e0:	sub	x0, x26, x0
   403e4:	ldr	x2, [x29, #104]
   403e8:	mov	w1, #0x0                   	// #0
   403ec:	add	x0, x28, x0, lsl #3
   403f0:	bl	c110 <memset@plt>
   403f4:	b	406d4 <mpfr_add1sp@@Base+0x1240>
   403f8:	mov	w0, w27
   403fc:	sub	x0, x0, x24
   40400:	ldr	x1, [x29, #136]
   40404:	add	x0, x0, x1
   40408:	cmp	x20, x0
   4040c:	b.lt	40714 <mpfr_add1sp@@Base+0x1280>  // b.tstop
   40410:	ldr	x2, [x19, #24]
   40414:	add	x1, x0, #0x3f
   40418:	cmp	x0, #0x0
   4041c:	csel	x1, x1, x0, lt  // lt = tstop
   40420:	ldr	x3, [x29, #120]
   40424:	sub	x1, x3, x1, asr #6
   40428:	negs	x3, x0
   4042c:	and	x0, x0, #0x3f
   40430:	and	x3, x3, #0x3f
   40434:	csneg	x0, x0, x3, mi  // mi = first
   40438:	mov	x3, #0x3f                  	// #63
   4043c:	sub	x3, x3, x0
   40440:	mov	x0, #0xffffffffffffffff    	// #-1
   40444:	lsl	x0, x0, x3
   40448:	ldr	x3, [x2, x1, lsl #3]
   4044c:	mov	x4, #0x1                   	// #1
   40450:	str	x4, [x29, #128]
   40454:	bics	xzr, x3, x0
   40458:	b.ne	40714 <mpfr_add1sp@@Base+0x1280>  // b.any
   4045c:	subs	x1, x1, #0x1
   40460:	b.mi	4046c <mpfr_add1sp@@Base+0xfd8>  // b.first
   40464:	ldr	x0, [x2, x1, lsl #3]
   40468:	cbz	x0, 4045c <mpfr_add1sp@@Base+0xfc8>
   4046c:	mvn	x1, x1
   40470:	lsr	x0, x1, #63
   40474:	str	x0, [x29, #128]
   40478:	b	40714 <mpfr_add1sp@@Base+0x1280>
   4047c:	ldr	x2, [x19, #24]
   40480:	subs	x20, x20, x24
   40484:	add	x0, x20, #0x3f
   40488:	csel	x0, x0, x20, mi  // mi = first
   4048c:	ldr	x1, [x29, #120]
   40490:	sub	x0, x1, x0, asr #6
   40494:	ldr	x3, [x2, x0, lsl #3]
   40498:	negs	x1, x20
   4049c:	and	x20, x20, #0x3f
   404a0:	and	x1, x1, #0x3f
   404a4:	csneg	x20, x20, x1, mi  // mi = first
   404a8:	mov	x1, #0x3f                  	// #63
   404ac:	sub	x20, x1, x20
   404b0:	mov	x1, #0x1                   	// #1
   404b4:	lsl	x1, x1, x20
   404b8:	and	x1, x1, x3
   404bc:	str	x1, [x29, #104]
   404c0:	mov	x1, #0xffffffffffffffff    	// #-1
   404c4:	lsl	x20, x1, x20
   404c8:	mov	x1, #0x1                   	// #1
   404cc:	str	x1, [x29, #128]
   404d0:	bics	xzr, x3, x20
   404d4:	b.ne	40714 <mpfr_add1sp@@Base+0x1280>  // b.any
   404d8:	subs	x0, x0, #0x1
   404dc:	b.mi	404e8 <mpfr_add1sp@@Base+0x1054>  // b.first
   404e0:	ldr	x1, [x2, x0, lsl #3]
   404e4:	cbz	x1, 404d8 <mpfr_add1sp@@Base+0x1044>
   404e8:	mvn	x0, x0
   404ec:	lsr	x0, x0, #63
   404f0:	str	x0, [x29, #128]
   404f4:	b	40714 <mpfr_add1sp@@Base+0x1280>
   404f8:	str	xzr, [x29, #128]
   404fc:	str	xzr, [x29, #104]
   40500:	b	40714 <mpfr_add1sp@@Base+0x1280>
   40504:	ldr	x0, [x20]
   40508:	and	x19, x19, x0
   4050c:	mov	w3, #0x1                   	// #1
   40510:	mov	x2, x26
   40514:	mov	x1, x20
   40518:	mov	x0, x20
   4051c:	bl	bce0 <__gmpn_rshift@plt>
   40520:	add	x25, x25, #0x1
   40524:	ldr	x0, [x29, #96]
   40528:	sub	x0, x0, #0x8
   4052c:	ldr	x1, [x20, x0]
   40530:	orr	x1, x1, #0x8000000000000000
   40534:	str	x1, [x20, x0]
   40538:	ldr	x0, [x20]
   4053c:	and	x24, x0, x24
   40540:	str	x24, [x20]
   40544:	ldr	x0, [x29, #128]
   40548:	ldr	x1, [x29, #104]
   4054c:	orr	x0, x0, x1
   40550:	str	x0, [x29, #128]
   40554:	str	x19, [x29, #104]
   40558:	b	40748 <mpfr_add1sp@@Base+0x12b4>
   4055c:	cbnz	w23, 40594 <mpfr_add1sp@@Base+0x1100>
   40560:	ldr	x0, [x29, #104]
   40564:	cbz	x0, 40584 <mpfr_add1sp@@Base+0x10f0>
   40568:	ldr	x0, [x29, #128]
   4056c:	cbnz	x0, 40214 <mpfr_add1sp@@Base+0xd80>
   40570:	ldr	x0, [x20]
   40574:	lsr	x0, x0, x27
   40578:	mov	w19, #0xffffffff            	// #-1
   4057c:	tbz	w0, #0, 40754 <mpfr_add1sp@@Base+0x12c0>
   40580:	b	40214 <mpfr_add1sp@@Base+0xd80>
   40584:	ldr	x0, [x29, #128]
   40588:	cmp	x0, #0x0
   4058c:	csetm	w19, ne  // ne = any
   40590:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   40594:	ldr	w0, [x29, #116]
   40598:	add	w0, w0, w23
   4059c:	cmp	w0, #0x3
   405a0:	b.eq	40630 <mpfr_add1sp@@Base+0x119c>  // b.none
   405a4:	ldr	x0, [x29, #104]
   405a8:	ldr	x1, [x29, #128]
   405ac:	orr	x0, x0, x1
   405b0:	cmp	x0, #0x0
   405b4:	ccmp	w23, #0x1, #0x4, ne  // ne = any
   405b8:	b.ne	40214 <mpfr_add1sp@@Base+0xd80>  // b.any
   405bc:	cmp	x0, #0x0
   405c0:	csetm	w19, ne  // ne = any
   405c4:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   405c8:	mov	w19, #0xffffffff            	// #-1
   405cc:	mov	w23, #0x1                   	// #1
   405d0:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   405d4:	ldr	x0, [x29, #152]
   405d8:	cbz	x0, 405e0 <mpfr_add1sp@@Base+0x114c>
   405dc:	bl	c410 <mpfr_tmp_free@plt>
   405e0:	ldr	w2, [x21, #8]
   405e4:	mov	w1, w23
   405e8:	mov	x0, x21
   405ec:	bl	bf40 <mpfr_overflow@plt>
   405f0:	mov	w1, w0
   405f4:	b	407b0 <mpfr_add1sp@@Base+0x131c>
   405f8:	bl	c410 <mpfr_tmp_free@plt>
   405fc:	b	40780 <mpfr_add1sp@@Base+0x12ec>
   40600:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40604:	ldr	x1, [x0, #2544]
   40608:	add	x0, x0, #0x9f0
   4060c:	blr	x1
   40610:	mrs	x1, tpidr_el0
   40614:	ldr	x0, [x1, x0]
   40618:	cmp	x0, x25
   4061c:	b.lt	405e0 <mpfr_add1sp@@Base+0x114c>  // b.tstop
   40620:	mov	w19, #0xffffffff            	// #-1
   40624:	b	40774 <mpfr_add1sp@@Base+0x12e0>
   40628:	mov	w19, #0x1                   	// #1
   4062c:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   40630:	ldr	x0, [x29, #104]
   40634:	ldr	x1, [x29, #128]
   40638:	orr	x0, x0, x1
   4063c:	cmp	x0, #0x0
   40640:	csetm	w19, ne  // ne = any
   40644:	mov	w23, #0x1                   	// #1
   40648:	b	40754 <mpfr_add1sp@@Base+0x12c0>
   4064c:	ldr	x24, [x2, #16]
   40650:	mov	x25, x0
   40654:	mov	x22, x1
   40658:	mov	x19, x2
   4065c:	add	x0, x20, #0x3e
   40660:	subs	x1, x20, #0x1
   40664:	csel	x0, x0, x1, mi  // mi = first
   40668:	asr	x0, x0, #6
   4066c:	str	x0, [x29, #120]
   40670:	add	x26, x0, #0x1
   40674:	neg	w27, w20
   40678:	and	w27, w27, #0x3f
   4067c:	subs	x24, x25, x24
   40680:	b.eq	40194 <mpfr_add1sp@@Base+0xd00>  // b.none
   40684:	cmp	x20, x24
   40688:	b.ls	40290 <mpfr_add1sp@@Base+0xdfc>  // b.plast
   4068c:	lsl	x0, x26, #3
   40690:	str	x0, [x29, #96]
   40694:	cmp	x0, #0x4, lsl #12
   40698:	b.hi	40360 <mpfr_add1sp@@Base+0xecc>  // b.pmore
   4069c:	add	x0, x0, #0xf
   406a0:	and	x0, x0, #0xfffffffffffffff0
   406a4:	sub	sp, sp, x0
   406a8:	mov	x28, sp
   406ac:	lsr	x0, x24, #6
   406b0:	str	x0, [x29, #128]
   406b4:	ands	x3, x24, #0x3f
   406b8:	b.eq	40374 <mpfr_add1sp@@Base+0xee0>  // b.none
   406bc:	ldr	x0, [x29, #128]
   406c0:	cbnz	x0, 403bc <mpfr_add1sp@@Base+0xf28>
   406c4:	mov	x2, x26
   406c8:	ldr	x1, [x19, #24]
   406cc:	mov	x0, x28
   406d0:	bl	bce0 <__gmpn_rshift@plt>
   406d4:	cmp	w23, #0x5
   406d8:	b.eq	404f8 <mpfr_add1sp@@Base+0x1064>  // b.none
   406dc:	cbz	w27, 4047c <mpfr_add1sp@@Base+0xfe8>
   406e0:	ldr	x1, [x28]
   406e4:	sub	w3, w27, #0x1
   406e8:	mov	x2, #0x1                   	// #1
   406ec:	lsl	x2, x2, x3
   406f0:	and	x0, x2, x1
   406f4:	str	x0, [x29, #104]
   406f8:	mov	x0, #0xffffffffffffffff    	// #-1
   406fc:	lsl	x0, x0, x3
   40700:	bics	x0, x1, x0
   40704:	str	x0, [x29, #128]
   40708:	b.eq	403f8 <mpfr_add1sp@@Base+0xf64>  // b.none
   4070c:	mov	x0, #0x1                   	// #1
   40710:	str	x0, [x29, #128]
   40714:	mov	x19, #0x1                   	// #1
   40718:	lsl	x19, x19, x27
   4071c:	neg	x24, x19
   40720:	ldr	x0, [x28]
   40724:	and	x0, x0, x24
   40728:	str	x0, [x28]
   4072c:	ldr	x20, [x21, #24]
   40730:	mov	x3, x26
   40734:	mov	x2, x28
   40738:	ldr	x1, [x22, #24]
   4073c:	mov	x0, x20
   40740:	bl	c5a0 <__gmpn_add_n@plt>
   40744:	cbnz	x0, 40504 <mpfr_add1sp@@Base+0x1070>
   40748:	mov	w19, #0x0                   	// #0
   4074c:	cmp	w23, #0x5
   40750:	b.ne	4055c <mpfr_add1sp@@Base+0x10c8>  // b.any
   40754:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40758:	ldr	x1, [x0, #2544]
   4075c:	add	x0, x0, #0x9f0
   40760:	blr	x1
   40764:	mrs	x1, tpidr_el0
   40768:	ldr	x0, [x1, x0]
   4076c:	cmp	x0, x25
   40770:	b.lt	405d4 <mpfr_add1sp@@Base+0x1140>  // b.tstop
   40774:	str	x25, [x21, #16]
   40778:	ldr	x0, [x29, #152]
   4077c:	cbnz	x0, 405f8 <mpfr_add1sp@@Base+0x1164>
   40780:	ldr	w1, [x21, #8]
   40784:	mul	w1, w19, w1
   40788:	cbz	w1, 407b0 <mpfr_add1sp@@Base+0x131c>
   4078c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40790:	ldr	x2, [x0, #2576]
   40794:	add	x0, x0, #0xa10
   40798:	blr	x2
   4079c:	mrs	x2, tpidr_el0
   407a0:	add	x0, x2, x0
   407a4:	ldr	w2, [x0]
   407a8:	orr	w2, w2, #0x8
   407ac:	str	w2, [x0]
   407b0:	mov	w0, w1
   407b4:	mov	sp, x29
   407b8:	ldp	x19, x20, [sp, #16]
   407bc:	ldp	x21, x22, [sp, #32]
   407c0:	ldp	x23, x24, [sp, #48]
   407c4:	ldp	x25, x26, [sp, #64]
   407c8:	ldp	x27, x28, [sp, #80]
   407cc:	ldp	x29, x30, [sp], #160
   407d0:	ret
   407d4:	stp	x29, x30, [sp, #-32]!
   407d8:	mov	x29, sp
   407dc:	str	x19, [sp, #16]
   407e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   407e4:	ldr	x1, [x0, #2624]
   407e8:	add	x0, x0, #0xa40
   407ec:	blr	x1
   407f0:	mrs	x19, tpidr_el0
   407f4:	add	x0, x19, x0
   407f8:	bl	be70 <mpfr_clear_cache@plt>
   407fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40800:	ldr	x1, [x0, #2560]
   40804:	add	x0, x0, #0xa00
   40808:	blr	x1
   4080c:	add	x0, x19, x0
   40810:	bl	be70 <mpfr_clear_cache@plt>
   40814:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40818:	ldr	x1, [x0, #2608]
   4081c:	add	x0, x0, #0xa30
   40820:	blr	x1
   40824:	add	x0, x19, x0
   40828:	bl	be70 <mpfr_clear_cache@plt>
   4082c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40830:	ldr	x1, [x0, #2592]
   40834:	add	x0, x0, #0xa20
   40838:	blr	x1
   4083c:	add	x0, x19, x0
   40840:	bl	be70 <mpfr_clear_cache@plt>
   40844:	ldr	x19, [sp, #16]
   40848:	ldp	x29, x30, [sp], #32
   4084c:	ret

0000000000040850 <mpfr_free_cache@@Base>:
   40850:	stp	x29, x30, [sp, #-16]!
   40854:	mov	x29, sp
   40858:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   4085c:	bl	c230 <mpfr_free_pool@plt>
   40860:	bl	407d4 <mpfr_add1sp@@Base+0x1340>
   40864:	ldp	x29, x30, [sp], #16
   40868:	ret

000000000004086c <mpfr_free_cache2@@Base>:
   4086c:	tbnz	w0, #0, 40874 <mpfr_free_cache2@@Base+0x8>
   40870:	ret
   40874:	stp	x29, x30, [sp, #-16]!
   40878:	mov	x29, sp
   4087c:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   40880:	bl	c230 <mpfr_free_pool@plt>
   40884:	bl	407d4 <mpfr_add1sp@@Base+0x1340>
   40888:	ldp	x29, x30, [sp], #16
   4088c:	ret

0000000000040890 <mpfr_mp_memory_cleanup@@Base>:
   40890:	stp	x29, x30, [sp, #-16]!
   40894:	mov	x29, sp
   40898:	bl	bb10 <mpfr_free_cache@plt>
   4089c:	mov	w0, #0x0                   	// #0
   408a0:	ldp	x29, x30, [sp], #16
   408a4:	ret

00000000000408a8 <mpfr_add_si@@Base>:
   408a8:	stp	x29, x30, [sp, #-16]!
   408ac:	mov	x29, sp
   408b0:	tbnz	x2, #63, 408c0 <mpfr_add_si@@Base+0x18>
   408b4:	bl	c260 <mpfr_add_ui@plt>
   408b8:	ldp	x29, x30, [sp], #16
   408bc:	ret
   408c0:	neg	x2, x2
   408c4:	bl	c530 <mpfr_sub_ui@plt>
   408c8:	b	408b8 <mpfr_add_si@@Base+0x10>

00000000000408cc <mpfr_sub_si@@Base>:
   408cc:	stp	x29, x30, [sp, #-16]!
   408d0:	mov	x29, sp
   408d4:	tbnz	x2, #63, 408e4 <mpfr_sub_si@@Base+0x18>
   408d8:	bl	c530 <mpfr_sub_ui@plt>
   408dc:	ldp	x29, x30, [sp], #16
   408e0:	ret
   408e4:	neg	x2, x2
   408e8:	bl	c260 <mpfr_add_ui@plt>
   408ec:	b	408dc <mpfr_sub_si@@Base+0x10>

00000000000408f0 <mpfr_si_sub@@Base>:
   408f0:	stp	x29, x30, [sp, #-32]!
   408f4:	mov	x29, sp
   408f8:	str	x19, [sp, #16]
   408fc:	mov	x19, x0
   40900:	mov	x4, x1
   40904:	mov	x1, x2
   40908:	tbz	x4, #63, 40948 <mpfr_si_sub@@Base+0x58>
   4090c:	neg	x2, x4
   40910:	cmp	w3, #0x2
   40914:	b.eq	40954 <mpfr_si_sub@@Base+0x64>  // b.none
   40918:	cmp	w3, #0x3
   4091c:	mov	w0, #0x2                   	// #2
   40920:	csel	w3, w3, w0, ne  // ne = any
   40924:	mov	x0, x19
   40928:	bl	c260 <mpfr_add_ui@plt>
   4092c:	neg	w0, w0
   40930:	ldr	w1, [x19, #8]
   40934:	neg	w1, w1
   40938:	str	w1, [x19, #8]
   4093c:	ldr	x19, [sp, #16]
   40940:	ldp	x29, x30, [sp], #32
   40944:	ret
   40948:	mov	x1, x4
   4094c:	bl	ca50 <mpfr_ui_sub@plt>
   40950:	b	4093c <mpfr_si_sub@@Base+0x4c>
   40954:	mov	w3, #0x3                   	// #3
   40958:	b	40924 <mpfr_si_sub@@Base+0x34>

000000000004095c <mpfr_mul_si@@Base>:
   4095c:	stp	x29, x30, [sp, #-32]!
   40960:	mov	x29, sp
   40964:	str	x19, [sp, #16]
   40968:	mov	x19, x0
   4096c:	tbnz	x2, #63, 40980 <mpfr_mul_si@@Base+0x24>
   40970:	bl	ba50 <mpfr_mul_ui@plt>
   40974:	ldr	x19, [sp, #16]
   40978:	ldp	x29, x30, [sp], #32
   4097c:	ret
   40980:	neg	x2, x2
   40984:	cmp	w3, #0x2
   40988:	b.eq	409b4 <mpfr_mul_si@@Base+0x58>  // b.none
   4098c:	cmp	w3, #0x3
   40990:	mov	w0, #0x2                   	// #2
   40994:	csel	w3, w3, w0, ne  // ne = any
   40998:	mov	x0, x19
   4099c:	bl	ba50 <mpfr_mul_ui@plt>
   409a0:	neg	w0, w0
   409a4:	ldr	w1, [x19, #8]
   409a8:	neg	w1, w1
   409ac:	str	w1, [x19, #8]
   409b0:	b	40974 <mpfr_mul_si@@Base+0x18>
   409b4:	mov	w3, #0x3                   	// #3
   409b8:	b	40998 <mpfr_mul_si@@Base+0x3c>

00000000000409bc <mpfr_div_si@@Base>:
   409bc:	stp	x29, x30, [sp, #-32]!
   409c0:	mov	x29, sp
   409c4:	str	x19, [sp, #16]
   409c8:	mov	x19, x0
   409cc:	tbnz	x2, #63, 409e0 <mpfr_div_si@@Base+0x24>
   409d0:	bl	cc60 <mpfr_div_ui@plt>
   409d4:	ldr	x19, [sp, #16]
   409d8:	ldp	x29, x30, [sp], #32
   409dc:	ret
   409e0:	neg	x2, x2
   409e4:	cmp	w3, #0x2
   409e8:	b.eq	40a14 <mpfr_div_si@@Base+0x58>  // b.none
   409ec:	cmp	w3, #0x3
   409f0:	mov	w0, #0x2                   	// #2
   409f4:	csel	w3, w3, w0, ne  // ne = any
   409f8:	mov	x0, x19
   409fc:	bl	cc60 <mpfr_div_ui@plt>
   40a00:	neg	w0, w0
   40a04:	ldr	w1, [x19, #8]
   40a08:	neg	w1, w1
   40a0c:	str	w1, [x19, #8]
   40a10:	b	409d4 <mpfr_div_si@@Base+0x18>
   40a14:	mov	w3, #0x3                   	// #3
   40a18:	b	409f8 <mpfr_div_si@@Base+0x3c>

0000000000040a1c <mpfr_si_div@@Base>:
   40a1c:	stp	x29, x30, [sp, #-32]!
   40a20:	mov	x29, sp
   40a24:	str	x19, [sp, #16]
   40a28:	mov	x19, x0
   40a2c:	tbz	x1, #63, 40a6c <mpfr_si_div@@Base+0x50>
   40a30:	neg	x1, x1
   40a34:	cmp	w3, #0x2
   40a38:	b.eq	40a74 <mpfr_si_div@@Base+0x58>  // b.none
   40a3c:	cmp	w3, #0x3
   40a40:	mov	w0, #0x2                   	// #2
   40a44:	csel	w3, w3, w0, ne  // ne = any
   40a48:	mov	x0, x19
   40a4c:	bl	c2f0 <mpfr_ui_div@plt>
   40a50:	neg	w0, w0
   40a54:	ldr	w1, [x19, #8]
   40a58:	neg	w1, w1
   40a5c:	str	w1, [x19, #8]
   40a60:	ldr	x19, [sp, #16]
   40a64:	ldp	x29, x30, [sp], #32
   40a68:	ret
   40a6c:	bl	c2f0 <mpfr_ui_div@plt>
   40a70:	b	40a60 <mpfr_si_div@@Base+0x44>
   40a74:	mov	w3, #0x3                   	// #3
   40a78:	b	40a48 <mpfr_si_div@@Base+0x2c>

0000000000040a7c <mpfr_cmp_ld@@Base>:
   40a7c:	stp	x29, x30, [sp, #-128]!
   40a80:	mov	x29, sp
   40a84:	stp	x19, x20, [sp, #16]
   40a88:	stp	x21, x22, [sp, #32]
   40a8c:	stp	x23, x24, [sp, #48]
   40a90:	str	x25, [sp, #64]
   40a94:	mov	x21, x0
   40a98:	str	q0, [sp, #80]
   40a9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40aa0:	ldr	x1, [x0, #2576]
   40aa4:	add	x0, x0, #0xa10
   40aa8:	blr	x1
   40aac:	mrs	x1, tpidr_el0
   40ab0:	ldr	w22, [x1, x0]
   40ab4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40ab8:	ldr	x2, [x0, #2512]
   40abc:	add	x0, x0, #0x9d0
   40ac0:	blr	x2
   40ac4:	add	x2, x1, x0
   40ac8:	ldr	x24, [x1, x0]
   40acc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40ad0:	ldr	x3, [x0, #2544]
   40ad4:	add	x0, x0, #0x9f0
   40ad8:	blr	x3
   40adc:	ldr	x23, [x1, x0]
   40ae0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   40ae4:	str	x3, [x2]
   40ae8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   40aec:	str	x2, [x1, x0]
   40af0:	add	x19, sp, #0x60
   40af4:	mov	x1, #0x71                  	// #113
   40af8:	mov	x0, x19
   40afc:	bl	ca80 <mpfr_init2@plt>
   40b00:	mov	w1, #0x0                   	// #0
   40b04:	ldr	q0, [sp, #80]
   40b08:	mov	x0, x19
   40b0c:	bl	ba40 <mpfr_set_ld@plt>
   40b10:	cbnz	w0, 40ba0 <mpfr_cmp_ld@@Base+0x124>
   40b14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40b18:	ldr	x1, [x0, #2576]
   40b1c:	add	x0, x0, #0xa10
   40b20:	blr	x1
   40b24:	mrs	x19, tpidr_el0
   40b28:	add	x25, x19, x0
   40b2c:	str	wzr, [x19, x0]
   40b30:	add	x20, sp, #0x60
   40b34:	mov	w2, #0x1                   	// #1
   40b38:	mov	x1, x20
   40b3c:	mov	x0, x21
   40b40:	bl	c9a0 <mpfr_cmp3@plt>
   40b44:	mov	w21, w0
   40b48:	ldr	w0, [x25]
   40b4c:	orr	w22, w22, w0
   40b50:	mov	x0, x20
   40b54:	bl	c070 <mpfr_clear@plt>
   40b58:	str	w22, [x25]
   40b5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40b60:	ldr	x1, [x0, #2512]
   40b64:	add	x0, x0, #0x9d0
   40b68:	blr	x1
   40b6c:	str	x24, [x19, x0]
   40b70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40b74:	ldr	x1, [x0, #2544]
   40b78:	add	x0, x0, #0x9f0
   40b7c:	blr	x1
   40b80:	str	x23, [x19, x0]
   40b84:	mov	w0, w21
   40b88:	ldp	x19, x20, [sp, #16]
   40b8c:	ldp	x21, x22, [sp, #32]
   40b90:	ldp	x23, x24, [sp, #48]
   40b94:	ldr	x25, [sp, #64]
   40b98:	ldp	x29, x30, [sp], #128
   40b9c:	ret
   40ba0:	add	x19, sp, #0x60
   40ba4:	mov	x1, #0x832                 	// #2098
   40ba8:	mov	x0, x19
   40bac:	bl	bed0 <mpfr_set_prec@plt>
   40bb0:	mov	w1, #0x0                   	// #0
   40bb4:	ldr	q0, [sp, #80]
   40bb8:	mov	x0, x19
   40bbc:	bl	ba40 <mpfr_set_ld@plt>
   40bc0:	b	40b14 <mpfr_cmp_ld@@Base+0x98>

0000000000040bc4 <mpfr_set_ui_2exp@@Base>:
   40bc4:	stp	x29, x30, [sp, #-96]!
   40bc8:	mov	x29, sp
   40bcc:	stp	x19, x20, [sp, #16]
   40bd0:	mov	x19, x0
   40bd4:	mov	w0, #0x1                   	// #1
   40bd8:	str	w0, [x19, #8]
   40bdc:	cbz	x1, 40cb4 <mpfr_set_ui_2exp@@Base+0xf0>
   40be0:	stp	x21, x22, [sp, #32]
   40be4:	stp	x23, x24, [sp, #48]
   40be8:	str	x25, [sp, #64]
   40bec:	mov	x20, x2
   40bf0:	mov	w23, w3
   40bf4:	str	wzr, [sp, #92]
   40bf8:	clz	x25, x1
   40bfc:	ldr	x22, [x19, #24]
   40c00:	ldr	x0, [x19]
   40c04:	add	x21, x0, #0x3e
   40c08:	subs	x0, x0, #0x1
   40c0c:	csel	x0, x21, x0, mi  // mi = first
   40c10:	asr	x21, x0, #6
   40c14:	lsl	x2, x21, #3
   40c18:	add	x24, x22, x2
   40c1c:	lsl	x1, x1, x25
   40c20:	str	x1, [x22, x21, lsl #3]
   40c24:	mov	w1, #0x0                   	// #0
   40c28:	mov	x0, x22
   40c2c:	bl	c110 <memset@plt>
   40c30:	mov	w2, #0x40                  	// #64
   40c34:	sub	w2, w2, w25
   40c38:	sxtw	x2, w2
   40c3c:	add	x20, x2, x20
   40c40:	ldr	x4, [x19]
   40c44:	cmp	x2, x4
   40c48:	b.gt	40cc0 <mpfr_set_ui_2exp@@Base+0xfc>
   40c4c:	str	x20, [x19, #16]
   40c50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40c54:	ldr	x1, [x0, #2512]
   40c58:	add	x0, x0, #0x9d0
   40c5c:	blr	x1
   40c60:	mrs	x1, tpidr_el0
   40c64:	ldr	x0, [x1, x0]
   40c68:	cmp	x0, x20
   40c6c:	b.gt	40c90 <mpfr_set_ui_2exp@@Base+0xcc>
   40c70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40c74:	ldr	x1, [x0, #2544]
   40c78:	add	x0, x0, #0x9f0
   40c7c:	blr	x1
   40c80:	mrs	x1, tpidr_el0
   40c84:	ldr	x0, [x1, x0]
   40c88:	cmp	x0, x20
   40c8c:	b.ge	40d20 <mpfr_set_ui_2exp@@Base+0x15c>  // b.tcont
   40c90:	mov	w2, w23
   40c94:	ldr	w1, [sp, #92]
   40c98:	mov	x0, x19
   40c9c:	bl	cb30 <mpfr_check_range@plt>
   40ca0:	mov	w1, w0
   40ca4:	ldp	x21, x22, [sp, #32]
   40ca8:	ldp	x23, x24, [sp, #48]
   40cac:	ldr	x25, [sp, #64]
   40cb0:	b	40d34 <mpfr_set_ui_2exp@@Base+0x170>
   40cb4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40cb8:	str	x0, [x19, #16]
   40cbc:	b	40d34 <mpfr_set_ui_2exp@@Base+0x170>
   40cc0:	add	x6, sp, #0x5c
   40cc4:	mov	w5, w23
   40cc8:	mov	w3, #0x0                   	// #0
   40ccc:	mov	x1, x24
   40cd0:	mov	x0, x24
   40cd4:	bl	ca20 <mpfr_round_raw@plt>
   40cd8:	cbz	w0, 40c4c <mpfr_set_ui_2exp@@Base+0x88>
   40cdc:	add	x20, x20, #0x1
   40ce0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40ce4:	str	x0, [x22, x21, lsl #3]
   40ce8:	b	40c4c <mpfr_set_ui_2exp@@Base+0x88>
   40cec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40cf0:	ldr	x2, [x0, #2576]
   40cf4:	add	x0, x0, #0xa10
   40cf8:	blr	x2
   40cfc:	mrs	x2, tpidr_el0
   40d00:	add	x0, x2, x0
   40d04:	ldr	w2, [x0]
   40d08:	orr	w2, w2, #0x8
   40d0c:	str	w2, [x0]
   40d10:	ldp	x21, x22, [sp, #32]
   40d14:	ldp	x23, x24, [sp, #48]
   40d18:	ldr	x25, [sp, #64]
   40d1c:	b	40d34 <mpfr_set_ui_2exp@@Base+0x170>
   40d20:	ldr	w1, [sp, #92]
   40d24:	cbnz	w1, 40cec <mpfr_set_ui_2exp@@Base+0x128>
   40d28:	ldp	x21, x22, [sp, #32]
   40d2c:	ldp	x23, x24, [sp, #48]
   40d30:	ldr	x25, [sp, #64]
   40d34:	mov	w0, w1
   40d38:	ldp	x19, x20, [sp, #16]
   40d3c:	ldp	x29, x30, [sp], #96
   40d40:	ret

0000000000040d44 <mpfr_set_si_2exp@@Base>:
   40d44:	stp	x29, x30, [sp, #-80]!
   40d48:	mov	x29, sp
   40d4c:	stp	x19, x20, [sp, #16]
   40d50:	mov	x19, x0
   40d54:	cbz	x1, 40e34 <mpfr_set_si_2exp@@Base+0xf0>
   40d58:	stp	x21, x22, [sp, #32]
   40d5c:	str	x23, [sp, #48]
   40d60:	mov	x20, x2
   40d64:	mov	w21, w3
   40d68:	str	wzr, [sp, #76]
   40d6c:	tbnz	x1, #63, 40e54 <mpfr_set_si_2exp@@Base+0x110>
   40d70:	clz	x4, x1
   40d74:	mov	w23, w4
   40d78:	ldr	x0, [x0, #24]
   40d7c:	ldr	x2, [x19]
   40d80:	add	x3, x2, #0x3e
   40d84:	subs	x2, x2, #0x1
   40d88:	csel	x3, x3, x2, mi  // mi = first
   40d8c:	asr	x3, x3, #6
   40d90:	lsl	x2, x3, #3
   40d94:	add	x22, x0, x2
   40d98:	lsl	x1, x1, x4
   40d9c:	str	x1, [x0, x3, lsl #3]
   40da0:	mov	w1, #0x0                   	// #0
   40da4:	bl	c110 <memset@plt>
   40da8:	mov	w3, #0x0                   	// #0
   40dac:	mov	w0, #0x1                   	// #1
   40db0:	str	w0, [x19, #8]
   40db4:	mov	w2, #0x40                  	// #64
   40db8:	sub	w2, w2, w23
   40dbc:	sxtw	x2, w2
   40dc0:	add	x20, x2, x20
   40dc4:	ldr	x4, [x19]
   40dc8:	cmp	x2, x4
   40dcc:	b.gt	40e9c <mpfr_set_si_2exp@@Base+0x158>
   40dd0:	str	x20, [x19, #16]
   40dd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40dd8:	ldr	x1, [x0, #2512]
   40ddc:	add	x0, x0, #0x9d0
   40de0:	blr	x1
   40de4:	mrs	x1, tpidr_el0
   40de8:	ldr	x0, [x1, x0]
   40dec:	cmp	x0, x20
   40df0:	b.gt	40e14 <mpfr_set_si_2exp@@Base+0xd0>
   40df4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40df8:	ldr	x1, [x0, #2544]
   40dfc:	add	x0, x0, #0x9f0
   40e00:	blr	x1
   40e04:	mrs	x1, tpidr_el0
   40e08:	ldr	x0, [x1, x0]
   40e0c:	cmp	x0, x20
   40e10:	b.ge	40ef4 <mpfr_set_si_2exp@@Base+0x1b0>  // b.tcont
   40e14:	mov	w2, w21
   40e18:	ldr	w1, [sp, #76]
   40e1c:	mov	x0, x19
   40e20:	bl	cb30 <mpfr_check_range@plt>
   40e24:	mov	w1, w0
   40e28:	ldp	x21, x22, [sp, #32]
   40e2c:	ldr	x23, [sp, #48]
   40e30:	b	40e44 <mpfr_set_si_2exp@@Base+0x100>
   40e34:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40e38:	str	x0, [x19, #16]
   40e3c:	mov	w0, #0x1                   	// #1
   40e40:	str	w0, [x19, #8]
   40e44:	mov	w0, w1
   40e48:	ldp	x19, x20, [sp, #16]
   40e4c:	ldp	x29, x30, [sp], #80
   40e50:	ret
   40e54:	neg	x1, x1
   40e58:	clz	x4, x1
   40e5c:	mov	w23, w4
   40e60:	ldr	x0, [x0, #24]
   40e64:	ldr	x2, [x19]
   40e68:	add	x3, x2, #0x3e
   40e6c:	subs	x2, x2, #0x1
   40e70:	csel	x3, x3, x2, mi  // mi = first
   40e74:	asr	x3, x3, #6
   40e78:	lsl	x2, x3, #3
   40e7c:	add	x22, x0, x2
   40e80:	lsl	x1, x1, x4
   40e84:	str	x1, [x0, x3, lsl #3]
   40e88:	mov	w1, #0x0                   	// #0
   40e8c:	bl	c110 <memset@plt>
   40e90:	mov	w3, #0x1                   	// #1
   40e94:	mov	w0, #0xffffffff            	// #-1
   40e98:	b	40db0 <mpfr_set_si_2exp@@Base+0x6c>
   40e9c:	add	x6, sp, #0x4c
   40ea0:	mov	w5, w21
   40ea4:	mov	x1, x22
   40ea8:	mov	x0, x22
   40eac:	bl	ca20 <mpfr_round_raw@plt>
   40eb0:	cbz	w0, 40dd0 <mpfr_set_si_2exp@@Base+0x8c>
   40eb4:	add	x20, x20, #0x1
   40eb8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40ebc:	str	x0, [x22]
   40ec0:	b	40dd0 <mpfr_set_si_2exp@@Base+0x8c>
   40ec4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40ec8:	ldr	x2, [x0, #2576]
   40ecc:	add	x0, x0, #0xa10
   40ed0:	blr	x2
   40ed4:	mrs	x2, tpidr_el0
   40ed8:	add	x0, x2, x0
   40edc:	ldr	w2, [x0]
   40ee0:	orr	w2, w2, #0x8
   40ee4:	str	w2, [x0]
   40ee8:	ldp	x21, x22, [sp, #32]
   40eec:	ldr	x23, [sp, #48]
   40ef0:	b	40e44 <mpfr_set_si_2exp@@Base+0x100>
   40ef4:	ldr	w1, [sp, #76]
   40ef8:	cbnz	w1, 40ec4 <mpfr_set_si_2exp@@Base+0x180>
   40efc:	ldp	x21, x22, [sp, #32]
   40f00:	ldr	x23, [sp, #48]
   40f04:	b	40e44 <mpfr_set_si_2exp@@Base+0x100>

0000000000040f08 <__gmpfr_set_uj_2exp@@Base>:
   40f08:	stp	x29, x30, [sp, #-80]!
   40f0c:	mov	x29, sp
   40f10:	str	x19, [sp, #16]
   40f14:	mov	x19, x0
   40f18:	cbz	x1, 40fb0 <__gmpfr_set_uj_2exp@@Base+0xa8>
   40f1c:	mov	w5, w3
   40f20:	mov	x4, #0x40                  	// #64
   40f24:	str	x4, [sp, #40]
   40f28:	add	x0, sp, #0x48
   40f2c:	str	x0, [sp, #64]
   40f30:	mov	w0, #0x1                   	// #1
   40f34:	str	w0, [sp, #48]
   40f38:	clz	x0, x1
   40f3c:	lsl	x1, x1, x0
   40f40:	str	x1, [sp, #72]
   40f44:	sub	x4, x4, x0
   40f48:	add	x2, x4, x2
   40f4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40f50:	ldr	x1, [x0, #2512]
   40f54:	add	x0, x0, #0x9d0
   40f58:	blr	x1
   40f5c:	mrs	x1, tpidr_el0
   40f60:	ldr	x0, [x1, x0]
   40f64:	cmp	x0, x2
   40f68:	b.gt	40fc8 <__gmpfr_set_uj_2exp@@Base+0xc0>
   40f6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   40f70:	ldr	x1, [x0, #2544]
   40f74:	add	x0, x0, #0x9f0
   40f78:	blr	x1
   40f7c:	mrs	x1, tpidr_el0
   40f80:	ldr	x0, [x1, x0]
   40f84:	cmp	x0, x2
   40f88:	b.lt	41004 <__gmpfr_set_uj_2exp@@Base+0xfc>  // b.tstop
   40f8c:	str	x2, [sp, #56]
   40f90:	mov	w3, #0x1                   	// #1
   40f94:	mov	w2, w5
   40f98:	add	x1, sp, #0x28
   40f9c:	mov	x0, x19
   40fa0:	bl	c6a0 <mpfr_set4@plt>
   40fa4:	ldr	x19, [sp, #16]
   40fa8:	ldp	x29, x30, [sp], #80
   40fac:	ret
   40fb0:	mov	w0, #0x1                   	// #1
   40fb4:	str	w0, [x19, #8]
   40fb8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40fbc:	str	x0, [x19, #16]
   40fc0:	mov	w0, #0x0                   	// #0
   40fc4:	b	40fa4 <__gmpfr_set_uj_2exp@@Base+0x9c>
   40fc8:	cbnz	w3, 40fe8 <__gmpfr_set_uj_2exp@@Base+0xe0>
   40fcc:	add	x2, x2, #0x1
   40fd0:	cmp	x0, x2
   40fd4:	b.gt	40ffc <__gmpfr_set_uj_2exp@@Base+0xf4>
   40fd8:	add	x0, sp, #0x28
   40fdc:	bl	bf00 <mpfr_powerof2_raw@plt>
   40fe0:	cmp	w0, #0x0
   40fe4:	cset	w5, ne  // ne = any
   40fe8:	mov	w2, #0x1                   	// #1
   40fec:	mov	w1, w5
   40ff0:	mov	x0, x19
   40ff4:	bl	c3c0 <mpfr_underflow@plt>
   40ff8:	b	40fa4 <__gmpfr_set_uj_2exp@@Base+0x9c>
   40ffc:	mov	w5, #0x1                   	// #1
   41000:	b	40fe8 <__gmpfr_set_uj_2exp@@Base+0xe0>
   41004:	mov	w2, #0x1                   	// #1
   41008:	mov	w1, w3
   4100c:	mov	x0, x19
   41010:	bl	bf40 <mpfr_overflow@plt>
   41014:	b	40fa4 <__gmpfr_set_uj_2exp@@Base+0x9c>

0000000000041018 <__gmpfr_set_uj@@Base>:
   41018:	stp	x29, x30, [sp, #-16]!
   4101c:	mov	x29, sp
   41020:	mov	w3, w2
   41024:	mov	x2, #0x0                   	// #0
   41028:	bl	c000 <__gmpfr_set_uj_2exp@plt>
   4102c:	ldp	x29, x30, [sp], #16
   41030:	ret

0000000000041034 <__gmpfr_set_sj_2exp@@Base>:
   41034:	stp	x29, x30, [sp, #-32]!
   41038:	mov	x29, sp
   4103c:	str	x19, [sp, #16]
   41040:	mov	x19, x0
   41044:	tbz	x1, #63, 41084 <__gmpfr_set_sj_2exp@@Base+0x50>
   41048:	neg	x1, x1
   4104c:	cmp	w3, #0x2
   41050:	b.eq	4108c <__gmpfr_set_sj_2exp@@Base+0x58>  // b.none
   41054:	cmp	w3, #0x3
   41058:	mov	w0, #0x2                   	// #2
   4105c:	csel	w3, w3, w0, ne  // ne = any
   41060:	mov	x0, x19
   41064:	bl	c000 <__gmpfr_set_uj_2exp@plt>
   41068:	ldr	w1, [x19, #8]
   4106c:	neg	w1, w1
   41070:	str	w1, [x19, #8]
   41074:	neg	w0, w0
   41078:	ldr	x19, [sp, #16]
   4107c:	ldp	x29, x30, [sp], #32
   41080:	ret
   41084:	bl	c000 <__gmpfr_set_uj_2exp@plt>
   41088:	b	41078 <__gmpfr_set_sj_2exp@@Base+0x44>
   4108c:	mov	w3, #0x3                   	// #3
   41090:	b	41060 <__gmpfr_set_sj_2exp@@Base+0x2c>

0000000000041094 <__gmpfr_set_sj@@Base>:
   41094:	stp	x29, x30, [sp, #-16]!
   41098:	mov	x29, sp
   4109c:	mov	w3, w2
   410a0:	mov	x2, #0x0                   	// #0
   410a4:	bl	c920 <__gmpfr_set_sj_2exp@plt>
   410a8:	ldp	x29, x30, [sp], #16
   410ac:	ret

00000000000410b0 <__gmpfr_mpfr_get_sj@@Base>:
   410b0:	stp	x29, x30, [sp, #-96]!
   410b4:	mov	x29, sp
   410b8:	stp	x19, x20, [sp, #16]
   410bc:	stp	x23, x24, [sp, #48]
   410c0:	mov	x20, x0
   410c4:	mov	w23, w1
   410c8:	bl	bbc0 <mpfr_fits_intmax_p@plt>
   410cc:	cbz	w0, 41258 <__gmpfr_mpfr_get_sj@@Base+0x1a8>
   410d0:	ldr	x1, [x20, #16]
   410d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   410d8:	cmp	x1, x0
   410dc:	b.eq	41360 <__gmpfr_mpfr_get_sj@@Base+0x2b0>  // b.none
   410e0:	stp	x21, x22, [sp, #32]
   410e4:	mov	x2, #0x0                   	// #0
   410e8:	add	x2, x2, #0x1
   410ec:	cmp	x2, #0x3f
   410f0:	b.ne	410e8 <__gmpfr_mpfr_get_sj@@Base+0x38>  // b.any
   410f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   410f8:	ldr	x1, [x0, #2576]
   410fc:	add	x0, x0, #0xa10
   41100:	blr	x1
   41104:	mrs	x2, tpidr_el0
   41108:	ldr	w24, [x2, x0]
   4110c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41110:	ldr	x1, [x0, #2512]
   41114:	add	x0, x0, #0x9d0
   41118:	blr	x1
   4111c:	add	x1, x2, x0
   41120:	ldr	x22, [x2, x0]
   41124:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41128:	ldr	x3, [x0, #2544]
   4112c:	add	x0, x0, #0x9f0
   41130:	blr	x3
   41134:	ldr	x21, [x2, x0]
   41138:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4113c:	str	x3, [x1]
   41140:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   41144:	str	x1, [x2, x0]
   41148:	add	x19, sp, #0x40
   4114c:	mov	x1, #0x3f                  	// #63
   41150:	mov	x0, x19
   41154:	bl	ca80 <mpfr_init2@plt>
   41158:	mov	w2, w23
   4115c:	mov	x1, x20
   41160:	mov	x0, x19
   41164:	bl	c300 <mpfr_rint@plt>
   41168:	ldr	x0, [sp, #80]
   4116c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   41170:	add	x0, x0, x1
   41174:	cmp	x0, #0x1
   41178:	b.ls	412a8 <__gmpfr_mpfr_get_sj@@Base+0x1f8>  // b.plast
   4117c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41180:	ldr	x1, [x0, #2576]
   41184:	add	x0, x0, #0xa10
   41188:	blr	x1
   4118c:	mrs	x1, tpidr_el0
   41190:	ldr	w20, [x1, x0]
   41194:	orr	w20, w24, w20
   41198:	ldr	x0, [sp, #80]
   4119c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   411a0:	cmp	x0, x1
   411a4:	b.eq	41348 <__gmpfr_mpfr_get_sj@@Base+0x298>  // b.none
   411a8:	ldr	x2, [sp, #88]
   411ac:	sxtw	x1, w0
   411b0:	cmp	w0, #0x40
   411b4:	b.gt	412c4 <__gmpfr_mpfr_get_sj@@Base+0x214>
   411b8:	cmp	x1, #0x40
   411bc:	b.eq	412dc <__gmpfr_mpfr_get_sj@@Base+0x22c>  // b.none
   411c0:	ldr	w1, [sp, #72]
   411c4:	cmp	w1, #0x0
   411c8:	b.le	41314 <__gmpfr_mpfr_get_sj@@Base+0x264>
   411cc:	ldr	x3, [sp, #64]
   411d0:	add	x1, x3, #0x3e
   411d4:	subs	x3, x3, #0x1
   411d8:	csel	x1, x1, x3, mi  // mi = first
   411dc:	asr	x1, x1, #6
   411e0:	cmp	w1, #0x0
   411e4:	ccmp	w0, #0x0, #0x4, ge  // ge = tcont
   411e8:	b.le	41350 <__gmpfr_mpfr_get_sj@@Base+0x2a0>
   411ec:	ldr	x19, [x2, w1, sxtw #3]
   411f0:	neg	w0, w0
   411f4:	lsr	x19, x19, x0
   411f8:	add	x0, sp, #0x40
   411fc:	bl	c070 <mpfr_clear@plt>
   41200:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41204:	ldr	x1, [x0, #2576]
   41208:	add	x0, x0, #0xa10
   4120c:	blr	x1
   41210:	mrs	x1, tpidr_el0
   41214:	str	w20, [x1, x0]
   41218:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4121c:	ldr	x2, [x0, #2512]
   41220:	add	x0, x0, #0x9d0
   41224:	blr	x2
   41228:	str	x22, [x1, x0]
   4122c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41230:	ldr	x2, [x0, #2544]
   41234:	add	x0, x0, #0x9f0
   41238:	blr	x2
   4123c:	str	x21, [x1, x0]
   41240:	ldp	x21, x22, [sp, #32]
   41244:	mov	x0, x19
   41248:	ldp	x19, x20, [sp, #16]
   4124c:	ldp	x23, x24, [sp, #48]
   41250:	ldp	x29, x30, [sp], #96
   41254:	ret
   41258:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4125c:	ldr	x1, [x0, #2576]
   41260:	add	x0, x0, #0xa10
   41264:	blr	x1
   41268:	mrs	x1, tpidr_el0
   4126c:	add	x0, x1, x0
   41270:	ldr	w1, [x0]
   41274:	orr	w1, w1, #0x10
   41278:	str	w1, [x0]
   4127c:	ldr	x1, [x20, #16]
   41280:	mov	x19, #0x0                   	// #0
   41284:	mov	x0, #0x2                   	// #2
   41288:	movk	x0, #0x8000, lsl #48
   4128c:	cmp	x1, x0
   41290:	b.eq	41244 <__gmpfr_mpfr_get_sj@@Base+0x194>  // b.none
   41294:	ldr	w0, [x20, #8]
   41298:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   4129c:	cmp	w0, #0x0
   412a0:	cinv	x19, x19, lt  // lt = tstop
   412a4:	b	41244 <__gmpfr_mpfr_get_sj@@Base+0x194>
   412a8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   412ac:	add	x2, x2, #0xfc8
   412b0:	mov	w1, #0x3e                  	// #62
   412b4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   412b8:	add	x0, x0, #0x40
   412bc:	bl	cb40 <mpfr_assert_fail@plt>
   412c0:	b	4117c <__gmpfr_mpfr_get_sj@@Base+0xcc>
   412c4:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   412c8:	add	x2, x2, #0x50
   412cc:	mov	w1, #0x4b                  	// #75
   412d0:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   412d4:	add	x0, x0, #0x40
   412d8:	bl	cb40 <mpfr_assert_fail@plt>
   412dc:	ldr	w0, [sp, #72]
   412e0:	tbz	w0, #31, 412f4 <__gmpfr_mpfr_get_sj@@Base+0x244>
   412e4:	add	x0, sp, #0x40
   412e8:	bl	bf00 <mpfr_powerof2_raw@plt>
   412ec:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   412f0:	cbnz	w0, 411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   412f4:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   412f8:	add	x2, x2, #0x70
   412fc:	mov	w1, #0x53                  	// #83
   41300:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   41304:	add	x0, x0, #0x40
   41308:	bl	cb40 <mpfr_assert_fail@plt>
   4130c:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   41310:	b	411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   41314:	ldr	x3, [sp, #64]
   41318:	add	x1, x3, #0x3e
   4131c:	subs	x3, x3, #0x1
   41320:	csel	x1, x1, x3, mi  // mi = first
   41324:	asr	x1, x1, #6
   41328:	cmp	w1, #0x0
   4132c:	ccmp	w0, #0x0, #0x4, ge  // ge = tcont
   41330:	b.le	41358 <__gmpfr_mpfr_get_sj@@Base+0x2a8>
   41334:	ldr	x19, [x2, w1, sxtw #3]
   41338:	neg	w0, w0
   4133c:	lsr	x19, x19, x0
   41340:	neg	x19, x19
   41344:	b	411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   41348:	mov	x19, #0x0                   	// #0
   4134c:	b	411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   41350:	mov	x19, #0x0                   	// #0
   41354:	b	411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   41358:	mov	x19, #0x0                   	// #0
   4135c:	b	411f8 <__gmpfr_mpfr_get_sj@@Base+0x148>
   41360:	mov	x19, #0x0                   	// #0
   41364:	b	41244 <__gmpfr_mpfr_get_sj@@Base+0x194>

0000000000041368 <__gmpfr_mpfr_get_uj@@Base>:
   41368:	stp	x29, x30, [sp, #-96]!
   4136c:	mov	x29, sp
   41370:	stp	x19, x20, [sp, #16]
   41374:	stp	x21, x22, [sp, #32]
   41378:	stp	x23, x24, [sp, #48]
   4137c:	mov	x19, x0
   41380:	mov	w23, w1
   41384:	bl	c010 <mpfr_fits_uintmax_p@plt>
   41388:	cbz	w0, 414a4 <__gmpfr_mpfr_get_uj@@Base+0x13c>
   4138c:	ldr	x1, [x19, #16]
   41390:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41394:	cmp	x1, x0
   41398:	b.eq	415dc <__gmpfr_mpfr_get_uj@@Base+0x274>  // b.none
   4139c:	mov	x2, #0x0                   	// #0
   413a0:	add	x2, x2, #0x1
   413a4:	cmp	x2, #0x40
   413a8:	b.ne	413a0 <__gmpfr_mpfr_get_uj@@Base+0x38>  // b.any
   413ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   413b0:	ldr	x1, [x0, #2576]
   413b4:	add	x0, x0, #0xa10
   413b8:	blr	x1
   413bc:	mrs	x2, tpidr_el0
   413c0:	ldr	w24, [x2, x0]
   413c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   413c8:	ldr	x1, [x0, #2512]
   413cc:	add	x0, x0, #0x9d0
   413d0:	blr	x1
   413d4:	add	x1, x2, x0
   413d8:	ldr	x21, [x2, x0]
   413dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   413e0:	ldr	x3, [x0, #2544]
   413e4:	add	x0, x0, #0x9f0
   413e8:	blr	x3
   413ec:	ldr	x20, [x2, x0]
   413f0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   413f4:	str	x3, [x1]
   413f8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   413fc:	str	x1, [x2, x0]
   41400:	add	x22, sp, #0x40
   41404:	mov	x1, #0x40                  	// #64
   41408:	mov	x0, x22
   4140c:	bl	ca80 <mpfr_init2@plt>
   41410:	mov	w2, w23
   41414:	mov	x1, x19
   41418:	mov	x0, x22
   4141c:	bl	c300 <mpfr_rint@plt>
   41420:	ldr	x0, [sp, #80]
   41424:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   41428:	add	x0, x0, x1
   4142c:	cmp	x0, #0x1
   41430:	b.ls	414f4 <__gmpfr_mpfr_get_uj@@Base+0x18c>  // b.plast
   41434:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41438:	ldr	x1, [x0, #2576]
   4143c:	add	x0, x0, #0xa10
   41440:	blr	x1
   41444:	mrs	x1, tpidr_el0
   41448:	ldr	w19, [x1, x0]
   4144c:	orr	w19, w24, w19
   41450:	ldr	x1, [sp, #80]
   41454:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41458:	cmp	x1, x0
   4145c:	b.eq	41570 <__gmpfr_mpfr_get_uj@@Base+0x208>  // b.none
   41460:	ldr	w0, [sp, #72]
   41464:	cmp	w0, #0x0
   41468:	b.le	41510 <__gmpfr_mpfr_get_uj@@Base+0x1a8>
   4146c:	ldr	x4, [sp, #88]
   41470:	ldr	x0, [sp, #80]
   41474:	mov	w1, w0
   41478:	cmp	w0, #0x40
   4147c:	b.gt	4152c <__gmpfr_mpfr_get_uj@@Base+0x1c4>
   41480:	ldr	x2, [sp, #64]
   41484:	add	x0, x2, #0x3e
   41488:	subs	x2, x2, #0x1
   4148c:	csel	x0, x0, x2, mi  // mi = first
   41490:	asr	x0, x0, #6
   41494:	tbnz	w0, #31, 415d4 <__gmpfr_mpfr_get_uj@@Base+0x26c>
   41498:	sxtw	x0, w0
   4149c:	mov	x22, #0x0                   	// #0
   414a0:	b	4155c <__gmpfr_mpfr_get_uj@@Base+0x1f4>
   414a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   414a8:	ldr	x1, [x0, #2576]
   414ac:	add	x0, x0, #0xa10
   414b0:	blr	x1
   414b4:	mrs	x1, tpidr_el0
   414b8:	add	x0, x1, x0
   414bc:	ldr	w1, [x0]
   414c0:	orr	w1, w1, #0x10
   414c4:	str	w1, [x0]
   414c8:	ldr	x1, [x19, #16]
   414cc:	mov	x22, #0x0                   	// #0
   414d0:	mov	x0, #0x2                   	// #2
   414d4:	movk	x0, #0x8000, lsl #48
   414d8:	cmp	x1, x0
   414dc:	b.eq	415bc <__gmpfr_mpfr_get_uj@@Base+0x254>  // b.none
   414e0:	ldrsw	x22, [x19, #8]
   414e4:	mov	x0, #0x0                   	// #0
   414e8:	cmp	x22, x0
   414ec:	csetm	x22, ge  // ge = tcont
   414f0:	b	415bc <__gmpfr_mpfr_get_uj@@Base+0x254>
   414f4:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   414f8:	add	x2, x2, #0xfc8
   414fc:	mov	w1, #0x3c                  	// #60
   41500:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   41504:	add	x0, x0, #0xa8
   41508:	bl	cb40 <mpfr_assert_fail@plt>
   4150c:	b	41434 <__gmpfr_mpfr_get_uj@@Base+0xcc>
   41510:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   41514:	add	x2, x2, #0xb8
   41518:	mov	w1, #0x47                  	// #71
   4151c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   41520:	add	x0, x0, #0xa8
   41524:	bl	cb40 <mpfr_assert_fail@plt>
   41528:	b	4146c <__gmpfr_mpfr_get_uj@@Base+0x104>
   4152c:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   41530:	add	x2, x2, #0xd0
   41534:	mov	w1, #0x4a                  	// #74
   41538:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4153c:	add	x0, x0, #0xa8
   41540:	bl	cb40 <mpfr_assert_fail@plt>
   41544:	neg	w2, w1
   41548:	ldr	x3, [x4, x0, lsl #3]
   4154c:	lsr	x2, x3, x2
   41550:	add	x22, x22, x2
   41554:	sub	x0, x0, #0x1
   41558:	tbnz	w0, #31, 41574 <__gmpfr_mpfr_get_uj@@Base+0x20c>
   4155c:	subs	w1, w1, #0x40
   41560:	b.mi	41544 <__gmpfr_mpfr_get_uj@@Base+0x1dc>  // b.first
   41564:	ldr	x2, [x4, x0, lsl #3]
   41568:	lsl	x2, x2, x1
   4156c:	b	41550 <__gmpfr_mpfr_get_uj@@Base+0x1e8>
   41570:	mov	x22, #0x0                   	// #0
   41574:	add	x0, sp, #0x40
   41578:	bl	c070 <mpfr_clear@plt>
   4157c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41580:	ldr	x1, [x0, #2576]
   41584:	add	x0, x0, #0xa10
   41588:	blr	x1
   4158c:	mrs	x1, tpidr_el0
   41590:	str	w19, [x1, x0]
   41594:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41598:	ldr	x2, [x0, #2512]
   4159c:	add	x0, x0, #0x9d0
   415a0:	blr	x2
   415a4:	str	x21, [x1, x0]
   415a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   415ac:	ldr	x2, [x0, #2544]
   415b0:	add	x0, x0, #0x9f0
   415b4:	blr	x2
   415b8:	str	x20, [x1, x0]
   415bc:	mov	x0, x22
   415c0:	ldp	x19, x20, [sp, #16]
   415c4:	ldp	x21, x22, [sp, #32]
   415c8:	ldp	x23, x24, [sp, #48]
   415cc:	ldp	x29, x30, [sp], #96
   415d0:	ret
   415d4:	mov	x22, #0x0                   	// #0
   415d8:	b	41574 <__gmpfr_mpfr_get_uj@@Base+0x20c>
   415dc:	mov	x22, #0x0                   	// #0
   415e0:	b	415bc <__gmpfr_mpfr_get_uj@@Base+0x254>

00000000000415e4 <mpfr_get_z@@Base>:
   415e4:	stp	x29, x30, [sp, #-112]!
   415e8:	mov	x29, sp
   415ec:	stp	x19, x20, [sp, #16]
   415f0:	mov	x19, x0
   415f4:	mov	x20, x1
   415f8:	ldr	x1, [x1, #16]
   415fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   41600:	cmp	x1, x0
   41604:	b.le	41760 <mpfr_get_z@@Base+0x17c>
   41608:	stp	x21, x22, [sp, #32]
   4160c:	stp	x23, x24, [sp, #48]
   41610:	str	x25, [sp, #64]
   41614:	mov	w25, w2
   41618:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4161c:	ldr	x2, [x0, #2576]
   41620:	add	x0, x0, #0xa10
   41624:	blr	x2
   41628:	mrs	x3, tpidr_el0
   4162c:	ldr	w24, [x3, x0]
   41630:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41634:	ldr	x2, [x0, #2512]
   41638:	add	x0, x0, #0x9d0
   4163c:	blr	x2
   41640:	add	x2, x3, x0
   41644:	ldr	x23, [x3, x0]
   41648:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4164c:	ldr	x4, [x0, #2544]
   41650:	add	x0, x0, #0x9f0
   41654:	blr	x4
   41658:	ldr	x22, [x3, x0]
   4165c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   41660:	str	x4, [x2]
   41664:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   41668:	str	x2, [x3, x0]
   4166c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   41670:	cmp	x1, x0
   41674:	b.ge	417a8 <mpfr_get_z@@Base+0x1c4>  // b.tcont
   41678:	cmp	x1, #0x0
   4167c:	add	x21, sp, #0x50
   41680:	csinc	x1, x1, xzr, gt
   41684:	mov	x0, x21
   41688:	bl	ca80 <mpfr_init2@plt>
   4168c:	mov	w2, w25
   41690:	mov	x1, x20
   41694:	mov	x0, x21
   41698:	bl	c300 <mpfr_rint@plt>
   4169c:	mov	w20, w0
   416a0:	add	w0, w0, #0x1
   416a4:	tst	w0, #0xfffffffd
   416a8:	b.eq	417c0 <mpfr_get_z@@Base+0x1dc>  // b.none
   416ac:	ldr	x0, [sp, #96]
   416b0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   416b4:	add	x0, x0, x1
   416b8:	cmp	x0, #0x1
   416bc:	b.ls	417dc <mpfr_get_z@@Base+0x1f8>  // b.plast
   416c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   416c4:	ldr	x1, [x0, #2576]
   416c8:	add	x0, x0, #0xa10
   416cc:	blr	x1
   416d0:	mrs	x1, tpidr_el0
   416d4:	ldr	w0, [x1, x0]
   416d8:	orr	w24, w24, w0
   416dc:	add	x1, sp, #0x50
   416e0:	mov	x0, x19
   416e4:	bl	cac0 <mpfr_get_z_2exp@plt>
   416e8:	mov	x2, x0
   416ec:	tbnz	x0, #63, 417f8 <mpfr_get_z@@Base+0x214>
   416f0:	mov	x1, x19
   416f4:	mov	x0, x19
   416f8:	bl	c200 <__gmpz_mul_2exp@plt>
   416fc:	add	x0, sp, #0x50
   41700:	bl	c070 <mpfr_clear@plt>
   41704:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41708:	ldr	x1, [x0, #2576]
   4170c:	add	x0, x0, #0xa10
   41710:	blr	x1
   41714:	mrs	x1, tpidr_el0
   41718:	str	w24, [x1, x0]
   4171c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41720:	ldr	x2, [x0, #2512]
   41724:	add	x0, x0, #0x9d0
   41728:	blr	x2
   4172c:	str	x23, [x1, x0]
   41730:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41734:	ldr	x2, [x0, #2544]
   41738:	add	x0, x0, #0x9f0
   4173c:	blr	x2
   41740:	str	x22, [x1, x0]
   41744:	ldp	x21, x22, [sp, #32]
   41748:	ldp	x23, x24, [sp, #48]
   4174c:	ldr	x25, [sp, #64]
   41750:	mov	w0, w20
   41754:	ldp	x19, x20, [sp, #16]
   41758:	ldp	x29, x30, [sp], #112
   4175c:	ret
   41760:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41764:	cmp	x1, x0
   41768:	b.ne	41780 <mpfr_get_z@@Base+0x19c>  // b.any
   4176c:	mov	x1, #0x0                   	// #0
   41770:	mov	x0, x19
   41774:	bl	bcb0 <__gmpz_set_ui@plt>
   41778:	mov	w20, #0x0                   	// #0
   4177c:	b	41750 <mpfr_get_z@@Base+0x16c>
   41780:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41784:	ldr	x1, [x0, #2576]
   41788:	add	x0, x0, #0xa10
   4178c:	blr	x1
   41790:	mrs	x1, tpidr_el0
   41794:	add	x0, x1, x0
   41798:	ldr	w1, [x0]
   4179c:	orr	w1, w1, #0x10
   417a0:	str	w1, [x0]
   417a4:	b	4176c <mpfr_get_z@@Base+0x188>
   417a8:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   417ac:	add	x2, x2, #0xf0
   417b0:	mov	w1, #0x31                  	// #49
   417b4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   417b8:	add	x0, x0, #0x138
   417bc:	bl	cb40 <mpfr_assert_fail@plt>
   417c0:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   417c4:	add	x2, x2, #0x140
   417c8:	mov	w1, #0x35                  	// #53
   417cc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   417d0:	add	x0, x0, #0x138
   417d4:	bl	cb40 <mpfr_assert_fail@plt>
   417d8:	b	416ac <mpfr_get_z@@Base+0xc8>
   417dc:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   417e0:	add	x2, x2, #0x158
   417e4:	mov	w1, #0x37                  	// #55
   417e8:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   417ec:	add	x0, x0, #0x138
   417f0:	bl	cb40 <mpfr_assert_fail@plt>
   417f4:	b	416c0 <mpfr_get_z@@Base+0xdc>
   417f8:	neg	x2, x0
   417fc:	mov	x1, x19
   41800:	mov	x0, x19
   41804:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   41808:	b	416fc <mpfr_get_z@@Base+0x118>

000000000004180c <mpfr_zero_p@@Base>:
   4180c:	ldr	x1, [x0, #16]
   41810:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41814:	cmp	x1, x0
   41818:	cset	w0, eq  // eq = none
   4181c:	ret

0000000000041820 <mpfr_clear_cache@@Base>:
   41820:	stp	x29, x30, [sp, #-32]!
   41824:	mov	x29, sp
   41828:	str	x19, [sp, #16]
   4182c:	mov	x19, x0
   41830:	ldr	x0, [x0]
   41834:	cbnz	x0, 41844 <mpfr_clear_cache@@Base+0x24>
   41838:	ldr	x19, [sp, #16]
   4183c:	ldp	x29, x30, [sp], #32
   41840:	ret
   41844:	mov	x0, x19
   41848:	bl	c070 <mpfr_clear@plt>
   4184c:	str	xzr, [x19]
   41850:	b	41838 <mpfr_clear_cache@@Base+0x18>

0000000000041854 <mpfr_cache@@Base>:
   41854:	stp	x29, x30, [sp, #-96]!
   41858:	mov	x29, sp
   4185c:	stp	x19, x20, [sp, #16]
   41860:	stp	x21, x22, [sp, #32]
   41864:	stp	x23, x24, [sp, #48]
   41868:	stp	x25, x26, [sp, #64]
   4186c:	str	x27, [sp, #80]
   41870:	mov	x21, x0
   41874:	mov	x20, x1
   41878:	mov	w19, w2
   4187c:	ldr	x22, [x0]
   41880:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41884:	ldr	x1, [x0, #2576]
   41888:	add	x0, x0, #0xa10
   4188c:	blr	x1
   41890:	mrs	x1, tpidr_el0
   41894:	ldr	w24, [x1, x0]
   41898:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4189c:	ldr	x2, [x0, #2512]
   418a0:	add	x0, x0, #0x9d0
   418a4:	blr	x2
   418a8:	add	x2, x1, x0
   418ac:	ldr	x25, [x1, x0]
   418b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   418b4:	ldr	x3, [x0, #2544]
   418b8:	add	x0, x0, #0x9f0
   418bc:	blr	x3
   418c0:	ldr	x26, [x1, x0]
   418c4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   418c8:	str	x3, [x2]
   418cc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   418d0:	str	x2, [x1, x0]
   418d4:	ldr	x27, [x20]
   418d8:	cmp	x22, x27
   418dc:	b.gt	41a1c <mpfr_cache@@Base+0x1c8>
   418e0:	ldr	w0, [x20, #8]
   418e4:	cmp	w0, #0x0
   418e8:	b.le	41a74 <mpfr_cache@@Base+0x220>
   418ec:	ldr	w23, [x20, #8]
   418f0:	ldr	x0, [x20, #16]
   418f4:	str	x0, [x21, #16]
   418f8:	str	w23, [x21, #8]
   418fc:	ldr	x0, [x21]
   41900:	ldr	x22, [x21, #24]
   41904:	cmp	x0, x27
   41908:	b.ge	41a90 <mpfr_cache@@Base+0x23c>  // b.tcont
   4190c:	add	x3, x27, #0x3e
   41910:	subs	x27, x27, #0x1
   41914:	csel	x3, x3, x27, mi  // mi = first
   41918:	asr	x3, x3, #6
   4191c:	add	x6, x0, #0x3e
   41920:	subs	x1, x0, #0x1
   41924:	csel	x6, x6, x1, mi  // mi = first
   41928:	asr	x6, x6, #6
   4192c:	add	x2, x6, #0x1
   41930:	neg	w0, w0
   41934:	sub	x7, x3, x6
   41938:	ldr	x8, [x20, #24]
   4193c:	add	x1, x8, x7, lsl #3
   41940:	ands	w0, w0, #0x3f
   41944:	b.eq	41aec <mpfr_cache@@Base+0x298>  // b.none
   41948:	sub	w5, w0, #0x1
   4194c:	mov	x0, #0x1                   	// #1
   41950:	lsl	x0, x0, x5
   41954:	ldr	x4, [x8, x7, lsl #3]
   41958:	and	x9, x4, x0
   4195c:	sub	x0, x0, #0x1
   41960:	and	x4, x0, x4
   41964:	cmp	w19, #0x0
   41968:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   4196c:	b.ne	41994 <mpfr_cache@@Base+0x140>  // b.any
   41970:	subs	x3, x3, x6
   41974:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   41978:	b.ne	41994 <mpfr_cache@@Base+0x140>  // b.any
   4197c:	mvn	x0, x3
   41980:	add	x0, x1, x0, lsl #3
   41984:	ldr	x4, [x0, x3, lsl #3]
   41988:	subs	x3, x3, #0x1
   4198c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   41990:	b.eq	41984 <mpfr_cache@@Base+0x130>  // b.none
   41994:	mov	x27, #0x2                   	// #2
   41998:	lsl	x27, x27, x5
   4199c:	cmp	w19, #0x5
   419a0:	b.eq	41b3c <mpfr_cache@@Base+0x2e8>  // b.none
   419a4:	cbnz	w19, 41d5c <mpfr_cache@@Base+0x508>
   419a8:	cbnz	x9, 41b58 <mpfr_cache@@Base+0x304>
   419ac:	orr	x4, x4, x9
   419b0:	cmp	x4, #0x0
   419b4:	csneg	w23, wzr, w23, eq  // eq = none
   419b8:	cmp	x22, x1
   419bc:	b.eq	419cc <mpfr_cache@@Base+0x178>  // b.none
   419c0:	lsl	x2, x2, #3
   419c4:	mov	x0, x22
   419c8:	bl	ba10 <memcpy@plt>
   419cc:	neg	x27, x27
   419d0:	ldr	x0, [x22]
   419d4:	and	x27, x0, x27
   419d8:	str	x27, [x22]
   419dc:	ldr	w20, [x20, #32]
   419e0:	cbz	w20, 41c94 <mpfr_cache@@Base+0x440>
   419e4:	cmp	w19, #0x3
   419e8:	b.eq	41c74 <mpfr_cache@@Base+0x420>  // b.none
   419ec:	b.gt	41bd8 <mpfr_cache@@Base+0x384>
   419f0:	cmp	w19, #0x1
   419f4:	b.eq	41c74 <mpfr_cache@@Base+0x420>  // b.none
   419f8:	cmp	w19, #0x2
   419fc:	b.ne	41be0 <mpfr_cache@@Base+0x38c>  // b.any
   41a00:	cbnz	w23, 41be8 <mpfr_cache@@Base+0x394>
   41a04:	mov	w23, w20
   41a08:	tbz	w20, #31, 41be8 <mpfr_cache@@Base+0x394>
   41a0c:	mov	x0, x21
   41a10:	bl	c120 <mpfr_nextabove@plt>
   41a14:	neg	w23, w20
   41a18:	b	41be8 <mpfr_cache@@Base+0x394>
   41a1c:	cbz	x27, 41a64 <mpfr_cache@@Base+0x210>
   41a20:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   41a24:	movk	x0, #0x6667
   41a28:	smulh	x0, x27, x0
   41a2c:	asr	x0, x0, #2
   41a30:	sub	x0, x0, x27, asr #63
   41a34:	add	x27, x27, x0
   41a38:	cmp	x27, x22
   41a3c:	csel	x27, x27, x22, ge  // ge = tcont
   41a40:	mov	x1, x27
   41a44:	mov	x0, x20
   41a48:	bl	bed0 <mpfr_set_prec@plt>
   41a4c:	ldr	x2, [x20, #40]
   41a50:	mov	w1, #0x0                   	// #0
   41a54:	mov	x0, x20
   41a58:	blr	x2
   41a5c:	str	w0, [x20, #32]
   41a60:	b	418e0 <mpfr_cache@@Base+0x8c>
   41a64:	mov	x1, x22
   41a68:	mov	x0, x20
   41a6c:	bl	ca80 <mpfr_init2@plt>
   41a70:	b	41a38 <mpfr_cache@@Base+0x1e4>
   41a74:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   41a78:	add	x2, x2, #0x1d0
   41a7c:	mov	w1, #0x76                  	// #118
   41a80:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   41a84:	add	x0, x0, #0x1f0
   41a88:	bl	cb40 <mpfr_assert_fail@plt>
   41a8c:	b	418ec <mpfr_cache@@Base+0x98>
   41a90:	add	x1, x27, #0x3e
   41a94:	subs	x27, x27, #0x1
   41a98:	csel	x1, x1, x27, mi  // mi = first
   41a9c:	asr	x1, x1, #6
   41aa0:	add	x2, x1, #0x1
   41aa4:	add	x23, x0, #0x3e
   41aa8:	subs	x0, x0, #0x1
   41aac:	csel	x0, x23, x0, mi  // mi = first
   41ab0:	asr	x23, x0, #6
   41ab4:	sub	x23, x23, x1
   41ab8:	lsl	x23, x23, #3
   41abc:	add	x0, x22, x23
   41ac0:	ldr	x1, [x20, #24]
   41ac4:	cmp	x0, x1
   41ac8:	b.eq	41ad4 <mpfr_cache@@Base+0x280>  // b.none
   41acc:	lsl	x2, x2, #3
   41ad0:	bl	ba10 <memcpy@plt>
   41ad4:	mov	x2, x23
   41ad8:	mov	w1, #0x0                   	// #0
   41adc:	mov	x0, x22
   41ae0:	bl	c110 <memset@plt>
   41ae4:	mov	w23, #0x0                   	// #0
   41ae8:	b	419dc <mpfr_cache@@Base+0x188>
   41aec:	ldur	x0, [x1, #-8]
   41af0:	and	x9, x0, #0x8000000000000000
   41af4:	and	x4, x0, #0x7fffffffffffffff
   41af8:	cmp	w19, #0x0
   41afc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   41b00:	b.lt	41d50 <mpfr_cache@@Base+0x4fc>  // b.tstop
   41b04:	sub	x3, x3, x6
   41b08:	subs	x5, x3, #0x1
   41b0c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   41b10:	b.ne	41b34 <mpfr_cache@@Base+0x2e0>  // b.any
   41b14:	mvn	x3, x3
   41b18:	add	x0, x1, x3, lsl #3
   41b1c:	ldr	x4, [x0, x5, lsl #3]
   41b20:	subs	x5, x5, #0x1
   41b24:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   41b28:	b.eq	41b1c <mpfr_cache@@Base+0x2c8>  // b.none
   41b2c:	mov	x27, #0x1                   	// #1
   41b30:	b	4199c <mpfr_cache@@Base+0x148>
   41b34:	mov	x27, #0x1                   	// #1
   41b38:	b	4199c <mpfr_cache@@Base+0x148>
   41b3c:	mov	w23, #0x0                   	// #0
   41b40:	b	419b8 <mpfr_cache@@Base+0x164>
   41b44:	mov	w23, #0x0                   	// #0
   41b48:	b	419b8 <mpfr_cache@@Base+0x164>
   41b4c:	mov	x27, #0x1                   	// #1
   41b50:	mov	w23, #0x0                   	// #0
   41b54:	b	419b8 <mpfr_cache@@Base+0x164>
   41b58:	cbnz	x4, 41d78 <mpfr_cache@@Base+0x524>
   41b5c:	ldr	w0, [x20, #32]
   41b60:	cbz	w0, 41b70 <mpfr_cache@@Base+0x31c>
   41b64:	tbnz	w0, #31, 41d78 <mpfr_cache@@Base+0x524>
   41b68:	neg	w23, w23
   41b6c:	b	419b8 <mpfr_cache@@Base+0x164>
   41b70:	ldr	x0, [x8, x7, lsl #3]
   41b74:	tst	x27, x0
   41b78:	b.ne	41d78 <mpfr_cache@@Base+0x524>  // b.any
   41b7c:	neg	w23, w23
   41b80:	b	419b8 <mpfr_cache@@Base+0x164>
   41b84:	cmp	x22, x1
   41b88:	b.eq	41db8 <mpfr_cache@@Base+0x564>  // b.none
   41b8c:	cmp	x6, x0
   41b90:	b.le	41db8 <mpfr_cache@@Base+0x564>
   41b94:	ldr	x2, [x1, x4, lsl #3]
   41b98:	str	x2, [x22, x4, lsl #3]
   41b9c:	cmp	x6, x4
   41ba0:	add	x4, x4, #0x1
   41ba4:	b.gt	41b94 <mpfr_cache@@Base+0x340>
   41ba8:	b	41db8 <mpfr_cache@@Base+0x564>
   41bac:	add	x5, x6, #0x1
   41bb0:	mov	x0, #0x1                   	// #1
   41bb4:	cmp	x5, x0
   41bb8:	b.eq	41d04 <mpfr_cache@@Base+0x4b0>  // b.none
   41bbc:	ldr	x3, [x1, x0, lsl #3]
   41bc0:	add	x3, x3, #0x1
   41bc4:	str	x3, [x22, x0, lsl #3]
   41bc8:	add	x4, x0, #0x1
   41bcc:	cbnz	x3, 41b84 <mpfr_cache@@Base+0x330>
   41bd0:	mov	x0, x4
   41bd4:	b	41bb4 <mpfr_cache@@Base+0x360>
   41bd8:	cmp	w19, #0x4
   41bdc:	b.eq	41a00 <mpfr_cache@@Base+0x1ac>  // b.none
   41be0:	cmp	w23, #0x0
   41be4:	csel	w23, w23, w20, ne  // ne = any
   41be8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41bec:	ldr	x1, [x0, #2576]
   41bf0:	add	x0, x0, #0xa10
   41bf4:	blr	x1
   41bf8:	mrs	x1, tpidr_el0
   41bfc:	str	w24, [x1, x0]
   41c00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41c04:	ldr	x2, [x0, #2512]
   41c08:	add	x0, x0, #0x9d0
   41c0c:	blr	x2
   41c10:	str	x25, [x1, x0]
   41c14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41c18:	ldr	x2, [x0, #2544]
   41c1c:	add	x0, x0, #0x9f0
   41c20:	blr	x2
   41c24:	str	x26, [x1, x0]
   41c28:	ldr	x0, [x21, #16]
   41c2c:	cmp	x25, x0
   41c30:	ccmp	x26, x0, #0x1, le
   41c34:	b.lt	41cec <mpfr_cache@@Base+0x498>  // b.tstop
   41c38:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41c3c:	ldr	x1, [x0, #2576]
   41c40:	add	x0, x0, #0xa10
   41c44:	blr	x1
   41c48:	orr	w24, w24, #0x8
   41c4c:	mrs	x1, tpidr_el0
   41c50:	str	w24, [x1, x0]
   41c54:	mov	w0, w23
   41c58:	ldp	x19, x20, [sp, #16]
   41c5c:	ldp	x21, x22, [sp, #32]
   41c60:	ldp	x23, x24, [sp, #48]
   41c64:	ldp	x25, x26, [sp, #64]
   41c68:	ldr	x27, [sp, #80]
   41c6c:	ldp	x29, x30, [sp], #96
   41c70:	ret
   41c74:	cbnz	w23, 41be8 <mpfr_cache@@Base+0x394>
   41c78:	mov	w23, w20
   41c7c:	cmp	w20, #0x0
   41c80:	b.le	41be8 <mpfr_cache@@Base+0x394>
   41c84:	mov	x0, x21
   41c88:	bl	bdd0 <mpfr_nextbelow@plt>
   41c8c:	neg	w23, w20
   41c90:	b	41be8 <mpfr_cache@@Base+0x394>
   41c94:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41c98:	ldr	x1, [x0, #2576]
   41c9c:	add	x0, x0, #0xa10
   41ca0:	blr	x1
   41ca4:	mrs	x1, tpidr_el0
   41ca8:	str	w24, [x1, x0]
   41cac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41cb0:	ldr	x2, [x0, #2512]
   41cb4:	add	x0, x0, #0x9d0
   41cb8:	blr	x2
   41cbc:	str	x25, [x1, x0]
   41cc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41cc4:	ldr	x2, [x0, #2544]
   41cc8:	add	x0, x0, #0x9f0
   41ccc:	blr	x2
   41cd0:	str	x26, [x1, x0]
   41cd4:	ldr	x0, [x21, #16]
   41cd8:	cmp	x26, x0
   41cdc:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   41ce0:	b.gt	41cec <mpfr_cache@@Base+0x498>
   41ce4:	cbz	w23, 41c54 <mpfr_cache@@Base+0x400>
   41ce8:	b	41c38 <mpfr_cache@@Base+0x3e4>
   41cec:	mov	w2, w19
   41cf0:	mov	w1, w23
   41cf4:	mov	x0, x21
   41cf8:	bl	cb30 <mpfr_check_range@plt>
   41cfc:	mov	w23, w0
   41d00:	b	41c54 <mpfr_cache@@Base+0x400>
   41d04:	add	x2, x22, x2, lsl #3
   41d08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41d0c:	stur	x0, [x2, #-8]
   41d10:	ldr	x1, [x21, #16]
   41d14:	add	x1, x1, #0x1
   41d18:	str	x1, [x21, #16]
   41d1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41d20:	ldr	x2, [x0, #2544]
   41d24:	add	x0, x0, #0x9f0
   41d28:	blr	x2
   41d2c:	mrs	x2, tpidr_el0
   41d30:	ldr	x0, [x2, x0]
   41d34:	cmp	x1, x0
   41d38:	b.le	41db8 <mpfr_cache@@Base+0x564>
   41d3c:	mov	w2, w23
   41d40:	mov	w1, w19
   41d44:	mov	x0, x21
   41d48:	bl	bf40 <mpfr_overflow@plt>
   41d4c:	b	41db8 <mpfr_cache@@Base+0x564>
   41d50:	mov	x27, #0x1                   	// #1
   41d54:	cmp	w19, #0x5
   41d58:	b.eq	41b4c <mpfr_cache@@Base+0x2f8>  // b.none
   41d5c:	cmp	w19, #0x1
   41d60:	b.eq	419ac <mpfr_cache@@Base+0x158>  // b.none
   41d64:	add	w0, w19, w23, lsr #31
   41d68:	cmp	w0, #0x3
   41d6c:	b.eq	419ac <mpfr_cache@@Base+0x158>  // b.none
   41d70:	orr	x4, x4, x9
   41d74:	cbz	x4, 41b44 <mpfr_cache@@Base+0x2f0>
   41d78:	ldr	x0, [x8, x7, lsl #3]
   41d7c:	add	x0, x27, x0
   41d80:	str	x0, [x22]
   41d84:	cmp	x27, x0
   41d88:	b.hi	41bac <mpfr_cache@@Base+0x358>  // b.pmore
   41d8c:	cmp	x22, x1
   41d90:	b.eq	41db8 <mpfr_cache@@Base+0x564>  // b.none
   41d94:	cmp	x2, #0x1
   41d98:	b.le	41db8 <mpfr_cache@@Base+0x564>
   41d9c:	add	x6, x6, #0x1
   41da0:	mov	x0, #0x1                   	// #1
   41da4:	ldr	x2, [x1, x0, lsl #3]
   41da8:	str	x2, [x22, x0, lsl #3]
   41dac:	add	x0, x0, #0x1
   41db0:	cmp	x6, x0
   41db4:	b.ne	41da4 <mpfr_cache@@Base+0x550>  // b.any
   41db8:	neg	x27, x27
   41dbc:	ldr	x0, [x22]
   41dc0:	and	x27, x0, x27
   41dc4:	str	x27, [x22]
   41dc8:	b	419dc <mpfr_cache@@Base+0x188>

0000000000041dcc <mpfr_sqr@@Base>:
   41dcc:	stp	x29, x30, [sp, #-160]!
   41dd0:	mov	x29, sp
   41dd4:	stp	x19, x20, [sp, #16]
   41dd8:	stp	x21, x22, [sp, #32]
   41ddc:	stp	x23, x24, [sp, #48]
   41de0:	stp	x25, x26, [sp, #64]
   41de4:	stp	x27, x28, [sp, #80]
   41de8:	mov	x21, x0
   41dec:	mov	x23, x1
   41df0:	ldr	x22, [x1, #16]
   41df4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   41df8:	cmp	x22, x0
   41dfc:	b.le	41f84 <mpfr_sqr@@Base+0x1b8>
   41e00:	mov	w24, w2
   41e04:	ldr	x25, [x21]
   41e08:	ldr	x20, [x1]
   41e0c:	cmp	x20, #0x40
   41e10:	cset	w0, le
   41e14:	cmp	x25, #0x3f
   41e18:	ccmp	w0, #0x0, #0x4, le
   41e1c:	b.ne	41ff8 <mpfr_sqr@@Base+0x22c>  // b.any
   41e20:	sub	x1, x25, #0x41
   41e24:	cmp	x1, #0x3e
   41e28:	b.hi	42508 <mpfr_sqr@@Base+0x73c>  // b.pmore
   41e2c:	sub	x0, x20, #0x41
   41e30:	cmp	x0, #0x3f
   41e34:	b.ls	42234 <mpfr_sqr@@Base+0x468>  // b.plast
   41e38:	lsl	x22, x22, #1
   41e3c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   41e40:	cmp	x0, x20, lsl #1
   41e44:	b.ls	42a48 <mpfr_sqr@@Base+0xc7c>  // b.plast
   41e48:	add	x19, x20, #0x3e
   41e4c:	subs	x0, x20, #0x1
   41e50:	csel	x19, x19, x0, mi  // mi = first
   41e54:	asr	x19, x19, #6
   41e58:	add	x19, x19, #0x1
   41e5c:	lsl	x20, x20, #1
   41e60:	add	x26, x20, #0x3e
   41e64:	subs	x0, x20, #0x1
   41e68:	csel	x26, x26, x0, mi  // mi = first
   41e6c:	asr	x26, x26, #6
   41e70:	add	x26, x26, #0x1
   41e74:	cmp	x19, #0x14
   41e78:	b.gt	42a60 <mpfr_sqr@@Base+0xc94>
   41e7c:	lsl	x27, x19, #4
   41e80:	mov	x0, sp
   41e84:	sub	x0, x0, x19, lsl #4
   41e88:	mov	sp, x0
   41e8c:	mov	x28, sp
   41e90:	mov	x2, x19
   41e94:	ldr	x1, [x23, #24]
   41e98:	bl	c3b0 <__gmpn_sqr@plt>
   41e9c:	add	x27, x28, x27
   41ea0:	ldur	x0, [x27, #-8]
   41ea4:	lsr	x27, x0, #63
   41ea8:	lsl	x19, x19, #1
   41eac:	sub	x19, x19, x26
   41eb0:	add	x19, x28, x19, lsl #3
   41eb4:	tbz	x0, #63, 42a7c <mpfr_sqr@@Base+0xcb0>
   41eb8:	add	x6, x29, #0x9c
   41ebc:	mov	w5, w24
   41ec0:	mov	x4, x25
   41ec4:	mov	w3, #0x0                   	// #0
   41ec8:	mov	x2, x20
   41ecc:	mov	x1, x19
   41ed0:	ldr	x0, [x21, #24]
   41ed4:	bl	ca20 <mpfr_round_raw@plt>
   41ed8:	cbnz	w0, 42a94 <mpfr_sqr@@Base+0xcc8>
   41edc:	sub	x1, x22, #0x1
   41ee0:	add	x0, x27, w0, sxtw
   41ee4:	add	x1, x1, x0
   41ee8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41eec:	ldr	x2, [x0, #2544]
   41ef0:	add	x0, x0, #0x9f0
   41ef4:	blr	x2
   41ef8:	mrs	x2, tpidr_el0
   41efc:	ldr	x0, [x2, x0]
   41f00:	cmp	x0, x1
   41f04:	b.lt	42ab8 <mpfr_sqr@@Base+0xcec>  // b.tstop
   41f08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41f0c:	ldr	x2, [x0, #2512]
   41f10:	add	x0, x0, #0x9d0
   41f14:	blr	x2
   41f18:	mrs	x2, tpidr_el0
   41f1c:	ldr	x0, [x2, x0]
   41f20:	cmp	x0, x1
   41f24:	b.gt	42ad0 <mpfr_sqr@@Base+0xd04>
   41f28:	str	x1, [x21, #16]
   41f2c:	mov	w0, #0x1                   	// #1
   41f30:	str	w0, [x21, #8]
   41f34:	ldr	w1, [x29, #156]
   41f38:	cbz	w1, 41f60 <mpfr_sqr@@Base+0x194>
   41f3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41f40:	ldr	x2, [x0, #2576]
   41f44:	add	x0, x0, #0xa10
   41f48:	blr	x2
   41f4c:	mrs	x2, tpidr_el0
   41f50:	add	x0, x2, x0
   41f54:	ldr	w2, [x0]
   41f58:	orr	w2, w2, #0x8
   41f5c:	str	w2, [x0]
   41f60:	mov	w0, w1
   41f64:	mov	sp, x29
   41f68:	ldp	x19, x20, [sp, #16]
   41f6c:	ldp	x21, x22, [sp, #32]
   41f70:	ldp	x23, x24, [sp, #48]
   41f74:	ldp	x25, x26, [sp, #64]
   41f78:	ldp	x27, x28, [sp, #80]
   41f7c:	ldp	x29, x30, [sp], #160
   41f80:	ret
   41f84:	mov	x0, #0x2                   	// #2
   41f88:	movk	x0, #0x8000, lsl #48
   41f8c:	cmp	x22, x0
   41f90:	b.eq	41fbc <mpfr_sqr@@Base+0x1f0>  // b.none
   41f94:	mov	w0, #0x1                   	// #1
   41f98:	str	w0, [x21, #8]
   41f9c:	ldr	x1, [x1, #16]
   41fa0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   41fa4:	cmp	x1, x0
   41fa8:	b.eq	41fec <mpfr_sqr@@Base+0x220>  // b.none
   41fac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41fb0:	str	x0, [x21, #16]
   41fb4:	mov	w1, #0x0                   	// #0
   41fb8:	b	41f60 <mpfr_sqr@@Base+0x194>
   41fbc:	str	x0, [x21, #16]
   41fc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   41fc4:	ldr	x1, [x0, #2576]
   41fc8:	add	x0, x0, #0xa10
   41fcc:	blr	x1
   41fd0:	mrs	x1, tpidr_el0
   41fd4:	add	x0, x1, x0
   41fd8:	ldr	w1, [x0]
   41fdc:	orr	w1, w1, #0x4
   41fe0:	str	w1, [x0]
   41fe4:	mov	w1, #0x0                   	// #0
   41fe8:	b	41f60 <mpfr_sqr@@Base+0x194>
   41fec:	str	x0, [x21, #16]
   41ff0:	mov	w1, #0x0                   	// #0
   41ff4:	b	41f60 <mpfr_sqr@@Base+0x194>
   41ff8:	ldr	x7, [x21, #24]
   41ffc:	ldr	x0, [x1, #24]
   42000:	ldr	x0, [x0]
   42004:	mov	x1, #0x40                  	// #64
   42008:	sub	x25, x1, x25
   4200c:	mov	x3, #0x1                   	// #1
   42010:	lsl	x3, x3, x25
   42014:	sub	x2, x3, #0x1
   42018:	lsl	x22, x22, #1
   4201c:	umulh	x1, x0, x0
   42020:	mul	x0, x0, x0
   42024:	tbnz	x1, #63, 42034 <mpfr_sqr@@Base+0x268>
   42028:	sub	x22, x22, #0x1
   4202c:	extr	x1, x1, x0, #63
   42030:	lsl	x0, x0, #1
   42034:	sub	w4, w25, #0x1
   42038:	mov	x5, #0x1                   	// #1
   4203c:	lsl	x4, x5, x4
   42040:	and	x6, x4, x1
   42044:	eor	x2, x2, x4
   42048:	and	x2, x2, x1
   4204c:	orr	x2, x2, x0
   42050:	neg	x4, x3
   42054:	and	x1, x1, x4
   42058:	str	x1, [x7]
   4205c:	str	w5, [x21, #8]
   42060:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42064:	ldr	x1, [x0, #2544]
   42068:	add	x0, x0, #0x9f0
   4206c:	blr	x1
   42070:	mrs	x1, tpidr_el0
   42074:	ldr	x0, [x1, x0]
   42078:	cmp	x0, x22
   4207c:	b.lt	420f4 <mpfr_sqr@@Base+0x328>  // b.tstop
   42080:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42084:	ldr	x1, [x0, #2512]
   42088:	add	x0, x0, #0x9d0
   4208c:	blr	x1
   42090:	mrs	x1, tpidr_el0
   42094:	ldr	x0, [x1, x0]
   42098:	cmp	x22, x0
   4209c:	b.lt	4210c <mpfr_sqr@@Base+0x340>  // b.tstop
   420a0:	str	x22, [x21, #16]
   420a4:	orr	x0, x6, x2
   420a8:	cmp	x0, #0x0
   420ac:	mov	w1, #0x0                   	// #0
   420b0:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   420b4:	b.eq	41f60 <mpfr_sqr@@Base+0x194>  // b.none
   420b8:	cbz	w24, 42198 <mpfr_sqr@@Base+0x3cc>
   420bc:	and	w0, w24, #0xfffffffd
   420c0:	cmp	w0, #0x1
   420c4:	b.ne	421ac <mpfr_sqr@@Base+0x3e0>  // b.any
   420c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   420cc:	ldr	x1, [x0, #2576]
   420d0:	add	x0, x0, #0xa10
   420d4:	blr	x1
   420d8:	mrs	x1, tpidr_el0
   420dc:	add	x0, x1, x0
   420e0:	ldr	w1, [x0]
   420e4:	orr	w1, w1, #0x8
   420e8:	str	w1, [x0]
   420ec:	mov	w1, #0xffffffff            	// #-1
   420f0:	b	41f60 <mpfr_sqr@@Base+0x194>
   420f4:	mov	w2, #0x1                   	// #1
   420f8:	mov	w1, w24
   420fc:	mov	x0, x21
   42100:	bl	bf40 <mpfr_overflow@plt>
   42104:	mov	w1, w0
   42108:	b	41f60 <mpfr_sqr@@Base+0x194>
   4210c:	sub	x0, x0, #0x1
   42110:	cmp	x22, x0
   42114:	b.ne	4214c <mpfr_sqr@@Base+0x380>  // b.any
   42118:	ldr	x1, [x7]
   4211c:	cmp	x4, x1
   42120:	b.ne	42b18 <mpfr_sqr@@Base+0xd4c>  // b.any
   42124:	cmp	w24, #0x0
   42128:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   4212c:	b.ne	42b10 <mpfr_sqr@@Base+0xd44>  // b.any
   42130:	sub	w1, w24, #0x2
   42134:	tst	w1, #0xfffffffd
   42138:	b.ne	42b18 <mpfr_sqr@@Base+0xd4c>  // b.any
   4213c:	orr	x1, x6, x2
   42140:	cbz	x1, 42b18 <mpfr_sqr@@Base+0xd4c>
   42144:	str	x0, [x21, #16]
   42148:	b	420b8 <mpfr_sqr@@Base+0x2ec>
   4214c:	cbnz	w24, 42170 <mpfr_sqr@@Base+0x3a4>
   42150:	b.lt	42188 <mpfr_sqr@@Base+0x3bc>  // b.tstop
   42154:	ldr	x1, [x7]
   42158:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4215c:	cmp	x1, x0
   42160:	b.ne	42190 <mpfr_sqr@@Base+0x3c4>  // b.any
   42164:	orr	x0, x6, x2
   42168:	cmp	x0, #0x0
   4216c:	cset	w24, eq  // eq = none
   42170:	mov	w2, #0x1                   	// #1
   42174:	mov	w1, w24
   42178:	mov	x0, x21
   4217c:	bl	c3c0 <mpfr_underflow@plt>
   42180:	mov	w1, w0
   42184:	b	41f60 <mpfr_sqr@@Base+0x194>
   42188:	mov	w24, #0x1                   	// #1
   4218c:	b	42170 <mpfr_sqr@@Base+0x3a4>
   42190:	mov	w24, #0x0                   	// #0
   42194:	b	42170 <mpfr_sqr@@Base+0x3a4>
   42198:	cbz	x6, 420c8 <mpfr_sqr@@Base+0x2fc>
   4219c:	cbnz	x2, 421ac <mpfr_sqr@@Base+0x3e0>
   421a0:	ldr	x0, [x7]
   421a4:	lsr	x25, x0, x25
   421a8:	tbz	w25, #0, 420c8 <mpfr_sqr@@Base+0x2fc>
   421ac:	ldr	x0, [x7]
   421b0:	adds	x0, x3, x0
   421b4:	b.ne	42214 <mpfr_sqr@@Base+0x448>  // b.any
   421b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   421bc:	str	x0, [x7]
   421c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   421c4:	ldr	x1, [x0, #2544]
   421c8:	add	x0, x0, #0x9f0
   421cc:	blr	x1
   421d0:	mrs	x1, tpidr_el0
   421d4:	ldr	x0, [x1, x0]
   421d8:	cmp	x22, x0
   421dc:	b.ge	4221c <mpfr_sqr@@Base+0x450>  // b.tcont
   421e0:	add	x22, x22, #0x1
   421e4:	str	x22, [x21, #16]
   421e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   421ec:	ldr	x1, [x0, #2576]
   421f0:	add	x0, x0, #0xa10
   421f4:	blr	x1
   421f8:	mrs	x1, tpidr_el0
   421fc:	add	x0, x1, x0
   42200:	ldr	w1, [x0]
   42204:	orr	w1, w1, #0x8
   42208:	str	w1, [x0]
   4220c:	mov	w1, #0x1                   	// #1
   42210:	b	41f60 <mpfr_sqr@@Base+0x194>
   42214:	str	x0, [x7]
   42218:	b	421e8 <mpfr_sqr@@Base+0x41c>
   4221c:	mov	w2, #0x1                   	// #1
   42220:	mov	w1, w24
   42224:	mov	x0, x21
   42228:	bl	bf40 <mpfr_overflow@plt>
   4222c:	mov	w1, w0
   42230:	b	41f60 <mpfr_sqr@@Base+0x194>
   42234:	ldr	x7, [x21, #24]
   42238:	lsl	x22, x22, #1
   4223c:	mov	x0, #0x80                  	// #128
   42240:	sub	x25, x0, x25
   42244:	mov	x5, #0x1                   	// #1
   42248:	lsl	x5, x5, x25
   4224c:	sub	x2, x5, #0x1
   42250:	ldr	x0, [x23, #24]
   42254:	ldr	x3, [x0, #8]
   42258:	umulh	x6, x3, x3
   4225c:	ldr	x9, [x0]
   42260:	umulh	x1, x3, x9
   42264:	lsl	x4, x1, #1
   42268:	madd	x0, x3, x3, x4
   4226c:	add	x1, x6, x1, lsr #63
   42270:	cmp	x4, x0
   42274:	cinc	x1, x1, hi  // hi = pmore
   42278:	add	x8, x0, #0x2
   4227c:	and	x8, x8, x2, lsr #2
   42280:	mov	x4, #0x1                   	// #1
   42284:	mov	x6, x4
   42288:	cmp	x8, #0x2
   4228c:	b.ls	4236c <mpfr_sqr@@Base+0x5a0>  // b.plast
   42290:	tbnz	x1, #63, 422a4 <mpfr_sqr@@Base+0x4d8>
   42294:	sub	x22, x22, #0x1
   42298:	extr	x1, x1, x0, #63
   4229c:	extr	x0, x0, x6, #63
   422a0:	lsl	x6, x6, #1
   422a4:	str	x1, [x7, #8]
   422a8:	sub	w1, w25, #0x1
   422ac:	mov	x3, #0x1                   	// #1
   422b0:	lsl	x1, x3, x1
   422b4:	and	x8, x1, x0
   422b8:	orr	x4, x4, x6
   422bc:	eor	x2, x2, x1
   422c0:	and	x2, x2, x0
   422c4:	orr	x2, x2, x4
   422c8:	neg	x1, x5
   422cc:	and	x0, x0, x1
   422d0:	str	x0, [x7]
   422d4:	str	w3, [x21, #8]
   422d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   422dc:	ldr	x3, [x0, #2544]
   422e0:	add	x0, x0, #0x9f0
   422e4:	blr	x3
   422e8:	mrs	x3, tpidr_el0
   422ec:	ldr	x0, [x3, x0]
   422f0:	cmp	x0, x22
   422f4:	b.lt	423a4 <mpfr_sqr@@Base+0x5d8>  // b.tstop
   422f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   422fc:	ldr	x3, [x0, #2512]
   42300:	add	x0, x0, #0x9d0
   42304:	blr	x3
   42308:	mrs	x3, tpidr_el0
   4230c:	ldr	x0, [x3, x0]
   42310:	cmp	x22, x0
   42314:	b.lt	423bc <mpfr_sqr@@Base+0x5f0>  // b.tstop
   42318:	str	x22, [x21, #16]
   4231c:	orr	x0, x8, x2
   42320:	cmp	x0, #0x0
   42324:	mov	w1, #0x0                   	// #0
   42328:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   4232c:	b.eq	41f60 <mpfr_sqr@@Base+0x194>  // b.none
   42330:	cbz	w24, 4245c <mpfr_sqr@@Base+0x690>
   42334:	and	w0, w24, #0xfffffffd
   42338:	cmp	w0, #0x1
   4233c:	b.ne	42470 <mpfr_sqr@@Base+0x6a4>  // b.any
   42340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42344:	ldr	x1, [x0, #2576]
   42348:	add	x0, x0, #0xa10
   4234c:	blr	x1
   42350:	mrs	x1, tpidr_el0
   42354:	add	x0, x1, x0
   42358:	ldr	w1, [x0]
   4235c:	orr	w1, w1, #0x8
   42360:	str	w1, [x0]
   42364:	mov	w1, #0xffffffff            	// #-1
   42368:	b	41f60 <mpfr_sqr@@Base+0x194>
   4236c:	mul	x3, x3, x9
   42370:	umulh	x6, x9, x9
   42374:	mul	x4, x9, x9
   42378:	adds	x6, x3, x6
   4237c:	cset	x8, cs  // cs = hs, nlast
   42380:	cinc	x0, x0, cs  // cs = hs, nlast
   42384:	cmp	x8, x0
   42388:	cinc	x1, x1, hi  // hi = pmore
   4238c:	adds	x6, x3, x6
   42390:	cset	x3, cs  // cs = hs, nlast
   42394:	cinc	x0, x0, cs  // cs = hs, nlast
   42398:	cmp	x3, x0
   4239c:	cinc	x1, x1, hi  // hi = pmore
   423a0:	b	42290 <mpfr_sqr@@Base+0x4c4>
   423a4:	mov	w2, #0x1                   	// #1
   423a8:	mov	w1, w24
   423ac:	mov	x0, x21
   423b0:	bl	bf40 <mpfr_overflow@plt>
   423b4:	mov	w1, w0
   423b8:	b	41f60 <mpfr_sqr@@Base+0x194>
   423bc:	sub	x0, x0, #0x1
   423c0:	cmp	x22, x0
   423c4:	b.ne	42408 <mpfr_sqr@@Base+0x63c>  // b.any
   423c8:	ldr	x3, [x7, #8]
   423cc:	cmn	x3, #0x1
   423d0:	b.ne	42b28 <mpfr_sqr@@Base+0xd5c>  // b.any
   423d4:	ldr	x3, [x7]
   423d8:	cmp	x1, x3
   423dc:	b.ne	42b28 <mpfr_sqr@@Base+0xd5c>  // b.any
   423e0:	cmp	w24, #0x0
   423e4:	ccmp	x8, #0x0, #0x4, eq  // eq = none
   423e8:	b.ne	42b20 <mpfr_sqr@@Base+0xd54>  // b.any
   423ec:	sub	w1, w24, #0x2
   423f0:	tst	w1, #0xfffffffd
   423f4:	b.ne	42b28 <mpfr_sqr@@Base+0xd5c>  // b.any
   423f8:	orr	x1, x8, x2
   423fc:	cbz	x1, 42b28 <mpfr_sqr@@Base+0xd5c>
   42400:	str	x0, [x21, #16]
   42404:	b	42330 <mpfr_sqr@@Base+0x564>
   42408:	cbnz	w24, 42434 <mpfr_sqr@@Base+0x668>
   4240c:	b.lt	4244c <mpfr_sqr@@Base+0x680>  // b.tstop
   42410:	ldr	x1, [x7, #8]
   42414:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42418:	cmp	x1, x0
   4241c:	b.ne	42454 <mpfr_sqr@@Base+0x688>  // b.any
   42420:	ldr	x0, [x7]
   42424:	orr	x8, x8, x0
   42428:	orr	x2, x8, x2
   4242c:	cmp	x2, #0x0
   42430:	cset	w24, eq  // eq = none
   42434:	mov	w2, #0x1                   	// #1
   42438:	mov	w1, w24
   4243c:	mov	x0, x21
   42440:	bl	c3c0 <mpfr_underflow@plt>
   42444:	mov	w1, w0
   42448:	b	41f60 <mpfr_sqr@@Base+0x194>
   4244c:	mov	w24, #0x1                   	// #1
   42450:	b	42434 <mpfr_sqr@@Base+0x668>
   42454:	mov	w24, #0x0                   	// #0
   42458:	b	42434 <mpfr_sqr@@Base+0x668>
   4245c:	cbz	x8, 42340 <mpfr_sqr@@Base+0x574>
   42460:	cbnz	x2, 42470 <mpfr_sqr@@Base+0x6a4>
   42464:	ldr	x0, [x7]
   42468:	lsr	x25, x0, x25
   4246c:	tbz	w25, #0, 42340 <mpfr_sqr@@Base+0x574>
   42470:	ldr	x0, [x7]
   42474:	add	x5, x5, x0
   42478:	str	x5, [x7]
   4247c:	cmp	x5, #0x0
   42480:	ldr	x0, [x7, #8]
   42484:	cinc	x0, x0, eq  // eq = none
   42488:	cbnz	x0, 424e8 <mpfr_sqr@@Base+0x71c>
   4248c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42490:	str	x0, [x7, #8]
   42494:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42498:	ldr	x1, [x0, #2544]
   4249c:	add	x0, x0, #0x9f0
   424a0:	blr	x1
   424a4:	mrs	x1, tpidr_el0
   424a8:	ldr	x0, [x1, x0]
   424ac:	cmp	x22, x0
   424b0:	b.ge	424f0 <mpfr_sqr@@Base+0x724>  // b.tcont
   424b4:	add	x22, x22, #0x1
   424b8:	str	x22, [x21, #16]
   424bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   424c0:	ldr	x1, [x0, #2576]
   424c4:	add	x0, x0, #0xa10
   424c8:	blr	x1
   424cc:	mrs	x1, tpidr_el0
   424d0:	add	x0, x1, x0
   424d4:	ldr	w1, [x0]
   424d8:	orr	w1, w1, #0x8
   424dc:	str	w1, [x0]
   424e0:	mov	w1, #0x1                   	// #1
   424e4:	b	41f60 <mpfr_sqr@@Base+0x194>
   424e8:	str	x0, [x7, #8]
   424ec:	b	424bc <mpfr_sqr@@Base+0x6f0>
   424f0:	mov	w2, #0x1                   	// #1
   424f4:	mov	w1, w24
   424f8:	mov	x0, x21
   424fc:	bl	bf40 <mpfr_overflow@plt>
   42500:	mov	w1, w0
   42504:	b	41f60 <mpfr_sqr@@Base+0x194>
   42508:	cmp	x25, #0x40
   4250c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   42510:	b.ne	426a8 <mpfr_sqr@@Base+0x8dc>  // b.any
   42514:	sub	x0, x25, #0x81
   42518:	cmp	x0, #0x3e
   4251c:	b.hi	41e38 <mpfr_sqr@@Base+0x6c>  // b.pmore
   42520:	sub	x0, x20, #0x81
   42524:	cmp	x0, #0x3f
   42528:	b.hi	41e38 <mpfr_sqr@@Base+0x6c>  // b.pmore
   4252c:	ldr	x19, [x21, #24]
   42530:	lsl	x22, x22, #1
   42534:	mov	x0, #0xc0                  	// #192
   42538:	sub	x25, x0, x25
   4253c:	mov	x20, #0x1                   	// #1
   42540:	lsl	x20, x20, x25
   42544:	sub	x26, x20, #0x1
   42548:	ldr	x1, [x23, #24]
   4254c:	ldr	x0, [x1, #16]
   42550:	ldr	x2, [x1, #8]
   42554:	umulh	x3, x0, x2
   42558:	ldr	x4, [x1]
   4255c:	umulh	x4, x0, x4
   42560:	madd	x5, x0, x2, x4
   42564:	cmp	x4, x5
   42568:	cinc	x3, x3, hi  // hi = pmore
   4256c:	extr	x6, x3, x5, #63
   42570:	umulh	x4, x0, x0
   42574:	add	x4, x4, x3, lsr #63
   42578:	mul	x0, x0, x0
   4257c:	add	x6, x6, x0
   42580:	umulh	x2, x2, x2
   42584:	add	x5, x2, x5, lsl #1
   42588:	cmp	x2, x5
   4258c:	cset	w2, hi  // hi = pmore
   42590:	cinc	x7, x6, hi  // hi = pmore
   42594:	cmp	x7, #0x0
   42598:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   4259c:	cset	x3, ne  // ne = any
   425a0:	cmp	x0, x6
   425a4:	cinc	x3, x3, hi  // hi = pmore
   425a8:	add	x3, x3, x4
   425ac:	add	x4, x5, #0x4
   425b0:	and	x4, x4, x26, lsr #2
   425b4:	mov	x0, #0x1                   	// #1
   425b8:	mov	x6, x0
   425bc:	cmp	x4, #0x4
   425c0:	b.ls	42888 <mpfr_sqr@@Base+0xabc>  // b.plast
   425c4:	tbnz	x3, #63, 425dc <mpfr_sqr@@Base+0x810>
   425c8:	sub	x22, x22, #0x1
   425cc:	extr	x3, x3, x7, #63
   425d0:	extr	x7, x7, x5, #63
   425d4:	extr	x5, x5, x6, #63
   425d8:	lsl	x6, x6, #1
   425dc:	str	x3, [x19, #16]
   425e0:	str	x7, [x19, #8]
   425e4:	sub	w2, w25, #0x1
   425e8:	mov	x1, #0x1                   	// #1
   425ec:	lsl	x2, x1, x2
   425f0:	and	x3, x2, x5
   425f4:	orr	x0, x0, x6
   425f8:	eor	x2, x26, x2
   425fc:	and	x2, x2, x5
   42600:	orr	x2, x2, x0
   42604:	neg	x4, x20
   42608:	and	x0, x5, x4
   4260c:	str	x0, [x19]
   42610:	str	w1, [x21, #8]
   42614:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42618:	ldr	x1, [x0, #2544]
   4261c:	add	x0, x0, #0x9f0
   42620:	blr	x1
   42624:	mrs	x1, tpidr_el0
   42628:	ldr	x0, [x1, x0]
   4262c:	cmp	x0, x22
   42630:	b.lt	428b4 <mpfr_sqr@@Base+0xae8>  // b.tstop
   42634:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42638:	ldr	x1, [x0, #2512]
   4263c:	add	x0, x0, #0x9d0
   42640:	blr	x1
   42644:	mrs	x1, tpidr_el0
   42648:	ldr	x0, [x1, x0]
   4264c:	cmp	x22, x0
   42650:	b.lt	428cc <mpfr_sqr@@Base+0xb00>  // b.tstop
   42654:	str	x22, [x21, #16]
   42658:	orr	x0, x3, x2
   4265c:	cmp	x0, #0x0
   42660:	mov	w1, #0x0                   	// #0
   42664:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   42668:	b.eq	41f60 <mpfr_sqr@@Base+0x194>  // b.none
   4266c:	cbz	w24, 42988 <mpfr_sqr@@Base+0xbbc>
   42670:	and	w0, w24, #0xfffffffd
   42674:	cmp	w0, #0x1
   42678:	b.ne	4299c <mpfr_sqr@@Base+0xbd0>  // b.any
   4267c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42680:	ldr	x1, [x0, #2576]
   42684:	add	x0, x0, #0xa10
   42688:	blr	x1
   4268c:	mrs	x1, tpidr_el0
   42690:	add	x0, x1, x0
   42694:	ldr	w1, [x0]
   42698:	orr	w1, w1, #0x8
   4269c:	str	w1, [x0]
   426a0:	mov	w1, #0xffffffff            	// #-1
   426a4:	b	41f60 <mpfr_sqr@@Base+0x194>
   426a8:	ldr	x3, [x21, #24]
   426ac:	ldr	x0, [x23, #24]
   426b0:	ldr	x0, [x0]
   426b4:	lsl	x22, x22, #1
   426b8:	umulh	x1, x0, x0
   426bc:	mul	x2, x0, x0
   426c0:	tbnz	x1, #63, 426d0 <mpfr_sqr@@Base+0x904>
   426c4:	sub	x22, x22, #0x1
   426c8:	extr	x1, x1, x2, #63
   426cc:	lsl	x2, x2, #1
   426d0:	str	x1, [x3]
   426d4:	mov	w0, #0x1                   	// #1
   426d8:	str	w0, [x21, #8]
   426dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   426e0:	ldr	x1, [x0, #2544]
   426e4:	add	x0, x0, #0x9f0
   426e8:	blr	x1
   426ec:	mrs	x1, tpidr_el0
   426f0:	ldr	x0, [x1, x0]
   426f4:	cmp	x0, x22
   426f8:	b.lt	427b0 <mpfr_sqr@@Base+0x9e4>  // b.tstop
   426fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42700:	ldr	x1, [x0, #2512]
   42704:	add	x0, x0, #0x9d0
   42708:	blr	x1
   4270c:	mrs	x1, tpidr_el0
   42710:	ldr	x0, [x1, x0]
   42714:	cmp	x22, x0
   42718:	b.lt	427c8 <mpfr_sqr@@Base+0x9fc>  // b.tstop
   4271c:	str	x22, [x21, #16]
   42720:	cmp	x2, #0x0
   42724:	mov	w1, #0x0                   	// #0
   42728:	ccmp	w24, #0x5, #0x4, ne  // ne = any
   4272c:	b.eq	41f60 <mpfr_sqr@@Base+0x194>  // b.none
   42730:	cbnz	w24, 42830 <mpfr_sqr@@Base+0xa64>
   42734:	tbz	x2, #63, 4283c <mpfr_sqr@@Base+0xa70>
   42738:	tst	x2, #0x7fffffffffffffff
   4273c:	b.ne	42748 <mpfr_sqr@@Base+0x97c>  // b.any
   42740:	ldr	x0, [x3]
   42744:	tbz	w0, #0, 4283c <mpfr_sqr@@Base+0xa70>
   42748:	ldr	x0, [x3]
   4274c:	adds	x0, x0, #0x1
   42750:	b.ne	42868 <mpfr_sqr@@Base+0xa9c>  // b.any
   42754:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42758:	str	x0, [x3]
   4275c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42760:	ldr	x1, [x0, #2544]
   42764:	add	x0, x0, #0x9f0
   42768:	blr	x1
   4276c:	mrs	x1, tpidr_el0
   42770:	ldr	x0, [x1, x0]
   42774:	cmp	x22, x0
   42778:	b.ge	42870 <mpfr_sqr@@Base+0xaa4>  // b.tcont
   4277c:	add	x22, x22, #0x1
   42780:	str	x22, [x21, #16]
   42784:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42788:	ldr	x1, [x0, #2576]
   4278c:	add	x0, x0, #0xa10
   42790:	blr	x1
   42794:	mrs	x1, tpidr_el0
   42798:	add	x0, x1, x0
   4279c:	ldr	w1, [x0]
   427a0:	orr	w1, w1, #0x8
   427a4:	str	w1, [x0]
   427a8:	mov	w1, #0x1                   	// #1
   427ac:	b	41f60 <mpfr_sqr@@Base+0x194>
   427b0:	mov	w2, #0x1                   	// #1
   427b4:	mov	w1, w24
   427b8:	mov	x0, x21
   427bc:	bl	bf40 <mpfr_overflow@plt>
   427c0:	mov	w1, w0
   427c4:	b	41f60 <mpfr_sqr@@Base+0x194>
   427c8:	sub	x0, x0, #0x1
   427cc:	cmp	x22, x0
   427d0:	b.ne	427f4 <mpfr_sqr@@Base+0xa28>  // b.any
   427d4:	ldr	x1, [x3]
   427d8:	cmn	x1, #0x1
   427dc:	b.ne	42b30 <mpfr_sqr@@Base+0xd64>  // b.any
   427e0:	sub	w1, w24, #0x2
   427e4:	tst	w1, #0xfffffffd
   427e8:	b.ne	42b30 <mpfr_sqr@@Base+0xd64>  // b.any
   427ec:	str	x0, [x21, #16]
   427f0:	b	42730 <mpfr_sqr@@Base+0x964>
   427f4:	cbnz	w24, 42810 <mpfr_sqr@@Base+0xa44>
   427f8:	b.lt	42828 <mpfr_sqr@@Base+0xa5c>  // b.tstop
   427fc:	ldr	x1, [x3]
   42800:	cmp	x2, #0x0
   42804:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42808:	ccmp	x1, x0, #0x0, eq  // eq = none
   4280c:	cset	w24, eq  // eq = none
   42810:	mov	w2, #0x1                   	// #1
   42814:	mov	w1, w24
   42818:	mov	x0, x21
   4281c:	bl	c3c0 <mpfr_underflow@plt>
   42820:	mov	w1, w0
   42824:	b	41f60 <mpfr_sqr@@Base+0x194>
   42828:	mov	w24, #0x1                   	// #1
   4282c:	b	42810 <mpfr_sqr@@Base+0xa44>
   42830:	and	w0, w24, #0xfffffffd
   42834:	cmp	w0, #0x1
   42838:	b.ne	42748 <mpfr_sqr@@Base+0x97c>  // b.any
   4283c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42840:	ldr	x1, [x0, #2576]
   42844:	add	x0, x0, #0xa10
   42848:	blr	x1
   4284c:	mrs	x1, tpidr_el0
   42850:	add	x0, x1, x0
   42854:	ldr	w1, [x0]
   42858:	orr	w1, w1, #0x8
   4285c:	str	w1, [x0]
   42860:	mov	w1, #0xffffffff            	// #-1
   42864:	b	41f60 <mpfr_sqr@@Base+0x194>
   42868:	str	x0, [x3]
   4286c:	b	42784 <mpfr_sqr@@Base+0x9b8>
   42870:	mov	w2, #0x1                   	// #1
   42874:	mov	w1, w24
   42878:	mov	x0, x21
   4287c:	bl	bf40 <mpfr_overflow@plt>
   42880:	mov	w1, w0
   42884:	b	41f60 <mpfr_sqr@@Base+0x194>
   42888:	mov	x2, #0x3                   	// #3
   4288c:	add	x0, x29, #0x68
   42890:	bl	c3b0 <__gmpn_sqr@plt>
   42894:	ldr	x3, [x29, #144]
   42898:	ldr	x7, [x29, #136]
   4289c:	ldr	x5, [x29, #128]
   428a0:	ldr	x6, [x29, #120]
   428a4:	ldr	x1, [x29, #112]
   428a8:	ldr	x0, [x29, #104]
   428ac:	orr	x0, x1, x0
   428b0:	b	425c4 <mpfr_sqr@@Base+0x7f8>
   428b4:	mov	w2, #0x1                   	// #1
   428b8:	mov	w1, w24
   428bc:	mov	x0, x21
   428c0:	bl	bf40 <mpfr_overflow@plt>
   428c4:	mov	w1, w0
   428c8:	b	41f60 <mpfr_sqr@@Base+0x194>
   428cc:	sub	x0, x0, #0x1
   428d0:	cmp	x22, x0
   428d4:	b.ne	42924 <mpfr_sqr@@Base+0xb58>  // b.any
   428d8:	ldr	x1, [x19, #16]
   428dc:	cmn	x1, #0x1
   428e0:	b.ne	42b40 <mpfr_sqr@@Base+0xd74>  // b.any
   428e4:	ldr	x1, [x19, #8]
   428e8:	cmn	x1, #0x1
   428ec:	b.ne	42b40 <mpfr_sqr@@Base+0xd74>  // b.any
   428f0:	ldr	x1, [x19]
   428f4:	cmp	x4, x1
   428f8:	b.ne	42b40 <mpfr_sqr@@Base+0xd74>  // b.any
   428fc:	cmp	w24, #0x0
   42900:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   42904:	b.ne	42b38 <mpfr_sqr@@Base+0xd6c>  // b.any
   42908:	sub	w1, w24, #0x2
   4290c:	tst	w1, #0xfffffffd
   42910:	b.ne	42b40 <mpfr_sqr@@Base+0xd74>  // b.any
   42914:	orr	x1, x3, x2
   42918:	cbz	x1, 42b40 <mpfr_sqr@@Base+0xd74>
   4291c:	str	x0, [x21, #16]
   42920:	b	4266c <mpfr_sqr@@Base+0x8a0>
   42924:	cbnz	w24, 42958 <mpfr_sqr@@Base+0xb8c>
   42928:	b.lt	42970 <mpfr_sqr@@Base+0xba4>  // b.tstop
   4292c:	ldr	x1, [x19, #16]
   42930:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42934:	cmp	x1, x0
   42938:	b.ne	42978 <mpfr_sqr@@Base+0xbac>  // b.any
   4293c:	ldr	x0, [x19, #8]
   42940:	cbnz	x0, 42980 <mpfr_sqr@@Base+0xbb4>
   42944:	ldr	x0, [x19]
   42948:	orr	x3, x3, x0
   4294c:	orr	x2, x3, x2
   42950:	cmp	x2, #0x0
   42954:	cset	w24, eq  // eq = none
   42958:	mov	w2, #0x1                   	// #1
   4295c:	mov	w1, w24
   42960:	mov	x0, x21
   42964:	bl	c3c0 <mpfr_underflow@plt>
   42968:	mov	w1, w0
   4296c:	b	41f60 <mpfr_sqr@@Base+0x194>
   42970:	mov	w24, #0x1                   	// #1
   42974:	b	42958 <mpfr_sqr@@Base+0xb8c>
   42978:	mov	w24, #0x0                   	// #0
   4297c:	b	42958 <mpfr_sqr@@Base+0xb8c>
   42980:	mov	w24, #0x0                   	// #0
   42984:	b	42958 <mpfr_sqr@@Base+0xb8c>
   42988:	cbz	x3, 4267c <mpfr_sqr@@Base+0x8b0>
   4298c:	cbnz	x2, 4299c <mpfr_sqr@@Base+0xbd0>
   42990:	ldr	x0, [x19]
   42994:	lsr	x25, x0, x25
   42998:	tbz	w25, #0, 4267c <mpfr_sqr@@Base+0x8b0>
   4299c:	ldr	x0, [x19]
   429a0:	add	x20, x20, x0
   429a4:	str	x20, [x19]
   429a8:	cmp	x20, #0x0
   429ac:	ldr	x0, [x19, #8]
   429b0:	cinc	x0, x0, eq  // eq = none
   429b4:	str	x0, [x19, #8]
   429b8:	orr	x20, x20, x0
   429bc:	cmp	x20, #0x0
   429c0:	ldr	x0, [x19, #16]
   429c4:	cinc	x0, x0, eq  // eq = none
   429c8:	cbnz	x0, 42a28 <mpfr_sqr@@Base+0xc5c>
   429cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   429d0:	str	x0, [x19, #16]
   429d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   429d8:	ldr	x1, [x0, #2544]
   429dc:	add	x0, x0, #0x9f0
   429e0:	blr	x1
   429e4:	mrs	x1, tpidr_el0
   429e8:	ldr	x0, [x1, x0]
   429ec:	cmp	x22, x0
   429f0:	b.ge	42a30 <mpfr_sqr@@Base+0xc64>  // b.tcont
   429f4:	add	x22, x22, #0x1
   429f8:	str	x22, [x21, #16]
   429fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   42a00:	ldr	x1, [x0, #2576]
   42a04:	add	x0, x0, #0xa10
   42a08:	blr	x1
   42a0c:	mrs	x1, tpidr_el0
   42a10:	add	x0, x1, x0
   42a14:	ldr	w1, [x0]
   42a18:	orr	w1, w1, #0x8
   42a1c:	str	w1, [x0]
   42a20:	mov	w1, #0x1                   	// #1
   42a24:	b	41f60 <mpfr_sqr@@Base+0x194>
   42a28:	str	x0, [x19, #16]
   42a2c:	b	429fc <mpfr_sqr@@Base+0xc30>
   42a30:	mov	w2, #0x1                   	// #1
   42a34:	mov	w1, w24
   42a38:	mov	x0, x21
   42a3c:	bl	bf40 <mpfr_overflow@plt>
   42a40:	mov	w1, w0
   42a44:	b	41f60 <mpfr_sqr@@Base+0x194>
   42a48:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   42a4c:	add	x2, x2, #0x1f8
   42a50:	mov	w1, #0x22a                 	// #554
   42a54:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   42a58:	add	x0, x0, #0x248
   42a5c:	bl	cb40 <mpfr_assert_fail@plt>
   42a60:	mov	w3, w24
   42a64:	mov	x2, x23
   42a68:	mov	x1, x23
   42a6c:	mov	x0, x21
   42a70:	bl	bd50 <mpfr_mul@plt>
   42a74:	mov	w1, w0
   42a78:	b	41f60 <mpfr_sqr@@Base+0x194>
   42a7c:	mov	w3, #0x1                   	// #1
   42a80:	mov	x2, x26
   42a84:	mov	x1, x19
   42a88:	mov	x0, x19
   42a8c:	bl	bcc0 <__gmpn_lshift@plt>
   42a90:	b	41eb8 <mpfr_sqr@@Base+0xec>
   42a94:	ldr	x2, [x21]
   42a98:	add	x1, x2, #0x3e
   42a9c:	subs	x2, x2, #0x1
   42aa0:	csel	x1, x1, x2, mi  // mi = first
   42aa4:	asr	x1, x1, #6
   42aa8:	ldr	x2, [x21, #24]
   42aac:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   42ab0:	str	x3, [x2, x1, lsl #3]
   42ab4:	b	41edc <mpfr_sqr@@Base+0x110>
   42ab8:	mov	w2, #0x1                   	// #1
   42abc:	mov	w1, w24
   42ac0:	mov	x0, x21
   42ac4:	bl	bf40 <mpfr_overflow@plt>
   42ac8:	mov	w1, w0
   42acc:	b	41f60 <mpfr_sqr@@Base+0x194>
   42ad0:	cbnz	w24, 42af0 <mpfr_sqr@@Base+0xd24>
   42ad4:	add	x22, x27, x22
   42ad8:	cmp	x0, x22
   42adc:	b.gt	42b08 <mpfr_sqr@@Base+0xd3c>
   42ae0:	mov	x0, x23
   42ae4:	bl	bf00 <mpfr_powerof2_raw@plt>
   42ae8:	cmp	w0, #0x0
   42aec:	cset	w24, ne  // ne = any
   42af0:	mov	w2, #0x1                   	// #1
   42af4:	mov	w1, w24
   42af8:	mov	x0, x21
   42afc:	bl	c3c0 <mpfr_underflow@plt>
   42b00:	mov	w1, w0
   42b04:	b	41f60 <mpfr_sqr@@Base+0x194>
   42b08:	mov	w24, #0x1                   	// #1
   42b0c:	b	42af0 <mpfr_sqr@@Base+0xd24>
   42b10:	str	x0, [x21, #16]
   42b14:	b	4219c <mpfr_sqr@@Base+0x3d0>
   42b18:	cbz	w24, 42154 <mpfr_sqr@@Base+0x388>
   42b1c:	b	42170 <mpfr_sqr@@Base+0x3a4>
   42b20:	str	x0, [x21, #16]
   42b24:	b	42460 <mpfr_sqr@@Base+0x694>
   42b28:	cbz	w24, 42410 <mpfr_sqr@@Base+0x644>
   42b2c:	b	42434 <mpfr_sqr@@Base+0x668>
   42b30:	cbz	w24, 427fc <mpfr_sqr@@Base+0xa30>
   42b34:	b	42810 <mpfr_sqr@@Base+0xa44>
   42b38:	str	x0, [x21, #16]
   42b3c:	b	4298c <mpfr_sqr@@Base+0xbc0>
   42b40:	cbz	w24, 4292c <mpfr_sqr@@Base+0xb60>
   42b44:	b	42958 <mpfr_sqr@@Base+0xb8c>

0000000000042b48 <__gmpfr_int_ceil_log2@@Base>:
   42b48:	cmp	x0, #0x1
   42b4c:	b.eq	42b88 <__gmpfr_int_ceil_log2@@Base+0x40>  // b.none
   42b50:	b.ls	42b68 <__gmpfr_int_ceil_log2@@Base+0x20>  // b.plast
   42b54:	sub	x0, x0, #0x1
   42b58:	clz	x0, x0
   42b5c:	mov	w1, #0x40                  	// #64
   42b60:	sub	w0, w1, w0
   42b64:	ret
   42b68:	stp	x29, x30, [sp, #-16]!
   42b6c:	mov	x29, sp
   42b70:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   42b74:	add	x2, x2, #0x250
   42b78:	mov	w1, #0x24                  	// #36
   42b7c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   42b80:	add	x0, x0, #0x258
   42b84:	bl	cb40 <mpfr_assert_fail@plt>
   42b88:	mov	w0, #0x0                   	// #0
   42b8c:	ret

0000000000042b90 <__gmpfr_isqrt@@Base>:
   42b90:	mov	x1, x0
   42b94:	cmp	x0, #0x1
   42b98:	b.ls	42be4 <__gmpfr_isqrt@@Base+0x54>  // b.plast
   42b9c:	mov	x2, x0
   42ba0:	mov	x0, #0x1                   	// #1
   42ba4:	lsr	x2, x2, #2
   42ba8:	lsl	x0, x0, #1
   42bac:	cmp	x2, #0x1
   42bb0:	b.hi	42ba4 <__gmpfr_isqrt@@Base+0x14>  // b.pmore
   42bb4:	udiv	x2, x1, x0
   42bb8:	add	x0, x2, x0
   42bbc:	lsr	x0, x0, #1
   42bc0:	mul	x3, x0, x0
   42bc4:	cmp	x3, x1
   42bc8:	b.hi	42bb4 <__gmpfr_isqrt@@Base+0x24>  // b.pmore
   42bcc:	add	x2, x0, #0x2
   42bd0:	mul	x2, x2, x0
   42bd4:	cmp	x2, x1
   42bd8:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
   42bdc:	b.ls	42bb4 <__gmpfr_isqrt@@Base+0x24>  // b.plast
   42be0:	ret
   42be4:	mov	x0, #0x1                   	// #1
   42be8:	b	42bb4 <__gmpfr_isqrt@@Base+0x24>

0000000000042bec <__gmpfr_cuberoot@@Base>:
   42bec:	mov	x2, x0
   42bf0:	cmp	x0, #0x3
   42bf4:	b.ls	42ca4 <__gmpfr_cuberoot@@Base+0xb8>  // b.plast
   42bf8:	mov	x1, x0
   42bfc:	mov	x0, #0x1                   	// #1
   42c00:	lsr	x1, x1, #3
   42c04:	lsl	x0, x0, #1
   42c08:	cmp	x1, #0x3
   42c0c:	b.hi	42c00 <__gmpfr_cuberoot@@Base+0x14>  // b.pmore
   42c10:	cmp	x2, #0xff
   42c14:	b.ls	42c5c <__gmpfr_cuberoot@@Base+0x70>  // b.plast
   42c18:	mul	x1, x0, x0
   42c1c:	udiv	x1, x2, x1
   42c20:	add	x1, x1, x0, lsl #1
   42c24:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   42c28:	movk	x0, #0xaaab
   42c2c:	umulh	x1, x1, x0
   42c30:	lsr	x1, x1, #1
   42c34:	mul	x3, x1, x1
   42c38:	udiv	x3, x2, x3
   42c3c:	add	x1, x3, x1, lsl #1
   42c40:	umulh	x1, x1, x0
   42c44:	lsr	x1, x1, #1
   42c48:	mul	x3, x1, x1
   42c4c:	udiv	x3, x2, x3
   42c50:	add	x1, x3, x1, lsl #1
   42c54:	umulh	x1, x1, x0
   42c58:	lsr	x0, x1, #1
   42c5c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   42c60:	movk	x5, #0xaaab
   42c64:	mul	x1, x0, x0
   42c68:	udiv	x1, x2, x1
   42c6c:	add	x0, x1, x0, lsl #1
   42c70:	umulh	x0, x0, x5
   42c74:	lsr	x0, x0, #1
   42c78:	mul	x1, x0, x0
   42c7c:	mul	x1, x1, x0
   42c80:	cmp	x1, x2
   42c84:	b.hi	42c64 <__gmpfr_cuberoot@@Base+0x78>  // b.pmore
   42c88:	add	x4, x0, #0x1
   42c8c:	mul	x3, x4, x4
   42c90:	mul	x3, x3, x4
   42c94:	cmp	x3, x2
   42c98:	ccmp	x1, x3, #0x2, ls  // ls = plast
   42c9c:	b.ls	42c64 <__gmpfr_cuberoot@@Base+0x78>  // b.plast
   42ca0:	ret
   42ca4:	mov	x0, #0x1                   	// #1
   42ca8:	b	42c10 <__gmpfr_cuberoot@@Base+0x24>
   42cac:	mov	x3, #0x0                   	// #0
   42cb0:	ldrb	w6, [x1, x3]
   42cb4:	cbz	w6, 42ce8 <__gmpfr_cuberoot@@Base+0xfc>
   42cb8:	ldrb	w2, [x0, x3]
   42cbc:	sub	w5, w2, #0x41
   42cc0:	and	w5, w5, #0xff
   42cc4:	add	w4, w2, #0x20
   42cc8:	and	w4, w4, #0xff
   42ccc:	cmp	w5, #0x1a
   42cd0:	csel	w2, w4, w2, cc  // cc = lo, ul, last
   42cd4:	add	x3, x3, #0x1
   42cd8:	cmp	w2, w6
   42cdc:	b.eq	42cb0 <__gmpfr_cuberoot@@Base+0xc4>  // b.none
   42ce0:	mov	w0, #0x1                   	// #1
   42ce4:	b	42cec <__gmpfr_cuberoot@@Base+0x100>
   42ce8:	mov	w0, #0x0                   	// #0
   42cec:	ret
   42cf0:	stp	x29, x30, [sp, #-224]!
   42cf4:	mov	x29, sp
   42cf8:	stp	x19, x20, [sp, #16]
   42cfc:	stp	x21, x22, [sp, #32]
   42d00:	stp	x23, x24, [sp, #48]
   42d04:	stp	x25, x26, [sp, #64]
   42d08:	stp	x27, x28, [sp, #80]
   42d0c:	str	x0, [x29, #112]
   42d10:	mov	x21, x1
   42d14:	str	w2, [x29, #164]
   42d18:	ldr	x1, [x0]
   42d1c:	str	x1, [x29, #152]
   42d20:	cmp	x1, #0x1
   42d24:	b.eq	43748 <__gmpfr_cuberoot@@Base+0xb5c>  // b.none
   42d28:	sub	x0, x1, #0x1
   42d2c:	clz	x0, x0
   42d30:	mov	w23, #0x40                  	// #64
   42d34:	sub	w0, w23, w0
   42d38:	add	x23, x1, w0, sxtw
   42d3c:	str	xzr, [x29, #208]
   42d40:	add	x0, x23, #0x3e
   42d44:	subs	x1, x23, #0x1
   42d48:	csel	x0, x0, x1, mi  // mi = first
   42d4c:	asr	x0, x0, #6
   42d50:	add	x22, x0, #0x1
   42d54:	lsl	x25, x22, #6
   42d58:	mov	x27, #0x40                  	// #64
   42d5c:	add	x1, x29, #0xd0
   42d60:	str	x1, [x29, #104]
   42d64:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   42d68:	add	x1, x1, #0x2d8
   42d6c:	str	x1, [x29, #128]
   42d70:	add	x1, x29, #0xc8
   42d74:	str	x1, [x29, #120]
   42d78:	b	42f64 <__gmpfr_cuberoot@@Base+0x378>
   42d7c:	ldr	x0, [x29, #104]
   42d80:	bl	bdc0 <mpfr_tmp_allocate@plt>
   42d84:	str	x0, [x29, #184]
   42d88:	b	42f84 <__gmpfr_cuberoot@@Base+0x398>
   42d8c:	mov	w3, w26
   42d90:	mov	x1, x24
   42d94:	add	x0, x24, x20, lsl #3
   42d98:	bl	bcc0 <__gmpn_lshift@plt>
   42d9c:	cmp	x20, #0x0
   42da0:	b.le	42db4 <__gmpfr_cuberoot@@Base+0x1c8>
   42da4:	lsl	x2, x20, #3
   42da8:	mov	w1, #0x0                   	// #0
   42dac:	mov	x0, x24
   42db0:	bl	c110 <memset@plt>
   42db4:	add	x26, x26, x20, lsl #6
   42db8:	neg	x26, x26
   42dbc:	ldr	w0, [x21, #4]
   42dc0:	sub	w20, w0, #0x1
   42dc4:	ands	w20, w20, w0
   42dc8:	b.ne	430d4 <__gmpfr_cuberoot@@Base+0x4e8>  // b.any
   42dcc:	sxtw	x0, w0
   42dd0:	clz	x0, x0
   42dd4:	mov	w2, #0x3f                  	// #63
   42dd8:	sub	w2, w2, w0
   42ddc:	ldr	x0, [x21, #40]
   42de0:	cmp	x19, #0x0
   42de4:	ccmp	x0, #0x0, #0x1, le
   42de8:	b.ge	42ea0 <__gmpfr_cuberoot@@Base+0x2b4>  // b.tcont
   42dec:	cmp	x19, #0x0
   42df0:	ccmp	x0, #0x0, #0x0, gt
   42df4:	b.lt	4302c <__gmpfr_cuberoot@@Base+0x440>  // b.tstop
   42df8:	sub	x0, x0, x19
   42dfc:	cmp	x0, #0x0
   42e00:	b.le	43048 <__gmpfr_cuberoot@@Base+0x45c>
   42e04:	sxtw	x3, w2
   42e08:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   42e0c:	sdiv	x1, x1, x3
   42e10:	cmp	x1, x0
   42e14:	b.le	436b4 <__gmpfr_cuberoot@@Base+0xac8>
   42e18:	sxtw	x2, w2
   42e1c:	mul	x0, x2, x0
   42e20:	ldr	x1, [x21, #48]
   42e24:	tbnz	x1, #63, 42ed0 <__gmpfr_cuberoot@@Base+0x2e4>
   42e28:	adds	x1, x1, x0
   42e2c:	b.cs	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.hs, b.nlast
   42e30:	mov	x0, x1
   42e34:	tbnz	x1, #63, 436b4 <__gmpfr_cuberoot@@Base+0xac8>
   42e38:	tbz	x26, #63, 42ee4 <__gmpfr_cuberoot@@Base+0x2f8>
   42e3c:	add	x26, x26, x0
   42e40:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   42e44:	cbz	x26, 42e70 <__gmpfr_cuberoot@@Base+0x284>
   42e48:	mov	w3, #0x40                  	// #64
   42e4c:	sub	w3, w3, w26
   42e50:	mov	x1, x24
   42e54:	mov	x0, x24
   42e58:	bl	bce0 <__gmpn_rshift@plt>
   42e5c:	cmp	x0, #0x0
   42e60:	csel	w28, w28, wzr, eq  // eq = none
   42e64:	mov	x20, #0x40                  	// #64
   42e68:	sub	x26, x20, x26
   42e6c:	b	42dbc <__gmpfr_cuberoot@@Base+0x1d0>
   42e70:	mov	w28, w26
   42e74:	cmp	x0, x19
   42e78:	b.eq	42e90 <__gmpfr_cuberoot@@Base+0x2a4>  // b.none
   42e7c:	sub	x2, x2, #0x1
   42e80:	add	x1, x24, #0x8
   42e84:	mov	x0, x24
   42e88:	bl	c520 <__gmpn_copyi@plt>
   42e8c:	b	42e64 <__gmpfr_cuberoot@@Base+0x278>
   42e90:	ldr	x0, [x24]
   42e94:	cmp	x0, #0x0
   42e98:	cset	w28, eq  // eq = none
   42e9c:	b	42e7c <__gmpfr_cuberoot@@Base+0x290>
   42ea0:	sub	x19, x0, x19
   42ea4:	cmp	x19, x0
   42ea8:	b.cc	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.lo, b.ul, b.last
   42eac:	mov	x0, x19
   42eb0:	tbnz	x19, #63, 436b4 <__gmpfr_cuberoot@@Base+0xac8>
   42eb4:	cmp	x19, #0x0
   42eb8:	b.gt	42e04 <__gmpfr_cuberoot@@Base+0x218>
   42ebc:	sxtw	x2, w2
   42ec0:	mul	x0, x2, x0
   42ec4:	tbz	x0, #63, 42e20 <__gmpfr_cuberoot@@Base+0x234>
   42ec8:	ldr	x1, [x21, #48]
   42ecc:	tbnz	x1, #63, 43068 <__gmpfr_cuberoot@@Base+0x47c>
   42ed0:	ldr	x19, [x21, #48]
   42ed4:	add	x0, x0, x19
   42ed8:	cmp	x26, #0x0
   42edc:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
   42ee0:	b.lt	43080 <__gmpfr_cuberoot@@Base+0x494>  // b.tstop
   42ee4:	add	x0, x0, x26
   42ee8:	mov	x1, #0xfffffffffffffffd    	// #-3
   42eec:	movk	x1, #0x7fff, lsl #48
   42ef0:	cmp	x0, x1
   42ef4:	ccmp	x26, x0, #0x2, ls  // ls = plast
   42ef8:	b.hi	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.pmore
   42efc:	mov	x26, x0
   42f00:	cbnz	w28, 434e0 <__gmpfr_cuberoot@@Base+0x8f4>
   42f04:	ldr	w0, [x29, #164]
   42f08:	cmp	w0, #0x0
   42f0c:	sub	x2, x25, w20, sxtw
   42f10:	ldr	x0, [x29, #152]
   42f14:	cinc	x3, x0, eq  // eq = none
   42f18:	sub	x2, x2, #0x1
   42f1c:	mov	x1, x22
   42f20:	mov	x0, x24
   42f24:	bl	c370 <mpfr_round_p@plt>
   42f28:	cbnz	w0, 434e0 <__gmpfr_cuberoot@@Base+0x8f4>
   42f2c:	mov	x0, #0xfffffffffffffeff    	// #-257
   42f30:	movk	x0, #0x7fff, lsl #48
   42f34:	sub	x0, x0, x23
   42f38:	cmp	x0, x27
   42f3c:	b.lt	434c8 <__gmpfr_cuberoot@@Base+0x8dc>  // b.tstop
   42f40:	add	x23, x23, x27
   42f44:	add	x27, x23, x23, lsr #63
   42f48:	asr	x27, x27, #1
   42f4c:	add	x0, x23, #0x3e
   42f50:	subs	x1, x23, #0x1
   42f54:	csel	x0, x0, x1, mi  // mi = first
   42f58:	asr	x0, x0, #6
   42f5c:	add	x22, x0, #0x1
   42f60:	lsl	x25, x22, #6
   42f64:	add	x0, x0, #0x2
   42f68:	str	x0, [x29, #144]
   42f6c:	lsl	x1, x0, #4
   42f70:	cmp	x1, #0x4, lsl #12
   42f74:	b.hi	42d7c <__gmpfr_cuberoot@@Base+0x190>  // b.pmore
   42f78:	sub	sp, sp, x1
   42f7c:	mov	x0, sp
   42f80:	str	x0, [x29, #184]
   42f84:	str	x22, [x29, #168]
   42f88:	lsl	x0, x22, #3
   42f8c:	str	x0, [x29, #176]
   42f90:	ldr	x1, [x29, #184]
   42f94:	add	x24, x1, x0
   42f98:	ldr	w3, [x21, #4]
   42f9c:	sub	w2, w3, #0x2
   42fa0:	sbfiz	x2, x2, #3, #32
   42fa4:	ldr	x4, [x29, #128]
   42fa8:	add	x0, x4, x2
   42fac:	ldr	w1, [x0, #4]
   42fb0:	sdiv	x19, x25, x1
   42fb4:	msub	x0, x19, x1, x25
   42fb8:	ldr	w2, [x4, x2]
   42fbc:	sub	x4, x1, #0x1
   42fc0:	madd	x0, x0, x2, x4
   42fc4:	udiv	x0, x0, x1
   42fc8:	madd	x19, x19, x2, x0
   42fcc:	add	x19, x19, #0x1
   42fd0:	ldr	x0, [x21, #24]
   42fd4:	cmp	x19, x0
   42fd8:	csel	x19, x19, x0, ls  // ls = plast
   42fdc:	mov	x2, x19
   42fe0:	ldr	x1, [x21, #16]
   42fe4:	mov	x0, x24
   42fe8:	bl	bb80 <__gmpn_set_str@plt>
   42fec:	mov	x2, x0
   42ff0:	ldr	x0, [x21, #24]
   42ff4:	cmp	x0, x19
   42ff8:	cset	w28, eq  // eq = none
   42ffc:	add	x1, x24, x2, lsl #3
   43000:	ldur	x26, [x1, #-8]
   43004:	clz	x26, x26
   43008:	subs	x20, x22, x2
   4300c:	b.mi	42e44 <__gmpfr_cuberoot@@Base+0x258>  // b.first
   43010:	cbnz	x26, 42d8c <__gmpfr_cuberoot@@Base+0x1a0>
   43014:	cmp	x20, #0x0
   43018:	b.le	42db4 <__gmpfr_cuberoot@@Base+0x1c8>
   4301c:	mov	x1, x24
   43020:	add	x0, x24, x20, lsl #3
   43024:	bl	bae0 <__gmpn_copyd@plt>
   43028:	b	42da4 <__gmpfr_cuberoot@@Base+0x1b8>
   4302c:	sub	x19, x19, x0
   43030:	neg	x1, x0
   43034:	cmp	x19, x1
   43038:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   4303c:	tbnz	x19, #63, 43688 <__gmpfr_cuberoot@@Base+0xa9c>
   43040:	neg	x0, x19
   43044:	b	4304c <__gmpfr_cuberoot@@Base+0x460>
   43048:	tbz	x0, #63, 42ebc <__gmpfr_cuberoot@@Base+0x2d0>
   4304c:	sxtw	x2, w2
   43050:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   43054:	sdiv	x1, x1, x2
   43058:	cmp	x1, x0
   4305c:	b.ge	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.tcont
   43060:	mul	x0, x2, x0
   43064:	b	42ec8 <__gmpfr_cuberoot@@Base+0x2dc>
   43068:	neg	x0, x0
   4306c:	sub	x1, x0, x1
   43070:	cmp	x1, x0
   43074:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   43078:	neg	x0, x1
   4307c:	tbnz	x1, #63, 430b8 <__gmpfr_cuberoot@@Base+0x4cc>
   43080:	cmp	x26, #0x0
   43084:	ccmp	x0, #0x0, #0x0, lt  // lt = tstop
   43088:	b.ge	42e3c <__gmpfr_cuberoot@@Base+0x250>  // b.tcont
   4308c:	neg	x26, x26
   43090:	sub	x0, x26, x0
   43094:	cmp	x0, x26
   43098:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   4309c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   430a0:	cmp	x0, x1
   430a4:	b.cc	430cc <__gmpfr_cuberoot@@Base+0x4e0>  // b.lo, b.ul, b.last
   430a8:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   430ac:	mov	x26, #0x2                   	// #2
   430b0:	movk	x26, #0x8000, lsl #48
   430b4:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   430b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   430bc:	cmp	x1, x0
   430c0:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   430c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   430c8:	b	43080 <__gmpfr_cuberoot@@Base+0x494>
   430cc:	neg	x26, x0
   430d0:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   430d4:	ldr	x0, [x21, #40]
   430d8:	cmp	x0, x19
   430dc:	b.le	432b8 <__gmpfr_cuberoot@@Base+0x6cc>
   430e0:	lsl	x1, x22, #4
   430e4:	add	x1, x1, #0x8
   430e8:	cmp	x1, #0x4, lsl #12
   430ec:	b.hi	431dc <__gmpfr_cuberoot@@Base+0x5f0>  // b.pmore
   430f0:	add	x1, x1, #0xf
   430f4:	and	x1, x1, #0xfffffffffffffff0
   430f8:	sub	sp, sp, x1
   430fc:	mov	x0, sp
   43100:	str	x0, [x29, #136]
   43104:	ldr	x3, [x21, #40]
   43108:	ldr	x4, [x29, #168]
   4310c:	sub	x3, x3, x19
   43110:	ldr	w2, [x21, #4]
   43114:	ldr	x1, [x29, #120]
   43118:	ldr	x0, [x29, #184]
   4311c:	bl	cbe0 <mpfr_mpn_exp@plt>
   43120:	mov	x19, x0
   43124:	cmn	w0, #0x2
   43128:	b.eq	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.none
   4312c:	cmp	w28, #0x0
   43130:	cset	w0, ne  // ne = any
   43134:	cmn	w19, #0x1
   43138:	csel	w1, w0, wzr, eq  // eq = none
   4313c:	str	w1, [x29, #160]
   43140:	mov	x3, x22
   43144:	ldr	x2, [x29, #184]
   43148:	mov	x1, x24
   4314c:	ldr	x0, [x29, #136]
   43150:	bl	c470 <__gmpn_mul_n@plt>
   43154:	cmn	w19, #0x1
   43158:	csel	w20, w19, wzr, ne  // ne = any
   4315c:	add	w20, w20, #0x1
   43160:	ldr	x0, [x29, #200]
   43164:	cmp	x0, #0x0
   43168:	ccmp	x25, #0x0, #0x1, ge  // ge = tcont
   4316c:	b.ge	431ec <__gmpfr_cuberoot@@Base+0x600>  // b.tcont
   43170:	cmp	x25, #0x0
   43174:	ccmp	x0, #0x0, #0x0, lt  // lt = tstop
   43178:	b.lt	43224 <__gmpfr_cuberoot@@Base+0x638>  // b.tstop
   4317c:	add	x0, x0, x25
   43180:	str	x0, [x29, #200]
   43184:	tbnz	x26, #63, 43244 <__gmpfr_cuberoot@@Base+0x658>
   43188:	mov	x1, x0
   4318c:	tbz	x0, #63, 43204 <__gmpfr_cuberoot@@Base+0x618>
   43190:	ldr	x0, [x29, #200]
   43194:	add	x26, x26, x0
   43198:	ldr	x0, [x29, #168]
   4319c:	ldr	x1, [x29, #136]
   431a0:	add	x0, x1, x0, lsl #4
   431a4:	ldur	x0, [x0, #-8]
   431a8:	tbz	x0, #63, 43294 <__gmpfr_cuberoot@@Base+0x6a8>
   431ac:	mov	w28, #0x0                   	// #0
   431b0:	ldr	w0, [x29, #160]
   431b4:	cbz	w0, 431cc <__gmpfr_cuberoot@@Base+0x5e0>
   431b8:	mov	x1, #0x0                   	// #0
   431bc:	ldr	x0, [x29, #136]
   431c0:	bl	caa0 <__gmpn_scan1@plt>
   431c4:	cmp	x0, x25
   431c8:	cset	w28, cs  // cs = hs, nlast
   431cc:	ldr	x0, [x29, #136]
   431d0:	ldr	x1, [x29, #176]
   431d4:	add	x24, x0, x1
   431d8:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   431dc:	ldr	x0, [x29, #104]
   431e0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   431e4:	str	x0, [x29, #136]
   431e8:	b	43104 <__gmpfr_cuberoot@@Base+0x518>
   431ec:	adds	x0, x25, x0
   431f0:	b.cs	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.hs, b.nlast
   431f4:	mov	x1, x0
   431f8:	tbnz	x0, #63, 436b4 <__gmpfr_cuberoot@@Base+0xac8>
   431fc:	str	x0, [x29, #200]
   43200:	tbnz	x26, #63, 43190 <__gmpfr_cuberoot@@Base+0x5a4>
   43204:	add	x0, x1, x26
   43208:	mov	x1, #0xfffffffffffffffd    	// #-3
   4320c:	movk	x1, #0x7fff, lsl #48
   43210:	cmp	x0, x1
   43214:	ccmp	x26, x0, #0x2, ls  // ls = plast
   43218:	b.hi	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.pmore
   4321c:	mov	x26, x0
   43220:	b	43198 <__gmpfr_cuberoot@@Base+0x5ac>
   43224:	neg	x0, x0
   43228:	sub	x1, x0, x25
   4322c:	cmp	x1, x0
   43230:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   43234:	tbnz	x1, #63, 43278 <__gmpfr_cuberoot@@Base+0x68c>
   43238:	neg	x1, x1
   4323c:	str	x1, [x29, #200]
   43240:	tbz	x26, #63, 43190 <__gmpfr_cuberoot@@Base+0x5a4>
   43244:	ldr	x0, [x29, #200]
   43248:	tbz	x0, #63, 43190 <__gmpfr_cuberoot@@Base+0x5a4>
   4324c:	neg	x26, x26
   43250:	sub	x0, x26, x0
   43254:	cmp	x0, x26
   43258:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   4325c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   43260:	cmp	x0, x1
   43264:	b.cc	4328c <__gmpfr_cuberoot@@Base+0x6a0>  // b.lo, b.ul, b.last
   43268:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   4326c:	mov	x26, #0x2                   	// #2
   43270:	movk	x26, #0x8000, lsl #48
   43274:	b	43198 <__gmpfr_cuberoot@@Base+0x5ac>
   43278:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4327c:	cmp	x1, x0
   43280:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   43284:	str	x0, [x29, #200]
   43288:	b	43240 <__gmpfr_cuberoot@@Base+0x654>
   4328c:	neg	x26, x0
   43290:	b	43198 <__gmpfr_cuberoot@@Base+0x5ac>
   43294:	ldr	x0, [x29, #176]
   43298:	sub	x0, x0, #0x8
   4329c:	add	x0, x1, x0
   432a0:	mov	w3, #0x1                   	// #1
   432a4:	ldr	x2, [x29, #144]
   432a8:	mov	x1, x0
   432ac:	bl	bcc0 <__gmpn_lshift@plt>
   432b0:	sub	x26, x26, #0x1
   432b4:	b	431ac <__gmpfr_cuberoot@@Base+0x5c0>
   432b8:	b.ge	434c0 <__gmpfr_cuberoot@@Base+0x8d4>  // b.tcont
   432bc:	add	x1, x22, x22, lsl #1
   432c0:	add	x1, x1, #0x1
   432c4:	lsl	x1, x1, #3
   432c8:	cmp	x1, #0x4, lsl #12
   432cc:	b.hi	433e4 <__gmpfr_cuberoot@@Base+0x7f8>  // b.pmore
   432d0:	add	x1, x1, #0xf
   432d4:	and	x1, x1, #0xfffffffffffffff0
   432d8:	sub	sp, sp, x1
   432dc:	mov	x0, sp
   432e0:	str	x0, [x29, #136]
   432e4:	ldr	x2, [x29, #176]
   432e8:	mov	w1, #0x0                   	// #0
   432ec:	ldr	x0, [x29, #184]
   432f0:	bl	c110 <memset@plt>
   432f4:	tbnz	x19, #63, 4340c <__gmpfr_cuberoot@@Base+0x820>
   432f8:	ldr	x0, [x21, #40]
   432fc:	cmp	x0, #0x0
   43300:	b.le	433f4 <__gmpfr_cuberoot@@Base+0x808>
   43304:	ldr	x0, [x21, #40]
   43308:	sub	x19, x19, x0
   4330c:	str	x19, [x29, #200]
   43310:	ldr	x4, [x29, #168]
   43314:	ldr	x0, [x29, #136]
   43318:	add	x19, x0, x4, lsl #4
   4331c:	add	x19, x19, #0x8
   43320:	ldr	x3, [x29, #200]
   43324:	ldr	w2, [x21, #4]
   43328:	ldr	x1, [x29, #120]
   4332c:	mov	x0, x19
   43330:	bl	cbe0 <mpfr_mpn_exp@plt>
   43334:	cmn	w0, #0x2
   43338:	b.eq	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.none
   4333c:	cmn	w0, #0x1
   43340:	csel	w28, w28, wzr, eq  // eq = none
   43344:	csel	w20, w0, wzr, ne  // ne = any
   43348:	ldr	x0, [x29, #200]
   4334c:	cmp	x0, #0x0
   43350:	ccmp	x25, #0x0, #0x1, ge  // ge = tcont
   43354:	b.ge	4344c <__gmpfr_cuberoot@@Base+0x860>  // b.tcont
   43358:	cmp	x25, #0x0
   4335c:	ccmp	x0, #0x0, #0x0, lt  // lt = tstop
   43360:	b.lt	43460 <__gmpfr_cuberoot@@Base+0x874>  // b.tstop
   43364:	add	x0, x0, x25
   43368:	str	x0, [x29, #200]
   4336c:	tbnz	x26, #63, 43710 <__gmpfr_cuberoot@@Base+0xb24>
   43370:	ldr	x0, [x29, #200]
   43374:	cmp	x0, #0x0
   43378:	b.le	43484 <__gmpfr_cuberoot@@Base+0x898>
   4337c:	ldr	x0, [x29, #200]
   43380:	sub	x26, x26, x0
   43384:	ldr	x0, [x29, #136]
   43388:	ldr	x1, [x29, #176]
   4338c:	add	x24, x0, x1
   43390:	mov	x6, x22
   43394:	mov	x5, x19
   43398:	lsl	x4, x22, #1
   4339c:	ldr	x3, [x29, #184]
   433a0:	mov	x2, #0x0                   	// #0
   433a4:	mov	x1, x0
   433a8:	mov	x0, x24
   433ac:	bl	ba60 <__gmpn_tdiv_qr@plt>
   433b0:	ldr	x2, [x29, #176]
   433b4:	ldr	x19, [x24, x2]
   433b8:	add	w20, w20, #0x1
   433bc:	cbz	w28, 433d0 <__gmpfr_cuberoot@@Base+0x7e4>
   433c0:	mov	x1, x22
   433c4:	ldr	x0, [x29, #136]
   433c8:	bl	c860 <__gmpn_popcount@plt>
   433cc:	cbz	x0, 436e0 <__gmpfr_cuberoot@@Base+0xaf4>
   433d0:	mov	w28, #0x0                   	// #0
   433d4:	cmp	x19, #0x1
   433d8:	b.ne	42f00 <__gmpfr_cuberoot@@Base+0x314>  // b.any
   433dc:	mov	w28, #0x0                   	// #0
   433e0:	b	436f4 <__gmpfr_cuberoot@@Base+0xb08>
   433e4:	ldr	x0, [x29, #104]
   433e8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   433ec:	str	x0, [x29, #136]
   433f0:	b	432e4 <__gmpfr_cuberoot@@Base+0x6f8>
   433f4:	sub	x0, x19, x0
   433f8:	cmp	x0, x19
   433fc:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   43400:	tbnz	x0, #63, 43688 <__gmpfr_cuberoot@@Base+0xa9c>
   43404:	str	x0, [x29, #200]
   43408:	b	43310 <__gmpfr_cuberoot@@Base+0x724>
   4340c:	ldr	x0, [x21, #40]
   43410:	cmp	x0, #0x0
   43414:	b.le	43304 <__gmpfr_cuberoot@@Base+0x718>
   43418:	sub	x0, x0, x19
   4341c:	neg	x19, x19
   43420:	cmp	x0, x19
   43424:	b.cc	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.lo, b.ul, b.last
   43428:	tbnz	x0, #63, 43438 <__gmpfr_cuberoot@@Base+0x84c>
   4342c:	neg	x0, x0
   43430:	str	x0, [x29, #200]
   43434:	b	43310 <__gmpfr_cuberoot@@Base+0x724>
   43438:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   4343c:	cmp	x0, x1
   43440:	b.ne	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.any
   43444:	str	x1, [x29, #200]
   43448:	b	43310 <__gmpfr_cuberoot@@Base+0x724>
   4344c:	adds	x0, x25, x0
   43450:	b.cs	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.hs, b.nlast
   43454:	tbnz	x0, #63, 43688 <__gmpfr_cuberoot@@Base+0xa9c>
   43458:	str	x0, [x29, #200]
   4345c:	b	4336c <__gmpfr_cuberoot@@Base+0x780>
   43460:	neg	x0, x0
   43464:	sub	x1, x0, x25
   43468:	cmp	x1, x0
   4346c:	b.cc	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.lo, b.ul, b.last
   43470:	tbnz	x1, #63, 434a4 <__gmpfr_cuberoot@@Base+0x8b8>
   43474:	neg	x1, x1
   43478:	str	x1, [x29, #200]
   4347c:	tbnz	x26, #63, 4337c <__gmpfr_cuberoot@@Base+0x790>
   43480:	ldr	x0, [x29, #200]
   43484:	sub	x0, x26, x0
   43488:	mov	x1, #0xfffffffffffffffd    	// #-3
   4348c:	movk	x1, #0x7fff, lsl #48
   43490:	cmp	x0, x1
   43494:	ccmp	x0, x26, #0x0, ls  // ls = plast
   43498:	b.cc	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.lo, b.ul, b.last
   4349c:	mov	x26, x0
   434a0:	b	43384 <__gmpfr_cuberoot@@Base+0x798>
   434a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   434a8:	cmp	x1, x0
   434ac:	b.ne	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.any
   434b0:	str	x0, [x29, #200]
   434b4:	b	4347c <__gmpfr_cuberoot@@Base+0x890>
   434b8:	neg	x26, x0
   434bc:	b	43384 <__gmpfr_cuberoot@@Base+0x798>
   434c0:	mov	w20, #0x0                   	// #0
   434c4:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   434c8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   434cc:	add	x2, x2, #0xd68
   434d0:	mov	w1, #0x372                 	// #882
   434d4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   434d8:	add	x0, x0, #0x268
   434dc:	bl	cb40 <mpfr_assert_fail@plt>
   434e0:	add	x6, x29, #0xdc
   434e4:	ldr	w5, [x29, #164]
   434e8:	ldr	x4, [x29, #152]
   434ec:	ldr	w3, [x21]
   434f0:	mov	x2, x25
   434f4:	mov	x1, x24
   434f8:	ldr	x19, [x29, #112]
   434fc:	ldr	x0, [x19, #24]
   43500:	bl	ca20 <mpfr_round_raw@plt>
   43504:	cbz	w0, 4352c <__gmpfr_cuberoot@@Base+0x940>
   43508:	ldr	x1, [x19]
   4350c:	add	x0, x1, #0x3e
   43510:	subs	x1, x1, #0x1
   43514:	csel	x0, x0, x1, mi  // mi = first
   43518:	asr	x0, x0, #6
   4351c:	ldr	x1, [x19, #24]
   43520:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   43524:	str	x2, [x1, x0, lsl #3]
   43528:	add	x26, x26, #0x1
   4352c:	ldr	w1, [x21]
   43530:	mov	w0, #0x1                   	// #1
   43534:	cmp	w1, #0x0
   43538:	cneg	w0, w0, ne  // ne = any
   4353c:	ldr	x1, [x29, #112]
   43540:	str	w0, [x1, #8]
   43544:	cmp	x26, #0x0
   43548:	ccmp	x25, #0x0, #0x1, ge  // ge = tcont
   4354c:	b.ge	435b0 <__gmpfr_cuberoot@@Base+0x9c4>  // b.tcont
   43550:	cmp	x26, #0x0
   43554:	ccmp	x25, #0x0, #0x0, lt  // lt = tstop
   43558:	b.ge	43600 <__gmpfr_cuberoot@@Base+0xa14>  // b.tcont
   4355c:	neg	x26, x26
   43560:	sub	x25, x26, x25
   43564:	cmp	x25, x26
   43568:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   4356c:	neg	x26, x25
   43570:	tbz	x25, #63, 435c0 <__gmpfr_cuberoot@@Base+0x9d4>
   43574:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   43578:	cmp	x25, x0
   4357c:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   43580:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   43584:	ldr	x0, [x29, #112]
   43588:	str	x1, [x0, #16]
   4358c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   43590:	ldr	x2, [x0, #2512]
   43594:	add	x0, x0, #0x9d0
   43598:	blr	x2
   4359c:	mrs	x2, tpidr_el0
   435a0:	ldr	x0, [x2, x0]
   435a4:	cmp	x0, x1
   435a8:	b.eq	43628 <__gmpfr_cuberoot@@Base+0xa3c>  // b.none
   435ac:	b	435e8 <__gmpfr_cuberoot@@Base+0x9fc>
   435b0:	adds	x25, x25, x26
   435b4:	b.cs	436b4 <__gmpfr_cuberoot@@Base+0xac8>  // b.hs, b.nlast
   435b8:	mov	x26, x25
   435bc:	tbnz	x25, #63, 436b4 <__gmpfr_cuberoot@@Base+0xac8>
   435c0:	ldr	x0, [x29, #112]
   435c4:	str	x26, [x0, #16]
   435c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   435cc:	ldr	x1, [x0, #2512]
   435d0:	add	x0, x0, #0x9d0
   435d4:	blr	x1
   435d8:	mrs	x1, tpidr_el0
   435dc:	ldr	x0, [x1, x0]
   435e0:	cmp	x0, x26
   435e4:	b.le	43608 <__gmpfr_cuberoot@@Base+0xa1c>
   435e8:	ldr	w2, [x29, #164]
   435ec:	ldr	w1, [x29, #220]
   435f0:	ldr	x0, [x29, #112]
   435f4:	bl	cb30 <mpfr_check_range@plt>
   435f8:	mov	w1, w0
   435fc:	b	43630 <__gmpfr_cuberoot@@Base+0xa44>
   43600:	add	x26, x26, x25
   43604:	b	435c0 <__gmpfr_cuberoot@@Base+0x9d4>
   43608:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4360c:	ldr	x1, [x0, #2544]
   43610:	add	x0, x0, #0x9f0
   43614:	blr	x1
   43618:	mrs	x1, tpidr_el0
   4361c:	ldr	x0, [x1, x0]
   43620:	cmp	x0, x26
   43624:	b.lt	435e8 <__gmpfr_cuberoot@@Base+0x9fc>  // b.tstop
   43628:	ldr	w1, [x29, #220]
   4362c:	cbnz	w1, 43660 <__gmpfr_cuberoot@@Base+0xa74>
   43630:	str	w1, [x29, #220]
   43634:	ldr	x0, [x29, #208]
   43638:	cbnz	x0, 436d8 <__gmpfr_cuberoot@@Base+0xaec>
   4363c:	ldr	w0, [x29, #220]
   43640:	mov	sp, x29
   43644:	ldp	x19, x20, [sp, #16]
   43648:	ldp	x21, x22, [sp, #32]
   4364c:	ldp	x23, x24, [sp, #48]
   43650:	ldp	x25, x26, [sp, #64]
   43654:	ldp	x27, x28, [sp, #80]
   43658:	ldp	x29, x30, [sp], #224
   4365c:	ret
   43660:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   43664:	ldr	x2, [x0, #2576]
   43668:	add	x0, x0, #0xa10
   4366c:	blr	x2
   43670:	mrs	x2, tpidr_el0
   43674:	add	x0, x2, x0
   43678:	ldr	w2, [x0]
   4367c:	orr	w2, w2, #0x8
   43680:	str	w2, [x0]
   43684:	b	43630 <__gmpfr_cuberoot@@Base+0xa44>
   43688:	ldr	w0, [x29, #164]
   4368c:	cmp	w0, #0x0
   43690:	csinc	w1, w0, wzr, ne  // ne = any
   43694:	ldr	w0, [x21]
   43698:	mov	w2, #0x1                   	// #1
   4369c:	cmp	w0, #0x0
   436a0:	cneg	w2, w2, ne  // ne = any
   436a4:	ldr	x0, [x29, #112]
   436a8:	bl	c3c0 <mpfr_underflow@plt>
   436ac:	str	w0, [x29, #220]
   436b0:	b	43634 <__gmpfr_cuberoot@@Base+0xa48>
   436b4:	ldr	w0, [x21]
   436b8:	mov	w2, #0x1                   	// #1
   436bc:	cmp	w0, #0x0
   436c0:	cneg	w2, w2, ne  // ne = any
   436c4:	ldr	w1, [x29, #164]
   436c8:	ldr	x0, [x29, #112]
   436cc:	bl	bf40 <mpfr_overflow@plt>
   436d0:	str	w0, [x29, #220]
   436d4:	b	43634 <__gmpfr_cuberoot@@Base+0xa48>
   436d8:	bl	c410 <mpfr_tmp_free@plt>
   436dc:	b	4363c <__gmpfr_cuberoot@@Base+0xa50>
   436e0:	cmp	x19, #0x1
   436e4:	b.ne	42f00 <__gmpfr_cuberoot@@Base+0x314>  // b.any
   436e8:	ldr	x28, [x24]
   436ec:	mvn	x28, x28
   436f0:	and	w28, w28, #0x1
   436f4:	mov	w3, #0x1                   	// #1
   436f8:	ldr	x2, [x29, #144]
   436fc:	mov	x1, x24
   43700:	mov	x0, x24
   43704:	bl	bce0 <__gmpn_rshift@plt>
   43708:	add	x26, x26, #0x1
   4370c:	b	42f00 <__gmpfr_cuberoot@@Base+0x314>
   43710:	ldr	x0, [x29, #200]
   43714:	cmp	x0, #0x0
   43718:	b.le	4337c <__gmpfr_cuberoot@@Base+0x790>
   4371c:	sub	x0, x0, x26
   43720:	neg	x26, x26
   43724:	cmp	x0, x26
   43728:	b.cc	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.lo, b.ul, b.last
   4372c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   43730:	cmp	x0, x1
   43734:	b.cc	434b8 <__gmpfr_cuberoot@@Base+0x8cc>  // b.lo, b.ul, b.last
   43738:	b.ne	43688 <__gmpfr_cuberoot@@Base+0xa9c>  // b.any
   4373c:	mov	x26, #0x2                   	// #2
   43740:	movk	x26, #0x8000, lsl #48
   43744:	b	43384 <__gmpfr_cuberoot@@Base+0x798>
   43748:	str	xzr, [x29, #208]
   4374c:	ldr	x23, [x29, #152]
   43750:	add	x0, x23, #0x3e
   43754:	subs	x1, x23, #0x1
   43758:	csel	x0, x0, x1, mi  // mi = first
   4375c:	asr	x0, x0, #6
   43760:	add	x22, x0, #0x1
   43764:	lsl	x25, x22, #6
   43768:	b	42d58 <__gmpfr_cuberoot@@Base+0x16c>

000000000004376c <mpfr_strtofr@@Base>:
   4376c:	stp	x29, x30, [sp, #-160]!
   43770:	mov	x29, sp
   43774:	stp	x19, x20, [sp, #16]
   43778:	stp	x21, x22, [sp, #32]
   4377c:	stp	x23, x24, [sp, #48]
   43780:	stp	x25, x26, [sp, #64]
   43784:	stp	x27, x28, [sp, #80]
   43788:	mov	x21, x0
   4378c:	sub	w0, w3, #0x2
   43790:	cmp	w0, #0x3c
   43794:	ccmp	w3, #0x0, #0x4, hi  // hi = pmore
   43798:	b.ne	437e8 <mpfr_strtofr@@Base+0x7c>  // b.any
   4379c:	mov	x22, x1
   437a0:	mov	x23, x2
   437a4:	mov	w20, w3
   437a8:	mov	w26, w4
   437ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   437b0:	str	x0, [x21, #16]
   437b4:	mov	w0, #0x1                   	// #1
   437b8:	str	w0, [x21, #8]
   437bc:	bl	bea0 <localeconv@plt>
   437c0:	ldr	x0, [x0]
   437c4:	ldrb	w0, [x0, #1]
   437c8:	mov	w27, #0x2e                  	// #46
   437cc:	cbz	w0, 43800 <mpfr_strtofr@@Base+0x94>
   437d0:	str	xzr, [sp, #112]
   437d4:	bl	c630 <__ctype_b_loc@plt>
   437d8:	mov	x25, x0
   437dc:	ldr	x0, [x0]
   437e0:	mov	x19, x22
   437e4:	b	43814 <mpfr_strtofr@@Base+0xa8>
   437e8:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   437ec:	add	x2, x2, #0x278
   437f0:	mov	w1, #0x3b0                 	// #944
   437f4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   437f8:	add	x0, x0, #0x268
   437fc:	bl	cb40 <mpfr_assert_fail@plt>
   43800:	bl	bea0 <localeconv@plt>
   43804:	ldr	x0, [x0]
   43808:	ldrb	w27, [x0]
   4380c:	b	437d0 <mpfr_strtofr@@Base+0x64>
   43810:	add	x19, x19, #0x1
   43814:	ldrb	w24, [x19]
   43818:	and	x1, x24, #0xff
   4381c:	ldrh	w1, [x0, x1, lsl #1]
   43820:	tbnz	w1, #13, 43810 <mpfr_strtofr@@Base+0xa4>
   43824:	cmp	w24, #0x2d
   43828:	cset	w0, eq  // eq = none
   4382c:	str	w0, [sp, #104]
   43830:	sub	w0, w24, #0x2b
   43834:	and	w0, w0, #0xfffffffd
   43838:	tst	w0, #0xff
   4383c:	cinc	x19, x19, eq  // eq = none
   43840:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   43844:	add	x1, x1, #0x2a0
   43848:	mov	x0, x19
   4384c:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   43850:	cbz	w0, 438b4 <mpfr_strtofr@@Base+0x148>
   43854:	cmp	w20, #0x10
   43858:	b.gt	43980 <mpfr_strtofr@@Base+0x214>
   4385c:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   43860:	add	x1, x1, #0x2a8
   43864:	mov	x0, x19
   43868:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   4386c:	cbz	w0, 43920 <mpfr_strtofr@@Base+0x1b4>
   43870:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   43874:	add	x1, x1, #0x2b0
   43878:	mov	x0, x19
   4387c:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   43880:	cbz	w0, 439f8 <mpfr_strtofr@@Base+0x28c>
   43884:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   43888:	add	x1, x1, #0x2b8
   4388c:	mov	x0, x19
   43890:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   43894:	cbz	w0, 43a18 <mpfr_strtofr@@Base+0x2ac>
   43898:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   4389c:	add	x1, x1, #0x2c8
   438a0:	mov	x0, x19
   438a4:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   438a8:	cbnz	w0, 43994 <mpfr_strtofr@@Base+0x228>
   438ac:	add	x22, x19, #0x3
   438b0:	b	439fc <mpfr_strtofr@@Base+0x290>
   438b4:	add	x22, x19, #0x5
   438b8:	ldrb	w0, [x22]
   438bc:	cmp	w0, #0x28
   438c0:	b.eq	43928 <mpfr_strtofr@@Base+0x1bc>  // b.none
   438c4:	mov	x0, #0x2                   	// #2
   438c8:	movk	x0, #0x8000, lsl #48
   438cc:	str	x0, [x21, #16]
   438d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   438d4:	ldr	x1, [x0, #2576]
   438d8:	add	x0, x0, #0xa10
   438dc:	blr	x1
   438e0:	mrs	x1, tpidr_el0
   438e4:	add	x0, x1, x0
   438e8:	ldr	w1, [x0]
   438ec:	orr	w1, w1, #0x4
   438f0:	str	w1, [x0]
   438f4:	mov	w20, #0x0                   	// #0
   438f8:	cbz	x23, 43900 <mpfr_strtofr@@Base+0x194>
   438fc:	str	x22, [x23]
   43900:	mov	w0, w20
   43904:	ldp	x19, x20, [sp, #16]
   43908:	ldp	x21, x22, [sp, #32]
   4390c:	ldp	x23, x24, [sp, #48]
   43910:	ldp	x25, x26, [sp, #64]
   43914:	ldp	x27, x28, [sp, #80]
   43918:	ldp	x29, x30, [sp], #160
   4391c:	ret
   43920:	add	x22, x19, #0x3
   43924:	b	438b8 <mpfr_strtofr@@Base+0x14c>
   43928:	add	x2, x22, #0x1
   4392c:	ldrb	w1, [x22, #1]
   43930:	cmp	w1, #0x29
   43934:	b.ne	4394c <mpfr_strtofr@@Base+0x1e0>  // b.any
   43938:	add	x22, x2, #0x1
   4393c:	b	438c4 <mpfr_strtofr@@Base+0x158>
   43940:	ldrb	w1, [x2, #1]!
   43944:	cmp	w1, #0x29
   43948:	b.eq	43938 <mpfr_strtofr@@Base+0x1cc>  // b.none
   4394c:	and	w0, w1, #0xffffffdf
   43950:	sub	w0, w0, #0x41
   43954:	and	w0, w0, #0xff
   43958:	cmp	w0, #0x19
   4395c:	b.ls	43940 <mpfr_strtofr@@Base+0x1d4>  // b.plast
   43960:	sub	w0, w1, #0x30
   43964:	and	w0, w0, #0xff
   43968:	cmp	w1, #0x5f
   4396c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   43970:	b.ls	43940 <mpfr_strtofr@@Base+0x1d4>  // b.plast
   43974:	cmp	w1, #0x29
   43978:	b.ne	438c4 <mpfr_strtofr@@Base+0x158>  // b.any
   4397c:	b	43938 <mpfr_strtofr@@Base+0x1cc>
   43980:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   43984:	add	x1, x1, #0x2b0
   43988:	mov	x0, x19
   4398c:	bl	42cac <__gmpfr_cuberoot@@Base+0xc0>
   43990:	cbz	w0, 439f8 <mpfr_strtofr@@Base+0x28c>
   43994:	tst	w20, #0xffffffef
   43998:	b.ne	43a44 <mpfr_strtofr@@Base+0x2d8>  // b.any
   4399c:	ldrb	w0, [x19]
   439a0:	cmp	w0, #0x30
   439a4:	b.eq	43a20 <mpfr_strtofr@@Base+0x2b4>  // b.none
   439a8:	mov	x28, #0x0                   	// #0
   439ac:	tst	w20, #0xfffffffd
   439b0:	b.ne	439c0 <mpfr_strtofr@@Base+0x254>  // b.any
   439b4:	cbnz	w20, 43a80 <mpfr_strtofr@@Base+0x314>
   439b8:	mov	x28, #0x0                   	// #0
   439bc:	mov	w20, #0xa                   	// #10
   439c0:	str	w20, [sp, #108]
   439c4:	mov	x0, x19
   439c8:	bl	bab0 <strlen@plt>
   439cc:	add	x0, x0, #0x1
   439d0:	str	x0, [sp, #136]
   439d4:	bl	ccf0 <mpfr_allocate_func@plt>
   439d8:	str	x0, [sp, #112]
   439dc:	mov	w6, #0x0                   	// #0
   439e0:	mov	w5, #0x1                   	// #1
   439e4:	ldr	x3, [sp, #112]
   439e8:	str	xzr, [sp, #144]
   439ec:	str	xzr, [sp, #152]
   439f0:	mov	w4, w6
   439f4:	b	43af0 <mpfr_strtofr@@Base+0x384>
   439f8:	add	x22, x19, #0x5
   439fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   43a00:	str	x0, [x21, #16]
   43a04:	cmp	w24, #0x2d
   43a08:	mov	w0, #0xffffffff            	// #-1
   43a0c:	csinc	w0, w0, wzr, eq  // eq = none
   43a10:	str	w0, [x21, #8]
   43a14:	b	438f4 <mpfr_strtofr@@Base+0x188>
   43a18:	add	x22, x19, #0x8
   43a1c:	b	439fc <mpfr_strtofr@@Base+0x290>
   43a20:	ldrb	w0, [x19, #1]
   43a24:	and	w0, w0, #0xffffffdf
   43a28:	and	w0, w0, #0xff
   43a2c:	cmp	w0, #0x58
   43a30:	b.ne	43db0 <mpfr_strtofr@@Base+0x644>  // b.any
   43a34:	mov	x28, x19
   43a38:	add	x19, x19, #0x2
   43a3c:	mov	w20, #0x10                  	// #16
   43a40:	b	439c0 <mpfr_strtofr@@Base+0x254>
   43a44:	mov	x28, #0x0                   	// #0
   43a48:	tst	w20, #0xfffffffd
   43a4c:	b.ne	439c0 <mpfr_strtofr@@Base+0x254>  // b.any
   43a50:	ldrb	w0, [x19]
   43a54:	cmp	w0, #0x30
   43a58:	b.ne	439b4 <mpfr_strtofr@@Base+0x248>  // b.any
   43a5c:	ldrb	w0, [x19, #1]
   43a60:	and	w0, w0, #0xffffffdf
   43a64:	and	w0, w0, #0xff
   43a68:	cmp	w0, #0x42
   43a6c:	b.ne	439b4 <mpfr_strtofr@@Base+0x248>  // b.any
   43a70:	mov	x28, x19
   43a74:	add	x19, x19, #0x2
   43a78:	mov	w20, #0x2                   	// #2
   43a7c:	b	439c0 <mpfr_strtofr@@Base+0x254>
   43a80:	mov	x28, #0x0                   	// #0
   43a84:	b	439c0 <mpfr_strtofr@@Base+0x254>
   43a88:	mov	x19, x28
   43a8c:	mov	x28, #0x0                   	// #0
   43a90:	b	439e4 <mpfr_strtofr@@Base+0x278>
   43a94:	sub	w0, w2, #0x30
   43a98:	cmp	w0, #0x9
   43a9c:	b.ls	43abc <mpfr_strtofr@@Base+0x350>  // b.plast
   43aa0:	sub	w0, w2, #0x61
   43aa4:	cmp	w0, #0x19
   43aa8:	b.hi	43b10 <mpfr_strtofr@@Base+0x3a4>  // b.pmore
   43aac:	sub	w0, w2, #0x3d
   43ab0:	sub	w1, w2, #0x57
   43ab4:	cmp	w20, #0x25
   43ab8:	csel	w0, w1, w0, lt  // lt = tstop
   43abc:	cmp	w20, w0
   43ac0:	b.le	43b3c <mpfr_strtofr@@Base+0x3d0>
   43ac4:	cmn	w0, #0x1
   43ac8:	b.eq	43b3c <mpfr_strtofr@@Base+0x3d0>  // b.none
   43acc:	tbnz	w0, #31, 43b24 <mpfr_strtofr@@Base+0x3b8>
   43ad0:	mov	x1, x3
   43ad4:	strb	w0, [x1], #1
   43ad8:	mov	x3, x1
   43adc:	cbnz	w4, 43aec <mpfr_strtofr@@Base+0x380>
   43ae0:	ldr	x0, [sp, #144]
   43ae4:	add	x0, x0, #0x1
   43ae8:	str	x0, [sp, #144]
   43aec:	mov	x19, x24
   43af0:	mov	x24, x19
   43af4:	ldrb	w2, [x24], #1
   43af8:	cmp	w2, #0x2e
   43afc:	ccmp	w2, w27, #0x4, ne  // ne = any
   43b00:	b.ne	43a94 <mpfr_strtofr@@Base+0x328>  // b.any
   43b04:	cbnz	w4, 43b3c <mpfr_strtofr@@Base+0x3d0>
   43b08:	mov	w4, w5
   43b0c:	b	43aec <mpfr_strtofr@@Base+0x380>
   43b10:	sub	w0, w2, #0x41
   43b14:	cmp	w0, #0x19
   43b18:	b.hi	43b3c <mpfr_strtofr@@Base+0x3d0>  // b.pmore
   43b1c:	sub	w0, w2, #0x37
   43b20:	b	43abc <mpfr_strtofr@@Base+0x350>
   43b24:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   43b28:	add	x2, x2, #0x2d0
   43b2c:	mov	w1, #0x15f                 	// #351
   43b30:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   43b34:	add	x0, x0, #0x268
   43b38:	bl	cb40 <mpfr_assert_fail@plt>
   43b3c:	ldr	x0, [sp, #112]
   43b40:	sub	x3, x3, x0
   43b44:	str	x3, [sp, #128]
   43b48:	cbnz	x3, 43b68 <mpfr_strtofr@@Base+0x3fc>
   43b4c:	cbnz	x28, 43a88 <mpfr_strtofr@@Base+0x31c>
   43b50:	mov	w20, #0x0                   	// #0
   43b54:	cbz	x0, 438f8 <mpfr_strtofr@@Base+0x18c>
   43b58:	ldr	x1, [sp, #136]
   43b5c:	bl	cc20 <mpfr_free_func@plt>
   43b60:	mov	w20, #0x0                   	// #0
   43b64:	b	438f8 <mpfr_strtofr@@Base+0x18c>
   43b68:	cmp	w2, #0x40
   43b6c:	b.eq	43b88 <mpfr_strtofr@@Base+0x41c>  // b.none
   43b70:	cmp	w20, #0xa
   43b74:	b.gt	43b98 <mpfr_strtofr@@Base+0x42c>
   43b78:	and	w1, w2, #0xffffffdf
   43b7c:	and	w1, w1, #0xff
   43b80:	cmp	w1, #0x45
   43b84:	b.ne	43b98 <mpfr_strtofr@@Base+0x42c>  // b.any
   43b88:	ldrb	w4, [x24]
   43b8c:	ldr	x1, [x25]
   43b90:	ldrh	w1, [x1, x4, lsl #1]
   43b94:	tbz	w1, #13, 43bf0 <mpfr_strtofr@@Base+0x484>
   43b98:	cmp	w20, #0x2
   43b9c:	ccmp	w20, #0x10, #0x4, ne  // ne = any
   43ba0:	b.ne	43c8c <mpfr_strtofr@@Base+0x520>  // b.any
   43ba4:	and	w1, w2, #0xffffffdf
   43ba8:	and	w1, w1, #0xff
   43bac:	cmp	w1, #0x50
   43bb0:	b.ne	43cc4 <mpfr_strtofr@@Base+0x558>  // b.any
   43bb4:	ldrb	w2, [x24]
   43bb8:	ldr	x1, [x25]
   43bbc:	ldrh	w1, [x1, x2, lsl #1]
   43bc0:	mov	x22, x19
   43bc4:	mov	w20, #0x1                   	// #1
   43bc8:	tbnz	w1, #13, 43c94 <mpfr_strtofr@@Base+0x528>
   43bcc:	mov	w2, #0xa                   	// #10
   43bd0:	add	x1, sp, #0x60
   43bd4:	mov	x0, x24
   43bd8:	bl	c650 <strtol@plt>
   43bdc:	ldr	x22, [sp, #96]
   43be0:	cmp	x24, x22
   43be4:	csel	x22, x22, x19, ne  // ne = any
   43be8:	str	x0, [sp, #152]
   43bec:	b	43c4c <mpfr_strtofr@@Base+0x4e0>
   43bf0:	mov	w2, #0xa                   	// #10
   43bf4:	add	x1, sp, #0x60
   43bf8:	mov	x0, x24
   43bfc:	bl	c650 <strtol@plt>
   43c00:	ldr	x22, [sp, #96]
   43c04:	cmp	x24, x22
   43c08:	csel	x22, x22, x19, ne  // ne = any
   43c0c:	tbnz	x0, #63, 43c34 <mpfr_strtofr@@Base+0x4c8>
   43c10:	ldr	x1, [sp, #144]
   43c14:	tbnz	x1, #63, 43c3c <mpfr_strtofr@@Base+0x4d0>
   43c18:	adds	x1, x1, x0
   43c1c:	b.cs	43d94 <mpfr_strtofr@@Base+0x628>  // b.hs, b.nlast
   43c20:	cmp	x1, #0x0
   43c24:	csel	x0, x0, x1, lt  // lt = tstop
   43c28:	mov	w20, #0x2                   	// #2
   43c2c:	csinc	w20, w20, wzr, lt  // lt = tstop
   43c30:	b	43c48 <mpfr_strtofr@@Base+0x4dc>
   43c34:	ldr	x1, [sp, #144]
   43c38:	tbnz	x1, #63, 43c60 <mpfr_strtofr@@Base+0x4f4>
   43c3c:	ldr	x1, [sp, #144]
   43c40:	add	x0, x0, x1
   43c44:	mov	w20, #0x1                   	// #1
   43c48:	str	x0, [sp, #144]
   43c4c:	ldr	x0, [sp, #112]
   43c50:	ldr	x3, [sp, #128]
   43c54:	mov	x1, x0
   43c58:	cbnz	x3, 43c94 <mpfr_strtofr@@Base+0x528>
   43c5c:	b	43cf0 <mpfr_strtofr@@Base+0x584>
   43c60:	neg	x0, x0
   43c64:	sub	x1, x0, x1
   43c68:	cmp	x0, x1
   43c6c:	b.hi	43da0 <mpfr_strtofr@@Base+0x634>  // b.pmore
   43c70:	mov	x0, x1
   43c74:	tbz	x1, #63, 43c84 <mpfr_strtofr@@Base+0x518>
   43c78:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   43c7c:	mov	w20, #0x1                   	// #1
   43c80:	b	43c48 <mpfr_strtofr@@Base+0x4dc>
   43c84:	mov	w20, #0x1                   	// #1
   43c88:	b	43da8 <mpfr_strtofr@@Base+0x63c>
   43c8c:	mov	x22, x19
   43c90:	mov	w20, #0x1                   	// #1
   43c94:	mov	x1, x0
   43c98:	add	x3, x0, x3
   43c9c:	ldrb	w0, [x1]
   43ca0:	cbnz	w0, 43cd0 <mpfr_strtofr@@Base+0x564>
   43ca4:	ldr	x0, [sp, #144]
   43ca8:	sub	x0, x0, #0x1
   43cac:	str	x0, [sp, #144]
   43cb0:	add	x1, x1, #0x1
   43cb4:	sub	x0, x3, x1
   43cb8:	str	x0, [sp, #128]
   43cbc:	cbnz	x0, 43c9c <mpfr_strtofr@@Base+0x530>
   43cc0:	b	43cf0 <mpfr_strtofr@@Base+0x584>
   43cc4:	mov	x22, x19
   43cc8:	mov	w20, #0x1                   	// #1
   43ccc:	b	43c94 <mpfr_strtofr@@Base+0x528>
   43cd0:	ldr	x0, [sp, #128]
   43cd4:	cbz	x0, 43cf0 <mpfr_strtofr@@Base+0x584>
   43cd8:	mov	x3, x0
   43cdc:	sub	x0, x0, #0x1
   43ce0:	ldrb	w2, [x1, x0]
   43ce4:	cbnz	w2, 43d50 <mpfr_strtofr@@Base+0x5e4>
   43ce8:	str	x0, [sp, #128]
   43cec:	cbnz	x0, 43cd8 <mpfr_strtofr@@Base+0x56c>
   43cf0:	str	x1, [sp, #120]
   43cf4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   43cf8:	str	x0, [x21, #16]
   43cfc:	ldr	w0, [sp, #104]
   43d00:	cmp	w0, #0x0
   43d04:	mov	w0, #0xffffffff            	// #-1
   43d08:	csinc	w0, w0, wzr, ne  // ne = any
   43d0c:	str	w0, [x21, #8]
   43d10:	ldr	x0, [sp, #112]
   43d14:	cbz	x0, 438f4 <mpfr_strtofr@@Base+0x188>
   43d18:	mov	w20, #0x0                   	// #0
   43d1c:	ldr	x1, [sp, #136]
   43d20:	bl	cc20 <mpfr_free_func@plt>
   43d24:	cmp	w20, #0x2
   43d28:	b.ne	438f8 <mpfr_strtofr@@Base+0x18c>  // b.any
   43d2c:	mov	w2, #0x1                   	// #1
   43d30:	ldr	w0, [sp, #104]
   43d34:	cmp	w0, #0x0
   43d38:	cneg	w2, w2, ne  // ne = any
   43d3c:	mov	w1, w26
   43d40:	mov	x0, x21
   43d44:	bl	bf40 <mpfr_overflow@plt>
   43d48:	mov	w20, w0
   43d4c:	b	438f8 <mpfr_strtofr@@Base+0x18c>
   43d50:	str	x1, [sp, #120]
   43d54:	cbz	x3, 43cf4 <mpfr_strtofr@@Base+0x588>
   43d58:	ldr	x0, [sp, #112]
   43d5c:	cmp	x0, #0x0
   43d60:	ccmp	w20, #0x1, #0x4, ne  // ne = any
   43d64:	b.ne	43d1c <mpfr_strtofr@@Base+0x5b0>  // b.any
   43d68:	cmp	w20, #0x1
   43d6c:	b.ne	43d24 <mpfr_strtofr@@Base+0x5b8>  // b.any
   43d70:	mov	w2, w26
   43d74:	add	x1, sp, #0x68
   43d78:	mov	x0, x21
   43d7c:	bl	42cf0 <__gmpfr_cuberoot@@Base+0x104>
   43d80:	mov	w20, w0
   43d84:	ldr	x1, [sp, #136]
   43d88:	ldr	x0, [sp, #112]
   43d8c:	bl	cc20 <mpfr_free_func@plt>
   43d90:	b	438f8 <mpfr_strtofr@@Base+0x18c>
   43d94:	mov	x0, x1
   43d98:	mov	w20, #0x2                   	// #2
   43d9c:	b	43c48 <mpfr_strtofr@@Base+0x4dc>
   43da0:	mov	x0, x1
   43da4:	mov	w20, #0x3                   	// #3
   43da8:	neg	x0, x0
   43dac:	b	43c48 <mpfr_strtofr@@Base+0x4dc>
   43db0:	mov	x28, #0x0                   	// #0
   43db4:	tst	w20, #0xfffffffd
   43db8:	b.eq	43a5c <mpfr_strtofr@@Base+0x2f0>  // b.none
   43dbc:	b	439c0 <mpfr_strtofr@@Base+0x254>
   43dc0:	stp	x29, x30, [sp, #-272]!
   43dc4:	mov	x29, sp
   43dc8:	stp	x19, x20, [sp, #16]
   43dcc:	stp	x25, x26, [sp, #64]
   43dd0:	stp	x27, x28, [sp, #80]
   43dd4:	str	x0, [sp, #104]
   43dd8:	mov	x25, x1
   43ddc:	mov	x27, x2
   43de0:	str	w3, [sp, #124]
   43de4:	str	w4, [sp, #120]
   43de8:	ldr	w19, [x2, #4]
   43dec:	mov	x1, #0x1                   	// #1
   43df0:	mov	x0, x2
   43df4:	bl	bc00 <__gmpz_cmpabs_ui@plt>
   43df8:	cbz	w0, 43f80 <mpfr_strtofr@@Base+0x814>
   43dfc:	stp	x21, x22, [sp, #32]
   43e00:	stp	x23, x24, [sp, #48]
   43e04:	ldp	x0, x1, [x27]
   43e08:	stp	x0, x1, [sp, #224]
   43e0c:	cmp	w19, #0x0
   43e10:	cneg	w19, w19, lt  // lt = tstop
   43e14:	str	w19, [sp, #228]
   43e18:	ldr	x0, [x27, #8]
   43e1c:	str	x0, [sp, #152]
   43e20:	add	x0, x0, w19, sxtw #3
   43e24:	ldur	x0, [x0, #-8]
   43e28:	sbfiz	x19, x19, #6, #32
   43e2c:	clz	x0, x0
   43e30:	sub	x0, x19, x0
   43e34:	str	x0, [sp, #112]
   43e38:	ldr	x0, [x25, #16]
   43e3c:	mov	w28, #0x1                   	// #1
   43e40:	mov	w23, #0x3                   	// #3
   43e44:	cmp	x0, #0x0
   43e48:	b.le	43f9c <mpfr_strtofr@@Base+0x830>
   43e4c:	ldr	w0, [sp, #120]
   43e50:	cbz	w0, 43fd8 <mpfr_strtofr@@Base+0x86c>
   43e54:	ldr	x0, [sp, #104]
   43e58:	ldr	x0, [x0]
   43e5c:	add	x19, x0, #0x3
   43e60:	ldr	x1, [sp, #112]
   43e64:	add	x19, x19, x1
   43e68:	cmp	x0, #0x1
   43e6c:	b.eq	43fd0 <mpfr_strtofr@@Base+0x864>  // b.none
   43e70:	cmp	x0, #0x1
   43e74:	b.le	43fb4 <mpfr_strtofr@@Base+0x848>
   43e78:	ldr	x0, [sp, #104]
   43e7c:	ldr	x0, [x0]
   43e80:	sub	x0, x0, #0x1
   43e84:	clz	x1, x0
   43e88:	mov	w0, #0x40                  	// #64
   43e8c:	sub	w0, w0, w1
   43e90:	sxtw	x0, w0
   43e94:	add	x0, x19, x0
   43e98:	str	x0, [sp, #128]
   43e9c:	ldr	x1, [sp, #128]
   43ea0:	add	x0, sp, #0xf0
   43ea4:	bl	ca80 <mpfr_init2@plt>
   43ea8:	mov	x0, #0x40                  	// #64
   43eac:	str	x0, [sp, #144]
   43eb0:	mrs	x22, tpidr_el0
   43eb4:	add	x20, sp, #0xf0
   43eb8:	ldr	x0, [sp, #112]
   43ebc:	sub	x0, x0, #0x2
   43ec0:	str	x0, [sp, #136]
   43ec4:	add	x24, sp, #0xe0
   43ec8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   43ecc:	ldr	x1, [x0, #2576]
   43ed0:	add	x0, x0, #0xa10
   43ed4:	blr	x1
   43ed8:	str	wzr, [x22, x0]
   43edc:	mov	w3, w23
   43ee0:	mov	x2, x25
   43ee4:	mov	x1, x25
   43ee8:	mov	x0, x20
   43eec:	bl	bd50 <mpfr_mul@plt>
   43ef0:	mov	w21, w0
   43ef4:	ldr	x1, [sp, #136]
   43ef8:	mov	x0, x24
   43efc:	bl	bfe0 <__gmpz_tstbit@plt>
   43f00:	cbnz	w0, 43fe8 <mpfr_strtofr@@Base+0x87c>
   43f04:	mov	w26, #0x27                  	// #39
   43f08:	ldr	x0, [sp, #112]
   43f0c:	subs	x19, x0, #0x3
   43f10:	b.pl	44028 <mpfr_strtofr@@Base+0x8bc>  // b.nfrst
   43f14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   43f18:	ldr	x1, [x0, #2576]
   43f1c:	add	x0, x0, #0xa10
   43f20:	blr	x1
   43f24:	ldr	w19, [x22, x0]
   43f28:	cmp	w21, #0x0
   43f2c:	ldr	w0, [sp, #120]
   43f30:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   43f34:	b.ne	44070 <mpfr_strtofr@@Base+0x904>  // b.any
   43f38:	tbnz	w19, #1, 4412c <mpfr_strtofr@@Base+0x9c0>
   43f3c:	tbnz	w19, #0, 44158 <mpfr_strtofr@@Base+0x9ec>
   43f40:	ldr	w3, [sp, #248]
   43f44:	ldr	w2, [sp, #124]
   43f48:	add	x1, sp, #0xf0
   43f4c:	ldr	x0, [sp, #104]
   43f50:	bl	c6a0 <mpfr_set4@plt>
   43f54:	mov	w19, w0
   43f58:	add	x0, sp, #0xf0
   43f5c:	bl	c070 <mpfr_clear@plt>
   43f60:	ldp	x21, x22, [sp, #32]
   43f64:	ldp	x23, x24, [sp, #48]
   43f68:	mov	w0, w19
   43f6c:	ldp	x19, x20, [sp, #16]
   43f70:	ldp	x25, x26, [sp, #64]
   43f74:	ldp	x27, x28, [sp, #80]
   43f78:	ldp	x29, x30, [sp], #272
   43f7c:	ret
   43f80:	ldr	w3, [x25, #8]
   43f84:	ldr	w2, [sp, #124]
   43f88:	mov	x1, x25
   43f8c:	ldr	x0, [sp, #104]
   43f90:	bl	c6a0 <mpfr_set4@plt>
   43f94:	mov	w19, w0
   43f98:	b	43f68 <mpfr_strtofr@@Base+0x7fc>
   43f9c:	ldr	w0, [x25, #8]
   43fa0:	cmp	w0, #0x0
   43fa4:	cset	w28, le
   43fa8:	add	w28, w28, #0x2
   43fac:	mov	w23, #0x2                   	// #2
   43fb0:	b	43e4c <mpfr_strtofr@@Base+0x6e0>
   43fb4:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   43fb8:	add	x2, x2, #0x848
   43fbc:	mov	w1, #0x42                  	// #66
   43fc0:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   43fc4:	add	x0, x0, #0x4c0
   43fc8:	bl	cb40 <mpfr_assert_fail@plt>
   43fcc:	b	43e78 <mpfr_strtofr@@Base+0x70c>
   43fd0:	mov	x0, #0x0                   	// #0
   43fd4:	b	43e94 <mpfr_strtofr@@Base+0x728>
   43fd8:	ldr	x0, [sp, #104]
   43fdc:	ldr	x0, [x0]
   43fe0:	str	x0, [sp, #128]
   43fe4:	b	43e9c <mpfr_strtofr@@Base+0x730>
   43fe8:	mov	w3, w28
   43fec:	mov	x2, x25
   43ff0:	mov	x1, x20
   43ff4:	mov	x0, x20
   43ff8:	bl	bd50 <mpfr_mul@plt>
   43ffc:	orr	w21, w21, w0
   44000:	b	43f04 <mpfr_strtofr@@Base+0x798>
   44004:	mov	w3, w28
   44008:	mov	x2, x25
   4400c:	mov	x1, x20
   44010:	mov	x0, x20
   44014:	bl	bd50 <mpfr_mul@plt>
   44018:	orr	w21, w21, w0
   4401c:	sub	x19, x19, #0x1
   44020:	cmn	x19, #0x1
   44024:	b.eq	43f14 <mpfr_strtofr@@Base+0x7a8>  // b.none
   44028:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4402c:	ldr	x1, [x0, #2576]
   44030:	add	x0, x0, #0xa10
   44034:	blr	x1
   44038:	ldr	w0, [x22, x0]
   4403c:	tst	w0, w26
   44040:	b.ne	43f14 <mpfr_strtofr@@Base+0x7a8>  // b.any
   44044:	mov	w3, w23
   44048:	mov	x2, x20
   4404c:	mov	x1, x20
   44050:	mov	x0, x20
   44054:	bl	bd50 <mpfr_mul@plt>
   44058:	orr	w21, w21, w0
   4405c:	mov	x1, x19
   44060:	mov	x0, x24
   44064:	bl	bfe0 <__gmpz_tstbit@plt>
   44068:	cbz	w0, 4401c <mpfr_strtofr@@Base+0x8b0>
   4406c:	b	44004 <mpfr_strtofr@@Base+0x898>
   44070:	tst	x19, #0x3
   44074:	b.ne	43f38 <mpfr_strtofr@@Base+0x7cc>  // b.any
   44078:	ldr	x1, [sp, #256]
   4407c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   44080:	cmp	x1, x0
   44084:	b.le	440d0 <mpfr_strtofr@@Base+0x964>
   44088:	ldr	w0, [sp, #124]
   4408c:	cmp	w0, #0x0
   44090:	ldr	x0, [sp, #104]
   44094:	ldr	x3, [x0]
   44098:	cinc	x3, x3, eq  // eq = none
   4409c:	ldr	x0, [sp, #128]
   440a0:	sub	x2, x0, #0x1
   440a4:	ldr	x0, [sp, #240]
   440a8:	add	x1, x0, #0x3e
   440ac:	subs	x0, x0, #0x1
   440b0:	csel	x1, x1, x0, mi  // mi = first
   440b4:	asr	x1, x1, #6
   440b8:	ldr	x0, [sp, #112]
   440bc:	sub	x2, x2, x0
   440c0:	add	x1, x1, #0x1
   440c4:	ldr	x0, [sp, #264]
   440c8:	bl	c370 <mpfr_round_p@plt>
   440cc:	cbnz	w0, 43f38 <mpfr_strtofr@@Base+0x7cc>
   440d0:	mov	x0, #0xfffffffffffffeff    	// #-257
   440d4:	movk	x0, #0x7fff, lsl #48
   440d8:	ldr	x1, [sp, #128]
   440dc:	sub	x0, x0, x1
   440e0:	ldr	x1, [sp, #144]
   440e4:	cmp	x0, x1
   440e8:	b.lt	44114 <mpfr_strtofr@@Base+0x9a8>  // b.tstop
   440ec:	ldr	x0, [sp, #128]
   440f0:	ldr	x1, [sp, #144]
   440f4:	add	x1, x0, x1
   440f8:	str	x1, [sp, #128]
   440fc:	add	x0, x1, x1, lsr #63
   44100:	asr	x0, x0, #1
   44104:	str	x0, [sp, #144]
   44108:	mov	x0, x20
   4410c:	bl	bed0 <mpfr_set_prec@plt>
   44110:	b	43ec8 <mpfr_strtofr@@Base+0x75c>
   44114:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   44118:	add	x2, x2, #0xd68
   4411c:	mov	w1, #0x64                  	// #100
   44120:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   44124:	add	x0, x0, #0x4c0
   44128:	bl	cb40 <mpfr_assert_fail@plt>
   4412c:	ldr	x0, [sp, #152]
   44130:	ldr	x0, [x0]
   44134:	tbz	w0, #0, 44150 <mpfr_strtofr@@Base+0x9e4>
   44138:	ldr	w2, [x25, #8]
   4413c:	ldr	w1, [sp, #124]
   44140:	ldr	x0, [sp, #104]
   44144:	bl	bf40 <mpfr_overflow@plt>
   44148:	mov	w19, w0
   4414c:	b	43f58 <mpfr_strtofr@@Base+0x7ec>
   44150:	mov	w2, #0x1                   	// #1
   44154:	b	4413c <mpfr_strtofr@@Base+0x9d0>
   44158:	ldr	w0, [sp, #124]
   4415c:	cbnz	w0, 44224 <mpfr_strtofr@@Base+0xab8>
   44160:	mov	x1, #0x2                   	// #2
   44164:	add	x0, sp, #0xa0
   44168:	bl	ca80 <mpfr_init2@plt>
   4416c:	ldr	w0, [x27, #4]
   44170:	cmp	w0, #0x0
   44174:	cneg	w0, w0, lt  // lt = tstop
   44178:	lsl	w1, w0, #6
   4417c:	add	x19, sp, #0xc0
   44180:	sxtw	x1, w1
   44184:	mov	x0, x19
   44188:	bl	ca80 <mpfr_init2@plt>
   4418c:	mov	w2, #0x0                   	// #0
   44190:	mov	x1, x27
   44194:	mov	x0, x19
   44198:	bl	c240 <mpfr_set_z@plt>
   4419c:	cbnz	w0, 4420c <mpfr_strtofr@@Base+0xaa0>
   441a0:	add	x21, sp, #0xc0
   441a4:	add	x20, sp, #0xa0
   441a8:	mov	x5, #0x0                   	// #0
   441ac:	mov	w4, #0x1                   	// #1
   441b0:	mov	w3, #0x0                   	// #0
   441b4:	mov	x2, x21
   441b8:	mov	x1, x25
   441bc:	mov	x0, x20
   441c0:	bl	c6f0 <mpfr_pow_general@plt>
   441c4:	mov	w19, w0
   441c8:	mov	x0, x21
   441cc:	bl	c070 <mpfr_clear@plt>
   441d0:	ldr	w3, [sp, #168]
   441d4:	mov	w2, #0x0                   	// #0
   441d8:	mov	x1, x20
   441dc:	ldr	x0, [sp, #104]
   441e0:	bl	c6a0 <mpfr_set4@plt>
   441e4:	mov	x0, x20
   441e8:	bl	c070 <mpfr_clear@plt>
   441ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   441f0:	ldr	x1, [x0, #2576]
   441f4:	add	x0, x0, #0xa10
   441f8:	blr	x1
   441fc:	mrs	x1, tpidr_el0
   44200:	mov	w2, #0x9                   	// #9
   44204:	str	w2, [x1, x0]
   44208:	b	43f58 <mpfr_strtofr@@Base+0x7ec>
   4420c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   44210:	add	x2, x2, #0x818
   44214:	mov	w1, #0x85                  	// #133
   44218:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4421c:	add	x0, x0, #0x4c0
   44220:	bl	cb40 <mpfr_assert_fail@plt>
   44224:	ldr	x0, [sp, #152]
   44228:	ldr	x0, [x0]
   4422c:	tbz	w0, #0, 44248 <mpfr_strtofr@@Base+0xadc>
   44230:	ldr	w2, [x25, #8]
   44234:	ldr	w1, [sp, #124]
   44238:	ldr	x0, [sp, #104]
   4423c:	bl	c3c0 <mpfr_underflow@plt>
   44240:	mov	w19, w0
   44244:	b	43f58 <mpfr_strtofr@@Base+0x7ec>
   44248:	mov	w2, #0x1                   	// #1
   4424c:	b	44234 <mpfr_strtofr@@Base+0xac8>

0000000000044250 <mpfr_pow_z@@Base>:
   44250:	stp	x29, x30, [sp, #-240]!
   44254:	mov	x29, sp
   44258:	stp	x21, x22, [sp, #32]
   4425c:	stp	x25, x26, [sp, #64]
   44260:	mov	x21, x0
   44264:	mov	w22, w3
   44268:	ldr	w0, [x2, #4]
   4426c:	cbz	w0, 44494 <mpfr_pow_z@@Base+0x244>
   44270:	stp	x19, x20, [sp, #16]
   44274:	mov	x19, x1
   44278:	mov	x20, x2
   4427c:	ldr	x2, [x1, #16]
   44280:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   44284:	cmp	x2, x1
   44288:	b.le	444ac <mpfr_pow_z@@Base+0x25c>
   4428c:	stp	x23, x24, [sp, #48]
   44290:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44294:	ldr	x1, [x0, #2576]
   44298:	add	x0, x0, #0xa10
   4429c:	blr	x1
   442a0:	mrs	x1, tpidr_el0
   442a4:	ldr	w23, [x1, x0]
   442a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   442ac:	ldr	x3, [x0, #2512]
   442b0:	add	x0, x0, #0x9d0
   442b4:	blr	x3
   442b8:	add	x3, x1, x0
   442bc:	ldr	x24, [x1, x0]
   442c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   442c4:	ldr	x4, [x0, #2544]
   442c8:	add	x0, x0, #0x9f0
   442cc:	blr	x4
   442d0:	ldr	x25, [x1, x0]
   442d4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   442d8:	str	x4, [x3]
   442dc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   442e0:	str	x3, [x1, x0]
   442e4:	sub	x2, x2, #0x1
   442e8:	ldrsw	x1, [x19, #8]
   442ec:	mov	x0, x19
   442f0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   442f4:	mov	w26, w0
   442f8:	cbz	w0, 445e8 <mpfr_pow_z@@Base+0x398>
   442fc:	ldr	w0, [x20, #4]
   44300:	cmp	w0, #0x0
   44304:	b.gt	4470c <mpfr_pow_z@@Base+0x4bc>
   44308:	stp	x27, x28, [sp, #80]
   4430c:	cneg	w0, w0, lt  // lt = tstop
   44310:	ldr	x1, [x20, #8]
   44314:	add	x1, x1, w0, sxtw #3
   44318:	ldur	x1, [x1, #-8]
   4431c:	sbfiz	x0, x0, #6, #32
   44320:	clz	x1, x1
   44324:	sub	x0, x0, x1
   44328:	mov	x1, x0
   4432c:	str	x0, [sp, #112]
   44330:	ldr	x0, [x21]
   44334:	add	x2, x1, x0
   44338:	add	x2, x2, #0x3
   4433c:	cmp	x0, #0x1
   44340:	b.eq	447d8 <mpfr_pow_z@@Base+0x588>  // b.none
   44344:	cmp	x0, #0x1
   44348:	b.le	447c0 <mpfr_pow_z@@Base+0x570>
   4434c:	sub	x0, x0, #0x1
   44350:	clz	x0, x0
   44354:	mov	w1, #0x40                  	// #64
   44358:	sub	w0, w1, w0
   4435c:	sxtw	x0, w0
   44360:	add	x0, x2, x0
   44364:	str	x0, [sp, #104]
   44368:	mov	x1, x0
   4436c:	add	x0, sp, #0x80
   44370:	bl	ca80 <mpfr_init2@plt>
   44374:	ldr	x0, [x19, #16]
   44378:	mov	w1, #0x1                   	// #1
   4437c:	str	w1, [sp, #100]
   44380:	cmp	x0, #0x0
   44384:	b.le	4439c <mpfr_pow_z@@Base+0x14c>
   44388:	ldr	w0, [x19, #8]
   4438c:	cmp	w0, #0x0
   44390:	cset	w0, le
   44394:	add	w0, w0, #0x2
   44398:	str	w0, [sp, #100]
   4439c:	mov	x0, #0x40                  	// #64
   443a0:	str	x0, [sp, #120]
   443a4:	mrs	x26, tpidr_el0
   443a8:	add	x27, sp, #0x80
   443ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   443b0:	ldr	x1, [x0, #2576]
   443b4:	add	x0, x0, #0xa10
   443b8:	blr	x1
   443bc:	add	x28, x26, x0
   443c0:	str	wzr, [x26, x0]
   443c4:	ldr	w3, [sp, #100]
   443c8:	mov	x2, x19
   443cc:	mov	x1, #0x1                   	// #1
   443d0:	mov	x0, x27
   443d4:	bl	c2f0 <mpfr_ui_div@plt>
   443d8:	ldr	w0, [x28]
   443dc:	tbnz	w0, #1, 447e0 <mpfr_pow_z@@Base+0x590>
   443e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   443e4:	ldr	x1, [x0, #2576]
   443e8:	add	x0, x0, #0xa10
   443ec:	blr	x1
   443f0:	str	wzr, [x26, x0]
   443f4:	mov	w4, #0x0                   	// #0
   443f8:	mov	w3, w22
   443fc:	mov	x2, x20
   44400:	mov	x1, x27
   44404:	mov	x0, x27
   44408:	bl	43dc0 <mpfr_strtofr@@Base+0x654>
   4440c:	ldr	w0, [x28]
   44410:	tbnz	w0, #1, 447e0 <mpfr_pow_z@@Base+0x590>
   44414:	tbnz	w0, #0, 44870 <mpfr_pow_z@@Base+0x620>
   44418:	ldr	x1, [sp, #144]
   4441c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   44420:	cmp	x1, x0
   44424:	b.le	449bc <mpfr_pow_z@@Base+0x76c>
   44428:	cmp	w22, #0x0
   4442c:	ldr	x3, [x21]
   44430:	cinc	x3, x3, eq  // eq = none
   44434:	ldr	x0, [sp, #104]
   44438:	ldr	x1, [sp, #112]
   4443c:	sub	x2, x0, x1
   44440:	ldr	x0, [sp, #128]
   44444:	add	x1, x0, #0x3e
   44448:	subs	x0, x0, #0x1
   4444c:	csel	x1, x1, x0, mi  // mi = first
   44450:	asr	x1, x1, #6
   44454:	sub	x2, x2, #0x2
   44458:	add	x1, x1, #0x1
   4445c:	ldr	x0, [sp, #152]
   44460:	bl	c370 <mpfr_round_p@plt>
   44464:	cbz	w0, 449bc <mpfr_pow_z@@Base+0x76c>
   44468:	add	x19, sp, #0x80
   4446c:	ldr	w3, [sp, #136]
   44470:	mov	w2, w22
   44474:	mov	x1, x19
   44478:	mov	x0, x21
   4447c:	bl	c6a0 <mpfr_set4@plt>
   44480:	mov	w26, w0
   44484:	mov	x0, x19
   44488:	bl	c070 <mpfr_clear@plt>
   4448c:	ldp	x27, x28, [sp, #80]
   44490:	b	44744 <mpfr_pow_z@@Base+0x4f4>
   44494:	mov	x2, #0x0                   	// #0
   44498:	mov	x1, #0x1                   	// #1
   4449c:	mov	x0, x21
   444a0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   444a4:	mov	w26, w0
   444a8:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   444ac:	mov	x1, #0x2                   	// #2
   444b0:	movk	x1, #0x8000, lsl #48
   444b4:	cmp	x2, x1
   444b8:	b.eq	444f8 <mpfr_pow_z@@Base+0x2a8>  // b.none
   444bc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   444c0:	cmp	x2, x1
   444c4:	b.eq	4452c <mpfr_pow_z@@Base+0x2dc>  // b.none
   444c8:	cmp	w0, #0x0
   444cc:	b.le	44588 <mpfr_pow_z@@Base+0x338>
   444d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   444d4:	str	x0, [x21, #16]
   444d8:	ldr	w0, [x19, #8]
   444dc:	cmp	w0, #0x0
   444e0:	b.le	445b8 <mpfr_pow_z@@Base+0x368>
   444e4:	mov	w0, #0x1                   	// #1
   444e8:	str	w0, [x21, #8]
   444ec:	mov	w26, #0x0                   	// #0
   444f0:	ldp	x19, x20, [sp, #16]
   444f4:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   444f8:	str	x1, [x21, #16]
   444fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44500:	ldr	x1, [x0, #2576]
   44504:	add	x0, x0, #0xa10
   44508:	blr	x1
   4450c:	mrs	x1, tpidr_el0
   44510:	add	x0, x1, x0
   44514:	ldr	w1, [x0]
   44518:	orr	w1, w1, #0x4
   4451c:	str	w1, [x0]
   44520:	mov	w26, #0x0                   	// #0
   44524:	ldp	x19, x20, [sp, #16]
   44528:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   4452c:	cmp	w0, #0x0
   44530:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   44534:	csel	x2, x2, x0, gt
   44538:	str	x2, [x21, #16]
   4453c:	ldr	w0, [x19, #8]
   44540:	tbnz	w0, #31, 44558 <mpfr_pow_z@@Base+0x308>
   44544:	mov	w0, #0x1                   	// #1
   44548:	str	w0, [x21, #8]
   4454c:	mov	w26, #0x0                   	// #0
   44550:	ldp	x19, x20, [sp, #16]
   44554:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   44558:	ldr	w0, [x20, #4]
   4455c:	cmp	w0, #0x0
   44560:	cset	w1, ne  // ne = any
   44564:	ldr	x0, [x20, #8]
   44568:	ldr	x0, [x0]
   4456c:	tst	w1, w0
   44570:	b.eq	44544 <mpfr_pow_z@@Base+0x2f4>  // b.none
   44574:	mov	w0, #0xffffffff            	// #-1
   44578:	str	w0, [x21, #8]
   4457c:	mov	w26, #0x0                   	// #0
   44580:	ldp	x19, x20, [sp, #16]
   44584:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   44588:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4458c:	str	x0, [x21, #16]
   44590:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44594:	ldr	x1, [x0, #2576]
   44598:	add	x0, x0, #0xa10
   4459c:	blr	x1
   445a0:	mrs	x1, tpidr_el0
   445a4:	add	x0, x1, x0
   445a8:	ldr	w1, [x0]
   445ac:	orr	w1, w1, #0x20
   445b0:	str	w1, [x0]
   445b4:	b	444d8 <mpfr_pow_z@@Base+0x288>
   445b8:	ldr	w0, [x20, #4]
   445bc:	cmp	w0, #0x0
   445c0:	cset	w1, ne  // ne = any
   445c4:	ldr	x0, [x20, #8]
   445c8:	ldr	x0, [x0]
   445cc:	tst	w1, w0
   445d0:	b.eq	444e4 <mpfr_pow_z@@Base+0x294>  // b.none
   445d4:	mov	w0, #0xffffffff            	// #-1
   445d8:	str	w0, [x21, #8]
   445dc:	mov	w26, #0x0                   	// #0
   445e0:	ldp	x19, x20, [sp, #16]
   445e4:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   445e8:	stp	x27, x28, [sp, #80]
   445ec:	ldr	x27, [x19, #16]
   445f0:	ldr	w0, [x20, #4]
   445f4:	cmp	w0, #0x0
   445f8:	cset	w2, ne  // ne = any
   445fc:	ldr	x0, [x20, #8]
   44600:	ldr	x0, [x0]
   44604:	mov	x1, #0x1                   	// #1
   44608:	tst	w2, w0
   4460c:	b.eq	44614 <mpfr_pow_z@@Base+0x3c4>  // b.none
   44610:	ldrsw	x1, [x19, #8]
   44614:	mov	w3, w22
   44618:	mov	x2, #0x0                   	// #0
   4461c:	mov	x0, x21
   44620:	bl	ba80 <mpfr_set_si_2exp@plt>
   44624:	add	x19, sp, #0xe0
   44628:	mov	x0, x19
   4462c:	bl	bf90 <mpfr_mpz_init@plt>
   44630:	sub	x2, x27, #0x1
   44634:	mov	x1, x20
   44638:	mov	x0, x19
   4463c:	bl	c680 <__gmpz_mul_si@plt>
   44640:	mov	x2, #0x1                   	// #1
   44644:	mov	x1, x19
   44648:	mov	x0, x19
   4464c:	bl	c360 <__gmpz_add_ui@plt>
   44650:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44654:	ldr	x1, [x0, #2512]
   44658:	add	x0, x0, #0x9d0
   4465c:	blr	x1
   44660:	mrs	x1, tpidr_el0
   44664:	ldr	x1, [x1, x0]
   44668:	mov	x0, x19
   4466c:	bl	c800 <__gmpz_cmp_si@plt>
   44670:	tbnz	w0, #31, 446d4 <mpfr_pow_z@@Base+0x484>
   44674:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44678:	ldr	x1, [x0, #2544]
   4467c:	add	x0, x0, #0x9f0
   44680:	blr	x1
   44684:	mrs	x1, tpidr_el0
   44688:	ldr	x1, [x1, x0]
   4468c:	add	x0, sp, #0xe0
   44690:	bl	c800 <__gmpz_cmp_si@plt>
   44694:	cmp	w0, #0x0
   44698:	b.gt	446f4 <mpfr_pow_z@@Base+0x4a4>
   4469c:	add	x0, sp, #0xe0
   446a0:	bl	ba20 <__gmpz_get_si@plt>
   446a4:	str	x0, [x21, #16]
   446a8:	add	x0, sp, #0xe0
   446ac:	bl	c170 <mpfr_mpz_clear@plt>
   446b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   446b4:	ldr	x1, [x0, #2576]
   446b8:	add	x0, x0, #0xa10
   446bc:	blr	x1
   446c0:	mrs	x1, tpidr_el0
   446c4:	ldr	w0, [x1, x0]
   446c8:	orr	w23, w23, w0
   446cc:	ldp	x27, x28, [sp, #80]
   446d0:	b	44744 <mpfr_pow_z@@Base+0x4f4>
   446d4:	cmp	w22, #0x0
   446d8:	csinc	w22, w22, wzr, ne  // ne = any
   446dc:	ldr	w2, [x21, #8]
   446e0:	mov	w1, w22
   446e4:	mov	x0, x21
   446e8:	bl	c3c0 <mpfr_underflow@plt>
   446ec:	mov	w26, w0
   446f0:	b	446a8 <mpfr_pow_z@@Base+0x458>
   446f4:	ldr	w2, [x21, #8]
   446f8:	mov	w1, w22
   446fc:	mov	x0, x21
   44700:	bl	bf40 <mpfr_overflow@plt>
   44704:	mov	w26, w0
   44708:	b	446a8 <mpfr_pow_z@@Base+0x458>
   4470c:	mov	w4, #0x1                   	// #1
   44710:	mov	w3, w22
   44714:	mov	x2, x20
   44718:	mov	x1, x19
   4471c:	mov	x0, x21
   44720:	bl	43dc0 <mpfr_strtofr@@Base+0x654>
   44724:	mov	w26, w0
   44728:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4472c:	ldr	x1, [x0, #2576]
   44730:	add	x0, x0, #0xa10
   44734:	blr	x1
   44738:	mrs	x1, tpidr_el0
   4473c:	ldr	w0, [x1, x0]
   44740:	orr	w23, w23, w0
   44744:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44748:	ldr	x1, [x0, #2576]
   4474c:	add	x0, x0, #0xa10
   44750:	blr	x1
   44754:	mrs	x1, tpidr_el0
   44758:	str	w23, [x1, x0]
   4475c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44760:	ldr	x2, [x0, #2512]
   44764:	add	x0, x0, #0x9d0
   44768:	blr	x2
   4476c:	str	x24, [x1, x0]
   44770:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44774:	ldr	x2, [x0, #2544]
   44778:	add	x0, x0, #0x9f0
   4477c:	blr	x2
   44780:	str	x25, [x1, x0]
   44784:	ldr	x0, [x21, #16]
   44788:	cmp	x25, x0
   4478c:	ccmp	x24, x0, #0x0, ge  // ge = tcont
   44790:	b.gt	44a18 <mpfr_pow_z@@Base+0x7c8>
   44794:	cbz	w26, 44a38 <mpfr_pow_z@@Base+0x7e8>
   44798:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4479c:	ldr	x1, [x0, #2576]
   447a0:	add	x0, x0, #0xa10
   447a4:	blr	x1
   447a8:	orr	w23, w23, #0x8
   447ac:	mrs	x1, tpidr_el0
   447b0:	str	w23, [x1, x0]
   447b4:	ldp	x19, x20, [sp, #16]
   447b8:	ldp	x23, x24, [sp, #48]
   447bc:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   447c0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   447c4:	add	x2, x2, #0xb78
   447c8:	mov	w1, #0x118                 	// #280
   447cc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   447d0:	add	x0, x0, #0x4c0
   447d4:	bl	cb40 <mpfr_assert_fail@plt>
   447d8:	mov	x0, #0x0                   	// #0
   447dc:	b	44360 <mpfr_pow_z@@Base+0x110>
   447e0:	add	x0, sp, #0x80
   447e4:	bl	c070 <mpfr_clear@plt>
   447e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   447ec:	ldr	x1, [x0, #2576]
   447f0:	add	x0, x0, #0xa10
   447f4:	blr	x1
   447f8:	mrs	x1, tpidr_el0
   447fc:	str	w23, [x1, x0]
   44800:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44804:	ldr	x2, [x0, #2512]
   44808:	add	x0, x0, #0x9d0
   4480c:	blr	x2
   44810:	str	x24, [x1, x0]
   44814:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44818:	ldr	x2, [x0, #2544]
   4481c:	add	x0, x0, #0x9f0
   44820:	blr	x2
   44824:	str	x25, [x1, x0]
   44828:	ldr	w0, [x20, #4]
   4482c:	cmp	w0, #0x0
   44830:	cset	w1, ne  // ne = any
   44834:	ldr	x0, [x20, #8]
   44838:	ldr	x0, [x0]
   4483c:	tst	w1, w0
   44840:	b.eq	44868 <mpfr_pow_z@@Base+0x618>  // b.none
   44844:	ldr	w2, [x19, #8]
   44848:	mov	w1, w22
   4484c:	mov	x0, x21
   44850:	bl	bf40 <mpfr_overflow@plt>
   44854:	mov	w26, w0
   44858:	ldp	x19, x20, [sp, #16]
   4485c:	ldp	x23, x24, [sp, #48]
   44860:	ldp	x27, x28, [sp, #80]
   44864:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   44868:	mov	w2, #0x1                   	// #1
   4486c:	b	44848 <mpfr_pow_z@@Base+0x5f8>
   44870:	add	x0, sp, #0x80
   44874:	bl	c070 <mpfr_clear@plt>
   44878:	cbnz	w22, 44934 <mpfr_pow_z@@Base+0x6e4>
   4487c:	mov	x1, #0x2                   	// #2
   44880:	add	x0, sp, #0xa0
   44884:	bl	ca80 <mpfr_init2@plt>
   44888:	ldr	w0, [x20, #4]
   4488c:	cmp	w0, #0x0
   44890:	cneg	w0, w0, lt  // lt = tstop
   44894:	lsl	w1, w0, #6
   44898:	add	x22, sp, #0xc0
   4489c:	sxtw	x1, w1
   448a0:	mov	x0, x22
   448a4:	bl	ca80 <mpfr_init2@plt>
   448a8:	mov	w2, #0x0                   	// #0
   448ac:	mov	x1, x20
   448b0:	mov	x0, x22
   448b4:	bl	c240 <mpfr_set_z@plt>
   448b8:	mov	w22, w0
   448bc:	cbnz	w0, 4491c <mpfr_pow_z@@Base+0x6cc>
   448c0:	add	x20, sp, #0xc0
   448c4:	add	x6, sp, #0xa0
   448c8:	mov	x5, #0x0                   	// #0
   448cc:	mov	w4, #0x1                   	// #1
   448d0:	mov	w3, #0x0                   	// #0
   448d4:	mov	x2, x20
   448d8:	mov	x1, x19
   448dc:	mov	x19, x6
   448e0:	mov	x0, x6
   448e4:	bl	c6f0 <mpfr_pow_general@plt>
   448e8:	mov	w26, w0
   448ec:	mov	x0, x20
   448f0:	bl	c070 <mpfr_clear@plt>
   448f4:	ldr	w3, [sp, #168]
   448f8:	mov	w2, #0x0                   	// #0
   448fc:	mov	x1, x19
   44900:	mov	x0, x21
   44904:	bl	c6a0 <mpfr_set4@plt>
   44908:	mov	x0, x19
   4490c:	bl	c070 <mpfr_clear@plt>
   44910:	orr	w23, w23, #0x1
   44914:	ldp	x27, x28, [sp, #80]
   44918:	b	44744 <mpfr_pow_z@@Base+0x4f4>
   4491c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   44920:	add	x2, x2, #0x818
   44924:	mov	w1, #0x155                 	// #341
   44928:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4492c:	add	x0, x0, #0x4c0
   44930:	bl	cb40 <mpfr_assert_fail@plt>
   44934:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44938:	ldr	x1, [x0, #2576]
   4493c:	add	x0, x0, #0xa10
   44940:	blr	x1
   44944:	mrs	x1, tpidr_el0
   44948:	str	w23, [x1, x0]
   4494c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44950:	ldr	x2, [x0, #2512]
   44954:	add	x0, x0, #0x9d0
   44958:	blr	x2
   4495c:	str	x24, [x1, x0]
   44960:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   44964:	ldr	x2, [x0, #2544]
   44968:	add	x0, x0, #0x9f0
   4496c:	blr	x2
   44970:	str	x25, [x1, x0]
   44974:	ldr	w0, [x20, #4]
   44978:	cmp	w0, #0x0
   4497c:	cset	w1, ne  // ne = any
   44980:	ldr	x0, [x20, #8]
   44984:	ldr	x0, [x0]
   44988:	tst	w1, w0
   4498c:	b.eq	449b4 <mpfr_pow_z@@Base+0x764>  // b.none
   44990:	ldr	w2, [x19, #8]
   44994:	mov	w1, w22
   44998:	mov	x0, x21
   4499c:	bl	c3c0 <mpfr_underflow@plt>
   449a0:	mov	w26, w0
   449a4:	ldp	x19, x20, [sp, #16]
   449a8:	ldp	x23, x24, [sp, #48]
   449ac:	ldp	x27, x28, [sp, #80]
   449b0:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   449b4:	mov	w2, #0x1                   	// #1
   449b8:	b	44994 <mpfr_pow_z@@Base+0x744>
   449bc:	mov	x0, #0xfffffffffffffeff    	// #-257
   449c0:	movk	x0, #0x7fff, lsl #48
   449c4:	ldr	x1, [sp, #104]
   449c8:	sub	x0, x0, x1
   449cc:	ldr	x1, [sp, #120]
   449d0:	cmp	x0, x1
   449d4:	b.lt	44a00 <mpfr_pow_z@@Base+0x7b0>  // b.tstop
   449d8:	ldr	x0, [sp, #104]
   449dc:	ldr	x1, [sp, #120]
   449e0:	add	x1, x0, x1
   449e4:	str	x1, [sp, #104]
   449e8:	add	x0, x1, x1, lsr #63
   449ec:	asr	x0, x0, #1
   449f0:	str	x0, [sp, #120]
   449f4:	mov	x0, x27
   449f8:	bl	bed0 <mpfr_set_prec@plt>
   449fc:	b	443ac <mpfr_pow_z@@Base+0x15c>
   44a00:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   44a04:	add	x2, x2, #0x230
   44a08:	mov	w1, #0x169                 	// #361
   44a0c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   44a10:	add	x0, x0, #0x4c0
   44a14:	bl	cb40 <mpfr_assert_fail@plt>
   44a18:	mov	w2, w22
   44a1c:	mov	w1, w26
   44a20:	mov	x0, x21
   44a24:	bl	cb30 <mpfr_check_range@plt>
   44a28:	mov	w26, w0
   44a2c:	ldp	x19, x20, [sp, #16]
   44a30:	ldp	x23, x24, [sp, #48]
   44a34:	b	44a40 <mpfr_pow_z@@Base+0x7f0>
   44a38:	ldp	x19, x20, [sp, #16]
   44a3c:	ldp	x23, x24, [sp, #48]
   44a40:	mov	w0, w26
   44a44:	ldp	x21, x22, [sp, #32]
   44a48:	ldp	x25, x26, [sp, #64]
   44a4c:	ldp	x29, x30, [sp], #240
   44a50:	ret
   44a54:	stp	x29, x30, [sp, #-64]!
   44a58:	mov	x29, sp
   44a5c:	stp	x21, x22, [sp, #32]
   44a60:	mov	x22, x3
   44a64:	lsl	x3, x3, #3
   44a68:	sub	x3, x3, #0x8
   44a6c:	add	x21, x0, x3
   44a70:	ldr	x4, [x1, x3]
   44a74:	ldr	x5, [x2]
   44a78:	umulh	x6, x4, x5
   44a7c:	str	x6, [x0, x22, lsl #3]
   44a80:	mul	x4, x4, x5
   44a84:	str	x4, [x0, x3]
   44a88:	cmp	x22, #0x1
   44a8c:	b.le	44ad8 <mpfr_pow_z@@Base+0x888>
   44a90:	stp	x19, x20, [sp, #16]
   44a94:	str	x23, [sp, #48]
   44a98:	add	x1, x1, x22, lsl #3
   44a9c:	sub	x20, x1, #0x10
   44aa0:	mov	x19, #0x1                   	// #1
   44aa4:	sub	x23, x2, #0x8
   44aa8:	add	x19, x19, #0x1
   44aac:	ldr	x3, [x23, x19, lsl #3]
   44ab0:	mov	x2, x19
   44ab4:	mov	x1, x20
   44ab8:	mov	x0, x21
   44abc:	bl	ccd0 <__gmpn_addmul_1@plt>
   44ac0:	str	x0, [x21, x19, lsl #3]
   44ac4:	sub	x20, x20, #0x8
   44ac8:	cmp	x19, x22
   44acc:	b.ne	44aa8 <mpfr_pow_z@@Base+0x858>  // b.any
   44ad0:	ldp	x19, x20, [sp, #16]
   44ad4:	ldr	x23, [sp, #48]
   44ad8:	ldp	x21, x22, [sp, #32]
   44adc:	ldp	x29, x30, [sp], #64
   44ae0:	ret

0000000000044ae4 <mpfr_mulhigh_n@@Base>:
   44ae4:	stp	x29, x30, [sp, #-112]!
   44ae8:	mov	x29, sp
   44aec:	stp	x19, x20, [sp, #16]
   44af0:	stp	x21, x22, [sp, #32]
   44af4:	stp	x23, x24, [sp, #48]
   44af8:	stp	x25, x26, [sp, #64]
   44afc:	mov	x21, x0
   44b00:	mov	x22, x1
   44b04:	mov	x23, x2
   44b08:	mov	x19, x3
   44b0c:	cmp	x3, #0x10
   44b10:	b.hi	44b4c <mpfr_mulhigh_n@@Base+0x68>  // b.pmore
   44b14:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   44b18:	add	x0, x0, #0x4c8
   44b1c:	ldrsh	x20, [x0, x3, lsl #1]
   44b20:	tbnz	x20, #63, 44b64 <mpfr_mulhigh_n@@Base+0x80>
   44b24:	cbz	x20, 44b94 <mpfr_mulhigh_n@@Base+0xb0>
   44b28:	mov	x0, #0x2100                	// #8448
   44b2c:	cmp	x19, x0
   44b30:	b.le	44bac <mpfr_mulhigh_n@@Base+0xc8>
   44b34:	mov	x3, x19
   44b38:	mov	x2, x23
   44b3c:	mov	x1, x22
   44b40:	mov	x0, x21
   44b44:	bl	c470 <__gmpn_mul_n@plt>
   44b48:	b	44b7c <mpfr_mulhigh_n@@Base+0x98>
   44b4c:	add	x20, x3, #0x3
   44b50:	cmp	x3, #0x0
   44b54:	csel	x20, x20, x3, lt  // lt = tstop
   44b58:	asr	x20, x20, #2
   44b5c:	add	x20, x20, x20, lsl #1
   44b60:	b	44b20 <mpfr_mulhigh_n@@Base+0x3c>
   44b64:	mov	x4, x19
   44b68:	mov	x3, x23
   44b6c:	mov	x2, x19
   44b70:	mov	x1, x22
   44b74:	mov	x0, x21
   44b78:	bl	c7a0 <__gmpn_mul@plt>
   44b7c:	ldp	x19, x20, [sp, #16]
   44b80:	ldp	x21, x22, [sp, #32]
   44b84:	ldp	x23, x24, [sp, #48]
   44b88:	ldp	x25, x26, [sp, #64]
   44b8c:	ldp	x29, x30, [sp], #112
   44b90:	ret
   44b94:	mov	x3, x19
   44b98:	mov	x2, x23
   44b9c:	mov	x1, x22
   44ba0:	mov	x0, x21
   44ba4:	bl	44a54 <mpfr_pow_z@@Base+0x804>
   44ba8:	b	44b7c <mpfr_mulhigh_n@@Base+0x98>
   44bac:	stp	x27, x28, [sp, #80]
   44bb0:	sub	x26, x19, x20
   44bb4:	lsl	x24, x26, #3
   44bb8:	mov	x3, x20
   44bbc:	add	x2, x23, x24
   44bc0:	add	x1, x22, x24
   44bc4:	add	x0, x21, x26, lsl #4
   44bc8:	bl	c470 <__gmpn_mul_n@plt>
   44bcc:	lsl	x25, x20, #3
   44bd0:	mov	x3, x26
   44bd4:	mov	x2, x23
   44bd8:	add	x1, x22, x25
   44bdc:	mov	x0, x21
   44be0:	bl	44ae4 <mpfr_mulhigh_n@@Base>
   44be4:	add	x27, x21, x19, lsl #3
   44be8:	sub	x27, x27, #0x8
   44bec:	sub	x24, x24, #0x8
   44bf0:	add	x24, x21, x24
   44bf4:	add	x28, x26, #0x1
   44bf8:	mov	x3, x28
   44bfc:	mov	x2, x24
   44c00:	mov	x1, x27
   44c04:	mov	x0, x27
   44c08:	bl	c5a0 <__gmpn_add_n@plt>
   44c0c:	str	x0, [sp, #104]
   44c10:	mov	x3, x26
   44c14:	add	x2, x23, x25
   44c18:	mov	x1, x22
   44c1c:	mov	x0, x21
   44c20:	bl	44ae4 <mpfr_mulhigh_n@@Base>
   44c24:	mov	x3, x28
   44c28:	mov	x2, x24
   44c2c:	mov	x1, x27
   44c30:	mov	x0, x27
   44c34:	bl	c5a0 <__gmpn_add_n@plt>
   44c38:	ldr	x1, [sp, #104]
   44c3c:	add	x0, x1, x0
   44c40:	add	x19, x19, x26
   44c44:	add	x2, x21, x19, lsl #3
   44c48:	ldr	x1, [x21, x19, lsl #3]
   44c4c:	add	x1, x0, x1
   44c50:	str	x1, [x21, x19, lsl #3]
   44c54:	cmp	x0, x1
   44c58:	b.hi	44c64 <mpfr_mulhigh_n@@Base+0x180>  // b.pmore
   44c5c:	ldp	x27, x28, [sp, #80]
   44c60:	b	44b7c <mpfr_mulhigh_n@@Base+0x98>
   44c64:	mov	x0, #0x1                   	// #1
   44c68:	cmp	x20, x0
   44c6c:	b.le	44c8c <mpfr_mulhigh_n@@Base+0x1a8>
   44c70:	ldr	x1, [x2, x0, lsl #3]
   44c74:	add	x1, x1, #0x1
   44c78:	str	x1, [x2, x0, lsl #3]
   44c7c:	add	x0, x0, #0x1
   44c80:	cbz	x1, 44c68 <mpfr_mulhigh_n@@Base+0x184>
   44c84:	ldp	x27, x28, [sp, #80]
   44c88:	b	44b7c <mpfr_mulhigh_n@@Base+0x98>
   44c8c:	ldp	x27, x28, [sp, #80]
   44c90:	b	44b7c <mpfr_mulhigh_n@@Base+0x98>

0000000000044c94 <mpfr_sqrhigh_n@@Base>:
   44c94:	stp	x29, x30, [sp, #-80]!
   44c98:	mov	x29, sp
   44c9c:	stp	x19, x20, [sp, #16]
   44ca0:	stp	x21, x22, [sp, #32]
   44ca4:	str	x25, [sp, #64]
   44ca8:	mov	x21, x0
   44cac:	mov	x22, x1
   44cb0:	mov	x19, x2
   44cb4:	cmp	x2, #0x10
   44cb8:	b.hi	44cfc <mpfr_sqrhigh_n@@Base+0x68>  // b.pmore
   44cbc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   44cc0:	add	x0, x0, #0x4c8
   44cc4:	add	x0, x0, #0x28
   44cc8:	ldrsh	x20, [x0, x2, lsl #1]
   44ccc:	tbnz	x20, #63, 44d0c <mpfr_sqrhigh_n@@Base+0x78>
   44cd0:	cbnz	x20, 44d20 <mpfr_sqrhigh_n@@Base+0x8c>
   44cd4:	mov	x3, x19
   44cd8:	mov	x2, x22
   44cdc:	mov	x1, x22
   44ce0:	mov	x0, x21
   44ce4:	bl	44a54 <mpfr_pow_z@@Base+0x804>
   44ce8:	ldp	x19, x20, [sp, #16]
   44cec:	ldp	x21, x22, [sp, #32]
   44cf0:	ldr	x25, [sp, #64]
   44cf4:	ldp	x29, x30, [sp], #80
   44cf8:	ret
   44cfc:	add	x20, x2, #0x4
   44d00:	add	x20, x20, x20, lsr #63
   44d04:	asr	x20, x20, #1
   44d08:	b	44ccc <mpfr_sqrhigh_n@@Base+0x38>
   44d0c:	mov	x2, x19
   44d10:	mov	x1, x22
   44d14:	mov	x0, x21
   44d18:	bl	c3b0 <__gmpn_sqr@plt>
   44d1c:	b	44ce8 <mpfr_sqrhigh_n@@Base+0x54>
   44d20:	stp	x23, x24, [sp, #48]
   44d24:	sub	x24, x19, x20
   44d28:	lsl	x23, x24, #3
   44d2c:	mov	x2, x20
   44d30:	add	x1, x22, x23
   44d34:	add	x0, x21, x24, lsl #4
   44d38:	bl	c3b0 <__gmpn_sqr@plt>
   44d3c:	mov	x3, x24
   44d40:	add	x2, x22, x20, lsl #3
   44d44:	mov	x1, x22
   44d48:	mov	x0, x21
   44d4c:	bl	bc80 <mpfr_mulhigh_n@plt>
   44d50:	sub	x22, x23, #0x8
   44d54:	add	x22, x21, x22
   44d58:	add	x25, x24, #0x1
   44d5c:	mov	w3, #0x1                   	// #1
   44d60:	mov	x2, x25
   44d64:	mov	x1, x22
   44d68:	mov	x0, x22
   44d6c:	bl	bcc0 <__gmpn_lshift@plt>
   44d70:	mov	x23, x0
   44d74:	add	x0, x21, x19, lsl #3
   44d78:	sub	x0, x0, #0x8
   44d7c:	mov	x3, x25
   44d80:	mov	x2, x22
   44d84:	mov	x1, x0
   44d88:	bl	c5a0 <__gmpn_add_n@plt>
   44d8c:	add	x0, x23, x0
   44d90:	add	x19, x19, x24
   44d94:	add	x2, x21, x19, lsl #3
   44d98:	ldr	x1, [x21, x19, lsl #3]
   44d9c:	add	x1, x0, x1
   44da0:	str	x1, [x21, x19, lsl #3]
   44da4:	cmp	x0, x1
   44da8:	b.hi	44db4 <mpfr_sqrhigh_n@@Base+0x120>  // b.pmore
   44dac:	ldp	x23, x24, [sp, #48]
   44db0:	b	44ce8 <mpfr_sqrhigh_n@@Base+0x54>
   44db4:	mov	x0, #0x1                   	// #1
   44db8:	cmp	x20, x0
   44dbc:	b.le	44ddc <mpfr_sqrhigh_n@@Base+0x148>
   44dc0:	ldr	x1, [x2, x0, lsl #3]
   44dc4:	add	x1, x1, #0x1
   44dc8:	str	x1, [x2, x0, lsl #3]
   44dcc:	add	x0, x0, #0x1
   44dd0:	cbz	x1, 44db8 <mpfr_sqrhigh_n@@Base+0x124>
   44dd4:	ldp	x23, x24, [sp, #48]
   44dd8:	b	44ce8 <mpfr_sqrhigh_n@@Base+0x54>
   44ddc:	ldp	x23, x24, [sp, #48]
   44de0:	b	44ce8 <mpfr_sqrhigh_n@@Base+0x54>

0000000000044de4 <mpfr_divhigh_n@@Base>:
   44de4:	stp	x29, x30, [sp, #-144]!
   44de8:	mov	x29, sp
   44dec:	stp	x19, x20, [sp, #16]
   44df0:	stp	x21, x22, [sp, #32]
   44df4:	stp	x23, x24, [sp, #48]
   44df8:	stp	x25, x26, [sp, #64]
   44dfc:	stp	x27, x28, [sp, #80]
   44e00:	mov	x26, x0
   44e04:	mov	x27, x1
   44e08:	mov	x23, x2
   44e0c:	mov	x21, x3
   44e10:	str	x3, [x29, #120]
   44e14:	cmp	x3, #0x10
   44e18:	b.hi	44f28 <mpfr_divhigh_n@@Base+0x144>  // b.pmore
   44e1c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   44e20:	add	x0, x0, #0x4c8
   44e24:	add	x0, x0, #0x50
   44e28:	ldrsh	x20, [x0, x3, lsl #1]
   44e2c:	cbz	x20, 44f40 <mpfr_divhigh_n@@Base+0x15c>
   44e30:	cmp	x20, x21
   44e34:	b.eq	4523c <mpfr_divhigh_n@@Base+0x458>  // b.none
   44e38:	str	xzr, [x29, #136]
   44e3c:	sub	x28, x21, x20
   44e40:	lsl	x24, x28, #3
   44e44:	add	x19, x26, x24
   44e48:	lsl	x22, x28, #4
   44e4c:	mov	x5, x20
   44e50:	add	x4, x23, x24
   44e54:	lsl	x3, x20, #1
   44e58:	add	x2, x27, x22
   44e5c:	mov	x1, #0x0                   	// #0
   44e60:	mov	x0, x19
   44e64:	bl	ccb0 <__gmpn_divrem@plt>
   44e68:	mov	x25, x0
   44e6c:	cmp	x22, #0x4, lsl #12
   44e70:	b.hi	45260 <mpfr_divhigh_n@@Base+0x47c>  // b.pmore
   44e74:	sub	sp, sp, x22
   44e78:	mov	x22, sp
   44e7c:	lsl	x0, x20, #3
   44e80:	str	x0, [x29, #112]
   44e84:	mov	x3, x28
   44e88:	mov	x2, x23
   44e8c:	add	x1, x26, x0
   44e90:	mov	x0, x22
   44e94:	bl	bc80 <mpfr_mulhigh_n@plt>
   44e98:	ldr	x0, [x29, #120]
   44e9c:	add	x0, x27, x0, lsl #3
   44ea0:	str	x0, [x29, #120]
   44ea4:	mov	x3, x28
   44ea8:	add	x2, x22, x24
   44eac:	mov	x1, x0
   44eb0:	bl	be60 <__gmpn_sub_n@plt>
   44eb4:	mov	x22, x0
   44eb8:	cbnz	x25, 45274 <mpfr_divhigh_n@@Base+0x490>
   44ebc:	add	x24, x27, x24
   44ec0:	cbnz	x22, 452d8 <mpfr_divhigh_n@@Base+0x4f4>
   44ec4:	mov	x3, x28
   44ec8:	ldr	x0, [x29, #112]
   44ecc:	add	x2, x23, x0
   44ed0:	add	x1, x27, x0
   44ed4:	mov	x0, x26
   44ed8:	bl	44de4 <mpfr_divhigh_n@@Base>
   44edc:	ldr	x1, [x26, x28, lsl #3]
   44ee0:	add	x1, x0, x1
   44ee4:	str	x1, [x26, x28, lsl #3]
   44ee8:	cmp	x0, x1
   44eec:	b.hi	452f0 <mpfr_divhigh_n@@Base+0x50c>  // b.pmore
   44ef0:	mov	x0, #0x0                   	// #0
   44ef4:	add	x0, x0, x25
   44ef8:	str	x0, [x29, #112]
   44efc:	ldr	x0, [x29, #136]
   44f00:	cbnz	x0, 45320 <mpfr_divhigh_n@@Base+0x53c>
   44f04:	ldr	x0, [x29, #112]
   44f08:	mov	sp, x29
   44f0c:	ldp	x19, x20, [sp, #16]
   44f10:	ldp	x21, x22, [sp, #32]
   44f14:	ldp	x23, x24, [sp, #48]
   44f18:	ldp	x25, x26, [sp, #64]
   44f1c:	ldp	x27, x28, [sp, #80]
   44f20:	ldp	x29, x30, [sp], #144
   44f24:	ret
   44f28:	mov	x20, #0x5555555555555555    	// #6148914691236517205
   44f2c:	movk	x20, #0x5556
   44f30:	smulh	x20, x3, x20
   44f34:	sub	x20, x20, x3, asr #63
   44f38:	lsl	x20, x20, #1
   44f3c:	b	44e2c <mpfr_divhigh_n@@Base+0x48>
   44f40:	ldr	x0, [x29, #120]
   44f44:	lsl	x24, x0, #3
   44f48:	add	x19, x27, x24
   44f4c:	mov	x0, x21
   44f50:	subs	x0, x0, #0x1
   44f54:	b.mi	44f74 <mpfr_divhigh_n@@Base+0x190>  // b.first
   44f58:	ldr	x2, [x19, x0, lsl #3]
   44f5c:	ldr	x1, [x23, x0, lsl #3]
   44f60:	cmp	x2, x1
   44f64:	b.eq	44f50 <mpfr_divhigh_n@@Base+0x16c>  // b.none
   44f68:	b.hi	44f74 <mpfr_divhigh_n@@Base+0x190>  // b.pmore
   44f6c:	str	xzr, [x29, #112]
   44f70:	b	44f90 <mpfr_divhigh_n@@Base+0x1ac>
   44f74:	mov	x3, x21
   44f78:	mov	x2, x23
   44f7c:	mov	x1, x19
   44f80:	mov	x0, x19
   44f84:	bl	be60 <__gmpn_sub_n@plt>
   44f88:	mov	x0, #0x1                   	// #1
   44f8c:	str	x0, [x29, #112]
   44f90:	add	x0, x23, x24
   44f94:	ldur	x20, [x0, #-8]
   44f98:	cmp	x21, #0x1
   44f9c:	b.eq	45080 <mpfr_divhigh_n@@Base+0x29c>  // b.none
   44fa0:	add	x0, x23, x24
   44fa4:	ldur	x22, [x0, #-16]
   44fa8:	mvn	x0, x20
   44fac:	lsr	x1, x20, #32
   44fb0:	and	x3, x20, #0xffffffff
   44fb4:	udiv	x28, x0, x1
   44fb8:	mul	x2, x3, x28
   44fbc:	msub	x0, x28, x1, x0
   44fc0:	lsl	x0, x0, #32
   44fc4:	orr	x0, x0, #0xffffffff
   44fc8:	cmp	x2, x0
   44fcc:	b.ls	44fe4 <mpfr_divhigh_n@@Base+0x200>  // b.plast
   44fd0:	sub	x4, x28, #0x1
   44fd4:	adds	x0, x0, x20
   44fd8:	ccmp	x2, x0, #0x0, cc  // cc = lo, ul, last
   44fdc:	b.hi	4511c <mpfr_divhigh_n@@Base+0x338>  // b.pmore
   44fe0:	mov	x28, x4
   44fe4:	sub	x0, x0, x2
   44fe8:	udiv	x2, x0, x1
   44fec:	mul	x3, x3, x2
   44ff0:	msub	x0, x2, x1, x0
   44ff4:	lsl	x0, x0, #32
   44ff8:	orr	x0, x0, #0xffffffff
   44ffc:	cmp	x3, x0
   45000:	b.ls	4501c <mpfr_divhigh_n@@Base+0x238>  // b.plast
   45004:	add	x0, x20, x0
   45008:	cmp	x3, x0
   4500c:	sub	x1, x2, #0x1
   45010:	sub	x2, x2, #0x2
   45014:	ccmp	x20, x0, #0x2, hi  // hi = pmore
   45018:	csel	x2, x2, x1, ls  // ls = plast
   4501c:	orr	x28, x2, x28, lsl #32
   45020:	madd	x0, x20, x28, x22
   45024:	cmp	x22, x0
   45028:	b.ls	4504c <mpfr_divhigh_n@@Base+0x268>  // b.plast
   4502c:	cmp	x20, x0
   45030:	cset	x1, ls  // ls = plast
   45034:	sub	x0, x0, x20
   45038:	sub	x28, x28, #0x1
   4503c:	sub	x28, x28, x1
   45040:	neg	x1, x1
   45044:	and	x1, x1, x20
   45048:	sub	x0, x0, x1
   4504c:	umulh	x1, x22, x28
   45050:	adds	x0, x1, x0
   45054:	b.cc	45068 <mpfr_divhigh_n@@Base+0x284>  // b.lo, b.ul, b.last
   45058:	sub	x1, x28, #0x1
   4505c:	cmp	x20, x0
   45060:	b.ls	45128 <mpfr_divhigh_n@@Base+0x344>  // b.plast
   45064:	mov	x28, x1
   45068:	cmp	x21, #0x1
   4506c:	b.le	45224 <mpfr_divhigh_n@@Base+0x440>
   45070:	add	x24, x19, x24
   45074:	sub	x0, x19, #0x8
   45078:	str	x0, [x29, #104]
   4507c:	b	45190 <mpfr_divhigh_n@@Base+0x3ac>
   45080:	mvn	x0, x20
   45084:	lsr	x1, x20, #32
   45088:	and	x4, x20, #0xffffffff
   4508c:	udiv	x2, x0, x1
   45090:	mul	x3, x4, x2
   45094:	msub	x0, x2, x1, x0
   45098:	lsl	x0, x0, #32
   4509c:	orr	x0, x0, #0xffffffff
   450a0:	cmp	x3, x0
   450a4:	b.ls	450bc <mpfr_divhigh_n@@Base+0x2d8>  // b.plast
   450a8:	sub	x5, x2, #0x1
   450ac:	adds	x0, x0, x20
   450b0:	ccmp	x3, x0, #0x0, cc  // cc = lo, ul, last
   450b4:	b.hi	45110 <mpfr_divhigh_n@@Base+0x32c>  // b.pmore
   450b8:	mov	x2, x5
   450bc:	sub	x0, x0, x3
   450c0:	udiv	x3, x0, x1
   450c4:	mul	x4, x4, x3
   450c8:	msub	x0, x3, x1, x0
   450cc:	lsl	x0, x0, #32
   450d0:	orr	x0, x0, #0xffffffff
   450d4:	cmp	x4, x0
   450d8:	b.ls	450f4 <mpfr_divhigh_n@@Base+0x310>  // b.plast
   450dc:	add	x0, x20, x0
   450e0:	cmp	x4, x0
   450e4:	sub	x1, x3, #0x1
   450e8:	sub	x3, x3, #0x2
   450ec:	ccmp	x20, x0, #0x2, hi  // hi = pmore
   450f0:	csel	x3, x3, x1, ls  // ls = plast
   450f4:	ldr	x0, [x29, #120]
   450f8:	ldr	x1, [x27, x0, lsl #3]
   450fc:	orr	x0, x3, x2, lsl #32
   45100:	umulh	x0, x1, x0
   45104:	add	x0, x1, x0
   45108:	str	x0, [x26]
   4510c:	b	44f04 <mpfr_divhigh_n@@Base+0x120>
   45110:	sub	x2, x2, #0x2
   45114:	add	x0, x0, x20
   45118:	b	450bc <mpfr_divhigh_n@@Base+0x2d8>
   4511c:	sub	x28, x28, #0x2
   45120:	add	x0, x0, x20
   45124:	b	44fe4 <mpfr_divhigh_n@@Base+0x200>
   45128:	mul	x2, x22, x28
   4512c:	cmp	x22, x2
   45130:	sub	x28, x28, #0x2
   45134:	ccmp	x20, x0, #0x0, hi  // hi = pmore
   45138:	csel	x28, x28, x1, cc  // cc = lo, ul, last
   4513c:	b	45068 <mpfr_divhigh_n@@Base+0x284>
   45140:	ldur	x0, [x24, #-16]
   45144:	cmp	x22, x0
   45148:	b.hi	451a4 <mpfr_divhigh_n@@Base+0x3c0>  // b.pmore
   4514c:	mov	x19, #0xffffffffffffffff    	// #-1
   45150:	b	45158 <mpfr_divhigh_n@@Base+0x374>
   45154:	mov	x19, #0xffffffffffffffff    	// #-1
   45158:	mov	x3, x19
   4515c:	mov	x2, x21
   45160:	mov	x1, x23
   45164:	ldr	x0, [x29, #104]
   45168:	bl	c4c0 <__gmpn_submul_1@plt>
   4516c:	ldur	x1, [x25, #-8]
   45170:	cmp	x0, x1
   45174:	b.hi	45208 <mpfr_divhigh_n@@Base+0x424>  // b.pmore
   45178:	sub	x21, x21, #0x1
   4517c:	str	x19, [x26, x21, lsl #3]
   45180:	add	x23, x23, #0x8
   45184:	sub	x24, x24, #0x8
   45188:	cmp	x21, #0x1
   4518c:	b.eq	45224 <mpfr_divhigh_n@@Base+0x440>  // b.none
   45190:	mov	x25, x24
   45194:	ldur	x1, [x24, #-8]
   45198:	cmp	x20, x1
   4519c:	b.cc	45154 <mpfr_divhigh_n@@Base+0x370>  // b.lo, b.ul, b.last
   451a0:	b.eq	45140 <mpfr_divhigh_n@@Base+0x35c>  // b.none
   451a4:	umulh	x19, x1, x28
   451a8:	mul	x2, x1, x28
   451ac:	ldur	x0, [x25, #-16]
   451b0:	adds	x5, x2, x0
   451b4:	adc	x19, x19, x1
   451b8:	msub	x0, x20, x19, x0
   451bc:	ldur	x1, [x25, #-24]
   451c0:	subs	x2, x1, x22
   451c4:	sbc	x0, x0, x20
   451c8:	umulh	x1, x22, x19
   451cc:	mul	x4, x22, x19
   451d0:	subs	x3, x2, x4
   451d4:	sbc	x0, x0, x1
   451d8:	cmp	x5, x0
   451dc:	csetm	x1, ls  // ls = plast
   451e0:	cinc	x19, x19, hi  // hi = pmore
   451e4:	and	x2, x20, x1
   451e8:	and	x1, x22, x1
   451ec:	adds	x4, x3, x1
   451f0:	adc	x0, x0, x2
   451f4:	cmp	x20, x0
   451f8:	b.hi	45158 <mpfr_divhigh_n@@Base+0x374>  // b.pmore
   451fc:	ccmp	x22, x4, #0x0, cs  // cs = hs, nlast
   45200:	cinc	x19, x19, ls  // ls = plast
   45204:	b	45158 <mpfr_divhigh_n@@Base+0x374>
   45208:	mov	x3, x21
   4520c:	mov	x2, x23
   45210:	ldr	x0, [x29, #104]
   45214:	mov	x1, x0
   45218:	bl	c5a0 <__gmpn_add_n@plt>
   4521c:	sub	x19, x19, #0x1
   45220:	b	45178 <mpfr_divhigh_n@@Base+0x394>
   45224:	ldr	x0, [x29, #120]
   45228:	ldr	x0, [x27, x0, lsl #3]
   4522c:	umulh	x28, x0, x28
   45230:	add	x28, x0, x28
   45234:	str	x28, [x26]
   45238:	b	44f04 <mpfr_divhigh_n@@Base+0x120>
   4523c:	mov	x5, x21
   45240:	mov	x4, x23
   45244:	lsl	x3, x21, #1
   45248:	mov	x2, x27
   4524c:	mov	x1, #0x0                   	// #0
   45250:	mov	x0, x26
   45254:	bl	ccb0 <__gmpn_divrem@plt>
   45258:	str	x0, [x29, #112]
   4525c:	b	44f04 <mpfr_divhigh_n@@Base+0x120>
   45260:	mov	x1, x22
   45264:	add	x0, x29, #0x88
   45268:	bl	bdc0 <mpfr_tmp_allocate@plt>
   4526c:	mov	x22, x0
   45270:	b	44e7c <mpfr_divhigh_n@@Base+0x98>
   45274:	mov	x3, x28
   45278:	mov	x2, x23
   4527c:	ldr	x0, [x29, #120]
   45280:	mov	x1, x0
   45284:	bl	be60 <__gmpn_sub_n@plt>
   45288:	add	x22, x22, x0
   4528c:	b	44ebc <mpfr_divhigh_n@@Base+0xd8>
   45290:	mov	x0, #0x1                   	// #1
   45294:	cmp	x20, x0
   45298:	b.le	452b4 <mpfr_divhigh_n@@Base+0x4d0>
   4529c:	ldr	x1, [x19, x0, lsl #3]
   452a0:	sub	x2, x1, #0x1
   452a4:	str	x2, [x19, x0, lsl #3]
   452a8:	add	x0, x0, #0x1
   452ac:	cbz	x1, 45294 <mpfr_divhigh_n@@Base+0x4b0>
   452b0:	b	452b8 <mpfr_divhigh_n@@Base+0x4d4>
   452b4:	mov	x3, #0x1                   	// #1
   452b8:	sub	x25, x25, x3
   452bc:	mov	x3, x21
   452c0:	mov	x2, x23
   452c4:	mov	x1, x24
   452c8:	mov	x0, x24
   452cc:	bl	c5a0 <__gmpn_add_n@plt>
   452d0:	subs	x22, x22, x0
   452d4:	b.eq	44ec4 <mpfr_divhigh_n@@Base+0xe0>  // b.none
   452d8:	ldr	x3, [x19]
   452dc:	sub	x0, x3, #0x1
   452e0:	str	x0, [x19]
   452e4:	cbz	x3, 45290 <mpfr_divhigh_n@@Base+0x4ac>
   452e8:	mov	x3, #0x0                   	// #0
   452ec:	b	452b8 <mpfr_divhigh_n@@Base+0x4d4>
   452f0:	mov	x0, #0x1                   	// #1
   452f4:	cmp	x20, x0
   452f8:	b.le	45318 <mpfr_divhigh_n@@Base+0x534>
   452fc:	ldr	x1, [x19, x0, lsl #3]
   45300:	add	x1, x1, #0x1
   45304:	str	x1, [x19, x0, lsl #3]
   45308:	add	x0, x0, #0x1
   4530c:	cbz	x1, 452f4 <mpfr_divhigh_n@@Base+0x510>
   45310:	mov	x0, #0x0                   	// #0
   45314:	b	44ef4 <mpfr_divhigh_n@@Base+0x110>
   45318:	mov	x0, #0x1                   	// #1
   4531c:	b	44ef4 <mpfr_divhigh_n@@Base+0x110>
   45320:	bl	c410 <mpfr_tmp_free@plt>
   45324:	b	44f04 <mpfr_divhigh_n@@Base+0x120>

0000000000045328 <mpfr_get_f@@Base>:
   45328:	stp	x29, x30, [sp, #-112]!
   4532c:	mov	x29, sp
   45330:	stp	x19, x20, [sp, #16]
   45334:	stp	x23, x24, [sp, #48]
   45338:	mov	x20, x0
   4533c:	mov	x19, x1
   45340:	ldr	x0, [x1, #16]
   45344:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45348:	cmp	x0, x1
   4534c:	b.le	4542c <mpfr_get_f@@Base+0x104>
   45350:	stp	x21, x22, [sp, #32]
   45354:	str	x25, [sp, #64]
   45358:	mov	w23, w2
   4535c:	ldr	w21, [x20]
   45360:	sxtw	x22, w21
   45364:	ldr	x4, [x19]
   45368:	sbfiz	x1, x21, #6, #32
   4536c:	ldr	x24, [x20, #16]
   45370:	negs	x3, x0
   45374:	and	x0, x0, #0x3f
   45378:	and	x3, x3, #0x3f
   4537c:	csneg	x3, x0, x3, mi  // mi = first
   45380:	mov	w0, #0x40                  	// #64
   45384:	sub	w0, w0, w3
   45388:	cmp	w3, #0x0
   4538c:	csneg	w3, w0, w3, gt
   45390:	sxtw	x25, w3
   45394:	add	x0, x25, x4
   45398:	cmp	x0, x1
   4539c:	b.gt	45570 <mpfr_get_f@@Base+0x248>
   453a0:	add	x2, x4, #0x3e
   453a4:	subs	x4, x4, #0x1
   453a8:	csel	x2, x2, x4, mi  // mi = first
   453ac:	asr	x2, x2, #6
   453b0:	add	x2, x2, #0x1
   453b4:	cmp	x22, x2
   453b8:	b.lt	45500 <mpfr_get_f@@Base+0x1d8>  // b.tstop
   453bc:	sub	x22, x22, x2
   453c0:	cbnz	w3, 45518 <mpfr_get_f@@Base+0x1f0>
   453c4:	add	x0, x24, x22, lsl #3
   453c8:	ldr	x1, [x19, #24]
   453cc:	cmp	x0, x1
   453d0:	b.eq	453dc <mpfr_get_f@@Base+0xb4>  // b.none
   453d4:	lsl	x2, x2, #3
   453d8:	bl	ba10 <memcpy@plt>
   453dc:	cmp	x22, #0x0
   453e0:	b.gt	4555c <mpfr_get_f@@Base+0x234>
   453e4:	ldr	x0, [x19, #16]
   453e8:	adds	x0, x25, x0
   453ec:	add	x25, x0, #0x3f
   453f0:	csel	x25, x25, x0, mi  // mi = first
   453f4:	asr	x25, x25, #6
   453f8:	str	x25, [x20, #8]
   453fc:	mov	w23, #0x0                   	// #0
   45400:	ldr	w0, [x19, #8]
   45404:	cmp	w0, #0x0
   45408:	cneg	w21, w21, lt  // lt = tstop
   4540c:	str	w21, [x20, #4]
   45410:	ldp	x21, x22, [sp, #32]
   45414:	ldr	x25, [sp, #64]
   45418:	mov	w0, w23
   4541c:	ldp	x19, x20, [sp, #16]
   45420:	ldp	x23, x24, [sp, #48]
   45424:	ldp	x29, x30, [sp], #112
   45428:	ret
   4542c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   45430:	cmp	x0, x1
   45434:	b.eq	454c0 <mpfr_get_f@@Base+0x198>  // b.none
   45438:	mov	x1, #0x2                   	// #2
   4543c:	movk	x1, #0x8000, lsl #48
   45440:	cmp	x0, x1
   45444:	b.eq	454d4 <mpfr_get_f@@Base+0x1ac>  // b.none
   45448:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4544c:	ldr	x1, [x0, #2576]
   45450:	add	x0, x0, #0xa10
   45454:	blr	x1
   45458:	mrs	x1, tpidr_el0
   4545c:	add	x0, x1, x0
   45460:	ldr	w1, [x0]
   45464:	orr	w1, w1, #0x10
   45468:	str	w1, [x0]
   4546c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   45470:	str	x0, [x20, #8]
   45474:	ldr	w1, [x20]
   45478:	str	w1, [x20, #4]
   4547c:	ldr	x2, [x20, #16]
   45480:	cmp	w1, #0x0
   45484:	b.le	454a0 <mpfr_get_f@@Base+0x178>
   45488:	mov	x0, #0x0                   	// #0
   4548c:	mov	x3, #0xffffffffffffffff    	// #-1
   45490:	str	x3, [x2, x0, lsl #3]
   45494:	add	x0, x0, #0x1
   45498:	cmp	w1, w0
   4549c:	b.gt	45490 <mpfr_get_f@@Base+0x168>
   454a0:	ldr	w0, [x19, #8]
   454a4:	cmp	w0, #0x0
   454a8:	b.gt	4564c <mpfr_get_f@@Base+0x324>
   454ac:	mov	x1, x20
   454b0:	mov	x0, x20
   454b4:	bl	c6d0 <__gmpf_neg@plt>
   454b8:	mov	w23, #0x1                   	// #1
   454bc:	b	45418 <mpfr_get_f@@Base+0xf0>
   454c0:	mov	x1, #0x0                   	// #0
   454c4:	mov	x0, x20
   454c8:	bl	c180 <__gmpf_set_ui@plt>
   454cc:	mov	w23, #0x0                   	// #0
   454d0:	b	45418 <mpfr_get_f@@Base+0xf0>
   454d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   454d8:	ldr	x1, [x0, #2576]
   454dc:	add	x0, x0, #0xa10
   454e0:	blr	x1
   454e4:	mrs	x1, tpidr_el0
   454e8:	add	x0, x1, x0
   454ec:	ldr	w1, [x0]
   454f0:	orr	w1, w1, #0x10
   454f4:	str	w1, [x0]
   454f8:	mov	w23, #0x0                   	// #0
   454fc:	b	45418 <mpfr_get_f@@Base+0xf0>
   45500:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   45504:	add	x2, x2, #0x540
   45508:	mov	w1, #0x61                  	// #97
   4550c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   45510:	add	x0, x0, #0x550
   45514:	bl	cb40 <mpfr_assert_fail@plt>
   45518:	ldr	x1, [x19, #24]
   4551c:	add	x0, x24, x22, lsl #3
   45520:	bl	bce0 <__gmpn_rshift@plt>
   45524:	cmp	x22, #0x0
   45528:	ccmp	x0, #0x0, #0x4, le
   4552c:	b.ne	45544 <mpfr_get_f@@Base+0x21c>  // b.any
   45530:	cmp	x22, #0x0
   45534:	b.le	453e4 <mpfr_get_f@@Base+0xbc>
   45538:	sub	x22, x22, #0x1
   4553c:	str	x0, [x24, x22, lsl #3]
   45540:	b	453dc <mpfr_get_f@@Base+0xb4>
   45544:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   45548:	add	x2, x2, #0x558
   4554c:	mov	w1, #0x68                  	// #104
   45550:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   45554:	add	x0, x0, #0x550
   45558:	bl	cb40 <mpfr_assert_fail@plt>
   4555c:	lsl	x2, x22, #3
   45560:	mov	w1, #0x0                   	// #0
   45564:	mov	x0, x24
   45568:	bl	c110 <memset@plt>
   4556c:	b	453e4 <mpfr_get_f@@Base+0xbc>
   45570:	sub	x1, x1, x25
   45574:	add	x0, sp, #0x50
   45578:	bl	ca80 <mpfr_init2@plt>
   4557c:	ldr	x0, [sp, #80]
   45580:	add	x25, x0, #0x3e
   45584:	subs	x0, x0, #0x1
   45588:	csel	x25, x25, x0, mi  // mi = first
   4558c:	asr	x25, x25, #6
   45590:	add	x25, x25, #0x1
   45594:	cmp	x22, x25
   45598:	b.ne	455f0 <mpfr_get_f@@Base+0x2c8>  // b.any
   4559c:	ldr	w3, [x19, #8]
   455a0:	mov	w2, w23
   455a4:	mov	x1, x19
   455a8:	add	x0, sp, #0x50
   455ac:	bl	c6a0 <mpfr_set4@plt>
   455b0:	mov	w23, w0
   455b4:	ldr	x1, [sp, #96]
   455b8:	negs	x0, x1
   455bc:	and	x1, x1, #0x3f
   455c0:	and	x0, x0, #0x3f
   455c4:	csneg	x0, x1, x0, mi  // mi = first
   455c8:	mov	w3, #0x40                  	// #64
   455cc:	sub	w22, w3, w0
   455d0:	cmp	w0, #0x0
   455d4:	b.le	45608 <mpfr_get_f@@Base+0x2e0>
   455d8:	mov	w3, w22
   455dc:	mov	x2, x25
   455e0:	ldr	x1, [sp, #104]
   455e4:	mov	x0, x24
   455e8:	bl	bce0 <__gmpn_rshift@plt>
   455ec:	b	45628 <mpfr_get_f@@Base+0x300>
   455f0:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   455f4:	add	x2, x2, #0x570
   455f8:	mov	w1, #0x7c                  	// #124
   455fc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   45600:	add	x0, x0, #0x550
   45604:	bl	cb40 <mpfr_assert_fail@plt>
   45608:	neg	w22, w0
   4560c:	cbnz	w0, 455d8 <mpfr_get_f@@Base+0x2b0>
   45610:	ldr	x1, [sp, #104]
   45614:	cmp	x1, x24
   45618:	b.eq	45628 <mpfr_get_f@@Base+0x300>  // b.none
   4561c:	lsl	x2, x25, #3
   45620:	mov	x0, x24
   45624:	bl	ba10 <memcpy@plt>
   45628:	ldr	x3, [sp, #96]
   4562c:	adds	x3, x3, w22, sxtw
   45630:	add	x0, x3, #0x3f
   45634:	csel	x3, x0, x3, mi  // mi = first
   45638:	asr	x3, x3, #6
   4563c:	str	x3, [x20, #8]
   45640:	add	x0, sp, #0x50
   45644:	bl	c070 <mpfr_clear@plt>
   45648:	b	45400 <mpfr_get_f@@Base+0xd8>
   4564c:	mov	w23, #0xffffffff            	// #-1
   45650:	b	45418 <mpfr_get_f@@Base+0xf0>

0000000000045654 <mpfr_round_p@@Base>:
   45654:	lsl	x4, x1, #6
   45658:	cmp	x2, #0x0
   4565c:	ccmp	x2, x3, #0x0, gt
   45660:	ccmp	x4, x3, #0x4, hi  // hi = pmore
   45664:	b.le	457e0 <mpfr_round_p@@Base+0x18c>
   45668:	cmp	x4, x2
   4566c:	csel	x2, x4, x2, ls  // ls = plast
   45670:	add	x4, x3, #0x3f
   45674:	cmp	x3, #0x0
   45678:	csel	x4, x4, x3, lt  // lt = tstop
   4567c:	asr	x5, x4, #6
   45680:	negs	x4, x3
   45684:	and	x3, x3, #0x3f
   45688:	and	x4, x4, #0x3f
   4568c:	csneg	x3, x3, x4, mi  // mi = first
   45690:	mov	w4, #0x40                  	// #64
   45694:	sub	w3, w4, w3
   45698:	add	x4, x2, #0x3f
   4569c:	cmp	x2, #0x0
   456a0:	csel	x4, x4, x2, lt  // lt = tstop
   456a4:	asr	x4, x4, #6
   456a8:	sub	x1, x1, #0x1
   456ac:	sub	x1, x1, x5
   456b0:	add	x6, x0, x1, lsl #3
   456b4:	ldr	x0, [x0, x1, lsl #3]
   456b8:	mov	x1, #0x1                   	// #1
   456bc:	lsl	x1, x1, x3
   456c0:	sub	x1, x1, #0x1
   456c4:	cmp	w3, #0x40
   456c8:	csinv	x1, x1, xzr, ne  // ne = any
   456cc:	and	x3, x1, x0
   456d0:	subs	x4, x4, x5
   456d4:	b.ne	45708 <mpfr_round_p@@Base+0xb4>  // b.any
   456d8:	negs	x0, x2
   456dc:	and	x2, x2, #0x3f
   456e0:	and	x0, x0, #0x3f
   456e4:	csneg	x2, x2, x0, mi  // mi = first
   456e8:	mov	w0, #0x40                  	// #64
   456ec:	sub	w2, w0, w2
   456f0:	lsr	x0, x3, x2
   456f4:	lsr	x1, x1, x2
   456f8:	cmp	x0, #0x0
   456fc:	ccmp	x1, x0, #0x4, ne  // ne = any
   45700:	cset	w0, ne  // ne = any
   45704:	ret
   45708:	sub	x5, x6, #0x8
   4570c:	cbz	x3, 45744 <mpfr_round_p@@Base+0xf0>
   45710:	mov	w0, #0x1                   	// #1
   45714:	cmp	x1, x3
   45718:	b.ne	45704 <mpfr_round_p@@Base+0xb0>  // b.any
   4571c:	mov	x0, x5
   45720:	sub	x4, x6, x4, lsl #3
   45724:	mov	x1, x0
   45728:	cmp	x0, x4
   4572c:	b.eq	457a0 <mpfr_round_p@@Base+0x14c>  // b.none
   45730:	ldr	x1, [x0], #-8
   45734:	cmn	x1, #0x1
   45738:	b.eq	45724 <mpfr_round_p@@Base+0xd0>  // b.none
   4573c:	mov	w0, #0x1                   	// #1
   45740:	b	45704 <mpfr_round_p@@Base+0xb0>
   45744:	mov	x0, x5
   45748:	sub	x4, x6, x4, lsl #3
   4574c:	mov	x1, x0
   45750:	cmp	x0, x4
   45754:	b.eq	45768 <mpfr_round_p@@Base+0x114>  // b.none
   45758:	ldr	x1, [x0], #-8
   4575c:	cbz	x1, 4574c <mpfr_round_p@@Base+0xf8>
   45760:	mov	w0, #0x1                   	// #1
   45764:	b	45704 <mpfr_round_p@@Base+0xb0>
   45768:	negs	x0, x2
   4576c:	and	x2, x2, #0x3f
   45770:	and	x0, x0, #0x3f
   45774:	csneg	x0, x2, x0, mi  // mi = first
   45778:	mov	w2, #0x40                  	// #64
   4577c:	sub	w2, w2, w0
   45780:	mov	w0, #0x0                   	// #0
   45784:	cmp	w2, #0x40
   45788:	b.eq	45704 <mpfr_round_p@@Base+0xb0>  // b.none
   4578c:	ldr	x0, [x1]
   45790:	lsr	x0, x0, x2
   45794:	cmp	x0, #0x0
   45798:	cset	w0, ne  // ne = any
   4579c:	b	45704 <mpfr_round_p@@Base+0xb0>
   457a0:	negs	x0, x2
   457a4:	and	x2, x2, #0x3f
   457a8:	and	x0, x0, #0x3f
   457ac:	csneg	x2, x2, x0, mi  // mi = first
   457b0:	mov	w0, #0x40                  	// #64
   457b4:	sub	w2, w0, w2
   457b8:	mov	w0, #0x0                   	// #0
   457bc:	cmp	w2, #0x40
   457c0:	b.eq	45704 <mpfr_round_p@@Base+0xb0>  // b.none
   457c4:	ldr	x1, [x1]
   457c8:	lsr	x1, x1, x2
   457cc:	mov	x0, #0xffffffffffffffff    	// #-1
   457d0:	lsr	x2, x0, x2
   457d4:	cmp	x1, x2
   457d8:	cset	w0, ne  // ne = any
   457dc:	b	45704 <mpfr_round_p@@Base+0xb0>
   457e0:	mov	w0, #0x0                   	// #0
   457e4:	b	45704 <mpfr_round_p@@Base+0xb0>

00000000000457e8 <mpfr_erfc@@Base>:
   457e8:	stp	x29, x30, [sp, #-272]!
   457ec:	mov	x29, sp
   457f0:	stp	x19, x20, [sp, #16]
   457f4:	stp	x23, x24, [sp, #48]
   457f8:	mov	x23, x0
   457fc:	mov	x19, x1
   45800:	str	w2, [sp, #104]
   45804:	ldr	x0, [x1, #16]
   45808:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4580c:	cmp	x0, x1
   45810:	b.le	45ad0 <mpfr_erfc@@Base+0x2e8>
   45814:	ldr	w0, [x19, #8]
   45818:	cmp	w0, #0x0
   4581c:	b.le	45870 <mpfr_erfc@@Base+0x88>
   45820:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45824:	ldr	x1, [x0, #2512]
   45828:	add	x0, x0, #0x9d0
   4582c:	blr	x1
   45830:	mrs	x1, tpidr_el0
   45834:	ldr	x1, [x1, x0]
   45838:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   4583c:	cmp	x1, x0
   45840:	b.lt	45858 <mpfr_erfc@@Base+0x70>  // b.tstop
   45844:	mov	x2, #0x0                   	// #0
   45848:	mov	x1, #0x6a92                	// #27282
   4584c:	mov	x0, x19
   45850:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   45854:	tbz	w0, #31, 45b60 <mpfr_erfc@@Base+0x378>
   45858:	mov	x2, #0x0                   	// #0
   4585c:	mov	x1, #0x2646                	// #9798
   45860:	movk	x1, #0x6a91, lsl #16
   45864:	mov	x0, x19
   45868:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4586c:	tbz	w0, #31, 45b60 <mpfr_erfc@@Base+0x378>
   45870:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45874:	ldr	x1, [x0, #2576]
   45878:	add	x0, x0, #0xa10
   4587c:	blr	x1
   45880:	mrs	x1, tpidr_el0
   45884:	ldr	w0, [x1, x0]
   45888:	str	w0, [sp, #108]
   4588c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45890:	ldr	x2, [x0, #2512]
   45894:	add	x0, x0, #0x9d0
   45898:	blr	x2
   4589c:	add	x2, x1, x0
   458a0:	ldr	x0, [x1, x0]
   458a4:	str	x0, [sp, #112]
   458a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   458ac:	ldr	x3, [x0, #2544]
   458b0:	add	x0, x0, #0x9f0
   458b4:	blr	x3
   458b8:	ldr	x3, [x1, x0]
   458bc:	str	x3, [sp, #120]
   458c0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   458c4:	str	x3, [x2]
   458c8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   458cc:	str	x2, [x1, x0]
   458d0:	ldr	w0, [x19, #8]
   458d4:	tbnz	w0, #31, 45b80 <mpfr_erfc@@Base+0x398>
   458d8:	ldr	x2, [x19, #16]
   458dc:	mvn	x2, x2
   458e0:	cmp	x2, #0x0
   458e4:	b.le	458f8 <mpfr_erfc@@Base+0x110>
   458e8:	ldr	x0, [x23]
   458ec:	add	x0, x0, #0x1
   458f0:	cmp	x2, x0
   458f4:	b.hi	45d90 <mpfr_erfc@@Base+0x5a8>  // b.pmore
   458f8:	stp	x21, x22, [sp, #32]
   458fc:	stp	x25, x26, [sp, #64]
   45900:	ldr	x20, [x23]
   45904:	cmp	x20, #0x1
   45908:	b.eq	45dd4 <mpfr_erfc@@Base+0x5ec>  // b.none
   4590c:	b.le	45db8 <mpfr_erfc@@Base+0x5d0>
   45910:	ldr	x0, [x23]
   45914:	sub	x0, x0, #0x1
   45918:	clz	x1, x0
   4591c:	mov	w0, #0x40                  	// #64
   45920:	sub	w0, w0, w1
   45924:	sxtw	x0, w0
   45928:	add	x20, x20, x0
   4592c:	add	x20, x20, #0x3
   45930:	ldr	x0, [x19, #16]
   45934:	add	x1, x20, x0, lsl #1
   45938:	cmp	x0, #0x0
   4593c:	csel	x20, x1, x20, gt
   45940:	mov	x1, x20
   45944:	add	x0, sp, #0xf0
   45948:	bl	ca80 <mpfr_init2@plt>
   4594c:	mov	x0, #0x40                  	// #64
   45950:	str	x0, [sp, #136]
   45954:	add	x24, sp, #0xf0
   45958:	add	x22, sp, #0x90
   4595c:	add	x26, sp, #0xb0
   45960:	add	x21, sp, #0xd0
   45964:	ldr	w0, [x19, #8]
   45968:	cmp	w0, #0x0
   4596c:	b.le	459a4 <mpfr_erfc@@Base+0x1bc>
   45970:	ldr	x0, [x19, #16]
   45974:	sub	x0, x0, #0x1
   45978:	lsl	x0, x0, #1
   4597c:	cmp	x20, #0x1
   45980:	b.eq	45df8 <mpfr_erfc@@Base+0x610>  // b.none
   45984:	b.le	45ddc <mpfr_erfc@@Base+0x5f4>
   45988:	sub	x1, x20, #0x1
   4598c:	clz	x2, x1
   45990:	mov	w1, #0x40                  	// #64
   45994:	sub	w1, w1, w2
   45998:	sxtw	x1, w1
   4599c:	cmp	x0, x1
   459a0:	b.ge	45e00 <mpfr_erfc@@Base+0x618>  // b.tcont
   459a4:	mov	w2, #0x0                   	// #0
   459a8:	mov	x1, x19
   459ac:	mov	x0, x24
   459b0:	bl	c1e0 <mpfr_erf@plt>
   459b4:	ldr	x25, [sp, #256]
   459b8:	mov	w3, #0x0                   	// #0
   459bc:	mov	x2, x24
   459c0:	mov	x1, #0x1                   	// #1
   459c4:	mov	x0, x24
   459c8:	bl	ca50 <mpfr_ui_sub@plt>
   459cc:	ldr	x0, [sp, #256]
   459d0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   459d4:	cmp	x0, x1
   459d8:	b.eq	461e0 <mpfr_erfc@@Base+0x9f8>  // b.none
   459dc:	subs	x25, x25, x0
   459e0:	csel	x25, x25, xzr, pl  // pl = nfrst
   459e4:	add	x25, x25, #0x1
   459e8:	ldr	x1, [sp, #256]
   459ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   459f0:	cmp	x1, x0
   459f4:	b.le	461e4 <mpfr_erfc@@Base+0x9fc>
   459f8:	ldr	w0, [sp, #104]
   459fc:	cmp	w0, #0x0
   45a00:	ldr	x3, [x23]
   45a04:	cinc	x3, x3, eq  // eq = none
   45a08:	ldr	x0, [sp, #240]
   45a0c:	add	x1, x0, #0x3e
   45a10:	subs	x0, x0, #0x1
   45a14:	csel	x1, x1, x0, mi  // mi = first
   45a18:	asr	x1, x1, #6
   45a1c:	sub	x2, x20, x25
   45a20:	add	x1, x1, #0x1
   45a24:	ldr	x0, [sp, #264]
   45a28:	bl	c370 <mpfr_round_p@plt>
   45a2c:	cbz	w0, 461e4 <mpfr_erfc@@Base+0x9fc>
   45a30:	add	x19, sp, #0xf0
   45a34:	ldr	w3, [sp, #248]
   45a38:	ldr	w2, [sp, #104]
   45a3c:	mov	x1, x19
   45a40:	mov	x0, x23
   45a44:	bl	c6a0 <mpfr_set4@plt>
   45a48:	mov	w20, w0
   45a4c:	mov	x0, x19
   45a50:	bl	c070 <mpfr_clear@plt>
   45a54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45a58:	ldr	x1, [x0, #2576]
   45a5c:	add	x0, x0, #0xa10
   45a60:	blr	x1
   45a64:	mrs	x1, tpidr_el0
   45a68:	ldr	w2, [sp, #108]
   45a6c:	str	w2, [x1, x0]
   45a70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45a74:	ldr	x2, [x0, #2512]
   45a78:	add	x0, x0, #0x9d0
   45a7c:	blr	x2
   45a80:	ldr	x2, [sp, #112]
   45a84:	str	x2, [x1, x0]
   45a88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45a8c:	ldr	x3, [x0, #2544]
   45a90:	add	x0, x0, #0x9f0
   45a94:	blr	x3
   45a98:	ldr	x3, [sp, #120]
   45a9c:	str	x3, [x1, x0]
   45aa0:	ldr	x0, [x23, #16]
   45aa4:	cmp	x3, x0
   45aa8:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   45aac:	b.gt	46248 <mpfr_erfc@@Base+0xa60>
   45ab0:	cbnz	w20, 4623c <mpfr_erfc@@Base+0xa54>
   45ab4:	ldp	x21, x22, [sp, #32]
   45ab8:	ldp	x25, x26, [sp, #64]
   45abc:	mov	w0, w20
   45ac0:	ldp	x19, x20, [sp, #16]
   45ac4:	ldp	x23, x24, [sp, #48]
   45ac8:	ldp	x29, x30, [sp], #272
   45acc:	ret
   45ad0:	mov	x1, #0x2                   	// #2
   45ad4:	movk	x1, #0x8000, lsl #48
   45ad8:	cmp	x0, x1
   45adc:	b.eq	45b14 <mpfr_erfc@@Base+0x32c>  // b.none
   45ae0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45ae4:	cmp	x0, x1
   45ae8:	b.ne	45b44 <mpfr_erfc@@Base+0x35c>  // b.any
   45aec:	ldr	w0, [x19, #8]
   45af0:	cmp	w0, #0x0
   45af4:	cset	x1, le
   45af8:	ldr	w3, [sp, #104]
   45afc:	mov	x2, #0x0                   	// #0
   45b00:	lsl	x1, x1, #1
   45b04:	mov	x0, x23
   45b08:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   45b0c:	mov	w20, w0
   45b10:	b	45abc <mpfr_erfc@@Base+0x2d4>
   45b14:	str	x1, [x23, #16]
   45b18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45b1c:	ldr	x1, [x0, #2576]
   45b20:	add	x0, x0, #0xa10
   45b24:	blr	x1
   45b28:	mrs	x1, tpidr_el0
   45b2c:	add	x0, x1, x0
   45b30:	ldr	w1, [x0]
   45b34:	orr	w1, w1, #0x4
   45b38:	str	w1, [x0]
   45b3c:	mov	w20, #0x0                   	// #0
   45b40:	b	45abc <mpfr_erfc@@Base+0x2d4>
   45b44:	ldr	w3, [sp, #104]
   45b48:	mov	x2, #0x0                   	// #0
   45b4c:	mov	x1, #0x1                   	// #1
   45b50:	mov	x0, x23
   45b54:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   45b58:	mov	w20, w0
   45b5c:	b	45abc <mpfr_erfc@@Base+0x2d4>
   45b60:	ldr	w0, [sp, #104]
   45b64:	cmp	w0, #0x0
   45b68:	mov	w2, #0x1                   	// #1
   45b6c:	csel	w1, w0, w2, ne  // ne = any
   45b70:	mov	x0, x23
   45b74:	bl	c3c0 <mpfr_underflow@plt>
   45b78:	mov	w20, w0
   45b7c:	b	45abc <mpfr_erfc@@Base+0x2d4>
   45b80:	ldr	x20, [x19, #16]
   45b84:	ldr	x0, [x23]
   45b88:	cmp	x0, #0x7
   45b8c:	ccmp	x20, #0x1, #0x4, le
   45b90:	b.gt	45cb4 <mpfr_erfc@@Base+0x4cc>
   45b94:	cmp	x20, #0x2
   45b98:	ccmp	x0, #0x19, #0x0, gt
   45b9c:	b.le	45cb4 <mpfr_erfc@@Base+0x4cc>
   45ba0:	cmp	x0, #0x78
   45ba4:	b.gt	45bc0 <mpfr_erfc@@Base+0x3d8>
   45ba8:	mov	x2, #0x0                   	// #0
   45bac:	mov	x1, #0xfffffffffffffff7    	// #-9
   45bb0:	mov	x0, x19
   45bb4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45bb8:	cmp	w0, #0x0
   45bbc:	b.le	45cb4 <mpfr_erfc@@Base+0x4cc>
   45bc0:	mov	x2, #0x0                   	// #0
   45bc4:	mov	x1, #0xffffffffffff956e    	// #-27282
   45bc8:	mov	x0, x19
   45bcc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45bd0:	cmp	w0, #0x0
   45bd4:	b.le	45cb4 <mpfr_erfc@@Base+0x4cc>
   45bd8:	cmp	x20, #0x2
   45bdc:	b.le	458d8 <mpfr_erfc@@Base+0xf0>
   45be0:	stp	x21, x22, [sp, #32]
   45be4:	add	x21, sp, #0xb0
   45be8:	mov	x1, #0x20                  	// #32
   45bec:	mov	x0, x21
   45bf0:	bl	ca80 <mpfr_init2@plt>
   45bf4:	add	x20, sp, #0xd0
   45bf8:	mov	x1, #0x20                  	// #32
   45bfc:	mov	x0, x20
   45c00:	bl	ca80 <mpfr_init2@plt>
   45c04:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   45c08:	add	x1, x1, #0x580
   45c0c:	mov	x0, x21
   45c10:	bl	c340 <mpfr_set_str_binary@plt>
   45c14:	mov	w2, #0x1                   	// #1
   45c18:	mov	x1, x19
   45c1c:	mov	x0, x20
   45c20:	bl	c400 <mpfr_sqr@plt>
   45c24:	mov	w3, #0x1                   	// #1
   45c28:	mov	x2, x20
   45c2c:	mov	x1, x21
   45c30:	mov	x0, x21
   45c34:	bl	bd50 <mpfr_mul@plt>
   45c38:	mov	w2, #0x1                   	// #1
   45c3c:	mov	x1, x19
   45c40:	mov	x0, x20
   45c44:	bl	bd70 <mpfr_neg@plt>
   45c48:	mov	w2, #0x1                   	// #1
   45c4c:	mov	x1, x20
   45c50:	mov	x0, x20
   45c54:	bl	c1d0 <mpfr_log2@plt>
   45c58:	mov	w3, #0x1                   	// #1
   45c5c:	mov	x2, x20
   45c60:	mov	x1, x21
   45c64:	mov	x0, x21
   45c68:	bl	c1a0 <mpfr_add@plt>
   45c6c:	mov	w3, #0x2                   	// #2
   45c70:	mov	x2, #0x0                   	// #0
   45c74:	ldr	x1, [x23]
   45c78:	mov	x0, x20
   45c7c:	bl	ba80 <mpfr_set_si_2exp@plt>
   45c80:	mov	w2, #0x1                   	// #1
   45c84:	mov	x1, x20
   45c88:	mov	x0, x21
   45c8c:	bl	c9a0 <mpfr_cmp3@plt>
   45c90:	mov	w22, w0
   45c94:	mov	x0, x21
   45c98:	bl	c070 <mpfr_clear@plt>
   45c9c:	mov	x0, x20
   45ca0:	bl	c070 <mpfr_clear@plt>
   45ca4:	tbz	w22, #31, 45cb0 <mpfr_erfc@@Base+0x4c8>
   45ca8:	ldp	x21, x22, [sp, #32]
   45cac:	b	458d8 <mpfr_erfc@@Base+0xf0>
   45cb0:	ldp	x21, x22, [sp, #32]
   45cb4:	mov	w3, #0x0                   	// #0
   45cb8:	mov	x2, #0x0                   	// #0
   45cbc:	mov	x1, #0x2                   	// #2
   45cc0:	mov	x0, x23
   45cc4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   45cc8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45ccc:	ldr	x1, [x0, #2576]
   45cd0:	add	x0, x0, #0xa10
   45cd4:	blr	x1
   45cd8:	mrs	x1, tpidr_el0
   45cdc:	add	x0, x1, x0
   45ce0:	ldr	w1, [x0]
   45ce4:	orr	w1, w1, #0x8
   45ce8:	str	w1, [x0]
   45cec:	ldr	w0, [sp, #104]
   45cf0:	and	w0, w0, #0xfffffffd
   45cf4:	mov	w20, #0x1                   	// #1
   45cf8:	cmp	w0, w20
   45cfc:	b.eq	45d80 <mpfr_erfc@@Base+0x598>  // b.none
   45d00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45d04:	ldr	x1, [x0, #2576]
   45d08:	add	x0, x0, #0xa10
   45d0c:	blr	x1
   45d10:	mrs	x1, tpidr_el0
   45d14:	ldr	w2, [sp, #108]
   45d18:	str	w2, [x1, x0]
   45d1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45d20:	ldr	x2, [x0, #2512]
   45d24:	add	x0, x0, #0x9d0
   45d28:	blr	x2
   45d2c:	ldr	x2, [sp, #112]
   45d30:	str	x2, [x1, x0]
   45d34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45d38:	ldr	x3, [x0, #2544]
   45d3c:	add	x0, x0, #0x9f0
   45d40:	blr	x3
   45d44:	ldr	x3, [sp, #120]
   45d48:	str	x3, [x1, x0]
   45d4c:	ldr	x0, [x23, #16]
   45d50:	cmp	x2, x0
   45d54:	ccmp	x3, x0, #0x1, le
   45d58:	b.lt	46250 <mpfr_erfc@@Base+0xa68>  // b.tstop
   45d5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45d60:	ldr	x1, [x0, #2576]
   45d64:	add	x0, x0, #0xa10
   45d68:	blr	x1
   45d6c:	ldr	w1, [sp, #108]
   45d70:	orr	w2, w1, #0x8
   45d74:	mrs	x1, tpidr_el0
   45d78:	str	w2, [x1, x0]
   45d7c:	b	45abc <mpfr_erfc@@Base+0x2d4>
   45d80:	mov	x0, x23
   45d84:	bl	bdd0 <mpfr_nextbelow@plt>
   45d88:	mov	w20, #0xffffffff            	// #-1
   45d8c:	b	45d00 <mpfr_erfc@@Base+0x518>
   45d90:	ldr	w3, [x19, #8]
   45d94:	ldr	w4, [sp, #104]
   45d98:	lsr	w3, w3, #31
   45d9c:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   45da0:	ldr	x1, [x1, #3928]
   45da4:	mov	x0, x23
   45da8:	bl	c540 <mpfr_round_near_x@plt>
   45dac:	mov	w20, w0
   45db0:	cbz	w0, 458f8 <mpfr_erfc@@Base+0x110>
   45db4:	b	45d00 <mpfr_erfc@@Base+0x518>
   45db8:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   45dbc:	add	x2, x2, #0x848
   45dc0:	mov	w1, #0xe2                  	// #226
   45dc4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   45dc8:	add	x0, x0, #0x5a8
   45dcc:	bl	cb40 <mpfr_assert_fail@plt>
   45dd0:	b	45910 <mpfr_erfc@@Base+0x128>
   45dd4:	mov	x0, #0x0                   	// #0
   45dd8:	b	45928 <mpfr_erfc@@Base+0x140>
   45ddc:	stp	x27, x28, [sp, #80]
   45de0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   45de4:	add	x2, x2, #0xd58
   45de8:	mov	w1, #0xee                  	// #238
   45dec:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   45df0:	add	x0, x0, #0x5a8
   45df4:	bl	cb40 <mpfr_assert_fail@plt>
   45df8:	mov	x1, #0x0                   	// #0
   45dfc:	b	4599c <mpfr_erfc@@Base+0x1b4>
   45e00:	stp	x27, x28, [sp, #80]
   45e04:	ldr	x0, [sp, #240]
   45e08:	mov	x25, x0
   45e0c:	str	x0, [sp, #128]
   45e10:	mov	x1, x0
   45e14:	mov	x0, x22
   45e18:	bl	ca80 <mpfr_init2@plt>
   45e1c:	mov	x1, x25
   45e20:	mov	x0, x26
   45e24:	bl	ca80 <mpfr_init2@plt>
   45e28:	mov	x1, #0x1f                  	// #31
   45e2c:	mov	x0, x21
   45e30:	bl	ca80 <mpfr_init2@plt>
   45e34:	mov	w3, #0x3                   	// #3
   45e38:	mov	x2, x19
   45e3c:	mov	x1, x19
   45e40:	mov	x0, x26
   45e44:	bl	bd50 <mpfr_mul@plt>
   45e48:	mov	w3, #0x2                   	// #2
   45e4c:	mov	x2, x26
   45e50:	mov	x1, #0x1                   	// #1
   45e54:	mov	x0, x26
   45e58:	bl	c2f0 <mpfr_ui_div@plt>
   45e5c:	mov	w3, #0x2                   	// #2
   45e60:	mov	x2, #0x1                   	// #1
   45e64:	mov	x1, x26
   45e68:	mov	x0, x26
   45e6c:	bl	c8f0 <mpfr_div_2ui@plt>
   45e70:	mov	w3, #0x0                   	// #0
   45e74:	mov	x2, #0x0                   	// #0
   45e78:	mov	x1, #0x1                   	// #1
   45e7c:	mov	x0, x22
   45e80:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   45e84:	ldr	w3, [sp, #152]
   45e88:	mov	w2, #0x0                   	// #0
   45e8c:	mov	x1, x22
   45e90:	mov	x0, x24
   45e94:	bl	c6a0 <mpfr_set4@plt>
   45e98:	mov	w0, #0x1                   	// #1
   45e9c:	str	w0, [sp, #216]
   45ea0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45ea4:	str	x0, [sp, #224]
   45ea8:	mov	x0, #0xe                   	// #14
   45eac:	str	x0, [sp, #96]
   45eb0:	mov	x27, #0x1                   	// #1
   45eb4:	mov	x28, x27
   45eb8:	mov	w25, #0x2                   	// #2
   45ebc:	b	46018 <mpfr_erfc@@Base+0x830>
   45ec0:	mov	w3, #0x2                   	// #2
   45ec4:	mov	x2, #0x1                   	// #1
   45ec8:	mov	x1, x21
   45ecc:	mov	x0, x21
   45ed0:	bl	c260 <mpfr_add_ui@plt>
   45ed4:	mov	w3, #0x2                   	// #2
   45ed8:	mov	x2, x19
   45edc:	mov	x1, x19
   45ee0:	mov	x0, x22
   45ee4:	bl	bd50 <mpfr_mul@plt>
   45ee8:	mov	w3, #0x2                   	// #2
   45eec:	mov	x2, #0x3                   	// #3
   45ef0:	mov	x1, x21
   45ef4:	mov	x0, x21
   45ef8:	bl	c8f0 <mpfr_div_2ui@plt>
   45efc:	mov	w3, #0x2                   	// #2
   45f00:	mov	x2, x22
   45f04:	mov	x1, x21
   45f08:	mov	x0, x21
   45f0c:	bl	c1a0 <mpfr_add@plt>
   45f10:	mov	w3, #0x2                   	// #2
   45f14:	mov	x2, #0x3                   	// #3
   45f18:	mov	x1, x21
   45f1c:	mov	x0, x21
   45f20:	bl	c2c0 <mpfr_mul_2ui@plt>
   45f24:	mov	w2, #0x2                   	// #2
   45f28:	mov	x1, x22
   45f2c:	mov	x0, x22
   45f30:	bl	c750 <mpfr_exp@plt>
   45f34:	mov	w3, #0x0                   	// #0
   45f38:	mov	x2, x19
   45f3c:	mov	x1, x22
   45f40:	mov	x0, x22
   45f44:	bl	bd50 <mpfr_mul@plt>
   45f48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   45f4c:	ldr	x1, [x0, #2624]
   45f50:	add	x0, x0, #0xa40
   45f54:	blr	x1
   45f58:	mov	w2, #0x1                   	// #1
   45f5c:	mrs	x1, tpidr_el0
   45f60:	add	x1, x1, x0
   45f64:	mov	x0, x26
   45f68:	bl	c380 <mpfr_cache@plt>
   45f6c:	mov	w2, #0x0                   	// #0
   45f70:	mov	x1, x26
   45f74:	mov	x0, x26
   45f78:	bl	c930 <mpfr_sqrt@plt>
   45f7c:	mov	w3, #0x0                   	// #0
   45f80:	mov	x2, x26
   45f84:	mov	x1, x22
   45f88:	mov	x0, x22
   45f8c:	bl	bd50 <mpfr_mul@plt>
   45f90:	mov	w3, #0x0                   	// #0
   45f94:	mov	x2, x22
   45f98:	mov	x1, x24
   45f9c:	mov	x0, x24
   45fa0:	bl	c620 <mpfr_div@plt>
   45fa4:	ldr	x1, [sp, #256]
   45fa8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45fac:	cmp	x1, x0
   45fb0:	b.eq	460c0 <mpfr_erfc@@Base+0x8d8>  // b.none
   45fb4:	mov	w3, #0x2                   	// #2
   45fb8:	mov	x2, #0x7                   	// #7
   45fbc:	mov	x1, x21
   45fc0:	mov	x0, x21
   45fc4:	bl	c260 <mpfr_add_ui@plt>
   45fc8:	ldr	x25, [sp, #224]
   45fcc:	mov	x0, x22
   45fd0:	bl	c070 <mpfr_clear@plt>
   45fd4:	mov	x0, x26
   45fd8:	bl	c070 <mpfr_clear@plt>
   45fdc:	mov	x0, x21
   45fe0:	bl	c070 <mpfr_clear@plt>
   45fe4:	cbz	x25, 46160 <mpfr_erfc@@Base+0x978>
   45fe8:	ldp	x27, x28, [sp, #80]
   45fec:	b	459e8 <mpfr_erfc@@Base+0x200>
   45ff0:	mov	w3, #0x0                   	// #0
   45ff4:	mov	x2, x22
   45ff8:	mov	x1, x24
   45ffc:	mov	x0, x24
   46000:	bl	c1a0 <mpfr_add@plt>
   46004:	add	x28, x28, #0x1
   46008:	add	x27, x27, #0x2
   4600c:	ldr	x0, [sp, #96]
   46010:	add	x0, x0, #0xe
   46014:	str	x0, [sp, #96]
   46018:	mov	w3, w25
   4601c:	mov	x2, x27
   46020:	mov	x1, x22
   46024:	mov	x0, x22
   46028:	bl	ba50 <mpfr_mul_ui@plt>
   4602c:	mov	w3, w25
   46030:	mov	x2, x26
   46034:	mov	x1, x22
   46038:	mov	x0, x22
   4603c:	bl	bd50 <mpfr_mul@plt>
   46040:	mov	w3, w25
   46044:	ldr	x2, [sp, #256]
   46048:	ldr	x0, [sp, #160]
   4604c:	sub	x2, x2, x0
   46050:	mov	x1, x21
   46054:	mov	x0, x21
   46058:	bl	bb90 <mpfr_mul_2si@plt>
   4605c:	mov	w3, w25
   46060:	ldr	x2, [sp, #96]
   46064:	mov	x1, x21
   46068:	mov	x0, x21
   4606c:	bl	c260 <mpfr_add_ui@plt>
   46070:	mov	w3, w25
   46074:	ldr	x2, [sp, #256]
   46078:	ldr	x0, [sp, #160]
   4607c:	sub	x2, x2, x0
   46080:	mov	x1, x21
   46084:	mov	x0, x21
   46088:	bl	c420 <mpfr_div_2si@plt>
   4608c:	ldr	x0, [sp, #160]
   46090:	ldr	x1, [sp, #128]
   46094:	add	x0, x1, x0
   46098:	ldr	x1, [sp, #256]
   4609c:	cmp	x0, x1
   460a0:	b.le	45ec0 <mpfr_erfc@@Base+0x6d8>
   460a4:	tbz	w28, #0, 45ff0 <mpfr_erfc@@Base+0x808>
   460a8:	mov	w3, #0x0                   	// #0
   460ac:	mov	x2, x22
   460b0:	mov	x1, x24
   460b4:	mov	x0, x24
   460b8:	bl	bb70 <mpfr_sub@plt>
   460bc:	b	46004 <mpfr_erfc@@Base+0x81c>
   460c0:	add	x20, sp, #0x90
   460c4:	mov	w3, #0x3                   	// #3
   460c8:	mov	x2, x19
   460cc:	mov	x1, x19
   460d0:	mov	x0, x20
   460d4:	bl	bd50 <mpfr_mul@plt>
   460d8:	mov	w2, #0x2                   	// #2
   460dc:	mov	x1, x20
   460e0:	mov	x0, x20
   460e4:	bl	bd70 <mpfr_neg@plt>
   460e8:	mov	w2, #0x2                   	// #2
   460ec:	mov	x1, x20
   460f0:	mov	x0, x20
   460f4:	bl	c750 <mpfr_exp@plt>
   460f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   460fc:	ldr	x1, [x0, #2624]
   46100:	add	x0, x0, #0xa40
   46104:	blr	x1
   46108:	add	x21, sp, #0xb0
   4610c:	mov	w2, #0x3                   	// #3
   46110:	mrs	x1, tpidr_el0
   46114:	add	x1, x1, x0
   46118:	mov	x0, x21
   4611c:	bl	c380 <mpfr_cache@plt>
   46120:	mov	w3, #0x3                   	// #3
   46124:	mov	x2, x19
   46128:	mov	x1, x21
   4612c:	mov	x0, x21
   46130:	bl	bd50 <mpfr_mul@plt>
   46134:	mov	w3, #0x0                   	// #0
   46138:	mov	x2, x21
   4613c:	mov	x1, x20
   46140:	add	x0, sp, #0xf0
   46144:	bl	c620 <mpfr_div@plt>
   46148:	mov	x0, x20
   4614c:	bl	c070 <mpfr_clear@plt>
   46150:	mov	x0, x21
   46154:	bl	c070 <mpfr_clear@plt>
   46158:	add	x0, sp, #0xd0
   4615c:	bl	c070 <mpfr_clear@plt>
   46160:	add	x0, sp, #0xf0
   46164:	bl	c070 <mpfr_clear@plt>
   46168:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4616c:	ldr	x1, [x0, #2576]
   46170:	add	x0, x0, #0xa10
   46174:	blr	x1
   46178:	mrs	x1, tpidr_el0
   4617c:	ldr	w2, [sp, #108]
   46180:	str	w2, [x1, x0]
   46184:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46188:	ldr	x2, [x0, #2512]
   4618c:	add	x0, x0, #0x9d0
   46190:	blr	x2
   46194:	ldr	x2, [sp, #112]
   46198:	str	x2, [x1, x0]
   4619c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   461a0:	ldr	x2, [x0, #2544]
   461a4:	add	x0, x0, #0x9f0
   461a8:	blr	x2
   461ac:	ldr	x2, [sp, #120]
   461b0:	str	x2, [x1, x0]
   461b4:	ldr	w0, [sp, #104]
   461b8:	cmp	w0, #0x0
   461bc:	mov	w2, #0x1                   	// #1
   461c0:	csel	w1, w0, w2, ne  // ne = any
   461c4:	mov	x0, x23
   461c8:	bl	c3c0 <mpfr_underflow@plt>
   461cc:	mov	w20, w0
   461d0:	ldp	x21, x22, [sp, #32]
   461d4:	ldp	x25, x26, [sp, #64]
   461d8:	ldp	x27, x28, [sp, #80]
   461dc:	b	45abc <mpfr_erfc@@Base+0x2d4>
   461e0:	lsl	x20, x20, #1
   461e4:	mov	x0, #0xfffffffffffffeff    	// #-257
   461e8:	movk	x0, #0x7fff, lsl #48
   461ec:	sub	x0, x0, x20
   461f0:	ldr	x1, [sp, #136]
   461f4:	cmp	x0, x1
   461f8:	b.lt	46220 <mpfr_erfc@@Base+0xa38>  // b.tstop
   461fc:	ldr	x0, [sp, #136]
   46200:	add	x20, x20, x0
   46204:	add	x0, x20, x20, lsr #63
   46208:	asr	x0, x0, #1
   4620c:	str	x0, [sp, #136]
   46210:	mov	x1, x20
   46214:	mov	x0, x24
   46218:	bl	bed0 <mpfr_set_prec@plt>
   4621c:	b	45964 <mpfr_erfc@@Base+0x17c>
   46220:	stp	x27, x28, [sp, #80]
   46224:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   46228:	add	x2, x2, #0xd68
   4622c:	mov	w1, #0x10a                 	// #266
   46230:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   46234:	add	x0, x0, #0x5a8
   46238:	bl	cb40 <mpfr_assert_fail@plt>
   4623c:	ldp	x21, x22, [sp, #32]
   46240:	ldp	x25, x26, [sp, #64]
   46244:	b	45d5c <mpfr_erfc@@Base+0x574>
   46248:	ldp	x21, x22, [sp, #32]
   4624c:	ldp	x25, x26, [sp, #64]
   46250:	ldr	w2, [sp, #104]
   46254:	mov	w1, w20
   46258:	mov	x0, x23
   4625c:	bl	cb30 <mpfr_check_range@plt>
   46260:	mov	w20, w0
   46264:	b	45abc <mpfr_erfc@@Base+0x2d4>
   46268:	stp	x29, x30, [sp, #-80]!
   4626c:	mov	x29, sp
   46270:	stp	x19, x20, [sp, #16]
   46274:	stp	x21, x22, [sp, #32]
   46278:	stp	x23, x24, [sp, #48]
   4627c:	str	x25, [sp, #64]
   46280:	mov	x19, x0
   46284:	mov	w22, w1
   46288:	mov	w20, w3
   4628c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46290:	ldr	x1, [x0, #2576]
   46294:	add	x0, x0, #0xa10
   46298:	blr	x1
   4629c:	mrs	x4, tpidr_el0
   462a0:	ldr	w23, [x4, x0]
   462a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   462a8:	ldr	x1, [x0, #2512]
   462ac:	add	x0, x0, #0x9d0
   462b0:	blr	x1
   462b4:	add	x1, x4, x0
   462b8:	ldr	x24, [x4, x0]
   462bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   462c0:	ldr	x3, [x0, #2544]
   462c4:	add	x0, x0, #0x9f0
   462c8:	blr	x3
   462cc:	ldr	x25, [x4, x0]
   462d0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   462d4:	str	x3, [x1]
   462d8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   462dc:	str	x1, [x4, x0]
   462e0:	cbz	w2, 463cc <mpfr_erfc@@Base+0xbe4>
   462e4:	mov	w2, #0x3                   	// #3
   462e8:	cmp	w20, #0x2
   462ec:	b.eq	462fc <mpfr_erfc@@Base+0xb14>  // b.none
   462f0:	cmp	w20, w2
   462f4:	mov	w2, #0x2                   	// #2
   462f8:	csel	w2, w20, w2, ne  // ne = any
   462fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46300:	ldr	x1, [x0, #2624]
   46304:	add	x0, x0, #0xa40
   46308:	blr	x1
   4630c:	mrs	x1, tpidr_el0
   46310:	add	x1, x1, x0
   46314:	mov	x0, x19
   46318:	bl	c380 <mpfr_cache@plt>
   4631c:	neg	w21, w0
   46320:	ldr	w0, [x19, #8]
   46324:	neg	w0, w0
   46328:	str	w0, [x19, #8]
   4632c:	mov	w3, w20
   46330:	sxtw	x2, w22
   46334:	mov	x1, x19
   46338:	mov	x0, x19
   4633c:	bl	c8f0 <mpfr_div_2ui@plt>
   46340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46344:	ldr	x1, [x0, #2576]
   46348:	add	x0, x0, #0xa10
   4634c:	blr	x1
   46350:	mrs	x1, tpidr_el0
   46354:	str	w23, [x1, x0]
   46358:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4635c:	ldr	x2, [x0, #2512]
   46360:	add	x0, x0, #0x9d0
   46364:	blr	x2
   46368:	str	x24, [x1, x0]
   4636c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46370:	ldr	x2, [x0, #2544]
   46374:	add	x0, x0, #0x9f0
   46378:	blr	x2
   4637c:	str	x25, [x1, x0]
   46380:	ldr	x0, [x19, #16]
   46384:	cmp	x25, x0
   46388:	ccmp	x24, x0, #0x0, ge  // ge = tcont
   4638c:	b.gt	463f8 <mpfr_erfc@@Base+0xc10>
   46390:	cbz	w21, 463b0 <mpfr_erfc@@Base+0xbc8>
   46394:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46398:	ldr	x1, [x0, #2576]
   4639c:	add	x0, x0, #0xa10
   463a0:	blr	x1
   463a4:	orr	w23, w23, #0x8
   463a8:	mrs	x1, tpidr_el0
   463ac:	str	w23, [x1, x0]
   463b0:	mov	w0, w21
   463b4:	ldp	x19, x20, [sp, #16]
   463b8:	ldp	x21, x22, [sp, #32]
   463bc:	ldp	x23, x24, [sp, #48]
   463c0:	ldr	x25, [sp, #64]
   463c4:	ldp	x29, x30, [sp], #80
   463c8:	ret
   463cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   463d0:	ldr	x1, [x0, #2624]
   463d4:	add	x0, x0, #0xa40
   463d8:	blr	x1
   463dc:	mov	w2, w20
   463e0:	mrs	x1, tpidr_el0
   463e4:	add	x1, x1, x0
   463e8:	mov	x0, x19
   463ec:	bl	c380 <mpfr_cache@plt>
   463f0:	mov	w21, w0
   463f4:	b	4632c <mpfr_erfc@@Base+0xb44>
   463f8:	mov	w2, w20
   463fc:	mov	w1, w21
   46400:	mov	x0, x19
   46404:	bl	cb30 <mpfr_check_range@plt>
   46408:	mov	w21, w0
   4640c:	b	463b0 <mpfr_erfc@@Base+0xbc8>

0000000000046410 <mpfr_atan2@@Base>:
   46410:	stp	x29, x30, [sp, #-208]!
   46414:	mov	x29, sp
   46418:	stp	x19, x20, [sp, #16]
   4641c:	stp	x21, x22, [sp, #32]
   46420:	stp	x23, x24, [sp, #48]
   46424:	mov	x19, x0
   46428:	mov	x21, x1
   4642c:	mov	x20, x2
   46430:	mov	w23, w3
   46434:	ldr	x0, [x2, #16]
   46438:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4643c:	cmp	x0, x1
   46440:	b.le	46658 <mpfr_atan2@@Base+0x248>
   46444:	ldr	x2, [x21, #16]
   46448:	cmp	x2, x1
   4644c:	b.le	46668 <mpfr_atan2@@Base+0x258>
   46450:	ldr	w0, [x20, #8]
   46454:	cmp	w0, #0x0
   46458:	b.gt	46a38 <mpfr_atan2@@Base+0x628>
   4645c:	stp	x25, x26, [sp, #64]
   46460:	stp	x27, x28, [sp, #80]
   46464:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46468:	ldr	x1, [x0, #2576]
   4646c:	add	x0, x0, #0xa10
   46470:	blr	x1
   46474:	mrs	x1, tpidr_el0
   46478:	ldr	w0, [x1, x0]
   4647c:	str	w0, [sp, #100]
   46480:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46484:	ldr	x2, [x0, #2512]
   46488:	add	x0, x0, #0x9d0
   4648c:	blr	x2
   46490:	add	x2, x1, x0
   46494:	ldr	x25, [x1, x0]
   46498:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4649c:	ldr	x3, [x0, #2544]
   464a0:	add	x0, x0, #0x9f0
   464a4:	blr	x3
   464a8:	ldr	x26, [x1, x0]
   464ac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   464b0:	str	x3, [x2]
   464b4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   464b8:	str	x2, [x1, x0]
   464bc:	ldr	x0, [x19]
   464c0:	add	x22, x0, #0x3
   464c4:	cmp	x0, #0x1
   464c8:	b.eq	46b00 <mpfr_atan2@@Base+0x6f0>  // b.none
   464cc:	cmp	x0, #0x1
   464d0:	b.le	46ae4 <mpfr_atan2@@Base+0x6d4>
   464d4:	ldr	x0, [x19]
   464d8:	sub	x0, x0, #0x1
   464dc:	clz	x1, x0
   464e0:	mov	w0, #0x40                  	// #64
   464e4:	sub	w0, w0, w1
   464e8:	sxtw	x0, w0
   464ec:	add	x22, x22, x0
   464f0:	mov	x1, x22
   464f4:	add	x0, sp, #0xb0
   464f8:	bl	ca80 <mpfr_init2@plt>
   464fc:	ldr	w0, [x20, #8]
   46500:	cmp	w0, #0x0
   46504:	b.le	46bf8 <mpfr_atan2@@Base+0x7e8>
   46508:	mov	x0, #0x40                  	// #64
   4650c:	str	x0, [sp, #104]
   46510:	mrs	x27, tpidr_el0
   46514:	add	x24, sp, #0xb0
   46518:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4651c:	ldr	x1, [x0, #2576]
   46520:	add	x0, x0, #0xa10
   46524:	blr	x1
   46528:	add	x28, x27, x0
   4652c:	str	wzr, [x27, x0]
   46530:	mov	w3, #0x0                   	// #0
   46534:	mov	x2, x20
   46538:	mov	x1, x21
   4653c:	mov	x0, x24
   46540:	bl	c620 <mpfr_div@plt>
   46544:	ldr	w1, [x28]
   46548:	cbz	w0, 46b08 <mpfr_atan2@@Base+0x6f8>
   4654c:	tbnz	w1, #0, 46b20 <mpfr_atan2@@Base+0x710>
   46550:	mov	w2, #0x0                   	// #0
   46554:	mov	x1, x24
   46558:	mov	x0, x24
   4655c:	bl	c690 <mpfr_atan@plt>
   46560:	ldr	x0, [sp, #192]
   46564:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   46568:	cmp	x0, x1
   4656c:	b.le	46ba4 <mpfr_atan2@@Base+0x794>
   46570:	cmp	w23, #0x0
   46574:	ldr	x3, [x19]
   46578:	cinc	x3, x3, eq  // eq = none
   4657c:	ldr	x0, [sp, #176]
   46580:	add	x1, x0, #0x3e
   46584:	subs	x0, x0, #0x1
   46588:	csel	x1, x1, x0, mi  // mi = first
   4658c:	asr	x1, x1, #6
   46590:	sub	x2, x22, #0x2
   46594:	add	x1, x1, #0x1
   46598:	ldr	x0, [sp, #200]
   4659c:	bl	c370 <mpfr_round_p@plt>
   465a0:	cbz	w0, 46ba4 <mpfr_atan2@@Base+0x794>
   465a4:	ldr	w3, [sp, #184]
   465a8:	mov	w2, w23
   465ac:	add	x1, sp, #0xb0
   465b0:	mov	x0, x19
   465b4:	bl	c6a0 <mpfr_set4@plt>
   465b8:	mov	w20, w0
   465bc:	add	x0, sp, #0xb0
   465c0:	bl	c070 <mpfr_clear@plt>
   465c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   465c8:	ldr	x1, [x0, #2576]
   465cc:	add	x0, x0, #0xa10
   465d0:	blr	x1
   465d4:	mrs	x1, tpidr_el0
   465d8:	ldr	w2, [sp, #100]
   465dc:	str	w2, [x1, x0]
   465e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   465e4:	ldr	x3, [x0, #2512]
   465e8:	add	x0, x0, #0x9d0
   465ec:	blr	x3
   465f0:	str	x25, [x1, x0]
   465f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   465f8:	ldr	x3, [x0, #2544]
   465fc:	add	x0, x0, #0x9f0
   46600:	blr	x3
   46604:	str	x26, [x1, x0]
   46608:	ldr	x0, [x19, #16]
   4660c:	cmp	x26, x0
   46610:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   46614:	b.gt	46d94 <mpfr_atan2@@Base+0x984>
   46618:	cbz	w20, 46dc0 <mpfr_atan2@@Base+0x9b0>
   4661c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46620:	ldr	x1, [x0, #2576]
   46624:	add	x0, x0, #0xa10
   46628:	blr	x1
   4662c:	orr	w1, w2, #0x8
   46630:	mrs	x2, tpidr_el0
   46634:	str	w1, [x2, x0]
   46638:	ldp	x25, x26, [sp, #64]
   4663c:	ldp	x27, x28, [sp, #80]
   46640:	mov	w0, w20
   46644:	ldp	x19, x20, [sp, #16]
   46648:	ldp	x21, x22, [sp, #32]
   4664c:	ldp	x23, x24, [sp, #48]
   46650:	ldp	x29, x30, [sp], #208
   46654:	ret
   46658:	mov	x1, #0x2                   	// #2
   4665c:	movk	x1, #0x8000, lsl #48
   46660:	cmp	x0, x1
   46664:	b.eq	466fc <mpfr_atan2@@Base+0x2ec>  // b.none
   46668:	ldr	x1, [x21, #16]
   4666c:	mov	x2, #0x2                   	// #2
   46670:	movk	x2, #0x8000, lsl #48
   46674:	cmp	x1, x2
   46678:	b.eq	466fc <mpfr_atan2@@Base+0x2ec>  // b.none
   4667c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   46680:	cmp	x1, x2
   46684:	b.eq	46734 <mpfr_atan2@@Base+0x324>  // b.none
   46688:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   4668c:	cmp	x0, x2
   46690:	b.eq	46788 <mpfr_atan2@@Base+0x378>  // b.none
   46694:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   46698:	cmp	x1, x2
   4669c:	b.eq	467a8 <mpfr_atan2@@Base+0x398>  // b.none
   466a0:	ldr	w0, [x20, #8]
   466a4:	tbz	w0, #31, 4673c <mpfr_atan2@@Base+0x32c>
   466a8:	ldr	w0, [x21, #8]
   466ac:	tbz	w0, #31, 4675c <mpfr_atan2@@Base+0x34c>
   466b0:	cmp	w23, #0x2
   466b4:	b.eq	46754 <mpfr_atan2@@Base+0x344>  // b.none
   466b8:	cmp	w23, #0x3
   466bc:	mov	w0, #0x2                   	// #2
   466c0:	csel	w23, w23, w0, ne  // ne = any
   466c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   466c8:	ldr	x1, [x0, #2624]
   466cc:	add	x0, x0, #0xa40
   466d0:	blr	x1
   466d4:	mov	w2, w23
   466d8:	mrs	x1, tpidr_el0
   466dc:	add	x1, x1, x0
   466e0:	mov	x0, x19
   466e4:	bl	c380 <mpfr_cache@plt>
   466e8:	ldr	w1, [x19, #8]
   466ec:	neg	w1, w1
   466f0:	str	w1, [x19, #8]
   466f4:	neg	w20, w0
   466f8:	b	46640 <mpfr_atan2@@Base+0x230>
   466fc:	mov	x0, #0x2                   	// #2
   46700:	movk	x0, #0x8000, lsl #48
   46704:	str	x0, [x19, #16]
   46708:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4670c:	ldr	x1, [x0, #2576]
   46710:	add	x0, x0, #0xa10
   46714:	blr	x1
   46718:	mrs	x1, tpidr_el0
   4671c:	add	x0, x1, x0
   46720:	ldr	w1, [x0]
   46724:	orr	w1, w1, #0x4
   46728:	str	w1, [x0]
   4672c:	mov	w20, #0x0                   	// #0
   46730:	b	46640 <mpfr_atan2@@Base+0x230>
   46734:	ldr	w0, [x20, #8]
   46738:	tbnz	w0, #31, 466a8 <mpfr_atan2@@Base+0x298>
   4673c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   46740:	str	x0, [x19, #16]
   46744:	ldr	w0, [x21, #8]
   46748:	str	w0, [x19, #8]
   4674c:	mov	w20, #0x0                   	// #0
   46750:	b	46640 <mpfr_atan2@@Base+0x230>
   46754:	mov	w23, #0x3                   	// #3
   46758:	b	466c4 <mpfr_atan2@@Base+0x2b4>
   4675c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46760:	ldr	x1, [x0, #2624]
   46764:	add	x0, x0, #0xa40
   46768:	blr	x1
   4676c:	mov	w2, w23
   46770:	mrs	x1, tpidr_el0
   46774:	add	x1, x1, x0
   46778:	mov	x0, x19
   4677c:	bl	c380 <mpfr_cache@plt>
   46780:	mov	w20, w0
   46784:	b	46640 <mpfr_atan2@@Base+0x230>
   46788:	ldr	w2, [x21, #8]
   4678c:	mov	w3, w23
   46790:	lsr	w2, w2, #31
   46794:	mov	w1, #0x1                   	// #1
   46798:	mov	x0, x19
   4679c:	bl	46268 <mpfr_erfc@@Base+0xa80>
   467a0:	mov	w20, w0
   467a4:	b	46640 <mpfr_atan2@@Base+0x230>
   467a8:	cmp	x0, x2
   467ac:	b.ne	46850 <mpfr_atan2@@Base+0x440>  // b.any
   467b0:	ldr	w0, [x20, #8]
   467b4:	cmp	w0, #0x0
   467b8:	b.gt	46870 <mpfr_atan2@@Base+0x460>
   467bc:	stp	x25, x26, [sp, #64]
   467c0:	stp	x27, x28, [sp, #80]
   467c4:	ldr	x22, [x19]
   467c8:	add	x22, x22, #0xa
   467cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   467d0:	ldr	x1, [x0, #2576]
   467d4:	add	x0, x0, #0xa10
   467d8:	blr	x1
   467dc:	mrs	x1, tpidr_el0
   467e0:	ldr	w0, [x1, x0]
   467e4:	str	w0, [sp, #100]
   467e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   467ec:	ldr	x2, [x0, #2512]
   467f0:	add	x0, x0, #0x9d0
   467f4:	blr	x2
   467f8:	add	x2, x1, x0
   467fc:	ldr	x0, [x1, x0]
   46800:	str	x0, [sp, #104]
   46804:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46808:	ldr	x3, [x0, #2544]
   4680c:	add	x0, x0, #0x9f0
   46810:	blr	x3
   46814:	ldr	x28, [x1, x0]
   46818:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4681c:	str	x3, [x2]
   46820:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   46824:	str	x2, [x1, x0]
   46828:	mov	x1, x22
   4682c:	add	x0, sp, #0x70
   46830:	bl	ca80 <mpfr_init2@plt>
   46834:	mov	x24, #0x40                  	// #64
   46838:	mrs	x26, tpidr_el0
   4683c:	add	x20, sp, #0x70
   46840:	mov	x25, #0x3                   	// #3
   46844:	mov	x27, #0xfffffffffffffeff    	// #-257
   46848:	movk	x27, #0x7fff, lsl #48
   4684c:	b	468b4 <mpfr_atan2@@Base+0x4a4>
   46850:	ldr	w2, [x21, #8]
   46854:	mov	w3, w23
   46858:	lsr	w2, w2, #31
   4685c:	mov	w1, #0x1                   	// #1
   46860:	mov	x0, x19
   46864:	bl	46268 <mpfr_erfc@@Base+0xa80>
   46868:	mov	w20, w0
   4686c:	b	46640 <mpfr_atan2@@Base+0x230>
   46870:	ldr	w2, [x21, #8]
   46874:	mov	w3, w23
   46878:	lsr	w2, w2, #31
   4687c:	mov	w1, #0x2                   	// #2
   46880:	mov	x0, x19
   46884:	bl	46268 <mpfr_erfc@@Base+0xa80>
   46888:	mov	w20, w0
   4688c:	b	46640 <mpfr_atan2@@Base+0x230>
   46890:	sub	x0, x27, x22
   46894:	cmp	x0, x24
   46898:	b.lt	469f0 <mpfr_atan2@@Base+0x5e0>  // b.tstop
   4689c:	add	x22, x22, x24
   468a0:	add	x24, x22, x22, lsr #63
   468a4:	asr	x24, x24, #1
   468a8:	mov	x1, x22
   468ac:	mov	x0, x20
   468b0:	bl	bed0 <mpfr_set_prec@plt>
   468b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   468b8:	ldr	x1, [x0, #2624]
   468bc:	add	x0, x0, #0xa40
   468c0:	blr	x1
   468c4:	mov	w2, #0x0                   	// #0
   468c8:	add	x1, x26, x0
   468cc:	mov	x0, x20
   468d0:	bl	c380 <mpfr_cache@plt>
   468d4:	mov	w3, #0x0                   	// #0
   468d8:	mov	x2, x25
   468dc:	mov	x1, x20
   468e0:	mov	x0, x20
   468e4:	bl	ba50 <mpfr_mul_ui@plt>
   468e8:	mov	w3, #0x0                   	// #0
   468ec:	mov	x2, #0x2                   	// #2
   468f0:	mov	x1, x20
   468f4:	mov	x0, x20
   468f8:	bl	c8f0 <mpfr_div_2ui@plt>
   468fc:	ldr	x1, [sp, #128]
   46900:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46904:	cmp	x1, x0
   46908:	b.le	46890 <mpfr_atan2@@Base+0x480>
   4690c:	ldr	x2, [sp, #112]
   46910:	cmp	w23, #0x0
   46914:	ldr	x3, [x19]
   46918:	cinc	x3, x3, eq  // eq = none
   4691c:	add	x1, x2, #0x3e
   46920:	subs	x0, x2, #0x1
   46924:	csel	x1, x1, x0, mi  // mi = first
   46928:	asr	x1, x1, #6
   4692c:	sub	x2, x2, #0x2
   46930:	add	x1, x1, #0x1
   46934:	ldr	x0, [sp, #136]
   46938:	bl	c370 <mpfr_round_p@plt>
   4693c:	cbz	w0, 46890 <mpfr_atan2@@Base+0x480>
   46940:	ldr	w0, [x21, #8]
   46944:	tbnz	w0, #31, 46a08 <mpfr_atan2@@Base+0x5f8>
   46948:	add	x21, sp, #0x70
   4694c:	ldr	w3, [sp, #120]
   46950:	mov	w2, w23
   46954:	mov	x1, x21
   46958:	mov	x0, x19
   4695c:	bl	c6a0 <mpfr_set4@plt>
   46960:	mov	w20, w0
   46964:	mov	x0, x21
   46968:	bl	c070 <mpfr_clear@plt>
   4696c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46970:	ldr	x1, [x0, #2576]
   46974:	add	x0, x0, #0xa10
   46978:	blr	x1
   4697c:	mrs	x1, tpidr_el0
   46980:	ldr	w3, [sp, #100]
   46984:	str	w3, [x1, x0]
   46988:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4698c:	ldr	x2, [x0, #2512]
   46990:	add	x0, x0, #0x9d0
   46994:	blr	x2
   46998:	ldr	x2, [sp, #104]
   4699c:	str	x2, [x1, x0]
   469a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   469a4:	ldr	x4, [x0, #2544]
   469a8:	add	x0, x0, #0x9f0
   469ac:	blr	x4
   469b0:	str	x28, [x1, x0]
   469b4:	ldr	x0, [x19, #16]
   469b8:	cmp	x28, x0
   469bc:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   469c0:	b.gt	46a18 <mpfr_atan2@@Base+0x608>
   469c4:	cbz	w20, 46db4 <mpfr_atan2@@Base+0x9a4>
   469c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   469cc:	ldr	x1, [x0, #2576]
   469d0:	add	x0, x0, #0xa10
   469d4:	blr	x1
   469d8:	orr	w1, w3, #0x8
   469dc:	mrs	x2, tpidr_el0
   469e0:	str	w1, [x2, x0]
   469e4:	ldp	x25, x26, [sp, #64]
   469e8:	ldp	x27, x28, [sp, #80]
   469ec:	b	46640 <mpfr_atan2@@Base+0x230>
   469f0:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   469f4:	add	x2, x2, #0x5b0
   469f8:	mov	w1, #0x88                  	// #136
   469fc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   46a00:	add	x0, x0, #0x5f8
   46a04:	bl	cb40 <mpfr_assert_fail@plt>
   46a08:	ldr	w0, [sp, #120]
   46a0c:	neg	w0, w0
   46a10:	str	w0, [sp, #120]
   46a14:	b	46948 <mpfr_atan2@@Base+0x538>
   46a18:	mov	w2, w23
   46a1c:	mov	w1, w20
   46a20:	mov	x0, x19
   46a24:	bl	cb30 <mpfr_check_range@plt>
   46a28:	mov	w20, w0
   46a2c:	ldp	x25, x26, [sp, #64]
   46a30:	ldp	x27, x28, [sp, #80]
   46a34:	b	46640 <mpfr_atan2@@Base+0x230>
   46a38:	mov	x0, x20
   46a3c:	bl	bf00 <mpfr_powerof2_raw@plt>
   46a40:	cbnz	w0, 46a50 <mpfr_atan2@@Base+0x640>
   46a44:	stp	x25, x26, [sp, #64]
   46a48:	stp	x27, x28, [sp, #80]
   46a4c:	b	46464 <mpfr_atan2@@Base+0x54>
   46a50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46a54:	ldr	x1, [x0, #2576]
   46a58:	add	x0, x0, #0xa10
   46a5c:	blr	x1
   46a60:	mrs	x1, tpidr_el0
   46a64:	ldr	w24, [x1, x0]
   46a68:	add	x22, sp, #0x70
   46a6c:	ldr	x1, [x21]
   46a70:	mov	x0, x22
   46a74:	bl	ca80 <mpfr_init2@plt>
   46a78:	ldr	x2, [x20, #16]
   46a7c:	mov	w3, #0x0                   	// #0
   46a80:	sub	x2, x2, #0x1
   46a84:	mov	x1, x21
   46a88:	mov	x0, x22
   46a8c:	bl	c420 <mpfr_div_2si@plt>
   46a90:	cbnz	w0, 46ab8 <mpfr_atan2@@Base+0x6a8>
   46a94:	add	x21, sp, #0x70
   46a98:	mov	w2, w23
   46a9c:	mov	x1, x21
   46aa0:	mov	x0, x19
   46aa4:	bl	c690 <mpfr_atan@plt>
   46aa8:	mov	w20, w0
   46aac:	mov	x0, x21
   46ab0:	bl	c070 <mpfr_clear@plt>
   46ab4:	b	46640 <mpfr_atan2@@Base+0x230>
   46ab8:	stp	x25, x26, [sp, #64]
   46abc:	stp	x27, x28, [sp, #80]
   46ac0:	add	x0, sp, #0x70
   46ac4:	bl	c070 <mpfr_clear@plt>
   46ac8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46acc:	ldr	x1, [x0, #2576]
   46ad0:	add	x0, x0, #0xa10
   46ad4:	blr	x1
   46ad8:	mrs	x1, tpidr_el0
   46adc:	str	w24, [x1, x0]
   46ae0:	b	46464 <mpfr_atan2@@Base+0x54>
   46ae4:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   46ae8:	add	x2, x2, #0x600
   46aec:	mov	w1, #0xb7                  	// #183
   46af0:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   46af4:	add	x0, x0, #0x5f8
   46af8:	bl	cb40 <mpfr_assert_fail@plt>
   46afc:	b	464d4 <mpfr_atan2@@Base+0xc4>
   46b00:	mov	x0, #0x0                   	// #0
   46b04:	b	464ec <mpfr_atan2@@Base+0xdc>
   46b08:	mov	w2, w23
   46b0c:	add	x1, sp, #0xb0
   46b10:	mov	x0, x19
   46b14:	bl	c690 <mpfr_atan@plt>
   46b18:	mov	w20, w0
   46b1c:	b	465bc <mpfr_atan2@@Base+0x1ac>
   46b20:	cbnz	w23, 46b34 <mpfr_atan2@@Base+0x724>
   46b24:	ldr	x1, [sp, #192]
   46b28:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   46b2c:	cmp	x1, x0
   46b30:	cset	w23, eq  // eq = none
   46b34:	ldr	w20, [sp, #184]
   46b38:	add	x0, sp, #0xb0
   46b3c:	bl	c070 <mpfr_clear@plt>
   46b40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46b44:	ldr	x1, [x0, #2576]
   46b48:	add	x0, x0, #0xa10
   46b4c:	blr	x1
   46b50:	mrs	x1, tpidr_el0
   46b54:	ldr	w2, [sp, #100]
   46b58:	str	w2, [x1, x0]
   46b5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46b60:	ldr	x2, [x0, #2512]
   46b64:	add	x0, x0, #0x9d0
   46b68:	blr	x2
   46b6c:	str	x25, [x1, x0]
   46b70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46b74:	ldr	x2, [x0, #2544]
   46b78:	add	x0, x0, #0x9f0
   46b7c:	blr	x2
   46b80:	str	x26, [x1, x0]
   46b84:	mov	w2, w20
   46b88:	mov	w1, w23
   46b8c:	mov	x0, x19
   46b90:	bl	c3c0 <mpfr_underflow@plt>
   46b94:	mov	w20, w0
   46b98:	ldp	x25, x26, [sp, #64]
   46b9c:	ldp	x27, x28, [sp, #80]
   46ba0:	b	46640 <mpfr_atan2@@Base+0x230>
   46ba4:	mov	x0, #0xfffffffffffffeff    	// #-257
   46ba8:	movk	x0, #0x7fff, lsl #48
   46bac:	sub	x0, x0, x22
   46bb0:	ldr	x1, [sp, #104]
   46bb4:	cmp	x0, x1
   46bb8:	b.lt	46be0 <mpfr_atan2@@Base+0x7d0>  // b.tstop
   46bbc:	ldr	x0, [sp, #104]
   46bc0:	add	x22, x22, x0
   46bc4:	add	x0, x22, x22, lsr #63
   46bc8:	asr	x0, x0, #1
   46bcc:	str	x0, [sp, #104]
   46bd0:	mov	x1, x22
   46bd4:	mov	x0, x24
   46bd8:	bl	bed0 <mpfr_set_prec@plt>
   46bdc:	b	46518 <mpfr_atan2@@Base+0x108>
   46be0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   46be4:	add	x2, x2, #0xd68
   46be8:	mov	w1, #0xef                  	// #239
   46bec:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   46bf0:	add	x0, x0, #0x5f8
   46bf4:	bl	cb40 <mpfr_assert_fail@plt>
   46bf8:	mov	x1, x22
   46bfc:	add	x0, sp, #0x90
   46c00:	bl	ca80 <mpfr_init2@plt>
   46c04:	mov	x0, #0x40                  	// #64
   46c08:	str	x0, [sp, #104]
   46c0c:	add	x27, sp, #0xb0
   46c10:	add	x28, sp, #0x90
   46c14:	mov	w3, #0x0                   	// #0
   46c18:	mov	x2, x20
   46c1c:	mov	x1, x21
   46c20:	mov	x0, x27
   46c24:	bl	c620 <mpfr_div@plt>
   46c28:	mov	w0, #0x1                   	// #1
   46c2c:	str	w0, [sp, #184]
   46c30:	mov	w2, #0x0                   	// #0
   46c34:	mov	x1, x27
   46c38:	mov	x0, x27
   46c3c:	bl	c690 <mpfr_atan@plt>
   46c40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46c44:	ldr	x1, [x0, #2624]
   46c48:	add	x0, x0, #0xa40
   46c4c:	blr	x1
   46c50:	mov	w2, #0x0                   	// #0
   46c54:	mrs	x1, tpidr_el0
   46c58:	add	x1, x1, x0
   46c5c:	mov	x0, x28
   46c60:	bl	c380 <mpfr_cache@plt>
   46c64:	ldr	x24, [sp, #192]
   46c68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   46c6c:	cmp	x24, x0
   46c70:	b.eq	46d04 <mpfr_atan2@@Base+0x8f4>  // b.none
   46c74:	mov	w3, #0x0                   	// #0
   46c78:	mov	x2, x27
   46c7c:	mov	x1, x28
   46c80:	mov	x0, x27
   46c84:	bl	bb70 <mpfr_sub@plt>
   46c88:	ldr	w0, [x21, #8]
   46c8c:	tbnz	w0, #31, 46d24 <mpfr_atan2@@Base+0x914>
   46c90:	ldr	x0, [sp, #192]
   46c94:	ldr	x2, [sp, #160]
   46c98:	sub	x2, x2, x0
   46c9c:	subs	x2, x2, #0x1
   46ca0:	csinv	x2, x2, xzr, pl  // pl = nfrst
   46ca4:	sub	x24, x24, x0
   46ca8:	add	x24, x24, #0x1
   46cac:	cmp	x2, x24
   46cb0:	csel	x2, x2, x24, ge  // ge = tcont
   46cb4:	add	x2, x2, #0x2
   46cb8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   46cbc:	cmp	x0, x1
   46cc0:	b.le	46d34 <mpfr_atan2@@Base+0x924>
   46cc4:	cmp	w23, #0x0
   46cc8:	ldr	x3, [x19]
   46ccc:	cinc	x3, x3, eq  // eq = none
   46cd0:	ldr	x0, [sp, #176]
   46cd4:	add	x1, x0, #0x3e
   46cd8:	subs	x0, x0, #0x1
   46cdc:	csel	x1, x1, x0, mi  // mi = first
   46ce0:	asr	x1, x1, #6
   46ce4:	sub	x2, x22, x2
   46ce8:	add	x1, x1, #0x1
   46cec:	ldr	x0, [sp, #200]
   46cf0:	bl	c370 <mpfr_round_p@plt>
   46cf4:	cbz	w0, 46d34 <mpfr_atan2@@Base+0x924>
   46cf8:	add	x0, sp, #0x90
   46cfc:	bl	c070 <mpfr_clear@plt>
   46d00:	b	465a4 <mpfr_atan2@@Base+0x194>
   46d04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46d08:	ldr	x1, [x0, #2512]
   46d0c:	add	x0, x0, #0x9d0
   46d10:	blr	x1
   46d14:	mrs	x1, tpidr_el0
   46d18:	ldr	x24, [x1, x0]
   46d1c:	sub	x24, x24, #0x1
   46d20:	b	46c74 <mpfr_atan2@@Base+0x864>
   46d24:	ldr	w0, [sp, #184]
   46d28:	neg	w0, w0
   46d2c:	str	w0, [sp, #184]
   46d30:	b	46c90 <mpfr_atan2@@Base+0x880>
   46d34:	mov	x0, #0xfffffffffffffeff    	// #-257
   46d38:	movk	x0, #0x7fff, lsl #48
   46d3c:	sub	x0, x0, x22
   46d40:	ldr	x1, [sp, #104]
   46d44:	cmp	x0, x1
   46d48:	b.lt	46d7c <mpfr_atan2@@Base+0x96c>  // b.tstop
   46d4c:	ldr	x0, [sp, #104]
   46d50:	add	x22, x22, x0
   46d54:	add	x0, x22, x22, lsr #63
   46d58:	asr	x0, x0, #1
   46d5c:	str	x0, [sp, #104]
   46d60:	mov	x1, x22
   46d64:	mov	x0, x27
   46d68:	bl	bed0 <mpfr_set_prec@plt>
   46d6c:	mov	x1, x22
   46d70:	mov	x0, x28
   46d74:	bl	bed0 <mpfr_set_prec@plt>
   46d78:	b	46c14 <mpfr_atan2@@Base+0x804>
   46d7c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   46d80:	add	x2, x2, #0xd68
   46d84:	mov	w1, #0x10b                 	// #267
   46d88:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   46d8c:	add	x0, x0, #0x5f8
   46d90:	bl	cb40 <mpfr_assert_fail@plt>
   46d94:	mov	w2, w23
   46d98:	mov	w1, w20
   46d9c:	mov	x0, x19
   46da0:	bl	cb30 <mpfr_check_range@plt>
   46da4:	mov	w20, w0
   46da8:	ldp	x25, x26, [sp, #64]
   46dac:	ldp	x27, x28, [sp, #80]
   46db0:	b	46640 <mpfr_atan2@@Base+0x230>
   46db4:	ldp	x25, x26, [sp, #64]
   46db8:	ldp	x27, x28, [sp, #80]
   46dbc:	b	46640 <mpfr_atan2@@Base+0x230>
   46dc0:	ldp	x25, x26, [sp, #64]
   46dc4:	ldp	x27, x28, [sp, #80]
   46dc8:	b	46640 <mpfr_atan2@@Base+0x230>

0000000000046dcc <mpfr_subnormalize@@Base>:
   46dcc:	stp	x29, x30, [sp, #-96]!
   46dd0:	mov	x29, sp
   46dd4:	stp	x19, x20, [sp, #16]
   46dd8:	mov	x20, x0
   46ddc:	mov	w19, w1
   46de0:	ldr	x1, [x0, #16]
   46de4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46de8:	cmp	x1, x0
   46dec:	b.gt	46e28 <mpfr_subnormalize@@Base+0x5c>
   46df0:	cbz	w19, 46e18 <mpfr_subnormalize@@Base+0x4c>
   46df4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46df8:	ldr	x1, [x0, #2576]
   46dfc:	add	x0, x0, #0xa10
   46e00:	blr	x1
   46e04:	mrs	x1, tpidr_el0
   46e08:	add	x0, x1, x0
   46e0c:	ldr	w1, [x0]
   46e10:	orr	w1, w1, #0x8
   46e14:	str	w1, [x0]
   46e18:	mov	w0, w19
   46e1c:	ldp	x19, x20, [sp, #16]
   46e20:	ldp	x29, x30, [sp], #96
   46e24:	ret
   46e28:	stp	x21, x22, [sp, #32]
   46e2c:	mov	w21, w2
   46e30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46e34:	ldr	x2, [x0, #2512]
   46e38:	add	x0, x0, #0x9d0
   46e3c:	blr	x2
   46e40:	mrs	x2, tpidr_el0
   46e44:	ldr	x2, [x2, x0]
   46e48:	ldr	x0, [x20]
   46e4c:	add	x0, x2, x0
   46e50:	sub	x0, x0, #0x1
   46e54:	cmp	x1, x0
   46e58:	b.lt	46e64 <mpfr_subnormalize@@Base+0x98>  // b.tstop
   46e5c:	ldp	x21, x22, [sp, #32]
   46e60:	b	46df0 <mpfr_subnormalize@@Base+0x24>
   46e64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46e68:	ldr	x3, [x0, #2576]
   46e6c:	add	x0, x0, #0xa10
   46e70:	blr	x3
   46e74:	mrs	x3, tpidr_el0
   46e78:	add	x0, x3, x0
   46e7c:	ldr	w3, [x0]
   46e80:	orr	w3, w3, #0x1
   46e84:	str	w3, [x0]
   46e88:	ldr	w22, [x20, #8]
   46e8c:	cmp	x1, x2
   46e90:	b.eq	47024 <mpfr_subnormalize@@Base+0x258>  // b.none
   46e94:	stp	x23, x24, [sp, #48]
   46e98:	sub	x1, x1, x2
   46e9c:	add	x1, x1, #0x1
   46ea0:	add	x0, sp, #0x40
   46ea4:	bl	ca80 <mpfr_init2@plt>
   46ea8:	ldr	x0, [x20, #16]
   46eac:	str	x0, [sp, #80]
   46eb0:	str	w22, [sp, #72]
   46eb4:	ldr	x2, [x20]
   46eb8:	ldr	x1, [sp, #64]
   46ebc:	ldr	x23, [sp, #88]
   46ec0:	cmp	x2, x1
   46ec4:	b.le	471ac <mpfr_subnormalize@@Base+0x3e0>
   46ec8:	add	x0, x2, #0x3e
   46ecc:	subs	x2, x2, #0x1
   46ed0:	csel	x0, x0, x2, mi  // mi = first
   46ed4:	asr	x0, x0, #6
   46ed8:	add	x5, x1, #0x3e
   46edc:	subs	x2, x1, #0x1
   46ee0:	csel	x5, x5, x2, mi  // mi = first
   46ee4:	asr	x5, x5, #6
   46ee8:	add	x2, x5, #0x1
   46eec:	neg	w3, w1
   46ef0:	sub	x9, x0, x5
   46ef4:	lsl	x10, x9, #3
   46ef8:	ldr	x7, [x20, #24]
   46efc:	add	x1, x7, x10
   46f00:	ands	w3, w3, #0x3f
   46f04:	b.eq	471fc <mpfr_subnormalize@@Base+0x430>  // b.none
   46f08:	sub	w4, w3, #0x1
   46f0c:	mov	x3, #0x1                   	// #1
   46f10:	lsl	x3, x3, x4
   46f14:	ldr	x6, [x7, x9, lsl #3]
   46f18:	and	x8, x6, x3
   46f1c:	sub	x3, x3, #0x1
   46f20:	and	x3, x3, x6
   46f24:	cmp	w21, #0x0
   46f28:	ccmp	x8, #0x0, #0x4, ne  // ne = any
   46f2c:	b.ne	46f58 <mpfr_subnormalize@@Base+0x18c>  // b.any
   46f30:	mov	x0, x9
   46f34:	cmp	x3, #0x0
   46f38:	ccmp	x9, #0x0, #0x4, eq  // eq = none
   46f3c:	b.eq	46f58 <mpfr_subnormalize@@Base+0x18c>  // b.none
   46f40:	mvn	x6, x9
   46f44:	add	x6, x1, x6, lsl #3
   46f48:	ldr	x3, [x6, x0, lsl #3]
   46f4c:	subs	x0, x0, #0x1
   46f50:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   46f54:	b.eq	46f48 <mpfr_subnormalize@@Base+0x17c>  // b.none
   46f58:	mov	x24, #0x2                   	// #2
   46f5c:	lsl	x24, x24, x4
   46f60:	cmp	w21, #0x5
   46f64:	b.eq	47250 <mpfr_subnormalize@@Base+0x484>  // b.none
   46f68:	cbnz	w21, 473a8 <mpfr_subnormalize@@Base+0x5dc>
   46f6c:	cbnz	x8, 4726c <mpfr_subnormalize@@Base+0x4a0>
   46f70:	orr	x3, x8, x3
   46f74:	cmp	x3, #0x0
   46f78:	csneg	w22, wzr, w22, eq  // eq = none
   46f7c:	cmp	x23, x1
   46f80:	b.eq	46f90 <mpfr_subnormalize@@Base+0x1c4>  // b.none
   46f84:	lsl	x2, x2, #3
   46f88:	mov	x0, x23
   46f8c:	bl	ba10 <memcpy@plt>
   46f90:	neg	x4, x24
   46f94:	ldr	x0, [x23]
   46f98:	and	x0, x0, x4
   46f9c:	str	x0, [x23]
   46fa0:	cbz	w19, 46fbc <mpfr_subnormalize@@Base+0x1f0>
   46fa4:	add	w0, w22, #0x2
   46fa8:	and	w0, w0, #0xfffffffb
   46fac:	orr	w0, w0, w21
   46fb0:	cbz	w0, 472e4 <mpfr_subnormalize@@Base+0x518>
   46fb4:	cmp	w22, #0x0
   46fb8:	csel	w22, w22, w19, ne  // ne = any
   46fbc:	ldr	w3, [sp, #72]
   46fc0:	mov	w2, w21
   46fc4:	add	x1, sp, #0x40
   46fc8:	mov	x0, x20
   46fcc:	bl	c6a0 <mpfr_set4@plt>
   46fd0:	cbnz	w0, 4732c <mpfr_subnormalize@@Base+0x560>
   46fd4:	ldr	x1, [x20, #16]
   46fd8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46fdc:	cmp	x1, x0
   46fe0:	b.le	47344 <mpfr_subnormalize@@Base+0x578>
   46fe4:	add	x0, sp, #0x40
   46fe8:	bl	c070 <mpfr_clear@plt>
   46fec:	cbz	w22, 47014 <mpfr_subnormalize@@Base+0x248>
   46ff0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   46ff4:	ldr	x1, [x0, #2576]
   46ff8:	add	x0, x0, #0xa10
   46ffc:	blr	x1
   47000:	mrs	x1, tpidr_el0
   47004:	add	x0, x1, x0
   47008:	ldr	w1, [x0]
   4700c:	orr	w1, w1, #0x8
   47010:	str	w1, [x0]
   47014:	mov	w19, w22
   47018:	ldp	x21, x22, [sp, #32]
   4701c:	ldp	x23, x24, [sp, #48]
   47020:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   47024:	mov	x0, x20
   47028:	bl	bf00 <mpfr_powerof2_raw@plt>
   4702c:	cbnz	w0, 470dc <mpfr_subnormalize@@Base+0x310>
   47030:	cbnz	w21, 4710c <mpfr_subnormalize@@Base+0x340>
   47034:	ldr	x1, [x20]
   47038:	sub	x1, x1, #0x1
   4703c:	mov	x0, #0x40                  	// #64
   47040:	sdiv	x1, x1, x0
   47044:	ldr	x2, [x20, #24]
   47048:	ldr	x0, [x2, x1, lsl #3]
   4704c:	tbz	x0, #62, 4717c <mpfr_subnormalize@@Base+0x3b0>
   47050:	tst	x0, #0x3fffffffffffffff
   47054:	b.ne	47124 <mpfr_subnormalize@@Base+0x358>  // b.any
   47058:	sub	x0, x1, #0x1
   4705c:	cbz	x1, 47074 <mpfr_subnormalize@@Base+0x2a8>
   47060:	ldr	x1, [x2, x0, lsl #3]
   47064:	cbnz	x1, 47124 <mpfr_subnormalize@@Base+0x358>
   47068:	sub	x0, x0, #0x1
   4706c:	cmn	x0, #0x1
   47070:	b.ne	47060 <mpfr_subnormalize@@Base+0x294>  // b.any
   47074:	cmp	w19, #0x0
   47078:	ccmp	w22, #0x0, #0x4, gt
   4707c:	b.gt	4708c <mpfr_subnormalize@@Base+0x2c0>
   47080:	cmp	w19, #0x0
   47084:	ccmp	w22, #0x0, #0x0, lt  // lt = tstop
   47088:	b.ge	47124 <mpfr_subnormalize@@Base+0x358>  // b.tcont
   4708c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47090:	ldr	x1, [x0, #2512]
   47094:	add	x0, x0, #0x9d0
   47098:	blr	x1
   4709c:	mrs	x1, tpidr_el0
   470a0:	ldr	x1, [x1, x0]
   470a4:	mov	x0, x20
   470a8:	bl	c2b0 <mpfr_setmin@plt>
   470ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   470b0:	ldr	x1, [x0, #2576]
   470b4:	add	x0, x0, #0xa10
   470b8:	blr	x1
   470bc:	mrs	x1, tpidr_el0
   470c0:	add	x0, x1, x0
   470c4:	ldr	w1, [x0]
   470c8:	orr	w1, w1, #0x8
   470cc:	str	w1, [x0]
   470d0:	neg	w19, w22
   470d4:	ldp	x21, x22, [sp, #32]
   470d8:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   470dc:	cbz	w19, 47418 <mpfr_subnormalize@@Base+0x64c>
   470e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   470e4:	ldr	x1, [x0, #2576]
   470e8:	add	x0, x0, #0xa10
   470ec:	blr	x1
   470f0:	mrs	x1, tpidr_el0
   470f4:	add	x0, x1, x0
   470f8:	ldr	w1, [x0]
   470fc:	orr	w1, w1, #0x8
   47100:	str	w1, [x0]
   47104:	ldp	x21, x22, [sp, #32]
   47108:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   4710c:	cmp	w21, #0x1
   47110:	b.eq	4717c <mpfr_subnormalize@@Base+0x3b0>  // b.none
   47114:	ldr	w2, [x20, #8]
   47118:	add	w2, w21, w2, lsr #31
   4711c:	cmp	w2, #0x3
   47120:	b.eq	4717c <mpfr_subnormalize@@Base+0x3b0>  // b.none
   47124:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47128:	ldr	x1, [x0, #2512]
   4712c:	add	x0, x0, #0x9d0
   47130:	blr	x1
   47134:	mrs	x1, tpidr_el0
   47138:	ldr	x1, [x1, x0]
   4713c:	add	x1, x1, #0x1
   47140:	mov	x0, x20
   47144:	bl	c2b0 <mpfr_setmin@plt>
   47148:	cbz	w22, 47360 <mpfr_subnormalize@@Base+0x594>
   4714c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47150:	ldr	x1, [x0, #2576]
   47154:	add	x0, x0, #0xa10
   47158:	blr	x1
   4715c:	mrs	x1, tpidr_el0
   47160:	add	x0, x1, x0
   47164:	ldr	w1, [x0]
   47168:	orr	w1, w1, #0x8
   4716c:	str	w1, [x0]
   47170:	mov	w19, w22
   47174:	ldp	x21, x22, [sp, #32]
   47178:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   4717c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47180:	ldr	x1, [x0, #2512]
   47184:	add	x0, x0, #0x9d0
   47188:	blr	x1
   4718c:	mrs	x1, tpidr_el0
   47190:	ldr	x1, [x1, x0]
   47194:	mov	x0, x20
   47198:	bl	c2b0 <mpfr_setmin@plt>
   4719c:	cbnz	w22, 470ac <mpfr_subnormalize@@Base+0x2e0>
   471a0:	mov	w19, w22
   471a4:	ldp	x21, x22, [sp, #32]
   471a8:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   471ac:	sub	x0, x2, #0x1
   471b0:	mov	x4, #0x40                  	// #64
   471b4:	sdiv	x3, x0, x4
   471b8:	add	x2, x3, #0x1
   471bc:	sub	x0, x1, #0x1
   471c0:	sdiv	x0, x0, x4
   471c4:	sub	x0, x0, x3
   471c8:	lsl	x22, x0, #3
   471cc:	add	x0, x23, x0, lsl #3
   471d0:	ldr	x1, [x20, #24]
   471d4:	cmp	x0, x1
   471d8:	b.eq	471e4 <mpfr_subnormalize@@Base+0x418>  // b.none
   471dc:	lsl	x2, x2, #3
   471e0:	bl	ba10 <memcpy@plt>
   471e4:	mov	x2, x22
   471e8:	mov	w1, #0x0                   	// #0
   471ec:	mov	x0, x23
   471f0:	bl	c110 <memset@plt>
   471f4:	mov	w22, #0x0                   	// #0
   471f8:	b	46fa0 <mpfr_subnormalize@@Base+0x1d4>
   471fc:	ldur	x4, [x1, #-8]
   47200:	and	x8, x4, #0x8000000000000000
   47204:	and	x3, x4, #0x7fffffffffffffff
   47208:	cmp	w21, #0x0
   4720c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   47210:	b.lt	4739c <mpfr_subnormalize@@Base+0x5d0>  // b.tstop
   47214:	sub	x0, x0, x5
   47218:	subs	x4, x0, #0x1
   4721c:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   47220:	b.ne	47248 <mpfr_subnormalize@@Base+0x47c>  // b.any
   47224:	mov	x3, #0xfffffffffffffff8    	// #-8
   47228:	madd	x0, x0, x3, x3
   4722c:	add	x0, x1, x0
   47230:	ldr	x3, [x0, x4, lsl #3]
   47234:	subs	x4, x4, #0x1
   47238:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4723c:	b.eq	47230 <mpfr_subnormalize@@Base+0x464>  // b.none
   47240:	mov	x24, #0x1                   	// #1
   47244:	b	46f60 <mpfr_subnormalize@@Base+0x194>
   47248:	mov	x24, #0x1                   	// #1
   4724c:	b	46f60 <mpfr_subnormalize@@Base+0x194>
   47250:	mov	w22, #0x0                   	// #0
   47254:	b	46f7c <mpfr_subnormalize@@Base+0x1b0>
   47258:	mov	w22, #0x0                   	// #0
   4725c:	b	46f7c <mpfr_subnormalize@@Base+0x1b0>
   47260:	mov	x24, #0x1                   	// #1
   47264:	mov	w22, #0x0                   	// #0
   47268:	b	46f7c <mpfr_subnormalize@@Base+0x1b0>
   4726c:	cbnz	x3, 473c4 <mpfr_subnormalize@@Base+0x5f8>
   47270:	ldr	x0, [x7, x10]
   47274:	tst	x24, x0
   47278:	b.ne	47288 <mpfr_subnormalize@@Base+0x4bc>  // b.any
   4727c:	mov	w0, #0xfffffffe            	// #-2
   47280:	mul	w22, w22, w0
   47284:	b	46f7c <mpfr_subnormalize@@Base+0x1b0>
   47288:	lsl	w22, w22, #1
   4728c:	b	473c4 <mpfr_subnormalize@@Base+0x5f8>
   47290:	cmp	x23, x1
   47294:	b.eq	47404 <mpfr_subnormalize@@Base+0x638>  // b.none
   47298:	cmp	x5, x0
   4729c:	b.le	47404 <mpfr_subnormalize@@Base+0x638>
   472a0:	ldr	x2, [x1, x4, lsl #3]
   472a4:	str	x2, [x23, x4, lsl #3]
   472a8:	cmp	x5, x4
   472ac:	add	x4, x4, #0x1
   472b0:	b.gt	472a0 <mpfr_subnormalize@@Base+0x4d4>
   472b4:	b	47404 <mpfr_subnormalize@@Base+0x638>
   472b8:	add	x6, x5, #0x1
   472bc:	mov	x0, #0x1                   	// #1
   472c0:	cmp	x6, x0
   472c4:	b.eq	47380 <mpfr_subnormalize@@Base+0x5b4>  // b.none
   472c8:	ldr	x3, [x1, x0, lsl #3]
   472cc:	add	x3, x3, #0x1
   472d0:	str	x3, [x23, x0, lsl #3]
   472d4:	add	x4, x0, #0x1
   472d8:	cbnz	x3, 47290 <mpfr_subnormalize@@Base+0x4c4>
   472dc:	mov	x0, x4
   472e0:	b	472c0 <mpfr_subnormalize@@Base+0x4f4>
   472e4:	tbnz	w22, #31, 4736c <mpfr_subnormalize@@Base+0x5a0>
   472e8:	tbnz	w19, #31, 46fbc <mpfr_subnormalize@@Base+0x1f0>
   472ec:	cmp	w22, #0x0
   472f0:	b.le	46fbc <mpfr_subnormalize@@Base+0x1f0>
   472f4:	ldr	w0, [x20, #8]
   472f8:	tbnz	w0, #31, 47310 <mpfr_subnormalize@@Base+0x544>
   472fc:	mov	w1, #0x1                   	// #1
   47300:	cmp	w0, #0x0
   47304:	cset	w0, gt
   47308:	cmp	w0, w1
   4730c:	b.eq	47320 <mpfr_subnormalize@@Base+0x554>  // b.none
   47310:	add	x0, sp, #0x40
   47314:	bl	c670 <mpfr_nexttoinf@plt>
   47318:	neg	w22, w22
   4731c:	b	46fbc <mpfr_subnormalize@@Base+0x1f0>
   47320:	add	x0, sp, #0x40
   47324:	bl	c460 <mpfr_nexttozero@plt>
   47328:	b	47318 <mpfr_subnormalize@@Base+0x54c>
   4732c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   47330:	add	x2, x2, #0x808
   47334:	mov	w1, #0xa0                  	// #160
   47338:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4733c:	add	x0, x0, #0x620
   47340:	bl	cb40 <mpfr_assert_fail@plt>
   47344:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   47348:	add	x2, x2, #0x630
   4734c:	mov	w1, #0xa1                  	// #161
   47350:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   47354:	add	x0, x0, #0x620
   47358:	bl	cb40 <mpfr_assert_fail@plt>
   4735c:	b	46fe4 <mpfr_subnormalize@@Base+0x218>
   47360:	mov	w19, w22
   47364:	ldp	x21, x22, [sp, #32]
   47368:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   4736c:	tbz	w19, #31, 46fbc <mpfr_subnormalize@@Base+0x1f0>
   47370:	ldr	w0, [x20, #8]
   47374:	tbnz	w0, #31, 47320 <mpfr_subnormalize@@Base+0x554>
   47378:	mov	w1, #0xffffffff            	// #-1
   4737c:	b	47300 <mpfr_subnormalize@@Base+0x534>
   47380:	add	x2, x23, x2, lsl #3
   47384:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   47388:	stur	x0, [x2, #-8]
   4738c:	ldr	x0, [sp, #80]
   47390:	add	x0, x0, #0x1
   47394:	str	x0, [sp, #80]
   47398:	b	47404 <mpfr_subnormalize@@Base+0x638>
   4739c:	cmp	w21, #0x5
   473a0:	b.eq	47260 <mpfr_subnormalize@@Base+0x494>  // b.none
   473a4:	mov	x24, #0x1                   	// #1
   473a8:	cmp	w21, #0x1
   473ac:	b.eq	46f70 <mpfr_subnormalize@@Base+0x1a4>  // b.none
   473b0:	add	w0, w21, w22, lsr #31
   473b4:	cmp	w0, #0x3
   473b8:	b.eq	46f70 <mpfr_subnormalize@@Base+0x1a4>  // b.none
   473bc:	orr	x3, x3, x8
   473c0:	cbz	x3, 47258 <mpfr_subnormalize@@Base+0x48c>
   473c4:	ldr	x0, [x7, x9, lsl #3]
   473c8:	add	x0, x24, x0
   473cc:	str	x0, [x23]
   473d0:	cmp	x24, x0
   473d4:	b.hi	472b8 <mpfr_subnormalize@@Base+0x4ec>  // b.pmore
   473d8:	cmp	x23, x1
   473dc:	b.eq	47404 <mpfr_subnormalize@@Base+0x638>  // b.none
   473e0:	cmp	x2, #0x1
   473e4:	b.le	47404 <mpfr_subnormalize@@Base+0x638>
   473e8:	add	x5, x5, #0x1
   473ec:	mov	x0, #0x1                   	// #1
   473f0:	ldr	x2, [x1, x0, lsl #3]
   473f4:	str	x2, [x23, x0, lsl #3]
   473f8:	add	x0, x0, #0x1
   473fc:	cmp	x5, x0
   47400:	b.ne	473f0 <mpfr_subnormalize@@Base+0x624>  // b.any
   47404:	neg	x4, x24
   47408:	ldr	x0, [x23]
   4740c:	and	x0, x0, x4
   47410:	str	x0, [x23]
   47414:	b	46fa0 <mpfr_subnormalize@@Base+0x1d4>
   47418:	ldp	x21, x22, [sp, #32]
   4741c:	b	46e18 <mpfr_subnormalize@@Base+0x4c>
   47420:	stp	x29, x30, [sp, #-128]!
   47424:	mov	x29, sp
   47428:	stp	x19, x20, [sp, #16]
   4742c:	stp	x21, x22, [sp, #32]
   47430:	mov	x21, x0
   47434:	mov	x19, x1
   47438:	mov	x22, x2
   4743c:	mov	x20, x3
   47440:	add	x0, x3, #0x1
   47444:	cmp	x0, x4
   47448:	b.ne	474d0 <mpfr_subnormalize@@Base+0x704>  // b.any
   4744c:	cbnz	x3, 47484 <mpfr_subnormalize@@Base+0x6b8>
   47450:	mov	x1, #0x1                   	// #1
   47454:	mov	x0, x19
   47458:	bl	bcb0 <__gmpz_set_ui@plt>
   4745c:	mov	x1, #0x1                   	// #1
   47460:	mov	x0, x22
   47464:	bl	bcb0 <__gmpz_set_ui@plt>
   47468:	mov	x1, x19
   4746c:	mov	x0, x21
   47470:	bl	bfa0 <__gmpz_set@plt>
   47474:	ldp	x19, x20, [sp, #16]
   47478:	ldp	x21, x22, [sp, #32]
   4747c:	ldp	x29, x30, [sp], #128
   47480:	ret
   47484:	stp	x23, x24, [sp, #48]
   47488:	lsl	x23, x3, #1
   4748c:	sub	x1, x23, #0x1
   47490:	mov	x0, x19
   47494:	bl	bcb0 <__gmpz_set_ui@plt>
   47498:	mov	x2, x20
   4749c:	mov	x1, x19
   474a0:	mov	x0, x19
   474a4:	bl	c100 <__gmpz_mul_ui@plt>
   474a8:	mov	x2, #0x2                   	// #2
   474ac:	add	x1, x23, #0x1
   474b0:	mov	x0, x22
   474b4:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   474b8:	mov	x2, #0x1                   	// #1
   474bc:	mov	x1, x22
   474c0:	mov	x0, x22
   474c4:	bl	c200 <__gmpz_mul_2exp@plt>
   474c8:	ldp	x23, x24, [sp, #48]
   474cc:	b	47468 <mpfr_subnormalize@@Base+0x69c>
   474d0:	stp	x23, x24, [sp, #48]
   474d4:	stp	x25, x26, [sp, #64]
   474d8:	mov	x23, x4
   474dc:	add	x26, x3, x4
   474e0:	lsr	x26, x26, #1
   474e4:	mov	x4, x26
   474e8:	mov	x0, x21
   474ec:	bl	47420 <mpfr_subnormalize@@Base+0x654>
   474f0:	add	x20, sp, #0x50
   474f4:	mov	x0, x20
   474f8:	bl	bf90 <mpfr_mpz_init@plt>
   474fc:	add	x25, sp, #0x60
   47500:	mov	x0, x25
   47504:	bl	bf90 <mpfr_mpz_init@plt>
   47508:	add	x24, sp, #0x70
   4750c:	mov	x0, x24
   47510:	bl	bf90 <mpfr_mpz_init@plt>
   47514:	mov	x4, x23
   47518:	mov	x3, x26
   4751c:	mov	x2, x24
   47520:	mov	x1, x25
   47524:	mov	x0, x20
   47528:	bl	47420 <mpfr_subnormalize@@Base+0x654>
   4752c:	mov	x2, x24
   47530:	mov	x1, x21
   47534:	mov	x0, x21
   47538:	bl	bff0 <__gmpz_mul@plt>
   4753c:	mov	x2, x19
   47540:	mov	x1, x20
   47544:	mov	x0, x20
   47548:	bl	bff0 <__gmpz_mul@plt>
   4754c:	mov	x2, x20
   47550:	mov	x1, x21
   47554:	mov	x0, x21
   47558:	bl	c9c0 <__gmpz_add@plt>
   4755c:	mov	x2, x25
   47560:	mov	x1, x19
   47564:	mov	x0, x19
   47568:	bl	bff0 <__gmpz_mul@plt>
   4756c:	mov	x2, x24
   47570:	mov	x1, x22
   47574:	mov	x0, x22
   47578:	bl	bff0 <__gmpz_mul@plt>
   4757c:	mov	x0, x20
   47580:	bl	c170 <mpfr_mpz_clear@plt>
   47584:	mov	x0, x25
   47588:	bl	c170 <mpfr_mpz_clear@plt>
   4758c:	mov	x0, x24
   47590:	bl	c170 <mpfr_mpz_clear@plt>
   47594:	ldp	x23, x24, [sp, #48]
   47598:	ldp	x25, x26, [sp, #64]
   4759c:	b	47474 <mpfr_subnormalize@@Base+0x6a8>

00000000000475a0 <mpfr_const_catalan_internal@@Base>:
   475a0:	stp	x29, x30, [sp, #-400]!
   475a4:	mov	x29, sp
   475a8:	stp	x19, x20, [sp, #16]
   475ac:	stp	x21, x22, [sp, #32]
   475b0:	stp	x23, x24, [sp, #48]
   475b4:	stp	x25, x26, [sp, #64]
   475b8:	stp	x27, x28, [sp, #80]
   475bc:	mov	x26, x0
   475c0:	mov	w25, w1
   475c4:	ldr	x24, [x0]
   475c8:	cmp	x24, #0x1
   475cc:	b.eq	4785c <mpfr_const_catalan_internal@@Base+0x2bc>  // b.none
   475d0:	b.le	4782c <mpfr_const_catalan_internal@@Base+0x28c>
   475d4:	sub	x0, x24, #0x1
   475d8:	clz	x1, x0
   475dc:	mov	w0, #0x40                  	// #64
   475e0:	sub	w0, w0, w1
   475e4:	add	x0, x24, w0, sxtw
   475e8:	add	x20, x0, #0x7
   475ec:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   475f0:	cmp	x20, x1
   475f4:	b.ge	47844 <mpfr_const_catalan_internal@@Base+0x2a4>  // b.tcont
   475f8:	add	x19, x0, #0x45
   475fc:	adds	x0, x0, #0x6
   47600:	csel	x0, x19, x0, mi  // mi = first
   47604:	asr	x19, x0, #6
   47608:	add	x19, x19, #0x1
   4760c:	add	x0, x19, x19, lsl #1
   47610:	cmp	x0, #0x10
   47614:	b.gt	47848 <mpfr_const_catalan_internal@@Base+0x2a8>
   47618:	str	xzr, [sp, #112]
   4761c:	add	x0, sp, #0x80
   47620:	str	x0, [sp, #120]
   47624:	str	x20, [sp, #368]
   47628:	ldr	x1, [sp, #120]
   4762c:	str	x1, [sp, #392]
   47630:	mov	w0, #0x1                   	// #1
   47634:	str	w0, [sp, #376]
   47638:	str	x20, [sp, #336]
   4763c:	add	x2, x1, x19, lsl #3
   47640:	str	x2, [sp, #360]
   47644:	str	w0, [sp, #344]
   47648:	str	x20, [sp, #304]
   4764c:	add	x19, x1, x19, lsl #4
   47650:	str	x19, [sp, #328]
   47654:	str	w0, [sp, #312]
   47658:	add	x0, sp, #0x120
   4765c:	bl	bf90 <mpfr_mpz_init@plt>
   47660:	add	x0, sp, #0x110
   47664:	bl	bf90 <mpfr_mpz_init@plt>
   47668:	add	x0, sp, #0x100
   4766c:	bl	bf90 <mpfr_mpz_init@plt>
   47670:	mov	x0, #0x40                  	// #64
   47674:	str	x0, [sp, #104]
   47678:	add	x19, sp, #0x170
   4767c:	mov	w23, #0x2                   	// #2
   47680:	mov	x27, #0x3                   	// #3
   47684:	add	x22, sp, #0x150
   47688:	add	x28, sp, #0x100
   4768c:	mov	w2, w23
   47690:	mov	x1, x27
   47694:	mov	x0, x19
   47698:	bl	c840 <mpfr_sqrt_ui@plt>
   4769c:	mov	w3, w23
   476a0:	mov	x2, #0x2                   	// #2
   476a4:	mov	x1, x19
   476a8:	mov	x0, x19
   476ac:	bl	c260 <mpfr_add_ui@plt>
   476b0:	mov	w2, w23
   476b4:	mov	x1, x19
   476b8:	mov	x0, x19
   476bc:	bl	c090 <mpfr_log@plt>
   476c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   476c4:	ldr	x1, [x0, #2624]
   476c8:	add	x0, x0, #0xa40
   476cc:	blr	x1
   476d0:	mov	w2, w23
   476d4:	mrs	x1, tpidr_el0
   476d8:	add	x1, x1, x0
   476dc:	mov	x0, x22
   476e0:	bl	c380 <mpfr_cache@plt>
   476e4:	mov	w3, #0x0                   	// #0
   476e8:	mov	x2, x22
   476ec:	mov	x1, x19
   476f0:	mov	x0, x19
   476f4:	bl	bd50 <mpfr_mul@plt>
   476f8:	sub	x4, x20, #0x1
   476fc:	add	x4, x4, x4, lsr #63
   47700:	add	x21, sp, #0x120
   47704:	asr	x4, x4, #1
   47708:	mov	x3, #0x0                   	// #0
   4770c:	mov	x2, x28
   47710:	add	x1, sp, #0x110
   47714:	mov	x0, x21
   47718:	bl	47420 <mpfr_subnormalize@@Base+0x654>
   4771c:	mov	x2, x27
   47720:	mov	x1, x21
   47724:	mov	x0, x21
   47728:	bl	c100 <__gmpz_mul_ui@plt>
   4772c:	mov	w2, w23
   47730:	mov	x1, x21
   47734:	mov	x0, x22
   47738:	bl	c240 <mpfr_set_z@plt>
   4773c:	add	x21, sp, #0x130
   47740:	mov	w2, #0x3                   	// #3
   47744:	mov	x1, x28
   47748:	mov	x0, x21
   4774c:	bl	c240 <mpfr_set_z@plt>
   47750:	mov	w3, #0x0                   	// #0
   47754:	mov	x2, x21
   47758:	mov	x1, x22
   4775c:	mov	x0, x22
   47760:	bl	c620 <mpfr_div@plt>
   47764:	mov	w3, #0x0                   	// #0
   47768:	mov	x2, x22
   4776c:	mov	x1, x19
   47770:	mov	x0, x19
   47774:	bl	c1a0 <mpfr_add@plt>
   47778:	mov	w3, #0x0                   	// #0
   4777c:	mov	x2, x27
   47780:	mov	x1, x19
   47784:	mov	x0, x19
   47788:	bl	c8f0 <mpfr_div_2ui@plt>
   4778c:	ldr	x1, [sp, #384]
   47790:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   47794:	cmp	x1, x0
   47798:	b.le	47868 <mpfr_const_catalan_internal@@Base+0x2c8>
   4779c:	cmp	w25, #0x0
   477a0:	cinc	x3, x24, eq  // eq = none
   477a4:	ldr	x0, [sp, #368]
   477a8:	add	x1, x0, #0x3e
   477ac:	subs	x0, x0, #0x1
   477b0:	csel	x1, x1, x0, mi  // mi = first
   477b4:	asr	x1, x1, #6
   477b8:	sub	x2, x20, #0x5
   477bc:	add	x1, x1, #0x1
   477c0:	ldr	x0, [sp, #392]
   477c4:	bl	c370 <mpfr_round_p@plt>
   477c8:	cbz	w0, 47868 <mpfr_const_catalan_internal@@Base+0x2c8>
   477cc:	ldr	w3, [sp, #376]
   477d0:	mov	w2, w25
   477d4:	add	x1, sp, #0x170
   477d8:	mov	x0, x26
   477dc:	bl	c6a0 <mpfr_set4@plt>
   477e0:	mov	w19, w0
   477e4:	ldr	x1, [sp, #112]
   477e8:	cbz	x1, 477f4 <mpfr_const_catalan_internal@@Base+0x254>
   477ec:	ldr	x0, [sp, #120]
   477f0:	bl	cc20 <mpfr_free_func@plt>
   477f4:	add	x0, sp, #0x120
   477f8:	bl	c170 <mpfr_mpz_clear@plt>
   477fc:	add	x0, sp, #0x110
   47800:	bl	c170 <mpfr_mpz_clear@plt>
   47804:	add	x0, sp, #0x100
   47808:	bl	c170 <mpfr_mpz_clear@plt>
   4780c:	mov	w0, w19
   47810:	ldp	x19, x20, [sp, #16]
   47814:	ldp	x21, x22, [sp, #32]
   47818:	ldp	x23, x24, [sp, #48]
   4781c:	ldp	x25, x26, [sp, #64]
   47820:	ldp	x27, x28, [sp, #80]
   47824:	ldp	x29, x30, [sp], #400
   47828:	ret
   4782c:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   47830:	add	x2, x2, #0xee0
   47834:	mov	w1, #0x74                  	// #116
   47838:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4783c:	add	x0, x0, #0xef0
   47840:	bl	cb40 <mpfr_assert_fail@plt>
   47844:	bl	c8e0 <mpfr_abort_prec_max@plt>
   47848:	lsl	x0, x0, #3
   4784c:	str	x0, [sp, #112]
   47850:	bl	ccf0 <mpfr_allocate_func@plt>
   47854:	str	x0, [sp, #120]
   47858:	b	47624 <mpfr_const_catalan_internal@@Base+0x84>
   4785c:	mov	x19, x24
   47860:	mov	x20, #0x8                   	// #8
   47864:	b	47618 <mpfr_const_catalan_internal@@Base+0x78>
   47868:	mov	x0, #0xfffffffffffffeff    	// #-257
   4786c:	movk	x0, #0x7fff, lsl #48
   47870:	sub	x0, x0, x20
   47874:	ldr	x1, [sp, #104]
   47878:	cmp	x0, x1
   4787c:	b.lt	47908 <mpfr_const_catalan_internal@@Base+0x368>  // b.tstop
   47880:	ldr	x0, [sp, #104]
   47884:	add	x20, x20, x0
   47888:	add	x0, x20, x20, lsr #63
   4788c:	asr	x0, x0, #1
   47890:	str	x0, [sp, #104]
   47894:	ldr	x1, [sp, #112]
   47898:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4789c:	cmp	x20, x0
   478a0:	b.ge	47920 <mpfr_const_catalan_internal@@Base+0x380>  // b.tcont
   478a4:	add	x21, x20, #0x3e
   478a8:	subs	x0, x20, #0x1
   478ac:	csel	x21, x21, x0, mi  // mi = first
   478b0:	asr	x21, x21, #6
   478b4:	add	x21, x21, #0x1
   478b8:	add	x0, x21, x21, lsl #1
   478bc:	lsl	x0, x0, #3
   478c0:	str	x0, [sp, #112]
   478c4:	cbnz	x1, 47924 <mpfr_const_catalan_internal@@Base+0x384>
   478c8:	bl	ccf0 <mpfr_allocate_func@plt>
   478cc:	str	x0, [sp, #120]
   478d0:	str	x20, [sp, #368]
   478d4:	ldr	x1, [sp, #120]
   478d8:	str	x1, [sp, #392]
   478dc:	mov	w0, #0x1                   	// #1
   478e0:	str	w0, [sp, #376]
   478e4:	str	x20, [sp, #336]
   478e8:	add	x2, x1, x21, lsl #3
   478ec:	str	x2, [sp, #360]
   478f0:	str	w0, [sp, #344]
   478f4:	str	x20, [sp, #304]
   478f8:	add	x21, x1, x21, lsl #4
   478fc:	str	x21, [sp, #328]
   47900:	str	w0, [sp, #312]
   47904:	b	4768c <mpfr_const_catalan_internal@@Base+0xec>
   47908:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   4790c:	add	x2, x2, #0x118
   47910:	mov	w1, #0x8d                  	// #141
   47914:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   47918:	add	x0, x0, #0xef0
   4791c:	bl	cb40 <mpfr_assert_fail@plt>
   47920:	bl	c8e0 <mpfr_abort_prec_max@plt>
   47924:	mov	x2, x0
   47928:	ldr	x0, [sp, #120]
   4792c:	bl	c1c0 <mpfr_reallocate_func@plt>
   47930:	str	x0, [sp, #120]
   47934:	b	478d0 <mpfr_const_catalan_internal@@Base+0x330>

0000000000047938 <mpfr_const_catalan@@Base>:
   47938:	stp	x29, x30, [sp, #-16]!
   4793c:	mov	x29, sp
   47940:	mov	x3, x0
   47944:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47948:	ldr	x2, [x0, #2592]
   4794c:	add	x0, x0, #0xa20
   47950:	blr	x2
   47954:	mov	w2, w1
   47958:	mrs	x1, tpidr_el0
   4795c:	add	x1, x1, x0
   47960:	mov	x0, x3
   47964:	bl	c380 <mpfr_cache@plt>
   47968:	ldp	x29, x30, [sp], #16
   4796c:	ret
   47970:	stp	x29, x30, [sp, #-400]!
   47974:	mov	x29, sp
   47978:	stp	x19, x20, [sp, #16]
   4797c:	stp	x21, x22, [sp, #32]
   47980:	stp	x23, x24, [sp, #48]
   47984:	stp	x25, x26, [sp, #64]
   47988:	stp	x27, x28, [sp, #80]
   4798c:	mov	x20, x0
   47990:	mov	x22, x1
   47994:	str	x2, [sp, #96]
   47998:	mov	w24, w3
   4799c:	ldr	x0, [x1]
   479a0:	str	x0, [sp, #368]
   479a4:	ldr	x0, [x1, #24]
   479a8:	str	x0, [sp, #392]
   479ac:	mov	w0, #0x1                   	// #1
   479b0:	str	w0, [sp, #376]
   479b4:	ldr	x0, [x1, #16]
   479b8:	str	x0, [sp, #384]
   479bc:	ldr	x19, [x20]
   479c0:	add	x19, x19, #0xa
   479c4:	cmp	x0, #0x0
   479c8:	b.le	479e8 <mpfr_const_catalan@@Base+0xb0>
   479cc:	sub	x1, x0, #0x1
   479d0:	clz	x2, x1
   479d4:	mov	w1, #0x40                  	// #64
   479d8:	sub	w1, w1, w2
   479dc:	cmp	x0, #0x1
   479e0:	csel	w0, w1, wzr, ne  // ne = any
   479e4:	add	x19, x19, w0, sxtw
   479e8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   479ec:	cmp	x19, x0
   479f0:	b.ge	47be4 <mpfr_const_catalan@@Base+0x2ac>  // b.tcont
   479f4:	add	x0, x19, #0x3e
   479f8:	subs	x1, x19, #0x1
   479fc:	csel	x0, x0, x1, mi  // mi = first
   47a00:	asr	x0, x0, #6
   47a04:	add	x0, x0, #0x1
   47a08:	cmp	x0, #0x10
   47a0c:	b.gt	47be8 <mpfr_const_catalan@@Base+0x2b0>
   47a10:	str	xzr, [sp, #192]
   47a14:	add	x0, sp, #0xd0
   47a18:	str	x0, [sp, #200]
   47a1c:	str	x19, [sp, #336]
   47a20:	ldr	x0, [sp, #200]
   47a24:	str	x0, [sp, #360]
   47a28:	mov	w0, #0x1                   	// #1
   47a2c:	str	w0, [sp, #344]
   47a30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47a34:	ldr	x1, [x0, #2576]
   47a38:	add	x0, x0, #0xa10
   47a3c:	blr	x1
   47a40:	mrs	x1, tpidr_el0
   47a44:	ldr	w25, [x1, x0]
   47a48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47a4c:	ldr	x2, [x0, #2512]
   47a50:	add	x0, x0, #0x9d0
   47a54:	blr	x2
   47a58:	add	x2, x1, x0
   47a5c:	ldr	x27, [x1, x0]
   47a60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47a64:	ldr	x3, [x0, #2544]
   47a68:	add	x0, x0, #0x9f0
   47a6c:	blr	x3
   47a70:	ldr	x26, [x1, x0]
   47a74:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   47a78:	str	x3, [x2]
   47a7c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   47a80:	str	x2, [x1, x0]
   47a84:	mov	x0, #0x40                  	// #64
   47a88:	str	x0, [sp, #112]
   47a8c:	add	x28, sp, #0x170
   47a90:	add	x21, sp, #0x150
   47a94:	add	x0, sp, #0x80
   47a98:	str	x0, [sp, #120]
   47a9c:	add	x0, sp, #0xa0
   47aa0:	str	x0, [sp, #104]
   47aa4:	mov	w2, #0x0                   	// #0
   47aa8:	mov	x1, x28
   47aac:	mov	x0, x21
   47ab0:	bl	c090 <mpfr_log@plt>
   47ab4:	mov	w3, #0x0                   	// #0
   47ab8:	ldr	x2, [sp, #96]
   47abc:	mov	x1, x21
   47ac0:	mov	x0, x21
   47ac4:	bl	cc60 <mpfr_div_ui@plt>
   47ac8:	ldr	x23, [sp, #352]
   47acc:	mov	w2, #0x0                   	// #0
   47ad0:	mov	x1, x21
   47ad4:	mov	x0, x21
   47ad8:	bl	c750 <mpfr_exp@plt>
   47adc:	add	w2, w23, #0x3
   47ae0:	cmn	x23, #0x1
   47ae4:	b.lt	47bfc <mpfr_const_catalan@@Base+0x2c4>  // b.tstop
   47ae8:	ldr	x1, [sp, #352]
   47aec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   47af0:	cmp	x1, x0
   47af4:	b.le	47c0c <mpfr_const_catalan@@Base+0x2d4>
   47af8:	cmp	w24, #0x0
   47afc:	ldr	x3, [x20]
   47b00:	cinc	x3, x3, eq  // eq = none
   47b04:	ldr	x0, [sp, #336]
   47b08:	add	x1, x0, #0x3e
   47b0c:	subs	x0, x0, #0x1
   47b10:	csel	x1, x1, x0, mi  // mi = first
   47b14:	asr	x1, x1, #6
   47b18:	sub	x2, x19, w2, uxtw
   47b1c:	add	x1, x1, #0x1
   47b20:	ldr	x0, [sp, #360]
   47b24:	bl	c370 <mpfr_round_p@plt>
   47b28:	cbz	w0, 47c0c <mpfr_const_catalan@@Base+0x2d4>
   47b2c:	ldr	w3, [x22, #8]
   47b30:	mov	w2, w24
   47b34:	add	x1, sp, #0x150
   47b38:	mov	x0, x20
   47b3c:	bl	c6a0 <mpfr_set4@plt>
   47b40:	mov	w19, w0
   47b44:	ldr	x1, [sp, #192]
   47b48:	cbz	x1, 47b54 <mpfr_const_catalan@@Base+0x21c>
   47b4c:	ldr	x0, [sp, #200]
   47b50:	bl	cc20 <mpfr_free_func@plt>
   47b54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47b58:	ldr	x1, [x0, #2576]
   47b5c:	add	x0, x0, #0xa10
   47b60:	blr	x1
   47b64:	mrs	x1, tpidr_el0
   47b68:	str	w25, [x1, x0]
   47b6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47b70:	ldr	x2, [x0, #2512]
   47b74:	add	x0, x0, #0x9d0
   47b78:	blr	x2
   47b7c:	str	x27, [x1, x0]
   47b80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47b84:	ldr	x2, [x0, #2544]
   47b88:	add	x0, x0, #0x9f0
   47b8c:	blr	x2
   47b90:	str	x26, [x1, x0]
   47b94:	ldr	x0, [x20, #16]
   47b98:	cmp	x27, x0
   47b9c:	ccmp	x26, x0, #0x1, le
   47ba0:	b.lt	47d58 <mpfr_const_catalan@@Base+0x420>  // b.tstop
   47ba4:	cbz	w19, 47bc4 <mpfr_const_catalan@@Base+0x28c>
   47ba8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47bac:	ldr	x1, [x0, #2576]
   47bb0:	add	x0, x0, #0xa10
   47bb4:	blr	x1
   47bb8:	orr	w25, w25, #0x8
   47bbc:	mrs	x1, tpidr_el0
   47bc0:	str	w25, [x1, x0]
   47bc4:	mov	w0, w19
   47bc8:	ldp	x19, x20, [sp, #16]
   47bcc:	ldp	x21, x22, [sp, #32]
   47bd0:	ldp	x23, x24, [sp, #48]
   47bd4:	ldp	x25, x26, [sp, #64]
   47bd8:	ldp	x27, x28, [sp, #80]
   47bdc:	ldp	x29, x30, [sp], #400
   47be0:	ret
   47be4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   47be8:	lsl	x0, x0, #3
   47bec:	str	x0, [sp, #192]
   47bf0:	bl	ccf0 <mpfr_allocate_func@plt>
   47bf4:	str	x0, [sp, #200]
   47bf8:	b	47a1c <mpfr_const_catalan@@Base+0xe4>
   47bfc:	cmn	x23, #0x2
   47c00:	cset	w2, eq  // eq = none
   47c04:	add	w2, w2, #0x1
   47c08:	b	47ae8 <mpfr_const_catalan@@Base+0x1b0>
   47c0c:	cmp	w24, #0x0
   47c10:	ldr	x1, [x20]
   47c14:	cinc	x1, x1, eq  // eq = none
   47c18:	ldr	x23, [sp, #120]
   47c1c:	mov	x0, x23
   47c20:	bl	ca80 <mpfr_init2@plt>
   47c24:	ldr	x1, [x22]
   47c28:	ldr	x0, [sp, #104]
   47c2c:	bl	ca80 <mpfr_init2@plt>
   47c30:	ldr	w3, [sp, #344]
   47c34:	mov	w2, #0x0                   	// #0
   47c38:	mov	x1, x21
   47c3c:	mov	x0, x23
   47c40:	bl	c6a0 <mpfr_set4@plt>
   47c44:	mov	w3, #0x0                   	// #0
   47c48:	ldr	x2, [sp, #96]
   47c4c:	mov	x1, x23
   47c50:	ldr	x0, [sp, #104]
   47c54:	bl	bf70 <mpfr_pow_ui@plt>
   47c58:	cbz	w0, 47ce8 <mpfr_const_catalan@@Base+0x3b0>
   47c5c:	ldr	x0, [sp, #104]
   47c60:	bl	c070 <mpfr_clear@plt>
   47c64:	ldr	x0, [sp, #120]
   47c68:	bl	c070 <mpfr_clear@plt>
   47c6c:	mov	x0, #0xfffffffffffffeff    	// #-257
   47c70:	movk	x0, #0x7fff, lsl #48
   47c74:	sub	x0, x0, x19
   47c78:	ldr	x1, [sp, #112]
   47c7c:	cmp	x0, x1
   47c80:	b.lt	47d28 <mpfr_const_catalan@@Base+0x3f0>  // b.tstop
   47c84:	ldr	x0, [sp, #112]
   47c88:	add	x19, x19, x0
   47c8c:	add	x0, x19, x19, lsr #63
   47c90:	asr	x0, x0, #1
   47c94:	str	x0, [sp, #112]
   47c98:	ldr	x1, [sp, #192]
   47c9c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   47ca0:	cmp	x19, x0
   47ca4:	b.ge	47d40 <mpfr_const_catalan@@Base+0x408>  // b.tcont
   47ca8:	add	x0, x19, #0x3e
   47cac:	subs	x2, x19, #0x1
   47cb0:	csel	x0, x0, x2, mi  // mi = first
   47cb4:	asr	x0, x0, #6
   47cb8:	add	x0, x0, #0x1
   47cbc:	lsl	x0, x0, #3
   47cc0:	str	x0, [sp, #192]
   47cc4:	cbnz	x1, 47d44 <mpfr_const_catalan@@Base+0x40c>
   47cc8:	bl	ccf0 <mpfr_allocate_func@plt>
   47ccc:	str	x0, [sp, #200]
   47cd0:	str	x19, [sp, #336]
   47cd4:	ldr	x0, [sp, #200]
   47cd8:	str	x0, [sp, #360]
   47cdc:	mov	w0, #0x1                   	// #1
   47ce0:	str	w0, [sp, #344]
   47ce4:	b	47aa4 <mpfr_const_catalan@@Base+0x16c>
   47ce8:	mov	x1, x28
   47cec:	ldr	x0, [sp, #104]
   47cf0:	bl	ca60 <mpfr_equal_p@plt>
   47cf4:	cbz	w0, 47c5c <mpfr_const_catalan@@Base+0x324>
   47cf8:	add	x21, sp, #0x80
   47cfc:	ldr	w3, [x22, #8]
   47d00:	mov	w2, w24
   47d04:	mov	x1, x21
   47d08:	mov	x0, x20
   47d0c:	bl	c6a0 <mpfr_set4@plt>
   47d10:	mov	w19, w0
   47d14:	add	x0, sp, #0xa0
   47d18:	bl	c070 <mpfr_clear@plt>
   47d1c:	mov	x0, x21
   47d20:	bl	c070 <mpfr_clear@plt>
   47d24:	b	47b44 <mpfr_const_catalan@@Base+0x20c>
   47d28:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   47d2c:	add	x2, x2, #0x3e8
   47d30:	mov	w1, #0x11d                 	// #285
   47d34:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   47d38:	add	x0, x0, #0xf00
   47d3c:	bl	cb40 <mpfr_assert_fail@plt>
   47d40:	bl	c8e0 <mpfr_abort_prec_max@plt>
   47d44:	mov	x2, x0
   47d48:	ldr	x0, [sp, #200]
   47d4c:	bl	c1c0 <mpfr_reallocate_func@plt>
   47d50:	str	x0, [sp, #200]
   47d54:	b	47cd0 <mpfr_const_catalan@@Base+0x398>
   47d58:	mov	w2, w24
   47d5c:	mov	w1, w19
   47d60:	mov	x0, x20
   47d64:	bl	cb30 <mpfr_check_range@plt>
   47d68:	mov	w19, w0
   47d6c:	b	47bc4 <mpfr_const_catalan@@Base+0x28c>

0000000000047d70 <mpfr_rootn_ui@@Base>:
   47d70:	stp	x29, x30, [sp, #-128]!
   47d74:	mov	x29, sp
   47d78:	stp	x19, x20, [sp, #16]
   47d7c:	stp	x21, x22, [sp, #32]
   47d80:	stp	x23, x24, [sp, #48]
   47d84:	mov	x21, x0
   47d88:	mov	x24, x1
   47d8c:	mov	x19, x2
   47d90:	mov	w22, w3
   47d94:	cmp	x2, #0x1
   47d98:	b.ls	48038 <mpfr_rootn_ui@@Base+0x2c8>  // b.plast
   47d9c:	ldr	x0, [x1, #16]
   47da0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47da4:	cmp	x0, x1
   47da8:	b.le	48088 <mpfr_rootn_ui@@Base+0x318>
   47dac:	ldr	w0, [x24, #8]
   47db0:	tbnz	w0, #31, 48168 <mpfr_rootn_ui@@Base+0x3f8>
   47db4:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   47db8:	ldr	x1, [x1, #3928]
   47dbc:	mov	x0, x24
   47dc0:	bl	c9b0 <mpfr_cmpabs@plt>
   47dc4:	cbz	w0, 481a4 <mpfr_rootn_ui@@Base+0x434>
   47dc8:	cmp	x19, #0x64
   47dcc:	b.hi	481c0 <mpfr_rootn_ui@@Base+0x450>  // b.pmore
   47dd0:	stp	x25, x26, [sp, #64]
   47dd4:	stp	x27, x28, [sp, #80]
   47dd8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47ddc:	ldr	x1, [x0, #2576]
   47de0:	add	x0, x0, #0xa10
   47de4:	blr	x1
   47de8:	mrs	x1, tpidr_el0
   47dec:	ldr	w26, [x1, x0]
   47df0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47df4:	ldr	x2, [x0, #2512]
   47df8:	add	x0, x0, #0x9d0
   47dfc:	blr	x2
   47e00:	add	x2, x1, x0
   47e04:	ldr	x27, [x1, x0]
   47e08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47e0c:	ldr	x3, [x0, #2544]
   47e10:	add	x0, x0, #0x9f0
   47e14:	blr	x3
   47e18:	ldr	x28, [x1, x0]
   47e1c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   47e20:	str	x3, [x2]
   47e24:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   47e28:	str	x2, [x1, x0]
   47e2c:	add	x20, sp, #0x70
   47e30:	mov	x0, x20
   47e34:	bl	bf90 <mpfr_mpz_init@plt>
   47e38:	mov	x1, x24
   47e3c:	mov	x0, x20
   47e40:	bl	cac0 <mpfr_get_z_2exp@plt>
   47e44:	mov	x23, x0
   47e48:	ldr	w25, [x24, #8]
   47e4c:	tbnz	w25, #31, 481f0 <mpfr_rootn_ui@@Base+0x480>
   47e50:	sdiv	x20, x23, x19
   47e54:	msub	x20, x20, x19, x23
   47e58:	add	x0, x20, x19
   47e5c:	cmp	x20, #0x0
   47e60:	csel	x20, x0, x20, lt  // lt = tstop
   47e64:	ldr	w0, [sp, #116]
   47e68:	cmp	w0, #0x0
   47e6c:	cneg	w0, w0, lt  // lt = tstop
   47e70:	ldr	x1, [sp, #120]
   47e74:	add	x1, x1, w0, sxtw #3
   47e78:	ldur	x1, [x1, #-8]
   47e7c:	sbfiz	x0, x0, #6, #32
   47e80:	clz	x1, x1
   47e84:	cmp	w22, #0x0
   47e88:	ldr	x24, [x21]
   47e8c:	cinc	x24, x24, eq  // eq = none
   47e90:	mul	x3, x24, x19
   47e94:	sub	x2, x0, x1
   47e98:	add	x2, x2, x20
   47e9c:	cmp	x2, x3
   47ea0:	b.cs	4824c <mpfr_rootn_ui@@Base+0x4dc>  // b.hs, b.nlast
   47ea4:	sub	x1, x1, x20
   47ea8:	sub	x0, x3, x0
   47eac:	add	x0, x1, x0
   47eb0:	udiv	x0, x0, x19
   47eb4:	madd	x0, x0, x19, x20
   47eb8:	add	x20, sp, #0x70
   47ebc:	str	x0, [sp, #104]
   47ec0:	mov	x2, x0
   47ec4:	mov	x1, x20
   47ec8:	mov	x0, x20
   47ecc:	bl	c200 <__gmpz_mul_2exp@plt>
   47ed0:	ldr	x0, [sp, #104]
   47ed4:	sub	x23, x23, x0
   47ed8:	mov	x2, x19
   47edc:	mov	x1, x20
   47ee0:	mov	x0, x20
   47ee4:	bl	c2e0 <__gmpz_root@plt>
   47ee8:	cmp	w0, #0x0
   47eec:	cset	w2, eq  // eq = none
   47ef0:	mov	w20, w2
   47ef4:	ldr	w0, [sp, #116]
   47ef8:	cmp	w0, #0x0
   47efc:	cneg	w0, w0, lt  // lt = tstop
   47f00:	ldr	x1, [sp, #120]
   47f04:	add	x1, x1, w0, sxtw #3
   47f08:	ldur	x1, [x1, #-8]
   47f0c:	sbfiz	x0, x0, #6, #32
   47f10:	clz	x1, x1
   47f14:	sub	x0, x0, x1
   47f18:	sub	x24, x0, x24
   47f1c:	cmp	x24, #0x0
   47f20:	b.le	47f54 <mpfr_rootn_ui@@Base+0x1e4>
   47f24:	mov	w20, #0x1                   	// #1
   47f28:	cbnz	w2, 47f40 <mpfr_rootn_ui@@Base+0x1d0>
   47f2c:	mov	x1, #0x0                   	// #0
   47f30:	add	x0, sp, #0x70
   47f34:	bl	ba90 <__gmpz_scan1@plt>
   47f38:	cmp	x0, x24
   47f3c:	cset	w20, lt  // lt = tstop
   47f40:	add	x0, sp, #0x70
   47f44:	mov	x2, x24
   47f48:	mov	x1, x0
   47f4c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   47f50:	madd	x23, x24, x19, x23
   47f54:	cbz	w20, 47f8c <mpfr_rootn_ui@@Base+0x21c>
   47f58:	tbnz	w25, #31, 48200 <mpfr_rootn_ui@@Base+0x490>
   47f5c:	sub	w0, w22, #0x2
   47f60:	tst	w0, #0xfffffffd
   47f64:	b.eq	47f7c <mpfr_rootn_ui@@Base+0x20c>  // b.none
   47f68:	cbnz	w22, 48218 <mpfr_rootn_ui@@Base+0x4a8>
   47f6c:	mov	x1, #0x0                   	// #0
   47f70:	add	x0, sp, #0x70
   47f74:	bl	bfe0 <__gmpz_tstbit@plt>
   47f78:	cbz	w0, 48220 <mpfr_rootn_ui@@Base+0x4b0>
   47f7c:	add	x0, sp, #0x70
   47f80:	mov	x2, #0x1                   	// #1
   47f84:	mov	x1, x0
   47f88:	bl	c360 <__gmpz_add_ui@plt>
   47f8c:	mov	w2, #0x0                   	// #0
   47f90:	add	x1, sp, #0x70
   47f94:	mov	x0, x21
   47f98:	bl	c240 <mpfr_set_z@plt>
   47f9c:	add	w20, w20, w0
   47fa0:	sdiv	x23, x23, x19
   47fa4:	ldr	x1, [x21, #16]
   47fa8:	add	x23, x1, x23
   47fac:	str	x23, [x21, #16]
   47fb0:	tbnz	w25, #31, 482b0 <mpfr_rootn_ui@@Base+0x540>
   47fb4:	add	x0, sp, #0x70
   47fb8:	bl	c170 <mpfr_mpz_clear@plt>
   47fbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47fc0:	ldr	x1, [x0, #2576]
   47fc4:	add	x0, x0, #0xa10
   47fc8:	blr	x1
   47fcc:	mrs	x1, tpidr_el0
   47fd0:	str	w26, [x1, x0]
   47fd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47fd8:	ldr	x2, [x0, #2512]
   47fdc:	add	x0, x0, #0x9d0
   47fe0:	blr	x2
   47fe4:	str	x27, [x1, x0]
   47fe8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   47fec:	ldr	x2, [x0, #2544]
   47ff0:	add	x0, x0, #0x9f0
   47ff4:	blr	x2
   47ff8:	str	x28, [x1, x0]
   47ffc:	ldr	x0, [x21, #16]
   48000:	cmp	x28, x0
   48004:	ccmp	x27, x0, #0x0, ge  // ge = tcont
   48008:	b.gt	4822c <mpfr_rootn_ui@@Base+0x4bc>
   4800c:	cbz	w20, 482c4 <mpfr_rootn_ui@@Base+0x554>
   48010:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48014:	ldr	x1, [x0, #2576]
   48018:	add	x0, x0, #0xa10
   4801c:	blr	x1
   48020:	orr	w26, w26, #0x8
   48024:	mrs	x1, tpidr_el0
   48028:	str	w26, [x1, x0]
   4802c:	ldp	x25, x26, [sp, #64]
   48030:	ldp	x27, x28, [sp, #80]
   48034:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48038:	cbnz	x2, 48074 <mpfr_rootn_ui@@Base+0x304>
   4803c:	mov	x0, #0x2                   	// #2
   48040:	movk	x0, #0x8000, lsl #48
   48044:	str	x0, [x21, #16]
   48048:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4804c:	ldr	x1, [x0, #2576]
   48050:	add	x0, x0, #0xa10
   48054:	blr	x1
   48058:	mrs	x1, tpidr_el0
   4805c:	add	x0, x1, x0
   48060:	ldr	w1, [x0]
   48064:	orr	w1, w1, #0x4
   48068:	str	w1, [x0]
   4806c:	mov	w20, #0x0                   	// #0
   48070:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48074:	ldr	w3, [x1, #8]
   48078:	mov	w2, w22
   4807c:	bl	c6a0 <mpfr_set4@plt>
   48080:	mov	w20, w0
   48084:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48088:	mov	x1, #0x2                   	// #2
   4808c:	movk	x1, #0x8000, lsl #48
   48090:	cmp	x0, x1
   48094:	b.eq	480e8 <mpfr_rootn_ui@@Base+0x378>  // b.none
   48098:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4809c:	cmp	x0, x1
   480a0:	b.ne	48130 <mpfr_rootn_ui@@Base+0x3c0>  // b.any
   480a4:	ldr	w0, [x24, #8]
   480a8:	tbz	w0, #31, 48118 <mpfr_rootn_ui@@Base+0x3a8>
   480ac:	tbnz	w2, #0, 48118 <mpfr_rootn_ui@@Base+0x3a8>
   480b0:	mov	x0, #0x2                   	// #2
   480b4:	movk	x0, #0x8000, lsl #48
   480b8:	str	x0, [x21, #16]
   480bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   480c0:	ldr	x1, [x0, #2576]
   480c4:	add	x0, x0, #0xa10
   480c8:	blr	x1
   480cc:	mrs	x1, tpidr_el0
   480d0:	add	x0, x1, x0
   480d4:	ldr	w1, [x0]
   480d8:	orr	w1, w1, #0x4
   480dc:	str	w1, [x0]
   480e0:	mov	w20, #0x0                   	// #0
   480e4:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   480e8:	str	x1, [x21, #16]
   480ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   480f0:	ldr	x1, [x0, #2576]
   480f4:	add	x0, x0, #0xa10
   480f8:	blr	x1
   480fc:	mrs	x1, tpidr_el0
   48100:	add	x0, x1, x0
   48104:	ldr	w1, [x0]
   48108:	orr	w1, w1, #0x4
   4810c:	str	w1, [x0]
   48110:	mov	w20, #0x0                   	// #0
   48114:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48118:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4811c:	str	x0, [x21, #16]
   48120:	ldr	w0, [x24, #8]
   48124:	str	w0, [x21, #8]
   48128:	mov	w20, #0x0                   	// #0
   4812c:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48130:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   48134:	str	x0, [x21, #16]
   48138:	ldr	w0, [x24, #8]
   4813c:	cmp	w0, #0x0
   48140:	b.le	48154 <mpfr_rootn_ui@@Base+0x3e4>
   48144:	mov	w0, #0x1                   	// #1
   48148:	str	w0, [x21, #8]
   4814c:	mov	w20, #0x0                   	// #0
   48150:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48154:	tbz	w2, #0, 48144 <mpfr_rootn_ui@@Base+0x3d4>
   48158:	mov	w0, #0xffffffff            	// #-1
   4815c:	str	w0, [x21, #8]
   48160:	mov	w20, #0x0                   	// #0
   48164:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   48168:	tbnz	w2, #0, 47db4 <mpfr_rootn_ui@@Base+0x44>
   4816c:	mov	x0, #0x2                   	// #2
   48170:	movk	x0, #0x8000, lsl #48
   48174:	str	x0, [x21, #16]
   48178:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4817c:	ldr	x1, [x0, #2576]
   48180:	add	x0, x0, #0xa10
   48184:	blr	x1
   48188:	mrs	x1, tpidr_el0
   4818c:	add	x0, x1, x0
   48190:	ldr	w1, [x0]
   48194:	orr	w1, w1, #0x4
   48198:	str	w1, [x0]
   4819c:	mov	w20, #0x0                   	// #0
   481a0:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   481a4:	ldr	w3, [x24, #8]
   481a8:	mov	w2, w22
   481ac:	mov	x1, x24
   481b0:	mov	x0, x21
   481b4:	bl	c6a0 <mpfr_set4@plt>
   481b8:	mov	w20, w0
   481bc:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   481c0:	mov	w3, w22
   481c4:	mov	x2, x19
   481c8:	mov	x1, x24
   481cc:	mov	x0, x21
   481d0:	bl	47970 <mpfr_const_catalan@@Base+0x38>
   481d4:	mov	w20, w0
   481d8:	mov	w0, w20
   481dc:	ldp	x19, x20, [sp, #16]
   481e0:	ldp	x21, x22, [sp, #32]
   481e4:	ldp	x23, x24, [sp, #48]
   481e8:	ldp	x29, x30, [sp], #128
   481ec:	ret
   481f0:	ldr	w0, [sp, #116]
   481f4:	neg	w0, w0
   481f8:	str	w0, [sp, #116]
   481fc:	b	47e50 <mpfr_rootn_ui@@Base+0xe0>
   48200:	cmp	w22, #0x2
   48204:	b.eq	48288 <mpfr_rootn_ui@@Base+0x518>  // b.none
   48208:	cmp	w22, #0x3
   4820c:	b.ne	47f5c <mpfr_rootn_ui@@Base+0x1ec>  // b.any
   48210:	mov	w22, #0x2                   	// #2
   48214:	b	47f7c <mpfr_rootn_ui@@Base+0x20c>
   48218:	mov	w20, #0xffffffff            	// #-1
   4821c:	b	47f8c <mpfr_rootn_ui@@Base+0x21c>
   48220:	mov	w22, w0
   48224:	mov	w20, #0xffffffff            	// #-1
   48228:	b	47f8c <mpfr_rootn_ui@@Base+0x21c>
   4822c:	mov	w2, w22
   48230:	mov	w1, w20
   48234:	mov	x0, x21
   48238:	bl	cb30 <mpfr_check_range@plt>
   4823c:	mov	w20, w0
   48240:	ldp	x25, x26, [sp, #64]
   48244:	ldp	x27, x28, [sp, #80]
   48248:	b	481d8 <mpfr_rootn_ui@@Base+0x468>
   4824c:	add	x0, sp, #0x70
   48250:	mov	x2, x20
   48254:	mov	x1, x0
   48258:	str	x0, [sp, #104]
   4825c:	bl	c200 <__gmpz_mul_2exp@plt>
   48260:	sub	x23, x23, x20
   48264:	mov	x2, x19
   48268:	ldr	x0, [sp, #104]
   4826c:	mov	x1, x0
   48270:	bl	c2e0 <__gmpz_root@plt>
   48274:	cmp	w0, #0x0
   48278:	cset	w2, eq  // eq = none
   4827c:	mov	w20, w2
   48280:	ldr	w0, [sp, #116]
   48284:	b	47ef8 <mpfr_rootn_ui@@Base+0x188>
   48288:	mov	w2, #0x0                   	// #0
   4828c:	add	x1, sp, #0x70
   48290:	mov	x0, x21
   48294:	bl	c240 <mpfr_set_z@plt>
   48298:	sub	w20, w0, #0x1
   4829c:	sdiv	x23, x23, x19
   482a0:	ldr	x0, [x21, #16]
   482a4:	add	x23, x0, x23
   482a8:	str	x23, [x21, #16]
   482ac:	mov	w22, #0x3                   	// #3
   482b0:	ldr	w0, [x21, #8]
   482b4:	neg	w0, w0
   482b8:	str	w0, [x21, #8]
   482bc:	neg	w20, w20
   482c0:	b	47fb4 <mpfr_rootn_ui@@Base+0x244>
   482c4:	ldp	x25, x26, [sp, #64]
   482c8:	ldp	x27, x28, [sp, #80]
   482cc:	b	481d8 <mpfr_rootn_ui@@Base+0x468>

00000000000482d0 <mpfr_root@@Base>:
   482d0:	stp	x29, x30, [sp, #-16]!
   482d4:	mov	x29, sp
   482d8:	mov	w4, w3
   482dc:	cmp	x2, #0x1
   482e0:	b.ls	48304 <mpfr_root@@Base+0x34>  // b.plast
   482e4:	ldr	x5, [x1, #16]
   482e8:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   482ec:	cmp	x5, x3
   482f0:	b.eq	48350 <mpfr_root@@Base+0x80>  // b.none
   482f4:	mov	w3, w4
   482f8:	bl	c6b0 <mpfr_rootn_ui@plt>
   482fc:	ldp	x29, x30, [sp], #16
   48300:	ret
   48304:	cbnz	x2, 48340 <mpfr_root@@Base+0x70>
   48308:	mov	x1, #0x2                   	// #2
   4830c:	movk	x1, #0x8000, lsl #48
   48310:	str	x1, [x0, #16]
   48314:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48318:	ldr	x1, [x0, #2576]
   4831c:	add	x0, x0, #0xa10
   48320:	blr	x1
   48324:	mrs	x1, tpidr_el0
   48328:	add	x0, x1, x0
   4832c:	ldr	w1, [x0]
   48330:	orr	w1, w1, #0x4
   48334:	str	w1, [x0]
   48338:	mov	w0, #0x0                   	// #0
   4833c:	b	482fc <mpfr_root@@Base+0x2c>
   48340:	ldr	w3, [x1, #8]
   48344:	mov	w2, w4
   48348:	bl	c6a0 <mpfr_set4@plt>
   4834c:	b	482fc <mpfr_root@@Base+0x2c>
   48350:	str	x3, [x0, #16]
   48354:	ldr	w1, [x1, #8]
   48358:	str	w1, [x0, #8]
   4835c:	mov	w0, #0x0                   	// #0
   48360:	b	482fc <mpfr_root@@Base+0x2c>

0000000000048364 <mpfr_sec@@Base>:
   48364:	stp	x29, x30, [sp, #-144]!
   48368:	mov	x29, sp
   4836c:	stp	x19, x20, [sp, #16]
   48370:	mov	x20, x0
   48374:	str	w2, [sp, #100]
   48378:	ldr	x2, [x1, #16]
   4837c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48380:	cmp	x2, x0
   48384:	b.le	48568 <mpfr_sec@@Base+0x204>
   48388:	stp	x21, x22, [sp, #32]
   4838c:	stp	x25, x26, [sp, #64]
   48390:	stp	x27, x28, [sp, #80]
   48394:	mov	x22, x1
   48398:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4839c:	ldr	x1, [x0, #2576]
   483a0:	add	x0, x0, #0xa10
   483a4:	blr	x1
   483a8:	mrs	x1, tpidr_el0
   483ac:	ldr	w25, [x1, x0]
   483b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   483b4:	ldr	x3, [x0, #2512]
   483b8:	add	x0, x0, #0x9d0
   483bc:	blr	x3
   483c0:	add	x3, x1, x0
   483c4:	ldr	x26, [x1, x0]
   483c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   483cc:	ldr	x4, [x0, #2544]
   483d0:	add	x0, x0, #0x9f0
   483d4:	blr	x4
   483d8:	ldr	x27, [x1, x0]
   483dc:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   483e0:	str	x4, [x3]
   483e4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   483e8:	str	x3, [x1, x0]
   483ec:	neg	x2, x2, lsl #1
   483f0:	cmp	x2, #0x0
   483f4:	b.le	48408 <mpfr_sec@@Base+0xa4>
   483f8:	ldr	x0, [x20]
   483fc:	add	x0, x0, #0x1
   48400:	cmp	x2, x0
   48404:	b.hi	48608 <mpfr_sec@@Base+0x2a4>  // b.pmore
   48408:	stp	x23, x24, [sp, #48]
   4840c:	ldr	x21, [x20]
   48410:	cmp	x21, #0x1
   48414:	b.eq	48694 <mpfr_sec@@Base+0x330>  // b.none
   48418:	b.le	4867c <mpfr_sec@@Base+0x318>
   4841c:	sub	x19, x21, #0x1
   48420:	clz	x0, x19
   48424:	mov	w19, #0x40                  	// #64
   48428:	sub	w19, w19, w0
   4842c:	sxtw	x19, w19
   48430:	add	x19, x19, x21
   48434:	add	x19, x19, #0x3
   48438:	mov	x1, x19
   4843c:	add	x0, sp, #0x70
   48440:	bl	ca80 <mpfr_init2@plt>
   48444:	mov	x0, #0x40                  	// #64
   48448:	str	x0, [sp, #104]
   4844c:	mrs	x24, tpidr_el0
   48450:	add	x23, sp, #0x70
   48454:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48458:	ldr	x1, [x0, #2576]
   4845c:	add	x0, x0, #0xa10
   48460:	blr	x1
   48464:	add	x28, x24, x0
   48468:	str	wzr, [x24, x0]
   4846c:	mov	w2, #0x1                   	// #1
   48470:	mov	x1, x22
   48474:	mov	x0, x23
   48478:	bl	c430 <mpfr_cos@plt>
   4847c:	ldr	w0, [x28]
   48480:	tbnz	w0, #1, 4869c <mpfr_sec@@Base+0x338>
   48484:	mov	w3, #0x0                   	// #0
   48488:	mov	x2, x23
   4848c:	mov	x1, #0x1                   	// #1
   48490:	mov	x0, x23
   48494:	bl	c2f0 <mpfr_ui_div@plt>
   48498:	ldr	x1, [sp, #128]
   4849c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   484a0:	cmp	x1, x0
   484a4:	b.le	48718 <mpfr_sec@@Base+0x3b4>
   484a8:	ldr	w0, [sp, #100]
   484ac:	cmp	w0, #0x0
   484b0:	cinc	x3, x21, eq  // eq = none
   484b4:	ldr	x0, [sp, #112]
   484b8:	add	x1, x0, #0x3e
   484bc:	subs	x0, x0, #0x1
   484c0:	csel	x1, x1, x0, mi  // mi = first
   484c4:	asr	x1, x1, #6
   484c8:	sub	x2, x19, #0x2
   484cc:	add	x1, x1, #0x1
   484d0:	ldr	x0, [sp, #136]
   484d4:	bl	c370 <mpfr_round_p@plt>
   484d8:	cbz	w0, 48718 <mpfr_sec@@Base+0x3b4>
   484dc:	add	x21, sp, #0x70
   484e0:	ldr	w3, [sp, #120]
   484e4:	ldr	w2, [sp, #100]
   484e8:	mov	x1, x21
   484ec:	mov	x0, x20
   484f0:	bl	c6a0 <mpfr_set4@plt>
   484f4:	mov	w19, w0
   484f8:	mov	x0, x21
   484fc:	bl	c070 <mpfr_clear@plt>
   48500:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48504:	ldr	x1, [x0, #2576]
   48508:	add	x0, x0, #0xa10
   4850c:	blr	x1
   48510:	mrs	x1, tpidr_el0
   48514:	str	w25, [x1, x0]
   48518:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4851c:	ldr	x2, [x0, #2512]
   48520:	add	x0, x0, #0x9d0
   48524:	blr	x2
   48528:	str	x26, [x1, x0]
   4852c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48530:	ldr	x2, [x0, #2544]
   48534:	add	x0, x0, #0x9f0
   48538:	blr	x2
   4853c:	str	x27, [x1, x0]
   48540:	ldr	x0, [x20, #16]
   48544:	cmp	x27, x0
   48548:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   4854c:	b.gt	487a8 <mpfr_sec@@Base+0x444>
   48550:	cbnz	w19, 4876c <mpfr_sec@@Base+0x408>
   48554:	ldp	x21, x22, [sp, #32]
   48558:	ldp	x23, x24, [sp, #48]
   4855c:	ldp	x25, x26, [sp, #64]
   48560:	ldp	x27, x28, [sp, #80]
   48564:	b	48798 <mpfr_sec@@Base+0x434>
   48568:	mov	x0, #0x2                   	// #2
   4856c:	movk	x0, #0x8000, lsl #48
   48570:	cmp	x2, x0
   48574:	b.eq	485bc <mpfr_sec@@Base+0x258>  // b.none
   48578:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4857c:	cmp	x2, x0
   48580:	b.ne	485ec <mpfr_sec@@Base+0x288>  // b.any
   48584:	mov	x0, #0x2                   	// #2
   48588:	movk	x0, #0x8000, lsl #48
   4858c:	str	x0, [x20, #16]
   48590:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48594:	ldr	x1, [x0, #2576]
   48598:	add	x0, x0, #0xa10
   4859c:	blr	x1
   485a0:	mrs	x1, tpidr_el0
   485a4:	add	x0, x1, x0
   485a8:	ldr	w1, [x0]
   485ac:	orr	w1, w1, #0x4
   485b0:	str	w1, [x0]
   485b4:	mov	w19, #0x0                   	// #0
   485b8:	b	48798 <mpfr_sec@@Base+0x434>
   485bc:	str	x0, [x20, #16]
   485c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   485c4:	ldr	x1, [x0, #2576]
   485c8:	add	x0, x0, #0xa10
   485cc:	blr	x1
   485d0:	mrs	x1, tpidr_el0
   485d4:	add	x0, x1, x0
   485d8:	ldr	w1, [x0]
   485dc:	orr	w1, w1, #0x4
   485e0:	str	w1, [x0]
   485e4:	mov	w19, #0x0                   	// #0
   485e8:	b	48798 <mpfr_sec@@Base+0x434>
   485ec:	ldr	w3, [sp, #100]
   485f0:	mov	x2, #0x0                   	// #0
   485f4:	mov	x1, #0x1                   	// #1
   485f8:	mov	x0, x20
   485fc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   48600:	mov	w19, w0
   48604:	b	48798 <mpfr_sec@@Base+0x434>
   48608:	ldr	w4, [sp, #100]
   4860c:	mov	w3, #0x1                   	// #1
   48610:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   48614:	ldr	x1, [x1, #3928]
   48618:	mov	x0, x20
   4861c:	bl	c540 <mpfr_round_near_x@plt>
   48620:	mov	w19, w0
   48624:	cbz	w0, 48408 <mpfr_sec@@Base+0xa4>
   48628:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4862c:	ldr	x1, [x0, #2576]
   48630:	add	x0, x0, #0xa10
   48634:	blr	x1
   48638:	mrs	x1, tpidr_el0
   4863c:	str	w25, [x1, x0]
   48640:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48644:	ldr	x2, [x0, #2512]
   48648:	add	x0, x0, #0x9d0
   4864c:	blr	x2
   48650:	str	x26, [x1, x0]
   48654:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48658:	ldr	x2, [x0, #2544]
   4865c:	add	x0, x0, #0x9f0
   48660:	blr	x2
   48664:	str	x27, [x1, x0]
   48668:	ldr	x0, [x20, #16]
   4866c:	cmp	x27, x0
   48670:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   48674:	b.le	48770 <mpfr_sec@@Base+0x40c>
   48678:	b	487ac <mpfr_sec@@Base+0x448>
   4867c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   48680:	add	x2, x2, #0xfa8
   48684:	mov	w1, #0x43                  	// #67
   48688:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4868c:	add	x0, x0, #0xf08
   48690:	bl	cb40 <mpfr_assert_fail@plt>
   48694:	mov	x19, #0x0                   	// #0
   48698:	b	48430 <mpfr_sec@@Base+0xcc>
   4869c:	ldr	w19, [sp, #120]
   486a0:	add	x0, sp, #0x70
   486a4:	bl	c070 <mpfr_clear@plt>
   486a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   486ac:	ldr	x1, [x0, #2576]
   486b0:	add	x0, x0, #0xa10
   486b4:	blr	x1
   486b8:	mrs	x1, tpidr_el0
   486bc:	str	w25, [x1, x0]
   486c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   486c4:	ldr	x2, [x0, #2512]
   486c8:	add	x0, x0, #0x9d0
   486cc:	blr	x2
   486d0:	str	x26, [x1, x0]
   486d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   486d8:	ldr	x2, [x0, #2544]
   486dc:	add	x0, x0, #0x9f0
   486e0:	blr	x2
   486e4:	str	x27, [x1, x0]
   486e8:	ldr	w0, [sp, #100]
   486ec:	cmp	w0, #0x0
   486f0:	mov	w2, w19
   486f4:	csinc	w1, w0, wzr, ne  // ne = any
   486f8:	mov	x0, x20
   486fc:	bl	c3c0 <mpfr_underflow@plt>
   48700:	mov	w19, w0
   48704:	ldp	x21, x22, [sp, #32]
   48708:	ldp	x23, x24, [sp, #48]
   4870c:	ldp	x25, x26, [sp, #64]
   48710:	ldp	x27, x28, [sp, #80]
   48714:	b	48798 <mpfr_sec@@Base+0x434>
   48718:	mov	x0, #0xfffffffffffffeff    	// #-257
   4871c:	movk	x0, #0x7fff, lsl #48
   48720:	sub	x0, x0, x19
   48724:	ldr	x1, [sp, #104]
   48728:	cmp	x0, x1
   4872c:	b.lt	48754 <mpfr_sec@@Base+0x3f0>  // b.tstop
   48730:	ldr	x0, [sp, #104]
   48734:	add	x19, x19, x0
   48738:	add	x0, x19, x19, lsr #63
   4873c:	asr	x0, x0, #1
   48740:	str	x0, [sp, #104]
   48744:	mov	x1, x19
   48748:	mov	x0, x23
   4874c:	bl	bed0 <mpfr_set_prec@plt>
   48750:	b	48454 <mpfr_sec@@Base+0xf0>
   48754:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   48758:	add	x2, x2, #0x18
   4875c:	mov	w1, #0x5f                  	// #95
   48760:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   48764:	add	x0, x0, #0xf08
   48768:	bl	cb40 <mpfr_assert_fail@plt>
   4876c:	ldp	x23, x24, [sp, #48]
   48770:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48774:	ldr	x1, [x0, #2576]
   48778:	add	x0, x0, #0xa10
   4877c:	blr	x1
   48780:	orr	w25, w25, #0x8
   48784:	mrs	x1, tpidr_el0
   48788:	str	w25, [x1, x0]
   4878c:	ldp	x21, x22, [sp, #32]
   48790:	ldp	x25, x26, [sp, #64]
   48794:	ldp	x27, x28, [sp, #80]
   48798:	mov	w0, w19
   4879c:	ldp	x19, x20, [sp, #16]
   487a0:	ldp	x29, x30, [sp], #144
   487a4:	ret
   487a8:	ldp	x23, x24, [sp, #48]
   487ac:	ldr	w2, [sp, #100]
   487b0:	mov	w1, w19
   487b4:	mov	x0, x20
   487b8:	bl	cb30 <mpfr_check_range@plt>
   487bc:	mov	w19, w0
   487c0:	ldp	x21, x22, [sp, #32]
   487c4:	ldp	x25, x26, [sp, #64]
   487c8:	ldp	x27, x28, [sp, #80]
   487cc:	b	48798 <mpfr_sec@@Base+0x434>

00000000000487d0 <mpfr_csc@@Base>:
   487d0:	stp	x29, x30, [sp, #-144]!
   487d4:	mov	x29, sp
   487d8:	stp	x19, x20, [sp, #16]
   487dc:	stp	x21, x22, [sp, #32]
   487e0:	stp	x27, x28, [sp, #80]
   487e4:	mov	x22, x0
   487e8:	mov	x20, x1
   487ec:	mov	w28, w2
   487f0:	ldr	x2, [x1, #16]
   487f4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   487f8:	cmp	x2, x0
   487fc:	b.le	489fc <mpfr_csc@@Base+0x22c>
   48800:	stp	x23, x24, [sp, #48]
   48804:	stp	x25, x26, [sp, #64]
   48808:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4880c:	ldr	x1, [x0, #2576]
   48810:	add	x0, x0, #0xa10
   48814:	blr	x1
   48818:	mrs	x1, tpidr_el0
   4881c:	ldr	w24, [x1, x0]
   48820:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48824:	ldr	x3, [x0, #2512]
   48828:	add	x0, x0, #0x9d0
   4882c:	blr	x3
   48830:	add	x3, x1, x0
   48834:	ldr	x25, [x1, x0]
   48838:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4883c:	ldr	x4, [x0, #2544]
   48840:	add	x0, x0, #0x9f0
   48844:	blr	x4
   48848:	ldr	x26, [x1, x0]
   4884c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   48850:	str	x4, [x3]
   48854:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   48858:	str	x3, [x1, x0]
   4885c:	ldr	x21, [x22]
   48860:	ldr	x0, [x20]
   48864:	cmp	x0, x21
   48868:	csel	x0, x0, x21, ge  // ge = tcont
   4886c:	neg	x0, x0, lsl #1
   48870:	cmp	x2, x0
   48874:	b.le	48abc <mpfr_csc@@Base+0x2ec>
   48878:	cmp	x21, #0x1
   4887c:	b.eq	48b74 <mpfr_csc@@Base+0x3a4>  // b.none
   48880:	b.le	48b5c <mpfr_csc@@Base+0x38c>
   48884:	sub	x19, x21, #0x1
   48888:	clz	x0, x19
   4888c:	mov	w19, #0x40                  	// #64
   48890:	sub	w19, w19, w0
   48894:	sxtw	x19, w19
   48898:	add	x19, x21, x19
   4889c:	add	x19, x19, #0x3
   488a0:	mov	x1, x19
   488a4:	add	x0, sp, #0x70
   488a8:	bl	ca80 <mpfr_init2@plt>
   488ac:	mov	x0, #0x40                  	// #64
   488b0:	str	x0, [sp, #104]
   488b4:	mrs	x27, tpidr_el0
   488b8:	add	x23, sp, #0x70
   488bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   488c0:	ldr	x1, [x0, #2576]
   488c4:	add	x0, x0, #0xa10
   488c8:	blr	x1
   488cc:	add	x1, x27, x0
   488d0:	str	x1, [sp, #96]
   488d4:	str	wzr, [x27, x0]
   488d8:	mov	w2, #0x1                   	// #1
   488dc:	mov	x1, x20
   488e0:	mov	x0, x23
   488e4:	bl	c450 <mpfr_sin@plt>
   488e8:	ldr	x1, [sp, #96]
   488ec:	ldr	w0, [x1]
   488f0:	tbnz	w0, #1, 48b7c <mpfr_csc@@Base+0x3ac>
   488f4:	mov	w3, #0x0                   	// #0
   488f8:	mov	x2, x23
   488fc:	mov	x1, #0x1                   	// #1
   48900:	mov	x0, x23
   48904:	bl	c2f0 <mpfr_ui_div@plt>
   48908:	ldr	x1, [sp, #128]
   4890c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48910:	cmp	x1, x0
   48914:	b.le	48bec <mpfr_csc@@Base+0x41c>
   48918:	cmp	w28, #0x0
   4891c:	cinc	x3, x21, eq  // eq = none
   48920:	ldr	x0, [sp, #112]
   48924:	add	x1, x0, #0x3e
   48928:	subs	x0, x0, #0x1
   4892c:	csel	x1, x1, x0, mi  // mi = first
   48930:	asr	x1, x1, #6
   48934:	sub	x2, x19, #0x2
   48938:	add	x1, x1, #0x1
   4893c:	ldr	x0, [sp, #136]
   48940:	bl	c370 <mpfr_round_p@plt>
   48944:	cbz	w0, 48bec <mpfr_csc@@Base+0x41c>
   48948:	add	x20, sp, #0x70
   4894c:	ldr	w3, [sp, #120]
   48950:	mov	w2, w28
   48954:	mov	x1, x20
   48958:	mov	x0, x22
   4895c:	bl	c6a0 <mpfr_set4@plt>
   48960:	mov	w19, w0
   48964:	mov	x0, x20
   48968:	bl	c070 <mpfr_clear@plt>
   4896c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48970:	ldr	x1, [x0, #2576]
   48974:	add	x0, x0, #0xa10
   48978:	blr	x1
   4897c:	mrs	x1, tpidr_el0
   48980:	str	w24, [x1, x0]
   48984:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48988:	ldr	x2, [x0, #2512]
   4898c:	add	x0, x0, #0x9d0
   48990:	blr	x2
   48994:	str	x25, [x1, x0]
   48998:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4899c:	ldr	x2, [x0, #2544]
   489a0:	add	x0, x0, #0x9f0
   489a4:	blr	x2
   489a8:	str	x26, [x1, x0]
   489ac:	ldr	x0, [x22, #16]
   489b0:	cmp	x26, x0
   489b4:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   489b8:	b.gt	48c40 <mpfr_csc@@Base+0x470>
   489bc:	cbz	w19, 48c60 <mpfr_csc@@Base+0x490>
   489c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   489c4:	ldr	x1, [x0, #2576]
   489c8:	add	x0, x0, #0xa10
   489cc:	blr	x1
   489d0:	orr	w24, w24, #0x8
   489d4:	mrs	x1, tpidr_el0
   489d8:	str	w24, [x1, x0]
   489dc:	ldp	x23, x24, [sp, #48]
   489e0:	ldp	x25, x26, [sp, #64]
   489e4:	mov	w0, w19
   489e8:	ldp	x19, x20, [sp, #16]
   489ec:	ldp	x21, x22, [sp, #32]
   489f0:	ldp	x27, x28, [sp, #80]
   489f4:	ldp	x29, x30, [sp], #144
   489f8:	ret
   489fc:	mov	x0, #0x2                   	// #2
   48a00:	movk	x0, #0x8000, lsl #48
   48a04:	cmp	x2, x0
   48a08:	b.eq	48a54 <mpfr_csc@@Base+0x284>  // b.none
   48a0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48a10:	cmp	x2, x0
   48a14:	b.eq	48a84 <mpfr_csc@@Base+0x2b4>  // b.none
   48a18:	ldr	w0, [x1, #8]
   48a1c:	str	w0, [x22, #8]
   48a20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48a24:	str	x0, [x22, #16]
   48a28:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48a2c:	ldr	x1, [x0, #2576]
   48a30:	add	x0, x0, #0xa10
   48a34:	blr	x1
   48a38:	mrs	x1, tpidr_el0
   48a3c:	add	x0, x1, x0
   48a40:	ldr	w1, [x0]
   48a44:	orr	w1, w1, #0x20
   48a48:	str	w1, [x0]
   48a4c:	mov	w19, #0x0                   	// #0
   48a50:	b	489e4 <mpfr_csc@@Base+0x214>
   48a54:	str	x0, [x22, #16]
   48a58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48a5c:	ldr	x1, [x0, #2576]
   48a60:	add	x0, x0, #0xa10
   48a64:	blr	x1
   48a68:	mrs	x1, tpidr_el0
   48a6c:	add	x0, x1, x0
   48a70:	ldr	w1, [x0]
   48a74:	orr	w1, w1, #0x4
   48a78:	str	w1, [x0]
   48a7c:	mov	w19, #0x0                   	// #0
   48a80:	b	489e4 <mpfr_csc@@Base+0x214>
   48a84:	mov	x0, #0x2                   	// #2
   48a88:	movk	x0, #0x8000, lsl #48
   48a8c:	str	x0, [x22, #16]
   48a90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48a94:	ldr	x1, [x0, #2576]
   48a98:	add	x0, x0, #0xa10
   48a9c:	blr	x1
   48aa0:	mrs	x1, tpidr_el0
   48aa4:	add	x0, x1, x0
   48aa8:	ldr	w1, [x0]
   48aac:	orr	w1, w1, #0x4
   48ab0:	str	w1, [x0]
   48ab4:	mov	w19, #0x0                   	// #0
   48ab8:	b	489e4 <mpfr_csc@@Base+0x214>
   48abc:	ldr	w21, [x20, #8]
   48ac0:	mov	w3, w28
   48ac4:	mov	x2, x20
   48ac8:	mov	x1, #0x1                   	// #1
   48acc:	mov	x0, x22
   48ad0:	bl	c2f0 <mpfr_ui_div@plt>
   48ad4:	mov	w19, w0
   48ad8:	cbnz	w0, 48af8 <mpfr_csc@@Base+0x328>
   48adc:	cmp	w28, #0x4
   48ae0:	b.eq	48b18 <mpfr_csc@@Base+0x348>  // b.none
   48ae4:	cmp	w28, #0x2
   48ae8:	b.eq	48b34 <mpfr_csc@@Base+0x364>  // b.none
   48aec:	neg	w19, w21
   48af0:	cmp	w28, #0x3
   48af4:	b.eq	48b44 <mpfr_csc@@Base+0x374>  // b.none
   48af8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48afc:	ldr	x1, [x0, #2576]
   48b00:	add	x0, x0, #0xa10
   48b04:	blr	x1
   48b08:	mrs	x1, tpidr_el0
   48b0c:	ldr	w0, [x1, x0]
   48b10:	orr	w24, w24, w0
   48b14:	b	4896c <mpfr_csc@@Base+0x19c>
   48b18:	cmp	w21, #0x0
   48b1c:	b.le	48b44 <mpfr_csc@@Base+0x374>
   48b20:	mov	x0, x22
   48b24:	bl	c120 <mpfr_nextabove@plt>
   48b28:	mov	w19, #0x1                   	// #1
   48b2c:	mov	w28, #0x2                   	// #2
   48b30:	b	48af8 <mpfr_csc@@Base+0x328>
   48b34:	mov	w19, #0x1                   	// #1
   48b38:	cmp	w21, #0x0
   48b3c:	b.le	48af8 <mpfr_csc@@Base+0x328>
   48b40:	b	48b20 <mpfr_csc@@Base+0x350>
   48b44:	mov	w19, #0xffffffff            	// #-1
   48b48:	mov	w28, #0x3                   	// #3
   48b4c:	tbz	w21, #31, 48af8 <mpfr_csc@@Base+0x328>
   48b50:	mov	x0, x22
   48b54:	bl	bdd0 <mpfr_nextbelow@plt>
   48b58:	b	48af8 <mpfr_csc@@Base+0x328>
   48b5c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   48b60:	add	x2, x2, #0xfa8
   48b64:	mov	w1, #0x43                  	// #67
   48b68:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   48b6c:	add	x0, x0, #0xf08
   48b70:	bl	cb40 <mpfr_assert_fail@plt>
   48b74:	mov	x19, #0x0                   	// #0
   48b78:	b	48898 <mpfr_csc@@Base+0xc8>
   48b7c:	ldr	w19, [sp, #120]
   48b80:	add	x0, sp, #0x70
   48b84:	bl	c070 <mpfr_clear@plt>
   48b88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48b8c:	ldr	x1, [x0, #2576]
   48b90:	add	x0, x0, #0xa10
   48b94:	blr	x1
   48b98:	mrs	x1, tpidr_el0
   48b9c:	str	w24, [x1, x0]
   48ba0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48ba4:	ldr	x2, [x0, #2512]
   48ba8:	add	x0, x0, #0x9d0
   48bac:	blr	x2
   48bb0:	str	x25, [x1, x0]
   48bb4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48bb8:	ldr	x2, [x0, #2544]
   48bbc:	add	x0, x0, #0x9f0
   48bc0:	blr	x2
   48bc4:	str	x26, [x1, x0]
   48bc8:	cmp	w28, #0x0
   48bcc:	mov	w2, w19
   48bd0:	csinc	w1, w28, wzr, ne  // ne = any
   48bd4:	mov	x0, x22
   48bd8:	bl	c3c0 <mpfr_underflow@plt>
   48bdc:	mov	w19, w0
   48be0:	ldp	x23, x24, [sp, #48]
   48be4:	ldp	x25, x26, [sp, #64]
   48be8:	b	489e4 <mpfr_csc@@Base+0x214>
   48bec:	mov	x0, #0xfffffffffffffeff    	// #-257
   48bf0:	movk	x0, #0x7fff, lsl #48
   48bf4:	sub	x0, x0, x19
   48bf8:	ldr	x1, [sp, #104]
   48bfc:	cmp	x0, x1
   48c00:	b.lt	48c28 <mpfr_csc@@Base+0x458>  // b.tstop
   48c04:	ldr	x0, [sp, #104]
   48c08:	add	x19, x19, x0
   48c0c:	add	x0, x19, x19, lsr #63
   48c10:	asr	x0, x0, #1
   48c14:	str	x0, [sp, #104]
   48c18:	mov	x1, x19
   48c1c:	mov	x0, x23
   48c20:	bl	bed0 <mpfr_set_prec@plt>
   48c24:	b	488bc <mpfr_csc@@Base+0xec>
   48c28:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   48c2c:	add	x2, x2, #0x18
   48c30:	mov	w1, #0x5f                  	// #95
   48c34:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   48c38:	add	x0, x0, #0xf08
   48c3c:	bl	cb40 <mpfr_assert_fail@plt>
   48c40:	mov	w2, w28
   48c44:	mov	w1, w19
   48c48:	mov	x0, x22
   48c4c:	bl	cb30 <mpfr_check_range@plt>
   48c50:	mov	w19, w0
   48c54:	ldp	x23, x24, [sp, #48]
   48c58:	ldp	x25, x26, [sp, #64]
   48c5c:	b	489e4 <mpfr_csc@@Base+0x214>
   48c60:	ldp	x23, x24, [sp, #48]
   48c64:	ldp	x25, x26, [sp, #64]
   48c68:	b	489e4 <mpfr_csc@@Base+0x214>

0000000000048c6c <mpfr_cot@@Base>:
   48c6c:	stp	x29, x30, [sp, #-144]!
   48c70:	mov	x29, sp
   48c74:	stp	x19, x20, [sp, #16]
   48c78:	stp	x21, x22, [sp, #32]
   48c7c:	stp	x23, x24, [sp, #48]
   48c80:	mov	x21, x0
   48c84:	mov	x20, x1
   48c88:	mov	w23, w2
   48c8c:	ldr	x2, [x1, #16]
   48c90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48c94:	cmp	x2, x0
   48c98:	b.le	48e98 <mpfr_cot@@Base+0x22c>
   48c9c:	stp	x25, x26, [sp, #64]
   48ca0:	stp	x27, x28, [sp, #80]
   48ca4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48ca8:	ldr	x1, [x0, #2576]
   48cac:	add	x0, x0, #0xa10
   48cb0:	blr	x1
   48cb4:	mrs	x1, tpidr_el0
   48cb8:	ldr	w24, [x1, x0]
   48cbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48cc0:	ldr	x3, [x0, #2512]
   48cc4:	add	x0, x0, #0x9d0
   48cc8:	blr	x3
   48ccc:	add	x3, x1, x0
   48cd0:	ldr	x26, [x1, x0]
   48cd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48cd8:	ldr	x4, [x0, #2544]
   48cdc:	add	x0, x0, #0x9f0
   48ce0:	blr	x4
   48ce4:	ldr	x27, [x1, x0]
   48ce8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   48cec:	str	x4, [x3]
   48cf0:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   48cf4:	str	x3, [x1, x0]
   48cf8:	ldr	x22, [x21]
   48cfc:	ldr	x0, [x20]
   48d00:	cmp	x0, x22
   48d04:	csel	x0, x0, x22, ge  // ge = tcont
   48d08:	neg	x0, x0, lsl #1
   48d0c:	cmp	x2, x0
   48d10:	b.lt	48f58 <mpfr_cot@@Base+0x2ec>  // b.tstop
   48d14:	cmp	x22, #0x1
   48d18:	b.eq	490a4 <mpfr_cot@@Base+0x438>  // b.none
   48d1c:	b.le	4908c <mpfr_cot@@Base+0x420>
   48d20:	sub	x19, x22, #0x1
   48d24:	clz	x0, x19
   48d28:	mov	w19, #0x40                  	// #64
   48d2c:	sub	w19, w19, w0
   48d30:	sxtw	x19, w19
   48d34:	add	x19, x22, x19
   48d38:	add	x19, x19, #0x3
   48d3c:	mov	x1, x19
   48d40:	add	x0, sp, #0x70
   48d44:	bl	ca80 <mpfr_init2@plt>
   48d48:	mov	x0, #0x40                  	// #64
   48d4c:	str	x0, [sp, #104]
   48d50:	mrs	x28, tpidr_el0
   48d54:	add	x25, sp, #0x70
   48d58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48d5c:	ldr	x1, [x0, #2576]
   48d60:	add	x0, x0, #0xa10
   48d64:	blr	x1
   48d68:	add	x1, x28, x0
   48d6c:	str	x1, [sp, #96]
   48d70:	str	wzr, [x28, x0]
   48d74:	mov	w2, #0x1                   	// #1
   48d78:	mov	x1, x20
   48d7c:	mov	x0, x25
   48d80:	bl	bbe0 <mpfr_tan@plt>
   48d84:	ldr	x1, [sp, #96]
   48d88:	ldr	w0, [x1]
   48d8c:	tbnz	w0, #1, 490ac <mpfr_cot@@Base+0x440>
   48d90:	mov	w3, #0x0                   	// #0
   48d94:	mov	x2, x25
   48d98:	mov	x1, #0x1                   	// #1
   48d9c:	mov	x0, x25
   48da0:	bl	c2f0 <mpfr_ui_div@plt>
   48da4:	ldr	x1, [sp, #128]
   48da8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48dac:	cmp	x1, x0
   48db0:	b.le	4911c <mpfr_cot@@Base+0x4b0>
   48db4:	cmp	w23, #0x0
   48db8:	cinc	x3, x22, eq  // eq = none
   48dbc:	ldr	x0, [sp, #112]
   48dc0:	add	x1, x0, #0x3e
   48dc4:	subs	x0, x0, #0x1
   48dc8:	csel	x1, x1, x0, mi  // mi = first
   48dcc:	asr	x1, x1, #6
   48dd0:	sub	x2, x19, #0x2
   48dd4:	add	x1, x1, #0x1
   48dd8:	ldr	x0, [sp, #136]
   48ddc:	bl	c370 <mpfr_round_p@plt>
   48de0:	cbz	w0, 4911c <mpfr_cot@@Base+0x4b0>
   48de4:	add	x20, sp, #0x70
   48de8:	ldr	w3, [sp, #120]
   48dec:	mov	w2, w23
   48df0:	mov	x1, x20
   48df4:	mov	x0, x21
   48df8:	bl	c6a0 <mpfr_set4@plt>
   48dfc:	mov	w19, w0
   48e00:	mov	x0, x20
   48e04:	bl	c070 <mpfr_clear@plt>
   48e08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48e0c:	ldr	x1, [x0, #2576]
   48e10:	add	x0, x0, #0xa10
   48e14:	blr	x1
   48e18:	mrs	x1, tpidr_el0
   48e1c:	str	w24, [x1, x0]
   48e20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48e24:	ldr	x2, [x0, #2512]
   48e28:	add	x0, x0, #0x9d0
   48e2c:	blr	x2
   48e30:	str	x26, [x1, x0]
   48e34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48e38:	ldr	x2, [x0, #2544]
   48e3c:	add	x0, x0, #0x9f0
   48e40:	blr	x2
   48e44:	str	x27, [x1, x0]
   48e48:	ldr	x0, [x21, #16]
   48e4c:	cmp	x27, x0
   48e50:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   48e54:	b.gt	49170 <mpfr_cot@@Base+0x504>
   48e58:	cbz	w19, 49190 <mpfr_cot@@Base+0x524>
   48e5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48e60:	ldr	x1, [x0, #2576]
   48e64:	add	x0, x0, #0xa10
   48e68:	blr	x1
   48e6c:	orr	w24, w24, #0x8
   48e70:	mrs	x1, tpidr_el0
   48e74:	str	w24, [x1, x0]
   48e78:	ldp	x25, x26, [sp, #64]
   48e7c:	ldp	x27, x28, [sp, #80]
   48e80:	mov	w0, w19
   48e84:	ldp	x19, x20, [sp, #16]
   48e88:	ldp	x21, x22, [sp, #32]
   48e8c:	ldp	x23, x24, [sp, #48]
   48e90:	ldp	x29, x30, [sp], #144
   48e94:	ret
   48e98:	mov	x0, #0x2                   	// #2
   48e9c:	movk	x0, #0x8000, lsl #48
   48ea0:	cmp	x2, x0
   48ea4:	b.eq	48ef0 <mpfr_cot@@Base+0x284>  // b.none
   48ea8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48eac:	cmp	x2, x0
   48eb0:	b.eq	48f20 <mpfr_cot@@Base+0x2b4>  // b.none
   48eb4:	ldr	w0, [x1, #8]
   48eb8:	str	w0, [x21, #8]
   48ebc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48ec0:	str	x0, [x21, #16]
   48ec4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48ec8:	ldr	x1, [x0, #2576]
   48ecc:	add	x0, x0, #0xa10
   48ed0:	blr	x1
   48ed4:	mrs	x1, tpidr_el0
   48ed8:	add	x0, x1, x0
   48edc:	ldr	w1, [x0]
   48ee0:	orr	w1, w1, #0x20
   48ee4:	str	w1, [x0]
   48ee8:	mov	w19, #0x0                   	// #0
   48eec:	b	48e80 <mpfr_cot@@Base+0x214>
   48ef0:	str	x0, [x21, #16]
   48ef4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48ef8:	ldr	x1, [x0, #2576]
   48efc:	add	x0, x0, #0xa10
   48f00:	blr	x1
   48f04:	mrs	x1, tpidr_el0
   48f08:	add	x0, x1, x0
   48f0c:	ldr	w1, [x0]
   48f10:	orr	w1, w1, #0x4
   48f14:	str	w1, [x0]
   48f18:	mov	w19, #0x0                   	// #0
   48f1c:	b	48e80 <mpfr_cot@@Base+0x214>
   48f20:	mov	x0, #0x2                   	// #2
   48f24:	movk	x0, #0x8000, lsl #48
   48f28:	str	x0, [x21, #16]
   48f2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48f30:	ldr	x1, [x0, #2576]
   48f34:	add	x0, x0, #0xa10
   48f38:	blr	x1
   48f3c:	mrs	x1, tpidr_el0
   48f40:	add	x0, x1, x0
   48f44:	ldr	w1, [x0]
   48f48:	orr	w1, w1, #0x4
   48f4c:	str	w1, [x0]
   48f50:	mov	w19, #0x0                   	// #0
   48f54:	b	48e80 <mpfr_cot@@Base+0x214>
   48f58:	ldr	w19, [x20, #8]
   48f5c:	mov	x0, #0x2                   	// #2
   48f60:	movk	x0, #0xc000, lsl #48
   48f64:	cmp	x2, x0
   48f68:	b.eq	48fc0 <mpfr_cot@@Base+0x354>  // b.none
   48f6c:	mov	w3, w23
   48f70:	mov	x2, x20
   48f74:	mov	x1, #0x1                   	// #1
   48f78:	mov	x0, x21
   48f7c:	bl	c2f0 <mpfr_ui_div@plt>
   48f80:	mov	w20, w0
   48f84:	cbnz	w0, 49068 <mpfr_cot@@Base+0x3fc>
   48f88:	cmp	w23, #0x4
   48f8c:	b.eq	48ffc <mpfr_cot@@Base+0x390>  // b.none
   48f90:	cmp	w23, #0x2
   48f94:	b.eq	49004 <mpfr_cot@@Base+0x398>  // b.none
   48f98:	cmp	w23, #0x1
   48f9c:	cset	w0, eq  // eq = none
   48fa0:	cmp	w19, #0x0
   48fa4:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   48fa8:	b.eq	4903c <mpfr_cot@@Base+0x3d0>  // b.none
   48fac:	mov	w23, #0x1                   	// #1
   48fb0:	mov	x0, x21
   48fb4:	bl	c120 <mpfr_nextabove@plt>
   48fb8:	mov	w19, #0x1                   	// #1
   48fbc:	b	49014 <mpfr_cot@@Base+0x3a8>
   48fc0:	mov	x0, x20
   48fc4:	bl	bf00 <mpfr_powerof2_raw@plt>
   48fc8:	cbz	w0, 48f6c <mpfr_cot@@Base+0x300>
   48fcc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   48fd0:	ldr	x1, [x0, #2544]
   48fd4:	add	x0, x0, #0x9f0
   48fd8:	blr	x1
   48fdc:	mov	w3, #0x0                   	// #0
   48fe0:	mrs	x1, tpidr_el0
   48fe4:	ldr	x2, [x1, x0]
   48fe8:	sxtw	x1, w19
   48fec:	mov	x0, x21
   48ff0:	bl	ba80 <mpfr_set_si_2exp@plt>
   48ff4:	mov	w20, #0x1                   	// #1
   48ff8:	b	48f88 <mpfr_cot@@Base+0x31c>
   48ffc:	cmp	w19, #0x0
   49000:	b.le	49030 <mpfr_cot@@Base+0x3c4>
   49004:	mov	w23, #0x2                   	// #2
   49008:	tbnz	w19, #31, 48fb0 <mpfr_cot@@Base+0x344>
   4900c:	mov	w23, #0x2                   	// #2
   49010:	mov	w19, #0x1                   	// #1
   49014:	cbz	w20, 4906c <mpfr_cot@@Base+0x400>
   49018:	mov	w3, w23
   4901c:	mov	x2, #0x1                   	// #1
   49020:	mov	x1, x21
   49024:	mov	x0, x21
   49028:	bl	c2c0 <mpfr_mul_2ui@plt>
   4902c:	b	4906c <mpfr_cot@@Base+0x400>
   49030:	mov	w23, #0x3                   	// #3
   49034:	mov	w19, #0xffffffff            	// #-1
   49038:	b	49014 <mpfr_cot@@Base+0x3a8>
   4903c:	cmp	w0, #0x0
   49040:	ccmp	w23, #0x3, #0x4, eq  // eq = none
   49044:	b.ne	49014 <mpfr_cot@@Base+0x3a8>  // b.any
   49048:	cmp	w19, #0x0
   4904c:	b.le	49060 <mpfr_cot@@Base+0x3f4>
   49050:	mov	x0, x21
   49054:	bl	bdd0 <mpfr_nextbelow@plt>
   49058:	mov	w19, #0xffffffff            	// #-1
   4905c:	b	49014 <mpfr_cot@@Base+0x3a8>
   49060:	mov	w19, #0xffffffff            	// #-1
   49064:	b	49014 <mpfr_cot@@Base+0x3a8>
   49068:	mov	w19, w0
   4906c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49070:	ldr	x1, [x0, #2576]
   49074:	add	x0, x0, #0xa10
   49078:	blr	x1
   4907c:	mrs	x1, tpidr_el0
   49080:	ldr	w0, [x1, x0]
   49084:	orr	w24, w24, w0
   49088:	b	48e08 <mpfr_cot@@Base+0x19c>
   4908c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   49090:	add	x2, x2, #0xfa8
   49094:	mov	w1, #0x43                  	// #67
   49098:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4909c:	add	x0, x0, #0xf08
   490a0:	bl	cb40 <mpfr_assert_fail@plt>
   490a4:	mov	x19, #0x0                   	// #0
   490a8:	b	48d34 <mpfr_cot@@Base+0xc8>
   490ac:	ldr	w19, [sp, #120]
   490b0:	add	x0, sp, #0x70
   490b4:	bl	c070 <mpfr_clear@plt>
   490b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   490bc:	ldr	x1, [x0, #2576]
   490c0:	add	x0, x0, #0xa10
   490c4:	blr	x1
   490c8:	mrs	x1, tpidr_el0
   490cc:	str	w24, [x1, x0]
   490d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   490d4:	ldr	x2, [x0, #2512]
   490d8:	add	x0, x0, #0x9d0
   490dc:	blr	x2
   490e0:	str	x26, [x1, x0]
   490e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   490e8:	ldr	x2, [x0, #2544]
   490ec:	add	x0, x0, #0x9f0
   490f0:	blr	x2
   490f4:	str	x27, [x1, x0]
   490f8:	cmp	w23, #0x0
   490fc:	mov	w2, w19
   49100:	csinc	w1, w23, wzr, ne  // ne = any
   49104:	mov	x0, x21
   49108:	bl	c3c0 <mpfr_underflow@plt>
   4910c:	mov	w19, w0
   49110:	ldp	x25, x26, [sp, #64]
   49114:	ldp	x27, x28, [sp, #80]
   49118:	b	48e80 <mpfr_cot@@Base+0x214>
   4911c:	mov	x0, #0xfffffffffffffeff    	// #-257
   49120:	movk	x0, #0x7fff, lsl #48
   49124:	sub	x0, x0, x19
   49128:	ldr	x1, [sp, #104]
   4912c:	cmp	x0, x1
   49130:	b.lt	49158 <mpfr_cot@@Base+0x4ec>  // b.tstop
   49134:	ldr	x0, [sp, #104]
   49138:	add	x19, x19, x0
   4913c:	add	x0, x19, x19, lsr #63
   49140:	asr	x0, x0, #1
   49144:	str	x0, [sp, #104]
   49148:	mov	x1, x19
   4914c:	mov	x0, x25
   49150:	bl	bed0 <mpfr_set_prec@plt>
   49154:	b	48d58 <mpfr_cot@@Base+0xec>
   49158:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4915c:	add	x2, x2, #0x18
   49160:	mov	w1, #0x5f                  	// #95
   49164:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   49168:	add	x0, x0, #0xf08
   4916c:	bl	cb40 <mpfr_assert_fail@plt>
   49170:	mov	w2, w23
   49174:	mov	w1, w19
   49178:	mov	x0, x21
   4917c:	bl	cb30 <mpfr_check_range@plt>
   49180:	mov	w19, w0
   49184:	ldp	x25, x26, [sp, #64]
   49188:	ldp	x27, x28, [sp, #80]
   4918c:	b	48e80 <mpfr_cot@@Base+0x214>
   49190:	ldp	x25, x26, [sp, #64]
   49194:	ldp	x27, x28, [sp, #80]
   49198:	b	48e80 <mpfr_cot@@Base+0x214>

000000000004919c <mpfr_eint@@Base>:
   4919c:	sub	sp, sp, #0x260
   491a0:	stp	x29, x30, [sp]
   491a4:	mov	x29, sp
   491a8:	stp	x19, x20, [sp, #16]
   491ac:	stp	x27, x28, [sp, #80]
   491b0:	mov	x27, x0
   491b4:	mov	x20, x1
   491b8:	str	w2, [sp, #152]
   491bc:	ldr	x0, [x1, #16]
   491c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   491c4:	cmp	x0, x1
   491c8:	b.le	492c4 <mpfr_eint@@Base+0x128>
   491cc:	stp	x21, x22, [sp, #32]
   491d0:	ldr	x1, [x20]
   491d4:	str	x1, [sp, #512]
   491d8:	ldr	x1, [x20, #24]
   491dc:	str	x1, [sp, #536]
   491e0:	mov	w1, #0x1                   	// #1
   491e4:	str	w1, [sp, #520]
   491e8:	str	x0, [sp, #528]
   491ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   491f0:	ldr	x1, [x0, #2576]
   491f4:	add	x0, x0, #0xa10
   491f8:	blr	x1
   491fc:	mrs	x1, tpidr_el0
   49200:	ldr	w0, [x1, x0]
   49204:	str	w0, [sp, #156]
   49208:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4920c:	ldr	x2, [x0, #2512]
   49210:	add	x0, x0, #0x9d0
   49214:	blr	x2
   49218:	add	x2, x1, x0
   4921c:	ldr	x0, [x1, x0]
   49220:	str	x0, [sp, #160]
   49224:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49228:	ldr	x3, [x0, #2544]
   4922c:	add	x0, x0, #0x9f0
   49230:	blr	x3
   49234:	ldr	x3, [x1, x0]
   49238:	str	x3, [sp, #168]
   4923c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   49240:	str	x3, [x2]
   49244:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   49248:	str	x2, [x1, x0]
   4924c:	ldr	x22, [x27]
   49250:	cmp	x22, #0x1
   49254:	b.eq	493a0 <mpfr_eint@@Base+0x204>  // b.none
   49258:	b.le	49384 <mpfr_eint@@Base+0x1e8>
   4925c:	ldr	x0, [x27]
   49260:	sub	x0, x0, #0x1
   49264:	clz	x1, x0
   49268:	mov	w0, #0x40                  	// #64
   4926c:	sub	w0, w0, w1
   49270:	lsl	w0, w0, #1
   49274:	sxtw	x0, w0
   49278:	add	x22, x22, x0
   4927c:	add	x22, x22, #0x6
   49280:	mov	x1, #0x40                  	// #64
   49284:	add	x0, sp, #0x240
   49288:	bl	ca80 <mpfr_init2@plt>
   4928c:	mov	x1, #0x40                  	// #64
   49290:	add	x0, sp, #0x220
   49294:	bl	ca80 <mpfr_init2@plt>
   49298:	ldr	w0, [x20, #8]
   4929c:	cmp	w0, #0x0
   492a0:	b.gt	493a8 <mpfr_eint@@Base+0x20c>
   492a4:	tbz	w0, #31, 49e80 <mpfr_eint@@Base+0xce4>
   492a8:	ldr	x0, [x20, #16]
   492ac:	cmp	x0, #0x0
   492b0:	b.gt	49650 <mpfr_eint@@Base+0x4b4>
   492b4:	stp	x23, x24, [sp, #48]
   492b8:	stp	x25, x26, [sp, #64]
   492bc:	str	d8, [sp, #96]
   492c0:	b	49440 <mpfr_eint@@Base+0x2a4>
   492c4:	mov	x1, #0x2                   	// #2
   492c8:	movk	x1, #0x8000, lsl #48
   492cc:	cmp	x0, x1
   492d0:	b.eq	4931c <mpfr_eint@@Base+0x180>  // b.none
   492d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   492d8:	cmp	x0, x1
   492dc:	b.eq	4934c <mpfr_eint@@Base+0x1b0>  // b.none
   492e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   492e4:	str	x0, [x27, #16]
   492e8:	mov	w0, #0xffffffff            	// #-1
   492ec:	str	w0, [x27, #8]
   492f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   492f4:	ldr	x1, [x0, #2576]
   492f8:	add	x0, x0, #0xa10
   492fc:	blr	x1
   49300:	mrs	x1, tpidr_el0
   49304:	add	x0, x1, x0
   49308:	ldr	w1, [x0]
   4930c:	orr	w1, w1, #0x20
   49310:	str	w1, [x0]
   49314:	mov	w19, #0x0                   	// #0
   49318:	b	49ea0 <mpfr_eint@@Base+0xd04>
   4931c:	str	x1, [x27, #16]
   49320:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49324:	ldr	x1, [x0, #2576]
   49328:	add	x0, x0, #0xa10
   4932c:	blr	x1
   49330:	mrs	x1, tpidr_el0
   49334:	add	x0, x1, x0
   49338:	ldr	w1, [x0]
   4933c:	orr	w1, w1, #0x4
   49340:	str	w1, [x0]
   49344:	mov	w19, #0x0                   	// #0
   49348:	b	49ea0 <mpfr_eint@@Base+0xd04>
   4934c:	ldr	w0, [x20, #8]
   49350:	cmp	w0, #0x0
   49354:	b.le	4936c <mpfr_eint@@Base+0x1d0>
   49358:	str	x1, [x27, #16]
   4935c:	mov	w0, #0x1                   	// #1
   49360:	str	w0, [x27, #8]
   49364:	mov	w19, #0x0                   	// #0
   49368:	b	49ea0 <mpfr_eint@@Base+0xd04>
   4936c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   49370:	str	x0, [x27, #16]
   49374:	mov	w0, #0xffffffff            	// #-1
   49378:	str	w0, [x27, #8]
   4937c:	mov	w19, #0x0                   	// #0
   49380:	b	49ea0 <mpfr_eint@@Base+0xd04>
   49384:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   49388:	add	x2, x2, #0x848
   4938c:	mov	w1, #0xfa                  	// #250
   49390:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   49394:	add	x0, x0, #0xf18
   49398:	bl	cb40 <mpfr_assert_fail@plt>
   4939c:	b	4925c <mpfr_eint@@Base+0xc0>
   493a0:	mov	x0, #0x0                   	// #0
   493a4:	b	49278 <mpfr_eint@@Base+0xdc>
   493a8:	add	x21, sp, #0x240
   493ac:	mov	w2, #0x2                   	// #2
   493b0:	mov	x1, x20
   493b4:	mov	x0, x21
   493b8:	bl	c090 <mpfr_log@plt>
   493bc:	add	x19, sp, #0x220
   493c0:	mov	w3, #0x3                   	// #3
   493c4:	mov	x2, x21
   493c8:	mov	x1, x20
   493cc:	mov	x0, x19
   493d0:	bl	bb70 <mpfr_sub@plt>
   493d4:	mov	w3, #0x3                   	// #3
   493d8:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   493dc:	ldr	x2, [x2, #4048]
   493e0:	mov	x1, x19
   493e4:	mov	x0, x19
   493e8:	bl	c620 <mpfr_div@plt>
   493ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   493f0:	ldr	x1, [x0, #2544]
   493f4:	add	x0, x0, #0x9f0
   493f8:	blr	x1
   493fc:	mov	x2, #0x0                   	// #0
   49400:	mrs	x1, tpidr_el0
   49404:	ldr	x1, [x1, x0]
   49408:	mov	x0, x19
   4940c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   49410:	tbz	w0, #31, 495d8 <mpfr_eint@@Base+0x43c>
   49414:	ldr	w0, [x20, #8]
   49418:	tbnz	w0, #31, 492a8 <mpfr_eint@@Base+0x10c>
   4941c:	stp	x23, x24, [sp, #48]
   49420:	stp	x25, x26, [sp, #64]
   49424:	str	d8, [sp, #96]
   49428:	ldr	w0, [x20, #8]
   4942c:	cmp	w0, #0x0
   49430:	b.le	49440 <mpfr_eint@@Base+0x2a4>
   49434:	ldr	x0, [x20, #16]
   49438:	cmn	x0, #0x1
   4943c:	b.eq	4970c <mpfr_eint@@Base+0x570>  // b.none
   49440:	mov	x1, x22
   49444:	add	x0, sp, #0x240
   49448:	bl	bed0 <mpfr_set_prec@plt>
   4944c:	mov	x1, x22
   49450:	add	x0, sp, #0x220
   49454:	bl	bed0 <mpfr_set_prec@plt>
   49458:	mov	x0, #0x40                  	// #64
   4945c:	str	x0, [sp, #184]
   49460:	add	x0, sp, #0x220
   49464:	str	x0, [sp, #144]
   49468:	add	x25, sp, #0x240
   4946c:	add	x23, sp, #0x170
   49470:	add	x0, x23, #0x10
   49474:	str	x0, [sp, #192]
   49478:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4947c:	ldr	d8, [x0, #1576]
   49480:	ldr	x0, [x20, #16]
   49484:	cmp	x0, #0x0
   49488:	b.le	494bc <mpfr_eint@@Base+0x320>
   4948c:	scvtf	d0, x0
   49490:	fmov	d1, #5.000000000000000000e-01
   49494:	fmul	d0, d0, d1
   49498:	scvtf	d1, x22
   4949c:	fadd	d0, d0, d1
   494a0:	fmul	d0, d0, d8
   494a4:	fmov	d1, #1.000000000000000000e+00
   494a8:	fadd	d0, d0, d1
   494ac:	add	x0, sp, #0x200
   494b0:	bl	bcf0 <mpfr_cmp_d@plt>
   494b4:	cmp	w0, #0x0
   494b8:	b.gt	49774 <mpfr_eint@@Base+0x5d8>
   494bc:	ldr	x28, [sp, #576]
   494c0:	neg	x0, x28
   494c4:	ldr	x1, [x20, #16]
   494c8:	cmp	x1, x0
   494cc:	b.le	49948 <mpfr_eint@@Base+0x7ac>
   494d0:	add	x0, sp, #0xe0
   494d4:	bl	bf90 <mpfr_mpz_init@plt>
   494d8:	add	x0, sp, #0xf0
   494dc:	bl	bf90 <mpfr_mpz_init@plt>
   494e0:	add	x0, sp, #0x100
   494e4:	bl	bf90 <mpfr_mpz_init@plt>
   494e8:	add	x19, sp, #0xd0
   494ec:	mov	x0, x19
   494f0:	bl	bf90 <mpfr_mpz_init@plt>
   494f4:	str	xzr, [sp, #368]
   494f8:	ldr	x0, [sp, #192]
   494fc:	str	x0, [sp, #376]
   49500:	mov	x1, #0x1f                  	// #31
   49504:	str	x1, [sp, #272]
   49508:	str	x0, [sp, #296]
   4950c:	mov	w0, #0x1                   	// #1
   49510:	str	w0, [sp, #280]
   49514:	str	x1, [sp, #304]
   49518:	add	x2, x23, #0x18
   4951c:	str	x2, [sp, #328]
   49520:	str	w0, [sp, #312]
   49524:	str	x1, [sp, #336]
   49528:	add	x1, x23, #0x20
   4952c:	str	x1, [sp, #360]
   49530:	str	w0, [sp, #344]
   49534:	mov	x1, x20
   49538:	mov	x0, x19
   4953c:	bl	cac0 <mpfr_get_z_2exp@plt>
   49540:	mov	x24, x0
   49544:	ldr	x2, [x20]
   49548:	cmp	x28, x2
   4954c:	b.lt	49964 <mpfr_eint@@Base+0x7c8>  // b.tstop
   49550:	add	x21, sp, #0xd0
   49554:	mov	x1, #0x0                   	// #0
   49558:	mov	x0, x21
   4955c:	bl	ba90 <__gmpz_scan1@plt>
   49560:	mov	x19, x0
   49564:	mov	x2, x0
   49568:	mov	x1, x21
   4956c:	mov	x0, x21
   49570:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   49574:	add	x0, x24, x19
   49578:	str	x0, [sp, #176]
   4957c:	str	x0, [sp, #128]
   49580:	add	x19, sp, #0xf0
   49584:	mov	x1, #0x1                   	// #1
   49588:	mov	x0, x19
   4958c:	bl	bcb0 <__gmpz_set_ui@plt>
   49590:	str	x28, [sp, #200]
   49594:	mov	x2, x28
   49598:	mov	x1, x19
   4959c:	mov	x0, x19
   495a0:	bl	c200 <__gmpz_mul_2exp@plt>
   495a4:	mov	w1, #0x1                   	// #1
   495a8:	str	w1, [sp, #280]
   495ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   495b0:	str	x0, [sp, #288]
   495b4:	str	w1, [sp, #344]
   495b8:	str	x0, [sp, #352]
   495bc:	mov	x26, #0x1                   	// #1
   495c0:	sub	x0, x28, #0x1
   495c4:	str	x0, [sp, #136]
   495c8:	add	x19, sp, #0x110
   495cc:	mov	w24, #0x2                   	// #2
   495d0:	add	x21, sp, #0xf0
   495d4:	b	499d8 <mpfr_eint@@Base+0x83c>
   495d8:	add	x0, sp, #0x240
   495dc:	bl	c070 <mpfr_clear@plt>
   495e0:	add	x0, sp, #0x220
   495e4:	bl	c070 <mpfr_clear@plt>
   495e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   495ec:	ldr	x1, [x0, #2576]
   495f0:	add	x0, x0, #0xa10
   495f4:	blr	x1
   495f8:	mrs	x1, tpidr_el0
   495fc:	ldr	w2, [sp, #156]
   49600:	str	w2, [x1, x0]
   49604:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49608:	ldr	x2, [x0, #2512]
   4960c:	add	x0, x0, #0x9d0
   49610:	blr	x2
   49614:	ldr	x2, [sp, #160]
   49618:	str	x2, [x1, x0]
   4961c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49620:	ldr	x2, [x0, #2544]
   49624:	add	x0, x0, #0x9f0
   49628:	blr	x2
   4962c:	ldr	x2, [sp, #168]
   49630:	str	x2, [x1, x0]
   49634:	mov	w2, #0x1                   	// #1
   49638:	ldr	w1, [sp, #152]
   4963c:	mov	x0, x27
   49640:	bl	bf40 <mpfr_overflow@plt>
   49644:	mov	w19, w0
   49648:	ldp	x21, x22, [sp, #32]
   4964c:	b	49ea0 <mpfr_eint@@Base+0xd04>
   49650:	add	x19, sp, #0x220
   49654:	mov	w3, #0x2                   	// #2
   49658:	adrp	x2, 80000 <__gmpfr_l2b@@Base+0x200>
   4965c:	ldr	x2, [x2, #3984]
   49660:	mov	x1, x20
   49664:	mov	x0, x19
   49668:	bl	c620 <mpfr_div@plt>
   4966c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49670:	ldr	x1, [x0, #2512]
   49674:	add	x0, x0, #0x9d0
   49678:	blr	x1
   4967c:	mov	x2, #0x0                   	// #0
   49680:	mrs	x1, tpidr_el0
   49684:	ldr	x1, [x1, x0]
   49688:	mov	x0, x19
   4968c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   49690:	tbz	w0, #31, 4941c <mpfr_eint@@Base+0x280>
   49694:	add	x0, sp, #0x240
   49698:	bl	c070 <mpfr_clear@plt>
   4969c:	add	x0, sp, #0x220
   496a0:	bl	c070 <mpfr_clear@plt>
   496a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   496a8:	ldr	x1, [x0, #2576]
   496ac:	add	x0, x0, #0xa10
   496b0:	blr	x1
   496b4:	mrs	x1, tpidr_el0
   496b8:	ldr	w2, [sp, #156]
   496bc:	str	w2, [x1, x0]
   496c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   496c4:	ldr	x2, [x0, #2512]
   496c8:	add	x0, x0, #0x9d0
   496cc:	blr	x2
   496d0:	ldr	x2, [sp, #160]
   496d4:	str	x2, [x1, x0]
   496d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   496dc:	ldr	x2, [x0, #2544]
   496e0:	add	x0, x0, #0x9f0
   496e4:	blr	x2
   496e8:	ldr	x2, [sp, #168]
   496ec:	str	x2, [x1, x0]
   496f0:	mov	w2, #0xffffffff            	// #-1
   496f4:	ldr	w1, [sp, #152]
   496f8:	mov	x0, x27
   496fc:	bl	c3c0 <mpfr_underflow@plt>
   49700:	mov	w19, w0
   49704:	ldp	x21, x22, [sp, #32]
   49708:	b	49ea0 <mpfr_eint@@Base+0xd04>
   4970c:	add	x19, sp, #0x170
   49710:	mov	x1, #0x20                  	// #32
   49714:	mov	x0, x19
   49718:	bl	ca80 <mpfr_init2@plt>
   4971c:	mov	w3, #0x0                   	// #0
   49720:	mov	x2, #0xffffffffffffffe0    	// #-32
   49724:	mov	x1, #0xa54b                	// #42315
   49728:	movk	x1, #0x5f5c, lsl #16
   4972c:	mov	x0, x19
   49730:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49734:	mov	w3, #0x0                   	// #0
   49738:	mov	x2, x19
   4973c:	mov	x1, x20
   49740:	mov	x0, x19
   49744:	bl	bb70 <mpfr_sub@plt>
   49748:	ldr	x0, [sp, #384]
   4974c:	mov	x1, #0x20                  	// #32
   49750:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   49754:	cmp	x0, x2
   49758:	b.eq	49764 <mpfr_eint@@Base+0x5c8>  // b.none
   4975c:	cmp	x0, #0x0
   49760:	csneg	x1, xzr, x0, ge  // ge = tcont
   49764:	add	x22, x22, x1
   49768:	add	x0, sp, #0x170
   4976c:	bl	c070 <mpfr_clear@plt>
   49770:	b	49440 <mpfr_eint@@Base+0x2a4>
   49774:	ldr	x28, [sp, #576]
   49778:	add	x19, sp, #0x150
   4977c:	mov	x1, x28
   49780:	mov	x0, x19
   49784:	bl	ca80 <mpfr_init2@plt>
   49788:	add	x21, sp, #0x130
   4978c:	mov	x1, x28
   49790:	mov	x0, x21
   49794:	bl	ca80 <mpfr_init2@plt>
   49798:	mov	x1, #0x1f                  	// #31
   4979c:	mov	x0, x23
   497a0:	bl	ca80 <mpfr_init2@plt>
   497a4:	mov	w3, #0x0                   	// #0
   497a8:	mov	x2, x20
   497ac:	mov	x1, #0x1                   	// #1
   497b0:	mov	x0, x21
   497b4:	bl	c2f0 <mpfr_ui_div@plt>
   497b8:	mov	w3, #0x0                   	// #0
   497bc:	mov	x2, #0x0                   	// #0
   497c0:	mov	x1, #0x1                   	// #1
   497c4:	mov	x0, x19
   497c8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   497cc:	ldr	w3, [sp, #344]
   497d0:	mov	w2, #0x0                   	// #0
   497d4:	mov	x1, x19
   497d8:	mov	x0, x25
   497dc:	bl	c6a0 <mpfr_set4@plt>
   497e0:	mov	w0, #0x1                   	// #1
   497e4:	str	w0, [sp, #376]
   497e8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   497ec:	str	x0, [sp, #384]
   497f0:	ldr	x0, [sp, #352]
   497f4:	add	x0, x28, x0
   497f8:	ldr	x1, [sp, #592]
   497fc:	cmp	x0, x1
   49800:	b.le	498c0 <mpfr_eint@@Base+0x724>
   49804:	mov	x26, #0x6                   	// #6
   49808:	mov	x24, #0x1                   	// #1
   4980c:	add	x0, sp, #0x130
   49810:	str	x0, [sp, #120]
   49814:	add	x19, sp, #0x150
   49818:	mov	w21, #0x2                   	// #2
   4981c:	mov	w3, #0x0                   	// #0
   49820:	ldr	x2, [sp, #120]
   49824:	mov	x1, x19
   49828:	mov	x0, x19
   4982c:	bl	bd50 <mpfr_mul@plt>
   49830:	mov	w3, #0x0                   	// #0
   49834:	mov	x2, x24
   49838:	mov	x1, x19
   4983c:	mov	x0, x19
   49840:	bl	ba50 <mpfr_mul_ui@plt>
   49844:	mov	w3, w21
   49848:	ldr	x2, [sp, #592]
   4984c:	ldr	x0, [sp, #352]
   49850:	sub	x2, x2, x0
   49854:	mov	x1, x23
   49858:	mov	x0, x23
   4985c:	bl	bb90 <mpfr_mul_2si@plt>
   49860:	mov	w3, w21
   49864:	mov	x2, x26
   49868:	mov	x1, x23
   4986c:	mov	x0, x23
   49870:	bl	c260 <mpfr_add_ui@plt>
   49874:	mov	w3, w21
   49878:	ldr	x2, [sp, #592]
   4987c:	ldr	x0, [sp, #352]
   49880:	sub	x2, x2, x0
   49884:	mov	x1, x23
   49888:	mov	x0, x23
   4988c:	bl	c420 <mpfr_div_2si@plt>
   49890:	mov	w3, #0x0                   	// #0
   49894:	mov	x2, x19
   49898:	mov	x1, x25
   4989c:	mov	x0, x25
   498a0:	bl	c1a0 <mpfr_add@plt>
   498a4:	add	x24, x24, #0x1
   498a8:	add	x26, x26, #0x6
   498ac:	ldr	x0, [sp, #352]
   498b0:	add	x0, x28, x0
   498b4:	ldr	x1, [sp, #592]
   498b8:	cmp	x0, x1
   498bc:	b.gt	4981c <mpfr_eint@@Base+0x680>
   498c0:	add	x24, sp, #0x130
   498c4:	mov	w3, #0x0                   	// #0
   498c8:	mov	x2, x24
   498cc:	mov	x1, x25
   498d0:	mov	x0, x25
   498d4:	bl	bd50 <mpfr_mul@plt>
   498d8:	add	x19, sp, #0x150
   498dc:	mov	w2, #0x0                   	// #0
   498e0:	mov	x1, x20
   498e4:	mov	x0, x19
   498e8:	bl	c750 <mpfr_exp@plt>
   498ec:	mov	w3, #0x0                   	// #0
   498f0:	mov	x2, x19
   498f4:	mov	x1, x25
   498f8:	mov	x0, x25
   498fc:	bl	bd50 <mpfr_mul@plt>
   49900:	mov	w3, #0x2                   	// #2
   49904:	mov	x2, #0x2                   	// #2
   49908:	mov	x1, x23
   4990c:	mov	x0, x23
   49910:	bl	c2c0 <mpfr_mul_2ui@plt>
   49914:	mov	w3, #0x2                   	// #2
   49918:	mov	x2, #0x8                   	// #8
   4991c:	mov	x1, x23
   49920:	mov	x0, x23
   49924:	bl	c260 <mpfr_add_ui@plt>
   49928:	ldr	x21, [sp, #384]
   4992c:	mov	x0, x19
   49930:	bl	c070 <mpfr_clear@plt>
   49934:	mov	x0, x24
   49938:	bl	c070 <mpfr_clear@plt>
   4993c:	mov	x0, x23
   49940:	bl	c070 <mpfr_clear@plt>
   49944:	b	49c94 <mpfr_eint@@Base+0xaf8>
   49948:	ldr	w3, [x20, #8]
   4994c:	mov	w2, #0x0                   	// #0
   49950:	mov	x1, x20
   49954:	mov	x0, x25
   49958:	bl	c6a0 <mpfr_set4@plt>
   4995c:	mov	x28, #0x0                   	// #0
   49960:	b	49bd0 <mpfr_eint@@Base+0xa34>
   49964:	sub	x2, x2, x28
   49968:	add	x24, x0, x2
   4996c:	add	x0, sp, #0xd0
   49970:	mov	x1, x0
   49974:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   49978:	b	49550 <mpfr_eint@@Base+0x3b4>
   4997c:	mov	w3, w24
   49980:	mov	x2, x21
   49984:	mov	x1, x19
   49988:	mov	x0, x19
   4998c:	bl	bd60 <mpfr_sub_z@plt>
   49990:	b	49a08 <mpfr_eint@@Base+0x86c>
   49994:	neg	x2, x0
   49998:	mov	x1, x21
   4999c:	mov	x0, x21
   499a0:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   499a4:	b	49a9c <mpfr_eint@@Base+0x900>
   499a8:	cmp	w1, #0x0
   499ac:	cneg	w0, w1, lt  // lt = tstop
   499b0:	ldr	x2, [sp, #248]
   499b4:	add	x2, x2, w0, sxtw #3
   499b8:	ldur	x2, [x2, #-8]
   499bc:	sbfiz	x0, x0, #6, #32
   499c0:	clz	x2, x2
   499c4:	sub	x0, x0, x2
   499c8:	ldr	x2, [sp, #352]
   499cc:	cmp	x2, x0
   499d0:	b.gt	49b20 <mpfr_eint@@Base+0x984>
   499d4:	add	x26, x26, #0x1
   499d8:	mov	w3, w24
   499dc:	ldr	x2, [sp, #136]
   499e0:	mov	x1, x19
   499e4:	mov	x0, x19
   499e8:	bl	c2c0 <mpfr_mul_2ui@plt>
   499ec:	ldr	w0, [sp, #244]
   499f0:	tbnz	w0, #31, 4997c <mpfr_eint@@Base+0x7e0>
   499f4:	mov	w3, w24
   499f8:	mov	x2, x21
   499fc:	mov	x1, x19
   49a00:	mov	x0, x19
   49a04:	bl	c480 <mpfr_add_z@plt>
   49a08:	ldr	w0, [sp, #212]
   49a0c:	cmp	w0, #0x0
   49a10:	cneg	w0, w0, lt  // lt = tstop
   49a14:	ldr	x1, [sp, #216]
   49a18:	add	x1, x1, w0, sxtw #3
   49a1c:	ldur	x2, [x1, #-8]
   49a20:	sbfiz	x0, x0, #6, #32
   49a24:	clz	x2, x2
   49a28:	sub	x2, x0, x2
   49a2c:	ldr	x0, [sp, #136]
   49a30:	sub	x2, x2, x0
   49a34:	mov	w3, w24
   49a38:	ldr	x0, [sp, #128]
   49a3c:	add	x2, x2, x0
   49a40:	mov	x1, x19
   49a44:	mov	x0, x19
   49a48:	bl	bb90 <mpfr_mul_2si@plt>
   49a4c:	mov	w3, w24
   49a50:	mov	x2, x26
   49a54:	mov	x1, x19
   49a58:	mov	x0, x19
   49a5c:	bl	cc60 <mpfr_div_ui@plt>
   49a60:	mov	w3, w24
   49a64:	mov	x2, #0x1                   	// #1
   49a68:	mov	x1, x19
   49a6c:	mov	x0, x19
   49a70:	bl	c260 <mpfr_add_ui@plt>
   49a74:	add	x2, sp, #0xd0
   49a78:	mov	x1, x21
   49a7c:	mov	x0, x21
   49a80:	bl	bff0 <__gmpz_mul@plt>
   49a84:	ldr	x0, [sp, #128]
   49a88:	tbnz	x0, #63, 49994 <mpfr_eint@@Base+0x7f8>
   49a8c:	ldr	x2, [sp, #176]
   49a90:	mov	x1, x21
   49a94:	mov	x0, x21
   49a98:	bl	c200 <__gmpz_mul_2exp@plt>
   49a9c:	mov	x2, x26
   49aa0:	mov	x1, x21
   49aa4:	mov	x0, x21
   49aa8:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   49aac:	add	x0, sp, #0x100
   49ab0:	mov	x2, x26
   49ab4:	mov	x1, x21
   49ab8:	str	x0, [sp, #120]
   49abc:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   49ac0:	add	x0, sp, #0xe0
   49ac4:	ldr	x2, [sp, #120]
   49ac8:	mov	x1, x0
   49acc:	bl	c9c0 <__gmpz_add@plt>
   49ad0:	add	x0, sp, #0x130
   49ad4:	mov	w3, w24
   49ad8:	mov	x2, x26
   49adc:	mov	x1, x19
   49ae0:	str	x0, [sp, #120]
   49ae4:	bl	cc60 <mpfr_div_ui@plt>
   49ae8:	mov	w3, w24
   49aec:	mov	x2, #0x1                   	// #1
   49af0:	ldr	x1, [sp, #120]
   49af4:	mov	x0, x1
   49af8:	bl	c260 <mpfr_add_ui@plt>
   49afc:	add	x0, sp, #0x150
   49b00:	mov	w3, w24
   49b04:	ldr	x2, [sp, #120]
   49b08:	mov	x1, x0
   49b0c:	bl	c1a0 <mpfr_add@plt>
   49b10:	ldr	w1, [sp, #244]
   49b14:	mov	x0, #0x0                   	// #0
   49b18:	cbz	w1, 499c8 <mpfr_eint@@Base+0x82c>
   49b1c:	b	499a8 <mpfr_eint@@Base+0x80c>
   49b20:	cmp	w1, #0x0
   49b24:	cneg	w1, w1, lt  // lt = tstop
   49b28:	str	w1, [sp, #244]
   49b2c:	add	x19, sp, #0x110
   49b30:	mov	w3, #0x2                   	// #2
   49b34:	add	x2, sp, #0xf0
   49b38:	mov	x1, x19
   49b3c:	mov	x0, x19
   49b40:	bl	c480 <mpfr_add_z@plt>
   49b44:	mov	w3, #0x2                   	// #2
   49b48:	mov	x2, x26
   49b4c:	mov	x1, x19
   49b50:	mov	x0, x19
   49b54:	bl	cc60 <mpfr_div_ui@plt>
   49b58:	add	x21, sp, #0x130
   49b5c:	mov	w3, #0x1                   	// #1
   49b60:	mov	w2, #0x2                   	// #2
   49b64:	mov	x1, x20
   49b68:	mov	x0, x21
   49b6c:	bl	c6a0 <mpfr_set4@plt>
   49b70:	mov	w3, #0x2                   	// #2
   49b74:	mov	x2, x21
   49b78:	mov	x1, x19
   49b7c:	mov	x0, x19
   49b80:	bl	bd50 <mpfr_mul@plt>
   49b84:	mov	w3, #0x3                   	// #3
   49b88:	mov	x2, x21
   49b8c:	mov	x1, x26
   49b90:	mov	x0, x21
   49b94:	bl	ca50 <mpfr_ui_sub@plt>
   49b98:	ldr	w0, [sp, #312]
   49b9c:	tbz	w0, #31, 49d98 <mpfr_eint@@Base+0xbfc>
   49ba0:	ldr	x1, [sp, #368]
   49ba4:	cbz	x1, 49bb0 <mpfr_eint@@Base+0xa14>
   49ba8:	ldr	x0, [sp, #376]
   49bac:	bl	cc20 <mpfr_free_func@plt>
   49bb0:	add	x0, sp, #0xe0
   49bb4:	bl	c170 <mpfr_mpz_clear@plt>
   49bb8:	add	x0, sp, #0xf0
   49bbc:	bl	c170 <mpfr_mpz_clear@plt>
   49bc0:	add	x0, sp, #0x100
   49bc4:	bl	c170 <mpfr_mpz_clear@plt>
   49bc8:	add	x0, sp, #0xd0
   49bcc:	bl	c170 <mpfr_mpz_clear@plt>
   49bd0:	ldr	x19, [sp, #592]
   49bd4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49bd8:	ldr	x1, [x0, #2608]
   49bdc:	add	x0, x0, #0xa30
   49be0:	blr	x1
   49be4:	mov	w2, #0x0                   	// #0
   49be8:	mrs	x1, tpidr_el0
   49bec:	add	x1, x1, x0
   49bf0:	ldr	x24, [sp, #144]
   49bf4:	mov	x0, x24
   49bf8:	bl	c380 <mpfr_cache@plt>
   49bfc:	mov	w3, #0x0                   	// #0
   49c00:	mov	x2, x24
   49c04:	mov	x1, x25
   49c08:	mov	x0, x25
   49c0c:	bl	c1a0 <mpfr_add@plt>
   49c10:	adds	x28, x19, x28
   49c14:	csinv	x28, x28, xzr, pl  // pl = nfrst
   49c18:	add	x28, x28, #0x2
   49c1c:	ldr	x21, [sp, #592]
   49c20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   49c24:	cmp	x21, x0
   49c28:	ldr	x0, [sp, #560]
   49c2c:	csel	x21, x0, x21, eq  // eq = none
   49c30:	subs	x28, x28, x21
   49c34:	csel	x28, x28, xzr, pl  // pl = nfrst
   49c38:	mov	w2, #0x0                   	// #0
   49c3c:	add	x1, sp, #0x200
   49c40:	mov	x0, x24
   49c44:	bl	c090 <mpfr_log@plt>
   49c48:	mov	w3, #0x0                   	// #0
   49c4c:	mov	x2, x24
   49c50:	mov	x1, x25
   49c54:	mov	x0, x25
   49c58:	bl	c1a0 <mpfr_add@plt>
   49c5c:	add	x21, x21, #0x1
   49c60:	add	x21, x21, x28
   49c64:	ldr	x0, [sp, #560]
   49c68:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   49c6c:	cmp	x0, x1
   49c70:	b.eq	49c7c <mpfr_eint@@Base+0xae0>  // b.none
   49c74:	cmp	x21, x0
   49c78:	csel	x21, x21, x0, ge  // ge = tcont
   49c7c:	ldr	x0, [sp, #592]
   49c80:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   49c84:	cmp	x0, x1
   49c88:	b.eq	49df8 <mpfr_eint@@Base+0xc5c>  // b.none
   49c8c:	subs	x21, x21, x0
   49c90:	csel	x21, x21, xzr, pl  // pl = nfrst
   49c94:	ldr	x1, [sp, #592]
   49c98:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   49c9c:	cmp	x1, x0
   49ca0:	b.le	49df8 <mpfr_eint@@Base+0xc5c>
   49ca4:	ldr	w0, [sp, #152]
   49ca8:	cmp	w0, #0x0
   49cac:	ldr	x3, [x27]
   49cb0:	cinc	x3, x3, eq  // eq = none
   49cb4:	ldr	x0, [sp, #576]
   49cb8:	add	x1, x0, #0x3e
   49cbc:	subs	x0, x0, #0x1
   49cc0:	csel	x1, x1, x0, mi  // mi = first
   49cc4:	asr	x1, x1, #6
   49cc8:	sub	x2, x22, x21
   49ccc:	add	x1, x1, #0x1
   49cd0:	ldr	x0, [sp, #600]
   49cd4:	bl	c370 <mpfr_round_p@plt>
   49cd8:	cbz	w0, 49df8 <mpfr_eint@@Base+0xc5c>
   49cdc:	add	x20, sp, #0x240
   49ce0:	ldr	w3, [sp, #584]
   49ce4:	ldr	w2, [sp, #152]
   49ce8:	mov	x1, x20
   49cec:	mov	x0, x27
   49cf0:	bl	c6a0 <mpfr_set4@plt>
   49cf4:	mov	w19, w0
   49cf8:	mov	x0, x20
   49cfc:	bl	c070 <mpfr_clear@plt>
   49d00:	add	x0, sp, #0x220
   49d04:	bl	c070 <mpfr_clear@plt>
   49d08:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49d0c:	ldr	x1, [x0, #2576]
   49d10:	add	x0, x0, #0xa10
   49d14:	blr	x1
   49d18:	mrs	x1, tpidr_el0
   49d1c:	ldr	w4, [sp, #156]
   49d20:	str	w4, [x1, x0]
   49d24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49d28:	ldr	x2, [x0, #2512]
   49d2c:	add	x0, x0, #0x9d0
   49d30:	blr	x2
   49d34:	ldr	x2, [sp, #160]
   49d38:	str	x2, [x1, x0]
   49d3c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49d40:	ldr	x3, [x0, #2544]
   49d44:	add	x0, x0, #0x9f0
   49d48:	blr	x3
   49d4c:	ldr	x3, [sp, #168]
   49d50:	str	x3, [x1, x0]
   49d54:	ldr	x0, [x27, #16]
   49d58:	cmp	x3, x0
   49d5c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   49d60:	b.gt	49e58 <mpfr_eint@@Base+0xcbc>
   49d64:	cbz	w19, 49e90 <mpfr_eint@@Base+0xcf4>
   49d68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49d6c:	ldr	x1, [x0, #2576]
   49d70:	add	x0, x0, #0xa10
   49d74:	blr	x1
   49d78:	orr	w2, w4, #0x8
   49d7c:	mrs	x1, tpidr_el0
   49d80:	str	w2, [x1, x0]
   49d84:	ldp	x21, x22, [sp, #32]
   49d88:	ldp	x23, x24, [sp, #48]
   49d8c:	ldp	x25, x26, [sp, #64]
   49d90:	ldr	d8, [sp, #96]
   49d94:	b	49ea0 <mpfr_eint@@Base+0xd04>
   49d98:	add	x19, sp, #0x110
   49d9c:	mov	w3, #0x2                   	// #2
   49da0:	add	x2, sp, #0x130
   49da4:	mov	x1, x19
   49da8:	mov	x0, x19
   49dac:	bl	c620 <mpfr_div@plt>
   49db0:	add	x0, sp, #0x150
   49db4:	mov	w3, #0x2                   	// #2
   49db8:	mov	x2, x19
   49dbc:	mov	x1, x0
   49dc0:	bl	c1a0 <mpfr_add@plt>
   49dc4:	mov	w2, #0x0                   	// #0
   49dc8:	add	x1, sp, #0xe0
   49dcc:	mov	x0, x25
   49dd0:	bl	c240 <mpfr_set_z@plt>
   49dd4:	mov	w3, #0x0                   	// #0
   49dd8:	ldr	x2, [sp, #200]
   49ddc:	mov	x1, x25
   49de0:	mov	x0, x25
   49de4:	bl	c8f0 <mpfr_div_2ui@plt>
   49de8:	ldr	x28, [sp, #352]
   49dec:	ldr	x0, [sp, #592]
   49df0:	sub	x28, x28, x0
   49df4:	b	49ba0 <mpfr_eint@@Base+0xa04>
   49df8:	mov	x0, #0xfffffffffffffeff    	// #-257
   49dfc:	movk	x0, #0x7fff, lsl #48
   49e00:	sub	x0, x0, x22
   49e04:	ldr	x1, [sp, #184]
   49e08:	cmp	x0, x1
   49e0c:	b.lt	49e40 <mpfr_eint@@Base+0xca4>  // b.tstop
   49e10:	ldr	x0, [sp, #184]
   49e14:	add	x22, x22, x0
   49e18:	add	x0, x22, x22, lsr #63
   49e1c:	asr	x0, x0, #1
   49e20:	str	x0, [sp, #184]
   49e24:	mov	x1, x22
   49e28:	mov	x0, x25
   49e2c:	bl	bed0 <mpfr_set_prec@plt>
   49e30:	mov	x1, x22
   49e34:	ldr	x0, [sp, #144]
   49e38:	bl	bed0 <mpfr_set_prec@plt>
   49e3c:	b	49480 <mpfr_eint@@Base+0x2e4>
   49e40:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   49e44:	add	x2, x2, #0xd68
   49e48:	mov	w1, #0x159                 	// #345
   49e4c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   49e50:	add	x0, x0, #0xf18
   49e54:	bl	cb40 <mpfr_assert_fail@plt>
   49e58:	ldr	w2, [sp, #152]
   49e5c:	mov	w1, w19
   49e60:	mov	x0, x27
   49e64:	bl	cb30 <mpfr_check_range@plt>
   49e68:	mov	w19, w0
   49e6c:	ldp	x21, x22, [sp, #32]
   49e70:	ldp	x23, x24, [sp, #48]
   49e74:	ldp	x25, x26, [sp, #64]
   49e78:	ldr	d8, [sp, #96]
   49e7c:	b	49ea0 <mpfr_eint@@Base+0xd04>
   49e80:	stp	x23, x24, [sp, #48]
   49e84:	stp	x25, x26, [sp, #64]
   49e88:	str	d8, [sp, #96]
   49e8c:	b	49440 <mpfr_eint@@Base+0x2a4>
   49e90:	ldp	x21, x22, [sp, #32]
   49e94:	ldp	x23, x24, [sp, #48]
   49e98:	ldp	x25, x26, [sp, #64]
   49e9c:	ldr	d8, [sp, #96]
   49ea0:	mov	w0, w19
   49ea4:	ldp	x19, x20, [sp, #16]
   49ea8:	ldp	x27, x28, [sp, #80]
   49eac:	ldp	x29, x30, [sp]
   49eb0:	add	sp, sp, #0x260
   49eb4:	ret

0000000000049eb8 <mpfr_sech@@Base>:
   49eb8:	stp	x29, x30, [sp, #-144]!
   49ebc:	mov	x29, sp
   49ec0:	stp	x19, x20, [sp, #16]
   49ec4:	mov	x20, x0
   49ec8:	str	w2, [sp, #100]
   49ecc:	ldr	x2, [x1, #16]
   49ed0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   49ed4:	cmp	x2, x0
   49ed8:	b.le	4a0c0 <mpfr_sech@@Base+0x208>
   49edc:	stp	x21, x22, [sp, #32]
   49ee0:	stp	x25, x26, [sp, #64]
   49ee4:	stp	x27, x28, [sp, #80]
   49ee8:	mov	x22, x1
   49eec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49ef0:	ldr	x1, [x0, #2576]
   49ef4:	add	x0, x0, #0xa10
   49ef8:	blr	x1
   49efc:	mrs	x1, tpidr_el0
   49f00:	ldr	w25, [x1, x0]
   49f04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49f08:	ldr	x3, [x0, #2512]
   49f0c:	add	x0, x0, #0x9d0
   49f10:	blr	x3
   49f14:	add	x3, x1, x0
   49f18:	ldr	x26, [x1, x0]
   49f1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49f20:	ldr	x4, [x0, #2544]
   49f24:	add	x0, x0, #0x9f0
   49f28:	blr	x4
   49f2c:	ldr	x27, [x1, x0]
   49f30:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   49f34:	str	x4, [x3]
   49f38:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   49f3c:	str	x3, [x1, x0]
   49f40:	neg	x2, x2, lsl #1
   49f44:	cmp	x2, #0x0
   49f48:	b.le	49f60 <mpfr_sech@@Base+0xa8>
   49f4c:	add	x2, x2, #0x1
   49f50:	ldr	x0, [x20]
   49f54:	add	x0, x0, #0x1
   49f58:	cmp	x0, x2
   49f5c:	b.cc	4a140 <mpfr_sech@@Base+0x288>  // b.lo, b.ul, b.last
   49f60:	stp	x23, x24, [sp, #48]
   49f64:	ldr	x21, [x20]
   49f68:	cmp	x21, #0x1
   49f6c:	b.eq	4a1cc <mpfr_sech@@Base+0x314>  // b.none
   49f70:	b.le	4a1b4 <mpfr_sech@@Base+0x2fc>
   49f74:	sub	x19, x21, #0x1
   49f78:	clz	x0, x19
   49f7c:	mov	w19, #0x40                  	// #64
   49f80:	sub	w19, w19, w0
   49f84:	sxtw	x19, w19
   49f88:	add	x19, x19, x21
   49f8c:	add	x19, x19, #0x3
   49f90:	mov	x1, x19
   49f94:	add	x0, sp, #0x70
   49f98:	bl	ca80 <mpfr_init2@plt>
   49f9c:	mov	x0, #0x40                  	// #64
   49fa0:	str	x0, [sp, #104]
   49fa4:	mrs	x24, tpidr_el0
   49fa8:	add	x23, sp, #0x70
   49fac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   49fb0:	ldr	x1, [x0, #2576]
   49fb4:	add	x0, x0, #0xa10
   49fb8:	blr	x1
   49fbc:	add	x28, x24, x0
   49fc0:	str	wzr, [x24, x0]
   49fc4:	mov	w2, #0x1                   	// #1
   49fc8:	mov	x1, x22
   49fcc:	mov	x0, x23
   49fd0:	bl	baf0 <mpfr_cosh@plt>
   49fd4:	ldr	w0, [x28]
   49fd8:	tbnz	w0, #1, 4a1d4 <mpfr_sech@@Base+0x31c>
   49fdc:	mov	w3, #0x0                   	// #0
   49fe0:	mov	x2, x23
   49fe4:	mov	x1, #0x1                   	// #1
   49fe8:	mov	x0, x23
   49fec:	bl	c2f0 <mpfr_ui_div@plt>
   49ff0:	ldr	x1, [sp, #128]
   49ff4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   49ff8:	cmp	x1, x0
   49ffc:	b.le	4a250 <mpfr_sech@@Base+0x398>
   4a000:	ldr	w0, [sp, #100]
   4a004:	cmp	w0, #0x0
   4a008:	cinc	x3, x21, eq  // eq = none
   4a00c:	ldr	x0, [sp, #112]
   4a010:	add	x1, x0, #0x3e
   4a014:	subs	x0, x0, #0x1
   4a018:	csel	x1, x1, x0, mi  // mi = first
   4a01c:	asr	x1, x1, #6
   4a020:	sub	x2, x19, #0x2
   4a024:	add	x1, x1, #0x1
   4a028:	ldr	x0, [sp, #136]
   4a02c:	bl	c370 <mpfr_round_p@plt>
   4a030:	cbz	w0, 4a250 <mpfr_sech@@Base+0x398>
   4a034:	add	x21, sp, #0x70
   4a038:	ldr	w3, [sp, #120]
   4a03c:	ldr	w2, [sp, #100]
   4a040:	mov	x1, x21
   4a044:	mov	x0, x20
   4a048:	bl	c6a0 <mpfr_set4@plt>
   4a04c:	mov	w19, w0
   4a050:	mov	x0, x21
   4a054:	bl	c070 <mpfr_clear@plt>
   4a058:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a05c:	ldr	x1, [x0, #2576]
   4a060:	add	x0, x0, #0xa10
   4a064:	blr	x1
   4a068:	mrs	x1, tpidr_el0
   4a06c:	str	w25, [x1, x0]
   4a070:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a074:	ldr	x2, [x0, #2512]
   4a078:	add	x0, x0, #0x9d0
   4a07c:	blr	x2
   4a080:	str	x26, [x1, x0]
   4a084:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a088:	ldr	x2, [x0, #2544]
   4a08c:	add	x0, x0, #0x9f0
   4a090:	blr	x2
   4a094:	str	x27, [x1, x0]
   4a098:	ldr	x0, [x20, #16]
   4a09c:	cmp	x27, x0
   4a0a0:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   4a0a4:	b.gt	4a2e0 <mpfr_sech@@Base+0x428>
   4a0a8:	cbnz	w19, 4a2a4 <mpfr_sech@@Base+0x3ec>
   4a0ac:	ldp	x21, x22, [sp, #32]
   4a0b0:	ldp	x23, x24, [sp, #48]
   4a0b4:	ldp	x25, x26, [sp, #64]
   4a0b8:	ldp	x27, x28, [sp, #80]
   4a0bc:	b	4a2d0 <mpfr_sech@@Base+0x418>
   4a0c0:	mov	x0, #0x2                   	// #2
   4a0c4:	movk	x0, #0x8000, lsl #48
   4a0c8:	cmp	x2, x0
   4a0cc:	b.eq	4a0f4 <mpfr_sech@@Base+0x23c>  // b.none
   4a0d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a0d4:	cmp	x2, x0
   4a0d8:	b.ne	4a124 <mpfr_sech@@Base+0x26c>  // b.any
   4a0dc:	mov	w0, #0x1                   	// #1
   4a0e0:	str	w0, [x20, #8]
   4a0e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4a0e8:	str	x0, [x20, #16]
   4a0ec:	mov	w19, #0x0                   	// #0
   4a0f0:	b	4a2d0 <mpfr_sech@@Base+0x418>
   4a0f4:	str	x0, [x20, #16]
   4a0f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a0fc:	ldr	x1, [x0, #2576]
   4a100:	add	x0, x0, #0xa10
   4a104:	blr	x1
   4a108:	mrs	x1, tpidr_el0
   4a10c:	add	x0, x1, x0
   4a110:	ldr	w1, [x0]
   4a114:	orr	w1, w1, #0x4
   4a118:	str	w1, [x0]
   4a11c:	mov	w19, #0x0                   	// #0
   4a120:	b	4a2d0 <mpfr_sech@@Base+0x418>
   4a124:	ldr	w3, [sp, #100]
   4a128:	mov	x2, #0x0                   	// #0
   4a12c:	mov	x1, #0x1                   	// #1
   4a130:	mov	x0, x20
   4a134:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4a138:	mov	w19, w0
   4a13c:	b	4a2d0 <mpfr_sech@@Base+0x418>
   4a140:	ldr	w4, [sp, #100]
   4a144:	mov	w3, #0x0                   	// #0
   4a148:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   4a14c:	ldr	x1, [x1, #3928]
   4a150:	mov	x0, x20
   4a154:	bl	c540 <mpfr_round_near_x@plt>
   4a158:	mov	w19, w0
   4a15c:	cbz	w0, 49f60 <mpfr_sech@@Base+0xa8>
   4a160:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a164:	ldr	x1, [x0, #2576]
   4a168:	add	x0, x0, #0xa10
   4a16c:	blr	x1
   4a170:	mrs	x1, tpidr_el0
   4a174:	str	w25, [x1, x0]
   4a178:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a17c:	ldr	x2, [x0, #2512]
   4a180:	add	x0, x0, #0x9d0
   4a184:	blr	x2
   4a188:	str	x26, [x1, x0]
   4a18c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a190:	ldr	x2, [x0, #2544]
   4a194:	add	x0, x0, #0x9f0
   4a198:	blr	x2
   4a19c:	str	x27, [x1, x0]
   4a1a0:	ldr	x0, [x20, #16]
   4a1a4:	cmp	x27, x0
   4a1a8:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   4a1ac:	b.le	4a2a8 <mpfr_sech@@Base+0x3f0>
   4a1b0:	b	4a2e4 <mpfr_sech@@Base+0x42c>
   4a1b4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   4a1b8:	add	x2, x2, #0xfa8
   4a1bc:	mov	w1, #0x43                  	// #67
   4a1c0:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4a1c4:	add	x0, x0, #0xf08
   4a1c8:	bl	cb40 <mpfr_assert_fail@plt>
   4a1cc:	mov	x19, #0x0                   	// #0
   4a1d0:	b	49f88 <mpfr_sech@@Base+0xd0>
   4a1d4:	ldr	w19, [sp, #120]
   4a1d8:	add	x0, sp, #0x70
   4a1dc:	bl	c070 <mpfr_clear@plt>
   4a1e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a1e4:	ldr	x1, [x0, #2576]
   4a1e8:	add	x0, x0, #0xa10
   4a1ec:	blr	x1
   4a1f0:	mrs	x1, tpidr_el0
   4a1f4:	str	w25, [x1, x0]
   4a1f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a1fc:	ldr	x2, [x0, #2512]
   4a200:	add	x0, x0, #0x9d0
   4a204:	blr	x2
   4a208:	str	x26, [x1, x0]
   4a20c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a210:	ldr	x2, [x0, #2544]
   4a214:	add	x0, x0, #0x9f0
   4a218:	blr	x2
   4a21c:	str	x27, [x1, x0]
   4a220:	ldr	w0, [sp, #100]
   4a224:	cmp	w0, #0x0
   4a228:	mov	w2, w19
   4a22c:	csinc	w1, w0, wzr, ne  // ne = any
   4a230:	mov	x0, x20
   4a234:	bl	c3c0 <mpfr_underflow@plt>
   4a238:	mov	w19, w0
   4a23c:	ldp	x21, x22, [sp, #32]
   4a240:	ldp	x23, x24, [sp, #48]
   4a244:	ldp	x25, x26, [sp, #64]
   4a248:	ldp	x27, x28, [sp, #80]
   4a24c:	b	4a2d0 <mpfr_sech@@Base+0x418>
   4a250:	mov	x0, #0xfffffffffffffeff    	// #-257
   4a254:	movk	x0, #0x7fff, lsl #48
   4a258:	sub	x0, x0, x19
   4a25c:	ldr	x1, [sp, #104]
   4a260:	cmp	x0, x1
   4a264:	b.lt	4a28c <mpfr_sech@@Base+0x3d4>  // b.tstop
   4a268:	ldr	x0, [sp, #104]
   4a26c:	add	x19, x19, x0
   4a270:	add	x0, x19, x19, lsr #63
   4a274:	asr	x0, x0, #1
   4a278:	str	x0, [sp, #104]
   4a27c:	mov	x1, x19
   4a280:	mov	x0, x23
   4a284:	bl	bed0 <mpfr_set_prec@plt>
   4a288:	b	49fac <mpfr_sech@@Base+0xf4>
   4a28c:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4a290:	add	x2, x2, #0x18
   4a294:	mov	w1, #0x5f                  	// #95
   4a298:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4a29c:	add	x0, x0, #0xf08
   4a2a0:	bl	cb40 <mpfr_assert_fail@plt>
   4a2a4:	ldp	x23, x24, [sp, #48]
   4a2a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a2ac:	ldr	x1, [x0, #2576]
   4a2b0:	add	x0, x0, #0xa10
   4a2b4:	blr	x1
   4a2b8:	orr	w25, w25, #0x8
   4a2bc:	mrs	x1, tpidr_el0
   4a2c0:	str	w25, [x1, x0]
   4a2c4:	ldp	x21, x22, [sp, #32]
   4a2c8:	ldp	x25, x26, [sp, #64]
   4a2cc:	ldp	x27, x28, [sp, #80]
   4a2d0:	mov	w0, w19
   4a2d4:	ldp	x19, x20, [sp, #16]
   4a2d8:	ldp	x29, x30, [sp], #144
   4a2dc:	ret
   4a2e0:	ldp	x23, x24, [sp, #48]
   4a2e4:	ldr	w2, [sp, #100]
   4a2e8:	mov	w1, w19
   4a2ec:	mov	x0, x20
   4a2f0:	bl	cb30 <mpfr_check_range@plt>
   4a2f4:	mov	w19, w0
   4a2f8:	ldp	x21, x22, [sp, #32]
   4a2fc:	ldp	x25, x26, [sp, #64]
   4a300:	ldp	x27, x28, [sp, #80]
   4a304:	b	4a2d0 <mpfr_sech@@Base+0x418>

000000000004a308 <mpfr_csch@@Base>:
   4a308:	stp	x29, x30, [sp, #-144]!
   4a30c:	mov	x29, sp
   4a310:	stp	x19, x20, [sp, #16]
   4a314:	stp	x21, x22, [sp, #32]
   4a318:	stp	x27, x28, [sp, #80]
   4a31c:	mov	x22, x0
   4a320:	mov	x20, x1
   4a324:	mov	w28, w2
   4a328:	ldr	x2, [x1, #16]
   4a32c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a330:	cmp	x2, x0
   4a334:	b.le	4a534 <mpfr_csch@@Base+0x22c>
   4a338:	stp	x23, x24, [sp, #48]
   4a33c:	stp	x25, x26, [sp, #64]
   4a340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a344:	ldr	x1, [x0, #2576]
   4a348:	add	x0, x0, #0xa10
   4a34c:	blr	x1
   4a350:	mrs	x1, tpidr_el0
   4a354:	ldr	w24, [x1, x0]
   4a358:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a35c:	ldr	x3, [x0, #2512]
   4a360:	add	x0, x0, #0x9d0
   4a364:	blr	x3
   4a368:	add	x3, x1, x0
   4a36c:	ldr	x25, [x1, x0]
   4a370:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a374:	ldr	x4, [x0, #2544]
   4a378:	add	x0, x0, #0x9f0
   4a37c:	blr	x4
   4a380:	ldr	x26, [x1, x0]
   4a384:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4a388:	str	x4, [x3]
   4a38c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4a390:	str	x3, [x1, x0]
   4a394:	ldr	x21, [x22]
   4a398:	ldr	x0, [x20]
   4a39c:	cmp	x0, x21
   4a3a0:	csel	x0, x0, x21, ge  // ge = tcont
   4a3a4:	neg	x0, x0, lsl #1
   4a3a8:	cmp	x2, x0
   4a3ac:	b.le	4a5d4 <mpfr_csch@@Base+0x2cc>
   4a3b0:	cmp	x21, #0x1
   4a3b4:	b.eq	4a6b4 <mpfr_csch@@Base+0x3ac>  // b.none
   4a3b8:	b.le	4a69c <mpfr_csch@@Base+0x394>
   4a3bc:	sub	x19, x21, #0x1
   4a3c0:	clz	x0, x19
   4a3c4:	mov	w19, #0x40                  	// #64
   4a3c8:	sub	w19, w19, w0
   4a3cc:	sxtw	x19, w19
   4a3d0:	add	x19, x21, x19
   4a3d4:	add	x19, x19, #0x3
   4a3d8:	mov	x1, x19
   4a3dc:	add	x0, sp, #0x70
   4a3e0:	bl	ca80 <mpfr_init2@plt>
   4a3e4:	mov	x0, #0x40                  	// #64
   4a3e8:	str	x0, [sp, #104]
   4a3ec:	mrs	x27, tpidr_el0
   4a3f0:	add	x23, sp, #0x70
   4a3f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a3f8:	ldr	x1, [x0, #2576]
   4a3fc:	add	x0, x0, #0xa10
   4a400:	blr	x1
   4a404:	add	x1, x27, x0
   4a408:	str	x1, [sp, #96]
   4a40c:	str	wzr, [x27, x0]
   4a410:	mov	w2, #0x1                   	// #1
   4a414:	mov	x1, x20
   4a418:	mov	x0, x23
   4a41c:	bl	c320 <mpfr_sinh@plt>
   4a420:	ldr	x1, [sp, #96]
   4a424:	ldr	w0, [x1]
   4a428:	tbnz	w0, #1, 4a6bc <mpfr_csch@@Base+0x3b4>
   4a42c:	mov	w3, #0x0                   	// #0
   4a430:	mov	x2, x23
   4a434:	mov	x1, #0x1                   	// #1
   4a438:	mov	x0, x23
   4a43c:	bl	c2f0 <mpfr_ui_div@plt>
   4a440:	ldr	x1, [sp, #128]
   4a444:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a448:	cmp	x1, x0
   4a44c:	b.le	4a72c <mpfr_csch@@Base+0x424>
   4a450:	cmp	w28, #0x0
   4a454:	cinc	x3, x21, eq  // eq = none
   4a458:	ldr	x0, [sp, #112]
   4a45c:	add	x1, x0, #0x3e
   4a460:	subs	x0, x0, #0x1
   4a464:	csel	x1, x1, x0, mi  // mi = first
   4a468:	asr	x1, x1, #6
   4a46c:	sub	x2, x19, #0x2
   4a470:	add	x1, x1, #0x1
   4a474:	ldr	x0, [sp, #136]
   4a478:	bl	c370 <mpfr_round_p@plt>
   4a47c:	cbz	w0, 4a72c <mpfr_csch@@Base+0x424>
   4a480:	add	x20, sp, #0x70
   4a484:	ldr	w3, [sp, #120]
   4a488:	mov	w2, w28
   4a48c:	mov	x1, x20
   4a490:	mov	x0, x22
   4a494:	bl	c6a0 <mpfr_set4@plt>
   4a498:	mov	w19, w0
   4a49c:	mov	x0, x20
   4a4a0:	bl	c070 <mpfr_clear@plt>
   4a4a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a4a8:	ldr	x1, [x0, #2576]
   4a4ac:	add	x0, x0, #0xa10
   4a4b0:	blr	x1
   4a4b4:	mrs	x1, tpidr_el0
   4a4b8:	str	w24, [x1, x0]
   4a4bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a4c0:	ldr	x2, [x0, #2512]
   4a4c4:	add	x0, x0, #0x9d0
   4a4c8:	blr	x2
   4a4cc:	str	x25, [x1, x0]
   4a4d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a4d4:	ldr	x2, [x0, #2544]
   4a4d8:	add	x0, x0, #0x9f0
   4a4dc:	blr	x2
   4a4e0:	str	x26, [x1, x0]
   4a4e4:	ldr	x0, [x22, #16]
   4a4e8:	cmp	x26, x0
   4a4ec:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   4a4f0:	b.gt	4a780 <mpfr_csch@@Base+0x478>
   4a4f4:	cbz	w19, 4a7a0 <mpfr_csch@@Base+0x498>
   4a4f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a4fc:	ldr	x1, [x0, #2576]
   4a500:	add	x0, x0, #0xa10
   4a504:	blr	x1
   4a508:	orr	w24, w24, #0x8
   4a50c:	mrs	x1, tpidr_el0
   4a510:	str	w24, [x1, x0]
   4a514:	ldp	x23, x24, [sp, #48]
   4a518:	ldp	x25, x26, [sp, #64]
   4a51c:	mov	w0, w19
   4a520:	ldp	x19, x20, [sp, #16]
   4a524:	ldp	x21, x22, [sp, #32]
   4a528:	ldp	x27, x28, [sp, #80]
   4a52c:	ldp	x29, x30, [sp], #144
   4a530:	ret
   4a534:	mov	x0, #0x2                   	// #2
   4a538:	movk	x0, #0x8000, lsl #48
   4a53c:	cmp	x2, x0
   4a540:	b.eq	4a58c <mpfr_csch@@Base+0x284>  // b.none
   4a544:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a548:	cmp	x2, x0
   4a54c:	b.eq	4a5bc <mpfr_csch@@Base+0x2b4>  // b.none
   4a550:	ldr	w0, [x1, #8]
   4a554:	str	w0, [x22, #8]
   4a558:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a55c:	str	x0, [x22, #16]
   4a560:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a564:	ldr	x1, [x0, #2576]
   4a568:	add	x0, x0, #0xa10
   4a56c:	blr	x1
   4a570:	mrs	x1, tpidr_el0
   4a574:	add	x0, x1, x0
   4a578:	ldr	w1, [x0]
   4a57c:	orr	w1, w1, #0x20
   4a580:	str	w1, [x0]
   4a584:	mov	w19, #0x0                   	// #0
   4a588:	b	4a51c <mpfr_csch@@Base+0x214>
   4a58c:	str	x0, [x22, #16]
   4a590:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a594:	ldr	x1, [x0, #2576]
   4a598:	add	x0, x0, #0xa10
   4a59c:	blr	x1
   4a5a0:	mrs	x1, tpidr_el0
   4a5a4:	add	x0, x1, x0
   4a5a8:	ldr	w1, [x0]
   4a5ac:	orr	w1, w1, #0x4
   4a5b0:	str	w1, [x0]
   4a5b4:	mov	w19, #0x0                   	// #0
   4a5b8:	b	4a51c <mpfr_csch@@Base+0x214>
   4a5bc:	ldr	w0, [x1, #8]
   4a5c0:	str	w0, [x22, #8]
   4a5c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4a5c8:	str	x0, [x22, #16]
   4a5cc:	mov	w19, #0x0                   	// #0
   4a5d0:	b	4a51c <mpfr_csch@@Base+0x214>
   4a5d4:	ldr	w21, [x20, #8]
   4a5d8:	mov	w3, w28
   4a5dc:	mov	x2, x20
   4a5e0:	mov	x1, #0x1                   	// #1
   4a5e4:	mov	x0, x22
   4a5e8:	bl	c2f0 <mpfr_ui_div@plt>
   4a5ec:	mov	w19, w0
   4a5f0:	cbnz	w0, 4a64c <mpfr_csch@@Base+0x344>
   4a5f4:	cmp	w28, #0x4
   4a5f8:	b.eq	4a62c <mpfr_csch@@Base+0x324>  // b.none
   4a5fc:	cmp	w28, #0x2
   4a600:	b.eq	4a63c <mpfr_csch@@Base+0x334>  // b.none
   4a604:	cmp	w28, #0x1
   4a608:	cset	w0, eq  // eq = none
   4a60c:	cmp	w21, #0x0
   4a610:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   4a614:	b.eq	4a66c <mpfr_csch@@Base+0x364>  // b.none
   4a618:	mov	w28, #0x1                   	// #1
   4a61c:	mov	x0, x22
   4a620:	bl	c120 <mpfr_nextabove@plt>
   4a624:	mov	w19, #0x1                   	// #1
   4a628:	b	4a64c <mpfr_csch@@Base+0x344>
   4a62c:	mov	w19, #0xffffffff            	// #-1
   4a630:	mov	w28, #0x3                   	// #3
   4a634:	cmp	w21, #0x0
   4a638:	b.le	4a64c <mpfr_csch@@Base+0x344>
   4a63c:	mov	w28, #0x2                   	// #2
   4a640:	tbnz	w21, #31, 4a61c <mpfr_csch@@Base+0x314>
   4a644:	mov	w19, #0x1                   	// #1
   4a648:	mov	w28, #0x2                   	// #2
   4a64c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a650:	ldr	x1, [x0, #2576]
   4a654:	add	x0, x0, #0xa10
   4a658:	blr	x1
   4a65c:	mrs	x1, tpidr_el0
   4a660:	ldr	w0, [x1, x0]
   4a664:	orr	w24, w24, w0
   4a668:	b	4a4a4 <mpfr_csch@@Base+0x19c>
   4a66c:	cmp	w0, #0x0
   4a670:	mov	w19, w21
   4a674:	ccmp	w28, #0x3, #0x4, eq  // eq = none
   4a678:	b.ne	4a64c <mpfr_csch@@Base+0x344>  // b.any
   4a67c:	cmp	w21, #0x0
   4a680:	b.le	4a694 <mpfr_csch@@Base+0x38c>
   4a684:	mov	x0, x22
   4a688:	bl	bdd0 <mpfr_nextbelow@plt>
   4a68c:	mov	w19, #0xffffffff            	// #-1
   4a690:	b	4a64c <mpfr_csch@@Base+0x344>
   4a694:	mov	w19, #0xffffffff            	// #-1
   4a698:	b	4a64c <mpfr_csch@@Base+0x344>
   4a69c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   4a6a0:	add	x2, x2, #0xfa8
   4a6a4:	mov	w1, #0x43                  	// #67
   4a6a8:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4a6ac:	add	x0, x0, #0xf08
   4a6b0:	bl	cb40 <mpfr_assert_fail@plt>
   4a6b4:	mov	x19, #0x0                   	// #0
   4a6b8:	b	4a3d0 <mpfr_csch@@Base+0xc8>
   4a6bc:	ldr	w19, [sp, #120]
   4a6c0:	add	x0, sp, #0x70
   4a6c4:	bl	c070 <mpfr_clear@plt>
   4a6c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a6cc:	ldr	x1, [x0, #2576]
   4a6d0:	add	x0, x0, #0xa10
   4a6d4:	blr	x1
   4a6d8:	mrs	x1, tpidr_el0
   4a6dc:	str	w24, [x1, x0]
   4a6e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a6e4:	ldr	x2, [x0, #2512]
   4a6e8:	add	x0, x0, #0x9d0
   4a6ec:	blr	x2
   4a6f0:	str	x25, [x1, x0]
   4a6f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a6f8:	ldr	x2, [x0, #2544]
   4a6fc:	add	x0, x0, #0x9f0
   4a700:	blr	x2
   4a704:	str	x26, [x1, x0]
   4a708:	cmp	w28, #0x0
   4a70c:	mov	w2, w19
   4a710:	csinc	w1, w28, wzr, ne  // ne = any
   4a714:	mov	x0, x22
   4a718:	bl	c3c0 <mpfr_underflow@plt>
   4a71c:	mov	w19, w0
   4a720:	ldp	x23, x24, [sp, #48]
   4a724:	ldp	x25, x26, [sp, #64]
   4a728:	b	4a51c <mpfr_csch@@Base+0x214>
   4a72c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4a730:	movk	x0, #0x7fff, lsl #48
   4a734:	sub	x0, x0, x19
   4a738:	ldr	x1, [sp, #104]
   4a73c:	cmp	x0, x1
   4a740:	b.lt	4a768 <mpfr_csch@@Base+0x460>  // b.tstop
   4a744:	ldr	x0, [sp, #104]
   4a748:	add	x19, x19, x0
   4a74c:	add	x0, x19, x19, lsr #63
   4a750:	asr	x0, x0, #1
   4a754:	str	x0, [sp, #104]
   4a758:	mov	x1, x19
   4a75c:	mov	x0, x23
   4a760:	bl	bed0 <mpfr_set_prec@plt>
   4a764:	b	4a3f4 <mpfr_csch@@Base+0xec>
   4a768:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4a76c:	add	x2, x2, #0x18
   4a770:	mov	w1, #0x5f                  	// #95
   4a774:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4a778:	add	x0, x0, #0xf08
   4a77c:	bl	cb40 <mpfr_assert_fail@plt>
   4a780:	mov	w2, w28
   4a784:	mov	w1, w19
   4a788:	mov	x0, x22
   4a78c:	bl	cb30 <mpfr_check_range@plt>
   4a790:	mov	w19, w0
   4a794:	ldp	x23, x24, [sp, #48]
   4a798:	ldp	x25, x26, [sp, #64]
   4a79c:	b	4a51c <mpfr_csch@@Base+0x214>
   4a7a0:	ldp	x23, x24, [sp, #48]
   4a7a4:	ldp	x25, x26, [sp, #64]
   4a7a8:	b	4a51c <mpfr_csch@@Base+0x214>

000000000004a7ac <mpfr_coth@@Base>:
   4a7ac:	stp	x29, x30, [sp, #-144]!
   4a7b0:	mov	x29, sp
   4a7b4:	stp	x19, x20, [sp, #16]
   4a7b8:	stp	x21, x22, [sp, #32]
   4a7bc:	stp	x27, x28, [sp, #80]
   4a7c0:	mov	x22, x0
   4a7c4:	mov	x20, x1
   4a7c8:	mov	w28, w2
   4a7cc:	ldr	x2, [x1, #16]
   4a7d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a7d4:	cmp	x2, x0
   4a7d8:	b.le	4a9d8 <mpfr_coth@@Base+0x22c>
   4a7dc:	stp	x23, x24, [sp, #48]
   4a7e0:	stp	x25, x26, [sp, #64]
   4a7e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a7e8:	ldr	x1, [x0, #2576]
   4a7ec:	add	x0, x0, #0xa10
   4a7f0:	blr	x1
   4a7f4:	mrs	x1, tpidr_el0
   4a7f8:	ldr	w24, [x1, x0]
   4a7fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a800:	ldr	x3, [x0, #2512]
   4a804:	add	x0, x0, #0x9d0
   4a808:	blr	x3
   4a80c:	add	x3, x1, x0
   4a810:	ldr	x25, [x1, x0]
   4a814:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a818:	ldr	x4, [x0, #2544]
   4a81c:	add	x0, x0, #0x9f0
   4a820:	blr	x4
   4a824:	ldr	x26, [x1, x0]
   4a828:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4a82c:	str	x4, [x3]
   4a830:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4a834:	str	x3, [x1, x0]
   4a838:	ldr	x21, [x22]
   4a83c:	ldr	x0, [x20]
   4a840:	cmp	x0, x21
   4a844:	csel	x0, x0, x21, ge  // ge = tcont
   4a848:	neg	x0, x0, lsl #1
   4a84c:	cmp	x2, x0
   4a850:	b.lt	4aa88 <mpfr_coth@@Base+0x2dc>  // b.tstop
   4a854:	cmp	x21, #0x1
   4a858:	b.eq	4ab40 <mpfr_coth@@Base+0x394>  // b.none
   4a85c:	b.le	4ab28 <mpfr_coth@@Base+0x37c>
   4a860:	sub	x19, x21, #0x1
   4a864:	clz	x0, x19
   4a868:	mov	w19, #0x40                  	// #64
   4a86c:	sub	w19, w19, w0
   4a870:	sxtw	x19, w19
   4a874:	add	x19, x21, x19
   4a878:	add	x19, x19, #0x3
   4a87c:	mov	x1, x19
   4a880:	add	x0, sp, #0x70
   4a884:	bl	ca80 <mpfr_init2@plt>
   4a888:	mov	x0, #0x40                  	// #64
   4a88c:	str	x0, [sp, #104]
   4a890:	mrs	x27, tpidr_el0
   4a894:	add	x23, sp, #0x70
   4a898:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a89c:	ldr	x1, [x0, #2576]
   4a8a0:	add	x0, x0, #0xa10
   4a8a4:	blr	x1
   4a8a8:	add	x1, x27, x0
   4a8ac:	str	x1, [sp, #96]
   4a8b0:	str	wzr, [x27, x0]
   4a8b4:	mov	w2, #0x1                   	// #1
   4a8b8:	mov	x1, x20
   4a8bc:	mov	x0, x23
   4a8c0:	bl	bb00 <mpfr_tanh@plt>
   4a8c4:	ldr	x1, [sp, #96]
   4a8c8:	ldr	w0, [x1]
   4a8cc:	tbnz	w0, #1, 4ab48 <mpfr_coth@@Base+0x39c>
   4a8d0:	mov	w3, #0x0                   	// #0
   4a8d4:	mov	x2, x23
   4a8d8:	mov	x1, #0x1                   	// #1
   4a8dc:	mov	x0, x23
   4a8e0:	bl	c2f0 <mpfr_ui_div@plt>
   4a8e4:	ldr	x1, [sp, #128]
   4a8e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a8ec:	cmp	x1, x0
   4a8f0:	b.le	4abb8 <mpfr_coth@@Base+0x40c>
   4a8f4:	cmp	w28, #0x0
   4a8f8:	cinc	x3, x21, eq  // eq = none
   4a8fc:	ldr	x0, [sp, #112]
   4a900:	add	x1, x0, #0x3e
   4a904:	subs	x0, x0, #0x1
   4a908:	csel	x1, x1, x0, mi  // mi = first
   4a90c:	asr	x1, x1, #6
   4a910:	sub	x2, x19, #0x2
   4a914:	add	x1, x1, #0x1
   4a918:	ldr	x0, [sp, #136]
   4a91c:	bl	c370 <mpfr_round_p@plt>
   4a920:	cbz	w0, 4abb8 <mpfr_coth@@Base+0x40c>
   4a924:	add	x20, sp, #0x70
   4a928:	ldr	w3, [sp, #120]
   4a92c:	mov	w2, w28
   4a930:	mov	x1, x20
   4a934:	mov	x0, x22
   4a938:	bl	c6a0 <mpfr_set4@plt>
   4a93c:	mov	w19, w0
   4a940:	mov	x0, x20
   4a944:	bl	c070 <mpfr_clear@plt>
   4a948:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a94c:	ldr	x1, [x0, #2576]
   4a950:	add	x0, x0, #0xa10
   4a954:	blr	x1
   4a958:	mrs	x1, tpidr_el0
   4a95c:	str	w24, [x1, x0]
   4a960:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a964:	ldr	x2, [x0, #2512]
   4a968:	add	x0, x0, #0x9d0
   4a96c:	blr	x2
   4a970:	str	x25, [x1, x0]
   4a974:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a978:	ldr	x2, [x0, #2544]
   4a97c:	add	x0, x0, #0x9f0
   4a980:	blr	x2
   4a984:	str	x26, [x1, x0]
   4a988:	ldr	x0, [x22, #16]
   4a98c:	cmp	x26, x0
   4a990:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   4a994:	b.gt	4ac60 <mpfr_coth@@Base+0x4b4>
   4a998:	cbz	w19, 4ac80 <mpfr_coth@@Base+0x4d4>
   4a99c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4a9a0:	ldr	x1, [x0, #2576]
   4a9a4:	add	x0, x0, #0xa10
   4a9a8:	blr	x1
   4a9ac:	orr	w24, w24, #0x8
   4a9b0:	mrs	x1, tpidr_el0
   4a9b4:	str	w24, [x1, x0]
   4a9b8:	ldp	x23, x24, [sp, #48]
   4a9bc:	ldp	x25, x26, [sp, #64]
   4a9c0:	mov	w0, w19
   4a9c4:	ldp	x19, x20, [sp, #16]
   4a9c8:	ldp	x21, x22, [sp, #32]
   4a9cc:	ldp	x27, x28, [sp, #80]
   4a9d0:	ldp	x29, x30, [sp], #144
   4a9d4:	ret
   4a9d8:	mov	x0, #0x2                   	// #2
   4a9dc:	movk	x0, #0x8000, lsl #48
   4a9e0:	cmp	x2, x0
   4a9e4:	b.eq	4aa30 <mpfr_coth@@Base+0x284>  // b.none
   4a9e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a9ec:	cmp	x2, x0
   4a9f0:	b.eq	4aa60 <mpfr_coth@@Base+0x2b4>  // b.none
   4a9f4:	ldr	w0, [x1, #8]
   4a9f8:	str	w0, [x22, #8]
   4a9fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4aa00:	str	x0, [x22, #16]
   4aa04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4aa08:	ldr	x1, [x0, #2576]
   4aa0c:	add	x0, x0, #0xa10
   4aa10:	blr	x1
   4aa14:	mrs	x1, tpidr_el0
   4aa18:	add	x0, x1, x0
   4aa1c:	ldr	w1, [x0]
   4aa20:	orr	w1, w1, #0x20
   4aa24:	str	w1, [x0]
   4aa28:	mov	w19, #0x0                   	// #0
   4aa2c:	b	4a9c0 <mpfr_coth@@Base+0x214>
   4aa30:	str	x0, [x22, #16]
   4aa34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4aa38:	ldr	x1, [x0, #2576]
   4aa3c:	add	x0, x0, #0xa10
   4aa40:	blr	x1
   4aa44:	mrs	x1, tpidr_el0
   4aa48:	add	x0, x1, x0
   4aa4c:	ldr	w1, [x0]
   4aa50:	orr	w1, w1, #0x4
   4aa54:	str	w1, [x0]
   4aa58:	mov	w19, #0x0                   	// #0
   4aa5c:	b	4a9c0 <mpfr_coth@@Base+0x214>
   4aa60:	ldr	w0, [x1, #8]
   4aa64:	mov	x1, #0xffffffffffffffff    	// #-1
   4aa68:	cmp	w0, #0x0
   4aa6c:	mov	w3, w28
   4aa70:	mov	x2, #0x0                   	// #0
   4aa74:	cneg	x1, x1, gt
   4aa78:	mov	x0, x22
   4aa7c:	bl	ba80 <mpfr_set_si_2exp@plt>
   4aa80:	mov	w19, w0
   4aa84:	b	4a9c0 <mpfr_coth@@Base+0x214>
   4aa88:	ldr	w21, [x20, #8]
   4aa8c:	mov	w3, w28
   4aa90:	mov	x2, x20
   4aa94:	mov	x1, #0x1                   	// #1
   4aa98:	mov	x0, x22
   4aa9c:	bl	c2f0 <mpfr_ui_div@plt>
   4aaa0:	mov	w19, w0
   4aaa4:	cbnz	w0, 4aac4 <mpfr_coth@@Base+0x318>
   4aaa8:	cmp	w28, #0x4
   4aaac:	b.eq	4aae4 <mpfr_coth@@Base+0x338>  // b.none
   4aab0:	cmp	w28, #0x2
   4aab4:	b.eq	4ab00 <mpfr_coth@@Base+0x354>  // b.none
   4aab8:	neg	w19, w21
   4aabc:	cmp	w28, #0x3
   4aac0:	b.eq	4ab10 <mpfr_coth@@Base+0x364>  // b.none
   4aac4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4aac8:	ldr	x1, [x0, #2576]
   4aacc:	add	x0, x0, #0xa10
   4aad0:	blr	x1
   4aad4:	mrs	x1, tpidr_el0
   4aad8:	ldr	w0, [x1, x0]
   4aadc:	orr	w24, w24, w0
   4aae0:	b	4a948 <mpfr_coth@@Base+0x19c>
   4aae4:	cmp	w21, #0x0
   4aae8:	b.le	4ab10 <mpfr_coth@@Base+0x364>
   4aaec:	mov	x0, x22
   4aaf0:	bl	c120 <mpfr_nextabove@plt>
   4aaf4:	mov	w19, #0x1                   	// #1
   4aaf8:	mov	w28, #0x2                   	// #2
   4aafc:	b	4aac4 <mpfr_coth@@Base+0x318>
   4ab00:	mov	w19, #0x1                   	// #1
   4ab04:	cmp	w21, #0x0
   4ab08:	b.le	4aac4 <mpfr_coth@@Base+0x318>
   4ab0c:	b	4aaec <mpfr_coth@@Base+0x340>
   4ab10:	mov	w19, #0xffffffff            	// #-1
   4ab14:	mov	w28, #0x3                   	// #3
   4ab18:	tbz	w21, #31, 4aac4 <mpfr_coth@@Base+0x318>
   4ab1c:	mov	x0, x22
   4ab20:	bl	bdd0 <mpfr_nextbelow@plt>
   4ab24:	b	4aac4 <mpfr_coth@@Base+0x318>
   4ab28:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   4ab2c:	add	x2, x2, #0xfa8
   4ab30:	mov	w1, #0x43                  	// #67
   4ab34:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4ab38:	add	x0, x0, #0xf08
   4ab3c:	bl	cb40 <mpfr_assert_fail@plt>
   4ab40:	mov	x19, #0x0                   	// #0
   4ab44:	b	4a874 <mpfr_coth@@Base+0xc8>
   4ab48:	ldr	w19, [sp, #120]
   4ab4c:	add	x0, sp, #0x70
   4ab50:	bl	c070 <mpfr_clear@plt>
   4ab54:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ab58:	ldr	x1, [x0, #2576]
   4ab5c:	add	x0, x0, #0xa10
   4ab60:	blr	x1
   4ab64:	mrs	x1, tpidr_el0
   4ab68:	str	w24, [x1, x0]
   4ab6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ab70:	ldr	x2, [x0, #2512]
   4ab74:	add	x0, x0, #0x9d0
   4ab78:	blr	x2
   4ab7c:	str	x25, [x1, x0]
   4ab80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ab84:	ldr	x2, [x0, #2544]
   4ab88:	add	x0, x0, #0x9f0
   4ab8c:	blr	x2
   4ab90:	str	x26, [x1, x0]
   4ab94:	cmp	w28, #0x0
   4ab98:	mov	w2, w19
   4ab9c:	csinc	w1, w28, wzr, ne  // ne = any
   4aba0:	mov	x0, x22
   4aba4:	bl	c3c0 <mpfr_underflow@plt>
   4aba8:	mov	w19, w0
   4abac:	ldp	x23, x24, [sp, #48]
   4abb0:	ldp	x25, x26, [sp, #64]
   4abb4:	b	4a9c0 <mpfr_coth@@Base+0x214>
   4abb8:	ldr	x0, [sp, #128]
   4abbc:	cmp	x0, #0x1
   4abc0:	b.eq	4ac00 <mpfr_coth@@Base+0x454>  // b.none
   4abc4:	mov	x0, #0xfffffffffffffeff    	// #-257
   4abc8:	movk	x0, #0x7fff, lsl #48
   4abcc:	sub	x0, x0, x19
   4abd0:	ldr	x1, [sp, #104]
   4abd4:	cmp	x0, x1
   4abd8:	b.lt	4ac48 <mpfr_coth@@Base+0x49c>  // b.tstop
   4abdc:	ldr	x0, [sp, #104]
   4abe0:	add	x19, x19, x0
   4abe4:	add	x0, x19, x19, lsr #63
   4abe8:	asr	x0, x0, #1
   4abec:	str	x0, [sp, #104]
   4abf0:	mov	x1, x19
   4abf4:	mov	x0, x23
   4abf8:	bl	bed0 <mpfr_set_prec@plt>
   4abfc:	b	4a898 <mpfr_coth@@Base+0xec>
   4ac00:	mov	w3, #0x0                   	// #0
   4ac04:	ldrsw	x2, [sp, #120]
   4ac08:	mov	x1, x23
   4ac0c:	mov	x0, x23
   4ac10:	bl	c060 <mpfr_sub_si@plt>
   4ac14:	ldr	x0, [sp, #128]
   4ac18:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4ac1c:	cmp	x0, x1
   4ac20:	b.eq	4ac30 <mpfr_coth@@Base+0x484>  // b.none
   4ac24:	neg	x1, x21
   4ac28:	cmp	x0, x1
   4ac2c:	b.gt	4abc4 <mpfr_coth@@Base+0x418>
   4ac30:	add	x0, sp, #0x70
   4ac34:	mov	w3, #0x0                   	// #0
   4ac38:	ldrsw	x2, [sp, #120]
   4ac3c:	mov	x1, x0
   4ac40:	bl	c7f0 <mpfr_add_si@plt>
   4ac44:	b	4a924 <mpfr_coth@@Base+0x178>
   4ac48:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4ac4c:	add	x2, x2, #0x18
   4ac50:	mov	w1, #0x5f                  	// #95
   4ac54:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4ac58:	add	x0, x0, #0xf08
   4ac5c:	bl	cb40 <mpfr_assert_fail@plt>
   4ac60:	mov	w2, w28
   4ac64:	mov	w1, w19
   4ac68:	mov	x0, x22
   4ac6c:	bl	cb30 <mpfr_check_range@plt>
   4ac70:	mov	w19, w0
   4ac74:	ldp	x23, x24, [sp, #48]
   4ac78:	ldp	x25, x26, [sp, #64]
   4ac7c:	b	4a9c0 <mpfr_coth@@Base+0x214>
   4ac80:	ldp	x23, x24, [sp, #48]
   4ac84:	ldp	x25, x26, [sp, #64]
   4ac88:	b	4a9c0 <mpfr_coth@@Base+0x214>

000000000004ac8c <mpfr_round_near_x@@Base>:
   4ac8c:	stp	x29, x30, [sp, #-80]!
   4ac90:	mov	x29, sp
   4ac94:	stp	x19, x20, [sp, #16]
   4ac98:	stp	x21, x22, [sp, #32]
   4ac9c:	stp	x25, x26, [sp, #64]
   4aca0:	mov	x20, x0
   4aca4:	mov	w22, w3
   4aca8:	cmp	w4, #0x5
   4acac:	csinc	w19, w4, wzr, ne  // ne = any
   4acb0:	ldr	x3, [x0]
   4acb4:	add	x0, x3, #0x1
   4acb8:	mov	w26, #0x0                   	// #0
   4acbc:	cmp	x0, x2
   4acc0:	b.cs	4ae3c <mpfr_round_near_x@@Base+0x1b0>  // b.hs, b.nlast
   4acc4:	stp	x23, x24, [sp, #48]
   4acc8:	mov	x25, x1
   4accc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4acd0:	ldr	x1, [x0, #2576]
   4acd4:	add	x0, x0, #0xa10
   4acd8:	blr	x1
   4acdc:	mrs	x1, tpidr_el0
   4ace0:	ldr	w24, [x1, x0]
   4ace4:	ldr	x0, [x25]
   4ace8:	cmp	x0, x2
   4acec:	b.cc	4ad1c <mpfr_round_near_x@@Base+0x90>  // b.lo, b.ul, b.last
   4acf0:	cmp	w19, #0x0
   4acf4:	cinc	x3, x3, eq  // eq = none
   4acf8:	add	x1, x0, #0x3e
   4acfc:	subs	x0, x0, #0x1
   4ad00:	csel	x0, x1, x0, mi  // mi = first
   4ad04:	asr	x1, x0, #6
   4ad08:	add	x1, x1, #0x1
   4ad0c:	ldr	x0, [x25, #24]
   4ad10:	bl	c370 <mpfr_round_p@plt>
   4ad14:	mov	w26, w0
   4ad18:	cbz	w0, 4b120 <mpfr_round_near_x@@Base+0x494>
   4ad1c:	ldr	w23, [x25, #8]
   4ad20:	ldr	x0, [x25, #16]
   4ad24:	str	x0, [x20, #16]
   4ad28:	str	w23, [x20, #8]
   4ad2c:	ldr	x1, [x25]
   4ad30:	ldr	x0, [x20]
   4ad34:	ldr	x21, [x20, #24]
   4ad38:	cmp	x1, x0
   4ad3c:	b.le	4ae54 <mpfr_round_near_x@@Base+0x1c8>
   4ad40:	add	x5, x1, #0x3e
   4ad44:	subs	x1, x1, #0x1
   4ad48:	csel	x5, x5, x1, mi  // mi = first
   4ad4c:	asr	x5, x5, #6
   4ad50:	add	x6, x0, #0x3e
   4ad54:	subs	x1, x0, #0x1
   4ad58:	csel	x6, x6, x1, mi  // mi = first
   4ad5c:	asr	x6, x6, #6
   4ad60:	add	x2, x6, #0x1
   4ad64:	neg	w0, w0
   4ad68:	sub	x8, x5, x6
   4ad6c:	ldr	x9, [x25, #24]
   4ad70:	add	x1, x9, x8, lsl #3
   4ad74:	ands	w0, w0, #0x3f
   4ad78:	b.eq	4af20 <mpfr_round_near_x@@Base+0x294>  // b.none
   4ad7c:	sub	w4, w0, #0x1
   4ad80:	mov	x0, #0x1                   	// #1
   4ad84:	lsl	x0, x0, x4
   4ad88:	ldr	x3, [x9, x8, lsl #3]
   4ad8c:	and	x7, x3, x0
   4ad90:	sub	x0, x0, #0x1
   4ad94:	and	x3, x0, x3
   4ad98:	cmp	w19, #0x0
   4ad9c:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   4ada0:	b.ne	4adc8 <mpfr_round_near_x@@Base+0x13c>  // b.any
   4ada4:	subs	x5, x5, x6
   4ada8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4adac:	b.ne	4adc8 <mpfr_round_near_x@@Base+0x13c>  // b.any
   4adb0:	mvn	x0, x5
   4adb4:	add	x0, x1, x0, lsl #3
   4adb8:	ldr	x3, [x0, x5, lsl #3]
   4adbc:	subs	x5, x5, #0x1
   4adc0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4adc4:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x12c>  // b.none
   4adc8:	mov	x25, #0x2                   	// #2
   4adcc:	lsl	x25, x25, x4
   4add0:	cmp	w19, #0x5
   4add4:	b.eq	4af70 <mpfr_round_near_x@@Base+0x2e4>  // b.none
   4add8:	cbnz	w19, 4b0ac <mpfr_round_near_x@@Base+0x420>
   4addc:	cbnz	x7, 4af8c <mpfr_round_near_x@@Base+0x300>
   4ade0:	orr	x3, x7, x3
   4ade4:	cmp	x3, #0x0
   4ade8:	csneg	w26, wzr, w23, eq  // eq = none
   4adec:	cmp	x21, x1
   4adf0:	b.eq	4ae00 <mpfr_round_near_x@@Base+0x174>  // b.none
   4adf4:	lsl	x2, x2, #3
   4adf8:	mov	x0, x21
   4adfc:	bl	ba10 <memcpy@plt>
   4ae00:	neg	x4, x25
   4ae04:	ldr	x1, [x21]
   4ae08:	and	x4, x1, x4
   4ae0c:	str	x4, [x21]
   4ae10:	cbz	w26, 4aea8 <mpfr_round_near_x@@Base+0x21c>
   4ae14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ae18:	ldr	x1, [x0, #2576]
   4ae1c:	add	x0, x0, #0xa10
   4ae20:	blr	x1
   4ae24:	mrs	x1, tpidr_el0
   4ae28:	add	x0, x1, x0
   4ae2c:	ldr	w1, [x0]
   4ae30:	orr	w1, w1, #0x8
   4ae34:	str	w1, [x0]
   4ae38:	ldp	x23, x24, [sp, #48]
   4ae3c:	mov	w0, w26
   4ae40:	ldp	x19, x20, [sp, #16]
   4ae44:	ldp	x21, x22, [sp, #32]
   4ae48:	ldp	x25, x26, [sp, #64]
   4ae4c:	ldp	x29, x30, [sp], #80
   4ae50:	ret
   4ae54:	add	x2, x1, #0x3e
   4ae58:	subs	x1, x1, #0x1
   4ae5c:	csel	x1, x2, x1, mi  // mi = first
   4ae60:	asr	x1, x1, #6
   4ae64:	add	x2, x1, #0x1
   4ae68:	add	x26, x0, #0x3e
   4ae6c:	subs	x0, x0, #0x1
   4ae70:	csel	x0, x26, x0, mi  // mi = first
   4ae74:	asr	x26, x0, #6
   4ae78:	sub	x26, x26, x1
   4ae7c:	lsl	x26, x26, #3
   4ae80:	add	x0, x21, x26
   4ae84:	ldr	x1, [x25, #24]
   4ae88:	cmp	x0, x1
   4ae8c:	b.eq	4ae98 <mpfr_round_near_x@@Base+0x20c>  // b.none
   4ae90:	lsl	x2, x2, #3
   4ae94:	bl	ba10 <memcpy@plt>
   4ae98:	mov	x2, x26
   4ae9c:	mov	w1, #0x0                   	// #0
   4aea0:	mov	x0, x21
   4aea4:	bl	c110 <memset@plt>
   4aea8:	cbnz	w22, 4aff4 <mpfr_round_near_x@@Base+0x368>
   4aeac:	cmp	w19, #0x1
   4aeb0:	b.eq	4aec4 <mpfr_round_near_x@@Base+0x238>  // b.none
   4aeb4:	add	w19, w19, w23, lsr #31
   4aeb8:	mov	w26, w23
   4aebc:	cmp	w19, #0x3
   4aec0:	b.ne	4ae14 <mpfr_round_near_x@@Base+0x188>  // b.any
   4aec4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4aec8:	ldr	x1, [x0, #2576]
   4aecc:	add	x0, x0, #0xa10
   4aed0:	blr	x1
   4aed4:	mrs	x1, tpidr_el0
   4aed8:	str	w24, [x1, x0]
   4aedc:	neg	w26, w23
   4aee0:	mov	x0, x20
   4aee4:	bl	c460 <mpfr_nexttozero@plt>
   4aee8:	ldr	x1, [x20, #16]
   4aeec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4aef0:	cmp	x1, x0
   4aef4:	b.ne	4ae14 <mpfr_round_near_x@@Base+0x188>  // b.any
   4aef8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4aefc:	ldr	x1, [x0, #2576]
   4af00:	add	x0, x0, #0xa10
   4af04:	blr	x1
   4af08:	mrs	x1, tpidr_el0
   4af0c:	add	x0, x1, x0
   4af10:	ldr	w1, [x0]
   4af14:	orr	w1, w1, #0x1
   4af18:	str	w1, [x0]
   4af1c:	b	4ae14 <mpfr_round_near_x@@Base+0x188>
   4af20:	ldur	x0, [x1, #-8]
   4af24:	and	x7, x0, #0x8000000000000000
   4af28:	and	x3, x0, #0x7fffffffffffffff
   4af2c:	cmp	w19, #0x0
   4af30:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   4af34:	b.lt	4b0a0 <mpfr_round_near_x@@Base+0x414>  // b.tstop
   4af38:	sub	x5, x5, x6
   4af3c:	subs	x4, x5, #0x1
   4af40:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4af44:	b.ne	4af68 <mpfr_round_near_x@@Base+0x2dc>  // b.any
   4af48:	mvn	x5, x5
   4af4c:	add	x0, x1, x5, lsl #3
   4af50:	ldr	x3, [x0, x4, lsl #3]
   4af54:	subs	x4, x4, #0x1
   4af58:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4af5c:	b.eq	4af50 <mpfr_round_near_x@@Base+0x2c4>  // b.none
   4af60:	mov	x25, #0x1                   	// #1
   4af64:	b	4add0 <mpfr_round_near_x@@Base+0x144>
   4af68:	mov	x25, #0x1                   	// #1
   4af6c:	b	4add0 <mpfr_round_near_x@@Base+0x144>
   4af70:	mov	w26, #0x0                   	// #0
   4af74:	b	4adec <mpfr_round_near_x@@Base+0x160>
   4af78:	mov	w26, #0x0                   	// #0
   4af7c:	b	4adec <mpfr_round_near_x@@Base+0x160>
   4af80:	mov	x25, #0x1                   	// #1
   4af84:	mov	w26, #0x0                   	// #0
   4af88:	b	4adec <mpfr_round_near_x@@Base+0x160>
   4af8c:	cmp	w22, #0x0
   4af90:	ccmp	x3, #0x0, #0x0, eq  // eq = none
   4af94:	neg	w26, w23
   4af98:	b.ne	4b0c8 <mpfr_round_near_x@@Base+0x43c>  // b.any
   4af9c:	b	4adec <mpfr_round_near_x@@Base+0x160>
   4afa0:	cmp	x21, x1
   4afa4:	b.eq	4b108 <mpfr_round_near_x@@Base+0x47c>  // b.none
   4afa8:	cmp	x6, x0
   4afac:	b.le	4b108 <mpfr_round_near_x@@Base+0x47c>
   4afb0:	ldr	x2, [x1, x4, lsl #3]
   4afb4:	str	x2, [x21, x4, lsl #3]
   4afb8:	cmp	x6, x4
   4afbc:	add	x4, x4, #0x1
   4afc0:	b.gt	4afb0 <mpfr_round_near_x@@Base+0x324>
   4afc4:	b	4b108 <mpfr_round_near_x@@Base+0x47c>
   4afc8:	add	x5, x6, #0x1
   4afcc:	mov	x0, #0x1                   	// #1
   4afd0:	cmp	x5, x0
   4afd4:	b.eq	4b054 <mpfr_round_near_x@@Base+0x3c8>  // b.none
   4afd8:	ldr	x3, [x1, x0, lsl #3]
   4afdc:	add	x3, x3, #0x1
   4afe0:	str	x3, [x21, x0, lsl #3]
   4afe4:	add	x4, x0, #0x1
   4afe8:	cbnz	x3, 4afa0 <mpfr_round_near_x@@Base+0x314>
   4afec:	mov	x0, x4
   4aff0:	b	4afd0 <mpfr_round_near_x@@Base+0x344>
   4aff4:	cmp	w19, #0x4
   4aff8:	b.eq	4b010 <mpfr_round_near_x@@Base+0x384>  // b.none
   4affc:	mvn	w0, w23
   4b000:	add	w19, w19, w0, lsr #31
   4b004:	neg	w26, w23
   4b008:	cmp	w19, #0x3
   4b00c:	b.ne	4ae14 <mpfr_round_near_x@@Base+0x188>  // b.any
   4b010:	mov	x0, x20
   4b014:	bl	c670 <mpfr_nexttoinf@plt>
   4b018:	ldr	x1, [x20, #16]
   4b01c:	mov	w26, w23
   4b020:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4b024:	cmp	x1, x0
   4b028:	b.ne	4ae14 <mpfr_round_near_x@@Base+0x188>  // b.any
   4b02c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b030:	ldr	x1, [x0, #2576]
   4b034:	add	x0, x0, #0xa10
   4b038:	blr	x1
   4b03c:	mrs	x1, tpidr_el0
   4b040:	add	x0, x1, x0
   4b044:	ldr	w1, [x0]
   4b048:	orr	w1, w1, #0x2
   4b04c:	str	w1, [x0]
   4b050:	b	4ae14 <mpfr_round_near_x@@Base+0x188>
   4b054:	add	x2, x21, x2, lsl #3
   4b058:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4b05c:	stur	x0, [x2, #-8]
   4b060:	ldr	x1, [x20, #16]
   4b064:	add	x1, x1, #0x1
   4b068:	str	x1, [x20, #16]
   4b06c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b070:	ldr	x2, [x0, #2544]
   4b074:	add	x0, x0, #0x9f0
   4b078:	blr	x2
   4b07c:	mrs	x2, tpidr_el0
   4b080:	ldr	x0, [x2, x0]
   4b084:	cmp	x1, x0
   4b088:	b.le	4b108 <mpfr_round_near_x@@Base+0x47c>
   4b08c:	mov	w2, w23
   4b090:	mov	w1, w19
   4b094:	mov	x0, x20
   4b098:	bl	bf40 <mpfr_overflow@plt>
   4b09c:	b	4b108 <mpfr_round_near_x@@Base+0x47c>
   4b0a0:	mov	x25, #0x1                   	// #1
   4b0a4:	cmp	w19, #0x5
   4b0a8:	b.eq	4af80 <mpfr_round_near_x@@Base+0x2f4>  // b.none
   4b0ac:	cmp	w19, #0x1
   4b0b0:	b.eq	4ade0 <mpfr_round_near_x@@Base+0x154>  // b.none
   4b0b4:	add	w0, w19, w23, lsr #31
   4b0b8:	cmp	w0, #0x3
   4b0bc:	b.eq	4ade0 <mpfr_round_near_x@@Base+0x154>  // b.none
   4b0c0:	orr	x3, x7, x3
   4b0c4:	cbz	x3, 4af78 <mpfr_round_near_x@@Base+0x2ec>
   4b0c8:	ldr	x0, [x9, x8, lsl #3]
   4b0cc:	add	x0, x25, x0
   4b0d0:	str	x0, [x21]
   4b0d4:	cmp	x0, x25
   4b0d8:	b.cc	4afc8 <mpfr_round_near_x@@Base+0x33c>  // b.lo, b.ul, b.last
   4b0dc:	cmp	x21, x1
   4b0e0:	b.eq	4b108 <mpfr_round_near_x@@Base+0x47c>  // b.none
   4b0e4:	cmp	x2, #0x1
   4b0e8:	b.le	4b108 <mpfr_round_near_x@@Base+0x47c>
   4b0ec:	add	x6, x6, #0x1
   4b0f0:	mov	x0, #0x1                   	// #1
   4b0f4:	ldr	x2, [x1, x0, lsl #3]
   4b0f8:	str	x2, [x21, x0, lsl #3]
   4b0fc:	add	x0, x0, #0x1
   4b100:	cmp	x0, x6
   4b104:	b.ne	4b0f4 <mpfr_round_near_x@@Base+0x468>  // b.any
   4b108:	neg	x4, x25
   4b10c:	ldr	x0, [x21]
   4b110:	and	x4, x0, x4
   4b114:	str	x4, [x21]
   4b118:	mov	w26, w23
   4b11c:	b	4ae10 <mpfr_round_near_x@@Base+0x184>
   4b120:	ldp	x23, x24, [sp, #48]
   4b124:	b	4ae3c <mpfr_round_near_x@@Base+0x1b0>

000000000004b128 <mpfr_abort_prec_max@@Base>:
   4b128:	stp	x29, x30, [sp, #-16]!
   4b12c:	mov	x29, sp
   4b130:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   4b134:	ldr	x0, [x0, #3968]
   4b138:	ldr	x3, [x0]
   4b13c:	mov	x2, #0x21                  	// #33
   4b140:	mov	x1, #0x1                   	// #1
   4b144:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4b148:	add	x0, x0, #0xf38
   4b14c:	bl	c8c0 <fwrite@plt>
   4b150:	bl	c3e0 <abort@plt>

000000000004b154 <mpfr_custom_get_size@@Base>:
   4b154:	add	x1, x0, #0x3e
   4b158:	subs	x0, x0, #0x1
   4b15c:	csel	x0, x1, x0, mi  // mi = first
   4b160:	asr	x0, x0, #6
   4b164:	add	x0, x0, #0x1
   4b168:	lsl	x0, x0, #3
   4b16c:	ret

000000000004b170 <mpfr_custom_init@@Base>:
   4b170:	ret

000000000004b174 <mpfr_custom_get_significand@@Base>:
   4b174:	ldr	x0, [x0, #24]
   4b178:	ret

000000000004b17c <mpfr_custom_get_exp@@Base>:
   4b17c:	ldr	x0, [x0, #16]
   4b180:	ret

000000000004b184 <mpfr_custom_move@@Base>:
   4b184:	str	x1, [x0, #24]
   4b188:	ret

000000000004b18c <mpfr_custom_init_set@@Base>:
   4b18c:	mov	w5, #0x1                   	// #1
   4b190:	tbnz	w1, #31, 4b1b0 <mpfr_custom_init_set@@Base+0x24>
   4b194:	cmp	w1, #0x3
   4b198:	b.ne	4b1bc <mpfr_custom_init_set@@Base+0x30>  // b.any
   4b19c:	str	x3, [x0]
   4b1a0:	str	w5, [x0, #8]
   4b1a4:	str	x2, [x0, #16]
   4b1a8:	str	x4, [x0, #24]
   4b1ac:	ret
   4b1b0:	neg	w1, w1
   4b1b4:	mov	w5, #0xffffffff            	// #-1
   4b1b8:	b	4b194 <mpfr_custom_init_set@@Base+0x8>
   4b1bc:	cbz	w1, 4b1d4 <mpfr_custom_init_set@@Base+0x48>
   4b1c0:	cmp	w1, #0x1
   4b1c4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   4b1c8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4b1cc:	csel	x2, x2, x1, eq  // eq = none
   4b1d0:	b	4b19c <mpfr_custom_init_set@@Base+0x10>
   4b1d4:	mov	x2, #0x2                   	// #2
   4b1d8:	movk	x2, #0x8000, lsl #48
   4b1dc:	b	4b19c <mpfr_custom_init_set@@Base+0x10>

000000000004b1e0 <mpfr_custom_get_kind@@Base>:
   4b1e0:	mov	x1, x0
   4b1e4:	ldr	x2, [x0, #16]
   4b1e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4b1ec:	cmp	x2, x0
   4b1f0:	b.le	4b200 <mpfr_custom_get_kind@@Base+0x20>
   4b1f4:	ldr	w0, [x1, #8]
   4b1f8:	add	w0, w0, w0, lsl #1
   4b1fc:	ret
   4b200:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4b204:	cmp	x2, x0
   4b208:	b.eq	4b22c <mpfr_custom_get_kind@@Base+0x4c>  // b.none
   4b20c:	mov	w0, #0x0                   	// #0
   4b210:	mov	x3, #0x2                   	// #2
   4b214:	movk	x3, #0x8000, lsl #48
   4b218:	cmp	x2, x3
   4b21c:	b.eq	4b1fc <mpfr_custom_get_kind@@Base+0x1c>  // b.none
   4b220:	ldr	w0, [x1, #8]
   4b224:	lsl	w0, w0, #1
   4b228:	b	4b1fc <mpfr_custom_get_kind@@Base+0x1c>
   4b22c:	ldr	w0, [x1, #8]
   4b230:	b	4b1fc <mpfr_custom_get_kind@@Base+0x1c>
   4b234:	mov	x2, x0
   4b238:	ldr	x4, [x0, #16]
   4b23c:	mov	w0, #0x0                   	// #0
   4b240:	cmp	x4, #0x0
   4b244:	b.le	4b29c <mpfr_custom_get_kind@@Base+0xbc>
   4b248:	ldr	x3, [x2]
   4b24c:	mov	w0, #0x0                   	// #0
   4b250:	cmp	x4, x3
   4b254:	b.gt	4b29c <mpfr_custom_get_kind@@Base+0xbc>
   4b258:	add	x1, x3, #0x3e
   4b25c:	subs	x3, x3, #0x1
   4b260:	csel	x1, x1, x3, mi  // mi = first
   4b264:	and	x1, x1, #0xffffffffffffffc0
   4b268:	add	x1, x1, #0x40
   4b26c:	subs	x1, x1, x4
   4b270:	add	x3, x1, #0x3f
   4b274:	csel	x3, x3, x1, mi  // mi = first
   4b278:	asr	x3, x3, #6
   4b27c:	ldr	x2, [x2, #24]
   4b280:	negs	x0, x1
   4b284:	and	x1, x1, #0x3f
   4b288:	and	x0, x0, #0x3f
   4b28c:	csneg	x1, x1, x0, mi  // mi = first
   4b290:	ldr	x0, [x2, x3, lsl #3]
   4b294:	lsr	x0, x0, x1
   4b298:	and	w0, w0, #0x1
   4b29c:	ret

000000000004b2a0 <mpfr_lngamma@@Base>:
   4b2a0:	stp	x29, x30, [sp, #-48]!
   4b2a4:	mov	x29, sp
   4b2a8:	stp	x19, x20, [sp, #16]
   4b2ac:	str	x21, [sp, #32]
   4b2b0:	mov	x21, x0
   4b2b4:	mov	x19, x1
   4b2b8:	mov	w20, w2
   4b2bc:	ldr	x2, [x1, #16]
   4b2c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4b2c4:	cmp	x2, x1
   4b2c8:	b.le	4b354 <mpfr_lngamma@@Base+0xb4>
   4b2cc:	ldr	w0, [x19, #8]
   4b2d0:	tbnz	w0, #31, 4b2fc <mpfr_lngamma@@Base+0x5c>
   4b2d4:	mov	w2, w20
   4b2d8:	mov	x1, x19
   4b2dc:	mov	x0, x21
   4b2e0:	bl	4b3e0 <mpfr_lngamma@@Base+0x140>
   4b2e4:	mov	w1, w0
   4b2e8:	mov	w0, w1
   4b2ec:	ldp	x19, x20, [sp, #16]
   4b2f0:	ldr	x21, [sp, #32]
   4b2f4:	ldp	x29, x30, [sp], #48
   4b2f8:	ret
   4b2fc:	mov	x0, x19
   4b300:	bl	c160 <mpfr_integer_p@plt>
   4b304:	cbnz	w0, 4b354 <mpfr_lngamma@@Base+0xb4>
   4b308:	ldr	w0, [x19, #8]
   4b30c:	tbz	w0, #31, 4b2d4 <mpfr_lngamma@@Base+0x34>
   4b310:	mov	x0, x19
   4b314:	bl	4b234 <mpfr_custom_get_kind@@Base+0x54>
   4b318:	mov	w1, w0
   4b31c:	cbnz	w0, 4b2d4 <mpfr_lngamma@@Base+0x34>
   4b320:	mov	x0, #0x2                   	// #2
   4b324:	movk	x0, #0x8000, lsl #48
   4b328:	str	x0, [x21, #16]
   4b32c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b330:	ldr	x2, [x0, #2576]
   4b334:	add	x0, x0, #0xa10
   4b338:	blr	x2
   4b33c:	mrs	x2, tpidr_el0
   4b340:	add	x0, x2, x0
   4b344:	ldr	w2, [x0]
   4b348:	orr	w2, w2, #0x4
   4b34c:	str	w2, [x0]
   4b350:	b	4b2e8 <mpfr_lngamma@@Base+0x48>
   4b354:	ldr	x0, [x19, #16]
   4b358:	mov	x1, #0x2                   	// #2
   4b35c:	movk	x1, #0x8000, lsl #48
   4b360:	cmp	x0, x1
   4b364:	b.eq	4b3b0 <mpfr_lngamma@@Base+0x110>  // b.none
   4b368:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4b36c:	cmp	x0, x1
   4b370:	b.eq	4b398 <mpfr_lngamma@@Base+0xf8>  // b.none
   4b374:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b378:	ldr	x1, [x0, #2576]
   4b37c:	add	x0, x0, #0xa10
   4b380:	blr	x1
   4b384:	mrs	x1, tpidr_el0
   4b388:	add	x0, x1, x0
   4b38c:	ldr	w1, [x0]
   4b390:	orr	w1, w1, #0x20
   4b394:	str	w1, [x0]
   4b398:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4b39c:	str	x0, [x21, #16]
   4b3a0:	mov	w0, #0x1                   	// #1
   4b3a4:	str	w0, [x21, #8]
   4b3a8:	mov	w1, #0x0                   	// #0
   4b3ac:	b	4b2e8 <mpfr_lngamma@@Base+0x48>
   4b3b0:	str	x1, [x21, #16]
   4b3b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b3b8:	ldr	x1, [x0, #2576]
   4b3bc:	add	x0, x0, #0xa10
   4b3c0:	blr	x1
   4b3c4:	mrs	x1, tpidr_el0
   4b3c8:	add	x0, x1, x0
   4b3cc:	ldr	w1, [x0]
   4b3d0:	orr	w1, w1, #0x4
   4b3d4:	str	w1, [x0]
   4b3d8:	mov	w1, #0x0                   	// #0
   4b3dc:	b	4b2e8 <mpfr_lngamma@@Base+0x48>
   4b3e0:	sub	sp, sp, #0x220
   4b3e4:	stp	x29, x30, [sp]
   4b3e8:	mov	x29, sp
   4b3ec:	stp	x23, x24, [sp, #48]
   4b3f0:	stp	x27, x28, [sp, #80]
   4b3f4:	str	x0, [sp, #128]
   4b3f8:	mov	x28, x1
   4b3fc:	str	w2, [sp, #176]
   4b400:	mov	x2, #0x0                   	// #0
   4b404:	mov	x1, #0x1                   	// #1
   4b408:	mov	x0, x28
   4b40c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4b410:	mov	w27, w0
   4b414:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b418:	ldr	x1, [x0, #2576]
   4b41c:	add	x0, x0, #0xa10
   4b420:	blr	x1
   4b424:	mrs	x1, tpidr_el0
   4b428:	ldr	w0, [x1, x0]
   4b42c:	str	w0, [sp, #180]
   4b430:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b434:	ldr	x2, [x0, #2512]
   4b438:	add	x0, x0, #0x9d0
   4b43c:	blr	x2
   4b440:	add	x2, x1, x0
   4b444:	ldr	x0, [x1, x0]
   4b448:	str	x0, [sp, #184]
   4b44c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b450:	ldr	x3, [x0, #2544]
   4b454:	add	x0, x0, #0x9f0
   4b458:	blr	x3
   4b45c:	ldr	x3, [x1, x0]
   4b460:	str	x3, [sp, #192]
   4b464:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4b468:	str	x3, [x2]
   4b46c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4b470:	str	x2, [x1, x0]
   4b474:	cbz	w27, 4b528 <mpfr_lngamma@@Base+0x288>
   4b478:	stp	x19, x20, [sp, #16]
   4b47c:	stp	x21, x22, [sp, #32]
   4b480:	stp	x25, x26, [sp, #64]
   4b484:	stp	d8, d9, [sp, #96]
   4b488:	cmp	w27, #0x0
   4b48c:	b.gt	4b4ac <mpfr_lngamma@@Base+0x20c>
   4b490:	ldr	x0, [sp, #128]
   4b494:	ldr	x22, [x0]
   4b498:	neg	x0, x22
   4b49c:	ldr	x1, [x28, #16]
   4b4a0:	cmp	x1, x0
   4b4a4:	b.le	4b4f0 <mpfr_lngamma@@Base+0x250>
   4b4a8:	b	4b91c <mpfr_lngamma@@Base+0x67c>
   4b4ac:	mov	x2, #0x0                   	// #0
   4b4b0:	mov	x1, #0x2                   	// #2
   4b4b4:	mov	x0, x28
   4b4b8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4b4bc:	cbz	w0, 4b518 <mpfr_lngamma@@Base+0x278>
   4b4c0:	ldr	x0, [sp, #128]
   4b4c4:	ldr	x0, [x0]
   4b4c8:	add	x2, x0, #0x1
   4b4cc:	ldr	x1, [x28, #16]
   4b4d0:	cmp	x2, x1
   4b4d4:	b.lt	4b5a4 <mpfr_lngamma@@Base+0x304>  // b.tstop
   4b4d8:	ldr	x0, [sp, #128]
   4b4dc:	ldr	x22, [x0]
   4b4e0:	neg	x0, x22
   4b4e4:	ldr	x1, [x28, #16]
   4b4e8:	cmp	x1, x0
   4b4ec:	b.gt	4c80c <mpfr_lngamma@@Base+0x156c>
   4b4f0:	add	x22, x22, #0xe
   4b4f4:	mov	x25, #0x40                  	// #64
   4b4f8:	add	x21, sp, #0x120
   4b4fc:	add	x20, sp, #0x140
   4b500:	mov	w26, #0x2                   	// #2
   4b504:	mov	w24, #0x3                   	// #3
   4b508:	add	x19, sp, #0x160
   4b50c:	str	w27, [sp, #120]
   4b510:	ldr	x27, [sp, #128]
   4b514:	b	4c690 <mpfr_lngamma@@Base+0x13f0>
   4b518:	ldp	x19, x20, [sp, #16]
   4b51c:	ldp	x21, x22, [sp, #32]
   4b520:	ldp	x25, x26, [sp, #64]
   4b524:	ldp	d8, d9, [sp, #96]
   4b528:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b52c:	ldr	x1, [x0, #2576]
   4b530:	add	x0, x0, #0xa10
   4b534:	blr	x1
   4b538:	mrs	x1, tpidr_el0
   4b53c:	ldr	w2, [sp, #180]
   4b540:	str	w2, [x1, x0]
   4b544:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b548:	ldr	x2, [x0, #2512]
   4b54c:	add	x0, x0, #0x9d0
   4b550:	blr	x2
   4b554:	ldr	x2, [sp, #184]
   4b558:	str	x2, [x1, x0]
   4b55c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b560:	ldr	x2, [x0, #2544]
   4b564:	add	x0, x0, #0x9f0
   4b568:	blr	x2
   4b56c:	ldr	x2, [sp, #192]
   4b570:	str	x2, [x1, x0]
   4b574:	mov	w0, #0x1                   	// #1
   4b578:	ldr	x1, [sp, #128]
   4b57c:	str	w0, [x1, #8]
   4b580:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4b584:	str	x0, [x1, #16]
   4b588:	mov	w23, #0x0                   	// #0
   4b58c:	mov	w0, w23
   4b590:	ldp	x23, x24, [sp, #48]
   4b594:	ldp	x27, x28, [sp, #80]
   4b598:	ldp	x29, x30, [sp]
   4b59c:	add	sp, sp, #0x220
   4b5a0:	ret
   4b5a4:	cmp	x0, #0x34
   4b5a8:	mov	x1, #0x34                  	// #52
   4b5ac:	csel	x1, x0, x1, ge  // ge = tcont
   4b5b0:	add	x19, sp, #0x1e0
   4b5b4:	add	x1, x1, #0xa
   4b5b8:	mov	x0, x19
   4b5bc:	bl	ca80 <mpfr_init2@plt>
   4b5c0:	mov	w2, #0x2                   	// #2
   4b5c4:	mov	x1, x28
   4b5c8:	mov	x0, x19
   4b5cc:	bl	c090 <mpfr_log@plt>
   4b5d0:	mov	w3, #0x2                   	// #2
   4b5d4:	mov	x2, #0x1                   	// #1
   4b5d8:	mov	x1, x19
   4b5dc:	mov	x0, x19
   4b5e0:	bl	c530 <mpfr_sub_ui@plt>
   4b5e4:	mov	w3, #0x2                   	// #2
   4b5e8:	mov	x2, x19
   4b5ec:	mov	x1, x28
   4b5f0:	mov	x0, x19
   4b5f4:	bl	bd50 <mpfr_mul@plt>
   4b5f8:	ldr	x0, [sp, #496]
   4b5fc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4b600:	cmp	x0, x1
   4b604:	b.eq	4b630 <mpfr_lngamma@@Base+0x390>  // b.none
   4b608:	ldr	x2, [sp, #480]
   4b60c:	sub	x1, x0, x2
   4b610:	cmp	x1, #0x3d
   4b614:	mov	x1, #0x4                   	// #4
   4b618:	movk	x1, #0x8000, lsl #48
   4b61c:	ccmp	x0, x1, #0x1, gt
   4b620:	b.ge	4b6ac <mpfr_lngamma@@Base+0x40c>  // b.tcont
   4b624:	add	x0, sp, #0x1e0
   4b628:	bl	c070 <mpfr_clear@plt>
   4b62c:	b	4b4d8 <mpfr_lngamma@@Base+0x238>
   4b630:	add	x0, sp, #0x1e0
   4b634:	bl	c070 <mpfr_clear@plt>
   4b638:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b63c:	ldr	x1, [x0, #2576]
   4b640:	add	x0, x0, #0xa10
   4b644:	blr	x1
   4b648:	mrs	x1, tpidr_el0
   4b64c:	ldr	w2, [sp, #180]
   4b650:	str	w2, [x1, x0]
   4b654:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b658:	ldr	x2, [x0, #2512]
   4b65c:	add	x0, x0, #0x9d0
   4b660:	blr	x2
   4b664:	ldr	x2, [sp, #184]
   4b668:	str	x2, [x1, x0]
   4b66c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b670:	ldr	x2, [x0, #2544]
   4b674:	add	x0, x0, #0x9f0
   4b678:	blr	x2
   4b67c:	ldr	x2, [sp, #192]
   4b680:	str	x2, [x1, x0]
   4b684:	mov	w2, #0x1                   	// #1
   4b688:	ldr	w1, [sp, #176]
   4b68c:	ldr	x0, [sp, #128]
   4b690:	bl	bf40 <mpfr_overflow@plt>
   4b694:	mov	w23, w0
   4b698:	ldp	x19, x20, [sp, #16]
   4b69c:	ldp	x21, x22, [sp, #32]
   4b6a0:	ldp	x25, x26, [sp, #64]
   4b6a4:	ldp	d8, d9, [sp, #96]
   4b6a8:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4b6ac:	ldr	w0, [sp, #176]
   4b6b0:	cmp	w0, #0x0
   4b6b4:	ldr	x0, [sp, #128]
   4b6b8:	ldr	x3, [x0]
   4b6bc:	cinc	x3, x3, eq  // eq = none
   4b6c0:	add	x1, x2, #0x3e
   4b6c4:	subs	x0, x2, #0x1
   4b6c8:	csel	x1, x1, x0, mi  // mi = first
   4b6cc:	asr	x1, x1, #6
   4b6d0:	sub	x2, x2, #0x3
   4b6d4:	add	x1, x1, #0x1
   4b6d8:	ldr	x0, [sp, #504]
   4b6dc:	bl	c370 <mpfr_round_p@plt>
   4b6e0:	cbz	w0, 4b624 <mpfr_lngamma@@Base+0x384>
   4b6e4:	add	x19, sp, #0x1e0
   4b6e8:	ldr	w3, [sp, #488]
   4b6ec:	ldr	w2, [sp, #176]
   4b6f0:	mov	x1, x19
   4b6f4:	ldr	x20, [sp, #128]
   4b6f8:	mov	x0, x20
   4b6fc:	bl	c6a0 <mpfr_set4@plt>
   4b700:	mov	w23, w0
   4b704:	mov	x0, x19
   4b708:	bl	c070 <mpfr_clear@plt>
   4b70c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b710:	ldr	x1, [x0, #2576]
   4b714:	add	x0, x0, #0xa10
   4b718:	blr	x1
   4b71c:	mrs	x1, tpidr_el0
   4b720:	ldr	w2, [sp, #180]
   4b724:	str	w2, [x1, x0]
   4b728:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b72c:	ldr	x3, [x0, #2512]
   4b730:	add	x0, x0, #0x9d0
   4b734:	blr	x3
   4b738:	ldr	x3, [sp, #184]
   4b73c:	str	x3, [x1, x0]
   4b740:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b744:	ldr	x4, [x0, #2544]
   4b748:	add	x0, x0, #0x9f0
   4b74c:	blr	x4
   4b750:	ldr	x4, [sp, #192]
   4b754:	str	x4, [x1, x0]
   4b758:	ldr	x0, [x20, #16]
   4b75c:	cmp	x3, x0
   4b760:	ccmp	x4, x0, #0x1, le
   4b764:	b.lt	4b79c <mpfr_lngamma@@Base+0x4fc>  // b.tstop
   4b768:	cbz	w23, 4c944 <mpfr_lngamma@@Base+0x16a4>
   4b76c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b770:	ldr	x1, [x0, #2576]
   4b774:	add	x0, x0, #0xa10
   4b778:	blr	x1
   4b77c:	orr	w2, w2, #0x8
   4b780:	mrs	x1, tpidr_el0
   4b784:	str	w2, [x1, x0]
   4b788:	ldp	x19, x20, [sp, #16]
   4b78c:	ldp	x21, x22, [sp, #32]
   4b790:	ldp	x25, x26, [sp, #64]
   4b794:	ldp	d8, d9, [sp, #96]
   4b798:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4b79c:	ldr	w2, [sp, #176]
   4b7a0:	mov	w1, w23
   4b7a4:	ldr	x0, [sp, #128]
   4b7a8:	bl	cb30 <mpfr_check_range@plt>
   4b7ac:	mov	w23, w0
   4b7b0:	ldp	x19, x20, [sp, #16]
   4b7b4:	ldp	x21, x22, [sp, #32]
   4b7b8:	ldp	x25, x26, [sp, #64]
   4b7bc:	ldp	d8, d9, [sp, #96]
   4b7c0:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4b7c4:	ldr	x1, [x28]
   4b7c8:	mov	x0, x20
   4b7cc:	bl	ca80 <mpfr_init2@plt>
   4b7d0:	mov	w2, #0x0                   	// #0
   4b7d4:	mov	x1, x28
   4b7d8:	mov	x0, x20
   4b7dc:	bl	bd70 <mpfr_neg@plt>
   4b7e0:	mov	w2, w26
   4b7e4:	mov	x1, x20
   4b7e8:	mov	x0, x21
   4b7ec:	bl	c090 <mpfr_log@plt>
   4b7f0:	ldr	x1, [sp, #288]
   4b7f4:	mov	x0, x20
   4b7f8:	bl	bed0 <mpfr_set_prec@plt>
   4b7fc:	b	4c6c4 <mpfr_lngamma@@Base+0x1424>
   4b800:	mov	w2, #0x1                   	// #1
   4b804:	mov	x1, x20
   4b808:	mov	x0, x21
   4b80c:	bl	c9a0 <mpfr_cmp3@plt>
   4b810:	cbnz	w0, 4c648 <mpfr_lngamma@@Base+0x13a8>
   4b814:	add	x19, sp, #0x140
   4b818:	ldr	w3, [sp, #328]
   4b81c:	ldr	w2, [sp, #176]
   4b820:	mov	x1, x19
   4b824:	ldr	x20, [sp, #128]
   4b828:	mov	x0, x20
   4b82c:	bl	c6a0 <mpfr_set4@plt>
   4b830:	add	x0, sp, #0x120
   4b834:	bl	c070 <mpfr_clear@plt>
   4b838:	mov	x0, x19
   4b83c:	bl	c070 <mpfr_clear@plt>
   4b840:	add	x0, sp, #0x160
   4b844:	bl	c070 <mpfr_clear@plt>
   4b848:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b84c:	ldr	x1, [x0, #2576]
   4b850:	add	x0, x0, #0xa10
   4b854:	blr	x1
   4b858:	mrs	x1, tpidr_el0
   4b85c:	ldr	w4, [sp, #180]
   4b860:	str	w4, [x1, x0]
   4b864:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b868:	ldr	x2, [x0, #2512]
   4b86c:	add	x0, x0, #0x9d0
   4b870:	blr	x2
   4b874:	ldr	x2, [sp, #184]
   4b878:	str	x2, [x1, x0]
   4b87c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b880:	ldr	x3, [x0, #2544]
   4b884:	add	x0, x0, #0x9f0
   4b888:	blr	x3
   4b88c:	ldr	x3, [sp, #192]
   4b890:	str	x3, [x1, x0]
   4b894:	ldr	x0, [x20, #16]
   4b898:	cmp	x2, x0
   4b89c:	ccmp	x3, x0, #0x1, le
   4b8a0:	b.lt	4b8d8 <mpfr_lngamma@@Base+0x638>  // b.tstop
   4b8a4:	cbz	w23, 4c958 <mpfr_lngamma@@Base+0x16b8>
   4b8a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4b8ac:	ldr	x1, [x0, #2576]
   4b8b0:	add	x0, x0, #0xa10
   4b8b4:	blr	x1
   4b8b8:	orr	w2, w4, #0x8
   4b8bc:	mrs	x1, tpidr_el0
   4b8c0:	str	w2, [x1, x0]
   4b8c4:	ldp	x19, x20, [sp, #16]
   4b8c8:	ldp	x21, x22, [sp, #32]
   4b8cc:	ldp	x25, x26, [sp, #64]
   4b8d0:	ldp	d8, d9, [sp, #96]
   4b8d4:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4b8d8:	ldr	w2, [sp, #176]
   4b8dc:	mov	w1, w23
   4b8e0:	ldr	x0, [sp, #128]
   4b8e4:	bl	cb30 <mpfr_check_range@plt>
   4b8e8:	mov	w23, w0
   4b8ec:	ldp	x19, x20, [sp, #16]
   4b8f0:	ldp	x21, x22, [sp, #32]
   4b8f4:	ldp	x25, x26, [sp, #64]
   4b8f8:	ldp	d8, d9, [sp, #96]
   4b8fc:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4b900:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   4b904:	add	x2, x2, #0xd68
   4b908:	mov	w1, #0x131                 	// #305
   4b90c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4b910:	add	x0, x0, #0x2d8
   4b914:	bl	cb40 <mpfr_assert_fail@plt>
   4b918:	ldr	w27, [sp, #120]
   4b91c:	ldr	x0, [sp, #128]
   4b920:	ldr	x0, [x0]
   4b924:	mov	x19, x0
   4b928:	str	x0, [sp, #160]
   4b92c:	mov	x1, #0x1                   	// #1
   4b930:	add	x0, sp, #0x200
   4b934:	bl	ca80 <mpfr_init2@plt>
   4b938:	mov	x1, #0x1                   	// #1
   4b93c:	add	x0, sp, #0x1e0
   4b940:	bl	ca80 <mpfr_init2@plt>
   4b944:	mov	x1, #0x1                   	// #1
   4b948:	add	x0, sp, #0x1c0
   4b94c:	bl	ca80 <mpfr_init2@plt>
   4b950:	mov	x1, #0x1                   	// #1
   4b954:	add	x0, sp, #0x1a0
   4b958:	bl	ca80 <mpfr_init2@plt>
   4b95c:	mov	x1, #0x1                   	// #1
   4b960:	add	x0, sp, #0x180
   4b964:	bl	ca80 <mpfr_init2@plt>
   4b968:	tbz	w27, #31, 4c854 <mpfr_lngamma@@Base+0x15b4>
   4b96c:	cmp	x19, #0x1
   4b970:	b.eq	4c5d8 <mpfr_lngamma@@Base+0x1338>  // b.none
   4b974:	cmp	x19, #0x1
   4b978:	b.le	4b9cc <mpfr_lngamma@@Base+0x72c>
   4b97c:	ldr	x2, [sp, #160]
   4b980:	sub	x0, x2, #0x1
   4b984:	clz	x1, x0
   4b988:	mov	w0, #0x40                  	// #64
   4b98c:	sub	w0, w0, w1
   4b990:	add	x0, x2, w0, sxtw
   4b994:	sub	x1, x0, #0x1
   4b998:	clz	x1, x1
   4b99c:	mov	w20, #0x4e                  	// #78
   4b9a0:	sub	w20, w20, w1
   4b9a4:	add	x20, x0, w20, sxtw
   4b9a8:	mov	x24, #0x40                  	// #64
   4b9ac:	add	x23, sp, #0x200
   4b9b0:	add	x25, sp, #0x1e0
   4b9b4:	add	x26, sp, #0x1c0
   4b9b8:	add	x22, sp, #0x1a0
   4b9bc:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4b9c0:	ldr	d9, [x0, #920]
   4b9c4:	ldr	w27, [sp, #176]
   4b9c8:	b	4bad8 <mpfr_lngamma@@Base+0x838>
   4b9cc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   4b9d0:	add	x2, x2, #0xfa8
   4b9d4:	mov	w1, #0x14a                 	// #330
   4b9d8:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4b9dc:	add	x0, x0, #0x2d8
   4b9e0:	bl	cb40 <mpfr_assert_fail@plt>
   4b9e4:	ldr	d8, [sp, #528]
   4b9e8:	scvtf	d0, d8
   4b9ec:	fmul	d0, d0, d9
   4b9f0:	bl	c950 <__gmpfr_ceil_log2@plt>
   4b9f4:	fmov	x1, d8
   4b9f8:	add	x21, x1, x0
   4b9fc:	add	x21, x21, #0x1
   4ba00:	ldr	x0, [sp, #464]
   4ba04:	sub	x21, x21, x0
   4ba08:	b	4bb64 <mpfr_lngamma@@Base+0x8c4>
   4ba0c:	cmp	x21, #0x0
   4ba10:	csinv	x21, x21, xzr, ge  // ge = tcont
   4ba14:	add	x21, x21, #0x1
   4ba18:	add	x19, x19, #0x1
   4ba1c:	ldr	x1, [sp, #432]
   4ba20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4ba24:	cmp	x1, x0
   4ba28:	b.eq	4c5c0 <mpfr_lngamma@@Base+0x1320>  // b.none
   4ba2c:	sub	x19, x19, x1
   4ba30:	adds	x0, x19, #0x1
   4ba34:	csinv	x0, x0, xzr, pl  // pl = nfrst
   4ba38:	add	x0, x0, #0x1
   4ba3c:	ldr	x2, [sp, #464]
   4ba40:	add	x21, x21, x2
   4ba44:	add	x19, x1, x0
   4ba48:	mov	w3, #0x0                   	// #0
   4ba4c:	mov	x2, x26
   4ba50:	mov	x1, x22
   4ba54:	mov	x0, x23
   4ba58:	bl	bb70 <mpfr_sub@plt>
   4ba5c:	ldr	x1, [sp, #528]
   4ba60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ba64:	cmp	x1, x0
   4ba68:	b.le	4bab8 <mpfr_lngamma@@Base+0x818>
   4ba6c:	cmp	x19, x21
   4ba70:	csel	x0, x19, x21, ge  // ge = tcont
   4ba74:	sub	x0, x0, x1
   4ba78:	adds	x0, x0, #0x1
   4ba7c:	csinv	x0, x0, xzr, pl  // pl = nfrst
   4ba80:	cmp	w27, #0x0
   4ba84:	ldr	x1, [sp, #160]
   4ba88:	cinc	x3, x1, eq  // eq = none
   4ba8c:	add	x0, x0, #0x1
   4ba90:	ldr	x2, [sp, #512]
   4ba94:	add	x1, x2, #0x3e
   4ba98:	subs	x2, x2, #0x1
   4ba9c:	csel	x1, x1, x2, mi  // mi = first
   4baa0:	asr	x1, x1, #6
   4baa4:	sub	x2, x20, x0
   4baa8:	add	x1, x1, #0x1
   4baac:	ldr	x0, [sp, #536]
   4bab0:	bl	c370 <mpfr_round_p@plt>
   4bab4:	cbnz	w0, 4c46c <mpfr_lngamma@@Base+0x11cc>
   4bab8:	mov	x0, #0xfffffffffffffeff    	// #-257
   4babc:	movk	x0, #0x7fff, lsl #48
   4bac0:	sub	x0, x0, x20
   4bac4:	cmp	x0, x24
   4bac8:	b.lt	4bc24 <mpfr_lngamma@@Base+0x984>  // b.tstop
   4bacc:	add	x20, x20, x24
   4bad0:	add	x24, x20, x20, lsr #63
   4bad4:	asr	x24, x24, #1
   4bad8:	mov	x1, x20
   4badc:	mov	x0, x23
   4bae0:	bl	bed0 <mpfr_set_prec@plt>
   4bae4:	mov	x1, x20
   4bae8:	mov	x0, x25
   4baec:	bl	bed0 <mpfr_set_prec@plt>
   4baf0:	mov	x1, x20
   4baf4:	mov	x0, x26
   4baf8:	bl	bed0 <mpfr_set_prec@plt>
   4bafc:	mov	x1, x20
   4bb00:	mov	x0, x22
   4bb04:	bl	bed0 <mpfr_set_prec@plt>
   4bb08:	mov	w3, #0x3                   	// #3
   4bb0c:	mov	x2, x28
   4bb10:	mov	x1, #0x2                   	// #2
   4bb14:	mov	x0, x23
   4bb18:	bl	ca50 <mpfr_ui_sub@plt>
   4bb1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4bb20:	ldr	x1, [x0, #2624]
   4bb24:	add	x0, x0, #0xa40
   4bb28:	blr	x1
   4bb2c:	mov	w2, #0x0                   	// #0
   4bb30:	mrs	x1, tpidr_el0
   4bb34:	add	x1, x1, x0
   4bb38:	mov	x0, x25
   4bb3c:	bl	c380 <mpfr_cache@plt>
   4bb40:	mov	w2, #0x0                   	// #0
   4bb44:	mov	x1, x23
   4bb48:	mov	x0, x26
   4bb4c:	bl	c600 <mpfr_lngamma@plt>
   4bb50:	mov	x21, #0x0                   	// #0
   4bb54:	ldr	x1, [sp, #464]
   4bb58:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4bb5c:	cmp	x1, x0
   4bb60:	b.ne	4b9e4 <mpfr_lngamma@@Base+0x744>  // b.any
   4bb64:	mov	w3, #0x0                   	// #0
   4bb68:	mov	x2, x25
   4bb6c:	mov	x1, x23
   4bb70:	mov	x0, x23
   4bb74:	bl	bd50 <mpfr_mul@plt>
   4bb78:	ldr	x19, [sp, #528]
   4bb7c:	mov	w2, #0x0                   	// #0
   4bb80:	mov	x1, x23
   4bb84:	mov	x0, x23
   4bb88:	bl	c450 <mpfr_sin@plt>
   4bb8c:	ldr	x0, [sp, #528]
   4bb90:	sub	x19, x19, x0
   4bb94:	adds	x19, x19, #0x3
   4bb98:	csinv	x19, x19, xzr, pl  // pl = nfrst
   4bb9c:	mov	w3, #0x0                   	// #0
   4bba0:	mov	x2, #0x1                   	// #1
   4bba4:	mov	x1, x28
   4bba8:	mov	x0, x22
   4bbac:	bl	c530 <mpfr_sub_ui@plt>
   4bbb0:	mov	w3, #0x0                   	// #0
   4bbb4:	mov	x2, x25
   4bbb8:	mov	x1, x22
   4bbbc:	mov	x0, x22
   4bbc0:	bl	bd50 <mpfr_mul@plt>
   4bbc4:	mov	w3, #0x0                   	// #0
   4bbc8:	mov	x2, x23
   4bbcc:	mov	x1, x22
   4bbd0:	mov	x0, x22
   4bbd4:	bl	c620 <mpfr_div@plt>
   4bbd8:	mov	w3, #0x1                   	// #1
   4bbdc:	mov	w2, #0x0                   	// #0
   4bbe0:	mov	x1, x22
   4bbe4:	mov	x0, x22
   4bbe8:	bl	c6a0 <mpfr_set4@plt>
   4bbec:	add	x19, x19, #0x3
   4bbf0:	cmp	x19, #0x2
   4bbf4:	mov	x0, #0x2                   	// #2
   4bbf8:	csel	x19, x19, x0, ge  // ge = tcont
   4bbfc:	mov	w2, #0x0                   	// #0
   4bc00:	mov	x1, x22
   4bc04:	mov	x0, x22
   4bc08:	bl	c090 <mpfr_log@plt>
   4bc0c:	add	x0, x19, #0x2
   4bc10:	cmp	x0, x20
   4bc14:	b.lt	4ba0c <mpfr_lngamma@@Base+0x76c>  // b.tstop
   4bc18:	add	x19, x19, #0x3
   4bc1c:	add	x20, x20, x19
   4bc20:	b	4bab8 <mpfr_lngamma@@Base+0x818>
   4bc24:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   4bc28:	add	x2, x2, #0x3e8
   4bc2c:	mov	w1, #0x1a5                 	// #421
   4bc30:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4bc34:	add	x0, x0, #0x2d8
   4bc38:	bl	cb40 <mpfr_assert_fail@plt>
   4bc3c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x2c38>
   4bc40:	add	x2, x2, #0xfa8
   4bc44:	mov	w1, #0x1b0                 	// #432
   4bc48:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4bc4c:	add	x0, x0, #0x2d8
   4bc50:	bl	cb40 <mpfr_assert_fail@plt>
   4bc54:	mov	w3, #0x0                   	// #0
   4bc58:	mov	x2, #0xfffffffffffffff6    	// #-10
   4bc5c:	mov	x1, #0x266                 	// #614
   4bc60:	ldr	x0, [sp, #208]
   4bc64:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4bc68:	mov	w3, #0x2                   	// #2
   4bc6c:	mov	x2, #0xfffffffffffffffc    	// #-4
   4bc70:	mov	x1, #0x4                   	// #4
   4bc74:	ldr	x19, [sp, #208]
   4bc78:	mov	x0, x19
   4bc7c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4bc80:	mov	w3, #0x2                   	// #2
   4bc84:	ldr	x2, [sp, #200]
   4bc88:	mov	x1, x19
   4bc8c:	mov	x0, x19
   4bc90:	bl	ba50 <mpfr_mul_ui@plt>
   4bc94:	mov	w2, #0x1                   	// #1
   4bc98:	mov	x1, x19
   4bc9c:	ldr	x0, [sp, #144]
   4bca0:	bl	c9a0 <mpfr_cmp3@plt>
   4bca4:	mov	x1, #0x3                   	// #3
   4bca8:	str	x1, [sp, #136]
   4bcac:	tbnz	w0, #31, 4be8c <mpfr_lngamma@@Base+0xbec>
   4bcb0:	ldr	x27, [sp, #200]
   4bcb4:	mov	x1, x27
   4bcb8:	ldr	x24, [sp, #208]
   4bcbc:	mov	x0, x24
   4bcc0:	bl	bed0 <mpfr_set_prec@plt>
   4bcc4:	mov	x1, x27
   4bcc8:	ldr	x21, [sp, #152]
   4bccc:	mov	x0, x21
   4bcd0:	bl	bed0 <mpfr_set_prec@plt>
   4bcd4:	mov	x1, x27
   4bcd8:	mov	x0, x26
   4bcdc:	bl	bed0 <mpfr_set_prec@plt>
   4bce0:	mov	x1, x27
   4bce4:	ldr	x25, [sp, #240]
   4bce8:	mov	x0, x25
   4bcec:	bl	bed0 <mpfr_set_prec@plt>
   4bcf0:	add	x19, sp, #0x180
   4bcf4:	mov	x1, x27
   4bcf8:	mov	x0, x19
   4bcfc:	bl	bed0 <mpfr_set_prec@plt>
   4bd00:	mov	w3, #0x0                   	// #0
   4bd04:	ldr	x2, [sp, #136]
   4bd08:	ldr	x1, [sp, #144]
   4bd0c:	mov	x0, x19
   4bd10:	bl	c260 <mpfr_add_ui@plt>
   4bd14:	mov	w2, #0x0                   	// #0
   4bd18:	mov	x1, x19
   4bd1c:	mov	x0, x24
   4bd20:	bl	c090 <mpfr_log@plt>
   4bd24:	mov	w3, #0x0                   	// #0
   4bd28:	mov	x2, #0x1                   	// #1
   4bd2c:	mov	x1, x19
   4bd30:	mov	x0, x21
   4bd34:	bl	c2c0 <mpfr_mul_2ui@plt>
   4bd38:	mov	w3, #0x0                   	// #0
   4bd3c:	mov	x2, #0x1                   	// #1
   4bd40:	mov	x1, x21
   4bd44:	mov	x0, x21
   4bd48:	bl	c530 <mpfr_sub_ui@plt>
   4bd4c:	mov	w3, #0x0                   	// #0
   4bd50:	mov	x2, x21
   4bd54:	mov	x1, x24
   4bd58:	mov	x0, x24
   4bd5c:	bl	bd50 <mpfr_mul@plt>
   4bd60:	mov	w3, #0x0                   	// #0
   4bd64:	mov	x2, #0x1                   	// #1
   4bd68:	mov	x1, x24
   4bd6c:	mov	x0, x24
   4bd70:	bl	c8f0 <mpfr_div_2ui@plt>
   4bd74:	mov	w3, #0x0                   	// #0
   4bd78:	mov	x2, x19
   4bd7c:	mov	x1, x24
   4bd80:	mov	x0, x24
   4bd84:	bl	bb70 <mpfr_sub@plt>
   4bd88:	mov	w3, #0x0                   	// #0
   4bd8c:	mov	x2, x19
   4bd90:	mov	x1, #0x1                   	// #1
   4bd94:	mov	x0, x26
   4bd98:	bl	c2f0 <mpfr_ui_div@plt>
   4bd9c:	mov	w3, #0x0                   	// #0
   4bda0:	mov	x2, #0xc                   	// #12
   4bda4:	mov	x1, x26
   4bda8:	mov	x0, x21
   4bdac:	bl	cc60 <mpfr_div_ui@plt>
   4bdb0:	ldr	w3, [sp, #488]
   4bdb4:	mov	w2, #0x0                   	// #0
   4bdb8:	mov	x1, x21
   4bdbc:	mov	x0, x25
   4bdc0:	bl	c6a0 <mpfr_set4@plt>
   4bdc4:	mov	w3, #0x0                   	// #0
   4bdc8:	mov	x2, x25
   4bdcc:	mov	x1, x24
   4bdd0:	mov	x0, x24
   4bdd4:	bl	c1a0 <mpfr_add@plt>
   4bdd8:	mov	w3, #0x0                   	// #0
   4bddc:	mov	x2, x26
   4bde0:	mov	x1, x26
   4bde4:	mov	x0, x26
   4bde8:	bl	bd50 <mpfr_mul@plt>
   4bdec:	ldr	x0, [sp, #432]
   4bdf0:	add	x0, x27, x0
   4bdf4:	ldr	x1, [sp, #528]
   4bdf8:	cmp	x1, x0
   4bdfc:	b.gt	4c0e8 <mpfr_lngamma@@Base+0xe48>
   4be00:	mov	x20, #0x2                   	// #2
   4be04:	mov	x19, #0xfffffffffffffff9    	// #-7
   4be08:	mov	x23, x20
   4be0c:	mov	x22, #0x80000000            	// #2147483648
   4be10:	b	4bfa0 <mpfr_lngamma@@Base+0xd00>
   4be14:	mov	w3, #0x0                   	// #0
   4be18:	mov	x2, #0xfffffffffffffff6    	// #-10
   4be1c:	mov	x1, #0x333                 	// #819
   4be20:	ldr	x0, [sp, #208]
   4be24:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be28:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4be2c:	mov	w3, #0x0                   	// #0
   4be30:	mov	x2, #0xfffffffffffffff6    	// #-10
   4be34:	mov	x1, #0x533                 	// #1331
   4be38:	ldr	x0, [sp, #208]
   4be3c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be40:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4be44:	mov	w3, #0x0                   	// #0
   4be48:	mov	x2, #0xfffffffffffffff6    	// #-10
   4be4c:	mov	x1, #0x6cd                 	// #1741
   4be50:	ldr	x0, [sp, #208]
   4be54:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be58:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4be5c:	mov	w3, #0x0                   	// #0
   4be60:	mov	x2, #0xfffffffffffffff6    	// #-10
   4be64:	mov	x1, #0x8cd                 	// #2253
   4be68:	ldr	x0, [sp, #208]
   4be6c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be70:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4be74:	mov	w3, #0x0                   	// #0
   4be78:	mov	x2, #0xffffffffffffffff    	// #-1
   4be7c:	mov	x1, #0x9                   	// #9
   4be80:	ldr	x0, [sp, #208]
   4be84:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be88:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4be8c:	mov	w3, #0x2                   	// #2
   4be90:	ldr	x2, [sp, #144]
   4be94:	ldr	x19, [sp, #208]
   4be98:	mov	x1, x19
   4be9c:	mov	x0, x19
   4bea0:	bl	bb70 <mpfr_sub@plt>
   4bea4:	mov	w1, #0x2                   	// #2
   4bea8:	mov	x0, x19
   4beac:	bl	bca0 <mpfr_get_ui@plt>
   4beb0:	cmp	x0, #0x3
   4beb4:	mov	x1, #0x3                   	// #3
   4beb8:	csel	x0, x0, x1, cs  // cs = hs, nlast
   4bebc:	str	x0, [sp, #136]
   4bec0:	b	4bcb0 <mpfr_lngamma@@Base+0xa10>
   4bec4:	mov	w3, #0x0                   	// #0
   4bec8:	mov	x2, #0xfffffffffffffffb    	// #-5
   4becc:	sub	x2, x2, x19
   4bed0:	mov	x1, x21
   4bed4:	mov	x0, x21
   4bed8:	bl	ba50 <mpfr_mul_ui@plt>
   4bedc:	lsl	x28, x23, #1
   4bee0:	mov	w3, #0x0                   	// #0
   4bee4:	mov	x2, #0xfffffffffffffffa    	// #-6
   4bee8:	sub	x2, x2, x19
   4beec:	mov	x1, x21
   4bef0:	mov	x0, x21
   4bef4:	bl	ba50 <mpfr_mul_ui@plt>
   4bef8:	mov	w3, #0x0                   	// #0
   4befc:	mov	x2, x28
   4bf00:	mov	x1, x21
   4bf04:	mov	x0, x21
   4bf08:	bl	cc60 <mpfr_div_ui@plt>
   4bf0c:	mov	w3, #0x0                   	// #0
   4bf10:	mov	x2, #0xfffffffffffffffc    	// #-4
   4bf14:	sub	x2, x2, x19
   4bf18:	mov	x1, x21
   4bf1c:	mov	x0, x21
   4bf20:	bl	cc60 <mpfr_div_ui@plt>
   4bf24:	mov	w3, #0x0                   	// #0
   4bf28:	mov	x2, x28
   4bf2c:	mov	x1, x21
   4bf30:	mov	x0, x21
   4bf34:	bl	cc60 <mpfr_div_ui@plt>
   4bf38:	mov	w3, #0x0                   	// #0
   4bf3c:	mov	x2, #0xfffffffffffffffe    	// #-2
   4bf40:	sub	x2, x2, x19
   4bf44:	mov	x1, x21
   4bf48:	mov	x0, x21
   4bf4c:	bl	cc60 <mpfr_div_ui@plt>
   4bf50:	mov	x0, x23
   4bf54:	bl	c830 <mpfr_bernoulli_cache@plt>
   4bf58:	mov	w3, #0x0                   	// #0
   4bf5c:	mov	x2, x0
   4bf60:	mov	x1, x21
   4bf64:	mov	x0, x25
   4bf68:	bl	c4d0 <mpfr_mul_z@plt>
   4bf6c:	mov	w3, #0x0                   	// #0
   4bf70:	mov	x2, x25
   4bf74:	mov	x1, x24
   4bf78:	mov	x0, x24
   4bf7c:	bl	c1a0 <mpfr_add@plt>
   4bf80:	add	x23, x23, #0x1
   4bf84:	sub	x19, x19, #0x2
   4bf88:	add	x20, x20, #0x4
   4bf8c:	ldr	x0, [sp, #432]
   4bf90:	add	x0, x27, x0
   4bf94:	ldr	x1, [sp, #528]
   4bf98:	cmp	x0, x1
   4bf9c:	b.lt	4c008 <mpfr_lngamma@@Base+0xd68>  // b.tstop
   4bfa0:	mov	w3, #0x0                   	// #0
   4bfa4:	mov	x2, x26
   4bfa8:	mov	x1, x21
   4bfac:	mov	x0, x21
   4bfb0:	bl	bd50 <mpfr_mul@plt>
   4bfb4:	cmp	x23, x22
   4bfb8:	b.hi	4bec4 <mpfr_lngamma@@Base+0xc24>  // b.pmore
   4bfbc:	sub	x2, x23, #0x1
   4bfc0:	mov	w3, #0x0                   	// #0
   4bfc4:	mul	x2, x2, x20
   4bfc8:	mov	x1, x21
   4bfcc:	mov	x0, x21
   4bfd0:	bl	ba50 <mpfr_mul_ui@plt>
   4bfd4:	add	x28, x20, #0x4
   4bfd8:	mul	x28, x28, x23
   4bfdc:	mov	w3, #0x0                   	// #0
   4bfe0:	mov	x2, x28
   4bfe4:	mov	x1, x21
   4bfe8:	mov	x0, x21
   4bfec:	bl	cc60 <mpfr_div_ui@plt>
   4bff0:	mov	w3, #0x0                   	// #0
   4bff4:	add	x2, x28, x23, lsl #2
   4bff8:	mov	x1, x21
   4bffc:	mov	x0, x21
   4c000:	bl	cc60 <mpfr_div_ui@plt>
   4c004:	b	4bf50 <mpfr_lngamma@@Base+0xcb0>
   4c008:	str	x23, [sp, #248]
   4c00c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c010:	ldr	x1, [x0, #2624]
   4c014:	add	x0, x0, #0xa40
   4c018:	blr	x1
   4c01c:	mov	w2, #0x0                   	// #0
   4c020:	mrs	x1, tpidr_el0
   4c024:	add	x1, x1, x0
   4c028:	ldr	x19, [sp, #240]
   4c02c:	mov	x0, x19
   4c030:	bl	c380 <mpfr_cache@plt>
   4c034:	mov	w3, #0x0                   	// #0
   4c038:	mov	x2, #0x1                   	// #1
   4c03c:	mov	x1, x19
   4c040:	mov	x0, x19
   4c044:	bl	c2c0 <mpfr_mul_2ui@plt>
   4c048:	ldr	x0, [sp, #144]
   4c04c:	ldr	w3, [x0, #8]
   4c050:	mov	w2, #0x0                   	// #0
   4c054:	mov	x1, x0
   4c058:	ldr	x0, [sp, #152]
   4c05c:	bl	c6a0 <mpfr_set4@plt>
   4c060:	mov	x19, #0x2                   	// #2
   4c064:	ldr	x1, [sp, #136]
   4c068:	mov	x25, x19
   4c06c:	add	x19, x19, #0x1
   4c070:	mul	x0, x19, x19
   4c074:	cmp	x0, x1
   4c078:	b.cc	4c068 <mpfr_lngamma@@Base+0xdc8>  // b.lo, b.ul, b.last
   4c07c:	lsl	x0, x19, #5
   4c080:	str	x0, [sp, #256]
   4c084:	bl	ccf0 <mpfr_allocate_func@plt>
   4c088:	str	x0, [sp, #168]
   4c08c:	cmp	x25, #0x1
   4c090:	b.ls	4c0b8 <mpfr_lngamma@@Base+0xe18>  // b.plast
   4c094:	add	x20, x0, #0x40
   4c098:	add	x21, x0, x25, lsl #5
   4c09c:	ldr	x22, [sp, #200]
   4c0a0:	mov	x1, x22
   4c0a4:	mov	x0, x20
   4c0a8:	bl	ca80 <mpfr_init2@plt>
   4c0ac:	cmp	x21, x20
   4c0b0:	add	x20, x20, #0x20
   4c0b4:	b.ne	4c0a0 <mpfr_lngamma@@Base+0xe00>  // b.any
   4c0b8:	ldr	x22, [sp, #168]
   4c0bc:	add	x0, x22, #0x40
   4c0c0:	str	x0, [sp, #264]
   4c0c4:	mov	w2, #0x0                   	// #0
   4c0c8:	ldr	x23, [sp, #144]
   4c0cc:	mov	x1, x23
   4c0d0:	bl	c400 <mpfr_sqr@plt>
   4c0d4:	cmp	x25, #0x2
   4c0d8:	b.ls	4c134 <mpfr_lngamma@@Base+0xe94>  // b.plast
   4c0dc:	add	x21, x22, #0x60
   4c0e0:	mov	x20, #0x3                   	// #3
   4c0e4:	b	4c118 <mpfr_lngamma@@Base+0xe78>
   4c0e8:	mov	x0, #0x2                   	// #2
   4c0ec:	str	x0, [sp, #248]
   4c0f0:	b	4c00c <mpfr_lngamma@@Base+0xd6c>
   4c0f4:	mov	w3, #0x0                   	// #0
   4c0f8:	mov	x2, x23
   4c0fc:	sub	x1, x21, #0x20
   4c100:	mov	x0, x21
   4c104:	bl	bd50 <mpfr_mul@plt>
   4c108:	add	x20, x20, #0x1
   4c10c:	add	x21, x21, #0x20
   4c110:	cmp	x25, x20
   4c114:	b.cc	4c134 <mpfr_lngamma@@Base+0xe94>  // b.lo, b.ul, b.last
   4c118:	tbnz	w20, #0, 4c0f4 <mpfr_lngamma@@Base+0xe54>
   4c11c:	lsr	x1, x20, #1
   4c120:	mov	w2, #0x0                   	// #0
   4c124:	add	x1, x22, x1, lsl #5
   4c128:	mov	x0, x21
   4c12c:	bl	c400 <mpfr_sqr@plt>
   4c130:	b	4c108 <mpfr_lngamma@@Base+0xe68>
   4c134:	lsl	x0, x19, #4
   4c138:	str	x0, [sp, #272]
   4c13c:	bl	ccf0 <mpfr_allocate_func@plt>
   4c140:	mov	x28, x0
   4c144:	mov	x22, x0
   4c148:	add	x19, x25, #0x1
   4c14c:	lsl	x0, x19, #4
   4c150:	str	x0, [sp, #280]
   4c154:	add	x20, x28, x0
   4c158:	mov	x19, x28
   4c15c:	mov	x0, x19
   4c160:	bl	bf90 <mpfr_mpz_init@plt>
   4c164:	add	x19, x19, #0x10
   4c168:	cmp	x19, x20
   4c16c:	b.ne	4c15c <mpfr_lngamma@@Base+0xebc>  // b.any
   4c170:	add	x0, x25, #0x1
   4c174:	str	x0, [sp, #120]
   4c178:	ldr	x1, [sp, #136]
   4c17c:	cmp	x0, x1
   4c180:	b.hi	4c2ac <mpfr_lngamma@@Base+0x100c>  // b.pmore
   4c184:	mov	x0, #0x1                   	// #1
   4c188:	sub	x0, x0, x25
   4c18c:	str	x0, [sp, #216]
   4c190:	add	x0, sp, #0x180
   4c194:	str	x0, [sp, #224]
   4c198:	b	4c274 <mpfr_lngamma@@Base+0xfd4>
   4c19c:	add	x23, x23, #0x1
   4c1a0:	add	x21, x21, #0x1
   4c1a4:	mov	x19, x27
   4c1a8:	sub	x2, x21, #0x1
   4c1ac:	mov	x1, x28
   4c1b0:	mov	x0, x28
   4c1b4:	bl	c100 <__gmpz_mul_ui@plt>
   4c1b8:	cmp	x23, x25
   4c1bc:	b.eq	4c5e4 <mpfr_lngamma@@Base+0x1344>  // b.none
   4c1c0:	add	x27, x19, #0x10
   4c1c4:	mov	x1, x19
   4c1c8:	mov	x0, x27
   4c1cc:	bl	bfa0 <__gmpz_set@plt>
   4c1d0:	cbz	x23, 4c19c <mpfr_lngamma@@Base+0xefc>
   4c1d4:	mov	x2, x21
   4c1d8:	mov	x1, x19
   4c1dc:	mov	x0, x19
   4c1e0:	bl	c100 <__gmpz_mul_ui@plt>
   4c1e4:	sub	x20, x19, #0x10
   4c1e8:	mov	x2, x20
   4c1ec:	mov	x1, x19
   4c1f0:	mov	x0, x19
   4c1f4:	bl	c9c0 <__gmpz_add@plt>
   4c1f8:	mov	x19, x20
   4c1fc:	cmp	x22, x20
   4c200:	b.ne	4c1d4 <mpfr_lngamma@@Base+0xf34>  // b.any
   4c204:	b	4c19c <mpfr_lngamma@@Base+0xefc>
   4c208:	add	x1, x20, x19, lsl #5
   4c20c:	cmp	x19, #0x0
   4c210:	csel	x1, x1, x21, ne  // ne = any
   4c214:	add	x19, x19, #0x1
   4c218:	mov	w3, #0x0                   	// #0
   4c21c:	mov	x2, x24
   4c220:	mov	x0, x23
   4c224:	bl	c4d0 <mpfr_mul_z@plt>
   4c228:	mov	w3, #0x0                   	// #0
   4c22c:	mov	x2, x23
   4c230:	mov	x1, x26
   4c234:	mov	x0, x26
   4c238:	bl	c1a0 <mpfr_add@plt>
   4c23c:	add	x24, x24, #0x10
   4c240:	cmp	x19, x25
   4c244:	b.ne	4c208 <mpfr_lngamma@@Base+0xf68>  // b.any
   4c248:	mov	w3, #0x0                   	// #0
   4c24c:	mov	x2, x26
   4c250:	ldr	x0, [sp, #152]
   4c254:	mov	x1, x0
   4c258:	bl	bd50 <mpfr_mul@plt>
   4c25c:	ldr	x0, [sp, #120]
   4c260:	add	x0, x25, x0
   4c264:	ldr	x1, [sp, #136]
   4c268:	cmp	x0, x1
   4c26c:	b.hi	4c2b4 <mpfr_lngamma@@Base+0x1014>  // b.pmore
   4c270:	str	x0, [sp, #120]
   4c274:	mov	x1, #0x1                   	// #1
   4c278:	mov	x0, x28
   4c27c:	bl	bcb0 <__gmpz_set_ui@plt>
   4c280:	cbz	x25, 4c610 <mpfr_lngamma@@Base+0x1370>
   4c284:	add	x19, x28, #0x10
   4c288:	mov	x1, x28
   4c28c:	mov	x0, x19
   4c290:	bl	bfa0 <__gmpz_set@plt>
   4c294:	mov	x24, x19
   4c298:	ldr	x0, [sp, #216]
   4c29c:	ldr	x1, [sp, #120]
   4c2a0:	add	x21, x0, x1
   4c2a4:	mov	x23, #0x1                   	// #1
   4c2a8:	b	4c1a8 <mpfr_lngamma@@Base+0xf08>
   4c2ac:	mov	x0, #0x1                   	// #1
   4c2b0:	str	x0, [sp, #120]
   4c2b4:	ldr	x0, [sp, #280]
   4c2b8:	add	x19, x28, x0
   4c2bc:	mov	x0, x22
   4c2c0:	bl	c170 <mpfr_mpz_clear@plt>
   4c2c4:	add	x22, x22, #0x10
   4c2c8:	cmp	x22, x19
   4c2cc:	b.ne	4c2bc <mpfr_lngamma@@Base+0x101c>  // b.any
   4c2d0:	ldr	x1, [sp, #272]
   4c2d4:	mov	x0, x28
   4c2d8:	bl	cc20 <mpfr_free_func@plt>
   4c2dc:	cmp	x25, #0x1
   4c2e0:	b.ls	4c304 <mpfr_lngamma@@Base+0x1064>  // b.plast
   4c2e4:	ldr	x19, [sp, #264]
   4c2e8:	ldr	x0, [sp, #168]
   4c2ec:	add	x25, x0, x25, lsl #5
   4c2f0:	mov	x0, x19
   4c2f4:	bl	c070 <mpfr_clear@plt>
   4c2f8:	cmp	x19, x25
   4c2fc:	add	x19, x19, #0x20
   4c300:	b.ne	4c2f0 <mpfr_lngamma@@Base+0x1050>  // b.any
   4c304:	ldr	x1, [sp, #256]
   4c308:	ldr	x0, [sp, #168]
   4c30c:	bl	cc20 <mpfr_free_func@plt>
   4c310:	ldr	x21, [sp, #136]
   4c314:	ldr	x0, [sp, #120]
   4c318:	cmp	x21, x0
   4c31c:	b.ls	4c360 <mpfr_lngamma@@Base+0x10c0>  // b.plast
   4c320:	mov	x19, x0
   4c324:	ldr	x22, [sp, #144]
   4c328:	ldr	x20, [sp, #152]
   4c32c:	mov	w3, #0x0                   	// #0
   4c330:	mov	x2, x19
   4c334:	mov	x1, x22
   4c338:	mov	x0, x26
   4c33c:	bl	c260 <mpfr_add_ui@plt>
   4c340:	mov	w3, #0x0                   	// #0
   4c344:	mov	x2, x26
   4c348:	mov	x1, x20
   4c34c:	mov	x0, x20
   4c350:	bl	bd50 <mpfr_mul@plt>
   4c354:	add	x19, x19, #0x1
   4c358:	cmp	x21, x19
   4c35c:	b.ne	4c32c <mpfr_lngamma@@Base+0x108c>  // b.any
   4c360:	mov	w3, #0x0                   	// #0
   4c364:	ldr	x21, [sp, #152]
   4c368:	mov	x2, x21
   4c36c:	mov	x1, x21
   4c370:	mov	x0, x21
   4c374:	bl	bd50 <mpfr_mul@plt>
   4c378:	mov	w3, #0x0                   	// #0
   4c37c:	mov	x2, x21
   4c380:	ldr	x19, [sp, #240]
   4c384:	mov	x1, x19
   4c388:	mov	x0, x19
   4c38c:	bl	c620 <mpfr_div@plt>
   4c390:	mov	w2, #0x0                   	// #0
   4c394:	mov	x1, x19
   4c398:	mov	x0, x21
   4c39c:	bl	c090 <mpfr_log@plt>
   4c3a0:	mov	w3, #0x0                   	// #0
   4c3a4:	mov	x2, #0x1                   	// #1
   4c3a8:	mov	x1, x21
   4c3ac:	mov	x0, x21
   4c3b0:	bl	c8f0 <mpfr_div_2ui@plt>
   4c3b4:	ldr	x20, [sp, #496]
   4c3b8:	ldr	d0, [sp, #136]
   4c3bc:	ucvtf	d0, d0
   4c3c0:	fmul	d0, d0, d9
   4c3c4:	fadd	d0, d0, d8
   4c3c8:	bl	c950 <__gmpfr_ceil_log2@plt>
   4c3cc:	add	x20, x20, x0
   4c3d0:	ldr	x19, [sp, #528]
   4c3d4:	ldr	d0, [sp, #248]
   4c3d8:	ucvtf	d0, d0
   4c3dc:	fadd	d0, d0, d0
   4c3e0:	mov	x0, #0x4048000000000000    	// #4631952216750555136
   4c3e4:	fmov	d1, x0
   4c3e8:	fadd	d0, d0, d1
   4c3ec:	bl	c950 <__gmpfr_ceil_log2@plt>
   4c3f0:	add	x19, x19, x0
   4c3f4:	mov	w3, #0x0                   	// #0
   4c3f8:	mov	x2, x21
   4c3fc:	ldr	x0, [sp, #208]
   4c400:	mov	x1, x0
   4c404:	bl	c1a0 <mpfr_add@plt>
   4c408:	cmp	x20, x19
   4c40c:	csel	x0, x20, x19, ge  // ge = tcont
   4c410:	csinc	x19, x0, x19, ne  // ne = any
   4c414:	ldr	x1, [sp, #528]
   4c418:	mov	x0, #0x1                   	// #1
   4c41c:	sub	x0, x0, x1
   4c420:	add	x19, x0, x19
   4c424:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c428:	cmp	x1, x0
   4c42c:	b.le	4c544 <mpfr_lngamma@@Base+0x12a4>
   4c430:	ldr	w0, [sp, #176]
   4c434:	cmp	w0, #0x0
   4c438:	ldr	x0, [sp, #160]
   4c43c:	cinc	x3, x0, eq  // eq = none
   4c440:	ldr	x0, [sp, #512]
   4c444:	add	x1, x0, #0x3e
   4c448:	subs	x0, x0, #0x1
   4c44c:	csel	x1, x1, x0, mi  // mi = first
   4c450:	asr	x1, x1, #6
   4c454:	ldr	x0, [sp, #200]
   4c458:	sub	x2, x0, x19
   4c45c:	add	x1, x1, #0x1
   4c460:	ldr	x0, [sp, #536]
   4c464:	bl	c370 <mpfr_round_p@plt>
   4c468:	cbz	w0, 4c544 <mpfr_lngamma@@Base+0x12a4>
   4c46c:	add	x19, sp, #0x200
   4c470:	ldr	w3, [sp, #520]
   4c474:	ldr	w2, [sp, #176]
   4c478:	mov	x1, x19
   4c47c:	ldr	x20, [sp, #128]
   4c480:	mov	x0, x20
   4c484:	bl	c6a0 <mpfr_set4@plt>
   4c488:	mov	w23, w0
   4c48c:	mov	x0, x19
   4c490:	bl	c070 <mpfr_clear@plt>
   4c494:	add	x0, sp, #0x1e0
   4c498:	bl	c070 <mpfr_clear@plt>
   4c49c:	add	x0, sp, #0x1c0
   4c4a0:	bl	c070 <mpfr_clear@plt>
   4c4a4:	add	x0, sp, #0x1a0
   4c4a8:	bl	c070 <mpfr_clear@plt>
   4c4ac:	add	x0, sp, #0x180
   4c4b0:	bl	c070 <mpfr_clear@plt>
   4c4b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c4b8:	ldr	x1, [x0, #2576]
   4c4bc:	add	x0, x0, #0xa10
   4c4c0:	blr	x1
   4c4c4:	mrs	x1, tpidr_el0
   4c4c8:	ldr	w4, [sp, #180]
   4c4cc:	str	w4, [x1, x0]
   4c4d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c4d4:	ldr	x2, [x0, #2512]
   4c4d8:	add	x0, x0, #0x9d0
   4c4dc:	blr	x2
   4c4e0:	ldr	x2, [sp, #184]
   4c4e4:	str	x2, [x1, x0]
   4c4e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c4ec:	ldr	x3, [x0, #2544]
   4c4f0:	add	x0, x0, #0x9f0
   4c4f4:	blr	x3
   4c4f8:	ldr	x3, [sp, #192]
   4c4fc:	str	x3, [x1, x0]
   4c500:	ldr	x0, [x20, #16]
   4c504:	cmp	x2, x0
   4c508:	ccmp	x3, x0, #0x1, le
   4c50c:	b.lt	4c598 <mpfr_lngamma@@Base+0x12f8>  // b.tstop
   4c510:	cbz	w23, 4c96c <mpfr_lngamma@@Base+0x16cc>
   4c514:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c518:	ldr	x1, [x0, #2576]
   4c51c:	add	x0, x0, #0xa10
   4c520:	blr	x1
   4c524:	orr	w2, w4, #0x8
   4c528:	mrs	x1, tpidr_el0
   4c52c:	str	w2, [x1, x0]
   4c530:	ldp	x19, x20, [sp, #16]
   4c534:	ldp	x21, x22, [sp, #32]
   4c538:	ldp	x25, x26, [sp, #64]
   4c53c:	ldp	d8, d9, [sp, #96]
   4c540:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4c544:	mov	x0, #0xfffffffffffffeff    	// #-257
   4c548:	movk	x0, #0x7fff, lsl #48
   4c54c:	ldr	x1, [sp, #200]
   4c550:	sub	x0, x0, x1
   4c554:	ldr	x1, [sp, #232]
   4c558:	cmp	x0, x1
   4c55c:	b.lt	4c580 <mpfr_lngamma@@Base+0x12e0>  // b.tstop
   4c560:	ldr	x0, [sp, #200]
   4c564:	ldr	x1, [sp, #232]
   4c568:	add	x0, x0, x1
   4c56c:	str	x0, [sp, #200]
   4c570:	add	x0, x0, x0, lsr #63
   4c574:	asr	x0, x0, #1
   4c578:	str	x0, [sp, #232]
   4c57c:	b	4c8d0 <mpfr_lngamma@@Base+0x1630>
   4c580:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   4c584:	add	x2, x2, #0x3e8
   4c588:	mov	w1, #0x2b8                 	// #696
   4c58c:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4c590:	add	x0, x0, #0x2d8
   4c594:	bl	cb40 <mpfr_assert_fail@plt>
   4c598:	ldr	w2, [sp, #176]
   4c59c:	mov	w1, w23
   4c5a0:	ldr	x0, [sp, #128]
   4c5a4:	bl	cb30 <mpfr_check_range@plt>
   4c5a8:	mov	w23, w0
   4c5ac:	ldp	x19, x20, [sp, #16]
   4c5b0:	ldp	x21, x22, [sp, #32]
   4c5b4:	ldp	x25, x26, [sp, #64]
   4c5b8:	ldp	d8, d9, [sp, #96]
   4c5bc:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4c5c0:	cmp	x19, #0x0
   4c5c4:	csinv	x19, x19, xzr, ge  // ge = tcont
   4c5c8:	add	x19, x19, #0x1
   4c5cc:	ldr	x0, [sp, #464]
   4c5d0:	add	x21, x21, x0
   4c5d4:	b	4ba48 <mpfr_lngamma@@Base+0x7a8>
   4c5d8:	ldr	x0, [sp, #160]
   4c5dc:	mov	w20, #0xe                   	// #14
   4c5e0:	b	4b9a4 <mpfr_lngamma@@Base+0x704>
   4c5e4:	mov	w2, #0x0                   	// #0
   4c5e8:	mov	x1, x28
   4c5ec:	mov	x0, x26
   4c5f0:	bl	c240 <mpfr_set_z@plt>
   4c5f4:	ldr	x21, [sp, #144]
   4c5f8:	mov	x1, x21
   4c5fc:	mov	x19, #0x0                   	// #0
   4c600:	ldr	x0, [sp, #168]
   4c604:	add	x20, x0, #0x20
   4c608:	ldr	x23, [sp, #224]
   4c60c:	b	4c214 <mpfr_lngamma@@Base+0xf74>
   4c610:	mov	w2, #0x0                   	// #0
   4c614:	mov	x1, x28
   4c618:	mov	x0, x26
   4c61c:	bl	c240 <mpfr_set_z@plt>
   4c620:	b	4c248 <mpfr_lngamma@@Base+0xfa8>
   4c624:	ldr	x0, [sp, #160]
   4c628:	mov	w1, #0xd                   	// #13
   4c62c:	b	4c890 <mpfr_lngamma@@Base+0x15f0>
   4c630:	mov	w1, #0xffffffff            	// #-1
   4c634:	tbnz	w0, #31, 4b800 <mpfr_lngamma@@Base+0x560>
   4c638:	cmp	w0, #0x0
   4c63c:	cset	w0, gt
   4c640:	cmp	w0, w1
   4c644:	b.eq	4b800 <mpfr_lngamma@@Base+0x560>  // b.none
   4c648:	mov	x0, x21
   4c64c:	bl	c070 <mpfr_clear@plt>
   4c650:	mov	x0, x20
   4c654:	bl	c070 <mpfr_clear@plt>
   4c658:	mov	x0, x19
   4c65c:	bl	c070 <mpfr_clear@plt>
   4c660:	mov	x0, #0xfffffffffffffeff    	// #-257
   4c664:	movk	x0, #0x7fff, lsl #48
   4c668:	sub	x0, x0, x22
   4c66c:	cmp	x0, x25
   4c670:	b.lt	4b900 <mpfr_lngamma@@Base+0x660>  // b.tstop
   4c674:	add	x22, x22, x25
   4c678:	add	x25, x22, x22, lsr #63
   4c67c:	asr	x25, x25, #1
   4c680:	ldr	x0, [x28, #16]
   4c684:	neg	x0, x0
   4c688:	cmp	x0, x22
   4c68c:	b.lt	4b918 <mpfr_lngamma@@Base+0x678>  // b.tstop
   4c690:	mov	x1, x22
   4c694:	mov	x0, x21
   4c698:	bl	ca80 <mpfr_init2@plt>
   4c69c:	ldr	w0, [x28, #8]
   4c6a0:	cmp	w0, #0x0
   4c6a4:	b.le	4b7c4 <mpfr_lngamma@@Base+0x524>
   4c6a8:	mov	w2, w26
   4c6ac:	mov	x1, x28
   4c6b0:	mov	x0, x21
   4c6b4:	bl	c090 <mpfr_log@plt>
   4c6b8:	ldr	x1, [sp, #288]
   4c6bc:	mov	x0, x20
   4c6c0:	bl	ca80 <mpfr_init2@plt>
   4c6c4:	mov	w2, w24
   4c6c8:	mov	x1, x21
   4c6cc:	mov	x0, x21
   4c6d0:	bl	bd70 <mpfr_neg@plt>
   4c6d4:	ldr	w3, [sp, #296]
   4c6d8:	mov	w2, w24
   4c6dc:	mov	x1, x21
   4c6e0:	mov	x0, x20
   4c6e4:	bl	c6a0 <mpfr_set4@plt>
   4c6e8:	mov	x0, x20
   4c6ec:	bl	c120 <mpfr_nextabove@plt>
   4c6f0:	ldr	x1, [sp, #288]
   4c6f4:	mov	x0, x19
   4c6f8:	bl	ca80 <mpfr_init2@plt>
   4c6fc:	ldr	w0, [x28, #8]
   4c700:	cmp	w0, #0x0
   4c704:	cset	w2, le
   4c708:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c70c:	ldr	x1, [x0, #2608]
   4c710:	add	x0, x0, #0xa30
   4c714:	blr	x1
   4c718:	add	w2, w2, #0x2
   4c71c:	mrs	x1, tpidr_el0
   4c720:	add	x1, x1, x0
   4c724:	mov	x0, x19
   4c728:	bl	c380 <mpfr_cache@plt>
   4c72c:	mov	w3, w24
   4c730:	mov	x2, x28
   4c734:	mov	x1, x19
   4c738:	mov	x0, x19
   4c73c:	bl	bd50 <mpfr_mul@plt>
   4c740:	mov	w3, w24
   4c744:	mov	x2, x19
   4c748:	mov	x1, x21
   4c74c:	mov	x0, x21
   4c750:	bl	bb70 <mpfr_sub@plt>
   4c754:	ldr	w0, [x28, #8]
   4c758:	cmp	w0, #0x0
   4c75c:	cset	w2, gt
   4c760:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4c764:	ldr	x1, [x0, #2608]
   4c768:	add	x0, x0, #0xa30
   4c76c:	blr	x1
   4c770:	add	w2, w2, #0x2
   4c774:	mrs	x1, tpidr_el0
   4c778:	add	x1, x1, x0
   4c77c:	mov	x0, x19
   4c780:	bl	c380 <mpfr_cache@plt>
   4c784:	mov	w3, w26
   4c788:	mov	x2, x28
   4c78c:	mov	x1, x19
   4c790:	mov	x0, x19
   4c794:	bl	bd50 <mpfr_mul@plt>
   4c798:	mov	w3, w24
   4c79c:	mov	x2, x19
   4c7a0:	mov	x1, x20
   4c7a4:	mov	x0, x20
   4c7a8:	bl	bb70 <mpfr_sub@plt>
   4c7ac:	mov	w3, w26
   4c7b0:	mov	x2, x28
   4c7b4:	mov	x1, x28
   4c7b8:	mov	x0, x19
   4c7bc:	bl	bd50 <mpfr_mul@plt>
   4c7c0:	mov	w3, w26
   4c7c4:	mov	x2, x19
   4c7c8:	mov	x1, x20
   4c7cc:	mov	x0, x20
   4c7d0:	bl	c1a0 <mpfr_add@plt>
   4c7d4:	ldr	w2, [sp, #176]
   4c7d8:	ldr	x1, [x27]
   4c7dc:	mov	x0, x21
   4c7e0:	bl	c970 <mpfr_prec_round@plt>
   4c7e4:	mov	w23, w0
   4c7e8:	ldr	w2, [sp, #176]
   4c7ec:	ldr	x1, [x27]
   4c7f0:	mov	x0, x20
   4c7f4:	bl	c970 <mpfr_prec_round@plt>
   4c7f8:	tbnz	w23, #31, 4c630 <mpfr_lngamma@@Base+0x1390>
   4c7fc:	cmp	w23, #0x0
   4c800:	cset	w1, gt
   4c804:	tbz	w0, #31, 4c638 <mpfr_lngamma@@Base+0x1398>
   4c808:	b	4c648 <mpfr_lngamma@@Base+0x13a8>
   4c80c:	ldr	x0, [sp, #128]
   4c810:	ldr	x0, [x0]
   4c814:	str	x0, [sp, #160]
   4c818:	mov	x1, #0x1                   	// #1
   4c81c:	add	x0, sp, #0x200
   4c820:	bl	ca80 <mpfr_init2@plt>
   4c824:	mov	x1, #0x1                   	// #1
   4c828:	add	x0, sp, #0x1e0
   4c82c:	bl	ca80 <mpfr_init2@plt>
   4c830:	mov	x1, #0x1                   	// #1
   4c834:	add	x0, sp, #0x1c0
   4c838:	bl	ca80 <mpfr_init2@plt>
   4c83c:	mov	x1, #0x1                   	// #1
   4c840:	add	x0, sp, #0x1a0
   4c844:	bl	ca80 <mpfr_init2@plt>
   4c848:	mov	x1, #0x1                   	// #1
   4c84c:	add	x0, sp, #0x180
   4c850:	bl	ca80 <mpfr_init2@plt>
   4c854:	ldr	x0, [sp, #160]
   4c858:	cmp	x0, #0x1
   4c85c:	b.eq	4c624 <mpfr_lngamma@@Base+0x1384>  // b.none
   4c860:	cmp	x0, #0x1
   4c864:	b.le	4bc3c <mpfr_lngamma@@Base+0x99c>
   4c868:	ldr	x2, [sp, #160]
   4c86c:	sub	x0, x2, #0x1
   4c870:	clz	x1, x0
   4c874:	mov	w0, #0x40                  	// #64
   4c878:	sub	w0, w0, w1
   4c87c:	add	x0, x2, w0, sxtw
   4c880:	sub	x1, x0, #0x1
   4c884:	clz	x2, x1
   4c888:	mov	w1, #0x4d                  	// #77
   4c88c:	sub	w1, w1, w2
   4c890:	add	x0, x0, w1, sxtw
   4c894:	str	x0, [sp, #200]
   4c898:	mov	x0, #0x40                  	// #64
   4c89c:	str	x0, [sp, #232]
   4c8a0:	add	x0, sp, #0x200
   4c8a4:	str	x0, [sp, #208]
   4c8a8:	add	x0, sp, #0x1e0
   4c8ac:	str	x0, [sp, #152]
   4c8b0:	add	x26, sp, #0x1c0
   4c8b4:	add	x0, sp, #0x1a0
   4c8b8:	str	x0, [sp, #240]
   4c8bc:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4c8c0:	ldr	d9, [x0, #3936]
   4c8c4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4c8c8:	ldr	d8, [x0, #3944]
   4c8cc:	str	x28, [sp, #144]
   4c8d0:	mov	x1, #0x35                  	// #53
   4c8d4:	ldr	x0, [sp, #208]
   4c8d8:	bl	bed0 <mpfr_set_prec@plt>
   4c8dc:	ldr	x0, [sp, #200]
   4c8e0:	cmp	x0, #0x64
   4c8e4:	b.le	4bc54 <mpfr_lngamma@@Base+0x9b4>
   4c8e8:	ldr	x0, [sp, #200]
   4c8ec:	cmp	x0, #0x1f4
   4c8f0:	b.le	4be14 <mpfr_lngamma@@Base+0xb74>
   4c8f4:	ldr	x0, [sp, #200]
   4c8f8:	cmp	x0, #0x3e8
   4c8fc:	b.le	4be2c <mpfr_lngamma@@Base+0xb8c>
   4c900:	ldr	x0, [sp, #200]
   4c904:	cmp	x0, #0x7d0
   4c908:	b.le	4be44 <mpfr_lngamma@@Base+0xba4>
   4c90c:	mov	x0, #0x1388                	// #5000
   4c910:	ldr	x1, [sp, #200]
   4c914:	cmp	x1, x0
   4c918:	b.le	4be5c <mpfr_lngamma@@Base+0xbbc>
   4c91c:	mov	x0, #0x2710                	// #10000
   4c920:	ldr	x1, [sp, #200]
   4c924:	cmp	x1, x0
   4c928:	b.gt	4be74 <mpfr_lngamma@@Base+0xbd4>
   4c92c:	mov	w3, #0x0                   	// #0
   4c930:	mov	x2, #0xfffffffffffffff6    	// #-10
   4c934:	mov	x1, #0xd9a                 	// #3482
   4c938:	ldr	x0, [sp, #208]
   4c93c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4c940:	b	4bc68 <mpfr_lngamma@@Base+0x9c8>
   4c944:	ldp	x19, x20, [sp, #16]
   4c948:	ldp	x21, x22, [sp, #32]
   4c94c:	ldp	x25, x26, [sp, #64]
   4c950:	ldp	d8, d9, [sp, #96]
   4c954:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4c958:	ldp	x19, x20, [sp, #16]
   4c95c:	ldp	x21, x22, [sp, #32]
   4c960:	ldp	x25, x26, [sp, #64]
   4c964:	ldp	d8, d9, [sp, #96]
   4c968:	b	4b58c <mpfr_lngamma@@Base+0x2ec>
   4c96c:	ldp	x19, x20, [sp, #16]
   4c970:	ldp	x21, x22, [sp, #32]
   4c974:	ldp	x25, x26, [sp, #64]
   4c978:	ldp	d8, d9, [sp, #96]
   4c97c:	b	4b58c <mpfr_lngamma@@Base+0x2ec>

000000000004c980 <mpfr_lgamma@@Base>:
   4c980:	stp	x29, x30, [sp, #-192]!
   4c984:	mov	x29, sp
   4c988:	stp	x19, x20, [sp, #16]
   4c98c:	stp	x23, x24, [sp, #48]
   4c990:	mov	x24, x0
   4c994:	mov	x19, x1
   4c998:	mov	x20, x2
   4c99c:	mov	w0, #0x1                   	// #1
   4c9a0:	str	w0, [x1]
   4c9a4:	ldr	x0, [x2, #16]
   4c9a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4c9ac:	cmp	x0, x1
   4c9b0:	b.le	4c9f0 <mpfr_lgamma@@Base+0x70>
   4c9b4:	stp	x25, x26, [sp, #64]
   4c9b8:	mov	w25, w3
   4c9bc:	ldr	w0, [x2, #8]
   4c9c0:	tbnz	w0, #31, 4ca84 <mpfr_lgamma@@Base+0x104>
   4c9c4:	mov	w2, w25
   4c9c8:	mov	x1, x20
   4c9cc:	mov	x0, x24
   4c9d0:	bl	4b3e0 <mpfr_lngamma@@Base+0x140>
   4c9d4:	mov	w23, w0
   4c9d8:	ldp	x25, x26, [sp, #64]
   4c9dc:	mov	w0, w23
   4c9e0:	ldp	x19, x20, [sp, #16]
   4c9e4:	ldp	x23, x24, [sp, #48]
   4c9e8:	ldp	x29, x30, [sp], #192
   4c9ec:	ret
   4c9f0:	mov	x1, #0x2                   	// #2
   4c9f4:	movk	x1, #0x8000, lsl #48
   4c9f8:	cmp	x0, x1
   4c9fc:	b.eq	4ca2c <mpfr_lgamma@@Base+0xac>  // b.none
   4ca00:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4ca04:	cmp	x0, x1
   4ca08:	b.eq	4ca5c <mpfr_lgamma@@Base+0xdc>  // b.none
   4ca0c:	ldr	w0, [x20, #8]
   4ca10:	str	w0, [x19]
   4ca14:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ca18:	str	x0, [x24, #16]
   4ca1c:	mov	w0, #0x1                   	// #1
   4ca20:	str	w0, [x24, #8]
   4ca24:	mov	w23, #0x0                   	// #0
   4ca28:	b	4c9dc <mpfr_lgamma@@Base+0x5c>
   4ca2c:	str	x1, [x24, #16]
   4ca30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ca34:	ldr	x1, [x0, #2576]
   4ca38:	add	x0, x0, #0xa10
   4ca3c:	blr	x1
   4ca40:	mrs	x1, tpidr_el0
   4ca44:	add	x0, x1, x0
   4ca48:	ldr	w1, [x0]
   4ca4c:	orr	w1, w1, #0x4
   4ca50:	str	w1, [x0]
   4ca54:	mov	w23, #0x0                   	// #0
   4ca58:	b	4c9dc <mpfr_lgamma@@Base+0x5c>
   4ca5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ca60:	ldr	x1, [x0, #2576]
   4ca64:	add	x0, x0, #0xa10
   4ca68:	blr	x1
   4ca6c:	mrs	x1, tpidr_el0
   4ca70:	add	x0, x1, x0
   4ca74:	ldr	w1, [x0]
   4ca78:	orr	w1, w1, #0x20
   4ca7c:	str	w1, [x0]
   4ca80:	b	4ca0c <mpfr_lgamma@@Base+0x8c>
   4ca84:	mov	x0, x2
   4ca88:	bl	c160 <mpfr_integer_p@plt>
   4ca8c:	cbnz	w0, 4cb3c <mpfr_lgamma@@Base+0x1bc>
   4ca90:	stp	x21, x22, [sp, #32]
   4ca94:	mov	x0, x20
   4ca98:	bl	4b234 <mpfr_custom_get_kind@@Base+0x54>
   4ca9c:	cbnz	w0, 4caa8 <mpfr_lgamma@@Base+0x128>
   4caa0:	mov	w0, #0xffffffff            	// #-1
   4caa4:	str	w0, [x19]
   4caa8:	ldr	x22, [x24]
   4caac:	neg	x0, x22
   4cab0:	ldr	x1, [x20, #16]
   4cab4:	cmp	x1, x0
   4cab8:	b.ge	4cc18 <mpfr_lgamma@@Base+0x298>  // b.tcont
   4cabc:	stp	x27, x28, [sp, #80]
   4cac0:	add	x22, x22, #0xe
   4cac4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cac8:	ldr	x1, [x0, #2576]
   4cacc:	add	x0, x0, #0xa10
   4cad0:	blr	x1
   4cad4:	mrs	x1, tpidr_el0
   4cad8:	ldr	w0, [x1, x0]
   4cadc:	str	w0, [sp, #108]
   4cae0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cae4:	ldr	x2, [x0, #2512]
   4cae8:	add	x0, x0, #0x9d0
   4caec:	blr	x2
   4caf0:	add	x2, x1, x0
   4caf4:	ldr	x0, [x1, x0]
   4caf8:	str	x0, [sp, #112]
   4cafc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cb00:	ldr	x3, [x0, #2544]
   4cb04:	add	x0, x0, #0x9f0
   4cb08:	blr	x3
   4cb0c:	ldr	x3, [x1, x0]
   4cb10:	str	x3, [sp, #120]
   4cb14:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4cb18:	str	x3, [x2]
   4cb1c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4cb20:	str	x2, [x1, x0]
   4cb24:	add	x21, sp, #0x80
   4cb28:	add	x19, sp, #0xa0
   4cb2c:	mov	w26, #0x2                   	// #2
   4cb30:	mov	w27, #0x3                   	// #3
   4cb34:	mov	w28, #0x43                  	// #67
   4cb38:	b	4cc64 <mpfr_lgamma@@Base+0x2e4>
   4cb3c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4cb40:	str	x0, [x24, #16]
   4cb44:	mov	w0, #0x1                   	// #1
   4cb48:	str	w0, [x24, #8]
   4cb4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cb50:	ldr	x1, [x0, #2576]
   4cb54:	add	x0, x0, #0xa10
   4cb58:	blr	x1
   4cb5c:	mrs	x1, tpidr_el0
   4cb60:	add	x0, x1, x0
   4cb64:	ldr	w1, [x0]
   4cb68:	orr	w1, w1, #0x20
   4cb6c:	str	w1, [x0]
   4cb70:	mov	w23, #0x0                   	// #0
   4cb74:	ldp	x25, x26, [sp, #64]
   4cb78:	b	4c9dc <mpfr_lgamma@@Base+0x5c>
   4cb7c:	mov	w2, w25
   4cb80:	mov	w1, w23
   4cb84:	mov	x0, x24
   4cb88:	bl	cb30 <mpfr_check_range@plt>
   4cb8c:	mov	w23, w0
   4cb90:	ldp	x21, x22, [sp, #32]
   4cb94:	ldp	x25, x26, [sp, #64]
   4cb98:	ldp	x27, x28, [sp, #80]
   4cb9c:	b	4c9dc <mpfr_lgamma@@Base+0x5c>
   4cba0:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4cba4:	add	x2, x2, #0x2b8
   4cba8:	mov	w1, #0x35d                 	// #861
   4cbac:	adrp	x0, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   4cbb0:	add	x0, x0, #0x2d8
   4cbb4:	bl	cb40 <mpfr_assert_fail@plt>
   4cbb8:	mov	w0, w27
   4cbbc:	b	4cc60 <mpfr_lgamma@@Base+0x2e0>
   4cbc0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cbc4:	ldr	x1, [x0, #2576]
   4cbc8:	add	x0, x0, #0xa10
   4cbcc:	blr	x1
   4cbd0:	mrs	x1, tpidr_el0
   4cbd4:	ldr	w2, [sp, #108]
   4cbd8:	str	w2, [x1, x0]
   4cbdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cbe0:	ldr	x2, [x0, #2512]
   4cbe4:	add	x0, x0, #0x9d0
   4cbe8:	blr	x2
   4cbec:	ldr	x2, [sp, #112]
   4cbf0:	str	x2, [x1, x0]
   4cbf4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cbf8:	ldr	x2, [x0, #2544]
   4cbfc:	add	x0, x0, #0x9f0
   4cc00:	blr	x2
   4cc04:	ldr	x2, [sp, #120]
   4cc08:	str	x2, [x1, x0]
   4cc0c:	ldp	x21, x22, [sp, #32]
   4cc10:	ldp	x27, x28, [sp, #80]
   4cc14:	b	4c9c4 <mpfr_lgamma@@Base+0x44>
   4cc18:	ldp	x21, x22, [sp, #32]
   4cc1c:	b	4c9c4 <mpfr_lgamma@@Base+0x44>
   4cc20:	tbnz	w0, #31, 4cd34 <mpfr_lgamma@@Base+0x3b4>
   4cc24:	ldr	x23, [sp, #144]
   4cc28:	mov	x0, x21
   4cc2c:	bl	c070 <mpfr_clear@plt>
   4cc30:	mov	x0, x19
   4cc34:	bl	c070 <mpfr_clear@plt>
   4cc38:	ldr	x0, [x20, #16]
   4cc3c:	add	x0, x22, x0
   4cc40:	cmp	x0, x23
   4cc44:	b.gt	4cbc0 <mpfr_lgamma@@Base+0x240>
   4cc48:	cmp	x22, #0x1
   4cc4c:	b.eq	4cbb8 <mpfr_lgamma@@Base+0x238>  // b.none
   4cc50:	b.le	4cba0 <mpfr_lgamma@@Base+0x220>
   4cc54:	sub	x0, x22, #0x1
   4cc58:	clz	x0, x0
   4cc5c:	sub	w0, w28, w0
   4cc60:	add	x22, x22, w0, sxtw
   4cc64:	mov	x1, x22
   4cc68:	mov	x0, x21
   4cc6c:	bl	ca80 <mpfr_init2@plt>
   4cc70:	mov	x1, x22
   4cc74:	mov	x0, x19
   4cc78:	bl	ca80 <mpfr_init2@plt>
   4cc7c:	mov	w2, w26
   4cc80:	mov	x1, x20
   4cc84:	mov	x0, x21
   4cc88:	bl	bd70 <mpfr_neg@plt>
   4cc8c:	mov	w2, w26
   4cc90:	mov	x1, x21
   4cc94:	mov	x0, x21
   4cc98:	bl	c090 <mpfr_log@plt>
   4cc9c:	mov	w2, w27
   4cca0:	mov	x1, x21
   4cca4:	mov	x0, x21
   4cca8:	bl	bd70 <mpfr_neg@plt>
   4ccac:	mov	w2, w27
   4ccb0:	mov	x1, x20
   4ccb4:	mov	x0, x19
   4ccb8:	bl	bd70 <mpfr_neg@plt>
   4ccbc:	mov	w2, w27
   4ccc0:	mov	x1, x19
   4ccc4:	mov	x0, x19
   4ccc8:	bl	c090 <mpfr_log@plt>
   4cccc:	mov	w2, w26
   4ccd0:	mov	x1, x19
   4ccd4:	mov	x0, x19
   4ccd8:	bl	bd70 <mpfr_neg@plt>
   4ccdc:	mov	w3, w26
   4cce0:	mov	x2, x20
   4cce4:	mov	x1, x19
   4cce8:	mov	x0, x19
   4ccec:	bl	bb70 <mpfr_sub@plt>
   4ccf0:	mov	w2, w25
   4ccf4:	ldr	x1, [x24]
   4ccf8:	mov	x0, x21
   4ccfc:	bl	c970 <mpfr_prec_round@plt>
   4cd00:	mov	w23, w0
   4cd04:	mov	w2, w25
   4cd08:	ldr	x1, [x24]
   4cd0c:	mov	x0, x19
   4cd10:	bl	c970 <mpfr_prec_round@plt>
   4cd14:	tbnz	w23, #31, 4cc20 <mpfr_lgamma@@Base+0x2a0>
   4cd18:	tbnz	w0, #31, 4cc24 <mpfr_lgamma@@Base+0x2a4>
   4cd1c:	cmp	w23, #0x0
   4cd20:	cset	w1, gt
   4cd24:	cmp	w0, #0x0
   4cd28:	cset	w0, gt
   4cd2c:	cmp	w0, w1, uxtb
   4cd30:	b.ne	4cc24 <mpfr_lgamma@@Base+0x2a4>  // b.any
   4cd34:	mov	x1, x19
   4cd38:	mov	x0, x21
   4cd3c:	bl	ca60 <mpfr_equal_p@plt>
   4cd40:	cbz	w0, 4cc24 <mpfr_lgamma@@Base+0x2a4>
   4cd44:	add	x19, sp, #0xa0
   4cd48:	ldr	w3, [sp, #168]
   4cd4c:	mov	w2, w25
   4cd50:	mov	x1, x19
   4cd54:	mov	x0, x24
   4cd58:	bl	c6a0 <mpfr_set4@plt>
   4cd5c:	add	x0, sp, #0x80
   4cd60:	bl	c070 <mpfr_clear@plt>
   4cd64:	mov	x0, x19
   4cd68:	bl	c070 <mpfr_clear@plt>
   4cd6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cd70:	ldr	x1, [x0, #2576]
   4cd74:	add	x0, x0, #0xa10
   4cd78:	blr	x1
   4cd7c:	mrs	x1, tpidr_el0
   4cd80:	ldr	w2, [sp, #108]
   4cd84:	str	w2, [x1, x0]
   4cd88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cd8c:	ldr	x2, [x0, #2512]
   4cd90:	add	x0, x0, #0x9d0
   4cd94:	blr	x2
   4cd98:	ldr	x2, [sp, #112]
   4cd9c:	str	x2, [x1, x0]
   4cda0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cda4:	ldr	x3, [x0, #2544]
   4cda8:	add	x0, x0, #0x9f0
   4cdac:	blr	x3
   4cdb0:	ldr	x3, [sp, #120]
   4cdb4:	str	x3, [x1, x0]
   4cdb8:	ldr	x0, [x24, #16]
   4cdbc:	cmp	x3, x0
   4cdc0:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   4cdc4:	b.gt	4cb7c <mpfr_lgamma@@Base+0x1fc>
   4cdc8:	cbz	w23, 4cdfc <mpfr_lgamma@@Base+0x47c>
   4cdcc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4cdd0:	ldr	x1, [x0, #2576]
   4cdd4:	add	x0, x0, #0xa10
   4cdd8:	blr	x1
   4cddc:	ldr	w1, [sp, #108]
   4cde0:	orr	w2, w1, #0x8
   4cde4:	mrs	x1, tpidr_el0
   4cde8:	str	w2, [x1, x0]
   4cdec:	ldp	x21, x22, [sp, #32]
   4cdf0:	ldp	x25, x26, [sp, #64]
   4cdf4:	ldp	x27, x28, [sp, #80]
   4cdf8:	b	4c9dc <mpfr_lgamma@@Base+0x5c>
   4cdfc:	ldp	x21, x22, [sp, #32]
   4ce00:	ldp	x25, x26, [sp, #64]
   4ce04:	ldp	x27, x28, [sp, #80]
   4ce08:	b	4c9dc <mpfr_lgamma@@Base+0x5c>

000000000004ce0c <mpfr_zeta_ui@@Base>:
   4ce0c:	stp	x29, x30, [sp, #-272]!
   4ce10:	mov	x29, sp
   4ce14:	stp	x19, x20, [sp, #16]
   4ce18:	str	x0, [sp, #120]
   4ce1c:	str	w2, [sp, #136]
   4ce20:	cbz	x1, 4d008 <mpfr_zeta_ui@@Base+0x1fc>
   4ce24:	stp	x25, x26, [sp, #64]
   4ce28:	mov	x25, x1
   4ce2c:	cmp	x1, #0x1
   4ce30:	b.eq	4d020 <mpfr_zeta_ui@@Base+0x214>  // b.none
   4ce34:	ldr	x0, [sp, #120]
   4ce38:	ldr	x19, [x0]
   4ce3c:	ldr	w1, [sp, #136]
   4ce40:	cmp	w1, #0x4
   4ce44:	mov	w0, #0x2                   	// #2
   4ce48:	csel	w0, w1, w0, ne  // ne = any
   4ce4c:	str	w0, [sp, #136]
   4ce50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ce54:	ldr	x1, [x0, #2576]
   4ce58:	add	x0, x0, #0xa10
   4ce5c:	blr	x1
   4ce60:	mrs	x1, tpidr_el0
   4ce64:	ldr	w0, [x1, x0]
   4ce68:	str	w0, [sp, #140]
   4ce6c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ce70:	ldr	x2, [x0, #2512]
   4ce74:	add	x0, x0, #0x9d0
   4ce78:	blr	x2
   4ce7c:	add	x2, x1, x0
   4ce80:	ldr	x0, [x1, x0]
   4ce84:	str	x0, [sp, #152]
   4ce88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ce8c:	ldr	x3, [x0, #2544]
   4ce90:	add	x0, x0, #0x9f0
   4ce94:	blr	x3
   4ce98:	ldr	x3, [x1, x0]
   4ce9c:	str	x3, [sp, #160]
   4cea0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4cea4:	str	x3, [x2]
   4cea8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4ceac:	str	x2, [x1, x0]
   4ceb0:	cmp	x19, x25
   4ceb4:	b.ls	4d064 <mpfr_zeta_ui@@Base+0x258>  // b.plast
   4ceb8:	mov	x1, #0x1f                  	// #31
   4cebc:	add	x0, sp, #0xf0
   4cec0:	bl	ca80 <mpfr_init2@plt>
   4cec4:	add	x0, x19, x19, lsr #63
   4cec8:	cmp	x25, x0, asr #1
   4cecc:	b.cc	4cf0c <mpfr_zeta_ui@@Base+0x100>  // b.lo, b.ul, b.last
   4ced0:	add	x20, sp, #0xf0
   4ced4:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   4ced8:	add	x1, x1, #0xf70
   4cedc:	mov	x0, x20
   4cee0:	bl	c340 <mpfr_set_str_binary@plt>
   4cee4:	mov	w3, #0x1                   	// #1
   4cee8:	mov	x2, x25
   4ceec:	mov	x1, x20
   4cef0:	mov	x0, x20
   4cef4:	bl	ba50 <mpfr_mul_ui@plt>
   4cef8:	mov	x2, #0x0                   	// #0
   4cefc:	add	x1, x19, #0x2
   4cf00:	mov	x0, x20
   4cf04:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4cf08:	tbz	w0, #31, 4d178 <mpfr_zeta_ui@@Base+0x36c>
   4cf0c:	stp	x21, x22, [sp, #32]
   4cf10:	stp	x23, x24, [sp, #48]
   4cf14:	stp	x27, x28, [sp, #80]
   4cf18:	str	d8, [sp, #96]
   4cf1c:	add	x0, sp, #0xd0
   4cf20:	bl	bf90 <mpfr_mpz_init@plt>
   4cf24:	add	x0, sp, #0xb0
   4cf28:	bl	bf90 <mpfr_mpz_init@plt>
   4cf2c:	add	x0, sp, #0xc0
   4cf30:	bl	bf90 <mpfr_mpz_init@plt>
   4cf34:	add	x0, sp, #0xe0
   4cf38:	bl	bf90 <mpfr_mpz_init@plt>
   4cf3c:	cmp	x19, #0x1
   4cf40:	b.eq	4d1f8 <mpfr_zeta_ui@@Base+0x3ec>  // b.none
   4cf44:	b.le	4d1e0 <mpfr_zeta_ui@@Base+0x3d4>
   4cf48:	sub	x0, x19, #0x1
   4cf4c:	clz	x1, x0
   4cf50:	mov	w0, #0x40                  	// #64
   4cf54:	sub	w0, w0, w1
   4cf58:	add	x19, x19, w0, sxtw
   4cf5c:	sub	x0, x19, #0x1
   4cf60:	clz	x1, x0
   4cf64:	mov	w0, #0x4f                  	// #79
   4cf68:	sub	w0, w0, w1
   4cf6c:	add	x0, x19, w0, sxtw
   4cf70:	str	x0, [sp, #128]
   4cf74:	mov	x0, #0x40                  	// #64
   4cf78:	str	x0, [sp, #168]
   4cf7c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4cf80:	ldr	d8, [x0, #4024]
   4cf84:	add	x0, sp, #0xf0
   4cf88:	str	x0, [sp, #144]
   4cf8c:	add	x24, sp, #0xd0
   4cf90:	add	x23, sp, #0xe0
   4cf94:	ldr	d0, [sp, #128]
   4cf98:	scvtf	d0, d0
   4cf9c:	fmul	d0, d0, d8
   4cfa0:	fcvtzu	x28, d0
   4cfa4:	add	x20, x28, #0x1
   4cfa8:	str	x20, [sp, #112]
   4cfac:	add	x26, x28, #0x5
   4cfb0:	ldr	x1, [sp, #128]
   4cfb4:	ldr	x0, [sp, #144]
   4cfb8:	bl	bed0 <mpfr_set_prec@plt>
   4cfbc:	mov	x1, #0x0                   	// #0
   4cfc0:	mov	x0, x24
   4cfc4:	bl	bcb0 <__gmpz_set_ui@plt>
   4cfc8:	add	x19, sp, #0xc0
   4cfcc:	mov	x1, #0x1                   	// #1
   4cfd0:	mov	x0, x19
   4cfd4:	bl	bcb0 <__gmpz_set_ui@plt>
   4cfd8:	lsl	x2, x20, #1
   4cfdc:	sub	x2, x2, #0x1
   4cfe0:	mov	x1, x19
   4cfe4:	mov	x0, x19
   4cfe8:	bl	c200 <__gmpz_mul_2exp@plt>
   4cfec:	mov	x1, x19
   4cff0:	add	x0, sp, #0xb0
   4cff4:	bl	bfa0 <__gmpz_set@plt>
   4cff8:	cbz	x20, 4d39c <mpfr_zeta_ui@@Base+0x590>
   4cffc:	add	x27, sp, #0xb0
   4d000:	add	x22, sp, #0xc0
   4d004:	b	4d2b0 <mpfr_zeta_ui@@Base+0x4a4>
   4d008:	mov	w3, w2
   4d00c:	mov	x2, #0xffffffffffffffff    	// #-1
   4d010:	mov	x1, x2
   4d014:	bl	ba80 <mpfr_set_si_2exp@plt>
   4d018:	mov	w19, w0
   4d01c:	b	4d124 <mpfr_zeta_ui@@Base+0x318>
   4d020:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d024:	ldr	x1, [sp, #120]
   4d028:	str	x0, [x1, #16]
   4d02c:	mov	w0, #0x1                   	// #1
   4d030:	str	w0, [x1, #8]
   4d034:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d038:	ldr	x1, [x0, #2576]
   4d03c:	add	x0, x0, #0xa10
   4d040:	blr	x1
   4d044:	mrs	x1, tpidr_el0
   4d048:	add	x0, x1, x0
   4d04c:	ldr	w1, [x0]
   4d050:	orr	w1, w1, #0x20
   4d054:	str	w1, [x0]
   4d058:	mov	w19, #0x0                   	// #0
   4d05c:	ldp	x25, x26, [sp, #64]
   4d060:	b	4d124 <mpfr_zeta_ui@@Base+0x318>
   4d064:	cmp	x25, #0x2
   4d068:	b.eq	4d134 <mpfr_zeta_ui@@Base+0x328>  // b.none
   4d06c:	ldr	w2, [sp, #136]
   4d070:	and	w1, w2, #0xfffffffd
   4d074:	cmp	w1, #0x1
   4d078:	b.eq	4d088 <mpfr_zeta_ui@@Base+0x27c>  // b.none
   4d07c:	cmp	w2, #0x0
   4d080:	ccmp	x19, x25, #0x2, eq  // eq = none
   4d084:	b.cs	4d150 <mpfr_zeta_ui@@Base+0x344>  // b.hs, b.nlast
   4d088:	ldr	w3, [sp, #136]
   4d08c:	mov	x2, #0x0                   	// #0
   4d090:	mov	x1, #0x1                   	// #1
   4d094:	ldr	x0, [sp, #120]
   4d098:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d09c:	mov	w19, #0xffffffff            	// #-1
   4d0a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d0a4:	ldr	x1, [x0, #2576]
   4d0a8:	add	x0, x0, #0xa10
   4d0ac:	blr	x1
   4d0b0:	mrs	x1, tpidr_el0
   4d0b4:	ldr	w2, [sp, #140]
   4d0b8:	str	w2, [x1, x0]
   4d0bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d0c0:	ldr	x2, [x0, #2512]
   4d0c4:	add	x0, x0, #0x9d0
   4d0c8:	blr	x2
   4d0cc:	ldr	x2, [sp, #152]
   4d0d0:	str	x2, [x1, x0]
   4d0d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d0d8:	ldr	x3, [x0, #2544]
   4d0dc:	add	x0, x0, #0x9f0
   4d0e0:	blr	x3
   4d0e4:	ldr	x3, [sp, #160]
   4d0e8:	str	x3, [x1, x0]
   4d0ec:	ldr	x0, [sp, #120]
   4d0f0:	ldr	x0, [x0, #16]
   4d0f4:	cmp	x2, x0
   4d0f8:	ccmp	x3, x0, #0x1, le
   4d0fc:	b.lt	4d5d4 <mpfr_zeta_ui@@Base+0x7c8>  // b.tstop
   4d100:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d104:	ldr	x1, [x0, #2576]
   4d108:	add	x0, x0, #0xa10
   4d10c:	blr	x1
   4d110:	ldr	w1, [sp, #140]
   4d114:	orr	w2, w1, #0x8
   4d118:	mrs	x1, tpidr_el0
   4d11c:	str	w2, [x1, x0]
   4d120:	ldp	x25, x26, [sp, #64]
   4d124:	mov	w0, w19
   4d128:	ldp	x19, x20, [sp, #16]
   4d12c:	ldp	x29, x30, [sp], #272
   4d130:	ret
   4d134:	ldr	w3, [sp, #136]
   4d138:	mov	x2, #0xfffffffffffffffd    	// #-3
   4d13c:	mov	x1, #0xd                   	// #13
   4d140:	ldr	x0, [sp, #120]
   4d144:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d148:	mov	w19, w0
   4d14c:	b	4d4f4 <mpfr_zeta_ui@@Base+0x6e8>
   4d150:	ldr	w3, [sp, #136]
   4d154:	mov	x2, #0x0                   	// #0
   4d158:	mov	x1, #0x1                   	// #1
   4d15c:	ldr	x19, [sp, #120]
   4d160:	mov	x0, x19
   4d164:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d168:	mov	x0, x19
   4d16c:	bl	c120 <mpfr_nextabove@plt>
   4d170:	mov	w19, #0x1                   	// #1
   4d174:	b	4d0a0 <mpfr_zeta_ui@@Base+0x294>
   4d178:	add	x0, sp, #0xf0
   4d17c:	bl	c070 <mpfr_clear@plt>
   4d180:	mov	w3, #0x1                   	// #1
   4d184:	mov	x2, #0x0                   	// #0
   4d188:	mov	x1, #0x1                   	// #1
   4d18c:	ldr	x19, [sp, #120]
   4d190:	mov	x0, x19
   4d194:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d198:	mov	w3, #0x1                   	// #1
   4d19c:	mov	x2, x25
   4d1a0:	mov	x1, x19
   4d1a4:	mov	x0, x19
   4d1a8:	bl	c8f0 <mpfr_div_2ui@plt>
   4d1ac:	mov	w3, #0x1                   	// #1
   4d1b0:	mov	x2, #0x1                   	// #1
   4d1b4:	mov	x1, x19
   4d1b8:	mov	x0, x19
   4d1bc:	bl	c260 <mpfr_add_ui@plt>
   4d1c0:	mov	w19, #0xffffffff            	// #-1
   4d1c4:	ldr	w0, [sp, #136]
   4d1c8:	cmp	w0, #0x2
   4d1cc:	b.ne	4d0a0 <mpfr_zeta_ui@@Base+0x294>  // b.any
   4d1d0:	ldr	x0, [sp, #120]
   4d1d4:	bl	c120 <mpfr_nextabove@plt>
   4d1d8:	mov	w19, #0x1                   	// #1
   4d1dc:	b	4d0a0 <mpfr_zeta_ui@@Base+0x294>
   4d1e0:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   4d1e4:	add	x2, x2, #0x448
   4d1e8:	mov	w1, #0x6e                  	// #110
   4d1ec:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4d1f0:	add	x0, x0, #0xf98
   4d1f4:	bl	cb40 <mpfr_assert_fail@plt>
   4d1f8:	mov	w0, #0xf                   	// #15
   4d1fc:	b	4cf6c <mpfr_zeta_ui@@Base+0x160>
   4d200:	mov	x2, x25
   4d204:	mov	x1, x20
   4d208:	mov	x0, x23
   4d20c:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   4d210:	mov	x2, x23
   4d214:	mov	x1, x27
   4d218:	mov	x0, x23
   4d21c:	bl	bb30 <__gmpz_tdiv_q@plt>
   4d220:	tbz	w20, #0, 4d338 <mpfr_zeta_ui@@Base+0x52c>
   4d224:	mov	x2, x23
   4d228:	mov	x1, x24
   4d22c:	mov	x0, x24
   4d230:	bl	c9c0 <__gmpz_add@plt>
   4d234:	mov	x0, #0xf334                	// #62260
   4d238:	movk	x0, #0xb504, lsl #16
   4d23c:	cmp	x20, x0
   4d240:	b.hi	4d34c <mpfr_zeta_ui@@Base+0x540>  // b.pmore
   4d244:	lsl	x2, x20, #1
   4d248:	sub	x2, x2, #0x1
   4d24c:	mul	x2, x2, x20
   4d250:	mov	x1, x22
   4d254:	mov	x0, x22
   4d258:	bl	c100 <__gmpz_mul_ui@plt>
   4d25c:	mov	x2, #0x1                   	// #1
   4d260:	mov	x1, x22
   4d264:	mov	x0, x22
   4d268:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4d26c:	mov	x0, #0xffffffff            	// #4294967295
   4d270:	ldr	x1, [sp, #112]
   4d274:	cmp	x1, x0
   4d278:	b.hi	4d374 <mpfr_zeta_ui@@Base+0x568>  // b.pmore
   4d27c:	add	x0, x28, #0x2
   4d280:	sub	x0, x0, x20
   4d284:	add	x2, x28, x20
   4d288:	mul	x2, x0, x2
   4d28c:	mov	x1, x22
   4d290:	mov	x0, x22
   4d294:	bl	c570 <__gmpz_divexact_ui@plt>
   4d298:	mov	x2, x22
   4d29c:	mov	x1, x27
   4d2a0:	mov	x0, x27
   4d2a4:	bl	c9c0 <__gmpz_add@plt>
   4d2a8:	subs	x20, x20, #0x1
   4d2ac:	b.eq	4d39c <mpfr_zeta_ui@@Base+0x590>  // b.none
   4d2b0:	clz	x1, x20
   4d2b4:	mov	x0, #0x40                  	// #64
   4d2b8:	sub	x0, x0, x1
   4d2bc:	mul	x0, x0, x25
   4d2c0:	cmp	x0, #0x80
   4d2c4:	b.ls	4d2fc <mpfr_zeta_ui@@Base+0x4f0>  // b.plast
   4d2c8:	mov	x19, #0x3f                  	// #63
   4d2cc:	sub	x19, x19, x1
   4d2d0:	mul	x19, x19, x25
   4d2d4:	mov	w1, #0x2                   	// #2
   4d2d8:	mov	x0, x27
   4d2dc:	bl	cb60 <__gmpz_sizeinbase@plt>
   4d2e0:	add	x19, x19, #0x1
   4d2e4:	cmp	x0, x19
   4d2e8:	b.cs	4d200 <mpfr_zeta_ui@@Base+0x3f4>  // b.hs, b.nlast
   4d2ec:	mov	x1, #0x0                   	// #0
   4d2f0:	mov	x0, x23
   4d2f4:	bl	bcb0 <__gmpz_set_ui@plt>
   4d2f8:	b	4d220 <mpfr_zeta_ui@@Base+0x414>
   4d2fc:	sub	x19, x25, #0x1
   4d300:	mov	x21, #0xffffffffffffffff    	// #-1
   4d304:	udiv	x21, x21, x20
   4d308:	cmp	x21, x20
   4d30c:	b.ls	4d640 <mpfr_zeta_ui@@Base+0x834>  // b.plast
   4d310:	mov	x2, x20
   4d314:	mul	x2, x2, x20
   4d318:	subs	x19, x19, #0x1
   4d31c:	b.eq	4d648 <mpfr_zeta_ui@@Base+0x83c>  // b.none
   4d320:	cmp	x21, x2
   4d324:	b.hi	4d314 <mpfr_zeta_ui@@Base+0x508>  // b.pmore
   4d328:	mov	x1, x27
   4d32c:	mov	x0, x23
   4d330:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4d334:	b	4d600 <mpfr_zeta_ui@@Base+0x7f4>
   4d338:	mov	x2, x23
   4d33c:	mov	x1, x24
   4d340:	mov	x0, x24
   4d344:	bl	bde0 <__gmpz_sub@plt>
   4d348:	b	4d234 <mpfr_zeta_ui@@Base+0x428>
   4d34c:	mov	x2, x20
   4d350:	mov	x1, x22
   4d354:	mov	x0, x22
   4d358:	bl	c100 <__gmpz_mul_ui@plt>
   4d35c:	lsl	x2, x20, #1
   4d360:	sub	x2, x2, #0x1
   4d364:	mov	x1, x22
   4d368:	mov	x0, x22
   4d36c:	bl	c100 <__gmpz_mul_ui@plt>
   4d370:	b	4d25c <mpfr_zeta_ui@@Base+0x450>
   4d374:	add	x2, x28, #0x2
   4d378:	sub	x2, x2, x20
   4d37c:	mov	x1, x22
   4d380:	mov	x0, x22
   4d384:	bl	c570 <__gmpz_divexact_ui@plt>
   4d388:	add	x2, x28, x20
   4d38c:	mov	x1, x22
   4d390:	mov	x0, x22
   4d394:	bl	c570 <__gmpz_divexact_ui@plt>
   4d398:	b	4d298 <mpfr_zeta_ui@@Base+0x48c>
   4d39c:	sub	x20, x25, #0x1
   4d3a0:	mov	x2, x20
   4d3a4:	mov	x1, x24
   4d3a8:	add	x0, sp, #0xc0
   4d3ac:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4d3b0:	add	x19, sp, #0xc0
   4d3b4:	mov	x21, x26
   4d3b8:	add	x26, x26, #0x1
   4d3bc:	mov	x2, x19
   4d3c0:	mov	x1, x24
   4d3c4:	mov	x0, x24
   4d3c8:	bl	c9c0 <__gmpz_add@plt>
   4d3cc:	mov	x2, x20
   4d3d0:	mov	x1, x19
   4d3d4:	mov	x0, x19
   4d3d8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4d3dc:	ldr	w0, [sp, #196]
   4d3e0:	cmp	w0, #0x0
   4d3e4:	b.gt	4d3b4 <mpfr_zeta_ui@@Base+0x5a8>
   4d3e8:	ldr	x22, [sp, #128]
   4d3ec:	mov	x19, x22
   4d3f0:	mov	x2, x22
   4d3f4:	mov	x1, x24
   4d3f8:	mov	x0, x24
   4d3fc:	bl	c200 <__gmpz_mul_2exp@plt>
   4d400:	add	x2, sp, #0xb0
   4d404:	mov	x1, x24
   4d408:	mov	x0, x24
   4d40c:	bl	bb30 <__gmpz_tdiv_q@plt>
   4d410:	mov	w2, #0x0                   	// #0
   4d414:	mov	x1, x24
   4d418:	ldr	x20, [sp, #144]
   4d41c:	mov	x0, x20
   4d420:	bl	c240 <mpfr_set_z@plt>
   4d424:	mov	w3, #0x0                   	// #0
   4d428:	mov	x2, x22
   4d42c:	mov	x1, x20
   4d430:	mov	x0, x20
   4d434:	bl	c8f0 <mpfr_div_2ui@plt>
   4d438:	cmp	x26, #0x1
   4d43c:	b.eq	4d578 <mpfr_zeta_ui@@Base+0x76c>  // b.none
   4d440:	b.ls	4d560 <mpfr_zeta_ui@@Base+0x754>  // b.plast
   4d444:	clz	x21, x21
   4d448:	mov	w2, #0x40                  	// #64
   4d44c:	sub	w21, w2, w21
   4d450:	sxtw	x2, w21
   4d454:	ldr	x1, [sp, #256]
   4d458:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d45c:	cmp	x1, x0
   4d460:	b.le	4d580 <mpfr_zeta_ui@@Base+0x774>
   4d464:	ldr	w0, [sp, #136]
   4d468:	cmp	w0, #0x0
   4d46c:	ldr	x0, [sp, #120]
   4d470:	ldr	x3, [x0]
   4d474:	cinc	x3, x3, eq  // eq = none
   4d478:	ldr	x0, [sp, #240]
   4d47c:	add	x1, x0, #0x3e
   4d480:	subs	x0, x0, #0x1
   4d484:	csel	x1, x1, x0, mi  // mi = first
   4d488:	asr	x1, x1, #6
   4d48c:	sub	x2, x19, x2
   4d490:	add	x1, x1, #0x1
   4d494:	ldr	x0, [sp, #264]
   4d498:	bl	c370 <mpfr_round_p@plt>
   4d49c:	cbz	w0, 4d580 <mpfr_zeta_ui@@Base+0x774>
   4d4a0:	add	x0, sp, #0xb0
   4d4a4:	bl	c170 <mpfr_mpz_clear@plt>
   4d4a8:	add	x0, sp, #0xc0
   4d4ac:	bl	c170 <mpfr_mpz_clear@plt>
   4d4b0:	add	x0, sp, #0xe0
   4d4b4:	bl	c170 <mpfr_mpz_clear@plt>
   4d4b8:	add	x0, sp, #0xd0
   4d4bc:	bl	c170 <mpfr_mpz_clear@plt>
   4d4c0:	add	x20, sp, #0xf0
   4d4c4:	ldr	w3, [sp, #248]
   4d4c8:	ldr	w2, [sp, #136]
   4d4cc:	mov	x1, x20
   4d4d0:	ldr	x0, [sp, #120]
   4d4d4:	bl	c6a0 <mpfr_set4@plt>
   4d4d8:	mov	w19, w0
   4d4dc:	mov	x0, x20
   4d4e0:	bl	c070 <mpfr_clear@plt>
   4d4e4:	ldp	x21, x22, [sp, #32]
   4d4e8:	ldp	x23, x24, [sp, #48]
   4d4ec:	ldp	x27, x28, [sp, #80]
   4d4f0:	ldr	d8, [sp, #96]
   4d4f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d4f8:	ldr	x1, [x0, #2576]
   4d4fc:	add	x0, x0, #0xa10
   4d500:	blr	x1
   4d504:	mrs	x1, tpidr_el0
   4d508:	ldr	w2, [sp, #140]
   4d50c:	str	w2, [x1, x0]
   4d510:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d514:	ldr	x2, [x0, #2512]
   4d518:	add	x0, x0, #0x9d0
   4d51c:	blr	x2
   4d520:	ldr	x2, [sp, #152]
   4d524:	str	x2, [x1, x0]
   4d528:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d52c:	ldr	x3, [x0, #2544]
   4d530:	add	x0, x0, #0x9f0
   4d534:	blr	x3
   4d538:	ldr	x3, [sp, #160]
   4d53c:	str	x3, [x1, x0]
   4d540:	ldr	x0, [sp, #120]
   4d544:	ldr	x0, [x0, #16]
   4d548:	cmp	x3, x0
   4d54c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   4d550:	b.gt	4d5d4 <mpfr_zeta_ui@@Base+0x7c8>
   4d554:	cbnz	w19, 4d100 <mpfr_zeta_ui@@Base+0x2f4>
   4d558:	ldp	x25, x26, [sp, #64]
   4d55c:	b	4d124 <mpfr_zeta_ui@@Base+0x318>
   4d560:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4d564:	add	x2, x2, #0xfa8
   4d568:	mov	w1, #0xdc                  	// #220
   4d56c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4d570:	add	x0, x0, #0xf98
   4d574:	bl	cb40 <mpfr_assert_fail@plt>
   4d578:	mov	x2, #0x0                   	// #0
   4d57c:	b	4d454 <mpfr_zeta_ui@@Base+0x648>
   4d580:	mov	x0, #0xfffffffffffffeff    	// #-257
   4d584:	movk	x0, #0x7fff, lsl #48
   4d588:	ldr	x1, [sp, #128]
   4d58c:	sub	x0, x0, x1
   4d590:	ldr	x1, [sp, #168]
   4d594:	cmp	x0, x1
   4d598:	b.lt	4d5bc <mpfr_zeta_ui@@Base+0x7b0>  // b.tstop
   4d59c:	ldr	x0, [sp, #128]
   4d5a0:	ldr	x1, [sp, #168]
   4d5a4:	add	x0, x0, x1
   4d5a8:	str	x0, [sp, #128]
   4d5ac:	add	x0, x0, x0, lsr #63
   4d5b0:	asr	x0, x0, #1
   4d5b4:	str	x0, [sp, #168]
   4d5b8:	b	4cf94 <mpfr_zeta_ui@@Base+0x188>
   4d5bc:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   4d5c0:	add	x2, x2, #0x118
   4d5c4:	mov	w1, #0xe1                  	// #225
   4d5c8:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4d5cc:	add	x0, x0, #0xf98
   4d5d0:	bl	cb40 <mpfr_assert_fail@plt>
   4d5d4:	ldr	w2, [sp, #136]
   4d5d8:	mov	w1, w19
   4d5dc:	ldr	x0, [sp, #120]
   4d5e0:	bl	cb30 <mpfr_check_range@plt>
   4d5e4:	mov	w19, w0
   4d5e8:	ldp	x25, x26, [sp, #64]
   4d5ec:	b	4d124 <mpfr_zeta_ui@@Base+0x318>
   4d5f0:	mov	x2, x20
   4d5f4:	mov	x1, x23
   4d5f8:	mov	x0, x23
   4d5fc:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4d600:	subs	x19, x19, #0x1
   4d604:	b.eq	4d62c <mpfr_zeta_ui@@Base+0x820>  // b.none
   4d608:	cmp	x21, x20
   4d60c:	b.ls	4d5f0 <mpfr_zeta_ui@@Base+0x7e4>  // b.plast
   4d610:	mov	x2, x20
   4d614:	mul	x2, x2, x20
   4d618:	subs	x19, x19, #0x1
   4d61c:	b.eq	4d630 <mpfr_zeta_ui@@Base+0x824>  // b.none
   4d620:	cmp	x21, x2
   4d624:	b.hi	4d614 <mpfr_zeta_ui@@Base+0x808>  // b.pmore
   4d628:	b	4d5f4 <mpfr_zeta_ui@@Base+0x7e8>
   4d62c:	mov	x2, x20
   4d630:	mov	x1, x23
   4d634:	mov	x0, x23
   4d638:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4d63c:	b	4d220 <mpfr_zeta_ui@@Base+0x414>
   4d640:	mov	x2, x20
   4d644:	b	4d328 <mpfr_zeta_ui@@Base+0x51c>
   4d648:	mov	x1, x27
   4d64c:	mov	x0, x23
   4d650:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4d654:	b	4d220 <mpfr_zeta_ui@@Base+0x414>

000000000004d658 <mpfr_jn@@Base>:
   4d658:	sub	sp, sp, #0x320
   4d65c:	stp	x29, x30, [sp]
   4d660:	mov	x29, sp
   4d664:	stp	x19, x20, [sp, #16]
   4d668:	stp	x27, x28, [sp, #80]
   4d66c:	str	x0, [sp, #112]
   4d670:	str	x1, [sp, #128]
   4d674:	str	x2, [sp, #120]
   4d678:	str	w3, [sp, #156]
   4d67c:	tbnz	x1, #63, 4d93c <mpfr_jn@@Base+0x2e4>
   4d680:	ldr	x28, [sp, #128]
   4d684:	ldr	x0, [sp, #120]
   4d688:	ldr	x1, [x0, #16]
   4d68c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d690:	cmp	x1, x0
   4d694:	b.le	4d9c0 <mpfr_jn@@Base+0x368>
   4d698:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d69c:	ldr	x2, [x0, #2576]
   4d6a0:	add	x0, x0, #0xa10
   4d6a4:	blr	x2
   4d6a8:	mrs	x2, tpidr_el0
   4d6ac:	ldr	w0, [x2, x0]
   4d6b0:	str	w0, [sp, #208]
   4d6b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d6b8:	ldr	x3, [x0, #2512]
   4d6bc:	add	x0, x0, #0x9d0
   4d6c0:	blr	x3
   4d6c4:	add	x3, x2, x0
   4d6c8:	ldr	x0, [x2, x0]
   4d6cc:	str	x0, [sp, #176]
   4d6d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d6d4:	ldr	x4, [x0, #2544]
   4d6d8:	add	x0, x0, #0x9f0
   4d6dc:	blr	x4
   4d6e0:	ldr	x4, [x2, x0]
   4d6e4:	str	x4, [sp, #192]
   4d6e8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4d6ec:	str	x4, [x3]
   4d6f0:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4d6f4:	str	x3, [x2, x0]
   4d6f8:	ldr	x0, [sp, #128]
   4d6fc:	cbnz	x0, 4dad8 <mpfr_jn@@Base+0x480>
   4d700:	neg	x1, x1, lsl #1
   4d704:	cmp	x1, #0x0
   4d708:	b.le	4d724 <mpfr_jn@@Base+0xcc>
   4d70c:	add	x2, x1, #0x2
   4d710:	ldr	x0, [sp, #112]
   4d714:	ldr	x0, [x0]
   4d718:	add	x0, x0, #0x1
   4d71c:	cmp	x0, x2
   4d720:	b.cc	4dab4 <mpfr_jn@@Base+0x45c>  // b.lo, b.ul, b.last
   4d724:	stp	x21, x22, [sp, #32]
   4d728:	stp	x23, x24, [sp, #48]
   4d72c:	stp	x25, x26, [sp, #64]
   4d730:	mov	x28, #0x0                   	// #0
   4d734:	ldr	x0, [sp, #112]
   4d738:	ldr	x0, [x0]
   4d73c:	add	x0, x0, x0, lsr #63
   4d740:	asr	x1, x0, #1
   4d744:	ldr	x2, [sp, #120]
   4d748:	ldr	x0, [x2]
   4d74c:	str	x0, [sp, #672]
   4d750:	mov	w0, #0x1                   	// #1
   4d754:	str	w0, [sp, #680]
   4d758:	ldr	x0, [x2, #16]
   4d75c:	str	x0, [sp, #688]
   4d760:	ldr	x0, [x2, #24]
   4d764:	str	x0, [sp, #696]
   4d768:	mov	x2, #0x0                   	// #0
   4d76c:	add	x1, x1, #0x3
   4d770:	add	x0, sp, #0x2a0
   4d774:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4d778:	cmp	w0, #0x0
   4d77c:	b.gt	4dc2c <mpfr_jn@@Base+0x5d4>
   4d780:	str	xzr, [sp, #528]
   4d784:	add	x0, sp, #0x210
   4d788:	add	x1, sp, #0x220
   4d78c:	str	x1, [sp, #536]
   4d790:	mov	x2, #0x20                  	// #32
   4d794:	str	x2, [sp, #768]
   4d798:	str	x1, [sp, #792]
   4d79c:	mov	w1, #0x1                   	// #1
   4d7a0:	str	w1, [sp, #776]
   4d7a4:	str	x2, [sp, #736]
   4d7a8:	add	x3, sp, #0x228
   4d7ac:	str	x3, [sp, #760]
   4d7b0:	str	w1, [sp, #744]
   4d7b4:	str	x2, [sp, #704]
   4d7b8:	add	x0, x0, x2
   4d7bc:	str	x0, [sp, #728]
   4d7c0:	str	w1, [sp, #712]
   4d7c4:	cbz	x28, 4ebf0 <mpfr_jn@@Base+0x1598>
   4d7c8:	adrp	x1, 67000 <mpfr_bases@@Base+0x1900>
   4d7cc:	add	x1, x1, #0x8
   4d7d0:	add	x0, sp, #0x300
   4d7d4:	bl	c340 <mpfr_set_str_binary@plt>
   4d7d8:	ldr	x2, [sp, #120]
   4d7dc:	ldr	w0, [x2, #8]
   4d7e0:	cmp	w0, #0x0
   4d7e4:	b.le	4e47c <mpfr_jn@@Base+0xe24>
   4d7e8:	add	x0, sp, #0x300
   4d7ec:	mov	w3, #0x2                   	// #2
   4d7f0:	mov	x1, x0
   4d7f4:	bl	bd50 <mpfr_mul@plt>
   4d7f8:	add	x0, sp, #0x300
   4d7fc:	mov	w3, #0x2                   	// #2
   4d800:	mov	x2, x28
   4d804:	mov	x1, x0
   4d808:	bl	cc60 <mpfr_div_ui@plt>
   4d80c:	ldr	x0, [sp, #784]
   4d810:	tbnz	x0, #63, 4e4a8 <mpfr_jn@@Base+0xe50>
   4d814:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4d818:	cmp	x28, x1
   4d81c:	b.hi	4d830 <mpfr_jn@@Base+0x1d8>  // b.pmore
   4d820:	ldr	x1, [sp, #176]
   4d824:	sdiv	x1, x1, x28
   4d828:	cmp	x0, x1
   4d82c:	b.lt	4e4b8 <mpfr_jn@@Base+0xe60>  // b.tstop
   4d830:	add	x19, sp, #0x1d0
   4d834:	mov	x1, #0x20                  	// #32
   4d838:	mov	x0, x19
   4d83c:	bl	ca80 <mpfr_init2@plt>
   4d840:	mov	x1, #0x20                  	// #32
   4d844:	add	x0, sp, #0x1f0
   4d848:	bl	ca80 <mpfr_init2@plt>
   4d84c:	mov	w3, #0x0                   	// #0
   4d850:	mov	x2, x28
   4d854:	ldr	x1, [sp, #120]
   4d858:	mov	x0, x19
   4d85c:	bl	cc60 <mpfr_div_ui@plt>
   4d860:	mov	w2, #0x0                   	// #0
   4d864:	mov	x1, x19
   4d868:	mov	x0, x19
   4d86c:	bl	c400 <mpfr_sqr@plt>
   4d870:	mov	w3, #0x0                   	// #0
   4d874:	mov	x2, #0x1                   	// #1
   4d878:	mov	x1, x19
   4d87c:	mov	x0, x19
   4d880:	bl	c260 <mpfr_add_ui@plt>
   4d884:	mov	w2, #0x0                   	// #0
   4d888:	mov	x1, x19
   4d88c:	mov	x0, x19
   4d890:	bl	c930 <mpfr_sqrt@plt>
   4d894:	mov	w3, #0x0                   	// #0
   4d898:	mov	x2, #0x1                   	// #1
   4d89c:	mov	x1, x19
   4d8a0:	mov	x0, x19
   4d8a4:	bl	c530 <mpfr_sub_ui@plt>
   4d8a8:	mov	w3, #0x0                   	// #0
   4d8ac:	mov	x2, x28
   4d8b0:	mov	x1, x19
   4d8b4:	mov	x0, x19
   4d8b8:	bl	ba50 <mpfr_mul_ui@plt>
   4d8bc:	add	x20, sp, #0x1f0
   4d8c0:	adrp	x1, 66000 <mpfr_bases@@Base+0x900>
   4d8c4:	add	x1, x1, #0x580
   4d8c8:	mov	x0, x20
   4d8cc:	bl	c340 <mpfr_set_str_binary@plt>
   4d8d0:	add	x19, sp, #0x1d0
   4d8d4:	mov	w3, #0x0                   	// #0
   4d8d8:	mov	x2, x20
   4d8dc:	mov	x1, x19
   4d8e0:	mov	x0, x19
   4d8e4:	bl	bd50 <mpfr_mul@plt>
   4d8e8:	mov	w1, #0x0                   	// #0
   4d8ec:	mov	x0, x19
   4d8f0:	bl	be50 <mpfr_fits_ulong_p@plt>
   4d8f4:	cbnz	w0, 4e574 <mpfr_jn@@Base+0xf1c>
   4d8f8:	add	x0, sp, #0x1d0
   4d8fc:	bl	c070 <mpfr_clear@plt>
   4d900:	add	x0, sp, #0x1f0
   4d904:	bl	c070 <mpfr_clear@plt>
   4d908:	mov	x0, #0xffffffffffffffff    	// #-1
   4d90c:	str	x0, [sp, #144]
   4d910:	ldr	x0, [sp, #112]
   4d914:	ldr	x20, [x0]
   4d918:	mov	x19, #0xfffffffffffffe7e    	// #-386
   4d91c:	movk	x19, #0x7fff, lsl #48
   4d920:	cmp	x20, #0x1
   4d924:	b.ne	4e5bc <mpfr_jn@@Base+0xf64>  // b.any
   4d928:	mov	x27, #0xfffffffffffffe81    	// #-383
   4d92c:	movk	x27, #0x7fff, lsl #48
   4d930:	add	x27, x20, x27
   4d934:	ldr	x1, [sp, #528]
   4d938:	b	4e60c <mpfr_jn@@Base+0xfb4>
   4d93c:	neg	x28, x1
   4d940:	ldr	x1, [x2, #16]
   4d944:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d948:	cmp	x1, x0
   4d94c:	b.le	4d9c0 <mpfr_jn@@Base+0x368>
   4d950:	stp	x21, x22, [sp, #32]
   4d954:	stp	x23, x24, [sp, #48]
   4d958:	stp	x25, x26, [sp, #64]
   4d95c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d960:	ldr	x1, [x0, #2576]
   4d964:	add	x0, x0, #0xa10
   4d968:	blr	x1
   4d96c:	mrs	x1, tpidr_el0
   4d970:	ldr	w0, [x1, x0]
   4d974:	str	w0, [sp, #208]
   4d978:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d97c:	ldr	x2, [x0, #2512]
   4d980:	add	x0, x0, #0x9d0
   4d984:	blr	x2
   4d988:	add	x2, x1, x0
   4d98c:	ldr	x0, [x1, x0]
   4d990:	str	x0, [sp, #176]
   4d994:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4d998:	ldr	x3, [x0, #2544]
   4d99c:	add	x0, x0, #0x9f0
   4d9a0:	blr	x3
   4d9a4:	ldr	x3, [x1, x0]
   4d9a8:	str	x3, [sp, #192]
   4d9ac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4d9b0:	str	x3, [x2]
   4d9b4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4d9b8:	str	x2, [x1, x0]
   4d9bc:	b	4d734 <mpfr_jn@@Base+0xdc>
   4d9c0:	mov	x0, #0x2                   	// #2
   4d9c4:	movk	x0, #0x8000, lsl #48
   4d9c8:	cmp	x1, x0
   4d9cc:	b.eq	4da14 <mpfr_jn@@Base+0x3bc>  // b.none
   4d9d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d9d4:	cmp	x1, x0
   4d9d8:	b.eq	4da48 <mpfr_jn@@Base+0x3f0>  // b.none
   4d9dc:	ldr	x0, [sp, #128]
   4d9e0:	cbz	x0, 4da64 <mpfr_jn@@Base+0x40c>
   4d9e4:	tbz	w28, #0, 4da98 <mpfr_jn@@Base+0x440>
   4d9e8:	ldr	x0, [sp, #128]
   4d9ec:	cmp	x0, #0x0
   4d9f0:	b.le	4da80 <mpfr_jn@@Base+0x428>
   4d9f4:	ldr	x0, [sp, #120]
   4d9f8:	ldr	w3, [x0, #8]
   4d9fc:	ldr	w2, [sp, #156]
   4da00:	mov	x1, x0
   4da04:	ldr	x0, [sp, #112]
   4da08:	bl	c6a0 <mpfr_set4@plt>
   4da0c:	mov	w19, w0
   4da10:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4da14:	ldr	x1, [sp, #112]
   4da18:	str	x0, [x1, #16]
   4da1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4da20:	ldr	x1, [x0, #2576]
   4da24:	add	x0, x0, #0xa10
   4da28:	blr	x1
   4da2c:	mrs	x1, tpidr_el0
   4da30:	add	x0, x1, x0
   4da34:	ldr	w1, [x0]
   4da38:	orr	w1, w1, #0x4
   4da3c:	str	w1, [x0]
   4da40:	mov	w19, #0x0                   	// #0
   4da44:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4da48:	mov	w0, #0x1                   	// #1
   4da4c:	ldr	x1, [sp, #112]
   4da50:	str	w0, [x1, #8]
   4da54:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4da58:	str	x0, [x1, #16]
   4da5c:	mov	w19, #0x0                   	// #0
   4da60:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4da64:	ldr	w3, [sp, #156]
   4da68:	mov	x2, #0x0                   	// #0
   4da6c:	mov	x1, #0x1                   	// #1
   4da70:	ldr	x0, [sp, #112]
   4da74:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4da78:	mov	w19, w0
   4da7c:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4da80:	ldr	w2, [sp, #156]
   4da84:	ldr	x1, [sp, #120]
   4da88:	ldr	x0, [sp, #112]
   4da8c:	bl	bd70 <mpfr_neg@plt>
   4da90:	mov	w19, w0
   4da94:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4da98:	mov	w0, #0x1                   	// #1
   4da9c:	ldr	x1, [sp, #112]
   4daa0:	str	w0, [x1, #8]
   4daa4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4daa8:	str	x0, [x1, #16]
   4daac:	mov	w19, #0x0                   	// #0
   4dab0:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4dab4:	ldr	w4, [sp, #156]
   4dab8:	mov	w3, #0x0                   	// #0
   4dabc:	adrp	x1, 80000 <__gmpfr_l2b@@Base+0x200>
   4dac0:	ldr	x1, [x1, #3928]
   4dac4:	ldr	x0, [sp, #112]
   4dac8:	bl	c540 <mpfr_round_near_x@plt>
   4dacc:	mov	w19, w0
   4dad0:	cbz	w0, 4d724 <mpfr_jn@@Base+0xcc>
   4dad4:	b	4ec34 <mpfr_jn@@Base+0x15dc>
   4dad8:	stp	x21, x22, [sp, #32]
   4dadc:	ldr	x0, [sp, #128]
   4dae0:	cmp	x0, #0x1
   4dae4:	b.ne	4dc14 <mpfr_jn@@Base+0x5bc>  // b.any
   4dae8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4daec:	ldr	x1, [x0, #2576]
   4daf0:	add	x0, x0, #0xa10
   4daf4:	blr	x1
   4daf8:	mrs	x1, tpidr_el0
   4dafc:	str	wzr, [x1, x0]
   4db00:	ldr	x0, [sp, #120]
   4db04:	ldr	x0, [x0, #16]
   4db08:	neg	x0, x0, lsl #1
   4db0c:	cmp	x0, #0x0
   4db10:	b.le	4dc20 <mpfr_jn@@Base+0x5c8>
   4db14:	add	x2, x0, #0x3
   4db18:	ldr	x0, [sp, #112]
   4db1c:	ldr	x0, [x0]
   4db20:	add	x0, x0, #0x1
   4db24:	cmp	x0, x2
   4db28:	b.cc	4db38 <mpfr_jn@@Base+0x4e0>  // b.lo, b.ul, b.last
   4db2c:	stp	x23, x24, [sp, #48]
   4db30:	stp	x25, x26, [sp, #64]
   4db34:	b	4d734 <mpfr_jn@@Base+0xdc>
   4db38:	ldr	w4, [sp, #156]
   4db3c:	mov	w3, #0x0                   	// #0
   4db40:	ldr	x1, [sp, #120]
   4db44:	ldr	x0, [sp, #112]
   4db48:	bl	c540 <mpfr_round_near_x@plt>
   4db4c:	mov	w20, w0
   4db50:	cbnz	w0, 4db60 <mpfr_jn@@Base+0x508>
   4db54:	stp	x23, x24, [sp, #48]
   4db58:	stp	x25, x26, [sp, #64]
   4db5c:	b	4d734 <mpfr_jn@@Base+0xdc>
   4db60:	ldr	w21, [sp, #156]
   4db64:	mov	w3, w21
   4db68:	mov	x2, #0x1                   	// #1
   4db6c:	ldr	x0, [sp, #112]
   4db70:	mov	x1, x0
   4db74:	bl	c8f0 <mpfr_div_2ui@plt>
   4db78:	mov	w19, w0
   4db7c:	cbz	w21, 4dbb0 <mpfr_jn@@Base+0x558>
   4db80:	cmp	w19, #0x0
   4db84:	csel	w19, w19, w20, ne  // ne = any
   4db88:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4db8c:	ldr	x1, [x0, #2576]
   4db90:	add	x0, x0, #0xa10
   4db94:	blr	x1
   4db98:	mrs	x1, tpidr_el0
   4db9c:	ldr	w0, [x1, x0]
   4dba0:	ldr	w1, [sp, #208]
   4dba4:	orr	w0, w1, w0
   4dba8:	str	w0, [sp, #208]
   4dbac:	b	4e9f0 <mpfr_jn@@Base+0x1398>
   4dbb0:	ldr	x0, [sp, #112]
   4dbb4:	ldr	x1, [x0, #16]
   4dbb8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4dbbc:	cmp	x1, x0
   4dbc0:	b.ne	4db80 <mpfr_jn@@Base+0x528>  // b.any
   4dbc4:	cbz	w19, 4dbf4 <mpfr_jn@@Base+0x59c>
   4dbc8:	mov	w0, #0x1                   	// #1
   4dbcc:	cmp	w20, #0x0
   4dbd0:	cneg	w0, w0, lt  // lt = tstop
   4dbd4:	ldr	x1, [sp, #120]
   4dbd8:	ldr	w1, [x1, #8]
   4dbdc:	cmp	w1, w0
   4dbe0:	b.eq	4db88 <mpfr_jn@@Base+0x530>  // b.none
   4dbe4:	ldr	x0, [sp, #112]
   4dbe8:	bl	c670 <mpfr_nexttoinf@plt>
   4dbec:	neg	w19, w19
   4dbf0:	b	4db88 <mpfr_jn@@Base+0x530>
   4dbf4:	stp	x23, x24, [sp, #48]
   4dbf8:	stp	x25, x26, [sp, #64]
   4dbfc:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4dc00:	add	x2, x2, #0xfc0
   4dc04:	mov	w1, #0xa6                  	// #166
   4dc08:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4dc0c:	add	x0, x0, #0xfd0
   4dc10:	bl	cb40 <mpfr_assert_fail@plt>
   4dc14:	stp	x23, x24, [sp, #48]
   4dc18:	stp	x25, x26, [sp, #64]
   4dc1c:	b	4d734 <mpfr_jn@@Base+0xdc>
   4dc20:	stp	x23, x24, [sp, #48]
   4dc24:	stp	x25, x26, [sp, #64]
   4dc28:	b	4d734 <mpfr_jn@@Base+0xdc>
   4dc2c:	add	x0, sp, #0x110
   4dc30:	bl	bbd0 <mpfr_init@plt>
   4dc34:	ldr	x0, [sp, #112]
   4dc38:	ldr	x19, [x0]
   4dc3c:	cmp	x19, #0x1
   4dc40:	b.eq	4de50 <mpfr_jn@@Base+0x7f8>  // b.none
   4dc44:	b.le	4de34 <mpfr_jn@@Base+0x7dc>
   4dc48:	ldr	x0, [sp, #112]
   4dc4c:	ldr	x0, [x0]
   4dc50:	sub	x0, x0, #0x1
   4dc54:	clz	x1, x0
   4dc58:	mov	w0, #0x40                  	// #64
   4dc5c:	sub	w0, w0, w1
   4dc60:	sxtw	x0, w0
   4dc64:	add	x19, x19, x0
   4dc68:	add	x0, x19, #0x4
   4dc6c:	str	x0, [sp, #96]
   4dc70:	ldr	x1, [sp, #128]
   4dc74:	lsl	x0, x1, #1
   4dc78:	add	x0, x0, #0x1
   4dc7c:	str	x0, [sp, #216]
   4dc80:	lsl	x0, x1, #2
   4dc84:	str	x0, [sp, #160]
   4dc88:	mov	x0, #0x40                  	// #64
   4dc8c:	str	x0, [sp, #232]
   4dc90:	str	wzr, [sp, #212]
   4dc94:	add	x0, sp, #0x110
   4dc98:	str	x0, [sp, #200]
   4dc9c:	add	x0, sp, #0xf0
   4dca0:	str	x0, [sp, #184]
   4dca4:	add	x0, sp, #0x130
   4dca8:	str	x0, [sp, #168]
   4dcac:	add	x19, sp, #0x170
   4dcb0:	add	x0, sp, #0x190
   4dcb4:	str	x0, [sp, #144]
   4dcb8:	add	x25, sp, #0x1b0
   4dcbc:	add	x26, sp, #0x1d0
   4dcc0:	add	x27, sp, #0x1f0
   4dcc4:	str	x28, [sp, #224]
   4dcc8:	ldr	x24, [sp, #120]
   4dccc:	ldr	x20, [sp, #96]
   4dcd0:	mov	x1, x20
   4dcd4:	ldr	x22, [sp, #200]
   4dcd8:	mov	x0, x22
   4dcdc:	bl	bed0 <mpfr_set_prec@plt>
   4dce0:	mov	x1, x20
   4dce4:	ldr	x21, [sp, #184]
   4dce8:	mov	x0, x21
   4dcec:	bl	ca80 <mpfr_init2@plt>
   4dcf0:	mov	x1, x20
   4dcf4:	ldr	x0, [sp, #168]
   4dcf8:	bl	ca80 <mpfr_init2@plt>
   4dcfc:	mov	x1, x20
   4dd00:	add	x0, sp, #0x150
   4dd04:	bl	ca80 <mpfr_init2@plt>
   4dd08:	mov	x1, x20
   4dd0c:	mov	x0, x19
   4dd10:	bl	ca80 <mpfr_init2@plt>
   4dd14:	mov	x1, x20
   4dd18:	ldr	x0, [sp, #144]
   4dd1c:	bl	ca80 <mpfr_init2@plt>
   4dd20:	mov	x1, #0x1f                  	// #31
   4dd24:	mov	x0, x25
   4dd28:	bl	ca80 <mpfr_init2@plt>
   4dd2c:	mov	x1, #0x1f                  	// #31
   4dd30:	mov	x0, x26
   4dd34:	bl	ca80 <mpfr_init2@plt>
   4dd38:	mov	x1, #0x1f                  	// #31
   4dd3c:	mov	x0, x27
   4dd40:	bl	ca80 <mpfr_init2@plt>
   4dd44:	mov	w3, #0x0                   	// #0
   4dd48:	mov	x2, x24
   4dd4c:	mov	x1, x22
   4dd50:	mov	x0, x21
   4dd54:	bl	cc40 <mpfr_sin_cos@plt>
   4dd58:	ldr	w0, [x24, #8]
   4dd5c:	tbnz	w0, #31, 4de58 <mpfr_jn@@Base+0x800>
   4dd60:	mov	w3, #0x0                   	// #0
   4dd64:	ldr	x21, [sp, #200]
   4dd68:	mov	x2, x21
   4dd6c:	ldr	x20, [sp, #184]
   4dd70:	mov	x1, x20
   4dd74:	mov	x0, x19
   4dd78:	bl	c1a0 <mpfr_add@plt>
   4dd7c:	mov	w3, #0x0                   	// #0
   4dd80:	mov	x2, x21
   4dd84:	mov	x1, x20
   4dd88:	mov	x0, x21
   4dd8c:	bl	bb70 <mpfr_sub@plt>
   4dd90:	mov	x1, x19
   4dd94:	mov	x0, x20
   4dd98:	bl	c4a0 <mpfr_swap@plt>
   4dd9c:	ldr	w0, [x24, #8]
   4dda0:	mov	x1, #0xffffffffffffffff    	// #-1
   4dda4:	cmp	w0, #0x0
   4dda8:	mov	w3, #0x0                   	// #0
   4ddac:	mov	x2, x24
   4ddb0:	cneg	x1, x1, gt
   4ddb4:	ldr	x20, [sp, #144]
   4ddb8:	mov	x0, x20
   4ddbc:	bl	c8b0 <mpfr_si_div@plt>
   4ddc0:	mov	w3, #0x0                   	// #0
   4ddc4:	mov	x2, #0x3                   	// #3
   4ddc8:	mov	x1, x20
   4ddcc:	mov	x0, x20
   4ddd0:	bl	c8f0 <mpfr_div_2ui@plt>
   4ddd4:	mov	w3, #0x0                   	// #0
   4ddd8:	mov	x2, #0x0                   	// #0
   4dddc:	mov	x1, #0x1                   	// #1
   4dde0:	ldr	x0, [sp, #168]
   4dde4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4dde8:	mov	w21, #0x1                   	// #1
   4ddec:	str	w21, [sp, #344]
   4ddf0:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   4ddf4:	str	x20, [sp, #352]
   4ddf8:	mov	w3, #0x0                   	// #0
   4ddfc:	mov	x2, #0x0                   	// #0
   4de00:	mov	x1, #0x1                   	// #1
   4de04:	mov	x0, x19
   4de08:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4de0c:	str	w21, [sp, #440]
   4de10:	str	x20, [sp, #448]
   4de14:	str	w21, [sp, #472]
   4de18:	str	x20, [sp, #480]
   4de1c:	ldr	x23, [sp, #216]
   4de20:	mov	x28, #0x6                   	// #6
   4de24:	mov	x21, #0x1                   	// #1
   4de28:	mov	w22, #0x0                   	// #0
   4de2c:	mov	w20, #0x2                   	// #2
   4de30:	b	4dee0 <mpfr_jn@@Base+0x888>
   4de34:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4de38:	add	x2, x2, #0xfd8
   4de3c:	mov	w1, #0x36                  	// #54
   4de40:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4de44:	add	x0, x0, #0xff8
   4de48:	bl	cb40 <mpfr_assert_fail@plt>
   4de4c:	b	4dc48 <mpfr_jn@@Base+0x5f0>
   4de50:	mov	x0, #0x0                   	// #0
   4de54:	b	4dc64 <mpfr_jn@@Base+0x60c>
   4de58:	mov	w2, #0x0                   	// #0
   4de5c:	ldr	x0, [sp, #184]
   4de60:	mov	x1, x0
   4de64:	bl	bd70 <mpfr_neg@plt>
   4de68:	b	4dd60 <mpfr_jn@@Base+0x708>
   4de6c:	mov	w3, w20
   4de70:	ldr	x2, [sp, #96]
   4de74:	mov	x1, x26
   4de78:	mov	x0, x26
   4de7c:	bl	c8f0 <mpfr_div_2ui@plt>
   4de80:	ldr	w0, [sp, #376]
   4de84:	cmp	w0, #0x0
   4de88:	b.le	4e064 <mpfr_jn@@Base+0xa0c>
   4de8c:	mov	w3, w20
   4de90:	mov	x2, x19
   4de94:	mov	x1, x26
   4de98:	mov	x0, x26
   4de9c:	bl	c1a0 <mpfr_add@plt>
   4dea0:	mov	w3, w20
   4dea4:	ldr	x2, [sp, #136]
   4dea8:	mov	x1, x26
   4deac:	mov	x0, x26
   4deb0:	bl	c2c0 <mpfr_mul_2ui@plt>
   4deb4:	add	w22, w22, #0x1
   4deb8:	mov	w3, w20
   4debc:	mov	x2, x25
   4dec0:	mov	x1, x26
   4dec4:	mov	x0, x26
   4dec8:	bl	c1a0 <mpfr_add@plt>
   4decc:	cmp	w22, #0x3
   4ded0:	b.gt	4e0fc <mpfr_jn@@Base+0xaa4>
   4ded4:	add	x23, x23, #0x2
   4ded8:	add	x21, x21, #0x1
   4dedc:	add	x28, x28, #0x6
   4dee0:	str	x21, [sp, #104]
   4dee4:	mov	w3, #0x0                   	// #0
   4dee8:	mov	x2, x23
   4deec:	mov	x1, x19
   4def0:	mov	x0, x19
   4def4:	bl	c960 <mpfr_mul_si@plt>
   4def8:	mov	w3, #0x0                   	// #0
   4defc:	ldr	x0, [sp, #160]
   4df00:	sub	x2, x0, x23
   4df04:	mov	x1, x19
   4df08:	mov	x0, x19
   4df0c:	bl	c960 <mpfr_mul_si@plt>
   4df10:	mov	w3, #0x0                   	// #0
   4df14:	mov	x2, x21
   4df18:	mov	x1, x19
   4df1c:	mov	x0, x19
   4df20:	bl	cc60 <mpfr_div_ui@plt>
   4df24:	mov	w3, #0x0                   	// #0
   4df28:	ldr	x2, [sp, #144]
   4df2c:	mov	x1, x19
   4df30:	mov	x0, x19
   4df34:	bl	bd50 <mpfr_mul@plt>
   4df38:	ldr	w0, [sp, #376]
   4df3c:	cmp	w0, #0x0
   4df40:	cset	w3, le
   4df44:	add	w3, w3, #0x2
   4df48:	mov	x2, x28
   4df4c:	mov	x1, x19
   4df50:	mov	x0, x25
   4df54:	bl	ba50 <mpfr_mul_ui@plt>
   4df58:	mov	w3, #0x1                   	// #1
   4df5c:	mov	w2, #0x0                   	// #0
   4df60:	mov	x1, x25
   4df64:	mov	x0, x25
   4df68:	bl	c6a0 <mpfr_set4@plt>
   4df6c:	mov	w3, #0x1                   	// #1
   4df70:	mov	w2, w20
   4df74:	mov	x1, x19
   4df78:	mov	x0, x27
   4df7c:	bl	c6a0 <mpfr_set4@plt>
   4df80:	ldr	x0, [sp, #96]
   4df84:	str	x0, [sp, #136]
   4df88:	mov	w3, w20
   4df8c:	mov	x2, x0
   4df90:	mov	x1, x27
   4df94:	mov	x0, x27
   4df98:	bl	c2c0 <mpfr_mul_2ui@plt>
   4df9c:	mov	w3, w20
   4dfa0:	mov	x2, x25
   4dfa4:	mov	x1, x27
   4dfa8:	mov	x0, x27
   4dfac:	bl	c1a0 <mpfr_add@plt>
   4dfb0:	cmp	w22, #0x1
   4dfb4:	b.gt	4de6c <mpfr_jn@@Base+0x814>
   4dfb8:	ldr	x0, [sp, #104]
   4dfbc:	tbz	w0, #0, 4e094 <mpfr_jn@@Base+0xa3c>
   4dfc0:	tbnz	w0, #1, 4e07c <mpfr_jn@@Base+0xa24>
   4dfc4:	add	x0, sp, #0x150
   4dfc8:	mov	w3, #0x0                   	// #0
   4dfcc:	mov	x2, x19
   4dfd0:	mov	x1, x0
   4dfd4:	bl	c1a0 <mpfr_add@plt>
   4dfd8:	ldr	x1, [sp, #512]
   4dfdc:	ldr	x0, [sp, #352]
   4dfe0:	add	w22, w22, #0x1
   4dfe4:	cmp	x1, x0
   4dfe8:	b.le	4e0c4 <mpfr_jn@@Base+0xa6c>
   4dfec:	mov	w3, w20
   4dff0:	mov	x2, x25
   4dff4:	mov	x1, x26
   4dff8:	mov	x0, x26
   4dffc:	bl	c1a0 <mpfr_add@plt>
   4e000:	mov	w22, #0x0                   	// #0
   4e004:	ldr	w0, [x24, #8]
   4e008:	cmp	w0, #0x0
   4e00c:	b.le	4e02c <mpfr_jn@@Base+0x9d4>
   4e010:	add	x1, x21, #0x1
   4e014:	add	x1, x1, x1, lsr #63
   4e018:	mov	x2, #0x0                   	// #0
   4e01c:	asr	x1, x1, #1
   4e020:	mov	x0, x24
   4e024:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4e028:	tbnz	w0, #31, 4ec98 <mpfr_jn@@Base+0x1640>
   4e02c:	ldr	w0, [x24, #8]
   4e030:	tbz	w0, #31, 4ded4 <mpfr_jn@@Base+0x87c>
   4e034:	add	x1, x21, #0x1
   4e038:	add	x1, x1, x1, lsr #63
   4e03c:	mov	x2, #0x0                   	// #0
   4e040:	neg	x1, x1, asr #1
   4e044:	mov	x0, x24
   4e048:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4e04c:	cmp	w0, #0x0
   4e050:	ldr	w1, [sp, #212]
   4e054:	csinc	w1, w1, wzr, le
   4e058:	str	w1, [sp, #212]
   4e05c:	csel	w22, w22, w20, le
   4e060:	b	4ded4 <mpfr_jn@@Base+0x87c>
   4e064:	mov	w3, w20
   4e068:	mov	x2, x19
   4e06c:	mov	x1, x26
   4e070:	mov	x0, x26
   4e074:	bl	bb70 <mpfr_sub@plt>
   4e078:	b	4dea0 <mpfr_jn@@Base+0x848>
   4e07c:	add	x0, sp, #0x150
   4e080:	mov	w3, #0x0                   	// #0
   4e084:	mov	x2, x19
   4e088:	mov	x1, x0
   4e08c:	bl	bb70 <mpfr_sub@plt>
   4e090:	b	4dfd8 <mpfr_jn@@Base+0x980>
   4e094:	ldr	x0, [sp, #104]
   4e098:	tbnz	w0, #1, 4e0e4 <mpfr_jn@@Base+0xa8c>
   4e09c:	mov	w3, #0x0                   	// #0
   4e0a0:	mov	x2, x19
   4e0a4:	ldr	x0, [sp, #168]
   4e0a8:	mov	x1, x0
   4e0ac:	bl	c1a0 <mpfr_add@plt>
   4e0b0:	ldr	x1, [sp, #512]
   4e0b4:	ldr	x0, [sp, #320]
   4e0b8:	add	w22, w22, #0x1
   4e0bc:	cmp	x1, x0
   4e0c0:	b.gt	4dfec <mpfr_jn@@Base+0x994>
   4e0c4:	mov	w3, w20
   4e0c8:	mov	x2, x25
   4e0cc:	mov	x1, x26
   4e0d0:	mov	x0, x26
   4e0d4:	bl	c1a0 <mpfr_add@plt>
   4e0d8:	cmp	w22, #0x1
   4e0dc:	b.gt	4ded4 <mpfr_jn@@Base+0x87c>
   4e0e0:	b	4e004 <mpfr_jn@@Base+0x9ac>
   4e0e4:	mov	w3, #0x0                   	// #0
   4e0e8:	mov	x2, x19
   4e0ec:	ldr	x0, [sp, #168]
   4e0f0:	mov	x1, x0
   4e0f4:	bl	bb70 <mpfr_sub@plt>
   4e0f8:	b	4e0b0 <mpfr_jn@@Base+0xa58>
   4e0fc:	ldr	x0, [sp, #128]
   4e100:	and	x21, x0, #0x1
   4e104:	tbnz	w0, #0, 4e38c <mpfr_jn@@Base+0xd34>
   4e108:	mov	w3, #0x0                   	// #0
   4e10c:	add	x2, sp, #0x150
   4e110:	ldr	x23, [sp, #200]
   4e114:	mov	x1, x23
   4e118:	mov	x0, x23
   4e11c:	bl	bd50 <mpfr_mul@plt>
   4e120:	mov	w3, #0x0                   	// #0
   4e124:	ldr	x2, [sp, #168]
   4e128:	ldr	x22, [sp, #184]
   4e12c:	mov	x1, x22
   4e130:	mov	x0, x22
   4e134:	bl	bd50 <mpfr_mul@plt>
   4e138:	ldr	x0, [sp, #288]
   4e13c:	ldr	x20, [sp, #256]
   4e140:	cmp	x20, x0
   4e144:	csel	x20, x20, x0, ge  // ge = tcont
   4e148:	mov	w3, #0x0                   	// #0
   4e14c:	mov	x2, x23
   4e150:	mov	x1, x22
   4e154:	mov	x0, x22
   4e158:	bl	bb70 <mpfr_sub@plt>
   4e15c:	ldr	x0, [sp, #128]
   4e160:	tbnz	w0, #1, 4e3e4 <mpfr_jn@@Base+0xd8c>
   4e164:	ldr	x0, [sp, #256]
   4e168:	cmp	x0, x20
   4e16c:	csel	x20, x0, x20, ge  // ge = tcont
   4e170:	ldr	x2, [sp, #320]
   4e174:	ldr	x0, [sp, #352]
   4e178:	add	x3, x2, #0x2
   4e17c:	add	x1, x0, #0x2
   4e180:	cmp	x2, x0
   4e184:	csel	x1, x1, x3, lt  // lt = tstop
   4e188:	ldr	x2, [sp, #480]
   4e18c:	add	x3, x2, #0x2
   4e190:	add	x0, x20, #0x2
   4e194:	cmp	x20, x2
   4e198:	csel	x20, x0, x3, gt
   4e19c:	add	x0, x1, #0x1
   4e1a0:	cmp	x1, x20
   4e1a4:	csinc	x20, x0, x20, gt
   4e1a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e1ac:	ldr	x1, [x0, #2624]
   4e1b0:	add	x0, x0, #0xa40
   4e1b4:	blr	x1
   4e1b8:	mov	w2, #0x0                   	// #0
   4e1bc:	mrs	x1, tpidr_el0
   4e1c0:	add	x1, x1, x0
   4e1c4:	ldr	x22, [sp, #200]
   4e1c8:	mov	x0, x22
   4e1cc:	bl	c380 <mpfr_cache@plt>
   4e1d0:	mov	w3, #0x0                   	// #0
   4e1d4:	mov	x2, x24
   4e1d8:	mov	x1, x22
   4e1dc:	mov	x0, x22
   4e1e0:	bl	bd50 <mpfr_mul@plt>
   4e1e4:	ldr	w0, [x24, #8]
   4e1e8:	mov	x1, #0xffffffffffffffff    	// #-1
   4e1ec:	cmp	w0, #0x0
   4e1f0:	mov	w3, #0x0                   	// #0
   4e1f4:	mov	x2, x22
   4e1f8:	cneg	x1, x1, gt
   4e1fc:	mov	x0, x22
   4e200:	bl	c8b0 <mpfr_si_div@plt>
   4e204:	mov	w2, #0x0                   	// #0
   4e208:	mov	x1, x22
   4e20c:	mov	x0, x22
   4e210:	bl	c930 <mpfr_sqrt@plt>
   4e214:	ldr	w1, [sp, #280]
   4e218:	ldr	w0, [sp, #248]
   4e21c:	cmp	w1, w0
   4e220:	cset	w3, ne  // ne = any
   4e224:	add	w3, w3, #0x2
   4e228:	ldr	x23, [sp, #184]
   4e22c:	mov	x2, x23
   4e230:	mov	x1, x22
   4e234:	mov	x0, x25
   4e238:	bl	bd50 <mpfr_mul@plt>
   4e23c:	mov	w3, #0x1                   	// #1
   4e240:	mov	w2, #0x2                   	// #2
   4e244:	mov	x1, x25
   4e248:	mov	x0, x25
   4e24c:	bl	c6a0 <mpfr_set4@plt>
   4e250:	mov	w3, #0x2                   	// #2
   4e254:	mov	x2, #0x3                   	// #3
   4e258:	mov	x1, x25
   4e25c:	mov	x0, x25
   4e260:	bl	ba50 <mpfr_mul_ui@plt>
   4e264:	ldr	x0, [sp, #288]
   4e268:	add	x20, x20, x0
   4e26c:	mov	w3, #0x0                   	// #0
   4e270:	mov	x2, x23
   4e274:	mov	x1, x22
   4e278:	mov	x0, x22
   4e27c:	bl	bd50 <mpfr_mul@plt>
   4e280:	ldr	x0, [sp, #448]
   4e284:	ldr	x1, [sp, #288]
   4e288:	add	x2, x1, #0x1
   4e28c:	cmp	x0, x1
   4e290:	csinc	x0, x2, x0, le
   4e294:	add	x1, x20, #0x1
   4e298:	cmp	x20, x0
   4e29c:	csinc	x20, x1, x0, gt
   4e2a0:	mov	x0, x23
   4e2a4:	bl	c070 <mpfr_clear@plt>
   4e2a8:	ldr	x0, [sp, #168]
   4e2ac:	bl	c070 <mpfr_clear@plt>
   4e2b0:	add	x0, sp, #0x150
   4e2b4:	bl	c070 <mpfr_clear@plt>
   4e2b8:	mov	x0, x19
   4e2bc:	bl	c070 <mpfr_clear@plt>
   4e2c0:	ldr	x0, [sp, #144]
   4e2c4:	bl	c070 <mpfr_clear@plt>
   4e2c8:	mov	x0, x25
   4e2cc:	bl	c070 <mpfr_clear@plt>
   4e2d0:	mov	x0, x26
   4e2d4:	bl	c070 <mpfr_clear@plt>
   4e2d8:	mov	x0, x27
   4e2dc:	bl	c070 <mpfr_clear@plt>
   4e2e0:	ldr	x0, [sp, #288]
   4e2e4:	sub	x20, x20, x0
   4e2e8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4e2ec:	cmp	x0, x1
   4e2f0:	b.le	4e3f8 <mpfr_jn@@Base+0xda0>
   4e2f4:	ldr	w0, [sp, #156]
   4e2f8:	cmp	w0, #0x0
   4e2fc:	ldr	x0, [sp, #112]
   4e300:	ldr	x3, [x0]
   4e304:	cinc	x3, x3, eq  // eq = none
   4e308:	ldr	x0, [sp, #272]
   4e30c:	add	x1, x0, #0x3e
   4e310:	subs	x0, x0, #0x1
   4e314:	csel	x1, x1, x0, mi  // mi = first
   4e318:	asr	x1, x1, #6
   4e31c:	ldr	x0, [sp, #96]
   4e320:	sub	x2, x0, x20
   4e324:	add	x1, x1, #0x1
   4e328:	ldr	x0, [sp, #296]
   4e32c:	bl	c370 <mpfr_round_p@plt>
   4e330:	cbz	w0, 4e3f8 <mpfr_jn@@Base+0xda0>
   4e334:	ldr	x28, [sp, #224]
   4e338:	ldr	x0, [sp, #120]
   4e33c:	ldr	w0, [x0, #8]
   4e340:	cmp	w0, #0x0
   4e344:	ccmp	x21, #0x0, #0x4, le
   4e348:	b.ne	4e464 <mpfr_jn@@Base+0xe0c>  // b.any
   4e34c:	ldr	w3, [sp, #280]
   4e350:	ldr	w2, [sp, #156]
   4e354:	add	x1, sp, #0x110
   4e358:	ldr	x0, [sp, #112]
   4e35c:	bl	c6a0 <mpfr_set4@plt>
   4e360:	mov	w19, w0
   4e364:	add	x0, sp, #0x110
   4e368:	bl	c070 <mpfr_clear@plt>
   4e36c:	ldr	w0, [sp, #156]
   4e370:	cmp	w0, #0x5
   4e374:	b.eq	4ec24 <mpfr_jn@@Base+0x15cc>  // b.none
   4e378:	cbz	w19, 4d780 <mpfr_jn@@Base+0x128>
   4e37c:	ldp	x21, x22, [sp, #32]
   4e380:	ldp	x23, x24, [sp, #48]
   4e384:	ldp	x25, x26, [sp, #64]
   4e388:	b	4ec34 <mpfr_jn@@Base+0x15dc>
   4e38c:	mov	w3, #0x0                   	// #0
   4e390:	ldr	x2, [sp, #168]
   4e394:	ldr	x23, [sp, #200]
   4e398:	mov	x1, x23
   4e39c:	mov	x0, x23
   4e3a0:	bl	bd50 <mpfr_mul@plt>
   4e3a4:	mov	w3, #0x0                   	// #0
   4e3a8:	add	x2, sp, #0x150
   4e3ac:	ldr	x22, [sp, #184]
   4e3b0:	mov	x1, x22
   4e3b4:	mov	x0, x22
   4e3b8:	bl	bd50 <mpfr_mul@plt>
   4e3bc:	ldr	x0, [sp, #288]
   4e3c0:	ldr	x20, [sp, #256]
   4e3c4:	cmp	x20, x0
   4e3c8:	csel	x20, x20, x0, ge  // ge = tcont
   4e3cc:	mov	w3, #0x0                   	// #0
   4e3d0:	mov	x2, x23
   4e3d4:	mov	x1, x22
   4e3d8:	mov	x0, x22
   4e3dc:	bl	c1a0 <mpfr_add@plt>
   4e3e0:	b	4e15c <mpfr_jn@@Base+0xb04>
   4e3e4:	mov	w2, #0x0                   	// #0
   4e3e8:	ldr	x0, [sp, #184]
   4e3ec:	mov	x1, x0
   4e3f0:	bl	bd70 <mpfr_neg@plt>
   4e3f4:	b	4e164 <mpfr_jn@@Base+0xb0c>
   4e3f8:	ldr	w0, [sp, #212]
   4e3fc:	cbnz	w0, 4e43c <mpfr_jn@@Base+0xde4>
   4e400:	mov	x0, #0xfffffffffffffeff    	// #-257
   4e404:	movk	x0, #0x7fff, lsl #48
   4e408:	ldr	x1, [sp, #96]
   4e40c:	sub	x0, x0, x1
   4e410:	ldr	x1, [sp, #232]
   4e414:	cmp	x0, x1
   4e418:	b.lt	4e44c <mpfr_jn@@Base+0xdf4>  // b.tstop
   4e41c:	ldr	x0, [sp, #96]
   4e420:	ldr	x1, [sp, #232]
   4e424:	add	x0, x0, x1
   4e428:	str	x0, [sp, #96]
   4e42c:	add	x0, x0, x0, lsr #63
   4e430:	asr	x0, x0, #1
   4e434:	str	x0, [sp, #232]
   4e438:	b	4dccc <mpfr_jn@@Base+0x674>
   4e43c:	ldr	x28, [sp, #224]
   4e440:	add	x0, sp, #0x110
   4e444:	bl	c070 <mpfr_clear@plt>
   4e448:	b	4d780 <mpfr_jn@@Base+0x128>
   4e44c:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   4e450:	add	x2, x2, #0x3e8
   4e454:	mov	w1, #0x106                 	// #262
   4e458:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4e45c:	add	x0, x0, #0xff8
   4e460:	bl	cb40 <mpfr_assert_fail@plt>
   4e464:	ldr	w2, [sp, #156]
   4e468:	add	x1, sp, #0x110
   4e46c:	ldr	x0, [sp, #112]
   4e470:	bl	bd70 <mpfr_neg@plt>
   4e474:	mov	w19, w0
   4e478:	b	4e364 <mpfr_jn@@Base+0xd0c>
   4e47c:	add	x19, sp, #0x300
   4e480:	mov	w3, #0x3                   	// #3
   4e484:	ldr	x2, [sp, #120]
   4e488:	mov	x1, x19
   4e48c:	mov	x0, x19
   4e490:	bl	bd50 <mpfr_mul@plt>
   4e494:	mov	w2, #0x2                   	// #2
   4e498:	mov	x1, x19
   4e49c:	mov	x0, x19
   4e4a0:	bl	bd70 <mpfr_neg@plt>
   4e4a4:	b	4d7f8 <mpfr_jn@@Base+0x1a0>
   4e4a8:	ldr	x1, [sp, #176]
   4e4ac:	neg	x1, x1
   4e4b0:	cmp	x1, x28
   4e4b4:	b.cs	4d814 <mpfr_jn@@Base+0x1bc>  // b.hs, b.nlast
   4e4b8:	ldr	x1, [sp, #528]
   4e4bc:	cbz	x1, 4e4c8 <mpfr_jn@@Base+0xe70>
   4e4c0:	ldr	x0, [sp, #536]
   4e4c4:	bl	cc20 <mpfr_free_func@plt>
   4e4c8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e4cc:	ldr	x1, [x0, #2576]
   4e4d0:	add	x0, x0, #0xa10
   4e4d4:	blr	x1
   4e4d8:	mrs	x1, tpidr_el0
   4e4dc:	ldr	w2, [sp, #208]
   4e4e0:	str	w2, [x1, x0]
   4e4e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e4e8:	ldr	x2, [x0, #2512]
   4e4ec:	add	x0, x0, #0x9d0
   4e4f0:	blr	x2
   4e4f4:	ldr	x2, [sp, #176]
   4e4f8:	str	x2, [x1, x0]
   4e4fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e500:	ldr	x2, [x0, #2544]
   4e504:	add	x0, x0, #0x9f0
   4e508:	blr	x2
   4e50c:	ldr	x2, [sp, #192]
   4e510:	str	x2, [x1, x0]
   4e514:	ldr	w0, [sp, #156]
   4e518:	cmp	w0, #0x0
   4e51c:	csinc	w0, w0, wzr, ne  // ne = any
   4e520:	str	w0, [sp, #156]
   4e524:	ldr	x0, [sp, #128]
   4e528:	tbz	w0, #0, 4e56c <mpfr_jn@@Base+0xf14>
   4e52c:	cmp	x0, #0x0
   4e530:	b.le	4e55c <mpfr_jn@@Base+0xf04>
   4e534:	ldr	x0, [sp, #120]
   4e538:	ldr	w2, [x0, #8]
   4e53c:	ldr	w1, [sp, #156]
   4e540:	ldr	x0, [sp, #112]
   4e544:	bl	c3c0 <mpfr_underflow@plt>
   4e548:	mov	w19, w0
   4e54c:	ldp	x21, x22, [sp, #32]
   4e550:	ldp	x23, x24, [sp, #48]
   4e554:	ldp	x25, x26, [sp, #64]
   4e558:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4e55c:	ldr	x0, [sp, #120]
   4e560:	ldr	w2, [x0, #8]
   4e564:	neg	w2, w2
   4e568:	b	4e53c <mpfr_jn@@Base+0xee4>
   4e56c:	mov	w2, #0x1                   	// #1
   4e570:	b	4e53c <mpfr_jn@@Base+0xee4>
   4e574:	add	x20, sp, #0x1d0
   4e578:	mov	w1, #0x0                   	// #0
   4e57c:	mov	x0, x20
   4e580:	bl	bca0 <mpfr_get_ui@plt>
   4e584:	mov	x19, x0
   4e588:	mov	x0, x20
   4e58c:	bl	c070 <mpfr_clear@plt>
   4e590:	add	x0, sp, #0x1f0
   4e594:	bl	c070 <mpfr_clear@plt>
   4e598:	mov	x0, #0xfffffffffffffe7d    	// #-387
   4e59c:	movk	x0, #0x7fff, lsl #48
   4e5a0:	cmp	x19, x0
   4e5a4:	b.hi	4eca8 <mpfr_jn@@Base+0x1650>  // b.pmore
   4e5a8:	ldr	x0, [sp, #112]
   4e5ac:	ldr	x20, [x0]
   4e5b0:	cmp	x20, #0x1
   4e5b4:	b.eq	4e7ac <mpfr_jn@@Base+0x1154>  // b.none
   4e5b8:	str	x19, [sp, #144]
   4e5bc:	cmp	x20, #0x1
   4e5c0:	b.le	4e790 <mpfr_jn@@Base+0x1138>
   4e5c4:	ldr	x0, [sp, #112]
   4e5c8:	ldr	x27, [x0]
   4e5cc:	sub	x27, x27, #0x1
   4e5d0:	clz	x0, x27
   4e5d4:	mov	w27, #0x40                  	// #64
   4e5d8:	sub	w27, w27, w0
   4e5dc:	lsl	w27, w27, #1
   4e5e0:	sxtw	x27, w27
   4e5e4:	add	x27, x27, x20
   4e5e8:	add	x27, x27, #0x3
   4e5ec:	add	x27, x27, x19
   4e5f0:	mov	x0, #0xfffffffffffffefe    	// #-258
   4e5f4:	movk	x0, #0x7fff, lsl #48
   4e5f8:	cmp	x27, x0
   4e5fc:	b.ls	4d934 <mpfr_jn@@Base+0x2dc>  // b.plast
   4e600:	ldr	x1, [sp, #528]
   4e604:	mov	x27, #0xfffffffffffffeff    	// #-257
   4e608:	movk	x27, #0x7fff, lsl #48
   4e60c:	mov	x0, #0x40                  	// #64
   4e610:	str	x0, [sp, #136]
   4e614:	str	wzr, [sp, #160]
   4e618:	add	x19, sp, #0x2c0
   4e61c:	add	x0, sp, #0x300
   4e620:	str	x0, [sp, #96]
   4e624:	add	x24, sp, #0x2e0
   4e628:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   4e62c:	add	x20, x27, #0x3e
   4e630:	subs	x0, x27, #0x1
   4e634:	csel	x20, x20, x0, mi  // mi = first
   4e638:	asr	x20, x20, #6
   4e63c:	add	x20, x20, #0x1
   4e640:	add	x0, x20, x20, lsl #1
   4e644:	lsl	x0, x0, #3
   4e648:	str	x0, [sp, #528]
   4e64c:	cbnz	x1, 4e7b8 <mpfr_jn@@Base+0x1160>
   4e650:	bl	ccf0 <mpfr_allocate_func@plt>
   4e654:	str	x0, [sp, #536]
   4e658:	str	x27, [sp, #768]
   4e65c:	ldr	x1, [sp, #536]
   4e660:	str	x1, [sp, #792]
   4e664:	mov	w0, #0x1                   	// #1
   4e668:	str	w0, [sp, #776]
   4e66c:	str	x27, [sp, #736]
   4e670:	add	x2, x1, x20, lsl #3
   4e674:	str	x2, [sp, #760]
   4e678:	str	w0, [sp, #744]
   4e67c:	str	x27, [sp, #704]
   4e680:	add	x20, x1, x20, lsl #4
   4e684:	str	x20, [sp, #728]
   4e688:	str	w0, [sp, #712]
   4e68c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e690:	ldr	x1, [x0, #2576]
   4e694:	add	x0, x0, #0xa10
   4e698:	blr	x1
   4e69c:	mrs	x1, tpidr_el0
   4e6a0:	add	x20, x1, x0
   4e6a4:	str	wzr, [x1, x0]
   4e6a8:	mov	w3, #0x0                   	// #0
   4e6ac:	mov	x2, x28
   4e6b0:	ldr	x21, [sp, #120]
   4e6b4:	mov	x1, x21
   4e6b8:	mov	x0, x19
   4e6bc:	bl	bf70 <mpfr_pow_ui@plt>
   4e6c0:	mov	w3, #0x0                   	// #0
   4e6c4:	mov	x2, x21
   4e6c8:	mov	x1, x21
   4e6cc:	ldr	x21, [sp, #96]
   4e6d0:	mov	x0, x21
   4e6d4:	bl	bd50 <mpfr_mul@plt>
   4e6d8:	ldr	w0, [x20]
   4e6dc:	mov	w1, #0x2f                  	// #47
   4e6e0:	and	w0, w0, w1
   4e6e4:	str	w0, [x20]
   4e6e8:	mov	w1, #0x2                   	// #2
   4e6ec:	mov	x0, x21
   4e6f0:	bl	bca0 <mpfr_get_ui@plt>
   4e6f4:	str	x0, [sp, #104]
   4e6f8:	ldr	w0, [x20]
   4e6fc:	tbnz	w0, #4, 4e7cc <mpfr_jn@@Base+0x1174>
   4e700:	mov	w3, #0x0                   	// #0
   4e704:	mov	x2, #0x2                   	// #2
   4e708:	ldr	x0, [sp, #96]
   4e70c:	mov	x1, x0
   4e710:	bl	c8f0 <mpfr_div_2ui@plt>
   4e714:	mov	w2, #0x0                   	// #0
   4e718:	mov	x1, x28
   4e71c:	mov	x0, x24
   4e720:	bl	c6e0 <mpfr_fac_ui@plt>
   4e724:	mov	w3, #0x0                   	// #0
   4e728:	mov	x2, x24
   4e72c:	mov	x1, x19
   4e730:	mov	x0, x19
   4e734:	bl	c620 <mpfr_div@plt>
   4e738:	cbnz	x28, 4e7e8 <mpfr_jn@@Base+0x1190>
   4e73c:	ldr	w3, [sp, #712]
   4e740:	mov	w2, #0x0                   	// #0
   4e744:	mov	x1, x19
   4e748:	mov	x0, x24
   4e74c:	bl	c6a0 <mpfr_set4@plt>
   4e750:	ldr	x23, [sp, #752]
   4e754:	cmp	x23, x25
   4e758:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   4e75c:	csel	x23, x23, x0, ne  // ne = any
   4e760:	mov	w3, #0x0                   	// #0
   4e764:	ldr	x2, [sp, #96]
   4e768:	mov	x1, x19
   4e76c:	mov	x0, x19
   4e770:	bl	bd50 <mpfr_mul@plt>
   4e774:	mov	w2, #0x0                   	// #0
   4e778:	mov	x1, x19
   4e77c:	mov	x0, x19
   4e780:	bl	bd70 <mpfr_neg@plt>
   4e784:	mov	x21, #0x1                   	// #1
   4e788:	mov	x26, #0xc000000000000001    	// #-4611686018427387903
   4e78c:	b	4e878 <mpfr_jn@@Base+0x1220>
   4e790:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4e794:	add	x2, x2, #0xfd8
   4e798:	mov	w1, #0xed                  	// #237
   4e79c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4e7a0:	add	x0, x0, #0xfd0
   4e7a4:	bl	cb40 <mpfr_assert_fail@plt>
   4e7a8:	b	4e5c4 <mpfr_jn@@Base+0xf6c>
   4e7ac:	str	x19, [sp, #144]
   4e7b0:	mov	x27, #0x0                   	// #0
   4e7b4:	b	4e5e4 <mpfr_jn@@Base+0xf8c>
   4e7b8:	mov	x2, x0
   4e7bc:	ldr	x0, [sp, #536]
   4e7c0:	bl	c1c0 <mpfr_reallocate_func@plt>
   4e7c4:	str	x0, [sp, #536]
   4e7c8:	b	4e658 <mpfr_jn@@Base+0x1000>
   4e7cc:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4e7d0:	add	x2, x2, #0x30
   4e7d4:	mov	w1, #0xfc                  	// #252
   4e7d8:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4e7dc:	add	x0, x0, #0xfd0
   4e7e0:	bl	cb40 <mpfr_assert_fail@plt>
   4e7e4:	b	4e700 <mpfr_jn@@Base+0x10a8>
   4e7e8:	mov	w3, #0x0                   	// #0
   4e7ec:	mov	x2, x28
   4e7f0:	mov	x1, x19
   4e7f4:	mov	x0, x19
   4e7f8:	bl	c8f0 <mpfr_div_2ui@plt>
   4e7fc:	b	4e73c <mpfr_jn@@Base+0x10e4>
   4e800:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4e804:	add	x2, x2, #0x50
   4e808:	mov	w1, #0x10f                 	// #271
   4e80c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4e810:	add	x0, x0, #0xfd0
   4e814:	bl	cb40 <mpfr_assert_fail@plt>
   4e818:	mov	w3, #0x0                   	// #0
   4e81c:	mov	x2, x21
   4e820:	mov	x1, x19
   4e824:	mov	x0, x19
   4e828:	bl	cc60 <mpfr_div_ui@plt>
   4e82c:	mov	w3, #0x0                   	// #0
   4e830:	mov	x2, x22
   4e834:	mov	x1, x19
   4e838:	mov	x0, x19
   4e83c:	bl	cc60 <mpfr_div_ui@plt>
   4e840:	b	4e898 <mpfr_jn@@Base+0x1240>
   4e844:	add	x21, x21, #0x1
   4e848:	mov	w3, #0x0                   	// #0
   4e84c:	ldr	x2, [sp, #96]
   4e850:	mov	x1, x19
   4e854:	mov	x0, x19
   4e858:	bl	bd50 <mpfr_mul@plt>
   4e85c:	mov	w2, #0x0                   	// #0
   4e860:	mov	x1, x19
   4e864:	mov	x0, x19
   4e868:	bl	bd70 <mpfr_neg@plt>
   4e86c:	mvn	x0, x21
   4e870:	cmp	x0, x28
   4e874:	b.cc	4e800 <mpfr_jn@@Base+0x11a8>  // b.lo, b.ul, b.last
   4e878:	add	x22, x21, x28
   4e87c:	umulh	x0, x22, x21
   4e880:	cbnz	x0, 4e818 <mpfr_jn@@Base+0x11c0>
   4e884:	mov	w3, #0x0                   	// #0
   4e888:	mul	x2, x22, x21
   4e88c:	mov	x1, x19
   4e890:	mov	x0, x19
   4e894:	bl	cc60 <mpfr_div_ui@plt>
   4e898:	ldr	x0, [sp, #752]
   4e89c:	cmp	x0, x25
   4e8a0:	ldr	x20, [sp, #720]
   4e8a4:	csel	x20, x20, x26, ne  // ne = any
   4e8a8:	mov	w3, #0x0                   	// #0
   4e8ac:	mov	x2, x19
   4e8b0:	mov	x1, x24
   4e8b4:	mov	x0, x24
   4e8b8:	bl	c1a0 <mpfr_add@plt>
   4e8bc:	ldr	x1, [sp, #752]
   4e8c0:	cmp	x1, x25
   4e8c4:	csel	x1, x1, x26, ne  // ne = any
   4e8c8:	cmp	x20, x1
   4e8cc:	csel	x20, x20, x1, ge  // ge = tcont
   4e8d0:	cmp	x23, x20
   4e8d4:	csel	x23, x23, x20, ge  // ge = tcont
   4e8d8:	ldr	x0, [sp, #720]
   4e8dc:	add	x0, x27, x0
   4e8e0:	cmp	x0, x1
   4e8e4:	b.gt	4e844 <mpfr_jn@@Base+0x11ec>
   4e8e8:	lsl	x0, x21, #1
   4e8ec:	ldr	x2, [sp, #104]
   4e8f0:	udiv	x0, x2, x0
   4e8f4:	cmp	x22, x0
   4e8f8:	b.ls	4e844 <mpfr_jn@@Base+0x11ec>  // b.plast
   4e8fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e900:	ldr	x2, [x0, #2576]
   4e904:	add	x0, x0, #0xa10
   4e908:	blr	x2
   4e90c:	mrs	x2, tpidr_el0
   4e910:	ldr	w20, [x2, x0]
   4e914:	sub	x23, x23, x1
   4e918:	cmn	x21, #0x1
   4e91c:	b.eq	4ea74 <mpfr_jn@@Base+0x141c>  // b.none
   4e920:	cmn	x21, #0x2
   4e924:	b.cs	4ea5c <mpfr_jn@@Base+0x1404>  // b.hs, b.nlast
   4e928:	add	x21, x21, #0x1
   4e92c:	clz	x21, x21
   4e930:	mov	w0, #0x41                  	// #65
   4e934:	sub	w21, w0, w21
   4e938:	lsl	w21, w21, #1
   4e93c:	sxtw	x21, w21
   4e940:	tbnz	x23, #63, 4ebb8 <mpfr_jn@@Base+0x1560>
   4e944:	mov	x0, #0xfffffffffffffeff    	// #-257
   4e948:	movk	x0, #0x7fff, lsl #48
   4e94c:	sub	x0, x0, x21
   4e950:	cmp	x0, x23
   4e954:	b.lt	4ebd4 <mpfr_jn@@Base+0x157c>  // b.tstop
   4e958:	add	x23, x21, x23
   4e95c:	ldr	x1, [sp, #752]
   4e960:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4e964:	cmp	x1, x0
   4e968:	b.le	4ea8c <mpfr_jn@@Base+0x1434>
   4e96c:	ldr	w0, [sp, #156]
   4e970:	cmp	w0, #0x0
   4e974:	ldr	x0, [sp, #112]
   4e978:	ldr	x3, [x0]
   4e97c:	cinc	x3, x3, eq  // eq = none
   4e980:	ldr	x0, [sp, #736]
   4e984:	add	x1, x0, #0x3e
   4e988:	subs	x0, x0, #0x1
   4e98c:	csel	x1, x1, x0, mi  // mi = first
   4e990:	asr	x1, x1, #6
   4e994:	sub	x2, x27, x23
   4e998:	add	x1, x1, #0x1
   4e99c:	ldr	x0, [sp, #760]
   4e9a0:	bl	c370 <mpfr_round_p@plt>
   4e9a4:	cbz	w0, 4ea8c <mpfr_jn@@Base+0x1434>
   4e9a8:	tst	x20, #0x3
   4e9ac:	b.ne	4ea7c <mpfr_jn@@Base+0x1424>  // b.any
   4e9b0:	ldr	x0, [sp, #128]
   4e9b4:	tbz	x0, #63, 4e9c0 <mpfr_jn@@Base+0x1368>
   4e9b8:	ldr	x0, [sp, #128]
   4e9bc:	tbnz	w0, #0, 4eb3c <mpfr_jn@@Base+0x14e4>
   4e9c0:	ldr	w3, [sp, #744]
   4e9c4:	ldr	w2, [sp, #156]
   4e9c8:	add	x1, sp, #0x2e0
   4e9cc:	ldr	x0, [sp, #112]
   4e9d0:	bl	c6a0 <mpfr_set4@plt>
   4e9d4:	mov	w19, w0
   4e9d8:	ldr	x1, [sp, #528]
   4e9dc:	cbz	x1, 4eb54 <mpfr_jn@@Base+0x14fc>
   4e9e0:	ldr	x0, [sp, #536]
   4e9e4:	bl	cc20 <mpfr_free_func@plt>
   4e9e8:	ldp	x23, x24, [sp, #48]
   4e9ec:	ldp	x25, x26, [sp, #64]
   4e9f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4e9f4:	ldr	x1, [x0, #2576]
   4e9f8:	add	x0, x0, #0xa10
   4e9fc:	blr	x1
   4ea00:	mrs	x1, tpidr_el0
   4ea04:	ldr	w2, [sp, #208]
   4ea08:	str	w2, [x1, x0]
   4ea0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ea10:	ldr	x2, [x0, #2512]
   4ea14:	add	x0, x0, #0x9d0
   4ea18:	blr	x2
   4ea1c:	ldr	x2, [sp, #176]
   4ea20:	str	x2, [x1, x0]
   4ea24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ea28:	ldr	x3, [x0, #2544]
   4ea2c:	add	x0, x0, #0x9f0
   4ea30:	blr	x3
   4ea34:	ldr	x3, [sp, #192]
   4ea38:	str	x3, [x1, x0]
   4ea3c:	ldr	x0, [sp, #112]
   4ea40:	ldr	x0, [x0, #16]
   4ea44:	cmp	x0, x3
   4ea48:	ccmp	x0, x2, #0x1, le
   4ea4c:	b.lt	4eb9c <mpfr_jn@@Base+0x1544>  // b.tstop
   4ea50:	cbnz	w19, 4eb60 <mpfr_jn@@Base+0x1508>
   4ea54:	ldp	x21, x22, [sp, #32]
   4ea58:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4ea5c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4ea60:	add	x2, x2, #0x80
   4ea64:	mov	w1, #0x128                 	// #296
   4ea68:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4ea6c:	add	x0, x0, #0xfd0
   4ea70:	bl	cb40 <mpfr_assert_fail@plt>
   4ea74:	mov	x21, #0x2                   	// #2
   4ea78:	b	4e940 <mpfr_jn@@Base+0x12e8>
   4ea7c:	ldr	w0, [sp, #160]
   4ea80:	cbnz	w0, 4eaf4 <mpfr_jn@@Base+0x149c>
   4ea84:	mov	w0, #0x1                   	// #1
   4ea88:	str	w0, [sp, #160]
   4ea8c:	ldr	x0, [sp, #144]
   4ea90:	cmp	x23, x0
   4ea94:	b.ls	4eab4 <mpfr_jn@@Base+0x145c>  // b.plast
   4ea98:	sub	x23, x23, x0
   4ea9c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4eaa0:	movk	x0, #0x7fff, lsl #48
   4eaa4:	sub	x0, x0, x27
   4eaa8:	cmp	x23, x0
   4eaac:	b.hi	4eb0c <mpfr_jn@@Base+0x14b4>  // b.pmore
   4eab0:	add	x27, x27, x23
   4eab4:	mov	x0, #0xfffffffffffffeff    	// #-257
   4eab8:	movk	x0, #0x7fff, lsl #48
   4eabc:	sub	x0, x0, x27
   4eac0:	ldr	x1, [sp, #136]
   4eac4:	cmp	x1, x0
   4eac8:	b.gt	4eb24 <mpfr_jn@@Base+0x14cc>
   4eacc:	ldr	x0, [sp, #136]
   4ead0:	add	x27, x27, x0
   4ead4:	add	x0, x27, x27, lsr #63
   4ead8:	asr	x0, x0, #1
   4eadc:	str	x0, [sp, #136]
   4eae0:	ldr	x1, [sp, #528]
   4eae4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4eae8:	cmp	x27, x0
   4eaec:	b.lt	4e62c <mpfr_jn@@Base+0xfd4>  // b.tstop
   4eaf0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   4eaf4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4eaf8:	add	x2, x2, #0x90
   4eafc:	mov	w1, #0x137                 	// #311
   4eb00:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4eb04:	add	x0, x0, #0xfd0
   4eb08:	bl	cb40 <mpfr_assert_fail@plt>
   4eb0c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4eb10:	add	x2, x2, #0xa0
   4eb14:	mov	w1, #0x13e                 	// #318
   4eb18:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4eb1c:	add	x0, x0, #0xfd0
   4eb20:	bl	cb40 <mpfr_assert_fail@plt>
   4eb24:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   4eb28:	add	x2, x2, #0xd68
   4eb2c:	mov	w1, #0x13f                 	// #319
   4eb30:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4eb34:	add	x0, x0, #0xfd0
   4eb38:	bl	cb40 <mpfr_assert_fail@plt>
   4eb3c:	ldr	w2, [sp, #156]
   4eb40:	add	x1, sp, #0x2e0
   4eb44:	ldr	x0, [sp, #112]
   4eb48:	bl	bd70 <mpfr_neg@plt>
   4eb4c:	mov	w19, w0
   4eb50:	b	4e9d8 <mpfr_jn@@Base+0x1380>
   4eb54:	ldp	x23, x24, [sp, #48]
   4eb58:	ldp	x25, x26, [sp, #64]
   4eb5c:	b	4e9f0 <mpfr_jn@@Base+0x1398>
   4eb60:	ldp	x21, x22, [sp, #32]
   4eb64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4eb68:	ldr	x1, [x0, #2576]
   4eb6c:	add	x0, x0, #0xa10
   4eb70:	blr	x1
   4eb74:	ldr	w1, [sp, #208]
   4eb78:	orr	w2, w1, #0x8
   4eb7c:	mrs	x1, tpidr_el0
   4eb80:	str	w2, [x1, x0]
   4eb84:	mov	w0, w19
   4eb88:	ldp	x19, x20, [sp, #16]
   4eb8c:	ldp	x27, x28, [sp, #80]
   4eb90:	ldp	x29, x30, [sp]
   4eb94:	add	sp, sp, #0x320
   4eb98:	ret
   4eb9c:	ldp	x21, x22, [sp, #32]
   4eba0:	ldr	w2, [sp, #156]
   4eba4:	mov	w1, w19
   4eba8:	ldr	x0, [sp, #112]
   4ebac:	bl	cb30 <mpfr_check_range@plt>
   4ebb0:	mov	w19, w0
   4ebb4:	b	4eb84 <mpfr_jn@@Base+0x152c>
   4ebb8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4ebbc:	add	x2, x2, #0xf0
   4ebc0:	mov	w1, #0x12a                 	// #298
   4ebc4:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4ebc8:	add	x0, x0, #0xfd0
   4ebcc:	bl	cb40 <mpfr_assert_fail@plt>
   4ebd0:	b	4e958 <mpfr_jn@@Base+0x1300>
   4ebd4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4ebd8:	add	x2, x2, #0xf0
   4ebdc:	mov	w1, #0x12a                 	// #298
   4ebe0:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4ebe4:	add	x0, x0, #0xfd0
   4ebe8:	bl	cb40 <mpfr_assert_fail@plt>
   4ebec:	b	4e958 <mpfr_jn@@Base+0x1300>
   4ebf0:	add	x19, sp, #0x1d0
   4ebf4:	mov	x1, #0x20                  	// #32
   4ebf8:	mov	x0, x19
   4ebfc:	bl	ca80 <mpfr_init2@plt>
   4ec00:	mov	x1, #0x20                  	// #32
   4ec04:	add	x0, sp, #0x1f0
   4ec08:	bl	ca80 <mpfr_init2@plt>
   4ec0c:	mov	w3, #0x1                   	// #1
   4ec10:	mov	w2, #0x0                   	// #0
   4ec14:	ldr	x1, [sp, #120]
   4ec18:	mov	x0, x19
   4ec1c:	bl	c6a0 <mpfr_set4@plt>
   4ec20:	b	4d8bc <mpfr_jn@@Base+0x264>
   4ec24:	mov	w19, #0x1                   	// #1
   4ec28:	ldp	x21, x22, [sp, #32]
   4ec2c:	ldp	x23, x24, [sp, #48]
   4ec30:	ldp	x25, x26, [sp, #64]
   4ec34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ec38:	ldr	x1, [x0, #2576]
   4ec3c:	add	x0, x0, #0xa10
   4ec40:	blr	x1
   4ec44:	mrs	x1, tpidr_el0
   4ec48:	ldr	w2, [sp, #208]
   4ec4c:	str	w2, [x1, x0]
   4ec50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ec54:	ldr	x2, [x0, #2512]
   4ec58:	add	x0, x0, #0x9d0
   4ec5c:	blr	x2
   4ec60:	ldr	x2, [sp, #176]
   4ec64:	str	x2, [x1, x0]
   4ec68:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ec6c:	ldr	x3, [x0, #2544]
   4ec70:	add	x0, x0, #0x9f0
   4ec74:	blr	x3
   4ec78:	ldr	x3, [sp, #192]
   4ec7c:	str	x3, [x1, x0]
   4ec80:	ldr	x0, [sp, #112]
   4ec84:	ldr	x0, [x0, #16]
   4ec88:	cmp	x0, x2
   4ec8c:	ccmp	x0, x3, #0x0, ge  // ge = tcont
   4ec90:	b.le	4eb64 <mpfr_jn@@Base+0x150c>
   4ec94:	b	4eba0 <mpfr_jn@@Base+0x1548>
   4ec98:	mov	w0, #0x1                   	// #1
   4ec9c:	str	w0, [sp, #212]
   4eca0:	mov	w22, #0x2                   	// #2
   4eca4:	b	4ded4 <mpfr_jn@@Base+0x87c>
   4eca8:	str	x19, [sp, #144]
   4ecac:	b	4d910 <mpfr_jn@@Base+0x2b8>

000000000004ecb0 <mpfr_j0@@Base>:
   4ecb0:	stp	x29, x30, [sp, #-16]!
   4ecb4:	mov	x29, sp
   4ecb8:	mov	w3, w2
   4ecbc:	mov	x2, x1
   4ecc0:	mov	x1, #0x0                   	// #0
   4ecc4:	bl	cc10 <mpfr_jn@plt>
   4ecc8:	ldp	x29, x30, [sp], #16
   4eccc:	ret

000000000004ecd0 <mpfr_j1@@Base>:
   4ecd0:	stp	x29, x30, [sp, #-16]!
   4ecd4:	mov	x29, sp
   4ecd8:	mov	w3, w2
   4ecdc:	mov	x2, x1
   4ece0:	mov	x1, #0x1                   	// #1
   4ece4:	bl	cc10 <mpfr_jn@plt>
   4ece8:	ldp	x29, x30, [sp], #16
   4ecec:	ret

000000000004ecf0 <mpfr_yn@@Base>:
   4ecf0:	sub	sp, sp, #0x210
   4ecf4:	stp	x29, x30, [sp]
   4ecf8:	mov	x29, sp
   4ecfc:	stp	x19, x20, [sp, #16]
   4ed00:	stp	x25, x26, [sp, #64]
   4ed04:	stp	x27, x28, [sp, #80]
   4ed08:	mov	x27, x0
   4ed0c:	str	x1, [sp, #104]
   4ed10:	mov	x26, x2
   4ed14:	str	w3, [sp, #152]
   4ed18:	cmp	x1, #0x0
   4ed1c:	cneg	x28, x1, lt  // lt = tstop
   4ed20:	ldr	x2, [x2, #16]
   4ed24:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ed28:	cmp	x2, x0
   4ed2c:	b.le	4efe0 <mpfr_yn@@Base+0x2f0>
   4ed30:	ldr	w0, [x26, #8]
   4ed34:	tbnz	w0, #31, 4f0dc <mpfr_yn@@Base+0x3ec>
   4ed38:	stp	x21, x22, [sp, #32]
   4ed3c:	stp	x23, x24, [sp, #48]
   4ed40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ed44:	ldr	x1, [x0, #2576]
   4ed48:	add	x0, x0, #0xa10
   4ed4c:	blr	x1
   4ed50:	mrs	x1, tpidr_el0
   4ed54:	ldr	w0, [x1, x0]
   4ed58:	str	w0, [sp, #156]
   4ed5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ed60:	ldr	x3, [x0, #2512]
   4ed64:	add	x0, x0, #0x9d0
   4ed68:	blr	x3
   4ed6c:	add	x3, x1, x0
   4ed70:	ldr	x0, [x1, x0]
   4ed74:	str	x0, [sp, #168]
   4ed78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4ed7c:	ldr	x4, [x0, #2544]
   4ed80:	add	x0, x0, #0x9f0
   4ed84:	blr	x4
   4ed88:	ldr	x4, [x1, x0]
   4ed8c:	str	x4, [sp, #176]
   4ed90:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4ed94:	str	x4, [x3]
   4ed98:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4ed9c:	str	x3, [x1, x0]
   4eda0:	ldr	x0, [sp, #104]
   4eda4:	cbnz	x0, 4f3a0 <mpfr_yn@@Base+0x6b0>
   4eda8:	ldr	x23, [x27]
   4edac:	add	x0, x23, x23, lsr #63
   4edb0:	neg	x0, x0, asr #1
   4edb4:	cmp	x2, x0
   4edb8:	b.lt	4f114 <mpfr_yn@@Base+0x424>  // b.tstop
   4edbc:	ldr	x1, [x27]
   4edc0:	add	x1, x1, x1, lsr #63
   4edc4:	asr	x1, x1, #1
   4edc8:	mov	x2, #0x0                   	// #0
   4edcc:	add	x1, x1, #0x3
   4edd0:	mov	x0, x26
   4edd4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4edd8:	cmp	w0, #0x0
   4eddc:	b.le	4fa8c <mpfr_yn@@Base+0xd9c>
   4ede0:	add	x0, sp, #0x110
   4ede4:	bl	bbd0 <mpfr_init@plt>
   4ede8:	ldr	x19, [x27]
   4edec:	cmp	x19, #0x1
   4edf0:	b.eq	4f56c <mpfr_yn@@Base+0x87c>  // b.none
   4edf4:	b.le	4f550 <mpfr_yn@@Base+0x860>
   4edf8:	ldr	x0, [x27]
   4edfc:	sub	x0, x0, #0x1
   4ee00:	clz	x1, x0
   4ee04:	mov	w0, #0x40                  	// #64
   4ee08:	sub	w0, w0, w1
   4ee0c:	sxtw	x0, w0
   4ee10:	add	x19, x19, x0
   4ee14:	add	x0, x19, #0x4
   4ee18:	str	x0, [sp, #96]
   4ee1c:	ldr	x1, [sp, #104]
   4ee20:	lsl	x0, x1, #1
   4ee24:	add	x0, x0, #0x1
   4ee28:	str	x0, [sp, #208]
   4ee2c:	lsl	x0, x1, #2
   4ee30:	str	x0, [sp, #184]
   4ee34:	mov	x0, #0x40                  	// #64
   4ee38:	str	x0, [sp, #224]
   4ee3c:	str	wzr, [sp, #160]
   4ee40:	add	x25, sp, #0x110
   4ee44:	add	x0, sp, #0xf0
   4ee48:	str	x0, [sp, #144]
   4ee4c:	add	x0, sp, #0x130
   4ee50:	str	x0, [sp, #120]
   4ee54:	add	x19, sp, #0x170
   4ee58:	add	x0, sp, #0x190
   4ee5c:	str	x0, [sp, #128]
   4ee60:	add	x24, sp, #0x1b0
   4ee64:	add	x20, sp, #0x1d0
   4ee68:	add	x0, sp, #0x1f0
   4ee6c:	str	x28, [sp, #216]
   4ee70:	str	x27, [sp, #192]
   4ee74:	mov	x28, x0
   4ee78:	ldr	x21, [sp, #96]
   4ee7c:	mov	x1, x21
   4ee80:	mov	x0, x25
   4ee84:	bl	bed0 <mpfr_set_prec@plt>
   4ee88:	mov	x1, x21
   4ee8c:	ldr	x22, [sp, #144]
   4ee90:	mov	x0, x22
   4ee94:	bl	ca80 <mpfr_init2@plt>
   4ee98:	mov	x1, x21
   4ee9c:	ldr	x0, [sp, #120]
   4eea0:	bl	ca80 <mpfr_init2@plt>
   4eea4:	mov	x1, x21
   4eea8:	add	x0, sp, #0x150
   4eeac:	bl	ca80 <mpfr_init2@plt>
   4eeb0:	mov	x1, x21
   4eeb4:	mov	x0, x19
   4eeb8:	bl	ca80 <mpfr_init2@plt>
   4eebc:	mov	x1, x21
   4eec0:	ldr	x0, [sp, #128]
   4eec4:	bl	ca80 <mpfr_init2@plt>
   4eec8:	mov	x1, #0x1f                  	// #31
   4eecc:	mov	x0, x24
   4eed0:	bl	ca80 <mpfr_init2@plt>
   4eed4:	mov	x1, #0x1f                  	// #31
   4eed8:	mov	x0, x20
   4eedc:	bl	ca80 <mpfr_init2@plt>
   4eee0:	mov	x1, #0x1f                  	// #31
   4eee4:	mov	x0, x28
   4eee8:	bl	ca80 <mpfr_init2@plt>
   4eeec:	mov	w3, #0x0                   	// #0
   4eef0:	mov	x2, x26
   4eef4:	mov	x1, x25
   4eef8:	mov	x0, x22
   4eefc:	bl	cc40 <mpfr_sin_cos@plt>
   4ef00:	ldr	w0, [x26, #8]
   4ef04:	tbnz	w0, #31, 4f574 <mpfr_yn@@Base+0x884>
   4ef08:	mov	w3, #0x0                   	// #0
   4ef0c:	mov	x2, x25
   4ef10:	ldr	x21, [sp, #144]
   4ef14:	mov	x1, x21
   4ef18:	mov	x0, x19
   4ef1c:	bl	c1a0 <mpfr_add@plt>
   4ef20:	mov	w3, #0x0                   	// #0
   4ef24:	mov	x2, x25
   4ef28:	mov	x1, x21
   4ef2c:	mov	x0, x25
   4ef30:	bl	bb70 <mpfr_sub@plt>
   4ef34:	mov	x1, x19
   4ef38:	mov	x0, x21
   4ef3c:	bl	c4a0 <mpfr_swap@plt>
   4ef40:	ldr	w0, [x26, #8]
   4ef44:	mov	x1, #0xffffffffffffffff    	// #-1
   4ef48:	cmp	w0, #0x0
   4ef4c:	mov	w3, #0x0                   	// #0
   4ef50:	mov	x2, x26
   4ef54:	cneg	x1, x1, gt
   4ef58:	ldr	x21, [sp, #128]
   4ef5c:	mov	x0, x21
   4ef60:	bl	c8b0 <mpfr_si_div@plt>
   4ef64:	mov	w3, #0x0                   	// #0
   4ef68:	mov	x2, #0x3                   	// #3
   4ef6c:	mov	x1, x21
   4ef70:	mov	x0, x21
   4ef74:	bl	c8f0 <mpfr_div_2ui@plt>
   4ef78:	mov	w3, #0x0                   	// #0
   4ef7c:	mov	x2, #0x0                   	// #0
   4ef80:	mov	x1, #0x1                   	// #1
   4ef84:	ldr	x0, [sp, #120]
   4ef88:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4ef8c:	mov	w22, #0x1                   	// #1
   4ef90:	str	w22, [sp, #344]
   4ef94:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
   4ef98:	str	x21, [sp, #352]
   4ef9c:	mov	w3, #0x0                   	// #0
   4efa0:	mov	x2, #0x0                   	// #0
   4efa4:	mov	x1, #0x1                   	// #1
   4efa8:	mov	x0, x19
   4efac:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4efb0:	str	w22, [sp, #440]
   4efb4:	str	x21, [sp, #448]
   4efb8:	str	w22, [sp, #472]
   4efbc:	str	x21, [sp, #480]
   4efc0:	ldr	x27, [sp, #208]
   4efc4:	mov	x0, #0x6                   	// #6
   4efc8:	str	x0, [sp, #112]
   4efcc:	mov	x23, #0x2                   	// #2
   4efd0:	mov	w22, #0x0                   	// #0
   4efd4:	mov	w21, #0x2                   	// #2
   4efd8:	str	x25, [sp, #200]
   4efdc:	b	4f604 <mpfr_yn@@Base+0x914>
   4efe0:	mov	x0, #0x2                   	// #2
   4efe4:	movk	x0, #0x8000, lsl #48
   4efe8:	cmp	x2, x0
   4efec:	b.eq	4f020 <mpfr_yn@@Base+0x330>  // b.none
   4eff0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4eff4:	cmp	x2, x0
   4eff8:	b.ne	4f088 <mpfr_yn@@Base+0x398>  // b.any
   4effc:	ldr	w0, [x26, #8]
   4f000:	cmp	w0, #0x0
   4f004:	b.le	4f050 <mpfr_yn@@Base+0x360>
   4f008:	mov	w0, #0x1                   	// #1
   4f00c:	str	w0, [x27, #8]
   4f010:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f014:	str	x0, [x27, #16]
   4f018:	mov	w19, #0x0                   	// #0
   4f01c:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f020:	str	x0, [x27, #16]
   4f024:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f028:	ldr	x1, [x0, #2576]
   4f02c:	add	x0, x0, #0xa10
   4f030:	blr	x1
   4f034:	mrs	x1, tpidr_el0
   4f038:	add	x0, x1, x0
   4f03c:	ldr	w1, [x0]
   4f040:	orr	w1, w1, #0x4
   4f044:	str	w1, [x0]
   4f048:	mov	w19, #0x0                   	// #0
   4f04c:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f050:	mov	x0, #0x2                   	// #2
   4f054:	movk	x0, #0x8000, lsl #48
   4f058:	str	x0, [x27, #16]
   4f05c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f060:	ldr	x1, [x0, #2576]
   4f064:	add	x0, x0, #0xa10
   4f068:	blr	x1
   4f06c:	mrs	x1, tpidr_el0
   4f070:	add	x0, x1, x0
   4f074:	ldr	w1, [x0]
   4f078:	orr	w1, w1, #0x4
   4f07c:	str	w1, [x0]
   4f080:	mov	w19, #0x0                   	// #0
   4f084:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f088:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f08c:	str	x0, [x27, #16]
   4f090:	mov	w0, #0xffffffff            	// #-1
   4f094:	ldr	x1, [sp, #104]
   4f098:	tbnz	x1, #63, 4f0cc <mpfr_yn@@Base+0x3dc>
   4f09c:	str	w0, [x27, #8]
   4f0a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f0a4:	ldr	x1, [x0, #2576]
   4f0a8:	add	x0, x0, #0xa10
   4f0ac:	blr	x1
   4f0b0:	mrs	x1, tpidr_el0
   4f0b4:	add	x0, x1, x0
   4f0b8:	ldr	w1, [x0]
   4f0bc:	orr	w1, w1, #0x20
   4f0c0:	str	w1, [x0]
   4f0c4:	mov	w19, #0x0                   	// #0
   4f0c8:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f0cc:	mov	w0, #0x1                   	// #1
   4f0d0:	tst	x1, #0x1
   4f0d4:	cneg	w0, w0, eq  // eq = none
   4f0d8:	b	4f09c <mpfr_yn@@Base+0x3ac>
   4f0dc:	mov	x0, #0x2                   	// #2
   4f0e0:	movk	x0, #0x8000, lsl #48
   4f0e4:	str	x0, [x27, #16]
   4f0e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f0ec:	ldr	x1, [x0, #2576]
   4f0f0:	add	x0, x0, #0xa10
   4f0f4:	blr	x1
   4f0f8:	mrs	x1, tpidr_el0
   4f0fc:	add	x0, x1, x0
   4f100:	ldr	w1, [x0]
   4f104:	orr	w1, w1, #0x4
   4f108:	str	w1, [x0]
   4f10c:	mov	w19, #0x0                   	// #0
   4f110:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f114:	add	x23, x23, #0xa
   4f118:	add	x21, sp, #0x190
   4f11c:	mov	x1, x23
   4f120:	mov	x0, x21
   4f124:	bl	ca80 <mpfr_init2@plt>
   4f128:	add	x20, sp, #0x1b0
   4f12c:	mov	x1, x23
   4f130:	mov	x0, x20
   4f134:	bl	ca80 <mpfr_init2@plt>
   4f138:	add	x19, sp, #0x1d0
   4f13c:	mov	x1, x23
   4f140:	mov	x0, x19
   4f144:	bl	ca80 <mpfr_init2@plt>
   4f148:	add	x22, sp, #0x1f0
   4f14c:	mov	x1, x23
   4f150:	mov	x0, x22
   4f154:	bl	ca80 <mpfr_init2@plt>
   4f158:	mov	w2, #0x3                   	// #3
   4f15c:	mov	x1, x26
   4f160:	mov	x0, x22
   4f164:	bl	c090 <mpfr_log@plt>
   4f168:	ldr	w3, [sp, #504]
   4f16c:	mov	w2, #0x2                   	// #2
   4f170:	mov	x1, x22
   4f174:	mov	x0, x20
   4f178:	bl	c6a0 <mpfr_set4@plt>
   4f17c:	mov	x0, x20
   4f180:	bl	c120 <mpfr_nextabove@plt>
   4f184:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f188:	ldr	x1, [x0, #2608]
   4f18c:	add	x0, x0, #0xa30
   4f190:	blr	x1
   4f194:	mrs	x23, tpidr_el0
   4f198:	mov	w2, #0x3                   	// #3
   4f19c:	add	x1, x23, x0
   4f1a0:	mov	x0, x19
   4f1a4:	bl	c380 <mpfr_cache@plt>
   4f1a8:	mov	w3, #0x3                   	// #3
   4f1ac:	mov	x2, x19
   4f1b0:	mov	x1, x22
   4f1b4:	mov	x0, x21
   4f1b8:	bl	c1a0 <mpfr_add@plt>
   4f1bc:	mov	x0, x19
   4f1c0:	bl	c120 <mpfr_nextabove@plt>
   4f1c4:	mov	w3, #0x2                   	// #2
   4f1c8:	mov	x2, x19
   4f1cc:	mov	x1, x20
   4f1d0:	mov	x0, x20
   4f1d4:	bl	c1a0 <mpfr_add@plt>
   4f1d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f1dc:	ldr	x1, [x0, #2560]
   4f1e0:	add	x0, x0, #0xa00
   4f1e4:	blr	x1
   4f1e8:	mov	w2, #0x2                   	// #2
   4f1ec:	add	x1, x23, x0
   4f1f0:	mov	x0, x19
   4f1f4:	bl	c380 <mpfr_cache@plt>
   4f1f8:	mov	w3, #0x3                   	// #3
   4f1fc:	mov	x2, x19
   4f200:	mov	x1, x21
   4f204:	mov	x0, x21
   4f208:	bl	bb70 <mpfr_sub@plt>
   4f20c:	mov	x0, x19
   4f210:	bl	bdd0 <mpfr_nextbelow@plt>
   4f214:	mov	w3, #0x2                   	// #2
   4f218:	mov	x2, x19
   4f21c:	mov	x1, x20
   4f220:	mov	x0, x20
   4f224:	bl	bb70 <mpfr_sub@plt>
   4f228:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f22c:	ldr	x1, [x0, #2624]
   4f230:	add	x0, x0, #0xa40
   4f234:	blr	x1
   4f238:	mov	w2, #0x2                   	// #2
   4f23c:	add	x1, x23, x0
   4f240:	mov	x0, x19
   4f244:	bl	c380 <mpfr_cache@plt>
   4f248:	mov	w3, #0x3                   	// #3
   4f24c:	mov	x2, x19
   4f250:	mov	x1, x21
   4f254:	mov	x0, x21
   4f258:	bl	c620 <mpfr_div@plt>
   4f25c:	mov	x0, x19
   4f260:	bl	bdd0 <mpfr_nextbelow@plt>
   4f264:	mov	w3, #0x3                   	// #3
   4f268:	mov	x2, x19
   4f26c:	mov	x1, x20
   4f270:	mov	x0, x20
   4f274:	bl	c620 <mpfr_div@plt>
   4f278:	mov	w3, #0x3                   	// #3
   4f27c:	mov	x2, #0x1                   	// #1
   4f280:	mov	x1, x21
   4f284:	mov	x0, x21
   4f288:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f28c:	mov	w3, #0x2                   	// #2
   4f290:	mov	x2, #0x1                   	// #1
   4f294:	mov	x1, x20
   4f298:	mov	x0, x20
   4f29c:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f2a0:	mov	w3, #0x2                   	// #2
   4f2a4:	mov	x2, x26
   4f2a8:	mov	x1, x26
   4f2ac:	mov	x0, x19
   4f2b0:	bl	bd50 <mpfr_mul@plt>
   4f2b4:	mov	w2, #0x3                   	// #3
   4f2b8:	mov	x1, x19
   4f2bc:	mov	x0, x19
   4f2c0:	bl	bd70 <mpfr_neg@plt>
   4f2c4:	mov	w3, #0x3                   	// #3
   4f2c8:	mov	x2, #0x1                   	// #1
   4f2cc:	mov	x1, x19
   4f2d0:	mov	x0, x19
   4f2d4:	bl	c8f0 <mpfr_div_2ui@plt>
   4f2d8:	mov	w3, #0x2                   	// #2
   4f2dc:	mov	x2, x22
   4f2e0:	mov	x1, x19
   4f2e4:	mov	x0, x19
   4f2e8:	bl	bd50 <mpfr_mul@plt>
   4f2ec:	mov	w3, #0x2                   	// #2
   4f2f0:	mov	x2, x19
   4f2f4:	mov	x1, x20
   4f2f8:	mov	x0, x20
   4f2fc:	bl	c1a0 <mpfr_add@plt>
   4f300:	ldr	w22, [sp, #152]
   4f304:	mov	w2, w22
   4f308:	ldr	x1, [x27]
   4f30c:	mov	x0, x21
   4f310:	bl	c970 <mpfr_prec_round@plt>
   4f314:	mov	w19, w0
   4f318:	mov	w2, w22
   4f31c:	ldr	x1, [x27]
   4f320:	mov	x0, x20
   4f324:	bl	c970 <mpfr_prec_round@plt>
   4f328:	cmp	w19, w0
   4f32c:	b.eq	4f354 <mpfr_yn@@Base+0x664>  // b.none
   4f330:	add	x0, sp, #0x190
   4f334:	bl	c070 <mpfr_clear@plt>
   4f338:	add	x0, sp, #0x1b0
   4f33c:	bl	c070 <mpfr_clear@plt>
   4f340:	add	x0, sp, #0x1d0
   4f344:	bl	c070 <mpfr_clear@plt>
   4f348:	add	x0, sp, #0x1f0
   4f34c:	bl	c070 <mpfr_clear@plt>
   4f350:	b	4edbc <mpfr_yn@@Base+0xcc>
   4f354:	add	x1, sp, #0x1b0
   4f358:	add	x0, sp, #0x190
   4f35c:	bl	ca60 <mpfr_equal_p@plt>
   4f360:	cbz	w0, 4f330 <mpfr_yn@@Base+0x640>
   4f364:	add	x20, sp, #0x1b0
   4f368:	ldr	w3, [sp, #440]
   4f36c:	ldr	w2, [sp, #152]
   4f370:	mov	x1, x20
   4f374:	mov	x0, x27
   4f378:	bl	c6a0 <mpfr_set4@plt>
   4f37c:	add	x0, sp, #0x190
   4f380:	bl	c070 <mpfr_clear@plt>
   4f384:	mov	x0, x20
   4f388:	bl	c070 <mpfr_clear@plt>
   4f38c:	add	x0, sp, #0x1d0
   4f390:	bl	c070 <mpfr_clear@plt>
   4f394:	add	x0, sp, #0x1f0
   4f398:	bl	c070 <mpfr_clear@plt>
   4f39c:	b	5030c <mpfr_yn@@Base+0x161c>
   4f3a0:	ldr	x0, [sp, #104]
   4f3a4:	cmp	x0, #0x1
   4f3a8:	b.ne	4edbc <mpfr_yn@@Base+0xcc>  // b.any
   4f3ac:	ldr	x19, [x27]
   4f3b0:	add	x2, x2, #0x1
   4f3b4:	neg	x0, x19
   4f3b8:	cmp	x2, x0
   4f3bc:	b.ge	4edbc <mpfr_yn@@Base+0xcc>  // b.tcont
   4f3c0:	add	x19, x19, #0xa
   4f3c4:	add	x20, sp, #0x1f0
   4f3c8:	mov	x1, x19
   4f3cc:	mov	x0, x20
   4f3d0:	bl	ca80 <mpfr_init2@plt>
   4f3d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f3d8:	ldr	x1, [x0, #2624]
   4f3dc:	add	x0, x0, #0xa40
   4f3e0:	blr	x1
   4f3e4:	mrs	x21, tpidr_el0
   4f3e8:	mov	w2, #0x2                   	// #2
   4f3ec:	add	x1, x21, x0
   4f3f0:	mov	x0, x20
   4f3f4:	bl	c380 <mpfr_cache@plt>
   4f3f8:	mov	w3, #0x2                   	// #2
   4f3fc:	mov	x2, x26
   4f400:	mov	x1, x20
   4f404:	mov	x0, x20
   4f408:	bl	bd50 <mpfr_mul@plt>
   4f40c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f410:	ldr	x1, [x0, #2576]
   4f414:	add	x0, x0, #0xa10
   4f418:	blr	x1
   4f41c:	add	x22, x21, x0
   4f420:	str	wzr, [x21, x0]
   4f424:	mov	w3, #0x1                   	// #1
   4f428:	mov	x2, x20
   4f42c:	mov	x1, #0x2                   	// #2
   4f430:	mov	x0, x20
   4f434:	bl	c2f0 <mpfr_ui_div@plt>
   4f438:	ldr	w0, [x22]
   4f43c:	tbnz	w0, #1, 4f4b8 <mpfr_yn@@Base+0x7c8>
   4f440:	add	x0, sp, #0x1f0
   4f444:	mov	w2, #0x0                   	// #0
   4f448:	mov	x1, x0
   4f44c:	bl	bd70 <mpfr_neg@plt>
   4f450:	ldr	x1, [sp, #512]
   4f454:	ldr	x0, [sp, #496]
   4f458:	add	x3, x1, #0x2
   4f45c:	sub	x2, x0, x1
   4f460:	cmp	x3, x0
   4f464:	mov	x3, #0x3                   	// #3
   4f468:	csinc	x2, x3, x2, ge  // ge = tcont
   4f46c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   4f470:	cmp	x1, x3
   4f474:	b.le	4f4ac <mpfr_yn@@Base+0x7bc>
   4f478:	ldr	w1, [sp, #152]
   4f47c:	cmp	w1, #0x0
   4f480:	ldr	x3, [x27]
   4f484:	cinc	x3, x3, eq  // eq = none
   4f488:	add	x1, x0, #0x3e
   4f48c:	subs	x0, x0, #0x1
   4f490:	csel	x0, x1, x0, mi  // mi = first
   4f494:	asr	x1, x0, #6
   4f498:	sub	x2, x19, x2
   4f49c:	add	x1, x1, #0x1
   4f4a0:	ldr	x0, [sp, #520]
   4f4a4:	bl	c370 <mpfr_round_p@plt>
   4f4a8:	cbnz	w0, 4f528 <mpfr_yn@@Base+0x838>
   4f4ac:	add	x0, sp, #0x1f0
   4f4b0:	bl	c070 <mpfr_clear@plt>
   4f4b4:	b	4edbc <mpfr_yn@@Base+0xcc>
   4f4b8:	add	x0, sp, #0x1f0
   4f4bc:	bl	c070 <mpfr_clear@plt>
   4f4c0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f4c4:	ldr	x1, [x0, #2576]
   4f4c8:	add	x0, x0, #0xa10
   4f4cc:	blr	x1
   4f4d0:	ldr	w2, [sp, #156]
   4f4d4:	str	w2, [x21, x0]
   4f4d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f4dc:	ldr	x2, [x0, #2512]
   4f4e0:	add	x0, x0, #0x9d0
   4f4e4:	blr	x2
   4f4e8:	ldr	x2, [sp, #168]
   4f4ec:	str	x2, [x21, x0]
   4f4f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f4f4:	ldr	x2, [x0, #2544]
   4f4f8:	add	x0, x0, #0x9f0
   4f4fc:	blr	x2
   4f500:	ldr	x2, [sp, #176]
   4f504:	str	x2, [x21, x0]
   4f508:	mov	w2, #0xffffffff            	// #-1
   4f50c:	ldr	w1, [sp, #152]
   4f510:	mov	x0, x27
   4f514:	bl	bf40 <mpfr_overflow@plt>
   4f518:	mov	w19, w0
   4f51c:	ldp	x21, x22, [sp, #32]
   4f520:	ldp	x23, x24, [sp, #48]
   4f524:	b	504a4 <mpfr_yn@@Base+0x17b4>
   4f528:	add	x20, sp, #0x1f0
   4f52c:	ldr	w3, [sp, #504]
   4f530:	ldr	w2, [sp, #152]
   4f534:	mov	x1, x20
   4f538:	mov	x0, x27
   4f53c:	bl	c6a0 <mpfr_set4@plt>
   4f540:	mov	w19, w0
   4f544:	mov	x0, x20
   4f548:	bl	c070 <mpfr_clear@plt>
   4f54c:	b	5030c <mpfr_yn@@Base+0x161c>
   4f550:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4f554:	add	x2, x2, #0xfd8
   4f558:	mov	w1, #0x36                  	// #54
   4f55c:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4f560:	add	x0, x0, #0xff8
   4f564:	bl	cb40 <mpfr_assert_fail@plt>
   4f568:	b	4edf8 <mpfr_yn@@Base+0x108>
   4f56c:	mov	x0, #0x0                   	// #0
   4f570:	b	4ee10 <mpfr_yn@@Base+0x120>
   4f574:	mov	w2, #0x0                   	// #0
   4f578:	ldr	x0, [sp, #144]
   4f57c:	mov	x1, x0
   4f580:	bl	bd70 <mpfr_neg@plt>
   4f584:	b	4ef08 <mpfr_yn@@Base+0x218>
   4f588:	mov	w3, w21
   4f58c:	ldr	x2, [sp, #96]
   4f590:	mov	x1, x20
   4f594:	mov	x0, x20
   4f598:	bl	c8f0 <mpfr_div_2ui@plt>
   4f59c:	ldr	w0, [sp, #376]
   4f5a0:	cmp	w0, #0x0
   4f5a4:	b.le	4f77c <mpfr_yn@@Base+0xa8c>
   4f5a8:	mov	w3, w21
   4f5ac:	mov	x2, x19
   4f5b0:	mov	x1, x20
   4f5b4:	mov	x0, x20
   4f5b8:	bl	c1a0 <mpfr_add@plt>
   4f5bc:	mov	w3, w21
   4f5c0:	ldr	x2, [sp, #136]
   4f5c4:	mov	x1, x20
   4f5c8:	mov	x0, x20
   4f5cc:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f5d0:	add	w22, w22, #0x1
   4f5d4:	mov	w3, w21
   4f5d8:	mov	x2, x24
   4f5dc:	mov	x1, x20
   4f5e0:	mov	x0, x20
   4f5e4:	bl	c1a0 <mpfr_add@plt>
   4f5e8:	cmp	w22, #0x3
   4f5ec:	b.gt	4f810 <mpfr_yn@@Base+0xb20>
   4f5f0:	add	x27, x27, #0x2
   4f5f4:	add	x23, x23, #0x1
   4f5f8:	ldr	x0, [sp, #112]
   4f5fc:	add	x0, x0, #0x6
   4f600:	str	x0, [sp, #112]
   4f604:	sub	x25, x23, #0x1
   4f608:	mov	w3, #0x0                   	// #0
   4f60c:	mov	x2, x27
   4f610:	mov	x1, x19
   4f614:	mov	x0, x19
   4f618:	bl	c960 <mpfr_mul_si@plt>
   4f61c:	mov	w3, #0x0                   	// #0
   4f620:	ldr	x0, [sp, #184]
   4f624:	sub	x2, x0, x27
   4f628:	mov	x1, x19
   4f62c:	mov	x0, x19
   4f630:	bl	c960 <mpfr_mul_si@plt>
   4f634:	mov	w3, #0x0                   	// #0
   4f638:	mov	x2, x25
   4f63c:	mov	x1, x19
   4f640:	mov	x0, x19
   4f644:	bl	cc60 <mpfr_div_ui@plt>
   4f648:	mov	w3, #0x0                   	// #0
   4f64c:	ldr	x2, [sp, #128]
   4f650:	mov	x1, x19
   4f654:	mov	x0, x19
   4f658:	bl	bd50 <mpfr_mul@plt>
   4f65c:	ldr	w0, [sp, #376]
   4f660:	cmp	w0, #0x0
   4f664:	cset	w3, le
   4f668:	add	w3, w3, #0x2
   4f66c:	ldr	x2, [sp, #112]
   4f670:	mov	x1, x19
   4f674:	mov	x0, x24
   4f678:	bl	ba50 <mpfr_mul_ui@plt>
   4f67c:	mov	w3, #0x1                   	// #1
   4f680:	mov	w2, #0x0                   	// #0
   4f684:	mov	x1, x24
   4f688:	mov	x0, x24
   4f68c:	bl	c6a0 <mpfr_set4@plt>
   4f690:	mov	w3, #0x1                   	// #1
   4f694:	mov	w2, w21
   4f698:	mov	x1, x19
   4f69c:	mov	x0, x28
   4f6a0:	bl	c6a0 <mpfr_set4@plt>
   4f6a4:	ldr	x0, [sp, #96]
   4f6a8:	str	x0, [sp, #136]
   4f6ac:	mov	w3, w21
   4f6b0:	mov	x2, x0
   4f6b4:	mov	x1, x28
   4f6b8:	mov	x0, x28
   4f6bc:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f6c0:	mov	w3, w21
   4f6c4:	mov	x2, x24
   4f6c8:	mov	x1, x28
   4f6cc:	mov	x0, x28
   4f6d0:	bl	c1a0 <mpfr_add@plt>
   4f6d4:	cmp	w22, #0x1
   4f6d8:	b.gt	4f588 <mpfr_yn@@Base+0x898>
   4f6dc:	tbz	w25, #0, 4f7ac <mpfr_yn@@Base+0xabc>
   4f6e0:	tbnz	w25, #1, 4f794 <mpfr_yn@@Base+0xaa4>
   4f6e4:	add	x0, sp, #0x150
   4f6e8:	mov	w3, #0x0                   	// #0
   4f6ec:	mov	x2, x19
   4f6f0:	mov	x1, x0
   4f6f4:	bl	c1a0 <mpfr_add@plt>
   4f6f8:	ldr	x1, [sp, #512]
   4f6fc:	ldr	x0, [sp, #352]
   4f700:	add	w22, w22, #0x1
   4f704:	cmp	x1, x0
   4f708:	b.le	4f7d8 <mpfr_yn@@Base+0xae8>
   4f70c:	mov	w3, w21
   4f710:	mov	x2, x24
   4f714:	mov	x1, x20
   4f718:	mov	x0, x20
   4f71c:	bl	c1a0 <mpfr_add@plt>
   4f720:	mov	w22, #0x0                   	// #0
   4f724:	ldr	w0, [x26, #8]
   4f728:	cmp	w0, #0x0
   4f72c:	b.le	4f748 <mpfr_yn@@Base+0xa58>
   4f730:	add	x1, x23, x23, lsr #63
   4f734:	mov	x2, #0x0                   	// #0
   4f738:	asr	x1, x1, #1
   4f73c:	mov	x0, x26
   4f740:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4f744:	tbnz	w0, #31, 504c0 <mpfr_yn@@Base+0x17d0>
   4f748:	ldr	w0, [x26, #8]
   4f74c:	tbz	w0, #31, 4f5f0 <mpfr_yn@@Base+0x900>
   4f750:	add	x1, x23, x23, lsr #63
   4f754:	mov	x2, #0x0                   	// #0
   4f758:	neg	x1, x1, asr #1
   4f75c:	mov	x0, x26
   4f760:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4f764:	cmp	w0, #0x0
   4f768:	ldr	w1, [sp, #160]
   4f76c:	csinc	w1, w1, wzr, le
   4f770:	str	w1, [sp, #160]
   4f774:	csel	w22, w22, w21, le
   4f778:	b	4f5f0 <mpfr_yn@@Base+0x900>
   4f77c:	mov	w3, w21
   4f780:	mov	x2, x19
   4f784:	mov	x1, x20
   4f788:	mov	x0, x20
   4f78c:	bl	bb70 <mpfr_sub@plt>
   4f790:	b	4f5bc <mpfr_yn@@Base+0x8cc>
   4f794:	add	x0, sp, #0x150
   4f798:	mov	w3, #0x0                   	// #0
   4f79c:	mov	x2, x19
   4f7a0:	mov	x1, x0
   4f7a4:	bl	bb70 <mpfr_sub@plt>
   4f7a8:	b	4f6f8 <mpfr_yn@@Base+0xa08>
   4f7ac:	tbnz	w25, #1, 4f7f8 <mpfr_yn@@Base+0xb08>
   4f7b0:	mov	w3, #0x0                   	// #0
   4f7b4:	mov	x2, x19
   4f7b8:	ldr	x0, [sp, #120]
   4f7bc:	mov	x1, x0
   4f7c0:	bl	c1a0 <mpfr_add@plt>
   4f7c4:	ldr	x1, [sp, #512]
   4f7c8:	ldr	x0, [sp, #320]
   4f7cc:	add	w22, w22, #0x1
   4f7d0:	cmp	x1, x0
   4f7d4:	b.gt	4f70c <mpfr_yn@@Base+0xa1c>
   4f7d8:	mov	w3, w21
   4f7dc:	mov	x2, x24
   4f7e0:	mov	x1, x20
   4f7e4:	mov	x0, x20
   4f7e8:	bl	c1a0 <mpfr_add@plt>
   4f7ec:	cmp	w22, #0x1
   4f7f0:	b.gt	4f5f0 <mpfr_yn@@Base+0x900>
   4f7f4:	b	4f724 <mpfr_yn@@Base+0xa34>
   4f7f8:	mov	w3, #0x0                   	// #0
   4f7fc:	mov	x2, x19
   4f800:	ldr	x0, [sp, #120]
   4f804:	mov	x1, x0
   4f808:	bl	bb70 <mpfr_sub@plt>
   4f80c:	b	4f7c4 <mpfr_yn@@Base+0xad4>
   4f810:	ldr	x25, [sp, #200]
   4f814:	ldr	x0, [sp, #104]
   4f818:	and	x22, x0, #0x1
   4f81c:	tbnz	w0, #0, 4fd54 <mpfr_yn@@Base+0x1064>
   4f820:	mov	w3, #0x0                   	// #0
   4f824:	ldr	x2, [sp, #120]
   4f828:	mov	x1, x25
   4f82c:	mov	x0, x25
   4f830:	bl	bd50 <mpfr_mul@plt>
   4f834:	mov	w3, #0x0                   	// #0
   4f838:	add	x2, sp, #0x150
   4f83c:	ldr	x23, [sp, #144]
   4f840:	mov	x1, x23
   4f844:	mov	x0, x23
   4f848:	bl	bd50 <mpfr_mul@plt>
   4f84c:	ldr	x0, [sp, #288]
   4f850:	ldr	x21, [sp, #256]
   4f854:	cmp	x21, x0
   4f858:	csel	x21, x21, x0, ge  // ge = tcont
   4f85c:	mov	w3, #0x0                   	// #0
   4f860:	mov	x2, x25
   4f864:	mov	x1, x23
   4f868:	mov	x0, x23
   4f86c:	bl	c1a0 <mpfr_add@plt>
   4f870:	ldr	x0, [sp, #104]
   4f874:	tbnz	w0, #1, 4fda8 <mpfr_yn@@Base+0x10b8>
   4f878:	ldr	x0, [sp, #256]
   4f87c:	cmp	x0, x21
   4f880:	csel	x21, x0, x21, ge  // ge = tcont
   4f884:	ldr	x2, [sp, #320]
   4f888:	ldr	x0, [sp, #352]
   4f88c:	add	x3, x2, #0x2
   4f890:	add	x1, x0, #0x2
   4f894:	cmp	x2, x0
   4f898:	csel	x1, x1, x3, lt  // lt = tstop
   4f89c:	ldr	x2, [sp, #480]
   4f8a0:	add	x3, x2, #0x2
   4f8a4:	add	x0, x21, #0x2
   4f8a8:	cmp	x21, x2
   4f8ac:	csel	x21, x0, x3, gt
   4f8b0:	add	x0, x1, #0x1
   4f8b4:	cmp	x1, x21
   4f8b8:	csinc	x21, x0, x21, gt
   4f8bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   4f8c0:	ldr	x1, [x0, #2624]
   4f8c4:	add	x0, x0, #0xa40
   4f8c8:	blr	x1
   4f8cc:	mov	w2, #0x0                   	// #0
   4f8d0:	mrs	x1, tpidr_el0
   4f8d4:	add	x1, x1, x0
   4f8d8:	mov	x0, x25
   4f8dc:	bl	c380 <mpfr_cache@plt>
   4f8e0:	mov	w3, #0x0                   	// #0
   4f8e4:	mov	x2, x26
   4f8e8:	mov	x1, x25
   4f8ec:	mov	x0, x25
   4f8f0:	bl	bd50 <mpfr_mul@plt>
   4f8f4:	ldr	w0, [x26, #8]
   4f8f8:	mov	x1, #0xffffffffffffffff    	// #-1
   4f8fc:	cmp	w0, #0x0
   4f900:	mov	w3, #0x0                   	// #0
   4f904:	mov	x2, x25
   4f908:	cneg	x1, x1, gt
   4f90c:	mov	x0, x25
   4f910:	bl	c8b0 <mpfr_si_div@plt>
   4f914:	mov	w2, #0x0                   	// #0
   4f918:	mov	x1, x25
   4f91c:	mov	x0, x25
   4f920:	bl	c930 <mpfr_sqrt@plt>
   4f924:	ldr	w1, [sp, #280]
   4f928:	ldr	w0, [sp, #248]
   4f92c:	cmp	w1, w0
   4f930:	cset	w3, ne  // ne = any
   4f934:	add	w3, w3, #0x2
   4f938:	ldr	x27, [sp, #144]
   4f93c:	mov	x2, x27
   4f940:	mov	x1, x25
   4f944:	mov	x0, x24
   4f948:	bl	bd50 <mpfr_mul@plt>
   4f94c:	mov	w3, #0x1                   	// #1
   4f950:	mov	w2, #0x2                   	// #2
   4f954:	mov	x1, x24
   4f958:	mov	x0, x24
   4f95c:	bl	c6a0 <mpfr_set4@plt>
   4f960:	mov	w3, #0x2                   	// #2
   4f964:	mov	x2, #0x3                   	// #3
   4f968:	mov	x1, x24
   4f96c:	mov	x0, x24
   4f970:	bl	ba50 <mpfr_mul_ui@plt>
   4f974:	ldr	x23, [sp, #288]
   4f978:	add	x23, x21, x23
   4f97c:	mov	w3, #0x0                   	// #0
   4f980:	mov	x2, x27
   4f984:	mov	x1, x25
   4f988:	mov	x0, x25
   4f98c:	bl	bd50 <mpfr_mul@plt>
   4f990:	ldr	x21, [sp, #448]
   4f994:	ldr	x0, [sp, #288]
   4f998:	add	x2, x0, #0x1
   4f99c:	cmp	x21, x0
   4f9a0:	csinc	x21, x2, x21, le
   4f9a4:	add	x2, x23, #0x1
   4f9a8:	cmp	x23, x21
   4f9ac:	csinc	x21, x2, x21, gt
   4f9b0:	mov	x0, x27
   4f9b4:	bl	c070 <mpfr_clear@plt>
   4f9b8:	ldr	x0, [sp, #120]
   4f9bc:	bl	c070 <mpfr_clear@plt>
   4f9c0:	add	x0, sp, #0x150
   4f9c4:	bl	c070 <mpfr_clear@plt>
   4f9c8:	mov	x0, x19
   4f9cc:	bl	c070 <mpfr_clear@plt>
   4f9d0:	ldr	x0, [sp, #128]
   4f9d4:	bl	c070 <mpfr_clear@plt>
   4f9d8:	mov	x0, x24
   4f9dc:	bl	c070 <mpfr_clear@plt>
   4f9e0:	mov	x0, x20
   4f9e4:	bl	c070 <mpfr_clear@plt>
   4f9e8:	mov	x0, x28
   4f9ec:	bl	c070 <mpfr_clear@plt>
   4f9f0:	ldr	x0, [sp, #288]
   4f9f4:	sub	x21, x21, x0
   4f9f8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4f9fc:	cmp	x0, x1
   4fa00:	b.le	4fdbc <mpfr_yn@@Base+0x10cc>
   4fa04:	ldr	w0, [sp, #152]
   4fa08:	cmp	w0, #0x0
   4fa0c:	ldr	x0, [sp, #192]
   4fa10:	ldr	x3, [x0]
   4fa14:	cinc	x3, x3, eq  // eq = none
   4fa18:	ldr	x0, [sp, #272]
   4fa1c:	add	x1, x0, #0x3e
   4fa20:	subs	x0, x0, #0x1
   4fa24:	csel	x1, x1, x0, mi  // mi = first
   4fa28:	asr	x1, x1, #6
   4fa2c:	ldr	x0, [sp, #96]
   4fa30:	sub	x2, x0, x21
   4fa34:	add	x1, x1, #0x1
   4fa38:	ldr	x0, [sp, #296]
   4fa3c:	bl	c370 <mpfr_round_p@plt>
   4fa40:	cbz	w0, 4fdbc <mpfr_yn@@Base+0x10cc>
   4fa44:	ldr	x28, [sp, #216]
   4fa48:	ldr	x27, [sp, #192]
   4fa4c:	ldr	w0, [x26, #8]
   4fa50:	cmp	w0, #0x0
   4fa54:	ccmp	x22, #0x0, #0x4, le
   4fa58:	b.ne	4fe2c <mpfr_yn@@Base+0x113c>  // b.any
   4fa5c:	ldr	w3, [sp, #280]
   4fa60:	ldr	w2, [sp, #152]
   4fa64:	add	x1, sp, #0x110
   4fa68:	mov	x0, x27
   4fa6c:	bl	c6a0 <mpfr_set4@plt>
   4fa70:	mov	w19, w0
   4fa74:	add	x0, sp, #0x110
   4fa78:	bl	c070 <mpfr_clear@plt>
   4fa7c:	ldr	w0, [sp, #152]
   4fa80:	cmp	w0, #0x5
   4fa84:	b.eq	5041c <mpfr_yn@@Base+0x172c>  // b.none
   4fa88:	cbnz	w19, 50420 <mpfr_yn@@Base+0x1730>
   4fa8c:	add	x0, sp, #0x150
   4fa90:	bl	bbd0 <mpfr_init@plt>
   4fa94:	add	x0, sp, #0x170
   4fa98:	bl	bbd0 <mpfr_init@plt>
   4fa9c:	add	x0, sp, #0x190
   4faa0:	bl	bbd0 <mpfr_init@plt>
   4faa4:	add	x0, sp, #0x1b0
   4faa8:	bl	bbd0 <mpfr_init@plt>
   4faac:	ldr	x19, [x27]
   4fab0:	cmp	x19, #0x1
   4fab4:	b.eq	4fe60 <mpfr_yn@@Base+0x1170>  // b.none
   4fab8:	b.le	4fe44 <mpfr_yn@@Base+0x1154>
   4fabc:	ldr	x0, [x27]
   4fac0:	sub	x0, x0, #0x1
   4fac4:	clz	x1, x0
   4fac8:	mov	w0, #0x40                  	// #64
   4facc:	sub	w0, w0, w1
   4fad0:	lsl	w0, w0, #1
   4fad4:	sxtw	x0, w0
   4fad8:	add	x0, x19, x0
   4fadc:	add	x0, x0, #0xd
   4fae0:	str	x0, [sp, #96]
   4fae4:	add	x0, x28, #0x1
   4fae8:	str	x0, [sp, #208]
   4faec:	add	x0, x0, x0, lsl #1
   4faf0:	str	x0, [sp, #216]
   4faf4:	sub	x0, x0, #0x1
   4faf8:	mov	x1, #0x40                  	// #64
   4fafc:	str	x1, [sp, #232]
   4fb00:	add	x23, sp, #0x170
   4fb04:	add	x24, sp, #0x190
   4fb08:	clz	x0, x0
   4fb0c:	sub	w0, w1, w0
   4fb10:	str	w0, [sp, #224]
   4fb14:	str	x27, [sp, #136]
   4fb18:	str	x26, [sp, #112]
   4fb1c:	add	x19, sp, #0x150
   4fb20:	ldr	x20, [sp, #96]
   4fb24:	mov	x1, x20
   4fb28:	mov	x0, x19
   4fb2c:	bl	bed0 <mpfr_set_prec@plt>
   4fb30:	mov	x1, x20
   4fb34:	mov	x0, x23
   4fb38:	bl	bed0 <mpfr_set_prec@plt>
   4fb3c:	mov	x1, x20
   4fb40:	mov	x0, x24
   4fb44:	bl	bed0 <mpfr_set_prec@plt>
   4fb48:	mov	x1, x20
   4fb4c:	add	x0, sp, #0x1b0
   4fb50:	bl	bed0 <mpfr_set_prec@plt>
   4fb54:	mov	w3, #0x0                   	// #0
   4fb58:	ldr	x20, [sp, #112]
   4fb5c:	mov	x2, x20
   4fb60:	mov	x1, x20
   4fb64:	mov	x0, x19
   4fb68:	bl	bd50 <mpfr_mul@plt>
   4fb6c:	mov	w3, #0x0                   	// #0
   4fb70:	mov	x2, #0x2                   	// #2
   4fb74:	mov	x1, x19
   4fb78:	mov	x0, x19
   4fb7c:	bl	c8f0 <mpfr_div_2ui@plt>
   4fb80:	mov	w3, #0x0                   	// #0
   4fb84:	mov	x2, x28
   4fb88:	mov	x1, x20
   4fb8c:	mov	x0, x24
   4fb90:	bl	bf70 <mpfr_pow_ui@plt>
   4fb94:	str	x28, [sp, #144]
   4fb98:	mov	w3, #0x0                   	// #0
   4fb9c:	mov	x2, x28
   4fba0:	mov	x1, x24
   4fba4:	mov	x0, x24
   4fba8:	bl	c420 <mpfr_div_2si@plt>
   4fbac:	ldr	x19, [sp, #104]
   4fbb0:	cbnz	x19, 4fe68 <mpfr_yn@@Base+0x1178>
   4fbb4:	mov	w0, #0x1                   	// #1
   4fbb8:	str	w0, [sp, #376]
   4fbbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4fbc0:	str	x0, [sp, #384]
   4fbc4:	mov	w3, #0x0                   	// #0
   4fbc8:	mov	x2, x24
   4fbcc:	mov	x1, x23
   4fbd0:	mov	x0, x23
   4fbd4:	bl	c620 <mpfr_div@plt>
   4fbd8:	ldr	x0, [sp, #216]
   4fbdc:	cmp	x0, #0x1
   4fbe0:	b.eq	4ff60 <mpfr_yn@@Base+0x1270>  // b.none
   4fbe4:	cmp	x0, #0x1
   4fbe8:	b.ls	4ff48 <mpfr_yn@@Base+0x1258>  // b.plast
   4fbec:	ldrsw	x0, [sp, #224]
   4fbf0:	add	x19, x19, x0
   4fbf4:	add	x0, x19, #0x1
   4fbf8:	str	x0, [sp, #160]
   4fbfc:	add	x19, sp, #0x150
   4fc00:	mov	w2, #0x0                   	// #0
   4fc04:	mov	x1, x19
   4fc08:	mov	x0, x19
   4fc0c:	bl	bd70 <mpfr_neg@plt>
   4fc10:	mov	w1, #0x2                   	// #2
   4fc14:	mov	x0, x19
   4fc18:	bl	bca0 <mpfr_get_ui@plt>
   4fc1c:	cmn	x0, #0x4
   4fc20:	b.hi	4ff68 <mpfr_yn@@Base+0x1278>  // b.pmore
   4fc24:	add	x0, x0, #0x2
   4fc28:	str	x0, [sp, #120]
   4fc2c:	add	x19, sp, #0x110
   4fc30:	mov	x0, x19
   4fc34:	bl	bf90 <mpfr_mpz_init@plt>
   4fc38:	mov	x1, #0x0                   	// #0
   4fc3c:	mov	x0, x19
   4fc40:	bl	bcb0 <__gmpz_set_ui@plt>
   4fc44:	add	x19, sp, #0x130
   4fc48:	mov	x0, x19
   4fc4c:	bl	bf90 <mpfr_mpz_init@plt>
   4fc50:	mov	x1, #0x1                   	// #1
   4fc54:	mov	x0, x19
   4fc58:	bl	bcb0 <__gmpz_set_ui@plt>
   4fc5c:	cbz	x28, 4fca8 <mpfr_yn@@Base+0xfb8>
   4fc60:	mov	x19, #0x1                   	// #1
   4fc64:	add	x20, sp, #0x110
   4fc68:	add	x21, sp, #0x130
   4fc6c:	mov	x2, x19
   4fc70:	mov	x1, x20
   4fc74:	mov	x0, x20
   4fc78:	bl	c100 <__gmpz_mul_ui@plt>
   4fc7c:	mov	x2, x21
   4fc80:	mov	x1, x20
   4fc84:	mov	x0, x20
   4fc88:	bl	c9c0 <__gmpz_add@plt>
   4fc8c:	mov	x2, x19
   4fc90:	mov	x1, x21
   4fc94:	mov	x0, x21
   4fc98:	bl	c100 <__gmpz_mul_ui@plt>
   4fc9c:	add	x19, x19, #0x1
   4fca0:	cmp	x28, x19
   4fca4:	b.cs	4fc6c <mpfr_yn@@Base+0xf7c>  // b.hs, b.nlast
   4fca8:	add	x19, sp, #0x1d0
   4fcac:	ldr	x1, [sp, #432]
   4fcb0:	mov	x0, x19
   4fcb4:	bl	ca80 <mpfr_init2@plt>
   4fcb8:	add	x20, sp, #0x1f0
   4fcbc:	ldr	x1, [sp, #432]
   4fcc0:	mov	x0, x20
   4fcc4:	bl	ca80 <mpfr_init2@plt>
   4fcc8:	mov	w2, #0x0                   	// #0
   4fccc:	mov	x1, x28
   4fcd0:	mov	x0, x19
   4fcd4:	bl	c6e0 <mpfr_fac_ui@plt>
   4fcd8:	mov	w3, #0x0                   	// #0
   4fcdc:	mov	x2, x19
   4fce0:	mov	x1, x24
   4fce4:	mov	x0, x19
   4fce8:	bl	c620 <mpfr_div@plt>
   4fcec:	mov	w3, #0x0                   	// #0
   4fcf0:	add	x2, sp, #0x110
   4fcf4:	mov	x1, x19
   4fcf8:	mov	x0, x20
   4fcfc:	bl	c4d0 <mpfr_mul_z@plt>
   4fd00:	mov	w3, #0x0                   	// #0
   4fd04:	add	x2, sp, #0x130
   4fd08:	mov	x1, x20
   4fd0c:	add	x0, sp, #0x1b0
   4fd10:	bl	cc80 <mpfr_div_z@plt>
   4fd14:	ldr	x27, [sp, #448]
   4fd18:	add	x0, x28, #0x2
   4fd1c:	ldr	x25, [sp, #208]
   4fd20:	mov	x19, #0x1                   	// #1
   4fd24:	add	x1, sp, #0x150
   4fd28:	str	x1, [sp, #128]
   4fd2c:	add	x20, sp, #0x1d0
   4fd30:	add	x22, sp, #0x110
   4fd34:	add	x21, sp, #0x130
   4fd38:	add	x1, sp, #0x1f0
   4fd3c:	str	x28, [sp, #184]
   4fd40:	str	x23, [sp, #192]
   4fd44:	mov	x23, x0
   4fd48:	str	x24, [sp, #200]
   4fd4c:	mov	x24, x1
   4fd50:	b	4ff8c <mpfr_yn@@Base+0x129c>
   4fd54:	mov	w3, #0x0                   	// #0
   4fd58:	add	x2, sp, #0x150
   4fd5c:	mov	x1, x25
   4fd60:	mov	x0, x25
   4fd64:	bl	bd50 <mpfr_mul@plt>
   4fd68:	mov	w3, #0x0                   	// #0
   4fd6c:	ldr	x2, [sp, #120]
   4fd70:	ldr	x23, [sp, #144]
   4fd74:	mov	x1, x23
   4fd78:	mov	x0, x23
   4fd7c:	bl	bd50 <mpfr_mul@plt>
   4fd80:	ldr	x0, [sp, #288]
   4fd84:	ldr	x21, [sp, #256]
   4fd88:	cmp	x21, x0
   4fd8c:	csel	x21, x21, x0, ge  // ge = tcont
   4fd90:	mov	w3, #0x0                   	// #0
   4fd94:	mov	x2, x23
   4fd98:	mov	x1, x25
   4fd9c:	mov	x0, x23
   4fda0:	bl	bb70 <mpfr_sub@plt>
   4fda4:	b	4f870 <mpfr_yn@@Base+0xb80>
   4fda8:	mov	w2, #0x0                   	// #0
   4fdac:	ldr	x0, [sp, #144]
   4fdb0:	mov	x1, x0
   4fdb4:	bl	bd70 <mpfr_neg@plt>
   4fdb8:	b	4f878 <mpfr_yn@@Base+0xb88>
   4fdbc:	ldr	w0, [sp, #160]
   4fdc0:	cbnz	w0, 4fe00 <mpfr_yn@@Base+0x1110>
   4fdc4:	mov	x0, #0xfffffffffffffeff    	// #-257
   4fdc8:	movk	x0, #0x7fff, lsl #48
   4fdcc:	ldr	x1, [sp, #96]
   4fdd0:	sub	x0, x0, x1
   4fdd4:	ldr	x1, [sp, #224]
   4fdd8:	cmp	x0, x1
   4fddc:	b.lt	4fe14 <mpfr_yn@@Base+0x1124>  // b.tstop
   4fde0:	ldr	x0, [sp, #96]
   4fde4:	ldr	x1, [sp, #224]
   4fde8:	add	x0, x0, x1
   4fdec:	str	x0, [sp, #96]
   4fdf0:	add	x0, x0, x0, lsr #63
   4fdf4:	asr	x0, x0, #1
   4fdf8:	str	x0, [sp, #224]
   4fdfc:	b	4ee78 <mpfr_yn@@Base+0x188>
   4fe00:	ldr	x28, [sp, #216]
   4fe04:	ldr	x27, [sp, #192]
   4fe08:	add	x0, sp, #0x110
   4fe0c:	bl	c070 <mpfr_clear@plt>
   4fe10:	b	4fa8c <mpfr_yn@@Base+0xd9c>
   4fe14:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   4fe18:	add	x2, x2, #0x3e8
   4fe1c:	mov	w1, #0x106                 	// #262
   4fe20:	adrp	x0, 66000 <mpfr_bases@@Base+0x900>
   4fe24:	add	x0, x0, #0xff8
   4fe28:	bl	cb40 <mpfr_assert_fail@plt>
   4fe2c:	ldr	w2, [sp, #152]
   4fe30:	add	x1, sp, #0x110
   4fe34:	mov	x0, x27
   4fe38:	bl	bd70 <mpfr_neg@plt>
   4fe3c:	mov	w19, w0
   4fe40:	b	4fa74 <mpfr_yn@@Base+0xd84>
   4fe44:	adrp	x2, 66000 <mpfr_bases@@Base+0x900>
   4fe48:	add	x2, x2, #0xfd8
   4fe4c:	mov	w1, #0x14c                 	// #332
   4fe50:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   4fe54:	add	x0, x0, #0x150
   4fe58:	bl	cb40 <mpfr_assert_fail@plt>
   4fe5c:	b	4fabc <mpfr_yn@@Base+0xdcc>
   4fe60:	mov	x0, #0x0                   	// #0
   4fe64:	b	4fad8 <mpfr_yn@@Base+0xde8>
   4fe68:	add	x19, sp, #0x1f0
   4fe6c:	mov	x0, x19
   4fe70:	bl	bf90 <mpfr_mpz_init@plt>
   4fe74:	mov	x1, #0x1                   	// #1
   4fe78:	mov	x0, x19
   4fe7c:	bl	bcb0 <__gmpz_set_ui@plt>
   4fe80:	mov	w3, #0x0                   	// #0
   4fe84:	mov	x2, #0x0                   	// #0
   4fe88:	mov	x1, #0x1                   	// #1
   4fe8c:	mov	x0, x23
   4fe90:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4fe94:	ldr	x19, [sp, #384]
   4fe98:	cmp	x28, #0x1
   4fe9c:	b.eq	4ff10 <mpfr_yn@@Base+0x1220>  // b.none
   4fea0:	mov	x21, #0x1                   	// #1
   4fea4:	add	x25, sp, #0x150
   4fea8:	add	x20, sp, #0x1f0
   4feac:	sub	x22, x28, x21
   4feb0:	mov	w3, #0x0                   	// #0
   4feb4:	mov	x2, x25
   4feb8:	mov	x1, x23
   4febc:	mov	x0, x23
   4fec0:	bl	bd50 <mpfr_mul@plt>
   4fec4:	mov	x2, x21
   4fec8:	mov	x1, x20
   4fecc:	mov	x0, x20
   4fed0:	bl	c100 <__gmpz_mul_ui@plt>
   4fed4:	mov	x2, x22
   4fed8:	mov	x1, x20
   4fedc:	mov	x0, x20
   4fee0:	bl	c100 <__gmpz_mul_ui@plt>
   4fee4:	mov	w3, #0x0                   	// #0
   4fee8:	mov	x2, x20
   4feec:	mov	x1, x23
   4fef0:	mov	x0, x23
   4fef4:	bl	c480 <mpfr_add_z@plt>
   4fef8:	ldr	x0, [sp, #384]
   4fefc:	cmp	x19, x0
   4ff00:	csel	x19, x19, x0, ge  // ge = tcont
   4ff04:	add	x21, x21, #0x1
   4ff08:	cmp	x28, x21
   4ff0c:	b.ne	4feac <mpfr_yn@@Base+0x11bc>  // b.any
   4ff10:	add	x20, sp, #0x1f0
   4ff14:	mov	x1, x20
   4ff18:	mov	x0, x20
   4ff1c:	bl	bc60 <__gmpz_sqrt@plt>
   4ff20:	mov	w3, #0x0                   	// #0
   4ff24:	mov	x2, x20
   4ff28:	mov	x1, x23
   4ff2c:	mov	x0, x23
   4ff30:	bl	cc80 <mpfr_div_z@plt>
   4ff34:	mov	x0, x20
   4ff38:	bl	c170 <mpfr_mpz_clear@plt>
   4ff3c:	ldr	x0, [sp, #384]
   4ff40:	sub	x19, x19, x0
   4ff44:	b	4fbc4 <mpfr_yn@@Base+0xed4>
   4ff48:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4ff4c:	add	x2, x2, #0x158
   4ff50:	mov	w1, #0x167                 	// #359
   4ff54:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   4ff58:	add	x0, x0, #0x150
   4ff5c:	bl	cb40 <mpfr_assert_fail@plt>
   4ff60:	mov	x0, #0x0                   	// #0
   4ff64:	b	4fbf0 <mpfr_yn@@Base+0xf00>
   4ff68:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   4ff6c:	add	x2, x2, #0x170
   4ff70:	mov	w1, #0x5d                  	// #93
   4ff74:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   4ff78:	add	x0, x0, #0x150
   4ff7c:	bl	cb40 <mpfr_assert_fail@plt>
   4ff80:	add	x19, x19, #0x1
   4ff84:	add	x25, x25, #0x1
   4ff88:	add	x23, x23, #0x2
   4ff8c:	mov	w3, #0x0                   	// #0
   4ff90:	ldr	x2, [sp, #128]
   4ff94:	mov	x1, x20
   4ff98:	mov	x0, x20
   4ff9c:	bl	bd50 <mpfr_mul@plt>
   4ffa0:	mov	w3, #0x0                   	// #0
   4ffa4:	mov	x2, x19
   4ffa8:	mov	x1, x20
   4ffac:	mov	x0, x20
   4ffb0:	bl	cc60 <mpfr_div_ui@plt>
   4ffb4:	mov	w3, #0x0                   	// #0
   4ffb8:	mov	x2, x25
   4ffbc:	mov	x1, x20
   4ffc0:	mov	x0, x20
   4ffc4:	bl	cc60 <mpfr_div_ui@plt>
   4ffc8:	mov	x2, x19
   4ffcc:	mov	x1, x22
   4ffd0:	mov	x0, x22
   4ffd4:	bl	c100 <__gmpz_mul_ui@plt>
   4ffd8:	mov	x2, x25
   4ffdc:	mov	x1, x22
   4ffe0:	mov	x0, x22
   4ffe4:	bl	c100 <__gmpz_mul_ui@plt>
   4ffe8:	lsl	x28, x19, #1
   4ffec:	mov	x2, x23
   4fff0:	mov	x1, x21
   4fff4:	mov	x0, x22
   4fff8:	bl	cc30 <__gmpz_addmul_ui@plt>
   4fffc:	mov	x2, x19
   50000:	mov	x1, x21
   50004:	mov	x0, x21
   50008:	bl	c100 <__gmpz_mul_ui@plt>
   5000c:	mov	x2, x25
   50010:	mov	x1, x21
   50014:	mov	x0, x21
   50018:	bl	c100 <__gmpz_mul_ui@plt>
   5001c:	mov	w3, #0x0                   	// #0
   50020:	mov	x2, x22
   50024:	mov	x1, x20
   50028:	mov	x0, x24
   5002c:	bl	c4d0 <mpfr_mul_z@plt>
   50030:	mov	w3, #0x0                   	// #0
   50034:	mov	x2, x21
   50038:	mov	x1, x24
   5003c:	mov	x0, x24
   50040:	bl	cc80 <mpfr_div_z@plt>
   50044:	ldr	x26, [sp, #512]
   50048:	add	x0, sp, #0x1b0
   5004c:	mov	w3, #0x0                   	// #0
   50050:	mov	x2, x24
   50054:	mov	x1, x0
   50058:	bl	c1a0 <mpfr_add@plt>
   5005c:	ldr	x1, [sp, #448]
   50060:	cmp	x26, x1
   50064:	csel	x26, x26, x1, ge  // ge = tcont
   50068:	cmp	x27, x26
   5006c:	csel	x27, x27, x26, ge  // ge = tcont
   50070:	ldr	x0, [sp, #512]
   50074:	ldr	x2, [sp, #496]
   50078:	add	x0, x0, x2
   5007c:	cmp	x1, x0
   50080:	b.le	4ff80 <mpfr_yn@@Base+0x1290>
   50084:	ldr	x0, [sp, #120]
   50088:	udiv	x28, x0, x28
   5008c:	cmp	x25, x28
   50090:	b.ls	4ff80 <mpfr_yn@@Base+0x1290>  // b.plast
   50094:	ldr	x28, [sp, #184]
   50098:	ldr	x23, [sp, #192]
   5009c:	ldr	x24, [sp, #200]
   500a0:	add	x0, sp, #0x1d0
   500a4:	bl	c070 <mpfr_clear@plt>
   500a8:	add	x0, sp, #0x1f0
   500ac:	bl	c070 <mpfr_clear@plt>
   500b0:	add	x0, sp, #0x110
   500b4:	bl	c170 <mpfr_mpz_clear@plt>
   500b8:	add	x0, sp, #0x130
   500bc:	bl	c170 <mpfr_mpz_clear@plt>
   500c0:	ldr	x1, [sp, #448]
   500c4:	sub	x1, x27, x1
   500c8:	cmn	x19, #0x1
   500cc:	b.eq	50390 <mpfr_yn@@Base+0x16a0>  // b.none
   500d0:	cmn	x19, #0x2
   500d4:	b.cs	50378 <mpfr_yn@@Base+0x1688>  // b.hs, b.nlast
   500d8:	add	x0, x19, #0x1
   500dc:	clz	x0, x0
   500e0:	mov	w2, #0x40                  	// #64
   500e4:	sub	w0, w2, w0
   500e8:	lsl	w0, w0, #1
   500ec:	add	w0, w0, #0x3
   500f0:	sxtw	x0, w0
   500f4:	add	x19, x1, x0
   500f8:	ldr	x20, [sp, #384]
   500fc:	ldr	x0, [sp, #160]
   50100:	add	x20, x0, x20
   50104:	mov	w3, #0x0                   	// #0
   50108:	add	x2, sp, #0x1b0
   5010c:	mov	x1, x23
   50110:	mov	x0, x23
   50114:	bl	c1a0 <mpfr_add@plt>
   50118:	ldr	x0, [sp, #448]
   5011c:	add	x19, x19, x0
   50120:	add	x0, x20, #0x1
   50124:	cmp	x20, x19
   50128:	csinc	x19, x0, x19, ge  // ge = tcont
   5012c:	ldr	x0, [sp, #384]
   50130:	subs	x19, x19, x0
   50134:	csel	x19, x19, xzr, pl  // pl = nfrst
   50138:	add	x19, x19, #0x1
   5013c:	mov	w3, #0x0                   	// #0
   50140:	mov	x2, #0x1                   	// #1
   50144:	ldr	x22, [sp, #112]
   50148:	mov	x1, x22
   5014c:	mov	x0, x24
   50150:	bl	c8f0 <mpfr_div_2ui@plt>
   50154:	mov	w2, #0x0                   	// #0
   50158:	mov	x1, x24
   5015c:	mov	x0, x24
   50160:	bl	c090 <mpfr_log@plt>
   50164:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50168:	ldr	x1, [x0, #2608]
   5016c:	add	x0, x0, #0xa30
   50170:	blr	x1
   50174:	add	x21, sp, #0x1b0
   50178:	mov	w2, #0x0                   	// #0
   5017c:	mrs	x1, tpidr_el0
   50180:	add	x1, x1, x0
   50184:	mov	x0, x21
   50188:	bl	c380 <mpfr_cache@plt>
   5018c:	ldr	x0, [sp, #416]
   50190:	ldr	x20, [sp, #448]
   50194:	cmp	x20, x0
   50198:	csel	x20, x20, x0, ge  // ge = tcont
   5019c:	mov	w3, #0x0                   	// #0
   501a0:	mov	x2, x21
   501a4:	mov	x1, x24
   501a8:	mov	x0, x24
   501ac:	bl	c1a0 <mpfr_add@plt>
   501b0:	ldr	x0, [sp, #416]
   501b4:	sub	x20, x20, x0
   501b8:	mov	w3, #0x0                   	// #0
   501bc:	mov	x2, #0x1                   	// #1
   501c0:	mov	x1, x24
   501c4:	mov	x0, x24
   501c8:	bl	c2c0 <mpfr_mul_2ui@plt>
   501cc:	mov	w3, #0x0                   	// #0
   501d0:	mov	x2, x22
   501d4:	ldr	x1, [sp, #144]
   501d8:	mov	x0, x21
   501dc:	bl	cc10 <mpfr_jn@plt>
   501e0:	mov	w3, #0x0                   	// #0
   501e4:	mov	x2, x21
   501e8:	mov	x1, x24
   501ec:	mov	x0, x24
   501f0:	bl	bd50 <mpfr_mul@plt>
   501f4:	add	x20, x20, #0x4
   501f8:	ldr	x2, [sp, #384]
   501fc:	add	x19, x19, x2
   50200:	ldr	x0, [sp, #416]
   50204:	add	x20, x20, x0
   50208:	mov	w3, #0x0                   	// #0
   5020c:	mov	x2, x23
   50210:	mov	x1, x24
   50214:	mov	x0, x24
   50218:	bl	bb70 <mpfr_sub@plt>
   5021c:	add	x2, x20, #0x1
   50220:	cmp	x19, x20
   50224:	csinc	x19, x2, x19, le
   50228:	ldr	x2, [sp, #416]
   5022c:	subs	x19, x19, x2
   50230:	csel	x19, x19, xzr, pl  // pl = nfrst
   50234:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50238:	ldr	x1, [x0, #2624]
   5023c:	add	x0, x0, #0xa40
   50240:	blr	x1
   50244:	add	x20, sp, #0x150
   50248:	mov	w2, #0x0                   	// #0
   5024c:	mrs	x1, tpidr_el0
   50250:	add	x1, x1, x0
   50254:	mov	x0, x20
   50258:	bl	c380 <mpfr_cache@plt>
   5025c:	mov	w3, #0x0                   	// #0
   50260:	mov	x2, x20
   50264:	mov	x1, x24
   50268:	mov	x0, x24
   5026c:	bl	c620 <mpfr_div@plt>
   50270:	add	x19, x19, #0x2
   50274:	ldr	x1, [sp, #416]
   50278:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5027c:	cmp	x1, x0
   50280:	b.le	50398 <mpfr_yn@@Base+0x16a8>
   50284:	ldr	w0, [sp, #152]
   50288:	cmp	w0, #0x0
   5028c:	ldr	x0, [sp, #136]
   50290:	ldr	x3, [x0]
   50294:	cinc	x3, x3, eq  // eq = none
   50298:	ldr	x0, [sp, #400]
   5029c:	add	x1, x0, #0x3e
   502a0:	subs	x0, x0, #0x1
   502a4:	csel	x1, x1, x0, mi  // mi = first
   502a8:	asr	x1, x1, #6
   502ac:	ldr	x0, [sp, #96]
   502b0:	sub	x2, x0, x19
   502b4:	add	x1, x1, #0x1
   502b8:	ldr	x0, [sp, #424]
   502bc:	bl	c370 <mpfr_round_p@plt>
   502c0:	cbz	w0, 50398 <mpfr_yn@@Base+0x16a8>
   502c4:	ldr	x27, [sp, #136]
   502c8:	ldr	x0, [sp, #104]
   502cc:	tbnz	x0, #63, 503ec <mpfr_yn@@Base+0x16fc>
   502d0:	ldr	w3, [sp, #408]
   502d4:	add	x20, sp, #0x190
   502d8:	ldr	w2, [sp, #152]
   502dc:	mov	x1, x20
   502e0:	mov	x0, x27
   502e4:	bl	c6a0 <mpfr_set4@plt>
   502e8:	mov	w19, w0
   502ec:	add	x0, sp, #0x150
   502f0:	bl	c070 <mpfr_clear@plt>
   502f4:	add	x0, sp, #0x170
   502f8:	bl	c070 <mpfr_clear@plt>
   502fc:	mov	x0, x20
   50300:	bl	c070 <mpfr_clear@plt>
   50304:	add	x0, sp, #0x1b0
   50308:	bl	c070 <mpfr_clear@plt>
   5030c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50310:	ldr	x1, [x0, #2576]
   50314:	add	x0, x0, #0xa10
   50318:	blr	x1
   5031c:	mrs	x1, tpidr_el0
   50320:	ldr	w2, [sp, #156]
   50324:	str	w2, [x1, x0]
   50328:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5032c:	ldr	x2, [x0, #2512]
   50330:	add	x0, x0, #0x9d0
   50334:	blr	x2
   50338:	ldr	x2, [sp, #168]
   5033c:	str	x2, [x1, x0]
   50340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50344:	ldr	x3, [x0, #2544]
   50348:	add	x0, x0, #0x9f0
   5034c:	blr	x3
   50350:	ldr	x3, [sp, #176]
   50354:	str	x3, [x1, x0]
   50358:	ldr	x0, [x27, #16]
   5035c:	cmp	x3, x0
   50360:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   50364:	b.gt	503fc <mpfr_yn@@Base+0x170c>
   50368:	cbnz	w19, 5047c <mpfr_yn@@Base+0x178c>
   5036c:	ldp	x21, x22, [sp, #32]
   50370:	ldp	x23, x24, [sp, #48]
   50374:	b	504a4 <mpfr_yn@@Base+0x17b4>
   50378:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5037c:	add	x2, x2, #0x80
   50380:	mov	w1, #0x92                  	// #146
   50384:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   50388:	add	x0, x0, #0x150
   5038c:	bl	cb40 <mpfr_assert_fail@plt>
   50390:	mov	x0, #0x3                   	// #3
   50394:	b	500f4 <mpfr_yn@@Base+0x1404>
   50398:	mov	x0, #0xfffffffffffffeff    	// #-257
   5039c:	movk	x0, #0x7fff, lsl #48
   503a0:	ldr	x1, [sp, #96]
   503a4:	sub	x0, x0, x1
   503a8:	ldr	x1, [sp, #232]
   503ac:	cmp	x0, x1
   503b0:	b.lt	503d4 <mpfr_yn@@Base+0x16e4>  // b.tstop
   503b4:	ldr	x0, [sp, #96]
   503b8:	ldr	x1, [sp, #232]
   503bc:	add	x0, x0, x1
   503c0:	str	x0, [sp, #96]
   503c4:	add	x0, x0, x0, lsr #63
   503c8:	asr	x0, x0, #1
   503cc:	str	x0, [sp, #232]
   503d0:	b	4fb1c <mpfr_yn@@Base+0xe2c>
   503d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   503d8:	add	x2, x2, #0xd68
   503dc:	mov	w1, #0x196                 	// #406
   503e0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   503e4:	add	x0, x0, #0x150
   503e8:	bl	cb40 <mpfr_assert_fail@plt>
   503ec:	tbz	w0, #0, 502d0 <mpfr_yn@@Base+0x15e0>
   503f0:	ldr	w3, [sp, #408]
   503f4:	neg	w3, w3
   503f8:	b	502d4 <mpfr_yn@@Base+0x15e4>
   503fc:	ldr	w2, [sp, #152]
   50400:	mov	w1, w19
   50404:	mov	x0, x27
   50408:	bl	cb30 <mpfr_check_range@plt>
   5040c:	mov	w19, w0
   50410:	ldp	x21, x22, [sp, #32]
   50414:	ldp	x23, x24, [sp, #48]
   50418:	b	504a4 <mpfr_yn@@Base+0x17b4>
   5041c:	mov	w19, #0x1                   	// #1
   50420:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50424:	ldr	x1, [x0, #2576]
   50428:	add	x0, x0, #0xa10
   5042c:	blr	x1
   50430:	mrs	x1, tpidr_el0
   50434:	ldr	w2, [sp, #156]
   50438:	str	w2, [x1, x0]
   5043c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50440:	ldr	x2, [x0, #2512]
   50444:	add	x0, x0, #0x9d0
   50448:	blr	x2
   5044c:	ldr	x2, [sp, #168]
   50450:	str	x2, [x1, x0]
   50454:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50458:	ldr	x3, [x0, #2544]
   5045c:	add	x0, x0, #0x9f0
   50460:	blr	x3
   50464:	ldr	x3, [sp, #176]
   50468:	str	x3, [x1, x0]
   5046c:	ldr	x0, [x27, #16]
   50470:	cmp	x2, x0
   50474:	ccmp	x3, x0, #0x1, le
   50478:	b.lt	503fc <mpfr_yn@@Base+0x170c>  // b.tstop
   5047c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50480:	ldr	x1, [x0, #2576]
   50484:	add	x0, x0, #0xa10
   50488:	blr	x1
   5048c:	ldr	w1, [sp, #156]
   50490:	orr	w2, w1, #0x8
   50494:	mrs	x1, tpidr_el0
   50498:	str	w2, [x1, x0]
   5049c:	ldp	x21, x22, [sp, #32]
   504a0:	ldp	x23, x24, [sp, #48]
   504a4:	mov	w0, w19
   504a8:	ldp	x19, x20, [sp, #16]
   504ac:	ldp	x25, x26, [sp, #64]
   504b0:	ldp	x27, x28, [sp, #80]
   504b4:	ldp	x29, x30, [sp]
   504b8:	add	sp, sp, #0x210
   504bc:	ret
   504c0:	mov	w0, #0x1                   	// #1
   504c4:	str	w0, [sp, #160]
   504c8:	mov	w22, #0x2                   	// #2
   504cc:	b	4f5f0 <mpfr_yn@@Base+0x900>

00000000000504d0 <mpfr_y0@@Base>:
   504d0:	stp	x29, x30, [sp, #-16]!
   504d4:	mov	x29, sp
   504d8:	mov	w3, w2
   504dc:	mov	x2, x1
   504e0:	mov	x1, #0x0                   	// #0
   504e4:	bl	c5c0 <mpfr_yn@plt>
   504e8:	ldp	x29, x30, [sp], #16
   504ec:	ret

00000000000504f0 <mpfr_y1@@Base>:
   504f0:	stp	x29, x30, [sp, #-16]!
   504f4:	mov	x29, sp
   504f8:	mov	w3, w2
   504fc:	mov	x2, x1
   50500:	mov	x1, #0x1                   	// #1
   50504:	bl	c5c0 <mpfr_yn@plt>
   50508:	ldp	x29, x30, [sp], #16
   5050c:	ret
   50510:	stp	x29, x30, [sp, #-160]!
   50514:	mov	x29, sp
   50518:	stp	x19, x20, [sp, #16]
   5051c:	stp	x21, x22, [sp, #32]
   50520:	stp	x23, x24, [sp, #48]
   50524:	stp	x25, x26, [sp, #64]
   50528:	mov	x23, x0
   5052c:	mov	x20, x1
   50530:	mov	x19, x3
   50534:	mov	x22, x4
   50538:	str	w5, [sp, #108]
   5053c:	ldr	x0, [x3, #16]
   50540:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   50544:	cmp	x0, x1
   50548:	b.le	506b8 <mpfr_y1@@Base+0x1c8>
   5054c:	mov	w24, w2
   50550:	ldr	x2, [x4, #16]
   50554:	cmp	x2, x1
   50558:	b.le	506c8 <mpfr_y1@@Base+0x1d8>
   5055c:	stp	x27, x28, [sp, #80]
   50560:	ldr	w26, [x3, #8]
   50564:	add	x21, sp, #0x90
   50568:	mov	x0, x21
   5056c:	bl	bf90 <mpfr_mpz_init@plt>
   50570:	add	x25, sp, #0x80
   50574:	mov	x0, x25
   50578:	bl	bf90 <mpfr_mpz_init@plt>
   5057c:	add	x0, sp, #0x70
   50580:	bl	bf90 <mpfr_mpz_init@plt>
   50584:	mov	x1, x19
   50588:	mov	x0, x21
   5058c:	bl	cac0 <mpfr_get_z_2exp@plt>
   50590:	mov	x21, x0
   50594:	mov	x1, x22
   50598:	mov	x0, x25
   5059c:	bl	cac0 <mpfr_get_z_2exp@plt>
   505a0:	mov	x19, x0
   505a4:	ldr	w0, [x22, #8]
   505a8:	mov	w22, #0xffffffff            	// #-1
   505ac:	cmp	w0, w26
   505b0:	cneg	w22, w22, eq  // eq = none
   505b4:	ldr	w0, [sp, #148]
   505b8:	cmp	w0, #0x0
   505bc:	cneg	w0, w0, lt  // lt = tstop
   505c0:	str	w0, [sp, #148]
   505c4:	ldr	w0, [sp, #132]
   505c8:	cmp	w0, #0x0
   505cc:	cneg	w0, w0, lt  // lt = tstop
   505d0:	str	w0, [sp, #132]
   505d4:	add	x25, sp, #0x80
   505d8:	mov	x1, #0x0                   	// #0
   505dc:	mov	x0, x25
   505e0:	bl	ba90 <__gmpz_scan1@plt>
   505e4:	mov	x2, x0
   505e8:	add	x19, x19, x0
   505ec:	mov	x1, x25
   505f0:	mov	x0, x25
   505f4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   505f8:	cmp	x21, x19
   505fc:	b.gt	50770 <mpfr_y1@@Base+0x280>
   50600:	mov	w1, #0x2                   	// #2
   50604:	add	x0, sp, #0x90
   50608:	bl	cb60 <__gmpz_sizeinbase@plt>
   5060c:	add	x25, x0, x21
   50610:	mov	w1, #0x2                   	// #2
   50614:	add	x0, sp, #0x80
   50618:	bl	cb60 <__gmpz_sizeinbase@plt>
   5061c:	add	x0, x0, x19
   50620:	cmp	x25, x0
   50624:	b.ge	50740 <mpfr_y1@@Base+0x250>  // b.tcont
   50628:	add	x25, sp, #0x90
   5062c:	mov	x1, x25
   50630:	add	x0, sp, #0x70
   50634:	bl	bfa0 <__gmpz_set@plt>
   50638:	mov	x1, #0x0                   	// #0
   5063c:	mov	x0, x25
   50640:	bl	bcb0 <__gmpz_set_ui@plt>
   50644:	mov	w28, #0x1                   	// #1
   50648:	mov	w27, #0x0                   	// #0
   5064c:	cbnz	w24, 50660 <mpfr_y1@@Base+0x170>
   50650:	mov	x1, #0x0                   	// #0
   50654:	add	x0, sp, #0x90
   50658:	bl	bfe0 <__gmpz_tstbit@plt>
   5065c:	mov	w27, w0
   50660:	cbz	x20, 50684 <mpfr_y1@@Base+0x194>
   50664:	add	x25, sp, #0x90
   50668:	mov	x2, #0x3f                  	// #63
   5066c:	mov	x1, x25
   50670:	mov	x0, x25
   50674:	bl	ba30 <__gmpz_tdiv_r_2exp@plt>
   50678:	mov	x0, x25
   5067c:	bl	ba20 <__gmpz_get_si@plt>
   50680:	str	x0, [x20]
   50684:	ldr	w25, [sp, #116]
   50688:	cbnz	w25, 50974 <mpfr_y1@@Base+0x484>
   5068c:	mov	w0, #0x1                   	// #1
   50690:	str	w0, [x23, #8]
   50694:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   50698:	str	x0, [x23, #16]
   5069c:	tbz	w26, #31, 50998 <mpfr_y1@@Base+0x4a8>
   506a0:	mov	w2, #0x0                   	// #0
   506a4:	mov	x1, x23
   506a8:	mov	x0, x23
   506ac:	bl	bd70 <mpfr_neg@plt>
   506b0:	mov	w25, #0x0                   	// #0
   506b4:	b	50998 <mpfr_y1@@Base+0x4a8>
   506b8:	mov	x1, #0x2                   	// #2
   506bc:	movk	x1, #0x8000, lsl #48
   506c0:	cmp	x0, x1
   506c4:	b.eq	506e4 <mpfr_y1@@Base+0x1f4>  // b.none
   506c8:	ldr	x1, [x22, #16]
   506cc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   506d0:	add	x1, x1, x2
   506d4:	cmp	x1, #0x1
   506d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   506dc:	ccmp	x0, x1, #0x4, hi  // hi = pmore
   506e0:	b.ne	5071c <mpfr_y1@@Base+0x22c>  // b.any
   506e4:	mov	x0, #0x2                   	// #2
   506e8:	movk	x0, #0x8000, lsl #48
   506ec:	str	x0, [x23, #16]
   506f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   506f4:	ldr	x1, [x0, #2576]
   506f8:	add	x0, x0, #0xa10
   506fc:	blr	x1
   50700:	mrs	x1, tpidr_el0
   50704:	add	x0, x1, x0
   50708:	ldr	w1, [x0]
   5070c:	orr	w1, w1, #0x4
   50710:	str	w1, [x0]
   50714:	mov	w25, #0x0                   	// #0
   50718:	b	509c8 <mpfr_y1@@Base+0x4d8>
   5071c:	cbz	x20, 50724 <mpfr_y1@@Base+0x234>
   50720:	str	xzr, [x20]
   50724:	ldr	w3, [x19, #8]
   50728:	ldr	w2, [sp, #108]
   5072c:	mov	x1, x19
   50730:	mov	x0, x23
   50734:	bl	c6a0 <mpfr_set4@plt>
   50738:	mov	w25, w0
   5073c:	b	509c8 <mpfr_y1@@Base+0x4d8>
   50740:	add	x25, sp, #0x80
   50744:	sub	x2, x19, x21
   50748:	mov	x1, x25
   5074c:	mov	x0, x25
   50750:	bl	c200 <__gmpz_mul_2exp@plt>
   50754:	add	x0, sp, #0x90
   50758:	mov	x3, x25
   5075c:	mov	x2, x0
   50760:	add	x1, sp, #0x70
   50764:	bl	bad0 <__gmpz_tdiv_qr@plt>
   50768:	mov	w28, #0x0                   	// #0
   5076c:	b	50648 <mpfr_y1@@Base+0x158>
   50770:	cbz	x20, 5080c <mpfr_y1@@Base+0x31c>
   50774:	add	x27, sp, #0x80
   50778:	mov	x2, #0x3f                  	// #63
   5077c:	mov	x1, x27
   50780:	mov	x0, x27
   50784:	bl	c200 <__gmpz_mul_2exp@plt>
   50788:	add	x25, sp, #0x70
   5078c:	mov	x1, #0x2                   	// #2
   50790:	mov	x0, x25
   50794:	bl	bcb0 <__gmpz_set_ui@plt>
   50798:	mov	x3, x27
   5079c:	sub	x2, x21, x19
   507a0:	mov	x1, x25
   507a4:	mov	x0, x25
   507a8:	bl	cbc0 <__gmpz_powm_ui@plt>
   507ac:	add	x28, sp, #0x90
   507b0:	mov	x2, x28
   507b4:	mov	x1, x25
   507b8:	mov	x0, x25
   507bc:	bl	bff0 <__gmpz_mul@plt>
   507c0:	mov	x2, x27
   507c4:	mov	x1, x25
   507c8:	mov	x0, x25
   507cc:	bl	c8a0 <__gmpz_mod@plt>
   507d0:	mov	x2, #0x3f                  	// #63
   507d4:	mov	x1, x27
   507d8:	mov	x0, x27
   507dc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   507e0:	mov	x3, x27
   507e4:	mov	x2, x25
   507e8:	mov	x1, x25
   507ec:	mov	x0, x28
   507f0:	bl	bad0 <__gmpz_tdiv_qr@plt>
   507f4:	mov	x0, x28
   507f8:	bl	ba20 <__gmpz_get_si@plt>
   507fc:	str	x0, [x20]
   50800:	and	w27, w0, #0x1
   50804:	mov	w28, #0x0                   	// #0
   50808:	b	50684 <mpfr_y1@@Base+0x194>
   5080c:	cbz	w24, 5087c <mpfr_y1@@Base+0x38c>
   50810:	add	x24, sp, #0x70
   50814:	mov	x1, #0x2                   	// #2
   50818:	mov	x0, x24
   5081c:	bl	bcb0 <__gmpz_set_ui@plt>
   50820:	add	x25, sp, #0x80
   50824:	mov	x3, x25
   50828:	sub	x2, x21, x19
   5082c:	mov	x1, x24
   50830:	mov	x0, x24
   50834:	bl	cbc0 <__gmpz_powm_ui@plt>
   50838:	add	x2, sp, #0x90
   5083c:	mov	x1, x24
   50840:	mov	x0, x24
   50844:	bl	bff0 <__gmpz_mul@plt>
   50848:	mov	x2, x25
   5084c:	mov	x1, x24
   50850:	mov	x0, x24
   50854:	bl	c8a0 <__gmpz_mod@plt>
   50858:	ldr	w0, [sp, #116]
   5085c:	cbnz	w0, 50978 <mpfr_y1@@Base+0x488>
   50860:	mov	w0, #0x1                   	// #1
   50864:	str	w0, [x23, #8]
   50868:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5086c:	str	x0, [x23, #16]
   50870:	mov	w25, #0x0                   	// #0
   50874:	tbz	w26, #31, 509ac <mpfr_y1@@Base+0x4bc>
   50878:	b	506a0 <mpfr_y1@@Base+0x1b0>
   5087c:	add	x27, sp, #0x80
   50880:	mov	x2, #0x1                   	// #1
   50884:	mov	x1, x27
   50888:	mov	x0, x27
   5088c:	bl	c200 <__gmpz_mul_2exp@plt>
   50890:	add	x25, sp, #0x70
   50894:	mov	x1, #0x2                   	// #2
   50898:	mov	x0, x25
   5089c:	bl	bcb0 <__gmpz_set_ui@plt>
   508a0:	mov	x3, x27
   508a4:	sub	x2, x21, x19
   508a8:	mov	x1, x25
   508ac:	mov	x0, x25
   508b0:	bl	cbc0 <__gmpz_powm_ui@plt>
   508b4:	add	x2, sp, #0x90
   508b8:	mov	x1, x25
   508bc:	mov	x0, x25
   508c0:	bl	bff0 <__gmpz_mul@plt>
   508c4:	mov	x2, x27
   508c8:	mov	x1, x25
   508cc:	mov	x0, x25
   508d0:	bl	c8a0 <__gmpz_mod@plt>
   508d4:	mov	x2, #0x1                   	// #1
   508d8:	mov	x1, x27
   508dc:	mov	x0, x27
   508e0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   508e4:	mov	x1, x27
   508e8:	mov	x0, x25
   508ec:	bl	bee0 <__gmpz_cmpabs@plt>
   508f0:	tbz	w0, #31, 5095c <mpfr_y1@@Base+0x46c>
   508f4:	ldr	w0, [sp, #116]
   508f8:	cbz	w0, 50860 <mpfr_y1@@Base+0x370>
   508fc:	add	x0, sp, #0x70
   50900:	mov	x2, #0x1                   	// #1
   50904:	mov	x1, x0
   50908:	bl	c200 <__gmpz_mul_2exp@plt>
   5090c:	mov	w27, w24
   50910:	add	x1, sp, #0x80
   50914:	add	x0, sp, #0x70
   50918:	bl	bee0 <__gmpz_cmpabs@plt>
   5091c:	mov	w24, w0
   50920:	add	x0, sp, #0x70
   50924:	mov	x2, #0x1                   	// #1
   50928:	mov	x1, x0
   5092c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   50930:	cmp	w24, #0x0
   50934:	b.le	50a30 <mpfr_y1@@Base+0x540>
   50938:	add	x0, sp, #0x70
   5093c:	add	x2, sp, #0x80
   50940:	mov	x1, x0
   50944:	bl	bde0 <__gmpz_sub@plt>
   50948:	cbz	x20, 50978 <mpfr_y1@@Base+0x488>
   5094c:	ldr	x0, [x20]
   50950:	add	x0, x0, #0x1
   50954:	str	x0, [x20]
   50958:	b	50978 <mpfr_y1@@Base+0x488>
   5095c:	add	x0, sp, #0x70
   50960:	add	x2, sp, #0x80
   50964:	mov	x1, x0
   50968:	bl	bde0 <__gmpz_sub@plt>
   5096c:	mov	w24, #0x1                   	// #1
   50970:	b	508f4 <mpfr_y1@@Base+0x404>
   50974:	cbz	w24, 509e4 <mpfr_y1@@Base+0x4f4>
   50978:	tbnz	w26, #31, 50a68 <mpfr_y1@@Base+0x578>
   5097c:	cmp	x21, x19
   50980:	ldr	w3, [sp, #108]
   50984:	csel	x2, x21, x19, le
   50988:	add	x1, sp, #0x70
   5098c:	mov	x0, x23
   50990:	bl	c4f0 <mpfr_set_z_2exp@plt>
   50994:	mov	w25, w0
   50998:	cbz	x20, 509ac <mpfr_y1@@Base+0x4bc>
   5099c:	sxtw	x22, w22
   509a0:	ldr	x0, [x20]
   509a4:	mul	x22, x0, x22
   509a8:	str	x22, [x20]
   509ac:	add	x0, sp, #0x90
   509b0:	bl	c170 <mpfr_mpz_clear@plt>
   509b4:	add	x0, sp, #0x80
   509b8:	bl	c170 <mpfr_mpz_clear@plt>
   509bc:	add	x0, sp, #0x70
   509c0:	bl	c170 <mpfr_mpz_clear@plt>
   509c4:	ldp	x27, x28, [sp, #80]
   509c8:	mov	w0, w25
   509cc:	ldp	x19, x20, [sp, #16]
   509d0:	ldp	x21, x22, [sp, #32]
   509d4:	ldp	x23, x24, [sp, #48]
   509d8:	ldp	x25, x26, [sp, #64]
   509dc:	ldp	x29, x30, [sp], #160
   509e0:	ret
   509e4:	add	x0, sp, #0x70
   509e8:	mov	x2, #0x1                   	// #1
   509ec:	mov	x1, x0
   509f0:	bl	c200 <__gmpz_mul_2exp@plt>
   509f4:	cbz	w28, 50910 <mpfr_y1@@Base+0x420>
   509f8:	mov	w1, #0x2                   	// #2
   509fc:	add	x0, sp, #0x70
   50a00:	bl	cb60 <__gmpz_sizeinbase@plt>
   50a04:	add	x25, x0, x21
   50a08:	mov	w1, #0x2                   	// #2
   50a0c:	add	x0, sp, #0x80
   50a10:	bl	cb60 <__gmpz_sizeinbase@plt>
   50a14:	add	x0, x0, x19
   50a18:	cmp	x25, x0
   50a1c:	b.ge	50a40 <mpfr_y1@@Base+0x550>  // b.tcont
   50a20:	add	x0, sp, #0x70
   50a24:	mov	x2, #0x1                   	// #1
   50a28:	mov	x1, x0
   50a2c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   50a30:	cmp	w27, #0x0
   50a34:	ccmp	w24, #0x0, #0x0, ne  // ne = any
   50a38:	b.ne	50978 <mpfr_y1@@Base+0x488>  // b.any
   50a3c:	b	50938 <mpfr_y1@@Base+0x448>
   50a40:	add	x24, sp, #0x80
   50a44:	sub	x2, x19, x21
   50a48:	mov	x1, x24
   50a4c:	mov	x0, x24
   50a50:	bl	c200 <__gmpz_mul_2exp@plt>
   50a54:	mov	x1, x24
   50a58:	add	x0, sp, #0x70
   50a5c:	bl	bee0 <__gmpz_cmpabs@plt>
   50a60:	mov	w24, w0
   50a64:	b	50920 <mpfr_y1@@Base+0x430>
   50a68:	ldr	w0, [sp, #116]
   50a6c:	neg	w0, w0
   50a70:	str	w0, [sp, #116]
   50a74:	b	5097c <mpfr_y1@@Base+0x48c>

0000000000050a78 <mpfr_remainder@@Base>:
   50a78:	stp	x29, x30, [sp, #-16]!
   50a7c:	mov	x29, sp
   50a80:	mov	w5, w3
   50a84:	mov	x4, x2
   50a88:	mov	x3, x1
   50a8c:	mov	w2, #0x0                   	// #0
   50a90:	mov	x1, #0x0                   	// #0
   50a94:	bl	50510 <mpfr_y1@@Base+0x20>
   50a98:	ldp	x29, x30, [sp], #16
   50a9c:	ret

0000000000050aa0 <mpfr_remquo@@Base>:
   50aa0:	stp	x29, x30, [sp, #-16]!
   50aa4:	mov	x29, sp
   50aa8:	mov	w5, w4
   50aac:	mov	x4, x3
   50ab0:	mov	x3, x2
   50ab4:	mov	w2, #0x0                   	// #0
   50ab8:	bl	50510 <mpfr_y1@@Base+0x20>
   50abc:	ldp	x29, x30, [sp], #16
   50ac0:	ret

0000000000050ac4 <mpfr_fmod@@Base>:
   50ac4:	stp	x29, x30, [sp, #-16]!
   50ac8:	mov	x29, sp
   50acc:	mov	w5, w3
   50ad0:	mov	x4, x2
   50ad4:	mov	x3, x1
   50ad8:	mov	w2, #0x1                   	// #1
   50adc:	mov	x1, #0x0                   	// #0
   50ae0:	bl	50510 <mpfr_y1@@Base+0x20>
   50ae4:	ldp	x29, x30, [sp], #16
   50ae8:	ret

0000000000050aec <mpfr_fmodquo@@Base>:
   50aec:	stp	x29, x30, [sp, #-16]!
   50af0:	mov	x29, sp
   50af4:	mov	w5, w4
   50af8:	mov	x4, x3
   50afc:	mov	x3, x2
   50b00:	mov	w2, #0x1                   	// #1
   50b04:	bl	50510 <mpfr_y1@@Base+0x20>
   50b08:	ldp	x29, x30, [sp], #16
   50b0c:	ret

0000000000050b10 <mpfr_get_patches@@Base>:
   50b10:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x37b0>
   50b14:	add	x0, x0, #0x210
   50b18:	ret

0000000000050b1c <mpfr_add_d@@Base>:
   50b1c:	stp	x29, x30, [sp, #-144]!
   50b20:	mov	x29, sp
   50b24:	stp	x19, x20, [sp, #16]
   50b28:	stp	x21, x22, [sp, #32]
   50b2c:	stp	x23, x24, [sp, #48]
   50b30:	stp	x25, x26, [sp, #64]
   50b34:	stp	x27, x28, [sp, #80]
   50b38:	mov	x20, x0
   50b3c:	mov	x27, x1
   50b40:	mov	w21, w2
   50b44:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50b48:	ldr	x1, [x0, #2576]
   50b4c:	add	x0, x0, #0xa10
   50b50:	blr	x1
   50b54:	mrs	x3, tpidr_el0
   50b58:	add	x22, x3, x0
   50b5c:	ldr	w19, [x3, x0]
   50b60:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50b64:	ldr	x1, [x0, #2512]
   50b68:	add	x0, x0, #0x9d0
   50b6c:	blr	x1
   50b70:	add	x25, x3, x0
   50b74:	ldr	x23, [x3, x0]
   50b78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50b7c:	ldr	x1, [x0, #2544]
   50b80:	add	x0, x0, #0x9f0
   50b84:	blr	x1
   50b88:	add	x24, x3, x0
   50b8c:	ldr	x26, [x3, x0]
   50b90:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   50b94:	str	x0, [x25]
   50b98:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   50b9c:	str	x0, [x24]
   50ba0:	mov	x0, #0x35                  	// #53
   50ba4:	str	x0, [sp, #112]
   50ba8:	add	x0, sp, #0x68
   50bac:	str	x0, [sp, #136]
   50bb0:	mov	w0, #0x1                   	// #1
   50bb4:	str	w0, [sp, #120]
   50bb8:	add	x28, sp, #0x70
   50bbc:	mov	w1, w2
   50bc0:	mov	x0, x28
   50bc4:	bl	be40 <mpfr_set_d@plt>
   50bc8:	str	wzr, [x22]
   50bcc:	mov	w3, w21
   50bd0:	mov	x2, x28
   50bd4:	mov	x1, x27
   50bd8:	mov	x0, x20
   50bdc:	bl	c1a0 <mpfr_add@plt>
   50be0:	mov	w1, w0
   50be4:	ldr	w3, [x22]
   50be8:	orr	w3, w19, w3
   50bec:	str	w3, [x22]
   50bf0:	str	x23, [x25]
   50bf4:	str	x26, [x24]
   50bf8:	ldr	x0, [x20, #16]
   50bfc:	cmp	x26, x0
   50c00:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   50c04:	b.gt	50c48 <mpfr_add_d@@Base+0x12c>
   50c08:	cbz	w1, 50c28 <mpfr_add_d@@Base+0x10c>
   50c0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50c10:	ldr	x2, [x0, #2576]
   50c14:	add	x0, x0, #0xa10
   50c18:	blr	x2
   50c1c:	orr	w3, w3, #0x8
   50c20:	mrs	x2, tpidr_el0
   50c24:	str	w3, [x2, x0]
   50c28:	mov	w0, w1
   50c2c:	ldp	x19, x20, [sp, #16]
   50c30:	ldp	x21, x22, [sp, #32]
   50c34:	ldp	x23, x24, [sp, #48]
   50c38:	ldp	x25, x26, [sp, #64]
   50c3c:	ldp	x27, x28, [sp, #80]
   50c40:	ldp	x29, x30, [sp], #144
   50c44:	ret
   50c48:	mov	w2, w21
   50c4c:	mov	x0, x20
   50c50:	bl	cb30 <mpfr_check_range@plt>
   50c54:	mov	w1, w0
   50c58:	b	50c28 <mpfr_add_d@@Base+0x10c>

0000000000050c5c <mpfr_sub_d@@Base>:
   50c5c:	stp	x29, x30, [sp, #-144]!
   50c60:	mov	x29, sp
   50c64:	stp	x19, x20, [sp, #16]
   50c68:	stp	x21, x22, [sp, #32]
   50c6c:	stp	x23, x24, [sp, #48]
   50c70:	stp	x25, x26, [sp, #64]
   50c74:	stp	x27, x28, [sp, #80]
   50c78:	mov	x20, x0
   50c7c:	mov	x27, x1
   50c80:	mov	w21, w2
   50c84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50c88:	ldr	x1, [x0, #2576]
   50c8c:	add	x0, x0, #0xa10
   50c90:	blr	x1
   50c94:	mrs	x3, tpidr_el0
   50c98:	add	x22, x3, x0
   50c9c:	ldr	w19, [x3, x0]
   50ca0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50ca4:	ldr	x1, [x0, #2512]
   50ca8:	add	x0, x0, #0x9d0
   50cac:	blr	x1
   50cb0:	add	x25, x3, x0
   50cb4:	ldr	x23, [x3, x0]
   50cb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50cbc:	ldr	x1, [x0, #2544]
   50cc0:	add	x0, x0, #0x9f0
   50cc4:	blr	x1
   50cc8:	add	x24, x3, x0
   50ccc:	ldr	x26, [x3, x0]
   50cd0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   50cd4:	str	x0, [x25]
   50cd8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   50cdc:	str	x0, [x24]
   50ce0:	mov	x0, #0x35                  	// #53
   50ce4:	str	x0, [sp, #112]
   50ce8:	add	x0, sp, #0x68
   50cec:	str	x0, [sp, #136]
   50cf0:	mov	w0, #0x1                   	// #1
   50cf4:	str	w0, [sp, #120]
   50cf8:	add	x28, sp, #0x70
   50cfc:	mov	w1, w2
   50d00:	mov	x0, x28
   50d04:	bl	be40 <mpfr_set_d@plt>
   50d08:	str	wzr, [x22]
   50d0c:	mov	w3, w21
   50d10:	mov	x2, x28
   50d14:	mov	x1, x27
   50d18:	mov	x0, x20
   50d1c:	bl	bb70 <mpfr_sub@plt>
   50d20:	mov	w1, w0
   50d24:	ldr	w3, [x22]
   50d28:	orr	w3, w19, w3
   50d2c:	str	w3, [x22]
   50d30:	str	x23, [x25]
   50d34:	str	x26, [x24]
   50d38:	ldr	x0, [x20, #16]
   50d3c:	cmp	x26, x0
   50d40:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   50d44:	b.gt	50d88 <mpfr_sub_d@@Base+0x12c>
   50d48:	cbz	w1, 50d68 <mpfr_sub_d@@Base+0x10c>
   50d4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50d50:	ldr	x2, [x0, #2576]
   50d54:	add	x0, x0, #0xa10
   50d58:	blr	x2
   50d5c:	orr	w3, w3, #0x8
   50d60:	mrs	x2, tpidr_el0
   50d64:	str	w3, [x2, x0]
   50d68:	mov	w0, w1
   50d6c:	ldp	x19, x20, [sp, #16]
   50d70:	ldp	x21, x22, [sp, #32]
   50d74:	ldp	x23, x24, [sp, #48]
   50d78:	ldp	x25, x26, [sp, #64]
   50d7c:	ldp	x27, x28, [sp, #80]
   50d80:	ldp	x29, x30, [sp], #144
   50d84:	ret
   50d88:	mov	w2, w21
   50d8c:	mov	x0, x20
   50d90:	bl	cb30 <mpfr_check_range@plt>
   50d94:	mov	w1, w0
   50d98:	b	50d68 <mpfr_sub_d@@Base+0x10c>

0000000000050d9c <mpfr_d_sub@@Base>:
   50d9c:	stp	x29, x30, [sp, #-144]!
   50da0:	mov	x29, sp
   50da4:	stp	x19, x20, [sp, #16]
   50da8:	stp	x21, x22, [sp, #32]
   50dac:	stp	x23, x24, [sp, #48]
   50db0:	stp	x25, x26, [sp, #64]
   50db4:	stp	x27, x28, [sp, #80]
   50db8:	mov	x20, x0
   50dbc:	mov	x27, x1
   50dc0:	mov	w21, w2
   50dc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50dc8:	ldr	x1, [x0, #2576]
   50dcc:	add	x0, x0, #0xa10
   50dd0:	blr	x1
   50dd4:	mrs	x3, tpidr_el0
   50dd8:	add	x22, x3, x0
   50ddc:	ldr	w19, [x3, x0]
   50de0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50de4:	ldr	x1, [x0, #2512]
   50de8:	add	x0, x0, #0x9d0
   50dec:	blr	x1
   50df0:	add	x25, x3, x0
   50df4:	ldr	x23, [x3, x0]
   50df8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50dfc:	ldr	x1, [x0, #2544]
   50e00:	add	x0, x0, #0x9f0
   50e04:	blr	x1
   50e08:	add	x24, x3, x0
   50e0c:	ldr	x26, [x3, x0]
   50e10:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   50e14:	str	x0, [x25]
   50e18:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   50e1c:	str	x0, [x24]
   50e20:	mov	x0, #0x35                  	// #53
   50e24:	str	x0, [sp, #112]
   50e28:	add	x0, sp, #0x68
   50e2c:	str	x0, [sp, #136]
   50e30:	mov	w0, #0x1                   	// #1
   50e34:	str	w0, [sp, #120]
   50e38:	add	x28, sp, #0x70
   50e3c:	mov	w1, w2
   50e40:	mov	x0, x28
   50e44:	bl	be40 <mpfr_set_d@plt>
   50e48:	str	wzr, [x22]
   50e4c:	mov	w3, w21
   50e50:	mov	x2, x27
   50e54:	mov	x1, x28
   50e58:	mov	x0, x20
   50e5c:	bl	bb70 <mpfr_sub@plt>
   50e60:	mov	w1, w0
   50e64:	ldr	w3, [x22]
   50e68:	orr	w3, w19, w3
   50e6c:	str	w3, [x22]
   50e70:	str	x23, [x25]
   50e74:	str	x26, [x24]
   50e78:	ldr	x0, [x20, #16]
   50e7c:	cmp	x26, x0
   50e80:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   50e84:	b.gt	50ec8 <mpfr_d_sub@@Base+0x12c>
   50e88:	cbz	w1, 50ea8 <mpfr_d_sub@@Base+0x10c>
   50e8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50e90:	ldr	x2, [x0, #2576]
   50e94:	add	x0, x0, #0xa10
   50e98:	blr	x2
   50e9c:	orr	w3, w3, #0x8
   50ea0:	mrs	x2, tpidr_el0
   50ea4:	str	w3, [x2, x0]
   50ea8:	mov	w0, w1
   50eac:	ldp	x19, x20, [sp, #16]
   50eb0:	ldp	x21, x22, [sp, #32]
   50eb4:	ldp	x23, x24, [sp, #48]
   50eb8:	ldp	x25, x26, [sp, #64]
   50ebc:	ldp	x27, x28, [sp, #80]
   50ec0:	ldp	x29, x30, [sp], #144
   50ec4:	ret
   50ec8:	mov	w2, w21
   50ecc:	mov	x0, x20
   50ed0:	bl	cb30 <mpfr_check_range@plt>
   50ed4:	mov	w1, w0
   50ed8:	b	50ea8 <mpfr_d_sub@@Base+0x10c>

0000000000050edc <mpfr_mul_d@@Base>:
   50edc:	stp	x29, x30, [sp, #-144]!
   50ee0:	mov	x29, sp
   50ee4:	stp	x19, x20, [sp, #16]
   50ee8:	stp	x21, x22, [sp, #32]
   50eec:	stp	x23, x24, [sp, #48]
   50ef0:	stp	x25, x26, [sp, #64]
   50ef4:	stp	x27, x28, [sp, #80]
   50ef8:	mov	x20, x0
   50efc:	mov	x27, x1
   50f00:	mov	w21, w2
   50f04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50f08:	ldr	x1, [x0, #2576]
   50f0c:	add	x0, x0, #0xa10
   50f10:	blr	x1
   50f14:	mrs	x3, tpidr_el0
   50f18:	add	x22, x3, x0
   50f1c:	ldr	w19, [x3, x0]
   50f20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50f24:	ldr	x1, [x0, #2512]
   50f28:	add	x0, x0, #0x9d0
   50f2c:	blr	x1
   50f30:	add	x25, x3, x0
   50f34:	ldr	x23, [x3, x0]
   50f38:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50f3c:	ldr	x1, [x0, #2544]
   50f40:	add	x0, x0, #0x9f0
   50f44:	blr	x1
   50f48:	add	x24, x3, x0
   50f4c:	ldr	x26, [x3, x0]
   50f50:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   50f54:	str	x0, [x25]
   50f58:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   50f5c:	str	x0, [x24]
   50f60:	mov	x0, #0x35                  	// #53
   50f64:	str	x0, [sp, #112]
   50f68:	add	x0, sp, #0x68
   50f6c:	str	x0, [sp, #136]
   50f70:	mov	w0, #0x1                   	// #1
   50f74:	str	w0, [sp, #120]
   50f78:	add	x28, sp, #0x70
   50f7c:	mov	w1, w2
   50f80:	mov	x0, x28
   50f84:	bl	be40 <mpfr_set_d@plt>
   50f88:	str	wzr, [x22]
   50f8c:	mov	w3, w21
   50f90:	mov	x2, x28
   50f94:	mov	x1, x27
   50f98:	mov	x0, x20
   50f9c:	bl	bd50 <mpfr_mul@plt>
   50fa0:	mov	w1, w0
   50fa4:	ldr	w3, [x22]
   50fa8:	orr	w3, w19, w3
   50fac:	str	w3, [x22]
   50fb0:	str	x23, [x25]
   50fb4:	str	x26, [x24]
   50fb8:	ldr	x0, [x20, #16]
   50fbc:	cmp	x26, x0
   50fc0:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   50fc4:	b.gt	51008 <mpfr_mul_d@@Base+0x12c>
   50fc8:	cbz	w1, 50fe8 <mpfr_mul_d@@Base+0x10c>
   50fcc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   50fd0:	ldr	x2, [x0, #2576]
   50fd4:	add	x0, x0, #0xa10
   50fd8:	blr	x2
   50fdc:	orr	w3, w3, #0x8
   50fe0:	mrs	x2, tpidr_el0
   50fe4:	str	w3, [x2, x0]
   50fe8:	mov	w0, w1
   50fec:	ldp	x19, x20, [sp, #16]
   50ff0:	ldp	x21, x22, [sp, #32]
   50ff4:	ldp	x23, x24, [sp, #48]
   50ff8:	ldp	x25, x26, [sp, #64]
   50ffc:	ldp	x27, x28, [sp, #80]
   51000:	ldp	x29, x30, [sp], #144
   51004:	ret
   51008:	mov	w2, w21
   5100c:	mov	x0, x20
   51010:	bl	cb30 <mpfr_check_range@plt>
   51014:	mov	w1, w0
   51018:	b	50fe8 <mpfr_mul_d@@Base+0x10c>

000000000005101c <mpfr_div_d@@Base>:
   5101c:	stp	x29, x30, [sp, #-144]!
   51020:	mov	x29, sp
   51024:	stp	x19, x20, [sp, #16]
   51028:	stp	x21, x22, [sp, #32]
   5102c:	stp	x23, x24, [sp, #48]
   51030:	stp	x25, x26, [sp, #64]
   51034:	stp	x27, x28, [sp, #80]
   51038:	mov	x20, x0
   5103c:	mov	x27, x1
   51040:	mov	w21, w2
   51044:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51048:	ldr	x1, [x0, #2576]
   5104c:	add	x0, x0, #0xa10
   51050:	blr	x1
   51054:	mrs	x3, tpidr_el0
   51058:	add	x22, x3, x0
   5105c:	ldr	w19, [x3, x0]
   51060:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51064:	ldr	x1, [x0, #2512]
   51068:	add	x0, x0, #0x9d0
   5106c:	blr	x1
   51070:	add	x25, x3, x0
   51074:	ldr	x23, [x3, x0]
   51078:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5107c:	ldr	x1, [x0, #2544]
   51080:	add	x0, x0, #0x9f0
   51084:	blr	x1
   51088:	add	x24, x3, x0
   5108c:	ldr	x26, [x3, x0]
   51090:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   51094:	str	x0, [x25]
   51098:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5109c:	str	x0, [x24]
   510a0:	mov	x0, #0x35                  	// #53
   510a4:	str	x0, [sp, #112]
   510a8:	add	x0, sp, #0x68
   510ac:	str	x0, [sp, #136]
   510b0:	mov	w0, #0x1                   	// #1
   510b4:	str	w0, [sp, #120]
   510b8:	add	x28, sp, #0x70
   510bc:	mov	w1, w2
   510c0:	mov	x0, x28
   510c4:	bl	be40 <mpfr_set_d@plt>
   510c8:	str	wzr, [x22]
   510cc:	mov	w3, w21
   510d0:	mov	x2, x28
   510d4:	mov	x1, x27
   510d8:	mov	x0, x20
   510dc:	bl	c620 <mpfr_div@plt>
   510e0:	mov	w1, w0
   510e4:	ldr	w3, [x22]
   510e8:	orr	w3, w19, w3
   510ec:	str	w3, [x22]
   510f0:	str	x23, [x25]
   510f4:	str	x26, [x24]
   510f8:	ldr	x0, [x20, #16]
   510fc:	cmp	x26, x0
   51100:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   51104:	b.gt	51148 <mpfr_div_d@@Base+0x12c>
   51108:	cbz	w1, 51128 <mpfr_div_d@@Base+0x10c>
   5110c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51110:	ldr	x2, [x0, #2576]
   51114:	add	x0, x0, #0xa10
   51118:	blr	x2
   5111c:	orr	w3, w3, #0x8
   51120:	mrs	x2, tpidr_el0
   51124:	str	w3, [x2, x0]
   51128:	mov	w0, w1
   5112c:	ldp	x19, x20, [sp, #16]
   51130:	ldp	x21, x22, [sp, #32]
   51134:	ldp	x23, x24, [sp, #48]
   51138:	ldp	x25, x26, [sp, #64]
   5113c:	ldp	x27, x28, [sp, #80]
   51140:	ldp	x29, x30, [sp], #144
   51144:	ret
   51148:	mov	w2, w21
   5114c:	mov	x0, x20
   51150:	bl	cb30 <mpfr_check_range@plt>
   51154:	mov	w1, w0
   51158:	b	51128 <mpfr_div_d@@Base+0x10c>

000000000005115c <mpfr_d_div@@Base>:
   5115c:	stp	x29, x30, [sp, #-144]!
   51160:	mov	x29, sp
   51164:	stp	x19, x20, [sp, #16]
   51168:	stp	x21, x22, [sp, #32]
   5116c:	stp	x23, x24, [sp, #48]
   51170:	stp	x25, x26, [sp, #64]
   51174:	stp	x27, x28, [sp, #80]
   51178:	mov	x20, x0
   5117c:	mov	x27, x1
   51180:	mov	w21, w2
   51184:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51188:	ldr	x1, [x0, #2576]
   5118c:	add	x0, x0, #0xa10
   51190:	blr	x1
   51194:	mrs	x3, tpidr_el0
   51198:	add	x22, x3, x0
   5119c:	ldr	w19, [x3, x0]
   511a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   511a4:	ldr	x1, [x0, #2512]
   511a8:	add	x0, x0, #0x9d0
   511ac:	blr	x1
   511b0:	add	x25, x3, x0
   511b4:	ldr	x23, [x3, x0]
   511b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   511bc:	ldr	x1, [x0, #2544]
   511c0:	add	x0, x0, #0x9f0
   511c4:	blr	x1
   511c8:	add	x24, x3, x0
   511cc:	ldr	x26, [x3, x0]
   511d0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   511d4:	str	x0, [x25]
   511d8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   511dc:	str	x0, [x24]
   511e0:	mov	x0, #0x35                  	// #53
   511e4:	str	x0, [sp, #112]
   511e8:	add	x0, sp, #0x68
   511ec:	str	x0, [sp, #136]
   511f0:	mov	w0, #0x1                   	// #1
   511f4:	str	w0, [sp, #120]
   511f8:	add	x28, sp, #0x70
   511fc:	mov	w1, w2
   51200:	mov	x0, x28
   51204:	bl	be40 <mpfr_set_d@plt>
   51208:	str	wzr, [x22]
   5120c:	mov	w3, w21
   51210:	mov	x2, x27
   51214:	mov	x1, x28
   51218:	mov	x0, x20
   5121c:	bl	c620 <mpfr_div@plt>
   51220:	mov	w1, w0
   51224:	ldr	w3, [x22]
   51228:	orr	w3, w19, w3
   5122c:	str	w3, [x22]
   51230:	str	x23, [x25]
   51234:	str	x26, [x24]
   51238:	ldr	x0, [x20, #16]
   5123c:	cmp	x26, x0
   51240:	ccmp	x23, x0, #0x0, ge  // ge = tcont
   51244:	b.gt	51288 <mpfr_d_div@@Base+0x12c>
   51248:	cbz	w1, 51268 <mpfr_d_div@@Base+0x10c>
   5124c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51250:	ldr	x2, [x0, #2576]
   51254:	add	x0, x0, #0xa10
   51258:	blr	x2
   5125c:	orr	w3, w3, #0x8
   51260:	mrs	x2, tpidr_el0
   51264:	str	w3, [x2, x0]
   51268:	mov	w0, w1
   5126c:	ldp	x19, x20, [sp, #16]
   51270:	ldp	x21, x22, [sp, #32]
   51274:	ldp	x23, x24, [sp, #48]
   51278:	ldp	x25, x26, [sp, #64]
   5127c:	ldp	x27, x28, [sp, #80]
   51280:	ldp	x29, x30, [sp], #144
   51284:	ret
   51288:	mov	w2, w21
   5128c:	mov	x0, x20
   51290:	bl	cb30 <mpfr_check_range@plt>
   51294:	mov	w1, w0
   51298:	b	51268 <mpfr_d_div@@Base+0x10c>
   5129c:	stp	x29, x30, [sp, #-288]!
   512a0:	mov	x29, sp
   512a4:	stp	x19, x20, [sp, #16]
   512a8:	stp	x21, x22, [sp, #32]
   512ac:	stp	x23, x24, [sp, #48]
   512b0:	stp	x25, x26, [sp, #64]
   512b4:	stp	x27, x28, [sp, #80]
   512b8:	str	x0, [sp, #152]
   512bc:	str	x1, [sp, #128]
   512c0:	str	w2, [sp, #148]
   512c4:	ldr	x0, [x0]
   512c8:	str	x0, [sp, #136]
   512cc:	cmp	x0, #0x1
   512d0:	b.eq	51368 <mpfr_d_div@@Base+0x20c>  // b.none
   512d4:	b.le	51350 <mpfr_d_div@@Base+0x1f4>
   512d8:	ldr	x0, [sp, #136]
   512dc:	sub	x0, x0, #0x1
   512e0:	clz	x0, x0
   512e4:	mov	w28, #0x40                  	// #64
   512e8:	sub	w28, w28, w0
   512ec:	sxtw	x28, w28
   512f0:	ldr	x0, [sp, #136]
   512f4:	add	x28, x28, x0
   512f8:	add	x28, x28, #0x4
   512fc:	mov	x1, x28
   51300:	add	x0, sp, #0x100
   51304:	bl	ca80 <mpfr_init2@plt>
   51308:	mov	x1, x28
   5130c:	add	x0, sp, #0xe0
   51310:	bl	ca80 <mpfr_init2@plt>
   51314:	mov	x1, x28
   51318:	add	x0, sp, #0xc0
   5131c:	bl	ca80 <mpfr_init2@plt>
   51320:	mov	x1, x28
   51324:	add	x0, sp, #0xa0
   51328:	bl	ca80 <mpfr_init2@plt>
   5132c:	mov	x0, #0x40                  	// #64
   51330:	str	x0, [sp, #120]
   51334:	add	x0, sp, #0xe0
   51338:	str	x0, [sp, #104]
   5133c:	mov	w23, #0x2                   	// #2
   51340:	add	x19, sp, #0xc0
   51344:	add	x25, sp, #0x100
   51348:	add	x27, sp, #0xa0
   5134c:	b	513cc <mpfr_d_div@@Base+0x270>
   51350:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51354:	add	x2, x2, #0x1a0
   51358:	mov	w1, #0x31                  	// #49
   5135c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51360:	add	x0, x0, #0x1b0
   51364:	bl	cb40 <mpfr_assert_fail@plt>
   51368:	mov	x28, #0x0                   	// #0
   5136c:	b	512f0 <mpfr_d_div@@Base+0x194>
   51370:	mov	x0, #0xfffffffffffffeff    	// #-257
   51374:	movk	x0, #0x7fff, lsl #48
   51378:	sub	x0, x0, x28
   5137c:	ldr	x1, [sp, #120]
   51380:	cmp	x0, x1
   51384:	b.lt	515b4 <mpfr_d_div@@Base+0x458>  // b.tstop
   51388:	ldr	x0, [sp, #120]
   5138c:	add	x28, x28, x0
   51390:	add	x0, x28, x28, lsr #63
   51394:	asr	x0, x0, #1
   51398:	str	x0, [sp, #120]
   5139c:	mov	x1, x28
   513a0:	mov	x0, x25
   513a4:	bl	bed0 <mpfr_set_prec@plt>
   513a8:	mov	x1, x28
   513ac:	ldr	x0, [sp, #104]
   513b0:	bl	bed0 <mpfr_set_prec@plt>
   513b4:	mov	x1, x28
   513b8:	mov	x0, x19
   513bc:	bl	bed0 <mpfr_set_prec@plt>
   513c0:	mov	x1, x28
   513c4:	mov	x0, x27
   513c8:	bl	bed0 <mpfr_set_prec@plt>
   513cc:	mov	w2, w23
   513d0:	ldr	x20, [sp, #128]
   513d4:	mov	x1, x20
   513d8:	ldr	x0, [sp, #104]
   513dc:	bl	c400 <mpfr_sqr@plt>
   513e0:	ldr	w3, [x20, #8]
   513e4:	mov	w2, w23
   513e8:	mov	x1, x20
   513ec:	mov	x0, x19
   513f0:	bl	c6a0 <mpfr_set4@plt>
   513f4:	ldr	w3, [x20, #8]
   513f8:	mov	w2, w23
   513fc:	mov	x1, x20
   51400:	mov	x0, x25
   51404:	bl	c6a0 <mpfr_set4@plt>
   51408:	ldr	x20, [sp, #272]
   5140c:	mov	x22, #0x1                   	// #1
   51410:	mov	x21, #0x2                   	// #2
   51414:	mov	x26, #0x0                   	// #0
   51418:	str	w22, [sp, #116]
   5141c:	mov	w3, w23
   51420:	mov	x2, x19
   51424:	ldr	x1, [sp, #104]
   51428:	mov	x0, x19
   5142c:	bl	bd50 <mpfr_mul@plt>
   51430:	str	w21, [sp, #144]
   51434:	mov	w3, w23
   51438:	mov	x2, x21
   5143c:	mov	x1, x19
   51440:	mov	x0, x19
   51444:	bl	cc60 <mpfr_div_ui@plt>
   51448:	mov	w3, w23
   5144c:	mov	x2, x21
   51450:	mov	x1, x19
   51454:	mov	x0, x19
   51458:	bl	cc60 <mpfr_div_ui@plt>
   5145c:	add	x24, x21, #0x1
   51460:	mov	w3, w23
   51464:	mov	x2, x24
   51468:	mov	x1, x19
   5146c:	mov	x0, x19
   51470:	bl	cc60 <mpfr_div_ui@plt>
   51474:	mov	w3, w23
   51478:	mov	x2, x24
   5147c:	mov	x1, x19
   51480:	mov	x0, x19
   51484:	bl	cc60 <mpfr_div_ui@plt>
   51488:	mov	x0, x22
   5148c:	bl	c830 <mpfr_bernoulli_cache@plt>
   51490:	mov	w3, #0x0                   	// #0
   51494:	mov	x2, x0
   51498:	mov	x1, x19
   5149c:	mov	x0, x27
   514a0:	bl	c4d0 <mpfr_mul_z@plt>
   514a4:	mov	w3, #0x0                   	// #0
   514a8:	mov	x2, x27
   514ac:	mov	x1, x25
   514b0:	mov	x0, x25
   514b4:	bl	c1a0 <mpfr_add@plt>
   514b8:	ldr	x1, [sp, #176]
   514bc:	add	x0, x22, x22, lsl #2
   514c0:	add	x0, x0, #0x8
   514c4:	add	x0, x0, x1
   514c8:	add	x20, x20, x26
   514cc:	cmp	x0, x20
   514d0:	csel	x0, x0, x20, ge  // ge = tcont
   514d4:	ldr	x20, [sp, #272]
   514d8:	subs	x0, x0, x20
   514dc:	csinv	x0, x0, xzr, pl  // pl = nfrst
   514e0:	add	x26, x0, #0x2
   514e4:	add	x21, x21, #0x2
   514e8:	add	x22, x22, #0x1
   514ec:	sub	x2, x20, x28
   514f0:	cmp	x1, x2
   514f4:	b.gt	51418 <mpfr_d_div@@Base+0x2bc>
   514f8:	ldr	w1, [sp, #116]
   514fc:	add	w1, w1, w1, lsl #1
   51500:	lsl	w1, w1, #1
   51504:	ldr	x2, [sp, #128]
   51508:	ldr	x2, [x2, #16]
   5150c:	sub	x1, x2, w1, sxtw
   51510:	sub	x2, x1, #0x4
   51514:	add	x0, x0, #0x3
   51518:	cmp	x2, x26
   5151c:	csel	x2, x0, x2, le
   51520:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51524:	cmp	x20, x0
   51528:	b.le	51370 <mpfr_d_div@@Base+0x214>
   5152c:	ldr	w0, [sp, #148]
   51530:	cmp	w0, #0x0
   51534:	ldr	x0, [sp, #136]
   51538:	cinc	x3, x0, eq  // eq = none
   5153c:	ldr	x0, [sp, #256]
   51540:	add	x1, x0, #0x3e
   51544:	subs	x0, x0, #0x1
   51548:	csel	x1, x1, x0, mi  // mi = first
   5154c:	asr	x1, x1, #6
   51550:	sub	x2, x28, x2
   51554:	add	x1, x1, #0x1
   51558:	ldr	x0, [sp, #280]
   5155c:	bl	c370 <mpfr_round_p@plt>
   51560:	cbz	w0, 51370 <mpfr_d_div@@Base+0x214>
   51564:	add	x19, sp, #0x100
   51568:	ldr	w3, [sp, #264]
   5156c:	ldr	w2, [sp, #148]
   51570:	mov	x1, x19
   51574:	ldr	x0, [sp, #152]
   51578:	bl	c6a0 <mpfr_set4@plt>
   5157c:	mov	x4, #0x0                   	// #0
   51580:	add	x3, sp, #0xa0
   51584:	add	x2, sp, #0xc0
   51588:	add	x1, sp, #0xe0
   5158c:	mov	x0, x19
   51590:	bl	c1b0 <mpfr_clears@plt>
   51594:	ldr	w0, [sp, #144]
   51598:	ldp	x19, x20, [sp, #16]
   5159c:	ldp	x21, x22, [sp, #32]
   515a0:	ldp	x23, x24, [sp, #48]
   515a4:	ldp	x25, x26, [sp, #64]
   515a8:	ldp	x27, x28, [sp, #80]
   515ac:	ldp	x29, x30, [sp], #288
   515b0:	ret
   515b4:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   515b8:	add	x2, x2, #0x118
   515bc:	mov	w1, #0x5e                  	// #94
   515c0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   515c4:	add	x0, x0, #0x1b0
   515c8:	bl	cb40 <mpfr_assert_fail@plt>

00000000000515cc <mpfr_li2@@Base>:
   515cc:	stp	x29, x30, [sp, #-336]!
   515d0:	mov	x29, sp
   515d4:	stp	x19, x20, [sp, #16]
   515d8:	stp	x25, x26, [sp, #64]
   515dc:	str	x0, [sp, #104]
   515e0:	mov	x26, x1
   515e4:	str	w2, [sp, #112]
   515e8:	ldr	x0, [x1, #16]
   515ec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   515f0:	cmp	x0, x1
   515f4:	b.le	51710 <mpfr_li2@@Base+0x144>
   515f8:	ldr	w1, [x26, #8]
   515fc:	cmp	w1, #0x0
   51600:	b.le	517d8 <mpfr_li2@@Base+0x20c>
   51604:	tbnz	x0, #63, 5179c <mpfr_li2@@Base+0x1d0>
   51608:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5160c:	ldr	x1, [x0, #2576]
   51610:	add	x0, x0, #0xa10
   51614:	blr	x1
   51618:	mrs	x1, tpidr_el0
   5161c:	ldr	w0, [x1, x0]
   51620:	str	w0, [sp, #116]
   51624:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51628:	ldr	x2, [x0, #2512]
   5162c:	add	x0, x0, #0x9d0
   51630:	blr	x2
   51634:	add	x2, x1, x0
   51638:	ldr	x0, [x1, x0]
   5163c:	str	x0, [sp, #120]
   51640:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51644:	ldr	x3, [x0, #2544]
   51648:	add	x0, x0, #0x9f0
   5164c:	blr	x3
   51650:	ldr	x3, [x1, x0]
   51654:	str	x3, [sp, #128]
   51658:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   5165c:	str	x3, [x2]
   51660:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   51664:	str	x2, [x1, x0]
   51668:	ldr	x0, [sp, #104]
   5166c:	ldr	x0, [x0]
   51670:	str	x0, [sp, #96]
   51674:	cmp	x0, #0x1
   51678:	b.eq	5183c <mpfr_li2@@Base+0x270>  // b.none
   5167c:	b.le	51818 <mpfr_li2@@Base+0x24c>
   51680:	stp	x21, x22, [sp, #32]
   51684:	stp	x23, x24, [sp, #48]
   51688:	ldr	x0, [sp, #96]
   5168c:	sub	x20, x0, #0x1
   51690:	clz	x0, x20
   51694:	mov	w20, #0x40                  	// #64
   51698:	sub	w20, w20, w0
   5169c:	sxtw	x20, w20
   516a0:	ldr	x0, [sp, #96]
   516a4:	add	x20, x20, x0
   516a8:	add	x20, x20, #0xd
   516ac:	mov	x0, x26
   516b0:	bl	c710 <mpfr_sgn@plt>
   516b4:	cmp	w0, #0x0
   516b8:	b.le	51ab8 <mpfr_li2@@Base+0x4ec>
   516bc:	mov	x2, #0xffffffffffffffff    	// #-1
   516c0:	mov	x1, #0x1                   	// #1
   516c4:	mov	x0, x26
   516c8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   516cc:	cmp	w0, #0x0
   516d0:	b.gt	51ab8 <mpfr_li2@@Base+0x4ec>
   516d4:	stp	x27, x28, [sp, #80]
   516d8:	mov	x1, x20
   516dc:	add	x0, sp, #0x130
   516e0:	bl	ca80 <mpfr_init2@plt>
   516e4:	mov	x1, x20
   516e8:	add	x0, sp, #0x110
   516ec:	bl	ca80 <mpfr_init2@plt>
   516f0:	mov	x22, #0x40                  	// #64
   516f4:	add	x19, sp, #0x130
   516f8:	mov	x27, #0x1                   	// #1
   516fc:	mov	w24, #0x2                   	// #2
   51700:	add	x25, sp, #0x110
   51704:	mov	x28, #0xfffffffffffffeff    	// #-257
   51708:	movk	x28, #0x7fff, lsl #48
   5170c:	b	5189c <mpfr_li2@@Base+0x2d0>
   51710:	mov	x1, #0x2                   	// #2
   51714:	movk	x1, #0x8000, lsl #48
   51718:	cmp	x0, x1
   5171c:	b.eq	51748 <mpfr_li2@@Base+0x17c>  // b.none
   51720:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   51724:	cmp	x0, x1
   51728:	b.eq	51780 <mpfr_li2@@Base+0x1b4>  // b.none
   5172c:	ldr	w0, [x26, #8]
   51730:	ldr	x1, [sp, #104]
   51734:	str	w0, [x1, #8]
   51738:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5173c:	str	x0, [x1, #16]
   51740:	mov	w19, #0x0                   	// #0
   51744:	b	51a68 <mpfr_li2@@Base+0x49c>
   51748:	mov	x0, x1
   5174c:	ldr	x1, [sp, #104]
   51750:	str	x0, [x1, #16]
   51754:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51758:	ldr	x1, [x0, #2576]
   5175c:	add	x0, x0, #0xa10
   51760:	blr	x1
   51764:	mrs	x1, tpidr_el0
   51768:	add	x0, x1, x0
   5176c:	ldr	w1, [x0]
   51770:	orr	w1, w1, #0x4
   51774:	str	w1, [x0]
   51778:	mov	w19, #0x0                   	// #0
   5177c:	b	51a68 <mpfr_li2@@Base+0x49c>
   51780:	mov	w0, #0xffffffff            	// #-1
   51784:	ldr	x1, [sp, #104]
   51788:	str	w0, [x1, #8]
   5178c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51790:	str	x0, [x1, #16]
   51794:	mov	w19, #0x0                   	// #0
   51798:	b	51a68 <mpfr_li2@@Base+0x49c>
   5179c:	mov	x2, #0x1                   	// #1
   517a0:	sub	x2, x2, x0
   517a4:	ldr	x0, [sp, #104]
   517a8:	ldr	x0, [x0]
   517ac:	add	x0, x0, #0x1
   517b0:	cmp	x0, x2
   517b4:	b.cs	51608 <mpfr_li2@@Base+0x3c>  // b.hs, b.nlast
   517b8:	ldr	w4, [sp, #112]
   517bc:	mov	w3, #0x1                   	// #1
   517c0:	mov	x1, x26
   517c4:	ldr	x0, [sp, #104]
   517c8:	bl	c540 <mpfr_round_near_x@plt>
   517cc:	mov	w19, w0
   517d0:	cbz	w0, 51608 <mpfr_li2@@Base+0x3c>
   517d4:	b	51a68 <mpfr_li2@@Base+0x49c>
   517d8:	tbz	x0, #63, 51608 <mpfr_li2@@Base+0x3c>
   517dc:	mov	x2, #0x2                   	// #2
   517e0:	sub	x2, x2, x0
   517e4:	ldr	x0, [sp, #104]
   517e8:	ldr	x0, [x0]
   517ec:	add	x0, x0, #0x1
   517f0:	cmp	x0, x2
   517f4:	b.cs	51608 <mpfr_li2@@Base+0x3c>  // b.hs, b.nlast
   517f8:	ldr	w4, [sp, #112]
   517fc:	mov	w3, #0x0                   	// #0
   51800:	mov	x1, x26
   51804:	ldr	x0, [sp, #104]
   51808:	bl	c540 <mpfr_round_near_x@plt>
   5180c:	mov	w19, w0
   51810:	cbz	w0, 51608 <mpfr_li2@@Base+0x3c>
   51814:	b	51a68 <mpfr_li2@@Base+0x49c>
   51818:	stp	x21, x22, [sp, #32]
   5181c:	stp	x23, x24, [sp, #48]
   51820:	stp	x27, x28, [sp, #80]
   51824:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51828:	add	x2, x2, #0x1b8
   5182c:	mov	w1, #0x106                 	// #262
   51830:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51834:	add	x0, x0, #0x1b0
   51838:	bl	cb40 <mpfr_assert_fail@plt>
   5183c:	stp	x21, x22, [sp, #32]
   51840:	stp	x23, x24, [sp, #48]
   51844:	mov	x20, #0x0                   	// #0
   51848:	b	516a0 <mpfr_li2@@Base+0xd4>
   5184c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51850:	add	x2, x2, #0x1c8
   51854:	mov	w1, #0x11c                 	// #284
   51858:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5185c:	add	x0, x0, #0x1b0
   51860:	bl	cb40 <mpfr_assert_fail@plt>
   51864:	mov	x21, x27
   51868:	b	51914 <mpfr_li2@@Base+0x348>
   5186c:	sub	x0, x28, x20
   51870:	cmp	x0, x22
   51874:	b.lt	51a7c <mpfr_li2@@Base+0x4b0>  // b.tstop
   51878:	add	x20, x20, x22
   5187c:	add	x22, x20, x20, lsr #63
   51880:	asr	x22, x22, #1
   51884:	mov	x1, x20
   51888:	mov	x0, x19
   5188c:	bl	bed0 <mpfr_set_prec@plt>
   51890:	mov	x1, x20
   51894:	mov	x0, x25
   51898:	bl	bed0 <mpfr_set_prec@plt>
   5189c:	mov	w3, #0x0                   	// #0
   518a0:	mov	x2, x26
   518a4:	mov	x1, x27
   518a8:	mov	x0, x19
   518ac:	bl	ca50 <mpfr_ui_sub@plt>
   518b0:	mov	w2, w24
   518b4:	mov	x1, x19
   518b8:	mov	x0, x19
   518bc:	bl	c090 <mpfr_log@plt>
   518c0:	ldr	x1, [sp, #320]
   518c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   518c8:	cmp	x1, x0
   518cc:	b.eq	5186c <mpfr_li2@@Base+0x2a0>  // b.none
   518d0:	mov	w2, #0x0                   	// #0
   518d4:	mov	x1, x19
   518d8:	mov	x0, x19
   518dc:	bl	bd70 <mpfr_neg@plt>
   518e0:	ldr	x23, [sp, #320]
   518e4:	mov	w2, w24
   518e8:	mov	x1, x19
   518ec:	mov	x0, x25
   518f0:	bl	5129c <mpfr_d_div@@Base+0x140>
   518f4:	cbz	w0, 51864 <mpfr_li2@@Base+0x298>
   518f8:	cmp	w0, #0x0
   518fc:	b.le	5184c <mpfr_li2@@Base+0x280>
   51900:	sxtw	x0, w0
   51904:	clz	x0, x0
   51908:	mov	w21, #0x41                  	// #65
   5190c:	sub	w0, w21, w0
   51910:	sxtw	x21, w0
   51914:	mov	w2, w24
   51918:	mov	x1, x19
   5191c:	mov	x0, x19
   51920:	bl	c400 <mpfr_sqr@plt>
   51924:	mov	w3, w24
   51928:	mov	x2, #0x2                   	// #2
   5192c:	mov	x1, x19
   51930:	mov	x0, x19
   51934:	bl	c8f0 <mpfr_div_2ui@plt>
   51938:	mov	w3, #0x0                   	// #0
   5193c:	mov	x2, x19
   51940:	mov	x1, x25
   51944:	mov	x0, x25
   51948:	bl	bb70 <mpfr_sub@plt>
   5194c:	cmp	x23, #0x0
   51950:	csinv	x23, xzr, x23, ge  // ge = tcont
   51954:	ldr	x2, [sp, #288]
   51958:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5195c:	cmp	x2, x0
   51960:	b.le	5186c <mpfr_li2@@Base+0x2a0>
   51964:	cmp	x21, x23
   51968:	csel	x21, x21, x23, ge  // ge = tcont
   5196c:	subs	x2, x21, x2
   51970:	csinv	x2, x2, xzr, pl  // pl = nfrst
   51974:	ldr	w0, [sp, #112]
   51978:	cmp	w0, #0x0
   5197c:	ldr	x0, [sp, #96]
   51980:	cinc	x3, x0, eq  // eq = none
   51984:	add	x2, x2, #0x2
   51988:	ldr	x0, [sp, #272]
   5198c:	add	x1, x0, #0x3e
   51990:	subs	x0, x0, #0x1
   51994:	csel	x1, x1, x0, mi  // mi = first
   51998:	asr	x1, x1, #6
   5199c:	sub	x2, x20, x2
   519a0:	add	x1, x1, #0x1
   519a4:	ldr	x0, [sp, #296]
   519a8:	bl	c370 <mpfr_round_p@plt>
   519ac:	cbz	w0, 5186c <mpfr_li2@@Base+0x2a0>
   519b0:	add	x20, sp, #0x110
   519b4:	ldr	w3, [sp, #280]
   519b8:	ldr	w2, [sp, #112]
   519bc:	mov	x1, x20
   519c0:	ldr	x21, [sp, #104]
   519c4:	mov	x0, x21
   519c8:	bl	c6a0 <mpfr_set4@plt>
   519cc:	mov	w19, w0
   519d0:	add	x0, sp, #0x130
   519d4:	bl	c070 <mpfr_clear@plt>
   519d8:	mov	x0, x20
   519dc:	bl	c070 <mpfr_clear@plt>
   519e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   519e4:	ldr	x1, [x0, #2576]
   519e8:	add	x0, x0, #0xa10
   519ec:	blr	x1
   519f0:	mrs	x1, tpidr_el0
   519f4:	ldr	w4, [sp, #116]
   519f8:	str	w4, [x1, x0]
   519fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51a00:	ldr	x2, [x0, #2512]
   51a04:	add	x0, x0, #0x9d0
   51a08:	blr	x2
   51a0c:	ldr	x2, [sp, #120]
   51a10:	str	x2, [x1, x0]
   51a14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51a18:	ldr	x3, [x0, #2544]
   51a1c:	add	x0, x0, #0x9f0
   51a20:	blr	x3
   51a24:	ldr	x3, [sp, #128]
   51a28:	str	x3, [x1, x0]
   51a2c:	ldr	x0, [x21, #16]
   51a30:	cmp	x3, x0
   51a34:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   51a38:	b.gt	51a94 <mpfr_li2@@Base+0x4c8>
   51a3c:	cbz	w19, 53470 <mpfr_li2@@Base+0x1ea4>
   51a40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51a44:	ldr	x1, [x0, #2576]
   51a48:	add	x0, x0, #0xa10
   51a4c:	blr	x1
   51a50:	orr	w2, w4, #0x8
   51a54:	mrs	x1, tpidr_el0
   51a58:	str	w2, [x1, x0]
   51a5c:	ldp	x21, x22, [sp, #32]
   51a60:	ldp	x23, x24, [sp, #48]
   51a64:	ldp	x27, x28, [sp, #80]
   51a68:	mov	w0, w19
   51a6c:	ldp	x19, x20, [sp, #16]
   51a70:	ldp	x25, x26, [sp, #64]
   51a74:	ldp	x29, x30, [sp], #336
   51a78:	ret
   51a7c:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   51a80:	add	x2, x2, #0x18
   51a84:	mov	w1, #0x12a                 	// #298
   51a88:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51a8c:	add	x0, x0, #0x1b0
   51a90:	bl	cb40 <mpfr_assert_fail@plt>
   51a94:	ldr	w2, [sp, #112]
   51a98:	mov	w1, w19
   51a9c:	ldr	x0, [sp, #104]
   51aa0:	bl	cb30 <mpfr_check_range@plt>
   51aa4:	mov	w19, w0
   51aa8:	ldp	x21, x22, [sp, #32]
   51aac:	ldp	x23, x24, [sp, #48]
   51ab0:	ldp	x27, x28, [sp, #80]
   51ab4:	b	51a68 <mpfr_li2@@Base+0x49c>
   51ab8:	mov	x2, #0x0                   	// #0
   51abc:	mov	x1, #0x1                   	// #1
   51ac0:	mov	x0, x26
   51ac4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51ac8:	cbnz	w0, 51c98 <mpfr_li2@@Base+0x6cc>
   51acc:	stp	x27, x28, [sp, #80]
   51ad0:	mov	x1, x20
   51ad4:	add	x0, sp, #0x130
   51ad8:	bl	ca80 <mpfr_init2@plt>
   51adc:	mov	x21, #0x40                  	// #64
   51ae0:	mrs	x22, tpidr_el0
   51ae4:	add	x19, sp, #0x130
   51ae8:	mov	w24, #0x2                   	// #2
   51aec:	mov	x23, #0xfffffffffffffeff    	// #-257
   51af0:	movk	x23, #0x7fff, lsl #48
   51af4:	b	51b1c <mpfr_li2@@Base+0x550>
   51af8:	sub	x0, x23, x20
   51afc:	cmp	x0, x21
   51b00:	b.lt	51c5c <mpfr_li2@@Base+0x690>  // b.tstop
   51b04:	add	x20, x20, x21
   51b08:	add	x21, x20, x20, lsr #63
   51b0c:	asr	x21, x21, #1
   51b10:	mov	x1, x20
   51b14:	mov	x0, x19
   51b18:	bl	bed0 <mpfr_set_prec@plt>
   51b1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51b20:	ldr	x1, [x0, #2624]
   51b24:	add	x0, x0, #0xa40
   51b28:	blr	x1
   51b2c:	mov	w2, w24
   51b30:	add	x1, x22, x0
   51b34:	mov	x0, x19
   51b38:	bl	c380 <mpfr_cache@plt>
   51b3c:	mov	w2, #0x0                   	// #0
   51b40:	mov	x1, x19
   51b44:	mov	x0, x19
   51b48:	bl	c400 <mpfr_sqr@plt>
   51b4c:	mov	w3, #0x0                   	// #0
   51b50:	mov	x2, #0x6                   	// #6
   51b54:	mov	x1, x19
   51b58:	mov	x0, x19
   51b5c:	bl	cc60 <mpfr_div_ui@plt>
   51b60:	ldr	x1, [sp, #320]
   51b64:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51b68:	cmp	x1, x0
   51b6c:	b.le	51af8 <mpfr_li2@@Base+0x52c>
   51b70:	ldr	w0, [sp, #112]
   51b74:	cmp	w0, #0x0
   51b78:	ldr	x0, [sp, #96]
   51b7c:	cinc	x3, x0, eq  // eq = none
   51b80:	ldr	x0, [sp, #304]
   51b84:	add	x1, x0, #0x3e
   51b88:	subs	x0, x0, #0x1
   51b8c:	csel	x1, x1, x0, mi  // mi = first
   51b90:	asr	x1, x1, #6
   51b94:	sub	x2, x20, #0x4
   51b98:	add	x1, x1, #0x1
   51b9c:	ldr	x0, [sp, #328]
   51ba0:	bl	c370 <mpfr_round_p@plt>
   51ba4:	cbz	w0, 51af8 <mpfr_li2@@Base+0x52c>
   51ba8:	add	x20, sp, #0x130
   51bac:	ldr	w3, [sp, #312]
   51bb0:	ldr	w2, [sp, #112]
   51bb4:	mov	x1, x20
   51bb8:	ldr	x21, [sp, #104]
   51bbc:	mov	x0, x21
   51bc0:	bl	c6a0 <mpfr_set4@plt>
   51bc4:	mov	w19, w0
   51bc8:	mov	x0, x20
   51bcc:	bl	c070 <mpfr_clear@plt>
   51bd0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51bd4:	ldr	x1, [x0, #2576]
   51bd8:	add	x0, x0, #0xa10
   51bdc:	blr	x1
   51be0:	mrs	x1, tpidr_el0
   51be4:	ldr	w4, [sp, #116]
   51be8:	str	w4, [x1, x0]
   51bec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51bf0:	ldr	x2, [x0, #2512]
   51bf4:	add	x0, x0, #0x9d0
   51bf8:	blr	x2
   51bfc:	ldr	x2, [sp, #120]
   51c00:	str	x2, [x1, x0]
   51c04:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51c08:	ldr	x3, [x0, #2544]
   51c0c:	add	x0, x0, #0x9f0
   51c10:	blr	x3
   51c14:	ldr	x3, [sp, #128]
   51c18:	str	x3, [x1, x0]
   51c1c:	ldr	x0, [x21, #16]
   51c20:	cmp	x3, x0
   51c24:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   51c28:	b.gt	51c74 <mpfr_li2@@Base+0x6a8>
   51c2c:	cbz	w19, 53480 <mpfr_li2@@Base+0x1eb4>
   51c30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51c34:	ldr	x1, [x0, #2576]
   51c38:	add	x0, x0, #0xa10
   51c3c:	blr	x1
   51c40:	orr	w2, w4, #0x8
   51c44:	mrs	x1, tpidr_el0
   51c48:	str	w2, [x1, x0]
   51c4c:	ldp	x21, x22, [sp, #32]
   51c50:	ldp	x23, x24, [sp, #48]
   51c54:	ldp	x27, x28, [sp, #80]
   51c58:	b	51a68 <mpfr_li2@@Base+0x49c>
   51c5c:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   51c60:	add	x2, x2, #0x18
   51c64:	mov	w1, #0x147                 	// #327
   51c68:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51c6c:	add	x0, x0, #0x1b0
   51c70:	bl	cb40 <mpfr_assert_fail@plt>
   51c74:	ldr	w2, [sp, #112]
   51c78:	mov	w1, w19
   51c7c:	ldr	x0, [sp, #104]
   51c80:	bl	cb30 <mpfr_check_range@plt>
   51c84:	mov	w19, w0
   51c88:	ldp	x21, x22, [sp, #32]
   51c8c:	ldp	x23, x24, [sp, #48]
   51c90:	ldp	x27, x28, [sp, #80]
   51c94:	b	51a68 <mpfr_li2@@Base+0x49c>
   51c98:	mov	x2, #0x0                   	// #0
   51c9c:	mov	x1, #0x2                   	// #2
   51ca0:	mov	x0, x26
   51ca4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51ca8:	tbnz	w0, #31, 522e4 <mpfr_li2@@Base+0xd18>
   51cac:	mov	x2, #0x0                   	// #0
   51cb0:	mov	x1, #0x26                  	// #38
   51cb4:	mov	x0, x26
   51cb8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51cbc:	tbnz	w0, #31, 51f28 <mpfr_li2@@Base+0x95c>
   51cc0:	ldr	x0, [sp, #104]
   51cc4:	ldr	x23, [x0]
   51cc8:	add	x22, x23, #0x14
   51ccc:	mov	x2, #0x0                   	// #0
   51cd0:	mov	x1, #0x26                  	// #38
   51cd4:	mov	x0, x26
   51cd8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51cdc:	tbnz	w0, #31, 51e10 <mpfr_li2@@Base+0x844>
   51ce0:	add	x21, sp, #0x110
   51ce4:	mov	x1, x22
   51ce8:	mov	x0, x21
   51cec:	bl	ca80 <mpfr_init2@plt>
   51cf0:	add	x19, sp, #0x130
   51cf4:	mov	x1, x22
   51cf8:	mov	x0, x19
   51cfc:	bl	ca80 <mpfr_init2@plt>
   51d00:	mov	w2, #0x0                   	// #0
   51d04:	mov	x1, x26
   51d08:	mov	x0, x21
   51d0c:	bl	c090 <mpfr_log@plt>
   51d10:	mov	w2, #0x0                   	// #0
   51d14:	mov	x1, x21
   51d18:	mov	x0, x21
   51d1c:	bl	c400 <mpfr_sqr@plt>
   51d20:	mov	w3, #0x0                   	// #0
   51d24:	mov	x2, #0x1                   	// #1
   51d28:	mov	x1, x21
   51d2c:	mov	x0, x21
   51d30:	bl	c8f0 <mpfr_div_2ui@plt>
   51d34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51d38:	ldr	x1, [x0, #2624]
   51d3c:	add	x0, x0, #0xa40
   51d40:	blr	x1
   51d44:	mov	w2, #0x0                   	// #0
   51d48:	mrs	x1, tpidr_el0
   51d4c:	add	x1, x1, x0
   51d50:	mov	x0, x19
   51d54:	bl	c380 <mpfr_cache@plt>
   51d58:	mov	w2, #0x0                   	// #0
   51d5c:	mov	x1, x19
   51d60:	mov	x0, x19
   51d64:	bl	c400 <mpfr_sqr@plt>
   51d68:	mov	w3, #0x0                   	// #0
   51d6c:	mov	x2, #0x3                   	// #3
   51d70:	mov	x1, x19
   51d74:	mov	x0, x19
   51d78:	bl	cc60 <mpfr_div_ui@plt>
   51d7c:	ldr	x1, [sp, #288]
   51d80:	ldr	x0, [sp, #320]
   51d84:	cmp	x1, x0
   51d88:	b.le	51e2c <mpfr_li2@@Base+0x860>
   51d8c:	add	x0, sp, #0x110
   51d90:	mov	w3, #0x0                   	// #0
   51d94:	mov	x2, x0
   51d98:	add	x1, sp, #0x130
   51d9c:	bl	bb70 <mpfr_sub@plt>
   51da0:	ldr	x0, [sp, #288]
   51da4:	sub	x22, x22, x0
   51da8:	ldr	x1, [x26, #16]
   51dac:	cmp	x1, x22
   51db0:	mov	x1, #0x4                   	// #4
   51db4:	movk	x1, #0x8000, lsl #48
   51db8:	ccmp	x0, x1, #0x1, ge  // ge = tcont
   51dbc:	b.ge	51e48 <mpfr_li2@@Base+0x87c>  // b.tcont
   51dc0:	stp	x27, x28, [sp, #80]
   51dc4:	add	x0, sp, #0x110
   51dc8:	bl	c070 <mpfr_clear@plt>
   51dcc:	add	x0, sp, #0x130
   51dd0:	bl	c070 <mpfr_clear@plt>
   51dd4:	mov	x1, x20
   51dd8:	add	x0, sp, #0x110
   51ddc:	bl	ca80 <mpfr_init2@plt>
   51de0:	mov	x1, x20
   51de4:	add	x0, sp, #0xf0
   51de8:	bl	ca80 <mpfr_init2@plt>
   51dec:	mov	x1, x20
   51df0:	add	x0, sp, #0x130
   51df4:	bl	ca80 <mpfr_init2@plt>
   51df8:	mov	x25, #0x40                  	// #64
   51dfc:	add	x23, sp, #0x130
   51e00:	mov	x28, #0x1                   	// #1
   51e04:	add	x19, sp, #0x110
   51e08:	add	x21, sp, #0xf0
   51e0c:	b	51f94 <mpfr_li2@@Base+0x9c8>
   51e10:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51e14:	add	x2, x2, #0x1d8
   51e18:	mov	w1, #0x82                  	// #130
   51e1c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51e20:	add	x0, x0, #0x1b0
   51e24:	bl	cb40 <mpfr_assert_fail@plt>
   51e28:	b	51ce0 <mpfr_li2@@Base+0x714>
   51e2c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51e30:	add	x2, x2, #0x248
   51e34:	mov	w1, #0x90                  	// #144
   51e38:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51e3c:	add	x0, x0, #0x1b0
   51e40:	bl	cb40 <mpfr_assert_fail@plt>
   51e44:	b	51d8c <mpfr_li2@@Base+0x7c0>
   51e48:	ldr	w0, [sp, #112]
   51e4c:	cmp	w0, #0x0
   51e50:	ldr	x0, [sp, #104]
   51e54:	ldr	x3, [x0]
   51e58:	cinc	x3, x3, eq  // eq = none
   51e5c:	ldr	x0, [sp, #272]
   51e60:	add	x1, x0, #0x3e
   51e64:	subs	x0, x0, #0x1
   51e68:	csel	x1, x1, x0, mi  // mi = first
   51e6c:	asr	x1, x1, #6
   51e70:	add	x2, x23, #0x10
   51e74:	add	x1, x1, #0x1
   51e78:	ldr	x0, [sp, #296]
   51e7c:	bl	c370 <mpfr_round_p@plt>
   51e80:	cbz	w0, 51dc0 <mpfr_li2@@Base+0x7f4>
   51e84:	ldr	w3, [sp, #280]
   51e88:	ldr	w21, [sp, #112]
   51e8c:	mov	w2, w21
   51e90:	add	x1, sp, #0x110
   51e94:	ldr	x0, [sp, #104]
   51e98:	bl	c6a0 <mpfr_set4@plt>
   51e9c:	mov	w19, w0
   51ea0:	cmp	w21, #0x5
   51ea4:	b.eq	53424 <mpfr_li2@@Base+0x1e58>  // b.none
   51ea8:	add	x0, sp, #0x110
   51eac:	bl	c070 <mpfr_clear@plt>
   51eb0:	add	x0, sp, #0x130
   51eb4:	bl	c070 <mpfr_clear@plt>
   51eb8:	cbz	w19, 51f20 <mpfr_li2@@Base+0x954>
   51ebc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51ec0:	ldr	x1, [x0, #2576]
   51ec4:	add	x0, x0, #0xa10
   51ec8:	blr	x1
   51ecc:	mrs	x1, tpidr_el0
   51ed0:	ldr	w2, [sp, #116]
   51ed4:	str	w2, [x1, x0]
   51ed8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51edc:	ldr	x2, [x0, #2512]
   51ee0:	add	x0, x0, #0x9d0
   51ee4:	blr	x2
   51ee8:	ldr	x2, [sp, #120]
   51eec:	str	x2, [x1, x0]
   51ef0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   51ef4:	ldr	x3, [x0, #2544]
   51ef8:	add	x0, x0, #0x9f0
   51efc:	blr	x3
   51f00:	ldr	x3, [sp, #128]
   51f04:	str	x3, [x1, x0]
   51f08:	ldr	x0, [sp, #104]
   51f0c:	ldr	x0, [x0, #16]
   51f10:	cmp	x3, x0
   51f14:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   51f18:	b.le	52294 <mpfr_li2@@Base+0xcc8>
   51f1c:	b	522c4 <mpfr_li2@@Base+0xcf8>
   51f20:	stp	x27, x28, [sp, #80]
   51f24:	b	51dd4 <mpfr_li2@@Base+0x808>
   51f28:	stp	x27, x28, [sp, #80]
   51f2c:	b	51dd4 <mpfr_li2@@Base+0x808>
   51f30:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   51f34:	add	x2, x2, #0x1c8
   51f38:	mov	w1, #0x16d                 	// #365
   51f3c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   51f40:	add	x0, x0, #0x1b0
   51f44:	bl	cb40 <mpfr_assert_fail@plt>
   51f48:	mov	x27, x28
   51f4c:	b	52020 <mpfr_li2@@Base+0xa54>
   51f50:	mov	x0, #0xfffffffffffffeff    	// #-257
   51f54:	movk	x0, #0x7fff, lsl #48
   51f58:	sub	x0, x0, x20
   51f5c:	cmp	x0, x25
   51f60:	b.lt	52278 <mpfr_li2@@Base+0xcac>  // b.tstop
   51f64:	add	x20, x20, x25
   51f68:	add	x25, x20, x20, lsr #63
   51f6c:	asr	x25, x25, #1
   51f70:	mov	x1, x20
   51f74:	mov	x0, x19
   51f78:	bl	bed0 <mpfr_set_prec@plt>
   51f7c:	mov	x1, x20
   51f80:	mov	x0, x21
   51f84:	bl	bed0 <mpfr_set_prec@plt>
   51f88:	mov	x1, x20
   51f8c:	mov	x0, x23
   51f90:	bl	bed0 <mpfr_set_prec@plt>
   51f94:	mov	w3, #0x0                   	// #0
   51f98:	mov	x2, x26
   51f9c:	mov	x1, x28
   51fa0:	mov	x0, x23
   51fa4:	bl	c2f0 <mpfr_ui_div@plt>
   51fa8:	mov	w2, #0x0                   	// #0
   51fac:	mov	x1, x23
   51fb0:	mov	x0, x23
   51fb4:	bl	bd70 <mpfr_neg@plt>
   51fb8:	mov	w2, #0x3                   	// #3
   51fbc:	mov	x1, x23
   51fc0:	mov	x0, x19
   51fc4:	bl	c700 <mpfr_log1p@plt>
   51fc8:	mov	w2, #0x2                   	// #2
   51fcc:	mov	x1, x19
   51fd0:	mov	x0, x19
   51fd4:	bl	bd70 <mpfr_neg@plt>
   51fd8:	ldr	x24, [sp, #288]
   51fdc:	mov	w2, #0x0                   	// #0
   51fe0:	mov	x1, x19
   51fe4:	mov	x0, x21
   51fe8:	bl	5129c <mpfr_d_div@@Base+0x140>
   51fec:	mov	w22, w0
   51ff0:	mov	w2, #0x0                   	// #0
   51ff4:	mov	x1, x21
   51ff8:	mov	x0, x21
   51ffc:	bl	bd70 <mpfr_neg@plt>
   52000:	cbz	w22, 51f48 <mpfr_li2@@Base+0x97c>
   52004:	cmp	w22, #0x0
   52008:	b.le	51f30 <mpfr_li2@@Base+0x964>
   5200c:	sxtw	x22, w22
   52010:	clz	x22, x22
   52014:	mov	w27, #0x41                  	// #65
   52018:	sub	w22, w27, w22
   5201c:	sxtw	x27, w22
   52020:	mov	w2, #0x0                   	// #0
   52024:	mov	x1, x19
   52028:	mov	x0, x19
   5202c:	bl	c400 <mpfr_sqr@plt>
   52030:	mov	w3, #0x0                   	// #0
   52034:	mov	x2, #0x2                   	// #2
   52038:	mov	x1, x19
   5203c:	mov	x0, x19
   52040:	bl	c8f0 <mpfr_div_2ui@plt>
   52044:	mov	w3, #0x0                   	// #0
   52048:	mov	x2, x19
   5204c:	mov	x1, x21
   52050:	mov	x0, x21
   52054:	bl	c1a0 <mpfr_add@plt>
   52058:	mov	x0, #0x3                   	// #3
   5205c:	sub	x0, x0, x24
   52060:	cmp	x24, #0x0
   52064:	mov	x1, #0x4                   	// #4
   52068:	csel	x0, x0, x1, lt  // lt = tstop
   5206c:	str	x0, [sp, #152]
   52070:	ldr	x1, [sp, #288]
   52074:	str	x1, [sp, #136]
   52078:	ldr	x22, [sp, #256]
   5207c:	mov	w2, #0x2                   	// #2
   52080:	mov	x1, x26
   52084:	mov	x0, x19
   52088:	bl	c090 <mpfr_log@plt>
   5208c:	mov	w2, #0x0                   	// #0
   52090:	mov	x1, x19
   52094:	mov	x0, x19
   52098:	bl	c400 <mpfr_sqr@plt>
   5209c:	mov	w3, #0x0                   	// #0
   520a0:	mov	x2, x28
   520a4:	mov	x1, x19
   520a8:	mov	x0, x19
   520ac:	bl	c8f0 <mpfr_div_2ui@plt>
   520b0:	mov	w3, #0x0                   	// #0
   520b4:	mov	x2, x19
   520b8:	mov	x1, x21
   520bc:	mov	x0, x21
   520c0:	bl	bb70 <mpfr_sub@plt>
   520c4:	ldr	x2, [sp, #288]
   520c8:	str	x2, [sp, #144]
   520cc:	ldr	x24, [sp, #256]
   520d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   520d4:	ldr	x3, [x0, #2624]
   520d8:	add	x0, x0, #0xa40
   520dc:	blr	x3
   520e0:	mov	w2, #0x2                   	// #2
   520e4:	mrs	x1, tpidr_el0
   520e8:	add	x1, x1, x0
   520ec:	mov	x0, x19
   520f0:	bl	c380 <mpfr_cache@plt>
   520f4:	mov	w2, #0x0                   	// #0
   520f8:	mov	x1, x19
   520fc:	mov	x0, x19
   52100:	bl	c400 <mpfr_sqr@plt>
   52104:	mov	w3, #0x0                   	// #0
   52108:	mov	x2, #0x3                   	// #3
   5210c:	mov	x1, x19
   52110:	mov	x0, x19
   52114:	bl	cc60 <mpfr_div_ui@plt>
   52118:	mov	w3, #0x0                   	// #0
   5211c:	mov	x2, x19
   52120:	mov	x1, x21
   52124:	mov	x0, x21
   52128:	bl	c1a0 <mpfr_add@plt>
   5212c:	ldr	x2, [sp, #256]
   52130:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   52134:	cmp	x2, x0
   52138:	b.le	51f50 <mpfr_li2@@Base+0x984>
   5213c:	ldr	x1, [sp, #136]
   52140:	ldr	x0, [sp, #152]
   52144:	add	x0, x1, x0
   52148:	cmp	x0, x27
   5214c:	csel	x0, x0, x27, ge  // ge = tcont
   52150:	mov	x3, #0xffffffffffffffff    	// #-1
   52154:	subs	x0, x0, x22
   52158:	csel	x0, x0, x3, pl  // pl = nfrst
   5215c:	add	x1, x0, #0x2
   52160:	ldr	x0, [sp, #144]
   52164:	add	x0, x0, #0x3
   52168:	add	x1, x22, x1
   5216c:	cmp	x0, x1
   52170:	csel	x0, x0, x1, ge  // ge = tcont
   52174:	subs	x0, x0, x24
   52178:	csel	x0, x0, x3, pl  // pl = nfrst
   5217c:	add	x0, x0, #0x2
   52180:	add	x24, x24, x0
   52184:	cmp	x24, #0x2
   52188:	mov	x0, #0x2                   	// #2
   5218c:	csel	x24, x24, x0, ge  // ge = tcont
   52190:	subs	x24, x24, x2
   52194:	csel	x24, x24, x3, pl  // pl = nfrst
   52198:	ldr	w0, [sp, #112]
   5219c:	cmp	w0, #0x0
   521a0:	ldr	x0, [sp, #96]
   521a4:	cinc	x3, x0, eq  // eq = none
   521a8:	add	x24, x24, #0x2
   521ac:	ldr	x0, [sp, #240]
   521b0:	add	x1, x0, #0x3e
   521b4:	subs	x0, x0, #0x1
   521b8:	csel	x1, x1, x0, mi  // mi = first
   521bc:	asr	x1, x1, #6
   521c0:	sub	x2, x20, x24
   521c4:	add	x1, x1, #0x1
   521c8:	ldr	x0, [sp, #264]
   521cc:	bl	c370 <mpfr_round_p@plt>
   521d0:	cbz	w0, 51f50 <mpfr_li2@@Base+0x984>
   521d4:	add	x20, sp, #0xf0
   521d8:	ldr	w3, [sp, #248]
   521dc:	ldr	w2, [sp, #112]
   521e0:	mov	x1, x20
   521e4:	ldr	x21, [sp, #104]
   521e8:	mov	x0, x21
   521ec:	bl	c6a0 <mpfr_set4@plt>
   521f0:	mov	w19, w0
   521f4:	mov	x3, #0x0                   	// #0
   521f8:	add	x2, sp, #0x130
   521fc:	add	x1, sp, #0x110
   52200:	mov	x0, x20
   52204:	bl	c1b0 <mpfr_clears@plt>
   52208:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5220c:	ldr	x1, [x0, #2576]
   52210:	add	x0, x0, #0xa10
   52214:	blr	x1
   52218:	mrs	x1, tpidr_el0
   5221c:	ldr	w2, [sp, #116]
   52220:	str	w2, [x1, x0]
   52224:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52228:	ldr	x2, [x0, #2512]
   5222c:	add	x0, x0, #0x9d0
   52230:	blr	x2
   52234:	ldr	x2, [sp, #120]
   52238:	str	x2, [x1, x0]
   5223c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52240:	ldr	x3, [x0, #2544]
   52244:	add	x0, x0, #0x9f0
   52248:	blr	x3
   5224c:	ldr	x3, [sp, #128]
   52250:	str	x3, [x1, x0]
   52254:	ldr	x0, [x21, #16]
   52258:	cmp	x3, x0
   5225c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   52260:	b.gt	522c0 <mpfr_li2@@Base+0xcf4>
   52264:	cbnz	w19, 52290 <mpfr_li2@@Base+0xcc4>
   52268:	ldp	x21, x22, [sp, #32]
   5226c:	ldp	x23, x24, [sp, #48]
   52270:	ldp	x27, x28, [sp, #80]
   52274:	b	51a68 <mpfr_li2@@Base+0x49c>
   52278:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   5227c:	add	x2, x2, #0x18
   52280:	mov	w1, #0x189                 	// #393
   52284:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52288:	add	x0, x0, #0x1b0
   5228c:	bl	cb40 <mpfr_assert_fail@plt>
   52290:	ldp	x27, x28, [sp, #80]
   52294:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52298:	ldr	x1, [x0, #2576]
   5229c:	add	x0, x0, #0xa10
   522a0:	blr	x1
   522a4:	ldr	w1, [sp, #116]
   522a8:	orr	w2, w1, #0x8
   522ac:	mrs	x1, tpidr_el0
   522b0:	str	w2, [x1, x0]
   522b4:	ldp	x21, x22, [sp, #32]
   522b8:	ldp	x23, x24, [sp, #48]
   522bc:	b	51a68 <mpfr_li2@@Base+0x49c>
   522c0:	ldp	x27, x28, [sp, #80]
   522c4:	ldr	w2, [sp, #112]
   522c8:	mov	w1, w19
   522cc:	ldr	x0, [sp, #104]
   522d0:	bl	cb30 <mpfr_check_range@plt>
   522d4:	mov	w19, w0
   522d8:	ldp	x21, x22, [sp, #32]
   522dc:	ldp	x23, x24, [sp, #48]
   522e0:	b	51a68 <mpfr_li2@@Base+0x49c>
   522e4:	mov	x2, #0x0                   	// #0
   522e8:	mov	x1, #0x1                   	// #1
   522ec:	mov	x0, x26
   522f0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   522f4:	cmp	w0, #0x0
   522f8:	b.le	52680 <mpfr_li2@@Base+0x10b4>
   522fc:	stp	x27, x28, [sp, #80]
   52300:	mov	x1, x20
   52304:	add	x0, sp, #0xd0
   52308:	bl	ca80 <mpfr_init2@plt>
   5230c:	mov	x1, x20
   52310:	add	x0, sp, #0xf0
   52314:	bl	ca80 <mpfr_init2@plt>
   52318:	mov	x1, x20
   5231c:	add	x0, sp, #0x110
   52320:	bl	ca80 <mpfr_init2@plt>
   52324:	mov	x1, x20
   52328:	add	x0, sp, #0x130
   5232c:	bl	ca80 <mpfr_init2@plt>
   52330:	mov	x23, #0x40                  	// #64
   52334:	add	x22, sp, #0x110
   52338:	mov	w25, #0x2                   	// #2
   5233c:	add	x21, sp, #0xd0
   52340:	add	x19, sp, #0xf0
   52344:	add	x27, sp, #0x130
   52348:	b	5242c <mpfr_li2@@Base+0xe60>
   5234c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52350:	add	x2, x2, #0x1c8
   52354:	mov	w1, #0x1b8                 	// #440
   52358:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5235c:	add	x0, x0, #0x1b0
   52360:	bl	cb40 <mpfr_assert_fail@plt>
   52364:	mov	x0, #0x1                   	// #1
   52368:	b	5255c <mpfr_li2@@Base+0xf90>
   5236c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52370:	add	x2, x2, #0x1c8
   52374:	mov	w1, #0x1b8                 	// #440
   52378:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5237c:	add	x0, x0, #0x1b0
   52380:	bl	cb40 <mpfr_assert_fail@plt>
   52384:	ldr	x2, [sp, #224]
   52388:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5238c:	cmp	x2, x1
   52390:	b.le	523dc <mpfr_li2@@Base+0xe10>
   52394:	ldr	w1, [sp, #112]
   52398:	cmp	w1, #0x0
   5239c:	ldr	x1, [sp, #96]
   523a0:	cinc	x3, x1, eq  // eq = none
   523a4:	cmp	x0, #0x5
   523a8:	mov	x2, #0x5                   	// #5
   523ac:	csel	x0, x0, x2, ge  // ge = tcont
   523b0:	add	x2, x0, #0x2
   523b4:	ldr	x0, [sp, #208]
   523b8:	add	x1, x0, #0x3e
   523bc:	subs	x0, x0, #0x1
   523c0:	csel	x1, x1, x0, mi  // mi = first
   523c4:	asr	x1, x1, #6
   523c8:	sub	x2, x20, x2
   523cc:	add	x1, x1, #0x1
   523d0:	ldr	x0, [sp, #232]
   523d4:	bl	c370 <mpfr_round_p@plt>
   523d8:	cbnz	w0, 52598 <mpfr_li2@@Base+0xfcc>
   523dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   523e0:	movk	x0, #0x7fff, lsl #48
   523e4:	sub	x0, x0, x20
   523e8:	cmp	x0, x23
   523ec:	b.lt	52580 <mpfr_li2@@Base+0xfb4>  // b.tstop
   523f0:	add	x20, x20, x23
   523f4:	add	x23, x20, x20, lsr #63
   523f8:	asr	x23, x23, #1
   523fc:	mov	x1, x20
   52400:	mov	x0, x21
   52404:	bl	bed0 <mpfr_set_prec@plt>
   52408:	mov	x1, x20
   5240c:	mov	x0, x19
   52410:	bl	bed0 <mpfr_set_prec@plt>
   52414:	mov	x1, x20
   52418:	mov	x0, x22
   5241c:	bl	bed0 <mpfr_set_prec@plt>
   52420:	mov	x1, x20
   52424:	mov	x0, x27
   52428:	bl	bed0 <mpfr_set_prec@plt>
   5242c:	mov	w2, w25
   52430:	mov	x1, x26
   52434:	mov	x0, x22
   52438:	bl	c090 <mpfr_log@plt>
   5243c:	mov	w2, #0x0                   	// #0
   52440:	mov	x1, x22
   52444:	mov	x0, x21
   52448:	bl	5129c <mpfr_d_div@@Base+0x140>
   5244c:	mov	w24, w0
   52450:	ldr	x28, [sp, #224]
   52454:	mov	w2, #0x0                   	// #0
   52458:	mov	x1, x22
   5245c:	mov	x0, x19
   52460:	bl	c400 <mpfr_sqr@plt>
   52464:	mov	w3, #0x0                   	// #0
   52468:	mov	x2, #0x2                   	// #2
   5246c:	mov	x1, x19
   52470:	mov	x0, x19
   52474:	bl	c8f0 <mpfr_div_2ui@plt>
   52478:	mov	w3, #0x0                   	// #0
   5247c:	mov	x2, x19
   52480:	mov	x1, x21
   52484:	mov	x0, x21
   52488:	bl	c1a0 <mpfr_add@plt>
   5248c:	mov	w3, #0x0                   	// #0
   52490:	mov	x2, #0x1                   	// #1
   52494:	mov	x1, x26
   52498:	mov	x0, x27
   5249c:	bl	c530 <mpfr_sub_ui@plt>
   524a0:	mov	w2, w25
   524a4:	mov	x1, x27
   524a8:	mov	x0, x19
   524ac:	bl	c090 <mpfr_log@plt>
   524b0:	ldr	x0, [sp, #256]
   524b4:	str	x0, [sp, #136]
   524b8:	mov	w3, #0x0                   	// #0
   524bc:	mov	x2, x19
   524c0:	mov	x1, x22
   524c4:	mov	x0, x19
   524c8:	bl	bd50 <mpfr_mul@plt>
   524cc:	mov	w3, #0x0                   	// #0
   524d0:	mov	x2, x19
   524d4:	mov	x1, x21
   524d8:	mov	x0, x21
   524dc:	bl	bb70 <mpfr_sub@plt>
   524e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   524e4:	ldr	x1, [x0, #2624]
   524e8:	add	x0, x0, #0xa40
   524ec:	blr	x1
   524f0:	mov	w2, w25
   524f4:	mrs	x1, tpidr_el0
   524f8:	add	x1, x1, x0
   524fc:	mov	x0, x19
   52500:	bl	c380 <mpfr_cache@plt>
   52504:	mov	w2, #0x0                   	// #0
   52508:	mov	x1, x19
   5250c:	mov	x0, x19
   52510:	bl	c400 <mpfr_sqr@plt>
   52514:	mov	w3, #0x0                   	// #0
   52518:	mov	x2, #0x6                   	// #6
   5251c:	mov	x1, x19
   52520:	mov	x0, x19
   52524:	bl	cc60 <mpfr_div_ui@plt>
   52528:	mov	w3, #0x0                   	// #0
   5252c:	mov	x2, x19
   52530:	mov	x1, x21
   52534:	mov	x0, x21
   52538:	bl	c1a0 <mpfr_add@plt>
   5253c:	cbz	w24, 52364 <mpfr_li2@@Base+0xd98>
   52540:	cmp	w24, #0x0
   52544:	b.le	5234c <mpfr_li2@@Base+0xd80>
   52548:	sxtw	x0, w24
   5254c:	clz	x1, x0
   52550:	mov	w0, #0x41                  	// #65
   52554:	sub	w0, w0, w1
   52558:	sxtw	x0, w0
   5255c:	sub	x28, x0, x28
   52560:	mov	x0, #0x1                   	// #1
   52564:	ldr	x1, [sp, #136]
   52568:	sub	x0, x0, x1
   5256c:	cmp	x28, x0
   52570:	b.le	52384 <mpfr_li2@@Base+0xdb8>
   52574:	tbnz	w24, #31, 5236c <mpfr_li2@@Base+0xda0>
   52578:	mov	x0, x28
   5257c:	b	52384 <mpfr_li2@@Base+0xdb8>
   52580:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   52584:	add	x2, x2, #0x18
   52588:	mov	w1, #0x1bd                 	// #445
   5258c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52590:	add	x0, x0, #0x1b0
   52594:	bl	cb40 <mpfr_assert_fail@plt>
   52598:	add	x20, sp, #0xd0
   5259c:	ldr	w3, [sp, #216]
   525a0:	ldr	w2, [sp, #112]
   525a4:	mov	x1, x20
   525a8:	ldr	x21, [sp, #104]
   525ac:	mov	x0, x21
   525b0:	bl	c6a0 <mpfr_set4@plt>
   525b4:	mov	w19, w0
   525b8:	mov	x4, #0x0                   	// #0
   525bc:	add	x3, sp, #0x130
   525c0:	add	x2, sp, #0x110
   525c4:	add	x1, sp, #0xf0
   525c8:	mov	x0, x20
   525cc:	bl	c1b0 <mpfr_clears@plt>
   525d0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   525d4:	ldr	x1, [x0, #2576]
   525d8:	add	x0, x0, #0xa10
   525dc:	blr	x1
   525e0:	mrs	x1, tpidr_el0
   525e4:	ldr	w2, [sp, #116]
   525e8:	str	w2, [x1, x0]
   525ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   525f0:	ldr	x3, [x0, #2512]
   525f4:	add	x0, x0, #0x9d0
   525f8:	blr	x3
   525fc:	ldr	x3, [sp, #120]
   52600:	str	x3, [x1, x0]
   52604:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52608:	ldr	x4, [x0, #2544]
   5260c:	add	x0, x0, #0x9f0
   52610:	blr	x4
   52614:	ldr	x4, [sp, #128]
   52618:	str	x4, [x1, x0]
   5261c:	ldr	x0, [x21, #16]
   52620:	cmp	x4, x0
   52624:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   52628:	b.gt	5265c <mpfr_li2@@Base+0x1090>
   5262c:	cbz	w19, 53490 <mpfr_li2@@Base+0x1ec4>
   52630:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52634:	ldr	x1, [x0, #2576]
   52638:	add	x0, x0, #0xa10
   5263c:	blr	x1
   52640:	orr	w2, w2, #0x8
   52644:	mrs	x1, tpidr_el0
   52648:	str	w2, [x1, x0]
   5264c:	ldp	x21, x22, [sp, #32]
   52650:	ldp	x23, x24, [sp, #48]
   52654:	ldp	x27, x28, [sp, #80]
   52658:	b	51a68 <mpfr_li2@@Base+0x49c>
   5265c:	ldr	w2, [sp, #112]
   52660:	mov	w1, w19
   52664:	ldr	x0, [sp, #104]
   52668:	bl	cb30 <mpfr_check_range@plt>
   5266c:	mov	w19, w0
   52670:	ldp	x21, x22, [sp, #32]
   52674:	ldp	x23, x24, [sp, #48]
   52678:	ldp	x27, x28, [sp, #80]
   5267c:	b	51a68 <mpfr_li2@@Base+0x49c>
   52680:	mov	x2, #0xffffffffffffffff    	// #-1
   52684:	mov	x1, #0x1                   	// #1
   52688:	mov	x0, x26
   5268c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   52690:	cmp	w0, #0x0
   52694:	b.le	52a68 <mpfr_li2@@Base+0x149c>
   52698:	stp	x27, x28, [sp, #80]
   5269c:	mov	x1, x20
   526a0:	add	x0, sp, #0xd0
   526a4:	bl	ca80 <mpfr_init2@plt>
   526a8:	mov	x1, x20
   526ac:	add	x0, sp, #0xf0
   526b0:	bl	ca80 <mpfr_init2@plt>
   526b4:	mov	x1, x20
   526b8:	add	x0, sp, #0x110
   526bc:	bl	ca80 <mpfr_init2@plt>
   526c0:	mov	x1, x20
   526c4:	add	x0, sp, #0x130
   526c8:	bl	ca80 <mpfr_init2@plt>
   526cc:	mov	x24, #0x40                  	// #64
   526d0:	add	x19, sp, #0xf0
   526d4:	add	x22, sp, #0xd0
   526d8:	add	x25, sp, #0x130
   526dc:	add	x23, sp, #0x110
   526e0:	b	52754 <mpfr_li2@@Base+0x1188>
   526e4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   526e8:	add	x2, x2, #0x1c8
   526ec:	mov	w1, #0x1dc                 	// #476
   526f0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   526f4:	add	x0, x0, #0x1b0
   526f8:	bl	cb40 <mpfr_assert_fail@plt>
   526fc:	mov	x28, #0x1                   	// #1
   52700:	b	527b8 <mpfr_li2@@Base+0x11ec>
   52704:	mov	x0, #0xfffffffffffffeff    	// #-257
   52708:	movk	x0, #0x7fff, lsl #48
   5270c:	sub	x0, x0, x20
   52710:	cmp	x0, x24
   52714:	b.lt	52a2c <mpfr_li2@@Base+0x1460>  // b.tstop
   52718:	add	x20, x20, x24
   5271c:	add	x24, x20, x20, lsr #63
   52720:	asr	x24, x24, #1
   52724:	mov	x1, x20
   52728:	mov	x0, x22
   5272c:	bl	bed0 <mpfr_set_prec@plt>
   52730:	mov	x1, x20
   52734:	mov	x0, x19
   52738:	bl	bed0 <mpfr_set_prec@plt>
   5273c:	mov	x1, x20
   52740:	mov	x0, x23
   52744:	bl	bed0 <mpfr_set_prec@plt>
   52748:	mov	x1, x20
   5274c:	mov	x0, x25
   52750:	bl	bed0 <mpfr_set_prec@plt>
   52754:	mov	w2, #0x3                   	// #3
   52758:	mov	x1, x26
   5275c:	mov	x0, x19
   52760:	bl	c090 <mpfr_log@plt>
   52764:	mov	w2, #0x0                   	// #0
   52768:	mov	x1, x19
   5276c:	mov	x0, x19
   52770:	bl	bd70 <mpfr_neg@plt>
   52774:	mov	w2, #0x0                   	// #0
   52778:	mov	x1, x19
   5277c:	mov	x0, x22
   52780:	bl	5129c <mpfr_d_div@@Base+0x140>
   52784:	mov	w21, w0
   52788:	mov	w2, #0x0                   	// #0
   5278c:	mov	x1, x22
   52790:	mov	x0, x22
   52794:	bl	bd70 <mpfr_neg@plt>
   52798:	cbz	w21, 526fc <mpfr_li2@@Base+0x1130>
   5279c:	cmp	w21, #0x0
   527a0:	b.le	526e4 <mpfr_li2@@Base+0x1118>
   527a4:	sxtw	x0, w21
   527a8:	clz	x0, x0
   527ac:	mov	w28, #0x41                  	// #65
   527b0:	sub	w0, w28, w0
   527b4:	sxtw	x28, w0
   527b8:	ldr	x0, [sp, #224]
   527bc:	str	x0, [sp, #136]
   527c0:	mov	w3, #0x0                   	// #0
   527c4:	mov	x2, x26
   527c8:	mov	x1, #0x1                   	// #1
   527cc:	mov	x0, x25
   527d0:	bl	ca50 <mpfr_ui_sub@plt>
   527d4:	mov	w2, #0x2                   	// #2
   527d8:	mov	x1, x25
   527dc:	mov	x0, x23
   527e0:	bl	c090 <mpfr_log@plt>
   527e4:	mov	w3, #0x0                   	// #0
   527e8:	mov	x2, x19
   527ec:	mov	x1, x23
   527f0:	mov	x0, x23
   527f4:	bl	bd50 <mpfr_mul@plt>
   527f8:	mov	w3, #0x0                   	// #0
   527fc:	mov	x2, x23
   52800:	mov	x1, x22
   52804:	mov	x0, x22
   52808:	bl	c1a0 <mpfr_add@plt>
   5280c:	ldr	x27, [sp, #288]
   52810:	ldr	x1, [sp, #224]
   52814:	str	x1, [sp, #144]
   52818:	mov	w2, #0x0                   	// #0
   5281c:	mov	x1, x19
   52820:	mov	x0, x19
   52824:	bl	c400 <mpfr_sqr@plt>
   52828:	mov	w3, #0x0                   	// #0
   5282c:	mov	x2, #0x2                   	// #2
   52830:	mov	x1, x19
   52834:	mov	x0, x19
   52838:	bl	c8f0 <mpfr_div_2ui@plt>
   5283c:	mov	w3, #0x0                   	// #0
   52840:	mov	x2, x19
   52844:	mov	x1, x22
   52848:	mov	x0, x22
   5284c:	bl	c1a0 <mpfr_add@plt>
   52850:	ldr	x2, [sp, #256]
   52854:	str	x2, [sp, #152]
   52858:	ldr	x21, [sp, #224]
   5285c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52860:	ldr	x3, [x0, #2624]
   52864:	add	x0, x0, #0xa40
   52868:	blr	x3
   5286c:	mov	w2, #0x2                   	// #2
   52870:	mrs	x1, tpidr_el0
   52874:	add	x1, x1, x0
   52878:	mov	x0, x19
   5287c:	bl	c380 <mpfr_cache@plt>
   52880:	mov	w2, #0x0                   	// #0
   52884:	mov	x1, x19
   52888:	mov	x0, x19
   5288c:	bl	c400 <mpfr_sqr@plt>
   52890:	mov	w3, #0x0                   	// #0
   52894:	mov	x2, #0x6                   	// #6
   52898:	mov	x1, x19
   5289c:	mov	x0, x19
   528a0:	bl	cc60 <mpfr_div_ui@plt>
   528a4:	mov	w3, #0x0                   	// #0
   528a8:	mov	x2, x19
   528ac:	mov	x1, x22
   528b0:	mov	x0, x22
   528b4:	bl	c1a0 <mpfr_add@plt>
   528b8:	ldr	x2, [sp, #224]
   528bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   528c0:	cmp	x2, x0
   528c4:	b.le	52704 <mpfr_li2@@Base+0x1138>
   528c8:	mov	x0, #0x1                   	// #1
   528cc:	sub	x27, x0, x27
   528d0:	mov	x3, #0x3                   	// #3
   528d4:	cmp	x27, x3
   528d8:	csel	x27, x27, x3, ge  // ge = tcont
   528dc:	ldr	x0, [sp, #136]
   528e0:	sub	x1, x28, x0
   528e4:	cmp	x27, x1
   528e8:	csel	x1, x27, x1, ge  // ge = tcont
   528ec:	add	x1, x1, #0x2
   528f0:	ldr	x0, [sp, #152]
   528f4:	add	x0, x0, #0x2
   528f8:	ldr	x4, [sp, #144]
   528fc:	sub	x1, x1, x4
   52900:	cmp	x0, x1
   52904:	csel	x0, x0, x1, ge  // ge = tcont
   52908:	mov	x1, #0xffffffffffffffff    	// #-1
   5290c:	subs	x0, x0, x21
   52910:	csel	x0, x0, x1, pl  // pl = nfrst
   52914:	add	x0, x0, #0x2
   52918:	add	x21, x21, x0
   5291c:	cmp	x21, x3
   52920:	csel	x21, x21, x3, ge  // ge = tcont
   52924:	subs	x21, x21, x2
   52928:	csel	x21, x21, x1, pl  // pl = nfrst
   5292c:	ldr	w0, [sp, #112]
   52930:	cmp	w0, #0x0
   52934:	ldr	x0, [sp, #96]
   52938:	cinc	x3, x0, eq  // eq = none
   5293c:	add	x21, x21, #0x2
   52940:	ldr	x0, [sp, #208]
   52944:	add	x1, x0, #0x3e
   52948:	subs	x0, x0, #0x1
   5294c:	csel	x1, x1, x0, mi  // mi = first
   52950:	asr	x1, x1, #6
   52954:	sub	x2, x20, x21
   52958:	add	x1, x1, #0x1
   5295c:	ldr	x0, [sp, #232]
   52960:	bl	c370 <mpfr_round_p@plt>
   52964:	cbz	w0, 52704 <mpfr_li2@@Base+0x1138>
   52968:	add	x20, sp, #0xd0
   5296c:	ldr	w3, [sp, #216]
   52970:	ldr	w2, [sp, #112]
   52974:	mov	x1, x20
   52978:	ldr	x21, [sp, #104]
   5297c:	mov	x0, x21
   52980:	bl	c6a0 <mpfr_set4@plt>
   52984:	mov	w19, w0
   52988:	mov	x4, #0x0                   	// #0
   5298c:	add	x3, sp, #0x130
   52990:	add	x2, sp, #0x110
   52994:	add	x1, sp, #0xf0
   52998:	mov	x0, x20
   5299c:	bl	c1b0 <mpfr_clears@plt>
   529a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   529a4:	ldr	x1, [x0, #2576]
   529a8:	add	x0, x0, #0xa10
   529ac:	blr	x1
   529b0:	mrs	x1, tpidr_el0
   529b4:	ldr	w2, [sp, #116]
   529b8:	str	w2, [x1, x0]
   529bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   529c0:	ldr	x3, [x0, #2512]
   529c4:	add	x0, x0, #0x9d0
   529c8:	blr	x3
   529cc:	ldr	x3, [sp, #120]
   529d0:	str	x3, [x1, x0]
   529d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   529d8:	ldr	x4, [x0, #2544]
   529dc:	add	x0, x0, #0x9f0
   529e0:	blr	x4
   529e4:	ldr	x4, [sp, #128]
   529e8:	str	x4, [x1, x0]
   529ec:	ldr	x0, [x21, #16]
   529f0:	cmp	x4, x0
   529f4:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   529f8:	b.gt	52a44 <mpfr_li2@@Base+0x1478>
   529fc:	cbz	w19, 534a0 <mpfr_li2@@Base+0x1ed4>
   52a00:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52a04:	ldr	x1, [x0, #2576]
   52a08:	add	x0, x0, #0xa10
   52a0c:	blr	x1
   52a10:	orr	w2, w2, #0x8
   52a14:	mrs	x1, tpidr_el0
   52a18:	str	w2, [x1, x0]
   52a1c:	ldp	x21, x22, [sp, #32]
   52a20:	ldp	x23, x24, [sp, #48]
   52a24:	ldp	x27, x28, [sp, #80]
   52a28:	b	51a68 <mpfr_li2@@Base+0x49c>
   52a2c:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   52a30:	add	x2, x2, #0x18
   52a34:	mov	w1, #0x1f5                 	// #501
   52a38:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52a3c:	add	x0, x0, #0x1b0
   52a40:	bl	cb40 <mpfr_assert_fail@plt>
   52a44:	ldr	w2, [sp, #112]
   52a48:	mov	w1, w19
   52a4c:	ldr	x0, [sp, #104]
   52a50:	bl	cb30 <mpfr_check_range@plt>
   52a54:	mov	w19, w0
   52a58:	ldp	x21, x22, [sp, #32]
   52a5c:	ldp	x23, x24, [sp, #48]
   52a60:	ldp	x27, x28, [sp, #80]
   52a64:	b	51a68 <mpfr_li2@@Base+0x49c>
   52a68:	mov	x2, #0x0                   	// #0
   52a6c:	mov	x1, #0xffffffffffffffff    	// #-1
   52a70:	mov	x0, x26
   52a74:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   52a78:	tbnz	w0, #31, 52d24 <mpfr_li2@@Base+0x1758>
   52a7c:	stp	x27, x28, [sp, #80]
   52a80:	mov	x1, x20
   52a84:	add	x0, sp, #0xf0
   52a88:	bl	ca80 <mpfr_init2@plt>
   52a8c:	mov	x1, x20
   52a90:	add	x0, sp, #0x110
   52a94:	bl	ca80 <mpfr_init2@plt>
   52a98:	mov	x1, x20
   52a9c:	add	x0, sp, #0x130
   52aa0:	bl	ca80 <mpfr_init2@plt>
   52aa4:	mov	x23, #0x40                  	// #64
   52aa8:	add	x24, sp, #0x130
   52aac:	add	x19, sp, #0x110
   52ab0:	add	x22, sp, #0xf0
   52ab4:	mov	x28, #0xfffffffffffffeff    	// #-257
   52ab8:	movk	x28, #0x7fff, lsl #48
   52abc:	b	52b1c <mpfr_li2@@Base+0x1550>
   52ac0:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52ac4:	add	x2, x2, #0x1c8
   52ac8:	mov	w1, #0x214                 	// #532
   52acc:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52ad0:	add	x0, x0, #0x1b0
   52ad4:	bl	cb40 <mpfr_assert_fail@plt>
   52ad8:	mov	x27, #0x1                   	// #1
   52adc:	b	52b84 <mpfr_li2@@Base+0x15b8>
   52ae0:	sub	x0, x28, x20
   52ae4:	cmp	x0, x23
   52ae8:	b.lt	52ce8 <mpfr_li2@@Base+0x171c>  // b.tstop
   52aec:	add	x20, x20, x23
   52af0:	add	x23, x20, x20, lsr #63
   52af4:	asr	x23, x23, #1
   52af8:	mov	x1, x20
   52afc:	mov	x0, x22
   52b00:	bl	bed0 <mpfr_set_prec@plt>
   52b04:	mov	x1, x20
   52b08:	mov	x0, x19
   52b0c:	bl	bed0 <mpfr_set_prec@plt>
   52b10:	mov	x1, x20
   52b14:	mov	x0, x24
   52b18:	bl	bed0 <mpfr_set_prec@plt>
   52b1c:	mov	w2, #0x0                   	// #0
   52b20:	mov	x1, x26
   52b24:	mov	x0, x24
   52b28:	bl	bd70 <mpfr_neg@plt>
   52b2c:	mov	w2, #0x0                   	// #0
   52b30:	mov	x1, x24
   52b34:	mov	x0, x19
   52b38:	bl	c700 <mpfr_log1p@plt>
   52b3c:	mov	w2, #0x0                   	// #0
   52b40:	mov	x1, x19
   52b44:	mov	x0, x22
   52b48:	bl	5129c <mpfr_d_div@@Base+0x140>
   52b4c:	mov	w21, w0
   52b50:	mov	w2, #0x0                   	// #0
   52b54:	mov	x1, x22
   52b58:	mov	x0, x22
   52b5c:	bl	bd70 <mpfr_neg@plt>
   52b60:	ldr	x25, [sp, #288]
   52b64:	cbz	w21, 52ad8 <mpfr_li2@@Base+0x150c>
   52b68:	cmp	w21, #0x0
   52b6c:	b.le	52ac0 <mpfr_li2@@Base+0x14f4>
   52b70:	sxtw	x0, w21
   52b74:	clz	x0, x0
   52b78:	mov	w27, #0x41                  	// #65
   52b7c:	sub	w0, w27, w0
   52b80:	sxtw	x27, w0
   52b84:	ldr	x21, [sp, #256]
   52b88:	mov	w2, #0x0                   	// #0
   52b8c:	mov	x1, x19
   52b90:	mov	x0, x19
   52b94:	bl	c400 <mpfr_sqr@plt>
   52b98:	mov	w3, #0x0                   	// #0
   52b9c:	mov	x2, #0x2                   	// #2
   52ba0:	mov	x1, x19
   52ba4:	mov	x0, x19
   52ba8:	bl	c8f0 <mpfr_div_2ui@plt>
   52bac:	mov	w3, #0x0                   	// #0
   52bb0:	mov	x2, x19
   52bb4:	mov	x1, x22
   52bb8:	mov	x0, x22
   52bbc:	bl	bb70 <mpfr_sub@plt>
   52bc0:	ldr	x1, [sp, #256]
   52bc4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   52bc8:	cmp	x1, x0
   52bcc:	b.le	52ae0 <mpfr_li2@@Base+0x1514>
   52bd0:	neg	x25, x25
   52bd4:	cmp	x25, #0x3
   52bd8:	mov	x0, #0x3                   	// #3
   52bdc:	csel	x25, x25, x0, ge  // ge = tcont
   52be0:	sub	x2, x27, x21
   52be4:	cmp	x25, x2
   52be8:	csel	x25, x25, x2, ge  // ge = tcont
   52bec:	ldr	w0, [sp, #112]
   52bf0:	cmp	w0, #0x0
   52bf4:	ldr	x0, [sp, #96]
   52bf8:	cinc	x3, x0, eq  // eq = none
   52bfc:	add	x2, x25, #0x2
   52c00:	ldr	x0, [sp, #240]
   52c04:	add	x1, x0, #0x3e
   52c08:	subs	x0, x0, #0x1
   52c0c:	csel	x1, x1, x0, mi  // mi = first
   52c10:	asr	x1, x1, #6
   52c14:	sub	x2, x20, x2
   52c18:	add	x1, x1, #0x1
   52c1c:	ldr	x0, [sp, #264]
   52c20:	bl	c370 <mpfr_round_p@plt>
   52c24:	cbz	w0, 52ae0 <mpfr_li2@@Base+0x1514>
   52c28:	add	x20, sp, #0xf0
   52c2c:	ldr	w3, [sp, #248]
   52c30:	ldr	w2, [sp, #112]
   52c34:	mov	x1, x20
   52c38:	ldr	x21, [sp, #104]
   52c3c:	mov	x0, x21
   52c40:	bl	c6a0 <mpfr_set4@plt>
   52c44:	mov	w19, w0
   52c48:	mov	x3, #0x0                   	// #0
   52c4c:	add	x2, sp, #0x130
   52c50:	add	x1, sp, #0x110
   52c54:	mov	x0, x20
   52c58:	bl	c1b0 <mpfr_clears@plt>
   52c5c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52c60:	ldr	x1, [x0, #2576]
   52c64:	add	x0, x0, #0xa10
   52c68:	blr	x1
   52c6c:	mrs	x1, tpidr_el0
   52c70:	ldr	w2, [sp, #116]
   52c74:	str	w2, [x1, x0]
   52c78:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52c7c:	ldr	x3, [x0, #2512]
   52c80:	add	x0, x0, #0x9d0
   52c84:	blr	x3
   52c88:	ldr	x3, [sp, #120]
   52c8c:	str	x3, [x1, x0]
   52c90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52c94:	ldr	x4, [x0, #2544]
   52c98:	add	x0, x0, #0x9f0
   52c9c:	blr	x4
   52ca0:	ldr	x4, [sp, #128]
   52ca4:	str	x4, [x1, x0]
   52ca8:	ldr	x0, [x21, #16]
   52cac:	cmp	x4, x0
   52cb0:	ccmp	x3, x0, #0x0, ge  // ge = tcont
   52cb4:	b.gt	52d00 <mpfr_li2@@Base+0x1734>
   52cb8:	cbz	w19, 534b0 <mpfr_li2@@Base+0x1ee4>
   52cbc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52cc0:	ldr	x1, [x0, #2576]
   52cc4:	add	x0, x0, #0xa10
   52cc8:	blr	x1
   52ccc:	orr	w2, w2, #0x8
   52cd0:	mrs	x1, tpidr_el0
   52cd4:	str	w2, [x1, x0]
   52cd8:	ldp	x21, x22, [sp, #32]
   52cdc:	ldp	x23, x24, [sp, #48]
   52ce0:	ldp	x27, x28, [sp, #80]
   52ce4:	b	51a68 <mpfr_li2@@Base+0x49c>
   52ce8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   52cec:	add	x2, x2, #0x18
   52cf0:	mov	w1, #0x21e                 	// #542
   52cf4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52cf8:	add	x0, x0, #0x1b0
   52cfc:	bl	cb40 <mpfr_assert_fail@plt>
   52d00:	ldr	w2, [sp, #112]
   52d04:	mov	w1, w19
   52d08:	ldr	x0, [sp, #104]
   52d0c:	bl	cb30 <mpfr_check_range@plt>
   52d10:	mov	w19, w0
   52d14:	ldp	x21, x22, [sp, #32]
   52d18:	ldp	x23, x24, [sp, #48]
   52d1c:	ldp	x27, x28, [sp, #80]
   52d20:	b	51a68 <mpfr_li2@@Base+0x49c>
   52d24:	mov	x2, #0x0                   	// #0
   52d28:	mov	x1, #0xfffffffffffffff9    	// #-7
   52d2c:	mov	x0, x26
   52d30:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   52d34:	cmp	w0, #0x0
   52d38:	b.le	52d9c <mpfr_li2@@Base+0x17d0>
   52d3c:	stp	x27, x28, [sp, #80]
   52d40:	mov	x1, x20
   52d44:	add	x0, sp, #0xb0
   52d48:	bl	ca80 <mpfr_init2@plt>
   52d4c:	mov	x1, x20
   52d50:	add	x0, sp, #0xd0
   52d54:	bl	ca80 <mpfr_init2@plt>
   52d58:	mov	x1, x20
   52d5c:	add	x0, sp, #0xf0
   52d60:	bl	ca80 <mpfr_init2@plt>
   52d64:	mov	x1, x20
   52d68:	add	x0, sp, #0x110
   52d6c:	bl	ca80 <mpfr_init2@plt>
   52d70:	mov	x1, x20
   52d74:	add	x0, sp, #0x130
   52d78:	bl	ca80 <mpfr_init2@plt>
   52d7c:	mov	x0, #0x40                  	// #64
   52d80:	str	x0, [sp, #136]
   52d84:	add	x22, sp, #0x130
   52d88:	mov	x24, #0x1                   	// #1
   52d8c:	add	x23, sp, #0xd0
   52d90:	add	x21, sp, #0xb0
   52d94:	mov	w25, #0x2                   	// #2
   52d98:	b	5305c <mpfr_li2@@Base+0x1a90>
   52d9c:	ldr	x0, [sp, #104]
   52da0:	ldr	x22, [x0]
   52da4:	add	x23, x22, #0x14
   52da8:	mov	x2, #0x0                   	// #0
   52dac:	mov	x1, #0xfffffffffffffff9    	// #-7
   52db0:	mov	x0, x26
   52db4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   52db8:	cmp	w0, #0x0
   52dbc:	b.gt	52ecc <mpfr_li2@@Base+0x1900>
   52dc0:	add	x19, sp, #0x110
   52dc4:	mov	x1, x23
   52dc8:	mov	x0, x19
   52dcc:	bl	ca80 <mpfr_init2@plt>
   52dd0:	add	x21, sp, #0x130
   52dd4:	mov	x1, x23
   52dd8:	mov	x0, x21
   52ddc:	bl	ca80 <mpfr_init2@plt>
   52de0:	mov	w2, #0x0                   	// #0
   52de4:	mov	x1, x26
   52de8:	mov	x0, x19
   52dec:	bl	bd70 <mpfr_neg@plt>
   52df0:	mov	w2, #0x0                   	// #0
   52df4:	mov	x1, x19
   52df8:	mov	x0, x19
   52dfc:	bl	c090 <mpfr_log@plt>
   52e00:	mov	w2, #0x0                   	// #0
   52e04:	mov	x1, x19
   52e08:	mov	x0, x19
   52e0c:	bl	c400 <mpfr_sqr@plt>
   52e10:	mov	w3, #0x0                   	// #0
   52e14:	mov	x2, #0x1                   	// #1
   52e18:	mov	x1, x19
   52e1c:	mov	x0, x19
   52e20:	bl	c8f0 <mpfr_div_2ui@plt>
   52e24:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52e28:	ldr	x1, [x0, #2624]
   52e2c:	add	x0, x0, #0xa40
   52e30:	blr	x1
   52e34:	mov	w2, #0x0                   	// #0
   52e38:	mrs	x1, tpidr_el0
   52e3c:	add	x1, x1, x0
   52e40:	mov	x0, x21
   52e44:	bl	c380 <mpfr_cache@plt>
   52e48:	mov	w2, #0x0                   	// #0
   52e4c:	mov	x1, x21
   52e50:	mov	x0, x21
   52e54:	bl	c400 <mpfr_sqr@plt>
   52e58:	mov	w3, #0x0                   	// #0
   52e5c:	mov	x2, #0x6                   	// #6
   52e60:	mov	x1, x21
   52e64:	mov	x0, x21
   52e68:	bl	cc60 <mpfr_div_ui@plt>
   52e6c:	ldr	x1, [sp, #288]
   52e70:	ldr	x0, [sp, #320]
   52e74:	cmp	x1, x0
   52e78:	b.lt	52ee8 <mpfr_li2@@Base+0x191c>  // b.tstop
   52e7c:	add	x0, sp, #0x110
   52e80:	mov	w3, #0x0                   	// #0
   52e84:	add	x2, sp, #0x130
   52e88:	mov	x1, x0
   52e8c:	bl	c1a0 <mpfr_add@plt>
   52e90:	ldr	x1, [sp, #288]
   52e94:	add	x0, x22, #0x12
   52e98:	sub	x0, x0, x1
   52e9c:	ldr	x2, [x26, #16]
   52ea0:	cmp	x2, x0
   52ea4:	mov	x0, #0x4                   	// #4
   52ea8:	movk	x0, #0x8000, lsl #48
   52eac:	ccmp	x1, x0, #0x1, ge  // ge = tcont
   52eb0:	b.ge	52f04 <mpfr_li2@@Base+0x1938>  // b.tcont
   52eb4:	stp	x27, x28, [sp, #80]
   52eb8:	add	x0, sp, #0x110
   52ebc:	bl	c070 <mpfr_clear@plt>
   52ec0:	add	x0, sp, #0x130
   52ec4:	bl	c070 <mpfr_clear@plt>
   52ec8:	b	52d40 <mpfr_li2@@Base+0x1774>
   52ecc:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52ed0:	add	x2, x2, #0x270
   52ed4:	mov	w1, #0xb4                  	// #180
   52ed8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52edc:	add	x0, x0, #0x1b0
   52ee0:	bl	cb40 <mpfr_assert_fail@plt>
   52ee4:	b	52dc0 <mpfr_li2@@Base+0x17f4>
   52ee8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52eec:	add	x2, x2, #0x390
   52ef0:	mov	w1, #0xc0                  	// #192
   52ef4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52ef8:	add	x0, x0, #0x1b0
   52efc:	bl	cb40 <mpfr_assert_fail@plt>
   52f00:	b	52e7c <mpfr_li2@@Base+0x18b0>
   52f04:	ldr	w0, [sp, #112]
   52f08:	cmp	w0, #0x0
   52f0c:	ldr	x0, [sp, #104]
   52f10:	ldr	x3, [x0]
   52f14:	ldr	x1, [sp, #272]
   52f18:	sub	x1, x1, #0x1
   52f1c:	mov	x0, #0x40                  	// #64
   52f20:	sdiv	x1, x1, x0
   52f24:	cinc	x3, x3, eq  // eq = none
   52f28:	add	x2, x22, #0x10
   52f2c:	add	x1, x1, #0x1
   52f30:	ldr	x0, [sp, #296]
   52f34:	bl	c370 <mpfr_round_p@plt>
   52f38:	cbz	w0, 52eb4 <mpfr_li2@@Base+0x18e8>
   52f3c:	ldr	w21, [sp, #112]
   52f40:	mov	w2, w21
   52f44:	add	x1, sp, #0x110
   52f48:	ldr	x0, [sp, #104]
   52f4c:	bl	bd70 <mpfr_neg@plt>
   52f50:	mov	w19, w0
   52f54:	cmp	w21, #0x5
   52f58:	b.eq	53458 <mpfr_li2@@Base+0x1e8c>  // b.none
   52f5c:	add	x0, sp, #0x110
   52f60:	bl	c070 <mpfr_clear@plt>
   52f64:	add	x0, sp, #0x130
   52f68:	bl	c070 <mpfr_clear@plt>
   52f6c:	cbz	w19, 52fd4 <mpfr_li2@@Base+0x1a08>
   52f70:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52f74:	ldr	x1, [x0, #2576]
   52f78:	add	x0, x0, #0xa10
   52f7c:	blr	x1
   52f80:	mrs	x1, tpidr_el0
   52f84:	ldr	w2, [sp, #116]
   52f88:	str	w2, [x1, x0]
   52f8c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52f90:	ldr	x2, [x0, #2512]
   52f94:	add	x0, x0, #0x9d0
   52f98:	blr	x2
   52f9c:	ldr	x2, [sp, #120]
   52fa0:	str	x2, [x1, x0]
   52fa4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   52fa8:	ldr	x3, [x0, #2544]
   52fac:	add	x0, x0, #0x9f0
   52fb0:	blr	x3
   52fb4:	ldr	x3, [sp, #128]
   52fb8:	str	x3, [x1, x0]
   52fbc:	ldr	x0, [sp, #104]
   52fc0:	ldr	x0, [x0, #16]
   52fc4:	cmp	x2, x0
   52fc8:	ccmp	x3, x0, #0x1, le
   52fcc:	b.ge	533d4 <mpfr_li2@@Base+0x1e08>  // b.tcont
   52fd0:	b	53404 <mpfr_li2@@Base+0x1e38>
   52fd4:	stp	x27, x28, [sp, #80]
   52fd8:	b	52d40 <mpfr_li2@@Base+0x1774>
   52fdc:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   52fe0:	add	x2, x2, #0x3b8
   52fe4:	mov	w1, #0x24d                 	// #589
   52fe8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   52fec:	add	x0, x0, #0x1b0
   52ff0:	bl	cb40 <mpfr_assert_fail@plt>
   52ff4:	mov	x0, #0xfffffffffffffeff    	// #-257
   52ff8:	movk	x0, #0x7fff, lsl #48
   52ffc:	sub	x0, x0, x20
   53000:	ldr	x1, [sp, #136]
   53004:	cmp	x0, x1
   53008:	b.lt	533b8 <mpfr_li2@@Base+0x1dec>  // b.tstop
   5300c:	ldr	x0, [sp, #136]
   53010:	add	x20, x20, x0
   53014:	add	x0, x20, x20, lsr #63
   53018:	asr	x0, x0, #1
   5301c:	str	x0, [sp, #136]
   53020:	mov	x1, x20
   53024:	mov	x0, x21
   53028:	bl	bed0 <mpfr_set_prec@plt>
   5302c:	mov	x1, x20
   53030:	mov	x0, x23
   53034:	bl	bed0 <mpfr_set_prec@plt>
   53038:	mov	x1, x20
   5303c:	add	x0, sp, #0xf0
   53040:	bl	bed0 <mpfr_set_prec@plt>
   53044:	mov	x1, x20
   53048:	add	x0, sp, #0x110
   5304c:	bl	bed0 <mpfr_set_prec@plt>
   53050:	mov	x1, x20
   53054:	mov	x0, x22
   53058:	bl	bed0 <mpfr_set_prec@plt>
   5305c:	mov	w3, #0x0                   	// #0
   53060:	mov	x2, x26
   53064:	mov	x1, x24
   53068:	mov	x0, x22
   5306c:	bl	c2f0 <mpfr_ui_div@plt>
   53070:	mov	w2, #0x0                   	// #0
   53074:	mov	x1, x22
   53078:	mov	x0, x22
   5307c:	bl	bd70 <mpfr_neg@plt>
   53080:	mov	w2, #0x0                   	// #0
   53084:	mov	x1, x22
   53088:	mov	x0, x23
   5308c:	bl	c700 <mpfr_log1p@plt>
   53090:	mov	w2, #0x0                   	// #0
   53094:	mov	x1, x23
   53098:	mov	x0, x21
   5309c:	bl	5129c <mpfr_d_div@@Base+0x140>
   530a0:	mov	w27, w0
   530a4:	mov	w3, #0x0                   	// #0
   530a8:	mov	x2, x26
   530ac:	mov	x1, x24
   530b0:	mov	x0, x22
   530b4:	bl	ca50 <mpfr_ui_sub@plt>
   530b8:	mov	w2, w25
   530bc:	mov	x1, x22
   530c0:	mov	x0, x23
   530c4:	bl	c090 <mpfr_log@plt>
   530c8:	mov	w2, #0x0                   	// #0
   530cc:	mov	x1, x26
   530d0:	mov	x0, x22
   530d4:	bl	bd70 <mpfr_neg@plt>
   530d8:	add	x19, sp, #0xf0
   530dc:	mov	w2, w25
   530e0:	mov	x1, x22
   530e4:	mov	x0, x19
   530e8:	bl	c090 <mpfr_log@plt>
   530ec:	add	x0, sp, #0x110
   530f0:	mov	w3, #0x0                   	// #0
   530f4:	mov	x2, x23
   530f8:	mov	x1, x19
   530fc:	mov	x19, x0
   53100:	bl	bd50 <mpfr_mul@plt>
   53104:	mov	w3, #0x0                   	// #0
   53108:	mov	x2, x24
   5310c:	mov	x1, x19
   53110:	mov	x0, x19
   53114:	bl	c8f0 <mpfr_div_2ui@plt>
   53118:	mov	w3, #0x0                   	// #0
   5311c:	mov	x2, x19
   53120:	mov	x1, x21
   53124:	mov	x0, x21
   53128:	bl	bb70 <mpfr_sub@plt>
   5312c:	cbz	w27, 5343c <mpfr_li2@@Base+0x1e70>
   53130:	cmp	w27, #0x0
   53134:	b.le	52fdc <mpfr_li2@@Base+0x1a10>
   53138:	sxtw	x0, w27
   5313c:	clz	x1, x0
   53140:	ldr	x27, [sp, #192]
   53144:	mov	w0, #0x41                  	// #65
   53148:	sub	w0, w0, w1
   5314c:	sxtw	x0, w0
   53150:	sub	x0, x0, x27
   53154:	mov	x1, #0x4                   	// #4
   53158:	str	x1, [sp, #144]
   5315c:	cmp	x0, #0x2
   53160:	b.le	5316c <mpfr_li2@@Base+0x1ba0>
   53164:	add	x0, x0, #0x1
   53168:	str	x0, [sp, #144]
   5316c:	add	x19, sp, #0x110
   53170:	mov	w2, #0x0                   	// #0
   53174:	add	x1, sp, #0xf0
   53178:	mov	x0, x19
   5317c:	bl	c400 <mpfr_sqr@plt>
   53180:	mov	w3, #0x0                   	// #0
   53184:	mov	x2, #0x2                   	// #2
   53188:	mov	x1, x19
   5318c:	mov	x0, x19
   53190:	bl	c8f0 <mpfr_div_2ui@plt>
   53194:	mov	w3, #0x0                   	// #0
   53198:	mov	x2, x19
   5319c:	mov	x1, x21
   531a0:	mov	x0, x21
   531a4:	bl	bb70 <mpfr_sub@plt>
   531a8:	ldr	x0, [sp, #288]
   531ac:	str	x0, [sp, #152]
   531b0:	ldr	x28, [sp, #192]
   531b4:	mov	w2, #0x0                   	// #0
   531b8:	mov	x1, x23
   531bc:	mov	x0, x19
   531c0:	bl	c400 <mpfr_sqr@plt>
   531c4:	mov	w3, #0x0                   	// #0
   531c8:	mov	x2, #0x2                   	// #2
   531cc:	mov	x1, x19
   531d0:	mov	x0, x19
   531d4:	bl	c8f0 <mpfr_div_2ui@plt>
   531d8:	mov	w3, #0x0                   	// #0
   531dc:	mov	x2, x19
   531e0:	mov	x1, x21
   531e4:	mov	x0, x21
   531e8:	bl	c1a0 <mpfr_add@plt>
   531ec:	ldr	x1, [sp, #288]
   531f0:	str	x1, [sp, #160]
   531f4:	ldr	x1, [sp, #192]
   531f8:	str	x1, [sp, #168]
   531fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53200:	ldr	x2, [x0, #2624]
   53204:	add	x0, x0, #0xa40
   53208:	blr	x2
   5320c:	mov	w2, w25
   53210:	mrs	x1, tpidr_el0
   53214:	add	x1, x1, x0
   53218:	mov	x0, x19
   5321c:	bl	c380 <mpfr_cache@plt>
   53220:	mov	w2, #0x0                   	// #0
   53224:	mov	x1, x19
   53228:	mov	x0, x19
   5322c:	bl	c400 <mpfr_sqr@plt>
   53230:	mov	w3, #0x0                   	// #0
   53234:	mov	x2, #0x6                   	// #6
   53238:	mov	x1, x19
   5323c:	mov	x0, x19
   53240:	bl	cc60 <mpfr_div_ui@plt>
   53244:	mov	w3, #0x0                   	// #0
   53248:	mov	x2, x19
   5324c:	mov	x1, x21
   53250:	mov	x0, x21
   53254:	bl	bb70 <mpfr_sub@plt>
   53258:	ldr	x2, [sp, #192]
   5325c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53260:	cmp	x2, x0
   53264:	b.le	52ff4 <mpfr_li2@@Base+0x1a28>
   53268:	ldr	x0, [sp, #152]
   5326c:	add	x0, x0, #0x3
   53270:	ldr	x3, [sp, #144]
   53274:	add	x27, x27, x3
   53278:	cmp	x0, x27
   5327c:	csel	x0, x0, x27, ge  // ge = tcont
   53280:	mov	x3, #0xffffffffffffffff    	// #-1
   53284:	subs	x0, x0, x28
   53288:	csel	x0, x0, x3, pl  // pl = nfrst
   5328c:	add	x1, x0, #0x2
   53290:	ldr	x0, [sp, #160]
   53294:	add	x0, x0, #0x3
   53298:	add	x1, x28, x1
   5329c:	cmp	x0, x1
   532a0:	csel	x0, x0, x1, ge  // ge = tcont
   532a4:	ldr	x1, [sp, #168]
   532a8:	subs	x0, x0, x1
   532ac:	csel	x0, x0, x3, pl  // pl = nfrst
   532b0:	add	x0, x0, #0x2
   532b4:	add	x0, x1, x0
   532b8:	cmp	x0, #0x3
   532bc:	mov	x1, #0x3                   	// #3
   532c0:	csel	x0, x0, x1, ge  // ge = tcont
   532c4:	subs	x0, x0, x2
   532c8:	csel	x0, x0, x3, pl  // pl = nfrst
   532cc:	add	x0, x0, #0x2
   532d0:	ldr	w1, [sp, #112]
   532d4:	cmp	w1, #0x0
   532d8:	ldr	x1, [sp, #96]
   532dc:	cinc	x3, x1, eq  // eq = none
   532e0:	add	x0, x2, x0
   532e4:	ldr	x2, [sp, #176]
   532e8:	add	x1, x2, #0x3e
   532ec:	subs	x2, x2, #0x1
   532f0:	csel	x1, x1, x2, mi  // mi = first
   532f4:	asr	x1, x1, #6
   532f8:	sub	x2, x20, x0
   532fc:	add	x1, x1, #0x1
   53300:	ldr	x0, [sp, #200]
   53304:	bl	c370 <mpfr_round_p@plt>
   53308:	cbz	w0, 52ff4 <mpfr_li2@@Base+0x1a28>
   5330c:	add	x20, sp, #0xb0
   53310:	ldr	w3, [sp, #184]
   53314:	ldr	w2, [sp, #112]
   53318:	mov	x1, x20
   5331c:	ldr	x21, [sp, #104]
   53320:	mov	x0, x21
   53324:	bl	c6a0 <mpfr_set4@plt>
   53328:	mov	w19, w0
   5332c:	mov	x5, #0x0                   	// #0
   53330:	add	x4, sp, #0x130
   53334:	add	x3, sp, #0x110
   53338:	add	x2, sp, #0xf0
   5333c:	add	x1, sp, #0xd0
   53340:	mov	x0, x20
   53344:	bl	c1b0 <mpfr_clears@plt>
   53348:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5334c:	ldr	x1, [x0, #2576]
   53350:	add	x0, x0, #0xa10
   53354:	blr	x1
   53358:	mrs	x1, tpidr_el0
   5335c:	ldr	w2, [sp, #116]
   53360:	str	w2, [x1, x0]
   53364:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53368:	ldr	x2, [x0, #2512]
   5336c:	add	x0, x0, #0x9d0
   53370:	blr	x2
   53374:	ldr	x2, [sp, #120]
   53378:	str	x2, [x1, x0]
   5337c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53380:	ldr	x3, [x0, #2544]
   53384:	add	x0, x0, #0x9f0
   53388:	blr	x3
   5338c:	ldr	x3, [sp, #128]
   53390:	str	x3, [x1, x0]
   53394:	ldr	x0, [x21, #16]
   53398:	cmp	x3, x0
   5339c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   533a0:	b.gt	53400 <mpfr_li2@@Base+0x1e34>
   533a4:	cbnz	w19, 533d0 <mpfr_li2@@Base+0x1e04>
   533a8:	ldp	x21, x22, [sp, #32]
   533ac:	ldp	x23, x24, [sp, #48]
   533b0:	ldp	x27, x28, [sp, #80]
   533b4:	b	51a68 <mpfr_li2@@Base+0x49c>
   533b8:	adrp	x2, 65000 <mpfr_l2b_2_0__tab@@Base+0x3c38>
   533bc:	add	x2, x2, #0x18
   533c0:	mov	w1, #0x266                 	// #614
   533c4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   533c8:	add	x0, x0, #0x1b0
   533cc:	bl	cb40 <mpfr_assert_fail@plt>
   533d0:	ldp	x27, x28, [sp, #80]
   533d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   533d8:	ldr	x1, [x0, #2576]
   533dc:	add	x0, x0, #0xa10
   533e0:	blr	x1
   533e4:	ldr	w1, [sp, #116]
   533e8:	orr	w2, w1, #0x8
   533ec:	mrs	x1, tpidr_el0
   533f0:	str	w2, [x1, x0]
   533f4:	ldp	x21, x22, [sp, #32]
   533f8:	ldp	x23, x24, [sp, #48]
   533fc:	b	51a68 <mpfr_li2@@Base+0x49c>
   53400:	ldp	x27, x28, [sp, #80]
   53404:	ldr	w2, [sp, #112]
   53408:	mov	w1, w19
   5340c:	ldr	x0, [sp, #104]
   53410:	bl	cb30 <mpfr_check_range@plt>
   53414:	mov	w19, w0
   53418:	ldp	x21, x22, [sp, #32]
   5341c:	ldp	x23, x24, [sp, #48]
   53420:	b	51a68 <mpfr_li2@@Base+0x49c>
   53424:	add	x0, sp, #0x110
   53428:	bl	c070 <mpfr_clear@plt>
   5342c:	add	x0, sp, #0x130
   53430:	bl	c070 <mpfr_clear@plt>
   53434:	mov	w19, #0x1                   	// #1
   53438:	b	51ebc <mpfr_li2@@Base+0x8f0>
   5343c:	ldr	x27, [sp, #192]
   53440:	sub	x0, x24, x27
   53444:	cmp	x0, #0x2
   53448:	b.gt	53164 <mpfr_li2@@Base+0x1b98>
   5344c:	mov	x0, #0x4                   	// #4
   53450:	str	x0, [sp, #144]
   53454:	b	5316c <mpfr_li2@@Base+0x1ba0>
   53458:	add	x0, sp, #0x110
   5345c:	bl	c070 <mpfr_clear@plt>
   53460:	add	x0, sp, #0x130
   53464:	bl	c070 <mpfr_clear@plt>
   53468:	mov	w19, #0x1                   	// #1
   5346c:	b	52f70 <mpfr_li2@@Base+0x19a4>
   53470:	ldp	x21, x22, [sp, #32]
   53474:	ldp	x23, x24, [sp, #48]
   53478:	ldp	x27, x28, [sp, #80]
   5347c:	b	51a68 <mpfr_li2@@Base+0x49c>
   53480:	ldp	x21, x22, [sp, #32]
   53484:	ldp	x23, x24, [sp, #48]
   53488:	ldp	x27, x28, [sp, #80]
   5348c:	b	51a68 <mpfr_li2@@Base+0x49c>
   53490:	ldp	x21, x22, [sp, #32]
   53494:	ldp	x23, x24, [sp, #48]
   53498:	ldp	x27, x28, [sp, #80]
   5349c:	b	51a68 <mpfr_li2@@Base+0x49c>
   534a0:	ldp	x21, x22, [sp, #32]
   534a4:	ldp	x23, x24, [sp, #48]
   534a8:	ldp	x27, x28, [sp, #80]
   534ac:	b	51a68 <mpfr_li2@@Base+0x49c>
   534b0:	ldp	x21, x22, [sp, #32]
   534b4:	ldp	x23, x24, [sp, #48]
   534b8:	ldp	x27, x28, [sp, #80]
   534bc:	b	51a68 <mpfr_li2@@Base+0x49c>
   534c0:	stp	x29, x30, [sp, #-208]!
   534c4:	mov	x29, sp
   534c8:	stp	x19, x20, [sp, #16]
   534cc:	stp	x21, x22, [sp, #32]
   534d0:	stp	x23, x24, [sp, #48]
   534d4:	stp	x25, x26, [sp, #64]
   534d8:	stp	x27, x28, [sp, #80]
   534dc:	mov	x20, x0
   534e0:	mov	x21, x1
   534e4:	str	x2, [x29, #176]
   534e8:	str	w4, [x29, #188]
   534ec:	sub	x19, x1, #0x1
   534f0:	asr	x19, x19, #6
   534f4:	add	x26, x19, #0x1
   534f8:	sub	x3, x3, #0x1
   534fc:	asr	x3, x3, #6
   53500:	add	x23, x3, #0x1
   53504:	cmp	x19, x3
   53508:	b.lt	537ac <mpfr_li2@@Base+0x21e0>  // b.tstop
   5350c:	cmp	x21, #0xb
   53510:	b.eq	537c0 <mpfr_li2@@Base+0x21f4>  // b.none
   53514:	asr	x1, x21, #1
   53518:	add	x1, x1, #0x2
   5351c:	cmp	x21, #0x11
   53520:	mov	x0, #0xb                   	// #11
   53524:	csel	x1, x1, x0, gt
   53528:	sub	x22, x1, #0x1
   5352c:	asr	x2, x22, #6
   53530:	str	x2, [x29, #104]
   53534:	add	x27, x2, #0x1
   53538:	lsl	x28, x1, #1
   5353c:	sub	x0, x28, #0x1
   53540:	asr	x0, x0, #6
   53544:	add	x0, x0, #0x1
   53548:	str	x0, [x29, #168]
   5354c:	sub	x19, x19, x2
   53550:	ldr	w4, [x29, #188]
   53554:	sxtw	x0, w4
   53558:	add	x3, x1, #0x1
   5355c:	add	x3, x3, x0
   53560:	sub	x2, x3, #0x3
   53564:	asr	x25, x2, #6
   53568:	str	x25, [x29, #144]
   5356c:	add	x0, x28, x0
   53570:	asr	x0, x0, #6
   53574:	str	x0, [x29, #112]
   53578:	add	x24, x0, #0x1
   5357c:	sub	x3, x3, #0x1
   53580:	asr	x3, x3, #6
   53584:	add	x3, x3, #0x1
   53588:	cmp	x23, x3
   5358c:	csel	x3, x23, x3, le
   53590:	lsl	x0, x19, #3
   53594:	str	x0, [x29, #120]
   53598:	add	x22, x20, x0
   5359c:	sub	x2, x23, x3
   535a0:	lsl	x3, x3, #6
   535a4:	ldr	x0, [x29, #176]
   535a8:	add	x2, x0, x2, lsl #3
   535ac:	mov	x0, x22
   535b0:	bl	534c0 <mpfr_li2@@Base+0x1ef4>
   535b4:	str	xzr, [x29, #200]
   535b8:	sub	x0, x24, x25
   535bc:	str	x0, [x29, #160]
   535c0:	add	x0, x0, x27
   535c4:	str	x0, [x29, #136]
   535c8:	lsl	x1, x27, #1
   535cc:	str	x1, [x29, #152]
   535d0:	lsl	x1, x0, #3
   535d4:	cmp	x1, #0x4, lsl #12
   535d8:	b.hi	53814 <mpfr_li2@@Base+0x2248>  // b.pmore
   535dc:	add	x1, x1, #0xf
   535e0:	and	x1, x1, #0xfffffffffffffff0
   535e4:	sub	sp, sp, x1
   535e8:	mov	x25, sp
   535ec:	cmp	x28, #0x40
   535f0:	b.gt	53824 <mpfr_li2@@Base+0x2258>
   535f4:	ldr	w0, [x20, #4]
   535f8:	add	x1, x25, #0x8
   535fc:	str	x1, [x29, #128]
   53600:	mul	x0, x0, x0
   53604:	str	x0, [x25, #8]
   53608:	ldr	x0, [x29, #168]
   5360c:	add	x0, x23, x0
   53610:	str	x0, [x29, #152]
   53614:	lsl	x1, x0, #3
   53618:	cmp	x1, #0x4, lsl #12
   5361c:	b.hi	53878 <mpfr_li2@@Base+0x22ac>  // b.pmore
   53620:	add	x1, x1, #0xf
   53624:	and	x1, x1, #0xfffffffffffffff0
   53628:	sub	sp, sp, x1
   5362c:	mov	x28, sp
   53630:	ldr	x0, [x29, #168]
   53634:	cmp	x0, #0x1
   53638:	b.eq	53888 <mpfr_li2@@Base+0x22bc>  // b.none
   5363c:	mov	x4, x23
   53640:	ldr	x3, [x29, #176]
   53644:	ldr	x2, [x29, #168]
   53648:	ldr	x1, [x29, #128]
   5364c:	mov	x0, x28
   53650:	bl	c7a0 <__gmpn_mul@plt>
   53654:	ldr	x0, [x29, #152]
   53658:	sub	x2, x0, x24
   5365c:	add	x1, x28, x2, lsl #3
   53660:	lsl	x4, x24, #3
   53664:	sub	x4, x4, #0x8
   53668:	ldr	x0, [x1, x4]
   5366c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   53670:	ldrb	w5, [x29, #188]
   53674:	lsr	x3, x3, x5
   53678:	ands	x5, x0, x3
   5367c:	str	x5, [x29, #176]
   53680:	b.ne	538ac <mpfr_li2@@Base+0x22e0>  // b.any
   53684:	orr	x0, x0, x3
   53688:	orr	x0, x0, #0x8000000000000000
   5368c:	str	x0, [x1, x4]
   53690:	cmp	x24, #0x0
   53694:	b.le	536bc <mpfr_li2@@Base+0x20f0>
   53698:	ldr	x0, [x29, #112]
   5369c:	add	x3, x0, #0x1
   536a0:	mov	x0, #0x0                   	// #0
   536a4:	ldr	x2, [x1, x0, lsl #3]
   536a8:	mvn	x2, x2
   536ac:	str	x2, [x1, x0, lsl #3]
   536b0:	add	x0, x0, #0x1
   536b4:	cmp	x0, x3
   536b8:	b.ne	536a4 <mpfr_li2@@Base+0x20d8>  // b.any
   536bc:	ldr	x0, [x29, #160]
   536c0:	cmp	x0, #0x1
   536c4:	b.ne	538ec <mpfr_li2@@Base+0x2320>  // b.any
   536c8:	ldr	x0, [x1]
   536cc:	ldr	x1, [x20, x19, lsl #3]
   536d0:	umulh	x2, x0, x1
   536d4:	str	x2, [x25, #8]
   536d8:	mul	x0, x0, x1
   536dc:	str	x0, [x25]
   536e0:	ldr	x0, [x29, #144]
   536e4:	sub	x23, x26, x0
   536e8:	ldr	x0, [x29, #136]
   536ec:	sub	x0, x0, x23
   536f0:	add	x25, x25, x0, lsl #3
   536f4:	ldr	w0, [x29, #188]
   536f8:	cmp	w0, #0x1
   536fc:	b.eq	53904 <mpfr_li2@@Base+0x2338>  // b.none
   53700:	lsl	x1, x26, #6
   53704:	sub	x21, x1, x21
   53708:	cmp	x21, #0x0
   5370c:	b.le	5391c <mpfr_li2@@Base+0x2350>
   53710:	ldr	x1, [x25]
   53714:	sub	w2, w21, #0x1
   53718:	mov	x0, #0x1                   	// #1
   5371c:	lsl	x0, x0, x2
   53720:	and	x0, x0, x1
   53724:	add	x1, x1, x0
   53728:	str	x1, [x25]
   5372c:	cmp	x0, x1
   53730:	b.ls	53754 <mpfr_li2@@Base+0x2188>  // b.plast
   53734:	add	x1, x25, #0x8
   53738:	add	x2, x25, x23, lsl #3
   5373c:	cmp	x1, x2
   53740:	b.eq	53aec <mpfr_li2@@Base+0x2520>  // b.none
   53744:	ldr	x0, [x1]
   53748:	add	x0, x0, #0x1
   5374c:	str	x0, [x1], #8
   53750:	cbz	x0, 5373c <mpfr_li2@@Base+0x2170>
   53754:	mov	x0, #0xffffffffffffffff    	// #-1
   53758:	lsl	x1, x0, x21
   5375c:	ldr	x0, [x25]
   53760:	and	x0, x0, x1
   53764:	str	x0, [x25]
   53768:	ldr	x0, [x29, #176]
   5376c:	cbnz	x0, 539ac <mpfr_li2@@Base+0x23e0>
   53770:	cmp	x19, #0x0
   53774:	ccmp	x20, x25, #0x4, gt
   53778:	b.ne	5395c <mpfr_li2@@Base+0x2390>  // b.any
   5377c:	subs	x19, x23, x19
   53780:	b.ne	53970 <mpfr_li2@@Base+0x23a4>  // b.any
   53784:	ldr	x0, [x29, #200]
   53788:	cbnz	x0, 53ab8 <mpfr_li2@@Base+0x24ec>
   5378c:	mov	sp, x29
   53790:	ldp	x19, x20, [sp, #16]
   53794:	ldp	x21, x22, [sp, #32]
   53798:	ldp	x23, x24, [sp, #48]
   5379c:	ldp	x25, x26, [sp, #64]
   537a0:	ldp	x27, x28, [sp, #80]
   537a4:	ldp	x29, x30, [sp], #208
   537a8:	ret
   537ac:	sub	x3, x3, x19
   537b0:	add	x0, x2, x3, lsl #3
   537b4:	str	x0, [x29, #176]
   537b8:	mov	x23, x26
   537bc:	b	5350c <mpfr_li2@@Base+0x1f40>
   537c0:	ldr	x0, [x29, #176]
   537c4:	add	x23, x0, x23, lsl #3
   537c8:	mov	w0, #0x34                  	// #52
   537cc:	ldr	w1, [x29, #188]
   537d0:	sub	w4, w0, w1
   537d4:	ldur	x0, [x23, #-8]
   537d8:	lsr	x0, x0, x4
   537dc:	lsr	x2, x0, #4
   537e0:	adrp	x3, 67000 <mpfr_bases@@Base+0x1900>
   537e4:	add	x3, x3, #0x3e0
   537e8:	and	x1, x2, #0x3f0
   537ec:	and	x0, x0, #0xf
   537f0:	orr	x0, x1, x0
   537f4:	add	x0, x3, x0
   537f8:	ldurb	w0, [x0, #-128]
   537fc:	add	x2, x3, x2, lsl #1
   53800:	ldrsh	x1, [x2, #128]
   53804:	add	x0, x0, x1
   53808:	lsl	x0, x0, #53
   5380c:	str	x0, [x20]
   53810:	b	5378c <mpfr_li2@@Base+0x21c0>
   53814:	add	x0, x29, #0xc8
   53818:	bl	bdc0 <mpfr_tmp_allocate@plt>
   5381c:	mov	x25, x0
   53820:	b	535ec <mpfr_li2@@Base+0x2020>
   53824:	cmp	x27, #0x1
   53828:	b.ne	53848 <mpfr_li2@@Base+0x227c>  // b.any
   5382c:	ldr	x0, [x20, x19, lsl #3]
   53830:	umulh	x1, x0, x0
   53834:	str	x1, [x25, #8]
   53838:	mul	x0, x0, x0
   5383c:	str	x0, [x25]
   53840:	str	x25, [x29, #128]
   53844:	b	53608 <mpfr_li2@@Base+0x203c>
   53848:	mov	x3, x27
   5384c:	mov	x2, x22
   53850:	mov	x1, x22
   53854:	mov	x0, x25
   53858:	bl	c470 <__gmpn_mul_n@plt>
   5385c:	add	x0, x25, #0x8
   53860:	ldr	x1, [x29, #152]
   53864:	ldr	x2, [x29, #168]
   53868:	cmp	x1, x2
   5386c:	csel	x0, x0, x25, gt
   53870:	str	x0, [x29, #128]
   53874:	b	53608 <mpfr_li2@@Base+0x203c>
   53878:	add	x0, x29, #0xc8
   5387c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   53880:	mov	x28, x0
   53884:	b	53630 <mpfr_li2@@Base+0x2064>
   53888:	ldr	x0, [x29, #128]
   5388c:	ldr	x0, [x0]
   53890:	ldr	x1, [x29, #176]
   53894:	ldr	x1, [x1]
   53898:	umulh	x2, x0, x1
   5389c:	str	x2, [x28, #8]
   538a0:	mul	x0, x0, x1
   538a4:	str	x0, [x28]
   538a8:	b	53654 <mpfr_li2@@Base+0x2088>
   538ac:	ldr	x3, [x29, #176]
   538b0:	eor	x0, x0, x3
   538b4:	str	x0, [x1, x4]
   538b8:	ldr	x0, [x28, x2, lsl #3]
   538bc:	add	x0, x0, #0x1
   538c0:	str	x0, [x28, x2, lsl #3]
   538c4:	cbnz	x0, 536bc <mpfr_li2@@Base+0x20f0>
   538c8:	mov	x0, #0x1                   	// #1
   538cc:	cmp	x24, x0
   538d0:	b.le	536bc <mpfr_li2@@Base+0x20f0>
   538d4:	ldr	x2, [x1, x0, lsl #3]
   538d8:	add	x2, x2, #0x1
   538dc:	str	x2, [x1, x0, lsl #3]
   538e0:	add	x0, x0, #0x1
   538e4:	cbz	x2, 538cc <mpfr_li2@@Base+0x2300>
   538e8:	b	536bc <mpfr_li2@@Base+0x20f0>
   538ec:	mov	x4, x27
   538f0:	mov	x3, x22
   538f4:	ldr	x2, [x29, #160]
   538f8:	mov	x0, x25
   538fc:	bl	c7a0 <__gmpn_mul@plt>
   53900:	b	536e0 <mpfr_li2@@Base+0x2114>
   53904:	sub	x0, x25, #0x8
   53908:	mov	w3, #0x1                   	// #1
   5390c:	add	x2, x23, #0x1
   53910:	mov	x1, x0
   53914:	bl	bcc0 <__gmpn_lshift@plt>
   53918:	b	53700 <mpfr_li2@@Base+0x2134>
   5391c:	ldur	x1, [x25, #-8]
   53920:	lsr	x1, x1, #63
   53924:	ldr	x0, [x25]
   53928:	add	x0, x1, x0
   5392c:	str	x0, [x25]
   53930:	cmp	x1, x0
   53934:	b.ls	53768 <mpfr_li2@@Base+0x219c>  // b.plast
   53938:	add	x1, x25, #0x8
   5393c:	add	x2, x25, x23, lsl #3
   53940:	cmp	x1, x2
   53944:	b.eq	53b00 <mpfr_li2@@Base+0x2534>  // b.none
   53948:	ldr	x0, [x1]
   5394c:	add	x0, x0, #0x1
   53950:	str	x0, [x1], #8
   53954:	cbz	x0, 53940 <mpfr_li2@@Base+0x2374>
   53958:	b	53768 <mpfr_li2@@Base+0x219c>
   5395c:	ldr	x2, [x29, #120]
   53960:	mov	x1, x25
   53964:	mov	x0, x20
   53968:	bl	ba10 <memcpy@plt>
   5396c:	b	5377c <mpfr_li2@@Base+0x21b0>
   53970:	mov	x3, x19
   53974:	ldr	x0, [x29, #120]
   53978:	add	x2, x25, x0
   5397c:	mov	x1, x22
   53980:	mov	x0, x22
   53984:	bl	c5a0 <__gmpn_add_n@plt>
   53988:	cbz	x0, 53784 <mpfr_li2@@Base+0x21b8>
   5398c:	cmp	x19, x27
   53990:	b.ge	53ad0 <mpfr_li2@@Base+0x2504>  // b.tcont
   53994:	ldr	x0, [x22, x19, lsl #3]
   53998:	add	x0, x0, #0x1
   5399c:	str	x0, [x22, x19, lsl #3]
   539a0:	add	x19, x19, #0x1
   539a4:	cbz	x0, 5398c <mpfr_li2@@Base+0x23c0>
   539a8:	b	53784 <mpfr_li2@@Base+0x21b8>
   539ac:	subs	x23, x23, x19
   539b0:	b.ne	53a24 <mpfr_li2@@Base+0x2458>  // b.any
   539b4:	cmp	x19, #0x0
   539b8:	b.le	53784 <mpfr_li2@@Base+0x21b8>
   539bc:	mov	x0, #0x0                   	// #0
   539c0:	ldr	x1, [x25, x0, lsl #3]
   539c4:	mvn	x1, x1
   539c8:	str	x1, [x20, x0, lsl #3]
   539cc:	add	x0, x0, #0x1
   539d0:	cmp	x19, x0
   539d4:	b.ne	539c0 <mpfr_li2@@Base+0x23f4>  // b.any
   539d8:	ldr	x0, [x20]
   539dc:	add	x0, x0, #0x1
   539e0:	str	x0, [x20]
   539e4:	cbz	x0, 53a58 <mpfr_li2@@Base+0x248c>
   539e8:	ldr	x3, [x20, x19, lsl #3]
   539ec:	sub	x0, x3, #0x1
   539f0:	str	x0, [x20, x19, lsl #3]
   539f4:	cbnz	x3, 53784 <mpfr_li2@@Base+0x21b8>
   539f8:	mov	x0, x22
   539fc:	ldr	x1, [x29, #104]
   53a00:	add	x22, x22, x1, lsl #3
   53a04:	cmp	x0, x22
   53a08:	b.eq	53a84 <mpfr_li2@@Base+0x24b8>  // b.none
   53a0c:	ldr	x1, [x0, #8]
   53a10:	sub	x2, x1, #0x1
   53a14:	str	x2, [x0, #8]!
   53a18:	cbz	x1, 53a04 <mpfr_li2@@Base+0x2438>
   53a1c:	mov	x0, #0x0                   	// #0
   53a20:	b	53a88 <mpfr_li2@@Base+0x24bc>
   53a24:	mov	x3, x23
   53a28:	ldr	x0, [x29, #120]
   53a2c:	add	x2, x25, x0
   53a30:	mov	x1, x22
   53a34:	mov	x0, x22
   53a38:	bl	be60 <__gmpn_sub_n@plt>
   53a3c:	cbz	x0, 539b4 <mpfr_li2@@Base+0x23e8>
   53a40:	ldr	x0, [x22, x23, lsl #3]
   53a44:	sub	x1, x0, #0x1
   53a48:	str	x1, [x22, x23, lsl #3]
   53a4c:	add	x23, x23, #0x1
   53a50:	cbz	x0, 53a40 <mpfr_li2@@Base+0x2474>
   53a54:	b	539b4 <mpfr_li2@@Base+0x23e8>
   53a58:	mov	x0, #0x1                   	// #1
   53a5c:	cmp	x26, x0
   53a60:	b.le	53ac0 <mpfr_li2@@Base+0x24f4>
   53a64:	ldr	x1, [x20, x0, lsl #3]
   53a68:	add	x1, x1, #0x1
   53a6c:	str	x1, [x20, x0, lsl #3]
   53a70:	add	x0, x0, #0x1
   53a74:	cbz	x1, 53a5c <mpfr_li2@@Base+0x2490>
   53a78:	b	539e8 <mpfr_li2@@Base+0x241c>
   53a7c:	mov	x3, #0x1                   	// #1
   53a80:	b	539f8 <mpfr_li2@@Base+0x242c>
   53a84:	mov	x0, #0x1                   	// #1
   53a88:	cmp	x3, x0
   53a8c:	b.eq	53784 <mpfr_li2@@Base+0x21b8>  // b.none
   53a90:	b	53ad0 <mpfr_li2@@Base+0x2504>
   53a94:	mov	x0, #0x1                   	// #1
   53a98:	cmp	x26, x0
   53a9c:	b.le	53784 <mpfr_li2@@Base+0x21b8>
   53aa0:	ldr	x1, [x20, x0, lsl #3]
   53aa4:	sub	x2, x1, #0x1
   53aa8:	str	x2, [x20, x0, lsl #3]
   53aac:	add	x0, x0, #0x1
   53ab0:	cbz	x1, 53a98 <mpfr_li2@@Base+0x24cc>
   53ab4:	b	53aec <mpfr_li2@@Base+0x2520>
   53ab8:	bl	c410 <mpfr_tmp_free@plt>
   53abc:	b	5378c <mpfr_li2@@Base+0x21c0>
   53ac0:	ldr	x0, [x20, x19, lsl #3]
   53ac4:	sub	x1, x0, #0x1
   53ac8:	str	x1, [x20, x19, lsl #3]
   53acc:	cbz	x0, 53a7c <mpfr_li2@@Base+0x24b0>
   53ad0:	mov	x0, #0x1                   	// #1
   53ad4:	lsl	x21, x0, x21
   53ad8:	ldr	x0, [x20]
   53adc:	sub	x1, x0, x21
   53ae0:	str	x1, [x20]
   53ae4:	cmp	x21, x0
   53ae8:	b.hi	53a94 <mpfr_li2@@Base+0x24c8>  // b.pmore
   53aec:	mov	x0, #0xffffffffffffffff    	// #-1
   53af0:	lsl	x21, x0, x21
   53af4:	ldr	x0, [x25]
   53af8:	and	x0, x0, x21
   53afc:	str	x0, [x25]
   53b00:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   53b04:	add	x2, x2, #0x3c8
   53b08:	mov	w1, #0x17e                 	// #382
   53b0c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   53b10:	add	x0, x0, #0x3d0
   53b14:	bl	cb40 <mpfr_assert_fail@plt>

0000000000053b18 <mpfr_rec_sqrt@@Base>:
   53b18:	stp	x29, x30, [sp, #-144]!
   53b1c:	mov	x29, sp
   53b20:	stp	x19, x20, [sp, #16]
   53b24:	stp	x21, x22, [sp, #32]
   53b28:	stp	x23, x24, [sp, #48]
   53b2c:	stp	x25, x26, [sp, #64]
   53b30:	stp	x27, x28, [sp, #80]
   53b34:	mov	x20, x0
   53b38:	mov	x19, x1
   53b3c:	ldr	x0, [x1, #16]
   53b40:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   53b44:	cmp	x0, x1
   53b48:	b.le	53bdc <mpfr_rec_sqrt@@Base+0xc4>
   53b4c:	mov	w22, w2
   53b50:	ldr	w0, [x19, #8]
   53b54:	tbnz	w0, #31, 53cbc <mpfr_rec_sqrt@@Base+0x1a4>
   53b58:	mov	w0, #0x1                   	// #1
   53b5c:	str	w0, [x20, #8]
   53b60:	ldr	x23, [x20]
   53b64:	ldr	x26, [x19]
   53b68:	add	x1, x23, #0xb
   53b6c:	ldr	x0, [x19, #16]
   53b70:	ands	x0, x0, #0x1
   53b74:	str	x0, [x29, #112]
   53b78:	cset	w0, eq  // eq = none
   53b7c:	str	w0, [x29, #124]
   53b80:	sub	x24, x23, #0x1
   53b84:	asr	x24, x24, #6
   53b88:	add	x28, x24, #0x1
   53b8c:	lsl	x21, x28, #6
   53b90:	cmp	x21, x1
   53b94:	csel	x21, x21, x1, ge  // ge = tcont
   53b98:	add	x0, x29, #0x80
   53b9c:	str	x0, [x29, #104]
   53ba0:	str	xzr, [x29, #128]
   53ba4:	sub	x0, x21, #0x1
   53ba8:	asr	x0, x0, #6
   53bac:	add	x27, x0, #0x1
   53bb0:	cmp	x19, x20
   53bb4:	ccmp	x24, x0, #0x1, ne  // ne = any
   53bb8:	b.ge	53d04 <mpfr_rec_sqrt@@Base+0x1ec>  // b.tcont
   53bbc:	lsl	x1, x27, #3
   53bc0:	cmp	x1, #0x4, lsl #12
   53bc4:	b.hi	53cf4 <mpfr_rec_sqrt@@Base+0x1dc>  // b.pmore
   53bc8:	add	x1, x1, #0xf
   53bcc:	and	x1, x1, #0xfffffffffffffff0
   53bd0:	sub	sp, sp, x1
   53bd4:	mov	x25, sp
   53bd8:	b	53d08 <mpfr_rec_sqrt@@Base+0x1f0>
   53bdc:	mov	x1, #0x2                   	// #2
   53be0:	movk	x1, #0x8000, lsl #48
   53be4:	cmp	x0, x1
   53be8:	b.eq	53c18 <mpfr_rec_sqrt@@Base+0x100>  // b.none
   53bec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   53bf0:	cmp	x0, x1
   53bf4:	b.eq	53c48 <mpfr_rec_sqrt@@Base+0x130>  // b.none
   53bf8:	ldr	w0, [x19, #8]
   53bfc:	tbnz	w0, #31, 53c84 <mpfr_rec_sqrt@@Base+0x16c>
   53c00:	mov	w0, #0x1                   	// #1
   53c04:	str	w0, [x20, #8]
   53c08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   53c0c:	str	x0, [x20, #16]
   53c10:	mov	w1, #0x0                   	// #0
   53c14:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53c18:	str	x1, [x20, #16]
   53c1c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53c20:	ldr	x1, [x0, #2576]
   53c24:	add	x0, x0, #0xa10
   53c28:	blr	x1
   53c2c:	mrs	x1, tpidr_el0
   53c30:	add	x0, x1, x0
   53c34:	ldr	w1, [x0]
   53c38:	orr	w1, w1, #0x4
   53c3c:	str	w1, [x0]
   53c40:	mov	w1, #0x0                   	// #0
   53c44:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53c48:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53c4c:	str	x0, [x20, #16]
   53c50:	mov	w0, #0x1                   	// #1
   53c54:	str	w0, [x20, #8]
   53c58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53c5c:	ldr	x1, [x0, #2576]
   53c60:	add	x0, x0, #0xa10
   53c64:	blr	x1
   53c68:	mrs	x1, tpidr_el0
   53c6c:	add	x0, x1, x0
   53c70:	ldr	w1, [x0]
   53c74:	orr	w1, w1, #0x20
   53c78:	str	w1, [x0]
   53c7c:	mov	w1, #0x0                   	// #0
   53c80:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53c84:	mov	x0, #0x2                   	// #2
   53c88:	movk	x0, #0x8000, lsl #48
   53c8c:	str	x0, [x20, #16]
   53c90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53c94:	ldr	x1, [x0, #2576]
   53c98:	add	x0, x0, #0xa10
   53c9c:	blr	x1
   53ca0:	mrs	x1, tpidr_el0
   53ca4:	add	x0, x1, x0
   53ca8:	ldr	w1, [x0]
   53cac:	orr	w1, w1, #0x4
   53cb0:	str	w1, [x0]
   53cb4:	mov	w1, #0x0                   	// #0
   53cb8:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53cbc:	mov	x0, #0x2                   	// #2
   53cc0:	movk	x0, #0x8000, lsl #48
   53cc4:	str	x0, [x20, #16]
   53cc8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53ccc:	ldr	x1, [x0, #2576]
   53cd0:	add	x0, x0, #0xa10
   53cd4:	blr	x1
   53cd8:	mrs	x1, tpidr_el0
   53cdc:	add	x0, x1, x0
   53ce0:	ldr	w1, [x0]
   53ce4:	orr	w1, w1, #0x4
   53ce8:	str	w1, [x0]
   53cec:	mov	w1, #0x0                   	// #0
   53cf0:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53cf4:	ldr	x0, [x29, #104]
   53cf8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   53cfc:	mov	x25, x0
   53d00:	b	53d08 <mpfr_rec_sqrt@@Base+0x1f0>
   53d04:	ldr	x25, [x20, #24]
   53d08:	ldr	w4, [x29, #124]
   53d0c:	mov	x3, x26
   53d10:	ldr	x2, [x19, #24]
   53d14:	mov	x1, x21
   53d18:	mov	x0, x25
   53d1c:	bl	534c0 <mpfr_li2@@Base+0x1ef4>
   53d20:	cmp	w22, #0x0
   53d24:	cinc	x3, x23, eq  // eq = none
   53d28:	cmp	x21, x26
   53d2c:	cset	x2, lt  // lt = tstop
   53d30:	sub	x2, x21, x2
   53d34:	mov	x1, x27
   53d38:	mov	x0, x25
   53d3c:	bl	c370 <mpfr_round_p@plt>
   53d40:	cbz	w0, 53de8 <mpfr_rec_sqrt@@Base+0x2d0>
   53d44:	add	x6, x29, #0x8c
   53d48:	mov	w5, w22
   53d4c:	mov	x4, x23
   53d50:	mov	w3, #0x0                   	// #0
   53d54:	mov	x2, x21
   53d58:	mov	x1, x25
   53d5c:	ldr	x0, [x20, #24]
   53d60:	bl	ca20 <mpfr_round_raw@plt>
   53d64:	ldrsw	x1, [x29, #124]
   53d68:	ldr	x2, [x19, #16]
   53d6c:	sub	x2, x2, #0x1
   53d70:	sub	x1, x1, x2
   53d74:	add	x1, x1, x1, lsr #63
   53d78:	asr	x1, x1, #1
   53d7c:	str	x1, [x20, #16]
   53d80:	cbnz	w0, 53e84 <mpfr_rec_sqrt@@Base+0x36c>
   53d84:	ldr	x0, [x29, #128]
   53d88:	cbnz	x0, 53ea0 <mpfr_rec_sqrt@@Base+0x388>
   53d8c:	ldr	x1, [x20, #16]
   53d90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53d94:	ldr	x2, [x0, #2512]
   53d98:	add	x0, x0, #0x9d0
   53d9c:	blr	x2
   53da0:	mrs	x2, tpidr_el0
   53da4:	ldr	x0, [x2, x0]
   53da8:	cmp	x1, x0
   53dac:	b.lt	53dd0 <mpfr_rec_sqrt@@Base+0x2b8>  // b.tstop
   53db0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53db4:	ldr	x2, [x0, #2544]
   53db8:	add	x0, x0, #0x9f0
   53dbc:	blr	x2
   53dc0:	mrs	x2, tpidr_el0
   53dc4:	ldr	x0, [x2, x0]
   53dc8:	cmp	x1, x0
   53dcc:	b.le	53ed0 <mpfr_rec_sqrt@@Base+0x3b8>
   53dd0:	mov	w2, w22
   53dd4:	ldr	w1, [x29, #140]
   53dd8:	mov	x0, x20
   53ddc:	bl	cb30 <mpfr_check_range@plt>
   53de0:	mov	w1, w0
   53de4:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53de8:	ldr	x0, [x29, #112]
   53dec:	cbnz	x0, 53e00 <mpfr_rec_sqrt@@Base+0x2e8>
   53df0:	ldr	x0, [x29, #128]
   53df4:	cbnz	x0, 53e7c <mpfr_rec_sqrt@@Base+0x364>
   53df8:	add	x21, x21, #0x40
   53dfc:	b	53ba0 <mpfr_rec_sqrt@@Base+0x88>
   53e00:	ldr	x2, [x19, #16]
   53e04:	sub	x2, x2, #0x1
   53e08:	mov	x1, #0x1                   	// #1
   53e0c:	mov	x0, x19
   53e10:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   53e14:	cbnz	w0, 53df0 <mpfr_rec_sqrt@@Base+0x2d8>
   53e18:	lsl	x0, x27, #6
   53e1c:	sub	x0, x0, x21
   53e20:	mov	x1, #0x1                   	// #1
   53e24:	lsl	x1, x1, x0
   53e28:	ldr	x0, [x25]
   53e2c:	add	x0, x1, x0
   53e30:	str	x0, [x25]
   53e34:	cmp	x1, x0
   53e38:	b.hi	53e58 <mpfr_rec_sqrt@@Base+0x340>  // b.pmore
   53e3c:	add	x27, x25, x27, lsl #3
   53e40:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   53e44:	stur	x0, [x27, #-8]
   53e48:	ldr	w0, [x29, #124]
   53e4c:	add	w0, w0, #0x2
   53e50:	str	w0, [x29, #124]
   53e54:	b	53d44 <mpfr_rec_sqrt@@Base+0x22c>
   53e58:	mov	x0, #0x1                   	// #1
   53e5c:	cmp	x27, x0
   53e60:	b.le	53e3c <mpfr_rec_sqrt@@Base+0x324>
   53e64:	ldr	x1, [x25, x0, lsl #3]
   53e68:	add	x1, x1, #0x1
   53e6c:	str	x1, [x25, x0, lsl #3]
   53e70:	add	x0, x0, #0x1
   53e74:	cbz	x1, 53e5c <mpfr_rec_sqrt@@Base+0x344>
   53e78:	b	53e3c <mpfr_rec_sqrt@@Base+0x324>
   53e7c:	bl	c410 <mpfr_tmp_free@plt>
   53e80:	b	53df8 <mpfr_rec_sqrt@@Base+0x2e0>
   53e84:	add	x1, x1, #0x1
   53e88:	str	x1, [x20, #16]
   53e8c:	ldr	x0, [x20, #24]
   53e90:	add	x28, x0, x28, lsl #3
   53e94:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   53e98:	stur	x0, [x28, #-8]
   53e9c:	b	53d84 <mpfr_rec_sqrt@@Base+0x26c>
   53ea0:	bl	c410 <mpfr_tmp_free@plt>
   53ea4:	b	53d8c <mpfr_rec_sqrt@@Base+0x274>
   53ea8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53eac:	ldr	x2, [x0, #2576]
   53eb0:	add	x0, x0, #0xa10
   53eb4:	blr	x2
   53eb8:	mrs	x2, tpidr_el0
   53ebc:	add	x0, x2, x0
   53ec0:	ldr	w2, [x0]
   53ec4:	orr	w2, w2, #0x8
   53ec8:	str	w2, [x0]
   53ecc:	b	53ed8 <mpfr_rec_sqrt@@Base+0x3c0>
   53ed0:	ldr	w1, [x29, #140]
   53ed4:	cbnz	w1, 53ea8 <mpfr_rec_sqrt@@Base+0x390>
   53ed8:	mov	w0, w1
   53edc:	mov	sp, x29
   53ee0:	ldp	x19, x20, [sp, #16]
   53ee4:	ldp	x21, x22, [sp, #32]
   53ee8:	ldp	x23, x24, [sp, #48]
   53eec:	ldp	x25, x26, [sp, #64]
   53ef0:	ldp	x27, x28, [sp, #80]
   53ef4:	ldp	x29, x30, [sp], #144
   53ef8:	ret

0000000000053efc <mpfr_min_prec@@Base>:
   53efc:	stp	x29, x30, [sp, #-32]!
   53f00:	mov	x29, sp
   53f04:	str	x19, [sp, #16]
   53f08:	mov	x19, x0
   53f0c:	ldr	x1, [x0, #16]
   53f10:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53f14:	cmp	x1, x0
   53f18:	b.le	53f50 <mpfr_min_prec@@Base+0x54>
   53f1c:	mov	x1, #0x0                   	// #0
   53f20:	ldr	x0, [x19, #24]
   53f24:	bl	caa0 <__gmpn_scan1@plt>
   53f28:	ldr	x2, [x19]
   53f2c:	add	x1, x2, #0x3e
   53f30:	subs	x2, x2, #0x1
   53f34:	csel	x1, x1, x2, mi  // mi = first
   53f38:	and	x1, x1, #0xffffffffffffffc0
   53f3c:	add	x1, x1, #0x40
   53f40:	sub	x0, x1, x0
   53f44:	ldr	x19, [sp, #16]
   53f48:	ldp	x29, x30, [sp], #32
   53f4c:	ret
   53f50:	mov	x0, #0x0                   	// #0
   53f54:	b	53f44 <mpfr_min_prec@@Base+0x48>

0000000000053f58 <mpfr_buildopt_tls_p@@Base>:
   53f58:	mov	w0, #0x1                   	// #1
   53f5c:	ret

0000000000053f60 <mpfr_buildopt_float128_p@@Base>:
   53f60:	mov	w0, #0x0                   	// #0
   53f64:	ret

0000000000053f68 <mpfr_buildopt_decimal_p@@Base>:
   53f68:	mov	w0, #0x0                   	// #0
   53f6c:	ret

0000000000053f70 <mpfr_buildopt_gmpinternals_p@@Base>:
   53f70:	mov	w0, #0x0                   	// #0
   53f74:	ret

0000000000053f78 <mpfr_buildopt_sharedcache_p@@Base>:
   53f78:	mov	w0, #0x0                   	// #0
   53f7c:	ret

0000000000053f80 <mpfr_buildopt_tune_case@@Base>:
   53f80:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   53f84:	add	x0, x0, #0x860
   53f88:	ret

0000000000053f8c <mpfr_digamma@@Base>:
   53f8c:	stp	x29, x30, [sp, #-384]!
   53f90:	mov	x29, sp
   53f94:	stp	x19, x20, [sp, #16]
   53f98:	stp	x23, x24, [sp, #48]
   53f9c:	stp	x25, x26, [sp, #64]
   53fa0:	mov	x26, x0
   53fa4:	mov	x24, x1
   53fa8:	str	w2, [sp, #152]
   53fac:	ldr	x0, [x1, #16]
   53fb0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   53fb4:	cmp	x0, x1
   53fb8:	b.le	5406c <mpfr_digamma@@Base+0xe0>
   53fbc:	ldr	w0, [x24, #8]
   53fc0:	tbnz	w0, #31, 5414c <mpfr_digamma@@Base+0x1c0>
   53fc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53fc8:	ldr	x1, [x0, #2576]
   53fcc:	add	x0, x0, #0xa10
   53fd0:	blr	x1
   53fd4:	mrs	x1, tpidr_el0
   53fd8:	ldr	w0, [x1, x0]
   53fdc:	str	w0, [sp, #156]
   53fe0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   53fe4:	ldr	x2, [x0, #2512]
   53fe8:	add	x0, x0, #0x9d0
   53fec:	blr	x2
   53ff0:	add	x2, x1, x0
   53ff4:	ldr	x0, [x1, x0]
   53ff8:	str	x0, [sp, #160]
   53ffc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54000:	ldr	x3, [x0, #2544]
   54004:	add	x0, x0, #0x9f0
   54008:	blr	x3
   5400c:	ldr	x3, [x1, x0]
   54010:	str	x3, [sp, #168]
   54014:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   54018:	str	x3, [x2]
   5401c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   54020:	str	x2, [x1, x0]
   54024:	ldr	x0, [x24, #16]
   54028:	cmn	x0, #0x2
   5402c:	b.ge	54258 <mpfr_digamma@@Base+0x2cc>  // b.tcont
   54030:	ldr	x2, [x24]
   54034:	ldr	x1, [x26]
   54038:	cmp	x1, x2
   5403c:	csel	x1, x1, x2, ge  // ge = tcont
   54040:	neg	x1, x1, lsl #1
   54044:	cmp	x0, x1
   54048:	b.le	54190 <mpfr_digamma@@Base+0x204>
   5404c:	ldr	w0, [x24, #8]
   54050:	tbnz	w0, #31, 54300 <mpfr_digamma@@Base+0x374>
   54054:	ldr	w2, [sp, #152]
   54058:	mov	x1, x24
   5405c:	mov	x0, x26
   54060:	bl	548cc <mpfr_digamma@@Base+0x940>
   54064:	mov	w19, w0
   54068:	b	54820 <mpfr_digamma@@Base+0x894>
   5406c:	mov	x1, #0x2                   	// #2
   54070:	movk	x1, #0x8000, lsl #48
   54074:	cmp	x0, x1
   54078:	b.eq	540a4 <mpfr_digamma@@Base+0x118>  // b.none
   5407c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   54080:	cmp	x0, x1
   54084:	b.ne	5410c <mpfr_digamma@@Base+0x180>  // b.any
   54088:	ldr	w0, [x24, #8]
   5408c:	cmp	w0, #0x0
   54090:	b.le	540d4 <mpfr_digamma@@Base+0x148>
   54094:	str	w0, [x26, #8]
   54098:	str	x1, [x26, #16]
   5409c:	mov	w19, #0x0                   	// #0
   540a0:	b	5489c <mpfr_digamma@@Base+0x910>
   540a4:	str	x1, [x26, #16]
   540a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   540ac:	ldr	x1, [x0, #2576]
   540b0:	add	x0, x0, #0xa10
   540b4:	blr	x1
   540b8:	mrs	x1, tpidr_el0
   540bc:	add	x0, x1, x0
   540c0:	ldr	w1, [x0]
   540c4:	orr	w1, w1, #0x4
   540c8:	str	w1, [x0]
   540cc:	mov	w19, #0x0                   	// #0
   540d0:	b	5489c <mpfr_digamma@@Base+0x910>
   540d4:	mov	x0, #0x2                   	// #2
   540d8:	movk	x0, #0x8000, lsl #48
   540dc:	str	x0, [x26, #16]
   540e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   540e4:	ldr	x1, [x0, #2576]
   540e8:	add	x0, x0, #0xa10
   540ec:	blr	x1
   540f0:	mrs	x1, tpidr_el0
   540f4:	add	x0, x1, x0
   540f8:	ldr	w1, [x0]
   540fc:	orr	w1, w1, #0x4
   54100:	str	w1, [x0]
   54104:	mov	w19, #0x0                   	// #0
   54108:	b	5489c <mpfr_digamma@@Base+0x910>
   5410c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   54110:	str	x0, [x26, #16]
   54114:	ldr	w0, [x24, #8]
   54118:	neg	w0, w0
   5411c:	str	w0, [x26, #8]
   54120:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54124:	ldr	x1, [x0, #2576]
   54128:	add	x0, x0, #0xa10
   5412c:	blr	x1
   54130:	mrs	x1, tpidr_el0
   54134:	add	x0, x1, x0
   54138:	ldr	w1, [x0]
   5413c:	orr	w1, w1, #0x20
   54140:	str	w1, [x0]
   54144:	mov	w19, #0x0                   	// #0
   54148:	b	5489c <mpfr_digamma@@Base+0x910>
   5414c:	mov	x0, x24
   54150:	bl	c160 <mpfr_integer_p@plt>
   54154:	cbz	w0, 53fc4 <mpfr_digamma@@Base+0x38>
   54158:	mov	x0, #0x2                   	// #2
   5415c:	movk	x0, #0x8000, lsl #48
   54160:	str	x0, [x26, #16]
   54164:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54168:	ldr	x1, [x0, #2576]
   5416c:	add	x0, x0, #0xa10
   54170:	blr	x1
   54174:	mrs	x1, tpidr_el0
   54178:	add	x0, x1, x0
   5417c:	ldr	w1, [x0]
   54180:	orr	w1, w1, #0x4
   54184:	str	w1, [x0]
   54188:	mov	w19, #0x0                   	// #0
   5418c:	b	5489c <mpfr_digamma@@Base+0x910>
   54190:	stp	x21, x22, [sp, #32]
   54194:	ldr	w20, [x24, #8]
   54198:	ldr	w21, [sp, #152]
   5419c:	mov	w3, w21
   541a0:	mov	x2, x24
   541a4:	mov	x1, #0xffffffffffffffff    	// #-1
   541a8:	mov	x0, x26
   541ac:	bl	c8b0 <mpfr_si_div@plt>
   541b0:	mov	w19, w0
   541b4:	cbnz	w0, 541e4 <mpfr_digamma@@Base+0x258>
   541b8:	cmp	w21, #0x4
   541bc:	b.eq	54210 <mpfr_digamma@@Base+0x284>  // b.none
   541c0:	ldr	w0, [sp, #152]
   541c4:	cmp	w0, #0x1
   541c8:	b.eq	54240 <mpfr_digamma@@Base+0x2b4>  // b.none
   541cc:	mov	w19, #0x1                   	// #1
   541d0:	ldr	w0, [sp, #152]
   541d4:	cmp	w0, #0x2
   541d8:	b.eq	541e4 <mpfr_digamma@@Base+0x258>  // b.none
   541dc:	cmp	w0, #0x3
   541e0:	b.eq	54218 <mpfr_digamma@@Base+0x28c>  // b.none
   541e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   541e8:	ldr	x1, [x0, #2576]
   541ec:	add	x0, x0, #0xa10
   541f0:	blr	x1
   541f4:	mrs	x1, tpidr_el0
   541f8:	ldr	w0, [x1, x0]
   541fc:	ldr	w1, [sp, #156]
   54200:	orr	w0, w1, w0
   54204:	str	w0, [sp, #156]
   54208:	ldp	x21, x22, [sp, #32]
   5420c:	b	54820 <mpfr_digamma@@Base+0x894>
   54210:	cmp	w20, #0x0
   54214:	b.le	54230 <mpfr_digamma@@Base+0x2a4>
   54218:	mov	x0, x26
   5421c:	bl	bdd0 <mpfr_nextbelow@plt>
   54220:	mov	w19, #0xffffffff            	// #-1
   54224:	mov	w0, #0x3                   	// #3
   54228:	str	w0, [sp, #152]
   5422c:	b	541e4 <mpfr_digamma@@Base+0x258>
   54230:	mov	w19, #0x1                   	// #1
   54234:	mov	w0, #0x2                   	// #2
   54238:	str	w0, [sp, #152]
   5423c:	b	541e4 <mpfr_digamma@@Base+0x258>
   54240:	ldr	w19, [sp, #152]
   54244:	mov	w0, #0x2                   	// #2
   54248:	str	w0, [sp, #152]
   5424c:	cmp	w20, #0x0
   54250:	b.gt	541e4 <mpfr_digamma@@Base+0x258>
   54254:	b	54218 <mpfr_digamma@@Base+0x28c>
   54258:	ldr	w1, [x24, #8]
   5425c:	tbnz	w1, #31, 54300 <mpfr_digamma@@Base+0x374>
   54260:	tbnz	x0, #63, 54054 <mpfr_digamma@@Base+0xc8>
   54264:	stp	x21, x22, [sp, #32]
   54268:	ldr	x21, [x26]
   5426c:	add	x21, x21, #0xa
   54270:	ldr	x1, [x24]
   54274:	cmp	x0, x1
   54278:	csinc	x1, x0, x1, gt
   5427c:	str	x1, [sp, #144]
   54280:	cmp	x0, x21
   54284:	b.le	54344 <mpfr_digamma@@Base+0x3b8>
   54288:	add	x19, sp, #0xc0
   5428c:	mov	x1, x21
   54290:	mov	x0, x19
   54294:	bl	ca80 <mpfr_init2@plt>
   54298:	mov	w2, #0x1                   	// #1
   5429c:	mov	x1, x24
   542a0:	mov	x0, x19
   542a4:	bl	c090 <mpfr_log@plt>
   542a8:	ldr	x1, [sp, #208]
   542ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   542b0:	cmp	x1, x0
   542b4:	b.le	542f0 <mpfr_digamma@@Base+0x364>
   542b8:	ldr	x2, [x26]
   542bc:	ldr	w0, [sp, #152]
   542c0:	cmp	w0, #0x0
   542c4:	cinc	x3, x2, eq  // eq = none
   542c8:	ldr	x0, [sp, #192]
   542cc:	add	x1, x0, #0x3e
   542d0:	subs	x0, x0, #0x1
   542d4:	csel	x1, x1, x0, mi  // mi = first
   542d8:	asr	x1, x1, #6
   542dc:	add	x2, x2, #0xa
   542e0:	add	x1, x1, #0x1
   542e4:	ldr	x0, [sp, #216]
   542e8:	bl	c370 <mpfr_round_p@plt>
   542ec:	cbnz	w0, 54318 <mpfr_digamma@@Base+0x38c>
   542f0:	stp	x27, x28, [sp, #80]
   542f4:	add	x0, sp, #0xc0
   542f8:	bl	c070 <mpfr_clear@plt>
   542fc:	b	54348 <mpfr_digamma@@Base+0x3bc>
   54300:	ldr	w2, [sp, #152]
   54304:	mov	x1, x24
   54308:	mov	x0, x26
   5430c:	bl	548cc <mpfr_digamma@@Base+0x940>
   54310:	mov	w19, w0
   54314:	b	54820 <mpfr_digamma@@Base+0x894>
   54318:	add	x20, sp, #0xc0
   5431c:	ldr	w3, [sp, #200]
   54320:	ldr	w2, [sp, #152]
   54324:	mov	x1, x20
   54328:	mov	x0, x26
   5432c:	bl	c6a0 <mpfr_set4@plt>
   54330:	mov	w19, w0
   54334:	mov	x0, x20
   54338:	bl	c070 <mpfr_clear@plt>
   5433c:	ldp	x21, x22, [sp, #32]
   54340:	b	54820 <mpfr_digamma@@Base+0x894>
   54344:	stp	x27, x28, [sp, #80]
   54348:	ldr	x1, [sp, #144]
   5434c:	add	x0, sp, #0x100
   54350:	bl	ca80 <mpfr_init2@plt>
   54354:	mov	x1, x21
   54358:	add	x0, sp, #0xc0
   5435c:	bl	ca80 <mpfr_init2@plt>
   54360:	mov	x1, x21
   54364:	add	x0, sp, #0xe0
   54368:	bl	ca80 <mpfr_init2@plt>
   5436c:	mov	x0, #0x40                  	// #64
   54370:	str	x0, [sp, #120]
   54374:	add	x23, sp, #0x100
   54378:	add	x27, sp, #0xc0
   5437c:	add	x20, sp, #0x120
   54380:	add	x0, sp, #0x140
   54384:	str	x0, [sp, #96]
   54388:	add	x0, sp, #0x160
   5438c:	str	x0, [sp, #128]
   54390:	str	x26, [sp, #176]
   54394:	str	x24, [sp, #184]
   54398:	b	546f4 <mpfr_digamma@@Base+0x768>
   5439c:	cmp	x19, #0x1
   543a0:	b.ls	544b0 <mpfr_digamma@@Base+0x524>  // b.plast
   543a4:	mov	x22, #0x0                   	// #0
   543a8:	add	x22, x22, #0x1
   543ac:	add	x0, x19, #0x1
   543b0:	lsr	x19, x0, #1
   543b4:	cmp	x0, #0x3
   543b8:	b.hi	543a8 <mpfr_digamma@@Base+0x41c>  // b.pmore
   543bc:	ldr	x0, [sp, #192]
   543c0:	str	x0, [sp, #136]
   543c4:	ldr	w0, [sp, #264]
   543c8:	cmp	w0, #0x0
   543cc:	b.le	544b8 <mpfr_digamma@@Base+0x52c>
   543d0:	ldr	x0, [sp, #272]
   543d4:	cmp	x0, #0x1
   543d8:	b.le	544b8 <mpfr_digamma@@Base+0x52c>
   543dc:	ldr	x19, [sp, #136]
   543e0:	mov	x1, x19
   543e4:	mov	x0, x20
   543e8:	bl	ca80 <mpfr_init2@plt>
   543ec:	mov	x1, x19
   543f0:	ldr	x0, [sp, #96]
   543f4:	bl	ca80 <mpfr_init2@plt>
   543f8:	mov	x1, x19
   543fc:	ldr	x19, [sp, #128]
   54400:	mov	x0, x19
   54404:	bl	ca80 <mpfr_init2@plt>
   54408:	mov	w2, #0x0                   	// #0
   5440c:	mov	x1, x23
   54410:	mov	x0, x27
   54414:	bl	c090 <mpfr_log@plt>
   54418:	mov	w3, #0x0                   	// #0
   5441c:	mov	x2, x23
   54420:	mov	x1, #0x1                   	// #1
   54424:	mov	x0, x20
   54428:	bl	c2f0 <mpfr_ui_div@plt>
   5442c:	mov	w3, #0x0                   	// #0
   54430:	mov	x2, #0x1                   	// #1
   54434:	mov	x1, x20
   54438:	mov	x0, x20
   5443c:	bl	c8f0 <mpfr_div_2ui@plt>
   54440:	mov	w3, #0x0                   	// #0
   54444:	mov	x2, x20
   54448:	mov	x1, x27
   5444c:	mov	x0, x27
   54450:	bl	bb70 <mpfr_sub@plt>
   54454:	mov	w3, #0x1                   	// #1
   54458:	mov	x2, x23
   5445c:	mov	x1, x23
   54460:	mov	x0, x19
   54464:	bl	bd50 <mpfr_mul@plt>
   54468:	mov	w3, #0x2                   	// #2
   5446c:	mov	x2, x19
   54470:	mov	x1, #0x1                   	// #1
   54474:	mov	x0, x19
   54478:	bl	c2f0 <mpfr_ui_div@plt>
   5447c:	mov	w3, #0x0                   	// #0
   54480:	mov	x2, #0x0                   	// #0
   54484:	mov	x1, #0x1                   	// #1
   54488:	mov	x0, x20
   5448c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54490:	mov	x0, #0xe                   	// #14
   54494:	str	x0, [sp, #104]
   54498:	mov	x24, #0x2                   	// #2
   5449c:	mov	x0, #0x1                   	// #1
   544a0:	str	x0, [sp, #112]
   544a4:	mov	x19, x24
   544a8:	mov	w25, #0x2                   	// #2
   544ac:	b	544f4 <mpfr_digamma@@Base+0x568>
   544b0:	mov	x22, #0x0                   	// #0
   544b4:	b	543bc <mpfr_digamma@@Base+0x430>
   544b8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   544bc:	add	x2, x2, #0x868
   544c0:	mov	w1, #0x27                  	// #39
   544c4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   544c8:	add	x0, x0, #0x8a0
   544cc:	bl	cb40 <mpfr_assert_fail@plt>
   544d0:	b	543dc <mpfr_digamma@@Base+0x450>
   544d4:	add	x19, x0, x19
   544d8:	ldr	x0, [sp, #112]
   544dc:	add	x0, x0, #0x1
   544e0:	str	x0, [sp, #112]
   544e4:	add	x24, x24, #0x2
   544e8:	ldr	x0, [sp, #104]
   544ec:	add	x0, x0, #0xa
   544f0:	str	x0, [sp, #104]
   544f4:	mov	w3, w25
   544f8:	ldr	x2, [sp, #128]
   544fc:	mov	x1, x20
   54500:	mov	x0, x20
   54504:	bl	bd50 <mpfr_mul@plt>
   54508:	mov	w3, w25
   5450c:	mov	x2, x24
   54510:	mov	x1, x20
   54514:	mov	x0, x20
   54518:	bl	cc60 <mpfr_div_ui@plt>
   5451c:	mov	w3, w25
   54520:	add	x2, x24, #0x1
   54524:	mov	x1, x20
   54528:	mov	x0, x20
   5452c:	bl	cc60 <mpfr_div_ui@plt>
   54530:	mov	w3, w25
   54534:	mov	x2, x24
   54538:	mov	x1, x20
   5453c:	ldr	x26, [sp, #96]
   54540:	mov	x0, x26
   54544:	bl	cc60 <mpfr_div_ui@plt>
   54548:	ldr	x0, [sp, #112]
   5454c:	bl	c830 <mpfr_bernoulli_cache@plt>
   54550:	mov	w3, w25
   54554:	mov	x2, x0
   54558:	mov	x1, x26
   5455c:	str	x26, [sp, #96]
   54560:	mov	x0, x26
   54564:	bl	c4d0 <mpfr_mul_z@plt>
   54568:	ldr	x28, [sp, #208]
   5456c:	ldr	x26, [sp, #336]
   54570:	ldr	x1, [sp, #136]
   54574:	sub	x0, x28, x1
   54578:	cmp	x26, x0
   5457c:	b.lt	545d4 <mpfr_digamma@@Base+0x648>  // b.tstop
   54580:	mov	w3, #0x0                   	// #0
   54584:	ldr	x2, [sp, #96]
   54588:	mov	x1, x27
   5458c:	mov	x0, x27
   54590:	bl	bb70 <mpfr_sub@plt>
   54594:	ldr	x1, [sp, #208]
   54598:	sub	w0, w28, w1
   5459c:	lsl	x0, x19, x0
   545a0:	cmp	x28, x1
   545a4:	csel	x19, x0, x19, gt
   545a8:	add	x19, x19, #0x1
   545ac:	ldr	x0, [sp, #104]
   545b0:	cmp	x28, x26
   545b4:	b.le	544d4 <mpfr_digamma@@Base+0x548>
   545b8:	add	x0, x0, #0x1
   545bc:	add	x0, x0, x0, lsr #63
   545c0:	asr	x0, x0, #1
   545c4:	add	x26, x26, #0x1
   545c8:	cmp	x28, x26
   545cc:	b.ne	545b8 <mpfr_digamma@@Base+0x62c>  // b.any
   545d0:	b	544d4 <mpfr_digamma@@Base+0x548>
   545d4:	mov	x0, x20
   545d8:	bl	c070 <mpfr_clear@plt>
   545dc:	ldr	x0, [sp, #96]
   545e0:	bl	c070 <mpfr_clear@plt>
   545e4:	ldr	x0, [sp, #128]
   545e8:	bl	c070 <mpfr_clear@plt>
   545ec:	cmp	x19, #0x1
   545f0:	b.le	547c0 <mpfr_digamma@@Base+0x834>
   545f4:	mov	x24, #0x0                   	// #0
   545f8:	add	x24, x24, #0x1
   545fc:	add	x0, x19, #0x1
   54600:	mov	x1, x19
   54604:	add	x0, x0, x0, lsr #63
   54608:	asr	x19, x0, #1
   5460c:	cmp	x1, #0x2
   54610:	b.gt	545f8 <mpfr_digamma@@Base+0x66c>
   54614:	ldr	x19, [sp, #208]
   54618:	mov	w3, #0x0                   	// #0
   5461c:	add	x2, sp, #0xe0
   54620:	mov	x1, x27
   54624:	mov	x0, x27
   54628:	bl	bb70 <mpfr_sub@plt>
   5462c:	ldr	x0, [sp, #208]
   54630:	sub	x1, x19, x0
   54634:	add	x1, x24, x1
   54638:	cmp	x19, x0
   5463c:	csel	x24, x1, x24, gt
   54640:	ldr	x2, [sp, #240]
   54644:	sub	x1, x2, x0
   54648:	add	x1, x22, x1
   5464c:	cmp	x0, x2
   54650:	csel	x22, x1, x22, lt  // lt = tstop
   54654:	add	x2, x24, #0x1
   54658:	cmp	x24, x22
   5465c:	b.gt	54668 <mpfr_digamma@@Base+0x6dc>
   54660:	add	x2, x24, #0x2
   54664:	csinc	x2, x2, x22, eq  // eq = none
   54668:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5466c:	cmp	x0, x1
   54670:	b.le	546b0 <mpfr_digamma@@Base+0x724>
   54674:	ldr	w0, [sp, #152]
   54678:	cmp	w0, #0x0
   5467c:	ldr	x0, [sp, #176]
   54680:	ldr	x3, [x0]
   54684:	cinc	x3, x3, eq  // eq = none
   54688:	ldr	x0, [sp, #192]
   5468c:	add	x1, x0, #0x3e
   54690:	subs	x0, x0, #0x1
   54694:	csel	x1, x1, x0, mi  // mi = first
   54698:	asr	x1, x1, #6
   5469c:	sub	x2, x21, x2
   546a0:	add	x1, x1, #0x1
   546a4:	ldr	x0, [sp, #216]
   546a8:	bl	c370 <mpfr_round_p@plt>
   546ac:	cbnz	w0, 547e0 <mpfr_digamma@@Base+0x854>
   546b0:	mov	x0, #0xfffffffffffffeff    	// #-257
   546b4:	movk	x0, #0x7fff, lsl #48
   546b8:	sub	x0, x0, x21
   546bc:	ldr	x1, [sp, #120]
   546c0:	cmp	x0, x1
   546c4:	b.lt	547c8 <mpfr_digamma@@Base+0x83c>  // b.tstop
   546c8:	ldr	x0, [sp, #120]
   546cc:	add	x21, x21, x0
   546d0:	add	x0, x21, x21, lsr #63
   546d4:	asr	x0, x0, #1
   546d8:	str	x0, [sp, #120]
   546dc:	mov	x1, x21
   546e0:	mov	x0, x27
   546e4:	bl	bed0 <mpfr_set_prec@plt>
   546e8:	mov	x1, x21
   546ec:	add	x0, sp, #0xe0
   546f0:	bl	bed0 <mpfr_set_prec@plt>
   546f4:	add	x0, x21, #0x6
   546f8:	adds	x1, x21, #0x3
   546fc:	csel	x0, x0, x1, mi  // mi = first
   54700:	asr	x22, x0, #2
   54704:	cmp	x0, #0x7
   54708:	mov	x0, #0x2                   	// #2
   5470c:	csel	x22, x22, x0, hi  // hi = pmore
   54710:	ldr	x0, [sp, #184]
   54714:	ldr	w3, [x0, #8]
   54718:	mov	w2, #0x0                   	// #0
   5471c:	mov	x1, x0
   54720:	mov	x0, x23
   54724:	bl	c6a0 <mpfr_set4@plt>
   54728:	mov	w0, #0x1                   	// #1
   5472c:	str	w0, [sp, #232]
   54730:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   54734:	str	x0, [sp, #240]
   54738:	mov	x19, #0x0                   	// #0
   5473c:	add	x24, sp, #0xe0
   54740:	mov	x2, #0x0                   	// #0
   54744:	mov	x1, x22
   54748:	mov	x0, x23
   5474c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   54750:	tbz	w0, #31, 5439c <mpfr_digamma@@Base+0x410>
   54754:	add	x19, x19, #0x1
   54758:	mov	w3, #0x0                   	// #0
   5475c:	mov	x2, x23
   54760:	mov	x1, #0x1                   	// #1
   54764:	mov	x0, x27
   54768:	bl	c2f0 <mpfr_ui_div@plt>
   5476c:	mov	w3, #0x0                   	// #0
   54770:	mov	x2, x27
   54774:	mov	x1, x24
   54778:	mov	x0, x24
   5477c:	bl	c1a0 <mpfr_add@plt>
   54780:	mov	w3, #0x1                   	// #1
   54784:	mov	x2, #0x1                   	// #1
   54788:	mov	x1, x23
   5478c:	mov	x0, x23
   54790:	bl	c260 <mpfr_add_ui@plt>
   54794:	cbz	w0, 54740 <mpfr_digamma@@Base+0x7b4>
   54798:	ldr	x0, [sp, #144]
   5479c:	add	x0, x0, #0x1
   547a0:	str	x0, [sp, #144]
   547a4:	mov	w2, #0x1                   	// #1
   547a8:	mov	x1, x0
   547ac:	mov	x0, x23
   547b0:	bl	c970 <mpfr_prec_round@plt>
   547b4:	mov	x0, x23
   547b8:	bl	c120 <mpfr_nextabove@plt>
   547bc:	b	54740 <mpfr_digamma@@Base+0x7b4>
   547c0:	mov	x24, #0x0                   	// #0
   547c4:	b	54614 <mpfr_digamma@@Base+0x688>
   547c8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   547cc:	add	x2, x2, #0x118
   547d0:	mov	w1, #0x11a                 	// #282
   547d4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   547d8:	add	x0, x0, #0x8a0
   547dc:	bl	cb40 <mpfr_assert_fail@plt>
   547e0:	ldr	x26, [sp, #176]
   547e4:	add	x20, sp, #0xc0
   547e8:	ldr	w3, [sp, #200]
   547ec:	ldr	w2, [sp, #152]
   547f0:	mov	x1, x20
   547f4:	mov	x0, x26
   547f8:	bl	c6a0 <mpfr_set4@plt>
   547fc:	mov	w19, w0
   54800:	mov	x0, x20
   54804:	bl	c070 <mpfr_clear@plt>
   54808:	add	x0, sp, #0xe0
   5480c:	bl	c070 <mpfr_clear@plt>
   54810:	add	x0, sp, #0x100
   54814:	bl	c070 <mpfr_clear@plt>
   54818:	ldp	x21, x22, [sp, #32]
   5481c:	ldp	x27, x28, [sp, #80]
   54820:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54824:	ldr	x1, [x0, #2576]
   54828:	add	x0, x0, #0xa10
   5482c:	blr	x1
   54830:	mrs	x1, tpidr_el0
   54834:	ldr	w4, [sp, #156]
   54838:	str	w4, [x1, x0]
   5483c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54840:	ldr	x2, [x0, #2512]
   54844:	add	x0, x0, #0x9d0
   54848:	blr	x2
   5484c:	ldr	x2, [sp, #160]
   54850:	str	x2, [x1, x0]
   54854:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54858:	ldr	x3, [x0, #2544]
   5485c:	add	x0, x0, #0x9f0
   54860:	blr	x3
   54864:	ldr	x3, [sp, #168]
   54868:	str	x3, [x1, x0]
   5486c:	ldr	x0, [x26, #16]
   54870:	cmp	x2, x0
   54874:	ccmp	x3, x0, #0x1, le
   54878:	b.lt	548b4 <mpfr_digamma@@Base+0x928>  // b.tstop
   5487c:	cbz	w19, 5489c <mpfr_digamma@@Base+0x910>
   54880:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54884:	ldr	x1, [x0, #2576]
   54888:	add	x0, x0, #0xa10
   5488c:	blr	x1
   54890:	orr	w2, w4, #0x8
   54894:	mrs	x1, tpidr_el0
   54898:	str	w2, [x1, x0]
   5489c:	mov	w0, w19
   548a0:	ldp	x19, x20, [sp, #16]
   548a4:	ldp	x23, x24, [sp, #48]
   548a8:	ldp	x25, x26, [sp, #64]
   548ac:	ldp	x29, x30, [sp], #384
   548b0:	ret
   548b4:	ldr	w2, [sp, #152]
   548b8:	mov	w1, w19
   548bc:	mov	x0, x26
   548c0:	bl	cb30 <mpfr_check_range@plt>
   548c4:	mov	w19, w0
   548c8:	b	5489c <mpfr_digamma@@Base+0x910>
   548cc:	stp	x29, x30, [sp, #-208]!
   548d0:	mov	x29, sp
   548d4:	stp	x19, x20, [sp, #16]
   548d8:	stp	x21, x22, [sp, #32]
   548dc:	stp	x25, x26, [sp, #64]
   548e0:	stp	x27, x28, [sp, #80]
   548e4:	mov	x28, x0
   548e8:	mov	x25, x1
   548ec:	str	w2, [sp, #108]
   548f0:	ldr	x21, [x0]
   548f4:	ldr	x1, [x1, #16]
   548f8:	tbnz	x1, #63, 549a4 <mpfr_digamma@@Base+0xa18>
   548fc:	ldr	x0, [x25]
   54900:	cmp	x1, x0
   54904:	csinc	x1, x1, x0, gt
   54908:	add	x19, sp, #0x90
   5490c:	mov	x0, x19
   54910:	bl	ca80 <mpfr_init2@plt>
   54914:	mov	w3, #0x0                   	// #0
   54918:	mov	x2, x25
   5491c:	mov	x1, #0x1                   	// #1
   54920:	mov	x0, x19
   54924:	bl	ca50 <mpfr_ui_sub@plt>
   54928:	cbnz	w0, 549b4 <mpfr_digamma@@Base+0xa28>
   5492c:	add	x19, sp, #0x90
   54930:	mov	w3, #0x0                   	// #0
   54934:	mov	x2, #0x1                   	// #1
   54938:	mov	x1, x19
   5493c:	mov	x0, x19
   54940:	bl	c2c0 <mpfr_mul_2ui@plt>
   54944:	mov	x0, x19
   54948:	bl	c160 <mpfr_integer_p@plt>
   5494c:	mov	w20, w0
   54950:	mov	w3, #0x0                   	// #0
   54954:	mov	x2, #0x1                   	// #1
   54958:	mov	x1, x19
   5495c:	mov	x0, x19
   54960:	bl	c8f0 <mpfr_div_2ui@plt>
   54964:	cbnz	w20, 549d0 <mpfr_digamma@@Base+0xa44>
   54968:	stp	x23, x24, [sp, #48]
   5496c:	add	x21, x21, #0xa
   54970:	mov	x1, x21
   54974:	add	x0, sp, #0xb0
   54978:	bl	ca80 <mpfr_init2@plt>
   5497c:	mov	x1, x21
   54980:	add	x0, sp, #0x70
   54984:	bl	ca80 <mpfr_init2@plt>
   54988:	mov	x24, #0x40                  	// #64
   5498c:	add	x23, sp, #0x70
   54990:	add	x22, sp, #0xb0
   54994:	add	x26, sp, #0x90
   54998:	mov	x27, #0xfffffffffffffeff    	// #-257
   5499c:	movk	x27, #0x7fff, lsl #48
   549a0:	b	54a18 <mpfr_digamma@@Base+0xa8c>
   549a4:	ldr	x0, [x25]
   549a8:	add	x0, x0, #0x1
   549ac:	sub	x1, x0, x1
   549b0:	b	54908 <mpfr_digamma@@Base+0x97c>
   549b4:	stp	x23, x24, [sp, #48]
   549b8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   549bc:	add	x2, x2, #0x8b0
   549c0:	mov	w1, #0x88                  	// #136
   549c4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   549c8:	add	x0, x0, #0x8a0
   549cc:	bl	cb40 <mpfr_assert_fail@plt>
   549d0:	ldr	w2, [sp, #108]
   549d4:	add	x1, sp, #0x90
   549d8:	mov	x0, x28
   549dc:	bl	c9f0 <mpfr_digamma@plt>
   549e0:	mov	w19, w0
   549e4:	b	54b68 <mpfr_digamma@@Base+0xbdc>
   549e8:	sub	x0, x27, x21
   549ec:	cmp	x0, x24
   549f0:	b.lt	54b8c <mpfr_digamma@@Base+0xc00>  // b.tstop
   549f4:	add	x21, x21, x24
   549f8:	add	x24, x21, x21, lsr #63
   549fc:	asr	x24, x24, #1
   54a00:	mov	x1, x21
   54a04:	mov	x0, x22
   54a08:	bl	bed0 <mpfr_set_prec@plt>
   54a0c:	mov	x1, x21
   54a10:	mov	x0, x23
   54a14:	bl	bed0 <mpfr_set_prec@plt>
   54a18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54a1c:	ldr	x1, [x0, #2624]
   54a20:	add	x0, x0, #0xa40
   54a24:	blr	x1
   54a28:	mov	w2, #0x0                   	// #0
   54a2c:	mrs	x1, tpidr_el0
   54a30:	add	x1, x1, x0
   54a34:	mov	x0, x23
   54a38:	bl	c380 <mpfr_cache@plt>
   54a3c:	mov	w3, #0x0                   	// #0
   54a40:	mov	x2, x25
   54a44:	mov	x1, x23
   54a48:	mov	x0, x22
   54a4c:	bl	bd50 <mpfr_mul@plt>
   54a50:	ldr	x20, [sp, #192]
   54a54:	sub	x20, x20, x21
   54a58:	mov	w2, #0x0                   	// #0
   54a5c:	mov	x1, x22
   54a60:	mov	x0, x22
   54a64:	bl	ba70 <mpfr_cot@plt>
   54a68:	ldr	x0, [sp, #192]
   54a6c:	add	x19, x20, x0, lsl #1
   54a70:	add	x19, x19, #0x2
   54a74:	add	x20, x20, #0x2
   54a78:	cmp	x0, #0x0
   54a7c:	csel	x20, x20, x19, le
   54a80:	sub	x19, x21, x0
   54a84:	add	x19, x19, x20
   54a88:	mov	w3, #0x0                   	// #0
   54a8c:	mov	x2, x23
   54a90:	mov	x1, x22
   54a94:	mov	x0, x22
   54a98:	bl	bd50 <mpfr_mul@plt>
   54a9c:	add	x19, x19, #0x1
   54aa0:	mov	w2, #0x0                   	// #0
   54aa4:	mov	x1, x26
   54aa8:	mov	x0, x23
   54aac:	bl	c9f0 <mpfr_digamma@plt>
   54ab0:	ldr	x20, [sp, #128]
   54ab4:	mov	w3, #0x0                   	// #0
   54ab8:	mov	x2, x22
   54abc:	mov	x1, x23
   54ac0:	mov	x0, x23
   54ac4:	bl	bb70 <mpfr_sub@plt>
   54ac8:	ldr	x0, [sp, #128]
   54acc:	ldr	x2, [sp, #192]
   54ad0:	sub	x1, x2, x0
   54ad4:	add	x1, x19, x1
   54ad8:	cmp	x0, x2
   54adc:	csel	x19, x1, x19, lt  // lt = tstop
   54ae0:	sub	x20, x20, x0
   54ae4:	sub	x20, x20, #0x1
   54ae8:	cmp	x20, x19
   54aec:	csinc	x20, x20, x19, gt
   54af0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   54af4:	cmp	x0, x1
   54af8:	b.le	549e8 <mpfr_digamma@@Base+0xa5c>
   54afc:	ldr	w0, [sp, #108]
   54b00:	cmp	w0, #0x0
   54b04:	ldr	x3, [x28]
   54b08:	cinc	x3, x3, eq  // eq = none
   54b0c:	add	x20, x20, #0x1
   54b10:	ldr	x0, [sp, #112]
   54b14:	add	x1, x0, #0x3e
   54b18:	subs	x0, x0, #0x1
   54b1c:	csel	x1, x1, x0, mi  // mi = first
   54b20:	asr	x1, x1, #6
   54b24:	sub	x2, x21, x20
   54b28:	add	x1, x1, #0x1
   54b2c:	ldr	x0, [sp, #136]
   54b30:	bl	c370 <mpfr_round_p@plt>
   54b34:	cbz	w0, 549e8 <mpfr_digamma@@Base+0xa5c>
   54b38:	add	x20, sp, #0x70
   54b3c:	ldr	w3, [sp, #120]
   54b40:	ldr	w2, [sp, #108]
   54b44:	mov	x1, x20
   54b48:	mov	x0, x28
   54b4c:	bl	c6a0 <mpfr_set4@plt>
   54b50:	mov	w19, w0
   54b54:	add	x0, sp, #0xb0
   54b58:	bl	c070 <mpfr_clear@plt>
   54b5c:	mov	x0, x20
   54b60:	bl	c070 <mpfr_clear@plt>
   54b64:	ldp	x23, x24, [sp, #48]
   54b68:	add	x0, sp, #0x90
   54b6c:	bl	c070 <mpfr_clear@plt>
   54b70:	mov	w0, w19
   54b74:	ldp	x19, x20, [sp, #16]
   54b78:	ldp	x21, x22, [sp, #32]
   54b7c:	ldp	x25, x26, [sp, #64]
   54b80:	ldp	x27, x28, [sp, #80]
   54b84:	ldp	x29, x30, [sp], #208
   54b88:	ret
   54b8c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x27b0>
   54b90:	add	x2, x2, #0x118
   54b94:	mov	w1, #0xb4                  	// #180
   54b98:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   54b9c:	add	x0, x0, #0x8a0
   54ba0:	bl	cb40 <mpfr_assert_fail@plt>
   54ba4:	sub	sp, sp, #0x220
   54ba8:	stp	x29, x30, [sp]
   54bac:	mov	x29, sp
   54bb0:	stp	x19, x20, [sp, #16]
   54bb4:	stp	x27, x28, [sp, #80]
   54bb8:	mov	x19, x0
   54bbc:	mov	x20, x1
   54bc0:	mov	x2, #0x108                 	// #264
   54bc4:	adrp	x1, 67000 <mpfr_bases@@Base+0x1900>
   54bc8:	add	x1, x1, #0x8c0
   54bcc:	add	x0, sp, #0x98
   54bd0:	bl	ba10 <memcpy@plt>
   54bd4:	add	x27, x19, x20, lsl #4
   54bd8:	mov	x0, x27
   54bdc:	bl	bf90 <mpfr_mpz_init@plt>
   54be0:	cbz	x20, 54c30 <mpfr_digamma@@Base+0xca4>
   54be4:	stp	x21, x22, [sp, #32]
   54be8:	stp	x23, x24, [sp, #48]
   54bec:	stp	x25, x26, [sp, #64]
   54bf0:	lsl	x23, x20, #1
   54bf4:	add	x19, sp, #0x1e0
   54bf8:	mov	x0, x19
   54bfc:	bl	bf90 <mpfr_mpz_init@plt>
   54c00:	mov	x1, #0x6                   	// #6
   54c04:	mov	x0, x19
   54c08:	bl	bcb0 <__gmpz_set_ui@plt>
   54c0c:	add	x0, x23, #0x1
   54c10:	str	x0, [sp, #128]
   54c14:	cmp	x0, #0x4
   54c18:	b.ls	54c40 <mpfr_digamma@@Base+0xcb4>  // b.plast
   54c1c:	mov	x19, #0x5                   	// #5
   54c20:	add	x22, sp, #0x1e0
   54c24:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   54c28:	movk	x21, #0xaaab
   54c2c:	b	55094 <mpfr_digamma@@Base+0x1108>
   54c30:	mov	x1, #0x1                   	// #1
   54c34:	mov	x0, x19
   54c38:	bl	bcb0 <__gmpz_set_ui@plt>
   54c3c:	b	55060 <mpfr_digamma@@Base+0x10d4>
   54c40:	cmp	x23, #0x40
   54c44:	b.hi	54c84 <mpfr_digamma@@Base+0xcf8>  // b.pmore
   54c48:	lsr	x0, x23, #1
   54c4c:	add	x1, sp, #0x98
   54c50:	ldr	x26, [x1, x0, lsl #3]
   54c54:	lsl	x20, x20, #2
   54c58:	add	x0, x20, #0x3
   54c5c:	str	x0, [sp, #136]
   54c60:	add	x21, sp, #0x210
   54c64:	add	x19, sp, #0x200
   54c68:	add	x22, sp, #0x1f0
   54c6c:	add	x0, sp, #0x1e0
   54c70:	str	x0, [sp, #104]
   54c74:	add	x25, sp, #0x1a0
   54c78:	add	x24, sp, #0x1c0
   54c7c:	mov	w28, #0x2                   	// #2
   54c80:	b	54dc0 <mpfr_digamma@@Base+0xe34>
   54c84:	ucvtf	d0, x23
   54c88:	fmov	d1, #7.000000000000000000e+00
   54c8c:	fmul	d0, d0, d1
   54c90:	bl	c950 <__gmpfr_ceil_log2@plt>
   54c94:	add	x26, x0, #0x1
   54c98:	add	x19, sp, #0x1a0
   54c9c:	mov	x1, #0x35                  	// #53
   54ca0:	mov	x0, x19
   54ca4:	bl	ca80 <mpfr_init2@plt>
   54ca8:	mov	w3, #0x2                   	// #2
   54cac:	mov	x2, #0xffffffffffffffe0    	// #-32
   54cb0:	mov	x1, #0x1f2c                	// #7980
   54cb4:	movk	x1, #0xefd, lsl #16
   54cb8:	mov	x0, x19
   54cbc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54cc0:	mov	w3, #0x2                   	// #2
   54cc4:	mov	x2, x23
   54cc8:	mov	x1, x19
   54ccc:	mov	x0, x19
   54cd0:	bl	ba50 <mpfr_mul_ui@plt>
   54cd4:	mov	w2, #0x2                   	// #2
   54cd8:	mov	x1, x19
   54cdc:	mov	x0, x19
   54ce0:	bl	c1d0 <mpfr_log2@plt>
   54ce4:	mov	w3, #0x2                   	// #2
   54ce8:	mov	x2, x23
   54cec:	mov	x1, x19
   54cf0:	mov	x0, x19
   54cf4:	bl	ba50 <mpfr_mul_ui@plt>
   54cf8:	mov	w1, #0x2                   	// #2
   54cfc:	mov	x0, x19
   54d00:	bl	bca0 <mpfr_get_ui@plt>
   54d04:	mov	x22, x0
   54d08:	mov	x0, x19
   54d0c:	bl	c070 <mpfr_clear@plt>
   54d10:	mov	w1, #0x2                   	// #2
   54d14:	add	x0, sp, #0x1e0
   54d18:	bl	cb60 <__gmpz_sizeinbase@plt>
   54d1c:	asr	x26, x26, #1
   54d20:	add	x26, x26, #0xe
   54d24:	add	x0, x0, x22
   54d28:	add	x26, x26, x0
   54d2c:	b	54c54 <mpfr_digamma@@Base+0xcc8>
   54d30:	mov	x20, #0x4                   	// #4
   54d34:	b	54e68 <mpfr_digamma@@Base+0xedc>
   54d38:	mov	x2, #0x0                   	// #0
   54d3c:	b	54fe0 <mpfr_digamma@@Base+0x1054>
   54d40:	ldr	x2, [sp, #128]
   54d44:	mov	x1, x19
   54d48:	mov	x0, x19
   54d4c:	bl	c100 <__gmpz_mul_ui@plt>
   54d50:	ldr	x2, [sp, #104]
   54d54:	mov	x1, x19
   54d58:	mov	x0, x19
   54d5c:	bl	bf60 <__gmpz_divexact@plt>
   54d60:	mov	x2, x19
   54d64:	mov	x1, x27
   54d68:	mov	x0, x27
   54d6c:	bl	bff0 <__gmpz_mul@plt>
   54d70:	mov	x1, #0x1                   	// #1
   54d74:	ldr	x0, [sp, #104]
   54d78:	bl	bcb0 <__gmpz_set_ui@plt>
   54d7c:	mov	x0, x24
   54d80:	bl	c070 <mpfr_clear@plt>
   54d84:	mov	x0, x25
   54d88:	bl	c070 <mpfr_clear@plt>
   54d8c:	mov	x0, x21
   54d90:	bl	c170 <mpfr_mpz_clear@plt>
   54d94:	mov	x0, x19
   54d98:	bl	c170 <mpfr_mpz_clear@plt>
   54d9c:	mov	x0, x22
   54da0:	bl	c170 <mpfr_mpz_clear@plt>
   54da4:	cbnz	w20, 5504c <mpfr_digamma@@Base+0x10c0>
   54da8:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   54dac:	movk	x0, #0x6667
   54db0:	smulh	x0, x26, x0
   54db4:	asr	x0, x0, #2
   54db8:	sub	x0, x0, x26, asr #63
   54dbc:	add	x26, x26, x0
   54dc0:	mov	x0, x21
   54dc4:	bl	bf90 <mpfr_mpz_init@plt>
   54dc8:	mov	x0, x19
   54dcc:	bl	bf90 <mpfr_mpz_init@plt>
   54dd0:	mov	x0, x22
   54dd4:	bl	bf90 <mpfr_mpz_init@plt>
   54dd8:	mov	x1, #0x1                   	// #1
   54ddc:	mov	x0, x22
   54de0:	bl	bcb0 <__gmpz_set_ui@plt>
   54de4:	str	x26, [sp, #112]
   54de8:	mov	x2, x26
   54dec:	mov	x1, x22
   54df0:	mov	x0, x22
   54df4:	bl	c200 <__gmpz_mul_2exp@plt>
   54df8:	mov	x2, x23
   54dfc:	mov	x1, #0x3                   	// #3
   54e00:	mov	x0, x19
   54e04:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   54e08:	mov	x2, x19
   54e0c:	mov	x1, x22
   54e10:	mov	x0, x21
   54e14:	bl	be30 <__gmpz_fdiv_q@plt>
   54e18:	ldr	w0, [sp, #516]
   54e1c:	cmp	w0, #0x0
   54e20:	b.le	54d30 <mpfr_digamma@@Base+0xda4>
   54e24:	mov	x20, #0x4                   	// #4
   54e28:	mov	x2, x23
   54e2c:	mov	x1, x20
   54e30:	mov	x0, x19
   54e34:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   54e38:	mov	x2, x19
   54e3c:	mov	x1, x22
   54e40:	mov	x0, x19
   54e44:	bl	be30 <__gmpz_fdiv_q@plt>
   54e48:	mov	x2, x19
   54e4c:	mov	x1, x21
   54e50:	mov	x0, x21
   54e54:	bl	c9c0 <__gmpz_add@plt>
   54e58:	add	x20, x20, #0x1
   54e5c:	ldr	w0, [sp, #516]
   54e60:	cmp	w0, #0x0
   54e64:	b.gt	54e28 <mpfr_digamma@@Base+0xe9c>
   54e68:	sub	x0, x23, #0x1
   54e6c:	str	x0, [sp, #120]
   54e70:	mov	x2, x0
   54e74:	mov	x1, x20
   54e78:	mov	x0, x19
   54e7c:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   54e80:	ldr	x2, [sp, #120]
   54e84:	mov	x1, x19
   54e88:	mov	x0, x19
   54e8c:	bl	c100 <__gmpz_mul_ui@plt>
   54e90:	mov	x2, x19
   54e94:	mov	x1, x22
   54e98:	mov	x0, x19
   54e9c:	bl	c770 <__gmpz_cdiv_q@plt>
   54ea0:	mov	x2, x19
   54ea4:	mov	x1, x21
   54ea8:	mov	x0, x21
   54eac:	bl	c9c0 <__gmpz_add@plt>
   54eb0:	mov	x2, x22
   54eb4:	mov	x1, x21
   54eb8:	mov	x0, x21
   54ebc:	bl	c9c0 <__gmpz_add@plt>
   54ec0:	mov	x2, x23
   54ec4:	mov	x1, x22
   54ec8:	mov	x0, x22
   54ecc:	bl	bb60 <__gmpz_cdiv_q_2exp@plt>
   54ed0:	mov	x2, x22
   54ed4:	mov	x1, x21
   54ed8:	mov	x0, x21
   54edc:	bl	c9c0 <__gmpz_add@plt>
   54ee0:	mov	x1, x23
   54ee4:	mov	x0, x19
   54ee8:	bl	bfc0 <__gmpz_fac_ui@plt>
   54eec:	mov	x2, x19
   54ef0:	mov	x1, x21
   54ef4:	mov	x0, x21
   54ef8:	bl	bff0 <__gmpz_mul@plt>
   54efc:	ldr	x2, [sp, #104]
   54f00:	mov	x1, x21
   54f04:	mov	x0, x21
   54f08:	bl	bff0 <__gmpz_mul@plt>
   54f0c:	mov	x2, #0x1                   	// #1
   54f10:	mov	x1, x21
   54f14:	mov	x0, x21
   54f18:	bl	c200 <__gmpz_mul_2exp@plt>
   54f1c:	mov	x1, x26
   54f20:	mov	x0, x25
   54f24:	bl	ca80 <mpfr_init2@plt>
   54f28:	mov	w2, #0x1                   	// #1
   54f2c:	mov	x1, x21
   54f30:	mov	x0, x25
   54f34:	bl	c240 <mpfr_set_z@plt>
   54f38:	mov	w3, #0x1                   	// #1
   54f3c:	ldr	x2, [sp, #112]
   54f40:	mov	x1, x25
   54f44:	mov	x0, x25
   54f48:	bl	c8f0 <mpfr_div_2ui@plt>
   54f4c:	mov	x1, x26
   54f50:	mov	x0, x24
   54f54:	bl	ca80 <mpfr_init2@plt>
   54f58:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   54f5c:	ldr	x1, [x0, #2624]
   54f60:	add	x0, x0, #0xa40
   54f64:	blr	x1
   54f68:	mov	w2, w28
   54f6c:	mrs	x1, tpidr_el0
   54f70:	add	x1, x1, x0
   54f74:	mov	x0, x24
   54f78:	bl	c380 <mpfr_cache@plt>
   54f7c:	mov	w3, w28
   54f80:	mov	x2, #0x1                   	// #1
   54f84:	mov	x1, x24
   54f88:	mov	x0, x24
   54f8c:	bl	c2c0 <mpfr_mul_2ui@plt>
   54f90:	mov	w3, w28
   54f94:	mov	x2, x23
   54f98:	mov	x1, x24
   54f9c:	mov	x0, x24
   54fa0:	bl	bf70 <mpfr_pow_ui@plt>
   54fa4:	mov	w3, #0x1                   	// #1
   54fa8:	mov	x2, x24
   54fac:	mov	x1, x25
   54fb0:	mov	x0, x25
   54fb4:	bl	c620 <mpfr_div@plt>
   54fb8:	ldr	x0, [sp, #136]
   54fbc:	add	x20, x0, x20
   54fc0:	cmp	x20, #0x1
   54fc4:	b.ls	54d38 <mpfr_digamma@@Base+0xdac>  // b.plast
   54fc8:	mov	x2, #0x0                   	// #0
   54fcc:	add	x2, x2, #0x1
   54fd0:	add	x0, x20, #0x1
   54fd4:	lsr	x20, x0, #1
   54fd8:	cmp	x0, #0x3
   54fdc:	b.hi	54fcc <mpfr_digamma@@Base+0x1040>  // b.pmore
   54fe0:	ldr	x0, [sp, #416]
   54fe4:	mov	w20, #0x0                   	// #0
   54fe8:	ldr	x1, [sp, #112]
   54fec:	cmp	x1, x2
   54ff0:	b.ls	55028 <mpfr_digamma@@Base+0x109c>  // b.plast
   54ff4:	add	x20, x0, #0x3e
   54ff8:	subs	x0, x0, #0x1
   54ffc:	csel	x0, x20, x0, mi  // mi = first
   55000:	and	x20, x0, #0xffffffffffffffc0
   55004:	add	x20, x20, #0x40
   55008:	sub	x1, x20, x1
   5500c:	add	x1, x1, x2
   55010:	ldr	x0, [sp, #440]
   55014:	bl	caa0 <__gmpn_scan1@plt>
   55018:	sub	x20, x20, x0
   5501c:	ldr	x0, [sp, #432]
   55020:	cmp	x0, x20
   55024:	cset	w20, cc  // cc = lo, ul, last
   55028:	mov	w2, w28
   5502c:	mov	x1, x25
   55030:	mov	x0, x27
   55034:	bl	be00 <mpfr_get_z@plt>
   55038:	tbnz	w23, #1, 54d40 <mpfr_digamma@@Base+0xdb4>
   5503c:	ldr	w0, [x27, #4]
   55040:	neg	w0, w0
   55044:	str	w0, [x27, #4]
   55048:	b	54d40 <mpfr_digamma@@Base+0xdb4>
   5504c:	add	x0, sp, #0x1e0
   55050:	bl	c170 <mpfr_mpz_clear@plt>
   55054:	ldp	x21, x22, [sp, #32]
   55058:	ldp	x23, x24, [sp, #48]
   5505c:	ldp	x25, x26, [sp, #64]
   55060:	ldp	x19, x20, [sp, #16]
   55064:	ldp	x27, x28, [sp, #80]
   55068:	ldp	x29, x30, [sp]
   5506c:	add	sp, sp, #0x220
   55070:	ret
   55074:	mov	x2, x19
   55078:	mov	x1, x22
   5507c:	mov	x0, x22
   55080:	bl	c100 <__gmpz_mul_ui@plt>
   55084:	add	x19, x19, #0x2
   55088:	ldr	x0, [sp, #128]
   5508c:	cmp	x19, x0
   55090:	b.hi	54c40 <mpfr_digamma@@Base+0xcb4>  // b.pmore
   55094:	sub	x1, x19, #0x1
   55098:	udiv	x0, x23, x1
   5509c:	msub	x0, x0, x1, x23
   550a0:	cbnz	x0, 55084 <mpfr_digamma@@Base+0x10f8>
   550a4:	cmp	x19, #0x8
   550a8:	b.ls	55074 <mpfr_digamma@@Base+0x10e8>  // b.plast
   550ac:	umulh	x0, x19, x21
   550b0:	and	x1, x0, #0xfffffffffffffffe
   550b4:	add	x0, x1, x0, lsr #1
   550b8:	cmp	x19, x0
   550bc:	b.eq	55084 <mpfr_digamma@@Base+0x10f8>  // b.none
   550c0:	mov	x0, #0x3                   	// #3
   550c4:	add	x0, x0, #0x2
   550c8:	mul	x1, x0, x0
   550cc:	cmp	x1, x19
   550d0:	b.hi	55074 <mpfr_digamma@@Base+0x10e8>  // b.pmore
   550d4:	udiv	x2, x19, x0
   550d8:	msub	x2, x2, x0, x19
   550dc:	cbnz	x2, 550c4 <mpfr_digamma@@Base+0x1138>
   550e0:	b	55084 <mpfr_digamma@@Base+0x10f8>

00000000000550e4 <mpfr_bernoulli_cache@@Base>:
   550e4:	stp	x29, x30, [sp, #-48]!
   550e8:	mov	x29, sp
   550ec:	stp	x19, x20, [sp, #16]
   550f0:	mov	x20, x0
   550f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   550f8:	ldr	x1, [x0, #2480]
   550fc:	add	x0, x0, #0x9b0
   55100:	blr	x1
   55104:	mrs	x1, tpidr_el0
   55108:	ldr	x0, [x1, x0]
   5510c:	cmp	x0, x20
   55110:	b.hi	551a8 <mpfr_bernoulli_cache@@Base+0xc4>  // b.pmore
   55114:	stp	x21, x22, [sp, #32]
   55118:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5511c:	ldr	x1, [x0, #2480]
   55120:	add	x0, x0, #0x9b0
   55124:	blr	x1
   55128:	mrs	x1, tpidr_el0
   5512c:	add	x0, x1, x0
   55130:	ldr	x19, [x0, #8]
   55134:	cbz	x19, 551d4 <mpfr_bernoulli_cache@@Base+0xf0>
   55138:	cmp	x19, x20
   5513c:	b.ls	55214 <mpfr_bernoulli_cache@@Base+0x130>  // b.plast
   55140:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55144:	ldr	x1, [x0, #2480]
   55148:	add	x0, x0, #0x9b0
   5514c:	blr	x1
   55150:	mrs	x1, tpidr_el0
   55154:	ldr	x19, [x1, x0]
   55158:	mrs	x21, tpidr_el0
   5515c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55160:	ldr	x1, [x0, #2480]
   55164:	add	x0, x0, #0x9b0
   55168:	blr	x1
   5516c:	add	x0, x21, x0
   55170:	mov	x1, x19
   55174:	ldr	x0, [x0, #16]
   55178:	bl	54ba4 <mpfr_digamma@@Base+0xc18>
   5517c:	add	x19, x19, #0x1
   55180:	cmp	x20, x19
   55184:	b.cs	5515c <mpfr_bernoulli_cache@@Base+0x78>  // b.hs, b.nlast
   55188:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5518c:	ldr	x1, [x0, #2480]
   55190:	add	x0, x0, #0x9b0
   55194:	blr	x1
   55198:	add	x1, x20, #0x1
   5519c:	mrs	x2, tpidr_el0
   551a0:	str	x1, [x2, x0]
   551a4:	ldp	x21, x22, [sp, #32]
   551a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   551ac:	ldr	x1, [x0, #2480]
   551b0:	add	x0, x0, #0x9b0
   551b4:	blr	x1
   551b8:	mrs	x1, tpidr_el0
   551bc:	add	x0, x1, x0
   551c0:	ldr	x0, [x0, #16]
   551c4:	add	x0, x0, x20, lsl #4
   551c8:	ldp	x19, x20, [sp, #16]
   551cc:	ldp	x29, x30, [sp], #48
   551d0:	ret
   551d4:	add	x1, x20, x20, lsr #2
   551d8:	cmp	x1, #0x10
   551dc:	mov	x0, #0x10                  	// #16
   551e0:	csel	x1, x1, x0, cs  // cs = hs, nlast
   551e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   551e8:	ldr	x2, [x0, #2480]
   551ec:	add	x0, x0, #0x9b0
   551f0:	blr	x2
   551f4:	mrs	x21, tpidr_el0
   551f8:	add	x21, x21, x0
   551fc:	str	x1, [x21, #8]
   55200:	lsl	x0, x1, #4
   55204:	bl	ccf0 <mpfr_allocate_func@plt>
   55208:	str	x0, [x21, #16]
   5520c:	str	xzr, [x21]
   55210:	b	55158 <mpfr_bernoulli_cache@@Base+0x74>
   55214:	add	x22, x20, x20, lsr #2
   55218:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5521c:	ldr	x1, [x0, #2480]
   55220:	add	x0, x0, #0x9b0
   55224:	blr	x1
   55228:	mrs	x21, tpidr_el0
   5522c:	add	x21, x21, x0
   55230:	lsl	x2, x22, #4
   55234:	lsl	x1, x19, #4
   55238:	ldr	x0, [x21, #16]
   5523c:	bl	c1c0 <mpfr_reallocate_func@plt>
   55240:	str	x0, [x21, #16]
   55244:	str	x22, [x21, #8]
   55248:	ldr	x19, [x21]
   5524c:	cmp	x20, x19
   55250:	b.cs	55158 <mpfr_bernoulli_cache@@Base+0x74>  // b.hs, b.nlast
   55254:	b	55188 <mpfr_bernoulli_cache@@Base+0xa4>

0000000000055258 <mpfr_bernoulli_freecache@@Base>:
   55258:	stp	x29, x30, [sp, #-48]!
   5525c:	mov	x29, sp
   55260:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55264:	ldr	x1, [x0, #2480]
   55268:	add	x0, x0, #0x9b0
   5526c:	blr	x1
   55270:	mrs	x1, tpidr_el0
   55274:	add	x0, x1, x0
   55278:	ldr	x0, [x0, #16]
   5527c:	cbz	x0, 55318 <mpfr_bernoulli_freecache@@Base+0xc0>
   55280:	stp	x19, x20, [sp, #16]
   55284:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55288:	ldr	x1, [x0, #2480]
   5528c:	add	x0, x0, #0x9b0
   55290:	blr	x1
   55294:	mrs	x1, tpidr_el0
   55298:	ldr	x0, [x1, x0]
   5529c:	cbz	x0, 552e0 <mpfr_bernoulli_freecache@@Base+0x88>
   552a0:	str	x21, [sp, #32]
   552a4:	mov	x19, #0x0                   	// #0
   552a8:	mov	x21, x1
   552ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   552b0:	ldr	x1, [x0, #2480]
   552b4:	add	x0, x0, #0x9b0
   552b8:	blr	x1
   552bc:	add	x20, x21, x0
   552c0:	ldr	x0, [x20, #16]
   552c4:	add	x0, x0, x19, lsl #4
   552c8:	bl	c170 <mpfr_mpz_clear@plt>
   552cc:	add	x19, x19, #0x1
   552d0:	ldr	x0, [x20]
   552d4:	cmp	x0, x19
   552d8:	b.hi	552ac <mpfr_bernoulli_freecache@@Base+0x54>  // b.pmore
   552dc:	ldr	x21, [sp, #32]
   552e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   552e4:	ldr	x1, [x0, #2480]
   552e8:	add	x0, x0, #0x9b0
   552ec:	blr	x1
   552f0:	mrs	x19, tpidr_el0
   552f4:	add	x19, x19, x0
   552f8:	ldr	x1, [x19, #8]
   552fc:	lsl	x1, x1, #4
   55300:	ldr	x0, [x19, #16]
   55304:	bl	cc20 <mpfr_free_func@plt>
   55308:	str	xzr, [x19, #16]
   5530c:	str	xzr, [x19, #8]
   55310:	str	xzr, [x19]
   55314:	ldp	x19, x20, [sp, #16]
   55318:	ldp	x29, x30, [sp], #48
   5531c:	ret

0000000000055320 <mpfr_regular_p@@Base>:
   55320:	ldr	x1, [x0, #16]
   55324:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   55328:	cmp	x1, x0
   5532c:	cset	w0, gt
   55330:	ret

0000000000055334 <mpfr_set_flt@@Base>:
   55334:	stp	x29, x30, [sp, #-16]!
   55338:	mov	x29, sp
   5533c:	fcvt	d0, s0
   55340:	bl	be40 <mpfr_set_d@plt>
   55344:	ldp	x29, x30, [sp], #16
   55348:	ret

000000000005534c <mpfr_get_flt@@Base>:
   5534c:	stp	x29, x30, [sp, #-48]!
   55350:	mov	x29, sp
   55354:	stp	x19, x20, [sp, #16]
   55358:	mov	w5, w1
   5535c:	ldr	x19, [x0, #16]
   55360:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55364:	cmp	x19, x1
   55368:	b.le	553ec <mpfr_get_flt@@Base+0xa0>
   5536c:	ldr	w20, [x0, #8]
   55370:	lsr	w3, w20, #31
   55374:	cmp	w5, #0x4
   55378:	b.eq	553fc <mpfr_get_flt@@Base+0xb0>  // b.none
   5537c:	cmn	x19, #0x94
   55380:	b.lt	55410 <mpfr_get_flt@@Base+0xc4>  // b.tstop
   55384:	cmp	x19, #0x80
   55388:	b.gt	55470 <mpfr_get_flt@@Base+0x124>
   5538c:	add	w4, w19, #0x95
   55390:	cmn	x19, #0x7d
   55394:	mov	w1, #0x18                  	// #24
   55398:	csel	w4, w4, w1, lt  // lt = tstop
   5539c:	sxtw	x4, w4
   553a0:	ldr	x2, [x0]
   553a4:	ldr	x1, [x0, #24]
   553a8:	add	x0, sp, #0x28
   553ac:	bl	c720 <mpfr_round_raw_4@plt>
   553b0:	cbnz	w0, 554ac <mpfr_get_flt@@Base+0x160>
   553b4:	ldr	d0, [sp, #40]
   553b8:	ucvtf	d0, d0
   553bc:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   553c0:	fmov	d1, x0
   553c4:	fmul	d0, d0, d1
   553c8:	mov	w0, w19
   553cc:	bl	cba0 <mpfr_scale2@plt>
   553d0:	fneg	d1, d0
   553d4:	cmp	w20, #0x0
   553d8:	fcsel	d0, d1, d0, lt  // lt = tstop
   553dc:	fcvt	s0, d0
   553e0:	ldp	x19, x20, [sp, #16]
   553e4:	ldp	x29, x30, [sp], #48
   553e8:	ret
   553ec:	mov	w1, w5
   553f0:	bl	bd30 <mpfr_get_d@plt>
   553f4:	fcvt	s0, d0
   553f8:	b	553e0 <mpfr_get_flt@@Base+0x94>
   553fc:	tbnz	w20, #31, 55504 <mpfr_get_flt@@Base+0x1b8>
   55400:	cmn	x19, #0x94
   55404:	b.lt	554f0 <mpfr_get_flt@@Base+0x1a4>  // b.tstop
   55408:	mov	w5, #0x2                   	// #2
   5540c:	b	55384 <mpfr_get_flt@@Base+0x38>
   55410:	tbnz	w20, #31, 55444 <mpfr_get_flt@@Base+0xf8>
   55414:	cmp	w5, #0x2
   55418:	b.eq	554e0 <mpfr_get_flt@@Base+0x194>  // b.none
   5541c:	movi	v0.2s, #0x0
   55420:	cbnz	w5, 553e0 <mpfr_get_flt@@Base+0x94>
   55424:	mov	x2, #0xffffffffffffff6a    	// #-150
   55428:	mov	x1, #0x1                   	// #1
   5542c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   55430:	movi	v0.2s, #0x0
   55434:	cmp	w0, #0x0
   55438:	b.le	553e0 <mpfr_get_flt@@Base+0x94>
   5543c:	movi	v0.2s, #0x80, lsl #16
   55440:	b	554e4 <mpfr_get_flt@@Base+0x198>
   55444:	cmp	w5, #0x3
   55448:	b.eq	554c8 <mpfr_get_flt@@Base+0x17c>  // b.none
   5544c:	cbz	w5, 55458 <mpfr_get_flt@@Base+0x10c>
   55450:	movi	v0.2s, #0x80, lsl #24
   55454:	b	553e0 <mpfr_get_flt@@Base+0x94>
   55458:	mov	x2, #0xffffffffffffff6a    	// #-150
   5545c:	mov	x1, #0xffffffffffffffff    	// #-1
   55460:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   55464:	tbnz	w0, #31, 554d4 <mpfr_get_flt@@Base+0x188>
   55468:	movi	v0.2s, #0x80, lsl #24
   5546c:	b	553e0 <mpfr_get_flt@@Base+0x94>
   55470:	tbnz	w20, #31, 55490 <mpfr_get_flt@@Base+0x144>
   55474:	and	w5, w5, #0xfffffffd
   55478:	cmp	w5, #0x1
   5547c:	b.eq	554bc <mpfr_get_flt@@Base+0x170>  // b.none
   55480:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   55484:	ldr	d0, [x0, #2520]
   55488:	fcvt	s0, d0
   5548c:	b	553e0 <mpfr_get_flt@@Base+0x94>
   55490:	sub	w5, w5, #0x1
   55494:	cmp	w5, #0x1
   55498:	b.ls	554b4 <mpfr_get_flt@@Base+0x168>  // b.plast
   5549c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   554a0:	ldr	d0, [x0, #2512]
   554a4:	fcvt	s0, d0
   554a8:	b	553e0 <mpfr_get_flt@@Base+0x94>
   554ac:	fmov	d0, #1.000000000000000000e+00
   554b0:	b	553c8 <mpfr_get_flt@@Base+0x7c>
   554b4:	mvni	v0.2s, #0x80, lsl #16
   554b8:	b	553e0 <mpfr_get_flt@@Base+0x94>
   554bc:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   554c0:	ldr	s0, [x0, #2504]
   554c4:	b	553e0 <mpfr_get_flt@@Base+0x94>
   554c8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   554cc:	ldr	s0, [x0, #2508]
   554d0:	b	554e4 <mpfr_get_flt@@Base+0x198>
   554d4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   554d8:	ldr	s0, [x0, #2508]
   554dc:	b	554e4 <mpfr_get_flt@@Base+0x198>
   554e0:	movi	v0.2s, #0x80, lsl #16
   554e4:	movi	v1.2s, #0x34, lsl #24
   554e8:	fmul	s0, s0, s1
   554ec:	b	553e0 <mpfr_get_flt@@Base+0x94>
   554f0:	movi	v0.2s, #0x80, lsl #16
   554f4:	b	554e4 <mpfr_get_flt@@Base+0x198>
   554f8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   554fc:	ldr	s0, [x0, #2508]
   55500:	b	554e4 <mpfr_get_flt@@Base+0x198>
   55504:	cmn	x19, #0x94
   55508:	b.lt	554f8 <mpfr_get_flt@@Base+0x1ac>  // b.tstop
   5550c:	mov	w5, #0x3                   	// #3
   55510:	b	55384 <mpfr_get_flt@@Base+0x38>

0000000000055514 <mpfr_scale2@@Base>:
   55514:	fmov	d1, #1.000000000000000000e+00
   55518:	fcmp	d0, d1
   5551c:	b.eq	55540 <mpfr_scale2@@Base+0x2c>  // b.none
   55520:	fmov	x1, d0
   55524:	cmn	w0, #0x3fd
   55528:	b.lt	5554c <mpfr_scale2@@Base+0x38>  // b.tstop
   5552c:	ubfx	x2, x1, #52, #11
   55530:	add	w0, w0, w2
   55534:	bfi	x1, x0, #52, #11
   55538:	fmov	d0, x1
   5553c:	ret
   55540:	add	w0, w0, #0x1
   55544:	fmov	d0, #5.000000000000000000e-01
   55548:	b	55520 <mpfr_scale2@@Base+0xc>
   5554c:	ubfx	x2, x1, #52, #11
   55550:	add	w2, w2, #0x34
   55554:	add	w0, w2, w0
   55558:	bfi	x1, x0, #52, #11
   5555c:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   55560:	fmov	d0, x0
   55564:	fmov	d1, x1
   55568:	fmul	d0, d0, d1
   5556c:	fmov	x1, d0
   55570:	b	55538 <mpfr_scale2@@Base+0x24>

0000000000055574 <mpfr_set_z_2exp@@Base>:
   55574:	stp	x29, x30, [sp, #-112]!
   55578:	mov	x29, sp
   5557c:	stp	x19, x20, [sp, #16]
   55580:	stp	x25, x26, [sp, #64]
   55584:	mov	x20, x0
   55588:	mov	x19, x2
   5558c:	str	w3, [sp, #108]
   55590:	ldr	w3, [x1, #4]
   55594:	tbnz	w3, #31, 55794 <mpfr_set_z_2exp@@Base+0x220>
   55598:	cmp	w3, #0x0
   5559c:	cset	w26, gt
   555a0:	cbz	w3, 55780 <mpfr_set_z_2exp@@Base+0x20c>
   555a4:	cmp	w3, #0x0
   555a8:	cneg	w3, w3, lt  // lt = tstop
   555ac:	sxtw	x4, w3
   555b0:	tbnz	x19, #63, 555d0 <mpfr_set_z_2exp@@Base+0x5c>
   555b4:	add	x0, x19, #0x3f
   555b8:	cmp	x19, #0x0
   555bc:	csel	x0, x0, x19, lt  // lt = tstop
   555c0:	add	x0, x4, x0, asr #6
   555c4:	mov	x2, #0x100000000000000     	// #72057594037927936
   555c8:	cmp	x0, x2
   555cc:	b.gt	5579c <mpfr_set_z_2exp@@Base+0x228>
   555d0:	stp	x21, x22, [sp, #32]
   555d4:	stp	x23, x24, [sp, #48]
   555d8:	ldr	x22, [x20, #24]
   555dc:	ldr	x0, [x20]
   555e0:	add	x21, x0, #0x3e
   555e4:	subs	x0, x0, #0x1
   555e8:	csel	x0, x21, x0, mi  // mi = first
   555ec:	asr	x21, x0, #6
   555f0:	add	x2, x21, #0x1
   555f4:	sub	x23, x4, x2
   555f8:	ldr	x24, [x1, #8]
   555fc:	add	x3, x24, w3, sxtw #3
   55600:	ldur	x0, [x3, #-8]
   55604:	clz	x25, x0
   55608:	add	x19, x19, x4, lsl #6
   5560c:	sub	x19, x19, x25
   55610:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55614:	ldr	x1, [x0, #2544]
   55618:	add	x0, x0, #0x9f0
   5561c:	blr	x1
   55620:	mrs	x1, tpidr_el0
   55624:	ldr	x0, [x1, x0]
   55628:	cmp	x0, x19
   5562c:	b.lt	557b4 <mpfr_set_z_2exp@@Base+0x240>  // b.tstop
   55630:	stp	x27, x28, [sp, #80]
   55634:	add	x27, x19, #0x1
   55638:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5563c:	ldr	x1, [x0, #2512]
   55640:	add	x0, x0, #0x9d0
   55644:	blr	x1
   55648:	mrs	x1, tpidr_el0
   5564c:	ldr	x0, [x1, x0]
   55650:	cmp	x27, x0
   55654:	b.lt	557d4 <mpfr_set_z_2exp@@Base+0x260>  // b.tstop
   55658:	tbnz	x23, #63, 559a8 <mpfr_set_z_2exp@@Base+0x434>
   5565c:	cbz	x25, 5585c <mpfr_set_z_2exp@@Base+0x2e8>
   55660:	lsl	x28, x23, #3
   55664:	mov	w3, w25
   55668:	add	x1, x24, x28
   5566c:	mov	x0, x22
   55670:	bl	bcc0 <__gmpn_lshift@plt>
   55674:	cmp	x23, #0x0
   55678:	b.gt	55800 <mpfr_set_z_2exp@@Base+0x28c>
   5567c:	ldr	x0, [x20]
   55680:	neg	w0, w0
   55684:	ands	w0, w0, #0x3f
   55688:	b.eq	55878 <mpfr_set_z_2exp@@Base+0x304>  // b.none
   5568c:	sub	w1, w0, #0x1
   55690:	mov	x0, #0x1                   	// #1
   55694:	lsl	x0, x0, x1
   55698:	ldr	x3, [x22]
   5569c:	and	x4, x0, x3
   556a0:	sub	x0, x0, #0x1
   556a4:	mov	x2, #0x2                   	// #2
   556a8:	lsl	x1, x2, x1
   556ac:	neg	x2, x1
   556b0:	and	x2, x2, x3
   556b4:	str	x2, [x22]
   556b8:	ands	x0, x0, x3
   556bc:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   556c0:	b.gt	55910 <mpfr_set_z_2exp@@Base+0x39c>
   556c4:	ldr	w2, [sp, #108]
   556c8:	cbnz	w2, 55894 <mpfr_set_z_2exp@@Base+0x320>
   556cc:	cbz	x4, 558a0 <mpfr_set_z_2exp@@Base+0x32c>
   556d0:	cbz	x0, 55958 <mpfr_set_z_2exp@@Base+0x3e4>
   556d4:	ldr	x0, [x22]
   556d8:	add	x0, x1, x0
   556dc:	str	x0, [x22]
   556e0:	cmp	x1, x0
   556e4:	b.ls	55708 <mpfr_set_z_2exp@@Base+0x194>  // b.plast
   556e8:	mov	x1, x22
   556ec:	add	x2, x22, x21, lsl #3
   556f0:	cmp	x1, x2
   556f4:	b.eq	559f4 <mpfr_set_z_2exp@@Base+0x480>  // b.none
   556f8:	ldr	x0, [x1, #8]
   556fc:	add	x0, x0, #0x1
   55700:	str	x0, [x1, #8]!
   55704:	cbz	x0, 556f0 <mpfr_set_z_2exp@@Base+0x17c>
   55708:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5570c:	ldr	x1, [x0, #2512]
   55710:	add	x0, x0, #0x9d0
   55714:	blr	x1
   55718:	mrs	x1, tpidr_el0
   5571c:	ldr	x0, [x1, x0]
   55720:	cmp	x19, x0
   55724:	b.lt	558ec <mpfr_set_z_2exp@@Base+0x378>  // b.tstop
   55728:	mov	w3, #0x1                   	// #1
   5572c:	str	x19, [x20, #16]
   55730:	str	w26, [x20, #8]
   55734:	mul	w3, w26, w3
   55738:	cbz	w3, 55a38 <mpfr_set_z_2exp@@Base+0x4c4>
   5573c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55740:	ldr	x1, [x0, #2576]
   55744:	add	x0, x0, #0xa10
   55748:	blr	x1
   5574c:	mrs	x1, tpidr_el0
   55750:	add	x0, x1, x0
   55754:	ldr	w1, [x0]
   55758:	orr	w1, w1, #0x8
   5575c:	str	w1, [x0]
   55760:	ldp	x21, x22, [sp, #32]
   55764:	ldp	x23, x24, [sp, #48]
   55768:	ldp	x27, x28, [sp, #80]
   5576c:	mov	w0, w3
   55770:	ldp	x19, x20, [sp, #16]
   55774:	ldp	x25, x26, [sp, #64]
   55778:	ldp	x29, x30, [sp], #112
   5577c:	ret
   55780:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55784:	str	x0, [x20, #16]
   55788:	mov	w0, #0x1                   	// #1
   5578c:	str	w0, [x20, #8]
   55790:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   55794:	mov	w26, #0xffffffff            	// #-1
   55798:	b	555a4 <mpfr_set_z_2exp@@Base+0x30>
   5579c:	mov	w2, w26
   557a0:	ldr	w1, [sp, #108]
   557a4:	mov	x0, x20
   557a8:	bl	bf40 <mpfr_overflow@plt>
   557ac:	mov	w3, w0
   557b0:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   557b4:	mov	w2, w26
   557b8:	ldr	w1, [sp, #108]
   557bc:	mov	x0, x20
   557c0:	bl	bf40 <mpfr_overflow@plt>
   557c4:	mov	w3, w0
   557c8:	ldp	x21, x22, [sp, #32]
   557cc:	ldp	x23, x24, [sp, #48]
   557d0:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   557d4:	ldr	w0, [sp, #108]
   557d8:	cmp	w0, #0x0
   557dc:	mov	w2, w26
   557e0:	csinc	w1, w0, wzr, ne  // ne = any
   557e4:	mov	x0, x20
   557e8:	bl	c3c0 <mpfr_underflow@plt>
   557ec:	mov	w3, w0
   557f0:	ldp	x21, x22, [sp, #32]
   557f4:	ldp	x23, x24, [sp, #48]
   557f8:	ldp	x27, x28, [sp, #80]
   557fc:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   55800:	add	x28, x24, x28
   55804:	ldur	x0, [x28, #-8]
   55808:	neg	w1, w25
   5580c:	lsr	x1, x0, x1
   55810:	ldr	x0, [x22]
   55814:	orr	x0, x0, x1
   55818:	str	x0, [x22]
   5581c:	ldr	x0, [x20]
   55820:	neg	w0, w0
   55824:	ands	w0, w0, #0x3f
   55828:	b.ne	5568c <mpfr_set_z_2exp@@Base+0x118>  // b.any
   5582c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   55830:	lsr	x1, x1, x25
   55834:	sub	x2, x23, #0x1
   55838:	lsl	x3, x2, #3
   5583c:	ldr	x0, [x24, x2, lsl #3]
   55840:	and	x4, x0, x1
   55844:	sub	x1, x1, #0x1
   55848:	ands	x0, x1, x0
   5584c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
   55850:	b.gt	55a24 <mpfr_set_z_2exp@@Base+0x4b0>
   55854:	mov	x1, #0x1                   	// #1
   55858:	b	556c4 <mpfr_set_z_2exp@@Base+0x150>
   5585c:	add	x1, x24, x23, lsl #3
   55860:	cmp	x1, x22
   55864:	b.eq	5567c <mpfr_set_z_2exp@@Base+0x108>  // b.none
   55868:	lsl	x2, x2, #3
   5586c:	mov	x0, x22
   55870:	bl	ba10 <memcpy@plt>
   55874:	b	5567c <mpfr_set_z_2exp@@Base+0x108>
   55878:	cmp	x23, #0x0
   5587c:	b.gt	5582c <mpfr_set_z_2exp@@Base+0x2b8>
   55880:	mov	x0, #0x0                   	// #0
   55884:	mov	x4, #0x0                   	// #0
   55888:	ldr	w1, [sp, #108]
   5588c:	cbz	w1, 558a0 <mpfr_set_z_2exp@@Base+0x32c>
   55890:	mov	x1, #0x1                   	// #1
   55894:	ldr	w2, [sp, #108]
   55898:	cmp	w2, #0x1
   5589c:	b.ne	55968 <mpfr_set_z_2exp@@Base+0x3f4>  // b.any
   558a0:	orr	x0, x0, x4
   558a4:	cmp	x0, #0x0
   558a8:	csetm	w3, ne  // ne = any
   558ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   558b0:	ldr	x1, [x0, #2512]
   558b4:	add	x0, x0, #0x9d0
   558b8:	blr	x1
   558bc:	mrs	x1, tpidr_el0
   558c0:	ldr	x0, [x1, x0]
   558c4:	cmp	x0, x19
   558c8:	b.le	5572c <mpfr_set_z_2exp@@Base+0x1b8>
   558cc:	ldr	w0, [sp, #108]
   558d0:	orr	w3, w3, w0
   558d4:	cbnz	w3, 558ec <mpfr_set_z_2exp@@Base+0x378>
   558d8:	mov	x0, x20
   558dc:	bl	bf00 <mpfr_powerof2_raw@plt>
   558e0:	cmp	w0, #0x0
   558e4:	cset	w0, ne  // ne = any
   558e8:	str	w0, [sp, #108]
   558ec:	mov	w2, w26
   558f0:	ldr	w1, [sp, #108]
   558f4:	mov	x0, x20
   558f8:	bl	c3c0 <mpfr_underflow@plt>
   558fc:	mov	w3, w0
   55900:	ldp	x21, x22, [sp, #32]
   55904:	ldp	x23, x24, [sp, #48]
   55908:	ldp	x27, x28, [sp, #80]
   5590c:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   55910:	sub	x23, x23, #0x1
   55914:	ldr	x0, [x24, x23, lsl #3]
   55918:	mov	x3, x0
   5591c:	neg	w5, w25
   55920:	mov	x2, #0xffffffffffffffff    	// #-1
   55924:	lsl	x2, x2, x5
   55928:	bic	x0, x0, x2
   5592c:	cmp	x25, #0x0
   55930:	csel	x0, x0, x3, ne  // ne = any
   55934:	cmp	x23, #0x0
   55938:	ccmp	x0, #0x0, #0x0, gt
   5593c:	b.ne	556c4 <mpfr_set_z_2exp@@Base+0x150>  // b.any
   55940:	sub	x23, x23, #0x1
   55944:	ldr	x0, [x24, x23, lsl #3]
   55948:	cmp	x23, #0x0
   5594c:	ccmp	x0, #0x0, #0x0, gt
   55950:	b.eq	55940 <mpfr_set_z_2exp@@Base+0x3cc>  // b.none
   55954:	b	556c4 <mpfr_set_z_2exp@@Base+0x150>
   55958:	ldr	x2, [x22]
   5595c:	tst	x1, x2
   55960:	b.ne	556d4 <mpfr_set_z_2exp@@Base+0x160>  // b.any
   55964:	b	558a0 <mpfr_set_z_2exp@@Base+0x32c>
   55968:	ldr	w2, [sp, #108]
   5596c:	add	w2, w2, w26, lsr #31
   55970:	cmp	w2, #0x3
   55974:	b.eq	558a0 <mpfr_set_z_2exp@@Base+0x32c>  // b.none
   55978:	orr	x2, x4, x0
   5597c:	cbnz	x2, 556d4 <mpfr_set_z_2exp@@Base+0x160>
   55980:	b	558a0 <mpfr_set_z_2exp@@Base+0x32c>
   55984:	mov	w2, w26
   55988:	ldr	w1, [sp, #108]
   5598c:	mov	x0, x20
   55990:	bl	bf40 <mpfr_overflow@plt>
   55994:	mov	w3, w0
   55998:	ldp	x21, x22, [sp, #32]
   5599c:	ldp	x23, x24, [sp, #48]
   559a0:	ldp	x27, x28, [sp, #80]
   559a4:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>
   559a8:	cbz	x25, 559d8 <mpfr_set_z_2exp@@Base+0x464>
   559ac:	mov	w3, w25
   559b0:	mov	x2, x4
   559b4:	mov	x1, x24
   559b8:	sub	x0, x22, x23, lsl #3
   559bc:	bl	bcc0 <__gmpn_lshift@plt>
   559c0:	neg	x2, x23, lsl #3
   559c4:	mov	w1, #0x0                   	// #0
   559c8:	mov	x0, x22
   559cc:	bl	c110 <memset@plt>
   559d0:	mov	w3, #0x0                   	// #0
   559d4:	b	558ac <mpfr_set_z_2exp@@Base+0x338>
   559d8:	sub	x0, x22, x23, lsl #3
   559dc:	cmp	x0, x24
   559e0:	b.eq	559c0 <mpfr_set_z_2exp@@Base+0x44c>  // b.none
   559e4:	lsl	x2, x4, #3
   559e8:	mov	x1, x24
   559ec:	bl	ba10 <memcpy@plt>
   559f0:	b	559c0 <mpfr_set_z_2exp@@Base+0x44c>
   559f4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   559f8:	ldr	x1, [x0, #2544]
   559fc:	add	x0, x0, #0x9f0
   55a00:	blr	x1
   55a04:	mrs	x1, tpidr_el0
   55a08:	ldr	x0, [x1, x0]
   55a0c:	cmp	x0, x19
   55a10:	b.eq	55984 <mpfr_set_z_2exp@@Base+0x410>  // b.none
   55a14:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   55a18:	str	x0, [x22, x21, lsl #3]
   55a1c:	mov	x19, x27
   55a20:	b	55708 <mpfr_set_z_2exp@@Base+0x194>
   55a24:	sub	x23, x23, #0x2
   55a28:	add	x3, x24, x3
   55a2c:	ldur	x0, [x3, #-8]
   55a30:	mov	x1, #0x1                   	// #1
   55a34:	b	55934 <mpfr_set_z_2exp@@Base+0x3c0>
   55a38:	ldp	x21, x22, [sp, #32]
   55a3c:	ldp	x23, x24, [sp, #48]
   55a40:	ldp	x27, x28, [sp, #80]
   55a44:	b	5576c <mpfr_set_z_2exp@@Base+0x1f8>

0000000000055a48 <mpfr_ai@@Base>:
   55a48:	sub	sp, sp, #0x260
   55a4c:	stp	x29, x30, [sp]
   55a50:	mov	x29, sp
   55a54:	stp	x19, x20, [sp, #16]
   55a58:	stp	x25, x26, [sp, #64]
   55a5c:	str	x0, [sp, #104]
   55a60:	mov	x25, x1
   55a64:	str	w2, [sp, #136]
   55a68:	ldr	x0, [x1, #16]
   55a6c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55a70:	cmp	x0, x1
   55a74:	b.le	55ffc <mpfr_ai@@Base+0x5b4>
   55a78:	stp	x21, x22, [sp, #32]
   55a7c:	stp	x23, x24, [sp, #48]
   55a80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55a84:	ldr	x1, [x0, #2576]
   55a88:	add	x0, x0, #0xa10
   55a8c:	blr	x1
   55a90:	mrs	x1, tpidr_el0
   55a94:	ldr	w0, [x1, x0]
   55a98:	str	w0, [sp, #140]
   55a9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55aa0:	ldr	x2, [x0, #2512]
   55aa4:	add	x0, x0, #0x9d0
   55aa8:	blr	x2
   55aac:	add	x2, x1, x0
   55ab0:	ldr	x0, [x1, x0]
   55ab4:	str	x0, [sp, #240]
   55ab8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55abc:	ldr	x3, [x0, #2544]
   55ac0:	add	x0, x0, #0x9f0
   55ac4:	blr	x3
   55ac8:	ldr	x3, [x1, x0]
   55acc:	str	x3, [sp, #144]
   55ad0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   55ad4:	str	x3, [x2]
   55ad8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   55adc:	str	x2, [x1, x0]
   55ae0:	add	x20, sp, #0x240
   55ae4:	mov	x1, #0x20                  	// #32
   55ae8:	mov	x0, x20
   55aec:	bl	ca80 <mpfr_init2@plt>
   55af0:	add	x19, sp, #0x220
   55af4:	mov	x1, #0x20                  	// #32
   55af8:	mov	x0, x19
   55afc:	bl	ca80 <mpfr_init2@plt>
   55b00:	ldr	w3, [x25, #8]
   55b04:	mov	w2, #0x0                   	// #0
   55b08:	mov	x1, x25
   55b0c:	mov	x0, x20
   55b10:	bl	c6a0 <mpfr_set4@plt>
   55b14:	mov	w3, #0x0                   	// #0
   55b18:	mov	x2, #0x0                   	// #0
   55b1c:	mov	x1, #0x51f                 	// #1311
   55b20:	mov	x0, x19
   55b24:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55b28:	mov	w3, #0x0                   	// #0
   55b2c:	ldr	x0, [sp, #104]
   55b30:	ldr	x2, [x0]
   55b34:	mov	x1, x19
   55b38:	mov	x0, x19
   55b3c:	bl	ba50 <mpfr_mul_ui@plt>
   55b40:	ldr	w0, [x25, #8]
   55b44:	tbnz	w0, #31, 5606c <mpfr_ai@@Base+0x624>
   55b48:	add	x0, sp, #0x240
   55b4c:	mov	w3, #0x0                   	// #0
   55b50:	mov	x2, #0x4ccd                	// #19661
   55b54:	mov	x1, x0
   55b58:	bl	ba50 <mpfr_mul_ui@plt>
   55b5c:	add	x20, sp, #0x220
   55b60:	add	x19, sp, #0x240
   55b64:	mov	w3, #0x0                   	// #0
   55b68:	mov	x2, x20
   55b6c:	mov	x1, x19
   55b70:	mov	x0, x19
   55b74:	bl	c1a0 <mpfr_add@plt>
   55b78:	mov	x0, x20
   55b7c:	bl	c070 <mpfr_clear@plt>
   55b80:	mov	x2, #0x0                   	// #0
   55b84:	mov	x1, #0x100000              	// #1048576
   55b88:	mov	x0, x19
   55b8c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   55b90:	mov	w20, w0
   55b94:	mov	x0, x19
   55b98:	bl	c070 <mpfr_clear@plt>
   55b9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55ba0:	ldr	x1, [x0, #2576]
   55ba4:	add	x0, x0, #0xa10
   55ba8:	blr	x1
   55bac:	mrs	x1, tpidr_el0
   55bb0:	ldr	w2, [sp, #140]
   55bb4:	str	w2, [x1, x0]
   55bb8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55bbc:	ldr	x2, [x0, #2544]
   55bc0:	add	x0, x0, #0x9f0
   55bc4:	blr	x2
   55bc8:	ldr	x2, [sp, #144]
   55bcc:	str	x2, [x1, x0]
   55bd0:	cmp	w20, #0x0
   55bd4:	b.le	5658c <mpfr_ai@@Base+0xb44>
   55bd8:	stp	x27, x28, [sp, #80]
   55bdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55be0:	ldr	x1, [x0, #2512]
   55be4:	add	x0, x0, #0x9d0
   55be8:	blr	x1
   55bec:	mrs	x1, tpidr_el0
   55bf0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   55bf4:	str	x2, [x1, x0]
   55bf8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   55bfc:	ldr	x2, [x0, #2544]
   55c00:	add	x0, x0, #0x9f0
   55c04:	blr	x2
   55c08:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   55c0c:	str	x2, [x1, x0]
   55c10:	ldr	x0, [sp, #104]
   55c14:	ldr	x19, [x0]
   55c18:	add	x0, x19, #0xb
   55c1c:	str	x0, [sp, #112]
   55c20:	add	x20, sp, #0x1a0
   55c24:	mov	x1, #0x20                  	// #32
   55c28:	mov	x0, x20
   55c2c:	bl	ca80 <mpfr_init2@plt>
   55c30:	add	x21, sp, #0x1c0
   55c34:	mov	x1, #0x20                  	// #32
   55c38:	mov	x0, x21
   55c3c:	bl	ca80 <mpfr_init2@plt>
   55c40:	mov	w3, #0x1                   	// #1
   55c44:	mov	w2, #0x2                   	// #2
   55c48:	mov	x1, x25
   55c4c:	mov	x0, x20
   55c50:	bl	c6a0 <mpfr_set4@plt>
   55c54:	mov	w3, #0x2                   	// #2
   55c58:	mov	x2, #0x3                   	// #3
   55c5c:	mov	x1, x20
   55c60:	mov	x0, x20
   55c64:	bl	bf70 <mpfr_pow_ui@plt>
   55c68:	mov	w2, #0x2                   	// #2
   55c6c:	mov	x1, x20
   55c70:	mov	x0, x20
   55c74:	bl	c930 <mpfr_sqrt@plt>
   55c78:	mov	w3, #0x2                   	// #2
   55c7c:	mov	w2, #0xa                   	// #10
   55c80:	adrp	x1, 67000 <mpfr_bases@@Base+0x1900>
   55c84:	add	x1, x1, #0x9e0
   55c88:	mov	x0, x21
   55c8c:	bl	c6c0 <mpfr_set_str@plt>
   55c90:	mov	w3, #0x2                   	// #2
   55c94:	mov	x2, x21
   55c98:	mov	x1, x20
   55c9c:	mov	x0, x21
   55ca0:	bl	bd50 <mpfr_mul@plt>
   55ca4:	ldr	x0, [x25, #16]
   55ca8:	str	xzr, [sp, #208]
   55cac:	cmp	x0, #0x0
   55cb0:	b.gt	56084 <mpfr_ai@@Base+0x63c>
   55cb4:	ldr	x0, [sp, #208]
   55cb8:	add	x22, x0, #0x6
   55cbc:	ldr	x20, [x25, #16]
   55cc0:	mov	x0, #0x2                   	// #2
   55cc4:	str	x0, [sp, #224]
   55cc8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55ccc:	cmp	x20, x0
   55cd0:	b.eq	55cf8 <mpfr_ai@@Base+0x2b0>  // b.none
   55cd4:	ldr	w0, [x25, #8]
   55cd8:	mov	x1, #0xa                   	// #10
   55cdc:	str	x1, [sp, #224]
   55ce0:	cmp	w0, #0x0
   55ce4:	b.le	55cf8 <mpfr_ai@@Base+0x2b0>
   55ce8:	mov	x0, #0x3                   	// #3
   55cec:	str	x0, [sp, #224]
   55cf0:	cmp	x20, #0x0
   55cf4:	b.gt	560b0 <mpfr_ai@@Base+0x668>
   55cf8:	ldr	x0, [sp, #112]
   55cfc:	cmp	x0, #0x1
   55d00:	b.eq	560f4 <mpfr_ai@@Base+0x6ac>  // b.none
   55d04:	b.le	560dc <mpfr_ai@@Base+0x694>
   55d08:	add	x19, x19, #0xa
   55d0c:	clz	x19, x19
   55d10:	mov	w23, #0x40                  	// #64
   55d14:	sub	w23, w23, w19
   55d18:	sxtw	x23, w23
   55d1c:	ldr	x0, [sp, #112]
   55d20:	add	x23, x0, x23
   55d24:	ldr	x1, [sp, #224]
   55d28:	add	x23, x23, x1
   55d2c:	add	x1, x23, x22
   55d30:	str	x1, [sp, #128]
   55d34:	bl	bf20 <__gmpfr_isqrt@plt>
   55d38:	mov	x22, x0
   55d3c:	add	x19, x0, #0x1
   55d40:	lsl	x19, x19, #5
   55d44:	mov	x0, x19
   55d48:	bl	ccf0 <mpfr_allocate_func@plt>
   55d4c:	mov	x26, x0
   55d50:	cbz	x0, 560fc <mpfr_ai@@Base+0x6b4>
   55d54:	mov	x20, x0
   55d58:	sub	x19, x19, #0x20
   55d5c:	add	x19, x19, x0
   55d60:	mov	x0, x20
   55d64:	bl	bbd0 <mpfr_init@plt>
   55d68:	cmp	x19, x20
   55d6c:	add	x20, x20, #0x20
   55d70:	b.ne	55d60 <mpfr_ai@@Base+0x318>  // b.any
   55d74:	add	x0, sp, #0x120
   55d78:	bl	bbd0 <mpfr_init@plt>
   55d7c:	add	x0, sp, #0x140
   55d80:	bl	bbd0 <mpfr_init@plt>
   55d84:	add	x0, sp, #0x160
   55d88:	bl	bbd0 <mpfr_init@plt>
   55d8c:	add	x0, sp, #0x180
   55d90:	bl	bbd0 <mpfr_init@plt>
   55d94:	add	x0, sp, #0x1e0
   55d98:	bl	bbd0 <mpfr_init@plt>
   55d9c:	add	x0, sp, #0x200
   55da0:	bl	bbd0 <mpfr_init@plt>
   55da4:	mov	x0, #0x40                  	// #64
   55da8:	str	x0, [sp, #280]
   55dac:	add	x24, sp, #0x120
   55db0:	add	x23, sp, #0x140
   55db4:	add	x28, sp, #0x160
   55db8:	add	x0, sp, #0x180
   55dbc:	str	x0, [sp, #232]
   55dc0:	str	x25, [sp, #192]
   55dc4:	str	x26, [sp, #272]
   55dc8:	lsl	x0, x22, #5
   55dcc:	str	x0, [sp, #216]
   55dd0:	add	x0, x26, x0
   55dd4:	str	x0, [sp, #200]
   55dd8:	mov	x19, x26
   55ddc:	ldr	x1, [sp, #128]
   55de0:	mov	x0, x19
   55de4:	bl	bed0 <mpfr_set_prec@plt>
   55de8:	ldr	x1, [sp, #200]
   55dec:	cmp	x1, x19
   55df0:	add	x19, x19, #0x20
   55df4:	b.ne	55ddc <mpfr_ai@@Base+0x394>  // b.any
   55df8:	ldr	x19, [sp, #128]
   55dfc:	mov	x1, x19
   55e00:	mov	x0, x24
   55e04:	bl	bed0 <mpfr_set_prec@plt>
   55e08:	mov	x1, x19
   55e0c:	mov	x0, x23
   55e10:	bl	bed0 <mpfr_set_prec@plt>
   55e14:	mov	x1, x19
   55e18:	mov	x0, x28
   55e1c:	bl	bed0 <mpfr_set_prec@plt>
   55e20:	mov	x1, x19
   55e24:	ldr	x0, [sp, #232]
   55e28:	bl	bed0 <mpfr_set_prec@plt>
   55e2c:	mov	w3, #0x0                   	// #0
   55e30:	mov	x2, #0x0                   	// #0
   55e34:	mov	x1, #0x1                   	// #1
   55e38:	mov	x0, x23
   55e3c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55e40:	ldr	x19, [sp, #192]
   55e44:	mov	x1, x19
   55e48:	ldr	w3, [x19, #8]
   55e4c:	mov	w2, #0x0                   	// #0
   55e50:	mov	x0, x28
   55e54:	bl	c6a0 <mpfr_set4@plt>
   55e58:	mov	w3, #0x2                   	// #2
   55e5c:	mov	x2, #0x0                   	// #0
   55e60:	mov	x1, #0x1                   	// #1
   55e64:	mov	x0, x26
   55e68:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55e6c:	add	x21, x26, #0x20
   55e70:	mov	w2, #0x2                   	// #2
   55e74:	mov	x1, x28
   55e78:	mov	x0, x21
   55e7c:	bl	c400 <mpfr_sqr@plt>
   55e80:	ldr	w0, [x19, #8]
   55e84:	cmp	w0, #0x0
   55e88:	cset	w3, le
   55e8c:	add	w3, w3, #0x2
   55e90:	mov	x2, x19
   55e94:	mov	x1, x21
   55e98:	mov	x0, x21
   55e9c:	bl	bd50 <mpfr_mul@plt>
   55ea0:	ldr	w0, [x19, #8]
   55ea4:	tbnz	w0, #31, 56114 <mpfr_ai@@Base+0x6cc>
   55ea8:	mov	w1, #0x2                   	// #2
   55eac:	mov	x0, x21
   55eb0:	bl	bca0 <mpfr_get_ui@plt>
   55eb4:	str	x0, [sp, #248]
   55eb8:	ldr	x0, [sp, #192]
   55ebc:	ldr	w0, [x0, #8]
   55ec0:	tbnz	w0, #31, 56124 <mpfr_ai@@Base+0x6dc>
   55ec4:	add	x20, x26, #0x40
   55ec8:	mov	x19, #0x2                   	// #2
   55ecc:	cmp	x22, #0x1
   55ed0:	b.hi	5615c <mpfr_ai@@Base+0x714>  // b.pmore
   55ed4:	add	x20, sp, #0x200
   55ed8:	add	x19, sp, #0x1e0
   55edc:	ldr	x2, [sp, #128]
   55ee0:	mov	x1, x20
   55ee4:	mov	x0, x19
   55ee8:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   55eec:	mov	w3, #0x0                   	// #0
   55ef0:	mov	x2, #0x0                   	// #0
   55ef4:	mov	x1, #0x9                   	// #9
   55ef8:	mov	x0, x23
   55efc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55f00:	mov	w2, #0x0                   	// #0
   55f04:	mov	x1, x23
   55f08:	mov	x0, x23
   55f0c:	bl	cd20 <mpfr_cbrt@plt>
   55f10:	mov	w3, #0x0                   	// #0
   55f14:	mov	x2, x20
   55f18:	mov	x1, x23
   55f1c:	mov	x0, x23
   55f20:	bl	bd50 <mpfr_mul@plt>
   55f24:	mov	w3, #0x0                   	// #0
   55f28:	mov	x2, x23
   55f2c:	mov	x1, #0x1                   	// #1
   55f30:	mov	x0, x23
   55f34:	bl	c2f0 <mpfr_ui_div@plt>
   55f38:	mov	w3, #0x0                   	// #0
   55f3c:	mov	x2, #0x0                   	// #0
   55f40:	mov	x1, #0x3                   	// #3
   55f44:	mov	x0, x28
   55f48:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55f4c:	mov	w2, #0x0                   	// #0
   55f50:	mov	x1, x28
   55f54:	mov	x0, x28
   55f58:	bl	cd20 <mpfr_cbrt@plt>
   55f5c:	mov	w3, #0x0                   	// #0
   55f60:	mov	x2, x19
   55f64:	mov	x1, x28
   55f68:	mov	x0, x28
   55f6c:	bl	bd50 <mpfr_mul@plt>
   55f70:	mov	w2, #0x0                   	// #0
   55f74:	mov	x1, x28
   55f78:	mov	x0, x28
   55f7c:	bl	bd70 <mpfr_neg@plt>
   55f80:	mov	w3, #0x0                   	// #0
   55f84:	mov	x2, x28
   55f88:	ldr	x1, [sp, #192]
   55f8c:	mov	x0, x28
   55f90:	bl	c620 <mpfr_div@plt>
   55f94:	mov	w0, #0x1                   	// #1
   55f98:	str	w0, [sp, #392]
   55f9c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55fa0:	str	x0, [sp, #400]
   55fa4:	add	x1, x22, x22, lsl #1
   55fa8:	str	x1, [sp, #160]
   55fac:	sub	x0, x1, #0x3
   55fb0:	str	x0, [sp, #176]
   55fb4:	ldr	x0, [sp, #216]
   55fb8:	sub	x27, x0, #0x20
   55fbc:	add	x27, x26, x27
   55fc0:	add	x0, x26, x0
   55fc4:	str	x0, [sp, #168]
   55fc8:	sub	x0, x22, #0x2
   55fcc:	add	x0, x26, x0, lsl #5
   55fd0:	str	x0, [sp, #152]
   55fd4:	sub	x0, x22, x22, lsl #2
   55fd8:	str	x0, [sp, #184]
   55fdc:	mov	x19, #0x0                   	// #0
   55fe0:	str	xzr, [sp, #120]
   55fe4:	mov	x0, #0x3                   	// #3
   55fe8:	sub	x0, x0, x1
   55fec:	str	x0, [sp, #256]
   55ff0:	str	x26, [sp, #264]
   55ff4:	ldr	x26, [sp, #232]
   55ff8:	b	56df4 <mpfr_ai@@Base+0x13ac>
   55ffc:	mov	x1, #0x2                   	// #2
   56000:	movk	x1, #0x8000, lsl #48
   56004:	cmp	x0, x1
   56008:	b.eq	56034 <mpfr_ai@@Base+0x5ec>  // b.none
   5600c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   56010:	cmp	x0, x1
   56014:	b.ne	55a78 <mpfr_ai@@Base+0x30>  // b.any
   56018:	mov	w0, #0x1                   	// #1
   5601c:	ldr	x1, [sp, #104]
   56020:	str	w0, [x1, #8]
   56024:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   56028:	str	x0, [x1, #16]
   5602c:	mov	w19, #0x0                   	// #0
   56030:	b	57254 <mpfr_ai@@Base+0x180c>
   56034:	mov	x0, x1
   56038:	ldr	x1, [sp, #104]
   5603c:	str	x0, [x1, #16]
   56040:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56044:	ldr	x1, [x0, #2576]
   56048:	add	x0, x0, #0xa10
   5604c:	blr	x1
   56050:	mrs	x1, tpidr_el0
   56054:	add	x0, x1, x0
   56058:	ldr	w1, [x0]
   5605c:	orr	w1, w1, #0x4
   56060:	str	w1, [x0]
   56064:	mov	w19, #0x0                   	// #0
   56068:	b	57254 <mpfr_ai@@Base+0x180c>
   5606c:	add	x0, sp, #0x240
   56070:	mov	w3, #0x0                   	// #0
   56074:	mov	x2, #0xffffffffffffcccd    	// #-13107
   56078:	mov	x1, x0
   5607c:	bl	c960 <mpfr_mul_si@plt>
   56080:	b	55b5c <mpfr_ai@@Base+0x114>
   56084:	mov	w1, #0x2                   	// #2
   56088:	add	x0, sp, #0x1c0
   5608c:	bl	bca0 <mpfr_get_ui@plt>
   56090:	ldr	x2, [x25, #16]
   56094:	add	x1, x2, #0x2
   56098:	subs	x2, x2, #0x1
   5609c:	csel	x1, x1, x2, mi  // mi = first
   560a0:	mvn	x1, x1, asr #2
   560a4:	add	x0, x1, x0
   560a8:	str	x0, [sp, #208]
   560ac:	b	55cb4 <mpfr_ai@@Base+0x26c>
   560b0:	mov	w1, #0x2                   	// #2
   560b4:	add	x0, sp, #0x1c0
   560b8:	bl	bca0 <mpfr_get_ui@plt>
   560bc:	add	x1, x20, #0x3
   560c0:	cmp	x20, #0x0
   560c4:	csel	x1, x1, x20, lt  // lt = tstop
   560c8:	asr	x1, x1, #2
   560cc:	add	x1, x1, #0x3
   560d0:	add	x0, x1, x0
   560d4:	str	x0, [sp, #224]
   560d8:	b	55cf8 <mpfr_ai@@Base+0x2b0>
   560dc:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   560e0:	add	x2, x2, #0xd58
   560e4:	mov	w1, #0x182                 	// #386
   560e8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   560ec:	add	x0, x0, #0x9f8
   560f0:	bl	cb40 <mpfr_assert_fail@plt>
   560f4:	mov	x23, #0x0                   	// #0
   560f8:	b	55d1c <mpfr_ai@@Base+0x2d4>
   560fc:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56100:	add	x2, x2, #0xa00
   56104:	mov	w1, #0x189                 	// #393
   56108:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5610c:	add	x0, x0, #0x9f8
   56110:	bl	cb40 <mpfr_assert_fail@plt>
   56114:	ldr	w0, [x21, #8]
   56118:	neg	w0, w0
   5611c:	str	w0, [x21, #8]
   56120:	b	55ea8 <mpfr_ai@@Base+0x460>
   56124:	ldr	w0, [x26, #40]
   56128:	neg	w0, w0
   5612c:	str	w0, [x26, #40]
   56130:	b	55ec4 <mpfr_ai@@Base+0x47c>
   56134:	lsr	x1, x19, #1
   56138:	mov	w2, #0x0                   	// #0
   5613c:	add	x1, x26, x1, lsl #5
   56140:	mov	x0, x20
   56144:	bl	c400 <mpfr_sqr@plt>
   56148:	add	x0, x19, #0x1
   5614c:	add	x20, x20, #0x20
   56150:	cmp	x22, x19
   56154:	b.eq	55ed4 <mpfr_ai@@Base+0x48c>  // b.none
   56158:	mov	x19, x0
   5615c:	tbz	w19, #0, 56134 <mpfr_ai@@Base+0x6ec>
   56160:	mov	w3, #0x0                   	// #0
   56164:	mov	x2, x21
   56168:	sub	x1, x20, #0x20
   5616c:	mov	x0, x20
   56170:	bl	bd50 <mpfr_mul@plt>
   56174:	b	56148 <mpfr_ai@@Base+0x700>
   56178:	add	x0, x20, #0x4
   5617c:	add	x1, x20, #0x5
   56180:	mul	x0, x0, x1
   56184:	ldr	x1, [sp, #248]
   56188:	cmp	x1, x0, lsr #1
   5618c:	b.hi	56de8 <mpfr_ai@@Base+0x13a0>  // b.pmore
   56190:	ldr	x26, [sp, #264]
   56194:	str	x19, [sp, #152]
   56198:	clz	x0, x22
   5619c:	mov	w19, #0x45                  	// #69
   561a0:	sub	w19, w19, w0
   561a4:	cmp	x22, #0x0
   561a8:	mov	w0, #0x5                   	// #5
   561ac:	csel	w19, w19, w0, ne  // ne = any
   561b0:	ldr	x0, [sp, #120]
   561b4:	cbz	x0, 56384 <mpfr_ai@@Base+0x93c>
   561b8:	add	x0, x0, #0x1
   561bc:	cmp	x0, #0x1
   561c0:	b.ls	5636c <mpfr_ai@@Base+0x924>  // b.plast
   561c4:	ldr	x0, [sp, #120]
   561c8:	clz	x0, x0
   561cc:	mov	w1, #0x40                  	// #64
   561d0:	sub	w0, w1, w0
   561d4:	ldr	x1, [sp, #400]
   561d8:	add	w19, w19, w0
   561dc:	ldr	x0, [sp, #208]
   561e0:	sub	x0, x0, x1
   561e4:	add	x19, x0, w19, sxtw
   561e8:	mov	x25, #0x0                   	// #0
   561ec:	ldr	x2, [sp, #128]
   561f0:	cmp	x2, x19
   561f4:	b.le	56210 <mpfr_ai@@Base+0x7c8>
   561f8:	ldr	x3, [sp, #112]
   561fc:	add	x0, x3, x19
   56200:	sub	x25, x2, x19
   56204:	sub	x25, x25, #0x1
   56208:	cmp	x2, x0
   5620c:	csel	x25, x25, x3, le
   56210:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   56214:	cmp	x1, x0
   56218:	b.le	56398 <mpfr_ai@@Base+0x950>
   5621c:	ldr	w0, [sp, #136]
   56220:	cmp	w0, #0x0
   56224:	ldr	x0, [sp, #104]
   56228:	ldr	x3, [x0]
   5622c:	cinc	x3, x3, eq  // eq = none
   56230:	ldr	x0, [sp, #384]
   56234:	add	x1, x0, #0x3e
   56238:	subs	x0, x0, #0x1
   5623c:	csel	x1, x1, x0, mi  // mi = first
   56240:	asr	x1, x1, #6
   56244:	mov	x2, x25
   56248:	add	x1, x1, #0x1
   5624c:	ldr	x0, [sp, #408]
   56250:	bl	c370 <mpfr_round_p@plt>
   56254:	cbz	w0, 5638c <mpfr_ai@@Base+0x944>
   56258:	ldr	w3, [sp, #392]
   5625c:	ldr	w2, [sp, #136]
   56260:	add	x1, sp, #0x180
   56264:	ldr	x0, [sp, #104]
   56268:	bl	c6a0 <mpfr_set4@plt>
   5626c:	mov	w19, w0
   56270:	add	x0, sp, #0x1a0
   56274:	bl	c070 <mpfr_clear@plt>
   56278:	add	x0, sp, #0x1c0
   5627c:	bl	c070 <mpfr_clear@plt>
   56280:	ldr	x20, [sp, #272]
   56284:	ldr	x21, [sp, #200]
   56288:	mov	x0, x20
   5628c:	bl	c070 <mpfr_clear@plt>
   56290:	cmp	x20, x21
   56294:	add	x20, x20, #0x20
   56298:	b.ne	56288 <mpfr_ai@@Base+0x840>  // b.any
   5629c:	ldr	x0, [sp, #216]
   562a0:	add	x1, x0, #0x20
   562a4:	mov	x0, x26
   562a8:	bl	cc20 <mpfr_free_func@plt>
   562ac:	add	x0, sp, #0x120
   562b0:	bl	c070 <mpfr_clear@plt>
   562b4:	add	x0, sp, #0x140
   562b8:	bl	c070 <mpfr_clear@plt>
   562bc:	add	x0, sp, #0x160
   562c0:	bl	c070 <mpfr_clear@plt>
   562c4:	add	x0, sp, #0x180
   562c8:	bl	c070 <mpfr_clear@plt>
   562cc:	add	x0, sp, #0x1e0
   562d0:	bl	c070 <mpfr_clear@plt>
   562d4:	add	x0, sp, #0x200
   562d8:	bl	c070 <mpfr_clear@plt>
   562dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   562e0:	ldr	x1, [x0, #2576]
   562e4:	add	x0, x0, #0xa10
   562e8:	blr	x1
   562ec:	mrs	x1, tpidr_el0
   562f0:	ldr	w4, [sp, #140]
   562f4:	str	w4, [x1, x0]
   562f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   562fc:	ldr	x2, [x0, #2512]
   56300:	add	x0, x0, #0x9d0
   56304:	blr	x2
   56308:	ldr	x2, [sp, #240]
   5630c:	str	x2, [x1, x0]
   56310:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56314:	ldr	x3, [x0, #2544]
   56318:	add	x0, x0, #0x9f0
   5631c:	blr	x3
   56320:	ldr	x3, [sp, #144]
   56324:	str	x3, [x1, x0]
   56328:	ldr	x0, [sp, #104]
   5632c:	ldr	x0, [x0, #16]
   56330:	cmp	x3, x0
   56334:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   56338:	b.gt	56568 <mpfr_ai@@Base+0xb20>
   5633c:	cbz	w19, 57248 <mpfr_ai@@Base+0x1800>
   56340:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56344:	ldr	x1, [x0, #2576]
   56348:	add	x0, x0, #0xa10
   5634c:	blr	x1
   56350:	orr	w2, w4, #0x8
   56354:	mrs	x1, tpidr_el0
   56358:	str	w2, [x1, x0]
   5635c:	ldp	x21, x22, [sp, #32]
   56360:	ldp	x23, x24, [sp, #48]
   56364:	ldp	x27, x28, [sp, #80]
   56368:	b	57254 <mpfr_ai@@Base+0x180c>
   5636c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56370:	add	x2, x2, #0xa18
   56374:	mov	w1, #0x206                 	// #518
   56378:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5637c:	add	x0, x0, #0x9f8
   56380:	bl	cb40 <mpfr_assert_fail@plt>
   56384:	mov	w0, #0x0                   	// #0
   56388:	b	561d4 <mpfr_ai@@Base+0x78c>
   5638c:	ldr	x21, [sp, #272]
   56390:	ldr	x22, [sp, #200]
   56394:	b	563a0 <mpfr_ai@@Base+0x958>
   56398:	ldr	x21, [sp, #272]
   5639c:	ldr	x22, [sp, #200]
   563a0:	mov	x0, x21
   563a4:	bl	c070 <mpfr_clear@plt>
   563a8:	cmp	x22, x21
   563ac:	add	x21, x21, #0x20
   563b0:	b.ne	563a0 <mpfr_ai@@Base+0x958>  // b.any
   563b4:	ldr	x0, [sp, #216]
   563b8:	add	x1, x0, #0x20
   563bc:	mov	x0, x26
   563c0:	bl	cc20 <mpfr_free_func@plt>
   563c4:	ldr	x0, [sp, #152]
   563c8:	bl	bf20 <__gmpfr_isqrt@plt>
   563cc:	mov	x22, x0
   563d0:	add	x27, x0, #0x1
   563d4:	lsl	x27, x27, #5
   563d8:	mov	x0, x27
   563dc:	bl	ccf0 <mpfr_allocate_func@plt>
   563e0:	mov	x26, x0
   563e4:	cbz	x0, 56460 <mpfr_ai@@Base+0xa18>
   563e8:	mov	x21, x0
   563ec:	sub	x27, x27, #0x20
   563f0:	add	x27, x27, x0
   563f4:	mov	x0, x21
   563f8:	bl	bbd0 <mpfr_init@plt>
   563fc:	cmp	x21, x27
   56400:	add	x21, x21, #0x20
   56404:	b.ne	563f4 <mpfr_ai@@Base+0x9ac>  // b.any
   56408:	cbnz	x25, 56490 <mpfr_ai@@Base+0xa48>
   5640c:	ldr	x0, [sp, #224]
   56410:	lsl	x0, x0, #1
   56414:	str	x0, [sp, #224]
   56418:	ldr	x0, [sp, #112]
   5641c:	add	x0, x0, #0x6
   56420:	ldr	x1, [sp, #152]
   56424:	cmp	x1, #0x1
   56428:	b.eq	56444 <mpfr_ai@@Base+0x9fc>  // b.none
   5642c:	b.ls	56478 <mpfr_ai@@Base+0xa30>  // b.plast
   56430:	add	x20, x20, #0x1
   56434:	clz	x20, x20
   56438:	mov	w25, #0x40                  	// #64
   5643c:	sub	w25, w25, w20
   56440:	sxtw	x25, w25
   56444:	ldr	x1, [sp, #208]
   56448:	ldr	x2, [sp, #224]
   5644c:	add	x19, x1, x2
   56450:	add	x25, x0, x25
   56454:	add	x0, x19, x25
   56458:	str	x0, [sp, #128]
   5645c:	b	55dc4 <mpfr_ai@@Base+0x37c>
   56460:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56464:	add	x2, x2, #0xa00
   56468:	mov	w1, #0x222                 	// #546
   5646c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56470:	add	x0, x0, #0x9f8
   56474:	bl	cb40 <mpfr_assert_fail@plt>
   56478:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5647c:	add	x2, x2, #0xa28
   56480:	mov	w1, #0x22b                 	// #555
   56484:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56488:	add	x0, x0, #0x9f8
   5648c:	bl	cb40 <mpfr_assert_fail@plt>
   56490:	ldr	x0, [sp, #112]
   56494:	cmp	x0, x25
   56498:	b.le	564ac <mpfr_ai@@Base+0xa64>
   5649c:	add	x19, x0, x19
   564a0:	add	x0, x19, #0x1
   564a4:	str	x0, [sp, #128]
   564a8:	b	55dc4 <mpfr_ai@@Base+0x37c>
   564ac:	mov	x0, #0xfffffffffffffeff    	// #-257
   564b0:	movk	x0, #0x7fff, lsl #48
   564b4:	ldr	x1, [sp, #112]
   564b8:	sub	x0, x0, x1
   564bc:	ldr	x1, [sp, #280]
   564c0:	cmp	x0, x1
   564c4:	b.lt	56530 <mpfr_ai@@Base+0xae8>  // b.tstop
   564c8:	ldr	x0, [sp, #112]
   564cc:	ldr	x1, [sp, #280]
   564d0:	add	x0, x0, x1
   564d4:	str	x0, [sp, #112]
   564d8:	add	x0, x0, x0, lsr #63
   564dc:	asr	x0, x0, #1
   564e0:	str	x0, [sp, #280]
   564e4:	ldr	x0, [sp, #152]
   564e8:	cmp	x0, #0x1
   564ec:	b.eq	56560 <mpfr_ai@@Base+0xb18>  // b.none
   564f0:	b.ls	56548 <mpfr_ai@@Base+0xb00>  // b.plast
   564f4:	add	x0, x20, #0x1
   564f8:	clz	x0, x0
   564fc:	mov	w19, #0x42                  	// #66
   56500:	sub	w19, w19, w0
   56504:	sxtw	x19, w19
   56508:	mov	x25, #0x6                   	// #6
   5650c:	ldr	x0, [sp, #400]
   56510:	sub	x25, x25, x0
   56514:	ldr	x0, [sp, #112]
   56518:	add	x19, x0, x19
   5651c:	ldr	x0, [sp, #208]
   56520:	add	x19, x19, x0
   56524:	add	x0, x25, x19
   56528:	str	x0, [sp, #128]
   5652c:	b	55dc4 <mpfr_ai@@Base+0x37c>
   56530:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   56534:	add	x2, x2, #0xd68
   56538:	mov	w1, #0x238                 	// #568
   5653c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56540:	add	x0, x0, #0x9f8
   56544:	bl	cb40 <mpfr_assert_fail@plt>
   56548:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5654c:	add	x2, x2, #0xa28
   56550:	mov	w1, #0x23c                 	// #572
   56554:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56558:	add	x0, x0, #0x9f8
   5655c:	bl	cb40 <mpfr_assert_fail@plt>
   56560:	mov	x19, #0x2                   	// #2
   56564:	b	56508 <mpfr_ai@@Base+0xac0>
   56568:	ldr	w2, [sp, #136]
   5656c:	mov	w1, w19
   56570:	ldr	x0, [sp, #104]
   56574:	bl	cb30 <mpfr_check_range@plt>
   56578:	mov	w19, w0
   5657c:	ldp	x21, x22, [sp, #32]
   56580:	ldp	x23, x24, [sp, #48]
   56584:	ldp	x27, x28, [sp, #80]
   56588:	b	57254 <mpfr_ai@@Base+0x180c>
   5658c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56590:	ldr	x1, [x0, #2512]
   56594:	add	x0, x0, #0x9d0
   56598:	blr	x1
   5659c:	mrs	x1, tpidr_el0
   565a0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   565a4:	str	x2, [x1, x0]
   565a8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   565ac:	ldr	x2, [x0, #2544]
   565b0:	add	x0, x0, #0x9f0
   565b4:	blr	x2
   565b8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   565bc:	str	x2, [x1, x0]
   565c0:	ldr	x1, [x25, #16]
   565c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   565c8:	cmp	x1, x0
   565cc:	b.eq	568bc <mpfr_ai@@Base+0xe74>  // b.none
   565d0:	stp	x27, x28, [sp, #80]
   565d4:	ldr	x0, [sp, #104]
   565d8:	ldr	x1, [x0]
   565dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   565e0:	movk	x0, #0x7fff, lsl #48
   565e4:	sub	x0, x0, x1
   565e8:	cmp	x0, #0xa
   565ec:	b.le	56b10 <mpfr_ai@@Base+0x10c8>
   565f0:	ldr	x0, [sp, #104]
   565f4:	ldr	x19, [x0]
   565f8:	add	x28, x19, #0xb
   565fc:	add	x20, sp, #0x1a0
   56600:	mov	x1, #0x20                  	// #32
   56604:	mov	x0, x20
   56608:	bl	ca80 <mpfr_init2@plt>
   5660c:	add	x21, sp, #0x1c0
   56610:	mov	x1, #0x20                  	// #32
   56614:	mov	x0, x21
   56618:	bl	ca80 <mpfr_init2@plt>
   5661c:	mov	w3, #0x1                   	// #1
   56620:	mov	w2, #0x2                   	// #2
   56624:	mov	x1, x25
   56628:	mov	x0, x20
   5662c:	bl	c6a0 <mpfr_set4@plt>
   56630:	mov	w3, #0x2                   	// #2
   56634:	mov	x2, #0x3                   	// #3
   56638:	mov	x1, x20
   5663c:	mov	x0, x20
   56640:	bl	bf70 <mpfr_pow_ui@plt>
   56644:	mov	w2, #0x2                   	// #2
   56648:	mov	x1, x20
   5664c:	mov	x0, x20
   56650:	bl	c930 <mpfr_sqrt@plt>
   56654:	mov	w3, #0x2                   	// #2
   56658:	mov	w2, #0xa                   	// #10
   5665c:	adrp	x1, 67000 <mpfr_bases@@Base+0x1900>
   56660:	add	x1, x1, #0x9e0
   56664:	mov	x0, x21
   56668:	bl	c6c0 <mpfr_set_str@plt>
   5666c:	mov	w3, #0x2                   	// #2
   56670:	mov	x2, x21
   56674:	mov	x1, x20
   56678:	mov	x0, x21
   5667c:	bl	bd50 <mpfr_mul@plt>
   56680:	ldr	x0, [x25, #16]
   56684:	str	xzr, [sp, #128]
   56688:	cmp	x0, #0x0
   5668c:	b.gt	56b2c <mpfr_ai@@Base+0x10e4>
   56690:	ldr	x20, [x25, #16]
   56694:	mov	x0, #0x2                   	// #2
   56698:	str	x0, [sp, #152]
   5669c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   566a0:	cmp	x20, x0
   566a4:	b.eq	566cc <mpfr_ai@@Base+0xc84>  // b.none
   566a8:	ldr	w0, [x25, #8]
   566ac:	mov	x1, #0xa                   	// #10
   566b0:	str	x1, [sp, #152]
   566b4:	cmp	w0, #0x0
   566b8:	b.le	566cc <mpfr_ai@@Base+0xc84>
   566bc:	mov	x0, #0x3                   	// #3
   566c0:	str	x0, [sp, #152]
   566c4:	cmp	x20, #0x0
   566c8:	b.gt	56b58 <mpfr_ai@@Base+0x1110>
   566cc:	cmp	x28, #0x1
   566d0:	b.eq	56b9c <mpfr_ai@@Base+0x1154>  // b.none
   566d4:	b.le	56b84 <mpfr_ai@@Base+0x113c>
   566d8:	add	x19, x19, #0xa
   566dc:	clz	x19, x19
   566e0:	mov	w22, #0x45                  	// #69
   566e4:	sub	w19, w22, w19
   566e8:	sxtw	x19, w19
   566ec:	ldr	x0, [sp, #128]
   566f0:	ldr	x1, [sp, #152]
   566f4:	add	x22, x0, x1
   566f8:	add	x19, x22, x19
   566fc:	mov	x0, #0xfffffffffffffeff    	// #-257
   56700:	movk	x0, #0x7fff, lsl #48
   56704:	sub	x0, x0, x28
   56708:	cmp	x19, x0
   5670c:	b.gt	56ba4 <mpfr_ai@@Base+0x115c>
   56710:	add	x22, x28, x19
   56714:	add	x0, sp, #0x140
   56718:	bl	bbd0 <mpfr_init@plt>
   5671c:	add	x0, sp, #0x160
   56720:	bl	bbd0 <mpfr_init@plt>
   56724:	add	x0, sp, #0x1e0
   56728:	bl	bbd0 <mpfr_init@plt>
   5672c:	add	x0, sp, #0x200
   56730:	bl	bbd0 <mpfr_init@plt>
   56734:	add	x0, sp, #0x180
   56738:	bl	bbd0 <mpfr_init@plt>
   5673c:	add	x0, sp, #0x120
   56740:	bl	bbd0 <mpfr_init@plt>
   56744:	mov	x0, #0x40                  	// #64
   56748:	str	x0, [sp, #160]
   5674c:	add	x20, sp, #0x140
   56750:	add	x19, sp, #0x160
   56754:	add	x24, sp, #0x180
   56758:	add	x23, sp, #0x120
   5675c:	mov	x1, x22
   56760:	mov	x0, x20
   56764:	bl	bed0 <mpfr_set_prec@plt>
   56768:	mov	x1, x22
   5676c:	mov	x0, x19
   56770:	bl	bed0 <mpfr_set_prec@plt>
   56774:	mov	x1, x22
   56778:	mov	x0, x24
   5677c:	bl	bed0 <mpfr_set_prec@plt>
   56780:	mov	x1, x22
   56784:	mov	x0, x23
   56788:	bl	bed0 <mpfr_set_prec@plt>
   5678c:	mov	w2, #0x2                   	// #2
   56790:	mov	x1, x25
   56794:	mov	x0, x24
   56798:	bl	c400 <mpfr_sqr@plt>
   5679c:	ldr	w0, [x25, #8]
   567a0:	cmp	w0, #0x0
   567a4:	cset	w3, le
   567a8:	add	w3, w3, #0x2
   567ac:	mov	x2, x25
   567b0:	mov	x1, x24
   567b4:	mov	x0, x24
   567b8:	bl	bd50 <mpfr_mul@plt>
   567bc:	ldr	w0, [x25, #8]
   567c0:	tbnz	w0, #31, 56bbc <mpfr_ai@@Base+0x1174>
   567c4:	mov	w1, #0x2                   	// #2
   567c8:	mov	x0, x24
   567cc:	bl	bca0 <mpfr_get_ui@plt>
   567d0:	str	x0, [sp, #120]
   567d4:	ldr	w0, [x25, #8]
   567d8:	tbnz	w0, #31, 56bcc <mpfr_ai@@Base+0x1184>
   567dc:	add	x26, sp, #0x200
   567e0:	add	x21, sp, #0x1e0
   567e4:	mov	x2, x22
   567e8:	mov	x1, x26
   567ec:	mov	x0, x21
   567f0:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   567f4:	mov	w3, #0x0                   	// #0
   567f8:	mov	x2, #0x0                   	// #0
   567fc:	mov	x1, #0x9                   	// #9
   56800:	mov	x0, x20
   56804:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   56808:	mov	w2, #0x0                   	// #0
   5680c:	mov	x1, x20
   56810:	mov	x0, x20
   56814:	bl	cd20 <mpfr_cbrt@plt>
   56818:	mov	w3, #0x0                   	// #0
   5681c:	mov	x2, x26
   56820:	mov	x1, x20
   56824:	mov	x0, x20
   56828:	bl	bd50 <mpfr_mul@plt>
   5682c:	mov	w3, #0x0                   	// #0
   56830:	mov	x2, x20
   56834:	mov	x1, #0x1                   	// #1
   56838:	mov	x0, x20
   5683c:	bl	c2f0 <mpfr_ui_div@plt>
   56840:	mov	w3, #0x0                   	// #0
   56844:	mov	x2, #0x0                   	// #0
   56848:	mov	x1, #0x3                   	// #3
   5684c:	mov	x0, x19
   56850:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   56854:	mov	w2, #0x0                   	// #0
   56858:	mov	x1, x19
   5685c:	mov	x0, x19
   56860:	bl	cd20 <mpfr_cbrt@plt>
   56864:	mov	w3, #0x0                   	// #0
   56868:	mov	x2, x21
   5686c:	mov	x1, x19
   56870:	mov	x0, x19
   56874:	bl	bd50 <mpfr_mul@plt>
   56878:	mov	w2, #0x0                   	// #0
   5687c:	mov	x1, x19
   56880:	mov	x0, x19
   56884:	bl	bd70 <mpfr_neg@plt>
   56888:	mov	w3, #0x0                   	// #0
   5688c:	mov	x2, x19
   56890:	mov	x1, x25
   56894:	mov	x0, x19
   56898:	bl	c620 <mpfr_div@plt>
   5689c:	mov	w3, #0x0                   	// #0
   568a0:	mov	x2, x19
   568a4:	mov	x1, x20
   568a8:	mov	x0, x23
   568ac:	bl	c1a0 <mpfr_add@plt>
   568b0:	mov	x21, #0x2                   	// #2
   568b4:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   568b8:	b	57180 <mpfr_ai@@Base+0x1738>
   568bc:	ldr	x0, [sp, #104]
   568c0:	ldr	x1, [x0]
   568c4:	mov	x0, #0xfffffffffffffeff    	// #-257
   568c8:	movk	x0, #0x7fff, lsl #48
   568cc:	sub	x0, x0, x1
   568d0:	cmp	x0, #0x2
   568d4:	b.le	56a8c <mpfr_ai@@Base+0x1044>
   568d8:	ldr	x26, [sp, #104]
   568dc:	ldr	x20, [x26]
   568e0:	add	x20, x20, #0x3
   568e4:	mov	x1, x20
   568e8:	add	x0, sp, #0x1e0
   568ec:	bl	ca80 <mpfr_init2@plt>
   568f0:	mov	x1, x20
   568f4:	add	x0, sp, #0x200
   568f8:	bl	ca80 <mpfr_init2@plt>
   568fc:	mov	x24, #0x40                  	// #64
   56900:	add	x21, sp, #0x200
   56904:	add	x19, sp, #0x1e0
   56908:	mov	x23, #0x9                   	// #9
   5690c:	mov	x22, #0x1                   	// #1
   56910:	mov	x25, #0xfffffffffffffeff    	// #-257
   56914:	movk	x25, #0x7fff, lsl #48
   56918:	mov	x2, x20
   5691c:	mov	x1, x21
   56920:	mov	x0, x19
   56924:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   56928:	mov	w3, #0x0                   	// #0
   5692c:	mov	x2, #0x0                   	// #0
   56930:	mov	x1, x23
   56934:	mov	x0, x19
   56938:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5693c:	mov	w2, #0x0                   	// #0
   56940:	mov	x1, x19
   56944:	mov	x0, x19
   56948:	bl	cd20 <mpfr_cbrt@plt>
   5694c:	mov	w3, #0x0                   	// #0
   56950:	mov	x2, x21
   56954:	mov	x1, x19
   56958:	mov	x0, x19
   5695c:	bl	bd50 <mpfr_mul@plt>
   56960:	mov	w3, #0x0                   	// #0
   56964:	mov	x2, x19
   56968:	mov	x1, x22
   5696c:	mov	x0, x19
   56970:	bl	c2f0 <mpfr_ui_div@plt>
   56974:	ldr	x1, [sp, #496]
   56978:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5697c:	cmp	x1, x0
   56980:	b.le	56aa8 <mpfr_ai@@Base+0x1060>
   56984:	ldr	w0, [sp, #136]
   56988:	cmp	w0, #0x0
   5698c:	ldr	x3, [x26]
   56990:	cinc	x3, x3, eq  // eq = none
   56994:	ldr	x0, [sp, #480]
   56998:	add	x1, x0, #0x3e
   5699c:	subs	x0, x0, #0x1
   569a0:	csel	x1, x1, x0, mi  // mi = first
   569a4:	asr	x1, x1, #6
   569a8:	sub	x2, x20, #0x3
   569ac:	add	x1, x1, #0x1
   569b0:	ldr	x0, [sp, #504]
   569b4:	bl	c370 <mpfr_round_p@plt>
   569b8:	cbz	w0, 56aa8 <mpfr_ai@@Base+0x1060>
   569bc:	add	x20, sp, #0x1e0
   569c0:	ldr	w3, [sp, #488]
   569c4:	ldr	w2, [sp, #136]
   569c8:	mov	x1, x20
   569cc:	ldr	x22, [sp, #104]
   569d0:	mov	x0, x22
   569d4:	bl	c6a0 <mpfr_set4@plt>
   569d8:	mov	w19, w0
   569dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   569e0:	ldr	x1, [x0, #2576]
   569e4:	add	x0, x0, #0xa10
   569e8:	blr	x1
   569ec:	mrs	x1, tpidr_el0
   569f0:	ldr	w2, [sp, #140]
   569f4:	str	w2, [x1, x0]
   569f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   569fc:	ldr	x2, [x0, #2512]
   56a00:	add	x0, x0, #0x9d0
   56a04:	blr	x2
   56a08:	add	x21, x1, x0
   56a0c:	ldr	x2, [sp, #240]
   56a10:	str	x2, [x1, x0]
   56a14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56a18:	ldr	x2, [x0, #2544]
   56a1c:	add	x0, x0, #0x9f0
   56a20:	blr	x2
   56a24:	ldr	x2, [sp, #144]
   56a28:	str	x2, [x1, x0]
   56a2c:	mov	x0, x20
   56a30:	bl	c070 <mpfr_clear@plt>
   56a34:	add	x0, sp, #0x200
   56a38:	bl	c070 <mpfr_clear@plt>
   56a3c:	ldr	x1, [x22, #16]
   56a40:	ldr	x0, [x21]
   56a44:	cmp	x1, x0
   56a48:	b.lt	56a6c <mpfr_ai@@Base+0x1024>  // b.tstop
   56a4c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56a50:	ldr	x2, [x0, #2544]
   56a54:	add	x0, x0, #0x9f0
   56a58:	blr	x2
   56a5c:	mrs	x2, tpidr_el0
   56a60:	ldr	x0, [x2, x0]
   56a64:	cmp	x1, x0
   56a68:	b.le	57008 <mpfr_ai@@Base+0x15c0>
   56a6c:	ldr	w2, [sp, #136]
   56a70:	mov	w1, w19
   56a74:	ldr	x0, [sp, #104]
   56a78:	bl	cb30 <mpfr_check_range@plt>
   56a7c:	mov	w19, w0
   56a80:	ldp	x21, x22, [sp, #32]
   56a84:	ldp	x23, x24, [sp, #48]
   56a88:	b	57254 <mpfr_ai@@Base+0x180c>
   56a8c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56a90:	add	x2, x2, #0xa30
   56a94:	mov	w1, #0x52                  	// #82
   56a98:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56a9c:	add	x0, x0, #0x9f8
   56aa0:	bl	cb40 <mpfr_assert_fail@plt>
   56aa4:	b	568d8 <mpfr_ai@@Base+0xe90>
   56aa8:	sub	x0, x25, x20
   56aac:	cmp	x0, x24
   56ab0:	b.lt	56ac4 <mpfr_ai@@Base+0x107c>  // b.tstop
   56ab4:	add	x20, x20, x24
   56ab8:	add	x24, x20, x20, lsr #63
   56abc:	asr	x24, x24, #1
   56ac0:	b	56918 <mpfr_ai@@Base+0xed0>
   56ac4:	stp	x27, x28, [sp, #80]
   56ac8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   56acc:	add	x2, x2, #0xd68
   56ad0:	mov	w1, #0x63                  	// #99
   56ad4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56ad8:	add	x0, x0, #0x9f8
   56adc:	bl	cb40 <mpfr_assert_fail@plt>
   56ae0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   56ae4:	ldr	x1, [x0, #2576]
   56ae8:	add	x0, x0, #0xa10
   56aec:	blr	x1
   56af0:	mrs	x1, tpidr_el0
   56af4:	add	x0, x1, x0
   56af8:	ldr	w1, [x0]
   56afc:	orr	w1, w1, #0x8
   56b00:	str	w1, [x0]
   56b04:	ldp	x21, x22, [sp, #32]
   56b08:	ldp	x23, x24, [sp, #48]
   56b0c:	b	57254 <mpfr_ai@@Base+0x180c>
   56b10:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56b14:	add	x2, x2, #0xa80
   56b18:	mov	w1, #0x7c                  	// #124
   56b1c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56b20:	add	x0, x0, #0x9f8
   56b24:	bl	cb40 <mpfr_assert_fail@plt>
   56b28:	b	565f0 <mpfr_ai@@Base+0xba8>
   56b2c:	mov	w1, #0x2                   	// #2
   56b30:	add	x0, sp, #0x1c0
   56b34:	bl	bca0 <mpfr_get_ui@plt>
   56b38:	ldr	x2, [x25, #16]
   56b3c:	add	x1, x2, #0x2
   56b40:	subs	x2, x2, #0x1
   56b44:	csel	x1, x1, x2, mi  // mi = first
   56b48:	mvn	x1, x1, asr #2
   56b4c:	add	x0, x1, x0
   56b50:	str	x0, [sp, #128]
   56b54:	b	56690 <mpfr_ai@@Base+0xc48>
   56b58:	mov	w1, #0x2                   	// #2
   56b5c:	add	x0, sp, #0x1c0
   56b60:	bl	bca0 <mpfr_get_ui@plt>
   56b64:	add	x1, x20, #0x3
   56b68:	cmp	x20, #0x0
   56b6c:	csel	x1, x1, x20, lt  // lt = tstop
   56b70:	asr	x1, x1, #2
   56b74:	add	x1, x1, #0x3
   56b78:	add	x0, x1, x0
   56b7c:	str	x0, [sp, #152]
   56b80:	b	566cc <mpfr_ai@@Base+0xc84>
   56b84:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   56b88:	add	x2, x2, #0xd58
   56b8c:	mov	w1, #0xab                  	// #171
   56b90:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56b94:	add	x0, x0, #0x9f8
   56b98:	bl	cb40 <mpfr_assert_fail@plt>
   56b9c:	mov	x19, #0x5                   	// #5
   56ba0:	b	566ec <mpfr_ai@@Base+0xca4>
   56ba4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56ba8:	add	x2, x2, #0xad8
   56bac:	mov	w1, #0xac                  	// #172
   56bb0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56bb4:	add	x0, x0, #0x9f8
   56bb8:	bl	cb40 <mpfr_assert_fail@plt>
   56bbc:	ldr	w0, [sp, #392]
   56bc0:	neg	w0, w0
   56bc4:	str	w0, [sp, #392]
   56bc8:	b	567c4 <mpfr_ai@@Base+0xd7c>
   56bcc:	ldr	w0, [sp, #392]
   56bd0:	neg	w0, w0
   56bd4:	str	w0, [sp, #392]
   56bd8:	b	567dc <mpfr_ai@@Base+0xd94>
   56bdc:	add	x27, x27, #0x4
   56be0:	mul	x27, x27, x21
   56be4:	ldr	x0, [sp, #120]
   56be8:	cmp	x0, x27, lsr #1
   56bec:	b.hi	57180 <mpfr_ai@@Base+0x1738>  // b.pmore
   56bf0:	cmp	x21, #0x1
   56bf4:	b.eq	56c78 <mpfr_ai@@Base+0x1230>  // b.none
   56bf8:	b.ls	56c60 <mpfr_ai@@Base+0x1218>  // b.plast
   56bfc:	ldr	x0, [sp, #112]
   56c00:	clz	x0, x0
   56c04:	mov	w26, #0x44                  	// #68
   56c08:	sub	w26, w26, w0
   56c0c:	sxtw	x0, w26
   56c10:	ldr	x1, [sp, #304]
   56c14:	ldr	x2, [sp, #128]
   56c18:	sub	x26, x2, x1
   56c1c:	add	x26, x26, x0
   56c20:	cmp	x22, x26
   56c24:	b.le	57018 <mpfr_ai@@Base+0x15d0>
   56c28:	add	x2, x28, x26
   56c2c:	sub	x0, x22, x26
   56c30:	sub	x0, x0, #0x1
   56c34:	cmp	x22, x2
   56c38:	csel	x22, x0, x28, le
   56c3c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   56c40:	cmp	x1, x0
   56c44:	b.gt	57028 <mpfr_ai@@Base+0x15e0>
   56c48:	cbz	x22, 56c80 <mpfr_ai@@Base+0x1238>
   56c4c:	cmp	x22, x28
   56c50:	b.ge	56ce8 <mpfr_ai@@Base+0x12a0>  // b.tcont
   56c54:	add	x22, x28, x26
   56c58:	add	x22, x22, #0x1
   56c5c:	b	5675c <mpfr_ai@@Base+0xd14>
   56c60:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56c64:	add	x2, x2, #0xb20
   56c68:	mov	w1, #0xf0                  	// #240
   56c6c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56c70:	add	x0, x0, #0x9f8
   56c74:	bl	cb40 <mpfr_assert_fail@plt>
   56c78:	mov	x0, #0x4                   	// #4
   56c7c:	b	56c10 <mpfr_ai@@Base+0x11c8>
   56c80:	ldr	x0, [sp, #152]
   56c84:	lsl	x0, x0, #1
   56c88:	str	x0, [sp, #152]
   56c8c:	add	x1, x28, #0x5
   56c90:	cmp	x21, #0x1
   56c94:	b.eq	56ce0 <mpfr_ai@@Base+0x1298>  // b.none
   56c98:	b.ls	56cc8 <mpfr_ai@@Base+0x1280>  // b.plast
   56c9c:	ldr	x0, [sp, #112]
   56ca0:	clz	x2, x0
   56ca4:	mov	w0, #0x40                  	// #64
   56ca8:	sub	w0, w0, w2
   56cac:	sxtw	x0, w0
   56cb0:	ldr	x2, [sp, #128]
   56cb4:	ldr	x3, [sp, #152]
   56cb8:	add	x22, x2, x3
   56cbc:	add	x0, x1, x0
   56cc0:	add	x22, x22, x0
   56cc4:	b	5675c <mpfr_ai@@Base+0xd14>
   56cc8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56ccc:	add	x2, x2, #0xb20
   56cd0:	mov	w1, #0x109                 	// #265
   56cd4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56cd8:	add	x0, x0, #0x9f8
   56cdc:	bl	cb40 <mpfr_assert_fail@plt>
   56ce0:	mov	x0, #0x0                   	// #0
   56ce4:	b	56cb0 <mpfr_ai@@Base+0x1268>
   56ce8:	mov	x0, #0xfffffffffffffeff    	// #-257
   56cec:	movk	x0, #0x7fff, lsl #48
   56cf0:	sub	x0, x0, x28
   56cf4:	ldr	x1, [sp, #160]
   56cf8:	cmp	x0, x1
   56cfc:	b.lt	56d54 <mpfr_ai@@Base+0x130c>  // b.tstop
   56d00:	ldr	x0, [sp, #160]
   56d04:	add	x28, x28, x0
   56d08:	add	x0, x28, x28, lsr #63
   56d0c:	asr	x0, x0, #1
   56d10:	str	x0, [sp, #160]
   56d14:	cmp	x21, #0x1
   56d18:	b.eq	56d84 <mpfr_ai@@Base+0x133c>  // b.none
   56d1c:	b.ls	56d6c <mpfr_ai@@Base+0x1324>  // b.plast
   56d20:	ldr	x0, [sp, #112]
   56d24:	clz	x1, x0
   56d28:	mov	w0, #0x42                  	// #66
   56d2c:	sub	w0, w0, w1
   56d30:	sxtw	x0, w0
   56d34:	mov	x22, #0x5                   	// #5
   56d38:	ldr	x1, [sp, #304]
   56d3c:	sub	x22, x22, x1
   56d40:	add	x0, x28, x0
   56d44:	ldr	x1, [sp, #128]
   56d48:	add	x0, x0, x1
   56d4c:	add	x22, x22, x0
   56d50:	b	5675c <mpfr_ai@@Base+0xd14>
   56d54:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   56d58:	add	x2, x2, #0xd68
   56d5c:	mov	w1, #0x116                 	// #278
   56d60:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56d64:	add	x0, x0, #0x9f8
   56d68:	bl	cb40 <mpfr_assert_fail@plt>
   56d6c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   56d70:	add	x2, x2, #0xb20
   56d74:	mov	w1, #0x11a                 	// #282
   56d78:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   56d7c:	add	x0, x0, #0x9f8
   56d80:	bl	cb40 <mpfr_assert_fail@plt>
   56d84:	mov	x0, #0x2                   	// #2
   56d88:	b	56d34 <mpfr_ai@@Base+0x12ec>
   56d8c:	ldr	w2, [sp, #136]
   56d90:	mov	w1, w19
   56d94:	ldr	x0, [sp, #104]
   56d98:	bl	cb30 <mpfr_check_range@plt>
   56d9c:	mov	w19, w0
   56da0:	ldp	x21, x22, [sp, #32]
   56da4:	ldp	x23, x24, [sp, #48]
   56da8:	ldp	x27, x28, [sp, #80]
   56dac:	b	57254 <mpfr_ai@@Base+0x180c>
   56db0:	ldr	x0, [sp, #368]
   56db4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   56db8:	cmp	x0, x1
   56dbc:	b.eq	56178 <mpfr_ai@@Base+0x730>  // b.none
   56dc0:	mov	w1, #0x1                   	// #1
   56dc4:	ldr	x2, [sp, #112]
   56dc8:	add	x0, x0, x2
   56dcc:	add	x0, x0, #0x3
   56dd0:	ldr	x2, [sp, #400]
   56dd4:	cmp	x0, x2
   56dd8:	cset	w2, lt  // lt = tstop
   56ddc:	cmp	w1, #0x0
   56de0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   56de4:	b.ne	56178 <mpfr_ai@@Base+0x730>  // b.any
   56de8:	ldr	x0, [sp, #120]
   56dec:	add	x0, x0, #0x1
   56df0:	str	x0, [sp, #120]
   56df4:	ldr	x0, [sp, #176]
   56df8:	add	x19, x19, x0
   56dfc:	ldr	w3, [x27, #8]
   56e00:	mov	w2, #0x0                   	// #0
   56e04:	mov	x1, x27
   56e08:	mov	x0, x24
   56e0c:	bl	c6a0 <mpfr_set4@plt>
   56e10:	ldr	x0, [sp, #256]
   56e14:	add	x25, x0, x19
   56e18:	ldr	x21, [sp, #152]
   56e1c:	mov	x20, x19
   56e20:	mov	x3, x20
   56e24:	sub	x20, x20, #0x3
   56e28:	mov	w4, #0x0                   	// #0
   56e2c:	sub	x2, x3, #0x1
   56e30:	mov	x1, x24
   56e34:	mov	x0, x24
   56e38:	bl	be80 <mpfr_div_ui2@plt>
   56e3c:	mov	w3, #0x0                   	// #0
   56e40:	mov	x2, x21
   56e44:	mov	x1, x24
   56e48:	mov	x0, x24
   56e4c:	bl	c1a0 <mpfr_add@plt>
   56e50:	sub	x21, x21, #0x20
   56e54:	cmp	x20, x25
   56e58:	b.ne	56e20 <mpfr_ai@@Base+0x13d8>  // b.any
   56e5c:	ldr	x0, [sp, #184]
   56e60:	add	x0, x0, #0x3
   56e64:	add	x19, x0, x19
   56e68:	mov	w3, #0x0                   	// #0
   56e6c:	mov	x2, x23
   56e70:	mov	x1, x24
   56e74:	mov	x0, x24
   56e78:	bl	bd50 <mpfr_mul@plt>
   56e7c:	mov	w3, #0x0                   	// #0
   56e80:	mov	x2, x24
   56e84:	mov	x1, x26
   56e88:	mov	x0, x26
   56e8c:	bl	c1a0 <mpfr_add@plt>
   56e90:	mov	w3, #0x0                   	// #0
   56e94:	ldr	x2, [sp, #168]
   56e98:	mov	x1, x23
   56e9c:	mov	x0, x23
   56ea0:	bl	bd50 <mpfr_mul@plt>
   56ea4:	sub	x25, x22, #0x1
   56ea8:	mov	x21, #0x0                   	// #0
   56eac:	add	x2, x19, #0x2
   56eb0:	mov	x20, x19
   56eb4:	add	x19, x19, #0x3
   56eb8:	mov	w4, #0x0                   	// #0
   56ebc:	mov	x3, x19
   56ec0:	mov	x1, x23
   56ec4:	mov	x0, x23
   56ec8:	bl	be80 <mpfr_div_ui2@plt>
   56ecc:	add	x21, x21, #0x1
   56ed0:	cmp	x21, x25
   56ed4:	b.ls	56eac <mpfr_ai@@Base+0x1464>  // b.plast
   56ed8:	add	x19, x20, #0x1
   56edc:	ldr	w3, [x27, #8]
   56ee0:	mov	w2, #0x0                   	// #0
   56ee4:	mov	x1, x27
   56ee8:	mov	x0, x24
   56eec:	bl	c6a0 <mpfr_set4@plt>
   56ef0:	ldr	x0, [sp, #160]
   56ef4:	sub	x20, x20, x0
   56ef8:	add	x20, x20, #0x4
   56efc:	ldr	x25, [sp, #152]
   56f00:	mov	x21, x19
   56f04:	mov	x3, x21
   56f08:	sub	x21, x21, #0x3
   56f0c:	mov	w4, #0x0                   	// #0
   56f10:	sub	x2, x3, #0x1
   56f14:	mov	x1, x24
   56f18:	mov	x0, x24
   56f1c:	bl	be80 <mpfr_div_ui2@plt>
   56f20:	mov	w3, #0x0                   	// #0
   56f24:	mov	x2, x25
   56f28:	mov	x1, x24
   56f2c:	mov	x0, x24
   56f30:	bl	c1a0 <mpfr_add@plt>
   56f34:	sub	x25, x25, #0x20
   56f38:	cmp	x21, x20
   56f3c:	b.ne	56f04 <mpfr_ai@@Base+0x14bc>  // b.any
   56f40:	ldr	x0, [sp, #184]
   56f44:	add	x19, x19, x0
   56f48:	add	x20, x19, #0x3
   56f4c:	mov	w3, #0x0                   	// #0
   56f50:	mov	x2, x28
   56f54:	mov	x1, x24
   56f58:	mov	x0, x24
   56f5c:	bl	bd50 <mpfr_mul@plt>
   56f60:	mov	w3, #0x0                   	// #0
   56f64:	mov	x2, x24
   56f68:	mov	x1, x26
   56f6c:	mov	x0, x26
   56f70:	bl	c1a0 <mpfr_add@plt>
   56f74:	mov	w3, #0x0                   	// #0
   56f78:	ldr	x2, [sp, #168]
   56f7c:	mov	x1, x28
   56f80:	mov	x0, x28
   56f84:	bl	bd50 <mpfr_mul@plt>
   56f88:	ldr	x0, [sp, #160]
   56f8c:	add	x0, x0, #0x3
   56f90:	add	x19, x0, x19
   56f94:	mov	x21, x20
   56f98:	add	x2, x21, #0x2
   56f9c:	add	x21, x21, #0x3
   56fa0:	mov	w4, #0x0                   	// #0
   56fa4:	mov	x3, x21
   56fa8:	mov	x1, x28
   56fac:	mov	x0, x28
   56fb0:	bl	be80 <mpfr_div_ui2@plt>
   56fb4:	cmp	x21, x19
   56fb8:	b.ne	56f98 <mpfr_ai@@Base+0x1550>  // b.any
   56fbc:	ldr	x0, [sp, #176]
   56fc0:	add	x20, x0, x20
   56fc4:	add	x19, x20, #0x2
   56fc8:	ldr	x0, [sp, #336]
   56fcc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   56fd0:	cmp	x0, x1
   56fd4:	b.eq	56db0 <mpfr_ai@@Base+0x1368>  // b.none
   56fd8:	ldr	x1, [sp, #112]
   56fdc:	add	x0, x0, x1
   56fe0:	add	x0, x0, #0x3
   56fe4:	ldr	x1, [sp, #400]
   56fe8:	cmp	x0, x1
   56fec:	cset	w1, lt  // lt = tstop
   56ff0:	ldr	x0, [sp, #368]
   56ff4:	mov	w2, #0x1                   	// #1
   56ff8:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   56ffc:	cmp	x0, x3
   57000:	b.ne	56dc4 <mpfr_ai@@Base+0x137c>  // b.any
   57004:	b	56ddc <mpfr_ai@@Base+0x1394>
   57008:	cbnz	w19, 56ae0 <mpfr_ai@@Base+0x1098>
   5700c:	ldp	x21, x22, [sp, #32]
   57010:	ldp	x23, x24, [sp, #48]
   57014:	b	57254 <mpfr_ai@@Base+0x180c>
   57018:	mov	x22, #0x0                   	// #0
   5701c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57020:	cmp	x1, x0
   57024:	b.le	56c80 <mpfr_ai@@Base+0x1238>
   57028:	ldr	w0, [sp, #136]
   5702c:	cmp	w0, #0x0
   57030:	ldr	x0, [sp, #104]
   57034:	ldr	x3, [x0]
   57038:	cinc	x3, x3, eq  // eq = none
   5703c:	ldr	x0, [sp, #288]
   57040:	add	x1, x0, #0x3e
   57044:	subs	x0, x0, #0x1
   57048:	csel	x1, x1, x0, mi  // mi = first
   5704c:	asr	x1, x1, #6
   57050:	mov	x2, x22
   57054:	add	x1, x1, #0x1
   57058:	ldr	x0, [sp, #312]
   5705c:	bl	c370 <mpfr_round_p@plt>
   57060:	cbz	w0, 56c48 <mpfr_ai@@Base+0x1200>
   57064:	add	x20, sp, #0x120
   57068:	ldr	w3, [sp, #296]
   5706c:	ldr	w2, [sp, #136]
   57070:	mov	x1, x20
   57074:	ldr	x21, [sp, #104]
   57078:	mov	x0, x21
   5707c:	bl	c6a0 <mpfr_set4@plt>
   57080:	mov	w19, w0
   57084:	add	x0, sp, #0x140
   57088:	bl	c070 <mpfr_clear@plt>
   5708c:	add	x0, sp, #0x160
   57090:	bl	c070 <mpfr_clear@plt>
   57094:	add	x0, sp, #0x1e0
   57098:	bl	c070 <mpfr_clear@plt>
   5709c:	add	x0, sp, #0x200
   570a0:	bl	c070 <mpfr_clear@plt>
   570a4:	add	x0, sp, #0x180
   570a8:	bl	c070 <mpfr_clear@plt>
   570ac:	mov	x0, x20
   570b0:	bl	c070 <mpfr_clear@plt>
   570b4:	add	x0, sp, #0x1a0
   570b8:	bl	c070 <mpfr_clear@plt>
   570bc:	add	x0, sp, #0x1c0
   570c0:	bl	c070 <mpfr_clear@plt>
   570c4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   570c8:	ldr	x1, [x0, #2576]
   570cc:	add	x0, x0, #0xa10
   570d0:	blr	x1
   570d4:	mrs	x1, tpidr_el0
   570d8:	ldr	w4, [sp, #140]
   570dc:	str	w4, [x1, x0]
   570e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   570e4:	ldr	x2, [x0, #2512]
   570e8:	add	x0, x0, #0x9d0
   570ec:	blr	x2
   570f0:	ldr	x2, [sp, #240]
   570f4:	str	x2, [x1, x0]
   570f8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   570fc:	ldr	x3, [x0, #2544]
   57100:	add	x0, x0, #0x9f0
   57104:	blr	x3
   57108:	ldr	x3, [sp, #144]
   5710c:	str	x3, [x1, x0]
   57110:	ldr	x0, [x21, #16]
   57114:	cmp	x3, x0
   57118:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   5711c:	b.gt	56d8c <mpfr_ai@@Base+0x1344>
   57120:	cbz	w19, 5726c <mpfr_ai@@Base+0x1824>
   57124:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57128:	ldr	x1, [x0, #2576]
   5712c:	add	x0, x0, #0xa10
   57130:	blr	x1
   57134:	orr	w1, w4, #0x8
   57138:	mrs	x2, tpidr_el0
   5713c:	str	w1, [x2, x0]
   57140:	ldp	x21, x22, [sp, #32]
   57144:	ldp	x23, x24, [sp, #48]
   57148:	ldp	x27, x28, [sp, #80]
   5714c:	b	57254 <mpfr_ai@@Base+0x180c>
   57150:	ldr	x0, [sp, #368]
   57154:	mov	w1, #0x1                   	// #1
   57158:	cmp	x0, x26
   5715c:	b.eq	56bdc <mpfr_ai@@Base+0x1194>  // b.none
   57160:	add	x0, x28, x0
   57164:	add	x0, x0, #0x2
   57168:	ldr	x2, [sp, #304]
   5716c:	cmp	x0, x2
   57170:	cset	w2, lt  // lt = tstop
   57174:	cmp	w1, #0x0
   57178:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   5717c:	b.ne	56bdc <mpfr_ai@@Base+0x1194>  // b.any
   57180:	mov	w3, #0x0                   	// #0
   57184:	mov	x2, x24
   57188:	mov	x1, x20
   5718c:	mov	x0, x20
   57190:	bl	bd50 <mpfr_mul@plt>
   57194:	mov	w3, #0x0                   	// #0
   57198:	mov	x2, x24
   5719c:	mov	x1, x19
   571a0:	mov	x0, x19
   571a4:	bl	bd50 <mpfr_mul@plt>
   571a8:	add	x27, x21, #0x1
   571ac:	mov	w4, #0x0                   	// #0
   571b0:	mov	x3, x27
   571b4:	mov	x2, x21
   571b8:	mov	x1, x20
   571bc:	mov	x0, x20
   571c0:	bl	be80 <mpfr_div_ui2@plt>
   571c4:	add	x0, x21, #0x2
   571c8:	str	x0, [sp, #112]
   571cc:	mov	w4, #0x0                   	// #0
   571d0:	mov	x3, x0
   571d4:	mov	x2, x27
   571d8:	mov	x1, x19
   571dc:	mov	x0, x19
   571e0:	bl	be80 <mpfr_div_ui2@plt>
   571e4:	mov	x27, x21
   571e8:	add	x21, x21, #0x3
   571ec:	mov	w3, #0x0                   	// #0
   571f0:	mov	x2, x20
   571f4:	mov	x1, x23
   571f8:	mov	x0, x23
   571fc:	bl	c1a0 <mpfr_add@plt>
   57200:	mov	w3, #0x0                   	// #0
   57204:	mov	x2, x19
   57208:	mov	x1, x23
   5720c:	mov	x0, x23
   57210:	bl	c1a0 <mpfr_add@plt>
   57214:	ldr	x0, [sp, #336]
   57218:	cmp	x0, x26
   5721c:	b.eq	57150 <mpfr_ai@@Base+0x1708>  // b.none
   57220:	add	x0, x0, x28
   57224:	add	x0, x0, #0x2
   57228:	ldr	x1, [sp, #304]
   5722c:	cmp	x0, x1
   57230:	cset	w1, lt  // lt = tstop
   57234:	ldr	x0, [sp, #368]
   57238:	mov	w2, #0x1                   	// #1
   5723c:	cmp	x0, x26
   57240:	b.ne	57160 <mpfr_ai@@Base+0x1718>  // b.any
   57244:	b	57174 <mpfr_ai@@Base+0x172c>
   57248:	ldp	x21, x22, [sp, #32]
   5724c:	ldp	x23, x24, [sp, #48]
   57250:	ldp	x27, x28, [sp, #80]
   57254:	mov	w0, w19
   57258:	ldp	x19, x20, [sp, #16]
   5725c:	ldp	x25, x26, [sp, #64]
   57260:	ldp	x29, x30, [sp]
   57264:	add	sp, sp, #0x260
   57268:	ret
   5726c:	ldp	x21, x22, [sp, #32]
   57270:	ldp	x23, x24, [sp, #48]
   57274:	ldp	x27, x28, [sp, #80]
   57278:	b	57254 <mpfr_ai@@Base+0x180c>

000000000005727c <mpfr_div_ui2@@Base>:
   5727c:	stp	x29, x30, [sp, #-48]!
   57280:	mov	x29, sp
   57284:	stp	x19, x20, [sp, #16]
   57288:	stp	x21, x22, [sp, #32]
   5728c:	mov	x19, x0
   57290:	mov	x22, x2
   57294:	mov	x20, x3
   57298:	mov	w21, w4
   5729c:	ldr	w3, [x1, #8]
   572a0:	mov	w2, w4
   572a4:	bl	c6a0 <mpfr_set4@plt>
   572a8:	umulh	x0, x20, x22
   572ac:	cbnz	x0, 572d8 <mpfr_div_ui2@@Base+0x5c>
   572b0:	mul	x20, x20, x22
   572b4:	mov	w3, w21
   572b8:	mov	x2, x20
   572bc:	mov	x1, x19
   572c0:	mov	x0, x19
   572c4:	bl	cc60 <mpfr_div_ui@plt>
   572c8:	ldp	x19, x20, [sp, #16]
   572cc:	ldp	x21, x22, [sp, #32]
   572d0:	ldp	x29, x30, [sp], #48
   572d4:	ret
   572d8:	mov	w3, w21
   572dc:	mov	x2, x22
   572e0:	mov	x1, x19
   572e4:	mov	x0, x19
   572e8:	bl	cc60 <mpfr_div_ui@plt>
   572ec:	b	572b4 <mpfr_div_ui2@@Base+0x38>

00000000000572f0 <mpfr_gamma_one_and_two_third@@Base>:
   572f0:	stp	x29, x30, [sp, #-272]!
   572f4:	mov	x29, sp
   572f8:	stp	x19, x20, [sp, #16]
   572fc:	stp	x21, x22, [sp, #32]
   57300:	stp	x23, x24, [sp, #48]
   57304:	stp	x25, x26, [sp, #64]
   57308:	stp	x27, x28, [sp, #80]
   5730c:	mov	x22, x0
   57310:	str	x0, [sp, #96]
   57314:	mov	x21, x1
   57318:	mov	x19, x2
   5731c:	add	x20, x2, #0x4
   57320:	mov	x1, x20
   57324:	add	x0, sp, #0xf0
   57328:	bl	ca80 <mpfr_init2@plt>
   5732c:	mov	x1, x20
   57330:	mov	x0, x21
   57334:	bl	bed0 <mpfr_set_prec@plt>
   57338:	add	x27, x19, #0xd
   5733c:	add	x20, sp, #0x70
   57340:	mov	x1, x27
   57344:	mov	x0, x20
   57348:	bl	ca80 <mpfr_init2@plt>
   5734c:	mov	x1, x27
   57350:	add	x0, sp, #0x90
   57354:	bl	ca80 <mpfr_init2@plt>
   57358:	add	x1, x19, #0x8
   5735c:	add	x0, sp, #0xb0
   57360:	bl	ca80 <mpfr_init2@plt>
   57364:	add	x1, x19, #0x6
   57368:	mov	x0, x22
   5736c:	bl	bed0 <mpfr_set_prec@plt>
   57370:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57374:	ldr	x1, [x0, #2624]
   57378:	add	x0, x0, #0xa40
   5737c:	blr	x1
   57380:	mov	w2, #0x0                   	// #0
   57384:	mrs	x1, tpidr_el0
   57388:	add	x1, x1, x0
   5738c:	mov	x0, x20
   57390:	bl	c380 <mpfr_cache@plt>
   57394:	mov	w2, #0x0                   	// #0
   57398:	mov	x1, x20
   5739c:	mov	x0, x20
   573a0:	bl	c400 <mpfr_sqr@plt>
   573a4:	mov	w2, #0x0                   	// #0
   573a8:	mov	x1, x20
   573ac:	mov	x0, x20
   573b0:	bl	c400 <mpfr_sqr@plt>
   573b4:	mov	w3, #0x0                   	// #0
   573b8:	mov	x2, #0xc                   	// #12
   573bc:	mov	x1, x20
   573c0:	mov	x0, x20
   573c4:	bl	ba50 <mpfr_mul_ui@plt>
   573c8:	add	x22, x19, #0x17
   573cc:	add	x19, x19, #0x20
   573d0:	cmp	x19, #0x9
   573d4:	b.ls	57488 <mpfr_gamma_one_and_two_third@@Base+0x198>  // b.plast
   573d8:	cmn	x27, #0x9
   573dc:	b.lt	57470 <mpfr_gamma_one_and_two_third@@Base+0x180>  // b.tstop
   573e0:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   573e4:	movk	x0, #0x6667
   573e8:	smulh	x0, x27, x0
   573ec:	asr	x0, x0, #2
   573f0:	sub	x0, x0, x27, asr #63
   573f4:	add	x0, x0, #0x1
   573f8:	clz	x0, x0
   573fc:	mov	w2, #0x40                  	// #64
   57400:	sub	w0, w2, w0
   57404:	sxtw	x0, w0
   57408:	add	x22, x22, x0
   5740c:	add	x19, sp, #0xd0
   57410:	mov	x1, x22
   57414:	mov	x0, x19
   57418:	bl	ca80 <mpfr_init2@plt>
   5741c:	add	x20, sp, #0x90
   57420:	mov	x1, x22
   57424:	mov	x0, x20
   57428:	bl	bed0 <mpfr_set_prec@plt>
   5742c:	mov	w3, #0x0                   	// #0
   57430:	mov	x2, #0x0                   	// #0
   57434:	mov	x1, #0x1                   	// #1
   57438:	mov	x0, x19
   5743c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   57440:	ldr	w3, [sp, #216]
   57444:	mov	w2, #0x0                   	// #0
   57448:	mov	x1, x19
   5744c:	mov	x0, x20
   57450:	bl	c6a0 <mpfr_set4@plt>
   57454:	mov	x20, #0x2                   	// #2
   57458:	mov	x23, x20
   5745c:	mov	x22, #0x1                   	// #1
   57460:	add	x19, sp, #0xd0
   57464:	add	x0, sp, #0x90
   57468:	str	x0, [sp, #104]
   5746c:	b	575c4 <mpfr_gamma_one_and_two_third@@Base+0x2d4>
   57470:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   57474:	add	x2, x2, #0xb28
   57478:	mov	w1, #0x69                  	// #105
   5747c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   57480:	add	x0, x0, #0xb40
   57484:	bl	cb40 <mpfr_assert_fail@plt>
   57488:	mov	x0, #0x0                   	// #0
   5748c:	b	57408 <mpfr_gamma_one_and_two_third@@Base+0x118>
   57490:	mov	w3, #0x0                   	// #0
   57494:	mov	x2, x24
   57498:	mov	x1, x19
   5749c:	mov	x0, x19
   574a0:	bl	ba50 <mpfr_mul_ui@plt>
   574a4:	mov	x2, x23
   574a8:	b	575f4 <mpfr_gamma_one_and_two_third@@Base+0x304>
   574ac:	mov	w3, #0x0                   	// #0
   574b0:	mov	x1, x19
   574b4:	mov	x0, x19
   574b8:	bl	ba50 <mpfr_mul_ui@plt>
   574bc:	b	57600 <mpfr_gamma_one_and_two_third@@Base+0x310>
   574c0:	mov	w3, #0x0                   	// #0
   574c4:	mov	x2, x26
   574c8:	mov	x1, x19
   574cc:	mov	x0, x19
   574d0:	bl	ba50 <mpfr_mul_ui@plt>
   574d4:	b	5760c <mpfr_gamma_one_and_two_third@@Base+0x31c>
   574d8:	mov	w3, #0x0                   	// #0
   574dc:	mov	x2, x25
   574e0:	mov	x1, x19
   574e4:	mov	x0, x19
   574e8:	bl	ba50 <mpfr_mul_ui@plt>
   574ec:	b	57618 <mpfr_gamma_one_and_two_third@@Base+0x328>
   574f0:	mov	w3, #0x0                   	// #0
   574f4:	mov	x2, x22
   574f8:	mov	x1, x19
   574fc:	mov	x0, x19
   57500:	bl	cc60 <mpfr_div_ui@plt>
   57504:	mov	x2, x22
   57508:	b	57654 <mpfr_gamma_one_and_two_third@@Base+0x364>
   5750c:	mov	w3, #0x0                   	// #0
   57510:	mov	x1, x19
   57514:	mov	x0, x19
   57518:	bl	cc60 <mpfr_div_ui@plt>
   5751c:	b	57660 <mpfr_gamma_one_and_two_third@@Base+0x370>
   57520:	mov	w3, #0x0                   	// #0
   57524:	mov	x2, x24
   57528:	mov	x1, x19
   5752c:	mov	x0, x19
   57530:	bl	cc60 <mpfr_div_ui@plt>
   57534:	mov	x2, x20
   57538:	b	5766c <mpfr_gamma_one_and_two_third@@Base+0x37c>
   5753c:	mov	w3, #0x0                   	// #0
   57540:	mov	x1, x19
   57544:	mov	x0, x19
   57548:	bl	cc60 <mpfr_div_ui@plt>
   5754c:	b	57678 <mpfr_gamma_one_and_two_third@@Base+0x388>
   57550:	mov	w3, #0x0                   	// #0
   57554:	mov	x2, x25
   57558:	mov	x1, x19
   5755c:	mov	x0, x19
   57560:	bl	cc60 <mpfr_div_ui@plt>
   57564:	mov	x0, #0x3200                	// #12800
   57568:	add	x0, x0, x0, lsl #2
   5756c:	lsl	x2, x0, #5
   57570:	mov	w3, #0x0                   	// #0
   57574:	mov	x1, x19
   57578:	mov	x0, x19
   5757c:	bl	cc60 <mpfr_div_ui@plt>
   57580:	ldr	w0, [sp, #216]
   57584:	neg	w0, w0
   57588:	str	w0, [sp, #216]
   5758c:	mov	w3, #0x0                   	// #0
   57590:	mov	x2, x19
   57594:	ldr	x0, [sp, #104]
   57598:	mov	x1, x0
   5759c:	bl	c1a0 <mpfr_add@plt>
   575a0:	add	x22, x22, #0x1
   575a4:	add	x23, x23, #0x6
   575a8:	add	x20, x20, #0x3
   575ac:	ldr	x1, [sp, #224]
   575b0:	add	x1, x27, x1
   575b4:	ldr	x0, [sp, #160]
   575b8:	add	x0, x0, #0x7
   575bc:	cmp	x1, x0
   575c0:	b.le	576e4 <mpfr_gamma_one_and_two_third@@Base+0x3f4>
   575c4:	sub	x24, x23, #0x1
   575c8:	add	x26, x23, #0x1
   575cc:	lsl	x25, x20, #1
   575d0:	add	x28, x23, #0x3
   575d4:	ldr	w3, [sp, #216]
   575d8:	mov	w2, #0x0                   	// #0
   575dc:	mov	x1, x19
   575e0:	mov	x0, x19
   575e4:	bl	c6a0 <mpfr_set4@plt>
   575e8:	umulh	x0, x23, x24
   575ec:	cbnz	x0, 57490 <mpfr_gamma_one_and_two_third@@Base+0x1a0>
   575f0:	mul	x2, x23, x24
   575f4:	umulh	x0, x26, x2
   575f8:	cbnz	x0, 574ac <mpfr_gamma_one_and_two_third@@Base+0x1bc>
   575fc:	mul	x26, x26, x2
   57600:	umulh	x0, x25, x26
   57604:	cbnz	x0, 574c0 <mpfr_gamma_one_and_two_third@@Base+0x1d0>
   57608:	mul	x25, x25, x26
   5760c:	umulh	x0, x28, x25
   57610:	cbnz	x0, 574d8 <mpfr_gamma_one_and_two_third@@Base+0x1e8>
   57614:	mul	x28, x28, x25
   57618:	mov	w3, #0x0                   	// #0
   5761c:	mov	x2, x28
   57620:	mov	x1, x19
   57624:	mov	x0, x19
   57628:	bl	ba50 <mpfr_mul_ui@plt>
   5762c:	add	x25, x20, #0x1
   57630:	sub	x24, x20, #0x1
   57634:	ldr	w3, [sp, #216]
   57638:	mov	w2, #0x0                   	// #0
   5763c:	mov	x1, x19
   57640:	mov	x0, x19
   57644:	bl	c6a0 <mpfr_set4@plt>
   57648:	umulh	x0, x22, x22
   5764c:	cbnz	x0, 574f0 <mpfr_gamma_one_and_two_third@@Base+0x200>
   57650:	mul	x2, x22, x22
   57654:	umulh	x0, x24, x2
   57658:	cbnz	x0, 5750c <mpfr_gamma_one_and_two_third@@Base+0x21c>
   5765c:	mul	x24, x24, x2
   57660:	umulh	x0, x20, x24
   57664:	cbnz	x0, 57520 <mpfr_gamma_one_and_two_third@@Base+0x230>
   57668:	mul	x2, x24, x20
   5766c:	umulh	x0, x25, x2
   57670:	cbnz	x0, 5753c <mpfr_gamma_one_and_two_third@@Base+0x24c>
   57674:	mul	x25, x25, x2
   57678:	mov	x0, #0x50                  	// #80
   5767c:	umulh	x0, x25, x0
   57680:	cbnz	x0, 57550 <mpfr_gamma_one_and_two_third@@Base+0x260>
   57684:	add	x2, x25, x25, lsl #2
   57688:	lsl	x2, x2, #4
   5768c:	mov	x0, #0xa0                  	// #160
   57690:	umulh	x0, x2, x0
   57694:	cbz	x0, 576b0 <mpfr_gamma_one_and_two_third@@Base+0x3c0>
   57698:	mov	w3, #0x0                   	// #0
   5769c:	mov	x1, x19
   576a0:	mov	x0, x19
   576a4:	bl	cc60 <mpfr_div_ui@plt>
   576a8:	mov	x0, #0xa0                  	// #160
   576ac:	b	57568 <mpfr_gamma_one_and_two_third@@Base+0x278>
   576b0:	add	x2, x25, x25, lsl #1
   576b4:	add	x2, x25, x2, lsl #3
   576b8:	lsl	x2, x2, #9
   576bc:	mov	x0, x2
   576c0:	mov	x1, #0xa0                  	// #160
   576c4:	umulh	x1, x2, x1
   576c8:	cbz	x1, 57568 <mpfr_gamma_one_and_two_third@@Base+0x278>
   576cc:	mov	w3, #0x0                   	// #0
   576d0:	mov	x1, x19
   576d4:	mov	x0, x19
   576d8:	bl	cc60 <mpfr_div_ui@plt>
   576dc:	mov	x2, #0xa0                  	// #160
   576e0:	b	57570 <mpfr_gamma_one_and_two_third@@Base+0x280>
   576e4:	add	x0, sp, #0xd0
   576e8:	bl	c070 <mpfr_clear@plt>
   576ec:	add	x19, sp, #0x90
   576f0:	add	x20, sp, #0x70
   576f4:	mov	w3, #0x0                   	// #0
   576f8:	mov	x2, x19
   576fc:	mov	x1, x20
   57700:	mov	x0, x20
   57704:	bl	bd50 <mpfr_mul@plt>
   57708:	mov	w3, #0x0                   	// #0
   5770c:	mov	x2, #0x0                   	// #0
   57710:	mov	x1, #0xa                   	// #10
   57714:	mov	x0, x19
   57718:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5771c:	mov	w2, #0x0                   	// #0
   57720:	mov	x1, x19
   57724:	mov	x0, x19
   57728:	bl	c930 <mpfr_sqrt@plt>
   5772c:	mov	w3, #0x0                   	// #0
   57730:	mov	x2, x19
   57734:	mov	x1, x20
   57738:	mov	x0, x20
   5773c:	bl	c620 <mpfr_div@plt>
   57740:	add	x22, sp, #0xb0
   57744:	mov	w2, #0x0                   	// #0
   57748:	mov	x1, x20
   5774c:	mov	x0, x22
   57750:	bl	c930 <mpfr_sqrt@plt>
   57754:	mov	w2, #0x0                   	// #0
   57758:	mov	x1, x22
   5775c:	ldr	x23, [sp, #96]
   57760:	mov	x0, x23
   57764:	bl	cd20 <mpfr_cbrt@plt>
   57768:	mov	x0, x20
   5776c:	bl	c070 <mpfr_clear@plt>
   57770:	mov	x0, x19
   57774:	bl	c070 <mpfr_clear@plt>
   57778:	mov	x0, x22
   5777c:	bl	c070 <mpfr_clear@plt>
   57780:	add	x19, sp, #0xf0
   57784:	mov	w3, #0x0                   	// #0
   57788:	mov	x2, #0x0                   	// #0
   5778c:	mov	x1, #0x3                   	// #3
   57790:	mov	x0, x19
   57794:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   57798:	mov	w2, #0x0                   	// #0
   5779c:	mov	x1, x19
   577a0:	mov	x0, x19
   577a4:	bl	c930 <mpfr_sqrt@plt>
   577a8:	mov	w3, #0x0                   	// #0
   577ac:	mov	x2, x19
   577b0:	mov	x1, x23
   577b4:	mov	x0, x19
   577b8:	bl	bd50 <mpfr_mul@plt>
   577bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   577c0:	ldr	x1, [x0, #2624]
   577c4:	add	x0, x0, #0xa40
   577c8:	blr	x1
   577cc:	mov	w2, #0x0                   	// #0
   577d0:	mrs	x1, tpidr_el0
   577d4:	add	x1, x1, x0
   577d8:	mov	x0, x21
   577dc:	bl	c380 <mpfr_cache@plt>
   577e0:	mov	w3, #0x0                   	// #0
   577e4:	mov	x2, #0x1                   	// #1
   577e8:	mov	x1, x21
   577ec:	mov	x0, x21
   577f0:	bl	c2c0 <mpfr_mul_2ui@plt>
   577f4:	mov	w3, #0x0                   	// #0
   577f8:	mov	x2, x19
   577fc:	mov	x1, x21
   57800:	mov	x0, x21
   57804:	bl	c620 <mpfr_div@plt>
   57808:	mov	x0, x19
   5780c:	bl	c070 <mpfr_clear@plt>
   57810:	ldp	x19, x20, [sp, #16]
   57814:	ldp	x21, x22, [sp, #32]
   57818:	ldp	x23, x24, [sp, #48]
   5781c:	ldp	x25, x26, [sp, #64]
   57820:	ldp	x27, x28, [sp, #80]
   57824:	ldp	x29, x30, [sp], #272
   57828:	ret

000000000005782c <mpfr_grandom@@Base>:
   5782c:	stp	x29, x30, [sp, #-400]!
   57830:	mov	x29, sp
   57834:	stp	x19, x20, [sp, #16]
   57838:	stp	x21, x22, [sp, #32]
   5783c:	stp	x23, x24, [sp, #48]
   57840:	stp	x25, x26, [sp, #64]
   57844:	stp	x27, x28, [sp, #80]
   57848:	str	x0, [sp, #112]
   5784c:	str	x1, [sp, #128]
   57850:	mov	x27, x2
   57854:	str	w3, [sp, #124]
   57858:	cbz	x1, 579a0 <mpfr_grandom@@Base+0x174>
   5785c:	ldr	x0, [sp, #112]
   57860:	ldr	x1, [x0]
   57864:	ldr	x0, [sp, #128]
   57868:	ldr	x0, [x0]
   5786c:	cmp	x0, x1
   57870:	csel	x0, x0, x1, ge  // ge = tcont
   57874:	add	x0, x0, #0xb
   57878:	str	x0, [sp, #136]
   5787c:	add	x0, sp, #0x160
   57880:	bl	bf90 <mpfr_mpz_init@plt>
   57884:	add	x0, sp, #0x150
   57888:	bl	bf90 <mpfr_mpz_init@plt>
   5788c:	add	x0, sp, #0x180
   57890:	bl	bf90 <mpfr_mpz_init@plt>
   57894:	add	x0, sp, #0x170
   57898:	bl	bf90 <mpfr_mpz_init@plt>
   5789c:	add	x0, sp, #0x140
   578a0:	bl	bf90 <mpfr_mpz_init@plt>
   578a4:	add	x0, sp, #0x110
   578a8:	bl	bf90 <mpfr_mpz_init@plt>
   578ac:	add	x0, sp, #0x130
   578b0:	bl	bf90 <mpfr_mpz_init@plt>
   578b4:	add	x0, sp, #0x120
   578b8:	bl	bf90 <mpfr_mpz_init@plt>
   578bc:	mov	x1, #0x1                   	// #1
   578c0:	add	x0, sp, #0xf0
   578c4:	bl	ca80 <mpfr_init2@plt>
   578c8:	mov	x1, #0x1                   	// #1
   578cc:	add	x0, sp, #0xd0
   578d0:	bl	ca80 <mpfr_init2@plt>
   578d4:	mov	x1, #0x1                   	// #1
   578d8:	add	x0, sp, #0xb0
   578dc:	bl	ca80 <mpfr_init2@plt>
   578e0:	mov	x1, #0x1                   	// #1
   578e4:	add	x0, sp, #0x90
   578e8:	bl	ca80 <mpfr_init2@plt>
   578ec:	mov	x1, #0x0                   	// #0
   578f0:	add	x0, sp, #0x160
   578f4:	bl	bcb0 <__gmpz_set_ui@plt>
   578f8:	mov	x1, #0x0                   	// #0
   578fc:	add	x0, sp, #0x150
   57900:	bl	bcb0 <__gmpz_set_ui@plt>
   57904:	ldr	x0, [sp, #136]
   57908:	str	x0, [sp, #104]
   5790c:	lsl	x0, x0, #1
   57910:	str	x0, [sp, #96]
   57914:	add	x21, sp, #0x160
   57918:	add	x19, sp, #0x150
   5791c:	add	x23, sp, #0x130
   57920:	add	x22, sp, #0x120
   57924:	add	x24, sp, #0x110
   57928:	ldr	x20, [sp, #104]
   5792c:	mov	x2, x20
   57930:	mov	x1, x27
   57934:	mov	x0, x21
   57938:	bl	cd00 <__gmpz_urandomb@plt>
   5793c:	mov	x2, x20
   57940:	mov	x1, x27
   57944:	mov	x0, x19
   57948:	bl	cd00 <__gmpz_urandomb@plt>
   5794c:	mov	x2, x21
   57950:	mov	x1, x21
   57954:	mov	x0, x23
   57958:	bl	bff0 <__gmpz_mul@plt>
   5795c:	mov	x2, x19
   57960:	mov	x1, x19
   57964:	mov	x0, x22
   57968:	bl	bff0 <__gmpz_mul@plt>
   5796c:	mov	x2, x22
   57970:	mov	x1, x23
   57974:	mov	x0, x24
   57978:	bl	c9c0 <__gmpz_add@plt>
   5797c:	mov	w1, #0x2                   	// #2
   57980:	mov	x0, x24
   57984:	bl	cb60 <__gmpz_sizeinbase@plt>
   57988:	ldr	x1, [sp, #96]
   5798c:	cmp	x0, x1
   57990:	b.hi	57928 <mpfr_grandom@@Base+0xfc>  // b.pmore
   57994:	mov	x25, x1
   57998:	ldr	x20, [sp, #136]
   5799c:	b	57ac8 <mpfr_grandom@@Base+0x29c>
   579a0:	ldr	x0, [x0]
   579a4:	add	x0, x0, #0xb
   579a8:	str	x0, [sp, #136]
   579ac:	add	x0, sp, #0x160
   579b0:	bl	bf90 <mpfr_mpz_init@plt>
   579b4:	add	x0, sp, #0x150
   579b8:	bl	bf90 <mpfr_mpz_init@plt>
   579bc:	add	x0, sp, #0x180
   579c0:	bl	bf90 <mpfr_mpz_init@plt>
   579c4:	add	x0, sp, #0x170
   579c8:	bl	bf90 <mpfr_mpz_init@plt>
   579cc:	add	x0, sp, #0x140
   579d0:	bl	bf90 <mpfr_mpz_init@plt>
   579d4:	add	x0, sp, #0x110
   579d8:	bl	bf90 <mpfr_mpz_init@plt>
   579dc:	add	x0, sp, #0x130
   579e0:	bl	bf90 <mpfr_mpz_init@plt>
   579e4:	add	x0, sp, #0x120
   579e8:	bl	bf90 <mpfr_mpz_init@plt>
   579ec:	mov	x1, #0x1                   	// #1
   579f0:	add	x0, sp, #0xf0
   579f4:	bl	ca80 <mpfr_init2@plt>
   579f8:	mov	x1, #0x1                   	// #1
   579fc:	add	x0, sp, #0xd0
   57a00:	bl	ca80 <mpfr_init2@plt>
   57a04:	mov	x1, #0x1                   	// #1
   57a08:	add	x0, sp, #0xb0
   57a0c:	bl	ca80 <mpfr_init2@plt>
   57a10:	b	578ec <mpfr_grandom@@Base+0xc0>
   57a14:	mov	x2, #0x20                  	// #32
   57a18:	mov	x1, x21
   57a1c:	mov	x0, x21
   57a20:	bl	c200 <__gmpz_mul_2exp@plt>
   57a24:	mov	x2, #0x20                  	// #32
   57a28:	mov	x1, x19
   57a2c:	mov	x0, x19
   57a30:	bl	c200 <__gmpz_mul_2exp@plt>
   57a34:	add	x26, sp, #0x180
   57a38:	mov	x2, #0x20                  	// #32
   57a3c:	mov	x1, x27
   57a40:	mov	x0, x26
   57a44:	bl	cd00 <__gmpz_urandomb@plt>
   57a48:	add	x28, sp, #0x170
   57a4c:	mov	x2, #0x20                  	// #32
   57a50:	mov	x1, x27
   57a54:	mov	x0, x28
   57a58:	bl	cd00 <__gmpz_urandomb@plt>
   57a5c:	mov	x2, x26
   57a60:	mov	x1, x21
   57a64:	mov	x0, x21
   57a68:	bl	c9c0 <__gmpz_add@plt>
   57a6c:	mov	x2, x28
   57a70:	mov	x1, x19
   57a74:	mov	x0, x19
   57a78:	bl	c9c0 <__gmpz_add@plt>
   57a7c:	add	x20, x20, #0x20
   57a80:	mov	x2, x21
   57a84:	mov	x1, x21
   57a88:	mov	x0, x23
   57a8c:	bl	bff0 <__gmpz_mul@plt>
   57a90:	mov	x2, x19
   57a94:	mov	x1, x19
   57a98:	mov	x0, x22
   57a9c:	bl	bff0 <__gmpz_mul@plt>
   57aa0:	mov	x2, x22
   57aa4:	mov	x1, x23
   57aa8:	mov	x0, x24
   57aac:	bl	c9c0 <__gmpz_add@plt>
   57ab0:	mov	w1, #0x2                   	// #2
   57ab4:	mov	x0, x24
   57ab8:	bl	cb60 <__gmpz_sizeinbase@plt>
   57abc:	add	x25, x25, #0x40
   57ac0:	cmp	x0, x25
   57ac4:	b.hi	57928 <mpfr_grandom@@Base+0xfc>  // b.pmore
   57ac8:	mov	x2, #0x1                   	// #1
   57acc:	mov	x1, x21
   57ad0:	mov	x0, x23
   57ad4:	bl	c360 <__gmpz_add_ui@plt>
   57ad8:	mov	x2, #0x1                   	// #1
   57adc:	mov	x1, x19
   57ae0:	mov	x0, x22
   57ae4:	bl	c360 <__gmpz_add_ui@plt>
   57ae8:	mov	x2, x23
   57aec:	mov	x1, x23
   57af0:	mov	x0, x23
   57af4:	bl	bff0 <__gmpz_mul@plt>
   57af8:	mov	x2, x22
   57afc:	mov	x1, x22
   57b00:	mov	x0, x22
   57b04:	bl	bff0 <__gmpz_mul@plt>
   57b08:	mov	x2, x22
   57b0c:	mov	x1, x23
   57b10:	mov	x0, x24
   57b14:	bl	c9c0 <__gmpz_add@plt>
   57b18:	mov	w1, #0x2                   	// #2
   57b1c:	mov	x0, x24
   57b20:	bl	cb60 <__gmpz_sizeinbase@plt>
   57b24:	cmp	x0, x25
   57b28:	b.ls	57b4c <mpfr_grandom@@Base+0x320>  // b.plast
   57b2c:	add	x1, x25, #0x1
   57b30:	cmp	x0, x1
   57b34:	b.ne	57a14 <mpfr_grandom@@Base+0x1e8>  // b.any
   57b38:	mov	x1, #0x0                   	// #0
   57b3c:	mov	x0, x24
   57b40:	bl	ba90 <__gmpz_scan1@plt>
   57b44:	cmp	x0, x25
   57b48:	b.ne	57a14 <mpfr_grandom@@Base+0x1e8>  // b.any
   57b4c:	add	x1, sp, #0x160
   57b50:	add	x19, sp, #0x130
   57b54:	mov	x2, x1
   57b58:	mov	x0, x19
   57b5c:	bl	bff0 <__gmpz_mul@plt>
   57b60:	add	x1, sp, #0x150
   57b64:	add	x21, sp, #0x120
   57b68:	mov	x2, x1
   57b6c:	mov	x0, x21
   57b70:	bl	bff0 <__gmpz_mul@plt>
   57b74:	mov	x2, x21
   57b78:	mov	x1, x19
   57b7c:	add	x0, sp, #0x110
   57b80:	bl	c9c0 <__gmpz_add@plt>
   57b84:	add	x19, sp, #0x180
   57b88:	mov	x2, #0x2                   	// #2
   57b8c:	mov	x1, x27
   57b90:	mov	x0, x19
   57b94:	bl	cd00 <__gmpz_urandomb@plt>
   57b98:	mov	x1, #0x0                   	// #0
   57b9c:	mov	x0, x19
   57ba0:	bl	bfe0 <__gmpz_tstbit@plt>
   57ba4:	str	w0, [sp, #96]
   57ba8:	mov	x1, #0x1                   	// #1
   57bac:	mov	x0, x19
   57bb0:	bl	bfe0 <__gmpz_tstbit@plt>
   57bb4:	str	w0, [sp, #136]
   57bb8:	add	x23, sp, #0xf0
   57bbc:	add	x19, sp, #0xd0
   57bc0:	add	x28, sp, #0x110
   57bc4:	add	x26, sp, #0xb0
   57bc8:	add	x22, sp, #0x160
   57bcc:	b	57ca0 <mpfr_grandom@@Base+0x474>
   57bd0:	mov	w2, #0x0                   	// #0
   57bd4:	mov	x1, x26
   57bd8:	mov	x0, x26
   57bdc:	bl	bd70 <mpfr_neg@plt>
   57be0:	b	57d74 <mpfr_grandom@@Base+0x548>
   57be4:	add	x0, sp, #0x90
   57be8:	mov	w2, #0x0                   	// #0
   57bec:	mov	x1, x0
   57bf0:	bl	bd70 <mpfr_neg@plt>
   57bf4:	b	57e14 <mpfr_grandom@@Base+0x5e8>
   57bf8:	mov	x2, #0x20                  	// #32
   57bfc:	mov	x1, x22
   57c00:	mov	x0, x22
   57c04:	bl	c200 <__gmpz_mul_2exp@plt>
   57c08:	add	x21, sp, #0x150
   57c0c:	mov	x2, #0x20                  	// #32
   57c10:	mov	x1, x21
   57c14:	mov	x0, x21
   57c18:	bl	c200 <__gmpz_mul_2exp@plt>
   57c1c:	add	x25, sp, #0x180
   57c20:	mov	x2, #0x20                  	// #32
   57c24:	mov	x1, x27
   57c28:	mov	x0, x25
   57c2c:	bl	cd00 <__gmpz_urandomb@plt>
   57c30:	add	x24, sp, #0x170
   57c34:	mov	x2, #0x20                  	// #32
   57c38:	mov	x1, x27
   57c3c:	mov	x0, x24
   57c40:	bl	cd00 <__gmpz_urandomb@plt>
   57c44:	mov	x2, x25
   57c48:	mov	x1, x22
   57c4c:	mov	x0, x22
   57c50:	bl	c9c0 <__gmpz_add@plt>
   57c54:	mov	x2, x24
   57c58:	mov	x1, x21
   57c5c:	mov	x0, x21
   57c60:	bl	c9c0 <__gmpz_add@plt>
   57c64:	add	x20, x20, #0x20
   57c68:	add	x24, sp, #0x130
   57c6c:	mov	x2, x22
   57c70:	mov	x1, x22
   57c74:	mov	x0, x24
   57c78:	bl	bff0 <__gmpz_mul@plt>
   57c7c:	add	x0, sp, #0x120
   57c80:	mov	x2, x21
   57c84:	mov	x1, x21
   57c88:	mov	x21, x0
   57c8c:	bl	bff0 <__gmpz_mul@plt>
   57c90:	mov	x2, x21
   57c94:	mov	x1, x24
   57c98:	mov	x0, x28
   57c9c:	bl	c9c0 <__gmpz_add@plt>
   57ca0:	mov	x25, x20
   57ca4:	lsl	x1, x20, #1
   57ca8:	mov	x0, x23
   57cac:	bl	bed0 <mpfr_set_prec@plt>
   57cb0:	mov	x1, x20
   57cb4:	mov	x0, x19
   57cb8:	bl	bed0 <mpfr_set_prec@plt>
   57cbc:	mov	w2, #0x0                   	// #0
   57cc0:	mov	x1, x28
   57cc4:	mov	x0, x23
   57cc8:	bl	c240 <mpfr_set_z@plt>
   57ccc:	mov	w3, #0x0                   	// #0
   57cd0:	neg	x2, x20, lsl #1
   57cd4:	mov	x1, x23
   57cd8:	mov	x0, x23
   57cdc:	bl	bb90 <mpfr_mul_2si@plt>
   57ce0:	mov	w2, #0x0                   	// #0
   57ce4:	mov	x1, x23
   57ce8:	mov	x0, x19
   57cec:	bl	c090 <mpfr_log@plt>
   57cf0:	mov	w2, #0x0                   	// #0
   57cf4:	mov	x1, x19
   57cf8:	mov	x0, x19
   57cfc:	bl	bd70 <mpfr_neg@plt>
   57d00:	mov	w3, #0x0                   	// #0
   57d04:	mov	x2, #0x1                   	// #1
   57d08:	mov	x1, x19
   57d0c:	mov	x0, x19
   57d10:	bl	bb90 <mpfr_mul_2si@plt>
   57d14:	mov	w3, #0x0                   	// #0
   57d18:	mov	x2, x23
   57d1c:	mov	x1, x19
   57d20:	mov	x0, x19
   57d24:	bl	c620 <mpfr_div@plt>
   57d28:	mov	w2, #0x0                   	// #0
   57d2c:	mov	x1, x19
   57d30:	mov	x0, x19
   57d34:	bl	c930 <mpfr_sqrt@plt>
   57d38:	mov	x1, x20
   57d3c:	mov	x0, x26
   57d40:	bl	bed0 <mpfr_set_prec@plt>
   57d44:	mov	w3, #0x0                   	// #0
   57d48:	mov	x2, x22
   57d4c:	mov	x1, x19
   57d50:	mov	x0, x26
   57d54:	bl	c4d0 <mpfr_mul_z@plt>
   57d58:	mov	w3, #0x0                   	// #0
   57d5c:	mov	x2, x20
   57d60:	mov	x1, x26
   57d64:	mov	x0, x26
   57d68:	bl	c8f0 <mpfr_div_2ui@plt>
   57d6c:	ldr	w0, [sp, #96]
   57d70:	cbnz	w0, 57bd0 <mpfr_grandom@@Base+0x3a4>
   57d74:	ldr	x1, [sp, #192]
   57d78:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57d7c:	cmp	x1, x0
   57d80:	b.le	57bf8 <mpfr_grandom@@Base+0x3cc>
   57d84:	sub	x24, x25, #0x2
   57d88:	ldr	w0, [sp, #124]
   57d8c:	cmp	w0, #0x0
   57d90:	cset	x0, eq  // eq = none
   57d94:	str	x0, [sp, #104]
   57d98:	ldr	x0, [sp, #112]
   57d9c:	ldr	x3, [x0]
   57da0:	cinc	x3, x3, eq  // eq = none
   57da4:	ldr	x0, [sp, #176]
   57da8:	add	x1, x0, #0x3e
   57dac:	subs	x0, x0, #0x1
   57db0:	csel	x1, x1, x0, mi  // mi = first
   57db4:	asr	x1, x1, #6
   57db8:	mov	x2, x24
   57dbc:	add	x1, x1, #0x1
   57dc0:	ldr	x0, [sp, #200]
   57dc4:	bl	c370 <mpfr_round_p@plt>
   57dc8:	cbz	w0, 57bf8 <mpfr_grandom@@Base+0x3cc>
   57dcc:	ldr	x0, [sp, #128]
   57dd0:	cbz	x0, 58114 <mpfr_grandom@@Base+0x8e8>
   57dd4:	add	x21, sp, #0x90
   57dd8:	mov	x1, x20
   57ddc:	mov	x0, x21
   57de0:	bl	bed0 <mpfr_set_prec@plt>
   57de4:	mov	w3, #0x0                   	// #0
   57de8:	add	x2, sp, #0x150
   57dec:	mov	x1, x19
   57df0:	mov	x0, x21
   57df4:	bl	c4d0 <mpfr_mul_z@plt>
   57df8:	mov	w3, #0x0                   	// #0
   57dfc:	mov	x2, x25
   57e00:	mov	x1, x21
   57e04:	mov	x0, x21
   57e08:	bl	c8f0 <mpfr_div_2ui@plt>
   57e0c:	ldr	w0, [sp, #136]
   57e10:	cbnz	w0, 57be4 <mpfr_grandom@@Base+0x3b8>
   57e14:	ldr	x1, [sp, #160]
   57e18:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57e1c:	cmp	x1, x0
   57e20:	b.le	57bf8 <mpfr_grandom@@Base+0x3cc>
   57e24:	ldr	x0, [sp, #128]
   57e28:	ldr	x3, [x0]
   57e2c:	ldr	x0, [sp, #144]
   57e30:	add	x1, x0, #0x3e
   57e34:	subs	x0, x0, #0x1
   57e38:	csel	x1, x1, x0, mi  // mi = first
   57e3c:	asr	x1, x1, #6
   57e40:	ldr	x0, [sp, #104]
   57e44:	add	x3, x0, x3
   57e48:	mov	x2, x24
   57e4c:	add	x1, x1, #0x1
   57e50:	ldr	x0, [sp, #168]
   57e54:	bl	c370 <mpfr_round_p@plt>
   57e58:	cbz	w0, 57bf8 <mpfr_grandom@@Base+0x3cc>
   57e5c:	ldr	w3, [sp, #184]
   57e60:	ldr	w20, [sp, #124]
   57e64:	mov	w2, w20
   57e68:	add	x1, sp, #0xb0
   57e6c:	ldr	x0, [sp, #112]
   57e70:	bl	c6a0 <mpfr_set4@plt>
   57e74:	mov	w19, w0
   57e78:	ldr	w3, [sp, #152]
   57e7c:	mov	w2, w20
   57e80:	add	x1, sp, #0x90
   57e84:	ldr	x21, [sp, #128]
   57e88:	mov	x0, x21
   57e8c:	bl	c6a0 <mpfr_set4@plt>
   57e90:	mov	w20, w0
   57e94:	ldr	x1, [x21, #16]
   57e98:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57e9c:	ldr	x2, [x0, #2512]
   57ea0:	add	x0, x0, #0x9d0
   57ea4:	blr	x2
   57ea8:	mrs	x2, tpidr_el0
   57eac:	ldr	x0, [x2, x0]
   57eb0:	cmp	x1, x0
   57eb4:	b.ge	57ed0 <mpfr_grandom@@Base+0x6a4>  // b.tcont
   57eb8:	ldr	w2, [sp, #124]
   57ebc:	mov	w1, w20
   57ec0:	ldr	x0, [sp, #128]
   57ec4:	bl	cb30 <mpfr_check_range@plt>
   57ec8:	mov	w20, w0
   57ecc:	b	57f18 <mpfr_grandom@@Base+0x6ec>
   57ed0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57ed4:	ldr	x2, [x0, #2544]
   57ed8:	add	x0, x0, #0x9f0
   57edc:	blr	x2
   57ee0:	mrs	x2, tpidr_el0
   57ee4:	ldr	x0, [x2, x0]
   57ee8:	cmp	x1, x0
   57eec:	b.gt	57eb8 <mpfr_grandom@@Base+0x68c>
   57ef0:	cbz	w20, 57f18 <mpfr_grandom@@Base+0x6ec>
   57ef4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57ef8:	ldr	x1, [x0, #2576]
   57efc:	add	x0, x0, #0xa10
   57f00:	blr	x1
   57f04:	mrs	x1, tpidr_el0
   57f08:	add	x0, x1, x0
   57f0c:	ldr	w1, [x0]
   57f10:	orr	w1, w1, #0x8
   57f14:	str	w1, [x0]
   57f18:	ldr	x0, [sp, #112]
   57f1c:	ldr	x1, [x0, #16]
   57f20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57f24:	ldr	x2, [x0, #2512]
   57f28:	add	x0, x0, #0x9d0
   57f2c:	blr	x2
   57f30:	mrs	x2, tpidr_el0
   57f34:	ldr	x0, [x2, x0]
   57f38:	cmp	x0, x1
   57f3c:	b.gt	58174 <mpfr_grandom@@Base+0x948>
   57f40:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57f44:	ldr	x2, [x0, #2544]
   57f48:	add	x0, x0, #0x9f0
   57f4c:	blr	x2
   57f50:	mrs	x2, tpidr_el0
   57f54:	ldr	x0, [x2, x0]
   57f58:	cmp	x0, x1
   57f5c:	b.ge	58064 <mpfr_grandom@@Base+0x838>  // b.tcont
   57f60:	ldr	w2, [sp, #124]
   57f64:	mov	w1, w19
   57f68:	ldr	x0, [sp, #112]
   57f6c:	bl	cb30 <mpfr_check_range@plt>
   57f70:	mov	w19, w0
   57f74:	ldr	x0, [sp, #128]
   57f78:	cbz	x0, 58078 <mpfr_grandom@@Base+0x84c>
   57f7c:	b	58070 <mpfr_grandom@@Base+0x844>
   57f80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   57f84:	ldr	x1, [x0, #2576]
   57f88:	add	x0, x0, #0xa10
   57f8c:	blr	x1
   57f90:	mrs	x1, tpidr_el0
   57f94:	add	x0, x1, x0
   57f98:	ldr	w1, [x0]
   57f9c:	orr	w1, w1, #0x8
   57fa0:	str	w1, [x0]
   57fa4:	ldr	x0, [sp, #128]
   57fa8:	cbnz	x0, 58070 <mpfr_grandom@@Base+0x844>
   57fac:	add	x0, sp, #0xb0
   57fb0:	bl	c070 <mpfr_clear@plt>
   57fb4:	add	x0, sp, #0xd0
   57fb8:	bl	c070 <mpfr_clear@plt>
   57fbc:	add	x0, sp, #0xf0
   57fc0:	bl	c070 <mpfr_clear@plt>
   57fc4:	add	x0, sp, #0x120
   57fc8:	bl	c170 <mpfr_mpz_clear@plt>
   57fcc:	add	x0, sp, #0x130
   57fd0:	bl	c170 <mpfr_mpz_clear@plt>
   57fd4:	add	x0, sp, #0x110
   57fd8:	bl	c170 <mpfr_mpz_clear@plt>
   57fdc:	add	x0, sp, #0x140
   57fe0:	bl	c170 <mpfr_mpz_clear@plt>
   57fe4:	add	x0, sp, #0x170
   57fe8:	bl	c170 <mpfr_mpz_clear@plt>
   57fec:	add	x0, sp, #0x180
   57ff0:	bl	c170 <mpfr_mpz_clear@plt>
   57ff4:	add	x0, sp, #0x150
   57ff8:	bl	c170 <mpfr_mpz_clear@plt>
   57ffc:	add	x0, sp, #0x160
   58000:	bl	c170 <mpfr_mpz_clear@plt>
   58004:	b	580d4 <mpfr_grandom@@Base+0x8a8>
   58008:	add	x0, sp, #0xb0
   5800c:	bl	c070 <mpfr_clear@plt>
   58010:	add	x0, sp, #0xd0
   58014:	bl	c070 <mpfr_clear@plt>
   58018:	add	x0, sp, #0xf0
   5801c:	bl	c070 <mpfr_clear@plt>
   58020:	add	x0, sp, #0x120
   58024:	bl	c170 <mpfr_mpz_clear@plt>
   58028:	add	x0, sp, #0x130
   5802c:	bl	c170 <mpfr_mpz_clear@plt>
   58030:	add	x0, sp, #0x110
   58034:	bl	c170 <mpfr_mpz_clear@plt>
   58038:	add	x0, sp, #0x140
   5803c:	bl	c170 <mpfr_mpz_clear@plt>
   58040:	add	x0, sp, #0x170
   58044:	bl	c170 <mpfr_mpz_clear@plt>
   58048:	add	x0, sp, #0x180
   5804c:	bl	c170 <mpfr_mpz_clear@plt>
   58050:	add	x0, sp, #0x150
   58054:	bl	c170 <mpfr_mpz_clear@plt>
   58058:	add	x0, sp, #0x160
   5805c:	bl	c170 <mpfr_mpz_clear@plt>
   58060:	b	580e0 <mpfr_grandom@@Base+0x8b4>
   58064:	cbnz	w19, 57f80 <mpfr_grandom@@Base+0x754>
   58068:	ldr	x0, [sp, #128]
   5806c:	cbz	x0, 58008 <mpfr_grandom@@Base+0x7dc>
   58070:	add	x0, sp, #0x90
   58074:	bl	c070 <mpfr_clear@plt>
   58078:	add	x0, sp, #0xb0
   5807c:	bl	c070 <mpfr_clear@plt>
   58080:	add	x0, sp, #0xd0
   58084:	bl	c070 <mpfr_clear@plt>
   58088:	add	x0, sp, #0xf0
   5808c:	bl	c070 <mpfr_clear@plt>
   58090:	add	x0, sp, #0x120
   58094:	bl	c170 <mpfr_mpz_clear@plt>
   58098:	add	x0, sp, #0x130
   5809c:	bl	c170 <mpfr_mpz_clear@plt>
   580a0:	add	x0, sp, #0x110
   580a4:	bl	c170 <mpfr_mpz_clear@plt>
   580a8:	add	x0, sp, #0x140
   580ac:	bl	c170 <mpfr_mpz_clear@plt>
   580b0:	add	x0, sp, #0x170
   580b4:	bl	c170 <mpfr_mpz_clear@plt>
   580b8:	add	x0, sp, #0x180
   580bc:	bl	c170 <mpfr_mpz_clear@plt>
   580c0:	add	x0, sp, #0x150
   580c4:	bl	c170 <mpfr_mpz_clear@plt>
   580c8:	add	x0, sp, #0x160
   580cc:	bl	c170 <mpfr_mpz_clear@plt>
   580d0:	cbz	w19, 580e0 <mpfr_grandom@@Base+0x8b4>
   580d4:	cmp	w19, #0x0
   580d8:	cset	w19, le
   580dc:	add	w19, w19, #0x1
   580e0:	cbz	w20, 580f4 <mpfr_grandom@@Base+0x8c8>
   580e4:	cmp	w20, #0x0
   580e8:	mov	w20, #0x4                   	// #4
   580ec:	mov	w0, #0x8                   	// #8
   580f0:	csel	w20, w20, w0, gt
   580f4:	orr	w0, w19, w20
   580f8:	ldp	x19, x20, [sp, #16]
   580fc:	ldp	x21, x22, [sp, #32]
   58100:	ldp	x23, x24, [sp, #48]
   58104:	ldp	x25, x26, [sp, #64]
   58108:	ldp	x27, x28, [sp, #80]
   5810c:	ldp	x29, x30, [sp], #400
   58110:	ret
   58114:	ldr	w3, [sp, #184]
   58118:	ldr	w2, [sp, #124]
   5811c:	add	x1, sp, #0xb0
   58120:	ldr	x20, [sp, #112]
   58124:	mov	x0, x20
   58128:	bl	c6a0 <mpfr_set4@plt>
   5812c:	mov	w19, w0
   58130:	ldr	x1, [x20, #16]
   58134:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58138:	ldr	x2, [x0, #2512]
   5813c:	add	x0, x0, #0x9d0
   58140:	blr	x2
   58144:	mrs	x2, tpidr_el0
   58148:	ldr	x0, [x2, x0]
   5814c:	mov	w20, #0x0                   	// #0
   58150:	cmp	x0, x1
   58154:	b.le	57f40 <mpfr_grandom@@Base+0x714>
   58158:	ldr	w2, [sp, #124]
   5815c:	mov	w1, w19
   58160:	ldr	x0, [sp, #112]
   58164:	bl	cb30 <mpfr_check_range@plt>
   58168:	mov	w19, w0
   5816c:	mov	w20, #0x0                   	// #0
   58170:	b	58078 <mpfr_grandom@@Base+0x84c>
   58174:	ldr	w2, [sp, #124]
   58178:	mov	w1, w19
   5817c:	ldr	x0, [sp, #112]
   58180:	bl	cb30 <mpfr_check_range@plt>
   58184:	mov	w19, w0
   58188:	b	58070 <mpfr_grandom@@Base+0x844>

000000000005818c <__gmpfr_fpif_export@@Base>:
   5818c:	cbz	x0, 5847c <__gmpfr_fpif_export@@Base+0x2f0>
   58190:	stp	x29, x30, [sp, #-96]!
   58194:	mov	x29, sp
   58198:	stp	x19, x20, [sp, #16]
   5819c:	stp	x23, x24, [sp, #48]
   581a0:	mov	x23, x0
   581a4:	mov	x20, x1
   581a8:	ldr	x1, [x1]
   581ac:	asr	x0, x1, #3
   581b0:	cmp	x1, #0xf8
   581b4:	cset	x19, gt
   581b8:	add	x0, x0, #0xb
   581bc:	add	x19, x0, x19, lsl #3
   581c0:	mov	x0, x19
   581c4:	bl	ccf0 <mpfr_allocate_func@plt>
   581c8:	mov	x24, x0
   581cc:	cbz	x0, 58484 <__gmpfr_fpif_export@@Base+0x2f8>
   581d0:	stp	x21, x22, [sp, #32]
   581d4:	stp	x25, x26, [sp, #64]
   581d8:	ldr	x22, [x20]
   581dc:	str	x22, [sp, #88]
   581e0:	cmp	x22, #0xf8
   581e4:	b.le	584a8 <__gmpfr_fpif_export@@Base+0x31c>
   581e8:	sub	x21, x22, #0xf9
   581ec:	mov	x25, #0x0                   	// #0
   581f0:	lsr	x21, x21, #8
   581f4:	mov	x2, x25
   581f8:	add	x25, x25, #0x1
   581fc:	cbnz	x21, 581f0 <__gmpfr_fpif_export@@Base+0x64>
   58200:	add	x26, x2, #0x2
   58204:	cmp	x19, x26
   58208:	b.cc	585ac <__gmpfr_fpif_export@@Base+0x420>  // b.lo, b.ul, b.last
   5820c:	sub	w1, w25, #0x1
   58210:	mov	x0, x24
   58214:	strb	w1, [x0], #1
   58218:	sub	x22, x22, #0xf9
   5821c:	str	x22, [sp, #88]
   58220:	mov	x2, x25
   58224:	add	x1, sp, #0x58
   58228:	bl	ba10 <memcpy@plt>
   5822c:	mov	x21, x26
   58230:	b	584b8 <__gmpfr_fpif_export@@Base+0x32c>
   58234:	mov	x1, x19
   58238:	mov	x0, x24
   5823c:	bl	cc20 <mpfr_free_func@plt>
   58240:	mov	w0, #0xffffffff            	// #-1
   58244:	ldp	x21, x22, [sp, #32]
   58248:	ldp	x25, x26, [sp, #64]
   5824c:	b	583f4 <__gmpfr_fpif_export@@Base+0x268>
   58250:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   58254:	add	x2, x2, #0xb50
   58258:	mov	w1, #0x139                 	// #313
   5825c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   58260:	add	x0, x0, #0xb68
   58264:	bl	cb40 <mpfr_assert_fail@plt>
   58268:	orr	x0, x0, x1
   5826c:	str	x0, [sp, #88]
   58270:	b	58544 <__gmpfr_fpif_export@@Base+0x3b8>
   58274:	str	x0, [sp, #88]
   58278:	cbz	x19, 58288 <__gmpfr_fpif_export@@Base+0xfc>
   5827c:	mov	x21, x24
   58280:	mov	x22, #0x1                   	// #1
   58284:	b	582c8 <__gmpfr_fpif_export@@Base+0x13c>
   58288:	mov	x25, x19
   5828c:	mov	x22, #0x1                   	// #1
   58290:	b	5829c <__gmpfr_fpif_export@@Base+0x110>
   58294:	mov	x25, x19
   58298:	mov	x22, #0x1                   	// #1
   5829c:	mov	x2, x22
   582a0:	mov	x1, x19
   582a4:	mov	x0, x24
   582a8:	bl	c1c0 <mpfr_reallocate_func@plt>
   582ac:	mov	x21, x0
   582b0:	cbz	x0, 5848c <__gmpfr_fpif_export@@Base+0x300>
   582b4:	ldr	x0, [x20, #16]
   582b8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   582bc:	cmp	x0, x1
   582c0:	b.le	58568 <__gmpfr_fpif_export@@Base+0x3dc>
   582c4:	cbnz	x25, 58404 <__gmpfr_fpif_export@@Base+0x278>
   582c8:	ldr	x0, [sp, #88]
   582cc:	strb	w0, [x21]
   582d0:	ldr	w0, [x20, #8]
   582d4:	tbnz	w0, #31, 5842c <__gmpfr_fpif_export@@Base+0x2a0>
   582d8:	cmp	x19, x22
   582dc:	csel	x19, x19, x22, cs  // cs = hs, nlast
   582e0:	mov	x3, x23
   582e4:	mov	x2, #0x1                   	// #1
   582e8:	mov	x1, x22
   582ec:	mov	x0, x21
   582f0:	bl	c8c0 <fwrite@plt>
   582f4:	cmp	w0, #0x1
   582f8:	b.ne	5843c <__gmpfr_fpif_export@@Base+0x2b0>  // b.any
   582fc:	ldr	x1, [x20, #16]
   58300:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   58304:	cmp	x1, x0
   58308:	b.le	583dc <__gmpfr_fpif_export@@Base+0x250>
   5830c:	ldr	x24, [x20]
   58310:	add	x24, x24, #0x7
   58314:	asr	x24, x24, #3
   58318:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   5831c:	ldr	x0, [x0, #4032]
   58320:	ldr	w25, [x0]
   58324:	asr	w25, w25, #3
   58328:	sxtw	x25, w25
   5832c:	udiv	x1, x24, x25
   58330:	msub	x22, x1, x25, x24
   58334:	sub	x26, x25, #0x1
   58338:	add	x26, x26, x24
   5833c:	udiv	x26, x26, x25
   58340:	cmp	x19, x24
   58344:	b.cs	58360 <__gmpfr_fpif_export@@Base+0x1d4>  // b.hs, b.nlast
   58348:	mov	x2, x24
   5834c:	mov	x1, x19
   58350:	mov	x0, x21
   58354:	bl	c1c0 <mpfr_reallocate_func@plt>
   58358:	mov	x21, x0
   5835c:	cbz	x0, 58458 <__gmpfr_fpif_export@@Base+0x2cc>
   58360:	ldr	x1, [x20, #24]
   58364:	cbz	x22, 58388 <__gmpfr_fpif_export@@Base+0x1fc>
   58368:	mov	x0, #0x0                   	// #0
   5836c:	add	x1, x1, #0x7
   58370:	neg	x2, x0
   58374:	ldrb	w2, [x1, x2]
   58378:	strb	w2, [x21, x0]
   5837c:	add	x0, x0, #0x1
   58380:	cmp	x22, x0
   58384:	b.ne	58370 <__gmpfr_fpif_export@@Base+0x1e4>  // b.any
   58388:	cmp	x22, #0x0
   5838c:	cset	x0, ne  // ne = any
   58390:	cmp	x26, x0
   58394:	b.ls	583b8 <__gmpfr_fpif_export@@Base+0x22c>  // b.plast
   58398:	add	x1, x21, x22
   5839c:	ldr	x2, [x20, #24]
   583a0:	ldr	x2, [x2, x0, lsl #3]
   583a4:	str	x2, [x1]
   583a8:	add	x0, x0, #0x1
   583ac:	add	x1, x1, x25
   583b0:	cmp	x26, x0
   583b4:	b.ne	5839c <__gmpfr_fpif_export@@Base+0x210>  // b.any
   583b8:	cmp	x19, x24
   583bc:	csel	x19, x19, x24, cs  // cs = hs, nlast
   583c0:	mov	x3, x23
   583c4:	mov	x2, #0x1                   	// #1
   583c8:	mov	x1, x24
   583cc:	mov	x0, x21
   583d0:	bl	c8c0 <fwrite@plt>
   583d4:	cmp	w0, #0x1
   583d8:	b.ne	58460 <__gmpfr_fpif_export@@Base+0x2d4>  // b.any
   583dc:	mov	x1, x19
   583e0:	mov	x0, x21
   583e4:	bl	cc20 <mpfr_free_func@plt>
   583e8:	mov	w0, #0x0                   	// #0
   583ec:	ldp	x21, x22, [sp, #32]
   583f0:	ldp	x25, x26, [sp, #64]
   583f4:	ldp	x19, x20, [sp, #16]
   583f8:	ldp	x23, x24, [sp, #48]
   583fc:	ldp	x29, x30, [sp], #96
   58400:	ret
   58404:	add	w1, w25, #0x5e
   58408:	mov	x0, x21
   5840c:	strb	w1, [x0], #1
   58410:	mov	x2, x25
   58414:	add	x1, sp, #0x58
   58418:	bl	ba10 <memcpy@plt>
   5841c:	b	582d0 <__gmpfr_fpif_export@@Base+0x144>
   58420:	mov	w0, #0x77                  	// #119
   58424:	strb	w0, [x21]
   58428:	b	582d0 <__gmpfr_fpif_export@@Base+0x144>
   5842c:	ldrb	w0, [x21]
   58430:	orr	w0, w0, #0xffffff80
   58434:	strb	w0, [x21]
   58438:	b	582d8 <__gmpfr_fpif_export@@Base+0x14c>
   5843c:	mov	x1, x19
   58440:	mov	x0, x21
   58444:	bl	cc20 <mpfr_free_func@plt>
   58448:	mov	w0, #0xffffffff            	// #-1
   5844c:	ldp	x21, x22, [sp, #32]
   58450:	ldp	x25, x26, [sp, #64]
   58454:	b	583f4 <__gmpfr_fpif_export@@Base+0x268>
   58458:	mov	x24, #0x0                   	// #0
   5845c:	b	583b8 <__gmpfr_fpif_export@@Base+0x22c>
   58460:	mov	x1, x19
   58464:	mov	x0, x21
   58468:	bl	cc20 <mpfr_free_func@plt>
   5846c:	mov	w0, #0xffffffff            	// #-1
   58470:	ldp	x21, x22, [sp, #32]
   58474:	ldp	x25, x26, [sp, #64]
   58478:	b	583f4 <__gmpfr_fpif_export@@Base+0x268>
   5847c:	mov	w0, #0xffffffff            	// #-1
   58480:	ret
   58484:	mov	w0, #0xffffffff            	// #-1
   58488:	b	583f4 <__gmpfr_fpif_export@@Base+0x268>
   5848c:	mov	x1, x19
   58490:	mov	x0, x24
   58494:	bl	cc20 <mpfr_free_func@plt>
   58498:	mov	w0, #0xffffffff            	// #-1
   5849c:	ldp	x21, x22, [sp, #32]
   584a0:	ldp	x25, x26, [sp, #64]
   584a4:	b	583f4 <__gmpfr_fpif_export@@Base+0x268>
   584a8:	cbz	x19, 58590 <__gmpfr_fpif_export@@Base+0x404>
   584ac:	add	w22, w22, #0x7
   584b0:	strb	w22, [x24]
   584b4:	mov	x21, #0x1                   	// #1
   584b8:	cmp	x19, x21
   584bc:	csel	x19, x19, x21, cs  // cs = hs, nlast
   584c0:	mov	x3, x23
   584c4:	mov	x2, #0x1                   	// #1
   584c8:	mov	x1, x21
   584cc:	mov	x0, x24
   584d0:	bl	c8c0 <fwrite@plt>
   584d4:	cmp	w0, #0x1
   584d8:	b.ne	58234 <__gmpfr_fpif_export@@Base+0xa8>  // b.any
   584dc:	ldr	x2, [x20, #16]
   584e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   584e4:	cmp	x2, x0
   584e8:	b.le	58558 <__gmpfr_fpif_export@@Base+0x3cc>
   584ec:	add	x0, x2, #0x2f
   584f0:	cmp	x0, #0x5e
   584f4:	b.ls	58274 <__gmpfr_fpif_export@@Base+0xe8>  // b.plast
   584f8:	mov	x0, #0xffffffffffffffd1    	// #-47
   584fc:	sub	x1, x0, x2
   58500:	add	x0, x2, x0
   58504:	cmp	x2, #0x0
   58508:	csel	x0, x0, x1, ge  // ge = tcont
   5850c:	str	x0, [sp, #88]
   58510:	lsl	x3, x0, #1
   58514:	mov	x25, #0x0                   	// #0
   58518:	lsr	x3, x3, #8
   5851c:	mov	x22, x25
   58520:	add	x25, x25, #0x1
   58524:	cbnz	x3, 58518 <__gmpfr_fpif_export@@Base+0x38c>
   58528:	cmp	x25, #0x10
   5852c:	b.hi	58250 <__gmpfr_fpif_export@@Base+0xc4>  // b.pmore
   58530:	lsl	w1, w25, #3
   58534:	sub	w1, w1, #0x1
   58538:	mov	x3, #0x1                   	// #1
   5853c:	lsl	x1, x3, x1
   58540:	tbnz	x2, #63, 58268 <__gmpfr_fpif_export@@Base+0xdc>
   58544:	add	x22, x22, #0x2
   58548:	mov	x21, x24
   5854c:	cmp	x19, x22
   58550:	b.cs	582c4 <__gmpfr_fpif_export@@Base+0x138>  // b.hs, b.nlast
   58554:	b	5829c <__gmpfr_fpif_export@@Base+0x110>
   58558:	cbz	x19, 58294 <__gmpfr_fpif_export@@Base+0x108>
   5855c:	ldr	x0, [x20, #16]
   58560:	mov	x21, x24
   58564:	mov	x22, #0x1                   	// #1
   58568:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5856c:	cmp	x0, x1
   58570:	b.eq	58420 <__gmpfr_fpif_export@@Base+0x294>  // b.none
   58574:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   58578:	cmp	x0, x1
   5857c:	mov	w0, #0x78                  	// #120
   58580:	mov	w1, #0x79                  	// #121
   58584:	csel	w0, w0, w1, eq  // eq = none
   58588:	strb	w0, [x21]
   5858c:	b	582d0 <__gmpfr_fpif_export@@Base+0x144>
   58590:	mov	x2, #0x1                   	// #1
   58594:	mov	x1, x19
   58598:	bl	c1c0 <mpfr_reallocate_func@plt>
   5859c:	mov	x24, x0
   585a0:	cbnz	x0, 584ac <__gmpfr_fpif_export@@Base+0x320>
   585a4:	mov	x21, x19
   585a8:	b	584b8 <__gmpfr_fpif_export@@Base+0x32c>
   585ac:	mov	x2, x26
   585b0:	mov	x1, x19
   585b4:	mov	x0, x24
   585b8:	bl	c1c0 <mpfr_reallocate_func@plt>
   585bc:	mov	x24, x0
   585c0:	cbz	x0, 584b8 <__gmpfr_fpif_export@@Base+0x32c>
   585c4:	b	5820c <__gmpfr_fpif_export@@Base+0x80>

00000000000585c8 <__gmpfr_fpif_import@@Base>:
   585c8:	cbz	x1, 58970 <__gmpfr_fpif_import@@Base+0x3a8>
   585cc:	stp	x29, x30, [sp, #-64]!
   585d0:	mov	x29, sp
   585d4:	stp	x19, x20, [sp, #16]
   585d8:	stp	x21, x22, [sp, #32]
   585dc:	mov	x19, x0
   585e0:	mov	x22, x1
   585e4:	mov	x3, x1
   585e8:	mov	x2, #0x1                   	// #1
   585ec:	mov	x1, x2
   585f0:	add	x0, sp, #0x38
   585f4:	bl	c660 <fread@plt>
   585f8:	cmp	x0, #0x1
   585fc:	b.ne	58968 <__gmpfr_fpif_import@@Base+0x3a0>  // b.any
   58600:	ldrb	w20, [sp, #56]
   58604:	cmp	x20, #0x7
   58608:	b.hi	58678 <__gmpfr_fpif_import@@Base+0xb0>  // b.pmore
   5860c:	add	x20, x20, #0x1
   58610:	mov	x3, x22
   58614:	mov	x2, #0x1                   	// #1
   58618:	mov	x1, x20
   5861c:	add	x0, sp, #0x38
   58620:	bl	c660 <fread@plt>
   58624:	cmp	x0, #0x1
   58628:	b.ne	58968 <__gmpfr_fpif_import@@Base+0x3a0>  // b.any
   5862c:	cmp	x20, #0x8
   58630:	b.ne	5863c <__gmpfr_fpif_import@@Base+0x74>  // b.any
   58634:	ldrsb	w0, [sp, #63]
   58638:	tbnz	w0, #31, 58968 <__gmpfr_fpif_import@@Base+0x3a0>
   5863c:	str	xzr, [sp, #48]
   58640:	mov	x2, x20
   58644:	add	x1, sp, #0x38
   58648:	add	x0, sp, #0x30
   5864c:	bl	ba10 <memcpy@plt>
   58650:	ldr	x20, [sp, #48]
   58654:	adds	x20, x20, #0xf9
   58658:	mov	x0, #0xfffffffffffffeff    	// #-257
   5865c:	movk	x0, #0x7fff, lsl #48
   58660:	ccmp	x20, x0, #0x0, ne  // ne = any
   58664:	b.gt	5891c <__gmpfr_fpif_import@@Base+0x354>
   58668:	mov	x1, x20
   5866c:	mov	x0, x19
   58670:	bl	bed0 <mpfr_set_prec@plt>
   58674:	b	58688 <__gmpfr_fpif_import@@Base+0xc0>
   58678:	sub	x20, x20, #0x7
   5867c:	mov	x1, x20
   58680:	mov	x0, x19
   58684:	bl	bed0 <mpfr_set_prec@plt>
   58688:	mov	x3, x22
   5868c:	mov	x2, #0x1                   	// #1
   58690:	mov	x1, x2
   58694:	add	x0, sp, #0x38
   58698:	bl	c660 <fread@plt>
   5869c:	cmp	x0, #0x1
   586a0:	b.ne	58778 <__gmpfr_fpif_import@@Base+0x1b0>  // b.any
   586a4:	ldrb	w0, [sp, #56]
   586a8:	mov	w1, #0x1                   	// #1
   586ac:	tst	x0, #0x80
   586b0:	cneg	w1, w1, ne  // ne = any
   586b4:	str	w1, [x19, #8]
   586b8:	and	x0, x0, #0x7f
   586bc:	sub	x1, x0, #0x5f
   586c0:	cmp	x1, #0x17
   586c4:	b.hi	58788 <__gmpfr_fpif_import@@Base+0x1c0>  // b.pmore
   586c8:	sub	x21, x0, #0x5e
   586cc:	cmp	x21, #0x8
   586d0:	b.hi	58778 <__gmpfr_fpif_import@@Base+0x1b0>  // b.pmore
   586d4:	mov	x3, x22
   586d8:	mov	x2, #0x1                   	// #1
   586dc:	mov	x1, x21
   586e0:	add	x0, sp, #0x38
   586e4:	bl	c660 <fread@plt>
   586e8:	cmp	x0, #0x1
   586ec:	b.ne	58778 <__gmpfr_fpif_import@@Base+0x1b0>  // b.any
   586f0:	str	xzr, [sp, #48]
   586f4:	mov	x2, x21
   586f8:	add	x1, sp, #0x38
   586fc:	add	x0, sp, #0x30
   58700:	bl	ba10 <memcpy@plt>
   58704:	ldr	x1, [sp, #48]
   58708:	lsl	w0, w21, #3
   5870c:	sub	w0, w0, #0x1
   58710:	mov	x21, #0x1                   	// #1
   58714:	lsl	x0, x21, x0
   58718:	and	x2, x0, x1
   5871c:	bic	x0, x1, x0
   58720:	add	x0, x0, #0x2f
   58724:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   58728:	cmp	x0, x1
   5872c:	b.hi	58778 <__gmpfr_fpif_import@@Base+0x1b0>  // b.pmore
   58730:	cmp	x2, #0x0
   58734:	cneg	x1, x0, ne  // ne = any
   58738:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5873c:	ldr	x2, [x0, #2512]
   58740:	add	x0, x0, #0x9d0
   58744:	blr	x2
   58748:	mrs	x2, tpidr_el0
   5874c:	ldr	x0, [x2, x0]
   58750:	cmp	x0, x1
   58754:	b.gt	58778 <__gmpfr_fpif_import@@Base+0x1b0>
   58758:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5875c:	ldr	x2, [x0, #2544]
   58760:	add	x0, x0, #0x9f0
   58764:	blr	x2
   58768:	mrs	x2, tpidr_el0
   5876c:	ldr	x0, [x2, x0]
   58770:	cmp	x1, x0
   58774:	b.le	58940 <__gmpfr_fpif_import@@Base+0x378>
   58778:	mov	x0, x19
   5877c:	bl	bb50 <mpfr_set_nan@plt>
   58780:	mov	w0, #0xffffffff            	// #-1
   58784:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   58788:	cmp	x0, #0x77
   5878c:	b.eq	587f4 <__gmpfr_fpif_import@@Base+0x22c>  // b.none
   58790:	cmp	x0, #0x78
   58794:	b.eq	58800 <__gmpfr_fpif_import@@Base+0x238>  // b.none
   58798:	cmp	x0, #0x79
   5879c:	b.eq	5880c <__gmpfr_fpif_import@@Base+0x244>  // b.none
   587a0:	cmp	x0, #0x5e
   587a4:	b.gt	58778 <__gmpfr_fpif_import@@Base+0x1b0>
   587a8:	sub	x2, x0, #0x2f
   587ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   587b0:	ldr	x1, [x0, #2512]
   587b4:	add	x0, x0, #0x9d0
   587b8:	blr	x1
   587bc:	mrs	x1, tpidr_el0
   587c0:	ldr	x0, [x1, x0]
   587c4:	cmp	x2, x0
   587c8:	b.lt	58778 <__gmpfr_fpif_import@@Base+0x1b0>  // b.tstop
   587cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   587d0:	ldr	x1, [x0, #2544]
   587d4:	add	x0, x0, #0x9f0
   587d8:	blr	x1
   587dc:	mrs	x1, tpidr_el0
   587e0:	ldr	x0, [x1, x0]
   587e4:	cmp	x2, x0
   587e8:	b.gt	58778 <__gmpfr_fpif_import@@Base+0x1b0>
   587ec:	str	x2, [x19, #16]
   587f0:	b	58944 <__gmpfr_fpif_import@@Base+0x37c>
   587f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   587f8:	str	x0, [x19, #16]
   587fc:	b	58944 <__gmpfr_fpif_import@@Base+0x37c>
   58800:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   58804:	str	x0, [x19, #16]
   58808:	b	58944 <__gmpfr_fpif_import@@Base+0x37c>
   5880c:	mov	x0, #0x2                   	// #2
   58810:	movk	x0, #0x8000, lsl #48
   58814:	str	x0, [x19, #16]
   58818:	b	58944 <__gmpfr_fpif_import@@Base+0x37c>
   5881c:	add	x20, x20, #0x7
   58820:	asr	x20, x20, #3
   58824:	mov	x0, x20
   58828:	bl	ccf0 <mpfr_allocate_func@plt>
   5882c:	mov	x21, x0
   58830:	cbz	x0, 588c0 <__gmpfr_fpif_import@@Base+0x2f8>
   58834:	mov	x3, x22
   58838:	mov	x2, #0x1                   	// #1
   5883c:	mov	x1, x20
   58840:	bl	c660 <fread@plt>
   58844:	cmp	w0, #0x1
   58848:	b.ne	588d0 <__gmpfr_fpif_import@@Base+0x308>  // b.any
   5884c:	ldr	x0, [x19]
   58850:	add	x0, x0, #0x7
   58854:	asr	x1, x0, #3
   58858:	cmp	x20, x0, asr #3
   5885c:	b.cc	58924 <__gmpfr_fpif_import@@Base+0x35c>  // b.lo, b.ul, b.last
   58860:	adrp	x0, 80000 <__gmpfr_l2b@@Base+0x200>
   58864:	ldr	x0, [x0, #4032]
   58868:	ldr	w4, [x0]
   5886c:	asr	w4, w4, #3
   58870:	sxtw	x4, w4
   58874:	udiv	x2, x1, x4
   58878:	msub	x2, x2, x4, x1
   5887c:	cbnz	x2, 588ec <__gmpfr_fpif_import@@Base+0x324>
   58880:	cmp	x2, #0x0
   58884:	cset	x3, ne  // ne = any
   58888:	cmp	x1, x2
   5888c:	b.ls	588b0 <__gmpfr_fpif_import@@Base+0x2e8>  // b.plast
   58890:	lsl	x3, x3, #3
   58894:	ldr	x5, [x21, x2]
   58898:	ldr	x0, [x19, #24]
   5889c:	str	x5, [x0, x3]
   588a0:	add	x2, x2, x4
   588a4:	add	x3, x3, #0x8
   588a8:	cmp	x1, x2
   588ac:	b.hi	58894 <__gmpfr_fpif_import@@Base+0x2cc>  // b.pmore
   588b0:	mov	x0, x21
   588b4:	bl	cc20 <mpfr_free_func@plt>
   588b8:	mov	w0, #0x0                   	// #0
   588bc:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   588c0:	mov	x0, x19
   588c4:	bl	bb50 <mpfr_set_nan@plt>
   588c8:	mov	w0, #0xffffffff            	// #-1
   588cc:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   588d0:	mov	x1, x20
   588d4:	mov	x0, x21
   588d8:	bl	cc20 <mpfr_free_func@plt>
   588dc:	mov	x0, x19
   588e0:	bl	bb50 <mpfr_set_nan@plt>
   588e4:	mov	w0, #0xffffffff            	// #-1
   588e8:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   588ec:	ldr	x0, [x19, #24]
   588f0:	str	xzr, [x0]
   588f4:	ldr	x6, [x19, #24]
   588f8:	mov	x0, #0x0                   	// #0
   588fc:	add	x6, x6, #0x7
   58900:	ldrb	w5, [x21, x0]
   58904:	neg	x3, x0
   58908:	strb	w5, [x6, x3]
   5890c:	add	x0, x0, #0x1
   58910:	cmp	x2, x0
   58914:	b.ne	58900 <__gmpfr_fpif_import@@Base+0x338>  // b.any
   58918:	b	58880 <__gmpfr_fpif_import@@Base+0x2b8>
   5891c:	mov	w0, #0xffffffff            	// #-1
   58920:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   58924:	mov	x1, #0x0                   	// #0
   58928:	mov	x0, x21
   5892c:	bl	cc20 <mpfr_free_func@plt>
   58930:	mov	x0, x19
   58934:	bl	bb50 <mpfr_set_nan@plt>
   58938:	mov	w0, #0xffffffff            	// #-1
   5893c:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   58940:	str	x1, [x19, #16]
   58944:	ldr	x1, [x19, #16]
   58948:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5894c:	cmp	x1, x0
   58950:	b.gt	5881c <__gmpfr_fpif_import@@Base+0x254>
   58954:	mov	w0, #0x0                   	// #0
   58958:	ldp	x19, x20, [sp, #16]
   5895c:	ldp	x21, x22, [sp, #32]
   58960:	ldp	x29, x30, [sp], #64
   58964:	ret
   58968:	mov	w0, #0xffffffff            	// #-1
   5896c:	b	58958 <__gmpfr_fpif_import@@Base+0x390>
   58970:	mov	w0, #0xffffffff            	// #-1
   58974:	ret

0000000000058978 <mpfr_round_nearest_away_begin@@Base>:
   58978:	stp	x29, x30, [sp, #-96]!
   5897c:	mov	x29, sp
   58980:	stp	x19, x20, [sp, #16]
   58984:	stp	x21, x22, [sp, #32]
   58988:	stp	x23, x24, [sp, #48]
   5898c:	mov	x19, x0
   58990:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58994:	ldr	x1, [x0, #2512]
   58998:	add	x0, x0, #0x9d0
   5899c:	blr	x1
   589a0:	mrs	x1, tpidr_el0
   589a4:	ldr	x1, [x1, x0]
   589a8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   589ac:	cmp	x1, x0
   589b0:	b.le	58ac4 <mpfr_round_nearest_away_begin@@Base+0x14c>
   589b4:	ldr	x2, [x19]
   589b8:	add	x21, x2, #0x1
   589bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   589c0:	ldr	x1, [x0, #2576]
   589c4:	add	x0, x0, #0xa10
   589c8:	blr	x1
   589cc:	mrs	x1, tpidr_el0
   589d0:	ldr	w24, [x1, x0]
   589d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   589d8:	ldr	x3, [x0, #2512]
   589dc:	add	x0, x0, #0x9d0
   589e0:	blr	x3
   589e4:	add	x3, x1, x0
   589e8:	ldr	x23, [x1, x0]
   589ec:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   589f0:	ldr	x4, [x0, #2544]
   589f4:	add	x0, x0, #0x9f0
   589f8:	blr	x4
   589fc:	ldr	x22, [x1, x0]
   58a00:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   58a04:	str	x4, [x3]
   58a08:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   58a0c:	str	x3, [x1, x0]
   58a10:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   58a14:	cmp	x21, x0
   58a18:	b.ge	58ae0 <mpfr_round_nearest_away_begin@@Base+0x168>  // b.tcont
   58a1c:	add	x20, x2, #0x3f
   58a20:	cmp	x2, #0x0
   58a24:	csel	x20, x20, x2, lt  // lt = tstop
   58a28:	asr	x20, x20, #6
   58a2c:	add	x0, x20, #0x9
   58a30:	lsl	x0, x0, #3
   58a34:	bl	ccf0 <mpfr_allocate_func@plt>
   58a38:	add	x20, x20, #0x1
   58a3c:	str	x20, [x0]
   58a40:	ldr	x1, [x19, #24]
   58a44:	str	x1, [x0, #8]
   58a48:	ldr	x1, [x19, #16]
   58a4c:	str	x1, [x0, #16]
   58a50:	ldr	w1, [x19, #8]
   58a54:	str	w1, [x0, #24]
   58a58:	ldr	x1, [x19]
   58a5c:	str	x1, [x0, #32]
   58a60:	str	w24, [x0, #40]
   58a64:	str	x23, [x0, #48]
   58a68:	str	x22, [x0, #56]
   58a6c:	str	x21, [sp, #64]
   58a70:	mov	w1, #0x1                   	// #1
   58a74:	str	w1, [sp, #72]
   58a78:	add	x1, x0, #0x40
   58a7c:	str	x1, [sp, #88]
   58a80:	mov	x0, #0x2                   	// #2
   58a84:	movk	x0, #0x8000, lsl #48
   58a88:	str	x0, [sp, #80]
   58a8c:	ldr	w3, [x19, #8]
   58a90:	mov	w2, #0x0                   	// #0
   58a94:	mov	x1, x19
   58a98:	add	x0, sp, #0x40
   58a9c:	bl	c6a0 <mpfr_set4@plt>
   58aa0:	ldp	x0, x1, [sp, #64]
   58aa4:	stp	x0, x1, [x19]
   58aa8:	ldp	x0, x1, [sp, #80]
   58aac:	stp	x0, x1, [x19, #16]
   58ab0:	ldp	x19, x20, [sp, #16]
   58ab4:	ldp	x21, x22, [sp, #32]
   58ab8:	ldp	x23, x24, [sp, #48]
   58abc:	ldp	x29, x30, [sp], #96
   58ac0:	ret
   58ac4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   58ac8:	add	x2, x2, #0xb70
   58acc:	mov	w1, #0x4d                  	// #77
   58ad0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   58ad4:	add	x0, x0, #0xbd0
   58ad8:	bl	cb40 <mpfr_assert_fail@plt>
   58adc:	b	589b4 <mpfr_round_nearest_away_begin@@Base+0x3c>
   58ae0:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   58ae4:	add	x2, x2, #0xbd8
   58ae8:	mov	w1, #0x54                  	// #84
   58aec:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   58af0:	add	x0, x0, #0xbd0
   58af4:	bl	cb40 <mpfr_assert_fail@plt>

0000000000058af8 <mpfr_round_nearest_away_end@@Base>:
   58af8:	stp	x29, x30, [sp, #-112]!
   58afc:	mov	x29, sp
   58b00:	stp	x19, x20, [sp, #16]
   58b04:	stp	x21, x22, [sp, #32]
   58b08:	stp	x23, x24, [sp, #48]
   58b0c:	str	x25, [sp, #64]
   58b10:	mov	x19, x0
   58b14:	mov	w20, w1
   58b18:	ldr	x2, [x0, #24]
   58b1c:	sub	x22, x2, #0x40
   58b20:	ldp	x0, x1, [x0]
   58b24:	stp	x0, x1, [sp, #80]
   58b28:	ldp	x0, x1, [x19, #16]
   58b2c:	stp	x0, x1, [sp, #96]
   58b30:	ldur	x3, [x2, #-32]
   58b34:	str	x3, [x19]
   58b38:	ldur	w0, [x2, #-40]
   58b3c:	str	w0, [x19, #8]
   58b40:	ldur	x0, [x2, #-48]
   58b44:	str	x0, [x19, #16]
   58b48:	ldur	x0, [x2, #-56]
   58b4c:	str	x0, [x19, #24]
   58b50:	ldur	w25, [x2, #-24]
   58b54:	ldur	x24, [x2, #-16]
   58b58:	ldur	x23, [x2, #-8]
   58b5c:	ldur	x21, [x2, #-64]
   58b60:	ldr	x1, [sp, #96]
   58b64:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   58b68:	cmp	x1, x0
   58b6c:	b.le	58c24 <mpfr_round_nearest_away_end@@Base+0x12c>
   58b70:	mvn	w3, w3
   58b74:	ldr	x0, [x2]
   58b78:	lsr	x3, x0, x3
   58b7c:	tbz	w3, #0, 58c3c <mpfr_round_nearest_away_end@@Base+0x144>
   58b80:	cbz	w20, 58c54 <mpfr_round_nearest_away_end@@Base+0x15c>
   58b84:	cmp	w20, #0x0
   58b88:	cset	w2, gt
   58b8c:	ldr	w3, [sp, #88]
   58b90:	add	w2, w2, #0x2
   58b94:	add	x1, sp, #0x50
   58b98:	mov	x0, x19
   58b9c:	bl	c6a0 <mpfr_set4@plt>
   58ba0:	mov	w20, w0
   58ba4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58ba8:	ldr	x1, [x0, #2576]
   58bac:	add	x0, x0, #0xa10
   58bb0:	blr	x1
   58bb4:	mrs	x1, tpidr_el0
   58bb8:	add	x0, x1, x0
   58bbc:	ldr	w2, [x0]
   58bc0:	orr	w25, w2, w25
   58bc4:	str	w25, [x0]
   58bc8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58bcc:	ldr	x2, [x0, #2512]
   58bd0:	add	x0, x0, #0x9d0
   58bd4:	blr	x2
   58bd8:	str	x24, [x1, x0]
   58bdc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58be0:	ldr	x2, [x0, #2544]
   58be4:	add	x0, x0, #0x9f0
   58be8:	blr	x2
   58bec:	str	x23, [x1, x0]
   58bf0:	cbnz	w20, 58ce0 <mpfr_round_nearest_away_end@@Base+0x1e8>
   58bf4:	ldr	x0, [x19, #16]
   58bf8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   58bfc:	cmp	x0, x1
   58c00:	b.ge	58c70 <mpfr_round_nearest_away_end@@Base+0x178>  // b.tcont
   58c04:	mov	x1, #0xffffffffffffffff    	// #-1
   58c08:	mov	x2, #0x2                   	// #2
   58c0c:	movk	x2, #0x8000, lsl #48
   58c10:	cmp	x0, x2
   58c14:	b.ne	58c80 <mpfr_round_nearest_away_end@@Base+0x188>  // b.any
   58c18:	bl	bc90 <mpfr_set_erangeflag@plt>
   58c1c:	mov	x1, #0xffffffffffffffff    	// #-1
   58c20:	b	58c80 <mpfr_round_nearest_away_end@@Base+0x188>
   58c24:	ldr	w3, [sp, #88]
   58c28:	mov	w2, #0x0                   	// #0
   58c2c:	add	x1, sp, #0x50
   58c30:	mov	x0, x19
   58c34:	bl	c6a0 <mpfr_set4@plt>
   58c38:	b	58ba4 <mpfr_round_nearest_away_end@@Base+0xac>
   58c3c:	ldr	w3, [sp, #88]
   58c40:	mov	w2, #0x0                   	// #0
   58c44:	add	x1, sp, #0x50
   58c48:	mov	x0, x19
   58c4c:	bl	c6a0 <mpfr_set4@plt>
   58c50:	b	58ba4 <mpfr_round_nearest_away_end@@Base+0xac>
   58c54:	ldr	w3, [sp, #88]
   58c58:	mov	w2, #0x4                   	// #4
   58c5c:	add	x1, sp, #0x50
   58c60:	mov	x0, x19
   58c64:	bl	c6a0 <mpfr_set4@plt>
   58c68:	mov	w20, w0
   58c6c:	b	58ba4 <mpfr_round_nearest_away_end@@Base+0xac>
   58c70:	ldr	w0, [x19, #8]
   58c74:	mov	x1, #0xffffffffffffffff    	// #-1
   58c78:	cmp	w0, #0x0
   58c7c:	cneg	x1, x1, gt
   58c80:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58c84:	ldr	x2, [x0, #2512]
   58c88:	add	x0, x0, #0x9d0
   58c8c:	blr	x2
   58c90:	mrs	x2, tpidr_el0
   58c94:	ldr	x2, [x2, x0]
   58c98:	sub	x2, x2, #0x2
   58c9c:	mov	x0, x19
   58ca0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   58ca4:	mov	w23, w0
   58ca8:	cbnz	w0, 58ce0 <mpfr_round_nearest_away_end@@Base+0x1e8>
   58cac:	ldr	x0, [x19, #16]
   58cb0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   58cb4:	cmp	x0, x1
   58cb8:	b.ge	58cd8 <mpfr_round_nearest_away_end@@Base+0x1e0>  // b.tcont
   58cbc:	mov	w20, w23
   58cc0:	mov	x1, #0x2                   	// #2
   58cc4:	movk	x1, #0x8000, lsl #48
   58cc8:	cmp	x0, x1
   58ccc:	b.ne	58ce0 <mpfr_round_nearest_away_end@@Base+0x1e8>  // b.any
   58cd0:	bl	bc90 <mpfr_set_erangeflag@plt>
   58cd4:	b	58ce0 <mpfr_round_nearest_away_end@@Base+0x1e8>
   58cd8:	ldr	w20, [x19, #8]
   58cdc:	neg	w20, w20
   58ce0:	add	x1, x21, #0x8
   58ce4:	lsl	x1, x1, #3
   58ce8:	mov	x0, x22
   58cec:	bl	cc20 <mpfr_free_func@plt>
   58cf0:	ldr	x1, [x19, #16]
   58cf4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58cf8:	ldr	x2, [x0, #2512]
   58cfc:	add	x0, x0, #0x9d0
   58d00:	blr	x2
   58d04:	mrs	x2, tpidr_el0
   58d08:	ldr	x0, [x2, x0]
   58d0c:	cmp	x1, x0
   58d10:	b.lt	58d34 <mpfr_round_nearest_away_end@@Base+0x23c>  // b.tstop
   58d14:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58d18:	ldr	x2, [x0, #2544]
   58d1c:	add	x0, x0, #0x9f0
   58d20:	blr	x2
   58d24:	mrs	x2, tpidr_el0
   58d28:	ldr	x0, [x2, x0]
   58d2c:	cmp	x1, x0
   58d30:	b.le	58d4c <mpfr_round_nearest_away_end@@Base+0x254>
   58d34:	mov	w2, #0x0                   	// #0
   58d38:	mov	w1, w20
   58d3c:	mov	x0, x19
   58d40:	bl	cb30 <mpfr_check_range@plt>
   58d44:	mov	w20, w0
   58d48:	b	58d74 <mpfr_round_nearest_away_end@@Base+0x27c>
   58d4c:	cbz	w20, 58d74 <mpfr_round_nearest_away_end@@Base+0x27c>
   58d50:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   58d54:	ldr	x1, [x0, #2576]
   58d58:	add	x0, x0, #0xa10
   58d5c:	blr	x1
   58d60:	mrs	x1, tpidr_el0
   58d64:	add	x0, x1, x0
   58d68:	ldr	w1, [x0]
   58d6c:	orr	w1, w1, #0x8
   58d70:	str	w1, [x0]
   58d74:	mov	w0, w20
   58d78:	ldp	x19, x20, [sp, #16]
   58d7c:	ldp	x21, x22, [sp, #32]
   58d80:	ldp	x23, x24, [sp, #48]
   58d84:	ldr	x25, [sp, #64]
   58d88:	ldp	x29, x30, [sp], #112
   58d8c:	ret
   58d90:	stp	x29, x30, [sp, #-48]!
   58d94:	mov	x29, sp
   58d98:	stp	x19, x20, [sp, #16]
   58d9c:	str	x21, [sp, #32]
   58da0:	mov	x21, x0
   58da4:	mov	x19, x1
   58da8:	mov	x20, x2
   58dac:	mov	x0, x1
   58db0:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58db4:	mov	x2, x21
   58db8:	mov	x1, #0x1                   	// #1
   58dbc:	mov	x0, x19
   58dc0:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   58dc4:	cbnz	w0, 58e08 <mpfr_round_nearest_away_end@@Base+0x310>
   58dc8:	mov	x0, x20
   58dcc:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58dd0:	mov	x2, x21
   58dd4:	mov	x1, x19
   58dd8:	mov	x0, x20
   58ddc:	bl	ca30 <mpfr_random_deviate_less@plt>
   58de0:	cbz	w0, 58e0c <mpfr_round_nearest_away_end@@Base+0x314>
   58de4:	mov	x0, x19
   58de8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58dec:	mov	x2, x21
   58df0:	mov	x1, x20
   58df4:	mov	x0, x19
   58df8:	bl	ca30 <mpfr_random_deviate_less@plt>
   58dfc:	cbnz	w0, 58dc8 <mpfr_round_nearest_away_end@@Base+0x2d0>
   58e00:	mov	w0, #0x1                   	// #1
   58e04:	b	58e0c <mpfr_round_nearest_away_end@@Base+0x314>
   58e08:	mov	w0, #0x1                   	// #1
   58e0c:	ldp	x19, x20, [sp, #16]
   58e10:	ldr	x21, [sp, #32]
   58e14:	ldp	x29, x30, [sp], #48
   58e18:	ret

0000000000058e1c <mpfr_nrandom@@Base>:
   58e1c:	stp	x29, x30, [sp, #-240]!
   58e20:	mov	x29, sp
   58e24:	stp	x19, x20, [sp, #16]
   58e28:	stp	x21, x22, [sp, #32]
   58e2c:	stp	x23, x24, [sp, #48]
   58e30:	stp	x25, x26, [sp, #64]
   58e34:	stp	x27, x28, [sp, #80]
   58e38:	str	x0, [sp, #128]
   58e3c:	mov	x19, x1
   58e40:	str	w2, [sp, #140]
   58e44:	add	x0, sp, #0xd0
   58e48:	bl	c150 <mpfr_random_deviate_init@plt>
   58e4c:	add	x0, sp, #0xb0
   58e50:	bl	c150 <mpfr_random_deviate_init@plt>
   58e54:	add	x0, sp, #0x90
   58e58:	bl	c150 <mpfr_random_deviate_init@plt>
   58e5c:	add	x0, sp, #0xb0
   58e60:	str	x0, [sp, #104]
   58e64:	add	x21, sp, #0x90
   58e68:	str	x21, [sp, #112]
   58e6c:	b	58ff8 <mpfr_nrandom@@Base+0x1dc>
   58e70:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   58e74:	add	x2, x2, #0xc10
   58e78:	mov	w1, #0x5b                  	// #91
   58e7c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   58e80:	add	x0, x0, #0xc20
   58e84:	bl	cb40 <mpfr_assert_fail@plt>
   58e88:	sub	x26, x20, #0x1
   58e8c:	cbz	x20, 59008 <mpfr_nrandom@@Base+0x1ec>
   58e90:	mov	x25, x26
   58e94:	mov	x22, x26
   58e98:	sub	x22, x22, #0x1
   58e9c:	cmn	x22, #0x1
   58ea0:	b.eq	58ee8 <mpfr_nrandom@@Base+0xcc>  // b.none
   58ea4:	ldr	x2, [sp, #112]
   58ea8:	mov	x1, x24
   58eac:	mov	x0, x19
   58eb0:	bl	58d90 <mpfr_round_nearest_away_end@@Base+0x298>
   58eb4:	cbnz	w0, 58e98 <mpfr_nrandom@@Base+0x7c>
   58eb8:	mov	x20, x27
   58ebc:	mov	x2, x21
   58ec0:	mov	x1, x23
   58ec4:	mov	x0, x19
   58ec8:	bl	58d90 <mpfr_round_nearest_away_end@@Base+0x298>
   58ecc:	str	w0, [sp, #100]
   58ed0:	cbz	w0, 58e88 <mpfr_nrandom@@Base+0x6c>
   58ed4:	add	x0, x20, #0x1
   58ed8:	cmn	x20, #0x1
   58edc:	b.eq	58e70 <mpfr_nrandom@@Base+0x54>  // b.none
   58ee0:	mov	x20, x0
   58ee4:	b	58ebc <mpfr_nrandom@@Base+0xa0>
   58ee8:	sub	x25, x25, #0x1
   58eec:	cmn	x25, #0x1
   58ef0:	b.ne	58e94 <mpfr_nrandom@@Base+0x78>  // b.any
   58ef4:	add	x0, sp, #0xd0
   58ef8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58efc:	add	x0, x20, #0x1
   58f00:	str	x0, [sp, #120]
   58f04:	lsl	x27, x0, #1
   58f08:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   58f0c:	cmp	x20, x0
   58f10:	b.ls	5901c <mpfr_nrandom@@Base+0x200>  // b.plast
   58f14:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   58f18:	add	x2, x2, #0xc30
   58f1c:	mov	w1, #0x8b                  	// #139
   58f20:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   58f24:	add	x0, x0, #0xc20
   58f28:	bl	cb40 <mpfr_assert_fail@plt>
   58f2c:	ldr	w22, [sp, #136]
   58f30:	mov	x0, x21
   58f34:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58f38:	cmp	w25, #0x0
   58f3c:	mov	x2, x19
   58f40:	ldr	x0, [sp, #104]
   58f44:	csel	x1, x28, x0, ne  // ne = any
   58f48:	mov	x0, x21
   58f4c:	bl	ca30 <mpfr_random_deviate_less@plt>
   58f50:	cbz	w0, 58fc8 <mpfr_nrandom@@Base+0x1ac>
   58f54:	cbnz	x20, 58fac <mpfr_nrandom@@Base+0x190>
   58f58:	cbnz	w22, 58f78 <mpfr_nrandom@@Base+0x15c>
   58f5c:	mov	x0, x24
   58f60:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58f64:	mov	x2, x19
   58f68:	mov	x1, x28
   58f6c:	mov	x0, x24
   58f70:	bl	ca30 <mpfr_random_deviate_less@plt>
   58f74:	cbz	w0, 58fc8 <mpfr_nrandom@@Base+0x1ac>
   58f78:	mov	x1, x21
   58f7c:	mov	x0, x24
   58f80:	bl	c590 <mpfr_random_deviate_swap@plt>
   58f84:	add	w23, w23, #0x1
   58f88:	mov	w25, #0x0                   	// #0
   58f8c:	cbnz	x20, 58f2c <mpfr_nrandom@@Base+0x110>
   58f90:	mov	x1, x27
   58f94:	mov	x0, x19
   58f98:	bl	c2d0 <__gmp_urandomm_ui@plt>
   58f9c:	cbz	x0, 58fc8 <mpfr_nrandom@@Base+0x1ac>
   58fa0:	cmp	x0, #0x1
   58fa4:	cset	w22, ne  // ne = any
   58fa8:	b	58f30 <mpfr_nrandom@@Base+0x114>
   58fac:	mov	x1, x27
   58fb0:	mov	x0, x19
   58fb4:	bl	c2d0 <__gmp_urandomm_ui@plt>
   58fb8:	cbz	x0, 58fc8 <mpfr_nrandom@@Base+0x1ac>
   58fbc:	cmp	x0, #0x1
   58fc0:	cset	w22, ne  // ne = any
   58fc4:	b	58f58 <mpfr_nrandom@@Base+0x13c>
   58fc8:	tbnz	w23, #0, 58ff0 <mpfr_nrandom@@Base+0x1d4>
   58fcc:	add	x26, x26, #0x1
   58fd0:	ldr	x0, [sp, #120]
   58fd4:	cmp	x26, x0
   58fd8:	b.eq	5902c <mpfr_nrandom@@Base+0x210>  // b.none
   58fdc:	mov	w25, #0x1                   	// #1
   58fe0:	mov	w23, #0x0                   	// #0
   58fe4:	ldr	w0, [sp, #100]
   58fe8:	str	w0, [sp, #136]
   58fec:	b	58f8c <mpfr_nrandom@@Base+0x170>
   58ff0:	cmp	x26, x20
   58ff4:	b.hi	5902c <mpfr_nrandom@@Base+0x210>  // b.pmore
   58ff8:	mov	x27, #0x0                   	// #0
   58ffc:	ldr	x23, [sp, #104]
   59000:	mov	x24, x23
   59004:	b	58eb8 <mpfr_nrandom@@Base+0x9c>
   59008:	add	x0, sp, #0xd0
   5900c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   59010:	mov	x27, #0x2                   	// #2
   59014:	mov	x0, #0x1                   	// #1
   59018:	str	x0, [sp, #120]
   5901c:	mov	x26, #0x0                   	// #0
   59020:	add	x28, sp, #0xd0
   59024:	ldr	x24, [sp, #104]
   59028:	b	58fdc <mpfr_nrandom@@Base+0x1c0>
   5902c:	add	x0, sp, #0x90
   59030:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   59034:	add	x0, sp, #0xb0
   59038:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   5903c:	mov	x1, #0x1                   	// #1
   59040:	mov	x0, x19
   59044:	bl	cb10 <__gmp_urandomb_ui@plt>
   59048:	add	x1, sp, #0xd0
   5904c:	ldr	w5, [sp, #140]
   59050:	mov	x4, x19
   59054:	ldr	x3, [sp, #128]
   59058:	mov	x19, x1
   5905c:	mov	x2, x1
   59060:	mov	x1, x20
   59064:	bl	baa0 <mpfr_random_deviate_value@plt>
   59068:	mov	w20, w0
   5906c:	mov	x0, x19
   59070:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   59074:	mov	w0, w20
   59078:	ldp	x19, x20, [sp, #16]
   5907c:	ldp	x21, x22, [sp, #32]
   59080:	ldp	x23, x24, [sp, #48]
   59084:	ldp	x25, x26, [sp, #64]
   59088:	ldp	x27, x28, [sp, #80]
   5908c:	ldp	x29, x30, [sp], #240
   59090:	ret
   59094:	stp	x29, x30, [sp, #-64]!
   59098:	mov	x29, sp
   5909c:	stp	x19, x20, [sp, #16]
   590a0:	stp	x21, x22, [sp, #32]
   590a4:	stp	x23, x24, [sp, #48]
   590a8:	cmn	x1, #0x21
   590ac:	b.hi	59124 <mpfr_nrandom@@Base+0x308>  // b.pmore
   590b0:	mov	x19, x0
   590b4:	mov	x20, x1
   590b8:	mov	x23, x2
   590bc:	mov	x21, x3
   590c0:	ldr	x4, [x0]
   590c4:	cmp	x4, x1
   590c8:	b.cs	59110 <mpfr_nrandom@@Base+0x2f4>  // b.hs, b.nlast
   590cc:	cbz	x4, 5913c <mpfr_nrandom@@Base+0x320>
   590d0:	cbz	x3, 5919c <mpfr_nrandom@@Base+0x380>
   590d4:	add	x20, x20, #0x1f
   590d8:	and	x20, x20, #0xffffffffffffffe0
   590dc:	sub	x20, x20, x4
   590e0:	mov	x0, x21
   590e4:	cmp	x4, #0x20
   590e8:	b.eq	5916c <mpfr_nrandom@@Base+0x350>  // b.none
   590ec:	mov	x2, x20
   590f0:	mov	x1, x23
   590f4:	bl	cd00 <__gmpz_urandomb@plt>
   590f8:	ldr	x0, [x19]
   590fc:	cmp	x0, #0x20
   59100:	b.hi	59174 <mpfr_nrandom@@Base+0x358>  // b.pmore
   59104:	ldr	x0, [x19]
   59108:	add	x20, x0, x20
   5910c:	str	x20, [x19]
   59110:	ldp	x19, x20, [sp, #16]
   59114:	ldp	x21, x22, [sp, #32]
   59118:	ldp	x23, x24, [sp, #48]
   5911c:	ldp	x29, x30, [sp], #64
   59120:	ret
   59124:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   59128:	add	x2, x2, #0xc50
   5912c:	mov	w1, #0x82                  	// #130
   59130:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   59134:	add	x0, x0, #0xc80
   59138:	bl	cb40 <mpfr_assert_fail@plt>
   5913c:	mov	x1, #0x20                  	// #32
   59140:	mov	x0, x2
   59144:	bl	cb10 <__gmp_urandomb_ui@plt>
   59148:	str	x0, [x19, #8]
   5914c:	mov	x0, #0x20                  	// #32
   59150:	str	x0, [x19]
   59154:	cmp	x20, x0
   59158:	b.ls	59110 <mpfr_nrandom@@Base+0x2f4>  // b.plast
   5915c:	cbz	x21, 5919c <mpfr_nrandom@@Base+0x380>
   59160:	add	x20, x20, #0x1f
   59164:	and	x20, x20, #0xffffffffffffffe0
   59168:	sub	x20, x20, #0x20
   5916c:	add	x0, x19, #0x10
   59170:	b	590ec <mpfr_nrandom@@Base+0x2d0>
   59174:	add	x22, x19, #0x10
   59178:	mov	x2, x20
   5917c:	mov	x1, x22
   59180:	mov	x0, x22
   59184:	bl	c200 <__gmpz_mul_2exp@plt>
   59188:	mov	x2, x21
   5918c:	mov	x1, x22
   59190:	mov	x0, x22
   59194:	bl	c9c0 <__gmpz_add@plt>
   59198:	b	59104 <mpfr_nrandom@@Base+0x2e8>
   5919c:	mov	x24, #0x20                  	// #32
   591a0:	add	x22, x19, #0x10
   591a4:	b	591dc <mpfr_nrandom@@Base+0x3c0>
   591a8:	mov	x2, x24
   591ac:	mov	x1, x22
   591b0:	mov	x0, x22
   591b4:	bl	c200 <__gmpz_mul_2exp@plt>
   591b8:	mov	x2, x21
   591bc:	mov	x1, x22
   591c0:	mov	x0, x22
   591c4:	bl	c360 <__gmpz_add_ui@plt>
   591c8:	ldr	x0, [x19]
   591cc:	add	x0, x0, #0x20
   591d0:	str	x0, [x19]
   591d4:	cmp	x0, x20
   591d8:	b.cs	59110 <mpfr_nrandom@@Base+0x2f4>  // b.hs, b.nlast
   591dc:	mov	x1, x24
   591e0:	mov	x0, x23
   591e4:	bl	cb10 <__gmp_urandomb_ui@plt>
   591e8:	mov	x21, x0
   591ec:	ldr	x0, [x19]
   591f0:	cmp	x0, #0x20
   591f4:	b.ne	591a8 <mpfr_nrandom@@Base+0x38c>  // b.any
   591f8:	mov	x1, x21
   591fc:	mov	x0, x22
   59200:	bl	bcb0 <__gmpz_set_ui@plt>
   59204:	b	591c8 <mpfr_nrandom@@Base+0x3ac>

0000000000059208 <mpfr_random_deviate_init@@Base>:
   59208:	stp	x29, x30, [sp, #-32]!
   5920c:	mov	x29, sp
   59210:	str	x19, [sp, #16]
   59214:	mov	x19, x0
   59218:	add	x0, x0, #0x10
   5921c:	bl	bf90 <mpfr_mpz_init@plt>
   59220:	str	xzr, [x19]
   59224:	ldr	x19, [sp, #16]
   59228:	ldp	x29, x30, [sp], #32
   5922c:	ret

0000000000059230 <mpfr_random_deviate_reset@@Base>:
   59230:	str	xzr, [x0]
   59234:	ret

0000000000059238 <mpfr_random_deviate_clear@@Base>:
   59238:	stp	x29, x30, [sp, #-16]!
   5923c:	mov	x29, sp
   59240:	add	x0, x0, #0x10
   59244:	bl	c170 <mpfr_mpz_clear@plt>
   59248:	ldp	x29, x30, [sp], #16
   5924c:	ret

0000000000059250 <mpfr_random_deviate_swap@@Base>:
   59250:	stp	x29, x30, [sp, #-16]!
   59254:	mov	x29, sp
   59258:	ldr	x2, [x0]
   5925c:	ldr	x3, [x1]
   59260:	str	x3, [x0]
   59264:	str	x2, [x1]
   59268:	ldr	x2, [x0, #8]
   5926c:	ldr	x3, [x1, #8]
   59270:	str	x3, [x0, #8]
   59274:	str	x2, [x1, #8]
   59278:	add	x1, x1, #0x10
   5927c:	add	x0, x0, #0x10
   59280:	bl	c0e0 <__gmpz_swap@plt>
   59284:	ldp	x29, x30, [sp], #16
   59288:	ret

000000000005928c <mpfr_random_deviate_tstbit@@Base>:
   5928c:	cbnz	x1, 59298 <mpfr_random_deviate_tstbit@@Base+0xc>
   59290:	mov	w0, #0x0                   	// #0
   59294:	ret
   59298:	stp	x29, x30, [sp, #-32]!
   5929c:	mov	x29, sp
   592a0:	stp	x19, x20, [sp, #16]
   592a4:	mov	x20, x0
   592a8:	mov	x19, x1
   592ac:	mov	x3, #0x0                   	// #0
   592b0:	bl	59094 <mpfr_nrandom@@Base+0x278>
   592b4:	cmp	x19, #0x20
   592b8:	b.ls	592d8 <mpfr_random_deviate_tstbit@@Base+0x4c>  // b.plast
   592bc:	mov	x0, x20
   592c0:	ldr	x1, [x0], #16
   592c4:	sub	x1, x1, x19
   592c8:	bl	bfe0 <__gmpz_tstbit@plt>
   592cc:	ldp	x19, x20, [sp, #16]
   592d0:	ldp	x29, x30, [sp], #32
   592d4:	ret
   592d8:	mov	w0, #0x20                  	// #32
   592dc:	sub	w19, w0, w19
   592e0:	ldr	x0, [x20, #8]
   592e4:	lsr	x0, x0, x19
   592e8:	and	w0, w0, #0x1
   592ec:	b	592cc <mpfr_random_deviate_tstbit@@Base+0x40>

00000000000592f0 <mpfr_random_deviate_less@@Base>:
   592f0:	cmp	x0, x1
   592f4:	b.eq	593a0 <mpfr_random_deviate_less@@Base+0xb0>  // b.none
   592f8:	stp	x29, x30, [sp, #-64]!
   592fc:	mov	x29, sp
   59300:	stp	x19, x20, [sp, #16]
   59304:	stp	x21, x22, [sp, #32]
   59308:	str	x23, [sp, #48]
   5930c:	mov	x22, x0
   59310:	mov	x23, x1
   59314:	mov	x20, x2
   59318:	mov	x3, #0x0                   	// #0
   5931c:	mov	x1, #0x20                  	// #32
   59320:	bl	59094 <mpfr_nrandom@@Base+0x278>
   59324:	mov	x3, #0x0                   	// #0
   59328:	mov	x2, x20
   5932c:	mov	x1, #0x20                  	// #32
   59330:	mov	x0, x23
   59334:	bl	59094 <mpfr_nrandom@@Base+0x278>
   59338:	ldr	x1, [x22, #8]
   5933c:	ldr	x0, [x23, #8]
   59340:	cmp	x1, x0
   59344:	b.eq	59360 <mpfr_random_deviate_less@@Base+0x70>  // b.none
   59348:	cset	w0, cc  // cc = lo, ul, last
   5934c:	ldp	x19, x20, [sp, #16]
   59350:	ldp	x21, x22, [sp, #32]
   59354:	ldr	x23, [sp, #48]
   59358:	ldp	x29, x30, [sp], #64
   5935c:	ret
   59360:	mov	x21, #0x21                  	// #33
   59364:	mov	x2, x20
   59368:	mov	x1, x21
   5936c:	mov	x0, x22
   59370:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   59374:	mov	w19, w0
   59378:	mov	x2, x20
   5937c:	mov	x1, x21
   59380:	mov	x0, x23
   59384:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   59388:	cmp	w19, w0
   5938c:	b.ne	59398 <mpfr_random_deviate_less@@Base+0xa8>  // b.any
   59390:	add	x21, x21, #0x1
   59394:	b	59364 <mpfr_random_deviate_less@@Base+0x74>
   59398:	cset	w0, lt  // lt = tstop
   5939c:	b	5934c <mpfr_random_deviate_less@@Base+0x5c>
   593a0:	mov	w0, #0x0                   	// #0
   593a4:	ret

00000000000593a8 <mpfr_random_deviate_value@@Base>:
   593a8:	stp	x29, x30, [sp, #-96]!
   593ac:	mov	x29, sp
   593b0:	stp	x19, x20, [sp, #16]
   593b4:	stp	x21, x22, [sp, #32]
   593b8:	stp	x23, x24, [sp, #48]
   593bc:	stp	x25, x26, [sp, #64]
   593c0:	mov	w25, w0
   593c4:	mov	x20, x1
   593c8:	mov	x19, x2
   593cc:	mov	x23, x3
   593d0:	mov	x22, x4
   593d4:	mov	w24, w5
   593d8:	ldr	x21, [x3]
   593dc:	cbz	x1, 5945c <mpfr_random_deviate_value@@Base+0xb4>
   593e0:	clz	x26, x1
   593e4:	mov	w1, #0x3f                  	// #63
   593e8:	sub	w1, w1, w26
   593ec:	sxtw	x26, w1
   593f0:	add	x0, sp, #0x50
   593f4:	bl	bf90 <mpfr_mpz_init@plt>
   593f8:	add	x21, x21, #0x1
   593fc:	cmp	x21, x26
   59400:	b.ls	59524 <mpfr_random_deviate_value@@Base+0x17c>  // b.plast
   59404:	sub	x1, x21, x26
   59408:	add	x3, sp, #0x50
   5940c:	mov	x2, x22
   59410:	mov	x0, x19
   59414:	bl	59094 <mpfr_nrandom@@Base+0x278>
   59418:	cbnz	x20, 59524 <mpfr_random_deviate_value@@Base+0x17c>
   5941c:	ldr	x1, [x19, #8]
   59420:	add	x0, sp, #0x50
   59424:	bl	bcb0 <__gmpz_set_ui@plt>
   59428:	ldr	x2, [x19]
   5942c:	cmp	x2, #0x20
   59430:	b.ls	59538 <mpfr_random_deviate_value@@Base+0x190>  // b.plast
   59434:	add	x20, sp, #0x50
   59438:	sub	x2, x2, #0x20
   5943c:	mov	x1, x20
   59440:	mov	x0, x20
   59444:	bl	c200 <__gmpz_mul_2exp@plt>
   59448:	add	x2, x19, #0x10
   5944c:	mov	x1, x20
   59450:	mov	x0, x20
   59454:	bl	c9c0 <__gmpz_add@plt>
   59458:	b	59538 <mpfr_random_deviate_value@@Base+0x190>
   5945c:	mov	x3, #0x0                   	// #0
   59460:	mov	x2, x4
   59464:	mov	x1, #0x20                  	// #32
   59468:	mov	x0, x19
   5946c:	bl	59094 <mpfr_nrandom@@Base+0x278>
   59470:	ldr	x1, [x19, #8]
   59474:	cbz	x1, 594a4 <mpfr_random_deviate_value@@Base+0xfc>
   59478:	clz	x1, x1
   5947c:	sub	w1, w1, #0x1f
   59480:	sxtw	x26, w1
   59484:	add	x0, sp, #0x50
   59488:	bl	bf90 <mpfr_mpz_init@plt>
   5948c:	add	x0, x26, x21
   59490:	add	x21, x21, #0x1
   59494:	add	x1, x21, x26
   59498:	cmn	x0, #0x1
   5949c:	b.ne	59408 <mpfr_random_deviate_value@@Base+0x60>  // b.any
   594a0:	b	5941c <mpfr_random_deviate_value@@Base+0x74>
   594a4:	mov	x3, #0x0                   	// #0
   594a8:	mov	x2, x22
   594ac:	mov	x1, #0x40                  	// #64
   594b0:	mov	x0, x19
   594b4:	bl	59094 <mpfr_nrandom@@Base+0x278>
   594b8:	ldr	w0, [x19, #20]
   594bc:	cbnz	w0, 594e0 <mpfr_random_deviate_value@@Base+0x138>
   594c0:	ldr	x1, [x19]
   594c4:	mov	x3, #0x0                   	// #0
   594c8:	mov	x2, x22
   594cc:	add	x1, x1, #0x1
   594d0:	mov	x0, x19
   594d4:	bl	59094 <mpfr_nrandom@@Base+0x278>
   594d8:	ldr	w0, [x19, #20]
   594dc:	cbz	w0, 594c0 <mpfr_random_deviate_value@@Base+0x118>
   594e0:	mov	w1, #0x2                   	// #2
   594e4:	add	x0, x19, #0x10
   594e8:	bl	cb60 <__gmpz_sizeinbase@plt>
   594ec:	ldr	x1, [x19]
   594f0:	sub	x0, x1, x0
   594f4:	add	x26, x0, #0x1
   594f8:	add	x0, x0, #0x2
   594fc:	mov	x1, #0x100                 	// #256
   59500:	movk	x1, #0x8000, lsl #48
   59504:	cmp	x0, x1
   59508:	b.ls	59484 <mpfr_random_deviate_value@@Base+0xdc>  // b.plast
   5950c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   59510:	add	x2, x2, #0xc98
   59514:	mov	w1, #0xf1                  	// #241
   59518:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5951c:	add	x0, x0, #0xc80
   59520:	bl	cb40 <mpfr_assert_fail@plt>
   59524:	mov	x1, x20
   59528:	add	x0, sp, #0x50
   5952c:	bl	bcb0 <__gmpz_set_ui@plt>
   59530:	ldr	x0, [x19]
   59534:	cbnz	x0, 595a0 <mpfr_random_deviate_value@@Base+0x1f8>
   59538:	mov	x1, #0x0                   	// #0
   5953c:	add	x0, sp, #0x50
   59540:	bl	bf10 <__gmpz_setbit@plt>
   59544:	cbz	w25, 59554 <mpfr_random_deviate_value@@Base+0x1ac>
   59548:	ldr	w0, [sp, #84]
   5954c:	neg	w0, w0
   59550:	str	w0, [sp, #84]
   59554:	ldr	x0, [x19]
   59558:	tbnz	x0, #63, 595c8 <mpfr_random_deviate_value@@Base+0x220>
   5955c:	ldr	x2, [x19]
   59560:	add	x19, sp, #0x50
   59564:	mov	w3, w24
   59568:	neg	x2, x2
   5956c:	mov	x1, x19
   59570:	mov	x0, x23
   59574:	bl	c4f0 <mpfr_set_z_2exp@plt>
   59578:	mov	w20, w0
   5957c:	mov	x0, x19
   59580:	bl	c170 <mpfr_mpz_clear@plt>
   59584:	mov	w0, w20
   59588:	ldp	x19, x20, [sp, #16]
   5958c:	ldp	x21, x22, [sp, #32]
   59590:	ldp	x23, x24, [sp, #48]
   59594:	ldp	x25, x26, [sp, #64]
   59598:	ldp	x29, x30, [sp], #96
   5959c:	ret
   595a0:	add	x20, sp, #0x50
   595a4:	mov	x2, #0x20                  	// #32
   595a8:	mov	x1, x20
   595ac:	mov	x0, x20
   595b0:	bl	c200 <__gmpz_mul_2exp@plt>
   595b4:	ldr	x2, [x19, #8]
   595b8:	mov	x1, x20
   595bc:	mov	x0, x20
   595c0:	bl	c360 <__gmpz_add_ui@plt>
   595c4:	b	59428 <mpfr_random_deviate_value@@Base+0x80>
   595c8:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   595cc:	add	x2, x2, #0xcf0
   595d0:	mov	w1, #0x177                 	// #375
   595d4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   595d8:	add	x0, x0, #0xc80
   595dc:	bl	cb40 <mpfr_assert_fail@plt>
   595e0:	b	5955c <mpfr_random_deviate_value@@Base+0x1b4>

00000000000595e4 <mpfr_erandom@@Base>:
   595e4:	stp	x29, x30, [sp, #-176]!
   595e8:	mov	x29, sp
   595ec:	stp	x19, x20, [sp, #16]
   595f0:	stp	x21, x22, [sp, #32]
   595f4:	stp	x23, x24, [sp, #48]
   595f8:	str	x25, [sp, #64]
   595fc:	mov	x24, x0
   59600:	mov	x20, x1
   59604:	mov	w25, w2
   59608:	add	x0, sp, #0x90
   5960c:	bl	c150 <mpfr_random_deviate_init@plt>
   59610:	add	x0, sp, #0x70
   59614:	bl	c150 <mpfr_random_deviate_init@plt>
   59618:	add	x0, sp, #0x50
   5961c:	bl	c150 <mpfr_random_deviate_init@plt>
   59620:	mov	x22, #0x0                   	// #0
   59624:	add	x19, sp, #0x70
   59628:	add	x23, sp, #0x90
   5962c:	add	x21, sp, #0x50
   59630:	b	59660 <mpfr_erandom@@Base+0x7c>
   59634:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   59638:	add	x2, x2, #0xd10
   5963c:	mov	w1, #0x61                  	// #97
   59640:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   59644:	add	x0, x0, #0xd20
   59648:	bl	cb40 <mpfr_assert_fail@plt>
   5964c:	cmn	x22, #0x1
   59650:	b.eq	59634 <mpfr_erandom@@Base+0x50>  // b.none
   59654:	mov	x0, x23
   59658:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5965c:	add	x22, x22, #0x1
   59660:	mov	x0, x19
   59664:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   59668:	mov	x2, x20
   5966c:	mov	x1, x23
   59670:	mov	x0, x19
   59674:	bl	ca30 <mpfr_random_deviate_less@plt>
   59678:	cbz	w0, 596b4 <mpfr_erandom@@Base+0xd0>
   5967c:	mov	x0, x21
   59680:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   59684:	mov	x2, x20
   59688:	mov	x1, x19
   5968c:	mov	x0, x21
   59690:	bl	ca30 <mpfr_random_deviate_less@plt>
   59694:	cbz	w0, 5964c <mpfr_erandom@@Base+0x68>
   59698:	mov	x0, x19
   5969c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   596a0:	mov	x2, x20
   596a4:	mov	x1, x21
   596a8:	mov	x0, x19
   596ac:	bl	ca30 <mpfr_random_deviate_less@plt>
   596b0:	cbnz	w0, 5967c <mpfr_erandom@@Base+0x98>
   596b4:	add	x0, sp, #0x50
   596b8:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   596bc:	add	x0, sp, #0x70
   596c0:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   596c4:	add	x19, sp, #0x90
   596c8:	mov	w5, w25
   596cc:	mov	x4, x20
   596d0:	mov	x3, x24
   596d4:	mov	x2, x19
   596d8:	mov	x1, x22
   596dc:	mov	w0, #0x0                   	// #0
   596e0:	bl	baa0 <mpfr_random_deviate_value@plt>
   596e4:	mov	w20, w0
   596e8:	mov	x0, x19
   596ec:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   596f0:	mov	w0, w20
   596f4:	ldp	x19, x20, [sp, #16]
   596f8:	ldp	x21, x22, [sp, #32]
   596fc:	ldp	x23, x24, [sp, #48]
   59700:	ldr	x25, [sp, #64]
   59704:	ldp	x29, x30, [sp], #176
   59708:	ret
   5970c:	stp	x29, x30, [sp, #-256]!
   59710:	mov	x29, sp
   59714:	stp	x19, x20, [sp, #16]
   59718:	stp	x21, x22, [sp, #32]
   5971c:	stp	x23, x24, [sp, #48]
   59720:	stp	x25, x26, [sp, #64]
   59724:	stp	x27, x28, [sp, #80]
   59728:	mov	x25, x0
   5972c:	mov	x21, x1
   59730:	mov	x22, x2
   59734:	mov	x23, x3
   59738:	mov	x24, x4
   5973c:	str	w5, [x29, #108]
   59740:	mov	w26, w6
   59744:	ldr	x28, [x0]
   59748:	str	xzr, [x29, #120]
   5974c:	ldr	x0, [x1]
   59750:	add	x20, x0, #0x3e
   59754:	subs	x0, x0, #0x1
   59758:	csel	x20, x20, x0, mi  // mi = first
   5975c:	ldr	x1, [x2]
   59760:	add	x0, x1, #0x3e
   59764:	subs	x1, x1, #0x1
   59768:	csel	x0, x0, x1, mi  // mi = first
   5976c:	asr	x0, x0, #6
   59770:	add	x20, x0, x20, asr #6
   59774:	add	x20, x20, #0x2
   59778:	ldr	x0, [x3]
   5977c:	add	x19, x0, #0x3e
   59780:	subs	x0, x0, #0x1
   59784:	csel	x19, x19, x0, mi  // mi = first
   59788:	ldr	x1, [x4]
   5978c:	add	x0, x1, #0x3e
   59790:	subs	x1, x1, #0x1
   59794:	csel	x0, x0, x1, mi  // mi = first
   59798:	asr	x0, x0, #6
   5979c:	add	x19, x0, x19, asr #6
   597a0:	add	x19, x19, #0x2
   597a4:	lsl	x27, x20, #3
   597a8:	cmp	x27, #0x4, lsl #12
   597ac:	b.hi	598b8 <mpfr_erandom@@Base+0x2d4>  // b.pmore
   597b0:	add	x0, x27, #0xf
   597b4:	and	x0, x0, #0xfffffffffffffff0
   597b8:	sub	sp, sp, x0
   597bc:	mov	x0, sp
   597c0:	lsl	x1, x20, #6
   597c4:	str	x1, [x29, #208]
   597c8:	str	x0, [x29, #232]
   597cc:	mov	w0, #0x1                   	// #1
   597d0:	str	w0, [x29, #216]
   597d4:	lsl	x1, x19, #3
   597d8:	cmp	x1, #0x4, lsl #12
   597dc:	b.hi	598c8 <mpfr_erandom@@Base+0x2e4>  // b.pmore
   597e0:	add	x1, x1, #0xf
   597e4:	and	x1, x1, #0xfffffffffffffff0
   597e8:	sub	sp, sp, x1
   597ec:	mov	x0, sp
   597f0:	lsl	x19, x19, #6
   597f4:	str	x19, [x29, #160]
   597f8:	str	x0, [x29, #184]
   597fc:	mov	w0, #0x1                   	// #1
   59800:	str	w0, [x29, #168]
   59804:	mov	x2, x22
   59808:	mov	x1, x21
   5980c:	add	x0, x29, #0xd0
   59810:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   59814:	mov	x2, x24
   59818:	mov	x1, x23
   5981c:	add	x0, x29, #0xa0
   59820:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   59824:	cbz	w26, 59834 <mpfr_erandom@@Base+0x250>
   59828:	ldr	w0, [x29, #168]
   5982c:	neg	w0, w0
   59830:	str	w0, [x29, #168]
   59834:	ldr	x0, [x21]
   59838:	cmp	x0, x28
   5983c:	b.ne	5984c <mpfr_erandom@@Base+0x268>  // b.any
   59840:	ldr	x0, [x22]
   59844:	cmp	x0, x28
   59848:	b.eq	598d4 <mpfr_erandom@@Base+0x2f0>  // b.none
   5984c:	ldr	w3, [x29, #108]
   59850:	add	x2, x29, #0xa0
   59854:	add	x1, x29, #0xd0
   59858:	mov	x0, x25
   5985c:	bl	c1a0 <mpfr_add@plt>
   59860:	mov	w19, w0
   59864:	mov	x0, #0x4                   	// #4
   59868:	movk	x0, #0x8000, lsl #48
   5986c:	ldr	x1, [x29, #224]
   59870:	cmp	x1, x0
   59874:	b.eq	59984 <mpfr_erandom@@Base+0x3a0>  // b.none
   59878:	mov	x0, #0x4                   	// #4
   5987c:	movk	x0, #0x8000, lsl #48
   59880:	ldr	x1, [x29, #176]
   59884:	cmp	x1, x0
   59888:	b.eq	59990 <mpfr_erandom@@Base+0x3ac>  // b.none
   5988c:	ldr	x0, [x29, #120]
   59890:	cbnz	x0, 5999c <mpfr_erandom@@Base+0x3b8>
   59894:	mov	w0, w19
   59898:	mov	sp, x29
   5989c:	ldp	x19, x20, [sp, #16]
   598a0:	ldp	x21, x22, [sp, #32]
   598a4:	ldp	x23, x24, [sp, #48]
   598a8:	ldp	x25, x26, [sp, #64]
   598ac:	ldp	x27, x28, [sp, #80]
   598b0:	ldp	x29, x30, [sp], #256
   598b4:	ret
   598b8:	mov	x1, x27
   598bc:	add	x0, x29, #0x78
   598c0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   598c4:	b	597c0 <mpfr_erandom@@Base+0x1dc>
   598c8:	add	x0, x29, #0x78
   598cc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   598d0:	b	597f0 <mpfr_erandom@@Base+0x20c>
   598d4:	ldr	x0, [x23]
   598d8:	cmp	x0, x28
   598dc:	b.ne	5984c <mpfr_erandom@@Base+0x268>  // b.any
   598e0:	ldr	x0, [x24]
   598e4:	cmp	x0, x28
   598e8:	b.ne	5984c <mpfr_erandom@@Base+0x268>  // b.any
   598ec:	lsl	x28, x28, #1
   598f0:	add	x0, x28, #0x3e
   598f4:	subs	x1, x28, #0x1
   598f8:	csel	x0, x0, x1, mi  // mi = first
   598fc:	asr	x0, x0, #6
   59900:	add	x0, x0, #0x1
   59904:	cmp	x0, x20
   59908:	b.ne	5984c <mpfr_erandom@@Base+0x268>  // b.any
   5990c:	cmp	x27, #0x4, lsl #12
   59910:	b.hi	59974 <mpfr_erandom@@Base+0x390>  // b.pmore
   59914:	add	x0, x27, #0xf
   59918:	and	x0, x0, #0xfffffffffffffff0
   5991c:	sub	sp, sp, x0
   59920:	mov	x0, sp
   59924:	str	x28, [x29, #128]
   59928:	str	x0, [x29, #152]
   5992c:	mov	w0, #0x1                   	// #1
   59930:	str	w0, [x29, #136]
   59934:	str	x28, [x29, #160]
   59938:	str	x28, [x29, #208]
   5993c:	add	x19, x29, #0x80
   59940:	ldr	w20, [x29, #108]
   59944:	mov	w3, w20
   59948:	add	x2, x29, #0xa0
   5994c:	add	x1, x29, #0xd0
   59950:	mov	x0, x19
   59954:	bl	c1a0 <mpfr_add@plt>
   59958:	mov	w3, w0
   5995c:	mov	w2, w20
   59960:	mov	x1, x19
   59964:	mov	x0, x25
   59968:	bl	cae0 <mpfr_set_1_2@plt>
   5996c:	mov	w19, w0
   59970:	b	59864 <mpfr_erandom@@Base+0x280>
   59974:	mov	x1, x27
   59978:	add	x0, x29, #0x78
   5997c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   59980:	b	59924 <mpfr_erandom@@Base+0x340>
   59984:	add	x0, x29, #0xf0
   59988:	bl	c170 <mpfr_mpz_clear@plt>
   5998c:	b	59878 <mpfr_erandom@@Base+0x294>
   59990:	add	x0, x29, #0xc0
   59994:	bl	c170 <mpfr_mpz_clear@plt>
   59998:	b	5988c <mpfr_erandom@@Base+0x2a8>
   5999c:	bl	c410 <mpfr_tmp_free@plt>
   599a0:	b	59894 <mpfr_erandom@@Base+0x2b0>

00000000000599a4 <mpfr_fmma@@Base>:
   599a4:	stp	x29, x30, [sp, #-16]!
   599a8:	mov	x29, sp
   599ac:	mov	w6, #0x0                   	// #0
   599b0:	bl	5970c <mpfr_erandom@@Base+0x128>
   599b4:	ldp	x29, x30, [sp], #16
   599b8:	ret

00000000000599bc <mpfr_fmms@@Base>:
   599bc:	stp	x29, x30, [sp, #-16]!
   599c0:	mov	x29, sp
   599c4:	mov	w6, #0x1                   	// #1
   599c8:	bl	5970c <mpfr_erandom@@Base+0x128>
   599cc:	ldp	x29, x30, [sp], #16
   599d0:	ret
   599d4:	sub	sp, sp, #0x90
   599d8:	stp	x29, x30, [sp, #16]
   599dc:	add	x29, sp, #0x10
   599e0:	stp	x19, x20, [sp, #32]
   599e4:	stp	x21, x22, [sp, #48]
   599e8:	stp	x23, x24, [sp, #64]
   599ec:	stp	x25, x26, [sp, #80]
   599f0:	stp	x27, x28, [sp, #96]
   599f4:	mov	x21, x0
   599f8:	mov	x23, x1
   599fc:	mov	x20, x2
   59a00:	mov	x19, x3
   59a04:	mov	x25, x4
   59a08:	mov	x24, x6
   59a0c:	mov	x28, x7
   59a10:	add	x0, x4, #0x1
   59a14:	cmp	x0, x5
   59a18:	b.eq	59b18 <mpfr_fmms@@Base+0x15c>  // b.none
   59a1c:	mov	x22, x5
   59a20:	lsr	x26, x5, #1
   59a24:	add	x26, x26, x4, lsr #1
   59a28:	and	x0, x4, x5
   59a2c:	and	x0, x0, #0x1
   59a30:	add	x26, x26, x0
   59a34:	mov	w0, #0x1                   	// #1
   59a38:	str	w0, [sp]
   59a3c:	mov	x5, x26
   59a40:	mov	x0, x21
   59a44:	bl	599d4 <mpfr_fmms@@Base+0x18>
   59a48:	add	x0, x21, #0x10
   59a4c:	str	x0, [sp, #120]
   59a50:	add	x27, x20, #0x10
   59a54:	add	x25, x19, #0x10
   59a58:	ldr	w1, [sp, #144]
   59a5c:	str	w1, [sp]
   59a60:	mov	x7, x28
   59a64:	mov	x6, x24
   59a68:	mov	x5, x22
   59a6c:	mov	x4, x26
   59a70:	mov	x3, x25
   59a74:	mov	x2, x27
   59a78:	add	x1, sp, #0x88
   59a7c:	bl	599d4 <mpfr_fmms@@Base+0x18>
   59a80:	mov	x2, x21
   59a84:	mov	x1, x25
   59a88:	mov	x0, x25
   59a8c:	bl	bff0 <__gmpz_mul@plt>
   59a90:	mov	x2, x20
   59a94:	mov	x1, x25
   59a98:	mov	x0, x25
   59a9c:	bl	bff0 <__gmpz_mul@plt>
   59aa0:	mov	x2, x27
   59aa4:	mov	x1, x19
   59aa8:	mov	x0, x19
   59aac:	bl	bff0 <__gmpz_mul@plt>
   59ab0:	ldr	x2, [sp, #136]
   59ab4:	mov	x1, x19
   59ab8:	mov	x0, x19
   59abc:	bl	c200 <__gmpz_mul_2exp@plt>
   59ac0:	mov	x2, x25
   59ac4:	mov	x1, x19
   59ac8:	mov	x0, x19
   59acc:	bl	c9c0 <__gmpz_add@plt>
   59ad0:	ldr	w0, [sp, #144]
   59ad4:	cbnz	w0, 59b48 <mpfr_fmms@@Base+0x18c>
   59ad8:	ldr	x0, [x23]
   59adc:	ldr	x1, [sp, #136]
   59ae0:	add	x0, x0, x1
   59ae4:	str	x0, [x23]
   59ae8:	mov	x2, x27
   59aec:	mov	x1, x20
   59af0:	mov	x0, x20
   59af4:	bl	bff0 <__gmpz_mul@plt>
   59af8:	ldp	x19, x20, [sp, #32]
   59afc:	ldp	x21, x22, [sp, #48]
   59b00:	ldp	x23, x24, [sp, #64]
   59b04:	ldp	x25, x26, [sp, #80]
   59b08:	ldp	x27, x28, [sp, #96]
   59b0c:	ldp	x29, x30, [sp, #16]
   59b10:	add	sp, sp, #0x90
   59b14:	ret
   59b18:	cmp	x4, #0x1
   59b1c:	cneg	x1, x6, ne  // ne = any
   59b20:	mov	x0, x21
   59b24:	bl	cb70 <__gmpz_set_si@plt>
   59b28:	str	x28, [x23]
   59b2c:	mov	x1, x25
   59b30:	mov	x0, x20
   59b34:	bl	bcb0 <__gmpz_set_ui@plt>
   59b38:	mov	x1, x21
   59b3c:	mov	x0, x19
   59b40:	bl	bfa0 <__gmpz_set@plt>
   59b44:	b	59af8 <mpfr_fmms@@Base+0x13c>
   59b48:	ldr	x2, [sp, #120]
   59b4c:	mov	x1, x21
   59b50:	mov	x0, x21
   59b54:	bl	bff0 <__gmpz_mul@plt>
   59b58:	b	59ad8 <mpfr_fmms@@Base+0x11c>

0000000000059b5c <mpfr_log_ui@@Base>:
   59b5c:	stp	x29, x30, [sp, #-448]!
   59b60:	mov	x29, sp
   59b64:	stp	x19, x20, [sp, #16]
   59b68:	stp	x21, x22, [sp, #32]
   59b6c:	stp	x23, x24, [sp, #48]
   59b70:	stp	x25, x26, [sp, #64]
   59b74:	stp	x27, x28, [sp, #80]
   59b78:	sub	sp, sp, #0x10
   59b7c:	mov	x22, x0
   59b80:	mov	x19, x1
   59b84:	str	w2, [x29, #172]
   59b88:	cmp	x1, #0x2
   59b8c:	b.hi	59c38 <mpfr_log_ui@@Base+0xdc>  // b.pmore
   59b90:	cbz	x1, 59bb4 <mpfr_log_ui@@Base+0x58>
   59b94:	cmp	x1, #0x1
   59b98:	b.ne	59c0c <mpfr_log_ui@@Base+0xb0>  // b.any
   59b9c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   59ba0:	str	x0, [x22, #16]
   59ba4:	mov	w0, #0x1                   	// #1
   59ba8:	str	w0, [x22, #8]
   59bac:	mov	w19, #0x0                   	// #0
   59bb0:	b	59be8 <mpfr_log_ui@@Base+0x8c>
   59bb4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   59bb8:	str	x0, [x22, #16]
   59bbc:	mov	w0, #0xffffffff            	// #-1
   59bc0:	str	w0, [x22, #8]
   59bc4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59bc8:	ldr	x1, [x0, #2576]
   59bcc:	add	x0, x0, #0xa10
   59bd0:	blr	x1
   59bd4:	mrs	x1, tpidr_el0
   59bd8:	add	x0, x1, x0
   59bdc:	ldr	w1, [x0]
   59be0:	orr	w1, w1, #0x20
   59be4:	str	w1, [x0]
   59be8:	mov	w0, w19
   59bec:	mov	sp, x29
   59bf0:	ldp	x19, x20, [sp, #16]
   59bf4:	ldp	x21, x22, [sp, #32]
   59bf8:	ldp	x23, x24, [sp, #48]
   59bfc:	ldp	x25, x26, [sp, #64]
   59c00:	ldp	x27, x28, [sp, #80]
   59c04:	ldp	x29, x30, [sp], #448
   59c08:	ret
   59c0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59c10:	ldr	x1, [x0, #2560]
   59c14:	add	x0, x0, #0xa00
   59c18:	blr	x1
   59c1c:	ldr	w2, [x29, #172]
   59c20:	mrs	x1, tpidr_el0
   59c24:	add	x1, x1, x0
   59c28:	mov	x0, x22
   59c2c:	bl	c380 <mpfr_cache@plt>
   59c30:	mov	w19, w0
   59c34:	b	59be8 <mpfr_log_ui@@Base+0x8c>
   59c38:	add	x20, x29, #0x1b0
   59c3c:	mov	x0, x20
   59c40:	bl	bf90 <mpfr_mpz_init@plt>
   59c44:	mov	x1, x19
   59c48:	mov	x0, x20
   59c4c:	bl	bcb0 <__gmpz_set_ui@plt>
   59c50:	mov	x2, #0x3                   	// #3
   59c54:	mov	x1, x20
   59c58:	mov	x0, x20
   59c5c:	bl	c100 <__gmpz_mul_ui@plt>
   59c60:	mov	w1, #0x2                   	// #2
   59c64:	mov	x0, x20
   59c68:	bl	cb60 <__gmpz_sizeinbase@plt>
   59c6c:	str	x0, [x29, #136]
   59c70:	sub	x21, x0, #0x2
   59c74:	str	x21, [x29, #152]
   59c78:	mov	x0, x20
   59c7c:	bl	c170 <mpfr_mpz_clear@plt>
   59c80:	mov	x0, #0x1                   	// #1
   59c84:	lsl	x0, x0, x21
   59c88:	sub	x0, x19, x0
   59c8c:	cmp	x21, #0x40
   59c90:	csel	x19, x0, x19, cc  // cc = lo, ul, last
   59c94:	mov	x21, x19
   59c98:	ldr	x20, [x22]
   59c9c:	cmp	x20, #0x1
   59ca0:	b.eq	5a0f8 <mpfr_log_ui@@Base+0x59c>  // b.none
   59ca4:	b.le	5a0c4 <mpfr_log_ui@@Base+0x568>
   59ca8:	ldr	x0, [x22]
   59cac:	sub	x0, x0, #0x1
   59cb0:	clz	x1, x0
   59cb4:	mov	w0, #0x40                  	// #64
   59cb8:	sub	w0, w0, w1
   59cbc:	add	x20, x20, w0, sxtw
   59cc0:	add	x0, x20, #0xa
   59cc4:	mov	x1, x0
   59cc8:	str	x0, [x29, #160]
   59ccc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   59cd0:	cmp	x1, x0
   59cd4:	b.ge	5a0e0 <mpfr_log_ui@@Base+0x584>  // b.tcont
   59cd8:	add	x0, x20, #0x48
   59cdc:	adds	x20, x20, #0x9
   59ce0:	csel	x20, x0, x20, mi  // mi = first
   59ce4:	asr	x20, x20, #6
   59ce8:	add	x20, x20, #0x1
   59cec:	lsl	x0, x20, #1
   59cf0:	cmp	x0, #0x10
   59cf4:	b.gt	5a0e4 <mpfr_log_ui@@Base+0x588>
   59cf8:	str	xzr, [x29, #224]
   59cfc:	add	x0, x29, #0xf0
   59d00:	str	x0, [x29, #232]
   59d04:	ldr	x2, [x29, #160]
   59d08:	str	x2, [x29, #400]
   59d0c:	ldr	x1, [x29, #232]
   59d10:	str	x1, [x29, #424]
   59d14:	mov	w0, #0x1                   	// #1
   59d18:	str	w0, [x29, #408]
   59d1c:	str	x2, [x29, #368]
   59d20:	add	x20, x1, x20, lsl #3
   59d24:	str	x20, [x29, #392]
   59d28:	str	w0, [x29, #376]
   59d2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59d30:	ldr	x1, [x0, #2576]
   59d34:	add	x0, x0, #0xa10
   59d38:	blr	x1
   59d3c:	mrs	x1, tpidr_el0
   59d40:	ldr	w0, [x1, x0]
   59d44:	str	w0, [x29, #124]
   59d48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59d4c:	ldr	x2, [x0, #2512]
   59d50:	add	x0, x0, #0x9d0
   59d54:	blr	x2
   59d58:	add	x2, x1, x0
   59d5c:	ldr	x0, [x1, x0]
   59d60:	str	x0, [x29, #112]
   59d64:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59d68:	ldr	x3, [x0, #2544]
   59d6c:	add	x0, x0, #0x9f0
   59d70:	blr	x3
   59d74:	ldr	x3, [x1, x0]
   59d78:	str	x3, [x29, #104]
   59d7c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   59d80:	str	x3, [x2]
   59d84:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   59d88:	str	x2, [x1, x0]
   59d8c:	ldr	x0, [x29, #152]
   59d90:	mov	x26, x0
   59d94:	cbz	x21, 59dac <mpfr_log_ui@@Base+0x250>
   59d98:	tbnz	w19, #0, 5a104 <mpfr_log_ui@@Base+0x5a8>
   59d9c:	add	x0, x21, x21, lsr #63
   59da0:	asr	x21, x0, #1
   59da4:	sub	x26, x26, #0x1
   59da8:	tbz	w0, #1, 59d9c <mpfr_log_ui@@Base+0x240>
   59dac:	mov	x0, #0x40                  	// #64
   59db0:	str	x0, [x29, #96]
   59db4:	ldr	x0, [x29, #136]
   59db8:	add	x0, x0, #0x3
   59dbc:	clz	x0, x0
   59dc0:	mov	w1, #0x41                  	// #65
   59dc4:	sub	w0, w1, w0
   59dc8:	str	w0, [x29, #168]
   59dcc:	str	x26, [x29, #144]
   59dd0:	str	x22, [x29, #128]
   59dd4:	add	x19, x29, #0xc0
   59dd8:	mov	x1, #0x20                  	// #32
   59ddc:	mov	x0, x19
   59de0:	bl	ca80 <mpfr_init2@plt>
   59de4:	cmp	x21, #0x0
   59de8:	mov	w3, #0x2                   	// #2
   59dec:	mov	x2, #0x0                   	// #0
   59df0:	cneg	x1, x21, lt  // lt = tstop
   59df4:	mov	x0, x19
   59df8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   59dfc:	mov	w2, #0x2                   	// #2
   59e00:	mov	x1, x19
   59e04:	mov	x0, x19
   59e08:	bl	c1d0 <mpfr_log2@plt>
   59e0c:	mov	w3, #0x3                   	// #3
   59e10:	mov	x2, x19
   59e14:	ldr	x1, [x29, #144]
   59e18:	mov	x0, x19
   59e1c:	bl	ca50 <mpfr_ui_sub@plt>
   59e20:	mov	w3, #0x2                   	// #2
   59e24:	mov	x2, x19
   59e28:	ldr	x1, [x29, #160]
   59e2c:	mov	x0, x19
   59e30:	bl	c2f0 <mpfr_ui_div@plt>
   59e34:	mov	w1, #0x2                   	// #2
   59e38:	mov	x0, x19
   59e3c:	bl	bca0 <mpfr_get_ui@plt>
   59e40:	cmp	x0, #0x2
   59e44:	mov	x28, #0x2                   	// #2
   59e48:	csel	x28, x0, x28, cs  // cs = hs, nlast
   59e4c:	sub	x20, x28, #0x1
   59e50:	clz	x20, x20
   59e54:	mov	w0, #0x41                  	// #65
   59e58:	sub	w20, w0, w20
   59e5c:	sxtw	x20, w20
   59e60:	mov	x0, x19
   59e64:	bl	c070 <mpfr_clear@plt>
   59e68:	add	x0, x20, x20, lsl #1
   59e6c:	mov	x1, sp
   59e70:	sub	x0, x1, x0, lsl #4
   59e74:	mov	sp, x0
   59e78:	add	x24, sp, #0x10
   59e7c:	lsl	x20, x20, #4
   59e80:	add	x22, x24, x20
   59e84:	add	x23, x22, x20
   59e88:	mov	x19, #0x0                   	// #0
   59e8c:	mov	x25, x24
   59e90:	mov	x27, x22
   59e94:	mov	x26, x23
   59e98:	add	x0, x24, x19
   59e9c:	bl	bf90 <mpfr_mpz_init@plt>
   59ea0:	add	x0, x22, x19
   59ea4:	bl	bf90 <mpfr_mpz_init@plt>
   59ea8:	add	x0, x23, x19
   59eac:	bl	bf90 <mpfr_mpz_init@plt>
   59eb0:	add	x19, x19, #0x10
   59eb4:	cmp	x20, x19
   59eb8:	b.ne	59e98 <mpfr_log_ui@@Base+0x33c>  // b.any
   59ebc:	str	wzr, [sp]
   59ec0:	ldr	x7, [x29, #144]
   59ec4:	mov	x6, x21
   59ec8:	mov	x5, x28
   59ecc:	mov	x4, #0x1                   	// #1
   59ed0:	mov	x3, x23
   59ed4:	mov	x2, x22
   59ed8:	add	x1, x29, #0xb8
   59edc:	mov	x0, x24
   59ee0:	bl	599d4 <mpfr_fmms@@Base+0x18>
   59ee4:	add	x19, x29, #0x190
   59ee8:	mov	w2, #0x0                   	// #0
   59eec:	mov	x1, x23
   59ef0:	mov	x0, x19
   59ef4:	bl	c240 <mpfr_set_z@plt>
   59ef8:	add	x0, x29, #0x170
   59efc:	mov	w2, #0x0                   	// #0
   59f00:	mov	x1, x22
   59f04:	mov	x22, x0
   59f08:	bl	c240 <mpfr_set_z@plt>
   59f0c:	mov	w3, #0x0                   	// #0
   59f10:	ldr	x2, [x29, #184]
   59f14:	mov	x1, x22
   59f18:	mov	x0, x22
   59f1c:	bl	c2c0 <mpfr_mul_2ui@plt>
   59f20:	mov	w3, #0x0                   	// #0
   59f24:	mov	x2, x22
   59f28:	mov	x1, x19
   59f2c:	mov	x0, x19
   59f30:	bl	c620 <mpfr_div@plt>
   59f34:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   59f38:	ldr	x1, [x0, #2560]
   59f3c:	add	x0, x0, #0xa00
   59f40:	blr	x1
   59f44:	mov	w2, #0x0                   	// #0
   59f48:	mrs	x1, tpidr_el0
   59f4c:	add	x1, x1, x0
   59f50:	mov	x0, x22
   59f54:	bl	c380 <mpfr_cache@plt>
   59f58:	mov	w3, #0x0                   	// #0
   59f5c:	ldr	x2, [x29, #152]
   59f60:	mov	x1, x22
   59f64:	mov	x0, x22
   59f68:	bl	ba50 <mpfr_mul_ui@plt>
   59f6c:	mov	w3, #0x0                   	// #0
   59f70:	mov	x2, x22
   59f74:	mov	x1, x19
   59f78:	mov	x0, x19
   59f7c:	bl	c1a0 <mpfr_add@plt>
   59f80:	mov	x19, #0x0                   	// #0
   59f84:	add	x0, x25, x19
   59f88:	bl	c170 <mpfr_mpz_clear@plt>
   59f8c:	add	x0, x27, x19
   59f90:	bl	c170 <mpfr_mpz_clear@plt>
   59f94:	add	x0, x26, x19
   59f98:	bl	c170 <mpfr_mpz_clear@plt>
   59f9c:	add	x19, x19, #0x10
   59fa0:	cmp	x20, x19
   59fa4:	b.ne	59f84 <mpfr_log_ui@@Base+0x428>  // b.any
   59fa8:	ldr	x0, [x29, #152]
   59fac:	cmn	x0, #0x5
   59fb0:	b.eq	5a124 <mpfr_log_ui@@Base+0x5c8>  // b.none
   59fb4:	ldr	x0, [x29, #136]
   59fb8:	add	x0, x0, #0x4
   59fbc:	cmp	x0, #0x1
   59fc0:	b.ls	5a10c <mpfr_log_ui@@Base+0x5b0>  // b.plast
   59fc4:	ldr	w2, [x29, #168]
   59fc8:	ldr	x1, [x29, #416]
   59fcc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   59fd0:	cmp	x1, x0
   59fd4:	b.le	5a12c <mpfr_log_ui@@Base+0x5d0>
   59fd8:	ldr	w0, [x29, #172]
   59fdc:	cmp	w0, #0x0
   59fe0:	ldr	x0, [x29, #128]
   59fe4:	ldr	x3, [x0]
   59fe8:	cinc	x3, x3, eq  // eq = none
   59fec:	ldr	x0, [x29, #400]
   59ff0:	add	x1, x0, #0x3e
   59ff4:	subs	x0, x0, #0x1
   59ff8:	csel	x1, x1, x0, mi  // mi = first
   59ffc:	asr	x1, x1, #6
   5a000:	ldr	x0, [x29, #160]
   5a004:	sub	x2, x0, w2, uxtw
   5a008:	add	x1, x1, #0x1
   5a00c:	ldr	x0, [x29, #424]
   5a010:	bl	c370 <mpfr_round_p@plt>
   5a014:	cbz	w0, 5a12c <mpfr_log_ui@@Base+0x5d0>
   5a018:	ldr	x22, [x29, #128]
   5a01c:	ldr	w3, [x29, #408]
   5a020:	ldr	w2, [x29, #172]
   5a024:	add	x1, x29, #0x190
   5a028:	mov	x0, x22
   5a02c:	bl	c6a0 <mpfr_set4@plt>
   5a030:	mov	w19, w0
   5a034:	ldr	x1, [x29, #224]
   5a038:	cbz	x1, 5a044 <mpfr_log_ui@@Base+0x4e8>
   5a03c:	ldr	x0, [x29, #232]
   5a040:	bl	cc20 <mpfr_free_func@plt>
   5a044:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a048:	ldr	x1, [x0, #2576]
   5a04c:	add	x0, x0, #0xa10
   5a050:	blr	x1
   5a054:	mrs	x1, tpidr_el0
   5a058:	ldr	w4, [x29, #124]
   5a05c:	str	w4, [x1, x0]
   5a060:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a064:	ldr	x2, [x0, #2512]
   5a068:	add	x0, x0, #0x9d0
   5a06c:	blr	x2
   5a070:	ldr	x2, [x29, #112]
   5a074:	str	x2, [x1, x0]
   5a078:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a07c:	ldr	x3, [x0, #2544]
   5a080:	add	x0, x0, #0x9f0
   5a084:	blr	x3
   5a088:	ldr	x3, [x29, #104]
   5a08c:	str	x3, [x1, x0]
   5a090:	ldr	x0, [x22, #16]
   5a094:	cmp	x2, x0
   5a098:	ccmp	x3, x0, #0x1, le
   5a09c:	b.lt	5a1fc <mpfr_log_ui@@Base+0x6a0>  // b.tstop
   5a0a0:	cbz	w19, 59be8 <mpfr_log_ui@@Base+0x8c>
   5a0a4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a0a8:	ldr	x1, [x0, #2576]
   5a0ac:	add	x0, x0, #0xa10
   5a0b0:	blr	x1
   5a0b4:	orr	w1, w4, #0x8
   5a0b8:	mrs	x2, tpidr_el0
   5a0bc:	str	w1, [x2, x0]
   5a0c0:	b	59be8 <mpfr_log_ui@@Base+0x8c>
   5a0c4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   5a0c8:	add	x2, x2, #0x2c8
   5a0cc:	mov	w1, #0x95                  	// #149
   5a0d0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5a0d4:	add	x0, x0, #0xd30
   5a0d8:	bl	cb40 <mpfr_assert_fail@plt>
   5a0dc:	b	59ca8 <mpfr_log_ui@@Base+0x14c>
   5a0e0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5a0e4:	lsl	x0, x20, #4
   5a0e8:	str	x0, [x29, #224]
   5a0ec:	bl	ccf0 <mpfr_allocate_func@plt>
   5a0f0:	str	x0, [x29, #232]
   5a0f4:	b	59d04 <mpfr_log_ui@@Base+0x1a8>
   5a0f8:	mov	x0, #0xb                   	// #11
   5a0fc:	str	x0, [x29, #160]
   5a100:	b	59cf8 <mpfr_log_ui@@Base+0x19c>
   5a104:	ldr	x26, [x29, #152]
   5a108:	b	59dac <mpfr_log_ui@@Base+0x250>
   5a10c:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5a110:	add	x2, x2, #0xd40
   5a114:	mov	w1, #0xda                  	// #218
   5a118:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5a11c:	add	x0, x0, #0xd30
   5a120:	bl	cb40 <mpfr_assert_fail@plt>
   5a124:	mov	w2, #0x1                   	// #1
   5a128:	b	59fc8 <mpfr_log_ui@@Base+0x46c>
   5a12c:	mov	x0, #0xfffffffffffffeff    	// #-257
   5a130:	movk	x0, #0x7fff, lsl #48
   5a134:	ldr	x1, [x29, #160]
   5a138:	sub	x0, x0, x1
   5a13c:	ldr	x1, [x29, #96]
   5a140:	cmp	x0, x1
   5a144:	b.lt	5a1cc <mpfr_log_ui@@Base+0x670>  // b.tstop
   5a148:	ldr	x0, [x29, #160]
   5a14c:	ldr	x1, [x29, #96]
   5a150:	add	x2, x0, x1
   5a154:	str	x2, [x29, #160]
   5a158:	add	x0, x2, x2, lsr #63
   5a15c:	asr	x0, x0, #1
   5a160:	str	x0, [x29, #96]
   5a164:	ldr	x1, [x29, #224]
   5a168:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5a16c:	cmp	x2, x0
   5a170:	b.ge	5a1e4 <mpfr_log_ui@@Base+0x688>  // b.tcont
   5a174:	ldr	x0, [x29, #160]
   5a178:	add	x19, x0, #0x3e
   5a17c:	subs	x0, x0, #0x1
   5a180:	csel	x19, x19, x0, mi  // mi = first
   5a184:	asr	x19, x19, #6
   5a188:	add	x19, x19, #0x1
   5a18c:	lsl	x0, x19, #4
   5a190:	str	x0, [x29, #224]
   5a194:	cbnz	x1, 5a1e8 <mpfr_log_ui@@Base+0x68c>
   5a198:	bl	ccf0 <mpfr_allocate_func@plt>
   5a19c:	str	x0, [x29, #232]
   5a1a0:	ldr	x2, [x29, #160]
   5a1a4:	str	x2, [x29, #400]
   5a1a8:	ldr	x1, [x29, #232]
   5a1ac:	str	x1, [x29, #424]
   5a1b0:	mov	w0, #0x1                   	// #1
   5a1b4:	str	w0, [x29, #408]
   5a1b8:	str	x2, [x29, #368]
   5a1bc:	add	x19, x1, x19, lsl #3
   5a1c0:	str	x19, [x29, #392]
   5a1c4:	str	w0, [x29, #376]
   5a1c8:	b	59dd4 <mpfr_log_ui@@Base+0x278>
   5a1cc:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   5a1d0:	add	x2, x2, #0x3e8
   5a1d4:	mov	w1, #0xde                  	// #222
   5a1d8:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5a1dc:	add	x0, x0, #0xd30
   5a1e0:	bl	cb40 <mpfr_assert_fail@plt>
   5a1e4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5a1e8:	mov	x2, x0
   5a1ec:	ldr	x0, [x29, #232]
   5a1f0:	bl	c1c0 <mpfr_reallocate_func@plt>
   5a1f4:	str	x0, [x29, #232]
   5a1f8:	b	5a1a0 <mpfr_log_ui@@Base+0x644>
   5a1fc:	ldr	w2, [x29, #172]
   5a200:	mov	w1, w19
   5a204:	mov	x0, x22
   5a208:	bl	cb30 <mpfr_check_range@plt>
   5a20c:	mov	w19, w0
   5a210:	b	59be8 <mpfr_log_ui@@Base+0x8c>

000000000005a214 <mpfr_gamma_inc@@Base>:
   5a214:	sub	sp, sp, #0x2a0
   5a218:	stp	x29, x30, [sp]
   5a21c:	mov	x29, sp
   5a220:	stp	x19, x20, [sp, #16]
   5a224:	stp	x21, x22, [sp, #32]
   5a228:	stp	x25, x26, [sp, #64]
   5a22c:	str	x0, [sp, #112]
   5a230:	mov	x22, x1
   5a234:	mov	x26, x2
   5a238:	str	w3, [sp, #128]
   5a23c:	ldr	x0, [x1, #16]
   5a240:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5a244:	cmp	x0, x1
   5a248:	b.le	5a3d8 <mpfr_gamma_inc@@Base+0x1c4>
   5a24c:	ldr	x2, [x2, #16]
   5a250:	cmp	x2, x1
   5a254:	b.le	5a3e8 <mpfr_gamma_inc@@Base+0x1d4>
   5a258:	ldr	w0, [x26, #8]
   5a25c:	tbnz	w0, #31, 5a718 <mpfr_gamma_inc@@Base+0x504>
   5a260:	stp	x23, x24, [sp, #48]
   5a264:	stp	x27, x28, [sp, #80]
   5a268:	mov	x0, x22
   5a26c:	bl	c160 <mpfr_integer_p@plt>
   5a270:	cbz	w0, 5a27c <mpfr_gamma_inc@@Base+0x68>
   5a274:	ldr	w0, [x22, #8]
   5a278:	tbnz	w0, #31, 5a76c <mpfr_gamma_inc@@Base+0x558>
   5a27c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a280:	ldr	x1, [x0, #2576]
   5a284:	add	x0, x0, #0xa10
   5a288:	blr	x1
   5a28c:	mrs	x1, tpidr_el0
   5a290:	ldr	w0, [x1, x0]
   5a294:	str	w0, [sp, #132]
   5a298:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a29c:	ldr	x2, [x0, #2512]
   5a2a0:	add	x0, x0, #0x9d0
   5a2a4:	blr	x2
   5a2a8:	add	x2, x1, x0
   5a2ac:	ldr	x0, [x1, x0]
   5a2b0:	str	x0, [sp, #136]
   5a2b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a2b8:	ldr	x3, [x0, #2544]
   5a2bc:	add	x0, x0, #0x9f0
   5a2c0:	blr	x3
   5a2c4:	ldr	x3, [x1, x0]
   5a2c8:	str	x3, [sp, #144]
   5a2cc:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   5a2d0:	str	x3, [x2]
   5a2d4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   5a2d8:	str	x2, [x1, x0]
   5a2dc:	ldr	x0, [sp, #112]
   5a2e0:	ldr	x0, [x0]
   5a2e4:	add	x28, x0, #0xd
   5a2e8:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   5a2ec:	cmp	x28, x1
   5a2f0:	b.ge	5ad24 <mpfr_gamma_inc@@Base+0xb10>  // b.tcont
   5a2f4:	add	x19, x0, #0x4b
   5a2f8:	adds	x0, x0, #0xc
   5a2fc:	csel	x0, x19, x0, mi  // mi = first
   5a300:	asr	x19, x0, #6
   5a304:	add	x19, x19, #0x1
   5a308:	lsl	x0, x19, #1
   5a30c:	cmp	x0, #0x10
   5a310:	b.gt	5ad28 <mpfr_gamma_inc@@Base+0xb14>
   5a314:	str	xzr, [sp, #432]
   5a318:	add	x0, sp, #0x1c0
   5a31c:	str	x0, [sp, #440]
   5a320:	str	x28, [sp, #640]
   5a324:	ldr	x1, [sp, #440]
   5a328:	str	x1, [sp, #664]
   5a32c:	mov	w0, #0x1                   	// #1
   5a330:	str	w0, [sp, #648]
   5a334:	str	x28, [sp, #608]
   5a338:	add	x19, x1, x19, lsl #3
   5a33c:	str	x19, [sp, #632]
   5a340:	str	w0, [sp, #616]
   5a344:	mov	x1, #0x2                   	// #2
   5a348:	add	x0, sp, #0x240
   5a34c:	bl	ca80 <mpfr_init2@plt>
   5a350:	mov	x0, #0x40                  	// #64
   5a354:	str	x0, [sp, #152]
   5a358:	add	x23, sp, #0x240
   5a35c:	add	x19, sp, #0x260
   5a360:	add	x24, sp, #0x280
   5a364:	add	x0, sp, #0x120
   5a368:	str	x0, [sp, #104]
   5a36c:	mov	w25, #0x1                   	// #1
   5a370:	ldr	x0, [x22, #16]
   5a374:	cmp	x0, #0x0
   5a378:	b.le	5ad3c <mpfr_gamma_inc@@Base+0xb28>
   5a37c:	ldr	x1, [x22]
   5a380:	cmp	x1, x0
   5a384:	csel	x1, x1, x0, ge  // ge = tcont
   5a388:	add	x1, x1, #0x1
   5a38c:	mov	x0, x23
   5a390:	bl	bed0 <mpfr_set_prec@plt>
   5a394:	ldr	x27, [x22, #16]
   5a398:	mov	x1, #0x1                   	// #1
   5a39c:	cmp	x27, #0x0
   5a3a0:	csel	x27, x27, x1, gt
   5a3a4:	mov	w3, #0x4                   	// #4
   5a3a8:	mov	x2, x22
   5a3ac:	mov	x0, x19
   5a3b0:	bl	c2f0 <mpfr_ui_div@plt>
   5a3b4:	ldr	w3, [sp, #616]
   5a3b8:	mov	w2, #0x4                   	// #4
   5a3bc:	mov	x1, x19
   5a3c0:	mov	x0, x24
   5a3c4:	bl	c6a0 <mpfr_set4@plt>
   5a3c8:	ldr	w0, [x22, #8]
   5a3cc:	tbnz	w0, #31, 5ad90 <mpfr_gamma_inc@@Base+0xb7c>
   5a3d0:	mov	x21, #0x1                   	// #1
   5a3d4:	b	5ae18 <mpfr_gamma_inc@@Base+0xc04>
   5a3d8:	mov	x1, #0x2                   	// #2
   5a3dc:	movk	x1, #0x8000, lsl #48
   5a3e0:	cmp	x0, x1
   5a3e4:	b.eq	5a45c <mpfr_gamma_inc@@Base+0x248>  // b.none
   5a3e8:	ldr	x1, [x26, #16]
   5a3ec:	mov	x2, #0x2                   	// #2
   5a3f0:	movk	x2, #0x8000, lsl #48
   5a3f4:	cmp	x1, x2
   5a3f8:	b.eq	5a45c <mpfr_gamma_inc@@Base+0x248>  // b.none
   5a3fc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   5a400:	cmp	x1, x2
   5a404:	cset	w3, eq  // eq = none
   5a408:	cmp	x0, x2
   5a40c:	cset	w2, eq  // eq = none
   5a410:	cmp	w2, #0x0
   5a414:	ccmp	w3, #0x0, #0x0, eq  // eq = none
   5a418:	b.eq	5a608 <mpfr_gamma_inc@@Base+0x3f4>  // b.none
   5a41c:	cmp	w2, #0x0
   5a420:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   5a424:	b.ne	5a498 <mpfr_gamma_inc@@Base+0x284>  // b.any
   5a428:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5a42c:	cmp	x0, x1
   5a430:	b.eq	5a510 <mpfr_gamma_inc@@Base+0x2fc>  // b.none
   5a434:	ldr	w0, [x26, #8]
   5a438:	cmp	w0, #0x0
   5a43c:	b.le	5a5cc <mpfr_gamma_inc@@Base+0x3b8>
   5a440:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5a444:	ldr	x1, [sp, #112]
   5a448:	str	x0, [x1, #16]
   5a44c:	mov	w0, #0x1                   	// #1
   5a450:	str	w0, [x1, #8]
   5a454:	mov	w19, #0x0                   	// #0
   5a458:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a45c:	mov	x0, #0x2                   	// #2
   5a460:	movk	x0, #0x8000, lsl #48
   5a464:	ldr	x1, [sp, #112]
   5a468:	str	x0, [x1, #16]
   5a46c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a470:	ldr	x1, [x0, #2576]
   5a474:	add	x0, x0, #0xa10
   5a478:	blr	x1
   5a47c:	mrs	x1, tpidr_el0
   5a480:	add	x0, x1, x0
   5a484:	ldr	w1, [x0]
   5a488:	orr	w1, w1, #0x4
   5a48c:	str	w1, [x0]
   5a490:	mov	w19, #0x0                   	// #0
   5a494:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a498:	ldr	w0, [x22, #8]
   5a49c:	cmp	w0, #0x0
   5a4a0:	b.le	5a4b0 <mpfr_gamma_inc@@Base+0x29c>
   5a4a4:	ldr	w0, [x26, #8]
   5a4a8:	cmp	w0, #0x0
   5a4ac:	b.gt	5a4d4 <mpfr_gamma_inc@@Base+0x2c0>
   5a4b0:	ldr	w0, [x26, #8]
   5a4b4:	tbnz	w0, #31, 5a4d4 <mpfr_gamma_inc@@Base+0x2c0>
   5a4b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5a4bc:	ldr	x1, [sp, #112]
   5a4c0:	str	x0, [x1, #16]
   5a4c4:	mov	w0, #0x1                   	// #1
   5a4c8:	str	w0, [x1, #8]
   5a4cc:	mov	w19, #0x0                   	// #0
   5a4d0:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a4d4:	mov	x0, #0x2                   	// #2
   5a4d8:	movk	x0, #0x8000, lsl #48
   5a4dc:	ldr	x1, [sp, #112]
   5a4e0:	str	x0, [x1, #16]
   5a4e4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a4e8:	ldr	x1, [x0, #2576]
   5a4ec:	add	x0, x0, #0xa10
   5a4f0:	blr	x1
   5a4f4:	mrs	x1, tpidr_el0
   5a4f8:	add	x0, x1, x0
   5a4fc:	ldr	w1, [x0]
   5a500:	orr	w1, w1, #0x4
   5a504:	str	w1, [x0]
   5a508:	mov	w19, #0x0                   	// #0
   5a50c:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a510:	ldr	w0, [x22, #8]
   5a514:	cmp	w0, #0x0
   5a518:	b.le	5a538 <mpfr_gamma_inc@@Base+0x324>
   5a51c:	mov	x0, x1
   5a520:	ldr	x1, [sp, #112]
   5a524:	str	x0, [x1, #16]
   5a528:	mov	w0, #0x1                   	// #1
   5a52c:	str	w0, [x1, #8]
   5a530:	mov	w19, #0x0                   	// #0
   5a534:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a538:	mov	x0, x26
   5a53c:	bl	c710 <mpfr_sgn@plt>
   5a540:	tbnz	w0, #31, 5a574 <mpfr_gamma_inc@@Base+0x360>
   5a544:	mov	x2, #0x0                   	// #0
   5a548:	mov	x1, #0x1                   	// #1
   5a54c:	mov	x0, x26
   5a550:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5a554:	tbnz	w0, #31, 5a5b0 <mpfr_gamma_inc@@Base+0x39c>
   5a558:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5a55c:	ldr	x1, [sp, #112]
   5a560:	str	x0, [x1, #16]
   5a564:	mov	w0, #0x1                   	// #1
   5a568:	str	w0, [x1, #8]
   5a56c:	mov	w19, #0x0                   	// #0
   5a570:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a574:	mov	x0, #0x2                   	// #2
   5a578:	movk	x0, #0x8000, lsl #48
   5a57c:	ldr	x1, [sp, #112]
   5a580:	str	x0, [x1, #16]
   5a584:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a588:	ldr	x1, [x0, #2576]
   5a58c:	add	x0, x0, #0xa10
   5a590:	blr	x1
   5a594:	mrs	x1, tpidr_el0
   5a598:	add	x0, x1, x0
   5a59c:	ldr	w1, [x0]
   5a5a0:	orr	w1, w1, #0x4
   5a5a4:	str	w1, [x0]
   5a5a8:	mov	w19, #0x0                   	// #0
   5a5ac:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a5b0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5a5b4:	ldr	x1, [sp, #112]
   5a5b8:	str	x0, [x1, #16]
   5a5bc:	mov	w0, #0x1                   	// #1
   5a5c0:	str	w0, [x1, #8]
   5a5c4:	mov	w19, #0x0                   	// #0
   5a5c8:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a5cc:	mov	x0, #0x2                   	// #2
   5a5d0:	movk	x0, #0x8000, lsl #48
   5a5d4:	ldr	x1, [sp, #112]
   5a5d8:	str	x0, [x1, #16]
   5a5dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a5e0:	ldr	x1, [x0, #2576]
   5a5e4:	add	x0, x0, #0xa10
   5a5e8:	blr	x1
   5a5ec:	mrs	x1, tpidr_el0
   5a5f0:	add	x0, x1, x0
   5a5f4:	ldr	w1, [x0]
   5a5f8:	orr	w1, w1, #0x4
   5a5fc:	str	w1, [x0]
   5a600:	mov	w19, #0x0                   	// #0
   5a604:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a608:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   5a60c:	cmp	x1, x2
   5a610:	ccmp	x0, x2, #0x4, ne  // ne = any
   5a614:	b.ne	5a258 <mpfr_gamma_inc@@Base+0x44>  // b.any
   5a618:	cmp	x0, x2
   5a61c:	b.ne	5a700 <mpfr_gamma_inc@@Base+0x4ec>  // b.any
   5a620:	mov	x0, x26
   5a624:	bl	c710 <mpfr_sgn@plt>
   5a628:	tbnz	w0, #31, 5a6a0 <mpfr_gamma_inc@@Base+0x48c>
   5a62c:	ldr	x1, [x26, #16]
   5a630:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5a634:	cmp	x1, x0
   5a638:	b.eq	5a6dc <mpfr_gamma_inc@@Base+0x4c8>  // b.none
   5a63c:	ldr	x0, [x26]
   5a640:	str	x0, [sp, #288]
   5a644:	ldr	x0, [x26, #24]
   5a648:	str	x0, [sp, #312]
   5a64c:	ldr	w0, [x26, #8]
   5a650:	neg	w0, w0
   5a654:	str	w0, [sp, #296]
   5a658:	str	x1, [sp, #304]
   5a65c:	ldr	w1, [sp, #128]
   5a660:	cmp	w1, #0x2
   5a664:	b.eq	5a6f4 <mpfr_gamma_inc@@Base+0x4e0>  // b.none
   5a668:	cmp	w1, #0x3
   5a66c:	mov	w0, #0x2                   	// #2
   5a670:	csel	w0, w1, w0, ne  // ne = any
   5a674:	str	w0, [sp, #128]
   5a678:	ldr	w2, [sp, #128]
   5a67c:	add	x1, sp, #0x120
   5a680:	ldr	x19, [sp, #112]
   5a684:	mov	x0, x19
   5a688:	bl	c9e0 <mpfr_eint@plt>
   5a68c:	ldr	w1, [x19, #8]
   5a690:	neg	w1, w1
   5a694:	str	w1, [x19, #8]
   5a698:	neg	w19, w0
   5a69c:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a6a0:	mov	x0, #0x2                   	// #2
   5a6a4:	movk	x0, #0x8000, lsl #48
   5a6a8:	ldr	x1, [sp, #112]
   5a6ac:	str	x0, [x1, #16]
   5a6b0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a6b4:	ldr	x1, [x0, #2576]
   5a6b8:	add	x0, x0, #0xa10
   5a6bc:	blr	x1
   5a6c0:	mrs	x1, tpidr_el0
   5a6c4:	add	x0, x1, x0
   5a6c8:	ldr	w1, [x0]
   5a6cc:	orr	w1, w1, #0x4
   5a6d0:	str	w1, [x0]
   5a6d4:	mov	w19, #0x0                   	// #0
   5a6d8:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a6dc:	ldr	w2, [sp, #128]
   5a6e0:	mov	x1, x22
   5a6e4:	ldr	x0, [sp, #112]
   5a6e8:	bl	c7b0 <mpfr_gamma@plt>
   5a6ec:	mov	w19, w0
   5a6f0:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a6f4:	mov	w0, #0x3                   	// #3
   5a6f8:	str	w0, [sp, #128]
   5a6fc:	b	5a678 <mpfr_gamma_inc@@Base+0x464>
   5a700:	ldr	w2, [sp, #128]
   5a704:	mov	x1, x22
   5a708:	ldr	x0, [sp, #112]
   5a70c:	bl	c7b0 <mpfr_gamma@plt>
   5a710:	mov	w19, w0
   5a714:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5a718:	mov	x0, #0x2                   	// #2
   5a71c:	movk	x0, #0x8000, lsl #48
   5a720:	ldr	x1, [sp, #112]
   5a724:	str	x0, [x1, #16]
   5a728:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a72c:	ldr	x1, [x0, #2576]
   5a730:	add	x0, x0, #0xa10
   5a734:	blr	x1
   5a738:	mrs	x1, tpidr_el0
   5a73c:	add	x0, x1, x0
   5a740:	ldr	w1, [x0]
   5a744:	orr	w1, w1, #0x4
   5a748:	str	w1, [x0]
   5a74c:	mov	w19, #0x0                   	// #0
   5a750:	mov	w0, w19
   5a754:	ldp	x19, x20, [sp, #16]
   5a758:	ldp	x21, x22, [sp, #32]
   5a75c:	ldp	x25, x26, [sp, #64]
   5a760:	ldp	x29, x30, [sp]
   5a764:	add	sp, sp, #0x2a0
   5a768:	ret
   5a76c:	ldr	x0, [x22]
   5a770:	str	x0, [sp, #224]
   5a774:	ldr	x0, [x22, #24]
   5a778:	str	x0, [sp, #248]
   5a77c:	mov	w0, #0x1                   	// #1
   5a780:	str	w0, [sp, #232]
   5a784:	ldr	x0, [x22, #16]
   5a788:	str	x0, [sp, #240]
   5a78c:	ldr	x0, [sp, #112]
   5a790:	ldr	x1, [x0]
   5a794:	add	x5, x1, #0xa
   5a798:	str	x5, [sp, #104]
   5a79c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a7a0:	ldr	x2, [x0, #2576]
   5a7a4:	add	x0, x0, #0xa10
   5a7a8:	blr	x2
   5a7ac:	mrs	x2, tpidr_el0
   5a7b0:	ldr	w0, [x2, x0]
   5a7b4:	str	w0, [sp, #132]
   5a7b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a7bc:	ldr	x3, [x0, #2512]
   5a7c0:	add	x0, x0, #0x9d0
   5a7c4:	blr	x3
   5a7c8:	add	x3, x2, x0
   5a7cc:	ldr	x0, [x2, x0]
   5a7d0:	str	x0, [sp, #136]
   5a7d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5a7d8:	ldr	x4, [x0, #2544]
   5a7dc:	add	x0, x0, #0x9f0
   5a7e0:	blr	x4
   5a7e4:	ldr	x4, [x2, x0]
   5a7e8:	str	x4, [sp, #144]
   5a7ec:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   5a7f0:	str	x4, [x3]
   5a7f4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5a7f8:	str	x3, [x2, x0]
   5a7fc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5a800:	cmp	x5, x0
   5a804:	b.ge	5a960 <mpfr_gamma_inc@@Base+0x74c>  // b.tcont
   5a808:	add	x19, x1, #0x48
   5a80c:	adds	x1, x1, #0x9
   5a810:	csel	x1, x19, x1, mi  // mi = first
   5a814:	asr	x19, x1, #6
   5a818:	add	x19, x19, #0x1
   5a81c:	lsl	x0, x19, #1
   5a820:	cmp	x0, #0x10
   5a824:	b.gt	5a964 <mpfr_gamma_inc@@Base+0x750>
   5a828:	str	xzr, [sp, #288]
   5a82c:	add	x0, sp, #0x130
   5a830:	str	x0, [sp, #296]
   5a834:	ldr	x2, [sp, #104]
   5a838:	str	x2, [sp, #160]
   5a83c:	ldr	x1, [sp, #296]
   5a840:	str	x1, [sp, #184]
   5a844:	mov	w0, #0x1                   	// #1
   5a848:	str	w0, [sp, #168]
   5a84c:	str	x2, [sp, #192]
   5a850:	add	x19, x1, x19, lsl #3
   5a854:	str	x19, [sp, #216]
   5a858:	str	w0, [sp, #200]
   5a85c:	mov	x0, #0x40                  	// #64
   5a860:	str	x0, [sp, #120]
   5a864:	add	x19, sp, #0xc0
   5a868:	add	x27, sp, #0xa0
   5a86c:	add	x28, sp, #0xe0
   5a870:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   5a874:	ldr	x0, [x22, #16]
   5a878:	add	x1, x0, #0x2
   5a87c:	add	x0, x0, #0x3
   5a880:	ldr	x2, [sp, #104]
   5a884:	cmp	x1, x2
   5a888:	csel	x0, x0, x2, ge  // ge = tcont
   5a88c:	str	x0, [sp, #104]
   5a890:	mov	w3, #0x0                   	// #0
   5a894:	mov	x2, x26
   5a898:	mov	x1, #0x1                   	// #1
   5a89c:	mov	x0, x19
   5a8a0:	bl	c2f0 <mpfr_ui_div@plt>
   5a8a4:	ldr	w3, [sp, #200]
   5a8a8:	mov	w2, #0x0                   	// #0
   5a8ac:	mov	x1, x19
   5a8b0:	mov	x0, x27
   5a8b4:	bl	c6a0 <mpfr_set4@plt>
   5a8b8:	ldr	x23, [sp, #176]
   5a8bc:	mov	x24, x23
   5a8c0:	mov	x20, x23
   5a8c4:	mov	x21, #0x1                   	// #1
   5a8c8:	mov	x2, #0x0                   	// #0
   5a8cc:	mov	x1, x21
   5a8d0:	mov	x0, x28
   5a8d4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5a8d8:	cmp	w0, #0x0
   5a8dc:	b.le	5a978 <mpfr_gamma_inc@@Base+0x764>
   5a8e0:	mov	w3, #0x0                   	// #0
   5a8e4:	mov	x2, x21
   5a8e8:	mov	x1, x19
   5a8ec:	mov	x0, x19
   5a8f0:	bl	ba50 <mpfr_mul_ui@plt>
   5a8f4:	mov	w2, #0x0                   	// #0
   5a8f8:	mov	x1, x19
   5a8fc:	mov	x0, x19
   5a900:	bl	bd70 <mpfr_neg@plt>
   5a904:	mov	w3, #0x0                   	// #0
   5a908:	mov	x2, x26
   5a90c:	mov	x1, x19
   5a910:	mov	x0, x19
   5a914:	bl	c620 <mpfr_div@plt>
   5a918:	ldr	x0, [sp, #208]
   5a91c:	cmp	x0, x25
   5a920:	b.eq	5a978 <mpfr_gamma_inc@@Base+0x764>  // b.none
   5a924:	cmp	x24, x0
   5a928:	csel	x24, x24, x0, ge  // ge = tcont
   5a92c:	mov	w3, #0x0                   	// #0
   5a930:	mov	x2, x19
   5a934:	mov	x1, x27
   5a938:	mov	x0, x27
   5a93c:	bl	c1a0 <mpfr_add@plt>
   5a940:	ldr	x20, [sp, #176]
   5a944:	cmp	x20, x25
   5a948:	ldr	x0, [sp, #208]
   5a94c:	csel	x20, x0, x20, eq  // eq = none
   5a950:	cmp	x23, x20
   5a954:	csel	x23, x23, x20, ge  // ge = tcont
   5a958:	add	x21, x21, #0x1
   5a95c:	b	5a8c8 <mpfr_gamma_inc@@Base+0x6b4>
   5a960:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5a964:	lsl	x0, x19, #4
   5a968:	str	x0, [sp, #288]
   5a96c:	bl	ccf0 <mpfr_allocate_func@plt>
   5a970:	str	x0, [sp, #296]
   5a974:	b	5a834 <mpfr_gamma_inc@@Base+0x620>
   5a978:	cmp	x21, #0x1
   5a97c:	b.eq	5ac18 <mpfr_gamma_inc@@Base+0xa04>  // b.none
   5a980:	b.ls	5ac00 <mpfr_gamma_inc@@Base+0x9ec>  // b.plast
   5a984:	sub	x0, x21, #0x1
   5a988:	clz	x0, x0
   5a98c:	mov	w1, #0x40                  	// #64
   5a990:	sub	w0, w1, w0
   5a994:	sxtw	x0, w0
   5a998:	sub	x1, x0, #0x1
   5a99c:	add	x23, x1, x23
   5a9a0:	add	x0, x24, x0, lsl #1
   5a9a4:	add	x1, x0, #0x1
   5a9a8:	add	x0, x0, #0x2
   5a9ac:	cmp	x23, x1
   5a9b0:	csinc	x0, x0, x23, lt  // lt = tstop
   5a9b4:	sub	x21, x0, x20
   5a9b8:	ldr	x0, [x26]
   5a9bc:	str	x0, [sp, #256]
   5a9c0:	ldr	x0, [x26, #24]
   5a9c4:	str	x0, [sp, #280]
   5a9c8:	ldr	w0, [x26, #8]
   5a9cc:	neg	w0, w0
   5a9d0:	str	w0, [sp, #264]
   5a9d4:	ldr	x0, [x26, #16]
   5a9d8:	str	x0, [sp, #272]
   5a9dc:	mov	w2, #0x0                   	// #0
   5a9e0:	add	x1, sp, #0x100
   5a9e4:	mov	x0, x19
   5a9e8:	bl	c750 <mpfr_exp@plt>
   5a9ec:	mov	w3, #0x0                   	// #0
   5a9f0:	mov	x2, x19
   5a9f4:	mov	x1, x27
   5a9f8:	mov	x0, x27
   5a9fc:	bl	bd50 <mpfr_mul@plt>
   5aa00:	ldr	x0, [sp, #176]
   5aa04:	cmp	x0, x25
   5aa08:	b.ne	5aa14 <mpfr_gamma_inc@@Base+0x800>  // b.any
   5aa0c:	ldr	x0, [sp, #208]
   5aa10:	add	x20, x20, x0
   5aa14:	cmp	x21, #0x2
   5aa18:	mov	x23, #0x2                   	// #2
   5aa1c:	csel	x21, x21, x23, ge  // ge = tcont
   5aa20:	add	x23, x21, x23
   5aa24:	mov	w2, #0x0                   	// #0
   5aa28:	add	x1, sp, #0x100
   5aa2c:	mov	x0, x19
   5aa30:	bl	c9e0 <mpfr_eint@plt>
   5aa34:	mov	w2, #0x0                   	// #0
   5aa38:	mov	x1, x19
   5aa3c:	mov	x0, x19
   5aa40:	bl	bd70 <mpfr_neg@plt>
   5aa44:	ldr	x0, [sp, #176]
   5aa48:	cmp	x0, x25
   5aa4c:	csel	x20, x20, x0, eq  // eq = none
   5aa50:	ldr	x21, [sp, #208]
   5aa54:	mov	w3, #0x0                   	// #0
   5aa58:	mov	x2, x27
   5aa5c:	mov	x1, x19
   5aa60:	mov	x0, x27
   5aa64:	bl	bb70 <mpfr_sub@plt>
   5aa68:	ldr	x0, [sp, #176]
   5aa6c:	cmp	x0, x25
   5aa70:	b.eq	5ac34 <mpfr_gamma_inc@@Base+0xa20>  // b.none
   5aa74:	add	x20, x23, x20
   5aa78:	sub	x1, x21, #0x1
   5aa7c:	cmp	x20, x1
   5aa80:	csinc	x21, x21, x20, lt  // lt = tstop
   5aa84:	sub	x21, x21, x0
   5aa88:	mov	w2, #0x0                   	// #0
   5aa8c:	mov	x1, x28
   5aa90:	mov	x0, x19
   5aa94:	bl	c7b0 <mpfr_gamma@plt>
   5aa98:	mov	w3, #0x0                   	// #0
   5aa9c:	mov	x2, x28
   5aaa0:	mov	x1, x19
   5aaa4:	mov	x0, x19
   5aaa8:	bl	bd50 <mpfr_mul@plt>
   5aaac:	mov	w3, #0x0                   	// #0
   5aab0:	mov	x2, x19
   5aab4:	mov	x1, x27
   5aab8:	mov	x0, x27
   5aabc:	bl	c620 <mpfr_div@plt>
   5aac0:	cmp	x21, #0x1
   5aac4:	mov	x0, #0x4                   	// #4
   5aac8:	csinc	x21, x0, x21, le
   5aacc:	mov	w3, #0x0                   	// #0
   5aad0:	mov	x2, #0x0                   	// #0
   5aad4:	mov	x1, #0xffffffffffffffff    	// #-1
   5aad8:	mov	x0, x19
   5aadc:	bl	ba80 <mpfr_set_si_2exp@plt>
   5aae0:	mov	w3, #0x0                   	// #0
   5aae4:	mov	x2, x28
   5aae8:	mov	x1, x19
   5aaec:	mov	x0, x19
   5aaf0:	bl	bd90 <mpfr_pow@plt>
   5aaf4:	ldr	w0, [sp, #200]
   5aaf8:	tbnz	w0, #31, 5ac20 <mpfr_gamma_inc@@Base+0xa0c>
   5aafc:	ldr	x1, [sp, #176]
   5ab00:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5ab04:	cmp	x1, x0
   5ab08:	b.le	5ac34 <mpfr_gamma_inc@@Base+0xa20>
   5ab0c:	ldr	w0, [sp, #128]
   5ab10:	cmp	w0, #0x0
   5ab14:	ldr	x0, [sp, #112]
   5ab18:	ldr	x3, [x0]
   5ab1c:	cinc	x3, x3, eq  // eq = none
   5ab20:	ldr	x0, [sp, #160]
   5ab24:	add	x1, x0, #0x3e
   5ab28:	subs	x0, x0, #0x1
   5ab2c:	csel	x1, x1, x0, mi  // mi = first
   5ab30:	asr	x1, x1, #6
   5ab34:	ldr	x0, [sp, #104]
   5ab38:	sub	x2, x0, x21
   5ab3c:	add	x1, x1, #0x1
   5ab40:	ldr	x0, [sp, #184]
   5ab44:	bl	c370 <mpfr_round_p@plt>
   5ab48:	cbz	w0, 5ac34 <mpfr_gamma_inc@@Base+0xa20>
   5ab4c:	ldr	w3, [sp, #168]
   5ab50:	ldr	w2, [sp, #128]
   5ab54:	add	x1, sp, #0xa0
   5ab58:	ldr	x0, [sp, #112]
   5ab5c:	bl	c6a0 <mpfr_set4@plt>
   5ab60:	mov	w19, w0
   5ab64:	ldr	x1, [sp, #288]
   5ab68:	cbz	x1, 5ab74 <mpfr_gamma_inc@@Base+0x960>
   5ab6c:	ldr	x0, [sp, #296]
   5ab70:	bl	cc20 <mpfr_free_func@plt>
   5ab74:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5ab78:	ldr	x1, [x0, #2576]
   5ab7c:	add	x0, x0, #0xa10
   5ab80:	blr	x1
   5ab84:	mrs	x1, tpidr_el0
   5ab88:	ldr	w4, [sp, #132]
   5ab8c:	str	w4, [x1, x0]
   5ab90:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5ab94:	ldr	x2, [x0, #2512]
   5ab98:	add	x0, x0, #0x9d0
   5ab9c:	blr	x2
   5aba0:	ldr	x2, [sp, #136]
   5aba4:	str	x2, [x1, x0]
   5aba8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5abac:	ldr	x3, [x0, #2544]
   5abb0:	add	x0, x0, #0x9f0
   5abb4:	blr	x3
   5abb8:	ldr	x3, [sp, #144]
   5abbc:	str	x3, [x1, x0]
   5abc0:	ldr	x0, [sp, #112]
   5abc4:	ldr	x0, [x0, #16]
   5abc8:	cmp	x2, x0
   5abcc:	ccmp	x3, x0, #0x1, le
   5abd0:	b.lt	5ad04 <mpfr_gamma_inc@@Base+0xaf0>  // b.tstop
   5abd4:	cbz	w19, 5b238 <mpfr_gamma_inc@@Base+0x1024>
   5abd8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5abdc:	ldr	x1, [x0, #2576]
   5abe0:	add	x0, x0, #0xa10
   5abe4:	blr	x1
   5abe8:	orr	w1, w4, #0x8
   5abec:	mrs	x2, tpidr_el0
   5abf0:	str	w1, [x2, x0]
   5abf4:	ldp	x23, x24, [sp, #48]
   5abf8:	ldp	x27, x28, [sp, #80]
   5abfc:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5ac00:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5ac04:	add	x2, x2, #0xd50
   5ac08:	mov	w1, #0x1a2                 	// #418
   5ac0c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5ac10:	add	x0, x0, #0xd58
   5ac14:	bl	cb40 <mpfr_assert_fail@plt>
   5ac18:	mov	x0, #0x0                   	// #0
   5ac1c:	b	5a998 <mpfr_gamma_inc@@Base+0x784>
   5ac20:	mov	w2, #0x0                   	// #0
   5ac24:	mov	x1, x27
   5ac28:	mov	x0, x27
   5ac2c:	bl	bd70 <mpfr_neg@plt>
   5ac30:	b	5aafc <mpfr_gamma_inc@@Base+0x8e8>
   5ac34:	mov	x0, #0xfffffffffffffeff    	// #-257
   5ac38:	movk	x0, #0x7fff, lsl #48
   5ac3c:	ldr	x1, [sp, #104]
   5ac40:	sub	x0, x0, x1
   5ac44:	ldr	x1, [sp, #120]
   5ac48:	cmp	x0, x1
   5ac4c:	b.lt	5acd4 <mpfr_gamma_inc@@Base+0xac0>  // b.tstop
   5ac50:	ldr	x0, [sp, #104]
   5ac54:	ldr	x1, [sp, #120]
   5ac58:	add	x2, x0, x1
   5ac5c:	str	x2, [sp, #104]
   5ac60:	add	x0, x2, x2, lsr #63
   5ac64:	asr	x0, x0, #1
   5ac68:	str	x0, [sp, #120]
   5ac6c:	ldr	x1, [sp, #288]
   5ac70:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5ac74:	cmp	x2, x0
   5ac78:	b.ge	5acec <mpfr_gamma_inc@@Base+0xad8>  // b.tcont
   5ac7c:	ldr	x0, [sp, #104]
   5ac80:	add	x20, x0, #0x3e
   5ac84:	subs	x0, x0, #0x1
   5ac88:	csel	x20, x20, x0, mi  // mi = first
   5ac8c:	asr	x20, x20, #6
   5ac90:	add	x20, x20, #0x1
   5ac94:	lsl	x0, x20, #4
   5ac98:	str	x0, [sp, #288]
   5ac9c:	cbnz	x1, 5acf0 <mpfr_gamma_inc@@Base+0xadc>
   5aca0:	bl	ccf0 <mpfr_allocate_func@plt>
   5aca4:	str	x0, [sp, #296]
   5aca8:	ldr	x2, [sp, #104]
   5acac:	str	x2, [sp, #160]
   5acb0:	ldr	x1, [sp, #296]
   5acb4:	str	x1, [sp, #184]
   5acb8:	mov	w0, #0x1                   	// #1
   5acbc:	str	w0, [sp, #168]
   5acc0:	str	x2, [sp, #192]
   5acc4:	add	x20, x1, x20, lsl #3
   5acc8:	str	x20, [sp, #216]
   5accc:	str	w0, [sp, #200]
   5acd0:	b	5a874 <mpfr_gamma_inc@@Base+0x660>
   5acd4:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   5acd8:	add	x2, x2, #0x3e8
   5acdc:	mov	w1, #0x1ee                 	// #494
   5ace0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5ace4:	add	x0, x0, #0xd58
   5ace8:	bl	cb40 <mpfr_assert_fail@plt>
   5acec:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5acf0:	mov	x2, x0
   5acf4:	ldr	x0, [sp, #296]
   5acf8:	bl	c1c0 <mpfr_reallocate_func@plt>
   5acfc:	str	x0, [sp, #296]
   5ad00:	b	5aca8 <mpfr_gamma_inc@@Base+0xa94>
   5ad04:	ldr	w2, [sp, #128]
   5ad08:	mov	w1, w19
   5ad0c:	ldr	x0, [sp, #112]
   5ad10:	bl	cb30 <mpfr_check_range@plt>
   5ad14:	mov	w19, w0
   5ad18:	ldp	x23, x24, [sp, #48]
   5ad1c:	ldp	x27, x28, [sp, #80]
   5ad20:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5ad24:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5ad28:	lsl	x0, x19, #4
   5ad2c:	str	x0, [sp, #432]
   5ad30:	bl	ccf0 <mpfr_allocate_func@plt>
   5ad34:	str	x0, [sp, #440]
   5ad38:	b	5a320 <mpfr_gamma_inc@@Base+0x10c>
   5ad3c:	mov	x1, #0x1                   	// #1
   5ad40:	sub	x1, x1, x0
   5ad44:	ldr	x2, [x22]
   5ad48:	mov	x0, #0xfffffffffffffeff    	// #-257
   5ad4c:	movk	x0, #0x7fff, lsl #48
   5ad50:	sub	x0, x0, x2
   5ad54:	cmp	x1, x0
   5ad58:	b.gt	5ad74 <mpfr_gamma_inc@@Base+0xb60>
   5ad5c:	ldr	x0, [x22, #16]
   5ad60:	mov	x1, #0x1                   	// #1
   5ad64:	sub	x1, x1, x0
   5ad68:	ldr	x0, [x22]
   5ad6c:	add	x1, x1, x0
   5ad70:	b	5a388 <mpfr_gamma_inc@@Base+0x174>
   5ad74:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5ad78:	add	x2, x2, #0xd68
   5ad7c:	mov	w1, #0xd2                  	// #210
   5ad80:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5ad84:	add	x0, x0, #0xd58
   5ad88:	bl	cb40 <mpfr_assert_fail@plt>
   5ad8c:	b	5ad5c <mpfr_gamma_inc@@Base+0xb48>
   5ad90:	mov	x1, #0x20                  	// #32
   5ad94:	ldr	x20, [sp, #104]
   5ad98:	mov	x0, x20
   5ad9c:	bl	ca80 <mpfr_init2@plt>
   5ada0:	mov	w3, w25
   5ada4:	mov	w2, #0x2                   	// #2
   5ada8:	mov	x1, x24
   5adac:	mov	x0, x20
   5adb0:	bl	c6a0 <mpfr_set4@plt>
   5adb4:	b	5a3d0 <mpfr_gamma_inc@@Base+0x1bc>
   5adb8:	ldr	w0, [sp, #616]
   5adbc:	cmp	w0, #0x0
   5adc0:	b.le	5addc <mpfr_gamma_inc@@Base+0xbc8>
   5adc4:	mov	w3, #0x2                   	// #2
   5adc8:	mov	x2, x19
   5adcc:	ldr	x0, [sp, #104]
   5add0:	mov	x1, x0
   5add4:	bl	c1a0 <mpfr_add@plt>
   5add8:	b	5ae84 <mpfr_gamma_inc@@Base+0xc70>
   5addc:	mov	w3, #0x2                   	// #2
   5ade0:	mov	x2, x19
   5ade4:	ldr	x0, [sp, #104]
   5ade8:	mov	x1, x0
   5adec:	bl	bb70 <mpfr_sub@plt>
   5adf0:	b	5ae84 <mpfr_gamma_inc@@Base+0xc70>
   5adf4:	ldr	x20, [sp, #592]
   5adf8:	cmp	x20, x27
   5adfc:	b.le	5ae14 <mpfr_gamma_inc@@Base+0xc00>
   5ae00:	ldr	x1, [sp, #576]
   5ae04:	add	x1, x1, #0x1
   5ae08:	mov	x0, x23
   5ae0c:	bl	bed0 <mpfr_set_prec@plt>
   5ae10:	mov	x27, x20
   5ae14:	add	x21, x21, #0x1
   5ae18:	mov	w3, #0x2                   	// #2
   5ae1c:	mov	x2, x26
   5ae20:	mov	x1, x19
   5ae24:	mov	x0, x19
   5ae28:	bl	bd50 <mpfr_mul@plt>
   5ae2c:	mov	w3, w25
   5ae30:	mov	x2, x21
   5ae34:	mov	x1, x22
   5ae38:	mov	x0, x23
   5ae3c:	bl	c260 <mpfr_add_ui@plt>
   5ae40:	mov	w3, #0x4                   	// #4
   5ae44:	mov	x2, x23
   5ae48:	mov	x1, x19
   5ae4c:	mov	x0, x19
   5ae50:	bl	c620 <mpfr_div@plt>
   5ae54:	mov	w3, w25
   5ae58:	mov	x2, x19
   5ae5c:	mov	x1, x24
   5ae60:	mov	x0, x24
   5ae64:	bl	c1a0 <mpfr_add@plt>
   5ae68:	ldr	x20, [sp, #656]
   5ae6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5ae70:	cmp	x20, x0
   5ae74:	ldr	x0, [sp, #624]
   5ae78:	csel	x20, x0, x20, eq  // eq = none
   5ae7c:	ldr	w0, [x22, #8]
   5ae80:	tbnz	w0, #31, 5adb8 <mpfr_gamma_inc@@Base+0xba4>
   5ae84:	ldr	x0, [sp, #624]
   5ae88:	add	x0, x28, x0
   5ae8c:	cmp	x0, x20
   5ae90:	b.gt	5adf4 <mpfr_gamma_inc@@Base+0xbe0>
   5ae94:	ldr	w0, [sp, #584]
   5ae98:	cmp	w0, #0x0
   5ae9c:	b.le	5adf4 <mpfr_gamma_inc@@Base+0xbe0>
   5aea0:	ldr	x0, [x26, #16]
   5aea4:	add	x0, x0, #0x1
   5aea8:	ldr	x1, [sp, #592]
   5aeac:	cmp	x0, x1
   5aeb0:	b.ge	5adf4 <mpfr_gamma_inc@@Base+0xbe0>  // b.tcont
   5aeb4:	ldr	w0, [x22, #8]
   5aeb8:	str	xzr, [sp, #120]
   5aebc:	tbnz	w0, #31, 5afe4 <mpfr_gamma_inc@@Base+0xdd0>
   5aec0:	mov	w2, w25
   5aec4:	mov	x1, x26
   5aec8:	mov	x0, x19
   5aecc:	bl	c750 <mpfr_exp@plt>
   5aed0:	mov	w3, w25
   5aed4:	mov	x2, x19
   5aed8:	mov	x1, x24
   5aedc:	mov	x0, x24
   5aee0:	bl	c620 <mpfr_div@plt>
   5aee4:	mov	w3, w25
   5aee8:	mov	x2, x22
   5aeec:	mov	x1, x26
   5aef0:	mov	x0, x19
   5aef4:	bl	bd90 <mpfr_pow@plt>
   5aef8:	mov	w3, w25
   5aefc:	mov	x2, x19
   5af00:	mov	x1, x24
   5af04:	mov	x0, x24
   5af08:	bl	bd50 <mpfr_mul@plt>
   5af0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5af10:	ldr	x1, [x0, #2576]
   5af14:	add	x0, x0, #0xa10
   5af18:	blr	x1
   5af1c:	mrs	x1, tpidr_el0
   5af20:	add	x20, x1, x0
   5af24:	str	wzr, [x1, x0]
   5af28:	mov	w2, w25
   5af2c:	mov	x1, x22
   5af30:	mov	x0, x19
   5af34:	bl	c7b0 <mpfr_gamma@plt>
   5af38:	ldr	w0, [x20]
   5af3c:	tbnz	w0, #1, 5b000 <mpfr_gamma_inc@@Base+0xdec>
   5af40:	ldr	x20, [sp, #624]
   5af44:	ldr	x27, [sp, #656]
   5af48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5af4c:	cmp	x27, x0
   5af50:	b.eq	5b018 <mpfr_gamma_inc@@Base+0xe04>  // b.none
   5af54:	mov	w3, w25
   5af58:	mov	x2, x24
   5af5c:	mov	x1, x19
   5af60:	mov	x0, x24
   5af64:	bl	bb70 <mpfr_sub@plt>
   5af68:	ldr	x4, [sp, #656]
   5af6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5af70:	cmp	x4, x0
   5af74:	csel	x3, x20, x4, eq  // eq = none
   5af78:	ldr	x0, [sp, #120]
   5af7c:	add	x1, x0, #0x1
   5af80:	lsl	x21, x21, #1
   5af84:	cmn	x21, #0x6
   5af88:	b.eq	5b04c <mpfr_gamma_inc@@Base+0xe38>  // b.none
   5af8c:	add	x0, x21, #0x7
   5af90:	cmp	x0, #0x1
   5af94:	b.ls	5b034 <mpfr_gamma_inc@@Base+0xe20>  // b.plast
   5af98:	add	x21, x21, #0x6
   5af9c:	clz	x0, x21
   5afa0:	mov	w2, #0x40                  	// #64
   5afa4:	sub	w0, w2, w0
   5afa8:	sxtw	x0, w0
   5afac:	add	x0, x1, x0
   5afb0:	add	x27, x0, x27
   5afb4:	cmp	x20, x27
   5afb8:	b.eq	5b054 <mpfr_gamma_inc@@Base+0xe40>  // b.none
   5afbc:	csel	x27, x20, x27, ge  // ge = tcont
   5afc0:	cmp	x3, #0x0
   5afc4:	ccmp	x3, x27, #0x0, le
   5afc8:	b.lt	5afd8 <mpfr_gamma_inc@@Base+0xdc4>  // b.tstop
   5afcc:	mov	x2, #0x2                   	// #2
   5afd0:	cmp	x3, x27
   5afd4:	b.ge	5b05c <mpfr_gamma_inc@@Base+0xe48>  // b.tcont
   5afd8:	sub	x27, x27, x3
   5afdc:	add	x2, x27, #0x1
   5afe0:	b	5b05c <mpfr_gamma_inc@@Base+0xe48>
   5afe4:	ldr	x1, [sp, #304]
   5afe8:	ldr	x0, [sp, #656]
   5afec:	sub	x0, x1, x0
   5aff0:	str	x0, [sp, #120]
   5aff4:	ldr	x0, [sp, #104]
   5aff8:	bl	c070 <mpfr_clear@plt>
   5affc:	b	5aec0 <mpfr_gamma_inc@@Base+0xcac>
   5b000:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5b004:	add	x2, x2, #0xdd0
   5b008:	mov	w1, #0x122                 	// #290
   5b00c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5b010:	add	x0, x0, #0xd58
   5b014:	bl	cb40 <mpfr_assert_fail@plt>
   5b018:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b01c:	ldr	x1, [x0, #2512]
   5b020:	add	x0, x0, #0x9d0
   5b024:	blr	x1
   5b028:	mrs	x1, tpidr_el0
   5b02c:	ldr	x27, [x1, x0]
   5b030:	b	5af54 <mpfr_gamma_inc@@Base+0xd40>
   5b034:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5b038:	add	x2, x2, #0xe00
   5b03c:	mov	w1, #0x12e                 	// #302
   5b040:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5b044:	add	x0, x0, #0xd58
   5b048:	bl	cb40 <mpfr_assert_fail@plt>
   5b04c:	mov	x0, #0x0                   	// #0
   5b050:	b	5afac <mpfr_gamma_inc@@Base+0xd98>
   5b054:	sub	x3, x20, x3
   5b058:	add	x2, x3, #0x2
   5b05c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5b060:	cmp	x4, x0
   5b064:	b.le	5b160 <mpfr_gamma_inc@@Base+0xf4c>
   5b068:	ldr	w0, [sp, #128]
   5b06c:	cmp	w0, #0x0
   5b070:	ldr	x0, [sp, #112]
   5b074:	ldr	x3, [x0]
   5b078:	cinc	x3, x3, eq  // eq = none
   5b07c:	ldr	x0, [sp, #640]
   5b080:	add	x1, x0, #0x3e
   5b084:	subs	x0, x0, #0x1
   5b088:	csel	x1, x1, x0, mi  // mi = first
   5b08c:	asr	x1, x1, #6
   5b090:	sub	x2, x28, x2
   5b094:	add	x1, x1, #0x1
   5b098:	ldr	x0, [sp, #664]
   5b09c:	bl	c370 <mpfr_round_p@plt>
   5b0a0:	cbz	w0, 5b160 <mpfr_gamma_inc@@Base+0xf4c>
   5b0a4:	add	x0, sp, #0x240
   5b0a8:	bl	c070 <mpfr_clear@plt>
   5b0ac:	ldr	w3, [sp, #648]
   5b0b0:	ldr	w2, [sp, #128]
   5b0b4:	add	x1, sp, #0x280
   5b0b8:	ldr	x0, [sp, #112]
   5b0bc:	bl	c6a0 <mpfr_set4@plt>
   5b0c0:	mov	w19, w0
   5b0c4:	ldr	x1, [sp, #432]
   5b0c8:	cbz	x1, 5b0d4 <mpfr_gamma_inc@@Base+0xec0>
   5b0cc:	ldr	x0, [sp, #440]
   5b0d0:	bl	cc20 <mpfr_free_func@plt>
   5b0d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b0d8:	ldr	x1, [x0, #2576]
   5b0dc:	add	x0, x0, #0xa10
   5b0e0:	blr	x1
   5b0e4:	mrs	x1, tpidr_el0
   5b0e8:	ldr	w4, [sp, #132]
   5b0ec:	str	w4, [x1, x0]
   5b0f0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b0f4:	ldr	x2, [x0, #2512]
   5b0f8:	add	x0, x0, #0x9d0
   5b0fc:	blr	x2
   5b100:	ldr	x2, [sp, #136]
   5b104:	str	x2, [x1, x0]
   5b108:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b10c:	ldr	x3, [x0, #2544]
   5b110:	add	x0, x0, #0x9f0
   5b114:	blr	x3
   5b118:	ldr	x3, [sp, #144]
   5b11c:	str	x3, [x1, x0]
   5b120:	ldr	x0, [sp, #112]
   5b124:	ldr	x0, [x0, #16]
   5b128:	cmp	x3, x0
   5b12c:	ccmp	x2, x0, #0x0, ge  // ge = tcont
   5b130:	b.gt	5b218 <mpfr_gamma_inc@@Base+0x1004>
   5b134:	cbz	w19, 5b244 <mpfr_gamma_inc@@Base+0x1030>
   5b138:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b13c:	ldr	x1, [x0, #2576]
   5b140:	add	x0, x0, #0xa10
   5b144:	blr	x1
   5b148:	orr	w1, w4, #0x8
   5b14c:	mrs	x2, tpidr_el0
   5b150:	str	w1, [x2, x0]
   5b154:	ldp	x23, x24, [sp, #48]
   5b158:	ldp	x27, x28, [sp, #80]
   5b15c:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5b160:	mov	x0, #0xfffffffffffffeff    	// #-257
   5b164:	movk	x0, #0x7fff, lsl #48
   5b168:	sub	x0, x0, x28
   5b16c:	ldr	x1, [sp, #152]
   5b170:	cmp	x0, x1
   5b174:	b.lt	5b1e8 <mpfr_gamma_inc@@Base+0xfd4>  // b.tstop
   5b178:	ldr	x0, [sp, #152]
   5b17c:	add	x28, x28, x0
   5b180:	add	x0, x28, x28, lsr #63
   5b184:	asr	x0, x0, #1
   5b188:	str	x0, [sp, #152]
   5b18c:	ldr	x1, [sp, #432]
   5b190:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5b194:	cmp	x28, x0
   5b198:	b.ge	5b200 <mpfr_gamma_inc@@Base+0xfec>  // b.tcont
   5b19c:	add	x20, x28, #0x3e
   5b1a0:	subs	x0, x28, #0x1
   5b1a4:	csel	x20, x20, x0, mi  // mi = first
   5b1a8:	asr	x20, x20, #6
   5b1ac:	add	x20, x20, #0x1
   5b1b0:	lsl	x0, x20, #4
   5b1b4:	str	x0, [sp, #432]
   5b1b8:	cbnz	x1, 5b204 <mpfr_gamma_inc@@Base+0xff0>
   5b1bc:	bl	ccf0 <mpfr_allocate_func@plt>
   5b1c0:	str	x0, [sp, #440]
   5b1c4:	str	x28, [sp, #640]
   5b1c8:	ldr	x0, [sp, #440]
   5b1cc:	str	x0, [sp, #664]
   5b1d0:	str	w25, [sp, #648]
   5b1d4:	str	x28, [sp, #608]
   5b1d8:	add	x20, x0, x20, lsl #3
   5b1dc:	str	x20, [sp, #632]
   5b1e0:	str	w25, [sp, #616]
   5b1e4:	b	5a370 <mpfr_gamma_inc@@Base+0x15c>
   5b1e8:	adrp	x2, 61000 <mpfr_l2b_42_1__tab@@Base+0x8>
   5b1ec:	add	x2, x2, #0x3e8
   5b1f0:	mov	w1, #0x148                 	// #328
   5b1f4:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5b1f8:	add	x0, x0, #0xd58
   5b1fc:	bl	cb40 <mpfr_assert_fail@plt>
   5b200:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5b204:	mov	x2, x0
   5b208:	ldr	x0, [sp, #440]
   5b20c:	bl	c1c0 <mpfr_reallocate_func@plt>
   5b210:	str	x0, [sp, #440]
   5b214:	b	5b1c4 <mpfr_gamma_inc@@Base+0xfb0>
   5b218:	ldr	w2, [sp, #128]
   5b21c:	mov	w1, w19
   5b220:	ldr	x0, [sp, #112]
   5b224:	bl	cb30 <mpfr_check_range@plt>
   5b228:	mov	w19, w0
   5b22c:	ldp	x23, x24, [sp, #48]
   5b230:	ldp	x27, x28, [sp, #80]
   5b234:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5b238:	ldp	x23, x24, [sp, #48]
   5b23c:	ldp	x27, x28, [sp, #80]
   5b240:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5b244:	ldp	x23, x24, [sp, #48]
   5b248:	ldp	x27, x28, [sp, #80]
   5b24c:	b	5a750 <mpfr_gamma_inc@@Base+0x53c>
   5b250:	stp	x29, x30, [sp, #-128]!
   5b254:	mov	x29, sp
   5b258:	stp	x19, x20, [sp, #16]
   5b25c:	stp	x21, x22, [sp, #32]
   5b260:	mov	x22, x0
   5b264:	mov	x19, x1
   5b268:	bl	bf90 <mpfr_mpz_init@plt>
   5b26c:	ldr	x1, [x19, #16]
   5b270:	mov	x2, #0x4                   	// #4
   5b274:	movk	x2, #0x8000, lsl #48
   5b278:	cmp	x1, x2
   5b27c:	b.eq	5b344 <mpfr_gamma_inc@@Base+0x1130>  // b.none
   5b280:	stp	x23, x24, [sp, #48]
   5b284:	stp	x25, x26, [sp, #64]
   5b288:	mov	x0, #0x40                  	// #64
   5b28c:	str	x0, [sp, #96]
   5b290:	add	x0, sp, #0x58
   5b294:	str	x0, [sp, #120]
   5b298:	mov	w0, #0x1                   	// #1
   5b29c:	str	w0, [sp, #104]
   5b2a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b2a4:	ldr	x2, [x0, #2576]
   5b2a8:	add	x0, x0, #0xa10
   5b2ac:	blr	x2
   5b2b0:	mrs	x2, tpidr_el0
   5b2b4:	add	x24, x2, x0
   5b2b8:	ldr	w25, [x2, x0]
   5b2bc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b2c0:	ldr	x3, [x0, #2512]
   5b2c4:	add	x0, x0, #0x9d0
   5b2c8:	blr	x3
   5b2cc:	add	x21, x2, x0
   5b2d0:	ldr	x23, [x2, x0]
   5b2d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b2d8:	ldr	x3, [x0, #2544]
   5b2dc:	add	x0, x0, #0x9f0
   5b2e0:	blr	x3
   5b2e4:	add	x20, x2, x0
   5b2e8:	ldr	x26, [x2, x0]
   5b2ec:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   5b2f0:	str	x0, [x21]
   5b2f4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5b2f8:	str	x0, [x20]
   5b2fc:	add	x19, sp, #0x60
   5b300:	mov	w3, #0x0                   	// #0
   5b304:	mov	x2, #0x0                   	// #0
   5b308:	mov	x0, x19
   5b30c:	bl	ba80 <mpfr_set_si_2exp@plt>
   5b310:	mov	w2, #0x0                   	// #0
   5b314:	mov	x1, x19
   5b318:	mov	x0, x22
   5b31c:	bl	be00 <mpfr_get_z@plt>
   5b320:	str	w25, [x24]
   5b324:	str	x23, [x21]
   5b328:	str	x26, [x20]
   5b32c:	ldp	x23, x24, [sp, #48]
   5b330:	ldp	x25, x26, [sp, #64]
   5b334:	ldp	x19, x20, [sp, #16]
   5b338:	ldp	x21, x22, [sp, #32]
   5b33c:	ldp	x29, x30, [sp], #128
   5b340:	ret
   5b344:	add	x1, x19, #0x20
   5b348:	mov	x0, x22
   5b34c:	bl	bfa0 <__gmpz_set@plt>
   5b350:	b	5b334 <mpfr_gamma_inc@@Base+0x1120>

000000000005b354 <mpfr_ubf_mul_exact@@Base>:
   5b354:	stp	x29, x30, [sp, #-112]!
   5b358:	mov	x29, sp
   5b35c:	stp	x19, x20, [sp, #16]
   5b360:	stp	x21, x22, [sp, #32]
   5b364:	mov	x21, x0
   5b368:	mov	x19, x1
   5b36c:	mov	x20, x2
   5b370:	ldr	w0, [x1, #8]
   5b374:	ldr	w1, [x2, #8]
   5b378:	mul	w0, w0, w1
   5b37c:	str	w0, [x21, #8]
   5b380:	ldr	x0, [x19, #16]
   5b384:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5b388:	cmp	x0, x1
   5b38c:	b.le	5b48c <mpfr_ubf_mul_exact@@Base+0x138>
   5b390:	ldr	x2, [x2, #16]
   5b394:	cmp	x2, x1
   5b398:	b.le	5b5f4 <mpfr_ubf_mul_exact@@Base+0x2a0>
   5b39c:	stp	x23, x24, [sp, #48]
   5b3a0:	ldr	x0, [x19]
   5b3a4:	add	x1, x0, #0x3e
   5b3a8:	subs	x0, x0, #0x1
   5b3ac:	csel	x1, x1, x0, mi  // mi = first
   5b3b0:	asr	x1, x1, #6
   5b3b4:	ldr	x2, [x20]
   5b3b8:	add	x0, x2, #0x3e
   5b3bc:	subs	x2, x2, #0x1
   5b3c0:	csel	x0, x0, x2, mi  // mi = first
   5b3c4:	asr	x0, x0, #6
   5b3c8:	ldr	x22, [x21, #24]
   5b3cc:	orr	x2, x1, x0
   5b3d0:	cbnz	x2, 5b500 <mpfr_ubf_mul_exact@@Base+0x1ac>
   5b3d4:	ldr	x0, [x19, #24]
   5b3d8:	ldr	x0, [x0]
   5b3dc:	ldr	x1, [x20, #24]
   5b3e0:	ldr	x2, [x1]
   5b3e4:	umulh	x1, x0, x2
   5b3e8:	str	x1, [x22, #8]
   5b3ec:	mul	x0, x0, x2
   5b3f0:	str	x0, [x22]
   5b3f4:	mov	w23, #0x0                   	// #0
   5b3f8:	tbnz	x1, #63, 5b410 <mpfr_ubf_mul_exact@@Base+0xbc>
   5b3fc:	extr	x1, x1, x0, #63
   5b400:	str	x1, [x22, #8]
   5b404:	lsl	x0, x0, #1
   5b408:	str	x0, [x22]
   5b40c:	mov	w23, #0x1                   	// #1
   5b410:	ldr	x0, [x19, #16]
   5b414:	mov	x1, #0x4                   	// #4
   5b418:	movk	x1, #0x8000, lsl #48
   5b41c:	cmp	x0, x1
   5b420:	b.eq	5b578 <mpfr_ubf_mul_exact@@Base+0x224>  // b.none
   5b424:	ldr	x1, [x20, #16]
   5b428:	mov	x2, #0x4                   	// #4
   5b42c:	movk	x2, #0x8000, lsl #48
   5b430:	cmp	x1, x2
   5b434:	b.eq	5b578 <mpfr_ubf_mul_exact@@Base+0x224>  // b.none
   5b438:	add	x0, x0, x1
   5b43c:	sub	x1, x0, w23, sxtw
   5b440:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b444:	ldr	x2, [x0, #2512]
   5b448:	add	x0, x0, #0x9d0
   5b44c:	blr	x2
   5b450:	mrs	x2, tpidr_el0
   5b454:	ldr	x0, [x2, x0]
   5b458:	cmp	x0, x1
   5b45c:	b.gt	5b578 <mpfr_ubf_mul_exact@@Base+0x224>
   5b460:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b464:	ldr	x2, [x0, #2544]
   5b468:	add	x0, x0, #0x9f0
   5b46c:	blr	x2
   5b470:	mrs	x2, tpidr_el0
   5b474:	ldr	x0, [x2, x0]
   5b478:	cmp	x0, x1
   5b47c:	b.lt	5b578 <mpfr_ubf_mul_exact@@Base+0x224>  // b.tstop
   5b480:	str	x1, [x21, #16]
   5b484:	ldp	x23, x24, [sp, #48]
   5b488:	b	5b5e4 <mpfr_ubf_mul_exact@@Base+0x290>
   5b48c:	mov	x1, #0x2                   	// #2
   5b490:	movk	x1, #0x8000, lsl #48
   5b494:	cmp	x0, x1
   5b498:	b.ne	5b4ac <mpfr_ubf_mul_exact@@Base+0x158>  // b.any
   5b49c:	mov	x0, #0x2                   	// #2
   5b4a0:	movk	x0, #0x8000, lsl #48
   5b4a4:	str	x0, [x21, #16]
   5b4a8:	b	5b5e4 <mpfr_ubf_mul_exact@@Base+0x290>
   5b4ac:	ldr	x1, [x2, #16]
   5b4b0:	mov	x2, #0x2                   	// #2
   5b4b4:	movk	x2, #0x8000, lsl #48
   5b4b8:	cmp	x1, x2
   5b4bc:	b.eq	5b49c <mpfr_ubf_mul_exact@@Base+0x148>  // b.none
   5b4c0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   5b4c4:	cmp	x0, x2
   5b4c8:	b.ne	5b608 <mpfr_ubf_mul_exact@@Base+0x2b4>  // b.any
   5b4cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5b4d0:	cmp	x1, x0
   5b4d4:	mov	x1, #0x2                   	// #2
   5b4d8:	movk	x1, #0x8000, lsl #48
   5b4dc:	csel	x0, x2, x1, ne  // ne = any
   5b4e0:	str	x0, [x21, #16]
   5b4e4:	b	5b5e4 <mpfr_ubf_mul_exact@@Base+0x290>
   5b4e8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5b4ec:	cmp	x0, x1
   5b4f0:	add	x1, x1, #0x1
   5b4f4:	csel	x0, x2, x1, ne  // ne = any
   5b4f8:	str	x0, [x21, #16]
   5b4fc:	b	5b5e4 <mpfr_ubf_mul_exact@@Base+0x290>
   5b500:	str	x25, [sp, #64]
   5b504:	add	x25, x1, #0x1
   5b508:	add	x24, x0, #0x1
   5b50c:	cmp	x1, x0
   5b510:	b.lt	5b53c <mpfr_ubf_mul_exact@@Base+0x1e8>  // b.tstop
   5b514:	mov	x4, x24
   5b518:	ldr	x3, [x20, #24]
   5b51c:	mov	x2, x25
   5b520:	ldr	x1, [x19, #24]
   5b524:	mov	x0, x22
   5b528:	bl	c7a0 <__gmpn_mul@plt>
   5b52c:	mov	w23, #0x0                   	// #0
   5b530:	tbz	x0, #63, 5b558 <mpfr_ubf_mul_exact@@Base+0x204>
   5b534:	ldr	x25, [sp, #64]
   5b538:	b	5b410 <mpfr_ubf_mul_exact@@Base+0xbc>
   5b53c:	mov	x4, x25
   5b540:	ldr	x3, [x19, #24]
   5b544:	mov	x2, x24
   5b548:	ldr	x1, [x20, #24]
   5b54c:	mov	x0, x22
   5b550:	bl	c7a0 <__gmpn_mul@plt>
   5b554:	b	5b52c <mpfr_ubf_mul_exact@@Base+0x1d8>
   5b558:	mov	w3, #0x1                   	// #1
   5b55c:	add	x2, x25, x24
   5b560:	mov	x1, x22
   5b564:	mov	x0, x22
   5b568:	bl	bcc0 <__gmpn_lshift@plt>
   5b56c:	mov	w23, #0x1                   	// #1
   5b570:	ldr	x25, [sp, #64]
   5b574:	b	5b410 <mpfr_ubf_mul_exact@@Base+0xbc>
   5b578:	add	x24, x21, #0x20
   5b57c:	mov	x0, x24
   5b580:	bl	bf90 <mpfr_mpz_init@plt>
   5b584:	add	x22, sp, #0x50
   5b588:	mov	x1, x19
   5b58c:	mov	x0, x22
   5b590:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b594:	add	x19, sp, #0x60
   5b598:	mov	x1, x20
   5b59c:	mov	x0, x19
   5b5a0:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b5a4:	mov	x2, x19
   5b5a8:	mov	x1, x22
   5b5ac:	mov	x0, x24
   5b5b0:	bl	c9c0 <__gmpz_add@plt>
   5b5b4:	mov	x0, x22
   5b5b8:	bl	c170 <mpfr_mpz_clear@plt>
   5b5bc:	mov	x0, x19
   5b5c0:	bl	c170 <mpfr_mpz_clear@plt>
   5b5c4:	sxtw	x2, w23
   5b5c8:	mov	x1, x24
   5b5cc:	mov	x0, x24
   5b5d0:	bl	bc30 <__gmpz_sub_ui@plt>
   5b5d4:	mov	x0, #0x4                   	// #4
   5b5d8:	movk	x0, #0x8000, lsl #48
   5b5dc:	str	x0, [x21, #16]
   5b5e0:	ldp	x23, x24, [sp, #48]
   5b5e4:	ldp	x19, x20, [sp, #16]
   5b5e8:	ldp	x21, x22, [sp, #32]
   5b5ec:	ldp	x29, x30, [sp], #112
   5b5f0:	ret
   5b5f4:	ldr	x1, [x20, #16]
   5b5f8:	mov	x2, #0x2                   	// #2
   5b5fc:	movk	x2, #0x8000, lsl #48
   5b600:	cmp	x1, x2
   5b604:	b.eq	5b49c <mpfr_ubf_mul_exact@@Base+0x148>  // b.none
   5b608:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   5b60c:	cmp	x1, x2
   5b610:	b.eq	5b4e8 <mpfr_ubf_mul_exact@@Base+0x194>  // b.none
   5b614:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5b618:	str	x0, [x21, #16]
   5b61c:	b	5b5e4 <mpfr_ubf_mul_exact@@Base+0x290>

000000000005b620 <mpfr_ubf_exp_less_p@@Base>:
   5b620:	stp	x29, x30, [sp, #-80]!
   5b624:	mov	x29, sp
   5b628:	stp	x19, x20, [sp, #16]
   5b62c:	str	x21, [sp, #32]
   5b630:	mov	x21, x1
   5b634:	add	x20, sp, #0x40
   5b638:	mov	x1, x0
   5b63c:	mov	x0, x20
   5b640:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b644:	add	x19, sp, #0x30
   5b648:	mov	x1, x21
   5b64c:	mov	x0, x19
   5b650:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b654:	mov	x1, x19
   5b658:	mov	x0, x20
   5b65c:	bl	c8d0 <__gmpz_cmp@plt>
   5b660:	mov	w21, w0
   5b664:	mov	x0, x20
   5b668:	bl	c170 <mpfr_mpz_clear@plt>
   5b66c:	mov	x0, x19
   5b670:	bl	c170 <mpfr_mpz_clear@plt>
   5b674:	lsr	w0, w21, #31
   5b678:	ldp	x19, x20, [sp, #16]
   5b67c:	ldr	x21, [sp, #32]
   5b680:	ldp	x29, x30, [sp], #80
   5b684:	ret

000000000005b688 <mpfr_ubf_zexp2exp@@Base>:
   5b688:	stp	x29, x30, [sp, #-128]!
   5b68c:	mov	x29, sp
   5b690:	stp	x19, x20, [sp, #16]
   5b694:	ldr	w1, [x0, #4]
   5b698:	cmp	w1, #0x0
   5b69c:	cneg	w1, w1, lt  // lt = tstop
   5b6a0:	sxtw	x20, w1
   5b6a4:	cbnz	w1, 5b6b8 <mpfr_ubf_zexp2exp@@Base+0x30>
   5b6a8:	mov	x0, x20
   5b6ac:	ldp	x19, x20, [sp, #16]
   5b6b0:	ldp	x29, x30, [sp], #128
   5b6b4:	ret
   5b6b8:	stp	x21, x22, [sp, #32]
   5b6bc:	stp	x23, x24, [sp, #48]
   5b6c0:	stp	x25, x26, [sp, #64]
   5b6c4:	str	x27, [sp, #80]
   5b6c8:	mov	x19, x0
   5b6cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b6d0:	ldr	x1, [x0, #2576]
   5b6d4:	add	x0, x0, #0xa10
   5b6d8:	blr	x1
   5b6dc:	mrs	x1, tpidr_el0
   5b6e0:	add	x25, x1, x0
   5b6e4:	ldr	w26, [x1, x0]
   5b6e8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b6ec:	ldr	x2, [x0, #2512]
   5b6f0:	add	x0, x0, #0x9d0
   5b6f4:	blr	x2
   5b6f8:	add	x23, x1, x0
   5b6fc:	ldr	x24, [x1, x0]
   5b700:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b704:	ldr	x2, [x0, #2544]
   5b708:	add	x0, x0, #0x9f0
   5b70c:	blr	x2
   5b710:	add	x22, x1, x0
   5b714:	ldr	x27, [x1, x0]
   5b718:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   5b71c:	str	x0, [x23]
   5b720:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5b724:	str	x0, [x22]
   5b728:	add	x21, sp, #0x60
   5b72c:	lsl	x1, x20, #6
   5b730:	mov	x0, x21
   5b734:	bl	ca80 <mpfr_init2@plt>
   5b738:	mov	w2, #0x0                   	// #0
   5b73c:	mov	x1, x19
   5b740:	mov	x0, x21
   5b744:	bl	c240 <mpfr_set_z@plt>
   5b748:	mov	w1, #0x1                   	// #1
   5b74c:	mov	x0, x21
   5b750:	bl	c190 <mpfr_get_si@plt>
   5b754:	mov	x20, x0
   5b758:	mov	x0, x21
   5b75c:	bl	c070 <mpfr_clear@plt>
   5b760:	str	w26, [x25]
   5b764:	str	x24, [x23]
   5b768:	str	x27, [x22]
   5b76c:	ldp	x21, x22, [sp, #32]
   5b770:	ldp	x23, x24, [sp, #48]
   5b774:	ldp	x25, x26, [sp, #64]
   5b778:	ldr	x27, [sp, #80]
   5b77c:	b	5b6a8 <mpfr_ubf_zexp2exp@@Base+0x20>

000000000005b780 <mpfr_ubf_diff_exp@@Base>:
   5b780:	stp	x29, x30, [sp, #-80]!
   5b784:	mov	x29, sp
   5b788:	stp	x19, x20, [sp, #16]
   5b78c:	str	x21, [sp, #32]
   5b790:	mov	x21, x1
   5b794:	add	x19, sp, #0x40
   5b798:	mov	x1, x0
   5b79c:	mov	x0, x19
   5b7a0:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b7a4:	add	x20, sp, #0x30
   5b7a8:	mov	x1, x21
   5b7ac:	mov	x0, x20
   5b7b0:	bl	5b250 <mpfr_gamma_inc@@Base+0x103c>
   5b7b4:	mov	x2, x20
   5b7b8:	mov	x1, x19
   5b7bc:	mov	x0, x19
   5b7c0:	bl	bde0 <__gmpz_sub@plt>
   5b7c4:	mov	x0, x20
   5b7c8:	bl	c170 <mpfr_mpz_clear@plt>
   5b7cc:	mov	x0, x19
   5b7d0:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   5b7d4:	mov	x20, x0
   5b7d8:	mov	x0, x19
   5b7dc:	bl	c170 <mpfr_mpz_clear@plt>
   5b7e0:	mov	x0, x20
   5b7e4:	ldp	x19, x20, [sp, #16]
   5b7e8:	ldr	x21, [sp, #32]
   5b7ec:	ldp	x29, x30, [sp], #80
   5b7f0:	ret

000000000005b7f4 <mpfr_beta@@Base>:
   5b7f4:	stp	x29, x30, [sp, #-432]!
   5b7f8:	mov	x29, sp
   5b7fc:	stp	x19, x20, [sp, #16]
   5b800:	stp	x21, x22, [sp, #32]
   5b804:	mov	x22, x0
   5b808:	mov	x20, x1
   5b80c:	mov	x19, x2
   5b810:	str	w3, [sp, #108]
   5b814:	mov	x1, x2
   5b818:	mov	x0, x20
   5b81c:	bl	ca00 <mpfr_less_p@plt>
   5b820:	cbnz	w0, 5b97c <mpfr_beta@@Base+0x188>
   5b824:	mov	w21, w0
   5b828:	ldr	x0, [x20, #16]
   5b82c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5b830:	cmp	x0, x1
   5b834:	b.le	5b998 <mpfr_beta@@Base+0x1a4>
   5b838:	ldr	x2, [x19, #16]
   5b83c:	cmp	x2, x1
   5b840:	b.le	5b9a8 <mpfr_beta@@Base+0x1b4>
   5b844:	stp	x23, x24, [sp, #48]
   5b848:	mov	x0, x19
   5b84c:	bl	c160 <mpfr_integer_p@plt>
   5b850:	mov	w23, w0
   5b854:	cbz	w0, 5b860 <mpfr_beta@@Base+0x6c>
   5b858:	ldr	w0, [x19, #8]
   5b85c:	tbnz	w0, #31, 5bd74 <mpfr_beta@@Base+0x580>
   5b860:	mov	x0, x20
   5b864:	bl	c160 <mpfr_integer_p@plt>
   5b868:	cbz	w0, 5b874 <mpfr_beta@@Base+0x80>
   5b86c:	ldr	w0, [x20, #8]
   5b870:	tbnz	w0, #31, 5bf14 <mpfr_beta@@Base+0x720>
   5b874:	stp	x25, x26, [sp, #64]
   5b878:	stp	x27, x28, [sp, #80]
   5b87c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b880:	ldr	x1, [x0, #2576]
   5b884:	add	x0, x0, #0xa10
   5b888:	blr	x1
   5b88c:	mrs	x1, tpidr_el0
   5b890:	ldr	w25, [x1, x0]
   5b894:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b898:	ldr	x2, [x0, #2512]
   5b89c:	add	x0, x0, #0x9d0
   5b8a0:	blr	x2
   5b8a4:	add	x2, x1, x0
   5b8a8:	ldr	x27, [x1, x0]
   5b8ac:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b8b0:	ldr	x3, [x0, #2544]
   5b8b4:	add	x0, x0, #0x9f0
   5b8b8:	blr	x3
   5b8bc:	ldr	x28, [x1, x0]
   5b8c0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   5b8c4:	str	x3, [x2]
   5b8c8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   5b8cc:	str	x2, [x1, x0]
   5b8d0:	ldr	x2, [x19, #16]
   5b8d4:	ldr	x0, [x20, #16]
   5b8d8:	cmp	x2, x0
   5b8dc:	csel	x1, x2, x0, ge  // ge = tcont
   5b8e0:	add	x1, x1, #0x1
   5b8e4:	ldr	x3, [x19]
   5b8e8:	sub	x2, x2, x3
   5b8ec:	ldr	x3, [x20]
   5b8f0:	sub	x0, x0, x3
   5b8f4:	cmp	x2, x0
   5b8f8:	csel	x2, x2, x0, le
   5b8fc:	sub	x1, x1, x2
   5b900:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5b904:	cmp	x1, x0
   5b908:	b.cc	5bf4c <mpfr_beta@@Base+0x758>  // b.lo, b.ul, b.last
   5b90c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b910:	ldr	x1, [x0, #2512]
   5b914:	add	x0, x0, #0x9d0
   5b918:	blr	x1
   5b91c:	mrs	x1, tpidr_el0
   5b920:	str	x27, [x1, x0]
   5b924:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b928:	ldr	x2, [x0, #2544]
   5b92c:	add	x0, x0, #0x9f0
   5b930:	blr	x2
   5b934:	str	x28, [x1, x0]
   5b938:	mov	x0, #0x2                   	// #2
   5b93c:	movk	x0, #0x8000, lsl #48
   5b940:	str	x0, [x22, #16]
   5b944:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5b948:	ldr	x2, [x0, #2576]
   5b94c:	add	x0, x0, #0xa10
   5b950:	blr	x2
   5b954:	orr	w25, w25, #0x4
   5b958:	str	w25, [x1, x0]
   5b95c:	ldp	x23, x24, [sp, #48]
   5b960:	ldp	x25, x26, [sp, #64]
   5b964:	ldp	x27, x28, [sp, #80]
   5b968:	mov	w0, w21
   5b96c:	ldp	x19, x20, [sp, #16]
   5b970:	ldp	x21, x22, [sp, #32]
   5b974:	ldp	x29, x30, [sp], #432
   5b978:	ret
   5b97c:	ldr	w3, [sp, #108]
   5b980:	mov	x2, x20
   5b984:	mov	x1, x19
   5b988:	mov	x0, x22
   5b98c:	bl	5b7f4 <mpfr_beta@@Base>
   5b990:	mov	w21, w0
   5b994:	b	5b968 <mpfr_beta@@Base+0x174>
   5b998:	mov	x1, #0x2                   	// #2
   5b99c:	movk	x1, #0x8000, lsl #48
   5b9a0:	cmp	x0, x1
   5b9a4:	b.eq	5ba24 <mpfr_beta@@Base+0x230>  // b.none
   5b9a8:	ldr	x1, [x19, #16]
   5b9ac:	mov	x2, #0x2                   	// #2
   5b9b0:	movk	x2, #0x8000, lsl #48
   5b9b4:	cmp	x1, x2
   5b9b8:	b.eq	5ba24 <mpfr_beta@@Base+0x230>  // b.none
   5b9bc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   5b9c0:	cmp	x1, x2
   5b9c4:	ccmp	x0, x2, #0x4, ne  // ne = any
   5b9c8:	b.ne	5bc08 <mpfr_beta@@Base+0x414>  // b.any
   5b9cc:	cmp	x0, x2
   5b9d0:	b.eq	5ba58 <mpfr_beta@@Base+0x264>  // b.none
   5b9d4:	mov	x0, x20
   5b9d8:	bl	c710 <mpfr_sgn@plt>
   5b9dc:	cmp	w0, #0x0
   5b9e0:	b.le	5b9f0 <mpfr_beta@@Base+0x1fc>
   5b9e4:	mov	x0, x20
   5b9e8:	bl	c160 <mpfr_integer_p@plt>
   5b9ec:	cbnz	w0, 5bbd8 <mpfr_beta@@Base+0x3e4>
   5b9f0:	mov	x0, #0x2                   	// #2
   5b9f4:	movk	x0, #0x8000, lsl #48
   5b9f8:	str	x0, [x22, #16]
   5b9fc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5ba00:	ldr	x1, [x0, #2576]
   5ba04:	add	x0, x0, #0xa10
   5ba08:	blr	x1
   5ba0c:	mrs	x1, tpidr_el0
   5ba10:	add	x0, x1, x0
   5ba14:	ldr	w1, [x0]
   5ba18:	orr	w1, w1, #0x4
   5ba1c:	str	w1, [x0]
   5ba20:	b	5b968 <mpfr_beta@@Base+0x174>
   5ba24:	mov	x0, #0x2                   	// #2
   5ba28:	movk	x0, #0x8000, lsl #48
   5ba2c:	str	x0, [x22, #16]
   5ba30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5ba34:	ldr	x1, [x0, #2576]
   5ba38:	add	x0, x0, #0xa10
   5ba3c:	blr	x1
   5ba40:	mrs	x1, tpidr_el0
   5ba44:	add	x0, x1, x0
   5ba48:	ldr	w1, [x0]
   5ba4c:	orr	w1, w1, #0x4
   5ba50:	str	w1, [x0]
   5ba54:	b	5b968 <mpfr_beta@@Base+0x174>
   5ba58:	ldr	w0, [x20, #8]
   5ba5c:	cmp	w0, #0x0
   5ba60:	b.gt	5ba74 <mpfr_beta@@Base+0x280>
   5ba64:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5ba68:	cmp	x1, x0
   5ba6c:	b.ne	5b844 <mpfr_beta@@Base+0x50>  // b.any
   5ba70:	b	5b9d4 <mpfr_beta@@Base+0x1e0>
   5ba74:	mov	x0, x19
   5ba78:	bl	c710 <mpfr_sgn@plt>
   5ba7c:	cmp	w0, #0x0
   5ba80:	b.gt	5bacc <mpfr_beta@@Base+0x2d8>
   5ba84:	ldr	x0, [x19, #16]
   5ba88:	and	x0, x0, #0xfffffffffffffffd
   5ba8c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5ba90:	cmp	x0, x1
   5ba94:	b.ne	5bae0 <mpfr_beta@@Base+0x2ec>  // b.any
   5ba98:	mov	x0, #0x2                   	// #2
   5ba9c:	movk	x0, #0x8000, lsl #48
   5baa0:	str	x0, [x22, #16]
   5baa4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5baa8:	ldr	x1, [x0, #2576]
   5baac:	add	x0, x0, #0xa10
   5bab0:	blr	x1
   5bab4:	mrs	x1, tpidr_el0
   5bab8:	add	x0, x1, x0
   5babc:	ldr	w1, [x0]
   5bac0:	orr	w1, w1, #0x4
   5bac4:	str	w1, [x0]
   5bac8:	b	5b968 <mpfr_beta@@Base+0x174>
   5bacc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5bad0:	str	x0, [x22, #16]
   5bad4:	mov	w0, #0x1                   	// #1
   5bad8:	str	w0, [x22, #8]
   5badc:	b	5b968 <mpfr_beta@@Base+0x174>
   5bae0:	mov	x0, x19
   5bae4:	bl	c160 <mpfr_integer_p@plt>
   5bae8:	mov	w20, w0
   5baec:	cbnz	w0, 5ba98 <mpfr_beta@@Base+0x2a4>
   5baf0:	stp	x23, x24, [sp, #48]
   5baf4:	stp	x25, x26, [sp, #64]
   5baf8:	stp	x27, x28, [sp, #80]
   5bafc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bb00:	ldr	x1, [x0, #2576]
   5bb04:	add	x0, x0, #0xa10
   5bb08:	blr	x1
   5bb0c:	mrs	x1, tpidr_el0
   5bb10:	add	x27, x1, x0
   5bb14:	ldr	w28, [x1, x0]
   5bb18:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bb1c:	ldr	x2, [x0, #2512]
   5bb20:	add	x0, x0, #0x9d0
   5bb24:	blr	x2
   5bb28:	add	x24, x1, x0
   5bb2c:	ldr	x26, [x1, x0]
   5bb30:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bb34:	ldr	x2, [x0, #2544]
   5bb38:	add	x0, x0, #0x9f0
   5bb3c:	blr	x2
   5bb40:	add	x23, x1, x0
   5bb44:	ldr	x25, [x1, x0]
   5bb48:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   5bb4c:	str	x0, [x24]
   5bb50:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5bb54:	str	x0, [x23]
   5bb58:	add	x21, sp, #0xa0
   5bb5c:	mov	x1, #0x1                   	// #1
   5bb60:	mov	x0, x21
   5bb64:	bl	ca80 <mpfr_init2@plt>
   5bb68:	mov	w3, #0x0                   	// #0
   5bb6c:	mov	x2, #0x0                   	// #0
   5bb70:	mov	x1, #0x1                   	// #1
   5bb74:	mov	x0, x21
   5bb78:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5bb7c:	mov	w4, #0x3                   	// #3
   5bb80:	mov	x3, x21
   5bb84:	mov	x2, x19
   5bb88:	add	x1, sp, #0x98
   5bb8c:	mov	x0, x21
   5bb90:	bl	cc70 <mpfr_fmodquo@plt>
   5bb94:	mov	x0, x21
   5bb98:	bl	c070 <mpfr_clear@plt>
   5bb9c:	str	w28, [x27]
   5bba0:	str	x26, [x24]
   5bba4:	str	x25, [x23]
   5bba8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5bbac:	str	x0, [x22, #16]
   5bbb0:	mov	w0, #0x1                   	// #1
   5bbb4:	ldr	x1, [sp, #152]
   5bbb8:	tst	x1, #0x1
   5bbbc:	cneg	w0, w0, ne  // ne = any
   5bbc0:	str	w0, [x22, #8]
   5bbc4:	mov	w21, w20
   5bbc8:	ldp	x23, x24, [sp, #48]
   5bbcc:	ldp	x25, x26, [sp, #64]
   5bbd0:	ldp	x27, x28, [sp, #80]
   5bbd4:	b	5b968 <mpfr_beta@@Base+0x174>
   5bbd8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5bbdc:	str	x0, [x22, #16]
   5bbe0:	mov	x0, x20
   5bbe4:	bl	cca0 <mpfr_odd_p@plt>
   5bbe8:	cbz	w0, 5bbf8 <mpfr_beta@@Base+0x404>
   5bbec:	mov	w0, #0xffffffff            	// #-1
   5bbf0:	str	w0, [x22, #8]
   5bbf4:	b	5b968 <mpfr_beta@@Base+0x174>
   5bbf8:	mov	w1, #0x1                   	// #1
   5bbfc:	str	w1, [x22, #8]
   5bc00:	mov	w21, w0
   5bc04:	b	5b968 <mpfr_beta@@Base+0x174>
   5bc08:	stp	x23, x24, [sp, #48]
   5bc0c:	mov	x0, x20
   5bc10:	bl	c710 <mpfr_sgn@plt>
   5bc14:	mov	w23, w0
   5bc18:	cbz	w0, 5bc58 <mpfr_beta@@Base+0x464>
   5bc1c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5bc20:	str	x0, [x22, #16]
   5bc24:	ldr	w0, [x19, #8]
   5bc28:	str	w0, [x22, #8]
   5bc2c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bc30:	ldr	x1, [x0, #2576]
   5bc34:	add	x0, x0, #0xa10
   5bc38:	blr	x1
   5bc3c:	mrs	x1, tpidr_el0
   5bc40:	add	x0, x1, x0
   5bc44:	ldr	w1, [x0]
   5bc48:	orr	w1, w1, #0x20
   5bc4c:	str	w1, [x0]
   5bc50:	ldp	x23, x24, [sp, #48]
   5bc54:	b	5b968 <mpfr_beta@@Base+0x174>
   5bc58:	mov	x0, x19
   5bc5c:	bl	c710 <mpfr_sgn@plt>
   5bc60:	mov	w21, w0
   5bc64:	cbnz	w0, 5bcb0 <mpfr_beta@@Base+0x4bc>
   5bc68:	ldr	w1, [x20, #8]
   5bc6c:	ldr	w0, [x19, #8]
   5bc70:	cmp	w1, w0
   5bc74:	b.eq	5bd38 <mpfr_beta@@Base+0x544>  // b.none
   5bc78:	mov	x0, #0x2                   	// #2
   5bc7c:	movk	x0, #0x8000, lsl #48
   5bc80:	str	x0, [x22, #16]
   5bc84:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bc88:	ldr	x1, [x0, #2576]
   5bc8c:	add	x0, x0, #0xa10
   5bc90:	blr	x1
   5bc94:	mrs	x1, tpidr_el0
   5bc98:	add	x0, x1, x0
   5bc9c:	ldr	w1, [x0]
   5bca0:	orr	w1, w1, #0x4
   5bca4:	str	w1, [x0]
   5bca8:	ldp	x23, x24, [sp, #48]
   5bcac:	b	5b968 <mpfr_beta@@Base+0x174>
   5bcb0:	mov	x0, x19
   5bcb4:	bl	c160 <mpfr_integer_p@plt>
   5bcb8:	mov	w21, w0
   5bcbc:	cbz	w0, 5bcfc <mpfr_beta@@Base+0x508>
   5bcc0:	mov	x0, #0x2                   	// #2
   5bcc4:	movk	x0, #0x8000, lsl #48
   5bcc8:	str	x0, [x22, #16]
   5bccc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bcd0:	ldr	x1, [x0, #2576]
   5bcd4:	add	x0, x0, #0xa10
   5bcd8:	blr	x1
   5bcdc:	mrs	x1, tpidr_el0
   5bce0:	add	x0, x1, x0
   5bce4:	ldr	w1, [x0]
   5bce8:	orr	w1, w1, #0x4
   5bcec:	str	w1, [x0]
   5bcf0:	mov	w21, w23
   5bcf4:	ldp	x23, x24, [sp, #48]
   5bcf8:	b	5b968 <mpfr_beta@@Base+0x174>
   5bcfc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5bd00:	str	x0, [x22, #16]
   5bd04:	ldr	w0, [x20, #8]
   5bd08:	str	w0, [x22, #8]
   5bd0c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bd10:	ldr	x1, [x0, #2576]
   5bd14:	add	x0, x0, #0xa10
   5bd18:	blr	x1
   5bd1c:	mrs	x1, tpidr_el0
   5bd20:	add	x0, x1, x0
   5bd24:	ldr	w1, [x0]
   5bd28:	orr	w1, w1, #0x20
   5bd2c:	str	w1, [x0]
   5bd30:	ldp	x23, x24, [sp, #48]
   5bd34:	b	5b968 <mpfr_beta@@Base+0x174>
   5bd38:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5bd3c:	str	x0, [x22, #16]
   5bd40:	ldr	w0, [x20, #8]
   5bd44:	str	w0, [x22, #8]
   5bd48:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bd4c:	ldr	x1, [x0, #2576]
   5bd50:	add	x0, x0, #0xa10
   5bd54:	blr	x1
   5bd58:	mrs	x1, tpidr_el0
   5bd5c:	add	x0, x1, x0
   5bd60:	ldr	w1, [x0]
   5bd64:	orr	w1, w1, #0x20
   5bd68:	str	w1, [x0]
   5bd6c:	ldp	x23, x24, [sp, #48]
   5bd70:	b	5b968 <mpfr_beta@@Base+0x174>
   5bd74:	ldr	w0, [x20, #8]
   5bd78:	tbnz	w0, #31, 5bd90 <mpfr_beta@@Base+0x59c>
   5bd7c:	mov	x1, x19
   5bd80:	mov	x0, x20
   5bd84:	bl	c9b0 <mpfr_cmpabs@plt>
   5bd88:	cmp	w0, #0x0
   5bd8c:	b.le	5bdc8 <mpfr_beta@@Base+0x5d4>
   5bd90:	mov	x0, #0x2                   	// #2
   5bd94:	movk	x0, #0x8000, lsl #48
   5bd98:	str	x0, [x22, #16]
   5bd9c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bda0:	ldr	x1, [x0, #2576]
   5bda4:	add	x0, x0, #0xa10
   5bda8:	blr	x1
   5bdac:	mrs	x1, tpidr_el0
   5bdb0:	add	x0, x1, x0
   5bdb4:	ldr	w1, [x0]
   5bdb8:	orr	w1, w1, #0x4
   5bdbc:	str	w1, [x0]
   5bdc0:	ldp	x23, x24, [sp, #48]
   5bdc4:	b	5b968 <mpfr_beta@@Base+0x174>
   5bdc8:	mov	x0, x20
   5bdcc:	bl	c160 <mpfr_integer_p@plt>
   5bdd0:	cbz	w0, 5bd90 <mpfr_beta@@Base+0x59c>
   5bdd4:	mov	x1, x19
   5bdd8:	mov	x0, x20
   5bddc:	bl	c9b0 <mpfr_cmpabs@plt>
   5bde0:	cbz	w0, 5be8c <mpfr_beta@@Base+0x698>
   5bde4:	ldr	x0, [x20, #16]
   5bde8:	ldr	x1, [x19, #16]
   5bdec:	cmp	x1, x0
   5bdf0:	add	x21, sp, #0x190
   5bdf4:	csel	x1, x1, x0, ge  // ge = tcont
   5bdf8:	mov	x0, x21
   5bdfc:	bl	ca80 <mpfr_init2@plt>
   5be00:	mov	w3, #0x0                   	// #0
   5be04:	mov	x2, x19
   5be08:	mov	x1, x20
   5be0c:	mov	x0, x21
   5be10:	bl	c1a0 <mpfr_add@plt>
   5be14:	cbnz	w0, 5beac <mpfr_beta@@Base+0x6b8>
   5be18:	add	x0, sp, #0x190
   5be1c:	mov	w3, #0x0                   	// #0
   5be20:	mov	x2, x0
   5be24:	mov	x1, #0x1                   	// #1
   5be28:	bl	ca50 <mpfr_ui_sub@plt>
   5be2c:	cbnz	w0, 5becc <mpfr_beta@@Base+0x6d8>
   5be30:	mov	x0, x20
   5be34:	bl	cca0 <mpfr_odd_p@plt>
   5be38:	cbz	w0, 5bef8 <mpfr_beta@@Base+0x704>
   5be3c:	ldr	w1, [sp, #108]
   5be40:	cmp	w1, #0x2
   5be44:	b.eq	5beec <mpfr_beta@@Base+0x6f8>  // b.none
   5be48:	cmp	w1, #0x3
   5be4c:	mov	w0, #0x2                   	// #2
   5be50:	csel	w0, w1, w0, ne  // ne = any
   5be54:	str	w0, [sp, #108]
   5be58:	ldr	w3, [sp, #108]
   5be5c:	add	x2, sp, #0x190
   5be60:	mov	x1, x20
   5be64:	mov	x0, x22
   5be68:	bl	5b7f4 <mpfr_beta@@Base>
   5be6c:	neg	w21, w0
   5be70:	ldr	w0, [x22, #8]
   5be74:	neg	w0, w0
   5be78:	str	w0, [x22, #8]
   5be7c:	add	x0, sp, #0x190
   5be80:	bl	c070 <mpfr_clear@plt>
   5be84:	ldp	x23, x24, [sp, #48]
   5be88:	b	5b968 <mpfr_beta@@Base+0x174>
   5be8c:	ldr	w3, [sp, #108]
   5be90:	mov	x2, x20
   5be94:	mov	x1, #0x1                   	// #1
   5be98:	mov	x0, x22
   5be9c:	bl	c2f0 <mpfr_ui_div@plt>
   5bea0:	mov	w21, w0
   5bea4:	ldp	x23, x24, [sp, #48]
   5bea8:	b	5b968 <mpfr_beta@@Base+0x174>
   5beac:	stp	x25, x26, [sp, #64]
   5beb0:	stp	x27, x28, [sp, #80]
   5beb4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5beb8:	add	x2, x2, #0x8b0
   5bebc:	mov	w1, #0xc6                  	// #198
   5bec0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5bec4:	add	x0, x0, #0xe10
   5bec8:	bl	cb40 <mpfr_assert_fail@plt>
   5becc:	stp	x25, x26, [sp, #64]
   5bed0:	stp	x27, x28, [sp, #80]
   5bed4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5bed8:	add	x2, x2, #0x8b0
   5bedc:	mov	w1, #0xc8                  	// #200
   5bee0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5bee4:	add	x0, x0, #0xe10
   5bee8:	bl	cb40 <mpfr_assert_fail@plt>
   5beec:	mov	w0, #0x3                   	// #3
   5bef0:	str	w0, [sp, #108]
   5bef4:	b	5be58 <mpfr_beta@@Base+0x664>
   5bef8:	ldr	w3, [sp, #108]
   5befc:	add	x2, sp, #0x190
   5bf00:	mov	x1, x20
   5bf04:	mov	x0, x22
   5bf08:	bl	5b7f4 <mpfr_beta@@Base>
   5bf0c:	mov	w21, w0
   5bf10:	b	5be7c <mpfr_beta@@Base+0x688>
   5bf14:	mov	x0, #0x2                   	// #2
   5bf18:	movk	x0, #0x8000, lsl #48
   5bf1c:	str	x0, [x22, #16]
   5bf20:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5bf24:	ldr	x1, [x0, #2576]
   5bf28:	add	x0, x0, #0xa10
   5bf2c:	blr	x1
   5bf30:	mrs	x1, tpidr_el0
   5bf34:	add	x0, x1, x0
   5bf38:	ldr	w1, [x0]
   5bf3c:	orr	w1, w1, #0x4
   5bf40:	str	w1, [x0]
   5bf44:	ldp	x23, x24, [sp, #48]
   5bf48:	b	5b968 <mpfr_beta@@Base+0x174>
   5bf4c:	add	x21, sp, #0x190
   5bf50:	mov	x0, x21
   5bf54:	bl	ca80 <mpfr_init2@plt>
   5bf58:	mov	w3, #0x0                   	// #0
   5bf5c:	mov	x2, x19
   5bf60:	mov	x1, x20
   5bf64:	mov	x0, x21
   5bf68:	bl	c1a0 <mpfr_add@plt>
   5bf6c:	mov	w21, w0
   5bf70:	ldr	x1, [sp, #416]
   5bf74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5bf78:	cmp	x1, x0
   5bf7c:	b.eq	5c208 <mpfr_beta@@Base+0xa14>  // b.none
   5bf80:	cbnz	w21, 5c274 <mpfr_beta@@Base+0xa80>
   5bf84:	add	x0, sp, #0x190
   5bf88:	bl	c710 <mpfr_sgn@plt>
   5bf8c:	cmp	w23, #0x0
   5bf90:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   5bf94:	b.le	5c28c <mpfr_beta@@Base+0xa98>
   5bf98:	ldr	x23, [x22]
   5bf9c:	cmp	x23, #0x1
   5bfa0:	b.eq	5c330 <mpfr_beta@@Base+0xb3c>  // b.none
   5bfa4:	b.le	5c300 <mpfr_beta@@Base+0xb0c>
   5bfa8:	sub	x0, x23, #0x1
   5bfac:	clz	x1, x0
   5bfb0:	mov	w0, #0x40                  	// #64
   5bfb4:	sub	w0, w0, w1
   5bfb8:	add	x23, x23, w0, sxtw
   5bfbc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5bfc0:	cmp	x23, x0
   5bfc4:	b.ge	5c318 <mpfr_beta@@Base+0xb24>  // b.tcont
   5bfc8:	add	x24, x23, #0x3e
   5bfcc:	subs	x0, x23, #0x1
   5bfd0:	csel	x24, x24, x0, mi  // mi = first
   5bfd4:	asr	x24, x24, #6
   5bfd8:	add	x24, x24, #0x1
   5bfdc:	lsl	x0, x24, #1
   5bfe0:	cmp	x0, #0x10
   5bfe4:	b.gt	5c31c <mpfr_beta@@Base+0xb28>
   5bfe8:	str	xzr, [sp, #192]
   5bfec:	add	x0, sp, #0xd0
   5bff0:	str	x0, [sp, #200]
   5bff4:	str	x23, [sp, #368]
   5bff8:	ldr	x1, [sp, #200]
   5bffc:	str	x1, [sp, #392]
   5c000:	mov	w0, #0x1                   	// #1
   5c004:	str	w0, [sp, #376]
   5c008:	str	x23, [sp, #336]
   5c00c:	add	x24, x1, x24, lsl #3
   5c010:	str	x24, [sp, #360]
   5c014:	str	w0, [sp, #344]
   5c018:	ldr	x1, [sp, #192]
   5c01c:	mov	x0, #0x40                  	// #64
   5c020:	str	x0, [sp, #136]
   5c024:	add	x26, sp, #0x170
   5c028:	add	x0, sp, #0x150
   5c02c:	str	x0, [sp, #112]
   5c030:	add	x0, sp, #0x190
   5c034:	str	x0, [sp, #128]
   5c038:	add	x24, x23, #0x3e
   5c03c:	subs	x0, x23, #0x1
   5c040:	csel	x24, x24, x0, mi  // mi = first
   5c044:	asr	x24, x24, #6
   5c048:	add	x24, x24, #0x1
   5c04c:	lsl	x0, x24, #4
   5c050:	str	x0, [sp, #192]
   5c054:	cbnz	x1, 5c338 <mpfr_beta@@Base+0xb44>
   5c058:	bl	ccf0 <mpfr_allocate_func@plt>
   5c05c:	str	x0, [sp, #200]
   5c060:	str	x23, [sp, #368]
   5c064:	ldr	x1, [sp, #200]
   5c068:	str	x1, [sp, #392]
   5c06c:	mov	w0, #0x1                   	// #1
   5c070:	str	w0, [sp, #376]
   5c074:	str	x23, [sp, #336]
   5c078:	add	x24, x1, x24, lsl #3
   5c07c:	str	x24, [sp, #360]
   5c080:	str	w0, [sp, #344]
   5c084:	mov	w2, #0x0                   	// #0
   5c088:	mov	x1, x20
   5c08c:	mov	x0, x26
   5c090:	bl	c7b0 <mpfr_gamma@plt>
   5c094:	mov	w24, w0
   5c098:	mov	w2, #0x0                   	// #0
   5c09c:	mov	x1, x19
   5c0a0:	ldr	x0, [sp, #112]
   5c0a4:	bl	c7b0 <mpfr_gamma@plt>
   5c0a8:	orr	w1, w0, w24
   5c0ac:	str	w1, [sp, #120]
   5c0b0:	mov	w3, #0x0                   	// #0
   5c0b4:	ldr	x2, [sp, #112]
   5c0b8:	mov	x1, x26
   5c0bc:	mov	x0, x26
   5c0c0:	bl	bd50 <mpfr_mul@plt>
   5c0c4:	mov	w24, w0
   5c0c8:	mov	w2, #0x0                   	// #0
   5c0cc:	ldr	x1, [sp, #128]
   5c0d0:	ldr	x0, [sp, #112]
   5c0d4:	bl	c7b0 <mpfr_gamma@plt>
   5c0d8:	orr	w24, w24, w0
   5c0dc:	ldr	w1, [sp, #120]
   5c0e0:	orr	w24, w24, w1
   5c0e4:	mov	w3, #0x0                   	// #0
   5c0e8:	ldr	x2, [sp, #112]
   5c0ec:	mov	x1, x26
   5c0f0:	mov	x0, x26
   5c0f4:	bl	c620 <mpfr_div@plt>
   5c0f8:	orr	w24, w0, w24
   5c0fc:	ldr	x0, [sp, #384]
   5c100:	mov	x1, #0x2                   	// #2
   5c104:	movk	x1, #0x8000, lsl #48
   5c108:	cmp	x0, x1
   5c10c:	b.eq	5c34c <mpfr_beta@@Base+0xb58>  // b.none
   5c110:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5c114:	cmp	x0, x1
   5c118:	b.le	5c3c4 <mpfr_beta@@Base+0xbd0>
   5c11c:	cbz	w24, 5c158 <mpfr_beta@@Base+0x964>
   5c120:	ldr	w0, [sp, #108]
   5c124:	cmp	w0, #0x0
   5c128:	ldr	x3, [x22]
   5c12c:	cinc	x3, x3, eq  // eq = none
   5c130:	ldr	x0, [sp, #368]
   5c134:	add	x1, x0, #0x3e
   5c138:	subs	x0, x0, #0x1
   5c13c:	csel	x1, x1, x0, mi  // mi = first
   5c140:	asr	x1, x1, #6
   5c144:	sub	x2, x23, #0x3
   5c148:	add	x1, x1, #0x1
   5c14c:	ldr	x0, [sp, #392]
   5c150:	bl	c370 <mpfr_round_p@plt>
   5c154:	cbz	w0, 5c3e0 <mpfr_beta@@Base+0xbec>
   5c158:	ldr	w3, [sp, #376]
   5c15c:	ldr	w2, [sp, #108]
   5c160:	add	x1, sp, #0x170
   5c164:	mov	x0, x22
   5c168:	bl	c6a0 <mpfr_set4@plt>
   5c16c:	mov	w21, w0
   5c170:	ldr	x1, [sp, #192]
   5c174:	cbz	x1, 5c180 <mpfr_beta@@Base+0x98c>
   5c178:	ldr	x0, [sp, #200]
   5c17c:	bl	cc20 <mpfr_free_func@plt>
   5c180:	add	x0, sp, #0x190
   5c184:	bl	c070 <mpfr_clear@plt>
   5c188:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c18c:	ldr	x1, [x0, #2576]
   5c190:	add	x0, x0, #0xa10
   5c194:	blr	x1
   5c198:	mrs	x1, tpidr_el0
   5c19c:	str	w25, [x1, x0]
   5c1a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c1a4:	ldr	x2, [x0, #2512]
   5c1a8:	add	x0, x0, #0x9d0
   5c1ac:	blr	x2
   5c1b0:	str	x27, [x1, x0]
   5c1b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c1b8:	ldr	x2, [x0, #2544]
   5c1bc:	add	x0, x0, #0x9f0
   5c1c0:	blr	x2
   5c1c4:	str	x28, [x1, x0]
   5c1c8:	ldr	x0, [x22, #16]
   5c1cc:	cmp	x27, x0
   5c1d0:	ccmp	x28, x0, #0x1, le
   5c1d4:	b.lt	5c544 <mpfr_beta@@Base+0xd50>  // b.tstop
   5c1d8:	cbz	w21, 5c568 <mpfr_beta@@Base+0xd74>
   5c1dc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c1e0:	ldr	x1, [x0, #2576]
   5c1e4:	add	x0, x0, #0xa10
   5c1e8:	blr	x1
   5c1ec:	orr	w25, w25, #0x8
   5c1f0:	mrs	x1, tpidr_el0
   5c1f4:	str	w25, [x1, x0]
   5c1f8:	ldp	x23, x24, [sp, #48]
   5c1fc:	ldp	x25, x26, [sp, #64]
   5c200:	ldp	x27, x28, [sp, #80]
   5c204:	b	5b968 <mpfr_beta@@Base+0x174>
   5c208:	add	x0, sp, #0x190
   5c20c:	bl	c070 <mpfr_clear@plt>
   5c210:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c214:	ldr	x1, [x0, #2576]
   5c218:	add	x0, x0, #0xa10
   5c21c:	blr	x1
   5c220:	mrs	x1, tpidr_el0
   5c224:	str	w25, [x1, x0]
   5c228:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c22c:	ldr	x2, [x0, #2512]
   5c230:	add	x0, x0, #0x9d0
   5c234:	blr	x2
   5c238:	str	x27, [x1, x0]
   5c23c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c240:	ldr	x2, [x0, #2544]
   5c244:	add	x0, x0, #0x9f0
   5c248:	blr	x2
   5c24c:	str	x28, [x1, x0]
   5c250:	mov	w2, #0x1                   	// #1
   5c254:	ldr	w1, [sp, #108]
   5c258:	mov	x0, x22
   5c25c:	bl	c3c0 <mpfr_underflow@plt>
   5c260:	mov	w21, w0
   5c264:	ldp	x23, x24, [sp, #48]
   5c268:	ldp	x25, x26, [sp, #64]
   5c26c:	ldp	x27, x28, [sp, #80]
   5c270:	b	5b968 <mpfr_beta@@Base+0x174>
   5c274:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5c278:	add	x2, x2, #0x8b0
   5c27c:	mov	w1, #0xf7                  	// #247
   5c280:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5c284:	add	x0, x0, #0xe10
   5c288:	bl	cb40 <mpfr_assert_fail@plt>
   5c28c:	add	x0, sp, #0x190
   5c290:	bl	c160 <mpfr_integer_p@plt>
   5c294:	cbz	w0, 5bf98 <mpfr_beta@@Base+0x7a4>
   5c298:	add	x0, sp, #0x190
   5c29c:	bl	c070 <mpfr_clear@plt>
   5c2a0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c2a4:	ldr	x1, [x0, #2576]
   5c2a8:	add	x0, x0, #0xa10
   5c2ac:	blr	x1
   5c2b0:	mrs	x1, tpidr_el0
   5c2b4:	str	w25, [x1, x0]
   5c2b8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c2bc:	ldr	x2, [x0, #2512]
   5c2c0:	add	x0, x0, #0x9d0
   5c2c4:	blr	x2
   5c2c8:	str	x27, [x1, x0]
   5c2cc:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c2d0:	ldr	x2, [x0, #2544]
   5c2d4:	add	x0, x0, #0x9f0
   5c2d8:	blr	x2
   5c2dc:	str	x28, [x1, x0]
   5c2e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5c2e4:	str	x0, [x22, #16]
   5c2e8:	mov	w0, #0x1                   	// #1
   5c2ec:	str	w0, [x22, #8]
   5c2f0:	ldp	x23, x24, [sp, #48]
   5c2f4:	ldp	x25, x26, [sp, #64]
   5c2f8:	ldp	x27, x28, [sp, #80]
   5c2fc:	b	5b968 <mpfr_beta@@Base+0x174>
   5c300:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   5c304:	add	x2, x2, #0xd58
   5c308:	mov	w1, #0x108                 	// #264
   5c30c:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5c310:	add	x0, x0, #0xe10
   5c314:	bl	cb40 <mpfr_assert_fail@plt>
   5c318:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5c31c:	lsl	x0, x24, #4
   5c320:	str	x0, [sp, #192]
   5c324:	bl	ccf0 <mpfr_allocate_func@plt>
   5c328:	str	x0, [sp, #200]
   5c32c:	b	5bff4 <mpfr_beta@@Base+0x800>
   5c330:	mov	x24, x23
   5c334:	b	5bfe8 <mpfr_beta@@Base+0x7f4>
   5c338:	mov	x2, x0
   5c33c:	ldr	x0, [sp, #200]
   5c340:	bl	c1c0 <mpfr_reallocate_func@plt>
   5c344:	str	x0, [sp, #200]
   5c348:	b	5c060 <mpfr_beta@@Base+0x86c>
   5c34c:	add	x0, sp, #0x190
   5c350:	bl	c070 <mpfr_clear@plt>
   5c354:	ldr	x1, [sp, #192]
   5c358:	cbz	x1, 5c364 <mpfr_beta@@Base+0xb70>
   5c35c:	ldr	x0, [sp, #200]
   5c360:	bl	cc20 <mpfr_free_func@plt>
   5c364:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c368:	ldr	x1, [x0, #2512]
   5c36c:	add	x0, x0, #0x9d0
   5c370:	blr	x1
   5c374:	mrs	x1, tpidr_el0
   5c378:	str	x27, [x1, x0]
   5c37c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c380:	ldr	x2, [x0, #2544]
   5c384:	add	x0, x0, #0x9f0
   5c388:	blr	x2
   5c38c:	str	x28, [x1, x0]
   5c390:	mov	x0, #0x2                   	// #2
   5c394:	movk	x0, #0x8000, lsl #48
   5c398:	str	x0, [x22, #16]
   5c39c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c3a0:	ldr	x2, [x0, #2576]
   5c3a4:	add	x0, x0, #0xa10
   5c3a8:	blr	x2
   5c3ac:	orr	w25, w25, #0x4
   5c3b0:	str	w25, [x1, x0]
   5c3b4:	ldp	x23, x24, [sp, #48]
   5c3b8:	ldp	x25, x26, [sp, #64]
   5c3bc:	ldp	x27, x28, [sp, #80]
   5c3c0:	b	5b968 <mpfr_beta@@Base+0x174>
   5c3c4:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5c3c8:	add	x2, x2, #0xe18
   5c3cc:	mov	w1, #0x129                 	// #297
   5c3d0:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5c3d4:	add	x0, x0, #0xe10
   5c3d8:	bl	cb40 <mpfr_assert_fail@plt>
   5c3dc:	b	5c11c <mpfr_beta@@Base+0x928>
   5c3e0:	mov	x2, #0x0                   	// #0
   5c3e4:	mov	x1, #0x1                   	// #1
   5c3e8:	mov	x0, x20
   5c3ec:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5c3f0:	cbnz	w0, 5c428 <mpfr_beta@@Base+0xc34>
   5c3f4:	ldr	x0, [x19, #16]
   5c3f8:	str	x0, [sp, #120]
   5c3fc:	sub	x24, x0, #0x1
   5c400:	mov	x2, x24
   5c404:	mov	x1, #0x1                   	// #1
   5c408:	mov	x0, x19
   5c40c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5c410:	cbz	w0, 5c4a8 <mpfr_beta@@Base+0xcb4>
   5c414:	mov	x2, x24
   5c418:	mov	x1, #0xffffffffffffffff    	// #-1
   5c41c:	mov	x0, x19
   5c420:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5c424:	cbz	w0, 5c4c4 <mpfr_beta@@Base+0xcd0>
   5c428:	mov	x2, #0x0                   	// #0
   5c42c:	mov	x1, #0x1                   	// #1
   5c430:	mov	x0, x19
   5c434:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5c438:	cbnz	w0, 5c454 <mpfr_beta@@Base+0xc60>
   5c43c:	ldr	x2, [x20, #16]
   5c440:	sub	x2, x2, #0x1
   5c444:	mov	x1, #0x1                   	// #1
   5c448:	mov	x0, x20
   5c44c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5c450:	cbz	w0, 5c4e4 <mpfr_beta@@Base+0xcf0>
   5c454:	mov	x2, #0x0                   	// #0
   5c458:	mov	x1, #0x2                   	// #2
   5c45c:	mov	x0, x20
   5c460:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5c464:	cbz	w0, 5c500 <mpfr_beta@@Base+0xd0c>
   5c468:	mov	x0, #0xfffffffffffffeff    	// #-257
   5c46c:	movk	x0, #0x7fff, lsl #48
   5c470:	sub	x0, x0, x23
   5c474:	ldr	x1, [sp, #136]
   5c478:	cmp	x0, x1
   5c47c:	b.lt	5c52c <mpfr_beta@@Base+0xd38>  // b.tstop
   5c480:	ldr	x0, [sp, #136]
   5c484:	add	x23, x23, x0
   5c488:	add	x0, x23, x23, lsr #63
   5c48c:	asr	x0, x0, #1
   5c490:	str	x0, [sp, #136]
   5c494:	ldr	x1, [sp, #192]
   5c498:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5c49c:	cmp	x23, x0
   5c4a0:	b.lt	5c038 <mpfr_beta@@Base+0x844>  // b.tstop
   5c4a4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5c4a8:	mov	x1, #0x1                   	// #1
   5c4ac:	mov	w3, #0x0                   	// #0
   5c4b0:	ldr	x0, [sp, #120]
   5c4b4:	sub	x2, x1, x0
   5c4b8:	add	x0, sp, #0x170
   5c4bc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5c4c0:	b	5c158 <mpfr_beta@@Base+0x964>
   5c4c4:	mov	w3, #0x0                   	// #0
   5c4c8:	mov	x2, #0x1                   	// #1
   5c4cc:	ldr	x0, [sp, #120]
   5c4d0:	sub	x2, x2, x0
   5c4d4:	mov	x1, #0xffffffffffffffff    	// #-1
   5c4d8:	add	x0, sp, #0x170
   5c4dc:	bl	ba80 <mpfr_set_si_2exp@plt>
   5c4e0:	b	5c158 <mpfr_beta@@Base+0x964>
   5c4e4:	mov	x1, #0x1                   	// #1
   5c4e8:	ldr	x2, [x20, #16]
   5c4ec:	mov	w3, #0x0                   	// #0
   5c4f0:	sub	x2, x1, x2
   5c4f4:	add	x0, sp, #0x170
   5c4f8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5c4fc:	b	5c158 <mpfr_beta@@Base+0x964>
   5c500:	mov	x2, #0xffffffffffffffff    	// #-1
   5c504:	mov	x1, x2
   5c508:	mov	x0, x19
   5c50c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5c510:	cbnz	w0, 5c468 <mpfr_beta@@Base+0xc74>
   5c514:	mov	w3, #0x0                   	// #0
   5c518:	mov	x2, #0x2                   	// #2
   5c51c:	mov	x1, #0xffffffffffffffff    	// #-1
   5c520:	add	x0, sp, #0x170
   5c524:	bl	ba80 <mpfr_set_si_2exp@plt>
   5c528:	b	5c158 <mpfr_beta@@Base+0x964>
   5c52c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x37b0>
   5c530:	add	x2, x2, #0xd68
   5c534:	mov	w1, #0x151                 	// #337
   5c538:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5c53c:	add	x0, x0, #0xe10
   5c540:	bl	cb40 <mpfr_assert_fail@plt>
   5c544:	ldr	w2, [sp, #108]
   5c548:	mov	w1, w21
   5c54c:	mov	x0, x22
   5c550:	bl	cb30 <mpfr_check_range@plt>
   5c554:	mov	w21, w0
   5c558:	ldp	x23, x24, [sp, #48]
   5c55c:	ldp	x25, x26, [sp, #64]
   5c560:	ldp	x27, x28, [sp, #80]
   5c564:	b	5b968 <mpfr_beta@@Base+0x174>
   5c568:	ldp	x23, x24, [sp, #48]
   5c56c:	ldp	x25, x26, [sp, #64]
   5c570:	ldp	x27, x28, [sp, #80]
   5c574:	b	5b968 <mpfr_beta@@Base+0x174>

000000000005c578 <mpfr_odd_p@@Base>:
   5c578:	ldr	x3, [x0, #16]
   5c57c:	cmp	x3, #0x0
   5c580:	b.le	5c64c <mpfr_odd_p@@Base+0xd4>
   5c584:	ldr	x1, [x0]
   5c588:	cmp	x3, x1
   5c58c:	b.gt	5c654 <mpfr_odd_p@@Base+0xdc>
   5c590:	add	x2, x1, #0x3e
   5c594:	subs	x1, x1, #0x1
   5c598:	csel	x2, x2, x1, mi  // mi = first
   5c59c:	and	x2, x2, #0xffffffffffffffc0
   5c5a0:	add	x2, x2, #0x40
   5c5a4:	subs	x2, x2, x3
   5c5a8:	add	x1, x2, #0x3f
   5c5ac:	csel	x1, x1, x2, mi  // mi = first
   5c5b0:	asr	x1, x1, #6
   5c5b4:	cmn	x2, #0x3f
   5c5b8:	b.lt	5c5f4 <mpfr_odd_p@@Base+0x7c>  // b.tstop
   5c5bc:	ldr	x2, [x0, #24]
   5c5c0:	tst	x3, #0x3f
   5c5c4:	b.ne	5c614 <mpfr_odd_p@@Base+0x9c>  // b.any
   5c5c8:	ldr	x3, [x2, x1, lsl #3]
   5c5cc:	eor	x3, x3, #0x1
   5c5d0:	and	w3, w3, #0x1
   5c5d4:	mov	w0, #0x0                   	// #0
   5c5d8:	cbnz	w3, 5c640 <mpfr_odd_p@@Base+0xc8>
   5c5dc:	subs	x1, x1, #0x1
   5c5e0:	b.mi	5c644 <mpfr_odd_p@@Base+0xcc>  // b.first
   5c5e4:	ldr	x0, [x2, x1, lsl #3]
   5c5e8:	cbz	x0, 5c5dc <mpfr_odd_p@@Base+0x64>
   5c5ec:	mov	w0, #0x0                   	// #0
   5c5f0:	ret
   5c5f4:	stp	x29, x30, [sp, #-16]!
   5c5f8:	mov	x29, sp
   5c5fc:	adrp	x2, 67000 <mpfr_bases@@Base+0x1900>
   5c600:	add	x2, x2, #0xe60
   5c604:	mov	w1, #0x3c                  	// #60
   5c608:	adrp	x0, 67000 <mpfr_bases@@Base+0x1900>
   5c60c:	add	x0, x0, #0xe68
   5c610:	bl	cb40 <mpfr_assert_fail@plt>
   5c614:	negs	x0, x3
   5c618:	and	x3, x3, #0x3f
   5c61c:	and	x0, x0, #0x3f
   5c620:	csneg	x3, x3, x0, mi  // mi = first
   5c624:	sub	w3, w3, #0x1
   5c628:	ldr	x0, [x2, x1, lsl #3]
   5c62c:	lsl	x3, x0, x3
   5c630:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   5c634:	cmp	x3, x0
   5c638:	cset	w3, ne  // ne = any
   5c63c:	b	5c5d4 <mpfr_odd_p@@Base+0x5c>
   5c640:	ret
   5c644:	mov	w0, #0x1                   	// #1
   5c648:	ret
   5c64c:	mov	w0, #0x0                   	// #0
   5c650:	ret
   5c654:	mov	w0, #0x0                   	// #0
   5c658:	ret

000000000005c65c <mpfr_get_q@@Base>:
   5c65c:	stp	x29, x30, [sp, #-32]!
   5c660:	mov	x29, sp
   5c664:	stp	x19, x20, [sp, #16]
   5c668:	mov	x19, x0
   5c66c:	mov	x20, x1
   5c670:	mov	x1, #0x1                   	// #1
   5c674:	add	x0, x0, #0x10
   5c678:	bl	bcb0 <__gmpz_set_ui@plt>
   5c67c:	ldr	x0, [x20, #16]
   5c680:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5c684:	cmp	x0, x1
   5c688:	b.le	5c6b8 <mpfr_get_q@@Base+0x5c>
   5c68c:	mov	x1, x20
   5c690:	mov	x0, x19
   5c694:	bl	cac0 <mpfr_get_z_2exp@plt>
   5c698:	mov	x2, x0
   5c69c:	tbnz	x0, #63, 5c6fc <mpfr_get_q@@Base+0xa0>
   5c6a0:	mov	x1, x19
   5c6a4:	mov	x0, x19
   5c6a8:	bl	c200 <__gmpz_mul_2exp@plt>
   5c6ac:	ldp	x19, x20, [sp, #16]
   5c6b0:	ldp	x29, x30, [sp], #32
   5c6b4:	ret
   5c6b8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5c6bc:	cmp	x0, x1
   5c6c0:	b.ne	5c6d4 <mpfr_get_q@@Base+0x78>  // b.any
   5c6c4:	mov	x1, #0x0                   	// #0
   5c6c8:	mov	x0, x19
   5c6cc:	bl	bcb0 <__gmpz_set_ui@plt>
   5c6d0:	b	5c6ac <mpfr_get_q@@Base+0x50>
   5c6d4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c6d8:	ldr	x1, [x0, #2576]
   5c6dc:	add	x0, x0, #0xa10
   5c6e0:	blr	x1
   5c6e4:	mrs	x1, tpidr_el0
   5c6e8:	add	x0, x1, x0
   5c6ec:	ldr	w1, [x0]
   5c6f0:	orr	w1, w1, #0x10
   5c6f4:	str	w1, [x0]
   5c6f8:	b	5c6c4 <mpfr_get_q@@Base+0x68>
   5c6fc:	neg	x2, x0
   5c700:	mov	x1, x19
   5c704:	mov	x0, x19
   5c708:	bl	caf0 <__gmpq_div_2exp@plt>
   5c70c:	b	5c6ac <mpfr_get_q@@Base+0x50>

000000000005c710 <mpfr_mpz_init@@Base>:
   5c710:	stp	x29, x30, [sp, #-16]!
   5c714:	mov	x29, sp
   5c718:	mov	x2, x0
   5c71c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c720:	ldr	x1, [x0, #2496]
   5c724:	add	x0, x0, #0x9c0
   5c728:	blr	x1
   5c72c:	mrs	x1, tpidr_el0
   5c730:	ldr	w1, [x1, x0]
   5c734:	cmp	w1, #0x0
   5c738:	b.le	5c764 <mpfr_mpz_init@@Base+0x54>
   5c73c:	sub	w1, w1, #0x1
   5c740:	mrs	x3, tpidr_el0
   5c744:	add	x4, x3, x0
   5c748:	str	w1, [x3, x0]
   5c74c:	add	x1, x4, w1, sxtw #4
   5c750:	ldp	x0, x1, [x1, #8]
   5c754:	stp	x0, x1, [x2]
   5c758:	str	wzr, [x2, #4]
   5c75c:	ldp	x29, x30, [sp], #16
   5c760:	ret
   5c764:	mov	x0, x2
   5c768:	bl	cb50 <__gmpz_init@plt>
   5c76c:	b	5c75c <mpfr_mpz_init@@Base+0x4c>

000000000005c770 <mpfr_mpz_init2@@Base>:
   5c770:	stp	x29, x30, [sp, #-16]!
   5c774:	mov	x29, sp
   5c778:	mov	x3, x0
   5c77c:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c780:	ldr	x2, [x0, #2496]
   5c784:	add	x0, x0, #0x9c0
   5c788:	blr	x2
   5c78c:	mrs	x2, tpidr_el0
   5c790:	ldr	w2, [x2, x0]
   5c794:	cmp	x1, #0x800
   5c798:	ccmp	w2, #0x0, #0x4, ls  // ls = plast
   5c79c:	b.le	5c7c8 <mpfr_mpz_init2@@Base+0x58>
   5c7a0:	sub	w2, w2, #0x1
   5c7a4:	mrs	x1, tpidr_el0
   5c7a8:	add	x4, x1, x0
   5c7ac:	str	w2, [x1, x0]
   5c7b0:	add	x2, x4, w2, sxtw #4
   5c7b4:	ldp	x0, x1, [x2, #8]
   5c7b8:	stp	x0, x1, [x3]
   5c7bc:	str	wzr, [x3, #4]
   5c7c0:	ldp	x29, x30, [sp], #16
   5c7c4:	ret
   5c7c8:	mov	x0, x3
   5c7cc:	bl	ca90 <__gmpz_init2@plt>
   5c7d0:	b	5c7c0 <mpfr_mpz_init2@@Base+0x50>

000000000005c7d4 <mpfr_mpz_clear@@Base>:
   5c7d4:	stp	x29, x30, [sp, #-16]!
   5c7d8:	mov	x29, sp
   5c7dc:	mov	x1, x0
   5c7e0:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c7e4:	ldr	x2, [x0, #2496]
   5c7e8:	add	x0, x0, #0x9c0
   5c7ec:	blr	x2
   5c7f0:	mrs	x2, tpidr_el0
   5c7f4:	ldr	w3, [x2, x0]
   5c7f8:	sxtw	x2, w3
   5c7fc:	cmp	x2, #0x1f
   5c800:	b.hi	5c844 <mpfr_mpz_clear@@Base+0x70>  // b.pmore
   5c804:	ldr	w0, [x1]
   5c808:	cmp	w0, #0x20
   5c80c:	b.gt	5c844 <mpfr_mpz_clear@@Base+0x70>
   5c810:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c814:	ldr	x4, [x0, #2496]
   5c818:	add	x0, x0, #0x9c0
   5c81c:	blr	x4
   5c820:	mrs	x4, tpidr_el0
   5c824:	add	x5, x4, x0
   5c828:	add	w3, w3, #0x1
   5c82c:	str	w3, [x4, x0]
   5c830:	ldp	x0, x1, [x1]
   5c834:	add	x2, x5, x2, lsl #4
   5c838:	stp	x0, x1, [x2, #8]
   5c83c:	ldp	x29, x30, [sp], #16
   5c840:	ret
   5c844:	mov	x0, x1
   5c848:	bl	c640 <__gmpz_clear@plt>
   5c84c:	b	5c83c <mpfr_mpz_clear@@Base+0x68>

000000000005c850 <mpfr_free_pool@@Base>:
   5c850:	stp	x29, x30, [sp, #-48]!
   5c854:	mov	x29, sp
   5c858:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c85c:	ldr	x1, [x0, #2496]
   5c860:	add	x0, x0, #0x9c0
   5c864:	blr	x1
   5c868:	mrs	x1, tpidr_el0
   5c86c:	ldr	w0, [x1, x0]
   5c870:	cmp	w0, #0x0
   5c874:	b.le	5c8d8 <mpfr_free_pool@@Base+0x88>
   5c878:	stp	x19, x20, [sp, #16]
   5c87c:	str	x21, [sp, #32]
   5c880:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c884:	ldr	x1, [x0, #2496]
   5c888:	add	x0, x0, #0x9c0
   5c88c:	blr	x1
   5c890:	mrs	x19, tpidr_el0
   5c894:	add	x19, x19, x0
   5c898:	add	x19, x19, #0x8
   5c89c:	mov	w20, #0x0                   	// #0
   5c8a0:	mrs	x21, tpidr_el0
   5c8a4:	mov	x0, x19
   5c8a8:	bl	c640 <__gmpz_clear@plt>
   5c8ac:	add	w20, w20, #0x1
   5c8b0:	add	x19, x19, #0x10
   5c8b4:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c8b8:	ldr	x1, [x0, #2496]
   5c8bc:	add	x0, x0, #0x9c0
   5c8c0:	blr	x1
   5c8c4:	ldr	w0, [x21, x0]
   5c8c8:	cmp	w0, w20
   5c8cc:	b.gt	5c8a4 <mpfr_free_pool@@Base+0x54>
   5c8d0:	ldp	x19, x20, [sp, #16]
   5c8d4:	ldr	x21, [sp, #32]
   5c8d8:	adrp	x0, 81000 <mpfr_agm@@Base+0x72438>
   5c8dc:	ldr	x1, [x0, #2496]
   5c8e0:	add	x0, x0, #0x9c0
   5c8e4:	blr	x1
   5c8e8:	mrs	x1, tpidr_el0
   5c8ec:	str	wzr, [x1, x0]
   5c8f0:	ldp	x29, x30, [sp], #48
   5c8f4:	ret
   5c8f8:	stp	x29, x30, [sp, #-48]!
   5c8fc:	mov	x29, sp
   5c900:	str	q0, [sp, #16]
   5c904:	str	q1, [sp, #32]
   5c908:	ldp	x6, x1, [sp, #16]
   5c90c:	ldp	x0, x3, [sp, #32]
   5c910:	mrs	x15, fpcr
   5c914:	lsr	x7, x1, #63
   5c918:	mov	x10, x0
   5c91c:	ubfiz	x4, x3, #3, #48
   5c920:	lsr	x5, x3, #63
   5c924:	mov	x12, x7
   5c928:	ubfiz	x2, x1, #3, #48
   5c92c:	orr	x4, x4, x0, lsr #61
   5c930:	ubfx	x8, x1, #48, #15
   5c934:	ubfx	x0, x3, #48, #15
   5c938:	and	w7, w7, #0xff
   5c93c:	mov	x16, x12
   5c940:	cmp	x12, x5
   5c944:	and	w11, w5, #0xff
   5c948:	orr	x2, x2, x6, lsr #61
   5c94c:	mov	x1, x8
   5c950:	lsl	x9, x6, #3
   5c954:	mov	x3, x0
   5c958:	lsl	x13, x10, #3
   5c95c:	b.eq	5cb08 <mpfr_free_pool@@Base+0x2b8>  // b.none
   5c960:	sub	w0, w8, w0
   5c964:	cmp	w0, #0x0
   5c968:	b.le	5cab4 <mpfr_free_pool@@Base+0x264>
   5c96c:	cbz	x3, 5cb68 <mpfr_free_pool@@Base+0x318>
   5c970:	orr	x4, x4, #0x8000000000000
   5c974:	mov	x3, #0x7fff                	// #32767
   5c978:	cmp	x1, x3
   5c97c:	b.eq	5cd6c <mpfr_free_pool@@Base+0x51c>  // b.none
   5c980:	cmp	w0, #0x74
   5c984:	b.gt	5cdf0 <mpfr_free_pool@@Base+0x5a0>
   5c988:	cmp	w0, #0x3f
   5c98c:	b.gt	5cf50 <mpfr_free_pool@@Base+0x700>
   5c990:	mov	w3, #0x40                  	// #64
   5c994:	sub	w3, w3, w0
   5c998:	lsr	x6, x13, x0
   5c99c:	lsl	x13, x13, x3
   5c9a0:	cmp	x13, #0x0
   5c9a4:	cset	x5, ne  // ne = any
   5c9a8:	lsl	x3, x4, x3
   5c9ac:	orr	x3, x3, x6
   5c9b0:	lsr	x0, x4, x0
   5c9b4:	orr	x3, x3, x5
   5c9b8:	sub	x2, x2, x0
   5c9bc:	subs	x9, x9, x3
   5c9c0:	sbc	x2, x2, xzr
   5c9c4:	and	x3, x2, #0x7ffffffffffff
   5c9c8:	tbz	x2, #51, 5cba8 <mpfr_free_pool@@Base+0x358>
   5c9cc:	cbz	x3, 5cdd4 <mpfr_free_pool@@Base+0x584>
   5c9d0:	clz	x0, x3
   5c9d4:	sub	w0, w0, #0xc
   5c9d8:	neg	w2, w0
   5c9dc:	lsl	x4, x3, x0
   5c9e0:	lsl	x3, x9, x0
   5c9e4:	lsr	x9, x9, x2
   5c9e8:	orr	x2, x9, x4
   5c9ec:	cmp	x1, w0, sxtw
   5c9f0:	sxtw	x4, w0
   5c9f4:	b.gt	5cdb4 <mpfr_free_pool@@Base+0x564>
   5c9f8:	sub	w1, w0, w1
   5c9fc:	add	w0, w1, #0x1
   5ca00:	cmp	w0, #0x3f
   5ca04:	b.gt	5cf18 <mpfr_free_pool@@Base+0x6c8>
   5ca08:	mov	w1, #0x40                  	// #64
   5ca0c:	sub	w1, w1, w0
   5ca10:	lsr	x4, x3, x0
   5ca14:	lsl	x3, x3, x1
   5ca18:	cmp	x3, #0x0
   5ca1c:	lsl	x9, x2, x1
   5ca20:	cset	x1, ne  // ne = any
   5ca24:	orr	x9, x9, x4
   5ca28:	lsr	x2, x2, x0
   5ca2c:	orr	x9, x9, x1
   5ca30:	orr	x8, x9, x2
   5ca34:	cbz	x8, 5cbbc <mpfr_free_pool@@Base+0x36c>
   5ca38:	and	x0, x9, #0x7
   5ca3c:	mov	x1, #0x0                   	// #0
   5ca40:	mov	w5, #0x1                   	// #1
   5ca44:	cbz	x0, 5ce00 <mpfr_free_pool@@Base+0x5b0>
   5ca48:	and	x3, x15, #0xc00000
   5ca4c:	cmp	x3, #0x400, lsl #12
   5ca50:	b.eq	5cd44 <mpfr_free_pool@@Base+0x4f4>  // b.none
   5ca54:	cmp	x3, #0x800, lsl #12
   5ca58:	b.eq	5cd24 <mpfr_free_pool@@Base+0x4d4>  // b.none
   5ca5c:	cbz	x3, 5cd50 <mpfr_free_pool@@Base+0x500>
   5ca60:	and	x3, x2, #0x8000000000000
   5ca64:	mov	w0, #0x10                  	// #16
   5ca68:	cbz	w5, 5ca70 <mpfr_free_pool@@Base+0x220>
   5ca6c:	orr	w0, w0, #0x8
   5ca70:	cbz	x3, 5cd88 <mpfr_free_pool@@Base+0x538>
   5ca74:	add	x1, x1, #0x1
   5ca78:	mov	x3, #0x7fff                	// #32767
   5ca7c:	cmp	x1, x3
   5ca80:	b.eq	5cc6c <mpfr_free_pool@@Base+0x41c>  // b.none
   5ca84:	and	w1, w1, #0x7fff
   5ca88:	extr	x8, x2, x9, #3
   5ca8c:	ubfx	x2, x2, #3, #48
   5ca90:	mov	x5, #0x0                   	// #0
   5ca94:	orr	w1, w1, w7, lsl #15
   5ca98:	bfxil	x5, x2, #0, #48
   5ca9c:	fmov	d0, x8
   5caa0:	bfi	x5, x1, #48, #16
   5caa4:	fmov	v0.d[1], x5
   5caa8:	cbnz	w0, 5ccc8 <mpfr_free_pool@@Base+0x478>
   5caac:	ldp	x29, x30, [sp], #48
   5cab0:	ret
   5cab4:	mov	x14, x5
   5cab8:	b.eq	5cbd4 <mpfr_free_pool@@Base+0x384>  // b.none
   5cabc:	cbnz	x8, 5ce58 <mpfr_free_pool@@Base+0x608>
   5cac0:	orr	x1, x2, x9
   5cac4:	cbz	x1, 5cb84 <mpfr_free_pool@@Base+0x334>
   5cac8:	cmn	w0, #0x1
   5cacc:	b.eq	5d274 <mpfr_free_pool@@Base+0xa24>  // b.none
   5cad0:	mov	x1, #0x7fff                	// #32767
   5cad4:	mvn	w0, w0
   5cad8:	cmp	x3, x1
   5cadc:	b.ne	5ce6c <mpfr_free_pool@@Base+0x61c>  // b.any
   5cae0:	orr	x0, x4, x13
   5cae4:	cbnz	x0, 5d1cc <mpfr_free_pool@@Base+0x97c>
   5cae8:	mov	x16, x14
   5caec:	nop
   5caf0:	mov	x4, #0x0                   	// #0
   5caf4:	fmov	d0, x4
   5caf8:	lsl	x16, x16, #63
   5cafc:	orr	x5, x16, #0x7fff000000000000
   5cb00:	fmov	v0.d[1], x5
   5cb04:	b	5caac <mpfr_free_pool@@Base+0x25c>
   5cb08:	sub	w5, w8, w0
   5cb0c:	cmp	w5, #0x0
   5cb10:	b.le	5ccdc <mpfr_free_pool@@Base+0x48c>
   5cb14:	cbz	x0, 5cc1c <mpfr_free_pool@@Base+0x3cc>
   5cb18:	orr	x4, x4, #0x8000000000000
   5cb1c:	mov	x0, #0x7fff                	// #32767
   5cb20:	cmp	x1, x0
   5cb24:	b.eq	5cd6c <mpfr_free_pool@@Base+0x51c>  // b.none
   5cb28:	cmp	w5, #0x74
   5cb2c:	b.gt	5cf00 <mpfr_free_pool@@Base+0x6b0>
   5cb30:	cmp	w5, #0x3f
   5cb34:	b.gt	5d000 <mpfr_free_pool@@Base+0x7b0>
   5cb38:	mov	w0, #0x40                  	// #64
   5cb3c:	sub	w0, w0, w5
   5cb40:	lsr	x6, x13, x5
   5cb44:	lsl	x13, x13, x0
   5cb48:	cmp	x13, #0x0
   5cb4c:	lsl	x0, x4, x0
   5cb50:	cset	x3, ne  // ne = any
   5cb54:	orr	x0, x0, x6
   5cb58:	lsr	x4, x4, x5
   5cb5c:	orr	x0, x0, x3
   5cb60:	add	x2, x2, x4
   5cb64:	b	5cf0c <mpfr_free_pool@@Base+0x6bc>
   5cb68:	orr	x3, x4, x13
   5cb6c:	cbz	x3, 5cedc <mpfr_free_pool@@Base+0x68c>
   5cb70:	subs	w0, w0, #0x1
   5cb74:	b.ne	5c974 <mpfr_free_pool@@Base+0x124>  // b.any
   5cb78:	subs	x9, x9, x13
   5cb7c:	sbc	x2, x2, x4
   5cb80:	b	5c9c4 <mpfr_free_pool@@Base+0x174>
   5cb84:	mov	x0, #0x7fff                	// #32767
   5cb88:	cmp	x3, x0
   5cb8c:	b.eq	5d2c0 <mpfr_free_pool@@Base+0xa70>  // b.none
   5cb90:	mov	w7, w11
   5cb94:	mov	x2, x4
   5cb98:	mov	x9, x13
   5cb9c:	mov	x1, x3
   5cba0:	mov	x12, x5
   5cba4:	nop
   5cba8:	orr	x8, x9, x2
   5cbac:	and	x0, x9, #0x7
   5cbb0:	mov	w5, #0x0                   	// #0
   5cbb4:	cbnz	x1, 5ca44 <mpfr_free_pool@@Base+0x1f4>
   5cbb8:	cbnz	x8, 5ca38 <mpfr_free_pool@@Base+0x1e8>
   5cbbc:	mov	x2, #0x0                   	// #0
   5cbc0:	mov	x1, #0x0                   	// #0
   5cbc4:	mov	w0, #0x0                   	// #0
   5cbc8:	and	x2, x2, #0xffffffffffff
   5cbcc:	and	w1, w1, #0x7fff
   5cbd0:	b	5ca90 <mpfr_free_pool@@Base+0x240>
   5cbd4:	add	x5, x8, #0x1
   5cbd8:	tst	x5, #0x7ffe
   5cbdc:	b.ne	5ceac <mpfr_free_pool@@Base+0x65c>  // b.any
   5cbe0:	orr	x5, x2, x9
   5cbe4:	orr	x8, x4, x13
   5cbe8:	cbnz	x1, 5d06c <mpfr_free_pool@@Base+0x81c>
   5cbec:	cbz	x5, 5d114 <mpfr_free_pool@@Base+0x8c4>
   5cbf0:	cbz	x8, 5d128 <mpfr_free_pool@@Base+0x8d8>
   5cbf4:	subs	x5, x9, x13
   5cbf8:	cmp	x9, x13
   5cbfc:	sbc	x3, x2, x4
   5cc00:	tbz	x3, #51, 5d2f4 <mpfr_free_pool@@Base+0xaa4>
   5cc04:	subs	x9, x13, x9
   5cc08:	mov	w7, w11
   5cc0c:	sbc	x2, x4, x2
   5cc10:	mov	x12, x14
   5cc14:	orr	x8, x9, x2
   5cc18:	b	5ca34 <mpfr_free_pool@@Base+0x1e4>
   5cc1c:	orr	x0, x4, x13
   5cc20:	cbz	x0, 5d0f4 <mpfr_free_pool@@Base+0x8a4>
   5cc24:	subs	w5, w5, #0x1
   5cc28:	b.ne	5cb1c <mpfr_free_pool@@Base+0x2cc>  // b.any
   5cc2c:	adds	x9, x9, x13
   5cc30:	adc	x2, x4, x2
   5cc34:	nop
   5cc38:	tbz	x2, #51, 5cba8 <mpfr_free_pool@@Base+0x358>
   5cc3c:	add	x1, x1, #0x1
   5cc40:	mov	x0, #0x7fff                	// #32767
   5cc44:	cmp	x1, x0
   5cc48:	b.eq	5d134 <mpfr_free_pool@@Base+0x8e4>  // b.none
   5cc4c:	and	x0, x9, #0x1
   5cc50:	and	x3, x2, #0xfff7ffffffffffff
   5cc54:	orr	x9, x0, x9, lsr #1
   5cc58:	mov	w5, #0x0                   	// #0
   5cc5c:	orr	x9, x9, x2, lsl #63
   5cc60:	lsr	x2, x3, #1
   5cc64:	and	x0, x9, #0x7
   5cc68:	b	5ca44 <mpfr_free_pool@@Base+0x1f4>
   5cc6c:	and	x3, x15, #0xc00000
   5cc70:	cbz	x3, 5cca8 <mpfr_free_pool@@Base+0x458>
   5cc74:	cmp	x3, #0x400, lsl #12
   5cc78:	b.eq	5cca0 <mpfr_free_pool@@Base+0x450>  // b.none
   5cc7c:	cmp	x3, #0x800, lsl #12
   5cc80:	csel	w12, w12, wzr, eq  // eq = none
   5cc84:	cbnz	w12, 5cca8 <mpfr_free_pool@@Base+0x458>
   5cc88:	mov	w1, #0x14                  	// #20
   5cc8c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5cc90:	orr	w0, w0, w1
   5cc94:	mov	x8, #0xffffffffffffffff    	// #-1
   5cc98:	mov	x1, #0x7ffe                	// #32766
   5cc9c:	b	5cbc8 <mpfr_free_pool@@Base+0x378>
   5cca0:	cbnz	x12, 5cc88 <mpfr_free_pool@@Base+0x438>
   5cca4:	nop
   5cca8:	mov	w1, #0x14                  	// #20
   5ccac:	and	x16, x7, #0xff
   5ccb0:	orr	w0, w0, w1
   5ccb4:	mov	x4, #0x0                   	// #0
   5ccb8:	fmov	d0, x4
   5ccbc:	lsl	x16, x16, #63
   5ccc0:	orr	x5, x16, #0x7fff000000000000
   5ccc4:	fmov	v0.d[1], x5
   5ccc8:	str	q0, [sp, #16]
   5cccc:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5ccd0:	ldr	q0, [sp, #16]
   5ccd4:	ldp	x29, x30, [sp], #48
   5ccd8:	ret
   5ccdc:	b.eq	5ce1c <mpfr_free_pool@@Base+0x5cc>  // b.none
   5cce0:	cbnz	x8, 5cfa0 <mpfr_free_pool@@Base+0x750>
   5cce4:	orr	x0, x2, x9
   5cce8:	cbz	x0, 5d20c <mpfr_free_pool@@Base+0x9bc>
   5ccec:	cmn	w5, #0x1
   5ccf0:	b.eq	5d36c <mpfr_free_pool@@Base+0xb1c>  // b.none
   5ccf4:	mov	x0, #0x7fff                	// #32767
   5ccf8:	mvn	w5, w5
   5ccfc:	cmp	x3, x0
   5cd00:	b.ne	5cfb4 <mpfr_free_pool@@Base+0x764>  // b.any
   5cd04:	orr	x0, x4, x13
   5cd08:	cbz	x0, 5caf0 <mpfr_free_pool@@Base+0x2a0>
   5cd0c:	lsr	x5, x4, #50
   5cd10:	mov	x9, x13
   5cd14:	eor	x5, x5, #0x1
   5cd18:	mov	x2, x4
   5cd1c:	and	w5, w5, #0x1
   5cd20:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5cd24:	mov	w0, #0x10                  	// #16
   5cd28:	cbz	x12, 5cd34 <mpfr_free_pool@@Base+0x4e4>
   5cd2c:	adds	x9, x9, #0x8
   5cd30:	cinc	x2, x2, cs  // cs = hs, nlast
   5cd34:	and	x3, x2, #0x8000000000000
   5cd38:	cbz	w5, 5ca70 <mpfr_free_pool@@Base+0x220>
   5cd3c:	orr	w0, w0, #0x8
   5cd40:	b	5ca70 <mpfr_free_pool@@Base+0x220>
   5cd44:	mov	w0, #0x10                  	// #16
   5cd48:	cbnz	x12, 5cd34 <mpfr_free_pool@@Base+0x4e4>
   5cd4c:	b	5cd2c <mpfr_free_pool@@Base+0x4dc>
   5cd50:	and	x3, x9, #0xf
   5cd54:	mov	w0, #0x10                  	// #16
   5cd58:	cmp	x3, #0x4
   5cd5c:	b.eq	5cd34 <mpfr_free_pool@@Base+0x4e4>  // b.none
   5cd60:	adds	x9, x9, #0x4
   5cd64:	cinc	x2, x2, cs  // cs = hs, nlast
   5cd68:	b	5cd34 <mpfr_free_pool@@Base+0x4e4>
   5cd6c:	orr	x0, x2, x9
   5cd70:	cbz	x0, 5caf0 <mpfr_free_pool@@Base+0x2a0>
   5cd74:	lsr	x5, x2, #50
   5cd78:	eor	x5, x5, #0x1
   5cd7c:	and	w5, w5, #0x1
   5cd80:	mov	w0, w5
   5cd84:	mov	x1, #0x7fff                	// #32767
   5cd88:	mov	x3, #0x7fff                	// #32767
   5cd8c:	extr	x8, x2, x9, #3
   5cd90:	cmp	x1, x3
   5cd94:	lsr	x2, x2, #3
   5cd98:	b.ne	5cbc8 <mpfr_free_pool@@Base+0x378>  // b.any
   5cd9c:	orr	x1, x8, x2
   5cda0:	cbz	x1, 5d40c <mpfr_free_pool@@Base+0xbbc>
   5cda4:	orr	x2, x2, #0x800000000000
   5cda8:	mov	w1, #0x7fff                	// #32767
   5cdac:	and	x2, x2, #0xffffffffffff
   5cdb0:	b	5ca90 <mpfr_free_pool@@Base+0x240>
   5cdb4:	mov	x9, x3
   5cdb8:	and	x2, x2, #0xfff7ffffffffffff
   5cdbc:	sub	x1, x1, x4
   5cdc0:	orr	x8, x9, x2
   5cdc4:	and	x0, x9, #0x7
   5cdc8:	mov	w5, #0x0                   	// #0
   5cdcc:	cbz	x1, 5cbb8 <mpfr_free_pool@@Base+0x368>
   5cdd0:	b	5ca44 <mpfr_free_pool@@Base+0x1f4>
   5cdd4:	clz	x2, x9
   5cdd8:	add	w0, w2, #0x34
   5cddc:	cmp	w0, #0x3f
   5cde0:	b.le	5c9d8 <mpfr_free_pool@@Base+0x188>
   5cde4:	sub	w2, w2, #0xc
   5cde8:	lsl	x2, x9, x2
   5cdec:	b	5c9ec <mpfr_free_pool@@Base+0x19c>
   5cdf0:	orr	x4, x4, x13
   5cdf4:	cmp	x4, #0x0
   5cdf8:	cset	x3, ne  // ne = any
   5cdfc:	b	5c9bc <mpfr_free_pool@@Base+0x16c>
   5ce00:	and	x3, x2, #0x8000000000000
   5ce04:	mov	w0, #0x0                   	// #0
   5ce08:	cbz	w5, 5ca70 <mpfr_free_pool@@Base+0x220>
   5ce0c:	mov	w0, #0x0                   	// #0
   5ce10:	tbz	w15, #11, 5ca70 <mpfr_free_pool@@Base+0x220>
   5ce14:	orr	w0, w0, #0x8
   5ce18:	b	5ca70 <mpfr_free_pool@@Base+0x220>
   5ce1c:	add	x0, x8, #0x1
   5ce20:	tst	x0, #0x7ffe
   5ce24:	b.ne	5d02c <mpfr_free_pool@@Base+0x7dc>  // b.any
   5ce28:	orr	x0, x2, x9
   5ce2c:	cbnz	x8, 5d1e8 <mpfr_free_pool@@Base+0x998>
   5ce30:	orr	x8, x4, x13
   5ce34:	cbz	x0, 5d23c <mpfr_free_pool@@Base+0x9ec>
   5ce38:	cbz	x8, 5d128 <mpfr_free_pool@@Base+0x8d8>
   5ce3c:	adds	x9, x9, x13
   5ce40:	adc	x2, x4, x2
   5ce44:	tbz	x2, #51, 5cc14 <mpfr_free_pool@@Base+0x3c4>
   5ce48:	and	x2, x2, #0xfff7ffffffffffff
   5ce4c:	and	x0, x9, #0x7
   5ce50:	mov	x1, #0x1                   	// #1
   5ce54:	b	5ca44 <mpfr_free_pool@@Base+0x1f4>
   5ce58:	mov	x1, #0x7fff                	// #32767
   5ce5c:	neg	w0, w0
   5ce60:	orr	x2, x2, #0x8000000000000
   5ce64:	cmp	x3, x1
   5ce68:	b.eq	5cae0 <mpfr_free_pool@@Base+0x290>  // b.none
   5ce6c:	cmp	w0, #0x74
   5ce70:	b.gt	5cf7c <mpfr_free_pool@@Base+0x72c>
   5ce74:	cmp	w0, #0x3f
   5ce78:	b.gt	5d198 <mpfr_free_pool@@Base+0x948>
   5ce7c:	mov	w1, #0x40                  	// #64
   5ce80:	sub	w1, w1, w0
   5ce84:	lsr	x5, x9, x0
   5ce88:	lsl	x9, x9, x1
   5ce8c:	cmp	x9, #0x0
   5ce90:	lsl	x9, x2, x1
   5ce94:	cset	x1, ne  // ne = any
   5ce98:	orr	x9, x9, x5
   5ce9c:	lsr	x0, x2, x0
   5cea0:	orr	x9, x9, x1
   5cea4:	sub	x4, x4, x0
   5cea8:	b	5cf88 <mpfr_free_pool@@Base+0x738>
   5ceac:	subs	x5, x9, x13
   5ceb0:	cmp	x9, x13
   5ceb4:	sbc	x3, x2, x4
   5ceb8:	tbnz	x3, #51, 5d054 <mpfr_free_pool@@Base+0x804>
   5cebc:	orr	x8, x5, x3
   5cec0:	cbnz	x8, 5d180 <mpfr_free_pool@@Base+0x930>
   5cec4:	and	x15, x15, #0xc00000
   5cec8:	mov	x2, #0x0                   	// #0
   5cecc:	cmp	x15, #0x800, lsl #12
   5ced0:	mov	x1, #0x0                   	// #0
   5ced4:	cset	w7, eq  // eq = none
   5ced8:	b	5cbc8 <mpfr_free_pool@@Base+0x378>
   5cedc:	mov	x0, #0x7fff                	// #32767
   5cee0:	cmp	x8, x0
   5cee4:	b.ne	5cba8 <mpfr_free_pool@@Base+0x358>  // b.any
   5cee8:	orr	x0, x2, x9
   5ceec:	cbnz	x0, 5cd74 <mpfr_free_pool@@Base+0x524>
   5cef0:	mov	x2, #0x0                   	// #0
   5cef4:	mov	x8, #0x0                   	// #0
   5cef8:	mov	w0, #0x0                   	// #0
   5cefc:	b	5cd9c <mpfr_free_pool@@Base+0x54c>
   5cf00:	orr	x4, x4, x13
   5cf04:	cmp	x4, #0x0
   5cf08:	cset	x0, ne  // ne = any
   5cf0c:	adds	x9, x0, x9
   5cf10:	cinc	x2, x2, cs  // cs = hs, nlast
   5cf14:	b	5cc38 <mpfr_free_pool@@Base+0x3e8>
   5cf18:	mov	w4, #0x80                  	// #128
   5cf1c:	sub	w4, w4, w0
   5cf20:	cmp	w0, #0x40
   5cf24:	sub	w9, w1, #0x3f
   5cf28:	lsl	x0, x2, x4
   5cf2c:	orr	x0, x3, x0
   5cf30:	csel	x3, x0, x3, ne  // ne = any
   5cf34:	lsr	x9, x2, x9
   5cf38:	cmp	x3, #0x0
   5cf3c:	mov	x2, #0x0                   	// #0
   5cf40:	cset	x0, ne  // ne = any
   5cf44:	orr	x9, x0, x9
   5cf48:	mov	x8, x9
   5cf4c:	b	5ca34 <mpfr_free_pool@@Base+0x1e4>
   5cf50:	mov	w5, #0x80                  	// #128
   5cf54:	sub	w5, w5, w0
   5cf58:	subs	w0, w0, #0x40
   5cf5c:	lsl	x5, x4, x5
   5cf60:	orr	x5, x13, x5
   5cf64:	csel	x13, x5, x13, ne  // ne = any
   5cf68:	lsr	x4, x4, x0
   5cf6c:	cmp	x13, #0x0
   5cf70:	cset	x3, ne  // ne = any
   5cf74:	orr	x3, x3, x4
   5cf78:	b	5c9bc <mpfr_free_pool@@Base+0x16c>
   5cf7c:	orr	x2, x2, x9
   5cf80:	cmp	x2, #0x0
   5cf84:	cset	x9, ne  // ne = any
   5cf88:	subs	x9, x13, x9
   5cf8c:	mov	w7, w11
   5cf90:	sbc	x2, x4, xzr
   5cf94:	mov	x1, x3
   5cf98:	mov	x12, x14
   5cf9c:	b	5c9c4 <mpfr_free_pool@@Base+0x174>
   5cfa0:	mov	x0, #0x7fff                	// #32767
   5cfa4:	neg	w5, w5
   5cfa8:	orr	x2, x2, #0x8000000000000
   5cfac:	cmp	x3, x0
   5cfb0:	b.eq	5cd04 <mpfr_free_pool@@Base+0x4b4>  // b.none
   5cfb4:	cmp	w5, #0x74
   5cfb8:	b.gt	5d188 <mpfr_free_pool@@Base+0x938>
   5cfbc:	cmp	w5, #0x3f
   5cfc0:	b.gt	5d248 <mpfr_free_pool@@Base+0x9f8>
   5cfc4:	mov	w1, #0x40                  	// #64
   5cfc8:	sub	w1, w1, w5
   5cfcc:	lsr	x6, x9, x5
   5cfd0:	lsl	x9, x9, x1
   5cfd4:	cmp	x9, #0x0
   5cfd8:	cset	x0, ne  // ne = any
   5cfdc:	lsl	x9, x2, x1
   5cfe0:	orr	x9, x9, x6
   5cfe4:	lsr	x5, x2, x5
   5cfe8:	orr	x9, x9, x0
   5cfec:	add	x4, x4, x5
   5cff0:	adds	x9, x9, x13
   5cff4:	mov	x1, x3
   5cff8:	cinc	x2, x4, cs  // cs = hs, nlast
   5cffc:	b	5cc38 <mpfr_free_pool@@Base+0x3e8>
   5d000:	mov	w0, #0x80                  	// #128
   5d004:	sub	w0, w0, w5
   5d008:	subs	w5, w5, #0x40
   5d00c:	lsl	x0, x4, x0
   5d010:	orr	x0, x13, x0
   5d014:	csel	x13, x0, x13, ne  // ne = any
   5d018:	lsr	x4, x4, x5
   5d01c:	cmp	x13, #0x0
   5d020:	cset	x0, ne  // ne = any
   5d024:	orr	x0, x0, x4
   5d028:	b	5cf0c <mpfr_free_pool@@Base+0x6bc>
   5d02c:	mov	x1, #0x7fff                	// #32767
   5d030:	cmp	x0, x1
   5d034:	b.eq	5d290 <mpfr_free_pool@@Base+0xa40>  // b.none
   5d038:	adds	x9, x9, x13
   5d03c:	mov	x1, x0
   5d040:	adc	x2, x4, x2
   5d044:	ubfx	x0, x9, #1, #3
   5d048:	extr	x9, x2, x9, #1
   5d04c:	lsr	x2, x2, #1
   5d050:	b	5ca44 <mpfr_free_pool@@Base+0x1f4>
   5d054:	cmp	x13, x9
   5d058:	mov	w7, w11
   5d05c:	sbc	x3, x4, x2
   5d060:	sub	x9, x13, x9
   5d064:	mov	x12, x14
   5d068:	b	5c9cc <mpfr_free_pool@@Base+0x17c>
   5d06c:	mov	x12, #0x7fff                	// #32767
   5d070:	cmp	x1, x12
   5d074:	b.eq	5d0a0 <mpfr_free_pool@@Base+0x850>  // b.none
   5d078:	cmp	x3, x12
   5d07c:	b.eq	5d2d0 <mpfr_free_pool@@Base+0xa80>  // b.none
   5d080:	cbnz	x5, 5d0b8 <mpfr_free_pool@@Base+0x868>
   5d084:	mov	w5, w0
   5d088:	cbnz	x8, 5d3b0 <mpfr_free_pool@@Base+0xb60>
   5d08c:	mov	w7, #0x0                   	// #0
   5d090:	mov	x2, #0xffffffffffff        	// #281474976710655
   5d094:	mov	w0, #0x1                   	// #1
   5d098:	mov	x8, #0xffffffffffffffff    	// #-1
   5d09c:	b	5cda4 <mpfr_free_pool@@Base+0x554>
   5d0a0:	cbz	x5, 5d3cc <mpfr_free_pool@@Base+0xb7c>
   5d0a4:	lsr	x0, x2, #50
   5d0a8:	cmp	x3, x1
   5d0ac:	eor	x0, x0, #0x1
   5d0b0:	and	w0, w0, #0x1
   5d0b4:	b.eq	5d2d0 <mpfr_free_pool@@Base+0xa80>  // b.none
   5d0b8:	cbz	x8, 5d2ec <mpfr_free_pool@@Base+0xa9c>
   5d0bc:	bfi	x6, x2, #61, #3
   5d0c0:	lsr	x3, x2, #3
   5d0c4:	tbz	x2, #50, 5d0e0 <mpfr_free_pool@@Base+0x890>
   5d0c8:	lsr	x1, x4, #3
   5d0cc:	tbnz	x4, #50, 5d0e0 <mpfr_free_pool@@Base+0x890>
   5d0d0:	mov	x6, x10
   5d0d4:	mov	w7, w11
   5d0d8:	bfi	x6, x4, #61, #3
   5d0dc:	mov	x3, x1
   5d0e0:	extr	x2, x3, x6, #61
   5d0e4:	bfi	x6, x2, #61, #3
   5d0e8:	lsr	x2, x2, #3
   5d0ec:	mov	x8, x6
   5d0f0:	b	5cd9c <mpfr_free_pool@@Base+0x54c>
   5d0f4:	mov	x0, #0x7fff                	// #32767
   5d0f8:	cmp	x8, x0
   5d0fc:	b.ne	5cba8 <mpfr_free_pool@@Base+0x358>  // b.any
   5d100:	orr	x0, x2, x9
   5d104:	cbz	x0, 5cef0 <mpfr_free_pool@@Base+0x6a0>
   5d108:	lsr	x5, x2, #50
   5d10c:	eor	w5, w5, #0x1
   5d110:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d114:	cbz	x8, 5d228 <mpfr_free_pool@@Base+0x9d8>
   5d118:	mov	w7, w11
   5d11c:	mov	x2, x4
   5d120:	mov	x9, x13
   5d124:	mov	x12, x14
   5d128:	mov	x1, #0x0                   	// #0
   5d12c:	mov	x3, #0x0                   	// #0
   5d130:	b	5ce0c <mpfr_free_pool@@Base+0x5bc>
   5d134:	ands	x3, x15, #0xc00000
   5d138:	b.eq	5d1c4 <mpfr_free_pool@@Base+0x974>  // b.none
   5d13c:	cmp	x3, #0x400, lsl #12
   5d140:	eor	w0, w7, #0x1
   5d144:	cset	w1, eq  // eq = none
   5d148:	tst	w1, w0
   5d14c:	b.ne	5d3e8 <mpfr_free_pool@@Base+0xb98>  // b.any
   5d150:	cmp	x3, #0x800, lsl #12
   5d154:	b.eq	5d394 <mpfr_free_pool@@Base+0xb44>  // b.none
   5d158:	cmp	x3, #0x400, lsl #12
   5d15c:	mov	w0, #0x14                  	// #20
   5d160:	b.ne	5cc70 <mpfr_free_pool@@Base+0x420>  // b.any
   5d164:	mov	x2, #0xffffffffffffffff    	// #-1
   5d168:	mov	x1, #0x7ffe                	// #32766
   5d16c:	mov	x9, x2
   5d170:	mov	w5, #0x0                   	// #0
   5d174:	mov	w0, #0x14                  	// #20
   5d178:	cbnz	x12, 5cd34 <mpfr_free_pool@@Base+0x4e4>
   5d17c:	b	5cd2c <mpfr_free_pool@@Base+0x4dc>
   5d180:	mov	x9, x5
   5d184:	b	5c9cc <mpfr_free_pool@@Base+0x17c>
   5d188:	orr	x2, x2, x9
   5d18c:	cmp	x2, #0x0
   5d190:	cset	x9, ne  // ne = any
   5d194:	b	5cff0 <mpfr_free_pool@@Base+0x7a0>
   5d198:	mov	w1, #0x80                  	// #128
   5d19c:	sub	w1, w1, w0
   5d1a0:	subs	w0, w0, #0x40
   5d1a4:	lsl	x1, x2, x1
   5d1a8:	orr	x1, x9, x1
   5d1ac:	csel	x9, x1, x9, ne  // ne = any
   5d1b0:	lsr	x2, x2, x0
   5d1b4:	cmp	x9, #0x0
   5d1b8:	cset	x9, ne  // ne = any
   5d1bc:	orr	x9, x9, x2
   5d1c0:	b	5cf88 <mpfr_free_pool@@Base+0x738>
   5d1c4:	mov	w0, #0x14                  	// #20
   5d1c8:	b	5ccb4 <mpfr_free_pool@@Base+0x464>
   5d1cc:	lsr	x5, x4, #50
   5d1d0:	mov	w7, w11
   5d1d4:	eor	x5, x5, #0x1
   5d1d8:	mov	x9, x13
   5d1dc:	and	w5, w5, #0x1
   5d1e0:	mov	x2, x4
   5d1e4:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d1e8:	mov	x8, #0x7fff                	// #32767
   5d1ec:	cmp	x1, x8
   5d1f0:	b.eq	5d310 <mpfr_free_pool@@Base+0xac0>  // b.none
   5d1f4:	cmp	x3, x8
   5d1f8:	b.eq	5d384 <mpfr_free_pool@@Base+0xb34>  // b.none
   5d1fc:	cbnz	x0, 5d328 <mpfr_free_pool@@Base+0xad8>
   5d200:	mov	x2, x4
   5d204:	mov	x9, x13
   5d208:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d20c:	mov	x0, #0x7fff                	// #32767
   5d210:	cmp	x3, x0
   5d214:	b.eq	5d3c0 <mpfr_free_pool@@Base+0xb70>  // b.none
   5d218:	mov	x2, x4
   5d21c:	mov	x9, x13
   5d220:	mov	x1, x3
   5d224:	b	5cba8 <mpfr_free_pool@@Base+0x358>
   5d228:	and	x15, x15, #0xc00000
   5d22c:	mov	x2, #0x0                   	// #0
   5d230:	cmp	x15, #0x800, lsl #12
   5d234:	cset	w7, eq  // eq = none
   5d238:	b	5cbc8 <mpfr_free_pool@@Base+0x378>
   5d23c:	mov	x2, x4
   5d240:	mov	x9, x13
   5d244:	b	5ca34 <mpfr_free_pool@@Base+0x1e4>
   5d248:	mov	w0, #0x80                  	// #128
   5d24c:	sub	w0, w0, w5
   5d250:	subs	w5, w5, #0x40
   5d254:	lsl	x0, x2, x0
   5d258:	orr	x0, x9, x0
   5d25c:	csel	x9, x0, x9, ne  // ne = any
   5d260:	lsr	x2, x2, x5
   5d264:	cmp	x9, #0x0
   5d268:	cset	x9, ne  // ne = any
   5d26c:	orr	x9, x9, x2
   5d270:	b	5cff0 <mpfr_free_pool@@Base+0x7a0>
   5d274:	cmp	x13, x9
   5d278:	mov	w7, w11
   5d27c:	sbc	x2, x4, x2
   5d280:	sub	x9, x13, x9
   5d284:	mov	x1, x3
   5d288:	mov	x12, x5
   5d28c:	b	5c9c4 <mpfr_free_pool@@Base+0x174>
   5d290:	ands	x3, x15, #0xc00000
   5d294:	b.eq	5d1c4 <mpfr_free_pool@@Base+0x974>  // b.none
   5d298:	cmp	x3, #0x400, lsl #12
   5d29c:	eor	w0, w7, #0x1
   5d2a0:	csel	w0, w0, wzr, eq  // eq = none
   5d2a4:	cbnz	w0, 5d3e8 <mpfr_free_pool@@Base+0xb98>
   5d2a8:	cmp	x3, #0x800, lsl #12
   5d2ac:	b.ne	5d158 <mpfr_free_pool@@Base+0x908>  // b.any
   5d2b0:	cbz	x12, 5d398 <mpfr_free_pool@@Base+0xb48>
   5d2b4:	mov	w0, #0x14                  	// #20
   5d2b8:	mov	x16, #0x1                   	// #1
   5d2bc:	b	5ccb4 <mpfr_free_pool@@Base+0x464>
   5d2c0:	orr	x0, x4, x13
   5d2c4:	cbnz	x0, 5d1cc <mpfr_free_pool@@Base+0x97c>
   5d2c8:	mov	w7, w11
   5d2cc:	b	5cef0 <mpfr_free_pool@@Base+0x6a0>
   5d2d0:	cbz	x8, 5d3dc <mpfr_free_pool@@Base+0xb8c>
   5d2d4:	tst	x4, #0x4000000000000
   5d2d8:	csinc	w0, w0, wzr, ne  // ne = any
   5d2dc:	cbnz	x5, 5d0bc <mpfr_free_pool@@Base+0x86c>
   5d2e0:	mov	w7, w11
   5d2e4:	mov	x2, x4
   5d2e8:	mov	x9, x13
   5d2ec:	mov	w5, w0
   5d2f0:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d2f4:	orr	x8, x5, x3
   5d2f8:	cbz	x8, 5d228 <mpfr_free_pool@@Base+0x9d8>
   5d2fc:	and	x0, x5, #0x7
   5d300:	mov	x9, x5
   5d304:	mov	x2, x3
   5d308:	mov	w5, #0x1                   	// #1
   5d30c:	b	5ca44 <mpfr_free_pool@@Base+0x1f4>
   5d310:	cbz	x0, 5d37c <mpfr_free_pool@@Base+0xb2c>
   5d314:	lsr	x5, x2, #50
   5d318:	cmp	x3, x1
   5d31c:	eor	x5, x5, #0x1
   5d320:	and	w5, w5, #0x1
   5d324:	b.eq	5d3f4 <mpfr_free_pool@@Base+0xba4>  // b.none
   5d328:	orr	x13, x4, x13
   5d32c:	cbz	x13, 5cd80 <mpfr_free_pool@@Base+0x530>
   5d330:	bfi	x6, x2, #61, #3
   5d334:	lsr	x0, x2, #3
   5d338:	tbz	x2, #50, 5d354 <mpfr_free_pool@@Base+0xb04>
   5d33c:	lsr	x1, x4, #3
   5d340:	tbnz	x4, #50, 5d354 <mpfr_free_pool@@Base+0xb04>
   5d344:	and	x6, x10, #0x1fffffffffffffff
   5d348:	mov	w7, w11
   5d34c:	orr	x6, x6, x4, lsl #61
   5d350:	mov	x0, x1
   5d354:	extr	x2, x0, x6, #61
   5d358:	mov	w0, w5
   5d35c:	bfi	x6, x2, #61, #3
   5d360:	lsr	x2, x2, #3
   5d364:	mov	x8, x6
   5d368:	b	5cd9c <mpfr_free_pool@@Base+0x54c>
   5d36c:	adds	x9, x9, x13
   5d370:	mov	x1, x3
   5d374:	adc	x2, x4, x2
   5d378:	b	5cc38 <mpfr_free_pool@@Base+0x3e8>
   5d37c:	cmp	x3, x1
   5d380:	b.ne	5d200 <mpfr_free_pool@@Base+0x9b0>  // b.any
   5d384:	orr	x1, x4, x13
   5d388:	cbnz	x1, 5d3fc <mpfr_free_pool@@Base+0xbac>
   5d38c:	cbz	x0, 5cef0 <mpfr_free_pool@@Base+0x6a0>
   5d390:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d394:	cbnz	x16, 5d2b4 <mpfr_free_pool@@Base+0xa64>
   5d398:	mov	x2, #0xffffffffffffffff    	// #-1
   5d39c:	mov	w7, #0x0                   	// #0
   5d3a0:	mov	x9, x2
   5d3a4:	mov	x1, #0x7ffe                	// #32766
   5d3a8:	mov	w0, #0x14                  	// #20
   5d3ac:	b	5ca74 <mpfr_free_pool@@Base+0x224>
   5d3b0:	mov	w7, w11
   5d3b4:	mov	x2, x4
   5d3b8:	mov	x9, x13
   5d3bc:	b	5cd80 <mpfr_free_pool@@Base+0x530>
   5d3c0:	orr	x0, x4, x13
   5d3c4:	cbz	x0, 5cef0 <mpfr_free_pool@@Base+0x6a0>
   5d3c8:	b	5cd0c <mpfr_free_pool@@Base+0x4bc>
   5d3cc:	cmp	x3, x1
   5d3d0:	b.eq	5d2d0 <mpfr_free_pool@@Base+0xa80>  // b.none
   5d3d4:	mov	w5, #0x0                   	// #0
   5d3d8:	b	5d088 <mpfr_free_pool@@Base+0x838>
   5d3dc:	cbnz	x5, 5d2ec <mpfr_free_pool@@Base+0xa9c>
   5d3e0:	mov	w5, w0
   5d3e4:	b	5d088 <mpfr_free_pool@@Base+0x838>
   5d3e8:	mov	w0, #0x14                  	// #20
   5d3ec:	mov	x16, #0x0                   	// #0
   5d3f0:	b	5ccb4 <mpfr_free_pool@@Base+0x464>
   5d3f4:	orr	x1, x4, x13
   5d3f8:	cbz	x1, 5cd80 <mpfr_free_pool@@Base+0x530>
   5d3fc:	tst	x4, #0x4000000000000
   5d400:	csinc	w5, w5, wzr, ne  // ne = any
   5d404:	cbnz	x0, 5d330 <mpfr_free_pool@@Base+0xae0>
   5d408:	b	5d200 <mpfr_free_pool@@Base+0x9b0>
   5d40c:	mov	x8, #0x0                   	// #0
   5d410:	mov	w1, #0x7fff                	// #32767
   5d414:	mov	x2, #0x0                   	// #0
   5d418:	b	5ca90 <mpfr_free_pool@@Base+0x240>
   5d41c:	nop
   5d420:	stp	x29, x30, [sp, #-48]!
   5d424:	mov	x29, sp
   5d428:	str	q0, [sp, #16]
   5d42c:	str	q1, [sp, #32]
   5d430:	ldp	x6, x1, [sp, #16]
   5d434:	ldp	x7, x0, [sp, #32]
   5d438:	mrs	x2, fpcr
   5d43c:	ubfx	x4, x1, #48, #15
   5d440:	lsr	x2, x1, #63
   5d444:	lsr	x3, x0, #63
   5d448:	ubfx	x9, x0, #0, #48
   5d44c:	mov	x5, #0x7fff                	// #32767
   5d450:	mov	x10, x6
   5d454:	cmp	x4, x5
   5d458:	and	w2, w2, #0xff
   5d45c:	ubfx	x1, x1, #0, #48
   5d460:	and	w3, w3, #0xff
   5d464:	ubfx	x0, x0, #48, #15
   5d468:	b.eq	5d49c <mpfr_free_pool@@Base+0xc4c>  // b.none
   5d46c:	cmp	x0, x5
   5d470:	b.eq	5d488 <mpfr_free_pool@@Base+0xc38>  // b.none
   5d474:	cmp	x4, x0
   5d478:	mov	w0, #0x1                   	// #1
   5d47c:	b.eq	5d4b4 <mpfr_free_pool@@Base+0xc64>  // b.none
   5d480:	ldp	x29, x30, [sp], #48
   5d484:	ret
   5d488:	orr	x8, x9, x7
   5d48c:	cbnz	x8, 5d518 <mpfr_free_pool@@Base+0xcc8>
   5d490:	mov	w0, #0x1                   	// #1
   5d494:	ldp	x29, x30, [sp], #48
   5d498:	ret
   5d49c:	orr	x5, x1, x6
   5d4a0:	cbnz	x5, 5d4e8 <mpfr_free_pool@@Base+0xc98>
   5d4a4:	cmp	x0, x4
   5d4a8:	b.ne	5d490 <mpfr_free_pool@@Base+0xc40>  // b.any
   5d4ac:	orr	x8, x9, x7
   5d4b0:	cbnz	x8, 5d518 <mpfr_free_pool@@Base+0xcc8>
   5d4b4:	cmp	x1, x9
   5d4b8:	mov	w0, #0x1                   	// #1
   5d4bc:	ccmp	x6, x7, #0x0, eq  // eq = none
   5d4c0:	b.ne	5d480 <mpfr_free_pool@@Base+0xc30>  // b.any
   5d4c4:	cmp	w2, w3
   5d4c8:	mov	w0, #0x0                   	// #0
   5d4cc:	b.eq	5d480 <mpfr_free_pool@@Base+0xc30>  // b.none
   5d4d0:	mov	w0, #0x1                   	// #1
   5d4d4:	cbnz	x4, 5d480 <mpfr_free_pool@@Base+0xc30>
   5d4d8:	orr	x1, x1, x10
   5d4dc:	cmp	x1, #0x0
   5d4e0:	cset	w0, ne  // ne = any
   5d4e4:	b	5d480 <mpfr_free_pool@@Base+0xc30>
   5d4e8:	tst	x1, #0x800000000000
   5d4ec:	b.ne	5d504 <mpfr_free_pool@@Base+0xcb4>  // b.any
   5d4f0:	mov	w0, #0x1                   	// #1
   5d4f4:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5d4f8:	mov	w0, #0x1                   	// #1
   5d4fc:	ldp	x29, x30, [sp], #48
   5d500:	ret
   5d504:	cmp	x0, x4
   5d508:	mov	w0, #0x1                   	// #1
   5d50c:	b.ne	5d480 <mpfr_free_pool@@Base+0xc30>  // b.any
   5d510:	orr	x8, x9, x7
   5d514:	cbz	x8, 5d480 <mpfr_free_pool@@Base+0xc30>
   5d518:	tst	x9, #0x800000000000
   5d51c:	b.eq	5d4f0 <mpfr_free_pool@@Base+0xca0>  // b.none
   5d520:	b	5d490 <mpfr_free_pool@@Base+0xc40>
   5d524:	nop
   5d528:	stp	x29, x30, [sp, #-48]!
   5d52c:	mov	x29, sp
   5d530:	str	q0, [sp, #16]
   5d534:	str	q1, [sp, #32]
   5d538:	ldp	x8, x1, [sp, #16]
   5d53c:	ldp	x9, x0, [sp, #32]
   5d540:	mrs	x2, fpcr
   5d544:	ubfx	x4, x1, #48, #15
   5d548:	ubfx	x10, x1, #0, #48
   5d54c:	lsr	x2, x1, #63
   5d550:	mov	x7, #0x7fff                	// #32767
   5d554:	mov	x5, x8
   5d558:	cmp	x4, x7
   5d55c:	ubfx	x11, x0, #0, #48
   5d560:	ubfx	x6, x0, #48, #15
   5d564:	lsr	x1, x0, #63
   5d568:	mov	x3, x9
   5d56c:	b.eq	5d5a8 <mpfr_free_pool@@Base+0xd58>  // b.none
   5d570:	cmp	x6, x7
   5d574:	b.eq	5d5b8 <mpfr_free_pool@@Base+0xd68>  // b.none
   5d578:	cbnz	x4, 5d5e0 <mpfr_free_pool@@Base+0xd90>
   5d57c:	orr	x5, x10, x8
   5d580:	cmp	x5, #0x0
   5d584:	cset	w0, eq  // eq = none
   5d588:	cbnz	x6, 5d594 <mpfr_free_pool@@Base+0xd44>
   5d58c:	orr	x3, x11, x9
   5d590:	cbz	x3, 5d600 <mpfr_free_pool@@Base+0xdb0>
   5d594:	cbz	w0, 5d5c4 <mpfr_free_pool@@Base+0xd74>
   5d598:	cmp	x1, #0x0
   5d59c:	csinv	w0, w0, wzr, ne  // ne = any
   5d5a0:	ldp	x29, x30, [sp], #48
   5d5a4:	ret
   5d5a8:	orr	x0, x10, x8
   5d5ac:	cbnz	x0, 5d60c <mpfr_free_pool@@Base+0xdbc>
   5d5b0:	cmp	x6, x4
   5d5b4:	b.ne	5d5e0 <mpfr_free_pool@@Base+0xd90>  // b.any
   5d5b8:	orr	x3, x11, x3
   5d5bc:	cbnz	x3, 5d60c <mpfr_free_pool@@Base+0xdbc>
   5d5c0:	cbz	x4, 5d5f0 <mpfr_free_pool@@Base+0xda0>
   5d5c4:	cmp	x2, x1
   5d5c8:	b.eq	5d620 <mpfr_free_pool@@Base+0xdd0>  // b.none
   5d5cc:	cmp	x2, #0x0
   5d5d0:	mov	w0, #0xffffffff            	// #-1
   5d5d4:	cneg	w0, w0, eq  // eq = none
   5d5d8:	ldp	x29, x30, [sp], #48
   5d5dc:	ret
   5d5e0:	cbnz	x6, 5d5c4 <mpfr_free_pool@@Base+0xd74>
   5d5e4:	orr	x3, x11, x3
   5d5e8:	cbnz	x3, 5d5c4 <mpfr_free_pool@@Base+0xd74>
   5d5ec:	b	5d5cc <mpfr_free_pool@@Base+0xd7c>
   5d5f0:	orr	x5, x10, x5
   5d5f4:	cmp	x5, #0x0
   5d5f8:	cset	w0, eq  // eq = none
   5d5fc:	b	5d594 <mpfr_free_pool@@Base+0xd44>
   5d600:	mov	w0, #0x0                   	// #0
   5d604:	cbz	x5, 5d5a0 <mpfr_free_pool@@Base+0xd50>
   5d608:	b	5d5cc <mpfr_free_pool@@Base+0xd7c>
   5d60c:	mov	w0, #0x1                   	// #1
   5d610:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5d614:	mov	w0, #0xfffffffe            	// #-2
   5d618:	ldp	x29, x30, [sp], #48
   5d61c:	ret
   5d620:	cmp	x4, x6
   5d624:	b.gt	5d5cc <mpfr_free_pool@@Base+0xd7c>
   5d628:	b.lt	5d660 <mpfr_free_pool@@Base+0xe10>  // b.tstop
   5d62c:	cmp	x10, x11
   5d630:	b.hi	5d5cc <mpfr_free_pool@@Base+0xd7c>  // b.pmore
   5d634:	cset	w0, eq  // eq = none
   5d638:	cmp	w0, #0x0
   5d63c:	ccmp	x8, x9, #0x0, ne  // ne = any
   5d640:	b.hi	5d5cc <mpfr_free_pool@@Base+0xd7c>  // b.pmore
   5d644:	cmp	x10, x11
   5d648:	b.cc	5d660 <mpfr_free_pool@@Base+0xe10>  // b.lo, b.ul, b.last
   5d64c:	cmp	w0, #0x0
   5d650:	mov	w0, #0x0                   	// #0
   5d654:	ccmp	x8, x9, #0x2, ne  // ne = any
   5d658:	b.cs	5d5a0 <mpfr_free_pool@@Base+0xd50>  // b.hs, b.nlast
   5d65c:	nop
   5d660:	cmp	x2, #0x0
   5d664:	mov	w0, #0x1                   	// #1
   5d668:	cneg	w0, w0, eq  // eq = none
   5d66c:	b	5d5a0 <mpfr_free_pool@@Base+0xd50>
   5d670:	stp	x29, x30, [sp, #-48]!
   5d674:	mov	x29, sp
   5d678:	str	q0, [sp, #16]
   5d67c:	str	q1, [sp, #32]
   5d680:	ldp	x8, x1, [sp, #16]
   5d684:	ldp	x9, x0, [sp, #32]
   5d688:	mrs	x2, fpcr
   5d68c:	ubfx	x4, x1, #48, #15
   5d690:	ubfx	x10, x1, #0, #48
   5d694:	lsr	x2, x1, #63
   5d698:	mov	x5, #0x7fff                	// #32767
   5d69c:	mov	x6, x8
   5d6a0:	cmp	x4, x5
   5d6a4:	ubfx	x11, x0, #0, #48
   5d6a8:	ubfx	x7, x0, #48, #15
   5d6ac:	lsr	x1, x0, #63
   5d6b0:	mov	x3, x9
   5d6b4:	b.eq	5d6ec <mpfr_free_pool@@Base+0xe9c>  // b.none
   5d6b8:	cmp	x7, x5
   5d6bc:	b.eq	5d6fc <mpfr_free_pool@@Base+0xeac>  // b.none
   5d6c0:	cbnz	x4, 5d728 <mpfr_free_pool@@Base+0xed8>
   5d6c4:	orr	x6, x10, x8
   5d6c8:	cmp	x6, #0x0
   5d6cc:	cset	w0, eq  // eq = none
   5d6d0:	cbnz	x7, 5d714 <mpfr_free_pool@@Base+0xec4>
   5d6d4:	orr	x3, x11, x9
   5d6d8:	cbnz	x3, 5d714 <mpfr_free_pool@@Base+0xec4>
   5d6dc:	mov	w0, #0x0                   	// #0
   5d6e0:	cbnz	x6, 5d73c <mpfr_free_pool@@Base+0xeec>
   5d6e4:	ldp	x29, x30, [sp], #48
   5d6e8:	ret
   5d6ec:	orr	x0, x10, x8
   5d6f0:	cbnz	x0, 5d750 <mpfr_free_pool@@Base+0xf00>
   5d6f4:	cmp	x7, x4
   5d6f8:	b.ne	5d728 <mpfr_free_pool@@Base+0xed8>  // b.any
   5d6fc:	orr	x3, x11, x3
   5d700:	cbnz	x3, 5d750 <mpfr_free_pool@@Base+0xf00>
   5d704:	cbnz	x4, 5d734 <mpfr_free_pool@@Base+0xee4>
   5d708:	orr	x6, x10, x6
   5d70c:	cmp	x6, #0x0
   5d710:	cset	w0, eq  // eq = none
   5d714:	cbz	w0, 5d734 <mpfr_free_pool@@Base+0xee4>
   5d718:	cmp	x1, #0x0
   5d71c:	csinv	w0, w0, wzr, ne  // ne = any
   5d720:	ldp	x29, x30, [sp], #48
   5d724:	ret
   5d728:	cbnz	x7, 5d734 <mpfr_free_pool@@Base+0xee4>
   5d72c:	orr	x3, x11, x3
   5d730:	cbz	x3, 5d73c <mpfr_free_pool@@Base+0xeec>
   5d734:	cmp	x2, x1
   5d738:	b.eq	5d764 <mpfr_free_pool@@Base+0xf14>  // b.none
   5d73c:	cmp	x2, #0x0
   5d740:	mov	w0, #0xffffffff            	// #-1
   5d744:	cneg	w0, w0, eq  // eq = none
   5d748:	ldp	x29, x30, [sp], #48
   5d74c:	ret
   5d750:	mov	w0, #0x1                   	// #1
   5d754:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5d758:	mov	w0, #0x2                   	// #2
   5d75c:	ldp	x29, x30, [sp], #48
   5d760:	ret
   5d764:	cmp	x4, x7
   5d768:	b.gt	5d73c <mpfr_free_pool@@Base+0xeec>
   5d76c:	b.lt	5d7a0 <mpfr_free_pool@@Base+0xf50>  // b.tstop
   5d770:	cmp	x10, x11
   5d774:	b.hi	5d73c <mpfr_free_pool@@Base+0xeec>  // b.pmore
   5d778:	cset	w0, eq  // eq = none
   5d77c:	cmp	w0, #0x0
   5d780:	ccmp	x8, x9, #0x0, ne  // ne = any
   5d784:	b.hi	5d73c <mpfr_free_pool@@Base+0xeec>  // b.pmore
   5d788:	cmp	x10, x11
   5d78c:	b.cc	5d7a0 <mpfr_free_pool@@Base+0xf50>  // b.lo, b.ul, b.last
   5d790:	cmp	w0, #0x0
   5d794:	mov	w0, #0x0                   	// #0
   5d798:	ccmp	x8, x9, #0x2, ne  // ne = any
   5d79c:	b.cs	5d6e4 <mpfr_free_pool@@Base+0xe94>  // b.hs, b.nlast
   5d7a0:	cmp	x2, #0x0
   5d7a4:	mov	w0, #0x1                   	// #1
   5d7a8:	cneg	w0, w0, eq  // eq = none
   5d7ac:	b	5d6e4 <mpfr_free_pool@@Base+0xe94>
   5d7b0:	stp	x29, x30, [sp, #-80]!
   5d7b4:	mov	x29, sp
   5d7b8:	str	q0, [sp, #48]
   5d7bc:	str	q1, [sp, #64]
   5d7c0:	ldp	x1, x0, [sp, #48]
   5d7c4:	ldp	x6, x2, [sp, #64]
   5d7c8:	mrs	x11, fpcr
   5d7cc:	lsr	x3, x0, #63
   5d7d0:	ubfx	x7, x0, #0, #48
   5d7d4:	and	w12, w3, #0xff
   5d7d8:	mov	x14, x3
   5d7dc:	ubfx	x3, x0, #48, #15
   5d7e0:	cbz	w3, 5db88 <mpfr_free_pool@@Base+0x1338>
   5d7e4:	mov	w4, #0x7fff                	// #32767
   5d7e8:	cmp	w3, w4
   5d7ec:	b.eq	5dc2c <mpfr_free_pool@@Base+0x13dc>  // b.none
   5d7f0:	and	x3, x3, #0xffff
   5d7f4:	extr	x4, x7, x1, #61
   5d7f8:	mov	x18, #0xffffffffffffc001    	// #-16383
   5d7fc:	orr	x7, x4, #0x8000000000000
   5d800:	add	x3, x3, x18
   5d804:	lsl	x5, x1, #3
   5d808:	mov	x16, #0x0                   	// #0
   5d80c:	mov	x1, #0x0                   	// #0
   5d810:	mov	w0, #0x0                   	// #0
   5d814:	lsr	x8, x2, #63
   5d818:	ubfx	x4, x2, #0, #48
   5d81c:	and	w15, w8, #0xff
   5d820:	mov	x13, x8
   5d824:	ubfx	x9, x2, #48, #15
   5d828:	cbz	w9, 5dbe8 <mpfr_free_pool@@Base+0x1398>
   5d82c:	mov	w8, #0x7fff                	// #32767
   5d830:	cmp	w9, w8
   5d834:	b.eq	5d8b8 <mpfr_free_pool@@Base+0x1068>  // b.none
   5d838:	and	x9, x9, #0xffff
   5d83c:	mov	x17, #0xffffffffffffc001    	// #-16383
   5d840:	add	x9, x9, x17
   5d844:	extr	x2, x4, x6, #61
   5d848:	add	x9, x9, x3
   5d84c:	lsl	x6, x6, #3
   5d850:	orr	x4, x2, #0x8000000000000
   5d854:	mov	x2, #0x0                   	// #0
   5d858:	eor	w8, w12, w15
   5d85c:	cmp	x1, #0xa
   5d860:	and	w10, w8, #0xff
   5d864:	add	x3, x9, #0x1
   5d868:	and	x8, x8, #0xff
   5d86c:	b.le	5d8f0 <mpfr_free_pool@@Base+0x10a0>
   5d870:	cmp	x1, #0xb
   5d874:	b.eq	5df88 <mpfr_free_pool@@Base+0x1738>  // b.none
   5d878:	mov	w15, w12
   5d87c:	mov	x13, x14
   5d880:	mov	w10, w15
   5d884:	cmp	x16, #0x2
   5d888:	b.eq	5dc4c <mpfr_free_pool@@Base+0x13fc>  // b.none
   5d88c:	mov	x4, x7
   5d890:	mov	x6, x5
   5d894:	mov	x2, x16
   5d898:	mov	x8, x13
   5d89c:	cmp	x2, #0x3
   5d8a0:	b.ne	5d90c <mpfr_free_pool@@Base+0x10bc>  // b.any
   5d8a4:	orr	x4, x4, #0x800000000000
   5d8a8:	mov	x5, x6
   5d8ac:	and	x4, x4, #0xffffffffffff
   5d8b0:	mov	w1, #0x7fff                	// #32767
   5d8b4:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5d8b8:	mov	x8, #0x7fff                	// #32767
   5d8bc:	orr	x2, x4, x6
   5d8c0:	add	x9, x3, x8
   5d8c4:	cbnz	x2, 5d944 <mpfr_free_pool@@Base+0x10f4>
   5d8c8:	eor	w8, w12, w15
   5d8cc:	orr	x1, x1, #0x2
   5d8d0:	and	w10, w8, #0xff
   5d8d4:	cmp	x1, #0xa
   5d8d8:	add	x3, x3, #0x8, lsl #12
   5d8dc:	and	x8, x8, #0xff
   5d8e0:	mov	x6, #0x0                   	// #0
   5d8e4:	b.gt	5defc <mpfr_free_pool@@Base+0x16ac>
   5d8e8:	mov	x4, #0x0                   	// #0
   5d8ec:	mov	x2, #0x2                   	// #2
   5d8f0:	cmp	x1, #0x2
   5d8f4:	b.gt	5d96c <mpfr_free_pool@@Base+0x111c>
   5d8f8:	sub	x1, x1, #0x1
   5d8fc:	cmp	x1, #0x1
   5d900:	b.hi	5d9a8 <mpfr_free_pool@@Base+0x1158>  // b.pmore
   5d904:	cmp	x2, #0x2
   5d908:	b.eq	5dc4c <mpfr_free_pool@@Base+0x13fc>  // b.none
   5d90c:	cmp	x2, #0x1
   5d910:	b.ne	5db08 <mpfr_free_pool@@Base+0x12b8>  // b.any
   5d914:	mov	w1, #0x0                   	// #0
   5d918:	mov	x4, #0x0                   	// #0
   5d91c:	mov	x5, #0x0                   	// #0
   5d920:	mov	x3, #0x0                   	// #0
   5d924:	orr	w1, w1, w10, lsl #15
   5d928:	bfxil	x3, x4, #0, #48
   5d92c:	fmov	d0, x5
   5d930:	bfi	x3, x1, #48, #16
   5d934:	fmov	v0.d[1], x3
   5d938:	cbnz	w0, 5dd78 <mpfr_free_pool@@Base+0x1528>
   5d93c:	ldp	x29, x30, [sp], #80
   5d940:	ret
   5d944:	tst	x4, #0x800000000000
   5d948:	eor	w8, w12, w15
   5d94c:	orr	x1, x1, #0x3
   5d950:	csinc	w0, w0, wzr, ne  // ne = any
   5d954:	and	w10, w8, #0xff
   5d958:	add	x3, x3, #0x8, lsl #12
   5d95c:	cmp	x1, #0xa
   5d960:	and	x8, x8, #0xff
   5d964:	mov	x2, #0x3                   	// #3
   5d968:	b.gt	5df7c <mpfr_free_pool@@Base+0x172c>
   5d96c:	mov	x12, #0x1                   	// #1
   5d970:	mov	x14, #0x530                 	// #1328
   5d974:	lsl	x1, x12, x1
   5d978:	tst	x1, x14
   5d97c:	b.ne	5db7c <mpfr_free_pool@@Base+0x132c>  // b.any
   5d980:	mov	x14, #0x240                 	// #576
   5d984:	tst	x1, x14
   5d988:	b.ne	5db64 <mpfr_free_pool@@Base+0x1314>  // b.any
   5d98c:	mov	x12, #0x88                  	// #136
   5d990:	tst	x1, x12
   5d994:	b.eq	5d9a8 <mpfr_free_pool@@Base+0x1158>  // b.none
   5d998:	mov	x7, x4
   5d99c:	mov	x5, x6
   5d9a0:	mov	x16, x2
   5d9a4:	b	5d880 <mpfr_free_pool@@Base+0x1030>
   5d9a8:	lsr	x13, x5, #32
   5d9ac:	and	x12, x6, #0xffffffff
   5d9b0:	and	x15, x5, #0xffffffff
   5d9b4:	lsr	x6, x6, #32
   5d9b8:	and	x18, x4, #0xffffffff
   5d9bc:	lsr	x2, x4, #32
   5d9c0:	mul	x4, x13, x12
   5d9c4:	stp	x21, x22, [sp, #32]
   5d9c8:	lsr	x22, x7, #32
   5d9cc:	and	x5, x7, #0xffffffff
   5d9d0:	mul	x16, x12, x15
   5d9d4:	madd	x7, x6, x15, x4
   5d9d8:	stp	x19, x20, [sp, #16]
   5d9dc:	mul	x1, x13, x18
   5d9e0:	mul	x17, x15, x18
   5d9e4:	and	x30, x16, #0xffffffff
   5d9e8:	madd	x15, x2, x15, x1
   5d9ec:	add	x16, x7, x16, lsr #32
   5d9f0:	mul	x21, x22, x12
   5d9f4:	cmp	x4, x16
   5d9f8:	mul	x20, x22, x18
   5d9fc:	mov	x14, #0x100000000           	// #4294967296
   5da00:	mul	x19, x13, x6
   5da04:	add	x15, x15, x17, lsr #32
   5da08:	mul	x12, x12, x5
   5da0c:	and	x17, x17, #0xffffffff
   5da10:	mul	x18, x5, x18
   5da14:	add	x4, x19, x14
   5da18:	madd	x7, x6, x5, x21
   5da1c:	csel	x19, x4, x19, hi  // hi = pmore
   5da20:	madd	x5, x2, x5, x20
   5da24:	cmp	x1, x15
   5da28:	mul	x13, x13, x2
   5da2c:	add	x17, x17, x15, lsl #32
   5da30:	mul	x6, x6, x22
   5da34:	add	x7, x7, x12, lsr #32
   5da38:	add	x5, x5, x18, lsr #32
   5da3c:	add	x4, x13, x14
   5da40:	mul	x2, x2, x22
   5da44:	csel	x13, x4, x13, hi  // hi = pmore
   5da48:	and	x1, x18, #0xffffffff
   5da4c:	cmp	x21, x7
   5da50:	add	x4, x6, x14
   5da54:	add	x30, x30, x16, lsl #32
   5da58:	csel	x6, x4, x6, hi  // hi = pmore
   5da5c:	add	x13, x13, x15, lsr #32
   5da60:	cmp	x20, x5
   5da64:	add	x1, x1, x5, lsl #32
   5da68:	add	x16, x17, x16, lsr #32
   5da6c:	add	x14, x2, x14
   5da70:	csel	x2, x14, x2, hi  // hi = pmore
   5da74:	add	x16, x19, x16
   5da78:	adds	x1, x1, x13
   5da7c:	and	x12, x12, #0xffffffff
   5da80:	cset	x13, cs  // cs = hs, nlast
   5da84:	cmp	x16, x17
   5da88:	cset	x4, cc  // cc = lo, ul, last
   5da8c:	add	x12, x12, x7, lsl #32
   5da90:	adds	x1, x1, x4
   5da94:	lsr	x5, x5, #32
   5da98:	cset	x4, cs  // cs = hs, nlast
   5da9c:	cmp	x13, #0x0
   5daa0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   5daa4:	add	x7, x6, x7, lsr #32
   5daa8:	cinc	x5, x5, ne  // ne = any
   5daac:	adds	x6, x16, x12
   5dab0:	cset	x4, cs  // cs = hs, nlast
   5dab4:	adds	x1, x1, x7
   5dab8:	cset	x7, cs  // cs = hs, nlast
   5dabc:	adds	x4, x1, x4
   5dac0:	cset	x1, cs  // cs = hs, nlast
   5dac4:	cmp	x7, #0x0
   5dac8:	orr	x30, x30, x6, lsl #13
   5dacc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   5dad0:	cinc	x1, x2, ne  // ne = any
   5dad4:	cmp	x30, #0x0
   5dad8:	add	x1, x1, x5
   5dadc:	cset	x2, ne  // ne = any
   5dae0:	orr	x6, x2, x6, lsr #51
   5dae4:	orr	x6, x6, x4, lsl #13
   5dae8:	extr	x4, x1, x4, #51
   5daec:	tbz	x1, #39, 5de00 <mpfr_free_pool@@Base+0x15b0>
   5daf0:	ldp	x19, x20, [sp, #16]
   5daf4:	and	x1, x6, #0x1
   5daf8:	ldp	x21, x22, [sp, #32]
   5dafc:	orr	x6, x1, x6, lsr #1
   5db00:	orr	x6, x6, x4, lsl #63
   5db04:	lsr	x4, x4, #1
   5db08:	mov	x1, #0x3fff                	// #16383
   5db0c:	add	x2, x3, x1
   5db10:	cmp	x2, #0x0
   5db14:	b.le	5dcac <mpfr_free_pool@@Base+0x145c>
   5db18:	tst	x6, #0x7
   5db1c:	b.eq	5db3c <mpfr_free_pool@@Base+0x12ec>  // b.none
   5db20:	and	x1, x11, #0xc00000
   5db24:	orr	w0, w0, #0x10
   5db28:	cmp	x1, #0x400, lsl #12
   5db2c:	b.eq	5def4 <mpfr_free_pool@@Base+0x16a4>  // b.none
   5db30:	cmp	x1, #0x800, lsl #12
   5db34:	b.eq	5de9c <mpfr_free_pool@@Base+0x164c>  // b.none
   5db38:	cbz	x1, 5de84 <mpfr_free_pool@@Base+0x1634>
   5db3c:	tbz	x4, #52, 5db48 <mpfr_free_pool@@Base+0x12f8>
   5db40:	and	x4, x4, #0xffefffffffffffff
   5db44:	add	x2, x3, #0x4, lsl #12
   5db48:	mov	x1, #0x7ffe                	// #32766
   5db4c:	cmp	x2, x1
   5db50:	b.gt	5ddd4 <mpfr_free_pool@@Base+0x1584>
   5db54:	and	w1, w2, #0x7fff
   5db58:	extr	x5, x4, x6, #3
   5db5c:	ubfx	x4, x4, #3, #48
   5db60:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5db64:	mov	w0, w12
   5db68:	mov	w10, #0x0                   	// #0
   5db6c:	mov	x4, #0xffffffffffff        	// #281474976710655
   5db70:	mov	x5, #0xffffffffffffffff    	// #-1
   5db74:	mov	w1, #0x7fff                	// #32767
   5db78:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5db7c:	mov	w15, w10
   5db80:	mov	x13, x8
   5db84:	b	5d880 <mpfr_free_pool@@Base+0x1030>
   5db88:	orr	x5, x7, x1
   5db8c:	cbz	x5, 5dc94 <mpfr_free_pool@@Base+0x1444>
   5db90:	cbz	x7, 5ddb0 <mpfr_free_pool@@Base+0x1560>
   5db94:	clz	x0, x7
   5db98:	sub	x4, x0, #0xf
   5db9c:	add	w5, w4, #0x3
   5dba0:	mov	w3, #0x3d                  	// #61
   5dba4:	sub	w3, w3, w4
   5dba8:	lsl	x4, x7, x5
   5dbac:	lsr	x3, x1, x3
   5dbb0:	orr	x7, x3, x4
   5dbb4:	lsl	x5, x1, x5
   5dbb8:	lsr	x8, x2, #63
   5dbbc:	mov	x3, #0xffffffffffffc011    	// #-16367
   5dbc0:	ubfx	x4, x2, #0, #48
   5dbc4:	sub	x3, x3, x0
   5dbc8:	and	w15, w8, #0xff
   5dbcc:	mov	x13, x8
   5dbd0:	ubfx	x9, x2, #48, #15
   5dbd4:	mov	x1, #0x0                   	// #0
   5dbd8:	mov	x16, #0x0                   	// #0
   5dbdc:	mov	w0, #0x0                   	// #0
   5dbe0:	cbnz	w9, 5d82c <mpfr_free_pool@@Base+0xfdc>
   5dbe4:	nop
   5dbe8:	orr	x2, x4, x6
   5dbec:	cbz	x2, 5dc5c <mpfr_free_pool@@Base+0x140c>
   5dbf0:	cbz	x4, 5dd8c <mpfr_free_pool@@Base+0x153c>
   5dbf4:	clz	x9, x4
   5dbf8:	sub	x2, x9, #0xf
   5dbfc:	add	w10, w2, #0x3
   5dc00:	mov	w8, #0x3d                  	// #61
   5dc04:	sub	w8, w8, w2
   5dc08:	lsl	x2, x4, x10
   5dc0c:	lsr	x8, x6, x8
   5dc10:	orr	x4, x8, x2
   5dc14:	lsl	x6, x6, x10
   5dc18:	sub	x9, x3, x9
   5dc1c:	mov	x10, #0xffffffffffffc011    	// #-16367
   5dc20:	mov	x2, #0x0                   	// #0
   5dc24:	add	x9, x9, x10
   5dc28:	b	5d858 <mpfr_free_pool@@Base+0x1008>
   5dc2c:	orr	x5, x7, x1
   5dc30:	cbnz	x5, 5dc74 <mpfr_free_pool@@Base+0x1424>
   5dc34:	mov	x7, #0x0                   	// #0
   5dc38:	mov	x1, #0x8                   	// #8
   5dc3c:	mov	x3, #0x7fff                	// #32767
   5dc40:	mov	x16, #0x2                   	// #2
   5dc44:	mov	w0, #0x0                   	// #0
   5dc48:	b	5d814 <mpfr_free_pool@@Base+0xfc4>
   5dc4c:	mov	w1, #0x7fff                	// #32767
   5dc50:	mov	x4, #0x0                   	// #0
   5dc54:	mov	x5, #0x0                   	// #0
   5dc58:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5dc5c:	orr	x1, x1, #0x1
   5dc60:	mov	x9, x3
   5dc64:	mov	x4, #0x0                   	// #0
   5dc68:	mov	x6, #0x0                   	// #0
   5dc6c:	mov	x2, #0x1                   	// #1
   5dc70:	b	5d858 <mpfr_free_pool@@Base+0x1008>
   5dc74:	lsr	x0, x7, #47
   5dc78:	mov	x5, x1
   5dc7c:	eor	x0, x0, #0x1
   5dc80:	mov	x1, #0xc                   	// #12
   5dc84:	and	w0, w0, #0x1
   5dc88:	mov	x3, #0x7fff                	// #32767
   5dc8c:	mov	x16, #0x3                   	// #3
   5dc90:	b	5d814 <mpfr_free_pool@@Base+0xfc4>
   5dc94:	mov	x7, #0x0                   	// #0
   5dc98:	mov	x1, #0x4                   	// #4
   5dc9c:	mov	x3, #0x0                   	// #0
   5dca0:	mov	x16, #0x1                   	// #1
   5dca4:	mov	w0, #0x0                   	// #0
   5dca8:	b	5d814 <mpfr_free_pool@@Base+0xfc4>
   5dcac:	mov	x1, #0x1                   	// #1
   5dcb0:	sub	x2, x1, x2
   5dcb4:	cmp	x2, #0x74
   5dcb8:	b.gt	5dd30 <mpfr_free_pool@@Base+0x14e0>
   5dcbc:	cmp	x2, #0x3f
   5dcc0:	b.le	5de10 <mpfr_free_pool@@Base+0x15c0>
   5dcc4:	mov	w1, #0x80                  	// #128
   5dcc8:	sub	w1, w1, w2
   5dccc:	cmp	x2, #0x40
   5dcd0:	sub	w2, w2, #0x40
   5dcd4:	lsl	x1, x4, x1
   5dcd8:	orr	x1, x6, x1
   5dcdc:	csel	x6, x1, x6, ne  // ne = any
   5dce0:	lsr	x2, x4, x2
   5dce4:	cmp	x6, #0x0
   5dce8:	cset	x5, ne  // ne = any
   5dcec:	orr	x5, x5, x2
   5dcf0:	ands	x2, x5, #0x7
   5dcf4:	b.eq	5de44 <mpfr_free_pool@@Base+0x15f4>  // b.none
   5dcf8:	mov	x2, #0x0                   	// #0
   5dcfc:	and	x11, x11, #0xc00000
   5dd00:	orr	w0, w0, #0x10
   5dd04:	cmp	x11, #0x400, lsl #12
   5dd08:	b.eq	5df54 <mpfr_free_pool@@Base+0x1704>  // b.none
   5dd0c:	cmp	x11, #0x800, lsl #12
   5dd10:	b.eq	5df68 <mpfr_free_pool@@Base+0x1718>  // b.none
   5dd14:	cbz	x11, 5deac <mpfr_free_pool@@Base+0x165c>
   5dd18:	tbnz	x2, #51, 5dec4 <mpfr_free_pool@@Base+0x1674>
   5dd1c:	ubfx	x4, x2, #3, #48
   5dd20:	extr	x5, x2, x5, #3
   5dd24:	orr	w0, w0, #0x8
   5dd28:	mov	w1, #0x0                   	// #0
   5dd2c:	b	5dd60 <mpfr_free_pool@@Base+0x1510>
   5dd30:	orr	x5, x6, x4
   5dd34:	cbz	x5, 5dd54 <mpfr_free_pool@@Base+0x1504>
   5dd38:	and	x11, x11, #0xc00000
   5dd3c:	orr	w0, w0, #0x10
   5dd40:	cmp	x11, #0x400, lsl #12
   5dd44:	sub	x5, x1, x8
   5dd48:	b.eq	5dd54 <mpfr_free_pool@@Base+0x1504>  // b.none
   5dd4c:	cmp	x11, #0x800, lsl #12
   5dd50:	csel	x5, x8, xzr, eq  // eq = none
   5dd54:	orr	w0, w0, #0x8
   5dd58:	mov	w1, #0x0                   	// #0
   5dd5c:	mov	x4, #0x0                   	// #0
   5dd60:	mov	x3, #0x0                   	// #0
   5dd64:	fmov	d0, x5
   5dd68:	bfxil	x3, x4, #0, #48
   5dd6c:	bfi	x3, x1, #48, #15
   5dd70:	bfi	x3, x10, #63, #1
   5dd74:	fmov	v0.d[1], x3
   5dd78:	str	q0, [sp, #48]
   5dd7c:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5dd80:	ldr	q0, [sp, #48]
   5dd84:	ldp	x29, x30, [sp], #80
   5dd88:	ret
   5dd8c:	clz	x9, x6
   5dd90:	add	x2, x9, #0x31
   5dd94:	add	x9, x9, #0x40
   5dd98:	cmp	x2, #0x3c
   5dd9c:	b.le	5dbfc <mpfr_free_pool@@Base+0x13ac>
   5dda0:	sub	w2, w2, #0x3d
   5dda4:	lsl	x4, x6, x2
   5dda8:	mov	x6, #0x0                   	// #0
   5ddac:	b	5dc18 <mpfr_free_pool@@Base+0x13c8>
   5ddb0:	clz	x3, x1
   5ddb4:	add	x4, x3, #0x31
   5ddb8:	add	x0, x3, #0x40
   5ddbc:	cmp	x4, #0x3c
   5ddc0:	b.le	5db9c <mpfr_free_pool@@Base+0x134c>
   5ddc4:	sub	w4, w4, #0x3d
   5ddc8:	mov	x5, #0x0                   	// #0
   5ddcc:	lsl	x7, x1, x4
   5ddd0:	b	5dbb8 <mpfr_free_pool@@Base+0x1368>
   5ddd4:	and	x5, x11, #0xc00000
   5ddd8:	cmp	x5, #0x400, lsl #12
   5dddc:	b.eq	5ded8 <mpfr_free_pool@@Base+0x1688>  // b.none
   5dde0:	cmp	x5, #0x800, lsl #12
   5dde4:	b.eq	5de68 <mpfr_free_pool@@Base+0x1618>  // b.none
   5dde8:	cbz	x5, 5de5c <mpfr_free_pool@@Base+0x160c>
   5ddec:	mov	x4, #0xffffffffffff        	// #281474976710655
   5ddf0:	mov	x5, #0xffffffffffffffff    	// #-1
   5ddf4:	mov	w2, #0x14                  	// #20
   5ddf8:	orr	w0, w0, w2
   5ddfc:	b	5dd60 <mpfr_free_pool@@Base+0x1510>
   5de00:	mov	x3, x9
   5de04:	ldp	x19, x20, [sp, #16]
   5de08:	ldp	x21, x22, [sp, #32]
   5de0c:	b	5db08 <mpfr_free_pool@@Base+0x12b8>
   5de10:	mov	w1, #0x40                  	// #64
   5de14:	sub	w1, w1, w2
   5de18:	lsr	x3, x6, x2
   5de1c:	lsl	x6, x6, x1
   5de20:	cmp	x6, #0x0
   5de24:	lsl	x5, x4, x1
   5de28:	cset	x1, ne  // ne = any
   5de2c:	orr	x5, x5, x3
   5de30:	lsr	x2, x4, x2
   5de34:	orr	x5, x5, x1
   5de38:	tst	x5, #0x7
   5de3c:	b.ne	5dcfc <mpfr_free_pool@@Base+0x14ac>  // b.any
   5de40:	tbnz	x2, #51, 5df74 <mpfr_free_pool@@Base+0x1724>
   5de44:	ubfx	x4, x2, #3, #48
   5de48:	extr	x5, x2, x5, #3
   5de4c:	mov	w1, #0x0                   	// #0
   5de50:	tbz	w11, #11, 5d920 <mpfr_free_pool@@Base+0x10d0>
   5de54:	orr	w0, w0, #0x8
   5de58:	b	5dd60 <mpfr_free_pool@@Base+0x1510>
   5de5c:	mov	w1, #0x7fff                	// #32767
   5de60:	mov	x4, #0x0                   	// #0
   5de64:	b	5ddf4 <mpfr_free_pool@@Base+0x15a4>
   5de68:	cmp	x8, #0x0
   5de6c:	mov	w2, #0x7fff                	// #32767
   5de70:	mov	x4, #0xffffffffffff        	// #281474976710655
   5de74:	csel	w1, w1, w2, eq  // eq = none
   5de78:	csel	x4, x4, xzr, eq  // eq = none
   5de7c:	csetm	x5, eq  // eq = none
   5de80:	b	5ddf4 <mpfr_free_pool@@Base+0x15a4>
   5de84:	and	x1, x6, #0xf
   5de88:	cmp	x1, #0x4
   5de8c:	b.eq	5db3c <mpfr_free_pool@@Base+0x12ec>  // b.none
   5de90:	adds	x6, x6, #0x4
   5de94:	cinc	x4, x4, cs  // cs = hs, nlast
   5de98:	b	5db3c <mpfr_free_pool@@Base+0x12ec>
   5de9c:	cbz	x8, 5db3c <mpfr_free_pool@@Base+0x12ec>
   5dea0:	adds	x6, x6, #0x8
   5dea4:	cinc	x4, x4, cs  // cs = hs, nlast
   5dea8:	b	5db3c <mpfr_free_pool@@Base+0x12ec>
   5deac:	and	x1, x5, #0xf
   5deb0:	cmp	x1, #0x4
   5deb4:	b.eq	5dec0 <mpfr_free_pool@@Base+0x1670>  // b.none
   5deb8:	adds	x5, x5, #0x4
   5debc:	cinc	x2, x2, cs  // cs = hs, nlast
   5dec0:	tbz	x2, #51, 5dd1c <mpfr_free_pool@@Base+0x14cc>
   5dec4:	orr	w0, w0, #0x8
   5dec8:	mov	w1, #0x1                   	// #1
   5decc:	mov	x4, #0x0                   	// #0
   5ded0:	mov	x5, #0x0                   	// #0
   5ded4:	b	5dd60 <mpfr_free_pool@@Base+0x1510>
   5ded8:	cmp	x8, #0x0
   5dedc:	mov	w2, #0x7fff                	// #32767
   5dee0:	mov	x4, #0xffffffffffff        	// #281474976710655
   5dee4:	csel	w1, w1, w2, ne  // ne = any
   5dee8:	csel	x4, x4, xzr, ne  // ne = any
   5deec:	csetm	x5, ne  // ne = any
   5def0:	b	5ddf4 <mpfr_free_pool@@Base+0x15a4>
   5def4:	cbnz	x8, 5db3c <mpfr_free_pool@@Base+0x12ec>
   5def8:	b	5dea0 <mpfr_free_pool@@Base+0x1650>
   5defc:	mov	x4, #0x2                   	// #2
   5df00:	cmp	x1, #0xf
   5df04:	b.ne	5df28 <mpfr_free_pool@@Base+0x16d8>  // b.any
   5df08:	tbz	x7, #47, 5df40 <mpfr_free_pool@@Base+0x16f0>
   5df0c:	tbnz	x2, #47, 5df40 <mpfr_free_pool@@Base+0x16f0>
   5df10:	orr	x4, x2, #0x800000000000
   5df14:	mov	w10, w15
   5df18:	and	x4, x4, #0xffffffffffff
   5df1c:	mov	x5, x6
   5df20:	mov	w1, #0x7fff                	// #32767
   5df24:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5df28:	cmp	x1, #0xb
   5df2c:	b.ne	5d878 <mpfr_free_pool@@Base+0x1028>  // b.any
   5df30:	mov	x7, x2
   5df34:	mov	x5, x6
   5df38:	mov	x16, x4
   5df3c:	b	5d880 <mpfr_free_pool@@Base+0x1030>
   5df40:	orr	x4, x7, #0x800000000000
   5df44:	mov	w10, w12
   5df48:	and	x4, x4, #0xffffffffffff
   5df4c:	mov	w1, #0x7fff                	// #32767
   5df50:	b	5d920 <mpfr_free_pool@@Base+0x10d0>
   5df54:	cbnz	x8, 5dec0 <mpfr_free_pool@@Base+0x1670>
   5df58:	adds	x5, x5, #0x8
   5df5c:	cinc	x2, x2, cs  // cs = hs, nlast
   5df60:	tbnz	x2, #51, 5dec4 <mpfr_free_pool@@Base+0x1674>
   5df64:	b	5dd1c <mpfr_free_pool@@Base+0x14cc>
   5df68:	cbnz	x8, 5df58 <mpfr_free_pool@@Base+0x1708>
   5df6c:	tbnz	x2, #51, 5dec4 <mpfr_free_pool@@Base+0x1674>
   5df70:	b	5dd1c <mpfr_free_pool@@Base+0x14cc>
   5df74:	orr	w0, w0, #0x10
   5df78:	b	5dec4 <mpfr_free_pool@@Base+0x1674>
   5df7c:	mov	x2, x4
   5df80:	mov	x4, #0x3                   	// #3
   5df84:	b	5df00 <mpfr_free_pool@@Base+0x16b0>
   5df88:	mov	w10, w15
   5df8c:	mov	x8, x13
   5df90:	b	5d89c <mpfr_free_pool@@Base+0x104c>
   5df94:	nop
   5df98:	stp	x29, x30, [sp, #-48]!
   5df9c:	mov	x29, sp
   5dfa0:	str	q0, [sp, #16]
   5dfa4:	str	q1, [sp, #32]
   5dfa8:	ldp	x5, x1, [sp, #16]
   5dfac:	ldp	x0, x2, [sp, #32]
   5dfb0:	mrs	x12, fpcr
   5dfb4:	mov	x9, x0
   5dfb8:	ubfx	x0, x2, #48, #15
   5dfbc:	lsr	x6, x1, #63
   5dfc0:	ubfx	x7, x1, #48, #15
   5dfc4:	ubfiz	x3, x1, #3, #48
   5dfc8:	mov	x13, x0
   5dfcc:	lsr	x4, x2, #63
   5dfd0:	ubfiz	x2, x2, #3, #48
   5dfd4:	mov	x11, x6
   5dfd8:	and	w8, w6, #0xff
   5dfdc:	mov	x14, x6
   5dfe0:	sub	w0, w7, w0
   5dfe4:	mov	x1, x7
   5dfe8:	orr	x3, x3, x5, lsr #61
   5dfec:	mov	x7, #0x7fff                	// #32767
   5dff0:	and	w4, w4, #0xff
   5dff4:	cmp	x13, x7
   5dff8:	orr	x2, x2, x9, lsr #61
   5dffc:	lsl	x6, x5, #3
   5e000:	lsl	x10, x9, #3
   5e004:	b.eq	5e174 <mpfr_free_pool@@Base+0x1924>  // b.none
   5e008:	eor	w4, w4, #0x1
   5e00c:	and	x4, x4, #0xff
   5e010:	cmp	x11, x4
   5e014:	b.eq	5e20c <mpfr_free_pool@@Base+0x19bc>  // b.none
   5e018:	cmp	w0, #0x0
   5e01c:	b.le	5e190 <mpfr_free_pool@@Base+0x1940>
   5e020:	cbnz	x13, 5e2fc <mpfr_free_pool@@Base+0x1aac>
   5e024:	orr	x4, x2, x10
   5e028:	cbz	x4, 5e4dc <mpfr_free_pool@@Base+0x1c8c>
   5e02c:	subs	w0, w0, #0x1
   5e030:	b.eq	5e7b0 <mpfr_free_pool@@Base+0x1f60>  // b.none
   5e034:	mov	x4, #0x7fff                	// #32767
   5e038:	cmp	x1, x4
   5e03c:	b.eq	5e4b0 <mpfr_free_pool@@Base+0x1c60>  // b.none
   5e040:	cmp	w0, #0x74
   5e044:	b.gt	5e4cc <mpfr_free_pool@@Base+0x1c7c>
   5e048:	cmp	w0, #0x3f
   5e04c:	b.gt	5e674 <mpfr_free_pool@@Base+0x1e24>
   5e050:	mov	w4, #0x40                  	// #64
   5e054:	sub	w4, w4, w0
   5e058:	lsr	x7, x10, x0
   5e05c:	lsl	x10, x10, x4
   5e060:	cmp	x10, #0x0
   5e064:	lsl	x4, x2, x4
   5e068:	cset	x5, ne  // ne = any
   5e06c:	orr	x4, x4, x7
   5e070:	lsr	x2, x2, x0
   5e074:	orr	x4, x4, x5
   5e078:	sub	x3, x3, x2
   5e07c:	subs	x6, x6, x4
   5e080:	sbc	x3, x3, xzr
   5e084:	and	x5, x3, #0x7ffffffffffff
   5e088:	tbz	x3, #51, 5e288 <mpfr_free_pool@@Base+0x1a38>
   5e08c:	cbz	x5, 5e494 <mpfr_free_pool@@Base+0x1c44>
   5e090:	clz	x0, x5
   5e094:	sub	w0, w0, #0xc
   5e098:	neg	w3, w0
   5e09c:	lsl	x2, x5, x0
   5e0a0:	lsl	x5, x6, x0
   5e0a4:	lsr	x6, x6, x3
   5e0a8:	orr	x3, x6, x2
   5e0ac:	cmp	x1, w0, sxtw
   5e0b0:	sxtw	x2, w0
   5e0b4:	b.gt	5e474 <mpfr_free_pool@@Base+0x1c24>
   5e0b8:	sub	w1, w0, w1
   5e0bc:	add	w0, w1, #0x1
   5e0c0:	cmp	w0, #0x3f
   5e0c4:	b.gt	5e63c <mpfr_free_pool@@Base+0x1dec>
   5e0c8:	mov	w1, #0x40                  	// #64
   5e0cc:	sub	w1, w1, w0
   5e0d0:	lsr	x2, x5, x0
   5e0d4:	lsl	x5, x5, x1
   5e0d8:	cmp	x5, #0x0
   5e0dc:	lsl	x6, x3, x1
   5e0e0:	cset	x1, ne  // ne = any
   5e0e4:	orr	x6, x6, x2
   5e0e8:	lsr	x3, x3, x0
   5e0ec:	orr	x6, x6, x1
   5e0f0:	orr	x7, x6, x3
   5e0f4:	cbz	x7, 5e29c <mpfr_free_pool@@Base+0x1a4c>
   5e0f8:	and	x0, x6, #0x7
   5e0fc:	mov	x1, #0x0                   	// #0
   5e100:	mov	w4, #0x1                   	// #1
   5e104:	cbz	x0, 5e500 <mpfr_free_pool@@Base+0x1cb0>
   5e108:	and	x2, x12, #0xc00000
   5e10c:	cmp	x2, #0x400, lsl #12
   5e110:	b.eq	5e44c <mpfr_free_pool@@Base+0x1bfc>  // b.none
   5e114:	cmp	x2, #0x800, lsl #12
   5e118:	b.eq	5e42c <mpfr_free_pool@@Base+0x1bdc>  // b.none
   5e11c:	cbz	x2, 5e458 <mpfr_free_pool@@Base+0x1c08>
   5e120:	and	x2, x3, #0x8000000000000
   5e124:	mov	w0, #0x10                  	// #16
   5e128:	cbz	w4, 5e130 <mpfr_free_pool@@Base+0x18e0>
   5e12c:	orr	w0, w0, #0x8
   5e130:	cbz	x2, 5e1e0 <mpfr_free_pool@@Base+0x1990>
   5e134:	add	x1, x1, #0x1
   5e138:	mov	x2, #0x7fff                	// #32767
   5e13c:	cmp	x1, x2
   5e140:	b.eq	5e354 <mpfr_free_pool@@Base+0x1b04>  // b.none
   5e144:	ubfx	x7, x3, #3, #48
   5e148:	extr	x5, x3, x6, #3
   5e14c:	and	w1, w1, #0x7fff
   5e150:	mov	x3, #0x0                   	// #0
   5e154:	orr	w1, w1, w8, lsl #15
   5e158:	bfxil	x3, x7, #0, #48
   5e15c:	fmov	d0, x5
   5e160:	bfi	x3, x1, #48, #16
   5e164:	fmov	v0.d[1], x3
   5e168:	cbnz	w0, 5e3b0 <mpfr_free_pool@@Base+0x1b60>
   5e16c:	ldp	x29, x30, [sp], #48
   5e170:	ret
   5e174:	orr	x7, x2, x10
   5e178:	cbz	x7, 5e008 <mpfr_free_pool@@Base+0x17b8>
   5e17c:	and	x4, x4, #0xff
   5e180:	cmp	x11, x4
   5e184:	b.eq	5e3c4 <mpfr_free_pool@@Base+0x1b74>  // b.none
   5e188:	cmp	w0, #0x0
   5e18c:	b.gt	5e2fc <mpfr_free_pool@@Base+0x1aac>
   5e190:	cbz	w0, 5e2b4 <mpfr_free_pool@@Base+0x1a64>
   5e194:	mov	w8, w4
   5e198:	cbnz	x1, 5e5d0 <mpfr_free_pool@@Base+0x1d80>
   5e19c:	orr	x1, x3, x6
   5e1a0:	cbz	x1, 5e268 <mpfr_free_pool@@Base+0x1a18>
   5e1a4:	cmn	w0, #0x1
   5e1a8:	b.eq	5e910 <mpfr_free_pool@@Base+0x20c0>  // b.none
   5e1ac:	mov	x1, #0x7fff                	// #32767
   5e1b0:	mvn	w0, w0
   5e1b4:	cmp	x13, x1
   5e1b8:	b.ne	5e5e4 <mpfr_free_pool@@Base+0x1d94>  // b.any
   5e1bc:	orr	x0, x2, x10
   5e1c0:	and	x11, x8, #0xff
   5e1c4:	cbz	x0, 5e548 <mpfr_free_pool@@Base+0x1cf8>
   5e1c8:	lsr	x0, x2, #50
   5e1cc:	mov	x6, x10
   5e1d0:	eor	x0, x0, #0x1
   5e1d4:	mov	x3, x2
   5e1d8:	and	w0, w0, #0x1
   5e1dc:	mov	x1, #0x7fff                	// #32767
   5e1e0:	mov	x2, #0x7fff                	// #32767
   5e1e4:	extr	x5, x3, x6, #3
   5e1e8:	lsr	x7, x3, #3
   5e1ec:	cmp	x1, x2
   5e1f0:	b.ne	5e2a8 <mpfr_free_pool@@Base+0x1a58>  // b.any
   5e1f4:	orr	x1, x7, x5
   5e1f8:	cbz	x1, 5ea64 <mpfr_free_pool@@Base+0x2214>
   5e1fc:	orr	x7, x7, #0x800000000000
   5e200:	mov	w1, #0x7fff                	// #32767
   5e204:	and	x7, x7, #0xffffffffffff
   5e208:	b	5e150 <mpfr_free_pool@@Base+0x1900>
   5e20c:	cmp	w0, #0x0
   5e210:	b.le	5e3c4 <mpfr_free_pool@@Base+0x1b74>
   5e214:	cbz	x13, 5e304 <mpfr_free_pool@@Base+0x1ab4>
   5e218:	orr	x2, x2, #0x8000000000000
   5e21c:	mov	x4, #0x7fff                	// #32767
   5e220:	cmp	x1, x4
   5e224:	b.eq	5e4b0 <mpfr_free_pool@@Base+0x1c60>  // b.none
   5e228:	cmp	w0, #0x74
   5e22c:	b.gt	5e624 <mpfr_free_pool@@Base+0x1dd4>
   5e230:	cmp	w0, #0x3f
   5e234:	b.gt	5e6c0 <mpfr_free_pool@@Base+0x1e70>
   5e238:	mov	w4, #0x40                  	// #64
   5e23c:	sub	w4, w4, w0
   5e240:	lsr	x7, x10, x0
   5e244:	lsl	x10, x10, x4
   5e248:	cmp	x10, #0x0
   5e24c:	lsl	x4, x2, x4
   5e250:	cset	x5, ne  // ne = any
   5e254:	orr	x4, x4, x7
   5e258:	lsr	x2, x2, x0
   5e25c:	orr	x0, x4, x5
   5e260:	add	x3, x3, x2
   5e264:	b	5e630 <mpfr_free_pool@@Base+0x1de0>
   5e268:	mov	x0, #0x7fff                	// #32767
   5e26c:	cmp	x13, x0
   5e270:	b.eq	5e89c <mpfr_free_pool@@Base+0x204c>  // b.none
   5e274:	mov	x3, x2
   5e278:	mov	x6, x10
   5e27c:	mov	x1, x13
   5e280:	mov	x14, x4
   5e284:	nop
   5e288:	orr	x7, x6, x3
   5e28c:	and	x0, x6, #0x7
   5e290:	mov	w4, #0x0                   	// #0
   5e294:	cbnz	x1, 5e104 <mpfr_free_pool@@Base+0x18b4>
   5e298:	cbnz	x7, 5e0f8 <mpfr_free_pool@@Base+0x18a8>
   5e29c:	mov	x5, #0x0                   	// #0
   5e2a0:	mov	x1, #0x0                   	// #0
   5e2a4:	mov	w0, #0x0                   	// #0
   5e2a8:	and	x7, x7, #0xffffffffffff
   5e2ac:	and	w1, w1, #0x7fff
   5e2b0:	b	5e150 <mpfr_free_pool@@Base+0x1900>
   5e2b4:	add	x7, x1, #0x1
   5e2b8:	tst	x7, #0x7ffe
   5e2bc:	b.ne	5e5a0 <mpfr_free_pool@@Base+0x1d50>  // b.any
   5e2c0:	orr	x11, x3, x6
   5e2c4:	orr	x7, x2, x10
   5e2c8:	cbnz	x1, 5e730 <mpfr_free_pool@@Base+0x1ee0>
   5e2cc:	cbz	x11, 5e7bc <mpfr_free_pool@@Base+0x1f6c>
   5e2d0:	cbz	x7, 5e7d0 <mpfr_free_pool@@Base+0x1f80>
   5e2d4:	subs	x9, x6, x10
   5e2d8:	cmp	x6, x10
   5e2dc:	sbc	x5, x3, x2
   5e2e0:	tbz	x5, #51, 5e978 <mpfr_free_pool@@Base+0x2128>
   5e2e4:	subs	x6, x10, x6
   5e2e8:	mov	w8, w4
   5e2ec:	sbc	x3, x2, x3
   5e2f0:	mov	x14, x4
   5e2f4:	orr	x7, x6, x3
   5e2f8:	b	5e0f4 <mpfr_free_pool@@Base+0x18a4>
   5e2fc:	orr	x2, x2, #0x8000000000000
   5e300:	b	5e034 <mpfr_free_pool@@Base+0x17e4>
   5e304:	orr	x4, x2, x10
   5e308:	cbz	x4, 5e4dc <mpfr_free_pool@@Base+0x1c8c>
   5e30c:	subs	w0, w0, #0x1
   5e310:	b.ne	5e21c <mpfr_free_pool@@Base+0x19cc>  // b.any
   5e314:	adds	x6, x6, x10
   5e318:	adc	x3, x2, x3
   5e31c:	nop
   5e320:	tbz	x3, #51, 5e288 <mpfr_free_pool@@Base+0x1a38>
   5e324:	add	x1, x1, #0x1
   5e328:	mov	x0, #0x7fff                	// #32767
   5e32c:	cmp	x1, x0
   5e330:	b.eq	5e7dc <mpfr_free_pool@@Base+0x1f8c>  // b.none
   5e334:	and	x0, x6, #0x1
   5e338:	and	x2, x3, #0xfff7ffffffffffff
   5e33c:	orr	x6, x0, x6, lsr #1
   5e340:	mov	w4, #0x0                   	// #0
   5e344:	orr	x6, x6, x3, lsl #63
   5e348:	lsr	x3, x2, #1
   5e34c:	and	x0, x6, #0x7
   5e350:	b	5e104 <mpfr_free_pool@@Base+0x18b4>
   5e354:	and	x2, x12, #0xc00000
   5e358:	cbz	x2, 5e390 <mpfr_free_pool@@Base+0x1b40>
   5e35c:	cmp	x2, #0x400, lsl #12
   5e360:	b.eq	5e38c <mpfr_free_pool@@Base+0x1b3c>  // b.none
   5e364:	cmp	x2, #0x800, lsl #12
   5e368:	and	w14, w14, #0x1
   5e36c:	csel	w14, w14, wzr, eq  // eq = none
   5e370:	cbnz	w14, 5e390 <mpfr_free_pool@@Base+0x1b40>
   5e374:	mov	w1, #0x14                  	// #20
   5e378:	mov	x5, #0xffffffffffffffff    	// #-1
   5e37c:	orr	w0, w0, w1
   5e380:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   5e384:	mov	x1, #0x7ffe                	// #32766
   5e388:	b	5e2a8 <mpfr_free_pool@@Base+0x1a58>
   5e38c:	cbnz	x14, 5e374 <mpfr_free_pool@@Base+0x1b24>
   5e390:	mov	w1, #0x14                  	// #20
   5e394:	and	x11, x8, #0xff
   5e398:	orr	w0, w0, w1
   5e39c:	mov	x2, #0x0                   	// #0
   5e3a0:	fmov	d0, x2
   5e3a4:	lsl	x11, x11, #63
   5e3a8:	orr	x3, x11, #0x7fff000000000000
   5e3ac:	fmov	v0.d[1], x3
   5e3b0:	str	q0, [sp, #16]
   5e3b4:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5e3b8:	ldr	q0, [sp, #16]
   5e3bc:	ldp	x29, x30, [sp], #48
   5e3c0:	ret
   5e3c4:	cbz	w0, 5e560 <mpfr_free_pool@@Base+0x1d10>
   5e3c8:	cbz	x1, 5e51c <mpfr_free_pool@@Base+0x1ccc>
   5e3cc:	mov	x1, #0x7fff                	// #32767
   5e3d0:	neg	w0, w0
   5e3d4:	orr	x3, x3, #0x8000000000000
   5e3d8:	cmp	x13, x1
   5e3dc:	b.eq	5e53c <mpfr_free_pool@@Base+0x1cec>  // b.none
   5e3e0:	cmp	w0, #0x74
   5e3e4:	b.gt	5e830 <mpfr_free_pool@@Base+0x1fe0>
   5e3e8:	cmp	w0, #0x3f
   5e3ec:	b.gt	5e8e4 <mpfr_free_pool@@Base+0x2094>
   5e3f0:	mov	w1, #0x40                  	// #64
   5e3f4:	sub	w1, w1, w0
   5e3f8:	lsr	x4, x6, x0
   5e3fc:	lsl	x6, x6, x1
   5e400:	cmp	x6, #0x0
   5e404:	lsl	x6, x3, x1
   5e408:	cset	x1, ne  // ne = any
   5e40c:	orr	x6, x6, x4
   5e410:	lsr	x0, x3, x0
   5e414:	orr	x6, x6, x1
   5e418:	add	x2, x2, x0
   5e41c:	adds	x6, x6, x10
   5e420:	mov	x1, x13
   5e424:	cinc	x3, x2, cs  // cs = hs, nlast
   5e428:	b	5e320 <mpfr_free_pool@@Base+0x1ad0>
   5e42c:	mov	w0, #0x10                  	// #16
   5e430:	cbz	x14, 5e43c <mpfr_free_pool@@Base+0x1bec>
   5e434:	adds	x6, x6, #0x8
   5e438:	cinc	x3, x3, cs  // cs = hs, nlast
   5e43c:	and	x2, x3, #0x8000000000000
   5e440:	cbz	w4, 5e130 <mpfr_free_pool@@Base+0x18e0>
   5e444:	orr	w0, w0, #0x8
   5e448:	b	5e130 <mpfr_free_pool@@Base+0x18e0>
   5e44c:	mov	w0, #0x10                  	// #16
   5e450:	cbnz	x14, 5e43c <mpfr_free_pool@@Base+0x1bec>
   5e454:	b	5e434 <mpfr_free_pool@@Base+0x1be4>
   5e458:	and	x2, x6, #0xf
   5e45c:	mov	w0, #0x10                  	// #16
   5e460:	cmp	x2, #0x4
   5e464:	b.eq	5e43c <mpfr_free_pool@@Base+0x1bec>  // b.none
   5e468:	adds	x6, x6, #0x4
   5e46c:	cinc	x3, x3, cs  // cs = hs, nlast
   5e470:	b	5e43c <mpfr_free_pool@@Base+0x1bec>
   5e474:	mov	x6, x5
   5e478:	and	x3, x3, #0xfff7ffffffffffff
   5e47c:	sub	x1, x1, x2
   5e480:	orr	x7, x6, x3
   5e484:	and	x0, x6, #0x7
   5e488:	mov	w4, #0x0                   	// #0
   5e48c:	cbz	x1, 5e298 <mpfr_free_pool@@Base+0x1a48>
   5e490:	b	5e104 <mpfr_free_pool@@Base+0x18b4>
   5e494:	clz	x3, x6
   5e498:	add	w0, w3, #0x34
   5e49c:	cmp	w0, #0x3f
   5e4a0:	b.le	5e098 <mpfr_free_pool@@Base+0x1848>
   5e4a4:	sub	w3, w3, #0xc
   5e4a8:	lsl	x3, x6, x3
   5e4ac:	b	5e0ac <mpfr_free_pool@@Base+0x185c>
   5e4b0:	orr	x0, x3, x6
   5e4b4:	cbz	x0, 5e548 <mpfr_free_pool@@Base+0x1cf8>
   5e4b8:	lsr	x0, x3, #50
   5e4bc:	mov	x1, #0x7fff                	// #32767
   5e4c0:	eor	x0, x0, #0x1
   5e4c4:	and	w0, w0, #0x1
   5e4c8:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5e4cc:	orr	x2, x2, x10
   5e4d0:	cmp	x2, #0x0
   5e4d4:	cset	x4, ne  // ne = any
   5e4d8:	b	5e07c <mpfr_free_pool@@Base+0x182c>
   5e4dc:	mov	x0, #0x7fff                	// #32767
   5e4e0:	cmp	x1, x0
   5e4e4:	b.ne	5e288 <mpfr_free_pool@@Base+0x1a38>  // b.any
   5e4e8:	orr	x0, x3, x6
   5e4ec:	cbnz	x0, 5e4b8 <mpfr_free_pool@@Base+0x1c68>
   5e4f0:	mov	x5, #0x0                   	// #0
   5e4f4:	mov	x7, #0x0                   	// #0
   5e4f8:	mov	w0, #0x0                   	// #0
   5e4fc:	b	5e1f4 <mpfr_free_pool@@Base+0x19a4>
   5e500:	and	x2, x3, #0x8000000000000
   5e504:	mov	w0, #0x0                   	// #0
   5e508:	cbz	w4, 5e130 <mpfr_free_pool@@Base+0x18e0>
   5e50c:	mov	w0, #0x0                   	// #0
   5e510:	tbz	w12, #11, 5e130 <mpfr_free_pool@@Base+0x18e0>
   5e514:	orr	w0, w0, #0x8
   5e518:	b	5e130 <mpfr_free_pool@@Base+0x18e0>
   5e51c:	orr	x1, x3, x6
   5e520:	cbz	x1, 5e8a8 <mpfr_free_pool@@Base+0x2058>
   5e524:	cmn	w0, #0x1
   5e528:	b.eq	5e9f8 <mpfr_free_pool@@Base+0x21a8>  // b.none
   5e52c:	mov	x1, #0x7fff                	// #32767
   5e530:	mvn	w0, w0
   5e534:	cmp	x13, x1
   5e538:	b.ne	5e3e0 <mpfr_free_pool@@Base+0x1b90>  // b.any
   5e53c:	orr	x0, x2, x10
   5e540:	cbnz	x0, 5e1c8 <mpfr_free_pool@@Base+0x1978>
   5e544:	nop
   5e548:	mov	x2, #0x0                   	// #0
   5e54c:	fmov	d0, x2
   5e550:	lsl	x0, x11, #63
   5e554:	orr	x3, x0, #0x7fff000000000000
   5e558:	fmov	v0.d[1], x3
   5e55c:	b	5e16c <mpfr_free_pool@@Base+0x191c>
   5e560:	add	x7, x1, #0x1
   5e564:	tst	x7, #0x7ffe
   5e568:	b.ne	5e6ec <mpfr_free_pool@@Base+0x1e9c>  // b.any
   5e56c:	orr	x11, x3, x6
   5e570:	cbnz	x1, 5e874 <mpfr_free_pool@@Base+0x2024>
   5e574:	orr	x7, x2, x10
   5e578:	cbz	x11, 5e8d8 <mpfr_free_pool@@Base+0x2088>
   5e57c:	cbz	x7, 5e7d0 <mpfr_free_pool@@Base+0x1f80>
   5e580:	adds	x6, x6, x10
   5e584:	adc	x3, x2, x3
   5e588:	tbz	x3, #51, 5e0f0 <mpfr_free_pool@@Base+0x18a0>
   5e58c:	and	x3, x3, #0xfff7ffffffffffff
   5e590:	and	x0, x6, #0x7
   5e594:	mov	w4, #0x0                   	// #0
   5e598:	mov	x1, #0x1                   	// #1
   5e59c:	b	5e104 <mpfr_free_pool@@Base+0x18b4>
   5e5a0:	subs	x9, x6, x10
   5e5a4:	cmp	x6, x10
   5e5a8:	sbc	x5, x3, x2
   5e5ac:	tbnz	x5, #51, 5e718 <mpfr_free_pool@@Base+0x1ec8>
   5e5b0:	orr	x7, x9, x5
   5e5b4:	cbnz	x7, 5e828 <mpfr_free_pool@@Base+0x1fd8>
   5e5b8:	and	x12, x12, #0xc00000
   5e5bc:	mov	x5, #0x0                   	// #0
   5e5c0:	cmp	x12, #0x800, lsl #12
   5e5c4:	mov	x1, #0x0                   	// #0
   5e5c8:	cset	w8, eq  // eq = none
   5e5cc:	b	5e2a8 <mpfr_free_pool@@Base+0x1a58>
   5e5d0:	mov	x1, #0x7fff                	// #32767
   5e5d4:	neg	w0, w0
   5e5d8:	orr	x3, x3, #0x8000000000000
   5e5dc:	cmp	x13, x1
   5e5e0:	b.eq	5e1bc <mpfr_free_pool@@Base+0x196c>  // b.none
   5e5e4:	cmp	w0, #0x74
   5e5e8:	b.gt	5e6a0 <mpfr_free_pool@@Base+0x1e50>
   5e5ec:	cmp	w0, #0x3f
   5e5f0:	b.gt	5e840 <mpfr_free_pool@@Base+0x1ff0>
   5e5f4:	mov	w1, #0x40                  	// #64
   5e5f8:	sub	w1, w1, w0
   5e5fc:	lsr	x5, x6, x0
   5e600:	lsl	x6, x6, x1
   5e604:	cmp	x6, #0x0
   5e608:	lsl	x6, x3, x1
   5e60c:	cset	x1, ne  // ne = any
   5e610:	orr	x6, x6, x5
   5e614:	lsr	x0, x3, x0
   5e618:	orr	x6, x6, x1
   5e61c:	sub	x2, x2, x0
   5e620:	b	5e6ac <mpfr_free_pool@@Base+0x1e5c>
   5e624:	orr	x2, x2, x10
   5e628:	cmp	x2, #0x0
   5e62c:	cset	x0, ne  // ne = any
   5e630:	adds	x6, x0, x6
   5e634:	cinc	x3, x3, cs  // cs = hs, nlast
   5e638:	b	5e320 <mpfr_free_pool@@Base+0x1ad0>
   5e63c:	mov	w2, #0x80                  	// #128
   5e640:	sub	w2, w2, w0
   5e644:	cmp	w0, #0x40
   5e648:	sub	w6, w1, #0x3f
   5e64c:	lsl	x0, x3, x2
   5e650:	orr	x0, x5, x0
   5e654:	csel	x5, x0, x5, ne  // ne = any
   5e658:	lsr	x6, x3, x6
   5e65c:	cmp	x5, #0x0
   5e660:	mov	x3, #0x0                   	// #0
   5e664:	cset	x0, ne  // ne = any
   5e668:	orr	x6, x0, x6
   5e66c:	mov	x7, x6
   5e670:	b	5e0f4 <mpfr_free_pool@@Base+0x18a4>
   5e674:	mov	w5, #0x80                  	// #128
   5e678:	sub	w5, w5, w0
   5e67c:	subs	w0, w0, #0x40
   5e680:	lsl	x5, x2, x5
   5e684:	orr	x5, x10, x5
   5e688:	csel	x10, x5, x10, ne  // ne = any
   5e68c:	lsr	x2, x2, x0
   5e690:	cmp	x10, #0x0
   5e694:	cset	x4, ne  // ne = any
   5e698:	orr	x4, x4, x2
   5e69c:	b	5e07c <mpfr_free_pool@@Base+0x182c>
   5e6a0:	orr	x3, x3, x6
   5e6a4:	cmp	x3, #0x0
   5e6a8:	cset	x6, ne  // ne = any
   5e6ac:	subs	x6, x10, x6
   5e6b0:	mov	x1, x13
   5e6b4:	sbc	x3, x2, xzr
   5e6b8:	mov	x14, x4
   5e6bc:	b	5e084 <mpfr_free_pool@@Base+0x1834>
   5e6c0:	mov	w4, #0x80                  	// #128
   5e6c4:	sub	w4, w4, w0
   5e6c8:	subs	w0, w0, #0x40
   5e6cc:	lsl	x4, x2, x4
   5e6d0:	orr	x4, x10, x4
   5e6d4:	csel	x10, x4, x10, ne  // ne = any
   5e6d8:	lsr	x2, x2, x0
   5e6dc:	cmp	x10, #0x0
   5e6e0:	cset	x0, ne  // ne = any
   5e6e4:	orr	x0, x0, x2
   5e6e8:	b	5e630 <mpfr_free_pool@@Base+0x1de0>
   5e6ec:	mov	x0, #0x7fff                	// #32767
   5e6f0:	cmp	x7, x0
   5e6f4:	b.eq	5e928 <mpfr_free_pool@@Base+0x20d8>  // b.none
   5e6f8:	adds	x6, x6, x10
   5e6fc:	mov	x1, x7
   5e700:	adc	x3, x2, x3
   5e704:	mov	w4, #0x0                   	// #0
   5e708:	ubfx	x0, x6, #1, #3
   5e70c:	extr	x6, x3, x6, #1
   5e710:	lsr	x3, x3, #1
   5e714:	b	5e104 <mpfr_free_pool@@Base+0x18b4>
   5e718:	cmp	x10, x6
   5e71c:	mov	w8, w4
   5e720:	sbc	x5, x2, x3
   5e724:	sub	x6, x10, x6
   5e728:	mov	x14, x4
   5e72c:	b	5e08c <mpfr_free_pool@@Base+0x183c>
   5e730:	mov	x12, #0x7fff                	// #32767
   5e734:	cmp	x1, x12
   5e738:	b.eq	5e760 <mpfr_free_pool@@Base+0x1f10>  // b.none
   5e73c:	cmp	x13, x12
   5e740:	b.eq	5e954 <mpfr_free_pool@@Base+0x2104>  // b.none
   5e744:	cbnz	x11, 5e778 <mpfr_free_pool@@Base+0x1f28>
   5e748:	cbnz	x7, 5e964 <mpfr_free_pool@@Base+0x2114>
   5e74c:	mov	x5, #0xffffffffffffffff    	// #-1
   5e750:	mov	x7, #0xffffffffffff        	// #281474976710655
   5e754:	mov	w0, #0x1                   	// #1
   5e758:	mov	w8, #0x0                   	// #0
   5e75c:	b	5e1fc <mpfr_free_pool@@Base+0x19ac>
   5e760:	cbz	x11, 5e94c <mpfr_free_pool@@Base+0x20fc>
   5e764:	lsr	x0, x3, #50
   5e768:	cmp	x13, x1
   5e76c:	eor	x0, x0, #0x1
   5e770:	and	w0, w0, #0x1
   5e774:	b.eq	5e954 <mpfr_free_pool@@Base+0x2104>  // b.none
   5e778:	cbz	x7, 5e1dc <mpfr_free_pool@@Base+0x198c>
   5e77c:	bfi	x5, x3, #61, #3
   5e780:	lsr	x7, x3, #3
   5e784:	tbz	x3, #50, 5e7a0 <mpfr_free_pool@@Base+0x1f50>
   5e788:	lsr	x1, x2, #3
   5e78c:	tbnz	x2, #50, 5e7a0 <mpfr_free_pool@@Base+0x1f50>
   5e790:	mov	x5, x9
   5e794:	mov	w8, w4
   5e798:	bfi	x5, x2, #61, #3
   5e79c:	mov	x7, x1
   5e7a0:	extr	x7, x7, x5, #61
   5e7a4:	bfi	x5, x7, #61, #3
   5e7a8:	lsr	x7, x7, #3
   5e7ac:	b	5e1f4 <mpfr_free_pool@@Base+0x19a4>
   5e7b0:	subs	x6, x6, x10
   5e7b4:	sbc	x3, x3, x2
   5e7b8:	b	5e084 <mpfr_free_pool@@Base+0x1834>
   5e7bc:	cbz	x7, 5e8c4 <mpfr_free_pool@@Base+0x2074>
   5e7c0:	mov	x3, x2
   5e7c4:	mov	x6, x10
   5e7c8:	mov	w8, w4
   5e7cc:	mov	x14, x4
   5e7d0:	mov	x1, #0x0                   	// #0
   5e7d4:	mov	x2, #0x0                   	// #0
   5e7d8:	b	5e50c <mpfr_free_pool@@Base+0x1cbc>
   5e7dc:	ands	x2, x12, #0xc00000
   5e7e0:	b.eq	5e86c <mpfr_free_pool@@Base+0x201c>  // b.none
   5e7e4:	cmp	x2, #0x400, lsl #12
   5e7e8:	eor	w0, w8, #0x1
   5e7ec:	cset	w1, eq  // eq = none
   5e7f0:	tst	w1, w0
   5e7f4:	b.ne	5e940 <mpfr_free_pool@@Base+0x20f0>  // b.any
   5e7f8:	cmp	x2, #0x800, lsl #12
   5e7fc:	b.eq	5e994 <mpfr_free_pool@@Base+0x2144>  // b.none
   5e800:	cmp	x2, #0x400, lsl #12
   5e804:	mov	w0, #0x14                  	// #20
   5e808:	b.ne	5e358 <mpfr_free_pool@@Base+0x1b08>  // b.any
   5e80c:	mov	x3, #0xffffffffffffffff    	// #-1
   5e810:	mov	x1, #0x7ffe                	// #32766
   5e814:	mov	x6, x3
   5e818:	mov	w4, #0x0                   	// #0
   5e81c:	mov	w0, #0x14                  	// #20
   5e820:	cbnz	x14, 5e43c <mpfr_free_pool@@Base+0x1bec>
   5e824:	b	5e434 <mpfr_free_pool@@Base+0x1be4>
   5e828:	mov	x6, x9
   5e82c:	b	5e08c <mpfr_free_pool@@Base+0x183c>
   5e830:	orr	x3, x3, x6
   5e834:	cmp	x3, #0x0
   5e838:	cset	x6, ne  // ne = any
   5e83c:	b	5e41c <mpfr_free_pool@@Base+0x1bcc>
   5e840:	mov	w1, #0x80                  	// #128
   5e844:	sub	w1, w1, w0
   5e848:	subs	w0, w0, #0x40
   5e84c:	lsl	x1, x3, x1
   5e850:	orr	x1, x6, x1
   5e854:	csel	x6, x1, x6, ne  // ne = any
   5e858:	lsr	x3, x3, x0
   5e85c:	cmp	x6, #0x0
   5e860:	cset	x6, ne  // ne = any
   5e864:	orr	x6, x6, x3
   5e868:	b	5e6ac <mpfr_free_pool@@Base+0x1e5c>
   5e86c:	mov	w0, #0x14                  	// #20
   5e870:	b	5e39c <mpfr_free_pool@@Base+0x1b4c>
   5e874:	mov	x7, #0x7fff                	// #32767
   5e878:	cmp	x1, x7
   5e87c:	b.eq	5e9b0 <mpfr_free_pool@@Base+0x2160>  // b.none
   5e880:	cmp	x13, x7
   5e884:	b.eq	5ea14 <mpfr_free_pool@@Base+0x21c4>  // b.none
   5e888:	cbnz	x11, 5e9c8 <mpfr_free_pool@@Base+0x2178>
   5e88c:	mov	x3, x2
   5e890:	mov	x6, x10
   5e894:	mov	x1, #0x7fff                	// #32767
   5e898:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5e89c:	orr	x0, x2, x10
   5e8a0:	cbz	x0, 5e4f0 <mpfr_free_pool@@Base+0x1ca0>
   5e8a4:	b	5e1c8 <mpfr_free_pool@@Base+0x1978>
   5e8a8:	mov	x0, #0x7fff                	// #32767
   5e8ac:	cmp	x13, x0
   5e8b0:	b.eq	5e89c <mpfr_free_pool@@Base+0x204c>  // b.none
   5e8b4:	mov	x3, x2
   5e8b8:	mov	x6, x10
   5e8bc:	mov	x1, x13
   5e8c0:	b	5e288 <mpfr_free_pool@@Base+0x1a38>
   5e8c4:	and	x12, x12, #0xc00000
   5e8c8:	mov	x5, #0x0                   	// #0
   5e8cc:	cmp	x12, #0x800, lsl #12
   5e8d0:	cset	w8, eq  // eq = none
   5e8d4:	b	5e2a8 <mpfr_free_pool@@Base+0x1a58>
   5e8d8:	mov	x3, x2
   5e8dc:	mov	x6, x10
   5e8e0:	b	5e0f4 <mpfr_free_pool@@Base+0x18a4>
   5e8e4:	mov	w1, #0x80                  	// #128
   5e8e8:	sub	w1, w1, w0
   5e8ec:	subs	w0, w0, #0x40
   5e8f0:	lsl	x1, x3, x1
   5e8f4:	orr	x1, x6, x1
   5e8f8:	csel	x6, x1, x6, ne  // ne = any
   5e8fc:	lsr	x3, x3, x0
   5e900:	cmp	x6, #0x0
   5e904:	cset	x6, ne  // ne = any
   5e908:	orr	x6, x6, x3
   5e90c:	b	5e41c <mpfr_free_pool@@Base+0x1bcc>
   5e910:	cmp	x10, x6
   5e914:	mov	x1, x13
   5e918:	sbc	x3, x2, x3
   5e91c:	sub	x6, x10, x6
   5e920:	mov	x14, x4
   5e924:	b	5e084 <mpfr_free_pool@@Base+0x1834>
   5e928:	ands	x2, x12, #0xc00000
   5e92c:	b.eq	5e86c <mpfr_free_pool@@Base+0x201c>  // b.none
   5e930:	cmp	x2, #0x400, lsl #12
   5e934:	eor	w0, w8, #0x1
   5e938:	csel	w0, w0, wzr, eq  // eq = none
   5e93c:	cbz	w0, 5e7f8 <mpfr_free_pool@@Base+0x1fa8>
   5e940:	mov	w0, #0x14                  	// #20
   5e944:	mov	x11, #0x0                   	// #0
   5e948:	b	5e39c <mpfr_free_pool@@Base+0x1b4c>
   5e94c:	cmp	x13, x1
   5e950:	b.ne	5e748 <mpfr_free_pool@@Base+0x1ef8>  // b.any
   5e954:	cbz	x7, 5ea08 <mpfr_free_pool@@Base+0x21b8>
   5e958:	tst	x2, #0x4000000000000
   5e95c:	csinc	w0, w0, wzr, ne  // ne = any
   5e960:	cbnz	x11, 5e77c <mpfr_free_pool@@Base+0x1f2c>
   5e964:	mov	w8, w4
   5e968:	mov	x3, x2
   5e96c:	mov	x6, x10
   5e970:	mov	x1, #0x7fff                	// #32767
   5e974:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5e978:	orr	x7, x9, x5
   5e97c:	cbz	x7, 5e8c4 <mpfr_free_pool@@Base+0x2074>
   5e980:	mov	x3, x5
   5e984:	and	x0, x9, #0x7
   5e988:	mov	x6, x9
   5e98c:	mov	w4, #0x1                   	// #1
   5e990:	b	5e104 <mpfr_free_pool@@Base+0x18b4>
   5e994:	cbnz	x11, 5ea28 <mpfr_free_pool@@Base+0x21d8>
   5e998:	mov	x3, #0xffffffffffffffff    	// #-1
   5e99c:	mov	w8, #0x0                   	// #0
   5e9a0:	mov	x6, x3
   5e9a4:	mov	x1, #0x7ffe                	// #32766
   5e9a8:	mov	w0, #0x14                  	// #20
   5e9ac:	b	5e134 <mpfr_free_pool@@Base+0x18e4>
   5e9b0:	cbz	x11, 5ea34 <mpfr_free_pool@@Base+0x21e4>
   5e9b4:	lsr	x0, x3, #50
   5e9b8:	cmp	x13, x1
   5e9bc:	eor	x0, x0, #0x1
   5e9c0:	and	w0, w0, #0x1
   5e9c4:	b.eq	5ea54 <mpfr_free_pool@@Base+0x2204>  // b.none
   5e9c8:	orr	x10, x2, x10
   5e9cc:	cbz	x10, 5e1dc <mpfr_free_pool@@Base+0x198c>
   5e9d0:	bfi	x5, x3, #61, #3
   5e9d4:	lsr	x7, x3, #3
   5e9d8:	tbz	x3, #50, 5e7a0 <mpfr_free_pool@@Base+0x1f50>
   5e9dc:	lsr	x1, x2, #3
   5e9e0:	tbnz	x2, #50, 5e7a0 <mpfr_free_pool@@Base+0x1f50>
   5e9e4:	and	x5, x9, #0x1fffffffffffffff
   5e9e8:	mov	w8, w4
   5e9ec:	orr	x5, x5, x2, lsl #61
   5e9f0:	mov	x7, x1
   5e9f4:	b	5e7a0 <mpfr_free_pool@@Base+0x1f50>
   5e9f8:	adds	x6, x6, x10
   5e9fc:	mov	x1, x13
   5ea00:	adc	x3, x2, x3
   5ea04:	b	5e320 <mpfr_free_pool@@Base+0x1ad0>
   5ea08:	cbz	x11, 5e74c <mpfr_free_pool@@Base+0x1efc>
   5ea0c:	mov	x1, #0x7fff                	// #32767
   5ea10:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5ea14:	orr	x1, x2, x10
   5ea18:	cbnz	x1, 5ea44 <mpfr_free_pool@@Base+0x21f4>
   5ea1c:	cbz	x11, 5e4f0 <mpfr_free_pool@@Base+0x1ca0>
   5ea20:	mov	x1, #0x7fff                	// #32767
   5ea24:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5ea28:	mov	w0, #0x14                  	// #20
   5ea2c:	mov	x11, #0x1                   	// #1
   5ea30:	b	5e39c <mpfr_free_pool@@Base+0x1b4c>
   5ea34:	cmp	x13, x1
   5ea38:	b.ne	5e88c <mpfr_free_pool@@Base+0x203c>  // b.any
   5ea3c:	orr	x1, x2, x10
   5ea40:	cbz	x1, 5e4f0 <mpfr_free_pool@@Base+0x1ca0>
   5ea44:	tst	x2, #0x4000000000000
   5ea48:	csinc	w0, w0, wzr, ne  // ne = any
   5ea4c:	cbnz	x11, 5e9d0 <mpfr_free_pool@@Base+0x2180>
   5ea50:	b	5e88c <mpfr_free_pool@@Base+0x203c>
   5ea54:	orr	x1, x2, x10
   5ea58:	cbnz	x1, 5ea44 <mpfr_free_pool@@Base+0x21f4>
   5ea5c:	mov	x1, #0x7fff                	// #32767
   5ea60:	b	5e1e0 <mpfr_free_pool@@Base+0x1990>
   5ea64:	mov	x5, #0x0                   	// #0
   5ea68:	mov	w1, #0x7fff                	// #32767
   5ea6c:	mov	x7, #0x0                   	// #0
   5ea70:	b	5e150 <mpfr_free_pool@@Base+0x1900>
   5ea74:	nop
   5ea78:	mrs	x0, fpcr
   5ea7c:	fmov	x0, d0
   5ea80:	ubfx	x1, x0, #52, #11
   5ea84:	lsr	x4, x0, #63
   5ea88:	add	x2, x1, #0x1
   5ea8c:	and	w4, w4, #0xff
   5ea90:	tst	x2, #0x7fe
   5ea94:	ubfx	x0, x0, #0, #52
   5ea98:	b.eq	5eacc <mpfr_free_pool@@Base+0x227c>  // b.none
   5ea9c:	lsr	x5, x0, #4
   5eaa0:	mov	x3, #0x0                   	// #0
   5eaa4:	and	x5, x5, #0xffffffffffff
   5eaa8:	mov	w2, #0x3c00                	// #15360
   5eaac:	add	w1, w1, w2
   5eab0:	lsl	x0, x0, #60
   5eab4:	bfxil	x3, x5, #0, #48
   5eab8:	fmov	d0, x0
   5eabc:	bfi	x3, x1, #48, #15
   5eac0:	bfi	x3, x4, #63, #1
   5eac4:	fmov	v0.d[1], x3
   5eac8:	ret
   5eacc:	cbnz	x1, 5eb20 <mpfr_free_pool@@Base+0x22d0>
   5ead0:	cbz	x0, 5eb6c <mpfr_free_pool@@Base+0x231c>
   5ead4:	clz	x2, x0
   5ead8:	cmp	w2, #0xe
   5eadc:	b.gt	5ebb8 <mpfr_free_pool@@Base+0x2368>
   5eae0:	add	w1, w2, #0x31
   5eae4:	mov	w5, #0xf                   	// #15
   5eae8:	sub	w5, w5, w2
   5eaec:	lsr	x5, x0, x5
   5eaf0:	lsl	x0, x0, x1
   5eaf4:	and	x5, x5, #0xffffffffffff
   5eaf8:	mov	w1, #0x3c0c                	// #15372
   5eafc:	mov	x3, #0x0                   	// #0
   5eb00:	sub	w1, w1, w2
   5eb04:	and	w1, w1, #0x7fff
   5eb08:	bfxil	x3, x5, #0, #48
   5eb0c:	fmov	d0, x0
   5eb10:	bfi	x3, x1, #48, #15
   5eb14:	bfi	x3, x4, #63, #1
   5eb18:	fmov	v0.d[1], x3
   5eb1c:	ret
   5eb20:	cbz	x0, 5eb90 <mpfr_free_pool@@Base+0x2340>
   5eb24:	lsr	x1, x0, #4
   5eb28:	mov	x3, #0x0                   	// #0
   5eb2c:	orr	x1, x1, #0x800000000000
   5eb30:	lsl	x2, x0, #60
   5eb34:	fmov	d0, x2
   5eb38:	bfxil	x3, x1, #0, #48
   5eb3c:	orr	x3, x3, #0x7fff000000000000
   5eb40:	bfi	x3, x4, #63, #1
   5eb44:	fmov	v0.d[1], x3
   5eb48:	tbnz	x0, #51, 5ebb4 <mpfr_free_pool@@Base+0x2364>
   5eb4c:	stp	x29, x30, [sp, #-32]!
   5eb50:	mov	w0, #0x1                   	// #1
   5eb54:	mov	x29, sp
   5eb58:	str	q0, [sp, #16]
   5eb5c:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5eb60:	ldr	q0, [sp, #16]
   5eb64:	ldp	x29, x30, [sp], #32
   5eb68:	ret
   5eb6c:	mov	x5, #0x0                   	// #0
   5eb70:	mov	x3, #0x0                   	// #0
   5eb74:	bfxil	x3, x5, #0, #48
   5eb78:	mov	w1, #0x0                   	// #0
   5eb7c:	fmov	d0, x0
   5eb80:	bfi	x3, x1, #48, #15
   5eb84:	bfi	x3, x4, #63, #1
   5eb88:	fmov	v0.d[1], x3
   5eb8c:	ret
   5eb90:	mov	x5, #0x0                   	// #0
   5eb94:	mov	x3, #0x0                   	// #0
   5eb98:	bfxil	x3, x5, #0, #48
   5eb9c:	mov	w1, #0x7fff                	// #32767
   5eba0:	fmov	d0, x0
   5eba4:	bfi	x3, x1, #48, #15
   5eba8:	bfi	x3, x4, #63, #1
   5ebac:	fmov	v0.d[1], x3
   5ebb0:	ret
   5ebb4:	ret
   5ebb8:	sub	w5, w2, #0xf
   5ebbc:	lsl	x5, x0, x5
   5ebc0:	mov	x0, #0x0                   	// #0
   5ebc4:	b	5eaf4 <mpfr_free_pool@@Base+0x22a4>
   5ebc8:	stp	x29, x30, [sp, #-48]!
   5ebcc:	mov	x29, sp
   5ebd0:	str	x19, [sp, #16]
   5ebd4:	str	q0, [sp, #32]
   5ebd8:	ldp	x3, x0, [sp, #32]
   5ebdc:	mrs	x6, fpcr
   5ebe0:	ubfx	x2, x0, #48, #15
   5ebe4:	lsr	x4, x0, #63
   5ebe8:	add	x1, x2, #0x1
   5ebec:	ubfiz	x0, x0, #3, #48
   5ebf0:	tst	x1, #0x7ffe
   5ebf4:	and	w4, w4, #0xff
   5ebf8:	orr	x0, x0, x3, lsr #61
   5ebfc:	lsl	x5, x3, #3
   5ec00:	b.eq	5ec80 <mpfr_free_pool@@Base+0x2430>  // b.none
   5ec04:	mov	x1, #0xffffffffffffc400    	// #-15360
   5ec08:	add	x2, x2, x1
   5ec0c:	cmp	x2, #0x7fe
   5ec10:	b.le	5ecc4 <mpfr_free_pool@@Base+0x2474>
   5ec14:	ands	x0, x6, #0xc00000
   5ec18:	b.eq	5ed5c <mpfr_free_pool@@Base+0x250c>  // b.none
   5ec1c:	cmp	x0, #0x400, lsl #12
   5ec20:	b.eq	5ee90 <mpfr_free_pool@@Base+0x2640>  // b.none
   5ec24:	cmp	x0, #0x800, lsl #12
   5ec28:	csel	w7, w4, wzr, eq  // eq = none
   5ec2c:	cbnz	w7, 5ed5c <mpfr_free_pool@@Base+0x250c>
   5ec30:	mov	x1, #0xffffffffffffffff    	// #-1
   5ec34:	mov	x2, #0x7fe                 	// #2046
   5ec38:	mov	w0, #0x14                  	// #20
   5ec3c:	b.ne	5ed08 <mpfr_free_pool@@Base+0x24b8>  // b.any
   5ec40:	cmp	w4, #0x0
   5ec44:	add	x3, x1, #0x8
   5ec48:	csel	x1, x3, x1, ne  // ne = any
   5ec4c:	and	x3, x1, #0x80000000000000
   5ec50:	cbnz	w7, 5ed10 <mpfr_free_pool@@Base+0x24c0>
   5ec54:	cbnz	x3, 5ed18 <mpfr_free_pool@@Base+0x24c8>
   5ec58:	lsr	x1, x1, #3
   5ec5c:	and	w3, w2, #0x7ff
   5ec60:	and	x4, x4, #0xff
   5ec64:	bfi	x1, x3, #52, #12
   5ec68:	orr	x19, x1, x4, lsl #63
   5ec6c:	bl	5eed8 <mpfr_free_pool@@Base+0x2688>
   5ec70:	fmov	d0, x19
   5ec74:	ldr	x19, [sp, #16]
   5ec78:	ldp	x29, x30, [sp], #48
   5ec7c:	ret
   5ec80:	orr	x1, x0, x5
   5ec84:	cbnz	x2, 5ecb8 <mpfr_free_pool@@Base+0x2468>
   5ec88:	cbnz	x1, 5ed34 <mpfr_free_pool@@Base+0x24e4>
   5ec8c:	mov	w0, #0x0                   	// #0
   5ec90:	and	w2, w2, #0x7ff
   5ec94:	mov	x1, #0x0                   	// #0
   5ec98:	and	x4, x4, #0xff
   5ec9c:	bfi	x1, x2, #52, #12
   5eca0:	orr	x19, x1, x4, lsl #63
   5eca4:	cbnz	w0, 5ec6c <mpfr_free_pool@@Base+0x241c>
   5eca8:	fmov	d0, x19
   5ecac:	ldr	x19, [sp, #16]
   5ecb0:	ldp	x29, x30, [sp], #48
   5ecb4:	ret
   5ecb8:	cbnz	x1, 5ed68 <mpfr_free_pool@@Base+0x2518>
   5ecbc:	mov	x2, #0x7ff                 	// #2047
   5ecc0:	b	5ec8c <mpfr_free_pool@@Base+0x243c>
   5ecc4:	cmp	x2, #0x0
   5ecc8:	b.le	5ed90 <mpfr_free_pool@@Base+0x2540>
   5eccc:	cmp	xzr, x3, lsl #7
   5ecd0:	mov	w7, #0x0                   	// #0
   5ecd4:	cset	x1, ne  // ne = any
   5ecd8:	orr	x5, x1, x5, lsr #60
   5ecdc:	orr	x1, x5, x0, lsl #4
   5ece0:	mov	w0, #0x0                   	// #0
   5ece4:	tst	x5, #0x7
   5ece8:	b.eq	5ee48 <mpfr_free_pool@@Base+0x25f8>  // b.none
   5ecec:	and	x3, x6, #0xc00000
   5ecf0:	cmp	x3, #0x400, lsl #12
   5ecf4:	b.eq	5ed4c <mpfr_free_pool@@Base+0x24fc>  // b.none
   5ecf8:	cmp	x3, #0x800, lsl #12
   5ecfc:	mov	w0, #0x10                  	// #16
   5ed00:	b.eq	5ec40 <mpfr_free_pool@@Base+0x23f0>  // b.none
   5ed04:	cbz	x3, 5ee54 <mpfr_free_pool@@Base+0x2604>
   5ed08:	and	x3, x1, #0x80000000000000
   5ed0c:	cbz	w7, 5ed14 <mpfr_free_pool@@Base+0x24c4>
   5ed10:	orr	w0, w0, #0x8
   5ed14:	cbz	x3, 5ee48 <mpfr_free_pool@@Base+0x25f8>
   5ed18:	cmp	x2, #0x7fe
   5ed1c:	add	x2, x2, #0x1
   5ed20:	b.eq	5edf0 <mpfr_free_pool@@Base+0x25a0>  // b.none
   5ed24:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   5ed28:	and	w2, w2, #0x7ff
   5ed2c:	and	x1, x3, x1, lsr #3
   5ed30:	b	5ec98 <mpfr_free_pool@@Base+0x2448>
   5ed34:	and	x3, x6, #0xc00000
   5ed38:	mov	w7, #0x1                   	// #1
   5ed3c:	cmp	x3, #0x400, lsl #12
   5ed40:	mov	x2, #0x0                   	// #0
   5ed44:	mov	x1, #0x1                   	// #1
   5ed48:	b.ne	5ecf8 <mpfr_free_pool@@Base+0x24a8>  // b.any
   5ed4c:	cbnz	w4, 5ed54 <mpfr_free_pool@@Base+0x2504>
   5ed50:	add	x1, x1, #0x8
   5ed54:	mov	w0, #0x10                  	// #16
   5ed58:	b	5ec4c <mpfr_free_pool@@Base+0x23fc>
   5ed5c:	mov	x2, #0x7ff                 	// #2047
   5ed60:	mov	w0, #0x14                  	// #20
   5ed64:	b	5ec90 <mpfr_free_pool@@Base+0x2440>
   5ed68:	mov	x3, #0x7fff                	// #32767
   5ed6c:	extr	x1, x0, x5, #60
   5ed70:	lsr	x0, x0, #50
   5ed74:	cmp	x2, x3
   5ed78:	lsr	x1, x1, #3
   5ed7c:	eor	w0, w0, #0x1
   5ed80:	orr	x1, x1, #0x8000000000000
   5ed84:	csel	w0, w0, wzr, eq  // eq = none
   5ed88:	mov	w2, #0x7ff                 	// #2047
   5ed8c:	b	5ec98 <mpfr_free_pool@@Base+0x2448>
   5ed90:	cmn	x2, #0x34
   5ed94:	b.lt	5ed34 <mpfr_free_pool@@Base+0x24e4>  // b.tstop
   5ed98:	mov	x3, #0x3d                  	// #61
   5ed9c:	sub	x7, x3, x2
   5eda0:	orr	x0, x0, #0x8000000000000
   5eda4:	cmp	x7, #0x3f
   5eda8:	b.le	5ee68 <mpfr_free_pool@@Base+0x2618>
   5edac:	add	w1, w2, #0x43
   5edb0:	cmp	x7, #0x40
   5edb4:	mov	w3, #0xfffffffd            	// #-3
   5edb8:	sub	w2, w3, w2
   5edbc:	lsl	x1, x0, x1
   5edc0:	orr	x1, x5, x1
   5edc4:	csel	x5, x1, x5, ne  // ne = any
   5edc8:	lsr	x0, x0, x2
   5edcc:	cmp	x5, #0x0
   5edd0:	cset	x1, ne  // ne = any
   5edd4:	orr	x1, x1, x0
   5edd8:	cmp	x1, #0x0
   5eddc:	cset	w7, ne  // ne = any
   5ede0:	tst	x1, #0x7
   5ede4:	b.eq	5ee2c <mpfr_free_pool@@Base+0x25dc>  // b.none
   5ede8:	mov	x2, #0x0                   	// #0
   5edec:	b	5ecec <mpfr_free_pool@@Base+0x249c>
   5edf0:	mov	w3, w2
   5edf4:	ands	x1, x6, #0xc00000
   5edf8:	b.eq	5ee20 <mpfr_free_pool@@Base+0x25d0>  // b.none
   5edfc:	cmp	x1, #0x400, lsl #12
   5ee00:	b.eq	5eea8 <mpfr_free_pool@@Base+0x2658>  // b.none
   5ee04:	cmp	x1, #0x800, lsl #12
   5ee08:	mov	w5, #0x7fe                 	// #2046
   5ee0c:	csel	w1, w4, wzr, eq  // eq = none
   5ee10:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5ee14:	cmp	w1, #0x0
   5ee18:	csel	w3, w3, w5, ne  // ne = any
   5ee1c:	csel	x1, xzr, x2, ne  // ne = any
   5ee20:	mov	w2, #0x14                  	// #20
   5ee24:	orr	w0, w0, w2
   5ee28:	b	5ec60 <mpfr_free_pool@@Base+0x2410>
   5ee2c:	and	x3, x1, #0x80000000000000
   5ee30:	cbnz	x1, 5eec0 <mpfr_free_pool@@Base+0x2670>
   5ee34:	nop
   5ee38:	mov	w0, #0x0                   	// #0
   5ee3c:	mov	x2, #0x1                   	// #1
   5ee40:	cbnz	x3, 5ed24 <mpfr_free_pool@@Base+0x24d4>
   5ee44:	mov	x2, #0x0                   	// #0
   5ee48:	lsr	x1, x1, #3
   5ee4c:	and	w2, w2, #0x7ff
   5ee50:	b	5ec98 <mpfr_free_pool@@Base+0x2448>
   5ee54:	and	x3, x1, #0xf
   5ee58:	cmp	x3, #0x4
   5ee5c:	add	x3, x1, #0x4
   5ee60:	csel	x1, x3, x1, ne  // ne = any
   5ee64:	b	5ec4c <mpfr_free_pool@@Base+0x23fc>
   5ee68:	add	w1, w2, #0x3
   5ee6c:	sub	w2, w3, w2
   5ee70:	lsl	x3, x5, x1
   5ee74:	cmp	x3, #0x0
   5ee78:	cset	x3, ne  // ne = any
   5ee7c:	lsr	x2, x5, x2
   5ee80:	orr	x2, x2, x3
   5ee84:	lsl	x0, x0, x1
   5ee88:	orr	x1, x0, x2
   5ee8c:	b	5edd8 <mpfr_free_pool@@Base+0x2588>
   5ee90:	cbz	w4, 5ed5c <mpfr_free_pool@@Base+0x250c>
   5ee94:	mov	x1, #0xffffffffffffffff    	// #-1
   5ee98:	mov	x2, #0x7fe                 	// #2046
   5ee9c:	mov	w7, #0x0                   	// #0
   5eea0:	mov	w0, #0x14                  	// #20
   5eea4:	b	5ec4c <mpfr_free_pool@@Base+0x23fc>
   5eea8:	cmp	w4, #0x0
   5eeac:	mov	w1, #0x7fe                 	// #2046
   5eeb0:	csel	w3, w2, w1, eq  // eq = none
   5eeb4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5eeb8:	csel	x1, xzr, x2, eq  // eq = none
   5eebc:	b	5ee20 <mpfr_free_pool@@Base+0x25d0>
   5eec0:	tbz	w6, #11, 5ee38 <mpfr_free_pool@@Base+0x25e8>
   5eec4:	mov	w0, #0x0                   	// #0
   5eec8:	mov	x2, #0x0                   	// #0
   5eecc:	orr	w0, w0, #0x8
   5eed0:	b	5ed14 <mpfr_free_pool@@Base+0x24c4>
   5eed4:	nop
   5eed8:	tbz	w0, #0, 5eee8 <mpfr_free_pool@@Base+0x2698>
   5eedc:	movi	v1.2s, #0x0
   5eee0:	fdiv	s0, s1, s1
   5eee4:	mrs	x1, fpsr
   5eee8:	tbz	w0, #1, 5eefc <mpfr_free_pool@@Base+0x26ac>
   5eeec:	fmov	s1, #1.000000000000000000e+00
   5eef0:	movi	v2.2s, #0x0
   5eef4:	fdiv	s0, s1, s2
   5eef8:	mrs	x1, fpsr
   5eefc:	tbz	w0, #2, 5ef1c <mpfr_free_pool@@Base+0x26cc>
   5ef00:	mov	w2, #0xc5ae                	// #50606
   5ef04:	mov	w1, #0x7f7fffff            	// #2139095039
   5ef08:	movk	w2, #0x749d, lsl #16
   5ef0c:	fmov	s1, w1
   5ef10:	fmov	s2, w2
   5ef14:	fadd	s0, s1, s2
   5ef18:	mrs	x1, fpsr
   5ef1c:	tbz	w0, #3, 5ef2c <mpfr_free_pool@@Base+0x26dc>
   5ef20:	movi	v1.2s, #0x80, lsl #16
   5ef24:	fmul	s0, s1, s1
   5ef28:	mrs	x1, fpsr
   5ef2c:	tbz	w0, #4, 5ef44 <mpfr_free_pool@@Base+0x26f4>
   5ef30:	mov	w0, #0x7f7fffff            	// #2139095039
   5ef34:	fmov	s2, #1.000000000000000000e+00
   5ef38:	fmov	s1, w0
   5ef3c:	fsub	s0, s1, s2
   5ef40:	mrs	x0, fpsr
   5ef44:	ret

Disassembly of section .fini:

000000000005ef48 <.fini>:
   5ef48:	stp	x29, x30, [sp, #-16]!
   5ef4c:	mov	x29, sp
   5ef50:	ldp	x29, x30, [sp], #16
   5ef54:	ret
