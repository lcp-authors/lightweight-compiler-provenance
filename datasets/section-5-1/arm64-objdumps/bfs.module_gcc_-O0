
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bfs.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fs_register>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_fs_register>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...

0000000000000038 <grub_fs_unregister>:
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret

0000000000000058 <grub_memcpy>:
      58:	stp	x29, x30, [sp, #-48]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #40]
      64:	str	x1, [sp, #32]
      68:	str	x2, [sp, #24]
      6c:	ldr	x2, [sp, #24]
      70:	ldr	x1, [sp, #32]
      74:	ldr	x0, [sp, #40]
      78:	bl	0 <grub_memmove>
      7c:	ldp	x29, x30, [sp], #48
      80:	ret

0000000000000084 <read_extent>:
      84:	stp	x29, x30, [sp, #-80]!
      88:	mov	x29, sp
      8c:	str	x0, [sp, #72]
      90:	str	x1, [sp, #64]
      94:	str	x2, [sp, #56]
      98:	str	x3, [sp, #48]
      9c:	str	x4, [sp, #40]
      a0:	str	x5, [sp, #32]
      a4:	str	x6, [sp, #24]
      a8:	ldr	x0, [sp, #56]
      ac:	ldr	w1, [x0]
      b0:	ldr	x0, [sp, #64]
      b4:	ldr	w0, [x0, #76]
      b8:	lsl	w0, w1, w0
      bc:	ldr	x1, [sp, #56]
      c0:	ldrh	w1, [x1, #4]
      c4:	add	w0, w0, w1
      c8:	mov	w1, w0
      cc:	ldr	x0, [sp, #48]
      d0:	add	x1, x1, x0
      d4:	ldr	x0, [sp, #64]
      d8:	ldr	w0, [x0, #44]
      dc:	sub	w0, w0, #0x9
      e0:	lsl	x0, x1, x0
      e4:	ldr	x4, [sp, #32]
      e8:	ldr	x3, [sp, #24]
      ec:	ldr	x2, [sp, #40]
      f0:	mov	x1, x0
      f4:	ldr	x0, [sp, #72]
      f8:	bl	0 <grub_disk_read>
      fc:	ldp	x29, x30, [sp], #80
     100:	ret

0000000000000104 <read_bfs_file>:
     104:	stp	x29, x30, [sp, #-272]!
     108:	mov	x29, sp
     10c:	str	x0, [sp, #72]
     110:	str	x1, [sp, #64]
     114:	str	x2, [sp, #56]
     118:	str	x3, [sp, #48]
     11c:	str	x4, [sp, #40]
     120:	str	x5, [sp, #32]
     124:	str	x6, [sp, #24]
     128:	str	x7, [sp, #16]
     12c:	ldr	x0, [sp, #32]
     130:	cmp	x0, #0x0
     134:	b.ne	140 <read_bfs_file+0x3c>  // b.any
     138:	mov	w0, #0x0                   	// #0
     13c:	b	90c <read_bfs_file+0x808>
     140:	ldr	x1, [sp, #48]
     144:	ldr	x0, [sp, #32]
     148:	add	x1, x1, x0
     14c:	ldr	x0, [sp, #56]
     150:	ldr	x0, [x0, #208]
     154:	cmp	x1, x0
     158:	b.ls	174 <read_bfs_file+0x70>  // b.plast
     15c:	adrp	x0, 0 <grub_fs_register>
     160:	add	x0, x0, #0x0
     164:	ldr	x1, [x0]
     168:	mov	w0, #0xb                   	// #11
     16c:	bl	0 <grub_error>
     170:	b	90c <read_bfs_file+0x808>
     174:	ldr	x0, [sp, #56]
     178:	ldr	x0, [x0, #168]
     17c:	ldr	x1, [sp, #48]
     180:	cmp	x1, x0
     184:	b.cs	2dc <read_bfs_file+0x1d8>  // b.hs, b.nlast
     188:	str	xzr, [sp, #256]
     18c:	str	wzr, [sp, #268]
     190:	b	2d0 <read_bfs_file+0x1cc>
     194:	ldr	x1, [sp, #56]
     198:	ldr	w0, [sp, #268]
     19c:	add	x0, x0, #0x8
     1a0:	lsl	x0, x0, #3
     1a4:	add	x0, x1, x0
     1a8:	ldrh	w0, [x0, #14]
     1ac:	and	x1, x0, #0xffff
     1b0:	ldr	x0, [sp, #64]
     1b4:	ldr	w0, [x0, #44]
     1b8:	lsl	x0, x1, x0
     1bc:	ldr	x1, [sp, #256]
     1c0:	add	x0, x1, x0
     1c4:	str	x0, [sp, #192]
     1c8:	ldr	x1, [sp, #192]
     1cc:	ldr	x0, [sp, #48]
     1d0:	cmp	x1, x0
     1d4:	b.ls	2bc <read_bfs_file+0x1b8>  // b.plast
     1d8:	ldr	x1, [sp, #192]
     1dc:	ldr	x0, [sp, #48]
     1e0:	sub	x0, x1, x0
     1e4:	str	x0, [sp, #248]
     1e8:	ldr	x1, [sp, #248]
     1ec:	ldr	x0, [sp, #32]
     1f0:	cmp	x1, x0
     1f4:	b.ls	200 <read_bfs_file+0xfc>  // b.plast
     1f8:	ldr	x0, [sp, #32]
     1fc:	str	x0, [sp, #248]
     200:	ldr	x0, [sp, #72]
     204:	ldr	x1, [sp, #24]
     208:	str	x1, [x0, #48]
     20c:	ldr	x0, [sp, #72]
     210:	ldr	x1, [sp, #16]
     214:	str	x1, [x0, #56]
     218:	ldr	w0, [sp, #268]
     21c:	add	x0, x0, #0x8
     220:	lsl	x0, x0, #3
     224:	ldr	x1, [sp, #56]
     228:	add	x0, x1, x0
     22c:	add	x2, x0, #0x8
     230:	ldr	x1, [sp, #48]
     234:	ldr	x0, [sp, #256]
     238:	sub	x0, x1, x0
     23c:	ldr	x6, [sp, #248]
     240:	ldr	x5, [sp, #40]
     244:	mov	x4, x0
     248:	mov	x3, #0x0                   	// #0
     24c:	ldr	x1, [sp, #64]
     250:	ldr	x0, [sp, #72]
     254:	bl	84 <read_extent>
     258:	str	w0, [sp, #188]
     25c:	ldr	x0, [sp, #72]
     260:	str	xzr, [x0, #48]
     264:	ldr	w0, [sp, #188]
     268:	cmp	w0, #0x0
     26c:	b.eq	278 <read_bfs_file+0x174>  // b.none
     270:	ldr	w0, [sp, #188]
     274:	b	90c <read_bfs_file+0x808>
     278:	ldr	x1, [sp, #48]
     27c:	ldr	x0, [sp, #248]
     280:	add	x0, x1, x0
     284:	str	x0, [sp, #48]
     288:	ldr	x1, [sp, #32]
     28c:	ldr	x0, [sp, #248]
     290:	sub	x0, x1, x0
     294:	str	x0, [sp, #32]
     298:	ldr	x1, [sp, #40]
     29c:	ldr	x0, [sp, #248]
     2a0:	add	x0, x1, x0
     2a4:	str	x0, [sp, #40]
     2a8:	ldr	x0, [sp, #32]
     2ac:	cmp	x0, #0x0
     2b0:	b.ne	2bc <read_bfs_file+0x1b8>  // b.any
     2b4:	mov	w0, #0x0                   	// #0
     2b8:	b	90c <read_bfs_file+0x808>
     2bc:	ldr	x0, [sp, #192]
     2c0:	str	x0, [sp, #256]
     2c4:	ldr	w0, [sp, #268]
     2c8:	add	w0, w0, #0x1
     2cc:	str	w0, [sp, #268]
     2d0:	ldr	w0, [sp, #268]
     2d4:	cmp	w0, #0xb
     2d8:	b.ls	194 <read_bfs_file+0x90>  // b.plast
     2dc:	ldr	x0, [sp, #56]
     2e0:	ldr	x0, [x0, #168]
     2e4:	ldr	x1, [sp, #48]
     2e8:	cmp	x1, x0
     2ec:	b.cs	308 <read_bfs_file+0x204>  // b.hs, b.nlast
     2f0:	adrp	x0, 0 <grub_fs_register>
     2f4:	add	x0, x0, #0x0
     2f8:	ldr	x1, [x0]
     2fc:	mov	w0, #0x9                   	// #9
     300:	bl	0 <grub_error>
     304:	b	90c <read_bfs_file+0x808>
     308:	ldr	x0, [sp, #56]
     30c:	ldr	x0, [x0, #184]
     310:	ldr	x1, [sp, #48]
     314:	cmp	x1, x0
     318:	b.cs	50c <read_bfs_file+0x408>  // b.hs, b.nlast
     31c:	ldr	x0, [sp, #56]
     320:	ldr	x0, [x0, #168]
     324:	str	x0, [sp, #232]
     328:	ldr	x0, [sp, #56]
     32c:	ldrh	w0, [x0, #182]
     330:	and	x1, x0, #0xffff
     334:	ldr	x0, [sp, #64]
     338:	ldr	w0, [x0, #44]
     33c:	sub	w0, w0, #0x3
     340:	lsl	x0, x1, x0
     344:	str	x0, [sp, #176]
     348:	ldr	x0, [sp, #176]
     34c:	lsl	x0, x0, #3
     350:	bl	0 <grub_malloc>
     354:	str	x0, [sp, #168]
     358:	ldr	x0, [sp, #168]
     35c:	cmp	x0, #0x0
     360:	b.ne	378 <read_bfs_file+0x274>  // b.any
     364:	adrp	x0, 0 <grub_fs_register>
     368:	add	x0, x0, #0x0
     36c:	ldr	x0, [x0]
     370:	ldr	w0, [x0]
     374:	b	90c <read_bfs_file+0x808>
     378:	ldr	x0, [sp, #56]
     37c:	add	x1, x0, #0xb0
     380:	ldr	x0, [sp, #176]
     384:	lsl	x0, x0, #3
     388:	mov	x6, x0
     38c:	ldr	x5, [sp, #168]
     390:	mov	x4, #0x0                   	// #0
     394:	mov	x3, #0x0                   	// #0
     398:	mov	x2, x1
     39c:	ldr	x1, [sp, #64]
     3a0:	ldr	x0, [sp, #72]
     3a4:	bl	84 <read_extent>
     3a8:	str	w0, [sp, #164]
     3ac:	str	wzr, [sp, #244]
     3b0:	b	4f4 <read_bfs_file+0x3f0>
     3b4:	ldr	w0, [sp, #244]
     3b8:	lsl	x0, x0, #3
     3bc:	ldr	x1, [sp, #168]
     3c0:	add	x0, x1, x0
     3c4:	ldrh	w0, [x0, #6]
     3c8:	and	x1, x0, #0xffff
     3cc:	ldr	x0, [sp, #64]
     3d0:	ldr	w0, [x0, #44]
     3d4:	lsl	x0, x1, x0
     3d8:	ldr	x1, [sp, #232]
     3dc:	add	x0, x1, x0
     3e0:	str	x0, [sp, #152]
     3e4:	ldr	x1, [sp, #152]
     3e8:	ldr	x0, [sp, #48]
     3ec:	cmp	x1, x0
     3f0:	b.ls	4e0 <read_bfs_file+0x3dc>  // b.plast
     3f4:	ldr	x1, [sp, #152]
     3f8:	ldr	x0, [sp, #48]
     3fc:	sub	x0, x1, x0
     400:	str	x0, [sp, #224]
     404:	ldr	x1, [sp, #224]
     408:	ldr	x0, [sp, #32]
     40c:	cmp	x1, x0
     410:	b.ls	41c <read_bfs_file+0x318>  // b.plast
     414:	ldr	x0, [sp, #32]
     418:	str	x0, [sp, #224]
     41c:	ldr	x0, [sp, #72]
     420:	ldr	x1, [sp, #24]
     424:	str	x1, [x0, #48]
     428:	ldr	x0, [sp, #72]
     42c:	ldr	x1, [sp, #16]
     430:	str	x1, [x0, #56]
     434:	ldr	w0, [sp, #244]
     438:	lsl	x0, x0, #3
     43c:	ldr	x1, [sp, #168]
     440:	add	x2, x1, x0
     444:	ldr	x1, [sp, #48]
     448:	ldr	x0, [sp, #232]
     44c:	sub	x0, x1, x0
     450:	ldr	x6, [sp, #224]
     454:	ldr	x5, [sp, #40]
     458:	mov	x4, x0
     45c:	mov	x3, #0x0                   	// #0
     460:	ldr	x1, [sp, #64]
     464:	ldr	x0, [sp, #72]
     468:	bl	84 <read_extent>
     46c:	str	w0, [sp, #164]
     470:	ldr	x0, [sp, #72]
     474:	str	xzr, [x0, #48]
     478:	ldr	w0, [sp, #164]
     47c:	cmp	w0, #0x0
     480:	b.eq	494 <read_bfs_file+0x390>  // b.none
     484:	ldr	x0, [sp, #168]
     488:	bl	0 <grub_free>
     48c:	ldr	w0, [sp, #164]
     490:	b	90c <read_bfs_file+0x808>
     494:	ldr	x1, [sp, #48]
     498:	ldr	x0, [sp, #224]
     49c:	add	x0, x1, x0
     4a0:	str	x0, [sp, #48]
     4a4:	ldr	x1, [sp, #32]
     4a8:	ldr	x0, [sp, #224]
     4ac:	sub	x0, x1, x0
     4b0:	str	x0, [sp, #32]
     4b4:	ldr	x1, [sp, #40]
     4b8:	ldr	x0, [sp, #224]
     4bc:	add	x0, x1, x0
     4c0:	str	x0, [sp, #40]
     4c4:	ldr	x0, [sp, #32]
     4c8:	cmp	x0, #0x0
     4cc:	b.ne	4e0 <read_bfs_file+0x3dc>  // b.any
     4d0:	ldr	x0, [sp, #168]
     4d4:	bl	0 <grub_free>
     4d8:	mov	w0, #0x0                   	// #0
     4dc:	b	90c <read_bfs_file+0x808>
     4e0:	ldr	x0, [sp, #152]
     4e4:	str	x0, [sp, #232]
     4e8:	ldr	w0, [sp, #244]
     4ec:	add	w0, w0, #0x1
     4f0:	str	w0, [sp, #244]
     4f4:	ldr	w0, [sp, #244]
     4f8:	ldr	x1, [sp, #176]
     4fc:	cmp	x1, x0
     500:	b.hi	3b4 <read_bfs_file+0x2b0>  // b.pmore
     504:	ldr	x0, [sp, #168]
     508:	bl	0 <grub_free>
     50c:	ldr	x0, [sp, #56]
     510:	ldr	x0, [x0, #184]
     514:	ldr	x1, [sp, #48]
     518:	cmp	x1, x0
     51c:	b.cs	538 <read_bfs_file+0x434>  // b.hs, b.nlast
     520:	adrp	x0, 0 <grub_fs_register>
     524:	add	x0, x0, #0x0
     528:	ldr	x1, [x0]
     52c:	mov	w0, #0x9                   	// #9
     530:	bl	0 <grub_error>
     534:	b	90c <read_bfs_file+0x808>
     538:	mov	x0, #0xffffffffffffffff    	// #-1
     53c:	str	x0, [sp, #208]
     540:	ldr	x0, [sp, #56]
     544:	ldrh	w0, [x0, #198]
     548:	and	x1, x0, #0xffff
     54c:	ldr	x0, [sp, #64]
     550:	ldr	w0, [x0, #44]
     554:	sub	w0, w0, #0x3
     558:	lsl	x0, x1, x0
     55c:	str	x0, [sp, #144]
     560:	ldr	x0, [sp, #144]
     564:	lsl	x0, x0, #3
     568:	bl	0 <grub_malloc>
     56c:	str	x0, [sp, #136]
     570:	ldr	x0, [sp, #136]
     574:	cmp	x0, #0x0
     578:	b.ne	590 <read_bfs_file+0x48c>  // b.any
     57c:	adrp	x0, 0 <grub_fs_register>
     580:	add	x0, x0, #0x0
     584:	ldr	x0, [x0]
     588:	ldr	w0, [x0]
     58c:	b	90c <read_bfs_file+0x808>
     590:	str	xzr, [sp, #216]
     594:	ldr	x0, [sp, #64]
     598:	ldr	w0, [x0, #44]
     59c:	add	w0, w0, #0x2
     5a0:	mov	w1, #0x1                   	// #1
     5a4:	lsl	w0, w1, w0
     5a8:	sxtw	x0, w0
     5ac:	bl	0 <grub_malloc>
     5b0:	str	x0, [sp, #128]
     5b4:	ldr	x0, [sp, #128]
     5b8:	cmp	x0, #0x0
     5bc:	b.ne	5dc <read_bfs_file+0x4d8>  // b.any
     5c0:	ldr	x0, [sp, #136]
     5c4:	bl	0 <grub_free>
     5c8:	adrp	x0, 0 <grub_fs_register>
     5cc:	add	x0, x0, #0x0
     5d0:	ldr	x0, [x0]
     5d4:	ldr	w0, [x0]
     5d8:	b	90c <read_bfs_file+0x808>
     5dc:	ldr	x0, [sp, #56]
     5e0:	add	x1, x0, #0xc0
     5e4:	ldr	x0, [sp, #144]
     5e8:	lsl	x0, x0, #3
     5ec:	mov	x6, x0
     5f0:	ldr	x5, [sp, #136]
     5f4:	mov	x4, #0x0                   	// #0
     5f8:	mov	x3, #0x0                   	// #0
     5fc:	mov	x2, x1
     600:	ldr	x1, [sp, #64]
     604:	ldr	x0, [sp, #72]
     608:	bl	84 <read_extent>
     60c:	str	w0, [sp, #124]
     610:	ldr	w0, [sp, #124]
     614:	cmp	w0, #0x0
     618:	b.eq	8fc <read_bfs_file+0x7f8>  // b.none
     61c:	ldr	x0, [sp, #136]
     620:	bl	0 <grub_free>
     624:	ldr	x0, [sp, #128]
     628:	bl	0 <grub_free>
     62c:	ldr	w0, [sp, #124]
     630:	b	90c <read_bfs_file+0x808>
     634:	ldr	x0, [sp, #56]
     638:	ldr	x0, [x0, #184]
     63c:	ldr	x1, [sp, #48]
     640:	sub	x0, x1, x0
     644:	str	x0, [sp, #112]
     648:	ldr	x0, [sp, #64]
     64c:	ldr	w0, [x0, #44]
     650:	add	w0, w0, #0x2
     654:	mov	w1, #0x1                   	// #1
     658:	lsl	w0, w1, w0
     65c:	sub	w0, w0, #0x1
     660:	sxtw	x0, w0
     664:	ldr	x1, [sp, #112]
     668:	and	x0, x1, x0
     66c:	str	x0, [sp, #104]
     670:	ldr	x0, [sp, #64]
     674:	ldr	w0, [x0, #44]
     678:	add	w0, w0, #0x2
     67c:	ldr	x1, [sp, #112]
     680:	lsr	x1, x1, x0
     684:	ldr	x0, [sp, #64]
     688:	ldr	w0, [x0, #44]
     68c:	sub	w0, w0, #0x1
     690:	mov	w2, #0x1                   	// #1
     694:	lsl	w0, w2, w0
     698:	sub	w0, w0, #0x1
     69c:	sxtw	x0, w0
     6a0:	and	x0, x1, x0
     6a4:	str	x0, [sp, #96]
     6a8:	ldr	x0, [sp, #64]
     6ac:	ldr	w0, [x0, #44]
     6b0:	lsl	w0, w0, #1
     6b4:	add	w0, w0, #0x1
     6b8:	ldr	x1, [sp, #112]
     6bc:	lsr	x0, x1, x0
     6c0:	str	x0, [sp, #88]
     6c4:	ldr	x1, [sp, #88]
     6c8:	ldr	x0, [sp, #144]
     6cc:	cmp	x1, x0
     6d0:	b.ls	6fc <read_bfs_file+0x5f8>  // b.plast
     6d4:	ldr	x0, [sp, #136]
     6d8:	bl	0 <grub_free>
     6dc:	ldr	x0, [sp, #128]
     6e0:	bl	0 <grub_free>
     6e4:	adrp	x0, 0 <grub_fs_register>
     6e8:	add	x0, x0, #0x0
     6ec:	ldr	x1, [x0]
     6f0:	mov	w0, #0x9                   	// #9
     6f4:	bl	0 <grub_error>
     6f8:	b	90c <read_bfs_file+0x808>
     6fc:	ldr	x1, [sp, #88]
     700:	ldr	x0, [sp, #208]
     704:	cmp	x1, x0
     708:	b.eq	7e0 <read_bfs_file+0x6dc>  // b.none
     70c:	ldr	x0, [sp, #88]
     710:	lsl	x0, x0, #3
     714:	ldr	x1, [sp, #136]
     718:	add	x0, x1, x0
     71c:	ldrh	w0, [x0, #6]
     720:	and	x1, x0, #0xffff
     724:	ldr	x0, [sp, #64]
     728:	ldr	w0, [x0, #44]
     72c:	sub	w0, w0, #0x3
     730:	lsl	x0, x1, x0
     734:	str	x0, [sp, #216]
     738:	ldr	x0, [sp, #64]
     73c:	ldr	w0, [x0, #44]
     740:	sub	w0, w0, #0x1
     744:	mov	w1, #0x1                   	// #1
     748:	lsl	w0, w1, w0
     74c:	mov	w0, w0
     750:	ldr	x1, [sp, #216]
     754:	cmp	x1, x0
     758:	b.ls	778 <read_bfs_file+0x674>  // b.plast
     75c:	ldr	x0, [sp, #64]
     760:	ldr	w0, [x0, #44]
     764:	sub	w0, w0, #0x1
     768:	mov	w1, #0x1                   	// #1
     76c:	lsl	w0, w1, w0
     770:	sxtw	x0, w0
     774:	str	x0, [sp, #216]
     778:	ldr	x0, [sp, #88]
     77c:	lsl	x0, x0, #3
     780:	ldr	x1, [sp, #136]
     784:	add	x1, x1, x0
     788:	ldr	x0, [sp, #216]
     78c:	lsl	x0, x0, #3
     790:	mov	x6, x0
     794:	ldr	x5, [sp, #128]
     798:	mov	x4, #0x0                   	// #0
     79c:	mov	x3, #0x0                   	// #0
     7a0:	mov	x2, x1
     7a4:	ldr	x1, [sp, #64]
     7a8:	ldr	x0, [sp, #72]
     7ac:	bl	84 <read_extent>
     7b0:	str	w0, [sp, #124]
     7b4:	ldr	w0, [sp, #124]
     7b8:	cmp	w0, #0x0
     7bc:	b.eq	7d8 <read_bfs_file+0x6d4>  // b.none
     7c0:	ldr	x0, [sp, #136]
     7c4:	bl	0 <grub_free>
     7c8:	ldr	x0, [sp, #128]
     7cc:	bl	0 <grub_free>
     7d0:	ldr	w0, [sp, #124]
     7d4:	b	90c <read_bfs_file+0x808>
     7d8:	ldr	x0, [sp, #88]
     7dc:	str	x0, [sp, #208]
     7e0:	ldr	x1, [sp, #96]
     7e4:	ldr	x0, [sp, #216]
     7e8:	cmp	x1, x0
     7ec:	b.ls	818 <read_bfs_file+0x714>  // b.plast
     7f0:	ldr	x0, [sp, #136]
     7f4:	bl	0 <grub_free>
     7f8:	ldr	x0, [sp, #128]
     7fc:	bl	0 <grub_free>
     800:	adrp	x0, 0 <grub_fs_register>
     804:	add	x0, x0, #0x0
     808:	ldr	x1, [x0]
     80c:	mov	w0, #0x9                   	// #9
     810:	bl	0 <grub_error>
     814:	b	90c <read_bfs_file+0x808>
     818:	ldr	x0, [sp, #64]
     81c:	ldr	w0, [x0, #44]
     820:	add	w0, w0, #0x2
     824:	mov	w1, #0x1                   	// #1
     828:	lsl	w0, w1, w0
     82c:	sxtw	x1, w0
     830:	ldr	x0, [sp, #104]
     834:	sub	x0, x1, x0
     838:	str	x0, [sp, #200]
     83c:	ldr	x1, [sp, #200]
     840:	ldr	x0, [sp, #32]
     844:	cmp	x1, x0
     848:	b.ls	854 <read_bfs_file+0x750>  // b.plast
     84c:	ldr	x0, [sp, #32]
     850:	str	x0, [sp, #200]
     854:	ldr	x0, [sp, #72]
     858:	ldr	x1, [sp, #24]
     85c:	str	x1, [x0, #48]
     860:	ldr	x0, [sp, #72]
     864:	ldr	x1, [sp, #16]
     868:	str	x1, [x0, #56]
     86c:	ldr	x0, [sp, #96]
     870:	lsl	x0, x0, #3
     874:	ldr	x1, [sp, #128]
     878:	add	x0, x1, x0
     87c:	ldr	x6, [sp, #200]
     880:	ldr	x5, [sp, #40]
     884:	ldr	x4, [sp, #104]
     888:	mov	x3, #0x0                   	// #0
     88c:	mov	x2, x0
     890:	ldr	x1, [sp, #64]
     894:	ldr	x0, [sp, #72]
     898:	bl	84 <read_extent>
     89c:	str	w0, [sp, #124]
     8a0:	ldr	x0, [sp, #72]
     8a4:	str	xzr, [x0, #48]
     8a8:	ldr	w0, [sp, #124]
     8ac:	cmp	w0, #0x0
     8b0:	b.eq	8cc <read_bfs_file+0x7c8>  // b.none
     8b4:	ldr	x0, [sp, #136]
     8b8:	bl	0 <grub_free>
     8bc:	ldr	x0, [sp, #128]
     8c0:	bl	0 <grub_free>
     8c4:	ldr	w0, [sp, #124]
     8c8:	b	90c <read_bfs_file+0x808>
     8cc:	ldr	x1, [sp, #48]
     8d0:	ldr	x0, [sp, #200]
     8d4:	add	x0, x1, x0
     8d8:	str	x0, [sp, #48]
     8dc:	ldr	x1, [sp, #32]
     8e0:	ldr	x0, [sp, #200]
     8e4:	sub	x0, x1, x0
     8e8:	str	x0, [sp, #32]
     8ec:	ldr	x1, [sp, #40]
     8f0:	ldr	x0, [sp, #200]
     8f4:	add	x0, x1, x0
     8f8:	str	x0, [sp, #40]
     8fc:	ldr	x0, [sp, #32]
     900:	cmp	x0, #0x0
     904:	b.ne	634 <read_bfs_file+0x530>  // b.any
     908:	mov	w0, #0x0                   	// #0
     90c:	ldp	x29, x30, [sp], #272
     910:	ret
     914:	nop
	...

0000000000000940 <read_b_node>:
     940:	stp	x29, x30, [sp, #-144]!
     944:	mov	x29, sp
     948:	str	x0, [sp, #72]
     94c:	str	x1, [sp, #64]
     950:	str	x2, [sp, #56]
     954:	str	x3, [sp, #48]
     958:	str	x4, [sp, #40]
     95c:	str	x5, [sp, #32]
     960:	str	x6, [sp, #24]
     964:	str	x7, [sp, #16]
     968:	ldr	x0, [sp, #40]
     96c:	str	xzr, [x0]
     970:	ldr	x0, [sp, #32]
     974:	str	xzr, [x0]
     978:	ldr	x0, [sp, #24]
     97c:	str	xzr, [x0]
     980:	ldr	x0, [sp, #16]
     984:	str	xzr, [x0]
     988:	add	x0, sp, #0x58
     98c:	mov	x7, #0x0                   	// #0
     990:	mov	x6, #0x0                   	// #0
     994:	mov	x5, #0x1c                  	// #28
     998:	mov	x4, x0
     99c:	ldr	x3, [sp, #48]
     9a0:	ldr	x2, [sp, #56]
     9a4:	ldr	x1, [sp, #64]
     9a8:	ldr	x0, [sp, #72]
     9ac:	bl	104 <read_bfs_file>
     9b0:	str	w0, [sp, #140]
     9b4:	ldr	w0, [sp, #140]
     9b8:	cmp	w0, #0x0
     9bc:	b.eq	9c8 <read_b_node+0x88>  // b.none
     9c0:	ldr	w0, [sp, #140]
     9c4:	b	ac8 <read_b_node+0x188>
     9c8:	ldrh	w0, [sp, #114]
     9cc:	and	x0, x0, #0xffff
     9d0:	add	x0, x0, #0x23
     9d4:	and	x2, x0, #0xfffffffffffffff8
     9d8:	ldrh	w0, [sp, #112]
     9dc:	and	x1, x0, #0xffff
     9e0:	mov	x0, x1
     9e4:	lsl	x0, x0, #2
     9e8:	add	x0, x0, x1
     9ec:	lsl	x0, x0, #1
     9f0:	add	x0, x2, x0
     9f4:	str	x0, [sp, #128]
     9f8:	ldr	x0, [sp, #128]
     9fc:	bl	0 <grub_malloc>
     a00:	str	x0, [sp, #120]
     a04:	ldr	x0, [sp, #120]
     a08:	cmp	x0, #0x0
     a0c:	b.ne	a24 <read_b_node+0xe4>  // b.any
     a10:	adrp	x0, 0 <grub_fs_register>
     a14:	add	x0, x0, #0x0
     a18:	ldr	x0, [x0]
     a1c:	ldr	w0, [x0]
     a20:	b	ac8 <read_b_node+0x188>
     a24:	mov	x7, #0x0                   	// #0
     a28:	mov	x6, #0x0                   	// #0
     a2c:	ldr	x5, [sp, #128]
     a30:	ldr	x4, [sp, #120]
     a34:	ldr	x3, [sp, #48]
     a38:	ldr	x2, [sp, #56]
     a3c:	ldr	x1, [sp, #64]
     a40:	ldr	x0, [sp, #72]
     a44:	bl	104 <read_bfs_file>
     a48:	str	w0, [sp, #140]
     a4c:	ldr	w0, [sp, #140]
     a50:	cmp	w0, #0x0
     a54:	b.eq	a68 <read_b_node+0x128>  // b.none
     a58:	ldr	x0, [sp, #120]
     a5c:	bl	0 <grub_free>
     a60:	ldr	w0, [sp, #140]
     a64:	b	ac8 <read_b_node+0x188>
     a68:	ldr	x0, [sp, #40]
     a6c:	ldr	x1, [sp, #120]
     a70:	str	x1, [x0]
     a74:	ldr	x0, [sp, #120]
     a78:	add	x1, x0, #0x1c
     a7c:	ldr	x0, [sp, #32]
     a80:	str	x1, [x0]
     a84:	ldrh	w0, [sp, #114]
     a88:	and	x0, x0, #0xffff
     a8c:	add	x0, x0, #0x23
     a90:	and	x0, x0, #0xfffffffffffffff8
     a94:	ldr	x1, [sp, #120]
     a98:	add	x1, x1, x0
     a9c:	ldr	x0, [sp, #24]
     aa0:	str	x1, [x0]
     aa4:	ldr	x0, [sp, #24]
     aa8:	ldr	x1, [x0]
     aac:	ldrh	w0, [sp, #112]
     ab0:	and	x0, x0, #0xffff
     ab4:	lsl	x0, x0, #1
     ab8:	add	x1, x1, x0
     abc:	ldr	x0, [sp, #16]
     ac0:	str	x1, [x0]
     ac4:	mov	w0, #0x0                   	// #0
     ac8:	ldp	x29, x30, [sp], #144
     acc:	ret
	...

0000000000000ad8 <iterate_in_b_tree>:
     ad8:	stp	x29, x30, [sp, #-208]!
     adc:	mov	x29, sp
     ae0:	str	x0, [sp, #56]
     ae4:	str	x1, [sp, #48]
     ae8:	str	x2, [sp, #40]
     aec:	str	x3, [sp, #32]
     af0:	str	x4, [sp, #24]
     af4:	add	x0, sp, #0x90
     af8:	mov	x7, #0x0                   	// #0
     afc:	mov	x6, #0x0                   	// #0
     b00:	mov	x5, #0x20                  	// #32
     b04:	mov	x4, x0
     b08:	mov	x3, #0x0                   	// #0
     b0c:	ldr	x2, [sp, #40]
     b10:	ldr	x1, [sp, #48]
     b14:	ldr	x0, [sp, #56]
     b18:	bl	104 <read_bfs_file>
     b1c:	str	w0, [sp, #180]
     b20:	ldr	w0, [sp, #180]
     b24:	cmp	w0, #0x0
     b28:	b.eq	b34 <iterate_in_b_tree+0x5c>  // b.none
     b2c:	mov	w0, #0x0                   	// #0
     b30:	b	d78 <iterate_in_b_tree+0x2a0>
     b34:	ldr	x0, [sp, #160]
     b38:	str	x0, [sp, #192]
     b3c:	ldr	w0, [sp, #152]
     b40:	sub	w0, w0, #0x1
     b44:	str	w0, [sp, #204]
     b48:	b	bfc <iterate_in_b_tree+0x124>
     b4c:	add	x0, sp, #0x70
     b50:	mov	x7, #0x0                   	// #0
     b54:	mov	x6, #0x0                   	// #0
     b58:	mov	x5, #0x1c                  	// #28
     b5c:	mov	x4, x0
     b60:	ldr	x3, [sp, #192]
     b64:	ldr	x2, [sp, #40]
     b68:	ldr	x1, [sp, #48]
     b6c:	ldr	x0, [sp, #56]
     b70:	bl	104 <read_bfs_file>
     b74:	str	w0, [sp, #180]
     b78:	ldr	w0, [sp, #180]
     b7c:	cmp	w0, #0x0
     b80:	b.eq	b8c <iterate_in_b_tree+0xb4>  // b.none
     b84:	mov	w0, #0x0                   	// #0
     b88:	b	d78 <iterate_in_b_tree+0x2a0>
     b8c:	ldrh	w0, [sp, #138]
     b90:	and	x0, x0, #0xffff
     b94:	add	x0, x0, #0x23
     b98:	and	x1, x0, #0xfffffffffffffff8
     b9c:	ldr	x0, [sp, #192]
     ba0:	add	x1, x1, x0
     ba4:	ldrh	w0, [sp, #136]
     ba8:	and	x0, x0, #0xffff
     bac:	lsl	x0, x0, #1
     bb0:	add	x0, x1, x0
     bb4:	add	x1, sp, #0x68
     bb8:	mov	x7, #0x0                   	// #0
     bbc:	mov	x6, #0x0                   	// #0
     bc0:	mov	x5, #0x8                   	// #8
     bc4:	mov	x4, x1
     bc8:	mov	x3, x0
     bcc:	ldr	x2, [sp, #40]
     bd0:	ldr	x1, [sp, #48]
     bd4:	ldr	x0, [sp, #56]
     bd8:	bl	104 <read_bfs_file>
     bdc:	str	w0, [sp, #180]
     be0:	ldr	w0, [sp, #180]
     be4:	cmp	w0, #0x0
     be8:	b.eq	bf4 <iterate_in_b_tree+0x11c>  // b.none
     bec:	mov	w0, #0x0                   	// #0
     bf0:	b	d78 <iterate_in_b_tree+0x2a0>
     bf4:	ldr	x0, [sp, #104]
     bf8:	str	x0, [sp, #192]
     bfc:	ldr	w0, [sp, #204]
     c00:	sub	w1, w0, #0x1
     c04:	str	w1, [sp, #204]
     c08:	cmp	w0, #0x0
     c0c:	b.ne	b4c <iterate_in_b_tree+0x74>  // b.any
     c10:	strh	wzr, [sp, #178]
     c14:	strh	wzr, [sp, #186]
     c18:	add	x3, sp, #0x48
     c1c:	add	x2, sp, #0x50
     c20:	add	x1, sp, #0x58
     c24:	add	x0, sp, #0x60
     c28:	mov	x7, x3
     c2c:	mov	x6, x2
     c30:	mov	x5, x1
     c34:	mov	x4, x0
     c38:	ldr	x3, [sp, #192]
     c3c:	ldr	x2, [sp, #40]
     c40:	ldr	x1, [sp, #48]
     c44:	ldr	x0, [sp, #56]
     c48:	bl	940 <read_b_node>
     c4c:	str	w0, [sp, #180]
     c50:	ldr	w0, [sp, #180]
     c54:	cmp	w0, #0x0
     c58:	b.eq	c64 <iterate_in_b_tree+0x18c>  // b.none
     c5c:	mov	w0, #0x0                   	// #0
     c60:	b	d78 <iterate_in_b_tree+0x2a0>
     c64:	str	wzr, [sp, #188]
     c68:	b	d3c <iterate_in_b_tree+0x264>
     c6c:	ldrh	w0, [sp, #186]
     c70:	strh	w0, [sp, #178]
     c74:	ldr	x1, [sp, #80]
     c78:	ldr	w0, [sp, #188]
     c7c:	lsl	x0, x0, #1
     c80:	add	x0, x1, x0
     c84:	ldrh	w0, [x0]
     c88:	strh	w0, [sp, #186]
     c8c:	ldr	x0, [sp, #96]
     c90:	ldrh	w0, [x0, #26]
     c94:	ldrh	w1, [sp, #186]
     c98:	cmp	w1, w0
     c9c:	b.cc	cac <iterate_in_b_tree+0x1d4>  // b.lo, b.ul, b.last
     ca0:	ldr	x0, [sp, #96]
     ca4:	ldrh	w0, [x0, #26]
     ca8:	strh	w0, [sp, #186]
     cac:	ldr	x1, [sp, #88]
     cb0:	ldrh	w0, [sp, #186]
     cb4:	add	x0, x1, x0
     cb8:	ldrb	w0, [x0]
     cbc:	strb	w0, [sp, #177]
     cc0:	ldr	x1, [sp, #88]
     cc4:	ldrh	w0, [sp, #186]
     cc8:	add	x0, x1, x0
     ccc:	strb	wzr, [x0]
     cd0:	ldr	x1, [sp, #88]
     cd4:	ldrh	w0, [sp, #178]
     cd8:	add	x4, x1, x0
     cdc:	ldr	x1, [sp, #72]
     ce0:	ldr	w0, [sp, #188]
     ce4:	lsl	x0, x0, #3
     ce8:	add	x0, x1, x0
     cec:	ldr	x0, [x0]
     cf0:	ldr	x3, [sp, #32]
     cf4:	ldr	x2, [sp, #24]
     cf8:	mov	x1, x0
     cfc:	mov	x0, x4
     d00:	blr	x3
     d04:	cmp	w0, #0x0
     d08:	b.eq	d1c <iterate_in_b_tree+0x244>  // b.none
     d0c:	ldr	x0, [sp, #96]
     d10:	bl	0 <grub_free>
     d14:	mov	w0, #0x1                   	// #1
     d18:	b	d78 <iterate_in_b_tree+0x2a0>
     d1c:	ldr	x1, [sp, #88]
     d20:	ldrh	w0, [sp, #186]
     d24:	add	x0, x1, x0
     d28:	ldrb	w1, [sp, #177]
     d2c:	strb	w1, [x0]
     d30:	ldr	w0, [sp, #188]
     d34:	add	w0, w0, #0x1
     d38:	str	w0, [sp, #188]
     d3c:	ldr	x0, [sp, #96]
     d40:	ldrh	w0, [x0, #24]
     d44:	mov	w1, w0
     d48:	ldr	w0, [sp, #188]
     d4c:	cmp	w0, w1
     d50:	b.cc	c6c <iterate_in_b_tree+0x194>  // b.lo, b.ul, b.last
     d54:	ldr	x0, [sp, #96]
     d58:	ldr	x0, [x0, #8]
     d5c:	str	x0, [sp, #192]
     d60:	ldr	x0, [sp, #96]
     d64:	bl	0 <grub_free>
     d68:	ldr	x0, [sp, #192]
     d6c:	cmn	x0, #0x1
     d70:	b.ne	c10 <iterate_in_b_tree+0x138>  // b.any
     d74:	mov	w0, #0x0                   	// #0
     d78:	ldp	x29, x30, [sp], #208
     d7c:	ret

0000000000000d80 <bfs_strcmp>:
     d80:	sub	sp, sp, #0x30
     d84:	str	x0, [sp, #24]
     d88:	str	x1, [sp, #16]
     d8c:	str	x2, [sp, #8]
     d90:	b	dd0 <bfs_strcmp+0x50>
     d94:	ldr	x0, [sp, #24]
     d98:	ldrb	w1, [x0]
     d9c:	ldr	x0, [sp, #16]
     da0:	ldrb	w0, [x0]
     da4:	cmp	w1, w0
     da8:	b.ne	df0 <bfs_strcmp+0x70>  // b.any
     dac:	ldr	x0, [sp, #24]
     db0:	add	x0, x0, #0x1
     db4:	str	x0, [sp, #24]
     db8:	ldr	x0, [sp, #16]
     dbc:	add	x0, x0, #0x1
     dc0:	str	x0, [sp, #16]
     dc4:	ldr	x0, [sp, #8]
     dc8:	sub	x0, x0, #0x1
     dcc:	str	x0, [sp, #8]
     dd0:	ldr	x0, [sp, #16]
     dd4:	ldrb	w0, [x0]
     dd8:	cmp	w0, #0x0
     ddc:	b.eq	df4 <bfs_strcmp+0x74>  // b.none
     de0:	ldr	x0, [sp, #8]
     de4:	cmp	x0, #0x0
     de8:	b.ne	d94 <bfs_strcmp+0x14>  // b.any
     dec:	b	df4 <bfs_strcmp+0x74>
     df0:	nop
     df4:	ldr	x0, [sp, #8]
     df8:	cmp	x0, #0x0
     dfc:	b.eq	e0c <bfs_strcmp+0x8c>  // b.none
     e00:	ldr	x0, [sp, #24]
     e04:	ldrb	w0, [x0]
     e08:	b	e10 <bfs_strcmp+0x90>
     e0c:	mov	w0, #0x0                   	// #0
     e10:	strb	w0, [sp, #47]
     e14:	ldr	x0, [sp, #16]
     e18:	ldrb	w0, [x0]
     e1c:	strb	w0, [sp, #46]
     e20:	ldrb	w1, [sp, #47]
     e24:	ldrb	w0, [sp, #46]
     e28:	sub	w0, w1, w0
     e2c:	add	sp, sp, #0x30
     e30:	ret

0000000000000e34 <find_in_b_tree>:
     e34:	stp	x29, x30, [sp, #-176]!
     e38:	mov	x29, sp
     e3c:	str	x0, [sp, #56]
     e40:	str	x1, [sp, #48]
     e44:	str	x2, [sp, #40]
     e48:	str	x3, [sp, #32]
     e4c:	str	x4, [sp, #24]
     e50:	add	x0, sp, #0x60
     e54:	mov	x7, #0x0                   	// #0
     e58:	mov	x6, #0x0                   	// #0
     e5c:	mov	x5, #0x20                  	// #32
     e60:	mov	x4, x0
     e64:	mov	x3, #0x0                   	// #0
     e68:	ldr	x2, [sp, #40]
     e6c:	ldr	x1, [sp, #48]
     e70:	ldr	x0, [sp, #56]
     e74:	bl	104 <read_bfs_file>
     e78:	str	w0, [sp, #140]
     e7c:	ldr	w0, [sp, #140]
     e80:	cmp	w0, #0x0
     e84:	b.eq	e90 <find_in_b_tree+0x5c>  // b.none
     e88:	ldr	w0, [sp, #140]
     e8c:	b	12b4 <find_in_b_tree+0x480>
     e90:	ldr	x0, [sp, #112]
     e94:	str	x0, [sp, #160]
     e98:	ldr	w0, [sp, #104]
     e9c:	sub	w0, w0, #0x1
     ea0:	str	w0, [sp, #172]
     ea4:	add	x3, sp, #0x40
     ea8:	add	x2, sp, #0x48
     eac:	add	x1, sp, #0x50
     eb0:	add	x0, sp, #0x58
     eb4:	mov	x7, x3
     eb8:	mov	x6, x2
     ebc:	mov	x5, x1
     ec0:	mov	x4, x0
     ec4:	ldr	x3, [sp, #160]
     ec8:	ldr	x2, [sp, #40]
     ecc:	ldr	x1, [sp, #48]
     ed0:	ldr	x0, [sp, #56]
     ed4:	bl	940 <read_b_node>
     ed8:	str	w0, [sp, #140]
     edc:	ldr	w0, [sp, #140]
     ee0:	cmp	w0, #0x0
     ee4:	b.eq	ef0 <find_in_b_tree+0xbc>  // b.none
     ee8:	ldr	w0, [sp, #140]
     eec:	b	12b4 <find_in_b_tree+0x480>
     ef0:	ldr	x0, [sp, #88]
     ef4:	ldrh	w0, [x0, #24]
     ef8:	cmp	w0, #0x0
     efc:	b.ne	f24 <find_in_b_tree+0xf0>  // b.any
     f00:	ldr	x0, [sp, #88]
     f04:	bl	0 <grub_free>
     f08:	ldr	x2, [sp, #32]
     f0c:	adrp	x0, 0 <grub_fs_register>
     f10:	add	x0, x0, #0x0
     f14:	ldr	x1, [x0]
     f18:	mov	w0, #0x5                   	// #5
     f1c:	bl	0 <grub_error>
     f20:	b	12b4 <find_in_b_tree+0x480>
     f24:	str	wzr, [sp, #156]
     f28:	b	f38 <find_in_b_tree+0x104>
     f2c:	ldr	w0, [sp, #156]
     f30:	add	w0, w0, #0x1
     f34:	str	w0, [sp, #156]
     f38:	ldr	x0, [sp, #88]
     f3c:	ldrh	w0, [x0, #24]
     f40:	mov	w1, w0
     f44:	ldr	w0, [sp, #156]
     f48:	asr	w0, w1, w0
     f4c:	cmp	w0, #0x0
     f50:	b.ne	f2c <find_in_b_tree+0xf8>  // b.any
     f54:	str	wzr, [sp, #148]
     f58:	ldr	w0, [sp, #156]
     f5c:	sub	w0, w0, #0x1
     f60:	str	w0, [sp, #152]
     f64:	b	10e4 <find_in_b_tree+0x2b0>
     f68:	strh	wzr, [sp, #134]
     f6c:	strh	wzr, [sp, #146]
     f70:	ldr	w0, [sp, #152]
     f74:	mov	w1, #0x1                   	// #1
     f78:	lsl	w0, w1, w0
     f7c:	mov	w1, w0
     f80:	ldr	w0, [sp, #148]
     f84:	orr	w0, w1, w0
     f88:	ldr	x1, [sp, #88]
     f8c:	ldrh	w1, [x1, #24]
     f90:	cmp	w0, w1
     f94:	b.cs	10d4 <find_in_b_tree+0x2a0>  // b.hs, b.nlast
     f98:	ldr	x1, [sp, #72]
     f9c:	ldr	w0, [sp, #152]
     fa0:	mov	w2, #0x1                   	// #1
     fa4:	lsl	w0, w2, w0
     fa8:	mov	w2, w0
     fac:	ldr	w0, [sp, #148]
     fb0:	orr	w0, w2, w0
     fb4:	sub	w0, w0, #0x1
     fb8:	mov	w0, w0
     fbc:	lsl	x0, x0, #1
     fc0:	add	x0, x1, x0
     fc4:	ldrh	w0, [x0]
     fc8:	strh	w0, [sp, #134]
     fcc:	ldr	x1, [sp, #72]
     fd0:	ldr	w0, [sp, #152]
     fd4:	mov	w2, #0x1                   	// #1
     fd8:	lsl	w0, w2, w0
     fdc:	mov	w2, w0
     fe0:	ldr	w0, [sp, #148]
     fe4:	orr	w0, w2, w0
     fe8:	mov	w0, w0
     fec:	lsl	x0, x0, #1
     ff0:	add	x0, x1, x0
     ff4:	ldrh	w0, [x0]
     ff8:	strh	w0, [sp, #146]
     ffc:	ldr	x0, [sp, #88]
    1000:	ldrh	w0, [x0, #26]
    1004:	ldrh	w1, [sp, #146]
    1008:	cmp	w1, w0
    100c:	b.cc	101c <find_in_b_tree+0x1e8>  // b.lo, b.ul, b.last
    1010:	ldr	x0, [sp, #88]
    1014:	ldrh	w0, [x0, #26]
    1018:	strh	w0, [sp, #146]
    101c:	ldr	x1, [sp, #80]
    1020:	ldrh	w0, [sp, #134]
    1024:	add	x3, x1, x0
    1028:	ldrh	w1, [sp, #146]
    102c:	ldrh	w0, [sp, #134]
    1030:	sub	w0, w1, w0
    1034:	sxtw	x0, w0
    1038:	mov	x2, x0
    103c:	ldr	x1, [sp, #32]
    1040:	mov	x0, x3
    1044:	bl	d80 <bfs_strcmp>
    1048:	str	w0, [sp, #128]
    104c:	ldr	w0, [sp, #128]
    1050:	cmp	w0, #0x0
    1054:	b.ne	10a8 <find_in_b_tree+0x274>  // b.any
    1058:	ldr	w0, [sp, #172]
    105c:	cmp	w0, #0x0
    1060:	b.ne	10a8 <find_in_b_tree+0x274>  // b.any
    1064:	ldr	x1, [sp, #64]
    1068:	ldr	w0, [sp, #152]
    106c:	mov	w2, #0x1                   	// #1
    1070:	lsl	w0, w2, w0
    1074:	mov	w2, w0
    1078:	ldr	w0, [sp, #148]
    107c:	orr	w0, w2, w0
    1080:	mov	w0, w0
    1084:	lsl	x0, x0, #3
    1088:	add	x0, x1, x0
    108c:	ldr	x1, [x0]
    1090:	ldr	x0, [sp, #24]
    1094:	str	x1, [x0]
    1098:	ldr	x0, [sp, #88]
    109c:	bl	0 <grub_free>
    10a0:	mov	w0, #0x0                   	// #0
    10a4:	b	12b4 <find_in_b_tree+0x480>
    10a8:	ldr	w0, [sp, #128]
    10ac:	cmp	w0, #0x0
    10b0:	b.ge	10d8 <find_in_b_tree+0x2a4>  // b.tcont
    10b4:	ldr	w0, [sp, #152]
    10b8:	mov	w1, #0x1                   	// #1
    10bc:	lsl	w0, w1, w0
    10c0:	mov	w1, w0
    10c4:	ldr	w0, [sp, #148]
    10c8:	orr	w0, w0, w1
    10cc:	str	w0, [sp, #148]
    10d0:	b	10d8 <find_in_b_tree+0x2a4>
    10d4:	nop
    10d8:	ldr	w0, [sp, #152]
    10dc:	sub	w0, w0, #0x1
    10e0:	str	w0, [sp, #152]
    10e4:	ldr	w0, [sp, #152]
    10e8:	cmp	w0, #0x0
    10ec:	b.ge	f68 <find_in_b_tree+0x134>  // b.tcont
    10f0:	ldr	w0, [sp, #148]
    10f4:	cmp	w0, #0x0
    10f8:	b.ne	11fc <find_in_b_tree+0x3c8>  // b.any
    10fc:	strh	wzr, [sp, #144]
    1100:	ldr	x0, [sp, #72]
    1104:	ldrh	w0, [x0]
    1108:	strh	w0, [sp, #144]
    110c:	ldr	x0, [sp, #88]
    1110:	ldrh	w0, [x0, #26]
    1114:	ldrh	w1, [sp, #144]
    1118:	cmp	w1, w0
    111c:	b.cc	112c <find_in_b_tree+0x2f8>  // b.lo, b.ul, b.last
    1120:	ldr	x0, [sp, #88]
    1124:	ldrh	w0, [x0, #26]
    1128:	strh	w0, [sp, #144]
    112c:	ldr	x0, [sp, #80]
    1130:	ldrh	w1, [sp, #144]
    1134:	mov	x2, x1
    1138:	ldr	x1, [sp, #32]
    113c:	bl	d80 <bfs_strcmp>
    1140:	str	w0, [sp, #136]
    1144:	ldr	w0, [sp, #136]
    1148:	cmp	w0, #0x0
    114c:	b.ne	117c <find_in_b_tree+0x348>  // b.any
    1150:	ldr	w0, [sp, #172]
    1154:	cmp	w0, #0x0
    1158:	b.ne	117c <find_in_b_tree+0x348>  // b.any
    115c:	ldr	x0, [sp, #64]
    1160:	ldr	x1, [x0]
    1164:	ldr	x0, [sp, #24]
    1168:	str	x1, [x0]
    116c:	ldr	x0, [sp, #88]
    1170:	bl	0 <grub_free>
    1174:	mov	w0, #0x0                   	// #0
    1178:	b	12b4 <find_in_b_tree+0x480>
    117c:	ldr	w0, [sp, #136]
    1180:	cmp	w0, #0x0
    1184:	b.lt	11b8 <find_in_b_tree+0x384>  // b.tstop
    1188:	ldr	w0, [sp, #172]
    118c:	cmp	w0, #0x0
    1190:	b.eq	11b8 <find_in_b_tree+0x384>  // b.none
    1194:	ldr	x0, [sp, #64]
    1198:	ldr	x0, [x0]
    119c:	str	x0, [sp, #160]
    11a0:	ldr	w0, [sp, #172]
    11a4:	sub	w0, w0, #0x1
    11a8:	str	w0, [sp, #172]
    11ac:	ldr	x0, [sp, #88]
    11b0:	bl	0 <grub_free>
    11b4:	b	12b0 <find_in_b_tree+0x47c>
    11b8:	ldr	w0, [sp, #172]
    11bc:	cmp	w0, #0x0
    11c0:	b.eq	1258 <find_in_b_tree+0x424>  // b.none
    11c4:	ldr	x0, [sp, #88]
    11c8:	ldrh	w0, [x0, #24]
    11cc:	cmp	w0, #0x1
    11d0:	b.ls	1258 <find_in_b_tree+0x424>  // b.plast
    11d4:	ldr	x0, [sp, #64]
    11d8:	add	x0, x0, #0x8
    11dc:	ldr	x0, [x0]
    11e0:	str	x0, [sp, #160]
    11e4:	ldr	w0, [sp, #172]
    11e8:	sub	w0, w0, #0x1
    11ec:	str	w0, [sp, #172]
    11f0:	ldr	x0, [sp, #88]
    11f4:	bl	0 <grub_free>
    11f8:	b	12b0 <find_in_b_tree+0x47c>
    11fc:	ldr	w0, [sp, #172]
    1200:	cmp	w0, #0x0
    1204:	b.eq	1258 <find_in_b_tree+0x424>  // b.none
    1208:	ldr	w0, [sp, #148]
    120c:	add	w0, w0, #0x1
    1210:	ldr	x1, [sp, #88]
    1214:	ldrh	w1, [x1, #24]
    1218:	cmp	w0, w1
    121c:	b.cs	1258 <find_in_b_tree+0x424>  // b.hs, b.nlast
    1220:	ldr	x1, [sp, #64]
    1224:	ldr	w0, [sp, #148]
    1228:	add	w0, w0, #0x1
    122c:	mov	w0, w0
    1230:	lsl	x0, x0, #3
    1234:	add	x0, x1, x0
    1238:	ldr	x0, [x0]
    123c:	str	x0, [sp, #160]
    1240:	ldr	w0, [sp, #172]
    1244:	sub	w0, w0, #0x1
    1248:	str	w0, [sp, #172]
    124c:	ldr	x0, [sp, #88]
    1250:	bl	0 <grub_free>
    1254:	b	12b0 <find_in_b_tree+0x47c>
    1258:	ldr	x0, [sp, #88]
    125c:	ldr	x0, [x0, #16]
    1260:	cmn	x0, #0x1
    1264:	b.eq	128c <find_in_b_tree+0x458>  // b.none
    1268:	ldr	x0, [sp, #88]
    126c:	ldr	x0, [x0, #16]
    1270:	str	x0, [sp, #160]
    1274:	ldr	w0, [sp, #172]
    1278:	sub	w0, w0, #0x1
    127c:	str	w0, [sp, #172]
    1280:	ldr	x0, [sp, #88]
    1284:	bl	0 <grub_free>
    1288:	b	12b0 <find_in_b_tree+0x47c>
    128c:	ldr	x0, [sp, #88]
    1290:	bl	0 <grub_free>
    1294:	ldr	x2, [sp, #32]
    1298:	adrp	x0, 0 <grub_fs_register>
    129c:	add	x0, x0, #0x0
    12a0:	ldr	x1, [x0]
    12a4:	mov	w0, #0x5                   	// #5
    12a8:	bl	0 <grub_error>
    12ac:	b	12b4 <find_in_b_tree+0x480>
    12b0:	b	ea4 <find_in_b_tree+0x70>
    12b4:	ldp	x29, x30, [sp], #176
    12b8:	ret
    12bc:	nop
	...

00000000000012c8 <lookup_file>:
    12c8:	stp	x29, x30, [sp, #-80]!
    12cc:	mov	x29, sp
    12d0:	str	x0, [sp, #40]
    12d4:	str	x1, [sp, #32]
    12d8:	str	x2, [sp, #24]
    12dc:	str	x3, [sp, #16]
    12e0:	str	xzr, [sp, #56]
    12e4:	ldr	x0, [sp, #40]
    12e8:	ldr	x5, [x0]
    12ec:	ldr	x0, [sp, #40]
    12f0:	ldr	x1, [x0, #8]
    12f4:	ldr	x0, [sp, #40]
    12f8:	add	x0, x0, #0x10
    12fc:	add	x2, sp, #0x38
    1300:	mov	x4, x2
    1304:	ldr	x3, [sp, #32]
    1308:	mov	x2, x0
    130c:	mov	x0, x5
    1310:	bl	e34 <find_in_b_tree>
    1314:	str	w0, [sp, #76]
    1318:	ldr	w0, [sp, #76]
    131c:	cmp	w0, #0x0
    1320:	b.eq	132c <lookup_file+0x64>  // b.none
    1324:	ldr	w0, [sp, #76]
    1328:	b	144c <lookup_file+0x184>
    132c:	mov	x0, #0xf8                  	// #248
    1330:	bl	0 <grub_malloc>
    1334:	mov	x1, x0
    1338:	ldr	x0, [sp, #24]
    133c:	str	x1, [x0]
    1340:	ldr	x0, [sp, #24]
    1344:	ldr	x0, [x0]
    1348:	cmp	x0, #0x0
    134c:	b.ne	1364 <lookup_file+0x9c>  // b.any
    1350:	adrp	x0, 0 <grub_fs_register>
    1354:	add	x0, x0, #0x0
    1358:	ldr	x0, [x0]
    135c:	ldr	w0, [x0]
    1360:	b	144c <lookup_file+0x184>
    1364:	ldr	x0, [sp, #24]
    1368:	ldr	x0, [x0]
    136c:	ldr	x1, [sp, #40]
    1370:	ldr	x1, [x1]
    1374:	str	x1, [x0]
    1378:	ldr	x0, [sp, #24]
    137c:	ldr	x0, [x0]
    1380:	ldr	x1, [sp, #40]
    1384:	ldr	x1, [x1, #8]
    1388:	str	x1, [x0, #8]
    138c:	ldr	x0, [sp, #24]
    1390:	ldr	x0, [x0]
    1394:	add	x0, x0, #0x10
    1398:	str	x0, [sp, #64]
    139c:	ldr	x0, [sp, #40]
    13a0:	ldr	x5, [x0]
    13a4:	ldr	x1, [sp, #56]
    13a8:	ldr	x0, [sp, #40]
    13ac:	ldr	x0, [x0, #8]
    13b0:	ldr	w0, [x0, #44]
    13b4:	sub	w0, w0, #0x9
    13b8:	lsl	x0, x1, x0
    13bc:	ldr	x4, [sp, #64]
    13c0:	mov	x3, #0xe8                  	// #232
    13c4:	mov	x2, #0x0                   	// #0
    13c8:	mov	x1, x0
    13cc:	mov	x0, x5
    13d0:	bl	0 <grub_disk_read>
    13d4:	cmp	w0, #0x0
    13d8:	b.eq	13fc <lookup_file+0x134>  // b.none
    13dc:	ldr	x0, [sp, #24]
    13e0:	ldr	x0, [x0]
    13e4:	bl	0 <grub_free>
    13e8:	adrp	x0, 0 <grub_fs_register>
    13ec:	add	x0, x0, #0x0
    13f0:	ldr	x0, [x0]
    13f4:	ldr	w0, [x0]
    13f8:	b	144c <lookup_file+0x184>
    13fc:	ldr	x0, [sp, #64]
    1400:	ldr	w0, [x0, #20]
    1404:	and	w0, w0, #0xe000
    1408:	cmp	w0, #0x4, lsl #12
    140c:	b.eq	1428 <lookup_file+0x160>  // b.none
    1410:	cmp	w0, #0xa, lsl #12
    1414:	b.eq	1438 <lookup_file+0x170>  // b.none
    1418:	ldr	x0, [sp, #16]
    141c:	mov	w1, #0x1                   	// #1
    1420:	str	w1, [x0]
    1424:	b	1448 <lookup_file+0x180>
    1428:	ldr	x0, [sp, #16]
    142c:	mov	w1, #0x2                   	// #2
    1430:	str	w1, [x0]
    1434:	b	1448 <lookup_file+0x180>
    1438:	ldr	x0, [sp, #16]
    143c:	mov	w1, #0x3                   	// #3
    1440:	str	w1, [x0]
    1444:	nop
    1448:	mov	w0, #0x0                   	// #0
    144c:	ldp	x29, x30, [sp], #80
    1450:	ret
    1454:	nop
	...

0000000000001460 <read_symlink>:
    1460:	stp	x29, x30, [sp, #-64]!
    1464:	mov	x29, sp
    1468:	str	x0, [sp, #24]
    146c:	str	xzr, [sp, #56]
    1470:	ldr	x0, [sp, #24]
    1474:	ldr	w0, [x0, #40]
    1478:	and	w0, w0, #0x40
    147c:	cmp	w0, #0x0
    1480:	b.ne	14cc <read_symlink+0x6c>  // b.any
    1484:	mov	x0, #0x91                  	// #145
    1488:	bl	0 <grub_malloc>
    148c:	str	x0, [sp, #56]
    1490:	ldr	x0, [sp, #56]
    1494:	cmp	x0, #0x0
    1498:	b.ne	14a4 <read_symlink+0x44>  // b.any
    149c:	mov	x0, #0x0                   	// #0
    14a0:	b	1568 <read_symlink+0x108>
    14a4:	ldr	x0, [sp, #24]
    14a8:	add	x0, x0, #0x58
    14ac:	mov	x2, #0x90                  	// #144
    14b0:	mov	x1, x0
    14b4:	ldr	x0, [sp, #56]
    14b8:	bl	58 <grub_memcpy>
    14bc:	ldr	x0, [sp, #56]
    14c0:	add	x0, x0, #0x90
    14c4:	strb	wzr, [x0]
    14c8:	b	1564 <read_symlink+0x104>
    14cc:	ldr	x0, [sp, #24]
    14d0:	ldr	x0, [x0, #224]
    14d4:	str	x0, [sp, #48]
    14d8:	ldr	x0, [sp, #48]
    14dc:	add	x0, x0, #0x1
    14e0:	bl	0 <grub_malloc>
    14e4:	str	x0, [sp, #56]
    14e8:	ldr	x0, [sp, #56]
    14ec:	cmp	x0, #0x0
    14f0:	b.ne	14fc <read_symlink+0x9c>  // b.any
    14f4:	mov	x0, #0x0                   	// #0
    14f8:	b	1568 <read_symlink+0x108>
    14fc:	ldr	x0, [sp, #24]
    1500:	ldr	x8, [x0]
    1504:	ldr	x0, [sp, #24]
    1508:	ldr	x1, [x0, #8]
    150c:	ldr	x0, [sp, #24]
    1510:	add	x0, x0, #0x10
    1514:	mov	x7, #0x0                   	// #0
    1518:	mov	x6, #0x0                   	// #0
    151c:	ldr	x5, [sp, #48]
    1520:	ldr	x4, [sp, #56]
    1524:	mov	x3, #0x0                   	// #0
    1528:	mov	x2, x0
    152c:	mov	x0, x8
    1530:	bl	104 <read_bfs_file>
    1534:	str	w0, [sp, #44]
    1538:	ldr	w0, [sp, #44]
    153c:	cmp	w0, #0x0
    1540:	b.eq	1554 <read_symlink+0xf4>  // b.none
    1544:	ldr	x0, [sp, #56]
    1548:	bl	0 <grub_free>
    154c:	mov	x0, #0x0                   	// #0
    1550:	b	1568 <read_symlink+0x108>
    1554:	ldr	x1, [sp, #56]
    1558:	ldr	x0, [sp, #48]
    155c:	add	x0, x1, x0
    1560:	strb	wzr, [x0]
    1564:	ldr	x0, [sp, #56]
    1568:	ldp	x29, x30, [sp], #64
    156c:	ret

0000000000001570 <find_file>:
    1570:	stp	x29, x30, [sp, #-336]!
    1574:	mov	x29, sp
    1578:	str	x0, [sp, #56]
    157c:	str	x1, [sp, #48]
    1580:	str	x2, [sp, #40]
    1584:	str	x3, [sp, #32]
    1588:	str	w4, [sp, #28]
    158c:	add	x0, sp, #0x50
    1590:	mov	x1, #0xf8                  	// #248
    1594:	mov	x2, x1
    1598:	mov	w1, #0x0                   	// #0
    159c:	bl	0 <memset>
    15a0:	ldr	x0, [sp, #48]
    15a4:	str	x0, [sp, #80]
    15a8:	ldr	x0, [sp, #40]
    15ac:	str	x0, [sp, #88]
    15b0:	ldr	x0, [sp, #40]
    15b4:	add	x1, x0, #0x74
    15b8:	add	x0, sp, #0x50
    15bc:	add	x0, x0, #0x10
    15c0:	mov	x6, #0xe8                  	// #232
    15c4:	mov	x5, x0
    15c8:	mov	x4, #0x0                   	// #0
    15cc:	mov	x3, #0x0                   	// #0
    15d0:	mov	x2, x1
    15d4:	ldr	x1, [sp, #40]
    15d8:	ldr	x0, [sp, #48]
    15dc:	bl	84 <read_extent>
    15e0:	str	w0, [sp, #332]
    15e4:	ldr	w0, [sp, #332]
    15e8:	cmp	w0, #0x0
    15ec:	b.eq	15f8 <find_file+0x88>  // b.none
    15f0:	ldr	w0, [sp, #332]
    15f4:	b	1668 <find_file+0xf8>
    15f8:	add	x2, sp, #0x48
    15fc:	add	x1, sp, #0x50
    1600:	ldr	w5, [sp, #28]
    1604:	adrp	x0, 0 <grub_fs_register>
    1608:	add	x0, x0, #0x0
    160c:	ldr	x4, [x0]
    1610:	adrp	x0, 0 <grub_fs_register>
    1614:	add	x0, x0, #0x0
    1618:	ldr	x3, [x0]
    161c:	ldr	x0, [sp, #56]
    1620:	bl	0 <grub_fshelp_find_file_lookup>
    1624:	str	w0, [sp, #332]
    1628:	ldr	w0, [sp, #332]
    162c:	cmp	w0, #0x0
    1630:	b.ne	164c <find_file+0xdc>  // b.any
    1634:	ldr	x0, [sp, #72]
    1638:	add	x0, x0, #0x10
    163c:	mov	x2, #0xe8                  	// #232
    1640:	mov	x1, x0
    1644:	ldr	x0, [sp, #32]
    1648:	bl	58 <grub_memcpy>
    164c:	ldr	x1, [sp, #72]
    1650:	add	x0, sp, #0x50
    1654:	cmp	x1, x0
    1658:	b.eq	1664 <find_file+0xf4>  // b.none
    165c:	ldr	x0, [sp, #72]
    1660:	bl	0 <grub_free>
    1664:	ldr	w0, [sp, #332]
    1668:	ldp	x29, x30, [sp], #336
    166c:	ret
	...

0000000000001680 <mount>:
    1680:	stp	x29, x30, [sp, #-48]!
    1684:	mov	x29, sp
    1688:	str	x0, [sp, #24]
    168c:	str	x1, [sp, #16]
    1690:	ldr	x4, [sp, #16]
    1694:	mov	x3, #0x7c                  	// #124
    1698:	mov	x2, #0x0                   	// #0
    169c:	mov	x1, #0x1                   	// #1
    16a0:	ldr	x0, [sp, #24]
    16a4:	bl	0 <grub_disk_read>
    16a8:	str	w0, [sp, #44]
    16ac:	ldr	w0, [sp, #44]
    16b0:	cmp	w0, #0xb
    16b4:	b.ne	16d0 <mount+0x50>  // b.any
    16b8:	adrp	x0, 0 <grub_fs_register>
    16bc:	add	x0, x0, #0x0
    16c0:	ldr	x1, [x0]
    16c4:	mov	w0, #0x9                   	// #9
    16c8:	bl	0 <grub_error>
    16cc:	b	1788 <mount+0x108>
    16d0:	ldr	w0, [sp, #44]
    16d4:	cmp	w0, #0x0
    16d8:	b.eq	16e4 <mount+0x64>  // b.none
    16dc:	ldr	w0, [sp, #44]
    16e0:	b	1788 <mount+0x108>
    16e4:	ldr	x0, [sp, #16]
    16e8:	ldr	w1, [x0, #32]
    16ec:	mov	w0, #0x5331                	// #21297
    16f0:	movk	w0, #0x4246, lsl #16
    16f4:	cmp	w1, w0
    16f8:	b.ne	176c <mount+0xec>  // b.any
    16fc:	ldr	x0, [sp, #16]
    1700:	ldr	w1, [x0, #68]
    1704:	mov	w0, #0x1031                	// #4145
    1708:	movk	w0, #0xdd12, lsl #16
    170c:	cmp	w1, w0
    1710:	b.ne	176c <mount+0xec>  // b.any
    1714:	ldr	x0, [sp, #16]
    1718:	ldr	w1, [x0, #112]
    171c:	mov	w0, #0x830e                	// #33550
    1720:	movk	w0, #0x15b6, lsl #16
    1724:	cmp	w1, w0
    1728:	b.ne	176c <mount+0xec>  // b.any
    172c:	ldr	x0, [sp, #16]
    1730:	ldr	w0, [x0, #40]
    1734:	cmp	w0, #0x0
    1738:	b.eq	176c <mount+0xec>  // b.none
    173c:	ldr	x0, [sp, #16]
    1740:	ldr	w1, [x0, #40]
    1744:	ldr	x0, [sp, #16]
    1748:	ldr	w0, [x0, #44]
    174c:	mov	w2, #0x1                   	// #1
    1750:	lsl	w0, w2, w0
    1754:	cmp	w1, w0
    1758:	b.ne	176c <mount+0xec>  // b.any
    175c:	ldr	x0, [sp, #16]
    1760:	ldr	w0, [x0, #44]
    1764:	cmp	w0, #0x8
    1768:	b.hi	1784 <mount+0x104>  // b.pmore
    176c:	adrp	x0, 0 <grub_fs_register>
    1770:	add	x0, x0, #0x0
    1774:	ldr	x1, [x0]
    1778:	mov	w0, #0x9                   	// #9
    177c:	bl	0 <grub_error>
    1780:	b	1788 <mount+0x108>
    1784:	mov	w0, #0x0                   	// #0
    1788:	ldp	x29, x30, [sp], #48
    178c:	ret
	...

0000000000001798 <grub_bfs_dir_iter>:
    1798:	stp	x29, x30, [sp, #-304]!
    179c:	mov	x29, sp
    17a0:	str	x0, [sp, #40]
    17a4:	str	x1, [sp, #32]
    17a8:	str	x2, [sp, #24]
    17ac:	ldr	x0, [sp, #24]
    17b0:	ldr	x0, [x0]
    17b4:	ldr	x5, [x0]
    17b8:	ldr	x0, [sp, #24]
    17bc:	ldr	w0, [x0, #68]
    17c0:	sub	w0, w0, #0x9
    17c4:	ldr	x1, [sp, #32]
    17c8:	lsl	x0, x1, x0
    17cc:	add	x1, sp, #0x40
    17d0:	mov	x4, x1
    17d4:	mov	x3, #0xe8                  	// #232
    17d8:	mov	x2, #0x0                   	// #0
    17dc:	mov	x1, x0
    17e0:	mov	x0, x5
    17e4:	bl	0 <grub_disk_read>
    17e8:	str	w0, [sp, #300]
    17ec:	ldr	w0, [sp, #300]
    17f0:	cmp	w0, #0x0
    17f4:	b.eq	1804 <grub_bfs_dir_iter+0x6c>  // b.none
    17f8:	bl	0 <grub_print_error>
    17fc:	mov	w0, #0x0                   	// #0
    1800:	b	1860 <grub_bfs_dir_iter+0xc8>
    1804:	ldrb	w0, [sp, #48]
    1808:	orr	w0, w0, #0x2
    180c:	strb	w0, [sp, #48]
    1810:	ldur	x0, [sp, #100]
    1814:	lsr	x0, x0, #16
    1818:	str	w0, [sp, #52]
    181c:	ldr	w0, [sp, #84]
    1820:	and	w0, w0, #0xe000
    1824:	cmp	w0, #0x4, lsl #12
    1828:	cset	w0, eq  // eq = none
    182c:	and	w1, w0, #0xff
    1830:	ldrb	w0, [sp, #48]
    1834:	bfxil	w0, w1, #0, #1
    1838:	strb	w0, [sp, #48]
    183c:	ldr	x0, [sp, #24]
    1840:	ldr	x3, [x0, #8]
    1844:	ldr	x0, [sp, #24]
    1848:	ldr	x1, [x0, #16]
    184c:	add	x0, sp, #0x30
    1850:	mov	x2, x1
    1854:	mov	x1, x0
    1858:	ldr	x0, [sp, #40]
    185c:	blr	x3
    1860:	ldp	x29, x30, [sp], #304
    1864:	ret

0000000000001868 <grub_bfs_dir>:
    1868:	stp	x29, x30, [sp, #-448]!
    186c:	mov	x29, sp
    1870:	str	x0, [sp, #40]
    1874:	str	x1, [sp, #32]
    1878:	str	x2, [sp, #24]
    187c:	str	x3, [sp, #16]
    1880:	stp	xzr, xzr, [sp, #288]
    1884:	stp	xzr, xzr, [sp, #304]
    1888:	stp	xzr, xzr, [sp, #320]
    188c:	stp	xzr, xzr, [sp, #336]
    1890:	stp	xzr, xzr, [sp, #352]
    1894:	stp	xzr, xzr, [sp, #368]
    1898:	stp	xzr, xzr, [sp, #384]
    189c:	stp	xzr, xzr, [sp, #400]
    18a0:	stp	xzr, xzr, [sp, #416]
    18a4:	str	xzr, [sp, #432]
    18a8:	ldr	x0, [sp, #40]
    18ac:	str	x0, [sp, #288]
    18b0:	ldr	x0, [sp, #24]
    18b4:	str	x0, [sp, #296]
    18b8:	ldr	x0, [sp, #16]
    18bc:	str	x0, [sp, #304]
    18c0:	ldr	x0, [sp, #40]
    18c4:	ldr	x2, [x0]
    18c8:	add	x0, sp, #0x120
    18cc:	add	x0, x0, #0x18
    18d0:	mov	x1, x0
    18d4:	mov	x0, x2
    18d8:	bl	1680 <mount>
    18dc:	str	w0, [sp, #444]
    18e0:	ldr	w0, [sp, #444]
    18e4:	cmp	w0, #0x0
    18e8:	b.eq	18f4 <grub_bfs_dir+0x8c>  // b.none
    18ec:	ldr	w0, [sp, #444]
    18f0:	b	1974 <grub_bfs_dir+0x10c>
    18f4:	ldr	x0, [sp, #40]
    18f8:	ldr	x1, [x0]
    18fc:	add	x2, sp, #0x38
    1900:	add	x0, sp, #0x120
    1904:	add	x0, x0, #0x18
    1908:	mov	w4, #0x2                   	// #2
    190c:	mov	x3, x2
    1910:	mov	x2, x0
    1914:	ldr	x0, [sp, #32]
    1918:	bl	1570 <find_file>
    191c:	str	w0, [sp, #444]
    1920:	ldr	w0, [sp, #444]
    1924:	cmp	w0, #0x0
    1928:	b.eq	1934 <grub_bfs_dir+0xcc>  // b.none
    192c:	ldr	w0, [sp, #444]
    1930:	b	1974 <grub_bfs_dir+0x10c>
    1934:	ldr	x0, [sp, #40]
    1938:	ldr	x5, [x0]
    193c:	add	x3, sp, #0x120
    1940:	add	x2, sp, #0x38
    1944:	add	x0, sp, #0x120
    1948:	add	x1, x0, #0x18
    194c:	mov	x4, x3
    1950:	adrp	x0, 0 <grub_fs_register>
    1954:	add	x0, x0, #0x0
    1958:	ldr	x3, [x0]
    195c:	mov	x0, x5
    1960:	bl	ad8 <iterate_in_b_tree>
    1964:	adrp	x0, 0 <grub_fs_register>
    1968:	add	x0, x0, #0x0
    196c:	ldr	x0, [x0]
    1970:	ldr	w0, [x0]
    1974:	ldp	x29, x30, [sp], #448
    1978:	ret
    197c:	nop
	...

0000000000001990 <grub_bfs_open>:
    1990:	stp	x29, x30, [sp, #-416]!
    1994:	mov	x29, sp
    1998:	str	x0, [sp, #24]
    199c:	str	x1, [sp, #16]
    19a0:	ldr	x0, [sp, #24]
    19a4:	ldr	x0, [x0, #8]
    19a8:	ldr	x0, [x0]
    19ac:	add	x1, sp, #0x110
    19b0:	bl	1680 <mount>
    19b4:	str	w0, [sp, #412]
    19b8:	ldr	w0, [sp, #412]
    19bc:	cmp	w0, #0x0
    19c0:	b.eq	19cc <grub_bfs_open+0x3c>  // b.none
    19c4:	ldr	w0, [sp, #412]
    19c8:	b	1a8c <grub_bfs_open+0xfc>
    19cc:	ldr	x0, [sp, #24]
    19d0:	ldr	x0, [x0, #8]
    19d4:	ldr	x0, [x0]
    19d8:	add	x2, sp, #0x28
    19dc:	add	x1, sp, #0x110
    19e0:	mov	w4, #0x1                   	// #1
    19e4:	mov	x3, x2
    19e8:	mov	x2, x1
    19ec:	mov	x1, x0
    19f0:	ldr	x0, [sp, #16]
    19f4:	bl	1570 <find_file>
    19f8:	str	w0, [sp, #412]
    19fc:	ldr	w0, [sp, #412]
    1a00:	cmp	w0, #0x0
    1a04:	b.eq	1a10 <grub_bfs_open+0x80>  // b.none
    1a08:	ldr	w0, [sp, #412]
    1a0c:	b	1a8c <grub_bfs_open+0xfc>
    1a10:	mov	x0, #0x164                 	// #356
    1a14:	bl	0 <grub_zalloc>
    1a18:	str	x0, [sp, #400]
    1a1c:	ldr	x0, [sp, #400]
    1a20:	cmp	x0, #0x0
    1a24:	b.ne	1a3c <grub_bfs_open+0xac>  // b.any
    1a28:	adrp	x0, 0 <grub_fs_register>
    1a2c:	add	x0, x0, #0x0
    1a30:	ldr	x0, [x0]
    1a34:	ldr	w0, [x0]
    1a38:	b	1a8c <grub_bfs_open+0xfc>
    1a3c:	ldr	x0, [sp, #400]
    1a40:	mov	x3, x0
    1a44:	add	x0, sp, #0x110
    1a48:	mov	x1, #0x7c                  	// #124
    1a4c:	mov	x2, x1
    1a50:	mov	x1, x0
    1a54:	mov	x0, x3
    1a58:	bl	0 <memcpy>
    1a5c:	ldr	x0, [sp, #400]
    1a60:	add	x0, x0, #0x7c
    1a64:	add	x1, sp, #0x28
    1a68:	mov	x2, #0xe8                  	// #232
    1a6c:	bl	58 <grub_memcpy>
    1a70:	ldr	x0, [sp, #24]
    1a74:	ldr	x1, [sp, #400]
    1a78:	str	x1, [x0, #80]
    1a7c:	ldr	x1, [sp, #248]
    1a80:	ldr	x0, [sp, #24]
    1a84:	str	x1, [x0, #64]
    1a88:	mov	w0, #0x0                   	// #0
    1a8c:	ldp	x29, x30, [sp], #416
    1a90:	ret
    1a94:	nop
	...

0000000000001aa0 <grub_bfs_close>:
    1aa0:	stp	x29, x30, [sp, #-32]!
    1aa4:	mov	x29, sp
    1aa8:	str	x0, [sp, #24]
    1aac:	ldr	x0, [sp, #24]
    1ab0:	ldr	x0, [x0, #80]
    1ab4:	bl	0 <grub_free>
    1ab8:	mov	w0, #0x0                   	// #0
    1abc:	ldp	x29, x30, [sp], #32
    1ac0:	ret

0000000000001ac4 <grub_bfs_read>:
    1ac4:	stp	x29, x30, [sp, #-64]!
    1ac8:	mov	x29, sp
    1acc:	str	x0, [sp, #40]
    1ad0:	str	x1, [sp, #32]
    1ad4:	str	x2, [sp, #24]
    1ad8:	ldr	x0, [sp, #40]
    1adc:	ldr	x0, [x0, #80]
    1ae0:	str	x0, [sp, #56]
    1ae4:	ldr	x0, [sp, #40]
    1ae8:	ldr	x0, [x0, #8]
    1aec:	ldr	x8, [x0]
    1af0:	ldr	x1, [sp, #56]
    1af4:	ldr	x0, [sp, #56]
    1af8:	add	x2, x0, #0x7c
    1afc:	ldr	x0, [sp, #40]
    1b00:	ldr	x3, [x0, #24]
    1b04:	ldr	x0, [sp, #40]
    1b08:	ldr	x4, [x0, #88]
    1b0c:	ldr	x0, [sp, #40]
    1b10:	ldr	x0, [x0, #96]
    1b14:	mov	x7, x0
    1b18:	mov	x6, x4
    1b1c:	ldr	x5, [sp, #24]
    1b20:	ldr	x4, [sp, #32]
    1b24:	mov	x0, x8
    1b28:	bl	104 <read_bfs_file>
    1b2c:	str	w0, [sp, #52]
    1b30:	ldr	w0, [sp, #52]
    1b34:	cmp	w0, #0x0
    1b38:	b.eq	1b44 <grub_bfs_read+0x80>  // b.none
    1b3c:	mov	x0, #0xffffffffffffffff    	// #-1
    1b40:	b	1b48 <grub_bfs_read+0x84>
    1b44:	ldr	x0, [sp, #24]
    1b48:	ldp	x29, x30, [sp], #64
    1b4c:	ret

0000000000001b50 <grub_bfs_label>:
    1b50:	stp	x29, x30, [sp, #-160]!
    1b54:	mov	x29, sp
    1b58:	str	x0, [sp, #24]
    1b5c:	str	x1, [sp, #16]
    1b60:	ldr	x0, [sp, #16]
    1b64:	str	xzr, [x0]
    1b68:	ldr	x0, [sp, #24]
    1b6c:	ldr	x0, [x0]
    1b70:	add	x1, sp, #0x20
    1b74:	bl	1680 <mount>
    1b78:	str	w0, [sp, #156]
    1b7c:	ldr	w0, [sp, #156]
    1b80:	cmp	w0, #0x0
    1b84:	b.eq	1b90 <grub_bfs_label+0x40>  // b.none
    1b88:	ldr	w0, [sp, #156]
    1b8c:	b	1bac <grub_bfs_label+0x5c>
    1b90:	add	x0, sp, #0x20
    1b94:	mov	x1, #0x20                  	// #32
    1b98:	bl	0 <grub_strndup>
    1b9c:	mov	x1, x0
    1ba0:	ldr	x0, [sp, #16]
    1ba4:	str	x1, [x0]
    1ba8:	mov	w0, #0x0                   	// #0
    1bac:	ldp	x29, x30, [sp], #160
    1bb0:	ret

0000000000001bb4 <read_bfs_attr>:
    1bb4:	stp	x29, x30, [sp, #-144]!
    1bb8:	mov	x29, sp
    1bbc:	str	x0, [sp, #56]
    1bc0:	str	x1, [sp, #48]
    1bc4:	str	x2, [sp, #40]
    1bc8:	str	x3, [sp, #32]
    1bcc:	str	x4, [sp, #24]
    1bd0:	str	x5, [sp, #16]
    1bd4:	ldr	x0, [sp, #40]
    1bd8:	add	x0, x0, #0xe8
    1bdc:	str	x0, [sp, #136]
    1be0:	ldr	x0, [sp, #48]
    1be4:	ldr	w0, [x0, #40]
    1be8:	mov	w0, w0
    1bec:	ldr	x1, [sp, #40]
    1bf0:	add	x0, x1, x0
    1bf4:	str	x0, [sp, #112]
    1bf8:	b	1ce4 <read_bfs_attr+0x130>
    1bfc:	ldr	x0, [sp, #136]
    1c00:	str	x0, [sp, #104]
    1c04:	ldr	x0, [sp, #104]
    1c08:	ldrh	w0, [x0, #4]
    1c0c:	cmp	w0, #0x0
    1c10:	b.eq	1cfc <read_bfs_attr+0x148>  // b.none
    1c14:	ldr	x0, [sp, #104]
    1c18:	add	x0, x0, #0x8
    1c1c:	str	x0, [sp, #96]
    1c20:	ldr	x0, [sp, #104]
    1c24:	ldrh	w0, [x0, #4]
    1c28:	and	x0, x0, #0xffff
    1c2c:	add	x0, x0, #0x3
    1c30:	ldr	x1, [sp, #96]
    1c34:	add	x0, x1, x0
    1c38:	str	x0, [sp, #88]
    1c3c:	ldr	x0, [sp, #104]
    1c40:	ldrh	w0, [x0, #6]
    1c44:	and	x0, x0, #0xffff
    1c48:	add	x0, x0, #0x1
    1c4c:	ldr	x1, [sp, #88]
    1c50:	add	x0, x1, x0
    1c54:	str	x0, [sp, #136]
    1c58:	ldr	x0, [sp, #104]
    1c5c:	ldrh	w0, [x0, #4]
    1c60:	and	x0, x0, #0xffff
    1c64:	mov	x2, x0
    1c68:	ldr	x1, [sp, #96]
    1c6c:	ldr	x0, [sp, #32]
    1c70:	bl	0 <grub_memcmp>
    1c74:	cmp	w0, #0x0
    1c78:	b.ne	1ce4 <read_bfs_attr+0x130>  // b.any
    1c7c:	ldr	x0, [sp, #104]
    1c80:	ldrh	w0, [x0, #4]
    1c84:	and	x0, x0, #0xffff
    1c88:	ldr	x1, [sp, #32]
    1c8c:	add	x0, x1, x0
    1c90:	ldrb	w0, [x0]
    1c94:	cmp	w0, #0x0
    1c98:	b.ne	1ce4 <read_bfs_attr+0x130>  // b.any
    1c9c:	ldr	x0, [sp, #16]
    1ca0:	str	x0, [sp, #128]
    1ca4:	ldr	x0, [sp, #104]
    1ca8:	ldrh	w0, [x0, #6]
    1cac:	and	x0, x0, #0xffff
    1cb0:	ldr	x1, [sp, #128]
    1cb4:	cmp	x1, x0
    1cb8:	b.cs	1ccc <read_bfs_attr+0x118>  // b.hs, b.nlast
    1cbc:	ldr	x0, [sp, #104]
    1cc0:	ldrh	w0, [x0, #6]
    1cc4:	and	x0, x0, #0xffff
    1cc8:	str	x0, [sp, #128]
    1ccc:	ldr	x2, [sp, #128]
    1cd0:	ldr	x1, [sp, #88]
    1cd4:	ldr	x0, [sp, #24]
    1cd8:	bl	58 <grub_memcpy>
    1cdc:	ldr	x0, [sp, #128]
    1ce0:	b	1e30 <read_bfs_attr+0x27c>
    1ce4:	ldr	x0, [sp, #136]
    1ce8:	add	x0, x0, #0x8
    1cec:	ldr	x1, [sp, #112]
    1cf0:	cmp	x1, x0
    1cf4:	b.hi	1bfc <read_bfs_attr+0x48>  // b.pmore
    1cf8:	b	1d00 <read_bfs_attr+0x14c>
    1cfc:	nop
    1d00:	ldr	x0, [sp, #40]
    1d04:	ldrh	w0, [x0, #58]
    1d08:	cmp	w0, #0x0
    1d0c:	b.eq	1e2c <read_bfs_attr+0x278>  // b.none
    1d10:	ldr	x0, [sp, #40]
    1d14:	add	x1, x0, #0x34
    1d18:	ldr	x0, [sp, #48]
    1d1c:	ldr	w0, [x0, #40]
    1d20:	mov	w0, w0
    1d24:	mov	x6, x0
    1d28:	ldr	x5, [sp, #40]
    1d2c:	mov	x4, #0x0                   	// #0
    1d30:	mov	x3, #0x0                   	// #0
    1d34:	mov	x2, x1
    1d38:	ldr	x1, [sp, #48]
    1d3c:	ldr	x0, [sp, #56]
    1d40:	bl	84 <read_extent>
    1d44:	str	w0, [sp, #84]
    1d48:	ldr	w0, [sp, #84]
    1d4c:	cmp	w0, #0x0
    1d50:	b.eq	1d5c <read_bfs_attr+0x1a8>  // b.none
    1d54:	mov	x0, #0xffffffffffffffff    	// #-1
    1d58:	b	1e30 <read_bfs_attr+0x27c>
    1d5c:	add	x0, sp, #0x48
    1d60:	mov	x4, x0
    1d64:	ldr	x3, [sp, #32]
    1d68:	ldr	x2, [sp, #40]
    1d6c:	ldr	x1, [sp, #48]
    1d70:	ldr	x0, [sp, #56]
    1d74:	bl	e34 <find_in_b_tree>
    1d78:	str	w0, [sp, #84]
    1d7c:	ldr	w0, [sp, #84]
    1d80:	cmp	w0, #0x0
    1d84:	b.eq	1d90 <read_bfs_attr+0x1dc>  // b.none
    1d88:	mov	x0, #0xffffffffffffffff    	// #-1
    1d8c:	b	1e30 <read_bfs_attr+0x27c>
    1d90:	ldr	x1, [sp, #72]
    1d94:	ldr	x0, [sp, #48]
    1d98:	ldr	w0, [x0, #44]
    1d9c:	sub	w0, w0, #0x9
    1da0:	lsl	x1, x1, x0
    1da4:	ldr	x0, [sp, #48]
    1da8:	ldr	w0, [x0, #40]
    1dac:	mov	w0, w0
    1db0:	ldr	x4, [sp, #40]
    1db4:	mov	x3, x0
    1db8:	mov	x2, #0x0                   	// #0
    1dbc:	ldr	x0, [sp, #56]
    1dc0:	bl	0 <grub_disk_read>
    1dc4:	ldr	x0, [sp, #40]
    1dc8:	ldr	x0, [x0, #208]
    1dcc:	str	x0, [sp, #120]
    1dd0:	ldr	x1, [sp, #120]
    1dd4:	ldr	x0, [sp, #16]
    1dd8:	cmp	x1, x0
    1ddc:	b.ls	1de8 <read_bfs_attr+0x234>  // b.plast
    1de0:	ldr	x0, [sp, #16]
    1de4:	str	x0, [sp, #120]
    1de8:	mov	x7, #0x0                   	// #0
    1dec:	mov	x6, #0x0                   	// #0
    1df0:	ldr	x5, [sp, #120]
    1df4:	ldr	x4, [sp, #24]
    1df8:	mov	x3, #0x0                   	// #0
    1dfc:	ldr	x2, [sp, #40]
    1e00:	ldr	x1, [sp, #48]
    1e04:	ldr	x0, [sp, #56]
    1e08:	bl	104 <read_bfs_file>
    1e0c:	str	w0, [sp, #84]
    1e10:	ldr	w0, [sp, #84]
    1e14:	cmp	w0, #0x0
    1e18:	b.eq	1e24 <read_bfs_attr+0x270>  // b.none
    1e1c:	mov	x0, #0xffffffffffffffff    	// #-1
    1e20:	b	1e30 <read_bfs_attr+0x27c>
    1e24:	ldr	x0, [sp, #120]
    1e28:	b	1e30 <read_bfs_attr+0x27c>
    1e2c:	mov	x0, #0xffffffffffffffff    	// #-1
    1e30:	ldp	x29, x30, [sp], #144
    1e34:	ret

0000000000001e38 <grub_bfs_uuid>:
    1e38:	stp	x29, x30, [sp, #-192]!
    1e3c:	mov	x29, sp
    1e40:	str	x0, [sp, #24]
    1e44:	str	x1, [sp, #16]
    1e48:	ldr	x0, [sp, #16]
    1e4c:	str	xzr, [x0]
    1e50:	ldr	x0, [sp, #24]
    1e54:	ldr	x0, [x0]
    1e58:	add	x1, sp, #0x30
    1e5c:	bl	1680 <mount>
    1e60:	str	w0, [sp, #188]
    1e64:	ldr	w0, [sp, #188]
    1e68:	cmp	w0, #0x0
    1e6c:	b.eq	1e78 <grub_bfs_uuid+0x40>  // b.none
    1e70:	ldr	w0, [sp, #188]
    1e74:	b	1f6c <grub_bfs_uuid+0x134>
    1e78:	ldr	w0, [sp, #88]
    1e7c:	mov	w0, w0
    1e80:	bl	0 <grub_malloc>
    1e84:	str	x0, [sp, #176]
    1e88:	ldr	x0, [sp, #176]
    1e8c:	cmp	x0, #0x0
    1e90:	b.ne	1ea8 <grub_bfs_uuid+0x70>  // b.any
    1e94:	adrp	x0, 0 <grub_fs_register>
    1e98:	add	x0, x0, #0x0
    1e9c:	ldr	x0, [x0]
    1ea0:	ldr	w0, [x0]
    1ea4:	b	1f6c <grub_bfs_uuid+0x134>
    1ea8:	ldr	x0, [sp, #24]
    1eac:	ldr	x7, [x0]
    1eb0:	ldr	w0, [sp, #88]
    1eb4:	mov	w2, w0
    1eb8:	add	x0, sp, #0x30
    1ebc:	add	x1, x0, #0x74
    1ec0:	add	x0, sp, #0x30
    1ec4:	mov	x6, x2
    1ec8:	ldr	x5, [sp, #176]
    1ecc:	mov	x4, #0x0                   	// #0
    1ed0:	mov	x3, #0x0                   	// #0
    1ed4:	mov	x2, x1
    1ed8:	mov	x1, x0
    1edc:	mov	x0, x7
    1ee0:	bl	84 <read_extent>
    1ee4:	str	w0, [sp, #188]
    1ee8:	ldr	w0, [sp, #188]
    1eec:	cmp	w0, #0x0
    1ef0:	b.eq	1f04 <grub_bfs_uuid+0xcc>  // b.none
    1ef4:	ldr	x0, [sp, #176]
    1ef8:	bl	0 <grub_free>
    1efc:	ldr	w0, [sp, #188]
    1f00:	b	1f6c <grub_bfs_uuid+0x134>
    1f04:	ldr	x0, [sp, #24]
    1f08:	ldr	x6, [x0]
    1f0c:	add	x0, sp, #0x28
    1f10:	add	x1, sp, #0x30
    1f14:	mov	x5, #0x8                   	// #8
    1f18:	mov	x4, x0
    1f1c:	adrp	x0, 0 <grub_fs_register>
    1f20:	add	x0, x0, #0x0
    1f24:	ldr	x3, [x0]
    1f28:	ldr	x2, [sp, #176]
    1f2c:	mov	x0, x6
    1f30:	bl	1bb4 <read_bfs_attr>
    1f34:	cmp	x0, #0x8
    1f38:	b.ne	1f60 <grub_bfs_uuid+0x128>  // b.any
    1f3c:	ldr	x0, [sp, #40]
    1f40:	mov	x1, x0
    1f44:	adrp	x0, 0 <grub_fs_register>
    1f48:	add	x0, x0, #0x0
    1f4c:	ldr	x0, [x0]
    1f50:	bl	0 <grub_xasprintf>
    1f54:	mov	x1, x0
    1f58:	ldr	x0, [sp, #16]
    1f5c:	str	x1, [x0]
    1f60:	ldr	x0, [sp, #176]
    1f64:	bl	0 <grub_free>
    1f68:	mov	w0, #0x0                   	// #0
    1f6c:	ldp	x29, x30, [sp], #192
    1f70:	ret
    1f74:	nop
	...

0000000000001f90 <grub_mod_init>:
    1f90:	stp	x29, x30, [sp, #-32]!
    1f94:	mov	x29, sp
    1f98:	str	x0, [sp, #24]
    1f9c:	adrp	x0, 0 <grub_fs_register>
    1fa0:	add	x0, x0, #0x0
    1fa4:	ldr	x0, [x0]
    1fa8:	bl	0 <grub_fs_register>
    1fac:	nop
    1fb0:	ldp	x29, x30, [sp], #32
    1fb4:	ret
	...

0000000000001fc0 <grub_mod_fini>:
    1fc0:	stp	x29, x30, [sp, #-16]!
    1fc4:	mov	x29, sp
    1fc8:	adrp	x0, 0 <grub_fs_register>
    1fcc:	add	x0, x0, #0x0
    1fd0:	ldr	x0, [x0]
    1fd4:	bl	38 <grub_fs_unregister>
    1fd8:	nop
    1fdc:	ldp	x29, x30, [sp], #16
    1fe0:	ret
    1fe4:	nop
	...
