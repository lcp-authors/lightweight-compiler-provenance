
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ae8 <_init>:
  400ae8:	stp	x29, x30, [sp, #-16]!
  400aec:	mov	x29, sp
  400af0:	bl	400f24 <call_weak_fn>
  400af4:	ldp	x29, x30, [sp], #16
  400af8:	ret

Disassembly of section .plt:

0000000000400b00 <.plt>:
  400b00:	stp	x16, x30, [sp, #-16]!
  400b04:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b08:	ldr	x17, [x16, #3928]
  400b0c:	add	x16, x16, #0xf58
  400b10:	br	x17
  400b14:	nop
  400b18:	nop
  400b1c:	nop

0000000000400b20 <__libc_start_main@plt>:
  400b20:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b24:	ldr	x17, [x16, #3936]
  400b28:	add	x16, x16, #0xf60
  400b2c:	br	x17

0000000000400b30 <__gmon_start__@plt>:
  400b30:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b34:	ldr	x17, [x16, #3944]
  400b38:	add	x16, x16, #0xf68
  400b3c:	br	x17

0000000000400b40 <polkit_agent_close@plt>:
  400b40:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b44:	ldr	x17, [x16, #3952]
  400b48:	add	x16, x16, #0xf70
  400b4c:	br	x17

0000000000400b50 <log_parse_environment_realm@plt>:
  400b50:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b54:	ldr	x17, [x16, #3960]
  400b58:	add	x16, x16, #0xf78
  400b5c:	br	x17

0000000000400b60 <log_assert_failed_realm@plt>:
  400b60:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b64:	ldr	x17, [x16, #3968]
  400b68:	add	x16, x16, #0xf80
  400b6c:	br	x17

0000000000400b70 <getopt_long@plt>:
  400b70:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b74:	ldr	x17, [x16, #3976]
  400b78:	add	x16, x16, #0xf88
  400b7c:	br	x17

0000000000400b80 <log_assert_failed_unreachable_realm@plt>:
  400b80:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b84:	ldr	x17, [x16, #3984]
  400b88:	add	x16, x16, #0xf90
  400b8c:	br	x17

0000000000400b90 <abort@plt>:
  400b90:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400b94:	ldr	x17, [x16, #3992]
  400b98:	add	x16, x16, #0xf98
  400b9c:	br	x17

0000000000400ba0 <ask_password_agent_close@plt>:
  400ba0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400ba4:	ldr	x17, [x16, #4000]
  400ba8:	add	x16, x16, #0xfa0
  400bac:	br	x17

0000000000400bb0 <version@plt>:
  400bb0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400bb4:	ldr	x17, [x16, #4008]
  400bb8:	add	x16, x16, #0xfa8
  400bbc:	br	x17

0000000000400bc0 <pager_close@plt>:
  400bc0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400bc4:	ldr	x17, [x16, #4016]
  400bc8:	add	x16, x16, #0xfb0
  400bcc:	br	x17

0000000000400bd0 <log_internal_realm@plt>:
  400bd0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400bd4:	ldr	x17, [x16, #4024]
  400bd8:	add	x16, x16, #0xfb8
  400bdc:	br	x17

0000000000400be0 <on_ac_power@plt>:
  400be0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400be4:	ldr	x17, [x16, #4032]
  400be8:	add	x16, x16, #0xfc0
  400bec:	br	x17

0000000000400bf0 <puts@plt>:
  400bf0:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400bf4:	ldr	x17, [x16, #4040]
  400bf8:	add	x16, x16, #0xfc8
  400bfc:	br	x17

0000000000400c00 <mac_selinux_finish@plt>:
  400c00:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400c04:	ldr	x17, [x16, #4048]
  400c08:	add	x16, x16, #0xfd0
  400c0c:	br	x17

0000000000400c10 <printf@plt>:
  400c10:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400c14:	ldr	x17, [x16, #4056]
  400c18:	add	x16, x16, #0xfd8
  400c1c:	br	x17

0000000000400c20 <log_open@plt>:
  400c20:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400c24:	ldr	x17, [x16, #4064]
  400c28:	add	x16, x16, #0xfe0
  400c2c:	br	x17

0000000000400c30 <log_get_max_level_realm@plt>:
  400c30:	adrp	x16, 411000 <__FRAME_END__+0xfc00>
  400c34:	ldr	x17, [x16, #4072]
  400c38:	add	x16, x16, #0xfe8
  400c3c:	br	x17

Disassembly of section .text:

0000000000400c40 <main>:
  400c40:	stp	x29, x30, [sp, #-64]!
  400c44:	mov	x29, sp
  400c48:	stp	x19, x20, [sp, #16]
  400c4c:	mov	w19, w0
  400c50:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400c54:	mov	x20, x1
  400c58:	stp	x21, x22, [sp, #32]
  400c5c:	str	w19, [x0, #24]
  400c60:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400c64:	stp	x23, x24, [sp, #48]
  400c68:	str	x1, [x0]
  400c6c:	mov	w0, #0x0                   	// #0
  400c70:	bl	400b50 <log_parse_environment_realm@plt>
  400c74:	bl	400c20 <log_open@plt>
  400c78:	tbz	w19, #31, 400ca0 <main+0x60>
  400c7c:	adrp	x4, 401000 <__libc_csu_init>
  400c80:	adrp	x2, 401000 <__libc_csu_init>
  400c84:	adrp	x1, 401000 <__libc_csu_init>
  400c88:	add	x4, x4, #0x208
  400c8c:	add	x2, x2, #0xb2
  400c90:	add	x1, x1, #0xca
  400c94:	mov	w3, #0x22                  	// #34
  400c98:	mov	w0, #0x0                   	// #0
  400c9c:	bl	400b60 <log_assert_failed_realm@plt>
  400ca0:	cbz	x20, 400d38 <main+0xf8>
  400ca4:	adrp	x22, 401000 <__libc_csu_init>
  400ca8:	adrp	x21, 401000 <__libc_csu_init>
  400cac:	adrp	x23, 412000 <saved_argv@@SD_SHARED>
  400cb0:	add	x22, x22, #0x228
  400cb4:	add	x21, x21, #0x1ac
  400cb8:	add	x23, x23, #0x1d
  400cbc:	mov	w24, #0x1                   	// #1
  400cc0:	mov	x3, x22
  400cc4:	mov	x2, x21
  400cc8:	mov	x1, x20
  400ccc:	mov	w0, w19
  400cd0:	mov	x4, #0x0                   	// #0
  400cd4:	bl	400b70 <getopt_long@plt>
  400cd8:	tbz	w0, #31, 400d58 <main+0x118>
  400cdc:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400ce0:	ldr	w0, [x0, #16]
  400ce4:	cmp	w19, w0
  400ce8:	b.gt	400e28 <main+0x1e8>
  400cec:	bl	400be0 <on_ac_power@plt>
  400cf0:	mov	w19, w0
  400cf4:	tbz	w0, #31, 400e80 <main+0x240>
  400cf8:	mov	w0, #0x0                   	// #0
  400cfc:	bl	400c30 <log_get_max_level_realm@plt>
  400d00:	cmp	w0, #0x2
  400d04:	b.le	400e70 <main+0x230>
  400d08:	mov	w1, w19
  400d0c:	adrp	x5, 401000 <__libc_csu_init>
  400d10:	adrp	x4, 401000 <__libc_csu_init>
  400d14:	add	x5, x5, #0x1c6
  400d18:	add	x4, x4, #0x21e
  400d1c:	mov	w3, #0x52                  	// #82
  400d20:	adrp	x2, 401000 <__libc_csu_init>
  400d24:	mov	w0, #0x3                   	// #3
  400d28:	add	x2, x2, #0xb2
  400d2c:	bl	400bd0 <log_internal_realm@plt>
  400d30:	mov	w19, w0
  400d34:	b	400dcc <main+0x18c>
  400d38:	adrp	x4, 401000 <__libc_csu_init>
  400d3c:	adrp	x2, 401000 <__libc_csu_init>
  400d40:	adrp	x1, 401000 <__libc_csu_init>
  400d44:	add	x4, x4, #0x208
  400d48:	add	x2, x2, #0xb2
  400d4c:	add	x1, x1, #0xd4
  400d50:	mov	w3, #0x23                  	// #35
  400d54:	b	400c98 <main+0x58>
  400d58:	cmp	w0, #0x76
  400d5c:	b.eq	400e20 <main+0x1e0>  // b.none
  400d60:	b.gt	400d98 <main+0x158>
  400d64:	cmp	w0, #0x3f
  400d68:	b.eq	400eb4 <main+0x274>  // b.none
  400d6c:	cmp	w0, #0x68
  400d70:	b.eq	400db4 <main+0x174>  // b.none
  400d74:	adrp	x4, 401000 <__libc_csu_init>
  400d78:	adrp	x2, 401000 <__libc_csu_init>
  400d7c:	adrp	x1, 401000 <__libc_csu_init>
  400d80:	add	x4, x4, #0x208
  400d84:	add	x2, x2, #0xb2
  400d88:	add	x1, x1, #0x19b
  400d8c:	mov	w3, #0x38                  	// #56
  400d90:	mov	w0, #0x0                   	// #0
  400d94:	bl	400b80 <log_assert_failed_unreachable_realm@plt>
  400d98:	cmp	w0, #0x100
  400d9c:	b.ne	400d74 <main+0x134>  // b.any
  400da0:	bl	400bb0 <version@plt>
  400da4:	mov	w19, w0
  400da8:	cmp	w0, #0x0
  400dac:	b.gt	400cec <main+0xac>
  400db0:	b	400dcc <main+0x18c>
  400db4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400db8:	mov	w19, #0x0                   	// #0
  400dbc:	ldr	x1, [x0, #8]
  400dc0:	adrp	x0, 401000 <__libc_csu_init>
  400dc4:	add	x0, x0, #0xd9
  400dc8:	bl	400c10 <printf@plt>
  400dcc:	bl	400ba0 <ask_password_agent_close@plt>
  400dd0:	bl	400b40 <polkit_agent_close@plt>
  400dd4:	bl	400bc0 <pager_close@plt>
  400dd8:	bl	400c00 <mac_selinux_finish@plt>
  400ddc:	adrp	x0, 401000 <__libc_csu_init>
  400de0:	ldr	x0, [x0, #504]
  400de4:	cbz	x0, 400e00 <main+0x1c0>
  400de8:	add	x0, x0, #0x7
  400dec:	adrp	x21, 401000 <__libc_csu_init>
  400df0:	and	x0, x0, #0xfffffffffffffff8
  400df4:	ldr	x1, [x21, #512]
  400df8:	cmp	x0, x1
  400dfc:	b.cc	400ebc <main+0x27c>  // b.lo, b.ul, b.last
  400e00:	cmp	w19, #0x0
  400e04:	csinc	w19, w19, wzr, ge  // ge = tcont
  400e08:	mov	w0, w19
  400e0c:	ldp	x19, x20, [sp, #16]
  400e10:	ldp	x21, x22, [sp, #32]
  400e14:	ldp	x23, x24, [sp, #48]
  400e18:	ldp	x29, x30, [sp], #64
  400e1c:	ret
  400e20:	strb	w24, [x23]
  400e24:	b	400cc0 <main+0x80>
  400e28:	mov	w0, #0x0                   	// #0
  400e2c:	bl	400c30 <log_get_max_level_realm@plt>
  400e30:	cmp	w0, #0x2
  400e34:	b.le	400eb4 <main+0x274>
  400e38:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400e3c:	mov	w1, #0x16                  	// #22
  400e40:	adrp	x5, 401000 <__libc_csu_init>
  400e44:	adrp	x4, 401000 <__libc_csu_init>
  400e48:	ldr	x6, [x0, #8]
  400e4c:	add	x5, x5, #0x1af
  400e50:	add	x4, x4, #0x213
  400e54:	mov	w3, #0x3c                  	// #60
  400e58:	adrp	x2, 401000 <__libc_csu_init>
  400e5c:	movk	w1, #0x4000, lsl #16
  400e60:	add	x2, x2, #0xb2
  400e64:	mov	w0, #0x3                   	// #3
  400e68:	bl	400bd0 <log_internal_realm@plt>
  400e6c:	b	400da4 <main+0x164>
  400e70:	neg	w19, w19
  400e74:	and	w19, w19, #0xff
  400e78:	neg	w19, w19
  400e7c:	b	400dcc <main+0x18c>
  400e80:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400e84:	ldrb	w0, [x0, #29]
  400e88:	cbz	w0, 400ea8 <main+0x268>
  400e8c:	cmp	w19, #0x0
  400e90:	adrp	x1, 401000 <__libc_csu_init>
  400e94:	add	x1, x1, #0xac
  400e98:	adrp	x0, 401000 <__libc_csu_init>
  400e9c:	add	x0, x0, #0xa8
  400ea0:	csel	x0, x0, x1, ne  // ne = any
  400ea4:	bl	400bf0 <puts@plt>
  400ea8:	cmp	w19, #0x0
  400eac:	cset	w19, eq  // eq = none
  400eb0:	b	400dcc <main+0x18c>
  400eb4:	mov	w19, #0xffffffea            	// #-22
  400eb8:	b	400dcc <main+0x18c>
  400ebc:	mov	x20, x0
  400ec0:	ldr	x1, [x0, #8]
  400ec4:	ldr	x0, [x20], #23
  400ec8:	blr	x1
  400ecc:	and	x0, x20, #0xfffffffffffffff8
  400ed0:	b	400df4 <main+0x1b4>

0000000000400ed4 <_start>:
  400ed4:	mov	x29, #0x0                   	// #0
  400ed8:	mov	x30, #0x0                   	// #0
  400edc:	mov	x5, x0
  400ee0:	ldr	x1, [sp]
  400ee4:	add	x2, sp, #0x8
  400ee8:	mov	x6, sp
  400eec:	movz	x0, #0x0, lsl #48
  400ef0:	movk	x0, #0x0, lsl #32
  400ef4:	movk	x0, #0x40, lsl #16
  400ef8:	movk	x0, #0xc40
  400efc:	movz	x3, #0x0, lsl #48
  400f00:	movk	x3, #0x0, lsl #32
  400f04:	movk	x3, #0x40, lsl #16
  400f08:	movk	x3, #0x1000
  400f0c:	movz	x4, #0x0, lsl #48
  400f10:	movk	x4, #0x0, lsl #32
  400f14:	movk	x4, #0x40, lsl #16
  400f18:	movk	x4, #0x1080
  400f1c:	bl	400b20 <__libc_start_main@plt>
  400f20:	bl	400b90 <abort@plt>

0000000000400f24 <call_weak_fn>:
  400f24:	adrp	x0, 411000 <__FRAME_END__+0xfc00>
  400f28:	ldr	x0, [x0, #4088]
  400f2c:	cbz	x0, 400f34 <call_weak_fn+0x10>
  400f30:	b	400b30 <__gmon_start__@plt>
  400f34:	ret

0000000000400f38 <deregister_tm_clones>:
  400f38:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f3c:	add	x1, x0, #0x0
  400f40:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f44:	add	x0, x0, #0x0
  400f48:	cmp	x1, x0
  400f4c:	b.eq	400f78 <deregister_tm_clones+0x40>  // b.none
  400f50:	sub	sp, sp, #0x10
  400f54:	adrp	x1, 401000 <__libc_csu_init>
  400f58:	ldr	x1, [x1, #152]
  400f5c:	str	x1, [sp, #8]
  400f60:	cbz	x1, 400f70 <deregister_tm_clones+0x38>
  400f64:	mov	x16, x1
  400f68:	add	sp, sp, #0x10
  400f6c:	br	x16
  400f70:	add	sp, sp, #0x10
  400f74:	ret
  400f78:	ret

0000000000400f7c <register_tm_clones>:
  400f7c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f80:	add	x1, x0, #0x0
  400f84:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f88:	add	x0, x0, #0x0
  400f8c:	sub	x1, x1, x0
  400f90:	mov	x2, #0x2                   	// #2
  400f94:	asr	x1, x1, #3
  400f98:	sdiv	x1, x1, x2
  400f9c:	cbz	x1, 400fc8 <register_tm_clones+0x4c>
  400fa0:	sub	sp, sp, #0x10
  400fa4:	adrp	x2, 401000 <__libc_csu_init>
  400fa8:	ldr	x2, [x2, #160]
  400fac:	str	x2, [sp, #8]
  400fb0:	cbz	x2, 400fc0 <register_tm_clones+0x44>
  400fb4:	mov	x16, x2
  400fb8:	add	sp, sp, #0x10
  400fbc:	br	x16
  400fc0:	add	sp, sp, #0x10
  400fc4:	ret
  400fc8:	ret

0000000000400fcc <__do_global_dtors_aux>:
  400fcc:	stp	x29, x30, [sp, #-32]!
  400fd0:	mov	x29, sp
  400fd4:	str	x19, [sp, #16]
  400fd8:	adrp	x19, 412000 <saved_argv@@SD_SHARED>
  400fdc:	ldrb	w0, [x19, #28]
  400fe0:	cbnz	w0, 400ff0 <__do_global_dtors_aux+0x24>
  400fe4:	bl	400f38 <deregister_tm_clones>
  400fe8:	mov	w0, #0x1                   	// #1
  400fec:	strb	w0, [x19, #28]
  400ff0:	ldr	x19, [sp, #16]
  400ff4:	ldp	x29, x30, [sp], #32
  400ff8:	ret

0000000000400ffc <frame_dummy>:
  400ffc:	b	400f7c <register_tm_clones>

0000000000401000 <__libc_csu_init>:
  401000:	stp	x29, x30, [sp, #-64]!
  401004:	mov	x29, sp
  401008:	stp	x19, x20, [sp, #16]
  40100c:	adrp	x20, 411000 <__FRAME_END__+0xfc00>
  401010:	add	x20, x20, #0xd20
  401014:	stp	x21, x22, [sp, #32]
  401018:	adrp	x21, 411000 <__FRAME_END__+0xfc00>
  40101c:	add	x21, x21, #0xd18
  401020:	sub	x20, x20, x21
  401024:	mov	w22, w0
  401028:	stp	x23, x24, [sp, #48]
  40102c:	mov	x23, x1
  401030:	mov	x24, x2
  401034:	bl	400ae8 <_init>
  401038:	cmp	xzr, x20, asr #3
  40103c:	b.eq	401068 <__libc_csu_init+0x68>  // b.none
  401040:	asr	x20, x20, #3
  401044:	mov	x19, #0x0                   	// #0
  401048:	ldr	x3, [x21, x19, lsl #3]
  40104c:	mov	x2, x24
  401050:	add	x19, x19, #0x1
  401054:	mov	x1, x23
  401058:	mov	w0, w22
  40105c:	blr	x3
  401060:	cmp	x20, x19
  401064:	b.ne	401048 <__libc_csu_init+0x48>  // b.any
  401068:	ldp	x19, x20, [sp, #16]
  40106c:	ldp	x21, x22, [sp, #32]
  401070:	ldp	x23, x24, [sp, #48]
  401074:	ldp	x29, x30, [sp], #64
  401078:	ret
  40107c:	nop

0000000000401080 <__libc_csu_fini>:
  401080:	ret

Disassembly of section .fini:

0000000000401084 <_fini>:
  401084:	stp	x29, x30, [sp, #-16]!
  401088:	mov	x29, sp
  40108c:	ldp	x29, x30, [sp], #16
  401090:	ret
