
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_datetime.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000046b8 <.init>:
    46b8:	stp	x29, x30, [sp, #-16]!
    46bc:	mov	x29, sp
    46c0:	bl	4c10 <PyNumber_FloorDivide@plt+0x10>
    46c4:	ldp	x29, x30, [sp], #16
    46c8:	ret

Disassembly of section .plt:

00000000000046d0 <memcpy@plt-0x20>:
    46d0:	stp	x16, x30, [sp, #-16]!
    46d4:	adrp	x16, 24000 <PyInit__datetime@@Base+0x155b0>
    46d8:	ldr	x17, [x16, #4088]
    46dc:	add	x16, x16, #0xff8
    46e0:	br	x17
    46e4:	nop
    46e8:	nop
    46ec:	nop

00000000000046f0 <memcpy@plt>:
    46f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    46f4:	ldr	x17, [x16]
    46f8:	add	x16, x16, #0x0
    46fc:	br	x17

0000000000004700 <PyUnicode_FromFormat@plt>:
    4700:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4704:	ldr	x17, [x16, #8]
    4708:	add	x16, x16, #0x8
    470c:	br	x17

0000000000004710 <_PyUnicode_Ready@plt>:
    4710:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16, #16]
    4718:	add	x16, x16, #0x10
    471c:	br	x17

0000000000004720 <PyDict_SetItemString@plt>:
    4720:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4724:	ldr	x17, [x16, #24]
    4728:	add	x16, x16, #0x18
    472c:	br	x17

0000000000004730 <strlen@plt>:
    4730:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16, #32]
    4738:	add	x16, x16, #0x20
    473c:	br	x17

0000000000004740 <PyModule_AddIntConstant@plt>:
    4740:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #40]
    4748:	add	x16, x16, #0x28
    474c:	br	x17

0000000000004750 <PyArg_ParseTupleAndKeywords@plt>:
    4750:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #48]
    4758:	add	x16, x16, #0x30
    475c:	br	x17

0000000000004760 <_PyObject_LookupAttrId@plt>:
    4760:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #56]
    4768:	add	x16, x16, #0x38
    476c:	br	x17

0000000000004770 <_PyBytes_Resize@plt>:
    4770:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #64]
    4778:	add	x16, x16, #0x40
    477c:	br	x17

0000000000004780 <PyObject_CallMethod@plt>:
    4780:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #72]
    4788:	add	x16, x16, #0x48
    478c:	br	x17

0000000000004790 <PyLong_FromDouble@plt>:
    4790:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #80]
    4798:	add	x16, x16, #0x50
    479c:	br	x17

00000000000047a0 <_PyUnicode_Copy@plt>:
    47a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #88]
    47a8:	add	x16, x16, #0x58
    47ac:	br	x17

00000000000047b0 <_PyTime_ObjectToTimeval@plt>:
    47b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #96]
    47b8:	add	x16, x16, #0x60
    47bc:	br	x17

00000000000047c0 <PyNumber_Add@plt>:
    47c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #104]
    47c8:	add	x16, x16, #0x68
    47cc:	br	x17

00000000000047d0 <__cxa_finalize@plt>:
    47d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #112]
    47d8:	add	x16, x16, #0x70
    47dc:	br	x17

00000000000047e0 <sprintf@plt>:
    47e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #120]
    47e8:	add	x16, x16, #0x78
    47ec:	br	x17

00000000000047f0 <_PyTime_GetSystemClock@plt>:
    47f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #128]
    47f8:	add	x16, x16, #0x80
    47fc:	br	x17

0000000000004800 <PyBytes_FromStringAndSize@plt>:
    4800:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #136]
    4808:	add	x16, x16, #0x88
    480c:	br	x17

0000000000004810 <_Py_Dealloc@plt>:
    4810:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #144]
    4818:	add	x16, x16, #0x90
    481c:	br	x17

0000000000004820 <PyErr_NoMemory@plt>:
    4820:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #152]
    4828:	add	x16, x16, #0x98
    482c:	br	x17

0000000000004830 <PyNumber_Multiply@plt>:
    4830:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #160]
    4838:	add	x16, x16, #0xa0
    483c:	br	x17

0000000000004840 <_PyTime_AsTimevalTime_t@plt>:
    4840:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #168]
    4848:	add	x16, x16, #0xa8
    484c:	br	x17

0000000000004850 <PyObject_Str@plt>:
    4850:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #176]
    4858:	add	x16, x16, #0xb0
    485c:	br	x17

0000000000004860 <PyUnicode_WriteChar@plt>:
    4860:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #184]
    4868:	add	x16, x16, #0xb8
    486c:	br	x17

0000000000004870 <_PyArg_UnpackKeywords@plt>:
    4870:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #192]
    4878:	add	x16, x16, #0xc0
    487c:	br	x17

0000000000004880 <PyErr_SetString@plt>:
    4880:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #200]
    4888:	add	x16, x16, #0xc8
    488c:	br	x17

0000000000004890 <PyObject_Malloc@plt>:
    4890:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #208]
    4898:	add	x16, x16, #0xd0
    489c:	br	x17

00000000000048a0 <PyErr_ExceptionMatches@plt>:
    48a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48a4:	ldr	x17, [x16, #216]
    48a8:	add	x16, x16, #0xd8
    48ac:	br	x17

00000000000048b0 <_Py_HashBytes@plt>:
    48b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48b4:	ldr	x17, [x16, #224]
    48b8:	add	x16, x16, #0xe0
    48bc:	br	x17

00000000000048c0 <PyOS_snprintf@plt>:
    48c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48c4:	ldr	x17, [x16, #232]
    48c8:	add	x16, x16, #0xe8
    48cc:	br	x17

00000000000048d0 <PyUnicode_GetLength@plt>:
    48d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48d4:	ldr	x17, [x16, #240]
    48d8:	add	x16, x16, #0xf0
    48dc:	br	x17

00000000000048e0 <PyFloat_FromDouble@plt>:
    48e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48e4:	ldr	x17, [x16, #248]
    48e8:	add	x16, x16, #0xf8
    48ec:	br	x17

00000000000048f0 <PyType_Ready@plt>:
    48f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48f4:	ldr	x17, [x16, #256]
    48f8:	add	x16, x16, #0x100
    48fc:	br	x17

0000000000004900 <PyLong_FromLong@plt>:
    4900:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4904:	ldr	x17, [x16, #264]
    4908:	add	x16, x16, #0x108
    490c:	br	x17

0000000000004910 <_PyLong_DivmodNear@plt>:
    4910:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4914:	ldr	x17, [x16, #272]
    4918:	add	x16, x16, #0x110
    491c:	br	x17

0000000000004920 <PyUnicode_DecodeLocale@plt>:
    4920:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4924:	ldr	x17, [x16, #280]
    4928:	add	x16, x16, #0x118
    492c:	br	x17

0000000000004930 <PyNumber_And@plt>:
    4930:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4934:	ldr	x17, [x16, #288]
    4938:	add	x16, x16, #0x120
    493c:	br	x17

0000000000004940 <__gmon_start__@plt>:
    4940:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4944:	ldr	x17, [x16, #296]
    4948:	add	x16, x16, #0x128
    494c:	br	x17

0000000000004950 <PyObject_CallFunction@plt>:
    4950:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4954:	ldr	x17, [x16, #304]
    4958:	add	x16, x16, #0x130
    495c:	br	x17

0000000000004960 <PyUnicode_AsLatin1String@plt>:
    4960:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4964:	ldr	x17, [x16, #312]
    4968:	add	x16, x16, #0x138
    496c:	br	x17

0000000000004970 <PyTuple_New@plt>:
    4970:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4974:	ldr	x17, [x16, #320]
    4978:	add	x16, x16, #0x140
    497c:	br	x17

0000000000004980 <PyNumber_Remainder@plt>:
    4980:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4984:	ldr	x17, [x16, #328]
    4988:	add	x16, x16, #0x148
    498c:	br	x17

0000000000004990 <PyArg_UnpackTuple@plt>:
    4990:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4994:	ldr	x17, [x16, #336]
    4998:	add	x16, x16, #0x150
    499c:	br	x17

00000000000049a0 <Py_BuildValue@plt>:
    49a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49a4:	ldr	x17, [x16, #344]
    49a8:	add	x16, x16, #0x158
    49ac:	br	x17

00000000000049b0 <PyErr_Occurred@plt>:
    49b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49b4:	ldr	x17, [x16, #352]
    49b8:	add	x16, x16, #0x160
    49bc:	br	x17

00000000000049c0 <PyModule_Create2@plt>:
    49c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49c4:	ldr	x17, [x16, #360]
    49c8:	add	x16, x16, #0x168
    49cc:	br	x17

00000000000049d0 <PyImport_ImportModuleNoBlock@plt>:
    49d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49d4:	ldr	x17, [x16, #368]
    49d8:	add	x16, x16, #0x170
    49dc:	br	x17

00000000000049e0 <memcmp@plt>:
    49e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49e4:	ldr	x17, [x16, #376]
    49e8:	add	x16, x16, #0x178
    49ec:	br	x17

00000000000049f0 <strcmp@plt>:
    49f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49f4:	ldr	x17, [x16, #384]
    49f8:	add	x16, x16, #0x180
    49fc:	br	x17

0000000000004a00 <_Py_CheckFunctionResult@plt>:
    4a00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a04:	ldr	x17, [x16, #392]
    4a08:	add	x16, x16, #0x188
    4a0c:	br	x17

0000000000004a10 <PyFloat_AsDouble@plt>:
    4a10:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a14:	ldr	x17, [x16, #400]
    4a18:	add	x16, x16, #0x190
    4a1c:	br	x17

0000000000004a20 <PyObject_IsTrue@plt>:
    4a20:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a24:	ldr	x17, [x16, #408]
    4a28:	add	x16, x16, #0x198
    4a2c:	br	x17

0000000000004a30 <PyArg_ParseTuple@plt>:
    4a30:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a34:	ldr	x17, [x16, #416]
    4a38:	add	x16, x16, #0x1a0
    4a3c:	br	x17

0000000000004a40 <Py_FatalError@plt>:
    4a40:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a44:	ldr	x17, [x16, #424]
    4a48:	add	x16, x16, #0x1a8
    4a4c:	br	x17

0000000000004a50 <PyObject_Hash@plt>:
    4a50:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a54:	ldr	x17, [x16, #432]
    4a58:	add	x16, x16, #0x1b0
    4a5c:	br	x17

0000000000004a60 <_PyObject_CallMethodId@plt>:
    4a60:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a64:	ldr	x17, [x16, #440]
    4a68:	add	x16, x16, #0x1b8
    4a6c:	br	x17

0000000000004a70 <_PyTime_ObjectToTime_t@plt>:
    4a70:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a74:	ldr	x17, [x16, #448]
    4a78:	add	x16, x16, #0x1c0
    4a7c:	br	x17

0000000000004a80 <modf@plt>:
    4a80:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a84:	ldr	x17, [x16, #456]
    4a88:	add	x16, x16, #0x1c8
    4a8c:	br	x17

0000000000004a90 <PyLong_AsDouble@plt>:
    4a90:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a94:	ldr	x17, [x16, #464]
    4a98:	add	x16, x16, #0x1d0
    4a9c:	br	x17

0000000000004aa0 <_PyLong_AsTime_t@plt>:
    4aa0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4aa4:	ldr	x17, [x16, #472]
    4aa8:	add	x16, x16, #0x1d8
    4aac:	br	x17

0000000000004ab0 <_PyTraceMalloc_NewReference@plt>:
    4ab0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ab4:	ldr	x17, [x16, #480]
    4ab8:	add	x16, x16, #0x1e0
    4abc:	br	x17

0000000000004ac0 <_PyObject_GetDictPtr@plt>:
    4ac0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ac4:	ldr	x17, [x16, #488]
    4ac8:	add	x16, x16, #0x1e8
    4acc:	br	x17

0000000000004ad0 <PyUnicode_FromString@plt>:
    4ad0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ad4:	ldr	x17, [x16, #496]
    4ad8:	add	x16, x16, #0x1f0
    4adc:	br	x17

0000000000004ae0 <_PyObject_CallMethodIdObjArgs@plt>:
    4ae0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ae4:	ldr	x17, [x16, #504]
    4ae8:	add	x16, x16, #0x1f8
    4aec:	br	x17

0000000000004af0 <PyType_GetFlags@plt>:
    4af0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4af4:	ldr	x17, [x16, #512]
    4af8:	add	x16, x16, #0x200
    4afc:	br	x17

0000000000004b00 <PyModule_AddObject@plt>:
    4b00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b04:	ldr	x17, [x16, #520]
    4b08:	add	x16, x16, #0x208
    4b0c:	br	x17

0000000000004b10 <PyBytes_AsString@plt>:
    4b10:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16, #528]
    4b18:	add	x16, x16, #0x210
    4b1c:	br	x17

0000000000004b20 <PyCapsule_New@plt>:
    4b20:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #536]
    4b28:	add	x16, x16, #0x218
    4b2c:	br	x17

0000000000004b30 <PyType_IsSubtype@plt>:
    4b30:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #544]
    4b38:	add	x16, x16, #0x220
    4b3c:	br	x17

0000000000004b40 <PyUnicode_AsUTF8AndSize@plt>:
    4b40:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #552]
    4b48:	add	x16, x16, #0x228
    4b4c:	br	x17

0000000000004b50 <PyTuple_Size@plt>:
    4b50:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #560]
    4b58:	add	x16, x16, #0x230
    4b5c:	br	x17

0000000000004b60 <PyErr_Format@plt>:
    4b60:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #568]
    4b68:	add	x16, x16, #0x238
    4b6c:	br	x17

0000000000004b70 <PyNumber_Divmod@plt>:
    4b70:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #576]
    4b78:	add	x16, x16, #0x240
    4b7c:	br	x17

0000000000004b80 <PyUnicode_FromStringAndSize@plt>:
    4b80:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #584]
    4b88:	add	x16, x16, #0x248
    4b8c:	br	x17

0000000000004b90 <_PyObject_MakeTpCall@plt>:
    4b90:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #592]
    4b98:	add	x16, x16, #0x250
    4b9c:	br	x17

0000000000004ba0 <PyUnicode_AppendAndDel@plt>:
    4ba0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #600]
    4ba8:	add	x16, x16, #0x258
    4bac:	br	x17

0000000000004bb0 <_PyLong_AsInt@plt>:
    4bb0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #608]
    4bb8:	add	x16, x16, #0x260
    4bbc:	br	x17

0000000000004bc0 <_PyTime_localtime@plt>:
    4bc0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #616]
    4bc8:	add	x16, x16, #0x268
    4bcc:	br	x17

0000000000004bd0 <PyTuple_Pack@plt>:
    4bd0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #624]
    4bd8:	add	x16, x16, #0x270
    4bdc:	br	x17

0000000000004be0 <PyNumber_TrueDivide@plt>:
    4be0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #632]
    4be8:	add	x16, x16, #0x278
    4bec:	br	x17

0000000000004bf0 <PyUnicode_Substring@plt>:
    4bf0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #640]
    4bf8:	add	x16, x16, #0x280
    4bfc:	br	x17

0000000000004c00 <PyNumber_FloorDivide@plt>:
    4c00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #648]
    4c08:	add	x16, x16, #0x288
    4c0c:	br	x17

Disassembly of section .text:

0000000000004c10 <PyInit__datetime@@Base-0x9e40>:
    4c10:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    4c14:	ldr	x0, [x0, #4000]
    4c18:	cbz	x0, 4c20 <PyNumber_FloorDivide@plt+0x20>
    4c1c:	b	4940 <__gmon_start__@plt>
    4c20:	ret
    4c24:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4c28:	add	x0, x0, #0xf70
    4c2c:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    4c30:	add	x1, x1, #0xf70
    4c34:	cmp	x0, x1
    4c38:	b.eq	4c64 <PyNumber_FloorDivide@plt+0x64>  // b.none
    4c3c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    4c40:	ldr	x1, [x1, #3936]
    4c44:	cbz	x1, 4c64 <PyNumber_FloorDivide@plt+0x64>
    4c48:	stp	x29, x30, [sp, #-16]!
    4c4c:	mov	x29, sp
    4c50:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4c54:	add	x0, x0, #0xf70
    4c58:	blr	x1
    4c5c:	ldp	x29, x30, [sp], #16
    4c60:	ret
    4c64:	ret
    4c68:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4c6c:	add	x0, x0, #0xf70
    4c70:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    4c74:	add	x1, x1, #0xf70
    4c78:	sub	x0, x0, x1
    4c7c:	lsr	x1, x0, #63
    4c80:	add	x0, x1, x0, asr #3
    4c84:	cmp	xzr, x0, asr #1
    4c88:	b.eq	4cb8 <PyNumber_FloorDivide@plt+0xb8>  // b.none
    4c8c:	asr	x1, x0, #1
    4c90:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    4c94:	ldr	x2, [x2, #4056]
    4c98:	cbz	x2, 4cb8 <PyNumber_FloorDivide@plt+0xb8>
    4c9c:	stp	x29, x30, [sp, #-16]!
    4ca0:	mov	x29, sp
    4ca4:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4ca8:	add	x0, x0, #0xf70
    4cac:	blr	x2
    4cb0:	ldp	x29, x30, [sp], #16
    4cb4:	ret
    4cb8:	ret
    4cbc:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4cc0:	ldrb	w0, [x0, #3952]
    4cc4:	cbnz	w0, 4d00 <PyNumber_FloorDivide@plt+0x100>
    4cc8:	stp	x29, x30, [sp, #-16]!
    4ccc:	mov	x29, sp
    4cd0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    4cd4:	ldr	x0, [x0, #3952]
    4cd8:	cbz	x0, 4ce8 <PyNumber_FloorDivide@plt+0xe8>
    4cdc:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    4ce0:	ldr	x0, [x0, #656]
    4ce4:	bl	47d0 <__cxa_finalize@plt>
    4ce8:	bl	4c24 <PyNumber_FloorDivide@plt+0x24>
    4cec:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    4cf0:	mov	w1, #0x1                   	// #1
    4cf4:	strb	w1, [x0, #3952]
    4cf8:	ldp	x29, x30, [sp], #16
    4cfc:	ret
    4d00:	ret
    4d04:	stp	x29, x30, [sp, #-16]!
    4d08:	mov	x29, sp
    4d0c:	bl	4c68 <PyNumber_FloorDivide@plt+0x68>
    4d10:	ldp	x29, x30, [sp], #16
    4d14:	ret
    4d18:	mov	w3, w0
    4d1c:	sdiv	w0, w0, w1
    4d20:	msub	w3, w0, w1, w3
    4d24:	tbnz	w3, #31, 4d30 <PyNumber_FloorDivide@plt+0x130>
    4d28:	str	w3, [x2]
    4d2c:	ret
    4d30:	sub	w0, w0, #0x1
    4d34:	add	w3, w1, w3
    4d38:	str	w3, [x2]
    4d3c:	b	4d2c <PyNumber_FloorDivide@plt+0x12c>
    4d40:	mov	w1, w0
    4d44:	mov	w0, #0x0                   	// #0
    4d48:	tst	x1, #0x3
    4d4c:	b.ne	4d90 <PyNumber_FloorDivide@plt+0x190>  // b.any
    4d50:	mov	w2, #0x851f                	// #34079
    4d54:	movk	w2, #0x51eb, lsl #16
    4d58:	umull	x2, w1, w2
    4d5c:	lsr	x2, x2, #37
    4d60:	mov	w0, #0x64                  	// #100
    4d64:	msub	w2, w2, w0, w1
    4d68:	mov	w0, #0x1                   	// #1
    4d6c:	cbnz	w2, 4d90 <PyNumber_FloorDivide@plt+0x190>
    4d70:	mov	w0, #0x851f                	// #34079
    4d74:	movk	w0, #0x51eb, lsl #16
    4d78:	umull	x0, w1, w0
    4d7c:	lsr	x0, x0, #39
    4d80:	mov	w2, #0x190                 	// #400
    4d84:	msub	w1, w0, w2, w1
    4d88:	cmp	w1, #0x0
    4d8c:	cset	w0, eq  // eq = none
    4d90:	ret
    4d94:	stp	x29, x30, [sp, #-32]!
    4d98:	mov	x29, sp
    4d9c:	str	x19, [sp, #16]
    4da0:	mov	w19, w1
    4da4:	cmp	w1, #0x2
    4da8:	b.ne	4dbc <PyNumber_FloorDivide@plt+0x1bc>  // b.any
    4dac:	bl	4d40 <PyNumber_FloorDivide@plt+0x140>
    4db0:	mov	w1, w0
    4db4:	mov	w0, #0x1d                  	// #29
    4db8:	cbnz	w1, 4dc8 <PyNumber_FloorDivide@plt+0x1c8>
    4dbc:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    4dc0:	add	x0, x0, #0x380
    4dc4:	ldr	w0, [x0, w19, sxtw #2]
    4dc8:	ldr	x19, [sp, #16]
    4dcc:	ldp	x29, x30, [sp], #32
    4dd0:	ret
    4dd4:	stp	x29, x30, [sp, #-48]!
    4dd8:	mov	x29, sp
    4ddc:	stp	x19, x20, [sp, #16]
    4de0:	mov	x7, x1
    4de4:	mov	x19, x3
    4de8:	sub	w0, w0, #0x1
    4dec:	mov	w4, #0x6bd                 	// #1725
    4df0:	movk	w4, #0x396b, lsl #16
    4df4:	smull	x4, w0, w4
    4df8:	asr	x4, x4, #47
    4dfc:	asr	w8, w0, #31
    4e00:	sub	w3, w4, w8
    4e04:	mov	w1, #0x3ab1                	// #15025
    4e08:	movk	w1, #0x2, lsl #16
    4e0c:	msub	w3, w3, w1, w0
    4e10:	mov	w0, #0x81fb                	// #33275
    4e14:	movk	w0, #0xe5ac, lsl #16
    4e18:	smull	x0, w3, w0
    4e1c:	lsr	x0, x0, #32
    4e20:	add	w0, w3, w0
    4e24:	asr	w0, w0, #15
    4e28:	sub	w0, w0, w3, asr #31
    4e2c:	mov	w6, #0x8eac                	// #36524
    4e30:	msub	w1, w0, w6, w3
    4e34:	mov	w3, #0xb073                	// #45171
    4e38:	movk	w3, #0x166d, lsl #16
    4e3c:	smull	x3, w1, w3
    4e40:	asr	x3, x3, #39
    4e44:	sub	w3, w3, w1, asr #31
    4e48:	mov	w6, #0x5b5                 	// #1461
    4e4c:	msub	w6, w3, w6, w1
    4e50:	mov	w5, #0xf9b1                	// #63921
    4e54:	movk	w5, #0xb38c, lsl #16
    4e58:	smull	x5, w6, w5
    4e5c:	lsr	x5, x5, #32
    4e60:	add	w5, w6, w5
    4e64:	asr	w5, w5, #8
    4e68:	sub	w5, w5, w6, asr #31
    4e6c:	mov	w1, #0x19                  	// #25
    4e70:	madd	w1, w0, w1, w3
    4e74:	add	w1, w5, w1, lsl #2
    4e78:	sub	w4, w4, w8
    4e7c:	mov	w8, #0x190                 	// #400
    4e80:	madd	w4, w4, w8, w1
    4e84:	add	w4, w4, #0x1
    4e88:	str	w4, [x7]
    4e8c:	cmp	w5, #0x4
    4e90:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    4e94:	b.eq	4f2c <PyNumber_FloorDivide@plt+0x32c>  // b.none
    4e98:	str	x21, [sp, #32]
    4e9c:	mov	w4, #0x0                   	// #0
    4ea0:	cmp	w5, #0x3
    4ea4:	b.eq	4f48 <PyNumber_FloorDivide@plt+0x348>  // b.none
    4ea8:	mov	w0, #0xf9b1                	// #63921
    4eac:	movk	w0, #0xb38c, lsl #16
    4eb0:	smull	x0, w6, w0
    4eb4:	lsr	x0, x0, #32
    4eb8:	add	w0, w6, w0
    4ebc:	asr	w0, w0, #8
    4ec0:	sub	w20, w0, w6, asr #31
    4ec4:	mov	w0, #0x16d                 	// #365
    4ec8:	msub	w20, w20, w0, w6
    4ecc:	add	w1, w20, #0x32
    4ed0:	asr	w1, w1, #5
    4ed4:	str	w1, [x2]
    4ed8:	cmp	w4, #0x0
    4edc:	ccmp	w1, #0x2, #0x4, ne  // ne = any
    4ee0:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    4ee4:	add	x0, x0, #0x380
    4ee8:	add	x0, x0, #0x38
    4eec:	ldr	w0, [x0, w1, sxtw #2]
    4ef0:	cinc	w21, w0, gt
    4ef4:	cmp	w20, w21
    4ef8:	b.ge	4f10 <PyNumber_FloorDivide@plt+0x310>  // b.tcont
    4efc:	sub	w1, w1, #0x1
    4f00:	str	w1, [x2]
    4f04:	ldr	w0, [x7]
    4f08:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    4f0c:	sub	w21, w21, w0
    4f10:	add	w0, w20, #0x1
    4f14:	sub	w0, w0, w21
    4f18:	str	w0, [x19]
    4f1c:	ldr	x21, [sp, #32]
    4f20:	ldp	x19, x20, [sp, #16]
    4f24:	ldp	x29, x30, [sp], #48
    4f28:	ret
    4f2c:	sub	w4, w4, #0x1
    4f30:	str	w4, [x7]
    4f34:	mov	w0, #0xc                   	// #12
    4f38:	str	w0, [x2]
    4f3c:	mov	w0, #0x1f                  	// #31
    4f40:	str	w0, [x19]
    4f44:	b	4f20 <PyNumber_FloorDivide@plt+0x320>
    4f48:	cmp	w3, #0x18
    4f4c:	ccmp	w0, #0x3, #0x4, eq  // eq = none
    4f50:	cset	w4, eq  // eq = none
    4f54:	b	4ea8 <PyNumber_FloorDivide@plt+0x2a8>
    4f58:	stp	x29, x30, [sp, #-48]!
    4f5c:	mov	x29, sp
    4f60:	stp	x19, x20, [sp, #16]
    4f64:	str	x21, [sp, #32]
    4f68:	mov	w20, w2
    4f6c:	add	w19, w0, #0x2
    4f70:	subs	w3, w0, #0x1
    4f74:	csel	w19, w19, w3, mi  // mi = first
    4f78:	asr	w2, w19, #2
    4f7c:	mov	w19, #0x16d                 	// #365
    4f80:	madd	w19, w3, w19, w2
    4f84:	mov	w2, #0x851f                	// #34079
    4f88:	movk	w2, #0x51eb, lsl #16
    4f8c:	smull	x3, w3, w2
    4f90:	asr	x2, x3, #37
    4f94:	asr	x3, x3, #39
    4f98:	sub	w3, w3, w2
    4f9c:	add	w19, w19, w3
    4fa0:	adrp	x2, 11000 <PyInit__datetime@@Base+0x25b0>
    4fa4:	add	x2, x2, #0x380
    4fa8:	add	x2, x2, #0x38
    4fac:	ldr	w21, [x2, w1, sxtw #2]
    4fb0:	cmp	w1, #0x2
    4fb4:	b.le	4fc4 <PyNumber_FloorDivide@plt+0x3c4>
    4fb8:	bl	4d40 <PyNumber_FloorDivide@plt+0x140>
    4fbc:	cmp	w0, #0x0
    4fc0:	cinc	w21, w21, ne  // ne = any
    4fc4:	add	w0, w20, w21
    4fc8:	add	w0, w0, w19
    4fcc:	ldp	x19, x20, [sp, #16]
    4fd0:	ldr	x21, [sp, #32]
    4fd4:	ldp	x29, x30, [sp], #48
    4fd8:	ret
    4fdc:	stp	x29, x30, [sp, #-16]!
    4fe0:	mov	x29, sp
    4fe4:	mov	w2, #0x1                   	// #1
    4fe8:	mov	w1, w2
    4fec:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    4ff0:	add	w2, w0, #0x6
    4ff4:	mov	w1, #0x2493                	// #9363
    4ff8:	movk	w1, #0x9249, lsl #16
    4ffc:	smull	x1, w2, w1
    5000:	lsr	x1, x1, #32
    5004:	add	w1, w2, w1
    5008:	asr	w1, w1, #2
    500c:	sub	w1, w1, w2, asr #31
    5010:	lsl	w3, w1, #3
    5014:	sub	w1, w3, w1
    5018:	sub	w1, w2, w1
    501c:	sub	w0, w0, w1
    5020:	add	w2, w0, #0x7
    5024:	cmp	w1, #0x3
    5028:	csel	w0, w2, w0, gt
    502c:	ldp	x29, x30, [sp], #16
    5030:	ret
    5034:	stp	x29, x30, [sp, #-32]!
    5038:	mov	x29, sp
    503c:	str	x19, [sp, #16]
    5040:	mov	x19, x0
    5044:	mov	x3, x1
    5048:	ldr	w0, [x1]
    504c:	cmp	w0, #0x0
    5050:	ccmp	w0, w2, #0x0, ge  // ge = tcont
    5054:	b.lt	5070 <PyNumber_FloorDivide@plt+0x470>  // b.tstop
    5058:	mov	w1, w2
    505c:	mov	x2, x3
    5060:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    5064:	ldr	w1, [x19]
    5068:	add	w1, w1, w0
    506c:	str	w1, [x19]
    5070:	ldr	x19, [sp, #16]
    5074:	ldp	x29, x30, [sp], #32
    5078:	ret
    507c:	mov	x4, x0
    5080:	cbz	x2, 50b8 <PyNumber_FloorDivide@plt+0x4b8>
    5084:	add	x0, x0, x2
    5088:	ldrb	w2, [x4], #1
    508c:	sub	w3, w2, #0x30
    5090:	cmp	w3, #0x9
    5094:	b.hi	50b4 <PyNumber_FloorDivide@plt+0x4b4>  // b.pmore
    5098:	ldr	w2, [x1]
    509c:	add	w2, w2, w2, lsl #2
    50a0:	add	w2, w3, w2, lsl #1
    50a4:	str	w2, [x1]
    50a8:	cmp	x0, x4
    50ac:	b.ne	5088 <PyNumber_FloorDivide@plt+0x488>  // b.any
    50b0:	b	50b8 <PyNumber_FloorDivide@plt+0x4b8>
    50b4:	mov	x0, #0x0                   	// #0
    50b8:	ret
    50bc:	stp	x29, x30, [sp, #-32]!
    50c0:	mov	x29, sp
    50c4:	stp	x19, x20, [sp, #16]
    50c8:	mov	x19, x2
    50cc:	mov	x20, x3
    50d0:	mov	x2, #0x4                   	// #4
    50d4:	bl	507c <PyNumber_FloorDivide@plt+0x47c>
    50d8:	cbz	x0, 5124 <PyNumber_FloorDivide@plt+0x524>
    50dc:	ldrb	w1, [x0], #1
    50e0:	cmp	w1, #0x2d
    50e4:	b.ne	512c <PyNumber_FloorDivide@plt+0x52c>  // b.any
    50e8:	mov	x2, #0x2                   	// #2
    50ec:	mov	x1, x19
    50f0:	bl	507c <PyNumber_FloorDivide@plt+0x47c>
    50f4:	cbz	x0, 5134 <PyNumber_FloorDivide@plt+0x534>
    50f8:	ldrb	w1, [x0], #1
    50fc:	cmp	w1, #0x2d
    5100:	b.ne	513c <PyNumber_FloorDivide@plt+0x53c>  // b.any
    5104:	mov	x2, #0x2                   	// #2
    5108:	mov	x1, x20
    510c:	bl	507c <PyNumber_FloorDivide@plt+0x47c>
    5110:	cmp	x0, #0x0
    5114:	csetm	w0, eq  // eq = none
    5118:	ldp	x19, x20, [sp, #16]
    511c:	ldp	x29, x30, [sp], #32
    5120:	ret
    5124:	mov	w0, #0xffffffff            	// #-1
    5128:	b	5118 <PyNumber_FloorDivide@plt+0x518>
    512c:	mov	w0, #0xfffffffe            	// #-2
    5130:	b	5118 <PyNumber_FloorDivide@plt+0x518>
    5134:	mov	w0, #0xffffffff            	// #-1
    5138:	b	5118 <PyNumber_FloorDivide@plt+0x518>
    513c:	mov	w0, #0xfffffffe            	// #-2
    5140:	b	5118 <PyNumber_FloorDivide@plt+0x518>
    5144:	stp	x29, x30, [sp, #-96]!
    5148:	mov	x29, sp
    514c:	stp	x19, x20, [sp, #16]
    5150:	stp	x21, x22, [sp, #32]
    5154:	str	x23, [sp, #48]
    5158:	mov	x19, x1
    515c:	mov	x20, x5
    5160:	str	x2, [sp, #72]
    5164:	str	x3, [sp, #80]
    5168:	str	x4, [sp, #88]
    516c:	mov	x21, #0x1                   	// #1
    5170:	add	x23, sp, #0x48
    5174:	mov	x22, #0x2                   	// #2
    5178:	add	x1, x23, x21, lsl #3
    517c:	mov	x2, x22
    5180:	ldur	x1, [x1, #-8]
    5184:	bl	507c <PyNumber_FloorDivide@plt+0x47c>
    5188:	cbz	x0, 5220 <PyNumber_FloorDivide@plt+0x620>
    518c:	ldrb	w1, [x0], #1
    5190:	cmp	x19, x0
    5194:	b.ls	51f0 <PyNumber_FloorDivide@plt+0x5f0>  // b.plast
    5198:	cmp	w1, #0x3a
    519c:	b.eq	51fc <PyNumber_FloorDivide@plt+0x5fc>  // b.none
    51a0:	cmp	w1, #0x2e
    51a4:	b.ne	5228 <PyNumber_FloorDivide@plt+0x628>  // b.any
    51a8:	sub	x19, x19, x0
    51ac:	cmp	x19, #0x6
    51b0:	ccmp	x19, #0x3, #0x4, ne  // ne = any
    51b4:	b.ne	5230 <PyNumber_FloorDivide@plt+0x630>  // b.any
    51b8:	mov	x2, x19
    51bc:	mov	x1, x20
    51c0:	bl	507c <PyNumber_FloorDivide@plt+0x47c>
    51c4:	cbz	x0, 5238 <PyNumber_FloorDivide@plt+0x638>
    51c8:	cmp	x19, #0x3
    51cc:	b.eq	520c <PyNumber_FloorDivide@plt+0x60c>  // b.none
    51d0:	ldrb	w0, [x0]
    51d4:	cmp	w0, #0x0
    51d8:	cset	w0, ne  // ne = any
    51dc:	ldp	x19, x20, [sp, #16]
    51e0:	ldp	x21, x22, [sp, #32]
    51e4:	ldr	x23, [sp, #48]
    51e8:	ldp	x29, x30, [sp], #96
    51ec:	ret
    51f0:	cmp	w1, #0x0
    51f4:	cset	w0, ne  // ne = any
    51f8:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    51fc:	add	x21, x21, #0x1
    5200:	cmp	x21, #0x4
    5204:	b.ne	5178 <PyNumber_FloorDivide@plt+0x578>  // b.any
    5208:	b	51a8 <PyNumber_FloorDivide@plt+0x5a8>
    520c:	ldr	w1, [x20]
    5210:	mov	w2, #0x3e8                 	// #1000
    5214:	mul	w1, w1, w2
    5218:	str	w1, [x20]
    521c:	b	51d0 <PyNumber_FloorDivide@plt+0x5d0>
    5220:	mov	w0, #0xfffffffd            	// #-3
    5224:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    5228:	mov	w0, #0xfffffffc            	// #-4
    522c:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    5230:	mov	w0, #0xfffffffd            	// #-3
    5234:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    5238:	mov	w0, #0xfffffffd            	// #-3
    523c:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    5240:	stp	x29, x30, [sp, #-64]!
    5244:	mov	x29, sp
    5248:	stp	x19, x20, [sp, #16]
    524c:	stp	x21, x22, [sp, #32]
    5250:	mov	x22, x6
    5254:	mov	x21, x7
    5258:	add	x20, x0, x1
    525c:	mov	x19, x0
    5260:	ldrb	w8, [x19]
    5264:	sub	w8, w8, #0x2b
    5268:	and	w8, w8, #0xfffffffd
    526c:	tst	w8, #0xff
    5270:	b.eq	5280 <PyNumber_FloorDivide@plt+0x680>  // b.none
    5274:	add	x19, x19, #0x1
    5278:	cmp	x20, x19
    527c:	b.hi	5260 <PyNumber_FloorDivide@plt+0x660>  // b.pmore
    5280:	mov	x1, x19
    5284:	bl	5144 <PyNumber_FloorDivide@plt+0x544>
    5288:	tbnz	w0, #31, 5324 <PyNumber_FloorDivide@plt+0x724>
    528c:	cmp	x19, x20
    5290:	b.eq	5334 <PyNumber_FloorDivide@plt+0x734>  // b.none
    5294:	sub	x0, x20, x19
    5298:	cmp	x0, #0x6
    529c:	ccmp	x0, #0x9, #0x4, ne  // ne = any
    52a0:	ccmp	x0, #0x10, #0x4, ne  // ne = any
    52a4:	b.ne	534c <PyNumber_FloorDivide@plt+0x74c>  // b.any
    52a8:	mov	x0, x19
    52ac:	ldrb	w1, [x0], #1
    52b0:	mov	w19, #0x1                   	// #1
    52b4:	cmp	w1, #0x2d
    52b8:	cneg	w19, w19, eq  // eq = none
    52bc:	str	wzr, [sp, #60]
    52c0:	str	wzr, [sp, #56]
    52c4:	str	wzr, [sp, #52]
    52c8:	mov	x5, x21
    52cc:	add	x4, sp, #0x34
    52d0:	add	x3, sp, #0x38
    52d4:	add	x2, sp, #0x3c
    52d8:	mov	x1, x20
    52dc:	bl	5144 <PyNumber_FloorDivide@plt+0x544>
    52e0:	ldr	w2, [sp, #56]
    52e4:	lsl	w1, w2, #4
    52e8:	sub	w1, w1, w2
    52ec:	lsl	w2, w1, #2
    52f0:	ldr	w1, [sp, #60]
    52f4:	mov	w3, #0xe10                 	// #3600
    52f8:	madd	w1, w1, w3, w2
    52fc:	ldr	w2, [sp, #52]
    5300:	add	w1, w1, w2
    5304:	mul	w1, w1, w19
    5308:	str	w1, [x22]
    530c:	ldr	w1, [x21]
    5310:	mul	w19, w1, w19
    5314:	str	w19, [x21]
    5318:	cmp	w0, #0x0
    531c:	mov	w0, #0xfffffffb            	// #-5
    5320:	csinc	w0, w0, wzr, ne  // ne = any
    5324:	ldp	x19, x20, [sp, #16]
    5328:	ldp	x21, x22, [sp, #32]
    532c:	ldp	x29, x30, [sp], #64
    5330:	ret
    5334:	cmp	w0, #0x1
    5338:	b.eq	5344 <PyNumber_FloorDivide@plt+0x744>  // b.none
    533c:	mov	w0, #0x0                   	// #0
    5340:	b	5324 <PyNumber_FloorDivide@plt+0x724>
    5344:	mov	w0, #0xfffffffb            	// #-5
    5348:	b	5324 <PyNumber_FloorDivide@plt+0x724>
    534c:	mov	w0, #0xfffffffb            	// #-5
    5350:	b	5324 <PyNumber_FloorDivide@plt+0x724>
    5354:	stp	x29, x30, [sp, #-32]!
    5358:	mov	x29, sp
    535c:	stp	x19, x20, [sp, #16]
    5360:	mov	x20, x0
    5364:	mov	x19, x1
    5368:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    536c:	add	x0, x0, #0xab8
    5370:	ldr	x2, [x0, #304]
    5374:	mov	x1, #0x0                   	// #0
    5378:	blr	x2
    537c:	cbz	x0, 53a4 <PyNumber_FloorDivide@plt+0x7a4>
    5380:	ldr	x1, [x20]
    5384:	add	x1, x1, #0x1
    5388:	str	x1, [x20]
    538c:	str	x20, [x0, #16]
    5390:	cbz	x19, 53a0 <PyNumber_FloorDivide@plt+0x7a0>
    5394:	ldr	x1, [x19]
    5398:	add	x1, x1, #0x1
    539c:	str	x1, [x19]
    53a0:	str	x19, [x0, #24]
    53a4:	ldp	x19, x20, [sp, #16]
    53a8:	ldp	x29, x30, [sp], #32
    53ac:	ret
    53b0:	mov	x3, x0
    53b4:	ldr	w2, [x0, #24]
    53b8:	ldr	w0, [x1, #24]
    53bc:	subs	w0, w2, w0
    53c0:	b.ne	53e0 <PyNumber_FloorDivide@plt+0x7e0>  // b.any
    53c4:	ldr	w2, [x3, #28]
    53c8:	ldr	w0, [x1, #28]
    53cc:	subs	w0, w2, w0
    53d0:	b.ne	53e0 <PyNumber_FloorDivide@plt+0x7e0>  // b.any
    53d4:	ldr	w0, [x3, #32]
    53d8:	ldr	w2, [x1, #32]
    53dc:	sub	w0, w0, w2
    53e0:	ret
    53e4:	ldr	x1, [x0, #24]
    53e8:	cbnz	x1, 53fc <PyNumber_FloorDivide@plt+0x7fc>
    53ec:	ldr	w0, [x0, #32]
    53f0:	cmp	w0, #0x0
    53f4:	cset	w0, ne  // ne = any
    53f8:	ret
    53fc:	mov	w0, #0x1                   	// #1
    5400:	b	53f8 <PyNumber_FloorDivide@plt+0x7f8>
    5404:	ldrb	w1, [x0, #24]
    5408:	cbz	w1, 5420 <PyNumber_FloorDivide@plt+0x820>
    540c:	ldr	x0, [x0, #32]
    5410:	ldr	x1, [x0]
    5414:	add	x1, x1, #0x1
    5418:	str	x1, [x0]
    541c:	ret
    5420:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5424:	ldr	x0, [x0, #4024]
    5428:	b	5410 <PyNumber_FloorDivide@plt+0x810>
    542c:	ldrb	w1, [x0, #24]
    5430:	cbz	w1, 5448 <PyNumber_FloorDivide@plt+0x848>
    5434:	ldr	x0, [x0, #40]
    5438:	ldr	x1, [x0]
    543c:	add	x1, x1, #0x1
    5440:	str	x1, [x0]
    5444:	ret
    5448:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    544c:	ldr	x0, [x0, #4024]
    5450:	b	5438 <PyNumber_FloorDivide@plt+0x838>
    5454:	stp	x29, x30, [sp, #-16]!
    5458:	mov	x29, sp
    545c:	ldrb	w0, [x0, #31]
    5460:	bl	4900 <PyLong_FromLong@plt>
    5464:	ldp	x29, x30, [sp], #16
    5468:	ret
    546c:	stp	x29, x30, [sp, #-16]!
    5470:	mov	x29, sp
    5474:	ldrb	w1, [x0, #28]
    5478:	ldrb	w2, [x0, #29]
    547c:	lsl	w2, w2, #8
    5480:	orr	w1, w2, w1, lsl #16
    5484:	ldrb	w0, [x0, #30]
    5488:	orr	w0, w1, w0
    548c:	sxtw	x0, w0
    5490:	bl	4900 <PyLong_FromLong@plt>
    5494:	ldp	x29, x30, [sp], #16
    5498:	ret
    549c:	stp	x29, x30, [sp, #-16]!
    54a0:	mov	x29, sp
    54a4:	ldrb	w0, [x0, #27]
    54a8:	bl	4900 <PyLong_FromLong@plt>
    54ac:	ldp	x29, x30, [sp], #16
    54b0:	ret
    54b4:	stp	x29, x30, [sp, #-16]!
    54b8:	mov	x29, sp
    54bc:	ldrb	w0, [x0, #26]
    54c0:	bl	4900 <PyLong_FromLong@plt>
    54c4:	ldp	x29, x30, [sp], #16
    54c8:	ret
    54cc:	stp	x29, x30, [sp, #-16]!
    54d0:	mov	x29, sp
    54d4:	ldrb	w0, [x0, #25]
    54d8:	bl	4900 <PyLong_FromLong@plt>
    54dc:	ldp	x29, x30, [sp], #16
    54e0:	ret
    54e4:	stp	x29, x30, [sp, #-16]!
    54e8:	mov	x29, sp
    54ec:	ldrb	w0, [x0, #35]
    54f0:	bl	4900 <PyLong_FromLong@plt>
    54f4:	ldp	x29, x30, [sp], #16
    54f8:	ret
    54fc:	stp	x29, x30, [sp, #-16]!
    5500:	mov	x29, sp
    5504:	ldrb	w1, [x0, #32]
    5508:	ldrb	w2, [x0, #33]
    550c:	lsl	w2, w2, #8
    5510:	orr	w1, w2, w1, lsl #16
    5514:	ldrb	w0, [x0, #34]
    5518:	orr	w0, w1, w0
    551c:	sxtw	x0, w0
    5520:	bl	4900 <PyLong_FromLong@plt>
    5524:	ldp	x29, x30, [sp], #16
    5528:	ret
    552c:	stp	x29, x30, [sp, #-16]!
    5530:	mov	x29, sp
    5534:	ldrb	w0, [x0, #31]
    5538:	bl	4900 <PyLong_FromLong@plt>
    553c:	ldp	x29, x30, [sp], #16
    5540:	ret
    5544:	stp	x29, x30, [sp, #-16]!
    5548:	mov	x29, sp
    554c:	ldrb	w0, [x0, #30]
    5550:	bl	4900 <PyLong_FromLong@plt>
    5554:	ldp	x29, x30, [sp], #16
    5558:	ret
    555c:	stp	x29, x30, [sp, #-16]!
    5560:	mov	x29, sp
    5564:	ldrb	w0, [x0, #29]
    5568:	bl	4900 <PyLong_FromLong@plt>
    556c:	ldp	x29, x30, [sp], #16
    5570:	ret
    5574:	stp	x29, x30, [sp, #-16]!
    5578:	mov	x29, sp
    557c:	ldrb	w0, [x0, #28]
    5580:	bl	4900 <PyLong_FromLong@plt>
    5584:	ldp	x29, x30, [sp], #16
    5588:	ret
    558c:	stp	x29, x30, [sp, #-16]!
    5590:	mov	x29, sp
    5594:	ldrb	w0, [x0, #27]
    5598:	bl	4900 <PyLong_FromLong@plt>
    559c:	ldp	x29, x30, [sp], #16
    55a0:	ret
    55a4:	stp	x29, x30, [sp, #-16]!
    55a8:	mov	x29, sp
    55ac:	ldrb	w1, [x0, #25]
    55b0:	ldrb	w0, [x0, #26]
    55b4:	orr	w0, w0, w1, lsl #8
    55b8:	sxtw	x0, w0
    55bc:	bl	4900 <PyLong_FromLong@plt>
    55c0:	ldp	x29, x30, [sp], #16
    55c4:	ret
    55c8:	stp	x29, x30, [sp, #-16]!
    55cc:	mov	x29, sp
    55d0:	ldrb	w4, [x0, #25]
    55d4:	ldrb	w3, [x0, #26]
    55d8:	ldrb	w2, [x0, #28]
    55dc:	ldrb	w1, [x0, #27]
    55e0:	orr	w0, w3, w4, lsl #8
    55e4:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    55e8:	add	w0, w0, #0x6
    55ec:	mov	w1, #0x2493                	// #9363
    55f0:	movk	w1, #0x9249, lsl #16
    55f4:	smull	x1, w0, w1
    55f8:	lsr	x1, x1, #32
    55fc:	add	w1, w0, w1
    5600:	asr	w1, w1, #2
    5604:	sub	w1, w1, w0, asr #31
    5608:	lsl	w2, w1, #3
    560c:	sub	w1, w2, w1
    5610:	sub	w0, w0, w1
    5614:	sxtw	x0, w0
    5618:	bl	4900 <PyLong_FromLong@plt>
    561c:	ldp	x29, x30, [sp], #16
    5620:	ret
    5624:	stp	x29, x30, [sp, #-16]!
    5628:	mov	x29, sp
    562c:	ldrb	w4, [x0, #25]
    5630:	ldrb	w3, [x0, #26]
    5634:	ldrb	w2, [x0, #28]
    5638:	ldrb	w1, [x0, #27]
    563c:	orr	w0, w3, w4, lsl #8
    5640:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    5644:	sxtw	x0, w0
    5648:	bl	4900 <PyLong_FromLong@plt>
    564c:	ldp	x29, x30, [sp], #16
    5650:	ret
    5654:	stp	x29, x30, [sp, #-16]!
    5658:	mov	x29, sp
    565c:	mov	x2, #0x0                   	// #0
    5660:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5664:	add	x1, x1, #0xab8
    5668:	add	x1, x1, #0x1a0
    566c:	bl	4a60 <_PyObject_CallMethodId@plt>
    5670:	ldp	x29, x30, [sp], #16
    5674:	ret
    5678:	stp	x29, x30, [sp, #-16]!
    567c:	mov	x29, sp
    5680:	adrp	x3, f000 <PyInit__datetime@@Base+0x5b0>
    5684:	add	x3, x3, #0x598
    5688:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    568c:	add	x2, x2, #0xf98
    5690:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5694:	add	x1, x1, #0xab8
    5698:	add	x1, x1, #0x1a0
    569c:	bl	4a60 <_PyObject_CallMethodId@plt>
    56a0:	ldp	x29, x30, [sp], #16
    56a4:	ret
    56a8:	stp	x29, x30, [sp, #-16]!
    56ac:	mov	x29, sp
    56b0:	mov	x2, #0x0                   	// #0
    56b4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    56b8:	add	x1, x1, #0xab8
    56bc:	add	x1, x1, #0x1a0
    56c0:	bl	4a60 <_PyObject_CallMethodId@plt>
    56c4:	ldp	x29, x30, [sp], #16
    56c8:	ret
    56cc:	stp	x29, x30, [sp, #-32]!
    56d0:	mov	x29, sp
    56d4:	str	x19, [sp, #16]
    56d8:	mov	x19, x0
    56dc:	ldr	x0, [x0, #8]
    56e0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    56e4:	add	x1, x1, #0x298
    56e8:	cmp	x0, x1
    56ec:	b.eq	5788 <PyNumber_FloorDivide@plt+0xb88>  // b.none
    56f0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    56f4:	add	x1, x1, #0x298
    56f8:	bl	4b30 <PyType_IsSubtype@plt>
    56fc:	cbz	w0, 5728 <PyNumber_FloorDivide@plt+0xb28>
    5700:	ldrb	w0, [x19, #24]
    5704:	cbnz	w0, 5790 <PyNumber_FloorDivide@plt+0xb90>
    5708:	ldr	x2, [x19, #8]
    570c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5710:	add	x1, x1, #0x298
    5714:	mov	x0, #0x0                   	// #0
    5718:	add	x1, x1, #0x1a0
    571c:	cmp	x2, x1
    5720:	b.eq	577c <PyNumber_FloorDivide@plt+0xb7c>  // b.none
    5724:	b	5750 <PyNumber_FloorDivide@plt+0xb50>
    5728:	ldr	x2, [x19, #8]
    572c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5730:	add	x1, x1, #0x298
    5734:	add	x1, x1, #0x1a0
    5738:	cmp	x2, x1
    573c:	b.eq	5770 <PyNumber_FloorDivide@plt+0xb70>  // b.none
    5740:	b	5750 <PyNumber_FloorDivide@plt+0xb50>
    5744:	mov	x0, #0x0                   	// #0
    5748:	b	577c <PyNumber_FloorDivide@plt+0xb7c>
    574c:	ldr	x2, [x19, #8]
    5750:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5754:	add	x1, x1, #0x298
    5758:	add	x1, x1, #0x1a0
    575c:	mov	x0, x2
    5760:	bl	4b30 <PyType_IsSubtype@plt>
    5764:	mov	w1, w0
    5768:	mov	x0, #0x0                   	// #0
    576c:	cbz	w1, 577c <PyNumber_FloorDivide@plt+0xb7c>
    5770:	ldrb	w0, [x19, #24]
    5774:	cbz	w0, 5744 <PyNumber_FloorDivide@plt+0xb44>
    5778:	ldr	x0, [x19, #32]
    577c:	ldr	x19, [sp, #16]
    5780:	ldp	x29, x30, [sp], #32
    5784:	ret
    5788:	ldrb	w0, [x19, #24]
    578c:	cbz	w0, 574c <PyNumber_FloorDivide@plt+0xb4c>
    5790:	ldr	x0, [x19, #40]
    5794:	b	577c <PyNumber_FloorDivide@plt+0xb7c>
    5798:	stp	x29, x30, [sp, #-32]!
    579c:	mov	x29, sp
    57a0:	str	x19, [sp, #16]
    57a4:	mov	x19, x0
    57a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    57ac:	ldr	x0, [x0, #4024]
    57b0:	cmp	x19, x0
    57b4:	b.eq	5824 <PyNumber_FloorDivide@plt+0xc24>  // b.none
    57b8:	ldr	x0, [x19, #8]
    57bc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    57c0:	add	x1, x1, #0x298
    57c4:	add	x1, x1, #0x340
    57c8:	mov	w2, #0x0                   	// #0
    57cc:	cmp	x0, x1
    57d0:	b.eq	57ec <PyNumber_FloorDivide@plt+0xbec>  // b.none
    57d4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    57d8:	add	x1, x1, #0x298
    57dc:	add	x1, x1, #0x340
    57e0:	bl	4b30 <PyType_IsSubtype@plt>
    57e4:	mov	w2, #0x0                   	// #0
    57e8:	cbz	w0, 57fc <PyNumber_FloorDivide@plt+0xbfc>
    57ec:	mov	w0, w2
    57f0:	ldr	x19, [sp, #16]
    57f4:	ldp	x29, x30, [sp], #32
    57f8:	ret
    57fc:	ldr	x0, [x19, #8]
    5800:	ldr	x2, [x0, #24]
    5804:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5808:	add	x1, x1, #0x5a0
    580c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5810:	ldr	x0, [x0, #3976]
    5814:	ldr	x0, [x0]
    5818:	bl	4b60 <PyErr_Format@plt>
    581c:	mov	w2, #0xffffffff            	// #-1
    5820:	b	57ec <PyNumber_FloorDivide@plt+0xbec>
    5824:	mov	w2, #0x0                   	// #0
    5828:	b	57ec <PyNumber_FloorDivide@plt+0xbec>
    582c:	stp	x29, x30, [sp, #-48]!
    5830:	mov	x29, sp
    5834:	stp	x19, x20, [sp, #16]
    5838:	str	x21, [sp, #32]
    583c:	mov	w21, w3
    5840:	mov	w20, w4
    5844:	sub	w4, w0, #0x1
    5848:	mov	w3, #0x270e                	// #9998
    584c:	cmp	w4, w3
    5850:	b.hi	589c <PyNumber_FloorDivide@plt+0xc9c>  // b.pmore
    5854:	mov	w19, w5
    5858:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    585c:	sbfiz	x1, x0, #1, #32
    5860:	add	x0, x1, w0, sxtw
    5864:	sxtw	x21, w21
    5868:	add	x0, x21, x0, lsl #3
    586c:	lsl	x1, x0, #4
    5870:	sub	x0, x1, x0
    5874:	sxtw	x20, w20
    5878:	add	x0, x20, x0, lsl #2
    587c:	lsl	x1, x0, #4
    5880:	sub	x0, x1, x0
    5884:	sxtw	x19, w19
    5888:	add	x0, x19, x0, lsl #2
    588c:	ldp	x19, x20, [sp, #16]
    5890:	ldr	x21, [sp, #32]
    5894:	ldp	x29, x30, [sp], #48
    5898:	ret
    589c:	mov	w2, w0
    58a0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    58a4:	add	x1, x1, #0x5e8
    58a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    58ac:	ldr	x0, [x0, #3968]
    58b0:	ldr	x0, [x0]
    58b4:	bl	4b60 <PyErr_Format@plt>
    58b8:	mov	x0, #0xffffffffffffffff    	// #-1
    58bc:	b	588c <PyNumber_FloorDivide@plt+0xc8c>
    58c0:	stp	x29, x30, [sp, #-80]!
    58c4:	mov	x29, sp
    58c8:	add	x1, sp, #0x18
    58cc:	mov	x2, #0xffffffffffffb780    	// #-18560
    58d0:	movk	x2, #0x886c, lsl #16
    58d4:	movk	x2, #0xfff1, lsl #32
    58d8:	add	x0, x0, x2
    58dc:	bl	4bc0 <_PyTime_localtime@plt>
    58e0:	cbnz	w0, 5910 <PyNumber_FloorDivide@plt+0xd10>
    58e4:	ldr	w5, [sp, #24]
    58e8:	ldr	w4, [sp, #28]
    58ec:	ldr	w3, [sp, #32]
    58f0:	ldr	w2, [sp, #36]
    58f4:	ldr	w1, [sp, #40]
    58f8:	add	w1, w1, #0x1
    58fc:	ldr	w0, [sp, #44]
    5900:	add	w0, w0, #0x76c
    5904:	bl	582c <PyNumber_FloorDivide@plt+0xc2c>
    5908:	ldp	x29, x30, [sp], #80
    590c:	ret
    5910:	mov	x0, #0xffffffffffffffff    	// #-1
    5914:	b	5908 <PyNumber_FloorDivide@plt+0xd08>
    5918:	stp	x29, x30, [sp, #-80]!
    591c:	mov	x29, sp
    5920:	stp	x19, x20, [sp, #16]
    5924:	stp	x21, x22, [sp, #32]
    5928:	stp	x23, x24, [sp, #48]
    592c:	mov	w23, w6
    5930:	bl	582c <PyNumber_FloorDivide@plt+0xc2c>
    5934:	mov	x20, x0
    5938:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    593c:	mov	x24, x0
    5940:	cmn	x0, #0x1
    5944:	b.eq	5a0c <PyNumber_FloorDivide@plt+0xe0c>  // b.none
    5948:	lsl	x19, x20, #1
    594c:	sub	x22, x19, x0
    5950:	mov	x0, x22
    5954:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    5958:	mov	x21, x0
    595c:	cmn	x0, #0x1
    5960:	b.eq	5a14 <PyNumber_FloorDivide@plt+0xe14>  // b.none
    5964:	sub	x19, x24, x19
    5968:	add	x19, x19, x0
    596c:	cmp	x20, x0
    5970:	b.eq	59bc <PyNumber_FloorDivide@plt+0xdbc>  // b.none
    5974:	sub	x19, x20, x19
    5978:	mov	x0, x19
    597c:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    5980:	cmn	x0, #0x1
    5984:	b.eq	5a28 <PyNumber_FloorDivide@plt+0xe28>  // b.none
    5988:	cmp	x20, x0
    598c:	b.eq	5a30 <PyNumber_FloorDivide@plt+0xe30>  // b.none
    5990:	cmp	x20, x21
    5994:	b.eq	59a4 <PyNumber_FloorDivide@plt+0xda4>  // b.none
    5998:	cbz	w23, 5a00 <PyNumber_FloorDivide@plt+0xe00>
    599c:	cmp	x22, x19
    59a0:	csel	x22, x22, x19, le
    59a4:	mov	x0, x22
    59a8:	ldp	x19, x20, [sp, #16]
    59ac:	ldp	x21, x22, [sp, #32]
    59b0:	ldp	x23, x24, [sp, #48]
    59b4:	ldp	x29, x30, [sp], #80
    59b8:	ret
    59bc:	str	x25, [sp, #64]
    59c0:	add	x25, x22, #0x15, lsl #12
    59c4:	add	x25, x25, #0x180
    59c8:	sub	x19, x22, #0x15, lsl #12
    59cc:	sub	x19, x19, #0x180
    59d0:	cmp	w23, #0x0
    59d4:	csel	x25, x19, x25, eq  // eq = none
    59d8:	mov	x0, x25
    59dc:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    59e0:	cmn	x0, #0x1
    59e4:	b.eq	5a1c <PyNumber_FloorDivide@plt+0xe1c>  // b.none
    59e8:	sub	x19, x0, x25
    59ec:	sub	x24, x24, x21
    59f0:	cmp	x24, x19
    59f4:	b.eq	5a38 <PyNumber_FloorDivide@plt+0xe38>  // b.none
    59f8:	ldr	x25, [sp, #64]
    59fc:	b	5974 <PyNumber_FloorDivide@plt+0xd74>
    5a00:	cmp	x22, x19
    5a04:	csel	x22, x22, x19, ge  // ge = tcont
    5a08:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a0c:	mov	x22, x0
    5a10:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a14:	mov	x22, x0
    5a18:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a1c:	mov	x22, x0
    5a20:	ldr	x25, [sp, #64]
    5a24:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a28:	mov	x22, x0
    5a2c:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a30:	mov	x22, x19
    5a34:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a38:	ldr	x25, [sp, #64]
    5a3c:	b	59a4 <PyNumber_FloorDivide@plt+0xda4>
    5a40:	stp	x29, x30, [sp, #-32]!
    5a44:	mov	x29, sp
    5a48:	stp	x19, x20, [sp, #16]
    5a4c:	mov	x19, x0
    5a50:	mov	x20, x1
    5a54:	cbz	x1, 5a90 <PyNumber_FloorDivide@plt+0xe90>
    5a58:	ldr	x1, [x19, #24]
    5a5c:	mov	x0, #0xffffffff            	// #4294967295
    5a60:	cmp	x1, x0
    5a64:	b.eq	5ab0 <PyNumber_FloorDivide@plt+0xeb0>  // b.none
    5a68:	ldr	w0, [x19, #24]
    5a6c:	add	w0, w0, #0x1
    5a70:	cmp	w0, #0x1
    5a74:	b.hi	5abc <PyNumber_FloorDivide@plt+0xebc>  // b.pmore
    5a78:	mov	x1, x20
    5a7c:	mov	x0, x19
    5a80:	bl	5354 <PyNumber_FloorDivide@plt+0x754>
    5a84:	ldp	x19, x20, [sp, #16]
    5a88:	ldp	x29, x30, [sp], #32
    5a8c:	ret
    5a90:	bl	53e4 <PyNumber_FloorDivide@plt+0x7e4>
    5a94:	cbnz	w0, 5a58 <PyNumber_FloorDivide@plt+0xe58>
    5a98:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    5a9c:	ldr	x0, [x0, #3960]
    5aa0:	ldr	x1, [x0]
    5aa4:	add	x1, x1, #0x1
    5aa8:	str	x1, [x0]
    5aac:	b	5a84 <PyNumber_FloorDivide@plt+0xe84>
    5ab0:	ldr	w0, [x19, #32]
    5ab4:	cmp	w0, #0x0
    5ab8:	b.gt	5a68 <PyNumber_FloorDivide@plt+0xe68>
    5abc:	mov	x2, x19
    5ac0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5ac4:	add	x1, x1, #0x600
    5ac8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5acc:	ldr	x0, [x0, #3968]
    5ad0:	ldr	x0, [x0]
    5ad4:	bl	4b60 <PyErr_Format@plt>
    5ad8:	mov	x0, #0x0                   	// #0
    5adc:	b	5a84 <PyNumber_FloorDivide@plt+0xe84>
    5ae0:	stp	x29, x30, [sp, #-32]!
    5ae4:	mov	x29, sp
    5ae8:	mov	x0, x1
    5aec:	mov	x1, x2
    5af0:	str	xzr, [sp, #16]
    5af4:	add	x6, sp, #0x10
    5af8:	add	x5, sp, #0x18
    5afc:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    5b00:	add	x4, x4, #0x298
    5b04:	add	x4, x4, #0x4e0
    5b08:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    5b0c:	add	x3, x3, #0xab8
    5b10:	add	x3, x3, #0x1b8
    5b14:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    5b18:	add	x2, x2, #0x668
    5b1c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    5b20:	mov	w1, w0
    5b24:	mov	x0, #0x0                   	// #0
    5b28:	cbnz	w1, 5b34 <PyNumber_FloorDivide@plt+0xf34>
    5b2c:	ldp	x29, x30, [sp], #32
    5b30:	ret
    5b34:	ldr	x1, [sp, #16]
    5b38:	ldr	x0, [sp, #24]
    5b3c:	bl	5a40 <PyNumber_FloorDivide@plt+0xe40>
    5b40:	b	5b2c <PyNumber_FloorDivide@plt+0xf2c>
    5b44:	stp	x29, x30, [sp, #-32]!
    5b48:	mov	x29, sp
    5b4c:	stp	x19, x20, [sp, #16]
    5b50:	mov	x19, x0
    5b54:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5b58:	ldr	x0, [x0, #4024]
    5b5c:	cmp	x19, x0
    5b60:	b.eq	5bcc <PyNumber_FloorDivide@plt+0xfcc>  // b.none
    5b64:	mov	x20, x1
    5b68:	ldr	x0, [x19, #8]
    5b6c:	mov	w3, #0x0                   	// #0
    5b70:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    5b74:	add	x2, x2, #0x298
    5b78:	cmp	x0, x2
    5b7c:	b.eq	5b90 <PyNumber_FloorDivide@plt+0xf90>  // b.none
    5b80:	mov	x1, x2
    5b84:	bl	4b30 <PyType_IsSubtype@plt>
    5b88:	mov	w3, #0x0                   	// #0
    5b8c:	cbz	w0, 5ba0 <PyNumber_FloorDivide@plt+0xfa0>
    5b90:	mov	w0, w3
    5b94:	ldp	x19, x20, [sp, #16]
    5b98:	ldp	x29, x30, [sp], #32
    5b9c:	ret
    5ba0:	ldr	x0, [x19, #8]
    5ba4:	ldr	x3, [x0, #24]
    5ba8:	mov	x2, x20
    5bac:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5bb0:	add	x1, x1, #0x678
    5bb4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5bb8:	ldr	x0, [x0, #3976]
    5bbc:	ldr	x0, [x0]
    5bc0:	bl	4b60 <PyErr_Format@plt>
    5bc4:	mov	w3, #0xffffffff            	// #-1
    5bc8:	b	5b90 <PyNumber_FloorDivide@plt+0xf90>
    5bcc:	mov	w3, #0x0                   	// #0
    5bd0:	b	5b90 <PyNumber_FloorDivide@plt+0xf90>
    5bd4:	stp	x29, x30, [sp, #-16]!
    5bd8:	mov	x29, sp
    5bdc:	mov	x0, x1
    5be0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5be4:	add	x1, x1, #0x6b8
    5be8:	bl	5b44 <PyNumber_FloorDivide@plt+0xf44>
    5bec:	cmn	w0, #0x1
    5bf0:	b.eq	5c10 <PyNumber_FloorDivide@plt+0x1010>  // b.none
    5bf4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5bf8:	ldr	x0, [x0, #4024]
    5bfc:	ldr	x1, [x0]
    5c00:	add	x1, x1, #0x1
    5c04:	str	x1, [x0]
    5c08:	ldp	x29, x30, [sp], #16
    5c0c:	ret
    5c10:	mov	x0, #0x0                   	// #0
    5c14:	b	5c08 <PyNumber_FloorDivide@plt+0x1008>
    5c18:	stp	x29, x30, [sp, #-32]!
    5c1c:	mov	x29, sp
    5c20:	str	x19, [sp, #16]
    5c24:	mov	x19, x0
    5c28:	mov	x0, x1
    5c2c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5c30:	add	x1, x1, #0x6c0
    5c34:	bl	5b44 <PyNumber_FloorDivide@plt+0xf44>
    5c38:	cmn	w0, #0x1
    5c3c:	b.eq	5c60 <PyNumber_FloorDivide@plt+0x1060>  // b.none
    5c40:	ldr	x1, [x19, #16]
    5c44:	ldr	x0, [x1]
    5c48:	add	x0, x0, #0x1
    5c4c:	str	x0, [x1]
    5c50:	ldr	x0, [x19, #16]
    5c54:	ldr	x19, [sp, #16]
    5c58:	ldp	x29, x30, [sp], #32
    5c5c:	ret
    5c60:	mov	x0, #0x0                   	// #0
    5c64:	b	5c54 <PyNumber_FloorDivide@plt+0x1054>
    5c68:	stp	x29, x30, [sp, #-16]!
    5c6c:	mov	x29, sp
    5c70:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    5c74:	add	x2, x2, #0x6b8
    5c78:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5c7c:	add	x1, x1, #0x6d0
    5c80:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5c84:	ldr	x0, [x0, #3928]
    5c88:	ldr	x0, [x0]
    5c8c:	bl	4b60 <PyErr_Format@plt>
    5c90:	mov	x0, #0x0                   	// #0
    5c94:	ldp	x29, x30, [sp], #16
    5c98:	ret
    5c9c:	stp	x29, x30, [sp, #-48]!
    5ca0:	mov	x29, sp
    5ca4:	str	x19, [sp, #16]
    5ca8:	str	w0, [sp, #44]
    5cac:	str	w1, [sp, #40]
    5cb0:	str	w2, [sp, #36]
    5cb4:	mov	x19, x4
    5cb8:	cbnz	w3, 5d1c <PyNumber_FloorDivide@plt+0x111c>
    5cbc:	ldr	w2, [sp, #44]
    5cc0:	mov	w0, #0xc9ff                	// #51711
    5cc4:	movk	w0, #0x3b9a, lsl #16
    5cc8:	add	w0, w2, w0
    5ccc:	mov	w1, #0x93fe                	// #37886
    5cd0:	movk	w1, #0x7735, lsl #16
    5cd4:	cmp	w0, w1
    5cd8:	b.hi	5d74 <PyNumber_FloorDivide@plt+0x1174>  // b.pmore
    5cdc:	ldr	x2, [x19, #304]
    5ce0:	mov	x1, #0x0                   	// #0
    5ce4:	mov	x0, x19
    5ce8:	blr	x2
    5cec:	cbz	x0, 5d10 <PyNumber_FloorDivide@plt+0x1110>
    5cf0:	mov	x1, #0xffffffffffffffff    	// #-1
    5cf4:	str	x1, [x0, #16]
    5cf8:	ldr	w1, [sp, #44]
    5cfc:	str	w1, [x0, #24]
    5d00:	ldr	w1, [sp, #40]
    5d04:	str	w1, [x0, #28]
    5d08:	ldr	w1, [sp, #36]
    5d0c:	str	w1, [x0, #32]
    5d10:	ldr	x19, [sp, #16]
    5d14:	ldp	x29, x30, [sp], #48
    5d18:	ret
    5d1c:	mov	w0, #0x423f                	// #16959
    5d20:	movk	w0, #0xf, lsl #16
    5d24:	mov	w1, w2
    5d28:	cmp	w1, w0
    5d2c:	b.hi	5d5c <PyNumber_FloorDivide@plt+0x115c>  // b.pmore
    5d30:	mov	w0, #0x517f                	// #20863
    5d34:	movk	w0, #0x1, lsl #16
    5d38:	ldr	w1, [sp, #40]
    5d3c:	cmp	w1, w0
    5d40:	b.ls	5cbc <PyNumber_FloorDivide@plt+0x10bc>  // b.plast
    5d44:	mov	w2, #0x5180                	// #20864
    5d48:	movk	w2, #0x1, lsl #16
    5d4c:	add	x1, sp, #0x28
    5d50:	add	x0, sp, #0x2c
    5d54:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    5d58:	b	5cbc <PyNumber_FloorDivide@plt+0x10bc>
    5d5c:	mov	w2, #0x4240                	// #16960
    5d60:	movk	w2, #0xf, lsl #16
    5d64:	add	x1, sp, #0x24
    5d68:	add	x0, sp, #0x28
    5d6c:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    5d70:	b	5d30 <PyNumber_FloorDivide@plt+0x1130>
    5d74:	mov	w3, #0xc9ff                	// #51711
    5d78:	movk	w3, #0x3b9a, lsl #16
    5d7c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    5d80:	add	x1, x1, #0x6f8
    5d84:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5d88:	ldr	x0, [x0, #4008]
    5d8c:	ldr	x0, [x0]
    5d90:	bl	4b60 <PyErr_Format@plt>
    5d94:	mov	x0, #0x0                   	// #0
    5d98:	b	5d10 <PyNumber_FloorDivide@plt+0x1110>
    5d9c:	stp	x29, x30, [sp, #-16]!
    5da0:	mov	x29, sp
    5da4:	ldr	w2, [x0, #32]
    5da8:	ldr	w1, [x0, #28]
    5dac:	ldr	w0, [x0, #24]
    5db0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    5db4:	add	x4, x4, #0x298
    5db8:	add	x4, x4, #0x4e0
    5dbc:	mov	w3, #0x1                   	// #1
    5dc0:	neg	w2, w2
    5dc4:	neg	w1, w1
    5dc8:	neg	w0, w0
    5dcc:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    5dd0:	ldp	x29, x30, [sp], #16
    5dd4:	ret
    5dd8:	stp	x29, x30, [sp, #-32]!
    5ddc:	mov	x29, sp
    5de0:	stp	x19, x20, [sp, #16]
    5de4:	mov	x19, x0
    5de8:	mov	x20, x1
    5dec:	ldr	x0, [x0, #8]
    5df0:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    5df4:	add	x2, x2, #0x298
    5df8:	add	x2, x2, #0x4e0
    5dfc:	cmp	x0, x2
    5e00:	b.eq	5e10 <PyNumber_FloorDivide@plt+0x1210>  // b.none
    5e04:	mov	x1, x2
    5e08:	bl	4b30 <PyType_IsSubtype@plt>
    5e0c:	cbz	w0, 5e90 <PyNumber_FloorDivide@plt+0x1290>
    5e10:	ldr	x0, [x20, #8]
    5e14:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5e18:	add	x1, x1, #0x298
    5e1c:	add	x1, x1, #0x4e0
    5e20:	cmp	x0, x1
    5e24:	b.eq	5e3c <PyNumber_FloorDivide@plt+0x123c>  // b.none
    5e28:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5e2c:	add	x1, x1, #0x298
    5e30:	add	x1, x1, #0x4e0
    5e34:	bl	4b30 <PyType_IsSubtype@plt>
    5e38:	cbz	w0, 5e90 <PyNumber_FloorDivide@plt+0x1290>
    5e3c:	ldr	w7, [x19, #32]
    5e40:	ldr	w2, [x20, #32]
    5e44:	ldr	w6, [x19, #28]
    5e48:	ldr	w1, [x20, #28]
    5e4c:	ldr	w5, [x19, #24]
    5e50:	ldr	w0, [x20, #24]
    5e54:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    5e58:	add	x4, x4, #0x298
    5e5c:	add	x4, x4, #0x4e0
    5e60:	mov	w3, #0x1                   	// #1
    5e64:	sub	w2, w7, w2
    5e68:	sub	w1, w6, w1
    5e6c:	sub	w0, w5, w0
    5e70:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    5e74:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    5e78:	ldr	x1, [x1, #3960]
    5e7c:	cmp	x0, x1
    5e80:	b.eq	5e90 <PyNumber_FloorDivide@plt+0x1290>  // b.none
    5e84:	ldp	x19, x20, [sp, #16]
    5e88:	ldp	x29, x30, [sp], #32
    5e8c:	ret
    5e90:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5e94:	ldr	x0, [x0, #3960]
    5e98:	ldr	x1, [x0]
    5e9c:	add	x1, x1, #0x1
    5ea0:	str	x1, [x0]
    5ea4:	b	5e84 <PyNumber_FloorDivide@plt+0x1284>
    5ea8:	stp	x29, x30, [sp, #-16]!
    5eac:	mov	x29, sp
    5eb0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    5eb4:	add	x4, x4, #0x298
    5eb8:	add	x4, x4, #0x4e0
    5ebc:	mov	w3, #0x0                   	// #0
    5ec0:	ldr	w2, [x0, #32]
    5ec4:	ldr	w1, [x0, #28]
    5ec8:	ldr	w0, [x0, #24]
    5ecc:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    5ed0:	ldp	x29, x30, [sp], #16
    5ed4:	ret
    5ed8:	stp	x29, x30, [sp, #-16]!
    5edc:	mov	x29, sp
    5ee0:	ldr	w1, [x0, #24]
    5ee4:	tbnz	w1, #31, 5ef4 <PyNumber_FloorDivide@plt+0x12f4>
    5ee8:	bl	5ea8 <PyNumber_FloorDivide@plt+0x12a8>
    5eec:	ldp	x29, x30, [sp], #16
    5ef0:	ret
    5ef4:	bl	5d9c <PyNumber_FloorDivide@plt+0x119c>
    5ef8:	b	5eec <PyNumber_FloorDivide@plt+0x12ec>
    5efc:	stp	x29, x30, [sp, #-32]!
    5f00:	mov	x29, sp
    5f04:	stp	x19, x20, [sp, #16]
    5f08:	mov	x19, x0
    5f0c:	mov	x20, x1
    5f10:	ldr	x0, [x0, #8]
    5f14:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    5f18:	add	x2, x2, #0x298
    5f1c:	add	x2, x2, #0x4e0
    5f20:	cmp	x0, x2
    5f24:	b.eq	5f34 <PyNumber_FloorDivide@plt+0x1334>  // b.none
    5f28:	mov	x1, x2
    5f2c:	bl	4b30 <PyType_IsSubtype@plt>
    5f30:	cbz	w0, 5fb4 <PyNumber_FloorDivide@plt+0x13b4>
    5f34:	ldr	x0, [x20, #8]
    5f38:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5f3c:	add	x1, x1, #0x298
    5f40:	add	x1, x1, #0x4e0
    5f44:	cmp	x0, x1
    5f48:	b.eq	5f60 <PyNumber_FloorDivide@plt+0x1360>  // b.none
    5f4c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    5f50:	add	x1, x1, #0x298
    5f54:	add	x1, x1, #0x4e0
    5f58:	bl	4b30 <PyType_IsSubtype@plt>
    5f5c:	cbz	w0, 5fb4 <PyNumber_FloorDivide@plt+0x13b4>
    5f60:	ldr	w7, [x19, #32]
    5f64:	ldr	w2, [x20, #32]
    5f68:	ldr	w6, [x19, #28]
    5f6c:	ldr	w1, [x20, #28]
    5f70:	ldr	w5, [x19, #24]
    5f74:	ldr	w0, [x20, #24]
    5f78:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    5f7c:	add	x4, x4, #0x298
    5f80:	add	x4, x4, #0x4e0
    5f84:	mov	w3, #0x1                   	// #1
    5f88:	add	w2, w7, w2
    5f8c:	add	w1, w6, w1
    5f90:	add	w0, w5, w0
    5f94:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    5f98:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    5f9c:	ldr	x1, [x1, #3960]
    5fa0:	cmp	x0, x1
    5fa4:	b.eq	5fb4 <PyNumber_FloorDivide@plt+0x13b4>  // b.none
    5fa8:	ldp	x19, x20, [sp, #16]
    5fac:	ldp	x29, x30, [sp], #32
    5fb0:	ret
    5fb4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    5fb8:	ldr	x0, [x0, #3960]
    5fbc:	ldr	x1, [x0]
    5fc0:	add	x1, x1, #0x1
    5fc4:	str	x1, [x0]
    5fc8:	b	5fa8 <PyNumber_FloorDivide@plt+0x13a8>
    5fcc:	stp	x29, x30, [sp, #-64]!
    5fd0:	mov	x29, sp
    5fd4:	stp	x19, x20, [sp, #16]
    5fd8:	stp	x21, x22, [sp, #32]
    5fdc:	stp	x23, x24, [sp, #48]
    5fe0:	mov	x19, x0
    5fe4:	mov	x21, x1
    5fe8:	mov	x22, x2
    5fec:	ldr	w24, [x0]
    5ff0:	ldr	w23, [x1]
    5ff4:	mov	w1, w23
    5ff8:	mov	w0, w24
    5ffc:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    6000:	ldr	w20, [x22]
    6004:	cmp	w20, #0x0
    6008:	ccmp	w20, w0, #0x0, gt
    600c:	b.le	6030 <PyNumber_FloorDivide@plt+0x1430>
    6010:	cbnz	w20, 607c <PyNumber_FloorDivide@plt+0x147c>
    6014:	sub	w1, w23, #0x1
    6018:	str	w1, [x21]
    601c:	cmp	w1, #0x0
    6020:	b.le	605c <PyNumber_FloorDivide@plt+0x145c>
    6024:	ldr	w0, [x19]
    6028:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    602c:	str	w0, [x22]
    6030:	ldr	w1, [x19]
    6034:	sub	w1, w1, #0x1
    6038:	mov	w0, #0x0                   	// #0
    603c:	mov	w2, #0x270e                	// #9998
    6040:	cmp	w1, w2
    6044:	b.hi	6100 <PyNumber_FloorDivide@plt+0x1500>  // b.pmore
    6048:	ldp	x19, x20, [sp, #16]
    604c:	ldp	x21, x22, [sp, #32]
    6050:	ldp	x23, x24, [sp, #48]
    6054:	ldp	x29, x30, [sp], #64
    6058:	ret
    605c:	ldr	w0, [x19]
    6060:	sub	w0, w0, #0x1
    6064:	str	w0, [x19]
    6068:	mov	w0, #0xc                   	// #12
    606c:	str	w0, [x21]
    6070:	mov	w0, #0x1f                  	// #31
    6074:	str	w0, [x22]
    6078:	b	6030 <PyNumber_FloorDivide@plt+0x1430>
    607c:	add	w0, w0, #0x1
    6080:	cmp	w20, w0
    6084:	b.eq	60cc <PyNumber_FloorDivide@plt+0x14cc>  // b.none
    6088:	mov	w2, #0x1                   	// #1
    608c:	mov	w1, w23
    6090:	mov	w0, w24
    6094:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    6098:	add	w20, w20, w0
    609c:	sub	w0, w20, #0x1
    60a0:	sub	w20, w20, #0x2
    60a4:	mov	w1, #0xb9da                	// #47578
    60a8:	movk	w1, #0x37, lsl #16
    60ac:	cmp	w20, w1
    60b0:	b.hi	6100 <PyNumber_FloorDivide@plt+0x1500>  // b.pmore
    60b4:	mov	x3, x22
    60b8:	mov	x2, x21
    60bc:	mov	x1, x19
    60c0:	bl	4dd4 <PyNumber_FloorDivide@plt+0x1d4>
    60c4:	mov	w0, #0x0                   	// #0
    60c8:	b	6048 <PyNumber_FloorDivide@plt+0x1448>
    60cc:	add	w23, w23, #0x1
    60d0:	str	w23, [x21]
    60d4:	mov	w0, #0x1                   	// #1
    60d8:	str	w0, [x22]
    60dc:	ldr	w0, [x21]
    60e0:	cmp	w0, #0xc
    60e4:	b.le	6030 <PyNumber_FloorDivide@plt+0x1430>
    60e8:	mov	w0, #0x1                   	// #1
    60ec:	str	w0, [x21]
    60f0:	ldr	w0, [x19]
    60f4:	add	w0, w0, #0x1
    60f8:	str	w0, [x19]
    60fc:	b	6030 <PyNumber_FloorDivide@plt+0x1430>
    6100:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6104:	add	x1, x1, #0x720
    6108:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    610c:	ldr	x0, [x0, #4008]
    6110:	ldr	x0, [x0]
    6114:	bl	4880 <PyErr_SetString@plt>
    6118:	mov	w0, #0xffffffff            	// #-1
    611c:	b	6048 <PyNumber_FloorDivide@plt+0x1448>
    6120:	stp	x29, x30, [sp, #-32]!
    6124:	mov	x29, sp
    6128:	str	x19, [sp, #16]
    612c:	mov	w19, w2
    6130:	sub	w3, w0, #0x1
    6134:	mov	w2, #0x270e                	// #9998
    6138:	cmp	w3, w2
    613c:	b.hi	6174 <PyNumber_FloorDivide@plt+0x1574>  // b.pmore
    6140:	sub	w2, w1, #0x1
    6144:	cmp	w2, #0xb
    6148:	b.hi	6198 <PyNumber_FloorDivide@plt+0x1598>  // b.pmore
    614c:	cmp	w19, #0x0
    6150:	b.le	61b8 <PyNumber_FloorDivide@plt+0x15b8>
    6154:	bl	4d94 <PyNumber_FloorDivide@plt+0x194>
    6158:	mov	w1, w0
    615c:	mov	w0, #0x0                   	// #0
    6160:	cmp	w1, w19
    6164:	b.lt	61b8 <PyNumber_FloorDivide@plt+0x15b8>  // b.tstop
    6168:	ldr	x19, [sp, #16]
    616c:	ldp	x29, x30, [sp], #32
    6170:	ret
    6174:	mov	w2, w0
    6178:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    617c:	add	x1, x1, #0x5e8
    6180:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6184:	ldr	x0, [x0, #3968]
    6188:	ldr	x0, [x0]
    618c:	bl	4b60 <PyErr_Format@plt>
    6190:	mov	w0, #0xffffffff            	// #-1
    6194:	b	6168 <PyNumber_FloorDivide@plt+0x1568>
    6198:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    619c:	add	x1, x1, #0x738
    61a0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    61a4:	ldr	x0, [x0, #3968]
    61a8:	ldr	x0, [x0]
    61ac:	bl	4880 <PyErr_SetString@plt>
    61b0:	mov	w0, #0xffffffff            	// #-1
    61b4:	b	6168 <PyNumber_FloorDivide@plt+0x1568>
    61b8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    61bc:	add	x1, x1, #0x750
    61c0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    61c4:	ldr	x0, [x0, #3968]
    61c8:	ldr	x0, [x0]
    61cc:	bl	4880 <PyErr_SetString@plt>
    61d0:	mov	w0, #0xffffffff            	// #-1
    61d4:	b	6168 <PyNumber_FloorDivide@plt+0x1568>
    61d8:	stp	x29, x30, [sp, #-48]!
    61dc:	mov	x29, sp
    61e0:	stp	x19, x20, [sp, #16]
    61e4:	stp	x21, x22, [sp, #32]
    61e8:	mov	w22, w0
    61ec:	mov	w21, w1
    61f0:	mov	w20, w2
    61f4:	mov	x19, x3
    61f8:	bl	6120 <PyNumber_FloorDivide@plt+0x1520>
    61fc:	tbnz	w0, #31, 6240 <PyNumber_FloorDivide@plt+0x1640>
    6200:	ldr	x2, [x19, #304]
    6204:	mov	x1, #0x0                   	// #0
    6208:	mov	x0, x19
    620c:	blr	x2
    6210:	cbz	x0, 6230 <PyNumber_FloorDivide@plt+0x1630>
    6214:	mov	x1, #0xffffffffffffffff    	// #-1
    6218:	str	x1, [x0, #16]
    621c:	asr	w1, w22, #8
    6220:	strb	w1, [x0, #25]
    6224:	strb	w22, [x0, #26]
    6228:	strb	w21, [x0, #27]
    622c:	strb	w20, [x0, #28]
    6230:	ldp	x19, x20, [sp, #16]
    6234:	ldp	x21, x22, [sp, #32]
    6238:	ldp	x29, x30, [sp], #48
    623c:	ret
    6240:	mov	x0, #0x0                   	// #0
    6244:	b	6230 <PyNumber_FloorDivide@plt+0x1630>
    6248:	stp	x29, x30, [sp, #-16]!
    624c:	mov	x29, sp
    6250:	ldrb	w5, [x0, #25]
    6254:	ldrb	w4, [x0, #26]
    6258:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    625c:	add	x3, x3, #0x298
    6260:	add	x3, x3, #0x680
    6264:	ldrb	w2, [x0, #28]
    6268:	ldrb	w1, [x0, #27]
    626c:	orr	w0, w4, w5, lsl #8
    6270:	bl	61d8 <PyNumber_FloorDivide@plt+0x15d8>
    6274:	ldp	x29, x30, [sp], #16
    6278:	ret
    627c:	stp	x29, x30, [sp, #-16]!
    6280:	mov	x29, sp
    6284:	cmp	w0, #0x17
    6288:	b.hi	62c0 <PyNumber_FloorDivide@plt+0x16c0>  // b.pmore
    628c:	cmp	w1, #0x3b
    6290:	b.hi	62e0 <PyNumber_FloorDivide@plt+0x16e0>  // b.pmore
    6294:	cmp	w2, #0x3b
    6298:	b.hi	6300 <PyNumber_FloorDivide@plt+0x1700>  // b.pmore
    629c:	mov	w0, #0x423f                	// #16959
    62a0:	movk	w0, #0xf, lsl #16
    62a4:	cmp	w3, w0
    62a8:	b.hi	6320 <PyNumber_FloorDivide@plt+0x1720>  // b.pmore
    62ac:	mov	w0, #0x0                   	// #0
    62b0:	cmp	w4, #0x1
    62b4:	b.hi	6340 <PyNumber_FloorDivide@plt+0x1740>  // b.pmore
    62b8:	ldp	x29, x30, [sp], #16
    62bc:	ret
    62c0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    62c4:	add	x1, x1, #0x770
    62c8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    62cc:	ldr	x0, [x0, #3968]
    62d0:	ldr	x0, [x0]
    62d4:	bl	4880 <PyErr_SetString@plt>
    62d8:	mov	w0, #0xffffffff            	// #-1
    62dc:	b	62b8 <PyNumber_FloorDivide@plt+0x16b8>
    62e0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    62e4:	add	x1, x1, #0x788
    62e8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    62ec:	ldr	x0, [x0, #3968]
    62f0:	ldr	x0, [x0]
    62f4:	bl	4880 <PyErr_SetString@plt>
    62f8:	mov	w0, #0xffffffff            	// #-1
    62fc:	b	62b8 <PyNumber_FloorDivide@plt+0x16b8>
    6300:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6304:	add	x1, x1, #0x7a0
    6308:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    630c:	ldr	x0, [x0, #3968]
    6310:	ldr	x0, [x0]
    6314:	bl	4880 <PyErr_SetString@plt>
    6318:	mov	w0, #0xffffffff            	// #-1
    631c:	b	62b8 <PyNumber_FloorDivide@plt+0x16b8>
    6320:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6324:	add	x1, x1, #0x7b8
    6328:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    632c:	ldr	x0, [x0, #3968]
    6330:	ldr	x0, [x0]
    6334:	bl	4880 <PyErr_SetString@plt>
    6338:	mov	w0, #0xffffffff            	// #-1
    633c:	b	62b8 <PyNumber_FloorDivide@plt+0x16b8>
    6340:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6344:	add	x1, x1, #0x7e0
    6348:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    634c:	ldr	x0, [x0, #3968]
    6350:	ldr	x0, [x0]
    6354:	bl	4880 <PyErr_SetString@plt>
    6358:	mov	w0, #0xffffffff            	// #-1
    635c:	b	62b8 <PyNumber_FloorDivide@plt+0x16b8>
    6360:	stp	x29, x30, [sp, #-80]!
    6364:	mov	x29, sp
    6368:	stp	x19, x20, [sp, #16]
    636c:	stp	x21, x22, [sp, #32]
    6370:	stp	x23, x24, [sp, #48]
    6374:	stp	x25, x26, [sp, #64]
    6378:	mov	w25, w0
    637c:	mov	w24, w1
    6380:	mov	w23, w2
    6384:	mov	w21, w3
    6388:	mov	x19, x4
    638c:	mov	w20, w5
    6390:	mov	x22, x6
    6394:	mov	w4, w5
    6398:	bl	627c <PyNumber_FloorDivide@plt+0x167c>
    639c:	tbnz	w0, #31, 6438 <PyNumber_FloorDivide@plt+0x1838>
    63a0:	mov	x0, x19
    63a4:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    63a8:	tbnz	w0, #31, 6440 <PyNumber_FloorDivide@plt+0x1840>
    63ac:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    63b0:	ldr	x0, [x0, #4024]
    63b4:	cmp	x19, x0
    63b8:	cset	w26, ne  // ne = any
    63bc:	ldr	x2, [x22, #304]
    63c0:	cset	x1, ne  // ne = any
    63c4:	mov	x0, x22
    63c8:	blr	x2
    63cc:	cbz	x0, 6420 <PyNumber_FloorDivide@plt+0x1820>
    63d0:	strb	w26, [x0, #24]
    63d4:	mov	x1, #0xffffffffffffffff    	// #-1
    63d8:	str	x1, [x0, #16]
    63dc:	strb	w25, [x0, #25]
    63e0:	strb	w24, [x0, #26]
    63e4:	strb	w23, [x0, #27]
    63e8:	asr	w1, w21, #16
    63ec:	strb	w1, [x0, #28]
    63f0:	asr	w1, w21, #8
    63f4:	strb	w1, [x0, #29]
    63f8:	strb	w21, [x0, #30]
    63fc:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    6400:	ldr	x1, [x1, #4024]
    6404:	cmp	x19, x1
    6408:	b.eq	641c <PyNumber_FloorDivide@plt+0x181c>  // b.none
    640c:	ldr	x1, [x19]
    6410:	add	x1, x1, #0x1
    6414:	str	x1, [x19]
    6418:	str	x19, [x0, #32]
    641c:	strb	w20, [x0, #31]
    6420:	ldp	x19, x20, [sp, #16]
    6424:	ldp	x21, x22, [sp, #32]
    6428:	ldp	x23, x24, [sp, #48]
    642c:	ldp	x25, x26, [sp, #64]
    6430:	ldp	x29, x30, [sp], #80
    6434:	ret
    6438:	mov	x0, #0x0                   	// #0
    643c:	b	6420 <PyNumber_FloorDivide@plt+0x1820>
    6440:	mov	x0, #0x0                   	// #0
    6444:	b	6420 <PyNumber_FloorDivide@plt+0x1820>
    6448:	stp	x29, x30, [sp, #-16]!
    644c:	mov	x29, sp
    6450:	mov	x6, x5
    6454:	mov	w5, #0x0                   	// #0
    6458:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    645c:	ldp	x29, x30, [sp], #16
    6460:	ret
    6464:	stp	x29, x30, [sp, #-16]!
    6468:	mov	x29, sp
    646c:	mov	x5, x0
    6470:	ldrb	w0, [x0, #29]
    6474:	ldrb	w1, [x5, #30]
    6478:	ldrb	w2, [x5, #31]
    647c:	ldrb	w3, [x5, #32]
    6480:	ldrb	w4, [x5, #33]
    6484:	lsl	w4, w4, #8
    6488:	orr	w3, w4, w3, lsl #16
    648c:	ldrb	w4, [x5, #34]
    6490:	orr	w3, w3, w4
    6494:	ldrb	w4, [x5, #24]
    6498:	cbz	w4, 64bc <PyNumber_FloorDivide@plt+0x18bc>
    649c:	ldr	x4, [x5, #40]
    64a0:	adrp	x6, 25000 <PyInit__datetime@@Base+0x165b0>
    64a4:	add	x6, x6, #0x298
    64a8:	add	x6, x6, #0x1a0
    64ac:	ldrb	w5, [x5, #35]
    64b0:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    64b4:	ldp	x29, x30, [sp], #16
    64b8:	ret
    64bc:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    64c0:	ldr	x4, [x4, #4024]
    64c4:	b	64a0 <PyNumber_FloorDivide@plt+0x18a0>
    64c8:	stp	x29, x30, [sp, #-16]!
    64cc:	mov	x29, sp
    64d0:	ldrb	w1, [x0, #32]
    64d4:	ldrb	w3, [x0, #33]
    64d8:	lsl	w3, w3, #8
    64dc:	orr	w1, w3, w1, lsl #16
    64e0:	ldrb	w3, [x0, #34]
    64e4:	adrp	x6, 25000 <PyInit__datetime@@Base+0x165b0>
    64e8:	add	x6, x6, #0x298
    64ec:	add	x6, x6, #0x1a0
    64f0:	ldrb	w5, [x0, #35]
    64f4:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    64f8:	ldr	x4, [x4, #4024]
    64fc:	orr	w3, w1, w3
    6500:	ldrb	w2, [x0, #31]
    6504:	ldrb	w1, [x0, #30]
    6508:	ldrb	w0, [x0, #29]
    650c:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    6510:	ldp	x29, x30, [sp], #16
    6514:	ret
    6518:	stp	x29, x30, [sp, #-16]!
    651c:	mov	x29, sp
    6520:	ldr	x2, [x0, #24]
    6524:	cbz	x2, 6540 <PyNumber_FloorDivide@plt+0x1940>
    6528:	ldr	x1, [x0, #16]
    652c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6530:	add	x0, x0, #0x808
    6534:	bl	49a0 <Py_BuildValue@plt>
    6538:	ldp	x29, x30, [sp], #16
    653c:	ret
    6540:	ldr	x1, [x0, #16]
    6544:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6548:	add	x0, x0, #0x800
    654c:	bl	49a0 <Py_BuildValue@plt>
    6550:	b	6538 <PyNumber_FloorDivide@plt+0x1938>
    6554:	stp	x29, x30, [sp, #-32]!
    6558:	mov	x29, sp
    655c:	str	x19, [sp, #16]
    6560:	ldr	x19, [x0, #8]
    6564:	ldr	w3, [x0, #32]
    6568:	ldr	w2, [x0, #28]
    656c:	ldr	w1, [x0, #24]
    6570:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6574:	add	x0, x0, #0x810
    6578:	bl	49a0 <Py_BuildValue@plt>
    657c:	mov	x2, x0
    6580:	mov	x1, x19
    6584:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6588:	add	x0, x0, #0x818
    658c:	bl	49a0 <Py_BuildValue@plt>
    6590:	ldr	x19, [sp, #16]
    6594:	ldp	x29, x30, [sp], #32
    6598:	ret
    659c:	stp	x29, x30, [sp, #-64]!
    65a0:	mov	x29, sp
    65a4:	stp	x19, x20, [sp, #16]
    65a8:	stp	x21, x22, [sp, #32]
    65ac:	mov	x20, x0
    65b0:	ldrb	w19, [x0, #25]
    65b4:	ldrb	w0, [x0, #26]
    65b8:	orr	w19, w0, w19, lsl #8
    65bc:	mov	w0, w19
    65c0:	bl	4fdc <PyNumber_FloorDivide@plt+0x3dc>
    65c4:	mov	w22, w0
    65c8:	ldrb	w2, [x20, #28]
    65cc:	ldrb	w1, [x20, #27]
    65d0:	mov	w0, w19
    65d4:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    65d8:	mov	w21, w0
    65dc:	add	x2, sp, #0x3c
    65e0:	mov	w1, #0x7                   	// #7
    65e4:	sub	w0, w0, w22
    65e8:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    65ec:	tbnz	w0, #31, 6640 <PyNumber_FloorDivide@plt+0x1a40>
    65f0:	mov	w20, w0
    65f4:	cmp	w0, #0x33
    65f8:	b.le	6614 <PyNumber_FloorDivide@plt+0x1a14>
    65fc:	add	w22, w19, #0x1
    6600:	mov	w0, w22
    6604:	bl	4fdc <PyNumber_FloorDivide@plt+0x3dc>
    6608:	cmp	w0, w21
    660c:	csel	w19, w19, w22, gt
    6610:	csel	w20, w20, wzr, gt
    6614:	ldr	w3, [sp, #60]
    6618:	add	w3, w3, #0x1
    661c:	add	w2, w20, #0x1
    6620:	mov	w1, w19
    6624:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6628:	add	x0, x0, #0x810
    662c:	bl	49a0 <Py_BuildValue@plt>
    6630:	ldp	x19, x20, [sp, #16]
    6634:	ldp	x21, x22, [sp, #32]
    6638:	ldp	x29, x30, [sp], #64
    663c:	ret
    6640:	sub	w19, w19, #0x1
    6644:	mov	w0, w19
    6648:	bl	4fdc <PyNumber_FloorDivide@plt+0x3dc>
    664c:	add	x2, sp, #0x3c
    6650:	mov	w1, #0x7                   	// #7
    6654:	sub	w0, w21, w0
    6658:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    665c:	mov	w20, w0
    6660:	b	6614 <PyNumber_FloorDivide@plt+0x1a14>
    6664:	cmp	w1, #0x3
    6668:	b.eq	6704 <PyNumber_FloorDivide@plt+0x1b04>  // b.none
    666c:	cmp	w1, #0x3
    6670:	b.gt	66c0 <PyNumber_FloorDivide@plt+0x1ac0>
    6674:	cmp	w1, #0x1
    6678:	b.eq	6788 <PyNumber_FloorDivide@plt+0x1b88>  // b.none
    667c:	cmp	w1, #0x2
    6680:	b.ne	66a0 <PyNumber_FloorDivide@plt+0x1aa0>  // b.any
    6684:	cbz	w0, 66ec <PyNumber_FloorDivide@plt+0x1aec>
    6688:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    668c:	ldr	x0, [x0, #3992]
    6690:	ldr	x1, [x0]
    6694:	add	x1, x1, #0x1
    6698:	str	x1, [x0]
    669c:	ret
    66a0:	cbnz	w1, 67d8 <PyNumber_FloorDivide@plt+0x1bd8>
    66a4:	tbnz	w0, #31, 6738 <PyNumber_FloorDivide@plt+0x1b38>
    66a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    66ac:	ldr	x0, [x0, #3992]
    66b0:	ldr	x1, [x0]
    66b4:	add	x1, x1, #0x1
    66b8:	str	x1, [x0]
    66bc:	ret
    66c0:	cmp	w1, #0x4
    66c4:	b.eq	6750 <PyNumber_FloorDivide@plt+0x1b50>  // b.none
    66c8:	cmp	w1, #0x5
    66cc:	b.ne	67d8 <PyNumber_FloorDivide@plt+0x1bd8>  // b.any
    66d0:	tbz	w0, #31, 67c0 <PyNumber_FloorDivide@plt+0x1bc0>
    66d4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    66d8:	ldr	x0, [x0, #3992]
    66dc:	ldr	x1, [x0]
    66e0:	add	x1, x1, #0x1
    66e4:	str	x1, [x0]
    66e8:	ret
    66ec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    66f0:	ldr	x0, [x0, #4040]
    66f4:	ldr	x1, [x0]
    66f8:	add	x1, x1, #0x1
    66fc:	str	x1, [x0]
    6700:	ret
    6704:	cbnz	w0, 6720 <PyNumber_FloorDivide@plt+0x1b20>
    6708:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    670c:	ldr	x0, [x0, #3992]
    6710:	ldr	x1, [x0]
    6714:	add	x1, x1, #0x1
    6718:	str	x1, [x0]
    671c:	ret
    6720:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6724:	ldr	x0, [x0, #4040]
    6728:	ldr	x1, [x0]
    672c:	add	x1, x1, #0x1
    6730:	str	x1, [x0]
    6734:	ret
    6738:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    673c:	ldr	x0, [x0, #4040]
    6740:	ldr	x1, [x0]
    6744:	add	x1, x1, #0x1
    6748:	str	x1, [x0]
    674c:	ret
    6750:	cmp	w0, #0x0
    6754:	b.gt	6770 <PyNumber_FloorDivide@plt+0x1b70>
    6758:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    675c:	ldr	x0, [x0, #3992]
    6760:	ldr	x1, [x0]
    6764:	add	x1, x1, #0x1
    6768:	str	x1, [x0]
    676c:	ret
    6770:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6774:	ldr	x0, [x0, #4040]
    6778:	ldr	x1, [x0]
    677c:	add	x1, x1, #0x1
    6780:	str	x1, [x0]
    6784:	ret
    6788:	cmp	w0, #0x0
    678c:	b.le	67a8 <PyNumber_FloorDivide@plt+0x1ba8>
    6790:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6794:	ldr	x0, [x0, #3992]
    6798:	ldr	x1, [x0]
    679c:	add	x1, x1, #0x1
    67a0:	str	x1, [x0]
    67a4:	ret
    67a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    67ac:	ldr	x0, [x0, #4040]
    67b0:	ldr	x1, [x0]
    67b4:	add	x1, x1, #0x1
    67b8:	str	x1, [x0]
    67bc:	ret
    67c0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    67c4:	ldr	x0, [x0, #4040]
    67c8:	ldr	x1, [x0]
    67cc:	add	x1, x1, #0x1
    67d0:	str	x1, [x0]
    67d4:	ret
    67d8:	stp	x29, x30, [sp, #-16]!
    67dc:	mov	x29, sp
    67e0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    67e4:	add	x0, x0, #0x820
    67e8:	bl	4a40 <Py_FatalError@plt>
    67ec:	stp	x29, x30, [sp, #-48]!
    67f0:	mov	x29, sp
    67f4:	stp	x19, x20, [sp, #16]
    67f8:	str	x21, [sp, #32]
    67fc:	mov	x21, x0
    6800:	mov	x19, x1
    6804:	mov	w20, w2
    6808:	ldr	x0, [x1, #8]
    680c:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    6810:	add	x3, x3, #0x298
    6814:	add	x3, x3, #0x4e0
    6818:	cmp	x0, x3
    681c:	b.eq	682c <PyNumber_FloorDivide@plt+0x1c2c>  // b.none
    6820:	mov	x1, x3
    6824:	bl	4b30 <PyType_IsSubtype@plt>
    6828:	cbz	w0, 6850 <PyNumber_FloorDivide@plt+0x1c50>
    682c:	mov	x1, x19
    6830:	mov	x0, x21
    6834:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    6838:	mov	w1, w20
    683c:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    6840:	ldp	x19, x20, [sp, #16]
    6844:	ldr	x21, [sp, #32]
    6848:	ldp	x29, x30, [sp], #48
    684c:	ret
    6850:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6854:	ldr	x0, [x0, #3960]
    6858:	ldr	x1, [x0]
    685c:	add	x1, x1, #0x1
    6860:	str	x1, [x0]
    6864:	b	6840 <PyNumber_FloorDivide@plt+0x1c40>
    6868:	stp	x29, x30, [sp, #-48]!
    686c:	mov	x29, sp
    6870:	stp	x19, x20, [sp, #16]
    6874:	mov	x20, x1
    6878:	sub	w1, w2, #0x2
    687c:	cmp	w1, #0x1
    6880:	b.hi	68d4 <PyNumber_FloorDivide@plt+0x1cd4>  // b.pmore
    6884:	str	x21, [sp, #32]
    6888:	mov	x21, x0
    688c:	mov	w19, w2
    6890:	ldr	x0, [x20, #8]
    6894:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    6898:	add	x1, x1, #0xab8
    689c:	cmp	x0, x1
    68a0:	b.eq	68b4 <PyNumber_FloorDivide@plt+0x1cb4>  // b.none
    68a4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    68a8:	add	x1, x1, #0xab8
    68ac:	bl	4b30 <PyType_IsSubtype@plt>
    68b0:	cbz	w0, 68ec <PyNumber_FloorDivide@plt+0x1cec>
    68b4:	mov	w2, w19
    68b8:	ldr	x1, [x20, #16]
    68bc:	ldr	x0, [x21, #16]
    68c0:	bl	67ec <PyNumber_FloorDivide@plt+0x1bec>
    68c4:	ldr	x21, [sp, #32]
    68c8:	ldp	x19, x20, [sp, #16]
    68cc:	ldp	x29, x30, [sp], #48
    68d0:	ret
    68d4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    68d8:	ldr	x0, [x0, #3960]
    68dc:	ldr	x1, [x0]
    68e0:	add	x1, x1, #0x1
    68e4:	str	x1, [x0]
    68e8:	b	68c8 <PyNumber_FloorDivide@plt+0x1cc8>
    68ec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    68f0:	ldr	x0, [x0, #3960]
    68f4:	ldr	x1, [x0]
    68f8:	add	x1, x1, #0x1
    68fc:	str	x1, [x0]
    6900:	ldr	x21, [sp, #32]
    6904:	b	68c8 <PyNumber_FloorDivide@plt+0x1cc8>
    6908:	stp	x29, x30, [sp, #-16]!
    690c:	mov	x29, sp
    6910:	ldr	x1, [x0, #8]
    6914:	ldr	x1, [x1, #24]
    6918:	adrp	x2, 26000 <PyInit__datetime@@Base+0x175b0>
    691c:	ldr	x2, [x2, #3960]
    6920:	cmp	x2, x0
    6924:	b.eq	6948 <PyNumber_FloorDivide@plt+0x1d48>  // b.none
    6928:	ldr	x3, [x0, #24]
    692c:	cbz	x3, 6958 <PyNumber_FloorDivide@plt+0x1d58>
    6930:	ldr	x2, [x0, #16]
    6934:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6938:	add	x0, x0, #0x850
    693c:	bl	4700 <PyUnicode_FromFormat@plt>
    6940:	ldp	x29, x30, [sp], #16
    6944:	ret
    6948:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    694c:	add	x0, x0, #0x840
    6950:	bl	4700 <PyUnicode_FromFormat@plt>
    6954:	b	6940 <PyNumber_FloorDivide@plt+0x1d40>
    6958:	ldr	x2, [x0, #16]
    695c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6960:	add	x0, x0, #0x848
    6964:	bl	4700 <PyUnicode_FromFormat@plt>
    6968:	b	6940 <PyNumber_FloorDivide@plt+0x1d40>
    696c:	stp	x29, x30, [sp, #-48]!
    6970:	mov	x29, sp
    6974:	stp	x19, x20, [sp, #16]
    6978:	mov	x19, x0
    697c:	ldr	w20, [x0, #32]
    6980:	ldr	w0, [x0, #28]
    6984:	str	w0, [sp, #44]
    6988:	add	x2, sp, #0x2c
    698c:	mov	w1, #0x3c                  	// #60
    6990:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    6994:	str	w0, [sp, #40]
    6998:	add	x2, sp, #0x28
    699c:	mov	w1, #0x3c                  	// #60
    69a0:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    69a4:	ldr	w1, [x19, #24]
    69a8:	cbz	w1, 6a2c <PyNumber_FloorDivide@plt+0x1e2c>
    69ac:	cbz	w20, 69f4 <PyNumber_FloorDivide@plt+0x1df4>
    69b0:	add	w3, w1, #0x1
    69b4:	adrp	x7, f000 <PyInit__datetime@@Base+0x5b0>
    69b8:	add	x7, x7, #0xf98
    69bc:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    69c0:	add	x2, x2, #0x938
    69c4:	tst	w3, #0xfffffffd
    69c8:	mov	w6, w20
    69cc:	ldr	w5, [sp, #44]
    69d0:	ldr	w4, [sp, #40]
    69d4:	mov	w3, w0
    69d8:	csel	x2, x2, x7, eq  // eq = none
    69dc:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    69e0:	add	x0, x0, #0x860
    69e4:	bl	4700 <PyUnicode_FromFormat@plt>
    69e8:	ldp	x19, x20, [sp, #16]
    69ec:	ldp	x29, x30, [sp], #48
    69f0:	ret
    69f4:	add	w3, w1, #0x1
    69f8:	adrp	x6, f000 <PyInit__datetime@@Base+0x5b0>
    69fc:	add	x6, x6, #0xf98
    6a00:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    6a04:	add	x2, x2, #0x938
    6a08:	tst	w3, #0xfffffffd
    6a0c:	ldr	w5, [sp, #44]
    6a10:	ldr	w4, [sp, #40]
    6a14:	mov	w3, w0
    6a18:	csel	x2, x2, x6, eq  // eq = none
    6a1c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6a20:	add	x0, x0, #0x880
    6a24:	bl	4700 <PyUnicode_FromFormat@plt>
    6a28:	b	69e8 <PyNumber_FloorDivide@plt+0x1de8>
    6a2c:	cbz	w20, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6a30:	mov	w4, w20
    6a34:	ldr	w3, [sp, #44]
    6a38:	ldr	w2, [sp, #40]
    6a3c:	mov	w1, w0
    6a40:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6a44:	add	x0, x0, #0x898
    6a48:	bl	4700 <PyUnicode_FromFormat@plt>
    6a4c:	b	69e8 <PyNumber_FloorDivide@plt+0x1de8>
    6a50:	ldr	w3, [sp, #44]
    6a54:	ldr	w2, [sp, #40]
    6a58:	mov	w1, w0
    6a5c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6a60:	add	x0, x0, #0x8b0
    6a64:	bl	4700 <PyUnicode_FromFormat@plt>
    6a68:	b	69e8 <PyNumber_FloorDivide@plt+0x1de8>
    6a6c:	stp	x29, x30, [sp, #-16]!
    6a70:	mov	x29, sp
    6a74:	ldrb	w4, [x0, #25]
    6a78:	ldrb	w1, [x0, #26]
    6a7c:	ldrb	w3, [x0, #28]
    6a80:	ldrb	w2, [x0, #27]
    6a84:	orr	w1, w1, w4, lsl #8
    6a88:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6a8c:	add	x0, x0, #0x8c0
    6a90:	bl	4700 <PyUnicode_FromFormat@plt>
    6a94:	ldp	x29, x30, [sp], #16
    6a98:	ret
    6a9c:	stp	x29, x30, [sp, #-16]!
    6aa0:	mov	x29, sp
    6aa4:	ldrb	w5, [x0, #25]
    6aa8:	ldrb	w2, [x0, #26]
    6aac:	ldr	x1, [x0, #8]
    6ab0:	ldrb	w4, [x0, #28]
    6ab4:	ldrb	w3, [x0, #27]
    6ab8:	orr	w2, w2, w5, lsl #8
    6abc:	ldr	x1, [x1, #24]
    6ac0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6ac4:	add	x0, x0, #0x8d0
    6ac8:	bl	4700 <PyUnicode_FromFormat@plt>
    6acc:	ldp	x29, x30, [sp], #16
    6ad0:	ret
    6ad4:	stp	x29, x30, [sp, #-48]!
    6ad8:	mov	x29, sp
    6adc:	stp	x19, x20, [sp, #16]
    6ae0:	str	x21, [sp, #32]
    6ae4:	mov	x20, x0
    6ae8:	mov	x21, x1
    6aec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6af0:	ldr	x0, [x0, #4024]
    6af4:	cmp	x2, x0
    6af8:	b.eq	6bb8 <PyNumber_FloorDivide@plt+0x1fb8>  // b.none
    6afc:	mov	x19, x2
    6b00:	mov	x0, x2
    6b04:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    6b08:	tbnz	w0, #31, 6b60 <PyNumber_FloorDivide@plt+0x1f60>
    6b0c:	ldr	x2, [x20, #304]
    6b10:	mov	x1, #0x1                   	// #1
    6b14:	mov	x0, x20
    6b18:	blr	x2
    6b1c:	cbz	x0, 6bcc <PyNumber_FloorDivide@plt+0x1fcc>
    6b20:	ldr	w1, [x21, #32]
    6b24:	stur	w1, [x0, #25]
    6b28:	ldrh	w1, [x21, #36]
    6b2c:	sturh	w1, [x0, #29]
    6b30:	mov	x1, #0xffffffffffffffff    	// #-1
    6b34:	str	x1, [x0, #16]
    6b38:	mov	w1, #0x1                   	// #1
    6b3c:	strb	w1, [x0, #24]
    6b40:	ldr	x1, [x19]
    6b44:	add	x1, x1, #0x1
    6b48:	str	x1, [x19]
    6b4c:	str	x19, [x0, #32]
    6b50:	ldrsb	w1, [x21, #32]
    6b54:	tbnz	w1, #31, 6b80 <PyNumber_FloorDivide@plt+0x1f80>
    6b58:	strb	wzr, [x0, #31]
    6b5c:	b	6bcc <PyNumber_FloorDivide@plt+0x1fcc>
    6b60:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6b64:	add	x1, x1, #0x8e0
    6b68:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6b6c:	ldr	x0, [x0, #3976]
    6b70:	ldr	x0, [x0]
    6b74:	bl	4880 <PyErr_SetString@plt>
    6b78:	mov	x0, #0x0                   	// #0
    6b7c:	b	6bcc <PyNumber_FloorDivide@plt+0x1fcc>
    6b80:	ldrb	w1, [x0, #25]
    6b84:	sub	w1, w1, #0x80
    6b88:	strb	w1, [x0, #25]
    6b8c:	mov	w1, #0x1                   	// #1
    6b90:	strb	w1, [x0, #31]
    6b94:	b	6bcc <PyNumber_FloorDivide@plt+0x1fcc>
    6b98:	ldr	w1, [x21, #32]
    6b9c:	stur	w1, [x0, #25]
    6ba0:	ldrh	w1, [x21, #36]
    6ba4:	sturh	w1, [x0, #29]
    6ba8:	mov	x1, #0xffffffffffffffff    	// #-1
    6bac:	str	x1, [x0, #16]
    6bb0:	strb	wzr, [x0, #24]
    6bb4:	b	6b50 <PyNumber_FloorDivide@plt+0x1f50>
    6bb8:	ldr	x2, [x20, #304]
    6bbc:	mov	x1, #0x0                   	// #0
    6bc0:	mov	x0, x20
    6bc4:	blr	x2
    6bc8:	cbnz	x0, 6b98 <PyNumber_FloorDivide@plt+0x1f98>
    6bcc:	ldp	x19, x20, [sp, #16]
    6bd0:	ldr	x21, [sp, #32]
    6bd4:	ldp	x29, x30, [sp], #48
    6bd8:	ret
    6bdc:	stp	x29, x30, [sp, #-48]!
    6be0:	mov	x29, sp
    6be4:	stp	x19, x20, [sp, #16]
    6be8:	str	x21, [sp, #32]
    6bec:	mov	x20, x0
    6bf0:	mov	x21, x1
    6bf4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6bf8:	ldr	x0, [x0, #4024]
    6bfc:	cmp	x2, x0
    6c00:	b.eq	6cc0 <PyNumber_FloorDivide@plt+0x20c0>  // b.none
    6c04:	mov	x19, x2
    6c08:	mov	x0, x2
    6c0c:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    6c10:	tbnz	w0, #31, 6c68 <PyNumber_FloorDivide@plt+0x2068>
    6c14:	ldr	x2, [x20, #304]
    6c18:	mov	x1, #0x1                   	// #1
    6c1c:	mov	x0, x20
    6c20:	blr	x2
    6c24:	cbz	x0, 6cd4 <PyNumber_FloorDivide@plt+0x20d4>
    6c28:	ldr	x1, [x21, #32]
    6c2c:	stur	x1, [x0, #25]
    6c30:	ldrh	w1, [x21, #40]
    6c34:	sturh	w1, [x0, #33]
    6c38:	mov	x1, #0xffffffffffffffff    	// #-1
    6c3c:	str	x1, [x0, #16]
    6c40:	mov	w1, #0x1                   	// #1
    6c44:	strb	w1, [x0, #24]
    6c48:	ldr	x1, [x19]
    6c4c:	add	x1, x1, #0x1
    6c50:	str	x1, [x19]
    6c54:	str	x19, [x0, #40]
    6c58:	ldrsb	w1, [x21, #34]
    6c5c:	tbnz	w1, #31, 6c88 <PyNumber_FloorDivide@plt+0x2088>
    6c60:	strb	wzr, [x0, #35]
    6c64:	b	6cd4 <PyNumber_FloorDivide@plt+0x20d4>
    6c68:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6c6c:	add	x1, x1, #0x8e0
    6c70:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6c74:	ldr	x0, [x0, #3976]
    6c78:	ldr	x0, [x0]
    6c7c:	bl	4880 <PyErr_SetString@plt>
    6c80:	mov	x0, #0x0                   	// #0
    6c84:	b	6cd4 <PyNumber_FloorDivide@plt+0x20d4>
    6c88:	ldrb	w1, [x0, #27]
    6c8c:	sub	w1, w1, #0x80
    6c90:	strb	w1, [x0, #27]
    6c94:	mov	w1, #0x1                   	// #1
    6c98:	strb	w1, [x0, #35]
    6c9c:	b	6cd4 <PyNumber_FloorDivide@plt+0x20d4>
    6ca0:	ldr	x1, [x21, #32]
    6ca4:	stur	x1, [x0, #25]
    6ca8:	ldrh	w1, [x21, #40]
    6cac:	sturh	w1, [x0, #33]
    6cb0:	mov	x1, #0xffffffffffffffff    	// #-1
    6cb4:	str	x1, [x0, #16]
    6cb8:	strb	wzr, [x0, #24]
    6cbc:	b	6c58 <PyNumber_FloorDivide@plt+0x2058>
    6cc0:	ldr	x2, [x20, #304]
    6cc4:	mov	x1, #0x0                   	// #0
    6cc8:	mov	x0, x20
    6ccc:	blr	x2
    6cd0:	cbnz	x0, 6ca0 <PyNumber_FloorDivide@plt+0x20a0>
    6cd4:	ldp	x19, x20, [sp, #16]
    6cd8:	ldr	x21, [sp, #32]
    6cdc:	ldp	x29, x30, [sp], #48
    6ce0:	ret
    6ce4:	stp	x29, x30, [sp, #-32]!
    6ce8:	mov	x29, sp
    6cec:	stp	x19, x20, [sp, #16]
    6cf0:	mov	x20, x0
    6cf4:	cmp	x1, #0x0
    6cf8:	mov	x1, #0x28                  	// #40
    6cfc:	mov	x0, #0x20                  	// #32
    6d00:	csel	x0, x1, x0, ne  // ne = any
    6d04:	bl	4890 <PyObject_Malloc@plt>
    6d08:	cbz	x0, 6d54 <PyNumber_FloorDivide@plt+0x2154>
    6d0c:	mov	x19, x0
    6d10:	str	x20, [x0, #8]
    6d14:	mov	x0, x20
    6d18:	bl	4af0 <PyType_GetFlags@plt>
    6d1c:	tbz	w0, #9, 6d2c <PyNumber_FloorDivide@plt+0x212c>
    6d20:	ldr	x0, [x20]
    6d24:	add	x0, x0, #0x1
    6d28:	str	x0, [x20]
    6d2c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6d30:	ldr	x0, [x0, #3984]
    6d34:	ldr	w0, [x0, #4]
    6d38:	cbnz	w0, 6d60 <PyNumber_FloorDivide@plt+0x2160>
    6d3c:	mov	x0, #0x1                   	// #1
    6d40:	str	x0, [x19]
    6d44:	mov	x0, x19
    6d48:	ldp	x19, x20, [sp, #16]
    6d4c:	ldp	x29, x30, [sp], #32
    6d50:	ret
    6d54:	bl	4820 <PyErr_NoMemory@plt>
    6d58:	mov	x19, x0
    6d5c:	b	6d44 <PyNumber_FloorDivide@plt+0x2144>
    6d60:	mov	x0, x19
    6d64:	bl	4ab0 <_PyTraceMalloc_NewReference@plt>
    6d68:	b	6d3c <PyNumber_FloorDivide@plt+0x213c>
    6d6c:	stp	x29, x30, [sp, #-32]!
    6d70:	mov	x29, sp
    6d74:	str	x19, [sp, #16]
    6d78:	ldr	x19, [x0, #8]
    6d7c:	mov	x1, #0x4                   	// #4
    6d80:	add	x0, x0, #0x19
    6d84:	bl	4800 <PyBytes_FromStringAndSize@plt>
    6d88:	mov	x1, x0
    6d8c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6d90:	add	x0, x0, #0x8f8
    6d94:	bl	49a0 <Py_BuildValue@plt>
    6d98:	mov	x2, x0
    6d9c:	mov	x1, x19
    6da0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6da4:	add	x0, x0, #0x900
    6da8:	bl	49a0 <Py_BuildValue@plt>
    6dac:	ldr	x19, [sp, #16]
    6db0:	ldp	x29, x30, [sp], #32
    6db4:	ret
    6db8:	stp	x29, x30, [sp, #-48]!
    6dbc:	mov	x29, sp
    6dc0:	str	x19, [sp, #16]
    6dc4:	mov	x19, x0
    6dc8:	mov	x0, x1
    6dcc:	add	x2, sp, #0x28
    6dd0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6dd4:	add	x1, x1, #0x908
    6dd8:	bl	4a30 <PyArg_ParseTuple@plt>
    6ddc:	cbz	w0, 6e20 <PyNumber_FloorDivide@plt+0x2220>
    6de0:	ldr	x0, [sp, #40]
    6de4:	bl	48d0 <PyUnicode_GetLength@plt>
    6de8:	cbz	x0, 6e14 <PyNumber_FloorDivide@plt+0x2214>
    6dec:	mov	x3, #0x0                   	// #0
    6df0:	ldr	x2, [sp, #40]
    6df4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    6df8:	add	x1, x1, #0xab8
    6dfc:	add	x1, x1, #0x1d0
    6e00:	mov	x0, x19
    6e04:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    6e08:	ldr	x19, [sp, #16]
    6e0c:	ldp	x29, x30, [sp], #48
    6e10:	ret
    6e14:	mov	x0, x19
    6e18:	bl	4850 <PyObject_Str@plt>
    6e1c:	b	6e08 <PyNumber_FloorDivide@plt+0x2208>
    6e20:	mov	x0, #0x0                   	// #0
    6e24:	b	6e08 <PyNumber_FloorDivide@plt+0x2208>
    6e28:	stp	x29, x30, [sp, #-48]!
    6e2c:	mov	x29, sp
    6e30:	str	x19, [sp, #16]
    6e34:	mov	x19, x0
    6e38:	mov	x0, x1
    6e3c:	add	x3, sp, #0x20
    6e40:	add	x2, sp, #0x28
    6e44:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    6e48:	add	x1, x1, #0x918
    6e4c:	bl	4a30 <PyArg_ParseTuple@plt>
    6e50:	cbz	w0, 6eb0 <PyNumber_FloorDivide@plt+0x22b0>
    6e54:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    6e58:	ldr	x0, [x0, #3968]
    6e5c:	cbz	x0, 6e94 <PyNumber_FloorDivide@plt+0x2294>
    6e60:	mov	x5, #0x0                   	// #0
    6e64:	ldr	x4, [sp, #32]
    6e68:	ldr	x3, [sp, #40]
    6e6c:	mov	x2, x19
    6e70:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    6e74:	add	x1, x1, #0xab8
    6e78:	add	x1, x1, #0x1e8
    6e7c:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    6e80:	ldr	x0, [x0, #3968]
    6e84:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    6e88:	ldr	x19, [sp, #16]
    6e8c:	ldp	x29, x30, [sp], #48
    6e90:	ret
    6e94:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    6e98:	add	x0, x0, #0x928
    6e9c:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    6ea0:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    6ea4:	str	x0, [x1, #3968]
    6ea8:	cbnz	x0, 6e60 <PyNumber_FloorDivide@plt+0x2260>
    6eac:	b	6e88 <PyNumber_FloorDivide@plt+0x2288>
    6eb0:	mov	x0, #0x0                   	// #0
    6eb4:	b	6e88 <PyNumber_FloorDivide@plt+0x2288>
    6eb8:	stp	x29, x30, [sp, #-48]!
    6ebc:	mov	x29, sp
    6ec0:	stp	x19, x20, [sp, #16]
    6ec4:	str	x21, [sp, #32]
    6ec8:	mov	x21, x0
    6ecc:	mov	x19, x1
    6ed0:	mov	w20, w2
    6ed4:	ldr	x0, [x1, #8]
    6ed8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    6edc:	add	x3, x3, #0x298
    6ee0:	add	x3, x3, #0x680
    6ee4:	cmp	x0, x3
    6ee8:	b.eq	6ef8 <PyNumber_FloorDivide@plt+0x22f8>  // b.none
    6eec:	mov	x1, x3
    6ef0:	bl	4b30 <PyType_IsSubtype@plt>
    6ef4:	cbz	w0, 6f20 <PyNumber_FloorDivide@plt+0x2320>
    6ef8:	mov	x2, #0x4                   	// #4
    6efc:	add	x1, x19, #0x19
    6f00:	add	x0, x21, #0x19
    6f04:	bl	49e0 <memcmp@plt>
    6f08:	mov	w1, w20
    6f0c:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    6f10:	ldp	x19, x20, [sp, #16]
    6f14:	ldr	x21, [sp, #32]
    6f18:	ldp	x29, x30, [sp], #48
    6f1c:	ret
    6f20:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    6f24:	ldr	x0, [x0, #3960]
    6f28:	ldr	x1, [x0]
    6f2c:	add	x1, x1, #0x1
    6f30:	str	x1, [x0]
    6f34:	b	6f10 <PyNumber_FloorDivide@plt+0x2310>
    6f38:	stp	x29, x30, [sp, #-32]!
    6f3c:	mov	x29, sp
    6f40:	str	x19, [sp, #16]
    6f44:	mov	x19, x0
    6f48:	ldr	x0, [x0, #16]
    6f4c:	cmn	x0, #0x1
    6f50:	b.eq	6f64 <PyNumber_FloorDivide@plt+0x2364>  // b.none
    6f54:	ldr	x0, [x19, #16]
    6f58:	ldr	x19, [sp, #16]
    6f5c:	ldp	x29, x30, [sp], #32
    6f60:	ret
    6f64:	mov	x1, #0x4                   	// #4
    6f68:	add	x0, x19, #0x19
    6f6c:	bl	48b0 <_Py_HashBytes@plt>
    6f70:	str	x0, [x19, #16]
    6f74:	b	6f54 <PyNumber_FloorDivide@plt+0x2354>
    6f78:	ldr	x1, [x0, #24]
    6f7c:	cbz	x1, 6f94 <PyNumber_FloorDivide@plt+0x2394>
    6f80:	ldr	x2, [x1]
    6f84:	add	x2, x2, #0x1
    6f88:	str	x2, [x1]
    6f8c:	ldr	x0, [x0, #24]
    6f90:	ret
    6f94:	stp	x29, x30, [sp, #-48]!
    6f98:	mov	x29, sp
    6f9c:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    6fa0:	ldr	x1, [x1, #3960]
    6fa4:	cmp	x1, x0
    6fa8:	b.eq	7048 <PyNumber_FloorDivide@plt+0x2448>  // b.none
    6fac:	ldr	x0, [x0, #16]
    6fb0:	ldr	x1, [x0, #24]
    6fb4:	cbnz	x1, 6fc0 <PyNumber_FloorDivide@plt+0x23c0>
    6fb8:	ldr	w1, [x0, #32]
    6fbc:	cbz	w1, 7048 <PyNumber_FloorDivide@plt+0x2448>
    6fc0:	stp	x19, x20, [sp, #16]
    6fc4:	ldr	w1, [x0, #24]
    6fc8:	tbnz	w1, #31, 7058 <PyNumber_FloorDivide@plt+0x2458>
    6fcc:	ldr	x1, [x0]
    6fd0:	add	x1, x1, #0x1
    6fd4:	str	x1, [x0]
    6fd8:	mov	w20, #0x2b                  	// #43
    6fdc:	ldr	w19, [x0, #32]
    6fe0:	ldr	w1, [x0, #28]
    6fe4:	str	w1, [sp, #40]
    6fe8:	ldr	x1, [x0]
    6fec:	sub	x1, x1, #0x1
    6ff0:	str	x1, [x0]
    6ff4:	cbz	x1, 7068 <PyNumber_FloorDivide@plt+0x2468>
    6ff8:	add	x2, sp, #0x28
    6ffc:	mov	w1, #0x3c                  	// #60
    7000:	ldr	w0, [sp, #40]
    7004:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    7008:	str	w0, [sp, #44]
    700c:	add	x2, sp, #0x2c
    7010:	mov	w1, #0x3c                  	// #60
    7014:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    7018:	mov	w2, w0
    701c:	cbnz	w19, 7070 <PyNumber_FloorDivide@plt+0x2470>
    7020:	ldr	w4, [sp, #40]
    7024:	cbnz	w4, 7094 <PyNumber_FloorDivide@plt+0x2494>
    7028:	ldr	w3, [sp, #44]
    702c:	mov	w1, w20
    7030:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7034:	add	x0, x0, #0x978
    7038:	bl	4700 <PyUnicode_FromFormat@plt>
    703c:	ldp	x19, x20, [sp, #16]
    7040:	ldp	x29, x30, [sp], #48
    7044:	ret
    7048:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    704c:	add	x0, x0, #0x938
    7050:	bl	4ad0 <PyUnicode_FromString@plt>
    7054:	b	7040 <PyNumber_FloorDivide@plt+0x2440>
    7058:	bl	5d9c <PyNumber_FloorDivide@plt+0x119c>
    705c:	cbz	x0, 70b0 <PyNumber_FloorDivide@plt+0x24b0>
    7060:	mov	w20, #0x2d                  	// #45
    7064:	b	6fdc <PyNumber_FloorDivide@plt+0x23dc>
    7068:	bl	4810 <_Py_Dealloc@plt>
    706c:	b	6ff8 <PyNumber_FloorDivide@plt+0x23f8>
    7070:	mov	w5, w19
    7074:	ldr	w4, [sp, #40]
    7078:	ldr	w3, [sp, #44]
    707c:	mov	w1, w20
    7080:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7084:	add	x0, x0, #0x940
    7088:	bl	4700 <PyUnicode_FromFormat@plt>
    708c:	ldp	x19, x20, [sp, #16]
    7090:	b	7040 <PyNumber_FloorDivide@plt+0x2440>
    7094:	ldr	w3, [sp, #44]
    7098:	mov	w1, w20
    709c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    70a0:	add	x0, x0, #0x960
    70a4:	bl	4700 <PyUnicode_FromFormat@plt>
    70a8:	ldp	x19, x20, [sp, #16]
    70ac:	b	7040 <PyNumber_FloorDivide@plt+0x2440>
    70b0:	ldp	x19, x20, [sp, #16]
    70b4:	b	7040 <PyNumber_FloorDivide@plt+0x2440>
    70b8:	stp	x29, x30, [sp, #-32]!
    70bc:	mov	x29, sp
    70c0:	str	x19, [sp, #16]
    70c4:	mov	x19, x0
    70c8:	mov	x0, x1
    70cc:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    70d0:	add	x1, x1, #0x988
    70d4:	bl	5b44 <PyNumber_FloorDivide@plt+0xf44>
    70d8:	cmn	w0, #0x1
    70dc:	b.eq	70f4 <PyNumber_FloorDivide@plt+0x24f4>  // b.none
    70e0:	mov	x0, x19
    70e4:	bl	6f78 <PyNumber_FloorDivide@plt+0x2378>
    70e8:	ldr	x19, [sp, #16]
    70ec:	ldp	x29, x30, [sp], #32
    70f0:	ret
    70f4:	mov	x0, #0x0                   	// #0
    70f8:	b	70e8 <PyNumber_FloorDivide@plt+0x24e8>
    70fc:	stp	x29, x30, [sp, #-32]!
    7100:	mov	x29, sp
    7104:	str	x19, [sp, #16]
    7108:	mov	x19, x0
    710c:	ldr	x0, [x0, #16]
    7110:	cbz	x0, 7128 <PyNumber_FloorDivide@plt+0x2528>
    7114:	str	xzr, [x19, #16]
    7118:	ldr	x1, [x0]
    711c:	sub	x1, x1, #0x1
    7120:	str	x1, [x0]
    7124:	cbz	x1, 7160 <PyNumber_FloorDivide@plt+0x2560>
    7128:	ldr	x0, [x19, #24]
    712c:	cbz	x0, 7144 <PyNumber_FloorDivide@plt+0x2544>
    7130:	str	xzr, [x19, #24]
    7134:	ldr	x1, [x0]
    7138:	sub	x1, x1, #0x1
    713c:	str	x1, [x0]
    7140:	cbz	x1, 7168 <PyNumber_FloorDivide@plt+0x2568>
    7144:	ldr	x0, [x19, #8]
    7148:	ldr	x1, [x0, #320]
    714c:	mov	x0, x19
    7150:	blr	x1
    7154:	ldr	x19, [sp, #16]
    7158:	ldp	x29, x30, [sp], #32
    715c:	ret
    7160:	bl	4810 <_Py_Dealloc@plt>
    7164:	b	7128 <PyNumber_FloorDivide@plt+0x2528>
    7168:	bl	4810 <_Py_Dealloc@plt>
    716c:	b	7144 <PyNumber_FloorDivide@plt+0x2544>
    7170:	stp	x29, x30, [sp, #-32]!
    7174:	mov	x29, sp
    7178:	stp	x19, x20, [sp, #16]
    717c:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    7180:	ldr	x4, [x4, #4024]
    7184:	cmp	x0, x4
    7188:	b.eq	7234 <PyNumber_FloorDivide@plt+0x2634>  // b.none
    718c:	mov	x20, x1
    7190:	mov	x3, x2
    7194:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    7198:	add	x2, x2, #0x990
    719c:	bl	4780 <PyObject_CallMethod@plt>
    71a0:	mov	x19, x0
    71a4:	cmp	x0, #0x0
    71a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    71ac:	ldr	x0, [x0, #4024]
    71b0:	ccmp	x19, x0, #0x4, ne  // ne = any
    71b4:	b.eq	7244 <PyNumber_FloorDivide@plt+0x2644>  // b.none
    71b8:	ldr	x0, [x19, #8]
    71bc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    71c0:	add	x1, x1, #0x298
    71c4:	add	x1, x1, #0x4e0
    71c8:	cmp	x0, x1
    71cc:	b.eq	71e4 <PyNumber_FloorDivide@plt+0x25e4>  // b.none
    71d0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    71d4:	add	x1, x1, #0x298
    71d8:	add	x1, x1, #0x4e0
    71dc:	bl	4b30 <PyType_IsSubtype@plt>
    71e0:	cbz	w0, 7270 <PyNumber_FloorDivide@plt+0x2670>
    71e4:	ldr	x1, [x19, #24]
    71e8:	mov	x0, #0xffffffff            	// #4294967295
    71ec:	cmp	x1, x0
    71f0:	b.eq	7254 <PyNumber_FloorDivide@plt+0x2654>  // b.none
    71f4:	ldr	w0, [x19, #24]
    71f8:	add	w0, w0, #0x1
    71fc:	cmp	w0, #0x1
    7200:	b.ls	7244 <PyNumber_FloorDivide@plt+0x2644>  // b.plast
    7204:	ldr	x0, [x19]
    7208:	sub	x0, x0, #0x1
    720c:	str	x0, [x19]
    7210:	cbz	x0, 7264 <PyNumber_FloorDivide@plt+0x2664>
    7214:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7218:	add	x1, x1, #0x998
    721c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7220:	ldr	x0, [x0, #3968]
    7224:	ldr	x0, [x0]
    7228:	bl	4b60 <PyErr_Format@plt>
    722c:	mov	x19, #0x0                   	// #0
    7230:	b	7244 <PyNumber_FloorDivide@plt+0x2644>
    7234:	ldr	x2, [x4]
    7238:	add	x2, x2, #0x1
    723c:	str	x2, [x4]
    7240:	mov	x19, x0
    7244:	mov	x0, x19
    7248:	ldp	x19, x20, [sp, #16]
    724c:	ldp	x29, x30, [sp], #32
    7250:	ret
    7254:	ldr	w0, [x19, #32]
    7258:	cmp	w0, #0x0
    725c:	b.gt	71f4 <PyNumber_FloorDivide@plt+0x25f4>
    7260:	b	7204 <PyNumber_FloorDivide@plt+0x2604>
    7264:	mov	x0, x19
    7268:	bl	4810 <_Py_Dealloc@plt>
    726c:	b	7214 <PyNumber_FloorDivide@plt+0x2614>
    7270:	ldr	x0, [x19, #8]
    7274:	ldr	x3, [x0, #24]
    7278:	mov	x2, x20
    727c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7280:	add	x1, x1, #0x9f8
    7284:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7288:	ldr	x0, [x0, #3976]
    728c:	ldr	x0, [x0]
    7290:	bl	4b60 <PyErr_Format@plt>
    7294:	ldr	x0, [x19]
    7298:	sub	x0, x0, #0x1
    729c:	str	x0, [x19]
    72a0:	cbz	x0, 72ac <PyNumber_FloorDivide@plt+0x26ac>
    72a4:	mov	x19, #0x0                   	// #0
    72a8:	b	7244 <PyNumber_FloorDivide@plt+0x2644>
    72ac:	mov	x0, x19
    72b0:	bl	4810 <_Py_Dealloc@plt>
    72b4:	mov	x19, #0x0                   	// #0
    72b8:	b	7244 <PyNumber_FloorDivide@plt+0x2644>
    72bc:	stp	x29, x30, [sp, #-16]!
    72c0:	mov	x29, sp
    72c4:	mov	x2, x0
    72c8:	ldrb	w0, [x0, #24]
    72cc:	cbz	w0, 72e8 <PyNumber_FloorDivide@plt+0x26e8>
    72d0:	ldr	x0, [x2, #40]
    72d4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    72d8:	add	x1, x1, #0x6c0
    72dc:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    72e0:	ldp	x29, x30, [sp], #16
    72e4:	ret
    72e8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    72ec:	ldr	x0, [x0, #4024]
    72f0:	b	72d4 <PyNumber_FloorDivide@plt+0x26d4>
    72f4:	stp	x29, x30, [sp, #-16]!
    72f8:	mov	x29, sp
    72fc:	mov	x2, x0
    7300:	ldrb	w0, [x0, #24]
    7304:	cbz	w0, 7320 <PyNumber_FloorDivide@plt+0x2720>
    7308:	ldr	x0, [x2, #40]
    730c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7310:	add	x1, x1, #0x6b8
    7314:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    7318:	ldp	x29, x30, [sp], #16
    731c:	ret
    7320:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7324:	ldr	x0, [x0, #4024]
    7328:	b	730c <PyNumber_FloorDivide@plt+0x270c>
    732c:	stp	x29, x30, [sp, #-32]!
    7330:	mov	x29, sp
    7334:	str	x19, [sp, #16]
    7338:	mov	x19, x0
    733c:	ldrb	w0, [x0, #24]
    7340:	cbz	w0, 735c <PyNumber_FloorDivide@plt+0x275c>
    7344:	ldr	x0, [x19, #32]
    7348:	cbz	x0, 735c <PyNumber_FloorDivide@plt+0x275c>
    734c:	ldr	x1, [x0]
    7350:	sub	x1, x1, #0x1
    7354:	str	x1, [x0]
    7358:	cbz	x1, 7378 <PyNumber_FloorDivide@plt+0x2778>
    735c:	ldr	x0, [x19, #8]
    7360:	ldr	x1, [x0, #320]
    7364:	mov	x0, x19
    7368:	blr	x1
    736c:	ldr	x19, [sp, #16]
    7370:	ldp	x29, x30, [sp], #32
    7374:	ret
    7378:	bl	4810 <_Py_Dealloc@plt>
    737c:	b	735c <PyNumber_FloorDivide@plt+0x275c>
    7380:	stp	x29, x30, [sp, #-32]!
    7384:	mov	x29, sp
    7388:	str	x19, [sp, #16]
    738c:	mov	x19, x0
    7390:	ldrb	w0, [x0, #24]
    7394:	cbz	w0, 73b0 <PyNumber_FloorDivide@plt+0x27b0>
    7398:	ldr	x0, [x19, #40]
    739c:	cbz	x0, 73b0 <PyNumber_FloorDivide@plt+0x27b0>
    73a0:	ldr	x1, [x0]
    73a4:	sub	x1, x1, #0x1
    73a8:	str	x1, [x0]
    73ac:	cbz	x1, 73cc <PyNumber_FloorDivide@plt+0x27cc>
    73b0:	ldr	x0, [x19, #8]
    73b4:	ldr	x1, [x0, #320]
    73b8:	mov	x0, x19
    73bc:	blr	x1
    73c0:	ldr	x19, [sp, #16]
    73c4:	ldp	x29, x30, [sp], #32
    73c8:	ret
    73cc:	bl	4810 <_Py_Dealloc@plt>
    73d0:	b	73b0 <PyNumber_FloorDivide@plt+0x27b0>
    73d4:	sub	sp, sp, #0x60
    73d8:	stp	x29, x30, [sp, #16]
    73dc:	add	x29, sp, #0x10
    73e0:	stp	x19, x20, [sp, #32]
    73e4:	stp	x21, x22, [sp, #48]
    73e8:	mov	x21, x0
    73ec:	mov	x19, x1
    73f0:	mov	x20, x2
    73f4:	str	wzr, [sp, #92]
    73f8:	str	wzr, [sp, #88]
    73fc:	str	wzr, [sp, #84]
    7400:	str	wzr, [sp, #80]
    7404:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    7408:	ldr	x1, [x1, #4024]
    740c:	str	x1, [sp, #72]
    7410:	str	wzr, [sp, #68]
    7414:	ldr	x0, [x19, #16]
    7418:	sub	x1, x0, #0x1
    741c:	cmp	x1, #0x1
    7420:	b.hi	7454 <PyNumber_FloorDivide@plt+0x2854>  // b.pmore
    7424:	ldr	x22, [x19, #24]
    7428:	cmp	x0, #0x2
    742c:	b.eq	74d8 <PyNumber_FloorDivide@plt+0x28d8>  // b.none
    7430:	ldr	x0, [x22, #8]
    7434:	ldr	x0, [x0, #168]
    7438:	tbz	w0, #27, 750c <PyNumber_FloorDivide@plt+0x290c>
    743c:	ldr	x0, [x22, #16]
    7440:	cmp	x0, #0x6
    7444:	b.eq	74e4 <PyNumber_FloorDivide@plt+0x28e4>  // b.none
    7448:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    744c:	ldr	x0, [x0, #4024]
    7450:	str	x0, [sp, #72]
    7454:	add	x0, sp, #0x44
    7458:	str	x0, [sp, #8]
    745c:	add	x0, sp, #0x48
    7460:	str	x0, [sp]
    7464:	add	x7, sp, #0x50
    7468:	add	x6, sp, #0x54
    746c:	add	x5, sp, #0x58
    7470:	add	x4, sp, #0x5c
    7474:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    7478:	add	x3, x3, #0xab8
    747c:	add	x3, x3, #0x200
    7480:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    7484:	add	x2, x2, #0xaa0
    7488:	mov	x1, x20
    748c:	mov	x0, x19
    7490:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    7494:	mov	x19, #0x0                   	// #0
    7498:	cbz	w0, 74c0 <PyNumber_FloorDivide@plt+0x28c0>
    749c:	mov	x6, x21
    74a0:	ldr	w5, [sp, #68]
    74a4:	ldr	x4, [sp, #72]
    74a8:	ldr	w3, [sp, #80]
    74ac:	ldr	w2, [sp, #84]
    74b0:	ldr	w1, [sp, #88]
    74b4:	ldr	w0, [sp, #92]
    74b8:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    74bc:	mov	x19, x0
    74c0:	mov	x0, x19
    74c4:	ldp	x19, x20, [sp, #32]
    74c8:	ldp	x21, x22, [sp, #48]
    74cc:	ldp	x29, x30, [sp, #16]
    74d0:	add	sp, sp, #0x60
    74d4:	ret
    74d8:	ldr	x0, [x19, #32]
    74dc:	str	x0, [sp, #72]
    74e0:	b	7430 <PyNumber_FloorDivide@plt+0x2830>
    74e4:	ldrb	w0, [x22, #32]
    74e8:	and	w0, w0, #0x7f
    74ec:	cmp	w0, #0x17
    74f0:	b.hi	7448 <PyNumber_FloorDivide@plt+0x2848>  // b.pmore
    74f4:	ldr	x2, [sp, #72]
    74f8:	mov	x1, x22
    74fc:	mov	x0, x21
    7500:	bl	6ad4 <PyNumber_FloorDivide@plt+0x1ed4>
    7504:	mov	x19, x0
    7508:	b	74c0 <PyNumber_FloorDivide@plt+0x28c0>
    750c:	tbz	w0, #28, 7448 <PyNumber_FloorDivide@plt+0x2848>
    7510:	ldrsb	w0, [x22, #32]
    7514:	tbz	w0, #31, 75a4 <PyNumber_FloorDivide@plt+0x29a4>
    7518:	ldr	x0, [x22, #16]
    751c:	cmp	x0, #0x6
    7520:	b.ne	7448 <PyNumber_FloorDivide@plt+0x2848>  // b.any
    7524:	ldrb	w0, [x22, #32]
    7528:	and	w1, w0, #0x1c
    752c:	cmp	w1, #0x4
    7530:	b.eq	75b8 <PyNumber_FloorDivide@plt+0x29b8>  // b.none
    7534:	cmp	w1, #0x8
    7538:	b.eq	75e8 <PyNumber_FloorDivide@plt+0x29e8>  // b.none
    753c:	tbz	w0, #5, 7618 <PyNumber_FloorDivide@plt+0x2a18>
    7540:	add	x2, x22, #0x30
    7544:	add	x1, x22, #0x48
    7548:	tst	x0, #0x40
    754c:	csel	x0, x1, x2, eq  // eq = none
    7550:	ldr	w0, [x0]
    7554:	and	w0, w0, #0x7f
    7558:	cmp	w0, #0x17
    755c:	cset	w0, ls  // ls = plast
    7560:	cbz	w0, 7448 <PyNumber_FloorDivide@plt+0x2848>
    7564:	mov	x0, x22
    7568:	bl	4960 <PyUnicode_AsLatin1String@plt>
    756c:	mov	x20, x0
    7570:	cbz	x0, 7620 <PyNumber_FloorDivide@plt+0x2a20>
    7574:	ldr	x2, [sp, #72]
    7578:	mov	x1, x0
    757c:	mov	x0, x21
    7580:	bl	6ad4 <PyNumber_FloorDivide@plt+0x1ed4>
    7584:	mov	x19, x0
    7588:	ldr	x0, [x20]
    758c:	sub	x0, x0, #0x1
    7590:	str	x0, [x20]
    7594:	cbnz	x0, 74c0 <PyNumber_FloorDivide@plt+0x28c0>
    7598:	mov	x0, x20
    759c:	bl	4810 <_Py_Dealloc@plt>
    75a0:	b	74c0 <PyNumber_FloorDivide@plt+0x28c0>
    75a4:	mov	x0, x22
    75a8:	bl	4710 <_PyUnicode_Ready@plt>
    75ac:	cbz	w0, 7518 <PyNumber_FloorDivide@plt+0x2918>
    75b0:	mov	x19, #0x0                   	// #0
    75b4:	b	74c0 <PyNumber_FloorDivide@plt+0x28c0>
    75b8:	tbz	w0, #5, 75e0 <PyNumber_FloorDivide@plt+0x29e0>
    75bc:	add	x2, x22, #0x30
    75c0:	add	x1, x22, #0x48
    75c4:	tst	x0, #0x40
    75c8:	csel	x0, x1, x2, eq  // eq = none
    75cc:	ldrb	w0, [x0]
    75d0:	and	w0, w0, #0x7f
    75d4:	cmp	w0, #0x17
    75d8:	cset	w0, ls  // ls = plast
    75dc:	b	7560 <PyNumber_FloorDivide@plt+0x2960>
    75e0:	ldr	x0, [x22, #72]
    75e4:	b	75cc <PyNumber_FloorDivide@plt+0x29cc>
    75e8:	tbz	w0, #5, 7610 <PyNumber_FloorDivide@plt+0x2a10>
    75ec:	add	x2, x22, #0x30
    75f0:	add	x1, x22, #0x48
    75f4:	tst	x0, #0x40
    75f8:	csel	x0, x1, x2, eq  // eq = none
    75fc:	ldrh	w0, [x0]
    7600:	and	w0, w0, #0x7f
    7604:	cmp	w0, #0x17
    7608:	cset	w0, ls  // ls = plast
    760c:	b	7560 <PyNumber_FloorDivide@plt+0x2960>
    7610:	ldr	x0, [x22, #72]
    7614:	b	75fc <PyNumber_FloorDivide@plt+0x29fc>
    7618:	ldr	x0, [x22, #72]
    761c:	b	7550 <PyNumber_FloorDivide@plt+0x2950>
    7620:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7624:	ldr	x0, [x0, #4032]
    7628:	ldr	x0, [x0]
    762c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    7630:	mov	x19, x20
    7634:	cbz	w0, 74c0 <PyNumber_FloorDivide@plt+0x28c0>
    7638:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    763c:	add	x1, x1, #0xa30
    7640:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7644:	ldr	x0, [x0, #3968]
    7648:	ldr	x0, [x0]
    764c:	bl	4880 <PyErr_SetString@plt>
    7650:	b	74c0 <PyNumber_FloorDivide@plt+0x28c0>
    7654:	stp	x29, x30, [sp, #-48]!
    7658:	mov	x29, sp
    765c:	stp	x19, x20, [sp, #16]
    7660:	str	x21, [sp, #32]
    7664:	mov	x20, x0
    7668:	mov	w21, w1
    766c:	mov	x1, #0x6                   	// #6
    7670:	add	x0, x0, #0x19
    7674:	bl	4800 <PyBytes_FromStringAndSize@plt>
    7678:	mov	x19, x0
    767c:	cbz	x0, 770c <PyNumber_FloorDivide@plt+0x2b0c>
    7680:	cmp	w21, #0x3
    7684:	b.le	769c <PyNumber_FloorDivide@plt+0x2a9c>
    7688:	ldrb	w0, [x20, #31]
    768c:	cbz	w0, 769c <PyNumber_FloorDivide@plt+0x2a9c>
    7690:	ldrb	w0, [x19, #32]
    7694:	orr	w0, w0, #0xffffff80
    7698:	strb	w0, [x19, #32]
    769c:	ldrb	w0, [x20, #24]
    76a0:	cbz	w0, 76cc <PyNumber_FloorDivide@plt+0x2acc>
    76a4:	ldr	x2, [x20, #32]
    76a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    76ac:	ldr	x0, [x0, #4024]
    76b0:	cmp	x2, x0
    76b4:	b.eq	76cc <PyNumber_FloorDivide@plt+0x2acc>  // b.none
    76b8:	mov	x1, x19
    76bc:	mov	x0, #0x2                   	// #2
    76c0:	bl	4bd0 <PyTuple_Pack@plt>
    76c4:	mov	x20, x0
    76c8:	b	76dc <PyNumber_FloorDivide@plt+0x2adc>
    76cc:	mov	x1, x19
    76d0:	mov	x0, #0x1                   	// #1
    76d4:	bl	4bd0 <PyTuple_Pack@plt>
    76d8:	mov	x20, x0
    76dc:	ldr	x1, [x19]
    76e0:	sub	x1, x1, #0x1
    76e4:	str	x1, [x19]
    76e8:	cbz	x1, 7700 <PyNumber_FloorDivide@plt+0x2b00>
    76ec:	mov	x0, x20
    76f0:	ldp	x19, x20, [sp, #16]
    76f4:	ldr	x21, [sp, #32]
    76f8:	ldp	x29, x30, [sp], #48
    76fc:	ret
    7700:	mov	x0, x19
    7704:	bl	4810 <_Py_Dealloc@plt>
    7708:	b	76ec <PyNumber_FloorDivide@plt+0x2aec>
    770c:	mov	x20, x0
    7710:	b	76ec <PyNumber_FloorDivide@plt+0x2aec>
    7714:	stp	x29, x30, [sp, #-32]!
    7718:	mov	x29, sp
    771c:	str	x19, [sp, #16]
    7720:	ldr	x19, [x0, #8]
    7724:	mov	w1, #0x2                   	// #2
    7728:	bl	7654 <PyNumber_FloorDivide@plt+0x2a54>
    772c:	mov	x2, x0
    7730:	mov	x1, x19
    7734:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7738:	add	x0, x0, #0x900
    773c:	bl	49a0 <Py_BuildValue@plt>
    7740:	ldr	x19, [sp, #16]
    7744:	ldp	x29, x30, [sp], #32
    7748:	ret
    774c:	stp	x29, x30, [sp, #-48]!
    7750:	mov	x29, sp
    7754:	stp	x19, x20, [sp, #16]
    7758:	mov	x19, x0
    775c:	mov	x0, x1
    7760:	add	x2, sp, #0x2c
    7764:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7768:	add	x1, x1, #0xab0
    776c:	bl	4a30 <PyArg_ParseTuple@plt>
    7770:	cbz	w0, 77a4 <PyNumber_FloorDivide@plt+0x2ba4>
    7774:	ldr	x20, [x19, #8]
    7778:	ldr	w1, [sp, #44]
    777c:	mov	x0, x19
    7780:	bl	7654 <PyNumber_FloorDivide@plt+0x2a54>
    7784:	mov	x2, x0
    7788:	mov	x1, x20
    778c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7790:	add	x0, x0, #0x900
    7794:	bl	49a0 <Py_BuildValue@plt>
    7798:	ldp	x19, x20, [sp, #16]
    779c:	ldp	x29, x30, [sp], #48
    77a0:	ret
    77a4:	mov	x0, #0x0                   	// #0
    77a8:	b	7798 <PyNumber_FloorDivide@plt+0x2b98>
    77ac:	sub	sp, sp, #0x50
    77b0:	stp	x29, x30, [sp, #16]
    77b4:	add	x29, sp, #0x10
    77b8:	stp	x19, x20, [sp, #32]
    77bc:	mov	x19, x0
    77c0:	mov	x0, x1
    77c4:	mov	x1, x2
    77c8:	ldrb	w2, [x19, #25]
    77cc:	str	w2, [sp, #76]
    77d0:	ldrb	w2, [x19, #26]
    77d4:	str	w2, [sp, #72]
    77d8:	ldrb	w2, [x19, #27]
    77dc:	str	w2, [sp, #68]
    77e0:	ldrb	w3, [x19, #28]
    77e4:	ldrb	w2, [x19, #29]
    77e8:	lsl	w2, w2, #8
    77ec:	orr	w3, w2, w3, lsl #16
    77f0:	ldrb	w2, [x19, #30]
    77f4:	orr	w3, w3, w2
    77f8:	str	w3, [sp, #64]
    77fc:	ldrb	w2, [x19, #24]
    7800:	cbz	w2, 78c8 <PyNumber_FloorDivide@plt+0x2cc8>
    7804:	ldr	x2, [x19, #32]
    7808:	str	x2, [sp, #56]
    780c:	ldrb	w2, [x19, #31]
    7810:	str	w2, [sp, #52]
    7814:	add	x2, sp, #0x34
    7818:	str	x2, [sp, #8]
    781c:	add	x2, sp, #0x38
    7820:	str	x2, [sp]
    7824:	add	x7, sp, #0x40
    7828:	add	x6, sp, #0x44
    782c:	add	x5, sp, #0x48
    7830:	add	x4, sp, #0x4c
    7834:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    7838:	add	x3, x3, #0xab8
    783c:	add	x3, x3, #0x200
    7840:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    7844:	add	x2, x2, #0xac0
    7848:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    784c:	cbz	w0, 7900 <PyNumber_FloorDivide@plt+0x2d00>
    7850:	ldr	w0, [sp, #52]
    7854:	cmp	w0, #0x1
    7858:	b.hi	78d4 <PyNumber_FloorDivide@plt+0x2cd4>  // b.pmore
    785c:	ldr	x5, [sp, #56]
    7860:	ldr	w4, [sp, #64]
    7864:	ldr	w3, [sp, #68]
    7868:	ldr	w2, [sp, #72]
    786c:	ldr	w1, [sp, #76]
    7870:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7874:	add	x0, x0, #0xad8
    7878:	bl	49a0 <Py_BuildValue@plt>
    787c:	mov	x20, x0
    7880:	cbz	x0, 7908 <PyNumber_FloorDivide@plt+0x2d08>
    7884:	mov	x2, #0x0                   	// #0
    7888:	mov	x1, x0
    788c:	ldr	x0, [x19, #8]
    7890:	bl	73d4 <PyNumber_FloorDivide@plt+0x27d4>
    7894:	mov	x19, x0
    7898:	cbz	x0, 78a4 <PyNumber_FloorDivide@plt+0x2ca4>
    789c:	ldr	w0, [sp, #52]
    78a0:	strb	w0, [x19, #31]
    78a4:	ldr	x0, [x20]
    78a8:	sub	x0, x0, #0x1
    78ac:	str	x0, [x20]
    78b0:	cbz	x0, 78f4 <PyNumber_FloorDivide@plt+0x2cf4>
    78b4:	mov	x0, x19
    78b8:	ldp	x19, x20, [sp, #32]
    78bc:	ldp	x29, x30, [sp, #16]
    78c0:	add	sp, sp, #0x50
    78c4:	ret
    78c8:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    78cc:	ldr	x2, [x2, #4024]
    78d0:	b	7808 <PyNumber_FloorDivide@plt+0x2c08>
    78d4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    78d8:	add	x1, x1, #0x7e0
    78dc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    78e0:	ldr	x0, [x0, #3968]
    78e4:	ldr	x0, [x0]
    78e8:	bl	4880 <PyErr_SetString@plt>
    78ec:	mov	x19, #0x0                   	// #0
    78f0:	b	78b4 <PyNumber_FloorDivide@plt+0x2cb4>
    78f4:	mov	x0, x20
    78f8:	bl	4810 <_Py_Dealloc@plt>
    78fc:	b	78b4 <PyNumber_FloorDivide@plt+0x2cb4>
    7900:	mov	x19, #0x0                   	// #0
    7904:	b	78b4 <PyNumber_FloorDivide@plt+0x2cb4>
    7908:	mov	x19, x0
    790c:	b	78b4 <PyNumber_FloorDivide@plt+0x2cb4>
    7910:	stp	x29, x30, [sp, #-32]!
    7914:	mov	x29, sp
    7918:	str	x19, [sp, #16]
    791c:	adrp	x3, 24000 <PyInit__datetime@@Base+0x155b0>
    7920:	ldr	x3, [x3, #4024]
    7924:	cmp	x0, x3
    7928:	b.eq	7978 <PyNumber_FloorDivide@plt+0x2d78>  // b.none
    792c:	mov	x2, x1
    7930:	mov	x3, #0x0                   	// #0
    7934:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    7938:	add	x1, x1, #0xab8
    793c:	add	x1, x1, #0x238
    7940:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    7944:	mov	x19, x0
    7948:	cmp	x0, #0x0
    794c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7950:	ldr	x0, [x0, #4024]
    7954:	ccmp	x19, x0, #0x4, ne  // ne = any
    7958:	b.eq	7968 <PyNumber_FloorDivide@plt+0x2d68>  // b.none
    795c:	ldr	x0, [x19, #8]
    7960:	ldr	x1, [x0, #168]
    7964:	tbz	w1, #28, 798c <PyNumber_FloorDivide@plt+0x2d8c>
    7968:	mov	x0, x19
    796c:	ldr	x19, [sp, #16]
    7970:	ldp	x29, x30, [sp], #32
    7974:	ret
    7978:	ldr	x2, [x3]
    797c:	add	x2, x2, #0x1
    7980:	str	x2, [x3]
    7984:	mov	x19, x0
    7988:	b	7968 <PyNumber_FloorDivide@plt+0x2d68>
    798c:	ldr	x2, [x0, #24]
    7990:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7994:	add	x1, x1, #0xae0
    7998:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    799c:	ldr	x0, [x0, #3976]
    79a0:	ldr	x0, [x0]
    79a4:	bl	4b60 <PyErr_Format@plt>
    79a8:	ldr	x0, [x19]
    79ac:	sub	x0, x0, #0x1
    79b0:	str	x0, [x19]
    79b4:	cbz	x0, 79c0 <PyNumber_FloorDivide@plt+0x2dc0>
    79b8:	mov	x19, #0x0                   	// #0
    79bc:	b	7968 <PyNumber_FloorDivide@plt+0x2d68>
    79c0:	mov	x0, x19
    79c4:	bl	4810 <_Py_Dealloc@plt>
    79c8:	mov	x19, #0x0                   	// #0
    79cc:	b	7968 <PyNumber_FloorDivide@plt+0x2d68>
    79d0:	stp	x29, x30, [sp, #-16]!
    79d4:	mov	x29, sp
    79d8:	ldrb	w1, [x0, #24]
    79dc:	cbz	w1, 79f8 <PyNumber_FloorDivide@plt+0x2df8>
    79e0:	ldr	x0, [x0, #32]
    79e4:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    79e8:	ldr	x1, [x1, #4024]
    79ec:	bl	7910 <PyNumber_FloorDivide@plt+0x2d10>
    79f0:	ldp	x29, x30, [sp], #16
    79f4:	ret
    79f8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    79fc:	ldr	x0, [x0, #4024]
    7a00:	b	79e4 <PyNumber_FloorDivide@plt+0x2de4>
    7a04:	stp	x29, x30, [sp, #-16]!
    7a08:	mov	x29, sp
    7a0c:	mov	x1, x0
    7a10:	ldrb	w0, [x0, #24]
    7a14:	cbz	w0, 7a28 <PyNumber_FloorDivide@plt+0x2e28>
    7a18:	ldr	x0, [x1, #40]
    7a1c:	bl	7910 <PyNumber_FloorDivide@plt+0x2d10>
    7a20:	ldp	x29, x30, [sp], #16
    7a24:	ret
    7a28:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7a2c:	ldr	x0, [x0, #4024]
    7a30:	b	7a1c <PyNumber_FloorDivide@plt+0x2e1c>
    7a34:	stp	x29, x30, [sp, #-48]!
    7a38:	mov	x29, sp
    7a3c:	stp	x19, x20, [sp, #16]
    7a40:	mov	x19, x0
    7a44:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7a48:	ldr	x0, [x0, #4024]
    7a4c:	cmp	x1, x0
    7a50:	b.eq	7ab4 <PyNumber_FloorDivide@plt+0x2eb4>  // b.none
    7a54:	str	x21, [sp, #32]
    7a58:	mov	x21, x1
    7a5c:	ldr	x2, [x19, #16]
    7a60:	sub	x2, x2, #0x1
    7a64:	mov	x1, #0x0                   	// #0
    7a68:	mov	x0, x19
    7a6c:	bl	4bf0 <PyUnicode_Substring@plt>
    7a70:	mov	x20, x0
    7a74:	ldr	x0, [x19]
    7a78:	sub	x0, x0, #0x1
    7a7c:	str	x0, [x19]
    7a80:	cbz	x0, 7ac4 <PyNumber_FloorDivide@plt+0x2ec4>
    7a84:	cbz	x20, 7ae0 <PyNumber_FloorDivide@plt+0x2ee0>
    7a88:	mov	x2, x21
    7a8c:	mov	x1, x20
    7a90:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7a94:	add	x0, x0, #0xb18
    7a98:	bl	4700 <PyUnicode_FromFormat@plt>
    7a9c:	mov	x19, x0
    7aa0:	ldr	x0, [x20]
    7aa4:	sub	x0, x0, #0x1
    7aa8:	str	x0, [x20]
    7aac:	cbz	x0, 7ad0 <PyNumber_FloorDivide@plt+0x2ed0>
    7ab0:	ldr	x21, [sp, #32]
    7ab4:	mov	x0, x19
    7ab8:	ldp	x19, x20, [sp, #16]
    7abc:	ldp	x29, x30, [sp], #48
    7ac0:	ret
    7ac4:	mov	x0, x19
    7ac8:	bl	4810 <_Py_Dealloc@plt>
    7acc:	b	7a84 <PyNumber_FloorDivide@plt+0x2e84>
    7ad0:	mov	x0, x20
    7ad4:	bl	4810 <_Py_Dealloc@plt>
    7ad8:	ldr	x21, [sp, #32]
    7adc:	b	7ab4 <PyNumber_FloorDivide@plt+0x2eb4>
    7ae0:	mov	x19, x20
    7ae4:	ldr	x21, [sp, #32]
    7ae8:	b	7ab4 <PyNumber_FloorDivide@plt+0x2eb4>
    7aec:	stp	x29, x30, [sp, #-48]!
    7af0:	mov	x29, sp
    7af4:	stp	x19, x20, [sp, #16]
    7af8:	mov	x19, x0
    7afc:	cbnz	w1, 7b10 <PyNumber_FloorDivide@plt+0x2f10>
    7b00:	mov	x0, x19
    7b04:	ldp	x19, x20, [sp, #16]
    7b08:	ldp	x29, x30, [sp], #48
    7b0c:	ret
    7b10:	str	x21, [sp, #32]
    7b14:	mov	w20, w1
    7b18:	ldr	x2, [x0, #16]
    7b1c:	sub	x2, x2, #0x1
    7b20:	mov	x1, #0x0                   	// #0
    7b24:	bl	4bf0 <PyUnicode_Substring@plt>
    7b28:	mov	x21, x0
    7b2c:	ldr	x0, [x19]
    7b30:	sub	x0, x0, #0x1
    7b34:	str	x0, [x19]
    7b38:	cbz	x0, 7b70 <PyNumber_FloorDivide@plt+0x2f70>
    7b3c:	cbz	x21, 7b8c <PyNumber_FloorDivide@plt+0x2f8c>
    7b40:	mov	w2, w20
    7b44:	mov	x1, x21
    7b48:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7b4c:	add	x0, x0, #0xb28
    7b50:	bl	4700 <PyUnicode_FromFormat@plt>
    7b54:	mov	x19, x0
    7b58:	ldr	x0, [x21]
    7b5c:	sub	x0, x0, #0x1
    7b60:	str	x0, [x21]
    7b64:	cbz	x0, 7b7c <PyNumber_FloorDivide@plt+0x2f7c>
    7b68:	ldr	x21, [sp, #32]
    7b6c:	b	7b00 <PyNumber_FloorDivide@plt+0x2f00>
    7b70:	mov	x0, x19
    7b74:	bl	4810 <_Py_Dealloc@plt>
    7b78:	b	7b3c <PyNumber_FloorDivide@plt+0x2f3c>
    7b7c:	mov	x0, x21
    7b80:	bl	4810 <_Py_Dealloc@plt>
    7b84:	ldr	x21, [sp, #32]
    7b88:	b	7b00 <PyNumber_FloorDivide@plt+0x2f00>
    7b8c:	mov	x19, x21
    7b90:	ldr	x21, [sp, #32]
    7b94:	b	7b00 <PyNumber_FloorDivide@plt+0x2f00>
    7b98:	stp	x29, x30, [sp, #-32]!
    7b9c:	mov	x29, sp
    7ba0:	stp	x19, x20, [sp, #16]
    7ba4:	mov	x19, x0
    7ba8:	ldr	x0, [x0, #8]
    7bac:	ldr	x1, [x0, #24]
    7bb0:	ldrb	w2, [x19, #25]
    7bb4:	ldrb	w3, [x19, #26]
    7bb8:	ldrb	w4, [x19, #27]
    7bbc:	ldrb	w5, [x19, #28]
    7bc0:	ldrb	w0, [x19, #29]
    7bc4:	lsl	w0, w0, #8
    7bc8:	orr	w5, w0, w5, lsl #16
    7bcc:	ldrb	w0, [x19, #30]
    7bd0:	orr	w5, w5, w0
    7bd4:	ldrb	w20, [x19, #31]
    7bd8:	cbnz	w5, 7c10 <PyNumber_FloorDivide@plt+0x3010>
    7bdc:	cbz	w4, 7c20 <PyNumber_FloorDivide@plt+0x3020>
    7be0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7be4:	add	x0, x0, #0x8d0
    7be8:	bl	4700 <PyUnicode_FromFormat@plt>
    7bec:	cbz	x0, 7c04 <PyNumber_FloorDivide@plt+0x3004>
    7bf0:	ldrb	w1, [x19, #24]
    7bf4:	cbnz	w1, 7c30 <PyNumber_FloorDivide@plt+0x3030>
    7bf8:	cmp	x0, #0x0
    7bfc:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    7c00:	b.ne	7c3c <PyNumber_FloorDivide@plt+0x303c>  // b.any
    7c04:	ldp	x19, x20, [sp, #16]
    7c08:	ldp	x29, x30, [sp], #32
    7c0c:	ret
    7c10:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7c14:	add	x0, x0, #0xb38
    7c18:	bl	4700 <PyUnicode_FromFormat@plt>
    7c1c:	b	7bec <PyNumber_FloorDivide@plt+0x2fec>
    7c20:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7c24:	add	x0, x0, #0xb50
    7c28:	bl	4700 <PyUnicode_FromFormat@plt>
    7c2c:	b	7bec <PyNumber_FloorDivide@plt+0x2fec>
    7c30:	ldr	x1, [x19, #32]
    7c34:	bl	7a34 <PyNumber_FloorDivide@plt+0x2e34>
    7c38:	b	7bf8 <PyNumber_FloorDivide@plt+0x2ff8>
    7c3c:	mov	w1, w20
    7c40:	bl	7aec <PyNumber_FloorDivide@plt+0x2eec>
    7c44:	b	7c04 <PyNumber_FloorDivide@plt+0x3004>
    7c48:	sub	sp, sp, #0x30
    7c4c:	stp	x29, x30, [sp, #16]
    7c50:	add	x29, sp, #0x10
    7c54:	str	x19, [sp, #32]
    7c58:	mov	x19, x0
    7c5c:	ldr	x0, [x0, #8]
    7c60:	ldr	x1, [x0, #24]
    7c64:	ldrb	w0, [x19, #32]
    7c68:	ldrb	w2, [x19, #33]
    7c6c:	lsl	w2, w2, #8
    7c70:	orr	w0, w2, w0, lsl #16
    7c74:	ldrb	w2, [x19, #34]
    7c78:	orr	w0, w0, w2
    7c7c:	cbnz	w0, 7cd4 <PyNumber_FloorDivide@plt+0x30d4>
    7c80:	ldrb	w7, [x19, #31]
    7c84:	cbz	w7, 7d08 <PyNumber_FloorDivide@plt+0x3108>
    7c88:	ldrb	w2, [x19, #25]
    7c8c:	ldrb	w0, [x19, #26]
    7c90:	ldrb	w6, [x19, #30]
    7c94:	ldrb	w5, [x19, #29]
    7c98:	ldrb	w4, [x19, #28]
    7c9c:	ldrb	w3, [x19, #27]
    7ca0:	orr	w2, w0, w2, lsl #8
    7ca4:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7ca8:	add	x0, x0, #0xb80
    7cac:	bl	4700 <PyUnicode_FromFormat@plt>
    7cb0:	cbz	x0, 7cc4 <PyNumber_FloorDivide@plt+0x30c4>
    7cb4:	ldrb	w1, [x19, #35]
    7cb8:	cbnz	w1, 7d34 <PyNumber_FloorDivide@plt+0x3134>
    7cbc:	ldrb	w1, [x19, #24]
    7cc0:	cbnz	w1, 7d40 <PyNumber_FloorDivide@plt+0x3140>
    7cc4:	ldr	x19, [sp, #32]
    7cc8:	ldp	x29, x30, [sp, #16]
    7ccc:	add	sp, sp, #0x30
    7cd0:	ret
    7cd4:	ldrb	w8, [x19, #25]
    7cd8:	ldrb	w2, [x19, #26]
    7cdc:	str	w0, [sp]
    7ce0:	ldrb	w7, [x19, #31]
    7ce4:	ldrb	w6, [x19, #30]
    7ce8:	ldrb	w5, [x19, #29]
    7cec:	ldrb	w4, [x19, #28]
    7cf0:	ldrb	w3, [x19, #27]
    7cf4:	orr	w2, w2, w8, lsl #8
    7cf8:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7cfc:	add	x0, x0, #0xb60
    7d00:	bl	4700 <PyUnicode_FromFormat@plt>
    7d04:	b	7cb0 <PyNumber_FloorDivide@plt+0x30b0>
    7d08:	ldrb	w2, [x19, #25]
    7d0c:	ldrb	w0, [x19, #26]
    7d10:	ldrb	w6, [x19, #30]
    7d14:	ldrb	w5, [x19, #29]
    7d18:	ldrb	w4, [x19, #28]
    7d1c:	ldrb	w3, [x19, #27]
    7d20:	orr	w2, w0, w2, lsl #8
    7d24:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    7d28:	add	x0, x0, #0xba0
    7d2c:	bl	4700 <PyUnicode_FromFormat@plt>
    7d30:	b	7cb0 <PyNumber_FloorDivide@plt+0x30b0>
    7d34:	bl	7aec <PyNumber_FloorDivide@plt+0x2eec>
    7d38:	cbnz	x0, 7cbc <PyNumber_FloorDivide@plt+0x30bc>
    7d3c:	b	7cc4 <PyNumber_FloorDivide@plt+0x30c4>
    7d40:	ldr	x1, [x19, #40]
    7d44:	bl	7a34 <PyNumber_FloorDivide@plt+0x2e34>
    7d48:	b	7cc4 <PyNumber_FloorDivide@plt+0x30c4>
    7d4c:	stp	x29, x30, [sp, #-80]!
    7d50:	mov	x29, sp
    7d54:	stp	x19, x20, [sp, #16]
    7d58:	stp	x21, x22, [sp, #32]
    7d5c:	str	x23, [sp, #48]
    7d60:	mov	x23, x0
    7d64:	mov	x21, x1
    7d68:	mov	x19, x2
    7d6c:	mov	x20, x3
    7d70:	ldr	x0, [x2, #8]
    7d74:	ldr	x1, [x0, #168]
    7d78:	tbnz	w1, #24, 7dd0 <PyNumber_FloorDivide@plt+0x31d0>
    7d7c:	mov	x22, x4
    7d80:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    7d84:	ldr	x1, [x1, #3944]
    7d88:	cmp	x0, x1
    7d8c:	b.eq	7da0 <PyNumber_FloorDivide@plt+0x31a0>  // b.none
    7d90:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    7d94:	ldr	x1, [x1, #3944]
    7d98:	bl	4b30 <PyType_IsSubtype@plt>
    7d9c:	cbz	w0, 7f74 <PyNumber_FloorDivide@plt+0x3374>
    7da0:	str	d8, [sp, #56]
    7da4:	mov	x0, x19
    7da8:	bl	4a10 <PyFloat_AsDouble@plt>
    7dac:	fmov	d8, d0
    7db0:	fmov	d0, #-1.000000000000000000e+00
    7db4:	fcmp	d8, d0
    7db8:	b.ne	7e2c <PyNumber_FloorDivide@plt+0x322c>  // b.any
    7dbc:	bl	49b0 <PyErr_Occurred@plt>
    7dc0:	mov	x19, #0x0                   	// #0
    7dc4:	cbz	x0, 7e2c <PyNumber_FloorDivide@plt+0x322c>
    7dc8:	ldr	d8, [sp, #56]
    7dcc:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7dd0:	mov	x1, x3
    7dd4:	mov	x0, x2
    7dd8:	bl	4830 <PyNumber_Multiply@plt>
    7ddc:	mov	x20, x0
    7de0:	mov	x19, x0
    7de4:	cbz	x0, 7e08 <PyNumber_FloorDivide@plt+0x3208>
    7de8:	mov	x1, x0
    7dec:	mov	x0, x21
    7df0:	bl	47c0 <PyNumber_Add@plt>
    7df4:	mov	x19, x0
    7df8:	ldr	x0, [x20]
    7dfc:	sub	x0, x0, #0x1
    7e00:	str	x0, [x20]
    7e04:	cbz	x0, 7e20 <PyNumber_FloorDivide@plt+0x3220>
    7e08:	mov	x0, x19
    7e0c:	ldp	x19, x20, [sp, #16]
    7e10:	ldp	x21, x22, [sp, #32]
    7e14:	ldr	x23, [sp, #48]
    7e18:	ldp	x29, x30, [sp], #80
    7e1c:	ret
    7e20:	mov	x0, x20
    7e24:	bl	4810 <_Py_Dealloc@plt>
    7e28:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7e2c:	add	x0, sp, #0x48
    7e30:	fmov	d0, d8
    7e34:	bl	4a80 <modf@plt>
    7e38:	fmov	d8, d0
    7e3c:	ldr	d0, [sp, #72]
    7e40:	bl	4790 <PyLong_FromDouble@plt>
    7e44:	mov	x19, x0
    7e48:	cbz	x0, 7fa0 <PyNumber_FloorDivide@plt+0x33a0>
    7e4c:	mov	x1, x20
    7e50:	bl	4830 <PyNumber_Multiply@plt>
    7e54:	mov	x23, x0
    7e58:	ldr	x0, [x19]
    7e5c:	sub	x0, x0, #0x1
    7e60:	str	x0, [x19]
    7e64:	cbz	x0, 7ea4 <PyNumber_FloorDivide@plt+0x32a4>
    7e68:	mov	x19, x23
    7e6c:	cbz	x23, 7fa8 <PyNumber_FloorDivide@plt+0x33a8>
    7e70:	mov	x1, x23
    7e74:	mov	x0, x21
    7e78:	bl	47c0 <PyNumber_Add@plt>
    7e7c:	mov	x19, x0
    7e80:	ldr	x0, [x23]
    7e84:	sub	x0, x0, #0x1
    7e88:	str	x0, [x23]
    7e8c:	cbz	x0, 7eb0 <PyNumber_FloorDivide@plt+0x32b0>
    7e90:	cbz	x19, 7fb0 <PyNumber_FloorDivide@plt+0x33b0>
    7e94:	fcmp	d8, #0.0
    7e98:	b.ne	7ebc <PyNumber_FloorDivide@plt+0x32bc>  // b.any
    7e9c:	ldr	d8, [sp, #56]
    7ea0:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7ea4:	mov	x0, x19
    7ea8:	bl	4810 <_Py_Dealloc@plt>
    7eac:	b	7e68 <PyNumber_FloorDivide@plt+0x3268>
    7eb0:	mov	x0, x23
    7eb4:	bl	4810 <_Py_Dealloc@plt>
    7eb8:	b	7e90 <PyNumber_FloorDivide@plt+0x3290>
    7ebc:	mov	x0, x20
    7ec0:	bl	4a90 <PyLong_AsDouble@plt>
    7ec4:	add	x0, sp, #0x48
    7ec8:	fmul	d0, d8, d0
    7ecc:	bl	4a80 <modf@plt>
    7ed0:	fmov	d8, d0
    7ed4:	ldr	d0, [sp, #72]
    7ed8:	bl	4790 <PyLong_FromDouble@plt>
    7edc:	mov	x20, x0
    7ee0:	cbz	x0, 7f2c <PyNumber_FloorDivide@plt+0x332c>
    7ee4:	mov	x1, x0
    7ee8:	mov	x0, x19
    7eec:	bl	47c0 <PyNumber_Add@plt>
    7ef0:	mov	x21, x0
    7ef4:	ldr	x1, [x19]
    7ef8:	sub	x1, x1, #0x1
    7efc:	str	x1, [x19]
    7f00:	cbz	x1, 7f5c <PyNumber_FloorDivide@plt+0x335c>
    7f04:	ldr	x1, [x20]
    7f08:	sub	x1, x1, #0x1
    7f0c:	str	x1, [x20]
    7f10:	cbz	x1, 7f68 <PyNumber_FloorDivide@plt+0x3368>
    7f14:	ldr	d0, [x22]
    7f18:	fadd	d0, d0, d8
    7f1c:	str	d0, [x22]
    7f20:	mov	x19, x21
    7f24:	ldr	d8, [sp, #56]
    7f28:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7f2c:	ldr	x0, [x19]
    7f30:	sub	x0, x0, #0x1
    7f34:	str	x0, [x19]
    7f38:	cbz	x0, 7f48 <PyNumber_FloorDivide@plt+0x3348>
    7f3c:	mov	x19, x20
    7f40:	ldr	d8, [sp, #56]
    7f44:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7f48:	mov	x0, x19
    7f4c:	bl	4810 <_Py_Dealloc@plt>
    7f50:	mov	x19, x20
    7f54:	ldr	d8, [sp, #56]
    7f58:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7f5c:	mov	x0, x19
    7f60:	bl	4810 <_Py_Dealloc@plt>
    7f64:	b	7f04 <PyNumber_FloorDivide@plt+0x3304>
    7f68:	mov	x0, x20
    7f6c:	bl	4810 <_Py_Dealloc@plt>
    7f70:	b	7f14 <PyNumber_FloorDivide@plt+0x3314>
    7f74:	ldr	x0, [x19, #8]
    7f78:	ldr	x3, [x0, #24]
    7f7c:	mov	x2, x23
    7f80:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    7f84:	add	x1, x1, #0xbb8
    7f88:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    7f8c:	ldr	x0, [x0, #3976]
    7f90:	ldr	x0, [x0]
    7f94:	bl	4b60 <PyErr_Format@plt>
    7f98:	mov	x19, #0x0                   	// #0
    7f9c:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7fa0:	ldr	d8, [sp, #56]
    7fa4:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7fa8:	ldr	d8, [sp, #56]
    7fac:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7fb0:	ldr	d8, [sp, #56]
    7fb4:	b	7e08 <PyNumber_FloorDivide@plt+0x3208>
    7fb8:	stp	x29, x30, [sp, #-32]!
    7fbc:	mov	x29, sp
    7fc0:	str	x19, [sp, #16]
    7fc4:	bl	4b70 <PyNumber_Divmod@plt>
    7fc8:	mov	x19, x0
    7fcc:	cbz	x0, 7fe8 <PyNumber_FloorDivide@plt+0x33e8>
    7fd0:	ldr	x0, [x0, #8]
    7fd4:	ldr	x1, [x0, #168]
    7fd8:	tbz	w1, #26, 7ff8 <PyNumber_FloorDivide@plt+0x33f8>
    7fdc:	ldr	x2, [x19, #16]
    7fe0:	cmp	x2, #0x2
    7fe4:	b.ne	803c <PyNumber_FloorDivide@plt+0x343c>  // b.any
    7fe8:	mov	x0, x19
    7fec:	ldr	x19, [sp, #16]
    7ff0:	ldp	x29, x30, [sp], #32
    7ff4:	ret
    7ff8:	ldr	x2, [x0, #24]
    7ffc:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    8000:	add	x1, x1, #0xbe8
    8004:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8008:	ldr	x0, [x0, #3976]
    800c:	ldr	x0, [x0]
    8010:	bl	4b60 <PyErr_Format@plt>
    8014:	ldr	x0, [x19]
    8018:	sub	x0, x0, #0x1
    801c:	str	x0, [x19]
    8020:	cbz	x0, 802c <PyNumber_FloorDivide@plt+0x342c>
    8024:	mov	x19, #0x0                   	// #0
    8028:	b	7fe8 <PyNumber_FloorDivide@plt+0x33e8>
    802c:	mov	x0, x19
    8030:	bl	4810 <_Py_Dealloc@plt>
    8034:	mov	x19, #0x0                   	// #0
    8038:	b	7fe8 <PyNumber_FloorDivide@plt+0x33e8>
    803c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    8040:	add	x1, x1, #0xc18
    8044:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8048:	ldr	x0, [x0, #3976]
    804c:	ldr	x0, [x0]
    8050:	bl	4b60 <PyErr_Format@plt>
    8054:	ldr	x0, [x19]
    8058:	sub	x0, x0, #0x1
    805c:	str	x0, [x19]
    8060:	cbz	x0, 806c <PyNumber_FloorDivide@plt+0x346c>
    8064:	mov	x19, #0x0                   	// #0
    8068:	b	7fe8 <PyNumber_FloorDivide@plt+0x33e8>
    806c:	mov	x0, x19
    8070:	bl	4810 <_Py_Dealloc@plt>
    8074:	mov	x19, #0x0                   	// #0
    8078:	b	7fe8 <PyNumber_FloorDivide@plt+0x33e8>
    807c:	stp	x29, x30, [sp, #-80]!
    8080:	mov	x29, sp
    8084:	stp	x19, x20, [sp, #16]
    8088:	stp	x23, x24, [sp, #48]
    808c:	mov	x23, x1
    8090:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    8094:	ldr	x1, [x1, #3976]
    8098:	bl	7fb8 <PyNumber_FloorDivide@plt+0x33b8>
    809c:	mov	x19, x0
    80a0:	cbz	x0, 81a8 <PyNumber_FloorDivide@plt+0x35a8>
    80a4:	stp	x21, x22, [sp, #32]
    80a8:	ldr	x0, [x0, #32]
    80ac:	bl	4bb0 <_PyLong_AsInt@plt>
    80b0:	mov	w22, w0
    80b4:	cmn	w0, #0x1
    80b8:	b.eq	81bc <PyNumber_FloorDivide@plt+0x35bc>  // b.none
    80bc:	mov	w0, #0x423f                	// #16959
    80c0:	movk	w0, #0xf, lsl #16
    80c4:	cmp	w22, w0
    80c8:	b.hi	8270 <PyNumber_FloorDivide@plt+0x3670>  // b.pmore
    80cc:	ldr	x20, [x19, #24]
    80d0:	ldr	x0, [x20]
    80d4:	add	x0, x0, #0x1
    80d8:	str	x0, [x20]
    80dc:	ldr	x0, [x19]
    80e0:	sub	x0, x0, #0x1
    80e4:	str	x0, [x19]
    80e8:	cbz	x0, 8204 <PyNumber_FloorDivide@plt+0x3604>
    80ec:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    80f0:	ldr	x1, [x0, #3984]
    80f4:	mov	x0, x20
    80f8:	bl	7fb8 <PyNumber_FloorDivide@plt+0x33b8>
    80fc:	mov	x21, x0
    8100:	cbz	x0, 824c <PyNumber_FloorDivide@plt+0x364c>
    8104:	ldr	x0, [x20]
    8108:	sub	x0, x0, #0x1
    810c:	str	x0, [x20]
    8110:	cbz	x0, 8210 <PyNumber_FloorDivide@plt+0x3610>
    8114:	ldr	x0, [x21, #32]
    8118:	bl	4bb0 <_PyLong_AsInt@plt>
    811c:	mov	w24, w0
    8120:	cmn	w0, #0x1
    8124:	b.eq	821c <PyNumber_FloorDivide@plt+0x361c>  // b.none
    8128:	mov	w0, #0x517f                	// #20863
    812c:	movk	w0, #0x1, lsl #16
    8130:	cmp	w24, w0
    8134:	b.hi	81c8 <PyNumber_FloorDivide@plt+0x35c8>  // b.pmore
    8138:	str	x25, [sp, #64]
    813c:	ldr	x20, [x21, #24]
    8140:	ldr	x0, [x20]
    8144:	add	x0, x0, #0x1
    8148:	str	x0, [x20]
    814c:	mov	x0, x20
    8150:	bl	4bb0 <_PyLong_AsInt@plt>
    8154:	mov	w25, w0
    8158:	cmn	w0, #0x1
    815c:	b.eq	8230 <PyNumber_FloorDivide@plt+0x3630>  // b.none
    8160:	mov	x4, x23
    8164:	mov	w3, #0x0                   	// #0
    8168:	mov	w2, w22
    816c:	mov	w1, w24
    8170:	mov	w0, w25
    8174:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    8178:	mov	x19, x0
    817c:	ldr	x25, [sp, #64]
    8180:	ldr	x0, [x21]
    8184:	sub	x0, x0, #0x1
    8188:	str	x0, [x21]
    818c:	cbz	x0, 81f8 <PyNumber_FloorDivide@plt+0x35f8>
    8190:	cbz	x20, 8244 <PyNumber_FloorDivide@plt+0x3644>
    8194:	ldr	x0, [x20]
    8198:	sub	x0, x0, #0x1
    819c:	str	x0, [x20]
    81a0:	cbz	x0, 8254 <PyNumber_FloorDivide@plt+0x3654>
    81a4:	ldp	x21, x22, [sp, #32]
    81a8:	mov	x0, x19
    81ac:	ldp	x19, x20, [sp, #16]
    81b0:	ldp	x23, x24, [sp, #48]
    81b4:	ldp	x29, x30, [sp], #80
    81b8:	ret
    81bc:	bl	49b0 <PyErr_Occurred@plt>
    81c0:	mov	x21, x19
    81c4:	cbnz	x0, 8264 <PyNumber_FloorDivide@plt+0x3664>
    81c8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    81cc:	add	x1, x1, #0xc40
    81d0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    81d4:	ldr	x0, [x0, #3976]
    81d8:	ldr	x0, [x0]
    81dc:	bl	4880 <PyErr_SetString@plt>
    81e0:	ldr	x0, [x21]
    81e4:	sub	x0, x0, #0x1
    81e8:	str	x0, [x21]
    81ec:	mov	x19, #0x0                   	// #0
    81f0:	mov	x20, #0x0                   	// #0
    81f4:	cbnz	x0, 8278 <PyNumber_FloorDivide@plt+0x3678>
    81f8:	mov	x0, x21
    81fc:	bl	4810 <_Py_Dealloc@plt>
    8200:	b	8190 <PyNumber_FloorDivide@plt+0x3590>
    8204:	mov	x0, x19
    8208:	bl	4810 <_Py_Dealloc@plt>
    820c:	b	80ec <PyNumber_FloorDivide@plt+0x34ec>
    8210:	mov	x0, x20
    8214:	bl	4810 <_Py_Dealloc@plt>
    8218:	b	8114 <PyNumber_FloorDivide@plt+0x3514>
    821c:	bl	49b0 <PyErr_Occurred@plt>
    8220:	cbz	x0, 81c8 <PyNumber_FloorDivide@plt+0x35c8>
    8224:	mov	x19, #0x0                   	// #0
    8228:	mov	x20, #0x0                   	// #0
    822c:	b	8180 <PyNumber_FloorDivide@plt+0x3580>
    8230:	bl	49b0 <PyErr_Occurred@plt>
    8234:	mov	x19, #0x0                   	// #0
    8238:	cbz	x0, 8160 <PyNumber_FloorDivide@plt+0x3560>
    823c:	ldr	x25, [sp, #64]
    8240:	b	8180 <PyNumber_FloorDivide@plt+0x3580>
    8244:	ldp	x21, x22, [sp, #32]
    8248:	b	81a8 <PyNumber_FloorDivide@plt+0x35a8>
    824c:	mov	x19, x0
    8250:	b	8194 <PyNumber_FloorDivide@plt+0x3594>
    8254:	mov	x0, x20
    8258:	bl	4810 <_Py_Dealloc@plt>
    825c:	ldp	x21, x22, [sp, #32]
    8260:	b	81a8 <PyNumber_FloorDivide@plt+0x35a8>
    8264:	mov	x19, #0x0                   	// #0
    8268:	mov	x20, #0x0                   	// #0
    826c:	b	8180 <PyNumber_FloorDivide@plt+0x3580>
    8270:	mov	x21, x19
    8274:	b	81c8 <PyNumber_FloorDivide@plt+0x35c8>
    8278:	ldp	x21, x22, [sp, #32]
    827c:	b	81a8 <PyNumber_FloorDivide@plt+0x35a8>
    8280:	sub	sp, sp, #0x90
    8284:	stp	x29, x30, [sp, #32]
    8288:	add	x29, sp, #0x20
    828c:	stp	x19, x20, [sp, #48]
    8290:	mov	x20, x0
    8294:	mov	x0, x1
    8298:	mov	x1, x2
    829c:	str	xzr, [sp, #136]
    82a0:	str	xzr, [sp, #128]
    82a4:	str	xzr, [sp, #120]
    82a8:	str	xzr, [sp, #112]
    82ac:	str	xzr, [sp, #104]
    82b0:	str	xzr, [sp, #96]
    82b4:	str	xzr, [sp, #88]
    82b8:	str	xzr, [sp, #80]
    82bc:	add	x2, sp, #0x58
    82c0:	str	x2, [sp, #16]
    82c4:	add	x2, sp, #0x60
    82c8:	str	x2, [sp, #8]
    82cc:	add	x2, sp, #0x68
    82d0:	str	x2, [sp]
    82d4:	add	x7, sp, #0x70
    82d8:	add	x6, sp, #0x78
    82dc:	add	x5, sp, #0x80
    82e0:	add	x4, sp, #0x88
    82e4:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    82e8:	add	x3, x3, #0xab8
    82ec:	add	x3, x3, #0x250
    82f0:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    82f4:	add	x2, x2, #0xc68
    82f8:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    82fc:	mov	x19, #0x0                   	// #0
    8300:	cbz	w0, 85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8304:	mov	x0, #0x0                   	// #0
    8308:	bl	4900 <PyLong_FromLong@plt>
    830c:	mov	x19, x0
    8310:	cbz	x0, 85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8314:	stp	x21, x22, [sp, #64]
    8318:	ldr	x2, [sp, #120]
    831c:	cbz	x2, 85c4 <PyNumber_FloorDivide@plt+0x39c4>
    8320:	add	x4, sp, #0x50
    8324:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8328:	ldr	x0, [x0, #4048]
    832c:	ldr	x3, [x0]
    8330:	mov	x1, x19
    8334:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    8338:	add	x0, x0, #0xc80
    833c:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    8340:	mov	x21, x0
    8344:	ldr	x0, [x19]
    8348:	sub	x0, x0, #0x1
    834c:	str	x0, [x19]
    8350:	cbz	x0, 85b8 <PyNumber_FloorDivide@plt+0x39b8>
    8354:	cbz	x21, 8714 <PyNumber_FloorDivide@plt+0x3b14>
    8358:	ldr	x2, [sp, #112]
    835c:	cbz	x2, 85e0 <PyNumber_FloorDivide@plt+0x39e0>
    8360:	add	x4, sp, #0x50
    8364:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    8368:	ldr	x3, [x0, #3992]
    836c:	mov	x1, x21
    8370:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    8374:	add	x0, x0, #0xc90
    8378:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    837c:	mov	x19, x0
    8380:	ldr	x0, [x21]
    8384:	sub	x0, x0, #0x1
    8388:	str	x0, [x21]
    838c:	cbz	x0, 85cc <PyNumber_FloorDivide@plt+0x39cc>
    8390:	cbz	x19, 85d8 <PyNumber_FloorDivide@plt+0x39d8>
    8394:	ldr	x2, [sp, #128]
    8398:	cbz	x2, 85f4 <PyNumber_FloorDivide@plt+0x39f4>
    839c:	add	x4, sp, #0x50
    83a0:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    83a4:	ldr	x3, [x0, #3976]
    83a8:	mov	x1, x19
    83ac:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    83b0:	add	x0, x0, #0xca0
    83b4:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    83b8:	mov	x21, x0
    83bc:	ldr	x0, [x19]
    83c0:	sub	x0, x0, #0x1
    83c4:	str	x0, [x19]
    83c8:	cbz	x0, 85e8 <PyNumber_FloorDivide@plt+0x39e8>
    83cc:	cbz	x21, 8720 <PyNumber_FloorDivide@plt+0x3b20>
    83d0:	ldr	x2, [sp, #104]
    83d4:	cbz	x2, 8610 <PyNumber_FloorDivide@plt+0x3a10>
    83d8:	add	x4, sp, #0x50
    83dc:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    83e0:	ldr	x3, [x0, #4000]
    83e4:	mov	x1, x21
    83e8:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    83ec:	add	x0, x0, #0xca8
    83f0:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    83f4:	mov	x19, x0
    83f8:	ldr	x0, [x21]
    83fc:	sub	x0, x0, #0x1
    8400:	str	x0, [x21]
    8404:	cbz	x0, 85fc <PyNumber_FloorDivide@plt+0x39fc>
    8408:	cbz	x19, 8608 <PyNumber_FloorDivide@plt+0x3a08>
    840c:	ldr	x2, [sp, #96]
    8410:	cbz	x2, 8624 <PyNumber_FloorDivide@plt+0x3a24>
    8414:	add	x4, sp, #0x50
    8418:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    841c:	ldr	x3, [x0, #4008]
    8420:	mov	x1, x19
    8424:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    8428:	add	x0, x0, #0xcb0
    842c:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    8430:	mov	x21, x0
    8434:	ldr	x0, [x19]
    8438:	sub	x0, x0, #0x1
    843c:	str	x0, [x19]
    8440:	cbz	x0, 8618 <PyNumber_FloorDivide@plt+0x3a18>
    8444:	cbz	x21, 872c <PyNumber_FloorDivide@plt+0x3b2c>
    8448:	ldr	x2, [sp, #136]
    844c:	cbz	x2, 8640 <PyNumber_FloorDivide@plt+0x3a40>
    8450:	add	x4, sp, #0x50
    8454:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    8458:	ldr	x3, [x0, #4016]
    845c:	mov	x1, x21
    8460:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    8464:	add	x0, x0, #0xcb8
    8468:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    846c:	mov	x19, x0
    8470:	ldr	x0, [x21]
    8474:	sub	x0, x0, #0x1
    8478:	str	x0, [x21]
    847c:	cbz	x0, 862c <PyNumber_FloorDivide@plt+0x3a2c>
    8480:	cbz	x19, 8638 <PyNumber_FloorDivide@plt+0x3a38>
    8484:	ldr	x2, [sp, #88]
    8488:	cbz	x2, 8654 <PyNumber_FloorDivide@plt+0x3a54>
    848c:	add	x4, sp, #0x50
    8490:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    8494:	ldr	x3, [x0, #4024]
    8498:	mov	x1, x19
    849c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    84a0:	add	x0, x0, #0xcc0
    84a4:	bl	7d4c <PyNumber_FloorDivide@plt+0x314c>
    84a8:	mov	x21, x0
    84ac:	ldr	x0, [x19]
    84b0:	sub	x0, x0, #0x1
    84b4:	str	x0, [x19]
    84b8:	cbz	x0, 8648 <PyNumber_FloorDivide@plt+0x3a48>
    84bc:	cbz	x21, 8738 <PyNumber_FloorDivide@plt+0x3b38>
    84c0:	ldr	d1, [sp, #80]
    84c4:	fcmp	d1, #0.0
    84c8:	b.eq	86fc <PyNumber_FloorDivide@plt+0x3afc>  // b.none
    84cc:	frinta	d0, d1
    84d0:	fabd	d1, d0, d1
    84d4:	fmov	d2, #5.000000000000000000e-01
    84d8:	fcmp	d1, d2
    84dc:	b.ne	853c <PyNumber_FloorDivide@plt+0x393c>  // b.any
    84e0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    84e4:	ldr	x0, [x0, #4048]
    84e8:	ldr	x1, [x0]
    84ec:	mov	x0, x21
    84f0:	bl	4930 <PyNumber_And@plt>
    84f4:	mov	x19, x0
    84f8:	cbz	x0, 865c <PyNumber_FloorDivide@plt+0x3a5c>
    84fc:	bl	4a20 <PyObject_IsTrue@plt>
    8500:	mov	w22, w0
    8504:	ldr	x0, [x19]
    8508:	sub	x0, x0, #0x1
    850c:	str	x0, [x19]
    8510:	cbz	x0, 8684 <PyNumber_FloorDivide@plt+0x3a84>
    8514:	cmn	w22, #0x1
    8518:	b.eq	8690 <PyNumber_FloorDivide@plt+0x3a90>  // b.none
    851c:	scvtf	d1, w22
    8520:	ldr	d0, [sp, #80]
    8524:	fadd	d0, d1, d0
    8528:	fmov	d2, #5.000000000000000000e-01
    852c:	fmul	d0, d0, d2
    8530:	frinta	d0, d0
    8534:	fadd	d0, d0, d0
    8538:	fsub	d0, d0, d1
    853c:	fcvtzs	x0, d0
    8540:	bl	4900 <PyLong_FromLong@plt>
    8544:	mov	x19, x0
    8548:	cbz	x0, 86bc <PyNumber_FloorDivide@plt+0x3abc>
    854c:	mov	x1, x0
    8550:	mov	x0, x21
    8554:	bl	47c0 <PyNumber_Add@plt>
    8558:	mov	x22, x0
    855c:	ldr	x0, [x19]
    8560:	sub	x0, x0, #0x1
    8564:	str	x0, [x19]
    8568:	cbz	x0, 86e4 <PyNumber_FloorDivide@plt+0x3ae4>
    856c:	ldr	x0, [x21]
    8570:	sub	x0, x0, #0x1
    8574:	str	x0, [x21]
    8578:	cbz	x0, 86f0 <PyNumber_FloorDivide@plt+0x3af0>
    857c:	cbz	x22, 8744 <PyNumber_FloorDivide@plt+0x3b44>
    8580:	mov	x1, x20
    8584:	mov	x0, x22
    8588:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    858c:	mov	x19, x0
    8590:	ldr	x0, [x22]
    8594:	sub	x0, x0, #0x1
    8598:	str	x0, [x22]
    859c:	cbz	x0, 8704 <PyNumber_FloorDivide@plt+0x3b04>
    85a0:	ldp	x21, x22, [sp, #64]
    85a4:	mov	x0, x19
    85a8:	ldp	x19, x20, [sp, #48]
    85ac:	ldp	x29, x30, [sp, #32]
    85b0:	add	sp, sp, #0x90
    85b4:	ret
    85b8:	mov	x0, x19
    85bc:	bl	4810 <_Py_Dealloc@plt>
    85c0:	b	8354 <PyNumber_FloorDivide@plt+0x3754>
    85c4:	mov	x21, x0
    85c8:	b	8358 <PyNumber_FloorDivide@plt+0x3758>
    85cc:	mov	x0, x21
    85d0:	bl	4810 <_Py_Dealloc@plt>
    85d4:	b	8390 <PyNumber_FloorDivide@plt+0x3790>
    85d8:	ldp	x21, x22, [sp, #64]
    85dc:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    85e0:	mov	x19, x21
    85e4:	b	8394 <PyNumber_FloorDivide@plt+0x3794>
    85e8:	mov	x0, x19
    85ec:	bl	4810 <_Py_Dealloc@plt>
    85f0:	b	83cc <PyNumber_FloorDivide@plt+0x37cc>
    85f4:	mov	x21, x19
    85f8:	b	83d0 <PyNumber_FloorDivide@plt+0x37d0>
    85fc:	mov	x0, x21
    8600:	bl	4810 <_Py_Dealloc@plt>
    8604:	b	8408 <PyNumber_FloorDivide@plt+0x3808>
    8608:	ldp	x21, x22, [sp, #64]
    860c:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8610:	mov	x19, x21
    8614:	b	840c <PyNumber_FloorDivide@plt+0x380c>
    8618:	mov	x0, x19
    861c:	bl	4810 <_Py_Dealloc@plt>
    8620:	b	8444 <PyNumber_FloorDivide@plt+0x3844>
    8624:	mov	x21, x19
    8628:	b	8448 <PyNumber_FloorDivide@plt+0x3848>
    862c:	mov	x0, x21
    8630:	bl	4810 <_Py_Dealloc@plt>
    8634:	b	8480 <PyNumber_FloorDivide@plt+0x3880>
    8638:	ldp	x21, x22, [sp, #64]
    863c:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8640:	mov	x19, x21
    8644:	b	8484 <PyNumber_FloorDivide@plt+0x3884>
    8648:	mov	x0, x19
    864c:	bl	4810 <_Py_Dealloc@plt>
    8650:	b	84bc <PyNumber_FloorDivide@plt+0x38bc>
    8654:	mov	x21, x19
    8658:	b	84c0 <PyNumber_FloorDivide@plt+0x38c0>
    865c:	ldr	x0, [x21]
    8660:	sub	x0, x0, #0x1
    8664:	str	x0, [x21]
    8668:	cbz	x0, 8674 <PyNumber_FloorDivide@plt+0x3a74>
    866c:	ldp	x21, x22, [sp, #64]
    8670:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8674:	mov	x0, x21
    8678:	bl	4810 <_Py_Dealloc@plt>
    867c:	ldp	x21, x22, [sp, #64]
    8680:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8684:	mov	x0, x19
    8688:	bl	4810 <_Py_Dealloc@plt>
    868c:	b	8514 <PyNumber_FloorDivide@plt+0x3914>
    8690:	ldr	x0, [x21]
    8694:	sub	x0, x0, #0x1
    8698:	str	x0, [x21]
    869c:	mov	x19, #0x0                   	// #0
    86a0:	cbz	x0, 86ac <PyNumber_FloorDivide@plt+0x3aac>
    86a4:	ldp	x21, x22, [sp, #64]
    86a8:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    86ac:	mov	x0, x21
    86b0:	bl	4810 <_Py_Dealloc@plt>
    86b4:	ldp	x21, x22, [sp, #64]
    86b8:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    86bc:	ldr	x0, [x21]
    86c0:	sub	x0, x0, #0x1
    86c4:	str	x0, [x21]
    86c8:	cbz	x0, 86d4 <PyNumber_FloorDivide@plt+0x3ad4>
    86cc:	ldp	x21, x22, [sp, #64]
    86d0:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    86d4:	mov	x0, x21
    86d8:	bl	4810 <_Py_Dealloc@plt>
    86dc:	ldp	x21, x22, [sp, #64]
    86e0:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    86e4:	mov	x0, x19
    86e8:	bl	4810 <_Py_Dealloc@plt>
    86ec:	b	856c <PyNumber_FloorDivide@plt+0x396c>
    86f0:	mov	x0, x21
    86f4:	bl	4810 <_Py_Dealloc@plt>
    86f8:	b	857c <PyNumber_FloorDivide@plt+0x397c>
    86fc:	mov	x22, x21
    8700:	b	8580 <PyNumber_FloorDivide@plt+0x3980>
    8704:	mov	x0, x22
    8708:	bl	4810 <_Py_Dealloc@plt>
    870c:	ldp	x21, x22, [sp, #64]
    8710:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8714:	mov	x19, x21
    8718:	ldp	x21, x22, [sp, #64]
    871c:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8720:	mov	x19, x21
    8724:	ldp	x21, x22, [sp, #64]
    8728:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    872c:	mov	x19, x21
    8730:	ldp	x21, x22, [sp, #64]
    8734:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8738:	mov	x19, x21
    873c:	ldp	x21, x22, [sp, #64]
    8740:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8744:	mov	x19, x22
    8748:	ldp	x21, x22, [sp, #64]
    874c:	b	85a4 <PyNumber_FloorDivide@plt+0x39a4>
    8750:	stp	x29, x30, [sp, #-64]!
    8754:	mov	x29, sp
    8758:	stp	x19, x20, [sp, #16]
    875c:	stp	x21, x22, [sp, #32]
    8760:	mov	x22, x0
    8764:	ldrsw	x0, [x0, #24]
    8768:	bl	4900 <PyLong_FromLong@plt>
    876c:	mov	x19, x0
    8770:	cbz	x0, 88fc <PyNumber_FloorDivide@plt+0x3cfc>
    8774:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    8778:	ldr	x1, [x0, #3984]
    877c:	mov	x0, x19
    8780:	bl	4830 <PyNumber_Multiply@plt>
    8784:	mov	x20, x0
    8788:	cbz	x0, 88d0 <PyNumber_FloorDivide@plt+0x3cd0>
    878c:	ldr	x0, [x19]
    8790:	sub	x0, x0, #0x1
    8794:	str	x0, [x19]
    8798:	cbz	x0, 887c <PyNumber_FloorDivide@plt+0x3c7c>
    879c:	ldrsw	x0, [x22, #28]
    87a0:	bl	4900 <PyLong_FromLong@plt>
    87a4:	mov	x21, x0
    87a8:	cbz	x0, 8840 <PyNumber_FloorDivide@plt+0x3c40>
    87ac:	str	x23, [sp, #48]
    87b0:	mov	x1, x20
    87b4:	bl	47c0 <PyNumber_Add@plt>
    87b8:	mov	x23, x0
    87bc:	cbz	x0, 88d8 <PyNumber_FloorDivide@plt+0x3cd8>
    87c0:	ldr	x0, [x21]
    87c4:	sub	x0, x0, #0x1
    87c8:	str	x0, [x21]
    87cc:	cbz	x0, 8888 <PyNumber_FloorDivide@plt+0x3c88>
    87d0:	ldr	x0, [x20]
    87d4:	sub	x0, x0, #0x1
    87d8:	str	x0, [x20]
    87dc:	cbz	x0, 8894 <PyNumber_FloorDivide@plt+0x3c94>
    87e0:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    87e4:	ldr	x1, [x0, #3976]
    87e8:	mov	x0, x23
    87ec:	bl	4830 <PyNumber_Multiply@plt>
    87f0:	mov	x19, x0
    87f4:	cbz	x0, 88f4 <PyNumber_FloorDivide@plt+0x3cf4>
    87f8:	ldr	x0, [x23]
    87fc:	sub	x0, x0, #0x1
    8800:	str	x0, [x23]
    8804:	cbz	x0, 88a0 <PyNumber_FloorDivide@plt+0x3ca0>
    8808:	ldrsw	x0, [x22, #32]
    880c:	bl	4900 <PyLong_FromLong@plt>
    8810:	mov	x20, x0
    8814:	cbz	x0, 88e8 <PyNumber_FloorDivide@plt+0x3ce8>
    8818:	mov	x1, x0
    881c:	mov	x0, x19
    8820:	bl	47c0 <PyNumber_Add@plt>
    8824:	mov	x21, x0
    8828:	ldr	x23, [sp, #48]
    882c:	ldr	x0, [x19]
    8830:	sub	x0, x0, #0x1
    8834:	str	x0, [x19]
    8838:	cbz	x0, 88ac <PyNumber_FloorDivide@plt+0x3cac>
    883c:	cbz	x20, 8868 <PyNumber_FloorDivide@plt+0x3c68>
    8840:	ldr	x0, [x20]
    8844:	sub	x0, x0, #0x1
    8848:	str	x0, [x20]
    884c:	mov	x19, #0x0                   	// #0
    8850:	cbz	x0, 88b8 <PyNumber_FloorDivide@plt+0x3cb8>
    8854:	cbz	x19, 8868 <PyNumber_FloorDivide@plt+0x3c68>
    8858:	ldr	x0, [x19]
    885c:	sub	x0, x0, #0x1
    8860:	str	x0, [x19]
    8864:	cbz	x0, 88c4 <PyNumber_FloorDivide@plt+0x3cc4>
    8868:	mov	x0, x21
    886c:	ldp	x19, x20, [sp, #16]
    8870:	ldp	x21, x22, [sp, #32]
    8874:	ldp	x29, x30, [sp], #64
    8878:	ret
    887c:	mov	x0, x19
    8880:	bl	4810 <_Py_Dealloc@plt>
    8884:	b	879c <PyNumber_FloorDivide@plt+0x3b9c>
    8888:	mov	x0, x21
    888c:	bl	4810 <_Py_Dealloc@plt>
    8890:	b	87d0 <PyNumber_FloorDivide@plt+0x3bd0>
    8894:	mov	x0, x20
    8898:	bl	4810 <_Py_Dealloc@plt>
    889c:	b	87e0 <PyNumber_FloorDivide@plt+0x3be0>
    88a0:	mov	x0, x23
    88a4:	bl	4810 <_Py_Dealloc@plt>
    88a8:	b	8808 <PyNumber_FloorDivide@plt+0x3c08>
    88ac:	mov	x0, x19
    88b0:	bl	4810 <_Py_Dealloc@plt>
    88b4:	b	883c <PyNumber_FloorDivide@plt+0x3c3c>
    88b8:	mov	x0, x20
    88bc:	bl	4810 <_Py_Dealloc@plt>
    88c0:	b	8854 <PyNumber_FloorDivide@plt+0x3c54>
    88c4:	mov	x0, x19
    88c8:	bl	4810 <_Py_Dealloc@plt>
    88cc:	b	8868 <PyNumber_FloorDivide@plt+0x3c68>
    88d0:	mov	x21, x0
    88d4:	b	882c <PyNumber_FloorDivide@plt+0x3c2c>
    88d8:	mov	x19, x21
    88dc:	mov	x21, x0
    88e0:	ldr	x23, [sp, #48]
    88e4:	b	882c <PyNumber_FloorDivide@plt+0x3c2c>
    88e8:	mov	x21, x0
    88ec:	ldr	x23, [sp, #48]
    88f0:	b	882c <PyNumber_FloorDivide@plt+0x3c2c>
    88f4:	mov	x19, x23
    88f8:	ldr	x23, [sp, #48]
    88fc:	mov	x21, #0x0                   	// #0
    8900:	b	8854 <PyNumber_FloorDivide@plt+0x3c54>
    8904:	stp	x29, x30, [sp, #-32]!
    8908:	mov	x29, sp
    890c:	stp	x19, x20, [sp, #16]
    8910:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8914:	mov	x19, x0
    8918:	cbz	x0, 895c <PyNumber_FloorDivide@plt+0x3d5c>
    891c:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    8920:	ldr	x1, [x0, #3976]
    8924:	mov	x0, x19
    8928:	bl	4be0 <PyNumber_TrueDivide@plt>
    892c:	mov	x20, x0
    8930:	ldr	x1, [x19]
    8934:	sub	x1, x1, #0x1
    8938:	str	x1, [x19]
    893c:	cbz	x1, 8950 <PyNumber_FloorDivide@plt+0x3d50>
    8940:	mov	x0, x20
    8944:	ldp	x19, x20, [sp, #16]
    8948:	ldp	x29, x30, [sp], #32
    894c:	ret
    8950:	mov	x0, x19
    8954:	bl	4810 <_Py_Dealloc@plt>
    8958:	b	8940 <PyNumber_FloorDivide@plt+0x3d40>
    895c:	mov	x20, x0
    8960:	b	8940 <PyNumber_FloorDivide@plt+0x3d40>
    8964:	stp	x29, x30, [sp, #-32]!
    8968:	mov	x29, sp
    896c:	str	x19, [sp, #16]
    8970:	bl	4910 <_PyLong_DivmodNear@plt>
    8974:	cbz	x0, 89b0 <PyNumber_FloorDivide@plt+0x3db0>
    8978:	ldr	x19, [x0, #24]
    897c:	ldr	x1, [x19]
    8980:	add	x1, x1, #0x1
    8984:	str	x1, [x19]
    8988:	ldr	x1, [x0]
    898c:	sub	x1, x1, #0x1
    8990:	str	x1, [x0]
    8994:	cbz	x1, 89a8 <PyNumber_FloorDivide@plt+0x3da8>
    8998:	mov	x0, x19
    899c:	ldr	x19, [sp, #16]
    89a0:	ldp	x29, x30, [sp], #32
    89a4:	ret
    89a8:	bl	4810 <_Py_Dealloc@plt>
    89ac:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    89b0:	mov	x19, x0
    89b4:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    89b8:	stp	x29, x30, [sp, #-48]!
    89bc:	mov	x29, sp
    89c0:	stp	x19, x20, [sp, #16]
    89c4:	stp	x21, x22, [sp, #32]
    89c8:	mov	x19, x1
    89cc:	mov	w22, w2
    89d0:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    89d4:	mov	x20, x0
    89d8:	cbz	x0, 8b84 <PyNumber_FloorDivide@plt+0x3f84>
    89dc:	mov	x2, #0x0                   	// #0
    89e0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    89e4:	add	x1, x1, #0xab8
    89e8:	add	x1, x1, #0x290
    89ec:	mov	x0, x19
    89f0:	bl	4a60 <_PyObject_CallMethodId@plt>
    89f4:	mov	x19, x0
    89f8:	cbz	x0, 8af0 <PyNumber_FloorDivide@plt+0x3ef0>
    89fc:	ldr	x0, [x0, #8]
    8a00:	ldr	x1, [x0, #168]
    8a04:	tbz	w1, #26, 8ac4 <PyNumber_FloorDivide@plt+0x3ec4>
    8a08:	mov	x0, x19
    8a0c:	bl	4b50 <PyTuple_Size@plt>
    8a10:	cmp	x0, #0x2
    8a14:	b.ne	8b14 <PyNumber_FloorDivide@plt+0x3f14>  // b.any
    8a18:	add	x0, x19, w22, sxtw #3
    8a1c:	ldr	x1, [x0, #24]
    8a20:	mov	x0, x20
    8a24:	bl	4830 <PyNumber_Multiply@plt>
    8a28:	mov	x21, x0
    8a2c:	ldr	x0, [x20]
    8a30:	sub	x0, x0, #0x1
    8a34:	str	x0, [x20]
    8a38:	cbz	x0, 8b48 <PyNumber_FloorDivide@plt+0x3f48>
    8a3c:	cbz	x21, 8aa0 <PyNumber_FloorDivide@plt+0x3ea0>
    8a40:	cmp	w22, #0x0
    8a44:	cset	x0, eq  // eq = none
    8a48:	add	x0, x0, #0x2
    8a4c:	add	x0, x19, x0, lsl #3
    8a50:	ldr	x1, [x0, #8]
    8a54:	mov	x0, x21
    8a58:	bl	8964 <PyNumber_FloorDivide@plt+0x3d64>
    8a5c:	mov	x20, x0
    8a60:	ldr	x0, [x21]
    8a64:	sub	x0, x0, #0x1
    8a68:	str	x0, [x21]
    8a6c:	cbz	x0, 8b54 <PyNumber_FloorDivide@plt+0x3f54>
    8a70:	mov	x21, x20
    8a74:	cbz	x20, 8aa0 <PyNumber_FloorDivide@plt+0x3ea0>
    8a78:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8a7c:	add	x1, x1, #0x298
    8a80:	add	x1, x1, #0x4e0
    8a84:	mov	x0, x20
    8a88:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    8a8c:	mov	x21, x0
    8a90:	ldr	x0, [x20]
    8a94:	sub	x0, x0, #0x1
    8a98:	str	x0, [x20]
    8a9c:	cbz	x0, 8b60 <PyNumber_FloorDivide@plt+0x3f60>
    8aa0:	ldr	x0, [x19]
    8aa4:	sub	x0, x0, #0x1
    8aa8:	str	x0, [x19]
    8aac:	cbz	x0, 8b78 <PyNumber_FloorDivide@plt+0x3f78>
    8ab0:	mov	x0, x21
    8ab4:	ldp	x19, x20, [sp, #16]
    8ab8:	ldp	x21, x22, [sp, #32]
    8abc:	ldp	x29, x30, [sp], #48
    8ac0:	ret
    8ac4:	ldr	x2, [x0, #24]
    8ac8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    8acc:	add	x1, x1, #0xcc8
    8ad0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8ad4:	ldr	x0, [x0, #3976]
    8ad8:	ldr	x0, [x0]
    8adc:	bl	4b60 <PyErr_Format@plt>
    8ae0:	ldr	x0, [x19]
    8ae4:	sub	x0, x0, #0x1
    8ae8:	str	x0, [x19]
    8aec:	cbz	x0, 8b08 <PyNumber_FloorDivide@plt+0x3f08>
    8af0:	ldr	x0, [x20]
    8af4:	sub	x0, x0, #0x1
    8af8:	str	x0, [x20]
    8afc:	cbz	x0, 8b6c <PyNumber_FloorDivide@plt+0x3f6c>
    8b00:	mov	x21, #0x0                   	// #0
    8b04:	b	8ab0 <PyNumber_FloorDivide@plt+0x3eb0>
    8b08:	mov	x0, x19
    8b0c:	bl	4810 <_Py_Dealloc@plt>
    8b10:	b	8af0 <PyNumber_FloorDivide@plt+0x3ef0>
    8b14:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    8b18:	add	x1, x1, #0xd18
    8b1c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8b20:	ldr	x0, [x0, #3968]
    8b24:	ldr	x0, [x0]
    8b28:	bl	4880 <PyErr_SetString@plt>
    8b2c:	ldr	x0, [x19]
    8b30:	sub	x0, x0, #0x1
    8b34:	str	x0, [x19]
    8b38:	cbnz	x0, 8af0 <PyNumber_FloorDivide@plt+0x3ef0>
    8b3c:	mov	x0, x19
    8b40:	bl	4810 <_Py_Dealloc@plt>
    8b44:	b	8af0 <PyNumber_FloorDivide@plt+0x3ef0>
    8b48:	mov	x0, x20
    8b4c:	bl	4810 <_Py_Dealloc@plt>
    8b50:	b	8a3c <PyNumber_FloorDivide@plt+0x3e3c>
    8b54:	mov	x0, x21
    8b58:	bl	4810 <_Py_Dealloc@plt>
    8b5c:	b	8a70 <PyNumber_FloorDivide@plt+0x3e70>
    8b60:	mov	x0, x20
    8b64:	bl	4810 <_Py_Dealloc@plt>
    8b68:	b	8aa0 <PyNumber_FloorDivide@plt+0x3ea0>
    8b6c:	mov	x0, x20
    8b70:	bl	4810 <_Py_Dealloc@plt>
    8b74:	b	8b00 <PyNumber_FloorDivide@plt+0x3f00>
    8b78:	mov	x0, x19
    8b7c:	bl	4810 <_Py_Dealloc@plt>
    8b80:	b	8ab0 <PyNumber_FloorDivide@plt+0x3eb0>
    8b84:	mov	x21, x0
    8b88:	b	8ab0 <PyNumber_FloorDivide@plt+0x3eb0>
    8b8c:	stp	x29, x30, [sp, #-48]!
    8b90:	mov	x29, sp
    8b94:	stp	x19, x20, [sp, #16]
    8b98:	mov	x19, x0
    8b9c:	mov	x20, x1
    8ba0:	ldr	x0, [x0, #8]
    8ba4:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    8ba8:	add	x2, x2, #0x298
    8bac:	add	x2, x2, #0x4e0
    8bb0:	cmp	x0, x2
    8bb4:	b.eq	8bc4 <PyNumber_FloorDivide@plt+0x3fc4>  // b.none
    8bb8:	mov	x1, x2
    8bbc:	bl	4b30 <PyType_IsSubtype@plt>
    8bc0:	cbz	w0, 8cf4 <PyNumber_FloorDivide@plt+0x40f4>
    8bc4:	ldr	x0, [x20, #8]
    8bc8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8bcc:	add	x1, x1, #0x298
    8bd0:	add	x1, x1, #0x4e0
    8bd4:	cmp	x0, x1
    8bd8:	b.eq	8bf0 <PyNumber_FloorDivide@plt+0x3ff0>  // b.none
    8bdc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8be0:	add	x1, x1, #0x298
    8be4:	add	x1, x1, #0x4e0
    8be8:	bl	4b30 <PyType_IsSubtype@plt>
    8bec:	cbz	w0, 8cac <PyNumber_FloorDivide@plt+0x40ac>
    8bf0:	str	x21, [sp, #32]
    8bf4:	mov	x0, x19
    8bf8:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8bfc:	mov	x21, x0
    8c00:	cbz	x0, 8d7c <PyNumber_FloorDivide@plt+0x417c>
    8c04:	mov	x0, x20
    8c08:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8c0c:	mov	x20, x0
    8c10:	cbz	x0, 8c68 <PyNumber_FloorDivide@plt+0x4068>
    8c14:	mov	x1, x0
    8c18:	mov	x0, x21
    8c1c:	bl	4be0 <PyNumber_TrueDivide@plt>
    8c20:	mov	x19, x0
    8c24:	ldr	x0, [x21]
    8c28:	sub	x0, x0, #0x1
    8c2c:	str	x0, [x21]
    8c30:	cbz	x0, 8c90 <PyNumber_FloorDivide@plt+0x4090>
    8c34:	ldr	x0, [x20]
    8c38:	sub	x0, x0, #0x1
    8c3c:	str	x0, [x20]
    8c40:	cbz	x0, 8c9c <PyNumber_FloorDivide@plt+0x409c>
    8c44:	ldr	x21, [sp, #32]
    8c48:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8c4c:	ldr	x0, [x0, #3960]
    8c50:	cmp	x19, x0
    8c54:	b.eq	8cf4 <PyNumber_FloorDivide@plt+0x40f4>  // b.none
    8c58:	mov	x0, x19
    8c5c:	ldp	x19, x20, [sp, #16]
    8c60:	ldp	x29, x30, [sp], #48
    8c64:	ret
    8c68:	ldr	x0, [x21]
    8c6c:	sub	x0, x0, #0x1
    8c70:	str	x0, [x21]
    8c74:	cbz	x0, 8c80 <PyNumber_FloorDivide@plt+0x4080>
    8c78:	ldr	x21, [sp, #32]
    8c7c:	b	8d80 <PyNumber_FloorDivide@plt+0x4180>
    8c80:	mov	x0, x21
    8c84:	bl	4810 <_Py_Dealloc@plt>
    8c88:	ldr	x21, [sp, #32]
    8c8c:	b	8d80 <PyNumber_FloorDivide@plt+0x4180>
    8c90:	mov	x0, x21
    8c94:	bl	4810 <_Py_Dealloc@plt>
    8c98:	b	8c34 <PyNumber_FloorDivide@plt+0x4034>
    8c9c:	mov	x0, x20
    8ca0:	bl	4810 <_Py_Dealloc@plt>
    8ca4:	ldr	x21, [sp, #32]
    8ca8:	b	8c48 <PyNumber_FloorDivide@plt+0x4048>
    8cac:	ldr	x0, [x20, #8]
    8cb0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    8cb4:	ldr	x1, [x1, #3944]
    8cb8:	cmp	x0, x1
    8cbc:	b.eq	8cd0 <PyNumber_FloorDivide@plt+0x40d0>  // b.none
    8cc0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    8cc4:	ldr	x1, [x1, #3944]
    8cc8:	bl	4b30 <PyType_IsSubtype@plt>
    8ccc:	cbz	w0, 8ce8 <PyNumber_FloorDivide@plt+0x40e8>
    8cd0:	mov	w2, #0x1                   	// #1
    8cd4:	mov	x1, x20
    8cd8:	mov	x0, x19
    8cdc:	bl	89b8 <PyNumber_FloorDivide@plt+0x3db8>
    8ce0:	mov	x19, x0
    8ce4:	b	8c48 <PyNumber_FloorDivide@plt+0x4048>
    8ce8:	ldr	x0, [x20, #8]
    8cec:	ldr	x0, [x0, #168]
    8cf0:	tbnz	w0, #24, 8d0c <PyNumber_FloorDivide@plt+0x410c>
    8cf4:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    8cf8:	ldr	x19, [x19, #3960]
    8cfc:	ldr	x0, [x19]
    8d00:	add	x0, x0, #0x1
    8d04:	str	x0, [x19]
    8d08:	b	8c58 <PyNumber_FloorDivide@plt+0x4058>
    8d0c:	mov	x0, x19
    8d10:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8d14:	mov	x19, x0
    8d18:	cbz	x0, 8d80 <PyNumber_FloorDivide@plt+0x4180>
    8d1c:	mov	x1, x20
    8d20:	bl	8964 <PyNumber_FloorDivide@plt+0x3d64>
    8d24:	mov	x20, x0
    8d28:	ldr	x0, [x19]
    8d2c:	sub	x0, x0, #0x1
    8d30:	str	x0, [x19]
    8d34:	cbz	x0, 8d70 <PyNumber_FloorDivide@plt+0x4170>
    8d38:	cbz	x20, 8d80 <PyNumber_FloorDivide@plt+0x4180>
    8d3c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8d40:	add	x1, x1, #0x298
    8d44:	add	x1, x1, #0x4e0
    8d48:	mov	x0, x20
    8d4c:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    8d50:	mov	x19, x0
    8d54:	ldr	x0, [x20]
    8d58:	sub	x0, x0, #0x1
    8d5c:	str	x0, [x20]
    8d60:	cbnz	x0, 8c48 <PyNumber_FloorDivide@plt+0x4048>
    8d64:	mov	x0, x20
    8d68:	bl	4810 <_Py_Dealloc@plt>
    8d6c:	b	8c48 <PyNumber_FloorDivide@plt+0x4048>
    8d70:	mov	x0, x19
    8d74:	bl	4810 <_Py_Dealloc@plt>
    8d78:	b	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8d7c:	ldr	x21, [sp, #32]
    8d80:	mov	x19, #0x0                   	// #0
    8d84:	b	8c58 <PyNumber_FloorDivide@plt+0x4058>
    8d88:	stp	x29, x30, [sp, #-48]!
    8d8c:	mov	x29, sp
    8d90:	stp	x19, x20, [sp, #16]
    8d94:	str	x21, [sp, #32]
    8d98:	mov	x20, x1
    8d9c:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8da0:	mov	x19, x0
    8da4:	cbz	x0, 8e34 <PyNumber_FloorDivide@plt+0x4234>
    8da8:	mov	x0, x20
    8dac:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8db0:	mov	x20, x0
    8db4:	cbz	x0, 8dfc <PyNumber_FloorDivide@plt+0x41fc>
    8db8:	mov	x1, x0
    8dbc:	mov	x0, x19
    8dc0:	bl	4c00 <PyNumber_FloorDivide@plt>
    8dc4:	mov	x21, x0
    8dc8:	ldr	x1, [x19]
    8dcc:	sub	x1, x1, #0x1
    8dd0:	str	x1, [x19]
    8dd4:	cbz	x1, 8e1c <PyNumber_FloorDivide@plt+0x421c>
    8dd8:	ldr	x1, [x20]
    8ddc:	sub	x1, x1, #0x1
    8de0:	str	x1, [x20]
    8de4:	cbz	x1, 8e28 <PyNumber_FloorDivide@plt+0x4228>
    8de8:	mov	x0, x21
    8dec:	ldp	x19, x20, [sp, #16]
    8df0:	ldr	x21, [sp, #32]
    8df4:	ldp	x29, x30, [sp], #48
    8df8:	ret
    8dfc:	ldr	x0, [x19]
    8e00:	sub	x0, x0, #0x1
    8e04:	str	x0, [x19]
    8e08:	mov	x21, x20
    8e0c:	cbnz	x0, 8de8 <PyNumber_FloorDivide@plt+0x41e8>
    8e10:	mov	x0, x19
    8e14:	bl	4810 <_Py_Dealloc@plt>
    8e18:	b	8de8 <PyNumber_FloorDivide@plt+0x41e8>
    8e1c:	mov	x0, x19
    8e20:	bl	4810 <_Py_Dealloc@plt>
    8e24:	b	8dd8 <PyNumber_FloorDivide@plt+0x41d8>
    8e28:	mov	x0, x20
    8e2c:	bl	4810 <_Py_Dealloc@plt>
    8e30:	b	8de8 <PyNumber_FloorDivide@plt+0x41e8>
    8e34:	mov	x21, x0
    8e38:	b	8de8 <PyNumber_FloorDivide@plt+0x41e8>
    8e3c:	stp	x29, x30, [sp, #-32]!
    8e40:	mov	x29, sp
    8e44:	stp	x19, x20, [sp, #16]
    8e48:	mov	x19, x0
    8e4c:	mov	x20, x1
    8e50:	ldr	x0, [x0, #8]
    8e54:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    8e58:	add	x2, x2, #0x298
    8e5c:	add	x2, x2, #0x4e0
    8e60:	cmp	x0, x2
    8e64:	b.eq	8e74 <PyNumber_FloorDivide@plt+0x4274>  // b.none
    8e68:	mov	x1, x2
    8e6c:	bl	4b30 <PyType_IsSubtype@plt>
    8e70:	cbz	w0, 8f48 <PyNumber_FloorDivide@plt+0x4348>
    8e74:	ldr	x0, [x20, #8]
    8e78:	ldr	x1, [x0, #168]
    8e7c:	tbnz	w1, #24, 8ed8 <PyNumber_FloorDivide@plt+0x42d8>
    8e80:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8e84:	add	x1, x1, #0x298
    8e88:	add	x1, x1, #0x4e0
    8e8c:	cmp	x0, x1
    8e90:	b.eq	8ea8 <PyNumber_FloorDivide@plt+0x42a8>  // b.none
    8e94:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8e98:	add	x1, x1, #0x298
    8e9c:	add	x1, x1, #0x4e0
    8ea0:	bl	4b30 <PyType_IsSubtype@plt>
    8ea4:	cbz	w0, 8f48 <PyNumber_FloorDivide@plt+0x4348>
    8ea8:	mov	x1, x20
    8eac:	mov	x0, x19
    8eb0:	bl	8d88 <PyNumber_FloorDivide@plt+0x4188>
    8eb4:	mov	x19, x0
    8eb8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    8ebc:	ldr	x0, [x0, #3960]
    8ec0:	cmp	x19, x0
    8ec4:	b.eq	8f48 <PyNumber_FloorDivide@plt+0x4348>  // b.none
    8ec8:	mov	x0, x19
    8ecc:	ldp	x19, x20, [sp, #16]
    8ed0:	ldp	x29, x30, [sp], #32
    8ed4:	ret
    8ed8:	mov	x0, x19
    8edc:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8ee0:	mov	x19, x0
    8ee4:	cbz	x0, 8f60 <PyNumber_FloorDivide@plt+0x4360>
    8ee8:	mov	x1, x20
    8eec:	bl	4c00 <PyNumber_FloorDivide@plt>
    8ef0:	mov	x20, x0
    8ef4:	ldr	x0, [x19]
    8ef8:	sub	x0, x0, #0x1
    8efc:	str	x0, [x19]
    8f00:	cbz	x0, 8f3c <PyNumber_FloorDivide@plt+0x433c>
    8f04:	cbz	x20, 8f60 <PyNumber_FloorDivide@plt+0x4360>
    8f08:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    8f0c:	add	x1, x1, #0x298
    8f10:	add	x1, x1, #0x4e0
    8f14:	mov	x0, x20
    8f18:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    8f1c:	mov	x19, x0
    8f20:	ldr	x0, [x20]
    8f24:	sub	x0, x0, #0x1
    8f28:	str	x0, [x20]
    8f2c:	cbnz	x0, 8eb8 <PyNumber_FloorDivide@plt+0x42b8>
    8f30:	mov	x0, x20
    8f34:	bl	4810 <_Py_Dealloc@plt>
    8f38:	b	8eb8 <PyNumber_FloorDivide@plt+0x42b8>
    8f3c:	mov	x0, x19
    8f40:	bl	4810 <_Py_Dealloc@plt>
    8f44:	b	8f04 <PyNumber_FloorDivide@plt+0x4304>
    8f48:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    8f4c:	ldr	x19, [x19, #3960]
    8f50:	ldr	x0, [x19]
    8f54:	add	x0, x0, #0x1
    8f58:	str	x0, [x19]
    8f5c:	b	8ec8 <PyNumber_FloorDivide@plt+0x42c8>
    8f60:	mov	x19, #0x0                   	// #0
    8f64:	b	8ec8 <PyNumber_FloorDivide@plt+0x42c8>
    8f68:	stp	x29, x30, [sp, #-48]!
    8f6c:	mov	x29, sp
    8f70:	stp	x19, x20, [sp, #16]
    8f74:	mov	x19, x0
    8f78:	mov	x20, x1
    8f7c:	ldr	x0, [x0, #8]
    8f80:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    8f84:	add	x2, x2, #0x298
    8f88:	add	x2, x2, #0x4e0
    8f8c:	cmp	x0, x2
    8f90:	b.eq	8fa0 <PyNumber_FloorDivide@plt+0x43a0>  // b.none
    8f94:	mov	x1, x2
    8f98:	bl	4b30 <PyType_IsSubtype@plt>
    8f9c:	cbz	w0, 9074 <PyNumber_FloorDivide@plt+0x4474>
    8fa0:	ldr	x0, [x20, #8]
    8fa4:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    8fa8:	add	x2, x2, #0x298
    8fac:	add	x2, x2, #0x4e0
    8fb0:	cmp	x0, x2
    8fb4:	b.eq	8fc4 <PyNumber_FloorDivide@plt+0x43c4>  // b.none
    8fb8:	mov	x1, x2
    8fbc:	bl	4b30 <PyType_IsSubtype@plt>
    8fc0:	cbz	w0, 9074 <PyNumber_FloorDivide@plt+0x4474>
    8fc4:	mov	x0, x19
    8fc8:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8fcc:	mov	x19, x0
    8fd0:	cbz	x0, 9088 <PyNumber_FloorDivide@plt+0x4488>
    8fd4:	mov	x0, x20
    8fd8:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    8fdc:	mov	x20, x0
    8fe0:	cbz	x0, 9098 <PyNumber_FloorDivide@plt+0x4498>
    8fe4:	str	x21, [sp, #32]
    8fe8:	mov	x1, x0
    8fec:	mov	x0, x19
    8ff0:	bl	7fb8 <PyNumber_FloorDivide@plt+0x33b8>
    8ff4:	mov	x21, x0
    8ff8:	ldr	x0, [x19]
    8ffc:	sub	x0, x0, #0x1
    9000:	str	x0, [x19]
    9004:	cbz	x0, 90c0 <PyNumber_FloorDivide@plt+0x44c0>
    9008:	ldr	x0, [x20]
    900c:	sub	x0, x0, #0x1
    9010:	str	x0, [x20]
    9014:	cbz	x0, 90cc <PyNumber_FloorDivide@plt+0x44cc>
    9018:	cbz	x21, 9120 <PyNumber_FloorDivide@plt+0x4520>
    901c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    9020:	add	x1, x1, #0x298
    9024:	add	x1, x1, #0x4e0
    9028:	ldr	x0, [x21, #32]
    902c:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    9030:	mov	x20, x0
    9034:	cbz	x0, 90d8 <PyNumber_FloorDivide@plt+0x44d8>
    9038:	mov	x2, x0
    903c:	ldr	x1, [x21, #24]
    9040:	mov	x0, #0x2                   	// #2
    9044:	bl	4bd0 <PyTuple_Pack@plt>
    9048:	mov	x19, x0
    904c:	ldr	x0, [x20]
    9050:	sub	x0, x0, #0x1
    9054:	str	x0, [x20]
    9058:	cbz	x0, 9104 <PyNumber_FloorDivide@plt+0x4504>
    905c:	ldr	x0, [x21]
    9060:	sub	x0, x0, #0x1
    9064:	str	x0, [x21]
    9068:	cbz	x0, 9110 <PyNumber_FloorDivide@plt+0x4510>
    906c:	ldr	x21, [sp, #32]
    9070:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    9074:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    9078:	ldr	x19, [x19, #3960]
    907c:	ldr	x0, [x19]
    9080:	add	x0, x0, #0x1
    9084:	str	x0, [x19]
    9088:	mov	x0, x19
    908c:	ldp	x19, x20, [sp, #16]
    9090:	ldp	x29, x30, [sp], #48
    9094:	ret
    9098:	ldr	x0, [x19]
    909c:	sub	x0, x0, #0x1
    90a0:	str	x0, [x19]
    90a4:	cbz	x0, 90b0 <PyNumber_FloorDivide@plt+0x44b0>
    90a8:	mov	x19, x20
    90ac:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    90b0:	mov	x0, x19
    90b4:	bl	4810 <_Py_Dealloc@plt>
    90b8:	mov	x19, x20
    90bc:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    90c0:	mov	x0, x19
    90c4:	bl	4810 <_Py_Dealloc@plt>
    90c8:	b	9008 <PyNumber_FloorDivide@plt+0x4408>
    90cc:	mov	x0, x20
    90d0:	bl	4810 <_Py_Dealloc@plt>
    90d4:	b	9018 <PyNumber_FloorDivide@plt+0x4418>
    90d8:	ldr	x0, [x21]
    90dc:	sub	x0, x0, #0x1
    90e0:	str	x0, [x21]
    90e4:	mov	x19, x20
    90e8:	cbz	x0, 90f4 <PyNumber_FloorDivide@plt+0x44f4>
    90ec:	ldr	x21, [sp, #32]
    90f0:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    90f4:	mov	x0, x21
    90f8:	bl	4810 <_Py_Dealloc@plt>
    90fc:	ldr	x21, [sp, #32]
    9100:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    9104:	mov	x0, x20
    9108:	bl	4810 <_Py_Dealloc@plt>
    910c:	b	905c <PyNumber_FloorDivide@plt+0x445c>
    9110:	mov	x0, x21
    9114:	bl	4810 <_Py_Dealloc@plt>
    9118:	ldr	x21, [sp, #32]
    911c:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    9120:	mov	x19, x21
    9124:	ldr	x21, [sp, #32]
    9128:	b	9088 <PyNumber_FloorDivide@plt+0x4488>
    912c:	stp	x29, x30, [sp, #-48]!
    9130:	mov	x29, sp
    9134:	stp	x19, x20, [sp, #16]
    9138:	mov	x19, x0
    913c:	mov	x20, x1
    9140:	ldr	x0, [x0, #8]
    9144:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    9148:	add	x2, x2, #0x298
    914c:	add	x2, x2, #0x4e0
    9150:	cmp	x0, x2
    9154:	b.eq	9164 <PyNumber_FloorDivide@plt+0x4564>  // b.none
    9158:	mov	x1, x2
    915c:	bl	4b30 <PyType_IsSubtype@plt>
    9160:	cbz	w0, 9210 <PyNumber_FloorDivide@plt+0x4610>
    9164:	ldr	x0, [x20, #8]
    9168:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    916c:	add	x2, x2, #0x298
    9170:	add	x2, x2, #0x4e0
    9174:	cmp	x0, x2
    9178:	b.eq	9188 <PyNumber_FloorDivide@plt+0x4588>  // b.none
    917c:	mov	x1, x2
    9180:	bl	4b30 <PyType_IsSubtype@plt>
    9184:	cbz	w0, 9210 <PyNumber_FloorDivide@plt+0x4610>
    9188:	mov	x0, x19
    918c:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    9190:	mov	x19, x0
    9194:	cbz	x0, 9224 <PyNumber_FloorDivide@plt+0x4624>
    9198:	mov	x0, x20
    919c:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    91a0:	mov	x20, x0
    91a4:	cbz	x0, 9234 <PyNumber_FloorDivide@plt+0x4634>
    91a8:	str	x21, [sp, #32]
    91ac:	mov	x1, x0
    91b0:	mov	x0, x19
    91b4:	bl	4980 <PyNumber_Remainder@plt>
    91b8:	mov	x21, x0
    91bc:	ldr	x0, [x19]
    91c0:	sub	x0, x0, #0x1
    91c4:	str	x0, [x19]
    91c8:	cbz	x0, 925c <PyNumber_FloorDivide@plt+0x465c>
    91cc:	ldr	x0, [x20]
    91d0:	sub	x0, x0, #0x1
    91d4:	str	x0, [x20]
    91d8:	cbz	x0, 9268 <PyNumber_FloorDivide@plt+0x4668>
    91dc:	cbz	x21, 9284 <PyNumber_FloorDivide@plt+0x4684>
    91e0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    91e4:	add	x1, x1, #0x298
    91e8:	add	x1, x1, #0x4e0
    91ec:	mov	x0, x21
    91f0:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    91f4:	mov	x19, x0
    91f8:	ldr	x0, [x21]
    91fc:	sub	x0, x0, #0x1
    9200:	str	x0, [x21]
    9204:	cbz	x0, 9274 <PyNumber_FloorDivide@plt+0x4674>
    9208:	ldr	x21, [sp, #32]
    920c:	b	9224 <PyNumber_FloorDivide@plt+0x4624>
    9210:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    9214:	ldr	x19, [x19, #3960]
    9218:	ldr	x0, [x19]
    921c:	add	x0, x0, #0x1
    9220:	str	x0, [x19]
    9224:	mov	x0, x19
    9228:	ldp	x19, x20, [sp, #16]
    922c:	ldp	x29, x30, [sp], #48
    9230:	ret
    9234:	ldr	x0, [x19]
    9238:	sub	x0, x0, #0x1
    923c:	str	x0, [x19]
    9240:	cbz	x0, 924c <PyNumber_FloorDivide@plt+0x464c>
    9244:	mov	x19, x20
    9248:	b	9224 <PyNumber_FloorDivide@plt+0x4624>
    924c:	mov	x0, x19
    9250:	bl	4810 <_Py_Dealloc@plt>
    9254:	mov	x19, x20
    9258:	b	9224 <PyNumber_FloorDivide@plt+0x4624>
    925c:	mov	x0, x19
    9260:	bl	4810 <_Py_Dealloc@plt>
    9264:	b	91cc <PyNumber_FloorDivide@plt+0x45cc>
    9268:	mov	x0, x20
    926c:	bl	4810 <_Py_Dealloc@plt>
    9270:	b	91dc <PyNumber_FloorDivide@plt+0x45dc>
    9274:	mov	x0, x21
    9278:	bl	4810 <_Py_Dealloc@plt>
    927c:	ldr	x21, [sp, #32]
    9280:	b	9224 <PyNumber_FloorDivide@plt+0x4624>
    9284:	mov	x19, x21
    9288:	ldr	x21, [sp, #32]
    928c:	b	9224 <PyNumber_FloorDivide@plt+0x4624>
    9290:	stp	x29, x30, [sp, #-32]!
    9294:	mov	x29, sp
    9298:	stp	x19, x20, [sp, #16]
    929c:	mov	x20, x0
    92a0:	mov	x0, x1
    92a4:	bl	8750 <PyNumber_FloorDivide@plt+0x3b50>
    92a8:	mov	x19, x0
    92ac:	cbz	x0, 92fc <PyNumber_FloorDivide@plt+0x46fc>
    92b0:	mov	x1, x0
    92b4:	mov	x0, x20
    92b8:	bl	4830 <PyNumber_Multiply@plt>
    92bc:	mov	x20, x0
    92c0:	ldr	x0, [x19]
    92c4:	sub	x0, x0, #0x1
    92c8:	str	x0, [x19]
    92cc:	cbz	x0, 930c <PyNumber_FloorDivide@plt+0x470c>
    92d0:	cbz	x20, 9324 <PyNumber_FloorDivide@plt+0x4724>
    92d4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    92d8:	add	x1, x1, #0x298
    92dc:	add	x1, x1, #0x4e0
    92e0:	mov	x0, x20
    92e4:	bl	807c <PyNumber_FloorDivide@plt+0x347c>
    92e8:	mov	x19, x0
    92ec:	ldr	x0, [x20]
    92f0:	sub	x0, x0, #0x1
    92f4:	str	x0, [x20]
    92f8:	cbz	x0, 9318 <PyNumber_FloorDivide@plt+0x4718>
    92fc:	mov	x0, x19
    9300:	ldp	x19, x20, [sp, #16]
    9304:	ldp	x29, x30, [sp], #32
    9308:	ret
    930c:	mov	x0, x19
    9310:	bl	4810 <_Py_Dealloc@plt>
    9314:	b	92d0 <PyNumber_FloorDivide@plt+0x46d0>
    9318:	mov	x0, x20
    931c:	bl	4810 <_Py_Dealloc@plt>
    9320:	b	92fc <PyNumber_FloorDivide@plt+0x46fc>
    9324:	mov	x19, x20
    9328:	b	92fc <PyNumber_FloorDivide@plt+0x46fc>
    932c:	stp	x29, x30, [sp, #-32]!
    9330:	mov	x29, sp
    9334:	stp	x19, x20, [sp, #16]
    9338:	mov	x19, x0
    933c:	mov	x20, x1
    9340:	ldr	x0, [x0, #8]
    9344:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    9348:	add	x2, x2, #0x298
    934c:	add	x2, x2, #0x4e0
    9350:	cmp	x0, x2
    9354:	b.eq	9364 <PyNumber_FloorDivide@plt+0x4764>  // b.none
    9358:	mov	x1, x2
    935c:	bl	4b30 <PyType_IsSubtype@plt>
    9360:	cbz	w0, 93cc <PyNumber_FloorDivide@plt+0x47cc>
    9364:	ldr	x0, [x20, #8]
    9368:	ldr	x1, [x0, #168]
    936c:	tbnz	w1, #24, 93bc <PyNumber_FloorDivide@plt+0x47bc>
    9370:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    9374:	ldr	x1, [x1, #3944]
    9378:	cmp	x0, x1
    937c:	b.eq	9390 <PyNumber_FloorDivide@plt+0x4790>  // b.none
    9380:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    9384:	ldr	x1, [x1, #3944]
    9388:	bl	4b30 <PyType_IsSubtype@plt>
    938c:	cbz	w0, 941c <PyNumber_FloorDivide@plt+0x481c>
    9390:	mov	w2, #0x0                   	// #0
    9394:	mov	x1, x20
    9398:	mov	x0, x19
    939c:	bl	89b8 <PyNumber_FloorDivide@plt+0x3db8>
    93a0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    93a4:	ldr	x1, [x1, #3960]
    93a8:	cmp	x0, x1
    93ac:	b.eq	941c <PyNumber_FloorDivide@plt+0x481c>  // b.none
    93b0:	ldp	x19, x20, [sp, #16]
    93b4:	ldp	x29, x30, [sp], #32
    93b8:	ret
    93bc:	mov	x1, x19
    93c0:	mov	x0, x20
    93c4:	bl	9290 <PyNumber_FloorDivide@plt+0x4690>
    93c8:	b	93a0 <PyNumber_FloorDivide@plt+0x47a0>
    93cc:	ldr	x0, [x19, #8]
    93d0:	ldr	x1, [x0, #168]
    93d4:	tbnz	w1, #24, 940c <PyNumber_FloorDivide@plt+0x480c>
    93d8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    93dc:	ldr	x1, [x1, #3944]
    93e0:	cmp	x0, x1
    93e4:	b.eq	93f8 <PyNumber_FloorDivide@plt+0x47f8>  // b.none
    93e8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    93ec:	ldr	x1, [x1, #3944]
    93f0:	bl	4b30 <PyType_IsSubtype@plt>
    93f4:	cbz	w0, 941c <PyNumber_FloorDivide@plt+0x481c>
    93f8:	mov	w2, #0x0                   	// #0
    93fc:	mov	x1, x19
    9400:	mov	x0, x20
    9404:	bl	89b8 <PyNumber_FloorDivide@plt+0x3db8>
    9408:	b	93a0 <PyNumber_FloorDivide@plt+0x47a0>
    940c:	mov	x1, x20
    9410:	mov	x0, x19
    9414:	bl	9290 <PyNumber_FloorDivide@plt+0x4690>
    9418:	b	93a0 <PyNumber_FloorDivide@plt+0x47a0>
    941c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9420:	ldr	x0, [x0, #3960]
    9424:	ldr	x1, [x0]
    9428:	add	x1, x1, #0x1
    942c:	str	x1, [x0]
    9430:	b	93b0 <PyNumber_FloorDivide@plt+0x47b0>
    9434:	stp	x29, x30, [sp, #-48]!
    9438:	mov	x29, sp
    943c:	stp	x19, x20, [sp, #16]
    9440:	str	x21, [sp, #32]
    9444:	mov	x21, x0
    9448:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    944c:	add	x0, x0, #0x938
    9450:	bl	4ad0 <PyUnicode_FromString@plt>
    9454:	mov	x19, x0
    9458:	cbz	x0, 95c4 <PyNumber_FloorDivide@plt+0x49c4>
    945c:	ldr	w1, [x21, #24]
    9460:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    9464:	add	x2, x2, #0x938
    9468:	cbnz	w1, 94ec <PyNumber_FloorDivide@plt+0x48ec>
    946c:	ldr	w3, [x21, #28]
    9470:	cbnz	w3, 952c <PyNumber_FloorDivide@plt+0x492c>
    9474:	ldr	w3, [x21, #32]
    9478:	cbnz	w3, 9570 <PyNumber_FloorDivide@plt+0x4970>
    947c:	ldr	x0, [x19, #16]
    9480:	cbnz	x0, 94ac <PyNumber_FloorDivide@plt+0x48ac>
    9484:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9488:	add	x0, x0, #0xd80
    948c:	bl	4ad0 <PyUnicode_FromString@plt>
    9490:	mov	x20, x0
    9494:	ldr	x0, [x19]
    9498:	sub	x0, x0, #0x1
    949c:	str	x0, [x19]
    94a0:	cbz	x0, 95ac <PyNumber_FloorDivide@plt+0x49ac>
    94a4:	cbz	x20, 94d8 <PyNumber_FloorDivide@plt+0x48d8>
    94a8:	mov	x19, x20
    94ac:	ldr	x0, [x21, #8]
    94b0:	mov	x2, x19
    94b4:	ldr	x1, [x0, #24]
    94b8:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    94bc:	add	x0, x0, #0xd88
    94c0:	bl	4700 <PyUnicode_FromFormat@plt>
    94c4:	mov	x20, x0
    94c8:	ldr	x0, [x19]
    94cc:	sub	x0, x0, #0x1
    94d0:	str	x0, [x19]
    94d4:	cbz	x0, 95b8 <PyNumber_FloorDivide@plt+0x49b8>
    94d8:	mov	x0, x20
    94dc:	ldp	x19, x20, [sp, #16]
    94e0:	ldr	x21, [sp, #32]
    94e4:	ldp	x29, x30, [sp], #48
    94e8:	ret
    94ec:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    94f0:	add	x0, x0, #0xd50
    94f4:	bl	4700 <PyUnicode_FromFormat@plt>
    94f8:	mov	x20, x0
    94fc:	ldr	x0, [x19]
    9500:	sub	x0, x0, #0x1
    9504:	str	x0, [x19]
    9508:	cbz	x0, 9520 <PyNumber_FloorDivide@plt+0x4920>
    950c:	cbz	x20, 94d8 <PyNumber_FloorDivide@plt+0x48d8>
    9510:	mov	x19, x20
    9514:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    9518:	add	x2, x2, #0xd48
    951c:	b	946c <PyNumber_FloorDivide@plt+0x486c>
    9520:	mov	x0, x19
    9524:	bl	4810 <_Py_Dealloc@plt>
    9528:	b	950c <PyNumber_FloorDivide@plt+0x490c>
    952c:	mov	x1, x19
    9530:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9534:	add	x0, x0, #0xd58
    9538:	bl	4700 <PyUnicode_FromFormat@plt>
    953c:	mov	x20, x0
    9540:	ldr	x0, [x19]
    9544:	sub	x0, x0, #0x1
    9548:	str	x0, [x19]
    954c:	cbz	x0, 9564 <PyNumber_FloorDivide@plt+0x4964>
    9550:	cbz	x20, 94d8 <PyNumber_FloorDivide@plt+0x48d8>
    9554:	mov	x19, x20
    9558:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    955c:	add	x2, x2, #0xd48
    9560:	b	9474 <PyNumber_FloorDivide@plt+0x4874>
    9564:	mov	x0, x19
    9568:	bl	4810 <_Py_Dealloc@plt>
    956c:	b	9550 <PyNumber_FloorDivide@plt+0x4950>
    9570:	mov	x1, x19
    9574:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9578:	add	x0, x0, #0xd68
    957c:	bl	4700 <PyUnicode_FromFormat@plt>
    9580:	mov	x20, x0
    9584:	ldr	x0, [x19]
    9588:	sub	x0, x0, #0x1
    958c:	str	x0, [x19]
    9590:	cbz	x0, 95a0 <PyNumber_FloorDivide@plt+0x49a0>
    9594:	cbz	x20, 94d8 <PyNumber_FloorDivide@plt+0x48d8>
    9598:	mov	x19, x20
    959c:	b	947c <PyNumber_FloorDivide@plt+0x487c>
    95a0:	mov	x0, x19
    95a4:	bl	4810 <_Py_Dealloc@plt>
    95a8:	b	9594 <PyNumber_FloorDivide@plt+0x4994>
    95ac:	mov	x0, x19
    95b0:	bl	4810 <_Py_Dealloc@plt>
    95b4:	b	94a4 <PyNumber_FloorDivide@plt+0x48a4>
    95b8:	mov	x0, x19
    95bc:	bl	4810 <_Py_Dealloc@plt>
    95c0:	b	94d8 <PyNumber_FloorDivide@plt+0x48d8>
    95c4:	mov	x20, x0
    95c8:	b	94d8 <PyNumber_FloorDivide@plt+0x48d8>
    95cc:	stp	x29, x30, [sp, #-48]!
    95d0:	mov	x29, sp
    95d4:	stp	x19, x20, [sp, #16]
    95d8:	str	x21, [sp, #32]
    95dc:	mov	x20, x0
    95e0:	mov	w21, w1
    95e4:	mov	x1, #0xa                   	// #10
    95e8:	add	x0, x0, #0x19
    95ec:	bl	4800 <PyBytes_FromStringAndSize@plt>
    95f0:	mov	x19, x0
    95f4:	cbz	x0, 9684 <PyNumber_FloorDivide@plt+0x4a84>
    95f8:	cmp	w21, #0x3
    95fc:	b.le	9614 <PyNumber_FloorDivide@plt+0x4a14>
    9600:	ldrb	w0, [x20, #35]
    9604:	cbz	w0, 9614 <PyNumber_FloorDivide@plt+0x4a14>
    9608:	ldrb	w0, [x19, #34]
    960c:	orr	w0, w0, #0xffffff80
    9610:	strb	w0, [x19, #34]
    9614:	ldrb	w0, [x20, #24]
    9618:	cbz	w0, 9644 <PyNumber_FloorDivide@plt+0x4a44>
    961c:	ldr	x2, [x20, #40]
    9620:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9624:	ldr	x0, [x0, #4024]
    9628:	cmp	x2, x0
    962c:	b.eq	9644 <PyNumber_FloorDivide@plt+0x4a44>  // b.none
    9630:	mov	x1, x19
    9634:	mov	x0, #0x2                   	// #2
    9638:	bl	4bd0 <PyTuple_Pack@plt>
    963c:	mov	x20, x0
    9640:	b	9654 <PyNumber_FloorDivide@plt+0x4a54>
    9644:	mov	x1, x19
    9648:	mov	x0, #0x1                   	// #1
    964c:	bl	4bd0 <PyTuple_Pack@plt>
    9650:	mov	x20, x0
    9654:	ldr	x1, [x19]
    9658:	sub	x1, x1, #0x1
    965c:	str	x1, [x19]
    9660:	cbz	x1, 9678 <PyNumber_FloorDivide@plt+0x4a78>
    9664:	mov	x0, x20
    9668:	ldp	x19, x20, [sp, #16]
    966c:	ldr	x21, [sp, #32]
    9670:	ldp	x29, x30, [sp], #48
    9674:	ret
    9678:	mov	x0, x19
    967c:	bl	4810 <_Py_Dealloc@plt>
    9680:	b	9664 <PyNumber_FloorDivide@plt+0x4a64>
    9684:	mov	x20, x0
    9688:	b	9664 <PyNumber_FloorDivide@plt+0x4a64>
    968c:	stp	x29, x30, [sp, #-32]!
    9690:	mov	x29, sp
    9694:	str	x19, [sp, #16]
    9698:	ldr	x19, [x0, #8]
    969c:	mov	w1, #0x2                   	// #2
    96a0:	bl	95cc <PyNumber_FloorDivide@plt+0x49cc>
    96a4:	mov	x2, x0
    96a8:	mov	x1, x19
    96ac:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    96b0:	add	x0, x0, #0x900
    96b4:	bl	49a0 <Py_BuildValue@plt>
    96b8:	ldr	x19, [sp, #16]
    96bc:	ldp	x29, x30, [sp], #32
    96c0:	ret
    96c4:	stp	x29, x30, [sp, #-48]!
    96c8:	mov	x29, sp
    96cc:	stp	x19, x20, [sp, #16]
    96d0:	mov	x19, x0
    96d4:	mov	x0, x1
    96d8:	add	x2, sp, #0x2c
    96dc:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    96e0:	add	x1, x1, #0xab0
    96e4:	bl	4a30 <PyArg_ParseTuple@plt>
    96e8:	cbz	w0, 971c <PyNumber_FloorDivide@plt+0x4b1c>
    96ec:	ldr	x20, [x19, #8]
    96f0:	ldr	w1, [sp, #44]
    96f4:	mov	x0, x19
    96f8:	bl	95cc <PyNumber_FloorDivide@plt+0x49cc>
    96fc:	mov	x2, x0
    9700:	mov	x1, x20
    9704:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9708:	add	x0, x0, #0x900
    970c:	bl	49a0 <Py_BuildValue@plt>
    9710:	ldp	x19, x20, [sp, #16]
    9714:	ldp	x29, x30, [sp], #48
    9718:	ret
    971c:	mov	x0, #0x0                   	// #0
    9720:	b	9710 <PyNumber_FloorDivide@plt+0x4b10>
    9724:	stp	x29, x30, [sp, #-112]!
    9728:	mov	x29, sp
    972c:	str	x21, [sp, #32]
    9730:	add	x1, sp, #0x38
    9734:	bl	4bc0 <_PyTime_localtime@plt>
    9738:	mov	x21, #0x0                   	// #0
    973c:	cbnz	w0, 97bc <PyNumber_FloorDivide@plt+0x4bbc>
    9740:	stp	x19, x20, [sp, #16]
    9744:	ldr	x20, [sp, #104]
    9748:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    974c:	add	x4, x4, #0x298
    9750:	add	x4, x4, #0x4e0
    9754:	mov	w3, #0x1                   	// #1
    9758:	mov	w2, #0x0                   	// #0
    975c:	ldr	w1, [sp, #96]
    9760:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    9764:	mov	x19, x0
    9768:	cbz	x0, 97f0 <PyNumber_FloorDivide@plt+0x4bf0>
    976c:	cbz	x20, 97fc <PyNumber_FloorDivide@plt+0x4bfc>
    9770:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9774:	add	x1, x1, #0xd90
    9778:	mov	x0, x20
    977c:	bl	4920 <PyUnicode_DecodeLocale@plt>
    9780:	mov	x20, x0
    9784:	cbz	x0, 97d8 <PyNumber_FloorDivide@plt+0x4bd8>
    9788:	mov	x1, x0
    978c:	mov	x0, x19
    9790:	bl	5a40 <PyNumber_FloorDivide@plt+0xe40>
    9794:	mov	x21, x0
    9798:	ldr	x0, [x20]
    979c:	sub	x0, x0, #0x1
    97a0:	str	x0, [x20]
    97a4:	cbz	x0, 97cc <PyNumber_FloorDivide@plt+0x4bcc>
    97a8:	ldr	x1, [x19]
    97ac:	sub	x1, x1, #0x1
    97b0:	str	x1, [x19]
    97b4:	cbz	x1, 97e0 <PyNumber_FloorDivide@plt+0x4be0>
    97b8:	ldp	x19, x20, [sp, #16]
    97bc:	mov	x0, x21
    97c0:	ldr	x21, [sp, #32]
    97c4:	ldp	x29, x30, [sp], #112
    97c8:	ret
    97cc:	mov	x0, x20
    97d0:	bl	4810 <_Py_Dealloc@plt>
    97d4:	b	97a8 <PyNumber_FloorDivide@plt+0x4ba8>
    97d8:	mov	x21, x0
    97dc:	b	97a8 <PyNumber_FloorDivide@plt+0x4ba8>
    97e0:	mov	x0, x19
    97e4:	bl	4810 <_Py_Dealloc@plt>
    97e8:	ldp	x19, x20, [sp, #16]
    97ec:	b	97bc <PyNumber_FloorDivide@plt+0x4bbc>
    97f0:	mov	x21, x0
    97f4:	ldp	x19, x20, [sp, #16]
    97f8:	b	97bc <PyNumber_FloorDivide@plt+0x4bbc>
    97fc:	mov	x1, #0x0                   	// #0
    9800:	bl	5a40 <PyNumber_FloorDivide@plt+0xe40>
    9804:	mov	x21, x0
    9808:	b	97a8 <PyNumber_FloorDivide@plt+0x4ba8>
    980c:	stp	x29, x30, [sp, #-48]!
    9810:	mov	x29, sp
    9814:	stp	x19, x20, [sp, #16]
    9818:	str	x21, [sp, #32]
    981c:	mov	x21, x0
    9820:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    9824:	add	x0, x0, #0x8
    9828:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    982c:	mov	x19, x0
    9830:	cbz	x0, 9890 <PyNumber_FloorDivide@plt+0x4c90>
    9834:	mov	x2, #0x0                   	// #0
    9838:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    983c:	add	x1, x1, #0xab8
    9840:	add	x1, x1, #0x2a8
    9844:	bl	4a60 <_PyObject_CallMethodId@plt>
    9848:	mov	x20, x0
    984c:	ldr	x0, [x19]
    9850:	sub	x0, x0, #0x1
    9854:	str	x0, [x19]
    9858:	cbz	x0, 98a4 <PyNumber_FloorDivide@plt+0x4ca4>
    985c:	cbz	x20, 98bc <PyNumber_FloorDivide@plt+0x4cbc>
    9860:	mov	x3, #0x0                   	// #0
    9864:	mov	x2, x20
    9868:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    986c:	add	x1, x1, #0xab8
    9870:	add	x1, x1, #0x2c0
    9874:	mov	x0, x21
    9878:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    987c:	mov	x19, x0
    9880:	ldr	x0, [x20]
    9884:	sub	x0, x0, #0x1
    9888:	str	x0, [x20]
    988c:	cbz	x0, 98b0 <PyNumber_FloorDivide@plt+0x4cb0>
    9890:	mov	x0, x19
    9894:	ldp	x19, x20, [sp, #16]
    9898:	ldr	x21, [sp, #32]
    989c:	ldp	x29, x30, [sp], #48
    98a0:	ret
    98a4:	mov	x0, x19
    98a8:	bl	4810 <_Py_Dealloc@plt>
    98ac:	b	985c <PyNumber_FloorDivide@plt+0x4c5c>
    98b0:	mov	x0, x20
    98b4:	bl	4810 <_Py_Dealloc@plt>
    98b8:	b	9890 <PyNumber_FloorDivide@plt+0x4c90>
    98bc:	mov	x19, x20
    98c0:	b	9890 <PyNumber_FloorDivide@plt+0x4c90>
    98c4:	stp	x29, x30, [sp, #-32]!
    98c8:	mov	x29, sp
    98cc:	stp	x19, x20, [sp, #16]
    98d0:	mov	x20, x0
    98d4:	cmp	x1, #0x0
    98d8:	mov	x1, #0x30                  	// #48
    98dc:	mov	x0, #0x28                  	// #40
    98e0:	csel	x0, x1, x0, ne  // ne = any
    98e4:	bl	4890 <PyObject_Malloc@plt>
    98e8:	cbz	x0, 9934 <PyNumber_FloorDivide@plt+0x4d34>
    98ec:	mov	x19, x0
    98f0:	str	x20, [x0, #8]
    98f4:	mov	x0, x20
    98f8:	bl	4af0 <PyType_GetFlags@plt>
    98fc:	tbz	w0, #9, 990c <PyNumber_FloorDivide@plt+0x4d0c>
    9900:	ldr	x0, [x20]
    9904:	add	x0, x0, #0x1
    9908:	str	x0, [x20]
    990c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9910:	ldr	x0, [x0, #3984]
    9914:	ldr	w0, [x0, #4]
    9918:	cbnz	w0, 9940 <PyNumber_FloorDivide@plt+0x4d40>
    991c:	mov	x0, #0x1                   	// #1
    9920:	str	x0, [x19]
    9924:	mov	x0, x19
    9928:	ldp	x19, x20, [sp, #16]
    992c:	ldp	x29, x30, [sp], #32
    9930:	ret
    9934:	bl	4820 <PyErr_NoMemory@plt>
    9938:	mov	x19, x0
    993c:	b	9924 <PyNumber_FloorDivide@plt+0x4d24>
    9940:	mov	x0, x19
    9944:	bl	4ab0 <_PyTraceMalloc_NewReference@plt>
    9948:	b	991c <PyNumber_FloorDivide@plt+0x4d1c>
    994c:	stp	x29, x30, [sp, #-64]!
    9950:	mov	x29, sp
    9954:	stp	x19, x20, [sp, #16]
    9958:	mov	x20, x0
    995c:	add	x2, sp, #0x38
    9960:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    9964:	add	x1, x1, #0xab8
    9968:	add	x1, x1, #0x2d8
    996c:	bl	4760 <_PyObject_LookupAttrId@plt>
    9970:	tbnz	w0, #31, 9bd4 <PyNumber_FloorDivide@plt+0x4fd4>
    9974:	ldr	x19, [sp, #56]
    9978:	cbz	x19, 9ab8 <PyNumber_FloorDivide@plt+0x4eb8>
    997c:	ldr	x0, [x19, #8]
    9980:	ldr	x1, [x0, #56]
    9984:	ldr	x0, [x0, #168]
    9988:	tbz	w0, #11, 9a94 <PyNumber_FloorDivide@plt+0x4e94>
    998c:	ldr	x4, [x19, x1]
    9990:	cbz	x4, 9a94 <PyNumber_FloorDivide@plt+0x4e94>
    9994:	mov	x3, #0x0                   	// #0
    9998:	mov	x2, #0x0                   	// #0
    999c:	mov	x1, #0x0                   	// #0
    99a0:	mov	x0, x19
    99a4:	blr	x4
    99a8:	mov	x2, #0x0                   	// #0
    99ac:	mov	x1, x0
    99b0:	mov	x0, x19
    99b4:	bl	4a00 <_Py_CheckFunctionResult@plt>
    99b8:	mov	x19, x0
    99bc:	ldr	x0, [sp, #56]
    99c0:	ldr	x1, [x0]
    99c4:	sub	x1, x1, #0x1
    99c8:	str	x1, [x0]
    99cc:	cbz	x1, 9ab0 <PyNumber_FloorDivide@plt+0x4eb0>
    99d0:	cbz	x19, 9a84 <PyNumber_FloorDivide@plt+0x4e84>
    99d4:	add	x2, sp, #0x30
    99d8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    99dc:	add	x1, x1, #0xab8
    99e0:	add	x1, x1, #0x2f0
    99e4:	mov	x0, x20
    99e8:	bl	4760 <_PyObject_LookupAttrId@plt>
    99ec:	tbnz	w0, #31, 9ac8 <PyNumber_FloorDivide@plt+0x4ec8>
    99f0:	str	x21, [sp, #32]
    99f4:	ldr	x21, [sp, #48]
    99f8:	cbz	x21, 9b44 <PyNumber_FloorDivide@plt+0x4f44>
    99fc:	ldr	x0, [x21, #8]
    9a00:	ldr	x1, [x0, #56]
    9a04:	ldr	x0, [x0, #168]
    9a08:	tbz	w0, #11, 9af0 <PyNumber_FloorDivide@plt+0x4ef0>
    9a0c:	ldr	x4, [x21, x1]
    9a10:	cbz	x4, 9af0 <PyNumber_FloorDivide@plt+0x4ef0>
    9a14:	mov	x3, #0x0                   	// #0
    9a18:	mov	x2, #0x0                   	// #0
    9a1c:	mov	x1, #0x0                   	// #0
    9a20:	mov	x0, x21
    9a24:	blr	x4
    9a28:	mov	x2, #0x0                   	// #0
    9a2c:	mov	x1, x0
    9a30:	mov	x0, x21
    9a34:	bl	4a00 <_Py_CheckFunctionResult@plt>
    9a38:	mov	x21, x0
    9a3c:	ldr	x0, [sp, #48]
    9a40:	ldr	x1, [x0]
    9a44:	sub	x1, x1, #0x1
    9a48:	str	x1, [x0]
    9a4c:	cbz	x1, 9b0c <PyNumber_FloorDivide@plt+0x4f0c>
    9a50:	cbz	x21, 9b14 <PyNumber_FloorDivide@plt+0x4f14>
    9a54:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9a58:	ldr	x0, [x0, #4024]
    9a5c:	cmp	x21, x0
    9a60:	b.eq	9b94 <PyNumber_FloorDivide@plt+0x4f94>  // b.none
    9a64:	mov	x3, x21
    9a68:	mov	x2, x19
    9a6c:	ldr	x1, [x20, #8]
    9a70:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9a74:	add	x0, x0, #0xda0
    9a78:	bl	49a0 <Py_BuildValue@plt>
    9a7c:	mov	x19, x0
    9a80:	ldr	x21, [sp, #32]
    9a84:	mov	x0, x19
    9a88:	ldp	x19, x20, [sp, #16]
    9a8c:	ldp	x29, x30, [sp], #64
    9a90:	ret
    9a94:	mov	x3, #0x0                   	// #0
    9a98:	mov	x2, #0x0                   	// #0
    9a9c:	mov	x1, #0x0                   	// #0
    9aa0:	mov	x0, x19
    9aa4:	bl	4b90 <_PyObject_MakeTpCall@plt>
    9aa8:	mov	x19, x0
    9aac:	b	99bc <PyNumber_FloorDivide@plt+0x4dbc>
    9ab0:	bl	4810 <_Py_Dealloc@plt>
    9ab4:	b	99d0 <PyNumber_FloorDivide@plt+0x4dd0>
    9ab8:	mov	x0, #0x0                   	// #0
    9abc:	bl	4970 <PyTuple_New@plt>
    9ac0:	mov	x19, x0
    9ac4:	b	99d0 <PyNumber_FloorDivide@plt+0x4dd0>
    9ac8:	ldr	x0, [x19]
    9acc:	sub	x0, x0, #0x1
    9ad0:	str	x0, [x19]
    9ad4:	cbz	x0, 9ae0 <PyNumber_FloorDivide@plt+0x4ee0>
    9ad8:	mov	x19, #0x0                   	// #0
    9adc:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9ae0:	mov	x0, x19
    9ae4:	bl	4810 <_Py_Dealloc@plt>
    9ae8:	mov	x19, #0x0                   	// #0
    9aec:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9af0:	mov	x3, #0x0                   	// #0
    9af4:	mov	x2, #0x0                   	// #0
    9af8:	mov	x1, #0x0                   	// #0
    9afc:	mov	x0, x21
    9b00:	bl	4b90 <_PyObject_MakeTpCall@plt>
    9b04:	mov	x21, x0
    9b08:	b	9a3c <PyNumber_FloorDivide@plt+0x4e3c>
    9b0c:	bl	4810 <_Py_Dealloc@plt>
    9b10:	b	9a50 <PyNumber_FloorDivide@plt+0x4e50>
    9b14:	ldr	x0, [x19]
    9b18:	sub	x0, x0, #0x1
    9b1c:	str	x0, [x19]
    9b20:	cbz	x0, 9b30 <PyNumber_FloorDivide@plt+0x4f30>
    9b24:	mov	x19, x21
    9b28:	ldr	x21, [sp, #32]
    9b2c:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9b30:	mov	x0, x19
    9b34:	bl	4810 <_Py_Dealloc@plt>
    9b38:	mov	x19, x21
    9b3c:	ldr	x21, [sp, #32]
    9b40:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9b44:	mov	x0, x20
    9b48:	bl	4ac0 <_PyObject_GetDictPtr@plt>
    9b4c:	cbz	x0, 9b7c <PyNumber_FloorDivide@plt+0x4f7c>
    9b50:	ldr	x21, [x0]
    9b54:	cbz	x21, 9b88 <PyNumber_FloorDivide@plt+0x4f88>
    9b58:	ldr	x1, [x21, #16]
    9b5c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9b60:	ldr	x0, [x0, #4024]
    9b64:	cmp	x1, #0x0
    9b68:	csel	x21, x0, x21, eq  // eq = none
    9b6c:	ldr	x0, [x21]
    9b70:	add	x0, x0, #0x1
    9b74:	str	x0, [x21]
    9b78:	b	9a54 <PyNumber_FloorDivide@plt+0x4e54>
    9b7c:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    9b80:	ldr	x21, [x21, #4024]
    9b84:	b	9b6c <PyNumber_FloorDivide@plt+0x4f6c>
    9b88:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    9b8c:	ldr	x21, [x21, #4024]
    9b90:	b	9b6c <PyNumber_FloorDivide@plt+0x4f6c>
    9b94:	mov	x1, x0
    9b98:	ldr	x0, [x0]
    9b9c:	sub	x0, x0, #0x1
    9ba0:	str	x0, [x1]
    9ba4:	cbz	x0, 9bc8 <PyNumber_FloorDivide@plt+0x4fc8>
    9ba8:	mov	x2, x19
    9bac:	ldr	x1, [x20, #8]
    9bb0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    9bb4:	add	x0, x0, #0x900
    9bb8:	bl	49a0 <Py_BuildValue@plt>
    9bbc:	mov	x19, x0
    9bc0:	ldr	x21, [sp, #32]
    9bc4:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9bc8:	mov	x0, x1
    9bcc:	bl	4810 <_Py_Dealloc@plt>
    9bd0:	b	9ba8 <PyNumber_FloorDivide@plt+0x4fa8>
    9bd4:	mov	x19, #0x0                   	// #0
    9bd8:	b	9a84 <PyNumber_FloorDivide@plt+0x4e84>
    9bdc:	stp	x29, x30, [sp, #-80]!
    9be0:	mov	x29, sp
    9be4:	stp	x19, x20, [sp, #16]
    9be8:	str	x21, [sp, #32]
    9bec:	mov	x20, x0
    9bf0:	ldr	x0, [x1, #8]
    9bf4:	ldr	x0, [x0, #168]
    9bf8:	tbz	w0, #28, 9cc4 <PyNumber_FloorDivide@plt+0x50c4>
    9bfc:	mov	x19, x1
    9c00:	add	x1, sp, #0x48
    9c04:	mov	x0, x19
    9c08:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    9c0c:	cbz	x0, 9d90 <PyNumber_FloorDivide@plt+0x5190>
    9c10:	str	wzr, [sp, #68]
    9c14:	str	wzr, [sp, #64]
    9c18:	str	wzr, [sp, #60]
    9c1c:	str	wzr, [sp, #56]
    9c20:	str	wzr, [sp, #48]
    9c24:	add	x7, sp, #0x30
    9c28:	add	x6, sp, #0x34
    9c2c:	add	x5, sp, #0x38
    9c30:	add	x4, sp, #0x3c
    9c34:	add	x3, sp, #0x40
    9c38:	add	x2, sp, #0x44
    9c3c:	ldr	x1, [sp, #72]
    9c40:	bl	5240 <PyNumber_FloorDivide@plt+0x640>
    9c44:	tbnz	w0, #31, 9d90 <PyNumber_FloorDivide@plt+0x5190>
    9c48:	cmp	w0, #0x1
    9c4c:	b.eq	9ce4 <PyNumber_FloorDivide@plt+0x50e4>  // b.none
    9c50:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    9c54:	ldr	x19, [x19, #4024]
    9c58:	ldr	x0, [x19]
    9c5c:	add	x0, x0, #0x1
    9c60:	str	x0, [x19]
    9c64:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    9c68:	add	x0, x0, #0x298
    9c6c:	add	x0, x0, #0x1a0
    9c70:	cmp	x20, x0
    9c74:	b.eq	9d5c <PyNumber_FloorDivide@plt+0x515c>  // b.none
    9c78:	mov	x6, x19
    9c7c:	ldr	w5, [sp, #56]
    9c80:	ldr	w4, [sp, #60]
    9c84:	ldr	w3, [sp, #64]
    9c88:	ldr	w2, [sp, #68]
    9c8c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9c90:	add	x1, x1, #0xad8
    9c94:	mov	x0, x20
    9c98:	bl	4950 <PyObject_CallFunction@plt>
    9c9c:	mov	x21, x0
    9ca0:	ldr	x0, [x19]
    9ca4:	sub	x0, x0, #0x1
    9ca8:	str	x0, [x19]
    9cac:	cbz	x0, 9d84 <PyNumber_FloorDivide@plt+0x5184>
    9cb0:	mov	x0, x21
    9cb4:	ldp	x19, x20, [sp, #16]
    9cb8:	ldr	x21, [sp, #32]
    9cbc:	ldp	x29, x30, [sp], #80
    9cc0:	ret
    9cc4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9cc8:	add	x1, x1, #0xda8
    9ccc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9cd0:	ldr	x0, [x0, #3976]
    9cd4:	ldr	x0, [x0]
    9cd8:	bl	4880 <PyErr_SetString@plt>
    9cdc:	mov	x21, #0x0                   	// #0
    9ce0:	b	9cb0 <PyNumber_FloorDivide@plt+0x50b0>
    9ce4:	ldr	w1, [sp, #52]
    9ce8:	cbnz	w1, 9d04 <PyNumber_FloorDivide@plt+0x5104>
    9cec:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    9cf0:	ldr	x19, [x0, #3960]
    9cf4:	ldr	x0, [x19]
    9cf8:	add	x0, x0, #0x1
    9cfc:	str	x0, [x19]
    9d00:	b	9c64 <PyNumber_FloorDivide@plt+0x5064>
    9d04:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    9d08:	add	x4, x4, #0x298
    9d0c:	add	x4, x4, #0x4e0
    9d10:	mov	w3, #0x1                   	// #1
    9d14:	ldr	w2, [sp, #48]
    9d18:	mov	w0, #0x0                   	// #0
    9d1c:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    9d20:	mov	x21, x0
    9d24:	cbz	x0, 9cb0 <PyNumber_FloorDivide@plt+0x50b0>
    9d28:	mov	x1, #0x0                   	// #0
    9d2c:	bl	5a40 <PyNumber_FloorDivide@plt+0xe40>
    9d30:	mov	x19, x0
    9d34:	ldr	x0, [x21]
    9d38:	sub	x0, x0, #0x1
    9d3c:	str	x0, [x21]
    9d40:	cbz	x0, 9d50 <PyNumber_FloorDivide@plt+0x5150>
    9d44:	mov	x21, x19
    9d48:	cbnz	x19, 9c64 <PyNumber_FloorDivide@plt+0x5064>
    9d4c:	b	9cb0 <PyNumber_FloorDivide@plt+0x50b0>
    9d50:	mov	x0, x21
    9d54:	bl	4810 <_Py_Dealloc@plt>
    9d58:	b	9d44 <PyNumber_FloorDivide@plt+0x5144>
    9d5c:	mov	x6, x0
    9d60:	mov	w5, #0x0                   	// #0
    9d64:	mov	x4, x19
    9d68:	ldr	w3, [sp, #56]
    9d6c:	ldr	w2, [sp, #60]
    9d70:	ldr	w1, [sp, #64]
    9d74:	ldr	w0, [sp, #68]
    9d78:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    9d7c:	mov	x21, x0
    9d80:	b	9ca0 <PyNumber_FloorDivide@plt+0x50a0>
    9d84:	mov	x0, x19
    9d88:	bl	4810 <_Py_Dealloc@plt>
    9d8c:	b	9cb0 <PyNumber_FloorDivide@plt+0x50b0>
    9d90:	mov	x2, x19
    9d94:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9d98:	add	x1, x1, #0xdd0
    9d9c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9da0:	ldr	x0, [x0, #3968]
    9da4:	ldr	x0, [x0]
    9da8:	bl	4b60 <PyErr_Format@plt>
    9dac:	mov	x21, #0x0                   	// #0
    9db0:	b	9cb0 <PyNumber_FloorDivide@plt+0x50b0>
    9db4:	stp	x29, x30, [sp, #-16]!
    9db8:	mov	x29, sp
    9dbc:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    9dc0:	add	x2, x2, #0x988
    9dc4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9dc8:	add	x1, x1, #0x6d0
    9dcc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9dd0:	ldr	x0, [x0, #3928]
    9dd4:	ldr	x0, [x0]
    9dd8:	bl	4b60 <PyErr_Format@plt>
    9ddc:	mov	x0, #0x0                   	// #0
    9de0:	ldp	x29, x30, [sp], #16
    9de4:	ret
    9de8:	stp	x29, x30, [sp, #-16]!
    9dec:	mov	x29, sp
    9df0:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    9df4:	add	x2, x2, #0x6c0
    9df8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    9dfc:	add	x1, x1, #0x6d0
    9e00:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    9e04:	ldr	x0, [x0, #3928]
    9e08:	ldr	x0, [x0]
    9e0c:	bl	4b60 <PyErr_Format@plt>
    9e10:	mov	x0, #0x0                   	// #0
    9e14:	ldp	x29, x30, [sp], #16
    9e18:	ret
    9e1c:	stp	x29, x30, [sp, #-64]!
    9e20:	mov	x29, sp
    9e24:	stp	x19, x20, [sp, #16]
    9e28:	stp	x21, x22, [sp, #32]
    9e2c:	mov	x21, x0
    9e30:	mov	x19, x1
    9e34:	mov	x20, x2
    9e38:	ldr	x1, [x1, #16]
    9e3c:	cmp	x1, #0x1
    9e40:	b.ne	9e60 <PyNumber_FloorDivide@plt+0x5260>  // b.any
    9e44:	ldr	x22, [x19, #24]
    9e48:	ldr	x0, [x22, #8]
    9e4c:	ldr	x0, [x0, #168]
    9e50:	tbz	w0, #27, 9efc <PyNumber_FloorDivide@plt+0x52fc>
    9e54:	ldr	x0, [x22, #16]
    9e58:	cmp	x0, #0x4
    9e5c:	b.eq	9ec0 <PyNumber_FloorDivide@plt+0x52c0>  // b.none
    9e60:	add	x6, sp, #0x34
    9e64:	add	x5, sp, #0x38
    9e68:	add	x4, sp, #0x3c
    9e6c:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    9e70:	add	x3, x3, #0xab8
    9e74:	add	x3, x3, #0x308
    9e78:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    9e7c:	add	x2, x2, #0x810
    9e80:	mov	x1, x20
    9e84:	mov	x0, x19
    9e88:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    9e8c:	mov	x19, #0x0                   	// #0
    9e90:	cbz	w0, 9eac <PyNumber_FloorDivide@plt+0x52ac>
    9e94:	mov	x3, x21
    9e98:	ldr	w2, [sp, #52]
    9e9c:	ldr	w1, [sp, #56]
    9ea0:	ldr	w0, [sp, #60]
    9ea4:	bl	61d8 <PyNumber_FloorDivide@plt+0x15d8>
    9ea8:	mov	x19, x0
    9eac:	mov	x0, x19
    9eb0:	ldp	x19, x20, [sp, #16]
    9eb4:	ldp	x21, x22, [sp, #32]
    9eb8:	ldp	x29, x30, [sp], #64
    9ebc:	ret
    9ec0:	ldrb	w0, [x22, #34]
    9ec4:	sub	w0, w0, #0x1
    9ec8:	cmp	w0, #0xb
    9ecc:	b.hi	9e60 <PyNumber_FloorDivide@plt+0x5260>  // b.pmore
    9ed0:	ldr	x2, [x21, #304]
    9ed4:	mov	x1, #0x0                   	// #0
    9ed8:	mov	x0, x21
    9edc:	blr	x2
    9ee0:	mov	x19, x0
    9ee4:	cbz	x0, 9eac <PyNumber_FloorDivide@plt+0x52ac>
    9ee8:	ldr	w0, [x22, #32]
    9eec:	stur	w0, [x19, #25]
    9ef0:	mov	x0, #0xffffffffffffffff    	// #-1
    9ef4:	str	x0, [x19, #16]
    9ef8:	b	9eac <PyNumber_FloorDivide@plt+0x52ac>
    9efc:	tbz	w0, #28, 9e60 <PyNumber_FloorDivide@plt+0x5260>
    9f00:	ldrsb	w0, [x22, #32]
    9f04:	tbz	w0, #31, 9fa8 <PyNumber_FloorDivide@plt+0x53a8>
    9f08:	ldr	x0, [x22, #16]
    9f0c:	cmp	x0, #0x4
    9f10:	b.ne	9e60 <PyNumber_FloorDivide@plt+0x5260>  // b.any
    9f14:	ldrb	w0, [x22, #32]
    9f18:	and	w1, w0, #0x1c
    9f1c:	cmp	w1, #0x4
    9f20:	b.eq	9fbc <PyNumber_FloorDivide@plt+0x53bc>  // b.none
    9f24:	cmp	w1, #0x8
    9f28:	b.eq	9ff0 <PyNumber_FloorDivide@plt+0x53f0>  // b.none
    9f2c:	tbz	w0, #5, a024 <PyNumber_FloorDivide@plt+0x5424>
    9f30:	add	x2, x22, #0x38
    9f34:	add	x1, x22, #0x50
    9f38:	tst	x0, #0x40
    9f3c:	csel	x0, x1, x2, eq  // eq = none
    9f40:	ldr	w0, [x0]
    9f44:	sub	w0, w0, #0x1
    9f48:	cmp	w0, #0xb
    9f4c:	cset	w0, ls  // ls = plast
    9f50:	cbz	w0, 9e60 <PyNumber_FloorDivide@plt+0x5260>
    9f54:	mov	x0, x22
    9f58:	bl	4960 <PyUnicode_AsLatin1String@plt>
    9f5c:	mov	x20, x0
    9f60:	cbz	x0, a030 <PyNumber_FloorDivide@plt+0x5430>
    9f64:	ldr	x2, [x21, #304]
    9f68:	mov	x1, #0x0                   	// #0
    9f6c:	mov	x0, x21
    9f70:	blr	x2
    9f74:	mov	x19, x0
    9f78:	cbz	x0, 9f8c <PyNumber_FloorDivide@plt+0x538c>
    9f7c:	ldr	w0, [x20, #32]
    9f80:	stur	w0, [x19, #25]
    9f84:	mov	x0, #0xffffffffffffffff    	// #-1
    9f88:	str	x0, [x19, #16]
    9f8c:	ldr	x0, [x20]
    9f90:	sub	x0, x0, #0x1
    9f94:	str	x0, [x20]
    9f98:	cbnz	x0, 9eac <PyNumber_FloorDivide@plt+0x52ac>
    9f9c:	mov	x0, x20
    9fa0:	bl	4810 <_Py_Dealloc@plt>
    9fa4:	b	9eac <PyNumber_FloorDivide@plt+0x52ac>
    9fa8:	mov	x0, x22
    9fac:	bl	4710 <_PyUnicode_Ready@plt>
    9fb0:	cbz	w0, 9f08 <PyNumber_FloorDivide@plt+0x5308>
    9fb4:	mov	x19, #0x0                   	// #0
    9fb8:	b	9eac <PyNumber_FloorDivide@plt+0x52ac>
    9fbc:	tbz	w0, #5, 9fe4 <PyNumber_FloorDivide@plt+0x53e4>
    9fc0:	add	x2, x22, #0x32
    9fc4:	add	x1, x22, #0x4a
    9fc8:	tst	x0, #0x40
    9fcc:	csel	x0, x1, x2, eq  // eq = none
    9fd0:	ldrb	w0, [x0]
    9fd4:	sub	w0, w0, #0x1
    9fd8:	cmp	w0, #0xb
    9fdc:	cset	w0, ls  // ls = plast
    9fe0:	b	9f50 <PyNumber_FloorDivide@plt+0x5350>
    9fe4:	ldr	x0, [x22, #72]
    9fe8:	add	x0, x0, #0x2
    9fec:	b	9fd0 <PyNumber_FloorDivide@plt+0x53d0>
    9ff0:	tbz	w0, #5, a018 <PyNumber_FloorDivide@plt+0x5418>
    9ff4:	add	x2, x22, #0x34
    9ff8:	add	x1, x22, #0x4c
    9ffc:	tst	x0, #0x40
    a000:	csel	x0, x1, x2, eq  // eq = none
    a004:	ldrh	w0, [x0]
    a008:	sub	w0, w0, #0x1
    a00c:	cmp	w0, #0xb
    a010:	cset	w0, ls  // ls = plast
    a014:	b	9f50 <PyNumber_FloorDivide@plt+0x5350>
    a018:	ldr	x0, [x22, #72]
    a01c:	add	x0, x0, #0x4
    a020:	b	a004 <PyNumber_FloorDivide@plt+0x5404>
    a024:	ldr	x0, [x22, #72]
    a028:	add	x0, x0, #0x8
    a02c:	b	9f40 <PyNumber_FloorDivide@plt+0x5340>
    a030:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a034:	ldr	x0, [x0, #4032]
    a038:	ldr	x0, [x0]
    a03c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    a040:	mov	x19, x20
    a044:	cbz	w0, 9eac <PyNumber_FloorDivide@plt+0x52ac>
    a048:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a04c:	add	x1, x1, #0xdf0
    a050:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a054:	ldr	x0, [x0, #3968]
    a058:	ldr	x0, [x0]
    a05c:	bl	4880 <PyErr_SetString@plt>
    a060:	b	9eac <PyNumber_FloorDivide@plt+0x52ac>
    a064:	stp	x29, x30, [sp, #-48]!
    a068:	mov	x29, sp
    a06c:	stp	x19, x20, [sp, #16]
    a070:	mov	x19, x0
    a074:	mov	x0, x1
    a078:	mov	x1, x2
    a07c:	ldrb	w2, [x19, #25]
    a080:	ldrb	w3, [x19, #26]
    a084:	orr	w2, w3, w2, lsl #8
    a088:	str	w2, [sp, #44]
    a08c:	ldrb	w2, [x19, #27]
    a090:	str	w2, [sp, #40]
    a094:	ldrb	w2, [x19, #28]
    a098:	str	w2, [sp, #36]
    a09c:	add	x6, sp, #0x24
    a0a0:	add	x5, sp, #0x28
    a0a4:	add	x4, sp, #0x2c
    a0a8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    a0ac:	add	x3, x3, #0xab8
    a0b0:	add	x3, x3, #0x308
    a0b4:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    a0b8:	add	x2, x2, #0xe60
    a0bc:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    a0c0:	cbz	w0, a124 <PyNumber_FloorDivide@plt+0x5524>
    a0c4:	ldr	w3, [sp, #36]
    a0c8:	ldr	w2, [sp, #40]
    a0cc:	ldr	w1, [sp, #44]
    a0d0:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    a0d4:	add	x0, x0, #0x810
    a0d8:	bl	49a0 <Py_BuildValue@plt>
    a0dc:	mov	x20, x0
    a0e0:	cbz	x0, a12c <PyNumber_FloorDivide@plt+0x552c>
    a0e4:	mov	x2, #0x0                   	// #0
    a0e8:	mov	x1, x0
    a0ec:	ldr	x0, [x19, #8]
    a0f0:	bl	9e1c <PyNumber_FloorDivide@plt+0x521c>
    a0f4:	mov	x19, x0
    a0f8:	ldr	x0, [x20]
    a0fc:	sub	x0, x0, #0x1
    a100:	str	x0, [x20]
    a104:	cbz	x0, a118 <PyNumber_FloorDivide@plt+0x5518>
    a108:	mov	x0, x19
    a10c:	ldp	x19, x20, [sp, #16]
    a110:	ldp	x29, x30, [sp], #48
    a114:	ret
    a118:	mov	x0, x20
    a11c:	bl	4810 <_Py_Dealloc@plt>
    a120:	b	a108 <PyNumber_FloorDivide@plt+0x5508>
    a124:	mov	x19, #0x0                   	// #0
    a128:	b	a108 <PyNumber_FloorDivide@plt+0x5508>
    a12c:	mov	x19, x0
    a130:	b	a108 <PyNumber_FloorDivide@plt+0x5508>
    a134:	stp	x29, x30, [sp, #-32]!
    a138:	mov	x29, sp
    a13c:	stp	x19, x20, [sp, #16]
    a140:	mov	x19, x0
    a144:	ldr	x0, [x0, #16]
    a148:	cmn	x0, #0x1
    a14c:	b.eq	a160 <PyNumber_FloorDivide@plt+0x5560>  // b.none
    a150:	ldr	x0, [x19, #16]
    a154:	ldp	x19, x20, [sp, #16]
    a158:	ldp	x29, x30, [sp], #32
    a15c:	ret
    a160:	ldr	w3, [x19, #32]
    a164:	ldr	w2, [x19, #28]
    a168:	ldr	w1, [x19, #24]
    a16c:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    a170:	add	x0, x0, #0x810
    a174:	bl	49a0 <Py_BuildValue@plt>
    a178:	mov	x20, x0
    a17c:	cbz	x0, a150 <PyNumber_FloorDivide@plt+0x5550>
    a180:	bl	4a50 <PyObject_Hash@plt>
    a184:	str	x0, [x19, #16]
    a188:	ldr	x0, [x20]
    a18c:	sub	x0, x0, #0x1
    a190:	str	x0, [x20]
    a194:	cbnz	x0, a150 <PyNumber_FloorDivide@plt+0x5550>
    a198:	mov	x0, x20
    a19c:	bl	4810 <_Py_Dealloc@plt>
    a1a0:	b	a150 <PyNumber_FloorDivide@plt+0x5550>
    a1a4:	stp	x29, x30, [sp, #-16]!
    a1a8:	mov	x29, sp
    a1ac:	ldr	x0, [x0, #16]
    a1b0:	bl	a134 <PyNumber_FloorDivide@plt+0x5534>
    a1b4:	ldp	x29, x30, [sp], #16
    a1b8:	ret
    a1bc:	stp	x29, x30, [sp, #-16]!
    a1c0:	mov	x29, sp
    a1c4:	ldrb	w1, [x0, #24]
    a1c8:	cbz	w1, a1ec <PyNumber_FloorDivide@plt+0x55ec>
    a1cc:	ldr	x0, [x0, #32]
    a1d0:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    a1d4:	ldr	x2, [x2, #4024]
    a1d8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a1dc:	add	x1, x1, #0x6b8
    a1e0:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    a1e4:	ldp	x29, x30, [sp], #16
    a1e8:	ret
    a1ec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a1f0:	ldr	x0, [x0, #4024]
    a1f4:	b	a1d0 <PyNumber_FloorDivide@plt+0x55d0>
    a1f8:	sub	sp, sp, #0x60
    a1fc:	stp	x29, x30, [sp, #16]
    a200:	add	x29, sp, #0x10
    a204:	stp	x19, x20, [sp, #32]
    a208:	stp	x21, x22, [sp, #48]
    a20c:	mov	x21, x0
    a210:	mov	x22, x1
    a214:	mov	x20, x2
    a218:	mov	x0, x3
    a21c:	mov	x2, x4
    a220:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a224:	add	x1, x1, #0x6c0
    a228:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    a22c:	cbz	x0, a3bc <PyNumber_FloorDivide@plt+0x57bc>
    a230:	mov	x19, x0
    a234:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a238:	ldr	x0, [x0, #4024]
    a23c:	cmp	x19, x0
    a240:	b.eq	a2dc <PyNumber_FloorDivide@plt+0x56dc>  // b.none
    a244:	stp	x23, x24, [sp, #64]
    a248:	ldr	w0, [x19, #24]
    a24c:	mov	w24, #0x2b                  	// #43
    a250:	tbnz	w0, #31, a308 <PyNumber_FloorDivide@plt+0x5708>
    a254:	ldr	w23, [x19, #32]
    a258:	ldr	w0, [x19, #28]
    a25c:	str	w0, [sp, #88]
    a260:	ldr	x2, [x19]
    a264:	sub	x2, x2, #0x1
    a268:	str	x2, [x19]
    a26c:	cbz	x2, a340 <PyNumber_FloorDivide@plt+0x5740>
    a270:	add	x2, sp, #0x58
    a274:	mov	w1, #0x3c                  	// #60
    a278:	ldr	w0, [sp, #88]
    a27c:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    a280:	str	w0, [sp, #92]
    a284:	add	x2, sp, #0x5c
    a288:	mov	w1, #0x3c                  	// #60
    a28c:	bl	4d18 <PyNumber_FloorDivide@plt+0x118>
    a290:	mov	w4, w0
    a294:	cbnz	w23, a34c <PyNumber_FloorDivide@plt+0x574c>
    a298:	ldr	w19, [sp, #88]
    a29c:	cbnz	w19, a388 <PyNumber_FloorDivide@plt+0x5788>
    a2a0:	ldr	w6, [sp, #92]
    a2a4:	mov	x5, x20
    a2a8:	mov	w3, w24
    a2ac:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    a2b0:	add	x2, x2, #0xea0
    a2b4:	mov	x1, x22
    a2b8:	mov	x0, x21
    a2bc:	bl	48c0 <PyOS_snprintf@plt>
    a2c0:	ldp	x23, x24, [sp, #64]
    a2c4:	mov	w0, w19
    a2c8:	ldp	x19, x20, [sp, #32]
    a2cc:	ldp	x21, x22, [sp, #48]
    a2d0:	ldp	x29, x30, [sp, #16]
    a2d4:	add	sp, sp, #0x60
    a2d8:	ret
    a2dc:	mov	x1, x0
    a2e0:	ldr	x0, [x0]
    a2e4:	sub	x0, x0, #0x1
    a2e8:	str	x0, [x1]
    a2ec:	cbz	x0, a2fc <PyNumber_FloorDivide@plt+0x56fc>
    a2f0:	strb	wzr, [x21]
    a2f4:	mov	w19, #0x0                   	// #0
    a2f8:	b	a2c4 <PyNumber_FloorDivide@plt+0x56c4>
    a2fc:	mov	x0, x1
    a300:	bl	4810 <_Py_Dealloc@plt>
    a304:	b	a2f0 <PyNumber_FloorDivide@plt+0x56f0>
    a308:	mov	x0, x19
    a30c:	bl	5d9c <PyNumber_FloorDivide@plt+0x119c>
    a310:	mov	x23, x0
    a314:	ldr	x0, [x19]
    a318:	sub	x0, x0, #0x1
    a31c:	str	x0, [x19]
    a320:	cbz	x0, a334 <PyNumber_FloorDivide@plt+0x5734>
    a324:	cbz	x23, a3c4 <PyNumber_FloorDivide@plt+0x57c4>
    a328:	mov	x19, x23
    a32c:	mov	w24, #0x2d                  	// #45
    a330:	b	a254 <PyNumber_FloorDivide@plt+0x5654>
    a334:	mov	x0, x19
    a338:	bl	4810 <_Py_Dealloc@plt>
    a33c:	b	a324 <PyNumber_FloorDivide@plt+0x5724>
    a340:	mov	x0, x19
    a344:	bl	4810 <_Py_Dealloc@plt>
    a348:	b	a270 <PyNumber_FloorDivide@plt+0x5670>
    a34c:	str	w23, [sp, #8]
    a350:	ldr	w0, [sp, #88]
    a354:	str	w0, [sp]
    a358:	mov	x7, x20
    a35c:	ldr	w6, [sp, #92]
    a360:	mov	x5, x20
    a364:	mov	w3, w24
    a368:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    a36c:	add	x2, x2, #0xe70
    a370:	mov	x1, x22
    a374:	mov	x0, x21
    a378:	bl	48c0 <PyOS_snprintf@plt>
    a37c:	mov	w19, #0x0                   	// #0
    a380:	ldp	x23, x24, [sp, #64]
    a384:	b	a2c4 <PyNumber_FloorDivide@plt+0x56c4>
    a388:	str	w19, [sp]
    a38c:	mov	x7, x20
    a390:	ldr	w6, [sp, #92]
    a394:	mov	x5, x20
    a398:	mov	w3, w24
    a39c:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    a3a0:	add	x2, x2, #0xe88
    a3a4:	mov	x1, x22
    a3a8:	mov	x0, x21
    a3ac:	bl	48c0 <PyOS_snprintf@plt>
    a3b0:	mov	w19, w23
    a3b4:	ldp	x23, x24, [sp, #64]
    a3b8:	b	a2c4 <PyNumber_FloorDivide@plt+0x56c4>
    a3bc:	mov	w19, #0xffffffff            	// #-1
    a3c0:	b	a2c4 <PyNumber_FloorDivide@plt+0x56c4>
    a3c4:	mov	w19, #0xffffffff            	// #-1
    a3c8:	ldp	x23, x24, [sp, #64]
    a3cc:	b	a2c4 <PyNumber_FloorDivide@plt+0x56c4>
    a3d0:	stp	x29, x30, [sp, #-272]!
    a3d4:	mov	x29, sp
    a3d8:	stp	x21, x22, [sp, #32]
    a3dc:	str	x0, [sp, #96]
    a3e0:	mov	x0, x1
    a3e4:	str	x2, [sp, #112]
    a3e8:	str	x3, [sp, #104]
    a3ec:	str	xzr, [sp, #256]
    a3f0:	add	x1, sp, #0x108
    a3f4:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    a3f8:	mov	x21, x0
    a3fc:	cbz	x0, a5c4 <PyNumber_FloorDivide@plt+0x59c4>
    a400:	stp	x19, x20, [sp, #16]
    a404:	stp	x25, x26, [sp, #64]
    a408:	ldr	x19, [sp, #264]
    a40c:	mov	x0, #0x7ffffffe            	// #2147483646
    a410:	cmp	x19, x0
    a414:	b.gt	a47c <PyNumber_FloorDivide@plt+0x587c>
    a418:	add	x19, x19, #0x1
    a41c:	mov	x1, x19
    a420:	mov	x0, #0x0                   	// #0
    a424:	bl	4800 <PyBytes_FromStringAndSize@plt>
    a428:	str	x0, [sp, #256]
    a42c:	cbz	x0, a480 <PyNumber_FloorDivide@plt+0x5880>
    a430:	stp	x23, x24, [sp, #48]
    a434:	stp	x27, x28, [sp, #80]
    a438:	bl	4b10 <PyBytes_AsString@plt>
    a43c:	mov	x20, x0
    a440:	mov	x24, x21
    a444:	ldrb	w0, [x24], #1
    a448:	cbz	w0, a99c <PyNumber_FloorDivide@plt+0x5d9c>
    a44c:	mov	x22, #0x0                   	// #0
    a450:	mov	x27, #0x0                   	// #0
    a454:	mov	x25, #0x0                   	// #0
    a458:	mov	x26, #0x0                   	// #0
    a45c:	add	x23, sp, #0x100
    a460:	adrp	x28, 25000 <PyInit__datetime@@Base+0x165b0>
    a464:	add	x28, x28, #0x298
    a468:	add	x1, x28, #0x1a0
    a46c:	str	x1, [sp, #128]
    a470:	add	x1, sp, #0x90
    a474:	str	x1, [sp, #120]
    a478:	b	a4f0 <PyNumber_FloorDivide@plt+0x58f0>
    a47c:	bl	4820 <PyErr_NoMemory@plt>
    a480:	mov	x25, #0x0                   	// #0
    a484:	mov	x21, #0x0                   	// #0
    a488:	b	a590 <PyNumber_FloorDivide@plt+0x5990>
    a48c:	ldrb	w0, [x21, #1]
    a490:	cbnz	w0, a4a0 <PyNumber_FloorDivide@plt+0x58a0>
    a494:	mov	x0, #0x1                   	// #1
    a498:	str	x0, [sp, #248]
    a49c:	b	a500 <PyNumber_FloorDivide@plt+0x5900>
    a4a0:	add	x24, x21, #0x2
    a4a4:	cmp	w0, #0x7a
    a4a8:	b.eq	a4c8 <PyNumber_FloorDivide@plt+0x58c8>  // b.none
    a4ac:	cmp	w0, #0x5a
    a4b0:	b.eq	a680 <PyNumber_FloorDivide@plt+0x5a80>  // b.none
    a4b4:	cmp	w0, #0x66
    a4b8:	b.eq	a7dc <PyNumber_FloorDivide@plt+0x5bdc>  // b.none
    a4bc:	mov	x0, #0x2                   	// #2
    a4c0:	str	x0, [sp, #248]
    a4c4:	b	a500 <PyNumber_FloorDivide@plt+0x5900>
    a4c8:	cbz	x26, a5d4 <PyNumber_FloorDivide@plt+0x59d4>
    a4cc:	add	x21, x26, #0x20
    a4d0:	ldr	x0, [x26, #16]
    a4d4:	str	x0, [sp, #248]
    a4d8:	ldr	x0, [sp, #248]
    a4dc:	cbnz	x0, a504 <PyNumber_FloorDivide@plt+0x5904>
    a4e0:	mov	x21, x24
    a4e4:	mov	x24, x21
    a4e8:	ldrb	w0, [x24], #1
    a4ec:	cbz	w0, a8e8 <PyNumber_FloorDivide@plt+0x5ce8>
    a4f0:	cmp	w0, #0x25
    a4f4:	b.eq	a48c <PyNumber_FloorDivide@plt+0x588c>  // b.none
    a4f8:	mov	x0, #0x1                   	// #1
    a4fc:	str	x0, [sp, #248]
    a500:	ldr	x0, [sp, #248]
    a504:	mov	x2, x0
    a508:	add	x0, x0, x22
    a50c:	cmp	x0, x19
    a510:	b.ls	a8c8 <PyNumber_FloorDivide@plt+0x5cc8>  // b.plast
    a514:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    a518:	cmp	x19, x0
    a51c:	b.hi	a558 <PyNumber_FloorDivide@plt+0x5958>  // b.pmore
    a520:	mov	x20, x0
    a524:	lsl	x19, x19, #1
    a528:	mov	x1, x19
    a52c:	mov	x0, x23
    a530:	bl	4770 <_PyBytes_Resize@plt>
    a534:	tbnz	w0, #31, a928 <PyNumber_FloorDivide@plt+0x5d28>
    a538:	ldr	x0, [sp, #256]
    a53c:	bl	4b10 <PyBytes_AsString@plt>
    a540:	ldr	x2, [sp, #248]
    a544:	add	x1, x2, x22
    a548:	cmp	x1, x19
    a54c:	b.ls	a8c4 <PyNumber_FloorDivide@plt+0x5cc4>  // b.plast
    a550:	cmp	x19, x20
    a554:	b.ls	a524 <PyNumber_FloorDivide@plt+0x5924>  // b.plast
    a558:	bl	4820 <PyErr_NoMemory@plt>
    a55c:	mov	x21, #0x0                   	// #0
    a560:	cbz	x27, a574 <PyNumber_FloorDivide@plt+0x5974>
    a564:	ldr	x0, [x27]
    a568:	sub	x0, x0, #0x1
    a56c:	str	x0, [x27]
    a570:	cbz	x0, a930 <PyNumber_FloorDivide@plt+0x5d30>
    a574:	cbz	x26, a974 <PyNumber_FloorDivide@plt+0x5d74>
    a578:	ldr	x0, [x26]
    a57c:	sub	x0, x0, #0x1
    a580:	str	x0, [x26]
    a584:	cbz	x0, a94c <PyNumber_FloorDivide@plt+0x5d4c>
    a588:	ldp	x23, x24, [sp, #48]
    a58c:	ldp	x27, x28, [sp, #80]
    a590:	cbz	x25, a5a4 <PyNumber_FloorDivide@plt+0x59a4>
    a594:	ldr	x0, [x25]
    a598:	sub	x0, x0, #0x1
    a59c:	str	x0, [x25]
    a5a0:	cbz	x0, a980 <PyNumber_FloorDivide@plt+0x5d80>
    a5a4:	ldr	x0, [sp, #256]
    a5a8:	cbz	x0, aa34 <PyNumber_FloorDivide@plt+0x5e34>
    a5ac:	ldr	x1, [x0]
    a5b0:	sub	x1, x1, #0x1
    a5b4:	str	x1, [x0]
    a5b8:	cbz	x1, a98c <PyNumber_FloorDivide@plt+0x5d8c>
    a5bc:	ldp	x19, x20, [sp, #16]
    a5c0:	ldp	x25, x26, [sp, #64]
    a5c4:	mov	x0, x21
    a5c8:	ldp	x21, x22, [sp, #32]
    a5cc:	ldp	x29, x30, [sp], #272
    a5d0:	ret
    a5d4:	ldr	x0, [sp, #96]
    a5d8:	bl	56cc <PyNumber_FloorDivide@plt+0xacc>
    a5dc:	mov	x21, x0
    a5e0:	mov	x1, #0x0                   	// #0
    a5e4:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    a5e8:	add	x0, x0, #0x938
    a5ec:	bl	4800 <PyBytes_FromStringAndSize@plt>
    a5f0:	str	x0, [sp, #136]
    a5f4:	cbz	x0, a668 <PyNumber_FloorDivide@plt+0x5a68>
    a5f8:	cmp	x21, #0x0
    a5fc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a600:	ldr	x0, [x0, #4024]
    a604:	ccmp	x21, x0, #0x4, ne  // ne = any
    a608:	b.ne	a614 <PyNumber_FloorDivide@plt+0x5a14>  // b.any
    a60c:	ldr	x26, [sp, #136]
    a610:	b	a4cc <PyNumber_FloorDivide@plt+0x58cc>
    a614:	ldr	x4, [sp, #104]
    a618:	mov	x3, x21
    a61c:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    a620:	add	x2, x2, #0x938
    a624:	mov	x1, #0x64                  	// #100
    a628:	ldr	x0, [sp, #120]
    a62c:	bl	a1f8 <PyNumber_FloorDivide@plt+0x55f8>
    a630:	tbnz	w0, #31, a668 <PyNumber_FloorDivide@plt+0x5a68>
    a634:	ldr	x1, [sp, #136]
    a638:	ldr	x0, [x1]
    a63c:	sub	x0, x0, #0x1
    a640:	str	x0, [x1]
    a644:	cbz	x0, a674 <PyNumber_FloorDivide@plt+0x5a74>
    a648:	ldr	x21, [sp, #120]
    a64c:	mov	x0, x21
    a650:	bl	4730 <strlen@plt>
    a654:	mov	x1, x0
    a658:	mov	x0, x21
    a65c:	bl	4800 <PyBytes_FromStringAndSize@plt>
    a660:	str	x0, [sp, #136]
    a664:	cbnz	x0, a60c <PyNumber_FloorDivide@plt+0x5a0c>
    a668:	mov	x21, x26
    a66c:	ldr	x26, [sp, #136]
    a670:	b	a560 <PyNumber_FloorDivide@plt+0x5960>
    a674:	mov	x0, x1
    a678:	bl	4810 <_Py_Dealloc@plt>
    a67c:	b	a648 <PyNumber_FloorDivide@plt+0x5a48>
    a680:	cbz	x25, a69c <PyNumber_FloorDivide@plt+0x5a9c>
    a684:	add	x1, sp, #0xf8
    a688:	mov	x0, x25
    a68c:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    a690:	mov	x21, x0
    a694:	cbnz	x0, a4d8 <PyNumber_FloorDivide@plt+0x58d8>
    a698:	b	a560 <PyNumber_FloorDivide@plt+0x5960>
    a69c:	ldr	x0, [sp, #96]
    a6a0:	bl	56cc <PyNumber_FloorDivide@plt+0xacc>
    a6a4:	str	x0, [sp, #136]
    a6a8:	mov	x1, #0x0                   	// #0
    a6ac:	mov	x0, #0x0                   	// #0
    a6b0:	bl	4b80 <PyUnicode_FromStringAndSize@plt>
    a6b4:	mov	x21, x0
    a6b8:	cbz	x0, a7c8 <PyNumber_FloorDivide@plt+0x5bc8>
    a6bc:	ldr	x2, [sp, #136]
    a6c0:	cmp	x2, #0x0
    a6c4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a6c8:	ldr	x0, [x0, #4024]
    a6cc:	ccmp	x2, x0, #0x4, ne  // ne = any
    a6d0:	b.eq	a760 <PyNumber_FloorDivide@plt+0x5b60>  // b.none
    a6d4:	ldr	x1, [sp, #104]
    a6d8:	mov	x0, x2
    a6dc:	bl	7910 <PyNumber_FloorDivide@plt+0x2d10>
    a6e0:	mov	x1, x0
    a6e4:	str	x0, [sp, #136]
    a6e8:	cbz	x0, a7b8 <PyNumber_FloorDivide@plt+0x5bb8>
    a6ec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a6f0:	ldr	x0, [x0, #4024]
    a6f4:	cmp	x1, x0
    a6f8:	b.eq	a768 <PyNumber_FloorDivide@plt+0x5b68>  // b.none
    a6fc:	ldr	x0, [x21]
    a700:	sub	x0, x0, #0x1
    a704:	str	x0, [x21]
    a708:	cbz	x0, a788 <PyNumber_FloorDivide@plt+0x5b88>
    a70c:	adrp	x4, f000 <PyInit__datetime@@Base+0x5b0>
    a710:	add	x4, x4, #0xeb0
    a714:	adrp	x3, f000 <PyInit__datetime@@Base+0x5b0>
    a718:	add	x3, x3, #0xeb8
    a71c:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    a720:	add	x2, x2, #0xec0
    a724:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    a728:	add	x1, x1, #0xab8
    a72c:	add	x1, x1, #0x328
    a730:	ldr	x0, [sp, #136]
    a734:	bl	4a60 <_PyObject_CallMethodId@plt>
    a738:	mov	x21, x0
    a73c:	ldr	x1, [sp, #136]
    a740:	ldr	x0, [x1]
    a744:	sub	x0, x0, #0x1
    a748:	str	x0, [x1]
    a74c:	cbz	x0, a794 <PyNumber_FloorDivide@plt+0x5b94>
    a750:	cbz	x21, a7c8 <PyNumber_FloorDivide@plt+0x5bc8>
    a754:	ldr	x0, [x21, #8]
    a758:	ldr	x0, [x0, #168]
    a75c:	tbz	w0, #28, a7a0 <PyNumber_FloorDivide@plt+0x5ba0>
    a760:	mov	x25, x21
    a764:	b	a684 <PyNumber_FloorDivide@plt+0x5a84>
    a768:	mov	x1, x0
    a76c:	ldr	x0, [x0]
    a770:	sub	x0, x0, #0x1
    a774:	str	x0, [x1]
    a778:	cbnz	x0, a760 <PyNumber_FloorDivide@plt+0x5b60>
    a77c:	mov	x0, x1
    a780:	bl	4810 <_Py_Dealloc@plt>
    a784:	b	a760 <PyNumber_FloorDivide@plt+0x5b60>
    a788:	mov	x0, x21
    a78c:	bl	4810 <_Py_Dealloc@plt>
    a790:	b	a70c <PyNumber_FloorDivide@plt+0x5b0c>
    a794:	mov	x0, x1
    a798:	bl	4810 <_Py_Dealloc@plt>
    a79c:	b	a750 <PyNumber_FloorDivide@plt+0x5b50>
    a7a0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a7a4:	add	x1, x1, #0xec8
    a7a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    a7ac:	ldr	x0, [x0, #3976]
    a7b0:	ldr	x0, [x0]
    a7b4:	bl	4880 <PyErr_SetString@plt>
    a7b8:	ldr	x0, [x21]
    a7bc:	sub	x0, x0, #0x1
    a7c0:	str	x0, [x21]
    a7c4:	cbz	x0, a7d0 <PyNumber_FloorDivide@plt+0x5bd0>
    a7c8:	mov	x21, x25
    a7cc:	b	a560 <PyNumber_FloorDivide@plt+0x5960>
    a7d0:	mov	x0, x21
    a7d4:	bl	4810 <_Py_Dealloc@plt>
    a7d8:	b	a7c8 <PyNumber_FloorDivide@plt+0x5bc8>
    a7dc:	cbz	x27, a7f0 <PyNumber_FloorDivide@plt+0x5bf0>
    a7e0:	add	x21, x27, #0x20
    a7e4:	ldr	x0, [x27, #16]
    a7e8:	str	x0, [sp, #248]
    a7ec:	b	a4d8 <PyNumber_FloorDivide@plt+0x58d8>
    a7f0:	ldr	x0, [sp, #96]
    a7f4:	ldr	x0, [x0, #8]
    a7f8:	ldr	x1, [sp, #128]
    a7fc:	cmp	x0, x1
    a800:	b.eq	a80c <PyNumber_FloorDivide@plt+0x5c0c>  // b.none
    a804:	bl	4b30 <PyType_IsSubtype@plt>
    a808:	cbz	w0, a860 <PyNumber_FloorDivide@plt+0x5c60>
    a80c:	ldr	x2, [sp, #96]
    a810:	ldrb	w0, [x2, #28]
    a814:	ldrb	w1, [x2, #29]
    a818:	lsl	w1, w1, #8
    a81c:	orr	w0, w1, w0, lsl #16
    a820:	ldrb	w2, [x2, #30]
    a824:	orr	w2, w0, w2
    a828:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a82c:	add	x1, x1, #0xef8
    a830:	ldr	x0, [sp, #120]
    a834:	bl	47e0 <sprintf@plt>
    a838:	ldr	x21, [sp, #120]
    a83c:	mov	x0, x21
    a840:	bl	4730 <strlen@plt>
    a844:	mov	x1, x0
    a848:	mov	x0, x21
    a84c:	bl	4800 <PyBytes_FromStringAndSize@plt>
    a850:	mov	x27, x0
    a854:	cbnz	x0, a7e0 <PyNumber_FloorDivide@plt+0x5be0>
    a858:	mov	x21, x0
    a85c:	b	a574 <PyNumber_FloorDivide@plt+0x5974>
    a860:	ldr	x0, [sp, #96]
    a864:	ldr	x0, [x0, #8]
    a868:	cmp	x0, x28
    a86c:	b.eq	a87c <PyNumber_FloorDivide@plt+0x5c7c>  // b.none
    a870:	mov	x1, x28
    a874:	bl	4b30 <PyType_IsSubtype@plt>
    a878:	cbz	w0, a8ac <PyNumber_FloorDivide@plt+0x5cac>
    a87c:	ldr	x2, [sp, #96]
    a880:	ldrb	w0, [x2, #32]
    a884:	ldrb	w1, [x2, #33]
    a888:	lsl	w1, w1, #8
    a88c:	orr	w0, w1, w0, lsl #16
    a890:	ldrb	w2, [x2, #34]
    a894:	orr	w2, w0, w2
    a898:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a89c:	add	x1, x1, #0xef8
    a8a0:	ldr	x0, [sp, #120]
    a8a4:	bl	47e0 <sprintf@plt>
    a8a8:	b	a838 <PyNumber_FloorDivide@plt+0x5c38>
    a8ac:	mov	w2, #0x0                   	// #0
    a8b0:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    a8b4:	add	x1, x1, #0xef8
    a8b8:	ldr	x0, [sp, #120]
    a8bc:	bl	47e0 <sprintf@plt>
    a8c0:	b	a838 <PyNumber_FloorDivide@plt+0x5c38>
    a8c4:	add	x20, x0, x22
    a8c8:	mov	x1, x21
    a8cc:	mov	x0, x20
    a8d0:	bl	46f0 <memcpy@plt>
    a8d4:	ldr	x0, [sp, #248]
    a8d8:	add	x20, x20, x0
    a8dc:	add	x22, x22, x0
    a8e0:	mov	x21, x24
    a8e4:	b	a4e4 <PyNumber_FloorDivide@plt+0x58e4>
    a8e8:	mov	x1, x22
    a8ec:	add	x0, sp, #0x100
    a8f0:	bl	4770 <_PyBytes_Resize@plt>
    a8f4:	mov	x21, #0x0                   	// #0
    a8f8:	tbnz	w0, #31, a560 <PyNumber_FloorDivide@plt+0x5960>
    a8fc:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    a900:	add	x0, x0, #0x8
    a904:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    a908:	mov	x21, x0
    a90c:	cbz	x0, a560 <PyNumber_FloorDivide@plt+0x5960>
    a910:	mov	x19, x0
    a914:	b	a9cc <PyNumber_FloorDivide@plt+0x5dcc>
    a918:	mov	x0, x21
    a91c:	bl	4810 <_Py_Dealloc@plt>
    a920:	mov	x21, x20
    a924:	b	aa18 <PyNumber_FloorDivide@plt+0x5e18>
    a928:	mov	x21, #0x0                   	// #0
    a92c:	b	a560 <PyNumber_FloorDivide@plt+0x5960>
    a930:	mov	x0, x27
    a934:	bl	4810 <_Py_Dealloc@plt>
    a938:	b	a574 <PyNumber_FloorDivide@plt+0x5974>
    a93c:	mov	x25, x19
    a940:	mov	x26, x19
    a944:	mov	x21, x19
    a948:	b	a574 <PyNumber_FloorDivide@plt+0x5974>
    a94c:	mov	x0, x26
    a950:	bl	4810 <_Py_Dealloc@plt>
    a954:	ldp	x23, x24, [sp, #48]
    a958:	ldp	x27, x28, [sp, #80]
    a95c:	b	a590 <PyNumber_FloorDivide@plt+0x5990>
    a960:	mov	x25, #0x0                   	// #0
    a964:	mov	x21, #0x0                   	// #0
    a968:	ldp	x23, x24, [sp, #48]
    a96c:	ldp	x27, x28, [sp, #80]
    a970:	b	a590 <PyNumber_FloorDivide@plt+0x5990>
    a974:	ldp	x23, x24, [sp, #48]
    a978:	ldp	x27, x28, [sp, #80]
    a97c:	b	a590 <PyNumber_FloorDivide@plt+0x5990>
    a980:	mov	x0, x25
    a984:	bl	4810 <_Py_Dealloc@plt>
    a988:	b	a5a4 <PyNumber_FloorDivide@plt+0x59a4>
    a98c:	bl	4810 <_Py_Dealloc@plt>
    a990:	ldp	x19, x20, [sp, #16]
    a994:	ldp	x25, x26, [sp, #64]
    a998:	b	a5c4 <PyNumber_FloorDivide@plt+0x59c4>
    a99c:	mov	x1, #0x0                   	// #0
    a9a0:	add	x0, sp, #0x100
    a9a4:	bl	4770 <_PyBytes_Resize@plt>
    a9a8:	tbnz	w0, #31, a960 <PyNumber_FloorDivide@plt+0x5d60>
    a9ac:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    a9b0:	add	x0, x0, #0x8
    a9b4:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    a9b8:	mov	x19, x0
    a9bc:	cbz	x0, a93c <PyNumber_FloorDivide@plt+0x5d3c>
    a9c0:	mov	x27, #0x0                   	// #0
    a9c4:	mov	x25, #0x0                   	// #0
    a9c8:	mov	x26, #0x0                   	// #0
    a9cc:	ldr	x0, [sp, #256]
    a9d0:	add	x0, x0, #0x20
    a9d4:	bl	4ad0 <PyUnicode_FromString@plt>
    a9d8:	mov	x21, x0
    a9dc:	cbz	x0, aa18 <PyNumber_FloorDivide@plt+0x5e18>
    a9e0:	mov	x4, #0x0                   	// #0
    a9e4:	ldr	x3, [sp, #112]
    a9e8:	mov	x2, x0
    a9ec:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    a9f0:	add	x1, x1, #0xab8
    a9f4:	add	x1, x1, #0x1d0
    a9f8:	mov	x0, x19
    a9fc:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    aa00:	mov	x20, x0
    aa04:	ldr	x0, [x21]
    aa08:	sub	x0, x0, #0x1
    aa0c:	str	x0, [x21]
    aa10:	cbz	x0, a918 <PyNumber_FloorDivide@plt+0x5d18>
    aa14:	mov	x21, x20
    aa18:	ldr	x0, [x19]
    aa1c:	sub	x0, x0, #0x1
    aa20:	str	x0, [x19]
    aa24:	cbnz	x0, a560 <PyNumber_FloorDivide@plt+0x5960>
    aa28:	mov	x0, x19
    aa2c:	bl	4810 <_Py_Dealloc@plt>
    aa30:	b	a560 <PyNumber_FloorDivide@plt+0x5960>
    aa34:	ldp	x19, x20, [sp, #16]
    aa38:	ldp	x25, x26, [sp, #64]
    aa3c:	b	a5c4 <PyNumber_FloorDivide@plt+0x59c4>
    aa40:	sub	sp, sp, #0x40
    aa44:	stp	x29, x30, [sp, #16]
    aa48:	add	x29, sp, #0x10
    aa4c:	stp	x19, x20, [sp, #32]
    aa50:	mov	x19, x0
    aa54:	mov	x0, x1
    aa58:	mov	x1, x2
    aa5c:	add	x4, sp, #0x38
    aa60:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    aa64:	add	x3, x3, #0xab8
    aa68:	add	x3, x3, #0x340
    aa6c:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    aa70:	add	x2, x2, #0xf00
    aa74:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    aa78:	cbz	w0, ab04 <PyNumber_FloorDivide@plt+0x5f04>
    aa7c:	mov	w0, #0xffffffff            	// #-1
    aa80:	str	w0, [sp, #8]
    aa84:	mov	w2, #0x1                   	// #1
    aa88:	str	w2, [sp]
    aa8c:	mov	w7, #0x0                   	// #0
    aa90:	ldrb	w6, [x19, #27]
    aa94:	ldrb	w5, [x19, #26]
    aa98:	ldrb	w4, [x19, #25]
    aa9c:	mov	w3, w2
    aaa0:	mov	w1, #0x76c                 	// #1900
    aaa4:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    aaa8:	add	x0, x0, #0xf10
    aaac:	bl	49a0 <Py_BuildValue@plt>
    aab0:	mov	x20, x0
    aab4:	cbz	x0, ab0c <PyNumber_FloorDivide@plt+0x5f0c>
    aab8:	adrp	x3, 24000 <PyInit__datetime@@Base+0x155b0>
    aabc:	ldr	x3, [x3, #4024]
    aac0:	mov	x2, x0
    aac4:	ldr	x1, [sp, #56]
    aac8:	mov	x0, x19
    aacc:	bl	a3d0 <PyNumber_FloorDivide@plt+0x57d0>
    aad0:	mov	x19, x0
    aad4:	ldr	x0, [x20]
    aad8:	sub	x0, x0, #0x1
    aadc:	str	x0, [x20]
    aae0:	cbz	x0, aaf8 <PyNumber_FloorDivide@plt+0x5ef8>
    aae4:	mov	x0, x19
    aae8:	ldp	x19, x20, [sp, #32]
    aaec:	ldp	x29, x30, [sp, #16]
    aaf0:	add	sp, sp, #0x40
    aaf4:	ret
    aaf8:	mov	x0, x20
    aafc:	bl	4810 <_Py_Dealloc@plt>
    ab00:	b	aae4 <PyNumber_FloorDivide@plt+0x5ee4>
    ab04:	mov	x19, #0x0                   	// #0
    ab08:	b	aae4 <PyNumber_FloorDivide@plt+0x5ee4>
    ab0c:	mov	x19, x0
    ab10:	b	aae4 <PyNumber_FloorDivide@plt+0x5ee4>
    ab14:	stp	x29, x30, [sp, #-48]!
    ab18:	mov	x29, sp
    ab1c:	stp	x19, x20, [sp, #16]
    ab20:	mov	x19, x0
    ab24:	mov	x0, x1
    ab28:	mov	x1, x2
    ab2c:	add	x4, sp, #0x28
    ab30:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    ab34:	add	x3, x3, #0xab8
    ab38:	add	x3, x3, #0x350
    ab3c:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    ab40:	add	x2, x2, #0xf00
    ab44:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    ab48:	cbz	w0, abb0 <PyNumber_FloorDivide@plt+0x5fb0>
    ab4c:	mov	x2, #0x0                   	// #0
    ab50:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    ab54:	add	x1, x1, #0xab8
    ab58:	add	x1, x1, #0x360
    ab5c:	mov	x0, x19
    ab60:	bl	4a60 <_PyObject_CallMethodId@plt>
    ab64:	mov	x20, x0
    ab68:	cbz	x0, abb8 <PyNumber_FloorDivide@plt+0x5fb8>
    ab6c:	mov	x3, x19
    ab70:	mov	x2, x0
    ab74:	ldr	x1, [sp, #40]
    ab78:	mov	x0, x19
    ab7c:	bl	a3d0 <PyNumber_FloorDivide@plt+0x57d0>
    ab80:	mov	x19, x0
    ab84:	ldr	x0, [x20]
    ab88:	sub	x0, x0, #0x1
    ab8c:	str	x0, [x20]
    ab90:	cbz	x0, aba4 <PyNumber_FloorDivide@plt+0x5fa4>
    ab94:	mov	x0, x19
    ab98:	ldp	x19, x20, [sp, #16]
    ab9c:	ldp	x29, x30, [sp], #48
    aba0:	ret
    aba4:	mov	x0, x20
    aba8:	bl	4810 <_Py_Dealloc@plt>
    abac:	b	ab94 <PyNumber_FloorDivide@plt+0x5f94>
    abb0:	mov	x19, #0x0                   	// #0
    abb4:	b	ab94 <PyNumber_FloorDivide@plt+0x5f94>
    abb8:	mov	x19, x0
    abbc:	b	ab94 <PyNumber_FloorDivide@plt+0x5f94>
    abc0:	stp	x29, x30, [sp, #-192]!
    abc4:	mov	x29, sp
    abc8:	stp	x19, x20, [sp, #16]
    abcc:	stp	x21, x22, [sp, #32]
    abd0:	mov	x19, x0
    abd4:	mov	x0, x1
    abd8:	mov	x1, x2
    abdc:	str	xzr, [sp, #80]
    abe0:	ldrb	w21, [x19, #28]
    abe4:	ldrb	w2, [x19, #29]
    abe8:	lsl	w2, w2, #8
    abec:	orr	w21, w2, w21, lsl #16
    abf0:	ldrb	w2, [x19, #30]
    abf4:	orr	w21, w21, w2
    abf8:	add	x4, sp, #0x50
    abfc:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    ac00:	add	x3, x3, #0xab8
    ac04:	add	x3, x3, #0x378
    ac08:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    ac0c:	add	x2, x2, #0xf20
    ac10:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    ac14:	cbz	w0, ad80 <PyNumber_FloorDivide@plt+0x6180>
    ac18:	ldr	x22, [sp, #80]
    ac1c:	cbz	x22, ac34 <PyNumber_FloorDivide@plt+0x6034>
    ac20:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    ac24:	add	x1, x1, #0xf30
    ac28:	mov	x0, x22
    ac2c:	bl	49f0 <strcmp@plt>
    ac30:	cbnz	w0, acd0 <PyNumber_FloorDivide@plt+0x60d0>
    ac34:	cmp	w21, #0x0
    ac38:	mov	x20, #0x2                   	// #2
    ac3c:	mov	x0, #0x4                   	// #4
    ac40:	csel	x20, x20, x0, eq  // eq = none
    ac44:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ac48:	add	x0, x0, #0xc18
    ac4c:	add	x20, x0, x20, lsl #4
    ac50:	mov	w4, w21
    ac54:	ldrb	w3, [x19, #27]
    ac58:	ldrb	w2, [x19, #26]
    ac5c:	ldrb	w1, [x19, #25]
    ac60:	ldr	x0, [x20, #8]
    ac64:	bl	4700 <PyUnicode_FromFormat@plt>
    ac68:	str	x0, [sp, #72]
    ac6c:	cbz	x0, acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ac70:	ldrb	w1, [x19, #24]
    ac74:	cbz	w1, acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ac78:	ldr	x3, [x19, #32]
    ac7c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    ac80:	ldr	x1, [x1, #4024]
    ac84:	cmp	x3, x1
    ac88:	b.eq	acc0 <PyNumber_FloorDivide@plt+0x60c0>  // b.none
    ac8c:	mov	x4, x1
    ac90:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    ac94:	add	x2, x2, #0xf50
    ac98:	mov	x1, #0x64                  	// #100
    ac9c:	add	x0, sp, #0x58
    aca0:	bl	a1f8 <PyNumber_FloorDivide@plt+0x55f8>
    aca4:	tbnz	w0, #31, ad58 <PyNumber_FloorDivide@plt+0x6158>
    aca8:	add	x0, sp, #0x58
    acac:	bl	4ad0 <PyUnicode_FromString@plt>
    acb0:	mov	x1, x0
    acb4:	add	x0, sp, #0x48
    acb8:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    acbc:	ldr	x0, [sp, #72]
    acc0:	ldp	x19, x20, [sp, #16]
    acc4:	ldp	x21, x22, [sp, #32]
    acc8:	ldp	x29, x30, [sp], #192
    accc:	ret
    acd0:	str	x23, [sp, #48]
    acd4:	mov	x20, #0x0                   	// #0
    acd8:	adrp	x23, 24000 <PyInit__datetime@@Base+0x155b0>
    acdc:	add	x23, x23, #0xc18
    ace0:	lsl	x0, x20, #4
    ace4:	ldr	x1, [x23, x0]
    ace8:	mov	x0, x22
    acec:	bl	49f0 <strcmp@plt>
    acf0:	cbz	w0, ad24 <PyNumber_FloorDivide@plt+0x6124>
    acf4:	add	x20, x20, #0x1
    acf8:	cmp	x20, #0x5
    acfc:	b.ne	ace0 <PyNumber_FloorDivide@plt+0x60e0>  // b.any
    ad00:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    ad04:	add	x1, x1, #0xf38
    ad08:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ad0c:	ldr	x0, [x0, #3968]
    ad10:	ldr	x0, [x0]
    ad14:	bl	4b60 <PyErr_Format@plt>
    ad18:	mov	x0, #0x0                   	// #0
    ad1c:	ldr	x23, [sp, #48]
    ad20:	b	acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ad24:	cmp	x20, #0x3
    ad28:	b.eq	ad3c <PyNumber_FloorDivide@plt+0x613c>  // b.none
    ad2c:	cmp	x20, #0x5
    ad30:	b.eq	ad00 <PyNumber_FloorDivide@plt+0x6100>  // b.none
    ad34:	ldr	x23, [sp, #48]
    ad38:	b	ac44 <PyNumber_FloorDivide@plt+0x6044>
    ad3c:	mov	w0, #0x4dd3                	// #19923
    ad40:	movk	w0, #0x1062, lsl #16
    ad44:	smull	x0, w21, w0
    ad48:	asr	x0, x0, #38
    ad4c:	sub	w21, w0, w21, asr #31
    ad50:	ldr	x23, [sp, #48]
    ad54:	b	ac44 <PyNumber_FloorDivide@plt+0x6044>
    ad58:	ldr	x2, [sp, #72]
    ad5c:	ldr	x1, [x2]
    ad60:	sub	x1, x1, #0x1
    ad64:	str	x1, [x2]
    ad68:	mov	x0, #0x0                   	// #0
    ad6c:	cbnz	x1, acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ad70:	mov	x0, x2
    ad74:	bl	4810 <_Py_Dealloc@plt>
    ad78:	mov	x0, #0x0                   	// #0
    ad7c:	b	acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ad80:	mov	x0, #0x0                   	// #0
    ad84:	b	acc0 <PyNumber_FloorDivide@plt+0x60c0>
    ad88:	sub	sp, sp, #0xd0
    ad8c:	stp	x29, x30, [sp, #16]
    ad90:	add	x29, sp, #0x10
    ad94:	stp	x19, x20, [sp, #32]
    ad98:	stp	x21, x22, [sp, #48]
    ad9c:	mov	x19, x0
    ada0:	mov	x0, x1
    ada4:	mov	x1, x2
    ada8:	mov	w2, #0x54                  	// #84
    adac:	str	w2, [sp, #204]
    adb0:	str	xzr, [sp, #192]
    adb4:	str	xzr, [sp, #80]
    adb8:	ldrb	w21, [x19, #32]
    adbc:	ldrb	w2, [x19, #33]
    adc0:	lsl	w2, w2, #8
    adc4:	orr	w21, w2, w21, lsl #16
    adc8:	ldrb	w2, [x19, #34]
    adcc:	orr	w21, w21, w2
    add0:	add	x5, sp, #0xc0
    add4:	add	x4, sp, #0xcc
    add8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    addc:	add	x3, x3, #0xab8
    ade0:	add	x3, x3, #0x388
    ade4:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    ade8:	add	x2, x2, #0xf58
    adec:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    adf0:	cbz	w0, af70 <PyNumber_FloorDivide@plt+0x6370>
    adf4:	ldr	x22, [sp, #192]
    adf8:	cbz	x22, ae10 <PyNumber_FloorDivide@plt+0x6210>
    adfc:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    ae00:	add	x1, x1, #0xf30
    ae04:	mov	x0, x22
    ae08:	bl	49f0 <strcmp@plt>
    ae0c:	cbnz	w0, ae80 <PyNumber_FloorDivide@plt+0x6280>
    ae10:	cmp	w21, #0x0
    ae14:	mov	x20, #0x2                   	// #2
    ae18:	mov	x0, #0x4                   	// #4
    ae1c:	csel	x20, x20, x0, eq  // eq = none
    ae20:	ldrb	w8, [x19, #25]
    ae24:	ldrb	w1, [x19, #26]
    ae28:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ae2c:	add	x0, x0, #0xc18
    ae30:	add	x20, x0, x20, lsl #4
    ae34:	str	w21, [sp]
    ae38:	ldrb	w7, [x19, #31]
    ae3c:	ldrb	w6, [x19, #30]
    ae40:	ldrb	w5, [x19, #29]
    ae44:	ldr	w4, [sp, #204]
    ae48:	ldrb	w3, [x19, #28]
    ae4c:	ldrb	w2, [x19, #27]
    ae50:	orr	w1, w1, w8, lsl #8
    ae54:	ldr	x0, [x20, #88]
    ae58:	bl	4700 <PyUnicode_FromFormat@plt>
    ae5c:	str	x0, [sp, #80]
    ae60:	cbz	x0, ae6c <PyNumber_FloorDivide@plt+0x626c>
    ae64:	ldrb	w1, [x19, #24]
    ae68:	cbnz	w1, af0c <PyNumber_FloorDivide@plt+0x630c>
    ae6c:	ldp	x19, x20, [sp, #32]
    ae70:	ldp	x21, x22, [sp, #48]
    ae74:	ldp	x29, x30, [sp, #16]
    ae78:	add	sp, sp, #0xd0
    ae7c:	ret
    ae80:	str	x23, [sp, #64]
    ae84:	mov	x20, #0x0                   	// #0
    ae88:	adrp	x23, 24000 <PyInit__datetime@@Base+0x155b0>
    ae8c:	add	x23, x23, #0xc18
    ae90:	add	x23, x23, #0x50
    ae94:	lsl	x0, x20, #4
    ae98:	ldr	x1, [x23, x0]
    ae9c:	mov	x0, x22
    aea0:	bl	49f0 <strcmp@plt>
    aea4:	cbz	w0, aed8 <PyNumber_FloorDivide@plt+0x62d8>
    aea8:	add	x20, x20, #0x1
    aeac:	cmp	x20, #0x5
    aeb0:	b.ne	ae94 <PyNumber_FloorDivide@plt+0x6294>  // b.any
    aeb4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    aeb8:	add	x1, x1, #0xf38
    aebc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    aec0:	ldr	x0, [x0, #3968]
    aec4:	ldr	x0, [x0]
    aec8:	bl	4b60 <PyErr_Format@plt>
    aecc:	mov	x0, #0x0                   	// #0
    aed0:	ldr	x23, [sp, #64]
    aed4:	b	ae6c <PyNumber_FloorDivide@plt+0x626c>
    aed8:	cmp	x20, #0x3
    aedc:	b.eq	aef0 <PyNumber_FloorDivide@plt+0x62f0>  // b.none
    aee0:	cmp	x20, #0x5
    aee4:	b.eq	aeb4 <PyNumber_FloorDivide@plt+0x62b4>  // b.none
    aee8:	ldr	x23, [sp, #64]
    aeec:	b	ae20 <PyNumber_FloorDivide@plt+0x6220>
    aef0:	mov	w0, #0x4dd3                	// #19923
    aef4:	movk	w0, #0x1062, lsl #16
    aef8:	smull	x0, w21, w0
    aefc:	asr	x0, x0, #38
    af00:	sub	w21, w0, w21, asr #31
    af04:	ldr	x23, [sp, #64]
    af08:	b	ae20 <PyNumber_FloorDivide@plt+0x6220>
    af0c:	mov	x4, x19
    af10:	ldr	x3, [x19, #40]
    af14:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    af18:	add	x2, x2, #0xf50
    af1c:	mov	x1, #0x64                  	// #100
    af20:	add	x0, sp, #0x58
    af24:	bl	a1f8 <PyNumber_FloorDivide@plt+0x55f8>
    af28:	tbnz	w0, #31, af48 <PyNumber_FloorDivide@plt+0x6348>
    af2c:	add	x0, sp, #0x58
    af30:	bl	4ad0 <PyUnicode_FromString@plt>
    af34:	mov	x1, x0
    af38:	add	x0, sp, #0x50
    af3c:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    af40:	ldr	x0, [sp, #80]
    af44:	b	ae6c <PyNumber_FloorDivide@plt+0x626c>
    af48:	ldr	x2, [sp, #80]
    af4c:	ldr	x1, [x2]
    af50:	sub	x1, x1, #0x1
    af54:	str	x1, [x2]
    af58:	mov	x0, #0x0                   	// #0
    af5c:	cbnz	x1, ae6c <PyNumber_FloorDivide@plt+0x626c>
    af60:	mov	x0, x2
    af64:	bl	4810 <_Py_Dealloc@plt>
    af68:	mov	x0, #0x0                   	// #0
    af6c:	b	ae6c <PyNumber_FloorDivide@plt+0x626c>
    af70:	mov	x0, #0x0                   	// #0
    af74:	b	ae6c <PyNumber_FloorDivide@plt+0x626c>
    af78:	stp	x29, x30, [sp, #-16]!
    af7c:	mov	x29, sp
    af80:	ldrb	w1, [x0, #24]
    af84:	cbz	w1, afa8 <PyNumber_FloorDivide@plt+0x63a8>
    af88:	ldr	x0, [x0, #32]
    af8c:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    af90:	ldr	x2, [x2, #4024]
    af94:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    af98:	add	x1, x1, #0x6c0
    af9c:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    afa0:	ldp	x29, x30, [sp], #16
    afa4:	ret
    afa8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    afac:	ldr	x0, [x0, #4024]
    afb0:	b	af8c <PyNumber_FloorDivide@plt+0x638c>
    afb4:	stp	x29, x30, [sp, #-64]!
    afb8:	mov	x29, sp
    afbc:	stp	x19, x20, [sp, #16]
    afc0:	str	x23, [sp, #48]
    afc4:	mov	x20, x0
    afc8:	mov	x19, x1
    afcc:	mov	w23, w2
    afd0:	ldr	x0, [x1, #8]
    afd4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    afd8:	add	x1, x1, #0x298
    afdc:	add	x1, x1, #0x1a0
    afe0:	cmp	x0, x1
    afe4:	b.eq	affc <PyNumber_FloorDivide@plt+0x63fc>  // b.none
    afe8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    afec:	add	x1, x1, #0x298
    aff0:	add	x1, x1, #0x1a0
    aff4:	bl	4b30 <PyType_IsSubtype@plt>
    aff8:	cbz	w0, b01c <PyNumber_FloorDivide@plt+0x641c>
    affc:	ldrb	w0, [x20, #24]
    b000:	cbz	w0, b1b8 <PyNumber_FloorDivide@plt+0x65b8>
    b004:	ldr	x0, [x20, #32]
    b008:	ldrb	w2, [x19, #24]
    b00c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    b010:	ldr	x1, [x1, #4024]
    b014:	cbz	w2, b1cc <PyNumber_FloorDivide@plt+0x65cc>
    b018:	b	b1c8 <PyNumber_FloorDivide@plt+0x65c8>
    b01c:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    b020:	ldr	x19, [x19, #3960]
    b024:	ldr	x0, [x19]
    b028:	add	x0, x0, #0x1
    b02c:	str	x0, [x19]
    b030:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b034:	mov	x2, #0x6                   	// #6
    b038:	add	x1, x19, #0x19
    b03c:	add	x0, x20, #0x19
    b040:	bl	49e0 <memcmp@plt>
    b044:	mov	w1, w23
    b048:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    b04c:	mov	x19, x0
    b050:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b054:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b058:	ldr	x0, [x0, #4024]
    b05c:	cmp	x22, x0
    b060:	ccmp	x21, x0, #0x4, ne  // ne = any
    b064:	b.ne	b090 <PyNumber_FloorDivide@plt+0x6490>  // b.any
    b068:	cmp	w23, #0x2
    b06c:	b.eq	b148 <PyNumber_FloorDivide@plt+0x6548>  // b.none
    b070:	cmp	w23, #0x3
    b074:	b.ne	b160 <PyNumber_FloorDivide@plt+0x6560>  // b.any
    b078:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    b07c:	ldr	x19, [x19, #4040]
    b080:	ldr	x0, [x19]
    b084:	add	x0, x0, #0x1
    b088:	str	x0, [x19]
    b08c:	b	b28c <PyNumber_FloorDivide@plt+0x668c>
    b090:	ldrb	w0, [x20, #25]
    b094:	mov	w3, #0xe10                 	// #3600
    b098:	ldrb	w2, [x20, #26]
    b09c:	lsl	w1, w2, #4
    b0a0:	sub	w1, w1, w2
    b0a4:	lsl	w1, w1, #2
    b0a8:	madd	w0, w0, w3, w1
    b0ac:	ldrb	w1, [x20, #27]
    b0b0:	ldrb	w2, [x19, #27]
    b0b4:	sub	w1, w1, w2
    b0b8:	add	w0, w0, w1
    b0bc:	ldrb	w1, [x19, #25]
    b0c0:	ldrb	w4, [x19, #26]
    b0c4:	lsl	w2, w4, #4
    b0c8:	sub	w2, w2, w4
    b0cc:	lsl	w2, w2, #2
    b0d0:	madd	w1, w1, w3, w2
    b0d4:	sub	w1, w0, w1
    b0d8:	ldr	w0, [x21, #24]
    b0dc:	mov	w2, #0xae80                	// #44672
    b0e0:	movk	w2, #0xfffe, lsl #16
    b0e4:	ldr	w3, [x21, #28]
    b0e8:	madd	w0, w0, w2, w1
    b0ec:	sub	w0, w0, w3
    b0f0:	ldr	w1, [x22, #24]
    b0f4:	ldr	w3, [x22, #28]
    b0f8:	msub	w1, w1, w2, w3
    b0fc:	adds	w0, w0, w1
    b100:	b.ne	b138 <PyNumber_FloorDivide@plt+0x6538>  // b.any
    b104:	ldrb	w0, [x20, #28]
    b108:	ldrb	w1, [x20, #29]
    b10c:	lsl	w1, w1, #8
    b110:	orr	w0, w1, w0, lsl #16
    b114:	ldrb	w1, [x20, #30]
    b118:	orr	w0, w0, w1
    b11c:	ldrb	w1, [x19, #28]
    b120:	ldrb	w2, [x19, #29]
    b124:	lsl	w2, w2, #8
    b128:	orr	w1, w2, w1, lsl #16
    b12c:	ldrb	w2, [x19, #30]
    b130:	orr	w1, w1, w2
    b134:	sub	w0, w0, w1
    b138:	mov	w1, w23
    b13c:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    b140:	mov	x19, x0
    b144:	b	b28c <PyNumber_FloorDivide@plt+0x668c>
    b148:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    b14c:	ldr	x19, [x19, #3992]
    b150:	ldr	x0, [x19]
    b154:	add	x0, x0, #0x1
    b158:	str	x0, [x19]
    b15c:	b	b28c <PyNumber_FloorDivide@plt+0x668c>
    b160:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    b164:	add	x1, x1, #0xf68
    b168:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b16c:	ldr	x0, [x0, #3976]
    b170:	ldr	x0, [x0]
    b174:	bl	4880 <PyErr_SetString@plt>
    b178:	mov	x19, #0x0                   	// #0
    b17c:	b	b28c <PyNumber_FloorDivide@plt+0x668c>
    b180:	mov	x0, x22
    b184:	bl	4810 <_Py_Dealloc@plt>
    b188:	ldp	x21, x22, [sp, #32]
    b18c:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b190:	mov	x19, x0
    b194:	ldp	x21, x22, [sp, #32]
    b198:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b19c:	ldr	x0, [x21]
    b1a0:	sub	x0, x0, #0x1
    b1a4:	str	x0, [x21]
    b1a8:	mov	x19, x22
    b1ac:	cbz	x0, b2d0 <PyNumber_FloorDivide@plt+0x66d0>
    b1b0:	ldp	x21, x22, [sp, #32]
    b1b4:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b1b8:	ldrb	w1, [x19, #24]
    b1bc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b1c0:	ldr	x0, [x0, #4024]
    b1c4:	cbz	w1, b034 <PyNumber_FloorDivide@plt+0x6434>
    b1c8:	ldr	x1, [x19, #32]
    b1cc:	cmp	x1, x0
    b1d0:	b.eq	b034 <PyNumber_FloorDivide@plt+0x6434>  // b.none
    b1d4:	stp	x21, x22, [sp, #32]
    b1d8:	mov	x1, #0x0                   	// #0
    b1dc:	mov	x0, x20
    b1e0:	bl	af78 <PyNumber_FloorDivide@plt+0x6378>
    b1e4:	mov	x21, x0
    b1e8:	cbz	x0, b190 <PyNumber_FloorDivide@plt+0x6590>
    b1ec:	mov	x1, #0x0                   	// #0
    b1f0:	mov	x0, x19
    b1f4:	bl	af78 <PyNumber_FloorDivide@plt+0x6378>
    b1f8:	mov	x22, x0
    b1fc:	cbz	x0, b19c <PyNumber_FloorDivide@plt+0x659c>
    b200:	cmp	x21, x0
    b204:	b.eq	b270 <PyNumber_FloorDivide@plt+0x6670>  // b.none
    b208:	ldr	x0, [x21, #8]
    b20c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    b210:	add	x1, x1, #0x298
    b214:	add	x1, x1, #0x4e0
    b218:	cmp	x0, x1
    b21c:	b.eq	b234 <PyNumber_FloorDivide@plt+0x6634>  // b.none
    b220:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    b224:	add	x1, x1, #0x298
    b228:	add	x1, x1, #0x4e0
    b22c:	bl	4b30 <PyType_IsSubtype@plt>
    b230:	cbz	w0, b054 <PyNumber_FloorDivide@plt+0x6454>
    b234:	ldr	x0, [x22, #8]
    b238:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    b23c:	add	x1, x1, #0x298
    b240:	add	x1, x1, #0x4e0
    b244:	cmp	x0, x1
    b248:	b.eq	b260 <PyNumber_FloorDivide@plt+0x6660>  // b.none
    b24c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    b250:	add	x1, x1, #0x298
    b254:	add	x1, x1, #0x4e0
    b258:	bl	4b30 <PyType_IsSubtype@plt>
    b25c:	cbz	w0, b054 <PyNumber_FloorDivide@plt+0x6454>
    b260:	mov	x1, x22
    b264:	mov	x0, x21
    b268:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    b26c:	cbnz	w0, b054 <PyNumber_FloorDivide@plt+0x6454>
    b270:	mov	x2, #0x6                   	// #6
    b274:	add	x1, x19, #0x19
    b278:	add	x0, x20, #0x19
    b27c:	bl	49e0 <memcmp@plt>
    b280:	mov	w1, w23
    b284:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    b288:	mov	x19, x0
    b28c:	ldr	x0, [x21]
    b290:	sub	x0, x0, #0x1
    b294:	str	x0, [x21]
    b298:	cbz	x0, b2c4 <PyNumber_FloorDivide@plt+0x66c4>
    b29c:	ldr	x0, [x22]
    b2a0:	sub	x0, x0, #0x1
    b2a4:	str	x0, [x22]
    b2a8:	cbz	x0, b180 <PyNumber_FloorDivide@plt+0x6580>
    b2ac:	ldp	x21, x22, [sp, #32]
    b2b0:	mov	x0, x19
    b2b4:	ldp	x19, x20, [sp, #16]
    b2b8:	ldr	x23, [sp, #48]
    b2bc:	ldp	x29, x30, [sp], #64
    b2c0:	ret
    b2c4:	mov	x0, x21
    b2c8:	bl	4810 <_Py_Dealloc@plt>
    b2cc:	b	b29c <PyNumber_FloorDivide@plt+0x669c>
    b2d0:	mov	x0, x21
    b2d4:	bl	4810 <_Py_Dealloc@plt>
    b2d8:	ldp	x21, x22, [sp, #32]
    b2dc:	b	b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b2e0:	stp	x29, x30, [sp, #-64]!
    b2e4:	mov	x29, sp
    b2e8:	stp	x19, x20, [sp, #16]
    b2ec:	mov	x19, x0
    b2f0:	ldr	x20, [x0, #16]
    b2f4:	cmn	x20, #0x1
    b2f8:	b.eq	b310 <PyNumber_FloorDivide@plt+0x6710>  // b.none
    b2fc:	ldr	x20, [x19, #16]
    b300:	mov	x0, x20
    b304:	ldp	x19, x20, [sp, #16]
    b308:	ldp	x29, x30, [sp], #64
    b30c:	ret
    b310:	stp	x21, x22, [sp, #32]
    b314:	ldrb	w0, [x0, #31]
    b318:	cbz	w0, b374 <PyNumber_FloorDivide@plt+0x6774>
    b31c:	ldrb	w0, [x19, #25]
    b320:	ldrb	w1, [x19, #26]
    b324:	ldrb	w2, [x19, #27]
    b328:	ldrb	w3, [x19, #28]
    b32c:	ldrb	w4, [x19, #29]
    b330:	lsl	w4, w4, #8
    b334:	orr	w3, w4, w3, lsl #16
    b338:	ldrb	w4, [x19, #30]
    b33c:	orr	w3, w3, w4
    b340:	ldrb	w4, [x19, #24]
    b344:	cbz	w4, b368 <PyNumber_FloorDivide@plt+0x6768>
    b348:	ldr	x4, [x19, #32]
    b34c:	ldr	x6, [x19, #8]
    b350:	mov	w5, #0x0                   	// #0
    b354:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    b358:	mov	x22, x0
    b35c:	cbnz	x0, b384 <PyNumber_FloorDivide@plt+0x6784>
    b360:	ldp	x21, x22, [sp, #32]
    b364:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b368:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    b36c:	ldr	x4, [x4, #4024]
    b370:	b	b34c <PyNumber_FloorDivide@plt+0x674c>
    b374:	ldr	x0, [x19]
    b378:	add	x0, x0, #0x1
    b37c:	str	x0, [x19]
    b380:	mov	x22, x19
    b384:	mov	x1, #0x0                   	// #0
    b388:	mov	x0, x22
    b38c:	bl	af78 <PyNumber_FloorDivide@plt+0x6378>
    b390:	mov	x21, x0
    b394:	ldr	x0, [x22]
    b398:	sub	x0, x0, #0x1
    b39c:	str	x0, [x22]
    b3a0:	cbz	x0, b470 <PyNumber_FloorDivide@plt+0x6870>
    b3a4:	cbz	x21, b514 <PyNumber_FloorDivide@plt+0x6914>
    b3a8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b3ac:	ldr	x0, [x0, #4024]
    b3b0:	cmp	x21, x0
    b3b4:	b.eq	b47c <PyNumber_FloorDivide@plt+0x687c>  // b.none
    b3b8:	ldrb	w2, [x19, #28]
    b3bc:	ldrb	w0, [x19, #29]
    b3c0:	lsl	w0, w0, #8
    b3c4:	orr	w2, w0, w2, lsl #16
    b3c8:	ldrb	w5, [x19, #30]
    b3cc:	ldrb	w0, [x19, #25]
    b3d0:	ldrb	w3, [x19, #26]
    b3d4:	lsl	w1, w3, #4
    b3d8:	sub	w1, w1, w3
    b3dc:	lsl	w1, w1, #2
    b3e0:	mov	w3, #0xe10                 	// #3600
    b3e4:	madd	w1, w0, w3, w1
    b3e8:	ldrb	w0, [x19, #27]
    b3ec:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    b3f0:	add	x4, x4, #0x298
    b3f4:	add	x4, x4, #0x4e0
    b3f8:	mov	w3, #0x1                   	// #1
    b3fc:	orr	w2, w2, w5
    b400:	add	w1, w1, w0
    b404:	mov	w0, #0x0                   	// #0
    b408:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    b40c:	mov	x22, x0
    b410:	cbz	x0, b490 <PyNumber_FloorDivide@plt+0x6890>
    b414:	str	x23, [sp, #48]
    b418:	mov	x1, x21
    b41c:	bl	5dd8 <PyNumber_FloorDivide@plt+0x11d8>
    b420:	mov	x23, x0
    b424:	ldr	x0, [x22]
    b428:	sub	x0, x0, #0x1
    b42c:	str	x0, [x22]
    b430:	cbz	x0, b4b8 <PyNumber_FloorDivide@plt+0x68b8>
    b434:	cbz	x23, b4c4 <PyNumber_FloorDivide@plt+0x68c4>
    b438:	mov	x0, x23
    b43c:	bl	4a50 <PyObject_Hash@plt>
    b440:	str	x0, [x19, #16]
    b444:	ldr	x0, [x23]
    b448:	sub	x0, x0, #0x1
    b44c:	str	x0, [x23]
    b450:	cbz	x0, b4f4 <PyNumber_FloorDivide@plt+0x68f4>
    b454:	ldr	x23, [sp, #48]
    b458:	ldr	x0, [x21]
    b45c:	sub	x0, x0, #0x1
    b460:	str	x0, [x21]
    b464:	cbz	x0, b504 <PyNumber_FloorDivide@plt+0x6904>
    b468:	ldp	x21, x22, [sp, #32]
    b46c:	b	b2fc <PyNumber_FloorDivide@plt+0x66fc>
    b470:	mov	x0, x22
    b474:	bl	4810 <_Py_Dealloc@plt>
    b478:	b	b3a4 <PyNumber_FloorDivide@plt+0x67a4>
    b47c:	mov	x1, #0x6                   	// #6
    b480:	add	x0, x19, #0x19
    b484:	bl	48b0 <_Py_HashBytes@plt>
    b488:	str	x0, [x19, #16]
    b48c:	b	b458 <PyNumber_FloorDivide@plt+0x6858>
    b490:	ldr	x0, [x21]
    b494:	sub	x0, x0, #0x1
    b498:	str	x0, [x21]
    b49c:	cbz	x0, b4a8 <PyNumber_FloorDivide@plt+0x68a8>
    b4a0:	ldp	x21, x22, [sp, #32]
    b4a4:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b4a8:	mov	x0, x21
    b4ac:	bl	4810 <_Py_Dealloc@plt>
    b4b0:	ldp	x21, x22, [sp, #32]
    b4b4:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b4b8:	mov	x0, x22
    b4bc:	bl	4810 <_Py_Dealloc@plt>
    b4c0:	b	b434 <PyNumber_FloorDivide@plt+0x6834>
    b4c4:	ldr	x0, [x21]
    b4c8:	sub	x0, x0, #0x1
    b4cc:	str	x0, [x21]
    b4d0:	cbz	x0, b4e0 <PyNumber_FloorDivide@plt+0x68e0>
    b4d4:	ldp	x21, x22, [sp, #32]
    b4d8:	ldr	x23, [sp, #48]
    b4dc:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b4e0:	mov	x0, x21
    b4e4:	bl	4810 <_Py_Dealloc@plt>
    b4e8:	ldp	x21, x22, [sp, #32]
    b4ec:	ldr	x23, [sp, #48]
    b4f0:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b4f4:	mov	x0, x23
    b4f8:	bl	4810 <_Py_Dealloc@plt>
    b4fc:	ldr	x23, [sp, #48]
    b500:	b	b458 <PyNumber_FloorDivide@plt+0x6858>
    b504:	mov	x0, x21
    b508:	bl	4810 <_Py_Dealloc@plt>
    b50c:	ldp	x21, x22, [sp, #32]
    b510:	b	b2fc <PyNumber_FloorDivide@plt+0x66fc>
    b514:	ldp	x21, x22, [sp, #32]
    b518:	b	b300 <PyNumber_FloorDivide@plt+0x6700>
    b51c:	stp	x29, x30, [sp, #-96]!
    b520:	mov	x29, sp
    b524:	stp	x19, x20, [sp, #16]
    b528:	stp	x21, x22, [sp, #32]
    b52c:	stp	x23, x24, [sp, #48]
    b530:	stp	x25, x26, [sp, #64]
    b534:	mov	w24, w0
    b538:	mov	w26, w1
    b53c:	mov	w25, w2
    b540:	mov	w23, w3
    b544:	mov	w22, w4
    b548:	mov	w21, w5
    b54c:	mov	w20, w6
    b550:	mov	x19, x7
    b554:	bl	6120 <PyNumber_FloorDivide@plt+0x1520>
    b558:	tbnz	w0, #31, b638 <PyNumber_FloorDivide@plt+0x6a38>
    b55c:	ldr	w4, [sp, #96]
    b560:	mov	w3, w20
    b564:	mov	w2, w21
    b568:	mov	w1, w22
    b56c:	mov	w0, w23
    b570:	bl	627c <PyNumber_FloorDivide@plt+0x167c>
    b574:	mov	w1, w0
    b578:	mov	x0, #0x0                   	// #0
    b57c:	tbnz	w1, #31, b620 <PyNumber_FloorDivide@plt+0x6a20>
    b580:	mov	x0, x19
    b584:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    b588:	tbnz	w0, #31, b640 <PyNumber_FloorDivide@plt+0x6a40>
    b58c:	str	x27, [sp, #80]
    b590:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b594:	ldr	x0, [x0, #4024]
    b598:	cmp	x19, x0
    b59c:	cset	w27, ne  // ne = any
    b5a0:	ldr	x0, [sp, #104]
    b5a4:	ldr	x2, [x0, #304]
    b5a8:	cset	x1, ne  // ne = any
    b5ac:	blr	x2
    b5b0:	cbz	x0, b648 <PyNumber_FloorDivide@plt+0x6a48>
    b5b4:	strb	w27, [x0, #24]
    b5b8:	mov	x1, #0xffffffffffffffff    	// #-1
    b5bc:	str	x1, [x0, #16]
    b5c0:	asr	w1, w24, #8
    b5c4:	strb	w1, [x0, #25]
    b5c8:	strb	w24, [x0, #26]
    b5cc:	strb	w26, [x0, #27]
    b5d0:	strb	w25, [x0, #28]
    b5d4:	strb	w23, [x0, #29]
    b5d8:	strb	w22, [x0, #30]
    b5dc:	strb	w21, [x0, #31]
    b5e0:	asr	w1, w20, #16
    b5e4:	strb	w1, [x0, #32]
    b5e8:	asr	w1, w20, #8
    b5ec:	strb	w1, [x0, #33]
    b5f0:	strb	w20, [x0, #34]
    b5f4:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    b5f8:	ldr	x1, [x1, #4024]
    b5fc:	cmp	x19, x1
    b600:	b.eq	b614 <PyNumber_FloorDivide@plt+0x6a14>  // b.none
    b604:	ldr	x1, [x19]
    b608:	add	x1, x1, #0x1
    b60c:	str	x1, [x19]
    b610:	str	x19, [x0, #40]
    b614:	ldrb	w1, [sp, #96]
    b618:	strb	w1, [x0, #35]
    b61c:	ldr	x27, [sp, #80]
    b620:	ldp	x19, x20, [sp, #16]
    b624:	ldp	x21, x22, [sp, #32]
    b628:	ldp	x23, x24, [sp, #48]
    b62c:	ldp	x25, x26, [sp, #64]
    b630:	ldp	x29, x30, [sp], #96
    b634:	ret
    b638:	mov	x0, #0x0                   	// #0
    b63c:	b	b620 <PyNumber_FloorDivide@plt+0x6a20>
    b640:	mov	x0, #0x0                   	// #0
    b644:	b	b620 <PyNumber_FloorDivide@plt+0x6a20>
    b648:	ldr	x27, [sp, #80]
    b64c:	b	b620 <PyNumber_FloorDivide@plt+0x6a20>
    b650:	sub	sp, sp, #0x20
    b654:	stp	x29, x30, [sp, #16]
    b658:	add	x29, sp, #0x10
    b65c:	mov	w8, w0
    b660:	ldr	x0, [sp, #40]
    b664:	adrp	x9, 25000 <PyInit__datetime@@Base+0x165b0>
    b668:	add	x9, x9, #0x298
    b66c:	cmp	x0, x9
    b670:	b.eq	b6ac <PyNumber_FloorDivide@plt+0x6aac>  // b.none
    b674:	str	x7, [sp, #8]
    b678:	str	w6, [sp]
    b67c:	mov	w7, w5
    b680:	mov	w6, w4
    b684:	mov	w5, w3
    b688:	mov	w4, w2
    b68c:	mov	w3, w1
    b690:	mov	w2, w8
    b694:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    b698:	add	x1, x1, #0xfa0
    b69c:	bl	4950 <PyObject_CallFunction@plt>
    b6a0:	ldp	x29, x30, [sp, #16]
    b6a4:	add	sp, sp, #0x20
    b6a8:	ret
    b6ac:	str	x9, [sp, #8]
    b6b0:	ldr	w0, [sp, #32]
    b6b4:	str	w0, [sp]
    b6b8:	mov	w0, w8
    b6bc:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    b6c0:	b	b6a0 <PyNumber_FloorDivide@plt+0x6aa0>
    b6c4:	sub	sp, sp, #0xc0
    b6c8:	stp	x29, x30, [sp, #16]
    b6cc:	add	x29, sp, #0x10
    b6d0:	stp	x19, x20, [sp, #32]
    b6d4:	stp	x21, x22, [sp, #48]
    b6d8:	stp	x23, x24, [sp, #64]
    b6dc:	str	x0, [sp, #112]
    b6e0:	mov	x20, x1
    b6e4:	mov	x23, x2
    b6e8:	str	w3, [sp, #124]
    b6ec:	mov	x21, x4
    b6f0:	add	x1, sp, #0x88
    b6f4:	mov	x0, x2
    b6f8:	blr	x20
    b6fc:	cbnz	w0, b81c <PyNumber_FloorDivide@plt+0x6c1c>
    b700:	stp	x25, x26, [sp, #80]
    b704:	stp	x27, x28, [sp, #96]
    b708:	mov	w19, w0
    b70c:	ldr	w24, [sp, #156]
    b710:	add	w24, w24, #0x76c
    b714:	ldr	w25, [sp, #152]
    b718:	add	w25, w25, #0x1
    b71c:	ldr	w26, [sp, #148]
    b720:	ldr	w27, [sp, #144]
    b724:	ldr	w28, [sp, #140]
    b728:	ldr	w22, [sp, #136]
    b72c:	cmp	w22, #0x3b
    b730:	mov	w0, #0x3b                  	// #59
    b734:	csel	w22, w22, w0, le
    b738:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b73c:	ldr	x0, [x0, #4024]
    b740:	cmp	x21, x0
    b744:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b748:	ldr	x0, [x0, #4064]
    b74c:	ccmp	x20, x0, #0x0, eq  // eq = none
    b750:	b.eq	b7a4 <PyNumber_FloorDivide@plt+0x6ba4>  // b.none
    b754:	ldr	x0, [sp, #112]
    b758:	str	x0, [sp, #8]
    b75c:	str	w19, [sp]
    b760:	mov	x7, x21
    b764:	ldr	w6, [sp, #124]
    b768:	mov	w5, w22
    b76c:	mov	w4, w28
    b770:	mov	w3, w27
    b774:	mov	w2, w26
    b778:	mov	w1, w25
    b77c:	mov	w0, w24
    b780:	bl	b650 <PyNumber_FloorDivide@plt+0x6a50>
    b784:	ldp	x25, x26, [sp, #80]
    b788:	ldp	x27, x28, [sp, #96]
    b78c:	ldp	x19, x20, [sp, #32]
    b790:	ldp	x21, x22, [sp, #48]
    b794:	ldp	x23, x24, [sp, #64]
    b798:	ldp	x29, x30, [sp, #16]
    b79c:	add	sp, sp, #0xc0
    b7a0:	ret
    b7a4:	mov	w5, w22
    b7a8:	mov	w4, w28
    b7ac:	mov	w3, w27
    b7b0:	mov	w2, w26
    b7b4:	mov	w1, w25
    b7b8:	mov	w0, w24
    b7bc:	bl	582c <PyNumber_FloorDivide@plt+0xc2c>
    b7c0:	mov	x20, x0
    b7c4:	mov	x0, #0xf700                	// #63232
    b7c8:	movk	x0, #0x7791, lsl #16
    b7cc:	movk	x0, #0xe, lsl #32
    b7d0:	add	x0, x23, x0
    b7d4:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    b7d8:	cmn	x0, #0x1
    b7dc:	b.eq	b824 <PyNumber_FloorDivide@plt+0x6c24>  // b.none
    b7e0:	sub	x1, x20, #0x15, lsl #12
    b7e4:	sub	x1, x1, #0x180
    b7e8:	subs	x0, x1, x0
    b7ec:	b.pl	b754 <PyNumber_FloorDivide@plt+0x6b54>  // b.nfrst
    b7f0:	mov	x1, #0x4880                	// #18560
    b7f4:	movk	x1, #0x7793, lsl #16
    b7f8:	movk	x1, #0xe, lsl #32
    b7fc:	add	x23, x23, x1
    b800:	add	x0, x23, x0
    b804:	bl	58c0 <PyNumber_FloorDivide@plt+0xcc0>
    b808:	cmn	x0, #0x1
    b80c:	b.eq	b834 <PyNumber_FloorDivide@plt+0x6c34>  // b.none
    b810:	cmp	x20, x0
    b814:	cset	w19, eq  // eq = none
    b818:	b	b754 <PyNumber_FloorDivide@plt+0x6b54>
    b81c:	mov	x0, #0x0                   	// #0
    b820:	b	b78c <PyNumber_FloorDivide@plt+0x6b8c>
    b824:	mov	x0, #0x0                   	// #0
    b828:	ldp	x25, x26, [sp, #80]
    b82c:	ldp	x27, x28, [sp, #96]
    b830:	b	b78c <PyNumber_FloorDivide@plt+0x6b8c>
    b834:	mov	x0, #0x0                   	// #0
    b838:	ldp	x25, x26, [sp, #80]
    b83c:	ldp	x27, x28, [sp, #96]
    b840:	b	b78c <PyNumber_FloorDivide@plt+0x6b8c>
    b844:	stp	x29, x30, [sp, #-64]!
    b848:	mov	x29, sp
    b84c:	stp	x19, x20, [sp, #16]
    b850:	str	x21, [sp, #32]
    b854:	mov	x19, x0
    b858:	mov	x20, x1
    b85c:	mov	x0, x2
    b860:	mov	x21, x3
    b864:	mov	w3, #0x2                   	// #2
    b868:	add	x2, sp, #0x30
    b86c:	add	x1, sp, #0x38
    b870:	bl	47b0 <_PyTime_ObjectToTimeval@plt>
    b874:	cmn	w0, #0x1
    b878:	b.eq	b8a4 <PyNumber_FloorDivide@plt+0x6ca4>  // b.none
    b87c:	mov	x4, x21
    b880:	ldr	w3, [sp, #48]
    b884:	ldr	x2, [sp, #56]
    b888:	mov	x1, x20
    b88c:	mov	x0, x19
    b890:	bl	b6c4 <PyNumber_FloorDivide@plt+0x6ac4>
    b894:	ldp	x19, x20, [sp, #16]
    b898:	ldr	x21, [sp, #32]
    b89c:	ldp	x29, x30, [sp], #64
    b8a0:	ret
    b8a4:	mov	x0, #0x0                   	// #0
    b8a8:	b	b894 <PyNumber_FloorDivide@plt+0x6c94>
    b8ac:	stp	x29, x30, [sp, #-48]!
    b8b0:	mov	x29, sp
    b8b4:	str	x19, [sp, #16]
    b8b8:	mov	x19, x0
    b8bc:	mov	x0, x1
    b8c0:	mov	x1, x2
    b8c4:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    b8c8:	ldr	x2, [x2, #4024]
    b8cc:	str	x2, [sp, #32]
    b8d0:	add	x5, sp, #0x20
    b8d4:	add	x4, sp, #0x28
    b8d8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    b8dc:	add	x3, x3, #0xab8
    b8e0:	add	x3, x3, #0x3a0
    b8e4:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    b8e8:	add	x2, x2, #0xfb0
    b8ec:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    b8f0:	cbz	w0, b96c <PyNumber_FloorDivide@plt+0x6d6c>
    b8f4:	ldr	x0, [sp, #32]
    b8f8:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    b8fc:	tbnz	w0, #31, b97c <PyNumber_FloorDivide@plt+0x6d7c>
    b900:	ldr	x3, [sp, #32]
    b904:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    b908:	ldr	x0, [x0, #4016]
    b90c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    b910:	ldr	x1, [x1, #4064]
    b914:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    b918:	ldr	x2, [x2, #4024]
    b91c:	cmp	x3, x2
    b920:	ldr	x2, [sp, #40]
    b924:	csel	x1, x1, x0, eq  // eq = none
    b928:	mov	x0, x19
    b92c:	bl	b844 <PyNumber_FloorDivide@plt+0x6c44>
    b930:	cbz	x0, b970 <PyNumber_FloorDivide@plt+0x6d70>
    b934:	ldr	x4, [sp, #32]
    b938:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    b93c:	ldr	x1, [x1, #4024]
    b940:	cmp	x4, x1
    b944:	b.eq	b970 <PyNumber_FloorDivide@plt+0x6d70>  // b.none
    b948:	mov	x3, x0
    b94c:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    b950:	add	x2, x2, #0xfc8
    b954:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    b958:	add	x1, x1, #0xab8
    b95c:	add	x1, x1, #0x3b8
    b960:	mov	x0, x4
    b964:	bl	4a60 <_PyObject_CallMethodId@plt>
    b968:	b	b970 <PyNumber_FloorDivide@plt+0x6d70>
    b96c:	mov	x0, #0x0                   	// #0
    b970:	ldr	x19, [sp, #16]
    b974:	ldp	x29, x30, [sp], #48
    b978:	ret
    b97c:	mov	x0, #0x0                   	// #0
    b980:	b	b970 <PyNumber_FloorDivide@plt+0x6d70>
    b984:	stp	x29, x30, [sp, #-48]!
    b988:	mov	x29, sp
    b98c:	str	x19, [sp, #16]
    b990:	mov	x19, x0
    b994:	mov	x0, x1
    b998:	add	x2, sp, #0x28
    b99c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    b9a0:	add	x1, x1, #0xfd0
    b9a4:	bl	4a30 <PyArg_ParseTuple@plt>
    b9a8:	cbz	w0, b9d4 <PyNumber_FloorDivide@plt+0x6dd4>
    b9ac:	adrp	x3, 24000 <PyInit__datetime@@Base+0x155b0>
    b9b0:	ldr	x3, [x3, #4024]
    b9b4:	ldr	x2, [sp, #40]
    b9b8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    b9bc:	ldr	x1, [x1, #4016]
    b9c0:	mov	x0, x19
    b9c4:	bl	b844 <PyNumber_FloorDivide@plt+0x6c44>
    b9c8:	ldr	x19, [sp, #16]
    b9cc:	ldp	x29, x30, [sp], #48
    b9d0:	ret
    b9d4:	mov	x0, #0x0                   	// #0
    b9d8:	b	b9c8 <PyNumber_FloorDivide@plt+0x6dc8>
    b9dc:	stp	x29, x30, [sp, #-64]!
    b9e0:	mov	x29, sp
    b9e4:	stp	x19, x20, [sp, #16]
    b9e8:	str	x21, [sp, #32]
    b9ec:	mov	x19, x0
    b9f0:	mov	x20, x1
    b9f4:	mov	x21, x2
    b9f8:	bl	47f0 <_PyTime_GetSystemClock@plt>
    b9fc:	mov	w3, #0x0                   	// #0
    ba00:	add	x2, sp, #0x34
    ba04:	add	x1, sp, #0x38
    ba08:	bl	4840 <_PyTime_AsTimevalTime_t@plt>
    ba0c:	tbnz	w0, #31, ba38 <PyNumber_FloorDivide@plt+0x6e38>
    ba10:	mov	x4, x21
    ba14:	ldr	w3, [sp, #52]
    ba18:	ldr	x2, [sp, #56]
    ba1c:	mov	x1, x20
    ba20:	mov	x0, x19
    ba24:	bl	b6c4 <PyNumber_FloorDivide@plt+0x6ac4>
    ba28:	ldp	x19, x20, [sp, #16]
    ba2c:	ldr	x21, [sp, #32]
    ba30:	ldp	x29, x30, [sp], #64
    ba34:	ret
    ba38:	mov	x0, #0x0                   	// #0
    ba3c:	b	ba28 <PyNumber_FloorDivide@plt+0x6e28>
    ba40:	stp	x29, x30, [sp, #-16]!
    ba44:	mov	x29, sp
    ba48:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    ba4c:	ldr	x2, [x2, #4024]
    ba50:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    ba54:	ldr	x1, [x1, #4016]
    ba58:	bl	b9dc <PyNumber_FloorDivide@plt+0x6ddc>
    ba5c:	ldp	x29, x30, [sp], #16
    ba60:	ret
    ba64:	sub	sp, sp, #0x40
    ba68:	stp	x29, x30, [sp, #16]
    ba6c:	add	x29, sp, #0x10
    ba70:	stp	x19, x20, [sp, #32]
    ba74:	mov	x19, x0
    ba78:	mov	x0, x1
    ba7c:	mov	x1, x2
    ba80:	cbz	x3, bb24 <PyNumber_FloorDivide@plt+0x6f24>
    ba84:	ldr	x20, [x3, #16]
    ba88:	add	x20, x2, x20
    ba8c:	add	x2, sp, #0x38
    ba90:	str	x2, [sp]
    ba94:	mov	w7, #0x0                   	// #0
    ba98:	mov	w6, #0x1                   	// #1
    ba9c:	mov	w5, #0x0                   	// #0
    baa0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    baa4:	add	x4, x4, #0xab8
    baa8:	add	x4, x4, #0x3d0
    baac:	mov	x2, #0x0                   	// #0
    bab0:	bl	4870 <_PyArg_UnpackKeywords@plt>
    bab4:	cbz	x0, bb14 <PyNumber_FloorDivide@plt+0x6f14>
    bab8:	cbz	x20, bb48 <PyNumber_FloorDivide@plt+0x6f48>
    babc:	ldr	x20, [x0]
    bac0:	mov	x0, x20
    bac4:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    bac8:	tbnz	w0, #31, bb40 <PyNumber_FloorDivide@plt+0x6f40>
    bacc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bad0:	ldr	x0, [x0, #4024]
    bad4:	cmp	x20, x0
    bad8:	b.eq	bb60 <PyNumber_FloorDivide@plt+0x6f60>  // b.none
    badc:	mov	x2, x20
    bae0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    bae4:	ldr	x1, [x1, #4016]
    bae8:	mov	x0, x19
    baec:	bl	b9dc <PyNumber_FloorDivide@plt+0x6ddc>
    baf0:	cbz	x0, bb14 <PyNumber_FloorDivide@plt+0x6f14>
    baf4:	mov	x3, x0
    baf8:	adrp	x2, f000 <PyInit__datetime@@Base+0x5b0>
    bafc:	add	x2, x2, #0xfc8
    bb00:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bb04:	add	x1, x1, #0xab8
    bb08:	add	x1, x1, #0x3b8
    bb0c:	mov	x0, x20
    bb10:	bl	4a60 <_PyObject_CallMethodId@plt>
    bb14:	ldp	x19, x20, [sp, #32]
    bb18:	ldp	x29, x30, [sp, #16]
    bb1c:	add	sp, sp, #0x40
    bb20:	ret
    bb24:	cmp	x0, #0x0
    bb28:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    bb2c:	b.ls	bb38 <PyNumber_FloorDivide@plt+0x6f38>  // b.plast
    bb30:	mov	x20, x2
    bb34:	b	ba8c <PyNumber_FloorDivide@plt+0x6e8c>
    bb38:	mov	x20, x2
    bb3c:	b	bab8 <PyNumber_FloorDivide@plt+0x6eb8>
    bb40:	mov	x0, #0x0                   	// #0
    bb44:	b	bb14 <PyNumber_FloorDivide@plt+0x6f14>
    bb48:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bb4c:	ldr	x0, [x0, #4024]
    bb50:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    bb54:	mov	w1, w0
    bb58:	mov	x0, #0x0                   	// #0
    bb5c:	tbnz	w1, #31, bb14 <PyNumber_FloorDivide@plt+0x6f14>
    bb60:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    bb64:	ldr	x2, [x2, #4024]
    bb68:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    bb6c:	ldr	x1, [x1, #4064]
    bb70:	mov	x0, x19
    bb74:	bl	b9dc <PyNumber_FloorDivide@plt+0x6ddc>
    bb78:	b	bb14 <PyNumber_FloorDivide@plt+0x6f14>
    bb7c:	sub	sp, sp, #0x60
    bb80:	stp	x29, x30, [sp, #16]
    bb84:	add	x29, sp, #0x10
    bb88:	stp	x19, x20, [sp, #32]
    bb8c:	str	x21, [sp, #48]
    bb90:	mov	x19, x0
    bb94:	ldrb	w0, [x0, #25]
    bb98:	ldrb	w3, [x19, #26]
    bb9c:	orr	w0, w3, w0, lsl #8
    bba0:	str	w0, [sp, #92]
    bba4:	ldrb	w0, [x19, #27]
    bba8:	str	w0, [sp, #88]
    bbac:	ldr	w0, [x1, #24]
    bbb0:	ldrb	w3, [x19, #28]
    bbb4:	madd	w0, w2, w0, w3
    bbb8:	str	w0, [sp, #84]
    bbbc:	ldrb	w0, [x19, #29]
    bbc0:	str	w0, [sp, #80]
    bbc4:	ldrb	w0, [x19, #30]
    bbc8:	str	w0, [sp, #76]
    bbcc:	ldr	w0, [x1, #28]
    bbd0:	ldrb	w3, [x19, #31]
    bbd4:	madd	w0, w2, w0, w3
    bbd8:	str	w0, [sp, #72]
    bbdc:	ldrb	w0, [x19, #32]
    bbe0:	ldrb	w3, [x19, #33]
    bbe4:	lsl	w3, w3, #8
    bbe8:	orr	w0, w3, w0, lsl #16
    bbec:	ldrb	w3, [x19, #34]
    bbf0:	orr	w0, w0, w3
    bbf4:	ldr	w1, [x1, #32]
    bbf8:	madd	w2, w2, w1, w0
    bbfc:	str	w2, [sp, #68]
    bc00:	add	x21, sp, #0x48
    bc04:	mov	w2, #0x4240                	// #16960
    bc08:	movk	w2, #0xf, lsl #16
    bc0c:	add	x1, sp, #0x44
    bc10:	mov	x0, x21
    bc14:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    bc18:	add	x20, sp, #0x4c
    bc1c:	mov	w2, #0x3c                  	// #60
    bc20:	mov	x1, x21
    bc24:	mov	x0, x20
    bc28:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    bc2c:	add	x21, sp, #0x50
    bc30:	mov	w2, #0x3c                  	// #60
    bc34:	mov	x1, x20
    bc38:	mov	x0, x21
    bc3c:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    bc40:	add	x20, sp, #0x54
    bc44:	mov	w2, #0x18                  	// #24
    bc48:	mov	x1, x21
    bc4c:	mov	x0, x20
    bc50:	bl	5034 <PyNumber_FloorDivide@plt+0x434>
    bc54:	mov	x2, x20
    bc58:	add	x1, sp, #0x58
    bc5c:	add	x0, sp, #0x5c
    bc60:	bl	5fcc <PyNumber_FloorDivide@plt+0x13cc>
    bc64:	tbnz	w0, #31, bcc0 <PyNumber_FloorDivide@plt+0x70c0>
    bc68:	ldr	w0, [sp, #92]
    bc6c:	ldr	w1, [sp, #88]
    bc70:	ldr	w2, [sp, #84]
    bc74:	ldr	w3, [sp, #80]
    bc78:	ldr	w4, [sp, #76]
    bc7c:	ldr	w5, [sp, #72]
    bc80:	ldr	w6, [sp, #68]
    bc84:	ldrb	w7, [x19, #24]
    bc88:	cbz	w7, bcb4 <PyNumber_FloorDivide@plt+0x70b4>
    bc8c:	ldr	x7, [x19, #40]
    bc90:	ldr	x8, [x19, #8]
    bc94:	str	x8, [sp, #8]
    bc98:	str	wzr, [sp]
    bc9c:	bl	b650 <PyNumber_FloorDivide@plt+0x6a50>
    bca0:	ldp	x19, x20, [sp, #32]
    bca4:	ldr	x21, [sp, #48]
    bca8:	ldp	x29, x30, [sp, #16]
    bcac:	add	sp, sp, #0x60
    bcb0:	ret
    bcb4:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    bcb8:	ldr	x7, [x7, #4024]
    bcbc:	b	bc90 <PyNumber_FloorDivide@plt+0x7090>
    bcc0:	mov	x0, #0x0                   	// #0
    bcc4:	b	bca0 <PyNumber_FloorDivide@plt+0x70a0>
    bcc8:	stp	x29, x30, [sp, #-32]!
    bccc:	mov	x29, sp
    bcd0:	stp	x19, x20, [sp, #16]
    bcd4:	mov	x19, x0
    bcd8:	mov	x20, x1
    bcdc:	ldr	x0, [x0, #8]
    bce0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bce4:	add	x1, x1, #0x298
    bce8:	cmp	x0, x1
    bcec:	b.eq	bd00 <PyNumber_FloorDivide@plt+0x7100>  // b.none
    bcf0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bcf4:	add	x1, x1, #0x298
    bcf8:	bl	4b30 <PyType_IsSubtype@plt>
    bcfc:	cbz	w0, bd58 <PyNumber_FloorDivide@plt+0x7158>
    bd00:	ldr	x0, [x20, #8]
    bd04:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    bd08:	add	x2, x2, #0x298
    bd0c:	add	x2, x2, #0x4e0
    bd10:	cmp	x0, x2
    bd14:	b.eq	bd44 <PyNumber_FloorDivide@plt+0x7144>  // b.none
    bd18:	mov	x1, x2
    bd1c:	bl	4b30 <PyType_IsSubtype@plt>
    bd20:	cbnz	w0, bd44 <PyNumber_FloorDivide@plt+0x7144>
    bd24:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bd28:	ldr	x0, [x0, #3960]
    bd2c:	ldr	x1, [x0]
    bd30:	add	x1, x1, #0x1
    bd34:	str	x1, [x0]
    bd38:	ldp	x19, x20, [sp, #16]
    bd3c:	ldp	x29, x30, [sp], #32
    bd40:	ret
    bd44:	mov	w2, #0x1                   	// #1
    bd48:	mov	x1, x20
    bd4c:	mov	x0, x19
    bd50:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    bd54:	b	bd38 <PyNumber_FloorDivide@plt+0x7138>
    bd58:	ldr	x0, [x19, #8]
    bd5c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bd60:	add	x1, x1, #0x298
    bd64:	add	x1, x1, #0x4e0
    bd68:	cmp	x0, x1
    bd6c:	b.eq	bd84 <PyNumber_FloorDivide@plt+0x7184>  // b.none
    bd70:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bd74:	add	x1, x1, #0x298
    bd78:	add	x1, x1, #0x4e0
    bd7c:	bl	4b30 <PyType_IsSubtype@plt>
    bd80:	cbz	w0, bd24 <PyNumber_FloorDivide@plt+0x7124>
    bd84:	mov	w2, #0x1                   	// #1
    bd88:	mov	x1, x19
    bd8c:	mov	x0, x20
    bd90:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    bd94:	b	bd38 <PyNumber_FloorDivide@plt+0x7138>
    bd98:	stp	x29, x30, [sp, #-32]!
    bd9c:	mov	x29, sp
    bda0:	stp	x19, x20, [sp, #16]
    bda4:	mov	x20, x0
    bda8:	mov	x19, x1
    bdac:	ldr	x0, [x1, #8]
    bdb0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bdb4:	add	x1, x1, #0x298
    bdb8:	cmp	x0, x1
    bdbc:	b.eq	bdd0 <PyNumber_FloorDivide@plt+0x71d0>  // b.none
    bdc0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    bdc4:	add	x1, x1, #0x298
    bdc8:	bl	4b30 <PyType_IsSubtype@plt>
    bdcc:	cbz	w0, bdf8 <PyNumber_FloorDivide@plt+0x71f8>
    bdd0:	ldrb	w0, [x19, #24]
    bdd4:	cbz	w0, be18 <PyNumber_FloorDivide@plt+0x7218>
    bdd8:	ldr	x0, [x19, #40]
    bddc:	cmp	x0, x20
    bde0:	b.ne	be18 <PyNumber_FloorDivide@plt+0x7218>  // b.any
    bde4:	mov	w2, #0x1                   	// #1
    bde8:	ldr	x1, [x20, #16]
    bdec:	mov	x0, x19
    bdf0:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    bdf4:	b	be34 <PyNumber_FloorDivide@plt+0x7234>
    bdf8:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    bdfc:	add	x1, x1, #0xfe8
    be00:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    be04:	ldr	x0, [x0, #3976]
    be08:	ldr	x0, [x0]
    be0c:	bl	4880 <PyErr_SetString@plt>
    be10:	mov	x0, #0x0                   	// #0
    be14:	b	be34 <PyNumber_FloorDivide@plt+0x7234>
    be18:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    be1c:	add	x1, x1, #0x10
    be20:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    be24:	ldr	x0, [x0, #3968]
    be28:	ldr	x0, [x0]
    be2c:	bl	4880 <PyErr_SetString@plt>
    be30:	mov	x0, #0x0                   	// #0
    be34:	ldp	x19, x20, [sp, #16]
    be38:	ldp	x29, x30, [sp], #32
    be3c:	ret
    be40:	stp	x29, x30, [sp, #-64]!
    be44:	mov	x29, sp
    be48:	stp	x19, x20, [sp, #16]
    be4c:	stp	x21, x22, [sp, #32]
    be50:	mov	x20, x0
    be54:	mov	x19, x1
    be58:	ldr	x0, [x1, #8]
    be5c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    be60:	add	x1, x1, #0x298
    be64:	cmp	x0, x1
    be68:	b.eq	be7c <PyNumber_FloorDivide@plt+0x727c>  // b.none
    be6c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    be70:	add	x1, x1, #0x298
    be74:	bl	4b30 <PyType_IsSubtype@plt>
    be78:	cbz	w0, be8c <PyNumber_FloorDivide@plt+0x728c>
    be7c:	ldrb	w0, [x19, #24]
    be80:	cbz	w0, beac <PyNumber_FloorDivide@plt+0x72ac>
    be84:	ldr	x1, [x19, #40]
    be88:	b	beb4 <PyNumber_FloorDivide@plt+0x72b4>
    be8c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    be90:	add	x1, x1, #0xfe8
    be94:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    be98:	ldr	x0, [x0, #3976]
    be9c:	ldr	x0, [x0]
    bea0:	bl	4880 <PyErr_SetString@plt>
    bea4:	mov	x22, #0x0                   	// #0
    bea8:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    beac:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    beb0:	ldr	x1, [x1, #4024]
    beb4:	cmp	x1, x20
    beb8:	b.ne	bfbc <PyNumber_FloorDivide@plt+0x73bc>  // b.any
    bebc:	mov	x1, #0x0                   	// #0
    bec0:	mov	x0, x19
    bec4:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    bec8:	mov	x21, x0
    becc:	cbz	x0, c128 <PyNumber_FloorDivide@plt+0x7528>
    bed0:	str	x23, [sp, #48]
    bed4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bed8:	ldr	x0, [x0, #4024]
    bedc:	cmp	x21, x0
    bee0:	b.eq	bfec <PyNumber_FloorDivide@plt+0x73ec>  // b.none
    bee4:	mov	x1, #0x0                   	// #0
    bee8:	mov	x0, x19
    beec:	bl	72f4 <PyNumber_FloorDivide@plt+0x26f4>
    bef0:	mov	x20, x0
    bef4:	cbz	x0, c1a8 <PyNumber_FloorDivide@plt+0x75a8>
    bef8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    befc:	ldr	x0, [x0, #4024]
    bf00:	cmp	x20, x0
    bf04:	b.eq	c030 <PyNumber_FloorDivide@plt+0x7430>  // b.none
    bf08:	mov	x1, x20
    bf0c:	mov	x0, x21
    bf10:	bl	5dd8 <PyNumber_FloorDivide@plt+0x11d8>
    bf14:	mov	x23, x0
    bf18:	cbz	x0, c130 <PyNumber_FloorDivide@plt+0x7530>
    bf1c:	mov	w2, #0x1                   	// #1
    bf20:	mov	x1, x0
    bf24:	mov	x0, x19
    bf28:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    bf2c:	mov	x22, x0
    bf30:	cbz	x0, c134 <PyNumber_FloorDivide@plt+0x7534>
    bf34:	ldr	x0, [x20]
    bf38:	sub	x0, x0, #0x1
    bf3c:	str	x0, [x20]
    bf40:	cbz	x0, c054 <PyNumber_FloorDivide@plt+0x7454>
    bf44:	ldrb	w0, [x19, #24]
    bf48:	cbz	w0, c060 <PyNumber_FloorDivide@plt+0x7460>
    bf4c:	ldr	x0, [x19, #40]
    bf50:	mov	x2, x22
    bf54:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    bf58:	add	x1, x1, #0x6b8
    bf5c:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    bf60:	mov	x20, x0
    bf64:	cbz	x0, c190 <PyNumber_FloorDivide@plt+0x7590>
    bf68:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bf6c:	ldr	x0, [x0, #4024]
    bf70:	cmp	x20, x0
    bf74:	b.eq	c06c <PyNumber_FloorDivide@plt+0x746c>  // b.none
    bf78:	mov	x0, x20
    bf7c:	bl	53e4 <PyNumber_FloorDivide@plt+0x7e4>
    bf80:	cbnz	w0, c088 <PyNumber_FloorDivide@plt+0x7488>
    bf84:	ldr	x0, [x23]
    bf88:	sub	x0, x0, #0x1
    bf8c:	str	x0, [x23]
    bf90:	cbz	x0, c0c4 <PyNumber_FloorDivide@plt+0x74c4>
    bf94:	ldr	x0, [x20]
    bf98:	sub	x0, x0, #0x1
    bf9c:	str	x0, [x20]
    bfa0:	cbz	x0, c0d0 <PyNumber_FloorDivide@plt+0x74d0>
    bfa4:	ldr	x0, [x21]
    bfa8:	sub	x0, x0, #0x1
    bfac:	str	x0, [x21]
    bfb0:	cbz	x0, c0dc <PyNumber_FloorDivide@plt+0x74dc>
    bfb4:	ldr	x23, [sp, #48]
    bfb8:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    bfbc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    bfc0:	add	x1, x1, #0x10
    bfc4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bfc8:	ldr	x0, [x0, #3968]
    bfcc:	ldr	x0, [x0]
    bfd0:	bl	4880 <PyErr_SetString@plt>
    bfd4:	mov	x22, #0x0                   	// #0
    bfd8:	mov	x0, x22
    bfdc:	ldp	x19, x20, [sp, #16]
    bfe0:	ldp	x21, x22, [sp, #32]
    bfe4:	ldp	x29, x30, [sp], #64
    bfe8:	ret
    bfec:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    bff0:	add	x1, x1, #0x30
    bff4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    bff8:	ldr	x0, [x0, #3968]
    bffc:	ldr	x0, [x0]
    c000:	bl	4880 <PyErr_SetString@plt>
    c004:	ldr	x0, [x21]
    c008:	sub	x0, x0, #0x1
    c00c:	str	x0, [x21]
    c010:	mov	x23, #0x0                   	// #0
    c014:	mov	x22, #0x0                   	// #0
    c018:	mov	x20, #0x0                   	// #0
    c01c:	cbnz	x0, c154 <PyNumber_FloorDivide@plt+0x7554>
    c020:	mov	x0, x21
    c024:	bl	4810 <_Py_Dealloc@plt>
    c028:	mov	x22, x20
    c02c:	b	c154 <PyNumber_FloorDivide@plt+0x7554>
    c030:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    c034:	add	x1, x1, #0x60
    c038:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c03c:	ldr	x0, [x0, #3968]
    c040:	ldr	x0, [x0]
    c044:	bl	4880 <PyErr_SetString@plt>
    c048:	mov	x23, #0x0                   	// #0
    c04c:	mov	x22, #0x0                   	// #0
    c050:	b	c134 <PyNumber_FloorDivide@plt+0x7534>
    c054:	mov	x0, x20
    c058:	bl	4810 <_Py_Dealloc@plt>
    c05c:	b	bf44 <PyNumber_FloorDivide@plt+0x7344>
    c060:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c064:	ldr	x0, [x0, #4024]
    c068:	b	bf50 <PyNumber_FloorDivide@plt+0x7350>
    c06c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    c070:	add	x1, x1, #0x88
    c074:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c078:	ldr	x0, [x0, #3968]
    c07c:	ldr	x0, [x0]
    c080:	bl	4880 <PyErr_SetString@plt>
    c084:	b	c134 <PyNumber_FloorDivide@plt+0x7534>
    c088:	mov	w2, #0x1                   	// #1
    c08c:	mov	x1, x20
    c090:	mov	x0, x22
    c094:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    c098:	mov	x19, x0
    c09c:	ldr	x0, [x22]
    c0a0:	sub	x0, x0, #0x1
    c0a4:	str	x0, [x22]
    c0a8:	cbz	x0, c0b8 <PyNumber_FloorDivide@plt+0x74b8>
    c0ac:	cbz	x19, c188 <PyNumber_FloorDivide@plt+0x7588>
    c0b0:	mov	x22, x19
    c0b4:	b	bf84 <PyNumber_FloorDivide@plt+0x7384>
    c0b8:	mov	x0, x22
    c0bc:	bl	4810 <_Py_Dealloc@plt>
    c0c0:	b	c0ac <PyNumber_FloorDivide@plt+0x74ac>
    c0c4:	mov	x0, x23
    c0c8:	bl	4810 <_Py_Dealloc@plt>
    c0cc:	b	bf94 <PyNumber_FloorDivide@plt+0x7394>
    c0d0:	mov	x0, x20
    c0d4:	bl	4810 <_Py_Dealloc@plt>
    c0d8:	b	bfa4 <PyNumber_FloorDivide@plt+0x73a4>
    c0dc:	mov	x0, x21
    c0e0:	bl	4810 <_Py_Dealloc@plt>
    c0e4:	ldr	x23, [sp, #48]
    c0e8:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    c0ec:	mov	x0, x21
    c0f0:	bl	4810 <_Py_Dealloc@plt>
    c0f4:	cbnz	x20, c144 <PyNumber_FloorDivide@plt+0x7544>
    c0f8:	b	c154 <PyNumber_FloorDivide@plt+0x7554>
    c0fc:	mov	x0, x20
    c100:	bl	4810 <_Py_Dealloc@plt>
    c104:	b	c154 <PyNumber_FloorDivide@plt+0x7554>
    c108:	mov	x0, x23
    c10c:	bl	4810 <_Py_Dealloc@plt>
    c110:	b	c168 <PyNumber_FloorDivide@plt+0x7568>
    c114:	mov	x0, x22
    c118:	bl	4810 <_Py_Dealloc@plt>
    c11c:	mov	x22, #0x0                   	// #0
    c120:	ldr	x23, [sp, #48]
    c124:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    c128:	mov	x22, x0
    c12c:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    c130:	mov	x22, x0
    c134:	ldr	x0, [x21]
    c138:	sub	x0, x0, #0x1
    c13c:	str	x0, [x21]
    c140:	cbz	x0, c0ec <PyNumber_FloorDivide@plt+0x74ec>
    c144:	ldr	x1, [x20]
    c148:	sub	x1, x1, #0x1
    c14c:	str	x1, [x20]
    c150:	cbz	x1, c0fc <PyNumber_FloorDivide@plt+0x74fc>
    c154:	cbz	x23, c168 <PyNumber_FloorDivide@plt+0x7568>
    c158:	ldr	x1, [x23]
    c15c:	sub	x1, x1, #0x1
    c160:	str	x1, [x23]
    c164:	cbz	x1, c108 <PyNumber_FloorDivide@plt+0x7508>
    c168:	cbz	x22, c1c4 <PyNumber_FloorDivide@plt+0x75c4>
    c16c:	ldr	x1, [x22]
    c170:	sub	x1, x1, #0x1
    c174:	str	x1, [x22]
    c178:	cbz	x1, c114 <PyNumber_FloorDivide@plt+0x7514>
    c17c:	mov	x22, #0x0                   	// #0
    c180:	ldr	x23, [sp, #48]
    c184:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    c188:	mov	x22, x19
    c18c:	b	c134 <PyNumber_FloorDivide@plt+0x7534>
    c190:	ldr	x0, [x21]
    c194:	sub	x0, x0, #0x1
    c198:	str	x0, [x21]
    c19c:	mov	x20, x22
    c1a0:	cbnz	x0, c158 <PyNumber_FloorDivide@plt+0x7558>
    c1a4:	b	c020 <PyNumber_FloorDivide@plt+0x7420>
    c1a8:	ldr	x0, [x21]
    c1ac:	sub	x0, x0, #0x1
    c1b0:	str	x0, [x21]
    c1b4:	mov	x22, x20
    c1b8:	mov	x23, x20
    c1bc:	cbnz	x0, c168 <PyNumber_FloorDivide@plt+0x7568>
    c1c0:	b	c020 <PyNumber_FloorDivide@plt+0x7420>
    c1c4:	ldr	x23, [sp, #48]
    c1c8:	b	bfd8 <PyNumber_FloorDivide@plt+0x73d8>
    c1cc:	stp	x29, x30, [sp, #-64]!
    c1d0:	mov	x29, sp
    c1d4:	stp	x19, x20, [sp, #16]
    c1d8:	stp	x21, x22, [sp, #32]
    c1dc:	mov	x20, x0
    c1e0:	mov	x21, x1
    c1e4:	ldr	x0, [x0, #8]
    c1e8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c1ec:	add	x1, x1, #0x298
    c1f0:	cmp	x0, x1
    c1f4:	b.eq	c208 <PyNumber_FloorDivide@plt+0x7608>  // b.none
    c1f8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c1fc:	add	x1, x1, #0x298
    c200:	bl	4b30 <PyType_IsSubtype@plt>
    c204:	cbz	w0, c460 <PyNumber_FloorDivide@plt+0x7860>
    c208:	ldr	x0, [x21, #8]
    c20c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c210:	add	x1, x1, #0x298
    c214:	cmp	x0, x1
    c218:	b.eq	c22c <PyNumber_FloorDivide@plt+0x762c>  // b.none
    c21c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c220:	add	x1, x1, #0x298
    c224:	bl	4b30 <PyType_IsSubtype@plt>
    c228:	cbz	w0, c3f4 <PyNumber_FloorDivide@plt+0x77f4>
    c22c:	str	x23, [sp, #48]
    c230:	ldrb	w0, [x20, #24]
    c234:	cbz	w0, c478 <PyNumber_FloorDivide@plt+0x7878>
    c238:	ldr	x0, [x20, #40]
    c23c:	ldrb	w1, [x21, #24]
    c240:	cbnz	w1, c258 <PyNumber_FloorDivide@plt+0x7658>
    c244:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    c248:	ldr	x1, [x1, #4024]
    c24c:	b	c25c <PyNumber_FloorDivide@plt+0x765c>
    c250:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c254:	ldr	x0, [x0, #4024]
    c258:	ldr	x1, [x21, #40]
    c25c:	cmp	x1, x0
    c260:	b.eq	c480 <PyNumber_FloorDivide@plt+0x7880>  // b.none
    c264:	mov	x1, #0x0                   	// #0
    c268:	mov	x0, x20
    c26c:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    c270:	mov	x19, x0
    c274:	cbz	x0, c5bc <PyNumber_FloorDivide@plt+0x79bc>
    c278:	mov	x1, #0x0                   	// #0
    c27c:	mov	x0, x21
    c280:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    c284:	mov	x23, x0
    c288:	cbz	x0, c308 <PyNumber_FloorDivide@plt+0x7708>
    c28c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c290:	ldr	x0, [x0, #4024]
    c294:	cmp	x19, x0
    c298:	cset	w1, ne  // ne = any
    c29c:	cmp	x23, x0
    c2a0:	cset	w0, ne  // ne = any
    c2a4:	cmp	w0, w1, uxtb
    c2a8:	b.ne	c338 <PyNumber_FloorDivide@plt+0x7738>  // b.any
    c2ac:	cmp	x19, x23
    c2b0:	b.eq	c3b4 <PyNumber_FloorDivide@plt+0x77b4>  // b.none
    c2b4:	mov	x1, x23
    c2b8:	mov	x0, x19
    c2bc:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    c2c0:	mov	x22, #0x0                   	// #0
    c2c4:	cbz	w0, c49c <PyNumber_FloorDivide@plt+0x789c>
    c2c8:	mov	x1, x23
    c2cc:	mov	x0, x19
    c2d0:	bl	5dd8 <PyNumber_FloorDivide@plt+0x11d8>
    c2d4:	mov	x22, x0
    c2d8:	cbnz	x0, c49c <PyNumber_FloorDivide@plt+0x789c>
    c2dc:	ldr	x0, [x19]
    c2e0:	sub	x0, x0, #0x1
    c2e4:	str	x0, [x19]
    c2e8:	cbz	x0, c398 <PyNumber_FloorDivide@plt+0x7798>
    c2ec:	ldr	x0, [x23]
    c2f0:	sub	x0, x0, #0x1
    c2f4:	str	x0, [x23]
    c2f8:	mov	x19, x22
    c2fc:	cbz	x0, c3a4 <PyNumber_FloorDivide@plt+0x77a4>
    c300:	ldr	x23, [sp, #48]
    c304:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c308:	ldr	x0, [x19]
    c30c:	sub	x0, x0, #0x1
    c310:	str	x0, [x19]
    c314:	cbz	x0, c324 <PyNumber_FloorDivide@plt+0x7724>
    c318:	mov	x19, x23
    c31c:	ldr	x23, [sp, #48]
    c320:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c324:	mov	x0, x19
    c328:	bl	4810 <_Py_Dealloc@plt>
    c32c:	mov	x19, x23
    c330:	ldr	x23, [sp, #48]
    c334:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c338:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    c33c:	add	x1, x1, #0xc8
    c340:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c344:	ldr	x0, [x0, #3976]
    c348:	ldr	x0, [x0]
    c34c:	bl	4880 <PyErr_SetString@plt>
    c350:	ldr	x0, [x19]
    c354:	sub	x0, x0, #0x1
    c358:	str	x0, [x19]
    c35c:	cbz	x0, c37c <PyNumber_FloorDivide@plt+0x777c>
    c360:	ldr	x0, [x23]
    c364:	sub	x0, x0, #0x1
    c368:	str	x0, [x23]
    c36c:	mov	x19, #0x0                   	// #0
    c370:	cbz	x0, c388 <PyNumber_FloorDivide@plt+0x7788>
    c374:	ldr	x23, [sp, #48]
    c378:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c37c:	mov	x0, x19
    c380:	bl	4810 <_Py_Dealloc@plt>
    c384:	b	c360 <PyNumber_FloorDivide@plt+0x7760>
    c388:	mov	x0, x23
    c38c:	bl	4810 <_Py_Dealloc@plt>
    c390:	ldr	x23, [sp, #48]
    c394:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c398:	mov	x0, x19
    c39c:	bl	4810 <_Py_Dealloc@plt>
    c3a0:	b	c2ec <PyNumber_FloorDivide@plt+0x76ec>
    c3a4:	mov	x0, x23
    c3a8:	bl	4810 <_Py_Dealloc@plt>
    c3ac:	ldr	x23, [sp, #48]
    c3b0:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c3b4:	mov	x19, x23
    c3b8:	mov	x22, #0x0                   	// #0
    c3bc:	b	c49c <PyNumber_FloorDivide@plt+0x789c>
    c3c0:	mov	x0, x19
    c3c4:	bl	4810 <_Py_Dealloc@plt>
    c3c8:	b	c4ac <PyNumber_FloorDivide@plt+0x78ac>
    c3cc:	mov	x0, x23
    c3d0:	bl	4810 <_Py_Dealloc@plt>
    c3d4:	b	c4bc <PyNumber_FloorDivide@plt+0x78bc>
    c3d8:	mov	x0, x19
    c3dc:	bl	4810 <_Py_Dealloc@plt>
    c3e0:	b	c5a0 <PyNumber_FloorDivide@plt+0x79a0>
    c3e4:	mov	x0, x22
    c3e8:	bl	4810 <_Py_Dealloc@plt>
    c3ec:	ldr	x23, [sp, #48]
    c3f0:	b	c43c <PyNumber_FloorDivide@plt+0x783c>
    c3f4:	ldr	x0, [x21, #8]
    c3f8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c3fc:	add	x1, x1, #0x298
    c400:	add	x1, x1, #0x4e0
    c404:	cmp	x0, x1
    c408:	b.eq	c420 <PyNumber_FloorDivide@plt+0x7820>  // b.none
    c40c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    c410:	add	x1, x1, #0x298
    c414:	add	x1, x1, #0x4e0
    c418:	bl	4b30 <PyType_IsSubtype@plt>
    c41c:	cbz	w0, c460 <PyNumber_FloorDivide@plt+0x7860>
    c420:	mov	w2, #0xffffffff            	// #-1
    c424:	mov	x1, x21
    c428:	mov	x0, x20
    c42c:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    c430:	mov	x19, x0
    c434:	b	c43c <PyNumber_FloorDivide@plt+0x783c>
    c438:	ldr	x23, [sp, #48]
    c43c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c440:	ldr	x0, [x0, #3960]
    c444:	cmp	x19, x0
    c448:	b.eq	c460 <PyNumber_FloorDivide@plt+0x7860>  // b.none
    c44c:	mov	x0, x19
    c450:	ldp	x19, x20, [sp, #16]
    c454:	ldp	x21, x22, [sp, #32]
    c458:	ldp	x29, x30, [sp], #64
    c45c:	ret
    c460:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    c464:	ldr	x19, [x19, #3960]
    c468:	ldr	x0, [x19]
    c46c:	add	x0, x0, #0x1
    c470:	str	x0, [x19]
    c474:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c478:	ldrb	w0, [x21, #24]
    c47c:	cbnz	w0, c250 <PyNumber_FloorDivide@plt+0x7650>
    c480:	adrp	x19, 24000 <PyInit__datetime@@Base+0x155b0>
    c484:	ldr	x19, [x19, #4024]
    c488:	ldr	x0, [x19]
    c48c:	add	x0, x0, #0x2
    c490:	str	x0, [x19]
    c494:	mov	x23, x19
    c498:	mov	x22, #0x0                   	// #0
    c49c:	ldr	x1, [x19]
    c4a0:	sub	x1, x1, #0x1
    c4a4:	str	x1, [x19]
    c4a8:	cbz	x1, c3c0 <PyNumber_FloorDivide@plt+0x77c0>
    c4ac:	ldr	x1, [x23]
    c4b0:	sub	x1, x1, #0x1
    c4b4:	str	x1, [x23]
    c4b8:	cbz	x1, c3cc <PyNumber_FloorDivide@plt+0x77cc>
    c4bc:	ldrb	w3, [x20, #25]
    c4c0:	ldrb	w0, [x20, #26]
    c4c4:	ldrb	w2, [x20, #28]
    c4c8:	ldrb	w1, [x20, #27]
    c4cc:	orr	w0, w0, w3, lsl #8
    c4d0:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    c4d4:	mov	w19, w0
    c4d8:	ldrb	w3, [x21, #25]
    c4dc:	ldrb	w0, [x21, #26]
    c4e0:	ldrb	w2, [x21, #28]
    c4e4:	ldrb	w1, [x21, #27]
    c4e8:	orr	w0, w0, w3, lsl #8
    c4ec:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    c4f0:	ldrb	w6, [x20, #32]
    c4f4:	ldrb	w2, [x20, #33]
    c4f8:	lsl	w2, w2, #8
    c4fc:	orr	w6, w2, w6, lsl #16
    c500:	ldrb	w2, [x20, #34]
    c504:	orr	w6, w6, w2
    c508:	ldrb	w1, [x21, #32]
    c50c:	ldrb	w2, [x21, #33]
    c510:	lsl	w2, w2, #8
    c514:	orr	w1, w2, w1, lsl #16
    c518:	ldrb	w2, [x21, #34]
    c51c:	orr	w2, w1, w2
    c520:	ldrb	w5, [x20, #29]
    c524:	ldrb	w1, [x21, #29]
    c528:	sub	w5, w5, w1
    c52c:	ldrb	w1, [x20, #30]
    c530:	ldrb	w3, [x21, #30]
    c534:	sub	w3, w1, w3
    c538:	lsl	w1, w3, #4
    c53c:	sub	w1, w1, w3
    c540:	lsl	w1, w1, #2
    c544:	mov	w3, #0xe10                 	// #3600
    c548:	madd	w5, w5, w3, w1
    c54c:	ldrb	w1, [x20, #31]
    c550:	ldrb	w3, [x21, #31]
    c554:	sub	w1, w1, w3
    c558:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    c55c:	add	x4, x4, #0x298
    c560:	add	x4, x4, #0x4e0
    c564:	mov	w3, #0x1                   	// #1
    c568:	sub	w2, w6, w2
    c56c:	add	w1, w5, w1
    c570:	sub	w0, w19, w0
    c574:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    c578:	mov	x19, x0
    c57c:	cbz	x0, c5c4 <PyNumber_FloorDivide@plt+0x79c4>
    c580:	cbz	x22, c438 <PyNumber_FloorDivide@plt+0x7838>
    c584:	mov	x1, x22
    c588:	bl	5dd8 <PyNumber_FloorDivide@plt+0x11d8>
    c58c:	mov	x20, x0
    c590:	ldr	x1, [x19]
    c594:	sub	x1, x1, #0x1
    c598:	str	x1, [x19]
    c59c:	cbz	x1, c3d8 <PyNumber_FloorDivide@plt+0x77d8>
    c5a0:	ldr	x1, [x22]
    c5a4:	sub	x1, x1, #0x1
    c5a8:	str	x1, [x22]
    c5ac:	mov	x19, x20
    c5b0:	cbz	x1, c3e4 <PyNumber_FloorDivide@plt+0x77e4>
    c5b4:	ldr	x23, [sp, #48]
    c5b8:	b	c43c <PyNumber_FloorDivide@plt+0x783c>
    c5bc:	ldr	x23, [sp, #48]
    c5c0:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c5c4:	ldr	x23, [sp, #48]
    c5c8:	b	c44c <PyNumber_FloorDivide@plt+0x784c>
    c5cc:	stp	x29, x30, [sp, #-32]!
    c5d0:	mov	x29, sp
    c5d4:	stp	x19, x20, [sp, #16]
    c5d8:	mov	x19, x0
    c5dc:	ldrb	w0, [x0, #24]
    c5e0:	cbz	w0, c638 <PyNumber_FloorDivide@plt+0x7a38>
    c5e4:	ldr	x1, [x19, #40]
    c5e8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c5ec:	ldr	x0, [x0, #4024]
    c5f0:	cmp	x1, x0
    c5f4:	b.eq	c638 <PyNumber_FloorDivide@plt+0x7a38>  // b.none
    c5f8:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    c5fc:	ldr	x1, [x0, #4032]
    c600:	mov	x0, x19
    c604:	bl	c1cc <PyNumber_FloorDivide@plt+0x75cc>
    c608:	mov	x20, x0
    c60c:	cbz	x0, c6c8 <PyNumber_FloorDivide@plt+0x7ac8>
    c610:	mov	x1, #0x0                   	// #0
    c614:	bl	8904 <PyNumber_FloorDivide@plt+0x3d04>
    c618:	mov	x19, x0
    c61c:	ldr	x0, [x20]
    c620:	sub	x0, x0, #0x1
    c624:	str	x0, [x20]
    c628:	cbnz	x0, c6b8 <PyNumber_FloorDivide@plt+0x7ab8>
    c62c:	mov	x0, x20
    c630:	bl	4810 <_Py_Dealloc@plt>
    c634:	b	c6b8 <PyNumber_FloorDivide@plt+0x7ab8>
    c638:	ldrb	w7, [x19, #25]
    c63c:	ldrb	w0, [x19, #26]
    c640:	ldrb	w6, [x19, #35]
    c644:	ldrb	w5, [x19, #31]
    c648:	ldrb	w4, [x19, #30]
    c64c:	ldrb	w3, [x19, #29]
    c650:	ldrb	w2, [x19, #28]
    c654:	ldrb	w1, [x19, #27]
    c658:	orr	w0, w0, w7, lsl #8
    c65c:	bl	5918 <PyNumber_FloorDivide@plt+0xd18>
    c660:	cmn	x0, #0x1
    c664:	b.eq	c6d0 <PyNumber_FloorDivide@plt+0x7ad0>  // b.none
    c668:	ldrb	w1, [x19, #32]
    c66c:	ldrb	w2, [x19, #33]
    c670:	lsl	w2, w2, #8
    c674:	orr	w1, w2, w1, lsl #16
    c678:	ldrb	w2, [x19, #34]
    c67c:	orr	w1, w1, w2
    c680:	scvtf	d1, w1
    c684:	mov	x1, #0x848000000000        	// #145685290680320
    c688:	movk	x1, #0x412e, lsl #48
    c68c:	fmov	d0, x1
    c690:	fdiv	d1, d1, d0
    c694:	mov	x1, #0xffffffffffffb780    	// #-18560
    c698:	movk	x1, #0x886c, lsl #16
    c69c:	movk	x1, #0xfff1, lsl #32
    c6a0:	add	x0, x0, x1
    c6a4:	fmov	d0, x0
    c6a8:	scvtf	d0, d0
    c6ac:	fadd	d0, d1, d0
    c6b0:	bl	48e0 <PyFloat_FromDouble@plt>
    c6b4:	mov	x19, x0
    c6b8:	mov	x0, x19
    c6bc:	ldp	x19, x20, [sp, #16]
    c6c0:	ldp	x29, x30, [sp], #32
    c6c4:	ret
    c6c8:	mov	x19, x0
    c6cc:	b	c6b8 <PyNumber_FloorDivide@plt+0x7ab8>
    c6d0:	mov	x19, #0x0                   	// #0
    c6d4:	b	c6b8 <PyNumber_FloorDivide@plt+0x7ab8>
    c6d8:	sub	sp, sp, #0x50
    c6dc:	stp	x29, x30, [sp, #16]
    c6e0:	add	x29, sp, #0x10
    c6e4:	str	x19, [sp, #32]
    c6e8:	mov	x19, x0
    c6ec:	mov	x0, x1
    c6f0:	mov	x1, x2
    c6f4:	str	xzr, [sp, #56]
    c6f8:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    c6fc:	add	x4, x4, #0x298
    c700:	add	x2, sp, #0x38
    c704:	str	x2, [sp]
    c708:	add	x7, sp, #0x40
    c70c:	add	x6, x4, #0x1a0
    c710:	add	x5, sp, #0x48
    c714:	add	x4, x4, #0x680
    c718:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    c71c:	add	x3, x3, #0xab8
    c720:	add	x3, x3, #0x410
    c724:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    c728:	add	x2, x2, #0x100
    c72c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    c730:	cbz	w0, c7c8 <PyNumber_FloorDivide@plt+0x7bc8>
    c734:	ldr	x0, [sp, #56]
    c738:	cbz	x0, c7a0 <PyNumber_FloorDivide@plt+0x7ba0>
    c73c:	ldr	x8, [sp, #72]
    c740:	ldr	x7, [sp, #64]
    c744:	ldrb	w6, [x7, #28]
    c748:	ldrb	w0, [x7, #29]
    c74c:	lsl	w0, w0, #8
    c750:	orr	w6, w0, w6, lsl #16
    c754:	ldrb	w10, [x7, #30]
    c758:	ldrb	w5, [x7, #27]
    c75c:	ldrb	w4, [x7, #26]
    c760:	ldrb	w3, [x7, #25]
    c764:	ldrb	w2, [x8, #28]
    c768:	ldrb	w1, [x8, #27]
    c76c:	ldrb	w9, [x8, #25]
    c770:	ldrb	w0, [x8, #26]
    c774:	str	x19, [sp, #8]
    c778:	ldrb	w7, [x7, #31]
    c77c:	str	w7, [sp]
    c780:	ldr	x7, [sp, #56]
    c784:	orr	w6, w6, w10
    c788:	orr	w0, w0, w9, lsl #8
    c78c:	bl	b650 <PyNumber_FloorDivide@plt+0x6a50>
    c790:	ldr	x19, [sp, #32]
    c794:	ldp	x29, x30, [sp, #16]
    c798:	add	sp, sp, #0x50
    c79c:	ret
    c7a0:	ldr	x0, [sp, #64]
    c7a4:	ldrb	w1, [x0, #24]
    c7a8:	cbz	w1, c7b8 <PyNumber_FloorDivide@plt+0x7bb8>
    c7ac:	ldr	x0, [x0, #32]
    c7b0:	str	x0, [sp, #56]
    c7b4:	b	c73c <PyNumber_FloorDivide@plt+0x7b3c>
    c7b8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c7bc:	ldr	x0, [x0, #4024]
    c7c0:	str	x0, [sp, #56]
    c7c4:	b	c73c <PyNumber_FloorDivide@plt+0x7b3c>
    c7c8:	mov	x0, #0x0                   	// #0
    c7cc:	b	c790 <PyNumber_FloorDivide@plt+0x7b90>
    c7d0:	sub	sp, sp, #0x70
    c7d4:	stp	x29, x30, [sp, #16]
    c7d8:	add	x29, sp, #0x10
    c7dc:	stp	x19, x20, [sp, #32]
    c7e0:	stp	x21, x22, [sp, #48]
    c7e4:	mov	x22, x0
    c7e8:	ldr	x0, [x1, #8]
    c7ec:	ldr	x0, [x0, #168]
    c7f0:	tbz	w0, #28, c85c <PyNumber_FloorDivide@plt+0x7c5c>
    c7f4:	mov	x19, x1
    c7f8:	mov	x0, x1
    c7fc:	bl	48d0 <PyUnicode_GetLength@plt>
    c800:	tbnz	x0, #63, ca28 <PyNumber_FloorDivide@plt+0x7e28>
    c804:	cmp	x0, #0xa
    c808:	b.le	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>
    c80c:	ldrb	w0, [x19, #32]
    c810:	and	w1, w0, #0x1c
    c814:	cmp	w1, #0x4
    c818:	b.eq	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.none
    c81c:	cmp	w1, #0x8
    c820:	b.eq	c87c <PyNumber_FloorDivide@plt+0x7c7c>  // b.none
    c824:	tbz	w0, #5, c9cc <PyNumber_FloorDivide@plt+0x7dcc>
    c828:	add	x3, x19, #0x58
    c82c:	add	x1, x19, #0x70
    c830:	tst	x0, #0x40
    c834:	csel	x1, x1, x3, eq  // eq = none
    c838:	ldr	w2, [x1]
    c83c:	mov	w1, #0xd7ff                	// #55295
    c840:	cmp	w2, w1
    c844:	b.ls	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.plast
    c848:	add	x2, x19, #0x70
    c84c:	add	x1, x19, #0x58
    c850:	tst	x0, #0x40
    c854:	csel	x0, x1, x2, ne  // ne = any
    c858:	b	c9e8 <PyNumber_FloorDivide@plt+0x7de8>
    c85c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    c860:	add	x1, x1, #0xda8
    c864:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c868:	ldr	x0, [x0, #3976]
    c86c:	ldr	x0, [x0]
    c870:	bl	4880 <PyErr_SetString@plt>
    c874:	mov	x19, #0x0                   	// #0
    c878:	b	c994 <PyNumber_FloorDivide@plt+0x7d94>
    c87c:	tbz	w0, #5, c9ac <PyNumber_FloorDivide@plt+0x7dac>
    c880:	add	x3, x19, #0x44
    c884:	add	x1, x19, #0x5c
    c888:	tst	x0, #0x40
    c88c:	csel	x1, x1, x3, eq  // eq = none
    c890:	ldrh	w2, [x1]
    c894:	mov	w1, #0xd7ff                	// #55295
    c898:	cmp	w2, w1
    c89c:	b.ls	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.plast
    c8a0:	add	x2, x19, #0x5c
    c8a4:	add	x1, x19, #0x44
    c8a8:	tst	x0, #0x40
    c8ac:	csel	x0, x1, x2, ne  // ne = any
    c8b0:	ldrh	w1, [x0]
    c8b4:	mov	w0, #0xdfff                	// #57343
    c8b8:	cmp	w1, w0
    c8bc:	b.ls	c9f8 <PyNumber_FloorDivide@plt+0x7df8>  // b.plast
    c8c0:	ldr	x0, [x19]
    c8c4:	add	x0, x0, #0x1
    c8c8:	str	x0, [x19]
    c8cc:	mov	x20, x19
    c8d0:	add	x1, sp, #0x68
    c8d4:	mov	x0, x20
    c8d8:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    c8dc:	mov	x21, x0
    c8e0:	cbz	x0, ca3c <PyNumber_FloorDivide@plt+0x7e3c>
    c8e4:	str	wzr, [sp, #100]
    c8e8:	str	wzr, [sp, #96]
    c8ec:	str	wzr, [sp, #92]
    c8f0:	str	wzr, [sp, #88]
    c8f4:	str	wzr, [sp, #84]
    c8f8:	str	wzr, [sp, #80]
    c8fc:	str	wzr, [sp, #76]
    c900:	str	wzr, [sp, #72]
    c904:	str	wzr, [sp, #68]
    c908:	add	x3, sp, #0x5c
    c90c:	add	x2, sp, #0x60
    c910:	add	x1, sp, #0x64
    c914:	mov	x0, x21
    c918:	bl	50bc <PyNumber_FloorDivide@plt+0x4bc>
    c91c:	cbnz	w0, c960 <PyNumber_FloorDivide@plt+0x7d60>
    c920:	ldr	x1, [sp, #104]
    c924:	cmp	x1, #0xa
    c928:	b.le	caf4 <PyNumber_FloorDivide@plt+0x7ef4>
    c92c:	ldrb	w0, [x21, #10]
    c930:	tbnz	w0, #7, ca54 <PyNumber_FloorDivide@plt+0x7e54>
    c934:	add	x0, x21, #0xb
    c938:	sub	x21, x0, x21
    c93c:	sub	x1, x1, x21
    c940:	str	x1, [sp, #104]
    c944:	add	x7, sp, #0x44
    c948:	add	x6, sp, #0x48
    c94c:	add	x5, sp, #0x4c
    c950:	add	x4, sp, #0x50
    c954:	add	x3, sp, #0x54
    c958:	add	x2, sp, #0x58
    c95c:	bl	5240 <PyNumber_FloorDivide@plt+0x640>
    c960:	tbz	w0, #31, ca78 <PyNumber_FloorDivide@plt+0x7e78>
    c964:	mov	x2, x19
    c968:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    c96c:	add	x1, x1, #0xdd0
    c970:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    c974:	ldr	x0, [x0, #3968]
    c978:	ldr	x0, [x0]
    c97c:	bl	4b60 <PyErr_Format@plt>
    c980:	ldr	x0, [x20]
    c984:	sub	x0, x0, #0x1
    c988:	str	x0, [x20]
    c98c:	mov	x19, #0x0                   	// #0
    c990:	cbz	x0, cb70 <PyNumber_FloorDivide@plt+0x7f70>
    c994:	mov	x0, x19
    c998:	ldp	x19, x20, [sp, #32]
    c99c:	ldp	x21, x22, [sp, #48]
    c9a0:	ldp	x29, x30, [sp, #16]
    c9a4:	add	sp, sp, #0x70
    c9a8:	ret
    c9ac:	ldr	x0, [x19, #72]
    c9b0:	ldrh	w1, [x0, #20]
    c9b4:	mov	w0, #0xd7ff                	// #55295
    c9b8:	cmp	w1, w0
    c9bc:	b.ls	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.plast
    c9c0:	ldr	x0, [x19, #72]
    c9c4:	add	x0, x0, #0x14
    c9c8:	b	c8b0 <PyNumber_FloorDivide@plt+0x7cb0>
    c9cc:	ldr	x0, [x19, #72]
    c9d0:	ldr	w1, [x0, #40]
    c9d4:	mov	w0, #0xd7ff                	// #55295
    c9d8:	cmp	w1, w0
    c9dc:	b.ls	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.plast
    c9e0:	ldr	x0, [x19, #72]
    c9e4:	add	x0, x0, #0x28
    c9e8:	ldr	w1, [x0]
    c9ec:	mov	w0, #0xdfff                	// #57343
    c9f0:	cmp	w1, w0
    c9f4:	b.hi	c8c0 <PyNumber_FloorDivide@plt+0x7cc0>  // b.pmore
    c9f8:	mov	x0, x19
    c9fc:	bl	47a0 <_PyUnicode_Copy@plt>
    ca00:	mov	x20, x0
    ca04:	cbz	x0, ca28 <PyNumber_FloorDivide@plt+0x7e28>
    ca08:	mov	w2, #0x54                  	// #84
    ca0c:	mov	x1, #0xa                   	// #10
    ca10:	bl	4860 <PyUnicode_WriteChar@plt>
    ca14:	cbz	w0, c8d0 <PyNumber_FloorDivide@plt+0x7cd0>
    ca18:	ldr	x0, [x20]
    ca1c:	sub	x0, x0, #0x1
    ca20:	str	x0, [x20]
    ca24:	cbz	x0, ca30 <PyNumber_FloorDivide@plt+0x7e30>
    ca28:	mov	x19, #0x0                   	// #0
    ca2c:	b	c994 <PyNumber_FloorDivide@plt+0x7d94>
    ca30:	mov	x0, x20
    ca34:	bl	4810 <_Py_Dealloc@plt>
    ca38:	b	ca28 <PyNumber_FloorDivide@plt+0x7e28>
    ca3c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ca40:	ldr	x0, [x0, #4032]
    ca44:	ldr	x0, [x0]
    ca48:	bl	48a0 <PyErr_ExceptionMatches@plt>
    ca4c:	cbnz	w0, c964 <PyNumber_FloorDivide@plt+0x7d64>
    ca50:	b	c980 <PyNumber_FloorDivide@plt+0x7d80>
    ca54:	and	w2, w0, #0xf0
    ca58:	add	x0, x21, #0xd
    ca5c:	cmp	w2, #0xe0
    ca60:	b.eq	c938 <PyNumber_FloorDivide@plt+0x7d38>  // b.none
    ca64:	add	x3, x21, #0xc
    ca68:	add	x0, x21, #0xe
    ca6c:	cmp	w2, #0xf0
    ca70:	csel	x0, x0, x3, eq  // eq = none
    ca74:	b	c938 <PyNumber_FloorDivide@plt+0x7d38>
    ca78:	cmp	w0, #0x1
    ca7c:	b.ne	caf4 <PyNumber_FloorDivide@plt+0x7ef4>  // b.any
    ca80:	ldr	w1, [sp, #72]
    ca84:	cbnz	w1, caa0 <PyNumber_FloorDivide@plt+0x7ea0>
    ca88:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    ca8c:	ldr	x21, [x0, #3960]
    ca90:	ldr	x0, [x21]
    ca94:	add	x0, x0, #0x1
    ca98:	str	x0, [x21]
    ca9c:	b	cb08 <PyNumber_FloorDivide@plt+0x7f08>
    caa0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    caa4:	add	x4, x4, #0x298
    caa8:	add	x4, x4, #0x4e0
    caac:	mov	w3, #0x1                   	// #1
    cab0:	ldr	w2, [sp, #68]
    cab4:	mov	w0, #0x0                   	// #0
    cab8:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    cabc:	mov	x19, x0
    cac0:	cbz	x0, c980 <PyNumber_FloorDivide@plt+0x7d80>
    cac4:	mov	x1, #0x0                   	// #0
    cac8:	bl	5a40 <PyNumber_FloorDivide@plt+0xe40>
    cacc:	mov	x21, x0
    cad0:	ldr	x0, [x19]
    cad4:	sub	x0, x0, #0x1
    cad8:	str	x0, [x19]
    cadc:	cbz	x0, cae8 <PyNumber_FloorDivide@plt+0x7ee8>
    cae0:	cbz	x21, c980 <PyNumber_FloorDivide@plt+0x7d80>
    cae4:	b	cb08 <PyNumber_FloorDivide@plt+0x7f08>
    cae8:	mov	x0, x19
    caec:	bl	4810 <_Py_Dealloc@plt>
    caf0:	b	cae0 <PyNumber_FloorDivide@plt+0x7ee0>
    caf4:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    caf8:	ldr	x21, [x21, #4024]
    cafc:	ldr	x0, [x21]
    cb00:	add	x0, x0, #0x1
    cb04:	str	x0, [x21]
    cb08:	str	x22, [sp, #8]
    cb0c:	str	wzr, [sp]
    cb10:	mov	x7, x21
    cb14:	ldr	w6, [sp, #76]
    cb18:	ldr	w5, [sp, #80]
    cb1c:	ldr	w4, [sp, #84]
    cb20:	ldr	w3, [sp, #88]
    cb24:	ldr	w2, [sp, #92]
    cb28:	ldr	w1, [sp, #96]
    cb2c:	ldr	w0, [sp, #100]
    cb30:	bl	b650 <PyNumber_FloorDivide@plt+0x6a50>
    cb34:	mov	x19, x0
    cb38:	ldr	x0, [x21]
    cb3c:	sub	x0, x0, #0x1
    cb40:	str	x0, [x21]
    cb44:	cbz	x0, cb64 <PyNumber_FloorDivide@plt+0x7f64>
    cb48:	ldr	x0, [x20]
    cb4c:	sub	x0, x0, #0x1
    cb50:	str	x0, [x20]
    cb54:	cbnz	x0, c994 <PyNumber_FloorDivide@plt+0x7d94>
    cb58:	mov	x0, x20
    cb5c:	bl	4810 <_Py_Dealloc@plt>
    cb60:	b	c994 <PyNumber_FloorDivide@plt+0x7d94>
    cb64:	mov	x0, x21
    cb68:	bl	4810 <_Py_Dealloc@plt>
    cb6c:	b	cb48 <PyNumber_FloorDivide@plt+0x7f48>
    cb70:	mov	x0, x20
    cb74:	bl	4810 <_Py_Dealloc@plt>
    cb78:	mov	x19, #0x0                   	// #0
    cb7c:	b	c994 <PyNumber_FloorDivide@plt+0x7d94>
    cb80:	sub	sp, sp, #0x20
    cb84:	stp	x29, x30, [sp, #16]
    cb88:	add	x29, sp, #0x10
    cb8c:	ldr	x8, [sp, #32]
    cb90:	str	x8, [sp, #8]
    cb94:	str	wzr, [sp]
    cb98:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    cb9c:	ldp	x29, x30, [sp, #16]
    cba0:	add	sp, sp, #0x20
    cba4:	ret
    cba8:	sub	sp, sp, #0x20
    cbac:	stp	x29, x30, [sp, #16]
    cbb0:	add	x29, sp, #0x10
    cbb4:	mov	w8, w0
    cbb8:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    cbbc:	add	x4, x4, #0x298
    cbc0:	add	x4, x4, #0x680
    cbc4:	cmp	x3, x4
    cbc8:	b.eq	cc04 <PyNumber_FloorDivide@plt+0x8004>  // b.none
    cbcc:	mov	x0, x3
    cbd0:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    cbd4:	add	x3, x3, #0x298
    cbd8:	cmp	x0, x3
    cbdc:	b.eq	cc10 <PyNumber_FloorDivide@plt+0x8010>  // b.none
    cbe0:	mov	w4, w2
    cbe4:	mov	w3, w1
    cbe8:	mov	w2, w8
    cbec:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    cbf0:	add	x1, x1, #0x810
    cbf4:	bl	4950 <PyObject_CallFunction@plt>
    cbf8:	ldp	x29, x30, [sp, #16]
    cbfc:	add	sp, sp, #0x20
    cc00:	ret
    cc04:	mov	x3, x4
    cc08:	bl	61d8 <PyNumber_FloorDivide@plt+0x15d8>
    cc0c:	b	cbf8 <PyNumber_FloorDivide@plt+0x7ff8>
    cc10:	str	x3, [sp]
    cc14:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    cc18:	ldr	x7, [x7, #4024]
    cc1c:	mov	w6, #0x0                   	// #0
    cc20:	mov	w5, #0x0                   	// #0
    cc24:	mov	w4, #0x0                   	// #0
    cc28:	mov	w3, #0x0                   	// #0
    cc2c:	mov	w0, w8
    cc30:	bl	cb80 <PyNumber_FloorDivide@plt+0x7f80>
    cc34:	b	cbf8 <PyNumber_FloorDivide@plt+0x7ff8>
    cc38:	stp	x29, x30, [sp, #-96]!
    cc3c:	mov	x29, sp
    cc40:	str	x19, [sp, #16]
    cc44:	mov	x19, x0
    cc48:	mov	x0, x1
    cc4c:	mov	w2, #0x0                   	// #0
    cc50:	add	x1, sp, #0x20
    cc54:	bl	4a70 <_PyTime_ObjectToTime_t@plt>
    cc58:	cmn	w0, #0x1
    cc5c:	b.eq	cca0 <PyNumber_FloorDivide@plt+0x80a0>  // b.none
    cc60:	add	x1, sp, #0x28
    cc64:	ldr	x0, [sp, #32]
    cc68:	bl	4bc0 <_PyTime_localtime@plt>
    cc6c:	mov	w1, w0
    cc70:	mov	x0, #0x0                   	// #0
    cc74:	cbnz	w1, cc94 <PyNumber_FloorDivide@plt+0x8094>
    cc78:	mov	x3, x19
    cc7c:	ldr	w2, [sp, #52]
    cc80:	ldr	w1, [sp, #56]
    cc84:	add	w1, w1, #0x1
    cc88:	ldr	w0, [sp, #60]
    cc8c:	add	w0, w0, #0x76c
    cc90:	bl	cba8 <PyNumber_FloorDivide@plt+0x7fa8>
    cc94:	ldr	x19, [sp, #16]
    cc98:	ldp	x29, x30, [sp], #96
    cc9c:	ret
    cca0:	mov	x0, #0x0                   	// #0
    cca4:	b	cc94 <PyNumber_FloorDivide@plt+0x8094>
    cca8:	stp	x29, x30, [sp, #-48]!
    ccac:	mov	x29, sp
    ccb0:	str	x19, [sp, #16]
    ccb4:	mov	x19, x0
    ccb8:	mov	x0, x1
    ccbc:	add	x4, sp, #0x28
    ccc0:	mov	x3, #0x1                   	// #1
    ccc4:	mov	x2, x3
    ccc8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    cccc:	add	x1, x1, #0x110
    ccd0:	bl	4990 <PyArg_UnpackTuple@plt>
    ccd4:	cbz	w0, ccf0 <PyNumber_FloorDivide@plt+0x80f0>
    ccd8:	ldr	x1, [sp, #40]
    ccdc:	mov	x0, x19
    cce0:	bl	cc38 <PyNumber_FloorDivide@plt+0x8038>
    cce4:	ldr	x19, [sp, #16]
    cce8:	ldp	x29, x30, [sp], #48
    ccec:	ret
    ccf0:	mov	x0, #0x0                   	// #0
    ccf4:	b	cce4 <PyNumber_FloorDivide@plt+0x80e4>
    ccf8:	stp	x29, x30, [sp, #-16]!
    ccfc:	mov	x29, sp
    cd00:	bl	cc38 <PyNumber_FloorDivide@plt+0x8038>
    cd04:	ldp	x29, x30, [sp], #16
    cd08:	ret
    cd0c:	stp	x29, x30, [sp, #-48]!
    cd10:	mov	x29, sp
    cd14:	str	x19, [sp, #16]
    cd18:	mov	x19, x0
    cd1c:	mov	x0, x1
    cd20:	add	x2, sp, #0x2c
    cd24:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    cd28:	add	x1, x1, #0x120
    cd2c:	bl	4a30 <PyArg_ParseTuple@plt>
    cd30:	cbz	w0, cd90 <PyNumber_FloorDivide@plt+0x8190>
    cd34:	ldr	w0, [sp, #44]
    cd38:	cmp	w0, #0x0
    cd3c:	b.le	cd70 <PyNumber_FloorDivide@plt+0x8170>
    cd40:	add	x3, sp, #0x28
    cd44:	add	x2, sp, #0x24
    cd48:	add	x1, sp, #0x20
    cd4c:	bl	4dd4 <PyNumber_FloorDivide@plt+0x1d4>
    cd50:	mov	x3, x19
    cd54:	ldr	w2, [sp, #40]
    cd58:	ldr	w1, [sp, #36]
    cd5c:	ldr	w0, [sp, #32]
    cd60:	bl	cba8 <PyNumber_FloorDivide@plt+0x7fa8>
    cd64:	ldr	x19, [sp, #16]
    cd68:	ldp	x29, x30, [sp], #48
    cd6c:	ret
    cd70:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    cd74:	add	x1, x1, #0x130
    cd78:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    cd7c:	ldr	x0, [x0, #3968]
    cd80:	ldr	x0, [x0]
    cd84:	bl	4880 <PyErr_SetString@plt>
    cd88:	mov	x0, #0x0                   	// #0
    cd8c:	b	cd64 <PyNumber_FloorDivide@plt+0x8164>
    cd90:	mov	x0, #0x0                   	// #0
    cd94:	b	cd64 <PyNumber_FloorDivide@plt+0x8164>
    cd98:	stp	x29, x30, [sp, #-64]!
    cd9c:	mov	x29, sp
    cda0:	stp	x19, x20, [sp, #16]
    cda4:	mov	x20, x0
    cda8:	ldr	x0, [x1, #8]
    cdac:	ldr	x0, [x0, #168]
    cdb0:	tbz	w0, #28, ce0c <PyNumber_FloorDivide@plt+0x820c>
    cdb4:	mov	x19, x1
    cdb8:	add	x1, sp, #0x38
    cdbc:	mov	x0, x19
    cdc0:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    cdc4:	cbz	x0, ce2c <PyNumber_FloorDivide@plt+0x822c>
    cdc8:	str	wzr, [sp, #52]
    cdcc:	str	wzr, [sp, #48]
    cdd0:	str	wzr, [sp, #44]
    cdd4:	ldr	x1, [sp, #56]
    cdd8:	cmp	x1, #0xa
    cddc:	b.ne	ce2c <PyNumber_FloorDivide@plt+0x822c>  // b.any
    cde0:	add	x3, sp, #0x2c
    cde4:	add	x2, sp, #0x30
    cde8:	add	x1, sp, #0x34
    cdec:	bl	50bc <PyNumber_FloorDivide@plt+0x4bc>
    cdf0:	tbnz	w0, #31, ce2c <PyNumber_FloorDivide@plt+0x822c>
    cdf4:	mov	x3, x20
    cdf8:	ldr	w2, [sp, #44]
    cdfc:	ldr	w1, [sp, #48]
    ce00:	ldr	w0, [sp, #52]
    ce04:	bl	cba8 <PyNumber_FloorDivide@plt+0x7fa8>
    ce08:	b	ce4c <PyNumber_FloorDivide@plt+0x824c>
    ce0c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    ce10:	add	x1, x1, #0xda8
    ce14:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ce18:	ldr	x0, [x0, #3976]
    ce1c:	ldr	x0, [x0]
    ce20:	bl	4880 <PyErr_SetString@plt>
    ce24:	mov	x0, #0x0                   	// #0
    ce28:	b	ce4c <PyNumber_FloorDivide@plt+0x824c>
    ce2c:	mov	x2, x19
    ce30:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    ce34:	add	x1, x1, #0xdd0
    ce38:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    ce3c:	ldr	x0, [x0, #3968]
    ce40:	ldr	x0, [x0]
    ce44:	bl	4b60 <PyErr_Format@plt>
    ce48:	mov	x0, #0x0                   	// #0
    ce4c:	ldp	x19, x20, [sp, #16]
    ce50:	ldp	x29, x30, [sp], #64
    ce54:	ret
    ce58:	sub	sp, sp, #0x30
    ce5c:	stp	x29, x30, [sp, #16]
    ce60:	add	x29, sp, #0x10
    ce64:	stp	x19, x20, [sp, #32]
    ce68:	mov	x8, x0
    ce6c:	ldrb	w0, [x0, #25]
    ce70:	ldrb	w1, [x8, #26]
    ce74:	orr	w0, w1, w0, lsl #8
    ce78:	ldrb	w1, [x8, #27]
    ce7c:	ldrb	w2, [x8, #28]
    ce80:	ldrb	w3, [x8, #29]
    ce84:	ldrb	w4, [x8, #30]
    ce88:	ldrb	w5, [x8, #31]
    ce8c:	ldrb	w6, [x8, #32]
    ce90:	ldrb	w7, [x8, #33]
    ce94:	lsl	w7, w7, #8
    ce98:	orr	w6, w7, w6, lsl #16
    ce9c:	ldrb	w7, [x8, #34]
    cea0:	orr	w6, w6, w7
    cea4:	ldrb	w7, [x8, #24]
    cea8:	cbz	w7, ceb4 <PyNumber_FloorDivide@plt+0x82b4>
    ceac:	ldr	x7, [x8, #40]
    ceb0:	b	cebc <PyNumber_FloorDivide@plt+0x82bc>
    ceb4:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    ceb8:	ldr	x7, [x7, #4024]
    cebc:	ldr	x9, [x8, #8]
    cec0:	str	x9, [sp, #8]
    cec4:	ldrb	w8, [x8, #35]
    cec8:	cmp	w8, #0x0
    cecc:	cset	w8, eq  // eq = none
    ced0:	str	w8, [sp]
    ced4:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    ced8:	mov	x19, x0
    cedc:	cbz	x0, cf1c <PyNumber_FloorDivide@plt+0x831c>
    cee0:	mov	x1, #0x0                   	// #0
    cee4:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    cee8:	mov	x20, x0
    ceec:	ldr	x1, [x19]
    cef0:	sub	x1, x1, #0x1
    cef4:	str	x1, [x19]
    cef8:	cbz	x1, cf10 <PyNumber_FloorDivide@plt+0x8310>
    cefc:	mov	x0, x20
    cf00:	ldp	x19, x20, [sp, #32]
    cf04:	ldp	x29, x30, [sp, #16]
    cf08:	add	sp, sp, #0x30
    cf0c:	ret
    cf10:	mov	x0, x19
    cf14:	bl	4810 <_Py_Dealloc@plt>
    cf18:	b	cefc <PyNumber_FloorDivide@plt+0x82fc>
    cf1c:	mov	x20, x0
    cf20:	b	cefc <PyNumber_FloorDivide@plt+0x82fc>
    cf24:	stp	x29, x30, [sp, #-48]!
    cf28:	mov	x29, sp
    cf2c:	stp	x19, x20, [sp, #16]
    cf30:	stp	x21, x22, [sp, #32]
    cf34:	mov	x22, x1
    cf38:	mov	x20, x2
    cf3c:	mov	x21, x3
    cf40:	bl	ce58 <PyNumber_FloorDivide@plt+0x8258>
    cf44:	cbz	x0, cfe0 <PyNumber_FloorDivide@plt+0x83e0>
    cf48:	mov	x19, x0
    cf4c:	cmp	x0, x20
    cf50:	b.eq	cf60 <PyNumber_FloorDivide@plt+0x8360>  // b.none
    cf54:	mov	x1, x20
    cf58:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    cf5c:	cbnz	w0, cfcc <PyNumber_FloorDivide@plt+0x83cc>
    cf60:	ldr	x0, [x19]
    cf64:	sub	x0, x0, #0x1
    cf68:	str	x0, [x19]
    cf6c:	cbz	x0, cfc0 <PyNumber_FloorDivide@plt+0x83c0>
    cf70:	mov	x0, x22
    cf74:	bl	ce58 <PyNumber_FloorDivide@plt+0x8258>
    cf78:	mov	x19, x0
    cf7c:	cbz	x0, cfe8 <PyNumber_FloorDivide@plt+0x83e8>
    cf80:	mov	w20, #0x0                   	// #0
    cf84:	cmp	x0, x21
    cf88:	b.eq	cf9c <PyNumber_FloorDivide@plt+0x839c>  // b.none
    cf8c:	mov	x1, x21
    cf90:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    cf94:	cmp	w0, #0x0
    cf98:	cset	w20, ne  // ne = any
    cf9c:	ldr	x0, [x19]
    cfa0:	sub	x0, x0, #0x1
    cfa4:	str	x0, [x19]
    cfa8:	cbz	x0, cfd4 <PyNumber_FloorDivide@plt+0x83d4>
    cfac:	mov	w0, w20
    cfb0:	ldp	x19, x20, [sp, #16]
    cfb4:	ldp	x21, x22, [sp, #32]
    cfb8:	ldp	x29, x30, [sp], #48
    cfbc:	ret
    cfc0:	mov	x0, x19
    cfc4:	bl	4810 <_Py_Dealloc@plt>
    cfc8:	b	cf70 <PyNumber_FloorDivide@plt+0x8370>
    cfcc:	mov	w20, #0x1                   	// #1
    cfd0:	b	cf9c <PyNumber_FloorDivide@plt+0x839c>
    cfd4:	mov	x0, x19
    cfd8:	bl	4810 <_Py_Dealloc@plt>
    cfdc:	b	cfac <PyNumber_FloorDivide@plt+0x83ac>
    cfe0:	mov	w20, #0xffffffff            	// #-1
    cfe4:	b	cfac <PyNumber_FloorDivide@plt+0x83ac>
    cfe8:	mov	w20, #0xffffffff            	// #-1
    cfec:	b	cfac <PyNumber_FloorDivide@plt+0x83ac>
    cff0:	stp	x29, x30, [sp, #-80]!
    cff4:	mov	x29, sp
    cff8:	stp	x19, x20, [sp, #16]
    cffc:	stp	x21, x22, [sp, #32]
    d000:	stp	x23, x24, [sp, #48]
    d004:	mov	x20, x0
    d008:	mov	x19, x1
    d00c:	mov	w23, w2
    d010:	ldr	x0, [x1, #8]
    d014:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d018:	add	x1, x1, #0x298
    d01c:	cmp	x0, x1
    d020:	b.eq	d0f4 <PyNumber_FloorDivide@plt+0x84f4>  // b.none
    d024:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d028:	add	x1, x1, #0x298
    d02c:	bl	4b30 <PyType_IsSubtype@plt>
    d030:	cbnz	w0, d0f4 <PyNumber_FloorDivide@plt+0x84f4>
    d034:	ldr	x0, [x19, #8]
    d038:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d03c:	add	x1, x1, #0x298
    d040:	add	x1, x1, #0x680
    d044:	cmp	x0, x1
    d048:	b.eq	d060 <PyNumber_FloorDivide@plt+0x8460>  // b.none
    d04c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d050:	add	x1, x1, #0x298
    d054:	add	x1, x1, #0x680
    d058:	bl	4b30 <PyType_IsSubtype@plt>
    d05c:	cbz	w0, d0d8 <PyNumber_FloorDivide@plt+0x84d8>
    d060:	cmp	w23, #0x2
    d064:	b.eq	d08c <PyNumber_FloorDivide@plt+0x848c>  // b.none
    d068:	cmp	w23, #0x3
    d06c:	b.ne	d0a8 <PyNumber_FloorDivide@plt+0x84a8>  // b.any
    d070:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    d074:	ldr	x0, [x21, #4040]
    d078:	ldr	x1, [x0]
    d07c:	add	x1, x1, #0x1
    d080:	str	x1, [x0]
    d084:	mov	x21, x0
    d088:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d08c:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    d090:	ldr	x0, [x21, #3992]
    d094:	ldr	x1, [x0]
    d098:	add	x1, x1, #0x1
    d09c:	str	x1, [x0]
    d0a0:	mov	x21, x0
    d0a4:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d0a8:	ldr	x1, [x19, #8]
    d0ac:	ldr	x0, [x20, #8]
    d0b0:	ldr	x3, [x1, #24]
    d0b4:	ldr	x2, [x0, #24]
    d0b8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    d0bc:	add	x1, x1, #0x148
    d0c0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d0c4:	ldr	x0, [x0, #3976]
    d0c8:	ldr	x0, [x0]
    d0cc:	bl	4b60 <PyErr_Format@plt>
    d0d0:	mov	x21, #0x0                   	// #0
    d0d4:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d0d8:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    d0dc:	ldr	x0, [x21, #3960]
    d0e0:	ldr	x1, [x0]
    d0e4:	add	x1, x1, #0x1
    d0e8:	str	x1, [x0]
    d0ec:	mov	x21, x0
    d0f0:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d0f4:	ldrb	w0, [x20, #24]
    d0f8:	cbz	w0, d2c4 <PyNumber_FloorDivide@plt+0x86c4>
    d0fc:	ldr	x0, [x20, #40]
    d100:	ldrb	w2, [x19, #24]
    d104:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    d108:	ldr	x1, [x1, #4024]
    d10c:	cbz	w2, d2d8 <PyNumber_FloorDivide@plt+0x86d8>
    d110:	b	d2d4 <PyNumber_FloorDivide@plt+0x86d4>
    d114:	mov	x2, #0xa                   	// #10
    d118:	add	x1, x19, #0x19
    d11c:	add	x0, x20, #0x19
    d120:	bl	49e0 <memcmp@plt>
    d124:	mov	w1, w23
    d128:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    d12c:	mov	x21, x0
    d130:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d134:	mov	x3, x24
    d138:	mov	x2, x22
    d13c:	mov	x1, x19
    d140:	mov	x0, x20
    d144:	bl	cf24 <PyNumber_FloorDivide@plt+0x8324>
    d148:	mov	x21, #0x0                   	// #0
    d14c:	cmn	w0, #0x1
    d150:	b.eq	d3a4 <PyNumber_FloorDivide@plt+0x87a4>  // b.none
    d154:	cmp	w0, #0x0
    d158:	cset	w0, ne  // ne = any
    d15c:	b	d398 <PyNumber_FloorDivide@plt+0x8798>
    d160:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d164:	ldr	x0, [x0, #4024]
    d168:	cmp	x24, x0
    d16c:	ccmp	x22, x0, #0x4, ne  // ne = any
    d170:	b.ne	d1a0 <PyNumber_FloorDivide@plt+0x85a0>  // b.any
    d174:	cmp	w23, #0x2
    d178:	b.eq	d230 <PyNumber_FloorDivide@plt+0x8630>  // b.none
    d17c:	cmp	w23, #0x3
    d180:	b.ne	d24c <PyNumber_FloorDivide@plt+0x864c>  // b.any
    d184:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    d188:	ldr	x0, [x21, #4040]
    d18c:	ldr	x1, [x0]
    d190:	add	x1, x1, #0x1
    d194:	str	x1, [x0]
    d198:	mov	x21, x0
    d19c:	b	d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d1a0:	mov	x1, x19
    d1a4:	mov	x0, x20
    d1a8:	bl	c1cc <PyNumber_FloorDivide@plt+0x75cc>
    d1ac:	mov	x21, x0
    d1b0:	cbz	x0, d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d1b4:	str	x25, [sp, #64]
    d1b8:	ldr	w25, [x0, #24]
    d1bc:	cbnz	w25, d2a8 <PyNumber_FloorDivide@plt+0x86a8>
    d1c0:	ldr	w25, [x0, #28]
    d1c4:	ldr	w0, [x0, #32]
    d1c8:	orr	w25, w25, w0
    d1cc:	ldr	x0, [x21]
    d1d0:	sub	x0, x0, #0x1
    d1d4:	str	x0, [x21]
    d1d8:	cbz	x0, d2b8 <PyNumber_FloorDivide@plt+0x86b8>
    d1dc:	sub	w0, w23, #0x2
    d1e0:	cmp	w25, #0x0
    d1e4:	ccmp	w0, #0x1, #0x2, eq  // eq = none
    d1e8:	b.ls	d204 <PyNumber_FloorDivide@plt+0x8604>  // b.plast
    d1ec:	mov	w1, w23
    d1f0:	mov	w0, w25
    d1f4:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    d1f8:	mov	x21, x0
    d1fc:	ldr	x25, [sp, #64]
    d200:	b	d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d204:	mov	x3, x24
    d208:	mov	x2, x22
    d20c:	mov	x1, x19
    d210:	mov	x0, x20
    d214:	bl	cf24 <PyNumber_FloorDivide@plt+0x8324>
    d218:	mov	x21, #0x0                   	// #0
    d21c:	cmn	w0, #0x1
    d220:	b.eq	d280 <PyNumber_FloorDivide@plt+0x8680>  // b.none
    d224:	cmp	w0, #0x0
    d228:	cset	w25, ne  // ne = any
    d22c:	b	d1ec <PyNumber_FloorDivide@plt+0x85ec>
    d230:	adrp	x21, 24000 <PyInit__datetime@@Base+0x155b0>
    d234:	ldr	x0, [x21, #3992]
    d238:	ldr	x1, [x0]
    d23c:	add	x1, x1, #0x1
    d240:	str	x1, [x0]
    d244:	mov	x21, x0
    d248:	b	d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d24c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    d250:	add	x1, x1, #0x160
    d254:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d258:	ldr	x0, [x0, #3976]
    d25c:	ldr	x0, [x0]
    d260:	bl	4880 <PyErr_SetString@plt>
    d264:	mov	x21, #0x0                   	// #0
    d268:	b	d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d26c:	mov	x0, x24
    d270:	bl	4810 <_Py_Dealloc@plt>
    d274:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d278:	mov	x21, x0
    d27c:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d280:	ldr	x25, [sp, #64]
    d284:	b	d3a4 <PyNumber_FloorDivide@plt+0x87a4>
    d288:	ldr	x0, [x22]
    d28c:	sub	x0, x0, #0x1
    d290:	str	x0, [x22]
    d294:	mov	x21, x24
    d298:	cbnz	x0, d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d29c:	mov	x0, x22
    d2a0:	bl	4810 <_Py_Dealloc@plt>
    d2a4:	b	d3c4 <PyNumber_FloorDivide@plt+0x87c4>
    d2a8:	ldr	x0, [x0]
    d2ac:	sub	x0, x0, #0x1
    d2b0:	str	x0, [x21]
    d2b4:	cbnz	x0, d1ec <PyNumber_FloorDivide@plt+0x85ec>
    d2b8:	mov	x0, x21
    d2bc:	bl	4810 <_Py_Dealloc@plt>
    d2c0:	b	d1dc <PyNumber_FloorDivide@plt+0x85dc>
    d2c4:	ldrb	w1, [x19, #24]
    d2c8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d2cc:	ldr	x0, [x0, #4024]
    d2d0:	cbz	w1, d114 <PyNumber_FloorDivide@plt+0x8514>
    d2d4:	ldr	x1, [x19, #40]
    d2d8:	cmp	x1, x0
    d2dc:	b.eq	d114 <PyNumber_FloorDivide@plt+0x8514>  // b.none
    d2e0:	mov	x1, #0x0                   	// #0
    d2e4:	mov	x0, x20
    d2e8:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    d2ec:	mov	x22, x0
    d2f0:	cbz	x0, d278 <PyNumber_FloorDivide@plt+0x8678>
    d2f4:	mov	x1, #0x0                   	// #0
    d2f8:	mov	x0, x19
    d2fc:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    d300:	mov	x24, x0
    d304:	cbz	x0, d288 <PyNumber_FloorDivide@plt+0x8688>
    d308:	cmp	x22, x0
    d30c:	b.eq	d378 <PyNumber_FloorDivide@plt+0x8778>  // b.none
    d310:	ldr	x0, [x22, #8]
    d314:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d318:	add	x1, x1, #0x298
    d31c:	add	x1, x1, #0x4e0
    d320:	cmp	x0, x1
    d324:	b.eq	d33c <PyNumber_FloorDivide@plt+0x873c>  // b.none
    d328:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d32c:	add	x1, x1, #0x298
    d330:	add	x1, x1, #0x4e0
    d334:	bl	4b30 <PyType_IsSubtype@plt>
    d338:	cbz	w0, d160 <PyNumber_FloorDivide@plt+0x8560>
    d33c:	ldr	x0, [x24, #8]
    d340:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d344:	add	x1, x1, #0x298
    d348:	add	x1, x1, #0x4e0
    d34c:	cmp	x0, x1
    d350:	b.eq	d368 <PyNumber_FloorDivide@plt+0x8768>  // b.none
    d354:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d358:	add	x1, x1, #0x298
    d35c:	add	x1, x1, #0x4e0
    d360:	bl	4b30 <PyType_IsSubtype@plt>
    d364:	cbz	w0, d160 <PyNumber_FloorDivide@plt+0x8560>
    d368:	mov	x1, x24
    d36c:	mov	x0, x22
    d370:	bl	53b0 <PyNumber_FloorDivide@plt+0x7b0>
    d374:	cbnz	w0, d160 <PyNumber_FloorDivide@plt+0x8560>
    d378:	mov	x2, #0xa                   	// #10
    d37c:	add	x1, x19, #0x19
    d380:	add	x0, x20, #0x19
    d384:	bl	49e0 <memcmp@plt>
    d388:	sub	w1, w23, #0x2
    d38c:	cmp	w0, #0x0
    d390:	ccmp	w1, #0x1, #0x2, eq  // eq = none
    d394:	b.ls	d134 <PyNumber_FloorDivide@plt+0x8534>  // b.plast
    d398:	mov	w1, w23
    d39c:	bl	6664 <PyNumber_FloorDivide@plt+0x1a64>
    d3a0:	mov	x21, x0
    d3a4:	ldr	x0, [x22]
    d3a8:	sub	x0, x0, #0x1
    d3ac:	str	x0, [x22]
    d3b0:	cbz	x0, d3dc <PyNumber_FloorDivide@plt+0x87dc>
    d3b4:	ldr	x0, [x24]
    d3b8:	sub	x0, x0, #0x1
    d3bc:	str	x0, [x24]
    d3c0:	cbz	x0, d26c <PyNumber_FloorDivide@plt+0x866c>
    d3c4:	mov	x0, x21
    d3c8:	ldp	x19, x20, [sp, #16]
    d3cc:	ldp	x21, x22, [sp, #32]
    d3d0:	ldp	x23, x24, [sp, #48]
    d3d4:	ldp	x29, x30, [sp], #80
    d3d8:	ret
    d3dc:	mov	x0, x22
    d3e0:	bl	4810 <_Py_Dealloc@plt>
    d3e4:	b	d3b4 <PyNumber_FloorDivide@plt+0x87b4>
    d3e8:	sub	sp, sp, #0x90
    d3ec:	stp	x29, x30, [sp, #48]
    d3f0:	add	x29, sp, #0x30
    d3f4:	stp	x19, x20, [sp, #64]
    d3f8:	stp	x21, x22, [sp, #80]
    d3fc:	mov	x21, x0
    d400:	mov	x19, x1
    d404:	mov	x20, x2
    d408:	str	wzr, [sp, #128]
    d40c:	str	wzr, [sp, #124]
    d410:	str	wzr, [sp, #120]
    d414:	str	wzr, [sp, #116]
    d418:	str	wzr, [sp, #112]
    d41c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    d420:	ldr	x1, [x1, #4024]
    d424:	str	x1, [sp, #104]
    d428:	ldr	x0, [x19, #16]
    d42c:	sub	x1, x0, #0x1
    d430:	cmp	x1, #0x1
    d434:	b.hi	d468 <PyNumber_FloorDivide@plt+0x8868>  // b.pmore
    d438:	ldr	x22, [x19, #24]
    d43c:	cmp	x0, #0x2
    d440:	b.eq	d514 <PyNumber_FloorDivide@plt+0x8914>  // b.none
    d444:	ldr	x0, [x22, #8]
    d448:	ldr	x0, [x0, #168]
    d44c:	tbz	w0, #27, d54c <PyNumber_FloorDivide@plt+0x894c>
    d450:	ldr	x0, [x22, #16]
    d454:	cmp	x0, #0xa
    d458:	b.eq	d520 <PyNumber_FloorDivide@plt+0x8920>  // b.none
    d45c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d460:	ldr	x0, [x0, #4024]
    d464:	str	x0, [sp, #104]
    d468:	add	x0, sp, #0x70
    d46c:	str	x0, [sp, #32]
    d470:	add	x0, sp, #0x68
    d474:	str	x0, [sp, #24]
    d478:	add	x0, sp, #0x74
    d47c:	str	x0, [sp, #16]
    d480:	add	x0, sp, #0x78
    d484:	str	x0, [sp, #8]
    d488:	add	x0, sp, #0x7c
    d48c:	str	x0, [sp]
    d490:	add	x7, sp, #0x80
    d494:	add	x6, sp, #0x84
    d498:	add	x5, sp, #0x88
    d49c:	add	x4, sp, #0x8c
    d4a0:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    d4a4:	add	x3, x3, #0xab8
    d4a8:	add	x3, x3, #0x430
    d4ac:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    d4b0:	add	x2, x2, #0x210
    d4b4:	mov	x1, x20
    d4b8:	mov	x0, x19
    d4bc:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    d4c0:	mov	x19, #0x0                   	// #0
    d4c4:	cbz	w0, d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d4c8:	str	x21, [sp, #8]
    d4cc:	ldr	w0, [sp, #112]
    d4d0:	str	w0, [sp]
    d4d4:	ldr	x7, [sp, #104]
    d4d8:	ldr	w6, [sp, #116]
    d4dc:	ldr	w5, [sp, #120]
    d4e0:	ldr	w4, [sp, #124]
    d4e4:	ldr	w3, [sp, #128]
    d4e8:	ldr	w2, [sp, #132]
    d4ec:	ldr	w1, [sp, #136]
    d4f0:	ldr	w0, [sp, #140]
    d4f4:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    d4f8:	mov	x19, x0
    d4fc:	mov	x0, x19
    d500:	ldp	x19, x20, [sp, #64]
    d504:	ldp	x21, x22, [sp, #80]
    d508:	ldp	x29, x30, [sp, #48]
    d50c:	add	sp, sp, #0x90
    d510:	ret
    d514:	ldr	x0, [x19, #32]
    d518:	str	x0, [sp, #104]
    d51c:	b	d444 <PyNumber_FloorDivide@plt+0x8844>
    d520:	ldrb	w0, [x22, #34]
    d524:	and	w0, w0, #0x7f
    d528:	sub	w0, w0, #0x1
    d52c:	cmp	w0, #0xb
    d530:	b.hi	d45c <PyNumber_FloorDivide@plt+0x885c>  // b.pmore
    d534:	ldr	x2, [sp, #104]
    d538:	mov	x1, x22
    d53c:	mov	x0, x21
    d540:	bl	6bdc <PyNumber_FloorDivide@plt+0x1fdc>
    d544:	mov	x19, x0
    d548:	b	d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d54c:	tbz	w0, #28, d45c <PyNumber_FloorDivide@plt+0x885c>
    d550:	ldrsb	w0, [x22, #32]
    d554:	tbz	w0, #31, d5e8 <PyNumber_FloorDivide@plt+0x89e8>
    d558:	ldr	x0, [x22, #16]
    d55c:	cmp	x0, #0xa
    d560:	b.ne	d45c <PyNumber_FloorDivide@plt+0x885c>  // b.any
    d564:	ldrb	w0, [x22, #32]
    d568:	and	w1, w0, #0x1c
    d56c:	cmp	w1, #0x4
    d570:	b.eq	d5fc <PyNumber_FloorDivide@plt+0x89fc>  // b.none
    d574:	cmp	w1, #0x8
    d578:	b.eq	d634 <PyNumber_FloorDivide@plt+0x8a34>  // b.none
    d57c:	tbz	w0, #5, d66c <PyNumber_FloorDivide@plt+0x8a6c>
    d580:	add	x2, x22, #0x38
    d584:	add	x1, x22, #0x50
    d588:	tst	x0, #0x40
    d58c:	csel	x0, x1, x2, eq  // eq = none
    d590:	ldr	w0, [x0]
    d594:	and	w0, w0, #0x7f
    d598:	sub	w0, w0, #0x1
    d59c:	cmp	w0, #0xb
    d5a0:	cset	w0, ls  // ls = plast
    d5a4:	cbz	w0, d45c <PyNumber_FloorDivide@plt+0x885c>
    d5a8:	mov	x0, x22
    d5ac:	bl	4960 <PyUnicode_AsLatin1String@plt>
    d5b0:	mov	x20, x0
    d5b4:	cbz	x0, d678 <PyNumber_FloorDivide@plt+0x8a78>
    d5b8:	ldr	x2, [sp, #104]
    d5bc:	mov	x1, x0
    d5c0:	mov	x0, x21
    d5c4:	bl	6bdc <PyNumber_FloorDivide@plt+0x1fdc>
    d5c8:	mov	x19, x0
    d5cc:	ldr	x0, [x20]
    d5d0:	sub	x0, x0, #0x1
    d5d4:	str	x0, [x20]
    d5d8:	cbnz	x0, d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d5dc:	mov	x0, x20
    d5e0:	bl	4810 <_Py_Dealloc@plt>
    d5e4:	b	d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d5e8:	mov	x0, x22
    d5ec:	bl	4710 <_PyUnicode_Ready@plt>
    d5f0:	cbz	w0, d558 <PyNumber_FloorDivide@plt+0x8958>
    d5f4:	mov	x19, #0x0                   	// #0
    d5f8:	b	d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d5fc:	tbz	w0, #5, d628 <PyNumber_FloorDivide@plt+0x8a28>
    d600:	add	x2, x22, #0x32
    d604:	add	x1, x22, #0x4a
    d608:	tst	x0, #0x40
    d60c:	csel	x0, x1, x2, eq  // eq = none
    d610:	ldrb	w0, [x0]
    d614:	and	w0, w0, #0x7f
    d618:	sub	w0, w0, #0x1
    d61c:	cmp	w0, #0xb
    d620:	cset	w0, ls  // ls = plast
    d624:	b	d5a4 <PyNumber_FloorDivide@plt+0x89a4>
    d628:	ldr	x0, [x22, #72]
    d62c:	add	x0, x0, #0x2
    d630:	b	d610 <PyNumber_FloorDivide@plt+0x8a10>
    d634:	tbz	w0, #5, d660 <PyNumber_FloorDivide@plt+0x8a60>
    d638:	add	x2, x22, #0x34
    d63c:	add	x1, x22, #0x4c
    d640:	tst	x0, #0x40
    d644:	csel	x0, x1, x2, eq  // eq = none
    d648:	ldrh	w0, [x0]
    d64c:	and	w0, w0, #0x7f
    d650:	sub	w0, w0, #0x1
    d654:	cmp	w0, #0xb
    d658:	cset	w0, ls  // ls = plast
    d65c:	b	d5a4 <PyNumber_FloorDivide@plt+0x89a4>
    d660:	ldr	x0, [x22, #72]
    d664:	add	x0, x0, #0x4
    d668:	b	d648 <PyNumber_FloorDivide@plt+0x8a48>
    d66c:	ldr	x0, [x22, #72]
    d670:	add	x0, x0, #0x8
    d674:	b	d590 <PyNumber_FloorDivide@plt+0x8990>
    d678:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d67c:	ldr	x0, [x0, #4032]
    d680:	ldr	x0, [x0]
    d684:	bl	48a0 <PyErr_ExceptionMatches@plt>
    d688:	mov	x19, x20
    d68c:	cbz	w0, d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d690:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    d694:	add	x1, x1, #0x198
    d698:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d69c:	ldr	x0, [x0, #3968]
    d6a0:	ldr	x0, [x0]
    d6a4:	bl	4880 <PyErr_SetString@plt>
    d6a8:	b	d4fc <PyNumber_FloorDivide@plt+0x88fc>
    d6ac:	sub	sp, sp, #0x80
    d6b0:	stp	x29, x30, [sp, #48]
    d6b4:	add	x29, sp, #0x30
    d6b8:	stp	x19, x20, [sp, #64]
    d6bc:	mov	x19, x0
    d6c0:	mov	x0, x1
    d6c4:	mov	x1, x2
    d6c8:	ldrb	w2, [x19, #25]
    d6cc:	ldrb	w3, [x19, #26]
    d6d0:	orr	w2, w3, w2, lsl #8
    d6d4:	str	w2, [sp, #124]
    d6d8:	ldrb	w2, [x19, #27]
    d6dc:	str	w2, [sp, #120]
    d6e0:	ldrb	w2, [x19, #28]
    d6e4:	str	w2, [sp, #116]
    d6e8:	ldrb	w2, [x19, #29]
    d6ec:	str	w2, [sp, #112]
    d6f0:	ldrb	w2, [x19, #30]
    d6f4:	str	w2, [sp, #108]
    d6f8:	ldrb	w2, [x19, #31]
    d6fc:	str	w2, [sp, #104]
    d700:	ldrb	w3, [x19, #32]
    d704:	ldrb	w2, [x19, #33]
    d708:	lsl	w2, w2, #8
    d70c:	orr	w3, w2, w3, lsl #16
    d710:	ldrb	w2, [x19, #34]
    d714:	orr	w3, w3, w2
    d718:	str	w3, [sp, #100]
    d71c:	ldrb	w2, [x19, #24]
    d720:	cbz	w2, d810 <PyNumber_FloorDivide@plt+0x8c10>
    d724:	ldr	x2, [x19, #40]
    d728:	str	x2, [sp, #88]
    d72c:	ldrb	w2, [x19, #35]
    d730:	str	w2, [sp, #84]
    d734:	add	x2, sp, #0x54
    d738:	str	x2, [sp, #32]
    d73c:	add	x2, sp, #0x58
    d740:	str	x2, [sp, #24]
    d744:	add	x2, sp, #0x64
    d748:	str	x2, [sp, #16]
    d74c:	add	x2, sp, #0x68
    d750:	str	x2, [sp, #8]
    d754:	add	x2, sp, #0x6c
    d758:	str	x2, [sp]
    d75c:	add	x7, sp, #0x70
    d760:	add	x6, sp, #0x74
    d764:	add	x5, sp, #0x78
    d768:	add	x4, sp, #0x7c
    d76c:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    d770:	add	x3, x3, #0xab8
    d774:	add	x3, x3, #0x430
    d778:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    d77c:	add	x2, x2, #0x220
    d780:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    d784:	cbz	w0, d848 <PyNumber_FloorDivide@plt+0x8c48>
    d788:	ldr	w0, [sp, #84]
    d78c:	cmp	w0, #0x1
    d790:	b.hi	d81c <PyNumber_FloorDivide@plt+0x8c1c>  // b.pmore
    d794:	ldr	x0, [sp, #88]
    d798:	str	x0, [sp]
    d79c:	ldr	w7, [sp, #100]
    d7a0:	ldr	w6, [sp, #104]
    d7a4:	ldr	w5, [sp, #108]
    d7a8:	ldr	w4, [sp, #112]
    d7ac:	ldr	w3, [sp, #116]
    d7b0:	ldr	w2, [sp, #120]
    d7b4:	ldr	w1, [sp, #124]
    d7b8:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    d7bc:	add	x0, x0, #0xfa0
    d7c0:	bl	49a0 <Py_BuildValue@plt>
    d7c4:	mov	x20, x0
    d7c8:	cbz	x0, d850 <PyNumber_FloorDivide@plt+0x8c50>
    d7cc:	mov	x2, #0x0                   	// #0
    d7d0:	mov	x1, x0
    d7d4:	ldr	x0, [x19, #8]
    d7d8:	bl	d3e8 <PyNumber_FloorDivide@plt+0x87e8>
    d7dc:	mov	x19, x0
    d7e0:	cbz	x0, d7ec <PyNumber_FloorDivide@plt+0x8bec>
    d7e4:	ldr	w0, [sp, #84]
    d7e8:	strb	w0, [x19, #35]
    d7ec:	ldr	x0, [x20]
    d7f0:	sub	x0, x0, #0x1
    d7f4:	str	x0, [x20]
    d7f8:	cbz	x0, d83c <PyNumber_FloorDivide@plt+0x8c3c>
    d7fc:	mov	x0, x19
    d800:	ldp	x19, x20, [sp, #64]
    d804:	ldp	x29, x30, [sp, #48]
    d808:	add	sp, sp, #0x80
    d80c:	ret
    d810:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    d814:	ldr	x2, [x2, #4024]
    d818:	b	d728 <PyNumber_FloorDivide@plt+0x8b28>
    d81c:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    d820:	add	x1, x1, #0x7e0
    d824:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d828:	ldr	x0, [x0, #3968]
    d82c:	ldr	x0, [x0]
    d830:	bl	4880 <PyErr_SetString@plt>
    d834:	mov	x19, #0x0                   	// #0
    d838:	b	d7fc <PyNumber_FloorDivide@plt+0x8bfc>
    d83c:	mov	x0, x20
    d840:	bl	4810 <_Py_Dealloc@plt>
    d844:	b	d7fc <PyNumber_FloorDivide@plt+0x8bfc>
    d848:	mov	x19, #0x0                   	// #0
    d84c:	b	d7fc <PyNumber_FloorDivide@plt+0x8bfc>
    d850:	mov	x19, x0
    d854:	b	d7fc <PyNumber_FloorDivide@plt+0x8bfc>
    d858:	sub	sp, sp, #0x60
    d85c:	stp	x29, x30, [sp, #16]
    d860:	add	x29, sp, #0x10
    d864:	stp	x19, x20, [sp, #32]
    d868:	mov	x19, x0
    d86c:	mov	x0, x1
    d870:	mov	x1, x2
    d874:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    d878:	ldr	x2, [x2, #4024]
    d87c:	str	x2, [sp, #88]
    d880:	add	x4, sp, #0x58
    d884:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    d888:	add	x3, x3, #0xab8
    d88c:	add	x3, x3, #0x480
    d890:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    d894:	add	x2, x2, #0x238
    d898:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    d89c:	mov	x20, #0x0                   	// #0
    d8a0:	cbz	w0, d908 <PyNumber_FloorDivide@plt+0x8d08>
    d8a4:	ldr	x0, [sp, #88]
    d8a8:	bl	5798 <PyNumber_FloorDivide@plt+0xb98>
    d8ac:	cmn	w0, #0x1
    d8b0:	b.eq	dcf8 <PyNumber_FloorDivide@plt+0x90f8>  // b.none
    d8b4:	stp	x21, x22, [sp, #48]
    d8b8:	ldrb	w0, [x19, #24]
    d8bc:	cbz	w0, d948 <PyNumber_FloorDivide@plt+0x8d48>
    d8c0:	ldr	x21, [x19, #40]
    d8c4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d8c8:	ldr	x0, [x0, #4024]
    d8cc:	cmp	x21, x0
    d8d0:	b.eq	d948 <PyNumber_FloorDivide@plt+0x8d48>  // b.none
    d8d4:	ldr	x0, [x21]
    d8d8:	add	x0, x0, #0x1
    d8dc:	str	x0, [x21]
    d8e0:	b	d994 <PyNumber_FloorDivide@plt+0x8d94>
    d8e4:	ldr	x0, [x21]
    d8e8:	sub	x0, x0, #0x1
    d8ec:	str	x0, [x21]
    d8f0:	cbz	x0, d91c <PyNumber_FloorDivide@plt+0x8d1c>
    d8f4:	ldr	x0, [x19]
    d8f8:	add	x0, x0, #0x1
    d8fc:	str	x0, [x19]
    d900:	mov	x20, x19
    d904:	ldp	x21, x22, [sp, #48]
    d908:	mov	x0, x20
    d90c:	ldp	x19, x20, [sp, #32]
    d910:	ldp	x29, x30, [sp, #16]
    d914:	add	sp, sp, #0x60
    d918:	ret
    d91c:	mov	x0, x21
    d920:	bl	4810 <_Py_Dealloc@plt>
    d924:	b	d8f4 <PyNumber_FloorDivide@plt+0x8cf4>
    d928:	mov	x0, x21
    d92c:	bl	4810 <_Py_Dealloc@plt>
    d930:	b	d9c8 <PyNumber_FloorDivide@plt+0x8dc8>
    d934:	mov	x1, x0
    d938:	ldr	x0, [x0]
    d93c:	sub	x0, x0, #0x1
    d940:	str	x0, [x1]
    d944:	cbz	x0, dad8 <PyNumber_FloorDivide@plt+0x8ed8>
    d948:	ldrb	w7, [x19, #25]
    d94c:	ldrb	w0, [x19, #26]
    d950:	ldrb	w6, [x19, #35]
    d954:	ldrb	w5, [x19, #31]
    d958:	ldrb	w4, [x19, #30]
    d95c:	ldrb	w3, [x19, #29]
    d960:	ldrb	w2, [x19, #28]
    d964:	ldrb	w1, [x19, #27]
    d968:	orr	w0, w0, w7, lsl #8
    d96c:	bl	5918 <PyNumber_FloorDivide@plt+0xd18>
    d970:	cmn	x0, #0x1
    d974:	b.eq	dd00 <PyNumber_FloorDivide@plt+0x9100>  // b.none
    d978:	mov	x1, #0xffffffffffffb780    	// #-18560
    d97c:	movk	x1, #0x886c, lsl #16
    d980:	movk	x1, #0xfff1, lsl #32
    d984:	add	x0, x0, x1
    d988:	bl	9724 <PyNumber_FloorDivide@plt+0x4b24>
    d98c:	mov	x21, x0
    d990:	cbz	x0, dd0c <PyNumber_FloorDivide@plt+0x910c>
    d994:	ldr	x0, [sp, #88]
    d998:	cmp	x0, x21
    d99c:	b.eq	d8e4 <PyNumber_FloorDivide@plt+0x8ce4>  // b.none
    d9a0:	mov	x2, x19
    d9a4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    d9a8:	add	x1, x1, #0x6c0
    d9ac:	mov	x0, x21
    d9b0:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    d9b4:	mov	x20, x0
    d9b8:	ldr	x0, [x21]
    d9bc:	sub	x0, x0, #0x1
    d9c0:	str	x0, [x21]
    d9c4:	cbz	x0, d928 <PyNumber_FloorDivide@plt+0x8d28>
    d9c8:	cbz	x20, dd48 <PyNumber_FloorDivide@plt+0x9148>
    d9cc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    d9d0:	ldr	x0, [x0, #4024]
    d9d4:	cmp	x20, x0
    d9d8:	b.eq	d934 <PyNumber_FloorDivide@plt+0x8d34>  // b.none
    d9dc:	ldr	x0, [x20, #8]
    d9e0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d9e4:	add	x1, x1, #0x298
    d9e8:	add	x1, x1, #0x4e0
    d9ec:	cmp	x0, x1
    d9f0:	b.eq	da08 <PyNumber_FloorDivide@plt+0x8e08>  // b.none
    d9f4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    d9f8:	add	x1, x1, #0x298
    d9fc:	add	x1, x1, #0x4e0
    da00:	bl	4b30 <PyType_IsSubtype@plt>
    da04:	cbz	w0, dae4 <PyNumber_FloorDivide@plt+0x8ee4>
    da08:	mov	w2, #0xffffffff            	// #-1
    da0c:	mov	x1, x20
    da10:	mov	x0, x19
    da14:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    da18:	mov	x19, x0
    da1c:	ldr	x0, [x20]
    da20:	sub	x0, x0, #0x1
    da24:	str	x0, [x20]
    da28:	cbz	x0, db2c <PyNumber_FloorDivide@plt+0x8f2c>
    da2c:	cbz	x19, dd18 <PyNumber_FloorDivide@plt+0x9118>
    da30:	ldrb	w0, [x19, #24]
    da34:	cbz	w0, db38 <PyNumber_FloorDivide@plt+0x8f38>
    da38:	ldr	x0, [x19, #40]
    da3c:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    da40:	ldr	x1, [x1, #3960]
    da44:	str	x1, [x19, #40]
    da48:	ldr	x2, [x1]
    da4c:	add	x2, x2, #0x1
    da50:	str	x2, [x1]
    da54:	ldr	x1, [x0]
    da58:	sub	x1, x1, #0x1
    da5c:	str	x1, [x0]
    da60:	cbz	x1, dbb8 <PyNumber_FloorDivide@plt+0x8fb8>
    da64:	ldr	x20, [x19, #40]
    da68:	ldr	x1, [sp, #88]
    da6c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    da70:	ldr	x0, [x0, #4024]
    da74:	cmp	x1, x0
    da78:	b.eq	dbc0 <PyNumber_FloorDivide@plt+0x8fc0>  // b.none
    da7c:	ldr	x0, [x1]
    da80:	add	x0, x0, #0x1
    da84:	str	x0, [x1]
    da88:	ldr	x0, [sp, #88]
    da8c:	str	x0, [x19, #40]
    da90:	ldr	x0, [x20]
    da94:	sub	x0, x0, #0x1
    da98:	str	x0, [x20]
    da9c:	cbz	x0, dcdc <PyNumber_FloorDivide@plt+0x90dc>
    daa0:	mov	x3, #0x0                   	// #0
    daa4:	mov	x2, x19
    daa8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    daac:	add	x1, x1, #0xab8
    dab0:	add	x1, x1, #0x3b8
    dab4:	ldr	x0, [sp, #88]
    dab8:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    dabc:	mov	x20, x0
    dac0:	ldr	x0, [x19]
    dac4:	sub	x0, x0, #0x1
    dac8:	str	x0, [x19]
    dacc:	cbz	x0, dce8 <PyNumber_FloorDivide@plt+0x90e8>
    dad0:	ldp	x21, x22, [sp, #48]
    dad4:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dad8:	mov	x0, x1
    dadc:	bl	4810 <_Py_Dealloc@plt>
    dae0:	b	d948 <PyNumber_FloorDivide@plt+0x8d48>
    dae4:	ldr	x0, [x20]
    dae8:	sub	x0, x0, #0x1
    daec:	str	x0, [x20]
    daf0:	cbz	x0, db20 <PyNumber_FloorDivide@plt+0x8f20>
    daf4:	ldr	x0, [x20, #8]
    daf8:	ldr	x2, [x0, #24]
    dafc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    db00:	add	x1, x1, #0x248
    db04:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    db08:	ldr	x0, [x0, #3976]
    db0c:	ldr	x0, [x0]
    db10:	bl	4b60 <PyErr_Format@plt>
    db14:	mov	x20, #0x0                   	// #0
    db18:	ldp	x21, x22, [sp, #48]
    db1c:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    db20:	mov	x0, x20
    db24:	bl	4810 <_Py_Dealloc@plt>
    db28:	b	daf4 <PyNumber_FloorDivide@plt+0x8ef4>
    db2c:	mov	x0, x20
    db30:	bl	4810 <_Py_Dealloc@plt>
    db34:	b	da2c <PyNumber_FloorDivide@plt+0x8e2c>
    db38:	ldrb	w8, [x19, #25]
    db3c:	ldrb	w0, [x19, #26]
    db40:	ldrb	w1, [x19, #27]
    db44:	ldrb	w2, [x19, #28]
    db48:	ldrb	w3, [x19, #29]
    db4c:	ldrb	w4, [x19, #30]
    db50:	ldrb	w5, [x19, #31]
    db54:	ldrb	w6, [x19, #32]
    db58:	ldrb	w7, [x19, #33]
    db5c:	lsl	w7, w7, #8
    db60:	orr	w6, w7, w6, lsl #16
    db64:	ldrb	w9, [x19, #34]
    db68:	ldrb	w7, [x19, #35]
    db6c:	ldr	x10, [x19, #8]
    db70:	str	x10, [sp, #8]
    db74:	str	w7, [sp]
    db78:	adrp	x7, 26000 <PyInit__datetime@@Base+0x175b0>
    db7c:	ldr	x7, [x7, #3960]
    db80:	orr	w6, w6, w9
    db84:	orr	w0, w0, w8, lsl #8
    db88:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    db8c:	mov	x20, x0
    db90:	ldr	x0, [x19]
    db94:	sub	x0, x0, #0x1
    db98:	str	x0, [x19]
    db9c:	cbz	x0, dbac <PyNumber_FloorDivide@plt+0x8fac>
    dba0:	cbz	x20, dd50 <PyNumber_FloorDivide@plt+0x9150>
    dba4:	mov	x19, x20
    dba8:	b	da64 <PyNumber_FloorDivide@plt+0x8e64>
    dbac:	mov	x0, x19
    dbb0:	bl	4810 <_Py_Dealloc@plt>
    dbb4:	b	dba0 <PyNumber_FloorDivide@plt+0x8fa0>
    dbb8:	bl	4810 <_Py_Dealloc@plt>
    dbbc:	b	da64 <PyNumber_FloorDivide@plt+0x8e64>
    dbc0:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    dbc4:	ldr	x1, [x0, #4032]
    dbc8:	mov	x0, x19
    dbcc:	bl	c1cc <PyNumber_FloorDivide@plt+0x75cc>
    dbd0:	mov	x21, x0
    dbd4:	cbz	x0, dd28 <PyNumber_FloorDivide@plt+0x9128>
    dbd8:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    dbdc:	add	x4, x4, #0x298
    dbe0:	add	x4, x4, #0x4e0
    dbe4:	mov	w3, #0x0                   	// #0
    dbe8:	mov	w2, #0x0                   	// #0
    dbec:	mov	w1, #0x1                   	// #1
    dbf0:	mov	w0, #0x0                   	// #0
    dbf4:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    dbf8:	mov	x22, x0
    dbfc:	cbz	x0, dc74 <PyNumber_FloorDivide@plt+0x9074>
    dc00:	str	x23, [sp, #64]
    dc04:	mov	x1, x0
    dc08:	mov	x0, x21
    dc0c:	bl	8d88 <PyNumber_FloorDivide@plt+0x4188>
    dc10:	mov	x23, x0
    dc14:	ldr	x0, [x22]
    dc18:	sub	x0, x0, #0x1
    dc1c:	str	x0, [x22]
    dc20:	cbz	x0, dc90 <PyNumber_FloorDivide@plt+0x9090>
    dc24:	ldr	x0, [x21]
    dc28:	sub	x0, x0, #0x1
    dc2c:	str	x0, [x21]
    dc30:	cbz	x0, dc9c <PyNumber_FloorDivide@plt+0x909c>
    dc34:	cbz	x23, dd24 <PyNumber_FloorDivide@plt+0x9124>
    dc38:	mov	x0, x23
    dc3c:	bl	4aa0 <_PyLong_AsTime_t@plt>
    dc40:	mov	x21, x0
    dc44:	ldr	x0, [x23]
    dc48:	sub	x0, x0, #0x1
    dc4c:	str	x0, [x23]
    dc50:	cbz	x0, dca8 <PyNumber_FloorDivide@plt+0x90a8>
    dc54:	cmn	x21, #0x1
    dc58:	b.eq	dcb4 <PyNumber_FloorDivide@plt+0x90b4>  // b.none
    dc5c:	mov	x0, x21
    dc60:	bl	9724 <PyNumber_FloorDivide@plt+0x4b24>
    dc64:	str	x0, [sp, #88]
    dc68:	cbz	x0, dcc4 <PyNumber_FloorDivide@plt+0x90c4>
    dc6c:	ldr	x23, [sp, #64]
    dc70:	b	da88 <PyNumber_FloorDivide@plt+0x8e88>
    dc74:	ldr	x0, [x21]
    dc78:	sub	x0, x0, #0x1
    dc7c:	str	x0, [x21]
    dc80:	cbnz	x0, dd28 <PyNumber_FloorDivide@plt+0x9128>
    dc84:	mov	x0, x21
    dc88:	bl	4810 <_Py_Dealloc@plt>
    dc8c:	b	dd28 <PyNumber_FloorDivide@plt+0x9128>
    dc90:	mov	x0, x22
    dc94:	bl	4810 <_Py_Dealloc@plt>
    dc98:	b	dc24 <PyNumber_FloorDivide@plt+0x9024>
    dc9c:	mov	x0, x21
    dca0:	bl	4810 <_Py_Dealloc@plt>
    dca4:	b	dc34 <PyNumber_FloorDivide@plt+0x9034>
    dca8:	mov	x0, x23
    dcac:	bl	4810 <_Py_Dealloc@plt>
    dcb0:	b	dc54 <PyNumber_FloorDivide@plt+0x9054>
    dcb4:	bl	49b0 <PyErr_Occurred@plt>
    dcb8:	cbz	x0, dc5c <PyNumber_FloorDivide@plt+0x905c>
    dcbc:	ldr	x23, [sp, #64]
    dcc0:	b	dd28 <PyNumber_FloorDivide@plt+0x9128>
    dcc4:	ldr	x23, [sp, #64]
    dcc8:	b	dd2c <PyNumber_FloorDivide@plt+0x912c>
    dccc:	mov	x0, x19
    dcd0:	bl	4810 <_Py_Dealloc@plt>
    dcd4:	ldp	x21, x22, [sp, #48]
    dcd8:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dcdc:	mov	x0, x20
    dce0:	bl	4810 <_Py_Dealloc@plt>
    dce4:	b	daa0 <PyNumber_FloorDivide@plt+0x8ea0>
    dce8:	mov	x0, x19
    dcec:	bl	4810 <_Py_Dealloc@plt>
    dcf0:	ldp	x21, x22, [sp, #48]
    dcf4:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dcf8:	mov	x20, #0x0                   	// #0
    dcfc:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd00:	mov	x20, #0x0                   	// #0
    dd04:	ldp	x21, x22, [sp, #48]
    dd08:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd0c:	mov	x20, x0
    dd10:	ldp	x21, x22, [sp, #48]
    dd14:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd18:	mov	x20, x19
    dd1c:	ldp	x21, x22, [sp, #48]
    dd20:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd24:	ldr	x23, [sp, #64]
    dd28:	str	xzr, [sp, #88]
    dd2c:	ldr	x0, [x19]
    dd30:	sub	x0, x0, #0x1
    dd34:	str	x0, [x19]
    dd38:	mov	x20, #0x0                   	// #0
    dd3c:	cbz	x0, dccc <PyNumber_FloorDivide@plt+0x90cc>
    dd40:	ldp	x21, x22, [sp, #48]
    dd44:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd48:	ldp	x21, x22, [sp, #48]
    dd4c:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd50:	ldp	x21, x22, [sp, #48]
    dd54:	b	d908 <PyNumber_FloorDivide@plt+0x8d08>
    dd58:	sub	sp, sp, #0x50
    dd5c:	stp	x29, x30, [sp, #16]
    dd60:	add	x29, sp, #0x10
    dd64:	stp	x19, x20, [sp, #32]
    dd68:	mov	x19, x0
    dd6c:	ldr	x20, [x0, #16]
    dd70:	cmn	x20, #0x1
    dd74:	b.eq	dd90 <PyNumber_FloorDivide@plt+0x9190>  // b.none
    dd78:	ldr	x20, [x19, #16]
    dd7c:	mov	x0, x20
    dd80:	ldp	x19, x20, [sp, #32]
    dd84:	ldp	x29, x30, [sp, #16]
    dd88:	add	sp, sp, #0x50
    dd8c:	ret
    dd90:	stp	x21, x22, [sp, #48]
    dd94:	ldrb	w0, [x0, #35]
    dd98:	cbz	w0, de0c <PyNumber_FloorDivide@plt+0x920c>
    dd9c:	ldrb	w0, [x19, #25]
    dda0:	ldrb	w1, [x19, #26]
    dda4:	orr	w0, w1, w0, lsl #8
    dda8:	ldrb	w1, [x19, #27]
    ddac:	ldrb	w2, [x19, #28]
    ddb0:	ldrb	w3, [x19, #29]
    ddb4:	ldrb	w4, [x19, #30]
    ddb8:	ldrb	w5, [x19, #31]
    ddbc:	ldrb	w6, [x19, #32]
    ddc0:	ldrb	w7, [x19, #33]
    ddc4:	lsl	w7, w7, #8
    ddc8:	orr	w6, w7, w6, lsl #16
    ddcc:	ldrb	w7, [x19, #34]
    ddd0:	orr	w6, w6, w7
    ddd4:	ldrb	w7, [x19, #24]
    ddd8:	cbz	w7, de00 <PyNumber_FloorDivide@plt+0x9200>
    dddc:	ldr	x7, [x19, #40]
    dde0:	ldr	x8, [x19, #8]
    dde4:	str	x8, [sp, #8]
    dde8:	str	wzr, [sp]
    ddec:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    ddf0:	mov	x22, x0
    ddf4:	cbnz	x0, de1c <PyNumber_FloorDivide@plt+0x921c>
    ddf8:	ldp	x21, x22, [sp, #48]
    ddfc:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    de00:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    de04:	ldr	x7, [x7, #4024]
    de08:	b	dde0 <PyNumber_FloorDivide@plt+0x91e0>
    de0c:	ldr	x0, [x19]
    de10:	add	x0, x0, #0x1
    de14:	str	x0, [x19]
    de18:	mov	x22, x19
    de1c:	mov	x1, #0x0                   	// #0
    de20:	mov	x0, x22
    de24:	bl	72bc <PyNumber_FloorDivide@plt+0x26bc>
    de28:	mov	x21, x0
    de2c:	ldr	x0, [x22]
    de30:	sub	x0, x0, #0x1
    de34:	str	x0, [x22]
    de38:	cbz	x0, df1c <PyNumber_FloorDivide@plt+0x931c>
    de3c:	cbz	x21, dfc0 <PyNumber_FloorDivide@plt+0x93c0>
    de40:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    de44:	ldr	x0, [x0, #4024]
    de48:	cmp	x21, x0
    de4c:	b.eq	df28 <PyNumber_FloorDivide@plt+0x9328>  // b.none
    de50:	ldrb	w3, [x19, #25]
    de54:	ldrb	w0, [x19, #26]
    de58:	ldrb	w2, [x19, #28]
    de5c:	ldrb	w1, [x19, #27]
    de60:	orr	w0, w0, w3, lsl #8
    de64:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    de68:	ldrb	w2, [x19, #32]
    de6c:	ldrb	w1, [x19, #33]
    de70:	lsl	w1, w1, #8
    de74:	orr	w2, w1, w2, lsl #16
    de78:	ldrb	w6, [x19, #34]
    de7c:	ldrb	w3, [x19, #29]
    de80:	ldrb	w4, [x19, #30]
    de84:	lsl	w1, w4, #4
    de88:	sub	w1, w1, w4
    de8c:	lsl	w1, w1, #2
    de90:	mov	w4, #0xe10                 	// #3600
    de94:	madd	w1, w3, w4, w1
    de98:	ldrb	w5, [x19, #31]
    de9c:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    dea0:	add	x4, x4, #0x298
    dea4:	add	x4, x4, #0x4e0
    dea8:	mov	w3, #0x1                   	// #1
    deac:	orr	w2, w2, w6
    deb0:	add	w1, w1, w5
    deb4:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    deb8:	mov	x22, x0
    debc:	cbz	x0, df3c <PyNumber_FloorDivide@plt+0x933c>
    dec0:	str	x23, [sp, #64]
    dec4:	mov	x1, x21
    dec8:	bl	5dd8 <PyNumber_FloorDivide@plt+0x11d8>
    decc:	mov	x23, x0
    ded0:	ldr	x0, [x22]
    ded4:	sub	x0, x0, #0x1
    ded8:	str	x0, [x22]
    dedc:	cbz	x0, df64 <PyNumber_FloorDivide@plt+0x9364>
    dee0:	cbz	x23, df70 <PyNumber_FloorDivide@plt+0x9370>
    dee4:	mov	x0, x23
    dee8:	bl	4a50 <PyObject_Hash@plt>
    deec:	str	x0, [x19, #16]
    def0:	ldr	x0, [x23]
    def4:	sub	x0, x0, #0x1
    def8:	str	x0, [x23]
    defc:	cbz	x0, dfa0 <PyNumber_FloorDivide@plt+0x93a0>
    df00:	ldr	x23, [sp, #64]
    df04:	ldr	x0, [x21]
    df08:	sub	x0, x0, #0x1
    df0c:	str	x0, [x21]
    df10:	cbz	x0, dfb0 <PyNumber_FloorDivide@plt+0x93b0>
    df14:	ldp	x21, x22, [sp, #48]
    df18:	b	dd78 <PyNumber_FloorDivide@plt+0x9178>
    df1c:	mov	x0, x22
    df20:	bl	4810 <_Py_Dealloc@plt>
    df24:	b	de3c <PyNumber_FloorDivide@plt+0x923c>
    df28:	mov	x1, #0xa                   	// #10
    df2c:	add	x0, x19, #0x19
    df30:	bl	48b0 <_Py_HashBytes@plt>
    df34:	str	x0, [x19, #16]
    df38:	b	df04 <PyNumber_FloorDivide@plt+0x9304>
    df3c:	ldr	x0, [x21]
    df40:	sub	x0, x0, #0x1
    df44:	str	x0, [x21]
    df48:	cbz	x0, df54 <PyNumber_FloorDivide@plt+0x9354>
    df4c:	ldp	x21, x22, [sp, #48]
    df50:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    df54:	mov	x0, x21
    df58:	bl	4810 <_Py_Dealloc@plt>
    df5c:	ldp	x21, x22, [sp, #48]
    df60:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    df64:	mov	x0, x22
    df68:	bl	4810 <_Py_Dealloc@plt>
    df6c:	b	dee0 <PyNumber_FloorDivide@plt+0x92e0>
    df70:	ldr	x0, [x21]
    df74:	sub	x0, x0, #0x1
    df78:	str	x0, [x21]
    df7c:	cbz	x0, df8c <PyNumber_FloorDivide@plt+0x938c>
    df80:	ldp	x21, x22, [sp, #48]
    df84:	ldr	x23, [sp, #64]
    df88:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    df8c:	mov	x0, x21
    df90:	bl	4810 <_Py_Dealloc@plt>
    df94:	ldp	x21, x22, [sp, #48]
    df98:	ldr	x23, [sp, #64]
    df9c:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    dfa0:	mov	x0, x23
    dfa4:	bl	4810 <_Py_Dealloc@plt>
    dfa8:	ldr	x23, [sp, #64]
    dfac:	b	df04 <PyNumber_FloorDivide@plt+0x9304>
    dfb0:	mov	x0, x21
    dfb4:	bl	4810 <_Py_Dealloc@plt>
    dfb8:	ldp	x21, x22, [sp, #48]
    dfbc:	b	dd78 <PyNumber_FloorDivide@plt+0x9178>
    dfc0:	ldp	x21, x22, [sp, #48]
    dfc4:	b	dd7c <PyNumber_FloorDivide@plt+0x917c>
    dfc8:	stp	x29, x30, [sp, #-48]!
    dfcc:	mov	x29, sp
    dfd0:	str	x19, [sp, #16]
    dfd4:	mov	x19, x0
    dfd8:	ldrb	w0, [x0, #25]
    dfdc:	ldrb	w3, [x19, #26]
    dfe0:	orr	w0, w3, w0, lsl #8
    dfe4:	str	w0, [sp, #44]
    dfe8:	ldrb	w0, [x19, #27]
    dfec:	str	w0, [sp, #40]
    dff0:	ldr	w0, [x1, #24]
    dff4:	ldrb	w1, [x19, #28]
    dff8:	cmp	w2, #0x0
    dffc:	cneg	w0, w0, ne  // ne = any
    e000:	add	w0, w1, w0
    e004:	str	w0, [sp, #36]
    e008:	add	x2, sp, #0x24
    e00c:	add	x1, sp, #0x28
    e010:	add	x0, sp, #0x2c
    e014:	bl	5fcc <PyNumber_FloorDivide@plt+0x13cc>
    e018:	tbnz	w0, #31, e03c <PyNumber_FloorDivide@plt+0x943c>
    e01c:	ldr	x3, [x19, #8]
    e020:	ldr	w2, [sp, #36]
    e024:	ldr	w1, [sp, #40]
    e028:	ldr	w0, [sp, #44]
    e02c:	bl	cba8 <PyNumber_FloorDivide@plt+0x7fa8>
    e030:	ldr	x19, [sp, #16]
    e034:	ldp	x29, x30, [sp], #48
    e038:	ret
    e03c:	mov	x0, #0x0                   	// #0
    e040:	b	e030 <PyNumber_FloorDivide@plt+0x9430>
    e044:	stp	x29, x30, [sp, #-32]!
    e048:	mov	x29, sp
    e04c:	stp	x19, x20, [sp, #16]
    e050:	mov	x19, x0
    e054:	mov	x20, x1
    e058:	ldr	x0, [x0, #8]
    e05c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e060:	add	x1, x1, #0x298
    e064:	cmp	x0, x1
    e068:	b.eq	e13c <PyNumber_FloorDivide@plt+0x953c>  // b.none
    e06c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e070:	add	x1, x1, #0x298
    e074:	bl	4b30 <PyType_IsSubtype@plt>
    e078:	cbnz	w0, e13c <PyNumber_FloorDivide@plt+0x953c>
    e07c:	ldr	x0, [x20, #8]
    e080:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e084:	add	x1, x1, #0x298
    e088:	cmp	x0, x1
    e08c:	b.eq	e13c <PyNumber_FloorDivide@plt+0x953c>  // b.none
    e090:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e094:	add	x1, x1, #0x298
    e098:	bl	4b30 <PyType_IsSubtype@plt>
    e09c:	cbnz	w0, e13c <PyNumber_FloorDivide@plt+0x953c>
    e0a0:	ldr	x0, [x19, #8]
    e0a4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e0a8:	add	x1, x1, #0x298
    e0ac:	add	x1, x1, #0x680
    e0b0:	cmp	x0, x1
    e0b4:	b.eq	e0cc <PyNumber_FloorDivide@plt+0x94cc>  // b.none
    e0b8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e0bc:	add	x1, x1, #0x298
    e0c0:	add	x1, x1, #0x680
    e0c4:	bl	4b30 <PyType_IsSubtype@plt>
    e0c8:	cbz	w0, e124 <PyNumber_FloorDivide@plt+0x9524>
    e0cc:	ldr	x0, [x20, #8]
    e0d0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e0d4:	add	x1, x1, #0x298
    e0d8:	add	x1, x1, #0x680
    e0dc:	cmp	x0, x1
    e0e0:	b.eq	e15c <PyNumber_FloorDivide@plt+0x955c>  // b.none
    e0e4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e0e8:	add	x1, x1, #0x298
    e0ec:	add	x1, x1, #0x680
    e0f0:	bl	4b30 <PyType_IsSubtype@plt>
    e0f4:	cbnz	w0, e15c <PyNumber_FloorDivide@plt+0x955c>
    e0f8:	ldr	x0, [x20, #8]
    e0fc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e100:	add	x1, x1, #0x298
    e104:	add	x1, x1, #0x4e0
    e108:	cmp	x0, x1
    e10c:	b.eq	e1b4 <PyNumber_FloorDivide@plt+0x95b4>  // b.none
    e110:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e114:	add	x1, x1, #0x298
    e118:	add	x1, x1, #0x4e0
    e11c:	bl	4b30 <PyType_IsSubtype@plt>
    e120:	cbnz	w0, e1b4 <PyNumber_FloorDivide@plt+0x95b4>
    e124:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e128:	ldr	x0, [x0, #3960]
    e12c:	ldr	x1, [x0]
    e130:	add	x1, x1, #0x1
    e134:	str	x1, [x0]
    e138:	b	e150 <PyNumber_FloorDivide@plt+0x9550>
    e13c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e140:	ldr	x0, [x0, #3960]
    e144:	ldr	x1, [x0]
    e148:	add	x1, x1, #0x1
    e14c:	str	x1, [x0]
    e150:	ldp	x19, x20, [sp, #16]
    e154:	ldp	x29, x30, [sp], #32
    e158:	ret
    e15c:	ldrb	w3, [x19, #25]
    e160:	ldrb	w0, [x19, #26]
    e164:	ldrb	w2, [x19, #28]
    e168:	ldrb	w1, [x19, #27]
    e16c:	orr	w0, w0, w3, lsl #8
    e170:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e174:	mov	w19, w0
    e178:	ldrb	w3, [x20, #25]
    e17c:	ldrb	w0, [x20, #26]
    e180:	ldrb	w2, [x20, #28]
    e184:	ldrb	w1, [x20, #27]
    e188:	orr	w0, w0, w3, lsl #8
    e18c:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e190:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    e194:	add	x4, x4, #0x298
    e198:	add	x4, x4, #0x4e0
    e19c:	mov	w3, #0x0                   	// #0
    e1a0:	mov	w2, #0x0                   	// #0
    e1a4:	mov	w1, #0x0                   	// #0
    e1a8:	sub	w0, w19, w0
    e1ac:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    e1b0:	b	e150 <PyNumber_FloorDivide@plt+0x9550>
    e1b4:	mov	w2, #0x1                   	// #1
    e1b8:	mov	x1, x20
    e1bc:	mov	x0, x19
    e1c0:	bl	dfc8 <PyNumber_FloorDivide@plt+0x93c8>
    e1c4:	b	e150 <PyNumber_FloorDivide@plt+0x9550>
    e1c8:	stp	x29, x30, [sp, #-32]!
    e1cc:	mov	x29, sp
    e1d0:	stp	x19, x20, [sp, #16]
    e1d4:	mov	x19, x0
    e1d8:	ldr	x0, [x0, #8]
    e1dc:	adrp	x2, 25000 <PyInit__datetime@@Base+0x165b0>
    e1e0:	add	x2, x2, #0x298
    e1e4:	cmp	x0, x2
    e1e8:	b.eq	e290 <PyNumber_FloorDivide@plt+0x9690>  // b.none
    e1ec:	mov	x20, x1
    e1f0:	mov	x1, x2
    e1f4:	bl	4b30 <PyType_IsSubtype@plt>
    e1f8:	cbnz	w0, e290 <PyNumber_FloorDivide@plt+0x9690>
    e1fc:	ldr	x0, [x20, #8]
    e200:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e204:	add	x1, x1, #0x298
    e208:	cmp	x0, x1
    e20c:	b.eq	e290 <PyNumber_FloorDivide@plt+0x9690>  // b.none
    e210:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e214:	add	x1, x1, #0x298
    e218:	bl	4b30 <PyType_IsSubtype@plt>
    e21c:	cbnz	w0, e290 <PyNumber_FloorDivide@plt+0x9690>
    e220:	ldr	x0, [x19, #8]
    e224:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e228:	add	x1, x1, #0x298
    e22c:	add	x1, x1, #0x680
    e230:	cmp	x0, x1
    e234:	b.eq	e24c <PyNumber_FloorDivide@plt+0x964c>  // b.none
    e238:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e23c:	add	x1, x1, #0x298
    e240:	add	x1, x1, #0x680
    e244:	bl	4b30 <PyType_IsSubtype@plt>
    e248:	cbz	w0, e2c4 <PyNumber_FloorDivide@plt+0x96c4>
    e24c:	ldr	x0, [x20, #8]
    e250:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e254:	add	x1, x1, #0x298
    e258:	add	x1, x1, #0x4e0
    e25c:	cmp	x0, x1
    e260:	b.eq	e2b0 <PyNumber_FloorDivide@plt+0x96b0>  // b.none
    e264:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e268:	add	x1, x1, #0x298
    e26c:	add	x1, x1, #0x4e0
    e270:	bl	4b30 <PyType_IsSubtype@plt>
    e274:	cbnz	w0, e2b0 <PyNumber_FloorDivide@plt+0x96b0>
    e278:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e27c:	ldr	x0, [x0, #3960]
    e280:	ldr	x1, [x0]
    e284:	add	x1, x1, #0x1
    e288:	str	x1, [x0]
    e28c:	b	e2a4 <PyNumber_FloorDivide@plt+0x96a4>
    e290:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e294:	ldr	x0, [x0, #3960]
    e298:	ldr	x1, [x0]
    e29c:	add	x1, x1, #0x1
    e2a0:	str	x1, [x0]
    e2a4:	ldp	x19, x20, [sp, #16]
    e2a8:	ldp	x29, x30, [sp], #32
    e2ac:	ret
    e2b0:	mov	w2, #0x0                   	// #0
    e2b4:	mov	x1, x20
    e2b8:	mov	x0, x19
    e2bc:	bl	dfc8 <PyNumber_FloorDivide@plt+0x93c8>
    e2c0:	b	e2a4 <PyNumber_FloorDivide@plt+0x96a4>
    e2c4:	ldr	x0, [x19, #8]
    e2c8:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e2cc:	add	x1, x1, #0x298
    e2d0:	add	x1, x1, #0x4e0
    e2d4:	cmp	x0, x1
    e2d8:	b.eq	e2f0 <PyNumber_FloorDivide@plt+0x96f0>  // b.none
    e2dc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e2e0:	add	x1, x1, #0x298
    e2e4:	add	x1, x1, #0x4e0
    e2e8:	bl	4b30 <PyType_IsSubtype@plt>
    e2ec:	cbz	w0, e278 <PyNumber_FloorDivide@plt+0x9678>
    e2f0:	mov	w2, #0x0                   	// #0
    e2f4:	mov	x1, x19
    e2f8:	mov	x0, x20
    e2fc:	bl	dfc8 <PyNumber_FloorDivide@plt+0x93c8>
    e300:	b	e2a4 <PyNumber_FloorDivide@plt+0x96a4>
    e304:	stp	x29, x30, [sp, #-80]!
    e308:	mov	x29, sp
    e30c:	stp	x19, x20, [sp, #16]
    e310:	mov	x19, x0
    e314:	mov	x0, x1
    e318:	mov	x1, x2
    e31c:	add	x6, sp, #0x44
    e320:	add	x5, sp, #0x48
    e324:	add	x4, sp, #0x4c
    e328:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    e32c:	add	x3, x3, #0xab8
    e330:	add	x3, x3, #0x490
    e334:	adrp	x2, 10000 <PyInit__datetime@@Base+0x15b0>
    e338:	add	x2, x2, #0x280
    e33c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    e340:	cbz	w0, e434 <PyNumber_FloorDivide@plt+0x9834>
    e344:	ldr	w20, [sp, #76]
    e348:	sub	w1, w20, #0x1
    e34c:	mov	w0, #0x270e                	// #9998
    e350:	cmp	w1, w0
    e354:	b.hi	e470 <PyNumber_FloorDivide@plt+0x9870>  // b.pmore
    e358:	stp	x21, x22, [sp, #32]
    e35c:	ldr	w21, [sp, #72]
    e360:	sub	w22, w21, #0x1
    e364:	cmp	w22, #0x33
    e368:	b.ls	e3cc <PyNumber_FloorDivide@plt+0x97cc>  // b.plast
    e36c:	cmp	w21, #0x35
    e370:	b.ne	e494 <PyNumber_FloorDivide@plt+0x9894>  // b.any
    e374:	mov	w2, #0x1                   	// #1
    e378:	mov	w1, w2
    e37c:	mov	w0, w20
    e380:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e384:	add	w0, w0, #0x6
    e388:	mov	w1, #0x2493                	// #9363
    e38c:	movk	w1, #0x9249, lsl #16
    e390:	smull	x1, w0, w1
    e394:	lsr	x1, x1, #32
    e398:	add	w1, w0, w1
    e39c:	asr	w1, w1, #2
    e3a0:	sub	w1, w1, w0, asr #31
    e3a4:	lsl	w2, w1, #3
    e3a8:	sub	w1, w2, w1
    e3ac:	sub	w1, w0, w1
    e3b0:	cmp	w1, #0x3
    e3b4:	b.eq	e3cc <PyNumber_FloorDivide@plt+0x97cc>  // b.none
    e3b8:	cmp	w1, #0x2
    e3bc:	b.ne	e494 <PyNumber_FloorDivide@plt+0x9894>  // b.any
    e3c0:	mov	w0, w20
    e3c4:	bl	4d40 <PyNumber_FloorDivide@plt+0x140>
    e3c8:	cbz	w0, e494 <PyNumber_FloorDivide@plt+0x9894>
    e3cc:	str	x23, [sp, #48]
    e3d0:	ldr	w2, [sp, #68]
    e3d4:	sub	w23, w2, #0x1
    e3d8:	cmp	w23, #0x6
    e3dc:	b.hi	e4bc <PyNumber_FloorDivide@plt+0x98bc>  // b.pmore
    e3e0:	mov	w0, w20
    e3e4:	bl	4fdc <PyNumber_FloorDivide@plt+0x3dc>
    e3e8:	str	w21, [sp, #64]
    e3ec:	lsl	w1, w22, #3
    e3f0:	sub	w22, w1, w22
    e3f4:	add	w0, w22, w0
    e3f8:	add	x3, sp, #0x44
    e3fc:	add	x2, sp, #0x40
    e400:	add	x1, sp, #0x4c
    e404:	add	w0, w0, w23
    e408:	bl	4dd4 <PyNumber_FloorDivide@plt+0x1d4>
    e40c:	mov	x3, x19
    e410:	ldr	w2, [sp, #68]
    e414:	ldr	w1, [sp, #64]
    e418:	ldr	w0, [sp, #76]
    e41c:	bl	cba8 <PyNumber_FloorDivide@plt+0x7fa8>
    e420:	ldp	x21, x22, [sp, #32]
    e424:	ldr	x23, [sp, #48]
    e428:	ldp	x19, x20, [sp, #16]
    e42c:	ldp	x29, x30, [sp], #80
    e430:	ret
    e434:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e438:	ldr	x0, [x0, #4008]
    e43c:	ldr	x0, [x0]
    e440:	bl	48a0 <PyErr_ExceptionMatches@plt>
    e444:	mov	w1, w0
    e448:	mov	x0, #0x0                   	// #0
    e44c:	cbz	w1, e428 <PyNumber_FloorDivide@plt+0x9828>
    e450:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    e454:	add	x1, x1, #0x298
    e458:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e45c:	ldr	x0, [x0, #3968]
    e460:	ldr	x0, [x0]
    e464:	bl	4b60 <PyErr_Format@plt>
    e468:	mov	x0, #0x0                   	// #0
    e46c:	b	e428 <PyNumber_FloorDivide@plt+0x9828>
    e470:	mov	w2, w20
    e474:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    e478:	add	x1, x1, #0x2c0
    e47c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e480:	ldr	x0, [x0, #3968]
    e484:	ldr	x0, [x0]
    e488:	bl	4b60 <PyErr_Format@plt>
    e48c:	mov	x0, #0x0                   	// #0
    e490:	b	e428 <PyNumber_FloorDivide@plt+0x9828>
    e494:	mov	w2, w21
    e498:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    e49c:	add	x1, x1, #0x2e0
    e4a0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e4a4:	ldr	x0, [x0, #3968]
    e4a8:	ldr	x0, [x0]
    e4ac:	bl	4b60 <PyErr_Format@plt>
    e4b0:	mov	x0, #0x0                   	// #0
    e4b4:	ldp	x21, x22, [sp, #32]
    e4b8:	b	e428 <PyNumber_FloorDivide@plt+0x9828>
    e4bc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    e4c0:	add	x1, x1, #0x2f8
    e4c4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e4c8:	ldr	x0, [x0, #3968]
    e4cc:	ldr	x0, [x0]
    e4d0:	bl	4b60 <PyErr_Format@plt>
    e4d4:	mov	x0, #0x0                   	// #0
    e4d8:	ldp	x21, x22, [sp, #32]
    e4dc:	ldr	x23, [sp, #48]
    e4e0:	b	e428 <PyNumber_FloorDivide@plt+0x9828>
    e4e4:	stp	x29, x30, [sp, #-64]!
    e4e8:	mov	x29, sp
    e4ec:	stp	x19, x20, [sp, #16]
    e4f0:	stp	x21, x22, [sp, #32]
    e4f4:	stp	x23, x24, [sp, #48]
    e4f8:	mov	w20, w1
    e4fc:	mov	w21, w2
    e500:	mov	w22, w3
    e504:	ldrb	w19, [x0, #25]
    e508:	ldrb	w1, [x0, #26]
    e50c:	orr	w19, w1, w19, lsl #8
    e510:	ldrb	w24, [x0, #27]
    e514:	ldrb	w23, [x0, #28]
    e518:	mov	w2, w23
    e51c:	mov	w1, w24
    e520:	mov	w0, w19
    e524:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e528:	adrp	x2, 24000 <PyInit__datetime@@Base+0x155b0>
    e52c:	add	x2, x2, #0xc18
    e530:	add	x9, x2, #0xa0
    e534:	sub	w24, w24, #0x1
    e538:	add	x8, x2, #0x100
    e53c:	add	w0, w0, #0x6
    e540:	mov	w4, #0x2493                	// #9363
    e544:	movk	w4, #0x9249, lsl #16
    e548:	smull	x4, w0, w4
    e54c:	lsr	x4, x4, #32
    e550:	add	w4, w0, w4
    e554:	asr	w4, w4, #2
    e558:	sub	w4, w4, w0, asr #31
    e55c:	lsl	w1, w4, #3
    e560:	sub	w4, w1, w4
    e564:	sub	w0, w0, w4
    e568:	mov	w7, w19
    e56c:	mov	w6, w22
    e570:	mov	w5, w21
    e574:	mov	w4, w20
    e578:	mov	w3, w23
    e57c:	ldr	x2, [x9, w24, sxtw #3]
    e580:	ldr	x1, [x8, w0, sxtw #3]
    e584:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    e588:	add	x0, x0, #0x320
    e58c:	bl	4700 <PyUnicode_FromFormat@plt>
    e590:	ldp	x19, x20, [sp, #16]
    e594:	ldp	x21, x22, [sp, #32]
    e598:	ldp	x23, x24, [sp, #48]
    e59c:	ldp	x29, x30, [sp], #64
    e5a0:	ret
    e5a4:	stp	x29, x30, [sp, #-16]!
    e5a8:	mov	x29, sp
    e5ac:	ldrb	w3, [x0, #31]
    e5b0:	ldrb	w2, [x0, #30]
    e5b4:	ldrb	w1, [x0, #29]
    e5b8:	bl	e4e4 <PyNumber_FloorDivide@plt+0x98e4>
    e5bc:	ldp	x29, x30, [sp], #16
    e5c0:	ret
    e5c4:	stp	x29, x30, [sp, #-16]!
    e5c8:	mov	x29, sp
    e5cc:	mov	w3, #0x0                   	// #0
    e5d0:	mov	w2, #0x0                   	// #0
    e5d4:	mov	w1, #0x0                   	// #0
    e5d8:	bl	e4e4 <PyNumber_FloorDivide@plt+0x98e4>
    e5dc:	ldp	x29, x30, [sp], #16
    e5e0:	ret
    e5e4:	stp	x29, x30, [sp, #-16]!
    e5e8:	mov	x29, sp
    e5ec:	ldrb	w4, [x0, #25]
    e5f0:	ldrb	w3, [x0, #26]
    e5f4:	ldrb	w2, [x0, #28]
    e5f8:	ldrb	w1, [x0, #27]
    e5fc:	orr	w0, w3, w4, lsl #8
    e600:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e604:	add	w0, w0, #0x6
    e608:	mov	w1, #0x2493                	// #9363
    e60c:	movk	w1, #0x9249, lsl #16
    e610:	smull	x1, w0, w1
    e614:	lsr	x1, x1, #32
    e618:	add	w1, w0, w1
    e61c:	asr	w1, w1, #2
    e620:	sub	w1, w1, w0, asr #31
    e624:	lsl	w2, w1, #3
    e628:	sub	w1, w2, w1
    e62c:	sub	w0, w0, w1
    e630:	add	w0, w0, #0x1
    e634:	sxtw	x0, w0
    e638:	bl	4900 <PyLong_FromLong@plt>
    e63c:	ldp	x29, x30, [sp], #16
    e640:	ret
    e644:	sub	sp, sp, #0x70
    e648:	stp	x29, x30, [sp, #16]
    e64c:	add	x29, sp, #0x10
    e650:	stp	x19, x20, [sp, #32]
    e654:	stp	x21, x22, [sp, #48]
    e658:	stp	x23, x24, [sp, #64]
    e65c:	stp	x25, x26, [sp, #80]
    e660:	stp	x27, x28, [sp, #96]
    e664:	mov	w23, w0
    e668:	mov	w21, w1
    e66c:	mov	w22, w2
    e670:	mov	w24, w3
    e674:	mov	w25, w4
    e678:	mov	w26, w5
    e67c:	mov	w27, w6
    e680:	adrp	x0, 10000 <PyInit__datetime@@Base+0x15b0>
    e684:	add	x0, x0, #0x8
    e688:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    e68c:	mov	x20, x0
    e690:	cbz	x0, e7d0 <PyNumber_FloorDivide@plt+0x9bd0>
    e694:	mov	w2, w22
    e698:	mov	w1, w21
    e69c:	mov	w0, w23
    e6a0:	bl	4f58 <PyNumber_FloorDivide@plt+0x358>
    e6a4:	add	w0, w0, #0x6
    e6a8:	mov	w19, #0x2493                	// #9363
    e6ac:	movk	w19, #0x9249, lsl #16
    e6b0:	smull	x19, w0, w19
    e6b4:	lsr	x19, x19, #32
    e6b8:	add	w19, w0, w19
    e6bc:	asr	w19, w19, #2
    e6c0:	sub	w19, w19, w0, asr #31
    e6c4:	lsl	w1, w19, #3
    e6c8:	sub	w19, w1, w19
    e6cc:	sub	w19, w0, w19
    e6d0:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    e6d4:	add	x0, x0, #0x380
    e6d8:	add	x0, x0, #0x38
    e6dc:	ldr	w28, [x0, w21, sxtw #2]
    e6e0:	cmp	w21, #0x2
    e6e4:	b.le	e6f8 <PyNumber_FloorDivide@plt+0x9af8>
    e6e8:	mov	w0, w23
    e6ec:	bl	4d40 <PyNumber_FloorDivide@plt+0x140>
    e6f0:	cmp	w0, #0x0
    e6f4:	cinc	w28, w28, ne  // ne = any
    e6f8:	str	w27, [sp, #8]
    e6fc:	add	w0, w22, w28
    e700:	str	w0, [sp]
    e704:	mov	w7, w19
    e708:	mov	w6, w26
    e70c:	mov	w5, w25
    e710:	mov	w4, w24
    e714:	mov	w3, w22
    e718:	mov	w2, w21
    e71c:	mov	w1, w23
    e720:	adrp	x0, f000 <PyInit__datetime@@Base+0x5b0>
    e724:	add	x0, x0, #0xf10
    e728:	bl	49a0 <Py_BuildValue@plt>
    e72c:	mov	x19, x0
    e730:	cbz	x0, e798 <PyNumber_FloorDivide@plt+0x9b98>
    e734:	mov	x3, #0x0                   	// #0
    e738:	mov	x2, x0
    e73c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x165b0>
    e740:	add	x1, x1, #0xab8
    e744:	add	x1, x1, #0x4b0
    e748:	mov	x0, x20
    e74c:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    e750:	mov	x21, x0
    e754:	ldr	x1, [x20]
    e758:	sub	x1, x1, #0x1
    e75c:	str	x1, [x20]
    e760:	cbz	x1, e7b8 <PyNumber_FloorDivide@plt+0x9bb8>
    e764:	ldr	x1, [x19]
    e768:	sub	x1, x1, #0x1
    e76c:	str	x1, [x19]
    e770:	cbz	x1, e7c4 <PyNumber_FloorDivide@plt+0x9bc4>
    e774:	mov	x0, x21
    e778:	ldp	x19, x20, [sp, #32]
    e77c:	ldp	x21, x22, [sp, #48]
    e780:	ldp	x23, x24, [sp, #64]
    e784:	ldp	x25, x26, [sp, #80]
    e788:	ldp	x27, x28, [sp, #96]
    e78c:	ldp	x29, x30, [sp, #16]
    e790:	add	sp, sp, #0x70
    e794:	ret
    e798:	ldr	x0, [x20]
    e79c:	sub	x0, x0, #0x1
    e7a0:	str	x0, [x20]
    e7a4:	mov	x21, x19
    e7a8:	cbnz	x0, e774 <PyNumber_FloorDivide@plt+0x9b74>
    e7ac:	mov	x0, x20
    e7b0:	bl	4810 <_Py_Dealloc@plt>
    e7b4:	b	e774 <PyNumber_FloorDivide@plt+0x9b74>
    e7b8:	mov	x0, x20
    e7bc:	bl	4810 <_Py_Dealloc@plt>
    e7c0:	b	e764 <PyNumber_FloorDivide@plt+0x9b64>
    e7c4:	mov	x0, x19
    e7c8:	bl	4810 <_Py_Dealloc@plt>
    e7cc:	b	e774 <PyNumber_FloorDivide@plt+0x9b74>
    e7d0:	mov	x21, x0
    e7d4:	b	e774 <PyNumber_FloorDivide@plt+0x9b74>
    e7d8:	stp	x29, x30, [sp, #-16]!
    e7dc:	mov	x29, sp
    e7e0:	ldrb	w8, [x0, #25]
    e7e4:	ldrb	w7, [x0, #26]
    e7e8:	mov	w6, #0xffffffff            	// #-1
    e7ec:	mov	w5, #0x0                   	// #0
    e7f0:	mov	w4, #0x0                   	// #0
    e7f4:	mov	w3, #0x0                   	// #0
    e7f8:	ldrb	w2, [x0, #28]
    e7fc:	ldrb	w1, [x0, #27]
    e800:	orr	w0, w7, w8, lsl #8
    e804:	bl	e644 <PyNumber_FloorDivide@plt+0x9a44>
    e808:	ldp	x29, x30, [sp], #16
    e80c:	ret
    e810:	stp	x29, x30, [sp, #-80]!
    e814:	mov	x29, sp
    e818:	stp	x19, x20, [sp, #16]
    e81c:	mov	x19, x0
    e820:	ldrb	w0, [x0, #24]
    e824:	cbz	w0, e89c <PyNumber_FloorDivide@plt+0x9c9c>
    e828:	ldr	x0, [x19, #40]
    e82c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    e830:	ldr	x1, [x1, #4024]
    e834:	cmp	x0, x1
    e838:	b.eq	e89c <PyNumber_FloorDivide@plt+0x9c9c>  // b.none
    e83c:	mov	x2, x19
    e840:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    e844:	add	x1, x1, #0x6c0
    e848:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    e84c:	mov	x20, x0
    e850:	cbz	x0, e914 <PyNumber_FloorDivide@plt+0x9d14>
    e854:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e858:	ldr	x0, [x0, #4024]
    e85c:	cmp	x20, x0
    e860:	b.eq	e924 <PyNumber_FloorDivide@plt+0x9d24>  // b.none
    e864:	mov	w2, #0xffffffff            	// #-1
    e868:	mov	x1, x20
    e86c:	mov	x0, x19
    e870:	bl	bb7c <PyNumber_FloorDivide@plt+0x6f7c>
    e874:	mov	x19, x0
    e878:	ldr	x0, [x20]
    e87c:	sub	x0, x0, #0x1
    e880:	str	x0, [x20]
    e884:	cbz	x0, e960 <PyNumber_FloorDivide@plt+0x9d60>
    e888:	cbz	x19, e978 <PyNumber_FloorDivide@plt+0x9d78>
    e88c:	stp	x21, x22, [sp, #32]
    e890:	stp	x23, x24, [sp, #48]
    e894:	str	x25, [sp, #64]
    e898:	b	e8b4 <PyNumber_FloorDivide@plt+0x9cb4>
    e89c:	stp	x21, x22, [sp, #32]
    e8a0:	stp	x23, x24, [sp, #48]
    e8a4:	str	x25, [sp, #64]
    e8a8:	ldr	x0, [x19]
    e8ac:	add	x0, x0, #0x1
    e8b0:	str	x0, [x19]
    e8b4:	ldrb	w20, [x19, #25]
    e8b8:	ldrb	w0, [x19, #26]
    e8bc:	orr	w20, w0, w20, lsl #8
    e8c0:	ldrb	w21, [x19, #27]
    e8c4:	ldrb	w22, [x19, #28]
    e8c8:	ldrb	w23, [x19, #29]
    e8cc:	ldrb	w24, [x19, #30]
    e8d0:	ldrb	w25, [x19, #31]
    e8d4:	ldr	x0, [x19]
    e8d8:	sub	x0, x0, #0x1
    e8dc:	str	x0, [x19]
    e8e0:	cbz	x0, e96c <PyNumber_FloorDivide@plt+0x9d6c>
    e8e4:	mov	w6, #0x0                   	// #0
    e8e8:	mov	w5, w25
    e8ec:	mov	w4, w24
    e8f0:	mov	w3, w23
    e8f4:	mov	w2, w22
    e8f8:	mov	w1, w21
    e8fc:	mov	w0, w20
    e900:	bl	e644 <PyNumber_FloorDivide@plt+0x9a44>
    e904:	mov	x20, x0
    e908:	ldp	x21, x22, [sp, #32]
    e90c:	ldp	x23, x24, [sp, #48]
    e910:	ldr	x25, [sp, #64]
    e914:	mov	x0, x20
    e918:	ldp	x19, x20, [sp, #16]
    e91c:	ldp	x29, x30, [sp], #80
    e920:	ret
    e924:	stp	x21, x22, [sp, #32]
    e928:	stp	x23, x24, [sp, #48]
    e92c:	str	x25, [sp, #64]
    e930:	mov	x1, x0
    e934:	ldr	x0, [x0]
    e938:	sub	x0, x0, #0x1
    e93c:	str	x0, [x1]
    e940:	cbz	x0, e954 <PyNumber_FloorDivide@plt+0x9d54>
    e944:	ldr	x0, [x19]
    e948:	add	x0, x0, #0x1
    e94c:	str	x0, [x19]
    e950:	b	e8b4 <PyNumber_FloorDivide@plt+0x9cb4>
    e954:	mov	x0, x1
    e958:	bl	4810 <_Py_Dealloc@plt>
    e95c:	b	e944 <PyNumber_FloorDivide@plt+0x9d44>
    e960:	mov	x0, x20
    e964:	bl	4810 <_Py_Dealloc@plt>
    e968:	b	e888 <PyNumber_FloorDivide@plt+0x9c88>
    e96c:	mov	x0, x19
    e970:	bl	4810 <_Py_Dealloc@plt>
    e974:	b	e8e4 <PyNumber_FloorDivide@plt+0x9ce4>
    e978:	mov	x20, x19
    e97c:	b	e914 <PyNumber_FloorDivide@plt+0x9d14>
    e980:	stp	x29, x30, [sp, #-48]!
    e984:	mov	x29, sp
    e988:	stp	x19, x20, [sp, #16]
    e98c:	str	x21, [sp, #32]
    e990:	mov	x19, x0
    e994:	ldrb	w0, [x0, #24]
    e998:	cbz	w0, ea04 <PyNumber_FloorDivide@plt+0x9e04>
    e99c:	ldr	x0, [x19, #40]
    e9a0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x155b0>
    e9a4:	ldr	x1, [x1, #4024]
    e9a8:	cmp	x0, x1
    e9ac:	b.eq	ea48 <PyNumber_FloorDivide@plt+0x9e48>  // b.none
    e9b0:	mov	x2, x19
    e9b4:	adrp	x1, f000 <PyInit__datetime@@Base+0x5b0>
    e9b8:	add	x1, x1, #0x6b8
    e9bc:	bl	7170 <PyNumber_FloorDivide@plt+0x2570>
    e9c0:	mov	x20, x0
    e9c4:	cbz	x0, ea34 <PyNumber_FloorDivide@plt+0x9e34>
    e9c8:	mov	w21, #0xffffffff            	// #-1
    e9cc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x155b0>
    e9d0:	ldr	x0, [x0, #4024]
    e9d4:	cmp	x20, x0
    e9d8:	b.eq	e9e8 <PyNumber_FloorDivide@plt+0x9de8>  // b.none
    e9dc:	mov	x0, x20
    e9e0:	bl	53e4 <PyNumber_FloorDivide@plt+0x7e4>
    e9e4:	mov	w21, w0
    e9e8:	ldr	x0, [x20]
    e9ec:	sub	x0, x0, #0x1
    e9f0:	str	x0, [x20]
    e9f4:	cbnz	x0, ea08 <PyNumber_FloorDivide@plt+0x9e08>
    e9f8:	mov	x0, x20
    e9fc:	bl	4810 <_Py_Dealloc@plt>
    ea00:	b	ea08 <PyNumber_FloorDivide@plt+0x9e08>
    ea04:	mov	w21, #0xffffffff            	// #-1
    ea08:	ldrb	w7, [x19, #25]
    ea0c:	ldrb	w0, [x19, #26]
    ea10:	mov	w6, w21
    ea14:	ldrb	w5, [x19, #31]
    ea18:	ldrb	w4, [x19, #30]
    ea1c:	ldrb	w3, [x19, #29]
    ea20:	ldrb	w2, [x19, #28]
    ea24:	ldrb	w1, [x19, #27]
    ea28:	orr	w0, w0, w7, lsl #8
    ea2c:	bl	e644 <PyNumber_FloorDivide@plt+0x9a44>
    ea30:	mov	x20, x0
    ea34:	mov	x0, x20
    ea38:	ldp	x19, x20, [sp, #16]
    ea3c:	ldr	x21, [sp, #32]
    ea40:	ldp	x29, x30, [sp], #48
    ea44:	ret
    ea48:	mov	w21, #0xffffffff            	// #-1
    ea4c:	b	ea08 <PyNumber_FloorDivide@plt+0x9e08>

000000000000ea50 <PyInit__datetime@@Base>:
    ea50:	sub	sp, sp, #0x40
    ea54:	stp	x29, x30, [sp, #16]
    ea58:	add	x29, sp, #0x10
    ea5c:	stp	x19, x20, [sp, #32]
    ea60:	mov	w1, #0x3f5                 	// #1013
    ea64:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    ea68:	add	x0, x0, #0xab8
    ea6c:	add	x0, x0, #0x4c8
    ea70:	bl	49c0 <PyModule_Create2@plt>
    ea74:	mov	x19, x0
    ea78:	cbz	x0, f374 <PyInit__datetime@@Base+0x924>
    ea7c:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    ea80:	add	x0, x0, #0x298
    ea84:	add	x0, x0, #0x680
    ea88:	bl	48f0 <PyType_Ready@plt>
    ea8c:	tbnz	w0, #31, f370 <PyInit__datetime@@Base+0x920>
    ea90:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    ea94:	add	x0, x0, #0x298
    ea98:	bl	48f0 <PyType_Ready@plt>
    ea9c:	tbnz	w0, #31, f388 <PyInit__datetime@@Base+0x938>
    eaa0:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    eaa4:	add	x0, x0, #0x298
    eaa8:	add	x0, x0, #0x4e0
    eaac:	bl	48f0 <PyType_Ready@plt>
    eab0:	tbnz	w0, #31, f390 <PyInit__datetime@@Base+0x940>
    eab4:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    eab8:	add	x0, x0, #0x298
    eabc:	add	x0, x0, #0x1a0
    eac0:	bl	48f0 <PyType_Ready@plt>
    eac4:	tbnz	w0, #31, f398 <PyInit__datetime@@Base+0x948>
    eac8:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    eacc:	add	x0, x0, #0x298
    ead0:	add	x0, x0, #0x340
    ead4:	bl	48f0 <PyType_Ready@plt>
    ead8:	tbnz	w0, #31, f3a0 <PyInit__datetime@@Base+0x950>
    eadc:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    eae0:	add	x0, x0, #0xab8
    eae4:	bl	48f0 <PyType_Ready@plt>
    eae8:	tbnz	w0, #31, f3a8 <PyInit__datetime@@Base+0x958>
    eaec:	stp	x21, x22, [sp, #48]
    eaf0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    eaf4:	add	x4, x4, #0x298
    eaf8:	add	x4, x4, #0x4e0
    eafc:	ldr	x21, [x4, #264]
    eb00:	mov	w3, #0x0                   	// #0
    eb04:	mov	w2, #0x1                   	// #1
    eb08:	mov	w1, #0x0                   	// #0
    eb0c:	mov	w0, #0x0                   	// #0
    eb10:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    eb14:	mov	x20, x0
    eb18:	cbz	x0, f3b0 <PyInit__datetime@@Base+0x960>
    eb1c:	mov	x2, x0
    eb20:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    eb24:	add	x1, x1, #0x340
    eb28:	mov	x0, x21
    eb2c:	bl	4720 <PyDict_SetItemString@plt>
    eb30:	tbnz	w0, #31, f3bc <PyInit__datetime@@Base+0x96c>
    eb34:	ldr	x0, [x20]
    eb38:	sub	x0, x0, #0x1
    eb3c:	str	x0, [x20]
    eb40:	cbz	x0, f2a4 <PyInit__datetime@@Base+0x854>
    eb44:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    eb48:	add	x4, x4, #0x298
    eb4c:	add	x4, x4, #0x4e0
    eb50:	mov	w3, #0x0                   	// #0
    eb54:	mov	w2, #0x0                   	// #0
    eb58:	mov	w1, #0x0                   	// #0
    eb5c:	mov	w0, #0x3601                	// #13825
    eb60:	movk	w0, #0xc465, lsl #16
    eb64:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    eb68:	mov	x20, x0
    eb6c:	cbz	x0, f3c8 <PyInit__datetime@@Base+0x978>
    eb70:	mov	x2, x0
    eb74:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    eb78:	add	x1, x1, #0x350
    eb7c:	mov	x0, x21
    eb80:	bl	4720 <PyDict_SetItemString@plt>
    eb84:	tbnz	w0, #31, f3d4 <PyInit__datetime@@Base+0x984>
    eb88:	ldr	x0, [x20]
    eb8c:	sub	x0, x0, #0x1
    eb90:	str	x0, [x20]
    eb94:	cbz	x0, f2b0 <PyInit__datetime@@Base+0x860>
    eb98:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    eb9c:	add	x4, x4, #0x298
    eba0:	add	x4, x4, #0x4e0
    eba4:	mov	w3, #0x0                   	// #0
    eba8:	mov	w2, #0x423f                	// #16959
    ebac:	movk	w2, #0xf, lsl #16
    ebb0:	mov	w1, #0x517f                	// #20863
    ebb4:	movk	w1, #0x1, lsl #16
    ebb8:	mov	w0, #0xc9ff                	// #51711
    ebbc:	movk	w0, #0x3b9a, lsl #16
    ebc0:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    ebc4:	mov	x20, x0
    ebc8:	cbz	x0, f3e0 <PyInit__datetime@@Base+0x990>
    ebcc:	mov	x2, x0
    ebd0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ebd4:	add	x1, x1, #0x358
    ebd8:	mov	x0, x21
    ebdc:	bl	4720 <PyDict_SetItemString@plt>
    ebe0:	tbnz	w0, #31, f3ec <PyInit__datetime@@Base+0x99c>
    ebe4:	ldr	x0, [x20]
    ebe8:	sub	x0, x0, #0x1
    ebec:	str	x0, [x20]
    ebf0:	cbz	x0, f2bc <PyInit__datetime@@Base+0x86c>
    ebf4:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    ebf8:	add	x3, x3, #0x298
    ebfc:	add	x3, x3, #0x680
    ec00:	ldr	x21, [x3, #264]
    ec04:	mov	w2, #0x1                   	// #1
    ec08:	mov	w1, w2
    ec0c:	mov	w0, w2
    ec10:	bl	61d8 <PyNumber_FloorDivide@plt+0x15d8>
    ec14:	mov	x20, x0
    ec18:	cbz	x0, f3f8 <PyInit__datetime@@Base+0x9a8>
    ec1c:	mov	x2, x0
    ec20:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ec24:	add	x1, x1, #0x350
    ec28:	mov	x0, x21
    ec2c:	bl	4720 <PyDict_SetItemString@plt>
    ec30:	tbnz	w0, #31, f404 <PyInit__datetime@@Base+0x9b4>
    ec34:	ldr	x0, [x20]
    ec38:	sub	x0, x0, #0x1
    ec3c:	str	x0, [x20]
    ec40:	cbz	x0, f2c8 <PyInit__datetime@@Base+0x878>
    ec44:	adrp	x3, 25000 <PyInit__datetime@@Base+0x165b0>
    ec48:	add	x3, x3, #0x298
    ec4c:	add	x3, x3, #0x680
    ec50:	mov	w2, #0x1f                  	// #31
    ec54:	mov	w1, #0xc                   	// #12
    ec58:	mov	w0, #0x270f                	// #9999
    ec5c:	bl	61d8 <PyNumber_FloorDivide@plt+0x15d8>
    ec60:	mov	x20, x0
    ec64:	cbz	x0, f410 <PyInit__datetime@@Base+0x9c0>
    ec68:	mov	x2, x0
    ec6c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ec70:	add	x1, x1, #0x358
    ec74:	mov	x0, x21
    ec78:	bl	4720 <PyDict_SetItemString@plt>
    ec7c:	tbnz	w0, #31, f41c <PyInit__datetime@@Base+0x9cc>
    ec80:	ldr	x0, [x20]
    ec84:	sub	x0, x0, #0x1
    ec88:	str	x0, [x20]
    ec8c:	cbz	x0, f2d4 <PyInit__datetime@@Base+0x884>
    ec90:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    ec94:	add	x4, x4, #0x298
    ec98:	add	x4, x4, #0x4e0
    ec9c:	mov	w3, #0x0                   	// #0
    eca0:	mov	w2, #0x0                   	// #0
    eca4:	mov	w1, #0x0                   	// #0
    eca8:	mov	w0, #0x1                   	// #1
    ecac:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    ecb0:	mov	x20, x0
    ecb4:	cbz	x0, f428 <PyInit__datetime@@Base+0x9d8>
    ecb8:	mov	x2, x0
    ecbc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ecc0:	add	x1, x1, #0x340
    ecc4:	mov	x0, x21
    ecc8:	bl	4720 <PyDict_SetItemString@plt>
    eccc:	tbnz	w0, #31, f434 <PyInit__datetime@@Base+0x9e4>
    ecd0:	ldr	x0, [x20]
    ecd4:	sub	x0, x0, #0x1
    ecd8:	str	x0, [x20]
    ecdc:	cbz	x0, f2e0 <PyInit__datetime@@Base+0x890>
    ece0:	adrp	x6, 25000 <PyInit__datetime@@Base+0x165b0>
    ece4:	add	x6, x6, #0x298
    ece8:	add	x6, x6, #0x1a0
    ecec:	ldr	x21, [x6, #264]
    ecf0:	mov	w5, #0x0                   	// #0
    ecf4:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    ecf8:	ldr	x4, [x4, #4024]
    ecfc:	mov	w3, #0x0                   	// #0
    ed00:	mov	w2, #0x0                   	// #0
    ed04:	mov	w1, #0x0                   	// #0
    ed08:	mov	w0, #0x0                   	// #0
    ed0c:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    ed10:	mov	x20, x0
    ed14:	cbz	x0, f440 <PyInit__datetime@@Base+0x9f0>
    ed18:	mov	x2, x0
    ed1c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ed20:	add	x1, x1, #0x350
    ed24:	mov	x0, x21
    ed28:	bl	4720 <PyDict_SetItemString@plt>
    ed2c:	tbnz	w0, #31, f44c <PyInit__datetime@@Base+0x9fc>
    ed30:	ldr	x0, [x20]
    ed34:	sub	x0, x0, #0x1
    ed38:	str	x0, [x20]
    ed3c:	cbz	x0, f2ec <PyInit__datetime@@Base+0x89c>
    ed40:	adrp	x6, 25000 <PyInit__datetime@@Base+0x165b0>
    ed44:	add	x6, x6, #0x298
    ed48:	add	x6, x6, #0x1a0
    ed4c:	mov	w5, #0x0                   	// #0
    ed50:	adrp	x4, 24000 <PyInit__datetime@@Base+0x155b0>
    ed54:	ldr	x4, [x4, #4024]
    ed58:	mov	w3, #0x423f                	// #16959
    ed5c:	movk	w3, #0xf, lsl #16
    ed60:	mov	w2, #0x3b                  	// #59
    ed64:	mov	w1, w2
    ed68:	mov	w0, #0x17                  	// #23
    ed6c:	bl	6360 <PyNumber_FloorDivide@plt+0x1760>
    ed70:	mov	x20, x0
    ed74:	cbz	x0, f458 <PyInit__datetime@@Base+0xa08>
    ed78:	mov	x2, x0
    ed7c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ed80:	add	x1, x1, #0x358
    ed84:	mov	x0, x21
    ed88:	bl	4720 <PyDict_SetItemString@plt>
    ed8c:	tbnz	w0, #31, f464 <PyInit__datetime@@Base+0xa14>
    ed90:	ldr	x0, [x20]
    ed94:	sub	x0, x0, #0x1
    ed98:	str	x0, [x20]
    ed9c:	cbz	x0, f2f8 <PyInit__datetime@@Base+0x8a8>
    eda0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    eda4:	add	x4, x4, #0x298
    eda8:	add	x4, x4, #0x4e0
    edac:	mov	w3, #0x0                   	// #0
    edb0:	mov	w2, #0x1                   	// #1
    edb4:	mov	w1, #0x0                   	// #0
    edb8:	mov	w0, #0x0                   	// #0
    edbc:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    edc0:	mov	x20, x0
    edc4:	cbz	x0, f470 <PyInit__datetime@@Base+0xa20>
    edc8:	mov	x2, x0
    edcc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    edd0:	add	x1, x1, #0x340
    edd4:	mov	x0, x21
    edd8:	bl	4720 <PyDict_SetItemString@plt>
    eddc:	tbnz	w0, #31, f47c <PyInit__datetime@@Base+0xa2c>
    ede0:	ldr	x0, [x20]
    ede4:	sub	x0, x0, #0x1
    ede8:	str	x0, [x20]
    edec:	cbz	x0, f304 <PyInit__datetime@@Base+0x8b4>
    edf0:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    edf4:	add	x0, x0, #0x298
    edf8:	ldr	x21, [x0, #264]
    edfc:	str	x0, [sp, #8]
    ee00:	str	wzr, [sp]
    ee04:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    ee08:	ldr	x7, [x7, #4024]
    ee0c:	mov	w6, #0x0                   	// #0
    ee10:	mov	w5, #0x0                   	// #0
    ee14:	mov	w4, #0x0                   	// #0
    ee18:	mov	w3, #0x0                   	// #0
    ee1c:	mov	w2, #0x1                   	// #1
    ee20:	mov	w1, w2
    ee24:	mov	w0, w2
    ee28:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    ee2c:	mov	x20, x0
    ee30:	cbz	x0, f488 <PyInit__datetime@@Base+0xa38>
    ee34:	mov	x2, x0
    ee38:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ee3c:	add	x1, x1, #0x350
    ee40:	mov	x0, x21
    ee44:	bl	4720 <PyDict_SetItemString@plt>
    ee48:	tbnz	w0, #31, f494 <PyInit__datetime@@Base+0xa44>
    ee4c:	ldr	x0, [x20]
    ee50:	sub	x0, x0, #0x1
    ee54:	str	x0, [x20]
    ee58:	cbz	x0, f310 <PyInit__datetime@@Base+0x8c0>
    ee5c:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    ee60:	add	x0, x0, #0x298
    ee64:	str	x0, [sp, #8]
    ee68:	str	wzr, [sp]
    ee6c:	adrp	x7, 24000 <PyInit__datetime@@Base+0x155b0>
    ee70:	ldr	x7, [x7, #4024]
    ee74:	mov	w6, #0x423f                	// #16959
    ee78:	movk	w6, #0xf, lsl #16
    ee7c:	mov	w5, #0x3b                  	// #59
    ee80:	mov	w4, w5
    ee84:	mov	w3, #0x17                  	// #23
    ee88:	mov	w2, #0x1f                  	// #31
    ee8c:	mov	w1, #0xc                   	// #12
    ee90:	mov	w0, #0x270f                	// #9999
    ee94:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    ee98:	mov	x20, x0
    ee9c:	cbz	x0, f4a0 <PyInit__datetime@@Base+0xa50>
    eea0:	mov	x2, x0
    eea4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    eea8:	add	x1, x1, #0x358
    eeac:	mov	x0, x21
    eeb0:	bl	4720 <PyDict_SetItemString@plt>
    eeb4:	tbnz	w0, #31, f4ac <PyInit__datetime@@Base+0xa5c>
    eeb8:	ldr	x0, [x20]
    eebc:	sub	x0, x0, #0x1
    eec0:	str	x0, [x20]
    eec4:	cbz	x0, f31c <PyInit__datetime@@Base+0x8cc>
    eec8:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    eecc:	add	x4, x4, #0x298
    eed0:	add	x4, x4, #0x4e0
    eed4:	mov	w3, #0x0                   	// #0
    eed8:	mov	w2, #0x1                   	// #1
    eedc:	mov	w1, #0x0                   	// #0
    eee0:	mov	w0, #0x0                   	// #0
    eee4:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    eee8:	mov	x20, x0
    eeec:	cbz	x0, f4b8 <PyInit__datetime@@Base+0xa68>
    eef0:	mov	x2, x0
    eef4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    eef8:	add	x1, x1, #0x340
    eefc:	mov	x0, x21
    ef00:	bl	4720 <PyDict_SetItemString@plt>
    ef04:	tbnz	w0, #31, f4c4 <PyInit__datetime@@Base+0xa74>
    ef08:	ldr	x0, [x20]
    ef0c:	sub	x0, x0, #0x1
    ef10:	str	x0, [x20]
    ef14:	cbz	x0, f328 <PyInit__datetime@@Base+0x8d8>
    ef18:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    ef1c:	ldr	x22, [x0, #3008]
    ef20:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    ef24:	add	x4, x4, #0x298
    ef28:	add	x4, x4, #0x4e0
    ef2c:	mov	w3, #0x0                   	// #0
    ef30:	mov	w2, #0x0                   	// #0
    ef34:	mov	w1, #0x0                   	// #0
    ef38:	mov	w0, #0x0                   	// #0
    ef3c:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    ef40:	mov	x20, x0
    ef44:	cbz	x0, f4d0 <PyInit__datetime@@Base+0xa80>
    ef48:	mov	x1, #0x0                   	// #0
    ef4c:	bl	5354 <PyNumber_FloorDivide@plt+0x754>
    ef50:	mov	x21, x0
    ef54:	ldr	x0, [x20]
    ef58:	sub	x0, x0, #0x1
    ef5c:	str	x0, [x20]
    ef60:	cbz	x0, f334 <PyInit__datetime@@Base+0x8e4>
    ef64:	cbz	x21, f4dc <PyInit__datetime@@Base+0xa8c>
    ef68:	mov	x2, x21
    ef6c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    ef70:	add	x1, x1, #0x360
    ef74:	mov	x0, x22
    ef78:	bl	4720 <PyDict_SetItemString@plt>
    ef7c:	tbnz	w0, #31, f4e8 <PyInit__datetime@@Base+0xa98>
    ef80:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    ef84:	str	x21, [x0, #3960]
    ef88:	adrp	x0, 26000 <PyInit__datetime@@Base+0x175b0>
    ef8c:	str	x21, [x0, #16]
    ef90:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    ef94:	add	x4, x4, #0x298
    ef98:	add	x4, x4, #0x4e0
    ef9c:	mov	w3, #0x1                   	// #1
    efa0:	mov	w2, #0x0                   	// #0
    efa4:	mov	w1, #0x3c                  	// #60
    efa8:	mov	w0, #0xffffffff            	// #-1
    efac:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    efb0:	mov	x20, x0
    efb4:	cbz	x0, f4f4 <PyInit__datetime@@Base+0xaa4>
    efb8:	mov	x1, #0x0                   	// #0
    efbc:	bl	5354 <PyNumber_FloorDivide@plt+0x754>
    efc0:	mov	x21, x0
    efc4:	ldr	x0, [x20]
    efc8:	sub	x0, x0, #0x1
    efcc:	str	x0, [x20]
    efd0:	cbz	x0, f340 <PyInit__datetime@@Base+0x8f0>
    efd4:	cbz	x21, f500 <PyInit__datetime@@Base+0xab0>
    efd8:	mov	x2, x21
    efdc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    efe0:	add	x1, x1, #0x350
    efe4:	mov	x0, x22
    efe8:	bl	4720 <PyDict_SetItemString@plt>
    efec:	tbnz	w0, #31, f50c <PyInit__datetime@@Base+0xabc>
    eff0:	ldr	x0, [x21]
    eff4:	sub	x0, x0, #0x1
    eff8:	str	x0, [x21]
    effc:	cbz	x0, f34c <PyInit__datetime@@Base+0x8fc>
    f000:	adrp	x4, 25000 <PyInit__datetime@@Base+0x165b0>
    f004:	add	x4, x4, #0x298
    f008:	add	x4, x4, #0x4e0
    f00c:	mov	w3, #0x0                   	// #0
    f010:	mov	w2, #0x0                   	// #0
    f014:	mov	w1, #0x5144                	// #20804
    f018:	movk	w1, #0x1, lsl #16
    f01c:	mov	w0, #0x0                   	// #0
    f020:	bl	5c9c <PyNumber_FloorDivide@plt+0x109c>
    f024:	mov	x21, x0
    f028:	cbz	x0, f518 <PyInit__datetime@@Base+0xac8>
    f02c:	mov	x1, #0x0                   	// #0
    f030:	bl	5354 <PyNumber_FloorDivide@plt+0x754>
    f034:	mov	x20, x0
    f038:	ldr	x0, [x21]
    f03c:	sub	x0, x0, #0x1
    f040:	str	x0, [x21]
    f044:	cbz	x0, f358 <PyInit__datetime@@Base+0x908>
    f048:	cbz	x20, f524 <PyInit__datetime@@Base+0xad4>
    f04c:	mov	x2, x20
    f050:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f054:	add	x1, x1, #0x358
    f058:	mov	x0, x22
    f05c:	bl	4720 <PyDict_SetItemString@plt>
    f060:	tbnz	w0, #31, f530 <PyInit__datetime@@Base+0xae0>
    f064:	ldr	x0, [x20]
    f068:	sub	x0, x0, #0x1
    f06c:	str	x0, [x20]
    f070:	cbz	x0, f364 <PyInit__datetime@@Base+0x914>
    f074:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    f078:	add	x20, x1, #0xf78
    f07c:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    f080:	add	x0, x0, #0x298
    f084:	str	x0, [sp, #8]
    f088:	str	wzr, [sp]
    f08c:	ldr	x7, [x1, #3960]
    f090:	mov	w6, #0x0                   	// #0
    f094:	mov	w5, #0x0                   	// #0
    f098:	mov	w4, #0x0                   	// #0
    f09c:	mov	w3, #0x0                   	// #0
    f0a0:	mov	w2, #0x1                   	// #1
    f0a4:	mov	w1, w2
    f0a8:	mov	w0, #0x7b2                 	// #1970
    f0ac:	bl	b51c <PyNumber_FloorDivide@plt+0x691c>
    f0b0:	str	x0, [x20, #72]
    f0b4:	cbz	x0, f53c <PyInit__datetime@@Base+0xaec>
    f0b8:	mov	x2, #0x1                   	// #1
    f0bc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f0c0:	add	x1, x1, #0x368
    f0c4:	mov	x0, x19
    f0c8:	bl	4740 <PyModule_AddIntConstant@plt>
    f0cc:	mov	x2, #0x270f                	// #9999
    f0d0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f0d4:	add	x1, x1, #0x370
    f0d8:	mov	x0, x19
    f0dc:	bl	4740 <PyModule_AddIntConstant@plt>
    f0e0:	adrp	x21, 25000 <PyInit__datetime@@Base+0x165b0>
    f0e4:	add	x20, x21, #0x298
    f0e8:	ldr	x0, [x20, #1664]
    f0ec:	add	x0, x0, #0x1
    f0f0:	str	x0, [x20, #1664]
    f0f4:	add	x2, x20, #0x680
    f0f8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f0fc:	add	x1, x1, #0x378
    f100:	mov	x0, x19
    f104:	bl	4b00 <PyModule_AddObject@plt>
    f108:	ldr	x0, [x21, #664]
    f10c:	add	x0, x0, #0x1
    f110:	str	x0, [x21, #664]
    f114:	mov	x2, x20
    f118:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f11c:	add	x1, x1, #0x380
    f120:	mov	x0, x19
    f124:	bl	4b00 <PyModule_AddObject@plt>
    f128:	ldr	x0, [x20, #416]
    f12c:	add	x0, x0, #0x1
    f130:	str	x0, [x20, #416]
    f134:	add	x2, x20, #0x1a0
    f138:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f13c:	add	x1, x1, #0x8
    f140:	mov	x0, x19
    f144:	bl	4b00 <PyModule_AddObject@plt>
    f148:	ldr	x0, [x20, #1248]
    f14c:	add	x0, x0, #0x1
    f150:	str	x0, [x20, #1248]
    f154:	add	x2, x20, #0x4e0
    f158:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f15c:	add	x1, x1, #0x390
    f160:	mov	x0, x19
    f164:	bl	4b00 <PyModule_AddObject@plt>
    f168:	ldr	x0, [x20, #832]
    f16c:	add	x0, x0, #0x1
    f170:	str	x0, [x20, #832]
    f174:	add	x2, x20, #0x340
    f178:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f17c:	add	x1, x1, #0x3a0
    f180:	mov	x0, x19
    f184:	bl	4b00 <PyModule_AddObject@plt>
    f188:	adrp	x0, 25000 <PyInit__datetime@@Base+0x165b0>
    f18c:	add	x20, x0, #0xab8
    f190:	ldr	x1, [x0, #2744]
    f194:	add	x1, x1, #0x1
    f198:	str	x1, [x0, #2744]
    f19c:	mov	x2, x20
    f1a0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f1a4:	add	x1, x1, #0x3a8
    f1a8:	mov	x0, x19
    f1ac:	bl	4b00 <PyModule_AddObject@plt>
    f1b0:	mov	x2, #0x0                   	// #0
    f1b4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f1b8:	add	x1, x1, #0x3b8
    f1bc:	add	x0, x20, #0x530
    f1c0:	bl	4b20 <PyCapsule_New@plt>
    f1c4:	mov	x2, x0
    f1c8:	cbz	x0, f548 <PyInit__datetime@@Base+0xaf8>
    f1cc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x15b0>
    f1d0:	add	x1, x1, #0x3d0
    f1d4:	mov	x0, x19
    f1d8:	bl	4b00 <PyModule_AddObject@plt>
    f1dc:	mov	x0, #0x3e8                 	// #1000
    f1e0:	bl	4900 <PyLong_FromLong@plt>
    f1e4:	adrp	x20, 26000 <PyInit__datetime@@Base+0x175b0>
    f1e8:	add	x20, x20, #0xf78
    f1ec:	str	x0, [x20, #32]
    f1f0:	mov	x0, #0x4240                	// #16960
    f1f4:	movk	x0, #0xf, lsl #16
    f1f8:	bl	4900 <PyLong_FromLong@plt>
    f1fc:	str	x0, [x20, #16]
    f200:	mov	x0, #0x8700                	// #34560
    f204:	movk	x0, #0x393, lsl #16
    f208:	bl	4900 <PyLong_FromLong@plt>
    f20c:	str	x0, [x20, #40]
    f210:	mov	x0, #0x5180                	// #20864
    f214:	movk	x0, #0x1, lsl #16
    f218:	bl	4900 <PyLong_FromLong@plt>
    f21c:	str	x0, [x20, #24]
    f220:	ldr	x1, [x20, #32]
    f224:	cbz	x1, f554 <PyInit__datetime@@Base+0xb04>
    f228:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    f22c:	ldr	x1, [x1, #3976]
    f230:	cbz	x1, f560 <PyInit__datetime@@Base+0xb10>
    f234:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    f238:	ldr	x1, [x1, #4000]
    f23c:	cmp	x1, #0x0
    f240:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f244:	b.eq	f56c <PyInit__datetime@@Base+0xb1c>  // b.none
    f248:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    f24c:	ldr	d0, [x0, #872]
    f250:	bl	4790 <PyLong_FromDouble@plt>
    f254:	adrp	x20, 26000 <PyInit__datetime@@Base+0x175b0>
    f258:	add	x20, x20, #0xf78
    f25c:	str	x0, [x20, #48]
    f260:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    f264:	ldr	d0, [x0, #880]
    f268:	bl	4790 <PyLong_FromDouble@plt>
    f26c:	str	x0, [x20, #56]
    f270:	adrp	x0, 11000 <PyInit__datetime@@Base+0x25b0>
    f274:	ldr	d0, [x0, #888]
    f278:	bl	4790 <PyLong_FromDouble@plt>
    f27c:	str	x0, [x20, #64]
    f280:	ldr	x1, [x20, #48]
    f284:	cbz	x1, f578 <PyInit__datetime@@Base+0xb28>
    f288:	adrp	x1, 26000 <PyInit__datetime@@Base+0x175b0>
    f28c:	ldr	x1, [x1, #4016]
    f290:	cmp	x1, #0x0
    f294:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f298:	csel	x19, x19, xzr, ne  // ne = any
    f29c:	ldp	x21, x22, [sp, #48]
    f2a0:	b	f374 <PyInit__datetime@@Base+0x924>
    f2a4:	mov	x0, x20
    f2a8:	bl	4810 <_Py_Dealloc@plt>
    f2ac:	b	eb44 <PyInit__datetime@@Base+0xf4>
    f2b0:	mov	x0, x20
    f2b4:	bl	4810 <_Py_Dealloc@plt>
    f2b8:	b	eb98 <PyInit__datetime@@Base+0x148>
    f2bc:	mov	x0, x20
    f2c0:	bl	4810 <_Py_Dealloc@plt>
    f2c4:	b	ebf4 <PyInit__datetime@@Base+0x1a4>
    f2c8:	mov	x0, x20
    f2cc:	bl	4810 <_Py_Dealloc@plt>
    f2d0:	b	ec44 <PyInit__datetime@@Base+0x1f4>
    f2d4:	mov	x0, x20
    f2d8:	bl	4810 <_Py_Dealloc@plt>
    f2dc:	b	ec90 <PyInit__datetime@@Base+0x240>
    f2e0:	mov	x0, x20
    f2e4:	bl	4810 <_Py_Dealloc@plt>
    f2e8:	b	ece0 <PyInit__datetime@@Base+0x290>
    f2ec:	mov	x0, x20
    f2f0:	bl	4810 <_Py_Dealloc@plt>
    f2f4:	b	ed40 <PyInit__datetime@@Base+0x2f0>
    f2f8:	mov	x0, x20
    f2fc:	bl	4810 <_Py_Dealloc@plt>
    f300:	b	eda0 <PyInit__datetime@@Base+0x350>
    f304:	mov	x0, x20
    f308:	bl	4810 <_Py_Dealloc@plt>
    f30c:	b	edf0 <PyInit__datetime@@Base+0x3a0>
    f310:	mov	x0, x20
    f314:	bl	4810 <_Py_Dealloc@plt>
    f318:	b	ee5c <PyInit__datetime@@Base+0x40c>
    f31c:	mov	x0, x20
    f320:	bl	4810 <_Py_Dealloc@plt>
    f324:	b	eec8 <PyInit__datetime@@Base+0x478>
    f328:	mov	x0, x20
    f32c:	bl	4810 <_Py_Dealloc@plt>
    f330:	b	ef18 <PyInit__datetime@@Base+0x4c8>
    f334:	mov	x0, x20
    f338:	bl	4810 <_Py_Dealloc@plt>
    f33c:	b	ef64 <PyInit__datetime@@Base+0x514>
    f340:	mov	x0, x20
    f344:	bl	4810 <_Py_Dealloc@plt>
    f348:	b	efd4 <PyInit__datetime@@Base+0x584>
    f34c:	mov	x0, x21
    f350:	bl	4810 <_Py_Dealloc@plt>
    f354:	b	f000 <PyInit__datetime@@Base+0x5b0>
    f358:	mov	x0, x21
    f35c:	bl	4810 <_Py_Dealloc@plt>
    f360:	b	f048 <PyInit__datetime@@Base+0x5f8>
    f364:	mov	x0, x20
    f368:	bl	4810 <_Py_Dealloc@plt>
    f36c:	b	f074 <PyInit__datetime@@Base+0x624>
    f370:	mov	x19, #0x0                   	// #0
    f374:	mov	x0, x19
    f378:	ldp	x19, x20, [sp, #32]
    f37c:	ldp	x29, x30, [sp, #16]
    f380:	add	sp, sp, #0x40
    f384:	ret
    f388:	mov	x19, #0x0                   	// #0
    f38c:	b	f374 <PyInit__datetime@@Base+0x924>
    f390:	mov	x19, #0x0                   	// #0
    f394:	b	f374 <PyInit__datetime@@Base+0x924>
    f398:	mov	x19, #0x0                   	// #0
    f39c:	b	f374 <PyInit__datetime@@Base+0x924>
    f3a0:	mov	x19, #0x0                   	// #0
    f3a4:	b	f374 <PyInit__datetime@@Base+0x924>
    f3a8:	mov	x19, #0x0                   	// #0
    f3ac:	b	f374 <PyInit__datetime@@Base+0x924>
    f3b0:	mov	x19, x0
    f3b4:	ldp	x21, x22, [sp, #48]
    f3b8:	b	f374 <PyInit__datetime@@Base+0x924>
    f3bc:	mov	x19, #0x0                   	// #0
    f3c0:	ldp	x21, x22, [sp, #48]
    f3c4:	b	f374 <PyInit__datetime@@Base+0x924>
    f3c8:	mov	x19, x0
    f3cc:	ldp	x21, x22, [sp, #48]
    f3d0:	b	f374 <PyInit__datetime@@Base+0x924>
    f3d4:	mov	x19, #0x0                   	// #0
    f3d8:	ldp	x21, x22, [sp, #48]
    f3dc:	b	f374 <PyInit__datetime@@Base+0x924>
    f3e0:	mov	x19, x0
    f3e4:	ldp	x21, x22, [sp, #48]
    f3e8:	b	f374 <PyInit__datetime@@Base+0x924>
    f3ec:	mov	x19, #0x0                   	// #0
    f3f0:	ldp	x21, x22, [sp, #48]
    f3f4:	b	f374 <PyInit__datetime@@Base+0x924>
    f3f8:	mov	x19, x0
    f3fc:	ldp	x21, x22, [sp, #48]
    f400:	b	f374 <PyInit__datetime@@Base+0x924>
    f404:	mov	x19, #0x0                   	// #0
    f408:	ldp	x21, x22, [sp, #48]
    f40c:	b	f374 <PyInit__datetime@@Base+0x924>
    f410:	mov	x19, x0
    f414:	ldp	x21, x22, [sp, #48]
    f418:	b	f374 <PyInit__datetime@@Base+0x924>
    f41c:	mov	x19, #0x0                   	// #0
    f420:	ldp	x21, x22, [sp, #48]
    f424:	b	f374 <PyInit__datetime@@Base+0x924>
    f428:	mov	x19, x0
    f42c:	ldp	x21, x22, [sp, #48]
    f430:	b	f374 <PyInit__datetime@@Base+0x924>
    f434:	mov	x19, #0x0                   	// #0
    f438:	ldp	x21, x22, [sp, #48]
    f43c:	b	f374 <PyInit__datetime@@Base+0x924>
    f440:	mov	x19, x0
    f444:	ldp	x21, x22, [sp, #48]
    f448:	b	f374 <PyInit__datetime@@Base+0x924>
    f44c:	mov	x19, #0x0                   	// #0
    f450:	ldp	x21, x22, [sp, #48]
    f454:	b	f374 <PyInit__datetime@@Base+0x924>
    f458:	mov	x19, x0
    f45c:	ldp	x21, x22, [sp, #48]
    f460:	b	f374 <PyInit__datetime@@Base+0x924>
    f464:	mov	x19, #0x0                   	// #0
    f468:	ldp	x21, x22, [sp, #48]
    f46c:	b	f374 <PyInit__datetime@@Base+0x924>
    f470:	mov	x19, x0
    f474:	ldp	x21, x22, [sp, #48]
    f478:	b	f374 <PyInit__datetime@@Base+0x924>
    f47c:	mov	x19, #0x0                   	// #0
    f480:	ldp	x21, x22, [sp, #48]
    f484:	b	f374 <PyInit__datetime@@Base+0x924>
    f488:	mov	x19, x0
    f48c:	ldp	x21, x22, [sp, #48]
    f490:	b	f374 <PyInit__datetime@@Base+0x924>
    f494:	mov	x19, #0x0                   	// #0
    f498:	ldp	x21, x22, [sp, #48]
    f49c:	b	f374 <PyInit__datetime@@Base+0x924>
    f4a0:	mov	x19, x0
    f4a4:	ldp	x21, x22, [sp, #48]
    f4a8:	b	f374 <PyInit__datetime@@Base+0x924>
    f4ac:	mov	x19, #0x0                   	// #0
    f4b0:	ldp	x21, x22, [sp, #48]
    f4b4:	b	f374 <PyInit__datetime@@Base+0x924>
    f4b8:	mov	x19, x0
    f4bc:	ldp	x21, x22, [sp, #48]
    f4c0:	b	f374 <PyInit__datetime@@Base+0x924>
    f4c4:	mov	x19, #0x0                   	// #0
    f4c8:	ldp	x21, x22, [sp, #48]
    f4cc:	b	f374 <PyInit__datetime@@Base+0x924>
    f4d0:	mov	x19, x0
    f4d4:	ldp	x21, x22, [sp, #48]
    f4d8:	b	f374 <PyInit__datetime@@Base+0x924>
    f4dc:	mov	x19, x21
    f4e0:	ldp	x21, x22, [sp, #48]
    f4e4:	b	f374 <PyInit__datetime@@Base+0x924>
    f4e8:	mov	x19, #0x0                   	// #0
    f4ec:	ldp	x21, x22, [sp, #48]
    f4f0:	b	f374 <PyInit__datetime@@Base+0x924>
    f4f4:	mov	x19, x0
    f4f8:	ldp	x21, x22, [sp, #48]
    f4fc:	b	f374 <PyInit__datetime@@Base+0x924>
    f500:	mov	x19, x21
    f504:	ldp	x21, x22, [sp, #48]
    f508:	b	f374 <PyInit__datetime@@Base+0x924>
    f50c:	mov	x19, #0x0                   	// #0
    f510:	ldp	x21, x22, [sp, #48]
    f514:	b	f374 <PyInit__datetime@@Base+0x924>
    f518:	mov	x19, x0
    f51c:	ldp	x21, x22, [sp, #48]
    f520:	b	f374 <PyInit__datetime@@Base+0x924>
    f524:	mov	x19, x20
    f528:	ldp	x21, x22, [sp, #48]
    f52c:	b	f374 <PyInit__datetime@@Base+0x924>
    f530:	mov	x19, #0x0                   	// #0
    f534:	ldp	x21, x22, [sp, #48]
    f538:	b	f374 <PyInit__datetime@@Base+0x924>
    f53c:	mov	x19, x0
    f540:	ldp	x21, x22, [sp, #48]
    f544:	b	f374 <PyInit__datetime@@Base+0x924>
    f548:	mov	x19, x0
    f54c:	ldp	x21, x22, [sp, #48]
    f550:	b	f374 <PyInit__datetime@@Base+0x924>
    f554:	mov	x19, x1
    f558:	ldp	x21, x22, [sp, #48]
    f55c:	b	f374 <PyInit__datetime@@Base+0x924>
    f560:	mov	x19, x1
    f564:	ldp	x21, x22, [sp, #48]
    f568:	b	f374 <PyInit__datetime@@Base+0x924>
    f56c:	mov	x19, #0x0                   	// #0
    f570:	ldp	x21, x22, [sp, #48]
    f574:	b	f374 <PyInit__datetime@@Base+0x924>
    f578:	mov	x19, x1
    f57c:	ldp	x21, x22, [sp, #48]
    f580:	b	f374 <PyInit__datetime@@Base+0x924>

Disassembly of section .fini:

000000000000f584 <.fini>:
    f584:	stp	x29, x30, [sp, #-16]!
    f588:	mov	x29, sp
    f58c:	ldp	x29, x30, [sp], #16
    f590:	ret
