In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMCFGuard.a_clang_-O2:

CFGuard.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  10:	add	x8, x8, #0x0
  14:	add	x9, sp, #0x8
  18:	stp	x0, x8, [sp, #8]
  1c:	str	x9, [sp, #24]
  20:	adrp	x0, 0 <_ZSt15__once_callable>
  24:	ldr	x1, [x0]
  28:	add	x0, x0, #0x0
  2c:	blr	x1
  30:	mrs	x8, tpidr_el0
  34:	add	x9, sp, #0x10
  38:	str	x9, [x8, x0]
  3c:	adrp	x0, 0 <_ZSt11__once_call>
  40:	ldr	x1, [x0]
  44:	add	x0, x0, #0x0
  48:	blr	x1
  4c:	adrp	x10, 0 <__pthread_key_create>
  50:	ldr	x10, [x10]
  54:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  58:	add	x9, x9, #0x0
  5c:	str	x9, [x8, x0]
  60:	cbz	x10, 88 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE+0x88>
  64:	adrp	x1, 0 <__once_proxy>
  68:	ldr	x1, [x1]
  6c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  70:	add	x0, x0, #0x0
  74:	bl	0 <pthread_once>
  78:	cbnz	w0, 8c <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE+0x8c>
  7c:	ldp	x29, x30, [sp, #32]
  80:	add	sp, sp, #0x30
  84:	ret
  88:	mov	w0, #0xffffffff            	// #-1
  8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL25initializeCFGuardPassOnceRN4llvm12PassRegistryE>:
  90:	stp	x29, x30, [sp, #-32]!
  94:	stp	x20, x19, [sp, #16]
  98:	mov	x29, sp
  9c:	mov	x19, x0
  a0:	mov	w0, #0x50                  	// #80
  a4:	bl	0 <_Znwm>
  a8:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  ac:	add	x8, x8, #0x0
  b0:	mov	w9, #0x7                   	// #7
  b4:	adrp	x10, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  b8:	stp	x8, x9, [x0]
  bc:	stp	x8, x9, [x0, #16]
  c0:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
  c4:	mov	x20, x0
  c8:	add	x10, x10, #0x0
  cc:	add	x8, x8, #0x0
  d0:	strh	wzr, [x0, #40]
  d4:	strb	wzr, [x0, #42]
  d8:	stp	xzr, xzr, [x0, #48]
  dc:	str	x10, [x0, #32]
  e0:	stp	xzr, x8, [x0, #64]
  e4:	mov	w2, #0x1                   	// #1
  e8:	mov	x0, x19
  ec:	mov	x1, x20
  f0:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
  f4:	mov	x0, x20
  f8:	ldp	x20, x19, [sp, #16]
  fc:	ldp	x29, x30, [sp], #32
 100:	ret

0000000000000104 <_ZN4llvm22createCFGuardCheckPassEv>:
 104:	sub	sp, sp, #0x30
 108:	stp	x29, x30, [sp, #16]
 10c:	str	x19, [sp, #32]
 110:	add	x29, sp, #0x10
 114:	mov	w0, #0x40                  	// #64
 118:	bl	0 <_Znwm>
 11c:	adrp	x10, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 120:	ldr	d0, [x10]
 124:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 128:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 12c:	add	x8, x8, #0x0
 130:	add	x9, x9, #0x0
 134:	mov	x19, x0
 138:	str	wzr, [x0, #32]
 13c:	stp	xzr, xzr, [x0, #48]
 140:	stp	xzr, x8, [x0, #8]
 144:	str	x9, [x0]
 148:	str	d0, [x0, #24]
 14c:	str	xzr, [x0, #40]
 150:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 154:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 158:	add	x8, x8, #0x0
 15c:	add	x9, x29, #0x18
 160:	str	x0, [x29, #24]
 164:	stp	x8, x9, [sp]
 168:	adrp	x0, 0 <_ZSt15__once_callable>
 16c:	ldr	x1, [x0]
 170:	add	x0, x0, #0x0
 174:	blr	x1
 178:	mrs	x8, tpidr_el0
 17c:	mov	x9, sp
 180:	str	x9, [x8, x0]
 184:	adrp	x0, 0 <_ZSt11__once_call>
 188:	ldr	x1, [x0]
 18c:	add	x0, x0, #0x0
 190:	blr	x1
 194:	adrp	x10, 0 <__pthread_key_create>
 198:	ldr	x10, [x10]
 19c:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 1a0:	add	x9, x9, #0x0
 1a4:	str	x9, [x8, x0]
 1a8:	cbz	x10, 1dc <_ZN4llvm22createCFGuardCheckPassEv+0xd8>
 1ac:	adrp	x1, 0 <__once_proxy>
 1b0:	ldr	x1, [x1]
 1b4:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <pthread_once>
 1c0:	cbnz	w0, 1e0 <_ZN4llvm22createCFGuardCheckPassEv+0xdc>
 1c4:	str	wzr, [x19, #32]
 1c8:	mov	x0, x19
 1cc:	ldr	x19, [sp, #32]
 1d0:	ldp	x29, x30, [sp, #16]
 1d4:	add	sp, sp, #0x30
 1d8:	ret
 1dc:	mov	w0, #0xffffffff            	// #-1
 1e0:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e4 <_ZN4llvm25createCFGuardDispatchPassEv>:
 1e4:	sub	sp, sp, #0x30
 1e8:	stp	x29, x30, [sp, #16]
 1ec:	str	x19, [sp, #32]
 1f0:	add	x29, sp, #0x10
 1f4:	mov	w0, #0x40                  	// #64
 1f8:	bl	0 <_Znwm>
 1fc:	adrp	x10, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 200:	ldr	d0, [x10]
 204:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 208:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 20c:	add	x8, x8, #0x0
 210:	add	x9, x9, #0x0
 214:	mov	x19, x0
 218:	str	wzr, [x0, #32]
 21c:	stp	xzr, xzr, [x0, #48]
 220:	stp	xzr, x8, [x0, #8]
 224:	str	x9, [x0]
 228:	str	d0, [x0, #24]
 22c:	str	xzr, [x0, #40]
 230:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 234:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 238:	add	x8, x8, #0x0
 23c:	add	x9, x29, #0x18
 240:	str	x0, [x29, #24]
 244:	stp	x8, x9, [sp]
 248:	adrp	x0, 0 <_ZSt15__once_callable>
 24c:	ldr	x1, [x0]
 250:	add	x0, x0, #0x0
 254:	blr	x1
 258:	mrs	x8, tpidr_el0
 25c:	mov	x9, sp
 260:	str	x9, [x8, x0]
 264:	adrp	x0, 0 <_ZSt11__once_call>
 268:	ldr	x1, [x0]
 26c:	add	x0, x0, #0x0
 270:	blr	x1
 274:	adrp	x10, 0 <__pthread_key_create>
 278:	ldr	x10, [x10]
 27c:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 280:	add	x9, x9, #0x0
 284:	str	x9, [x8, x0]
 288:	cbz	x10, 2c0 <_ZN4llvm25createCFGuardDispatchPassEv+0xdc>
 28c:	adrp	x1, 0 <__once_proxy>
 290:	ldr	x1, [x1]
 294:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 298:	add	x0, x0, #0x0
 29c:	bl	0 <pthread_once>
 2a0:	cbnz	w0, 2c4 <_ZN4llvm25createCFGuardDispatchPassEv+0xe0>
 2a4:	mov	w8, #0x1                   	// #1
 2a8:	str	w8, [x19, #32]
 2ac:	mov	x0, x19
 2b0:	ldr	x19, [sp, #32]
 2b4:	ldp	x29, x30, [sp, #16]
 2b8:	add	sp, sp, #0x30
 2bc:	ret
 2c0:	mov	w0, #0xffffffff            	// #-1
 2c4:	bl	0 <_ZSt20__throw_system_errori>

00000000000002c8 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_17CFGuardEEEPNS_4PassEv>:
 2c8:	sub	sp, sp, #0x30
 2cc:	stp	x29, x30, [sp, #16]
 2d0:	str	x19, [sp, #32]
 2d4:	add	x29, sp, #0x10
 2d8:	mov	w0, #0x40                  	// #64
 2dc:	bl	0 <_Znwm>
 2e0:	adrp	x10, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 2e4:	ldr	d0, [x10]
 2e8:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 2ec:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 2f0:	add	x8, x8, #0x0
 2f4:	add	x9, x9, #0x0
 2f8:	mov	x19, x0
 2fc:	str	wzr, [x0, #32]
 300:	stp	xzr, xzr, [x0, #48]
 304:	stp	xzr, x8, [x0, #8]
 308:	str	x9, [x0]
 30c:	str	d0, [x0, #24]
 310:	str	xzr, [x0, #40]
 314:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 318:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 31c:	add	x8, x8, #0x0
 320:	add	x9, x29, #0x18
 324:	str	x0, [x29, #24]
 328:	stp	x8, x9, [sp]
 32c:	adrp	x0, 0 <_ZSt15__once_callable>
 330:	ldr	x1, [x0]
 334:	add	x0, x0, #0x0
 338:	blr	x1
 33c:	mrs	x8, tpidr_el0
 340:	mov	x9, sp
 344:	str	x9, [x8, x0]
 348:	adrp	x0, 0 <_ZSt11__once_call>
 34c:	ldr	x1, [x0]
 350:	add	x0, x0, #0x0
 354:	blr	x1
 358:	adrp	x10, 0 <__pthread_key_create>
 35c:	ldr	x10, [x10]
 360:	adrp	x9, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 364:	add	x9, x9, #0x0
 368:	str	x9, [x8, x0]
 36c:	cbz	x10, 3a0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_17CFGuardEEEPNS_4PassEv+0xd8>
 370:	adrp	x1, 0 <__once_proxy>
 374:	ldr	x1, [x1]
 378:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 37c:	add	x0, x0, #0x0
 380:	bl	0 <pthread_once>
 384:	cbnz	w0, 3a4 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_17CFGuardEEEPNS_4PassEv+0xdc>
 388:	str	wzr, [x19, #32]
 38c:	mov	x0, x19
 390:	ldr	x19, [sp, #32]
 394:	ldp	x29, x30, [sp, #16]
 398:	add	sp, sp, #0x30
 39c:	ret
 3a0:	mov	w0, #0xffffffff            	// #-1
 3a4:	bl	0 <_ZSt20__throw_system_errori>

00000000000003a8 <_ZN12_GLOBAL__N_17CFGuardD0Ev>:
 3a8:	stp	x29, x30, [sp, #-32]!
 3ac:	str	x19, [sp, #16]
 3b0:	mov	x29, sp
 3b4:	mov	x19, x0
 3b8:	bl	0 <_ZN4llvm4PassD2Ev>
 3bc:	mov	x0, x19
 3c0:	ldr	x19, [sp, #16]
 3c4:	ldp	x29, x30, [sp], #32
 3c8:	b	0 <_ZdlPv>

00000000000003cc <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE>:
 3cc:	sub	sp, sp, #0x40
 3d0:	stp	x29, x30, [sp, #16]
 3d4:	stp	x22, x21, [sp, #32]
 3d8:	stp	x20, x19, [sp, #48]
 3dc:	add	x29, sp, #0x10
 3e0:	mov	x20, x1
 3e4:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 3e8:	mov	x19, x0
 3ec:	add	x1, x1, #0x0
 3f0:	mov	w2, #0x7                   	// #7
 3f4:	mov	x0, x20
 3f8:	bl	0 <_ZNK4llvm6Module13getModuleFlagENS_9StringRefE>
 3fc:	cbz	x0, 4c8 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0xfc>
 400:	ldrb	w8, [x0]
 404:	cmp	w8, #0x1
 408:	b.ne	50c <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x140>  // b.any
 40c:	ldr	x8, [x0, #136]
 410:	cbz	x8, 52c <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x160>
 414:	ldrb	w9, [x8, #16]
 418:	cmp	w9, #0x11
 41c:	b.cs	54c <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x180>  // b.hs, b.nlast
 420:	cmp	w9, #0xd
 424:	b.ne	56c <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x1a0>  // b.any
 428:	ldr	w22, [x8, #32]
 42c:	add	x21, x8, #0x18
 430:	cmp	w22, #0x40
 434:	b.ls	450 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x84>  // b.plast
 438:	mov	x0, x21
 43c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 440:	sub	w8, w22, w0
 444:	cmp	w8, #0x41
 448:	b.cs	5ac <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x1e0>  // b.hs, b.nlast
 44c:	ldr	x21, [x21]
 450:	ldr	w8, [x21]
 454:	str	w8, [x19, #28]
 458:	cmp	w8, #0x2
 45c:	b.ne	4d4 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x108>  // b.any
 460:	ldr	x0, [x20]
 464:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
 468:	ldr	x8, [x20]
 46c:	mov	x21, x0
 470:	mov	w1, wzr
 474:	mov	x0, x8
 478:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 47c:	str	x0, [sp, #8]
 480:	add	x1, sp, #0x8
 484:	mov	w2, #0x1                   	// #1
 488:	mov	x0, x21
 48c:	mov	w3, wzr
 490:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
 494:	mov	w1, wzr
 498:	str	x0, [x19, #40]
 49c:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
 4a0:	ldr	w8, [x19, #32]
 4a4:	mov	x3, x0
 4a8:	str	x0, [x19, #48]
 4ac:	cbz	w8, 4dc <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x110>
 4b0:	cmp	w8, #0x1
 4b4:	b.ne	58c <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x1c0>  // b.any
 4b8:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 4bc:	add	x1, x1, #0x0
 4c0:	mov	w2, #0x1b                  	// #27
 4c4:	b	4e8 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x11c>
 4c8:	ldr	w8, [x19, #28]
 4cc:	cmp	w8, #0x2
 4d0:	b.eq	460 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x94>  // b.none
 4d4:	mov	w0, wzr
 4d8:	b	4f8 <_ZN12_GLOBAL__N_17CFGuard16doInitializationERN4llvm6ModuleE+0x12c>
 4dc:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 4e0:	add	x1, x1, #0x0
 4e4:	mov	w2, #0x18                  	// #24
 4e8:	mov	x0, x20
 4ec:	bl	0 <_ZN4llvm6Module17getOrInsertGlobalENS_9StringRefEPNS_4TypeE>
 4f0:	str	x0, [x19, #56]
 4f4:	mov	w0, #0x1                   	// #1
 4f8:	ldp	x20, x19, [sp, #48]
 4fc:	ldp	x22, x21, [sp, #32]
 500:	ldp	x29, x30, [sp, #16]
 504:	add	sp, sp, #0x40
 508:	ret
 50c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 510:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 514:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 518:	add	x0, x0, #0x0
 51c:	add	x1, x1, #0x0
 520:	add	x3, x3, #0x0
 524:	mov	w2, #0x134                 	// #308
 528:	bl	0 <__assert_fail>
 52c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 530:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 534:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 538:	add	x0, x0, #0x0
 53c:	add	x1, x1, #0x0
 540:	add	x3, x3, #0x0
 544:	mov	w2, #0x69                  	// #105
 548:	bl	0 <__assert_fail>
 54c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 550:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 554:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 558:	add	x0, x0, #0x0
 55c:	add	x1, x1, #0x0
 560:	add	x3, x3, #0x0
 564:	mov	w2, #0x108                 	// #264
 568:	bl	0 <__assert_fail>
 56c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 570:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 574:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 578:	add	x0, x0, #0x0
 57c:	add	x1, x1, #0x0
 580:	add	x3, x3, #0x0
 584:	mov	w2, #0x108                 	// #264
 588:	bl	0 <__assert_fail>
 58c:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 590:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 594:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 598:	add	x0, x0, #0x0
 59c:	add	x1, x1, #0x0
 5a0:	add	x3, x3, #0x0
 5a4:	mov	w2, #0xf7                  	// #247
 5a8:	bl	0 <__assert_fail>
 5ac:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 5b0:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 5b4:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 5b8:	add	x0, x0, #0x0
 5bc:	add	x1, x1, #0x0
 5c0:	add	x3, x3, #0x0
 5c4:	mov	w2, #0x657                 	// #1623
 5c8:	bl	0 <__assert_fail>

00000000000005cc <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE>:
 5cc:	sub	sp, sp, #0x190
 5d0:	str	d8, [sp, #288]
 5d4:	stp	x29, x30, [sp, #304]
 5d8:	stp	x28, x27, [sp, #320]
 5dc:	stp	x26, x25, [sp, #336]
 5e0:	stp	x24, x23, [sp, #352]
 5e4:	stp	x22, x21, [sp, #368]
 5e8:	stp	x20, x19, [sp, #384]
 5ec:	add	x29, sp, #0x120
 5f0:	ldr	w8, [x0, #28]
 5f4:	cmp	w8, #0x2
 5f8:	b.ne	760 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x194>  // b.any
 5fc:	adrp	x8, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 600:	ldr	d0, [x8]
 604:	add	x8, sp, #0x20
 608:	add	x8, x8, #0x10
 60c:	str	x8, [sp, #32]
 610:	str	d0, [sp, #40]
 614:	ldr	x19, [x1, #80]
 618:	add	x24, x1, #0x48
 61c:	cmp	x24, x19
 620:	b.eq	9d4 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x408>  // b.none
 624:	mov	x26, #0x41                  	// #65
 628:	adrp	x21, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 62c:	adrp	x27, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 630:	adrp	x28, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 634:	mov	w25, #0x1                   	// #1
 638:	movk	x26, #0x8, lsl #48
 63c:	add	x21, x21, #0x0
 640:	add	x27, x27, #0x0
 644:	add	x28, x28, #0x0
 648:	stp	x8, x0, [sp]
 64c:	b	65c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x90>
 650:	ldr	x19, [x19, #8]
 654:	cmp	x24, x19
 658:	b.eq	768 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x19c>  // b.none
 65c:	ldrb	w8, [x19]
 660:	tbnz	w8, #2, c38 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x66c>
 664:	sub	x8, x19, #0x18
 668:	cmp	x19, #0x0
 66c:	csel	x8, xzr, x8, eq  // eq = none
 670:	ldr	x20, [x8, #48]
 674:	add	x22, x8, #0x28
 678:	b	680 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb4>
 67c:	ldr	x20, [x20, #8]
 680:	cmp	x22, x20
 684:	b.eq	650 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x84>  // b.none
 688:	ldrb	w8, [x20]
 68c:	tbnz	w8, #2, bf8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x62c>
 690:	sub	x8, x20, #0x18
 694:	cmp	x20, #0x0
 698:	csel	x23, xzr, x8, eq  // eq = none
 69c:	cbz	x20, c18 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x64c>
 6a0:	ldrb	w8, [x23, #16]
 6a4:	sub	w8, w8, #0x1d
 6a8:	cmp	w8, #0x33
 6ac:	b.hi	67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>  // b.pmore
 6b0:	lsl	x8, x25, x8
 6b4:	tst	x8, x26
 6b8:	b.eq	67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>  // b.none
 6bc:	mov	x0, x23
 6c0:	bl	0 <_ZNK4llvm8CallBase14isIndirectCallEv>
 6c4:	tbz	w0, #0, 67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>
 6c8:	add	x0, x23, #0x38
 6cc:	mov	w1, #0xffffffff            	// #-1
 6d0:	mov	w3, #0xa                   	// #10
 6d4:	mov	x2, x21
 6d8:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9StringRefE>
 6dc:	tbnz	w0, #0, 67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>
 6e0:	mov	w2, #0xa                   	// #10
 6e4:	mov	x0, x23
 6e8:	mov	x1, x21
 6ec:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9StringRefE>
 6f0:	tbnz	w0, #0, 67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>
 6f4:	ldp	w8, w9, [sp, #40]
 6f8:	cmp	w8, w9
 6fc:	b.cs	744 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x178>  // b.hs, b.nlast
 700:	ldr	x9, [sp, #32]
 704:	str	x23, [x9, w8, uxtw #3]
 708:	ldp	w8, w9, [sp, #40]
 70c:	cmp	w8, w9
 710:	b.cs	c58 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x68c>  // b.hs, b.nlast
 714:	add	w8, w8, #0x1
 718:	str	w8, [sp, #40]
 71c:	ldarb	w8, [x27]
 720:	tbnz	w8, #0, 730 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x164>
 724:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 728:	add	x0, x0, #0x0
 72c:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
 730:	ldxr	w8, [x28]
 734:	add	w8, w8, #0x1
 738:	stxr	w9, w8, [x28]
 73c:	cbnz	w9, 730 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x164>
 740:	b	67c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0xb0>
 744:	ldr	x1, [sp]
 748:	add	x0, sp, #0x20
 74c:	mov	w3, #0x8                   	// #8
 750:	mov	x2, xzr
 754:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 758:	ldr	w8, [sp, #40]
 75c:	b	700 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x134>
 760:	mov	w20, wzr
 764:	b	bd0 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x604>
 768:	ldr	w8, [sp, #40]
 76c:	cbz	w8, 9dc <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x410>
 770:	ldr	x20, [sp, #8]
 774:	ldr	x26, [sp, #32]
 778:	ldr	w9, [x20, #32]
 77c:	cmp	w9, #0x1
 780:	b.ne	9e4 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x418>  // b.any
 784:	adrp	x10, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 788:	ldr	d8, [x10]
 78c:	add	x8, x26, x8, lsl #3
 790:	str	x8, [sp, #24]
 794:	sub	x8, x29, #0x50
 798:	add	x9, sp, #0x70
 79c:	add	x11, x8, #0x10
 7a0:	add	x19, x8, #0x30
 7a4:	add	x21, x8, #0x8
 7a8:	add	x27, x9, #0x10
 7ac:	mov	w28, #0x101                 	// #257
 7b0:	str	x11, [sp, #16]
 7b4:	b	7c8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x1fc>
 7b8:	ldr	x8, [sp, #24]
 7bc:	add	x26, x26, #0x8
 7c0:	cmp	x26, x8
 7c4:	b.eq	bb8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x5ec>  // b.none
 7c8:	ldr	x22, [x26]
 7cc:	mov	x0, x22
 7d0:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
 7d4:	add	x8, x0, #0xf0
 7d8:	mov	w9, #0x104                 	// #260
 7dc:	sub	x0, x29, #0x50
 7e0:	add	x1, sp, #0x70
 7e4:	strh	w9, [sp, #128]
 7e8:	stp	x8, xzr, [sp, #112]
 7ec:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
 7f0:	ldur	w8, [x29, #-36]
 7f4:	cmp	w8, #0xf
 7f8:	b.ne	c78 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x6ac>  // b.any
 7fc:	ldur	x0, [x29, #-80]
 800:	ldr	x8, [sp, #16]
 804:	cmp	x0, x8
 808:	b.eq	810 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x244>  // b.none
 80c:	bl	0 <_ZdlPv>
 810:	mov	x0, x22
 814:	bl	0 <_ZNK4llvm8CallBase14isIndirectCallEv>
 818:	tbz	w0, #0, c98 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x6cc>
 81c:	mov	x0, x22
 820:	bl	0 <_ZNK4llvm5Value10getContextEv>
 824:	stp	x0, xzr, [x29, #-56]
 828:	mov	w8, #0x200                 	// #512
 82c:	sub	x0, x29, #0x50
 830:	mov	x1, x22
 834:	stur	xzr, [x29, #-80]
 838:	stur	wzr, [x29, #-40]
 83c:	sturh	w8, [x29, #-36]
 840:	sturb	wzr, [x29, #-34]
 844:	stp	xzr, xzr, [x21]
 848:	stp	xzr, xzr, [x19]
 84c:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 850:	ldur	x8, [x22, #-24]
 854:	mov	w1, wzr
 858:	str	x8, [x29, #8]
 85c:	ldr	x23, [x8]
 860:	mov	x0, x23
 864:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
 868:	ldr	x24, [x20, #56]
 86c:	ldr	x8, [x24]
 870:	cmp	x8, x0
 874:	b.eq	890 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x2c4>  // b.none
 878:	mov	x1, x0
 87c:	mov	x0, x24
 880:	mov	w2, wzr
 884:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
 888:	mov	x24, x0
 88c:	str	x0, [x20, #56]
 890:	mov	w0, #0x40                  	// #64
 894:	mov	w1, #0x1                   	// #1
 898:	stp	xzr, xzr, [x29, #-104]
 89c:	sturh	w28, [x29, #-88]
 8a0:	bl	0 <_ZN4llvm4UsernwEmj>
 8a4:	add	x3, sp, #0x70
 8a8:	mov	x1, x23
 8ac:	mov	x2, x24
 8b0:	mov	x4, xzr
 8b4:	mov	x25, x0
 8b8:	stp	xzr, xzr, [sp, #112]
 8bc:	strh	w28, [sp, #128]
 8c0:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
 8c4:	sub	x0, x29, #0x50
 8c8:	sub	x2, x29, #0x68
 8cc:	mov	x1, x25
 8d0:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 8d4:	mov	x23, x0
 8d8:	add	x1, sp, #0x70
 8dc:	mov	x0, x22
 8e0:	str	x27, [sp, #112]
 8e4:	str	d8, [sp, #120]
 8e8:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 8ec:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 8f0:	add	x0, sp, #0x70
 8f4:	add	x2, x29, #0x8
 8f8:	add	x1, x1, #0x0
 8fc:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 900:	ldrb	w8, [x22, #16]
 904:	cmp	w8, #0x1d
 908:	b.eq	92c <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x360>  // b.none
 90c:	cmp	w8, #0x50
 910:	b.ne	cb8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x6ec>  // b.any
 914:	ldr	x1, [sp, #112]
 918:	ldr	w2, [sp, #120]
 91c:	mov	x0, x22
 920:	mov	x3, x22
 924:	bl	0 <_ZN4llvm8CallInst6CreateEPS0_NS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEEPNS_11InstructionE>
 928:	b	940 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x374>
 92c:	ldr	x1, [sp, #112]
 930:	ldr	w2, [sp, #120]
 934:	mov	x0, x22
 938:	mov	x3, x22
 93c:	bl	0 <_ZN4llvm10InvokeInst6CreateEPS0_NS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEEPNS_11InstructionE>
 940:	mov	x1, x23
 944:	mov	x24, x0
 948:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 94c:	mov	x0, x22
 950:	mov	x1, x24
 954:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 958:	mov	x0, x22
 95c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 960:	ldr	w8, [sp, #120]
 964:	ldr	x22, [sp, #112]
 968:	cbz	w8, 9b0 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3e4>
 96c:	mov	w9, #0x38                  	// #56
 970:	mul	x20, x8, x9
 974:	b	980 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3b4>
 978:	subs	x20, x20, #0x38
 97c:	b.eq	9a8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3dc>  // b.none
 980:	add	x23, x22, x20
 984:	ldur	x0, [x23, #-24]
 988:	cbz	x0, 990 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3c4>
 98c:	bl	0 <_ZdlPv>
 990:	ldur	x0, [x23, #-56]
 994:	sub	x8, x23, #0x28
 998:	cmp	x8, x0
 99c:	b.eq	978 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3ac>  // b.none
 9a0:	bl	0 <_ZdlPv>
 9a4:	b	978 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3ac>
 9a8:	ldr	x22, [sp, #112]
 9ac:	ldr	x20, [sp, #8]
 9b0:	cmp	x22, x27
 9b4:	b.eq	9c0 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x3f4>  // b.none
 9b8:	mov	x0, x22
 9bc:	bl	0 <free>
 9c0:	ldur	x1, [x29, #-80]
 9c4:	cbz	x1, 7b8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x1ec>
 9c8:	sub	x0, x29, #0x50
 9cc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 9d0:	b	7b8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x1ec>
 9d4:	mov	w20, wzr
 9d8:	b	bc0 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x5f4>
 9dc:	mov	w20, wzr
 9e0:	b	bbc <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x5f0>
 9e4:	sub	x9, x29, #0x50
 9e8:	lsl	x19, x8, #3
 9ec:	mov	w28, #0x101                 	// #257
 9f0:	add	x8, x9, #0x10
 9f4:	add	x27, x9, #0x30
 9f8:	add	x25, x9, #0x8
 9fc:	str	x8, [sp, #24]
 a00:	b	a10 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x444>
 a04:	subs	x19, x19, #0x8
 a08:	add	x26, x26, #0x8
 a0c:	b.eq	bb8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x5ec>  // b.none
 a10:	ldr	x21, [x26]
 a14:	mov	x0, x21
 a18:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
 a1c:	add	x8, x0, #0xf0
 a20:	mov	w9, #0x104                 	// #260
 a24:	sub	x0, x29, #0x50
 a28:	add	x1, sp, #0x70
 a2c:	strh	w9, [sp, #128]
 a30:	stp	x8, xzr, [sp, #112]
 a34:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
 a38:	ldur	w8, [x29, #-36]
 a3c:	cmp	w8, #0xf
 a40:	b.ne	cd8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x70c>  // b.any
 a44:	ldur	x0, [x29, #-80]
 a48:	ldr	x8, [sp, #24]
 a4c:	cmp	x0, x8
 a50:	b.eq	a58 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x48c>  // b.none
 a54:	bl	0 <_ZdlPv>
 a58:	mov	x0, x21
 a5c:	bl	0 <_ZNK4llvm8CallBase14isIndirectCallEv>
 a60:	tbz	w0, #0, cf8 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x72c>
 a64:	mov	x0, x21
 a68:	bl	0 <_ZNK4llvm5Value10getContextEv>
 a6c:	stp	x0, xzr, [x29, #-56]
 a70:	mov	w8, #0x200                 	// #512
 a74:	sub	x0, x29, #0x50
 a78:	mov	x1, x21
 a7c:	stur	xzr, [x29, #-80]
 a80:	stur	wzr, [x29, #-40]
 a84:	sturh	w8, [x29, #-36]
 a88:	sturb	wzr, [x29, #-34]
 a8c:	stp	xzr, xzr, [x25]
 a90:	stp	xzr, xzr, [x27]
 a94:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 a98:	ldur	x21, [x21, #-24]
 a9c:	ldp	x22, x23, [x20, #48]
 aa0:	mov	w0, #0x40                  	// #64
 aa4:	mov	w1, #0x1                   	// #1
 aa8:	stp	xzr, xzr, [x29, #-104]
 aac:	sturh	w28, [x29, #-88]
 ab0:	bl	0 <_ZN4llvm4UsernwEmj>
 ab4:	add	x3, sp, #0x70
 ab8:	mov	x1, x22
 abc:	mov	x2, x23
 ac0:	mov	x4, xzr
 ac4:	mov	x24, x0
 ac8:	stp	xzr, xzr, [sp, #112]
 acc:	strh	w28, [sp, #128]
 ad0:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
 ad4:	sub	x0, x29, #0x50
 ad8:	sub	x2, x29, #0x68
 adc:	mov	x1, x24
 ae0:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 ae4:	ldur	x8, [x29, #-56]
 ae8:	ldr	x22, [x20, #40]
 aec:	mov	x23, x0
 af0:	mov	w1, wzr
 af4:	mov	x0, x8
 af8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 afc:	stp	xzr, xzr, [x29, #-104]
 b00:	sturh	w28, [x29, #-88]
 b04:	ldr	x8, [x21]
 b08:	cmp	x8, x0
 b0c:	b.eq	b64 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x598>  // b.none
 b10:	ldrb	w8, [x21, #16]
 b14:	mov	x2, x0
 b18:	cmp	w8, #0x10
 b1c:	b.ls	b50 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x584>  // b.plast
 b20:	add	x3, sp, #0x70
 b24:	mov	w0, #0x31                  	// #49
 b28:	mov	x1, x21
 b2c:	mov	x4, xzr
 b30:	stp	xzr, xzr, [sp, #112]
 b34:	strh	w28, [sp, #128]
 b38:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
 b3c:	mov	x1, x0
 b40:	sub	x0, x29, #0x50
 b44:	sub	x2, x29, #0x68
 b48:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 b4c:	b	b60 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x594>
 b50:	mov	w0, #0x31                  	// #49
 b54:	mov	x1, x21
 b58:	mov	w3, wzr
 b5c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
 b60:	mov	x21, x0
 b64:	sub	x0, x29, #0x50
 b68:	add	x3, x29, #0x8
 b6c:	add	x5, sp, #0x70
 b70:	mov	w4, #0x1                   	// #1
 b74:	mov	x1, x22
 b78:	mov	x2, x23
 b7c:	mov	x6, xzr
 b80:	str	x21, [x29, #8]
 b84:	stp	xzr, xzr, [sp, #112]
 b88:	strh	w28, [sp, #128]
 b8c:	bl	0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 b90:	ldrh	w8, [x0, #18]
 b94:	mov	w9, #0x4c                  	// #76
 b98:	and	w8, w8, #0xffff800f
 b9c:	orr	w8, w8, w9
 ba0:	strh	w8, [x0, #18]
 ba4:	ldur	x1, [x29, #-80]
 ba8:	cbz	x1, a04 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x438>
 bac:	sub	x0, x29, #0x50
 bb0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 bb4:	b	a04 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x438>
 bb8:	mov	w20, #0x1                   	// #1
 bbc:	ldr	x8, [sp]
 bc0:	ldr	x0, [sp, #32]
 bc4:	cmp	x0, x8
 bc8:	b.eq	bd0 <_ZN12_GLOBAL__N_17CFGuard13runOnFunctionERN4llvm8FunctionE+0x604>  // b.none
 bcc:	bl	0 <free>
 bd0:	mov	w0, w20
 bd4:	ldp	x20, x19, [sp, #384]
 bd8:	ldp	x22, x21, [sp, #368]
 bdc:	ldp	x24, x23, [sp, #352]
 be0:	ldp	x26, x25, [sp, #336]
 be4:	ldp	x28, x27, [sp, #320]
 be8:	ldp	x29, x30, [sp, #304]
 bec:	ldr	d8, [sp, #288]
 bf0:	add	sp, sp, #0x190
 bf4:	ret
 bf8:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 bfc:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c00:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c04:	add	x0, x0, #0x0
 c08:	add	x1, x1, #0x0
 c0c:	add	x3, x3, #0x0
 c10:	mov	w2, #0x8b                  	// #139
 c14:	bl	0 <__assert_fail>
 c18:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c1c:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c20:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c24:	add	x0, x0, #0x0
 c28:	add	x1, x1, #0x0
 c2c:	add	x3, x3, #0x0
 c30:	mov	w2, #0x69                  	// #105
 c34:	bl	0 <__assert_fail>
 c38:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c3c:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c40:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c44:	add	x0, x0, #0x0
 c48:	add	x1, x1, #0x0
 c4c:	add	x3, x3, #0x0
 c50:	mov	w2, #0x8b                  	// #139
 c54:	bl	0 <__assert_fail>
 c58:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c5c:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c60:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c64:	add	x0, x0, #0x0
 c68:	add	x1, x1, #0x0
 c6c:	add	x3, x3, #0x0
 c70:	mov	w2, #0x43                  	// #67
 c74:	bl	0 <__assert_fail>
 c78:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c7c:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c80:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c84:	add	x0, x0, #0x0
 c88:	add	x1, x1, #0x0
 c8c:	add	x3, x3, #0x0
 c90:	mov	w2, #0xb9                  	// #185
 c94:	bl	0 <__assert_fail>
 c98:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 c9c:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 ca0:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 ca4:	add	x0, x0, #0x0
 ca8:	add	x1, x1, #0x0
 cac:	add	x3, x3, #0x0
 cb0:	mov	w2, #0xbb                  	// #187
 cb4:	bl	0 <__assert_fail>
 cb8:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 cbc:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 cc0:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 cc4:	add	x0, x0, #0x0
 cc8:	add	x1, x1, #0x0
 ccc:	add	x3, x3, #0x0
 cd0:	mov	w2, #0xd3                  	// #211
 cd4:	bl	0 <__assert_fail>
 cd8:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 cdc:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 ce0:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 ce4:	add	x0, x0, #0x0
 ce8:	add	x1, x1, #0x0
 cec:	add	x3, x3, #0x0
 cf0:	mov	w2, #0xa1                  	// #161
 cf4:	bl	0 <__assert_fail>
 cf8:	adrp	x0, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 cfc:	adrp	x1, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 d00:	adrp	x3, 0 <_ZN4llvm21initializeCFGuardPassERNS_12PassRegistryE>
 d04:	add	x0, x0, #0x0
 d08:	add	x1, x1, #0x0
 d0c:	add	x3, x3, #0x0
 d10:	mov	w2, #0xa3                  	// #163
 d14:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	w8, [x0, #20]
  1c:	mov	x19, x0
  20:	mov	x20, x1
  24:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x34>
  28:	mov	x21, xzr
  2c:	mov	x8, xzr
  30:	b	5c <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x5c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x21, x0
  44:	tbnz	w8, #31, 50 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x50>
  48:	mov	x8, xzr
  4c:	b	5c <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x5c>
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  58:	add	x8, x0, x1
  5c:	sub	x8, x8, x21
  60:	lsr	x22, x8, #4
  64:	cbz	w22, d4 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0xd4>
  68:	mov	w21, wzr
  6c:	mov	w23, #0x38                  	// #56
  70:	add	x8, sp, #0x8
  74:	mov	x0, x19
  78:	mov	w1, w21
  7c:	bl	0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  80:	ldp	w8, w9, [x20, #8]
  84:	cmp	w8, w9
  88:	b.cs	c0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0xc0>  // b.hs, b.nlast
  8c:	ldr	x9, [x20]
  90:	add	x1, sp, #0x8
  94:	umaddl	x0, w8, w23, x9
  98:	bl	0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  9c:	ldp	w8, w9, [x20, #8]
  a0:	cmp	w8, w9
  a4:	b.cs	ec <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0xec>  // b.hs, b.nlast
  a8:	add	w21, w21, #0x1
  ac:	add	w8, w8, #0x1
  b0:	cmp	w22, w21
  b4:	str	w8, [x20, #8]
  b8:	b.ne	70 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x70>  // b.any
  bc:	b	d4 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0xd4>
  c0:	mov	x0, x20
  c4:	mov	x1, xzr
  c8:	bl	0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  cc:	ldr	w8, [x20, #8]
  d0:	b	8c <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x8c>
  d4:	ldp	x20, x19, [sp, #80]
  d8:	ldp	x22, x21, [sp, #64]
  dc:	ldr	x23, [sp, #48]
  e0:	ldp	x29, x30, [sp, #32]
  e4:	add	sp, sp, #0x60
  e8:	ret
  ec:	adrp	x0, 0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  f0:	adrp	x1, 0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  f4:	adrp	x3, 0 <_ZNK4llvm8CallBase23getOperandBundlesAsDefsERNS_15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	ldp	w8, w9, [x0, #8]
  20:	mov	x20, x2
  24:	mov	x19, x0
  28:	mov	x21, x1
  2c:	cmp	w8, w9
  30:	b.cs	17c <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0x17c>  // b.hs, b.nlast
  34:	ldr	x24, [x19]
  38:	add	x10, sp, #0x8
  3c:	mov	w9, #0x38                  	// #56
  40:	add	x23, x10, #0x10
  44:	mov	x0, x21
  48:	mov	w25, w8
  4c:	umaddl	x26, w8, w9, x24
  50:	str	x23, [sp, #8]
  54:	bl	0 <strlen>
  58:	mov	x22, x0
  5c:	cmp	x0, #0x10
  60:	stur	x0, [x29, #-8]
  64:	mov	x0, x23
  68:	b.cc	88 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0x88>  // b.lo, b.ul, b.last
  6c:	add	x0, sp, #0x8
  70:	sub	x1, x29, #0x8
  74:	mov	x2, xzr
  78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  7c:	ldur	x8, [x29, #-8]
  80:	str	x0, [sp, #8]
  84:	str	x8, [sp, #24]
  88:	cbz	x22, ac <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0xac>
  8c:	cmp	x22, #0x1
  90:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0xa0>  // b.any
  94:	ldrb	w8, [x21]
  98:	strb	w8, [x0]
  9c:	b	ac <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0xac>
  a0:	mov	x1, x21
  a4:	mov	x2, x22
  a8:	bl	0 <memcpy>
  ac:	ldur	x9, [x29, #-8]
  b0:	ldr	x10, [sp, #8]
  b4:	mov	w8, #0x38                  	// #56
  b8:	madd	x8, x25, x8, x24
  bc:	add	x8, x8, #0x10
  c0:	str	x9, [sp, #16]
  c4:	strb	wzr, [x10, x9]
  c8:	str	x8, [x26]
  cc:	ldr	x9, [sp, #8]
  d0:	cmp	x9, x23
  d4:	b.eq	f0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0xf0>  // b.none
  d8:	str	x9, [x26]
  dc:	ldr	x8, [sp, #24]
  e0:	mov	w9, #0x38                  	// #56
  e4:	madd	x9, x25, x9, x24
  e8:	str	x8, [x9, #16]
  ec:	b	f8 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0xf8>
  f0:	ldr	q0, [x23]
  f4:	str	q0, [x8]
  f8:	ldr	x8, [sp, #16]
  fc:	mov	w9, #0x38                  	// #56
 100:	madd	x21, x25, x9, x24
 104:	mov	w0, #0x8                   	// #8
 108:	str	x8, [x21, #8]
 10c:	stp	x23, xzr, [sp, #8]
 110:	strb	wzr, [sp, #24]
 114:	stp	xzr, xzr, [x21, #40]
 118:	bl	0 <_Znwm>
 11c:	str	x0, [x21, #32]
 120:	ldr	x8, [x20]
 124:	str	x8, [x0], #8
 128:	stp	x0, x0, [x21, #40]
 12c:	ldr	x0, [sp, #8]
 130:	cmp	x0, x23
 134:	b.eq	13c <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0x13c>  // b.none
 138:	bl	0 <_ZdlPv>
 13c:	ldp	w8, w9, [x19, #8]
 140:	cmp	w8, w9
 144:	b.cs	190 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0x190>  // b.hs, b.nlast
 148:	ldr	x9, [x19]
 14c:	add	x8, x8, #0x1
 150:	str	w8, [x19, #8]
 154:	ldp	x20, x19, [sp, #112]
 158:	ldp	x22, x21, [sp, #96]
 15c:	ldp	x24, x23, [sp, #80]
 160:	ldp	x26, x25, [sp, #64]
 164:	ldp	x29, x30, [sp, #48]
 168:	mov	w10, #0x38                  	// #56
 16c:	madd	x9, x8, x10, x9
 170:	sub	x0, x9, #0x38
 174:	add	sp, sp, #0x80
 178:	ret
 17c:	mov	x0, x19
 180:	mov	x1, xzr
 184:	bl	0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_>
 188:	ldr	w8, [x19, #8]
 18c:	b	34 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_+0x34>
 190:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_>
 194:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_>
 198:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_17OperandBundleDefTIPNS_5ValueEEEE12emplace_backIJRA14_KcRS3_EEERS4_DpOT_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x43                  	// #67
 1ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #-24]!
   c:	cbz	x8, 34 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x34>
  10:	ldp	x9, x8, [x0, #8]
  14:	and	x8, x8, #0xfffffffffffffffc
  18:	str	x9, [x8]
  1c:	ldr	x9, [x0, #8]
  20:	cbz	x9, 34 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x34>
  24:	ldr	x10, [x9, #16]
  28:	and	x10, x10, #0x3
  2c:	orr	x8, x10, x8
  30:	str	x8, [x9, #16]
  34:	str	x1, [x0]
  38:	cbz	x1, 80 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x80>
  3c:	ldr	x8, [x1, #8]!
  40:	mov	x9, x0
  44:	str	x8, [x9, #8]!
  48:	cbz	x8, 64 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x64>
  4c:	tst	x9, #0x3
  50:	b.ne	88 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x88>  // b.any
  54:	ldr	x10, [x8, #16]
  58:	and	x10, x10, #0x3
  5c:	orr	x9, x10, x9
  60:	str	x9, [x8, #16]
  64:	tst	x1, #0x3
  68:	b.ne	88 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE+0x88>  // b.any
  6c:	ldr	x8, [x0, #16]
  70:	and	x8, x8, #0x3
  74:	orr	x8, x8, x1
  78:	str	x8, [x0, #16]
  7c:	str	x0, [x1]
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE>
  8c:	adrp	x1, 0 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE>
  90:	adrp	x3, 0 <_ZN4llvm8CallBase16setCalledOperandEPNS_5ValueE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xb3                  	// #179
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	98 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x98>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	7c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x7c>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 80 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x80>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	b	8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  7c:	ldr	x1, [x29, #24]
  80:	cbz	x1, 8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  84:	add	x0, x29, #0x18
  88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  9c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a0:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x8e                  	// #142
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #20]
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	tbnz	w9, #31, 30 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x30>
  24:	mov	x22, xzr
  28:	mov	x8, xzr
  2c:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  38:	ldr	w8, [x19, #20]
  3c:	mov	x22, x0
  40:	tbnz	w8, #31, 4c <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x4c>
  44:	mov	x8, xzr
  48:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  54:	add	x8, x0, x1
  58:	sub	x8, x8, x22
  5c:	lsr	x8, x8, #4
  60:	cmp	w8, w21
  64:	b.ls	b0 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0xb0>  // b.plast
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  70:	ldr	w9, [x19, #20]
  74:	add	x8, x0, w21, uxtw #4
  78:	ldp	w11, w12, [x8, #8]
  7c:	mov	w10, #0x18                  	// #24
  80:	ldr	x8, [x8]
  84:	and	x9, x9, #0xfffffff
  88:	mneg	x9, x9, x10
  8c:	add	x9, x19, x9
  90:	sub	x12, x12, x11
  94:	madd	x9, x11, x10, x9
  98:	stp	x9, x12, [x20]
  9c:	str	x8, [x20, #16]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b4:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b8:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x716                 	// #1814
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	mov	w8, #0x38                  	// #56
  70:	mul	x0, x22, x8
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w9, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w9, 198 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x198>
  c8:	mov	w10, #0x38                  	// #56
  cc:	mov	x8, xzr
  d0:	madd	x9, x9, x10, x21
  d4:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x120>
  d8:	str	x13, [x11]
  dc:	ldr	x12, [x12, #16]
  e0:	str	x12, [x11, #16]
  e4:	ldur	x11, [x10, #-8]
  e8:	add	x12, x20, x8
  ec:	add	x13, x10, #0x28
  f0:	cmp	x13, x9
  f4:	str	x11, [x12, #8]
  f8:	ldr	q0, [x10, #16]
  fc:	stp	x10, xzr, [x10, #-16]
 100:	strb	wzr, [x10]
 104:	add	x8, x8, #0x38
 108:	str	q0, [x12, #32]
 10c:	ldr	x11, [x10, #32]
 110:	str	x11, [x12, #48]
 114:	stp	xzr, xzr, [x10, #16]
 118:	str	xzr, [x10, #32]
 11c:	b.eq	14c <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x14c>  // b.none
 120:	add	x11, x20, x8
 124:	add	x10, x11, #0x10
 128:	add	x12, x21, x8
 12c:	str	x10, [x11]
 130:	mov	x10, x12
 134:	ldr	x13, [x10], #16
 138:	cmp	x13, x10
 13c:	b.ne	d8 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0xd8>  // b.any
 140:	ldr	q0, [x13]
 144:	str	q0, [x11, #16]
 148:	b	e4 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0xe4>
 14c:	ldr	w8, [x19, #8]
 150:	ldr	x21, [x19]
 154:	cbz	w8, 198 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x198>
 158:	mov	w9, #0x38                  	// #56
 15c:	mul	x23, x8, x9
 160:	b	16c <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x16c>
 164:	subs	x23, x23, #0x38
 168:	b.eq	194 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x194>  // b.none
 16c:	add	x24, x21, x23
 170:	ldur	x0, [x24, #-24]
 174:	cbz	x0, 17c <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x17c>
 178:	bl	0 <_ZdlPv>
 17c:	ldur	x0, [x24, #-56]
 180:	sub	x8, x24, #0x28
 184:	cmp	x8, x0
 188:	b.eq	164 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x164>  // b.none
 18c:	bl	0 <_ZdlPv>
 190:	b	164 <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x164>
 194:	ldr	x21, [x19]
 198:	add	x8, x19, #0x10
 19c:	cmp	x21, x8
 1a0:	b.eq	1ac <_ZN4llvm23SmallVectorTemplateBaseINS_17OperandBundleDefTIPNS_5ValueEEELb0EE4growEm+0x1ac>  // b.none
 1a4:	mov	x0, x21
 1a8:	bl	0 <free>
 1ac:	str	x20, [x19]
 1b0:	str	w22, [x19, #12]
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldp	x24, x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret

Disassembly of section .text._ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE:

0000000000000000 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x25, x0
  20:	mov	x21, x0
  24:	strb	wzr, [x25, #16]!
  28:	stp	x25, xzr, [x0]
  2c:	str	xzr, [x21, #32]!
  30:	stp	xzr, xzr, [x0, #40]
  34:	ldr	x23, [x1, #16]
  38:	mov	x8, sp
  3c:	add	x22, x8, #0x10
  40:	mov	x19, x1
  44:	ldr	x24, [x23], #16
  48:	mov	x20, x0
  4c:	mov	x0, x22
  50:	str	x22, [sp]
  54:	cmp	x24, #0x10
  58:	str	x24, [x29, #24]
  5c:	b.cc	7c <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x7c>  // b.lo, b.ul, b.last
  60:	mov	x0, sp
  64:	add	x1, x29, #0x18
  68:	mov	x2, xzr
  6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  70:	ldr	x8, [x29, #24]
  74:	str	x0, [sp]
  78:	str	x8, [sp, #16]
  7c:	cbz	x24, a0 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0xa0>
  80:	cmp	x24, #0x1
  84:	b.ne	94 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x94>  // b.any
  88:	ldrb	w8, [x23]
  8c:	strb	w8, [x0]
  90:	b	a0 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0xa0>
  94:	mov	x1, x23
  98:	mov	x2, x24
  9c:	bl	0 <memcpy>
  a0:	ldr	x8, [x29, #24]
  a4:	ldr	x9, [sp]
  a8:	str	x8, [sp, #8]
  ac:	strb	wzr, [x9, x8]
  b0:	ldr	x9, [sp]
  b4:	cmp	x9, x22
  b8:	b.eq	d0 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0xd0>  // b.none
  bc:	ldr	x8, [x20]
  c0:	cmp	x8, x25
  c4:	b.eq	f0 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0xf0>  // b.none
  c8:	ldr	x10, [x20, #16]
  cc:	b	f4 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0xf4>
  d0:	ldr	x2, [sp, #8]
  d4:	cbz	x2, 124 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x124>
  d8:	ldr	x0, [x20]
  dc:	cmp	x2, #0x1
  e0:	b.ne	11c <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x11c>  // b.any
  e4:	ldrb	w8, [sp, #16]
  e8:	strb	w8, [x0]
  ec:	b	124 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x124>
  f0:	mov	x8, xzr
  f4:	str	x9, [x20]
  f8:	ldur	q0, [sp, #8]
  fc:	stur	q0, [x20, #8]
 100:	cbz	x8, 110 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x110>
 104:	str	x8, [sp]
 108:	str	x10, [sp, #16]
 10c:	b	138 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x138>
 110:	mov	x8, x22
 114:	str	x22, [sp]
 118:	b	138 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x138>
 11c:	mov	x1, x22
 120:	bl	0 <memcpy>
 124:	ldr	x8, [sp, #8]
 128:	ldr	x9, [x20]
 12c:	str	x8, [x20, #8]
 130:	strb	wzr, [x9, x8]
 134:	ldr	x8, [sp]
 138:	str	xzr, [sp, #8]
 13c:	strb	wzr, [x8]
 140:	ldr	x0, [sp]
 144:	cmp	x0, x22
 148:	b.eq	150 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE+0x150>  // b.none
 14c:	bl	0 <_ZdlPv>
 150:	ldp	x2, x8, [x19]
 154:	ldr	x1, [x20, #40]
 158:	mov	w9, #0x18                  	// #24
 15c:	mov	x0, x21
 160:	madd	x3, x8, x9, x2
 164:	bl	0 <_ZN4llvm17OperandBundleDefTIPNS_5ValueEEC2ERKNS_16OperandBundleUseE>
 168:	ldp	x20, x19, [sp, #96]
 16c:	ldp	x22, x21, [sp, #80]
 170:	ldp	x24, x23, [sp, #64]
 174:	ldr	x25, [sp, #48]
 178:	ldp	x29, x30, [sp, #32]
 17c:	add	sp, sp, #0x70
 180:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	49c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x49c>  // b.none
  24:	ldp	x24, x8, [x0, #8]
  28:	sub	x26, x3, x2
  2c:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  30:	asr	x9, x26, #3
  34:	movk	x10, #0xaaab
  38:	mul	x27, x9, x10
  3c:	sub	x8, x8, x24
  40:	mov	x22, x3
  44:	mov	x19, x2
  48:	mov	x20, x1
  4c:	mov	x21, x0
  50:	cmp	x27, x8, asr #3
  54:	b.ls	b4 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0xb4>  // b.plast
  58:	ldr	x1, [x21]
  5c:	sub	x8, x24, x1
  60:	asr	x9, x8, #3
  64:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  68:	sub	x10, x8, x9
  6c:	cmp	x10, x27
  70:	b.cc	4b8 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x4b8>  // b.lo, b.ul, b.last
  74:	cmp	x9, x27
  78:	csel	x10, x27, x9, cc  // cc = lo, ul, last
  7c:	adds	x9, x10, x9
  80:	lsr	x11, x9, #60
  84:	cset	w10, cs  // cs = hs, nlast
  88:	cmp	x11, #0x0
  8c:	cset	w11, ne  // ne = any
  90:	orr	w10, w10, w11
  94:	cmp	w10, #0x0
  98:	csel	x25, x8, x9, ne  // ne = any
  9c:	cbz	x25, 114 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x114>
  a0:	lsl	x0, x25, #3
  a4:	bl	0 <_Znwm>
  a8:	ldr	x1, [x21]
  ac:	mov	x23, x0
  b0:	b	118 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x118>
  b4:	sub	x23, x24, x20
  b8:	asr	x25, x23, #3
  bc:	subs	x8, x27, x25
  c0:	b.cs	e4 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0xe4>  // b.hs, b.nlast
  c4:	sub	x22, x24, x27, lsl #3
  c8:	cbz	x26, 218 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x218>
  cc:	lsl	x2, x27, #3
  d0:	mov	x0, x24
  d4:	mov	x1, x22
  d8:	bl	0 <memmove>
  dc:	ldr	x8, [x21, #8]
  e0:	b	21c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x21c>
  e4:	mov	w9, #0x18                  	// #24
  e8:	madd	x9, x25, x9, x19
  ec:	cmp	x9, x22
  f0:	b.eq	3b0 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x3b0>  // b.none
  f4:	mvn	x12, x25
  f8:	mov	w10, #0x18                  	// #24
  fc:	madd	x10, x12, x10, x22
 100:	sub	x10, x10, x19
 104:	cmp	x10, #0x60
 108:	b.cs	2fc <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x2fc>  // b.hs, b.nlast
 10c:	mov	x10, x9
 110:	b	39c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x39c>
 114:	mov	x23, xzr
 118:	subs	x2, x20, x1
 11c:	asr	x27, x2, #3
 120:	b.eq	12c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x12c>  // b.none
 124:	mov	x0, x23
 128:	bl	0 <memmove>
 12c:	sub	x8, x26, #0x18
 130:	cmp	x8, #0x60
 134:	add	x24, x23, x27, lsl #3
 138:	b.cc	1cc <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x1cc>  // b.lo, b.ul, b.last
 13c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 140:	movk	x9, #0xaaab
 144:	umulh	x8, x8, x9
 148:	lsr	x8, x8, #4
 14c:	mov	w9, #0x18                  	// #24
 150:	madd	x9, x8, x9, x19
 154:	add	x9, x9, #0x8
 158:	cmp	x24, x9
 15c:	b.cs	174 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x174>  // b.hs, b.nlast
 160:	add	x9, x27, x8
 164:	add	x9, x23, x9, lsl #3
 168:	add	x9, x9, #0x8
 16c:	cmp	x9, x19
 170:	b.hi	1cc <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x1cc>  // b.pmore
 174:	add	x10, x8, #0x1
 178:	mov	w11, #0x4                   	// #4
 17c:	and	x13, x10, #0x3
 180:	tst	x10, #0x3
 184:	csel	x11, x11, x13, eq  // eq = none
 188:	mov	w12, #0x18                  	// #24
 18c:	add	x9, x23, x27, lsl #3
 190:	sub	x10, x10, x11
 194:	sub	x11, x8, x11
 198:	add	x9, x9, #0x10
 19c:	add	x24, x24, x10, lsl #3
 1a0:	madd	x8, x10, x12, x19
 1a4:	add	x10, x11, #0x1
 1a8:	add	x11, x19, #0x60
 1ac:	ld3	{v0.2d-v2.2d}, [x19], #48
 1b0:	subs	x10, x10, #0x4
 1b4:	ld3	{v3.2d-v5.2d}, [x19]
 1b8:	mov	x19, x11
 1bc:	stp	q0, q3, [x9, #-16]
 1c0:	add	x9, x9, #0x20
 1c4:	b.ne	1a8 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x1a8>  // b.any
 1c8:	mov	x19, x8
 1cc:	ldr	x8, [x19], #24
 1d0:	cmp	x22, x19
 1d4:	str	x8, [x24], #8
 1d8:	b.ne	1cc <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x1cc>  // b.any
 1dc:	ldr	x8, [x21, #8]
 1e0:	subs	x2, x8, x20
 1e4:	asr	x19, x2, #3
 1e8:	b.eq	1f8 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x1f8>  // b.none
 1ec:	mov	x0, x24
 1f0:	mov	x1, x20
 1f4:	bl	0 <memmove>
 1f8:	ldr	x0, [x21]
 1fc:	add	x19, x24, x19, lsl #3
 200:	cbz	x0, 208 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x208>
 204:	bl	0 <_ZdlPv>
 208:	add	x8, x23, x25, lsl #3
 20c:	stp	x23, x19, [x21]
 210:	str	x8, [x21, #16]
 214:	b	49c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x49c>
 218:	mov	x8, x24
 21c:	add	x8, x8, x27, lsl #3
 220:	subs	x2, x22, x20
 224:	str	x8, [x21, #8]
 228:	b.eq	238 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x238>  // b.none
 22c:	sub	x0, x24, x2
 230:	mov	x1, x20
 234:	bl	0 <memmove>
 238:	cmp	x26, #0x1
 23c:	b.lt	49c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x49c>  // b.tstop
 240:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 244:	movk	x8, #0xaaab
 248:	umulh	x8, x26, x8
 24c:	lsr	x8, x8, #4
 250:	cmp	x26, #0x18
 254:	csinc	x9, x8, xzr, cs  // cs = hs, nlast
 258:	cmp	x9, #0x5
 25c:	b.cc	2e0 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x2e0>  // b.lo, b.ul, b.last
 260:	cmp	x26, #0x18
 264:	csinc	x10, x8, xzr, cc  // cc = lo, ul, last
 268:	sub	x10, x8, x10
 26c:	mov	w11, #0x18                  	// #24
 270:	madd	x11, x10, x11, x19
 274:	add	x11, x11, #0x8
 278:	cmp	x20, x11
 27c:	b.cs	290 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x290>  // b.hs, b.nlast
 280:	add	x10, x20, x10, lsl #3
 284:	add	x10, x10, #0x8
 288:	cmp	x10, x19
 28c:	b.hi	2e0 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x2e0>  // b.pmore
 290:	and	x10, x9, #0x3
 294:	tst	x9, #0x3
 298:	mov	w11, #0x4                   	// #4
 29c:	csel	x10, x11, x10, eq  // eq = none
 2a0:	mov	w12, #0x18                  	// #24
 2a4:	sub	x11, x9, x10
 2a8:	sub	x8, x8, x11
 2ac:	add	x9, x20, x11, lsl #3
 2b0:	madd	x10, x11, x12, x19
 2b4:	add	x12, x20, #0x10
 2b8:	add	x13, x19, #0x60
 2bc:	ld3	{v0.2d-v2.2d}, [x19], #48
 2c0:	subs	x11, x11, #0x4
 2c4:	ld3	{v3.2d-v5.2d}, [x19]
 2c8:	mov	x19, x13
 2cc:	stp	q0, q3, [x12, #-16]
 2d0:	add	x12, x12, #0x20
 2d4:	b.ne	2b8 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x2b8>  // b.any
 2d8:	mov	x20, x9
 2dc:	mov	x19, x10
 2e0:	add	x8, x8, #0x1
 2e4:	ldr	x9, [x19], #24
 2e8:	sub	x8, x8, #0x1
 2ec:	cmp	x8, #0x1
 2f0:	str	x9, [x20], #8
 2f4:	b.gt	2e4 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x2e4>
 2f8:	b	49c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x49c>
 2fc:	mov	w13, #0x18                  	// #24
 300:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 304:	madd	x12, x12, x13, x22
 308:	movk	x11, #0xaaab
 30c:	sub	x12, x12, x19
 310:	umulh	x12, x12, x11
 314:	lsr	x12, x12, #4
 318:	add	x14, x25, x12
 31c:	madd	x13, x14, x13, x19
 320:	add	x13, x13, #0x8
 324:	cmp	x24, x13
 328:	b.cs	344 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x344>  // b.hs, b.nlast
 32c:	add	x12, x24, x12, lsl #3
 330:	add	x12, x12, #0x8
 334:	cmp	x9, x12
 338:	b.cs	344 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x344>  // b.hs, b.nlast
 33c:	mov	x10, x9
 340:	b	39c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x39c>
 344:	umulh	x10, x10, x11
 348:	lsr	x10, x10, #4
 34c:	add	x14, x10, #0x1
 350:	mov	w12, #0x4                   	// #4
 354:	and	x15, x14, #0x3
 358:	tst	x14, #0x3
 35c:	csel	x12, x12, x15, eq  // eq = none
 360:	mov	w13, #0x18                  	// #24
 364:	sub	x14, x14, x12
 368:	sub	x12, x10, x12
 36c:	add	x11, x24, #0x10
 370:	add	x24, x24, x14, lsl #3
 374:	madd	x10, x14, x13, x9
 378:	add	x12, x12, #0x1
 37c:	add	x13, x9, #0x60
 380:	ld3	{v0.2d-v2.2d}, [x9], #48
 384:	subs	x12, x12, #0x4
 388:	ld3	{v3.2d-v5.2d}, [x9]
 38c:	mov	x9, x13
 390:	stp	q0, q3, [x11, #-16]
 394:	add	x11, x11, #0x20
 398:	b.ne	37c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x37c>  // b.any
 39c:	ldr	x9, [x10], #24
 3a0:	cmp	x22, x10
 3a4:	str	x9, [x24], #8
 3a8:	b.ne	39c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x39c>  // b.any
 3ac:	ldr	x24, [x21, #8]
 3b0:	add	x0, x24, x8, lsl #3
 3b4:	str	x0, [x21, #8]
 3b8:	cbz	x23, 3cc <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x3cc>
 3bc:	mov	x1, x20
 3c0:	mov	x2, x23
 3c4:	bl	0 <memmove>
 3c8:	ldr	x0, [x21, #8]
 3cc:	add	x8, x0, x25, lsl #3
 3d0:	cmp	x23, #0x1
 3d4:	str	x8, [x21, #8]
 3d8:	b.lt	49c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x49c>  // b.tstop
 3dc:	add	x8, x25, x25, lsl #1
 3e0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 3e4:	movk	x9, #0xaaab
 3e8:	lsl	x10, x8, #3
 3ec:	umulh	x8, x10, x9
 3f0:	lsr	x8, x8, #4
 3f4:	cmp	x10, #0x18
 3f8:	csinc	x9, x8, xzr, cs  // cs = hs, nlast
 3fc:	cmp	x9, #0x5
 400:	b.cc	484 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x484>  // b.lo, b.ul, b.last
 404:	cmp	x10, #0x18
 408:	csinc	x10, x8, xzr, cc  // cc = lo, ul, last
 40c:	sub	x10, x8, x10
 410:	mov	w11, #0x18                  	// #24
 414:	madd	x11, x10, x11, x19
 418:	add	x11, x11, #0x8
 41c:	cmp	x20, x11
 420:	b.cs	434 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x434>  // b.hs, b.nlast
 424:	add	x10, x20, x10, lsl #3
 428:	add	x10, x10, #0x8
 42c:	cmp	x10, x19
 430:	b.hi	484 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x484>  // b.pmore
 434:	and	x10, x9, #0x3
 438:	tst	x9, #0x3
 43c:	mov	w11, #0x4                   	// #4
 440:	csel	x10, x11, x10, eq  // eq = none
 444:	mov	w12, #0x18                  	// #24
 448:	sub	x11, x9, x10
 44c:	sub	x8, x8, x11
 450:	add	x9, x20, x11, lsl #3
 454:	madd	x10, x11, x12, x19
 458:	add	x12, x20, #0x10
 45c:	add	x13, x19, #0x60
 460:	ld3	{v0.2d-v2.2d}, [x19], #48
 464:	subs	x11, x11, #0x4
 468:	ld3	{v3.2d-v5.2d}, [x19]
 46c:	mov	x19, x13
 470:	stp	q0, q3, [x12, #-16]
 474:	add	x12, x12, #0x20
 478:	b.ne	45c <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x45c>  // b.any
 47c:	mov	x20, x9
 480:	mov	x19, x10
 484:	add	x8, x8, #0x1
 488:	ldr	x9, [x19], #24
 48c:	sub	x8, x8, #0x1
 490:	cmp	x8, #0x1
 494:	str	x9, [x20], #8
 498:	b.gt	488 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag+0x488>
 49c:	ldp	x20, x19, [sp, #80]
 4a0:	ldp	x22, x21, [sp, #64]
 4a4:	ldp	x24, x23, [sp, #48]
 4a8:	ldp	x26, x25, [sp, #32]
 4ac:	ldr	x27, [sp, #16]
 4b0:	ldp	x29, x30, [sp], #96
 4b4:	ret
 4b8:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm5ValueESaIS2_EE15_M_range_insertIPKNS0_3UseEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EET_SD_St20forward_iterator_tag>
 4bc:	add	x0, x0, #0x0
 4c0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x5
  1c:	mov	x8, x4
  20:	ldp	x4, x5, [x0, #48]
  24:	mov	x21, x6
  28:	mov	x20, x0
  2c:	mov	w9, #0x101                 	// #257
  30:	add	x6, sp, #0x8
  34:	mov	x0, x1
  38:	mov	x1, x2
  3c:	mov	x2, x3
  40:	mov	x3, x8
  44:	mov	x7, xzr
  48:	stp	xzr, xzr, [sp, #8]
  4c:	strh	w9, [sp, #24]
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  54:	ldrb	w8, [x20, #44]
  58:	mov	x22, x0
  5c:	cbz	w8, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  60:	add	x0, x22, #0x38
  64:	mov	w1, #0xffffffff            	// #-1
  68:	mov	w2, #0x39                  	// #57
  6c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  70:	tbnz	w0, #0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  74:	mov	w1, #0x39                  	// #57
  78:	mov	x0, x22
  7c:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
  80:	tbz	w0, #0, 188 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x188>
  84:	cbz	x22, 1b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1b4>
  88:	ldrb	w9, [x22, #16]
  8c:	subs	w8, w9, #0x18
  90:	b.cs	a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xa0>  // b.hs, b.nlast
  94:	cmp	w9, #0x5
  98:	b.ne	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.any
  9c:	ldrh	w8, [x22, #18]
  a0:	cmp	w8, #0x39
  a4:	b.hi	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.pmore
  a8:	mov	x10, #0x5000                	// #20480
  ac:	mov	w9, #0x1                   	// #1
  b0:	movk	x10, #0x125, lsl #16
  b4:	lsl	x9, x9, x8
  b8:	movk	x10, #0x40, lsl #48
  bc:	tst	x9, x10
  c0:	b.eq	118 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x118>  // b.none
  c4:	ldr	w23, [x20, #40]
  c8:	cbnz	x21, d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd4>
  cc:	ldr	x21, [x20, #32]
  d0:	cbz	x21, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xe4>
  d4:	mov	w1, #0x3                   	// #3
  d8:	mov	x0, x22
  dc:	mov	x2, x21
  e0:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  e4:	mov	x0, x22
  e8:	mov	x1, x23
  ec:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  f0:	mov	x0, x20
  f4:	mov	x1, x22
  f8:	mov	x2, x19
  fc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 100:	ldp	x20, x19, [sp, #80]
 104:	ldp	x22, x21, [sp, #64]
 108:	ldr	x23, [sp, #48]
 10c:	ldp	x29, x30, [sp, #32]
 110:	add	sp, sp, #0x60
 114:	ret
 118:	mov	w9, #0x1                   	// #1
 11c:	lsl	x8, x9, x8
 120:	tst	x8, #0x380000000000000
 124:	b.eq	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.none
 128:	ldr	x8, [x22]
 12c:	cbz	x8, 144 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x144>
 130:	ldrb	w9, [x8, #8]
 134:	cmp	w9, #0xe
 138:	b.ne	164 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x164>  // b.any
 13c:	ldr	x8, [x8, #24]
 140:	cbnz	x8, 130 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x130>
 144:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 148:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 14c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x69                  	// #105
 160:	bl	0 <__assert_fail>
 164:	cmp	w9, #0x10
 168:	b.ne	178 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x178>  // b.any
 16c:	ldr	x8, [x8, #16]
 170:	ldr	x8, [x8]
 174:	ldrb	w9, [x8, #8]
 178:	sub	w8, w9, #0x1
 17c:	cmp	w8, #0x5
 180:	b.ls	c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xc4>  // b.plast
 184:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>
 188:	ldr	x8, [x22, #56]
 18c:	mov	x0, x22
 190:	str	x8, [sp, #8]
 194:	bl	0 <_ZNK4llvm5Value10getContextEv>
 198:	mov	x1, x0
 19c:	add	x0, sp, #0x8
 1a0:	mov	w2, #0xffffffff            	// #-1
 1a4:	mov	w3, #0x39                  	// #57
 1a8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 1ac:	str	x0, [x22, #56]
 1b0:	b	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x88>
 1b4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1b8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1bc:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x69                  	// #105
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	w8, #0x38                  	// #56
  24:	mov	x26, x7
  28:	mov	x20, x5
  2c:	mov	x21, x4
  30:	mov	x22, x3
  34:	mov	x23, x2
  38:	mov	x24, x1
  3c:	mov	x25, x0
  40:	madd	x28, x5, x8, x4
  44:	str	x6, [sp, #8]
  48:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  4c:	mov	w8, #0x38                  	// #56
  50:	mul	x8, x20, x8
  54:	sub	x8, x8, #0x38
  58:	cmp	x8, #0x70
  5c:	b.cs	74 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x74>  // b.hs, b.nlast
  60:	mov	w9, wzr
  64:	mov	x8, x21
  68:	b	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>
  6c:	mov	w9, wzr
  70:	b	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>
  74:	mov	x11, #0x2493                	// #9363
  78:	movk	x11, #0x9249, lsl #16
  7c:	movk	x11, #0x4924, lsl #32
  80:	lsr	x8, x8, #3
  84:	movk	x11, #0x2492, lsl #48
  88:	umulh	x8, x8, x11
  8c:	add	x11, x8, #0x1
  90:	mov	w13, #0x38                  	// #56
  94:	and	x12, x11, #0xffffffffffffffe
  98:	mov	w9, wzr
  9c:	mov	w10, wzr
  a0:	madd	x8, x12, x13, x21
  a4:	add	x13, x21, #0x60
  a8:	mov	x14, x12
  ac:	ldp	x18, x15, [x13, #-8]
  b0:	ldp	x17, x16, [x13, #-64]
  b4:	subs	x14, x14, #0x2
  b8:	add	x13, x13, #0x70
  bc:	sub	x15, x15, x18
  c0:	sub	x16, x16, x17
  c4:	lsr	x16, x16, #3
  c8:	lsr	x15, x15, #3
  cc:	add	w9, w9, w16
  d0:	add	w10, w10, w15
  d4:	b.ne	ac <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xac>  // b.any
  d8:	cmp	x11, x12
  dc:	add	w9, w10, w9
  e0:	b.eq	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>  // b.none
  e4:	ldp	x11, x10, [x8, #32]
  e8:	add	x8, x8, #0x38
  ec:	cmp	x28, x8
  f0:	sub	x10, x10, x11
  f4:	lsr	x10, x10, #3
  f8:	add	w9, w9, w10
  fc:	b.ne	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>  // b.any
 100:	add	w19, w22, #0x1
 104:	add	w1, w9, w19
 108:	lsl	w2, w20, #4
 10c:	mov	w0, #0x48                  	// #72
 110:	bl	0 <_ZN4llvm4UsernwEmjj>
 114:	ldr	x8, [x25, #16]
 118:	mov	x27, x0
 11c:	ldr	x1, [x8]
 120:	cbz	x20, 144 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x144>
 124:	mov	w8, #0x38                  	// #56
 128:	mul	x8, x20, x8
 12c:	sub	x8, x8, #0x38
 130:	cmp	x8, #0x70
 134:	b.cs	150 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x150>  // b.hs, b.nlast
 138:	mov	w9, wzr
 13c:	mov	x8, x21
 140:	b	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>
 144:	mov	w10, wzr
 148:	mov	x8, x22
 14c:	b	28c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x28c>
 150:	mov	x11, #0x2493                	// #9363
 154:	movk	x11, #0x9249, lsl #16
 158:	movk	x11, #0x4924, lsl #32
 15c:	lsr	x8, x8, #3
 160:	movk	x11, #0x2492, lsl #48
 164:	umulh	x8, x8, x11
 168:	add	x11, x8, #0x1
 16c:	mov	w13, #0x38                  	// #56
 170:	and	x12, x11, #0xffffffffffffffe
 174:	mov	w9, wzr
 178:	mov	w10, wzr
 17c:	madd	x8, x12, x13, x21
 180:	add	x13, x21, #0x60
 184:	mov	x14, x12
 188:	ldp	x18, x15, [x13, #-8]
 18c:	ldp	x17, x16, [x13, #-64]
 190:	subs	x14, x14, #0x2
 194:	add	x13, x13, #0x70
 198:	sub	x15, x15, x18
 19c:	sub	x16, x16, x17
 1a0:	lsr	x16, x16, #3
 1a4:	lsr	x15, x15, #3
 1a8:	add	w9, w9, w16
 1ac:	add	w10, w10, w15
 1b0:	b.ne	188 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x188>  // b.any
 1b4:	cmp	x11, x12
 1b8:	add	w9, w10, w9
 1bc:	b.eq	1dc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1dc>  // b.none
 1c0:	ldp	x11, x10, [x8, #32]
 1c4:	add	x8, x8, #0x38
 1c8:	cmp	x28, x8
 1cc:	sub	x10, x10, x11
 1d0:	lsr	x10, x10, #3
 1d4:	add	w9, w9, w10
 1d8:	b.ne	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>  // b.any
 1dc:	mov	w8, #0x38                  	// #56
 1e0:	mul	x8, x20, x8
 1e4:	sub	x12, x8, #0x38
 1e8:	cmp	x12, #0x70
 1ec:	mov	w8, w9
 1f0:	mov	w10, wzr
 1f4:	b.cs	200 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x200>  // b.hs, b.nlast
 1f8:	mov	x9, x21
 1fc:	b	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>
 200:	lsr	x9, x12, #3
 204:	mov	x12, #0x2493                	// #9363
 208:	movk	x12, #0x9249, lsl #16
 20c:	movk	x12, #0x4924, lsl #32
 210:	movk	x12, #0x2492, lsl #48
 214:	umulh	x9, x9, x12
 218:	add	x12, x9, #0x1
 21c:	mov	w14, #0x38                  	// #56
 220:	and	x13, x12, #0xffffffffffffffe
 224:	mov	w11, wzr
 228:	madd	x9, x13, x14, x21
 22c:	add	x14, x21, #0x60
 230:	mov	x15, x13
 234:	ldp	x0, x16, [x14, #-8]
 238:	ldp	x18, x17, [x14, #-64]
 23c:	subs	x15, x15, #0x2
 240:	add	x14, x14, #0x70
 244:	sub	x16, x16, x0
 248:	sub	x17, x17, x18
 24c:	lsr	x17, x17, #3
 250:	lsr	x16, x16, #3
 254:	add	w10, w10, w17
 258:	add	w11, w11, w16
 25c:	b.ne	234 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x234>  // b.any
 260:	cmp	x12, x13
 264:	add	w10, w11, w10
 268:	b.eq	288 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x288>  // b.none
 26c:	ldp	x12, x11, [x9, #32]
 270:	add	x9, x9, #0x38
 274:	cmp	x28, x9
 278:	sub	x11, x11, x12
 27c:	lsr	x11, x11, #3
 280:	add	w10, w10, w11
 284:	b.ne	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>  // b.any
 288:	add	x8, x22, x8
 28c:	mvn	x8, x8
 290:	mov	w9, #0x18                  	// #24
 294:	madd	x3, x8, x9, x27
 298:	add	w4, w10, w19
 29c:	mov	w2, #0x38                  	// #56
 2a0:	mov	x0, x27
 2a4:	mov	x5, x26
 2a8:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 2ac:	ldr	x7, [sp, #8]
 2b0:	mov	x0, x27
 2b4:	mov	x1, x25
 2b8:	mov	x2, x24
 2bc:	mov	x3, x23
 2c0:	mov	x4, x22
 2c4:	mov	x5, x21
 2c8:	mov	x6, x20
 2cc:	str	xzr, [x27, #56]
 2d0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 2d4:	mov	x0, x27
 2d8:	ldp	x20, x19, [sp, #96]
 2dc:	ldp	x22, x21, [sp, #80]
 2e0:	ldp	x24, x23, [sp, #64]
 2e4:	ldp	x26, x25, [sp, #48]
 2e8:	ldp	x28, x27, [sp, #32]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x70
 2f4:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1
