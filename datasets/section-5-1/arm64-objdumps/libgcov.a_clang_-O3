In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcov.a_clang_-O3:

_gcov_merge_add.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_add>:
   0:	cbz	w1, 44 <__gcov_merge_add+0x44>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	sub	w20, w1, #0x1
  14:	add	x20, x20, #0x1
  18:	mov	x19, x0
  1c:	add	x20, x0, x20, lsl #3
  20:	bl	0 <__gcov_read_counter>
  24:	ldr	x1, [x19]
  28:	add	x1, x1, x0
  2c:	str	x1, [x19], #8
  30:	cmp	x19, x20
  34:	b.ne	20 <__gcov_merge_add+0x20>  // b.any
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	ret

_gcov_merge_single.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_single>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	w22, #0xaaab                	// #43691
  10:	movk	w22, #0xaaaa, lsl #16
  14:	stp	x19, x20, [sp, #16]
  18:	umull	x22, w1, w22
  1c:	str	x23, [sp, #48]
  20:	lsr	x22, x22, #33
  24:	add	w23, w22, w22, lsl #1
  28:	subs	w23, w1, w23
  2c:	b.ne	d4 <__gcov_merge_single+0xd4>  // b.any
  30:	mov	x19, x0
  34:	cmp	w1, #0x2
  38:	b.hi	6c <__gcov_merge_single+0x6c>  // b.pmore
  3c:	b	b4 <__gcov_merge_single+0xb4>
  40:	cmp	x1, x20
  44:	b.ge	c8 <__gcov_merge_single+0xc8>  // b.tcont
  48:	sub	x20, x20, x1
  4c:	stp	x21, x20, [x19]
  50:	add	w23, w23, #0x1
  54:	ldr	x1, [x19, #16]
  58:	cmp	w22, w23
  5c:	add	x19, x19, #0x18
  60:	add	x0, x1, x0
  64:	stur	x0, [x19, #-8]
  68:	b.ls	b4 <__gcov_merge_single+0xb4>  // b.plast
  6c:	bl	0 <__gcov_read_counter>
  70:	mov	x21, x0
  74:	bl	0 <__gcov_read_counter>
  78:	mov	x20, x0
  7c:	bl	0 <__gcov_read_counter>
  80:	ldr	x1, [x19]
  84:	cmp	x1, x21
  88:	ldr	x1, [x19, #8]
  8c:	b.ne	40 <__gcov_merge_single+0x40>  // b.any
  90:	add	x20, x1, x20
  94:	str	x20, [x19, #8]
  98:	ldr	x1, [x19, #16]
  9c:	add	w23, w23, #0x1
  a0:	cmp	w22, w23
  a4:	add	x19, x19, #0x18
  a8:	add	x0, x1, x0
  ac:	stur	x0, [x19, #-8]
  b0:	b.hi	6c <__gcov_merge_single+0x6c>  // b.pmore
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldr	x23, [sp, #48]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	sub	x20, x1, x20
  cc:	str	x20, [x19, #8]
  d0:	b	50 <__gcov_merge_single+0x50>
  d4:	bl	0 <abort>

_gcov_merge_ior.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_ior>:
   0:	cbz	w1, 44 <__gcov_merge_ior+0x44>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	sub	w20, w1, #0x1
  14:	add	x20, x20, #0x1
  18:	mov	x19, x0
  1c:	add	x20, x0, x20, lsl #3
  20:	bl	0 <__gcov_read_counter>
  24:	ldr	x1, [x19]
  28:	orr	x1, x1, x0
  2c:	str	x1, [x19], #8
  30:	cmp	x19, x20
  34:	b.ne	20 <__gcov_merge_ior+0x20>  // b.any
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	ret

_gcov_merge_time_profile.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_time_profile>:
   0:	cbz	w1, 54 <__gcov_merge_time_profile+0x54>
   4:	stp	x29, x30, [sp, #-32]!
   8:	sub	w1, w1, #0x1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	add	x20, x0, #0x8
  18:	mov	x19, x0
  1c:	add	x20, x20, w1, uxtw #3
  20:	bl	0 <__gcov_read_counter>
  24:	cbz	x0, 3c <__gcov_merge_time_profile+0x3c>
  28:	ldr	x1, [x19]
  2c:	cmp	x1, #0x0
  30:	ccmp	x1, x0, #0x0, ne  // ne = any
  34:	b.le	3c <__gcov_merge_time_profile+0x3c>
  38:	str	x0, [x19]
  3c:	add	x19, x19, #0x8
  40:	cmp	x19, x20
  44:	b.ne	20 <__gcov_merge_time_profile+0x20>  // b.any
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	ret

_gcov_merge_icall_topn.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_merge_icall_topn>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	w2, #0x8e39                	// #36409
   8:	movk	w2, #0x38e3, lsl #16
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x24, x0
  18:	umull	x0, w1, w2
  1c:	stp	x19, x20, [sp, #16]
  20:	lsr	x0, x0, #33
  24:	stp	x21, x22, [sp, #32]
  28:	stp	x25, x26, [sp, #64]
  2c:	add	w0, w0, w0, lsl #3
  30:	cmp	w1, w0
  34:	str	x27, [sp, #80]
  38:	b.ne	138 <__gcov_merge_icall_topn+0x138>  // b.any
  3c:	mov	w25, w1
  40:	mov	w23, #0x0                   	// #0
  44:	cbz	w1, 104 <__gcov_merge_icall_topn+0x104>
  48:	add	w21, w23, #0x1
  4c:	sub	sp, sp, #0x80
  50:	mov	x19, sp
  54:	mov	w20, #0x4                   	// #4
  58:	lsl	x21, x21, #3
  5c:	mov	w27, #0x8                   	// #8
  60:	add	x22, x24, x21
  64:	stp	xzr, xzr, [x19, #64]
  68:	ldr	q1, [x24, x21]
  6c:	stp	xzr, xzr, [x19, #80]
  70:	ldr	q0, [x22, #16]
  74:	stp	xzr, xzr, [x19, #96]
  78:	stp	xzr, xzr, [x19, #112]
  7c:	stp	q1, q0, [x19]
  80:	ldp	q1, q0, [x22, #32]
  84:	stp	q1, q0, [x19, #32]
  88:	bl	0 <__gcov_read_counter>
  8c:	bl	0 <__gcov_read_counter>
  90:	mov	x26, x0
  94:	bl	0 <__gcov_read_counter>
  98:	cbz	w27, 124 <__gcov_merge_icall_topn+0x124>
  9c:	mov	w2, #0x0                   	// #0
  a0:	b	b0 <__gcov_merge_icall_topn+0xb0>
  a4:	add	w2, w2, #0x2
  a8:	cmp	w2, w27
  ac:	b.cs	124 <__gcov_merge_icall_topn+0x124>  // b.hs, b.nlast
  b0:	ldr	x3, [x19, w2, uxtw #3]
  b4:	cmp	x3, x26
  b8:	b.ne	a4 <__gcov_merge_icall_topn+0xa4>  // b.any
  bc:	add	w2, w2, #0x1
  c0:	ldr	x1, [x19, x2, lsl #3]
  c4:	add	x0, x1, x0
  c8:	str	x0, [x19, x2, lsl #3]
  cc:	subs	w20, w20, #0x1
  d0:	b.ne	8c <__gcov_merge_icall_topn+0x8c>  // b.any
  d4:	mov	w1, w27
  d8:	mov	x0, x19
  dc:	bl	0 <__gcov_sort_n_vals>
  e0:	add	w23, w23, #0x9
  e4:	ldp	q0, q2, [x19]
  e8:	cmp	w25, w23
  ec:	ldr	q1, [x19, #32]
  f0:	str	q0, [x24, x21]
  f4:	ldr	q0, [x19, #48]
  f8:	stp	q2, q1, [x22, #16]
  fc:	str	q0, [x22, #48]
 100:	b.hi	48 <__gcov_merge_icall_topn+0x48>  // b.pmore
 104:	mov	sp, x29
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x21, x22, [sp, #32]
 110:	ldp	x23, x24, [sp, #48]
 114:	ldp	x25, x26, [sp, #64]
 118:	ldr	x27, [sp, #80]
 11c:	ldp	x29, x30, [sp], #96
 120:	ret
 124:	add	w1, w27, #0x1
 128:	str	x26, [x19, w27, uxtw #3]
 12c:	add	w27, w27, #0x2
 130:	str	x0, [x19, x1, lsl #3]
 134:	b	cc <__gcov_merge_icall_topn+0xcc>
 138:	bl	0 <abort>

_gcov_interval_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.mi	34 <__gcov_interval_profiler+0x34>  // b.first
   8:	cmp	x1, w3, uxtw
   c:	mov	w3, w3
  10:	b.lt	24 <__gcov_interval_profiler+0x24>  // b.tstop
  14:	ldr	x1, [x0, x3, lsl #3]
  18:	add	x1, x1, #0x1
  1c:	str	x1, [x0, x3, lsl #3]
  20:	ret
  24:	ldr	x2, [x0, x1, lsl #3]
  28:	add	x2, x2, #0x1
  2c:	str	x2, [x0, x1, lsl #3]
  30:	ret
  34:	add	w3, w3, #0x1
  38:	ldr	x1, [x0, x3, lsl #3]
  3c:	add	x1, x1, #0x1
  40:	str	x1, [x0, x3, lsl #3]
  44:	ret

_gcov_interval_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler_atomic>:
   0:	subs	x1, x1, w2, sxtw
   4:	b.mi	44 <__gcov_interval_profiler_atomic+0x44>  // b.first
   8:	cmp	x1, w3, uxtw
   c:	mov	w3, w3
  10:	b.lt	2c <__gcov_interval_profiler_atomic+0x2c>  // b.tstop
  14:	add	x3, x0, x3, lsl #3
  18:	ldxr	x0, [x3]
  1c:	add	x0, x0, #0x1
  20:	stxr	w1, x0, [x3]
  24:	cbnz	w1, 18 <__gcov_interval_profiler_atomic+0x18>
  28:	ret
  2c:	add	x1, x0, x1, lsl #3
  30:	ldxr	x0, [x1]
  34:	add	x0, x0, #0x1
  38:	stxr	w2, x0, [x1]
  3c:	cbnz	w2, 30 <__gcov_interval_profiler_atomic+0x30>
  40:	ret
  44:	add	w1, w3, #0x1
  48:	add	x3, x0, x1, lsl #3
  4c:	ldxr	x0, [x3]
  50:	add	x0, x0, #0x1
  54:	stxr	w1, x0, [x3]
  58:	cbnz	w1, 4c <__gcov_interval_profiler_atomic+0x4c>
  5c:	ret

_gcov_pow2_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	20 <__gcov_pow2_profiler+0x20>  // b.none
  10:	ldr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	str	x1, [x0]
  1c:	ret
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x1
  28:	str	x1, [x0, #8]
  2c:	ret

_gcov_pow2_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler_atomic>:
   0:	cbz	x1, 10 <__gcov_pow2_profiler_atomic+0x10>
   4:	sub	x2, x1, #0x1
   8:	tst	x2, x1
   c:	b.eq	24 <__gcov_pow2_profiler_atomic+0x24>  // b.none
  10:	ldxr	x1, [x0]
  14:	add	x1, x1, #0x1
  18:	stxr	w2, x1, [x0]
  1c:	cbnz	w2, 10 <__gcov_pow2_profiler_atomic+0x10>
  20:	ret
  24:	add	x0, x0, #0x8
  28:	ldxr	x1, [x0]
  2c:	add	x1, x1, #0x1
  30:	stxr	w2, x1, [x0]
  34:	cbnz	w2, 28 <__gcov_pow2_profiler_atomic+0x28>
  38:	ret

_gcov_one_value_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.eq	40 <__gcov_one_value_profiler+0x40>  // b.none
   c:	cbz	x2, 28 <__gcov_one_value_profiler+0x28>
  10:	ldr	x1, [x0, #16]
  14:	sub	x2, x2, #0x1
  18:	str	x2, [x0, #8]
  1c:	add	x1, x1, #0x1
  20:	str	x1, [x0, #16]
  24:	ret
  28:	mov	x2, #0x1                   	// #1
  2c:	stp	x1, x2, [x0]
  30:	ldr	x1, [x0, #16]
  34:	add	x1, x1, #0x1
  38:	str	x1, [x0, #16]
  3c:	ret
  40:	ldr	x1, [x0, #16]
  44:	add	x2, x2, #0x1
  48:	str	x2, [x0, #8]
  4c:	add	x1, x1, #0x1
  50:	str	x1, [x0, #16]
  54:	ret

_gcov_one_value_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_atomic>:
   0:	ldp	x3, x2, [x0]
   4:	cmp	x1, x3
   8:	b.eq	3c <__gcov_one_value_profiler_atomic+0x3c>  // b.none
   c:	cbnz	x2, 30 <__gcov_one_value_profiler_atomic+0x30>
  10:	mov	x2, #0x1                   	// #1
  14:	stp	x1, x2, [x0]
  18:	add	x0, x0, #0x10
  1c:	ldxr	x1, [x0]
  20:	add	x1, x1, #0x1
  24:	stxr	w2, x1, [x0]
  28:	cbnz	w2, 1c <__gcov_one_value_profiler_atomic+0x1c>
  2c:	ret
  30:	sub	x2, x2, #0x1
  34:	str	x2, [x0, #8]
  38:	b	18 <__gcov_one_value_profiler_atomic+0x18>
  3c:	add	x2, x2, #0x1
  40:	str	x2, [x0, #8]
  44:	b	18 <__gcov_one_value_profiler_atomic+0x18>

_gcov_average_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler>:
   0:	adrp	x2, 0 <__gcov_average_profiler>
   4:	ldr	q0, [x0]
   8:	ldr	q1, [x2]
   c:	mov	v1.d[0], x1
  10:	add	v0.2d, v0.2d, v1.2d
  14:	str	q0, [x0]
  18:	ret

_gcov_average_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	add	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_average_profiler_atomic>
  10:	add	x0, x0, #0x8
  14:	ldxr	x1, [x0]
  18:	add	x1, x1, #0x1
  1c:	stxr	w2, x1, [x0]
  20:	cbnz	w2, 14 <__gcov_average_profiler_atomic+0x14>
  24:	ret

_gcov_ior_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler>:
   0:	ldr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	str	x2, [x0]
   c:	ret

_gcov_ior_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler_atomic>:
   0:	ldxr	x2, [x0]
   4:	orr	x2, x2, x1
   8:	stxr	w3, x2, [x0]
   c:	cbnz	w3, 0 <__gcov_ior_profiler_atomic>
  10:	ret

_gcov_indirect_call_profiler_v3.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_indirect_call_profiler_v3>:
   0:	mrs	x2, tpidr_el0
   4:	stp	x29, x30, [sp, #-16]!
   8:	mov	x3, x0
   c:	mov	x29, sp
  10:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  14:	ldr	x4, [x0]
  18:	add	x0, x0, #0x0
  1c:	blr	x4
  20:	add	x4, x2, x0
  24:	ldr	x0, [x2, x0]
  28:	cmp	x0, x1
  2c:	b.eq	4c <__gcov_indirect_call_profiler_v3+0x4c>  // b.none
  30:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  34:	ldr	x1, [x0]
  38:	add	x0, x0, #0x0
  3c:	blr	x1
  40:	str	xzr, [x2, x0]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	ldr	x0, [x4, #8]
  50:	ldp	x4, x1, [x0]
  54:	cmp	x3, x4
  58:	b.eq	90 <__gcov_indirect_call_profiler_v3+0x90>  // b.none
  5c:	cbnz	x1, 9c <__gcov_indirect_call_profiler_v3+0x9c>
  60:	mov	x1, #0x1                   	// #1
  64:	stp	x3, x1, [x0]
  68:	ldr	x1, [x0, #16]
  6c:	add	x1, x1, #0x1
  70:	str	x1, [x0, #16]
  74:	adrp	x0, 0 <__gcov_indirect_call_profiler_v3>
  78:	ldr	x1, [x0]
  7c:	add	x0, x0, #0x0
  80:	blr	x1
  84:	str	xzr, [x2, x0]
  88:	ldp	x29, x30, [sp], #16
  8c:	ret
  90:	add	x1, x1, #0x1
  94:	str	x1, [x0, #8]
  98:	b	68 <__gcov_indirect_call_profiler_v3+0x68>
  9c:	sub	x1, x1, #0x1
  a0:	str	x1, [x0, #8]
  a4:	b	68 <__gcov_indirect_call_profiler_v3+0x68>

_gcov_time_profiler.o:     file format elf64-littleaarch64


_gcov_indirect_call_topn_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_topn_value_profiler_body>:
   0:	ldp	x4, x2, [x0, #8]
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x4
   c:	b.eq	154 <__gcov_topn_value_profiler_body+0x154>  // b.none
  10:	ldr	x5, [x0, #24]
  14:	cmp	x2, #0x0
  18:	cset	w6, eq  // eq = none
  1c:	add	x4, x0, #0x18
  20:	cmp	x1, x5
  24:	ldr	x5, [x0, #32]
  28:	b.eq	14c <__gcov_topn_value_profiler_body+0x14c>  // b.none
  2c:	cbz	x5, 78 <__gcov_topn_value_profiler_body+0x78>
  30:	cmp	x2, x5
  34:	csel	x4, x4, x3, gt
  38:	ldp	x5, x2, [x0, #40]
  3c:	add	x3, x0, #0x28
  40:	cmp	x1, x5
  44:	b.eq	154 <__gcov_topn_value_profiler_body+0x154>  // b.none
  48:	cbz	x2, 80 <__gcov_topn_value_profiler_body+0x80>
  4c:	ldr	x5, [x4, #8]
  50:	cmp	x5, x2
  54:	csel	x3, x3, x4, gt
  58:	ldp	x4, x2, [x0, #56]
  5c:	add	x5, x0, #0x38
  60:	cmp	x4, x1
  64:	b.eq	160 <__gcov_topn_value_profiler_body+0x160>  // b.none
  68:	cbnz	x2, 88 <__gcov_topn_value_profiler_body+0x88>
  6c:	mov	x2, #0x1                   	// #1
  70:	stp	x1, x2, [x0, #56]
  74:	ret
  78:	mov	w6, #0x1                   	// #1
  7c:	b	38 <__gcov_topn_value_profiler_body+0x38>
  80:	mov	w6, #0x1                   	// #1
  84:	b	58 <__gcov_topn_value_profiler_body+0x58>
  88:	ldr	x7, [x3, #8]
  8c:	mov	x4, #0x1                   	// #1
  90:	cmp	x7, x2
  94:	csel	x3, x3, x5, le
  98:	stp	x1, x4, [x3]
  9c:	cbnz	w6, 120 <__gcov_topn_value_profiler_body+0x120>
  a0:	ldr	x1, [x0]
  a4:	add	x1, x1, x4
  a8:	str	x1, [x0]
  ac:	cmp	x1, #0xbb7
  b0:	b.le	120 <__gcov_topn_value_profiler_body+0x120>
  b4:	stp	x29, x30, [sp, #-16]!
  b8:	mov	x29, sp
  bc:	sub	sp, sp, #0x10
  c0:	str	xzr, [x0]
  c4:	mov	x2, sp
  c8:	ldr	x4, [x0, #16]
  cc:	stp	xzr, xzr, [x2]
  d0:	cmp	x4, #0x0
  d4:	b.gt	124 <__gcov_topn_value_profiler_body+0x124>
  d8:	ldr	x3, [x0, #32]
  dc:	str	xzr, [x2]
  e0:	mov	x1, x2
  e4:	cmp	x3, #0x0
  e8:	b.gt	140 <__gcov_topn_value_profiler_body+0x140>
  ec:	mov	x5, #0x0                   	// #0
  f0:	mov	x1, #0x0                   	// #0
  f4:	cmp	x1, x5
  f8:	csel	x1, x1, x5, le
  fc:	cmp	x1, x4
 100:	b.le	108 <__gcov_topn_value_profiler_body+0x108>
 104:	stp	xzr, xzr, [x0, #8]
 108:	cmp	x1, x3
 10c:	b.le	114 <__gcov_topn_value_profiler_body+0x114>
 110:	stp	xzr, xzr, [x0, #24]
 114:	mov	sp, x29
 118:	ldp	x29, x30, [sp], #16
 11c:	ret
 120:	ret
 124:	mov	x1, x2
 128:	ldr	x3, [x0, #32]
 12c:	str	x4, [x1], #8
 130:	cmp	x3, #0x0
 134:	b.gt	140 <__gcov_topn_value_profiler_body+0x140>
 138:	mov	x1, #0x0                   	// #0
 13c:	b	108 <__gcov_topn_value_profiler_body+0x108>
 140:	str	x3, [x1]
 144:	ldp	x5, x1, [x2]
 148:	b	f4 <__gcov_topn_value_profiler_body+0xf4>
 14c:	mov	x2, x5
 150:	mov	x3, x4
 154:	add	x2, x2, #0x1
 158:	str	x2, [x3, #8]
 15c:	ret
 160:	mov	x3, x5
 164:	b	154 <__gcov_topn_value_profiler_body+0x154>

0000000000000168 <__gcov_indirect_call_topn_profiler>:
 168:	mrs	x2, tpidr_el0
 16c:	stp	x29, x30, [sp, #-16]!
 170:	mov	x3, x0
 174:	mov	x29, sp
 178:	adrp	x0, 0 <__gcov_topn_value_profiler_body>
 17c:	ldr	x4, [x0]
 180:	add	x0, x0, #0x0
 184:	blr	x4
 188:	add	x4, x2, x0
 18c:	ldr	x0, [x2, x0]
 190:	cmp	x0, x1
 194:	b.eq	1a0 <__gcov_indirect_call_topn_profiler+0x38>  // b.none
 198:	ldp	x29, x30, [sp], #16
 19c:	ret
 1a0:	ldp	x29, x30, [sp], #16
 1a4:	mov	x1, x3
 1a8:	ldr	x0, [x4, #8]
 1ac:	b	0 <__gcov_topn_value_profiler_body>

_gcov_dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_dump_int>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	movk	w1, #0x4139, lsl #16
  18:	ldr	w2, [x0]
  1c:	str	x19, [sp, #16]
  20:	adrp	x19, 0 <__gcov_root>
  24:	cmp	w2, w1
  28:	add	x19, x19, #0x0
  2c:	b.eq	4c <__gcov_dump_int+0x4c>  // b.none
  30:	mov	x0, x19
  34:	bl	0 <__gcov_dump_one>
  38:	ldr	x19, [x19, #16]
  3c:	cbnz	x19, 30 <__gcov_dump_int+0x30>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	ldr	x19, [x0, #8]
  50:	cbnz	x19, 30 <__gcov_dump_int+0x30>
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

0000000000000060 <__gcov_dump>:
  60:	stp	x29, x30, [sp, #-32]!
  64:	adrp	x0, 0 <__gcov_master>
  68:	mov	w1, #0x322a                	// #12842
  6c:	mov	x29, sp
  70:	ldr	x0, [x0]
  74:	movk	w1, #0x4139, lsl #16
  78:	ldr	w2, [x0]
  7c:	str	x19, [sp, #16]
  80:	adrp	x19, 0 <__gcov_root>
  84:	cmp	w2, w1
  88:	add	x19, x19, #0x0
  8c:	b.eq	ac <__gcov_dump+0x4c>  // b.none
  90:	mov	x0, x19
  94:	bl	0 <__gcov_dump_one>
  98:	ldr	x19, [x19, #16]
  9c:	cbnz	x19, 90 <__gcov_dump+0x30>
  a0:	ldr	x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	ldr	x19, [x0, #8]
  b0:	cbnz	x19, 90 <__gcov_dump+0x30>
  b4:	ldr	x19, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret

_gcov_flush.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_flush>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x19, 0 <__pthread_key_create>
  10:	ldr	x0, [x19]
  14:	cbz	x0, 24 <__gcov_flush+0x24>
  18:	adrp	x0, 0 <__gcov_flush>
  1c:	add	x0, x0, #0x0
  20:	bl	0 <pthread_mutex_lock>
  24:	bl	0 <__gcov_dump_int>
  28:	bl	0 <__gcov_reset_int>
  2c:	ldr	x19, [x19]
  30:	cbz	x19, 48 <__gcov_flush+0x48>
  34:	ldr	x19, [sp, #16]
  38:	adrp	x0, 0 <__gcov_flush>
  3c:	ldp	x29, x30, [sp], #32
  40:	add	x0, x0, #0x0
  44:	b	0 <pthread_mutex_unlock>
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

_gcov_fork.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_fork>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	bl	0 <__gcov_flush>
  10:	bl	0 <fork>
  14:	cmp	w0, #0x0
  18:	adrp	x1, 0 <__pthread_key_create>
  1c:	mov	w19, w0
  20:	ldr	x1, [x1]
  24:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  28:	b.ne	3c <__gcov_fork+0x3c>  // b.any
  2c:	mov	w0, w19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x1, #0x0                   	// #0
  40:	adrp	x0, 0 <__gcov_flush_mx>
  44:	add	x0, x0, #0x0
  48:	bl	0 <pthread_mutex_init>
  4c:	mov	w0, w19
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

_gcov_execl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execl>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w4, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w4, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x6, x7, [x29, #32]
  68:	stp	x6, x7, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x6, x7, [x29, #48]
  74:	mov	x3, x0
  78:	mov	w4, #0x2                   	// #2
  7c:	stp	x6, x7, [x29, #80]
  80:	b	98 <__gcov_execl+0x98>
  84:	mov	x5, x3
  88:	add	x3, x3, #0x8
  8c:	ldr	x5, [x5]
  90:	cbz	x5, b8 <__gcov_execl+0xb8>
  94:	add	w4, w4, #0x1
  98:	add	w6, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execl+0x84>
  a0:	add	x5, x0, w2, sxtw
  a4:	cmp	w6, #0x0
  a8:	mov	w2, w6
  ac:	b.gt	84 <__gcov_execl+0x84>
  b0:	ldr	x5, [x5]
  b4:	cbnz	x5, 94 <__gcov_execl+0x94>
  b8:	ubfiz	x0, x4, #3, #32
  bc:	cmp	w4, #0x1
  c0:	add	x0, x0, #0xf
  c4:	and	x0, x0, #0xffffffff0
  c8:	sub	sp, sp, x0
  cc:	mov	x1, sp
  d0:	str	x20, [x1]
  d4:	b.ls	144 <__gcov_execl+0x144>  // b.plast
  d8:	ldr	w6, [x29, #88]
  dc:	mov	x3, #0x1                   	// #1
  e0:	ldp	x5, x0, [x29, #64]
  e4:	b	108 <__gcov_execl+0x108>
  e8:	mov	x7, x5
  ec:	str	x2, [x29, #64]
  f0:	mov	x5, x2
  f4:	ldr	x2, [x7]
  f8:	str	x2, [x1, x3, lsl #3]
  fc:	add	x3, x3, #0x1
 100:	cmp	w4, w3
 104:	b.ls	144 <__gcov_execl+0x144>  // b.plast
 108:	add	x2, x5, #0xf
 10c:	add	w8, w6, #0x8
 110:	and	x2, x2, #0xfffffffffffffff8
 114:	tbz	w6, #31, e8 <__gcov_execl+0xe8>
 118:	add	x2, x5, #0xf
 11c:	add	x7, x0, w6, sxtw
 120:	cmp	w8, #0x0
 124:	mov	w6, w8
 128:	and	x2, x2, #0xfffffffffffffff8
 12c:	b.gt	e8 <__gcov_execl+0xe8>
 130:	ldr	x2, [x7]
 134:	str	x2, [x1, x3, lsl #3]
 138:	add	x3, x3, #0x1
 13c:	cmp	w4, w3
 140:	b.hi	108 <__gcov_execl+0x108>  // b.pmore
 144:	mov	x0, x19
 148:	bl	0 <execv>
 14c:	mov	sp, x29
 150:	ldp	x19, x20, [sp, #16]
 154:	ldp	x29, x30, [sp], #272
 158:	ret

_gcov_execlp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execlp>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w4, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w4, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x6, x7, [x29, #32]
  68:	stp	x6, x7, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x6, x7, [x29, #48]
  74:	mov	x3, x0
  78:	mov	w4, #0x2                   	// #2
  7c:	stp	x6, x7, [x29, #80]
  80:	b	98 <__gcov_execlp+0x98>
  84:	mov	x5, x3
  88:	add	x3, x3, #0x8
  8c:	ldr	x5, [x5]
  90:	cbz	x5, b8 <__gcov_execlp+0xb8>
  94:	add	w4, w4, #0x1
  98:	add	w6, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execlp+0x84>
  a0:	add	x5, x0, w2, sxtw
  a4:	cmp	w6, #0x0
  a8:	mov	w2, w6
  ac:	b.gt	84 <__gcov_execlp+0x84>
  b0:	ldr	x5, [x5]
  b4:	cbnz	x5, 94 <__gcov_execlp+0x94>
  b8:	ubfiz	x0, x4, #3, #32
  bc:	cmp	w4, #0x1
  c0:	add	x0, x0, #0xf
  c4:	and	x0, x0, #0xffffffff0
  c8:	sub	sp, sp, x0
  cc:	mov	x1, sp
  d0:	str	x20, [x1]
  d4:	b.ls	144 <__gcov_execlp+0x144>  // b.plast
  d8:	ldr	w6, [x29, #88]
  dc:	mov	x3, #0x1                   	// #1
  e0:	ldp	x5, x0, [x29, #64]
  e4:	b	108 <__gcov_execlp+0x108>
  e8:	mov	x7, x5
  ec:	str	x2, [x29, #64]
  f0:	mov	x5, x2
  f4:	ldr	x2, [x7]
  f8:	str	x2, [x1, x3, lsl #3]
  fc:	add	x3, x3, #0x1
 100:	cmp	w4, w3
 104:	b.ls	144 <__gcov_execlp+0x144>  // b.plast
 108:	add	x2, x5, #0xf
 10c:	add	w8, w6, #0x8
 110:	and	x2, x2, #0xfffffffffffffff8
 114:	tbz	w6, #31, e8 <__gcov_execlp+0xe8>
 118:	add	x2, x5, #0xf
 11c:	add	x7, x0, w6, sxtw
 120:	cmp	w8, #0x0
 124:	mov	w6, w8
 128:	and	x2, x2, #0xfffffffffffffff8
 12c:	b.gt	e8 <__gcov_execlp+0xe8>
 130:	ldr	x2, [x7]
 134:	str	x2, [x1, x3, lsl #3]
 138:	add	x3, x3, #0x1
 13c:	cmp	w4, w3
 140:	b.hi	108 <__gcov_execlp+0x108>  // b.pmore
 144:	mov	x0, x19
 148:	bl	0 <execvp>
 14c:	mov	sp, x29
 150:	ldp	x19, x20, [sp, #16]
 154:	ldp	x29, x30, [sp], #272
 158:	ret

_gcov_execle.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execle>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	q0, [x29, #96]
  18:	str	q1, [x29, #112]
  1c:	str	q2, [x29, #128]
  20:	str	q3, [x29, #144]
  24:	str	q4, [x29, #160]
  28:	str	q5, [x29, #176]
  2c:	str	q6, [x29, #192]
  30:	str	q7, [x29, #208]
  34:	stp	x2, x3, [x29, #224]
  38:	stp	x4, x5, [x29, #240]
  3c:	stp	x6, x7, [x29, #256]
  40:	bl	0 <__gcov_flush>
  44:	add	x2, x29, #0x110
  48:	stp	x2, x2, [x29, #32]
  4c:	add	x0, x29, #0xe0
  50:	mov	w1, #0xffffffd0            	// #-48
  54:	mov	w4, #0xffffff80            	// #-128
  58:	str	x0, [x29, #48]
  5c:	stp	w1, w4, [x29, #56]
  60:	add	x0, x29, #0x110
  64:	ldp	x4, x5, [x29, #32]
  68:	stp	x4, x5, [x29, #64]
  6c:	mov	w2, w1
  70:	ldp	x4, x5, [x29, #48]
  74:	mov	x3, x0
  78:	mov	w6, #0x2                   	// #2
  7c:	stp	x4, x5, [x29, #80]
  80:	b	98 <__gcov_execle+0x98>
  84:	mov	x4, x3
  88:	add	x3, x3, #0x8
  8c:	ldr	x4, [x4]
  90:	cbz	x4, b8 <__gcov_execle+0xb8>
  94:	add	w6, w6, #0x1
  98:	add	w5, w2, #0x8
  9c:	tbz	w2, #31, 84 <__gcov_execle+0x84>
  a0:	add	x4, x0, w2, sxtw
  a4:	cmp	w5, #0x0
  a8:	mov	w2, w5
  ac:	b.gt	84 <__gcov_execle+0x84>
  b0:	ldr	x4, [x4]
  b4:	cbnz	x4, 94 <__gcov_execle+0x94>
  b8:	ubfiz	x0, x6, #3, #32
  bc:	ldr	w10, [x29, #88]
  c0:	add	x0, x0, #0xf
  c4:	cmp	w6, #0x1
  c8:	and	x0, x0, #0xffffffff0
  cc:	sub	sp, sp, x0
  d0:	mov	x1, sp
  d4:	ldr	x5, [x29, #64]
  d8:	str	x20, [x1]
  dc:	b.ls	1b8 <__gcov_execle+0x1b8>  // b.plast
  e0:	mov	w4, w10
  e4:	mov	x3, #0x1                   	// #1
  e8:	mov	w0, #0x0                   	// #0
  ec:	ldr	x9, [x29, #72]
  f0:	b	114 <__gcov_execle+0x114>
  f4:	mov	x7, x5
  f8:	str	x2, [x29, #64]
  fc:	mov	x5, x2
 100:	ldr	x2, [x7]
 104:	str	x2, [x1, x3, lsl #3]
 108:	add	x3, x3, #0x1
 10c:	cmp	w6, w3
 110:	b.ls	158 <__gcov_execle+0x158>  // b.plast
 114:	add	x2, x5, #0xf
 118:	add	w8, w4, #0x8
 11c:	and	x2, x2, #0xfffffffffffffff8
 120:	tbz	w4, #31, f4 <__gcov_execle+0xf4>
 124:	add	x2, x5, #0xf
 128:	add	x7, x9, w4, sxtw
 12c:	and	x2, x2, #0xfffffffffffffff8
 130:	mov	w4, w8
 134:	cmp	w8, #0x0
 138:	mov	w0, #0x1                   	// #1
 13c:	b.gt	f4 <__gcov_execle+0xf4>
 140:	ldr	x2, [x7]
 144:	str	x2, [x1, x3, lsl #3]
 148:	add	x3, x3, #0x1
 14c:	cmp	w6, w3
 150:	b.hi	114 <__gcov_execle+0x114>  // b.pmore
 154:	nop
 158:	cmp	w0, #0x0
 15c:	csel	w4, w4, w10, ne  // ne = any
 160:	tbnz	w4, #31, 18c <__gcov_execle+0x18c>
 164:	add	x0, x5, #0xf
 168:	and	x0, x0, #0xfffffffffffffff8
 16c:	str	x0, [x29, #64]
 170:	mov	x0, x19
 174:	ldr	x2, [x5]
 178:	bl	0 <execve>
 17c:	mov	sp, x29
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x29, x30, [sp], #272
 188:	ret
 18c:	cmn	w4, #0x7
 190:	b.ge	164 <__gcov_execle+0x164>  // b.tcont
 194:	ldr	x5, [x29, #72]
 198:	mov	x0, x19
 19c:	add	x5, x5, w4, sxtw
 1a0:	ldr	x2, [x5]
 1a4:	bl	0 <execve>
 1a8:	mov	sp, x29
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #272
 1b4:	ret
 1b8:	mov	w4, w10
 1bc:	b	160 <__gcov_execle+0x160>

_gcov_execv.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execv>

_gcov_execvp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execvp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	bl	0 <__gcov_flush>
  18:	mov	x1, x20
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <execvp>

_gcov_execve.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execve>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x2
  1c:	bl	0 <__gcov_flush>
  20:	mov	x2, x21
  24:	mov	x1, x20
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldr	x21, [sp, #32]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <execve>

_gcov_reset.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_reset_int>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x0, 0 <__gcov_master>
   8:	mov	w1, #0x322a                	// #12842
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	stp	x21, x22, [sp, #32]
  18:	movk	w1, #0x4139, lsl #16
  1c:	adrp	x21, 0 <__gcov_root>
  20:	add	x21, x21, #0x0
  24:	ldr	w2, [x0]
  28:	cmp	w2, w1
  2c:	b.eq	f8 <__gcov_reset_int+0xf8>  // b.none
  30:	stp	x19, x20, [sp, #16]
  34:	nop
  38:	ldr	x19, [x21]
  3c:	cbz	x19, d4 <__gcov_reset_int+0xd4>
  40:	stp	x23, x24, [sp, #48]
  44:	nop
  48:	ldr	w0, [x19, #104]
  4c:	add	x24, x19, #0x68
  50:	mov	w22, #0x0                   	// #0
  54:	cbnz	w0, 68 <__gcov_reset_int+0x68>
  58:	b	c8 <__gcov_reset_int+0xc8>
  5c:	add	w22, w22, #0x1
  60:	cmp	w22, w0
  64:	b.cs	c8 <__gcov_reset_int+0xc8>  // b.hs, b.nlast
  68:	ldr	x1, [x19, #112]
  6c:	ldr	x20, [x1, w22, uxtw #3]
  70:	cbz	x20, 5c <__gcov_reset_int+0x5c>
  74:	ldr	x1, [x20]
  78:	cmp	x1, x19
  7c:	b.ne	5c <__gcov_reset_int+0x5c>  // b.any
  80:	add	x20, x20, #0x18
  84:	add	x23, x19, #0x20
  88:	ldr	x0, [x23]
  8c:	mov	w1, #0x0                   	// #0
  90:	add	x23, x23, #0x8
  94:	cbz	x0, ac <__gcov_reset_int+0xac>
  98:	ldr	x0, [x20, #8]
  9c:	add	x20, x20, #0x10
  a0:	ldur	w2, [x20, #-16]
  a4:	lsl	x2, x2, #3
  a8:	bl	0 <memset>
  ac:	cmp	x24, x23
  b0:	b.ne	88 <__gcov_reset_int+0x88>  // b.any
  b4:	ldr	w0, [x19, #104]
  b8:	add	w22, w22, #0x1
  bc:	cmp	w22, w0
  c0:	b.cc	68 <__gcov_reset_int+0x68>  // b.lo, b.ul, b.last
  c4:	nop
  c8:	ldr	x19, [x19, #8]
  cc:	cbnz	x19, 48 <__gcov_reset_int+0x48>
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldrb	w0, [x21, #8]
  d8:	and	w0, w0, #0xfffffffe
  dc:	strb	w0, [x21, #8]
  e0:	ldr	x21, [x21, #16]
  e4:	cbnz	x21, 38 <__gcov_reset_int+0x38>
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x29, x30, [sp], #64
  f4:	ret
  f8:	ldr	x21, [x0, #8]
  fc:	cbnz	x21, 30 <__gcov_reset_int+0x30>
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x29, x30, [sp], #64
 108:	ret
 10c:	nop

0000000000000110 <__gcov_reset>:
 110:	b	0 <__gcov_reset_int>

_gcov.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_error>:
       0:	stp	x29, x30, [sp, #-304]!
       4:	mov	w9, #0xffffffc8            	// #-56
       8:	mov	w8, #0xffffff80            	// #-128
       c:	mov	x29, sp
      10:	stp	x21, x22, [sp, #32]
      14:	adrp	x22, 8 <gcov_error+0x8>
      18:	add	x10, sp, #0xf0
      1c:	ldr	x21, [x22]
      20:	str	q0, [sp, #112]
      24:	str	q1, [sp, #128]
      28:	stp	x19, x20, [sp, #16]
      2c:	mov	x19, x0
      30:	add	x0, sp, #0x130
      34:	ldr	x20, [x21]
      38:	stp	x0, x0, [sp, #80]
      3c:	str	x10, [sp, #96]
      40:	stp	w9, w8, [sp, #104]
      44:	str	q2, [sp, #144]
      48:	str	q3, [sp, #160]
      4c:	str	q4, [sp, #176]
      50:	str	q5, [sp, #192]
      54:	str	q6, [sp, #208]
      58:	str	q7, [sp, #224]
      5c:	stp	x1, x2, [sp, #248]
      60:	stp	x3, x4, [sp, #264]
      64:	stp	x5, x6, [sp, #280]
      68:	str	x7, [sp, #296]
      6c:	cbz	x20, b8 <gcov_error+0xb8>
      70:	ldp	x6, x7, [sp, #80]
      74:	mov	x1, x19
      78:	ldp	x4, x5, [sp, #96]
      7c:	add	x2, sp, #0x30
      80:	mov	x0, x20
      84:	stp	x6, x7, [sp, #48]
      88:	stp	x4, x5, [sp, #64]
      8c:	bl	0 <vfprintf>
      90:	mov	w19, w0
      94:	adrp	x0, 0 <gcov_error>
      98:	add	x0, x0, #0x0
      9c:	bl	0 <getenv>
      a0:	cbnz	x0, 100 <gcov_error+0x100>
      a4:	mov	w0, w19
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldp	x21, x22, [sp, #32]
      b0:	ldp	x29, x30, [sp], #304
      b4:	ret
      b8:	adrp	x0, 0 <gcov_error>
      bc:	add	x0, x0, #0x0
      c0:	bl	0 <getenv>
      c4:	cbz	x0, f8 <gcov_error+0xf8>
      c8:	adrp	x1, 0 <gcov_error>
      cc:	add	x1, x1, #0x0
      d0:	bl	0 <fopen>
      d4:	mov	x20, x0
      d8:	str	x0, [x21]
      dc:	cbnz	x20, 70 <gcov_error+0x70>
      e0:	adrp	x0, 0 <stderr>
      e4:	ldr	x22, [x22]
      e8:	ldr	x0, [x0]
      ec:	ldr	x20, [x0]
      f0:	str	x20, [x22]
      f4:	b	70 <gcov_error+0x70>
      f8:	ldr	x20, [x21]
      fc:	b	dc <gcov_error+0xdc>
     100:	mov	x3, x20
     104:	mov	x2, #0x21                  	// #33
     108:	mov	x1, #0x1                   	// #1
     10c:	adrp	x0, 0 <gcov_error>
     110:	add	x0, x0, #0x0
     114:	bl	0 <fwrite>
     118:	mov	w0, #0x1                   	// #1
     11c:	bl	0 <exit>

0000000000000120 <gcov_read_words.constprop.1>:
     120:	stp	x29, x30, [sp, #-32]!
     124:	mov	x29, sp
     128:	stp	x19, x20, [sp, #16]
     12c:	adrp	x20, 1028 <gcov_do_dump+0x2d8>
     130:	ldr	x19, [x20]
     134:	ldr	w0, [x19, #28]
     138:	ldr	w3, [x19, #12]
     13c:	cmp	w0, #0x0
     140:	ldr	w0, [x19, #16]
     144:	b.le	1b0 <gcov_read_words.constprop.1+0x90>
     148:	cmp	w0, w3
     14c:	b.ne	18c <gcov_read_words.constprop.1+0x6c>  // b.any
     150:	ldr	w4, [x19, #8]
     154:	mov	x0, x19
     158:	stur	xzr, [x19, #12]
     15c:	mov	x1, #0x1                   	// #1
     160:	add	w3, w4, w3
     164:	str	w3, [x19, #8]
     168:	ldr	x3, [x0], #32
     16c:	mov	x2, #0x1000                	// #4096
     170:	bl	0 <fread>
     174:	lsr	x0, x0, #2
     178:	ldr	w1, [x19, #16]
     17c:	add	w0, w1, w0
     180:	str	w0, [x19, #16]
     184:	cbz	w0, 1c0 <gcov_read_words.constprop.1+0xa0>
     188:	ldr	w3, [x19, #12]
     18c:	ldr	x20, [x20]
     190:	ubfiz	x0, x3, #2, #32
     194:	add	x0, x0, #0x20
     198:	add	w3, w3, #0x1
     19c:	add	x0, x0, x20
     1a0:	str	w3, [x20, #12]
     1a4:	ldp	x19, x20, [sp, #16]
     1a8:	ldp	x29, x30, [sp], #32
     1ac:	ret
     1b0:	mov	x0, #0x0                   	// #0
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldp	x29, x30, [sp], #32
     1bc:	ret
     1c0:	ldr	w1, [x19, #20]
     1c4:	mov	x0, #0x0                   	// #0
     1c8:	add	w1, w1, #0x1
     1cc:	str	w1, [x19, #20]
     1d0:	b	1a4 <gcov_read_words.constprop.1+0x84>
     1d4:	nop

00000000000001d8 <gcov_version.isra.0.part.0>:
     1d8:	stp	x29, x30, [sp, #-336]!
     1dc:	mov	w3, #0x3941                	// #14657
     1e0:	rev	w1, w1
     1e4:	mov	x29, sp
     1e8:	movk	w3, #0x2a32, lsl #16
     1ec:	stp	x19, x20, [sp, #16]
     1f0:	mov	x19, x2
     1f4:	stp	x21, x22, [sp, #32]
     1f8:	str	x23, [sp, #48]
     1fc:	str	w1, [sp, #64]
     200:	str	w3, [sp, #72]
     204:	cbz	x2, 2b0 <gcov_version.isra.0.part.0+0xd8>
     208:	add	x22, sp, #0xd0
     20c:	adrp	x20, 0 <gcov_error>
     210:	adrp	x21, 0 <gcov_error>
     214:	add	x20, x20, #0x0
     218:	add	x21, x21, #0x0
     21c:	mov	x4, x20
     220:	mov	x1, x21
     224:	mov	x0, x22
     228:	mov	w3, #0x2                   	// #2
     22c:	mov	w2, #0x9                   	// #9
     230:	bl	0 <sprintf>
     234:	ldrb	w0, [sp, #64]
     238:	sub	w0, w0, #0x41
     23c:	and	w1, w0, #0xff
     240:	cmp	w1, #0x19
     244:	b.hi	25c <gcov_version.isra.0.part.0+0x84>  // b.pmore
     248:	ldrb	w2, [sp, #65]
     24c:	sub	w2, w2, #0x30
     250:	and	w1, w2, #0xff
     254:	cmp	w1, #0x9
     258:	b.ls	2b8 <gcov_version.isra.0.part.0+0xe0>  // b.plast
     25c:	adrp	x0, 0 <gcov_error>
     260:	add	x0, x0, #0x0
     264:	add	x23, sp, #0x50
     268:	ldr	x1, [x0]
     26c:	str	x1, [sp, #80]
     270:	ldrh	w0, [x0, #8]
     274:	strh	w0, [sp, #88]
     278:	mov	x4, x23
     27c:	mov	x2, x22
     280:	mov	x1, x19
     284:	add	x5, sp, #0x40
     288:	add	x3, sp, #0x48
     28c:	adrp	x0, 0 <gcov_error>
     290:	add	x0, x0, #0x0
     294:	bl	0 <gcov_error>
     298:	mov	w0, #0x0                   	// #0
     29c:	ldp	x19, x20, [sp, #16]
     2a0:	ldp	x21, x22, [sp, #32]
     2a4:	ldr	x23, [sp, #48]
     2a8:	ldp	x29, x30, [sp], #336
     2ac:	ret
     2b0:	ldr	x19, [x0]
     2b4:	b	208 <gcov_version.isra.0.part.0+0x30>
     2b8:	ldrb	w3, [sp, #66]
     2bc:	sub	w3, w3, #0x30
     2c0:	and	w1, w3, #0xff
     2c4:	cmp	w1, #0x9
     2c8:	b.hi	25c <gcov_version.isra.0.part.0+0x84>  // b.pmore
     2cc:	ldrb	w1, [sp, #67]
     2d0:	add	w0, w0, w0, lsl #2
     2d4:	add	x23, sp, #0x50
     2d8:	adrp	x4, 0 <gcov_error>
     2dc:	cmp	w1, #0x2a
     2e0:	add	x4, x4, #0x0
     2e4:	add	w2, w2, w0, lsl #1
     2e8:	mov	x1, x21
     2ec:	csel	x4, x4, x20, ne  // ne = any
     2f0:	mov	x0, x23
     2f4:	bl	0 <sprintf>
     2f8:	b	278 <gcov_version.isra.0.part.0+0xa0>
     2fc:	nop

0000000000000300 <__gcov_rewrite>:
     300:	adrp	x3, 1028 <gcov_do_dump+0x2d8>
     304:	mov	w4, #0xffffffff            	// #-1
     308:	mov	w2, #0x0                   	// #0
     30c:	mov	x1, #0x0                   	// #0
     310:	ldr	x3, [x3]
     314:	ldr	x0, [x3]
     318:	str	xzr, [x3, #8]
     31c:	str	w4, [x3, #28]
     320:	b	0 <fseek>
     324:	nop

0000000000000328 <__gcov_open>:
     328:	stp	x29, x30, [sp, #-80]!
     32c:	mov	x29, sp
     330:	stp	x19, x20, [sp, #16]
     334:	mov	x19, x0
     338:	adrp	x20, 1028 <gcov_do_dump+0x2d8>
     33c:	strh	wzr, [sp, #50]
     340:	stp	xzr, xzr, [sp, #56]
     344:	bl	0 <getpid>
     348:	adrp	x1, 0 <gcov_error>
     34c:	ldr	x3, [x20]
     350:	mov	w4, w0
     354:	ldr	q0, [x1]
     358:	mov	w5, #0x1                   	// #1
     35c:	mov	x0, x19
     360:	mov	w2, #0x1b6                 	// #438
     364:	mov	w1, #0x42                  	// #66
     368:	str	wzr, [x3, #24]
     36c:	stur	q0, [x3, #8]
     370:	strh	w5, [sp, #48]
     374:	str	w4, [sp, #72]
     378:	bl	0 <open>
     37c:	tbnz	w0, #31, 3f0 <__gcov_open+0xc8>
     380:	mov	w19, w0
     384:	str	x21, [sp, #32]
     388:	add	x21, sp, #0x30
     38c:	mov	x2, x21
     390:	mov	w0, w19
     394:	mov	w1, #0x7                   	// #7
     398:	bl	0 <fcntl>
     39c:	cbz	w0, 3b0 <__gcov_open+0x88>
     3a0:	bl	0 <__errno_location>
     3a4:	ldr	w0, [x0]
     3a8:	cmp	w0, #0x4
     3ac:	b.eq	38c <__gcov_open+0x64>  // b.none
     3b0:	mov	w0, w19
     3b4:	adrp	x1, 0 <gcov_error>
     3b8:	add	x1, x1, #0x0
     3bc:	bl	0 <fdopen>
     3c0:	ldr	x20, [x20]
     3c4:	str	x0, [x20]
     3c8:	cbz	x0, 400 <__gcov_open+0xd8>
     3cc:	mov	w19, #0x1                   	// #1
     3d0:	mov	x1, #0x0                   	// #0
     3d4:	str	w19, [x20, #28]
     3d8:	bl	0 <setbuf>
     3dc:	mov	w0, w19
     3e0:	ldp	x19, x20, [sp, #16]
     3e4:	ldr	x21, [sp, #32]
     3e8:	ldp	x29, x30, [sp], #80
     3ec:	ret
     3f0:	mov	w0, #0x0                   	// #0
     3f4:	ldp	x19, x20, [sp, #16]
     3f8:	ldp	x29, x30, [sp], #80
     3fc:	ret
     400:	mov	w0, w19
     404:	bl	0 <close>
     408:	mov	w0, #0x0                   	// #0
     40c:	ldp	x19, x20, [sp, #16]
     410:	ldr	x21, [sp, #32]
     414:	ldp	x29, x30, [sp], #80
     418:	ret
     41c:	nop

0000000000000420 <__gcov_close>:
     420:	stp	x29, x30, [sp, #-48]!
     424:	mov	x29, sp
     428:	stp	x19, x20, [sp, #16]
     42c:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     430:	ldr	x20, [x19]
     434:	ldr	x0, [x20]
     438:	cbz	x0, 45c <__gcov_close+0x3c>
     43c:	str	x21, [sp, #32]
     440:	ldr	w21, [x20, #12]
     444:	cbnz	w21, 474 <__gcov_close+0x54>
     448:	bl	0 <fclose>
     44c:	ldr	x0, [x19]
     450:	ldr	x21, [sp, #32]
     454:	str	xzr, [x0]
     458:	str	wzr, [x0, #16]
     45c:	ldr	x19, [x19]
     460:	str	wzr, [x19, #28]
     464:	ldr	w0, [x19, #24]
     468:	ldp	x19, x20, [sp, #16]
     46c:	ldp	x29, x30, [sp], #48
     470:	ret
     474:	ldr	w1, [x20, #28]
     478:	tbz	w1, #31, 448 <__gcov_close+0x28>
     47c:	mov	x3, x0
     480:	lsl	w1, w21, #2
     484:	add	x0, x20, #0x20
     488:	mov	x2, #0x1                   	// #1
     48c:	bl	0 <fwrite>
     490:	cmp	x0, #0x1
     494:	b.eq	4a0 <__gcov_close+0x80>  // b.none
     498:	mov	w0, #0x1                   	// #1
     49c:	str	w0, [x20, #24]
     4a0:	ldr	x1, [x19]
     4a4:	ldp	w3, w2, [x1, #8]
     4a8:	ldr	x0, [x1]
     4ac:	add	w3, w3, w21
     4b0:	sub	w21, w2, w21
     4b4:	stp	w3, w21, [x1, #8]
     4b8:	b	448 <__gcov_close+0x28>
     4bc:	nop

00000000000004c0 <__gcov_write_unsigned>:
     4c0:	stp	x29, x30, [sp, #-48]!
     4c4:	mov	x29, sp
     4c8:	stp	x19, x20, [sp, #16]
     4cc:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     4d0:	mov	w20, w0
     4d4:	str	x21, [sp, #32]
     4d8:	ldr	x21, [x19]
     4dc:	ldr	w1, [x21, #12]
     4e0:	cmp	w1, #0x3ff
     4e4:	b.hi	50c <__gcov_write_unsigned+0x4c>  // b.pmore
     4e8:	ldr	x19, [x19]
     4ec:	add	w0, w1, #0x1
     4f0:	ldr	x21, [sp, #32]
     4f4:	add	x1, x19, w1, uxtw #2
     4f8:	str	w0, [x19, #12]
     4fc:	str	w20, [x1, #32]
     500:	ldp	x19, x20, [sp, #16]
     504:	ldp	x29, x30, [sp], #48
     508:	ret
     50c:	mov	x0, x21
     510:	mov	x2, #0x1                   	// #1
     514:	mov	x1, #0x1000                	// #4096
     518:	ldr	x3, [x0], #32
     51c:	bl	0 <fwrite>
     520:	cmp	x0, #0x1
     524:	b.eq	530 <__gcov_write_unsigned+0x70>  // b.none
     528:	mov	w0, #0x1                   	// #1
     52c:	str	w0, [x21, #24]
     530:	ldr	x0, [x19]
     534:	adrp	x1, 0 <gcov_error>
     538:	ldr	d1, [x1]
     53c:	ldr	d0, [x0, #8]
     540:	ldr	w1, [x0, #12]
     544:	add	v0.2s, v0.2s, v1.2s
     548:	subs	w1, w1, #0x400
     54c:	str	d0, [x0, #8]
     550:	b.eq	4e8 <__gcov_write_unsigned+0x28>  // b.none
     554:	ldr	w2, [x0, #4128]
     558:	str	w2, [x0, #32]
     55c:	b	4e8 <__gcov_write_unsigned+0x28>

0000000000000560 <__gcov_write_counter>:
     560:	stp	x29, x30, [sp, #-48]!
     564:	mov	x29, sp
     568:	stp	x19, x20, [sp, #16]
     56c:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     570:	mov	x20, x0
     574:	str	x21, [sp, #32]
     578:	ldr	x21, [x19]
     57c:	ldr	w2, [x21, #12]
     580:	cmp	w2, #0x3ff
     584:	b.hi	5bc <__gcov_write_counter+0x5c>  // b.pmore
     588:	ldr	x1, [x19]
     58c:	mov	w3, w2
     590:	add	x3, x3, #0x8
     594:	add	w2, w2, #0x2
     598:	ldr	x21, [sp, #32]
     59c:	add	x0, x1, x3, lsl #2
     5a0:	str	w2, [x1, #12]
     5a4:	asr	x4, x20, #32
     5a8:	str	w20, [x1, x3, lsl #2]
     5ac:	ldp	x19, x20, [sp, #16]
     5b0:	str	w4, [x0, #4]
     5b4:	ldp	x29, x30, [sp], #48
     5b8:	ret
     5bc:	mov	x0, x21
     5c0:	mov	x2, #0x1                   	// #1
     5c4:	mov	x1, #0x1000                	// #4096
     5c8:	ldr	x3, [x0], #32
     5cc:	bl	0 <fwrite>
     5d0:	cmp	x0, #0x1
     5d4:	b.eq	5e0 <__gcov_write_counter+0x80>  // b.none
     5d8:	mov	w0, #0x1                   	// #1
     5dc:	str	w0, [x21, #24]
     5e0:	ldr	x0, [x19]
     5e4:	adrp	x1, 0 <gcov_error>
     5e8:	ldr	d1, [x1]
     5ec:	ldr	d0, [x0, #8]
     5f0:	ldr	w2, [x0, #12]
     5f4:	add	v0.2s, v0.2s, v1.2s
     5f8:	subs	w2, w2, #0x400
     5fc:	str	d0, [x0, #8]
     600:	b.eq	588 <__gcov_write_counter+0x28>  // b.none
     604:	ldr	w1, [x0, #4128]
     608:	str	w1, [x0, #32]
     60c:	b	588 <__gcov_write_counter+0x28>

0000000000000610 <__gcov_write_tag_length>:
     610:	stp	x29, x30, [sp, #-48]!
     614:	mov	x29, sp
     618:	stp	x19, x20, [sp, #16]
     61c:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     620:	mov	w20, w1
     624:	stp	x21, x22, [sp, #32]
     628:	mov	w21, w0
     62c:	ldr	x22, [x19]
     630:	ldr	w3, [x22, #12]
     634:	cmp	w3, #0x3ff
     638:	b.hi	66c <__gcov_write_tag_length+0x5c>  // b.pmore
     63c:	ldr	x2, [x19]
     640:	mov	w4, w3
     644:	add	x4, x4, #0x8
     648:	add	w3, w3, #0x2
     64c:	add	x0, x2, x4, lsl #2
     650:	str	w3, [x2, #12]
     654:	str	w21, [x2, x4, lsl #2]
     658:	ldp	x21, x22, [sp, #32]
     65c:	str	w20, [x0, #4]
     660:	ldp	x19, x20, [sp, #16]
     664:	ldp	x29, x30, [sp], #48
     668:	ret
     66c:	mov	x0, x22
     670:	mov	x2, #0x1                   	// #1
     674:	mov	x1, #0x1000                	// #4096
     678:	ldr	x3, [x0], #32
     67c:	bl	0 <fwrite>
     680:	cmp	x0, #0x1
     684:	b.eq	690 <__gcov_write_tag_length+0x80>  // b.none
     688:	mov	w0, #0x1                   	// #1
     68c:	str	w0, [x22, #24]
     690:	ldr	x0, [x19]
     694:	adrp	x1, 0 <gcov_error>
     698:	ldr	d1, [x1]
     69c:	ldr	d0, [x0, #8]
     6a0:	ldr	w3, [x0, #12]
     6a4:	add	v0.2s, v0.2s, v1.2s
     6a8:	subs	w3, w3, #0x400
     6ac:	str	d0, [x0, #8]
     6b0:	b.eq	63c <__gcov_write_tag_length+0x2c>  // b.none
     6b4:	ldr	w1, [x0, #4128]
     6b8:	str	w1, [x0, #32]
     6bc:	b	63c <__gcov_write_tag_length+0x2c>

00000000000006c0 <__gcov_write_summary>:
     6c0:	stp	x29, x30, [sp, #-48]!
     6c4:	mov	x29, sp
     6c8:	stp	x19, x20, [sp, #16]
     6cc:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     6d0:	ldr	x20, [x19]
     6d4:	stp	x21, x22, [sp, #32]
     6d8:	mov	w22, w0
     6dc:	mov	x21, x1
     6e0:	ldr	w2, [x20, #12]
     6e4:	cmp	w2, #0x3ff
     6e8:	b.hi	764 <__gcov_write_summary+0xa4>  // b.pmore
     6ec:	ldr	x20, [x19]
     6f0:	mov	w1, w2
     6f4:	add	x1, x1, #0x8
     6f8:	add	w2, w2, #0x2
     6fc:	mov	w3, #0x2                   	// #2
     700:	add	x0, x20, x1, lsl #2
     704:	str	w2, [x20, #12]
     708:	str	w22, [x20, x1, lsl #2]
     70c:	str	w3, [x0, #4]
     710:	ldr	w2, [x20, #12]
     714:	ldr	w22, [x21]
     718:	add	w0, w2, #0x1
     71c:	cmp	w2, #0x3ff
     720:	b.hi	80c <__gcov_write_summary+0x14c>  // b.pmore
     724:	ldr	x20, [x19]
     728:	cmp	w0, #0x3ff
     72c:	ldr	w21, [x21, #8]
     730:	add	x2, x20, w2, uxtw #2
     734:	str	w0, [x20, #12]
     738:	str	w22, [x2, #32]
     73c:	b.hi	7b8 <__gcov_write_summary+0xf8>  // b.pmore
     740:	ldr	x19, [x19]
     744:	add	w1, w0, #0x1
     748:	add	x0, x19, w0, uxtw #2
     74c:	str	w1, [x19, #12]
     750:	ldp	x19, x20, [sp, #16]
     754:	str	w21, [x0, #32]
     758:	ldp	x21, x22, [sp, #32]
     75c:	ldp	x29, x30, [sp], #48
     760:	ret
     764:	mov	x0, x20
     768:	mov	x2, #0x1                   	// #1
     76c:	mov	x1, #0x1000                	// #4096
     770:	ldr	x3, [x0], #32
     774:	bl	0 <fwrite>
     778:	cmp	x0, #0x1
     77c:	b.eq	788 <__gcov_write_summary+0xc8>  // b.none
     780:	mov	w0, #0x1                   	// #1
     784:	str	w0, [x20, #24]
     788:	ldr	x0, [x19]
     78c:	adrp	x1, 0 <gcov_error>
     790:	ldr	d1, [x1]
     794:	ldr	d0, [x0, #8]
     798:	ldr	w2, [x0, #12]
     79c:	add	v0.2s, v0.2s, v1.2s
     7a0:	subs	w2, w2, #0x400
     7a4:	str	d0, [x0, #8]
     7a8:	b.eq	6ec <__gcov_write_summary+0x2c>  // b.none
     7ac:	ldr	w1, [x0, #4128]
     7b0:	str	w1, [x0, #32]
     7b4:	b	6ec <__gcov_write_summary+0x2c>
     7b8:	mov	x0, x20
     7bc:	mov	x2, #0x1                   	// #1
     7c0:	mov	x1, #0x1000                	// #4096
     7c4:	ldr	x3, [x0], #32
     7c8:	bl	0 <fwrite>
     7cc:	cmp	x0, #0x1
     7d0:	b.eq	7dc <__gcov_write_summary+0x11c>  // b.none
     7d4:	mov	w0, #0x1                   	// #1
     7d8:	str	w0, [x20, #24]
     7dc:	ldr	x1, [x19]
     7e0:	adrp	x0, 0 <gcov_error>
     7e4:	ldr	d1, [x0]
     7e8:	ldr	d0, [x1, #8]
     7ec:	ldr	w0, [x1, #12]
     7f0:	add	v0.2s, v0.2s, v1.2s
     7f4:	subs	w0, w0, #0x400
     7f8:	str	d0, [x1, #8]
     7fc:	b.eq	740 <__gcov_write_summary+0x80>  // b.none
     800:	ldr	w2, [x1, #4128]
     804:	str	w2, [x1, #32]
     808:	b	740 <__gcov_write_summary+0x80>
     80c:	mov	x0, x20
     810:	mov	x2, #0x1                   	// #1
     814:	mov	x1, #0x1000                	// #4096
     818:	ldr	x3, [x0], #32
     81c:	bl	0 <fwrite>
     820:	cmp	x0, #0x1
     824:	b.eq	830 <__gcov_write_summary+0x170>  // b.none
     828:	mov	w0, #0x1                   	// #1
     82c:	str	w0, [x20, #24]
     830:	ldr	x1, [x19]
     834:	adrp	x0, 0 <gcov_error>
     838:	ldr	d1, [x0]
     83c:	ldr	d0, [x1, #8]
     840:	ldr	w2, [x1, #12]
     844:	add	v0.2s, v0.2s, v1.2s
     848:	sub	w0, w2, #0x3ff
     84c:	subs	w2, w2, #0x400
     850:	str	d0, [x1, #8]
     854:	b.eq	864 <__gcov_write_summary+0x1a4>  // b.none
     858:	ldr	w3, [x1, #4128]
     85c:	str	w3, [x1, #32]
     860:	b	724 <__gcov_write_summary+0x64>
     864:	ldr	w21, [x21, #8]
     868:	mov	w0, #0x1                   	// #1
     86c:	str	w22, [x1, #32]
     870:	b	740 <__gcov_write_summary+0x80>
     874:	nop

0000000000000878 <__gcov_read_unsigned>:
     878:	stp	x29, x30, [sp, #-32]!
     87c:	mov	x29, sp
     880:	stp	x19, x20, [sp, #16]
     884:	adrp	x20, 1028 <gcov_do_dump+0x2d8>
     888:	ldr	x19, [x20]
     88c:	ldr	w0, [x19, #28]
     890:	ldr	w3, [x19, #12]
     894:	cmp	w0, #0x0
     898:	ldr	w0, [x19, #16]
     89c:	b.le	904 <__gcov_read_unsigned+0x8c>
     8a0:	cmp	w0, w3
     8a4:	b.ne	8e4 <__gcov_read_unsigned+0x6c>  // b.any
     8a8:	ldr	w4, [x19, #8]
     8ac:	mov	x0, x19
     8b0:	stur	xzr, [x19, #12]
     8b4:	mov	x1, #0x1                   	// #1
     8b8:	add	w3, w4, w3
     8bc:	str	w3, [x19, #8]
     8c0:	ldr	x3, [x0], #32
     8c4:	mov	x2, #0x1000                	// #4096
     8c8:	bl	0 <fread>
     8cc:	lsr	x0, x0, #2
     8d0:	ldr	w1, [x19, #16]
     8d4:	add	w0, w1, w0
     8d8:	str	w0, [x19, #16]
     8dc:	cbz	w0, 914 <__gcov_read_unsigned+0x9c>
     8e0:	ldr	w3, [x19, #12]
     8e4:	ldr	x20, [x20]
     8e8:	add	w0, w3, #0x1
     8ec:	add	x3, x20, w3, uxtw #2
     8f0:	str	w0, [x20, #12]
     8f4:	ldr	w0, [x3, #32]
     8f8:	ldp	x19, x20, [sp, #16]
     8fc:	ldp	x29, x30, [sp], #32
     900:	ret
     904:	mov	w0, #0x0                   	// #0
     908:	ldp	x19, x20, [sp, #16]
     90c:	ldp	x29, x30, [sp], #32
     910:	ret
     914:	ldr	w1, [x19, #20]
     918:	add	w1, w1, #0x1
     91c:	str	w1, [x19, #20]
     920:	b	8f8 <__gcov_read_unsigned+0x80>
     924:	nop

0000000000000928 <__gcov_read_counter>:
     928:	stp	x29, x30, [sp, #-32]!
     92c:	mov	x29, sp
     930:	stp	x19, x20, [sp, #16]
     934:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     938:	ldr	x2, [x19]
     93c:	ldp	w1, w0, [x2, #12]
     940:	ldr	w3, [x2, #28]
     944:	sub	w0, w0, w1
     948:	cmp	w3, #0x0
     94c:	b.le	9e0 <__gcov_read_counter+0xb8>
     950:	cmp	w0, #0x1
     954:	b.hi	9b0 <__gcov_read_counter+0x88>  // b.pmore
     958:	ldr	w3, [x2, #8]
     95c:	add	w3, w3, w1
     960:	str	w3, [x2, #8]
     964:	cbz	w0, 974 <__gcov_read_counter+0x4c>
     968:	add	x3, x2, #0x20
     96c:	ldr	w1, [x3, w1, uxtw #2]
     970:	str	w1, [x2, #32]
     974:	ldr	x20, [x19]
     978:	mov	x1, #0x1                   	// #1
     97c:	mov	x2, #0x1000                	// #4096
     980:	mov	x4, x20
     984:	stp	wzr, w0, [x20, #12]
     988:	ldr	x3, [x4], #32
     98c:	add	x0, x4, w0, uxtw #2
     990:	bl	0 <fread>
     994:	ldr	w1, [x20, #16]
     998:	lsr	x0, x0, #2
     99c:	add	w1, w1, w0
     9a0:	str	w1, [x20, #16]
     9a4:	cmp	w1, #0x1
     9a8:	b.ls	9f0 <__gcov_read_counter+0xc8>  // b.plast
     9ac:	ldr	w1, [x20, #12]
     9b0:	ldr	x0, [x19]
     9b4:	mov	w2, w1
     9b8:	add	x2, x2, #0x8
     9bc:	add	w1, w1, #0x2
     9c0:	add	x3, x0, x2, lsl #2
     9c4:	str	w1, [x0, #12]
     9c8:	ldr	w1, [x0, x2, lsl #2]
     9cc:	ldr	w0, [x3, #4]
     9d0:	orr	x0, x1, x0, lsl #32
     9d4:	ldp	x19, x20, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	ret
     9e0:	mov	x0, #0x0                   	// #0
     9e4:	ldp	x19, x20, [sp, #16]
     9e8:	ldp	x29, x30, [sp], #32
     9ec:	ret
     9f0:	ldr	w2, [x20, #20]
     9f4:	mov	x0, #0x0                   	// #0
     9f8:	add	w2, w2, #0x2
     9fc:	sub	w1, w2, w1
     a00:	stp	wzr, w1, [x20, #16]
     a04:	b	9d4 <__gcov_read_counter+0xac>

0000000000000a08 <mangle_path>:
     a08:	stp	x29, x30, [sp, #-80]!
     a0c:	mov	x29, sp
     a10:	stp	x19, x20, [sp, #16]
     a14:	stp	x21, x22, [sp, #32]
     a18:	stp	x23, x24, [sp, #48]
     a1c:	mov	w23, #0x5e                  	// #94
     a20:	mov	w24, #0x23                  	// #35
     a24:	str	x0, [sp, #72]
     a28:	bl	0 <strlen>
     a2c:	add	x0, x0, #0x1
     a30:	bl	0 <malloc>
     a34:	ldr	x1, [sp, #72]
     a38:	mov	x22, x0
     a3c:	mov	x21, x0
     a40:	ldrb	w2, [x1]
     a44:	cbz	w2, a98 <mangle_path+0x90>
     a48:	mov	x20, x1
     a4c:	mov	w19, w2
     a50:	b	a5c <mangle_path+0x54>
     a54:	ldrb	w19, [x20, #1]!
     a58:	cbz	w19, a64 <mangle_path+0x5c>
     a5c:	cmp	w19, #0x2f
     a60:	b.ne	a54 <mangle_path+0x4c>  // b.any
     a64:	cmp	w2, #0x2e
     a68:	sub	x2, x20, x1
     a6c:	ccmp	x2, #0x2, #0x0, eq  // eq = none
     a70:	b.eq	ab4 <mangle_path+0xac>  // b.none
     a74:	mov	x0, x21
     a78:	add	x21, x21, x2
     a7c:	bl	0 <memcpy>
     a80:	mov	x1, x20
     a84:	cbz	w19, a40 <mangle_path+0x38>
     a88:	ldrb	w2, [x20, #1]
     a8c:	add	x1, x20, #0x1
     a90:	strb	w24, [x21], #1
     a94:	cbnz	w2, a48 <mangle_path+0x40>
     a98:	strb	wzr, [x21]
     a9c:	mov	x0, x22
     aa0:	ldp	x19, x20, [sp, #16]
     aa4:	ldp	x21, x22, [sp, #32]
     aa8:	ldp	x23, x24, [sp, #48]
     aac:	ldp	x29, x30, [sp], #80
     ab0:	ret
     ab4:	ldrb	w0, [x1, #1]
     ab8:	cmp	w0, #0x2e
     abc:	b.ne	a74 <mangle_path+0x6c>  // b.any
     ac0:	strb	w23, [x21], #1
     ac4:	b	a80 <mangle_path+0x78>

0000000000000ac8 <__gcov_read_summary>:
     ac8:	stp	x29, x30, [sp, #-48]!
     acc:	mov	x29, sp
     ad0:	stp	x19, x20, [sp, #16]
     ad4:	adrp	x20, 1028 <gcov_do_dump+0x2d8>
     ad8:	ldr	x19, [x20]
     adc:	ldr	w5, [x19, #28]
     ae0:	ldp	w1, w3, [x19, #12]
     ae4:	str	x21, [sp, #32]
     ae8:	cmp	w5, #0x0
     aec:	mov	x21, x0
     af0:	b.le	bd0 <__gcov_read_summary+0x108>
     af4:	cmp	w3, w1
     af8:	b.eq	b8c <__gcov_read_summary+0xc4>  // b.none
     afc:	ldr	x2, [x20]
     b00:	add	w4, w1, #0x1
     b04:	add	x1, x2, w1, uxtw #2
     b08:	str	w4, [x2, #12]
     b0c:	ldr	w0, [x1, #32]
     b10:	str	w0, [x21]
     b14:	cmp	w5, #0x0
     b18:	b.le	c1c <__gcov_read_summary+0x154>
     b1c:	cmp	w4, w3
     b20:	b.ne	b64 <__gcov_read_summary+0x9c>  // b.any
     b24:	ldr	x19, [x20]
     b28:	mov	x1, #0x1                   	// #1
     b2c:	mov	x2, #0x1000                	// #4096
     b30:	mov	x0, x19
     b34:	ldr	w5, [x19, #8]
     b38:	stur	xzr, [x19, #12]
     b3c:	ldr	x3, [x0], #32
     b40:	add	w4, w5, w4
     b44:	str	w4, [x19, #8]
     b48:	bl	0 <fread>
     b4c:	lsr	x0, x0, #2
     b50:	ldr	w1, [x19, #16]
     b54:	add	w0, w1, w0
     b58:	str	w0, [x19, #16]
     b5c:	cbz	w0, c08 <__gcov_read_summary+0x140>
     b60:	ldr	w4, [x19, #12]
     b64:	ldr	x20, [x20]
     b68:	add	w0, w4, #0x1
     b6c:	add	x4, x20, w4, uxtw #2
     b70:	str	w0, [x20, #12]
     b74:	ldr	w0, [x4, #32]
     b78:	ldp	x19, x20, [sp, #16]
     b7c:	str	x0, [x21, #8]
     b80:	ldr	x21, [sp, #32]
     b84:	ldp	x29, x30, [sp], #48
     b88:	ret
     b8c:	ldr	w4, [x19, #8]
     b90:	mov	x0, x19
     b94:	stur	xzr, [x19, #12]
     b98:	mov	x2, #0x1000                	// #4096
     b9c:	add	w3, w4, w3
     ba0:	str	w3, [x19, #8]
     ba4:	ldr	x3, [x0], #32
     ba8:	mov	x1, #0x1                   	// #1
     bac:	bl	0 <fread>
     bb0:	lsr	x0, x0, #2
     bb4:	ldr	w3, [x19, #16]
     bb8:	add	w3, w3, w0
     bbc:	str	w3, [x19, #16]
     bc0:	cbz	w3, bec <__gcov_read_summary+0x124>
     bc4:	ldr	w1, [x19, #12]
     bc8:	ldr	w5, [x19, #28]
     bcc:	b	afc <__gcov_read_summary+0x34>
     bd0:	mov	x0, #0x0                   	// #0
     bd4:	str	wzr, [x21]
     bd8:	ldp	x19, x20, [sp, #16]
     bdc:	str	x0, [x21, #8]
     be0:	ldr	x21, [sp, #32]
     be4:	ldp	x29, x30, [sp], #48
     be8:	ret
     bec:	ldr	w1, [x19, #20]
     bf0:	mov	w0, #0x0                   	// #0
     bf4:	ldr	w4, [x19, #12]
     bf8:	add	w1, w1, #0x1
     bfc:	ldr	w5, [x19, #28]
     c00:	str	w1, [x19, #20]
     c04:	b	b10 <__gcov_read_summary+0x48>
     c08:	ldr	w1, [x19, #20]
     c0c:	mov	x0, #0x0                   	// #0
     c10:	add	w1, w1, #0x1
     c14:	str	w1, [x19, #20]
     c18:	b	b78 <__gcov_read_summary+0xb0>
     c1c:	mov	x0, #0x0                   	// #0
     c20:	b	b78 <__gcov_read_summary+0xb0>
     c24:	nop

0000000000000c28 <__gcov_seek>:
     c28:	stp	x29, x30, [sp, #-48]!
     c2c:	mov	x29, sp
     c30:	stp	x19, x20, [sp, #16]
     c34:	adrp	x19, 1028 <gcov_do_dump+0x2d8>
     c38:	mov	w20, w0
     c3c:	stp	x21, x22, [sp, #32]
     c40:	ldr	x21, [x19]
     c44:	ldr	w22, [x21, #12]
     c48:	ldr	x0, [x21]
     c4c:	cbnz	w22, c80 <__gcov_seek+0x58>
     c50:	lsl	w1, w20, #2
     c54:	mov	w2, #0x0                   	// #0
     c58:	bl	0 <fseek>
     c5c:	ldr	x19, [x19]
     c60:	ldr	x0, [x19]
     c64:	bl	0 <ftell>
     c68:	asr	x0, x0, #2
     c6c:	ldp	x21, x22, [sp, #32]
     c70:	str	w0, [x19, #8]
     c74:	ldp	x19, x20, [sp, #16]
     c78:	ldp	x29, x30, [sp], #48
     c7c:	ret
     c80:	mov	x3, x0
     c84:	lsl	w1, w22, #2
     c88:	add	x0, x21, #0x20
     c8c:	mov	x2, #0x1                   	// #1
     c90:	bl	0 <fwrite>
     c94:	cmp	x0, #0x1
     c98:	b.eq	ca4 <__gcov_seek+0x7c>  // b.none
     c9c:	mov	w0, #0x1                   	// #1
     ca0:	str	w0, [x21, #24]
     ca4:	ldr	x1, [x19]
     ca8:	ldp	w3, w2, [x1, #8]
     cac:	ldr	x0, [x1]
     cb0:	add	w3, w3, w22
     cb4:	sub	w22, w2, w22
     cb8:	stp	w3, w22, [x1, #8]
     cbc:	b	c50 <__gcov_seek+0x28>

0000000000000cc0 <__gcov_sort_n_vals>:
     cc0:	cmp	w1, #0x2
     cc4:	b.le	d48 <__gcov_sort_n_vals+0x88>
     cc8:	sub	w1, w1, #0x3
     ccc:	add	x8, x0, #0x10
     cd0:	and	w12, w1, #0xfffffffe
     cd4:	mov	w9, #0x0                   	// #0
     cd8:	ldp	x11, x6, [x8]
     cdc:	mov	w2, w9
     ce0:	mov	w10, w9
     ce4:	orr	w7, w9, #0xfffffffe
     ce8:	mov	x1, x8
     cec:	add	w9, w9, #0x2
     cf0:	ldur	x4, [x1, #-8]
     cf4:	mov	x3, x1
     cf8:	sub	w2, w2, #0x2
     cfc:	add	x5, x1, #0x8
     d00:	cmp	x6, x4
     d04:	b.le	d34 <__gcov_sort_n_vals+0x74>
     d08:	ldur	x5, [x1, #-16]
     d0c:	stp	x5, x4, [x1]
     d10:	cmp	w2, w7
     d14:	sub	x1, x3, #0x10
     d18:	b.ne	cf0 <__gcov_sort_n_vals+0x30>  // b.any
     d1c:	sxtw	x1, w2
     d20:	add	x1, x1, #0x2
     d24:	lsl	x1, x1, #3
     d28:	add	x5, x1, #0x8
     d2c:	add	x3, x0, x1
     d30:	add	x5, x0, x5
     d34:	str	x11, [x3]
     d38:	add	x8, x8, #0x10
     d3c:	str	x6, [x5]
     d40:	cmp	w12, w10
     d44:	b.ne	cd8 <__gcov_sort_n_vals+0x18>  // b.any
     d48:	ret
     d4c:	nop

0000000000000d50 <gcov_do_dump>:
     d50:	stp	x29, x30, [sp, #-240]!
     d54:	mov	x29, sp
     d58:	stp	x19, x20, [sp, #16]
     d5c:	mov	x20, x0
     d60:	mov	x19, x0
     d64:	stp	x21, x22, [sp, #32]
     d68:	stp	x23, x24, [sp, #48]
     d6c:	str	w1, [sp, #188]
     d70:	cbz	x0, e70 <gcov_do_dump+0x120>
     d74:	movi	v3.4s, #0x0
     d78:	mov	x8, x0
     d7c:	mov	x19, #0x0                   	// #0
     d80:	ldr	w6, [x8, #104]
     d84:	cbz	w6, e68 <gcov_do_dump+0x118>
     d88:	ldr	x7, [x8, #112]
     d8c:	mov	x4, #0x0                   	// #0
     d90:	ldr	x0, [x7, x4, lsl #3]
     d94:	ldr	w2, [x0, #24]
     d98:	cbz	w2, e5c <gcov_do_dump+0x10c>
     d9c:	sub	w1, w2, #0x1
     da0:	cmp	w1, #0x4
     da4:	ldr	x3, [x0, #32]
     da8:	b.ls	101c <gcov_do_dump+0x2cc>  // b.plast
     dac:	lsr	w1, w2, #1
     db0:	dup	v0.2d, x19
     db4:	mov	x0, x3
     db8:	add	x1, x3, w1, uxtw #4
     dbc:	nop
     dc0:	ldr	q1, [x0], #16
     dc4:	cmgt	v2.2d, v1.2d, v0.2d
     dc8:	cmp	x1, x0
     dcc:	bit	v0.16b, v1.16b, v2.16b
     dd0:	b.ne	dc0 <gcov_do_dump+0x70>  // b.any
     dd4:	ext	v2.16b, v0.16b, v3.16b, #8
     dd8:	and	w0, w2, #0xfffffffe
     ddc:	cmgt	v1.2d, v2.2d, v0.2d
     de0:	bit	v0.16b, v2.16b, v1.16b
     de4:	mov	x19, v0.d[0]
     de8:	tbz	w2, #0, e5c <gcov_do_dump+0x10c>
     dec:	mov	w1, w0
     df0:	add	w5, w0, #0x1
     df4:	ldr	x1, [x3, x1, lsl #3]
     df8:	cmp	x19, x1
     dfc:	csel	x19, x19, x1, ge  // ge = tcont
     e00:	cmp	w5, w2
     e04:	b.cs	e5c <gcov_do_dump+0x10c>  // b.hs, b.nlast
     e08:	ldr	x5, [x3, w5, uxtw #3]
     e0c:	add	w1, w0, #0x2
     e10:	cmp	x19, x5
     e14:	csel	x19, x19, x5, ge  // ge = tcont
     e18:	cmp	w1, w2
     e1c:	b.cs	e5c <gcov_do_dump+0x10c>  // b.hs, b.nlast
     e20:	ldr	x1, [x3, x1, lsl #3]
     e24:	add	w5, w0, #0x3
     e28:	cmp	x19, x1
     e2c:	csel	x19, x19, x1, ge  // ge = tcont
     e30:	cmp	w5, w2
     e34:	b.cs	e5c <gcov_do_dump+0x10c>  // b.hs, b.nlast
     e38:	ldr	x1, [x3, w5, uxtw #3]
     e3c:	add	w0, w0, #0x4
     e40:	cmp	x19, x1
     e44:	csel	x19, x19, x1, ge  // ge = tcont
     e48:	cmp	w2, w0
     e4c:	b.ls	e5c <gcov_do_dump+0x10c>  // b.plast
     e50:	ldr	x0, [x3, x0, lsl #3]
     e54:	cmp	x19, x0
     e58:	csel	x19, x19, x0, ge  // ge = tcont
     e5c:	add	x4, x4, #0x1
     e60:	cmp	w6, w4
     e64:	b.ne	d90 <gcov_do_dump+0x40>  // b.any
     e68:	ldr	x8, [x8, #8]
     e6c:	cbnz	x8, d80 <gcov_do_dump+0x30>
     e70:	adrp	x0, 0 <gcov_error>
     e74:	add	x0, x0, #0x0
     e78:	bl	0 <getenv>
     e7c:	cbz	x0, 2244 <gcov_do_dump+0x14f4>
     e80:	mov	x1, #0x0                   	// #0
     e84:	mov	w2, #0xa                   	// #10
     e88:	bl	0 <strtol>
     e8c:	mov	x1, x0
     e90:	cmp	w1, #0x0
     e94:	adrp	x0, 0 <gcov_error>
     e98:	csel	w1, w1, wzr, ge  // ge = tcont
     e9c:	add	x0, x0, #0x0
     ea0:	str	w1, [sp, #132]
     ea4:	bl	0 <getenv>
     ea8:	mov	x21, x0
     eac:	cbz	x0, 2278 <gcov_do_dump+0x1528>
     eb0:	bl	0 <strlen>
     eb4:	cbz	x0, 2278 <gcov_do_dump+0x1528>
     eb8:	sub	x22, x0, #0x1
     ebc:	ldrb	w1, [x21, x22]
     ec0:	cmp	w1, #0x2f
     ec4:	b.eq	2274 <gcov_do_dump+0x1524>  // b.none
     ec8:	mov	x22, x0
     ecc:	add	x0, x0, #0x1
     ed0:	bl	0 <malloc>
     ed4:	str	x0, [sp, #152]
     ed8:	mov	x1, x21
     edc:	mov	x2, x22
     ee0:	bl	0 <memcpy>
     ee4:	strb	wzr, [x0, x22]
     ee8:	adrp	x21, 1028 <gcov_do_dump+0x2d8>
     eec:	ldr	x23, [x21]
     ef0:	add	x0, x23, #0x20
     ef4:	str	x0, [sp, #200]
     ef8:	cbz	x20, 123c <gcov_do_dump+0x4ec>
     efc:	stp	x25, x26, [sp, #64]
     f00:	stp	x27, x28, [sp, #80]
     f04:	str	x19, [sp, #192]
     f08:	adrp	x0, 0 <gcov_error>
     f0c:	ldr	x1, [x20, #96]
     f10:	str	xzr, [x0]
     f14:	cbz	x1, 1024 <gcov_do_dump+0x2d4>
     f18:	ldr	w5, [x20, #104]
     f1c:	cbz	w5, 1024 <gcov_do_dump+0x2d4>
     f20:	mov	w24, #0x8e39                	// #36409
     f24:	mov	x22, #0x0                   	// #0
     f28:	movk	w24, #0x38e3, lsl #16
     f2c:	nop
     f30:	ldr	x0, [x20, #112]
     f34:	ldr	x2, [x20, #32]
     f38:	ldr	x0, [x0, x22, lsl #3]
     f3c:	cmp	x2, #0x0
     f40:	ldr	x2, [x20, #40]
     f44:	add	x3, x0, #0x18
     f48:	add	x0, x0, #0x28
     f4c:	ldr	x4, [x20, #48]
     f50:	csel	x0, x0, x3, ne  // ne = any
     f54:	cmp	x2, #0x0
     f58:	add	x2, x0, #0x10
     f5c:	csel	x0, x2, x0, ne  // ne = any
     f60:	cmp	x4, #0x0
     f64:	ldp	x2, x4, [x20, #56]
     f68:	add	x3, x0, #0x10
     f6c:	csel	x0, x3, x0, ne  // ne = any
     f70:	cmp	x2, #0x0
     f74:	add	x2, x0, #0x10
     f78:	csel	x0, x2, x0, ne  // ne = any
     f7c:	cmp	x4, #0x0
     f80:	ldp	x2, x4, [x20, #72]
     f84:	add	x3, x0, #0x10
     f88:	csel	x0, x3, x0, ne  // ne = any
     f8c:	cmp	x2, #0x0
     f90:	add	x2, x0, #0x10
     f94:	csel	x0, x2, x0, ne  // ne = any
     f98:	cmp	x4, #0x0
     f9c:	ldr	x2, [x20, #88]
     fa0:	add	x3, x0, #0x10
     fa4:	csel	x0, x3, x0, ne  // ne = any
     fa8:	cmp	x2, #0x0
     fac:	add	x2, x0, #0x10
     fb0:	csel	x0, x2, x0, ne  // ne = any
     fb4:	cbz	x1, 1008 <gcov_do_dump+0x2b8>
     fb8:	ldr	w25, [x0]
     fbc:	smull	x19, w25, w24
     fc0:	asr	x19, x19, #33
     fc4:	sub	w19, w19, w25, asr #31
     fc8:	add	w19, w19, w19, lsl #3
     fcc:	subs	w19, w25, w19
     fd0:	b.ne	24a8 <gcov_do_dump+0x1758>  // b.any
     fd4:	cmp	w25, #0x0
     fd8:	ldr	x26, [x0, #8]
     fdc:	b.le	1008 <gcov_do_dump+0x2b8>
     fe0:	add	x26, x26, #0x8
     fe4:	nop
     fe8:	mov	x0, x26
     fec:	add	w19, w19, #0x9
     ff0:	mov	w1, #0x8                   	// #8
     ff4:	bl	cc0 <__gcov_sort_n_vals>
     ff8:	cmp	w25, w19
     ffc:	add	x26, x26, #0x48
    1000:	b.gt	fe8 <gcov_do_dump+0x298>
    1004:	ldr	w5, [x20, #104]
    1008:	add	x22, x22, #0x1
    100c:	cmp	w5, w22
    1010:	b.eq	1024 <gcov_do_dump+0x2d4>  // b.none
    1014:	ldr	x1, [x20, #96]
    1018:	b	f30 <gcov_do_dump+0x1e0>
    101c:	mov	w0, #0x0                   	// #0
    1020:	b	dec <gcov_do_dump+0x9c>
    1024:	ldr	w0, [sp, #132]
    1028:	ldr	x19, [x20, #24]
    102c:	cbz	w0, 1070 <gcov_do_dump+0x320>
    1030:	ldrb	w0, [x19]
    1034:	mov	x1, x19
    1038:	cmp	w0, #0x2f
    103c:	b.ne	1048 <gcov_do_dump+0x2f8>  // b.any
    1040:	ldrb	w0, [x19, #1]
    1044:	add	x1, x19, #0x1
    1048:	ldr	w2, [sp, #132]
    104c:	cbz	w0, 1070 <gcov_do_dump+0x320>
    1050:	cmp	w0, #0x2f
    1054:	b.ne	1060 <gcov_do_dump+0x310>  // b.any
    1058:	sub	w2, w2, #0x1
    105c:	mov	x19, x1
    1060:	ldrb	w0, [x1, #1]!
    1064:	cmp	w0, #0x0
    1068:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    106c:	b.ne	1050 <gcov_do_dump+0x300>  // b.any
    1070:	mov	x0, x19
    1074:	bl	0 <strlen>
    1078:	ldr	x27, [sp, #152]
    107c:	mov	x22, x0
    1080:	cbz	x27, 141c <gcov_do_dump+0x6cc>
    1084:	add	x22, x22, #0x2
    1088:	mov	x0, x27
    108c:	bl	0 <strlen>
    1090:	ldrb	w24, [x19]
    1094:	mov	x25, x0
    1098:	add	x0, x22, x0
    109c:	bl	0 <malloc>
    10a0:	strb	wzr, [x0]
    10a4:	mov	x26, x0
    10a8:	cbz	x25, 10b8 <gcov_do_dump+0x368>
    10ac:	add	x2, x25, #0x1
    10b0:	mov	x1, x27
    10b4:	bl	0 <memcpy>
    10b8:	cmp	w24, #0x2f
    10bc:	b.eq	10c8 <gcov_do_dump+0x378>  // b.none
    10c0:	mov	w0, #0x2f                  	// #47
    10c4:	strb	w0, [x26], #1
    10c8:	mov	x1, x19
    10cc:	mov	x0, x26
    10d0:	bl	0 <strcat>
    10d4:	strb	wzr, [sp, #216]
    10d8:	ldrb	w1, [x26]
    10dc:	cbz	w1, 1444 <gcov_do_dump+0x6f4>
    10e0:	adrp	x28, 0 <gcov_error>
    10e4:	mov	x24, x26
    10e8:	add	x0, x28, #0x0
    10ec:	add	x27, sp, #0xe0
    10f0:	str	x0, [sp, #104]
    10f4:	add	x0, sp, #0xd8
    10f8:	str	x0, [sp, #112]
    10fc:	nop
    1100:	mov	x25, x26
    1104:	cmp	w1, #0x25
    1108:	ldrb	w19, [x25, #1]!
    110c:	b.eq	1254 <gcov_do_dump+0x504>  // b.none
    1110:	mov	x26, x25
    1114:	mov	w1, w19
    1118:	cbnz	w1, 1100 <gcov_do_dump+0x3b0>
    111c:	nop
    1120:	mov	x0, x24
    1124:	str	x24, [sp, #112]
    1128:	bl	328 <__gcov_open>
    112c:	cbz	w0, 1334 <gcov_do_dump+0x5e4>
    1130:	bl	120 <gcov_read_words.constprop.1>
    1134:	cbz	x0, 1ab4 <gcov_do_dump+0xd64>
    1138:	ldr	w1, [x0]
    113c:	str	w1, [sp, #128]
    1140:	cbz	w1, 1450 <gcov_do_dump+0x700>
    1144:	mov	w0, #0x6461                	// #25697
    1148:	movk	w0, #0x6763, lsl #16
    114c:	cmp	w1, w0
    1150:	b.eq	1d1c <gcov_do_dump+0xfcc>  // b.none
    1154:	ldr	x1, [sp, #112]
    1158:	adrp	x0, 0 <gcov_error>
    115c:	add	x0, x0, #0x0
    1160:	bl	0 <gcov_error>
    1164:	adrp	x0, 0 <gcov_error>
    1168:	add	x26, x20, #0x20
    116c:	add	x19, x20, #0x68
    1170:	ldr	x24, [x0]
    1174:	cbz	x24, 11c8 <gcov_do_dump+0x478>
    1178:	mov	x27, x24
    117c:	mov	x22, x26
    1180:	ldr	x24, [x24]
    1184:	mov	w0, #0x0                   	// #0
    1188:	ldr	x1, [x22]
    118c:	cbz	x1, 11a8 <gcov_do_dump+0x458>
    1190:	ubfiz	x1, x0, #4, #32
    1194:	add	w25, w0, #0x1
    1198:	add	x0, x27, x1
    119c:	ldr	x0, [x0, #48]
    11a0:	bl	0 <free>
    11a4:	mov	w0, w25
    11a8:	add	x22, x22, #0x8
    11ac:	cmp	x22, x19
    11b0:	b.ne	1188 <gcov_do_dump+0x438>  // b.any
    11b4:	mov	x0, x27
    11b8:	bl	0 <free>
    11bc:	adrp	x0, 0 <gcov_error>
    11c0:	str	x24, [x0]
    11c4:	cbnz	x24, 1178 <gcov_do_dump+0x428>
    11c8:	ldr	x19, [x21]
    11cc:	ldr	x0, [x19]
    11d0:	cbz	x0, 11f4 <gcov_do_dump+0x4a4>
    11d4:	ldr	w22, [x19, #12]
    11d8:	cbz	w22, 11e4 <gcov_do_dump+0x494>
    11dc:	ldr	w1, [x19, #28]
    11e0:	tbnz	w1, #31, 2204 <gcov_do_dump+0x14b4>
    11e4:	bl	0 <fclose>
    11e8:	ldr	x0, [x21]
    11ec:	str	xzr, [x0]
    11f0:	str	wzr, [x0, #16]
    11f4:	ldr	x1, [x21]
    11f8:	ldr	w0, [x1, #24]
    11fc:	str	wzr, [x1, #28]
    1200:	cmp	w0, #0x0
    1204:	cbz	w0, 1224 <gcov_do_dump+0x4d4>
    1208:	adrp	x0, 0 <gcov_error>
    120c:	adrp	x1, 0 <gcov_error>
    1210:	add	x0, x0, #0x0
    1214:	add	x1, x1, #0x0
    1218:	csel	x0, x1, x0, lt  // lt = tstop
    121c:	ldr	x1, [sp, #112]
    1220:	bl	0 <gcov_error>
    1224:	ldr	x0, [sp, #112]
    1228:	bl	0 <free>
    122c:	ldr	x20, [x20, #8]
    1230:	cbnz	x20, f08 <gcov_do_dump+0x1b8>
    1234:	ldp	x25, x26, [sp, #64]
    1238:	ldp	x27, x28, [sp, #80]
    123c:	ldp	x19, x20, [sp, #16]
    1240:	ldp	x21, x22, [sp, #32]
    1244:	ldp	x23, x24, [sp, #48]
    1248:	ldr	x0, [sp, #152]
    124c:	ldp	x29, x30, [sp], #240
    1250:	b	0 <free>
    1254:	cbz	w19, 1120 <gcov_do_dump+0x3d0>
    1258:	mov	x0, x24
    125c:	bl	0 <strlen>
    1260:	cmp	w19, #0x70
    1264:	mov	x22, x0
    1268:	b.eq	1314 <gcov_do_dump+0x5c4>  // b.none
    126c:	cmp	w19, #0x71
    1270:	b.ne	1120 <gcov_do_dump+0x3d0>  // b.any
    1274:	ldrb	w0, [x26, #2]
    1278:	mov	x4, #0x0                   	// #0
    127c:	cmp	w0, #0x7b
    1280:	b.eq	1a6c <gcov_do_dump+0xd1c>  // b.none
    1284:	sub	x1, x25, x24
    1288:	sub	x19, x26, x24
    128c:	sub	w22, w22, w1
    1290:	mov	x0, x4
    1294:	str	x4, [sp, #96]
    1298:	and	x28, x19, #0xffffffff
    129c:	bl	0 <strlen>
    12a0:	mov	x26, x0
    12a4:	add	w1, w19, #0x1
    12a8:	add	w0, w22, w0
    12ac:	add	w0, w1, w0
    12b0:	and	x26, x26, #0xffffffff
    12b4:	bl	0 <malloc>
    12b8:	mov	x19, x0
    12bc:	mov	x1, x24
    12c0:	mov	x2, x28
    12c4:	bl	0 <memcpy>
    12c8:	add	x0, x0, x28
    12cc:	ldr	x4, [sp, #96]
    12d0:	mov	x2, x26
    12d4:	mov	x1, x4
    12d8:	bl	0 <memcpy>
    12dc:	add	x0, x0, x26
    12e0:	mov	x1, x25
    12e4:	mov	w2, w22
    12e8:	bl	0 <memcpy>
    12ec:	mov	x1, x0
    12f0:	add	x26, x28, x26
    12f4:	mov	x0, x24
    12f8:	add	x26, x19, x26
    12fc:	mov	x24, x19
    1300:	strb	wzr, [x1, w22, uxtw]
    1304:	bl	0 <free>
    1308:	ldrb	w1, [x26, #1]!
    130c:	cbnz	w1, 1100 <gcov_do_dump+0x3b0>
    1310:	b	1120 <gcov_do_dump+0x3d0>
    1314:	bl	0 <getpid>
    1318:	mov	w2, w0
    131c:	ldr	x1, [sp, #104]
    1320:	mov	x0, x27
    1324:	add	x25, x26, #0x2
    1328:	bl	0 <sprintf>
    132c:	mov	x4, x27
    1330:	b	1284 <gcov_do_dump+0x534>
    1334:	ldr	x24, [sp, #112]
    1338:	ldrb	w22, [x24]
    133c:	cmp	w22, #0x2f
    1340:	b.ne	1350 <gcov_do_dump+0x600>  // b.any
    1344:	mov	x0, x24
    1348:	add	x24, x24, #0x1
    134c:	ldrb	w22, [x0, #1]
    1350:	mov	w19, #0x2f                  	// #47
    1354:	cbz	w22, 1394 <gcov_do_dump+0x644>
    1358:	ldr	x25, [sp, #112]
    135c:	b	1368 <gcov_do_dump+0x618>
    1360:	ldrb	w22, [x24, #1]!
    1364:	cbz	w22, 1394 <gcov_do_dump+0x644>
    1368:	cmp	w22, #0x2f
    136c:	b.ne	1360 <gcov_do_dump+0x610>  // b.any
    1370:	strb	wzr, [x24]
    1374:	mov	x0, x25
    1378:	mov	w1, #0x0                   	// #0
    137c:	bl	0 <access>
    1380:	cmn	w0, #0x1
    1384:	b.eq	13c0 <gcov_do_dump+0x670>  // b.none
    1388:	strb	w19, [x24]
    138c:	ldrb	w22, [x24, #1]!
    1390:	cbnz	w22, 1368 <gcov_do_dump+0x618>
    1394:	ldr	x0, [sp, #112]
    1398:	bl	328 <__gcov_open>
    139c:	cbnz	w0, 1130 <gcov_do_dump+0x3e0>
    13a0:	adrp	x0, 0 <stderr>
    13a4:	adrp	x1, 0 <gcov_error>
    13a8:	ldr	x2, [sp, #112]
    13ac:	add	x1, x1, #0x0
    13b0:	ldr	x0, [x0]
    13b4:	ldr	x0, [x0]
    13b8:	bl	0 <fprintf>
    13bc:	b	1224 <gcov_do_dump+0x4d4>
    13c0:	mov	x0, x25
    13c4:	mov	w1, #0x1ed                 	// #493
    13c8:	bl	0 <mkdir>
    13cc:	cmn	w0, #0x1
    13d0:	b.ne	1388 <gcov_do_dump+0x638>  // b.any
    13d4:	bl	0 <__errno_location>
    13d8:	ldr	w0, [x0]
    13dc:	cmp	w0, #0x11
    13e0:	b.eq	1388 <gcov_do_dump+0x638>  // b.none
    13e4:	ldr	x19, [sp, #112]
    13e8:	adrp	x0, 0 <gcov_error>
    13ec:	add	x0, x0, #0x0
    13f0:	mov	x1, x19
    13f4:	bl	0 <gcov_error>
    13f8:	adrp	x0, 0 <stderr>
    13fc:	strb	w22, [x24]
    1400:	mov	x2, x19
    1404:	adrp	x1, 0 <gcov_error>
    1408:	ldr	x0, [x0]
    140c:	add	x1, x1, #0x0
    1410:	ldr	x0, [x0]
    1414:	bl	0 <fprintf>
    1418:	b	1224 <gcov_do_dump+0x4d4>
    141c:	add	x0, x0, #0x2
    1420:	bl	0 <malloc>
    1424:	mov	x26, x0
    1428:	strb	wzr, [x0]
    142c:	mov	x1, x19
    1430:	mov	x0, x26
    1434:	bl	0 <strcat>
    1438:	strb	wzr, [sp, #216]
    143c:	ldrb	w1, [x26]
    1440:	cbnz	w1, 10e0 <gcov_do_dump+0x390>
    1444:	mov	x0, x26
    1448:	str	x26, [sp, #112]
    144c:	b	1128 <gcov_do_dump+0x3d8>
    1450:	str	xzr, [sp, #176]
    1454:	str	wzr, [sp, #184]
    1458:	ldr	x3, [x21]
    145c:	mov	w4, #0xffffffff            	// #-1
    1460:	mov	w2, #0x0                   	// #0
    1464:	mov	x1, #0x0                   	// #0
    1468:	ldr	x0, [x3]
    146c:	str	xzr, [x3, #8]
    1470:	str	w4, [x3, #28]
    1474:	bl	0 <fseek>
    1478:	ldr	w0, [sp, #188]
    147c:	cbnz	w0, 149c <gcov_do_dump+0x74c>
    1480:	ldr	w0, [sp, #128]
    1484:	ldr	w1, [sp, #192]
    1488:	add	w0, w0, #0x1
    148c:	str	w0, [sp, #128]
    1490:	ldr	w0, [sp, #176]
    1494:	add	w0, w0, w1
    1498:	str	w0, [sp, #184]
    149c:	ldr	x19, [x21]
    14a0:	ldr	w0, [x19, #12]
    14a4:	cmp	w0, #0x3ff
    14a8:	b.hi	1c98 <gcov_do_dump+0xf48>  // b.pmore
    14ac:	ldr	x19, [x21]
    14b0:	mov	w1, w0
    14b4:	add	x1, x1, #0x8
    14b8:	add	w0, w0, #0x2
    14bc:	mov	w4, #0x6461                	// #25697
    14c0:	mov	w3, #0x322a                	// #12842
    14c4:	add	x2, x19, x1, lsl #2
    14c8:	str	w0, [x19, #12]
    14cc:	movk	w4, #0x6763, lsl #16
    14d0:	str	w4, [x19, x1, lsl #2]
    14d4:	movk	w3, #0x4139, lsl #16
    14d8:	str	w3, [x2, #4]
    14dc:	ldr	w1, [x19, #12]
    14e0:	ldr	w22, [x20, #16]
    14e4:	add	w0, w1, #0x1
    14e8:	cmp	w1, #0x3ff
    14ec:	b.hi	1bd8 <gcov_do_dump+0xe88>  // b.pmore
    14f0:	ldr	x19, [x21]
    14f4:	cmp	w0, #0x3ff
    14f8:	add	x1, x19, w1, uxtw #2
    14fc:	str	w0, [x19, #12]
    1500:	str	w22, [x1, #32]
    1504:	b.hi	1c44 <gcov_do_dump+0xef4>  // b.pmore
    1508:	ldr	x19, [x21]
    150c:	mov	w1, w0
    1510:	add	x1, x1, #0x8
    1514:	add	w0, w0, #0x2
    1518:	mov	w4, #0xa1000000            	// #-1593835520
    151c:	mov	w3, #0x2                   	// #2
    1520:	add	x2, x19, x1, lsl #2
    1524:	str	w0, [x19, #12]
    1528:	str	w4, [x19, x1, lsl #2]
    152c:	str	w3, [x2, #4]
    1530:	ldr	w1, [x19, #12]
    1534:	add	w0, w1, #0x1
    1538:	cmp	w1, #0x3ff
    153c:	b.hi	1b80 <gcov_do_dump+0xe30>  // b.pmore
    1540:	ldr	x19, [x21]
    1544:	cmp	w0, #0x3ff
    1548:	ldr	w2, [sp, #128]
    154c:	add	x1, x19, w1, uxtw #2
    1550:	str	w0, [x19, #12]
    1554:	str	w2, [x1, #32]
    1558:	b.hi	1b2c <gcov_do_dump+0xddc>  // b.pmore
    155c:	ldr	x1, [x21]
    1560:	add	w2, w0, #0x1
    1564:	ldr	w3, [x20, #104]
    1568:	add	x0, x1, w0, uxtw #2
    156c:	str	w2, [x1, #12]
    1570:	ldr	w1, [sp, #184]
    1574:	str	w1, [x0, #32]
    1578:	cbz	w3, 1994 <gcov_do_dump+0xc44>
    157c:	ldr	x27, [x21]
    1580:	str	wzr, [sp, #96]
    1584:	str	x20, [sp, #104]
    1588:	add	x26, x27, #0x20
    158c:	str	x23, [sp, #136]
    1590:	mov	x23, x27
    1594:	b	1608 <gcov_do_dump+0x8b8>
    1598:	ldr	x1, [sp, #104]
    159c:	ldr	w3, [sp, #96]
    15a0:	ldr	x0, [x1, #112]
    15a4:	ldr	x19, [x0, w3, uxtw #3]
    15a8:	cbz	x19, 15b8 <gcov_do_dump+0x868>
    15ac:	ldr	x0, [x19]
    15b0:	cmp	x0, x1
    15b4:	b.eq	1978 <gcov_do_dump+0xc28>  // b.none
    15b8:	cmp	w2, #0x3ff
    15bc:	b.hi	18fc <gcov_do_dump+0xbac>  // b.pmore
    15c0:	ldr	x1, [x21]
    15c4:	mov	w0, w2
    15c8:	add	x0, x0, #0x8
    15cc:	add	w2, w2, #0x2
    15d0:	mov	w4, #0x1000000             	// #16777216
    15d4:	add	x3, x1, x0, lsl #2
    15d8:	str	w2, [x1, #12]
    15dc:	str	w4, [x1, x0, lsl #2]
    15e0:	str	wzr, [x3, #4]
    15e4:	ldr	w1, [sp, #96]
    15e8:	ldr	x0, [x21]
    15ec:	add	w2, w1, #0x1
    15f0:	ldr	x1, [sp, #104]
    15f4:	str	w2, [sp, #96]
    15f8:	ldr	w1, [x1, #104]
    15fc:	cmp	w2, w1
    1600:	ldr	w2, [x0, #12]
    1604:	b.eq	198c <gcov_do_dump+0xc3c>  // b.none
    1608:	adrp	x0, 0 <gcov_error>
    160c:	ldr	x19, [x0]
    1610:	cbz	x19, 1598 <gcov_do_dump+0x848>
    1614:	ldr	w0, [x19, #8]
    1618:	ldr	w1, [sp, #96]
    161c:	cmp	w0, w1
    1620:	b.ne	1598 <gcov_do_dump+0x848>  // b.any
    1624:	mov	w0, #0x1                   	// #1
    1628:	str	w0, [sp, #120]
    162c:	add	x19, x19, #0x10
    1630:	cmp	w2, #0x3ff
    1634:	b.hi	1984 <gcov_do_dump+0xc34>  // b.pmore
    1638:	ldr	x1, [x21]
    163c:	mov	w0, w2
    1640:	add	x0, x0, #0x8
    1644:	add	w2, w2, #0x2
    1648:	mov	w5, #0x1000000             	// #16777216
    164c:	mov	w4, #0x3                   	// #3
    1650:	add	x3, x1, x0, lsl #2
    1654:	str	w2, [x1, #12]
    1658:	str	w5, [x1, x0, lsl #2]
    165c:	str	w4, [x3, #4]
    1660:	ldr	x22, [x21]
    1664:	ldr	w25, [x19, #8]
    1668:	ldr	w0, [x22, #12]
    166c:	add	w1, w0, #0x1
    1670:	cmp	w0, #0x3ff
    1674:	b.hi	1a14 <gcov_do_dump+0xcc4>  // b.pmore
    1678:	ldr	x22, [x21]
    167c:	cmp	w1, #0x3ff
    1680:	ldr	w4, [x19, #12]
    1684:	add	x0, x22, w0, uxtw #2
    1688:	str	w1, [x22, #12]
    168c:	str	w25, [x0, #32]
    1690:	b.hi	19b4 <gcov_do_dump+0xc64>  // b.pmore
    1694:	add	w0, w1, #0x1
    1698:	ldr	x22, [x21]
    169c:	cmp	w0, #0x3ff
    16a0:	ldr	w28, [x19, #16]
    16a4:	add	x1, x22, w1, uxtw #2
    16a8:	str	w0, [x22, #12]
    16ac:	str	w4, [x1, #32]
    16b0:	b.ls	1708 <gcov_do_dump+0x9b8>  // b.plast
    16b4:	mov	x0, x22
    16b8:	mov	x2, #0x1                   	// #1
    16bc:	mov	x1, #0x1000                	// #4096
    16c0:	ldr	x3, [x0], #32
    16c4:	bl	0 <fwrite>
    16c8:	cmp	x0, #0x1
    16cc:	b.eq	16d8 <gcov_do_dump+0x988>  // b.none
    16d0:	mov	w0, #0x1                   	// #1
    16d4:	str	w0, [x22, #24]
    16d8:	ldr	x1, [x21]
    16dc:	adrp	x0, 0 <gcov_error>
    16e0:	ldr	d1, [x0]
    16e4:	ldr	d0, [x1, #8]
    16e8:	ldr	w0, [x1, #12]
    16ec:	add	v0.2s, v0.2s, v1.2s
    16f0:	subs	w0, w0, #0x400
    16f4:	str	d0, [x1, #8]
    16f8:	b.eq	1708 <gcov_do_dump+0x9b8>  // b.none
    16fc:	ldr	w2, [x1, #4128]
    1700:	str	w2, [x1, #32]
    1704:	nop
    1708:	ldr	x1, [x21]
    170c:	add	w2, w0, #0x1
    1710:	ldr	x3, [sp, #104]
    1714:	add	x19, x19, #0x18
    1718:	add	x0, x1, w0, uxtw #2
    171c:	str	w2, [x1, #12]
    1720:	add	x22, x3, #0x20
    1724:	mov	x25, #0x0                   	// #0
    1728:	str	w28, [x0, #32]
    172c:	b	173c <gcov_do_dump+0x9ec>
    1730:	add	x25, x25, #0x8
    1734:	cmp	x25, #0x48
    1738:	b.eq	183c <gcov_do_dump+0xaec>  // b.none
    173c:	ldr	x0, [x22, x25]
    1740:	cbz	x0, 1730 <gcov_do_dump+0x9e0>
    1744:	ldr	x28, [x21]
    1748:	mov	w0, #0x1a10000             	// #27328512
    174c:	ldr	w4, [x19]
    1750:	add	w10, w0, w25, lsl #14
    1754:	ldr	w0, [x28, #12]
    1758:	lsl	w24, w4, #1
    175c:	cmp	w0, #0x3ff
    1760:	b.hi	18a0 <gcov_do_dump+0xb50>  // b.pmore
    1764:	ldr	x2, [x21]
    1768:	mov	w1, w0
    176c:	add	x1, x1, #0x8
    1770:	add	w0, w0, #0x2
    1774:	sub	w6, w4, #0x1
    1778:	add	x3, x2, x1, lsl #2
    177c:	ldr	x28, [x19, #8]
    1780:	str	w0, [x2, #12]
    1784:	str	w10, [x2, x1, lsl #2]
    1788:	ubfiz	x6, x6, #3, #32
    178c:	str	w24, [x3, #4]
    1790:	add	x6, x6, #0x8
    1794:	add	x24, x28, x6
    1798:	cbnz	w4, 17cc <gcov_do_dump+0xa7c>
    179c:	b	182c <gcov_do_dump+0xadc>
    17a0:	ldr	x2, [x21]
    17a4:	mov	w1, w0
    17a8:	add	x1, x1, #0x8
    17ac:	add	w0, w0, #0x2
    17b0:	asr	x5, x20, #32
    17b4:	cmp	x28, x24
    17b8:	add	x3, x2, x1, lsl #2
    17bc:	str	w0, [x2, #12]
    17c0:	str	w20, [x2, x1, lsl #2]
    17c4:	str	w5, [x3, #4]
    17c8:	b.eq	182c <gcov_do_dump+0xadc>  // b.none
    17cc:	ldr	w0, [x23, #12]
    17d0:	ldr	x20, [x28], #8
    17d4:	cmp	w0, #0x3ff
    17d8:	b.ls	17a0 <gcov_do_dump+0xa50>  // b.plast
    17dc:	ldr	x3, [x23]
    17e0:	mov	x0, x26
    17e4:	mov	x2, #0x1                   	// #1
    17e8:	mov	x1, #0x1000                	// #4096
    17ec:	bl	0 <fwrite>
    17f0:	cmp	x0, #0x1
    17f4:	b.eq	1800 <gcov_do_dump+0xab0>  // b.none
    17f8:	mov	w0, #0x1                   	// #1
    17fc:	str	w0, [x23, #24]
    1800:	adrp	x0, 0 <gcov_error>
    1804:	ldr	d0, [x27, #8]
    1808:	ldr	d1, [x0]
    180c:	ldr	w0, [x27, #12]
    1810:	add	v0.2s, v0.2s, v1.2s
    1814:	subs	w0, w0, #0x400
    1818:	str	d0, [x27, #8]
    181c:	b.eq	17a0 <gcov_do_dump+0xa50>  // b.none
    1820:	ldr	w1, [x27, #4128]
    1824:	str	w1, [x27, #32]
    1828:	b	17a0 <gcov_do_dump+0xa50>
    182c:	add	x25, x25, #0x8
    1830:	add	x19, x19, #0x10
    1834:	cmp	x25, #0x48
    1838:	b.ne	173c <gcov_do_dump+0x9ec>  // b.any
    183c:	ldr	w0, [sp, #120]
    1840:	cbz	w0, 15e4 <gcov_do_dump+0x894>
    1844:	adrp	x0, 0 <gcov_error>
    1848:	ldr	x28, [x0]
    184c:	cbz	x28, 22a0 <gcov_do_dump+0x1550>
    1850:	ldr	x0, [sp, #104]
    1854:	ldr	x20, [x28]
    1858:	add	x19, x0, #0x68
    185c:	mov	w0, #0x0                   	// #0
    1860:	ldr	x1, [x22]
    1864:	cbz	x1, 1880 <gcov_do_dump+0xb30>
    1868:	ubfiz	x1, x0, #4, #32
    186c:	add	w25, w0, #0x1
    1870:	add	x0, x28, x1
    1874:	ldr	x0, [x0, #48]
    1878:	bl	0 <free>
    187c:	mov	w0, w25
    1880:	add	x22, x22, #0x8
    1884:	cmp	x19, x22
    1888:	b.ne	1860 <gcov_do_dump+0xb10>  // b.any
    188c:	mov	x0, x28
    1890:	bl	0 <free>
    1894:	adrp	x0, 0 <gcov_error>
    1898:	str	x20, [x0]
    189c:	b	15e4 <gcov_do_dump+0x894>
    18a0:	mov	x0, x28
    18a4:	mov	x2, #0x1                   	// #1
    18a8:	mov	x1, #0x1000                	// #4096
    18ac:	stp	w4, w10, [sp, #124]
    18b0:	ldr	x3, [x0], #32
    18b4:	bl	0 <fwrite>
    18b8:	cmp	x0, #0x1
    18bc:	ldp	w4, w10, [sp, #124]
    18c0:	b.eq	18cc <gcov_do_dump+0xb7c>  // b.none
    18c4:	mov	w0, #0x1                   	// #1
    18c8:	str	w0, [x28, #24]
    18cc:	ldr	x1, [x21]
    18d0:	adrp	x0, 0 <gcov_error>
    18d4:	ldr	d1, [x0]
    18d8:	ldr	d0, [x1, #8]
    18dc:	ldr	w0, [x1, #12]
    18e0:	add	v0.2s, v0.2s, v1.2s
    18e4:	subs	w0, w0, #0x400
    18e8:	str	d0, [x1, #8]
    18ec:	b.eq	1764 <gcov_do_dump+0xa14>  // b.none
    18f0:	ldr	w2, [x1, #4128]
    18f4:	str	w2, [x1, #32]
    18f8:	b	1764 <gcov_do_dump+0xa14>
    18fc:	mov	w22, #0x0                   	// #0
    1900:	str	wzr, [sp, #120]
    1904:	ldr	x25, [x21]
    1908:	mov	x2, #0x1                   	// #1
    190c:	mov	x1, #0x1000                	// #4096
    1910:	mov	x0, x25
    1914:	ldr	x3, [x0], #32
    1918:	bl	0 <fwrite>
    191c:	cmp	x0, #0x1
    1920:	b.eq	192c <gcov_do_dump+0xbdc>  // b.none
    1924:	mov	w0, #0x1                   	// #1
    1928:	str	w0, [x25, #24]
    192c:	ldr	x2, [x21]
    1930:	ldp	w0, w1, [x2, #8]
    1934:	add	w0, w0, #0x400
    1938:	str	w0, [x2, #8]
    193c:	subs	w0, w1, #0x400
    1940:	b.eq	194c <gcov_do_dump+0xbfc>  // b.none
    1944:	ldr	w3, [x2, #4128]
    1948:	str	w3, [x2, #32]
    194c:	ldr	x2, [x21]
    1950:	mov	w0, w0
    1954:	add	x0, x0, #0x8
    1958:	sub	w1, w1, #0x3fe
    195c:	mov	w4, #0x1000000             	// #16777216
    1960:	add	x3, x2, x0, lsl #2
    1964:	str	w1, [x2, #12]
    1968:	str	w4, [x2, x0, lsl #2]
    196c:	str	w22, [x3, #4]
    1970:	cbz	w22, 15e4 <gcov_do_dump+0x894>
    1974:	b	1660 <gcov_do_dump+0x910>
    1978:	str	wzr, [sp, #120]
    197c:	cmp	w2, #0x3ff
    1980:	b.ls	1638 <gcov_do_dump+0x8e8>  // b.plast
    1984:	mov	w22, #0x3                   	// #3
    1988:	b	1904 <gcov_do_dump+0xbb4>
    198c:	ldr	x20, [sp, #104]
    1990:	ldr	x23, [sp, #136]
    1994:	cmp	w2, #0x3ff
    1998:	b.hi	1ad4 <gcov_do_dump+0xd84>  // b.pmore
    199c:	ldr	x0, [x21]
    19a0:	add	w1, w2, #0x1
    19a4:	add	x2, x0, w2, uxtw #2
    19a8:	str	w1, [x0, #12]
    19ac:	str	wzr, [x2, #32]
    19b0:	b	1164 <gcov_do_dump+0x414>
    19b4:	mov	x0, x22
    19b8:	mov	x2, #0x1                   	// #1
    19bc:	mov	x1, #0x1000                	// #4096
    19c0:	str	w4, [sp, #124]
    19c4:	ldr	x3, [x0], #32
    19c8:	bl	0 <fwrite>
    19cc:	cmp	x0, #0x1
    19d0:	ldr	w4, [sp, #124]
    19d4:	b.eq	19e0 <gcov_do_dump+0xc90>  // b.none
    19d8:	mov	w0, #0x1                   	// #1
    19dc:	str	w0, [x22, #24]
    19e0:	ldr	x2, [x21]
    19e4:	adrp	x0, 0 <gcov_error>
    19e8:	ldr	d1, [x0]
    19ec:	ldr	d0, [x2, #8]
    19f0:	ldr	w1, [x2, #12]
    19f4:	add	v0.2s, v0.2s, v1.2s
    19f8:	sub	w0, w1, #0x3ff
    19fc:	subs	w1, w1, #0x400
    1a00:	str	d0, [x2, #8]
    1a04:	b.eq	1ac4 <gcov_do_dump+0xd74>  // b.none
    1a08:	ldr	w3, [x2, #4128]
    1a0c:	str	w3, [x2, #32]
    1a10:	b	1698 <gcov_do_dump+0x948>
    1a14:	mov	x0, x22
    1a18:	mov	x2, #0x1                   	// #1
    1a1c:	mov	x1, #0x1000                	// #4096
    1a20:	ldr	x3, [x0], #32
    1a24:	bl	0 <fwrite>
    1a28:	cmp	x0, #0x1
    1a2c:	b.eq	1a38 <gcov_do_dump+0xce8>  // b.none
    1a30:	mov	w0, #0x1                   	// #1
    1a34:	str	w0, [x22, #24]
    1a38:	ldr	x2, [x21]
    1a3c:	adrp	x0, 0 <gcov_error>
    1a40:	ldr	d1, [x0]
    1a44:	ldr	d0, [x2, #8]
    1a48:	ldr	w0, [x2, #12]
    1a4c:	add	v0.2s, v0.2s, v1.2s
    1a50:	sub	w1, w0, #0x3ff
    1a54:	subs	w0, w0, #0x400
    1a58:	str	d0, [x2, #8]
    1a5c:	b.eq	1aa4 <gcov_do_dump+0xd54>  // b.none
    1a60:	ldr	w3, [x2, #4128]
    1a64:	str	w3, [x2, #32]
    1a68:	b	1678 <gcov_do_dump+0x928>
    1a6c:	add	x19, x26, #0x3
    1a70:	mov	w1, #0x7d                  	// #125
    1a74:	mov	x0, x19
    1a78:	bl	0 <strchr>
    1a7c:	cbz	x0, 1120 <gcov_do_dump+0x3d0>
    1a80:	mov	x25, x0
    1a84:	mov	x0, x19
    1a88:	strb	wzr, [x25], #1
    1a8c:	bl	0 <getenv>
    1a90:	mov	x4, x0
    1a94:	cmp	x0, #0x0
    1a98:	ldr	x0, [sp, #112]
    1a9c:	csel	x4, x0, x4, eq  // eq = none
    1aa0:	b	1284 <gcov_do_dump+0x534>
    1aa4:	ldp	w1, w28, [x19, #12]
    1aa8:	mov	w0, #0x2                   	// #2
    1aac:	stp	w25, w1, [x2, #32]
    1ab0:	b	1708 <gcov_do_dump+0x9b8>
    1ab4:	str	wzr, [sp, #128]
    1ab8:	str	xzr, [sp, #176]
    1abc:	str	wzr, [sp, #184]
    1ac0:	b	1458 <gcov_do_dump+0x708>
    1ac4:	ldr	w28, [x19, #16]
    1ac8:	mov	w0, #0x1                   	// #1
    1acc:	str	w4, [x2, #32]
    1ad0:	b	1708 <gcov_do_dump+0x9b8>
    1ad4:	ldr	x19, [x21]
    1ad8:	mov	x2, #0x1                   	// #1
    1adc:	mov	x1, #0x1000                	// #4096
    1ae0:	mov	x0, x19
    1ae4:	ldr	x3, [x0], #32
    1ae8:	bl	0 <fwrite>
    1aec:	cmp	x0, #0x1
    1af0:	b.eq	1afc <gcov_do_dump+0xdac>  // b.none
    1af4:	mov	w0, #0x1                   	// #1
    1af8:	str	w0, [x19, #24]
    1afc:	ldr	x0, [x21]
    1b00:	adrp	x1, 0 <gcov_error>
    1b04:	ldr	d1, [x1]
    1b08:	ldr	d0, [x0, #8]
    1b0c:	ldr	w2, [x0, #12]
    1b10:	add	v0.2s, v0.2s, v1.2s
    1b14:	subs	w2, w2, #0x400
    1b18:	str	d0, [x0, #8]
    1b1c:	b.eq	199c <gcov_do_dump+0xc4c>  // b.none
    1b20:	ldr	w1, [x0, #4128]
    1b24:	str	w1, [x0, #32]
    1b28:	b	199c <gcov_do_dump+0xc4c>
    1b2c:	mov	x0, x19
    1b30:	mov	x2, #0x1                   	// #1
    1b34:	mov	x1, #0x1000                	// #4096
    1b38:	ldr	x3, [x0], #32
    1b3c:	bl	0 <fwrite>
    1b40:	cmp	x0, #0x1
    1b44:	b.eq	1b50 <gcov_do_dump+0xe00>  // b.none
    1b48:	mov	w0, #0x1                   	// #1
    1b4c:	str	w0, [x19, #24]
    1b50:	ldr	x1, [x21]
    1b54:	adrp	x0, 0 <gcov_error>
    1b58:	ldr	d1, [x0]
    1b5c:	ldr	d0, [x1, #8]
    1b60:	ldr	w0, [x1, #12]
    1b64:	add	v0.2s, v0.2s, v1.2s
    1b68:	subs	w0, w0, #0x400
    1b6c:	str	d0, [x1, #8]
    1b70:	b.eq	1cf8 <gcov_do_dump+0xfa8>  // b.none
    1b74:	ldr	w2, [x1, #4128]
    1b78:	str	w2, [x1, #32]
    1b7c:	b	155c <gcov_do_dump+0x80c>
    1b80:	mov	x0, x19
    1b84:	mov	x2, #0x1                   	// #1
    1b88:	mov	x1, #0x1000                	// #4096
    1b8c:	ldr	x3, [x0], #32
    1b90:	bl	0 <fwrite>
    1b94:	cmp	x0, #0x1
    1b98:	b.eq	1ba4 <gcov_do_dump+0xe54>  // b.none
    1b9c:	mov	w0, #0x1                   	// #1
    1ba0:	str	w0, [x19, #24]
    1ba4:	ldr	x2, [x21]
    1ba8:	adrp	x0, 0 <gcov_error>
    1bac:	ldr	d1, [x0]
    1bb0:	ldr	d0, [x2, #8]
    1bb4:	ldr	w1, [x2, #12]
    1bb8:	add	v0.2s, v0.2s, v1.2s
    1bbc:	sub	w0, w1, #0x3ff
    1bc0:	subs	w1, w1, #0x400
    1bc4:	str	d0, [x2, #8]
    1bc8:	b.eq	1cec <gcov_do_dump+0xf9c>  // b.none
    1bcc:	ldr	w3, [x2, #4128]
    1bd0:	str	w3, [x2, #32]
    1bd4:	b	1540 <gcov_do_dump+0x7f0>
    1bd8:	mov	x0, x19
    1bdc:	mov	x2, #0x1                   	// #1
    1be0:	mov	x1, #0x1000                	// #4096
    1be4:	ldr	x3, [x0], #32
    1be8:	bl	0 <fwrite>
    1bec:	cmp	x0, #0x1
    1bf0:	b.eq	1bfc <gcov_do_dump+0xeac>  // b.none
    1bf4:	mov	w0, #0x1                   	// #1
    1bf8:	str	w0, [x19, #24]
    1bfc:	ldr	x2, [x21]
    1c00:	adrp	x0, 0 <gcov_error>
    1c04:	ldr	d1, [x0]
    1c08:	ldr	d0, [x2, #8]
    1c0c:	ldr	w1, [x2, #12]
    1c10:	add	v0.2s, v0.2s, v1.2s
    1c14:	sub	w0, w1, #0x3ff
    1c18:	subs	w1, w1, #0x400
    1c1c:	str	d0, [x2, #8]
    1c20:	b.eq	1d80 <gcov_do_dump+0x1030>  // b.none
    1c24:	ldr	x19, [x21]
    1c28:	cmp	w0, #0x3ff
    1c2c:	ldr	w3, [x2, #4128]
    1c30:	str	w3, [x2, #32]
    1c34:	add	x1, x19, w1, uxtw #2
    1c38:	str	w0, [x19, #12]
    1c3c:	str	w22, [x1, #32]
    1c40:	b.ls	1508 <gcov_do_dump+0x7b8>  // b.plast
    1c44:	mov	x0, x19
    1c48:	mov	x2, #0x1                   	// #1
    1c4c:	mov	x1, #0x1000                	// #4096
    1c50:	ldr	x3, [x0], #32
    1c54:	bl	0 <fwrite>
    1c58:	cmp	x0, #0x1
    1c5c:	b.eq	1c68 <gcov_do_dump+0xf18>  // b.none
    1c60:	mov	w0, #0x1                   	// #1
    1c64:	str	w0, [x19, #24]
    1c68:	ldr	x1, [x21]
    1c6c:	adrp	x0, 0 <gcov_error>
    1c70:	ldr	d1, [x0]
    1c74:	ldr	d0, [x1, #8]
    1c78:	ldr	w0, [x1, #12]
    1c7c:	add	v0.2s, v0.2s, v1.2s
    1c80:	subs	w0, w0, #0x400
    1c84:	str	d0, [x1, #8]
    1c88:	b.eq	1508 <gcov_do_dump+0x7b8>  // b.none
    1c8c:	ldr	w2, [x1, #4128]
    1c90:	str	w2, [x1, #32]
    1c94:	b	1508 <gcov_do_dump+0x7b8>
    1c98:	mov	x0, x19
    1c9c:	mov	x2, #0x1                   	// #1
    1ca0:	mov	x1, #0x1000                	// #4096
    1ca4:	ldr	x3, [x0], #32
    1ca8:	bl	0 <fwrite>
    1cac:	cmp	x0, #0x1
    1cb0:	b.eq	1cbc <gcov_do_dump+0xf6c>  // b.none
    1cb4:	mov	w0, #0x1                   	// #1
    1cb8:	str	w0, [x19, #24]
    1cbc:	ldr	x1, [x21]
    1cc0:	adrp	x0, 0 <gcov_error>
    1cc4:	ldr	d1, [x0]
    1cc8:	ldr	d0, [x1, #8]
    1ccc:	ldr	w0, [x1, #12]
    1cd0:	add	v0.2s, v0.2s, v1.2s
    1cd4:	subs	w0, w0, #0x400
    1cd8:	str	d0, [x1, #8]
    1cdc:	b.eq	14ac <gcov_do_dump+0x75c>  // b.none
    1ce0:	ldr	w2, [x1, #4128]
    1ce4:	str	w2, [x1, #32]
    1ce8:	b	14ac <gcov_do_dump+0x75c>
    1cec:	ldr	w1, [sp, #128]
    1cf0:	mov	w0, #0x1                   	// #1
    1cf4:	str	w1, [x2, #32]
    1cf8:	ldr	x1, [x21]
    1cfc:	add	w2, w0, #0x1
    1d00:	ldr	w3, [x20, #104]
    1d04:	add	x0, x1, w0, uxtw #2
    1d08:	str	w2, [x1, #12]
    1d0c:	ldr	w1, [sp, #184]
    1d10:	str	w1, [x0, #32]
    1d14:	cbnz	w3, 157c <gcov_do_dump+0x82c>
    1d18:	b	199c <gcov_do_dump+0xc4c>
    1d1c:	bl	120 <gcov_read_words.constprop.1>
    1d20:	cbz	x0, 22b0 <gcov_do_dump+0x1560>
    1d24:	ldr	w1, [x0]
    1d28:	mov	w0, #0x322a                	// #12842
    1d2c:	movk	w0, #0x4139, lsl #16
    1d30:	cmp	w1, w0
    1d34:	b.eq	1d48 <gcov_do_dump+0xff8>  // b.none
    1d38:	ldr	x2, [sp, #112]
    1d3c:	add	x0, x20, #0x18
    1d40:	bl	1d8 <gcov_version.isra.0.part.0>
    1d44:	cbz	w0, 1164 <gcov_do_dump+0x414>
    1d48:	bl	120 <gcov_read_words.constprop.1>
    1d4c:	cbz	x0, 22a8 <gcov_do_dump+0x1558>
    1d50:	ldr	w0, [x0]
    1d54:	ldr	w1, [x20, #16]
    1d58:	cmp	w1, w0
    1d5c:	b.eq	1d8c <gcov_do_dump+0x103c>  // b.none
    1d60:	ldr	x1, [sp, #112]
    1d64:	adrp	x0, 0 <gcov_error>
    1d68:	add	x0, x0, #0x0
    1d6c:	str	wzr, [sp, #184]
    1d70:	bl	0 <gcov_error>
    1d74:	str	wzr, [sp, #128]
    1d78:	str	xzr, [sp, #176]
    1d7c:	b	1458 <gcov_do_dump+0x708>
    1d80:	mov	w0, #0x1                   	// #1
    1d84:	str	w22, [x2, #32]
    1d88:	b	1508 <gcov_do_dump+0x7b8>
    1d8c:	bl	120 <gcov_read_words.constprop.1>
    1d90:	cbz	x0, 23ac <gcov_do_dump+0x165c>
    1d94:	ldr	w1, [x0]
    1d98:	mov	w0, #0xa1000000            	// #-1593835520
    1d9c:	cmp	w1, w0
    1da0:	b.ne	23ac <gcov_do_dump+0x165c>  // b.any
    1da4:	bl	120 <gcov_read_words.constprop.1>
    1da8:	cbz	x0, 24a8 <gcov_do_dump+0x1758>
    1dac:	ldr	w0, [x0]
    1db0:	cbz	w0, 24a8 <gcov_do_dump+0x1758>
    1db4:	bl	120 <gcov_read_words.constprop.1>
    1db8:	cbz	x0, 23bc <gcov_do_dump+0x166c>
    1dbc:	ldr	w0, [x0]
    1dc0:	str	w0, [sp, #128]
    1dc4:	bl	120 <gcov_read_words.constprop.1>
    1dc8:	cbz	x0, 23dc <gcov_do_dump+0x168c>
    1dcc:	ldr	w0, [x0]
    1dd0:	str	w0, [sp, #184]
    1dd4:	mov	w0, w0
    1dd8:	str	x0, [sp, #176]
    1ddc:	bl	120 <gcov_read_words.constprop.1>
    1de0:	cbz	x0, 23c4 <gcov_do_dump+0x1674>
    1de4:	ldr	w2, [x20, #104]
    1de8:	ldr	w1, [x0]
    1dec:	cbz	w2, 2484 <gcov_do_dump+0x1734>
    1df0:	ldr	x0, [x20, #112]
    1df4:	mov	w2, #0x1000000             	// #16777216
    1df8:	cmp	w1, w2
    1dfc:	ldr	x19, [x0]
    1e00:	b.ne	23cc <gcov_do_dump+0x167c>  // b.any
    1e04:	ldr	x24, [sp, #200]
    1e08:	add	x26, x20, #0x20
    1e0c:	mov	x27, x23
    1e10:	adrp	x0, 0 <gcov_error>
    1e14:	add	x0, x0, #0x0
    1e18:	str	xzr, [sp, #104]
    1e1c:	str	x0, [sp, #168]
    1e20:	bl	120 <gcov_read_words.constprop.1>
    1e24:	ldr	x1, [sp, #104]
    1e28:	stp	w1, w1, [sp, #120]
    1e2c:	cbz	x0, 208c <gcov_do_dump+0x133c>
    1e30:	ldr	w0, [x0]
    1e34:	cbz	w0, 208c <gcov_do_dump+0x133c>
    1e38:	cmp	w0, #0x3
    1e3c:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    1e40:	cbz	x19, 1e50 <gcov_do_dump+0x1100>
    1e44:	ldr	x0, [x19]
    1e48:	cmp	x0, x20
    1e4c:	b.eq	22b8 <gcov_do_dump+0x1568>  // b.none
    1e50:	ldp	x2, x0, [x20, #88]
    1e54:	ldp	x3, x1, [x20, #72]
    1e58:	cmp	x0, #0x0
    1e5c:	cset	w0, ne  // ne = any
    1e60:	cmp	x2, #0x0
    1e64:	cinc	w0, w0, ne  // ne = any
    1e68:	cmp	x1, #0x0
    1e6c:	cinc	w0, w0, ne  // ne = any
    1e70:	cmp	x3, #0x0
    1e74:	ldp	x3, x1, [x20, #48]
    1e78:	cinc	w0, w0, ne  // ne = any
    1e7c:	ldr	x2, [x20, #64]
    1e80:	cmp	x2, #0x0
    1e84:	cinc	w0, w0, ne  // ne = any
    1e88:	cmp	x1, #0x0
    1e8c:	ldp	x1, x2, [x20, #32]
    1e90:	cinc	w0, w0, ne  // ne = any
    1e94:	cmp	x3, #0x0
    1e98:	cinc	w0, w0, ne  // ne = any
    1e9c:	cmp	x2, #0x0
    1ea0:	cinc	w0, w0, ne  // ne = any
    1ea4:	cmp	x1, #0x0
    1ea8:	cinc	w0, w0, ne  // ne = any
    1eac:	lsl	w0, w0, #4
    1eb0:	add	w0, w0, #0x38
    1eb4:	mov	x22, x0
    1eb8:	bl	0 <malloc>
    1ebc:	mov	x19, x0
    1ec0:	cbz	x0, 2420 <gcov_do_dump+0x16d0>
    1ec4:	ldr	w0, [sp, #124]
    1ec8:	str	xzr, [x19]
    1ecc:	str	w0, [x19, #8]
    1ed0:	bl	120 <gcov_read_words.constprop.1>
    1ed4:	cbz	x0, 21dc <gcov_do_dump+0x148c>
    1ed8:	ldr	w0, [x0]
    1edc:	str	w0, [x19, #24]
    1ee0:	bl	120 <gcov_read_words.constprop.1>
    1ee4:	cbz	x0, 21ec <gcov_do_dump+0x149c>
    1ee8:	ldr	w0, [x0]
    1eec:	str	w0, [x19, #28]
    1ef0:	bl	120 <gcov_read_words.constprop.1>
    1ef4:	cbz	x0, 21fc <gcov_do_dump+0x14ac>
    1ef8:	ldr	w0, [x0]
    1efc:	ldr	x28, [x21]
    1f00:	mov	x22, x27
    1f04:	mov	x23, #0x0                   	// #0
    1f08:	mov	w25, #0x0                   	// #0
    1f0c:	mov	x27, x28
    1f10:	str	w0, [x19, #32]
    1f14:	add	x0, x28, #0x20
    1f18:	str	x19, [sp, #96]
    1f1c:	str	x0, [sp, #144]
    1f20:	str	x20, [sp, #160]
    1f24:	mov	x20, x23
    1f28:	b	1f38 <gcov_do_dump+0x11e8>
    1f2c:	add	x20, x20, #0x1
    1f30:	cmp	x20, #0x9
    1f34:	b.eq	2078 <gcov_do_dump+0x1328>  // b.none
    1f38:	ldr	x0, [x26, x20, lsl #3]
    1f3c:	mov	w23, w20
    1f40:	cbz	x0, 1f2c <gcov_do_dump+0x11dc>
    1f44:	bl	120 <gcov_read_words.constprop.1>
    1f48:	cbz	x0, 210c <gcov_do_dump+0x13bc>
    1f4c:	ldr	w2, [x0]
    1f50:	mov	w1, #0x1a10000             	// #27328512
    1f54:	add	w0, w1, w20, lsl #17
    1f58:	cmp	w2, w0
    1f5c:	b.ne	210c <gcov_do_dump+0x13bc>  // b.any
    1f60:	bl	120 <gcov_read_words.constprop.1>
    1f64:	cbz	x0, 21cc <gcov_do_dump+0x147c>
    1f68:	ldr	w1, [x0]
    1f6c:	lsr	w19, w1, #1
    1f70:	lsl	w0, w19, #3
    1f74:	str	w0, [sp, #136]
    1f78:	lsl	w0, w19, #3
    1f7c:	bl	0 <malloc>
    1f80:	mov	x28, x0
    1f84:	cbz	x0, 2450 <gcov_do_dump+0x1700>
    1f88:	ldr	x1, [sp, #96]
    1f8c:	ubfiz	x0, x25, #4, #32
    1f90:	sub	w23, w19, #0x1
    1f94:	add	x0, x1, x0
    1f98:	ubfiz	x23, x23, #3, #32
    1f9c:	add	x23, x23, #0x8
    1fa0:	str	w19, [x0, #40]
    1fa4:	add	x23, x28, x23
    1fa8:	str	x28, [x0, #48]
    1fac:	cbz	w19, 2068 <gcov_do_dump+0x1318>
    1fb0:	ldr	x19, [sp, #144]
    1fb4:	b	203c <gcov_do_dump+0x12ec>
    1fb8:	cmp	w4, #0x1
    1fbc:	b.hi	200c <gcov_do_dump+0x12bc>  // b.pmore
    1fc0:	ldr	w1, [x27, #8]
    1fc4:	add	w1, w1, w0
    1fc8:	str	w1, [x27, #8]
    1fcc:	cbz	w4, 1fd8 <gcov_do_dump+0x1288>
    1fd0:	ldr	w0, [x19, w0, uxtw #2]
    1fd4:	str	w0, [x27, #32]
    1fd8:	ldr	x3, [x22]
    1fdc:	mov	x1, #0x1                   	// #1
    1fe0:	add	x0, x24, w4, uxtw #2
    1fe4:	mov	x2, #0x1000                	// #4096
    1fe8:	stp	wzr, w4, [x22, #12]
    1fec:	bl	0 <fread>
    1ff0:	lsr	x0, x0, #2
    1ff4:	ldr	w1, [x22, #16]
    1ff8:	add	w1, w1, w0
    1ffc:	str	w1, [x22, #16]
    2000:	cmp	w1, #0x1
    2004:	b.ls	20f4 <gcov_do_dump+0x13a4>  // b.plast
    2008:	ldr	w0, [x22, #12]
    200c:	ldr	x2, [x21]
    2010:	mov	w1, w0
    2014:	add	x1, x1, #0x8
    2018:	add	w0, w0, #0x2
    201c:	add	x3, x2, x1, lsl #2
    2020:	str	w0, [x2, #12]
    2024:	ldr	w1, [x2, x1, lsl #2]
    2028:	ldr	w0, [x3, #4]
    202c:	orr	x0, x1, x0, lsl #32
    2030:	stur	x0, [x28, #-8]
    2034:	cmp	x28, x23
    2038:	b.eq	2068 <gcov_do_dump+0x1318>  // b.none
    203c:	ldp	w0, w4, [x27, #12]
    2040:	add	x28, x28, #0x8
    2044:	ldr	w1, [x27, #28]
    2048:	sub	w4, w4, w0
    204c:	cmp	w1, #0x0
    2050:	b.gt	1fb8 <gcov_do_dump+0x1268>
    2054:	mov	x0, #0x0                   	// #0
    2058:	stur	x0, [x28, #-8]
    205c:	cmp	x28, x23
    2060:	b.ne	203c <gcov_do_dump+0x12ec>  // b.any
    2064:	nop
    2068:	add	x20, x20, #0x1
    206c:	add	w25, w25, #0x1
    2070:	cmp	x20, #0x9
    2074:	b.ne	1f38 <gcov_do_dump+0x11e8>  // b.any
    2078:	ldp	x20, x0, [sp, #160]
    207c:	mov	x27, x22
    2080:	ldr	x19, [sp, #96]
    2084:	str	x19, [sp, #168]
    2088:	str	x19, [x0]
    208c:	bl	120 <gcov_read_words.constprop.1>
    2090:	ldr	w1, [sp, #124]
    2094:	add	w3, w1, #0x1
    2098:	str	w3, [sp, #120]
    209c:	cbz	x0, 21b4 <gcov_do_dump+0x1464>
    20a0:	ldr	w2, [x20, #104]
    20a4:	ldr	w1, [x0]
    20a8:	cmp	w2, w3
    20ac:	b.eq	2478 <gcov_do_dump+0x1728>  // b.none
    20b0:	ldr	x0, [sp, #104]
    20b4:	mov	w3, #0x1000000             	// #16777216
    20b8:	ldr	x2, [x20, #112]
    20bc:	add	x0, x0, #0x1
    20c0:	str	x0, [sp, #104]
    20c4:	cmp	w1, w3
    20c8:	ldr	x19, [x2, x0, lsl #3]
    20cc:	b.eq	1e20 <gcov_do_dump+0x10d0>  // b.none
    20d0:	mov	x23, x27
    20d4:	adrp	x2, 0 <gcov_error>
    20d8:	add	x2, x2, #0x0
    20dc:	ldr	w3, [sp, #120]
    20e0:	adrp	x0, 0 <gcov_error>
    20e4:	ldr	x1, [sp, #112]
    20e8:	add	x0, x0, #0x0
    20ec:	bl	0 <gcov_error>
    20f0:	b	1164 <gcov_do_dump+0x414>
    20f4:	ldr	w2, [x22, #20]
    20f8:	mov	x0, #0x0                   	// #0
    20fc:	add	w2, w2, #0x2
    2100:	sub	w1, w2, w1
    2104:	stp	wzr, w1, [x22, #16]
    2108:	b	2030 <gcov_do_dump+0x12e0>
    210c:	mov	x27, x22
    2110:	mov	w22, w23
    2114:	mov	x23, x20
    2118:	adrp	x3, 0 <gcov_error>
    211c:	ldr	x19, [sp, #96]
    2120:	add	x3, x3, #0x0
    2124:	ldr	x20, [sp, #160]
    2128:	str	w23, [sp, #136]
    212c:	ldr	w2, [sp, #124]
    2130:	adrp	x0, 0 <gcov_error>
    2134:	ldr	w4, [sp, #136]
    2138:	add	x0, x0, #0x0
    213c:	ldr	x1, [sp, #112]
    2140:	bl	0 <gcov_error>
    2144:	ldr	x0, [x19]
    2148:	str	x0, [sp, #168]
    214c:	cbz	w22, 2190 <gcov_do_dump+0x1440>
    2150:	sub	w22, w22, #0x1
    2154:	add	x25, x20, #0x28
    2158:	mov	x23, x26
    215c:	mov	w0, #0x0                   	// #0
    2160:	add	x25, x25, w22, uxtw #3
    2164:	ldr	x1, [x23]
    2168:	cbz	x1, 2184 <gcov_do_dump+0x1434>
    216c:	ubfiz	x1, x0, #4, #32
    2170:	add	w22, w0, #0x1
    2174:	add	x0, x19, x1
    2178:	ldr	x0, [x0, #48]
    217c:	bl	0 <free>
    2180:	mov	w0, w22
    2184:	add	x23, x23, #0x8
    2188:	cmp	x25, x23
    218c:	b.ne	2164 <gcov_do_dump+0x1414>  // b.any
    2190:	mov	x0, x19
    2194:	bl	0 <free>
    2198:	ldr	x0, [sp, #168]
    219c:	cbz	x0, 20d0 <gcov_do_dump+0x1380>
    21a0:	bl	120 <gcov_read_words.constprop.1>
    21a4:	ldr	w1, [sp, #124]
    21a8:	add	w3, w1, #0x1
    21ac:	str	w3, [sp, #120]
    21b0:	cbnz	x0, 20a0 <gcov_do_dump+0x1350>
    21b4:	ldr	w0, [x20, #104]
    21b8:	mov	x23, x27
    21bc:	ldr	w1, [sp, #120]
    21c0:	cmp	w0, w1
    21c4:	b.eq	1458 <gcov_do_dump+0x708>  // b.none
    21c8:	b	20d4 <gcov_do_dump+0x1384>
    21cc:	mov	x0, #0x0                   	// #0
    21d0:	mov	w19, #0x0                   	// #0
    21d4:	str	wzr, [sp, #136]
    21d8:	b	1f7c <gcov_do_dump+0x122c>
    21dc:	mov	w0, #0x0                   	// #0
    21e0:	str	w0, [x19, #24]
    21e4:	bl	120 <gcov_read_words.constprop.1>
    21e8:	cbnz	x0, 1ee8 <gcov_do_dump+0x1198>
    21ec:	mov	w0, #0x0                   	// #0
    21f0:	str	w0, [x19, #28]
    21f4:	bl	120 <gcov_read_words.constprop.1>
    21f8:	cbnz	x0, 1ef8 <gcov_do_dump+0x11a8>
    21fc:	mov	w0, #0x0                   	// #0
    2200:	b	1efc <gcov_do_dump+0x11ac>
    2204:	mov	x3, x0
    2208:	lsl	w1, w22, #2
    220c:	add	x0, x19, #0x20
    2210:	mov	x2, #0x1                   	// #1
    2214:	bl	0 <fwrite>
    2218:	cmp	x0, #0x1
    221c:	b.eq	2228 <gcov_do_dump+0x14d8>  // b.none
    2220:	mov	w0, #0x1                   	// #1
    2224:	str	w0, [x19, #24]
    2228:	ldr	x1, [x21]
    222c:	ldp	w3, w2, [x1, #8]
    2230:	ldr	x0, [x1]
    2234:	add	w3, w3, w22
    2238:	sub	w22, w2, w22
    223c:	stp	w3, w22, [x1, #8]
    2240:	b	11e4 <gcov_do_dump+0x494>
    2244:	adrp	x0, 0 <gcov_error>
    2248:	add	x0, x0, #0x0
    224c:	bl	0 <getenv>
    2250:	mov	x21, x0
    2254:	cbz	x0, 2294 <gcov_do_dump+0x1544>
    2258:	bl	0 <strlen>
    225c:	cbz	x0, 2294 <gcov_do_dump+0x1544>
    2260:	sub	x22, x0, #0x1
    2264:	str	wzr, [sp, #132]
    2268:	ldrb	w1, [x21, x22]
    226c:	cmp	w1, #0x2f
    2270:	b.ne	ec8 <gcov_do_dump+0x178>  // b.any
    2274:	cbnz	x22, ed0 <gcov_do_dump+0x180>
    2278:	ldr	w0, [sp, #132]
    227c:	cbz	w0, 2294 <gcov_do_dump+0x1544>
    2280:	adrp	x21, 0 <gcov_error>
    2284:	mov	x0, #0x2                   	// #2
    2288:	add	x21, x21, #0x0
    228c:	mov	x22, #0x1                   	// #1
    2290:	b	ed0 <gcov_do_dump+0x180>
    2294:	str	wzr, [sp, #132]
    2298:	str	xzr, [sp, #152]
    229c:	b	ee8 <gcov_do_dump+0x198>
    22a0:	mov	x20, #0x0                   	// #0
    22a4:	b	1894 <gcov_do_dump+0xb44>
    22a8:	mov	w0, #0x0                   	// #0
    22ac:	b	1d54 <gcov_do_dump+0x1004>
    22b0:	mov	w1, #0x0                   	// #0
    22b4:	b	1d38 <gcov_do_dump+0xfe8>
    22b8:	bl	120 <gcov_read_words.constprop.1>
    22bc:	cbz	x0, 2418 <gcov_do_dump+0x16c8>
    22c0:	ldr	w0, [x0]
    22c4:	ldr	w1, [x19, #8]
    22c8:	cmp	w1, w0
    22cc:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    22d0:	bl	120 <gcov_read_words.constprop.1>
    22d4:	cbz	x0, 2410 <gcov_do_dump+0x16c0>
    22d8:	ldr	w0, [x0]
    22dc:	ldr	w1, [x19, #12]
    22e0:	cmp	w1, w0
    22e4:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    22e8:	bl	120 <gcov_read_words.constprop.1>
    22ec:	cbz	x0, 2408 <gcov_do_dump+0x16b8>
    22f0:	ldr	w0, [x0]
    22f4:	ldr	w1, [x19, #16]
    22f8:	cmp	w1, w0
    22fc:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    2300:	add	x19, x19, #0x18
    2304:	add	x25, x20, #0x20
    2308:	mov	w22, #0x1a10000             	// #27328512
    230c:	mov	w23, #0x1b30000             	// #28508160
    2310:	ldr	x28, [x25]
    2314:	cbz	x28, 2358 <gcov_do_dump+0x1608>
    2318:	bl	120 <gcov_read_words.constprop.1>
    231c:	cbz	x0, 239c <gcov_do_dump+0x164c>
    2320:	ldr	w1, [x0]
    2324:	str	w1, [sp, #96]
    2328:	bl	120 <gcov_read_words.constprop.1>
    232c:	ldr	w1, [sp, #96]
    2330:	cbz	x0, 2394 <gcov_do_dump+0x1644>
    2334:	ldr	w0, [x0]
    2338:	cmp	w1, w22
    233c:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    2340:	ldr	w1, [x19]
    2344:	cmp	w0, w1, lsl #1
    2348:	b.ne	20d0 <gcov_do_dump+0x1380>  // b.any
    234c:	ldr	x0, [x19, #8]
    2350:	add	x19, x19, #0x10
    2354:	blr	x28
    2358:	add	w22, w22, #0x20, lsl #12
    235c:	add	x25, x25, #0x8
    2360:	cmp	w22, w23
    2364:	b.ne	2310 <gcov_do_dump+0x15c0>  // b.any
    2368:	ldr	x0, [x21]
    236c:	ldr	x1, [x0]
    2370:	cbz	x1, 23e8 <gcov_do_dump+0x1698>
    2374:	ldr	w0, [x0, #24]
    2378:	cmp	w0, #0x0
    237c:	cbz	w0, 208c <gcov_do_dump+0x133c>
    2380:	mov	x23, x27
    2384:	b.ge	249c <gcov_do_dump+0x174c>  // b.tcont
    2388:	adrp	x2, 0 <gcov_error>
    238c:	add	x2, x2, #0x0
    2390:	b	23f4 <gcov_do_dump+0x16a4>
    2394:	mov	w0, #0x0                   	// #0
    2398:	b	2338 <gcov_do_dump+0x15e8>
    239c:	bl	120 <gcov_read_words.constprop.1>
    23a0:	cbz	x0, 20d0 <gcov_do_dump+0x1380>
    23a4:	mov	w1, #0x0                   	// #0
    23a8:	b	2334 <gcov_do_dump+0x15e4>
    23ac:	adrp	x2, 0 <gcov_error>
    23b0:	add	x2, x2, #0x0
    23b4:	str	wzr, [sp, #120]
    23b8:	b	20dc <gcov_do_dump+0x138c>
    23bc:	str	wzr, [sp, #128]
    23c0:	b	1dc4 <gcov_do_dump+0x1074>
    23c4:	ldr	w0, [x20, #104]
    23c8:	cbz	w0, 1458 <gcov_do_dump+0x708>
    23cc:	adrp	x2, 0 <gcov_error>
    23d0:	add	x2, x2, #0x0
    23d4:	str	wzr, [sp, #120]
    23d8:	b	20dc <gcov_do_dump+0x138c>
    23dc:	str	xzr, [sp, #176]
    23e0:	str	wzr, [sp, #184]
    23e4:	b	1ddc <gcov_do_dump+0x108c>
    23e8:	adrp	x2, 0 <gcov_error>
    23ec:	mov	x23, x27
    23f0:	add	x2, x2, #0x0
    23f4:	ldr	x1, [sp, #112]
    23f8:	adrp	x0, 0 <gcov_error>
    23fc:	add	x0, x0, #0x0
    2400:	bl	0 <gcov_error>
    2404:	b	1164 <gcov_do_dump+0x414>
    2408:	mov	w0, #0x0                   	// #0
    240c:	b	22f4 <gcov_do_dump+0x15a4>
    2410:	mov	w0, #0x0                   	// #0
    2414:	b	22dc <gcov_do_dump+0x158c>
    2418:	mov	w0, #0x0                   	// #0
    241c:	b	22c4 <gcov_do_dump+0x1574>
    2420:	ldr	w2, [sp, #124]
    2424:	mov	w4, w22
    2428:	ldr	x1, [sp, #112]
    242c:	adrp	x3, 0 <gcov_error>
    2430:	adrp	x0, 0 <gcov_error>
    2434:	add	x3, x3, #0x0
    2438:	add	x0, x0, #0x0
    243c:	mov	x23, x27
    2440:	bl	0 <gcov_error>
    2444:	adrp	x2, 0 <gcov_error>
    2448:	add	x2, x2, #0x0
    244c:	b	20dc <gcov_do_dump+0x138c>
    2450:	ldr	w0, [sp, #136]
    2454:	mov	x27, x22
    2458:	mov	w22, w23
    245c:	ldr	x19, [sp, #96]
    2460:	ldr	x20, [sp, #160]
    2464:	cbnz	w0, 2490 <gcov_do_dump+0x1740>
    2468:	adrp	x3, 0 <gcov_error>
    246c:	add	x3, x3, #0x0
    2470:	str	w23, [sp, #136]
    2474:	b	212c <gcov_do_dump+0x13dc>
    2478:	mov	x23, x27
    247c:	cbz	w1, 1458 <gcov_do_dump+0x708>
    2480:	b	20d4 <gcov_do_dump+0x1384>
    2484:	str	wzr, [sp, #120]
    2488:	cbz	w1, 1458 <gcov_do_dump+0x708>
    248c:	b	20d4 <gcov_do_dump+0x1384>
    2490:	adrp	x3, 0 <gcov_error>
    2494:	add	x3, x3, #0x0
    2498:	b	212c <gcov_do_dump+0x13dc>
    249c:	adrp	x2, 0 <gcov_error>
    24a0:	add	x2, x2, #0x0
    24a4:	b	23f4 <gcov_do_dump+0x16a4>
    24a8:	bl	0 <abort>
    24ac:	nop

00000000000024b0 <__gcov_dump_one>:
    24b0:	ldrb	w1, [x0, #8]
    24b4:	tbz	w1, #0, 24bc <__gcov_dump_one+0xc>
    24b8:	ret
    24bc:	stp	x29, x30, [sp, #-32]!
    24c0:	ubfx	x1, x1, #1, #1
    24c4:	mov	x29, sp
    24c8:	str	x19, [sp, #16]
    24cc:	mov	x19, x0
    24d0:	ldr	x0, [x0]
    24d4:	bl	d50 <gcov_do_dump>
    24d8:	ldrb	w0, [x19, #8]
    24dc:	orr	w0, w0, #0x3
    24e0:	strb	w0, [x19, #8]
    24e4:	ldr	x19, [sp, #16]
    24e8:	ldp	x29, x30, [sp], #32
    24ec:	ret

00000000000024f0 <__gcov_exit>:
    24f0:	stp	x29, x30, [sp, #-32]!
    24f4:	mov	x29, sp
    24f8:	stp	x19, x20, [sp, #16]
    24fc:	adrp	x19, 20 <gcov_error+0x20>
    2500:	add	x20, x19, #0x0
    2504:	ldrb	w1, [x20, #8]
    2508:	tbnz	w1, #0, 2524 <__gcov_exit+0x34>
    250c:	ldr	x0, [x19]
    2510:	ubfx	x1, x1, #1, #1
    2514:	bl	d50 <gcov_do_dump>
    2518:	ldrb	w0, [x20, #8]
    251c:	orr	w0, w0, #0x3
    2520:	strb	w0, [x20, #8]
    2524:	add	x0, x19, #0x0
    2528:	ldp	x2, x1, [x0, #16]
    252c:	cbz	x2, 2538 <__gcov_exit+0x48>
    2530:	str	x1, [x2, #24]
    2534:	ldr	x1, [x0, #24]
    2538:	cbz	x1, 2578 <__gcov_exit+0x88>
    253c:	str	x2, [x1, #16]
    2540:	adrp	x19, 8 <gcov_error+0x8>
    2544:	ldr	x19, [x19]
    2548:	ldr	x0, [x19]
    254c:	cbz	x0, 256c <__gcov_exit+0x7c>
    2550:	adrp	x1, 0 <stderr>
    2554:	ldr	x1, [x1]
    2558:	ldr	x1, [x1]
    255c:	cmp	x0, x1
    2560:	b.eq	256c <__gcov_exit+0x7c>  // b.none
    2564:	bl	0 <fclose>
    2568:	str	xzr, [x19]
    256c:	ldp	x19, x20, [sp, #16]
    2570:	ldp	x29, x30, [sp], #32
    2574:	ret
    2578:	adrp	x0, 0 <gcov_error>
    257c:	ldr	x0, [x0]
    2580:	str	x2, [x0, #8]
    2584:	b	2540 <__gcov_exit+0x50>

0000000000002588 <__gcov_init>:
    2588:	ldr	w1, [x0]
    258c:	cbz	w1, 25e8 <__gcov_init+0x60>
    2590:	stp	x29, x30, [sp, #-48]!
    2594:	mov	x29, sp
    2598:	stp	x19, x20, [sp, #16]
    259c:	mov	x19, x0
    25a0:	ldr	w0, [x0, #104]
    25a4:	cbz	w0, 25dc <__gcov_init+0x54>
    25a8:	mov	w0, #0x322a                	// #12842
    25ac:	movk	w0, #0x4139, lsl #16
    25b0:	cmp	w1, w0
    25b4:	b.eq	25c8 <__gcov_init+0x40>  // b.none
    25b8:	add	x0, x19, #0x18
    25bc:	mov	x2, #0x0                   	// #0
    25c0:	bl	1d8 <gcov_version.isra.0.part.0>
    25c4:	cbz	w0, 25dc <__gcov_init+0x54>
    25c8:	adrp	x20, 20 <gcov_error+0x20>
    25cc:	ldr	x0, [x20]
    25d0:	cbz	x0, 25ec <__gcov_init+0x64>
    25d4:	str	x19, [x20]
    25d8:	str	x0, [x19, #8]
    25dc:	ldp	x19, x20, [sp, #16]
    25e0:	ldp	x29, x30, [sp], #48
    25e4:	ret
    25e8:	ret
    25ec:	str	x21, [sp, #32]
    25f0:	adrp	x21, 0 <gcov_error>
    25f4:	mov	w2, #0x322a                	// #12842
    25f8:	ldr	x1, [x21]
    25fc:	movk	w2, #0x4139, lsl #16
    2600:	ldr	w1, [x1]
    2604:	cmp	w1, w2
    2608:	b.ne	2638 <__gcov_init+0xb0>  // b.any
    260c:	ldr	x1, [x21]
    2610:	add	x2, x20, #0x0
    2614:	ldr	x1, [x1, #8]
    2618:	str	x1, [x2, #16]
    261c:	cbz	x1, 2624 <__gcov_init+0x9c>
    2620:	str	x2, [x1, #24]
    2624:	ldr	x21, [x21]
    2628:	add	x1, x20, #0x0
    262c:	str	x1, [x21, #8]
    2630:	ldr	x21, [sp, #32]
    2634:	b	25d4 <__gcov_init+0x4c>
    2638:	adrp	x2, 0 <gcov_error>
    263c:	mov	x0, #0x18                  	// #24
    2640:	add	x2, x2, #0x0
    2644:	bl	1d8 <gcov_version.isra.0.part.0>
    2648:	cbnz	w0, 2658 <__gcov_init+0xd0>
    264c:	ldr	x0, [x20]
    2650:	ldr	x21, [sp, #32]
    2654:	b	25d4 <__gcov_init+0x4c>
    2658:	ldr	x0, [x20]
    265c:	b	260c <__gcov_init+0x84>
