
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//chain.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xac0>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <grub_mod_init-0xac0>
   8:	adrp	x1, 0 <grub_mod_init-0xac0>
   c:	mov	x29, sp
  10:	ldr	x0, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	ldr	x19, [x1]
  1c:	ldr	x1, [x0]
  20:	ldr	x0, [x19]
  24:	ldr	x20, [x1, #96]
  28:	ldr	x1, [x20, #224]
  2c:	blr	x1
  30:	ldp	x1, x0, [x19, #8]
  34:	ldr	x2, [x20, #48]
  38:	blr	x2
  3c:	ldr	x0, [x19, #24]
  40:	bl	0 <grub_free>
  44:	ldr	x0, [x19, #32]
  48:	bl	0 <grub_free>
  4c:	stp	xzr, xzr, [x19, #24]
  50:	ldr	x0, [x19, #40]
  54:	bl	0 <grub_dl_unref>
  58:	mov	w0, #0x0                   	// #0
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
	...
  78:	stp	x29, x30, [sp, #-48]!
  7c:	adrp	x1, 0 <grub_mod_init-0xac0>
  80:	adrp	x0, 0 <grub_mod_init-0xac0>
  84:	mov	x29, sp
  88:	ldr	x3, [x1]
  8c:	stp	x19, x20, [sp, #16]
  90:	add	x2, sp, #0x28
  94:	ldr	x0, [x0]
  98:	str	xzr, [sp, #40]
  9c:	ldr	x3, [x3]
  a0:	add	x1, sp, #0x20
  a4:	ldr	x0, [x0]
  a8:	ldr	x19, [x3, #96]
  ac:	ldr	x3, [x19, #208]
  b0:	blr	x3
  b4:	cbz	x0, 1a0 <grub_mod_init-0x920>
  b8:	ldr	x0, [sp, #40]
  bc:	cbz	x0, 1cc <grub_mod_init-0x8f4>
  c0:	ldr	x0, [sp, #32]
  c4:	lsl	x0, x0, #2
  c8:	add	x0, x0, #0x1
  cc:	bl	0 <grub_malloc>
  d0:	mov	x20, x0
  d4:	cbz	x0, 1a0 <grub_mod_init-0x920>
  d8:	mov	x2, x0
  dc:	ldp	x0, x8, [sp, #32]
  e0:	sub	x6, x0, #0x1
  e4:	cbz	x0, 188 <grub_mod_init-0x938>
  e8:	mov	w7, #0x0                   	// #0
  ec:	mov	w10, #0xffff2800            	// #-55296
  f0:	mov	w9, #0xffff2400            	// #-56320
  f4:	mov	w11, #0x3f                  	// #63
  f8:	mov	w12, #0x2400                	// #9216
  fc:	b	160 <grub_mod_init-0x960>
 100:	add	w4, w3, w9
 104:	cmp	w4, #0x3ff
 108:	b.hi	1e0 <grub_mod_init-0x8e0>  // b.pmore
 10c:	add	w4, w7, w10
 110:	mov	x8, x5
 114:	add	x2, x2, #0x4
 118:	mov	w7, #0x0                   	// #0
 11c:	add	w3, w3, w4, lsl #10
 120:	add	w3, w3, w12
 124:	and	w0, w3, #0x3f
 128:	lsr	w4, w3, #18
 12c:	ubfx	x1, x3, #12, #6
 130:	ubfx	x3, x3, #6, #6
 134:	orr	w4, w4, #0xfffffff0
 138:	orr	w1, w1, #0xffffff80
 13c:	orr	w3, w3, #0xffffff80
 140:	orr	w0, w0, #0xffffff80
 144:	sturb	w4, [x2, #-4]
 148:	sturb	w1, [x2, #-3]
 14c:	sturb	w3, [x2, #-2]
 150:	sturb	w0, [x2, #-1]
 154:	sub	x6, x6, #0x1
 158:	cmn	x6, #0x1
 15c:	b.eq	188 <grub_mod_init-0x938>  // b.none
 160:	mov	x5, x8
 164:	ldrh	w3, [x5], #2
 168:	cbnz	w7, 100 <grub_mod_init-0x9c0>
 16c:	cmp	w3, #0x7f
 170:	b.hi	1ec <grub_mod_init-0x8d4>  // b.pmore
 174:	strb	w3, [x2], #1
 178:	sub	x6, x6, #0x1
 17c:	mov	x8, x5
 180:	cmn	x6, #0x1
 184:	b.ne	160 <grub_mod_init-0x960>  // b.any
 188:	mov	x1, x20
 18c:	strb	wzr, [x2]
 190:	mov	w0, #0x15                  	// #21
 194:	bl	0 <grub_error>
 198:	mov	x0, x20
 19c:	bl	0 <grub_free>
 1a0:	ldr	x0, [sp, #40]
 1a4:	cbz	x0, 1b0 <grub_mod_init-0x910>
 1a8:	ldr	x1, [x19, #72]
 1ac:	blr	x1
 1b0:	bl	0 <grub_loader_unset>
 1b4:	adrp	x0, 0 <grub_mod_init-0xac0>
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldr	x0, [x0]
 1c0:	ldr	w0, [x0]
 1c4:	ldp	x29, x30, [sp], #48
 1c8:	ret
 1cc:	adrp	x1, 0 <grub_mod_init-0xac0>
 1d0:	mov	w0, #0x15                  	// #21
 1d4:	ldr	x1, [x1]
 1d8:	bl	0 <grub_error>
 1dc:	b	1a0 <grub_mod_init-0x920>
 1e0:	mov	w7, #0x0                   	// #0
 1e4:	strb	w11, [x2], #1
 1e8:	b	154 <grub_mod_init-0x96c>
 1ec:	cmp	w3, #0x7ff
 1f0:	b.hi	21c <grub_mod_init-0x8a4>  // b.pmore
 1f4:	mov	x0, x2
 1f8:	lsr	w1, w3, #6
 1fc:	orr	w1, w1, #0xffffffc0
 200:	and	w3, w3, #0x3f
 204:	orr	w3, w3, #0xffffff80
 208:	mov	x8, x5
 20c:	strb	w1, [x0], #2
 210:	strb	w3, [x2, #1]
 214:	mov	x2, x0
 218:	b	154 <grub_mod_init-0x96c>
 21c:	add	w0, w3, w10
 220:	cmp	w0, #0x3ff
 224:	b.ls	270 <grub_mod_init-0x850>  // b.plast
 228:	add	w0, w3, w9
 22c:	cmp	w0, #0x3ff
 230:	b.hi	240 <grub_mod_init-0x880>  // b.pmore
 234:	mov	x8, x5
 238:	strb	w11, [x2], #1
 23c:	b	154 <grub_mod_init-0x96c>
 240:	lsr	w1, w3, #12
 244:	ubfx	x0, x3, #6, #6
 248:	and	w3, w3, #0x3f
 24c:	orr	w1, w1, #0xffffffe0
 250:	orr	w0, w0, #0xffffff80
 254:	orr	w3, w3, #0xffffff80
 258:	mov	x8, x5
 25c:	add	x2, x2, #0x3
 260:	sturb	w1, [x2, #-3]
 264:	sturb	w0, [x2, #-2]
 268:	sturb	w3, [x2, #-1]
 26c:	b	154 <grub_mod_init-0x96c>
 270:	mov	w7, w3
 274:	mov	x8, x5
 278:	b	154 <grub_mod_init-0x96c>
 27c:	nop
	...
 2a0:	stp	x29, x30, [sp, #-64]!
 2a4:	mov	w3, #0x404                 	// #1028
 2a8:	mov	x29, sp
 2ac:	stp	x21, x22, [sp, #32]
 2b0:	mov	x21, x0
 2b4:	ubfiz	x0, x2, #1, #16
 2b8:	stp	x19, x20, [sp, #16]
 2bc:	mov	x19, x1
 2c0:	and	x20, x2, #0xffff
 2c4:	strh	w3, [x21]
 2c8:	bl	0 <grub_malloc>
 2cc:	cbz	x0, 4bc <grub_mod_init-0x604>
 2d0:	str	x23, [sp, #48]
 2d4:	mov	x22, x0
 2d8:	cbz	x20, 4cc <grub_mod_init-0x5f4>
 2dc:	mov	x2, x0
 2e0:	mov	x8, x20
 2e4:	mov	w5, #0x0                   	// #0
 2e8:	mov	w6, #0x0                   	// #0
 2ec:	mov	w11, #0xffff                	// #65535
 2f0:	mov	w10, #0xffffd800            	// #-10240
 2f4:	mov	w1, #0xffffdc00            	// #-9216
 2f8:	mov	x4, x19
 2fc:	sub	x20, x20, #0x1
 300:	ldrb	w3, [x4], #1
 304:	cbz	w6, 3e0 <grub_mod_init-0x6e0>
 308:	and	w7, w3, #0xc0
 30c:	cmp	w7, #0x80
 310:	b.ne	338 <grub_mod_init-0x788>  // b.any
 314:	sub	w6, w6, #0x1
 318:	bfi	w3, w5, #6, #26
 31c:	mov	w5, w3
 320:	cmp	w6, #0x1
 324:	b.eq	3d0 <grub_mod_init-0x6f0>  // b.none
 328:	cmp	w6, #0x2
 32c:	b.ne	460 <grub_mod_init-0x660>  // b.any
 330:	cmp	w3, #0xf
 334:	b.hi	3d8 <grub_mod_init-0x6e8>  // b.pmore
 338:	mov	w5, #0x3f                  	// #63
 33c:	mov	w7, w5
 340:	sub	x8, x8, #0x1
 344:	mov	w6, #0x0                   	// #0
 348:	strh	w7, [x2], #2
 34c:	cmp	x20, #0x0
 350:	ccmp	x8, #0x0, #0x4, ne  // ne = any
 354:	b.ne	2f8 <grub_mod_init-0x7c8>  // b.any
 358:	sub	x2, x2, x22
 35c:	and	x20, x2, #0x1fffe
 360:	ubfx	w19, w2, #1, #16
 364:	add	x0, x22, x20
 368:	add	w23, w19, #0x3
 36c:	cmp	x22, x0
 370:	ubfiz	w23, w23, #1, #15
 374:	b.cs	39c <grub_mod_init-0x724>  // b.hs, b.nlast
 378:	mov	x2, x22
 37c:	mov	w1, #0x5c                  	// #92
 380:	ldrh	w3, [x2]
 384:	cmp	w3, #0x2f
 388:	b.ne	390 <grub_mod_init-0x730>  // b.any
 38c:	strh	w1, [x2]
 390:	add	x2, x2, #0x2
 394:	cmp	x2, x0
 398:	b.cc	380 <grub_mod_init-0x740>  // b.lo, b.ul, b.last
 39c:	add	x19, x21, w19, sxtw #1
 3a0:	mov	x2, x20
 3a4:	mov	x1, x22
 3a8:	add	x0, x21, #0x4
 3ac:	bl	0 <grub_memmove>
 3b0:	strh	wzr, [x19, #4]
 3b4:	mov	x0, x22
 3b8:	strh	w23, [x21, #2]
 3bc:	ldp	x19, x20, [sp, #16]
 3c0:	ldp	x21, x22, [sp, #32]
 3c4:	ldr	x23, [sp, #48]
 3c8:	ldp	x29, x30, [sp], #64
 3cc:	b	0 <grub_free>
 3d0:	cmp	w3, #0x1f
 3d4:	b.ls	338 <grub_mod_init-0x788>  // b.plast
 3d8:	mov	x19, x4
 3dc:	b	34c <grub_mod_init-0x774>
 3e0:	mov	w5, w3
 3e4:	tbz	w3, #7, 414 <grub_mod_init-0x6ac>
 3e8:	and	w0, w3, #0xe0
 3ec:	cmp	w0, #0xc0
 3f0:	b.eq	470 <grub_mod_init-0x650>  // b.none
 3f4:	and	w0, w3, #0xf0
 3f8:	cmp	w0, #0xe0
 3fc:	b.eq	4ac <grub_mod_init-0x614>  // b.none
 400:	and	w0, w3, #0xf8
 404:	cmp	w0, #0xf0
 408:	b.eq	49c <grub_mod_init-0x624>  // b.none
 40c:	mov	x19, x4
 410:	b	338 <grub_mod_init-0x788>
 414:	cbz	w5, 358 <grub_mod_init-0x768>
 418:	cmp	x8, #0x1
 41c:	b.eq	488 <grub_mod_init-0x638>  // b.none
 420:	mov	x19, x4
 424:	cmp	w5, w11
 428:	and	w7, w5, #0xffff
 42c:	b.ls	340 <grub_mod_init-0x780>  // b.plast
 430:	mov	x9, x2
 434:	sub	w3, w5, #0x10, lsl #12
 438:	and	w7, w7, #0x3ff
 43c:	sub	x8, x8, #0x2
 440:	ubfx	x3, x3, #10, #10
 444:	orr	w7, w7, w1
 448:	orr	w3, w3, w10
 44c:	strh	w3, [x9], #4
 450:	mov	w6, #0x0                   	// #0
 454:	strh	w7, [x2, #2]
 458:	mov	x2, x9
 45c:	b	34c <grub_mod_init-0x774>
 460:	cbz	w6, 414 <grub_mod_init-0x6ac>
 464:	mov	x19, x4
 468:	mov	w6, #0x1                   	// #1
 46c:	b	34c <grub_mod_init-0x774>
 470:	tst	w3, #0x1e
 474:	b.eq	40c <grub_mod_init-0x6b4>  // b.none
 478:	and	w5, w3, #0x1f
 47c:	mov	x19, x4
 480:	mov	w6, #0x1                   	// #1
 484:	b	34c <grub_mod_init-0x774>
 488:	cmp	w5, w11
 48c:	b.hi	358 <grub_mod_init-0x768>  // b.pmore
 490:	mov	x19, x4
 494:	and	w7, w5, #0xffff
 498:	b	340 <grub_mod_init-0x780>
 49c:	and	w5, w3, #0x7
 4a0:	mov	x19, x4
 4a4:	mov	w6, #0x3                   	// #3
 4a8:	b	34c <grub_mod_init-0x774>
 4ac:	and	w5, w3, #0xf
 4b0:	mov	x19, x4
 4b4:	mov	w6, #0x2                   	// #2
 4b8:	b	34c <grub_mod_init-0x774>
 4bc:	ldp	x19, x20, [sp, #16]
 4c0:	ldp	x21, x22, [sp, #32]
 4c4:	ldp	x29, x30, [sp], #64
 4c8:	ret
 4cc:	mov	w23, #0x6                   	// #6
 4d0:	mov	w19, #0x0                   	// #0
 4d4:	b	39c <grub_mod_init-0x724>
 4d8:	stp	x29, x30, [sp, #-240]!
 4dc:	mov	x29, sp
 4e0:	cbz	w1, 77c <grub_mod_init-0x344>
 4e4:	adrp	x0, 0 <grub_mod_init-0xac0>
 4e8:	stp	x19, x20, [sp, #16]
 4ec:	mov	w20, w1
 4f0:	ldr	x19, [x0]
 4f4:	stp	x21, x22, [sp, #32]
 4f8:	mov	x21, x2
 4fc:	stp	x23, x24, [sp, #48]
 500:	ldr	x0, [x19, #40]
 504:	stp	x25, x26, [sp, #64]
 508:	ldr	x24, [x2]
 50c:	bl	0 <grub_dl_ref>
 510:	adrp	x2, 0 <grub_mod_init-0xac0>
 514:	mov	w1, #0x1d                  	// #29
 518:	mov	x0, x24
 51c:	str	xzr, [x19]
 520:	ldr	x2, [x2]
 524:	stp	xzr, xzr, [x19, #16]
 528:	ldr	x2, [x2]
 52c:	ldr	x25, [x2, #96]
 530:	bl	0 <grub_file_open>
 534:	mov	x22, x0
 538:	cbz	x0, 734 <grub_mod_init-0x38c>
 53c:	mov	x0, #0x0                   	// #0
 540:	bl	0 <grub_device_open>
 544:	mov	x23, x0
 548:	cbz	x0, 7e8 <grub_mod_init-0x2d8>
 54c:	ldr	x0, [x0]
 550:	cbz	x0, 794 <grub_mod_init-0x32c>
 554:	bl	0 <grub_efidisk_get_device_handle>
 558:	str	x0, [sp, #104]
 55c:	cbz	x0, 7cc <grub_mod_init-0x2f4>
 560:	bl	0 <grub_efi_get_device_path>
 564:	str	x0, [sp, #112]
 568:	mov	x26, x0
 56c:	cbz	x0, 7cc <grub_mod_init-0x2f4>
 570:	mov	w1, #0x29                  	// #41
 574:	mov	x0, x24
 578:	stp	x27, x28, [sp, #80]
 57c:	bl	0 <grub_strchr>
 580:	cmp	x0, #0x0
 584:	csinc	x27, x24, x0, eq  // eq = none
 588:	mov	w1, #0x2f                  	// #47
 58c:	mov	x0, x27
 590:	mov	x28, #0x0                   	// #0
 594:	bl	0 <grub_strrchr>
 598:	str	x0, [sp, #120]
 59c:	cbz	x0, 9c8 <grub_mod_init-0xf8>
 5a0:	ldrb	w0, [x26]
 5a4:	ldrh	w1, [x26, #2]
 5a8:	and	w0, w0, #0x7f
 5ac:	cmp	w0, #0x7f
 5b0:	add	x28, x28, x1
 5b4:	b.eq	5d4 <grub_mod_init-0x4ec>  // b.none
 5b8:	add	x26, x26, x1
 5bc:	ldrb	w0, [x26]
 5c0:	ldrh	w1, [x26, #2]
 5c4:	and	w0, w0, #0x7f
 5c8:	cmp	w0, #0x7f
 5cc:	add	x28, x28, x1
 5d0:	b.ne	5b8 <grub_mod_init-0x508>  // b.any
 5d4:	ldrb	w0, [x26, #1]
 5d8:	cmp	w0, #0xff
 5dc:	b.ne	5b8 <grub_mod_init-0x508>  // b.any
 5e0:	mov	x0, x27
 5e4:	bl	0 <grub_strlen>
 5e8:	add	x0, x28, x0, lsl #1
 5ec:	add	x0, x0, #0xc
 5f0:	bl	0 <grub_malloc>
 5f4:	str	x0, [x19, #24]
 5f8:	cbz	x0, 844 <grub_mod_init-0x27c>
 5fc:	mov	x2, x28
 600:	ldr	x28, [sp, #112]
 604:	mov	x1, x28
 608:	sub	x28, x26, x28
 60c:	bl	0 <grub_memmove>
 610:	ldr	x26, [sp, #120]
 614:	ldr	x3, [x19, #24]
 618:	add	x5, x26, #0x1
 61c:	str	x5, [sp, #112]
 620:	add	x28, x3, x28
 624:	mov	x0, x28
 628:	bl	0 <grub_efi_print_device_path>
 62c:	sub	x2, x26, x27
 630:	mov	x0, x28
 634:	mov	x1, x27
 638:	bl	2a0 <grub_mod_init-0x820>
 63c:	ldrh	w1, [x28, #2]
 640:	ldr	x5, [sp, #112]
 644:	add	x28, x28, x1
 648:	mov	x0, x5
 64c:	bl	0 <grub_strlen>
 650:	mov	w2, w0
 654:	ldr	x5, [sp, #112]
 658:	mov	x0, x28
 65c:	mov	x1, x5
 660:	bl	2a0 <grub_mod_init-0x820>
 664:	ldrh	w1, [x28, #2]
 668:	mov	w2, #0xff7f                	// #65407
 66c:	ldr	x0, [x19, #24]
 670:	movk	w2, #0x4, lsl #16
 674:	str	w2, [x28, x1]
 678:	cbz	x0, 844 <grub_mod_init-0x27c>
 67c:	adrp	x0, 0 <grub_mod_init-0xac0>
 680:	ldr	x0, [x0]
 684:	bl	0 <grub_printf>
 688:	ldr	x0, [x19, #24]
 68c:	bl	0 <grub_efi_print_device_path>
 690:	ldr	x27, [x22, #64]
 694:	cbz	x27, 898 <grub_mod_init-0x228>
 698:	ldr	x4, [x25, #40]
 69c:	add	x2, x27, #0xfff
 6a0:	add	x3, x19, #0x10
 6a4:	mov	w1, #0x1                   	// #1
 6a8:	lsr	x2, x2, #12
 6ac:	mov	w0, #0x0                   	// #0
 6b0:	str	x2, [x19, #8]
 6b4:	blr	x4
 6b8:	cbnz	x0, 854 <grub_mod_init-0x26c>
 6bc:	ldr	x28, [x19, #16]
 6c0:	mov	x2, x27
 6c4:	mov	x0, x22
 6c8:	mov	x1, x28
 6cc:	bl	0 <grub_file_read>
 6d0:	cmp	x27, x0
 6d4:	b.ne	82c <grub_mod_init-0x294>  // b.any
 6d8:	adrp	x0, 0 <grub_mod_init-0xac0>
 6dc:	mov	x4, x27
 6e0:	ldr	x2, [x19, #24]
 6e4:	mov	x3, x28
 6e8:	ldr	x1, [x0]
 6ec:	mov	x5, x19
 6f0:	ldr	x6, [x25, #200]
 6f4:	mov	w0, #0x0                   	// #0
 6f8:	ldr	x1, [x1]
 6fc:	blr	x6
 700:	cbz	x0, 8bc <grub_mod_init-0x204>
 704:	mov	x1, #0x9                   	// #9
 708:	movk	x1, #0x8000, lsl #48
 70c:	cmp	x0, x1
 710:	b.eq	9ec <grub_mod_init-0xd4>  // b.none
 714:	adrp	x1, 0 <grub_mod_init-0xac0>
 718:	mov	w0, #0x15                  	// #21
 71c:	ldr	x1, [x1]
 720:	bl	0 <grub_error>
 724:	adrp	x0, 0 <grub_mod_init-0xac0>
 728:	ldp	x27, x28, [sp, #80]
 72c:	ldr	x20, [x0]
 730:	b	7b8 <grub_mod_init-0x308>
 734:	adrp	x0, 0 <grub_mod_init-0xac0>
 738:	ldr	x20, [x0]
 73c:	ldr	x0, [x19, #24]
 740:	bl	0 <grub_free>
 744:	ldr	x0, [x19, #16]
 748:	cbz	x0, 758 <grub_mod_init-0x368>
 74c:	ldr	x1, [x19, #8]
 750:	ldr	x2, [x25, #48]
 754:	blr	x2
 758:	ldr	x0, [x19, #40]
 75c:	bl	0 <grub_dl_unref>
 760:	ldr	w0, [x20]
 764:	ldp	x19, x20, [sp, #16]
 768:	ldp	x21, x22, [sp, #32]
 76c:	ldp	x23, x24, [sp, #48]
 770:	ldp	x25, x26, [sp, #64]
 774:	ldp	x29, x30, [sp], #240
 778:	ret
 77c:	adrp	x1, 0 <grub_mod_init-0xac0>
 780:	mov	w0, #0x12                  	// #18
 784:	ldr	x1, [x1]
 788:	bl	0 <grub_error>
 78c:	ldp	x29, x30, [sp], #240
 790:	ret
 794:	ldr	x0, [x23, #8]
 798:	cbz	x0, 7cc <grub_mod_init-0x2f4>
 79c:	ldr	x0, [x0]
 7a0:	cbz	x0, 7cc <grub_mod_init-0x2f4>
 7a4:	add	x1, sp, #0xb0
 7a8:	bl	0 <grub_net_resolve_address>
 7ac:	cbz	w0, 7f4 <grub_mod_init-0x2cc>
 7b0:	adrp	x0, 0 <grub_mod_init-0xac0>
 7b4:	ldr	x20, [x0]
 7b8:	mov	x0, x23
 7bc:	bl	0 <grub_device_close>
 7c0:	mov	x0, x22
 7c4:	bl	0 <grub_file_close>
 7c8:	b	73c <grub_mod_init-0x384>
 7cc:	adrp	x1, 0 <grub_mod_init-0xac0>
 7d0:	mov	w0, #0xd                   	// #13
 7d4:	ldr	x1, [x1]
 7d8:	bl	0 <grub_error>
 7dc:	adrp	x0, 0 <grub_mod_init-0xac0>
 7e0:	ldr	x20, [x0]
 7e4:	b	7b8 <grub_mod_init-0x308>
 7e8:	adrp	x0, 0 <grub_mod_init-0xac0>
 7ec:	ldr	x20, [x0]
 7f0:	b	7c0 <grub_mod_init-0x300>
 7f4:	ldp	x6, x7, [sp, #176]
 7f8:	add	x2, sp, #0xa8
 7fc:	ldp	x4, x5, [sp, #192]
 800:	add	x1, sp, #0xd0
 804:	add	x0, sp, #0x80
 808:	stp	x6, x7, [sp, #128]
 80c:	stp	x4, x5, [sp, #144]
 810:	bl	0 <grub_net_route_address>
 814:	cbnz	w0, 7b0 <grub_mod_init-0x310>
 818:	ldr	x0, [sp, #168]
 81c:	ldr	x0, [x0, #24]
 820:	bl	0 <grub_efinet_get_device_handle>
 824:	str	x0, [sp, #104]
 828:	b	55c <grub_mod_init-0x564>
 82c:	adrp	x0, 0 <grub_mod_init-0xac0>
 830:	ldr	x20, [x0]
 834:	ldr	w0, [x20]
 838:	cbz	w0, 9ac <grub_mod_init-0x114>
 83c:	ldp	x27, x28, [sp, #80]
 840:	b	7b8 <grub_mod_init-0x308>
 844:	adrp	x0, 0 <grub_mod_init-0xac0>
 848:	ldp	x27, x28, [sp, #80]
 84c:	ldr	x20, [x0]
 850:	b	7b8 <grub_mod_init-0x308>
 854:	adrp	x1, 0 <grub_mod_init-0xac0>
 858:	adrp	x2, 0 <grub_mod_init-0xac0>
 85c:	adrp	x0, 0 <grub_mod_init-0xac0>
 860:	ldr	w4, [x19, #8]
 864:	ldr	x3, [x1]
 868:	mov	w1, #0x11f                 	// #287
 86c:	ldr	x2, [x2]
 870:	ldr	x0, [x0]
 874:	bl	0 <grub_real_dprintf>
 878:	adrp	x1, 0 <grub_mod_init-0xac0>
 87c:	mov	w0, #0x3                   	// #3
 880:	ldr	x1, [x1]
 884:	bl	0 <grub_error>
 888:	adrp	x0, 0 <grub_mod_init-0xac0>
 88c:	ldp	x27, x28, [sp, #80]
 890:	ldr	x20, [x0]
 894:	b	7b8 <grub_mod_init-0x308>
 898:	adrp	x1, 0 <grub_mod_init-0xac0>
 89c:	mov	x2, x24
 8a0:	mov	w0, #0x15                  	// #21
 8a4:	ldr	x1, [x1]
 8a8:	bl	0 <grub_error>
 8ac:	adrp	x0, 0 <grub_mod_init-0xac0>
 8b0:	ldp	x27, x28, [sp, #80]
 8b4:	ldr	x20, [x0]
 8b8:	b	7b8 <grub_mod_init-0x308>
 8bc:	ldr	x0, [x19]
 8c0:	bl	0 <grub_efi_get_loaded_image>
 8c4:	mov	x24, x0
 8c8:	cbz	x0, a0c <grub_mod_init-0xb4>
 8cc:	ldr	x0, [sp, #104]
 8d0:	str	x0, [x24, #24]
 8d4:	cmp	w20, #0x1
 8d8:	b.le	968 <grub_mod_init-0x158>
 8dc:	sub	w26, w20, #0x2
 8e0:	add	x0, x21, #0x10
 8e4:	add	x27, x21, #0x8
 8e8:	mov	w28, #0x0                   	// #0
 8ec:	add	x26, x0, w26, uxtw #3
 8f0:	ldr	x0, [x27], #8
 8f4:	bl	0 <grub_strlen>
 8f8:	add	x0, x0, #0x1
 8fc:	cmp	x26, x27
 900:	add	w28, w28, w0
 904:	b.ne	8f0 <grub_mod_init-0x1d0>  // b.any
 908:	lsl	w28, w28, #1
 90c:	sxtw	x0, w28
 910:	bl	0 <grub_malloc>
 914:	str	x0, [x19, #32]
 918:	cbz	x0, 844 <grub_mod_init-0x27c>
 91c:	mov	x2, x0
 920:	mov	x4, #0x1                   	// #1
 924:	mov	w5, #0x20                  	// #32
 928:	ldr	x3, [x21, x4, lsl #3]
 92c:	ldrb	w1, [x3]
 930:	cbz	w1, 944 <grub_mod_init-0x17c>
 934:	nop
 938:	strh	w1, [x2], #2
 93c:	ldrb	w1, [x3, #1]!
 940:	cbnz	w1, 938 <grub_mod_init-0x188>
 944:	strh	w5, [x2]
 948:	add	x4, x4, #0x1
 94c:	mov	x1, x2
 950:	cmp	w20, w4
 954:	add	x2, x2, #0x2
 958:	b.gt	928 <grub_mod_init-0x198>
 95c:	strh	wzr, [x1]
 960:	str	w28, [x24, #48]
 964:	str	x0, [x24, #56]
 968:	mov	x0, x22
 96c:	bl	0 <grub_file_close>
 970:	mov	x0, x23
 974:	bl	0 <grub_device_close>
 978:	adrp	x1, 0 <grub_mod_init-0xac0>
 97c:	adrp	x0, 0 <grub_mod_init-0xac0>
 980:	mov	w2, #0x0                   	// #0
 984:	ldr	x0, [x0]
 988:	ldr	x1, [x1]
 98c:	bl	0 <grub_loader_set>
 990:	mov	w0, #0x0                   	// #0
 994:	ldp	x19, x20, [sp, #16]
 998:	ldp	x21, x22, [sp, #32]
 99c:	ldp	x23, x24, [sp, #48]
 9a0:	ldp	x25, x26, [sp, #64]
 9a4:	ldp	x27, x28, [sp, #80]
 9a8:	b	774 <grub_mod_init-0x34c>
 9ac:	adrp	x1, 0 <grub_mod_init-0xac0>
 9b0:	mov	x2, x24
 9b4:	mov	w0, #0x15                  	// #21
 9b8:	ldr	x1, [x1]
 9bc:	bl	0 <grub_error>
 9c0:	ldp	x27, x28, [sp, #80]
 9c4:	b	7b8 <grub_mod_init-0x308>
 9c8:	adrp	x1, 0 <grub_mod_init-0xac0>
 9cc:	mov	w0, #0x7                   	// #7
 9d0:	ldr	x1, [x1]
 9d4:	bl	0 <grub_error>
 9d8:	adrp	x0, 0 <grub_mod_init-0xac0>
 9dc:	ldp	x27, x28, [sp, #80]
 9e0:	str	xzr, [x19, #24]
 9e4:	ldr	x20, [x0]
 9e8:	b	7b8 <grub_mod_init-0x308>
 9ec:	adrp	x1, 0 <grub_mod_init-0xac0>
 9f0:	mov	w0, #0x3                   	// #3
 9f4:	ldr	x1, [x1]
 9f8:	bl	0 <grub_error>
 9fc:	adrp	x0, 0 <grub_mod_init-0xac0>
 a00:	ldp	x27, x28, [sp, #80]
 a04:	ldr	x20, [x0]
 a08:	b	7b8 <grub_mod_init-0x308>
 a0c:	adrp	x1, 0 <grub_mod_init-0xac0>
 a10:	mov	w0, #0x15                  	// #21
 a14:	ldr	x1, [x1]
 a18:	bl	0 <grub_error>
 a1c:	adrp	x0, 0 <grub_mod_init-0xac0>
 a20:	ldp	x27, x28, [sp, #80]
 a24:	ldr	x20, [x0]
 a28:	b	7b8 <grub_mod_init-0x308>
 a2c:	nop
	...

0000000000000ac0 <grub_mod_init>:
 ac0:	stp	x29, x30, [sp, #-32]!
 ac4:	adrp	x2, 0 <grub_mod_init-0xac0>
 ac8:	adrp	x3, 0 <grub_mod_init-0xac0>
 acc:	adrp	x1, 0 <grub_mod_init-0xac0>
 ad0:	mov	x29, sp
 ad4:	ldr	x3, [x3]
 ad8:	str	x19, [sp, #16]
 adc:	ldr	x1, [x1]
 ae0:	mov	x19, x0
 ae4:	ldr	x0, [x2]
 ae8:	mov	w4, #0x0                   	// #0
 aec:	mov	x2, #0x0                   	// #0
 af0:	bl	0 <grub_register_command_prio>
 af4:	adrp	x1, 0 <grub_mod_init-0xac0>
 af8:	ldr	x1, [x1]
 afc:	stp	x19, x0, [x1, #40]
 b00:	ldr	x19, [sp, #16]
 b04:	ldp	x29, x30, [sp], #32
 b08:	ret
 b0c:	nop
	...

0000000000000b30 <grub_mod_fini>:
 b30:	adrp	x0, 0 <grub_mod_init-0xac0>
 b34:	ldr	x0, [x0]
 b38:	ldr	x0, [x0, #48]
 b3c:	b	0 <grub_unregister_command>
	...
