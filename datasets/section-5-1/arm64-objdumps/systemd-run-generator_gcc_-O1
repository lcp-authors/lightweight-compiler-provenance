
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-run-generator_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400e20 <_init>:
  400e20:	stp	x29, x30, [sp, #-16]!
  400e24:	mov	x29, sp
  400e28:	bl	4010a0 <call_weak_fn>
  400e2c:	ldp	x29, x30, [sp], #16
  400e30:	ret

Disassembly of section .plt:

0000000000400e40 <.plt>:
  400e40:	stp	x16, x30, [sp, #-16]!
  400e44:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400e48:	ldr	x17, [x16, #3824]
  400e4c:	add	x16, x16, #0xef0
  400e50:	br	x17
  400e54:	nop
  400e58:	nop
  400e5c:	nop

0000000000400e60 <safe_fclose@plt>:
  400e60:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400e64:	ldr	x17, [x16, #3832]
  400e68:	add	x16, x16, #0xef8
  400e6c:	br	x17

0000000000400e70 <strcmp_ptr@plt>:
  400e70:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400e74:	ldr	x17, [x16, #3840]
  400e78:	add	x16, x16, #0xf00
  400e7c:	br	x17

0000000000400e80 <stpcpy@plt>:
  400e80:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400e84:	ldr	x17, [x16, #3848]
  400e88:	add	x16, x16, #0xf08
  400e8c:	br	x17

0000000000400e90 <__libc_start_main@plt>:
  400e90:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400e94:	ldr	x17, [x16, #3856]
  400e98:	add	x16, x16, #0xf10
  400e9c:	br	x17

0000000000400ea0 <__gmon_start__@plt>:
  400ea0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ea4:	ldr	x17, [x16, #3864]
  400ea8:	add	x16, x16, #0xf18
  400eac:	br	x17

0000000000400eb0 <write_string_file_ts@plt>:
  400eb0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400eb4:	ldr	x17, [x16, #3872]
  400eb8:	add	x16, x16, #0xf20
  400ebc:	br	x17

0000000000400ec0 <polkit_agent_close@plt>:
  400ec0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ec4:	ldr	x17, [x16, #3880]
  400ec8:	add	x16, x16, #0xf28
  400ecc:	br	x17

0000000000400ed0 <free_and_strdup@plt>:
  400ed0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ed4:	ldr	x17, [x16, #3888]
  400ed8:	add	x16, x16, #0xf30
  400edc:	br	x17

0000000000400ee0 <proc_cmdline_key_streq@plt>:
  400ee0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ee4:	ldr	x17, [x16, #3896]
  400ee8:	add	x16, x16, #0xf38
  400eec:	br	x17

0000000000400ef0 <fprintf@plt>:
  400ef0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ef4:	ldr	x17, [x16, #3904]
  400ef8:	add	x16, x16, #0xf40
  400efc:	br	x17

0000000000400f00 <symlink@plt>:
  400f00:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f04:	ldr	x17, [x16, #3912]
  400f08:	add	x16, x16, #0xf48
  400f0c:	br	x17

0000000000400f10 <log_assert_failed_realm@plt>:
  400f10:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f14:	ldr	x17, [x16, #3920]
  400f18:	add	x16, x16, #0xf50
  400f1c:	br	x17

0000000000400f20 <abort@plt>:
  400f20:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f24:	ldr	x17, [x16, #3928]
  400f28:	add	x16, x16, #0xf58
  400f2c:	br	x17

0000000000400f30 <log_setup_generator@plt>:
  400f30:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f34:	ldr	x17, [x16, #3936]
  400f38:	add	x16, x16, #0xf60
  400f3c:	br	x17

0000000000400f40 <strreplace@plt>:
  400f40:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f44:	ldr	x17, [x16, #3944]
  400f48:	add	x16, x16, #0xf68
  400f4c:	br	x17

0000000000400f50 <__errno_location@plt>:
  400f50:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f54:	ldr	x17, [x16, #3952]
  400f58:	add	x16, x16, #0xf70
  400f5c:	br	x17

0000000000400f60 <strv_free@plt>:
  400f60:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f64:	ldr	x17, [x16, #3960]
  400f68:	add	x16, x16, #0xf78
  400f6c:	br	x17

0000000000400f70 <strv_extend@plt>:
  400f70:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f74:	ldr	x17, [x16, #3968]
  400f78:	add	x16, x16, #0xf80
  400f7c:	br	x17

0000000000400f80 <__stack_chk_fail@plt>:
  400f80:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f84:	ldr	x17, [x16, #3976]
  400f88:	add	x16, x16, #0xf88
  400f8c:	br	x17

0000000000400f90 <ask_password_agent_close@plt>:
  400f90:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400f94:	ldr	x17, [x16, #3984]
  400f98:	add	x16, x16, #0xf90
  400f9c:	br	x17

0000000000400fa0 <pager_close@plt>:
  400fa0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400fa4:	ldr	x17, [x16, #3992]
  400fa8:	add	x16, x16, #0xf98
  400fac:	br	x17

0000000000400fb0 <log_internal_realm@plt>:
  400fb0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400fb4:	ldr	x17, [x16, #4000]
  400fb8:	add	x16, x16, #0xfa0
  400fbc:	br	x17

0000000000400fc0 <proc_cmdline_parse@plt>:
  400fc0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400fc4:	ldr	x17, [x16, #4008]
  400fc8:	add	x16, x16, #0xfa8
  400fcc:	br	x17

0000000000400fd0 <free@plt>:
  400fd0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400fd4:	ldr	x17, [x16, #4016]
  400fd8:	add	x16, x16, #0xfb0
  400fdc:	br	x17

0000000000400fe0 <fwrite@plt>:
  400fe0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400fe4:	ldr	x17, [x16, #4024]
  400fe8:	add	x16, x16, #0xfb8
  400fec:	br	x17

0000000000400ff0 <mac_selinux_finish@plt>:
  400ff0:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  400ff4:	ldr	x17, [x16, #4032]
  400ff8:	add	x16, x16, #0xfc0
  400ffc:	br	x17

0000000000401000 <strlen@plt>:
  401000:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  401004:	ldr	x17, [x16, #4040]
  401008:	add	x16, x16, #0xfc8
  40100c:	br	x17

0000000000401010 <fopen64@plt>:
  401010:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  401014:	ldr	x17, [x16, #4048]
  401018:	add	x16, x16, #0xfd0
  40101c:	br	x17

0000000000401020 <log_oom_internal@plt>:
  401020:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  401024:	ldr	x17, [x16, #4056]
  401028:	add	x16, x16, #0xfd8
  40102c:	br	x17

0000000000401030 <fflush_and_check@plt>:
  401030:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  401034:	ldr	x17, [x16, #4064]
  401038:	add	x16, x16, #0xfe0
  40103c:	br	x17

0000000000401040 <log_get_max_level_realm@plt>:
  401040:	adrp	x16, 412000 <__FRAME_END__+0xfcd0>
  401044:	ldr	x17, [x16, #4072]
  401048:	add	x16, x16, #0xfe8
  40104c:	br	x17

Disassembly of section .text:

0000000000401050 <_start>:
  401050:	mov	x29, #0x0                   	// #0
  401054:	mov	x30, #0x0                   	// #0
  401058:	mov	x5, x0
  40105c:	ldr	x1, [sp]
  401060:	add	x2, sp, #0x8
  401064:	mov	x6, sp
  401068:	movz	x0, #0x0, lsl #48
  40106c:	movk	x0, #0x0, lsl #32
  401070:	movk	x0, #0x40, lsl #16
  401074:	movk	x0, #0x1944
  401078:	movz	x3, #0x0, lsl #48
  40107c:	movk	x3, #0x0, lsl #32
  401080:	movk	x3, #0x40, lsl #16
  401084:	movk	x3, #0x1ae0
  401088:	movz	x4, #0x0, lsl #48
  40108c:	movk	x4, #0x0, lsl #32
  401090:	movk	x4, #0x40, lsl #16
  401094:	movk	x4, #0x1b60
  401098:	bl	400e90 <__libc_start_main@plt>
  40109c:	bl	400f20 <abort@plt>

00000000004010a0 <call_weak_fn>:
  4010a0:	adrp	x0, 412000 <__FRAME_END__+0xfcd0>
  4010a4:	ldr	x0, [x0, #4088]
  4010a8:	cbz	x0, 4010b0 <call_weak_fn+0x10>
  4010ac:	b	400ea0 <__gmon_start__@plt>
  4010b0:	ret

00000000004010b4 <deregister_tm_clones>:
  4010b4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010b8:	add	x0, x0, #0x0
  4010bc:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  4010c0:	add	x1, x1, #0x0
  4010c4:	cmp	x0, x1
  4010c8:	b.eq	4010fc <deregister_tm_clones+0x48>  // b.none
  4010cc:	stp	x29, x30, [sp, #-32]!
  4010d0:	mov	x29, sp
  4010d4:	adrp	x0, 401000 <strlen@plt>
  4010d8:	ldr	x0, [x0, #2936]
  4010dc:	str	x0, [sp, #24]
  4010e0:	mov	x1, x0
  4010e4:	cbz	x1, 4010f4 <deregister_tm_clones+0x40>
  4010e8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010ec:	add	x0, x0, #0x0
  4010f0:	blr	x1
  4010f4:	ldp	x29, x30, [sp], #32
  4010f8:	ret
  4010fc:	ret

0000000000401100 <register_tm_clones>:
  401100:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401104:	add	x0, x0, #0x0
  401108:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  40110c:	add	x1, x1, #0x0
  401110:	sub	x0, x0, x1
  401114:	lsr	x1, x0, #63
  401118:	add	x0, x1, x0, asr #3
  40111c:	cmp	xzr, x0, asr #1
  401120:	b.eq	401158 <register_tm_clones+0x58>  // b.none
  401124:	stp	x29, x30, [sp, #-32]!
  401128:	mov	x29, sp
  40112c:	asr	x1, x0, #1
  401130:	adrp	x0, 401000 <strlen@plt>
  401134:	ldr	x0, [x0, #2944]
  401138:	str	x0, [sp, #24]
  40113c:	mov	x2, x0
  401140:	cbz	x2, 401150 <register_tm_clones+0x50>
  401144:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401148:	add	x0, x0, #0x0
  40114c:	blr	x2
  401150:	ldp	x29, x30, [sp], #32
  401154:	ret
  401158:	ret

000000000040115c <__do_global_dtors_aux>:
  40115c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401160:	ldrb	w0, [x0, #12]
  401164:	cbnz	w0, 401188 <__do_global_dtors_aux+0x2c>
  401168:	stp	x29, x30, [sp, #-16]!
  40116c:	mov	x29, sp
  401170:	bl	4010b4 <deregister_tm_clones>
  401174:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401178:	mov	w1, #0x1                   	// #1
  40117c:	strb	w1, [x0, #12]
  401180:	ldp	x29, x30, [sp], #16
  401184:	ret
  401188:	ret

000000000040118c <frame_dummy>:
  40118c:	stp	x29, x30, [sp, #-16]!
  401190:	mov	x29, sp
  401194:	bl	401100 <register_tm_clones>
  401198:	ldp	x29, x30, [sp], #16
  40119c:	ret

00000000004011a0 <__unique_prefix_static_destructor_wrapper0>:
  4011a0:	ldr	x0, [x0]
  4011a4:	cbz	x0, 4011bc <__unique_prefix_static_destructor_wrapper0+0x1c>
  4011a8:	stp	x29, x30, [sp, #-16]!
  4011ac:	mov	x29, sp
  4011b0:	bl	400f60 <strv_free@plt>
  4011b4:	ldp	x29, x30, [sp], #16
  4011b8:	ret
  4011bc:	ret

00000000004011c0 <__unique_prefix_static_destructor_wrapper1>:
  4011c0:	stp	x29, x30, [sp, #-16]!
  4011c4:	mov	x29, sp
  4011c8:	ldr	x0, [x0]
  4011cc:	bl	400fd0 <free@plt>
  4011d0:	ldp	x29, x30, [sp], #16
  4011d4:	ret

00000000004011d8 <__unique_prefix_static_destructor_wrapper2>:
  4011d8:	stp	x29, x30, [sp, #-16]!
  4011dc:	mov	x29, sp
  4011e0:	ldr	x0, [x0]
  4011e4:	bl	400fd0 <free@plt>
  4011e8:	ldp	x29, x30, [sp], #16
  4011ec:	ret

00000000004011f0 <generate>:
  4011f0:	stp	x29, x30, [sp, #-96]!
  4011f4:	mov	x29, sp
  4011f8:	stp	x19, x20, [sp, #16]
  4011fc:	stp	x21, x22, [sp, #32]
  401200:	stp	x23, x24, [sp, #48]
  401204:	str	x25, [sp, #64]
  401208:	adrp	x0, 412000 <__FRAME_END__+0xfcd0>
  40120c:	ldr	x1, [x0, #3240]
  401210:	str	x1, [x29, #88]
  401214:	mov	x1, #0x0                   	// #0
  401218:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40121c:	ldr	x0, [x0, #16]
  401220:	cbz	x0, 401364 <generate+0x174>
  401224:	ldr	x0, [x0]
  401228:	cbz	x0, 401364 <generate+0x174>
  40122c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401230:	ldr	x19, [x0, #24]
  401234:	cbz	x19, 401378 <generate+0x188>
  401238:	mov	x0, x19
  40123c:	bl	401000 <strlen@plt>
  401240:	add	x0, x0, #0x1d
  401244:	cmp	x0, #0x400, lsl #12
  401248:	b.hi	40138c <generate+0x19c>  // b.pmore
  40124c:	add	x0, x0, #0xf
  401250:	and	x0, x0, #0xfffffffffffffff0
  401254:	sub	sp, sp, x0
  401258:	mov	x22, sp
  40125c:	mov	x1, x19
  401260:	mov	x0, x22
  401264:	bl	400e80 <stpcpy@plt>
  401268:	adrp	x1, 401000 <strlen@plt>
  40126c:	add	x1, x1, #0xbd8
  401270:	ldp	x2, x3, [x1]
  401274:	stp	x2, x3, [x0]
  401278:	ldr	x2, [x1, #16]
  40127c:	str	x2, [x0, #16]
  401280:	ldur	x1, [x1, #21]
  401284:	stur	x1, [x0, #21]
  401288:	add	x0, x0, #0x1c
  40128c:	strb	wzr, [x0]
  401290:	adrp	x1, 401000 <strlen@plt>
  401294:	add	x1, x1, #0xbf8
  401298:	mov	x0, x22
  40129c:	bl	401010 <fopen64@plt>
  4012a0:	mov	x21, x0
  4012a4:	cbz	x0, 4013b0 <generate+0x1c0>
  4012a8:	mov	x3, x0
  4012ac:	mov	x2, #0xac                  	// #172
  4012b0:	mov	x1, #0x1                   	// #1
  4012b4:	adrp	x0, 401000 <strlen@plt>
  4012b8:	add	x0, x0, #0xc28
  4012bc:	bl	400fe0 <fwrite@plt>
  4012c0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012c4:	ldr	x19, [x0, #40]
  4012c8:	adrp	x1, 401000 <strlen@plt>
  4012cc:	add	x1, x1, #0xcd8
  4012d0:	mov	x0, x19
  4012d4:	bl	400e70 <strcmp_ptr@plt>
  4012d8:	cbz	w0, 4012f4 <generate+0x104>
  4012dc:	cbz	x19, 401410 <generate+0x220>
  4012e0:	mov	x2, x19
  4012e4:	adrp	x1, 401000 <strlen@plt>
  4012e8:	add	x1, x1, #0xce0
  4012ec:	mov	x0, x21
  4012f0:	bl	400ef0 <fprintf@plt>
  4012f4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012f8:	ldr	x19, [x0, #32]
  4012fc:	adrp	x1, 401000 <strlen@plt>
  401300:	add	x1, x1, #0xcd8
  401304:	mov	x0, x19
  401308:	bl	400e70 <strcmp_ptr@plt>
  40130c:	cbz	w0, 401328 <generate+0x138>
  401310:	cbz	x19, 40141c <generate+0x22c>
  401314:	mov	x2, x19
  401318:	adrp	x1, 401000 <strlen@plt>
  40131c:	add	x1, x1, #0xcf8
  401320:	mov	x0, x21
  401324:	bl	400ef0 <fprintf@plt>
  401328:	mov	x3, x21
  40132c:	mov	x2, #0x37                  	// #55
  401330:	mov	x1, #0x1                   	// #1
  401334:	adrp	x0, 401000 <strlen@plt>
  401338:	add	x0, x0, #0xd10
  40133c:	bl	400fe0 <fwrite@plt>
  401340:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401344:	ldr	x20, [x0, #16]
  401348:	cbz	x20, 4014bc <generate+0x2cc>
  40134c:	adrp	x24, 401000 <strlen@plt>
  401350:	add	x24, x24, #0xd48
  401354:	adrp	x23, 401000 <strlen@plt>
  401358:	add	x23, x23, #0xd50
  40135c:	adrp	x25, 401000 <strlen@plt>
  401360:	b	401444 <generate+0x254>
  401364:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401368:	ldr	x21, [x0, #40]
  40136c:	cbnz	x21, 40122c <generate+0x3c>
  401370:	mov	w19, #0x0                   	// #0
  401374:	b	401480 <generate+0x290>
  401378:	sub	sp, sp, #0x10
  40137c:	mov	x22, sp
  401380:	cbnz	x19, 40125c <generate+0x6c>
  401384:	mov	x0, x22
  401388:	b	40128c <generate+0x9c>
  40138c:	adrp	x4, 402000 <_fini+0x49c>
  401390:	add	x4, x4, #0x58
  401394:	mov	w3, #0x41                  	// #65
  401398:	adrp	x2, 401000 <strlen@plt>
  40139c:	add	x2, x2, #0xb93
  4013a0:	adrp	x1, 401000 <strlen@plt>
  4013a4:	add	x1, x1, #0xbb8
  4013a8:	mov	w0, #0x0                   	// #0
  4013ac:	bl	400f10 <log_assert_failed_realm@plt>
  4013b0:	bl	400f50 <__errno_location@plt>
  4013b4:	ldr	w19, [x0]
  4013b8:	mov	w0, #0x0                   	// #0
  4013bc:	bl	401040 <log_get_max_level_realm@plt>
  4013c0:	cmp	w0, #0x2
  4013c4:	b.gt	4013dc <generate+0x1ec>
  4013c8:	cmp	w19, #0x0
  4013cc:	cneg	w19, w19, lt  // lt = tstop
  4013d0:	and	w19, w19, #0xff
  4013d4:	neg	w19, w19
  4013d8:	b	401480 <generate+0x290>
  4013dc:	mov	x6, x22
  4013e0:	adrp	x5, 401000 <strlen@plt>
  4013e4:	add	x5, x5, #0xc00
  4013e8:	adrp	x4, 402000 <_fini+0x49c>
  4013ec:	add	x4, x4, #0x98
  4013f0:	mov	w3, #0x44                  	// #68
  4013f4:	adrp	x2, 401000 <strlen@plt>
  4013f8:	add	x2, x2, #0xb93
  4013fc:	mov	w1, w19
  401400:	mov	w0, #0x3                   	// #3
  401404:	bl	400fb0 <log_internal_realm@plt>
  401408:	mov	w19, w0
  40140c:	b	401480 <generate+0x290>
  401410:	adrp	x19, 401000 <strlen@plt>
  401414:	add	x19, x19, #0xb88
  401418:	b	4012e0 <generate+0xf0>
  40141c:	adrp	x19, 401000 <strlen@plt>
  401420:	add	x19, x19, #0xb88
  401424:	b	401314 <generate+0x124>
  401428:	mov	x2, x0
  40142c:	add	x1, x25, #0xd58
  401430:	mov	x0, x21
  401434:	bl	400ef0 <fprintf@plt>
  401438:	mov	x0, x19
  40143c:	bl	400fd0 <free@plt>
  401440:	add	x20, x20, #0x8
  401444:	ldr	x0, [x20]
  401448:	cbz	x0, 4014bc <generate+0x2cc>
  40144c:	mov	x2, x24
  401450:	mov	x1, x23
  401454:	bl	400f40 <strreplace@plt>
  401458:	mov	x19, x0
  40145c:	cbnz	x0, 401428 <generate+0x238>
  401460:	adrp	x3, 402000 <_fini+0x49c>
  401464:	add	x3, x3, #0x98
  401468:	mov	w2, #0x5e                  	// #94
  40146c:	adrp	x1, 401000 <strlen@plt>
  401470:	add	x1, x1, #0xb93
  401474:	mov	w0, #0x0                   	// #0
  401478:	bl	401020 <log_oom_internal@plt>
  40147c:	mov	w19, w0
  401480:	mov	x0, x21
  401484:	bl	400e60 <safe_fclose@plt>
  401488:	adrp	x0, 412000 <__FRAME_END__+0xfcd0>
  40148c:	ldr	x1, [x29, #88]
  401490:	ldr	x0, [x0, #3240]
  401494:	eor	x0, x1, x0
  401498:	cbnz	x0, 401748 <generate+0x558>
  40149c:	mov	w0, w19
  4014a0:	mov	sp, x29
  4014a4:	ldp	x19, x20, [sp, #16]
  4014a8:	ldp	x21, x22, [sp, #32]
  4014ac:	ldp	x23, x24, [sp, #48]
  4014b0:	ldr	x25, [sp, #64]
  4014b4:	ldp	x29, x30, [sp], #96
  4014b8:	ret
  4014bc:	mov	x0, x21
  4014c0:	bl	401030 <fflush_and_check@plt>
  4014c4:	mov	w19, w0
  4014c8:	tbnz	w0, #31, 4015c8 <generate+0x3d8>
  4014cc:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4014d0:	ldr	x20, [x0, #24]
  4014d4:	cbz	x20, 401620 <generate+0x430>
  4014d8:	mov	x0, x20
  4014dc:	bl	401000 <strlen@plt>
  4014e0:	add	x0, x0, #0x1c
  4014e4:	cmp	x0, #0x400, lsl #12
  4014e8:	b.hi	401634 <generate+0x444>  // b.pmore
  4014ec:	add	x0, x0, #0xf
  4014f0:	and	x0, x0, #0xfffffffffffffff0
  4014f4:	sub	sp, sp, x0
  4014f8:	mov	x19, sp
  4014fc:	mov	x1, x20
  401500:	mov	x0, x19
  401504:	bl	400e80 <stpcpy@plt>
  401508:	adrp	x1, 401000 <strlen@plt>
  40150c:	add	x1, x1, #0xd90
  401510:	ldp	x2, x3, [x1]
  401514:	stp	x2, x3, [x0]
  401518:	ldr	x2, [x1, #16]
  40151c:	str	x2, [x0, #16]
  401520:	ldr	w1, [x1, #24]
  401524:	str	w1, [x0, #24]
  401528:	mov	x20, x19
  40152c:	add	x19, x0, #0x1b
  401530:	strb	wzr, [x19]
  401534:	mov	x3, #0x0                   	// #0
  401538:	mov	w2, #0x41                  	// #65
  40153c:	adrp	x1, 401000 <strlen@plt>
  401540:	add	x1, x1, #0xdb0
  401544:	mov	x0, x20
  401548:	bl	400eb0 <write_string_file_ts@plt>
  40154c:	mov	w19, w0
  401550:	tbnz	w0, #31, 401658 <generate+0x468>
  401554:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401558:	ldr	x20, [x0, #24]
  40155c:	cbz	x20, 4016b0 <generate+0x4c0>
  401560:	mov	x0, x20
  401564:	bl	401000 <strlen@plt>
  401568:	add	x0, x0, #0x10
  40156c:	cmp	x0, #0x400, lsl #12
  401570:	b.hi	4016c4 <generate+0x4d4>  // b.pmore
  401574:	add	x0, x0, #0xf
  401578:	and	x0, x0, #0xfffffffffffffff0
  40157c:	sub	sp, sp, x0
  401580:	mov	x19, sp
  401584:	mov	x1, x20
  401588:	mov	x0, x19
  40158c:	bl	400e80 <stpcpy@plt>
  401590:	adrp	x1, 401000 <strlen@plt>
  401594:	add	x1, x1, #0xea8
  401598:	ldp	x2, x3, [x1]
  40159c:	stp	x2, x3, [x0]
  4015a0:	mov	x20, x19
  4015a4:	add	x19, x0, #0xf
  4015a8:	strb	wzr, [x19]
  4015ac:	mov	x1, x20
  4015b0:	adrp	x0, 401000 <strlen@plt>
  4015b4:	add	x0, x0, #0xeb8
  4015b8:	bl	400f00 <symlink@plt>
  4015bc:	tbnz	w0, #31, 4016e8 <generate+0x4f8>
  4015c0:	mov	w19, #0x0                   	// #0
  4015c4:	b	401480 <generate+0x290>
  4015c8:	mov	w0, #0x0                   	// #0
  4015cc:	bl	401040 <log_get_max_level_realm@plt>
  4015d0:	cmp	w0, #0x2
  4015d4:	b.gt	4015ec <generate+0x3fc>
  4015d8:	cmp	w19, #0x0
  4015dc:	cneg	w19, w19, lt  // lt = tstop
  4015e0:	and	w19, w19, #0xff
  4015e4:	neg	w19, w19
  4015e8:	b	401480 <generate+0x290>
  4015ec:	mov	x6, x22
  4015f0:	adrp	x5, 401000 <strlen@plt>
  4015f4:	add	x5, x5, #0xd68
  4015f8:	adrp	x4, 402000 <_fini+0x49c>
  4015fc:	add	x4, x4, #0x98
  401600:	mov	w3, #0x65                  	// #101
  401604:	adrp	x2, 401000 <strlen@plt>
  401608:	add	x2, x2, #0xb93
  40160c:	mov	w1, w19
  401610:	mov	w0, #0x3                   	// #3
  401614:	bl	400fb0 <log_internal_realm@plt>
  401618:	mov	w19, w0
  40161c:	b	401480 <generate+0x290>
  401620:	sub	sp, sp, #0x10
  401624:	mov	x19, sp
  401628:	cbnz	x20, 4014fc <generate+0x30c>
  40162c:	mov	x20, x19
  401630:	b	401530 <generate+0x340>
  401634:	adrp	x4, 402000 <_fini+0x49c>
  401638:	add	x4, x4, #0x58
  40163c:	mov	w3, #0x68                  	// #104
  401640:	adrp	x2, 401000 <strlen@plt>
  401644:	add	x2, x2, #0xb93
  401648:	adrp	x1, 401000 <strlen@plt>
  40164c:	add	x1, x1, #0xbb8
  401650:	mov	w0, #0x0                   	// #0
  401654:	bl	400f10 <log_assert_failed_realm@plt>
  401658:	mov	w0, #0x0                   	// #0
  40165c:	bl	401040 <log_get_max_level_realm@plt>
  401660:	cmp	w0, #0x2
  401664:	b.gt	40167c <generate+0x48c>
  401668:	cmp	w19, #0x0
  40166c:	cneg	w19, w19, lt  // lt = tstop
  401670:	and	w19, w19, #0xff
  401674:	neg	w19, w19
  401678:	b	401480 <generate+0x290>
  40167c:	mov	x6, x20
  401680:	adrp	x5, 401000 <strlen@plt>
  401684:	add	x5, x5, #0xc00
  401688:	adrp	x4, 402000 <_fini+0x49c>
  40168c:	add	x4, x4, #0x98
  401690:	mov	w3, #0x74                  	// #116
  401694:	adrp	x2, 401000 <strlen@plt>
  401698:	add	x2, x2, #0xb93
  40169c:	mov	w1, w19
  4016a0:	mov	w0, #0x3                   	// #3
  4016a4:	bl	400fb0 <log_internal_realm@plt>
  4016a8:	mov	w19, w0
  4016ac:	b	401480 <generate+0x290>
  4016b0:	sub	sp, sp, #0x10
  4016b4:	mov	x19, sp
  4016b8:	cbnz	x20, 401584 <generate+0x394>
  4016bc:	mov	x20, x19
  4016c0:	b	4015a8 <generate+0x3b8>
  4016c4:	adrp	x4, 402000 <_fini+0x49c>
  4016c8:	add	x4, x4, #0x58
  4016cc:	mov	w3, #0x77                  	// #119
  4016d0:	adrp	x2, 401000 <strlen@plt>
  4016d4:	add	x2, x2, #0xb93
  4016d8:	adrp	x1, 401000 <strlen@plt>
  4016dc:	add	x1, x1, #0xbb8
  4016e0:	mov	w0, #0x0                   	// #0
  4016e4:	bl	400f10 <log_assert_failed_realm@plt>
  4016e8:	bl	400f50 <__errno_location@plt>
  4016ec:	ldr	w19, [x0]
  4016f0:	mov	w0, #0x0                   	// #0
  4016f4:	bl	401040 <log_get_max_level_realm@plt>
  4016f8:	cmp	w0, #0x2
  4016fc:	b.gt	401714 <generate+0x524>
  401700:	cmp	w19, #0x0
  401704:	cneg	w19, w19, lt  // lt = tstop
  401708:	and	w19, w19, #0xff
  40170c:	neg	w19, w19
  401710:	b	401480 <generate+0x290>
  401714:	mov	x6, x20
  401718:	adrp	x5, 401000 <strlen@plt>
  40171c:	add	x5, x5, #0xed8
  401720:	adrp	x4, 402000 <_fini+0x49c>
  401724:	add	x4, x4, #0x98
  401728:	mov	w3, #0x79                  	// #121
  40172c:	adrp	x2, 401000 <strlen@plt>
  401730:	add	x2, x2, #0xb93
  401734:	mov	w1, w19
  401738:	mov	w0, #0x3                   	// #3
  40173c:	bl	400fb0 <log_internal_realm@plt>
  401740:	mov	w19, w0
  401744:	b	401480 <generate+0x290>
  401748:	bl	400f80 <__stack_chk_fail@plt>

000000000040174c <parse>:
  40174c:	stp	x29, x30, [sp, #-32]!
  401750:	mov	x29, sp
  401754:	stp	x19, x20, [sp, #16]
  401758:	mov	x20, x0
  40175c:	mov	x19, x1
  401760:	adrp	x1, 401000 <strlen@plt>
  401764:	add	x1, x1, #0xf18
  401768:	bl	400ee0 <proc_cmdline_key_streq@plt>
  40176c:	and	w1, w0, #0xff
  401770:	cbz	w1, 401804 <parse+0xb8>
  401774:	cbz	x19, 40179c <parse+0x50>
  401778:	mov	x1, x19
  40177c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401780:	add	x0, x0, #0x10
  401784:	bl	400f70 <strv_extend@plt>
  401788:	tbnz	w0, #31, 4017e4 <parse+0x98>
  40178c:	mov	w0, #0x0                   	// #0
  401790:	ldp	x19, x20, [sp, #16]
  401794:	ldp	x29, x30, [sp], #32
  401798:	ret
  40179c:	mov	w0, #0x0                   	// #0
  4017a0:	bl	401040 <log_get_max_level_realm@plt>
  4017a4:	cmp	w0, #0x3
  4017a8:	b.gt	4017b4 <parse+0x68>
  4017ac:	mov	w0, #0x0                   	// #0
  4017b0:	b	401790 <parse+0x44>
  4017b4:	mov	x6, x20
  4017b8:	adrp	x5, 401000 <strlen@plt>
  4017bc:	add	x5, x5, #0xf28
  4017c0:	adrp	x4, 402000 <_fini+0x49c>
  4017c4:	add	x4, x4, #0x70
  4017c8:	mov	w3, #0x21                  	// #33
  4017cc:	adrp	x2, 401000 <strlen@plt>
  4017d0:	add	x2, x2, #0xf6b
  4017d4:	mov	w1, #0x0                   	// #0
  4017d8:	mov	w0, #0x4                   	// #4
  4017dc:	bl	400fb0 <log_internal_realm@plt>
  4017e0:	b	4017ac <parse+0x60>
  4017e4:	adrp	x3, 402000 <_fini+0x49c>
  4017e8:	add	x3, x3, #0x90
  4017ec:	mov	w2, #0x22                  	// #34
  4017f0:	adrp	x1, 401000 <strlen@plt>
  4017f4:	add	x1, x1, #0xb93
  4017f8:	mov	w0, #0x0                   	// #0
  4017fc:	bl	401020 <log_oom_internal@plt>
  401800:	b	401790 <parse+0x44>
  401804:	adrp	x1, 401000 <strlen@plt>
  401808:	add	x1, x1, #0xf88
  40180c:	mov	x0, x20
  401810:	bl	400ee0 <proc_cmdline_key_streq@plt>
  401814:	and	w1, w0, #0xff
  401818:	cbz	w1, 4018a4 <parse+0x158>
  40181c:	cbz	x19, 40183c <parse+0xf0>
  401820:	mov	x1, x19
  401824:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401828:	add	x0, x0, #0x28
  40182c:	bl	400ed0 <free_and_strdup@plt>
  401830:	tbnz	w0, #31, 401884 <parse+0x138>
  401834:	mov	w0, #0x0                   	// #0
  401838:	b	401790 <parse+0x44>
  40183c:	mov	w0, #0x0                   	// #0
  401840:	bl	401040 <log_get_max_level_realm@plt>
  401844:	cmp	w0, #0x3
  401848:	b.gt	401854 <parse+0x108>
  40184c:	mov	w0, #0x0                   	// #0
  401850:	b	401790 <parse+0x44>
  401854:	mov	x6, x20
  401858:	adrp	x5, 401000 <strlen@plt>
  40185c:	add	x5, x5, #0xf28
  401860:	adrp	x4, 402000 <_fini+0x49c>
  401864:	add	x4, x4, #0x70
  401868:	mov	w3, #0x21                  	// #33
  40186c:	adrp	x2, 401000 <strlen@plt>
  401870:	add	x2, x2, #0xf6b
  401874:	mov	w1, #0x0                   	// #0
  401878:	mov	w0, #0x4                   	// #4
  40187c:	bl	400fb0 <log_internal_realm@plt>
  401880:	b	40184c <parse+0x100>
  401884:	adrp	x3, 402000 <_fini+0x49c>
  401888:	add	x3, x3, #0x90
  40188c:	mov	w2, #0x2a                  	// #42
  401890:	adrp	x1, 401000 <strlen@plt>
  401894:	add	x1, x1, #0xb93
  401898:	mov	w0, #0x0                   	// #0
  40189c:	bl	401020 <log_oom_internal@plt>
  4018a0:	b	401790 <parse+0x44>
  4018a4:	adrp	x1, 401000 <strlen@plt>
  4018a8:	add	x1, x1, #0xfa8
  4018ac:	mov	x0, x20
  4018b0:	bl	400ee0 <proc_cmdline_key_streq@plt>
  4018b4:	and	w1, w0, #0xff
  4018b8:	mov	w0, #0x0                   	// #0
  4018bc:	cbz	w1, 401790 <parse+0x44>
  4018c0:	cbz	x19, 4018e0 <parse+0x194>
  4018c4:	mov	x1, x19
  4018c8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4018cc:	add	x0, x0, #0x20
  4018d0:	bl	400ed0 <free_and_strdup@plt>
  4018d4:	tbnz	w0, #31, 401924 <parse+0x1d8>
  4018d8:	mov	w0, #0x0                   	// #0
  4018dc:	b	401790 <parse+0x44>
  4018e0:	bl	401040 <log_get_max_level_realm@plt>
  4018e4:	cmp	w0, #0x3
  4018e8:	b.gt	4018f4 <parse+0x1a8>
  4018ec:	mov	w0, #0x0                   	// #0
  4018f0:	b	401790 <parse+0x44>
  4018f4:	mov	x6, x20
  4018f8:	adrp	x5, 401000 <strlen@plt>
  4018fc:	add	x5, x5, #0xf28
  401900:	adrp	x4, 402000 <_fini+0x49c>
  401904:	add	x4, x4, #0x70
  401908:	mov	w3, #0x21                  	// #33
  40190c:	adrp	x2, 401000 <strlen@plt>
  401910:	add	x2, x2, #0xf6b
  401914:	mov	w1, #0x0                   	// #0
  401918:	mov	w0, #0x4                   	// #4
  40191c:	bl	400fb0 <log_internal_realm@plt>
  401920:	b	4018ec <parse+0x1a0>
  401924:	adrp	x3, 402000 <_fini+0x49c>
  401928:	add	x3, x3, #0x90
  40192c:	mov	w2, #0x32                  	// #50
  401930:	adrp	x1, 401000 <strlen@plt>
  401934:	add	x1, x1, #0xb93
  401938:	mov	w0, #0x0                   	// #0
  40193c:	bl	401020 <log_oom_internal@plt>
  401940:	b	401790 <parse+0x44>

0000000000401944 <main>:
  401944:	stp	x29, x30, [sp, #-48]!
  401948:	mov	x29, sp
  40194c:	stp	x19, x20, [sp, #16]
  401950:	mov	w19, w0
  401954:	mov	x20, x1
  401958:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40195c:	str	w19, [x0, #8]
  401960:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401964:	str	x1, [x0]
  401968:	bl	400f30 <log_setup_generator@plt>
  40196c:	cmp	w19, #0x1
  401970:	ccmp	w19, #0x4, #0x4, gt
  401974:	b.ne	401a28 <main+0xe4>  // b.any
  401978:	str	x21, [sp, #32]
  40197c:	cmp	w19, #0x1
  401980:	b.le	401acc <main+0x188>
  401984:	ldr	x0, [x20, #8]
  401988:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  40198c:	str	x0, [x1, #24]
  401990:	cbz	x0, 401a70 <main+0x12c>
  401994:	mov	w2, #0x5                   	// #5
  401998:	mov	x1, #0x0                   	// #0
  40199c:	adrp	x0, 401000 <strlen@plt>
  4019a0:	add	x0, x0, #0x74c
  4019a4:	bl	400fc0 <proc_cmdline_parse@plt>
  4019a8:	mov	w19, w0
  4019ac:	tbnz	w0, #31, 401a90 <main+0x14c>
  4019b0:	bl	4011f0 <generate>
  4019b4:	mov	w21, w0
  4019b8:	bl	400f90 <ask_password_agent_close@plt>
  4019bc:	bl	400ec0 <polkit_agent_close@plt>
  4019c0:	bl	400fa0 <pager_close@plt>
  4019c4:	bl	400ff0 <mac_selinux_finish@plt>
  4019c8:	adrp	x0, 402000 <_fini+0x49c>
  4019cc:	ldr	x0, [x0, #72]
  4019d0:	cbz	x0, 401a14 <main+0xd0>
  4019d4:	adrp	x0, 402000 <_fini+0x49c>
  4019d8:	ldr	x19, [x0, #72]
  4019dc:	add	x19, x19, #0x7
  4019e0:	and	x19, x19, #0xfffffffffffffff8
  4019e4:	adrp	x0, 402000 <_fini+0x49c>
  4019e8:	ldr	x0, [x0, #80]
  4019ec:	cmp	x19, x0
  4019f0:	b.cs	401a14 <main+0xd0>  // b.hs, b.nlast
  4019f4:	adrp	x20, 402000 <_fini+0x49c>
  4019f8:	ldr	x1, [x19, #8]
  4019fc:	ldr	x0, [x19]
  401a00:	blr	x1
  401a04:	add	x19, x19, #0x10
  401a08:	ldr	x1, [x20, #80]
  401a0c:	cmp	x19, x1
  401a10:	b.cc	4019f8 <main+0xb4>  // b.lo, b.ul, b.last
  401a14:	lsr	w0, w21, #31
  401a18:	ldr	x21, [sp, #32]
  401a1c:	ldp	x19, x20, [sp, #16]
  401a20:	ldp	x29, x30, [sp], #48
  401a24:	ret
  401a28:	mov	w0, #0x0                   	// #0
  401a2c:	bl	401040 <log_get_max_level_realm@plt>
  401a30:	cmp	w0, #0x2
  401a34:	b.gt	401a40 <main+0xfc>
  401a38:	mov	w0, #0xffffffea            	// #-22
  401a3c:	b	401a1c <main+0xd8>
  401a40:	adrp	x5, 401000 <strlen@plt>
  401a44:	add	x5, x5, #0xfc8
  401a48:	adrp	x4, 402000 <_fini+0x49c>
  401a4c:	add	x4, x4, #0xb0
  401a50:	mov	w3, #0x8a                  	// #138
  401a54:	adrp	x2, 401000 <strlen@plt>
  401a58:	add	x2, x2, #0xb93
  401a5c:	mov	w1, #0x16                  	// #22
  401a60:	movk	w1, #0x4000, lsl #16
  401a64:	mov	w0, #0x3                   	// #3
  401a68:	bl	400fb0 <log_internal_realm@plt>
  401a6c:	b	401a1c <main+0xd8>
  401a70:	adrp	x4, 402000 <_fini+0x49c>
  401a74:	add	x4, x4, #0x68
  401a78:	mov	w3, #0x81                  	// #129
  401a7c:	adrp	x2, 401000 <strlen@plt>
  401a80:	add	x2, x2, #0xb93
  401a84:	adrp	x1, 401000 <strlen@plt>
  401a88:	add	x1, x1, #0xff8
  401a8c:	bl	400f10 <log_assert_failed_realm@plt>
  401a90:	mov	w0, #0x0                   	// #0
  401a94:	bl	401040 <log_get_max_level_realm@plt>
  401a98:	cmp	w0, #0x3
  401a9c:	b.le	4019b0 <main+0x6c>
  401aa0:	adrp	x5, 402000 <_fini+0x49c>
  401aa4:	add	x5, x5, #0x8
  401aa8:	adrp	x4, 402000 <_fini+0x49c>
  401aac:	add	x4, x4, #0xa8
  401ab0:	mov	w3, #0x85                  	// #133
  401ab4:	adrp	x2, 401000 <strlen@plt>
  401ab8:	add	x2, x2, #0xb93
  401abc:	mov	w1, w19
  401ac0:	mov	w0, #0x4                   	// #4
  401ac4:	bl	400fb0 <log_internal_realm@plt>
  401ac8:	b	4019b0 <main+0x6c>
  401acc:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  401ad0:	adrp	x0, 402000 <_fini+0x49c>
  401ad4:	add	x0, x0, #0x40
  401ad8:	str	x0, [x1, #24]
  401adc:	b	401994 <main+0x50>

0000000000401ae0 <__libc_csu_init>:
  401ae0:	stp	x29, x30, [sp, #-64]!
  401ae4:	mov	x29, sp
  401ae8:	stp	x19, x20, [sp, #16]
  401aec:	adrp	x20, 412000 <__FRAME_END__+0xfcd0>
  401af0:	add	x20, x20, #0xca0
  401af4:	stp	x21, x22, [sp, #32]
  401af8:	adrp	x21, 412000 <__FRAME_END__+0xfcd0>
  401afc:	add	x21, x21, #0xc98
  401b00:	sub	x20, x20, x21
  401b04:	mov	w22, w0
  401b08:	stp	x23, x24, [sp, #48]
  401b0c:	mov	x23, x1
  401b10:	mov	x24, x2
  401b14:	bl	400e20 <_init>
  401b18:	cmp	xzr, x20, asr #3
  401b1c:	b.eq	401b48 <__libc_csu_init+0x68>  // b.none
  401b20:	asr	x20, x20, #3
  401b24:	mov	x19, #0x0                   	// #0
  401b28:	ldr	x3, [x21, x19, lsl #3]
  401b2c:	mov	x2, x24
  401b30:	add	x19, x19, #0x1
  401b34:	mov	x1, x23
  401b38:	mov	w0, w22
  401b3c:	blr	x3
  401b40:	cmp	x20, x19
  401b44:	b.ne	401b28 <__libc_csu_init+0x48>  // b.any
  401b48:	ldp	x19, x20, [sp, #16]
  401b4c:	ldp	x21, x22, [sp, #32]
  401b50:	ldp	x23, x24, [sp, #48]
  401b54:	ldp	x29, x30, [sp], #64
  401b58:	ret
  401b5c:	nop

0000000000401b60 <__libc_csu_fini>:
  401b60:	ret

Disassembly of section .fini:

0000000000401b64 <_fini>:
  401b64:	stp	x29, x30, [sp, #-16]!
  401b68:	mov	x29, sp
  401b6c:	ldp	x29, x30, [sp], #16
  401b70:	ret
