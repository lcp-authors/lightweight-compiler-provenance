
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406670 <.init>:
  406670:	stp	x29, x30, [sp, #-16]!
  406674:	mov	x29, sp
  406678:	bl	406ef0 <_start@@Base+0x50>
  40667c:	ldp	x29, x30, [sp], #16
  406680:	ret

Disassembly of section .plt:

0000000000406690 <memcpy@plt-0x20>:
  406690:	stp	x16, x30, [sp, #-16]!
  406694:	adrp	x16, 451000 <_IO_stdin_used@@Base+0x1a450>
  406698:	ldr	x17, [x16, #4088]
  40669c:	add	x16, x16, #0xff8
  4066a0:	br	x17
  4066a4:	nop
  4066a8:	nop
  4066ac:	nop

00000000004066b0 <memcpy@plt>:
  4066b0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4066b4:	ldr	x17, [x16]
  4066b8:	add	x16, x16, #0x0
  4066bc:	br	x17

00000000004066c0 <memmove@plt>:
  4066c0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4066c4:	ldr	x17, [x16, #8]
  4066c8:	add	x16, x16, #0x8
  4066cc:	br	x17

00000000004066d0 <_exit@plt>:
  4066d0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4066d4:	ldr	x17, [x16, #16]
  4066d8:	add	x16, x16, #0x10
  4066dc:	br	x17

00000000004066e0 <getcwd@plt>:
  4066e0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4066e4:	ldr	x17, [x16, #24]
  4066e8:	add	x16, x16, #0x18
  4066ec:	br	x17

00000000004066f0 <strlen@plt>:
  4066f0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4066f4:	ldr	x17, [x16, #32]
  4066f8:	add	x16, x16, #0x20
  4066fc:	br	x17

0000000000406700 <fputs@plt>:
  406700:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406704:	ldr	x17, [x16, #40]
  406708:	add	x16, x16, #0x28
  40670c:	br	x17

0000000000406710 <exit@plt>:
  406710:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406714:	ldr	x17, [x16, #48]
  406718:	add	x16, x16, #0x30
  40671c:	br	x17

0000000000406720 <dup@plt>:
  406720:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406724:	ldr	x17, [x16, #56]
  406728:	add	x16, x16, #0x38
  40672c:	br	x17

0000000000406730 <perror@plt>:
  406730:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406734:	ldr	x17, [x16, #64]
  406738:	add	x16, x16, #0x40
  40673c:	br	x17

0000000000406740 <tmpfile@plt>:
  406740:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406744:	ldr	x17, [x16, #72]
  406748:	add	x16, x16, #0x48
  40674c:	br	x17

0000000000406750 <sigprocmask@plt>:
  406750:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16, #80]
  406758:	add	x16, x16, #0x50
  40675c:	br	x17

0000000000406760 <remove@plt>:
  406760:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #88]
  406768:	add	x16, x16, #0x58
  40676c:	br	x17

0000000000406770 <ttyname@plt>:
  406770:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #96]
  406778:	add	x16, x16, #0x60
  40677c:	br	x17

0000000000406780 <readlink@plt>:
  406780:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #104]
  406788:	add	x16, x16, #0x68
  40678c:	br	x17

0000000000406790 <sprintf@plt>:
  406790:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #112]
  406798:	add	x16, x16, #0x70
  40679c:	br	x17

00000000004067a0 <putc@plt>:
  4067a0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #120]
  4067a8:	add	x16, x16, #0x78
  4067ac:	br	x17

00000000004067b0 <pipe@plt>:
  4067b0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #128]
  4067b8:	add	x16, x16, #0x80
  4067bc:	br	x17

00000000004067c0 <opendir@plt>:
  4067c0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #136]
  4067c8:	add	x16, x16, #0x88
  4067cc:	br	x17

00000000004067d0 <getloadavg@plt>:
  4067d0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #144]
  4067d8:	add	x16, x16, #0x90
  4067dc:	br	x17

00000000004067e0 <__cxa_atexit@plt>:
  4067e0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #152]
  4067e8:	add	x16, x16, #0x98
  4067ec:	br	x17

00000000004067f0 <fputc@plt>:
  4067f0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #160]
  4067f8:	add	x16, x16, #0xa0
  4067fc:	br	x17

0000000000406800 <clock_gettime@plt>:
  406800:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #168]
  406808:	add	x16, x16, #0xa8
  40680c:	br	x17

0000000000406810 <qsort@plt>:
  406810:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #176]
  406818:	add	x16, x16, #0xb0
  40681c:	br	x17

0000000000406820 <dlclose@plt>:
  406820:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #184]
  406828:	add	x16, x16, #0xb8
  40682c:	br	x17

0000000000406830 <ctime@plt>:
  406830:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #192]
  406838:	add	x16, x16, #0xc0
  40683c:	br	x17

0000000000406840 <kill@plt>:
  406840:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #200]
  406848:	add	x16, x16, #0xc8
  40684c:	br	x17

0000000000406850 <setvbuf@plt>:
  406850:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #208]
  406858:	add	x16, x16, #0xd0
  40685c:	br	x17

0000000000406860 <lseek@plt>:
  406860:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #216]
  406868:	add	x16, x16, #0xd8
  40686c:	br	x17

0000000000406870 <eaccess@plt>:
  406870:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #224]
  406878:	add	x16, x16, #0xe0
  40687c:	br	x17

0000000000406880 <dlopen@plt>:
  406880:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #232]
  406888:	add	x16, x16, #0xe8
  40688c:	br	x17

0000000000406890 <stpcpy@plt>:
  406890:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #240]
  406898:	add	x16, x16, #0xf0
  40689c:	br	x17

00000000004068a0 <fileno@plt>:
  4068a0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #248]
  4068a8:	add	x16, x16, #0xf8
  4068ac:	br	x17

00000000004068b0 <localtime@plt>:
  4068b0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #256]
  4068b8:	add	x16, x16, #0x100
  4068bc:	br	x17

00000000004068c0 <posix_spawn_file_actions_adddup2@plt>:
  4068c0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #264]
  4068c8:	add	x16, x16, #0x108
  4068cc:	br	x17

00000000004068d0 <signal@plt>:
  4068d0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #272]
  4068d8:	add	x16, x16, #0x110
  4068dc:	br	x17

00000000004068e0 <fclose@plt>:
  4068e0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #280]
  4068e8:	add	x16, x16, #0x118
  4068ec:	br	x17

00000000004068f0 <atoi@plt>:
  4068f0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #288]
  4068f8:	add	x16, x16, #0x120
  4068fc:	br	x17

0000000000406900 <getpid@plt>:
  406900:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #296]
  406908:	add	x16, x16, #0x128
  40690c:	br	x17

0000000000406910 <fopen@plt>:
  406910:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #304]
  406918:	add	x16, x16, #0x130
  40691c:	br	x17

0000000000406920 <time@plt>:
  406920:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #312]
  406928:	add	x16, x16, #0x138
  40692c:	br	x17

0000000000406930 <malloc@plt>:
  406930:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #320]
  406938:	add	x16, x16, #0x140
  40693c:	br	x17

0000000000406940 <dlerror@plt>:
  406940:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #328]
  406948:	add	x16, x16, #0x148
  40694c:	br	x17

0000000000406950 <dlsym@plt>:
  406950:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #336]
  406958:	add	x16, x16, #0x150
  40695c:	br	x17

0000000000406960 <open@plt>:
  406960:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #344]
  406968:	add	x16, x16, #0x158
  40696c:	br	x17

0000000000406970 <sigemptyset@plt>:
  406970:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #352]
  406978:	add	x16, x16, #0x160
  40697c:	br	x17

0000000000406980 <posix_spawnattr_destroy@plt>:
  406980:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #360]
  406988:	add	x16, x16, #0x168
  40698c:	br	x17

0000000000406990 <strncmp@plt>:
  406990:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #368]
  406998:	add	x16, x16, #0x170
  40699c:	br	x17

00000000004069a0 <bindtextdomain@plt>:
  4069a0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #376]
  4069a8:	add	x16, x16, #0x178
  4069ac:	br	x17

00000000004069b0 <__libc_start_main@plt>:
  4069b0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #384]
  4069b8:	add	x16, x16, #0x180
  4069bc:	br	x17

00000000004069c0 <strcat@plt>:
  4069c0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #392]
  4069c8:	add	x16, x16, #0x188
  4069cc:	br	x17

00000000004069d0 <memset@plt>:
  4069d0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #400]
  4069d8:	add	x16, x16, #0x190
  4069dc:	br	x17

00000000004069e0 <fdopen@plt>:
  4069e0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #408]
  4069e8:	add	x16, x16, #0x198
  4069ec:	br	x17

00000000004069f0 <strpbrk@plt>:
  4069f0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #416]
  4069f8:	add	x16, x16, #0x1a0
  4069fc:	br	x17

0000000000406a00 <gettimeofday@plt>:
  406a00:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #424]
  406a08:	add	x16, x16, #0x1a8
  406a0c:	br	x17

0000000000406a10 <getpwnam@plt>:
  406a10:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #432]
  406a18:	add	x16, x16, #0x1b0
  406a1c:	br	x17

0000000000406a20 <atof@plt>:
  406a20:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #440]
  406a28:	add	x16, x16, #0x1b8
  406a2c:	br	x17

0000000000406a30 <pselect@plt>:
  406a30:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #448]
  406a38:	add	x16, x16, #0x1c0
  406a3c:	br	x17

0000000000406a40 <calloc@plt>:
  406a40:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #456]
  406a48:	add	x16, x16, #0x1c8
  406a4c:	br	x17

0000000000406a50 <posix_spawn_file_actions_destroy@plt>:
  406a50:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #464]
  406a58:	add	x16, x16, #0x1d0
  406a5c:	br	x17

0000000000406a60 <readdir@plt>:
  406a60:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #472]
  406a68:	add	x16, x16, #0x1d8
  406a6c:	br	x17

0000000000406a70 <realloc@plt>:
  406a70:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #480]
  406a78:	add	x16, x16, #0x1e0
  406a7c:	br	x17

0000000000406a80 <putenv@plt>:
  406a80:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #488]
  406a88:	add	x16, x16, #0x1e8
  406a8c:	br	x17

0000000000406a90 <strdup@plt>:
  406a90:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #496]
  406a98:	add	x16, x16, #0x1f0
  406a9c:	br	x17

0000000000406aa0 <closedir@plt>:
  406aa0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #504]
  406aa8:	add	x16, x16, #0x1f8
  406aac:	br	x17

0000000000406ab0 <strerror@plt>:
  406ab0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #512]
  406ab8:	add	x16, x16, #0x200
  406abc:	br	x17

0000000000406ac0 <close@plt>:
  406ac0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #520]
  406ac8:	add	x16, x16, #0x208
  406acc:	br	x17

0000000000406ad0 <sigaction@plt>:
  406ad0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #528]
  406ad8:	add	x16, x16, #0x210
  406adc:	br	x17

0000000000406ae0 <strrchr@plt>:
  406ae0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #536]
  406ae8:	add	x16, x16, #0x218
  406aec:	br	x17

0000000000406af0 <atol@plt>:
  406af0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #544]
  406af8:	add	x16, x16, #0x220
  406afc:	br	x17

0000000000406b00 <__gmon_start__@plt>:
  406b00:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #552]
  406b08:	add	x16, x16, #0x228
  406b0c:	br	x17

0000000000406b10 <write@plt>:
  406b10:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #560]
  406b18:	add	x16, x16, #0x230
  406b1c:	br	x17

0000000000406b20 <posix_spawnattr_setflags@plt>:
  406b20:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #568]
  406b28:	add	x16, x16, #0x238
  406b2c:	br	x17

0000000000406b30 <abort@plt>:
  406b30:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #576]
  406b38:	add	x16, x16, #0x240
  406b3c:	br	x17

0000000000406b40 <posix_spawnattr_setsigmask@plt>:
  406b40:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #584]
  406b48:	add	x16, x16, #0x248
  406b4c:	br	x17

0000000000406b50 <feof@plt>:
  406b50:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #592]
  406b58:	add	x16, x16, #0x250
  406b5c:	br	x17

0000000000406b60 <puts@plt>:
  406b60:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #600]
  406b68:	add	x16, x16, #0x258
  406b6c:	br	x17

0000000000406b70 <posix_spawn_file_actions_init@plt>:
  406b70:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #608]
  406b78:	add	x16, x16, #0x260
  406b7c:	br	x17

0000000000406b80 <memcmp@plt>:
  406b80:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #616]
  406b88:	add	x16, x16, #0x268
  406b8c:	br	x17

0000000000406b90 <textdomain@plt>:
  406b90:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #624]
  406b98:	add	x16, x16, #0x270
  406b9c:	br	x17

0000000000406ba0 <getopt_long@plt>:
  406ba0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #632]
  406ba8:	add	x16, x16, #0x278
  406bac:	br	x17

0000000000406bb0 <execvp@plt>:
  406bb0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #640]
  406bb8:	add	x16, x16, #0x280
  406bbc:	br	x17

0000000000406bc0 <strcmp@plt>:
  406bc0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #648]
  406bc8:	add	x16, x16, #0x288
  406bcc:	br	x17

0000000000406bd0 <__ctype_b_loc@plt>:
  406bd0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #656]
  406bd8:	add	x16, x16, #0x290
  406bdc:	br	x17

0000000000406be0 <fread@plt>:
  406be0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #664]
  406be8:	add	x16, x16, #0x298
  406bec:	br	x17

0000000000406bf0 <chdir@plt>:
  406bf0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #672]
  406bf8:	add	x16, x16, #0x2a0
  406bfc:	br	x17

0000000000406c00 <free@plt>:
  406c00:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #680]
  406c08:	add	x16, x16, #0x2a8
  406c0c:	br	x17

0000000000406c10 <strndup@plt>:
  406c10:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #688]
  406c18:	add	x16, x16, #0x2b0
  406c1c:	br	x17

0000000000406c20 <strchr@plt>:
  406c20:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #696]
  406c28:	add	x16, x16, #0x2b8
  406c2c:	br	x17

0000000000406c30 <globfree@plt>:
  406c30:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #704]
  406c38:	add	x16, x16, #0x2c0
  406c3c:	br	x17

0000000000406c40 <memrchr@plt>:
  406c40:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #712]
  406c48:	add	x16, x16, #0x2c8
  406c4c:	br	x17

0000000000406c50 <fwrite@plt>:
  406c50:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #720]
  406c58:	add	x16, x16, #0x2d0
  406c5c:	br	x17

0000000000406c60 <fnmatch@plt>:
  406c60:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #728]
  406c68:	add	x16, x16, #0x2d8
  406c6c:	br	x17

0000000000406c70 <fcntl@plt>:
  406c70:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #736]
  406c78:	add	x16, x16, #0x2e0
  406c7c:	br	x17

0000000000406c80 <wait@plt>:
  406c80:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #744]
  406c88:	add	x16, x16, #0x2e8
  406c8c:	br	x17

0000000000406c90 <fflush@plt>:
  406c90:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #752]
  406c98:	add	x16, x16, #0x2f0
  406c9c:	br	x17

0000000000406ca0 <strcpy@plt>:
  406ca0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #760]
  406ca8:	add	x16, x16, #0x2f8
  406cac:	br	x17

0000000000406cb0 <posix_spawn@plt>:
  406cb0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #768]
  406cb8:	add	x16, x16, #0x300
  406cbc:	br	x17

0000000000406cc0 <vsprintf@plt>:
  406cc0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #776]
  406cc8:	add	x16, x16, #0x308
  406ccc:	br	x17

0000000000406cd0 <__lxstat@plt>:
  406cd0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #784]
  406cd8:	add	x16, x16, #0x310
  406cdc:	br	x17

0000000000406ce0 <posix_spawnattr_init@plt>:
  406ce0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #792]
  406ce8:	add	x16, x16, #0x318
  406cec:	br	x17

0000000000406cf0 <read@plt>:
  406cf0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #800]
  406cf8:	add	x16, x16, #0x320
  406cfc:	br	x17

0000000000406d00 <mkstemp@plt>:
  406d00:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #808]
  406d08:	add	x16, x16, #0x328
  406d0c:	br	x17

0000000000406d10 <isatty@plt>:
  406d10:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #816]
  406d18:	add	x16, x16, #0x330
  406d1c:	br	x17

0000000000406d20 <__fxstat@plt>:
  406d20:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #824]
  406d28:	add	x16, x16, #0x338
  406d2c:	br	x17

0000000000406d30 <strstr@plt>:
  406d30:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #832]
  406d38:	add	x16, x16, #0x340
  406d3c:	br	x17

0000000000406d40 <realpath@plt>:
  406d40:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #840]
  406d48:	add	x16, x16, #0x348
  406d4c:	br	x17

0000000000406d50 <__isoc99_sscanf@plt>:
  406d50:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #848]
  406d58:	add	x16, x16, #0x350
  406d5c:	br	x17

0000000000406d60 <glob@plt>:
  406d60:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #856]
  406d68:	add	x16, x16, #0x358
  406d6c:	br	x17

0000000000406d70 <ftruncate@plt>:
  406d70:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #864]
  406d78:	add	x16, x16, #0x360
  406d7c:	br	x17

0000000000406d80 <strncpy@plt>:
  406d80:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #872]
  406d88:	add	x16, x16, #0x368
  406d8c:	br	x17

0000000000406d90 <strsignal@plt>:
  406d90:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #880]
  406d98:	add	x16, x16, #0x370
  406d9c:	br	x17

0000000000406da0 <sigaddset@plt>:
  406da0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #888]
  406da8:	add	x16, x16, #0x378
  406dac:	br	x17

0000000000406db0 <umask@plt>:
  406db0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #896]
  406db8:	add	x16, x16, #0x380
  406dbc:	br	x17

0000000000406dc0 <printf@plt>:
  406dc0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #904]
  406dc8:	add	x16, x16, #0x388
  406dcc:	br	x17

0000000000406dd0 <__errno_location@plt>:
  406dd0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #912]
  406dd8:	add	x16, x16, #0x390
  406ddc:	br	x17

0000000000406de0 <tolower@plt>:
  406de0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #920]
  406de8:	add	x16, x16, #0x398
  406dec:	br	x17

0000000000406df0 <getenv@plt>:
  406df0:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #928]
  406df8:	add	x16, x16, #0x3a0
  406dfc:	br	x17

0000000000406e00 <putchar@plt>:
  406e00:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #936]
  406e08:	add	x16, x16, #0x3a8
  406e0c:	br	x17

0000000000406e10 <__xstat@plt>:
  406e10:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e14:	ldr	x17, [x16, #944]
  406e18:	add	x16, x16, #0x3b0
  406e1c:	br	x17

0000000000406e20 <waitpid@plt>:
  406e20:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e24:	ldr	x17, [x16, #952]
  406e28:	add	x16, x16, #0x3b8
  406e2c:	br	x17

0000000000406e30 <unlink@plt>:
  406e30:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e34:	ldr	x17, [x16, #960]
  406e38:	add	x16, x16, #0x3c0
  406e3c:	br	x17

0000000000406e40 <gettext@plt>:
  406e40:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e44:	ldr	x17, [x16, #968]
  406e48:	add	x16, x16, #0x3c8
  406e4c:	br	x17

0000000000406e50 <getlogin@plt>:
  406e50:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e54:	ldr	x17, [x16, #976]
  406e58:	add	x16, x16, #0x3d0
  406e5c:	br	x17

0000000000406e60 <fprintf@plt>:
  406e60:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e64:	ldr	x17, [x16, #984]
  406e68:	add	x16, x16, #0x3d8
  406e6c:	br	x17

0000000000406e70 <fgets@plt>:
  406e70:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e74:	ldr	x17, [x16, #992]
  406e78:	add	x16, x16, #0x3e0
  406e7c:	br	x17

0000000000406e80 <setlocale@plt>:
  406e80:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e84:	ldr	x17, [x16, #1000]
  406e88:	add	x16, x16, #0x3e8
  406e8c:	br	x17

0000000000406e90 <ferror@plt>:
  406e90:	adrp	x16, 452000 <memcpy@GLIBC_2.17>
  406e94:	ldr	x17, [x16, #1008]
  406e98:	add	x16, x16, #0x3f0
  406e9c:	br	x17

Disassembly of section .text:

0000000000406ea0 <_start@@Base>:
  406ea0:	mov	x29, #0x0                   	// #0
  406ea4:	mov	x30, #0x0                   	// #0
  406ea8:	mov	x5, x0
  406eac:	ldr	x1, [sp]
  406eb0:	add	x2, sp, #0x8
  406eb4:	mov	x6, sp
  406eb8:	movz	x0, #0x0, lsl #48
  406ebc:	movk	x0, #0x0, lsl #32
  406ec0:	movk	x0, #0x41, lsl #16
  406ec4:	movk	x0, #0xd0fc
  406ec8:	movz	x3, #0x0, lsl #48
  406ecc:	movk	x3, #0x0, lsl #32
  406ed0:	movk	x3, #0x43, lsl #16
  406ed4:	movk	x3, #0x6ad8
  406ed8:	movz	x4, #0x0, lsl #48
  406edc:	movk	x4, #0x0, lsl #32
  406ee0:	movk	x4, #0x43, lsl #16
  406ee4:	movk	x4, #0x6b58
  406ee8:	bl	4069b0 <__libc_start_main@plt>
  406eec:	bl	406b30 <abort@plt>
  406ef0:	adrp	x0, 451000 <_IO_stdin_used@@Base+0x1a450>
  406ef4:	ldr	x0, [x0, #4064]
  406ef8:	cbz	x0, 406f00 <_start@@Base+0x60>
  406efc:	b	406b00 <__gmon_start__@plt>
  406f00:	ret
  406f04:	stp	x29, x30, [sp, #-32]!
  406f08:	mov	x29, sp
  406f0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406f10:	add	x0, x0, #0x3e8
  406f14:	str	x0, [sp, #24]
  406f18:	ldr	x0, [sp, #24]
  406f1c:	str	x0, [sp, #24]
  406f20:	ldr	x1, [sp, #24]
  406f24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406f28:	add	x0, x0, #0x3e8
  406f2c:	cmp	x1, x0
  406f30:	b.eq	406f6c <_start@@Base+0xcc>  // b.none
  406f34:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  406f38:	add	x0, x0, #0xbb8
  406f3c:	ldr	x0, [x0]
  406f40:	str	x0, [sp, #16]
  406f44:	ldr	x0, [sp, #16]
  406f48:	str	x0, [sp, #16]
  406f4c:	ldr	x0, [sp, #16]
  406f50:	cmp	x0, #0x0
  406f54:	b.eq	406f70 <_start@@Base+0xd0>  // b.none
  406f58:	ldr	x1, [sp, #16]
  406f5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406f60:	add	x0, x0, #0x3e8
  406f64:	blr	x1
  406f68:	b	406f70 <_start@@Base+0xd0>
  406f6c:	nop
  406f70:	ldp	x29, x30, [sp], #32
  406f74:	ret
  406f78:	stp	x29, x30, [sp, #-48]!
  406f7c:	mov	x29, sp
  406f80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406f84:	add	x0, x0, #0x3e8
  406f88:	str	x0, [sp, #40]
  406f8c:	ldr	x0, [sp, #40]
  406f90:	str	x0, [sp, #40]
  406f94:	ldr	x1, [sp, #40]
  406f98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406f9c:	add	x0, x0, #0x3e8
  406fa0:	sub	x0, x1, x0
  406fa4:	asr	x0, x0, #3
  406fa8:	lsr	x1, x0, #63
  406fac:	add	x0, x1, x0
  406fb0:	asr	x0, x0, #1
  406fb4:	str	x0, [sp, #32]
  406fb8:	ldr	x0, [sp, #32]
  406fbc:	cmp	x0, #0x0
  406fc0:	b.eq	407000 <_start@@Base+0x160>  // b.none
  406fc4:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  406fc8:	add	x0, x0, #0xbc0
  406fcc:	ldr	x0, [x0]
  406fd0:	str	x0, [sp, #24]
  406fd4:	ldr	x0, [sp, #24]
  406fd8:	str	x0, [sp, #24]
  406fdc:	ldr	x0, [sp, #24]
  406fe0:	cmp	x0, #0x0
  406fe4:	b.eq	407004 <_start@@Base+0x164>  // b.none
  406fe8:	ldr	x2, [sp, #24]
  406fec:	ldr	x1, [sp, #32]
  406ff0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  406ff4:	add	x0, x0, #0x3e8
  406ff8:	blr	x2
  406ffc:	b	407004 <_start@@Base+0x164>
  407000:	nop
  407004:	ldp	x29, x30, [sp], #48
  407008:	ret
  40700c:	stp	x29, x30, [sp, #-16]!
  407010:	mov	x29, sp
  407014:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  407018:	add	x0, x0, #0x41c
  40701c:	ldrb	w0, [x0]
  407020:	and	x0, x0, #0xff
  407024:	cmp	x0, #0x0
  407028:	b.ne	407044 <_start@@Base+0x1a4>  // b.any
  40702c:	bl	406f04 <_start@@Base+0x64>
  407030:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  407034:	add	x0, x0, #0x41c
  407038:	mov	w1, #0x1                   	// #1
  40703c:	strb	w1, [x0]
  407040:	b	407048 <_start@@Base+0x1a8>
  407044:	nop
  407048:	ldp	x29, x30, [sp], #16
  40704c:	ret
  407050:	stp	x29, x30, [sp, #-16]!
  407054:	mov	x29, sp
  407058:	bl	406f78 <_start@@Base+0xd8>
  40705c:	nop
  407060:	ldp	x29, x30, [sp], #16
  407064:	ret

0000000000407068 <ar_name@@Base>:
  407068:	stp	x29, x30, [sp, #-64]!
  40706c:	mov	x29, sp
  407070:	str	x19, [sp, #16]
  407074:	str	x0, [sp, #40]
  407078:	mov	w1, #0x28                  	// #40
  40707c:	ldr	x0, [sp, #40]
  407080:	bl	406c20 <strchr@plt>
  407084:	str	x0, [sp, #56]
  407088:	ldr	x0, [sp, #56]
  40708c:	cmp	x0, #0x0
  407090:	b.eq	4070a4 <ar_name@@Base+0x3c>  // b.none
  407094:	ldr	x1, [sp, #56]
  407098:	ldr	x0, [sp, #40]
  40709c:	cmp	x1, x0
  4070a0:	b.ne	4070ac <ar_name@@Base+0x44>  // b.any
  4070a4:	mov	w0, #0x0                   	// #0
  4070a8:	b	407148 <ar_name@@Base+0xe0>
  4070ac:	ldr	x0, [sp, #56]
  4070b0:	bl	4066f0 <strlen@plt>
  4070b4:	sub	x0, x0, #0x1
  4070b8:	ldr	x1, [sp, #56]
  4070bc:	add	x0, x1, x0
  4070c0:	str	x0, [sp, #48]
  4070c4:	ldr	x0, [sp, #48]
  4070c8:	ldrb	w0, [x0]
  4070cc:	cmp	w0, #0x29
  4070d0:	b.ne	4070e8 <ar_name@@Base+0x80>  // b.any
  4070d4:	ldr	x0, [sp, #56]
  4070d8:	add	x0, x0, #0x1
  4070dc:	ldr	x1, [sp, #48]
  4070e0:	cmp	x1, x0
  4070e4:	b.ne	4070f0 <ar_name@@Base+0x88>  // b.any
  4070e8:	mov	w0, #0x0                   	// #0
  4070ec:	b	407148 <ar_name@@Base+0xe0>
  4070f0:	ldr	x0, [sp, #56]
  4070f4:	add	x0, x0, #0x1
  4070f8:	ldrb	w0, [x0]
  4070fc:	cmp	w0, #0x28
  407100:	b.ne	407144 <ar_name@@Base+0xdc>  // b.any
  407104:	ldr	x0, [sp, #48]
  407108:	sub	x0, x0, #0x1
  40710c:	ldrb	w0, [x0]
  407110:	cmp	w0, #0x29
  407114:	b.ne	407144 <ar_name@@Base+0xdc>  // b.any
  407118:	ldr	x0, [sp, #40]
  40711c:	bl	4066f0 <strlen@plt>
  407120:	mov	x19, x0
  407124:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407128:	add	x0, x0, #0xbc8
  40712c:	bl	406e40 <gettext@plt>
  407130:	ldr	x3, [sp, #40]
  407134:	mov	x2, x0
  407138:	mov	x1, x19
  40713c:	mov	x0, #0x0                   	// #0
  407140:	bl	424098 <fatal@@Base>
  407144:	mov	w0, #0x1                   	// #1
  407148:	ldr	x19, [sp, #16]
  40714c:	ldp	x29, x30, [sp], #64
  407150:	ret

0000000000407154 <ar_parse_name@@Base>:
  407154:	stp	x29, x30, [sp, #-64]!
  407158:	mov	x29, sp
  40715c:	str	x0, [sp, #40]
  407160:	str	x1, [sp, #32]
  407164:	str	x2, [sp, #24]
  407168:	ldr	x0, [sp, #40]
  40716c:	bl	422788 <xstrdup@@Base>
  407170:	mov	x1, x0
  407174:	ldr	x0, [sp, #32]
  407178:	str	x1, [x0]
  40717c:	ldr	x0, [sp, #32]
  407180:	ldr	x0, [x0]
  407184:	mov	w1, #0x28                  	// #40
  407188:	bl	406c20 <strchr@plt>
  40718c:	str	x0, [sp, #56]
  407190:	ldr	x0, [sp, #56]
  407194:	add	x1, x0, #0x1
  407198:	str	x1, [sp, #56]
  40719c:	strb	wzr, [x0]
  4071a0:	ldr	x0, [sp, #56]
  4071a4:	bl	4066f0 <strlen@plt>
  4071a8:	sub	x0, x0, #0x1
  4071ac:	ldr	x1, [sp, #56]
  4071b0:	add	x0, x1, x0
  4071b4:	strb	wzr, [x0]
  4071b8:	ldr	x0, [sp, #24]
  4071bc:	ldr	x1, [sp, #56]
  4071c0:	str	x1, [x0]
  4071c4:	nop
  4071c8:	ldp	x29, x30, [sp], #64
  4071cc:	ret
  4071d0:	stp	x29, x30, [sp, #-80]!
  4071d4:	mov	x29, sp
  4071d8:	str	w0, [sp, #76]
  4071dc:	str	x1, [sp, #64]
  4071e0:	str	w2, [sp, #72]
  4071e4:	str	x3, [sp, #56]
  4071e8:	str	x4, [sp, #48]
  4071ec:	str	x5, [sp, #40]
  4071f0:	str	x6, [sp, #32]
  4071f4:	str	w7, [sp, #28]
  4071f8:	ldr	w2, [sp, #72]
  4071fc:	ldr	x1, [sp, #64]
  407200:	ldr	x0, [sp, #96]
  407204:	bl	407d68 <ar_name_equal@@Base>
  407208:	cmp	w0, #0x0
  40720c:	b.eq	407218 <ar_parse_name@@Base+0xc4>  // b.none
  407210:	ldr	x0, [sp, #32]
  407214:	b	40721c <ar_parse_name@@Base+0xc8>
  407218:	mov	x0, #0x0                   	// #0
  40721c:	ldp	x29, x30, [sp], #80
  407220:	ret

0000000000407224 <ar_member_date@@Base>:
  407224:	stp	x29, x30, [sp, #-64]!
  407228:	mov	x29, sp
  40722c:	str	x0, [sp, #24]
  407230:	add	x1, sp, #0x20
  407234:	add	x0, sp, #0x28
  407238:	mov	x2, x1
  40723c:	mov	x1, x0
  407240:	ldr	x0, [sp, #24]
  407244:	bl	407154 <ar_parse_name@@Base>
  407248:	ldr	x0, [sp, #40]
  40724c:	bl	40c5bc <lookup_file@@Base>
  407250:	str	x0, [sp, #56]
  407254:	ldr	x0, [sp, #56]
  407258:	cmp	x0, #0x0
  40725c:	b.ne	407280 <ar_member_date@@Base+0x5c>  // b.any
  407260:	ldr	x0, [sp, #40]
  407264:	bl	40a78c <file_exists_p@@Base>
  407268:	cmp	w0, #0x0
  40726c:	b.eq	407280 <ar_member_date@@Base+0x5c>  // b.none
  407270:	ldr	x0, [sp, #40]
  407274:	bl	430d78 <strcache_add@@Base>
  407278:	bl	40c678 <enter_file@@Base>
  40727c:	str	x0, [sp, #56]
  407280:	ldr	x0, [sp, #56]
  407284:	cmp	x0, #0x0
  407288:	b.eq	407298 <ar_member_date@@Base+0x74>  // b.none
  40728c:	mov	w1, #0x0                   	// #0
  407290:	ldr	x0, [sp, #56]
  407294:	bl	42e3cc <f_mtime@@Base>
  407298:	ldr	x3, [sp, #40]
  40729c:	ldr	x0, [sp, #32]
  4072a0:	mov	x2, x0
  4072a4:	adrp	x0, 407000 <_start@@Base+0x160>
  4072a8:	add	x1, x0, #0x1d0
  4072ac:	mov	x0, x3
  4072b0:	bl	4077b4 <ar_scan@@Base>
  4072b4:	str	x0, [sp, #48]
  4072b8:	ldr	x0, [sp, #40]
  4072bc:	bl	406c00 <free@plt>
  4072c0:	ldr	x0, [sp, #48]
  4072c4:	cmp	x0, #0x0
  4072c8:	b.le	4072d4 <ar_member_date@@Base+0xb0>
  4072cc:	ldr	x0, [sp, #48]
  4072d0:	b	4072d8 <ar_member_date@@Base+0xb4>
  4072d4:	mov	x0, #0xffffffffffffffff    	// #-1
  4072d8:	ldp	x29, x30, [sp], #64
  4072dc:	ret

00000000004072e0 <ar_touch@@Base>:
  4072e0:	stp	x29, x30, [sp, #-80]!
  4072e4:	mov	x29, sp
  4072e8:	str	x19, [sp, #16]
  4072ec:	str	x0, [sp, #40]
  4072f0:	add	x1, sp, #0x30
  4072f4:	add	x0, sp, #0x38
  4072f8:	mov	x2, x1
  4072fc:	mov	x1, x0
  407300:	ldr	x0, [sp, #40]
  407304:	bl	407154 <ar_parse_name@@Base>
  407308:	ldr	x0, [sp, #56]
  40730c:	bl	430d78 <strcache_add@@Base>
  407310:	bl	40c678 <enter_file@@Base>
  407314:	str	x0, [sp, #64]
  407318:	mov	w1, #0x0                   	// #0
  40731c:	ldr	x0, [sp, #64]
  407320:	bl	42e3cc <f_mtime@@Base>
  407324:	mov	w0, #0x1                   	// #1
  407328:	str	w0, [sp, #76]
  40732c:	ldr	x0, [sp, #56]
  407330:	ldr	x1, [sp, #48]
  407334:	bl	407e44 <ar_member_touch@@Base>
  407338:	cmp	w0, #0x1
  40733c:	b.eq	407404 <ar_touch@@Base+0x124>  // b.none
  407340:	cmp	w0, #0x1
  407344:	b.gt	407454 <ar_touch@@Base+0x174>
  407348:	cmp	w0, #0x0
  40734c:	b.eq	40744c <ar_touch@@Base+0x16c>  // b.none
  407350:	cmp	w0, #0x0
  407354:	b.gt	407454 <ar_touch@@Base+0x174>
  407358:	cmn	w0, #0x1
  40735c:	b.eq	40737c <ar_touch@@Base+0x9c>  // b.none
  407360:	cmp	w0, #0x0
  407364:	b.ge	407454 <ar_touch@@Base+0x174>  // b.tcont
  407368:	cmn	w0, #0x3
  40736c:	b.eq	4073ec <ar_touch@@Base+0x10c>  // b.none
  407370:	cmn	w0, #0x2
  407374:	b.eq	4073b4 <ar_touch@@Base+0xd4>  // b.none
  407378:	b	407454 <ar_touch@@Base+0x174>
  40737c:	ldr	x0, [sp, #56]
  407380:	bl	4066f0 <strlen@plt>
  407384:	mov	x19, x0
  407388:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40738c:	add	x0, x0, #0xbf8
  407390:	bl	406e40 <gettext@plt>
  407394:	mov	x1, x0
  407398:	ldr	x0, [sp, #56]
  40739c:	mov	x3, x0
  4073a0:	mov	x2, x1
  4073a4:	mov	x1, x19
  4073a8:	mov	x0, #0x0                   	// #0
  4073ac:	bl	423e74 <error@@Base>
  4073b0:	b	407480 <ar_touch@@Base+0x1a0>
  4073b4:	ldr	x0, [sp, #56]
  4073b8:	bl	4066f0 <strlen@plt>
  4073bc:	mov	x19, x0
  4073c0:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4073c4:	add	x0, x0, #0xc20
  4073c8:	bl	406e40 <gettext@plt>
  4073cc:	mov	x1, x0
  4073d0:	ldr	x0, [sp, #56]
  4073d4:	mov	x3, x0
  4073d8:	mov	x2, x1
  4073dc:	mov	x1, x19
  4073e0:	mov	x0, #0x0                   	// #0
  4073e4:	bl	423e74 <error@@Base>
  4073e8:	b	407480 <ar_touch@@Base+0x1a0>
  4073ec:	ldr	x0, [sp, #56]
  4073f0:	mov	x1, x0
  4073f4:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4073f8:	add	x0, x0, #0xc48
  4073fc:	bl	4242c0 <perror_with_name@@Base>
  407400:	b	407480 <ar_touch@@Base+0x1a0>
  407404:	ldr	x0, [sp, #48]
  407408:	bl	4066f0 <strlen@plt>
  40740c:	mov	x19, x0
  407410:	ldr	x0, [sp, #56]
  407414:	bl	4066f0 <strlen@plt>
  407418:	add	x19, x19, x0
  40741c:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407420:	add	x0, x0, #0xc50
  407424:	bl	406e40 <gettext@plt>
  407428:	mov	x2, x0
  40742c:	ldr	x0, [sp, #48]
  407430:	ldr	x1, [sp, #56]
  407434:	mov	x4, x1
  407438:	mov	x3, x0
  40743c:	mov	x1, x19
  407440:	mov	x0, #0x0                   	// #0
  407444:	bl	423e74 <error@@Base>
  407448:	b	407480 <ar_touch@@Base+0x1a0>
  40744c:	str	wzr, [sp, #76]
  407450:	b	407480 <ar_touch@@Base+0x1a0>
  407454:	ldr	x0, [sp, #40]
  407458:	bl	4066f0 <strlen@plt>
  40745c:	mov	x19, x0
  407460:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407464:	add	x0, x0, #0xc80
  407468:	bl	406e40 <gettext@plt>
  40746c:	ldr	x3, [sp, #40]
  407470:	mov	x2, x0
  407474:	mov	x1, x19
  407478:	mov	x0, #0x0                   	// #0
  40747c:	bl	423e74 <error@@Base>
  407480:	ldr	x0, [sp, #56]
  407484:	bl	406c00 <free@plt>
  407488:	ldr	w0, [sp, #76]
  40748c:	ldr	x19, [sp, #16]
  407490:	ldp	x29, x30, [sp], #80
  407494:	ret
  407498:	stp	x29, x30, [sp, #-96]!
  40749c:	mov	x29, sp
  4074a0:	str	w0, [sp, #76]
  4074a4:	str	x1, [sp, #64]
  4074a8:	str	w2, [sp, #72]
  4074ac:	str	x3, [sp, #56]
  4074b0:	str	x4, [sp, #48]
  4074b4:	str	x5, [sp, #40]
  4074b8:	str	x6, [sp, #32]
  4074bc:	str	w7, [sp, #28]
  4074c0:	ldr	x0, [sp, #112]
  4074c4:	str	x0, [sp, #88]
  4074c8:	ldr	x0, [sp, #88]
  4074cc:	ldr	x0, [x0, #8]
  4074d0:	mov	w2, #0x5                   	// #5
  4074d4:	ldr	x1, [sp, #64]
  4074d8:	bl	406c60 <fnmatch@plt>
  4074dc:	cmp	w0, #0x0
  4074e0:	b.ne	407558 <ar_touch@@Base+0x278>  // b.any
  4074e4:	ldr	x0, [sp, #88]
  4074e8:	ldr	x0, [x0, #16]
  4074ec:	bl	4226d4 <xcalloc@@Base>
  4074f0:	str	x0, [sp, #80]
  4074f4:	ldr	x0, [sp, #88]
  4074f8:	ldr	x1, [x0]
  4074fc:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407500:	add	x4, x0, #0xcb8
  407504:	ldr	x3, [sp, #64]
  407508:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40750c:	add	x2, x0, #0xcc0
  407510:	mov	w0, #0x4                   	// #4
  407514:	bl	422404 <concat@@Base>
  407518:	bl	430d78 <strcache_add@@Base>
  40751c:	mov	x1, x0
  407520:	ldr	x0, [sp, #80]
  407524:	str	x1, [x0, #8]
  407528:	ldr	x0, [sp, #88]
  40752c:	ldr	x1, [x0, #24]
  407530:	ldr	x0, [sp, #80]
  407534:	str	x1, [x0]
  407538:	ldr	x0, [sp, #88]
  40753c:	ldr	x1, [sp, #80]
  407540:	str	x1, [x0, #24]
  407544:	ldr	x0, [sp, #88]
  407548:	ldr	w0, [x0, #32]
  40754c:	add	w1, w0, #0x1
  407550:	ldr	x0, [sp, #88]
  407554:	str	w1, [x0, #32]
  407558:	mov	x0, #0x0                   	// #0
  40755c:	ldp	x29, x30, [sp], #96
  407560:	ret
  407564:	sub	sp, sp, #0x20
  407568:	str	x0, [sp, #8]
  40756c:	str	w1, [sp, #4]
  407570:	str	wzr, [sp, #20]
  407574:	ldr	x0, [sp, #8]
  407578:	str	x0, [sp, #24]
  40757c:	b	407624 <ar_touch@@Base+0x344>
  407580:	ldr	x0, [sp, #24]
  407584:	ldrb	w0, [x0]
  407588:	cmp	w0, #0x5d
  40758c:	b.eq	4075f8 <ar_touch@@Base+0x318>  // b.none
  407590:	cmp	w0, #0x5d
  407594:	b.gt	407618 <ar_touch@@Base+0x338>
  407598:	cmp	w0, #0x5c
  40759c:	b.eq	4075d0 <ar_touch@@Base+0x2f0>  // b.none
  4075a0:	cmp	w0, #0x5c
  4075a4:	b.gt	407618 <ar_touch@@Base+0x338>
  4075a8:	cmp	w0, #0x5b
  4075ac:	b.eq	4075ec <ar_touch@@Base+0x30c>  // b.none
  4075b0:	cmp	w0, #0x5b
  4075b4:	b.gt	407618 <ar_touch@@Base+0x338>
  4075b8:	cmp	w0, #0x2a
  4075bc:	b.eq	4075c8 <ar_touch@@Base+0x2e8>  // b.none
  4075c0:	cmp	w0, #0x3f
  4075c4:	b.ne	407618 <ar_touch@@Base+0x338>  // b.any
  4075c8:	mov	w0, #0x1                   	// #1
  4075cc:	b	407638 <ar_touch@@Base+0x358>
  4075d0:	ldr	w0, [sp, #4]
  4075d4:	cmp	w0, #0x0
  4075d8:	b.eq	40760c <ar_touch@@Base+0x32c>  // b.none
  4075dc:	ldr	x0, [sp, #24]
  4075e0:	add	x0, x0, #0x1
  4075e4:	str	x0, [sp, #24]
  4075e8:	b	40760c <ar_touch@@Base+0x32c>
  4075ec:	mov	w0, #0x1                   	// #1
  4075f0:	str	w0, [sp, #20]
  4075f4:	b	407618 <ar_touch@@Base+0x338>
  4075f8:	ldr	w0, [sp, #20]
  4075fc:	cmp	w0, #0x0
  407600:	b.eq	407614 <ar_touch@@Base+0x334>  // b.none
  407604:	mov	w0, #0x1                   	// #1
  407608:	b	407638 <ar_touch@@Base+0x358>
  40760c:	nop
  407610:	b	407618 <ar_touch@@Base+0x338>
  407614:	nop
  407618:	ldr	x0, [sp, #24]
  40761c:	add	x0, x0, #0x1
  407620:	str	x0, [sp, #24]
  407624:	ldr	x0, [sp, #24]
  407628:	ldrb	w0, [x0]
  40762c:	cmp	w0, #0x0
  407630:	b.ne	407580 <ar_touch@@Base+0x2a0>  // b.any
  407634:	mov	w0, #0x0                   	// #0
  407638:	add	sp, sp, #0x20
  40763c:	ret

0000000000407640 <ar_glob@@Base>:
  407640:	stp	x29, x30, [sp, #-112]!
  407644:	mov	x29, sp
  407648:	str	x0, [x29, #40]
  40764c:	str	x1, [x29, #32]
  407650:	str	x2, [x29, #24]
  407654:	mov	w1, #0x1                   	// #1
  407658:	ldr	x0, [x29, #32]
  40765c:	bl	407564 <ar_touch@@Base+0x284>
  407660:	cmp	w0, #0x0
  407664:	b.ne	407670 <ar_glob@@Base+0x30>  // b.any
  407668:	mov	x0, #0x0                   	// #0
  40766c:	b	4077a8 <ar_glob@@Base+0x168>
  407670:	ldr	x0, [x29, #40]
  407674:	str	x0, [x29, #48]
  407678:	ldr	x0, [x29, #32]
  40767c:	str	x0, [x29, #56]
  407680:	ldr	x0, [x29, #24]
  407684:	str	x0, [x29, #64]
  407688:	str	xzr, [x29, #72]
  40768c:	str	wzr, [x29, #80]
  407690:	add	x0, x29, #0x30
  407694:	mov	x2, x0
  407698:	adrp	x0, 407000 <_start@@Base+0x160>
  40769c:	add	x1, x0, #0x498
  4076a0:	ldr	x0, [x29, #40]
  4076a4:	bl	4077b4 <ar_scan@@Base>
  4076a8:	ldr	x0, [x29, #72]
  4076ac:	cmp	x0, #0x0
  4076b0:	b.ne	4076bc <ar_glob@@Base+0x7c>  // b.any
  4076b4:	mov	x0, #0x0                   	// #0
  4076b8:	b	4077a8 <ar_glob@@Base+0x168>
  4076bc:	ldr	w0, [x29, #80]
  4076c0:	mov	w0, w0
  4076c4:	lsl	x0, x0, #3
  4076c8:	add	x0, x0, #0xf
  4076cc:	lsr	x0, x0, #4
  4076d0:	lsl	x0, x0, #4
  4076d4:	sub	sp, sp, x0
  4076d8:	mov	x0, sp
  4076dc:	add	x0, x0, #0xf
  4076e0:	lsr	x0, x0, #4
  4076e4:	lsl	x0, x0, #4
  4076e8:	str	x0, [x29, #88]
  4076ec:	str	wzr, [x29, #100]
  4076f0:	ldr	x0, [x29, #72]
  4076f4:	str	x0, [x29, #104]
  4076f8:	b	407730 <ar_glob@@Base+0xf0>
  4076fc:	ldr	w0, [x29, #100]
  407700:	add	w1, w0, #0x1
  407704:	str	w1, [x29, #100]
  407708:	mov	w0, w0
  40770c:	lsl	x0, x0, #3
  407710:	ldr	x1, [x29, #88]
  407714:	add	x0, x1, x0
  407718:	ldr	x1, [x29, #104]
  40771c:	ldr	x1, [x1, #8]
  407720:	str	x1, [x0]
  407724:	ldr	x0, [x29, #104]
  407728:	ldr	x0, [x0]
  40772c:	str	x0, [x29, #104]
  407730:	ldr	x0, [x29, #104]
  407734:	cmp	x0, #0x0
  407738:	b.ne	4076fc <ar_glob@@Base+0xbc>  // b.any
  40773c:	ldr	w1, [x29, #100]
  407740:	adrp	x0, 422000 <die@@Base+0x44>
  407744:	add	x3, x0, #0x110
  407748:	mov	x2, #0x8                   	// #8
  40774c:	ldr	x0, [x29, #88]
  407750:	bl	406810 <qsort@plt>
  407754:	str	wzr, [x29, #100]
  407758:	ldr	x0, [x29, #72]
  40775c:	str	x0, [x29, #104]
  407760:	b	407798 <ar_glob@@Base+0x158>
  407764:	ldr	w0, [x29, #100]
  407768:	add	w1, w0, #0x1
  40776c:	str	w1, [x29, #100]
  407770:	mov	w0, w0
  407774:	lsl	x0, x0, #3
  407778:	ldr	x1, [x29, #88]
  40777c:	add	x0, x1, x0
  407780:	ldr	x1, [x0]
  407784:	ldr	x0, [x29, #104]
  407788:	str	x1, [x0, #8]
  40778c:	ldr	x0, [x29, #104]
  407790:	ldr	x0, [x0]
  407794:	str	x0, [x29, #104]
  407798:	ldr	x0, [x29, #104]
  40779c:	cmp	x0, #0x0
  4077a0:	b.ne	407764 <ar_glob@@Base+0x124>  // b.any
  4077a4:	ldr	x0, [x29, #72]
  4077a8:	mov	sp, x29
  4077ac:	ldp	x29, x30, [sp], #112
  4077b0:	ret

00000000004077b4 <ar_scan@@Base>:
  4077b4:	stp	x29, x30, [sp, #-304]!
  4077b8:	mov	x29, sp
  4077bc:	stp	x19, x20, [sp, #16]
  4077c0:	stp	x21, x22, [sp, #32]
  4077c4:	sub	sp, sp, #0x20
  4077c8:	str	x0, [x29, #72]
  4077cc:	str	x1, [x29, #64]
  4077d0:	str	x2, [x29, #56]
  4077d4:	str	xzr, [x29, #296]
  4077d8:	str	wzr, [x29, #292]
  4077dc:	mov	w2, #0x0                   	// #0
  4077e0:	mov	w1, #0x0                   	// #0
  4077e4:	ldr	x0, [x29, #72]
  4077e8:	bl	406960 <open@plt>
  4077ec:	str	w0, [x29, #244]
  4077f0:	ldr	w0, [x29, #244]
  4077f4:	cmp	w0, #0x0
  4077f8:	b.ge	407804 <ar_scan@@Base+0x50>  // b.tcont
  4077fc:	mov	x0, #0xffffffffffffffff    	// #-1
  407800:	b	407d54 <ar_scan@@Base+0x5a0>
  407804:	add	x0, x29, #0xb0
  407808:	mov	x2, #0x8                   	// #8
  40780c:	mov	x1, x0
  407810:	ldr	w0, [x29, #244]
  407814:	bl	422a14 <readbuf@@Base>
  407818:	str	w0, [x29, #240]
  40781c:	ldr	w0, [x29, #240]
  407820:	cmp	w0, #0x8
  407824:	b.ne	407d04 <ar_scan@@Base+0x550>  // b.any
  407828:	add	x3, x29, #0xb0
  40782c:	mov	x2, #0x8                   	// #8
  407830:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407834:	add	x1, x0, #0xcc8
  407838:	mov	x0, x3
  40783c:	bl	406b80 <memcmp@plt>
  407840:	cmp	w0, #0x0
  407844:	b.ne	407d04 <ar_scan@@Base+0x550>  // b.any
  407848:	mov	x0, #0x8                   	// #8
  40784c:	str	x0, [x29, #280]
  407850:	str	wzr, [x29, #268]
  407854:	nop
  407858:	mov	w2, #0x0                   	// #0
  40785c:	ldr	x1, [x29, #280]
  407860:	ldr	w0, [x29, #244]
  407864:	bl	406860 <lseek@plt>
  407868:	str	x0, [x29, #232]
  40786c:	ldr	x0, [x29, #232]
  407870:	cmn	x0, #0x1
  407874:	b.ne	407888 <ar_scan@@Base+0xd4>  // b.any
  407878:	bl	406dd0 <__errno_location@plt>
  40787c:	ldr	w0, [x0]
  407880:	cmp	w0, #0x4
  407884:	b.eq	407858 <ar_scan@@Base+0xa4>  // b.none
  407888:	ldr	x0, [x29, #232]
  40788c:	cmp	x0, #0x0
  407890:	b.lt	407d0c <ar_scan@@Base+0x558>  // b.tstop
  407894:	add	x0, x29, #0x58
  407898:	mov	x2, #0x3c                  	// #60
  40789c:	mov	x1, x0
  4078a0:	ldr	w0, [x29, #244]
  4078a4:	bl	422a14 <readbuf@@Base>
  4078a8:	str	w0, [x29, #228]
  4078ac:	ldr	w0, [x29, #228]
  4078b0:	cmp	w0, #0x0
  4078b4:	b.ne	4078c8 <ar_scan@@Base+0x114>  // b.any
  4078b8:	ldr	w0, [x29, #244]
  4078bc:	bl	406ac0 <close@plt>
  4078c0:	mov	x0, #0x0                   	// #0
  4078c4:	b	407d54 <ar_scan@@Base+0x5a0>
  4078c8:	ldr	w0, [x29, #228]
  4078cc:	cmp	w0, #0x3c
  4078d0:	b.ne	407d14 <ar_scan@@Base+0x560>  // b.any
  4078d4:	add	x0, x29, #0x58
  4078d8:	add	x3, x0, #0x3a
  4078dc:	mov	x2, #0x2                   	// #2
  4078e0:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4078e4:	add	x1, x0, #0xcd8
  4078e8:	mov	x0, x3
  4078ec:	bl	406b80 <memcmp@plt>
  4078f0:	cmp	w0, #0x0
  4078f4:	b.ne	407d14 <ar_scan@@Base+0x560>  // b.any
  4078f8:	add	x0, x29, #0x98
  4078fc:	str	x0, [x29, #272]
  407900:	ldp	x0, x1, [x29, #88]
  407904:	ldr	x2, [x29, #272]
  407908:	stp	x0, x1, [x2]
  40790c:	ldr	x0, [x29, #272]
  407910:	add	x0, x0, #0x10
  407914:	str	x0, [x29, #256]
  407918:	ldr	x0, [x29, #256]
  40791c:	strb	wzr, [x0]
  407920:	ldr	x1, [x29, #256]
  407924:	ldr	x0, [x29, #272]
  407928:	cmp	x1, x0
  40792c:	b.ls	40794c <ar_scan@@Base+0x198>  // b.plast
  407930:	ldr	x0, [x29, #256]
  407934:	sub	x0, x0, #0x1
  407938:	str	x0, [x29, #256]
  40793c:	ldr	x0, [x29, #256]
  407940:	ldrb	w0, [x0]
  407944:	cmp	w0, #0x20
  407948:	b.eq	407918 <ar_scan@@Base+0x164>  // b.none
  40794c:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407950:	add	x1, x0, #0xce0
  407954:	ldr	x0, [x29, #272]
  407958:	bl	406bc0 <strcmp@plt>
  40795c:	cmp	w0, #0x0
  407960:	b.eq	40797c <ar_scan@@Base+0x1c8>  // b.none
  407964:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407968:	add	x1, x0, #0xce8
  40796c:	ldr	x0, [x29, #272]
  407970:	bl	406bc0 <strcmp@plt>
  407974:	cmp	w0, #0x0
  407978:	b.ne	407984 <ar_scan@@Base+0x1d0>  // b.any
  40797c:	mov	w0, #0x1                   	// #1
  407980:	b	407988 <ar_scan@@Base+0x1d4>
  407984:	mov	w0, #0x0                   	// #0
  407988:	str	w0, [x29, #224]
  40798c:	ldr	x0, [x29, #256]
  407990:	ldrb	w0, [x0]
  407994:	cmp	w0, #0x2f
  407998:	b.ne	4079a4 <ar_scan@@Base+0x1f0>  // b.any
  40799c:	ldr	x0, [x29, #256]
  4079a0:	strb	wzr, [x0]
  4079a4:	ldr	w0, [x29, #224]
  4079a8:	cmp	w0, #0x0
  4079ac:	b.ne	407a3c <ar_scan@@Base+0x288>  // b.any
  4079b0:	ldr	x0, [x29, #272]
  4079b4:	ldrb	w0, [x0]
  4079b8:	cmp	w0, #0x20
  4079bc:	b.eq	4079d0 <ar_scan@@Base+0x21c>  // b.none
  4079c0:	ldr	x0, [x29, #272]
  4079c4:	ldrb	w0, [x0]
  4079c8:	cmp	w0, #0x2f
  4079cc:	b.ne	407a3c <ar_scan@@Base+0x288>  // b.any
  4079d0:	ldr	x0, [x29, #296]
  4079d4:	cmp	x0, #0x0
  4079d8:	b.eq	407a3c <ar_scan@@Base+0x288>  // b.none
  4079dc:	ldr	x0, [x29, #272]
  4079e0:	add	x0, x0, #0x1
  4079e4:	bl	4068f0 <atoi@plt>
  4079e8:	str	w0, [x29, #220]
  4079ec:	ldr	w0, [x29, #220]
  4079f0:	cmp	w0, #0x0
  4079f4:	b.lt	407d1c <ar_scan@@Base+0x568>  // b.tstop
  4079f8:	ldr	w1, [x29, #220]
  4079fc:	ldr	w0, [x29, #292]
  407a00:	cmp	w1, w0
  407a04:	b.ge	407d1c <ar_scan@@Base+0x568>  // b.tcont
  407a08:	ldrsw	x0, [x29, #220]
  407a0c:	ldr	x1, [x29, #296]
  407a10:	add	x0, x1, x0
  407a14:	str	x0, [x29, #272]
  407a18:	ldr	x0, [x29, #272]
  407a1c:	bl	4066f0 <strlen@plt>
  407a20:	str	w0, [x29, #216]
  407a24:	ldr	w0, [x29, #216]
  407a28:	cmp	w0, #0x0
  407a2c:	b.le	407d24 <ar_scan@@Base+0x570>
  407a30:	mov	w0, #0x1                   	// #1
  407a34:	str	w0, [x29, #268]
  407a38:	b	407b00 <ar_scan@@Base+0x34c>
  407a3c:	ldr	x0, [x29, #272]
  407a40:	ldrb	w0, [x0]
  407a44:	cmp	w0, #0x23
  407a48:	b.ne	407b00 <ar_scan@@Base+0x34c>  // b.any
  407a4c:	ldr	x0, [x29, #272]
  407a50:	add	x0, x0, #0x1
  407a54:	ldrb	w0, [x0]
  407a58:	cmp	w0, #0x31
  407a5c:	b.ne	407b00 <ar_scan@@Base+0x34c>  // b.any
  407a60:	ldr	x0, [x29, #272]
  407a64:	add	x0, x0, #0x2
  407a68:	ldrb	w0, [x0]
  407a6c:	cmp	w0, #0x2f
  407a70:	b.ne	407b00 <ar_scan@@Base+0x34c>  // b.any
  407a74:	ldr	x0, [x29, #272]
  407a78:	add	x0, x0, #0x3
  407a7c:	bl	4068f0 <atoi@plt>
  407a80:	str	w0, [x29, #212]
  407a84:	ldr	w0, [x29, #212]
  407a88:	cmp	w0, #0x0
  407a8c:	b.le	407d2c <ar_scan@@Base+0x578>
  407a90:	ldr	w0, [x29, #212]
  407a94:	add	w0, w0, #0x1
  407a98:	sxtw	x0, w0
  407a9c:	add	x0, x0, #0xf
  407aa0:	lsr	x0, x0, #4
  407aa4:	lsl	x0, x0, #4
  407aa8:	sub	sp, sp, x0
  407aac:	add	x0, sp, #0x20
  407ab0:	add	x0, x0, #0xf
  407ab4:	lsr	x0, x0, #4
  407ab8:	lsl	x0, x0, #4
  407abc:	str	x0, [x29, #272]
  407ac0:	ldrsw	x0, [x29, #212]
  407ac4:	mov	x2, x0
  407ac8:	ldr	x1, [x29, #272]
  407acc:	ldr	w0, [x29, #244]
  407ad0:	bl	422a14 <readbuf@@Base>
  407ad4:	str	w0, [x29, #228]
  407ad8:	ldr	w1, [x29, #228]
  407adc:	ldr	w0, [x29, #212]
  407ae0:	cmp	w1, w0
  407ae4:	b.ne	407d34 <ar_scan@@Base+0x580>  // b.any
  407ae8:	ldrsw	x0, [x29, #212]
  407aec:	ldr	x1, [x29, #272]
  407af0:	add	x0, x1, x0
  407af4:	strb	wzr, [x0]
  407af8:	mov	w0, #0x1                   	// #1
  407afc:	str	w0, [x29, #268]
  407b00:	add	x1, x29, #0x94
  407b04:	add	x0, x29, #0x58
  407b08:	add	x3, x0, #0x28
  407b0c:	mov	x2, x1
  407b10:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407b14:	add	x1, x0, #0xcf8
  407b18:	mov	x0, x3
  407b1c:	bl	406d50 <__isoc99_sscanf@plt>
  407b20:	add	x0, x29, #0x58
  407b24:	add	x0, x0, #0x30
  407b28:	bl	406af0 <atol@plt>
  407b2c:	str	x0, [x29, #200]
  407b30:	ldr	w0, [x29, #268]
  407b34:	cmp	w0, #0x0
  407b38:	cset	w0, eq  // eq = none
  407b3c:	and	w0, w0, #0xff
  407b40:	mov	w21, w0
  407b44:	ldr	x0, [x29, #280]
  407b48:	add	x0, x0, #0x3c
  407b4c:	mov	x22, x0
  407b50:	add	x0, x29, #0x58
  407b54:	add	x0, x0, #0x10
  407b58:	bl	406af0 <atol@plt>
  407b5c:	mov	x19, x0
  407b60:	add	x0, x29, #0x58
  407b64:	add	x0, x0, #0x1c
  407b68:	bl	4068f0 <atoi@plt>
  407b6c:	mov	w20, w0
  407b70:	add	x0, x29, #0x58
  407b74:	add	x0, x0, #0x22
  407b78:	bl	4068f0 <atoi@plt>
  407b7c:	mov	w2, w0
  407b80:	ldr	w0, [x29, #148]
  407b84:	ldr	x1, [x29, #56]
  407b88:	str	x1, [sp, #16]
  407b8c:	str	w0, [sp, #8]
  407b90:	str	w2, [sp]
  407b94:	ldr	x8, [x29, #64]
  407b98:	mov	w7, w20
  407b9c:	mov	x6, x19
  407ba0:	ldr	x5, [x29, #200]
  407ba4:	mov	x4, x22
  407ba8:	ldr	x3, [x29, #280]
  407bac:	mov	w2, w21
  407bb0:	ldr	x1, [x29, #272]
  407bb4:	ldr	w0, [x29, #244]
  407bb8:	blr	x8
  407bbc:	str	x0, [x29, #192]
  407bc0:	ldr	x0, [x29, #192]
  407bc4:	cmp	x0, #0x0
  407bc8:	b.eq	407bdc <ar_scan@@Base+0x428>  // b.none
  407bcc:	ldr	w0, [x29, #244]
  407bd0:	bl	406ac0 <close@plt>
  407bd4:	ldr	x0, [x29, #192]
  407bd8:	b	407d54 <ar_scan@@Base+0x5a0>
  407bdc:	ldr	w0, [x29, #224]
  407be0:	cmp	w0, #0x0
  407be4:	b.eq	407cd0 <ar_scan@@Base+0x51c>  // b.none
  407be8:	ldr	x1, [x29, #200]
  407bec:	mov	x0, #0x7fffffff            	// #2147483647
  407bf0:	cmp	x1, x0
  407bf4:	b.gt	407d3c <ar_scan@@Base+0x588>
  407bf8:	ldr	x0, [x29, #200]
  407bfc:	add	x0, x0, #0x1
  407c00:	add	x0, x0, #0xf
  407c04:	lsr	x0, x0, #4
  407c08:	lsl	x0, x0, #4
  407c0c:	sub	sp, sp, x0
  407c10:	add	x0, sp, #0x20
  407c14:	add	x0, x0, #0xf
  407c18:	lsr	x0, x0, #4
  407c1c:	lsl	x0, x0, #4
  407c20:	str	x0, [x29, #296]
  407c24:	ldr	x0, [x29, #200]
  407c28:	mov	x2, x0
  407c2c:	ldr	x1, [x29, #296]
  407c30:	ldr	w0, [x29, #244]
  407c34:	bl	422a14 <readbuf@@Base>
  407c38:	str	w0, [x29, #228]
  407c3c:	ldrsw	x0, [x29, #228]
  407c40:	ldr	x1, [x29, #200]
  407c44:	cmp	x1, x0
  407c48:	b.ne	407d44 <ar_scan@@Base+0x590>  // b.any
  407c4c:	ldr	x0, [x29, #200]
  407c50:	str	w0, [x29, #292]
  407c54:	ldr	x0, [x29, #200]
  407c58:	ldr	x1, [x29, #296]
  407c5c:	add	x0, x1, x0
  407c60:	str	x0, [x29, #184]
  407c64:	ldr	x0, [x29, #296]
  407c68:	str	x0, [x29, #248]
  407c6c:	b	407cb4 <ar_scan@@Base+0x500>
  407c70:	ldr	x0, [x29, #248]
  407c74:	ldrb	w0, [x0]
  407c78:	cmp	w0, #0xa
  407c7c:	b.ne	407ca8 <ar_scan@@Base+0x4f4>  // b.any
  407c80:	ldr	x0, [x29, #248]
  407c84:	strb	wzr, [x0]
  407c88:	ldr	x0, [x29, #248]
  407c8c:	sub	x0, x0, #0x1
  407c90:	ldrb	w0, [x0]
  407c94:	cmp	w0, #0x2f
  407c98:	b.ne	407ca8 <ar_scan@@Base+0x4f4>  // b.any
  407c9c:	ldr	x0, [x29, #248]
  407ca0:	sub	x0, x0, #0x1
  407ca4:	strb	wzr, [x0]
  407ca8:	ldr	x0, [x29, #248]
  407cac:	add	x0, x0, #0x1
  407cb0:	str	x0, [x29, #248]
  407cb4:	ldr	x1, [x29, #248]
  407cb8:	ldr	x0, [x29, #184]
  407cbc:	cmp	x1, x0
  407cc0:	b.cc	407c70 <ar_scan@@Base+0x4bc>  // b.lo, b.ul, b.last
  407cc4:	ldr	x0, [x29, #184]
  407cc8:	strb	wzr, [x0]
  407ccc:	str	wzr, [x29, #224]
  407cd0:	ldr	x1, [x29, #200]
  407cd4:	ldr	x0, [x29, #280]
  407cd8:	add	x0, x1, x0
  407cdc:	add	x0, x0, #0x3c
  407ce0:	str	x0, [x29, #280]
  407ce4:	ldr	x0, [x29, #280]
  407ce8:	and	x0, x0, #0x1
  407cec:	cmp	x0, #0x0
  407cf0:	b.eq	407850 <ar_scan@@Base+0x9c>  // b.none
  407cf4:	ldr	x0, [x29, #280]
  407cf8:	add	x0, x0, #0x1
  407cfc:	str	x0, [x29, #280]
  407d00:	b	407850 <ar_scan@@Base+0x9c>
  407d04:	nop
  407d08:	b	407d48 <ar_scan@@Base+0x594>
  407d0c:	nop
  407d10:	b	407d48 <ar_scan@@Base+0x594>
  407d14:	nop
  407d18:	b	407d48 <ar_scan@@Base+0x594>
  407d1c:	nop
  407d20:	b	407d48 <ar_scan@@Base+0x594>
  407d24:	nop
  407d28:	b	407d48 <ar_scan@@Base+0x594>
  407d2c:	nop
  407d30:	b	407d48 <ar_scan@@Base+0x594>
  407d34:	nop
  407d38:	b	407d48 <ar_scan@@Base+0x594>
  407d3c:	nop
  407d40:	b	407d48 <ar_scan@@Base+0x594>
  407d44:	nop
  407d48:	ldr	w0, [x29, #244]
  407d4c:	bl	406ac0 <close@plt>
  407d50:	mov	x0, #0xfffffffffffffffe    	// #-2
  407d54:	mov	sp, x29
  407d58:	ldp	x19, x20, [sp, #16]
  407d5c:	ldp	x21, x22, [sp, #32]
  407d60:	ldp	x29, x30, [sp], #304
  407d64:	ret

0000000000407d68 <ar_name_equal@@Base>:
  407d68:	stp	x29, x30, [sp, #-128]!
  407d6c:	mov	x29, sp
  407d70:	str	x0, [sp, #40]
  407d74:	str	x1, [sp, #32]
  407d78:	str	w2, [sp, #28]
  407d7c:	mov	w1, #0x2f                  	// #47
  407d80:	ldr	x0, [sp, #40]
  407d84:	bl	406ae0 <strrchr@plt>
  407d88:	str	x0, [sp, #120]
  407d8c:	ldr	x0, [sp, #120]
  407d90:	cmp	x0, #0x0
  407d94:	b.eq	407da4 <ar_name_equal@@Base+0x3c>  // b.none
  407d98:	ldr	x0, [sp, #120]
  407d9c:	add	x0, x0, #0x1
  407da0:	str	x0, [sp, #40]
  407da4:	ldr	w0, [sp, #28]
  407da8:	cmp	w0, #0x0
  407dac:	b.eq	407dd0 <ar_name_equal@@Base+0x68>  // b.none
  407db0:	mov	x2, #0xf                   	// #15
  407db4:	ldr	x1, [sp, #32]
  407db8:	ldr	x0, [sp, #40]
  407dbc:	bl	406990 <strncmp@plt>
  407dc0:	cmp	w0, #0x0
  407dc4:	cset	w0, eq  // eq = none
  407dc8:	and	w0, w0, #0xff
  407dcc:	b	407de8 <ar_name_equal@@Base+0x80>
  407dd0:	ldr	x1, [sp, #32]
  407dd4:	ldr	x0, [sp, #40]
  407dd8:	bl	406bc0 <strcmp@plt>
  407ddc:	cmp	w0, #0x0
  407de0:	cset	w0, eq  // eq = none
  407de4:	and	w0, w0, #0xff
  407de8:	ldp	x29, x30, [sp], #128
  407dec:	ret
  407df0:	stp	x29, x30, [sp, #-80]!
  407df4:	mov	x29, sp
  407df8:	str	w0, [sp, #76]
  407dfc:	str	x1, [sp, #64]
  407e00:	str	w2, [sp, #72]
  407e04:	str	x3, [sp, #56]
  407e08:	str	x4, [sp, #48]
  407e0c:	str	x5, [sp, #40]
  407e10:	str	x6, [sp, #32]
  407e14:	str	w7, [sp, #28]
  407e18:	ldr	w2, [sp, #72]
  407e1c:	ldr	x1, [sp, #64]
  407e20:	ldr	x0, [sp, #96]
  407e24:	bl	407d68 <ar_name_equal@@Base>
  407e28:	cmp	w0, #0x0
  407e2c:	b.ne	407e38 <ar_name_equal@@Base+0xd0>  // b.any
  407e30:	mov	x0, #0x0                   	// #0
  407e34:	b	407e3c <ar_name_equal@@Base+0xd4>
  407e38:	ldr	x0, [sp, #56]
  407e3c:	ldp	x29, x30, [sp], #80
  407e40:	ret

0000000000407e44 <ar_member_touch@@Base>:
  407e44:	stp	x29, x30, [sp, #-256]!
  407e48:	mov	x29, sp
  407e4c:	str	x0, [sp, #24]
  407e50:	str	x1, [sp, #16]
  407e54:	ldr	x2, [sp, #16]
  407e58:	adrp	x0, 407000 <_start@@Base+0x160>
  407e5c:	add	x1, x0, #0xdf0
  407e60:	ldr	x0, [sp, #24]
  407e64:	bl	4077b4 <ar_scan@@Base>
  407e68:	str	x0, [sp, #240]
  407e6c:	ldr	x0, [sp, #240]
  407e70:	cmp	x0, #0x0
  407e74:	b.ge	407e80 <ar_member_touch@@Base+0x3c>  // b.tcont
  407e78:	ldr	x0, [sp, #240]
  407e7c:	b	4080b0 <ar_member_touch@@Base+0x26c>
  407e80:	ldr	x0, [sp, #240]
  407e84:	cmp	x0, #0x0
  407e88:	b.ne	407e94 <ar_member_touch@@Base+0x50>  // b.any
  407e8c:	mov	w0, #0x1                   	// #1
  407e90:	b	4080b0 <ar_member_touch@@Base+0x26c>
  407e94:	nop
  407e98:	mov	w2, #0x1b6                 	// #438
  407e9c:	mov	w1, #0x2                   	// #2
  407ea0:	ldr	x0, [sp, #24]
  407ea4:	bl	406960 <open@plt>
  407ea8:	str	w0, [sp, #236]
  407eac:	ldr	w0, [sp, #236]
  407eb0:	cmn	w0, #0x1
  407eb4:	b.ne	407ec8 <ar_member_touch@@Base+0x84>  // b.any
  407eb8:	bl	406dd0 <__errno_location@plt>
  407ebc:	ldr	w0, [x0]
  407ec0:	cmp	w0, #0x4
  407ec4:	b.eq	407e98 <ar_member_touch@@Base+0x54>  // b.none
  407ec8:	ldr	w0, [sp, #236]
  407ecc:	cmp	w0, #0x0
  407ed0:	b.ge	407edc <ar_member_touch@@Base+0x98>  // b.tcont
  407ed4:	mov	w0, #0xfffffffd            	// #-3
  407ed8:	b	4080b0 <ar_member_touch@@Base+0x26c>
  407edc:	nop
  407ee0:	mov	w2, #0x0                   	// #0
  407ee4:	ldr	x1, [sp, #240]
  407ee8:	ldr	w0, [sp, #236]
  407eec:	bl	406860 <lseek@plt>
  407ef0:	str	x0, [sp, #224]
  407ef4:	ldr	x0, [sp, #224]
  407ef8:	cmn	x0, #0x1
  407efc:	b.ne	407f10 <ar_member_touch@@Base+0xcc>  // b.any
  407f00:	bl	406dd0 <__errno_location@plt>
  407f04:	ldr	w0, [x0]
  407f08:	cmp	w0, #0x4
  407f0c:	b.eq	407ee0 <ar_member_touch@@Base+0x9c>  // b.none
  407f10:	ldr	x0, [sp, #224]
  407f14:	cmp	x0, #0x0
  407f18:	b.lt	408064 <ar_member_touch@@Base+0x220>  // b.tstop
  407f1c:	add	x0, sp, #0xa0
  407f20:	mov	x2, #0x3c                  	// #60
  407f24:	mov	x1, x0
  407f28:	ldr	w0, [sp, #236]
  407f2c:	bl	422a14 <readbuf@@Base>
  407f30:	str	w0, [sp, #220]
  407f34:	ldr	w0, [sp, #220]
  407f38:	cmp	w0, #0x3c
  407f3c:	b.ne	40806c <ar_member_touch@@Base+0x228>  // b.any
  407f40:	nop
  407f44:	add	x0, sp, #0x20
  407f48:	mov	x1, x0
  407f4c:	ldr	w0, [sp, #236]
  407f50:	bl	436b80 <__libc_csu_fini@@Base+0x28>
  407f54:	str	w0, [sp, #220]
  407f58:	ldr	w0, [sp, #220]
  407f5c:	cmn	w0, #0x1
  407f60:	b.ne	407f74 <ar_member_touch@@Base+0x130>  // b.any
  407f64:	bl	406dd0 <__errno_location@plt>
  407f68:	ldr	w0, [x0]
  407f6c:	cmp	w0, #0x4
  407f70:	b.eq	407f44 <ar_member_touch@@Base+0x100>  // b.none
  407f74:	ldr	w0, [sp, #220]
  407f78:	cmp	w0, #0x0
  407f7c:	b.lt	408074 <ar_member_touch@@Base+0x230>  // b.tstop
  407f80:	str	wzr, [sp, #252]
  407f84:	b	407fa4 <ar_member_touch@@Base+0x160>
  407f88:	ldr	w0, [sp, #252]
  407f8c:	add	x1, sp, #0xb0
  407f90:	mov	w2, #0x20                  	// #32
  407f94:	strb	w2, [x1, x0]
  407f98:	ldr	w0, [sp, #252]
  407f9c:	add	w0, w0, #0x1
  407fa0:	str	w0, [sp, #252]
  407fa4:	ldr	w0, [sp, #252]
  407fa8:	cmp	w0, #0xb
  407fac:	b.ls	407f88 <ar_member_touch@@Base+0x144>  // b.plast
  407fb0:	ldr	x0, [sp, #120]
  407fb4:	mov	x1, x0
  407fb8:	add	x0, sp, #0xa0
  407fbc:	add	x3, x0, #0x10
  407fc0:	mov	x2, x1
  407fc4:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  407fc8:	add	x1, x0, #0xd00
  407fcc:	mov	x0, x3
  407fd0:	bl	406790 <sprintf@plt>
  407fd4:	add	x0, sp, #0xa0
  407fd8:	add	x0, x0, #0x10
  407fdc:	bl	4066f0 <strlen@plt>
  407fe0:	mov	x2, x0
  407fe4:	add	x0, sp, #0xb0
  407fe8:	mov	w1, #0x20                  	// #32
  407fec:	strb	w1, [x0, x2]
  407ff0:	nop
  407ff4:	mov	w2, #0x0                   	// #0
  407ff8:	ldr	x1, [sp, #240]
  407ffc:	ldr	w0, [sp, #236]
  408000:	bl	406860 <lseek@plt>
  408004:	str	x0, [sp, #224]
  408008:	ldr	x0, [sp, #224]
  40800c:	cmn	x0, #0x1
  408010:	b.ne	408024 <ar_member_touch@@Base+0x1e0>  // b.any
  408014:	bl	406dd0 <__errno_location@plt>
  408018:	ldr	w0, [x0]
  40801c:	cmp	w0, #0x4
  408020:	b.eq	407ff4 <ar_member_touch@@Base+0x1b0>  // b.none
  408024:	ldr	x0, [sp, #224]
  408028:	cmp	x0, #0x0
  40802c:	b.lt	40807c <ar_member_touch@@Base+0x238>  // b.tstop
  408030:	add	x0, sp, #0xa0
  408034:	mov	x2, #0x3c                  	// #60
  408038:	mov	x1, x0
  40803c:	ldr	w0, [sp, #236]
  408040:	bl	42296c <writebuf@@Base>
  408044:	str	w0, [sp, #220]
  408048:	ldr	w0, [sp, #220]
  40804c:	cmp	w0, #0x3c
  408050:	b.ne	408084 <ar_member_touch@@Base+0x240>  // b.any
  408054:	ldr	w0, [sp, #236]
  408058:	bl	406ac0 <close@plt>
  40805c:	mov	w0, #0x0                   	// #0
  408060:	b	4080b0 <ar_member_touch@@Base+0x26c>
  408064:	nop
  408068:	b	408088 <ar_member_touch@@Base+0x244>
  40806c:	nop
  408070:	b	408088 <ar_member_touch@@Base+0x244>
  408074:	nop
  408078:	b	408088 <ar_member_touch@@Base+0x244>
  40807c:	nop
  408080:	b	408088 <ar_member_touch@@Base+0x244>
  408084:	nop
  408088:	bl	406dd0 <__errno_location@plt>
  40808c:	ldr	w0, [x0]
  408090:	str	w0, [sp, #220]
  408094:	ldr	w0, [sp, #236]
  408098:	bl	406ac0 <close@plt>
  40809c:	bl	406dd0 <__errno_location@plt>
  4080a0:	mov	x1, x0
  4080a4:	ldr	w0, [sp, #220]
  4080a8:	str	w0, [x1]
  4080ac:	mov	w0, #0xfffffffd            	// #-3
  4080b0:	ldp	x29, x30, [sp], #256
  4080b4:	ret
  4080b8:	stp	x29, x30, [sp, #-64]!
  4080bc:	mov	x29, sp
  4080c0:	str	x0, [sp, #24]
  4080c4:	ldr	x0, [sp, #24]
  4080c8:	str	x0, [sp, #56]
  4080cc:	str	xzr, [sp, #48]
  4080d0:	ldr	x0, [sp, #56]
  4080d4:	ldr	x0, [x0, #8]
  4080d8:	cmp	x0, #0x0
  4080dc:	b.eq	4080ec <ar_member_touch@@Base+0x2a8>  // b.none
  4080e0:	ldr	x0, [sp, #56]
  4080e4:	ldr	x0, [x0, #8]
  4080e8:	b	4080f8 <ar_member_touch@@Base+0x2b4>
  4080ec:	ldr	x0, [sp, #56]
  4080f0:	ldr	x0, [x0, #16]
  4080f4:	ldr	x0, [x0]
  4080f8:	str	x0, [sp, #40]
  4080fc:	ldr	x0, [sp, #40]
  408100:	bl	415104 <jhash_string@@Base>
  408104:	mov	w0, w0
  408108:	ldr	x1, [sp, #48]
  40810c:	add	x0, x1, x0
  408110:	str	x0, [sp, #48]
  408114:	ldr	x0, [sp, #48]
  408118:	ldp	x29, x30, [sp], #64
  40811c:	ret
  408120:	sub	sp, sp, #0x20
  408124:	str	x0, [sp, #8]
  408128:	ldr	x0, [sp, #8]
  40812c:	str	x0, [sp, #24]
  408130:	str	xzr, [sp, #16]
  408134:	ldr	x0, [sp, #24]
  408138:	ldr	x0, [x0, #8]
  40813c:	cmp	x0, #0x0
  408140:	ldr	x0, [sp, #16]
  408144:	add	sp, sp, #0x20
  408148:	ret
  40814c:	stp	x29, x30, [sp, #-48]!
  408150:	mov	x29, sp
  408154:	str	x0, [sp, #24]
  408158:	str	x1, [sp, #16]
  40815c:	ldr	x0, [sp, #24]
  408160:	str	x0, [sp, #40]
  408164:	ldr	x0, [sp, #16]
  408168:	str	x0, [sp, #32]
  40816c:	ldr	x0, [sp, #40]
  408170:	ldr	x0, [x0, #8]
  408174:	cmp	x0, #0x0
  408178:	b.eq	408188 <ar_member_touch@@Base+0x344>  // b.none
  40817c:	ldr	x0, [sp, #40]
  408180:	ldr	x0, [x0, #8]
  408184:	b	408194 <ar_member_touch@@Base+0x350>
  408188:	ldr	x0, [sp, #40]
  40818c:	ldr	x0, [x0, #16]
  408190:	ldr	x0, [x0]
  408194:	ldr	x1, [sp, #32]
  408198:	ldr	x1, [x1, #8]
  40819c:	cmp	x1, #0x0
  4081a0:	b.eq	4081b0 <ar_member_touch@@Base+0x36c>  // b.none
  4081a4:	ldr	x1, [sp, #32]
  4081a8:	ldr	x1, [x1, #8]
  4081ac:	b	4081bc <ar_member_touch@@Base+0x378>
  4081b0:	ldr	x1, [sp, #32]
  4081b4:	ldr	x1, [x1, #16]
  4081b8:	ldr	x1, [x1]
  4081bc:	bl	406bc0 <strcmp@plt>
  4081c0:	ldp	x29, x30, [sp], #48
  4081c4:	ret

00000000004081c8 <set_file_variables@@Base>:
  4081c8:	stp	x29, x30, [sp, #-304]!
  4081cc:	mov	x29, sp
  4081d0:	str	x0, [x29, #24]
  4081d4:	ldr	x0, [x29, #24]
  4081d8:	ldr	x0, [x0]
  4081dc:	bl	407068 <ar_name@@Base>
  4081e0:	cmp	w0, #0x0
  4081e4:	b.eq	4082f8 <set_file_variables@@Base+0x130>  // b.none
  4081e8:	ldr	x0, [x29, #24]
  4081ec:	ldr	x0, [x0]
  4081f0:	mov	w1, #0x28                  	// #40
  4081f4:	bl	406c20 <strchr@plt>
  4081f8:	str	x0, [x29, #176]
  4081fc:	ldr	x0, [x29, #24]
  408200:	ldr	x0, [x0]
  408204:	ldr	x1, [x29, #176]
  408208:	sub	x0, x1, x0
  40820c:	add	x0, x0, #0x1
  408210:	add	x0, x0, #0xf
  408214:	lsr	x0, x0, #4
  408218:	lsl	x0, x0, #4
  40821c:	sub	sp, sp, x0
  408220:	mov	x0, sp
  408224:	add	x0, x0, #0xf
  408228:	lsr	x0, x0, #4
  40822c:	lsl	x0, x0, #4
  408230:	str	x0, [x29, #168]
  408234:	ldr	x0, [x29, #24]
  408238:	ldr	x3, [x0]
  40823c:	ldr	x0, [x29, #24]
  408240:	ldr	x0, [x0]
  408244:	ldr	x1, [x29, #176]
  408248:	sub	x0, x1, x0
  40824c:	mov	x2, x0
  408250:	mov	x1, x3
  408254:	ldr	x0, [x29, #168]
  408258:	bl	4066b0 <memcpy@plt>
  40825c:	ldr	x0, [x29, #24]
  408260:	ldr	x0, [x0]
  408264:	ldr	x1, [x29, #176]
  408268:	sub	x0, x1, x0
  40826c:	mov	x1, x0
  408270:	ldr	x0, [x29, #168]
  408274:	add	x0, x0, x1
  408278:	strb	wzr, [x0]
  40827c:	ldr	x0, [x29, #168]
  408280:	str	x0, [x29, #288]
  408284:	ldr	x0, [x29, #176]
  408288:	add	x0, x0, #0x1
  40828c:	bl	4066f0 <strlen@plt>
  408290:	str	x0, [x29, #160]
  408294:	ldr	x0, [x29, #160]
  408298:	add	x0, x0, #0xf
  40829c:	lsr	x0, x0, #4
  4082a0:	lsl	x0, x0, #4
  4082a4:	sub	sp, sp, x0
  4082a8:	mov	x0, sp
  4082ac:	add	x0, x0, #0xf
  4082b0:	lsr	x0, x0, #4
  4082b4:	lsl	x0, x0, #4
  4082b8:	str	x0, [x29, #168]
  4082bc:	ldr	x0, [x29, #176]
  4082c0:	add	x1, x0, #0x1
  4082c4:	ldr	x0, [x29, #160]
  4082c8:	sub	x0, x0, #0x1
  4082cc:	mov	x2, x0
  4082d0:	ldr	x0, [x29, #168]
  4082d4:	bl	4066b0 <memcpy@plt>
  4082d8:	ldr	x0, [x29, #160]
  4082dc:	sub	x0, x0, #0x1
  4082e0:	ldr	x1, [x29, #168]
  4082e4:	add	x0, x1, x0
  4082e8:	strb	wzr, [x0]
  4082ec:	ldr	x0, [x29, #168]
  4082f0:	str	x0, [x29, #280]
  4082f4:	b	408310 <set_file_variables@@Base+0x148>
  4082f8:	ldr	x0, [x29, #24]
  4082fc:	ldr	x0, [x0]
  408300:	str	x0, [x29, #288]
  408304:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  408308:	add	x0, x0, #0xd08
  40830c:	str	x0, [x29, #280]
  408310:	ldr	x0, [x29, #24]
  408314:	ldr	x0, [x0, #40]
  408318:	cmp	x0, #0x0
  40831c:	b.ne	40847c <set_file_variables@@Base+0x2b4>  // b.any
  408320:	ldr	x0, [x29, #24]
  408324:	ldr	x0, [x0]
  408328:	bl	407068 <ar_name@@Base>
  40832c:	cmp	w0, #0x0
  408330:	b.eq	408360 <set_file_variables@@Base+0x198>  // b.none
  408334:	ldr	x0, [x29, #24]
  408338:	ldr	x0, [x0]
  40833c:	mov	w1, #0x28                  	// #40
  408340:	bl	406c20 <strchr@plt>
  408344:	add	x0, x0, #0x1
  408348:	str	x0, [x29, #264]
  40834c:	ldr	x0, [x29, #264]
  408350:	bl	4066f0 <strlen@plt>
  408354:	sub	x0, x0, #0x1
  408358:	str	x0, [x29, #256]
  40835c:	b	408378 <set_file_variables@@Base+0x1b0>
  408360:	ldr	x0, [x29, #24]
  408364:	ldr	x0, [x0]
  408368:	str	x0, [x29, #264]
  40836c:	ldr	x0, [x29, #264]
  408370:	bl	4066f0 <strlen@plt>
  408374:	str	x0, [x29, #256]
  408378:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40837c:	add	x0, x0, #0xd10
  408380:	bl	430d78 <strcache_add@@Base>
  408384:	bl	40c678 <enter_file@@Base>
  408388:	ldr	x0, [x0, #24]
  40838c:	str	x0, [x29, #296]
  408390:	b	408454 <set_file_variables@@Base+0x28c>
  408394:	ldr	x0, [x29, #296]
  408398:	ldr	x0, [x0, #8]
  40839c:	cmp	x0, #0x0
  4083a0:	b.eq	4083b0 <set_file_variables@@Base+0x1e8>  // b.none
  4083a4:	ldr	x0, [x29, #296]
  4083a8:	ldr	x0, [x0, #8]
  4083ac:	b	4083bc <set_file_variables@@Base+0x1f4>
  4083b0:	ldr	x0, [x29, #296]
  4083b4:	ldr	x0, [x0, #16]
  4083b8:	ldr	x0, [x0]
  4083bc:	bl	4066f0 <strlen@plt>
  4083c0:	str	x0, [x29, #152]
  4083c4:	ldr	x1, [x29, #256]
  4083c8:	ldr	x0, [x29, #152]
  4083cc:	cmp	x1, x0
  4083d0:	b.ls	408448 <set_file_variables@@Base+0x280>  // b.plast
  4083d4:	ldr	x0, [x29, #296]
  4083d8:	ldr	x0, [x0, #8]
  4083dc:	cmp	x0, #0x0
  4083e0:	b.eq	4083f0 <set_file_variables@@Base+0x228>  // b.none
  4083e4:	ldr	x0, [x29, #296]
  4083e8:	ldr	x0, [x0, #8]
  4083ec:	b	4083fc <set_file_variables@@Base+0x234>
  4083f0:	ldr	x0, [x29, #296]
  4083f4:	ldr	x0, [x0, #16]
  4083f8:	ldr	x0, [x0]
  4083fc:	ldr	x2, [x29, #256]
  408400:	ldr	x1, [x29, #152]
  408404:	sub	x1, x2, x1
  408408:	ldr	x2, [x29, #264]
  40840c:	add	x1, x2, x1
  408410:	ldr	x2, [x29, #152]
  408414:	bl	406990 <strncmp@plt>
  408418:	cmp	w0, #0x0
  40841c:	b.ne	408448 <set_file_variables@@Base+0x280>  // b.any
  408420:	ldr	x1, [x29, #256]
  408424:	ldr	x0, [x29, #152]
  408428:	sub	x0, x1, x0
  40842c:	mov	x1, x0
  408430:	ldr	x0, [x29, #264]
  408434:	bl	430da0 <strcache_add_len@@Base>
  408438:	mov	x1, x0
  40843c:	ldr	x0, [x29, #24]
  408440:	str	x1, [x0, #40]
  408444:	b	408460 <set_file_variables@@Base+0x298>
  408448:	ldr	x0, [x29, #296]
  40844c:	ldr	x0, [x0]
  408450:	str	x0, [x29, #296]
  408454:	ldr	x0, [x29, #296]
  408458:	cmp	x0, #0x0
  40845c:	b.ne	408394 <set_file_variables@@Base+0x1cc>  // b.any
  408460:	ldr	x0, [x29, #296]
  408464:	cmp	x0, #0x0
  408468:	b.ne	40847c <set_file_variables@@Base+0x2b4>  // b.any
  40846c:	ldr	x0, [x29, #24]
  408470:	adrp	x1, 436000 <fd_noinherit@@Base+0x64>
  408474:	add	x1, x1, #0xd08
  408478:	str	x1, [x0, #40]
  40847c:	ldr	x0, [x29, #24]
  408480:	ldr	x0, [x0, #40]
  408484:	str	x0, [x29, #144]
  408488:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40848c:	add	x0, x0, #0xd08
  408490:	str	x0, [x29, #272]
  408494:	ldr	x0, [x29, #24]
  408498:	ldr	x0, [x0, #24]
  40849c:	str	x0, [x29, #296]
  4084a0:	b	408528 <set_file_variables@@Base+0x360>
  4084a4:	ldr	x0, [x29, #296]
  4084a8:	ldrb	w0, [x0, #33]
  4084ac:	and	w0, w0, #0x2
  4084b0:	and	w0, w0, #0xff
  4084b4:	cmp	w0, #0x0
  4084b8:	b.ne	40851c <set_file_variables@@Base+0x354>  // b.any
  4084bc:	ldr	x0, [x29, #296]
  4084c0:	ldrb	w0, [x0, #33]
  4084c4:	and	w0, w0, #0x10
  4084c8:	and	w0, w0, #0xff
  4084cc:	cmp	w0, #0x0
  4084d0:	b.ne	40851c <set_file_variables@@Base+0x354>  // b.any
  4084d4:	ldr	x0, [x29, #296]
  4084d8:	ldrb	w0, [x0, #33]
  4084dc:	and	w0, w0, #0x8
  4084e0:	and	w0, w0, #0xff
  4084e4:	cmp	w0, #0x0
  4084e8:	b.ne	408538 <set_file_variables@@Base+0x370>  // b.any
  4084ec:	ldr	x0, [x29, #296]
  4084f0:	ldr	x0, [x0, #8]
  4084f4:	cmp	x0, #0x0
  4084f8:	b.eq	408508 <set_file_variables@@Base+0x340>  // b.none
  4084fc:	ldr	x0, [x29, #296]
  408500:	ldr	x0, [x0, #8]
  408504:	b	408514 <set_file_variables@@Base+0x34c>
  408508:	ldr	x0, [x29, #296]
  40850c:	ldr	x0, [x0, #16]
  408510:	ldr	x0, [x0]
  408514:	str	x0, [x29, #272]
  408518:	b	408538 <set_file_variables@@Base+0x370>
  40851c:	ldr	x0, [x29, #296]
  408520:	ldr	x0, [x0]
  408524:	str	x0, [x29, #296]
  408528:	ldr	x0, [x29, #296]
  40852c:	cmp	x0, #0x0
  408530:	b.ne	4084a4 <set_file_variables@@Base+0x2dc>  // b.any
  408534:	b	40853c <set_file_variables@@Base+0x374>
  408538:	nop
  40853c:	ldr	x0, [x29, #24]
  408540:	ldr	x0, [x0, #32]
  408544:	cmp	x0, #0x0
  408548:	b.eq	408574 <set_file_variables@@Base+0x3ac>  // b.none
  40854c:	ldr	x0, [x29, #24]
  408550:	ldr	x1, [x0, #32]
  408554:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  408558:	add	x0, x0, #0xa78
  40855c:	ldr	x0, [x0]
  408560:	ldr	x0, [x0, #32]
  408564:	cmp	x1, x0
  408568:	b.ne	408574 <set_file_variables@@Base+0x3ac>  // b.any
  40856c:	ldr	x0, [x29, #288]
  408570:	str	x0, [x29, #272]
  408574:	ldr	x0, [x29, #24]
  408578:	ldr	x0, [x0, #80]
  40857c:	ldr	x0, [x0, #8]
  408580:	mov	x6, #0x0                   	// #0
  408584:	mov	x5, x0
  408588:	mov	w4, #0x0                   	// #0
  40858c:	mov	w3, #0x6                   	// #6
  408590:	ldr	x2, [x29, #272]
  408594:	mov	x1, #0x1                   	// #1
  408598:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40859c:	add	x0, x0, #0xd20
  4085a0:	bl	4316d8 <define_variable_in_set@@Base>
  4085a4:	ldr	x0, [x29, #24]
  4085a8:	ldr	x0, [x0, #80]
  4085ac:	ldr	x0, [x0, #8]
  4085b0:	mov	x6, #0x0                   	// #0
  4085b4:	mov	x5, x0
  4085b8:	mov	w4, #0x0                   	// #0
  4085bc:	mov	w3, #0x6                   	// #6
  4085c0:	ldr	x2, [x29, #144]
  4085c4:	mov	x1, #0x1                   	// #1
  4085c8:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4085cc:	add	x0, x0, #0xd28
  4085d0:	bl	4316d8 <define_variable_in_set@@Base>
  4085d4:	ldr	x0, [x29, #24]
  4085d8:	ldr	x0, [x0, #80]
  4085dc:	ldr	x0, [x0, #8]
  4085e0:	mov	x6, #0x0                   	// #0
  4085e4:	mov	x5, x0
  4085e8:	mov	w4, #0x0                   	// #0
  4085ec:	mov	w3, #0x6                   	// #6
  4085f0:	ldr	x2, [x29, #288]
  4085f4:	mov	x1, #0x1                   	// #1
  4085f8:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4085fc:	add	x0, x0, #0xd30
  408600:	bl	4316d8 <define_variable_in_set@@Base>
  408604:	ldr	x0, [x29, #24]
  408608:	ldr	x0, [x0, #80]
  40860c:	ldr	x0, [x0, #8]
  408610:	mov	x6, #0x0                   	// #0
  408614:	mov	x5, x0
  408618:	mov	w4, #0x0                   	// #0
  40861c:	mov	w3, #0x6                   	// #6
  408620:	ldr	x2, [x29, #280]
  408624:	mov	x1, #0x1                   	// #1
  408628:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  40862c:	add	x0, x0, #0xd38
  408630:	bl	4316d8 <define_variable_in_set@@Base>
  408634:	str	xzr, [x29, #240]
  408638:	str	xzr, [x29, #232]
  40863c:	ldr	x0, [x29, #24]
  408640:	ldr	x0, [x0, #24]
  408644:	str	x0, [x29, #296]
  408648:	b	408724 <set_file_variables@@Base+0x55c>
  40864c:	ldr	x0, [x29, #296]
  408650:	ldrb	w0, [x0, #33]
  408654:	and	w0, w0, #0x8
  408658:	and	w0, w0, #0xff
  40865c:	cmp	w0, #0x0
  408660:	b.ne	408718 <set_file_variables@@Base+0x550>  // b.any
  408664:	ldr	x0, [x29, #296]
  408668:	ldrb	w0, [x0, #33]
  40866c:	and	w0, w0, #0x10
  408670:	and	w0, w0, #0xff
  408674:	cmp	w0, #0x0
  408678:	b.ne	408718 <set_file_variables@@Base+0x550>  // b.any
  40867c:	ldr	x0, [x29, #296]
  408680:	ldrb	w0, [x0, #33]
  408684:	and	w0, w0, #0x2
  408688:	and	w0, w0, #0xff
  40868c:	cmp	w0, #0x0
  408690:	b.eq	4086d8 <set_file_variables@@Base+0x510>  // b.none
  408694:	ldr	x0, [x29, #296]
  408698:	ldr	x0, [x0, #8]
  40869c:	cmp	x0, #0x0
  4086a0:	b.eq	4086b0 <set_file_variables@@Base+0x4e8>  // b.none
  4086a4:	ldr	x0, [x29, #296]
  4086a8:	ldr	x0, [x0, #8]
  4086ac:	b	4086bc <set_file_variables@@Base+0x4f4>
  4086b0:	ldr	x0, [x29, #296]
  4086b4:	ldr	x0, [x0, #16]
  4086b8:	ldr	x0, [x0]
  4086bc:	bl	4066f0 <strlen@plt>
  4086c0:	mov	x1, x0
  4086c4:	ldr	x0, [x29, #232]
  4086c8:	add	x0, x1, x0
  4086cc:	add	x0, x0, #0x1
  4086d0:	str	x0, [x29, #232]
  4086d4:	b	408718 <set_file_variables@@Base+0x550>
  4086d8:	ldr	x0, [x29, #296]
  4086dc:	ldr	x0, [x0, #8]
  4086e0:	cmp	x0, #0x0
  4086e4:	b.eq	4086f4 <set_file_variables@@Base+0x52c>  // b.none
  4086e8:	ldr	x0, [x29, #296]
  4086ec:	ldr	x0, [x0, #8]
  4086f0:	b	408700 <set_file_variables@@Base+0x538>
  4086f4:	ldr	x0, [x29, #296]
  4086f8:	ldr	x0, [x0, #16]
  4086fc:	ldr	x0, [x0]
  408700:	bl	4066f0 <strlen@plt>
  408704:	mov	x1, x0
  408708:	ldr	x0, [x29, #240]
  40870c:	add	x0, x1, x0
  408710:	add	x0, x0, #0x1
  408714:	str	x0, [x29, #240]
  408718:	ldr	x0, [x29, #296]
  40871c:	ldr	x0, [x0]
  408720:	str	x0, [x29, #296]
  408724:	ldr	x0, [x29, #296]
  408728:	cmp	x0, #0x0
  40872c:	b.ne	40864c <set_file_variables@@Base+0x484>  // b.any
  408730:	ldr	x0, [x29, #232]
  408734:	cmp	x0, #0x0
  408738:	b.ne	408748 <set_file_variables@@Base+0x580>  // b.any
  40873c:	ldr	x0, [x29, #232]
  408740:	add	x0, x0, #0x1
  408744:	str	x0, [x29, #232]
  408748:	ldr	x0, [x29, #240]
  40874c:	cmp	x0, #0x0
  408750:	b.ne	408760 <set_file_variables@@Base+0x598>  // b.any
  408754:	ldr	x0, [x29, #240]
  408758:	add	x0, x0, #0x1
  40875c:	str	x0, [x29, #240]
  408760:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408764:	add	x0, x0, #0x428
  408768:	ldr	x0, [x0]
  40876c:	ldr	x1, [x29, #240]
  408770:	cmp	x1, x0
  408774:	b.ls	4087bc <set_file_variables@@Base+0x5f4>  // b.plast
  408778:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40877c:	add	x0, x0, #0x430
  408780:	ldr	x2, [x0]
  408784:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408788:	add	x0, x0, #0x428
  40878c:	ldr	x1, [x29, #240]
  408790:	str	x1, [x0]
  408794:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408798:	add	x0, x0, #0x428
  40879c:	ldr	x0, [x0]
  4087a0:	mov	x1, x0
  4087a4:	mov	x0, x2
  4087a8:	bl	422720 <xrealloc@@Base>
  4087ac:	mov	x1, x0
  4087b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4087b4:	add	x0, x0, #0x430
  4087b8:	str	x1, [x0]
  4087bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4087c0:	add	x0, x0, #0x430
  4087c4:	ldr	x0, [x0]
  4087c8:	str	x0, [x29, #224]
  4087cc:	ldr	x0, [x29, #240]
  4087d0:	add	x0, x0, #0x1
  4087d4:	str	x0, [x29, #248]
  4087d8:	ldr	x0, [x29, #24]
  4087dc:	ldr	x0, [x0, #24]
  4087e0:	str	x0, [x29, #296]
  4087e4:	b	408920 <set_file_variables@@Base+0x758>
  4087e8:	ldr	x0, [x29, #296]
  4087ec:	ldrb	w0, [x0, #33]
  4087f0:	and	w0, w0, #0x2
  4087f4:	and	w0, w0, #0xff
  4087f8:	cmp	w0, #0x0
  4087fc:	b.ne	408914 <set_file_variables@@Base+0x74c>  // b.any
  408800:	ldr	x0, [x29, #296]
  408804:	ldrb	w0, [x0, #33]
  408808:	and	w0, w0, #0x8
  40880c:	and	w0, w0, #0xff
  408810:	cmp	w0, #0x0
  408814:	b.ne	408914 <set_file_variables@@Base+0x74c>  // b.any
  408818:	ldr	x0, [x29, #296]
  40881c:	ldrb	w0, [x0, #33]
  408820:	and	w0, w0, #0x10
  408824:	and	w0, w0, #0xff
  408828:	cmp	w0, #0x0
  40882c:	b.ne	408914 <set_file_variables@@Base+0x74c>  // b.any
  408830:	ldr	x0, [x29, #296]
  408834:	ldr	x0, [x0, #8]
  408838:	cmp	x0, #0x0
  40883c:	b.eq	40884c <set_file_variables@@Base+0x684>  // b.none
  408840:	ldr	x0, [x29, #296]
  408844:	ldr	x0, [x0, #8]
  408848:	b	408858 <set_file_variables@@Base+0x690>
  40884c:	ldr	x0, [x29, #296]
  408850:	ldr	x0, [x0, #16]
  408854:	ldr	x0, [x0]
  408858:	str	x0, [x29, #192]
  40885c:	ldr	x0, [x29, #192]
  408860:	bl	407068 <ar_name@@Base>
  408864:	cmp	w0, #0x0
  408868:	b.eq	408894 <set_file_variables@@Base+0x6cc>  // b.none
  40886c:	mov	w1, #0x28                  	// #40
  408870:	ldr	x0, [x29, #192]
  408874:	bl	406c20 <strchr@plt>
  408878:	add	x0, x0, #0x1
  40887c:	str	x0, [x29, #192]
  408880:	ldr	x0, [x29, #192]
  408884:	bl	4066f0 <strlen@plt>
  408888:	sub	x0, x0, #0x1
  40888c:	str	x0, [x29, #200]
  408890:	b	4088a0 <set_file_variables@@Base+0x6d8>
  408894:	ldr	x0, [x29, #192]
  408898:	bl	4066f0 <strlen@plt>
  40889c:	str	x0, [x29, #200]
  4088a0:	ldr	x2, [x29, #200]
  4088a4:	ldr	x1, [x29, #192]
  4088a8:	ldr	x0, [x29, #224]
  4088ac:	bl	4066b0 <memcpy@plt>
  4088b0:	ldr	x1, [x29, #224]
  4088b4:	ldr	x0, [x29, #200]
  4088b8:	add	x0, x1, x0
  4088bc:	str	x0, [x29, #224]
  4088c0:	ldr	x0, [x29, #224]
  4088c4:	add	x1, x0, #0x1
  4088c8:	str	x1, [x29, #224]
  4088cc:	mov	w1, #0x20                  	// #32
  4088d0:	strb	w1, [x0]
  4088d4:	ldr	x0, [x29, #296]
  4088d8:	ldrb	w0, [x0, #33]
  4088dc:	and	w0, w0, #0x1
  4088e0:	and	w0, w0, #0xff
  4088e4:	cmp	w0, #0x0
  4088e8:	b.ne	408914 <set_file_variables@@Base+0x74c>  // b.any
  4088ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4088f0:	add	x0, x0, #0x718
  4088f4:	ldr	w0, [x0]
  4088f8:	cmp	w0, #0x0
  4088fc:	b.ne	408914 <set_file_variables@@Base+0x74c>  // b.any
  408900:	ldr	x1, [x29, #248]
  408904:	ldr	x0, [x29, #200]
  408908:	sub	x0, x1, x0
  40890c:	sub	x0, x0, #0x1
  408910:	str	x0, [x29, #248]
  408914:	ldr	x0, [x29, #296]
  408918:	ldr	x0, [x0]
  40891c:	str	x0, [x29, #296]
  408920:	ldr	x0, [x29, #296]
  408924:	cmp	x0, #0x0
  408928:	b.ne	4087e8 <set_file_variables@@Base+0x620>  // b.any
  40892c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408930:	add	x0, x0, #0x430
  408934:	ldr	x0, [x0]
  408938:	ldr	x1, [x29, #224]
  40893c:	cmp	x1, x0
  408940:	b.ls	40894c <set_file_variables@@Base+0x784>  // b.plast
  408944:	mov	x0, #0xffffffffffffffff    	// #-1
  408948:	b	408950 <set_file_variables@@Base+0x788>
  40894c:	mov	x0, #0x0                   	// #0
  408950:	ldr	x1, [x29, #224]
  408954:	add	x0, x1, x0
  408958:	strb	wzr, [x0]
  40895c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408960:	add	x0, x0, #0x430
  408964:	ldr	x1, [x0]
  408968:	ldr	x0, [x29, #24]
  40896c:	ldr	x0, [x0, #80]
  408970:	ldr	x0, [x0, #8]
  408974:	mov	x6, #0x0                   	// #0
  408978:	mov	x5, x0
  40897c:	mov	w4, #0x0                   	// #0
  408980:	mov	w3, #0x6                   	// #6
  408984:	mov	x2, x1
  408988:	mov	x1, #0x1                   	// #1
  40898c:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  408990:	add	x0, x0, #0xd40
  408994:	bl	4316d8 <define_variable_in_set@@Base>
  408998:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40899c:	add	x0, x0, #0x430
  4089a0:	ldr	x0, [x0]
  4089a4:	str	x0, [x29, #136]
  4089a8:	ldr	x0, [x29, #136]
  4089ac:	str	x0, [x29, #224]
  4089b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4089b4:	add	x0, x0, #0x438
  4089b8:	ldr	x0, [x0]
  4089bc:	ldr	x1, [x29, #248]
  4089c0:	cmp	x1, x0
  4089c4:	b.ls	408a0c <set_file_variables@@Base+0x844>  // b.plast
  4089c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4089cc:	add	x0, x0, #0x440
  4089d0:	ldr	x2, [x0]
  4089d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4089d8:	add	x0, x0, #0x438
  4089dc:	ldr	x1, [x29, #248]
  4089e0:	str	x1, [x0]
  4089e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4089e8:	add	x0, x0, #0x438
  4089ec:	ldr	x0, [x0]
  4089f0:	mov	x1, x0
  4089f4:	mov	x0, x2
  4089f8:	bl	422720 <xrealloc@@Base>
  4089fc:	mov	x1, x0
  408a00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a04:	add	x0, x0, #0x440
  408a08:	str	x1, [x0]
  408a0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a10:	add	x0, x0, #0x440
  408a14:	ldr	x0, [x0]
  408a18:	str	x0, [x29, #216]
  408a1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a20:	add	x0, x0, #0x448
  408a24:	ldr	x0, [x0]
  408a28:	ldr	x1, [x29, #232]
  408a2c:	cmp	x1, x0
  408a30:	b.ls	408a78 <set_file_variables@@Base+0x8b0>  // b.plast
  408a34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a38:	add	x0, x0, #0x450
  408a3c:	ldr	x2, [x0]
  408a40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a44:	add	x0, x0, #0x448
  408a48:	ldr	x1, [x29, #232]
  408a4c:	str	x1, [x0]
  408a50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a54:	add	x0, x0, #0x448
  408a58:	ldr	x0, [x0]
  408a5c:	mov	x1, x0
  408a60:	mov	x0, x2
  408a64:	bl	422720 <xrealloc@@Base>
  408a68:	mov	x1, x0
  408a6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a70:	add	x0, x0, #0x450
  408a74:	str	x1, [x0]
  408a78:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408a7c:	add	x0, x0, #0x450
  408a80:	ldr	x0, [x0]
  408a84:	str	x0, [x29, #208]
  408a88:	add	x5, x29, #0x20
  408a8c:	adrp	x0, 408000 <ar_member_touch@@Base+0x1bc>
  408a90:	add	x4, x0, #0x14c
  408a94:	adrp	x0, 408000 <ar_member_touch@@Base+0x1bc>
  408a98:	add	x3, x0, #0x120
  408a9c:	adrp	x0, 408000 <ar_member_touch@@Base+0x1bc>
  408aa0:	add	x2, x0, #0xb8
  408aa4:	mov	x1, #0x1f4                 	// #500
  408aa8:	mov	x0, x5
  408aac:	bl	4140a8 <hash_init@@Base>
  408ab0:	ldr	x0, [x29, #24]
  408ab4:	ldr	x0, [x0, #24]
  408ab8:	str	x0, [x29, #296]
  408abc:	b	408bb8 <set_file_variables@@Base+0x9f0>
  408ac0:	ldr	x0, [x29, #296]
  408ac4:	ldrb	w0, [x0, #33]
  408ac8:	and	w0, w0, #0x8
  408acc:	and	w0, w0, #0xff
  408ad0:	cmp	w0, #0x0
  408ad4:	b.ne	408ba8 <set_file_variables@@Base+0x9e0>  // b.any
  408ad8:	ldr	x0, [x29, #296]
  408adc:	ldrb	w0, [x0, #33]
  408ae0:	and	w0, w0, #0x10
  408ae4:	and	w0, w0, #0xff
  408ae8:	cmp	w0, #0x0
  408aec:	b.ne	408ba8 <set_file_variables@@Base+0x9e0>  // b.any
  408af0:	add	x0, x29, #0x20
  408af4:	ldr	x1, [x29, #296]
  408af8:	bl	41422c <hash_find_slot@@Base>
  408afc:	str	x0, [x29, #128]
  408b00:	ldr	x0, [x29, #128]
  408b04:	ldr	x0, [x0]
  408b08:	cmp	x0, #0x0
  408b0c:	b.eq	408b2c <set_file_variables@@Base+0x964>  // b.none
  408b10:	ldr	x0, [x29, #128]
  408b14:	ldr	x1, [x0]
  408b18:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408b1c:	add	x0, x0, #0x40
  408b20:	ldr	x0, [x0]
  408b24:	cmp	x1, x0
  408b28:	b.ne	408b40 <set_file_variables@@Base+0x978>  // b.any
  408b2c:	add	x0, x29, #0x20
  408b30:	ldr	x2, [x29, #128]
  408b34:	ldr	x1, [x29, #296]
  408b38:	bl	414470 <hash_insert_at@@Base>
  408b3c:	b	408bac <set_file_variables@@Base+0x9e4>
  408b40:	ldr	x0, [x29, #128]
  408b44:	ldr	x0, [x0]
  408b48:	str	x0, [x29, #120]
  408b4c:	ldr	x0, [x29, #296]
  408b50:	ldrb	w0, [x0, #33]
  408b54:	ubfx	x0, x0, #1, #1
  408b58:	and	w1, w0, #0xff
  408b5c:	ldr	x0, [x29, #120]
  408b60:	ldrb	w0, [x0, #33]
  408b64:	ubfx	x0, x0, #1, #1
  408b68:	and	w0, w0, #0xff
  408b6c:	cmp	w1, w0
  408b70:	b.eq	408bac <set_file_variables@@Base+0x9e4>  // b.none
  408b74:	ldr	x0, [x29, #120]
  408b78:	ldrb	w1, [x0, #33]
  408b7c:	and	w1, w1, #0xfffffffd
  408b80:	strb	w1, [x0, #33]
  408b84:	ldr	x0, [x29, #120]
  408b88:	ldrb	w0, [x0, #33]
  408b8c:	ubfx	x0, x0, #1, #1
  408b90:	and	w2, w0, #0xff
  408b94:	ldr	x1, [x29, #296]
  408b98:	ldrb	w0, [x1, #33]
  408b9c:	bfi	w0, w2, #1, #1
  408ba0:	strb	w0, [x1, #33]
  408ba4:	b	408bac <set_file_variables@@Base+0x9e4>
  408ba8:	nop
  408bac:	ldr	x0, [x29, #296]
  408bb0:	ldr	x0, [x0]
  408bb4:	str	x0, [x29, #296]
  408bb8:	ldr	x0, [x29, #296]
  408bbc:	cmp	x0, #0x0
  408bc0:	b.ne	408ac0 <set_file_variables@@Base+0x8f8>  // b.any
  408bc4:	ldr	x0, [x29, #24]
  408bc8:	ldr	x0, [x0, #24]
  408bcc:	str	x0, [x29, #296]
  408bd0:	b	408d88 <set_file_variables@@Base+0xbc0>
  408bd4:	ldr	x0, [x29, #296]
  408bd8:	ldrb	w0, [x0, #33]
  408bdc:	and	w0, w0, #0x8
  408be0:	and	w0, w0, #0xff
  408be4:	cmp	w0, #0x0
  408be8:	b.ne	408d78 <set_file_variables@@Base+0xbb0>  // b.any
  408bec:	ldr	x0, [x29, #296]
  408bf0:	ldrb	w0, [x0, #33]
  408bf4:	and	w0, w0, #0x10
  408bf8:	and	w0, w0, #0xff
  408bfc:	cmp	w0, #0x0
  408c00:	b.ne	408d78 <set_file_variables@@Base+0xbb0>  // b.any
  408c04:	add	x0, x29, #0x20
  408c08:	ldr	x1, [x29, #296]
  408c0c:	bl	414398 <hash_find_item@@Base>
  408c10:	mov	x1, x0
  408c14:	ldr	x0, [x29, #296]
  408c18:	cmp	x0, x1
  408c1c:	b.ne	408d78 <set_file_variables@@Base+0xbb0>  // b.any
  408c20:	ldr	x0, [x29, #296]
  408c24:	ldr	x0, [x0, #8]
  408c28:	cmp	x0, #0x0
  408c2c:	b.eq	408c3c <set_file_variables@@Base+0xa74>  // b.none
  408c30:	ldr	x0, [x29, #296]
  408c34:	ldr	x0, [x0, #8]
  408c38:	b	408c48 <set_file_variables@@Base+0xa80>
  408c3c:	ldr	x0, [x29, #296]
  408c40:	ldr	x0, [x0, #16]
  408c44:	ldr	x0, [x0]
  408c48:	str	x0, [x29, #184]
  408c4c:	ldr	x0, [x29, #184]
  408c50:	bl	407068 <ar_name@@Base>
  408c54:	cmp	w0, #0x0
  408c58:	b.eq	408c84 <set_file_variables@@Base+0xabc>  // b.none
  408c5c:	mov	w1, #0x28                  	// #40
  408c60:	ldr	x0, [x29, #184]
  408c64:	bl	406c20 <strchr@plt>
  408c68:	add	x0, x0, #0x1
  408c6c:	str	x0, [x29, #184]
  408c70:	ldr	x0, [x29, #184]
  408c74:	bl	4066f0 <strlen@plt>
  408c78:	sub	x0, x0, #0x1
  408c7c:	str	x0, [x29, #200]
  408c80:	b	408c90 <set_file_variables@@Base+0xac8>
  408c84:	ldr	x0, [x29, #184]
  408c88:	bl	4066f0 <strlen@plt>
  408c8c:	str	x0, [x29, #200]
  408c90:	ldr	x0, [x29, #296]
  408c94:	ldrb	w0, [x0, #33]
  408c98:	and	w0, w0, #0x2
  408c9c:	and	w0, w0, #0xff
  408ca0:	cmp	w0, #0x0
  408ca4:	b.eq	408ce0 <set_file_variables@@Base+0xb18>  // b.none
  408ca8:	ldr	x2, [x29, #200]
  408cac:	ldr	x1, [x29, #184]
  408cb0:	ldr	x0, [x29, #208]
  408cb4:	bl	4066b0 <memcpy@plt>
  408cb8:	ldr	x1, [x29, #208]
  408cbc:	ldr	x0, [x29, #200]
  408cc0:	add	x0, x1, x0
  408cc4:	str	x0, [x29, #208]
  408cc8:	ldr	x0, [x29, #208]
  408ccc:	add	x1, x0, #0x1
  408cd0:	str	x1, [x29, #208]
  408cd4:	mov	w1, #0x20                  	// #32
  408cd8:	strb	w1, [x0]
  408cdc:	b	408d7c <set_file_variables@@Base+0xbb4>
  408ce0:	ldr	x2, [x29, #200]
  408ce4:	ldr	x1, [x29, #184]
  408ce8:	ldr	x0, [x29, #224]
  408cec:	bl	4066b0 <memcpy@plt>
  408cf0:	ldr	x1, [x29, #224]
  408cf4:	ldr	x0, [x29, #200]
  408cf8:	add	x0, x1, x0
  408cfc:	str	x0, [x29, #224]
  408d00:	ldr	x0, [x29, #224]
  408d04:	add	x1, x0, #0x1
  408d08:	str	x1, [x29, #224]
  408d0c:	mov	w1, #0x20                  	// #32
  408d10:	strb	w1, [x0]
  408d14:	ldr	x0, [x29, #296]
  408d18:	ldrb	w0, [x0, #33]
  408d1c:	and	w0, w0, #0x1
  408d20:	and	w0, w0, #0xff
  408d24:	cmp	w0, #0x0
  408d28:	b.ne	408d40 <set_file_variables@@Base+0xb78>  // b.any
  408d2c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408d30:	add	x0, x0, #0x718
  408d34:	ldr	w0, [x0]
  408d38:	cmp	w0, #0x0
  408d3c:	b.eq	408d7c <set_file_variables@@Base+0xbb4>  // b.none
  408d40:	ldr	x2, [x29, #200]
  408d44:	ldr	x1, [x29, #184]
  408d48:	ldr	x0, [x29, #216]
  408d4c:	bl	4066b0 <memcpy@plt>
  408d50:	ldr	x1, [x29, #216]
  408d54:	ldr	x0, [x29, #200]
  408d58:	add	x0, x1, x0
  408d5c:	str	x0, [x29, #216]
  408d60:	ldr	x0, [x29, #216]
  408d64:	add	x1, x0, #0x1
  408d68:	str	x1, [x29, #216]
  408d6c:	mov	w1, #0x20                  	// #32
  408d70:	strb	w1, [x0]
  408d74:	b	408d7c <set_file_variables@@Base+0xbb4>
  408d78:	nop
  408d7c:	ldr	x0, [x29, #296]
  408d80:	ldr	x0, [x0]
  408d84:	str	x0, [x29, #296]
  408d88:	ldr	x0, [x29, #296]
  408d8c:	cmp	x0, #0x0
  408d90:	b.ne	408bd4 <set_file_variables@@Base+0xa0c>  // b.any
  408d94:	add	x0, x29, #0x20
  408d98:	mov	w1, #0x0                   	// #0
  408d9c:	bl	414734 <hash_free@@Base>
  408da0:	ldr	x1, [x29, #224]
  408da4:	ldr	x0, [x29, #136]
  408da8:	cmp	x1, x0
  408dac:	b.ls	408db8 <set_file_variables@@Base+0xbf0>  // b.plast
  408db0:	mov	x0, #0xffffffffffffffff    	// #-1
  408db4:	b	408dbc <set_file_variables@@Base+0xbf4>
  408db8:	mov	x0, #0x0                   	// #0
  408dbc:	ldr	x1, [x29, #224]
  408dc0:	add	x0, x1, x0
  408dc4:	strb	wzr, [x0]
  408dc8:	ldr	x0, [x29, #24]
  408dcc:	ldr	x0, [x0, #80]
  408dd0:	ldr	x0, [x0, #8]
  408dd4:	mov	x6, #0x0                   	// #0
  408dd8:	mov	x5, x0
  408ddc:	mov	w4, #0x0                   	// #0
  408de0:	mov	w3, #0x6                   	// #6
  408de4:	ldr	x2, [x29, #136]
  408de8:	mov	x1, #0x1                   	// #1
  408dec:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  408df0:	add	x0, x0, #0xd48
  408df4:	bl	4316d8 <define_variable_in_set@@Base>
  408df8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408dfc:	add	x0, x0, #0x440
  408e00:	ldr	x0, [x0]
  408e04:	ldr	x1, [x29, #216]
  408e08:	cmp	x1, x0
  408e0c:	b.ls	408e18 <set_file_variables@@Base+0xc50>  // b.plast
  408e10:	mov	x0, #0xffffffffffffffff    	// #-1
  408e14:	b	408e1c <set_file_variables@@Base+0xc54>
  408e18:	mov	x0, #0x0                   	// #0
  408e1c:	ldr	x1, [x29, #216]
  408e20:	add	x0, x1, x0
  408e24:	strb	wzr, [x0]
  408e28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408e2c:	add	x0, x0, #0x440
  408e30:	ldr	x1, [x0]
  408e34:	ldr	x0, [x29, #24]
  408e38:	ldr	x0, [x0, #80]
  408e3c:	ldr	x0, [x0, #8]
  408e40:	mov	x6, #0x0                   	// #0
  408e44:	mov	x5, x0
  408e48:	mov	w4, #0x0                   	// #0
  408e4c:	mov	w3, #0x6                   	// #6
  408e50:	mov	x2, x1
  408e54:	mov	x1, #0x1                   	// #1
  408e58:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  408e5c:	add	x0, x0, #0xd50
  408e60:	bl	4316d8 <define_variable_in_set@@Base>
  408e64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408e68:	add	x0, x0, #0x450
  408e6c:	ldr	x0, [x0]
  408e70:	ldr	x1, [x29, #208]
  408e74:	cmp	x1, x0
  408e78:	b.ls	408e84 <set_file_variables@@Base+0xcbc>  // b.plast
  408e7c:	mov	x0, #0xffffffffffffffff    	// #-1
  408e80:	b	408e88 <set_file_variables@@Base+0xcc0>
  408e84:	mov	x0, #0x0                   	// #0
  408e88:	ldr	x1, [x29, #208]
  408e8c:	add	x0, x1, x0
  408e90:	strb	wzr, [x0]
  408e94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  408e98:	add	x0, x0, #0x450
  408e9c:	ldr	x1, [x0]
  408ea0:	ldr	x0, [x29, #24]
  408ea4:	ldr	x0, [x0, #80]
  408ea8:	ldr	x0, [x0, #8]
  408eac:	mov	x6, #0x0                   	// #0
  408eb0:	mov	x5, x0
  408eb4:	mov	w4, #0x0                   	// #0
  408eb8:	mov	w3, #0x6                   	// #6
  408ebc:	mov	x2, x1
  408ec0:	mov	x1, #0x1                   	// #1
  408ec4:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  408ec8:	add	x0, x0, #0xd58
  408ecc:	bl	4316d8 <define_variable_in_set@@Base>
  408ed0:	nop
  408ed4:	mov	sp, x29
  408ed8:	ldp	x29, x30, [sp], #304
  408edc:	ret

0000000000408ee0 <chop_commands@@Base>:
  408ee0:	stp	x29, x30, [sp, #-128]!
  408ee4:	mov	x29, sp
  408ee8:	str	x19, [sp, #16]
  408eec:	str	x0, [sp, #40]
  408ef0:	ldr	x0, [sp, #40]
  408ef4:	cmp	x0, #0x0
  408ef8:	b.eq	40939c <chop_commands@@Base+0x4bc>  // b.none
  408efc:	ldr	x0, [sp, #40]
  408f00:	ldr	x0, [x0, #32]
  408f04:	cmp	x0, #0x0
  408f08:	b.ne	40939c <chop_commands@@Base+0x4bc>  // b.any
  408f0c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  408f10:	add	x0, x0, #0xa8c
  408f14:	ldr	w0, [x0]
  408f18:	cmp	w0, #0x0
  408f1c:	b.eq	408fa8 <chop_commands@@Base+0xc8>  // b.none
  408f20:	ldr	x0, [sp, #40]
  408f24:	ldr	x0, [x0, #24]
  408f28:	bl	4066f0 <strlen@plt>
  408f2c:	str	x0, [sp, #56]
  408f30:	mov	w0, #0x1                   	// #1
  408f34:	str	w0, [sp, #124]
  408f38:	ldr	w0, [sp, #124]
  408f3c:	lsl	x0, x0, #3
  408f40:	bl	42268c <xmalloc@@Base>
  408f44:	str	x0, [sp, #112]
  408f48:	ldr	x0, [sp, #40]
  408f4c:	ldr	x0, [x0, #24]
  408f50:	bl	422788 <xstrdup@@Base>
  408f54:	mov	x1, x0
  408f58:	ldr	x0, [sp, #112]
  408f5c:	str	x1, [x0]
  408f60:	ldr	x0, [sp, #56]
  408f64:	cmp	x0, #0x0
  408f68:	b.eq	409180 <chop_commands@@Base+0x2a0>  // b.none
  408f6c:	ldr	x0, [sp, #112]
  408f70:	ldr	x1, [x0]
  408f74:	ldr	x0, [sp, #56]
  408f78:	sub	x0, x0, #0x1
  408f7c:	add	x0, x1, x0
  408f80:	ldrb	w0, [x0]
  408f84:	cmp	w0, #0xa
  408f88:	b.ne	409180 <chop_commands@@Base+0x2a0>  // b.any
  408f8c:	ldr	x0, [sp, #112]
  408f90:	ldr	x1, [x0]
  408f94:	ldr	x0, [sp, #56]
  408f98:	sub	x0, x0, #0x1
  408f9c:	add	x0, x1, x0
  408fa0:	strb	wzr, [x0]
  408fa4:	b	409180 <chop_commands@@Base+0x2a0>
  408fa8:	mov	w0, #0x5                   	// #5
  408fac:	str	w0, [sp, #124]
  408fb0:	ldr	w0, [sp, #124]
  408fb4:	lsl	x0, x0, #3
  408fb8:	bl	42268c <xmalloc@@Base>
  408fbc:	str	x0, [sp, #112]
  408fc0:	strh	wzr, [sp, #122]
  408fc4:	ldr	x0, [sp, #40]
  408fc8:	ldr	x0, [x0, #24]
  408fcc:	str	x0, [sp, #104]
  408fd0:	b	409140 <chop_commands@@Base+0x260>
  408fd4:	ldr	x0, [sp, #104]
  408fd8:	str	x0, [sp, #96]
  408fdc:	mov	w1, #0xa                   	// #10
  408fe0:	ldr	x0, [sp, #96]
  408fe4:	bl	406c20 <strchr@plt>
  408fe8:	str	x0, [sp, #96]
  408fec:	ldr	x0, [sp, #96]
  408ff0:	cmp	x0, #0x0
  408ff4:	b.ne	409014 <chop_commands@@Base+0x134>  // b.any
  408ff8:	ldr	x0, [sp, #104]
  408ffc:	bl	4066f0 <strlen@plt>
  409000:	mov	x1, x0
  409004:	ldr	x0, [sp, #104]
  409008:	add	x0, x0, x1
  40900c:	str	x0, [sp, #96]
  409010:	b	4090ac <chop_commands@@Base+0x1cc>
  409014:	ldr	x1, [sp, #96]
  409018:	ldr	x0, [sp, #104]
  40901c:	cmp	x1, x0
  409020:	b.ls	4090ac <chop_commands@@Base+0x1cc>  // b.plast
  409024:	ldr	x0, [sp, #96]
  409028:	sub	x0, x0, #0x1
  40902c:	ldrb	w0, [x0]
  409030:	cmp	w0, #0x5c
  409034:	b.ne	4090ac <chop_commands@@Base+0x1cc>  // b.any
  409038:	mov	w0, #0x1                   	// #1
  40903c:	str	w0, [sp, #92]
  409040:	ldr	x0, [sp, #96]
  409044:	sub	x0, x0, #0x2
  409048:	str	x0, [sp, #80]
  40904c:	b	409070 <chop_commands@@Base+0x190>
  409050:	ldr	w0, [sp, #92]
  409054:	cmp	w0, #0x0
  409058:	cset	w0, eq  // eq = none
  40905c:	and	w0, w0, #0xff
  409060:	str	w0, [sp, #92]
  409064:	ldr	x0, [sp, #80]
  409068:	sub	x0, x0, #0x1
  40906c:	str	x0, [sp, #80]
  409070:	ldr	x1, [sp, #80]
  409074:	ldr	x0, [sp, #104]
  409078:	cmp	x1, x0
  40907c:	b.cc	409090 <chop_commands@@Base+0x1b0>  // b.lo, b.ul, b.last
  409080:	ldr	x0, [sp, #80]
  409084:	ldrb	w0, [x0]
  409088:	cmp	w0, #0x5c
  40908c:	b.eq	409050 <chop_commands@@Base+0x170>  // b.none
  409090:	ldr	w0, [sp, #92]
  409094:	cmp	w0, #0x0
  409098:	b.eq	4090ac <chop_commands@@Base+0x1cc>  // b.none
  40909c:	ldr	x0, [sp, #96]
  4090a0:	add	x0, x0, #0x1
  4090a4:	str	x0, [sp, #96]
  4090a8:	b	408fdc <chop_commands@@Base+0xfc>
  4090ac:	ldrh	w0, [sp, #122]
  4090b0:	ldr	w1, [sp, #124]
  4090b4:	cmp	w1, w0
  4090b8:	b.ne	4090e0 <chop_commands@@Base+0x200>  // b.any
  4090bc:	ldr	w0, [sp, #124]
  4090c0:	add	w0, w0, #0x2
  4090c4:	str	w0, [sp, #124]
  4090c8:	ldr	w0, [sp, #124]
  4090cc:	lsl	x0, x0, #3
  4090d0:	mov	x1, x0
  4090d4:	ldr	x0, [sp, #112]
  4090d8:	bl	422720 <xrealloc@@Base>
  4090dc:	str	x0, [sp, #112]
  4090e0:	ldr	x1, [sp, #96]
  4090e4:	ldr	x0, [sp, #104]
  4090e8:	sub	x0, x1, x0
  4090ec:	mov	x2, x0
  4090f0:	ldrh	w0, [sp, #122]
  4090f4:	add	w1, w0, #0x1
  4090f8:	strh	w1, [sp, #122]
  4090fc:	and	x0, x0, #0xffff
  409100:	lsl	x0, x0, #3
  409104:	ldr	x1, [sp, #112]
  409108:	add	x19, x1, x0
  40910c:	mov	x1, x2
  409110:	ldr	x0, [sp, #104]
  409114:	bl	4227bc <xstrndup@@Base>
  409118:	str	x0, [x19]
  40911c:	ldr	x0, [sp, #96]
  409120:	str	x0, [sp, #104]
  409124:	ldr	x0, [sp, #104]
  409128:	ldrb	w0, [x0]
  40912c:	cmp	w0, #0x0
  409130:	b.eq	409140 <chop_commands@@Base+0x260>  // b.none
  409134:	ldr	x0, [sp, #104]
  409138:	add	x0, x0, #0x1
  40913c:	str	x0, [sp, #104]
  409140:	ldr	x0, [sp, #104]
  409144:	ldrb	w0, [x0]
  409148:	cmp	w0, #0x0
  40914c:	b.ne	408fd4 <chop_commands@@Base+0xf4>  // b.any
  409150:	ldrh	w0, [sp, #122]
  409154:	ldr	w1, [sp, #124]
  409158:	cmp	w1, w0
  40915c:	b.eq	409180 <chop_commands@@Base+0x2a0>  // b.none
  409160:	ldrh	w0, [sp, #122]
  409164:	str	w0, [sp, #124]
  409168:	ldr	w0, [sp, #124]
  40916c:	lsl	x0, x0, #3
  409170:	mov	x1, x0
  409174:	ldr	x0, [sp, #112]
  409178:	bl	422720 <xrealloc@@Base>
  40917c:	str	x0, [sp, #112]
  409180:	ldr	w1, [sp, #124]
  409184:	mov	w0, #0xffff                	// #65535
  409188:	cmp	w1, w0
  40918c:	b.ls	4091b4 <chop_commands@@Base+0x2d4>  // b.plast
  409190:	ldr	x19, [sp, #40]
  409194:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409198:	add	x0, x0, #0xd60
  40919c:	bl	406e40 <gettext@plt>
  4091a0:	ldr	w3, [sp, #124]
  4091a4:	mov	x2, x0
  4091a8:	mov	x1, #0x14                  	// #20
  4091ac:	mov	x0, x19
  4091b0:	bl	424098 <fatal@@Base>
  4091b4:	ldr	w0, [sp, #124]
  4091b8:	and	w1, w0, #0xffff
  4091bc:	ldr	x0, [sp, #40]
  4091c0:	strh	w1, [x0, #48]
  4091c4:	ldr	x0, [sp, #40]
  4091c8:	ldr	x1, [sp, #112]
  4091cc:	str	x1, [x0, #32]
  4091d0:	ldr	x0, [sp, #40]
  4091d4:	ldrb	w1, [x0, #51]
  4091d8:	and	w1, w1, #0xfffffffe
  4091dc:	strb	w1, [x0, #51]
  4091e0:	ldr	w0, [sp, #124]
  4091e4:	bl	42268c <xmalloc@@Base>
  4091e8:	mov	x1, x0
  4091ec:	ldr	x0, [sp, #40]
  4091f0:	str	x1, [x0, #40]
  4091f4:	strh	wzr, [sp, #122]
  4091f8:	b	409388 <chop_commands@@Base+0x4a8>
  4091fc:	strb	wzr, [sp, #79]
  409200:	ldrh	w0, [sp, #122]
  409204:	lsl	x0, x0, #3
  409208:	ldr	x1, [sp, #112]
  40920c:	add	x0, x1, x0
  409210:	ldr	x0, [x0]
  409214:	str	x0, [sp, #64]
  409218:	b	409280 <chop_commands@@Base+0x3a0>
  40921c:	ldr	x0, [sp, #64]
  409220:	add	x1, x0, #0x1
  409224:	str	x1, [sp, #64]
  409228:	ldrb	w0, [x0]
  40922c:	cmp	w0, #0x40
  409230:	b.eq	409260 <chop_commands@@Base+0x380>  // b.none
  409234:	cmp	w0, #0x40
  409238:	b.gt	409280 <chop_commands@@Base+0x3a0>
  40923c:	cmp	w0, #0x2b
  409240:	b.eq	409250 <chop_commands@@Base+0x370>  // b.none
  409244:	cmp	w0, #0x2d
  409248:	b.eq	409270 <chop_commands@@Base+0x390>  // b.none
  40924c:	b	409280 <chop_commands@@Base+0x3a0>
  409250:	ldrb	w0, [sp, #79]
  409254:	orr	w0, w0, #0x1
  409258:	strb	w0, [sp, #79]
  40925c:	b	409280 <chop_commands@@Base+0x3a0>
  409260:	ldrb	w0, [sp, #79]
  409264:	orr	w0, w0, #0x2
  409268:	strb	w0, [sp, #79]
  40926c:	b	409280 <chop_commands@@Base+0x3a0>
  409270:	ldrb	w0, [sp, #79]
  409274:	orr	w0, w0, #0x4
  409278:	strb	w0, [sp, #79]
  40927c:	nop
  409280:	ldr	x0, [sp, #64]
  409284:	ldrb	w0, [x0]
  409288:	mov	w1, w0
  40928c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409290:	add	x0, x0, #0x728
  409294:	sxtw	x1, w1
  409298:	ldrh	w0, [x0, x1, lsl #1]
  40929c:	and	w0, w0, #0x2
  4092a0:	cmp	w0, #0x0
  4092a4:	b.ne	40921c <chop_commands@@Base+0x33c>  // b.any
  4092a8:	ldr	x0, [sp, #64]
  4092ac:	ldrb	w0, [x0]
  4092b0:	cmp	w0, #0x2d
  4092b4:	b.eq	40921c <chop_commands@@Base+0x33c>  // b.none
  4092b8:	ldr	x0, [sp, #64]
  4092bc:	ldrb	w0, [x0]
  4092c0:	cmp	w0, #0x40
  4092c4:	b.eq	40921c <chop_commands@@Base+0x33c>  // b.none
  4092c8:	ldr	x0, [sp, #64]
  4092cc:	ldrb	w0, [x0]
  4092d0:	cmp	w0, #0x2b
  4092d4:	b.eq	40921c <chop_commands@@Base+0x33c>  // b.none
  4092d8:	ldrb	w0, [sp, #79]
  4092dc:	and	w0, w0, #0x1
  4092e0:	cmp	w0, #0x0
  4092e4:	b.ne	409324 <chop_commands@@Base+0x444>  // b.any
  4092e8:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4092ec:	add	x1, x0, #0xd80
  4092f0:	ldr	x0, [sp, #64]
  4092f4:	bl	406d30 <strstr@plt>
  4092f8:	cmp	x0, #0x0
  4092fc:	b.ne	409318 <chop_commands@@Base+0x438>  // b.any
  409300:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409304:	add	x1, x0, #0xd88
  409308:	ldr	x0, [sp, #64]
  40930c:	bl	406d30 <strstr@plt>
  409310:	cmp	x0, #0x0
  409314:	b.eq	409324 <chop_commands@@Base+0x444>  // b.none
  409318:	ldrb	w0, [sp, #79]
  40931c:	orr	w0, w0, #0x1
  409320:	strb	w0, [sp, #79]
  409324:	ldr	x0, [sp, #40]
  409328:	ldr	x1, [x0, #40]
  40932c:	ldrh	w0, [sp, #122]
  409330:	add	x0, x1, x0
  409334:	ldrb	w1, [sp, #79]
  409338:	strb	w1, [x0]
  40933c:	ldr	x0, [sp, #40]
  409340:	ldrb	w0, [x0, #51]
  409344:	ubfx	x0, x0, #0, #1
  409348:	and	w0, w0, #0xff
  40934c:	sxtb	w1, w0
  409350:	ldrsb	w0, [sp, #79]
  409354:	and	w0, w0, #0x1
  409358:	sxtb	w0, w0
  40935c:	orr	w0, w1, w0
  409360:	sxtb	w0, w0
  409364:	and	w0, w0, #0x1
  409368:	and	w2, w0, #0xff
  40936c:	ldr	x1, [sp, #40]
  409370:	ldrb	w0, [x1, #51]
  409374:	bfxil	w0, w2, #0, #1
  409378:	strb	w0, [x1, #51]
  40937c:	ldrh	w0, [sp, #122]
  409380:	add	w0, w0, #0x1
  409384:	strh	w0, [sp, #122]
  409388:	ldrh	w0, [sp, #122]
  40938c:	ldr	w1, [sp, #124]
  409390:	cmp	w1, w0
  409394:	b.hi	4091fc <chop_commands@@Base+0x31c>  // b.pmore
  409398:	b	4093a0 <chop_commands@@Base+0x4c0>
  40939c:	nop
  4093a0:	ldr	x19, [sp, #16]
  4093a4:	ldp	x29, x30, [sp], #128
  4093a8:	ret

00000000004093ac <execute_file_commands@@Base>:
  4093ac:	stp	x29, x30, [sp, #-48]!
  4093b0:	mov	x29, sp
  4093b4:	str	x0, [sp, #24]
  4093b8:	ldr	x0, [sp, #24]
  4093bc:	ldr	x0, [x0, #32]
  4093c0:	ldr	x0, [x0, #24]
  4093c4:	str	x0, [sp, #40]
  4093c8:	b	409430 <execute_file_commands@@Base+0x84>
  4093cc:	ldr	x0, [sp, #40]
  4093d0:	ldrb	w0, [x0]
  4093d4:	mov	w1, w0
  4093d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4093dc:	add	x0, x0, #0x728
  4093e0:	sxtw	x1, w1
  4093e4:	ldrh	w0, [x0, x1, lsl #1]
  4093e8:	and	w0, w0, #0x6
  4093ec:	cmp	w0, #0x0
  4093f0:	b.ne	409424 <execute_file_commands@@Base+0x78>  // b.any
  4093f4:	ldr	x0, [sp, #40]
  4093f8:	ldrb	w0, [x0]
  4093fc:	cmp	w0, #0x2d
  409400:	b.eq	409424 <execute_file_commands@@Base+0x78>  // b.none
  409404:	ldr	x0, [sp, #40]
  409408:	ldrb	w0, [x0]
  40940c:	cmp	w0, #0x40
  409410:	b.eq	409424 <execute_file_commands@@Base+0x78>  // b.none
  409414:	ldr	x0, [sp, #40]
  409418:	ldrb	w0, [x0]
  40941c:	cmp	w0, #0x2b
  409420:	b.ne	409444 <execute_file_commands@@Base+0x98>  // b.any
  409424:	ldr	x0, [sp, #40]
  409428:	add	x0, x0, #0x1
  40942c:	str	x0, [sp, #40]
  409430:	ldr	x0, [sp, #40]
  409434:	ldrb	w0, [x0]
  409438:	cmp	w0, #0x0
  40943c:	b.ne	4093cc <execute_file_commands@@Base+0x20>  // b.any
  409440:	b	409448 <execute_file_commands@@Base+0x9c>
  409444:	nop
  409448:	ldr	x0, [sp, #40]
  40944c:	ldrb	w0, [x0]
  409450:	cmp	w0, #0x0
  409454:	b.ne	409480 <execute_file_commands@@Base+0xd4>  // b.any
  409458:	mov	w1, #0x2                   	// #2
  40945c:	ldr	x0, [sp, #24]
  409460:	bl	40e258 <set_command_state@@Base>
  409464:	ldr	x0, [sp, #24]
  409468:	ldrb	w1, [x0, #136]
  40946c:	and	w1, w1, #0xfffffffc
  409470:	strb	w1, [x0, #136]
  409474:	ldr	x0, [sp, #24]
  409478:	bl	42d420 <notice_finished_file@@Base>
  40947c:	b	4094c0 <execute_file_commands@@Base+0x114>
  409480:	mov	w1, #0x0                   	// #0
  409484:	ldr	x0, [sp, #24]
  409488:	bl	432088 <initialize_file_variables@@Base>
  40948c:	ldr	x0, [sp, #24]
  409490:	bl	4081c8 <set_file_variables@@Base>
  409494:	ldr	x0, [sp, #24]
  409498:	ldrb	w0, [x0, #136]
  40949c:	and	w0, w0, #0x40
  4094a0:	and	w0, w0, #0xff
  4094a4:	cmp	w0, #0x0
  4094a8:	b.eq	4094b8 <execute_file_commands@@Base+0x10c>  // b.none
  4094ac:	ldr	x0, [sp, #24]
  4094b0:	ldr	x0, [x0]
  4094b4:	bl	41c540 <unload_file@@Base>
  4094b8:	ldr	x0, [sp, #24]
  4094bc:	bl	4196b4 <new_job@@Base>
  4094c0:	ldp	x29, x30, [sp], #48
  4094c4:	ret

00000000004094c8 <fatal_error_signal@@Base>:
  4094c8:	stp	x29, x30, [sp, #-48]!
  4094cc:	mov	x29, sp
  4094d0:	str	w0, [sp, #28]
  4094d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4094d8:	add	x0, x0, #0x420
  4094dc:	mov	w1, #0x1                   	// #1
  4094e0:	str	w1, [x0]
  4094e4:	mov	x1, #0x0                   	// #0
  4094e8:	ldr	w0, [sp, #28]
  4094ec:	bl	4068d0 <signal@plt>
  4094f0:	ldr	w0, [sp, #28]
  4094f4:	cmp	w0, #0xf
  4094f8:	b.ne	409560 <fatal_error_signal@@Base+0x98>  // b.any
  4094fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409500:	add	x0, x0, #0x620
  409504:	ldr	x0, [x0]
  409508:	str	x0, [sp, #40]
  40950c:	b	409554 <fatal_error_signal@@Base+0x8c>
  409510:	ldr	x0, [sp, #40]
  409514:	ldrb	w0, [x0, #80]
  409518:	and	w0, w0, #0x1
  40951c:	and	w0, w0, #0xff
  409520:	cmp	w0, #0x0
  409524:	b.ne	409548 <fatal_error_signal@@Base+0x80>  // b.any
  409528:	ldr	x0, [sp, #40]
  40952c:	ldr	w0, [x0, #76]
  409530:	cmp	w0, #0x0
  409534:	b.le	409548 <fatal_error_signal@@Base+0x80>
  409538:	ldr	x0, [sp, #40]
  40953c:	ldr	w0, [x0, #76]
  409540:	mov	w1, #0xf                   	// #15
  409544:	bl	406840 <kill@plt>
  409548:	ldr	x0, [sp, #40]
  40954c:	ldr	x0, [x0, #32]
  409550:	str	x0, [sp, #40]
  409554:	ldr	x0, [sp, #40]
  409558:	cmp	x0, #0x0
  40955c:	b.ne	409510 <fatal_error_signal@@Base+0x48>  // b.any
  409560:	ldr	w0, [sp, #28]
  409564:	cmp	w0, #0xf
  409568:	b.eq	409590 <fatal_error_signal@@Base+0xc8>  // b.none
  40956c:	ldr	w0, [sp, #28]
  409570:	cmp	w0, #0x2
  409574:	b.eq	409590 <fatal_error_signal@@Base+0xc8>  // b.none
  409578:	ldr	w0, [sp, #28]
  40957c:	cmp	w0, #0x1
  409580:	b.eq	409590 <fatal_error_signal@@Base+0xc8>  // b.none
  409584:	ldr	w0, [sp, #28]
  409588:	cmp	w0, #0x3
  40958c:	b.ne	40965c <fatal_error_signal@@Base+0x194>  // b.any
  409590:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409594:	add	x0, x0, #0x620
  409598:	ldr	x0, [x0]
  40959c:	str	x0, [sp, #32]
  4095a0:	b	4095e8 <fatal_error_signal@@Base+0x120>
  4095a4:	ldr	x0, [sp, #32]
  4095a8:	ldrb	w0, [x0, #80]
  4095ac:	and	w0, w0, #0x1
  4095b0:	and	w0, w0, #0xff
  4095b4:	cmp	w0, #0x0
  4095b8:	b.eq	4095dc <fatal_error_signal@@Base+0x114>  // b.none
  4095bc:	ldr	x0, [sp, #32]
  4095c0:	ldr	w0, [x0, #76]
  4095c4:	cmp	w0, #0x0
  4095c8:	b.le	4095dc <fatal_error_signal@@Base+0x114>
  4095cc:	ldr	x0, [sp, #32]
  4095d0:	ldr	w0, [x0, #76]
  4095d4:	ldr	w1, [sp, #28]
  4095d8:	bl	4360c0 <remote_kill@@Base>
  4095dc:	ldr	x0, [sp, #32]
  4095e0:	ldr	x0, [x0, #32]
  4095e4:	str	x0, [sp, #32]
  4095e8:	ldr	x0, [sp, #32]
  4095ec:	cmp	x0, #0x0
  4095f0:	b.ne	4095a4 <fatal_error_signal@@Base+0xdc>  // b.any
  4095f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4095f8:	add	x0, x0, #0x620
  4095fc:	ldr	x0, [x0]
  409600:	str	x0, [sp, #32]
  409604:	b	40961c <fatal_error_signal@@Base+0x154>
  409608:	ldr	x0, [sp, #32]
  40960c:	bl	40995c <delete_child_targets@@Base>
  409610:	ldr	x0, [sp, #32]
  409614:	ldr	x0, [x0, #32]
  409618:	str	x0, [sp, #32]
  40961c:	ldr	x0, [sp, #32]
  409620:	cmp	x0, #0x0
  409624:	b.ne	409608 <fatal_error_signal@@Base+0x140>  // b.any
  409628:	b	409638 <fatal_error_signal@@Base+0x170>
  40962c:	mov	w1, #0x0                   	// #0
  409630:	mov	w0, #0x1                   	// #1
  409634:	bl	417c80 <reap_children@@Base>
  409638:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40963c:	add	x0, x0, #0x628
  409640:	ldr	w0, [x0]
  409644:	cmp	w0, #0x0
  409648:	b.ne	40962c <fatal_error_signal@@Base+0x164>  // b.any
  40964c:	b	409670 <fatal_error_signal@@Base+0x1a8>
  409650:	mov	w1, #0x1                   	// #1
  409654:	mov	w0, #0x1                   	// #1
  409658:	bl	417c80 <reap_children@@Base>
  40965c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409660:	add	x0, x0, #0x628
  409664:	ldr	w0, [x0]
  409668:	cmp	w0, #0x0
  40966c:	b.ne	409650 <fatal_error_signal@@Base+0x188>  // b.any
  409670:	mov	w0, #0x1                   	// #1
  409674:	bl	40cf10 <remove_intermediates@@Base>
  409678:	ldr	w0, [sp, #28]
  40967c:	cmp	w0, #0x3
  409680:	b.ne	40968c <fatal_error_signal@@Base+0x1c4>  // b.any
  409684:	mov	w0, #0x1                   	// #1
  409688:	bl	406710 <exit@plt>
  40968c:	bl	406900 <getpid@plt>
  409690:	ldr	w1, [sp, #28]
  409694:	bl	406840 <kill@plt>
  409698:	cmp	w0, #0x0
  40969c:	b.ge	4096ac <fatal_error_signal@@Base+0x1e4>  // b.tcont
  4096a0:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4096a4:	add	x0, x0, #0xd90
  4096a8:	bl	424340 <pfatal_with_name@@Base>
  4096ac:	nop
  4096b0:	ldp	x29, x30, [sp], #48
  4096b4:	ret
  4096b8:	stp	x29, x30, [sp, #-192]!
  4096bc:	mov	x29, sp
  4096c0:	str	x19, [sp, #16]
  4096c4:	str	x0, [sp, #40]
  4096c8:	str	x1, [sp, #32]
  4096cc:	ldr	x0, [sp, #40]
  4096d0:	ldrb	w0, [x0, #136]
  4096d4:	and	w0, w0, #0x20
  4096d8:	and	w0, w0, #0xff
  4096dc:	cmp	w0, #0x0
  4096e0:	b.ne	409944 <fatal_error_signal@@Base+0x47c>  // b.any
  4096e4:	ldr	x0, [sp, #40]
  4096e8:	ldrb	w0, [x0, #137]
  4096ec:	and	w0, w0, #0x20
  4096f0:	and	w0, w0, #0xff
  4096f4:	cmp	w0, #0x0
  4096f8:	b.ne	409944 <fatal_error_signal@@Base+0x47c>  // b.any
  4096fc:	ldr	x0, [sp, #40]
  409700:	ldr	x0, [x0]
  409704:	bl	407068 <ar_name@@Base>
  409708:	cmp	w0, #0x0
  40970c:	b.eq	4097f4 <fatal_error_signal@@Base+0x32c>  // b.none
  409710:	ldr	x0, [sp, #40]
  409714:	ldr	x0, [x0, #112]
  409718:	cmp	x0, #0x1
  40971c:	b.eq	409734 <fatal_error_signal@@Base+0x26c>  // b.none
  409720:	ldr	x0, [sp, #40]
  409724:	ldr	x0, [x0, #112]
  409728:	sub	x0, x0, #0x3
  40972c:	lsr	x0, x0, #30
  409730:	b	409738 <fatal_error_signal@@Base+0x270>
  409734:	mov	x0, #0xffffffffffffffff    	// #-1
  409738:	str	x0, [sp, #176]
  40973c:	ldr	x0, [sp, #40]
  409740:	ldr	x0, [x0]
  409744:	bl	407224 <ar_member_date@@Base>
  409748:	mov	x1, x0
  40974c:	ldr	x0, [sp, #176]
  409750:	cmp	x0, x1
  409754:	b.eq	40994c <fatal_error_signal@@Base+0x484>  // b.none
  409758:	ldr	x0, [sp, #32]
  40975c:	cmp	x0, #0x0
  409760:	b.eq	4097b4 <fatal_error_signal@@Base+0x2ec>  // b.none
  409764:	ldr	x0, [sp, #32]
  409768:	bl	4066f0 <strlen@plt>
  40976c:	mov	x19, x0
  409770:	ldr	x0, [sp, #40]
  409774:	ldr	x0, [x0]
  409778:	bl	4066f0 <strlen@plt>
  40977c:	add	x19, x19, x0
  409780:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409784:	add	x0, x0, #0xd98
  409788:	bl	406e40 <gettext@plt>
  40978c:	mov	x1, x0
  409790:	ldr	x0, [sp, #40]
  409794:	ldr	x0, [x0]
  409798:	mov	x4, x0
  40979c:	ldr	x3, [sp, #32]
  4097a0:	mov	x2, x1
  4097a4:	mov	x1, x19
  4097a8:	mov	x0, #0x0                   	// #0
  4097ac:	bl	423e74 <error@@Base>
  4097b0:	b	40994c <fatal_error_signal@@Base+0x484>
  4097b4:	ldr	x0, [sp, #40]
  4097b8:	ldr	x0, [x0]
  4097bc:	bl	4066f0 <strlen@plt>
  4097c0:	mov	x19, x0
  4097c4:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4097c8:	add	x0, x0, #0xdd0
  4097cc:	bl	406e40 <gettext@plt>
  4097d0:	mov	x1, x0
  4097d4:	ldr	x0, [sp, #40]
  4097d8:	ldr	x0, [x0]
  4097dc:	mov	x3, x0
  4097e0:	mov	x2, x1
  4097e4:	mov	x1, x19
  4097e8:	mov	x0, #0x0                   	// #0
  4097ec:	bl	423e74 <error@@Base>
  4097f0:	b	40994c <fatal_error_signal@@Base+0x484>
  4097f4:	nop
  4097f8:	ldr	x0, [sp, #40]
  4097fc:	ldr	x0, [x0]
  409800:	add	x1, sp, #0x30
  409804:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  409808:	str	w0, [sp, #188]
  40980c:	ldr	w0, [sp, #188]
  409810:	cmn	w0, #0x1
  409814:	b.ne	409828 <fatal_error_signal@@Base+0x360>  // b.any
  409818:	bl	406dd0 <__errno_location@plt>
  40981c:	ldr	w0, [x0]
  409820:	cmp	w0, #0x4
  409824:	b.eq	4097f8 <fatal_error_signal@@Base+0x330>  // b.none
  409828:	ldr	w0, [sp, #188]
  40982c:	cmp	w0, #0x0
  409830:	b.ne	409950 <fatal_error_signal@@Base+0x488>  // b.any
  409834:	ldr	w0, [sp, #64]
  409838:	and	w0, w0, #0xf000
  40983c:	cmp	w0, #0x8, lsl #12
  409840:	b.ne	409950 <fatal_error_signal@@Base+0x488>  // b.any
  409844:	ldr	x0, [sp, #40]
  409848:	ldr	x0, [x0]
  40984c:	ldr	x1, [sp, #136]
  409850:	ldr	x2, [sp, #144]
  409854:	bl	40e2fc <file_timestamp_cons@@Base>
  409858:	mov	x1, x0
  40985c:	ldr	x0, [sp, #40]
  409860:	ldr	x0, [x0, #112]
  409864:	cmp	x1, x0
  409868:	b.eq	409950 <fatal_error_signal@@Base+0x488>  // b.none
  40986c:	ldr	x0, [sp, #32]
  409870:	cmp	x0, #0x0
  409874:	b.eq	4098c8 <fatal_error_signal@@Base+0x400>  // b.none
  409878:	ldr	x0, [sp, #32]
  40987c:	bl	4066f0 <strlen@plt>
  409880:	mov	x19, x0
  409884:	ldr	x0, [sp, #40]
  409888:	ldr	x0, [x0]
  40988c:	bl	4066f0 <strlen@plt>
  409890:	add	x19, x19, x0
  409894:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409898:	add	x0, x0, #0xe08
  40989c:	bl	406e40 <gettext@plt>
  4098a0:	mov	x1, x0
  4098a4:	ldr	x0, [sp, #40]
  4098a8:	ldr	x0, [x0]
  4098ac:	mov	x4, x0
  4098b0:	ldr	x3, [sp, #32]
  4098b4:	mov	x2, x1
  4098b8:	mov	x1, x19
  4098bc:	mov	x0, #0x0                   	// #0
  4098c0:	bl	423e74 <error@@Base>
  4098c4:	b	409904 <fatal_error_signal@@Base+0x43c>
  4098c8:	ldr	x0, [sp, #40]
  4098cc:	ldr	x0, [x0]
  4098d0:	bl	4066f0 <strlen@plt>
  4098d4:	mov	x19, x0
  4098d8:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  4098dc:	add	x0, x0, #0xe28
  4098e0:	bl	406e40 <gettext@plt>
  4098e4:	mov	x1, x0
  4098e8:	ldr	x0, [sp, #40]
  4098ec:	ldr	x0, [x0]
  4098f0:	mov	x3, x0
  4098f4:	mov	x2, x1
  4098f8:	mov	x1, x19
  4098fc:	mov	x0, #0x0                   	// #0
  409900:	bl	423e74 <error@@Base>
  409904:	ldr	x0, [sp, #40]
  409908:	ldr	x0, [x0]
  40990c:	bl	406e30 <unlink@plt>
  409910:	cmp	w0, #0x0
  409914:	b.ge	409950 <fatal_error_signal@@Base+0x488>  // b.tcont
  409918:	bl	406dd0 <__errno_location@plt>
  40991c:	ldr	w0, [x0]
  409920:	cmp	w0, #0x2
  409924:	b.eq	409950 <fatal_error_signal@@Base+0x488>  // b.none
  409928:	ldr	x0, [sp, #40]
  40992c:	ldr	x0, [x0]
  409930:	mov	x1, x0
  409934:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409938:	add	x0, x0, #0xe40
  40993c:	bl	4242c0 <perror_with_name@@Base>
  409940:	b	409950 <fatal_error_signal@@Base+0x488>
  409944:	nop
  409948:	b	409950 <fatal_error_signal@@Base+0x488>
  40994c:	nop
  409950:	ldr	x19, [sp, #16]
  409954:	ldp	x29, x30, [sp], #192
  409958:	ret

000000000040995c <delete_child_targets@@Base>:
  40995c:	stp	x29, x30, [sp, #-48]!
  409960:	mov	x29, sp
  409964:	str	x0, [sp, #24]
  409968:	ldr	x0, [sp, #24]
  40996c:	ldrb	w0, [x0, #80]
  409970:	and	w0, w0, #0x8
  409974:	and	w0, w0, #0xff
  409978:	cmp	w0, #0x0
  40997c:	b.ne	409a00 <delete_child_targets@@Base+0xa4>  // b.any
  409980:	ldr	x0, [sp, #24]
  409984:	ldr	w0, [x0, #76]
  409988:	cmp	w0, #0x0
  40998c:	b.lt	409a00 <delete_child_targets@@Base+0xa4>  // b.tstop
  409990:	ldr	x0, [sp, #24]
  409994:	ldr	x0, [x0, #40]
  409998:	mov	x1, #0x0                   	// #0
  40999c:	bl	4096b8 <fatal_error_signal@@Base+0x1f0>
  4099a0:	ldr	x0, [sp, #24]
  4099a4:	ldr	x0, [x0, #40]
  4099a8:	ldr	x0, [x0, #48]
  4099ac:	str	x0, [sp, #40]
  4099b0:	b	4099e0 <delete_child_targets@@Base+0x84>
  4099b4:	ldr	x0, [sp, #40]
  4099b8:	ldr	x2, [x0, #16]
  4099bc:	ldr	x0, [sp, #24]
  4099c0:	ldr	x0, [x0, #40]
  4099c4:	ldr	x0, [x0]
  4099c8:	mov	x1, x0
  4099cc:	mov	x0, x2
  4099d0:	bl	4096b8 <fatal_error_signal@@Base+0x1f0>
  4099d4:	ldr	x0, [sp, #40]
  4099d8:	ldr	x0, [x0]
  4099dc:	str	x0, [sp, #40]
  4099e0:	ldr	x0, [sp, #40]
  4099e4:	cmp	x0, #0x0
  4099e8:	b.ne	4099b4 <delete_child_targets@@Base+0x58>  // b.any
  4099ec:	ldr	x0, [sp, #24]
  4099f0:	ldrb	w1, [x0, #80]
  4099f4:	orr	w1, w1, #0x8
  4099f8:	strb	w1, [x0, #80]
  4099fc:	b	409a04 <delete_child_targets@@Base+0xa8>
  409a00:	nop
  409a04:	ldp	x29, x30, [sp], #48
  409a08:	ret

0000000000409a0c <print_commands@@Base>:
  409a0c:	stp	x29, x30, [sp, #-64]!
  409a10:	mov	x29, sp
  409a14:	str	x0, [sp, #24]
  409a18:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409a1c:	add	x0, x0, #0xe50
  409a20:	bl	406e40 <gettext@plt>
  409a24:	mov	x2, x0
  409a28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409a2c:	add	x0, x0, #0x400
  409a30:	ldr	x0, [x0]
  409a34:	mov	x1, x0
  409a38:	mov	x0, x2
  409a3c:	bl	406700 <fputs@plt>
  409a40:	ldr	x0, [sp, #24]
  409a44:	ldr	x0, [x0]
  409a48:	cmp	x0, #0x0
  409a4c:	b.ne	409a64 <print_commands@@Base+0x58>  // b.any
  409a50:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409a54:	add	x0, x0, #0xe68
  409a58:	bl	406e40 <gettext@plt>
  409a5c:	bl	406b60 <puts@plt>
  409a60:	b	409a90 <print_commands@@Base+0x84>
  409a64:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409a68:	add	x0, x0, #0xe78
  409a6c:	bl	406e40 <gettext@plt>
  409a70:	mov	x3, x0
  409a74:	ldr	x0, [sp, #24]
  409a78:	ldr	x1, [x0]
  409a7c:	ldr	x0, [sp, #24]
  409a80:	ldr	x0, [x0, #8]
  409a84:	mov	x2, x0
  409a88:	mov	x0, x3
  409a8c:	bl	406dc0 <printf@plt>
  409a90:	ldr	x0, [sp, #24]
  409a94:	ldr	x0, [x0, #24]
  409a98:	str	x0, [sp, #56]
  409a9c:	b	409b74 <print_commands@@Base+0x168>
  409aa0:	ldr	x0, [sp, #56]
  409aa4:	str	x0, [sp, #48]
  409aa8:	str	wzr, [sp, #44]
  409aac:	b	409b04 <print_commands@@Base+0xf8>
  409ab0:	ldr	x0, [sp, #48]
  409ab4:	ldrb	w0, [x0]
  409ab8:	cmp	w0, #0xa
  409abc:	b.ne	409acc <print_commands@@Base+0xc0>  // b.any
  409ac0:	ldr	w0, [sp, #44]
  409ac4:	cmp	w0, #0x0
  409ac8:	b.eq	409b18 <print_commands@@Base+0x10c>  // b.none
  409acc:	ldr	x0, [sp, #48]
  409ad0:	ldrb	w0, [x0]
  409ad4:	cmp	w0, #0x5c
  409ad8:	b.ne	409af0 <print_commands@@Base+0xe4>  // b.any
  409adc:	ldr	w0, [sp, #44]
  409ae0:	cmp	w0, #0x0
  409ae4:	b.ne	409af0 <print_commands@@Base+0xe4>  // b.any
  409ae8:	mov	w0, #0x1                   	// #1
  409aec:	b	409af4 <print_commands@@Base+0xe8>
  409af0:	mov	w0, #0x0                   	// #0
  409af4:	str	w0, [sp, #44]
  409af8:	ldr	x0, [sp, #48]
  409afc:	add	x0, x0, #0x1
  409b00:	str	x0, [sp, #48]
  409b04:	ldr	x0, [sp, #48]
  409b08:	ldrb	w0, [x0]
  409b0c:	cmp	w0, #0x0
  409b10:	b.ne	409ab0 <print_commands@@Base+0xa4>  // b.any
  409b14:	b	409b1c <print_commands@@Base+0x110>
  409b18:	nop
  409b1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409b20:	add	x0, x0, #0x1f8
  409b24:	ldrb	w0, [x0]
  409b28:	mov	w4, w0
  409b2c:	ldr	x1, [sp, #48]
  409b30:	ldr	x0, [sp, #56]
  409b34:	sub	x0, x1, x0
  409b38:	ldr	x3, [sp, #56]
  409b3c:	mov	w2, w0
  409b40:	mov	w1, w4
  409b44:	adrp	x0, 436000 <fd_noinherit@@Base+0x64>
  409b48:	add	x0, x0, #0xe98
  409b4c:	bl	406dc0 <printf@plt>
  409b50:	ldr	x0, [sp, #48]
  409b54:	ldrb	w0, [x0]
  409b58:	cmp	w0, #0xa
  409b5c:	cset	w0, eq  // eq = none
  409b60:	and	w0, w0, #0xff
  409b64:	and	x0, x0, #0xff
  409b68:	ldr	x1, [sp, #48]
  409b6c:	add	x0, x1, x0
  409b70:	str	x0, [sp, #56]
  409b74:	ldr	x0, [sp, #56]
  409b78:	ldrb	w0, [x0]
  409b7c:	cmp	w0, #0x0
  409b80:	b.ne	409aa0 <print_commands@@Base+0x94>  // b.any
  409b84:	nop
  409b88:	nop
  409b8c:	ldp	x29, x30, [sp], #64
  409b90:	ret

0000000000409b94 <set_default_suffixes@@Base>:
  409b94:	stp	x29, x30, [sp, #-48]!
  409b98:	mov	x29, sp
  409b9c:	str	x19, [sp, #16]
  409ba0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  409ba4:	add	x0, x0, #0x120
  409ba8:	bl	430d78 <strcache_add@@Base>
  409bac:	bl	40c678 <enter_file@@Base>
  409bb0:	mov	x1, x0
  409bb4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  409bb8:	add	x0, x0, #0xb28
  409bbc:	str	x1, [x0]
  409bc0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  409bc4:	add	x0, x0, #0xb28
  409bc8:	ldr	x0, [x0]
  409bcc:	ldrb	w1, [x0, #136]
  409bd0:	orr	w1, w1, #0x10
  409bd4:	strb	w1, [x0, #136]
  409bd8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409bdc:	add	x0, x0, #0x6f8
  409be0:	ldr	w0, [x0]
  409be4:	cmp	w0, #0x0
  409be8:	b.eq	409c28 <set_default_suffixes@@Base+0x94>  // b.none
  409bec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409bf0:	add	x0, x0, #0x3b8
  409bf4:	ldr	x0, [x0]
  409bf8:	ldr	x0, [x0, #8]
  409bfc:	mov	x6, #0x0                   	// #0
  409c00:	mov	x5, x0
  409c04:	mov	w4, #0x0                   	// #0
  409c08:	mov	w3, #0x0                   	// #0
  409c0c:	adrp	x0, 437000 <_IO_stdin_used@@Base+0x450>
  409c10:	add	x2, x0, #0x8c0
  409c14:	mov	x1, #0x8                   	// #8
  409c18:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  409c1c:	add	x0, x0, #0x130
  409c20:	bl	4316d8 <define_variable_in_set@@Base>
  409c24:	b	409ce8 <set_default_suffixes@@Base+0x154>
  409c28:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409c2c:	add	x0, x0, #0x408
  409c30:	str	x0, [sp, #32]
  409c34:	add	x0, sp, #0x20
  409c38:	mov	w4, #0x0                   	// #0
  409c3c:	mov	x3, #0x0                   	// #0
  409c40:	mov	w2, #0x1                   	// #1
  409c44:	mov	x1, #0x28                  	// #40
  409c48:	bl	42a5e0 <parse_file_seq@@Base>
  409c4c:	mov	x2, x0
  409c50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  409c54:	add	x0, x0, #0xb28
  409c58:	ldr	x19, [x0]
  409c5c:	mov	x1, #0x0                   	// #0
  409c60:	mov	x0, x2
  409c64:	bl	40d370 <enter_prereqs@@Base>
  409c68:	str	x0, [x19, #24]
  409c6c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  409c70:	add	x0, x0, #0xb28
  409c74:	ldr	x0, [x0]
  409c78:	ldr	x0, [x0, #24]
  409c7c:	str	x0, [sp, #40]
  409c80:	b	409ca4 <set_default_suffixes@@Base+0x110>
  409c84:	ldr	x0, [sp, #40]
  409c88:	ldr	x0, [x0, #16]
  409c8c:	ldrb	w1, [x0, #136]
  409c90:	orr	w1, w1, #0x10
  409c94:	strb	w1, [x0, #136]
  409c98:	ldr	x0, [sp, #40]
  409c9c:	ldr	x0, [x0]
  409ca0:	str	x0, [sp, #40]
  409ca4:	ldr	x0, [sp, #40]
  409ca8:	cmp	x0, #0x0
  409cac:	b.ne	409c84 <set_default_suffixes@@Base+0xf0>  // b.any
  409cb0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409cb4:	add	x0, x0, #0x3b8
  409cb8:	ldr	x0, [x0]
  409cbc:	ldr	x0, [x0, #8]
  409cc0:	mov	x6, #0x0                   	// #0
  409cc4:	mov	x5, x0
  409cc8:	mov	w4, #0x0                   	// #0
  409ccc:	mov	w3, #0x0                   	// #0
  409cd0:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409cd4:	add	x2, x0, #0x408
  409cd8:	mov	x1, #0x8                   	// #8
  409cdc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  409ce0:	add	x0, x0, #0x130
  409ce4:	bl	4316d8 <define_variable_in_set@@Base>
  409ce8:	nop
  409cec:	ldr	x19, [sp, #16]
  409cf0:	ldp	x29, x30, [sp], #48
  409cf4:	ret

0000000000409cf8 <install_default_suffix_rules@@Base>:
  409cf8:	stp	x29, x30, [sp, #-48]!
  409cfc:	mov	x29, sp
  409d00:	str	x19, [sp, #16]
  409d04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409d08:	add	x0, x0, #0x6f8
  409d0c:	ldr	w0, [x0]
  409d10:	cmp	w0, #0x0
  409d14:	b.ne	409dc8 <install_default_suffix_rules@@Base+0xd0>  // b.any
  409d18:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409d1c:	add	x0, x0, #0x5a8
  409d20:	str	x0, [sp, #40]
  409d24:	b	409db4 <install_default_suffix_rules@@Base+0xbc>
  409d28:	ldr	x0, [sp, #40]
  409d2c:	ldr	x0, [x0]
  409d30:	bl	430d78 <strcache_add@@Base>
  409d34:	bl	40c678 <enter_file@@Base>
  409d38:	str	x0, [sp, #32]
  409d3c:	mov	x0, #0x38                  	// #56
  409d40:	bl	42268c <xmalloc@@Base>
  409d44:	mov	x1, x0
  409d48:	ldr	x0, [sp, #32]
  409d4c:	str	x1, [x0, #32]
  409d50:	ldr	x0, [sp, #32]
  409d54:	ldr	x0, [x0, #32]
  409d58:	str	xzr, [x0]
  409d5c:	ldr	x0, [sp, #40]
  409d60:	add	x0, x0, #0x8
  409d64:	ldr	x1, [x0]
  409d68:	ldr	x0, [sp, #32]
  409d6c:	ldr	x19, [x0, #32]
  409d70:	mov	x0, x1
  409d74:	bl	422788 <xstrdup@@Base>
  409d78:	str	x0, [x19, #24]
  409d7c:	ldr	x0, [sp, #32]
  409d80:	ldr	x0, [x0, #32]
  409d84:	str	xzr, [x0, #32]
  409d88:	ldr	x0, [sp, #32]
  409d8c:	ldr	x0, [x0, #32]
  409d90:	mov	w1, #0x9                   	// #9
  409d94:	strb	w1, [x0, #50]
  409d98:	ldr	x0, [sp, #32]
  409d9c:	ldrb	w1, [x0, #136]
  409da0:	orr	w1, w1, #0x10
  409da4:	strb	w1, [x0, #136]
  409da8:	ldr	x0, [sp, #40]
  409dac:	add	x0, x0, #0x10
  409db0:	str	x0, [sp, #40]
  409db4:	ldr	x0, [sp, #40]
  409db8:	ldr	x0, [x0]
  409dbc:	cmp	x0, #0x0
  409dc0:	b.ne	409d28 <install_default_suffix_rules@@Base+0x30>  // b.any
  409dc4:	b	409dcc <install_default_suffix_rules@@Base+0xd4>
  409dc8:	nop
  409dcc:	ldr	x19, [sp, #16]
  409dd0:	ldp	x29, x30, [sp], #48
  409dd4:	ret

0000000000409dd8 <install_default_implicit_rules@@Base>:
  409dd8:	stp	x29, x30, [sp, #-32]!
  409ddc:	mov	x29, sp
  409de0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409de4:	add	x0, x0, #0x6f8
  409de8:	ldr	w0, [x0]
  409dec:	cmp	w0, #0x0
  409df0:	b.ne	409e68 <install_default_implicit_rules@@Base+0x90>  // b.any
  409df4:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409df8:	add	x0, x0, #0x4a0
  409dfc:	str	x0, [sp, #24]
  409e00:	b	409e1c <install_default_implicit_rules@@Base+0x44>
  409e04:	mov	w1, #0x0                   	// #0
  409e08:	ldr	x0, [sp, #24]
  409e0c:	bl	430194 <install_pattern_rule@@Base>
  409e10:	ldr	x0, [sp, #24]
  409e14:	add	x0, x0, #0x18
  409e18:	str	x0, [sp, #24]
  409e1c:	ldr	x0, [sp, #24]
  409e20:	ldr	x0, [x0]
  409e24:	cmp	x0, #0x0
  409e28:	b.ne	409e04 <install_default_implicit_rules@@Base+0x2c>  // b.any
  409e2c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409e30:	add	x0, x0, #0x518
  409e34:	str	x0, [sp, #24]
  409e38:	b	409e54 <install_default_implicit_rules@@Base+0x7c>
  409e3c:	mov	w1, #0x1                   	// #1
  409e40:	ldr	x0, [sp, #24]
  409e44:	bl	430194 <install_pattern_rule@@Base>
  409e48:	ldr	x0, [sp, #24]
  409e4c:	add	x0, x0, #0x18
  409e50:	str	x0, [sp, #24]
  409e54:	ldr	x0, [sp, #24]
  409e58:	ldr	x0, [x0]
  409e5c:	cmp	x0, #0x0
  409e60:	b.ne	409e3c <install_default_implicit_rules@@Base+0x64>  // b.any
  409e64:	b	409e6c <install_default_implicit_rules@@Base+0x94>
  409e68:	nop
  409e6c:	ldp	x29, x30, [sp], #32
  409e70:	ret

0000000000409e74 <define_default_variables@@Base>:
  409e74:	stp	x29, x30, [sp, #-48]!
  409e78:	mov	x29, sp
  409e7c:	str	x19, [sp, #16]
  409e80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409e84:	add	x0, x0, #0x6fc
  409e88:	ldr	w0, [x0]
  409e8c:	cmp	w0, #0x0
  409e90:	b.ne	409f18 <define_default_variables@@Base+0xa4>  // b.any
  409e94:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409e98:	add	x0, x0, #0x8c8
  409e9c:	str	x0, [sp, #40]
  409ea0:	b	409f04 <define_default_variables@@Base+0x90>
  409ea4:	ldr	x0, [sp, #40]
  409ea8:	ldr	x19, [x0]
  409eac:	ldr	x0, [sp, #40]
  409eb0:	ldr	x0, [x0]
  409eb4:	bl	4066f0 <strlen@plt>
  409eb8:	mov	x7, x0
  409ebc:	ldr	x0, [sp, #40]
  409ec0:	add	x0, x0, #0x8
  409ec4:	ldr	x1, [x0]
  409ec8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  409ecc:	add	x0, x0, #0x3b8
  409ed0:	ldr	x0, [x0]
  409ed4:	ldr	x0, [x0, #8]
  409ed8:	mov	x6, #0x0                   	// #0
  409edc:	mov	x5, x0
  409ee0:	mov	w4, #0x1                   	// #1
  409ee4:	mov	w3, #0x0                   	// #0
  409ee8:	mov	x2, x1
  409eec:	mov	x1, x7
  409ef0:	mov	x0, x19
  409ef4:	bl	4316d8 <define_variable_in_set@@Base>
  409ef8:	ldr	x0, [sp, #40]
  409efc:	add	x0, x0, #0x10
  409f00:	str	x0, [sp, #40]
  409f04:	ldr	x0, [sp, #40]
  409f08:	ldr	x0, [x0]
  409f0c:	cmp	x0, #0x0
  409f10:	b.ne	409ea4 <define_default_variables@@Base+0x30>  // b.any
  409f14:	b	409f1c <define_default_variables@@Base+0xa8>
  409f18:	nop
  409f1c:	ldr	x19, [sp, #16]
  409f20:	ldp	x29, x30, [sp], #48
  409f24:	ret

0000000000409f28 <undefine_default_variables@@Base>:
  409f28:	stp	x29, x30, [sp, #-48]!
  409f2c:	mov	x29, sp
  409f30:	str	x19, [sp, #16]
  409f34:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  409f38:	add	x0, x0, #0x8c8
  409f3c:	str	x0, [sp, #40]
  409f40:	b	409f78 <undefine_default_variables@@Base+0x50>
  409f44:	ldr	x0, [sp, #40]
  409f48:	ldr	x19, [x0]
  409f4c:	ldr	x0, [sp, #40]
  409f50:	ldr	x0, [x0]
  409f54:	bl	4066f0 <strlen@plt>
  409f58:	mov	x3, #0x0                   	// #0
  409f5c:	mov	w2, #0x0                   	// #0
  409f60:	mov	x1, x0
  409f64:	mov	x0, x19
  409f68:	bl	431b50 <undefine_variable_in_set@@Base>
  409f6c:	ldr	x0, [sp, #40]
  409f70:	add	x0, x0, #0x10
  409f74:	str	x0, [sp, #40]
  409f78:	ldr	x0, [sp, #40]
  409f7c:	ldr	x0, [x0]
  409f80:	cmp	x0, #0x0
  409f84:	b.ne	409f44 <undefine_default_variables@@Base+0x1c>  // b.any
  409f88:	nop
  409f8c:	nop
  409f90:	ldr	x19, [sp, #16]
  409f94:	ldp	x29, x30, [sp], #48
  409f98:	ret
  409f9c:	sub	sp, sp, #0x20
  409fa0:	str	x0, [sp, #8]
  409fa4:	ldr	x0, [sp, #8]
  409fa8:	str	x0, [sp, #24]
  409fac:	ldr	x0, [sp, #24]
  409fb0:	ldr	x0, [x0]
  409fb4:	lsl	w0, w0, #4
  409fb8:	ldr	x1, [sp, #24]
  409fbc:	ldr	x1, [x1, #8]
  409fc0:	eor	w0, w0, w1
  409fc4:	mov	w0, w0
  409fc8:	str	x0, [sp, #16]
  409fcc:	ldr	x0, [sp, #16]
  409fd0:	add	sp, sp, #0x20
  409fd4:	ret
  409fd8:	sub	sp, sp, #0x20
  409fdc:	str	x0, [sp, #8]
  409fe0:	ldr	x0, [sp, #8]
  409fe4:	str	x0, [sp, #24]
  409fe8:	ldr	x0, [sp, #24]
  409fec:	ldr	x0, [x0, #8]
  409ff0:	mov	w1, w0
  409ff4:	ldr	x0, [sp, #24]
  409ff8:	ldr	x0, [x0]
  409ffc:	lsl	w0, w0, #4
  40a000:	eor	w0, w1, w0
  40a004:	mvn	w0, w0
  40a008:	mov	w0, w0
  40a00c:	str	x0, [sp, #16]
  40a010:	ldr	x0, [sp, #16]
  40a014:	add	sp, sp, #0x20
  40a018:	ret
  40a01c:	sub	sp, sp, #0x30
  40a020:	str	x0, [sp, #8]
  40a024:	str	x1, [sp]
  40a028:	ldr	x0, [sp, #8]
  40a02c:	str	x0, [sp, #40]
  40a030:	ldr	x0, [sp]
  40a034:	str	x0, [sp, #32]
  40a038:	ldr	x0, [sp, #40]
  40a03c:	ldr	x1, [x0, #8]
  40a040:	ldr	x0, [sp, #32]
  40a044:	ldr	x0, [x0, #8]
  40a048:	cmp	x1, x0
  40a04c:	b.cc	40a070 <undefine_default_variables@@Base+0x148>  // b.lo, b.ul, b.last
  40a050:	ldr	x0, [sp, #40]
  40a054:	ldr	x1, [x0, #8]
  40a058:	ldr	x0, [sp, #32]
  40a05c:	ldr	x0, [x0, #8]
  40a060:	cmp	x1, x0
  40a064:	cset	w0, ne  // ne = any
  40a068:	and	w0, w0, #0xff
  40a06c:	b	40a074 <undefine_default_variables@@Base+0x14c>
  40a070:	mov	w0, #0xffffffff            	// #-1
  40a074:	str	w0, [sp, #28]
  40a078:	ldr	w0, [sp, #28]
  40a07c:	cmp	w0, #0x0
  40a080:	b.eq	40a08c <undefine_default_variables@@Base+0x164>  // b.none
  40a084:	ldr	w0, [sp, #28]
  40a088:	b	40a0c8 <undefine_default_variables@@Base+0x1a0>
  40a08c:	ldr	x0, [sp, #40]
  40a090:	ldr	x1, [x0]
  40a094:	ldr	x0, [sp, #32]
  40a098:	ldr	x0, [x0]
  40a09c:	cmp	x1, x0
  40a0a0:	b.cc	40a0c4 <undefine_default_variables@@Base+0x19c>  // b.lo, b.ul, b.last
  40a0a4:	ldr	x0, [sp, #40]
  40a0a8:	ldr	x1, [x0]
  40a0ac:	ldr	x0, [sp, #32]
  40a0b0:	ldr	x0, [x0]
  40a0b4:	cmp	x1, x0
  40a0b8:	cset	w0, ne  // ne = any
  40a0bc:	and	w0, w0, #0xff
  40a0c0:	b	40a0c8 <undefine_default_variables@@Base+0x1a0>
  40a0c4:	mov	w0, #0xffffffff            	// #-1
  40a0c8:	add	sp, sp, #0x30
  40a0cc:	ret
  40a0d0:	stp	x29, x30, [sp, #-48]!
  40a0d4:	mov	x29, sp
  40a0d8:	str	x0, [sp, #24]
  40a0dc:	str	xzr, [sp, #40]
  40a0e0:	ldr	x0, [sp, #24]
  40a0e4:	ldr	x0, [x0]
  40a0e8:	str	x0, [sp, #32]
  40a0ec:	ldr	x0, [sp, #32]
  40a0f0:	bl	415104 <jhash_string@@Base>
  40a0f4:	mov	w0, w0
  40a0f8:	ldr	x1, [sp, #40]
  40a0fc:	add	x0, x1, x0
  40a100:	str	x0, [sp, #40]
  40a104:	ldr	x0, [sp, #40]
  40a108:	ldp	x29, x30, [sp], #48
  40a10c:	ret
  40a110:	sub	sp, sp, #0x20
  40a114:	str	x0, [sp, #8]
  40a118:	str	xzr, [sp, #24]
  40a11c:	ldr	x0, [sp, #24]
  40a120:	add	sp, sp, #0x20
  40a124:	ret
  40a128:	stp	x29, x30, [sp, #-32]!
  40a12c:	mov	x29, sp
  40a130:	str	x0, [sp, #24]
  40a134:	str	x1, [sp, #16]
  40a138:	ldr	x0, [sp, #24]
  40a13c:	ldr	x1, [x0]
  40a140:	ldr	x0, [sp, #16]
  40a144:	ldr	x0, [x0]
  40a148:	cmp	x1, x0
  40a14c:	b.eq	40a170 <undefine_default_variables@@Base+0x248>  // b.none
  40a150:	ldr	x0, [sp, #24]
  40a154:	ldr	x2, [x0]
  40a158:	ldr	x0, [sp, #16]
  40a15c:	ldr	x0, [x0]
  40a160:	mov	x1, x0
  40a164:	mov	x0, x2
  40a168:	bl	406bc0 <strcmp@plt>
  40a16c:	b	40a174 <undefine_default_variables@@Base+0x24c>
  40a170:	mov	w0, #0x0                   	// #0
  40a174:	ldp	x29, x30, [sp], #32
  40a178:	ret
  40a17c:	stp	x29, x30, [sp, #-48]!
  40a180:	mov	x29, sp
  40a184:	str	x0, [sp, #24]
  40a188:	str	xzr, [sp, #40]
  40a18c:	ldr	x0, [sp, #24]
  40a190:	ldr	x0, [x0]
  40a194:	str	x0, [sp, #32]
  40a198:	ldr	x0, [sp, #32]
  40a19c:	bl	415104 <jhash_string@@Base>
  40a1a0:	mov	w0, w0
  40a1a4:	ldr	x1, [sp, #40]
  40a1a8:	add	x0, x1, x0
  40a1ac:	str	x0, [sp, #40]
  40a1b0:	ldr	x0, [sp, #40]
  40a1b4:	ldp	x29, x30, [sp], #48
  40a1b8:	ret
  40a1bc:	sub	sp, sp, #0x20
  40a1c0:	str	x0, [sp, #8]
  40a1c4:	str	xzr, [sp, #24]
  40a1c8:	ldr	x0, [sp, #24]
  40a1cc:	add	sp, sp, #0x20
  40a1d0:	ret
  40a1d4:	stp	x29, x30, [sp, #-64]!
  40a1d8:	mov	x29, sp
  40a1dc:	str	x0, [sp, #24]
  40a1e0:	str	x1, [sp, #16]
  40a1e4:	ldr	x0, [sp, #24]
  40a1e8:	str	x0, [sp, #56]
  40a1ec:	ldr	x0, [sp, #16]
  40a1f0:	str	x0, [sp, #48]
  40a1f4:	ldr	x0, [sp, #56]
  40a1f8:	ldr	x0, [x0, #8]
  40a1fc:	mov	w1, w0
  40a200:	ldr	x0, [sp, #48]
  40a204:	ldr	x0, [x0, #8]
  40a208:	sub	w0, w1, w0
  40a20c:	str	w0, [sp, #44]
  40a210:	ldr	w0, [sp, #44]
  40a214:	cmp	w0, #0x0
  40a218:	b.eq	40a224 <undefine_default_variables@@Base+0x2fc>  // b.none
  40a21c:	ldr	w0, [sp, #44]
  40a220:	b	40a260 <undefine_default_variables@@Base+0x338>
  40a224:	ldr	x0, [sp, #56]
  40a228:	ldr	x1, [x0]
  40a22c:	ldr	x0, [sp, #48]
  40a230:	ldr	x0, [x0]
  40a234:	cmp	x1, x0
  40a238:	b.eq	40a25c <undefine_default_variables@@Base+0x334>  // b.none
  40a23c:	ldr	x0, [sp, #56]
  40a240:	ldr	x2, [x0]
  40a244:	ldr	x0, [sp, #48]
  40a248:	ldr	x0, [x0]
  40a24c:	mov	x1, x0
  40a250:	mov	x0, x2
  40a254:	bl	406bc0 <strcmp@plt>
  40a258:	b	40a260 <undefine_default_variables@@Base+0x338>
  40a25c:	mov	w0, #0x0                   	// #0
  40a260:	ldp	x29, x30, [sp], #64
  40a264:	ret
  40a268:	stp	x29, x30, [sp, #-336]!
  40a26c:	mov	x29, sp
  40a270:	str	x0, [sp, #24]
  40a274:	ldr	x0, [sp, #24]
  40a278:	str	x0, [sp, #272]
  40a27c:	add	x0, sp, #0x110
  40a280:	mov	x1, x0
  40a284:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a288:	add	x0, x0, #0x4b0
  40a28c:	bl	41422c <hash_find_slot@@Base>
  40a290:	str	x0, [sp, #312]
  40a294:	ldr	x0, [sp, #312]
  40a298:	ldr	x0, [x0]
  40a29c:	str	x0, [sp, #328]
  40a2a0:	ldr	x0, [sp, #328]
  40a2a4:	cmp	x0, #0x0
  40a2a8:	b.eq	40a2c4 <undefine_default_variables@@Base+0x39c>  // b.none
  40a2ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a2b0:	add	x0, x0, #0x40
  40a2b4:	ldr	x0, [x0]
  40a2b8:	ldr	x1, [sp, #328]
  40a2bc:	cmp	x1, x0
  40a2c0:	b.ne	40a4c8 <undefine_default_variables@@Base+0x5a0>  // b.any
  40a2c4:	ldr	x0, [sp, #24]
  40a2c8:	bl	4066f0 <strlen@plt>
  40a2cc:	mov	x1, x0
  40a2d0:	ldr	x0, [sp, #24]
  40a2d4:	add	x0, x0, x1
  40a2d8:	str	x0, [sp, #304]
  40a2dc:	mov	x0, #0x10                  	// #16
  40a2e0:	bl	42268c <xmalloc@@Base>
  40a2e4:	str	x0, [sp, #328]
  40a2e8:	ldr	x1, [sp, #304]
  40a2ec:	ldr	x0, [sp, #24]
  40a2f0:	sub	x0, x1, x0
  40a2f4:	mov	x1, x0
  40a2f8:	ldr	x0, [sp, #24]
  40a2fc:	bl	430da0 <strcache_add_len@@Base>
  40a300:	mov	x1, x0
  40a304:	ldr	x0, [sp, #328]
  40a308:	str	x1, [x0]
  40a30c:	ldr	x2, [sp, #312]
  40a310:	ldr	x1, [sp, #328]
  40a314:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a318:	add	x0, x0, #0x4b0
  40a31c:	bl	414470 <hash_insert_at@@Base>
  40a320:	nop
  40a324:	add	x0, sp, #0x90
  40a328:	mov	x1, x0
  40a32c:	ldr	x0, [sp, #24]
  40a330:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  40a334:	str	w0, [sp, #300]
  40a338:	ldr	w0, [sp, #300]
  40a33c:	cmn	w0, #0x1
  40a340:	b.ne	40a354 <undefine_default_variables@@Base+0x42c>  // b.any
  40a344:	bl	406dd0 <__errno_location@plt>
  40a348:	ldr	w0, [x0]
  40a34c:	cmp	w0, #0x4
  40a350:	b.eq	40a324 <undefine_default_variables@@Base+0x3fc>  // b.none
  40a354:	ldr	w0, [sp, #300]
  40a358:	cmp	w0, #0x0
  40a35c:	b.ge	40a36c <undefine_default_variables@@Base+0x444>  // b.tcont
  40a360:	ldr	x0, [sp, #328]
  40a364:	str	xzr, [x0, #8]
  40a368:	b	40a4c8 <undefine_default_variables@@Base+0x5a0>
  40a36c:	ldr	x0, [sp, #144]
  40a370:	str	x0, [sp, #32]
  40a374:	ldr	x0, [sp, #152]
  40a378:	str	x0, [sp, #40]
  40a37c:	add	x0, sp, #0x20
  40a380:	mov	x1, x0
  40a384:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a388:	add	x0, x0, #0x458
  40a38c:	bl	41422c <hash_find_slot@@Base>
  40a390:	str	x0, [sp, #288]
  40a394:	ldr	x0, [sp, #288]
  40a398:	ldr	x0, [x0]
  40a39c:	str	x0, [sp, #320]
  40a3a0:	ldr	x0, [sp, #320]
  40a3a4:	cmp	x0, #0x0
  40a3a8:	b.eq	40a3c4 <undefine_default_variables@@Base+0x49c>  // b.none
  40a3ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a3b0:	add	x0, x0, #0x40
  40a3b4:	ldr	x0, [x0]
  40a3b8:	ldr	x1, [sp, #320]
  40a3bc:	cmp	x1, x0
  40a3c0:	b.ne	40a4bc <undefine_default_variables@@Base+0x594>  // b.any
  40a3c4:	mov	x0, #0x70                  	// #112
  40a3c8:	bl	42268c <xmalloc@@Base>
  40a3cc:	str	x0, [sp, #320]
  40a3d0:	ldr	x1, [sp, #144]
  40a3d4:	ldr	x0, [sp, #320]
  40a3d8:	str	x1, [x0]
  40a3dc:	ldr	x1, [sp, #152]
  40a3e0:	ldr	x0, [sp, #320]
  40a3e4:	str	x1, [x0, #8]
  40a3e8:	ldr	x2, [sp, #288]
  40a3ec:	ldr	x1, [sp, #320]
  40a3f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a3f4:	add	x0, x0, #0x458
  40a3f8:	bl	414470 <hash_insert_at@@Base>
  40a3fc:	bl	406dd0 <__errno_location@plt>
  40a400:	str	wzr, [x0]
  40a404:	ldr	x0, [sp, #24]
  40a408:	bl	4067c0 <opendir@plt>
  40a40c:	mov	x1, x0
  40a410:	ldr	x0, [sp, #320]
  40a414:	str	x1, [x0, #104]
  40a418:	ldr	x0, [sp, #320]
  40a41c:	ldr	x0, [x0, #104]
  40a420:	cmp	x0, #0x0
  40a424:	b.ne	40a438 <undefine_default_variables@@Base+0x510>  // b.any
  40a428:	bl	406dd0 <__errno_location@plt>
  40a42c:	ldr	w0, [x0]
  40a430:	cmp	w0, #0x4
  40a434:	b.eq	40a3fc <undefine_default_variables@@Base+0x4d4>  // b.none
  40a438:	ldr	x0, [sp, #320]
  40a43c:	ldr	x0, [x0, #104]
  40a440:	cmp	x0, #0x0
  40a444:	b.ne	40a454 <undefine_default_variables@@Base+0x52c>  // b.any
  40a448:	ldr	x0, [sp, #320]
  40a44c:	str	xzr, [x0, #16]
  40a450:	b	40a4bc <undefine_default_variables@@Base+0x594>
  40a454:	ldr	x0, [sp, #320]
  40a458:	add	x5, x0, #0x10
  40a45c:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40a460:	add	x4, x0, #0x1d4
  40a464:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40a468:	add	x3, x0, #0x1bc
  40a46c:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40a470:	add	x2, x0, #0x17c
  40a474:	mov	x1, #0x6b                  	// #107
  40a478:	mov	x0, x5
  40a47c:	bl	4140a8 <hash_init@@Base>
  40a480:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a484:	add	x0, x0, #0x508
  40a488:	ldr	w0, [x0]
  40a48c:	add	w1, w0, #0x1
  40a490:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a494:	add	x0, x0, #0x508
  40a498:	str	w1, [x0]
  40a49c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a4a0:	add	x0, x0, #0x508
  40a4a4:	ldr	w0, [x0]
  40a4a8:	cmp	w0, #0xa
  40a4ac:	b.ne	40a4bc <undefine_default_variables@@Base+0x594>  // b.any
  40a4b0:	mov	x1, #0x0                   	// #0
  40a4b4:	ldr	x0, [sp, #320]
  40a4b8:	bl	40a4d4 <undefine_default_variables@@Base+0x5ac>
  40a4bc:	ldr	x0, [sp, #328]
  40a4c0:	ldr	x1, [sp, #320]
  40a4c4:	str	x1, [x0, #8]
  40a4c8:	ldr	x0, [sp, #328]
  40a4cc:	ldp	x29, x30, [sp], #336
  40a4d0:	ret
  40a4d4:	stp	x29, x30, [sp, #-112]!
  40a4d8:	mov	x29, sp
  40a4dc:	str	x0, [sp, #24]
  40a4e0:	str	x1, [sp, #16]
  40a4e4:	ldr	x0, [sp, #24]
  40a4e8:	cmp	x0, #0x0
  40a4ec:	b.eq	40a500 <undefine_default_variables@@Base+0x5d8>  // b.none
  40a4f0:	ldr	x0, [sp, #24]
  40a4f4:	ldr	x0, [x0, #16]
  40a4f8:	cmp	x0, #0x0
  40a4fc:	b.ne	40a508 <undefine_default_variables@@Base+0x5e0>  // b.any
  40a500:	mov	w0, #0x0                   	// #0
  40a504:	b	40a758 <undefine_default_variables@@Base+0x830>
  40a508:	ldr	x0, [sp, #16]
  40a50c:	cmp	x0, #0x0
  40a510:	b.eq	40a578 <undefine_default_variables@@Base+0x650>  // b.none
  40a514:	ldr	x0, [sp, #16]
  40a518:	ldrb	w0, [x0]
  40a51c:	cmp	w0, #0x0
  40a520:	b.ne	40a52c <undefine_default_variables@@Base+0x604>  // b.any
  40a524:	mov	w0, #0x1                   	// #1
  40a528:	b	40a758 <undefine_default_variables@@Base+0x830>
  40a52c:	ldr	x0, [sp, #16]
  40a530:	str	x0, [sp, #56]
  40a534:	ldr	x0, [sp, #16]
  40a538:	bl	4066f0 <strlen@plt>
  40a53c:	str	x0, [sp, #64]
  40a540:	ldr	x0, [sp, #24]
  40a544:	add	x0, x0, #0x10
  40a548:	add	x1, sp, #0x38
  40a54c:	bl	414398 <hash_find_item@@Base>
  40a550:	str	x0, [sp, #104]
  40a554:	ldr	x0, [sp, #104]
  40a558:	cmp	x0, #0x0
  40a55c:	b.eq	40a578 <undefine_default_variables@@Base+0x650>  // b.none
  40a560:	ldr	x0, [sp, #104]
  40a564:	ldrsh	w0, [x0, #16]
  40a568:	cmp	w0, #0x0
  40a56c:	cset	w0, eq  // eq = none
  40a570:	and	w0, w0, #0xff
  40a574:	b	40a758 <undefine_default_variables@@Base+0x830>
  40a578:	ldr	x0, [sp, #24]
  40a57c:	ldr	x0, [x0, #104]
  40a580:	cmp	x0, #0x0
  40a584:	b.ne	40a590 <undefine_default_variables@@Base+0x668>  // b.any
  40a588:	mov	w0, #0x0                   	// #0
  40a58c:	b	40a758 <undefine_default_variables@@Base+0x830>
  40a590:	bl	406dd0 <__errno_location@plt>
  40a594:	str	wzr, [x0]
  40a598:	ldr	x0, [sp, #24]
  40a59c:	ldr	x0, [x0, #104]
  40a5a0:	bl	406a60 <readdir@plt>
  40a5a4:	str	x0, [sp, #96]
  40a5a8:	ldr	x0, [sp, #96]
  40a5ac:	cmp	x0, #0x0
  40a5b0:	b.ne	40a5c4 <undefine_default_variables@@Base+0x69c>  // b.any
  40a5b4:	bl	406dd0 <__errno_location@plt>
  40a5b8:	ldr	w0, [x0]
  40a5bc:	cmp	w0, #0x4
  40a5c0:	b.eq	40a590 <undefine_default_variables@@Base+0x668>  // b.none
  40a5c4:	ldr	x0, [sp, #96]
  40a5c8:	cmp	x0, #0x0
  40a5cc:	b.ne	40a5fc <undefine_default_variables@@Base+0x6d4>  // b.any
  40a5d0:	bl	406dd0 <__errno_location@plt>
  40a5d4:	ldr	w0, [x0]
  40a5d8:	cmp	w0, #0x0
  40a5dc:	b.eq	40a5ec <undefine_default_variables@@Base+0x6c4>  // b.none
  40a5e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40a5e4:	add	x0, x0, #0x140
  40a5e8:	bl	424340 <pfatal_with_name@@Base>
  40a5ec:	ldr	x0, [sp, #96]
  40a5f0:	cmp	x0, #0x0
  40a5f4:	b.eq	40a724 <undefine_default_variables@@Base+0x7fc>  // b.none
  40a5f8:	b	40a754 <undefine_default_variables@@Base+0x82c>
  40a5fc:	ldr	x0, [sp, #96]
  40a600:	ldr	x0, [x0]
  40a604:	cmp	x0, #0x0
  40a608:	b.eq	40a71c <undefine_default_variables@@Base+0x7f4>  // b.none
  40a60c:	ldr	x0, [sp, #96]
  40a610:	add	x0, x0, #0x13
  40a614:	bl	4066f0 <strlen@plt>
  40a618:	str	x0, [sp, #88]
  40a61c:	ldr	x0, [sp, #96]
  40a620:	add	x0, x0, #0x13
  40a624:	str	x0, [sp, #32]
  40a628:	ldr	x0, [sp, #88]
  40a62c:	str	x0, [sp, #40]
  40a630:	ldr	x0, [sp, #24]
  40a634:	add	x0, x0, #0x10
  40a638:	add	x1, sp, #0x20
  40a63c:	bl	41422c <hash_find_slot@@Base>
  40a640:	str	x0, [sp, #80]
  40a644:	mov	x0, #0x18                  	// #24
  40a648:	bl	42268c <xmalloc@@Base>
  40a64c:	str	x0, [sp, #104]
  40a650:	ldr	x0, [sp, #96]
  40a654:	add	x0, x0, #0x13
  40a658:	ldr	x1, [sp, #88]
  40a65c:	bl	430da0 <strcache_add_len@@Base>
  40a660:	mov	x1, x0
  40a664:	ldr	x0, [sp, #104]
  40a668:	str	x1, [x0]
  40a66c:	ldr	x0, [sp, #96]
  40a670:	ldrb	w1, [x0, #18]
  40a674:	ldr	x0, [sp, #104]
  40a678:	strb	w1, [x0, #18]
  40a67c:	ldr	x0, [sp, #104]
  40a680:	ldr	x1, [sp, #88]
  40a684:	str	x1, [x0, #8]
  40a688:	ldr	x0, [sp, #104]
  40a68c:	strh	wzr, [x0, #16]
  40a690:	ldr	x0, [sp, #24]
  40a694:	add	x0, x0, #0x10
  40a698:	ldr	x2, [sp, #80]
  40a69c:	ldr	x1, [sp, #104]
  40a6a0:	bl	414470 <hash_insert_at@@Base>
  40a6a4:	ldr	x0, [sp, #16]
  40a6a8:	cmp	x0, #0x0
  40a6ac:	b.eq	40a590 <undefine_default_variables@@Base+0x668>  // b.none
  40a6b0:	ldr	x0, [sp, #96]
  40a6b4:	add	x0, x0, #0x13
  40a6b8:	ldr	x1, [sp, #16]
  40a6bc:	cmp	x1, x0
  40a6c0:	b.eq	40a714 <undefine_default_variables@@Base+0x7ec>  // b.none
  40a6c4:	ldr	x0, [sp, #96]
  40a6c8:	ldrb	w1, [x0, #19]
  40a6cc:	ldr	x0, [sp, #16]
  40a6d0:	ldrb	w0, [x0]
  40a6d4:	cmp	w1, w0
  40a6d8:	b.ne	40a590 <undefine_default_variables@@Base+0x668>  // b.any
  40a6dc:	ldr	x0, [sp, #96]
  40a6e0:	ldrb	w0, [x0, #19]
  40a6e4:	cmp	w0, #0x0
  40a6e8:	b.eq	40a714 <undefine_default_variables@@Base+0x7ec>  // b.none
  40a6ec:	ldr	x0, [sp, #96]
  40a6f0:	add	x0, x0, #0x13
  40a6f4:	add	x2, x0, #0x1
  40a6f8:	ldr	x0, [sp, #16]
  40a6fc:	add	x0, x0, #0x1
  40a700:	mov	x1, x0
  40a704:	mov	x0, x2
  40a708:	bl	406bc0 <strcmp@plt>
  40a70c:	cmp	w0, #0x0
  40a710:	b.ne	40a590 <undefine_default_variables@@Base+0x668>  // b.any
  40a714:	mov	w0, #0x1                   	// #1
  40a718:	b	40a758 <undefine_default_variables@@Base+0x830>
  40a71c:	nop
  40a720:	b	40a590 <undefine_default_variables@@Base+0x668>
  40a724:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a728:	add	x0, x0, #0x508
  40a72c:	ldr	w0, [x0]
  40a730:	sub	w1, w0, #0x1
  40a734:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40a738:	add	x0, x0, #0x508
  40a73c:	str	w1, [x0]
  40a740:	ldr	x0, [sp, #24]
  40a744:	ldr	x0, [x0, #104]
  40a748:	bl	406aa0 <closedir@plt>
  40a74c:	ldr	x0, [sp, #24]
  40a750:	str	xzr, [x0, #104]
  40a754:	mov	w0, #0x0                   	// #0
  40a758:	ldp	x29, x30, [sp], #112
  40a75c:	ret

000000000040a760 <dir_file_exists_p@@Base>:
  40a760:	stp	x29, x30, [sp, #-32]!
  40a764:	mov	x29, sp
  40a768:	str	x0, [sp, #24]
  40a76c:	str	x1, [sp, #16]
  40a770:	ldr	x0, [sp, #24]
  40a774:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40a778:	ldr	x0, [x0, #8]
  40a77c:	ldr	x1, [sp, #16]
  40a780:	bl	40a4d4 <undefine_default_variables@@Base+0x5ac>
  40a784:	ldp	x29, x30, [sp], #32
  40a788:	ret

000000000040a78c <file_exists_p@@Base>:
  40a78c:	stp	x29, x30, [sp, #-64]!
  40a790:	mov	x29, sp
  40a794:	str	x0, [x29, #24]
  40a798:	ldr	x0, [x29, #24]
  40a79c:	bl	407068 <ar_name@@Base>
  40a7a0:	cmp	w0, #0x0
  40a7a4:	b.eq	40a7c0 <file_exists_p@@Base+0x34>  // b.none
  40a7a8:	ldr	x0, [x29, #24]
  40a7ac:	bl	407224 <ar_member_date@@Base>
  40a7b0:	cmn	x0, #0x1
  40a7b4:	cset	w0, ne  // ne = any
  40a7b8:	and	w0, w0, #0xff
  40a7bc:	b	40a8a4 <file_exists_p@@Base+0x118>
  40a7c0:	mov	w1, #0x2f                  	// #47
  40a7c4:	ldr	x0, [x29, #24]
  40a7c8:	bl	406ae0 <strrchr@plt>
  40a7cc:	str	x0, [x29, #48]
  40a7d0:	ldr	x0, [x29, #48]
  40a7d4:	cmp	x0, #0x0
  40a7d8:	b.ne	40a7f0 <file_exists_p@@Base+0x64>  // b.any
  40a7dc:	ldr	x1, [x29, #24]
  40a7e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40a7e4:	add	x0, x0, #0x158
  40a7e8:	bl	40a760 <dir_file_exists_p@@Base>
  40a7ec:	b	40a8a4 <file_exists_p@@Base+0x118>
  40a7f0:	ldr	x0, [x29, #48]
  40a7f4:	str	x0, [x29, #40]
  40a7f8:	ldr	x1, [x29, #48]
  40a7fc:	ldr	x0, [x29, #24]
  40a800:	cmp	x1, x0
  40a804:	b.ne	40a818 <file_exists_p@@Base+0x8c>  // b.any
  40a808:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40a80c:	add	x0, x0, #0x160
  40a810:	str	x0, [x29, #56]
  40a814:	b	40a88c <file_exists_p@@Base+0x100>
  40a818:	ldr	x1, [x29, #48]
  40a81c:	ldr	x0, [x29, #24]
  40a820:	sub	x0, x1, x0
  40a824:	add	x0, x0, #0x1
  40a828:	add	x0, x0, #0xf
  40a82c:	lsr	x0, x0, #4
  40a830:	lsl	x0, x0, #4
  40a834:	sub	sp, sp, x0
  40a838:	mov	x0, sp
  40a83c:	add	x0, x0, #0xf
  40a840:	lsr	x0, x0, #4
  40a844:	lsl	x0, x0, #4
  40a848:	str	x0, [x29, #32]
  40a84c:	ldr	x1, [x29, #48]
  40a850:	ldr	x0, [x29, #24]
  40a854:	sub	x0, x1, x0
  40a858:	mov	x2, x0
  40a85c:	ldr	x1, [x29, #24]
  40a860:	ldr	x0, [x29, #32]
  40a864:	bl	4066b0 <memcpy@plt>
  40a868:	ldr	x1, [x29, #48]
  40a86c:	ldr	x0, [x29, #24]
  40a870:	sub	x0, x1, x0
  40a874:	mov	x1, x0
  40a878:	ldr	x0, [x29, #32]
  40a87c:	add	x0, x0, x1
  40a880:	strb	wzr, [x0]
  40a884:	ldr	x0, [x29, #32]
  40a888:	str	x0, [x29, #56]
  40a88c:	ldr	x0, [x29, #40]
  40a890:	add	x0, x0, #0x1
  40a894:	str	x0, [x29, #40]
  40a898:	ldr	x1, [x29, #40]
  40a89c:	ldr	x0, [x29, #56]
  40a8a0:	bl	40a760 <dir_file_exists_p@@Base>
  40a8a4:	mov	sp, x29
  40a8a8:	ldp	x29, x30, [sp], #64
  40a8ac:	ret

000000000040a8b0 <file_impossible@@Base>:
  40a8b0:	stp	x29, x30, [sp, #-96]!
  40a8b4:	mov	x29, sp
  40a8b8:	str	x0, [x29, #24]
  40a8bc:	ldr	x0, [x29, #24]
  40a8c0:	str	x0, [x29, #72]
  40a8c4:	mov	w1, #0x2f                  	// #47
  40a8c8:	ldr	x0, [x29, #72]
  40a8cc:	bl	406ae0 <strrchr@plt>
  40a8d0:	str	x0, [x29, #64]
  40a8d4:	ldr	x0, [x29, #64]
  40a8d8:	cmp	x0, #0x0
  40a8dc:	b.ne	40a8f4 <file_impossible@@Base+0x44>  // b.any
  40a8e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40a8e4:	add	x0, x0, #0x158
  40a8e8:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40a8ec:	str	x0, [x29, #88]
  40a8f0:	b	40a9b0 <file_impossible@@Base+0x100>
  40a8f4:	ldr	x0, [x29, #64]
  40a8f8:	str	x0, [x29, #56]
  40a8fc:	ldr	x1, [x29, #64]
  40a900:	ldr	x0, [x29, #72]
  40a904:	cmp	x1, x0
  40a908:	b.ne	40a91c <file_impossible@@Base+0x6c>  // b.any
  40a90c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40a910:	add	x0, x0, #0x160
  40a914:	str	x0, [x29, #80]
  40a918:	b	40a990 <file_impossible@@Base+0xe0>
  40a91c:	ldr	x1, [x29, #64]
  40a920:	ldr	x0, [x29, #72]
  40a924:	sub	x0, x1, x0
  40a928:	add	x0, x0, #0x1
  40a92c:	add	x0, x0, #0xf
  40a930:	lsr	x0, x0, #4
  40a934:	lsl	x0, x0, #4
  40a938:	sub	sp, sp, x0
  40a93c:	mov	x0, sp
  40a940:	add	x0, x0, #0xf
  40a944:	lsr	x0, x0, #4
  40a948:	lsl	x0, x0, #4
  40a94c:	str	x0, [x29, #48]
  40a950:	ldr	x1, [x29, #64]
  40a954:	ldr	x0, [x29, #72]
  40a958:	sub	x0, x1, x0
  40a95c:	mov	x2, x0
  40a960:	ldr	x1, [x29, #72]
  40a964:	ldr	x0, [x29, #48]
  40a968:	bl	4066b0 <memcpy@plt>
  40a96c:	ldr	x1, [x29, #64]
  40a970:	ldr	x0, [x29, #72]
  40a974:	sub	x0, x1, x0
  40a978:	mov	x1, x0
  40a97c:	ldr	x0, [x29, #48]
  40a980:	add	x0, x0, x1
  40a984:	strb	wzr, [x0]
  40a988:	ldr	x0, [x29, #48]
  40a98c:	str	x0, [x29, #80]
  40a990:	ldr	x0, [x29, #80]
  40a994:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40a998:	str	x0, [x29, #88]
  40a99c:	ldr	x0, [x29, #56]
  40a9a0:	add	x0, x0, #0x1
  40a9a4:	str	x0, [x29, #72]
  40a9a8:	ldr	x0, [x29, #72]
  40a9ac:	str	x0, [x29, #24]
  40a9b0:	ldr	x0, [x29, #88]
  40a9b4:	ldr	x0, [x0, #8]
  40a9b8:	cmp	x0, #0x0
  40a9bc:	b.ne	40a9d4 <file_impossible@@Base+0x124>  // b.any
  40a9c0:	mov	x0, #0x70                  	// #112
  40a9c4:	bl	4226d4 <xcalloc@@Base>
  40a9c8:	mov	x1, x0
  40a9cc:	ldr	x0, [x29, #88]
  40a9d0:	str	x1, [x0, #8]
  40a9d4:	ldr	x0, [x29, #88]
  40a9d8:	ldr	x0, [x0, #8]
  40a9dc:	ldr	x0, [x0, #16]
  40a9e0:	cmp	x0, #0x0
  40a9e4:	b.ne	40aa18 <file_impossible@@Base+0x168>  // b.any
  40a9e8:	ldr	x0, [x29, #88]
  40a9ec:	ldr	x0, [x0, #8]
  40a9f0:	add	x5, x0, #0x10
  40a9f4:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40a9f8:	add	x4, x0, #0x1d4
  40a9fc:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40aa00:	add	x3, x0, #0x1bc
  40aa04:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40aa08:	add	x2, x0, #0x17c
  40aa0c:	mov	x1, #0x6b                  	// #107
  40aa10:	mov	x0, x5
  40aa14:	bl	4140a8 <hash_init@@Base>
  40aa18:	mov	x0, #0x18                  	// #24
  40aa1c:	bl	42268c <xmalloc@@Base>
  40aa20:	str	x0, [x29, #40]
  40aa24:	ldr	x0, [x29, #24]
  40aa28:	bl	4066f0 <strlen@plt>
  40aa2c:	mov	x1, x0
  40aa30:	ldr	x0, [x29, #40]
  40aa34:	str	x1, [x0, #8]
  40aa38:	ldr	x0, [x29, #40]
  40aa3c:	ldr	x0, [x0, #8]
  40aa40:	mov	x1, x0
  40aa44:	ldr	x0, [x29, #24]
  40aa48:	bl	430da0 <strcache_add_len@@Base>
  40aa4c:	mov	x1, x0
  40aa50:	ldr	x0, [x29, #40]
  40aa54:	str	x1, [x0]
  40aa58:	ldr	x0, [x29, #40]
  40aa5c:	mov	w1, #0x1                   	// #1
  40aa60:	strh	w1, [x0, #16]
  40aa64:	ldr	x0, [x29, #88]
  40aa68:	ldr	x0, [x0, #8]
  40aa6c:	add	x0, x0, #0x10
  40aa70:	ldr	x1, [x29, #40]
  40aa74:	bl	4143fc <hash_insert@@Base>
  40aa78:	nop
  40aa7c:	mov	sp, x29
  40aa80:	ldp	x29, x30, [sp], #96
  40aa84:	ret

000000000040aa88 <file_impossible_p@@Base>:
  40aa88:	stp	x29, x30, [sp, #-112]!
  40aa8c:	mov	x29, sp
  40aa90:	str	x0, [x29, #24]
  40aa94:	mov	w1, #0x2f                  	// #47
  40aa98:	ldr	x0, [x29, #24]
  40aa9c:	bl	406ae0 <strrchr@plt>
  40aaa0:	str	x0, [x29, #88]
  40aaa4:	ldr	x0, [x29, #88]
  40aaa8:	cmp	x0, #0x0
  40aaac:	b.ne	40aac8 <file_impossible_p@@Base+0x40>  // b.any
  40aab0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40aab4:	add	x0, x0, #0x158
  40aab8:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40aabc:	ldr	x0, [x0, #8]
  40aac0:	str	x0, [x29, #104]
  40aac4:	b	40ab80 <file_impossible_p@@Base+0xf8>
  40aac8:	ldr	x0, [x29, #88]
  40aacc:	str	x0, [x29, #80]
  40aad0:	ldr	x1, [x29, #88]
  40aad4:	ldr	x0, [x29, #24]
  40aad8:	cmp	x1, x0
  40aadc:	b.ne	40aaf0 <file_impossible_p@@Base+0x68>  // b.any
  40aae0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40aae4:	add	x0, x0, #0x160
  40aae8:	str	x0, [x29, #96]
  40aaec:	b	40ab64 <file_impossible_p@@Base+0xdc>
  40aaf0:	ldr	x1, [x29, #88]
  40aaf4:	ldr	x0, [x29, #24]
  40aaf8:	sub	x0, x1, x0
  40aafc:	add	x0, x0, #0x1
  40ab00:	add	x0, x0, #0xf
  40ab04:	lsr	x0, x0, #4
  40ab08:	lsl	x0, x0, #4
  40ab0c:	sub	sp, sp, x0
  40ab10:	mov	x0, sp
  40ab14:	add	x0, x0, #0xf
  40ab18:	lsr	x0, x0, #4
  40ab1c:	lsl	x0, x0, #4
  40ab20:	str	x0, [x29, #72]
  40ab24:	ldr	x1, [x29, #88]
  40ab28:	ldr	x0, [x29, #24]
  40ab2c:	sub	x0, x1, x0
  40ab30:	mov	x2, x0
  40ab34:	ldr	x1, [x29, #24]
  40ab38:	ldr	x0, [x29, #72]
  40ab3c:	bl	4066b0 <memcpy@plt>
  40ab40:	ldr	x1, [x29, #88]
  40ab44:	ldr	x0, [x29, #24]
  40ab48:	sub	x0, x1, x0
  40ab4c:	mov	x1, x0
  40ab50:	ldr	x0, [x29, #72]
  40ab54:	add	x0, x0, x1
  40ab58:	strb	wzr, [x0]
  40ab5c:	ldr	x0, [x29, #72]
  40ab60:	str	x0, [x29, #96]
  40ab64:	ldr	x0, [x29, #96]
  40ab68:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40ab6c:	ldr	x0, [x0, #8]
  40ab70:	str	x0, [x29, #104]
  40ab74:	ldr	x0, [x29, #80]
  40ab78:	add	x0, x0, #0x1
  40ab7c:	str	x0, [x29, #24]
  40ab80:	ldr	x0, [x29, #104]
  40ab84:	cmp	x0, #0x0
  40ab88:	b.eq	40ab9c <file_impossible_p@@Base+0x114>  // b.none
  40ab8c:	ldr	x0, [x29, #104]
  40ab90:	ldr	x0, [x0, #16]
  40ab94:	cmp	x0, #0x0
  40ab98:	b.ne	40aba4 <file_impossible_p@@Base+0x11c>  // b.any
  40ab9c:	mov	w0, #0x0                   	// #0
  40aba0:	b	40abe8 <file_impossible_p@@Base+0x160>
  40aba4:	ldr	x0, [x29, #24]
  40aba8:	str	x0, [x29, #40]
  40abac:	ldr	x0, [x29, #24]
  40abb0:	bl	4066f0 <strlen@plt>
  40abb4:	str	x0, [x29, #48]
  40abb8:	ldr	x0, [x29, #104]
  40abbc:	add	x0, x0, #0x10
  40abc0:	add	x1, x29, #0x28
  40abc4:	bl	414398 <hash_find_item@@Base>
  40abc8:	str	x0, [x29, #64]
  40abcc:	ldr	x0, [x29, #64]
  40abd0:	cmp	x0, #0x0
  40abd4:	b.eq	40abe4 <file_impossible_p@@Base+0x15c>  // b.none
  40abd8:	ldr	x0, [x29, #64]
  40abdc:	ldrsh	w0, [x0, #16]
  40abe0:	b	40abe8 <file_impossible_p@@Base+0x160>
  40abe4:	mov	w0, #0x0                   	// #0
  40abe8:	mov	sp, x29
  40abec:	ldp	x29, x30, [sp], #112
  40abf0:	ret

000000000040abf4 <dir_name@@Base>:
  40abf4:	stp	x29, x30, [sp, #-32]!
  40abf8:	mov	x29, sp
  40abfc:	str	x0, [sp, #24]
  40ac00:	ldr	x0, [sp, #24]
  40ac04:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40ac08:	ldr	x0, [x0]
  40ac0c:	ldp	x29, x30, [sp], #32
  40ac10:	ret

000000000040ac14 <print_dir_data_base@@Base>:
  40ac14:	stp	x29, x30, [sp, #-80]!
  40ac18:	mov	x29, sp
  40ac1c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ac20:	add	x0, x0, #0x168
  40ac24:	bl	406e40 <gettext@plt>
  40ac28:	bl	406b60 <puts@plt>
  40ac2c:	str	wzr, [sp, #72]
  40ac30:	ldr	w0, [sp, #72]
  40ac34:	str	w0, [sp, #76]
  40ac38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ac3c:	add	x0, x0, #0x4b0
  40ac40:	ldr	x0, [x0]
  40ac44:	str	x0, [sp, #64]
  40ac48:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ac4c:	add	x0, x0, #0x4b0
  40ac50:	ldr	x0, [x0, #32]
  40ac54:	lsl	x0, x0, #3
  40ac58:	ldr	x1, [sp, #64]
  40ac5c:	add	x0, x1, x0
  40ac60:	str	x0, [sp, #40]
  40ac64:	b	40af58 <print_dir_data_base@@Base+0x344>
  40ac68:	ldr	x0, [sp, #64]
  40ac6c:	ldr	x0, [x0]
  40ac70:	str	x0, [sp, #32]
  40ac74:	ldr	x0, [sp, #32]
  40ac78:	cmp	x0, #0x0
  40ac7c:	b.eq	40af4c <print_dir_data_base@@Base+0x338>  // b.none
  40ac80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ac84:	add	x0, x0, #0x40
  40ac88:	ldr	x0, [x0]
  40ac8c:	ldr	x1, [sp, #32]
  40ac90:	cmp	x1, x0
  40ac94:	b.eq	40af4c <print_dir_data_base@@Base+0x338>  // b.none
  40ac98:	ldr	x0, [sp, #32]
  40ac9c:	ldr	x0, [x0, #8]
  40aca0:	cmp	x0, #0x0
  40aca4:	b.ne	40acd0 <print_dir_data_base@@Base+0xbc>  // b.any
  40aca8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40acac:	add	x0, x0, #0x178
  40acb0:	bl	406e40 <gettext@plt>
  40acb4:	mov	x2, x0
  40acb8:	ldr	x0, [sp, #32]
  40acbc:	ldr	x0, [x0]
  40acc0:	mov	x1, x0
  40acc4:	mov	x0, x2
  40acc8:	bl	406dc0 <printf@plt>
  40accc:	b	40af4c <print_dir_data_base@@Base+0x338>
  40acd0:	ldr	x0, [sp, #32]
  40acd4:	ldr	x0, [x0, #8]
  40acd8:	ldr	x0, [x0, #16]
  40acdc:	cmp	x0, #0x0
  40ace0:	b.ne	40ad28 <print_dir_data_base@@Base+0x114>  // b.any
  40ace4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ace8:	add	x0, x0, #0x198
  40acec:	bl	406e40 <gettext@plt>
  40acf0:	mov	x4, x0
  40acf4:	ldr	x0, [sp, #32]
  40acf8:	ldr	x1, [x0]
  40acfc:	ldr	x0, [sp, #32]
  40ad00:	ldr	x0, [x0, #8]
  40ad04:	ldr	x0, [x0]
  40ad08:	mov	x2, x0
  40ad0c:	ldr	x0, [sp, #32]
  40ad10:	ldr	x0, [x0, #8]
  40ad14:	ldr	x0, [x0, #8]
  40ad18:	mov	x3, x0
  40ad1c:	mov	x0, x4
  40ad20:	bl	406dc0 <printf@plt>
  40ad24:	b	40af4c <print_dir_data_base@@Base+0x338>
  40ad28:	str	wzr, [sp, #60]
  40ad2c:	str	wzr, [sp, #56]
  40ad30:	ldr	x0, [sp, #32]
  40ad34:	ldr	x0, [x0, #8]
  40ad38:	ldr	x0, [x0, #16]
  40ad3c:	str	x0, [sp, #48]
  40ad40:	ldr	x0, [sp, #32]
  40ad44:	ldr	x0, [x0, #8]
  40ad48:	ldr	x0, [x0, #48]
  40ad4c:	lsl	x0, x0, #3
  40ad50:	ldr	x1, [sp, #48]
  40ad54:	add	x0, x1, x0
  40ad58:	str	x0, [sp, #24]
  40ad5c:	b	40adc8 <print_dir_data_base@@Base+0x1b4>
  40ad60:	ldr	x0, [sp, #48]
  40ad64:	ldr	x0, [x0]
  40ad68:	str	x0, [sp, #16]
  40ad6c:	ldr	x0, [sp, #16]
  40ad70:	cmp	x0, #0x0
  40ad74:	b.eq	40adbc <print_dir_data_base@@Base+0x1a8>  // b.none
  40ad78:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ad7c:	add	x0, x0, #0x40
  40ad80:	ldr	x0, [x0]
  40ad84:	ldr	x1, [sp, #16]
  40ad88:	cmp	x1, x0
  40ad8c:	b.eq	40adbc <print_dir_data_base@@Base+0x1a8>  // b.none
  40ad90:	ldr	x0, [sp, #16]
  40ad94:	ldrsh	w0, [x0, #16]
  40ad98:	cmp	w0, #0x0
  40ad9c:	b.eq	40adb0 <print_dir_data_base@@Base+0x19c>  // b.none
  40ada0:	ldr	w0, [sp, #56]
  40ada4:	add	w0, w0, #0x1
  40ada8:	str	w0, [sp, #56]
  40adac:	b	40adbc <print_dir_data_base@@Base+0x1a8>
  40adb0:	ldr	w0, [sp, #60]
  40adb4:	add	w0, w0, #0x1
  40adb8:	str	w0, [sp, #60]
  40adbc:	ldr	x0, [sp, #48]
  40adc0:	add	x0, x0, #0x8
  40adc4:	str	x0, [sp, #48]
  40adc8:	ldr	x1, [sp, #48]
  40adcc:	ldr	x0, [sp, #24]
  40add0:	cmp	x1, x0
  40add4:	b.cc	40ad60 <print_dir_data_base@@Base+0x14c>  // b.lo, b.ul, b.last
  40add8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40addc:	add	x0, x0, #0x1d0
  40ade0:	bl	406e40 <gettext@plt>
  40ade4:	mov	x4, x0
  40ade8:	ldr	x0, [sp, #32]
  40adec:	ldr	x1, [x0]
  40adf0:	ldr	x0, [sp, #32]
  40adf4:	ldr	x0, [x0, #8]
  40adf8:	ldr	x0, [x0]
  40adfc:	mov	x2, x0
  40ae00:	ldr	x0, [sp, #32]
  40ae04:	ldr	x0, [x0, #8]
  40ae08:	ldr	x0, [x0, #8]
  40ae0c:	mov	x3, x0
  40ae10:	mov	x0, x4
  40ae14:	bl	406dc0 <printf@plt>
  40ae18:	ldr	w0, [sp, #60]
  40ae1c:	cmp	w0, #0x0
  40ae20:	b.ne	40ae50 <print_dir_data_base@@Base+0x23c>  // b.any
  40ae24:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ae28:	add	x0, x0, #0x1f0
  40ae2c:	bl	406e40 <gettext@plt>
  40ae30:	mov	x2, x0
  40ae34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ae38:	add	x0, x0, #0x400
  40ae3c:	ldr	x0, [x0]
  40ae40:	mov	x1, x0
  40ae44:	mov	x0, x2
  40ae48:	bl	406700 <fputs@plt>
  40ae4c:	b	40ae60 <print_dir_data_base@@Base+0x24c>
  40ae50:	ldr	w1, [sp, #60]
  40ae54:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ae58:	add	x0, x0, #0x1f8
  40ae5c:	bl	406dc0 <printf@plt>
  40ae60:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ae64:	add	x0, x0, #0x200
  40ae68:	bl	406e40 <gettext@plt>
  40ae6c:	mov	x2, x0
  40ae70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ae74:	add	x0, x0, #0x400
  40ae78:	ldr	x0, [x0]
  40ae7c:	mov	x1, x0
  40ae80:	mov	x0, x2
  40ae84:	bl	406700 <fputs@plt>
  40ae88:	ldr	w0, [sp, #56]
  40ae8c:	cmp	w0, #0x0
  40ae90:	b.ne	40aec0 <print_dir_data_base@@Base+0x2ac>  // b.any
  40ae94:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ae98:	add	x0, x0, #0x210
  40ae9c:	bl	406e40 <gettext@plt>
  40aea0:	mov	x2, x0
  40aea4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40aea8:	add	x0, x0, #0x400
  40aeac:	ldr	x0, [x0]
  40aeb0:	mov	x1, x0
  40aeb4:	mov	x0, x2
  40aeb8:	bl	406700 <fputs@plt>
  40aebc:	b	40aed0 <print_dir_data_base@@Base+0x2bc>
  40aec0:	ldr	w1, [sp, #56]
  40aec4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40aec8:	add	x0, x0, #0x1f8
  40aecc:	bl	406dc0 <printf@plt>
  40aed0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40aed4:	add	x0, x0, #0x218
  40aed8:	bl	406e40 <gettext@plt>
  40aedc:	mov	x2, x0
  40aee0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40aee4:	add	x0, x0, #0x400
  40aee8:	ldr	x0, [x0]
  40aeec:	mov	x1, x0
  40aef0:	mov	x0, x2
  40aef4:	bl	406700 <fputs@plt>
  40aef8:	ldr	x0, [sp, #32]
  40aefc:	ldr	x0, [x0, #8]
  40af00:	ldr	x0, [x0, #104]
  40af04:	cmp	x0, #0x0
  40af08:	b.ne	40af1c <print_dir_data_base@@Base+0x308>  // b.any
  40af0c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40af10:	add	x0, x0, #0x158
  40af14:	bl	406b60 <puts@plt>
  40af18:	b	40af2c <print_dir_data_base@@Base+0x318>
  40af1c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40af20:	add	x0, x0, #0x230
  40af24:	bl	406e40 <gettext@plt>
  40af28:	bl	406b60 <puts@plt>
  40af2c:	ldr	w1, [sp, #76]
  40af30:	ldr	w0, [sp, #60]
  40af34:	add	w0, w1, w0
  40af38:	str	w0, [sp, #76]
  40af3c:	ldr	w1, [sp, #72]
  40af40:	ldr	w0, [sp, #56]
  40af44:	add	w0, w1, w0
  40af48:	str	w0, [sp, #72]
  40af4c:	ldr	x0, [sp, #64]
  40af50:	add	x0, x0, #0x8
  40af54:	str	x0, [sp, #64]
  40af58:	ldr	x1, [sp, #64]
  40af5c:	ldr	x0, [sp, #40]
  40af60:	cmp	x1, x0
  40af64:	b.cc	40ac68 <print_dir_data_base@@Base+0x54>  // b.lo, b.ul, b.last
  40af68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40af6c:	add	x0, x0, #0x400
  40af70:	ldr	x0, [x0]
  40af74:	mov	x3, x0
  40af78:	mov	x2, #0x3                   	// #3
  40af7c:	mov	x1, #0x1                   	// #1
  40af80:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40af84:	add	x0, x0, #0x240
  40af88:	bl	406c50 <fwrite@plt>
  40af8c:	ldr	w0, [sp, #76]
  40af90:	cmp	w0, #0x0
  40af94:	b.ne	40afc4 <print_dir_data_base@@Base+0x3b0>  // b.any
  40af98:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40af9c:	add	x0, x0, #0x1f0
  40afa0:	bl	406e40 <gettext@plt>
  40afa4:	mov	x2, x0
  40afa8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40afac:	add	x0, x0, #0x400
  40afb0:	ldr	x0, [x0]
  40afb4:	mov	x1, x0
  40afb8:	mov	x0, x2
  40afbc:	bl	406700 <fputs@plt>
  40afc0:	b	40afd4 <print_dir_data_base@@Base+0x3c0>
  40afc4:	ldr	w1, [sp, #76]
  40afc8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40afcc:	add	x0, x0, #0x1f8
  40afd0:	bl	406dc0 <printf@plt>
  40afd4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40afd8:	add	x0, x0, #0x200
  40afdc:	bl	406e40 <gettext@plt>
  40afe0:	mov	x2, x0
  40afe4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40afe8:	add	x0, x0, #0x400
  40afec:	ldr	x0, [x0]
  40aff0:	mov	x1, x0
  40aff4:	mov	x0, x2
  40aff8:	bl	406700 <fputs@plt>
  40affc:	ldr	w0, [sp, #72]
  40b000:	cmp	w0, #0x0
  40b004:	b.ne	40b034 <print_dir_data_base@@Base+0x420>  // b.any
  40b008:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b00c:	add	x0, x0, #0x210
  40b010:	bl	406e40 <gettext@plt>
  40b014:	mov	x2, x0
  40b018:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b01c:	add	x0, x0, #0x400
  40b020:	ldr	x0, [x0]
  40b024:	mov	x1, x0
  40b028:	mov	x0, x2
  40b02c:	bl	406700 <fputs@plt>
  40b030:	b	40b044 <print_dir_data_base@@Base+0x430>
  40b034:	ldr	w1, [sp, #72]
  40b038:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b03c:	add	x0, x0, #0x1f8
  40b040:	bl	406dc0 <printf@plt>
  40b044:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b048:	add	x0, x0, #0x248
  40b04c:	bl	406e40 <gettext@plt>
  40b050:	mov	x2, x0
  40b054:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b058:	add	x0, x0, #0x4b0
  40b05c:	ldr	x0, [x0, #48]
  40b060:	mov	x1, x0
  40b064:	mov	x0, x2
  40b068:	bl	406dc0 <printf@plt>
  40b06c:	nop
  40b070:	ldp	x29, x30, [sp], #80
  40b074:	ret
  40b078:	stp	x29, x30, [sp, #-48]!
  40b07c:	mov	x29, sp
  40b080:	str	x0, [sp, #24]
  40b084:	ldr	x0, [sp, #24]
  40b088:	bl	40a268 <undefine_default_variables@@Base+0x340>
  40b08c:	str	x0, [sp, #40]
  40b090:	ldr	x0, [sp, #40]
  40b094:	ldr	x0, [x0, #8]
  40b098:	cmp	x0, #0x0
  40b09c:	b.eq	40b0b4 <print_dir_data_base@@Base+0x4a0>  // b.none
  40b0a0:	ldr	x0, [sp, #40]
  40b0a4:	ldr	x0, [x0, #8]
  40b0a8:	ldr	x0, [x0, #16]
  40b0ac:	cmp	x0, #0x0
  40b0b0:	b.ne	40b0bc <print_dir_data_base@@Base+0x4a8>  // b.any
  40b0b4:	mov	x0, #0x0                   	// #0
  40b0b8:	b	40b100 <print_dir_data_base@@Base+0x4ec>
  40b0bc:	ldr	x0, [sp, #40]
  40b0c0:	ldr	x0, [x0, #8]
  40b0c4:	mov	x1, #0x0                   	// #0
  40b0c8:	bl	40a4d4 <undefine_default_variables@@Base+0x5ac>
  40b0cc:	mov	x0, #0x10                  	// #16
  40b0d0:	bl	42268c <xmalloc@@Base>
  40b0d4:	str	x0, [sp, #32]
  40b0d8:	ldr	x0, [sp, #40]
  40b0dc:	ldr	x1, [x0, #8]
  40b0e0:	ldr	x0, [sp, #32]
  40b0e4:	str	x1, [x0]
  40b0e8:	ldr	x0, [sp, #32]
  40b0ec:	ldr	x0, [x0]
  40b0f0:	ldr	x1, [x0, #16]
  40b0f4:	ldr	x0, [sp, #32]
  40b0f8:	str	x1, [x0, #8]
  40b0fc:	ldr	x0, [sp, #32]
  40b100:	ldp	x29, x30, [sp], #48
  40b104:	ret
  40b108:	stp	x29, x30, [sp, #-96]!
  40b10c:	mov	x29, sp
  40b110:	str	x0, [sp, #24]
  40b114:	ldr	x0, [sp, #24]
  40b118:	str	x0, [sp, #88]
  40b11c:	ldr	x0, [sp, #88]
  40b120:	ldr	x0, [x0]
  40b124:	str	x0, [sp, #80]
  40b128:	ldr	x0, [sp, #80]
  40b12c:	ldr	x1, [x0, #16]
  40b130:	ldr	x0, [sp, #80]
  40b134:	ldr	x0, [x0, #48]
  40b138:	lsl	x0, x0, #3
  40b13c:	add	x0, x1, x0
  40b140:	str	x0, [sp, #72]
  40b144:	b	40b298 <print_dir_data_base@@Base+0x684>
  40b148:	ldr	x0, [sp, #88]
  40b14c:	ldr	x0, [x0, #8]
  40b150:	add	x2, x0, #0x8
  40b154:	ldr	x1, [sp, #88]
  40b158:	str	x2, [x1, #8]
  40b15c:	ldr	x0, [x0]
  40b160:	str	x0, [sp, #64]
  40b164:	ldr	x0, [sp, #64]
  40b168:	cmp	x0, #0x0
  40b16c:	b.eq	40b298 <print_dir_data_base@@Base+0x684>  // b.none
  40b170:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b174:	add	x0, x0, #0x40
  40b178:	ldr	x0, [x0]
  40b17c:	ldr	x1, [sp, #64]
  40b180:	cmp	x1, x0
  40b184:	b.eq	40b298 <print_dir_data_base@@Base+0x684>  // b.none
  40b188:	ldr	x0, [sp, #64]
  40b18c:	ldrsh	w0, [x0, #16]
  40b190:	cmp	w0, #0x0
  40b194:	b.ne	40b298 <print_dir_data_base@@Base+0x684>  // b.any
  40b198:	ldr	x0, [sp, #64]
  40b19c:	ldr	x0, [x0, #8]
  40b1a0:	add	x0, x0, #0x1
  40b1a4:	str	x0, [sp, #56]
  40b1a8:	ldr	x0, [sp, #56]
  40b1ac:	add	x0, x0, #0x18
  40b1b0:	str	x0, [sp, #48]
  40b1b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b1b8:	add	x0, x0, #0x510
  40b1bc:	ldr	x0, [x0]
  40b1c0:	ldr	x1, [sp, #48]
  40b1c4:	cmp	x1, x0
  40b1c8:	b.ls	40b244 <print_dir_data_base@@Base+0x630>  // b.plast
  40b1cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b1d0:	add	x0, x0, #0x510
  40b1d4:	ldr	x0, [x0]
  40b1d8:	lsl	x1, x0, #1
  40b1dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b1e0:	add	x0, x0, #0x510
  40b1e4:	str	x1, [x0]
  40b1e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b1ec:	add	x0, x0, #0x510
  40b1f0:	ldr	x0, [x0]
  40b1f4:	ldr	x1, [sp, #48]
  40b1f8:	cmp	x1, x0
  40b1fc:	b.ls	40b210 <print_dir_data_base@@Base+0x5fc>  // b.plast
  40b200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b204:	add	x0, x0, #0x510
  40b208:	ldr	x1, [sp, #48]
  40b20c:	str	x1, [x0]
  40b210:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b214:	add	x0, x0, #0x518
  40b218:	ldr	x2, [x0]
  40b21c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b220:	add	x0, x0, #0x510
  40b224:	ldr	x0, [x0]
  40b228:	mov	x1, x0
  40b22c:	mov	x0, x2
  40b230:	bl	422720 <xrealloc@@Base>
  40b234:	mov	x1, x0
  40b238:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b23c:	add	x0, x0, #0x518
  40b240:	str	x1, [x0]
  40b244:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b248:	add	x0, x0, #0x518
  40b24c:	ldr	x0, [x0]
  40b250:	str	x0, [sp, #40]
  40b254:	ldr	x0, [sp, #40]
  40b258:	mov	x1, #0x1                   	// #1
  40b25c:	str	x1, [x0]
  40b260:	ldr	x0, [sp, #64]
  40b264:	ldrb	w1, [x0, #18]
  40b268:	ldr	x0, [sp, #40]
  40b26c:	strb	w1, [x0, #18]
  40b270:	ldr	x0, [sp, #40]
  40b274:	add	x3, x0, #0x13
  40b278:	ldr	x0, [sp, #64]
  40b27c:	ldr	x0, [x0]
  40b280:	ldr	x2, [sp, #56]
  40b284:	mov	x1, x0
  40b288:	mov	x0, x3
  40b28c:	bl	4066b0 <memcpy@plt>
  40b290:	ldr	x0, [sp, #40]
  40b294:	b	40b2b0 <print_dir_data_base@@Base+0x69c>
  40b298:	ldr	x0, [sp, #88]
  40b29c:	ldr	x0, [x0, #8]
  40b2a0:	ldr	x1, [sp, #72]
  40b2a4:	cmp	x1, x0
  40b2a8:	b.hi	40b148 <print_dir_data_base@@Base+0x534>  // b.pmore
  40b2ac:	mov	x0, #0x0                   	// #0
  40b2b0:	ldp	x29, x30, [sp], #96
  40b2b4:	ret

000000000040b2b8 <dir_setup_glob@@Base>:
  40b2b8:	sub	sp, sp, #0x10
  40b2bc:	str	x0, [sp, #8]
  40b2c0:	ldr	x0, [sp, #8]
  40b2c4:	str	xzr, [x0, #16]
  40b2c8:	ldr	x0, [sp, #8]
  40b2cc:	adrp	x1, 40b000 <print_dir_data_base@@Base+0x3ec>
  40b2d0:	add	x1, x1, #0x78
  40b2d4:	str	x1, [x0, #48]
  40b2d8:	ldr	x0, [sp, #8]
  40b2dc:	adrp	x1, 40b000 <print_dir_data_base@@Base+0x3ec>
  40b2e0:	add	x1, x1, #0x108
  40b2e4:	str	x1, [x0, #40]
  40b2e8:	ldr	x0, [sp, #8]
  40b2ec:	adrp	x1, 406000 <memcpy@plt-0x6b0>
  40b2f0:	add	x1, x1, #0xc00
  40b2f4:	str	x1, [x0, #32]
  40b2f8:	ldr	x0, [sp, #8]
  40b2fc:	adrp	x1, 436000 <fd_noinherit@@Base+0x64>
  40b300:	add	x1, x1, #0xb90
  40b304:	str	x1, [x0, #56]
  40b308:	ldr	x0, [sp, #8]
  40b30c:	adrp	x1, 436000 <fd_noinherit@@Base+0x64>
  40b310:	add	x1, x1, #0xb70
  40b314:	str	x1, [x0, #64]
  40b318:	nop
  40b31c:	add	sp, sp, #0x10
  40b320:	ret

000000000040b324 <hash_init_directories@@Base>:
  40b324:	stp	x29, x30, [sp, #-16]!
  40b328:	mov	x29, sp
  40b32c:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40b330:	add	x4, x0, #0x128
  40b334:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40b338:	add	x3, x0, #0x110
  40b33c:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40b340:	add	x2, x0, #0xd0
  40b344:	mov	x1, #0xc7                  	// #199
  40b348:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b34c:	add	x0, x0, #0x4b0
  40b350:	bl	4140a8 <hash_init@@Base>
  40b354:	adrp	x0, 40a000 <undefine_default_variables@@Base+0xd8>
  40b358:	add	x4, x0, #0x1c
  40b35c:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  40b360:	add	x3, x0, #0xfd8
  40b364:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  40b368:	add	x2, x0, #0xf9c
  40b36c:	mov	x1, #0xc7                  	// #199
  40b370:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b374:	add	x0, x0, #0x458
  40b378:	bl	4140a8 <hash_init@@Base>
  40b37c:	nop
  40b380:	ldp	x29, x30, [sp], #16
  40b384:	ret

000000000040b388 <variable_buffer_output@@Base>:
  40b388:	stp	x29, x30, [sp, #-64]!
  40b38c:	mov	x29, sp
  40b390:	str	x0, [sp, #40]
  40b394:	str	x1, [sp, #32]
  40b398:	str	x2, [sp, #24]
  40b39c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b3a0:	add	x0, x0, #0xa00
  40b3a4:	ldr	x0, [x0]
  40b3a8:	ldr	x1, [sp, #40]
  40b3ac:	sub	x0, x1, x0
  40b3b0:	mov	x1, x0
  40b3b4:	ldr	x0, [sp, #24]
  40b3b8:	add	x0, x0, x1
  40b3bc:	str	x0, [sp, #56]
  40b3c0:	ldr	x0, [sp, #56]
  40b3c4:	add	x1, x0, #0x5
  40b3c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b3cc:	add	x0, x0, #0x520
  40b3d0:	ldr	x0, [x0]
  40b3d4:	cmp	x1, x0
  40b3d8:	b.ls	40b46c <variable_buffer_output@@Base+0xe4>  // b.plast
  40b3dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b3e0:	add	x0, x0, #0xa00
  40b3e4:	ldr	x0, [x0]
  40b3e8:	ldr	x1, [sp, #40]
  40b3ec:	sub	x0, x1, x0
  40b3f0:	str	x0, [sp, #48]
  40b3f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b3f8:	add	x0, x0, #0x520
  40b3fc:	ldr	x0, [x0]
  40b400:	lsl	x1, x0, #1
  40b404:	ldr	x0, [sp, #56]
  40b408:	add	x0, x0, #0x64
  40b40c:	cmp	x1, x0
  40b410:	csel	x1, x1, x0, cs  // cs = hs, nlast
  40b414:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b418:	add	x0, x0, #0x520
  40b41c:	str	x1, [x0]
  40b420:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b424:	add	x0, x0, #0xa00
  40b428:	ldr	x2, [x0]
  40b42c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b430:	add	x0, x0, #0x520
  40b434:	ldr	x0, [x0]
  40b438:	mov	x1, x0
  40b43c:	mov	x0, x2
  40b440:	bl	422720 <xrealloc@@Base>
  40b444:	mov	x1, x0
  40b448:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b44c:	add	x0, x0, #0xa00
  40b450:	str	x1, [x0]
  40b454:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b458:	add	x0, x0, #0xa00
  40b45c:	ldr	x1, [x0]
  40b460:	ldr	x0, [sp, #48]
  40b464:	add	x0, x1, x0
  40b468:	str	x0, [sp, #40]
  40b46c:	ldr	x2, [sp, #24]
  40b470:	ldr	x1, [sp, #32]
  40b474:	ldr	x0, [sp, #40]
  40b478:	bl	4066b0 <memcpy@plt>
  40b47c:	ldr	x1, [sp, #40]
  40b480:	ldr	x0, [sp, #24]
  40b484:	add	x0, x1, x0
  40b488:	ldp	x29, x30, [sp], #64
  40b48c:	ret
  40b490:	stp	x29, x30, [sp, #-16]!
  40b494:	mov	x29, sp
  40b498:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b49c:	add	x0, x0, #0xa00
  40b4a0:	ldr	x0, [x0]
  40b4a4:	cmp	x0, #0x0
  40b4a8:	b.ne	40b4ec <variable_buffer_output@@Base+0x164>  // b.any
  40b4ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b4b0:	add	x0, x0, #0x520
  40b4b4:	mov	x1, #0xc8                  	// #200
  40b4b8:	str	x1, [x0]
  40b4bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b4c0:	add	x0, x0, #0x520
  40b4c4:	ldr	x0, [x0]
  40b4c8:	bl	42268c <xmalloc@@Base>
  40b4cc:	mov	x1, x0
  40b4d0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b4d4:	add	x0, x0, #0xa00
  40b4d8:	str	x1, [x0]
  40b4dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b4e0:	add	x0, x0, #0xa00
  40b4e4:	ldr	x0, [x0]
  40b4e8:	strb	wzr, [x0]
  40b4ec:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b4f0:	add	x0, x0, #0xa00
  40b4f4:	ldr	x0, [x0]
  40b4f8:	ldp	x29, x30, [sp], #16
  40b4fc:	ret

000000000040b500 <recursively_expand_for_file@@Base>:
  40b500:	stp	x29, x30, [sp, #-96]!
  40b504:	mov	x29, sp
  40b508:	stp	x19, x20, [sp, #16]
  40b50c:	str	x0, [sp, #40]
  40b510:	str	x1, [sp, #32]
  40b514:	str	xzr, [sp, #80]
  40b518:	str	wzr, [sp, #76]
  40b51c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  40b520:	add	x0, x0, #0xcd8
  40b524:	ldr	x0, [x0]
  40b528:	str	x0, [sp, #64]
  40b52c:	ldr	x0, [sp, #40]
  40b530:	ldr	x0, [x0, #16]
  40b534:	cmp	x0, #0x0
  40b538:	b.eq	40b558 <recursively_expand_for_file@@Base+0x58>  // b.none
  40b53c:	ldr	x0, [sp, #40]
  40b540:	add	x0, x0, #0x10
  40b544:	str	x0, [sp, #56]
  40b548:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  40b54c:	add	x0, x0, #0xcd8
  40b550:	add	x1, sp, #0x38
  40b554:	str	x1, [x0]
  40b558:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b55c:	add	x0, x0, #0x40
  40b560:	ldr	x0, [x0]
  40b564:	cmp	x0, #0x0
  40b568:	b.ne	40b588 <recursively_expand_for_file@@Base+0x88>  // b.any
  40b56c:	mov	w0, #0x1                   	// #1
  40b570:	str	w0, [sp, #76]
  40b574:	ldr	x0, [sp, #40]
  40b578:	add	x1, x0, #0x10
  40b57c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b580:	add	x0, x0, #0x40
  40b584:	str	x1, [x0]
  40b588:	ldr	x0, [sp, #40]
  40b58c:	ldrb	w0, [x0, #44]
  40b590:	and	w0, w0, #0x40
  40b594:	and	w0, w0, #0xff
  40b598:	cmp	w0, #0x0
  40b59c:	b.eq	40b630 <recursively_expand_for_file@@Base+0x130>  // b.none
  40b5a0:	ldr	x0, [sp, #40]
  40b5a4:	ldr	w0, [x0, #44]
  40b5a8:	and	w0, w0, #0x7fff00
  40b5ac:	cmp	w0, #0x0
  40b5b0:	b.ne	40b600 <recursively_expand_for_file@@Base+0x100>  // b.any
  40b5b4:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  40b5b8:	add	x0, x0, #0xcd8
  40b5bc:	ldr	x0, [x0]
  40b5c0:	ldr	x19, [x0]
  40b5c4:	ldr	x0, [sp, #40]
  40b5c8:	ldr	x0, [x0]
  40b5cc:	bl	4066f0 <strlen@plt>
  40b5d0:	mov	x20, x0
  40b5d4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b5d8:	add	x0, x0, #0x270
  40b5dc:	bl	406e40 <gettext@plt>
  40b5e0:	mov	x1, x0
  40b5e4:	ldr	x0, [sp, #40]
  40b5e8:	ldr	x0, [x0]
  40b5ec:	mov	x3, x0
  40b5f0:	mov	x2, x1
  40b5f4:	mov	x1, x20
  40b5f8:	mov	x0, x19
  40b5fc:	bl	424098 <fatal@@Base>
  40b600:	ldr	x0, [sp, #40]
  40b604:	ldr	w0, [x0, #44]
  40b608:	ubfx	x0, x0, #8, #15
  40b60c:	and	w1, w0, #0xffff
  40b610:	mov	w0, #0x7fff                	// #32767
  40b614:	add	w0, w1, w0
  40b618:	and	w0, w0, #0x7fff
  40b61c:	and	w2, w0, #0xffff
  40b620:	ldr	x1, [sp, #40]
  40b624:	ldr	w0, [x1, #44]
  40b628:	bfi	w0, w2, #8, #15
  40b62c:	str	w0, [x1, #44]
  40b630:	ldr	x0, [sp, #32]
  40b634:	cmp	x0, #0x0
  40b638:	b.eq	40b660 <recursively_expand_for_file@@Base+0x160>  // b.none
  40b63c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b640:	add	x0, x0, #0x3b8
  40b644:	ldr	x0, [x0]
  40b648:	str	x0, [sp, #80]
  40b64c:	ldr	x0, [sp, #32]
  40b650:	ldr	x1, [x0, #80]
  40b654:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b658:	add	x0, x0, #0x3b8
  40b65c:	str	x1, [x0]
  40b660:	ldr	x0, [sp, #40]
  40b664:	ldrb	w1, [x0, #44]
  40b668:	orr	w1, w1, #0x40
  40b66c:	strb	w1, [x0, #44]
  40b670:	ldr	x0, [sp, #40]
  40b674:	ldrb	w0, [x0, #44]
  40b678:	and	w0, w0, #0x2
  40b67c:	and	w0, w0, #0xff
  40b680:	cmp	w0, #0x0
  40b684:	b.eq	40b698 <recursively_expand_for_file@@Base+0x198>  // b.none
  40b688:	ldr	x0, [sp, #40]
  40b68c:	bl	40c330 <variable_expand_for_file@@Base+0x2a8>
  40b690:	str	x0, [sp, #88]
  40b694:	b	40b6ac <recursively_expand_for_file@@Base+0x1ac>
  40b698:	ldr	x0, [sp, #40]
  40b69c:	ldr	x0, [x0, #8]
  40b6a0:	mov	x1, #0x0                   	// #0
  40b6a4:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  40b6a8:	str	x0, [sp, #88]
  40b6ac:	ldr	x0, [sp, #40]
  40b6b0:	ldrb	w1, [x0, #44]
  40b6b4:	and	w1, w1, #0xffffffbf
  40b6b8:	strb	w1, [x0, #44]
  40b6bc:	ldr	w0, [sp, #76]
  40b6c0:	cmp	w0, #0x0
  40b6c4:	b.eq	40b6d4 <recursively_expand_for_file@@Base+0x1d4>  // b.none
  40b6c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b6cc:	add	x0, x0, #0x40
  40b6d0:	str	xzr, [x0]
  40b6d4:	ldr	x0, [sp, #32]
  40b6d8:	cmp	x0, #0x0
  40b6dc:	b.eq	40b6f0 <recursively_expand_for_file@@Base+0x1f0>  // b.none
  40b6e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40b6e4:	add	x0, x0, #0x3b8
  40b6e8:	ldr	x1, [sp, #80]
  40b6ec:	str	x1, [x0]
  40b6f0:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  40b6f4:	add	x0, x0, #0xcd8
  40b6f8:	ldr	x1, [sp, #64]
  40b6fc:	str	x1, [x0]
  40b700:	ldr	x0, [sp, #88]
  40b704:	ldp	x19, x20, [sp, #16]
  40b708:	ldp	x29, x30, [sp], #96
  40b70c:	ret
  40b710:	stp	x29, x30, [sp, #-80]!
  40b714:	mov	x29, sp
  40b718:	str	x19, [sp, #16]
  40b71c:	str	x0, [sp, #56]
  40b720:	str	x1, [sp, #48]
  40b724:	str	x2, [sp, #40]
  40b728:	ldr	x1, [sp, #40]
  40b72c:	ldr	x0, [sp, #48]
  40b730:	bl	431f68 <lookup_variable@@Base>
  40b734:	str	x0, [sp, #72]
  40b738:	ldr	x0, [sp, #72]
  40b73c:	cmp	x0, #0x0
  40b740:	b.ne	40b78c <recursively_expand_for_file@@Base+0x28c>  // b.any
  40b744:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b748:	add	x0, x0, #0xa90
  40b74c:	ldr	w0, [x0]
  40b750:	cmp	w0, #0x0
  40b754:	b.eq	40b78c <recursively_expand_for_file@@Base+0x28c>  // b.none
  40b758:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b75c:	add	x0, x0, #0x40
  40b760:	ldr	x19, [x0]
  40b764:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b768:	add	x0, x0, #0x2a8
  40b76c:	bl	406e40 <gettext@plt>
  40b770:	ldr	x1, [sp, #40]
  40b774:	ldr	x4, [sp, #48]
  40b778:	mov	w3, w1
  40b77c:	mov	x2, x0
  40b780:	ldr	x1, [sp, #40]
  40b784:	mov	x0, x19
  40b788:	bl	423e74 <error@@Base>
  40b78c:	ldr	x0, [sp, #72]
  40b790:	cmp	x0, #0x0
  40b794:	b.eq	40b7c4 <recursively_expand_for_file@@Base+0x2c4>  // b.none
  40b798:	ldr	x0, [sp, #72]
  40b79c:	ldr	x0, [x0, #8]
  40b7a0:	ldrb	w0, [x0]
  40b7a4:	cmp	w0, #0x0
  40b7a8:	b.ne	40b7cc <recursively_expand_for_file@@Base+0x2cc>  // b.any
  40b7ac:	ldr	x0, [sp, #72]
  40b7b0:	ldrb	w0, [x0, #44]
  40b7b4:	and	w0, w0, #0x2
  40b7b8:	and	w0, w0, #0xff
  40b7bc:	cmp	w0, #0x0
  40b7c0:	b.ne	40b7cc <recursively_expand_for_file@@Base+0x2cc>  // b.any
  40b7c4:	ldr	x0, [sp, #56]
  40b7c8:	b	40b840 <recursively_expand_for_file@@Base+0x340>
  40b7cc:	ldr	x0, [sp, #72]
  40b7d0:	ldrb	w0, [x0, #44]
  40b7d4:	and	w0, w0, #0x1
  40b7d8:	and	w0, w0, #0xff
  40b7dc:	cmp	w0, #0x0
  40b7e0:	b.eq	40b7f4 <recursively_expand_for_file@@Base+0x2f4>  // b.none
  40b7e4:	mov	x1, #0x0                   	// #0
  40b7e8:	ldr	x0, [sp, #72]
  40b7ec:	bl	40b500 <recursively_expand_for_file@@Base>
  40b7f0:	b	40b7fc <recursively_expand_for_file@@Base+0x2fc>
  40b7f4:	ldr	x0, [sp, #72]
  40b7f8:	ldr	x0, [x0, #8]
  40b7fc:	str	x0, [sp, #64]
  40b800:	ldr	x0, [sp, #64]
  40b804:	bl	4066f0 <strlen@plt>
  40b808:	mov	x2, x0
  40b80c:	ldr	x1, [sp, #64]
  40b810:	ldr	x0, [sp, #56]
  40b814:	bl	40b388 <variable_buffer_output@@Base>
  40b818:	str	x0, [sp, #56]
  40b81c:	ldr	x0, [sp, #72]
  40b820:	ldrb	w0, [x0, #44]
  40b824:	and	w0, w0, #0x1
  40b828:	and	w0, w0, #0xff
  40b82c:	cmp	w0, #0x0
  40b830:	b.eq	40b83c <recursively_expand_for_file@@Base+0x33c>  // b.none
  40b834:	ldr	x0, [sp, #64]
  40b838:	bl	406c00 <free@plt>
  40b83c:	ldr	x0, [sp, #56]
  40b840:	ldr	x19, [sp, #16]
  40b844:	ldp	x29, x30, [sp], #80
  40b848:	ret

000000000040b84c <variable_expand_string@@Base>:
  40b84c:	stp	x29, x30, [sp, #-256]!
  40b850:	mov	x29, sp
  40b854:	stp	x19, x20, [sp, #16]
  40b858:	str	x0, [x29, #56]
  40b85c:	str	x1, [x29, #48]
  40b860:	str	x2, [x29, #40]
  40b864:	ldr	x0, [x29, #56]
  40b868:	cmp	x0, #0x0
  40b86c:	b.ne	40b878 <variable_expand_string@@Base+0x2c>  // b.any
  40b870:	bl	40b490 <variable_buffer_output@@Base+0x108>
  40b874:	str	x0, [x29, #56]
  40b878:	ldr	x0, [x29, #56]
  40b87c:	str	x0, [x29, #240]
  40b880:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b884:	add	x0, x0, #0xa00
  40b888:	ldr	x0, [x0]
  40b88c:	ldr	x1, [x29, #56]
  40b890:	sub	x0, x1, x0
  40b894:	str	x0, [x29, #160]
  40b898:	ldr	x0, [x29, #40]
  40b89c:	cmp	x0, #0x0
  40b8a0:	b.ne	40b8c8 <variable_expand_string@@Base+0x7c>  // b.any
  40b8a4:	mov	x2, #0x1                   	// #1
  40b8a8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40b8ac:	add	x1, x0, #0x2d0
  40b8b0:	ldr	x0, [x29, #240]
  40b8b4:	bl	40b388 <variable_buffer_output@@Base>
  40b8b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40b8bc:	add	x0, x0, #0xa00
  40b8c0:	ldr	x0, [x0]
  40b8c4:	b	40bf28 <variable_expand_string@@Base+0x6dc>
  40b8c8:	ldr	x0, [x29, #40]
  40b8cc:	cmn	x0, #0x1
  40b8d0:	b.ne	40b8e0 <variable_expand_string@@Base+0x94>  // b.any
  40b8d4:	ldr	x0, [x29, #48]
  40b8d8:	bl	422788 <xstrdup@@Base>
  40b8dc:	b	40b8ec <variable_expand_string@@Base+0xa0>
  40b8e0:	ldr	x1, [x29, #40]
  40b8e4:	ldr	x0, [x29, #48]
  40b8e8:	bl	4227bc <xstrndup@@Base>
  40b8ec:	str	x0, [x29, #152]
  40b8f0:	ldr	x0, [x29, #152]
  40b8f4:	str	x0, [x29, #248]
  40b8f8:	mov	w1, #0x24                  	// #36
  40b8fc:	ldr	x0, [x29, #248]
  40b900:	bl	406c20 <strchr@plt>
  40b904:	str	x0, [x29, #144]
  40b908:	ldr	x0, [x29, #144]
  40b90c:	cmp	x0, #0x0
  40b910:	b.eq	40b924 <variable_expand_string@@Base+0xd8>  // b.none
  40b914:	ldr	x1, [x29, #144]
  40b918:	ldr	x0, [x29, #248]
  40b91c:	sub	x0, x1, x0
  40b920:	b	40b930 <variable_expand_string@@Base+0xe4>
  40b924:	ldr	x0, [x29, #248]
  40b928:	bl	4066f0 <strlen@plt>
  40b92c:	add	x0, x0, #0x1
  40b930:	mov	x2, x0
  40b934:	ldr	x1, [x29, #248]
  40b938:	ldr	x0, [x29, #240]
  40b93c:	bl	40b388 <variable_buffer_output@@Base>
  40b940:	str	x0, [x29, #240]
  40b944:	ldr	x0, [x29, #144]
  40b948:	cmp	x0, #0x0
  40b94c:	b.eq	40beec <variable_expand_string@@Base+0x6a0>  // b.none
  40b950:	ldr	x0, [x29, #144]
  40b954:	add	x0, x0, #0x1
  40b958:	str	x0, [x29, #248]
  40b95c:	ldr	x0, [x29, #248]
  40b960:	ldrb	w0, [x0]
  40b964:	cmp	w0, #0x7b
  40b968:	b.eq	40b9ac <variable_expand_string@@Base+0x160>  // b.none
  40b96c:	cmp	w0, #0x7b
  40b970:	b.gt	40be84 <variable_expand_string@@Base+0x638>
  40b974:	cmp	w0, #0x28
  40b978:	b.eq	40b9ac <variable_expand_string@@Base+0x160>  // b.none
  40b97c:	cmp	w0, #0x28
  40b980:	b.gt	40be84 <variable_expand_string@@Base+0x638>
  40b984:	cmp	w0, #0x0
  40b988:	b.eq	40b994 <variable_expand_string@@Base+0x148>  // b.none
  40b98c:	cmp	w0, #0x24
  40b990:	b.ne	40be84 <variable_expand_string@@Base+0x638>  // b.any
  40b994:	mov	x2, #0x1                   	// #1
  40b998:	ldr	x1, [x29, #144]
  40b99c:	ldr	x0, [x29, #240]
  40b9a0:	bl	40b388 <variable_buffer_output@@Base>
  40b9a4:	str	x0, [x29, #240]
  40b9a8:	b	40becc <variable_expand_string@@Base+0x680>
  40b9ac:	ldr	x0, [x29, #248]
  40b9b0:	ldrb	w0, [x0]
  40b9b4:	strb	w0, [x29, #143]
  40b9b8:	ldrb	w0, [x29, #143]
  40b9bc:	cmp	w0, #0x28
  40b9c0:	b.ne	40b9cc <variable_expand_string@@Base+0x180>  // b.any
  40b9c4:	mov	w0, #0x29                  	// #41
  40b9c8:	b	40b9d0 <variable_expand_string@@Base+0x184>
  40b9cc:	mov	w0, #0x7d                  	// #125
  40b9d0:	strb	w0, [x29, #142]
  40b9d4:	ldr	x0, [x29, #248]
  40b9d8:	add	x0, x0, #0x1
  40b9dc:	str	x0, [x29, #232]
  40b9e0:	str	xzr, [x29, #224]
  40b9e4:	ldr	x0, [x29, #240]
  40b9e8:	str	x0, [x29, #72]
  40b9ec:	ldr	x0, [x29, #248]
  40b9f0:	str	x0, [x29, #80]
  40b9f4:	add	x1, x29, #0x50
  40b9f8:	add	x0, x29, #0x48
  40b9fc:	bl	4135d8 <handle_function@@Base>
  40ba00:	cmp	w0, #0x0
  40ba04:	b.eq	40ba1c <variable_expand_string@@Base+0x1d0>  // b.none
  40ba08:	ldr	x0, [x29, #72]
  40ba0c:	str	x0, [x29, #240]
  40ba10:	ldr	x0, [x29, #80]
  40ba14:	str	x0, [x29, #248]
  40ba18:	b	40becc <variable_expand_string@@Base+0x680>
  40ba1c:	ldrb	w0, [x29, #142]
  40ba20:	mov	w1, w0
  40ba24:	ldr	x0, [x29, #232]
  40ba28:	bl	406c20 <strchr@plt>
  40ba2c:	str	x0, [x29, #216]
  40ba30:	ldr	x0, [x29, #216]
  40ba34:	cmp	x0, #0x0
  40ba38:	b.ne	40ba68 <variable_expand_string@@Base+0x21c>  // b.any
  40ba3c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  40ba40:	add	x0, x0, #0xcd8
  40ba44:	ldr	x0, [x0]
  40ba48:	ldr	x19, [x0]
  40ba4c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ba50:	add	x0, x0, #0x2d8
  40ba54:	bl	406e40 <gettext@plt>
  40ba58:	mov	x2, x0
  40ba5c:	mov	x1, #0x0                   	// #0
  40ba60:	mov	x0, x19
  40ba64:	bl	424098 <fatal@@Base>
  40ba68:	mov	w2, #0x24                  	// #36
  40ba6c:	ldr	x1, [x29, #216]
  40ba70:	ldr	x0, [x29, #232]
  40ba74:	bl	4227f8 <lindex@@Base>
  40ba78:	str	x0, [x29, #144]
  40ba7c:	ldr	x0, [x29, #144]
  40ba80:	cmp	x0, #0x0
  40ba84:	b.eq	40bb4c <variable_expand_string@@Base+0x300>  // b.none
  40ba88:	str	wzr, [x29, #204]
  40ba8c:	ldr	x0, [x29, #232]
  40ba90:	str	x0, [x29, #248]
  40ba94:	b	40baf4 <variable_expand_string@@Base+0x2a8>
  40ba98:	ldr	x0, [x29, #248]
  40ba9c:	ldrb	w0, [x0]
  40baa0:	ldrb	w1, [x29, #143]
  40baa4:	cmp	w1, w0
  40baa8:	b.ne	40babc <variable_expand_string@@Base+0x270>  // b.any
  40baac:	ldr	w0, [x29, #204]
  40bab0:	add	w0, w0, #0x1
  40bab4:	str	w0, [x29, #204]
  40bab8:	b	40bae8 <variable_expand_string@@Base+0x29c>
  40babc:	ldr	x0, [x29, #248]
  40bac0:	ldrb	w0, [x0]
  40bac4:	ldrb	w1, [x29, #142]
  40bac8:	cmp	w1, w0
  40bacc:	b.ne	40bae8 <variable_expand_string@@Base+0x29c>  // b.any
  40bad0:	ldr	w0, [x29, #204]
  40bad4:	sub	w0, w0, #0x1
  40bad8:	str	w0, [x29, #204]
  40badc:	ldr	w0, [x29, #204]
  40bae0:	cmp	w0, #0x0
  40bae4:	b.lt	40bb08 <variable_expand_string@@Base+0x2bc>  // b.tstop
  40bae8:	ldr	x0, [x29, #248]
  40baec:	add	x0, x0, #0x1
  40baf0:	str	x0, [x29, #248]
  40baf4:	ldr	x0, [x29, #248]
  40baf8:	ldrb	w0, [x0]
  40bafc:	cmp	w0, #0x0
  40bb00:	b.ne	40ba98 <variable_expand_string@@Base+0x24c>  // b.any
  40bb04:	b	40bb0c <variable_expand_string@@Base+0x2c0>
  40bb08:	nop
  40bb0c:	ldr	w0, [x29, #204]
  40bb10:	cmp	w0, #0x0
  40bb14:	b.ge	40bb54 <variable_expand_string@@Base+0x308>  // b.tcont
  40bb18:	ldr	x1, [x29, #248]
  40bb1c:	ldr	x0, [x29, #232]
  40bb20:	bl	40bf5c <expand_argument@@Base>
  40bb24:	str	x0, [x29, #224]
  40bb28:	ldr	x0, [x29, #224]
  40bb2c:	str	x0, [x29, #232]
  40bb30:	ldr	x0, [x29, #232]
  40bb34:	bl	4066f0 <strlen@plt>
  40bb38:	mov	x1, x0
  40bb3c:	ldr	x0, [x29, #232]
  40bb40:	add	x0, x0, x1
  40bb44:	str	x0, [x29, #216]
  40bb48:	b	40bb54 <variable_expand_string@@Base+0x308>
  40bb4c:	ldr	x0, [x29, #216]
  40bb50:	str	x0, [x29, #248]
  40bb54:	mov	w2, #0x3a                  	// #58
  40bb58:	ldr	x1, [x29, #216]
  40bb5c:	ldr	x0, [x29, #232]
  40bb60:	bl	4227f8 <lindex@@Base>
  40bb64:	str	x0, [x29, #208]
  40bb68:	ldr	x0, [x29, #208]
  40bb6c:	cmp	x0, #0x0
  40bb70:	b.eq	40be4c <variable_expand_string@@Base+0x600>  // b.none
  40bb74:	ldr	x0, [x29, #208]
  40bb78:	add	x0, x0, #0x1
  40bb7c:	str	x0, [x29, #128]
  40bb80:	mov	w2, #0x3d                  	// #61
  40bb84:	ldr	x1, [x29, #216]
  40bb88:	ldr	x0, [x29, #128]
  40bb8c:	bl	4227f8 <lindex@@Base>
  40bb90:	str	x0, [x29, #120]
  40bb94:	ldr	x0, [x29, #120]
  40bb98:	cmp	x0, #0x0
  40bb9c:	b.ne	40bba8 <variable_expand_string@@Base+0x35c>  // b.any
  40bba0:	str	xzr, [x29, #208]
  40bba4:	b	40be4c <variable_expand_string@@Base+0x600>
  40bba8:	ldr	x0, [x29, #120]
  40bbac:	add	x0, x0, #0x1
  40bbb0:	str	x0, [x29, #112]
  40bbb4:	ldr	x0, [x29, #216]
  40bbb8:	str	x0, [x29, #104]
  40bbbc:	ldr	x1, [x29, #208]
  40bbc0:	ldr	x0, [x29, #232]
  40bbc4:	sub	x0, x1, x0
  40bbc8:	mov	x1, x0
  40bbcc:	ldr	x0, [x29, #232]
  40bbd0:	bl	431f68 <lookup_variable@@Base>
  40bbd4:	str	x0, [x29, #96]
  40bbd8:	ldr	x0, [x29, #96]
  40bbdc:	cmp	x0, #0x0
  40bbe0:	b.ne	40bc44 <variable_expand_string@@Base+0x3f8>  // b.any
  40bbe4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40bbe8:	add	x0, x0, #0xa90
  40bbec:	ldr	w0, [x0]
  40bbf0:	cmp	w0, #0x0
  40bbf4:	b.eq	40bc44 <variable_expand_string@@Base+0x3f8>  // b.none
  40bbf8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40bbfc:	add	x0, x0, #0x40
  40bc00:	ldr	x19, [x0]
  40bc04:	ldr	x1, [x29, #208]
  40bc08:	ldr	x0, [x29, #232]
  40bc0c:	sub	x0, x1, x0
  40bc10:	mov	x20, x0
  40bc14:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40bc18:	add	x0, x0, #0x2a8
  40bc1c:	bl	406e40 <gettext@plt>
  40bc20:	mov	x2, x0
  40bc24:	ldr	x1, [x29, #208]
  40bc28:	ldr	x0, [x29, #232]
  40bc2c:	sub	x0, x1, x0
  40bc30:	ldr	x4, [x29, #232]
  40bc34:	mov	w3, w0
  40bc38:	mov	x1, x20
  40bc3c:	mov	x0, x19
  40bc40:	bl	423e74 <error@@Base>
  40bc44:	ldr	x0, [x29, #96]
  40bc48:	cmp	x0, #0x0
  40bc4c:	b.eq	40be4c <variable_expand_string@@Base+0x600>  // b.none
  40bc50:	ldr	x0, [x29, #96]
  40bc54:	ldr	x0, [x0, #8]
  40bc58:	ldrb	w0, [x0]
  40bc5c:	cmp	w0, #0x0
  40bc60:	b.eq	40be4c <variable_expand_string@@Base+0x600>  // b.none
  40bc64:	ldr	x0, [x29, #96]
  40bc68:	ldrb	w0, [x0, #44]
  40bc6c:	and	w0, w0, #0x1
  40bc70:	and	w0, w0, #0xff
  40bc74:	cmp	w0, #0x0
  40bc78:	b.eq	40bc8c <variable_expand_string@@Base+0x440>  // b.none
  40bc7c:	mov	x1, #0x0                   	// #0
  40bc80:	ldr	x0, [x29, #96]
  40bc84:	bl	40b500 <recursively_expand_for_file@@Base>
  40bc88:	b	40bc94 <variable_expand_string@@Base+0x448>
  40bc8c:	ldr	x0, [x29, #96]
  40bc90:	ldr	x0, [x0, #8]
  40bc94:	str	x0, [x29, #88]
  40bc98:	ldr	x1, [x29, #120]
  40bc9c:	ldr	x0, [x29, #128]
  40bca0:	sub	x0, x1, x0
  40bca4:	add	x0, x0, #0x2
  40bca8:	add	x0, x0, #0xf
  40bcac:	lsr	x0, x0, #4
  40bcb0:	lsl	x0, x0, #4
  40bcb4:	sub	sp, sp, x0
  40bcb8:	mov	x0, sp
  40bcbc:	add	x0, x0, #0xf
  40bcc0:	lsr	x0, x0, #4
  40bcc4:	lsl	x0, x0, #4
  40bcc8:	str	x0, [x29, #192]
  40bccc:	ldr	x0, [x29, #192]
  40bcd0:	add	x1, x0, #0x1
  40bcd4:	str	x1, [x29, #192]
  40bcd8:	mov	w1, #0x25                  	// #37
  40bcdc:	strb	w1, [x0]
  40bce0:	ldr	x1, [x29, #120]
  40bce4:	ldr	x0, [x29, #128]
  40bce8:	sub	x0, x1, x0
  40bcec:	mov	x2, x0
  40bcf0:	ldr	x1, [x29, #128]
  40bcf4:	ldr	x0, [x29, #192]
  40bcf8:	bl	4066b0 <memcpy@plt>
  40bcfc:	ldr	x1, [x29, #120]
  40bd00:	ldr	x0, [x29, #128]
  40bd04:	sub	x0, x1, x0
  40bd08:	mov	x1, x0
  40bd0c:	ldr	x0, [x29, #192]
  40bd10:	add	x0, x0, x1
  40bd14:	strb	wzr, [x0]
  40bd18:	ldr	x1, [x29, #104]
  40bd1c:	ldr	x0, [x29, #112]
  40bd20:	sub	x0, x1, x0
  40bd24:	add	x0, x0, #0x2
  40bd28:	add	x0, x0, #0xf
  40bd2c:	lsr	x0, x0, #4
  40bd30:	lsl	x0, x0, #4
  40bd34:	sub	sp, sp, x0
  40bd38:	mov	x0, sp
  40bd3c:	add	x0, x0, #0xf
  40bd40:	lsr	x0, x0, #4
  40bd44:	lsl	x0, x0, #4
  40bd48:	str	x0, [x29, #184]
  40bd4c:	ldr	x0, [x29, #184]
  40bd50:	add	x1, x0, #0x1
  40bd54:	str	x1, [x29, #184]
  40bd58:	mov	w1, #0x25                  	// #37
  40bd5c:	strb	w1, [x0]
  40bd60:	ldr	x1, [x29, #104]
  40bd64:	ldr	x0, [x29, #112]
  40bd68:	sub	x0, x1, x0
  40bd6c:	mov	x2, x0
  40bd70:	ldr	x1, [x29, #112]
  40bd74:	ldr	x0, [x29, #184]
  40bd78:	bl	4066b0 <memcpy@plt>
  40bd7c:	ldr	x1, [x29, #104]
  40bd80:	ldr	x0, [x29, #112]
  40bd84:	sub	x0, x1, x0
  40bd88:	mov	x1, x0
  40bd8c:	ldr	x0, [x29, #184]
  40bd90:	add	x0, x0, x1
  40bd94:	strb	wzr, [x0]
  40bd98:	ldr	x0, [x29, #192]
  40bd9c:	bl	4294d0 <find_percent@@Base>
  40bda0:	str	x0, [x29, #176]
  40bda4:	ldr	x0, [x29, #176]
  40bda8:	cmp	x0, #0x0
  40bdac:	b.eq	40bde4 <variable_expand_string@@Base+0x598>  // b.none
  40bdb0:	ldr	x0, [x29, #176]
  40bdb4:	add	x0, x0, #0x1
  40bdb8:	str	x0, [x29, #176]
  40bdbc:	ldr	x0, [x29, #184]
  40bdc0:	bl	4294d0 <find_percent@@Base>
  40bdc4:	str	x0, [x29, #168]
  40bdc8:	ldr	x0, [x29, #168]
  40bdcc:	cmp	x0, #0x0
  40bdd0:	b.eq	40be0c <variable_expand_string@@Base+0x5c0>  // b.none
  40bdd4:	ldr	x0, [x29, #168]
  40bdd8:	add	x0, x0, #0x1
  40bddc:	str	x0, [x29, #168]
  40bde0:	b	40be0c <variable_expand_string@@Base+0x5c0>
  40bde4:	ldr	x0, [x29, #192]
  40bde8:	str	x0, [x29, #176]
  40bdec:	ldr	x0, [x29, #184]
  40bdf0:	str	x0, [x29, #168]
  40bdf4:	ldr	x0, [x29, #192]
  40bdf8:	sub	x0, x0, #0x1
  40bdfc:	str	x0, [x29, #192]
  40be00:	ldr	x0, [x29, #184]
  40be04:	sub	x0, x0, #0x1
  40be08:	str	x0, [x29, #184]
  40be0c:	ldr	x5, [x29, #168]
  40be10:	ldr	x4, [x29, #176]
  40be14:	ldr	x3, [x29, #184]
  40be18:	ldr	x2, [x29, #192]
  40be1c:	ldr	x1, [x29, #88]
  40be20:	ldr	x0, [x29, #240]
  40be24:	bl	40f7ac <patsubst_expand_pat@@Base>
  40be28:	str	x0, [x29, #240]
  40be2c:	ldr	x0, [x29, #96]
  40be30:	ldrb	w0, [x0, #44]
  40be34:	and	w0, w0, #0x1
  40be38:	and	w0, w0, #0xff
  40be3c:	cmp	w0, #0x0
  40be40:	b.eq	40be4c <variable_expand_string@@Base+0x600>  // b.none
  40be44:	ldr	x0, [x29, #88]
  40be48:	bl	406c00 <free@plt>
  40be4c:	ldr	x0, [x29, #208]
  40be50:	cmp	x0, #0x0
  40be54:	b.ne	40be78 <variable_expand_string@@Base+0x62c>  // b.any
  40be58:	ldr	x1, [x29, #216]
  40be5c:	ldr	x0, [x29, #232]
  40be60:	sub	x0, x1, x0
  40be64:	mov	x2, x0
  40be68:	ldr	x1, [x29, #232]
  40be6c:	ldr	x0, [x29, #240]
  40be70:	bl	40b710 <recursively_expand_for_file@@Base+0x210>
  40be74:	str	x0, [x29, #240]
  40be78:	ldr	x0, [x29, #224]
  40be7c:	bl	406c00 <free@plt>
  40be80:	b	40becc <variable_expand_string@@Base+0x680>
  40be84:	ldr	x0, [x29, #248]
  40be88:	sub	x0, x0, #0x1
  40be8c:	ldrb	w0, [x0]
  40be90:	mov	w1, w0
  40be94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40be98:	add	x0, x0, #0x728
  40be9c:	sxtw	x1, w1
  40bea0:	ldrh	w0, [x0, x1, lsl #1]
  40bea4:	and	w0, w0, #0x6
  40bea8:	cmp	w0, #0x0
  40beac:	b.ne	40bec8 <variable_expand_string@@Base+0x67c>  // b.any
  40beb0:	mov	x2, #0x1                   	// #1
  40beb4:	ldr	x1, [x29, #248]
  40beb8:	ldr	x0, [x29, #240]
  40bebc:	bl	40b710 <recursively_expand_for_file@@Base+0x210>
  40bec0:	str	x0, [x29, #240]
  40bec4:	b	40becc <variable_expand_string@@Base+0x680>
  40bec8:	nop
  40becc:	ldr	x0, [x29, #248]
  40bed0:	ldrb	w0, [x0]
  40bed4:	cmp	w0, #0x0
  40bed8:	b.eq	40bef4 <variable_expand_string@@Base+0x6a8>  // b.none
  40bedc:	ldr	x0, [x29, #248]
  40bee0:	add	x0, x0, #0x1
  40bee4:	str	x0, [x29, #248]
  40bee8:	b	40b8f8 <variable_expand_string@@Base+0xac>
  40beec:	nop
  40bef0:	b	40bef8 <variable_expand_string@@Base+0x6ac>
  40bef4:	nop
  40bef8:	ldr	x0, [x29, #152]
  40befc:	bl	406c00 <free@plt>
  40bf00:	mov	x2, #0x1                   	// #1
  40bf04:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40bf08:	add	x1, x0, #0x2d0
  40bf0c:	ldr	x0, [x29, #240]
  40bf10:	bl	40b388 <variable_buffer_output@@Base>
  40bf14:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40bf18:	add	x0, x0, #0xa00
  40bf1c:	ldr	x1, [x0]
  40bf20:	ldr	x0, [x29, #160]
  40bf24:	add	x0, x1, x0
  40bf28:	mov	sp, x29
  40bf2c:	ldp	x19, x20, [sp, #16]
  40bf30:	ldp	x29, x30, [sp], #256
  40bf34:	ret

000000000040bf38 <variable_expand@@Base>:
  40bf38:	stp	x29, x30, [sp, #-32]!
  40bf3c:	mov	x29, sp
  40bf40:	str	x0, [sp, #24]
  40bf44:	mov	x2, #0xffffffffffffffff    	// #-1
  40bf48:	ldr	x1, [sp, #24]
  40bf4c:	mov	x0, #0x0                   	// #0
  40bf50:	bl	40b84c <variable_expand_string@@Base>
  40bf54:	ldp	x29, x30, [sp], #32
  40bf58:	ret

000000000040bf5c <expand_argument@@Base>:
  40bf5c:	stp	x29, x30, [sp, #-64]!
  40bf60:	mov	x29, sp
  40bf64:	str	x0, [x29, #24]
  40bf68:	str	x1, [x29, #16]
  40bf6c:	str	xzr, [x29, #48]
  40bf70:	ldr	x1, [x29, #24]
  40bf74:	ldr	x0, [x29, #16]
  40bf78:	cmp	x1, x0
  40bf7c:	b.ne	40bf90 <expand_argument@@Base+0x34>  // b.any
  40bf80:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40bf84:	add	x0, x0, #0x2d0
  40bf88:	bl	422788 <xstrdup@@Base>
  40bf8c:	b	40c07c <expand_argument@@Base+0x120>
  40bf90:	ldr	x0, [x29, #16]
  40bf94:	cmp	x0, #0x0
  40bf98:	b.eq	40bfac <expand_argument@@Base+0x50>  // b.none
  40bf9c:	ldr	x0, [x29, #16]
  40bfa0:	ldrb	w0, [x0]
  40bfa4:	cmp	w0, #0x0
  40bfa8:	b.ne	40bfbc <expand_argument@@Base+0x60>  // b.any
  40bfac:	mov	x1, #0x0                   	// #0
  40bfb0:	ldr	x0, [x29, #24]
  40bfb4:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  40bfb8:	b	40c07c <expand_argument@@Base+0x120>
  40bfbc:	ldr	x1, [x29, #16]
  40bfc0:	ldr	x0, [x29, #24]
  40bfc4:	sub	x0, x1, x0
  40bfc8:	cmp	x0, #0x3e7
  40bfcc:	b.le	40bff4 <expand_argument@@Base+0x98>
  40bfd0:	ldr	x1, [x29, #16]
  40bfd4:	ldr	x0, [x29, #24]
  40bfd8:	sub	x0, x1, x0
  40bfdc:	add	x0, x0, #0x1
  40bfe0:	bl	42268c <xmalloc@@Base>
  40bfe4:	str	x0, [x29, #48]
  40bfe8:	ldr	x0, [x29, #48]
  40bfec:	str	x0, [x29, #56]
  40bff0:	b	40c028 <expand_argument@@Base+0xcc>
  40bff4:	ldr	x1, [x29, #16]
  40bff8:	ldr	x0, [x29, #24]
  40bffc:	sub	x0, x1, x0
  40c000:	add	x0, x0, #0x1
  40c004:	add	x0, x0, #0xf
  40c008:	lsr	x0, x0, #4
  40c00c:	lsl	x0, x0, #4
  40c010:	sub	sp, sp, x0
  40c014:	mov	x0, sp
  40c018:	add	x0, x0, #0xf
  40c01c:	lsr	x0, x0, #4
  40c020:	lsl	x0, x0, #4
  40c024:	str	x0, [x29, #56]
  40c028:	ldr	x1, [x29, #16]
  40c02c:	ldr	x0, [x29, #24]
  40c030:	sub	x0, x1, x0
  40c034:	mov	x2, x0
  40c038:	ldr	x1, [x29, #24]
  40c03c:	ldr	x0, [x29, #56]
  40c040:	bl	4066b0 <memcpy@plt>
  40c044:	ldr	x1, [x29, #16]
  40c048:	ldr	x0, [x29, #24]
  40c04c:	sub	x0, x1, x0
  40c050:	mov	x1, x0
  40c054:	ldr	x0, [x29, #56]
  40c058:	add	x0, x0, x1
  40c05c:	strb	wzr, [x0]
  40c060:	mov	x1, #0x0                   	// #0
  40c064:	ldr	x0, [x29, #56]
  40c068:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  40c06c:	str	x0, [x29, #40]
  40c070:	ldr	x0, [x29, #48]
  40c074:	bl	406c00 <free@plt>
  40c078:	ldr	x0, [x29, #40]
  40c07c:	mov	sp, x29
  40c080:	ldp	x29, x30, [sp], #64
  40c084:	ret

000000000040c088 <variable_expand_for_file@@Base>:
  40c088:	stp	x29, x30, [sp, #-64]!
  40c08c:	mov	x29, sp
  40c090:	str	x0, [sp, #24]
  40c094:	str	x1, [sp, #16]
  40c098:	ldr	x0, [sp, #16]
  40c09c:	cmp	x0, #0x0
  40c0a0:	b.ne	40c0b0 <variable_expand_for_file@@Base+0x28>  // b.any
  40c0a4:	ldr	x0, [sp, #24]
  40c0a8:	bl	40bf38 <variable_expand@@Base>
  40c0ac:	b	40c160 <variable_expand_for_file@@Base+0xd8>
  40c0b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c0b4:	add	x0, x0, #0x3b8
  40c0b8:	ldr	x0, [x0]
  40c0bc:	str	x0, [sp, #56]
  40c0c0:	ldr	x0, [sp, #16]
  40c0c4:	ldr	x1, [x0, #80]
  40c0c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c0cc:	add	x0, x0, #0x3b8
  40c0d0:	str	x1, [x0]
  40c0d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c0d8:	add	x0, x0, #0x40
  40c0dc:	ldr	x0, [x0]
  40c0e0:	str	x0, [sp, #48]
  40c0e4:	ldr	x0, [sp, #16]
  40c0e8:	ldr	x0, [x0, #32]
  40c0ec:	cmp	x0, #0x0
  40c0f0:	b.eq	40c124 <variable_expand_for_file@@Base+0x9c>  // b.none
  40c0f4:	ldr	x0, [sp, #16]
  40c0f8:	ldr	x0, [x0, #32]
  40c0fc:	ldr	x0, [x0]
  40c100:	cmp	x0, #0x0
  40c104:	b.eq	40c124 <variable_expand_for_file@@Base+0x9c>  // b.none
  40c108:	ldr	x0, [sp, #16]
  40c10c:	ldr	x0, [x0, #32]
  40c110:	mov	x1, x0
  40c114:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c118:	add	x0, x0, #0x40
  40c11c:	str	x1, [x0]
  40c120:	b	40c130 <variable_expand_for_file@@Base+0xa8>
  40c124:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c128:	add	x0, x0, #0x40
  40c12c:	str	xzr, [x0]
  40c130:	ldr	x0, [sp, #24]
  40c134:	bl	40bf38 <variable_expand@@Base>
  40c138:	str	x0, [sp, #40]
  40c13c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c140:	add	x0, x0, #0x3b8
  40c144:	ldr	x1, [sp, #56]
  40c148:	str	x1, [x0]
  40c14c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c150:	add	x0, x0, #0x40
  40c154:	ldr	x1, [sp, #48]
  40c158:	str	x1, [x0]
  40c15c:	ldr	x0, [sp, #40]
  40c160:	ldp	x29, x30, [sp], #64
  40c164:	ret
  40c168:	stp	x29, x30, [sp, #-96]!
  40c16c:	mov	x29, sp
  40c170:	str	x19, [sp, #16]
  40c174:	str	x0, [sp, #56]
  40c178:	str	x1, [sp, #48]
  40c17c:	str	x2, [sp, #40]
  40c180:	str	w3, [sp, #36]
  40c184:	str	xzr, [sp, #88]
  40c188:	ldr	x0, [sp, #40]
  40c18c:	cmp	x0, #0x0
  40c190:	b.ne	40c19c <variable_expand_for_file@@Base+0x114>  // b.any
  40c194:	bl	40b490 <variable_buffer_output@@Base+0x108>
  40c198:	b	40c324 <variable_expand_for_file@@Base+0x29c>
  40c19c:	ldr	w0, [sp, #36]
  40c1a0:	cmp	w0, #0x0
  40c1a4:	b.eq	40c1c0 <variable_expand_for_file@@Base+0x138>  // b.none
  40c1a8:	ldr	x0, [sp, #40]
  40c1ac:	ldr	w0, [x0, #16]
  40c1b0:	cmp	w0, #0x0
  40c1b4:	b.ne	40c1c0 <variable_expand_for_file@@Base+0x138>  // b.any
  40c1b8:	mov	w0, #0x1                   	// #1
  40c1bc:	b	40c1c4 <variable_expand_for_file@@Base+0x13c>
  40c1c0:	mov	w0, #0x0                   	// #0
  40c1c4:	str	w0, [sp, #84]
  40c1c8:	ldr	x0, [sp, #40]
  40c1cc:	ldr	x0, [x0, #8]
  40c1d0:	mov	x2, x0
  40c1d4:	ldr	x1, [sp, #48]
  40c1d8:	ldr	x0, [sp, #56]
  40c1dc:	bl	432050 <lookup_variable_in_set@@Base>
  40c1e0:	str	x0, [sp, #72]
  40c1e4:	ldr	x0, [sp, #72]
  40c1e8:	cmp	x0, #0x0
  40c1ec:	b.eq	40c214 <variable_expand_for_file@@Base+0x18c>  // b.none
  40c1f0:	ldr	w0, [sp, #36]
  40c1f4:	cmp	w0, #0x0
  40c1f8:	b.ne	40c234 <variable_expand_for_file@@Base+0x1ac>  // b.any
  40c1fc:	ldr	x0, [sp, #72]
  40c200:	ldrb	w0, [x0, #44]
  40c204:	and	w0, w0, #0xffffff80
  40c208:	and	w0, w0, #0xff
  40c20c:	cmp	w0, #0x0
  40c210:	b.eq	40c234 <variable_expand_for_file@@Base+0x1ac>  // b.none
  40c214:	ldr	x0, [sp, #40]
  40c218:	ldr	x0, [x0]
  40c21c:	ldr	w3, [sp, #84]
  40c220:	mov	x2, x0
  40c224:	ldr	x1, [sp, #48]
  40c228:	ldr	x0, [sp, #56]
  40c22c:	bl	40c168 <variable_expand_for_file@@Base+0xe0>
  40c230:	b	40c324 <variable_expand_for_file@@Base+0x29c>
  40c234:	ldr	x0, [sp, #72]
  40c238:	ldrb	w0, [x0, #44]
  40c23c:	and	w0, w0, #0x2
  40c240:	and	w0, w0, #0xff
  40c244:	cmp	w0, #0x0
  40c248:	b.eq	40c270 <variable_expand_for_file@@Base+0x1e8>  // b.none
  40c24c:	ldr	x0, [sp, #40]
  40c250:	ldr	x0, [x0]
  40c254:	ldr	w3, [sp, #84]
  40c258:	mov	x2, x0
  40c25c:	ldr	x1, [sp, #48]
  40c260:	ldr	x0, [sp, #56]
  40c264:	bl	40c168 <variable_expand_for_file@@Base+0xe0>
  40c268:	str	x0, [sp, #88]
  40c26c:	b	40c278 <variable_expand_for_file@@Base+0x1f0>
  40c270:	bl	40b490 <variable_buffer_output@@Base+0x108>
  40c274:	str	x0, [sp, #88]
  40c278:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c27c:	add	x0, x0, #0xa00
  40c280:	ldr	x0, [x0]
  40c284:	ldr	x1, [sp, #88]
  40c288:	cmp	x1, x0
  40c28c:	b.ls	40c2a8 <variable_expand_for_file@@Base+0x220>  // b.plast
  40c290:	mov	x2, #0x1                   	// #1
  40c294:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40c298:	add	x1, x0, #0x2f8
  40c29c:	ldr	x0, [sp, #88]
  40c2a0:	bl	40b388 <variable_buffer_output@@Base>
  40c2a4:	str	x0, [sp, #88]
  40c2a8:	ldr	x0, [sp, #72]
  40c2ac:	ldrb	w0, [x0, #44]
  40c2b0:	and	w0, w0, #0x1
  40c2b4:	and	w0, w0, #0xff
  40c2b8:	cmp	w0, #0x0
  40c2bc:	b.ne	40c2e8 <variable_expand_for_file@@Base+0x260>  // b.any
  40c2c0:	ldr	x0, [sp, #72]
  40c2c4:	ldr	x19, [x0, #8]
  40c2c8:	ldr	x0, [sp, #72]
  40c2cc:	ldr	x0, [x0, #8]
  40c2d0:	bl	4066f0 <strlen@plt>
  40c2d4:	mov	x2, x0
  40c2d8:	mov	x1, x19
  40c2dc:	ldr	x0, [sp, #88]
  40c2e0:	bl	40b388 <variable_buffer_output@@Base>
  40c2e4:	b	40c324 <variable_expand_for_file@@Base+0x29c>
  40c2e8:	ldr	x0, [sp, #72]
  40c2ec:	ldr	x19, [x0, #8]
  40c2f0:	ldr	x0, [sp, #72]
  40c2f4:	ldr	x0, [x0, #8]
  40c2f8:	bl	4066f0 <strlen@plt>
  40c2fc:	mov	x2, x0
  40c300:	mov	x1, x19
  40c304:	ldr	x0, [sp, #88]
  40c308:	bl	40b84c <variable_expand_string@@Base>
  40c30c:	str	x0, [sp, #88]
  40c310:	ldr	x0, [sp, #88]
  40c314:	bl	4066f0 <strlen@plt>
  40c318:	mov	x1, x0
  40c31c:	ldr	x0, [sp, #88]
  40c320:	add	x0, x0, x1
  40c324:	ldr	x19, [sp, #16]
  40c328:	ldp	x29, x30, [sp], #96
  40c32c:	ret
  40c330:	stp	x29, x30, [sp, #-80]!
  40c334:	mov	x29, sp
  40c338:	str	x19, [sp, #16]
  40c33c:	str	x0, [sp, #40]
  40c340:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c344:	add	x0, x0, #0xa00
  40c348:	ldr	x0, [x0]
  40c34c:	str	x0, [sp, #72]
  40c350:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c354:	add	x0, x0, #0x520
  40c358:	ldr	x0, [x0]
  40c35c:	str	x0, [sp, #64]
  40c360:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c364:	add	x0, x0, #0xa00
  40c368:	str	xzr, [x0]
  40c36c:	ldr	x0, [sp, #40]
  40c370:	ldr	x19, [x0]
  40c374:	ldr	x0, [sp, #40]
  40c378:	ldr	x0, [x0]
  40c37c:	bl	4066f0 <strlen@plt>
  40c380:	mov	x1, x0
  40c384:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c388:	add	x0, x0, #0x3b8
  40c38c:	ldr	x0, [x0]
  40c390:	mov	w3, #0x1                   	// #1
  40c394:	mov	x2, x0
  40c398:	mov	x0, x19
  40c39c:	bl	40c168 <variable_expand_for_file@@Base+0xe0>
  40c3a0:	str	x0, [sp, #56]
  40c3a4:	mov	x2, #0x1                   	// #1
  40c3a8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40c3ac:	add	x1, x0, #0x2d0
  40c3b0:	ldr	x0, [sp, #56]
  40c3b4:	bl	40b388 <variable_buffer_output@@Base>
  40c3b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c3bc:	add	x0, x0, #0xa00
  40c3c0:	ldr	x0, [x0]
  40c3c4:	str	x0, [sp, #56]
  40c3c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c3cc:	add	x0, x0, #0xa00
  40c3d0:	ldr	x1, [sp, #72]
  40c3d4:	str	x1, [x0]
  40c3d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c3dc:	add	x0, x0, #0x520
  40c3e0:	ldr	x1, [sp, #64]
  40c3e4:	str	x1, [x0]
  40c3e8:	ldr	x0, [sp, #56]
  40c3ec:	ldr	x19, [sp, #16]
  40c3f0:	ldp	x29, x30, [sp], #80
  40c3f4:	ret

000000000040c3f8 <allocated_variable_expand_for_file@@Base>:
  40c3f8:	stp	x29, x30, [sp, #-64]!
  40c3fc:	mov	x29, sp
  40c400:	str	x0, [sp, #24]
  40c404:	str	x1, [sp, #16]
  40c408:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c40c:	add	x0, x0, #0xa00
  40c410:	ldr	x0, [x0]
  40c414:	str	x0, [sp, #56]
  40c418:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c41c:	add	x0, x0, #0x520
  40c420:	ldr	x0, [x0]
  40c424:	str	x0, [sp, #48]
  40c428:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c42c:	add	x0, x0, #0xa00
  40c430:	str	xzr, [x0]
  40c434:	ldr	x1, [sp, #16]
  40c438:	ldr	x0, [sp, #24]
  40c43c:	bl	40c088 <variable_expand_for_file@@Base>
  40c440:	str	x0, [sp, #40]
  40c444:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c448:	add	x0, x0, #0xa00
  40c44c:	ldr	x1, [sp, #56]
  40c450:	str	x1, [x0]
  40c454:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c458:	add	x0, x0, #0x520
  40c45c:	ldr	x1, [sp, #48]
  40c460:	str	x1, [x0]
  40c464:	ldr	x0, [sp, #40]
  40c468:	ldp	x29, x30, [sp], #64
  40c46c:	ret

000000000040c470 <install_variable_buffer@@Base>:
  40c470:	stp	x29, x30, [sp, #-32]!
  40c474:	mov	x29, sp
  40c478:	str	x0, [sp, #24]
  40c47c:	str	x1, [sp, #16]
  40c480:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c484:	add	x0, x0, #0xa00
  40c488:	ldr	x1, [x0]
  40c48c:	ldr	x0, [sp, #24]
  40c490:	str	x1, [x0]
  40c494:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c498:	add	x0, x0, #0x520
  40c49c:	ldr	x1, [x0]
  40c4a0:	ldr	x0, [sp, #16]
  40c4a4:	str	x1, [x0]
  40c4a8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c4ac:	add	x0, x0, #0xa00
  40c4b0:	str	xzr, [x0]
  40c4b4:	bl	40b490 <variable_buffer_output@@Base+0x108>
  40c4b8:	nop
  40c4bc:	ldp	x29, x30, [sp], #32
  40c4c0:	ret

000000000040c4c4 <restore_variable_buffer@@Base>:
  40c4c4:	stp	x29, x30, [sp, #-32]!
  40c4c8:	mov	x29, sp
  40c4cc:	str	x0, [sp, #24]
  40c4d0:	str	x1, [sp, #16]
  40c4d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c4d8:	add	x0, x0, #0xa00
  40c4dc:	ldr	x0, [x0]
  40c4e0:	bl	406c00 <free@plt>
  40c4e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40c4e8:	add	x0, x0, #0xa00
  40c4ec:	ldr	x1, [sp, #24]
  40c4f0:	str	x1, [x0]
  40c4f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c4f8:	add	x0, x0, #0x520
  40c4fc:	ldr	x1, [sp, #16]
  40c500:	str	x1, [x0]
  40c504:	nop
  40c508:	ldp	x29, x30, [sp], #32
  40c50c:	ret
  40c510:	stp	x29, x30, [sp, #-48]!
  40c514:	mov	x29, sp
  40c518:	str	x0, [sp, #24]
  40c51c:	str	xzr, [sp, #40]
  40c520:	ldr	x0, [sp, #24]
  40c524:	ldr	x0, [x0, #8]
  40c528:	str	x0, [sp, #32]
  40c52c:	ldr	x0, [sp, #32]
  40c530:	bl	415104 <jhash_string@@Base>
  40c534:	mov	w0, w0
  40c538:	ldr	x1, [sp, #40]
  40c53c:	add	x0, x1, x0
  40c540:	str	x0, [sp, #40]
  40c544:	ldr	x0, [sp, #40]
  40c548:	ldp	x29, x30, [sp], #48
  40c54c:	ret
  40c550:	sub	sp, sp, #0x20
  40c554:	str	x0, [sp, #8]
  40c558:	str	xzr, [sp, #24]
  40c55c:	ldr	x0, [sp, #24]
  40c560:	add	sp, sp, #0x20
  40c564:	ret
  40c568:	stp	x29, x30, [sp, #-32]!
  40c56c:	mov	x29, sp
  40c570:	str	x0, [sp, #24]
  40c574:	str	x1, [sp, #16]
  40c578:	ldr	x0, [sp, #24]
  40c57c:	ldr	x1, [x0, #8]
  40c580:	ldr	x0, [sp, #16]
  40c584:	ldr	x0, [x0, #8]
  40c588:	cmp	x1, x0
  40c58c:	b.eq	40c5b0 <restore_variable_buffer@@Base+0xec>  // b.none
  40c590:	ldr	x0, [sp, #24]
  40c594:	ldr	x2, [x0, #8]
  40c598:	ldr	x0, [sp, #16]
  40c59c:	ldr	x0, [x0, #8]
  40c5a0:	mov	x1, x0
  40c5a4:	mov	x0, x2
  40c5a8:	bl	406bc0 <strcmp@plt>
  40c5ac:	b	40c5b4 <restore_variable_buffer@@Base+0xf0>
  40c5b0:	mov	w0, #0x0                   	// #0
  40c5b4:	ldp	x29, x30, [sp], #32
  40c5b8:	ret

000000000040c5bc <lookup_file@@Base>:
  40c5bc:	stp	x29, x30, [sp, #-192]!
  40c5c0:	mov	x29, sp
  40c5c4:	str	x0, [sp, #24]
  40c5c8:	b	40c5f8 <lookup_file@@Base+0x3c>
  40c5cc:	ldr	x0, [sp, #24]
  40c5d0:	add	x0, x0, #0x2
  40c5d4:	str	x0, [sp, #24]
  40c5d8:	b	40c5e8 <lookup_file@@Base+0x2c>
  40c5dc:	ldr	x0, [sp, #24]
  40c5e0:	add	x0, x0, #0x1
  40c5e4:	str	x0, [sp, #24]
  40c5e8:	ldr	x0, [sp, #24]
  40c5ec:	ldrb	w0, [x0]
  40c5f0:	cmp	w0, #0x2f
  40c5f4:	b.eq	40c5dc <lookup_file@@Base+0x20>  // b.none
  40c5f8:	ldr	x0, [sp, #24]
  40c5fc:	ldrb	w0, [x0]
  40c600:	cmp	w0, #0x2e
  40c604:	b.ne	40c630 <lookup_file@@Base+0x74>  // b.any
  40c608:	ldr	x0, [sp, #24]
  40c60c:	add	x0, x0, #0x1
  40c610:	ldrb	w0, [x0]
  40c614:	cmp	w0, #0x2f
  40c618:	b.ne	40c630 <lookup_file@@Base+0x74>  // b.any
  40c61c:	ldr	x0, [sp, #24]
  40c620:	add	x0, x0, #0x2
  40c624:	ldrb	w0, [x0]
  40c628:	cmp	w0, #0x0
  40c62c:	b.ne	40c5cc <lookup_file@@Base+0x10>  // b.any
  40c630:	ldr	x0, [sp, #24]
  40c634:	ldrb	w0, [x0]
  40c638:	cmp	w0, #0x0
  40c63c:	b.ne	40c64c <lookup_file@@Base+0x90>  // b.any
  40c640:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40c644:	add	x0, x0, #0x300
  40c648:	str	x0, [sp, #24]
  40c64c:	ldr	x0, [sp, #24]
  40c650:	str	x0, [sp, #48]
  40c654:	add	x0, sp, #0x28
  40c658:	mov	x1, x0
  40c65c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c660:	add	x0, x0, #0x530
  40c664:	bl	414398 <hash_find_item@@Base>
  40c668:	str	x0, [sp, #184]
  40c66c:	ldr	x0, [sp, #184]
  40c670:	ldp	x29, x30, [sp], #192
  40c674:	ret

000000000040c678 <enter_file@@Base>:
  40c678:	stp	x29, x30, [sp, #-208]!
  40c67c:	mov	x29, sp
  40c680:	str	x0, [sp, #24]
  40c684:	ldr	x0, [sp, #24]
  40c688:	str	x0, [sp, #48]
  40c68c:	add	x0, sp, #0x28
  40c690:	mov	x1, x0
  40c694:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c698:	add	x0, x0, #0x530
  40c69c:	bl	41422c <hash_find_slot@@Base>
  40c6a0:	str	x0, [sp, #200]
  40c6a4:	ldr	x0, [sp, #200]
  40c6a8:	ldr	x0, [x0]
  40c6ac:	str	x0, [sp, #192]
  40c6b0:	ldr	x0, [sp, #192]
  40c6b4:	cmp	x0, #0x0
  40c6b8:	b.eq	40c6fc <enter_file@@Base+0x84>  // b.none
  40c6bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c6c0:	add	x0, x0, #0x40
  40c6c4:	ldr	x0, [x0]
  40c6c8:	ldr	x1, [sp, #192]
  40c6cc:	cmp	x1, x0
  40c6d0:	b.eq	40c6fc <enter_file@@Base+0x84>  // b.none
  40c6d4:	ldr	x0, [sp, #192]
  40c6d8:	ldr	x0, [x0, #104]
  40c6dc:	cmp	x0, #0x0
  40c6e0:	b.ne	40c6fc <enter_file@@Base+0x84>  // b.any
  40c6e4:	ldr	x0, [sp, #192]
  40c6e8:	ldrb	w1, [x0, #136]
  40c6ec:	and	w1, w1, #0xffffffef
  40c6f0:	strb	w1, [x0, #136]
  40c6f4:	ldr	x0, [sp, #192]
  40c6f8:	b	40c7ac <enter_file@@Base+0x134>
  40c6fc:	mov	x0, #0x90                  	// #144
  40c700:	bl	4226d4 <xcalloc@@Base>
  40c704:	str	x0, [sp, #184]
  40c708:	ldr	x0, [sp, #184]
  40c70c:	ldr	x1, [sp, #24]
  40c710:	str	x1, [x0, #8]
  40c714:	ldr	x0, [sp, #184]
  40c718:	ldr	x1, [x0, #8]
  40c71c:	ldr	x0, [sp, #184]
  40c720:	str	x1, [x0]
  40c724:	ldr	x1, [sp, #184]
  40c728:	ldrb	w0, [x1, #136]
  40c72c:	mov	w2, #0x1                   	// #1
  40c730:	bfxil	w0, w2, #0, #2
  40c734:	strb	w0, [x1, #136]
  40c738:	ldr	x0, [sp, #192]
  40c73c:	cmp	x0, #0x0
  40c740:	b.eq	40c75c <enter_file@@Base+0xe4>  // b.none
  40c744:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c748:	add	x0, x0, #0x40
  40c74c:	ldr	x0, [x0]
  40c750:	ldr	x1, [sp, #192]
  40c754:	cmp	x1, x0
  40c758:	b.ne	40c780 <enter_file@@Base+0x108>  // b.any
  40c75c:	ldr	x0, [sp, #184]
  40c760:	ldr	x1, [sp, #184]
  40c764:	str	x1, [x0, #64]
  40c768:	ldr	x2, [sp, #200]
  40c76c:	ldr	x1, [sp, #184]
  40c770:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c774:	add	x0, x0, #0x530
  40c778:	bl	414470 <hash_insert_at@@Base>
  40c77c:	b	40c7a8 <enter_file@@Base+0x130>
  40c780:	ldr	x0, [sp, #184]
  40c784:	ldr	x1, [sp, #192]
  40c788:	str	x1, [x0, #104]
  40c78c:	ldr	x0, [sp, #192]
  40c790:	ldr	x0, [x0, #64]
  40c794:	ldr	x1, [sp, #184]
  40c798:	str	x1, [x0, #56]
  40c79c:	ldr	x0, [sp, #192]
  40c7a0:	ldr	x1, [sp, #184]
  40c7a4:	str	x1, [x0, #64]
  40c7a8:	ldr	x0, [sp, #184]
  40c7ac:	ldp	x29, x30, [sp], #208
  40c7b0:	ret

000000000040c7b4 <rehash_file@@Base>:
  40c7b4:	stp	x29, x30, [sp, #-240]!
  40c7b8:	mov	x29, sp
  40c7bc:	stp	x19, x20, [sp, #16]
  40c7c0:	str	x0, [sp, #40]
  40c7c4:	str	x1, [sp, #32]
  40c7c8:	ldr	x0, [sp, #40]
  40c7cc:	ldrb	w1, [x0, #136]
  40c7d0:	and	w1, w1, #0xffffffef
  40c7d4:	strb	w1, [x0, #136]
  40c7d8:	ldr	x0, [sp, #32]
  40c7dc:	str	x0, [sp, #56]
  40c7e0:	add	x0, sp, #0x30
  40c7e4:	mov	x1, x0
  40c7e8:	ldr	x0, [sp, #40]
  40c7ec:	bl	40c568 <restore_variable_buffer@@Base+0xa4>
  40c7f0:	cmp	w0, #0x0
  40c7f4:	b.eq	40cea8 <rehash_file@@Base+0x6f4>  // b.none
  40c7f8:	ldr	x0, [sp, #40]
  40c7fc:	ldr	x0, [x0, #8]
  40c800:	str	x0, [sp, #56]
  40c804:	b	40c814 <rehash_file@@Base+0x60>
  40c808:	ldr	x0, [sp, #40]
  40c80c:	ldr	x0, [x0, #72]
  40c810:	str	x0, [sp, #40]
  40c814:	ldr	x0, [sp, #40]
  40c818:	ldr	x0, [x0, #72]
  40c81c:	cmp	x0, #0x0
  40c820:	b.ne	40c808 <rehash_file@@Base+0x54>  // b.any
  40c824:	add	x0, sp, #0x30
  40c828:	mov	x1, x0
  40c82c:	ldr	x0, [sp, #40]
  40c830:	bl	40c568 <restore_variable_buffer@@Base+0xa4>
  40c834:	cmp	w0, #0x0
  40c838:	b.eq	40c840 <rehash_file@@Base+0x8c>  // b.none
  40c83c:	bl	406b30 <abort@plt>
  40c840:	ldr	x1, [sp, #40]
  40c844:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c848:	add	x0, x0, #0x530
  40c84c:	bl	414544 <hash_delete@@Base>
  40c850:	str	x0, [sp, #216]
  40c854:	ldr	x1, [sp, #216]
  40c858:	ldr	x0, [sp, #40]
  40c85c:	cmp	x1, x0
  40c860:	b.eq	40c868 <rehash_file@@Base+0xb4>  // b.none
  40c864:	bl	406b30 <abort@plt>
  40c868:	ldr	x0, [sp, #32]
  40c86c:	str	x0, [sp, #56]
  40c870:	add	x0, sp, #0x30
  40c874:	mov	x1, x0
  40c878:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c87c:	add	x0, x0, #0x530
  40c880:	bl	41422c <hash_find_slot@@Base>
  40c884:	str	x0, [sp, #208]
  40c888:	ldr	x0, [sp, #208]
  40c88c:	ldr	x0, [x0]
  40c890:	str	x0, [sp, #200]
  40c894:	ldr	x0, [sp, #40]
  40c898:	ldr	x1, [sp, #32]
  40c89c:	str	x1, [x0, #8]
  40c8a0:	ldr	x0, [sp, #40]
  40c8a4:	ldr	x0, [x0, #104]
  40c8a8:	str	x0, [sp, #232]
  40c8ac:	b	40c8c8 <rehash_file@@Base+0x114>
  40c8b0:	ldr	x0, [sp, #232]
  40c8b4:	ldr	x1, [sp, #32]
  40c8b8:	str	x1, [x0, #8]
  40c8bc:	ldr	x0, [sp, #232]
  40c8c0:	ldr	x0, [x0, #56]
  40c8c4:	str	x0, [sp, #232]
  40c8c8:	ldr	x0, [sp, #232]
  40c8cc:	cmp	x0, #0x0
  40c8d0:	b.ne	40c8b0 <rehash_file@@Base+0xfc>  // b.any
  40c8d4:	ldr	x0, [sp, #200]
  40c8d8:	cmp	x0, #0x0
  40c8dc:	b.eq	40c8f8 <rehash_file@@Base+0x144>  // b.none
  40c8e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c8e4:	add	x0, x0, #0x40
  40c8e8:	ldr	x0, [x0]
  40c8ec:	ldr	x1, [sp, #200]
  40c8f0:	cmp	x1, x0
  40c8f4:	b.ne	40c910 <rehash_file@@Base+0x15c>  // b.any
  40c8f8:	ldr	x2, [sp, #208]
  40c8fc:	ldr	x1, [sp, #40]
  40c900:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40c904:	add	x0, x0, #0x530
  40c908:	bl	414470 <hash_insert_at@@Base>
  40c90c:	b	40ceac <rehash_file@@Base+0x6f8>
  40c910:	ldr	x0, [sp, #40]
  40c914:	ldr	x0, [x0, #32]
  40c918:	cmp	x0, #0x0
  40c91c:	b.eq	40cac4 <rehash_file@@Base+0x310>  // b.none
  40c920:	ldr	x0, [sp, #200]
  40c924:	ldr	x0, [x0, #32]
  40c928:	cmp	x0, #0x0
  40c92c:	b.ne	40c944 <rehash_file@@Base+0x190>  // b.any
  40c930:	ldr	x0, [sp, #40]
  40c934:	ldr	x1, [x0, #32]
  40c938:	ldr	x0, [sp, #200]
  40c93c:	str	x1, [x0, #32]
  40c940:	b	40cac4 <rehash_file@@Base+0x310>
  40c944:	ldr	x0, [sp, #40]
  40c948:	ldr	x1, [x0, #32]
  40c94c:	ldr	x0, [sp, #200]
  40c950:	ldr	x0, [x0, #32]
  40c954:	cmp	x1, x0
  40c958:	b.eq	40cac4 <rehash_file@@Base+0x310>  // b.none
  40c95c:	ldr	x0, [sp, #40]
  40c960:	ldr	x0, [x0]
  40c964:	bl	4066f0 <strlen@plt>
  40c968:	str	x0, [sp, #192]
  40c96c:	ldr	x0, [sp, #200]
  40c970:	ldr	x0, [x0, #32]
  40c974:	ldr	x0, [x0]
  40c978:	cmp	x0, #0x0
  40c97c:	b.eq	40c9fc <rehash_file@@Base+0x248>  // b.none
  40c980:	ldr	x0, [sp, #40]
  40c984:	ldr	x0, [x0, #32]
  40c988:	mov	x20, x0
  40c98c:	ldr	x0, [sp, #200]
  40c990:	ldr	x0, [x0, #32]
  40c994:	ldr	x0, [x0]
  40c998:	bl	4066f0 <strlen@plt>
  40c99c:	mov	x1, x0
  40c9a0:	ldr	x0, [sp, #192]
  40c9a4:	add	x0, x1, x0
  40c9a8:	add	x19, x0, #0x14
  40c9ac:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40c9b0:	add	x0, x0, #0x308
  40c9b4:	bl	406e40 <gettext@plt>
  40c9b8:	mov	x6, x0
  40c9bc:	ldr	x0, [sp, #40]
  40c9c0:	ldr	x1, [x0]
  40c9c4:	ldr	x0, [sp, #200]
  40c9c8:	ldr	x0, [x0, #32]
  40c9cc:	ldr	x2, [x0]
  40c9d0:	ldr	x0, [sp, #200]
  40c9d4:	ldr	x0, [x0, #32]
  40c9d8:	ldr	x0, [x0, #8]
  40c9dc:	mov	x5, x0
  40c9e0:	mov	x4, x2
  40c9e4:	mov	x3, x1
  40c9e8:	mov	x2, x6
  40c9ec:	mov	x1, x19
  40c9f0:	mov	x0, x20
  40c9f4:	bl	423e74 <error@@Base>
  40c9f8:	b	40ca34 <rehash_file@@Base+0x280>
  40c9fc:	ldr	x0, [sp, #40]
  40ca00:	ldr	x0, [x0, #32]
  40ca04:	mov	x19, x0
  40ca08:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ca0c:	add	x0, x0, #0x338
  40ca10:	bl	406e40 <gettext@plt>
  40ca14:	mov	x1, x0
  40ca18:	ldr	x0, [sp, #40]
  40ca1c:	ldr	x0, [x0]
  40ca20:	mov	x3, x0
  40ca24:	mov	x2, x1
  40ca28:	ldr	x1, [sp, #192]
  40ca2c:	mov	x0, x19
  40ca30:	bl	423e74 <error@@Base>
  40ca34:	ldr	x0, [sp, #32]
  40ca38:	bl	4066f0 <strlen@plt>
  40ca3c:	mov	x1, x0
  40ca40:	ldr	x0, [sp, #192]
  40ca44:	add	x0, x0, x1
  40ca48:	str	x0, [sp, #192]
  40ca4c:	ldr	x0, [sp, #40]
  40ca50:	ldr	x0, [x0, #32]
  40ca54:	mov	x19, x0
  40ca58:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ca5c:	add	x0, x0, #0x370
  40ca60:	bl	406e40 <gettext@plt>
  40ca64:	mov	x1, x0
  40ca68:	ldr	x0, [sp, #40]
  40ca6c:	ldr	x0, [x0]
  40ca70:	ldr	x4, [sp, #32]
  40ca74:	mov	x3, x0
  40ca78:	mov	x2, x1
  40ca7c:	ldr	x1, [sp, #192]
  40ca80:	mov	x0, x19
  40ca84:	bl	423e74 <error@@Base>
  40ca88:	ldr	x0, [sp, #40]
  40ca8c:	ldr	x0, [x0, #32]
  40ca90:	mov	x19, x0
  40ca94:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ca98:	add	x0, x0, #0x3a8
  40ca9c:	bl	406e40 <gettext@plt>
  40caa0:	mov	x1, x0
  40caa4:	ldr	x0, [sp, #40]
  40caa8:	ldr	x0, [x0]
  40caac:	mov	x4, x0
  40cab0:	ldr	x3, [sp, #32]
  40cab4:	mov	x2, x1
  40cab8:	ldr	x1, [sp, #192]
  40cabc:	mov	x0, x19
  40cac0:	bl	423e74 <error@@Base>
  40cac4:	ldr	x0, [sp, #200]
  40cac8:	ldr	x0, [x0, #24]
  40cacc:	cmp	x0, #0x0
  40cad0:	b.ne	40cae8 <rehash_file@@Base+0x334>  // b.any
  40cad4:	ldr	x0, [sp, #40]
  40cad8:	ldr	x1, [x0, #24]
  40cadc:	ldr	x0, [sp, #200]
  40cae0:	str	x1, [x0, #24]
  40cae4:	b	40cb24 <rehash_file@@Base+0x370>
  40cae8:	ldr	x0, [sp, #200]
  40caec:	ldr	x0, [x0, #24]
  40caf0:	str	x0, [sp, #224]
  40caf4:	b	40cb04 <rehash_file@@Base+0x350>
  40caf8:	ldr	x0, [sp, #224]
  40cafc:	ldr	x0, [x0]
  40cb00:	str	x0, [sp, #224]
  40cb04:	ldr	x0, [sp, #224]
  40cb08:	ldr	x0, [x0]
  40cb0c:	cmp	x0, #0x0
  40cb10:	b.ne	40caf8 <rehash_file@@Base+0x344>  // b.any
  40cb14:	ldr	x0, [sp, #40]
  40cb18:	ldr	x1, [x0, #24]
  40cb1c:	ldr	x0, [sp, #224]
  40cb20:	str	x1, [x0]
  40cb24:	ldr	x0, [sp, #200]
  40cb28:	add	x2, x0, #0x50
  40cb2c:	ldr	x0, [sp, #40]
  40cb30:	ldr	x0, [x0, #80]
  40cb34:	mov	x1, x0
  40cb38:	mov	x0, x2
  40cb3c:	bl	4327ac <merge_variable_set_lists@@Base>
  40cb40:	ldr	x0, [sp, #200]
  40cb44:	ldr	x0, [x0, #104]
  40cb48:	cmp	x0, #0x0
  40cb4c:	b.eq	40cbc4 <rehash_file@@Base+0x410>  // b.none
  40cb50:	ldr	x0, [sp, #40]
  40cb54:	ldrb	w0, [x0, #137]
  40cb58:	and	w0, w0, #0x8
  40cb5c:	and	w0, w0, #0xff
  40cb60:	cmp	w0, #0x0
  40cb64:	b.eq	40cbc4 <rehash_file@@Base+0x410>  // b.none
  40cb68:	ldr	x0, [sp, #40]
  40cb6c:	ldr	x0, [x0, #104]
  40cb70:	cmp	x0, #0x0
  40cb74:	b.ne	40cbc4 <rehash_file@@Base+0x410>  // b.any
  40cb78:	ldr	x0, [sp, #40]
  40cb7c:	ldr	x0, [x0]
  40cb80:	bl	4066f0 <strlen@plt>
  40cb84:	mov	x19, x0
  40cb88:	ldr	x0, [sp, #32]
  40cb8c:	bl	4066f0 <strlen@plt>
  40cb90:	add	x19, x19, x0
  40cb94:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40cb98:	add	x0, x0, #0x3e8
  40cb9c:	bl	406e40 <gettext@plt>
  40cba0:	mov	x1, x0
  40cba4:	ldr	x0, [sp, #40]
  40cba8:	ldr	x0, [x0]
  40cbac:	ldr	x4, [sp, #32]
  40cbb0:	mov	x3, x0
  40cbb4:	mov	x2, x1
  40cbb8:	mov	x1, x19
  40cbbc:	mov	x0, #0x0                   	// #0
  40cbc0:	bl	424098 <fatal@@Base>
  40cbc4:	ldr	x0, [sp, #200]
  40cbc8:	ldr	x0, [x0, #104]
  40cbcc:	cmp	x0, #0x0
  40cbd0:	b.ne	40cc58 <rehash_file@@Base+0x4a4>  // b.any
  40cbd4:	ldr	x0, [sp, #40]
  40cbd8:	ldr	x0, [x0, #104]
  40cbdc:	cmp	x0, #0x0
  40cbe0:	b.eq	40cc58 <rehash_file@@Base+0x4a4>  // b.none
  40cbe4:	ldr	x0, [sp, #200]
  40cbe8:	ldrb	w0, [x0, #137]
  40cbec:	and	w0, w0, #0x8
  40cbf0:	and	w0, w0, #0xff
  40cbf4:	cmp	w0, #0x0
  40cbf8:	b.eq	40cc48 <rehash_file@@Base+0x494>  // b.none
  40cbfc:	ldr	x0, [sp, #40]
  40cc00:	ldr	x0, [x0]
  40cc04:	bl	4066f0 <strlen@plt>
  40cc08:	mov	x19, x0
  40cc0c:	ldr	x0, [sp, #32]
  40cc10:	bl	4066f0 <strlen@plt>
  40cc14:	add	x19, x19, x0
  40cc18:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40cc1c:	add	x0, x0, #0x420
  40cc20:	bl	406e40 <gettext@plt>
  40cc24:	mov	x1, x0
  40cc28:	ldr	x0, [sp, #40]
  40cc2c:	ldr	x0, [x0]
  40cc30:	ldr	x4, [sp, #32]
  40cc34:	mov	x3, x0
  40cc38:	mov	x2, x1
  40cc3c:	mov	x1, x19
  40cc40:	mov	x0, #0x0                   	// #0
  40cc44:	bl	424098 <fatal@@Base>
  40cc48:	ldr	x0, [sp, #40]
  40cc4c:	ldr	x1, [x0, #104]
  40cc50:	ldr	x0, [sp, #200]
  40cc54:	str	x1, [x0, #104]
  40cc58:	ldr	x0, [sp, #40]
  40cc5c:	ldr	x1, [x0, #112]
  40cc60:	ldr	x0, [sp, #200]
  40cc64:	ldr	x0, [x0, #112]
  40cc68:	cmp	x1, x0
  40cc6c:	b.ls	40cc80 <rehash_file@@Base+0x4cc>  // b.plast
  40cc70:	ldr	x0, [sp, #40]
  40cc74:	ldr	x1, [x0, #112]
  40cc78:	ldr	x0, [sp, #200]
  40cc7c:	str	x1, [x0, #112]
  40cc80:	ldr	x0, [sp, #40]
  40cc84:	ldr	x1, [x0, #120]
  40cc88:	ldr	x0, [sp, #200]
  40cc8c:	str	x1, [x0, #120]
  40cc90:	ldr	x0, [sp, #200]
  40cc94:	ldrb	w0, [x0, #136]
  40cc98:	ubfx	x0, x0, #5, #1
  40cc9c:	and	w1, w0, #0xff
  40cca0:	ldr	x0, [sp, #40]
  40cca4:	ldrb	w0, [x0, #136]
  40cca8:	ubfx	x0, x0, #5, #1
  40ccac:	and	w0, w0, #0xff
  40ccb0:	orr	w0, w1, w0
  40ccb4:	and	w2, w0, #0xff
  40ccb8:	ldr	x1, [sp, #200]
  40ccbc:	ldrb	w0, [x1, #136]
  40ccc0:	bfi	w0, w2, #5, #1
  40ccc4:	strb	w0, [x1, #136]
  40ccc8:	ldr	x0, [sp, #200]
  40cccc:	ldrb	w0, [x0, #137]
  40ccd0:	ubfx	x0, x0, #0, #1
  40ccd4:	and	w1, w0, #0xff
  40ccd8:	ldr	x0, [sp, #40]
  40ccdc:	ldrb	w0, [x0, #137]
  40cce0:	ubfx	x0, x0, #0, #1
  40cce4:	and	w0, w0, #0xff
  40cce8:	orr	w0, w1, w0
  40ccec:	and	w2, w0, #0xff
  40ccf0:	ldr	x1, [sp, #200]
  40ccf4:	ldrb	w0, [x1, #137]
  40ccf8:	bfxil	w0, w2, #0, #1
  40ccfc:	strb	w0, [x1, #137]
  40cd00:	ldr	x0, [sp, #200]
  40cd04:	ldrb	w0, [x0, #137]
  40cd08:	ubfx	x0, x0, #1, #1
  40cd0c:	and	w1, w0, #0xff
  40cd10:	ldr	x0, [sp, #40]
  40cd14:	ldrb	w0, [x0, #137]
  40cd18:	ubfx	x0, x0, #1, #1
  40cd1c:	and	w0, w0, #0xff
  40cd20:	orr	w0, w1, w0
  40cd24:	and	w2, w0, #0xff
  40cd28:	ldr	x1, [sp, #200]
  40cd2c:	ldrb	w0, [x1, #137]
  40cd30:	bfi	w0, w2, #1, #1
  40cd34:	strb	w0, [x1, #137]
  40cd38:	ldr	x0, [sp, #200]
  40cd3c:	ldrb	w0, [x0, #137]
  40cd40:	ubfx	x0, x0, #2, #1
  40cd44:	and	w1, w0, #0xff
  40cd48:	ldr	x0, [sp, #40]
  40cd4c:	ldrb	w0, [x0, #137]
  40cd50:	ubfx	x0, x0, #2, #1
  40cd54:	and	w0, w0, #0xff
  40cd58:	orr	w0, w1, w0
  40cd5c:	and	w2, w0, #0xff
  40cd60:	ldr	x1, [sp, #200]
  40cd64:	ldrb	w0, [x1, #137]
  40cd68:	bfi	w0, w2, #2, #1
  40cd6c:	strb	w0, [x1, #137]
  40cd70:	ldr	x0, [sp, #200]
  40cd74:	ldrb	w0, [x0, #137]
  40cd78:	ubfx	x0, x0, #3, #1
  40cd7c:	and	w1, w0, #0xff
  40cd80:	ldr	x0, [sp, #40]
  40cd84:	ldrb	w0, [x0, #137]
  40cd88:	ubfx	x0, x0, #3, #1
  40cd8c:	and	w0, w0, #0xff
  40cd90:	orr	w0, w1, w0
  40cd94:	and	w2, w0, #0xff
  40cd98:	ldr	x1, [sp, #200]
  40cd9c:	ldrb	w0, [x1, #137]
  40cda0:	bfi	w0, w2, #3, #1
  40cda4:	strb	w0, [x1, #137]
  40cda8:	ldr	x0, [sp, #200]
  40cdac:	ldrb	w0, [x0, #137]
  40cdb0:	ubfx	x0, x0, #4, #1
  40cdb4:	and	w1, w0, #0xff
  40cdb8:	ldr	x0, [sp, #40]
  40cdbc:	ldrb	w0, [x0, #137]
  40cdc0:	ubfx	x0, x0, #4, #1
  40cdc4:	and	w0, w0, #0xff
  40cdc8:	orr	w0, w1, w0
  40cdcc:	and	w2, w0, #0xff
  40cdd0:	ldr	x1, [sp, #200]
  40cdd4:	ldrb	w0, [x1, #137]
  40cdd8:	bfi	w0, w2, #4, #1
  40cddc:	strb	w0, [x1, #137]
  40cde0:	ldr	x0, [sp, #200]
  40cde4:	ldrb	w0, [x0, #137]
  40cde8:	ubfx	x0, x0, #5, #1
  40cdec:	and	w1, w0, #0xff
  40cdf0:	ldr	x0, [sp, #40]
  40cdf4:	ldrb	w0, [x0, #137]
  40cdf8:	ubfx	x0, x0, #5, #1
  40cdfc:	and	w0, w0, #0xff
  40ce00:	orr	w0, w1, w0
  40ce04:	and	w2, w0, #0xff
  40ce08:	ldr	x1, [sp, #200]
  40ce0c:	ldrb	w0, [x1, #137]
  40ce10:	bfi	w0, w2, #5, #1
  40ce14:	strb	w0, [x1, #137]
  40ce18:	ldr	x0, [sp, #200]
  40ce1c:	ldrb	w0, [x0, #136]
  40ce20:	ubfx	x0, x0, #6, #1
  40ce24:	and	w1, w0, #0xff
  40ce28:	ldr	x0, [sp, #40]
  40ce2c:	ldrb	w0, [x0, #136]
  40ce30:	ubfx	x0, x0, #6, #1
  40ce34:	and	w0, w0, #0xff
  40ce38:	orr	w0, w1, w0
  40ce3c:	and	w2, w0, #0xff
  40ce40:	ldr	x1, [sp, #200]
  40ce44:	ldrb	w0, [x1, #136]
  40ce48:	bfi	w0, w2, #6, #1
  40ce4c:	strb	w0, [x1, #136]
  40ce50:	ldr	x0, [sp, #200]
  40ce54:	ldrb	w0, [x0, #138]
  40ce58:	ubfx	x0, x0, #1, #1
  40ce5c:	and	w1, w0, #0xff
  40ce60:	ldr	x0, [sp, #40]
  40ce64:	ldrb	w0, [x0, #138]
  40ce68:	ubfx	x0, x0, #1, #1
  40ce6c:	and	w0, w0, #0xff
  40ce70:	orr	w0, w1, w0
  40ce74:	and	w2, w0, #0xff
  40ce78:	ldr	x1, [sp, #200]
  40ce7c:	ldrb	w0, [x1, #138]
  40ce80:	bfi	w0, w2, #1, #1
  40ce84:	strb	w0, [x1, #138]
  40ce88:	ldr	x0, [sp, #200]
  40ce8c:	ldrb	w1, [x0, #136]
  40ce90:	and	w1, w1, #0xffffffef
  40ce94:	strb	w1, [x0, #136]
  40ce98:	ldr	x0, [sp, #40]
  40ce9c:	ldr	x1, [sp, #200]
  40cea0:	str	x1, [x0, #72]
  40cea4:	b	40ceac <rehash_file@@Base+0x6f8>
  40cea8:	nop
  40ceac:	ldp	x19, x20, [sp, #16]
  40ceb0:	ldp	x29, x30, [sp], #240
  40ceb4:	ret

000000000040ceb8 <rename_file@@Base>:
  40ceb8:	stp	x29, x30, [sp, #-32]!
  40cebc:	mov	x29, sp
  40cec0:	str	x0, [sp, #24]
  40cec4:	str	x1, [sp, #16]
  40cec8:	ldr	x1, [sp, #16]
  40cecc:	ldr	x0, [sp, #24]
  40ced0:	bl	40c7b4 <rehash_file@@Base>
  40ced4:	b	40cef4 <rename_file@@Base+0x3c>
  40ced8:	ldr	x0, [sp, #24]
  40cedc:	ldr	x1, [x0, #8]
  40cee0:	ldr	x0, [sp, #24]
  40cee4:	str	x1, [x0]
  40cee8:	ldr	x0, [sp, #24]
  40ceec:	ldr	x0, [x0, #56]
  40cef0:	str	x0, [sp, #24]
  40cef4:	ldr	x0, [sp, #24]
  40cef8:	cmp	x0, #0x0
  40cefc:	b.ne	40ced8 <rename_file@@Base+0x20>  // b.any
  40cf00:	nop
  40cf04:	nop
  40cf08:	ldp	x29, x30, [sp], #32
  40cf0c:	ret

000000000040cf10 <remove_intermediates@@Base>:
  40cf10:	stp	x29, x30, [sp, #-80]!
  40cf14:	mov	x29, sp
  40cf18:	str	x19, [sp, #16]
  40cf1c:	str	w0, [sp, #44]
  40cf20:	str	wzr, [sp, #68]
  40cf24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40cf28:	add	x0, x0, #0x6f4
  40cf2c:	ldr	w0, [x0]
  40cf30:	cmp	w0, #0x0
  40cf34:	b.ne	40d274 <remove_intermediates@@Base+0x364>  // b.any
  40cf38:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40cf3c:	add	x0, x0, #0xb1c
  40cf40:	ldr	w0, [x0]
  40cf44:	cmp	w0, #0x0
  40cf48:	b.ne	40d274 <remove_intermediates@@Base+0x364>  // b.any
  40cf4c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40cf50:	add	x0, x0, #0x588
  40cf54:	ldr	w0, [x0]
  40cf58:	cmp	w0, #0x0
  40cf5c:	b.ne	40d274 <remove_intermediates@@Base+0x364>  // b.any
  40cf60:	ldr	w0, [sp, #44]
  40cf64:	cmp	w0, #0x0
  40cf68:	b.eq	40cf80 <remove_intermediates@@Base+0x70>  // b.none
  40cf6c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40cf70:	add	x0, x0, #0xa50
  40cf74:	ldr	w0, [x0]
  40cf78:	cmp	w0, #0x0
  40cf7c:	b.ne	40d27c <remove_intermediates@@Base+0x36c>  // b.any
  40cf80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40cf84:	add	x0, x0, #0x530
  40cf88:	ldr	x0, [x0]
  40cf8c:	str	x0, [sp, #72]
  40cf90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40cf94:	add	x0, x0, #0x530
  40cf98:	ldr	x0, [x0, #32]
  40cf9c:	lsl	x0, x0, #3
  40cfa0:	ldr	x1, [sp, #72]
  40cfa4:	add	x0, x1, x0
  40cfa8:	str	x0, [sp, #56]
  40cfac:	b	40d230 <remove_intermediates@@Base+0x320>
  40cfb0:	ldr	x0, [sp, #72]
  40cfb4:	ldr	x0, [x0]
  40cfb8:	cmp	x0, #0x0
  40cfbc:	b.eq	40d224 <remove_intermediates@@Base+0x314>  // b.none
  40cfc0:	ldr	x0, [sp, #72]
  40cfc4:	ldr	x1, [x0]
  40cfc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40cfcc:	add	x0, x0, #0x40
  40cfd0:	ldr	x0, [x0]
  40cfd4:	cmp	x1, x0
  40cfd8:	b.eq	40d224 <remove_intermediates@@Base+0x314>  // b.none
  40cfdc:	ldr	x0, [sp, #72]
  40cfe0:	ldr	x0, [x0]
  40cfe4:	str	x0, [sp, #48]
  40cfe8:	ldr	x0, [sp, #48]
  40cfec:	ldrb	w0, [x0, #137]
  40cff0:	and	w0, w0, #0x40
  40cff4:	and	w0, w0, #0xff
  40cff8:	cmp	w0, #0x0
  40cffc:	b.eq	40d224 <remove_intermediates@@Base+0x314>  // b.none
  40d000:	ldr	x0, [sp, #48]
  40d004:	ldrb	w0, [x0, #138]
  40d008:	and	w0, w0, #0x1
  40d00c:	and	w0, w0, #0xff
  40d010:	cmp	w0, #0x0
  40d014:	b.ne	40d030 <remove_intermediates@@Base+0x120>  // b.any
  40d018:	ldr	x0, [sp, #48]
  40d01c:	ldrb	w0, [x0, #136]
  40d020:	and	w0, w0, #0x20
  40d024:	and	w0, w0, #0xff
  40d028:	cmp	w0, #0x0
  40d02c:	b.ne	40d224 <remove_intermediates@@Base+0x314>  // b.any
  40d030:	ldr	x0, [sp, #48]
  40d034:	ldrb	w0, [x0, #137]
  40d038:	and	w0, w0, #0xffffff80
  40d03c:	and	w0, w0, #0xff
  40d040:	cmp	w0, #0x0
  40d044:	b.ne	40d224 <remove_intermediates@@Base+0x314>  // b.any
  40d048:	ldr	x0, [sp, #48]
  40d04c:	ldrb	w0, [x0, #137]
  40d050:	and	w0, w0, #0x10
  40d054:	and	w0, w0, #0xff
  40d058:	cmp	w0, #0x0
  40d05c:	b.ne	40d224 <remove_intermediates@@Base+0x314>  // b.any
  40d060:	ldr	x0, [sp, #48]
  40d064:	ldrb	w0, [x0, #136]
  40d068:	and	w0, w0, #0x3
  40d06c:	and	w0, w0, #0xff
  40d070:	cmp	w0, #0x1
  40d074:	b.eq	40d218 <remove_intermediates@@Base+0x308>  // b.none
  40d078:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40d07c:	add	x0, x0, #0xa50
  40d080:	ldr	w0, [x0]
  40d084:	cmp	w0, #0x0
  40d088:	b.eq	40d094 <remove_intermediates@@Base+0x184>  // b.none
  40d08c:	str	wzr, [sp, #64]
  40d090:	b	40d0c0 <remove_intermediates@@Base+0x1b0>
  40d094:	ldr	x0, [sp, #48]
  40d098:	ldr	x0, [x0]
  40d09c:	bl	406e30 <unlink@plt>
  40d0a0:	str	w0, [sp, #64]
  40d0a4:	ldr	w0, [sp, #64]
  40d0a8:	cmp	w0, #0x0
  40d0ac:	b.ge	40d0c0 <remove_intermediates@@Base+0x1b0>  // b.tcont
  40d0b0:	bl	406dd0 <__errno_location@plt>
  40d0b4:	ldr	w0, [x0]
  40d0b8:	cmp	w0, #0x2
  40d0bc:	b.eq	40d220 <remove_intermediates@@Base+0x310>  // b.none
  40d0c0:	ldr	x0, [sp, #48]
  40d0c4:	ldrb	w0, [x0, #138]
  40d0c8:	and	w0, w0, #0x1
  40d0cc:	and	w0, w0, #0xff
  40d0d0:	cmp	w0, #0x0
  40d0d4:	b.ne	40d224 <remove_intermediates@@Base+0x314>  // b.any
  40d0d8:	ldr	w0, [sp, #44]
  40d0dc:	cmp	w0, #0x0
  40d0e0:	b.eq	40d124 <remove_intermediates@@Base+0x214>  // b.none
  40d0e4:	ldr	x0, [sp, #48]
  40d0e8:	ldr	x0, [x0]
  40d0ec:	bl	4066f0 <strlen@plt>
  40d0f0:	mov	x19, x0
  40d0f4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d0f8:	add	x0, x0, #0x458
  40d0fc:	bl	406e40 <gettext@plt>
  40d100:	mov	x1, x0
  40d104:	ldr	x0, [sp, #48]
  40d108:	ldr	x0, [x0]
  40d10c:	mov	x3, x0
  40d110:	mov	x2, x1
  40d114:	mov	x1, x19
  40d118:	mov	x0, #0x0                   	// #0
  40d11c:	bl	423e74 <error@@Base>
  40d120:	b	40d1f0 <remove_intermediates@@Base+0x2e0>
  40d124:	ldr	w0, [sp, #68]
  40d128:	cmp	w0, #0x0
  40d12c:	b.ne	40d168 <remove_intermediates@@Base+0x258>  // b.any
  40d130:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d134:	add	x0, x0, #0x6dc
  40d138:	ldr	w0, [x0]
  40d13c:	and	w0, w0, #0x1
  40d140:	cmp	w0, #0x0
  40d144:	b.eq	40d168 <remove_intermediates@@Base+0x258>  // b.none
  40d148:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d14c:	add	x0, x0, #0x480
  40d150:	bl	406e40 <gettext@plt>
  40d154:	bl	406dc0 <printf@plt>
  40d158:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d15c:	add	x0, x0, #0x400
  40d160:	ldr	x0, [x0]
  40d164:	bl	406c90 <fflush@plt>
  40d168:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d16c:	add	x0, x0, #0x6d8
  40d170:	ldr	w0, [x0]
  40d174:	cmp	w0, #0x0
  40d178:	b.ne	40d1f0 <remove_intermediates@@Base+0x2e0>  // b.any
  40d17c:	ldr	w0, [sp, #68]
  40d180:	cmp	w0, #0x0
  40d184:	b.ne	40d1b8 <remove_intermediates@@Base+0x2a8>  // b.any
  40d188:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d18c:	add	x0, x0, #0x400
  40d190:	ldr	x0, [x0]
  40d194:	mov	x3, x0
  40d198:	mov	x2, #0x3                   	// #3
  40d19c:	mov	x1, #0x1                   	// #1
  40d1a0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d1a4:	add	x0, x0, #0x4a0
  40d1a8:	bl	406c50 <fwrite@plt>
  40d1ac:	mov	w0, #0x1                   	// #1
  40d1b0:	str	w0, [sp, #68]
  40d1b4:	b	40d1c0 <remove_intermediates@@Base+0x2b0>
  40d1b8:	mov	w0, #0x20                  	// #32
  40d1bc:	bl	406e00 <putchar@plt>
  40d1c0:	ldr	x0, [sp, #48]
  40d1c4:	ldr	x2, [x0]
  40d1c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d1cc:	add	x0, x0, #0x400
  40d1d0:	ldr	x0, [x0]
  40d1d4:	mov	x1, x0
  40d1d8:	mov	x0, x2
  40d1dc:	bl	406700 <fputs@plt>
  40d1e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d1e4:	add	x0, x0, #0x400
  40d1e8:	ldr	x0, [x0]
  40d1ec:	bl	406c90 <fflush@plt>
  40d1f0:	ldr	w0, [sp, #64]
  40d1f4:	cmp	w0, #0x0
  40d1f8:	b.ge	40d224 <remove_intermediates@@Base+0x314>  // b.tcont
  40d1fc:	ldr	x0, [sp, #48]
  40d200:	ldr	x0, [x0]
  40d204:	mov	x1, x0
  40d208:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d20c:	add	x0, x0, #0x4a8
  40d210:	bl	4242c0 <perror_with_name@@Base>
  40d214:	b	40d224 <remove_intermediates@@Base+0x314>
  40d218:	nop
  40d21c:	b	40d224 <remove_intermediates@@Base+0x314>
  40d220:	nop
  40d224:	ldr	x0, [sp, #72]
  40d228:	add	x0, x0, #0x8
  40d22c:	str	x0, [sp, #72]
  40d230:	ldr	x1, [sp, #72]
  40d234:	ldr	x0, [sp, #56]
  40d238:	cmp	x1, x0
  40d23c:	b.cc	40cfb0 <remove_intermediates@@Base+0xa0>  // b.lo, b.ul, b.last
  40d240:	ldr	w0, [sp, #68]
  40d244:	cmp	w0, #0x0
  40d248:	b.eq	40d280 <remove_intermediates@@Base+0x370>  // b.none
  40d24c:	ldr	w0, [sp, #44]
  40d250:	cmp	w0, #0x0
  40d254:	b.ne	40d280 <remove_intermediates@@Base+0x370>  // b.any
  40d258:	mov	w0, #0xa                   	// #10
  40d25c:	bl	406e00 <putchar@plt>
  40d260:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d264:	add	x0, x0, #0x400
  40d268:	ldr	x0, [x0]
  40d26c:	bl	406c90 <fflush@plt>
  40d270:	b	40d280 <remove_intermediates@@Base+0x370>
  40d274:	nop
  40d278:	b	40d280 <remove_intermediates@@Base+0x370>
  40d27c:	nop
  40d280:	ldr	x19, [sp, #16]
  40d284:	ldp	x29, x30, [sp], #80
  40d288:	ret

000000000040d28c <split_prereqs@@Base>:
  40d28c:	stp	x29, x30, [sp, #-64]!
  40d290:	mov	x29, sp
  40d294:	str	x0, [sp, #24]
  40d298:	add	x0, sp, #0x18
  40d29c:	mov	w4, #0x0                   	// #0
  40d2a0:	mov	x3, #0x0                   	// #0
  40d2a4:	mov	w2, #0x100                 	// #256
  40d2a8:	mov	x1, #0x28                  	// #40
  40d2ac:	bl	42a5e0 <parse_file_seq@@Base>
  40d2b0:	str	x0, [sp, #56]
  40d2b4:	ldr	x0, [sp, #24]
  40d2b8:	ldrb	w0, [x0]
  40d2bc:	cmp	w0, #0x0
  40d2c0:	b.eq	40d364 <split_prereqs@@Base+0xd8>  // b.none
  40d2c4:	ldr	x0, [sp, #24]
  40d2c8:	add	x0, x0, #0x1
  40d2cc:	str	x0, [sp, #24]
  40d2d0:	add	x0, sp, #0x18
  40d2d4:	mov	w4, #0x0                   	// #0
  40d2d8:	mov	x3, #0x0                   	// #0
  40d2dc:	mov	w2, #0x1                   	// #1
  40d2e0:	mov	x1, #0x28                  	// #40
  40d2e4:	bl	42a5e0 <parse_file_seq@@Base>
  40d2e8:	str	x0, [sp, #48]
  40d2ec:	ldr	x0, [sp, #56]
  40d2f0:	cmp	x0, #0x0
  40d2f4:	b.ne	40d304 <split_prereqs@@Base+0x78>  // b.any
  40d2f8:	ldr	x0, [sp, #48]
  40d2fc:	str	x0, [sp, #56]
  40d300:	b	40d358 <split_prereqs@@Base+0xcc>
  40d304:	ldr	x0, [sp, #56]
  40d308:	str	x0, [sp, #40]
  40d30c:	b	40d31c <split_prereqs@@Base+0x90>
  40d310:	ldr	x0, [sp, #40]
  40d314:	ldr	x0, [x0]
  40d318:	str	x0, [sp, #40]
  40d31c:	ldr	x0, [sp, #40]
  40d320:	ldr	x0, [x0]
  40d324:	cmp	x0, #0x0
  40d328:	b.ne	40d310 <split_prereqs@@Base+0x84>  // b.any
  40d32c:	ldr	x0, [sp, #40]
  40d330:	ldr	x1, [sp, #48]
  40d334:	str	x1, [x0]
  40d338:	b	40d358 <split_prereqs@@Base+0xcc>
  40d33c:	ldr	x0, [sp, #48]
  40d340:	ldrb	w1, [x0, #33]
  40d344:	orr	w1, w1, #0x2
  40d348:	strb	w1, [x0, #33]
  40d34c:	ldr	x0, [sp, #48]
  40d350:	ldr	x0, [x0]
  40d354:	str	x0, [sp, #48]
  40d358:	ldr	x0, [sp, #48]
  40d35c:	cmp	x0, #0x0
  40d360:	b.ne	40d33c <split_prereqs@@Base+0xb0>  // b.any
  40d364:	ldr	x0, [sp, #56]
  40d368:	ldp	x29, x30, [sp], #64
  40d36c:	ret

000000000040d370 <enter_prereqs@@Base>:
  40d370:	stp	x29, x30, [sp, #-128]!
  40d374:	mov	x29, sp
  40d378:	str	x19, [sp, #16]
  40d37c:	str	x0, [x29, #40]
  40d380:	str	x1, [x29, #32]
  40d384:	ldr	x0, [x29, #40]
  40d388:	cmp	x0, #0x0
  40d38c:	b.ne	40d398 <enter_prereqs@@Base+0x28>  // b.any
  40d390:	mov	x0, #0x0                   	// #0
  40d394:	b	40d628 <enter_prereqs@@Base+0x2b8>
  40d398:	ldr	x0, [x29, #32]
  40d39c:	cmp	x0, #0x0
  40d3a0:	b.eq	40d588 <enter_prereqs@@Base+0x218>  // b.none
  40d3a4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d3a8:	add	x0, x0, #0x4b8
  40d3ac:	str	x0, [x29, #88]
  40d3b0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d3b4:	add	x0, x0, #0x4c0
  40d3b8:	bl	40bf38 <variable_expand@@Base>
  40d3bc:	str	x0, [x29, #80]
  40d3c0:	ldr	x0, [x29, #40]
  40d3c4:	str	x0, [x29, #112]
  40d3c8:	str	xzr, [x29, #104]
  40d3cc:	b	40d57c <enter_prereqs@@Base+0x20c>
  40d3d0:	ldr	x0, [x29, #112]
  40d3d4:	ldr	x0, [x0, #8]
  40d3d8:	bl	4066f0 <strlen@plt>
  40d3dc:	add	x0, x0, #0x1
  40d3e0:	str	x0, [x29, #72]
  40d3e4:	ldr	x0, [x29, #72]
  40d3e8:	add	x0, x0, #0xf
  40d3ec:	lsr	x0, x0, #4
  40d3f0:	lsl	x0, x0, #4
  40d3f4:	sub	sp, sp, x0
  40d3f8:	mov	x0, sp
  40d3fc:	add	x0, x0, #0xf
  40d400:	lsr	x0, x0, #4
  40d404:	lsl	x0, x0, #4
  40d408:	str	x0, [x29, #64]
  40d40c:	ldr	x0, [x29, #112]
  40d410:	ldr	x0, [x0, #8]
  40d414:	ldr	x2, [x29, #72]
  40d418:	mov	x1, x0
  40d41c:	ldr	x0, [x29, #64]
  40d420:	bl	4066b0 <memcpy@plt>
  40d424:	ldr	x0, [x29, #64]
  40d428:	bl	4294d0 <find_percent@@Base>
  40d42c:	str	x0, [x29, #56]
  40d430:	ldr	x0, [x29, #56]
  40d434:	cmp	x0, #0x0
  40d438:	b.eq	40d54c <enter_prereqs@@Base+0x1dc>  // b.none
  40d43c:	ldr	x0, [x29, #32]
  40d440:	ldrb	w0, [x0]
  40d444:	cmp	w0, #0x0
  40d448:	b.ne	40d490 <enter_prereqs@@Base+0x120>  // b.any
  40d44c:	ldr	x0, [x29, #56]
  40d450:	add	x19, x0, #0x1
  40d454:	ldr	x0, [x29, #56]
  40d458:	bl	4066f0 <strlen@plt>
  40d45c:	mov	x2, x0
  40d460:	mov	x1, x19
  40d464:	ldr	x0, [x29, #56]
  40d468:	bl	4066c0 <memmove@plt>
  40d46c:	ldr	x0, [x29, #64]
  40d470:	bl	4066f0 <strlen@plt>
  40d474:	add	x0, x0, #0x1
  40d478:	mov	x2, x0
  40d47c:	ldr	x1, [x29, #64]
  40d480:	ldr	x0, [x29, #80]
  40d484:	bl	40b388 <variable_buffer_output@@Base>
  40d488:	str	x0, [x29, #96]
  40d48c:	b	40d4c0 <enter_prereqs@@Base+0x150>
  40d490:	ldr	x0, [x29, #88]
  40d494:	add	x1, x0, #0x1
  40d498:	ldr	x0, [x29, #56]
  40d49c:	add	x0, x0, #0x1
  40d4a0:	mov	x5, x0
  40d4a4:	mov	x4, x1
  40d4a8:	ldr	x3, [x29, #64]
  40d4ac:	ldr	x2, [x29, #88]
  40d4b0:	ldr	x1, [x29, #32]
  40d4b4:	ldr	x0, [x29, #80]
  40d4b8:	bl	40f7ac <patsubst_expand_pat@@Base>
  40d4bc:	str	x0, [x29, #96]
  40d4c0:	ldr	x0, [x29, #80]
  40d4c4:	ldrb	w0, [x0]
  40d4c8:	cmp	w0, #0x0
  40d4cc:	b.ne	40d528 <enter_prereqs@@Base+0x1b8>  // b.any
  40d4d0:	ldr	x0, [x29, #112]
  40d4d4:	str	x0, [x29, #48]
  40d4d8:	ldr	x1, [x29, #112]
  40d4dc:	ldr	x0, [x29, #40]
  40d4e0:	cmp	x1, x0
  40d4e4:	b.ne	40d500 <enter_prereqs@@Base+0x190>  // b.any
  40d4e8:	ldr	x0, [x29, #40]
  40d4ec:	ldr	x0, [x0]
  40d4f0:	str	x0, [x29, #40]
  40d4f4:	ldr	x0, [x29, #40]
  40d4f8:	str	x0, [x29, #112]
  40d4fc:	b	40d51c <enter_prereqs@@Base+0x1ac>
  40d500:	ldr	x0, [x29, #112]
  40d504:	ldr	x1, [x0]
  40d508:	ldr	x0, [x29, #104]
  40d50c:	str	x1, [x0]
  40d510:	ldr	x0, [x29, #104]
  40d514:	ldr	x0, [x0]
  40d518:	str	x0, [x29, #112]
  40d51c:	ldr	x0, [x29, #48]
  40d520:	bl	406c00 <free@plt>
  40d524:	b	40d57c <enter_prereqs@@Base+0x20c>
  40d528:	ldr	x1, [x29, #96]
  40d52c:	ldr	x0, [x29, #80]
  40d530:	sub	x0, x1, x0
  40d534:	mov	x1, x0
  40d538:	ldr	x0, [x29, #80]
  40d53c:	bl	430da0 <strcache_add_len@@Base>
  40d540:	mov	x1, x0
  40d544:	ldr	x0, [x29, #112]
  40d548:	str	x1, [x0, #8]
  40d54c:	ldr	x0, [x29, #112]
  40d550:	ldr	x1, [x29, #32]
  40d554:	str	x1, [x0, #24]
  40d558:	ldr	x0, [x29, #112]
  40d55c:	ldrb	w1, [x0, #33]
  40d560:	orr	w1, w1, #0x4
  40d564:	strb	w1, [x0, #33]
  40d568:	ldr	x0, [x29, #112]
  40d56c:	str	x0, [x29, #104]
  40d570:	ldr	x0, [x29, #112]
  40d574:	ldr	x0, [x0]
  40d578:	str	x0, [x29, #112]
  40d57c:	ldr	x0, [x29, #112]
  40d580:	cmp	x0, #0x0
  40d584:	b.ne	40d3d0 <enter_prereqs@@Base+0x60>  // b.any
  40d588:	ldr	x0, [x29, #40]
  40d58c:	str	x0, [x29, #120]
  40d590:	b	40d618 <enter_prereqs@@Base+0x2a8>
  40d594:	ldr	x0, [x29, #120]
  40d598:	ldrb	w0, [x0, #33]
  40d59c:	and	w0, w0, #0x8
  40d5a0:	and	w0, w0, #0xff
  40d5a4:	cmp	w0, #0x0
  40d5a8:	b.ne	40d608 <enter_prereqs@@Base+0x298>  // b.any
  40d5ac:	ldr	x0, [x29, #120]
  40d5b0:	ldr	x0, [x0, #8]
  40d5b4:	bl	40c5bc <lookup_file@@Base>
  40d5b8:	mov	x1, x0
  40d5bc:	ldr	x0, [x29, #120]
  40d5c0:	str	x1, [x0, #16]
  40d5c4:	ldr	x0, [x29, #120]
  40d5c8:	ldr	x0, [x0, #16]
  40d5cc:	cmp	x0, #0x0
  40d5d0:	b.ne	40d5ec <enter_prereqs@@Base+0x27c>  // b.any
  40d5d4:	ldr	x0, [x29, #120]
  40d5d8:	ldr	x0, [x0, #8]
  40d5dc:	bl	40c678 <enter_file@@Base>
  40d5e0:	mov	x1, x0
  40d5e4:	ldr	x0, [x29, #120]
  40d5e8:	str	x1, [x0, #16]
  40d5ec:	ldr	x0, [x29, #120]
  40d5f0:	ldrb	w1, [x0, #33]
  40d5f4:	and	w1, w1, #0xfffffffb
  40d5f8:	strb	w1, [x0, #33]
  40d5fc:	ldr	x0, [x29, #120]
  40d600:	str	xzr, [x0, #8]
  40d604:	b	40d60c <enter_prereqs@@Base+0x29c>
  40d608:	nop
  40d60c:	ldr	x0, [x29, #120]
  40d610:	ldr	x0, [x0]
  40d614:	str	x0, [x29, #120]
  40d618:	ldr	x0, [x29, #120]
  40d61c:	cmp	x0, #0x0
  40d620:	b.ne	40d594 <enter_prereqs@@Base+0x224>  // b.any
  40d624:	ldr	x0, [x29, #40]
  40d628:	mov	sp, x29
  40d62c:	ldr	x19, [sp, #16]
  40d630:	ldp	x29, x30, [sp], #128
  40d634:	ret
  40d638:	stp	x29, x30, [sp, #-112]!
  40d63c:	mov	x29, sp
  40d640:	str	x0, [sp, #24]
  40d644:	ldr	x0, [sp, #24]
  40d648:	ldr	x0, [x0, #40]
  40d64c:	str	x0, [sp, #72]
  40d650:	str	wzr, [sp, #92]
  40d654:	ldr	x0, [sp, #24]
  40d658:	ldrb	w1, [x0, #137]
  40d65c:	and	w1, w1, #0xfffffffd
  40d660:	strb	w1, [x0, #137]
  40d664:	ldr	x0, [sp, #24]
  40d668:	add	x0, x0, #0x18
  40d66c:	str	x0, [sp, #96]
  40d670:	ldr	x0, [sp, #24]
  40d674:	ldr	x0, [x0, #24]
  40d678:	str	x0, [sp, #104]
  40d67c:	b	40d8a0 <enter_prereqs@@Base+0x530>
  40d680:	ldr	x0, [sp, #104]
  40d684:	ldr	x0, [x0, #8]
  40d688:	str	x0, [sp, #80]
  40d68c:	ldr	x0, [sp, #104]
  40d690:	ldr	x0, [x0, #8]
  40d694:	cmp	x0, #0x0
  40d698:	b.eq	40d6b4 <enter_prereqs@@Base+0x344>  // b.none
  40d69c:	ldr	x0, [sp, #104]
  40d6a0:	ldrb	w0, [x0, #33]
  40d6a4:	and	w0, w0, #0x8
  40d6a8:	and	w0, w0, #0xff
  40d6ac:	cmp	w0, #0x0
  40d6b0:	b.ne	40d6cc <enter_prereqs@@Base+0x35c>  // b.any
  40d6b4:	ldr	x0, [sp, #104]
  40d6b8:	str	x0, [sp, #96]
  40d6bc:	ldr	x0, [sp, #104]
  40d6c0:	ldr	x0, [x0]
  40d6c4:	str	x0, [sp, #104]
  40d6c8:	b	40d8a0 <enter_prereqs@@Base+0x530>
  40d6cc:	ldr	x0, [sp, #104]
  40d6d0:	ldrb	w0, [x0, #33]
  40d6d4:	and	w0, w0, #0x4
  40d6d8:	and	w0, w0, #0xff
  40d6dc:	cmp	w0, #0x0
  40d6e0:	b.eq	40d760 <enter_prereqs@@Base+0x3f0>  // b.none
  40d6e4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d6e8:	add	x0, x0, #0x4c0
  40d6ec:	bl	40bf38 <variable_expand@@Base>
  40d6f0:	str	x0, [sp, #64]
  40d6f4:	mov	w6, #0x0                   	// #0
  40d6f8:	mov	x5, #0x2                   	// #2
  40d6fc:	mov	x4, #0x1                   	// #1
  40d700:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d704:	add	x3, x0, #0x4c8
  40d708:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40d70c:	add	x2, x0, #0x4b8
  40d710:	ldr	x1, [sp, #80]
  40d714:	ldr	x0, [sp, #64]
  40d718:	bl	40f5ac <subst_expand@@Base>
  40d71c:	str	x0, [sp, #64]
  40d720:	ldr	x0, [sp, #64]
  40d724:	strb	wzr, [x0]
  40d728:	ldr	x0, [sp, #80]
  40d72c:	bl	406c00 <free@plt>
  40d730:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40d734:	add	x0, x0, #0xa00
  40d738:	ldr	x0, [x0]
  40d73c:	bl	422788 <xstrdup@@Base>
  40d740:	str	x0, [sp, #80]
  40d744:	ldr	x0, [sp, #104]
  40d748:	ldr	x1, [sp, #80]
  40d74c:	str	x1, [x0, #8]
  40d750:	ldr	x0, [sp, #104]
  40d754:	ldrb	w1, [x0, #33]
  40d758:	and	w1, w1, #0xfffffffb
  40d75c:	strb	w1, [x0, #33]
  40d760:	ldr	w0, [sp, #92]
  40d764:	cmp	w0, #0x0
  40d768:	b.ne	40d780 <enter_prereqs@@Base+0x410>  // b.any
  40d76c:	mov	w1, #0x0                   	// #0
  40d770:	ldr	x0, [sp, #24]
  40d774:	bl	432088 <initialize_file_variables@@Base>
  40d778:	mov	w0, #0x1                   	// #1
  40d77c:	str	w0, [sp, #92]
  40d780:	ldr	x0, [sp, #104]
  40d784:	ldr	x0, [x0, #24]
  40d788:	cmp	x0, #0x0
  40d78c:	b.eq	40d7a0 <enter_prereqs@@Base+0x430>  // b.none
  40d790:	ldr	x0, [sp, #104]
  40d794:	ldr	x1, [x0, #24]
  40d798:	ldr	x0, [sp, #24]
  40d79c:	str	x1, [x0, #40]
  40d7a0:	ldr	x0, [sp, #24]
  40d7a4:	bl	4081c8 <set_file_variables@@Base>
  40d7a8:	ldr	x0, [sp, #104]
  40d7ac:	ldr	x0, [x0, #8]
  40d7b0:	ldr	x1, [sp, #24]
  40d7b4:	bl	40c088 <variable_expand_for_file@@Base>
  40d7b8:	str	x0, [sp, #56]
  40d7bc:	ldr	x0, [sp, #104]
  40d7c0:	ldr	x0, [x0, #24]
  40d7c4:	cmp	x0, #0x0
  40d7c8:	b.eq	40d7d8 <enter_prereqs@@Base+0x468>  // b.none
  40d7cc:	ldr	x0, [sp, #24]
  40d7d0:	ldr	x1, [sp, #72]
  40d7d4:	str	x1, [x0, #40]
  40d7d8:	ldr	x0, [sp, #80]
  40d7dc:	bl	406c00 <free@plt>
  40d7e0:	ldr	x0, [sp, #56]
  40d7e4:	bl	40d28c <split_prereqs@@Base>
  40d7e8:	mov	x2, x0
  40d7ec:	ldr	x0, [sp, #104]
  40d7f0:	ldr	x0, [x0, #24]
  40d7f4:	mov	x1, x0
  40d7f8:	mov	x0, x2
  40d7fc:	bl	40d370 <enter_prereqs@@Base>
  40d800:	str	x0, [sp, #48]
  40d804:	ldr	x0, [sp, #48]
  40d808:	cmp	x0, #0x0
  40d80c:	b.ne	40d838 <enter_prereqs@@Base+0x4c8>  // b.any
  40d810:	ldr	x0, [sp, #104]
  40d814:	ldr	x1, [x0]
  40d818:	ldr	x0, [sp, #96]
  40d81c:	str	x1, [x0]
  40d820:	ldr	x0, [sp, #104]
  40d824:	bl	406c00 <free@plt>
  40d828:	ldr	x0, [sp, #96]
  40d82c:	ldr	x0, [x0]
  40d830:	str	x0, [sp, #104]
  40d834:	b	40d8a0 <enter_prereqs@@Base+0x530>
  40d838:	ldr	x0, [sp, #104]
  40d83c:	ldr	x0, [x0]
  40d840:	str	x0, [sp, #40]
  40d844:	ldr	x0, [sp, #96]
  40d848:	ldr	x1, [sp, #48]
  40d84c:	str	x1, [x0]
  40d850:	ldr	x0, [sp, #48]
  40d854:	str	x0, [sp, #96]
  40d858:	ldr	x0, [sp, #48]
  40d85c:	ldr	x0, [x0]
  40d860:	str	x0, [sp, #104]
  40d864:	b	40d87c <enter_prereqs@@Base+0x50c>
  40d868:	ldr	x0, [sp, #104]
  40d86c:	str	x0, [sp, #96]
  40d870:	ldr	x0, [sp, #104]
  40d874:	ldr	x0, [x0]
  40d878:	str	x0, [sp, #104]
  40d87c:	ldr	x0, [sp, #104]
  40d880:	cmp	x0, #0x0
  40d884:	b.ne	40d868 <enter_prereqs@@Base+0x4f8>  // b.any
  40d888:	ldr	x0, [sp, #96]
  40d88c:	ldr	x1, [sp, #40]
  40d890:	str	x1, [x0]
  40d894:	ldr	x0, [sp, #96]
  40d898:	ldr	x0, [x0]
  40d89c:	str	x0, [sp, #104]
  40d8a0:	ldr	x0, [sp, #104]
  40d8a4:	cmp	x0, #0x0
  40d8a8:	b.ne	40d680 <enter_prereqs@@Base+0x310>  // b.any
  40d8ac:	nop
  40d8b0:	nop
  40d8b4:	ldp	x29, x30, [sp], #112
  40d8b8:	ret

000000000040d8bc <expand_extra_prereqs@@Base>:
  40d8bc:	stp	x29, x30, [sp, #-48]!
  40d8c0:	mov	x29, sp
  40d8c4:	str	x0, [sp, #24]
  40d8c8:	ldr	x0, [sp, #24]
  40d8cc:	cmp	x0, #0x0
  40d8d0:	b.eq	40d8e8 <expand_extra_prereqs@@Base+0x2c>  // b.none
  40d8d4:	ldr	x0, [sp, #24]
  40d8d8:	ldr	x0, [x0, #8]
  40d8dc:	bl	40bf38 <variable_expand@@Base>
  40d8e0:	bl	40d28c <split_prereqs@@Base>
  40d8e4:	b	40d8ec <expand_extra_prereqs@@Base+0x30>
  40d8e8:	mov	x0, #0x0                   	// #0
  40d8ec:	str	x0, [sp, #32]
  40d8f0:	ldr	x0, [sp, #32]
  40d8f4:	str	x0, [sp, #40]
  40d8f8:	b	40d960 <expand_extra_prereqs@@Base+0xa4>
  40d8fc:	ldr	x0, [sp, #40]
  40d900:	ldr	x0, [x0, #8]
  40d904:	bl	40c5bc <lookup_file@@Base>
  40d908:	mov	x1, x0
  40d90c:	ldr	x0, [sp, #40]
  40d910:	str	x1, [x0, #16]
  40d914:	ldr	x0, [sp, #40]
  40d918:	ldr	x0, [x0, #16]
  40d91c:	cmp	x0, #0x0
  40d920:	b.ne	40d93c <expand_extra_prereqs@@Base+0x80>  // b.any
  40d924:	ldr	x0, [sp, #40]
  40d928:	ldr	x0, [x0, #8]
  40d92c:	bl	40c678 <enter_file@@Base>
  40d930:	mov	x1, x0
  40d934:	ldr	x0, [sp, #40]
  40d938:	str	x1, [x0, #16]
  40d93c:	ldr	x0, [sp, #40]
  40d940:	str	xzr, [x0, #8]
  40d944:	ldr	x0, [sp, #40]
  40d948:	ldrb	w1, [x0, #33]
  40d94c:	orr	w1, w1, #0x10
  40d950:	strb	w1, [x0, #33]
  40d954:	ldr	x0, [sp, #40]
  40d958:	ldr	x0, [x0]
  40d95c:	str	x0, [sp, #40]
  40d960:	ldr	x0, [sp, #40]
  40d964:	cmp	x0, #0x0
  40d968:	b.ne	40d8fc <expand_extra_prereqs@@Base+0x40>  // b.any
  40d96c:	ldr	x0, [sp, #32]
  40d970:	ldp	x29, x30, [sp], #48
  40d974:	ret
  40d978:	stp	x29, x30, [sp, #-64]!
  40d97c:	mov	x29, sp
  40d980:	str	x0, [sp, #24]
  40d984:	str	x1, [sp, #16]
  40d988:	ldr	x0, [sp, #24]
  40d98c:	str	x0, [sp, #40]
  40d990:	str	xzr, [sp, #56]
  40d994:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40d998:	add	x0, x0, #0xa5c
  40d99c:	ldr	w0, [x0]
  40d9a0:	cmp	w0, #0x0
  40d9a4:	b.ne	40d9b8 <expand_extra_prereqs@@Base+0xfc>  // b.any
  40d9a8:	ldr	x0, [sp, #40]
  40d9ac:	ldrb	w1, [x0, #137]
  40d9b0:	and	w1, w1, #0xfffffffd
  40d9b4:	strb	w1, [x0, #137]
  40d9b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40d9bc:	add	x0, x0, #0x588
  40d9c0:	ldr	w0, [x0]
  40d9c4:	cmp	w0, #0x0
  40d9c8:	b.eq	40d9dc <expand_extra_prereqs@@Base+0x120>  // b.none
  40d9cc:	ldr	x0, [sp, #40]
  40d9d0:	ldrb	w1, [x0, #137]
  40d9d4:	orr	w1, w1, #0x40
  40d9d8:	strb	w1, [x0, #137]
  40d9dc:	ldr	x0, [sp, #40]
  40d9e0:	ldr	x0, [x0, #80]
  40d9e4:	cmp	x0, #0x0
  40d9e8:	b.eq	40da18 <expand_extra_prereqs@@Base+0x15c>  // b.none
  40d9ec:	ldr	x0, [sp, #40]
  40d9f0:	ldr	x0, [x0, #80]
  40d9f4:	ldr	x0, [x0, #8]
  40d9f8:	mov	x2, x0
  40d9fc:	mov	x1, #0xe                   	// #14
  40da00:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40da04:	add	x0, x0, #0x4d0
  40da08:	bl	432050 <lookup_variable_in_set@@Base>
  40da0c:	bl	40d8bc <expand_extra_prereqs@@Base>
  40da10:	str	x0, [sp, #56]
  40da14:	b	40da3c <expand_extra_prereqs@@Base+0x180>
  40da18:	ldr	x0, [sp, #40]
  40da1c:	ldrb	w0, [x0, #137]
  40da20:	and	w0, w0, #0x8
  40da24:	and	w0, w0, #0xff
  40da28:	cmp	w0, #0x0
  40da2c:	b.eq	40da3c <expand_extra_prereqs@@Base+0x180>  // b.none
  40da30:	ldr	x0, [sp, #16]
  40da34:	bl	422ad0 <copy_dep_chain@@Base>
  40da38:	str	x0, [sp, #56]
  40da3c:	ldr	x0, [sp, #56]
  40da40:	cmp	x0, #0x0
  40da44:	b.eq	40dbb8 <expand_extra_prereqs@@Base+0x2fc>  // b.none
  40da48:	ldr	x0, [sp, #56]
  40da4c:	str	x0, [sp, #48]
  40da50:	b	40db3c <expand_extra_prereqs@@Base+0x280>
  40da54:	ldr	x0, [sp, #40]
  40da58:	ldr	x1, [x0]
  40da5c:	ldr	x0, [sp, #48]
  40da60:	ldr	x0, [x0, #8]
  40da64:	cmp	x0, #0x0
  40da68:	b.eq	40da78 <expand_extra_prereqs@@Base+0x1bc>  // b.none
  40da6c:	ldr	x0, [sp, #48]
  40da70:	ldr	x0, [x0, #8]
  40da74:	b	40da84 <expand_extra_prereqs@@Base+0x1c8>
  40da78:	ldr	x0, [sp, #48]
  40da7c:	ldr	x0, [x0, #16]
  40da80:	ldr	x0, [x0]
  40da84:	cmp	x0, x1
  40da88:	b.eq	40db48 <expand_extra_prereqs@@Base+0x28c>  // b.none
  40da8c:	ldr	x0, [sp, #40]
  40da90:	ldr	x0, [x0]
  40da94:	ldrb	w1, [x0]
  40da98:	ldr	x0, [sp, #48]
  40da9c:	ldr	x0, [x0, #8]
  40daa0:	cmp	x0, #0x0
  40daa4:	b.eq	40dab4 <expand_extra_prereqs@@Base+0x1f8>  // b.none
  40daa8:	ldr	x0, [sp, #48]
  40daac:	ldr	x0, [x0, #8]
  40dab0:	b	40dac0 <expand_extra_prereqs@@Base+0x204>
  40dab4:	ldr	x0, [sp, #48]
  40dab8:	ldr	x0, [x0, #16]
  40dabc:	ldr	x0, [x0]
  40dac0:	ldrb	w0, [x0]
  40dac4:	cmp	w1, w0
  40dac8:	b.ne	40db30 <expand_extra_prereqs@@Base+0x274>  // b.any
  40dacc:	ldr	x0, [sp, #40]
  40dad0:	ldr	x0, [x0]
  40dad4:	ldrb	w0, [x0]
  40dad8:	cmp	w0, #0x0
  40dadc:	b.eq	40db48 <expand_extra_prereqs@@Base+0x28c>  // b.none
  40dae0:	ldr	x0, [sp, #40]
  40dae4:	ldr	x0, [x0]
  40dae8:	add	x2, x0, #0x1
  40daec:	ldr	x0, [sp, #48]
  40daf0:	ldr	x0, [x0, #8]
  40daf4:	cmp	x0, #0x0
  40daf8:	b.eq	40db0c <expand_extra_prereqs@@Base+0x250>  // b.none
  40dafc:	ldr	x0, [sp, #48]
  40db00:	ldr	x0, [x0, #8]
  40db04:	add	x0, x0, #0x1
  40db08:	b	40db1c <expand_extra_prereqs@@Base+0x260>
  40db0c:	ldr	x0, [sp, #48]
  40db10:	ldr	x0, [x0, #16]
  40db14:	ldr	x0, [x0]
  40db18:	add	x0, x0, #0x1
  40db1c:	mov	x1, x0
  40db20:	mov	x0, x2
  40db24:	bl	406bc0 <strcmp@plt>
  40db28:	cmp	w0, #0x0
  40db2c:	b.eq	40db48 <expand_extra_prereqs@@Base+0x28c>  // b.none
  40db30:	ldr	x0, [sp, #48]
  40db34:	ldr	x0, [x0]
  40db38:	str	x0, [sp, #48]
  40db3c:	ldr	x0, [sp, #48]
  40db40:	cmp	x0, #0x0
  40db44:	b.ne	40da54 <expand_extra_prereqs@@Base+0x198>  // b.any
  40db48:	ldr	x0, [sp, #48]
  40db4c:	cmp	x0, #0x0
  40db50:	b.eq	40db60 <expand_extra_prereqs@@Base+0x2a4>  // b.none
  40db54:	ldr	x0, [sp, #56]
  40db58:	bl	422b98 <free_ns_chain@@Base>
  40db5c:	b	40dbb8 <expand_extra_prereqs@@Base+0x2fc>
  40db60:	ldr	x0, [sp, #40]
  40db64:	ldr	x0, [x0, #24]
  40db68:	cmp	x0, #0x0
  40db6c:	b.ne	40db80 <expand_extra_prereqs@@Base+0x2c4>  // b.any
  40db70:	ldr	x0, [sp, #40]
  40db74:	ldr	x1, [sp, #56]
  40db78:	str	x1, [x0, #24]
  40db7c:	b	40dbb8 <expand_extra_prereqs@@Base+0x2fc>
  40db80:	ldr	x0, [sp, #40]
  40db84:	ldr	x0, [x0, #24]
  40db88:	str	x0, [sp, #48]
  40db8c:	b	40db9c <expand_extra_prereqs@@Base+0x2e0>
  40db90:	ldr	x0, [sp, #48]
  40db94:	ldr	x0, [x0]
  40db98:	str	x0, [sp, #48]
  40db9c:	ldr	x0, [sp, #48]
  40dba0:	ldr	x0, [x0]
  40dba4:	cmp	x0, #0x0
  40dba8:	b.ne	40db90 <expand_extra_prereqs@@Base+0x2d4>  // b.any
  40dbac:	ldr	x0, [sp, #48]
  40dbb0:	ldr	x1, [sp, #56]
  40dbb4:	str	x1, [x0]
  40dbb8:	nop
  40dbbc:	ldp	x29, x30, [sp], #64
  40dbc0:	ret

000000000040dbc4 <snap_deps@@Base>:
  40dbc4:	stp	x29, x30, [sp, #-80]!
  40dbc8:	mov	x29, sp
  40dbcc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40dbd0:	add	x0, x0, #0x528
  40dbd4:	mov	w1, #0x1                   	// #1
  40dbd8:	str	w1, [x0]
  40dbdc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40dbe0:	add	x0, x0, #0xa5c
  40dbe4:	ldr	w0, [x0]
  40dbe8:	cmp	w0, #0x0
  40dbec:	b.eq	40dcec <snap_deps@@Base+0x128>  // b.none
  40dbf0:	mov	x2, #0x0                   	// #0
  40dbf4:	mov	x1, #0x0                   	// #0
  40dbf8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40dbfc:	add	x0, x0, #0x530
  40dc00:	bl	414b54 <hash_dump@@Base>
  40dc04:	str	x0, [sp, #40]
  40dc08:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40dc0c:	add	x0, x0, #0x530
  40dc10:	ldr	x0, [x0, #48]
  40dc14:	lsl	x0, x0, #3
  40dc18:	ldr	x1, [sp, #40]
  40dc1c:	add	x0, x1, x0
  40dc20:	str	x0, [sp, #32]
  40dc24:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40dc28:	add	x0, x0, #0x4e0
  40dc2c:	bl	40c5bc <lookup_file@@Base>
  40dc30:	str	x0, [sp, #72]
  40dc34:	ldr	x0, [sp, #72]
  40dc38:	cmp	x0, #0x0
  40dc3c:	b.eq	40dc4c <snap_deps@@Base+0x88>  // b.none
  40dc40:	ldr	x0, [sp, #72]
  40dc44:	ldr	x0, [x0]
  40dc48:	b	40dc50 <snap_deps@@Base+0x8c>
  40dc4c:	mov	x0, #0x0                   	// #0
  40dc50:	str	x0, [sp, #24]
  40dc54:	b	40dc6c <snap_deps@@Base+0xa8>
  40dc58:	ldr	x0, [sp, #72]
  40dc5c:	bl	40d638 <enter_prereqs@@Base+0x2c8>
  40dc60:	ldr	x0, [sp, #72]
  40dc64:	ldr	x0, [x0, #56]
  40dc68:	str	x0, [sp, #72]
  40dc6c:	ldr	x0, [sp, #72]
  40dc70:	cmp	x0, #0x0
  40dc74:	b.ne	40dc58 <snap_deps@@Base+0x94>  // b.any
  40dc78:	ldr	x0, [sp, #40]
  40dc7c:	str	x0, [sp, #48]
  40dc80:	b	40dcd4 <snap_deps@@Base+0x110>
  40dc84:	ldr	x0, [sp, #48]
  40dc88:	ldr	x0, [x0]
  40dc8c:	str	x0, [sp, #72]
  40dc90:	b	40dcbc <snap_deps@@Base+0xf8>
  40dc94:	ldr	x0, [sp, #72]
  40dc98:	ldr	x0, [x0]
  40dc9c:	ldr	x1, [sp, #24]
  40dca0:	cmp	x1, x0
  40dca4:	b.eq	40dcb0 <snap_deps@@Base+0xec>  // b.none
  40dca8:	ldr	x0, [sp, #72]
  40dcac:	bl	40d638 <enter_prereqs@@Base+0x2c8>
  40dcb0:	ldr	x0, [sp, #72]
  40dcb4:	ldr	x0, [x0, #56]
  40dcb8:	str	x0, [sp, #72]
  40dcbc:	ldr	x0, [sp, #72]
  40dcc0:	cmp	x0, #0x0
  40dcc4:	b.ne	40dc94 <snap_deps@@Base+0xd0>  // b.any
  40dcc8:	ldr	x0, [sp, #48]
  40dccc:	add	x0, x0, #0x8
  40dcd0:	str	x0, [sp, #48]
  40dcd4:	ldr	x1, [sp, #48]
  40dcd8:	ldr	x0, [sp, #32]
  40dcdc:	cmp	x1, x0
  40dce0:	b.cc	40dc84 <snap_deps@@Base+0xc0>  // b.lo, b.ul, b.last
  40dce4:	ldr	x0, [sp, #40]
  40dce8:	bl	406c00 <free@plt>
  40dcec:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40dcf0:	add	x0, x0, #0x4f0
  40dcf4:	bl	40c5bc <lookup_file@@Base>
  40dcf8:	str	x0, [sp, #72]
  40dcfc:	b	40dd6c <snap_deps@@Base+0x1a8>
  40dd00:	ldr	x0, [sp, #72]
  40dd04:	ldr	x0, [x0, #24]
  40dd08:	str	x0, [sp, #56]
  40dd0c:	b	40dd54 <snap_deps@@Base+0x190>
  40dd10:	ldr	x0, [sp, #56]
  40dd14:	ldr	x0, [x0, #16]
  40dd18:	str	x0, [sp, #64]
  40dd1c:	b	40dd3c <snap_deps@@Base+0x178>
  40dd20:	ldr	x0, [sp, #64]
  40dd24:	ldrb	w1, [x0, #136]
  40dd28:	orr	w1, w1, #0x20
  40dd2c:	strb	w1, [x0, #136]
  40dd30:	ldr	x0, [sp, #64]
  40dd34:	ldr	x0, [x0, #56]
  40dd38:	str	x0, [sp, #64]
  40dd3c:	ldr	x0, [sp, #64]
  40dd40:	cmp	x0, #0x0
  40dd44:	b.ne	40dd20 <snap_deps@@Base+0x15c>  // b.any
  40dd48:	ldr	x0, [sp, #56]
  40dd4c:	ldr	x0, [x0]
  40dd50:	str	x0, [sp, #56]
  40dd54:	ldr	x0, [sp, #56]
  40dd58:	cmp	x0, #0x0
  40dd5c:	b.ne	40dd10 <snap_deps@@Base+0x14c>  // b.any
  40dd60:	ldr	x0, [sp, #72]
  40dd64:	ldr	x0, [x0, #56]
  40dd68:	str	x0, [sp, #72]
  40dd6c:	ldr	x0, [sp, #72]
  40dd70:	cmp	x0, #0x0
  40dd74:	b.ne	40dd00 <snap_deps@@Base+0x13c>  // b.any
  40dd78:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40dd7c:	add	x0, x0, #0x500
  40dd80:	bl	40c5bc <lookup_file@@Base>
  40dd84:	str	x0, [sp, #72]
  40dd88:	b	40ddf8 <snap_deps@@Base+0x234>
  40dd8c:	ldr	x0, [sp, #72]
  40dd90:	ldr	x0, [x0, #24]
  40dd94:	str	x0, [sp, #56]
  40dd98:	b	40dde0 <snap_deps@@Base+0x21c>
  40dd9c:	ldr	x0, [sp, #56]
  40dda0:	ldr	x0, [x0, #16]
  40dda4:	str	x0, [sp, #64]
  40dda8:	b	40ddc8 <snap_deps@@Base+0x204>
  40ddac:	ldr	x0, [sp, #64]
  40ddb0:	ldrb	w1, [x0, #136]
  40ddb4:	orr	w1, w1, #0xffffff80
  40ddb8:	strb	w1, [x0, #136]
  40ddbc:	ldr	x0, [sp, #64]
  40ddc0:	ldr	x0, [x0, #56]
  40ddc4:	str	x0, [sp, #64]
  40ddc8:	ldr	x0, [sp, #64]
  40ddcc:	cmp	x0, #0x0
  40ddd0:	b.ne	40ddac <snap_deps@@Base+0x1e8>  // b.any
  40ddd4:	ldr	x0, [sp, #56]
  40ddd8:	ldr	x0, [x0]
  40dddc:	str	x0, [sp, #56]
  40dde0:	ldr	x0, [sp, #56]
  40dde4:	cmp	x0, #0x0
  40dde8:	b.ne	40dd9c <snap_deps@@Base+0x1d8>  // b.any
  40ddec:	ldr	x0, [sp, #72]
  40ddf0:	ldr	x0, [x0, #56]
  40ddf4:	str	x0, [sp, #72]
  40ddf8:	ldr	x0, [sp, #72]
  40ddfc:	cmp	x0, #0x0
  40de00:	b.ne	40dd8c <snap_deps@@Base+0x1c8>  // b.any
  40de04:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40de08:	add	x0, x0, #0x518
  40de0c:	bl	40c5bc <lookup_file@@Base>
  40de10:	str	x0, [sp, #72]
  40de14:	b	40deac <snap_deps@@Base+0x2e8>
  40de18:	ldr	x0, [sp, #72]
  40de1c:	ldr	x0, [x0, #24]
  40de20:	str	x0, [sp, #56]
  40de24:	b	40de94 <snap_deps@@Base+0x2d0>
  40de28:	ldr	x0, [sp, #56]
  40de2c:	ldr	x0, [x0, #16]
  40de30:	str	x0, [sp, #64]
  40de34:	b	40de7c <snap_deps@@Base+0x2b8>
  40de38:	ldr	x0, [sp, #64]
  40de3c:	ldrb	w1, [x0, #137]
  40de40:	orr	w1, w1, #0x20
  40de44:	strb	w1, [x0, #137]
  40de48:	ldr	x0, [sp, #64]
  40de4c:	ldrb	w1, [x0, #137]
  40de50:	orr	w1, w1, #0x8
  40de54:	strb	w1, [x0, #137]
  40de58:	ldr	x0, [sp, #64]
  40de5c:	mov	x1, #0x1                   	// #1
  40de60:	str	x1, [x0, #112]
  40de64:	ldr	x0, [sp, #64]
  40de68:	mov	x1, #0x1                   	// #1
  40de6c:	str	x1, [x0, #120]
  40de70:	ldr	x0, [sp, #64]
  40de74:	ldr	x0, [x0, #56]
  40de78:	str	x0, [sp, #64]
  40de7c:	ldr	x0, [sp, #64]
  40de80:	cmp	x0, #0x0
  40de84:	b.ne	40de38 <snap_deps@@Base+0x274>  // b.any
  40de88:	ldr	x0, [sp, #56]
  40de8c:	ldr	x0, [x0]
  40de90:	str	x0, [sp, #56]
  40de94:	ldr	x0, [sp, #56]
  40de98:	cmp	x0, #0x0
  40de9c:	b.ne	40de28 <snap_deps@@Base+0x264>  // b.any
  40dea0:	ldr	x0, [sp, #72]
  40dea4:	ldr	x0, [x0, #56]
  40dea8:	str	x0, [sp, #72]
  40deac:	ldr	x0, [sp, #72]
  40deb0:	cmp	x0, #0x0
  40deb4:	b.ne	40de18 <snap_deps@@Base+0x254>  // b.any
  40deb8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40debc:	add	x0, x0, #0x520
  40dec0:	bl	40c5bc <lookup_file@@Base>
  40dec4:	str	x0, [sp, #72]
  40dec8:	b	40df38 <snap_deps@@Base+0x374>
  40decc:	ldr	x0, [sp, #72]
  40ded0:	ldr	x0, [x0, #24]
  40ded4:	str	x0, [sp, #56]
  40ded8:	b	40df20 <snap_deps@@Base+0x35c>
  40dedc:	ldr	x0, [sp, #56]
  40dee0:	ldr	x0, [x0, #16]
  40dee4:	str	x0, [sp, #64]
  40dee8:	b	40df08 <snap_deps@@Base+0x344>
  40deec:	ldr	x0, [sp, #64]
  40def0:	ldrb	w1, [x0, #137]
  40def4:	orr	w1, w1, #0x40
  40def8:	strb	w1, [x0, #137]
  40defc:	ldr	x0, [sp, #64]
  40df00:	ldr	x0, [x0, #56]
  40df04:	str	x0, [sp, #64]
  40df08:	ldr	x0, [sp, #64]
  40df0c:	cmp	x0, #0x0
  40df10:	b.ne	40deec <snap_deps@@Base+0x328>  // b.any
  40df14:	ldr	x0, [sp, #56]
  40df18:	ldr	x0, [x0]
  40df1c:	str	x0, [sp, #56]
  40df20:	ldr	x0, [sp, #56]
  40df24:	cmp	x0, #0x0
  40df28:	b.ne	40dedc <snap_deps@@Base+0x318>  // b.any
  40df2c:	ldr	x0, [sp, #72]
  40df30:	ldr	x0, [x0, #56]
  40df34:	str	x0, [sp, #72]
  40df38:	ldr	x0, [sp, #72]
  40df3c:	cmp	x0, #0x0
  40df40:	b.ne	40decc <snap_deps@@Base+0x308>  // b.any
  40df44:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40df48:	add	x0, x0, #0x530
  40df4c:	bl	40c5bc <lookup_file@@Base>
  40df50:	str	x0, [sp, #72]
  40df54:	b	40e008 <snap_deps@@Base+0x444>
  40df58:	ldr	x0, [sp, #72]
  40df5c:	ldr	x0, [x0, #24]
  40df60:	cmp	x0, #0x0
  40df64:	b.eq	40dfec <snap_deps@@Base+0x428>  // b.none
  40df68:	ldr	x0, [sp, #72]
  40df6c:	ldr	x0, [x0, #24]
  40df70:	str	x0, [sp, #56]
  40df74:	b	40dfdc <snap_deps@@Base+0x418>
  40df78:	ldr	x0, [sp, #56]
  40df7c:	ldr	x0, [x0, #16]
  40df80:	str	x0, [sp, #64]
  40df84:	b	40dfc4 <snap_deps@@Base+0x400>
  40df88:	ldr	x0, [sp, #64]
  40df8c:	ldrb	w1, [x0, #137]
  40df90:	orr	w1, w1, #0xffffff80
  40df94:	strb	w1, [x0, #137]
  40df98:	ldr	x0, [sp, #64]
  40df9c:	ldrb	w0, [x0, #137]
  40dfa0:	ubfx	x0, x0, #7, #1
  40dfa4:	and	w2, w0, #0xff
  40dfa8:	ldr	x1, [sp, #64]
  40dfac:	ldrb	w0, [x1, #137]
  40dfb0:	bfi	w0, w2, #6, #1
  40dfb4:	strb	w0, [x1, #137]
  40dfb8:	ldr	x0, [sp, #64]
  40dfbc:	ldr	x0, [x0, #56]
  40dfc0:	str	x0, [sp, #64]
  40dfc4:	ldr	x0, [sp, #64]
  40dfc8:	cmp	x0, #0x0
  40dfcc:	b.ne	40df88 <snap_deps@@Base+0x3c4>  // b.any
  40dfd0:	ldr	x0, [sp, #56]
  40dfd4:	ldr	x0, [x0]
  40dfd8:	str	x0, [sp, #56]
  40dfdc:	ldr	x0, [sp, #56]
  40dfe0:	cmp	x0, #0x0
  40dfe4:	b.ne	40df78 <snap_deps@@Base+0x3b4>  // b.any
  40dfe8:	b	40dffc <snap_deps@@Base+0x438>
  40dfec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40dff0:	add	x0, x0, #0x588
  40dff4:	mov	w1, #0x1                   	// #1
  40dff8:	str	w1, [x0]
  40dffc:	ldr	x0, [sp, #72]
  40e000:	ldr	x0, [x0, #56]
  40e004:	str	x0, [sp, #72]
  40e008:	ldr	x0, [sp, #72]
  40e00c:	cmp	x0, #0x0
  40e010:	b.ne	40df58 <snap_deps@@Base+0x394>  // b.any
  40e014:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e018:	add	x0, x0, #0x540
  40e01c:	bl	40c5bc <lookup_file@@Base>
  40e020:	str	x0, [sp, #72]
  40e024:	ldr	x0, [sp, #72]
  40e028:	cmp	x0, #0x0
  40e02c:	b.eq	40e058 <snap_deps@@Base+0x494>  // b.none
  40e030:	ldr	x0, [sp, #72]
  40e034:	ldrb	w0, [x0, #137]
  40e038:	and	w0, w0, #0x8
  40e03c:	and	w0, w0, #0xff
  40e040:	cmp	w0, #0x0
  40e044:	b.eq	40e058 <snap_deps@@Base+0x494>  // b.none
  40e048:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40e04c:	add	x0, x0, #0xb54
  40e050:	mov	w1, #0x1                   	// #1
  40e054:	str	w1, [x0]
  40e058:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e05c:	add	x0, x0, #0x558
  40e060:	bl	40c5bc <lookup_file@@Base>
  40e064:	str	x0, [sp, #72]
  40e068:	ldr	x0, [sp, #72]
  40e06c:	cmp	x0, #0x0
  40e070:	b.eq	40e114 <snap_deps@@Base+0x550>  // b.none
  40e074:	ldr	x0, [sp, #72]
  40e078:	ldrb	w0, [x0, #137]
  40e07c:	and	w0, w0, #0x8
  40e080:	and	w0, w0, #0xff
  40e084:	cmp	w0, #0x0
  40e088:	b.eq	40e114 <snap_deps@@Base+0x550>  // b.none
  40e08c:	ldr	x0, [sp, #72]
  40e090:	ldr	x0, [x0, #24]
  40e094:	cmp	x0, #0x0
  40e098:	b.ne	40e0b0 <snap_deps@@Base+0x4ec>  // b.any
  40e09c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e0a0:	add	x0, x0, #0x6ec
  40e0a4:	mov	w1, #0x1                   	// #1
  40e0a8:	str	w1, [x0]
  40e0ac:	b	40e114 <snap_deps@@Base+0x550>
  40e0b0:	ldr	x0, [sp, #72]
  40e0b4:	ldr	x0, [x0, #24]
  40e0b8:	str	x0, [sp, #56]
  40e0bc:	b	40e108 <snap_deps@@Base+0x544>
  40e0c0:	ldr	x0, [sp, #56]
  40e0c4:	ldr	x0, [x0, #16]
  40e0c8:	str	x0, [sp, #64]
  40e0cc:	b	40e0f0 <snap_deps@@Base+0x52c>
  40e0d0:	ldr	x0, [sp, #64]
  40e0d4:	ldr	w0, [x0, #132]
  40e0d8:	orr	w1, w0, #0x4
  40e0dc:	ldr	x0, [sp, #64]
  40e0e0:	str	w1, [x0, #132]
  40e0e4:	ldr	x0, [sp, #64]
  40e0e8:	ldr	x0, [x0, #56]
  40e0ec:	str	x0, [sp, #64]
  40e0f0:	ldr	x0, [sp, #64]
  40e0f4:	cmp	x0, #0x0
  40e0f8:	b.ne	40e0d0 <snap_deps@@Base+0x50c>  // b.any
  40e0fc:	ldr	x0, [sp, #56]
  40e100:	ldr	x0, [x0]
  40e104:	str	x0, [sp, #56]
  40e108:	ldr	x0, [sp, #56]
  40e10c:	cmp	x0, #0x0
  40e110:	b.ne	40e0c0 <snap_deps@@Base+0x4fc>  // b.any
  40e114:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e118:	add	x0, x0, #0x560
  40e11c:	bl	40c5bc <lookup_file@@Base>
  40e120:	str	x0, [sp, #72]
  40e124:	ldr	x0, [sp, #72]
  40e128:	cmp	x0, #0x0
  40e12c:	b.eq	40e1d0 <snap_deps@@Base+0x60c>  // b.none
  40e130:	ldr	x0, [sp, #72]
  40e134:	ldrb	w0, [x0, #137]
  40e138:	and	w0, w0, #0x8
  40e13c:	and	w0, w0, #0xff
  40e140:	cmp	w0, #0x0
  40e144:	b.eq	40e1d0 <snap_deps@@Base+0x60c>  // b.none
  40e148:	ldr	x0, [sp, #72]
  40e14c:	ldr	x0, [x0, #24]
  40e150:	cmp	x0, #0x0
  40e154:	b.ne	40e16c <snap_deps@@Base+0x5a8>  // b.any
  40e158:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e15c:	add	x0, x0, #0x6d8
  40e160:	mov	w1, #0x1                   	// #1
  40e164:	str	w1, [x0]
  40e168:	b	40e1d0 <snap_deps@@Base+0x60c>
  40e16c:	ldr	x0, [sp, #72]
  40e170:	ldr	x0, [x0, #24]
  40e174:	str	x0, [sp, #56]
  40e178:	b	40e1c4 <snap_deps@@Base+0x600>
  40e17c:	ldr	x0, [sp, #56]
  40e180:	ldr	x0, [x0, #16]
  40e184:	str	x0, [sp, #64]
  40e188:	b	40e1ac <snap_deps@@Base+0x5e8>
  40e18c:	ldr	x0, [sp, #64]
  40e190:	ldr	w0, [x0, #132]
  40e194:	orr	w1, w0, #0x2
  40e198:	ldr	x0, [sp, #64]
  40e19c:	str	w1, [x0, #132]
  40e1a0:	ldr	x0, [sp, #64]
  40e1a4:	ldr	x0, [x0, #56]
  40e1a8:	str	x0, [sp, #64]
  40e1ac:	ldr	x0, [sp, #64]
  40e1b0:	cmp	x0, #0x0
  40e1b4:	b.ne	40e18c <snap_deps@@Base+0x5c8>  // b.any
  40e1b8:	ldr	x0, [sp, #56]
  40e1bc:	ldr	x0, [x0]
  40e1c0:	str	x0, [sp, #56]
  40e1c4:	ldr	x0, [sp, #56]
  40e1c8:	cmp	x0, #0x0
  40e1cc:	b.ne	40e17c <snap_deps@@Base+0x5b8>  // b.any
  40e1d0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e1d4:	add	x0, x0, #0x568
  40e1d8:	bl	40c5bc <lookup_file@@Base>
  40e1dc:	str	x0, [sp, #72]
  40e1e0:	ldr	x0, [sp, #72]
  40e1e4:	cmp	x0, #0x0
  40e1e8:	b.eq	40e214 <snap_deps@@Base+0x650>  // b.none
  40e1ec:	ldr	x0, [sp, #72]
  40e1f0:	ldrb	w0, [x0, #137]
  40e1f4:	and	w0, w0, #0x8
  40e1f8:	and	w0, w0, #0xff
  40e1fc:	cmp	w0, #0x0
  40e200:	b.eq	40e214 <snap_deps@@Base+0x650>  // b.none
  40e204:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  40e208:	add	x0, x0, #0xa74
  40e20c:	mov	w1, #0x1                   	// #1
  40e210:	str	w1, [x0]
  40e214:	mov	x1, #0xe                   	// #14
  40e218:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e21c:	add	x0, x0, #0x4d0
  40e220:	bl	431f68 <lookup_variable@@Base>
  40e224:	bl	40d8bc <expand_extra_prereqs@@Base>
  40e228:	str	x0, [sp, #16]
  40e22c:	ldr	x2, [sp, #16]
  40e230:	adrp	x0, 40d000 <remove_intermediates@@Base+0xf0>
  40e234:	add	x1, x0, #0x978
  40e238:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e23c:	add	x0, x0, #0x530
  40e240:	bl	414840 <hash_map_arg@@Base>
  40e244:	ldr	x0, [sp, #16]
  40e248:	bl	422b98 <free_ns_chain@@Base>
  40e24c:	nop
  40e250:	ldp	x29, x30, [sp], #80
  40e254:	ret

000000000040e258 <set_command_state@@Base>:
  40e258:	sub	sp, sp, #0x20
  40e25c:	str	x0, [sp, #8]
  40e260:	str	w1, [sp, #4]
  40e264:	ldr	w0, [sp, #4]
  40e268:	and	w0, w0, #0x3
  40e26c:	and	w2, w0, #0xff
  40e270:	ldr	x1, [sp, #8]
  40e274:	ldrb	w0, [x1, #136]
  40e278:	bfi	w0, w2, #2, #2
  40e27c:	strb	w0, [x1, #136]
  40e280:	ldr	x0, [sp, #8]
  40e284:	ldr	x0, [x0, #48]
  40e288:	str	x0, [sp, #24]
  40e28c:	b	40e2e0 <set_command_state@@Base+0x88>
  40e290:	ldr	x0, [sp, #24]
  40e294:	ldr	x0, [x0, #16]
  40e298:	ldrb	w0, [x0, #136]
  40e29c:	ubfx	x0, x0, #2, #2
  40e2a0:	and	w0, w0, #0xff
  40e2a4:	mov	w1, w0
  40e2a8:	ldr	w0, [sp, #4]
  40e2ac:	cmp	w0, w1
  40e2b0:	b.ls	40e2d4 <set_command_state@@Base+0x7c>  // b.plast
  40e2b4:	ldr	x0, [sp, #24]
  40e2b8:	ldr	x1, [x0, #16]
  40e2bc:	ldr	w0, [sp, #4]
  40e2c0:	and	w0, w0, #0x3
  40e2c4:	and	w2, w0, #0xff
  40e2c8:	ldrb	w0, [x1, #136]
  40e2cc:	bfi	w0, w2, #2, #2
  40e2d0:	strb	w0, [x1, #136]
  40e2d4:	ldr	x0, [sp, #24]
  40e2d8:	ldr	x0, [x0]
  40e2dc:	str	x0, [sp, #24]
  40e2e0:	ldr	x0, [sp, #24]
  40e2e4:	cmp	x0, #0x0
  40e2e8:	b.ne	40e290 <set_command_state@@Base+0x38>  // b.any
  40e2ec:	nop
  40e2f0:	nop
  40e2f4:	add	sp, sp, #0x20
  40e2f8:	ret

000000000040e2fc <file_timestamp_cons@@Base>:
  40e2fc:	stp	x29, x30, [sp, #-160]!
  40e300:	mov	x29, sp
  40e304:	str	x19, [sp, #16]
  40e308:	str	x0, [sp, #56]
  40e30c:	str	x1, [sp, #48]
  40e310:	str	x2, [sp, #40]
  40e314:	ldr	x0, [sp, #40]
  40e318:	add	w0, w0, #0x3
  40e31c:	str	w0, [sp, #148]
  40e320:	ldr	x0, [sp, #48]
  40e324:	str	x0, [sp, #136]
  40e328:	ldr	x0, [sp, #136]
  40e32c:	lsl	x0, x0, #30
  40e330:	str	x0, [sp, #128]
  40e334:	ldrsw	x0, [sp, #148]
  40e338:	ldr	x1, [sp, #128]
  40e33c:	add	x0, x1, x0
  40e340:	str	x0, [sp, #152]
  40e344:	ldr	x1, [sp, #136]
  40e348:	mov	x0, #0x3ffffffff           	// #17179869183
  40e34c:	cmp	x1, x0
  40e350:	b.hi	40e378 <file_timestamp_cons@@Base+0x7c>  // b.pmore
  40e354:	ldr	x1, [sp, #128]
  40e358:	ldr	x0, [sp, #152]
  40e35c:	cmp	x1, x0
  40e360:	b.hi	40e378 <file_timestamp_cons@@Base+0x7c>  // b.pmore
  40e364:	ldr	x1, [sp, #152]
  40e368:	mov	x0, #0xffffffffffffca02    	// #-13822
  40e36c:	movk	x0, #0xfb9a, lsl #16
  40e370:	cmp	x1, x0
  40e374:	b.ls	40e40c <file_timestamp_cons@@Base+0x110>  // b.plast
  40e378:	ldr	x0, [sp, #56]
  40e37c:	cmp	x0, #0x0
  40e380:	b.ne	40e394 <file_timestamp_cons@@Base+0x98>  // b.any
  40e384:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e388:	add	x0, x0, #0x578
  40e38c:	bl	406e40 <gettext@plt>
  40e390:	b	40e398 <file_timestamp_cons@@Base+0x9c>
  40e394:	ldr	x0, [sp, #56]
  40e398:	str	x0, [sp, #120]
  40e39c:	ldr	x0, [sp, #136]
  40e3a0:	cmp	x0, #0x2
  40e3a4:	b.hi	40e3b0 <file_timestamp_cons@@Base+0xb4>  // b.pmore
  40e3a8:	mov	x0, #0x3                   	// #3
  40e3ac:	b	40e3b8 <file_timestamp_cons@@Base+0xbc>
  40e3b0:	mov	x0, #0xffffffffffffca02    	// #-13822
  40e3b4:	movk	x0, #0xfb9a, lsl #16
  40e3b8:	str	x0, [sp, #152]
  40e3bc:	add	x0, sp, #0x48
  40e3c0:	ldr	x1, [sp, #152]
  40e3c4:	bl	40e4dc <file_timestamp_sprintf@@Base>
  40e3c8:	ldr	x0, [sp, #120]
  40e3cc:	bl	4066f0 <strlen@plt>
  40e3d0:	mov	x19, x0
  40e3d4:	add	x0, sp, #0x48
  40e3d8:	bl	4066f0 <strlen@plt>
  40e3dc:	add	x19, x19, x0
  40e3e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e3e4:	add	x0, x0, #0x588
  40e3e8:	bl	406e40 <gettext@plt>
  40e3ec:	mov	x1, x0
  40e3f0:	add	x0, sp, #0x48
  40e3f4:	mov	x4, x0
  40e3f8:	ldr	x3, [sp, #120]
  40e3fc:	mov	x2, x1
  40e400:	mov	x1, x19
  40e404:	mov	x0, #0x0                   	// #0
  40e408:	bl	423e74 <error@@Base>
  40e40c:	ldr	x0, [sp, #152]
  40e410:	ldr	x19, [sp, #16]
  40e414:	ldp	x29, x30, [sp], #160
  40e418:	ret

000000000040e41c <file_timestamp_now@@Base>:
  40e41c:	stp	x29, x30, [sp, #-96]!
  40e420:	mov	x29, sp
  40e424:	str	x0, [sp, #24]
  40e428:	add	x0, sp, #0x38
  40e42c:	mov	x1, x0
  40e430:	mov	w0, #0x0                   	// #0
  40e434:	bl	406800 <clock_gettime@plt>
  40e438:	cmp	w0, #0x0
  40e43c:	b.ne	40e45c <file_timestamp_now@@Base+0x40>  // b.any
  40e440:	mov	w0, #0x1                   	// #1
  40e444:	str	w0, [sp, #92]
  40e448:	ldr	x0, [sp, #56]
  40e44c:	str	x0, [sp, #80]
  40e450:	ldr	x0, [sp, #64]
  40e454:	str	w0, [sp, #76]
  40e458:	b	40e4b4 <file_timestamp_now@@Base+0x98>
  40e45c:	add	x0, sp, #0x28
  40e460:	mov	x1, #0x0                   	// #0
  40e464:	bl	406a00 <gettimeofday@plt>
  40e468:	cmp	w0, #0x0
  40e46c:	b.ne	40e498 <file_timestamp_now@@Base+0x7c>  // b.any
  40e470:	mov	w0, #0x3e8                 	// #1000
  40e474:	str	w0, [sp, #92]
  40e478:	ldr	x0, [sp, #40]
  40e47c:	str	x0, [sp, #80]
  40e480:	ldr	x0, [sp, #48]
  40e484:	mov	w1, w0
  40e488:	mov	w0, #0x3e8                 	// #1000
  40e48c:	mul	w0, w1, w0
  40e490:	str	w0, [sp, #76]
  40e494:	b	40e4b4 <file_timestamp_now@@Base+0x98>
  40e498:	mov	w0, #0xca00                	// #51712
  40e49c:	movk	w0, #0x3b9a, lsl #16
  40e4a0:	str	w0, [sp, #92]
  40e4a4:	mov	x0, #0x0                   	// #0
  40e4a8:	bl	406920 <time@plt>
  40e4ac:	str	x0, [sp, #80]
  40e4b0:	str	wzr, [sp, #76]
  40e4b4:	ldr	x0, [sp, #24]
  40e4b8:	ldr	w1, [sp, #92]
  40e4bc:	str	w1, [x0]
  40e4c0:	ldrsw	x0, [sp, #76]
  40e4c4:	mov	x2, x0
  40e4c8:	ldr	x1, [sp, #80]
  40e4cc:	mov	x0, #0x0                   	// #0
  40e4d0:	bl	40e2fc <file_timestamp_cons@@Base>
  40e4d4:	ldp	x29, x30, [sp], #96
  40e4d8:	ret

000000000040e4dc <file_timestamp_sprintf@@Base>:
  40e4dc:	stp	x29, x30, [sp, #-48]!
  40e4e0:	mov	x29, sp
  40e4e4:	str	x0, [sp, #24]
  40e4e8:	str	x1, [sp, #16]
  40e4ec:	ldr	x0, [sp, #16]
  40e4f0:	sub	x0, x0, #0x3
  40e4f4:	lsr	x0, x0, #30
  40e4f8:	str	x0, [sp, #32]
  40e4fc:	add	x0, sp, #0x20
  40e500:	bl	4068b0 <localtime@plt>
  40e504:	str	x0, [sp, #40]
  40e508:	ldr	x0, [sp, #40]
  40e50c:	cmp	x0, #0x0
  40e510:	b.eq	40e578 <file_timestamp_sprintf@@Base+0x9c>  // b.none
  40e514:	ldr	x0, [sp, #40]
  40e518:	ldr	w0, [x0, #20]
  40e51c:	add	w1, w0, #0x76c
  40e520:	ldr	x0, [sp, #40]
  40e524:	ldr	w0, [x0, #16]
  40e528:	add	w2, w0, #0x1
  40e52c:	ldr	x0, [sp, #40]
  40e530:	ldr	w3, [x0, #12]
  40e534:	ldr	x0, [sp, #40]
  40e538:	ldr	w4, [x0, #8]
  40e53c:	ldr	x0, [sp, #40]
  40e540:	ldr	w5, [x0, #4]
  40e544:	ldr	x0, [sp, #40]
  40e548:	ldr	w0, [x0]
  40e54c:	mov	w7, w0
  40e550:	mov	w6, w5
  40e554:	mov	w5, w4
  40e558:	mov	w4, w3
  40e55c:	mov	w3, w2
  40e560:	mov	w2, w1
  40e564:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e568:	add	x1, x0, #0x5b8
  40e56c:	ldr	x0, [sp, #24]
  40e570:	bl	406790 <sprintf@plt>
  40e574:	b	40e5b8 <file_timestamp_sprintf@@Base+0xdc>
  40e578:	ldr	x0, [sp, #32]
  40e57c:	cmp	x0, #0x0
  40e580:	b.ge	40e5a0 <file_timestamp_sprintf@@Base+0xc4>  // b.tcont
  40e584:	ldr	x0, [sp, #32]
  40e588:	mov	x2, x0
  40e58c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e590:	add	x1, x0, #0x5d8
  40e594:	ldr	x0, [sp, #24]
  40e598:	bl	406790 <sprintf@plt>
  40e59c:	b	40e5b8 <file_timestamp_sprintf@@Base+0xdc>
  40e5a0:	ldr	x0, [sp, #32]
  40e5a4:	mov	x2, x0
  40e5a8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e5ac:	add	x1, x0, #0x5e0
  40e5b0:	ldr	x0, [sp, #24]
  40e5b4:	bl	406790 <sprintf@plt>
  40e5b8:	ldr	x0, [sp, #24]
  40e5bc:	bl	4066f0 <strlen@plt>
  40e5c0:	mov	x1, x0
  40e5c4:	ldr	x0, [sp, #24]
  40e5c8:	add	x0, x0, x1
  40e5cc:	str	x0, [sp, #24]
  40e5d0:	ldr	x0, [sp, #16]
  40e5d4:	sub	w0, w0, #0x3
  40e5d8:	and	w0, w0, #0x3fffffff
  40e5dc:	mov	w2, w0
  40e5e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e5e4:	add	x1, x0, #0x5e8
  40e5e8:	ldr	x0, [sp, #24]
  40e5ec:	bl	406790 <sprintf@plt>
  40e5f0:	ldr	x0, [sp, #24]
  40e5f4:	bl	4066f0 <strlen@plt>
  40e5f8:	sub	x0, x0, #0x1
  40e5fc:	ldr	x1, [sp, #24]
  40e600:	add	x0, x1, x0
  40e604:	str	x0, [sp, #24]
  40e608:	b	40e618 <file_timestamp_sprintf@@Base+0x13c>
  40e60c:	ldr	x0, [sp, #24]
  40e610:	sub	x0, x0, #0x1
  40e614:	str	x0, [sp, #24]
  40e618:	ldr	x0, [sp, #24]
  40e61c:	ldrb	w0, [x0]
  40e620:	cmp	w0, #0x30
  40e624:	b.eq	40e60c <file_timestamp_sprintf@@Base+0x130>  // b.none
  40e628:	ldr	x0, [sp, #24]
  40e62c:	ldrb	w0, [x0]
  40e630:	cmp	w0, #0x2e
  40e634:	cset	w0, ne  // ne = any
  40e638:	and	w0, w0, #0xff
  40e63c:	and	x0, x0, #0xff
  40e640:	ldr	x1, [sp, #24]
  40e644:	add	x0, x1, x0
  40e648:	str	x0, [sp, #24]
  40e64c:	ldr	x0, [sp, #24]
  40e650:	strb	wzr, [x0]
  40e654:	nop
  40e658:	ldp	x29, x30, [sp], #48
  40e65c:	ret

000000000040e660 <print_prereqs@@Base>:
  40e660:	stp	x29, x30, [sp, #-48]!
  40e664:	mov	x29, sp
  40e668:	str	x0, [sp, #24]
  40e66c:	str	xzr, [sp, #40]
  40e670:	b	40e6e8 <print_prereqs@@Base+0x88>
  40e674:	ldr	x0, [sp, #24]
  40e678:	ldrb	w0, [x0, #33]
  40e67c:	and	w0, w0, #0x2
  40e680:	and	w0, w0, #0xff
  40e684:	cmp	w0, #0x0
  40e688:	b.ne	40e6c8 <print_prereqs@@Base+0x68>  // b.any
  40e68c:	ldr	x0, [sp, #24]
  40e690:	ldr	x0, [x0, #8]
  40e694:	cmp	x0, #0x0
  40e698:	b.eq	40e6a8 <print_prereqs@@Base+0x48>  // b.none
  40e69c:	ldr	x0, [sp, #24]
  40e6a0:	ldr	x0, [x0, #8]
  40e6a4:	b	40e6b4 <print_prereqs@@Base+0x54>
  40e6a8:	ldr	x0, [sp, #24]
  40e6ac:	ldr	x0, [x0, #16]
  40e6b0:	ldr	x0, [x0]
  40e6b4:	mov	x1, x0
  40e6b8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e6bc:	add	x0, x0, #0x5f0
  40e6c0:	bl	406dc0 <printf@plt>
  40e6c4:	b	40e6dc <print_prereqs@@Base+0x7c>
  40e6c8:	ldr	x0, [sp, #40]
  40e6cc:	cmp	x0, #0x0
  40e6d0:	b.ne	40e6dc <print_prereqs@@Base+0x7c>  // b.any
  40e6d4:	ldr	x0, [sp, #24]
  40e6d8:	str	x0, [sp, #40]
  40e6dc:	ldr	x0, [sp, #24]
  40e6e0:	ldr	x0, [x0]
  40e6e4:	str	x0, [sp, #24]
  40e6e8:	ldr	x0, [sp, #24]
  40e6ec:	cmp	x0, #0x0
  40e6f0:	b.ne	40e674 <print_prereqs@@Base+0x14>  // b.any
  40e6f4:	ldr	x0, [sp, #40]
  40e6f8:	cmp	x0, #0x0
  40e6fc:	b.eq	40e7b0 <print_prereqs@@Base+0x150>  // b.none
  40e700:	ldr	x0, [sp, #40]
  40e704:	ldr	x0, [x0, #8]
  40e708:	cmp	x0, #0x0
  40e70c:	b.eq	40e71c <print_prereqs@@Base+0xbc>  // b.none
  40e710:	ldr	x0, [sp, #40]
  40e714:	ldr	x0, [x0, #8]
  40e718:	b	40e728 <print_prereqs@@Base+0xc8>
  40e71c:	ldr	x0, [sp, #40]
  40e720:	ldr	x0, [x0, #16]
  40e724:	ldr	x0, [x0]
  40e728:	mov	x1, x0
  40e72c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e730:	add	x0, x0, #0x5f8
  40e734:	bl	406dc0 <printf@plt>
  40e738:	ldr	x0, [sp, #40]
  40e73c:	ldr	x0, [x0]
  40e740:	str	x0, [sp, #40]
  40e744:	b	40e7a4 <print_prereqs@@Base+0x144>
  40e748:	ldr	x0, [sp, #40]
  40e74c:	ldrb	w0, [x0, #33]
  40e750:	and	w0, w0, #0x2
  40e754:	and	w0, w0, #0xff
  40e758:	cmp	w0, #0x0
  40e75c:	b.eq	40e798 <print_prereqs@@Base+0x138>  // b.none
  40e760:	ldr	x0, [sp, #40]
  40e764:	ldr	x0, [x0, #8]
  40e768:	cmp	x0, #0x0
  40e76c:	b.eq	40e77c <print_prereqs@@Base+0x11c>  // b.none
  40e770:	ldr	x0, [sp, #40]
  40e774:	ldr	x0, [x0, #8]
  40e778:	b	40e788 <print_prereqs@@Base+0x128>
  40e77c:	ldr	x0, [sp, #40]
  40e780:	ldr	x0, [x0, #16]
  40e784:	ldr	x0, [x0]
  40e788:	mov	x1, x0
  40e78c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e790:	add	x0, x0, #0x5f0
  40e794:	bl	406dc0 <printf@plt>
  40e798:	ldr	x0, [sp, #40]
  40e79c:	ldr	x0, [x0]
  40e7a0:	str	x0, [sp, #40]
  40e7a4:	ldr	x0, [sp, #40]
  40e7a8:	cmp	x0, #0x0
  40e7ac:	b.ne	40e748 <print_prereqs@@Base+0xe8>  // b.any
  40e7b0:	mov	w0, #0xa                   	// #10
  40e7b4:	bl	406e00 <putchar@plt>
  40e7b8:	nop
  40e7bc:	ldp	x29, x30, [sp], #48
  40e7c0:	ret
  40e7c4:	stp	x29, x30, [sp, #-96]!
  40e7c8:	mov	x29, sp
  40e7cc:	str	x0, [sp, #24]
  40e7d0:	ldr	x0, [sp, #24]
  40e7d4:	str	x0, [sp, #80]
  40e7d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e7dc:	add	x0, x0, #0x6f8
  40e7e0:	ldr	w0, [x0]
  40e7e4:	cmp	w0, #0x0
  40e7e8:	b.eq	40e804 <print_prereqs@@Base+0x1a4>  // b.none
  40e7ec:	ldr	x0, [sp, #80]
  40e7f0:	ldrb	w0, [x0, #136]
  40e7f4:	and	w0, w0, #0x10
  40e7f8:	and	w0, w0, #0xff
  40e7fc:	cmp	w0, #0x0
  40e800:	b.ne	40ed64 <print_prereqs@@Base+0x704>  // b.any
  40e804:	mov	w0, #0xa                   	// #10
  40e808:	bl	406e00 <putchar@plt>
  40e80c:	ldr	x0, [sp, #80]
  40e810:	ldr	x0, [x0, #32]
  40e814:	cmp	x0, #0x0
  40e818:	b.eq	40e8a4 <print_prereqs@@Base+0x244>  // b.none
  40e81c:	ldr	x0, [sp, #80]
  40e820:	ldr	x0, [x0, #32]
  40e824:	ldrb	w1, [x0, #50]
  40e828:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e82c:	add	x0, x0, #0x1f8
  40e830:	ldrb	w0, [x0]
  40e834:	cmp	w1, w0
  40e838:	b.eq	40e8a4 <print_prereqs@@Base+0x244>  // b.none
  40e83c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e840:	add	x0, x0, #0x400
  40e844:	ldr	x0, [x0]
  40e848:	mov	x3, x0
  40e84c:	mov	x2, #0x10                  	// #16
  40e850:	mov	x1, #0x1                   	// #1
  40e854:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e858:	add	x0, x0, #0x600
  40e85c:	bl	406c50 <fwrite@plt>
  40e860:	ldr	x0, [sp, #80]
  40e864:	ldr	x0, [x0, #32]
  40e868:	ldrb	w1, [x0, #50]
  40e86c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e870:	add	x0, x0, #0x1f8
  40e874:	strb	w1, [x0]
  40e878:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e87c:	add	x0, x0, #0x1f8
  40e880:	ldrb	w0, [x0]
  40e884:	cmp	w0, #0x9
  40e888:	b.eq	40e89c <print_prereqs@@Base+0x23c>  // b.none
  40e88c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40e890:	add	x0, x0, #0x1f8
  40e894:	ldrb	w0, [x0]
  40e898:	bl	406e00 <putchar@plt>
  40e89c:	mov	w0, #0xa                   	// #10
  40e8a0:	bl	406e00 <putchar@plt>
  40e8a4:	ldr	x0, [sp, #80]
  40e8a8:	ldr	x0, [x0, #80]
  40e8ac:	cmp	x0, #0x0
  40e8b0:	b.eq	40e8bc <print_prereqs@@Base+0x25c>  // b.none
  40e8b4:	ldr	x0, [sp, #80]
  40e8b8:	bl	4345a4 <print_target_variables@@Base>
  40e8bc:	ldr	x0, [sp, #80]
  40e8c0:	ldrb	w0, [x0, #137]
  40e8c4:	and	w0, w0, #0x8
  40e8c8:	and	w0, w0, #0xff
  40e8cc:	cmp	w0, #0x0
  40e8d0:	b.ne	40e8e4 <print_prereqs@@Base+0x284>  // b.any
  40e8d4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e8d8:	add	x0, x0, #0x618
  40e8dc:	bl	406e40 <gettext@plt>
  40e8e0:	bl	406b60 <puts@plt>
  40e8e4:	ldr	x0, [sp, #80]
  40e8e8:	ldr	x1, [x0]
  40e8ec:	ldr	x0, [sp, #80]
  40e8f0:	ldr	x0, [x0, #104]
  40e8f4:	cmp	x0, #0x0
  40e8f8:	b.eq	40e908 <print_prereqs@@Base+0x2a8>  // b.none
  40e8fc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e900:	add	x0, x0, #0x628
  40e904:	b	40e910 <print_prereqs@@Base+0x2b0>
  40e908:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e90c:	add	x0, x0, #0x4c0
  40e910:	mov	x2, x0
  40e914:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e918:	add	x0, x0, #0x630
  40e91c:	bl	406dc0 <printf@plt>
  40e920:	ldr	x0, [sp, #80]
  40e924:	ldr	x0, [x0, #24]
  40e928:	bl	40e660 <print_prereqs@@Base>
  40e92c:	ldr	x0, [sp, #80]
  40e930:	ldrb	w0, [x0, #136]
  40e934:	and	w0, w0, #0x20
  40e938:	and	w0, w0, #0xff
  40e93c:	cmp	w0, #0x0
  40e940:	b.eq	40e954 <print_prereqs@@Base+0x2f4>  // b.none
  40e944:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e948:	add	x0, x0, #0x638
  40e94c:	bl	406e40 <gettext@plt>
  40e950:	bl	406b60 <puts@plt>
  40e954:	ldr	x0, [sp, #80]
  40e958:	ldrb	w0, [x0, #137]
  40e95c:	and	w0, w0, #0x20
  40e960:	and	w0, w0, #0xff
  40e964:	cmp	w0, #0x0
  40e968:	b.eq	40e97c <print_prereqs@@Base+0x31c>  // b.none
  40e96c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e970:	add	x0, x0, #0x668
  40e974:	bl	406e40 <gettext@plt>
  40e978:	bl	406b60 <puts@plt>
  40e97c:	ldr	x0, [sp, #80]
  40e980:	ldrb	w0, [x0, #137]
  40e984:	and	w0, w0, #0x10
  40e988:	and	w0, w0, #0xff
  40e98c:	cmp	w0, #0x0
  40e990:	b.eq	40e9a4 <print_prereqs@@Base+0x344>  // b.none
  40e994:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e998:	add	x0, x0, #0x698
  40e99c:	bl	406e40 <gettext@plt>
  40e9a0:	bl	406b60 <puts@plt>
  40e9a4:	ldr	x0, [sp, #80]
  40e9a8:	ldrb	w0, [x0, #138]
  40e9ac:	and	w0, w0, #0x1
  40e9b0:	and	w0, w0, #0xff
  40e9b4:	cmp	w0, #0x0
  40e9b8:	b.eq	40e9cc <print_prereqs@@Base+0x36c>  // b.none
  40e9bc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e9c0:	add	x0, x0, #0x6b0
  40e9c4:	bl	406e40 <gettext@plt>
  40e9c8:	bl	406b60 <puts@plt>
  40e9cc:	ldr	x0, [sp, #80]
  40e9d0:	ldrb	w0, [x0, #136]
  40e9d4:	and	w0, w0, #0x10
  40e9d8:	and	w0, w0, #0xff
  40e9dc:	cmp	w0, #0x0
  40e9e0:	b.eq	40e9f4 <print_prereqs@@Base+0x394>  // b.none
  40e9e4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40e9e8:	add	x0, x0, #0x6e8
  40e9ec:	bl	406e40 <gettext@plt>
  40e9f0:	bl	406b60 <puts@plt>
  40e9f4:	ldr	x0, [sp, #80]
  40e9f8:	ldrb	w0, [x0, #137]
  40e9fc:	and	w0, w0, #0x1
  40ea00:	and	w0, w0, #0xff
  40ea04:	cmp	w0, #0x0
  40ea08:	b.eq	40ea1c <print_prereqs@@Base+0x3bc>  // b.none
  40ea0c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ea10:	add	x0, x0, #0x6f8
  40ea14:	bl	406e40 <gettext@plt>
  40ea18:	b	40ea28 <print_prereqs@@Base+0x3c8>
  40ea1c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ea20:	add	x0, x0, #0x720
  40ea24:	bl	406e40 <gettext@plt>
  40ea28:	bl	406b60 <puts@plt>
  40ea2c:	ldr	x0, [sp, #80]
  40ea30:	ldr	x0, [x0, #40]
  40ea34:	cmp	x0, #0x0
  40ea38:	b.eq	40ea60 <print_prereqs@@Base+0x400>  // b.none
  40ea3c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ea40:	add	x0, x0, #0x750
  40ea44:	bl	406e40 <gettext@plt>
  40ea48:	mov	x2, x0
  40ea4c:	ldr	x0, [sp, #80]
  40ea50:	ldr	x0, [x0, #40]
  40ea54:	mov	x1, x0
  40ea58:	mov	x0, x2
  40ea5c:	bl	406dc0 <printf@plt>
  40ea60:	ldr	x0, [sp, #80]
  40ea64:	ldrb	w0, [x0, #137]
  40ea68:	and	w0, w0, #0x40
  40ea6c:	and	w0, w0, #0xff
  40ea70:	cmp	w0, #0x0
  40ea74:	b.eq	40ea88 <print_prereqs@@Base+0x428>  // b.none
  40ea78:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ea7c:	add	x0, x0, #0x778
  40ea80:	bl	406e40 <gettext@plt>
  40ea84:	bl	406b60 <puts@plt>
  40ea88:	ldr	x0, [sp, #80]
  40ea8c:	ldr	x0, [x0, #48]
  40ea90:	cmp	x0, #0x0
  40ea94:	b.eq	40eb28 <print_prereqs@@Base+0x4c8>  // b.none
  40ea98:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ea9c:	add	x0, x0, #0x7a8
  40eaa0:	bl	406e40 <gettext@plt>
  40eaa4:	mov	x2, x0
  40eaa8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40eaac:	add	x0, x0, #0x400
  40eab0:	ldr	x0, [x0]
  40eab4:	mov	x1, x0
  40eab8:	mov	x0, x2
  40eabc:	bl	406700 <fputs@plt>
  40eac0:	ldr	x0, [sp, #80]
  40eac4:	ldr	x0, [x0, #48]
  40eac8:	str	x0, [sp, #88]
  40eacc:	b	40eb14 <print_prereqs@@Base+0x4b4>
  40ead0:	ldr	x0, [sp, #88]
  40ead4:	ldr	x0, [x0, #8]
  40ead8:	cmp	x0, #0x0
  40eadc:	b.eq	40eaec <print_prereqs@@Base+0x48c>  // b.none
  40eae0:	ldr	x0, [sp, #88]
  40eae4:	ldr	x0, [x0, #8]
  40eae8:	b	40eaf8 <print_prereqs@@Base+0x498>
  40eaec:	ldr	x0, [sp, #88]
  40eaf0:	ldr	x0, [x0, #16]
  40eaf4:	ldr	x0, [x0]
  40eaf8:	mov	x1, x0
  40eafc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eb00:	add	x0, x0, #0x5f0
  40eb04:	bl	406dc0 <printf@plt>
  40eb08:	ldr	x0, [sp, #88]
  40eb0c:	ldr	x0, [x0]
  40eb10:	str	x0, [sp, #88]
  40eb14:	ldr	x0, [sp, #88]
  40eb18:	cmp	x0, #0x0
  40eb1c:	b.ne	40ead0 <print_prereqs@@Base+0x470>  // b.any
  40eb20:	mov	w0, #0xa                   	// #10
  40eb24:	bl	406e00 <putchar@plt>
  40eb28:	ldr	x0, [sp, #80]
  40eb2c:	ldr	x0, [x0, #112]
  40eb30:	cmp	x0, #0x0
  40eb34:	b.ne	40eb4c <print_prereqs@@Base+0x4ec>  // b.any
  40eb38:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eb3c:	add	x0, x0, #0x7b8
  40eb40:	bl	406e40 <gettext@plt>
  40eb44:	bl	406b60 <puts@plt>
  40eb48:	b	40ebc4 <print_prereqs@@Base+0x564>
  40eb4c:	ldr	x0, [sp, #80]
  40eb50:	ldr	x0, [x0, #112]
  40eb54:	cmp	x0, #0x1
  40eb58:	b.ne	40eb70 <print_prereqs@@Base+0x510>  // b.any
  40eb5c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eb60:	add	x0, x0, #0x7e0
  40eb64:	bl	406e40 <gettext@plt>
  40eb68:	bl	406b60 <puts@plt>
  40eb6c:	b	40ebc4 <print_prereqs@@Base+0x564>
  40eb70:	ldr	x0, [sp, #80]
  40eb74:	ldr	x0, [x0, #112]
  40eb78:	cmp	x0, #0x2
  40eb7c:	b.ne	40eb94 <print_prereqs@@Base+0x534>  // b.any
  40eb80:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eb84:	add	x0, x0, #0x7f8
  40eb88:	bl	406e40 <gettext@plt>
  40eb8c:	bl	406b60 <puts@plt>
  40eb90:	b	40ebc4 <print_prereqs@@Base+0x564>
  40eb94:	ldr	x0, [sp, #80]
  40eb98:	ldr	x1, [x0, #112]
  40eb9c:	add	x0, sp, #0x20
  40eba0:	bl	40e4dc <file_timestamp_sprintf@@Base>
  40eba4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eba8:	add	x0, x0, #0x810
  40ebac:	bl	406e40 <gettext@plt>
  40ebb0:	mov	x2, x0
  40ebb4:	add	x0, sp, #0x20
  40ebb8:	mov	x1, x0
  40ebbc:	mov	x0, x2
  40ebc0:	bl	406dc0 <printf@plt>
  40ebc4:	ldr	x0, [sp, #80]
  40ebc8:	ldrb	w0, [x0, #137]
  40ebcc:	and	w0, w0, #0x4
  40ebd0:	and	w0, w0, #0xff
  40ebd4:	cmp	w0, #0x0
  40ebd8:	b.eq	40ebec <print_prereqs@@Base+0x58c>  // b.none
  40ebdc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ebe0:	add	x0, x0, #0x828
  40ebe4:	bl	406e40 <gettext@plt>
  40ebe8:	b	40ebf8 <print_prereqs@@Base+0x598>
  40ebec:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ebf0:	add	x0, x0, #0x848
  40ebf4:	bl	406e40 <gettext@plt>
  40ebf8:	bl	406b60 <puts@plt>
  40ebfc:	ldr	x0, [sp, #80]
  40ec00:	ldrb	w0, [x0, #136]
  40ec04:	ubfx	x0, x0, #2, #2
  40ec08:	and	w0, w0, #0xff
  40ec0c:	cmp	w0, #0x3
  40ec10:	b.eq	40ec68 <print_prereqs@@Base+0x608>  // b.none
  40ec14:	cmp	w0, #0x3
  40ec18:	b.gt	40ecdc <print_prereqs@@Base+0x67c>
  40ec1c:	cmp	w0, #0x2
  40ec20:	b.eq	40ec40 <print_prereqs@@Base+0x5e0>  // b.none
  40ec24:	cmp	w0, #0x2
  40ec28:	b.gt	40ecdc <print_prereqs@@Base+0x67c>
  40ec2c:	cmp	w0, #0x0
  40ec30:	b.eq	40ec68 <print_prereqs@@Base+0x608>  // b.none
  40ec34:	cmp	w0, #0x1
  40ec38:	b.eq	40ec54 <print_prereqs@@Base+0x5f4>  // b.none
  40ec3c:	b	40ecdc <print_prereqs@@Base+0x67c>
  40ec40:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ec44:	add	x0, x0, #0x868
  40ec48:	bl	406e40 <gettext@plt>
  40ec4c:	bl	406b60 <puts@plt>
  40ec50:	b	40ed10 <print_prereqs@@Base+0x6b0>
  40ec54:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ec58:	add	x0, x0, #0x898
  40ec5c:	bl	406e40 <gettext@plt>
  40ec60:	bl	406b60 <puts@plt>
  40ec64:	b	40ed10 <print_prereqs@@Base+0x6b0>
  40ec68:	ldr	x0, [sp, #80]
  40ec6c:	ldrb	w0, [x0, #136]
  40ec70:	ubfx	x0, x0, #0, #2
  40ec74:	and	w0, w0, #0xff
  40ec78:	cmp	w0, #0x3
  40ec7c:	b.eq	40ecc0 <print_prereqs@@Base+0x660>  // b.none
  40ec80:	cmp	w0, #0x3
  40ec84:	b.gt	40ec98 <print_prereqs@@Base+0x638>
  40ec88:	cmp	w0, #0x1
  40ec8c:	b.eq	40ecd4 <print_prereqs@@Base+0x674>  // b.none
  40ec90:	cmp	w0, #0x2
  40ec94:	b.eq	40ecac <print_prereqs@@Base+0x64c>  // b.none
  40ec98:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ec9c:	add	x0, x0, #0x8c8
  40eca0:	bl	406e40 <gettext@plt>
  40eca4:	bl	406b60 <puts@plt>
  40eca8:	b	40ecd8 <print_prereqs@@Base+0x678>
  40ecac:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ecb0:	add	x0, x0, #0x8e8
  40ecb4:	bl	406e40 <gettext@plt>
  40ecb8:	bl	406b60 <puts@plt>
  40ecbc:	b	40ecd8 <print_prereqs@@Base+0x678>
  40ecc0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ecc4:	add	x0, x0, #0x910
  40ecc8:	bl	406e40 <gettext@plt>
  40eccc:	bl	406b60 <puts@plt>
  40ecd0:	b	40ecd8 <print_prereqs@@Base+0x678>
  40ecd4:	nop
  40ecd8:	b	40ed10 <print_prereqs@@Base+0x6b0>
  40ecdc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ece0:	add	x0, x0, #0x930
  40ece4:	bl	406e40 <gettext@plt>
  40ece8:	bl	406b60 <puts@plt>
  40ecec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ecf0:	add	x0, x0, #0x400
  40ecf4:	ldr	x0, [x0]
  40ecf8:	bl	406c90 <fflush@plt>
  40ecfc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ed00:	add	x0, x0, #0x3e8
  40ed04:	ldr	x0, [x0]
  40ed08:	bl	406c90 <fflush@plt>
  40ed0c:	bl	406b30 <abort@plt>
  40ed10:	ldr	x0, [sp, #80]
  40ed14:	ldr	x0, [x0, #80]
  40ed18:	cmp	x0, #0x0
  40ed1c:	b.eq	40ed28 <print_prereqs@@Base+0x6c8>  // b.none
  40ed20:	ldr	x0, [sp, #80]
  40ed24:	bl	43455c <print_file_variables@@Base>
  40ed28:	ldr	x0, [sp, #80]
  40ed2c:	ldr	x0, [x0, #32]
  40ed30:	cmp	x0, #0x0
  40ed34:	b.eq	40ed44 <print_prereqs@@Base+0x6e4>  // b.none
  40ed38:	ldr	x0, [sp, #80]
  40ed3c:	ldr	x0, [x0, #32]
  40ed40:	bl	409a0c <print_commands@@Base>
  40ed44:	ldr	x0, [sp, #80]
  40ed48:	ldr	x0, [x0, #56]
  40ed4c:	cmp	x0, #0x0
  40ed50:	b.eq	40ed68 <print_prereqs@@Base+0x708>  // b.none
  40ed54:	ldr	x0, [sp, #80]
  40ed58:	ldr	x0, [x0, #56]
  40ed5c:	bl	40e7c4 <print_prereqs@@Base+0x164>
  40ed60:	b	40ed68 <print_prereqs@@Base+0x708>
  40ed64:	nop
  40ed68:	ldp	x29, x30, [sp], #96
  40ed6c:	ret

000000000040ed70 <print_file_data_base@@Base>:
  40ed70:	stp	x29, x30, [sp, #-16]!
  40ed74:	mov	x29, sp
  40ed78:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ed7c:	add	x0, x0, #0x960
  40ed80:	bl	406e40 <gettext@plt>
  40ed84:	bl	406b60 <puts@plt>
  40ed88:	adrp	x0, 40e000 <snap_deps@@Base+0x43c>
  40ed8c:	add	x1, x0, #0x7c4
  40ed90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ed94:	add	x0, x0, #0x530
  40ed98:	bl	41479c <hash_map@@Base>
  40ed9c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eda0:	add	x0, x0, #0x970
  40eda4:	bl	406e40 <gettext@plt>
  40eda8:	mov	x2, x0
  40edac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40edb0:	add	x0, x0, #0x400
  40edb4:	ldr	x0, [x0]
  40edb8:	mov	x1, x0
  40edbc:	mov	x0, x2
  40edc0:	bl	406700 <fputs@plt>
  40edc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40edc8:	add	x0, x0, #0x400
  40edcc:	ldr	x0, [x0]
  40edd0:	mov	x1, x0
  40edd4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40edd8:	add	x0, x0, #0x530
  40eddc:	bl	414a44 <hash_print_stats@@Base>
  40ede0:	nop
  40ede4:	ldp	x29, x30, [sp], #16
  40ede8:	ret
  40edec:	stp	x29, x30, [sp, #-64]!
  40edf0:	mov	x29, sp
  40edf4:	str	x19, [sp, #16]
  40edf8:	str	x0, [sp, #40]
  40edfc:	ldr	x0, [sp, #40]
  40ee00:	str	x0, [sp, #48]
  40ee04:	ldr	x0, [sp, #48]
  40ee08:	ldr	x0, [x0]
  40ee0c:	cmp	x0, #0x0
  40ee10:	b.eq	40ee9c <print_file_data_base@@Base+0x12c>  // b.none
  40ee14:	ldr	x0, [sp, #48]
  40ee18:	ldr	x0, [x0]
  40ee1c:	ldrb	w0, [x0]
  40ee20:	cmp	w0, #0x0
  40ee24:	b.eq	40ee9c <print_file_data_base@@Base+0x12c>  // b.none
  40ee28:	ldr	x0, [sp, #48]
  40ee2c:	ldr	x0, [x0]
  40ee30:	bl	430c44 <strcache_iscached@@Base>
  40ee34:	cmp	w0, #0x0
  40ee38:	b.ne	40ee9c <print_file_data_base@@Base+0x12c>  // b.any
  40ee3c:	ldr	x0, [sp, #48]
  40ee40:	ldr	x0, [x0]
  40ee44:	bl	4066f0 <strlen@plt>
  40ee48:	mov	x19, x0
  40ee4c:	ldr	x0, [sp, #48]
  40ee50:	ldr	x0, [x0]
  40ee54:	bl	4066f0 <strlen@plt>
  40ee58:	add	x0, x19, x0
  40ee5c:	add	x19, x0, #0x4
  40ee60:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ee64:	add	x0, x0, #0x990
  40ee68:	bl	406e40 <gettext@plt>
  40ee6c:	mov	x2, x0
  40ee70:	ldr	x0, [sp, #48]
  40ee74:	ldr	x1, [x0]
  40ee78:	ldr	x0, [sp, #48]
  40ee7c:	ldr	x0, [x0]
  40ee80:	mov	x5, x0
  40ee84:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ee88:	add	x4, x0, #0x9b0
  40ee8c:	mov	x3, x1
  40ee90:	mov	x1, x19
  40ee94:	mov	x0, #0x0                   	// #0
  40ee98:	bl	423e74 <error@@Base>
  40ee9c:	ldr	x0, [sp, #48]
  40eea0:	ldr	x0, [x0, #8]
  40eea4:	cmp	x0, #0x0
  40eea8:	b.eq	40ef34 <print_file_data_base@@Base+0x1c4>  // b.none
  40eeac:	ldr	x0, [sp, #48]
  40eeb0:	ldr	x0, [x0, #8]
  40eeb4:	ldrb	w0, [x0]
  40eeb8:	cmp	w0, #0x0
  40eebc:	b.eq	40ef34 <print_file_data_base@@Base+0x1c4>  // b.none
  40eec0:	ldr	x0, [sp, #48]
  40eec4:	ldr	x0, [x0, #8]
  40eec8:	bl	430c44 <strcache_iscached@@Base>
  40eecc:	cmp	w0, #0x0
  40eed0:	b.ne	40ef34 <print_file_data_base@@Base+0x1c4>  // b.any
  40eed4:	ldr	x0, [sp, #48]
  40eed8:	ldr	x0, [x0]
  40eedc:	bl	4066f0 <strlen@plt>
  40eee0:	mov	x19, x0
  40eee4:	ldr	x0, [sp, #48]
  40eee8:	ldr	x0, [x0, #8]
  40eeec:	bl	4066f0 <strlen@plt>
  40eef0:	add	x0, x19, x0
  40eef4:	add	x19, x0, #0x5
  40eef8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40eefc:	add	x0, x0, #0x990
  40ef00:	bl	406e40 <gettext@plt>
  40ef04:	mov	x2, x0
  40ef08:	ldr	x0, [sp, #48]
  40ef0c:	ldr	x1, [x0]
  40ef10:	ldr	x0, [sp, #48]
  40ef14:	ldr	x0, [x0, #8]
  40ef18:	mov	x5, x0
  40ef1c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ef20:	add	x4, x0, #0x9b8
  40ef24:	mov	x3, x1
  40ef28:	mov	x1, x19
  40ef2c:	mov	x0, #0x0                   	// #0
  40ef30:	bl	423e74 <error@@Base>
  40ef34:	ldr	x0, [sp, #48]
  40ef38:	ldr	x0, [x0, #16]
  40ef3c:	cmp	x0, #0x0
  40ef40:	b.eq	40efcc <print_file_data_base@@Base+0x25c>  // b.none
  40ef44:	ldr	x0, [sp, #48]
  40ef48:	ldr	x0, [x0, #16]
  40ef4c:	ldrb	w0, [x0]
  40ef50:	cmp	w0, #0x0
  40ef54:	b.eq	40efcc <print_file_data_base@@Base+0x25c>  // b.none
  40ef58:	ldr	x0, [sp, #48]
  40ef5c:	ldr	x0, [x0, #16]
  40ef60:	bl	430c44 <strcache_iscached@@Base>
  40ef64:	cmp	w0, #0x0
  40ef68:	b.ne	40efcc <print_file_data_base@@Base+0x25c>  // b.any
  40ef6c:	ldr	x0, [sp, #48]
  40ef70:	ldr	x0, [x0]
  40ef74:	bl	4066f0 <strlen@plt>
  40ef78:	mov	x19, x0
  40ef7c:	ldr	x0, [sp, #48]
  40ef80:	ldr	x0, [x0, #16]
  40ef84:	bl	4066f0 <strlen@plt>
  40ef88:	add	x0, x19, x0
  40ef8c:	add	x19, x0, #0x5
  40ef90:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40ef94:	add	x0, x0, #0x990
  40ef98:	bl	406e40 <gettext@plt>
  40ef9c:	mov	x2, x0
  40efa0:	ldr	x0, [sp, #48]
  40efa4:	ldr	x1, [x0]
  40efa8:	ldr	x0, [sp, #48]
  40efac:	ldr	x0, [x0, #16]
  40efb0:	mov	x5, x0
  40efb4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40efb8:	add	x4, x0, #0x9c0
  40efbc:	mov	x3, x1
  40efc0:	mov	x1, x19
  40efc4:	mov	x0, #0x0                   	// #0
  40efc8:	bl	423e74 <error@@Base>
  40efcc:	ldr	x0, [sp, #48]
  40efd0:	ldr	x0, [x0, #40]
  40efd4:	cmp	x0, #0x0
  40efd8:	b.eq	40f064 <print_file_data_base@@Base+0x2f4>  // b.none
  40efdc:	ldr	x0, [sp, #48]
  40efe0:	ldr	x0, [x0, #40]
  40efe4:	ldrb	w0, [x0]
  40efe8:	cmp	w0, #0x0
  40efec:	b.eq	40f064 <print_file_data_base@@Base+0x2f4>  // b.none
  40eff0:	ldr	x0, [sp, #48]
  40eff4:	ldr	x0, [x0, #40]
  40eff8:	bl	430c44 <strcache_iscached@@Base>
  40effc:	cmp	w0, #0x0
  40f000:	b.ne	40f064 <print_file_data_base@@Base+0x2f4>  // b.any
  40f004:	ldr	x0, [sp, #48]
  40f008:	ldr	x0, [x0]
  40f00c:	bl	4066f0 <strlen@plt>
  40f010:	mov	x19, x0
  40f014:	ldr	x0, [sp, #48]
  40f018:	ldr	x0, [x0, #40]
  40f01c:	bl	4066f0 <strlen@plt>
  40f020:	add	x0, x19, x0
  40f024:	add	x19, x0, #0x4
  40f028:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f02c:	add	x0, x0, #0x990
  40f030:	bl	406e40 <gettext@plt>
  40f034:	mov	x2, x0
  40f038:	ldr	x0, [sp, #48]
  40f03c:	ldr	x1, [x0]
  40f040:	ldr	x0, [sp, #48]
  40f044:	ldr	x0, [x0, #40]
  40f048:	mov	x5, x0
  40f04c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f050:	add	x4, x0, #0x9c8
  40f054:	mov	x3, x1
  40f058:	mov	x1, x19
  40f05c:	mov	x0, #0x0                   	// #0
  40f060:	bl	423e74 <error@@Base>
  40f064:	ldr	x0, [sp, #48]
  40f068:	ldr	x0, [x0, #24]
  40f06c:	str	x0, [sp, #56]
  40f070:	b	40f1c8 <print_file_data_base@@Base+0x458>
  40f074:	ldr	x0, [sp, #56]
  40f078:	ldrb	w0, [x0, #33]
  40f07c:	and	w0, w0, #0x8
  40f080:	and	w0, w0, #0xff
  40f084:	cmp	w0, #0x0
  40f088:	b.ne	40f124 <print_file_data_base@@Base+0x3b4>  // b.any
  40f08c:	ldr	x0, [sp, #56]
  40f090:	ldr	x0, [x0, #8]
  40f094:	cmp	x0, #0x0
  40f098:	b.eq	40f124 <print_file_data_base@@Base+0x3b4>  // b.none
  40f09c:	ldr	x0, [sp, #56]
  40f0a0:	ldr	x0, [x0, #8]
  40f0a4:	ldrb	w0, [x0]
  40f0a8:	cmp	w0, #0x0
  40f0ac:	b.eq	40f124 <print_file_data_base@@Base+0x3b4>  // b.none
  40f0b0:	ldr	x0, [sp, #56]
  40f0b4:	ldr	x0, [x0, #8]
  40f0b8:	bl	430c44 <strcache_iscached@@Base>
  40f0bc:	cmp	w0, #0x0
  40f0c0:	b.ne	40f124 <print_file_data_base@@Base+0x3b4>  // b.any
  40f0c4:	ldr	x0, [sp, #56]
  40f0c8:	ldr	x0, [x0, #8]
  40f0cc:	bl	4066f0 <strlen@plt>
  40f0d0:	mov	x19, x0
  40f0d4:	ldr	x0, [sp, #56]
  40f0d8:	ldr	x0, [x0, #8]
  40f0dc:	bl	4066f0 <strlen@plt>
  40f0e0:	add	x0, x19, x0
  40f0e4:	add	x19, x0, #0x4
  40f0e8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f0ec:	add	x0, x0, #0x990
  40f0f0:	bl	406e40 <gettext@plt>
  40f0f4:	mov	x2, x0
  40f0f8:	ldr	x0, [sp, #56]
  40f0fc:	ldr	x1, [x0, #8]
  40f100:	ldr	x0, [sp, #56]
  40f104:	ldr	x0, [x0, #8]
  40f108:	mov	x5, x0
  40f10c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f110:	add	x4, x0, #0x9b0
  40f114:	mov	x3, x1
  40f118:	mov	x1, x19
  40f11c:	mov	x0, #0x0                   	// #0
  40f120:	bl	423e74 <error@@Base>
  40f124:	ldr	x0, [sp, #56]
  40f128:	ldr	x0, [x0, #24]
  40f12c:	cmp	x0, #0x0
  40f130:	b.eq	40f1bc <print_file_data_base@@Base+0x44c>  // b.none
  40f134:	ldr	x0, [sp, #56]
  40f138:	ldr	x0, [x0, #24]
  40f13c:	ldrb	w0, [x0]
  40f140:	cmp	w0, #0x0
  40f144:	b.eq	40f1bc <print_file_data_base@@Base+0x44c>  // b.none
  40f148:	ldr	x0, [sp, #56]
  40f14c:	ldr	x0, [x0, #24]
  40f150:	bl	430c44 <strcache_iscached@@Base>
  40f154:	cmp	w0, #0x0
  40f158:	b.ne	40f1bc <print_file_data_base@@Base+0x44c>  // b.any
  40f15c:	ldr	x0, [sp, #56]
  40f160:	ldr	x0, [x0, #8]
  40f164:	bl	4066f0 <strlen@plt>
  40f168:	mov	x19, x0
  40f16c:	ldr	x0, [sp, #56]
  40f170:	ldr	x0, [x0, #24]
  40f174:	bl	4066f0 <strlen@plt>
  40f178:	add	x0, x19, x0
  40f17c:	add	x19, x0, #0x4
  40f180:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f184:	add	x0, x0, #0x990
  40f188:	bl	406e40 <gettext@plt>
  40f18c:	mov	x2, x0
  40f190:	ldr	x0, [sp, #56]
  40f194:	ldr	x1, [x0, #8]
  40f198:	ldr	x0, [sp, #56]
  40f19c:	ldr	x0, [x0, #24]
  40f1a0:	mov	x5, x0
  40f1a4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40f1a8:	add	x4, x0, #0x9c8
  40f1ac:	mov	x3, x1
  40f1b0:	mov	x1, x19
  40f1b4:	mov	x0, #0x0                   	// #0
  40f1b8:	bl	423e74 <error@@Base>
  40f1bc:	ldr	x0, [sp, #56]
  40f1c0:	ldr	x0, [x0]
  40f1c4:	str	x0, [sp, #56]
  40f1c8:	ldr	x0, [sp, #56]
  40f1cc:	cmp	x0, #0x0
  40f1d0:	b.ne	40f074 <print_file_data_base@@Base+0x304>  // b.any
  40f1d4:	nop
  40f1d8:	nop
  40f1dc:	ldr	x19, [sp, #16]
  40f1e0:	ldp	x29, x30, [sp], #64
  40f1e4:	ret

000000000040f1e8 <verify_file_data_base@@Base>:
  40f1e8:	stp	x29, x30, [sp, #-16]!
  40f1ec:	mov	x29, sp
  40f1f0:	adrp	x0, 40e000 <snap_deps@@Base+0x43c>
  40f1f4:	add	x1, x0, #0xdec
  40f1f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f1fc:	add	x0, x0, #0x530
  40f200:	bl	41479c <hash_map@@Base>
  40f204:	nop
  40f208:	ldp	x29, x30, [sp], #16
  40f20c:	ret

000000000040f210 <build_target_list@@Base>:
  40f210:	stp	x29, x30, [sp, #-96]!
  40f214:	mov	x29, sp
  40f218:	str	x0, [sp, #24]
  40f21c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f220:	add	x0, x0, #0x530
  40f224:	ldr	x1, [x0, #48]
  40f228:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f22c:	add	x0, x0, #0x590
  40f230:	ldr	x0, [x0]
  40f234:	cmp	x1, x0
  40f238:	b.eq	40f450 <build_target_list@@Base+0x240>  // b.none
  40f23c:	ldr	x0, [sp, #24]
  40f240:	bl	4066f0 <strlen@plt>
  40f244:	lsr	x1, x0, #2
  40f248:	mov	x0, #0xf7cf                	// #63439
  40f24c:	movk	x0, #0xe353, lsl #16
  40f250:	movk	x0, #0x9ba5, lsl #32
  40f254:	movk	x0, #0x20c4, lsl #48
  40f258:	umulh	x0, x1, x0
  40f25c:	lsr	x0, x0, #4
  40f260:	add	x1, x0, #0x1
  40f264:	mov	x0, x1
  40f268:	lsl	x0, x0, #5
  40f26c:	sub	x0, x0, x1
  40f270:	lsl	x0, x0, #2
  40f274:	add	x0, x0, x1
  40f278:	lsl	x0, x0, #2
  40f27c:	str	x0, [sp, #88]
  40f280:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f284:	add	x0, x0, #0x530
  40f288:	ldr	x0, [x0]
  40f28c:	str	x0, [sp, #64]
  40f290:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f294:	add	x0, x0, #0x530
  40f298:	ldr	x0, [x0, #32]
  40f29c:	lsl	x0, x0, #3
  40f2a0:	ldr	x1, [sp, #64]
  40f2a4:	add	x0, x1, x0
  40f2a8:	str	x0, [sp, #56]
  40f2ac:	ldr	x1, [sp, #88]
  40f2b0:	ldr	x0, [sp, #24]
  40f2b4:	bl	422720 <xrealloc@@Base>
  40f2b8:	str	x0, [sp, #24]
  40f2bc:	ldr	x0, [sp, #24]
  40f2c0:	str	x0, [sp, #72]
  40f2c4:	str	xzr, [sp, #80]
  40f2c8:	b	40f41c <build_target_list@@Base+0x20c>
  40f2cc:	ldr	x0, [sp, #64]
  40f2d0:	ldr	x0, [x0]
  40f2d4:	cmp	x0, #0x0
  40f2d8:	b.eq	40f410 <build_target_list@@Base+0x200>  // b.none
  40f2dc:	ldr	x0, [sp, #64]
  40f2e0:	ldr	x1, [x0]
  40f2e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f2e8:	add	x0, x0, #0x40
  40f2ec:	ldr	x0, [x0]
  40f2f0:	cmp	x1, x0
  40f2f4:	b.eq	40f410 <build_target_list@@Base+0x200>  // b.none
  40f2f8:	ldr	x0, [sp, #64]
  40f2fc:	ldr	x0, [x0]
  40f300:	ldrb	w0, [x0, #137]
  40f304:	and	w0, w0, #0x8
  40f308:	and	w0, w0, #0xff
  40f30c:	cmp	w0, #0x0
  40f310:	b.eq	40f410 <build_target_list@@Base+0x200>  // b.none
  40f314:	ldr	x0, [sp, #64]
  40f318:	ldr	x0, [x0]
  40f31c:	str	x0, [sp, #48]
  40f320:	ldr	x0, [sp, #48]
  40f324:	ldr	x0, [x0]
  40f328:	bl	4066f0 <strlen@plt>
  40f32c:	str	x0, [sp, #40]
  40f330:	ldr	x1, [sp, #40]
  40f334:	ldr	x0, [sp, #80]
  40f338:	add	x0, x1, x0
  40f33c:	add	x0, x0, #0x1
  40f340:	str	x0, [sp, #80]
  40f344:	ldr	x1, [sp, #80]
  40f348:	ldr	x0, [sp, #88]
  40f34c:	cmp	x1, x0
  40f350:	b.ls	40f3d4 <build_target_list@@Base+0x1c4>  // b.plast
  40f354:	ldr	x1, [sp, #72]
  40f358:	ldr	x0, [sp, #24]
  40f35c:	sub	x0, x1, x0
  40f360:	str	x0, [sp, #32]
  40f364:	ldr	x0, [sp, #40]
  40f368:	add	x0, x0, #0x1
  40f36c:	lsr	x1, x0, #2
  40f370:	mov	x0, #0xf7cf                	// #63439
  40f374:	movk	x0, #0xe353, lsl #16
  40f378:	movk	x0, #0x9ba5, lsl #32
  40f37c:	movk	x0, #0x20c4, lsl #48
  40f380:	umulh	x0, x1, x0
  40f384:	lsr	x0, x0, #4
  40f388:	add	x1, x0, #0x1
  40f38c:	mov	x0, x1
  40f390:	lsl	x0, x0, #5
  40f394:	sub	x0, x0, x1
  40f398:	lsl	x0, x0, #2
  40f39c:	add	x0, x0, x1
  40f3a0:	lsl	x0, x0, #2
  40f3a4:	mov	x1, x0
  40f3a8:	ldr	x0, [sp, #88]
  40f3ac:	add	x0, x0, x1
  40f3b0:	str	x0, [sp, #88]
  40f3b4:	ldr	x1, [sp, #88]
  40f3b8:	ldr	x0, [sp, #24]
  40f3bc:	bl	422720 <xrealloc@@Base>
  40f3c0:	str	x0, [sp, #24]
  40f3c4:	ldr	x1, [sp, #24]
  40f3c8:	ldr	x0, [sp, #32]
  40f3cc:	add	x0, x1, x0
  40f3d0:	str	x0, [sp, #72]
  40f3d4:	ldr	x0, [sp, #48]
  40f3d8:	ldr	x0, [x0]
  40f3dc:	ldr	x2, [sp, #40]
  40f3e0:	mov	x1, x0
  40f3e4:	ldr	x0, [sp, #72]
  40f3e8:	bl	4066b0 <memcpy@plt>
  40f3ec:	ldr	x1, [sp, #72]
  40f3f0:	ldr	x0, [sp, #40]
  40f3f4:	add	x0, x1, x0
  40f3f8:	str	x0, [sp, #72]
  40f3fc:	ldr	x0, [sp, #72]
  40f400:	add	x1, x0, #0x1
  40f404:	str	x1, [sp, #72]
  40f408:	mov	w1, #0x20                  	// #32
  40f40c:	strb	w1, [x0]
  40f410:	ldr	x0, [sp, #64]
  40f414:	add	x0, x0, #0x8
  40f418:	str	x0, [sp, #64]
  40f41c:	ldr	x1, [sp, #64]
  40f420:	ldr	x0, [sp, #56]
  40f424:	cmp	x1, x0
  40f428:	b.cc	40f2cc <build_target_list@@Base+0xbc>  // b.lo, b.ul, b.last
  40f42c:	ldr	x0, [sp, #72]
  40f430:	sub	x0, x0, #0x1
  40f434:	strb	wzr, [x0]
  40f438:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f43c:	add	x0, x0, #0x530
  40f440:	ldr	x1, [x0, #48]
  40f444:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f448:	add	x0, x0, #0x590
  40f44c:	str	x1, [x0]
  40f450:	ldr	x0, [sp, #24]
  40f454:	ldp	x29, x30, [sp], #96
  40f458:	ret

000000000040f45c <init_hash_files@@Base>:
  40f45c:	stp	x29, x30, [sp, #-16]!
  40f460:	mov	x29, sp
  40f464:	adrp	x0, 40c000 <expand_argument@@Base+0xa4>
  40f468:	add	x4, x0, #0x568
  40f46c:	adrp	x0, 40c000 <expand_argument@@Base+0xa4>
  40f470:	add	x3, x0, #0x550
  40f474:	adrp	x0, 40c000 <expand_argument@@Base+0xa4>
  40f478:	add	x2, x0, #0x510
  40f47c:	mov	x1, #0x3e8                 	// #1000
  40f480:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f484:	add	x0, x0, #0x530
  40f488:	bl	4140a8 <hash_init@@Base>
  40f48c:	nop
  40f490:	ldp	x29, x30, [sp], #16
  40f494:	ret
  40f498:	stp	x29, x30, [sp, #-64]!
  40f49c:	mov	x29, sp
  40f4a0:	str	x0, [sp, #24]
  40f4a4:	ldr	x0, [sp, #24]
  40f4a8:	str	x0, [sp, #56]
  40f4ac:	str	xzr, [sp, #48]
  40f4b0:	ldr	x0, [sp, #56]
  40f4b4:	ldr	x0, [x0, #8]
  40f4b8:	str	x0, [sp, #40]
  40f4bc:	ldr	x0, [sp, #56]
  40f4c0:	ldrb	w0, [x0, #16]
  40f4c4:	mov	w1, w0
  40f4c8:	ldr	x0, [sp, #40]
  40f4cc:	bl	414cec <jhash@@Base>
  40f4d0:	mov	w0, w0
  40f4d4:	ldr	x1, [sp, #48]
  40f4d8:	add	x0, x1, x0
  40f4dc:	str	x0, [sp, #48]
  40f4e0:	ldr	x0, [sp, #48]
  40f4e4:	ldp	x29, x30, [sp], #64
  40f4e8:	ret
  40f4ec:	sub	sp, sp, #0x20
  40f4f0:	str	x0, [sp, #8]
  40f4f4:	ldr	x0, [sp, #8]
  40f4f8:	str	x0, [sp, #24]
  40f4fc:	str	xzr, [sp, #16]
  40f500:	ldr	x0, [sp, #16]
  40f504:	add	sp, sp, #0x20
  40f508:	ret
  40f50c:	stp	x29, x30, [sp, #-64]!
  40f510:	mov	x29, sp
  40f514:	str	x0, [sp, #24]
  40f518:	str	x1, [sp, #16]
  40f51c:	ldr	x0, [sp, #24]
  40f520:	str	x0, [sp, #56]
  40f524:	ldr	x0, [sp, #16]
  40f528:	str	x0, [sp, #48]
  40f52c:	ldr	x0, [sp, #56]
  40f530:	ldrb	w0, [x0, #16]
  40f534:	mov	w1, w0
  40f538:	ldr	x0, [sp, #48]
  40f53c:	ldrb	w0, [x0, #16]
  40f540:	sub	w0, w1, w0
  40f544:	str	w0, [sp, #44]
  40f548:	ldr	w0, [sp, #44]
  40f54c:	cmp	w0, #0x0
  40f550:	b.eq	40f55c <init_hash_files@@Base+0x100>  // b.none
  40f554:	ldr	w0, [sp, #44]
  40f558:	b	40f5a4 <init_hash_files@@Base+0x148>
  40f55c:	ldr	x0, [sp, #56]
  40f560:	ldr	x1, [x0, #8]
  40f564:	ldr	x0, [sp, #48]
  40f568:	ldr	x0, [x0, #8]
  40f56c:	cmp	x1, x0
  40f570:	b.eq	40f5a0 <init_hash_files@@Base+0x144>  // b.none
  40f574:	ldr	x0, [sp, #56]
  40f578:	ldr	x3, [x0, #8]
  40f57c:	ldr	x0, [sp, #48]
  40f580:	ldr	x1, [x0, #8]
  40f584:	ldr	x0, [sp, #56]
  40f588:	ldrb	w0, [x0, #16]
  40f58c:	and	x0, x0, #0xff
  40f590:	mov	x2, x0
  40f594:	mov	x0, x3
  40f598:	bl	406b80 <memcmp@plt>
  40f59c:	b	40f5a4 <init_hash_files@@Base+0x148>
  40f5a0:	mov	w0, #0x0                   	// #0
  40f5a4:	ldp	x29, x30, [sp], #64
  40f5a8:	ret

000000000040f5ac <subst_expand@@Base>:
  40f5ac:	stp	x29, x30, [sp, #-96]!
  40f5b0:	mov	x29, sp
  40f5b4:	str	x0, [sp, #72]
  40f5b8:	str	x1, [sp, #64]
  40f5bc:	str	x2, [sp, #56]
  40f5c0:	str	x3, [sp, #48]
  40f5c4:	str	x4, [sp, #40]
  40f5c8:	str	x5, [sp, #32]
  40f5cc:	str	w6, [sp, #28]
  40f5d0:	ldr	x0, [sp, #64]
  40f5d4:	str	x0, [sp, #88]
  40f5d8:	ldr	x0, [sp, #40]
  40f5dc:	cmp	x0, #0x0
  40f5e0:	b.ne	40f634 <subst_expand@@Base+0x88>  // b.any
  40f5e4:	ldr	w0, [sp, #28]
  40f5e8:	cmp	w0, #0x0
  40f5ec:	b.ne	40f634 <subst_expand@@Base+0x88>  // b.any
  40f5f0:	ldr	x0, [sp, #88]
  40f5f4:	bl	4066f0 <strlen@plt>
  40f5f8:	mov	x2, x0
  40f5fc:	ldr	x1, [sp, #88]
  40f600:	ldr	x0, [sp, #72]
  40f604:	bl	40b388 <variable_buffer_output@@Base>
  40f608:	str	x0, [sp, #72]
  40f60c:	ldr	x0, [sp, #32]
  40f610:	cmp	x0, #0x0
  40f614:	b.eq	40f62c <subst_expand@@Base+0x80>  // b.none
  40f618:	ldr	x2, [sp, #32]
  40f61c:	ldr	x1, [sp, #48]
  40f620:	ldr	x0, [sp, #72]
  40f624:	bl	40b388 <variable_buffer_output@@Base>
  40f628:	str	x0, [sp, #72]
  40f62c:	ldr	x0, [sp, #72]
  40f630:	b	40f7a4 <subst_expand@@Base+0x1f8>
  40f634:	ldr	w0, [sp, #28]
  40f638:	cmp	w0, #0x0
  40f63c:	b.eq	40f660 <subst_expand@@Base+0xb4>  // b.none
  40f640:	ldr	x0, [sp, #40]
  40f644:	cmp	x0, #0x0
  40f648:	b.ne	40f660 <subst_expand@@Base+0xb4>  // b.any
  40f64c:	ldr	x0, [sp, #88]
  40f650:	bl	4228a0 <next_token@@Base>
  40f654:	bl	422854 <end_of_token@@Base>
  40f658:	str	x0, [sp, #80]
  40f65c:	b	40f6a0 <subst_expand@@Base+0xf4>
  40f660:	ldr	x1, [sp, #56]
  40f664:	ldr	x0, [sp, #88]
  40f668:	bl	406d30 <strstr@plt>
  40f66c:	str	x0, [sp, #80]
  40f670:	ldr	x0, [sp, #80]
  40f674:	cmp	x0, #0x0
  40f678:	b.ne	40f6a0 <subst_expand@@Base+0xf4>  // b.any
  40f67c:	ldr	x0, [sp, #88]
  40f680:	bl	4066f0 <strlen@plt>
  40f684:	mov	x2, x0
  40f688:	ldr	x1, [sp, #88]
  40f68c:	ldr	x0, [sp, #72]
  40f690:	bl	40b388 <variable_buffer_output@@Base>
  40f694:	str	x0, [sp, #72]
  40f698:	ldr	x0, [sp, #72]
  40f69c:	b	40f7a4 <subst_expand@@Base+0x1f8>
  40f6a0:	ldr	x1, [sp, #80]
  40f6a4:	ldr	x0, [sp, #88]
  40f6a8:	cmp	x1, x0
  40f6ac:	b.ls	40f6d0 <subst_expand@@Base+0x124>  // b.plast
  40f6b0:	ldr	x1, [sp, #80]
  40f6b4:	ldr	x0, [sp, #88]
  40f6b8:	sub	x0, x1, x0
  40f6bc:	mov	x2, x0
  40f6c0:	ldr	x1, [sp, #88]
  40f6c4:	ldr	x0, [sp, #72]
  40f6c8:	bl	40b388 <variable_buffer_output@@Base>
  40f6cc:	str	x0, [sp, #72]
  40f6d0:	ldr	w0, [sp, #28]
  40f6d4:	cmp	w0, #0x0
  40f6d8:	b.eq	40f760 <subst_expand@@Base+0x1b4>  // b.none
  40f6dc:	ldr	x1, [sp, #80]
  40f6e0:	ldr	x0, [sp, #64]
  40f6e4:	cmp	x1, x0
  40f6e8:	b.ls	40f718 <subst_expand@@Base+0x16c>  // b.plast
  40f6ec:	ldr	x0, [sp, #80]
  40f6f0:	sub	x0, x0, #0x1
  40f6f4:	ldrb	w0, [x0]
  40f6f8:	mov	w1, w0
  40f6fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f700:	add	x0, x0, #0x728
  40f704:	sxtw	x1, w1
  40f708:	ldrh	w0, [x0, x1, lsl #1]
  40f70c:	and	w0, w0, #0x6
  40f710:	cmp	w0, #0x0
  40f714:	b.eq	40f748 <subst_expand@@Base+0x19c>  // b.none
  40f718:	ldr	x1, [sp, #80]
  40f71c:	ldr	x0, [sp, #40]
  40f720:	add	x0, x1, x0
  40f724:	ldrb	w0, [x0]
  40f728:	mov	w1, w0
  40f72c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40f730:	add	x0, x0, #0x728
  40f734:	sxtw	x1, w1
  40f738:	ldrh	w0, [x0, x1, lsl #1]
  40f73c:	and	w0, w0, #0x7
  40f740:	cmp	w0, #0x0
  40f744:	b.ne	40f760 <subst_expand@@Base+0x1b4>  // b.any
  40f748:	ldr	x2, [sp, #40]
  40f74c:	ldr	x1, [sp, #56]
  40f750:	ldr	x0, [sp, #72]
  40f754:	bl	40b388 <variable_buffer_output@@Base>
  40f758:	str	x0, [sp, #72]
  40f75c:	b	40f780 <subst_expand@@Base+0x1d4>
  40f760:	ldr	x0, [sp, #32]
  40f764:	cmp	x0, #0x0
  40f768:	b.eq	40f780 <subst_expand@@Base+0x1d4>  // b.none
  40f76c:	ldr	x2, [sp, #32]
  40f770:	ldr	x1, [sp, #48]
  40f774:	ldr	x0, [sp, #72]
  40f778:	bl	40b388 <variable_buffer_output@@Base>
  40f77c:	str	x0, [sp, #72]
  40f780:	ldr	x1, [sp, #80]
  40f784:	ldr	x0, [sp, #40]
  40f788:	add	x0, x1, x0
  40f78c:	str	x0, [sp, #88]
  40f790:	ldr	x0, [sp, #88]
  40f794:	ldrb	w0, [x0]
  40f798:	cmp	w0, #0x0
  40f79c:	b.ne	40f634 <subst_expand@@Base+0x88>  // b.any
  40f7a0:	ldr	x0, [sp, #72]
  40f7a4:	ldp	x29, x30, [sp], #96
  40f7a8:	ret

000000000040f7ac <patsubst_expand_pat@@Base>:
  40f7ac:	stp	x29, x30, [sp, #-144]!
  40f7b0:	mov	x29, sp
  40f7b4:	stp	x19, x20, [sp, #16]
  40f7b8:	str	x0, [sp, #72]
  40f7bc:	str	x1, [sp, #64]
  40f7c0:	str	x2, [sp, #56]
  40f7c4:	str	x3, [sp, #48]
  40f7c8:	str	x4, [sp, #40]
  40f7cc:	str	x5, [sp, #32]
  40f7d0:	str	wzr, [sp, #124]
  40f7d4:	ldr	x0, [sp, #32]
  40f7d8:	cmp	x0, #0x0
  40f7dc:	b.eq	40f804 <patsubst_expand_pat@@Base+0x58>  // b.none
  40f7e0:	ldr	x1, [sp, #32]
  40f7e4:	ldr	x0, [sp, #48]
  40f7e8:	sub	x0, x1, x0
  40f7ec:	sub	x0, x0, #0x1
  40f7f0:	str	x0, [sp, #136]
  40f7f4:	ldr	x0, [sp, #32]
  40f7f8:	bl	4066f0 <strlen@plt>
  40f7fc:	str	x0, [sp, #128]
  40f800:	b	40f814 <patsubst_expand_pat@@Base+0x68>
  40f804:	ldr	x0, [sp, #48]
  40f808:	bl	4066f0 <strlen@plt>
  40f80c:	str	x0, [sp, #136]
  40f810:	str	xzr, [sp, #128]
  40f814:	ldr	x0, [sp, #40]
  40f818:	cmp	x0, #0x0
  40f81c:	b.ne	40f85c <patsubst_expand_pat@@Base+0xb0>  // b.any
  40f820:	ldr	x19, [sp, #64]
  40f824:	ldr	x0, [sp, #56]
  40f828:	bl	4066f0 <strlen@plt>
  40f82c:	mov	x20, x0
  40f830:	ldr	x0, [sp, #48]
  40f834:	bl	4066f0 <strlen@plt>
  40f838:	mov	w6, #0x1                   	// #1
  40f83c:	mov	x5, x0
  40f840:	mov	x4, x20
  40f844:	ldr	x3, [sp, #48]
  40f848:	ldr	x2, [sp, #56]
  40f84c:	mov	x1, x19
  40f850:	ldr	x0, [sp, #72]
  40f854:	bl	40f5ac <subst_expand@@Base>
  40f858:	b	40fafc <patsubst_expand_pat@@Base+0x350>
  40f85c:	ldr	x1, [sp, #40]
  40f860:	ldr	x0, [sp, #56]
  40f864:	sub	x0, x1, x0
  40f868:	sub	x0, x0, #0x1
  40f86c:	str	x0, [sp, #112]
  40f870:	ldr	x0, [sp, #40]
  40f874:	bl	4066f0 <strlen@plt>
  40f878:	str	x0, [sp, #104]
  40f87c:	b	40fac4 <patsubst_expand_pat@@Base+0x318>
  40f880:	str	wzr, [sp, #120]
  40f884:	ldr	x1, [sp, #112]
  40f888:	ldr	x0, [sp, #104]
  40f88c:	add	x1, x1, x0
  40f890:	ldr	x0, [sp, #88]
  40f894:	cmp	x1, x0
  40f898:	b.ls	40f8a4 <patsubst_expand_pat@@Base+0xf8>  // b.plast
  40f89c:	mov	w0, #0x1                   	// #1
  40f8a0:	str	w0, [sp, #120]
  40f8a4:	ldr	w0, [sp, #120]
  40f8a8:	cmp	w0, #0x0
  40f8ac:	b.ne	40f930 <patsubst_expand_pat@@Base+0x184>  // b.any
  40f8b0:	ldr	x0, [sp, #112]
  40f8b4:	cmp	x0, #0x0
  40f8b8:	b.eq	40f930 <patsubst_expand_pat@@Base+0x184>  // b.none
  40f8bc:	ldr	x0, [sp, #96]
  40f8c0:	ldrb	w1, [x0]
  40f8c4:	ldr	x0, [sp, #56]
  40f8c8:	ldrb	w0, [x0]
  40f8cc:	cmp	w1, w0
  40f8d0:	b.ne	40f928 <patsubst_expand_pat@@Base+0x17c>  // b.any
  40f8d4:	ldr	x0, [sp, #112]
  40f8d8:	sub	x0, x0, #0x1
  40f8dc:	ldr	x1, [sp, #96]
  40f8e0:	add	x0, x1, x0
  40f8e4:	ldrb	w1, [x0]
  40f8e8:	ldr	x0, [sp, #40]
  40f8ec:	sub	x0, x0, #0x2
  40f8f0:	ldrb	w0, [x0]
  40f8f4:	cmp	w1, w0
  40f8f8:	b.ne	40f928 <patsubst_expand_pat@@Base+0x17c>  // b.any
  40f8fc:	ldr	x0, [sp, #96]
  40f900:	add	x3, x0, #0x1
  40f904:	ldr	x0, [sp, #56]
  40f908:	add	x1, x0, #0x1
  40f90c:	ldr	x0, [sp, #112]
  40f910:	sub	x0, x0, #0x1
  40f914:	mov	x2, x0
  40f918:	mov	x0, x3
  40f91c:	bl	406990 <strncmp@plt>
  40f920:	cmp	w0, #0x0
  40f924:	b.eq	40f930 <patsubst_expand_pat@@Base+0x184>  // b.none
  40f928:	mov	w0, #0x1                   	// #1
  40f92c:	str	w0, [sp, #120]
  40f930:	ldr	w0, [sp, #120]
  40f934:	cmp	w0, #0x0
  40f938:	b.ne	40f9dc <patsubst_expand_pat@@Base+0x230>  // b.any
  40f93c:	ldr	x0, [sp, #104]
  40f940:	cmp	x0, #0x0
  40f944:	b.eq	40f9dc <patsubst_expand_pat@@Base+0x230>  // b.none
  40f948:	ldr	x0, [sp, #88]
  40f94c:	sub	x0, x0, #0x1
  40f950:	ldr	x1, [sp, #96]
  40f954:	add	x0, x1, x0
  40f958:	ldrb	w1, [x0]
  40f95c:	ldr	x0, [sp, #104]
  40f960:	sub	x0, x0, #0x1
  40f964:	ldr	x2, [sp, #40]
  40f968:	add	x0, x2, x0
  40f96c:	ldrb	w0, [x0]
  40f970:	cmp	w1, w0
  40f974:	b.ne	40f9d4 <patsubst_expand_pat@@Base+0x228>  // b.any
  40f978:	ldr	x1, [sp, #88]
  40f97c:	ldr	x0, [sp, #104]
  40f980:	sub	x0, x1, x0
  40f984:	ldr	x1, [sp, #96]
  40f988:	add	x0, x1, x0
  40f98c:	ldrb	w1, [x0]
  40f990:	ldr	x0, [sp, #40]
  40f994:	ldrb	w0, [x0]
  40f998:	cmp	w1, w0
  40f99c:	b.ne	40f9d4 <patsubst_expand_pat@@Base+0x228>  // b.any
  40f9a0:	ldr	x1, [sp, #88]
  40f9a4:	ldr	x0, [sp, #104]
  40f9a8:	sub	x0, x1, x0
  40f9ac:	ldr	x1, [sp, #96]
  40f9b0:	add	x3, x1, x0
  40f9b4:	ldr	x0, [sp, #104]
  40f9b8:	sub	x0, x0, #0x1
  40f9bc:	mov	x2, x0
  40f9c0:	ldr	x1, [sp, #40]
  40f9c4:	mov	x0, x3
  40f9c8:	bl	406990 <strncmp@plt>
  40f9cc:	cmp	w0, #0x0
  40f9d0:	b.eq	40f9dc <patsubst_expand_pat@@Base+0x230>  // b.none
  40f9d4:	mov	w0, #0x1                   	// #1
  40f9d8:	str	w0, [sp, #120]
  40f9dc:	ldr	w0, [sp, #120]
  40f9e0:	cmp	w0, #0x0
  40f9e4:	b.eq	40fa04 <patsubst_expand_pat@@Base+0x258>  // b.none
  40f9e8:	ldr	x0, [sp, #88]
  40f9ec:	mov	x2, x0
  40f9f0:	ldr	x1, [sp, #96]
  40f9f4:	ldr	x0, [sp, #72]
  40f9f8:	bl	40b388 <variable_buffer_output@@Base>
  40f9fc:	str	x0, [sp, #72]
  40fa00:	b	40fa6c <patsubst_expand_pat@@Base+0x2c0>
  40fa04:	ldr	x2, [sp, #136]
  40fa08:	ldr	x1, [sp, #48]
  40fa0c:	ldr	x0, [sp, #72]
  40fa10:	bl	40b388 <variable_buffer_output@@Base>
  40fa14:	str	x0, [sp, #72]
  40fa18:	ldr	x0, [sp, #32]
  40fa1c:	cmp	x0, #0x0
  40fa20:	b.eq	40fa6c <patsubst_expand_pat@@Base+0x2c0>  // b.none
  40fa24:	ldr	x1, [sp, #96]
  40fa28:	ldr	x0, [sp, #112]
  40fa2c:	add	x3, x1, x0
  40fa30:	ldr	x1, [sp, #88]
  40fa34:	ldr	x2, [sp, #112]
  40fa38:	ldr	x0, [sp, #104]
  40fa3c:	add	x0, x2, x0
  40fa40:	sub	x0, x1, x0
  40fa44:	mov	x2, x0
  40fa48:	mov	x1, x3
  40fa4c:	ldr	x0, [sp, #72]
  40fa50:	bl	40b388 <variable_buffer_output@@Base>
  40fa54:	str	x0, [sp, #72]
  40fa58:	ldr	x2, [sp, #128]
  40fa5c:	ldr	x1, [sp, #32]
  40fa60:	ldr	x0, [sp, #72]
  40fa64:	bl	40b388 <variable_buffer_output@@Base>
  40fa68:	str	x0, [sp, #72]
  40fa6c:	ldr	w0, [sp, #120]
  40fa70:	cmp	w0, #0x0
  40fa74:	b.ne	40faa4 <patsubst_expand_pat@@Base+0x2f8>  // b.any
  40fa78:	ldr	x0, [sp, #136]
  40fa7c:	cmp	x0, #0x0
  40fa80:	b.ne	40faa4 <patsubst_expand_pat@@Base+0x2f8>  // b.any
  40fa84:	ldr	x0, [sp, #32]
  40fa88:	cmp	x0, #0x0
  40fa8c:	b.eq	40fac4 <patsubst_expand_pat@@Base+0x318>  // b.none
  40fa90:	ldr	x1, [sp, #88]
  40fa94:	ldr	x0, [sp, #128]
  40fa98:	add	x0, x1, x0
  40fa9c:	cmp	x0, #0x0
  40faa0:	b.eq	40fac4 <patsubst_expand_pat@@Base+0x318>  // b.none
  40faa4:	mov	x2, #0x1                   	// #1
  40faa8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  40faac:	add	x1, x0, #0x9d0
  40fab0:	ldr	x0, [sp, #72]
  40fab4:	bl	40b388 <variable_buffer_output@@Base>
  40fab8:	str	x0, [sp, #72]
  40fabc:	mov	w0, #0x1                   	// #1
  40fac0:	str	w0, [sp, #124]
  40fac4:	add	x1, sp, #0x58
  40fac8:	add	x0, sp, #0x40
  40facc:	bl	4228ec <find_next_token@@Base>
  40fad0:	str	x0, [sp, #96]
  40fad4:	ldr	x0, [sp, #96]
  40fad8:	cmp	x0, #0x0
  40fadc:	b.ne	40f880 <patsubst_expand_pat@@Base+0xd4>  // b.any
  40fae0:	ldr	w0, [sp, #124]
  40fae4:	cmp	w0, #0x0
  40fae8:	b.eq	40faf8 <patsubst_expand_pat@@Base+0x34c>  // b.none
  40faec:	ldr	x0, [sp, #72]
  40faf0:	sub	x0, x0, #0x1
  40faf4:	str	x0, [sp, #72]
  40faf8:	ldr	x0, [sp, #72]
  40fafc:	ldp	x19, x20, [sp, #16]
  40fb00:	ldp	x29, x30, [sp], #144
  40fb04:	ret

000000000040fb08 <patsubst_expand@@Base>:
  40fb08:	stp	x29, x30, [sp, #-64]!
  40fb0c:	mov	x29, sp
  40fb10:	str	x0, [sp, #40]
  40fb14:	str	x1, [sp, #32]
  40fb18:	str	x2, [sp, #24]
  40fb1c:	str	x3, [sp, #16]
  40fb20:	ldr	x0, [sp, #24]
  40fb24:	bl	4294d0 <find_percent@@Base>
  40fb28:	str	x0, [sp, #56]
  40fb2c:	ldr	x0, [sp, #16]
  40fb30:	bl	4294d0 <find_percent@@Base>
  40fb34:	str	x0, [sp, #48]
  40fb38:	ldr	x0, [sp, #48]
  40fb3c:	cmp	x0, #0x0
  40fb40:	b.eq	40fb50 <patsubst_expand@@Base+0x48>  // b.none
  40fb44:	ldr	x0, [sp, #48]
  40fb48:	add	x0, x0, #0x1
  40fb4c:	str	x0, [sp, #48]
  40fb50:	ldr	x0, [sp, #56]
  40fb54:	cmp	x0, #0x0
  40fb58:	b.eq	40fb68 <patsubst_expand@@Base+0x60>  // b.none
  40fb5c:	ldr	x0, [sp, #56]
  40fb60:	add	x0, x0, #0x1
  40fb64:	str	x0, [sp, #56]
  40fb68:	ldr	x5, [sp, #48]
  40fb6c:	ldr	x4, [sp, #56]
  40fb70:	ldr	x3, [sp, #16]
  40fb74:	ldr	x2, [sp, #24]
  40fb78:	ldr	x1, [sp, #32]
  40fb7c:	ldr	x0, [sp, #40]
  40fb80:	bl	40f7ac <patsubst_expand_pat@@Base>
  40fb84:	ldp	x29, x30, [sp], #64
  40fb88:	ret
  40fb8c:	stp	x29, x30, [sp, #-64]!
  40fb90:	mov	x29, sp
  40fb94:	str	x0, [sp, #24]
  40fb98:	ldr	x0, [sp, #24]
  40fb9c:	str	x0, [sp, #56]
  40fba0:	b	40fbb0 <patsubst_expand@@Base+0xa8>
  40fba4:	ldr	x0, [sp, #56]
  40fba8:	add	x0, x0, #0x1
  40fbac:	str	x0, [sp, #56]
  40fbb0:	ldr	x0, [sp, #56]
  40fbb4:	ldrb	w0, [x0]
  40fbb8:	mov	w1, w0
  40fbbc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40fbc0:	add	x0, x0, #0x728
  40fbc4:	sxtw	x1, w1
  40fbc8:	ldrh	w0, [x0, x1, lsl #1]
  40fbcc:	and	w0, w0, #0x2000
  40fbd0:	cmp	w0, #0x0
  40fbd4:	b.ne	40fba4 <patsubst_expand@@Base+0x9c>  // b.any
  40fbd8:	ldr	x1, [sp, #56]
  40fbdc:	ldr	x0, [sp, #24]
  40fbe0:	cmp	x1, x0
  40fbe4:	b.eq	40fc10 <patsubst_expand@@Base+0x108>  // b.none
  40fbe8:	ldr	x0, [sp, #56]
  40fbec:	ldrb	w0, [x0]
  40fbf0:	mov	w1, w0
  40fbf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40fbf8:	add	x0, x0, #0x728
  40fbfc:	sxtw	x1, w1
  40fc00:	ldrh	w0, [x0, x1, lsl #1]
  40fc04:	and	w0, w0, #0x7
  40fc08:	cmp	w0, #0x0
  40fc0c:	b.ne	40fc18 <patsubst_expand@@Base+0x110>  // b.any
  40fc10:	mov	x0, #0x0                   	// #0
  40fc14:	b	40fc48 <patsubst_expand@@Base+0x140>
  40fc18:	ldr	x0, [sp, #24]
  40fc1c:	str	x0, [sp, #40]
  40fc20:	ldr	x1, [sp, #56]
  40fc24:	ldr	x0, [sp, #24]
  40fc28:	sub	x0, x1, x0
  40fc2c:	and	w0, w0, #0xff
  40fc30:	strb	w0, [sp, #48]
  40fc34:	add	x0, sp, #0x20
  40fc38:	mov	x1, x0
  40fc3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40fc40:	add	x0, x0, #0x5a0
  40fc44:	bl	414398 <hash_find_item@@Base>
  40fc48:	ldp	x29, x30, [sp], #64
  40fc4c:	ret

000000000040fc50 <pattern_matches@@Base>:
  40fc50:	stp	x29, x30, [sp, #-80]!
  40fc54:	mov	x29, sp
  40fc58:	str	x0, [x29, #40]
  40fc5c:	str	x1, [x29, #32]
  40fc60:	str	x2, [x29, #24]
  40fc64:	ldr	x0, [x29, #32]
  40fc68:	cmp	x0, #0x0
  40fc6c:	b.ne	40fd44 <pattern_matches@@Base+0xf4>  // b.any
  40fc70:	ldr	x0, [x29, #40]
  40fc74:	bl	4066f0 <strlen@plt>
  40fc78:	add	x0, x0, #0x1
  40fc7c:	str	x0, [x29, #72]
  40fc80:	ldr	x0, [x29, #72]
  40fc84:	add	x0, x0, #0xf
  40fc88:	lsr	x0, x0, #4
  40fc8c:	lsl	x0, x0, #4
  40fc90:	sub	sp, sp, x0
  40fc94:	mov	x0, sp
  40fc98:	add	x0, x0, #0xf
  40fc9c:	lsr	x0, x0, #4
  40fca0:	lsl	x0, x0, #4
  40fca4:	str	x0, [x29, #64]
  40fca8:	ldr	x2, [x29, #72]
  40fcac:	ldr	x1, [x29, #40]
  40fcb0:	ldr	x0, [x29, #64]
  40fcb4:	bl	4066b0 <memcpy@plt>
  40fcb8:	ldr	x0, [x29, #64]
  40fcbc:	bl	4294d0 <find_percent@@Base>
  40fcc0:	str	x0, [x29, #32]
  40fcc4:	ldr	x0, [x29, #32]
  40fcc8:	cmp	x0, #0x0
  40fccc:	b.ne	40fd3c <pattern_matches@@Base+0xec>  // b.any
  40fcd0:	ldr	x1, [x29, #64]
  40fcd4:	ldr	x0, [x29, #24]
  40fcd8:	cmp	x1, x0
  40fcdc:	b.eq	40fd2c <pattern_matches@@Base+0xdc>  // b.none
  40fce0:	ldr	x0, [x29, #64]
  40fce4:	ldrb	w1, [x0]
  40fce8:	ldr	x0, [x29, #24]
  40fcec:	ldrb	w0, [x0]
  40fcf0:	cmp	w1, w0
  40fcf4:	b.ne	40fd34 <pattern_matches@@Base+0xe4>  // b.any
  40fcf8:	ldr	x0, [x29, #64]
  40fcfc:	ldrb	w0, [x0]
  40fd00:	cmp	w0, #0x0
  40fd04:	b.eq	40fd2c <pattern_matches@@Base+0xdc>  // b.none
  40fd08:	ldr	x0, [x29, #64]
  40fd0c:	add	x2, x0, #0x1
  40fd10:	ldr	x0, [x29, #24]
  40fd14:	add	x0, x0, #0x1
  40fd18:	mov	x1, x0
  40fd1c:	mov	x0, x2
  40fd20:	bl	406bc0 <strcmp@plt>
  40fd24:	cmp	w0, #0x0
  40fd28:	b.ne	40fd34 <pattern_matches@@Base+0xe4>  // b.any
  40fd2c:	mov	w0, #0x1                   	// #1
  40fd30:	b	40fde4 <pattern_matches@@Base+0x194>
  40fd34:	mov	w0, #0x0                   	// #0
  40fd38:	b	40fde4 <pattern_matches@@Base+0x194>
  40fd3c:	ldr	x0, [x29, #64]
  40fd40:	str	x0, [x29, #40]
  40fd44:	ldr	x0, [x29, #32]
  40fd48:	add	x0, x0, #0x1
  40fd4c:	bl	4066f0 <strlen@plt>
  40fd50:	str	x0, [x29, #56]
  40fd54:	ldr	x0, [x29, #24]
  40fd58:	bl	4066f0 <strlen@plt>
  40fd5c:	str	x0, [x29, #48]
  40fd60:	ldr	x1, [x29, #32]
  40fd64:	ldr	x0, [x29, #40]
  40fd68:	sub	x0, x1, x0
  40fd6c:	mov	x1, x0
  40fd70:	ldr	x0, [x29, #56]
  40fd74:	add	x0, x1, x0
  40fd78:	ldr	x1, [x29, #48]
  40fd7c:	cmp	x1, x0
  40fd80:	b.cc	40fda8 <pattern_matches@@Base+0x158>  // b.lo, b.ul, b.last
  40fd84:	ldr	x1, [x29, #32]
  40fd88:	ldr	x0, [x29, #40]
  40fd8c:	sub	x0, x1, x0
  40fd90:	mov	x2, x0
  40fd94:	ldr	x1, [x29, #24]
  40fd98:	ldr	x0, [x29, #40]
  40fd9c:	bl	406990 <strncmp@plt>
  40fda0:	cmp	w0, #0x0
  40fda4:	b.eq	40fdb0 <pattern_matches@@Base+0x160>  // b.none
  40fda8:	mov	w0, #0x0                   	// #0
  40fdac:	b	40fde4 <pattern_matches@@Base+0x194>
  40fdb0:	ldr	x0, [x29, #32]
  40fdb4:	add	x2, x0, #0x1
  40fdb8:	ldr	x1, [x29, #48]
  40fdbc:	ldr	x0, [x29, #56]
  40fdc0:	sub	x0, x1, x0
  40fdc4:	ldr	x1, [x29, #24]
  40fdc8:	add	x0, x1, x0
  40fdcc:	mov	x1, x0
  40fdd0:	mov	x0, x2
  40fdd4:	bl	406bc0 <strcmp@plt>
  40fdd8:	cmp	w0, #0x0
  40fddc:	cset	w0, eq  // eq = none
  40fde0:	and	w0, w0, #0xff
  40fde4:	mov	sp, x29
  40fde8:	ldp	x29, x30, [sp], #80
  40fdec:	ret
  40fdf0:	sub	sp, sp, #0x30
  40fdf4:	strb	w0, [sp, #31]
  40fdf8:	strb	w1, [sp, #30]
  40fdfc:	str	x2, [sp, #16]
  40fe00:	str	x3, [sp, #8]
  40fe04:	str	wzr, [sp, #44]
  40fe08:	b	40fec8 <pattern_matches@@Base+0x278>
  40fe0c:	ldr	x0, [sp, #16]
  40fe10:	ldrb	w0, [x0]
  40fe14:	mov	w1, w0
  40fe18:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40fe1c:	add	x0, x0, #0x728
  40fe20:	sxtw	x1, w1
  40fe24:	ldrh	w0, [x0, x1, lsl #1]
  40fe28:	mov	w1, w0
  40fe2c:	mov	w0, #0x480                 	// #1152
  40fe30:	and	w0, w1, w0
  40fe34:	cmp	w0, #0x0
  40fe38:	b.eq	40feb8 <pattern_matches@@Base+0x268>  // b.none
  40fe3c:	ldr	x0, [sp, #16]
  40fe40:	ldrb	w0, [x0]
  40fe44:	ldrb	w1, [sp, #31]
  40fe48:	cmp	w1, w0
  40fe4c:	b.ne	40fe60 <pattern_matches@@Base+0x210>  // b.any
  40fe50:	ldr	w0, [sp, #44]
  40fe54:	add	w0, w0, #0x1
  40fe58:	str	w0, [sp, #44]
  40fe5c:	b	40febc <pattern_matches@@Base+0x26c>
  40fe60:	ldr	x0, [sp, #16]
  40fe64:	ldrb	w0, [x0]
  40fe68:	ldrb	w1, [sp, #30]
  40fe6c:	cmp	w1, w0
  40fe70:	b.ne	40fe94 <pattern_matches@@Base+0x244>  // b.any
  40fe74:	ldr	w0, [sp, #44]
  40fe78:	sub	w0, w0, #0x1
  40fe7c:	str	w0, [sp, #44]
  40fe80:	ldr	w0, [sp, #44]
  40fe84:	cmp	w0, #0x0
  40fe88:	b.ge	40febc <pattern_matches@@Base+0x26c>  // b.tcont
  40fe8c:	mov	x0, #0x0                   	// #0
  40fe90:	b	40fedc <pattern_matches@@Base+0x28c>
  40fe94:	ldr	x0, [sp, #16]
  40fe98:	ldrb	w0, [x0]
  40fe9c:	cmp	w0, #0x2c
  40fea0:	b.ne	40febc <pattern_matches@@Base+0x26c>  // b.any
  40fea4:	ldr	w0, [sp, #44]
  40fea8:	cmp	w0, #0x0
  40feac:	b.ne	40febc <pattern_matches@@Base+0x26c>  // b.any
  40feb0:	ldr	x0, [sp, #16]
  40feb4:	b	40fedc <pattern_matches@@Base+0x28c>
  40feb8:	nop
  40febc:	ldr	x0, [sp, #16]
  40fec0:	add	x0, x0, #0x1
  40fec4:	str	x0, [sp, #16]
  40fec8:	ldr	x1, [sp, #16]
  40fecc:	ldr	x0, [sp, #8]
  40fed0:	cmp	x1, x0
  40fed4:	b.cc	40fe0c <pattern_matches@@Base+0x1bc>  // b.lo, b.ul, b.last
  40fed8:	mov	x0, #0x0                   	// #0
  40fedc:	add	sp, sp, #0x30
  40fee0:	ret
  40fee4:	stp	x29, x30, [sp, #-64]!
  40fee8:	mov	x29, sp
  40feec:	str	x0, [sp, #24]
  40fef0:	add	x0, sp, #0x18
  40fef4:	mov	w4, #0x19                  	// #25
  40fef8:	mov	x3, #0x0                   	// #0
  40fefc:	mov	w2, #0x1                   	// #1
  40ff00:	mov	x1, #0x10                  	// #16
  40ff04:	bl	42a5e0 <parse_file_seq@@Base>
  40ff08:	str	x0, [sp, #56]
  40ff0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ff10:	add	x0, x0, #0x600
  40ff14:	ldr	x0, [x0]
  40ff18:	cmp	x0, #0x0
  40ff1c:	b.ne	40ff48 <pattern_matches@@Base+0x2f8>  // b.any
  40ff20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ff24:	add	x0, x0, #0x608
  40ff28:	mov	x1, #0x64                  	// #100
  40ff2c:	str	x1, [x0]
  40ff30:	mov	x0, #0x64                  	// #100
  40ff34:	bl	42268c <xmalloc@@Base>
  40ff38:	mov	x1, x0
  40ff3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ff40:	add	x0, x0, #0x600
  40ff44:	str	x1, [x0]
  40ff48:	str	xzr, [sp, #48]
  40ff4c:	b	410068 <pattern_matches@@Base+0x418>
  40ff50:	ldr	x0, [sp, #56]
  40ff54:	ldr	x0, [x0]
  40ff58:	str	x0, [sp, #40]
  40ff5c:	ldr	x0, [sp, #56]
  40ff60:	ldr	x0, [x0, #8]
  40ff64:	bl	4066f0 <strlen@plt>
  40ff68:	str	x0, [sp, #32]
  40ff6c:	ldr	x1, [sp, #48]
  40ff70:	ldr	x0, [sp, #32]
  40ff74:	add	x0, x1, x0
  40ff78:	add	x1, x0, #0x1
  40ff7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ff80:	add	x0, x0, #0x608
  40ff84:	ldr	x0, [x0]
  40ff88:	cmp	x1, x0
  40ff8c:	b.ls	40ffec <pattern_matches@@Base+0x39c>  // b.plast
  40ff90:	ldr	x0, [sp, #32]
  40ff94:	add	x0, x0, #0x1
  40ff98:	lsl	x1, x0, #1
  40ff9c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ffa0:	add	x0, x0, #0x608
  40ffa4:	ldr	x0, [x0]
  40ffa8:	add	x1, x1, x0
  40ffac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ffb0:	add	x0, x0, #0x608
  40ffb4:	str	x1, [x0]
  40ffb8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ffbc:	add	x0, x0, #0x600
  40ffc0:	ldr	x2, [x0]
  40ffc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ffc8:	add	x0, x0, #0x608
  40ffcc:	ldr	x0, [x0]
  40ffd0:	mov	x1, x0
  40ffd4:	mov	x0, x2
  40ffd8:	bl	422720 <xrealloc@@Base>
  40ffdc:	mov	x1, x0
  40ffe0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40ffe4:	add	x0, x0, #0x600
  40ffe8:	str	x1, [x0]
  40ffec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  40fff0:	add	x0, x0, #0x600
  40fff4:	ldr	x1, [x0]
  40fff8:	ldr	x0, [sp, #48]
  40fffc:	add	x3, x1, x0
  410000:	ldr	x0, [sp, #56]
  410004:	ldr	x0, [x0, #8]
  410008:	ldr	x2, [sp, #32]
  41000c:	mov	x1, x0
  410010:	mov	x0, x3
  410014:	bl	4066b0 <memcpy@plt>
  410018:	ldr	x1, [sp, #48]
  41001c:	ldr	x0, [sp, #32]
  410020:	add	x0, x1, x0
  410024:	str	x0, [sp, #48]
  410028:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41002c:	add	x0, x0, #0x600
  410030:	ldr	x1, [x0]
  410034:	ldr	x0, [sp, #48]
  410038:	add	x2, x0, #0x1
  41003c:	str	x2, [sp, #48]
  410040:	add	x0, x1, x0
  410044:	mov	w1, #0x20                  	// #32
  410048:	strb	w1, [x0]
  41004c:	ldr	x0, [sp, #56]
  410050:	ldr	x0, [x0, #8]
  410054:	bl	406c00 <free@plt>
  410058:	ldr	x0, [sp, #56]
  41005c:	bl	406c00 <free@plt>
  410060:	ldr	x0, [sp, #40]
  410064:	str	x0, [sp, #56]
  410068:	ldr	x0, [sp, #56]
  41006c:	cmp	x0, #0x0
  410070:	b.ne	40ff50 <pattern_matches@@Base+0x300>  // b.any
  410074:	ldr	x0, [sp, #48]
  410078:	cmp	x0, #0x0
  41007c:	b.ne	410094 <pattern_matches@@Base+0x444>  // b.any
  410080:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410084:	add	x0, x0, #0x600
  410088:	ldr	x0, [x0]
  41008c:	strb	wzr, [x0]
  410090:	b	4100b0 <pattern_matches@@Base+0x460>
  410094:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410098:	add	x0, x0, #0x600
  41009c:	ldr	x1, [x0]
  4100a0:	ldr	x0, [sp, #48]
  4100a4:	sub	x0, x0, #0x1
  4100a8:	add	x0, x1, x0
  4100ac:	strb	wzr, [x0]
  4100b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4100b4:	add	x0, x0, #0x600
  4100b8:	ldr	x0, [x0]
  4100bc:	ldp	x29, x30, [sp], #64
  4100c0:	ret
  4100c4:	stp	x29, x30, [sp, #-48]!
  4100c8:	mov	x29, sp
  4100cc:	str	x0, [sp, #40]
  4100d0:	str	x1, [sp, #32]
  4100d4:	str	x2, [sp, #24]
  4100d8:	ldr	x0, [sp, #32]
  4100dc:	add	x0, x0, #0x10
  4100e0:	ldr	x1, [x0]
  4100e4:	ldr	x0, [sp, #32]
  4100e8:	ldr	x2, [x0]
  4100ec:	ldr	x0, [sp, #32]
  4100f0:	add	x0, x0, #0x8
  4100f4:	ldr	x0, [x0]
  4100f8:	mov	x3, x0
  4100fc:	ldr	x0, [sp, #40]
  410100:	bl	40fb08 <patsubst_expand@@Base>
  410104:	str	x0, [sp, #40]
  410108:	ldr	x0, [sp, #40]
  41010c:	ldp	x29, x30, [sp], #48
  410110:	ret
  410114:	stp	x29, x30, [sp, #-112]!
  410118:	mov	x29, sp
  41011c:	str	x0, [sp, #40]
  410120:	str	x1, [sp, #32]
  410124:	str	x2, [sp, #24]
  410128:	str	wzr, [sp, #108]
  41012c:	ldr	x0, [sp, #32]
  410130:	ldr	x0, [x0]
  410134:	str	x0, [sp, #80]
  410138:	ldr	x0, [sp, #32]
  41013c:	ldr	x0, [x0, #8]
  410140:	str	x0, [sp, #72]
  410144:	add	x1, sp, #0x40
  410148:	add	x0, sp, #0x50
  41014c:	bl	4228ec <find_next_token@@Base>
  410150:	str	x0, [sp, #96]
  410154:	ldr	x0, [sp, #96]
  410158:	cmp	x0, #0x0
  41015c:	b.eq	410178 <pattern_matches@@Base+0x528>  // b.none
  410160:	ldr	x0, [sp, #64]
  410164:	mov	x2, x0
  410168:	ldr	x1, [sp, #96]
  41016c:	ldr	x0, [sp, #40]
  410170:	bl	40b388 <variable_buffer_output@@Base>
  410174:	str	x0, [sp, #40]
  410178:	add	x1, sp, #0x38
  41017c:	add	x0, sp, #0x48
  410180:	bl	4228ec <find_next_token@@Base>
  410184:	str	x0, [sp, #88]
  410188:	ldr	x0, [sp, #88]
  41018c:	cmp	x0, #0x0
  410190:	b.eq	4101ac <pattern_matches@@Base+0x55c>  // b.none
  410194:	ldr	x0, [sp, #56]
  410198:	mov	x2, x0
  41019c:	ldr	x1, [sp, #88]
  4101a0:	ldr	x0, [sp, #40]
  4101a4:	bl	40b388 <variable_buffer_output@@Base>
  4101a8:	str	x0, [sp, #40]
  4101ac:	ldr	x0, [sp, #96]
  4101b0:	cmp	x0, #0x0
  4101b4:	b.ne	4101c4 <pattern_matches@@Base+0x574>  // b.any
  4101b8:	ldr	x0, [sp, #88]
  4101bc:	cmp	x0, #0x0
  4101c0:	b.eq	4101e4 <pattern_matches@@Base+0x594>  // b.none
  4101c4:	mov	x2, #0x1                   	// #1
  4101c8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4101cc:	add	x1, x0, #0x9d0
  4101d0:	ldr	x0, [sp, #40]
  4101d4:	bl	40b388 <variable_buffer_output@@Base>
  4101d8:	str	x0, [sp, #40]
  4101dc:	mov	w0, #0x1                   	// #1
  4101e0:	str	w0, [sp, #108]
  4101e4:	ldr	x0, [sp, #96]
  4101e8:	cmp	x0, #0x0
  4101ec:	b.ne	410144 <pattern_matches@@Base+0x4f4>  // b.any
  4101f0:	ldr	x0, [sp, #88]
  4101f4:	cmp	x0, #0x0
  4101f8:	b.ne	410144 <pattern_matches@@Base+0x4f4>  // b.any
  4101fc:	ldr	w0, [sp, #108]
  410200:	cmp	w0, #0x0
  410204:	b.eq	410214 <pattern_matches@@Base+0x5c4>  // b.none
  410208:	ldr	x0, [sp, #40]
  41020c:	sub	x0, x0, #0x1
  410210:	str	x0, [sp, #40]
  410214:	ldr	x0, [sp, #40]
  410218:	ldp	x29, x30, [sp], #112
  41021c:	ret
  410220:	stp	x29, x30, [sp, #-80]!
  410224:	mov	x29, sp
  410228:	str	x19, [sp, #16]
  41022c:	str	x0, [sp, #56]
  410230:	str	x1, [sp, #48]
  410234:	str	x2, [sp, #40]
  410238:	ldr	x0, [sp, #48]
  41023c:	ldr	x19, [x0]
  410240:	ldr	x0, [sp, #48]
  410244:	ldr	x0, [x0]
  410248:	bl	4066f0 <strlen@plt>
  41024c:	mov	x1, x0
  410250:	mov	x0, x19
  410254:	bl	431f68 <lookup_variable@@Base>
  410258:	str	x0, [sp, #72]
  41025c:	ldr	x0, [sp, #72]
  410260:	cmp	x0, #0x0
  410264:	b.ne	410284 <pattern_matches@@Base+0x634>  // b.any
  410268:	mov	x2, #0x9                   	// #9
  41026c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410270:	add	x1, x0, #0x9d8
  410274:	ldr	x0, [sp, #56]
  410278:	bl	40b388 <variable_buffer_output@@Base>
  41027c:	str	x0, [sp, #56]
  410280:	b	4103bc <pattern_matches@@Base+0x76c>
  410284:	ldr	x0, [sp, #72]
  410288:	ldrb	w0, [x0, #47]
  41028c:	ubfx	x0, x0, #2, #3
  410290:	and	w0, w0, #0xff
  410294:	cmp	w0, #0x6
  410298:	b.eq	4103a0 <pattern_matches@@Base+0x750>  // b.none
  41029c:	cmp	w0, #0x6
  4102a0:	b.gt	4102f4 <pattern_matches@@Base+0x6a4>
  4102a4:	cmp	w0, #0x5
  4102a8:	b.eq	410384 <pattern_matches@@Base+0x734>  // b.none
  4102ac:	cmp	w0, #0x5
  4102b0:	b.gt	4102f4 <pattern_matches@@Base+0x6a4>
  4102b4:	cmp	w0, #0x4
  4102b8:	b.eq	410368 <pattern_matches@@Base+0x718>  // b.none
  4102bc:	cmp	w0, #0x4
  4102c0:	b.gt	4102f4 <pattern_matches@@Base+0x6a4>
  4102c4:	cmp	w0, #0x3
  4102c8:	b.eq	41034c <pattern_matches@@Base+0x6fc>  // b.none
  4102cc:	cmp	w0, #0x3
  4102d0:	b.gt	4102f4 <pattern_matches@@Base+0x6a4>
  4102d4:	cmp	w0, #0x2
  4102d8:	b.eq	410330 <pattern_matches@@Base+0x6e0>  // b.none
  4102dc:	cmp	w0, #0x2
  4102e0:	b.gt	4102f4 <pattern_matches@@Base+0x6a4>
  4102e4:	cmp	w0, #0x0
  4102e8:	b.eq	4102f8 <pattern_matches@@Base+0x6a8>  // b.none
  4102ec:	cmp	w0, #0x1
  4102f0:	b.eq	410314 <pattern_matches@@Base+0x6c4>  // b.none
  4102f4:	bl	406b30 <abort@plt>
  4102f8:	mov	x2, #0x7                   	// #7
  4102fc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410300:	add	x1, x0, #0x9e8
  410304:	ldr	x0, [sp, #56]
  410308:	bl	40b388 <variable_buffer_output@@Base>
  41030c:	str	x0, [sp, #56]
  410310:	b	4103bc <pattern_matches@@Base+0x76c>
  410314:	mov	x2, #0xb                   	// #11
  410318:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41031c:	add	x1, x0, #0x9f0
  410320:	ldr	x0, [sp, #56]
  410324:	bl	40b388 <variable_buffer_output@@Base>
  410328:	str	x0, [sp, #56]
  41032c:	b	4103bc <pattern_matches@@Base+0x76c>
  410330:	mov	x2, #0x4                   	// #4
  410334:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410338:	add	x1, x0, #0xa00
  41033c:	ldr	x0, [sp, #56]
  410340:	bl	40b388 <variable_buffer_output@@Base>
  410344:	str	x0, [sp, #56]
  410348:	b	4103bc <pattern_matches@@Base+0x76c>
  41034c:	mov	x2, #0x14                  	// #20
  410350:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410354:	add	x1, x0, #0xa08
  410358:	ldr	x0, [sp, #56]
  41035c:	bl	40b388 <variable_buffer_output@@Base>
  410360:	str	x0, [sp, #56]
  410364:	b	4103bc <pattern_matches@@Base+0x76c>
  410368:	mov	x2, #0xc                   	// #12
  41036c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410370:	add	x1, x0, #0xa20
  410374:	ldr	x0, [sp, #56]
  410378:	bl	40b388 <variable_buffer_output@@Base>
  41037c:	str	x0, [sp, #56]
  410380:	b	4103bc <pattern_matches@@Base+0x76c>
  410384:	mov	x2, #0x8                   	// #8
  410388:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41038c:	add	x1, x0, #0xa30
  410390:	ldr	x0, [sp, #56]
  410394:	bl	40b388 <variable_buffer_output@@Base>
  410398:	str	x0, [sp, #56]
  41039c:	b	4103bc <pattern_matches@@Base+0x76c>
  4103a0:	mov	x2, #0x9                   	// #9
  4103a4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4103a8:	add	x1, x0, #0xa40
  4103ac:	ldr	x0, [sp, #56]
  4103b0:	bl	40b388 <variable_buffer_output@@Base>
  4103b4:	str	x0, [sp, #56]
  4103b8:	nop
  4103bc:	ldr	x0, [sp, #56]
  4103c0:	ldr	x19, [sp, #16]
  4103c4:	ldp	x29, x30, [sp], #80
  4103c8:	ret
  4103cc:	stp	x29, x30, [sp, #-80]!
  4103d0:	mov	x29, sp
  4103d4:	str	x19, [sp, #16]
  4103d8:	str	x0, [sp, #56]
  4103dc:	str	x1, [sp, #48]
  4103e0:	str	x2, [sp, #40]
  4103e4:	ldr	x0, [sp, #48]
  4103e8:	ldr	x19, [x0]
  4103ec:	ldr	x0, [sp, #48]
  4103f0:	ldr	x0, [x0]
  4103f4:	bl	4066f0 <strlen@plt>
  4103f8:	mov	x1, x0
  4103fc:	mov	x0, x19
  410400:	bl	431f68 <lookup_variable@@Base>
  410404:	str	x0, [sp, #72]
  410408:	ldr	x0, [sp, #72]
  41040c:	cmp	x0, #0x0
  410410:	b.ne	410430 <pattern_matches@@Base+0x7e0>  // b.any
  410414:	mov	x2, #0x9                   	// #9
  410418:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41041c:	add	x1, x0, #0x9d8
  410420:	ldr	x0, [sp, #56]
  410424:	bl	40b388 <variable_buffer_output@@Base>
  410428:	str	x0, [sp, #56]
  41042c:	b	41047c <pattern_matches@@Base+0x82c>
  410430:	ldr	x0, [sp, #72]
  410434:	ldrb	w0, [x0, #44]
  410438:	and	w0, w0, #0x1
  41043c:	and	w0, w0, #0xff
  410440:	cmp	w0, #0x0
  410444:	b.eq	410464 <pattern_matches@@Base+0x814>  // b.none
  410448:	mov	x2, #0x9                   	// #9
  41044c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410450:	add	x1, x0, #0xa50
  410454:	ldr	x0, [sp, #56]
  410458:	bl	40b388 <variable_buffer_output@@Base>
  41045c:	str	x0, [sp, #56]
  410460:	b	41047c <pattern_matches@@Base+0x82c>
  410464:	mov	x2, #0x6                   	// #6
  410468:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41046c:	add	x1, x0, #0xa60
  410470:	ldr	x0, [sp, #56]
  410474:	bl	40b388 <variable_buffer_output@@Base>
  410478:	str	x0, [sp, #56]
  41047c:	ldr	x0, [sp, #56]
  410480:	ldr	x19, [sp, #16]
  410484:	ldp	x29, x30, [sp], #80
  410488:	ret
  41048c:	stp	x29, x30, [sp, #-112]!
  410490:	mov	x29, sp
  410494:	str	x0, [sp, #40]
  410498:	str	x1, [sp, #32]
  41049c:	str	x2, [sp, #24]
  4104a0:	ldr	x0, [sp, #32]
  4104a4:	ldr	x0, [x0]
  4104a8:	str	x0, [sp, #64]
  4104ac:	str	wzr, [sp, #108]
  4104b0:	str	xzr, [sp, #56]
  4104b4:	ldr	x0, [sp, #24]
  4104b8:	ldrb	w0, [x0]
  4104bc:	cmp	w0, #0x73
  4104c0:	cset	w0, eq  // eq = none
  4104c4:	and	w0, w0, #0xff
  4104c8:	str	w0, [sp, #92]
  4104cc:	ldr	w0, [sp, #92]
  4104d0:	cmp	w0, #0x0
  4104d4:	cset	w0, eq  // eq = none
  4104d8:	and	w0, w0, #0xff
  4104dc:	str	w0, [sp, #88]
  4104e0:	ldr	w0, [sp, #92]
  4104e4:	cmp	w0, #0x0
  4104e8:	b.eq	4104f4 <pattern_matches@@Base+0x8a4>  // b.none
  4104ec:	mov	w0, #0x8200                	// #33280
  4104f0:	b	4104f8 <pattern_matches@@Base+0x8a8>
  4104f4:	mov	w0, #0x8000                	// #32768
  4104f8:	str	w0, [sp, #84]
  4104fc:	b	410630 <pattern_matches@@Base+0x9e0>
  410500:	ldr	x0, [sp, #56]
  410504:	sub	x0, x0, #0x1
  410508:	ldr	x1, [sp, #72]
  41050c:	add	x0, x1, x0
  410510:	str	x0, [sp, #96]
  410514:	b	410524 <pattern_matches@@Base+0x8d4>
  410518:	ldr	x0, [sp, #96]
  41051c:	sub	x0, x0, #0x1
  410520:	str	x0, [sp, #96]
  410524:	ldr	x1, [sp, #96]
  410528:	ldr	x0, [sp, #72]
  41052c:	cmp	x1, x0
  410530:	b.cc	410564 <pattern_matches@@Base+0x914>  // b.lo, b.ul, b.last
  410534:	ldr	x0, [sp, #96]
  410538:	ldrb	w0, [x0]
  41053c:	mov	w1, w0
  410540:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410544:	add	x0, x0, #0x728
  410548:	sxtw	x1, w1
  41054c:	ldrh	w0, [x0, x1, lsl #1]
  410550:	mov	w1, w0
  410554:	ldr	w0, [sp, #84]
  410558:	and	w0, w1, w0
  41055c:	cmp	w0, #0x0
  410560:	b.eq	410518 <pattern_matches@@Base+0x8c8>  // b.none
  410564:	ldr	x1, [sp, #96]
  410568:	ldr	x0, [sp, #72]
  41056c:	cmp	x1, x0
  410570:	b.cc	4105d0 <pattern_matches@@Base+0x980>  // b.lo, b.ul, b.last
  410574:	ldr	w0, [sp, #88]
  410578:	cmp	w0, #0x0
  41057c:	b.eq	410590 <pattern_matches@@Base+0x940>  // b.none
  410580:	ldr	x0, [sp, #96]
  410584:	add	x0, x0, #0x1
  410588:	str	x0, [sp, #96]
  41058c:	b	4105a4 <pattern_matches@@Base+0x954>
  410590:	ldr	x0, [sp, #96]
  410594:	ldrb	w0, [x0]
  410598:	cmp	w0, #0x2e
  41059c:	b.eq	4105a4 <pattern_matches@@Base+0x954>  // b.none
  4105a0:	b	410630 <pattern_matches@@Base+0x9e0>
  4105a4:	ldr	x0, [sp, #56]
  4105a8:	ldr	x2, [sp, #96]
  4105ac:	ldr	x1, [sp, #72]
  4105b0:	sub	x1, x2, x1
  4105b4:	sub	x0, x0, x1
  4105b8:	mov	x2, x0
  4105bc:	ldr	x1, [sp, #96]
  4105c0:	ldr	x0, [sp, #40]
  4105c4:	bl	40b388 <variable_buffer_output@@Base>
  4105c8:	str	x0, [sp, #40]
  4105cc:	b	4105f4 <pattern_matches@@Base+0x9a4>
  4105d0:	ldr	w0, [sp, #88]
  4105d4:	cmp	w0, #0x0
  4105d8:	b.eq	4105f4 <pattern_matches@@Base+0x9a4>  // b.none
  4105dc:	ldr	x0, [sp, #56]
  4105e0:	mov	x2, x0
  4105e4:	ldr	x1, [sp, #72]
  4105e8:	ldr	x0, [sp, #40]
  4105ec:	bl	40b388 <variable_buffer_output@@Base>
  4105f0:	str	x0, [sp, #40]
  4105f4:	ldr	w0, [sp, #88]
  4105f8:	cmp	w0, #0x0
  4105fc:	b.ne	410610 <pattern_matches@@Base+0x9c0>  // b.any
  410600:	ldr	x1, [sp, #96]
  410604:	ldr	x0, [sp, #72]
  410608:	cmp	x1, x0
  41060c:	b.cc	410630 <pattern_matches@@Base+0x9e0>  // b.lo, b.ul, b.last
  410610:	mov	x2, #0x1                   	// #1
  410614:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410618:	add	x1, x0, #0x9d0
  41061c:	ldr	x0, [sp, #40]
  410620:	bl	40b388 <variable_buffer_output@@Base>
  410624:	str	x0, [sp, #40]
  410628:	mov	w0, #0x1                   	// #1
  41062c:	str	w0, [sp, #108]
  410630:	add	x1, sp, #0x38
  410634:	add	x0, sp, #0x40
  410638:	bl	4228ec <find_next_token@@Base>
  41063c:	str	x0, [sp, #72]
  410640:	ldr	x0, [sp, #72]
  410644:	cmp	x0, #0x0
  410648:	b.ne	410500 <pattern_matches@@Base+0x8b0>  // b.any
  41064c:	ldr	w0, [sp, #108]
  410650:	cmp	w0, #0x0
  410654:	b.eq	410664 <pattern_matches@@Base+0xa14>  // b.none
  410658:	ldr	x0, [sp, #40]
  41065c:	sub	x0, x0, #0x1
  410660:	str	x0, [sp, #40]
  410664:	ldr	x0, [sp, #40]
  410668:	ldp	x29, x30, [sp], #112
  41066c:	ret
  410670:	stp	x29, x30, [sp, #-112]!
  410674:	mov	x29, sp
  410678:	str	x0, [sp, #40]
  41067c:	str	x1, [sp, #32]
  410680:	str	x2, [sp, #24]
  410684:	ldr	x0, [sp, #32]
  410688:	ldr	x0, [x0]
  41068c:	str	x0, [sp, #64]
  410690:	str	wzr, [sp, #108]
  410694:	str	xzr, [sp, #56]
  410698:	ldr	x0, [sp, #24]
  41069c:	ldrb	w0, [x0]
  4106a0:	cmp	w0, #0x62
  4106a4:	cset	w0, eq  // eq = none
  4106a8:	and	w0, w0, #0xff
  4106ac:	str	w0, [sp, #92]
  4106b0:	ldr	w0, [sp, #92]
  4106b4:	cmp	w0, #0x0
  4106b8:	cset	w0, eq  // eq = none
  4106bc:	and	w0, w0, #0xff
  4106c0:	str	w0, [sp, #88]
  4106c4:	ldr	w0, [sp, #92]
  4106c8:	cmp	w0, #0x0
  4106cc:	b.eq	4106d8 <pattern_matches@@Base+0xa88>  // b.none
  4106d0:	mov	w0, #0x8201                	// #33281
  4106d4:	b	4106dc <pattern_matches@@Base+0xa8c>
  4106d8:	mov	w0, #0x8001                	// #32769
  4106dc:	str	w0, [sp, #84]
  4106e0:	b	410838 <pattern_matches@@Base+0xbe8>
  4106e4:	ldr	x0, [sp, #56]
  4106e8:	sub	x0, x0, #0x1
  4106ec:	ldr	x1, [sp, #72]
  4106f0:	add	x0, x1, x0
  4106f4:	str	x0, [sp, #96]
  4106f8:	b	410708 <pattern_matches@@Base+0xab8>
  4106fc:	ldr	x0, [sp, #96]
  410700:	sub	x0, x0, #0x1
  410704:	str	x0, [sp, #96]
  410708:	ldr	x1, [sp, #96]
  41070c:	ldr	x0, [sp, #72]
  410710:	cmp	x1, x0
  410714:	b.cc	410748 <pattern_matches@@Base+0xaf8>  // b.lo, b.ul, b.last
  410718:	ldr	x0, [sp, #96]
  41071c:	ldrb	w0, [x0]
  410720:	mov	w1, w0
  410724:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410728:	add	x0, x0, #0x728
  41072c:	sxtw	x1, w1
  410730:	ldrh	w0, [x0, x1, lsl #1]
  410734:	mov	w1, w0
  410738:	ldr	w0, [sp, #84]
  41073c:	and	w0, w1, w0
  410740:	cmp	w0, #0x0
  410744:	b.eq	4106fc <pattern_matches@@Base+0xaac>  // b.none
  410748:	ldr	x1, [sp, #96]
  41074c:	ldr	x0, [sp, #72]
  410750:	cmp	x1, x0
  410754:	b.cc	410794 <pattern_matches@@Base+0xb44>  // b.lo, b.ul, b.last
  410758:	ldr	w0, [sp, #88]
  41075c:	cmp	w0, #0x0
  410760:	b.eq	410794 <pattern_matches@@Base+0xb44>  // b.none
  410764:	ldr	x0, [sp, #96]
  410768:	add	x0, x0, #0x1
  41076c:	str	x0, [sp, #96]
  410770:	ldr	x1, [sp, #96]
  410774:	ldr	x0, [sp, #72]
  410778:	sub	x0, x1, x0
  41077c:	mov	x2, x0
  410780:	ldr	x1, [sp, #72]
  410784:	ldr	x0, [sp, #40]
  410788:	bl	40b388 <variable_buffer_output@@Base>
  41078c:	str	x0, [sp, #40]
  410790:	b	410818 <pattern_matches@@Base+0xbc8>
  410794:	ldr	x1, [sp, #96]
  410798:	ldr	x0, [sp, #72]
  41079c:	cmp	x1, x0
  4107a0:	b.cc	4107d8 <pattern_matches@@Base+0xb88>  // b.lo, b.ul, b.last
  4107a4:	ldr	x0, [sp, #96]
  4107a8:	ldrb	w0, [x0]
  4107ac:	cmp	w0, #0x2e
  4107b0:	b.ne	4107d8 <pattern_matches@@Base+0xb88>  // b.any
  4107b4:	ldr	x1, [sp, #96]
  4107b8:	ldr	x0, [sp, #72]
  4107bc:	sub	x0, x1, x0
  4107c0:	mov	x2, x0
  4107c4:	ldr	x1, [sp, #72]
  4107c8:	ldr	x0, [sp, #40]
  4107cc:	bl	40b388 <variable_buffer_output@@Base>
  4107d0:	str	x0, [sp, #40]
  4107d4:	b	410818 <pattern_matches@@Base+0xbc8>
  4107d8:	ldr	w0, [sp, #88]
  4107dc:	cmp	w0, #0x0
  4107e0:	b.eq	410800 <pattern_matches@@Base+0xbb0>  // b.none
  4107e4:	mov	x2, #0x2                   	// #2
  4107e8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4107ec:	add	x1, x0, #0xa68
  4107f0:	ldr	x0, [sp, #40]
  4107f4:	bl	40b388 <variable_buffer_output@@Base>
  4107f8:	str	x0, [sp, #40]
  4107fc:	b	410818 <pattern_matches@@Base+0xbc8>
  410800:	ldr	x0, [sp, #56]
  410804:	mov	x2, x0
  410808:	ldr	x1, [sp, #72]
  41080c:	ldr	x0, [sp, #40]
  410810:	bl	40b388 <variable_buffer_output@@Base>
  410814:	str	x0, [sp, #40]
  410818:	mov	x2, #0x1                   	// #1
  41081c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410820:	add	x1, x0, #0x9d0
  410824:	ldr	x0, [sp, #40]
  410828:	bl	40b388 <variable_buffer_output@@Base>
  41082c:	str	x0, [sp, #40]
  410830:	mov	w0, #0x1                   	// #1
  410834:	str	w0, [sp, #108]
  410838:	add	x1, sp, #0x38
  41083c:	add	x0, sp, #0x40
  410840:	bl	4228ec <find_next_token@@Base>
  410844:	str	x0, [sp, #72]
  410848:	ldr	x0, [sp, #72]
  41084c:	cmp	x0, #0x0
  410850:	b.ne	4106e4 <pattern_matches@@Base+0xa94>  // b.any
  410854:	ldr	w0, [sp, #108]
  410858:	cmp	w0, #0x0
  41085c:	b.eq	41086c <pattern_matches@@Base+0xc1c>  // b.none
  410860:	ldr	x0, [sp, #40]
  410864:	sub	x0, x0, #0x1
  410868:	str	x0, [sp, #40]
  41086c:	ldr	x0, [sp, #40]
  410870:	ldp	x29, x30, [sp], #112
  410874:	ret
  410878:	stp	x29, x30, [sp, #-96]!
  41087c:	mov	x29, sp
  410880:	str	x0, [sp, #40]
  410884:	str	x1, [sp, #32]
  410888:	str	x2, [sp, #24]
  41088c:	ldr	x0, [sp, #32]
  410890:	ldr	x0, [x0]
  410894:	bl	4066f0 <strlen@plt>
  410898:	str	x0, [sp, #80]
  41089c:	ldr	x0, [sp, #32]
  4108a0:	ldr	x0, [x0, #8]
  4108a4:	str	x0, [sp, #56]
  4108a8:	ldr	x0, [sp, #24]
  4108ac:	add	x0, x0, #0x3
  4108b0:	ldrb	w0, [x0]
  4108b4:	cmp	w0, #0x70
  4108b8:	cset	w0, eq  // eq = none
  4108bc:	and	w0, w0, #0xff
  4108c0:	str	w0, [sp, #76]
  4108c4:	ldr	w0, [sp, #76]
  4108c8:	cmp	w0, #0x0
  4108cc:	cset	w0, eq  // eq = none
  4108d0:	and	w0, w0, #0xff
  4108d4:	str	w0, [sp, #72]
  4108d8:	str	wzr, [sp, #92]
  4108dc:	b	410968 <pattern_matches@@Base+0xd18>
  4108e0:	ldr	w0, [sp, #76]
  4108e4:	cmp	w0, #0x0
  4108e8:	b.eq	410908 <pattern_matches@@Base+0xcb8>  // b.none
  4108ec:	ldr	x0, [sp, #32]
  4108f0:	ldr	x0, [x0]
  4108f4:	ldr	x2, [sp, #80]
  4108f8:	mov	x1, x0
  4108fc:	ldr	x0, [sp, #40]
  410900:	bl	40b388 <variable_buffer_output@@Base>
  410904:	str	x0, [sp, #40]
  410908:	ldr	x0, [sp, #48]
  41090c:	mov	x2, x0
  410910:	ldr	x1, [sp, #64]
  410914:	ldr	x0, [sp, #40]
  410918:	bl	40b388 <variable_buffer_output@@Base>
  41091c:	str	x0, [sp, #40]
  410920:	ldr	w0, [sp, #72]
  410924:	cmp	w0, #0x0
  410928:	b.eq	410948 <pattern_matches@@Base+0xcf8>  // b.none
  41092c:	ldr	x0, [sp, #32]
  410930:	ldr	x0, [x0]
  410934:	ldr	x2, [sp, #80]
  410938:	mov	x1, x0
  41093c:	ldr	x0, [sp, #40]
  410940:	bl	40b388 <variable_buffer_output@@Base>
  410944:	str	x0, [sp, #40]
  410948:	mov	x2, #0x1                   	// #1
  41094c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410950:	add	x1, x0, #0x9d0
  410954:	ldr	x0, [sp, #40]
  410958:	bl	40b388 <variable_buffer_output@@Base>
  41095c:	str	x0, [sp, #40]
  410960:	mov	w0, #0x1                   	// #1
  410964:	str	w0, [sp, #92]
  410968:	add	x1, sp, #0x30
  41096c:	add	x0, sp, #0x38
  410970:	bl	4228ec <find_next_token@@Base>
  410974:	str	x0, [sp, #64]
  410978:	ldr	x0, [sp, #64]
  41097c:	cmp	x0, #0x0
  410980:	b.ne	4108e0 <pattern_matches@@Base+0xc90>  // b.any
  410984:	ldr	w0, [sp, #92]
  410988:	cmp	w0, #0x0
  41098c:	b.eq	41099c <pattern_matches@@Base+0xd4c>  // b.none
  410990:	ldr	x0, [sp, #40]
  410994:	sub	x0, x0, #0x1
  410998:	str	x0, [sp, #40]
  41099c:	ldr	x0, [sp, #40]
  4109a0:	ldp	x29, x30, [sp], #96
  4109a4:	ret
  4109a8:	stp	x29, x30, [sp, #-80]!
  4109ac:	mov	x29, sp
  4109b0:	stp	x19, x20, [sp, #16]
  4109b4:	stp	x21, x22, [sp, #32]
  4109b8:	str	x0, [sp, #72]
  4109bc:	str	x1, [sp, #64]
  4109c0:	str	x2, [sp, #56]
  4109c4:	ldr	x0, [sp, #64]
  4109c8:	add	x0, x0, #0x10
  4109cc:	ldr	x19, [x0]
  4109d0:	ldr	x0, [sp, #64]
  4109d4:	ldr	x20, [x0]
  4109d8:	ldr	x0, [sp, #64]
  4109dc:	add	x0, x0, #0x8
  4109e0:	ldr	x21, [x0]
  4109e4:	ldr	x0, [sp, #64]
  4109e8:	ldr	x0, [x0]
  4109ec:	bl	4066f0 <strlen@plt>
  4109f0:	mov	x22, x0
  4109f4:	ldr	x0, [sp, #64]
  4109f8:	add	x0, x0, #0x8
  4109fc:	ldr	x0, [x0]
  410a00:	bl	4066f0 <strlen@plt>
  410a04:	mov	w6, #0x0                   	// #0
  410a08:	mov	x5, x0
  410a0c:	mov	x4, x22
  410a10:	mov	x3, x21
  410a14:	mov	x2, x20
  410a18:	mov	x1, x19
  410a1c:	ldr	x0, [sp, #72]
  410a20:	bl	40f5ac <subst_expand@@Base>
  410a24:	str	x0, [sp, #72]
  410a28:	ldr	x0, [sp, #72]
  410a2c:	ldp	x19, x20, [sp, #16]
  410a30:	ldp	x21, x22, [sp, #32]
  410a34:	ldp	x29, x30, [sp], #80
  410a38:	ret
  410a3c:	stp	x29, x30, [sp, #-80]!
  410a40:	mov	x29, sp
  410a44:	str	x0, [sp, #40]
  410a48:	str	x1, [sp, #32]
  410a4c:	str	x2, [sp, #24]
  410a50:	ldr	x0, [sp, #32]
  410a54:	ldr	x0, [x0]
  410a58:	str	x0, [sp, #56]
  410a5c:	add	x1, sp, #0x40
  410a60:	add	x0, sp, #0x38
  410a64:	bl	4228ec <find_next_token@@Base>
  410a68:	str	x0, [sp, #72]
  410a6c:	ldr	x0, [sp, #72]
  410a70:	cmp	x0, #0x0
  410a74:	b.eq	410a90 <pattern_matches@@Base+0xe40>  // b.none
  410a78:	ldr	x0, [sp, #64]
  410a7c:	mov	x2, x0
  410a80:	ldr	x1, [sp, #72]
  410a84:	ldr	x0, [sp, #40]
  410a88:	bl	40b388 <variable_buffer_output@@Base>
  410a8c:	str	x0, [sp, #40]
  410a90:	ldr	x0, [sp, #40]
  410a94:	ldp	x29, x30, [sp], #80
  410a98:	ret
  410a9c:	stp	x29, x30, [sp, #-80]!
  410aa0:	mov	x29, sp
  410aa4:	str	x0, [sp, #40]
  410aa8:	str	x1, [sp, #32]
  410aac:	str	x2, [sp, #24]
  410ab0:	ldr	x0, [sp, #32]
  410ab4:	ldr	x0, [x0]
  410ab8:	str	x0, [sp, #48]
  410abc:	str	xzr, [sp, #72]
  410ac0:	b	410acc <pattern_matches@@Base+0xe7c>
  410ac4:	ldr	x0, [sp, #64]
  410ac8:	str	x0, [sp, #72]
  410acc:	add	x1, sp, #0x38
  410ad0:	add	x0, sp, #0x30
  410ad4:	bl	4228ec <find_next_token@@Base>
  410ad8:	str	x0, [sp, #64]
  410adc:	ldr	x0, [sp, #64]
  410ae0:	cmp	x0, #0x0
  410ae4:	b.ne	410ac4 <pattern_matches@@Base+0xe74>  // b.any
  410ae8:	ldr	x0, [sp, #72]
  410aec:	cmp	x0, #0x0
  410af0:	b.eq	410b0c <pattern_matches@@Base+0xebc>  // b.none
  410af4:	ldr	x0, [sp, #56]
  410af8:	mov	x2, x0
  410afc:	ldr	x1, [sp, #72]
  410b00:	ldr	x0, [sp, #40]
  410b04:	bl	40b388 <variable_buffer_output@@Base>
  410b08:	str	x0, [sp, #40]
  410b0c:	ldr	x0, [sp, #40]
  410b10:	ldp	x29, x30, [sp], #80
  410b14:	ret
  410b18:	stp	x29, x30, [sp, #-96]!
  410b1c:	mov	x29, sp
  410b20:	str	x0, [sp, #40]
  410b24:	str	x1, [sp, #32]
  410b28:	str	x2, [sp, #24]
  410b2c:	str	wzr, [sp, #92]
  410b30:	ldr	x0, [sp, #32]
  410b34:	ldr	x0, [x0]
  410b38:	str	x0, [sp, #80]
  410b3c:	b	410b4c <pattern_matches@@Base+0xefc>
  410b40:	ldr	w0, [sp, #92]
  410b44:	add	w0, w0, #0x1
  410b48:	str	w0, [sp, #92]
  410b4c:	add	x0, sp, #0x50
  410b50:	mov	x1, #0x0                   	// #0
  410b54:	bl	4228ec <find_next_token@@Base>
  410b58:	cmp	x0, #0x0
  410b5c:	b.ne	410b40 <pattern_matches@@Base+0xef0>  // b.any
  410b60:	add	x3, sp, #0x38
  410b64:	ldr	w2, [sp, #92]
  410b68:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410b6c:	add	x1, x0, #0xa70
  410b70:	mov	x0, x3
  410b74:	bl	406790 <sprintf@plt>
  410b78:	add	x0, sp, #0x38
  410b7c:	bl	4066f0 <strlen@plt>
  410b80:	mov	x1, x0
  410b84:	add	x0, sp, #0x38
  410b88:	mov	x2, x1
  410b8c:	mov	x1, x0
  410b90:	ldr	x0, [sp, #40]
  410b94:	bl	40b388 <variable_buffer_output@@Base>
  410b98:	str	x0, [sp, #40]
  410b9c:	ldr	x0, [sp, #40]
  410ba0:	ldp	x29, x30, [sp], #96
  410ba4:	ret

0000000000410ba8 <strip_whitespace@@Base>:
  410ba8:	sub	sp, sp, #0x10
  410bac:	str	x0, [sp, #8]
  410bb0:	str	x1, [sp]
  410bb4:	b	410bcc <strip_whitespace@@Base+0x24>
  410bb8:	ldr	x0, [sp, #8]
  410bbc:	ldr	x0, [x0]
  410bc0:	add	x1, x0, #0x1
  410bc4:	ldr	x0, [sp, #8]
  410bc8:	str	x1, [x0]
  410bcc:	ldr	x0, [sp, #8]
  410bd0:	ldr	x1, [x0]
  410bd4:	ldr	x0, [sp]
  410bd8:	ldr	x0, [x0]
  410bdc:	cmp	x1, x0
  410be0:	b.hi	410c28 <strip_whitespace@@Base+0x80>  // b.pmore
  410be4:	ldr	x0, [sp, #8]
  410be8:	ldr	x0, [x0]
  410bec:	ldrb	w0, [x0]
  410bf0:	mov	w1, w0
  410bf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410bf8:	add	x0, x0, #0x728
  410bfc:	sxtw	x1, w1
  410c00:	ldrh	w0, [x0, x1, lsl #1]
  410c04:	and	w0, w0, #0x6
  410c08:	cmp	w0, #0x0
  410c0c:	b.ne	410bb8 <strip_whitespace@@Base+0x10>  // b.any
  410c10:	b	410c28 <strip_whitespace@@Base+0x80>
  410c14:	ldr	x0, [sp]
  410c18:	ldr	x0, [x0]
  410c1c:	sub	x1, x0, #0x1
  410c20:	ldr	x0, [sp]
  410c24:	str	x1, [x0]
  410c28:	ldr	x0, [sp]
  410c2c:	ldr	x1, [x0]
  410c30:	ldr	x0, [sp, #8]
  410c34:	ldr	x0, [x0]
  410c38:	cmp	x1, x0
  410c3c:	b.cc	410c6c <strip_whitespace@@Base+0xc4>  // b.lo, b.ul, b.last
  410c40:	ldr	x0, [sp]
  410c44:	ldr	x0, [x0]
  410c48:	ldrb	w0, [x0]
  410c4c:	mov	w1, w0
  410c50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  410c54:	add	x0, x0, #0x728
  410c58:	sxtw	x1, w1
  410c5c:	ldrh	w0, [x0, x1, lsl #1]
  410c60:	and	w0, w0, #0x6
  410c64:	cmp	w0, #0x0
  410c68:	b.ne	410c14 <strip_whitespace@@Base+0x6c>  // b.any
  410c6c:	ldr	x0, [sp, #8]
  410c70:	ldr	x0, [x0]
  410c74:	add	sp, sp, #0x10
  410c78:	ret
  410c7c:	stp	x29, x30, [sp, #-64]!
  410c80:	mov	x29, sp
  410c84:	stp	x19, x20, [sp, #16]
  410c88:	str	x0, [sp, #40]
  410c8c:	str	x1, [sp, #32]
  410c90:	ldr	x19, [sp, #40]
  410c94:	ldr	x0, [sp, #40]
  410c98:	bl	4066f0 <strlen@plt>
  410c9c:	sub	x0, x0, #0x1
  410ca0:	add	x0, x19, x0
  410ca4:	str	x0, [sp, #48]
  410ca8:	ldr	x0, [sp, #40]
  410cac:	str	x0, [sp, #56]
  410cb0:	add	x1, sp, #0x30
  410cb4:	add	x0, sp, #0x28
  410cb8:	bl	410ba8 <strip_whitespace@@Base>
  410cbc:	b	410ce0 <strip_whitespace@@Base+0x138>
  410cc0:	ldr	x0, [sp, #40]
  410cc4:	ldrb	w0, [x0]
  410cc8:	sub	w0, w0, #0x30
  410ccc:	cmp	w0, #0x9
  410cd0:	b.hi	410cf4 <strip_whitespace@@Base+0x14c>  // b.pmore
  410cd4:	ldr	x0, [sp, #40]
  410cd8:	add	x0, x0, #0x1
  410cdc:	str	x0, [sp, #40]
  410ce0:	ldr	x1, [sp, #40]
  410ce4:	ldr	x0, [sp, #48]
  410ce8:	cmp	x1, x0
  410cec:	b.ls	410cc0 <strip_whitespace@@Base+0x118>  // b.plast
  410cf0:	b	410cf8 <strip_whitespace@@Base+0x150>
  410cf4:	nop
  410cf8:	ldr	x1, [sp, #40]
  410cfc:	ldr	x0, [sp, #48]
  410d00:	cmp	x1, x0
  410d04:	b.ls	410d1c <strip_whitespace@@Base+0x174>  // b.plast
  410d08:	ldr	x1, [sp, #48]
  410d0c:	ldr	x0, [sp, #56]
  410d10:	sub	x0, x1, x0
  410d14:	cmp	x0, #0x0
  410d18:	b.ge	410d5c <strip_whitespace@@Base+0x1b4>  // b.tcont
  410d1c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  410d20:	add	x0, x0, #0xcd8
  410d24:	ldr	x0, [x0]
  410d28:	ldr	x19, [x0]
  410d2c:	ldr	x0, [sp, #32]
  410d30:	bl	4066f0 <strlen@plt>
  410d34:	mov	x20, x0
  410d38:	ldr	x0, [sp, #56]
  410d3c:	bl	4066f0 <strlen@plt>
  410d40:	add	x1, x20, x0
  410d44:	ldr	x4, [sp, #56]
  410d48:	ldr	x3, [sp, #32]
  410d4c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410d50:	add	x2, x0, #0xa78
  410d54:	mov	x0, x19
  410d58:	bl	424098 <fatal@@Base>
  410d5c:	nop
  410d60:	ldp	x19, x20, [sp, #16]
  410d64:	ldp	x29, x30, [sp], #64
  410d68:	ret
  410d6c:	stp	x29, x30, [sp, #-96]!
  410d70:	mov	x29, sp
  410d74:	str	x19, [sp, #16]
  410d78:	str	x0, [sp, #56]
  410d7c:	str	x1, [sp, #48]
  410d80:	str	x2, [sp, #40]
  410d84:	ldr	x0, [sp, #48]
  410d88:	ldr	x19, [x0]
  410d8c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410d90:	add	x0, x0, #0xa88
  410d94:	bl	406e40 <gettext@plt>
  410d98:	mov	x1, x0
  410d9c:	mov	x0, x19
  410da0:	bl	410c7c <strip_whitespace@@Base+0xd4>
  410da4:	ldr	x0, [sp, #48]
  410da8:	ldr	x0, [x0]
  410dac:	bl	4068f0 <atoi@plt>
  410db0:	str	w0, [sp, #92]
  410db4:	ldr	w0, [sp, #92]
  410db8:	cmp	w0, #0x0
  410dbc:	b.ne	410dec <strip_whitespace@@Base+0x244>  // b.any
  410dc0:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  410dc4:	add	x0, x0, #0xcd8
  410dc8:	ldr	x0, [x0]
  410dcc:	ldr	x19, [x0]
  410dd0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410dd4:	add	x0, x0, #0xab8
  410dd8:	bl	406e40 <gettext@plt>
  410ddc:	mov	x2, x0
  410de0:	mov	x1, #0x0                   	// #0
  410de4:	mov	x0, x19
  410de8:	bl	424098 <fatal@@Base>
  410dec:	ldr	x0, [sp, #48]
  410df0:	ldr	x0, [x0, #8]
  410df4:	str	x0, [sp, #72]
  410df8:	b	410e14 <strip_whitespace@@Base+0x26c>
  410dfc:	ldr	w0, [sp, #92]
  410e00:	sub	w0, w0, #0x1
  410e04:	str	w0, [sp, #92]
  410e08:	ldr	w0, [sp, #92]
  410e0c:	cmp	w0, #0x0
  410e10:	b.eq	410e34 <strip_whitespace@@Base+0x28c>  // b.none
  410e14:	add	x0, sp, #0x48
  410e18:	mov	x1, #0x0                   	// #0
  410e1c:	bl	4228ec <find_next_token@@Base>
  410e20:	str	x0, [sp, #80]
  410e24:	ldr	x0, [sp, #80]
  410e28:	cmp	x0, #0x0
  410e2c:	b.ne	410dfc <strip_whitespace@@Base+0x254>  // b.any
  410e30:	b	410e38 <strip_whitespace@@Base+0x290>
  410e34:	nop
  410e38:	ldr	w0, [sp, #92]
  410e3c:	cmp	w0, #0x0
  410e40:	b.ne	410e64 <strip_whitespace@@Base+0x2bc>  // b.any
  410e44:	ldr	x1, [sp, #72]
  410e48:	ldr	x0, [sp, #80]
  410e4c:	sub	x0, x1, x0
  410e50:	mov	x2, x0
  410e54:	ldr	x1, [sp, #80]
  410e58:	ldr	x0, [sp, #56]
  410e5c:	bl	40b388 <variable_buffer_output@@Base>
  410e60:	str	x0, [sp, #56]
  410e64:	ldr	x0, [sp, #56]
  410e68:	ldr	x19, [sp, #16]
  410e6c:	ldp	x29, x30, [sp], #96
  410e70:	ret
  410e74:	stp	x29, x30, [sp, #-96]!
  410e78:	mov	x29, sp
  410e7c:	str	x19, [sp, #16]
  410e80:	str	x0, [sp, #56]
  410e84:	str	x1, [sp, #48]
  410e88:	str	x2, [sp, #40]
  410e8c:	ldr	x0, [sp, #48]
  410e90:	ldr	x19, [x0]
  410e94:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410e98:	add	x0, x0, #0xaf8
  410e9c:	bl	406e40 <gettext@plt>
  410ea0:	mov	x1, x0
  410ea4:	mov	x0, x19
  410ea8:	bl	410c7c <strip_whitespace@@Base+0xd4>
  410eac:	ldr	x0, [sp, #48]
  410eb0:	add	x0, x0, #0x8
  410eb4:	ldr	x19, [x0]
  410eb8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410ebc:	add	x0, x0, #0xb30
  410ec0:	bl	406e40 <gettext@plt>
  410ec4:	mov	x1, x0
  410ec8:	mov	x0, x19
  410ecc:	bl	410c7c <strip_whitespace@@Base+0xd4>
  410ed0:	ldr	x0, [sp, #48]
  410ed4:	ldr	x0, [x0]
  410ed8:	bl	4068f0 <atoi@plt>
  410edc:	str	w0, [sp, #92]
  410ee0:	ldr	w0, [sp, #92]
  410ee4:	cmp	w0, #0x0
  410ee8:	b.gt	410f14 <strip_whitespace@@Base+0x36c>
  410eec:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  410ef0:	add	x0, x0, #0xcd8
  410ef4:	ldr	x0, [x0]
  410ef8:	ldr	x4, [x0]
  410efc:	ldr	w3, [sp, #92]
  410f00:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  410f04:	add	x2, x0, #0xb68
  410f08:	mov	x1, #0x14                  	// #20
  410f0c:	mov	x0, x4
  410f10:	bl	424098 <fatal@@Base>
  410f14:	ldr	x0, [sp, #48]
  410f18:	add	x0, x0, #0x8
  410f1c:	ldr	x0, [x0]
  410f20:	bl	4068f0 <atoi@plt>
  410f24:	mov	w1, w0
  410f28:	ldr	w0, [sp, #92]
  410f2c:	sub	w0, w1, w0
  410f30:	add	w0, w0, #0x1
  410f34:	str	w0, [sp, #88]
  410f38:	ldr	w0, [sp, #88]
  410f3c:	cmp	w0, #0x0
  410f40:	b.le	410fe0 <strip_whitespace@@Base+0x438>
  410f44:	ldr	x0, [sp, #48]
  410f48:	ldr	x0, [x0, #16]
  410f4c:	str	x0, [sp, #72]
  410f50:	nop
  410f54:	add	x0, sp, #0x48
  410f58:	mov	x1, #0x0                   	// #0
  410f5c:	bl	4228ec <find_next_token@@Base>
  410f60:	str	x0, [sp, #80]
  410f64:	ldr	x0, [sp, #80]
  410f68:	cmp	x0, #0x0
  410f6c:	b.eq	410f88 <strip_whitespace@@Base+0x3e0>  // b.none
  410f70:	ldr	w0, [sp, #92]
  410f74:	sub	w0, w0, #0x1
  410f78:	str	w0, [sp, #92]
  410f7c:	ldr	w0, [sp, #92]
  410f80:	cmp	w0, #0x0
  410f84:	b.ne	410f54 <strip_whitespace@@Base+0x3ac>  // b.any
  410f88:	ldr	x0, [sp, #80]
  410f8c:	cmp	x0, #0x0
  410f90:	b.eq	410fe0 <strip_whitespace@@Base+0x438>  // b.none
  410f94:	ldr	w0, [sp, #88]
  410f98:	sub	w0, w0, #0x1
  410f9c:	str	w0, [sp, #88]
  410fa0:	ldr	w0, [sp, #88]
  410fa4:	cmp	w0, #0x0
  410fa8:	b.eq	410fc0 <strip_whitespace@@Base+0x418>  // b.none
  410fac:	add	x0, sp, #0x48
  410fb0:	mov	x1, #0x0                   	// #0
  410fb4:	bl	4228ec <find_next_token@@Base>
  410fb8:	cmp	x0, #0x0
  410fbc:	b.ne	410f94 <strip_whitespace@@Base+0x3ec>  // b.any
  410fc0:	ldr	x1, [sp, #72]
  410fc4:	ldr	x0, [sp, #80]
  410fc8:	sub	x0, x1, x0
  410fcc:	mov	x2, x0
  410fd0:	ldr	x1, [sp, #80]
  410fd4:	ldr	x0, [sp, #56]
  410fd8:	bl	40b388 <variable_buffer_output@@Base>
  410fdc:	str	x0, [sp, #56]
  410fe0:	ldr	x0, [sp, #56]
  410fe4:	ldr	x19, [sp, #16]
  410fe8:	ldp	x29, x30, [sp], #96
  410fec:	ret
  410ff0:	stp	x29, x30, [sp, #-64]!
  410ff4:	mov	x29, sp
  410ff8:	str	x19, [sp, #16]
  410ffc:	str	x0, [sp, #56]
  411000:	str	x1, [sp, #48]
  411004:	str	x2, [sp, #40]
  411008:	ldr	x0, [sp, #48]
  41100c:	add	x0, x0, #0x8
  411010:	ldr	x2, [x0]
  411014:	ldr	x0, [sp, #48]
  411018:	ldr	x0, [x0]
  41101c:	mov	x1, x0
  411020:	mov	x0, x2
  411024:	bl	406d30 <strstr@plt>
  411028:	cmp	x0, #0x0
  41102c:	b.eq	411058 <strip_whitespace@@Base+0x4b0>  // b.none
  411030:	ldr	x0, [sp, #48]
  411034:	ldr	x19, [x0]
  411038:	ldr	x0, [sp, #48]
  41103c:	ldr	x0, [x0]
  411040:	bl	4066f0 <strlen@plt>
  411044:	mov	x2, x0
  411048:	mov	x1, x19
  41104c:	ldr	x0, [sp, #56]
  411050:	bl	40b388 <variable_buffer_output@@Base>
  411054:	str	x0, [sp, #56]
  411058:	ldr	x0, [sp, #56]
  41105c:	ldr	x19, [sp, #16]
  411060:	ldp	x29, x30, [sp], #64
  411064:	ret
  411068:	stp	x29, x30, [sp, #-128]!
  41106c:	mov	x29, sp
  411070:	str	x0, [sp, #40]
  411074:	str	x1, [sp, #32]
  411078:	str	x2, [sp, #24]
  41107c:	ldr	x0, [sp, #32]
  411080:	ldr	x0, [x0]
  411084:	mov	x1, #0x0                   	// #0
  411088:	bl	40bf5c <expand_argument@@Base>
  41108c:	str	x0, [sp, #112]
  411090:	ldr	x0, [sp, #32]
  411094:	add	x0, x0, #0x8
  411098:	ldr	x0, [x0]
  41109c:	mov	x1, #0x0                   	// #0
  4110a0:	bl	40bf5c <expand_argument@@Base>
  4110a4:	str	x0, [sp, #104]
  4110a8:	ldr	x0, [sp, #32]
  4110ac:	ldr	x0, [x0, #16]
  4110b0:	str	x0, [sp, #96]
  4110b4:	str	wzr, [sp, #124]
  4110b8:	ldr	x0, [sp, #104]
  4110bc:	str	x0, [sp, #56]
  4110c0:	ldr	x0, [sp, #112]
  4110c4:	bl	4228a0 <next_token@@Base>
  4110c8:	str	x0, [sp, #88]
  4110cc:	ldr	x0, [sp, #88]
  4110d0:	bl	422854 <end_of_token@@Base>
  4110d4:	strb	wzr, [x0]
  4110d8:	bl	43249c <push_new_variable_scope@@Base>
  4110dc:	ldr	x0, [sp, #88]
  4110e0:	bl	4066f0 <strlen@plt>
  4110e4:	mov	x1, x0
  4110e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4110ec:	add	x0, x0, #0x3b8
  4110f0:	ldr	x0, [x0]
  4110f4:	ldr	x0, [x0, #8]
  4110f8:	mov	x6, #0x0                   	// #0
  4110fc:	mov	x5, x0
  411100:	mov	w4, #0x0                   	// #0
  411104:	mov	w3, #0x6                   	// #6
  411108:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41110c:	add	x2, x0, #0xba0
  411110:	ldr	x0, [sp, #88]
  411114:	bl	4316d8 <define_variable_in_set@@Base>
  411118:	str	x0, [sp, #80]
  41111c:	b	4111a0 <strip_whitespace@@Base+0x5f8>
  411120:	str	xzr, [sp, #64]
  411124:	ldr	x0, [sp, #80]
  411128:	ldr	x0, [x0, #8]
  41112c:	bl	406c00 <free@plt>
  411130:	ldr	x0, [sp, #48]
  411134:	mov	x1, x0
  411138:	ldr	x0, [sp, #72]
  41113c:	bl	4227bc <xstrndup@@Base>
  411140:	mov	x1, x0
  411144:	ldr	x0, [sp, #80]
  411148:	str	x1, [x0, #8]
  41114c:	mov	x1, #0x0                   	// #0
  411150:	ldr	x0, [sp, #96]
  411154:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  411158:	str	x0, [sp, #64]
  41115c:	ldr	x0, [sp, #64]
  411160:	bl	4066f0 <strlen@plt>
  411164:	mov	x2, x0
  411168:	ldr	x1, [sp, #64]
  41116c:	ldr	x0, [sp, #40]
  411170:	bl	40b388 <variable_buffer_output@@Base>
  411174:	str	x0, [sp, #40]
  411178:	mov	x2, #0x1                   	// #1
  41117c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411180:	add	x1, x0, #0x9d0
  411184:	ldr	x0, [sp, #40]
  411188:	bl	40b388 <variable_buffer_output@@Base>
  41118c:	str	x0, [sp, #40]
  411190:	mov	w0, #0x1                   	// #1
  411194:	str	w0, [sp, #124]
  411198:	ldr	x0, [sp, #64]
  41119c:	bl	406c00 <free@plt>
  4111a0:	add	x1, sp, #0x30
  4111a4:	add	x0, sp, #0x38
  4111a8:	bl	4228ec <find_next_token@@Base>
  4111ac:	str	x0, [sp, #72]
  4111b0:	ldr	x0, [sp, #72]
  4111b4:	cmp	x0, #0x0
  4111b8:	b.ne	411120 <strip_whitespace@@Base+0x578>  // b.any
  4111bc:	ldr	w0, [sp, #124]
  4111c0:	cmp	w0, #0x0
  4111c4:	b.eq	4111d4 <strip_whitespace@@Base+0x62c>  // b.none
  4111c8:	ldr	x0, [sp, #40]
  4111cc:	sub	x0, x0, #0x1
  4111d0:	str	x0, [sp, #40]
  4111d4:	bl	432574 <pop_variable_scope@@Base>
  4111d8:	ldr	x0, [sp, #112]
  4111dc:	bl	406c00 <free@plt>
  4111e0:	ldr	x0, [sp, #104]
  4111e4:	bl	406c00 <free@plt>
  4111e8:	ldr	x0, [sp, #40]
  4111ec:	ldp	x29, x30, [sp], #128
  4111f0:	ret
  4111f4:	stp	x29, x30, [sp, #-48]!
  4111f8:	mov	x29, sp
  4111fc:	str	x0, [sp, #24]
  411200:	str	xzr, [sp, #40]
  411204:	ldr	x0, [sp, #24]
  411208:	ldr	x0, [x0, #16]
  41120c:	str	x0, [sp, #32]
  411210:	ldr	x0, [sp, #32]
  411214:	bl	415104 <jhash_string@@Base>
  411218:	mov	w0, w0
  41121c:	ldr	x1, [sp, #40]
  411220:	add	x0, x1, x0
  411224:	str	x0, [sp, #40]
  411228:	ldr	x0, [sp, #40]
  41122c:	ldp	x29, x30, [sp], #48
  411230:	ret
  411234:	sub	sp, sp, #0x20
  411238:	str	x0, [sp, #8]
  41123c:	str	xzr, [sp, #24]
  411240:	ldr	x0, [sp, #24]
  411244:	add	sp, sp, #0x20
  411248:	ret
  41124c:	stp	x29, x30, [sp, #-48]!
  411250:	mov	x29, sp
  411254:	str	x0, [sp, #24]
  411258:	str	x1, [sp, #16]
  41125c:	ldr	x0, [sp, #24]
  411260:	ldr	x0, [x0, #24]
  411264:	mov	w1, w0
  411268:	ldr	x0, [sp, #16]
  41126c:	ldr	x0, [x0, #24]
  411270:	sub	w0, w1, w0
  411274:	str	w0, [sp, #44]
  411278:	ldr	w0, [sp, #44]
  41127c:	cmp	w0, #0x0
  411280:	b.eq	41128c <strip_whitespace@@Base+0x6e4>  // b.none
  411284:	ldr	w0, [sp, #44]
  411288:	b	4112c8 <strip_whitespace@@Base+0x720>
  41128c:	ldr	x0, [sp, #24]
  411290:	ldr	x1, [x0, #16]
  411294:	ldr	x0, [sp, #16]
  411298:	ldr	x0, [x0, #16]
  41129c:	cmp	x1, x0
  4112a0:	b.eq	4112c4 <strip_whitespace@@Base+0x71c>  // b.none
  4112a4:	ldr	x0, [sp, #24]
  4112a8:	ldr	x2, [x0, #16]
  4112ac:	ldr	x0, [sp, #16]
  4112b0:	ldr	x0, [x0, #16]
  4112b4:	mov	x1, x0
  4112b8:	mov	x0, x2
  4112bc:	bl	406bc0 <strcmp@plt>
  4112c0:	b	4112c8 <strip_whitespace@@Base+0x720>
  4112c4:	mov	w0, #0x0                   	// #0
  4112c8:	ldp	x29, x30, [sp], #48
  4112cc:	ret
  4112d0:	stp	x29, x30, [sp, #-320]!
  4112d4:	mov	x29, sp
  4112d8:	str	x19, [sp, #16]
  4112dc:	str	x0, [x29, #56]
  4112e0:	str	x1, [x29, #48]
  4112e4:	str	x2, [x29, #40]
  4112e8:	ldr	x0, [x29, #40]
  4112ec:	add	x0, x0, #0x6
  4112f0:	ldrb	w0, [x0]
  4112f4:	cmp	w0, #0x0
  4112f8:	cset	w0, eq  // eq = none
  4112fc:	and	w0, w0, #0xff
  411300:	str	w0, [x29, #272]
  411304:	ldr	x0, [x29, #48]
  411308:	ldr	x0, [x0]
  41130c:	str	x0, [x29, #120]
  411310:	ldr	x0, [x29, #48]
  411314:	ldr	x0, [x0, #8]
  411318:	str	x0, [x29, #112]
  41131c:	str	wzr, [x29, #284]
  411320:	str	wzr, [x29, #280]
  411324:	str	wzr, [x29, #268]
  411328:	add	x0, x29, #0xd8
  41132c:	str	x0, [x29, #296]
  411330:	b	4113e0 <strip_whitespace@@Base+0x838>
  411334:	sub	sp, sp, #0x20
  411338:	mov	x0, sp
  41133c:	add	x0, x0, #0xf
  411340:	lsr	x0, x0, #4
  411344:	lsl	x0, x0, #4
  411348:	str	x0, [x29, #232]
  41134c:	ldr	x0, [x29, #296]
  411350:	ldr	x1, [x29, #232]
  411354:	str	x1, [x0]
  411358:	ldr	x0, [x29, #232]
  41135c:	str	x0, [x29, #296]
  411360:	ldr	x0, [x29, #120]
  411364:	ldrb	w0, [x0]
  411368:	cmp	w0, #0x0
  41136c:	b.eq	41137c <strip_whitespace@@Base+0x7d4>  // b.none
  411370:	ldr	x0, [x29, #120]
  411374:	add	x0, x0, #0x1
  411378:	str	x0, [x29, #120]
  41137c:	ldr	x0, [x29, #232]
  411380:	ldr	x1, [x29, #256]
  411384:	str	x1, [x0, #8]
  411388:	ldr	x0, [x29, #104]
  41138c:	ldr	x1, [x29, #256]
  411390:	add	x0, x1, x0
  411394:	strb	wzr, [x0]
  411398:	ldr	x0, [x29, #256]
  41139c:	bl	4294d0 <find_percent@@Base>
  4113a0:	mov	x1, x0
  4113a4:	ldr	x0, [x29, #232]
  4113a8:	str	x1, [x0, #16]
  4113ac:	ldr	x0, [x29, #232]
  4113b0:	ldr	x0, [x0, #16]
  4113b4:	cmp	x0, #0x0
  4113b8:	b.ne	4113c8 <strip_whitespace@@Base+0x820>  // b.any
  4113bc:	ldr	w0, [x29, #284]
  4113c0:	add	w0, w0, #0x1
  4113c4:	str	w0, [x29, #284]
  4113c8:	ldr	x0, [x29, #232]
  4113cc:	ldr	x0, [x0, #8]
  4113d0:	bl	4066f0 <strlen@plt>
  4113d4:	mov	x1, x0
  4113d8:	ldr	x0, [x29, #232]
  4113dc:	str	x1, [x0, #24]
  4113e0:	add	x1, x29, #0x68
  4113e4:	add	x0, x29, #0x78
  4113e8:	bl	4228ec <find_next_token@@Base>
  4113ec:	str	x0, [x29, #256]
  4113f0:	ldr	x0, [x29, #256]
  4113f4:	cmp	x0, #0x0
  4113f8:	b.ne	411334 <strip_whitespace@@Base+0x78c>  // b.any
  4113fc:	ldr	x0, [x29, #296]
  411400:	str	xzr, [x0]
  411404:	add	x0, x29, #0xe0
  411408:	str	x0, [x29, #312]
  41140c:	b	41149c <strip_whitespace@@Base+0x8f4>
  411410:	sub	sp, sp, #0x30
  411414:	mov	x0, sp
  411418:	add	x0, x0, #0xf
  41141c:	lsr	x0, x0, #4
  411420:	lsl	x0, x0, #4
  411424:	str	x0, [x29, #240]
  411428:	ldr	x0, [x29, #312]
  41142c:	ldr	x1, [x29, #240]
  411430:	str	x1, [x0]
  411434:	ldr	x0, [x29, #240]
  411438:	str	x0, [x29, #312]
  41143c:	ldr	x0, [x29, #112]
  411440:	ldrb	w0, [x0]
  411444:	cmp	w0, #0x0
  411448:	b.eq	411458 <strip_whitespace@@Base+0x8b0>  // b.none
  41144c:	ldr	x0, [x29, #112]
  411450:	add	x0, x0, #0x1
  411454:	str	x0, [x29, #112]
  411458:	ldr	x0, [x29, #104]
  41145c:	ldr	x1, [x29, #256]
  411460:	add	x0, x1, x0
  411464:	strb	wzr, [x0]
  411468:	ldr	x0, [x29, #240]
  41146c:	ldr	x1, [x29, #256]
  411470:	str	x1, [x0, #16]
  411474:	ldr	x1, [x29, #104]
  411478:	ldr	x0, [x29, #240]
  41147c:	str	x1, [x0, #24]
  411480:	ldr	x0, [x29, #240]
  411484:	str	wzr, [x0, #32]
  411488:	ldr	x0, [x29, #240]
  41148c:	str	xzr, [x0, #8]
  411490:	ldr	w0, [x29, #280]
  411494:	add	w0, w0, #0x1
  411498:	str	w0, [x29, #280]
  41149c:	add	x1, x29, #0x68
  4114a0:	add	x0, x29, #0x70
  4114a4:	bl	4228ec <find_next_token@@Base>
  4114a8:	str	x0, [x29, #256]
  4114ac:	ldr	x0, [x29, #256]
  4114b0:	cmp	x0, #0x0
  4114b4:	b.ne	411410 <strip_whitespace@@Base+0x868>  // b.any
  4114b8:	ldr	x0, [x29, #312]
  4114bc:	str	xzr, [x0]
  4114c0:	ldr	w0, [x29, #284]
  4114c4:	cmp	w0, #0x1
  4114c8:	b.le	4114e8 <strip_whitespace@@Base+0x940>
  4114cc:	ldr	w1, [x29, #284]
  4114d0:	ldr	w0, [x29, #280]
  4114d4:	mul	w0, w1, w0
  4114d8:	cmp	w0, #0x9
  4114dc:	b.le	4114e8 <strip_whitespace@@Base+0x940>
  4114e0:	mov	w0, #0x1                   	// #1
  4114e4:	b	4114ec <strip_whitespace@@Base+0x944>
  4114e8:	mov	w0, #0x0                   	// #0
  4114ec:	str	w0, [x29, #268]
  4114f0:	ldr	w0, [x29, #268]
  4114f4:	cmp	w0, #0x0
  4114f8:	b.eq	411570 <strip_whitespace@@Base+0x9c8>  // b.none
  4114fc:	ldrsw	x1, [x29, #280]
  411500:	add	x5, x29, #0x80
  411504:	adrp	x0, 411000 <strip_whitespace@@Base+0x458>
  411508:	add	x4, x0, #0x24c
  41150c:	adrp	x0, 411000 <strip_whitespace@@Base+0x458>
  411510:	add	x3, x0, #0x234
  411514:	adrp	x0, 411000 <strip_whitespace@@Base+0x458>
  411518:	add	x2, x0, #0x1f4
  41151c:	mov	x0, x5
  411520:	bl	4140a8 <hash_init@@Base>
  411524:	ldr	x0, [x29, #224]
  411528:	str	x0, [x29, #304]
  41152c:	b	411564 <strip_whitespace@@Base+0x9bc>
  411530:	add	x0, x29, #0x80
  411534:	ldr	x1, [x29, #304]
  411538:	bl	4143fc <hash_insert@@Base>
  41153c:	str	x0, [x29, #248]
  411540:	ldr	x0, [x29, #248]
  411544:	cmp	x0, #0x0
  411548:	b.eq	411558 <strip_whitespace@@Base+0x9b0>  // b.none
  41154c:	ldr	x0, [x29, #304]
  411550:	ldr	x1, [x29, #248]
  411554:	str	x1, [x0, #8]
  411558:	ldr	x0, [x29, #304]
  41155c:	ldr	x0, [x0]
  411560:	str	x0, [x29, #304]
  411564:	ldr	x0, [x29, #304]
  411568:	cmp	x0, #0x0
  41156c:	b.ne	411530 <strip_whitespace@@Base+0x988>  // b.any
  411570:	ldr	w0, [x29, #280]
  411574:	cmp	w0, #0x0
  411578:	b.eq	4117cc <strip_whitespace@@Base+0xc24>  // b.none
  41157c:	str	wzr, [x29, #276]
  411580:	ldr	x0, [x29, #216]
  411584:	str	x0, [x29, #288]
  411588:	b	4116fc <strip_whitespace@@Base+0xb54>
  41158c:	ldr	x0, [x29, #288]
  411590:	ldr	x0, [x0, #16]
  411594:	cmp	x0, #0x0
  411598:	b.eq	411600 <strip_whitespace@@Base+0xa58>  // b.none
  41159c:	ldr	x0, [x29, #224]
  4115a0:	str	x0, [x29, #304]
  4115a4:	b	4115f0 <strip_whitespace@@Base+0xa48>
  4115a8:	ldr	x0, [x29, #288]
  4115ac:	ldr	x3, [x0, #8]
  4115b0:	ldr	x0, [x29, #288]
  4115b4:	ldr	x1, [x0, #16]
  4115b8:	ldr	x0, [x29, #304]
  4115bc:	ldr	x0, [x0, #16]
  4115c0:	mov	x2, x0
  4115c4:	mov	x0, x3
  4115c8:	bl	40fc50 <pattern_matches@@Base>
  4115cc:	mov	w1, w0
  4115d0:	ldr	x0, [x29, #304]
  4115d4:	ldr	w0, [x0, #32]
  4115d8:	orr	w1, w1, w0
  4115dc:	ldr	x0, [x29, #304]
  4115e0:	str	w1, [x0, #32]
  4115e4:	ldr	x0, [x29, #304]
  4115e8:	ldr	x0, [x0]
  4115ec:	str	x0, [x29, #304]
  4115f0:	ldr	x0, [x29, #304]
  4115f4:	cmp	x0, #0x0
  4115f8:	b.ne	4115a8 <strip_whitespace@@Base+0xa00>  // b.any
  4115fc:	b	4116f0 <strip_whitespace@@Base+0xb48>
  411600:	ldr	w0, [x29, #268]
  411604:	cmp	w0, #0x0
  411608:	b.eq	411668 <strip_whitespace@@Base+0xac0>  // b.none
  41160c:	ldr	x0, [x29, #288]
  411610:	ldr	x0, [x0, #8]
  411614:	str	x0, [x29, #80]
  411618:	ldr	x0, [x29, #288]
  41161c:	ldr	x0, [x0, #24]
  411620:	str	x0, [x29, #88]
  411624:	add	x1, x29, #0x40
  411628:	add	x0, x29, #0x80
  41162c:	bl	414398 <hash_find_item@@Base>
  411630:	str	x0, [x29, #304]
  411634:	b	411658 <strip_whitespace@@Base+0xab0>
  411638:	ldr	x0, [x29, #304]
  41163c:	ldr	w0, [x0, #32]
  411640:	orr	w1, w0, #0x1
  411644:	ldr	x0, [x29, #304]
  411648:	str	w1, [x0, #32]
  41164c:	ldr	x0, [x29, #304]
  411650:	ldr	x0, [x0, #8]
  411654:	str	x0, [x29, #304]
  411658:	ldr	x0, [x29, #304]
  41165c:	cmp	x0, #0x0
  411660:	b.ne	411638 <strip_whitespace@@Base+0xa90>  // b.any
  411664:	b	4116f0 <strip_whitespace@@Base+0xb48>
  411668:	ldr	x0, [x29, #224]
  41166c:	str	x0, [x29, #304]
  411670:	b	4116e4 <strip_whitespace@@Base+0xb3c>
  411674:	ldr	x0, [x29, #304]
  411678:	ldr	w19, [x0, #32]
  41167c:	ldr	x0, [x29, #304]
  411680:	ldr	x1, [x0, #24]
  411684:	ldr	x0, [x29, #288]
  411688:	ldr	x0, [x0, #24]
  41168c:	cmp	x1, x0
  411690:	b.ne	4116c8 <strip_whitespace@@Base+0xb20>  // b.any
  411694:	ldr	x0, [x29, #288]
  411698:	ldr	x3, [x0, #8]
  41169c:	ldr	x0, [x29, #304]
  4116a0:	ldr	x1, [x0, #16]
  4116a4:	ldr	x0, [x29, #304]
  4116a8:	ldr	x0, [x0, #24]
  4116ac:	mov	x2, x0
  4116b0:	mov	x0, x3
  4116b4:	bl	406990 <strncmp@plt>
  4116b8:	cmp	w0, #0x0
  4116bc:	b.ne	4116c8 <strip_whitespace@@Base+0xb20>  // b.any
  4116c0:	mov	w0, #0x1                   	// #1
  4116c4:	b	4116cc <strip_whitespace@@Base+0xb24>
  4116c8:	mov	w0, #0x0                   	// #0
  4116cc:	orr	w1, w0, w19
  4116d0:	ldr	x0, [x29, #304]
  4116d4:	str	w1, [x0, #32]
  4116d8:	ldr	x0, [x29, #304]
  4116dc:	ldr	x0, [x0]
  4116e0:	str	x0, [x29, #304]
  4116e4:	ldr	x0, [x29, #304]
  4116e8:	cmp	x0, #0x0
  4116ec:	b.ne	411674 <strip_whitespace@@Base+0xacc>  // b.any
  4116f0:	ldr	x0, [x29, #288]
  4116f4:	ldr	x0, [x0]
  4116f8:	str	x0, [x29, #288]
  4116fc:	ldr	x0, [x29, #288]
  411700:	cmp	x0, #0x0
  411704:	b.ne	41158c <strip_whitespace@@Base+0x9e4>  // b.any
  411708:	ldr	x0, [x29, #224]
  41170c:	str	x0, [x29, #304]
  411710:	b	4117a8 <strip_whitespace@@Base+0xc00>
  411714:	ldr	w0, [x29, #272]
  411718:	cmp	w0, #0x0
  41171c:	b.eq	411738 <strip_whitespace@@Base+0xb90>  // b.none
  411720:	ldr	x0, [x29, #304]
  411724:	ldr	w0, [x0, #32]
  411728:	cmp	w0, #0x0
  41172c:	cset	w0, ne  // ne = any
  411730:	and	w0, w0, #0xff
  411734:	b	41174c <strip_whitespace@@Base+0xba4>
  411738:	ldr	x0, [x29, #304]
  41173c:	ldr	w0, [x0, #32]
  411740:	cmp	w0, #0x0
  411744:	cset	w0, eq  // eq = none
  411748:	and	w0, w0, #0xff
  41174c:	cmp	w0, #0x0
  411750:	b.eq	41179c <strip_whitespace@@Base+0xbf4>  // b.none
  411754:	ldr	x0, [x29, #304]
  411758:	ldr	x19, [x0, #16]
  41175c:	ldr	x0, [x29, #304]
  411760:	ldr	x0, [x0, #16]
  411764:	bl	4066f0 <strlen@plt>
  411768:	mov	x2, x0
  41176c:	mov	x1, x19
  411770:	ldr	x0, [x29, #56]
  411774:	bl	40b388 <variable_buffer_output@@Base>
  411778:	str	x0, [x29, #56]
  41177c:	mov	x2, #0x1                   	// #1
  411780:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411784:	add	x1, x0, #0x9d0
  411788:	ldr	x0, [x29, #56]
  41178c:	bl	40b388 <variable_buffer_output@@Base>
  411790:	str	x0, [x29, #56]
  411794:	mov	w0, #0x1                   	// #1
  411798:	str	w0, [x29, #276]
  41179c:	ldr	x0, [x29, #304]
  4117a0:	ldr	x0, [x0]
  4117a4:	str	x0, [x29, #304]
  4117a8:	ldr	x0, [x29, #304]
  4117ac:	cmp	x0, #0x0
  4117b0:	b.ne	411714 <strip_whitespace@@Base+0xb6c>  // b.any
  4117b4:	ldr	w0, [x29, #276]
  4117b8:	cmp	w0, #0x0
  4117bc:	b.eq	4117cc <strip_whitespace@@Base+0xc24>  // b.none
  4117c0:	ldr	x0, [x29, #56]
  4117c4:	sub	x0, x0, #0x1
  4117c8:	str	x0, [x29, #56]
  4117cc:	ldr	w0, [x29, #268]
  4117d0:	cmp	w0, #0x0
  4117d4:	b.eq	4117e4 <strip_whitespace@@Base+0xc3c>  // b.none
  4117d8:	add	x0, x29, #0x80
  4117dc:	mov	w1, #0x0                   	// #0
  4117e0:	bl	414734 <hash_free@@Base>
  4117e4:	ldr	x0, [x29, #56]
  4117e8:	mov	sp, x29
  4117ec:	ldr	x19, [sp, #16]
  4117f0:	ldp	x29, x30, [sp], #320
  4117f4:	ret
  4117f8:	stp	x29, x30, [sp, #-80]!
  4117fc:	mov	x29, sp
  411800:	str	x0, [sp, #40]
  411804:	str	x1, [sp, #32]
  411808:	str	x2, [sp, #24]
  41180c:	ldr	x0, [sp, #32]
  411810:	ldr	x0, [x0]
  411814:	str	x0, [sp, #72]
  411818:	str	wzr, [sp, #68]
  41181c:	b	411900 <strip_whitespace@@Base+0xd58>
  411820:	str	wzr, [sp, #64]
  411824:	b	411834 <strip_whitespace@@Base+0xc8c>
  411828:	ldr	x0, [sp, #72]
  41182c:	add	x0, x0, #0x1
  411830:	str	x0, [sp, #72]
  411834:	ldr	x0, [sp, #72]
  411838:	ldrb	w0, [x0]
  41183c:	mov	w1, w0
  411840:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  411844:	add	x0, x0, #0x728
  411848:	sxtw	x1, w1
  41184c:	ldrh	w0, [x0, x1, lsl #1]
  411850:	and	w0, w0, #0x6
  411854:	cmp	w0, #0x0
  411858:	b.ne	411828 <strip_whitespace@@Base+0xc80>  // b.any
  41185c:	ldr	x0, [sp, #72]
  411860:	str	x0, [sp, #56]
  411864:	str	wzr, [sp, #64]
  411868:	b	411884 <strip_whitespace@@Base+0xcdc>
  41186c:	ldr	x0, [sp, #72]
  411870:	add	x0, x0, #0x1
  411874:	str	x0, [sp, #72]
  411878:	ldr	w0, [sp, #64]
  41187c:	add	w0, w0, #0x1
  411880:	str	w0, [sp, #64]
  411884:	ldr	x0, [sp, #72]
  411888:	ldrb	w0, [x0]
  41188c:	cmp	w0, #0x0
  411890:	b.eq	4118bc <strip_whitespace@@Base+0xd14>  // b.none
  411894:	ldr	x0, [sp, #72]
  411898:	ldrb	w0, [x0]
  41189c:	mov	w1, w0
  4118a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4118a4:	add	x0, x0, #0x728
  4118a8:	sxtw	x1, w1
  4118ac:	ldrh	w0, [x0, x1, lsl #1]
  4118b0:	and	w0, w0, #0x6
  4118b4:	cmp	w0, #0x0
  4118b8:	b.eq	41186c <strip_whitespace@@Base+0xcc4>  // b.none
  4118bc:	ldr	w0, [sp, #64]
  4118c0:	cmp	w0, #0x0
  4118c4:	b.eq	411914 <strip_whitespace@@Base+0xd6c>  // b.none
  4118c8:	ldrsw	x0, [sp, #64]
  4118cc:	mov	x2, x0
  4118d0:	ldr	x1, [sp, #56]
  4118d4:	ldr	x0, [sp, #40]
  4118d8:	bl	40b388 <variable_buffer_output@@Base>
  4118dc:	str	x0, [sp, #40]
  4118e0:	mov	x2, #0x1                   	// #1
  4118e4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4118e8:	add	x1, x0, #0x9d0
  4118ec:	ldr	x0, [sp, #40]
  4118f0:	bl	40b388 <variable_buffer_output@@Base>
  4118f4:	str	x0, [sp, #40]
  4118f8:	mov	w0, #0x1                   	// #1
  4118fc:	str	w0, [sp, #68]
  411900:	ldr	x0, [sp, #72]
  411904:	ldrb	w0, [x0]
  411908:	cmp	w0, #0x0
  41190c:	b.ne	411820 <strip_whitespace@@Base+0xc78>  // b.any
  411910:	b	411918 <strip_whitespace@@Base+0xd70>
  411914:	nop
  411918:	ldr	w0, [sp, #68]
  41191c:	cmp	w0, #0x0
  411920:	b.eq	411930 <strip_whitespace@@Base+0xd88>  // b.none
  411924:	ldr	x0, [sp, #40]
  411928:	sub	x0, x0, #0x1
  41192c:	str	x0, [sp, #40]
  411930:	ldr	x0, [sp, #40]
  411934:	ldp	x29, x30, [sp], #80
  411938:	ret
  41193c:	stp	x29, x30, [sp, #-96]!
  411940:	mov	x29, sp
  411944:	str	x19, [sp, #16]
  411948:	str	x0, [x29, #56]
  41194c:	str	x1, [x29, #48]
  411950:	str	x2, [x29, #40]
  411954:	str	xzr, [x29, #72]
  411958:	ldr	x0, [x29, #48]
  41195c:	str	x0, [x29, #88]
  411960:	b	411990 <strip_whitespace@@Base+0xde8>
  411964:	ldr	x0, [x29, #88]
  411968:	ldr	x0, [x0]
  41196c:	bl	4066f0 <strlen@plt>
  411970:	mov	x1, x0
  411974:	ldr	x0, [x29, #72]
  411978:	add	x0, x1, x0
  41197c:	add	x0, x0, #0x2
  411980:	str	x0, [x29, #72]
  411984:	ldr	x0, [x29, #88]
  411988:	add	x0, x0, #0x8
  41198c:	str	x0, [x29, #88]
  411990:	ldr	x0, [x29, #88]
  411994:	ldr	x0, [x0]
  411998:	cmp	x0, #0x0
  41199c:	b.ne	411964 <strip_whitespace@@Base+0xdbc>  // b.any
  4119a0:	ldr	x0, [x29, #72]
  4119a4:	add	x0, x0, #0x1
  4119a8:	add	x0, x0, #0xf
  4119ac:	lsr	x0, x0, #4
  4119b0:	lsl	x0, x0, #4
  4119b4:	sub	sp, sp, x0
  4119b8:	mov	x0, sp
  4119bc:	add	x0, x0, #0xf
  4119c0:	lsr	x0, x0, #4
  4119c4:	lsl	x0, x0, #4
  4119c8:	str	x0, [x29, #64]
  4119cc:	ldr	x0, [x29, #64]
  4119d0:	str	x0, [x29, #80]
  4119d4:	ldr	x0, [x29, #64]
  4119d8:	strb	wzr, [x0]
  4119dc:	ldr	x0, [x29, #48]
  4119e0:	str	x0, [x29, #88]
  4119e4:	b	411a4c <strip_whitespace@@Base+0xea4>
  4119e8:	ldr	x0, [x29, #88]
  4119ec:	ldr	x0, [x0]
  4119f0:	mov	x1, x0
  4119f4:	ldr	x0, [x29, #80]
  4119f8:	bl	406ca0 <strcpy@plt>
  4119fc:	ldr	x0, [x29, #88]
  411a00:	ldr	x0, [x0]
  411a04:	bl	4066f0 <strlen@plt>
  411a08:	mov	x1, x0
  411a0c:	ldr	x0, [x29, #80]
  411a10:	add	x0, x0, x1
  411a14:	str	x0, [x29, #80]
  411a18:	ldr	x0, [x29, #80]
  411a1c:	add	x1, x0, #0x1
  411a20:	str	x1, [x29, #80]
  411a24:	mov	w1, #0x2c                  	// #44
  411a28:	strb	w1, [x0]
  411a2c:	ldr	x0, [x29, #80]
  411a30:	add	x1, x0, #0x1
  411a34:	str	x1, [x29, #80]
  411a38:	mov	w1, #0x20                  	// #32
  411a3c:	strb	w1, [x0]
  411a40:	ldr	x0, [x29, #88]
  411a44:	add	x0, x0, #0x8
  411a48:	str	x0, [x29, #88]
  411a4c:	ldr	x0, [x29, #88]
  411a50:	add	x0, x0, #0x8
  411a54:	ldr	x0, [x0]
  411a58:	cmp	x0, #0x0
  411a5c:	b.ne	4119e8 <strip_whitespace@@Base+0xe40>  // b.any
  411a60:	ldr	x0, [x29, #88]
  411a64:	ldr	x0, [x0]
  411a68:	mov	x1, x0
  411a6c:	ldr	x0, [x29, #80]
  411a70:	bl	406ca0 <strcpy@plt>
  411a74:	ldr	x0, [x29, #40]
  411a78:	ldrb	w0, [x0]
  411a7c:	cmp	w0, #0x77
  411a80:	b.eq	411acc <strip_whitespace@@Base+0xf24>  // b.none
  411a84:	cmp	w0, #0x77
  411a88:	b.gt	411b1c <strip_whitespace@@Base+0xf74>
  411a8c:	cmp	w0, #0x65
  411a90:	b.eq	411aa0 <strip_whitespace@@Base+0xef8>  // b.none
  411a94:	cmp	w0, #0x69
  411a98:	b.eq	411afc <strip_whitespace@@Base+0xf54>  // b.none
  411a9c:	b	411b1c <strip_whitespace@@Base+0xf74>
  411aa0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  411aa4:	add	x0, x0, #0x40
  411aa8:	ldr	x19, [x0]
  411aac:	ldr	x0, [x29, #64]
  411ab0:	bl	4066f0 <strlen@plt>
  411ab4:	mov	x1, x0
  411ab8:	ldr	x3, [x29, #64]
  411abc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411ac0:	add	x2, x0, #0xba8
  411ac4:	mov	x0, x19
  411ac8:	bl	424098 <fatal@@Base>
  411acc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  411ad0:	add	x0, x0, #0x40
  411ad4:	ldr	x19, [x0]
  411ad8:	ldr	x0, [x29, #64]
  411adc:	bl	4066f0 <strlen@plt>
  411ae0:	mov	x1, x0
  411ae4:	ldr	x3, [x29, #64]
  411ae8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411aec:	add	x2, x0, #0xba8
  411af0:	mov	x0, x19
  411af4:	bl	423e74 <error@@Base>
  411af8:	b	411b4c <strip_whitespace@@Base+0xfa4>
  411afc:	ldr	x1, [x29, #64]
  411b00:	mov	w0, #0x0                   	// #0
  411b04:	bl	423bc4 <outputs@@Base>
  411b08:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411b0c:	add	x1, x0, #0xbb0
  411b10:	mov	w0, #0x0                   	// #0
  411b14:	bl	423bc4 <outputs@@Base>
  411b18:	b	411b4c <strip_whitespace@@Base+0xfa4>
  411b1c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  411b20:	add	x0, x0, #0xcd8
  411b24:	ldr	x0, [x0]
  411b28:	ldr	x19, [x0]
  411b2c:	ldr	x0, [x29, #40]
  411b30:	bl	4066f0 <strlen@plt>
  411b34:	mov	x1, x0
  411b38:	ldr	x3, [x29, #40]
  411b3c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411b40:	add	x2, x0, #0xbb8
  411b44:	mov	x0, x19
  411b48:	bl	424098 <fatal@@Base>
  411b4c:	ldr	x0, [x29, #56]
  411b50:	mov	sp, x29
  411b54:	ldr	x19, [sp, #16]
  411b58:	ldp	x29, x30, [sp], #96
  411b5c:	ret
  411b60:	stp	x29, x30, [sp, #-96]!
  411b64:	mov	x29, sp
  411b68:	str	x0, [sp, #40]
  411b6c:	str	x1, [sp, #32]
  411b70:	str	x2, [sp, #24]
  411b74:	ldr	x0, [sp, #32]
  411b78:	ldr	x0, [x0]
  411b7c:	str	x0, [sp, #64]
  411b80:	str	wzr, [sp, #92]
  411b84:	b	411ba0 <strip_whitespace@@Base+0xff8>
  411b88:	ldr	x0, [sp, #64]
  411b8c:	add	x0, x0, #0x1
  411b90:	str	x0, [sp, #64]
  411b94:	ldr	w0, [sp, #92]
  411b98:	add	w0, w0, #0x1
  411b9c:	str	w0, [sp, #92]
  411ba0:	add	x0, sp, #0x40
  411ba4:	mov	x1, #0x0                   	// #0
  411ba8:	bl	4228ec <find_next_token@@Base>
  411bac:	str	x0, [sp, #80]
  411bb0:	ldr	x0, [sp, #80]
  411bb4:	cmp	x0, #0x0
  411bb8:	b.ne	411b88 <strip_whitespace@@Base+0xfe0>  // b.any
  411bbc:	ldr	w0, [sp, #92]
  411bc0:	cmp	w0, #0x0
  411bc4:	b.eq	411bd4 <strip_whitespace@@Base+0x102c>  // b.none
  411bc8:	ldrsw	x0, [sp, #92]
  411bcc:	lsl	x0, x0, #3
  411bd0:	b	411bd8 <strip_whitespace@@Base+0x1030>
  411bd4:	mov	x0, #0x8                   	// #8
  411bd8:	bl	42268c <xmalloc@@Base>
  411bdc:	str	x0, [sp, #72]
  411be0:	ldr	x0, [sp, #32]
  411be4:	ldr	x0, [x0]
  411be8:	str	x0, [sp, #64]
  411bec:	str	wzr, [sp, #92]
  411bf0:	b	411c34 <strip_whitespace@@Base+0x108c>
  411bf4:	ldr	x0, [sp, #64]
  411bf8:	add	x0, x0, #0x1
  411bfc:	str	x0, [sp, #64]
  411c00:	ldr	x0, [sp, #56]
  411c04:	ldr	x1, [sp, #80]
  411c08:	add	x0, x1, x0
  411c0c:	strb	wzr, [x0]
  411c10:	ldr	w0, [sp, #92]
  411c14:	add	w1, w0, #0x1
  411c18:	str	w1, [sp, #92]
  411c1c:	sxtw	x0, w0
  411c20:	lsl	x0, x0, #3
  411c24:	ldr	x1, [sp, #72]
  411c28:	add	x0, x1, x0
  411c2c:	ldr	x1, [sp, #80]
  411c30:	str	x1, [x0]
  411c34:	add	x1, sp, #0x38
  411c38:	add	x0, sp, #0x40
  411c3c:	bl	4228ec <find_next_token@@Base>
  411c40:	str	x0, [sp, #80]
  411c44:	ldr	x0, [sp, #80]
  411c48:	cmp	x0, #0x0
  411c4c:	b.ne	411bf4 <strip_whitespace@@Base+0x104c>  // b.any
  411c50:	ldr	w0, [sp, #92]
  411c54:	cmp	w0, #0x0
  411c58:	b.eq	411d84 <strip_whitespace@@Base+0x11dc>  // b.none
  411c5c:	ldrsw	x1, [sp, #92]
  411c60:	adrp	x0, 422000 <die@@Base+0x44>
  411c64:	add	x3, x0, #0x110
  411c68:	mov	x2, #0x8                   	// #8
  411c6c:	ldr	x0, [sp, #72]
  411c70:	bl	406810 <qsort@plt>
  411c74:	str	wzr, [sp, #88]
  411c78:	b	411d68 <strip_whitespace@@Base+0x11c0>
  411c7c:	ldrsw	x0, [sp, #88]
  411c80:	lsl	x0, x0, #3
  411c84:	ldr	x1, [sp, #72]
  411c88:	add	x0, x1, x0
  411c8c:	ldr	x0, [x0]
  411c90:	bl	4066f0 <strlen@plt>
  411c94:	str	x0, [sp, #56]
  411c98:	ldr	w0, [sp, #92]
  411c9c:	sub	w0, w0, #0x1
  411ca0:	ldr	w1, [sp, #88]
  411ca4:	cmp	w1, w0
  411ca8:	b.eq	411d18 <strip_whitespace@@Base+0x1170>  // b.none
  411cac:	ldrsw	x0, [sp, #88]
  411cb0:	add	x0, x0, #0x1
  411cb4:	lsl	x0, x0, #3
  411cb8:	ldr	x1, [sp, #72]
  411cbc:	add	x0, x1, x0
  411cc0:	ldr	x0, [x0]
  411cc4:	bl	4066f0 <strlen@plt>
  411cc8:	mov	x1, x0
  411ccc:	ldr	x0, [sp, #56]
  411cd0:	cmp	x1, x0
  411cd4:	b.ne	411d18 <strip_whitespace@@Base+0x1170>  // b.any
  411cd8:	ldrsw	x0, [sp, #88]
  411cdc:	lsl	x0, x0, #3
  411ce0:	ldr	x1, [sp, #72]
  411ce4:	add	x0, x1, x0
  411ce8:	ldr	x2, [x0]
  411cec:	ldrsw	x0, [sp, #88]
  411cf0:	add	x0, x0, #0x1
  411cf4:	lsl	x0, x0, #3
  411cf8:	ldr	x1, [sp, #72]
  411cfc:	add	x0, x1, x0
  411d00:	ldr	x0, [x0]
  411d04:	mov	x1, x0
  411d08:	mov	x0, x2
  411d0c:	bl	406bc0 <strcmp@plt>
  411d10:	cmp	w0, #0x0
  411d14:	b.eq	411d5c <strip_whitespace@@Base+0x11b4>  // b.none
  411d18:	ldrsw	x0, [sp, #88]
  411d1c:	lsl	x0, x0, #3
  411d20:	ldr	x1, [sp, #72]
  411d24:	add	x0, x1, x0
  411d28:	ldr	x0, [x0]
  411d2c:	ldr	x1, [sp, #56]
  411d30:	mov	x2, x1
  411d34:	mov	x1, x0
  411d38:	ldr	x0, [sp, #40]
  411d3c:	bl	40b388 <variable_buffer_output@@Base>
  411d40:	str	x0, [sp, #40]
  411d44:	mov	x2, #0x1                   	// #1
  411d48:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  411d4c:	add	x1, x0, #0x9d0
  411d50:	ldr	x0, [sp, #40]
  411d54:	bl	40b388 <variable_buffer_output@@Base>
  411d58:	str	x0, [sp, #40]
  411d5c:	ldr	w0, [sp, #88]
  411d60:	add	w0, w0, #0x1
  411d64:	str	w0, [sp, #88]
  411d68:	ldr	w1, [sp, #88]
  411d6c:	ldr	w0, [sp, #92]
  411d70:	cmp	w1, w0
  411d74:	b.lt	411c7c <strip_whitespace@@Base+0x10d4>  // b.tstop
  411d78:	ldr	x0, [sp, #40]
  411d7c:	sub	x0, x0, #0x1
  411d80:	str	x0, [sp, #40]
  411d84:	ldr	x0, [sp, #72]
  411d88:	bl	406c00 <free@plt>
  411d8c:	ldr	x0, [sp, #40]
  411d90:	ldp	x29, x30, [sp], #96
  411d94:	ret
  411d98:	stp	x29, x30, [sp, #-112]!
  411d9c:	mov	x29, sp
  411da0:	str	x19, [sp, #16]
  411da4:	str	x0, [sp, #56]
  411da8:	str	x1, [sp, #48]
  411dac:	str	x2, [sp, #40]
  411db0:	ldr	x0, [sp, #48]
  411db4:	ldr	x0, [x0]
  411db8:	str	x0, [sp, #80]
  411dbc:	ldr	x19, [sp, #80]
  411dc0:	ldr	x0, [sp, #48]
  411dc4:	ldr	x0, [x0]
  411dc8:	bl	4066f0 <strlen@plt>
  411dcc:	sub	x0, x0, #0x1
  411dd0:	add	x0, x19, x0
  411dd4:	str	x0, [sp, #72]
  411dd8:	str	wzr, [sp, #108]
  411ddc:	add	x1, sp, #0x48
  411de0:	add	x0, sp, #0x50
  411de4:	bl	410ba8 <strip_whitespace@@Base>
  411de8:	ldr	x1, [sp, #80]
  411dec:	ldr	x0, [sp, #72]
  411df0:	cmp	x1, x0
  411df4:	b.hi	411e34 <strip_whitespace@@Base+0x128c>  // b.pmore
  411df8:	ldr	x2, [sp, #80]
  411dfc:	ldr	x0, [sp, #72]
  411e00:	add	x0, x0, #0x1
  411e04:	mov	x1, x0
  411e08:	mov	x0, x2
  411e0c:	bl	40bf5c <expand_argument@@Base>
  411e10:	str	x0, [sp, #96]
  411e14:	ldr	x0, [sp, #96]
  411e18:	ldrb	w0, [x0]
  411e1c:	cmp	w0, #0x0
  411e20:	cset	w0, ne  // ne = any
  411e24:	and	w0, w0, #0xff
  411e28:	str	w0, [sp, #108]
  411e2c:	ldr	x0, [sp, #96]
  411e30:	bl	406c00 <free@plt>
  411e34:	ldr	w0, [sp, #108]
  411e38:	cmp	w0, #0x0
  411e3c:	b.ne	411e48 <strip_whitespace@@Base+0x12a0>  // b.any
  411e40:	mov	x0, #0x10                  	// #16
  411e44:	b	411e4c <strip_whitespace@@Base+0x12a4>
  411e48:	mov	x0, #0x8                   	// #8
  411e4c:	ldr	x1, [sp, #48]
  411e50:	add	x0, x1, x0
  411e54:	str	x0, [sp, #48]
  411e58:	ldr	x0, [sp, #48]
  411e5c:	ldr	x0, [x0]
  411e60:	cmp	x0, #0x0
  411e64:	b.eq	411ea0 <strip_whitespace@@Base+0x12f8>  // b.none
  411e68:	ldr	x0, [sp, #48]
  411e6c:	ldr	x0, [x0]
  411e70:	mov	x1, #0x0                   	// #0
  411e74:	bl	40bf5c <expand_argument@@Base>
  411e78:	str	x0, [sp, #88]
  411e7c:	ldr	x0, [sp, #88]
  411e80:	bl	4066f0 <strlen@plt>
  411e84:	mov	x2, x0
  411e88:	ldr	x1, [sp, #88]
  411e8c:	ldr	x0, [sp, #56]
  411e90:	bl	40b388 <variable_buffer_output@@Base>
  411e94:	str	x0, [sp, #56]
  411e98:	ldr	x0, [sp, #88]
  411e9c:	bl	406c00 <free@plt>
  411ea0:	ldr	x0, [sp, #56]
  411ea4:	ldr	x19, [sp, #16]
  411ea8:	ldp	x29, x30, [sp], #112
  411eac:	ret
  411eb0:	stp	x29, x30, [sp, #-96]!
  411eb4:	mov	x29, sp
  411eb8:	str	x19, [sp, #16]
  411ebc:	str	x0, [sp, #56]
  411ec0:	str	x1, [sp, #48]
  411ec4:	str	x2, [sp, #40]
  411ec8:	b	411f84 <strip_whitespace@@Base+0x13dc>
  411ecc:	ldr	x0, [sp, #48]
  411ed0:	ldr	x0, [x0]
  411ed4:	str	x0, [sp, #72]
  411ed8:	ldr	x19, [sp, #72]
  411edc:	ldr	x0, [sp, #48]
  411ee0:	ldr	x0, [x0]
  411ee4:	bl	4066f0 <strlen@plt>
  411ee8:	sub	x0, x0, #0x1
  411eec:	add	x0, x19, x0
  411ef0:	str	x0, [sp, #64]
  411ef4:	str	xzr, [sp, #88]
  411ef8:	add	x1, sp, #0x40
  411efc:	add	x0, sp, #0x48
  411f00:	bl	410ba8 <strip_whitespace@@Base>
  411f04:	ldr	x1, [sp, #72]
  411f08:	ldr	x0, [sp, #64]
  411f0c:	cmp	x1, x0
  411f10:	b.hi	411f74 <strip_whitespace@@Base+0x13cc>  // b.pmore
  411f14:	ldr	x2, [sp, #72]
  411f18:	ldr	x0, [sp, #64]
  411f1c:	add	x0, x0, #0x1
  411f20:	mov	x1, x0
  411f24:	mov	x0, x2
  411f28:	bl	40bf5c <expand_argument@@Base>
  411f2c:	str	x0, [sp, #80]
  411f30:	ldr	x0, [sp, #80]
  411f34:	bl	4066f0 <strlen@plt>
  411f38:	str	x0, [sp, #88]
  411f3c:	ldr	x0, [sp, #88]
  411f40:	cmp	x0, #0x0
  411f44:	b.ne	411f54 <strip_whitespace@@Base+0x13ac>  // b.any
  411f48:	ldr	x0, [sp, #80]
  411f4c:	bl	406c00 <free@plt>
  411f50:	b	411f78 <strip_whitespace@@Base+0x13d0>
  411f54:	ldr	x2, [sp, #88]
  411f58:	ldr	x1, [sp, #80]
  411f5c:	ldr	x0, [sp, #56]
  411f60:	bl	40b388 <variable_buffer_output@@Base>
  411f64:	str	x0, [sp, #56]
  411f68:	ldr	x0, [sp, #80]
  411f6c:	bl	406c00 <free@plt>
  411f70:	b	411f94 <strip_whitespace@@Base+0x13ec>
  411f74:	nop
  411f78:	ldr	x0, [sp, #48]
  411f7c:	add	x0, x0, #0x8
  411f80:	str	x0, [sp, #48]
  411f84:	ldr	x0, [sp, #48]
  411f88:	ldr	x0, [x0]
  411f8c:	cmp	x0, #0x0
  411f90:	b.ne	411ecc <strip_whitespace@@Base+0x1324>  // b.any
  411f94:	ldr	x0, [sp, #56]
  411f98:	ldr	x19, [sp, #16]
  411f9c:	ldp	x29, x30, [sp], #96
  411fa0:	ret
  411fa4:	stp	x29, x30, [sp, #-96]!
  411fa8:	mov	x29, sp
  411fac:	str	x19, [sp, #16]
  411fb0:	str	x0, [sp, #56]
  411fb4:	str	x1, [sp, #48]
  411fb8:	str	x2, [sp, #40]
  411fbc:	ldr	x0, [sp, #48]
  411fc0:	ldr	x0, [x0]
  411fc4:	str	x0, [sp, #72]
  411fc8:	ldr	x19, [sp, #72]
  411fcc:	ldr	x0, [sp, #48]
  411fd0:	ldr	x0, [x0]
  411fd4:	bl	4066f0 <strlen@plt>
  411fd8:	sub	x0, x0, #0x1
  411fdc:	add	x0, x19, x0
  411fe0:	str	x0, [sp, #64]
  411fe4:	add	x1, sp, #0x40
  411fe8:	add	x0, sp, #0x48
  411fec:	bl	410ba8 <strip_whitespace@@Base>
  411ff0:	ldr	x1, [sp, #72]
  411ff4:	ldr	x0, [sp, #64]
  411ff8:	cmp	x1, x0
  411ffc:	b.ls	412008 <strip_whitespace@@Base+0x1460>  // b.plast
  412000:	ldr	x0, [sp, #56]
  412004:	b	41208c <strip_whitespace@@Base+0x14e4>
  412008:	ldr	x2, [sp, #72]
  41200c:	ldr	x0, [sp, #64]
  412010:	add	x0, x0, #0x1
  412014:	mov	x1, x0
  412018:	mov	x0, x2
  41201c:	bl	40bf5c <expand_argument@@Base>
  412020:	str	x0, [sp, #88]
  412024:	ldr	x0, [sp, #88]
  412028:	bl	4066f0 <strlen@plt>
  41202c:	str	x0, [sp, #80]
  412030:	ldr	x0, [sp, #80]
  412034:	cmp	x0, #0x0
  412038:	b.eq	41207c <strip_whitespace@@Base+0x14d4>  // b.none
  41203c:	ldr	x0, [sp, #48]
  412040:	add	x0, x0, #0x8
  412044:	str	x0, [sp, #48]
  412048:	ldr	x0, [sp, #48]
  41204c:	ldr	x0, [x0]
  412050:	cmp	x0, #0x0
  412054:	b.eq	412064 <strip_whitespace@@Base+0x14bc>  // b.none
  412058:	ldr	x0, [sp, #88]
  41205c:	bl	406c00 <free@plt>
  412060:	b	411fbc <strip_whitespace@@Base+0x1414>
  412064:	ldr	x2, [sp, #80]
  412068:	ldr	x1, [sp, #88]
  41206c:	ldr	x0, [sp, #56]
  412070:	bl	40b388 <variable_buffer_output@@Base>
  412074:	str	x0, [sp, #56]
  412078:	b	412080 <strip_whitespace@@Base+0x14d8>
  41207c:	nop
  412080:	ldr	x0, [sp, #88]
  412084:	bl	406c00 <free@plt>
  412088:	ldr	x0, [sp, #56]
  41208c:	ldr	x19, [sp, #16]
  412090:	ldp	x29, x30, [sp], #96
  412094:	ret
  412098:	stp	x29, x30, [sp, #-64]!
  41209c:	mov	x29, sp
  4120a0:	str	x0, [sp, #40]
  4120a4:	str	x1, [sp, #32]
  4120a8:	str	x2, [sp, #24]
  4120ac:	ldr	x0, [sp, #32]
  4120b0:	ldr	x0, [x0]
  4120b4:	bl	40fee4 <pattern_matches@@Base+0x294>
  4120b8:	str	x0, [sp, #56]
  4120bc:	ldr	x0, [sp, #56]
  4120c0:	bl	4066f0 <strlen@plt>
  4120c4:	mov	x2, x0
  4120c8:	ldr	x1, [sp, #56]
  4120cc:	ldr	x0, [sp, #40]
  4120d0:	bl	40b388 <variable_buffer_output@@Base>
  4120d4:	str	x0, [sp, #40]
  4120d8:	ldr	x0, [sp, #40]
  4120dc:	ldp	x29, x30, [sp], #64
  4120e0:	ret
  4120e4:	stp	x29, x30, [sp, #-64]!
  4120e8:	mov	x29, sp
  4120ec:	str	x0, [sp, #40]
  4120f0:	str	x1, [sp, #32]
  4120f4:	str	x2, [sp, #24]
  4120f8:	add	x1, sp, #0x30
  4120fc:	add	x0, sp, #0x38
  412100:	bl	40c470 <install_variable_buffer@@Base>
  412104:	ldr	x0, [sp, #32]
  412108:	ldr	x0, [x0]
  41210c:	mov	x1, #0x0                   	// #0
  412110:	bl	424c50 <eval_buffer@@Base>
  412114:	ldr	x0, [sp, #56]
  412118:	ldr	x1, [sp, #48]
  41211c:	bl	40c4c4 <restore_variable_buffer@@Base>
  412120:	ldr	x0, [sp, #40]
  412124:	ldp	x29, x30, [sp], #64
  412128:	ret
  41212c:	stp	x29, x30, [sp, #-80]!
  412130:	mov	x29, sp
  412134:	str	x19, [sp, #16]
  412138:	str	x0, [sp, #56]
  41213c:	str	x1, [sp, #48]
  412140:	str	x2, [sp, #40]
  412144:	ldr	x0, [sp, #48]
  412148:	ldr	x19, [x0]
  41214c:	ldr	x0, [sp, #48]
  412150:	ldr	x0, [x0]
  412154:	bl	4066f0 <strlen@plt>
  412158:	mov	x1, x0
  41215c:	mov	x0, x19
  412160:	bl	431f68 <lookup_variable@@Base>
  412164:	str	x0, [sp, #72]
  412168:	ldr	x0, [sp, #72]
  41216c:	cmp	x0, #0x0
  412170:	b.eq	41219c <strip_whitespace@@Base+0x15f4>  // b.none
  412174:	ldr	x0, [sp, #72]
  412178:	ldr	x19, [x0, #8]
  41217c:	ldr	x0, [sp, #72]
  412180:	ldr	x0, [x0, #8]
  412184:	bl	4066f0 <strlen@plt>
  412188:	mov	x2, x0
  41218c:	mov	x1, x19
  412190:	ldr	x0, [sp, #56]
  412194:	bl	40b388 <variable_buffer_output@@Base>
  412198:	str	x0, [sp, #56]
  41219c:	ldr	x0, [sp, #56]
  4121a0:	ldr	x19, [sp, #16]
  4121a4:	ldp	x29, x30, [sp], #80
  4121a8:	ret
  4121ac:	sub	sp, sp, #0x40
  4121b0:	str	x0, [sp, #24]
  4121b4:	str	x1, [sp, #16]
  4121b8:	str	w2, [sp, #12]
  4121bc:	ldr	x0, [sp, #24]
  4121c0:	str	x0, [sp, #56]
  4121c4:	ldr	x0, [sp, #24]
  4121c8:	str	x0, [sp, #48]
  4121cc:	ldr	x0, [sp, #24]
  4121d0:	sub	x0, x0, #0x1
  4121d4:	str	x0, [sp, #40]
  4121d8:	ldr	x0, [sp, #16]
  4121dc:	ldr	x0, [x0]
  4121e0:	ldr	x1, [sp, #48]
  4121e4:	add	x0, x1, x0
  4121e8:	strb	wzr, [x0]
  4121ec:	b	412270 <strip_whitespace@@Base+0x16c8>
  4121f0:	ldr	x0, [sp, #48]
  4121f4:	ldrb	w0, [x0]
  4121f8:	cmp	w0, #0xd
  4121fc:	b.ne	412214 <strip_whitespace@@Base+0x166c>  // b.any
  412200:	ldr	x0, [sp, #48]
  412204:	add	x0, x0, #0x1
  412208:	ldrb	w0, [x0]
  41220c:	cmp	w0, #0xa
  412210:	b.eq	412260 <strip_whitespace@@Base+0x16b8>  // b.none
  412214:	ldr	x0, [sp, #48]
  412218:	ldrb	w0, [x0]
  41221c:	cmp	w0, #0xa
  412220:	b.ne	41223c <strip_whitespace@@Base+0x1694>  // b.any
  412224:	ldr	x0, [sp, #56]
  412228:	add	x1, x0, #0x1
  41222c:	str	x1, [sp, #56]
  412230:	mov	w1, #0x20                  	// #32
  412234:	strb	w1, [x0]
  412238:	b	412264 <strip_whitespace@@Base+0x16bc>
  41223c:	ldr	x0, [sp, #56]
  412240:	str	x0, [sp, #40]
  412244:	ldr	x0, [sp, #56]
  412248:	add	x1, x0, #0x1
  41224c:	str	x1, [sp, #56]
  412250:	ldr	x1, [sp, #48]
  412254:	ldrb	w1, [x1]
  412258:	strb	w1, [x0]
  41225c:	b	412264 <strip_whitespace@@Base+0x16bc>
  412260:	nop
  412264:	ldr	x0, [sp, #48]
  412268:	add	x0, x0, #0x1
  41226c:	str	x0, [sp, #48]
  412270:	ldr	x0, [sp, #48]
  412274:	ldrb	w0, [x0]
  412278:	cmp	w0, #0x0
  41227c:	b.ne	4121f0 <strip_whitespace@@Base+0x1648>  // b.any
  412280:	ldr	w0, [sp, #12]
  412284:	cmp	w0, #0x0
  412288:	b.ne	4122ac <strip_whitespace@@Base+0x1704>  // b.any
  41228c:	ldr	x0, [sp, #56]
  412290:	sub	x0, x0, #0x2
  412294:	ldr	x1, [sp, #40]
  412298:	cmp	x1, x0
  41229c:	b.cs	4122ac <strip_whitespace@@Base+0x1704>  // b.hs, b.nlast
  4122a0:	ldr	x0, [sp, #56]
  4122a4:	sub	x0, x0, #0x2
  4122a8:	str	x0, [sp, #40]
  4122ac:	ldr	x0, [sp, #40]
  4122b0:	add	x0, x0, #0x1
  4122b4:	str	x0, [sp, #40]
  4122b8:	ldr	x0, [sp, #40]
  4122bc:	strb	wzr, [x0]
  4122c0:	ldr	x1, [sp, #40]
  4122c4:	ldr	x0, [sp, #24]
  4122c8:	sub	x0, x1, x0
  4122cc:	mov	x1, x0
  4122d0:	ldr	x0, [sp, #16]
  4122d4:	str	x1, [x0]
  4122d8:	nop
  4122dc:	add	sp, sp, #0x40
  4122e0:	ret

00000000004122e4 <shell_completed@@Base>:
  4122e4:	stp	x29, x30, [sp, #-288]!
  4122e8:	mov	x29, sp
  4122ec:	str	w0, [sp, #28]
  4122f0:	str	w1, [sp, #24]
  4122f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4122f8:	add	x0, x0, #0x598
  4122fc:	str	wzr, [x0]
  412300:	ldr	w0, [sp, #24]
  412304:	cmp	w0, #0x0
  412308:	b.ne	41232c <shell_completed@@Base+0x48>  // b.any
  41230c:	ldr	w0, [sp, #28]
  412310:	cmp	w0, #0x7f
  412314:	b.ne	41232c <shell_completed@@Base+0x48>  // b.any
  412318:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41231c:	add	x0, x0, #0x5f8
  412320:	mov	w1, #0xffffffff            	// #-1
  412324:	str	w1, [x0]
  412328:	b	41233c <shell_completed@@Base+0x58>
  41232c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412330:	add	x0, x0, #0x5f8
  412334:	mov	w1, #0x1                   	// #1
  412338:	str	w1, [x0]
  41233c:	ldr	w0, [sp, #28]
  412340:	cmp	w0, #0x0
  412344:	b.ne	412360 <shell_completed@@Base+0x7c>  // b.any
  412348:	ldr	w0, [sp, #24]
  41234c:	cmp	w0, #0x0
  412350:	b.le	412360 <shell_completed@@Base+0x7c>
  412354:	ldr	w0, [sp, #24]
  412358:	add	w0, w0, #0x80
  41235c:	str	w0, [sp, #28]
  412360:	add	x3, sp, #0x20
  412364:	ldr	w2, [sp, #28]
  412368:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41236c:	add	x1, x0, #0xa70
  412370:	mov	x0, x3
  412374:	bl	406790 <sprintf@plt>
  412378:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41237c:	add	x0, x0, #0x3b8
  412380:	ldr	x0, [x0]
  412384:	ldr	x1, [x0, #8]
  412388:	add	x0, sp, #0x20
  41238c:	mov	x6, #0x0                   	// #0
  412390:	mov	x5, x1
  412394:	mov	w4, #0x0                   	// #0
  412398:	mov	w3, #0x5                   	// #5
  41239c:	mov	x2, x0
  4123a0:	mov	x1, #0xc                   	// #12
  4123a4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4123a8:	add	x0, x0, #0xbe0
  4123ac:	bl	4316d8 <define_variable_in_set@@Base>
  4123b0:	nop
  4123b4:	ldp	x29, x30, [sp], #288
  4123b8:	ret

00000000004123bc <func_shell_base@@Base>:
  4123bc:	stp	x29, x30, [sp, #-176]!
  4123c0:	mov	x29, sp
  4123c4:	stp	x19, x20, [sp, #16]
  4123c8:	str	x0, [sp, #56]
  4123cc:	str	x1, [sp, #48]
  4123d0:	str	w2, [sp, #44]
  4123d4:	str	xzr, [sp, #120]
  4123d8:	str	xzr, [sp, #152]
  4123dc:	ldr	x0, [sp, #48]
  4123e0:	ldr	x0, [x0]
  4123e4:	add	x1, sp, #0x78
  4123e8:	mov	x4, x1
  4123ec:	mov	w3, #0x0                   	// #0
  4123f0:	mov	x2, #0x0                   	// #0
  4123f4:	mov	x1, #0x0                   	// #0
  4123f8:	bl	41bd00 <construct_command_argv@@Base>
  4123fc:	str	x0, [sp, #152]
  412400:	ldr	x0, [sp, #152]
  412404:	cmp	x0, #0x0
  412408:	b.ne	412414 <func_shell_base@@Base+0x58>  // b.any
  41240c:	ldr	x0, [sp, #56]
  412410:	b	412784 <func_shell_base@@Base+0x3c8>
  412414:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412418:	add	x0, x0, #0x410
  41241c:	ldr	x0, [x0]
  412420:	str	x0, [sp, #144]
  412424:	bl	423ad4 <output_start@@Base>
  412428:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41242c:	add	x0, x0, #0xff0
  412430:	ldr	x0, [x0]
  412434:	cmp	x0, #0x0
  412438:	b.eq	412468 <func_shell_base@@Base+0xac>  // b.none
  41243c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412440:	add	x0, x0, #0xff0
  412444:	ldr	x0, [x0]
  412448:	ldr	w0, [x0, #4]
  41244c:	cmp	w0, #0x0
  412450:	b.lt	412468 <func_shell_base@@Base+0xac>  // b.tstop
  412454:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412458:	add	x0, x0, #0xff0
  41245c:	ldr	x0, [x0]
  412460:	ldr	w0, [x0, #4]
  412464:	b	412478 <func_shell_base@@Base+0xbc>
  412468:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41246c:	add	x0, x0, #0x3e8
  412470:	ldr	x0, [x0]
  412474:	bl	4068a0 <fileno@plt>
  412478:	str	w0, [sp, #140]
  41247c:	add	x0, sp, #0x70
  412480:	bl	4067b0 <pipe@plt>
  412484:	cmp	w0, #0x0
  412488:	b.ge	4124dc <func_shell_base@@Base+0x120>  // b.tcont
  41248c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  412490:	add	x0, x0, #0x40
  412494:	ldr	x19, [x0]
  412498:	bl	406dd0 <__errno_location@plt>
  41249c:	ldr	w0, [x0]
  4124a0:	bl	406ab0 <strerror@plt>
  4124a4:	bl	4066f0 <strlen@plt>
  4124a8:	mov	x20, x0
  4124ac:	bl	406dd0 <__errno_location@plt>
  4124b0:	ldr	w0, [x0]
  4124b4:	bl	406ab0 <strerror@plt>
  4124b8:	mov	x3, x0
  4124bc:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4124c0:	add	x2, x0, #0xbf0
  4124c4:	mov	x1, x20
  4124c8:	mov	x0, x19
  4124cc:	bl	423e74 <error@@Base>
  4124d0:	mov	w0, #0xffffffff            	// #-1
  4124d4:	str	w0, [sp, #136]
  4124d8:	b	412760 <func_shell_base@@Base+0x3a4>
  4124dc:	ldr	w0, [sp, #116]
  4124e0:	bl	435f9c <fd_noinherit@@Base>
  4124e4:	ldr	w0, [sp, #112]
  4124e8:	bl	435f9c <fd_noinherit@@Base>
  4124ec:	str	xzr, [sp, #72]
  4124f0:	ldrb	w0, [sp, #96]
  4124f4:	orr	w0, w0, #0x1
  4124f8:	strb	w0, [sp, #96]
  4124fc:	ldr	w0, [sp, #116]
  412500:	str	w0, [sp, #88]
  412504:	ldr	w0, [sp, #140]
  412508:	str	w0, [sp, #92]
  41250c:	ldr	x0, [sp, #144]
  412510:	str	x0, [sp, #80]
  412514:	add	x0, sp, #0x48
  412518:	ldr	x2, [sp, #152]
  41251c:	mov	w1, #0x1                   	// #1
  412520:	bl	41a598 <child_execute_job@@Base>
  412524:	str	w0, [sp, #136]
  412528:	ldr	x0, [sp, #72]
  41252c:	bl	406c00 <free@plt>
  412530:	ldr	w0, [sp, #136]
  412534:	cmp	w0, #0x0
  412538:	b.ge	41254c <func_shell_base@@Base+0x190>  // b.tcont
  41253c:	mov	w1, #0x0                   	// #0
  412540:	mov	w0, #0x7f                  	// #127
  412544:	bl	4122e4 <shell_completed@@Base>
  412548:	b	412760 <func_shell_base@@Base+0x3a4>
  41254c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412550:	add	x0, x0, #0x598
  412554:	ldr	w1, [sp, #136]
  412558:	str	w1, [x0]
  41255c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412560:	add	x0, x0, #0x5f8
  412564:	str	wzr, [x0]
  412568:	ldr	w0, [sp, #116]
  41256c:	cmp	w0, #0x0
  412570:	b.lt	41257c <func_shell_base@@Base+0x1c0>  // b.tstop
  412574:	ldr	w0, [sp, #116]
  412578:	bl	406ac0 <close@plt>
  41257c:	mov	x0, #0xc8                  	// #200
  412580:	str	x0, [sp, #160]
  412584:	ldr	x0, [sp, #160]
  412588:	add	x0, x0, #0x1
  41258c:	bl	42268c <xmalloc@@Base>
  412590:	str	x0, [sp, #168]
  412594:	str	xzr, [sp, #104]
  412598:	ldr	x0, [sp, #104]
  41259c:	ldr	x1, [sp, #160]
  4125a0:	cmp	x1, x0
  4125a4:	b.ne	4125cc <func_shell_base@@Base+0x210>  // b.any
  4125a8:	ldr	x0, [sp, #160]
  4125ac:	add	x0, x0, #0x200
  4125b0:	str	x0, [sp, #160]
  4125b4:	ldr	x0, [sp, #160]
  4125b8:	add	x0, x0, #0x1
  4125bc:	mov	x1, x0
  4125c0:	ldr	x0, [sp, #168]
  4125c4:	bl	422720 <xrealloc@@Base>
  4125c8:	str	x0, [sp, #168]
  4125cc:	nop
  4125d0:	ldr	w3, [sp, #112]
  4125d4:	ldr	x0, [sp, #104]
  4125d8:	ldr	x1, [sp, #168]
  4125dc:	add	x4, x1, x0
  4125e0:	ldr	x0, [sp, #104]
  4125e4:	ldr	x1, [sp, #160]
  4125e8:	sub	x0, x1, x0
  4125ec:	mov	x2, x0
  4125f0:	mov	x1, x4
  4125f4:	mov	w0, w3
  4125f8:	bl	406cf0 <read@plt>
  4125fc:	str	w0, [sp, #132]
  412600:	ldr	w0, [sp, #132]
  412604:	cmn	w0, #0x1
  412608:	b.ne	41261c <func_shell_base@@Base+0x260>  // b.any
  41260c:	bl	406dd0 <__errno_location@plt>
  412610:	ldr	w0, [x0]
  412614:	cmp	w0, #0x4
  412618:	b.eq	4125d0 <func_shell_base@@Base+0x214>  // b.none
  41261c:	ldr	w0, [sp, #132]
  412620:	cmp	w0, #0x0
  412624:	b.le	41263c <func_shell_base@@Base+0x280>
  412628:	ldrsw	x1, [sp, #132]
  41262c:	ldr	x0, [sp, #104]
  412630:	add	x0, x1, x0
  412634:	str	x0, [sp, #104]
  412638:	b	412598 <func_shell_base@@Base+0x1dc>
  41263c:	nop
  412640:	ldr	x0, [sp, #104]
  412644:	ldr	x1, [sp, #168]
  412648:	add	x0, x1, x0
  41264c:	strb	wzr, [x0]
  412650:	ldr	w0, [sp, #112]
  412654:	bl	406ac0 <close@plt>
  412658:	b	412668 <func_shell_base@@Base+0x2ac>
  41265c:	mov	w1, #0x0                   	// #0
  412660:	mov	w0, #0x1                   	// #1
  412664:	bl	417c80 <reap_children@@Base>
  412668:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41266c:	add	x0, x0, #0x5f8
  412670:	ldr	w0, [x0]
  412674:	cmp	w0, #0x0
  412678:	b.eq	41265c <func_shell_base@@Base+0x2a0>  // b.none
  41267c:	ldr	x0, [sp, #120]
  412680:	cmp	x0, #0x0
  412684:	b.eq	4126e0 <func_shell_base@@Base+0x324>  // b.none
  412688:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41268c:	add	x0, x0, #0x6dc
  412690:	ldr	w0, [x0]
  412694:	and	w0, w0, #0x2
  412698:	cmp	w0, #0x0
  41269c:	b.eq	4126d0 <func_shell_base@@Base+0x314>  // b.none
  4126a0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4126a4:	add	x0, x0, #0xc00
  4126a8:	bl	406e40 <gettext@plt>
  4126ac:	mov	x2, x0
  4126b0:	ldr	x0, [sp, #120]
  4126b4:	mov	x1, x0
  4126b8:	mov	x0, x2
  4126bc:	bl	406dc0 <printf@plt>
  4126c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4126c4:	add	x0, x0, #0x400
  4126c8:	ldr	x0, [x0]
  4126cc:	bl	406c90 <fflush@plt>
  4126d0:	ldr	x0, [sp, #120]
  4126d4:	bl	406760 <remove@plt>
  4126d8:	ldr	x0, [sp, #120]
  4126dc:	bl	406c00 <free@plt>
  4126e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4126e4:	add	x0, x0, #0x598
  4126e8:	str	wzr, [x0]
  4126ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4126f0:	add	x0, x0, #0x5f8
  4126f4:	ldr	w0, [x0]
  4126f8:	cmn	w0, #0x1
  4126fc:	b.ne	41272c <func_shell_base@@Base+0x370>  // b.any
  412700:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412704:	add	x0, x0, #0x3e8
  412708:	ldr	x0, [x0]
  41270c:	mov	x1, x0
  412710:	ldr	x0, [sp, #168]
  412714:	bl	406700 <fputs@plt>
  412718:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41271c:	add	x0, x0, #0x3e8
  412720:	ldr	x0, [x0]
  412724:	bl	406c90 <fflush@plt>
  412728:	b	412758 <func_shell_base@@Base+0x39c>
  41272c:	add	x0, sp, #0x68
  412730:	ldr	w2, [sp, #44]
  412734:	mov	x1, x0
  412738:	ldr	x0, [sp, #168]
  41273c:	bl	4121ac <strip_whitespace@@Base+0x1604>
  412740:	ldr	x0, [sp, #104]
  412744:	mov	x2, x0
  412748:	ldr	x1, [sp, #168]
  41274c:	ldr	x0, [sp, #56]
  412750:	bl	40b388 <variable_buffer_output@@Base>
  412754:	str	x0, [sp, #56]
  412758:	ldr	x0, [sp, #168]
  41275c:	bl	406c00 <free@plt>
  412760:	ldr	x0, [sp, #152]
  412764:	cmp	x0, #0x0
  412768:	b.eq	412780 <func_shell_base@@Base+0x3c4>  // b.none
  41276c:	ldr	x0, [sp, #152]
  412770:	ldr	x0, [x0]
  412774:	bl	406c00 <free@plt>
  412778:	ldr	x0, [sp, #152]
  41277c:	bl	406c00 <free@plt>
  412780:	ldr	x0, [sp, #56]
  412784:	ldp	x19, x20, [sp, #16]
  412788:	ldp	x29, x30, [sp], #176
  41278c:	ret
  412790:	stp	x29, x30, [sp, #-48]!
  412794:	mov	x29, sp
  412798:	str	x0, [sp, #40]
  41279c:	str	x1, [sp, #32]
  4127a0:	str	x2, [sp, #24]
  4127a4:	mov	w2, #0x1                   	// #1
  4127a8:	ldr	x1, [sp, #32]
  4127ac:	ldr	x0, [sp, #40]
  4127b0:	bl	4123bc <func_shell_base@@Base>
  4127b4:	ldp	x29, x30, [sp], #48
  4127b8:	ret
  4127bc:	stp	x29, x30, [sp, #-80]!
  4127c0:	mov	x29, sp
  4127c4:	str	x0, [sp, #24]
  4127c8:	str	x1, [sp, #16]
  4127cc:	mov	x0, #0x1                   	// #1
  4127d0:	str	x0, [sp, #48]
  4127d4:	ldr	x0, [sp, #24]
  4127d8:	ldrb	w0, [x0]
  4127dc:	cmp	w0, #0x0
  4127e0:	b.ne	4127ec <func_shell_base@@Base+0x430>  // b.any
  4127e4:	mov	x0, #0x0                   	// #0
  4127e8:	b	412afc <func_shell_base@@Base+0x740>
  4127ec:	ldr	x0, [sp, #16]
  4127f0:	add	x0, x0, #0x1, lsl #12
  4127f4:	str	x0, [sp, #40]
  4127f8:	ldr	x0, [sp, #24]
  4127fc:	ldrb	w0, [x0]
  412800:	cmp	w0, #0x2f
  412804:	b.eq	412858 <func_shell_base@@Base+0x49c>  // b.none
  412808:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41280c:	add	x0, x0, #0xa48
  412810:	ldr	x0, [x0]
  412814:	cmp	x0, #0x0
  412818:	b.ne	412824 <func_shell_base@@Base+0x468>  // b.any
  41281c:	mov	x0, #0x0                   	// #0
  412820:	b	412afc <func_shell_base@@Base+0x740>
  412824:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  412828:	add	x0, x0, #0xa48
  41282c:	ldr	x0, [x0]
  412830:	mov	x1, x0
  412834:	ldr	x0, [sp, #16]
  412838:	bl	406ca0 <strcpy@plt>
  41283c:	ldr	x0, [sp, #16]
  412840:	bl	4066f0 <strlen@plt>
  412844:	mov	x1, x0
  412848:	ldr	x0, [sp, #16]
  41284c:	add	x0, x0, x1
  412850:	str	x0, [sp, #72]
  412854:	b	412898 <func_shell_base@@Base+0x4dc>
  412858:	ldr	x2, [sp, #48]
  41285c:	ldr	x1, [sp, #24]
  412860:	ldr	x0, [sp, #16]
  412864:	bl	4066b0 <memcpy@plt>
  412868:	ldr	x1, [sp, #16]
  41286c:	ldr	x0, [sp, #48]
  412870:	add	x0, x1, x0
  412874:	strb	wzr, [x0]
  412878:	ldr	x1, [sp, #16]
  41287c:	ldr	x0, [sp, #48]
  412880:	add	x0, x1, x0
  412884:	str	x0, [sp, #72]
  412888:	ldr	x1, [sp, #24]
  41288c:	ldr	x0, [sp, #48]
  412890:	add	x0, x1, x0
  412894:	str	x0, [sp, #24]
  412898:	ldr	x0, [sp, #24]
  41289c:	str	x0, [sp, #56]
  4128a0:	ldr	x0, [sp, #56]
  4128a4:	str	x0, [sp, #64]
  4128a8:	b	412a88 <func_shell_base@@Base+0x6cc>
  4128ac:	ldr	x0, [sp, #64]
  4128b0:	add	x0, x0, #0x1
  4128b4:	str	x0, [sp, #64]
  4128b8:	ldr	x0, [sp, #64]
  4128bc:	ldrb	w0, [x0]
  4128c0:	mov	w1, w0
  4128c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4128c8:	add	x0, x0, #0x728
  4128cc:	sxtw	x1, w1
  4128d0:	ldrh	w0, [x0, x1, lsl #1]
  4128d4:	sxth	w0, w0
  4128d8:	cmp	w0, #0x0
  4128dc:	b.lt	4128ac <func_shell_base@@Base+0x4f0>  // b.tstop
  4128e0:	ldr	x0, [sp, #64]
  4128e4:	str	x0, [sp, #56]
  4128e8:	b	4128f8 <func_shell_base@@Base+0x53c>
  4128ec:	ldr	x0, [sp, #56]
  4128f0:	add	x0, x0, #0x1
  4128f4:	str	x0, [sp, #56]
  4128f8:	ldr	x0, [sp, #56]
  4128fc:	ldrb	w0, [x0]
  412900:	mov	w1, w0
  412904:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412908:	add	x0, x0, #0x728
  41290c:	sxtw	x1, w1
  412910:	ldrh	w0, [x0, x1, lsl #1]
  412914:	mov	w1, w0
  412918:	mov	w0, #0x8001                	// #32769
  41291c:	and	w0, w1, w0
  412920:	cmp	w0, #0x0
  412924:	b.eq	4128ec <func_shell_base@@Base+0x530>  // b.none
  412928:	ldr	x1, [sp, #56]
  41292c:	ldr	x0, [sp, #64]
  412930:	sub	x0, x1, x0
  412934:	str	x0, [sp, #32]
  412938:	ldr	x0, [sp, #32]
  41293c:	cmp	x0, #0x0
  412940:	b.eq	412a9c <func_shell_base@@Base+0x6e0>  // b.none
  412944:	ldr	x0, [sp, #32]
  412948:	cmp	x0, #0x1
  41294c:	b.ne	412960 <func_shell_base@@Base+0x5a4>  // b.any
  412950:	ldr	x0, [sp, #64]
  412954:	ldrb	w0, [x0]
  412958:	cmp	w0, #0x2e
  41295c:	b.eq	412a80 <func_shell_base@@Base+0x6c4>  // b.none
  412960:	ldr	x0, [sp, #32]
  412964:	cmp	x0, #0x2
  412968:	b.ne	4129f4 <func_shell_base@@Base+0x638>  // b.any
  41296c:	ldr	x0, [sp, #64]
  412970:	ldrb	w0, [x0]
  412974:	cmp	w0, #0x2e
  412978:	b.ne	4129f4 <func_shell_base@@Base+0x638>  // b.any
  41297c:	ldr	x0, [sp, #64]
  412980:	add	x0, x0, #0x1
  412984:	ldrb	w0, [x0]
  412988:	cmp	w0, #0x2e
  41298c:	b.ne	4129f4 <func_shell_base@@Base+0x638>  // b.any
  412990:	ldr	x1, [sp, #16]
  412994:	ldr	x0, [sp, #48]
  412998:	add	x0, x1, x0
  41299c:	ldr	x1, [sp, #72]
  4129a0:	cmp	x1, x0
  4129a4:	b.ls	412a80 <func_shell_base@@Base+0x6c4>  // b.plast
  4129a8:	ldr	x0, [sp, #72]
  4129ac:	sub	x0, x0, #0x1
  4129b0:	str	x0, [sp, #72]
  4129b4:	b	4129c4 <func_shell_base@@Base+0x608>
  4129b8:	ldr	x0, [sp, #72]
  4129bc:	sub	x0, x0, #0x1
  4129c0:	str	x0, [sp, #72]
  4129c4:	ldr	x0, [sp, #72]
  4129c8:	sub	x0, x0, #0x1
  4129cc:	ldrb	w0, [x0]
  4129d0:	mov	w1, w0
  4129d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4129d8:	add	x0, x0, #0x728
  4129dc:	sxtw	x1, w1
  4129e0:	ldrh	w0, [x0, x1, lsl #1]
  4129e4:	sxth	w0, w0
  4129e8:	cmp	w0, #0x0
  4129ec:	b.ge	4129b8 <func_shell_base@@Base+0x5fc>  // b.tcont
  4129f0:	b	412a80 <func_shell_base@@Base+0x6c4>
  4129f4:	ldr	x0, [sp, #72]
  4129f8:	sub	x0, x0, #0x1
  4129fc:	ldrb	w0, [x0]
  412a00:	mov	w1, w0
  412a04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412a08:	add	x0, x0, #0x728
  412a0c:	sxtw	x1, w1
  412a10:	ldrh	w0, [x0, x1, lsl #1]
  412a14:	sxth	w0, w0
  412a18:	cmp	w0, #0x0
  412a1c:	b.lt	412a34 <func_shell_base@@Base+0x678>  // b.tstop
  412a20:	ldr	x0, [sp, #72]
  412a24:	add	x1, x0, #0x1
  412a28:	str	x1, [sp, #72]
  412a2c:	mov	w1, #0x2f                  	// #47
  412a30:	strb	w1, [x0]
  412a34:	ldr	x1, [sp, #72]
  412a38:	ldr	x0, [sp, #32]
  412a3c:	add	x0, x1, x0
  412a40:	ldr	x1, [sp, #40]
  412a44:	cmp	x1, x0
  412a48:	b.hi	412a54 <func_shell_base@@Base+0x698>  // b.pmore
  412a4c:	mov	x0, #0x0                   	// #0
  412a50:	b	412afc <func_shell_base@@Base+0x740>
  412a54:	ldr	x2, [sp, #32]
  412a58:	ldr	x1, [sp, #64]
  412a5c:	ldr	x0, [sp, #72]
  412a60:	bl	4066b0 <memcpy@plt>
  412a64:	str	x0, [sp, #72]
  412a68:	ldr	x1, [sp, #72]
  412a6c:	ldr	x0, [sp, #32]
  412a70:	add	x0, x1, x0
  412a74:	str	x0, [sp, #72]
  412a78:	ldr	x0, [sp, #72]
  412a7c:	strb	wzr, [x0]
  412a80:	ldr	x0, [sp, #56]
  412a84:	str	x0, [sp, #64]
  412a88:	ldr	x0, [sp, #64]
  412a8c:	ldrb	w0, [x0]
  412a90:	cmp	w0, #0x0
  412a94:	b.ne	4128b8 <func_shell_base@@Base+0x4fc>  // b.any
  412a98:	b	412aa0 <func_shell_base@@Base+0x6e4>
  412a9c:	nop
  412aa0:	ldr	x1, [sp, #16]
  412aa4:	ldr	x0, [sp, #48]
  412aa8:	add	x0, x1, x0
  412aac:	ldr	x1, [sp, #72]
  412ab0:	cmp	x1, x0
  412ab4:	b.ls	412af0 <func_shell_base@@Base+0x734>  // b.plast
  412ab8:	ldr	x0, [sp, #72]
  412abc:	sub	x0, x0, #0x1
  412ac0:	ldrb	w0, [x0]
  412ac4:	mov	w1, w0
  412ac8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412acc:	add	x0, x0, #0x728
  412ad0:	sxtw	x1, w1
  412ad4:	ldrh	w0, [x0, x1, lsl #1]
  412ad8:	sxth	w0, w0
  412adc:	cmp	w0, #0x0
  412ae0:	b.ge	412af0 <func_shell_base@@Base+0x734>  // b.tcont
  412ae4:	ldr	x0, [sp, #72]
  412ae8:	sub	x0, x0, #0x1
  412aec:	str	x0, [sp, #72]
  412af0:	ldr	x0, [sp, #72]
  412af4:	strb	wzr, [x0]
  412af8:	ldr	x0, [sp, #16]
  412afc:	ldp	x29, x30, [sp], #80
  412b00:	ret
  412b04:	mov	x12, #0x20f0                	// #8432
  412b08:	sub	sp, sp, x12
  412b0c:	stp	x29, x30, [sp]
  412b10:	mov	x29, sp
  412b14:	str	x0, [sp, #40]
  412b18:	str	x1, [sp, #32]
  412b1c:	str	x2, [sp, #24]
  412b20:	ldr	x0, [sp, #32]
  412b24:	ldr	x0, [x0]
  412b28:	str	x0, [sp, #8392]
  412b2c:	str	xzr, [sp, #8416]
  412b30:	str	wzr, [sp, #8428]
  412b34:	str	xzr, [sp, #8384]
  412b38:	b	412c38 <func_shell_base@@Base+0x87c>
  412b3c:	ldr	x0, [sp, #8384]
  412b40:	cmp	x0, #0xfff
  412b44:	b.hi	412c38 <func_shell_base@@Base+0x87c>  // b.pmore
  412b48:	ldr	x1, [sp, #8384]
  412b4c:	add	x0, sp, #0xb0
  412b50:	mov	x2, x1
  412b54:	ldr	x1, [sp, #8416]
  412b58:	bl	406d80 <strncpy@plt>
  412b5c:	ldr	x0, [sp, #8384]
  412b60:	add	x1, sp, #0xb0
  412b64:	strb	wzr, [x1, x0]
  412b68:	bl	406dd0 <__errno_location@plt>
  412b6c:	str	wzr, [x0]
  412b70:	add	x1, sp, #0x1, lsl #12
  412b74:	add	x1, x1, #0xb8
  412b78:	add	x0, sp, #0xb0
  412b7c:	bl	406d40 <realpath@plt>
  412b80:	str	x0, [sp, #8408]
  412b84:	ldr	x0, [sp, #8408]
  412b88:	cmp	x0, #0x0
  412b8c:	b.ne	412ba0 <func_shell_base@@Base+0x7e4>  // b.any
  412b90:	bl	406dd0 <__errno_location@plt>
  412b94:	ldr	w0, [x0]
  412b98:	cmp	w0, #0x4
  412b9c:	b.eq	412b68 <func_shell_base@@Base+0x7ac>  // b.none
  412ba0:	ldr	x0, [sp, #8408]
  412ba4:	cmp	x0, #0x0
  412ba8:	b.eq	412c38 <func_shell_base@@Base+0x87c>  // b.none
  412bac:	nop
  412bb0:	add	x1, sp, #0x30
  412bb4:	add	x0, sp, #0x1, lsl #12
  412bb8:	add	x0, x0, #0xb8
  412bbc:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  412bc0:	str	w0, [sp, #8404]
  412bc4:	ldr	w0, [sp, #8404]
  412bc8:	cmn	w0, #0x1
  412bcc:	b.ne	412be0 <func_shell_base@@Base+0x824>  // b.any
  412bd0:	bl	406dd0 <__errno_location@plt>
  412bd4:	ldr	w0, [x0]
  412bd8:	cmp	w0, #0x4
  412bdc:	b.eq	412bb0 <func_shell_base@@Base+0x7f4>  // b.none
  412be0:	ldr	w0, [sp, #8404]
  412be4:	cmp	w0, #0x0
  412be8:	b.ne	412c38 <func_shell_base@@Base+0x87c>  // b.any
  412bec:	add	x0, sp, #0x1, lsl #12
  412bf0:	add	x0, x0, #0xb8
  412bf4:	bl	4066f0 <strlen@plt>
  412bf8:	mov	x1, x0
  412bfc:	add	x0, sp, #0x1, lsl #12
  412c00:	add	x0, x0, #0xb8
  412c04:	mov	x2, x1
  412c08:	mov	x1, x0
  412c0c:	ldr	x0, [sp, #40]
  412c10:	bl	40b388 <variable_buffer_output@@Base>
  412c14:	str	x0, [sp, #40]
  412c18:	mov	x2, #0x1                   	// #1
  412c1c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412c20:	add	x1, x0, #0x9d0
  412c24:	ldr	x0, [sp, #40]
  412c28:	bl	40b388 <variable_buffer_output@@Base>
  412c2c:	str	x0, [sp, #40]
  412c30:	mov	w0, #0x1                   	// #1
  412c34:	str	w0, [sp, #8428]
  412c38:	add	x1, sp, #0x2, lsl #12
  412c3c:	add	x1, x1, #0xc0
  412c40:	add	x0, sp, #0x2, lsl #12
  412c44:	add	x0, x0, #0xc8
  412c48:	bl	4228ec <find_next_token@@Base>
  412c4c:	str	x0, [sp, #8416]
  412c50:	ldr	x0, [sp, #8416]
  412c54:	cmp	x0, #0x0
  412c58:	b.ne	412b3c <func_shell_base@@Base+0x780>  // b.any
  412c5c:	ldr	w0, [sp, #8428]
  412c60:	cmp	w0, #0x0
  412c64:	b.eq	412c74 <func_shell_base@@Base+0x8b8>  // b.none
  412c68:	ldr	x0, [sp, #40]
  412c6c:	sub	x0, x0, #0x1
  412c70:	str	x0, [sp, #40]
  412c74:	ldr	x0, [sp, #40]
  412c78:	ldp	x29, x30, [sp]
  412c7c:	mov	x12, #0x20f0                	// #8432
  412c80:	add	sp, sp, x12
  412c84:	ret
  412c88:	sub	sp, sp, #0x490
  412c8c:	stp	x29, x30, [sp]
  412c90:	mov	x29, sp
  412c94:	stp	x19, x20, [sp, #16]
  412c98:	str	x21, [sp, #32]
  412c9c:	str	x0, [sp, #72]
  412ca0:	str	x1, [sp, #64]
  412ca4:	str	x2, [sp, #56]
  412ca8:	ldr	x0, [sp, #64]
  412cac:	ldr	x0, [x0]
  412cb0:	str	x0, [sp, #1160]
  412cb4:	ldr	x0, [sp, #1160]
  412cb8:	ldrb	w0, [x0]
  412cbc:	cmp	w0, #0x3e
  412cc0:	b.ne	412f8c <func_shell_base@@Base+0xbd0>  // b.any
  412cc4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412cc8:	add	x0, x0, #0xc28
  412ccc:	str	x0, [sp, #1152]
  412cd0:	ldr	x0, [sp, #1160]
  412cd4:	add	x0, x0, #0x1
  412cd8:	str	x0, [sp, #1160]
  412cdc:	ldr	x0, [sp, #1160]
  412ce0:	ldrb	w0, [x0]
  412ce4:	cmp	w0, #0x3e
  412ce8:	b.ne	412d14 <func_shell_base@@Base+0x958>  // b.any
  412cec:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412cf0:	add	x0, x0, #0xc30
  412cf4:	str	x0, [sp, #1152]
  412cf8:	ldr	x0, [sp, #1160]
  412cfc:	add	x0, x0, #0x1
  412d00:	str	x0, [sp, #1160]
  412d04:	b	412d14 <func_shell_base@@Base+0x958>
  412d08:	ldr	x0, [sp, #1160]
  412d0c:	add	x0, x0, #0x1
  412d10:	str	x0, [sp, #1160]
  412d14:	ldr	x0, [sp, #1160]
  412d18:	ldrb	w0, [x0]
  412d1c:	mov	w1, w0
  412d20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412d24:	add	x0, x0, #0x728
  412d28:	sxtw	x1, w1
  412d2c:	ldrh	w0, [x0, x1, lsl #1]
  412d30:	and	w0, w0, #0x6
  412d34:	cmp	w0, #0x0
  412d38:	b.ne	412d08 <func_shell_base@@Base+0x94c>  // b.any
  412d3c:	ldr	x0, [sp, #1160]
  412d40:	ldrb	w0, [x0]
  412d44:	cmp	w0, #0x0
  412d48:	b.ne	412d78 <func_shell_base@@Base+0x9bc>  // b.any
  412d4c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  412d50:	add	x0, x0, #0xcd8
  412d54:	ldr	x0, [x0]
  412d58:	ldr	x19, [x0]
  412d5c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412d60:	add	x0, x0, #0xc38
  412d64:	bl	406e40 <gettext@plt>
  412d68:	mov	x2, x0
  412d6c:	mov	x1, #0x0                   	// #0
  412d70:	mov	x0, x19
  412d74:	bl	424098 <fatal@@Base>
  412d78:	bl	406dd0 <__errno_location@plt>
  412d7c:	str	wzr, [x0]
  412d80:	ldr	x1, [sp, #1152]
  412d84:	ldr	x0, [sp, #1160]
  412d88:	bl	406910 <fopen@plt>
  412d8c:	str	x0, [sp, #1120]
  412d90:	ldr	x0, [sp, #1120]
  412d94:	cmp	x0, #0x0
  412d98:	b.ne	412dac <func_shell_base@@Base+0x9f0>  // b.any
  412d9c:	bl	406dd0 <__errno_location@plt>
  412da0:	ldr	w0, [x0]
  412da4:	cmp	w0, #0x4
  412da8:	b.eq	412d78 <func_shell_base@@Base+0x9bc>  // b.none
  412dac:	ldr	x0, [sp, #1120]
  412db0:	cmp	x0, #0x0
  412db4:	b.ne	412e18 <func_shell_base@@Base+0xa5c>  // b.any
  412db8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  412dbc:	add	x0, x0, #0x40
  412dc0:	ldr	x19, [x0]
  412dc4:	ldr	x0, [sp, #1160]
  412dc8:	bl	4066f0 <strlen@plt>
  412dcc:	mov	x20, x0
  412dd0:	bl	406dd0 <__errno_location@plt>
  412dd4:	ldr	w0, [x0]
  412dd8:	bl	406ab0 <strerror@plt>
  412ddc:	bl	4066f0 <strlen@plt>
  412de0:	add	x20, x20, x0
  412de4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412de8:	add	x0, x0, #0xc50
  412dec:	bl	406e40 <gettext@plt>
  412df0:	mov	x21, x0
  412df4:	bl	406dd0 <__errno_location@plt>
  412df8:	ldr	w0, [x0]
  412dfc:	bl	406ab0 <strerror@plt>
  412e00:	mov	x4, x0
  412e04:	ldr	x3, [sp, #1160]
  412e08:	mov	x2, x21
  412e0c:	mov	x1, x20
  412e10:	mov	x0, x19
  412e14:	bl	424098 <fatal@@Base>
  412e18:	ldr	x0, [sp, #64]
  412e1c:	add	x0, x0, #0x8
  412e20:	ldr	x0, [x0]
  412e24:	cmp	x0, #0x0
  412e28:	b.eq	412f1c <func_shell_base@@Base+0xb60>  // b.none
  412e2c:	ldr	x0, [sp, #64]
  412e30:	add	x0, x0, #0x8
  412e34:	ldr	x0, [x0]
  412e38:	bl	4066f0 <strlen@plt>
  412e3c:	str	x0, [sp, #1112]
  412e40:	ldr	x0, [sp, #1112]
  412e44:	cmp	x0, #0x0
  412e48:	b.eq	412e70 <func_shell_base@@Base+0xab4>  // b.none
  412e4c:	ldr	x0, [sp, #64]
  412e50:	add	x0, x0, #0x8
  412e54:	ldr	x1, [x0]
  412e58:	ldr	x0, [sp, #1112]
  412e5c:	sub	x0, x0, #0x1
  412e60:	add	x0, x1, x0
  412e64:	ldrb	w0, [x0]
  412e68:	cmp	w0, #0xa
  412e6c:	b.eq	412e78 <func_shell_base@@Base+0xabc>  // b.none
  412e70:	mov	w0, #0x1                   	// #1
  412e74:	b	412e7c <func_shell_base@@Base+0xac0>
  412e78:	mov	w0, #0x0                   	// #0
  412e7c:	str	w0, [sp, #1108]
  412e80:	ldr	x0, [sp, #64]
  412e84:	add	x0, x0, #0x8
  412e88:	ldr	x0, [x0]
  412e8c:	ldr	x1, [sp, #1120]
  412e90:	bl	406700 <fputs@plt>
  412e94:	cmn	w0, #0x1
  412e98:	b.eq	412ebc <func_shell_base@@Base+0xb00>  // b.none
  412e9c:	ldr	w0, [sp, #1108]
  412ea0:	cmp	w0, #0x0
  412ea4:	b.eq	412f1c <func_shell_base@@Base+0xb60>  // b.none
  412ea8:	ldr	x1, [sp, #1120]
  412eac:	mov	w0, #0xa                   	// #10
  412eb0:	bl	4067f0 <fputc@plt>
  412eb4:	cmn	w0, #0x1
  412eb8:	b.ne	412f1c <func_shell_base@@Base+0xb60>  // b.any
  412ebc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  412ec0:	add	x0, x0, #0x40
  412ec4:	ldr	x19, [x0]
  412ec8:	ldr	x0, [sp, #1160]
  412ecc:	bl	4066f0 <strlen@plt>
  412ed0:	mov	x20, x0
  412ed4:	bl	406dd0 <__errno_location@plt>
  412ed8:	ldr	w0, [x0]
  412edc:	bl	406ab0 <strerror@plt>
  412ee0:	bl	4066f0 <strlen@plt>
  412ee4:	add	x20, x20, x0
  412ee8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412eec:	add	x0, x0, #0xc60
  412ef0:	bl	406e40 <gettext@plt>
  412ef4:	mov	x21, x0
  412ef8:	bl	406dd0 <__errno_location@plt>
  412efc:	ldr	w0, [x0]
  412f00:	bl	406ab0 <strerror@plt>
  412f04:	mov	x4, x0
  412f08:	ldr	x3, [sp, #1160]
  412f0c:	mov	x2, x21
  412f10:	mov	x1, x20
  412f14:	mov	x0, x19
  412f18:	bl	424098 <fatal@@Base>
  412f1c:	ldr	x0, [sp, #1120]
  412f20:	bl	4068e0 <fclose@plt>
  412f24:	cmp	w0, #0x0
  412f28:	b.eq	413300 <func_shell_base@@Base+0xf44>  // b.none
  412f2c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  412f30:	add	x0, x0, #0x40
  412f34:	ldr	x19, [x0]
  412f38:	ldr	x0, [sp, #1160]
  412f3c:	bl	4066f0 <strlen@plt>
  412f40:	mov	x20, x0
  412f44:	bl	406dd0 <__errno_location@plt>
  412f48:	ldr	w0, [x0]
  412f4c:	bl	406ab0 <strerror@plt>
  412f50:	bl	4066f0 <strlen@plt>
  412f54:	add	x20, x20, x0
  412f58:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  412f5c:	add	x0, x0, #0xc70
  412f60:	bl	406e40 <gettext@plt>
  412f64:	mov	x21, x0
  412f68:	bl	406dd0 <__errno_location@plt>
  412f6c:	ldr	w0, [x0]
  412f70:	bl	406ab0 <strerror@plt>
  412f74:	mov	x4, x0
  412f78:	ldr	x3, [sp, #1160]
  412f7c:	mov	x2, x21
  412f80:	mov	x1, x20
  412f84:	mov	x0, x19
  412f88:	bl	424098 <fatal@@Base>
  412f8c:	ldr	x0, [sp, #1160]
  412f90:	ldrb	w0, [x0]
  412f94:	cmp	w0, #0x3c
  412f98:	b.ne	4132c4 <func_shell_base@@Base+0xf08>  // b.any
  412f9c:	ldr	x0, [sp, #72]
  412fa0:	str	x0, [sp, #1144]
  412fa4:	ldr	x0, [sp, #1160]
  412fa8:	add	x0, x0, #0x1
  412fac:	str	x0, [sp, #1160]
  412fb0:	b	412fc0 <func_shell_base@@Base+0xc04>
  412fb4:	ldr	x0, [sp, #1160]
  412fb8:	add	x0, x0, #0x1
  412fbc:	str	x0, [sp, #1160]
  412fc0:	ldr	x0, [sp, #1160]
  412fc4:	ldrb	w0, [x0]
  412fc8:	mov	w1, w0
  412fcc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  412fd0:	add	x0, x0, #0x728
  412fd4:	sxtw	x1, w1
  412fd8:	ldrh	w0, [x0, x1, lsl #1]
  412fdc:	and	w0, w0, #0x6
  412fe0:	cmp	w0, #0x0
  412fe4:	b.ne	412fb4 <func_shell_base@@Base+0xbf8>  // b.any
  412fe8:	ldr	x0, [sp, #1160]
  412fec:	ldrb	w0, [x0]
  412ff0:	cmp	w0, #0x0
  412ff4:	b.ne	413024 <func_shell_base@@Base+0xc68>  // b.any
  412ff8:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  412ffc:	add	x0, x0, #0xcd8
  413000:	ldr	x0, [x0]
  413004:	ldr	x19, [x0]
  413008:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41300c:	add	x0, x0, #0xc38
  413010:	bl	406e40 <gettext@plt>
  413014:	mov	x2, x0
  413018:	mov	x1, #0x0                   	// #0
  41301c:	mov	x0, x19
  413020:	bl	424098 <fatal@@Base>
  413024:	ldr	x0, [sp, #64]
  413028:	add	x0, x0, #0x8
  41302c:	ldr	x0, [x0]
  413030:	cmp	x0, #0x0
  413034:	b.eq	413064 <func_shell_base@@Base+0xca8>  // b.none
  413038:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  41303c:	add	x0, x0, #0xcd8
  413040:	ldr	x0, [x0]
  413044:	ldr	x19, [x0]
  413048:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  41304c:	add	x0, x0, #0xc80
  413050:	bl	406e40 <gettext@plt>
  413054:	mov	x2, x0
  413058:	mov	x1, #0x0                   	// #0
  41305c:	mov	x0, x19
  413060:	bl	424098 <fatal@@Base>
  413064:	bl	406dd0 <__errno_location@plt>
  413068:	str	wzr, [x0]
  41306c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413070:	add	x1, x0, #0xca0
  413074:	ldr	x0, [sp, #1160]
  413078:	bl	406910 <fopen@plt>
  41307c:	str	x0, [sp, #1136]
  413080:	ldr	x0, [sp, #1136]
  413084:	cmp	x0, #0x0
  413088:	b.ne	41309c <func_shell_base@@Base+0xce0>  // b.any
  41308c:	bl	406dd0 <__errno_location@plt>
  413090:	ldr	w0, [x0]
  413094:	cmp	w0, #0x4
  413098:	b.eq	413064 <func_shell_base@@Base+0xca8>  // b.none
  41309c:	ldr	x0, [sp, #1136]
  4130a0:	cmp	x0, #0x0
  4130a4:	b.ne	413120 <func_shell_base@@Base+0xd64>  // b.any
  4130a8:	bl	406dd0 <__errno_location@plt>
  4130ac:	ldr	w0, [x0]
  4130b0:	cmp	w0, #0x2
  4130b4:	b.ne	4130c0 <func_shell_base@@Base+0xd04>  // b.any
  4130b8:	ldr	x0, [sp, #72]
  4130bc:	b	413304 <func_shell_base@@Base+0xf48>
  4130c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4130c4:	add	x0, x0, #0x40
  4130c8:	ldr	x19, [x0]
  4130cc:	ldr	x0, [sp, #1160]
  4130d0:	bl	4066f0 <strlen@plt>
  4130d4:	mov	x20, x0
  4130d8:	bl	406dd0 <__errno_location@plt>
  4130dc:	ldr	w0, [x0]
  4130e0:	bl	406ab0 <strerror@plt>
  4130e4:	bl	4066f0 <strlen@plt>
  4130e8:	add	x20, x20, x0
  4130ec:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4130f0:	add	x0, x0, #0xc50
  4130f4:	bl	406e40 <gettext@plt>
  4130f8:	mov	x21, x0
  4130fc:	bl	406dd0 <__errno_location@plt>
  413100:	ldr	w0, [x0]
  413104:	bl	406ab0 <strerror@plt>
  413108:	mov	x4, x0
  41310c:	ldr	x3, [sp, #1160]
  413110:	mov	x2, x21
  413114:	mov	x1, x20
  413118:	mov	x0, x19
  41311c:	bl	424098 <fatal@@Base>
  413120:	add	x0, sp, #0x50
  413124:	ldr	x3, [sp, #1136]
  413128:	mov	x2, #0x400                 	// #1024
  41312c:	mov	x1, #0x1                   	// #1
  413130:	bl	406be0 <fread@plt>
  413134:	str	x0, [sp, #1128]
  413138:	ldr	x0, [sp, #1128]
  41313c:	cmp	x0, #0x0
  413140:	b.eq	41315c <func_shell_base@@Base+0xda0>  // b.none
  413144:	add	x0, sp, #0x50
  413148:	ldr	x2, [sp, #1128]
  41314c:	mov	x1, x0
  413150:	ldr	x0, [sp, #72]
  413154:	bl	40b388 <variable_buffer_output@@Base>
  413158:	str	x0, [sp, #72]
  41315c:	ldr	x0, [sp, #1136]
  413160:	bl	406e90 <ferror@plt>
  413164:	cmp	w0, #0x0
  413168:	b.eq	4131dc <func_shell_base@@Base+0xe20>  // b.none
  41316c:	bl	406dd0 <__errno_location@plt>
  413170:	ldr	w0, [x0]
  413174:	cmp	w0, #0x4
  413178:	b.eq	4131dc <func_shell_base@@Base+0xe20>  // b.none
  41317c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  413180:	add	x0, x0, #0x40
  413184:	ldr	x19, [x0]
  413188:	ldr	x0, [sp, #1160]
  41318c:	bl	4066f0 <strlen@plt>
  413190:	mov	x20, x0
  413194:	bl	406dd0 <__errno_location@plt>
  413198:	ldr	w0, [x0]
  41319c:	bl	406ab0 <strerror@plt>
  4131a0:	bl	4066f0 <strlen@plt>
  4131a4:	add	x20, x20, x0
  4131a8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4131ac:	add	x0, x0, #0xca8
  4131b0:	bl	406e40 <gettext@plt>
  4131b4:	mov	x21, x0
  4131b8:	bl	406dd0 <__errno_location@plt>
  4131bc:	ldr	w0, [x0]
  4131c0:	bl	406ab0 <strerror@plt>
  4131c4:	mov	x4, x0
  4131c8:	ldr	x3, [sp, #1160]
  4131cc:	mov	x2, x21
  4131d0:	mov	x1, x20
  4131d4:	mov	x0, x19
  4131d8:	bl	424098 <fatal@@Base>
  4131dc:	ldr	x0, [sp, #1136]
  4131e0:	bl	406b50 <feof@plt>
  4131e4:	cmp	w0, #0x0
  4131e8:	b.eq	413120 <func_shell_base@@Base+0xd64>  // b.none
  4131ec:	ldr	x0, [sp, #1136]
  4131f0:	bl	4068e0 <fclose@plt>
  4131f4:	cmp	w0, #0x0
  4131f8:	b.ne	413200 <func_shell_base@@Base+0xe44>  // b.any
  4131fc:	b	413260 <func_shell_base@@Base+0xea4>
  413200:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  413204:	add	x0, x0, #0x40
  413208:	ldr	x19, [x0]
  41320c:	ldr	x0, [sp, #1160]
  413210:	bl	4066f0 <strlen@plt>
  413214:	mov	x20, x0
  413218:	bl	406dd0 <__errno_location@plt>
  41321c:	ldr	w0, [x0]
  413220:	bl	406ab0 <strerror@plt>
  413224:	bl	4066f0 <strlen@plt>
  413228:	add	x20, x20, x0
  41322c:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413230:	add	x0, x0, #0xc70
  413234:	bl	406e40 <gettext@plt>
  413238:	mov	x21, x0
  41323c:	bl	406dd0 <__errno_location@plt>
  413240:	ldr	w0, [x0]
  413244:	bl	406ab0 <strerror@plt>
  413248:	mov	x4, x0
  41324c:	ldr	x3, [sp, #1160]
  413250:	mov	x2, x21
  413254:	mov	x1, x20
  413258:	mov	x0, x19
  41325c:	bl	424098 <fatal@@Base>
  413260:	ldr	x1, [sp, #72]
  413264:	ldr	x0, [sp, #1144]
  413268:	cmp	x1, x0
  41326c:	b.ls	413300 <func_shell_base@@Base+0xf44>  // b.plast
  413270:	ldr	x0, [sp, #72]
  413274:	sub	x0, x0, #0x1
  413278:	ldrb	w0, [x0]
  41327c:	cmp	w0, #0xa
  413280:	b.ne	413300 <func_shell_base@@Base+0xf44>  // b.any
  413284:	ldr	x0, [sp, #72]
  413288:	sub	x0, x0, #0x1
  41328c:	str	x0, [sp, #72]
  413290:	ldr	x1, [sp, #72]
  413294:	ldr	x0, [sp, #1144]
  413298:	cmp	x1, x0
  41329c:	b.ls	413300 <func_shell_base@@Base+0xf44>  // b.plast
  4132a0:	ldr	x0, [sp, #72]
  4132a4:	sub	x0, x0, #0x1
  4132a8:	ldrb	w0, [x0]
  4132ac:	cmp	w0, #0xd
  4132b0:	b.ne	413300 <func_shell_base@@Base+0xf44>  // b.any
  4132b4:	ldr	x0, [sp, #72]
  4132b8:	sub	x0, x0, #0x1
  4132bc:	str	x0, [sp, #72]
  4132c0:	b	413300 <func_shell_base@@Base+0xf44>
  4132c4:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  4132c8:	add	x0, x0, #0xcd8
  4132cc:	ldr	x0, [x0]
  4132d0:	ldr	x19, [x0]
  4132d4:	ldr	x0, [sp, #1160]
  4132d8:	bl	4066f0 <strlen@plt>
  4132dc:	mov	x20, x0
  4132e0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4132e4:	add	x0, x0, #0xcb8
  4132e8:	bl	406e40 <gettext@plt>
  4132ec:	ldr	x3, [sp, #1160]
  4132f0:	mov	x2, x0
  4132f4:	mov	x1, x20
  4132f8:	mov	x0, x19
  4132fc:	bl	424098 <fatal@@Base>
  413300:	ldr	x0, [sp, #72]
  413304:	ldp	x19, x20, [sp, #16]
  413308:	ldr	x21, [sp, #32]
  41330c:	ldp	x29, x30, [sp]
  413310:	add	sp, sp, #0x490
  413314:	ret
  413318:	mov	x12, #0x2060                	// #8288
  41331c:	sub	sp, sp, x12
  413320:	stp	x29, x30, [sp]
  413324:	mov	x29, sp
  413328:	str	x0, [sp, #40]
  41332c:	str	x1, [sp, #32]
  413330:	str	x2, [sp, #24]
  413334:	ldr	x0, [sp, #32]
  413338:	ldr	x0, [x0]
  41333c:	str	x0, [sp, #8264]
  413340:	str	xzr, [sp, #8272]
  413344:	str	wzr, [sp, #8284]
  413348:	str	xzr, [sp, #8256]
  41334c:	b	4133e0 <func_shell_base@@Base+0x1024>
  413350:	ldr	x0, [sp, #8256]
  413354:	cmp	x0, #0xfff
  413358:	b.hi	4133e0 <func_shell_base@@Base+0x1024>  // b.pmore
  41335c:	ldr	x1, [sp, #8256]
  413360:	add	x0, sp, #0x30
  413364:	mov	x2, x1
  413368:	ldr	x1, [sp, #8272]
  41336c:	bl	406d80 <strncpy@plt>
  413370:	ldr	x0, [sp, #8256]
  413374:	add	x1, sp, #0x30
  413378:	strb	wzr, [x1, x0]
  41337c:	add	x1, sp, #0x1, lsl #12
  413380:	add	x1, x1, #0x38
  413384:	add	x0, sp, #0x30
  413388:	bl	4127bc <func_shell_base@@Base+0x400>
  41338c:	cmp	x0, #0x0
  413390:	b.eq	4133e0 <func_shell_base@@Base+0x1024>  // b.none
  413394:	add	x0, sp, #0x1, lsl #12
  413398:	add	x0, x0, #0x38
  41339c:	bl	4066f0 <strlen@plt>
  4133a0:	mov	x1, x0
  4133a4:	add	x0, sp, #0x1, lsl #12
  4133a8:	add	x0, x0, #0x38
  4133ac:	mov	x2, x1
  4133b0:	mov	x1, x0
  4133b4:	ldr	x0, [sp, #40]
  4133b8:	bl	40b388 <variable_buffer_output@@Base>
  4133bc:	str	x0, [sp, #40]
  4133c0:	mov	x2, #0x1                   	// #1
  4133c4:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4133c8:	add	x1, x0, #0x9d0
  4133cc:	ldr	x0, [sp, #40]
  4133d0:	bl	40b388 <variable_buffer_output@@Base>
  4133d4:	str	x0, [sp, #40]
  4133d8:	mov	w0, #0x1                   	// #1
  4133dc:	str	w0, [sp, #8284]
  4133e0:	add	x1, sp, #0x2, lsl #12
  4133e4:	add	x1, x1, #0x40
  4133e8:	add	x0, sp, #0x2, lsl #12
  4133ec:	add	x0, x0, #0x48
  4133f0:	bl	4228ec <find_next_token@@Base>
  4133f4:	str	x0, [sp, #8272]
  4133f8:	ldr	x0, [sp, #8272]
  4133fc:	cmp	x0, #0x0
  413400:	b.ne	413350 <func_shell_base@@Base+0xf94>  // b.any
  413404:	ldr	w0, [sp, #8284]
  413408:	cmp	w0, #0x0
  41340c:	b.eq	41341c <func_shell_base@@Base+0x1060>  // b.none
  413410:	ldr	x0, [sp, #40]
  413414:	sub	x0, x0, #0x1
  413418:	str	x0, [sp, #40]
  41341c:	ldr	x0, [sp, #40]
  413420:	ldp	x29, x30, [sp]
  413424:	mov	x12, #0x2060                	// #8288
  413428:	add	sp, sp, x12
  41342c:	ret
  413430:	stp	x29, x30, [sp, #-80]!
  413434:	mov	x29, sp
  413438:	stp	x19, x20, [sp, #16]
  41343c:	str	x0, [sp, #56]
  413440:	str	w1, [sp, #52]
  413444:	str	x2, [sp, #40]
  413448:	str	x3, [sp, #32]
  41344c:	ldr	x0, [sp, #32]
  413450:	ldrb	w0, [x0, #17]
  413454:	mov	w1, w0
  413458:	ldr	w0, [sp, #52]
  41345c:	cmp	w0, w1
  413460:	b.ge	4134b4 <func_shell_base@@Base+0x10f8>  // b.tcont
  413464:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  413468:	add	x0, x0, #0xcd8
  41346c:	ldr	x0, [x0]
  413470:	ldr	x19, [x0]
  413474:	ldr	x0, [sp, #32]
  413478:	ldr	x0, [x0, #8]
  41347c:	bl	4066f0 <strlen@plt>
  413480:	mov	x20, x0
  413484:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413488:	add	x0, x0, #0xe50
  41348c:	bl	406e40 <gettext@plt>
  413490:	mov	x1, x0
  413494:	ldr	x0, [sp, #32]
  413498:	ldr	x0, [x0, #8]
  41349c:	mov	x4, x0
  4134a0:	ldr	w3, [sp, #52]
  4134a4:	mov	x2, x1
  4134a8:	mov	x1, x20
  4134ac:	mov	x0, x19
  4134b0:	bl	424098 <fatal@@Base>
  4134b4:	ldr	w0, [sp, #52]
  4134b8:	cmp	w0, #0x0
  4134bc:	b.ne	4134e0 <func_shell_base@@Base+0x1124>  // b.any
  4134c0:	ldr	x0, [sp, #32]
  4134c4:	ldrb	w0, [x0, #19]
  4134c8:	and	w0, w0, #0x2
  4134cc:	and	w0, w0, #0xff
  4134d0:	cmp	w0, #0x0
  4134d4:	b.ne	4134e0 <func_shell_base@@Base+0x1124>  // b.any
  4134d8:	ldr	x0, [sp, #56]
  4134dc:	b	4135cc <func_shell_base@@Base+0x1210>
  4134e0:	ldr	x0, [sp, #32]
  4134e4:	ldr	x0, [x0]
  4134e8:	cmp	x0, #0x0
  4134ec:	b.ne	41353c <func_shell_base@@Base+0x1180>  // b.any
  4134f0:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  4134f4:	add	x0, x0, #0xcd8
  4134f8:	ldr	x0, [x0]
  4134fc:	ldr	x19, [x0]
  413500:	ldr	x0, [sp, #32]
  413504:	ldr	x0, [x0, #8]
  413508:	bl	4066f0 <strlen@plt>
  41350c:	mov	x20, x0
  413510:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413514:	add	x0, x0, #0xe88
  413518:	bl	406e40 <gettext@plt>
  41351c:	mov	x1, x0
  413520:	ldr	x0, [sp, #32]
  413524:	ldr	x0, [x0, #8]
  413528:	mov	x3, x0
  41352c:	mov	x2, x1
  413530:	mov	x1, x20
  413534:	mov	x0, x19
  413538:	bl	424098 <fatal@@Base>
  41353c:	ldr	x0, [sp, #32]
  413540:	ldrb	w0, [x0, #19]
  413544:	and	w0, w0, #0x2
  413548:	and	w0, w0, #0xff
  41354c:	cmp	w0, #0x0
  413550:	b.ne	413578 <func_shell_base@@Base+0x11bc>  // b.any
  413554:	ldr	x0, [sp, #32]
  413558:	ldr	x3, [x0]
  41355c:	ldr	x0, [sp, #32]
  413560:	ldr	x0, [x0, #8]
  413564:	mov	x2, x0
  413568:	ldr	x1, [sp, #40]
  41356c:	ldr	x0, [sp, #56]
  413570:	blr	x3
  413574:	b	4135cc <func_shell_base@@Base+0x1210>
  413578:	ldr	x0, [sp, #32]
  41357c:	ldr	x3, [x0]
  413580:	ldr	x0, [sp, #32]
  413584:	ldr	x0, [x0, #8]
  413588:	ldr	w1, [sp, #52]
  41358c:	ldr	x2, [sp, #40]
  413590:	blr	x3
  413594:	str	x0, [sp, #72]
  413598:	ldr	x0, [sp, #72]
  41359c:	cmp	x0, #0x0
  4135a0:	b.eq	4135c8 <func_shell_base@@Base+0x120c>  // b.none
  4135a4:	ldr	x0, [sp, #72]
  4135a8:	bl	4066f0 <strlen@plt>
  4135ac:	mov	x2, x0
  4135b0:	ldr	x1, [sp, #72]
  4135b4:	ldr	x0, [sp, #56]
  4135b8:	bl	40b388 <variable_buffer_output@@Base>
  4135bc:	str	x0, [sp, #56]
  4135c0:	ldr	x0, [sp, #72]
  4135c4:	bl	406c00 <free@plt>
  4135c8:	ldr	x0, [sp, #56]
  4135cc:	ldp	x19, x20, [sp, #16]
  4135d0:	ldp	x29, x30, [sp], #80
  4135d4:	ret

00000000004135d8 <handle_function@@Base>:
  4135d8:	stp	x29, x30, [sp, #-176]!
  4135dc:	mov	x29, sp
  4135e0:	stp	x19, x20, [sp, #16]
  4135e4:	str	x0, [x29, #40]
  4135e8:	str	x1, [x29, #32]
  4135ec:	ldr	x0, [x29, #32]
  4135f0:	ldr	x0, [x0]
  4135f4:	ldrb	w0, [x0]
  4135f8:	strb	w0, [x29, #95]
  4135fc:	ldrb	w0, [x29, #95]
  413600:	cmp	w0, #0x28
  413604:	b.ne	413610 <handle_function@@Base+0x38>  // b.any
  413608:	mov	w0, #0x29                  	// #41
  41360c:	b	413614 <handle_function@@Base+0x3c>
  413610:	mov	w0, #0x7d                  	// #125
  413614:	strb	w0, [x29, #94]
  413618:	str	wzr, [x29, #156]
  41361c:	str	xzr, [x29, #144]
  413620:	ldr	x0, [x29, #32]
  413624:	ldr	x0, [x0]
  413628:	add	x0, x0, #0x1
  41362c:	str	x0, [x29, #168]
  413630:	ldr	x0, [x29, #168]
  413634:	bl	40fb8c <patsubst_expand@@Base+0x84>
  413638:	str	x0, [x29, #80]
  41363c:	ldr	x0, [x29, #80]
  413640:	cmp	x0, #0x0
  413644:	b.ne	413650 <handle_function@@Base+0x78>  // b.any
  413648:	mov	w0, #0x0                   	// #0
  41364c:	b	413a54 <handle_function@@Base+0x47c>
  413650:	ldr	x0, [x29, #80]
  413654:	ldrb	w0, [x0, #16]
  413658:	and	x0, x0, #0xff
  41365c:	ldr	x1, [x29, #168]
  413660:	add	x0, x1, x0
  413664:	str	x0, [x29, #168]
  413668:	b	413678 <handle_function@@Base+0xa0>
  41366c:	ldr	x0, [x29, #168]
  413670:	add	x0, x0, #0x1
  413674:	str	x0, [x29, #168]
  413678:	ldr	x0, [x29, #168]
  41367c:	ldrb	w0, [x0]
  413680:	mov	w1, w0
  413684:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413688:	add	x0, x0, #0x728
  41368c:	sxtw	x1, w1
  413690:	ldrh	w0, [x0, x1, lsl #1]
  413694:	and	w0, w0, #0x6
  413698:	cmp	w0, #0x0
  41369c:	b.ne	41366c <handle_function@@Base+0x94>  // b.any
  4136a0:	mov	w0, #0x1                   	// #1
  4136a4:	str	w0, [x29, #132]
  4136a8:	ldr	x0, [x29, #168]
  4136ac:	str	x0, [x29, #160]
  4136b0:	b	413768 <handle_function@@Base+0x190>
  4136b4:	ldr	x0, [x29, #160]
  4136b8:	ldrb	w0, [x0]
  4136bc:	mov	w1, w0
  4136c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4136c4:	add	x0, x0, #0x728
  4136c8:	sxtw	x1, w1
  4136cc:	ldrh	w0, [x0, x1, lsl #1]
  4136d0:	mov	w1, w0
  4136d4:	mov	w0, #0x480                 	// #1152
  4136d8:	and	w0, w1, w0
  4136dc:	cmp	w0, #0x0
  4136e0:	b.eq	413758 <handle_function@@Base+0x180>  // b.none
  4136e4:	ldr	x0, [x29, #160]
  4136e8:	ldrb	w0, [x0]
  4136ec:	cmp	w0, #0x2c
  4136f0:	b.ne	413704 <handle_function@@Base+0x12c>  // b.any
  4136f4:	ldr	w0, [x29, #132]
  4136f8:	add	w0, w0, #0x1
  4136fc:	str	w0, [x29, #132]
  413700:	b	41375c <handle_function@@Base+0x184>
  413704:	ldr	x0, [x29, #160]
  413708:	ldrb	w0, [x0]
  41370c:	ldrb	w1, [x29, #95]
  413710:	cmp	w1, w0
  413714:	b.ne	413728 <handle_function@@Base+0x150>  // b.any
  413718:	ldr	w0, [x29, #156]
  41371c:	add	w0, w0, #0x1
  413720:	str	w0, [x29, #156]
  413724:	b	41375c <handle_function@@Base+0x184>
  413728:	ldr	x0, [x29, #160]
  41372c:	ldrb	w0, [x0]
  413730:	ldrb	w1, [x29, #94]
  413734:	cmp	w1, w0
  413738:	b.ne	41375c <handle_function@@Base+0x184>  // b.any
  41373c:	ldr	w0, [x29, #156]
  413740:	sub	w0, w0, #0x1
  413744:	str	w0, [x29, #156]
  413748:	ldr	w0, [x29, #156]
  41374c:	cmp	w0, #0x0
  413750:	b.lt	41377c <handle_function@@Base+0x1a4>  // b.tstop
  413754:	b	41375c <handle_function@@Base+0x184>
  413758:	nop
  41375c:	ldr	x0, [x29, #160]
  413760:	add	x0, x0, #0x1
  413764:	str	x0, [x29, #160]
  413768:	ldr	x0, [x29, #160]
  41376c:	ldrb	w0, [x0]
  413770:	cmp	w0, #0x0
  413774:	b.ne	4136b4 <handle_function@@Base+0xdc>  // b.any
  413778:	b	413780 <handle_function@@Base+0x1a8>
  41377c:	nop
  413780:	ldr	w0, [x29, #156]
  413784:	cmp	w0, #0x0
  413788:	b.lt	4137dc <handle_function@@Base+0x204>  // b.tstop
  41378c:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  413790:	add	x0, x0, #0xcd8
  413794:	ldr	x0, [x0]
  413798:	ldr	x19, [x0]
  41379c:	ldr	x0, [x29, #80]
  4137a0:	ldr	x0, [x0, #8]
  4137a4:	bl	4066f0 <strlen@plt>
  4137a8:	mov	x20, x0
  4137ac:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  4137b0:	add	x0, x0, #0xeb8
  4137b4:	bl	406e40 <gettext@plt>
  4137b8:	mov	x2, x0
  4137bc:	ldr	x0, [x29, #80]
  4137c0:	ldr	x0, [x0, #8]
  4137c4:	ldrb	w1, [x29, #94]
  4137c8:	mov	w4, w1
  4137cc:	mov	x3, x0
  4137d0:	mov	x1, x20
  4137d4:	mov	x0, x19
  4137d8:	bl	424098 <fatal@@Base>
  4137dc:	ldr	x0, [x29, #32]
  4137e0:	ldr	x1, [x29, #160]
  4137e4:	str	x1, [x0]
  4137e8:	ldr	w0, [x29, #132]
  4137ec:	add	w0, w0, #0x2
  4137f0:	sxtw	x0, w0
  4137f4:	lsl	x0, x0, #3
  4137f8:	add	x0, x0, #0xf
  4137fc:	lsr	x0, x0, #4
  413800:	lsl	x0, x0, #4
  413804:	sub	sp, sp, x0
  413808:	mov	x0, sp
  41380c:	add	x0, x0, #0xf
  413810:	lsr	x0, x0, #4
  413814:	lsl	x0, x0, #4
  413818:	str	x0, [x29, #72]
  41381c:	ldr	x0, [x29, #72]
  413820:	str	x0, [x29, #136]
  413824:	ldr	x0, [x29, #80]
  413828:	ldrb	w0, [x0, #19]
  41382c:	and	w0, w0, #0x1
  413830:	and	w0, w0, #0xff
  413834:	cmp	w0, #0x0
  413838:	b.eq	4138e0 <handle_function@@Base+0x308>  // b.none
  41383c:	ldr	x0, [x29, #168]
  413840:	str	x0, [x29, #120]
  413844:	str	wzr, [x29, #132]
  413848:	b	4138cc <handle_function@@Base+0x2f4>
  41384c:	ldr	w0, [x29, #132]
  413850:	add	w0, w0, #0x1
  413854:	str	w0, [x29, #132]
  413858:	ldr	x0, [x29, #80]
  41385c:	ldrb	w0, [x0, #18]
  413860:	mov	w1, w0
  413864:	ldr	w0, [x29, #132]
  413868:	cmp	w0, w1
  41386c:	b.eq	413894 <handle_function@@Base+0x2bc>  // b.none
  413870:	ldr	x3, [x29, #160]
  413874:	ldr	x2, [x29, #120]
  413878:	ldrb	w1, [x29, #94]
  41387c:	ldrb	w0, [x29, #95]
  413880:	bl	40fdf0 <pattern_matches@@Base+0x1a0>
  413884:	str	x0, [x29, #112]
  413888:	ldr	x0, [x29, #112]
  41388c:	cmp	x0, #0x0
  413890:	b.ne	41389c <handle_function@@Base+0x2c4>  // b.any
  413894:	ldr	x0, [x29, #160]
  413898:	str	x0, [x29, #112]
  41389c:	ldr	x1, [x29, #112]
  4138a0:	ldr	x0, [x29, #120]
  4138a4:	bl	40bf5c <expand_argument@@Base>
  4138a8:	mov	x1, x0
  4138ac:	ldr	x0, [x29, #136]
  4138b0:	str	x1, [x0]
  4138b4:	ldr	x0, [x29, #112]
  4138b8:	add	x0, x0, #0x1
  4138bc:	str	x0, [x29, #120]
  4138c0:	ldr	x0, [x29, #136]
  4138c4:	add	x0, x0, #0x8
  4138c8:	str	x0, [x29, #136]
  4138cc:	ldr	x1, [x29, #120]
  4138d0:	ldr	x0, [x29, #160]
  4138d4:	cmp	x1, x0
  4138d8:	b.ls	41384c <handle_function@@Base+0x274>  // b.plast
  4138dc:	b	4139cc <handle_function@@Base+0x3f4>
  4138e0:	ldr	x1, [x29, #160]
  4138e4:	ldr	x0, [x29, #168]
  4138e8:	sub	x0, x1, x0
  4138ec:	str	x0, [x29, #64]
  4138f0:	ldr	x0, [x29, #64]
  4138f4:	add	x0, x0, #0x1
  4138f8:	bl	42268c <xmalloc@@Base>
  4138fc:	str	x0, [x29, #144]
  413900:	ldr	x2, [x29, #64]
  413904:	ldr	x1, [x29, #168]
  413908:	ldr	x0, [x29, #144]
  41390c:	bl	4066b0 <memcpy@plt>
  413910:	ldr	x1, [x29, #144]
  413914:	ldr	x0, [x29, #64]
  413918:	add	x0, x1, x0
  41391c:	strb	wzr, [x0]
  413920:	ldr	x1, [x29, #144]
  413924:	ldr	x0, [x29, #64]
  413928:	add	x0, x1, x0
  41392c:	str	x0, [x29, #56]
  413930:	ldr	x0, [x29, #144]
  413934:	str	x0, [x29, #104]
  413938:	str	wzr, [x29, #132]
  41393c:	b	4139bc <handle_function@@Base+0x3e4>
  413940:	ldr	w0, [x29, #132]
  413944:	add	w0, w0, #0x1
  413948:	str	w0, [x29, #132]
  41394c:	ldr	x0, [x29, #80]
  413950:	ldrb	w0, [x0, #18]
  413954:	mov	w1, w0
  413958:	ldr	w0, [x29, #132]
  41395c:	cmp	w0, w1
  413960:	b.eq	413988 <handle_function@@Base+0x3b0>  // b.none
  413964:	ldr	x3, [x29, #56]
  413968:	ldr	x2, [x29, #104]
  41396c:	ldrb	w1, [x29, #94]
  413970:	ldrb	w0, [x29, #95]
  413974:	bl	40fdf0 <pattern_matches@@Base+0x1a0>
  413978:	str	x0, [x29, #96]
  41397c:	ldr	x0, [x29, #96]
  413980:	cmp	x0, #0x0
  413984:	b.ne	413990 <handle_function@@Base+0x3b8>  // b.any
  413988:	ldr	x0, [x29, #56]
  41398c:	str	x0, [x29, #96]
  413990:	ldr	x0, [x29, #136]
  413994:	ldr	x1, [x29, #104]
  413998:	str	x1, [x0]
  41399c:	ldr	x0, [x29, #96]
  4139a0:	strb	wzr, [x0]
  4139a4:	ldr	x0, [x29, #96]
  4139a8:	add	x0, x0, #0x1
  4139ac:	str	x0, [x29, #104]
  4139b0:	ldr	x0, [x29, #136]
  4139b4:	add	x0, x0, #0x8
  4139b8:	str	x0, [x29, #136]
  4139bc:	ldr	x1, [x29, #104]
  4139c0:	ldr	x0, [x29, #56]
  4139c4:	cmp	x1, x0
  4139c8:	b.ls	413940 <handle_function@@Base+0x368>  // b.plast
  4139cc:	ldr	x0, [x29, #136]
  4139d0:	str	xzr, [x0]
  4139d4:	ldr	x0, [x29, #40]
  4139d8:	ldr	x0, [x0]
  4139dc:	ldr	x3, [x29, #80]
  4139e0:	ldr	x2, [x29, #72]
  4139e4:	ldr	w1, [x29, #132]
  4139e8:	bl	413430 <func_shell_base@@Base+0x1074>
  4139ec:	mov	x1, x0
  4139f0:	ldr	x0, [x29, #40]
  4139f4:	str	x1, [x0]
  4139f8:	ldr	x0, [x29, #80]
  4139fc:	ldrb	w0, [x0, #19]
  413a00:	and	w0, w0, #0x1
  413a04:	and	w0, w0, #0xff
  413a08:	cmp	w0, #0x0
  413a0c:	b.eq	413a48 <handle_function@@Base+0x470>  // b.none
  413a10:	ldr	x0, [x29, #72]
  413a14:	str	x0, [x29, #136]
  413a18:	b	413a34 <handle_function@@Base+0x45c>
  413a1c:	ldr	x0, [x29, #136]
  413a20:	ldr	x0, [x0]
  413a24:	bl	406c00 <free@plt>
  413a28:	ldr	x0, [x29, #136]
  413a2c:	add	x0, x0, #0x8
  413a30:	str	x0, [x29, #136]
  413a34:	ldr	x0, [x29, #136]
  413a38:	ldr	x0, [x0]
  413a3c:	cmp	x0, #0x0
  413a40:	b.ne	413a1c <handle_function@@Base+0x444>  // b.any
  413a44:	b	413a50 <handle_function@@Base+0x478>
  413a48:	ldr	x0, [x29, #144]
  413a4c:	bl	406c00 <free@plt>
  413a50:	mov	w0, #0x1                   	// #1
  413a54:	mov	sp, x29
  413a58:	ldp	x19, x20, [sp, #16]
  413a5c:	ldp	x29, x30, [sp], #176
  413a60:	ret
  413a64:	stp	x29, x30, [sp, #-144]!
  413a68:	mov	x29, sp
  413a6c:	str	x19, [sp, #16]
  413a70:	str	x0, [x29, #56]
  413a74:	str	x1, [x29, #48]
  413a78:	str	x2, [x29, #40]
  413a7c:	ldr	x0, [x29, #48]
  413a80:	ldr	x0, [x0]
  413a84:	bl	4228a0 <next_token@@Base>
  413a88:	str	x0, [x29, #128]
  413a8c:	ldr	x0, [x29, #128]
  413a90:	bl	422854 <end_of_token@@Base>
  413a94:	strb	wzr, [x0]
  413a98:	ldr	x0, [x29, #128]
  413a9c:	ldrb	w0, [x0]
  413aa0:	cmp	w0, #0x0
  413aa4:	b.ne	413ab0 <handle_function@@Base+0x4d8>  // b.any
  413aa8:	ldr	x0, [x29, #56]
  413aac:	b	413dd0 <handle_function@@Base+0x7f8>
  413ab0:	ldr	x0, [x29, #128]
  413ab4:	bl	40fb8c <patsubst_expand@@Base+0x84>
  413ab8:	str	x0, [x29, #120]
  413abc:	ldr	x0, [x29, #120]
  413ac0:	cmp	x0, #0x0
  413ac4:	b.eq	413b1c <handle_function@@Base+0x544>  // b.none
  413ac8:	str	wzr, [x29, #140]
  413acc:	b	413adc <handle_function@@Base+0x504>
  413ad0:	ldr	w0, [x29, #140]
  413ad4:	add	w0, w0, #0x1
  413ad8:	str	w0, [x29, #140]
  413adc:	ldrsw	x0, [x29, #140]
  413ae0:	add	x0, x0, #0x1
  413ae4:	lsl	x0, x0, #3
  413ae8:	ldr	x1, [x29, #48]
  413aec:	add	x0, x1, x0
  413af0:	ldr	x0, [x0]
  413af4:	cmp	x0, #0x0
  413af8:	b.ne	413ad0 <handle_function@@Base+0x4f8>  // b.any
  413afc:	ldr	x0, [x29, #48]
  413b00:	add	x0, x0, #0x8
  413b04:	ldr	x3, [x29, #120]
  413b08:	mov	x2, x0
  413b0c:	ldr	w1, [x29, #140]
  413b10:	ldr	x0, [x29, #56]
  413b14:	bl	413430 <func_shell_base@@Base+0x1074>
  413b18:	b	413dd0 <handle_function@@Base+0x7f8>
  413b1c:	ldr	x0, [x29, #128]
  413b20:	bl	4066f0 <strlen@plt>
  413b24:	str	x0, [x29, #112]
  413b28:	ldr	x1, [x29, #112]
  413b2c:	ldr	x0, [x29, #128]
  413b30:	bl	431f68 <lookup_variable@@Base>
  413b34:	str	x0, [x29, #104]
  413b38:	ldr	x0, [x29, #104]
  413b3c:	cmp	x0, #0x0
  413b40:	b.ne	413b8c <handle_function@@Base+0x5b4>  // b.any
  413b44:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  413b48:	add	x0, x0, #0xa90
  413b4c:	ldr	w0, [x0]
  413b50:	cmp	w0, #0x0
  413b54:	b.eq	413b8c <handle_function@@Base+0x5b4>  // b.none
  413b58:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  413b5c:	add	x0, x0, #0x40
  413b60:	ldr	x19, [x0]
  413b64:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413b68:	add	x0, x0, #0xef0
  413b6c:	bl	406e40 <gettext@plt>
  413b70:	ldr	x1, [x29, #112]
  413b74:	ldr	x4, [x29, #128]
  413b78:	mov	w3, w1
  413b7c:	mov	x2, x0
  413b80:	ldr	x1, [x29, #112]
  413b84:	mov	x0, x19
  413b88:	bl	423e74 <error@@Base>
  413b8c:	ldr	x0, [x29, #104]
  413b90:	cmp	x0, #0x0
  413b94:	b.eq	413bac <handle_function@@Base+0x5d4>  // b.none
  413b98:	ldr	x0, [x29, #104]
  413b9c:	ldr	x0, [x0, #8]
  413ba0:	ldrb	w0, [x0]
  413ba4:	cmp	w0, #0x0
  413ba8:	b.ne	413bb4 <handle_function@@Base+0x5dc>  // b.any
  413bac:	ldr	x0, [x29, #56]
  413bb0:	b	413dd0 <handle_function@@Base+0x7f8>
  413bb4:	ldr	x0, [x29, #112]
  413bb8:	add	x0, x0, #0x4
  413bbc:	add	x0, x0, #0xf
  413bc0:	lsr	x0, x0, #4
  413bc4:	lsl	x0, x0, #4
  413bc8:	sub	sp, sp, x0
  413bcc:	mov	x0, sp
  413bd0:	add	x0, x0, #0xf
  413bd4:	lsr	x0, x0, #4
  413bd8:	lsl	x0, x0, #4
  413bdc:	str	x0, [x29, #96]
  413be0:	ldr	x0, [x29, #96]
  413be4:	mov	w1, #0x24                  	// #36
  413be8:	strb	w1, [x0]
  413bec:	ldr	x0, [x29, #96]
  413bf0:	add	x0, x0, #0x1
  413bf4:	mov	w1, #0x28                  	// #40
  413bf8:	strb	w1, [x0]
  413bfc:	ldr	x0, [x29, #96]
  413c00:	add	x0, x0, #0x2
  413c04:	ldr	x2, [x29, #112]
  413c08:	ldr	x1, [x29, #128]
  413c0c:	bl	4066b0 <memcpy@plt>
  413c10:	ldr	x0, [x29, #112]
  413c14:	add	x0, x0, #0x2
  413c18:	ldr	x1, [x29, #96]
  413c1c:	add	x0, x1, x0
  413c20:	mov	w1, #0x29                  	// #41
  413c24:	strb	w1, [x0]
  413c28:	ldr	x0, [x29, #112]
  413c2c:	add	x0, x0, #0x3
  413c30:	ldr	x1, [x29, #96]
  413c34:	add	x0, x1, x0
  413c38:	strb	wzr, [x0]
  413c3c:	bl	43249c <push_new_variable_scope@@Base>
  413c40:	str	wzr, [x29, #140]
  413c44:	b	413cbc <handle_function@@Base+0x6e4>
  413c48:	add	x3, x29, #0x50
  413c4c:	ldr	w2, [x29, #140]
  413c50:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413c54:	add	x1, x0, #0xa70
  413c58:	mov	x0, x3
  413c5c:	bl	406790 <sprintf@plt>
  413c60:	add	x0, x29, #0x50
  413c64:	bl	4066f0 <strlen@plt>
  413c68:	mov	x7, x0
  413c6c:	ldr	x0, [x29, #48]
  413c70:	ldr	x1, [x0]
  413c74:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413c78:	add	x0, x0, #0x3b8
  413c7c:	ldr	x0, [x0]
  413c80:	ldr	x2, [x0, #8]
  413c84:	add	x0, x29, #0x50
  413c88:	mov	x6, #0x0                   	// #0
  413c8c:	mov	x5, x2
  413c90:	mov	w4, #0x0                   	// #0
  413c94:	mov	w3, #0x6                   	// #6
  413c98:	mov	x2, x1
  413c9c:	mov	x1, x7
  413ca0:	bl	4316d8 <define_variable_in_set@@Base>
  413ca4:	ldr	w0, [x29, #140]
  413ca8:	add	w0, w0, #0x1
  413cac:	str	w0, [x29, #140]
  413cb0:	ldr	x0, [x29, #48]
  413cb4:	add	x0, x0, #0x8
  413cb8:	str	x0, [x29, #48]
  413cbc:	ldr	x0, [x29, #48]
  413cc0:	ldr	x0, [x0]
  413cc4:	cmp	x0, #0x0
  413cc8:	b.ne	413c48 <handle_function@@Base+0x670>  // b.any
  413ccc:	b	413d34 <handle_function@@Base+0x75c>
  413cd0:	add	x3, x29, #0x40
  413cd4:	ldr	w2, [x29, #140]
  413cd8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413cdc:	add	x1, x0, #0xa70
  413ce0:	mov	x0, x3
  413ce4:	bl	406790 <sprintf@plt>
  413ce8:	add	x0, x29, #0x40
  413cec:	bl	4066f0 <strlen@plt>
  413cf0:	mov	x1, x0
  413cf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413cf8:	add	x0, x0, #0x3b8
  413cfc:	ldr	x0, [x0]
  413d00:	ldr	x0, [x0, #8]
  413d04:	add	x7, x29, #0x40
  413d08:	mov	x6, #0x0                   	// #0
  413d0c:	mov	x5, x0
  413d10:	mov	w4, #0x0                   	// #0
  413d14:	mov	w3, #0x6                   	// #6
  413d18:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413d1c:	add	x2, x0, #0xba0
  413d20:	mov	x0, x7
  413d24:	bl	4316d8 <define_variable_in_set@@Base>
  413d28:	ldr	w0, [x29, #140]
  413d2c:	add	w0, w0, #0x1
  413d30:	str	w0, [x29, #140]
  413d34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413d38:	add	x0, x0, #0x610
  413d3c:	ldr	w0, [x0]
  413d40:	ldr	w1, [x29, #140]
  413d44:	cmp	w1, w0
  413d48:	b.lt	413cd0 <handle_function@@Base+0x6f8>  // b.tstop
  413d4c:	ldr	x0, [x29, #104]
  413d50:	ldr	w1, [x0, #44]
  413d54:	orr	w1, w1, #0x7fff00
  413d58:	str	w1, [x0, #44]
  413d5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413d60:	add	x0, x0, #0x610
  413d64:	ldr	w0, [x0]
  413d68:	str	w0, [x29, #92]
  413d6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413d70:	add	x0, x0, #0x610
  413d74:	ldr	w1, [x29, #140]
  413d78:	str	w1, [x0]
  413d7c:	ldr	x0, [x29, #112]
  413d80:	add	x0, x0, #0x3
  413d84:	mov	x2, x0
  413d88:	ldr	x1, [x29, #96]
  413d8c:	ldr	x0, [x29, #56]
  413d90:	bl	40b84c <variable_expand_string@@Base>
  413d94:	str	x0, [x29, #56]
  413d98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413d9c:	add	x0, x0, #0x610
  413da0:	ldr	w1, [x29, #92]
  413da4:	str	w1, [x0]
  413da8:	ldr	x0, [x29, #104]
  413dac:	ldr	w1, [x0, #44]
  413db0:	and	w1, w1, #0xff8000ff
  413db4:	str	w1, [x0, #44]
  413db8:	bl	432574 <pop_variable_scope@@Base>
  413dbc:	ldr	x0, [x29, #56]
  413dc0:	bl	4066f0 <strlen@plt>
  413dc4:	mov	x1, x0
  413dc8:	ldr	x0, [x29, #56]
  413dcc:	add	x0, x0, x1
  413dd0:	mov	sp, x29
  413dd4:	ldr	x19, [sp, #16]
  413dd8:	ldp	x29, x30, [sp], #144
  413ddc:	ret

0000000000413de0 <define_new_function@@Base>:
  413de0:	stp	x29, x30, [sp, #-112]!
  413de4:	mov	x29, sp
  413de8:	str	x19, [sp, #16]
  413dec:	str	x0, [sp, #72]
  413df0:	str	x1, [sp, #64]
  413df4:	str	w2, [sp, #60]
  413df8:	str	w3, [sp, #56]
  413dfc:	str	w4, [sp, #52]
  413e00:	str	x5, [sp, #40]
  413e04:	ldr	x0, [sp, #64]
  413e08:	str	x0, [sp, #104]
  413e0c:	b	413e1c <define_new_function@@Base+0x3c>
  413e10:	ldr	x0, [sp, #104]
  413e14:	add	x0, x0, #0x1
  413e18:	str	x0, [sp, #104]
  413e1c:	ldr	x0, [sp, #104]
  413e20:	ldrb	w0, [x0]
  413e24:	mov	w1, w0
  413e28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  413e2c:	add	x0, x0, #0x728
  413e30:	sxtw	x1, w1
  413e34:	ldrh	w0, [x0, x1, lsl #1]
  413e38:	and	w0, w0, #0x2000
  413e3c:	cmp	w0, #0x0
  413e40:	b.ne	413e10 <define_new_function@@Base+0x30>  // b.any
  413e44:	ldr	x1, [sp, #104]
  413e48:	ldr	x0, [sp, #64]
  413e4c:	sub	x0, x1, x0
  413e50:	str	x0, [sp, #96]
  413e54:	ldr	x0, [sp, #96]
  413e58:	cmp	x0, #0x0
  413e5c:	b.ne	413e7c <define_new_function@@Base+0x9c>  // b.any
  413e60:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413e64:	add	x0, x0, #0xf18
  413e68:	bl	406e40 <gettext@plt>
  413e6c:	mov	x2, x0
  413e70:	mov	x1, #0x0                   	// #0
  413e74:	ldr	x0, [sp, #72]
  413e78:	bl	424098 <fatal@@Base>
  413e7c:	ldr	x0, [sp, #64]
  413e80:	ldrb	w0, [x0]
  413e84:	cmp	w0, #0x2e
  413e88:	b.eq	413e9c <define_new_function@@Base+0xbc>  // b.none
  413e8c:	ldr	x0, [sp, #104]
  413e90:	ldrb	w0, [x0]
  413e94:	cmp	w0, #0x0
  413e98:	b.eq	413ec8 <define_new_function@@Base+0xe8>  // b.none
  413e9c:	ldr	x0, [sp, #64]
  413ea0:	bl	4066f0 <strlen@plt>
  413ea4:	mov	x19, x0
  413ea8:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413eac:	add	x0, x0, #0xf30
  413eb0:	bl	406e40 <gettext@plt>
  413eb4:	ldr	x3, [sp, #64]
  413eb8:	mov	x2, x0
  413ebc:	mov	x1, x19
  413ec0:	ldr	x0, [sp, #72]
  413ec4:	bl	424098 <fatal@@Base>
  413ec8:	ldr	x0, [sp, #96]
  413ecc:	cmp	x0, #0xff
  413ed0:	b.ls	413f00 <define_new_function@@Base+0x120>  // b.plast
  413ed4:	ldr	x0, [sp, #64]
  413ed8:	bl	4066f0 <strlen@plt>
  413edc:	mov	x19, x0
  413ee0:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413ee4:	add	x0, x0, #0xf50
  413ee8:	bl	406e40 <gettext@plt>
  413eec:	ldr	x3, [sp, #64]
  413ef0:	mov	x2, x0
  413ef4:	mov	x1, x19
  413ef8:	ldr	x0, [sp, #72]
  413efc:	bl	424098 <fatal@@Base>
  413f00:	ldr	w0, [sp, #60]
  413f04:	cmp	w0, #0xff
  413f08:	b.ls	413f3c <define_new_function@@Base+0x15c>  // b.plast
  413f0c:	ldr	x0, [sp, #64]
  413f10:	bl	4066f0 <strlen@plt>
  413f14:	add	x19, x0, #0x14
  413f18:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413f1c:	add	x0, x0, #0xf70
  413f20:	bl	406e40 <gettext@plt>
  413f24:	ldr	x4, [sp, #64]
  413f28:	ldr	w3, [sp, #60]
  413f2c:	mov	x2, x0
  413f30:	mov	x1, x19
  413f34:	ldr	x0, [sp, #72]
  413f38:	bl	424098 <fatal@@Base>
  413f3c:	ldr	w0, [sp, #56]
  413f40:	cmp	w0, #0xff
  413f44:	b.hi	413f64 <define_new_function@@Base+0x184>  // b.pmore
  413f48:	ldr	w0, [sp, #56]
  413f4c:	cmp	w0, #0x0
  413f50:	b.eq	413f94 <define_new_function@@Base+0x1b4>  // b.none
  413f54:	ldr	w1, [sp, #56]
  413f58:	ldr	w0, [sp, #60]
  413f5c:	cmp	w1, w0
  413f60:	b.cs	413f94 <define_new_function@@Base+0x1b4>  // b.hs, b.nlast
  413f64:	ldr	x0, [sp, #64]
  413f68:	bl	4066f0 <strlen@plt>
  413f6c:	add	x19, x0, #0x14
  413f70:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  413f74:	add	x0, x0, #0xfa8
  413f78:	bl	406e40 <gettext@plt>
  413f7c:	ldr	x4, [sp, #64]
  413f80:	ldr	w3, [sp, #56]
  413f84:	mov	x2, x0
  413f88:	mov	x1, x19
  413f8c:	ldr	x0, [sp, #72]
  413f90:	bl	424098 <fatal@@Base>
  413f94:	mov	x0, #0x18                  	// #24
  413f98:	bl	42268c <xmalloc@@Base>
  413f9c:	str	x0, [sp, #88]
  413fa0:	ldr	x0, [sp, #88]
  413fa4:	ldr	x1, [sp, #64]
  413fa8:	str	x1, [x0, #8]
  413fac:	ldr	x0, [sp, #96]
  413fb0:	and	w1, w0, #0xff
  413fb4:	ldr	x0, [sp, #88]
  413fb8:	strb	w1, [x0, #16]
  413fbc:	ldr	w0, [sp, #60]
  413fc0:	and	w1, w0, #0xff
  413fc4:	ldr	x0, [sp, #88]
  413fc8:	strb	w1, [x0, #17]
  413fcc:	ldr	w0, [sp, #56]
  413fd0:	and	w1, w0, #0xff
  413fd4:	ldr	x0, [sp, #88]
  413fd8:	strb	w1, [x0, #18]
  413fdc:	ldr	w0, [sp, #52]
  413fe0:	and	w0, w0, #0x1
  413fe4:	cmp	w0, #0x0
  413fe8:	cset	w0, eq  // eq = none
  413fec:	and	w2, w0, #0xff
  413ff0:	ldr	x1, [sp, #88]
  413ff4:	ldrb	w0, [x1, #19]
  413ff8:	bfxil	w0, w2, #0, #1
  413ffc:	strb	w0, [x1, #19]
  414000:	ldr	x0, [sp, #88]
  414004:	ldrb	w1, [x0, #19]
  414008:	orr	w1, w1, #0x2
  41400c:	strb	w1, [x0, #19]
  414010:	ldr	x0, [sp, #88]
  414014:	ldr	x1, [sp, #40]
  414018:	str	x1, [x0]
  41401c:	ldr	x1, [sp, #88]
  414020:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414024:	add	x0, x0, #0x5a0
  414028:	bl	4143fc <hash_insert@@Base>
  41402c:	nop
  414030:	ldr	x19, [sp, #16]
  414034:	ldp	x29, x30, [sp], #112
  414038:	ret

000000000041403c <hash_init_function_table@@Base>:
  41403c:	stp	x29, x30, [sp, #-16]!
  414040:	mov	x29, sp
  414044:	adrp	x0, 40f000 <print_file_data_base@@Base+0x290>
  414048:	add	x4, x0, #0x50c
  41404c:	adrp	x0, 40f000 <print_file_data_base@@Base+0x290>
  414050:	add	x3, x0, #0x4ec
  414054:	adrp	x0, 40f000 <print_file_data_base@@Base+0x290>
  414058:	add	x2, x0, #0x498
  41405c:	mov	x1, #0x48                  	// #72
  414060:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414064:	add	x0, x0, #0x5a0
  414068:	bl	4140a8 <hash_init@@Base>
  41406c:	mov	x3, #0x18                  	// #24
  414070:	mov	x2, #0x24                  	// #36
  414074:	adrp	x0, 452000 <memcpy@GLIBC_2.17>
  414078:	add	x1, x0, #0xce0
  41407c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414080:	add	x0, x0, #0x5a0
  414084:	bl	4141c8 <hash_load@@Base>
  414088:	nop
  41408c:	ldp	x29, x30, [sp], #16
  414090:	ret

0000000000414094 <guile_gmake_setup@@Base>:
  414094:	sub	sp, sp, #0x10
  414098:	str	x0, [sp, #8]
  41409c:	mov	w0, #0x1                   	// #1
  4140a0:	add	sp, sp, #0x10
  4140a4:	ret

00000000004140a8 <hash_init@@Base>:
  4140a8:	stp	x29, x30, [sp, #-80]!
  4140ac:	mov	x29, sp
  4140b0:	str	x19, [sp, #16]
  4140b4:	str	x0, [sp, #72]
  4140b8:	str	x1, [sp, #64]
  4140bc:	str	x2, [sp, #56]
  4140c0:	str	x3, [sp, #48]
  4140c4:	str	x4, [sp, #40]
  4140c8:	ldr	x0, [sp, #64]
  4140cc:	bl	414c5c <hash_dump@@Base+0x108>
  4140d0:	mov	x1, x0
  4140d4:	ldr	x0, [sp, #72]
  4140d8:	str	x1, [x0, #32]
  4140dc:	ldr	x0, [sp, #72]
  4140e0:	ldr	x1, [x0, #32]
  4140e4:	ldr	x0, [sp, #72]
  4140e8:	str	x1, [x0, #56]
  4140ec:	ldr	x0, [sp, #72]
  4140f0:	ldr	x0, [x0, #32]
  4140f4:	lsl	x0, x0, #3
  4140f8:	bl	4226d4 <xcalloc@@Base>
  4140fc:	mov	x1, x0
  414100:	ldr	x0, [sp, #72]
  414104:	str	x1, [x0]
  414108:	ldr	x0, [sp, #72]
  41410c:	ldr	x0, [x0]
  414110:	cmp	x0, #0x0
  414114:	b.ne	414154 <hash_init@@Base+0xac>  // b.any
  414118:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41411c:	add	x0, x0, #0x3e8
  414120:	ldr	x19, [x0]
  414124:	adrp	x0, 438000 <_IO_stdin_used@@Base+0x1450>
  414128:	add	x0, x0, #0xfe0
  41412c:	bl	406e40 <gettext@plt>
  414130:	mov	x1, x0
  414134:	ldr	x0, [sp, #72]
  414138:	ldr	x0, [x0, #32]
  41413c:	lsl	x0, x0, #3
  414140:	mov	x2, x0
  414144:	mov	x0, x19
  414148:	bl	406e60 <fprintf@plt>
  41414c:	mov	w0, #0x1                   	// #1
  414150:	bl	406710 <exit@plt>
  414154:	ldr	x0, [sp, #72]
  414158:	ldr	x1, [x0, #32]
  41415c:	ldr	x0, [sp, #72]
  414160:	ldr	x0, [x0, #32]
  414164:	lsr	x0, x0, #4
  414168:	sub	x1, x1, x0
  41416c:	ldr	x0, [sp, #72]
  414170:	str	x1, [x0, #40]
  414174:	ldr	x0, [sp, #72]
  414178:	str	xzr, [x0, #48]
  41417c:	ldr	x0, [sp, #72]
  414180:	str	xzr, [x0, #64]
  414184:	ldr	x0, [sp, #72]
  414188:	str	xzr, [x0, #72]
  41418c:	ldr	x0, [sp, #72]
  414190:	str	wzr, [x0, #80]
  414194:	ldr	x0, [sp, #72]
  414198:	ldr	x1, [sp, #56]
  41419c:	str	x1, [x0, #8]
  4141a0:	ldr	x0, [sp, #72]
  4141a4:	ldr	x1, [sp, #48]
  4141a8:	str	x1, [x0, #16]
  4141ac:	ldr	x0, [sp, #72]
  4141b0:	ldr	x1, [sp, #40]
  4141b4:	str	x1, [x0, #24]
  4141b8:	nop
  4141bc:	ldr	x19, [sp, #16]
  4141c0:	ldp	x29, x30, [sp], #80
  4141c4:	ret

00000000004141c8 <hash_load@@Base>:
  4141c8:	stp	x29, x30, [sp, #-64]!
  4141cc:	mov	x29, sp
  4141d0:	str	x0, [sp, #40]
  4141d4:	str	x1, [sp, #32]
  4141d8:	str	x2, [sp, #24]
  4141dc:	str	x3, [sp, #16]
  4141e0:	ldr	x0, [sp, #32]
  4141e4:	str	x0, [sp, #56]
  4141e8:	b	414208 <hash_load@@Base+0x40>
  4141ec:	ldr	x1, [sp, #56]
  4141f0:	ldr	x0, [sp, #40]
  4141f4:	bl	4143fc <hash_insert@@Base>
  4141f8:	ldr	x1, [sp, #56]
  4141fc:	ldr	x0, [sp, #16]
  414200:	add	x0, x1, x0
  414204:	str	x0, [sp, #56]
  414208:	ldr	x0, [sp, #24]
  41420c:	sub	x1, x0, #0x1
  414210:	str	x1, [sp, #24]
  414214:	cmp	x0, #0x0
  414218:	b.ne	4141ec <hash_load@@Base+0x24>  // b.any
  41421c:	nop
  414220:	nop
  414224:	ldp	x29, x30, [sp], #64
  414228:	ret

000000000041422c <hash_find_slot@@Base>:
  41422c:	stp	x29, x30, [sp, #-64]!
  414230:	mov	x29, sp
  414234:	str	x0, [sp, #24]
  414238:	str	x1, [sp, #16]
  41423c:	str	xzr, [sp, #56]
  414240:	str	wzr, [sp, #52]
  414244:	ldr	x0, [sp, #24]
  414248:	ldr	x1, [x0, #8]
  41424c:	ldr	x0, [sp, #16]
  414250:	blr	x1
  414254:	str	w0, [sp, #48]
  414258:	ldr	x0, [sp, #24]
  41425c:	ldr	x0, [x0, #72]
  414260:	add	x1, x0, #0x1
  414264:	ldr	x0, [sp, #24]
  414268:	str	x1, [x0, #72]
  41426c:	ldr	x0, [sp, #24]
  414270:	ldr	x0, [x0, #32]
  414274:	sub	w0, w0, #0x1
  414278:	ldr	w1, [sp, #48]
  41427c:	and	w0, w1, w0
  414280:	str	w0, [sp, #48]
  414284:	ldr	x0, [sp, #24]
  414288:	ldr	x1, [x0]
  41428c:	ldr	w0, [sp, #48]
  414290:	lsl	x0, x0, #3
  414294:	add	x0, x1, x0
  414298:	str	x0, [sp, #40]
  41429c:	ldr	x0, [sp, #40]
  4142a0:	ldr	x0, [x0]
  4142a4:	cmp	x0, #0x0
  4142a8:	b.ne	4142c8 <hash_find_slot@@Base+0x9c>  // b.any
  4142ac:	ldr	x0, [sp, #56]
  4142b0:	cmp	x0, #0x0
  4142b4:	b.eq	4142c0 <hash_find_slot@@Base+0x94>  // b.none
  4142b8:	ldr	x0, [sp, #56]
  4142bc:	b	414390 <hash_find_slot@@Base+0x164>
  4142c0:	ldr	x0, [sp, #40]
  4142c4:	b	414390 <hash_find_slot@@Base+0x164>
  4142c8:	ldr	x0, [sp, #40]
  4142cc:	ldr	x1, [x0]
  4142d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4142d4:	add	x0, x0, #0x40
  4142d8:	ldr	x0, [x0]
  4142dc:	cmp	x1, x0
  4142e0:	b.ne	4142fc <hash_find_slot@@Base+0xd0>  // b.any
  4142e4:	ldr	x0, [sp, #56]
  4142e8:	cmp	x0, #0x0
  4142ec:	b.ne	414358 <hash_find_slot@@Base+0x12c>  // b.any
  4142f0:	ldr	x0, [sp, #40]
  4142f4:	str	x0, [sp, #56]
  4142f8:	b	414358 <hash_find_slot@@Base+0x12c>
  4142fc:	ldr	x0, [sp, #40]
  414300:	ldr	x0, [x0]
  414304:	ldr	x1, [sp, #16]
  414308:	cmp	x1, x0
  41430c:	b.ne	414318 <hash_find_slot@@Base+0xec>  // b.any
  414310:	ldr	x0, [sp, #40]
  414314:	b	414390 <hash_find_slot@@Base+0x164>
  414318:	ldr	x0, [sp, #24]
  41431c:	ldr	x2, [x0, #24]
  414320:	ldr	x0, [sp, #40]
  414324:	ldr	x0, [x0]
  414328:	mov	x1, x0
  41432c:	ldr	x0, [sp, #16]
  414330:	blr	x2
  414334:	cmp	w0, #0x0
  414338:	b.ne	414344 <hash_find_slot@@Base+0x118>  // b.any
  41433c:	ldr	x0, [sp, #40]
  414340:	b	414390 <hash_find_slot@@Base+0x164>
  414344:	ldr	x0, [sp, #24]
  414348:	ldr	x0, [x0, #64]
  41434c:	add	x1, x0, #0x1
  414350:	ldr	x0, [sp, #24]
  414354:	str	x1, [x0, #64]
  414358:	ldr	w0, [sp, #52]
  41435c:	cmp	w0, #0x0
  414360:	b.ne	41437c <hash_find_slot@@Base+0x150>  // b.any
  414364:	ldr	x0, [sp, #24]
  414368:	ldr	x1, [x0, #16]
  41436c:	ldr	x0, [sp, #16]
  414370:	blr	x1
  414374:	orr	w0, w0, #0x1
  414378:	str	w0, [sp, #52]
  41437c:	ldr	w1, [sp, #48]
  414380:	ldr	w0, [sp, #52]
  414384:	add	w0, w1, w0
  414388:	str	w0, [sp, #48]
  41438c:	b	41426c <hash_find_slot@@Base+0x40>
  414390:	ldp	x29, x30, [sp], #64
  414394:	ret

0000000000414398 <hash_find_item@@Base>:
  414398:	stp	x29, x30, [sp, #-48]!
  41439c:	mov	x29, sp
  4143a0:	str	x0, [sp, #24]
  4143a4:	str	x1, [sp, #16]
  4143a8:	ldr	x1, [sp, #16]
  4143ac:	ldr	x0, [sp, #24]
  4143b0:	bl	41422c <hash_find_slot@@Base>
  4143b4:	str	x0, [sp, #40]
  4143b8:	ldr	x0, [sp, #40]
  4143bc:	ldr	x0, [x0]
  4143c0:	cmp	x0, #0x0
  4143c4:	b.eq	4143f0 <hash_find_item@@Base+0x58>  // b.none
  4143c8:	ldr	x0, [sp, #40]
  4143cc:	ldr	x1, [x0]
  4143d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4143d4:	add	x0, x0, #0x40
  4143d8:	ldr	x0, [x0]
  4143dc:	cmp	x1, x0
  4143e0:	b.eq	4143f0 <hash_find_item@@Base+0x58>  // b.none
  4143e4:	ldr	x0, [sp, #40]
  4143e8:	ldr	x0, [x0]
  4143ec:	b	4143f4 <hash_find_item@@Base+0x5c>
  4143f0:	mov	x0, #0x0                   	// #0
  4143f4:	ldp	x29, x30, [sp], #48
  4143f8:	ret

00000000004143fc <hash_insert@@Base>:
  4143fc:	stp	x29, x30, [sp, #-48]!
  414400:	mov	x29, sp
  414404:	str	x0, [sp, #24]
  414408:	str	x1, [sp, #16]
  41440c:	ldr	x1, [sp, #16]
  414410:	ldr	x0, [sp, #24]
  414414:	bl	41422c <hash_find_slot@@Base>
  414418:	str	x0, [sp, #40]
  41441c:	ldr	x0, [sp, #40]
  414420:	ldr	x0, [x0]
  414424:	str	x0, [sp, #32]
  414428:	ldr	x2, [sp, #40]
  41442c:	ldr	x1, [sp, #16]
  414430:	ldr	x0, [sp, #24]
  414434:	bl	414470 <hash_insert_at@@Base>
  414438:	ldr	x0, [sp, #32]
  41443c:	cmp	x0, #0x0
  414440:	b.eq	414464 <hash_insert@@Base+0x68>  // b.none
  414444:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414448:	add	x0, x0, #0x40
  41444c:	ldr	x0, [x0]
  414450:	ldr	x1, [sp, #32]
  414454:	cmp	x1, x0
  414458:	b.eq	414464 <hash_insert@@Base+0x68>  // b.none
  41445c:	ldr	x0, [sp, #32]
  414460:	b	414468 <hash_insert@@Base+0x6c>
  414464:	mov	x0, #0x0                   	// #0
  414468:	ldp	x29, x30, [sp], #48
  41446c:	ret

0000000000414470 <hash_insert_at@@Base>:
  414470:	stp	x29, x30, [sp, #-64]!
  414474:	mov	x29, sp
  414478:	str	x0, [sp, #40]
  41447c:	str	x1, [sp, #32]
  414480:	str	x2, [sp, #24]
  414484:	ldr	x0, [sp, #24]
  414488:	ldr	x0, [x0]
  41448c:	str	x0, [sp, #56]
  414490:	ldr	x0, [sp, #56]
  414494:	cmp	x0, #0x0
  414498:	b.eq	4144b4 <hash_insert_at@@Base+0x44>  // b.none
  41449c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4144a0:	add	x0, x0, #0x40
  4144a4:	ldr	x0, [x0]
  4144a8:	ldr	x1, [sp, #56]
  4144ac:	cmp	x1, x0
  4144b0:	b.ne	4144f0 <hash_insert_at@@Base+0x80>  // b.any
  4144b4:	ldr	x0, [sp, #40]
  4144b8:	ldr	x0, [x0, #48]
  4144bc:	add	x1, x0, #0x1
  4144c0:	ldr	x0, [sp, #40]
  4144c4:	str	x1, [x0, #48]
  4144c8:	ldr	x0, [sp, #56]
  4144cc:	cmp	x0, #0x0
  4144d0:	b.ne	4144e8 <hash_insert_at@@Base+0x78>  // b.any
  4144d4:	ldr	x0, [sp, #40]
  4144d8:	ldr	x0, [x0, #56]
  4144dc:	sub	x1, x0, #0x1
  4144e0:	ldr	x0, [sp, #40]
  4144e4:	str	x1, [x0, #56]
  4144e8:	ldr	x0, [sp, #32]
  4144ec:	str	x0, [sp, #56]
  4144f0:	ldr	x0, [sp, #24]
  4144f4:	ldr	x1, [sp, #32]
  4144f8:	str	x1, [x0]
  4144fc:	ldr	x0, [sp, #40]
  414500:	ldr	x1, [x0, #56]
  414504:	ldr	x0, [sp, #40]
  414508:	ldr	x2, [x0, #32]
  41450c:	ldr	x0, [sp, #40]
  414510:	ldr	x0, [x0, #40]
  414514:	sub	x0, x2, x0
  414518:	cmp	x1, x0
  41451c:	b.cs	414538 <hash_insert_at@@Base+0xc8>  // b.hs, b.nlast
  414520:	ldr	x0, [sp, #40]
  414524:	bl	4148ec <hash_map_arg@@Base+0xac>
  414528:	ldr	x1, [sp, #32]
  41452c:	ldr	x0, [sp, #40]
  414530:	bl	41422c <hash_find_slot@@Base>
  414534:	b	41453c <hash_insert_at@@Base+0xcc>
  414538:	ldr	x0, [sp, #24]
  41453c:	ldp	x29, x30, [sp], #64
  414540:	ret

0000000000414544 <hash_delete@@Base>:
  414544:	stp	x29, x30, [sp, #-48]!
  414548:	mov	x29, sp
  41454c:	str	x0, [sp, #24]
  414550:	str	x1, [sp, #16]
  414554:	ldr	x1, [sp, #16]
  414558:	ldr	x0, [sp, #24]
  41455c:	bl	41422c <hash_find_slot@@Base>
  414560:	str	x0, [sp, #40]
  414564:	ldr	x1, [sp, #40]
  414568:	ldr	x0, [sp, #24]
  41456c:	bl	414578 <hash_delete_at@@Base>
  414570:	ldp	x29, x30, [sp], #48
  414574:	ret

0000000000414578 <hash_delete_at@@Base>:
  414578:	sub	sp, sp, #0x20
  41457c:	str	x0, [sp, #8]
  414580:	str	x1, [sp]
  414584:	ldr	x0, [sp]
  414588:	ldr	x0, [x0]
  41458c:	str	x0, [sp, #24]
  414590:	ldr	x0, [sp, #24]
  414594:	cmp	x0, #0x0
  414598:	b.eq	4145e4 <hash_delete_at@@Base+0x6c>  // b.none
  41459c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4145a0:	add	x0, x0, #0x40
  4145a4:	ldr	x0, [x0]
  4145a8:	ldr	x1, [sp, #24]
  4145ac:	cmp	x1, x0
  4145b0:	b.eq	4145e4 <hash_delete_at@@Base+0x6c>  // b.none
  4145b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4145b8:	add	x0, x0, #0x40
  4145bc:	ldr	x1, [x0]
  4145c0:	ldr	x0, [sp]
  4145c4:	str	x1, [x0]
  4145c8:	ldr	x0, [sp, #8]
  4145cc:	ldr	x0, [x0, #48]
  4145d0:	sub	x1, x0, #0x1
  4145d4:	ldr	x0, [sp, #8]
  4145d8:	str	x1, [x0, #48]
  4145dc:	ldr	x0, [sp, #24]
  4145e0:	b	4145e8 <hash_delete_at@@Base+0x70>
  4145e4:	mov	x0, #0x0                   	// #0
  4145e8:	add	sp, sp, #0x20
  4145ec:	ret

00000000004145f0 <hash_free_items@@Base>:
  4145f0:	stp	x29, x30, [sp, #-64]!
  4145f4:	mov	x29, sp
  4145f8:	str	x0, [sp, #24]
  4145fc:	ldr	x0, [sp, #24]
  414600:	ldr	x0, [x0]
  414604:	str	x0, [sp, #56]
  414608:	ldr	x0, [sp, #24]
  41460c:	ldr	x0, [x0, #32]
  414610:	lsl	x0, x0, #3
  414614:	ldr	x1, [sp, #56]
  414618:	add	x0, x1, x0
  41461c:	str	x0, [sp, #48]
  414620:	b	414670 <hash_free_items@@Base+0x80>
  414624:	ldr	x0, [sp, #56]
  414628:	ldr	x0, [x0]
  41462c:	str	x0, [sp, #40]
  414630:	ldr	x0, [sp, #40]
  414634:	cmp	x0, #0x0
  414638:	b.eq	41465c <hash_free_items@@Base+0x6c>  // b.none
  41463c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414640:	add	x0, x0, #0x40
  414644:	ldr	x0, [x0]
  414648:	ldr	x1, [sp, #40]
  41464c:	cmp	x1, x0
  414650:	b.eq	41465c <hash_free_items@@Base+0x6c>  // b.none
  414654:	ldr	x0, [sp, #40]
  414658:	bl	406c00 <free@plt>
  41465c:	ldr	x0, [sp, #56]
  414660:	str	xzr, [x0]
  414664:	ldr	x0, [sp, #56]
  414668:	add	x0, x0, #0x8
  41466c:	str	x0, [sp, #56]
  414670:	ldr	x1, [sp, #56]
  414674:	ldr	x0, [sp, #48]
  414678:	cmp	x1, x0
  41467c:	b.cc	414624 <hash_free_items@@Base+0x34>  // b.lo, b.ul, b.last
  414680:	ldr	x0, [sp, #24]
  414684:	str	xzr, [x0, #48]
  414688:	ldr	x0, [sp, #24]
  41468c:	ldr	x1, [x0, #32]
  414690:	ldr	x0, [sp, #24]
  414694:	str	x1, [x0, #56]
  414698:	nop
  41469c:	ldp	x29, x30, [sp], #64
  4146a0:	ret

00000000004146a4 <hash_delete_items@@Base>:
  4146a4:	sub	sp, sp, #0x20
  4146a8:	str	x0, [sp, #8]
  4146ac:	ldr	x0, [sp, #8]
  4146b0:	ldr	x0, [x0]
  4146b4:	str	x0, [sp, #24]
  4146b8:	ldr	x0, [sp, #8]
  4146bc:	ldr	x0, [x0, #32]
  4146c0:	lsl	x0, x0, #3
  4146c4:	ldr	x1, [sp, #24]
  4146c8:	add	x0, x1, x0
  4146cc:	str	x0, [sp, #16]
  4146d0:	b	4146e8 <hash_delete_items@@Base+0x44>
  4146d4:	ldr	x0, [sp, #24]
  4146d8:	str	xzr, [x0]
  4146dc:	ldr	x0, [sp, #24]
  4146e0:	add	x0, x0, #0x8
  4146e4:	str	x0, [sp, #24]
  4146e8:	ldr	x1, [sp, #24]
  4146ec:	ldr	x0, [sp, #16]
  4146f0:	cmp	x1, x0
  4146f4:	b.cc	4146d4 <hash_delete_items@@Base+0x30>  // b.lo, b.ul, b.last
  4146f8:	ldr	x0, [sp, #8]
  4146fc:	str	xzr, [x0, #48]
  414700:	ldr	x0, [sp, #8]
  414704:	str	xzr, [x0, #64]
  414708:	ldr	x0, [sp, #8]
  41470c:	str	xzr, [x0, #72]
  414710:	ldr	x0, [sp, #8]
  414714:	str	wzr, [x0, #80]
  414718:	ldr	x0, [sp, #8]
  41471c:	ldr	x1, [x0, #32]
  414720:	ldr	x0, [sp, #8]
  414724:	str	x1, [x0, #56]
  414728:	nop
  41472c:	add	sp, sp, #0x20
  414730:	ret

0000000000414734 <hash_free@@Base>:
  414734:	stp	x29, x30, [sp, #-32]!
  414738:	mov	x29, sp
  41473c:	str	x0, [sp, #24]
  414740:	str	w1, [sp, #20]
  414744:	ldr	w0, [sp, #20]
  414748:	cmp	w0, #0x0
  41474c:	b.eq	41475c <hash_free@@Base+0x28>  // b.none
  414750:	ldr	x0, [sp, #24]
  414754:	bl	4145f0 <hash_free_items@@Base>
  414758:	b	414774 <hash_free@@Base+0x40>
  41475c:	ldr	x0, [sp, #24]
  414760:	str	xzr, [x0, #48]
  414764:	ldr	x0, [sp, #24]
  414768:	ldr	x1, [x0, #32]
  41476c:	ldr	x0, [sp, #24]
  414770:	str	x1, [x0, #56]
  414774:	ldr	x0, [sp, #24]
  414778:	ldr	x0, [x0]
  41477c:	bl	406c00 <free@plt>
  414780:	ldr	x0, [sp, #24]
  414784:	str	xzr, [x0]
  414788:	ldr	x0, [sp, #24]
  41478c:	str	xzr, [x0, #40]
  414790:	nop
  414794:	ldp	x29, x30, [sp], #32
  414798:	ret

000000000041479c <hash_map@@Base>:
  41479c:	stp	x29, x30, [sp, #-48]!
  4147a0:	mov	x29, sp
  4147a4:	str	x0, [sp, #24]
  4147a8:	str	x1, [sp, #16]
  4147ac:	ldr	x0, [sp, #24]
  4147b0:	ldr	x1, [x0]
  4147b4:	ldr	x0, [sp, #24]
  4147b8:	ldr	x0, [x0, #32]
  4147bc:	lsl	x0, x0, #3
  4147c0:	add	x0, x1, x0
  4147c4:	str	x0, [sp, #32]
  4147c8:	ldr	x0, [sp, #24]
  4147cc:	ldr	x0, [x0]
  4147d0:	str	x0, [sp, #40]
  4147d4:	b	414820 <hash_map@@Base+0x84>
  4147d8:	ldr	x0, [sp, #40]
  4147dc:	ldr	x0, [x0]
  4147e0:	cmp	x0, #0x0
  4147e4:	b.eq	414814 <hash_map@@Base+0x78>  // b.none
  4147e8:	ldr	x0, [sp, #40]
  4147ec:	ldr	x1, [x0]
  4147f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4147f4:	add	x0, x0, #0x40
  4147f8:	ldr	x0, [x0]
  4147fc:	cmp	x1, x0
  414800:	b.eq	414814 <hash_map@@Base+0x78>  // b.none
  414804:	ldr	x0, [sp, #40]
  414808:	ldr	x0, [x0]
  41480c:	ldr	x1, [sp, #16]
  414810:	blr	x1
  414814:	ldr	x0, [sp, #40]
  414818:	add	x0, x0, #0x8
  41481c:	str	x0, [sp, #40]
  414820:	ldr	x1, [sp, #40]
  414824:	ldr	x0, [sp, #32]
  414828:	cmp	x1, x0
  41482c:	b.cc	4147d8 <hash_map@@Base+0x3c>  // b.lo, b.ul, b.last
  414830:	nop
  414834:	nop
  414838:	ldp	x29, x30, [sp], #48
  41483c:	ret

0000000000414840 <hash_map_arg@@Base>:
  414840:	stp	x29, x30, [sp, #-64]!
  414844:	mov	x29, sp
  414848:	str	x0, [sp, #40]
  41484c:	str	x1, [sp, #32]
  414850:	str	x2, [sp, #24]
  414854:	ldr	x0, [sp, #40]
  414858:	ldr	x1, [x0]
  41485c:	ldr	x0, [sp, #40]
  414860:	ldr	x0, [x0, #32]
  414864:	lsl	x0, x0, #3
  414868:	add	x0, x1, x0
  41486c:	str	x0, [sp, #48]
  414870:	ldr	x0, [sp, #40]
  414874:	ldr	x0, [x0]
  414878:	str	x0, [sp, #56]
  41487c:	b	4148cc <hash_map_arg@@Base+0x8c>
  414880:	ldr	x0, [sp, #56]
  414884:	ldr	x0, [x0]
  414888:	cmp	x0, #0x0
  41488c:	b.eq	4148c0 <hash_map_arg@@Base+0x80>  // b.none
  414890:	ldr	x0, [sp, #56]
  414894:	ldr	x1, [x0]
  414898:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41489c:	add	x0, x0, #0x40
  4148a0:	ldr	x0, [x0]
  4148a4:	cmp	x1, x0
  4148a8:	b.eq	4148c0 <hash_map_arg@@Base+0x80>  // b.none
  4148ac:	ldr	x0, [sp, #56]
  4148b0:	ldr	x0, [x0]
  4148b4:	ldr	x2, [sp, #32]
  4148b8:	ldr	x1, [sp, #24]
  4148bc:	blr	x2
  4148c0:	ldr	x0, [sp, #56]
  4148c4:	add	x0, x0, #0x8
  4148c8:	str	x0, [sp, #56]
  4148cc:	ldr	x1, [sp, #56]
  4148d0:	ldr	x0, [sp, #48]
  4148d4:	cmp	x1, x0
  4148d8:	b.cc	414880 <hash_map_arg@@Base+0x40>  // b.lo, b.ul, b.last
  4148dc:	nop
  4148e0:	nop
  4148e4:	ldp	x29, x30, [sp], #64
  4148e8:	ret
  4148ec:	stp	x29, x30, [sp, #-64]!
  4148f0:	mov	x29, sp
  4148f4:	str	x0, [sp, #24]
  4148f8:	ldr	x0, [sp, #24]
  4148fc:	ldr	x0, [x0, #32]
  414900:	str	x0, [sp, #48]
  414904:	ldr	x0, [sp, #24]
  414908:	ldr	x0, [x0]
  41490c:	str	x0, [sp, #40]
  414910:	ldr	x0, [sp, #24]
  414914:	ldr	x1, [x0, #48]
  414918:	ldr	x0, [sp, #24]
  41491c:	ldr	x0, [x0, #40]
  414920:	cmp	x1, x0
  414924:	b.cc	41495c <hash_map_arg@@Base+0x11c>  // b.lo, b.ul, b.last
  414928:	ldr	x0, [sp, #24]
  41492c:	ldr	x0, [x0, #32]
  414930:	lsl	x1, x0, #1
  414934:	ldr	x0, [sp, #24]
  414938:	str	x1, [x0, #32]
  41493c:	ldr	x0, [sp, #24]
  414940:	ldr	x1, [x0, #32]
  414944:	ldr	x0, [sp, #24]
  414948:	ldr	x0, [x0, #32]
  41494c:	lsr	x0, x0, #4
  414950:	sub	x1, x1, x0
  414954:	ldr	x0, [sp, #24]
  414958:	str	x1, [x0, #40]
  41495c:	ldr	x0, [sp, #24]
  414960:	ldr	w0, [x0, #80]
  414964:	add	w1, w0, #0x1
  414968:	ldr	x0, [sp, #24]
  41496c:	str	w1, [x0, #80]
  414970:	ldr	x0, [sp, #24]
  414974:	ldr	x0, [x0, #32]
  414978:	lsl	x0, x0, #3
  41497c:	bl	4226d4 <xcalloc@@Base>
  414980:	mov	x1, x0
  414984:	ldr	x0, [sp, #24]
  414988:	str	x1, [x0]
  41498c:	ldr	x0, [sp, #40]
  414990:	str	x0, [sp, #56]
  414994:	b	4149f8 <hash_map_arg@@Base+0x1b8>
  414998:	ldr	x0, [sp, #56]
  41499c:	ldr	x0, [x0]
  4149a0:	cmp	x0, #0x0
  4149a4:	b.eq	4149ec <hash_map_arg@@Base+0x1ac>  // b.none
  4149a8:	ldr	x0, [sp, #56]
  4149ac:	ldr	x1, [x0]
  4149b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4149b4:	add	x0, x0, #0x40
  4149b8:	ldr	x0, [x0]
  4149bc:	cmp	x1, x0
  4149c0:	b.eq	4149ec <hash_map_arg@@Base+0x1ac>  // b.none
  4149c4:	ldr	x0, [sp, #56]
  4149c8:	ldr	x0, [x0]
  4149cc:	mov	x1, x0
  4149d0:	ldr	x0, [sp, #24]
  4149d4:	bl	41422c <hash_find_slot@@Base>
  4149d8:	str	x0, [sp, #32]
  4149dc:	ldr	x0, [sp, #56]
  4149e0:	ldr	x1, [x0]
  4149e4:	ldr	x0, [sp, #32]
  4149e8:	str	x1, [x0]
  4149ec:	ldr	x0, [sp, #56]
  4149f0:	add	x0, x0, #0x8
  4149f4:	str	x0, [sp, #56]
  4149f8:	ldr	x0, [sp, #48]
  4149fc:	lsl	x0, x0, #3
  414a00:	ldr	x1, [sp, #40]
  414a04:	add	x0, x1, x0
  414a08:	ldr	x1, [sp, #56]
  414a0c:	cmp	x1, x0
  414a10:	b.cc	414998 <hash_map_arg@@Base+0x158>  // b.lo, b.ul, b.last
  414a14:	ldr	x0, [sp, #24]
  414a18:	ldr	x1, [x0, #32]
  414a1c:	ldr	x0, [sp, #24]
  414a20:	ldr	x0, [x0, #48]
  414a24:	sub	x1, x1, x0
  414a28:	ldr	x0, [sp, #24]
  414a2c:	str	x1, [x0, #56]
  414a30:	ldr	x0, [sp, #40]
  414a34:	bl	406c00 <free@plt>
  414a38:	nop
  414a3c:	ldp	x29, x30, [sp], #64
  414a40:	ret

0000000000414a44 <hash_print_stats@@Base>:
  414a44:	stp	x29, x30, [sp, #-32]!
  414a48:	mov	x29, sp
  414a4c:	str	x0, [sp, #24]
  414a50:	str	x1, [sp, #16]
  414a54:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  414a58:	add	x0, x0, #0x20
  414a5c:	bl	406e40 <gettext@plt>
  414a60:	mov	x4, x0
  414a64:	ldr	x0, [sp, #24]
  414a68:	ldr	x1, [x0, #48]
  414a6c:	ldr	x0, [sp, #24]
  414a70:	ldr	x2, [x0, #32]
  414a74:	ldr	x0, [sp, #24]
  414a78:	ldr	d0, [x0, #48]
  414a7c:	ucvtf	d0, d0
  414a80:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  414a84:	fmov	d1, x0
  414a88:	fmul	d1, d0, d1
  414a8c:	ldr	x0, [sp, #24]
  414a90:	ldr	d0, [x0, #32]
  414a94:	ucvtf	d0, d0
  414a98:	fdiv	d0, d1, d0
  414a9c:	mov	x3, x2
  414aa0:	mov	x2, x1
  414aa4:	mov	x1, x4
  414aa8:	ldr	x0, [sp, #16]
  414aac:	bl	406e60 <fprintf@plt>
  414ab0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  414ab4:	add	x0, x0, #0x38
  414ab8:	bl	406e40 <gettext@plt>
  414abc:	mov	x1, x0
  414ac0:	ldr	x0, [sp, #24]
  414ac4:	ldr	w0, [x0, #80]
  414ac8:	mov	w2, w0
  414acc:	ldr	x0, [sp, #16]
  414ad0:	bl	406e60 <fprintf@plt>
  414ad4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  414ad8:	add	x0, x0, #0x48
  414adc:	bl	406e40 <gettext@plt>
  414ae0:	mov	x4, x0
  414ae4:	ldr	x0, [sp, #24]
  414ae8:	ldr	x1, [x0, #64]
  414aec:	ldr	x0, [sp, #24]
  414af0:	ldr	x2, [x0, #72]
  414af4:	ldr	x0, [sp, #24]
  414af8:	ldr	x0, [x0, #72]
  414afc:	cmp	x0, #0x0
  414b00:	b.eq	414b30 <hash_print_stats@@Base+0xec>  // b.none
  414b04:	ldr	x0, [sp, #24]
  414b08:	ldr	d0, [x0, #64]
  414b0c:	ucvtf	d0, d0
  414b10:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  414b14:	fmov	d1, x0
  414b18:	fmul	d1, d0, d1
  414b1c:	ldr	x0, [sp, #24]
  414b20:	ldr	d0, [x0, #72]
  414b24:	ucvtf	d0, d0
  414b28:	fdiv	d0, d1, d0
  414b2c:	b	414b34 <hash_print_stats@@Base+0xf0>
  414b30:	movi	d0, #0x0
  414b34:	mov	x3, x2
  414b38:	mov	x2, x1
  414b3c:	mov	x1, x4
  414b40:	ldr	x0, [sp, #16]
  414b44:	bl	406e60 <fprintf@plt>
  414b48:	nop
  414b4c:	ldp	x29, x30, [sp], #32
  414b50:	ret

0000000000414b54 <hash_dump@@Base>:
  414b54:	stp	x29, x30, [sp, #-80]!
  414b58:	mov	x29, sp
  414b5c:	str	x0, [sp, #40]
  414b60:	str	x1, [sp, #32]
  414b64:	str	x2, [sp, #24]
  414b68:	ldr	x0, [sp, #40]
  414b6c:	ldr	x1, [x0]
  414b70:	ldr	x0, [sp, #40]
  414b74:	ldr	x0, [x0, #32]
  414b78:	lsl	x0, x0, #3
  414b7c:	add	x0, x1, x0
  414b80:	str	x0, [sp, #56]
  414b84:	ldr	x0, [sp, #32]
  414b88:	cmp	x0, #0x0
  414b8c:	b.ne	414ba8 <hash_dump@@Base+0x54>  // b.any
  414b90:	ldr	x0, [sp, #40]
  414b94:	ldr	x0, [x0, #48]
  414b98:	add	x0, x0, #0x1
  414b9c:	lsl	x0, x0, #3
  414ba0:	bl	42268c <xmalloc@@Base>
  414ba4:	str	x0, [sp, #32]
  414ba8:	ldr	x0, [sp, #32]
  414bac:	str	x0, [sp, #72]
  414bb0:	ldr	x0, [sp, #40]
  414bb4:	ldr	x0, [x0]
  414bb8:	str	x0, [sp, #64]
  414bbc:	b	414c10 <hash_dump@@Base+0xbc>
  414bc0:	ldr	x0, [sp, #64]
  414bc4:	ldr	x0, [x0]
  414bc8:	cmp	x0, #0x0
  414bcc:	b.eq	414c04 <hash_dump@@Base+0xb0>  // b.none
  414bd0:	ldr	x0, [sp, #64]
  414bd4:	ldr	x1, [x0]
  414bd8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  414bdc:	add	x0, x0, #0x40
  414be0:	ldr	x0, [x0]
  414be4:	cmp	x1, x0
  414be8:	b.eq	414c04 <hash_dump@@Base+0xb0>  // b.none
  414bec:	ldr	x0, [sp, #72]
  414bf0:	add	x1, x0, #0x8
  414bf4:	str	x1, [sp, #72]
  414bf8:	ldr	x1, [sp, #64]
  414bfc:	ldr	x1, [x1]
  414c00:	str	x1, [x0]
  414c04:	ldr	x0, [sp, #64]
  414c08:	add	x0, x0, #0x8
  414c0c:	str	x0, [sp, #64]
  414c10:	ldr	x1, [sp, #64]
  414c14:	ldr	x0, [sp, #56]
  414c18:	cmp	x1, x0
  414c1c:	b.cc	414bc0 <hash_dump@@Base+0x6c>  // b.lo, b.ul, b.last
  414c20:	ldr	x0, [sp, #72]
  414c24:	str	xzr, [x0]
  414c28:	ldr	x0, [sp, #24]
  414c2c:	cmp	x0, #0x0
  414c30:	b.eq	414c50 <hash_dump@@Base+0xfc>  // b.none
  414c34:	ldr	x0, [sp, #40]
  414c38:	ldr	x0, [x0, #48]
  414c3c:	ldr	x3, [sp, #24]
  414c40:	mov	x2, #0x8                   	// #8
  414c44:	mov	x1, x0
  414c48:	ldr	x0, [sp, #32]
  414c4c:	bl	406810 <qsort@plt>
  414c50:	ldr	x0, [sp, #32]
  414c54:	ldp	x29, x30, [sp], #80
  414c58:	ret
  414c5c:	sub	sp, sp, #0x10
  414c60:	str	x0, [sp, #8]
  414c64:	ldr	x0, [sp, #8]
  414c68:	lsr	x0, x0, #1
  414c6c:	ldr	x1, [sp, #8]
  414c70:	orr	x0, x1, x0
  414c74:	str	x0, [sp, #8]
  414c78:	ldr	x0, [sp, #8]
  414c7c:	lsr	x0, x0, #2
  414c80:	ldr	x1, [sp, #8]
  414c84:	orr	x0, x1, x0
  414c88:	str	x0, [sp, #8]
  414c8c:	ldr	x0, [sp, #8]
  414c90:	lsr	x0, x0, #4
  414c94:	ldr	x1, [sp, #8]
  414c98:	orr	x0, x1, x0
  414c9c:	str	x0, [sp, #8]
  414ca0:	ldr	x0, [sp, #8]
  414ca4:	lsr	x0, x0, #8
  414ca8:	ldr	x1, [sp, #8]
  414cac:	orr	x0, x1, x0
  414cb0:	str	x0, [sp, #8]
  414cb4:	ldr	x0, [sp, #8]
  414cb8:	lsr	x0, x0, #16
  414cbc:	ldr	x1, [sp, #8]
  414cc0:	orr	x0, x1, x0
  414cc4:	str	x0, [sp, #8]
  414cc8:	ldr	x0, [sp, #8]
  414ccc:	lsr	x0, x0, #32
  414cd0:	ldr	x1, [sp, #8]
  414cd4:	orr	x0, x1, x0
  414cd8:	str	x0, [sp, #8]
  414cdc:	ldr	x0, [sp, #8]
  414ce0:	add	x0, x0, #0x1
  414ce4:	add	sp, sp, #0x10
  414ce8:	ret

0000000000414cec <jhash@@Base>:
  414cec:	sub	sp, sp, #0x30
  414cf0:	str	x0, [sp, #8]
  414cf4:	str	w1, [sp, #4]
  414cf8:	ldr	w1, [sp, #4]
  414cfc:	mov	w0, #0xbeef                	// #48879
  414d00:	movk	w0, #0xdead, lsl #16
  414d04:	add	w0, w1, w0
  414d08:	str	w0, [sp, #36]
  414d0c:	ldr	w0, [sp, #36]
  414d10:	str	w0, [sp, #40]
  414d14:	ldr	w0, [sp, #40]
  414d18:	str	w0, [sp, #44]
  414d1c:	b	414ecc <jhash@@Base+0x1e0>
  414d20:	ldr	x0, [sp, #8]
  414d24:	ldr	w0, [x0]
  414d28:	str	w0, [sp, #32]
  414d2c:	ldr	w0, [sp, #32]
  414d30:	ldr	w1, [sp, #44]
  414d34:	add	w0, w1, w0
  414d38:	str	w0, [sp, #44]
  414d3c:	ldr	x0, [sp, #8]
  414d40:	add	x0, x0, #0x4
  414d44:	ldr	w0, [x0]
  414d48:	str	w0, [sp, #28]
  414d4c:	ldr	w0, [sp, #28]
  414d50:	ldr	w1, [sp, #40]
  414d54:	add	w0, w1, w0
  414d58:	str	w0, [sp, #40]
  414d5c:	ldr	x0, [sp, #8]
  414d60:	add	x0, x0, #0x8
  414d64:	ldr	w0, [x0]
  414d68:	str	w0, [sp, #24]
  414d6c:	ldr	w0, [sp, #24]
  414d70:	ldr	w1, [sp, #36]
  414d74:	add	w0, w1, w0
  414d78:	str	w0, [sp, #36]
  414d7c:	ldr	w1, [sp, #44]
  414d80:	ldr	w0, [sp, #36]
  414d84:	sub	w0, w1, w0
  414d88:	str	w0, [sp, #44]
  414d8c:	ldr	w0, [sp, #36]
  414d90:	ror	w0, w0, #28
  414d94:	ldr	w1, [sp, #44]
  414d98:	eor	w0, w1, w0
  414d9c:	str	w0, [sp, #44]
  414da0:	ldr	w1, [sp, #36]
  414da4:	ldr	w0, [sp, #40]
  414da8:	add	w0, w1, w0
  414dac:	str	w0, [sp, #36]
  414db0:	ldr	w1, [sp, #40]
  414db4:	ldr	w0, [sp, #44]
  414db8:	sub	w0, w1, w0
  414dbc:	str	w0, [sp, #40]
  414dc0:	ldr	w0, [sp, #44]
  414dc4:	ror	w0, w0, #26
  414dc8:	ldr	w1, [sp, #40]
  414dcc:	eor	w0, w1, w0
  414dd0:	str	w0, [sp, #40]
  414dd4:	ldr	w1, [sp, #44]
  414dd8:	ldr	w0, [sp, #36]
  414ddc:	add	w0, w1, w0
  414de0:	str	w0, [sp, #44]
  414de4:	ldr	w1, [sp, #36]
  414de8:	ldr	w0, [sp, #40]
  414dec:	sub	w0, w1, w0
  414df0:	str	w0, [sp, #36]
  414df4:	ldr	w0, [sp, #40]
  414df8:	ror	w0, w0, #24
  414dfc:	ldr	w1, [sp, #36]
  414e00:	eor	w0, w1, w0
  414e04:	str	w0, [sp, #36]
  414e08:	ldr	w1, [sp, #40]
  414e0c:	ldr	w0, [sp, #44]
  414e10:	add	w0, w1, w0
  414e14:	str	w0, [sp, #40]
  414e18:	ldr	w1, [sp, #44]
  414e1c:	ldr	w0, [sp, #36]
  414e20:	sub	w0, w1, w0
  414e24:	str	w0, [sp, #44]
  414e28:	ldr	w0, [sp, #36]
  414e2c:	ror	w0, w0, #16
  414e30:	ldr	w1, [sp, #44]
  414e34:	eor	w0, w1, w0
  414e38:	str	w0, [sp, #44]
  414e3c:	ldr	w1, [sp, #36]
  414e40:	ldr	w0, [sp, #40]
  414e44:	add	w0, w1, w0
  414e48:	str	w0, [sp, #36]
  414e4c:	ldr	w1, [sp, #40]
  414e50:	ldr	w0, [sp, #44]
  414e54:	sub	w0, w1, w0
  414e58:	str	w0, [sp, #40]
  414e5c:	ldr	w0, [sp, #44]
  414e60:	ror	w0, w0, #13
  414e64:	ldr	w1, [sp, #40]
  414e68:	eor	w0, w1, w0
  414e6c:	str	w0, [sp, #40]
  414e70:	ldr	w1, [sp, #44]
  414e74:	ldr	w0, [sp, #36]
  414e78:	add	w0, w1, w0
  414e7c:	str	w0, [sp, #44]
  414e80:	ldr	w1, [sp, #36]
  414e84:	ldr	w0, [sp, #40]
  414e88:	sub	w0, w1, w0
  414e8c:	str	w0, [sp, #36]
  414e90:	ldr	w0, [sp, #40]
  414e94:	ror	w0, w0, #28
  414e98:	ldr	w1, [sp, #36]
  414e9c:	eor	w0, w1, w0
  414ea0:	str	w0, [sp, #36]
  414ea4:	ldr	w1, [sp, #40]
  414ea8:	ldr	w0, [sp, #44]
  414eac:	add	w0, w1, w0
  414eb0:	str	w0, [sp, #40]
  414eb4:	ldr	w0, [sp, #4]
  414eb8:	sub	w0, w0, #0xc
  414ebc:	str	w0, [sp, #4]
  414ec0:	ldr	x0, [sp, #8]
  414ec4:	add	x0, x0, #0xc
  414ec8:	str	x0, [sp, #8]
  414ecc:	ldr	w0, [sp, #4]
  414ed0:	cmp	w0, #0xc
  414ed4:	b.gt	414d20 <jhash@@Base+0x34>
  414ed8:	ldr	w0, [sp, #4]
  414edc:	cmp	w0, #0x0
  414ee0:	b.ne	414eec <jhash@@Base+0x200>  // b.any
  414ee4:	ldr	w0, [sp, #36]
  414ee8:	b	4150fc <jhash@@Base+0x410>
  414eec:	ldr	w0, [sp, #4]
  414ef0:	cmp	w0, #0x8
  414ef4:	b.le	414f2c <jhash@@Base+0x240>
  414ef8:	ldr	x0, [sp, #8]
  414efc:	ldr	w0, [x0]
  414f00:	str	w0, [sp, #20]
  414f04:	ldr	w0, [sp, #20]
  414f08:	ldr	w1, [sp, #44]
  414f0c:	add	w0, w1, w0
  414f10:	str	w0, [sp, #44]
  414f14:	ldr	w0, [sp, #4]
  414f18:	sub	w0, w0, #0x4
  414f1c:	str	w0, [sp, #4]
  414f20:	ldr	x0, [sp, #8]
  414f24:	add	x0, x0, #0x4
  414f28:	str	x0, [sp, #8]
  414f2c:	ldr	w0, [sp, #4]
  414f30:	cmp	w0, #0x4
  414f34:	b.le	414f6c <jhash@@Base+0x280>
  414f38:	ldr	x0, [sp, #8]
  414f3c:	ldr	w0, [x0]
  414f40:	str	w0, [sp, #16]
  414f44:	ldr	w0, [sp, #16]
  414f48:	ldr	w1, [sp, #40]
  414f4c:	add	w0, w1, w0
  414f50:	str	w0, [sp, #40]
  414f54:	ldr	w0, [sp, #4]
  414f58:	sub	w0, w0, #0x4
  414f5c:	str	w0, [sp, #4]
  414f60:	ldr	x0, [sp, #8]
  414f64:	add	x0, x0, #0x4
  414f68:	str	x0, [sp, #8]
  414f6c:	ldr	w0, [sp, #4]
  414f70:	cmp	w0, #0x4
  414f74:	b.ne	414f94 <jhash@@Base+0x2a8>  // b.any
  414f78:	ldr	x0, [sp, #8]
  414f7c:	add	x0, x0, #0x3
  414f80:	ldrb	w0, [x0]
  414f84:	lsl	w0, w0, #24
  414f88:	ldr	w1, [sp, #36]
  414f8c:	add	w0, w1, w0
  414f90:	str	w0, [sp, #36]
  414f94:	ldr	w0, [sp, #4]
  414f98:	cmp	w0, #0x2
  414f9c:	b.le	414fbc <jhash@@Base+0x2d0>
  414fa0:	ldr	x0, [sp, #8]
  414fa4:	add	x0, x0, #0x2
  414fa8:	ldrb	w0, [x0]
  414fac:	lsl	w0, w0, #16
  414fb0:	ldr	w1, [sp, #36]
  414fb4:	add	w0, w1, w0
  414fb8:	str	w0, [sp, #36]
  414fbc:	ldr	w0, [sp, #4]
  414fc0:	cmp	w0, #0x1
  414fc4:	b.le	414fe4 <jhash@@Base+0x2f8>
  414fc8:	ldr	x0, [sp, #8]
  414fcc:	add	x0, x0, #0x1
  414fd0:	ldrb	w0, [x0]
  414fd4:	lsl	w0, w0, #8
  414fd8:	ldr	w1, [sp, #36]
  414fdc:	add	w0, w1, w0
  414fe0:	str	w0, [sp, #36]
  414fe4:	ldr	x0, [sp, #8]
  414fe8:	ldrb	w0, [x0]
  414fec:	mov	w1, w0
  414ff0:	ldr	w0, [sp, #36]
  414ff4:	add	w0, w0, w1
  414ff8:	str	w0, [sp, #36]
  414ffc:	ldr	w1, [sp, #36]
  415000:	ldr	w0, [sp, #40]
  415004:	eor	w0, w1, w0
  415008:	str	w0, [sp, #36]
  41500c:	ldr	w0, [sp, #40]
  415010:	ror	w0, w0, #18
  415014:	ldr	w1, [sp, #36]
  415018:	sub	w0, w1, w0
  41501c:	str	w0, [sp, #36]
  415020:	ldr	w1, [sp, #44]
  415024:	ldr	w0, [sp, #36]
  415028:	eor	w0, w1, w0
  41502c:	str	w0, [sp, #44]
  415030:	ldr	w0, [sp, #36]
  415034:	ror	w0, w0, #21
  415038:	ldr	w1, [sp, #44]
  41503c:	sub	w0, w1, w0
  415040:	str	w0, [sp, #44]
  415044:	ldr	w1, [sp, #40]
  415048:	ldr	w0, [sp, #44]
  41504c:	eor	w0, w1, w0
  415050:	str	w0, [sp, #40]
  415054:	ldr	w0, [sp, #44]
  415058:	ror	w0, w0, #7
  41505c:	ldr	w1, [sp, #40]
  415060:	sub	w0, w1, w0
  415064:	str	w0, [sp, #40]
  415068:	ldr	w1, [sp, #36]
  41506c:	ldr	w0, [sp, #40]
  415070:	eor	w0, w1, w0
  415074:	str	w0, [sp, #36]
  415078:	ldr	w0, [sp, #40]
  41507c:	ror	w0, w0, #16
  415080:	ldr	w1, [sp, #36]
  415084:	sub	w0, w1, w0
  415088:	str	w0, [sp, #36]
  41508c:	ldr	w1, [sp, #44]
  415090:	ldr	w0, [sp, #36]
  415094:	eor	w0, w1, w0
  415098:	str	w0, [sp, #44]
  41509c:	ldr	w0, [sp, #36]
  4150a0:	ror	w0, w0, #28
  4150a4:	ldr	w1, [sp, #44]
  4150a8:	sub	w0, w1, w0
  4150ac:	str	w0, [sp, #44]
  4150b0:	ldr	w1, [sp, #40]
  4150b4:	ldr	w0, [sp, #44]
  4150b8:	eor	w0, w1, w0
  4150bc:	str	w0, [sp, #40]
  4150c0:	ldr	w0, [sp, #44]
  4150c4:	ror	w0, w0, #18
  4150c8:	ldr	w1, [sp, #40]
  4150cc:	sub	w0, w1, w0
  4150d0:	str	w0, [sp, #40]
  4150d4:	ldr	w1, [sp, #36]
  4150d8:	ldr	w0, [sp, #40]
  4150dc:	eor	w0, w1, w0
  4150e0:	str	w0, [sp, #36]
  4150e4:	ldr	w0, [sp, #40]
  4150e8:	ror	w0, w0, #8
  4150ec:	ldr	w1, [sp, #36]
  4150f0:	sub	w0, w1, w0
  4150f4:	str	w0, [sp, #36]
  4150f8:	ldr	w0, [sp, #36]
  4150fc:	add	sp, sp, #0x30
  415100:	ret

0000000000415104 <jhash_string@@Base>:
  415104:	stp	x29, x30, [sp, #-144]!
  415108:	mov	x29, sp
  41510c:	str	x0, [sp, #24]
  415110:	str	wzr, [sp, #116]
  415114:	ldr	x0, [sp, #24]
  415118:	str	x0, [sp, #104]
  41511c:	ldr	x0, [sp, #24]
  415120:	bl	4066f0 <strlen@plt>
  415124:	str	x0, [sp, #120]
  415128:	mov	w0, #0xbeef                	// #48879
  41512c:	movk	w0, #0xdead, lsl #16
  415130:	str	w0, [sp, #132]
  415134:	ldr	w0, [sp, #132]
  415138:	str	w0, [sp, #136]
  41513c:	ldr	w0, [sp, #136]
  415140:	str	w0, [sp, #140]
  415144:	str	wzr, [sp, #52]
  415148:	ldr	x0, [sp, #120]
  41514c:	str	x0, [sp, #96]
  415150:	ldr	x2, [sp, #96]
  415154:	ldr	x1, [sp, #96]
  415158:	mov	x0, #0x4                   	// #4
  41515c:	cmp	x2, #0x4
  415160:	csel	x0, x1, x0, ls  // ls = plast
  415164:	str	x0, [sp, #88]
  415168:	add	x0, sp, #0x34
  41516c:	ldr	x2, [sp, #88]
  415170:	ldr	x1, [sp, #24]
  415174:	bl	4066b0 <memcpy@plt>
  415178:	ldr	w1, [sp, #52]
  41517c:	mov	w0, #0xfeff                	// #65279
  415180:	movk	w0, #0xfefe, lsl #16
  415184:	add	w1, w1, w0
  415188:	ldr	w0, [sp, #52]
  41518c:	mvn	w0, w0
  415190:	and	w0, w1, w0
  415194:	and	w0, w0, #0x80808080
  415198:	str	w0, [sp, #116]
  41519c:	ldr	w0, [sp, #116]
  4151a0:	cmp	w0, #0x0
  4151a4:	b.ne	4151bc <jhash_string@@Base+0xb8>  // b.any
  4151a8:	ldr	w0, [sp, #52]
  4151ac:	ldr	w1, [sp, #140]
  4151b0:	add	w0, w1, w0
  4151b4:	str	w0, [sp, #140]
  4151b8:	b	41522c <jhash_string@@Base+0x128>
  4151bc:	ldr	w0, [sp, #52]
  4151c0:	and	w0, w0, #0xff
  4151c4:	cmp	w0, #0x0
  4151c8:	b.eq	41522c <jhash_string@@Base+0x128>  // b.none
  4151cc:	ldr	w0, [sp, #52]
  4151d0:	and	w0, w0, #0xff00
  4151d4:	cmp	w0, #0x0
  4151d8:	b.ne	4151f4 <jhash_string@@Base+0xf0>  // b.any
  4151dc:	ldr	w0, [sp, #52]
  4151e0:	and	w0, w0, #0xff
  4151e4:	ldr	w1, [sp, #140]
  4151e8:	add	w0, w1, w0
  4151ec:	str	w0, [sp, #140]
  4151f0:	b	41522c <jhash_string@@Base+0x128>
  4151f4:	ldr	w0, [sp, #52]
  4151f8:	and	w0, w0, #0xff0000
  4151fc:	cmp	w0, #0x0
  415200:	b.ne	41521c <jhash_string@@Base+0x118>  // b.any
  415204:	ldr	w0, [sp, #52]
  415208:	and	w0, w0, #0xffff
  41520c:	ldr	w1, [sp, #140]
  415210:	add	w0, w1, w0
  415214:	str	w0, [sp, #140]
  415218:	b	41522c <jhash_string@@Base+0x128>
  41521c:	ldr	w0, [sp, #52]
  415220:	ldr	w1, [sp, #140]
  415224:	add	w0, w1, w0
  415228:	str	w0, [sp, #140]
  41522c:	ldr	w0, [sp, #116]
  415230:	cmp	w0, #0x0
  415234:	b.ne	4155a4 <jhash_string@@Base+0x4a0>  // b.any
  415238:	ldr	x0, [sp, #24]
  41523c:	add	x0, x0, #0x4
  415240:	str	x0, [sp, #24]
  415244:	ldr	x0, [sp, #120]
  415248:	sub	x0, x0, #0x4
  41524c:	str	x0, [sp, #120]
  415250:	str	wzr, [sp, #48]
  415254:	ldr	x0, [sp, #120]
  415258:	str	x0, [sp, #80]
  41525c:	ldr	x2, [sp, #80]
  415260:	ldr	x1, [sp, #80]
  415264:	mov	x0, #0x4                   	// #4
  415268:	cmp	x2, #0x4
  41526c:	csel	x0, x1, x0, ls  // ls = plast
  415270:	str	x0, [sp, #72]
  415274:	add	x0, sp, #0x30
  415278:	ldr	x2, [sp, #72]
  41527c:	ldr	x1, [sp, #24]
  415280:	bl	4066b0 <memcpy@plt>
  415284:	ldr	w1, [sp, #48]
  415288:	mov	w0, #0xfeff                	// #65279
  41528c:	movk	w0, #0xfefe, lsl #16
  415290:	add	w1, w1, w0
  415294:	ldr	w0, [sp, #48]
  415298:	mvn	w0, w0
  41529c:	and	w0, w1, w0
  4152a0:	and	w0, w0, #0x80808080
  4152a4:	str	w0, [sp, #116]
  4152a8:	ldr	w0, [sp, #116]
  4152ac:	cmp	w0, #0x0
  4152b0:	b.ne	4152c8 <jhash_string@@Base+0x1c4>  // b.any
  4152b4:	ldr	w0, [sp, #48]
  4152b8:	ldr	w1, [sp, #136]
  4152bc:	add	w0, w1, w0
  4152c0:	str	w0, [sp, #136]
  4152c4:	b	415338 <jhash_string@@Base+0x234>
  4152c8:	ldr	w0, [sp, #48]
  4152cc:	and	w0, w0, #0xff
  4152d0:	cmp	w0, #0x0
  4152d4:	b.eq	415338 <jhash_string@@Base+0x234>  // b.none
  4152d8:	ldr	w0, [sp, #48]
  4152dc:	and	w0, w0, #0xff00
  4152e0:	cmp	w0, #0x0
  4152e4:	b.ne	415300 <jhash_string@@Base+0x1fc>  // b.any
  4152e8:	ldr	w0, [sp, #48]
  4152ec:	and	w0, w0, #0xff
  4152f0:	ldr	w1, [sp, #136]
  4152f4:	add	w0, w1, w0
  4152f8:	str	w0, [sp, #136]
  4152fc:	b	415338 <jhash_string@@Base+0x234>
  415300:	ldr	w0, [sp, #48]
  415304:	and	w0, w0, #0xff0000
  415308:	cmp	w0, #0x0
  41530c:	b.ne	415328 <jhash_string@@Base+0x224>  // b.any
  415310:	ldr	w0, [sp, #48]
  415314:	and	w0, w0, #0xffff
  415318:	ldr	w1, [sp, #136]
  41531c:	add	w0, w1, w0
  415320:	str	w0, [sp, #136]
  415324:	b	415338 <jhash_string@@Base+0x234>
  415328:	ldr	w0, [sp, #48]
  41532c:	ldr	w1, [sp, #136]
  415330:	add	w0, w1, w0
  415334:	str	w0, [sp, #136]
  415338:	ldr	w0, [sp, #116]
  41533c:	cmp	w0, #0x0
  415340:	b.ne	4155ac <jhash_string@@Base+0x4a8>  // b.any
  415344:	ldr	x0, [sp, #24]
  415348:	add	x0, x0, #0x4
  41534c:	str	x0, [sp, #24]
  415350:	ldr	x0, [sp, #120]
  415354:	sub	x0, x0, #0x4
  415358:	str	x0, [sp, #120]
  41535c:	str	wzr, [sp, #44]
  415360:	ldr	x0, [sp, #120]
  415364:	str	x0, [sp, #64]
  415368:	ldr	x2, [sp, #64]
  41536c:	ldr	x1, [sp, #64]
  415370:	mov	x0, #0x4                   	// #4
  415374:	cmp	x2, #0x4
  415378:	csel	x0, x1, x0, ls  // ls = plast
  41537c:	str	x0, [sp, #56]
  415380:	add	x0, sp, #0x2c
  415384:	ldr	x2, [sp, #56]
  415388:	ldr	x1, [sp, #24]
  41538c:	bl	4066b0 <memcpy@plt>
  415390:	ldr	w1, [sp, #44]
  415394:	mov	w0, #0xfeff                	// #65279
  415398:	movk	w0, #0xfefe, lsl #16
  41539c:	add	w1, w1, w0
  4153a0:	ldr	w0, [sp, #44]
  4153a4:	mvn	w0, w0
  4153a8:	and	w0, w1, w0
  4153ac:	and	w0, w0, #0x80808080
  4153b0:	str	w0, [sp, #116]
  4153b4:	ldr	w0, [sp, #116]
  4153b8:	cmp	w0, #0x0
  4153bc:	b.ne	4153d4 <jhash_string@@Base+0x2d0>  // b.any
  4153c0:	ldr	w0, [sp, #44]
  4153c4:	ldr	w1, [sp, #132]
  4153c8:	add	w0, w1, w0
  4153cc:	str	w0, [sp, #132]
  4153d0:	b	415444 <jhash_string@@Base+0x340>
  4153d4:	ldr	w0, [sp, #44]
  4153d8:	and	w0, w0, #0xff
  4153dc:	cmp	w0, #0x0
  4153e0:	b.eq	415444 <jhash_string@@Base+0x340>  // b.none
  4153e4:	ldr	w0, [sp, #44]
  4153e8:	and	w0, w0, #0xff00
  4153ec:	cmp	w0, #0x0
  4153f0:	b.ne	41540c <jhash_string@@Base+0x308>  // b.any
  4153f4:	ldr	w0, [sp, #44]
  4153f8:	and	w0, w0, #0xff
  4153fc:	ldr	w1, [sp, #132]
  415400:	add	w0, w1, w0
  415404:	str	w0, [sp, #132]
  415408:	b	415444 <jhash_string@@Base+0x340>
  41540c:	ldr	w0, [sp, #44]
  415410:	and	w0, w0, #0xff0000
  415414:	cmp	w0, #0x0
  415418:	b.ne	415434 <jhash_string@@Base+0x330>  // b.any
  41541c:	ldr	w0, [sp, #44]
  415420:	and	w0, w0, #0xffff
  415424:	ldr	w1, [sp, #132]
  415428:	add	w0, w1, w0
  41542c:	str	w0, [sp, #132]
  415430:	b	415444 <jhash_string@@Base+0x340>
  415434:	ldr	w0, [sp, #44]
  415438:	ldr	w1, [sp, #132]
  41543c:	add	w0, w1, w0
  415440:	str	w0, [sp, #132]
  415444:	ldr	w0, [sp, #116]
  415448:	cmp	w0, #0x0
  41544c:	b.ne	4155b4 <jhash_string@@Base+0x4b0>  // b.any
  415450:	ldr	x0, [sp, #24]
  415454:	add	x0, x0, #0x4
  415458:	str	x0, [sp, #24]
  41545c:	ldr	x0, [sp, #120]
  415460:	sub	x0, x0, #0x4
  415464:	str	x0, [sp, #120]
  415468:	ldr	w1, [sp, #140]
  41546c:	ldr	w0, [sp, #132]
  415470:	sub	w0, w1, w0
  415474:	str	w0, [sp, #140]
  415478:	ldr	w0, [sp, #132]
  41547c:	ror	w0, w0, #28
  415480:	ldr	w1, [sp, #140]
  415484:	eor	w0, w1, w0
  415488:	str	w0, [sp, #140]
  41548c:	ldr	w1, [sp, #132]
  415490:	ldr	w0, [sp, #136]
  415494:	add	w0, w1, w0
  415498:	str	w0, [sp, #132]
  41549c:	ldr	w1, [sp, #136]
  4154a0:	ldr	w0, [sp, #140]
  4154a4:	sub	w0, w1, w0
  4154a8:	str	w0, [sp, #136]
  4154ac:	ldr	w0, [sp, #140]
  4154b0:	ror	w0, w0, #26
  4154b4:	ldr	w1, [sp, #136]
  4154b8:	eor	w0, w1, w0
  4154bc:	str	w0, [sp, #136]
  4154c0:	ldr	w1, [sp, #140]
  4154c4:	ldr	w0, [sp, #132]
  4154c8:	add	w0, w1, w0
  4154cc:	str	w0, [sp, #140]
  4154d0:	ldr	w1, [sp, #132]
  4154d4:	ldr	w0, [sp, #136]
  4154d8:	sub	w0, w1, w0
  4154dc:	str	w0, [sp, #132]
  4154e0:	ldr	w0, [sp, #136]
  4154e4:	ror	w0, w0, #24
  4154e8:	ldr	w1, [sp, #132]
  4154ec:	eor	w0, w1, w0
  4154f0:	str	w0, [sp, #132]
  4154f4:	ldr	w1, [sp, #136]
  4154f8:	ldr	w0, [sp, #140]
  4154fc:	add	w0, w1, w0
  415500:	str	w0, [sp, #136]
  415504:	ldr	w1, [sp, #140]
  415508:	ldr	w0, [sp, #132]
  41550c:	sub	w0, w1, w0
  415510:	str	w0, [sp, #140]
  415514:	ldr	w0, [sp, #132]
  415518:	ror	w0, w0, #16
  41551c:	ldr	w1, [sp, #140]
  415520:	eor	w0, w1, w0
  415524:	str	w0, [sp, #140]
  415528:	ldr	w1, [sp, #132]
  41552c:	ldr	w0, [sp, #136]
  415530:	add	w0, w1, w0
  415534:	str	w0, [sp, #132]
  415538:	ldr	w1, [sp, #136]
  41553c:	ldr	w0, [sp, #140]
  415540:	sub	w0, w1, w0
  415544:	str	w0, [sp, #136]
  415548:	ldr	w0, [sp, #140]
  41554c:	ror	w0, w0, #13
  415550:	ldr	w1, [sp, #136]
  415554:	eor	w0, w1, w0
  415558:	str	w0, [sp, #136]
  41555c:	ldr	w1, [sp, #140]
  415560:	ldr	w0, [sp, #132]
  415564:	add	w0, w1, w0
  415568:	str	w0, [sp, #140]
  41556c:	ldr	w1, [sp, #132]
  415570:	ldr	w0, [sp, #136]
  415574:	sub	w0, w1, w0
  415578:	str	w0, [sp, #132]
  41557c:	ldr	w0, [sp, #136]
  415580:	ror	w0, w0, #28
  415584:	ldr	w1, [sp, #132]
  415588:	eor	w0, w1, w0
  41558c:	str	w0, [sp, #132]
  415590:	ldr	w1, [sp, #136]
  415594:	ldr	w0, [sp, #140]
  415598:	add	w0, w1, w0
  41559c:	str	w0, [sp, #136]
  4155a0:	b	415144 <jhash_string@@Base+0x40>
  4155a4:	nop
  4155a8:	b	4155b8 <jhash_string@@Base+0x4b4>
  4155ac:	nop
  4155b0:	b	4155b8 <jhash_string@@Base+0x4b4>
  4155b4:	nop
  4155b8:	ldr	w1, [sp, #132]
  4155bc:	ldr	w0, [sp, #136]
  4155c0:	eor	w0, w1, w0
  4155c4:	str	w0, [sp, #132]
  4155c8:	ldr	w0, [sp, #136]
  4155cc:	ror	w0, w0, #18
  4155d0:	ldr	w1, [sp, #132]
  4155d4:	sub	w0, w1, w0
  4155d8:	str	w0, [sp, #132]
  4155dc:	ldr	w1, [sp, #140]
  4155e0:	ldr	w0, [sp, #132]
  4155e4:	eor	w0, w1, w0
  4155e8:	str	w0, [sp, #140]
  4155ec:	ldr	w0, [sp, #132]
  4155f0:	ror	w0, w0, #21
  4155f4:	ldr	w1, [sp, #140]
  4155f8:	sub	w0, w1, w0
  4155fc:	str	w0, [sp, #140]
  415600:	ldr	w1, [sp, #136]
  415604:	ldr	w0, [sp, #140]
  415608:	eor	w0, w1, w0
  41560c:	str	w0, [sp, #136]
  415610:	ldr	w0, [sp, #140]
  415614:	ror	w0, w0, #7
  415618:	ldr	w1, [sp, #136]
  41561c:	sub	w0, w1, w0
  415620:	str	w0, [sp, #136]
  415624:	ldr	w1, [sp, #132]
  415628:	ldr	w0, [sp, #136]
  41562c:	eor	w0, w1, w0
  415630:	str	w0, [sp, #132]
  415634:	ldr	w0, [sp, #136]
  415638:	ror	w0, w0, #16
  41563c:	ldr	w1, [sp, #132]
  415640:	sub	w0, w1, w0
  415644:	str	w0, [sp, #132]
  415648:	ldr	w1, [sp, #140]
  41564c:	ldr	w0, [sp, #132]
  415650:	eor	w0, w1, w0
  415654:	str	w0, [sp, #140]
  415658:	ldr	w0, [sp, #132]
  41565c:	ror	w0, w0, #28
  415660:	ldr	w1, [sp, #140]
  415664:	sub	w0, w1, w0
  415668:	str	w0, [sp, #140]
  41566c:	ldr	w1, [sp, #136]
  415670:	ldr	w0, [sp, #140]
  415674:	eor	w0, w1, w0
  415678:	str	w0, [sp, #136]
  41567c:	ldr	w0, [sp, #140]
  415680:	ror	w0, w0, #18
  415684:	ldr	w1, [sp, #136]
  415688:	sub	w0, w1, w0
  41568c:	str	w0, [sp, #136]
  415690:	ldr	w1, [sp, #132]
  415694:	ldr	w0, [sp, #136]
  415698:	eor	w0, w1, w0
  41569c:	str	w0, [sp, #132]
  4156a0:	ldr	w0, [sp, #136]
  4156a4:	ror	w0, w0, #8
  4156a8:	ldr	w1, [sp, #132]
  4156ac:	sub	w0, w1, w0
  4156b0:	str	w0, [sp, #132]
  4156b4:	ldr	x1, [sp, #24]
  4156b8:	ldr	x0, [sp, #104]
  4156bc:	sub	x0, x1, x0
  4156c0:	mov	w1, w0
  4156c4:	ldr	w0, [sp, #132]
  4156c8:	add	w0, w1, w0
  4156cc:	ldp	x29, x30, [sp], #144
  4156d0:	ret

00000000004156d4 <try_implicit_rule@@Base>:
  4156d4:	stp	x29, x30, [sp, #-32]!
  4156d8:	mov	x29, sp
  4156dc:	str	x0, [sp, #24]
  4156e0:	str	w1, [sp, #20]
  4156e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4156e8:	add	x0, x0, #0x6dc
  4156ec:	ldr	w0, [x0]
  4156f0:	and	w0, w0, #0x8
  4156f4:	cmp	w0, #0x0
  4156f8:	b.eq	415738 <try_implicit_rule@@Base+0x64>  // b.none
  4156fc:	ldr	w0, [sp, #20]
  415700:	bl	4223c8 <print_spaces@@Base>
  415704:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  415708:	add	x0, x0, #0x68
  41570c:	bl	406e40 <gettext@plt>
  415710:	mov	x2, x0
  415714:	ldr	x0, [sp, #24]
  415718:	ldr	x0, [x0]
  41571c:	mov	x1, x0
  415720:	mov	x0, x2
  415724:	bl	406dc0 <printf@plt>
  415728:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41572c:	add	x0, x0, #0x400
  415730:	ldr	x0, [x0]
  415734:	bl	406c90 <fflush@plt>
  415738:	mov	w3, #0x0                   	// #0
  41573c:	ldr	w2, [sp, #20]
  415740:	mov	w1, #0x0                   	// #0
  415744:	ldr	x0, [sp, #24]
  415748:	bl	415a6c <stemlen_compare@@Base+0x68>
  41574c:	cmp	w0, #0x0
  415750:	b.eq	41575c <try_implicit_rule@@Base+0x88>  // b.none
  415754:	mov	w0, #0x1                   	// #1
  415758:	b	4157ec <try_implicit_rule@@Base+0x118>
  41575c:	ldr	x0, [sp, #24]
  415760:	ldr	x0, [x0]
  415764:	bl	407068 <ar_name@@Base>
  415768:	cmp	w0, #0x0
  41576c:	b.eq	4157e8 <try_implicit_rule@@Base+0x114>  // b.none
  415770:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  415774:	add	x0, x0, #0x6dc
  415778:	ldr	w0, [x0]
  41577c:	and	w0, w0, #0x8
  415780:	cmp	w0, #0x0
  415784:	b.eq	4157c4 <try_implicit_rule@@Base+0xf0>  // b.none
  415788:	ldr	w0, [sp, #20]
  41578c:	bl	4223c8 <print_spaces@@Base>
  415790:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  415794:	add	x0, x0, #0x90
  415798:	bl	406e40 <gettext@plt>
  41579c:	mov	x2, x0
  4157a0:	ldr	x0, [sp, #24]
  4157a4:	ldr	x0, [x0]
  4157a8:	mov	x1, x0
  4157ac:	mov	x0, x2
  4157b0:	bl	406dc0 <printf@plt>
  4157b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4157b8:	add	x0, x0, #0x400
  4157bc:	ldr	x0, [x0]
  4157c0:	bl	406c90 <fflush@plt>
  4157c4:	mov	w3, #0x0                   	// #0
  4157c8:	ldr	w2, [sp, #20]
  4157cc:	mov	w1, #0x1                   	// #1
  4157d0:	ldr	x0, [sp, #24]
  4157d4:	bl	415a6c <stemlen_compare@@Base+0x68>
  4157d8:	cmp	w0, #0x0
  4157dc:	b.eq	4157e8 <try_implicit_rule@@Base+0x114>  // b.none
  4157e0:	mov	w0, #0x1                   	// #1
  4157e4:	b	4157ec <try_implicit_rule@@Base+0x118>
  4157e8:	mov	w0, #0x0                   	// #0
  4157ec:	ldp	x29, x30, [sp], #32
  4157f0:	ret
  4157f4:	sub	sp, sp, #0x30
  4157f8:	str	x0, [sp, #8]
  4157fc:	str	x1, [sp]
  415800:	ldr	x0, [sp, #8]
  415804:	str	x0, [sp, #40]
  415808:	b	415818 <try_implicit_rule@@Base+0x144>
  41580c:	ldr	x0, [sp, #40]
  415810:	add	x0, x0, #0x1
  415814:	str	x0, [sp, #40]
  415818:	ldr	x0, [sp, #40]
  41581c:	ldrb	w0, [x0]
  415820:	mov	w1, w0
  415824:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  415828:	add	x0, x0, #0x728
  41582c:	sxtw	x1, w1
  415830:	ldrh	w0, [x0, x1, lsl #1]
  415834:	and	w0, w0, #0x6
  415838:	cmp	w0, #0x0
  41583c:	b.ne	41580c <try_implicit_rule@@Base+0x138>  // b.any
  415840:	ldr	x0, [sp, #40]
  415844:	str	x0, [sp, #24]
  415848:	ldr	x0, [sp, #40]
  41584c:	add	x1, x0, #0x1
  415850:	str	x1, [sp, #40]
  415854:	ldrb	w0, [x0]
  415858:	strb	w0, [sp, #39]
  41585c:	ldrb	w0, [sp, #39]
  415860:	cmp	w0, #0x0
  415864:	b.ne	415870 <try_implicit_rule@@Base+0x19c>  // b.any
  415868:	mov	x0, #0x0                   	// #0
  41586c:	b	4159fc <try_implicit_rule@@Base+0x328>
  415870:	ldrb	w0, [sp, #39]
  415874:	cmp	w0, #0x7c
  415878:	b.eq	4159d0 <try_implicit_rule@@Base+0x2fc>  // b.none
  41587c:	cmp	w0, #0x7c
  415880:	b.gt	415990 <try_implicit_rule@@Base+0x2bc>
  415884:	cmp	w0, #0x24
  415888:	b.eq	4158b8 <try_implicit_rule@@Base+0x1e4>  // b.none
  41588c:	cmp	w0, #0x24
  415890:	b.gt	415990 <try_implicit_rule@@Base+0x2bc>
  415894:	cmp	w0, #0x20
  415898:	b.eq	4159bc <try_implicit_rule@@Base+0x2e8>  // b.none
  41589c:	cmp	w0, #0x20
  4158a0:	b.gt	415990 <try_implicit_rule@@Base+0x2bc>
  4158a4:	cmp	w0, #0x0
  4158a8:	b.eq	4159bc <try_implicit_rule@@Base+0x2e8>  // b.none
  4158ac:	cmp	w0, #0x9
  4158b0:	b.ne	415990 <try_implicit_rule@@Base+0x2bc>  // b.any
  4158b4:	b	4159bc <try_implicit_rule@@Base+0x2e8>
  4158b8:	ldr	x0, [sp, #40]
  4158bc:	add	x1, x0, #0x1
  4158c0:	str	x1, [sp, #40]
  4158c4:	ldrb	w0, [x0]
  4158c8:	strb	w0, [sp, #39]
  4158cc:	ldrb	w0, [sp, #39]
  4158d0:	cmp	w0, #0x24
  4158d4:	b.eq	415998 <try_implicit_rule@@Base+0x2c4>  // b.none
  4158d8:	ldrb	w0, [sp, #39]
  4158dc:	cmp	w0, #0x28
  4158e0:	b.ne	4158f0 <try_implicit_rule@@Base+0x21c>  // b.any
  4158e4:	mov	w0, #0x29                  	// #41
  4158e8:	strb	w0, [sp, #38]
  4158ec:	b	415904 <try_implicit_rule@@Base+0x230>
  4158f0:	ldrb	w0, [sp, #39]
  4158f4:	cmp	w0, #0x7b
  4158f8:	b.ne	4159a0 <try_implicit_rule@@Base+0x2cc>  // b.any
  4158fc:	mov	w0, #0x7d                  	// #125
  415900:	strb	w0, [sp, #38]
  415904:	str	wzr, [sp, #32]
  415908:	b	41597c <try_implicit_rule@@Base+0x2a8>
  41590c:	ldr	x0, [sp, #40]
  415910:	ldrb	w0, [x0]
  415914:	ldrb	w1, [sp, #39]
  415918:	cmp	w1, w0
  41591c:	b.ne	415930 <try_implicit_rule@@Base+0x25c>  // b.any
  415920:	ldr	w0, [sp, #32]
  415924:	add	w0, w0, #0x1
  415928:	str	w0, [sp, #32]
  41592c:	b	415970 <try_implicit_rule@@Base+0x29c>
  415930:	ldr	x0, [sp, #40]
  415934:	ldrb	w0, [x0]
  415938:	ldrb	w1, [sp, #38]
  41593c:	cmp	w1, w0
  415940:	b.ne	415970 <try_implicit_rule@@Base+0x29c>  // b.any
  415944:	ldr	w0, [sp, #32]
  415948:	sub	w0, w0, #0x1
  41594c:	str	w0, [sp, #32]
  415950:	ldr	w0, [sp, #32]
  415954:	cmp	w0, #0x0
  415958:	b.ge	415970 <try_implicit_rule@@Base+0x29c>  // b.tcont
  41595c:	ldr	x0, [sp, #40]
  415960:	add	x0, x0, #0x1
  415964:	str	x0, [sp, #40]
  415968:	nop
  41596c:	b	4159a4 <try_implicit_rule@@Base+0x2d0>
  415970:	ldr	x0, [sp, #40]
  415974:	add	x0, x0, #0x1
  415978:	str	x0, [sp, #40]
  41597c:	ldr	x0, [sp, #40]
  415980:	ldrb	w0, [x0]
  415984:	cmp	w0, #0x0
  415988:	b.ne	41590c <try_implicit_rule@@Base+0x238>  // b.any
  41598c:	b	4159a4 <try_implicit_rule@@Base+0x2d0>
  415990:	nop
  415994:	b	4159a4 <try_implicit_rule@@Base+0x2d0>
  415998:	nop
  41599c:	b	4159a4 <try_implicit_rule@@Base+0x2d0>
  4159a0:	nop
  4159a4:	ldr	x0, [sp, #40]
  4159a8:	add	x1, x0, #0x1
  4159ac:	str	x1, [sp, #40]
  4159b0:	ldrb	w0, [x0]
  4159b4:	strb	w0, [sp, #39]
  4159b8:	b	415870 <try_implicit_rule@@Base+0x19c>
  4159bc:	nop
  4159c0:	ldr	x0, [sp, #40]
  4159c4:	sub	x0, x0, #0x1
  4159c8:	str	x0, [sp, #40]
  4159cc:	b	4159d4 <try_implicit_rule@@Base+0x300>
  4159d0:	nop
  4159d4:	ldr	x0, [sp]
  4159d8:	cmp	x0, #0x0
  4159dc:	b.eq	4159f8 <try_implicit_rule@@Base+0x324>  // b.none
  4159e0:	ldr	x1, [sp, #40]
  4159e4:	ldr	x0, [sp, #24]
  4159e8:	sub	x0, x1, x0
  4159ec:	mov	x1, x0
  4159f0:	ldr	x0, [sp]
  4159f4:	str	x1, [x0]
  4159f8:	ldr	x0, [sp, #24]
  4159fc:	add	sp, sp, #0x30
  415a00:	ret

0000000000415a04 <stemlen_compare@@Base>:
  415a04:	sub	sp, sp, #0x30
  415a08:	str	x0, [sp, #8]
  415a0c:	str	x1, [sp]
  415a10:	ldr	x0, [sp, #8]
  415a14:	str	x0, [sp, #40]
  415a18:	ldr	x0, [sp]
  415a1c:	str	x0, [sp, #32]
  415a20:	ldr	x0, [sp, #40]
  415a24:	ldr	x0, [x0, #8]
  415a28:	mov	w1, w0
  415a2c:	ldr	x0, [sp, #32]
  415a30:	ldr	x0, [x0, #8]
  415a34:	sub	w0, w1, w0
  415a38:	str	w0, [sp, #28]
  415a3c:	ldr	w0, [sp, #28]
  415a40:	cmp	w0, #0x0
  415a44:	b.ne	415a60 <stemlen_compare@@Base+0x5c>  // b.any
  415a48:	ldr	x0, [sp, #40]
  415a4c:	ldr	w1, [x0, #20]
  415a50:	ldr	x0, [sp, #32]
  415a54:	ldr	w0, [x0, #20]
  415a58:	sub	w0, w1, w0
  415a5c:	b	415a64 <stemlen_compare@@Base+0x60>
  415a60:	ldr	w0, [sp, #28]
  415a64:	add	sp, sp, #0x30
  415a68:	ret
  415a6c:	mov	x12, #0x11e0                	// #4576
  415a70:	sub	sp, sp, x12
  415a74:	stp	x29, x30, [sp]
  415a78:	mov	x29, sp
  415a7c:	str	x0, [x29, #40]
  415a80:	str	w1, [x29, #36]
  415a84:	str	w2, [x29, #32]
  415a88:	str	w3, [x29, #28]
  415a8c:	ldr	w0, [x29, #36]
  415a90:	cmp	w0, #0x0
  415a94:	b.eq	415aac <stemlen_compare@@Base+0xa8>  // b.none
  415a98:	ldr	x0, [x29, #40]
  415a9c:	ldr	x0, [x0]
  415aa0:	mov	w1, #0x28                  	// #40
  415aa4:	bl	406c20 <strchr@plt>
  415aa8:	b	415ab4 <stemlen_compare@@Base+0xb0>
  415aac:	ldr	x0, [x29, #40]
  415ab0:	ldr	x0, [x0]
  415ab4:	str	x0, [x29, #4344]
  415ab8:	ldr	x0, [x29, #4344]
  415abc:	bl	4066f0 <strlen@plt>
  415ac0:	str	x0, [x29, #4336]
  415ac4:	str	xzr, [x29, #4560]
  415ac8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  415acc:	add	x0, x0, #0xb44
  415ad0:	ldr	w0, [x0]
  415ad4:	str	w0, [x29, #4556]
  415ad8:	ldr	w0, [x29, #4556]
  415adc:	lsl	x0, x0, #5
  415ae0:	bl	42268c <xmalloc@@Base>
  415ae4:	str	x0, [x29, #4544]
  415ae8:	ldr	x0, [x29, #4544]
  415aec:	str	x0, [x29, #4536]
  415af0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  415af4:	add	x0, x0, #0xb38
  415af8:	ldr	x1, [x0]
  415afc:	ldr	x0, [x29, #4336]
  415b00:	add	x0, x1, x0
  415b04:	add	x0, x0, #0x4
  415b08:	add	x0, x0, #0xf
  415b0c:	lsr	x0, x0, #4
  415b10:	lsl	x0, x0, #4
  415b14:	sub	sp, sp, x0
  415b18:	mov	x0, sp
  415b1c:	add	x0, x0, #0xf
  415b20:	lsr	x0, x0, #4
  415b24:	lsl	x0, x0, #4
  415b28:	str	x0, [x29, #4328]
  415b2c:	str	xzr, [x29, #4528]
  415b30:	str	xzr, [x29, #4520]
  415b34:	str	xzr, [x29, #4512]
  415b38:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  415b3c:	add	x0, x0, #0xb50
  415b40:	ldr	w1, [x0]
  415b44:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  415b48:	add	x0, x0, #0xb40
  415b4c:	ldr	w0, [x0]
  415b50:	mul	w0, w1, w0
  415b54:	mov	w0, w0
  415b58:	lsl	x0, x0, #5
  415b5c:	bl	42268c <xmalloc@@Base>
  415b60:	str	x0, [x29, #4320]
  415b64:	str	wzr, [x29, #4500]
  415b68:	str	wzr, [x29, #4496]
  415b6c:	str	xzr, [x29, #4472]
  415b70:	ldr	w0, [x29, #36]
  415b74:	cmp	w0, #0x0
  415b78:	b.ne	415b8c <stemlen_compare@@Base+0x188>  // b.any
  415b7c:	ldr	x0, [x29, #4344]
  415b80:	bl	407068 <ar_name@@Base>
  415b84:	cmp	w0, #0x0
  415b88:	b.eq	415b94 <stemlen_compare@@Base+0x190>  // b.none
  415b8c:	str	xzr, [x29, #4568]
  415b90:	b	415bb0 <stemlen_compare@@Base+0x1ac>
  415b94:	ldr	x0, [x29, #4336]
  415b98:	sub	x0, x0, #0x1
  415b9c:	mov	x2, x0
  415ba0:	mov	w1, #0x2f                  	// #47
  415ba4:	ldr	x0, [x29, #4344]
  415ba8:	bl	406c40 <memrchr@plt>
  415bac:	str	x0, [x29, #4568]
  415bb0:	ldr	x0, [x29, #4568]
  415bb4:	cmp	x0, #0x0
  415bb8:	b.eq	415bd0 <stemlen_compare@@Base+0x1cc>  // b.none
  415bbc:	ldr	x1, [x29, #4568]
  415bc0:	ldr	x0, [x29, #4344]
  415bc4:	sub	x0, x1, x0
  415bc8:	add	x0, x0, #0x1
  415bcc:	b	415bd4 <stemlen_compare@@Base+0x1d0>
  415bd0:	mov	x0, #0x0                   	// #0
  415bd4:	str	x0, [x29, #4312]
  415bd8:	str	wzr, [x29, #4508]
  415bdc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  415be0:	add	x0, x0, #0xb30
  415be4:	ldr	x0, [x0]
  415be8:	str	x0, [x29, #4480]
  415bec:	b	416050 <stemlen_compare@@Base+0x64c>
  415bf0:	ldr	x0, [x29, #4480]
  415bf4:	ldr	x0, [x0, #32]
  415bf8:	cmp	x0, #0x0
  415bfc:	b.eq	415c10 <stemlen_compare@@Base+0x20c>  // b.none
  415c00:	ldr	x0, [x29, #4480]
  415c04:	ldr	x0, [x0, #40]
  415c08:	cmp	x0, #0x0
  415c0c:	b.eq	416038 <stemlen_compare@@Base+0x634>  // b.none
  415c10:	ldr	x0, [x29, #4480]
  415c14:	ldrb	w0, [x0, #51]
  415c18:	cmp	w0, #0x0
  415c1c:	b.eq	415c64 <stemlen_compare@@Base+0x260>  // b.none
  415c20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  415c24:	add	x0, x0, #0x6dc
  415c28:	ldr	w0, [x0]
  415c2c:	and	w0, w0, #0x8
  415c30:	cmp	w0, #0x0
  415c34:	b.eq	416040 <stemlen_compare@@Base+0x63c>  // b.none
  415c38:	ldr	w0, [x29, #32]
  415c3c:	bl	4223c8 <print_spaces@@Base>
  415c40:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  415c44:	add	x0, x0, #0xc8
  415c48:	bl	406e40 <gettext@plt>
  415c4c:	bl	406dc0 <printf@plt>
  415c50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  415c54:	add	x0, x0, #0x400
  415c58:	ldr	x0, [x0]
  415c5c:	bl	406c90 <fflush@plt>
  415c60:	b	416040 <stemlen_compare@@Base+0x63c>
  415c64:	str	wzr, [x29, #4468]
  415c68:	b	41601c <stemlen_compare@@Base+0x618>
  415c6c:	ldr	x0, [x29, #4480]
  415c70:	ldr	x1, [x0, #8]
  415c74:	ldr	w0, [x29, #4468]
  415c78:	lsl	x0, x0, #3
  415c7c:	add	x0, x1, x0
  415c80:	ldr	x0, [x0]
  415c84:	str	x0, [x29, #4192]
  415c88:	ldr	x0, [x29, #4480]
  415c8c:	ldr	x1, [x0, #24]
  415c90:	ldr	w0, [x29, #4468]
  415c94:	lsl	x0, x0, #3
  415c98:	add	x0, x1, x0
  415c9c:	ldr	x0, [x0]
  415ca0:	str	x0, [x29, #4184]
  415ca4:	ldr	w0, [x29, #28]
  415ca8:	cmp	w0, #0x0
  415cac:	b.eq	415cd4 <stemlen_compare@@Base+0x2d0>  // b.none
  415cb0:	ldr	x0, [x29, #4192]
  415cb4:	add	x0, x0, #0x1
  415cb8:	ldrb	w0, [x0]
  415cbc:	cmp	w0, #0x0
  415cc0:	b.ne	415cd4 <stemlen_compare@@Base+0x2d0>  // b.any
  415cc4:	ldr	x0, [x29, #4480]
  415cc8:	ldrb	w0, [x0, #50]
  415ccc:	cmp	w0, #0x0
  415cd0:	b.eq	415fe4 <stemlen_compare@@Base+0x5e0>  // b.none
  415cd4:	ldr	x0, [x29, #4480]
  415cd8:	ldr	x1, [x0, #16]
  415cdc:	ldr	w0, [x29, #4468]
  415ce0:	lsl	x0, x0, #2
  415ce4:	add	x0, x1, x0
  415ce8:	ldr	w0, [x0]
  415cec:	mov	w0, w0
  415cf0:	ldr	x1, [x29, #4336]
  415cf4:	cmp	x1, x0
  415cf8:	b.cc	415fec <stemlen_compare@@Base+0x5e8>  // b.lo, b.ul, b.last
  415cfc:	ldr	x1, [x29, #4184]
  415d00:	ldr	x0, [x29, #4192]
  415d04:	sub	x0, x1, x0
  415d08:	sub	x0, x0, #0x1
  415d0c:	ldr	x1, [x29, #4344]
  415d10:	add	x0, x1, x0
  415d14:	str	x0, [x29, #4528]
  415d18:	ldr	x0, [x29, #4480]
  415d1c:	ldr	x1, [x0, #16]
  415d20:	ldr	w0, [x29, #4468]
  415d24:	lsl	x0, x0, #2
  415d28:	add	x0, x1, x0
  415d2c:	ldr	w0, [x0]
  415d30:	mov	w0, w0
  415d34:	ldr	x1, [x29, #4336]
  415d38:	sub	x0, x1, x0
  415d3c:	add	x0, x0, #0x1
  415d40:	str	x0, [x29, #4520]
  415d44:	add	x0, x29, #0x1, lsl #12
  415d48:	strb	wzr, [x0, #371]
  415d4c:	ldr	x0, [x29, #4568]
  415d50:	cmp	x0, #0x0
  415d54:	b.eq	415d78 <stemlen_compare@@Base+0x374>  // b.none
  415d58:	mov	w1, #0x2f                  	// #47
  415d5c:	ldr	x0, [x29, #4192]
  415d60:	bl	406c20 <strchr@plt>
  415d64:	cmp	x0, #0x0
  415d68:	cset	w0, eq  // eq = none
  415d6c:	and	w0, w0, #0xff
  415d70:	add	x1, x29, #0x1, lsl #12
  415d74:	strb	w0, [x1, #371]
  415d78:	add	x0, x29, #0x1, lsl #12
  415d7c:	ldrb	w0, [x0, #371]
  415d80:	cmp	w0, #0x0
  415d84:	b.eq	415db8 <stemlen_compare@@Base+0x3b4>  // b.none
  415d88:	ldr	x1, [x29, #4312]
  415d8c:	ldr	x0, [x29, #4520]
  415d90:	cmp	x1, x0
  415d94:	b.hi	415ff4 <stemlen_compare@@Base+0x5f0>  // b.pmore
  415d98:	ldr	x1, [x29, #4520]
  415d9c:	ldr	x0, [x29, #4312]
  415da0:	sub	x0, x1, x0
  415da4:	str	x0, [x29, #4520]
  415da8:	ldr	x1, [x29, #4528]
  415dac:	ldr	x0, [x29, #4312]
  415db0:	add	x0, x1, x0
  415db4:	str	x0, [x29, #4528]
  415db8:	add	x0, x29, #0x1, lsl #12
  415dbc:	ldrb	w0, [x0, #371]
  415dc0:	cmp	w0, #0x0
  415dc4:	b.eq	415e10 <stemlen_compare@@Base+0x40c>  // b.none
  415dc8:	ldr	x0, [x29, #4568]
  415dcc:	add	x0, x0, #0x1
  415dd0:	ldr	x1, [x29, #4528]
  415dd4:	cmp	x1, x0
  415dd8:	b.ls	415e44 <stemlen_compare@@Base+0x440>  // b.plast
  415ddc:	ldr	x0, [x29, #4568]
  415de0:	add	x3, x0, #0x1
  415de4:	ldr	x1, [x29, #4528]
  415de8:	ldr	x0, [x29, #4568]
  415dec:	sub	x0, x1, x0
  415df0:	sub	x0, x0, #0x1
  415df4:	mov	x2, x0
  415df8:	mov	x1, x3
  415dfc:	ldr	x0, [x29, #4192]
  415e00:	bl	406990 <strncmp@plt>
  415e04:	cmp	w0, #0x0
  415e08:	b.eq	415e44 <stemlen_compare@@Base+0x440>  // b.none
  415e0c:	b	416010 <stemlen_compare@@Base+0x60c>
  415e10:	ldr	x1, [x29, #4528]
  415e14:	ldr	x0, [x29, #4344]
  415e18:	cmp	x1, x0
  415e1c:	b.ls	415e44 <stemlen_compare@@Base+0x440>  // b.plast
  415e20:	ldr	x1, [x29, #4528]
  415e24:	ldr	x0, [x29, #4344]
  415e28:	sub	x0, x1, x0
  415e2c:	mov	x2, x0
  415e30:	ldr	x1, [x29, #4344]
  415e34:	ldr	x0, [x29, #4192]
  415e38:	bl	406990 <strncmp@plt>
  415e3c:	cmp	w0, #0x0
  415e40:	b.ne	415ffc <stemlen_compare@@Base+0x5f8>  // b.any
  415e44:	ldr	x0, [x29, #4184]
  415e48:	ldrb	w1, [x0]
  415e4c:	ldr	x2, [x29, #4528]
  415e50:	ldr	x0, [x29, #4520]
  415e54:	add	x0, x2, x0
  415e58:	ldrb	w0, [x0]
  415e5c:	cmp	w1, w0
  415e60:	b.ne	416004 <stemlen_compare@@Base+0x600>  // b.any
  415e64:	ldr	x0, [x29, #4184]
  415e68:	ldrb	w0, [x0]
  415e6c:	cmp	w0, #0x0
  415e70:	b.eq	415efc <stemlen_compare@@Base+0x4f8>  // b.none
  415e74:	ldr	x0, [x29, #4184]
  415e78:	add	x1, x0, #0x1
  415e7c:	ldr	x0, [x29, #4520]
  415e80:	add	x0, x0, #0x1
  415e84:	ldr	x2, [x29, #4528]
  415e88:	add	x0, x2, x0
  415e8c:	cmp	x1, x0
  415e90:	b.eq	415efc <stemlen_compare@@Base+0x4f8>  // b.none
  415e94:	ldr	x0, [x29, #4184]
  415e98:	add	x0, x0, #0x1
  415e9c:	ldrb	w1, [x0]
  415ea0:	ldr	x0, [x29, #4520]
  415ea4:	add	x0, x0, #0x1
  415ea8:	ldr	x2, [x29, #4528]
  415eac:	add	x0, x2, x0
  415eb0:	ldrb	w0, [x0]
  415eb4:	cmp	w1, w0
  415eb8:	b.ne	416004 <stemlen_compare@@Base+0x600>  // b.any
  415ebc:	ldr	x0, [x29, #4184]
  415ec0:	add	x0, x0, #0x1
  415ec4:	ldrb	w0, [x0]
  415ec8:	cmp	w0, #0x0
  415ecc:	b.eq	415efc <stemlen_compare@@Base+0x4f8>  // b.none
  415ed0:	ldr	x0, [x29, #4184]
  415ed4:	add	x2, x0, #0x2
  415ed8:	ldr	x0, [x29, #4520]
  415edc:	add	x0, x0, #0x2
  415ee0:	ldr	x1, [x29, #4528]
  415ee4:	add	x0, x1, x0
  415ee8:	mov	x1, x0
  415eec:	mov	x0, x2
  415ef0:	bl	406bc0 <strcmp@plt>
  415ef4:	cmp	w0, #0x0
  415ef8:	b.ne	416004 <stemlen_compare@@Base+0x600>  // b.any
  415efc:	ldr	x0, [x29, #4192]
  415f00:	add	x0, x0, #0x1
  415f04:	ldrb	w0, [x0]
  415f08:	cmp	w0, #0x0
  415f0c:	b.eq	415f18 <stemlen_compare@@Base+0x514>  // b.none
  415f10:	mov	w0, #0x1                   	// #1
  415f14:	str	w0, [x29, #4496]
  415f18:	ldr	x0, [x29, #4480]
  415f1c:	ldr	x0, [x0, #32]
  415f20:	cmp	x0, #0x0
  415f24:	b.ne	415f38 <stemlen_compare@@Base+0x534>  // b.any
  415f28:	ldr	x0, [x29, #4480]
  415f2c:	ldr	x0, [x0, #40]
  415f30:	cmp	x0, #0x0
  415f34:	b.eq	41600c <stemlen_compare@@Base+0x608>  // b.none
  415f38:	ldr	w0, [x29, #4508]
  415f3c:	lsl	x0, x0, #5
  415f40:	ldr	x1, [x29, #4320]
  415f44:	add	x0, x1, x0
  415f48:	ldr	x1, [x29, #4480]
  415f4c:	str	x1, [x0]
  415f50:	ldr	w0, [x29, #4508]
  415f54:	lsl	x0, x0, #5
  415f58:	ldr	x1, [x29, #4320]
  415f5c:	add	x0, x1, x0
  415f60:	ldr	w1, [x29, #4468]
  415f64:	str	w1, [x0, #16]
  415f68:	add	x0, x29, #0x1, lsl #12
  415f6c:	ldrb	w0, [x0, #371]
  415f70:	cmp	w0, #0x0
  415f74:	b.eq	415f80 <stemlen_compare@@Base+0x57c>  // b.none
  415f78:	ldr	x0, [x29, #4312]
  415f7c:	b	415f84 <stemlen_compare@@Base+0x580>
  415f80:	mov	x0, #0x0                   	// #0
  415f84:	ldr	w1, [x29, #4508]
  415f88:	lsl	x1, x1, #5
  415f8c:	ldr	x2, [x29, #4320]
  415f90:	add	x1, x2, x1
  415f94:	ldr	x2, [x29, #4520]
  415f98:	add	x0, x0, x2
  415f9c:	str	x0, [x1, #8]
  415fa0:	ldr	w0, [x29, #4508]
  415fa4:	lsl	x0, x0, #5
  415fa8:	ldr	x1, [x29, #4320]
  415fac:	add	x0, x1, x0
  415fb0:	ldr	w1, [x29, #4508]
  415fb4:	str	w1, [x0, #20]
  415fb8:	ldr	w0, [x29, #4508]
  415fbc:	lsl	x0, x0, #5
  415fc0:	ldr	x1, [x29, #4320]
  415fc4:	add	x0, x1, x0
  415fc8:	add	x1, x29, #0x1, lsl #12
  415fcc:	ldrb	w1, [x1, #371]
  415fd0:	strb	w1, [x0, #24]
  415fd4:	ldr	w0, [x29, #4508]
  415fd8:	add	w0, w0, #0x1
  415fdc:	str	w0, [x29, #4508]
  415fe0:	b	416010 <stemlen_compare@@Base+0x60c>
  415fe4:	nop
  415fe8:	b	416010 <stemlen_compare@@Base+0x60c>
  415fec:	nop
  415ff0:	b	416010 <stemlen_compare@@Base+0x60c>
  415ff4:	nop
  415ff8:	b	416010 <stemlen_compare@@Base+0x60c>
  415ffc:	nop
  416000:	b	416010 <stemlen_compare@@Base+0x60c>
  416004:	nop
  416008:	b	416010 <stemlen_compare@@Base+0x60c>
  41600c:	nop
  416010:	ldr	w0, [x29, #4468]
  416014:	add	w0, w0, #0x1
  416018:	str	w0, [x29, #4468]
  41601c:	ldr	x0, [x29, #4480]
  416020:	ldrh	w0, [x0, #48]
  416024:	mov	w1, w0
  416028:	ldr	w0, [x29, #4468]
  41602c:	cmp	w0, w1
  416030:	b.cc	415c6c <stemlen_compare@@Base+0x268>  // b.lo, b.ul, b.last
  416034:	b	416044 <stemlen_compare@@Base+0x640>
  416038:	nop
  41603c:	b	416044 <stemlen_compare@@Base+0x640>
  416040:	nop
  416044:	ldr	x0, [x29, #4480]
  416048:	ldr	x0, [x0]
  41604c:	str	x0, [x29, #4480]
  416050:	ldr	x0, [x29, #4480]
  416054:	cmp	x0, #0x0
  416058:	b.ne	415bf0 <stemlen_compare@@Base+0x1ec>  // b.any
  41605c:	ldr	w0, [x29, #4508]
  416060:	cmp	w0, #0x0
  416064:	b.eq	41778c <stemlen_compare@@Base+0x1d88>  // b.none
  416068:	ldr	w0, [x29, #4508]
  41606c:	cmp	w0, #0x1
  416070:	b.ls	41608c <stemlen_compare@@Base+0x688>  // b.plast
  416074:	ldr	w1, [x29, #4508]
  416078:	adrp	x0, 415000 <jhash@@Base+0x314>
  41607c:	add	x3, x0, #0xa04
  416080:	mov	x2, #0x20                  	// #32
  416084:	ldr	x0, [x29, #4320]
  416088:	bl	406810 <qsort@plt>
  41608c:	ldr	w0, [x29, #4496]
  416090:	cmp	w0, #0x0
  416094:	b.eq	416168 <stemlen_compare@@Base+0x764>  // b.none
  416098:	str	wzr, [x29, #4492]
  41609c:	b	416158 <stemlen_compare@@Base+0x754>
  4160a0:	ldr	w0, [x29, #4492]
  4160a4:	lsl	x0, x0, #5
  4160a8:	ldr	x1, [x29, #4320]
  4160ac:	add	x0, x1, x0
  4160b0:	ldr	x0, [x0]
  4160b4:	ldrb	w0, [x0, #50]
  4160b8:	cmp	w0, #0x0
  4160bc:	b.ne	41614c <stemlen_compare@@Base+0x748>  // b.any
  4160c0:	str	wzr, [x29, #4460]
  4160c4:	b	416124 <stemlen_compare@@Base+0x720>
  4160c8:	ldr	w0, [x29, #4492]
  4160cc:	lsl	x0, x0, #5
  4160d0:	ldr	x1, [x29, #4320]
  4160d4:	add	x0, x1, x0
  4160d8:	ldr	x0, [x0]
  4160dc:	ldr	x1, [x0, #8]
  4160e0:	ldr	w0, [x29, #4460]
  4160e4:	lsl	x0, x0, #3
  4160e8:	add	x0, x1, x0
  4160ec:	ldr	x0, [x0]
  4160f0:	add	x0, x0, #0x1
  4160f4:	ldrb	w0, [x0]
  4160f8:	cmp	w0, #0x0
  4160fc:	b.ne	416118 <stemlen_compare@@Base+0x714>  // b.any
  416100:	ldr	w0, [x29, #4492]
  416104:	lsl	x0, x0, #5
  416108:	ldr	x1, [x29, #4320]
  41610c:	add	x0, x1, x0
  416110:	str	xzr, [x0]
  416114:	b	41614c <stemlen_compare@@Base+0x748>
  416118:	ldr	w0, [x29, #4460]
  41611c:	add	w0, w0, #0x1
  416120:	str	w0, [x29, #4460]
  416124:	ldr	w0, [x29, #4492]
  416128:	lsl	x0, x0, #5
  41612c:	ldr	x1, [x29, #4320]
  416130:	add	x0, x1, x0
  416134:	ldr	x0, [x0]
  416138:	ldrh	w0, [x0, #48]
  41613c:	mov	w1, w0
  416140:	ldr	w0, [x29, #4460]
  416144:	cmp	w0, w1
  416148:	b.cc	4160c8 <stemlen_compare@@Base+0x6c4>  // b.lo, b.ul, b.last
  41614c:	ldr	w0, [x29, #4492]
  416150:	add	w0, w0, #0x1
  416154:	str	w0, [x29, #4492]
  416158:	ldr	w1, [x29, #4492]
  41615c:	ldr	w0, [x29, #4508]
  416160:	cmp	w1, w0
  416164:	b.cc	4160a0 <stemlen_compare@@Base+0x69c>  // b.lo, b.ul, b.last
  416168:	str	wzr, [x29, #4504]
  41616c:	b	41701c <stemlen_compare@@Base+0x1618>
  416170:	ldr	x0, [x29, #4544]
  416174:	str	x0, [x29, #4536]
  416178:	str	wzr, [x29, #4492]
  41617c:	b	416fdc <stemlen_compare@@Base+0x15d8>
  416180:	str	wzr, [x29, #4444]
  416184:	str	wzr, [x29, #4440]
  416188:	str	wzr, [x29, #4436]
  41618c:	str	xzr, [x29, #4424]
  416190:	str	wzr, [x29, #4420]
  416194:	ldr	w0, [x29, #4492]
  416198:	lsl	x0, x0, #5
  41619c:	ldr	x1, [x29, #4320]
  4161a0:	add	x0, x1, x0
  4161a4:	ldr	x0, [x0]
  4161a8:	str	x0, [x29, #4480]
  4161ac:	ldr	x0, [x29, #4480]
  4161b0:	cmp	x0, #0x0
  4161b4:	b.eq	416fbc <stemlen_compare@@Base+0x15b8>  // b.none
  4161b8:	ldr	w0, [x29, #4504]
  4161bc:	cmp	w0, #0x0
  4161c0:	b.eq	4161d4 <stemlen_compare@@Base+0x7d0>  // b.none
  4161c4:	ldr	x0, [x29, #4480]
  4161c8:	ldrb	w0, [x0, #50]
  4161cc:	cmp	w0, #0x0
  4161d0:	b.ne	416fc4 <stemlen_compare@@Base+0x15c0>  // b.any
  4161d4:	ldr	w0, [x29, #4492]
  4161d8:	lsl	x0, x0, #5
  4161dc:	ldr	x1, [x29, #4320]
  4161e0:	add	x0, x1, x0
  4161e4:	ldr	w0, [x0, #16]
  4161e8:	str	w0, [x29, #4308]
  4161ec:	ldr	x0, [x29, #4480]
  4161f0:	ldr	x1, [x0, #24]
  4161f4:	ldr	w0, [x29, #4308]
  4161f8:	lsl	x0, x0, #3
  4161fc:	add	x0, x1, x0
  416200:	ldr	x1, [x0]
  416204:	ldr	x0, [x29, #4480]
  416208:	ldr	x2, [x0, #8]
  41620c:	ldr	w0, [x29, #4308]
  416210:	lsl	x0, x0, #3
  416214:	add	x0, x2, x0
  416218:	ldr	x0, [x0]
  41621c:	sub	x0, x1, x0
  416220:	sub	x0, x0, #0x1
  416224:	ldr	x1, [x29, #4344]
  416228:	add	x0, x1, x0
  41622c:	str	x0, [x29, #4528]
  416230:	ldr	x0, [x29, #4480]
  416234:	ldr	x1, [x0, #16]
  416238:	ldr	w0, [x29, #4308]
  41623c:	lsl	x0, x0, #2
  416240:	add	x0, x1, x0
  416244:	ldr	w0, [x0]
  416248:	mov	w0, w0
  41624c:	ldr	x1, [x29, #4336]
  416250:	sub	x0, x1, x0
  416254:	add	x0, x0, #0x1
  416258:	str	x0, [x29, #4520]
  41625c:	ldr	w0, [x29, #4492]
  416260:	lsl	x0, x0, #5
  416264:	ldr	x1, [x29, #4320]
  416268:	add	x0, x1, x0
  41626c:	ldrb	w0, [x0, #24]
  416270:	add	x1, x29, #0x1, lsl #12
  416274:	strb	w0, [x1, #211]
  416278:	add	x0, x29, #0x1, lsl #12
  41627c:	ldrb	w0, [x0, #211]
  416280:	cmp	w0, #0x0
  416284:	b.eq	416300 <stemlen_compare@@Base+0x8fc>  // b.none
  416288:	ldr	x1, [x29, #4528]
  41628c:	ldr	x0, [x29, #4312]
  416290:	add	x0, x1, x0
  416294:	str	x0, [x29, #4528]
  416298:	ldr	x1, [x29, #4520]
  41629c:	ldr	x0, [x29, #4312]
  4162a0:	sub	x0, x1, x0
  4162a4:	str	x0, [x29, #4520]
  4162a8:	ldr	x0, [x29, #4472]
  4162ac:	cmp	x0, #0x0
  4162b0:	b.ne	416300 <stemlen_compare@@Base+0x8fc>  // b.any
  4162b4:	ldr	x0, [x29, #4312]
  4162b8:	add	x0, x0, #0x1
  4162bc:	add	x0, x0, #0xf
  4162c0:	lsr	x0, x0, #4
  4162c4:	lsl	x0, x0, #4
  4162c8:	sub	sp, sp, x0
  4162cc:	mov	x0, sp
  4162d0:	add	x0, x0, #0xf
  4162d4:	lsr	x0, x0, #4
  4162d8:	lsl	x0, x0, #4
  4162dc:	str	x0, [x29, #4472]
  4162e0:	ldr	x2, [x29, #4312]
  4162e4:	ldr	x1, [x29, #4344]
  4162e8:	ldr	x0, [x29, #4472]
  4162ec:	bl	4066b0 <memcpy@plt>
  4162f0:	ldr	x1, [x29, #4472]
  4162f4:	ldr	x0, [x29, #4312]
  4162f8:	add	x0, x1, x0
  4162fc:	strb	wzr, [x0]
  416300:	add	x0, x29, #0x1, lsl #12
  416304:	ldrb	w0, [x0, #211]
  416308:	cmp	w0, #0x0
  41630c:	b.eq	416318 <stemlen_compare@@Base+0x914>  // b.none
  416310:	ldr	x0, [x29, #4312]
  416314:	b	41631c <stemlen_compare@@Base+0x918>
  416318:	mov	x0, #0x0                   	// #0
  41631c:	ldr	x1, [x29, #4520]
  416320:	add	x0, x0, x1
  416324:	cmp	x0, #0x1, lsl #12
  416328:	b.ls	4163a8 <stemlen_compare@@Base+0x9a4>  // b.plast
  41632c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416330:	add	x0, x0, #0x6dc
  416334:	ldr	w0, [x0]
  416338:	and	w0, w0, #0x8
  41633c:	cmp	w0, #0x0
  416340:	b.eq	416fcc <stemlen_compare@@Base+0x15c8>  // b.none
  416344:	ldr	w0, [x29, #32]
  416348:	bl	4223c8 <print_spaces@@Base>
  41634c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416350:	add	x0, x0, #0xf0
  416354:	bl	406e40 <gettext@plt>
  416358:	mov	x4, x0
  41635c:	add	x0, x29, #0x1, lsl #12
  416360:	ldrb	w0, [x0, #211]
  416364:	cmp	w0, #0x0
  416368:	b.eq	416374 <stemlen_compare@@Base+0x970>  // b.none
  41636c:	ldr	x0, [x29, #4472]
  416370:	b	41637c <stemlen_compare@@Base+0x978>
  416374:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416378:	add	x0, x0, #0x110
  41637c:	ldr	x1, [x29, #4520]
  416380:	ldr	x3, [x29, #4528]
  416384:	mov	w2, w1
  416388:	mov	x1, x0
  41638c:	mov	x0, x4
  416390:	bl	406dc0 <printf@plt>
  416394:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416398:	add	x0, x0, #0x400
  41639c:	ldr	x0, [x0]
  4163a0:	bl	406c90 <fflush@plt>
  4163a4:	b	416fcc <stemlen_compare@@Base+0x15c8>
  4163a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4163ac:	add	x0, x0, #0x6dc
  4163b0:	ldr	w0, [x0]
  4163b4:	and	w0, w0, #0x8
  4163b8:	cmp	w0, #0x0
  4163bc:	b.eq	4163f0 <stemlen_compare@@Base+0x9ec>  // b.none
  4163c0:	ldr	w0, [x29, #32]
  4163c4:	bl	4223c8 <print_spaces@@Base>
  4163c8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4163cc:	add	x0, x0, #0x118
  4163d0:	bl	406e40 <gettext@plt>
  4163d4:	ldr	x1, [x29, #4520]
  4163d8:	ldr	x2, [x29, #4528]
  4163dc:	bl	406dc0 <printf@plt>
  4163e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4163e4:	add	x0, x0, #0x400
  4163e8:	ldr	x0, [x0]
  4163ec:	bl	406c90 <fflush@plt>
  4163f0:	add	x0, x29, #0x1, lsl #12
  4163f4:	ldrb	w0, [x0, #211]
  4163f8:	cmp	w0, #0x0
  4163fc:	b.ne	416420 <stemlen_compare@@Base+0xa1c>  // b.any
  416400:	add	x0, x29, #0x50
  416404:	ldr	x2, [x29, #4520]
  416408:	ldr	x1, [x29, #4528]
  41640c:	bl	4066b0 <memcpy@plt>
  416410:	ldr	x0, [x29, #4520]
  416414:	add	x1, x29, #0x50
  416418:	strb	wzr, [x1, x0]
  41641c:	b	41645c <stemlen_compare@@Base+0xa58>
  416420:	add	x0, x29, #0x50
  416424:	ldr	x2, [x29, #4312]
  416428:	ldr	x1, [x29, #4344]
  41642c:	bl	4066b0 <memcpy@plt>
  416430:	add	x1, x29, #0x50
  416434:	ldr	x0, [x29, #4312]
  416438:	add	x0, x1, x0
  41643c:	ldr	x2, [x29, #4520]
  416440:	ldr	x1, [x29, #4528]
  416444:	bl	4066b0 <memcpy@plt>
  416448:	ldr	x1, [x29, #4312]
  41644c:	ldr	x0, [x29, #4520]
  416450:	add	x0, x1, x0
  416454:	add	x1, x29, #0x50
  416458:	strb	wzr, [x1, x0]
  41645c:	ldr	x0, [x29, #4480]
  416460:	ldr	x0, [x0, #32]
  416464:	cmp	x0, #0x0
  416468:	b.eq	416ff0 <stemlen_compare@@Base+0x15ec>  // b.none
  41646c:	ldr	x0, [x29, #40]
  416470:	add	x1, x29, #0x50
  416474:	str	x1, [x0, #40]
  416478:	ldr	x0, [x29, #4480]
  41647c:	mov	w1, #0x1                   	// #1
  416480:	strb	w1, [x0, #51]
  416484:	ldr	x0, [x29, #4544]
  416488:	str	x0, [x29, #4536]
  41648c:	ldr	x0, [x29, #4480]
  416490:	ldr	x0, [x0, #32]
  416494:	str	x0, [x29, #4448]
  416498:	ldr	x0, [x29, #4448]
  41649c:	ldr	x0, [x0, #8]
  4164a0:	cmp	x0, #0x0
  4164a4:	b.eq	4164b4 <stemlen_compare@@Base+0xab0>  // b.none
  4164a8:	ldr	x0, [x29, #4448]
  4164ac:	ldr	x0, [x0, #8]
  4164b0:	b	4164c0 <stemlen_compare@@Base+0xabc>
  4164b4:	ldr	x0, [x29, #4448]
  4164b8:	ldr	x0, [x0, #16]
  4164bc:	ldr	x0, [x0]
  4164c0:	str	x0, [x29, #4424]
  4164c4:	ldr	x0, [x29, #4424]
  4164c8:	cmp	x0, #0x0
  4164cc:	b.ne	416514 <stemlen_compare@@Base+0xb10>  // b.any
  4164d0:	ldr	x0, [x29, #4448]
  4164d4:	ldr	x0, [x0]
  4164d8:	str	x0, [x29, #4448]
  4164dc:	ldr	x0, [x29, #4448]
  4164e0:	cmp	x0, #0x0
  4164e4:	b.eq	416f90 <stemlen_compare@@Base+0x158c>  // b.none
  4164e8:	ldr	x0, [x29, #4448]
  4164ec:	ldr	x0, [x0, #8]
  4164f0:	cmp	x0, #0x0
  4164f4:	b.eq	416504 <stemlen_compare@@Base+0xb00>  // b.none
  4164f8:	ldr	x0, [x29, #4448]
  4164fc:	ldr	x0, [x0, #8]
  416500:	b	416510 <stemlen_compare@@Base+0xb0c>
  416504:	ldr	x0, [x29, #4448]
  416508:	ldr	x0, [x0, #16]
  41650c:	ldr	x0, [x0]
  416510:	str	x0, [x29, #4424]
  416514:	ldr	x0, [x29, #4448]
  416518:	ldrb	w0, [x0, #33]
  41651c:	and	w0, w0, #0x8
  416520:	and	w0, w0, #0xff
  416524:	cmp	w0, #0x0
  416528:	b.ne	416698 <stemlen_compare@@Base+0xc94>  // b.any
  41652c:	mov	w1, #0x25                  	// #37
  416530:	ldr	x0, [x29, #4424]
  416534:	bl	406c20 <strchr@plt>
  416538:	str	x0, [x29, #64]
  41653c:	ldr	x0, [x29, #64]
  416540:	cmp	x0, #0x0
  416544:	b.ne	416558 <stemlen_compare@@Base+0xb54>  // b.any
  416548:	ldr	x1, [x29, #4424]
  41654c:	ldr	x0, [x29, #4328]
  416550:	bl	406ca0 <strcpy@plt>
  416554:	b	4165fc <stemlen_compare@@Base+0xbf8>
  416558:	ldr	x0, [x29, #4328]
  41655c:	str	x0, [x29, #4400]
  416560:	add	x0, x29, #0x1, lsl #12
  416564:	ldrb	w0, [x0, #211]
  416568:	cmp	w0, #0x0
  41656c:	b.eq	416590 <stemlen_compare@@Base+0xb8c>  // b.none
  416570:	ldr	x2, [x29, #4312]
  416574:	ldr	x1, [x29, #4344]
  416578:	ldr	x0, [x29, #4400]
  41657c:	bl	4066b0 <memcpy@plt>
  416580:	ldr	x1, [x29, #4400]
  416584:	ldr	x0, [x29, #4312]
  416588:	add	x0, x1, x0
  41658c:	str	x0, [x29, #4400]
  416590:	ldr	x1, [x29, #64]
  416594:	ldr	x0, [x29, #4424]
  416598:	sub	x0, x1, x0
  41659c:	mov	x2, x0
  4165a0:	ldr	x1, [x29, #4424]
  4165a4:	ldr	x0, [x29, #4400]
  4165a8:	bl	4066b0 <memcpy@plt>
  4165ac:	ldr	x1, [x29, #64]
  4165b0:	ldr	x0, [x29, #4424]
  4165b4:	sub	x0, x1, x0
  4165b8:	mov	x1, x0
  4165bc:	ldr	x0, [x29, #4400]
  4165c0:	add	x0, x0, x1
  4165c4:	str	x0, [x29, #4400]
  4165c8:	ldr	x2, [x29, #4520]
  4165cc:	ldr	x1, [x29, #4528]
  4165d0:	ldr	x0, [x29, #4400]
  4165d4:	bl	4066b0 <memcpy@plt>
  4165d8:	ldr	x1, [x29, #4400]
  4165dc:	ldr	x0, [x29, #4520]
  4165e0:	add	x0, x1, x0
  4165e4:	str	x0, [x29, #4400]
  4165e8:	ldr	x0, [x29, #64]
  4165ec:	add	x0, x0, #0x1
  4165f0:	mov	x1, x0
  4165f4:	ldr	x0, [x29, #4400]
  4165f8:	bl	406ca0 <strcpy@plt>
  4165fc:	ldr	x0, [x29, #4328]
  416600:	str	x0, [x29, #64]
  416604:	add	x0, x29, #0x40
  416608:	mov	w4, #0x20                  	// #32
  41660c:	mov	x3, #0x0                   	// #0
  416610:	mov	w2, #0x1                   	// #1
  416614:	mov	x1, #0x28                  	// #40
  416618:	bl	42a5e0 <parse_file_seq@@Base>
  41661c:	str	x0, [x29, #72]
  416620:	ldr	x0, [x29, #72]
  416624:	str	x0, [x29, #4408]
  416628:	b	416684 <stemlen_compare@@Base+0xc80>
  41662c:	ldr	w0, [x29, #4436]
  416630:	add	w0, w0, #0x1
  416634:	str	w0, [x29, #4436]
  416638:	ldr	x0, [x29, #4448]
  41663c:	ldrb	w0, [x0, #33]
  416640:	ubfx	x0, x0, #1, #1
  416644:	and	w2, w0, #0xff
  416648:	ldr	x1, [x29, #4408]
  41664c:	ldrb	w0, [x1, #33]
  416650:	bfi	w0, w2, #1, #1
  416654:	strb	w0, [x1, #33]
  416658:	ldr	x0, [x29, #4448]
  41665c:	ldrb	w0, [x0, #33]
  416660:	ubfx	x0, x0, #4, #1
  416664:	and	w2, w0, #0xff
  416668:	ldr	x1, [x29, #4408]
  41666c:	ldrb	w0, [x1, #33]
  416670:	bfi	w0, w2, #4, #1
  416674:	strb	w0, [x1, #33]
  416678:	ldr	x0, [x29, #4408]
  41667c:	ldr	x0, [x0]
  416680:	str	x0, [x29, #4408]
  416684:	ldr	x0, [x29, #4408]
  416688:	cmp	x0, #0x0
  41668c:	b.ne	41662c <stemlen_compare@@Base+0xc28>  // b.any
  416690:	str	xzr, [x29, #4424]
  416694:	b	4169b0 <stemlen_compare@@Base+0xfac>
  416698:	str	wzr, [x29, #4396]
  41669c:	add	x0, x29, #0x38
  4166a0:	mov	x1, x0
  4166a4:	ldr	x0, [x29, #4424]
  4166a8:	bl	4157f4 <try_implicit_rule@@Base+0x120>
  4166ac:	str	x0, [x29, #4424]
  4166b0:	ldr	x0, [x29, #4424]
  4166b4:	cmp	x0, #0x0
  4166b8:	b.eq	416fb4 <stemlen_compare@@Base+0x15b0>  // b.none
  4166bc:	ldr	w0, [x29, #4420]
  4166c0:	cmp	w0, #0x0
  4166c4:	b.ne	416700 <stemlen_compare@@Base+0xcfc>  // b.any
  4166c8:	ldr	x0, [x29, #56]
  4166cc:	cmp	x0, #0x1
  4166d0:	b.ne	416700 <stemlen_compare@@Base+0xcfc>  // b.any
  4166d4:	ldr	x0, [x29, #4424]
  4166d8:	ldrb	w0, [x0]
  4166dc:	cmp	w0, #0x7c
  4166e0:	b.ne	416700 <stemlen_compare@@Base+0xcfc>  // b.any
  4166e4:	mov	w0, #0x1                   	// #1
  4166e8:	str	w0, [x29, #4420]
  4166ec:	ldr	x0, [x29, #56]
  4166f0:	ldr	x1, [x29, #4424]
  4166f4:	add	x0, x1, x0
  4166f8:	str	x0, [x29, #4424]
  4166fc:	b	416fb8 <stemlen_compare@@Base+0x15b4>
  416700:	ldr	x0, [x29, #56]
  416704:	ldr	x1, [x29, #4424]
  416708:	add	x0, x1, x0
  41670c:	mov	w2, #0x25                  	// #37
  416710:	mov	x1, x0
  416714:	ldr	x0, [x29, #4424]
  416718:	bl	4227f8 <lindex@@Base>
  41671c:	str	x0, [x29, #64]
  416720:	ldr	x0, [x29, #64]
  416724:	cmp	x0, #0x0
  416728:	b.ne	416754 <stemlen_compare@@Base+0xd50>  // b.any
  41672c:	ldr	x0, [x29, #56]
  416730:	mov	x2, x0
  416734:	ldr	x1, [x29, #4424]
  416738:	ldr	x0, [x29, #4328]
  41673c:	bl	4066b0 <memcpy@plt>
  416740:	ldr	x0, [x29, #56]
  416744:	ldr	x1, [x29, #4328]
  416748:	add	x0, x1, x0
  41674c:	strb	wzr, [x0]
  416750:	b	41682c <stemlen_compare@@Base+0xe28>
  416754:	ldr	x1, [x29, #64]
  416758:	ldr	x0, [x29, #4424]
  41675c:	sub	x0, x1, x0
  416760:	str	x0, [x29, #4296]
  416764:	ldr	x0, [x29, #4328]
  416768:	str	x0, [x29, #4376]
  41676c:	ldr	x2, [x29, #4296]
  416770:	ldr	x1, [x29, #4424]
  416774:	ldr	x0, [x29, #4376]
  416778:	bl	4066b0 <memcpy@plt>
  41677c:	ldr	x1, [x29, #4376]
  416780:	ldr	x0, [x29, #4296]
  416784:	add	x0, x1, x0
  416788:	str	x0, [x29, #4376]
  41678c:	add	x0, x29, #0x1, lsl #12
  416790:	ldrb	w0, [x0, #211]
  416794:	cmp	w0, #0x0
  416798:	b.eq	4167c8 <stemlen_compare@@Base+0xdc4>  // b.none
  41679c:	mov	w0, #0x1                   	// #1
  4167a0:	str	w0, [x29, #4396]
  4167a4:	mov	x2, #0x5                   	// #5
  4167a8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4167ac:	add	x1, x0, #0x140
  4167b0:	ldr	x0, [x29, #4376]
  4167b4:	bl	4066b0 <memcpy@plt>
  4167b8:	ldr	x0, [x29, #4376]
  4167bc:	add	x0, x0, #0x5
  4167c0:	str	x0, [x29, #4376]
  4167c4:	b	4167e8 <stemlen_compare@@Base+0xde4>
  4167c8:	mov	x2, #0x2                   	// #2
  4167cc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4167d0:	add	x1, x0, #0x148
  4167d4:	ldr	x0, [x29, #4376]
  4167d8:	bl	4066b0 <memcpy@plt>
  4167dc:	ldr	x0, [x29, #4376]
  4167e0:	add	x0, x0, #0x2
  4167e4:	str	x0, [x29, #4376]
  4167e8:	ldr	x0, [x29, #64]
  4167ec:	add	x3, x0, #0x1
  4167f0:	ldr	x1, [x29, #56]
  4167f4:	ldr	x0, [x29, #4296]
  4167f8:	sub	x0, x1, x0
  4167fc:	sub	x0, x0, #0x1
  416800:	mov	x2, x0
  416804:	mov	x1, x3
  416808:	ldr	x0, [x29, #4376]
  41680c:	bl	4066b0 <memcpy@plt>
  416810:	ldr	x1, [x29, #56]
  416814:	ldr	x0, [x29, #4296]
  416818:	sub	x0, x1, x0
  41681c:	sub	x0, x0, #0x1
  416820:	ldr	x1, [x29, #4376]
  416824:	add	x0, x1, x0
  416828:	strb	wzr, [x0]
  41682c:	ldr	x0, [x29, #56]
  416830:	ldr	x1, [x29, #4424]
  416834:	add	x0, x1, x0
  416838:	str	x0, [x29, #4424]
  41683c:	ldr	w0, [x29, #4500]
  416840:	cmp	w0, #0x0
  416844:	b.ne	416868 <stemlen_compare@@Base+0xe64>  // b.any
  416848:	mov	w1, #0x0                   	// #0
  41684c:	ldr	x0, [x29, #40]
  416850:	bl	432088 <initialize_file_variables@@Base>
  416854:	ldr	x0, [x29, #40]
  416858:	bl	4081c8 <set_file_variables@@Base>
  41685c:	mov	w0, #0x1                   	// #1
  416860:	str	w0, [x29, #4500]
  416864:	b	4168b4 <stemlen_compare@@Base+0xeb0>
  416868:	ldr	w0, [x29, #4440]
  41686c:	cmp	w0, #0x0
  416870:	b.ne	4168b4 <stemlen_compare@@Base+0xeb0>  // b.any
  416874:	ldr	x0, [x29, #40]
  416878:	ldr	x1, [x0, #40]
  41687c:	ldr	x0, [x29, #40]
  416880:	ldr	x0, [x0, #80]
  416884:	ldr	x0, [x0, #8]
  416888:	mov	x6, #0x0                   	// #0
  41688c:	mov	x5, x0
  416890:	mov	w4, #0x0                   	// #0
  416894:	mov	w3, #0x6                   	// #6
  416898:	mov	x2, x1
  41689c:	mov	x1, #0x1                   	// #1
  4168a0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4168a4:	add	x0, x0, #0x150
  4168a8:	bl	4316d8 <define_variable_in_set@@Base>
  4168ac:	mov	w0, #0x1                   	// #1
  4168b0:	str	w0, [x29, #4440]
  4168b4:	ldr	x1, [x29, #40]
  4168b8:	ldr	x0, [x29, #4328]
  4168bc:	bl	40c088 <variable_expand_for_file@@Base>
  4168c0:	str	x0, [x29, #64]
  4168c4:	add	x0, x29, #0x48
  4168c8:	str	x0, [x29, #4384]
  4168cc:	ldr	w0, [x29, #4420]
  4168d0:	cmp	w0, #0x0
  4168d4:	b.eq	4168e0 <stemlen_compare@@Base+0xedc>  // b.none
  4168d8:	mov	w0, #0x1                   	// #1
  4168dc:	b	4168e4 <stemlen_compare@@Base+0xee0>
  4168e0:	mov	w0, #0x100                 	// #256
  4168e4:	ldr	w1, [x29, #4396]
  4168e8:	cmp	w1, #0x0
  4168ec:	b.eq	4168f8 <stemlen_compare@@Base+0xef4>  // b.none
  4168f0:	ldr	x1, [x29, #4472]
  4168f4:	b	4168fc <stemlen_compare@@Base+0xef8>
  4168f8:	mov	x1, #0x0                   	// #0
  4168fc:	add	x5, x29, #0x40
  416900:	mov	w4, #0x0                   	// #0
  416904:	mov	x3, x1
  416908:	mov	w2, w0
  41690c:	mov	x1, #0x28                  	// #40
  416910:	mov	x0, x5
  416914:	bl	42a5e0 <parse_file_seq@@Base>
  416918:	str	x0, [x29, #4288]
  41691c:	ldr	x0, [x29, #4384]
  416920:	ldr	x1, [x29, #4288]
  416924:	str	x1, [x0]
  416928:	ldr	x0, [x29, #4288]
  41692c:	str	x0, [x29, #4408]
  416930:	b	416970 <stemlen_compare@@Base+0xf6c>
  416934:	ldr	w0, [x29, #4436]
  416938:	add	w0, w0, #0x1
  41693c:	str	w0, [x29, #4436]
  416940:	ldr	w0, [x29, #4420]
  416944:	cmp	w0, #0x0
  416948:	b.eq	41695c <stemlen_compare@@Base+0xf58>  // b.none
  41694c:	ldr	x0, [x29, #4408]
  416950:	ldrb	w1, [x0, #33]
  416954:	orr	w1, w1, #0x2
  416958:	strb	w1, [x0, #33]
  41695c:	ldr	x0, [x29, #4408]
  416960:	str	x0, [x29, #4384]
  416964:	ldr	x0, [x29, #4408]
  416968:	ldr	x0, [x0]
  41696c:	str	x0, [x29, #4408]
  416970:	ldr	x0, [x29, #4408]
  416974:	cmp	x0, #0x0
  416978:	b.ne	416934 <stemlen_compare@@Base+0xf30>  // b.any
  41697c:	ldr	x0, [x29, #64]
  416980:	ldrb	w0, [x0]
  416984:	cmp	w0, #0x7c
  416988:	b.ne	4169a0 <stemlen_compare@@Base+0xf9c>  // b.any
  41698c:	mov	w0, #0x1                   	// #1
  416990:	str	w0, [x29, #4420]
  416994:	ldr	x0, [x29, #64]
  416998:	add	x0, x0, #0x1
  41699c:	str	x0, [x29, #64]
  4169a0:	ldr	x0, [x29, #64]
  4169a4:	ldrb	w0, [x0]
  4169a8:	cmp	w0, #0x0
  4169ac:	b.ne	4168cc <stemlen_compare@@Base+0xec8>  // b.any
  4169b0:	ldr	w1, [x29, #4436]
  4169b4:	ldr	w0, [x29, #4556]
  4169b8:	cmp	w1, w0
  4169bc:	b.ls	416a38 <stemlen_compare@@Base+0x1034>  // b.plast
  4169c0:	ldr	x1, [x29, #4536]
  4169c4:	ldr	x0, [x29, #4544]
  4169c8:	sub	x0, x1, x0
  4169cc:	asr	x0, x0, #5
  4169d0:	str	x0, [x29, #4280]
  4169d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4169d8:	add	x0, x0, #0xb44
  4169dc:	ldr	w0, [x0]
  4169e0:	ldr	w2, [x29, #4436]
  4169e4:	ldr	w1, [x29, #4436]
  4169e8:	cmp	w2, w0
  4169ec:	csel	w1, w1, w0, cs  // cs = hs, nlast
  4169f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4169f4:	add	x0, x0, #0xb44
  4169f8:	str	w1, [x0]
  4169fc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  416a00:	add	x0, x0, #0xb44
  416a04:	ldr	w0, [x0]
  416a08:	str	w0, [x29, #4556]
  416a0c:	ldr	w0, [x29, #4556]
  416a10:	lsl	x0, x0, #5
  416a14:	mov	x1, x0
  416a18:	ldr	x0, [x29, #4544]
  416a1c:	bl	422720 <xrealloc@@Base>
  416a20:	str	x0, [x29, #4544]
  416a24:	ldr	x0, [x29, #4280]
  416a28:	lsl	x0, x0, #5
  416a2c:	ldr	x1, [x29, #4544]
  416a30:	add	x0, x1, x0
  416a34:	str	x0, [x29, #4536]
  416a38:	ldr	x0, [x29, #72]
  416a3c:	str	x0, [x29, #4408]
  416a40:	b	416f6c <stemlen_compare@@Base+0x1568>
  416a44:	ldr	x0, [x29, #4408]
  416a48:	ldr	x1, [x0, #8]
  416a4c:	ldr	x0, [x29, #4448]
  416a50:	ldr	x0, [x0, #8]
  416a54:	cmp	x0, #0x0
  416a58:	b.eq	416a68 <stemlen_compare@@Base+0x1064>  // b.none
  416a5c:	ldr	x0, [x29, #4448]
  416a60:	ldr	x0, [x0, #8]
  416a64:	b	416a74 <stemlen_compare@@Base+0x1070>
  416a68:	ldr	x0, [x29, #4448]
  416a6c:	ldr	x0, [x0, #16]
  416a70:	ldr	x0, [x0]
  416a74:	cmp	x0, x1
  416a78:	cset	w0, eq  // eq = none
  416a7c:	and	w0, w0, #0xff
  416a80:	str	w0, [x29, #4276]
  416a84:	ldr	x0, [x29, #4408]
  416a88:	ldr	x0, [x0, #8]
  416a8c:	bl	40aa88 <file_impossible_p@@Base>
  416a90:	cmp	w0, #0x0
  416a94:	b.eq	416b1c <stemlen_compare@@Base+0x1118>  // b.none
  416a98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416a9c:	add	x0, x0, #0x6dc
  416aa0:	ldr	w0, [x0]
  416aa4:	and	w0, w0, #0x8
  416aa8:	cmp	w0, #0x0
  416aac:	b.eq	416afc <stemlen_compare@@Base+0x10f8>  // b.none
  416ab0:	ldr	w0, [x29, #32]
  416ab4:	bl	4223c8 <print_spaces@@Base>
  416ab8:	ldr	w0, [x29, #4276]
  416abc:	cmp	w0, #0x0
  416ac0:	b.eq	416ad4 <stemlen_compare@@Base+0x10d0>  // b.none
  416ac4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416ac8:	add	x0, x0, #0x158
  416acc:	bl	406e40 <gettext@plt>
  416ad0:	b	416ae0 <stemlen_compare@@Base+0x10dc>
  416ad4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416ad8:	add	x0, x0, #0x188
  416adc:	bl	406e40 <gettext@plt>
  416ae0:	ldr	x1, [x29, #4408]
  416ae4:	ldr	x1, [x1, #8]
  416ae8:	bl	406dc0 <printf@plt>
  416aec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416af0:	add	x0, x0, #0x400
  416af4:	ldr	x0, [x0]
  416af8:	bl	406c90 <fflush@plt>
  416afc:	ldr	w0, [x29, #4492]
  416b00:	lsl	x0, x0, #5
  416b04:	ldr	x1, [x29, #4320]
  416b08:	add	x0, x1, x0
  416b0c:	str	xzr, [x0]
  416b10:	mov	w0, #0x1                   	// #1
  416b14:	str	w0, [x29, #4444]
  416b18:	b	416f78 <stemlen_compare@@Base+0x1574>
  416b1c:	mov	x2, #0x20                  	// #32
  416b20:	mov	w1, #0x0                   	// #0
  416b24:	ldr	x0, [x29, #4536]
  416b28:	bl	4069d0 <memset@plt>
  416b2c:	ldr	x0, [x29, #4408]
  416b30:	ldrb	w0, [x0, #33]
  416b34:	ubfx	x0, x0, #1, #1
  416b38:	and	w2, w0, #0xff
  416b3c:	ldr	x1, [x29, #4536]
  416b40:	ldrb	w0, [x1, #24]
  416b44:	bfxil	w0, w2, #0, #1
  416b48:	strb	w0, [x1, #24]
  416b4c:	ldr	x0, [x29, #4408]
  416b50:	ldrb	w0, [x0, #33]
  416b54:	ubfx	x0, x0, #4, #1
  416b58:	and	w2, w0, #0xff
  416b5c:	ldr	x1, [x29, #4536]
  416b60:	ldrb	w0, [x1, #24]
  416b64:	bfi	w0, w2, #1, #1
  416b68:	strb	w0, [x1, #24]
  416b6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416b70:	add	x0, x0, #0x6dc
  416b74:	ldr	w0, [x0]
  416b78:	and	w0, w0, #0x8
  416b7c:	cmp	w0, #0x0
  416b80:	b.eq	416bd0 <stemlen_compare@@Base+0x11cc>  // b.none
  416b84:	ldr	w0, [x29, #32]
  416b88:	bl	4223c8 <print_spaces@@Base>
  416b8c:	ldr	w0, [x29, #4276]
  416b90:	cmp	w0, #0x0
  416b94:	b.eq	416ba8 <stemlen_compare@@Base+0x11a4>  // b.none
  416b98:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416b9c:	add	x0, x0, #0x1c0
  416ba0:	bl	406e40 <gettext@plt>
  416ba4:	b	416bb4 <stemlen_compare@@Base+0x11b0>
  416ba8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416bac:	add	x0, x0, #0x1e0
  416bb0:	bl	406e40 <gettext@plt>
  416bb4:	ldr	x1, [x29, #4408]
  416bb8:	ldr	x1, [x1, #8]
  416bbc:	bl	406dc0 <printf@plt>
  416bc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416bc4:	add	x0, x0, #0x400
  416bc8:	ldr	x0, [x0]
  416bcc:	bl	406c90 <fflush@plt>
  416bd0:	ldr	x0, [x29, #40]
  416bd4:	ldr	x0, [x0, #24]
  416bd8:	str	x0, [x29, #4368]
  416bdc:	b	416ce0 <stemlen_compare@@Base+0x12dc>
  416be0:	ldr	x0, [x29, #4368]
  416be4:	ldr	x0, [x0, #8]
  416be8:	cmp	x0, #0x0
  416bec:	b.eq	416bfc <stemlen_compare@@Base+0x11f8>  // b.none
  416bf0:	ldr	x0, [x29, #4368]
  416bf4:	ldr	x0, [x0, #8]
  416bf8:	b	416c08 <stemlen_compare@@Base+0x1204>
  416bfc:	ldr	x0, [x29, #4368]
  416c00:	ldr	x0, [x0, #16]
  416c04:	ldr	x0, [x0]
  416c08:	ldr	x1, [x29, #4408]
  416c0c:	ldr	x1, [x1, #8]
  416c10:	cmp	x0, x1
  416c14:	b.eq	416cec <stemlen_compare@@Base+0x12e8>  // b.none
  416c18:	ldr	x0, [x29, #4368]
  416c1c:	ldr	x0, [x0, #8]
  416c20:	cmp	x0, #0x0
  416c24:	b.eq	416c34 <stemlen_compare@@Base+0x1230>  // b.none
  416c28:	ldr	x0, [x29, #4368]
  416c2c:	ldr	x0, [x0, #8]
  416c30:	b	416c40 <stemlen_compare@@Base+0x123c>
  416c34:	ldr	x0, [x29, #4368]
  416c38:	ldr	x0, [x0, #16]
  416c3c:	ldr	x0, [x0]
  416c40:	ldrb	w1, [x0]
  416c44:	ldr	x0, [x29, #4408]
  416c48:	ldr	x0, [x0, #8]
  416c4c:	ldrb	w0, [x0]
  416c50:	cmp	w1, w0
  416c54:	b.ne	416cd4 <stemlen_compare@@Base+0x12d0>  // b.any
  416c58:	ldr	x0, [x29, #4368]
  416c5c:	ldr	x0, [x0, #8]
  416c60:	cmp	x0, #0x0
  416c64:	b.eq	416c74 <stemlen_compare@@Base+0x1270>  // b.none
  416c68:	ldr	x0, [x29, #4368]
  416c6c:	ldr	x0, [x0, #8]
  416c70:	b	416c80 <stemlen_compare@@Base+0x127c>
  416c74:	ldr	x0, [x29, #4368]
  416c78:	ldr	x0, [x0, #16]
  416c7c:	ldr	x0, [x0]
  416c80:	ldrb	w0, [x0]
  416c84:	cmp	w0, #0x0
  416c88:	b.eq	416cec <stemlen_compare@@Base+0x12e8>  // b.none
  416c8c:	ldr	x0, [x29, #4368]
  416c90:	ldr	x0, [x0, #8]
  416c94:	cmp	x0, #0x0
  416c98:	b.eq	416cac <stemlen_compare@@Base+0x12a8>  // b.none
  416c9c:	ldr	x0, [x29, #4368]
  416ca0:	ldr	x0, [x0, #8]
  416ca4:	add	x0, x0, #0x1
  416ca8:	b	416cbc <stemlen_compare@@Base+0x12b8>
  416cac:	ldr	x0, [x29, #4368]
  416cb0:	ldr	x0, [x0, #16]
  416cb4:	ldr	x0, [x0]
  416cb8:	add	x0, x0, #0x1
  416cbc:	ldr	x1, [x29, #4408]
  416cc0:	ldr	x1, [x1, #8]
  416cc4:	add	x1, x1, #0x1
  416cc8:	bl	406bc0 <strcmp@plt>
  416ccc:	cmp	w0, #0x0
  416cd0:	b.eq	416cec <stemlen_compare@@Base+0x12e8>  // b.none
  416cd4:	ldr	x0, [x29, #4368]
  416cd8:	ldr	x0, [x0]
  416cdc:	str	x0, [x29, #4368]
  416ce0:	ldr	x0, [x29, #4368]
  416ce4:	cmp	x0, #0x0
  416ce8:	b.ne	416be0 <stemlen_compare@@Base+0x11dc>  // b.any
  416cec:	ldr	x0, [x29, #4368]
  416cf0:	cmp	x0, #0x0
  416cf4:	b.eq	416d14 <stemlen_compare@@Base+0x1310>  // b.none
  416cf8:	ldr	x0, [x29, #4536]
  416cfc:	add	x1, x0, #0x20
  416d00:	str	x1, [x29, #4536]
  416d04:	ldr	x1, [x29, #4408]
  416d08:	ldr	x1, [x1, #8]
  416d0c:	str	x1, [x0]
  416d10:	b	416f60 <stemlen_compare@@Base+0x155c>
  416d14:	ldr	x0, [x29, #4408]
  416d18:	ldr	x0, [x0, #8]
  416d1c:	bl	40c5bc <lookup_file@@Base>
  416d20:	cmp	x0, #0x0
  416d24:	b.ne	416d3c <stemlen_compare@@Base+0x1338>  // b.any
  416d28:	ldr	x0, [x29, #4408]
  416d2c:	ldr	x0, [x0, #8]
  416d30:	bl	40a78c <file_exists_p@@Base>
  416d34:	cmp	w0, #0x0
  416d38:	b.eq	416d58 <stemlen_compare@@Base+0x1354>  // b.none
  416d3c:	ldr	x0, [x29, #4536]
  416d40:	add	x1, x0, #0x20
  416d44:	str	x1, [x29, #4536]
  416d48:	ldr	x1, [x29, #4408]
  416d4c:	ldr	x1, [x1, #8]
  416d50:	str	x1, [x0]
  416d54:	b	416f60 <stemlen_compare@@Base+0x155c>
  416d58:	ldr	x0, [x29, #4408]
  416d5c:	ldr	x0, [x0, #8]
  416d60:	mov	x3, #0x0                   	// #0
  416d64:	mov	x2, #0x0                   	// #0
  416d68:	mov	x1, #0x0                   	// #0
  416d6c:	bl	4351e0 <vpath_search@@Base>
  416d70:	str	x0, [x29, #4264]
  416d74:	ldr	x0, [x29, #4264]
  416d78:	cmp	x0, #0x0
  416d7c:	b.eq	416df4 <stemlen_compare@@Base+0x13f0>  // b.none
  416d80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416d84:	add	x0, x0, #0x6dc
  416d88:	ldr	w0, [x0]
  416d8c:	and	w0, w0, #0x8
  416d90:	cmp	w0, #0x0
  416d94:	b.eq	416dd8 <stemlen_compare@@Base+0x13d4>  // b.none
  416d98:	ldr	w0, [x29, #32]
  416d9c:	bl	4223c8 <print_spaces@@Base>
  416da0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416da4:	add	x0, x0, #0x208
  416da8:	bl	406e40 <gettext@plt>
  416dac:	mov	x3, x0
  416db0:	ldr	x0, [x29, #4408]
  416db4:	ldr	x0, [x0, #8]
  416db8:	ldr	x2, [x29, #4264]
  416dbc:	mov	x1, x0
  416dc0:	mov	x0, x3
  416dc4:	bl	406dc0 <printf@plt>
  416dc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416dcc:	add	x0, x0, #0x400
  416dd0:	ldr	x0, [x0]
  416dd4:	bl	406c90 <fflush@plt>
  416dd8:	ldr	x0, [x29, #4536]
  416ddc:	add	x1, x0, #0x20
  416de0:	str	x1, [x29, #4536]
  416de4:	ldr	x1, [x29, #4408]
  416de8:	ldr	x1, [x1, #8]
  416dec:	str	x1, [x0]
  416df0:	b	416f60 <stemlen_compare@@Base+0x155c>
  416df4:	ldr	w0, [x29, #4504]
  416df8:	cmp	w0, #0x0
  416dfc:	b.eq	416f54 <stemlen_compare@@Base+0x1550>  // b.none
  416e00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416e04:	add	x0, x0, #0x6dc
  416e08:	ldr	w0, [x0]
  416e0c:	and	w0, w0, #0x8
  416e10:	cmp	w0, #0x0
  416e14:	b.eq	416e54 <stemlen_compare@@Base+0x1450>  // b.none
  416e18:	ldr	w0, [x29, #32]
  416e1c:	bl	4223c8 <print_spaces@@Base>
  416e20:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  416e24:	add	x0, x0, #0x230
  416e28:	bl	406e40 <gettext@plt>
  416e2c:	mov	x2, x0
  416e30:	ldr	x0, [x29, #4408]
  416e34:	ldr	x0, [x0, #8]
  416e38:	mov	x1, x0
  416e3c:	mov	x0, x2
  416e40:	bl	406dc0 <printf@plt>
  416e44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  416e48:	add	x0, x0, #0x400
  416e4c:	ldr	x0, [x0]
  416e50:	bl	406c90 <fflush@plt>
  416e54:	ldr	x0, [x29, #4560]
  416e58:	cmp	x0, #0x0
  416e5c:	b.ne	416e78 <stemlen_compare@@Base+0x1474>  // b.any
  416e60:	sub	sp, sp, #0x90
  416e64:	mov	x0, sp
  416e68:	add	x0, x0, #0xf
  416e6c:	lsr	x0, x0, #4
  416e70:	lsl	x0, x0, #4
  416e74:	str	x0, [x29, #4560]
  416e78:	mov	x2, #0x90                  	// #144
  416e7c:	mov	w1, #0x0                   	// #0
  416e80:	ldr	x0, [x29, #4560]
  416e84:	bl	4069d0 <memset@plt>
  416e88:	ldr	x0, [x29, #4408]
  416e8c:	ldr	x1, [x0, #8]
  416e90:	ldr	x0, [x29, #4560]
  416e94:	str	x1, [x0]
  416e98:	ldr	w0, [x29, #32]
  416e9c:	add	w1, w0, #0x1
  416ea0:	ldr	w0, [x29, #28]
  416ea4:	add	w0, w0, #0x1
  416ea8:	mov	w3, w0
  416eac:	mov	w2, w1
  416eb0:	mov	w1, #0x0                   	// #0
  416eb4:	ldr	x0, [x29, #4560]
  416eb8:	bl	415a6c <stemlen_compare@@Base+0x68>
  416ebc:	cmp	w0, #0x0
  416ec0:	b.eq	416f10 <stemlen_compare@@Base+0x150c>  // b.none
  416ec4:	ldr	x0, [x29, #4560]
  416ec8:	ldr	x1, [x0]
  416ecc:	ldr	x0, [x29, #4536]
  416ed0:	str	x1, [x0, #8]
  416ed4:	ldr	x0, [x29, #4408]
  416ed8:	ldr	x1, [x0, #8]
  416edc:	ldr	x0, [x29, #4560]
  416ee0:	str	x1, [x0]
  416ee4:	ldr	x0, [x29, #4536]
  416ee8:	ldr	x1, [x29, #4560]
  416eec:	str	x1, [x0, #16]
  416ef0:	str	xzr, [x29, #4560]
  416ef4:	ldr	x0, [x29, #4536]
  416ef8:	add	x1, x0, #0x20
  416efc:	str	x1, [x29, #4536]
  416f00:	ldr	x1, [x29, #4408]
  416f04:	ldr	x1, [x1, #8]
  416f08:	str	x1, [x0]
  416f0c:	b	416f60 <stemlen_compare@@Base+0x155c>
  416f10:	ldr	x0, [x29, #4560]
  416f14:	ldr	x0, [x0, #80]
  416f18:	cmp	x0, #0x0
  416f1c:	b.eq	416f2c <stemlen_compare@@Base+0x1528>  // b.none
  416f20:	ldr	x0, [x29, #4560]
  416f24:	ldr	x0, [x0, #80]
  416f28:	bl	431af8 <free_variable_set@@Base>
  416f2c:	ldr	x0, [x29, #4560]
  416f30:	ldr	x0, [x0, #88]
  416f34:	cmp	x0, #0x0
  416f38:	b.eq	416f48 <stemlen_compare@@Base+0x1544>  // b.none
  416f3c:	ldr	x0, [x29, #4560]
  416f40:	ldr	x0, [x0, #88]
  416f44:	bl	431af8 <free_variable_set@@Base>
  416f48:	ldr	x0, [x29, #4408]
  416f4c:	ldr	x0, [x0, #8]
  416f50:	bl	40a8b0 <file_impossible@@Base>
  416f54:	mov	w0, #0x1                   	// #1
  416f58:	str	w0, [x29, #4444]
  416f5c:	b	416f78 <stemlen_compare@@Base+0x1574>
  416f60:	ldr	x0, [x29, #4408]
  416f64:	ldr	x0, [x0]
  416f68:	str	x0, [x29, #4408]
  416f6c:	ldr	x0, [x29, #4408]
  416f70:	cmp	x0, #0x0
  416f74:	b.ne	416a44 <stemlen_compare@@Base+0x1040>  // b.any
  416f78:	ldr	x0, [x29, #72]
  416f7c:	bl	422b98 <free_ns_chain@@Base>
  416f80:	ldr	w0, [x29, #4444]
  416f84:	cmp	w0, #0x0
  416f88:	b.eq	4164c4 <stemlen_compare@@Base+0xac0>  // b.none
  416f8c:	b	416f94 <stemlen_compare@@Base+0x1590>
  416f90:	nop
  416f94:	ldr	x0, [x29, #40]
  416f98:	str	xzr, [x0, #40]
  416f9c:	ldr	x0, [x29, #4480]
  416fa0:	strb	wzr, [x0, #51]
  416fa4:	ldr	w0, [x29, #4444]
  416fa8:	cmp	w0, #0x0
  416fac:	b.eq	416ff8 <stemlen_compare@@Base+0x15f4>  // b.none
  416fb0:	b	416fd0 <stemlen_compare@@Base+0x15cc>
  416fb4:	nop
  416fb8:	b	4164c4 <stemlen_compare@@Base+0xac0>
  416fbc:	nop
  416fc0:	b	416fd0 <stemlen_compare@@Base+0x15cc>
  416fc4:	nop
  416fc8:	b	416fd0 <stemlen_compare@@Base+0x15cc>
  416fcc:	nop
  416fd0:	ldr	w0, [x29, #4492]
  416fd4:	add	w0, w0, #0x1
  416fd8:	str	w0, [x29, #4492]
  416fdc:	ldr	w1, [x29, #4492]
  416fe0:	ldr	w0, [x29, #4508]
  416fe4:	cmp	w1, w0
  416fe8:	b.cc	416180 <stemlen_compare@@Base+0x77c>  // b.lo, b.ul, b.last
  416fec:	b	416ffc <stemlen_compare@@Base+0x15f8>
  416ff0:	nop
  416ff4:	b	416ffc <stemlen_compare@@Base+0x15f8>
  416ff8:	nop
  416ffc:	ldr	w1, [x29, #4492]
  417000:	ldr	w0, [x29, #4508]
  417004:	cmp	w1, w0
  417008:	b.cc	41702c <stemlen_compare@@Base+0x1628>  // b.lo, b.ul, b.last
  41700c:	str	xzr, [x29, #4480]
  417010:	ldr	w0, [x29, #4504]
  417014:	add	w0, w0, #0x1
  417018:	str	w0, [x29, #4504]
  41701c:	ldr	w0, [x29, #4504]
  417020:	cmp	w0, #0x1
  417024:	b.le	416170 <stemlen_compare@@Base+0x76c>
  417028:	b	417030 <stemlen_compare@@Base+0x162c>
  41702c:	nop
  417030:	ldr	x0, [x29, #4480]
  417034:	cmp	x0, #0x0
  417038:	b.eq	417794 <stemlen_compare@@Base+0x1d90>  // b.none
  41703c:	ldr	w0, [x29, #4492]
  417040:	str	w0, [x29, #4260]
  417044:	ldr	w0, [x29, #28]
  417048:	cmp	w0, #0x0
  41704c:	b.eq	417394 <stemlen_compare@@Base+0x1990>  // b.none
  417050:	ldr	x0, [x29, #4480]
  417054:	ldr	x1, [x0, #8]
  417058:	ldr	w0, [x29, #4260]
  41705c:	lsl	x0, x0, #5
  417060:	ldr	x2, [x29, #4320]
  417064:	add	x0, x2, x0
  417068:	ldr	w0, [x0, #16]
  41706c:	mov	w0, w0
  417070:	lsl	x0, x0, #3
  417074:	add	x0, x1, x0
  417078:	ldr	x1, [x0]
  41707c:	ldr	x0, [x29, #40]
  417080:	str	x1, [x0]
  417084:	b	417394 <stemlen_compare@@Base+0x1990>
  417088:	ldr	x0, [x29, #4536]
  41708c:	ldr	x0, [x0, #16]
  417090:	cmp	x0, #0x0
  417094:	b.eq	417260 <stemlen_compare@@Base+0x185c>  // b.none
  417098:	ldr	x0, [x29, #4536]
  41709c:	ldr	x0, [x0, #16]
  4170a0:	str	x0, [x29, #4208]
  4170a4:	ldr	x0, [x29, #4208]
  4170a8:	ldr	x0, [x0]
  4170ac:	bl	40c5bc <lookup_file@@Base>
  4170b0:	str	x0, [x29, #4352]
  4170b4:	ldr	x0, [x29, #4352]
  4170b8:	cmp	x0, #0x0
  4170bc:	b.eq	4170d4 <stemlen_compare@@Base+0x16d0>  // b.none
  4170c0:	ldr	x0, [x29, #4352]
  4170c4:	ldrb	w1, [x0, #137]
  4170c8:	orr	w1, w1, #0xffffff80
  4170cc:	strb	w1, [x0, #137]
  4170d0:	b	4170e4 <stemlen_compare@@Base+0x16e0>
  4170d4:	ldr	x0, [x29, #4208]
  4170d8:	ldr	x0, [x0]
  4170dc:	bl	40c678 <enter_file@@Base>
  4170e0:	str	x0, [x29, #4352]
  4170e4:	ldr	x0, [x29, #4208]
  4170e8:	ldr	x1, [x0, #24]
  4170ec:	ldr	x0, [x29, #4352]
  4170f0:	str	x1, [x0, #24]
  4170f4:	ldr	x0, [x29, #4208]
  4170f8:	ldr	x1, [x0, #32]
  4170fc:	ldr	x0, [x29, #4352]
  417100:	str	x1, [x0, #32]
  417104:	ldr	x0, [x29, #4208]
  417108:	ldr	x1, [x0, #40]
  41710c:	ldr	x0, [x29, #4352]
  417110:	str	x1, [x0, #40]
  417114:	ldr	x0, [x29, #4208]
  417118:	ldr	x1, [x0, #80]
  41711c:	ldr	x0, [x29, #4352]
  417120:	str	x1, [x0, #80]
  417124:	ldr	x0, [x29, #4208]
  417128:	ldr	x1, [x0, #88]
  41712c:	ldr	x0, [x29, #4352]
  417130:	str	x1, [x0, #88]
  417134:	ldr	x0, [x29, #4208]
  417138:	ldrb	w0, [x0, #138]
  41713c:	ubfx	x0, x0, #2, #1
  417140:	and	w2, w0, #0xff
  417144:	ldr	x1, [x29, #4352]
  417148:	ldrb	w0, [x1, #138]
  41714c:	bfi	w0, w2, #2, #1
  417150:	strb	w0, [x1, #138]
  417154:	ldr	x0, [x29, #4208]
  417158:	ldr	x1, [x0, #48]
  41715c:	ldr	x0, [x29, #4352]
  417160:	str	x1, [x0, #48]
  417164:	ldr	x0, [x29, #4352]
  417168:	ldrb	w1, [x0, #137]
  41716c:	orr	w1, w1, #0x8
  417170:	strb	w1, [x0, #137]
  417174:	ldr	x0, [x29, #4352]
  417178:	ldrb	w1, [x0, #137]
  41717c:	orr	w1, w1, #0x40
  417180:	strb	w1, [x0, #137]
  417184:	ldr	x0, [x29, #4352]
  417188:	ldrb	w1, [x0, #137]
  41718c:	orr	w1, w1, #0x1
  417190:	strb	w1, [x0, #137]
  417194:	ldr	x0, [x29, #4536]
  417198:	ldr	x0, [x0, #8]
  41719c:	bl	40c5bc <lookup_file@@Base>
  4171a0:	str	x0, [x29, #4208]
  4171a4:	ldr	x0, [x29, #4208]
  4171a8:	cmp	x0, #0x0
  4171ac:	b.eq	4171d8 <stemlen_compare@@Base+0x17d4>  // b.none
  4171b0:	ldr	x0, [x29, #4208]
  4171b4:	ldrb	w0, [x0, #136]
  4171b8:	and	w0, w0, #0x20
  4171bc:	and	w0, w0, #0xff
  4171c0:	cmp	w0, #0x0
  4171c4:	b.eq	4171d8 <stemlen_compare@@Base+0x17d4>  // b.none
  4171c8:	ldr	x0, [x29, #4352]
  4171cc:	ldrb	w1, [x0, #136]
  4171d0:	orr	w1, w1, #0x20
  4171d4:	strb	w1, [x0, #136]
  4171d8:	ldr	x0, [x29, #4352]
  4171dc:	ldr	x0, [x0, #24]
  4171e0:	str	x0, [x29, #4360]
  4171e4:	b	417254 <stemlen_compare@@Base+0x1850>
  4171e8:	ldr	x0, [x29, #4360]
  4171ec:	ldr	x0, [x0, #8]
  4171f0:	bl	40c678 <enter_file@@Base>
  4171f4:	mov	x1, x0
  4171f8:	ldr	x0, [x29, #4360]
  4171fc:	str	x1, [x0, #16]
  417200:	ldr	x0, [x29, #4360]
  417204:	str	xzr, [x0, #8]
  417208:	ldr	x0, [x29, #4360]
  41720c:	ldr	x0, [x0, #16]
  417210:	ldrb	w0, [x0, #137]
  417214:	ubfx	x0, x0, #0, #1
  417218:	and	w2, w0, #0xff
  41721c:	ldr	x0, [x29, #4360]
  417220:	ldrb	w0, [x0, #33]
  417224:	ubfx	x0, x0, #0, #1
  417228:	and	w0, w0, #0xff
  41722c:	ldr	x1, [x29, #4360]
  417230:	ldr	x1, [x1, #16]
  417234:	orr	w0, w2, w0
  417238:	and	w2, w0, #0xff
  41723c:	ldrb	w0, [x1, #137]
  417240:	bfxil	w0, w2, #0, #1
  417244:	strb	w0, [x1, #137]
  417248:	ldr	x0, [x29, #4360]
  41724c:	ldr	x0, [x0]
  417250:	str	x0, [x29, #4360]
  417254:	ldr	x0, [x29, #4360]
  417258:	cmp	x0, #0x0
  41725c:	b.ne	4171e8 <stemlen_compare@@Base+0x17e4>  // b.any
  417260:	mov	x0, #0x28                  	// #40
  417264:	bl	4226d4 <xcalloc@@Base>
  417268:	str	x0, [x29, #4360]
  41726c:	ldr	x0, [x29, #4536]
  417270:	ldrb	w0, [x0, #24]
  417274:	ubfx	x0, x0, #0, #1
  417278:	and	w2, w0, #0xff
  41727c:	ldr	x1, [x29, #4360]
  417280:	ldrb	w0, [x1, #33]
  417284:	bfi	w0, w2, #1, #1
  417288:	strb	w0, [x1, #33]
  41728c:	ldr	x0, [x29, #4536]
  417290:	ldrb	w0, [x0, #24]
  417294:	ubfx	x0, x0, #1, #1
  417298:	and	w2, w0, #0xff
  41729c:	ldr	x1, [x29, #4360]
  4172a0:	ldrb	w0, [x1, #33]
  4172a4:	bfi	w0, w2, #4, #1
  4172a8:	strb	w0, [x1, #33]
  4172ac:	ldr	x0, [x29, #4536]
  4172b0:	ldr	x0, [x0]
  4172b4:	bl	430d78 <strcache_add@@Base>
  4172b8:	str	x0, [x29, #4200]
  4172bc:	ldr	w0, [x29, #28]
  4172c0:	cmp	w0, #0x0
  4172c4:	b.eq	4172d8 <stemlen_compare@@Base+0x18d4>  // b.none
  4172c8:	ldr	x0, [x29, #4360]
  4172cc:	ldr	x1, [x29, #4200]
  4172d0:	str	x1, [x0, #8]
  4172d4:	b	417310 <stemlen_compare@@Base+0x190c>
  4172d8:	ldr	x0, [x29, #4200]
  4172dc:	bl	40c5bc <lookup_file@@Base>
  4172e0:	mov	x1, x0
  4172e4:	ldr	x0, [x29, #4360]
  4172e8:	str	x1, [x0, #16]
  4172ec:	ldr	x0, [x29, #4360]
  4172f0:	ldr	x0, [x0, #16]
  4172f4:	cmp	x0, #0x0
  4172f8:	b.ne	417310 <stemlen_compare@@Base+0x190c>  // b.any
  4172fc:	ldr	x0, [x29, #4200]
  417300:	bl	40c678 <enter_file@@Base>
  417304:	mov	x1, x0
  417308:	ldr	x0, [x29, #4360]
  41730c:	str	x1, [x0, #16]
  417310:	ldr	x0, [x29, #4536]
  417314:	ldr	x0, [x0, #16]
  417318:	cmp	x0, #0x0
  41731c:	b.ne	417378 <stemlen_compare@@Base+0x1974>  // b.any
  417320:	ldr	w0, [x29, #4260]
  417324:	lsl	x0, x0, #5
  417328:	ldr	x1, [x29, #4320]
  41732c:	add	x0, x1, x0
  417330:	ldr	x0, [x0]
  417334:	ldrb	w0, [x0, #50]
  417338:	cmp	w0, #0x0
  41733c:	b.eq	417378 <stemlen_compare@@Base+0x1974>  // b.none
  417340:	ldr	x0, [x29, #4360]
  417344:	ldr	x0, [x0, #16]
  417348:	cmp	x0, #0x0
  41734c:	b.ne	417364 <stemlen_compare@@Base+0x1960>  // b.any
  417350:	ldr	x0, [x29, #4360]
  417354:	ldrb	w1, [x0, #33]
  417358:	orr	w1, w1, #0x1
  41735c:	strb	w1, [x0, #33]
  417360:	b	417378 <stemlen_compare@@Base+0x1974>
  417364:	ldr	x0, [x29, #4360]
  417368:	ldr	x0, [x0, #16]
  41736c:	ldrb	w1, [x0, #137]
  417370:	orr	w1, w1, #0x1
  417374:	strb	w1, [x0, #137]
  417378:	ldr	x0, [x29, #40]
  41737c:	ldr	x1, [x0, #24]
  417380:	ldr	x0, [x29, #4360]
  417384:	str	x1, [x0]
  417388:	ldr	x0, [x29, #40]
  41738c:	ldr	x1, [x29, #4360]
  417390:	str	x1, [x0, #24]
  417394:	ldr	x0, [x29, #4536]
  417398:	sub	x1, x0, #0x20
  41739c:	str	x1, [x29, #4536]
  4173a0:	ldr	x1, [x29, #4544]
  4173a4:	cmp	x1, x0
  4173a8:	b.cc	417088 <stemlen_compare@@Base+0x1684>  // b.lo, b.ul, b.last
  4173ac:	ldr	w0, [x29, #4260]
  4173b0:	lsl	x0, x0, #5
  4173b4:	ldr	x1, [x29, #4320]
  4173b8:	add	x0, x1, x0
  4173bc:	ldrb	w0, [x0, #24]
  4173c0:	cmp	w0, #0x0
  4173c4:	b.ne	4173ec <stemlen_compare@@Base+0x19e8>  // b.any
  4173c8:	ldr	x1, [x29, #4520]
  4173cc:	ldr	x0, [x29, #4528]
  4173d0:	bl	430da0 <strcache_add_len@@Base>
  4173d4:	mov	x1, x0
  4173d8:	ldr	x0, [x29, #40]
  4173dc:	str	x1, [x0, #40]
  4173e0:	ldr	x0, [x29, #4520]
  4173e4:	str	x0, [x29, #4512]
  4173e8:	b	417444 <stemlen_compare@@Base+0x1a40>
  4173ec:	ldr	x1, [x29, #4312]
  4173f0:	ldr	x0, [x29, #4520]
  4173f4:	add	x0, x1, x0
  4173f8:	str	x0, [x29, #4512]
  4173fc:	add	x0, x29, #0x50
  417400:	ldr	x2, [x29, #4312]
  417404:	ldr	x1, [x29, #4344]
  417408:	bl	4066b0 <memcpy@plt>
  41740c:	add	x1, x29, #0x50
  417410:	ldr	x0, [x29, #4312]
  417414:	add	x0, x1, x0
  417418:	ldr	x2, [x29, #4520]
  41741c:	ldr	x1, [x29, #4528]
  417420:	bl	4066b0 <memcpy@plt>
  417424:	ldr	x0, [x29, #4512]
  417428:	add	x1, x29, #0x50
  41742c:	strb	wzr, [x1, x0]
  417430:	add	x0, x29, #0x50
  417434:	bl	430d78 <strcache_add@@Base>
  417438:	mov	x1, x0
  41743c:	ldr	x0, [x29, #40]
  417440:	str	x1, [x0, #40]
  417444:	ldr	x0, [x29, #4480]
  417448:	ldr	x1, [x0, #40]
  41744c:	ldr	x0, [x29, #40]
  417450:	str	x1, [x0, #32]
  417454:	ldr	x0, [x29, #40]
  417458:	ldrb	w1, [x0, #137]
  41745c:	orr	w1, w1, #0x8
  417460:	strb	w1, [x0, #137]
  417464:	ldr	x0, [x29, #4480]
  417468:	ldr	x1, [x0, #8]
  41746c:	ldr	w0, [x29, #4260]
  417470:	lsl	x0, x0, #5
  417474:	ldr	x2, [x29, #4320]
  417478:	add	x0, x2, x0
  41747c:	ldr	w0, [x0, #16]
  417480:	mov	w0, w0
  417484:	lsl	x0, x0, #3
  417488:	add	x0, x1, x0
  41748c:	ldr	x0, [x0]
  417490:	bl	40c5bc <lookup_file@@Base>
  417494:	str	x0, [x29, #4248]
  417498:	ldr	x0, [x29, #4248]
  41749c:	cmp	x0, #0x0
  4174a0:	b.eq	4174cc <stemlen_compare@@Base+0x1ac8>  // b.none
  4174a4:	ldr	x0, [x29, #4248]
  4174a8:	ldrb	w0, [x0, #136]
  4174ac:	and	w0, w0, #0x20
  4174b0:	and	w0, w0, #0xff
  4174b4:	cmp	w0, #0x0
  4174b8:	b.eq	4174cc <stemlen_compare@@Base+0x1ac8>  // b.none
  4174bc:	ldr	x0, [x29, #40]
  4174c0:	ldrb	w1, [x0, #136]
  4174c4:	orr	w1, w1, #0x20
  4174c8:	strb	w1, [x0, #136]
  4174cc:	ldr	x0, [x29, #4480]
  4174d0:	ldrh	w0, [x0, #48]
  4174d4:	cmp	w0, #0x1
  4174d8:	b.ls	41779c <stemlen_compare@@Base+0x1d98>  // b.plast
  4174dc:	str	wzr, [x29, #4492]
  4174e0:	b	417770 <stemlen_compare@@Base+0x1d6c>
  4174e4:	ldr	w0, [x29, #4260]
  4174e8:	lsl	x0, x0, #5
  4174ec:	ldr	x1, [x29, #4320]
  4174f0:	add	x0, x1, x0
  4174f4:	ldr	w0, [x0, #16]
  4174f8:	ldr	w1, [x29, #4492]
  4174fc:	cmp	w1, w0
  417500:	b.eq	417764 <stemlen_compare@@Base+0x1d60>  // b.none
  417504:	ldr	x0, [x29, #4480]
  417508:	ldr	x1, [x0, #16]
  41750c:	ldr	w0, [x29, #4492]
  417510:	lsl	x0, x0, #2
  417514:	add	x0, x1, x0
  417518:	ldr	w0, [x0]
  41751c:	mov	w1, w0
  417520:	ldr	x0, [x29, #4512]
  417524:	add	x0, x1, x0
  417528:	add	x0, x0, #0x1
  41752c:	add	x0, x0, #0xf
  417530:	lsr	x0, x0, #4
  417534:	lsl	x0, x0, #4
  417538:	sub	sp, sp, x0
  41753c:	mov	x0, sp
  417540:	add	x0, x0, #0xf
  417544:	lsr	x0, x0, #4
  417548:	lsl	x0, x0, #4
  41754c:	str	x0, [x29, #4240]
  417550:	ldr	x0, [x29, #4240]
  417554:	str	x0, [x29, #4232]
  417558:	mov	x0, #0x28                  	// #40
  41755c:	bl	4226d4 <xcalloc@@Base>
  417560:	str	x0, [x29, #4224]
  417564:	ldr	x0, [x29, #4480]
  417568:	ldr	x1, [x0, #8]
  41756c:	ldr	w0, [x29, #4492]
  417570:	lsl	x0, x0, #3
  417574:	add	x0, x1, x0
  417578:	ldr	x3, [x0]
  41757c:	ldr	x0, [x29, #4480]
  417580:	ldr	x1, [x0, #24]
  417584:	ldr	w0, [x29, #4492]
  417588:	lsl	x0, x0, #3
  41758c:	add	x0, x1, x0
  417590:	ldr	x1, [x0]
  417594:	ldr	x0, [x29, #4480]
  417598:	ldr	x2, [x0, #8]
  41759c:	ldr	w0, [x29, #4492]
  4175a0:	lsl	x0, x0, #3
  4175a4:	add	x0, x2, x0
  4175a8:	ldr	x0, [x0]
  4175ac:	sub	x0, x1, x0
  4175b0:	sub	x0, x0, #0x1
  4175b4:	mov	x2, x0
  4175b8:	mov	x1, x3
  4175bc:	ldr	x0, [x29, #4232]
  4175c0:	bl	4066b0 <memcpy@plt>
  4175c4:	ldr	x0, [x29, #4480]
  4175c8:	ldr	x1, [x0, #24]
  4175cc:	ldr	w0, [x29, #4492]
  4175d0:	lsl	x0, x0, #3
  4175d4:	add	x0, x1, x0
  4175d8:	ldr	x1, [x0]
  4175dc:	ldr	x0, [x29, #4480]
  4175e0:	ldr	x2, [x0, #8]
  4175e4:	ldr	w0, [x29, #4492]
  4175e8:	lsl	x0, x0, #3
  4175ec:	add	x0, x2, x0
  4175f0:	ldr	x0, [x0]
  4175f4:	sub	x0, x1, x0
  4175f8:	sub	x0, x0, #0x1
  4175fc:	ldr	x1, [x29, #4232]
  417600:	add	x0, x1, x0
  417604:	str	x0, [x29, #4232]
  417608:	ldr	x0, [x29, #40]
  41760c:	ldr	x0, [x0, #40]
  417610:	ldr	x2, [x29, #4512]
  417614:	mov	x1, x0
  417618:	ldr	x0, [x29, #4232]
  41761c:	bl	4066b0 <memcpy@plt>
  417620:	ldr	x1, [x29, #4232]
  417624:	ldr	x0, [x29, #4512]
  417628:	add	x0, x1, x0
  41762c:	str	x0, [x29, #4232]
  417630:	ldr	x0, [x29, #4480]
  417634:	ldr	x1, [x0, #24]
  417638:	ldr	w0, [x29, #4492]
  41763c:	lsl	x0, x0, #3
  417640:	add	x0, x1, x0
  417644:	ldr	x4, [x0]
  417648:	ldr	x0, [x29, #4480]
  41764c:	ldr	x1, [x0, #16]
  417650:	ldr	w0, [x29, #4492]
  417654:	lsl	x0, x0, #2
  417658:	add	x0, x1, x0
  41765c:	ldr	w0, [x0]
  417660:	mov	w1, w0
  417664:	ldr	x0, [x29, #4480]
  417668:	ldr	x2, [x0, #24]
  41766c:	ldr	w0, [x29, #4492]
  417670:	lsl	x0, x0, #3
  417674:	add	x0, x2, x0
  417678:	ldr	x2, [x0]
  41767c:	ldr	x0, [x29, #4480]
  417680:	ldr	x3, [x0, #8]
  417684:	ldr	w0, [x29, #4492]
  417688:	lsl	x0, x0, #3
  41768c:	add	x0, x3, x0
  417690:	ldr	x0, [x0]
  417694:	sub	x0, x2, x0
  417698:	sub	x0, x1, x0
  41769c:	add	x0, x0, #0x1
  4176a0:	mov	x2, x0
  4176a4:	mov	x1, x4
  4176a8:	ldr	x0, [x29, #4232]
  4176ac:	bl	4066b0 <memcpy@plt>
  4176b0:	ldr	x0, [x29, #4240]
  4176b4:	bl	430d78 <strcache_add@@Base>
  4176b8:	mov	x1, x0
  4176bc:	ldr	x0, [x29, #4224]
  4176c0:	str	x1, [x0, #8]
  4176c4:	ldr	x0, [x29, #4224]
  4176c8:	ldr	x0, [x0, #8]
  4176cc:	bl	40c678 <enter_file@@Base>
  4176d0:	mov	x1, x0
  4176d4:	ldr	x0, [x29, #4224]
  4176d8:	str	x1, [x0, #16]
  4176dc:	ldr	x0, [x29, #40]
  4176e0:	ldr	x1, [x0, #48]
  4176e4:	ldr	x0, [x29, #4224]
  4176e8:	str	x1, [x0]
  4176ec:	ldr	x0, [x29, #4480]
  4176f0:	ldr	x1, [x0, #8]
  4176f4:	ldr	w0, [x29, #4492]
  4176f8:	lsl	x0, x0, #3
  4176fc:	add	x0, x1, x0
  417700:	ldr	x0, [x0]
  417704:	bl	40c5bc <lookup_file@@Base>
  417708:	str	x0, [x29, #4216]
  41770c:	ldr	x0, [x29, #4216]
  417710:	cmp	x0, #0x0
  417714:	b.eq	417744 <stemlen_compare@@Base+0x1d40>  // b.none
  417718:	ldr	x0, [x29, #4216]
  41771c:	ldrb	w0, [x0, #136]
  417720:	and	w0, w0, #0x20
  417724:	and	w0, w0, #0xff
  417728:	cmp	w0, #0x0
  41772c:	b.eq	417744 <stemlen_compare@@Base+0x1d40>  // b.none
  417730:	ldr	x0, [x29, #4224]
  417734:	ldr	x0, [x0, #16]
  417738:	ldrb	w1, [x0, #136]
  41773c:	orr	w1, w1, #0x20
  417740:	strb	w1, [x0, #136]
  417744:	ldr	x0, [x29, #4224]
  417748:	ldr	x0, [x0, #16]
  41774c:	ldrb	w1, [x0, #137]
  417750:	orr	w1, w1, #0x8
  417754:	strb	w1, [x0, #137]
  417758:	ldr	x0, [x29, #40]
  41775c:	ldr	x1, [x29, #4224]
  417760:	str	x1, [x0, #48]
  417764:	ldr	w0, [x29, #4492]
  417768:	add	w0, w0, #0x1
  41776c:	str	w0, [x29, #4492]
  417770:	ldr	x0, [x29, #4480]
  417774:	ldrh	w0, [x0, #48]
  417778:	mov	w1, w0
  41777c:	ldr	w0, [x29, #4492]
  417780:	cmp	w0, w1
  417784:	b.cc	4174e4 <stemlen_compare@@Base+0x1ae0>  // b.lo, b.ul, b.last
  417788:	b	41779c <stemlen_compare@@Base+0x1d98>
  41778c:	nop
  417790:	b	4177a0 <stemlen_compare@@Base+0x1d9c>
  417794:	nop
  417798:	b	4177a0 <stemlen_compare@@Base+0x1d9c>
  41779c:	nop
  4177a0:	ldr	x0, [x29, #4320]
  4177a4:	bl	406c00 <free@plt>
  4177a8:	ldr	x0, [x29, #4544]
  4177ac:	bl	406c00 <free@plt>
  4177b0:	ldr	x0, [x29, #4480]
  4177b4:	cmp	x0, #0x0
  4177b8:	cset	w0, ne  // ne = any
  4177bc:	and	w0, w0, #0xff
  4177c0:	mov	sp, x29
  4177c4:	ldp	x29, x30, [sp]
  4177c8:	mov	x12, #0x11e0                	// #4576
  4177cc:	add	sp, sp, x12
  4177d0:	ret
  4177d4:	stp	x29, x30, [sp, #-32]!
  4177d8:	mov	x29, sp
  4177dc:	str	w0, [sp, #28]
  4177e0:	ldrsw	x0, [sp, #28]
  4177e4:	mov	x2, x0
  4177e8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4177ec:	add	x1, x0, #0x270
  4177f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4177f4:	add	x0, x0, #0x650
  4177f8:	bl	406790 <sprintf@plt>
  4177fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417800:	add	x0, x0, #0x650
  417804:	ldp	x29, x30, [sp], #32
  417808:	ret

000000000041780c <is_bourne_compatible_shell@@Base>:
  41780c:	stp	x29, x30, [sp, #-64]!
  417810:	mov	x29, sp
  417814:	str	x0, [sp, #24]
  417818:	mov	w1, #0x2f                  	// #47
  41781c:	ldr	x0, [sp, #24]
  417820:	bl	406ae0 <strrchr@plt>
  417824:	str	x0, [sp, #48]
  417828:	mov	w1, #0x5c                  	// #92
  41782c:	ldr	x0, [sp, #24]
  417830:	bl	406ae0 <strrchr@plt>
  417834:	str	x0, [sp, #40]
  417838:	ldr	x0, [sp, #48]
  41783c:	cmp	x0, #0x0
  417840:	b.eq	41786c <is_bourne_compatible_shell@@Base+0x60>  // b.none
  417844:	ldr	x0, [sp, #40]
  417848:	cmp	x0, #0x0
  41784c:	b.eq	41786c <is_bourne_compatible_shell@@Base+0x60>  // b.none
  417850:	ldr	x0, [sp, #48]
  417854:	ldr	x2, [sp, #40]
  417858:	ldr	x1, [sp, #40]
  41785c:	cmp	x2, x0
  417860:	csel	x0, x1, x0, cs  // cs = hs, nlast
  417864:	str	x0, [sp, #48]
  417868:	b	417898 <is_bourne_compatible_shell@@Base+0x8c>
  41786c:	ldr	x0, [sp, #40]
  417870:	cmp	x0, #0x0
  417874:	b.eq	417884 <is_bourne_compatible_shell@@Base+0x78>  // b.none
  417878:	ldr	x0, [sp, #40]
  41787c:	str	x0, [sp, #48]
  417880:	b	417898 <is_bourne_compatible_shell@@Base+0x8c>
  417884:	ldr	x0, [sp, #48]
  417888:	cmp	x0, #0x0
  41788c:	b.ne	417898 <is_bourne_compatible_shell@@Base+0x8c>  // b.any
  417890:	ldr	x0, [sp, #24]
  417894:	str	x0, [sp, #48]
  417898:	ldr	x0, [sp, #48]
  41789c:	ldrb	w0, [x0]
  4178a0:	cmp	w0, #0x2f
  4178a4:	b.eq	4178b8 <is_bourne_compatible_shell@@Base+0xac>  // b.none
  4178a8:	ldr	x0, [sp, #48]
  4178ac:	ldrb	w0, [x0]
  4178b0:	cmp	w0, #0x5c
  4178b4:	b.ne	4178c4 <is_bourne_compatible_shell@@Base+0xb8>  // b.any
  4178b8:	ldr	x0, [sp, #48]
  4178bc:	add	x0, x0, #0x1
  4178c0:	str	x0, [sp, #48]
  4178c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4178c8:	add	x0, x0, #0x58
  4178cc:	str	x0, [sp, #56]
  4178d0:	b	417904 <is_bourne_compatible_shell@@Base+0xf8>
  4178d4:	ldr	x0, [sp, #56]
  4178d8:	ldr	x0, [x0]
  4178dc:	mov	x1, x0
  4178e0:	ldr	x0, [sp, #48]
  4178e4:	bl	406bc0 <strcmp@plt>
  4178e8:	cmp	w0, #0x0
  4178ec:	b.ne	4178f8 <is_bourne_compatible_shell@@Base+0xec>  // b.any
  4178f0:	mov	w0, #0x1                   	// #1
  4178f4:	b	417918 <is_bourne_compatible_shell@@Base+0x10c>
  4178f8:	ldr	x0, [sp, #56]
  4178fc:	add	x0, x0, #0x8
  417900:	str	x0, [sp, #56]
  417904:	ldr	x0, [sp, #56]
  417908:	ldr	x0, [x0]
  41790c:	cmp	x0, #0x0
  417910:	b.ne	4178d4 <is_bourne_compatible_shell@@Base+0xc8>  // b.any
  417914:	mov	w0, #0x0                   	// #0
  417918:	ldp	x29, x30, [sp], #64
  41791c:	ret
  417920:	stp	x29, x30, [sp, #-16]!
  417924:	mov	x29, sp
  417928:	mov	x2, #0x0                   	// #0
  41792c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  417930:	add	x1, x0, #0xa98
  417934:	mov	w0, #0x0                   	// #0
  417938:	bl	406750 <sigprocmask@plt>
  41793c:	nop
  417940:	ldp	x29, x30, [sp], #16
  417944:	ret
  417948:	stp	x29, x30, [sp, #-16]!
  41794c:	mov	x29, sp
  417950:	mov	x2, #0x0                   	// #0
  417954:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  417958:	add	x1, x0, #0xa98
  41795c:	mov	w0, #0x1                   	// #1
  417960:	bl	406750 <sigprocmask@plt>
  417964:	nop
  417968:	ldp	x29, x30, [sp], #16
  41796c:	ret

0000000000417970 <unblock_all_sigs@@Base>:
  417970:	stp	x29, x30, [sp, #-144]!
  417974:	mov	x29, sp
  417978:	add	x0, sp, #0x10
  41797c:	bl	406970 <sigemptyset@plt>
  417980:	add	x0, sp, #0x10
  417984:	mov	x2, #0x0                   	// #0
  417988:	mov	x1, x0
  41798c:	mov	w0, #0x2                   	// #2
  417990:	bl	406750 <sigprocmask@plt>
  417994:	nop
  417998:	ldp	x29, x30, [sp], #144
  41799c:	ret
  4179a0:	stp	x29, x30, [sp, #-144]!
  4179a4:	mov	x29, sp
  4179a8:	str	x19, [sp, #16]
  4179ac:	sub	sp, sp, #0x10
  4179b0:	str	x0, [x29, #56]
  4179b4:	str	w1, [x29, #52]
  4179b8:	str	w2, [x29, #48]
  4179bc:	str	w3, [x29, #44]
  4179c0:	str	w4, [x29, #40]
  4179c4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4179c8:	add	x0, x0, #0x278
  4179cc:	str	x0, [x29, #136]
  4179d0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4179d4:	add	x0, x0, #0x280
  4179d8:	str	x0, [x29, #128]
  4179dc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4179e0:	add	x0, x0, #0x280
  4179e4:	str	x0, [x29, #120]
  4179e8:	ldr	x0, [x29, #56]
  4179ec:	ldr	x0, [x0, #40]
  4179f0:	str	x0, [x29, #104]
  4179f4:	ldr	x0, [x29, #104]
  4179f8:	ldr	x0, [x0, #32]
  4179fc:	str	x0, [x29, #96]
  417a00:	ldr	w0, [x29, #40]
  417a04:	cmp	w0, #0x0
  417a08:	b.eq	417a20 <unblock_all_sigs@@Base+0xb0>  // b.none
  417a0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417a10:	add	x0, x0, #0x6d8
  417a14:	ldr	w0, [x0]
  417a18:	cmp	w0, #0x0
  417a1c:	b.ne	417c34 <unblock_all_sigs@@Base+0x2c4>  // b.any
  417a20:	ldr	w0, [x29, #48]
  417a24:	cmp	w0, #0x0
  417a28:	b.eq	417a48 <unblock_all_sigs@@Base+0xd8>  // b.none
  417a2c:	ldr	w0, [x29, #44]
  417a30:	cmp	w0, #0x0
  417a34:	b.eq	417a48 <unblock_all_sigs@@Base+0xd8>  // b.none
  417a38:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417a3c:	add	x0, x0, #0x288
  417a40:	bl	406e40 <gettext@plt>
  417a44:	str	x0, [x29, #120]
  417a48:	ldr	w0, [x29, #40]
  417a4c:	cmp	w0, #0x0
  417a50:	b.eq	417a70 <unblock_all_sigs@@Base+0x100>  // b.none
  417a54:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417a58:	add	x0, x0, #0x280
  417a5c:	str	x0, [x29, #136]
  417a60:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417a64:	add	x0, x0, #0x298
  417a68:	bl	406e40 <gettext@plt>
  417a6c:	str	x0, [x29, #128]
  417a70:	ldr	x0, [x29, #96]
  417a74:	ldr	x0, [x0]
  417a78:	cmp	x0, #0x0
  417a7c:	b.ne	417a94 <unblock_all_sigs@@Base+0x124>  // b.any
  417a80:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417a84:	add	x0, x0, #0x2a8
  417a88:	bl	406e40 <gettext@plt>
  417a8c:	str	x0, [x29, #112]
  417a90:	b	417b00 <unblock_all_sigs@@Base+0x190>
  417a94:	ldr	x0, [x29, #96]
  417a98:	ldr	x0, [x0]
  417a9c:	bl	4066f0 <strlen@plt>
  417aa0:	add	x0, x0, #0x1b
  417aa4:	add	x0, x0, #0xf
  417aa8:	lsr	x0, x0, #4
  417aac:	lsl	x0, x0, #4
  417ab0:	sub	sp, sp, x0
  417ab4:	add	x0, sp, #0x10
  417ab8:	add	x0, x0, #0xf
  417abc:	lsr	x0, x0, #4
  417ac0:	lsl	x0, x0, #4
  417ac4:	str	x0, [x29, #88]
  417ac8:	ldr	x0, [x29, #96]
  417acc:	ldr	x2, [x0]
  417ad0:	ldr	x0, [x29, #96]
  417ad4:	ldr	x1, [x0, #8]
  417ad8:	ldr	x0, [x29, #96]
  417adc:	ldr	x0, [x0, #16]
  417ae0:	add	x0, x1, x0
  417ae4:	mov	x3, x0
  417ae8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417aec:	add	x1, x0, #0x2b8
  417af0:	ldr	x0, [x29, #88]
  417af4:	bl	406790 <sprintf@plt>
  417af8:	ldr	x0, [x29, #88]
  417afc:	str	x0, [x29, #112]
  417b00:	ldr	x0, [x29, #136]
  417b04:	bl	4066f0 <strlen@plt>
  417b08:	mov	x19, x0
  417b0c:	ldr	x0, [x29, #112]
  417b10:	bl	4066f0 <strlen@plt>
  417b14:	add	x19, x19, x0
  417b18:	ldr	x0, [x29, #104]
  417b1c:	ldr	x0, [x0]
  417b20:	bl	4066f0 <strlen@plt>
  417b24:	add	x19, x19, x0
  417b28:	ldr	x0, [x29, #128]
  417b2c:	bl	4066f0 <strlen@plt>
  417b30:	add	x0, x19, x0
  417b34:	str	x0, [x29, #80]
  417b38:	ldr	x0, [x29, #56]
  417b3c:	ldrb	w0, [x0, #24]
  417b40:	and	w0, w0, #0x1
  417b44:	and	w0, w0, #0xff
  417b48:	cmp	w0, #0x0
  417b4c:	b.eq	417b5c <unblock_all_sigs@@Base+0x1ec>  // b.none
  417b50:	ldr	x0, [x29, #56]
  417b54:	add	x0, x0, #0x10
  417b58:	b	417b60 <unblock_all_sigs@@Base+0x1f0>
  417b5c:	mov	x0, #0x0                   	// #0
  417b60:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  417b64:	add	x1, x1, #0xff0
  417b68:	str	x0, [x1]
  417b6c:	bl	42b5b0 <show_goal_error@@Base>
  417b70:	ldr	w0, [x29, #48]
  417b74:	cmp	w0, #0x0
  417b78:	b.ne	417bc4 <unblock_all_sigs@@Base+0x254>  // b.any
  417b7c:	ldr	x0, [x29, #80]
  417b80:	add	x19, x0, #0x14
  417b84:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417b88:	add	x0, x0, #0x2c0
  417b8c:	bl	406e40 <gettext@plt>
  417b90:	mov	x1, x0
  417b94:	ldr	x0, [x29, #104]
  417b98:	ldr	x0, [x0]
  417b9c:	ldr	x7, [x29, #128]
  417ba0:	ldr	w6, [x29, #52]
  417ba4:	mov	x5, x0
  417ba8:	ldr	x4, [x29, #112]
  417bac:	ldr	x3, [x29, #136]
  417bb0:	mov	x2, x1
  417bb4:	mov	x1, x19
  417bb8:	mov	x0, #0x0                   	// #0
  417bbc:	bl	423e74 <error@@Base>
  417bc0:	b	417c24 <unblock_all_sigs@@Base+0x2b4>
  417bc4:	ldr	w0, [x29, #48]
  417bc8:	bl	406d90 <strsignal@plt>
  417bcc:	str	x0, [x29, #72]
  417bd0:	ldr	x0, [x29, #72]
  417bd4:	bl	4066f0 <strlen@plt>
  417bd8:	mov	x1, x0
  417bdc:	ldr	x0, [x29, #80]
  417be0:	add	x19, x1, x0
  417be4:	ldr	x0, [x29, #120]
  417be8:	bl	4066f0 <strlen@plt>
  417bec:	add	x1, x19, x0
  417bf0:	ldr	x0, [x29, #104]
  417bf4:	ldr	x2, [x0]
  417bf8:	ldr	x0, [x29, #128]
  417bfc:	str	x0, [sp]
  417c00:	ldr	x7, [x29, #120]
  417c04:	ldr	x6, [x29, #72]
  417c08:	mov	x5, x2
  417c0c:	ldr	x4, [x29, #112]
  417c10:	ldr	x3, [x29, #136]
  417c14:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417c18:	add	x2, x0, #0x2d8
  417c1c:	mov	x0, #0x0                   	// #0
  417c20:	bl	423e74 <error@@Base>
  417c24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417c28:	add	x0, x0, #0xff0
  417c2c:	str	xzr, [x0]
  417c30:	b	417c38 <unblock_all_sigs@@Base+0x2c8>
  417c34:	nop
  417c38:	mov	sp, x29
  417c3c:	ldr	x19, [sp, #16]
  417c40:	ldp	x29, x30, [sp], #144
  417c44:	ret

0000000000417c48 <child_handler@@Base>:
  417c48:	stp	x29, x30, [sp, #-32]!
  417c4c:	mov	x29, sp
  417c50:	str	w0, [sp, #28]
  417c54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417c58:	add	x0, x0, #0x648
  417c5c:	ldr	w0, [x0]
  417c60:	add	w1, w0, #0x1
  417c64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417c68:	add	x0, x0, #0x648
  417c6c:	str	w1, [x0]
  417c70:	bl	435c08 <jobserver_signal@@Base>
  417c74:	nop
  417c78:	ldp	x29, x30, [sp], #32
  417c7c:	ret

0000000000417c80 <reap_children@@Base>:
  417c80:	stp	x29, x30, [sp, #-288]!
  417c84:	mov	x29, sp
  417c88:	stp	x19, x20, [sp, #16]
  417c8c:	str	x21, [sp, #32]
  417c90:	str	w0, [sp, #60]
  417c94:	str	w1, [sp, #56]
  417c98:	mov	w0, #0x1                   	// #1
  417c9c:	str	w0, [sp, #284]
  417ca0:	b	418898 <reap_children@@Base+0xc18>
  417ca4:	str	wzr, [sp, #280]
  417ca8:	ldr	w0, [sp, #56]
  417cac:	cmp	w0, #0x0
  417cb0:	b.eq	417d10 <reap_children@@Base+0x90>  // b.none
  417cb4:	ldr	w0, [sp, #60]
  417cb8:	cmp	w0, #0x0
  417cbc:	b.eq	417d10 <reap_children@@Base+0x90>  // b.none
  417cc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417cc4:	add	x0, x0, #0x400
  417cc8:	ldr	x0, [x0]
  417ccc:	bl	406c90 <fflush@plt>
  417cd0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417cd4:	add	x0, x0, #0x6b4
  417cd8:	ldr	w0, [x0]
  417cdc:	cmp	w0, #0x0
  417ce0:	b.ne	417d00 <reap_children@@Base+0x80>  // b.any
  417ce4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417ce8:	add	x0, x0, #0x2f0
  417cec:	bl	406e40 <gettext@plt>
  417cf0:	mov	x2, x0
  417cf4:	mov	x1, #0x0                   	// #0
  417cf8:	mov	x0, #0x0                   	// #0
  417cfc:	bl	423e74 <error@@Base>
  417d00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d04:	add	x0, x0, #0x6b4
  417d08:	mov	w1, #0x1                   	// #1
  417d0c:	str	w1, [x0]
  417d10:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d14:	add	x0, x0, #0x648
  417d18:	ldr	w0, [x0]
  417d1c:	cmp	w0, #0x0
  417d20:	b.eq	417d40 <reap_children@@Base+0xc0>  // b.none
  417d24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d28:	add	x0, x0, #0x648
  417d2c:	ldr	w0, [x0]
  417d30:	sub	w1, w0, #0x1
  417d34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d38:	add	x0, x0, #0x648
  417d3c:	str	w1, [x0]
  417d40:	str	wzr, [sp, #248]
  417d44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d48:	add	x0, x0, #0x598
  417d4c:	ldr	w0, [x0]
  417d50:	cmp	w0, #0x0
  417d54:	cset	w0, ne  // ne = any
  417d58:	and	w0, w0, #0xff
  417d5c:	str	w0, [sp, #244]
  417d60:	str	xzr, [sp, #264]
  417d64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417d68:	add	x0, x0, #0x620
  417d6c:	ldr	x0, [x0]
  417d70:	str	x0, [sp, #256]
  417d74:	b	417e98 <reap_children@@Base+0x218>
  417d78:	ldr	x0, [sp, #256]
  417d7c:	ldrb	w0, [x0, #80]
  417d80:	ubfx	x0, x0, #0, #1
  417d84:	and	w0, w0, #0xff
  417d88:	mov	w1, w0
  417d8c:	ldr	w0, [sp, #248]
  417d90:	orr	w0, w0, w1
  417d94:	str	w0, [sp, #248]
  417d98:	ldr	x0, [sp, #256]
  417d9c:	ldrb	w0, [x0, #80]
  417da0:	and	w0, w0, #0x1
  417da4:	and	w0, w0, #0xff
  417da8:	cmp	w0, #0x0
  417dac:	cset	w0, eq  // eq = none
  417db0:	and	w0, w0, #0xff
  417db4:	mov	w1, w0
  417db8:	ldr	w0, [sp, #244]
  417dbc:	orr	w0, w0, w1
  417dc0:	str	w0, [sp, #244]
  417dc4:	ldr	x0, [sp, #256]
  417dc8:	ldr	w0, [x0, #76]
  417dcc:	cmp	w0, #0x0
  417dd0:	b.ge	417de8 <reap_children@@Base+0x168>  // b.tcont
  417dd4:	str	wzr, [sp, #196]
  417dd8:	str	wzr, [sp, #192]
  417ddc:	mov	w0, #0x7f                  	// #127
  417de0:	str	w0, [sp, #200]
  417de4:	b	4181f0 <reap_children@@Base+0x570>
  417de8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417dec:	add	x0, x0, #0x6dc
  417df0:	ldr	w0, [x0]
  417df4:	and	w0, w0, #0x4
  417df8:	cmp	w0, #0x0
  417dfc:	b.eq	417e84 <reap_children@@Base+0x204>  // b.none
  417e00:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417e04:	add	x0, x0, #0x318
  417e08:	bl	406e40 <gettext@plt>
  417e0c:	mov	x20, x0
  417e10:	ldr	x0, [sp, #256]
  417e14:	ldr	x0, [x0, #40]
  417e18:	ldr	x19, [x0]
  417e1c:	ldr	x0, [sp, #256]
  417e20:	ldr	w0, [x0, #76]
  417e24:	bl	4177d4 <stemlen_compare@@Base+0x1dd0>
  417e28:	mov	x21, x0
  417e2c:	ldr	x0, [sp, #256]
  417e30:	ldrb	w0, [x0, #80]
  417e34:	and	w0, w0, #0x1
  417e38:	and	w0, w0, #0xff
  417e3c:	cmp	w0, #0x0
  417e40:	b.eq	417e54 <reap_children@@Base+0x1d4>  // b.none
  417e44:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417e48:	add	x0, x0, #0x338
  417e4c:	bl	406e40 <gettext@plt>
  417e50:	b	417e5c <reap_children@@Base+0x1dc>
  417e54:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417e58:	add	x0, x0, #0x280
  417e5c:	mov	x4, x0
  417e60:	mov	x3, x21
  417e64:	mov	x2, x19
  417e68:	ldr	x1, [sp, #256]
  417e6c:	mov	x0, x20
  417e70:	bl	406dc0 <printf@plt>
  417e74:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  417e78:	add	x0, x0, #0x400
  417e7c:	ldr	x0, [x0]
  417e80:	bl	406c90 <fflush@plt>
  417e84:	ldr	x0, [sp, #256]
  417e88:	str	x0, [sp, #264]
  417e8c:	ldr	x0, [sp, #256]
  417e90:	ldr	x0, [x0, #32]
  417e94:	str	x0, [sp, #256]
  417e98:	ldr	x0, [sp, #256]
  417e9c:	cmp	x0, #0x0
  417ea0:	b.ne	417d78 <reap_children@@Base+0xf8>  // b.any
  417ea4:	ldr	w0, [sp, #248]
  417ea8:	cmp	w0, #0x0
  417eac:	b.eq	417ecc <reap_children@@Base+0x24c>  // b.none
  417eb0:	add	x2, sp, #0xc0
  417eb4:	add	x1, sp, #0xc4
  417eb8:	add	x0, sp, #0xc8
  417ebc:	mov	w3, #0x0                   	// #0
  417ec0:	bl	43607c <remote_status@@Base>
  417ec4:	str	w0, [sp, #276]
  417ec8:	b	417ed0 <reap_children@@Base+0x250>
  417ecc:	str	wzr, [sp, #276]
  417ed0:	ldr	w0, [sp, #276]
  417ed4:	cmp	w0, #0x0
  417ed8:	b.le	417ee8 <reap_children@@Base+0x268>
  417edc:	mov	w0, #0x1                   	// #1
  417ee0:	str	w0, [sp, #280]
  417ee4:	b	41804c <reap_children@@Base+0x3cc>
  417ee8:	ldr	w0, [sp, #276]
  417eec:	cmp	w0, #0x0
  417ef0:	b.ge	417f0c <reap_children@@Base+0x28c>  // b.tcont
  417ef4:	nop
  417ef8:	b	417f00 <reap_children@@Base+0x280>
  417efc:	nop
  417f00:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417f04:	add	x0, x0, #0x348
  417f08:	bl	424340 <pfatal_with_name@@Base>
  417f0c:	ldr	w0, [sp, #244]
  417f10:	cmp	w0, #0x0
  417f14:	b.eq	417f70 <reap_children@@Base+0x2f0>  // b.none
  417f18:	ldr	w0, [sp, #60]
  417f1c:	cmp	w0, #0x0
  417f20:	b.ne	417f40 <reap_children@@Base+0x2c0>  // b.any
  417f24:	add	x0, sp, #0xcc
  417f28:	mov	w2, #0x1                   	// #1
  417f2c:	mov	x1, x0
  417f30:	mov	w0, #0xffffffff            	// #-1
  417f34:	bl	406e20 <waitpid@plt>
  417f38:	str	w0, [sp, #276]
  417f3c:	b	417f74 <reap_children@@Base+0x2f4>
  417f40:	nop
  417f44:	add	x0, sp, #0xcc
  417f48:	bl	406c80 <wait@plt>
  417f4c:	str	w0, [sp, #276]
  417f50:	ldr	w0, [sp, #276]
  417f54:	cmn	w0, #0x1
  417f58:	b.ne	417f74 <reap_children@@Base+0x2f4>  // b.any
  417f5c:	bl	406dd0 <__errno_location@plt>
  417f60:	ldr	w0, [x0]
  417f64:	cmp	w0, #0x4
  417f68:	b.eq	417f44 <reap_children@@Base+0x2c4>  // b.none
  417f6c:	b	417f74 <reap_children@@Base+0x2f4>
  417f70:	str	wzr, [sp, #276]
  417f74:	ldr	w0, [sp, #276]
  417f78:	cmp	w0, #0x0
  417f7c:	b.ge	417f8c <reap_children@@Base+0x30c>  // b.tcont
  417f80:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  417f84:	add	x0, x0, #0x358
  417f88:	bl	424340 <pfatal_with_name@@Base>
  417f8c:	ldr	w0, [sp, #276]
  417f90:	cmp	w0, #0x0
  417f94:	b.le	417ff8 <reap_children@@Base+0x378>
  417f98:	ldr	w0, [sp, #204]
  417f9c:	asr	w0, w0, #8
  417fa0:	and	w0, w0, #0xff
  417fa4:	str	w0, [sp, #200]
  417fa8:	ldr	w0, [sp, #204]
  417fac:	and	w0, w0, #0xff
  417fb0:	and	w0, w0, #0x7f
  417fb4:	and	w0, w0, #0xff
  417fb8:	add	w0, w0, #0x1
  417fbc:	and	w0, w0, #0xff
  417fc0:	sxtb	w0, w0
  417fc4:	asr	w0, w0, #1
  417fc8:	sxtb	w0, w0
  417fcc:	cmp	w0, #0x0
  417fd0:	b.le	417fe0 <reap_children@@Base+0x360>
  417fd4:	ldr	w0, [sp, #204]
  417fd8:	and	w0, w0, #0x7f
  417fdc:	b	417fe4 <reap_children@@Base+0x364>
  417fe0:	mov	w0, #0x0                   	// #0
  417fe4:	str	w0, [sp, #196]
  417fe8:	ldr	w0, [sp, #204]
  417fec:	and	w0, w0, #0x80
  417ff0:	str	w0, [sp, #192]
  417ff4:	b	41804c <reap_children@@Base+0x3cc>
  417ff8:	str	wzr, [sp, #284]
  417ffc:	ldr	w0, [sp, #60]
  418000:	cmp	w0, #0x0
  418004:	b.eq	4188e4 <reap_children@@Base+0xc64>  // b.none
  418008:	ldr	w0, [sp, #248]
  41800c:	cmp	w0, #0x0
  418010:	b.eq	4188e4 <reap_children@@Base+0xc64>  // b.none
  418014:	add	x2, sp, #0xc0
  418018:	add	x1, sp, #0xc4
  41801c:	add	x0, sp, #0xc8
  418020:	mov	w3, #0x1                   	// #1
  418024:	bl	43607c <remote_status@@Base>
  418028:	str	w0, [sp, #276]
  41802c:	ldr	w0, [sp, #276]
  418030:	cmp	w0, #0x0
  418034:	b.lt	417efc <reap_children@@Base+0x27c>  // b.tstop
  418038:	ldr	w0, [sp, #276]
  41803c:	cmp	w0, #0x0
  418040:	b.eq	4188dc <reap_children@@Base+0xc5c>  // b.none
  418044:	mov	w0, #0x1                   	// #1
  418048:	str	w0, [sp, #280]
  41804c:	ldr	w0, [sp, #280]
  418050:	cmp	w0, #0x0
  418054:	b.ne	418080 <reap_children@@Base+0x400>  // b.any
  418058:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41805c:	add	x0, x0, #0x598
  418060:	ldr	w0, [x0]
  418064:	ldr	w1, [sp, #276]
  418068:	cmp	w1, w0
  41806c:	b.ne	418080 <reap_children@@Base+0x400>  // b.any
  418070:	ldr	w0, [sp, #200]
  418074:	ldr	w1, [sp, #196]
  418078:	bl	4122e4 <shell_completed@@Base>
  41807c:	b	4188e0 <reap_children@@Base+0xc60>
  418080:	str	xzr, [sp, #264]
  418084:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418088:	add	x0, x0, #0x620
  41808c:	ldr	x0, [x0]
  418090:	str	x0, [sp, #256]
  418094:	b	4180e0 <reap_children@@Base+0x460>
  418098:	ldr	x0, [sp, #256]
  41809c:	ldr	w0, [x0, #76]
  4180a0:	ldr	w1, [sp, #276]
  4180a4:	cmp	w1, w0
  4180a8:	b.ne	4180cc <reap_children@@Base+0x44c>  // b.any
  4180ac:	ldr	x0, [sp, #256]
  4180b0:	ldrb	w0, [x0, #80]
  4180b4:	ubfx	x0, x0, #0, #1
  4180b8:	and	w0, w0, #0xff
  4180bc:	mov	w1, w0
  4180c0:	ldr	w0, [sp, #280]
  4180c4:	cmp	w0, w1
  4180c8:	b.eq	4180f0 <reap_children@@Base+0x470>  // b.none
  4180cc:	ldr	x0, [sp, #256]
  4180d0:	str	x0, [sp, #264]
  4180d4:	ldr	x0, [sp, #256]
  4180d8:	ldr	x0, [x0, #32]
  4180dc:	str	x0, [sp, #256]
  4180e0:	ldr	x0, [sp, #256]
  4180e4:	cmp	x0, #0x0
  4180e8:	b.ne	418098 <reap_children@@Base+0x418>  // b.any
  4180ec:	b	4180f4 <reap_children@@Base+0x474>
  4180f0:	nop
  4180f4:	ldr	x0, [sp, #256]
  4180f8:	cmp	x0, #0x0
  4180fc:	b.eq	41888c <reap_children@@Base+0xc0c>  // b.none
  418100:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418104:	add	x0, x0, #0x6dc
  418108:	ldr	w0, [x0]
  41810c:	and	w0, w0, #0x4
  418110:	cmp	w0, #0x0
  418114:	b.eq	4181b8 <reap_children@@Base+0x538>  // b.none
  418118:	ldr	w0, [sp, #196]
  41811c:	cmp	w0, #0x0
  418120:	b.ne	418144 <reap_children@@Base+0x4c4>  // b.any
  418124:	ldr	w0, [sp, #200]
  418128:	cmp	w0, #0x0
  41812c:	b.ne	418144 <reap_children@@Base+0x4c4>  // b.any
  418130:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418134:	add	x0, x0, #0x360
  418138:	bl	406e40 <gettext@plt>
  41813c:	mov	x19, x0
  418140:	b	418154 <reap_children@@Base+0x4d4>
  418144:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418148:	add	x0, x0, #0x388
  41814c:	bl	406e40 <gettext@plt>
  418150:	mov	x19, x0
  418154:	ldr	x0, [sp, #256]
  418158:	ldr	w0, [x0, #76]
  41815c:	bl	4177d4 <stemlen_compare@@Base+0x1dd0>
  418160:	mov	x20, x0
  418164:	ldr	x0, [sp, #256]
  418168:	ldrb	w0, [x0, #80]
  41816c:	and	w0, w0, #0x1
  418170:	and	w0, w0, #0xff
  418174:	cmp	w0, #0x0
  418178:	b.eq	41818c <reap_children@@Base+0x50c>  // b.none
  41817c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418180:	add	x0, x0, #0x338
  418184:	bl	406e40 <gettext@plt>
  418188:	b	418194 <reap_children@@Base+0x514>
  41818c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418190:	add	x0, x0, #0x280
  418194:	mov	x3, x0
  418198:	mov	x2, x20
  41819c:	ldr	x1, [sp, #256]
  4181a0:	mov	x0, x19
  4181a4:	bl	406dc0 <printf@plt>
  4181a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4181ac:	add	x0, x0, #0x400
  4181b0:	ldr	x0, [x0]
  4181b4:	bl	406c90 <fflush@plt>
  4181b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4181bc:	add	x0, x0, #0x630
  4181c0:	ldr	x0, [x0]
  4181c4:	cmp	x0, #0x0
  4181c8:	b.eq	4181ec <reap_children@@Base+0x56c>  // b.none
  4181cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4181d0:	add	x0, x0, #0x630
  4181d4:	ldr	x0, [x0]
  4181d8:	sub	x1, x0, #0x1
  4181dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4181e0:	add	x0, x0, #0x630
  4181e4:	str	x1, [x0]
  4181e8:	b	4181f0 <reap_children@@Base+0x570>
  4181ec:	nop
  4181f0:	ldr	w0, [sp, #196]
  4181f4:	cmp	w0, #0x0
  4181f8:	b.ne	418300 <reap_children@@Base+0x680>  // b.any
  4181fc:	ldr	w0, [sp, #200]
  418200:	cmp	w0, #0x7f
  418204:	b.ne	418300 <reap_children@@Base+0x680>  // b.any
  418208:	ldr	x0, [sp, #256]
  41820c:	ldr	x0, [x0]
  418210:	cmp	x0, #0x0
  418214:	b.eq	418300 <reap_children@@Base+0x680>  // b.none
  418218:	str	xzr, [sp, #232]
  41821c:	nop
  418220:	ldr	x0, [sp, #256]
  418224:	ldr	x0, [x0]
  418228:	add	x1, sp, #0x40
  41822c:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  418230:	str	w0, [sp, #228]
  418234:	ldr	w0, [sp, #228]
  418238:	cmn	w0, #0x1
  41823c:	b.ne	418250 <reap_children@@Base+0x5d0>  // b.any
  418240:	bl	406dd0 <__errno_location@plt>
  418244:	ldr	w0, [x0]
  418248:	cmp	w0, #0x4
  41824c:	b.eq	418220 <reap_children@@Base+0x5a0>  // b.none
  418250:	ldr	w0, [sp, #228]
  418254:	cmp	w0, #0x0
  418258:	b.ge	418270 <reap_children@@Base+0x5f0>  // b.tcont
  41825c:	bl	406dd0 <__errno_location@plt>
  418260:	ldr	w0, [x0]
  418264:	bl	406ab0 <strerror@plt>
  418268:	str	x0, [sp, #232]
  41826c:	b	4182b8 <reap_children@@Base+0x638>
  418270:	ldr	w0, [sp, #80]
  418274:	and	w0, w0, #0xf000
  418278:	cmp	w0, #0x4, lsl #12
  41827c:	b.eq	418290 <reap_children@@Base+0x610>  // b.none
  418280:	ldr	w0, [sp, #80]
  418284:	and	w0, w0, #0x40
  418288:	cmp	w0, #0x0
  41828c:	b.ne	4182a0 <reap_children@@Base+0x620>  // b.any
  418290:	mov	w0, #0xd                   	// #13
  418294:	bl	406ab0 <strerror@plt>
  418298:	str	x0, [sp, #232]
  41829c:	b	4182b8 <reap_children@@Base+0x638>
  4182a0:	ldr	x0, [sp, #112]
  4182a4:	cmp	x0, #0x0
  4182a8:	b.ne	4182b8 <reap_children@@Base+0x638>  // b.any
  4182ac:	mov	w0, #0x8                   	// #8
  4182b0:	bl	406ab0 <strerror@plt>
  4182b4:	str	x0, [sp, #232]
  4182b8:	ldr	x0, [sp, #232]
  4182bc:	cmp	x0, #0x0
  4182c0:	b.eq	418300 <reap_children@@Base+0x680>  // b.none
  4182c4:	ldr	x0, [sp, #256]
  4182c8:	ldr	x0, [x0]
  4182cc:	bl	4066f0 <strlen@plt>
  4182d0:	mov	x19, x0
  4182d4:	ldr	x0, [sp, #232]
  4182d8:	bl	4066f0 <strlen@plt>
  4182dc:	add	x1, x19, x0
  4182e0:	ldr	x0, [sp, #256]
  4182e4:	ldr	x0, [x0]
  4182e8:	ldr	x4, [sp, #232]
  4182ec:	mov	x3, x0
  4182f0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4182f4:	add	x2, x0, #0x3b0
  4182f8:	mov	x0, #0x0                   	// #0
  4182fc:	bl	423e74 <error@@Base>
  418300:	ldr	w0, [sp, #196]
  418304:	cmp	w0, #0x0
  418308:	b.ne	418320 <reap_children@@Base+0x6a0>  // b.any
  41830c:	ldr	w0, [sp, #200]
  418310:	cmp	w0, #0x0
  418314:	b.ne	418320 <reap_children@@Base+0x6a0>  // b.any
  418318:	str	wzr, [sp, #252]
  41831c:	b	418378 <reap_children@@Base+0x6f8>
  418320:	ldr	w0, [sp, #196]
  418324:	cmp	w0, #0x0
  418328:	b.ne	418370 <reap_children@@Base+0x6f0>  // b.any
  41832c:	ldr	w0, [sp, #200]
  418330:	cmp	w0, #0x1
  418334:	b.ne	418370 <reap_children@@Base+0x6f0>  // b.any
  418338:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41833c:	add	x0, x0, #0x6f4
  418340:	ldr	w0, [x0]
  418344:	cmp	w0, #0x0
  418348:	b.eq	418370 <reap_children@@Base+0x6f0>  // b.none
  41834c:	ldr	x0, [sp, #256]
  418350:	ldrb	w0, [x0, #80]
  418354:	and	w0, w0, #0x10
  418358:	and	w0, w0, #0xff
  41835c:	cmp	w0, #0x0
  418360:	b.eq	418370 <reap_children@@Base+0x6f0>  // b.none
  418364:	mov	w0, #0x1                   	// #1
  418368:	str	w0, [sp, #252]
  41836c:	b	418378 <reap_children@@Base+0x6f8>
  418370:	mov	w0, #0x2                   	// #2
  418374:	str	w0, [sp, #252]
  418378:	ldr	x0, [sp, #256]
  41837c:	ldr	x0, [x0, #48]
  418380:	cmp	x0, #0x0
  418384:	b.eq	418464 <reap_children@@Base+0x7e4>  // b.none
  418388:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41838c:	add	x0, x0, #0x6dc
  418390:	ldr	w0, [x0]
  418394:	and	w0, w0, #0x4
  418398:	cmp	w0, #0x0
  41839c:	b.eq	4183d4 <reap_children@@Base+0x754>  // b.none
  4183a0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4183a4:	add	x0, x0, #0x3b8
  4183a8:	bl	406e40 <gettext@plt>
  4183ac:	mov	x2, x0
  4183b0:	ldr	x0, [sp, #256]
  4183b4:	ldr	x0, [x0, #48]
  4183b8:	mov	x1, x0
  4183bc:	mov	x0, x2
  4183c0:	bl	406dc0 <printf@plt>
  4183c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4183c8:	add	x0, x0, #0x400
  4183cc:	ldr	x0, [x0]
  4183d0:	bl	406c90 <fflush@plt>
  4183d4:	bl	406dd0 <__errno_location@plt>
  4183d8:	str	wzr, [x0]
  4183dc:	ldr	x0, [sp, #256]
  4183e0:	ldr	x0, [x0, #48]
  4183e4:	bl	406760 <remove@plt>
  4183e8:	str	w0, [sp, #224]
  4183ec:	ldr	w0, [sp, #224]
  4183f0:	cmp	w0, #0x0
  4183f4:	b.eq	418450 <reap_children@@Base+0x7d0>  // b.none
  4183f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4183fc:	add	x0, x0, #0x6dc
  418400:	ldr	w0, [x0]
  418404:	and	w0, w0, #0x4
  418408:	cmp	w0, #0x0
  41840c:	b.eq	418450 <reap_children@@Base+0x7d0>  // b.none
  418410:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418414:	add	x0, x0, #0x3d8
  418418:	bl	406e40 <gettext@plt>
  41841c:	mov	x20, x0
  418420:	ldr	x0, [sp, #256]
  418424:	ldr	x19, [x0, #48]
  418428:	bl	406dd0 <__errno_location@plt>
  41842c:	ldr	w0, [x0]
  418430:	mov	w2, w0
  418434:	mov	x1, x19
  418438:	mov	x0, x20
  41843c:	bl	406dc0 <printf@plt>
  418440:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418444:	add	x0, x0, #0x400
  418448:	ldr	x0, [x0]
  41844c:	bl	406c90 <fflush@plt>
  418450:	ldr	x0, [sp, #256]
  418454:	ldr	x0, [x0, #48]
  418458:	bl	406c00 <free@plt>
  41845c:	ldr	x0, [sp, #256]
  418460:	str	xzr, [x0, #48]
  418464:	ldr	x0, [sp, #256]
  418468:	ldrb	w0, [x0, #80]
  41846c:	and	w0, w0, #0x4
  418470:	and	w0, w0, #0xff
  418474:	cmp	w0, #0x0
  418478:	b.eq	418488 <reap_children@@Base+0x808>  // b.none
  41847c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418480:	add	x0, x0, #0x63c
  418484:	str	wzr, [x0]
  418488:	ldr	x0, [sp, #256]
  41848c:	ldrb	w0, [x0, #80]
  418490:	ubfx	x0, x0, #6, #1
  418494:	and	w0, w0, #0xff
  418498:	str	w0, [sp, #220]
  41849c:	ldr	w0, [sp, #252]
  4184a0:	cmp	w0, #0x0
  4184a4:	b.eq	4185c8 <reap_children@@Base+0x948>  // b.none
  4184a8:	ldr	x0, [sp, #256]
  4184ac:	ldrb	w0, [x0, #80]
  4184b0:	and	w0, w0, #0x2
  4184b4:	and	w0, w0, #0xff
  4184b8:	cmp	w0, #0x0
  4184bc:	b.ne	4185c8 <reap_children@@Base+0x948>  // b.any
  4184c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4184c4:	add	x0, x0, #0x6ec
  4184c8:	ldr	w0, [x0]
  4184cc:	cmp	w0, #0x0
  4184d0:	b.ne	4185c8 <reap_children@@Base+0x948>  // b.any
  4184d4:	ldr	w0, [sp, #220]
  4184d8:	cmp	w0, #0x0
  4184dc:	b.ne	418510 <reap_children@@Base+0x890>  // b.any
  4184e0:	ldr	w0, [sp, #252]
  4184e4:	cmp	w0, #0x2
  4184e8:	b.ne	418510 <reap_children@@Base+0x890>  // b.any
  4184ec:	ldr	w0, [sp, #200]
  4184f0:	ldr	w1, [sp, #196]
  4184f4:	ldr	w2, [sp, #192]
  4184f8:	mov	w4, #0x0                   	// #0
  4184fc:	mov	w3, w2
  418500:	mov	w2, w1
  418504:	mov	w1, w0
  418508:	ldr	x0, [sp, #256]
  41850c:	bl	4179a0 <unblock_all_sigs@@Base+0x30>
  418510:	ldr	w0, [sp, #252]
  418514:	cmp	w0, #0x2
  418518:	b.ne	418524 <reap_children@@Base+0x8a4>  // b.any
  41851c:	mov	w2, #0x3                   	// #3
  418520:	b	418528 <reap_children@@Base+0x8a8>
  418524:	mov	w2, #0x2                   	// #2
  418528:	ldr	x0, [sp, #256]
  41852c:	ldr	x1, [x0, #40]
  418530:	ldrb	w0, [x1, #136]
  418534:	bfxil	w0, w2, #0, #2
  418538:	strb	w0, [x1, #136]
  41853c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418540:	add	x0, x0, #0x98
  418544:	ldr	w0, [x0]
  418548:	cmn	w0, #0x1
  41854c:	b.ne	41859c <reap_children@@Base+0x91c>  // b.any
  418550:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418554:	add	x0, x0, #0x408
  418558:	bl	40c5bc <lookup_file@@Base>
  41855c:	str	x0, [sp, #208]
  418560:	ldr	x0, [sp, #208]
  418564:	cmp	x0, #0x0
  418568:	b.eq	41858c <reap_children@@Base+0x90c>  // b.none
  41856c:	ldr	x0, [sp, #208]
  418570:	ldrb	w0, [x0, #137]
  418574:	and	w0, w0, #0x8
  418578:	and	w0, w0, #0xff
  41857c:	cmp	w0, #0x0
  418580:	b.eq	41858c <reap_children@@Base+0x90c>  // b.none
  418584:	mov	w0, #0x1                   	// #1
  418588:	b	418590 <reap_children@@Base+0x910>
  41858c:	mov	w0, #0x0                   	// #0
  418590:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  418594:	add	x1, x1, #0x98
  418598:	str	w0, [x1]
  41859c:	ldr	w0, [sp, #196]
  4185a0:	cmp	w0, #0x0
  4185a4:	b.ne	4185bc <reap_children@@Base+0x93c>  // b.any
  4185a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4185ac:	add	x0, x0, #0x98
  4185b0:	ldr	w0, [x0]
  4185b4:	cmp	w0, #0x0
  4185b8:	b.eq	4186e0 <reap_children@@Base+0xa60>  // b.none
  4185bc:	ldr	x0, [sp, #256]
  4185c0:	bl	40995c <delete_child_targets@@Base>
  4185c4:	b	4186e0 <reap_children@@Base+0xa60>
  4185c8:	ldr	w0, [sp, #252]
  4185cc:	cmp	w0, #0x0
  4185d0:	b.eq	4185fc <reap_children@@Base+0x97c>  // b.none
  4185d4:	ldr	w0, [sp, #200]
  4185d8:	ldr	w1, [sp, #196]
  4185dc:	ldr	w2, [sp, #192]
  4185e0:	mov	w4, #0x1                   	// #1
  4185e4:	mov	w3, w2
  4185e8:	mov	w2, w1
  4185ec:	mov	w1, w0
  4185f0:	ldr	x0, [sp, #256]
  4185f4:	bl	4179a0 <unblock_all_sigs@@Base+0x30>
  4185f8:	str	wzr, [sp, #252]
  4185fc:	ldr	x0, [sp, #256]
  418600:	bl	419eec <new_job@@Base+0x838>
  418604:	cmp	w0, #0x0
  418608:	b.eq	4186c8 <reap_children@@Base+0xa48>  // b.none
  41860c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418610:	add	x0, x0, #0x420
  418614:	ldr	w0, [x0]
  418618:	cmp	w0, #0x0
  41861c:	b.eq	418638 <reap_children@@Base+0x9b8>  // b.none
  418620:	ldr	x0, [sp, #256]
  418624:	ldr	x0, [x0, #40]
  418628:	ldrb	w1, [x0, #136]
  41862c:	orr	w1, w1, #0x3
  418630:	strb	w1, [x0, #136]
  418634:	b	4186a0 <reap_children@@Base+0xa20>
  418638:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41863c:	add	x0, x0, #0x720
  418640:	ldr	w0, [x0]
  418644:	cmp	w0, #0x1
  418648:	b.ne	418658 <reap_children@@Base+0x9d8>  // b.any
  41864c:	ldr	x0, [sp, #256]
  418650:	add	x0, x0, #0x10
  418654:	bl	423654 <output_dump@@Base>
  418658:	mov	w0, #0x0                   	// #0
  41865c:	bl	436040 <start_remote_job_p@@Base>
  418660:	and	w0, w0, #0x1
  418664:	and	w2, w0, #0xff
  418668:	ldr	x1, [sp, #256]
  41866c:	ldrb	w0, [x1, #80]
  418670:	bfxil	w0, w2, #0, #1
  418674:	strb	w0, [x1, #80]
  418678:	ldr	x0, [sp, #256]
  41867c:	bl	418ae8 <reap_children@@Base+0xe68>
  418680:	bl	417948 <is_bourne_compatible_shell@@Base+0x13c>
  418684:	ldr	x0, [sp, #256]
  418688:	ldr	x0, [x0, #40]
  41868c:	ldrb	w0, [x0, #136]
  418690:	and	w0, w0, #0xc
  418694:	and	w0, w0, #0xff
  418698:	cmp	w0, #0x8
  41869c:	b.eq	418894 <reap_children@@Base+0xc14>  // b.none
  4186a0:	ldr	x0, [sp, #256]
  4186a4:	ldr	x0, [x0, #40]
  4186a8:	ldrb	w0, [x0, #136]
  4186ac:	and	w0, w0, #0x3
  4186b0:	and	w0, w0, #0xff
  4186b4:	cmp	w0, #0x0
  4186b8:	b.eq	4186e4 <reap_children@@Base+0xa64>  // b.none
  4186bc:	ldr	x0, [sp, #256]
  4186c0:	bl	40995c <delete_child_targets@@Base>
  4186c4:	b	4186e4 <reap_children@@Base+0xa64>
  4186c8:	ldr	x0, [sp, #256]
  4186cc:	ldr	x0, [x0, #40]
  4186d0:	ldrb	w1, [x0, #136]
  4186d4:	and	w1, w1, #0xfffffffc
  4186d8:	strb	w1, [x0, #136]
  4186dc:	b	4186e4 <reap_children@@Base+0xa64>
  4186e0:	nop
  4186e4:	ldr	x0, [sp, #256]
  4186e8:	add	x0, x0, #0x10
  4186ec:	bl	423654 <output_dump@@Base>
  4186f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4186f4:	add	x0, x0, #0x420
  4186f8:	ldr	w0, [x0]
  4186fc:	cmp	w0, #0x0
  418700:	b.ne	418710 <reap_children@@Base+0xa90>  // b.any
  418704:	ldr	x0, [sp, #256]
  418708:	ldr	x0, [x0, #40]
  41870c:	bl	42d420 <notice_finished_file@@Base>
  418710:	bl	417920 <is_bourne_compatible_shell@@Base+0x114>
  418714:	ldr	x0, [sp, #256]
  418718:	ldr	w0, [x0, #76]
  41871c:	cmp	w0, #0x0
  418720:	b.le	4187b0 <reap_children@@Base+0xb30>
  418724:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418728:	add	x0, x0, #0x6dc
  41872c:	ldr	w0, [x0]
  418730:	and	w0, w0, #0x4
  418734:	cmp	w0, #0x0
  418738:	b.eq	4187b0 <reap_children@@Base+0xb30>  // b.none
  41873c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418740:	add	x0, x0, #0x420
  418744:	bl	406e40 <gettext@plt>
  418748:	mov	x19, x0
  41874c:	ldr	x0, [sp, #256]
  418750:	ldr	w0, [x0, #76]
  418754:	bl	4177d4 <stemlen_compare@@Base+0x1dd0>
  418758:	mov	x20, x0
  41875c:	ldr	x0, [sp, #256]
  418760:	ldrb	w0, [x0, #80]
  418764:	and	w0, w0, #0x1
  418768:	and	w0, w0, #0xff
  41876c:	cmp	w0, #0x0
  418770:	b.eq	418784 <reap_children@@Base+0xb04>  // b.none
  418774:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418778:	add	x0, x0, #0x338
  41877c:	bl	406e40 <gettext@plt>
  418780:	b	41878c <reap_children@@Base+0xb0c>
  418784:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418788:	add	x0, x0, #0x280
  41878c:	mov	x3, x0
  418790:	mov	x2, x20
  418794:	ldr	x1, [sp, #256]
  418798:	mov	x0, x19
  41879c:	bl	406dc0 <printf@plt>
  4187a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4187a4:	add	x0, x0, #0x400
  4187a8:	ldr	x0, [x0]
  4187ac:	bl	406c90 <fflush@plt>
  4187b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4187b4:	add	x0, x0, #0x628
  4187b8:	ldr	w0, [x0]
  4187bc:	cmp	w0, #0x0
  4187c0:	b.eq	4187f0 <reap_children@@Base+0xb70>  // b.none
  4187c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4187c8:	add	x0, x0, #0x628
  4187cc:	ldr	w0, [x0]
  4187d0:	ldr	x1, [sp, #256]
  4187d4:	ldrb	w1, [x1, #80]
  4187d8:	ubfx	x1, x1, #5, #1
  4187dc:	and	w1, w1, #0xff
  4187e0:	sub	w1, w0, w1
  4187e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4187e8:	add	x0, x0, #0x628
  4187ec:	str	w1, [x0]
  4187f0:	ldr	x0, [sp, #264]
  4187f4:	cmp	x0, #0x0
  4187f8:	b.ne	418814 <reap_children@@Base+0xb94>  // b.any
  4187fc:	ldr	x0, [sp, #256]
  418800:	ldr	x1, [x0, #32]
  418804:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418808:	add	x0, x0, #0x620
  41880c:	str	x1, [x0]
  418810:	b	418824 <reap_children@@Base+0xba4>
  418814:	ldr	x0, [sp, #256]
  418818:	ldr	x1, [x0, #32]
  41881c:	ldr	x0, [sp, #264]
  418820:	str	x1, [x0, #32]
  418824:	ldr	x0, [sp, #256]
  418828:	bl	4188f8 <reap_children@@Base+0xc78>
  41882c:	bl	417948 <is_bourne_compatible_shell@@Base+0x13c>
  418830:	ldr	w0, [sp, #56]
  418834:	cmp	w0, #0x0
  418838:	b.ne	418884 <reap_children@@Base+0xc04>  // b.any
  41883c:	ldr	w0, [sp, #252]
  418840:	cmp	w0, #0x0
  418844:	b.eq	418884 <reap_children@@Base+0xc04>  // b.none
  418848:	ldr	w0, [sp, #220]
  41884c:	cmp	w0, #0x0
  418850:	b.ne	418884 <reap_children@@Base+0xc04>  // b.any
  418854:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  418858:	add	x0, x0, #0xa54
  41885c:	ldr	w0, [x0]
  418860:	cmp	w0, #0x0
  418864:	b.ne	418884 <reap_children@@Base+0xc04>  // b.any
  418868:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41886c:	add	x0, x0, #0x420
  418870:	ldr	w0, [x0]
  418874:	cmp	w0, #0x0
  418878:	b.ne	418884 <reap_children@@Base+0xc04>  // b.any
  41887c:	ldr	w0, [sp, #252]
  418880:	bl	421fbc <die@@Base>
  418884:	str	wzr, [sp, #60]
  418888:	b	418898 <reap_children@@Base+0xc18>
  41888c:	nop
  418890:	b	418898 <reap_children@@Base+0xc18>
  418894:	nop
  418898:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41889c:	add	x0, x0, #0x620
  4188a0:	ldr	x0, [x0]
  4188a4:	cmp	x0, #0x0
  4188a8:	b.ne	4188c0 <reap_children@@Base+0xc40>  // b.any
  4188ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4188b0:	add	x0, x0, #0x598
  4188b4:	ldr	w0, [x0]
  4188b8:	cmp	w0, #0x0
  4188bc:	b.eq	4188e4 <reap_children@@Base+0xc64>  // b.none
  4188c0:	ldr	w0, [sp, #60]
  4188c4:	cmp	w0, #0x0
  4188c8:	b.ne	417ca4 <reap_children@@Base+0x24>  // b.any
  4188cc:	ldr	w0, [sp, #284]
  4188d0:	cmp	w0, #0x0
  4188d4:	b.ne	417ca4 <reap_children@@Base+0x24>  // b.any
  4188d8:	b	4188e0 <reap_children@@Base+0xc60>
  4188dc:	nop
  4188e0:	nop
  4188e4:	nop
  4188e8:	ldp	x19, x20, [sp, #16]
  4188ec:	ldr	x21, [sp, #32]
  4188f0:	ldp	x29, x30, [sp], #288
  4188f4:	ret
  4188f8:	stp	x29, x30, [sp, #-48]!
  4188fc:	mov	x29, sp
  418900:	str	x0, [sp, #24]
  418904:	ldr	x0, [sp, #24]
  418908:	add	x0, x0, #0x10
  41890c:	bl	423a2c <output_close@@Base>
  418910:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418914:	add	x0, x0, #0x638
  418918:	ldr	w0, [x0]
  41891c:	cmp	w0, #0x0
  418920:	b.ne	41895c <reap_children@@Base+0xcdc>  // b.any
  418924:	ldr	x0, [sp, #24]
  418928:	ldr	x0, [x0, #40]
  41892c:	ldr	x0, [x0]
  418930:	bl	4066f0 <strlen@plt>
  418934:	add	x1, x0, #0x14
  418938:	ldr	x0, [sp, #24]
  41893c:	ldr	x0, [x0, #40]
  418940:	ldr	x0, [x0]
  418944:	mov	x4, x0
  418948:	ldr	x3, [sp, #24]
  41894c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  418950:	add	x2, x0, #0x448
  418954:	mov	x0, #0x0                   	// #0
  418958:	bl	424098 <fatal@@Base>
  41895c:	bl	43593c <jobserver_enabled@@Base>
  418960:	cmp	w0, #0x0
  418964:	b.eq	4189d8 <reap_children@@Base+0xd58>  // b.none
  418968:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41896c:	add	x0, x0, #0x638
  418970:	ldr	w0, [x0]
  418974:	cmp	w0, #0x1
  418978:	b.ls	4189d8 <reap_children@@Base+0xd58>  // b.plast
  41897c:	mov	w0, #0x1                   	// #1
  418980:	bl	435a18 <jobserver_release@@Base>
  418984:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418988:	add	x0, x0, #0x6dc
  41898c:	ldr	w0, [x0]
  418990:	and	w0, w0, #0x4
  418994:	cmp	w0, #0x0
  418998:	b.eq	4189d8 <reap_children@@Base+0xd58>  // b.none
  41899c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4189a0:	add	x0, x0, #0x480
  4189a4:	bl	406e40 <gettext@plt>
  4189a8:	mov	x3, x0
  4189ac:	ldr	x0, [sp, #24]
  4189b0:	ldr	x0, [x0, #40]
  4189b4:	ldr	x0, [x0]
  4189b8:	mov	x2, x0
  4189bc:	ldr	x1, [sp, #24]
  4189c0:	mov	x0, x3
  4189c4:	bl	406dc0 <printf@plt>
  4189c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4189cc:	add	x0, x0, #0x400
  4189d0:	ldr	x0, [x0]
  4189d4:	bl	406c90 <fflush@plt>
  4189d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4189dc:	add	x0, x0, #0x638
  4189e0:	ldr	w0, [x0]
  4189e4:	sub	w1, w0, #0x1
  4189e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4189ec:	add	x0, x0, #0x638
  4189f0:	str	w1, [x0]
  4189f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4189f8:	add	x0, x0, #0x420
  4189fc:	ldr	w0, [x0]
  418a00:	cmp	w0, #0x0
  418a04:	b.ne	418adc <reap_children@@Base+0xe5c>  // b.any
  418a08:	ldr	x0, [sp, #24]
  418a0c:	ldr	x0, [x0, #56]
  418a10:	cmp	x0, #0x0
  418a14:	b.eq	418a74 <reap_children@@Base+0xdf4>  // b.none
  418a18:	str	wzr, [sp, #44]
  418a1c:	b	418a48 <reap_children@@Base+0xdc8>
  418a20:	ldr	x0, [sp, #24]
  418a24:	ldr	x1, [x0, #56]
  418a28:	ldr	w0, [sp, #44]
  418a2c:	lsl	x0, x0, #3
  418a30:	add	x0, x1, x0
  418a34:	ldr	x0, [x0]
  418a38:	bl	406c00 <free@plt>
  418a3c:	ldr	w0, [sp, #44]
  418a40:	add	w0, w0, #0x1
  418a44:	str	w0, [sp, #44]
  418a48:	ldr	x0, [sp, #24]
  418a4c:	ldr	x0, [x0, #40]
  418a50:	ldr	x0, [x0, #32]
  418a54:	ldrh	w0, [x0, #48]
  418a58:	mov	w1, w0
  418a5c:	ldr	w0, [sp, #44]
  418a60:	cmp	w0, w1
  418a64:	b.cc	418a20 <reap_children@@Base+0xda0>  // b.lo, b.ul, b.last
  418a68:	ldr	x0, [sp, #24]
  418a6c:	ldr	x0, [x0, #56]
  418a70:	bl	406c00 <free@plt>
  418a74:	ldr	x0, [sp, #24]
  418a78:	ldr	x0, [x0, #8]
  418a7c:	cmp	x0, #0x0
  418a80:	b.eq	418ac4 <reap_children@@Base+0xe44>  // b.none
  418a84:	ldr	x0, [sp, #24]
  418a88:	ldr	x0, [x0, #8]
  418a8c:	str	x0, [sp, #32]
  418a90:	b	418aa8 <reap_children@@Base+0xe28>
  418a94:	ldr	x0, [sp, #32]
  418a98:	add	x1, x0, #0x8
  418a9c:	str	x1, [sp, #32]
  418aa0:	ldr	x0, [x0]
  418aa4:	bl	406c00 <free@plt>
  418aa8:	ldr	x0, [sp, #32]
  418aac:	ldr	x0, [x0]
  418ab0:	cmp	x0, #0x0
  418ab4:	b.ne	418a94 <reap_children@@Base+0xe14>  // b.any
  418ab8:	ldr	x0, [sp, #24]
  418abc:	ldr	x0, [x0, #8]
  418ac0:	bl	406c00 <free@plt>
  418ac4:	ldr	x0, [sp, #24]
  418ac8:	ldr	x0, [x0]
  418acc:	bl	406c00 <free@plt>
  418ad0:	ldr	x0, [sp, #24]
  418ad4:	bl	406c00 <free@plt>
  418ad8:	b	418ae0 <reap_children@@Base+0xe60>
  418adc:	nop
  418ae0:	ldp	x29, x30, [sp], #48
  418ae4:	ret
  418ae8:	stp	x29, x30, [sp, #-128]!
  418aec:	mov	x29, sp
  418af0:	str	x19, [sp, #16]
  418af4:	str	x0, [sp, #40]
  418af8:	ldr	x0, [sp, #40]
  418afc:	ldr	x0, [x0, #64]
  418b00:	cmp	x0, #0x0
  418b04:	b.eq	418eb8 <reap_children@@Base+0x1238>  // b.none
  418b08:	ldr	x0, [sp, #40]
  418b0c:	ldr	x0, [x0, #40]
  418b10:	ldr	w0, [x0, #132]
  418b14:	ldr	x1, [sp, #40]
  418b18:	ldr	x1, [x1, #40]
  418b1c:	ldr	x1, [x1, #32]
  418b20:	ldr	x2, [x1, #40]
  418b24:	ldr	x1, [sp, #40]
  418b28:	ldr	w1, [x1, #72]
  418b2c:	sub	w1, w1, #0x1
  418b30:	mov	w1, w1
  418b34:	add	x1, x2, x1
  418b38:	ldrb	w1, [x1]
  418b3c:	orr	w0, w0, w1
  418b40:	str	w0, [sp, #124]
  418b44:	ldr	x0, [sp, #40]
  418b48:	ldr	x0, [x0, #64]
  418b4c:	str	x0, [sp, #112]
  418b50:	ldr	w0, [sp, #124]
  418b54:	and	w0, w0, #0x4
  418b58:	cmp	w0, #0x0
  418b5c:	cset	w0, ne  // ne = any
  418b60:	and	w2, w0, #0xff
  418b64:	ldr	x1, [sp, #40]
  418b68:	ldrb	w0, [x1, #80]
  418b6c:	bfi	w0, w2, #1, #1
  418b70:	strb	w0, [x1, #80]
  418b74:	b	418c10 <reap_children@@Base+0xf90>
  418b78:	ldr	x0, [sp, #112]
  418b7c:	ldrb	w0, [x0]
  418b80:	cmp	w0, #0x40
  418b84:	b.ne	418b98 <reap_children@@Base+0xf18>  // b.any
  418b88:	ldr	w0, [sp, #124]
  418b8c:	orr	w0, w0, #0x2
  418b90:	str	w0, [sp, #124]
  418b94:	b	418c04 <reap_children@@Base+0xf84>
  418b98:	ldr	x0, [sp, #112]
  418b9c:	ldrb	w0, [x0]
  418ba0:	cmp	w0, #0x2b
  418ba4:	b.ne	418bb8 <reap_children@@Base+0xf38>  // b.any
  418ba8:	ldr	w0, [sp, #124]
  418bac:	orr	w0, w0, #0x1
  418bb0:	str	w0, [sp, #124]
  418bb4:	b	418c04 <reap_children@@Base+0xf84>
  418bb8:	ldr	x0, [sp, #112]
  418bbc:	ldrb	w0, [x0]
  418bc0:	cmp	w0, #0x2d
  418bc4:	b.ne	418bdc <reap_children@@Base+0xf5c>  // b.any
  418bc8:	ldr	x0, [sp, #40]
  418bcc:	ldrb	w1, [x0, #80]
  418bd0:	orr	w1, w1, #0x2
  418bd4:	strb	w1, [x0, #80]
  418bd8:	b	418c04 <reap_children@@Base+0xf84>
  418bdc:	ldr	x0, [sp, #112]
  418be0:	ldrb	w0, [x0]
  418be4:	mov	w1, w0
  418be8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418bec:	add	x0, x0, #0x728
  418bf0:	sxtw	x1, w1
  418bf4:	ldrh	w0, [x0, x1, lsl #1]
  418bf8:	and	w0, w0, #0x2
  418bfc:	cmp	w0, #0x0
  418c00:	b.eq	418c24 <reap_children@@Base+0xfa4>  // b.none
  418c04:	ldr	x0, [sp, #112]
  418c08:	add	x0, x0, #0x1
  418c0c:	str	x0, [sp, #112]
  418c10:	ldr	x0, [sp, #112]
  418c14:	ldrb	w0, [x0]
  418c18:	cmp	w0, #0x0
  418c1c:	b.ne	418b78 <reap_children@@Base+0xef8>  // b.any
  418c20:	b	418c28 <reap_children@@Base+0xfa8>
  418c24:	nop
  418c28:	ldr	w0, [sp, #124]
  418c2c:	and	w0, w0, #0x1
  418c30:	cmp	w0, #0x0
  418c34:	cset	w0, ne  // ne = any
  418c38:	and	w2, w0, #0xff
  418c3c:	ldr	x1, [sp, #40]
  418c40:	ldrb	w0, [x1, #80]
  418c44:	bfi	w0, w2, #4, #1
  418c48:	strb	w0, [x1, #80]
  418c4c:	ldr	x0, [sp, #40]
  418c50:	ldr	x0, [x0, #40]
  418c54:	ldr	x0, [x0, #32]
  418c58:	ldr	x1, [x0, #40]
  418c5c:	ldr	x0, [sp, #40]
  418c60:	ldr	w0, [x0, #72]
  418c64:	sub	w0, w0, #0x1
  418c68:	mov	w0, w0
  418c6c:	add	x0, x1, x0
  418c70:	ldrb	w0, [x0]
  418c74:	sxtb	w1, w0
  418c78:	ldr	w0, [sp, #124]
  418c7c:	sxtb	w0, w0
  418c80:	and	w0, w0, #0x1
  418c84:	sxtb	w0, w0
  418c88:	orr	w0, w1, w0
  418c8c:	sxtb	w2, w0
  418c90:	ldr	x0, [sp, #40]
  418c94:	ldr	x0, [x0, #40]
  418c98:	ldr	x0, [x0, #32]
  418c9c:	ldr	x1, [x0, #40]
  418ca0:	ldr	x0, [sp, #40]
  418ca4:	ldr	w0, [x0, #72]
  418ca8:	sub	w0, w0, #0x1
  418cac:	mov	w0, w0
  418cb0:	add	x0, x1, x0
  418cb4:	and	w1, w2, #0xff
  418cb8:	strb	w1, [x0]
  418cbc:	ldr	x0, [sp, #40]
  418cc0:	ldr	x0, [x0, #40]
  418cc4:	ldr	x0, [x0, #32]
  418cc8:	ldrb	w0, [x0, #50]
  418ccc:	strb	w0, [sp, #87]
  418cd0:	ldr	x0, [sp, #112]
  418cd4:	str	x0, [sp, #88]
  418cd8:	ldr	x0, [sp, #88]
  418cdc:	str	x0, [sp, #96]
  418ce0:	b	418d3c <reap_children@@Base+0x10bc>
  418ce4:	ldr	x0, [sp, #88]
  418ce8:	add	x1, x0, #0x1
  418cec:	str	x1, [sp, #88]
  418cf0:	ldr	x1, [sp, #96]
  418cf4:	ldrb	w1, [x1]
  418cf8:	strb	w1, [x0]
  418cfc:	ldr	x0, [sp, #96]
  418d00:	ldrb	w0, [x0]
  418d04:	cmp	w0, #0xa
  418d08:	b.ne	418d30 <reap_children@@Base+0x10b0>  // b.any
  418d0c:	ldr	x0, [sp, #96]
  418d10:	add	x0, x0, #0x1
  418d14:	ldrb	w0, [x0]
  418d18:	ldrb	w1, [sp, #87]
  418d1c:	cmp	w1, w0
  418d20:	b.ne	418d30 <reap_children@@Base+0x10b0>  // b.any
  418d24:	ldr	x0, [sp, #96]
  418d28:	add	x0, x0, #0x1
  418d2c:	str	x0, [sp, #96]
  418d30:	ldr	x0, [sp, #96]
  418d34:	add	x0, x0, #0x1
  418d38:	str	x0, [sp, #96]
  418d3c:	ldr	x0, [sp, #96]
  418d40:	ldrb	w0, [x0]
  418d44:	cmp	w0, #0x0
  418d48:	b.ne	418ce4 <reap_children@@Base+0x1064>  // b.any
  418d4c:	ldr	x0, [sp, #96]
  418d50:	ldrb	w1, [x0]
  418d54:	ldr	x0, [sp, #88]
  418d58:	strb	w1, [x0]
  418d5c:	str	xzr, [sp, #64]
  418d60:	ldr	x0, [sp, #40]
  418d64:	ldr	x2, [x0, #40]
  418d68:	ldr	x0, [sp, #40]
  418d6c:	ldr	x0, [x0, #40]
  418d70:	ldr	x0, [x0, #32]
  418d74:	ldr	x1, [x0, #40]
  418d78:	ldr	x0, [sp, #40]
  418d7c:	ldr	w0, [x0, #72]
  418d80:	sub	w0, w0, #0x1
  418d84:	mov	w0, w0
  418d88:	add	x0, x1, x0
  418d8c:	ldrb	w0, [x0]
  418d90:	mov	w3, w0
  418d94:	ldr	x0, [sp, #40]
  418d98:	add	x1, x0, #0x30
  418d9c:	add	x0, sp, #0x40
  418da0:	mov	x4, x1
  418da4:	mov	x1, x0
  418da8:	ldr	x0, [sp, #112]
  418dac:	bl	41bd00 <construct_command_argv@@Base>
  418db0:	str	x0, [sp, #104]
  418db4:	ldr	x0, [sp, #64]
  418db8:	cmp	x0, #0x0
  418dbc:	b.ne	418dcc <reap_children@@Base+0x114c>  // b.any
  418dc0:	ldr	x0, [sp, #40]
  418dc4:	str	xzr, [x0, #64]
  418dc8:	b	418de8 <reap_children@@Base+0x1168>
  418dcc:	ldr	x0, [sp, #64]
  418dd0:	add	x1, x0, #0x1
  418dd4:	str	x1, [sp, #64]
  418dd8:	strb	wzr, [x0]
  418ddc:	ldr	x1, [sp, #64]
  418de0:	ldr	x0, [sp, #40]
  418de4:	str	x1, [x0, #64]
  418de8:	ldr	x0, [sp, #104]
  418dec:	cmp	x0, #0x0
  418df0:	b.eq	418e60 <reap_children@@Base+0x11e0>  // b.none
  418df4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418df8:	add	x0, x0, #0x6f4
  418dfc:	ldr	w0, [x0]
  418e00:	cmp	w0, #0x0
  418e04:	b.eq	418e60 <reap_children@@Base+0x11e0>  // b.none
  418e08:	ldr	w0, [sp, #124]
  418e0c:	and	w0, w0, #0x1
  418e10:	cmp	w0, #0x0
  418e14:	b.ne	418e60 <reap_children@@Base+0x11e0>  // b.any
  418e18:	ldr	x0, [sp, #104]
  418e1c:	cmp	x0, #0x0
  418e20:	b.eq	418e38 <reap_children@@Base+0x11b8>  // b.none
  418e24:	ldr	x0, [sp, #104]
  418e28:	ldr	x0, [x0]
  418e2c:	bl	406c00 <free@plt>
  418e30:	ldr	x0, [sp, #104]
  418e34:	bl	406c00 <free@plt>
  418e38:	ldr	x0, [sp, #40]
  418e3c:	ldr	x1, [x0, #40]
  418e40:	ldrb	w0, [x1, #136]
  418e44:	mov	w2, #0x2                   	// #2
  418e48:	bfxil	w0, w2, #0, #2
  418e4c:	strb	w0, [x1, #136]
  418e50:	ldr	x0, [sp, #40]
  418e54:	ldr	x0, [x0, #40]
  418e58:	bl	42d420 <notice_finished_file@@Base>
  418e5c:	b	419480 <reap_children@@Base+0x1800>
  418e60:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  418e64:	add	x0, x0, #0xb1c
  418e68:	ldr	w0, [x0]
  418e6c:	cmp	w0, #0x0
  418e70:	b.eq	418ea8 <reap_children@@Base+0x1228>  // b.none
  418e74:	ldr	w0, [sp, #124]
  418e78:	and	w0, w0, #0x1
  418e7c:	cmp	w0, #0x0
  418e80:	b.ne	418ea8 <reap_children@@Base+0x1228>  // b.any
  418e84:	ldr	x0, [sp, #104]
  418e88:	cmp	x0, #0x0
  418e8c:	b.eq	418ea4 <reap_children@@Base+0x1224>  // b.none
  418e90:	ldr	x0, [sp, #104]
  418e94:	ldr	x0, [x0]
  418e98:	bl	406c00 <free@plt>
  418e9c:	ldr	x0, [sp, #104]
  418ea0:	bl	406c00 <free@plt>
  418ea4:	str	xzr, [sp, #104]
  418ea8:	ldr	x0, [sp, #104]
  418eac:	cmp	x0, #0x0
  418eb0:	b.ne	418f28 <reap_children@@Base+0x12a8>  // b.any
  418eb4:	b	418ecc <reap_children@@Base+0x124c>
  418eb8:	nop
  418ebc:	b	418ecc <reap_children@@Base+0x124c>
  418ec0:	nop
  418ec4:	b	418ecc <reap_children@@Base+0x124c>
  418ec8:	nop
  418ecc:	ldr	x0, [sp, #40]
  418ed0:	bl	419eec <new_job@@Base+0x838>
  418ed4:	cmp	w0, #0x0
  418ed8:	b.eq	418ee8 <reap_children@@Base+0x1268>  // b.none
  418edc:	ldr	x0, [sp, #40]
  418ee0:	bl	418ae8 <reap_children@@Base+0xe68>
  418ee4:	b	418f18 <reap_children@@Base+0x1298>
  418ee8:	ldr	x0, [sp, #40]
  418eec:	ldr	x0, [x0, #40]
  418ef0:	mov	w1, #0x2                   	// #2
  418ef4:	bl	40e258 <set_command_state@@Base>
  418ef8:	ldr	x0, [sp, #40]
  418efc:	ldr	x0, [x0, #40]
  418f00:	ldrb	w1, [x0, #136]
  418f04:	and	w1, w1, #0xfffffffc
  418f08:	strb	w1, [x0, #136]
  418f0c:	ldr	x0, [sp, #40]
  418f10:	ldr	x0, [x0, #40]
  418f14:	bl	42d420 <notice_finished_file@@Base>
  418f18:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418f1c:	add	x0, x0, #0xff0
  418f20:	str	xzr, [x0]
  418f24:	b	419480 <reap_children@@Base+0x1800>
  418f28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418f2c:	add	x0, x0, #0x720
  418f30:	ldr	w0, [x0]
  418f34:	cmp	w0, #0x0
  418f38:	b.eq	418f68 <reap_children@@Base+0x12e8>  // b.none
  418f3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418f40:	add	x0, x0, #0x720
  418f44:	ldr	w0, [x0]
  418f48:	cmp	w0, #0x3
  418f4c:	b.eq	418f60 <reap_children@@Base+0x12e0>  // b.none
  418f50:	ldr	w0, [sp, #124]
  418f54:	and	w0, w0, #0x1
  418f58:	cmp	w0, #0x0
  418f5c:	b.ne	418f68 <reap_children@@Base+0x12e8>  // b.any
  418f60:	mov	w0, #0x1                   	// #1
  418f64:	b	418f6c <reap_children@@Base+0x12ec>
  418f68:	mov	w0, #0x0                   	// #0
  418f6c:	and	w0, w0, #0x1
  418f70:	and	w2, w0, #0xff
  418f74:	ldr	x1, [sp, #40]
  418f78:	ldrb	w0, [x1, #24]
  418f7c:	bfxil	w0, w2, #0, #1
  418f80:	strb	w0, [x1, #24]
  418f84:	ldr	x0, [sp, #40]
  418f88:	ldrb	w0, [x0, #24]
  418f8c:	and	w0, w0, #0x1
  418f90:	and	w0, w0, #0xff
  418f94:	cmp	w0, #0x0
  418f98:	b.eq	418fa8 <reap_children@@Base+0x1328>  // b.none
  418f9c:	ldr	x0, [sp, #40]
  418fa0:	add	x0, x0, #0x10
  418fa4:	b	418fac <reap_children@@Base+0x132c>
  418fa8:	mov	x0, #0x0                   	// #0
  418fac:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  418fb0:	add	x1, x1, #0xff0
  418fb4:	str	x0, [x1]
  418fb8:	ldr	x0, [sp, #40]
  418fbc:	ldrb	w0, [x0, #24]
  418fc0:	and	w0, w0, #0x1
  418fc4:	and	w0, w0, #0xff
  418fc8:	cmp	w0, #0x0
  418fcc:	b.ne	418fdc <reap_children@@Base+0x135c>  // b.any
  418fd0:	ldr	x0, [sp, #40]
  418fd4:	add	x0, x0, #0x10
  418fd8:	bl	423654 <output_dump@@Base>
  418fdc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  418fe0:	add	x0, x0, #0xa50
  418fe4:	ldr	w0, [x0]
  418fe8:	cmp	w0, #0x0
  418fec:	b.ne	419028 <reap_children@@Base+0x13a8>  // b.any
  418ff0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  418ff4:	add	x0, x0, #0x724
  418ff8:	ldr	w0, [x0]
  418ffc:	cmp	w0, #0x0
  419000:	b.ne	419028 <reap_children@@Base+0x13a8>  // b.any
  419004:	ldr	w0, [sp, #124]
  419008:	and	w0, w0, #0x2
  41900c:	cmp	w0, #0x0
  419010:	b.ne	419048 <reap_children@@Base+0x13c8>  // b.any
  419014:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419018:	add	x0, x0, #0x6d8
  41901c:	ldr	w0, [x0]
  419020:	cmp	w0, #0x0
  419024:	b.ne	419048 <reap_children@@Base+0x13c8>  // b.any
  419028:	ldr	x0, [sp, #112]
  41902c:	bl	4066f0 <strlen@plt>
  419030:	mov	x1, x0
  419034:	ldr	x3, [sp, #112]
  419038:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41903c:	add	x2, x0, #0x4a8
  419040:	mov	w0, #0x0                   	// #0
  419044:	bl	423cc8 <message@@Base>
  419048:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41904c:	add	x0, x0, #0x88
  419050:	ldr	w0, [x0]
  419054:	add	w1, w0, #0x1
  419058:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41905c:	add	x0, x0, #0x88
  419060:	str	w1, [x0]
  419064:	ldr	x0, [sp, #104]
  419068:	ldr	x0, [x0]
  41906c:	cmp	x0, #0x0
  419070:	b.eq	4191c0 <reap_children@@Base+0x1540>  // b.none
  419074:	ldr	x0, [sp, #104]
  419078:	ldr	x0, [x0]
  41907c:	bl	41780c <is_bourne_compatible_shell@@Base>
  419080:	cmp	w0, #0x0
  419084:	b.eq	4191c0 <reap_children@@Base+0x1540>  // b.none
  419088:	ldr	x0, [sp, #104]
  41908c:	add	x0, x0, #0x8
  419090:	ldr	x0, [x0]
  419094:	cmp	x0, #0x0
  419098:	b.eq	4191c0 <reap_children@@Base+0x1540>  // b.none
  41909c:	ldr	x0, [sp, #104]
  4190a0:	add	x0, x0, #0x8
  4190a4:	ldr	x0, [x0]
  4190a8:	ldrb	w0, [x0]
  4190ac:	cmp	w0, #0x2d
  4190b0:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  4190b4:	ldr	x0, [sp, #104]
  4190b8:	add	x0, x0, #0x8
  4190bc:	ldr	x0, [x0]
  4190c0:	add	x0, x0, #0x1
  4190c4:	ldrb	w0, [x0]
  4190c8:	cmp	w0, #0x63
  4190cc:	b.ne	4190ec <reap_children@@Base+0x146c>  // b.any
  4190d0:	ldr	x0, [sp, #104]
  4190d4:	add	x0, x0, #0x8
  4190d8:	ldr	x0, [x0]
  4190dc:	add	x0, x0, #0x2
  4190e0:	ldrb	w0, [x0]
  4190e4:	cmp	w0, #0x0
  4190e8:	b.eq	419140 <reap_children@@Base+0x14c0>  // b.none
  4190ec:	ldr	x0, [sp, #104]
  4190f0:	add	x0, x0, #0x8
  4190f4:	ldr	x0, [x0]
  4190f8:	add	x0, x0, #0x1
  4190fc:	ldrb	w0, [x0]
  419100:	cmp	w0, #0x65
  419104:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  419108:	ldr	x0, [sp, #104]
  41910c:	add	x0, x0, #0x8
  419110:	ldr	x0, [x0]
  419114:	add	x0, x0, #0x2
  419118:	ldrb	w0, [x0]
  41911c:	cmp	w0, #0x63
  419120:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  419124:	ldr	x0, [sp, #104]
  419128:	add	x0, x0, #0x8
  41912c:	ldr	x0, [x0]
  419130:	add	x0, x0, #0x3
  419134:	ldrb	w0, [x0]
  419138:	cmp	w0, #0x0
  41913c:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  419140:	ldr	x0, [sp, #104]
  419144:	add	x0, x0, #0x10
  419148:	ldr	x0, [x0]
  41914c:	cmp	x0, #0x0
  419150:	b.eq	4191c0 <reap_children@@Base+0x1540>  // b.none
  419154:	ldr	x0, [sp, #104]
  419158:	add	x0, x0, #0x10
  41915c:	ldr	x0, [x0]
  419160:	ldrb	w0, [x0]
  419164:	cmp	w0, #0x3a
  419168:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  41916c:	ldr	x0, [sp, #104]
  419170:	add	x0, x0, #0x10
  419174:	ldr	x0, [x0]
  419178:	add	x0, x0, #0x1
  41917c:	ldrb	w0, [x0]
  419180:	cmp	w0, #0x0
  419184:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  419188:	ldr	x0, [sp, #104]
  41918c:	add	x0, x0, #0x18
  419190:	ldr	x0, [x0]
  419194:	cmp	x0, #0x0
  419198:	b.ne	4191c0 <reap_children@@Base+0x1540>  // b.any
  41919c:	ldr	x0, [sp, #104]
  4191a0:	cmp	x0, #0x0
  4191a4:	b.eq	418ec0 <reap_children@@Base+0x1240>  // b.none
  4191a8:	ldr	x0, [sp, #104]
  4191ac:	ldr	x0, [x0]
  4191b0:	bl	406c00 <free@plt>
  4191b4:	ldr	x0, [sp, #104]
  4191b8:	bl	406c00 <free@plt>
  4191bc:	b	418ec0 <reap_children@@Base+0x1240>
  4191c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4191c4:	add	x0, x0, #0xa50
  4191c8:	ldr	w0, [x0]
  4191cc:	cmp	w0, #0x0
  4191d0:	b.eq	419208 <reap_children@@Base+0x1588>  // b.none
  4191d4:	ldr	w0, [sp, #124]
  4191d8:	and	w0, w0, #0x1
  4191dc:	cmp	w0, #0x0
  4191e0:	b.ne	419208 <reap_children@@Base+0x1588>  // b.any
  4191e4:	ldr	x0, [sp, #104]
  4191e8:	cmp	x0, #0x0
  4191ec:	b.eq	418ec8 <reap_children@@Base+0x1248>  // b.none
  4191f0:	ldr	x0, [sp, #104]
  4191f4:	ldr	x0, [x0]
  4191f8:	bl	406c00 <free@plt>
  4191fc:	ldr	x0, [sp, #104]
  419200:	bl	406c00 <free@plt>
  419204:	b	418ec8 <reap_children@@Base+0x1248>
  419208:	bl	423ad4 <output_start@@Base>
  41920c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419210:	add	x0, x0, #0x400
  419214:	ldr	x0, [x0]
  419218:	bl	406c90 <fflush@plt>
  41921c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419220:	add	x0, x0, #0x3e8
  419224:	ldr	x0, [x0]
  419228:	bl	406c90 <fflush@plt>
  41922c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419230:	add	x0, x0, #0x63c
  419234:	ldr	w0, [x0]
  419238:	cmp	w0, #0x0
  41923c:	cset	w0, eq  // eq = none
  419240:	and	w2, w0, #0xff
  419244:	ldr	x1, [sp, #40]
  419248:	ldrb	w0, [x1, #80]
  41924c:	bfi	w0, w2, #2, #1
  419250:	strb	w0, [x1, #80]
  419254:	ldr	x0, [sp, #40]
  419258:	ldrb	w0, [x0, #80]
  41925c:	and	w0, w0, #0x4
  419260:	and	w0, w0, #0xff
  419264:	cmp	w0, #0x0
  419268:	b.eq	41927c <reap_children@@Base+0x15fc>  // b.none
  41926c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419270:	add	x0, x0, #0x63c
  419274:	mov	w1, #0x1                   	// #1
  419278:	str	w1, [x0]
  41927c:	ldr	x0, [sp, #40]
  419280:	ldrb	w1, [x0, #80]
  419284:	and	w1, w1, #0xfffffff7
  419288:	strb	w1, [x0, #80]
  41928c:	ldr	x0, [sp, #40]
  419290:	ldr	x0, [x0, #8]
  419294:	cmp	x0, #0x0
  419298:	b.ne	4192b4 <reap_children@@Base+0x1634>  // b.any
  41929c:	ldr	x0, [sp, #40]
  4192a0:	ldr	x0, [x0, #40]
  4192a4:	bl	432eb4 <target_environment@@Base>
  4192a8:	mov	x1, x0
  4192ac:	ldr	x0, [sp, #40]
  4192b0:	str	x1, [x0, #8]
  4192b4:	ldr	x0, [sp, #40]
  4192b8:	ldrb	w0, [x0, #80]
  4192bc:	and	w0, w0, #0x1
  4192c0:	and	w0, w0, #0xff
  4192c4:	cmp	w0, #0x0
  4192c8:	b.eq	419394 <reap_children@@Base+0x1714>  // b.none
  4192cc:	ldr	x0, [sp, #40]
  4192d0:	ldr	x19, [x0, #8]
  4192d4:	ldr	x0, [sp, #40]
  4192d8:	ldrb	w0, [x0, #80]
  4192dc:	and	w0, w0, #0x4
  4192e0:	and	w0, w0, #0xff
  4192e4:	cmp	w0, #0x0
  4192e8:	b.ne	4192f4 <reap_children@@Base+0x1674>  // b.any
  4192ec:	bl	435ea0 <get_bad_stdin@@Base>
  4192f0:	b	4192f8 <reap_children@@Base+0x1678>
  4192f4:	mov	w0, #0x0                   	// #0
  4192f8:	add	x3, sp, #0x38
  4192fc:	add	x2, sp, #0x34
  419300:	add	x1, sp, #0x3c
  419304:	mov	x5, x3
  419308:	mov	x4, x2
  41930c:	mov	x3, x1
  419310:	mov	w2, w0
  419314:	mov	x1, x19
  419318:	ldr	x0, [sp, #104]
  41931c:	bl	436054 <start_remote_job@@Base>
  419320:	cmp	w0, #0x0
  419324:	b.ne	41939c <reap_children@@Base+0x171c>  // b.any
  419328:	ldr	x0, [sp, #40]
  41932c:	ldrb	w0, [x0, #80]
  419330:	and	w0, w0, #0x4
  419334:	and	w0, w0, #0xff
  419338:	cmp	w0, #0x0
  41933c:	b.eq	419368 <reap_children@@Base+0x16e8>  // b.none
  419340:	ldr	w0, [sp, #56]
  419344:	cmp	w0, #0x0
  419348:	b.ne	419368 <reap_children@@Base+0x16e8>  // b.any
  41934c:	ldr	x0, [sp, #40]
  419350:	ldrb	w1, [x0, #80]
  419354:	and	w1, w1, #0xfffffffb
  419358:	strb	w1, [x0, #80]
  41935c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419360:	add	x0, x0, #0x63c
  419364:	str	wzr, [x0]
  419368:	ldr	w0, [sp, #60]
  41936c:	and	w0, w0, #0x1
  419370:	and	w2, w0, #0xff
  419374:	ldr	x1, [sp, #40]
  419378:	ldrb	w0, [x1, #80]
  41937c:	bfxil	w0, w2, #0, #1
  419380:	strb	w0, [x1, #80]
  419384:	ldr	w1, [sp, #52]
  419388:	ldr	x0, [sp, #40]
  41938c:	str	w1, [x0, #76]
  419390:	b	419418 <reap_children@@Base+0x1798>
  419394:	nop
  419398:	b	4193a0 <reap_children@@Base+0x1720>
  41939c:	nop
  4193a0:	bl	417920 <is_bourne_compatible_shell@@Base+0x114>
  4193a4:	ldr	x0, [sp, #40]
  4193a8:	ldrb	w1, [x0, #80]
  4193ac:	and	w1, w1, #0xfffffffe
  4193b0:	strb	w1, [x0, #80]
  4193b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4193b8:	add	x0, x0, #0x410
  4193bc:	ldr	x0, [x0]
  4193c0:	str	x0, [sp, #72]
  4193c4:	ldr	w0, [sp, #124]
  4193c8:	and	w0, w0, #0x1
  4193cc:	bl	435b58 <jobserver_pre_child@@Base>
  4193d0:	ldr	x0, [sp, #40]
  4193d4:	ldrb	w0, [x0, #80]
  4193d8:	ubfx	x0, x0, #2, #1
  4193dc:	and	w0, w0, #0xff
  4193e0:	ldr	x2, [sp, #104]
  4193e4:	mov	w1, w0
  4193e8:	ldr	x0, [sp, #40]
  4193ec:	bl	41a598 <child_execute_job@@Base>
  4193f0:	mov	w1, w0
  4193f4:	ldr	x0, [sp, #40]
  4193f8:	str	w1, [x0, #76]
  4193fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419400:	add	x0, x0, #0x410
  419404:	ldr	x1, [sp, #72]
  419408:	str	x1, [x0]
  41940c:	ldr	w0, [sp, #124]
  419410:	and	w0, w0, #0x1
  419414:	bl	435bb0 <jobserver_post_child@@Base>
  419418:	ldr	x0, [sp, #40]
  41941c:	ldr	w0, [x0, #76]
  419420:	cmp	w0, #0x0
  419424:	b.lt	419444 <reap_children@@Base+0x17c4>  // b.tstop
  419428:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41942c:	add	x0, x0, #0x630
  419430:	ldr	x0, [x0]
  419434:	add	x1, x0, #0x1
  419438:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41943c:	add	x0, x0, #0x630
  419440:	str	x1, [x0]
  419444:	ldr	x0, [sp, #40]
  419448:	ldr	x0, [x0, #40]
  41944c:	mov	w1, #0x2                   	// #2
  419450:	bl	40e258 <set_command_state@@Base>
  419454:	ldr	x0, [sp, #104]
  419458:	cmp	x0, #0x0
  41945c:	b.eq	419474 <reap_children@@Base+0x17f4>  // b.none
  419460:	ldr	x0, [sp, #104]
  419464:	ldr	x0, [x0]
  419468:	bl	406c00 <free@plt>
  41946c:	ldr	x0, [sp, #104]
  419470:	bl	406c00 <free@plt>
  419474:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419478:	add	x0, x0, #0xff0
  41947c:	str	xzr, [x0]
  419480:	ldr	x19, [sp, #16]
  419484:	ldp	x29, x30, [sp], #128
  419488:	ret
  41948c:	stp	x29, x30, [sp, #-80]!
  419490:	mov	x29, sp
  419494:	stp	x19, x20, [sp, #16]
  419498:	str	x21, [sp, #32]
  41949c:	str	x0, [sp, #56]
  4194a0:	ldr	x0, [sp, #56]
  4194a4:	ldr	x0, [x0, #40]
  4194a8:	str	x0, [sp, #72]
  4194ac:	mov	w0, #0x1                   	// #1
  4194b0:	bl	436040 <start_remote_job_p@@Base>
  4194b4:	and	w0, w0, #0x1
  4194b8:	and	w2, w0, #0xff
  4194bc:	ldr	x1, [sp, #56]
  4194c0:	ldrb	w0, [x1, #80]
  4194c4:	bfxil	w0, w2, #0, #1
  4194c8:	strb	w0, [x1, #80]
  4194cc:	ldr	x0, [sp, #56]
  4194d0:	ldrb	w0, [x0, #80]
  4194d4:	and	w0, w0, #0x1
  4194d8:	and	w0, w0, #0xff
  4194dc:	cmp	w0, #0x0
  4194e0:	b.ne	41953c <reap_children@@Base+0x18bc>  // b.any
  4194e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4194e8:	add	x0, x0, #0x628
  4194ec:	ldr	w0, [x0]
  4194f0:	cmp	w0, #0x0
  4194f4:	b.eq	41953c <reap_children@@Base+0x18bc>  // b.none
  4194f8:	bl	419fbc <new_job@@Base+0x908>
  4194fc:	cmp	w0, #0x0
  419500:	b.eq	41953c <reap_children@@Base+0x18bc>  // b.none
  419504:	mov	w1, #0x2                   	// #2
  419508:	ldr	x0, [sp, #72]
  41950c:	bl	40e258 <set_command_state@@Base>
  419510:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419514:	add	x0, x0, #0x640
  419518:	ldr	x1, [x0]
  41951c:	ldr	x0, [sp, #56]
  419520:	str	x1, [x0, #32]
  419524:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419528:	add	x0, x0, #0x640
  41952c:	ldr	x1, [sp, #56]
  419530:	str	x1, [x0]
  419534:	mov	w0, #0x0                   	// #0
  419538:	b	4196a4 <reap_children@@Base+0x1a24>
  41953c:	ldr	x0, [sp, #56]
  419540:	bl	418ae8 <reap_children@@Base+0xe68>
  419544:	ldr	x0, [sp, #72]
  419548:	ldrb	w0, [x0, #136]
  41954c:	ubfx	x0, x0, #2, #2
  419550:	and	w0, w0, #0xff
  419554:	cmp	w0, #0x3
  419558:	b.eq	419688 <reap_children@@Base+0x1a08>  // b.none
  41955c:	cmp	w0, #0x3
  419560:	b.gt	41969c <reap_children@@Base+0x1a1c>
  419564:	cmp	w0, #0x0
  419568:	b.eq	419678 <reap_children@@Base+0x19f8>  // b.none
  41956c:	cmp	w0, #0x2
  419570:	b.ne	41969c <reap_children@@Base+0x1a1c>  // b.any
  419574:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419578:	add	x0, x0, #0x620
  41957c:	ldr	x1, [x0]
  419580:	ldr	x0, [sp, #56]
  419584:	str	x1, [x0, #32]
  419588:	ldr	x0, [sp, #56]
  41958c:	ldr	w0, [x0, #76]
  419590:	cmp	w0, #0x0
  419594:	b.le	419660 <reap_children@@Base+0x19e0>
  419598:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41959c:	add	x0, x0, #0x6dc
  4195a0:	ldr	w0, [x0]
  4195a4:	and	w0, w0, #0x4
  4195a8:	cmp	w0, #0x0
  4195ac:	b.eq	419634 <reap_children@@Base+0x19b4>  // b.none
  4195b0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4195b4:	add	x0, x0, #0x4b0
  4195b8:	bl	406e40 <gettext@plt>
  4195bc:	mov	x20, x0
  4195c0:	ldr	x0, [sp, #56]
  4195c4:	ldr	x0, [x0, #40]
  4195c8:	ldr	x19, [x0]
  4195cc:	ldr	x0, [sp, #56]
  4195d0:	ldr	w0, [x0, #76]
  4195d4:	bl	4177d4 <stemlen_compare@@Base+0x1dd0>
  4195d8:	mov	x21, x0
  4195dc:	ldr	x0, [sp, #56]
  4195e0:	ldrb	w0, [x0, #80]
  4195e4:	and	w0, w0, #0x1
  4195e8:	and	w0, w0, #0xff
  4195ec:	cmp	w0, #0x0
  4195f0:	b.eq	419604 <reap_children@@Base+0x1984>  // b.none
  4195f4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  4195f8:	add	x0, x0, #0x338
  4195fc:	bl	406e40 <gettext@plt>
  419600:	b	41960c <reap_children@@Base+0x198c>
  419604:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419608:	add	x0, x0, #0x280
  41960c:	mov	x4, x0
  419610:	mov	x3, x21
  419614:	mov	x2, x19
  419618:	ldr	x1, [sp, #56]
  41961c:	mov	x0, x20
  419620:	bl	406dc0 <printf@plt>
  419624:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419628:	add	x0, x0, #0x400
  41962c:	ldr	x0, [x0]
  419630:	bl	406c90 <fflush@plt>
  419634:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419638:	add	x0, x0, #0x628
  41963c:	ldr	w0, [x0]
  419640:	add	w1, w0, #0x1
  419644:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419648:	add	x0, x0, #0x628
  41964c:	str	w1, [x0]
  419650:	ldr	x0, [sp, #56]
  419654:	ldrb	w1, [x0, #80]
  419658:	orr	w1, w1, #0x20
  41965c:	strb	w1, [x0, #80]
  419660:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419664:	add	x0, x0, #0x620
  419668:	ldr	x1, [sp, #56]
  41966c:	str	x1, [x0]
  419670:	bl	417948 <is_bourne_compatible_shell@@Base+0x13c>
  419674:	b	4196a0 <reap_children@@Base+0x1a20>
  419678:	ldr	x0, [sp, #72]
  41967c:	ldrb	w1, [x0, #136]
  419680:	and	w1, w1, #0xfffffffc
  419684:	strb	w1, [x0, #136]
  419688:	ldr	x0, [sp, #72]
  41968c:	bl	42d420 <notice_finished_file@@Base>
  419690:	ldr	x0, [sp, #56]
  419694:	bl	4188f8 <reap_children@@Base+0xc78>
  419698:	b	4196a0 <reap_children@@Base+0x1a20>
  41969c:	nop
  4196a0:	mov	w0, #0x1                   	// #1
  4196a4:	ldp	x19, x20, [sp, #16]
  4196a8:	ldr	x21, [sp, #32]
  4196ac:	ldp	x29, x30, [sp], #80
  4196b0:	ret

00000000004196b4 <new_job@@Base>:
  4196b4:	stp	x29, x30, [sp, #-176]!
  4196b8:	mov	x29, sp
  4196bc:	str	x19, [sp, #16]
  4196c0:	str	x0, [x29, #40]
  4196c4:	ldr	x0, [x29, #40]
  4196c8:	ldr	x0, [x0, #32]
  4196cc:	str	x0, [x29, #112]
  4196d0:	bl	41a510 <start_waiting_jobs@@Base>
  4196d4:	mov	w1, #0x0                   	// #0
  4196d8:	mov	w0, #0x0                   	// #0
  4196dc:	bl	417c80 <reap_children@@Base>
  4196e0:	ldr	x0, [x29, #112]
  4196e4:	bl	408ee0 <chop_commands@@Base>
  4196e8:	mov	x0, #0x58                  	// #88
  4196ec:	bl	4226d4 <xcalloc@@Base>
  4196f0:	str	x0, [x29, #104]
  4196f4:	ldr	x0, [x29, #104]
  4196f8:	add	x0, x0, #0x10
  4196fc:	bl	423944 <output_init@@Base>
  419700:	ldr	x0, [x29, #104]
  419704:	ldr	x1, [x29, #40]
  419708:	str	x1, [x0, #40]
  41970c:	ldr	x0, [x29, #104]
  419710:	str	xzr, [x0, #48]
  419714:	ldr	x0, [x29, #40]
  419718:	ldrb	w0, [x0, #138]
  41971c:	ubfx	x0, x0, #0, #1
  419720:	and	w2, w0, #0xff
  419724:	ldr	x1, [x29, #104]
  419728:	ldrb	w0, [x1, #80]
  41972c:	bfi	w0, w2, #6, #1
  419730:	strb	w0, [x1, #80]
  419734:	ldr	x0, [x29, #104]
  419738:	ldrb	w0, [x0, #24]
  41973c:	and	w0, w0, #0x1
  419740:	and	w0, w0, #0xff
  419744:	cmp	w0, #0x0
  419748:	b.eq	419758 <new_job@@Base+0xa4>  // b.none
  41974c:	ldr	x0, [x29, #104]
  419750:	add	x0, x0, #0x10
  419754:	b	41975c <new_job@@Base+0xa8>
  419758:	mov	x0, #0x0                   	// #0
  41975c:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  419760:	add	x1, x1, #0xff0
  419764:	str	x0, [x1]
  419768:	ldr	x0, [x29, #112]
  41976c:	ldrh	w0, [x0, #48]
  419770:	and	x0, x0, #0xffff
  419774:	lsl	x0, x0, #3
  419778:	bl	42268c <xmalloc@@Base>
  41977c:	str	x0, [x29, #96]
  419780:	str	wzr, [x29, #172]
  419784:	b	419ae8 <new_job@@Base+0x434>
  419788:	ldr	x0, [x29, #112]
  41978c:	ldr	x1, [x0, #32]
  419790:	ldr	w0, [x29, #172]
  419794:	lsl	x0, x0, #3
  419798:	add	x0, x1, x0
  41979c:	ldr	x0, [x0]
  4197a0:	str	x0, [x29, #152]
  4197a4:	ldr	x0, [x29, #152]
  4197a8:	str	x0, [x29, #160]
  4197ac:	b	419a50 <new_job@@Base+0x39c>
  4197b0:	ldr	x0, [x29, #64]
  4197b4:	add	x0, x0, #0x1
  4197b8:	str	x0, [x29, #64]
  4197bc:	ldr	x1, [x29, #152]
  4197c0:	ldr	x0, [x29, #160]
  4197c4:	cmp	x1, x0
  4197c8:	b.eq	4197e8 <new_job@@Base+0x134>  // b.none
  4197cc:	ldr	x1, [x29, #64]
  4197d0:	ldr	x0, [x29, #160]
  4197d4:	sub	x0, x1, x0
  4197d8:	mov	x2, x0
  4197dc:	ldr	x1, [x29, #160]
  4197e0:	ldr	x0, [x29, #152]
  4197e4:	bl	4066c0 <memmove@plt>
  4197e8:	ldr	x1, [x29, #64]
  4197ec:	ldr	x0, [x29, #160]
  4197f0:	sub	x0, x1, x0
  4197f4:	mov	x1, x0
  4197f8:	ldr	x0, [x29, #152]
  4197fc:	add	x0, x0, x1
  419800:	str	x0, [x29, #152]
  419804:	ldr	x0, [x29, #64]
  419808:	str	x0, [x29, #160]
  41980c:	ldr	x0, [x29, #64]
  419810:	ldrb	w0, [x0]
  419814:	cmp	w0, #0x28
  419818:	b.eq	41982c <new_job@@Base+0x178>  // b.none
  41981c:	ldr	x0, [x29, #64]
  419820:	ldrb	w0, [x0]
  419824:	cmp	w0, #0x7b
  419828:	b.ne	419a50 <new_job@@Base+0x39c>  // b.any
  41982c:	ldr	x0, [x29, #64]
  419830:	ldrb	w0, [x0]
  419834:	strb	w0, [x29, #63]
  419838:	ldrb	w0, [x29, #63]
  41983c:	cmp	w0, #0x28
  419840:	b.ne	41984c <new_job@@Base+0x198>  // b.any
  419844:	mov	w0, #0x29                  	// #41
  419848:	b	419850 <new_job@@Base+0x19c>
  41984c:	mov	w0, #0x7d                  	// #125
  419850:	strb	w0, [x29, #62]
  419854:	ldr	x1, [x29, #160]
  419858:	add	x0, x1, #0x1
  41985c:	str	x0, [x29, #160]
  419860:	ldr	x0, [x29, #152]
  419864:	add	x2, x0, #0x1
  419868:	str	x2, [x29, #152]
  41986c:	ldrb	w1, [x1]
  419870:	strb	w1, [x0]
  419874:	ldr	x0, [x29, #152]
  419878:	str	x0, [x29, #48]
  41987c:	str	wzr, [x29, #148]
  419880:	b	419a40 <new_job@@Base+0x38c>
  419884:	ldr	x0, [x29, #160]
  419888:	ldrb	w0, [x0]
  41988c:	ldrb	w1, [x29, #62]
  419890:	cmp	w1, w0
  419894:	b.ne	4198b0 <new_job@@Base+0x1fc>  // b.any
  419898:	ldr	w0, [x29, #148]
  41989c:	sub	w0, w0, #0x1
  4198a0:	str	w0, [x29, #148]
  4198a4:	ldr	w0, [x29, #148]
  4198a8:	cmp	w0, #0x0
  4198ac:	b.lt	419a50 <new_job@@Base+0x39c>  // b.tstop
  4198b0:	ldr	x0, [x29, #160]
  4198b4:	ldrb	w0, [x0]
  4198b8:	cmp	w0, #0x5c
  4198bc:	b.ne	419a00 <new_job@@Base+0x34c>  // b.any
  4198c0:	ldr	x0, [x29, #160]
  4198c4:	add	x0, x0, #0x1
  4198c8:	ldrb	w0, [x0]
  4198cc:	cmp	w0, #0xa
  4198d0:	b.ne	419a00 <new_job@@Base+0x34c>  // b.any
  4198d4:	str	wzr, [x29, #132]
  4198d8:	ldr	x0, [x29, #160]
  4198dc:	sub	x0, x0, #0x1
  4198e0:	str	x0, [x29, #136]
  4198e4:	b	419908 <new_job@@Base+0x254>
  4198e8:	ldr	w0, [x29, #132]
  4198ec:	cmp	w0, #0x0
  4198f0:	cset	w0, eq  // eq = none
  4198f4:	and	w0, w0, #0xff
  4198f8:	str	w0, [x29, #132]
  4198fc:	ldr	x0, [x29, #136]
  419900:	sub	x0, x0, #0x1
  419904:	str	x0, [x29, #136]
  419908:	ldr	x1, [x29, #136]
  41990c:	ldr	x0, [x29, #64]
  419910:	cmp	x1, x0
  419914:	b.ls	419928 <new_job@@Base+0x274>  // b.plast
  419918:	ldr	x0, [x29, #136]
  41991c:	ldrb	w0, [x0]
  419920:	cmp	w0, #0x5c
  419924:	b.eq	4198e8 <new_job@@Base+0x234>  // b.none
  419928:	ldr	w0, [x29, #132]
  41992c:	cmp	w0, #0x0
  419930:	b.eq	419958 <new_job@@Base+0x2a4>  // b.none
  419934:	ldr	x1, [x29, #160]
  419938:	add	x0, x1, #0x1
  41993c:	str	x0, [x29, #160]
  419940:	ldr	x0, [x29, #152]
  419944:	add	x2, x0, #0x1
  419948:	str	x2, [x29, #152]
  41994c:	ldrb	w1, [x1]
  419950:	strb	w1, [x0]
  419954:	b	419a40 <new_job@@Base+0x38c>
  419958:	ldr	x0, [x29, #160]
  41995c:	add	x0, x0, #0x2
  419960:	str	x0, [x29, #160]
  419964:	b	419974 <new_job@@Base+0x2c0>
  419968:	ldr	x0, [x29, #160]
  41996c:	add	x0, x0, #0x1
  419970:	str	x0, [x29, #160]
  419974:	ldr	x0, [x29, #160]
  419978:	ldrb	w0, [x0]
  41997c:	mov	w1, w0
  419980:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419984:	add	x0, x0, #0x728
  419988:	sxtw	x1, w1
  41998c:	ldrh	w0, [x0, x1, lsl #1]
  419990:	and	w0, w0, #0x6
  419994:	cmp	w0, #0x0
  419998:	b.ne	419968 <new_job@@Base+0x2b4>  // b.any
  41999c:	b	4199ac <new_job@@Base+0x2f8>
  4199a0:	ldr	x0, [x29, #152]
  4199a4:	sub	x0, x0, #0x1
  4199a8:	str	x0, [x29, #152]
  4199ac:	ldr	x1, [x29, #152]
  4199b0:	ldr	x0, [x29, #48]
  4199b4:	cmp	x1, x0
  4199b8:	b.ls	4199e8 <new_job@@Base+0x334>  // b.plast
  4199bc:	ldr	x0, [x29, #152]
  4199c0:	sub	x0, x0, #0x1
  4199c4:	ldrb	w0, [x0]
  4199c8:	mov	w1, w0
  4199cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4199d0:	add	x0, x0, #0x728
  4199d4:	sxtw	x1, w1
  4199d8:	ldrh	w0, [x0, x1, lsl #1]
  4199dc:	and	w0, w0, #0x2
  4199e0:	cmp	w0, #0x0
  4199e4:	b.ne	4199a0 <new_job@@Base+0x2ec>  // b.any
  4199e8:	ldr	x0, [x29, #152]
  4199ec:	add	x1, x0, #0x1
  4199f0:	str	x1, [x29, #152]
  4199f4:	mov	w1, #0x20                  	// #32
  4199f8:	strb	w1, [x0]
  4199fc:	b	419a40 <new_job@@Base+0x38c>
  419a00:	ldr	x0, [x29, #160]
  419a04:	ldrb	w0, [x0]
  419a08:	ldrb	w1, [x29, #63]
  419a0c:	cmp	w1, w0
  419a10:	b.ne	419a20 <new_job@@Base+0x36c>  // b.any
  419a14:	ldr	w0, [x29, #148]
  419a18:	add	w0, w0, #0x1
  419a1c:	str	w0, [x29, #148]
  419a20:	ldr	x1, [x29, #160]
  419a24:	add	x0, x1, #0x1
  419a28:	str	x0, [x29, #160]
  419a2c:	ldr	x0, [x29, #152]
  419a30:	add	x2, x0, #0x1
  419a34:	str	x2, [x29, #152]
  419a38:	ldrb	w1, [x1]
  419a3c:	strb	w1, [x0]
  419a40:	ldr	x0, [x29, #160]
  419a44:	ldrb	w0, [x0]
  419a48:	cmp	w0, #0x0
  419a4c:	b.ne	419884 <new_job@@Base+0x1d0>  // b.any
  419a50:	mov	w1, #0x24                  	// #36
  419a54:	ldr	x0, [x29, #160]
  419a58:	bl	406c20 <strchr@plt>
  419a5c:	str	x0, [x29, #64]
  419a60:	ldr	x0, [x29, #64]
  419a64:	cmp	x0, #0x0
  419a68:	b.ne	4197b0 <new_job@@Base+0xfc>  // b.any
  419a6c:	ldr	x1, [x29, #152]
  419a70:	ldr	x0, [x29, #160]
  419a74:	cmp	x1, x0
  419a78:	b.eq	419a98 <new_job@@Base+0x3e4>  // b.none
  419a7c:	ldr	x0, [x29, #160]
  419a80:	bl	4066f0 <strlen@plt>
  419a84:	add	x0, x0, #0x1
  419a88:	mov	x2, x0
  419a8c:	ldr	x1, [x29, #160]
  419a90:	ldr	x0, [x29, #152]
  419a94:	bl	4066c0 <memmove@plt>
  419a98:	ldr	w1, [x29, #172]
  419a9c:	ldr	x0, [x29, #112]
  419aa0:	str	x1, [x0, #16]
  419aa4:	ldr	x0, [x29, #112]
  419aa8:	ldr	x1, [x0, #32]
  419aac:	ldr	w0, [x29, #172]
  419ab0:	lsl	x0, x0, #3
  419ab4:	add	x0, x1, x0
  419ab8:	ldr	x2, [x0]
  419abc:	ldr	w0, [x29, #172]
  419ac0:	lsl	x0, x0, #3
  419ac4:	ldr	x1, [x29, #96]
  419ac8:	add	x19, x1, x0
  419acc:	ldr	x1, [x29, #40]
  419ad0:	mov	x0, x2
  419ad4:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  419ad8:	str	x0, [x19]
  419adc:	ldr	w0, [x29, #172]
  419ae0:	add	w0, w0, #0x1
  419ae4:	str	w0, [x29, #172]
  419ae8:	ldr	x0, [x29, #112]
  419aec:	ldrh	w0, [x0, #48]
  419af0:	mov	w1, w0
  419af4:	ldr	w0, [x29, #172]
  419af8:	cmp	w0, w1
  419afc:	b.cc	419788 <new_job@@Base+0xd4>  // b.lo, b.ul, b.last
  419b00:	ldr	x0, [x29, #112]
  419b04:	str	xzr, [x0, #16]
  419b08:	ldr	x0, [x29, #104]
  419b0c:	ldr	x1, [x29, #96]
  419b10:	str	x1, [x0, #56]
  419b14:	ldr	x0, [x29, #104]
  419b18:	bl	419eec <new_job@@Base+0x838>
  419b1c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  419b20:	add	x0, x0, #0xb20
  419b24:	ldr	w0, [x0]
  419b28:	cmp	w0, #0x0
  419b2c:	b.eq	419b64 <new_job@@Base+0x4b0>  // b.none
  419b30:	b	419b40 <new_job@@Base+0x48c>
  419b34:	mov	w1, #0x0                   	// #0
  419b38:	mov	w0, #0x1                   	// #1
  419b3c:	bl	417c80 <reap_children@@Base>
  419b40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419b44:	add	x0, x0, #0x628
  419b48:	ldr	w1, [x0]
  419b4c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  419b50:	add	x0, x0, #0xb20
  419b54:	ldr	w0, [x0]
  419b58:	cmp	w1, w0
  419b5c:	b.eq	419b34 <new_job@@Base+0x480>  // b.none
  419b60:	b	419ccc <new_job@@Base+0x618>
  419b64:	bl	43593c <jobserver_enabled@@Base>
  419b68:	cmp	w0, #0x0
  419b6c:	b.eq	419ccc <new_job@@Base+0x618>  // b.none
  419b70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419b74:	add	x0, x0, #0x6dc
  419b78:	ldr	w0, [x0]
  419b7c:	and	w0, w0, #0x4
  419b80:	cmp	w0, #0x0
  419b84:	b.eq	419bd0 <new_job@@Base+0x51c>  // b.none
  419b88:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419b8c:	add	x0, x0, #0x620
  419b90:	ldr	x0, [x0]
  419b94:	cmp	x0, #0x0
  419b98:	b.eq	419ba8 <new_job@@Base+0x4f4>  // b.none
  419b9c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419ba0:	add	x0, x0, #0x280
  419ba4:	b	419bb0 <new_job@@Base+0x4fc>
  419ba8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419bac:	add	x0, x0, #0x4e0
  419bb0:	mov	x1, x0
  419bb4:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419bb8:	add	x0, x0, #0x4e8
  419bbc:	bl	406dc0 <printf@plt>
  419bc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419bc4:	add	x0, x0, #0x400
  419bc8:	ldr	x0, [x0]
  419bcc:	bl	406c90 <fflush@plt>
  419bd0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419bd4:	add	x0, x0, #0x638
  419bd8:	ldr	w0, [x0]
  419bdc:	cmp	w0, #0x0
  419be0:	b.eq	419cb8 <new_job@@Base+0x604>  // b.none
  419be4:	bl	435c50 <jobserver_pre_acquire@@Base>
  419be8:	mov	w1, #0x0                   	// #0
  419bec:	mov	w0, #0x0                   	// #0
  419bf0:	bl	417c80 <reap_children@@Base>
  419bf4:	bl	41a510 <start_waiting_jobs@@Base>
  419bf8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419bfc:	add	x0, x0, #0x638
  419c00:	ldr	w0, [x0]
  419c04:	cmp	w0, #0x0
  419c08:	b.eq	419cc0 <new_job@@Base+0x60c>  // b.none
  419c0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419c10:	add	x0, x0, #0x620
  419c14:	ldr	x0, [x0]
  419c18:	cmp	x0, #0x0
  419c1c:	b.ne	419c34 <new_job@@Base+0x580>  // b.any
  419c20:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419c24:	add	x2, x0, #0x510
  419c28:	mov	x1, #0x0                   	// #0
  419c2c:	mov	x0, #0x0                   	// #0
  419c30:	bl	424098 <fatal@@Base>
  419c34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419c38:	add	x0, x0, #0x640
  419c3c:	ldr	x0, [x0]
  419c40:	cmp	x0, #0x0
  419c44:	cset	w0, ne  // ne = any
  419c48:	and	w0, w0, #0xff
  419c4c:	bl	435ca8 <jobserver_acquire@@Base>
  419c50:	str	w0, [x29, #92]
  419c54:	ldr	w0, [x29, #92]
  419c58:	cmp	w0, #0x1
  419c5c:	b.ne	419b70 <new_job@@Base+0x4bc>  // b.any
  419c60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419c64:	add	x0, x0, #0x6dc
  419c68:	ldr	w0, [x0]
  419c6c:	and	w0, w0, #0x4
  419c70:	cmp	w0, #0x0
  419c74:	b.eq	419cc8 <new_job@@Base+0x614>  // b.none
  419c78:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419c7c:	add	x0, x0, #0x548
  419c80:	bl	406e40 <gettext@plt>
  419c84:	mov	x3, x0
  419c88:	ldr	x0, [x29, #104]
  419c8c:	ldr	x0, [x0, #40]
  419c90:	ldr	x0, [x0]
  419c94:	mov	x2, x0
  419c98:	ldr	x1, [x29, #104]
  419c9c:	mov	x0, x3
  419ca0:	bl	406dc0 <printf@plt>
  419ca4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419ca8:	add	x0, x0, #0x400
  419cac:	ldr	x0, [x0]
  419cb0:	bl	406c90 <fflush@plt>
  419cb4:	b	419cc8 <new_job@@Base+0x614>
  419cb8:	nop
  419cbc:	b	419ccc <new_job@@Base+0x618>
  419cc0:	nop
  419cc4:	b	419ccc <new_job@@Base+0x618>
  419cc8:	nop
  419ccc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419cd0:	add	x0, x0, #0x638
  419cd4:	ldr	w0, [x0]
  419cd8:	add	w1, w0, #0x1
  419cdc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419ce0:	add	x0, x0, #0x638
  419ce4:	str	w1, [x0]
  419ce8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419cec:	add	x0, x0, #0x724
  419cf0:	ldr	w0, [x0]
  419cf4:	cmp	w0, #0x0
  419cf8:	b.eq	419e74 <new_job@@Base+0x7c0>  // b.none
  419cfc:	ldr	x0, [x29, #104]
  419d00:	ldr	x0, [x0, #40]
  419d04:	mov	x1, x0
  419d08:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419d0c:	add	x0, x0, #0x570
  419d10:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  419d14:	str	x0, [x29, #80]
  419d18:	ldr	x0, [x29, #112]
  419d1c:	ldr	x0, [x0]
  419d20:	cmp	x0, #0x0
  419d24:	b.ne	419d3c <new_job@@Base+0x688>  // b.any
  419d28:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419d2c:	add	x0, x0, #0x2a8
  419d30:	bl	406e40 <gettext@plt>
  419d34:	str	x0, [x29, #120]
  419d38:	b	419da0 <new_job@@Base+0x6ec>
  419d3c:	ldr	x0, [x29, #112]
  419d40:	ldr	x0, [x0]
  419d44:	bl	4066f0 <strlen@plt>
  419d48:	add	x0, x0, #0xd
  419d4c:	add	x0, x0, #0xf
  419d50:	lsr	x0, x0, #4
  419d54:	lsl	x0, x0, #4
  419d58:	sub	sp, sp, x0
  419d5c:	mov	x0, sp
  419d60:	add	x0, x0, #0xf
  419d64:	lsr	x0, x0, #4
  419d68:	lsl	x0, x0, #4
  419d6c:	str	x0, [x29, #72]
  419d70:	ldr	x0, [x29, #112]
  419d74:	ldr	x1, [x0]
  419d78:	ldr	x0, [x29, #112]
  419d7c:	ldr	x0, [x0, #8]
  419d80:	mov	x3, x0
  419d84:	mov	x2, x1
  419d88:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419d8c:	add	x1, x0, #0x2b8
  419d90:	ldr	x0, [x29, #72]
  419d94:	bl	406790 <sprintf@plt>
  419d98:	ldr	x0, [x29, #72]
  419d9c:	str	x0, [x29, #120]
  419da0:	ldr	x0, [x29, #80]
  419da4:	ldrb	w0, [x0]
  419da8:	cmp	w0, #0x0
  419dac:	b.ne	419e08 <new_job@@Base+0x754>  // b.any
  419db0:	ldr	x0, [x29, #120]
  419db4:	bl	4066f0 <strlen@plt>
  419db8:	mov	x19, x0
  419dbc:	ldr	x0, [x29, #104]
  419dc0:	ldr	x0, [x0, #40]
  419dc4:	ldr	x0, [x0]
  419dc8:	bl	4066f0 <strlen@plt>
  419dcc:	add	x19, x19, x0
  419dd0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419dd4:	add	x0, x0, #0x578
  419dd8:	bl	406e40 <gettext@plt>
  419ddc:	mov	x1, x0
  419de0:	ldr	x0, [x29, #104]
  419de4:	ldr	x0, [x0, #40]
  419de8:	ldr	x0, [x0]
  419dec:	mov	x4, x0
  419df0:	ldr	x3, [x29, #120]
  419df4:	mov	x2, x1
  419df8:	mov	x1, x19
  419dfc:	mov	w0, #0x0                   	// #0
  419e00:	bl	423cc8 <message@@Base>
  419e04:	b	419e6c <new_job@@Base+0x7b8>
  419e08:	ldr	x0, [x29, #120]
  419e0c:	bl	4066f0 <strlen@plt>
  419e10:	mov	x19, x0
  419e14:	ldr	x0, [x29, #104]
  419e18:	ldr	x0, [x0, #40]
  419e1c:	ldr	x0, [x0]
  419e20:	bl	4066f0 <strlen@plt>
  419e24:	add	x19, x19, x0
  419e28:	ldr	x0, [x29, #80]
  419e2c:	bl	4066f0 <strlen@plt>
  419e30:	add	x19, x19, x0
  419e34:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  419e38:	add	x0, x0, #0x598
  419e3c:	bl	406e40 <gettext@plt>
  419e40:	mov	x1, x0
  419e44:	ldr	x0, [x29, #104]
  419e48:	ldr	x0, [x0, #40]
  419e4c:	ldr	x0, [x0]
  419e50:	ldr	x5, [x29, #80]
  419e54:	mov	x4, x0
  419e58:	ldr	x3, [x29, #120]
  419e5c:	mov	x2, x1
  419e60:	mov	x1, x19
  419e64:	mov	w0, #0x0                   	// #0
  419e68:	bl	423cc8 <message@@Base>
  419e6c:	ldr	x0, [x29, #80]
  419e70:	bl	406c00 <free@plt>
  419e74:	ldr	x0, [x29, #104]
  419e78:	bl	41948c <reap_children@@Base+0x180c>
  419e7c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  419e80:	add	x0, x0, #0xb20
  419e84:	ldr	w0, [x0]
  419e88:	cmp	w0, #0x1
  419e8c:	b.eq	419eb4 <new_job@@Base+0x800>  // b.none
  419e90:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  419e94:	add	x0, x0, #0xa74
  419e98:	ldr	w0, [x0]
  419e9c:	cmp	w0, #0x0
  419ea0:	b.eq	419ecc <new_job@@Base+0x818>  // b.none
  419ea4:	b	419eb4 <new_job@@Base+0x800>
  419ea8:	mov	w1, #0x0                   	// #0
  419eac:	mov	w0, #0x1                   	// #1
  419eb0:	bl	417c80 <reap_children@@Base>
  419eb4:	ldr	x0, [x29, #40]
  419eb8:	ldrb	w0, [x0, #136]
  419ebc:	and	w0, w0, #0xc
  419ec0:	and	w0, w0, #0xff
  419ec4:	cmp	w0, #0x8
  419ec8:	b.eq	419ea8 <new_job@@Base+0x7f4>  // b.none
  419ecc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419ed0:	add	x0, x0, #0xff0
  419ed4:	str	xzr, [x0]
  419ed8:	nop
  419edc:	mov	sp, x29
  419ee0:	ldr	x19, [sp, #16]
  419ee4:	ldp	x29, x30, [sp], #176
  419ee8:	ret
  419eec:	sub	sp, sp, #0x10
  419ef0:	str	x0, [sp, #8]
  419ef4:	b	419f6c <new_job@@Base+0x8b8>
  419ef8:	ldr	x0, [sp, #8]
  419efc:	ldr	w0, [x0, #72]
  419f00:	ldr	x1, [sp, #8]
  419f04:	ldr	x1, [x1, #40]
  419f08:	ldr	x1, [x1, #32]
  419f0c:	ldrh	w1, [x1, #48]
  419f10:	cmp	w0, w1
  419f14:	b.ne	419f38 <new_job@@Base+0x884>  // b.any
  419f18:	ldr	x0, [sp, #8]
  419f1c:	str	xzr, [x0, #64]
  419f20:	ldr	x0, [sp, #8]
  419f24:	ldr	x0, [x0, #40]
  419f28:	ldr	x0, [x0, #32]
  419f2c:	str	xzr, [x0, #16]
  419f30:	mov	w0, #0x0                   	// #0
  419f34:	b	419fb4 <new_job@@Base+0x900>
  419f38:	ldr	x0, [sp, #8]
  419f3c:	ldr	x1, [x0, #56]
  419f40:	ldr	x0, [sp, #8]
  419f44:	ldr	w0, [x0, #72]
  419f48:	add	w3, w0, #0x1
  419f4c:	ldr	x2, [sp, #8]
  419f50:	str	w3, [x2, #72]
  419f54:	mov	w0, w0
  419f58:	lsl	x0, x0, #3
  419f5c:	add	x0, x1, x0
  419f60:	ldr	x1, [x0]
  419f64:	ldr	x0, [sp, #8]
  419f68:	str	x1, [x0, #64]
  419f6c:	ldr	x0, [sp, #8]
  419f70:	ldr	x0, [x0, #64]
  419f74:	cmp	x0, #0x0
  419f78:	b.eq	419ef8 <new_job@@Base+0x844>  // b.none
  419f7c:	ldr	x0, [sp, #8]
  419f80:	ldr	x0, [x0, #64]
  419f84:	ldrb	w0, [x0]
  419f88:	cmp	w0, #0x0
  419f8c:	b.eq	419ef8 <new_job@@Base+0x844>  // b.none
  419f90:	ldr	x0, [sp, #8]
  419f94:	ldr	w0, [x0, #72]
  419f98:	sub	w1, w0, #0x1
  419f9c:	ldr	x0, [sp, #8]
  419fa0:	ldr	x0, [x0, #40]
  419fa4:	ldr	x0, [x0, #32]
  419fa8:	mov	w1, w1
  419fac:	str	x1, [x0, #16]
  419fb0:	mov	w0, #0x1                   	// #1
  419fb4:	add	sp, sp, #0x10
  419fb8:	ret
  419fbc:	stp	x29, x30, [sp, #-144]!
  419fc0:	mov	x29, sp
  419fc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419fc8:	add	x0, x0, #0x1e8
  419fcc:	ldr	d0, [x0]
  419fd0:	fcmpe	d0, #0.0
  419fd4:	b.pl	419fe0 <new_job@@Base+0x92c>  // b.nfrst
  419fd8:	mov	w0, #0x0                   	// #0
  419fdc:	b	41a508 <new_job@@Base+0xe54>
  419fe0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  419fe4:	add	x0, x0, #0x9c
  419fe8:	ldr	w0, [x0]
  419fec:	cmn	w0, #0x2
  419ff0:	b.ne	41a0cc <new_job@@Base+0xa18>  // b.any
  419ff4:	nop
  419ff8:	mov	w1, #0x0                   	// #0
  419ffc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a000:	add	x0, x0, #0x5c0
  41a004:	bl	406960 <open@plt>
  41a008:	mov	w1, w0
  41a00c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a010:	add	x0, x0, #0x9c
  41a014:	str	w1, [x0]
  41a018:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a01c:	add	x0, x0, #0x9c
  41a020:	ldr	w0, [x0]
  41a024:	cmn	w0, #0x1
  41a028:	b.ne	41a03c <new_job@@Base+0x988>  // b.any
  41a02c:	bl	406dd0 <__errno_location@plt>
  41a030:	ldr	w0, [x0]
  41a034:	cmp	w0, #0x4
  41a038:	b.eq	419ff8 <new_job@@Base+0x944>  // b.none
  41a03c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a040:	add	x0, x0, #0x9c
  41a044:	ldr	w0, [x0]
  41a048:	cmp	w0, #0x0
  41a04c:	b.ge	41a088 <new_job@@Base+0x9d4>  // b.tcont
  41a050:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a054:	add	x0, x0, #0x6dc
  41a058:	ldr	w0, [x0]
  41a05c:	and	w0, w0, #0x4
  41a060:	cmp	w0, #0x0
  41a064:	b.eq	41a0cc <new_job@@Base+0xa18>  // b.none
  41a068:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a06c:	add	x0, x0, #0x5d0
  41a070:	bl	406b60 <puts@plt>
  41a074:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a078:	add	x0, x0, #0x400
  41a07c:	ldr	x0, [x0]
  41a080:	bl	406c90 <fflush@plt>
  41a084:	b	41a0cc <new_job@@Base+0xa18>
  41a088:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a08c:	add	x0, x0, #0x6dc
  41a090:	ldr	w0, [x0]
  41a094:	and	w0, w0, #0x4
  41a098:	cmp	w0, #0x0
  41a09c:	b.eq	41a0bc <new_job@@Base+0xa08>  // b.none
  41a0a0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a0a4:	add	x0, x0, #0x5f8
  41a0a8:	bl	406b60 <puts@plt>
  41a0ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a0b0:	add	x0, x0, #0x400
  41a0b4:	ldr	x0, [x0]
  41a0b8:	bl	406c90 <fflush@plt>
  41a0bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a0c0:	add	x0, x0, #0x9c
  41a0c4:	ldr	w0, [x0]
  41a0c8:	bl	435f9c <fd_noinherit@@Base>
  41a0cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a0d0:	add	x0, x0, #0x9c
  41a0d4:	ldr	w0, [x0]
  41a0d8:	cmp	w0, #0x0
  41a0dc:	b.lt	41a324 <new_job@@Base+0xc70>  // b.tstop
  41a0e0:	nop
  41a0e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a0e8:	add	x0, x0, #0x9c
  41a0ec:	ldr	w0, [x0]
  41a0f0:	mov	w2, #0x0                   	// #0
  41a0f4:	mov	x1, #0x0                   	// #0
  41a0f8:	bl	406860 <lseek@plt>
  41a0fc:	str	w0, [sp, #140]
  41a100:	ldr	w0, [sp, #140]
  41a104:	cmn	w0, #0x1
  41a108:	b.ne	41a11c <new_job@@Base+0xa68>  // b.any
  41a10c:	bl	406dd0 <__errno_location@plt>
  41a110:	ldr	w0, [x0]
  41a114:	cmp	w0, #0x4
  41a118:	b.eq	41a0e4 <new_job@@Base+0xa30>  // b.none
  41a11c:	ldr	w0, [sp, #140]
  41a120:	cmp	w0, #0x0
  41a124:	b.lt	41a2b4 <new_job@@Base+0xc00>  // b.tstop
  41a128:	nop
  41a12c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a130:	add	x0, x0, #0x9c
  41a134:	ldr	w0, [x0]
  41a138:	add	x1, sp, #0x18
  41a13c:	mov	x2, #0x40                  	// #64
  41a140:	bl	406cf0 <read@plt>
  41a144:	str	w0, [sp, #140]
  41a148:	ldr	w0, [sp, #140]
  41a14c:	cmn	w0, #0x1
  41a150:	b.ne	41a164 <new_job@@Base+0xab0>  // b.any
  41a154:	bl	406dd0 <__errno_location@plt>
  41a158:	ldr	w0, [x0]
  41a15c:	cmp	w0, #0x4
  41a160:	b.eq	41a12c <new_job@@Base+0xa78>  // b.none
  41a164:	ldr	w0, [sp, #140]
  41a168:	cmp	w0, #0x0
  41a16c:	b.lt	41a2b4 <new_job@@Base+0xc00>  // b.tstop
  41a170:	ldrsw	x0, [sp, #140]
  41a174:	add	x1, sp, #0x18
  41a178:	strb	wzr, [x1, x0]
  41a17c:	add	x0, sp, #0x18
  41a180:	mov	w1, #0x20                  	// #32
  41a184:	bl	406c20 <strchr@plt>
  41a188:	str	x0, [sp, #128]
  41a18c:	ldr	x0, [sp, #128]
  41a190:	cmp	x0, #0x0
  41a194:	b.eq	41a1ac <new_job@@Base+0xaf8>  // b.none
  41a198:	ldr	x0, [sp, #128]
  41a19c:	add	x0, x0, #0x1
  41a1a0:	mov	w1, #0x20                  	// #32
  41a1a4:	bl	406c20 <strchr@plt>
  41a1a8:	str	x0, [sp, #128]
  41a1ac:	ldr	x0, [sp, #128]
  41a1b0:	cmp	x0, #0x0
  41a1b4:	b.eq	41a1cc <new_job@@Base+0xb18>  // b.none
  41a1b8:	ldr	x0, [sp, #128]
  41a1bc:	add	x0, x0, #0x1
  41a1c0:	mov	w1, #0x20                  	// #32
  41a1c4:	bl	406c20 <strchr@plt>
  41a1c8:	str	x0, [sp, #128]
  41a1cc:	ldr	x0, [sp, #128]
  41a1d0:	cmp	x0, #0x0
  41a1d4:	b.eq	41a278 <new_job@@Base+0xbc4>  // b.none
  41a1d8:	ldr	x0, [sp, #128]
  41a1dc:	add	x0, x0, #0x1
  41a1e0:	ldrb	w0, [x0]
  41a1e4:	sub	w0, w0, #0x30
  41a1e8:	cmp	w0, #0x9
  41a1ec:	b.hi	41a278 <new_job@@Base+0xbc4>  // b.pmore
  41a1f0:	ldr	x0, [sp, #128]
  41a1f4:	add	x0, x0, #0x1
  41a1f8:	bl	4068f0 <atoi@plt>
  41a1fc:	str	w0, [sp, #124]
  41a200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a204:	add	x0, x0, #0x6dc
  41a208:	ldr	w0, [x0]
  41a20c:	and	w0, w0, #0x4
  41a210:	cmp	w0, #0x0
  41a214:	b.eq	41a254 <new_job@@Base+0xba0>  // b.none
  41a218:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a21c:	add	x0, x0, #0x628
  41a220:	ldr	w1, [x0]
  41a224:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a228:	add	x0, x0, #0x1e8
  41a22c:	ldr	d0, [x0]
  41a230:	mov	w2, w1
  41a234:	ldr	w1, [sp, #124]
  41a238:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a23c:	add	x0, x0, #0x628
  41a240:	bl	406dc0 <printf@plt>
  41a244:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a248:	add	x0, x0, #0x400
  41a24c:	ldr	x0, [x0]
  41a250:	bl	406c90 <fflush@plt>
  41a254:	ldr	w0, [sp, #124]
  41a258:	scvtf	d1, w0
  41a25c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a260:	add	x0, x0, #0x1e8
  41a264:	ldr	d0, [x0]
  41a268:	fcmpe	d1, d0
  41a26c:	cset	w0, gt
  41a270:	and	w0, w0, #0xff
  41a274:	b	41a508 <new_job@@Base+0xe54>
  41a278:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a27c:	add	x0, x0, #0x6dc
  41a280:	ldr	w0, [x0]
  41a284:	and	w0, w0, #0x4
  41a288:	cmp	w0, #0x0
  41a28c:	b.eq	41a2b4 <new_job@@Base+0xc00>  // b.none
  41a290:	add	x0, sp, #0x18
  41a294:	mov	x1, x0
  41a298:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a29c:	add	x0, x0, #0x660
  41a2a0:	bl	406dc0 <printf@plt>
  41a2a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a2a8:	add	x0, x0, #0x400
  41a2ac:	ldr	x0, [x0]
  41a2b0:	bl	406c90 <fflush@plt>
  41a2b4:	ldr	w0, [sp, #140]
  41a2b8:	cmp	w0, #0x0
  41a2bc:	b.ge	41a304 <new_job@@Base+0xc50>  // b.tcont
  41a2c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a2c4:	add	x0, x0, #0x6dc
  41a2c8:	ldr	w0, [x0]
  41a2cc:	and	w0, w0, #0x4
  41a2d0:	cmp	w0, #0x0
  41a2d4:	b.eq	41a304 <new_job@@Base+0xc50>  // b.none
  41a2d8:	bl	406dd0 <__errno_location@plt>
  41a2dc:	ldr	w0, [x0]
  41a2e0:	bl	406ab0 <strerror@plt>
  41a2e4:	mov	x1, x0
  41a2e8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a2ec:	add	x0, x0, #0x688
  41a2f0:	bl	406dc0 <printf@plt>
  41a2f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a2f8:	add	x0, x0, #0x400
  41a2fc:	ldr	x0, [x0]
  41a300:	bl	406c90 <fflush@plt>
  41a304:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a308:	add	x0, x0, #0x9c
  41a30c:	ldr	w0, [x0]
  41a310:	bl	406ac0 <close@plt>
  41a314:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a318:	add	x0, x0, #0x9c
  41a31c:	mov	w1, #0xffffffff            	// #-1
  41a320:	str	w1, [x0]
  41a324:	bl	422c9c <make_access@@Base>
  41a328:	add	x0, sp, #0x60
  41a32c:	mov	w1, #0x1                   	// #1
  41a330:	bl	4067d0 <getloadavg@plt>
  41a334:	cmp	w0, #0x1
  41a338:	b.eq	41a3d4 <new_job@@Base+0xd20>  // b.none
  41a33c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a340:	add	x0, x0, #0xa0
  41a344:	ldr	w0, [x0]
  41a348:	cmn	w0, #0x1
  41a34c:	b.eq	41a36c <new_job@@Base+0xcb8>  // b.none
  41a350:	bl	406dd0 <__errno_location@plt>
  41a354:	ldr	w1, [x0]
  41a358:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a35c:	add	x0, x0, #0xa0
  41a360:	ldr	w0, [x0]
  41a364:	cmp	w1, w0
  41a368:	b.eq	41a3bc <new_job@@Base+0xd08>  // b.none
  41a36c:	bl	406dd0 <__errno_location@plt>
  41a370:	ldr	w0, [x0]
  41a374:	cmp	w0, #0x0
  41a378:	b.ne	41a39c <new_job@@Base+0xce8>  // b.any
  41a37c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a380:	add	x0, x0, #0x6b0
  41a384:	bl	406e40 <gettext@plt>
  41a388:	mov	x2, x0
  41a38c:	mov	x1, #0x0                   	// #0
  41a390:	mov	x0, #0x0                   	// #0
  41a394:	bl	423e74 <error@@Base>
  41a398:	b	41a3bc <new_job@@Base+0xd08>
  41a39c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a3a0:	add	x0, x0, #0x6e8
  41a3a4:	bl	406e40 <gettext@plt>
  41a3a8:	mov	x2, x0
  41a3ac:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a3b0:	add	x1, x0, #0x708
  41a3b4:	mov	x0, x2
  41a3b8:	bl	4242c0 <perror_with_name@@Base>
  41a3bc:	bl	406dd0 <__errno_location@plt>
  41a3c0:	ldr	w1, [x0]
  41a3c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a3c8:	add	x0, x0, #0xa0
  41a3cc:	str	w1, [x0]
  41a3d0:	str	xzr, [sp, #96]
  41a3d4:	bl	422c94 <user_access@@Base>
  41a3d8:	mov	x0, #0x0                   	// #0
  41a3dc:	bl	406920 <time@plt>
  41a3e0:	str	x0, [sp, #112]
  41a3e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a3e8:	add	x0, x0, #0x6b8
  41a3ec:	ldr	x0, [x0]
  41a3f0:	ldr	x1, [sp, #112]
  41a3f4:	cmp	x1, x0
  41a3f8:	b.le	41a468 <new_job@@Base+0xdb4>
  41a3fc:	ldr	x0, [sp, #112]
  41a400:	sub	x1, x0, #0x1
  41a404:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a408:	add	x0, x0, #0x6b8
  41a40c:	ldr	x0, [x0]
  41a410:	cmp	x1, x0
  41a414:	b.ne	41a440 <new_job@@Base+0xd8c>  // b.any
  41a418:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a41c:	add	x0, x0, #0x630
  41a420:	ldr	d0, [x0]
  41a424:	ucvtf	d1, d0
  41a428:	fmov	d0, #2.500000000000000000e-01
  41a42c:	fmul	d0, d1, d0
  41a430:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a434:	add	x0, x0, #0x6c0
  41a438:	str	d0, [x0]
  41a43c:	b	41a44c <new_job@@Base+0xd98>
  41a440:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a444:	add	x0, x0, #0x6c0
  41a448:	str	xzr, [x0]
  41a44c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a450:	add	x0, x0, #0x630
  41a454:	str	xzr, [x0]
  41a458:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a45c:	add	x0, x0, #0x6b8
  41a460:	ldr	x1, [sp, #112]
  41a464:	str	x1, [x0]
  41a468:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a46c:	add	x0, x0, #0x630
  41a470:	ldr	d0, [x0]
  41a474:	ucvtf	d1, d0
  41a478:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a47c:	add	x0, x0, #0x6c0
  41a480:	ldr	d0, [x0]
  41a484:	fadd	d1, d1, d0
  41a488:	fmov	d0, #2.500000000000000000e-01
  41a48c:	fmul	d1, d1, d0
  41a490:	ldr	d0, [sp, #96]
  41a494:	fadd	d0, d1, d0
  41a498:	str	d0, [sp, #104]
  41a49c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a4a0:	add	x0, x0, #0x6dc
  41a4a4:	ldr	w0, [x0]
  41a4a8:	and	w0, w0, #0x4
  41a4ac:	cmp	w0, #0x0
  41a4b0:	b.eq	41a4ec <new_job@@Base+0xe38>  // b.none
  41a4b4:	ldr	d0, [sp, #96]
  41a4b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a4bc:	add	x0, x0, #0x1e8
  41a4c0:	ldr	d1, [x0]
  41a4c4:	fmov	d2, d1
  41a4c8:	fmov	d1, d0
  41a4cc:	ldr	d0, [sp, #104]
  41a4d0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41a4d4:	add	x0, x0, #0x718
  41a4d8:	bl	406dc0 <printf@plt>
  41a4dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a4e0:	add	x0, x0, #0x400
  41a4e4:	ldr	x0, [x0]
  41a4e8:	bl	406c90 <fflush@plt>
  41a4ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a4f0:	add	x0, x0, #0x1e8
  41a4f4:	ldr	d0, [x0]
  41a4f8:	ldr	d1, [sp, #104]
  41a4fc:	fcmpe	d1, d0
  41a500:	cset	w0, ge  // ge = tcont
  41a504:	and	w0, w0, #0xff
  41a508:	ldp	x29, x30, [sp], #144
  41a50c:	ret

000000000041a510 <start_waiting_jobs@@Base>:
  41a510:	stp	x29, x30, [sp, #-32]!
  41a514:	mov	x29, sp
  41a518:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a51c:	add	x0, x0, #0x640
  41a520:	ldr	x0, [x0]
  41a524:	cmp	x0, #0x0
  41a528:	b.eq	41a584 <start_waiting_jobs@@Base+0x74>  // b.none
  41a52c:	mov	w1, #0x0                   	// #0
  41a530:	mov	w0, #0x0                   	// #0
  41a534:	bl	417c80 <reap_children@@Base>
  41a538:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a53c:	add	x0, x0, #0x640
  41a540:	ldr	x0, [x0]
  41a544:	str	x0, [sp, #24]
  41a548:	ldr	x0, [sp, #24]
  41a54c:	ldr	x1, [x0, #32]
  41a550:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a554:	add	x0, x0, #0x640
  41a558:	str	x1, [x0]
  41a55c:	ldr	x0, [sp, #24]
  41a560:	bl	41948c <reap_children@@Base+0x180c>
  41a564:	cmp	w0, #0x0
  41a568:	b.eq	41a58c <start_waiting_jobs@@Base+0x7c>  // b.none
  41a56c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a570:	add	x0, x0, #0x640
  41a574:	ldr	x0, [x0]
  41a578:	cmp	x0, #0x0
  41a57c:	b.ne	41a52c <start_waiting_jobs@@Base+0x1c>  // b.any
  41a580:	b	41a58c <start_waiting_jobs@@Base+0x7c>
  41a584:	nop
  41a588:	b	41a590 <start_waiting_jobs@@Base+0x80>
  41a58c:	nop
  41a590:	ldp	x29, x30, [sp], #32
  41a594:	ret

000000000041a598 <child_execute_job@@Base>:
  41a598:	sub	sp, sp, #0x2b0
  41a59c:	stp	x29, x30, [sp]
  41a5a0:	mov	x29, sp
  41a5a4:	stp	x19, x20, [sp, #16]
  41a5a8:	str	x0, [sp, #56]
  41a5ac:	str	w1, [sp, #52]
  41a5b0:	str	x2, [sp, #40]
  41a5b4:	ldr	w0, [sp, #52]
  41a5b8:	cmp	w0, #0x0
  41a5bc:	b.eq	41a5d4 <child_execute_job@@Base+0x3c>  // b.none
  41a5c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a5c4:	add	x0, x0, #0x408
  41a5c8:	ldr	x0, [x0]
  41a5cc:	bl	4068a0 <fileno@plt>
  41a5d0:	b	41a5d8 <child_execute_job@@Base+0x40>
  41a5d4:	bl	435ea0 <get_bad_stdin@@Base>
  41a5d8:	str	w0, [sp, #636]
  41a5dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a5e0:	add	x0, x0, #0x400
  41a5e4:	ldr	x0, [x0]
  41a5e8:	bl	4068a0 <fileno@plt>
  41a5ec:	str	w0, [sp, #684]
  41a5f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a5f4:	add	x0, x0, #0x3e8
  41a5f8:	ldr	x0, [x0]
  41a5fc:	bl	4068a0 <fileno@plt>
  41a600:	str	w0, [sp, #680]
  41a604:	strh	wzr, [sp, #634]
  41a608:	ldr	x0, [sp, #56]
  41a60c:	ldrb	w0, [x0, #24]
  41a610:	and	w0, w0, #0x1
  41a614:	and	w0, w0, #0xff
  41a618:	cmp	w0, #0x0
  41a61c:	b.eq	41a658 <child_execute_job@@Base+0xc0>  // b.none
  41a620:	ldr	x0, [sp, #56]
  41a624:	ldr	w0, [x0, #16]
  41a628:	cmp	w0, #0x0
  41a62c:	b.lt	41a63c <child_execute_job@@Base+0xa4>  // b.tstop
  41a630:	ldr	x0, [sp, #56]
  41a634:	ldr	w0, [x0, #16]
  41a638:	str	w0, [sp, #684]
  41a63c:	ldr	x0, [sp, #56]
  41a640:	ldr	w0, [x0, #20]
  41a644:	cmp	w0, #0x0
  41a648:	b.lt	41a658 <child_execute_job@@Base+0xc0>  // b.tstop
  41a64c:	ldr	x0, [sp, #56]
  41a650:	ldr	w0, [x0, #20]
  41a654:	str	w0, [sp, #680]
  41a658:	add	x0, sp, #0x110
  41a65c:	bl	406ce0 <posix_spawnattr_init@plt>
  41a660:	str	w0, [sp, #676]
  41a664:	ldr	w0, [sp, #676]
  41a668:	cmp	w0, #0x0
  41a66c:	b.ne	41aaa4 <child_execute_job@@Base+0x50c>  // b.any
  41a670:	add	x0, sp, #0xc0
  41a674:	bl	406b70 <posix_spawn_file_actions_init@plt>
  41a678:	str	w0, [sp, #676]
  41a67c:	ldr	w0, [sp, #676]
  41a680:	cmp	w0, #0x0
  41a684:	b.eq	41a694 <child_execute_job@@Base+0xfc>  // b.none
  41a688:	add	x0, sp, #0x110
  41a68c:	bl	406980 <posix_spawnattr_destroy@plt>
  41a690:	b	41aaa8 <child_execute_job@@Base+0x510>
  41a694:	add	x0, sp, #0x40
  41a698:	bl	406970 <sigemptyset@plt>
  41a69c:	add	x1, sp, #0x40
  41a6a0:	add	x0, sp, #0x110
  41a6a4:	bl	406b40 <posix_spawnattr_setsigmask@plt>
  41a6a8:	str	w0, [sp, #676]
  41a6ac:	ldr	w0, [sp, #676]
  41a6b0:	cmp	w0, #0x0
  41a6b4:	b.ne	41aa64 <child_execute_job@@Base+0x4cc>  // b.any
  41a6b8:	ldrh	w0, [sp, #634]
  41a6bc:	orr	w0, w0, #0x8
  41a6c0:	strh	w0, [sp, #634]
  41a6c4:	ldrh	w0, [sp, #634]
  41a6c8:	orr	w0, w0, #0x40
  41a6cc:	strh	w0, [sp, #634]
  41a6d0:	ldr	w0, [sp, #636]
  41a6d4:	cmp	w0, #0x0
  41a6d8:	b.lt	41a730 <child_execute_job@@Base+0x198>  // b.tstop
  41a6dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a6e0:	add	x0, x0, #0x408
  41a6e4:	ldr	x0, [x0]
  41a6e8:	bl	4068a0 <fileno@plt>
  41a6ec:	mov	w1, w0
  41a6f0:	ldr	w0, [sp, #636]
  41a6f4:	cmp	w0, w1
  41a6f8:	b.eq	41a730 <child_execute_job@@Base+0x198>  // b.none
  41a6fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a700:	add	x0, x0, #0x408
  41a704:	ldr	x0, [x0]
  41a708:	bl	4068a0 <fileno@plt>
  41a70c:	mov	w1, w0
  41a710:	add	x0, sp, #0xc0
  41a714:	mov	w2, w1
  41a718:	ldr	w1, [sp, #636]
  41a71c:	bl	4068c0 <posix_spawn_file_actions_adddup2@plt>
  41a720:	str	w0, [sp, #676]
  41a724:	ldr	w0, [sp, #676]
  41a728:	cmp	w0, #0x0
  41a72c:	b.ne	41aa6c <child_execute_job@@Base+0x4d4>  // b.any
  41a730:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a734:	add	x0, x0, #0x400
  41a738:	ldr	x0, [x0]
  41a73c:	bl	4068a0 <fileno@plt>
  41a740:	mov	w1, w0
  41a744:	ldr	w0, [sp, #684]
  41a748:	cmp	w0, w1
  41a74c:	b.eq	41a784 <child_execute_job@@Base+0x1ec>  // b.none
  41a750:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a754:	add	x0, x0, #0x400
  41a758:	ldr	x0, [x0]
  41a75c:	bl	4068a0 <fileno@plt>
  41a760:	mov	w1, w0
  41a764:	add	x0, sp, #0xc0
  41a768:	mov	w2, w1
  41a76c:	ldr	w1, [sp, #684]
  41a770:	bl	4068c0 <posix_spawn_file_actions_adddup2@plt>
  41a774:	str	w0, [sp, #676]
  41a778:	ldr	w0, [sp, #676]
  41a77c:	cmp	w0, #0x0
  41a780:	b.ne	41aa74 <child_execute_job@@Base+0x4dc>  // b.any
  41a784:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a788:	add	x0, x0, #0x3e8
  41a78c:	ldr	x0, [x0]
  41a790:	bl	4068a0 <fileno@plt>
  41a794:	mov	w1, w0
  41a798:	ldr	w0, [sp, #680]
  41a79c:	cmp	w0, w1
  41a7a0:	b.eq	41a7d8 <child_execute_job@@Base+0x240>  // b.none
  41a7a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a7a8:	add	x0, x0, #0x3e8
  41a7ac:	ldr	x0, [x0]
  41a7b0:	bl	4068a0 <fileno@plt>
  41a7b4:	mov	w1, w0
  41a7b8:	add	x0, sp, #0xc0
  41a7bc:	mov	w2, w1
  41a7c0:	ldr	w1, [sp, #680]
  41a7c4:	bl	4068c0 <posix_spawn_file_actions_adddup2@plt>
  41a7c8:	str	w0, [sp, #676]
  41a7cc:	ldr	w0, [sp, #676]
  41a7d0:	cmp	w0, #0x0
  41a7d4:	b.ne	41aa7c <child_execute_job@@Base+0x4e4>  // b.any
  41a7d8:	ldrh	w0, [sp, #634]
  41a7dc:	orr	w0, w0, #0x1
  41a7e0:	strh	w0, [sp, #634]
  41a7e4:	add	x0, sp, #0x110
  41a7e8:	ldrh	w1, [sp, #634]
  41a7ec:	bl	406b20 <posix_spawnattr_setflags@plt>
  41a7f0:	str	w0, [sp, #676]
  41a7f4:	ldr	w0, [sp, #676]
  41a7f8:	cmp	w0, #0x0
  41a7fc:	b.ne	41aa84 <child_execute_job@@Base+0x4ec>  // b.any
  41a800:	str	xzr, [sp, #664]
  41a804:	ldr	x0, [sp, #56]
  41a808:	ldr	x0, [x0, #8]
  41a80c:	str	x0, [sp, #656]
  41a810:	b	41a8a8 <child_execute_job@@Base+0x310>
  41a814:	ldr	x0, [sp, #656]
  41a818:	ldr	x0, [x0]
  41a81c:	ldrb	w0, [x0]
  41a820:	cmp	w0, #0x50
  41a824:	b.ne	41a89c <child_execute_job@@Base+0x304>  // b.any
  41a828:	ldr	x0, [sp, #656]
  41a82c:	ldr	x0, [x0]
  41a830:	add	x0, x0, #0x1
  41a834:	ldrb	w0, [x0]
  41a838:	cmp	w0, #0x41
  41a83c:	b.ne	41a89c <child_execute_job@@Base+0x304>  // b.any
  41a840:	ldr	x0, [sp, #656]
  41a844:	ldr	x0, [x0]
  41a848:	add	x0, x0, #0x2
  41a84c:	ldrb	w0, [x0]
  41a850:	cmp	w0, #0x54
  41a854:	b.ne	41a89c <child_execute_job@@Base+0x304>  // b.any
  41a858:	ldr	x0, [sp, #656]
  41a85c:	ldr	x0, [x0]
  41a860:	add	x0, x0, #0x3
  41a864:	ldrb	w0, [x0]
  41a868:	cmp	w0, #0x48
  41a86c:	b.ne	41a89c <child_execute_job@@Base+0x304>  // b.any
  41a870:	ldr	x0, [sp, #656]
  41a874:	ldr	x0, [x0]
  41a878:	add	x0, x0, #0x4
  41a87c:	ldrb	w0, [x0]
  41a880:	cmp	w0, #0x3d
  41a884:	b.ne	41a89c <child_execute_job@@Base+0x304>  // b.any
  41a888:	ldr	x0, [sp, #656]
  41a88c:	ldr	x0, [x0]
  41a890:	add	x0, x0, #0x5
  41a894:	str	x0, [sp, #664]
  41a898:	b	41a8b8 <child_execute_job@@Base+0x320>
  41a89c:	ldr	x0, [sp, #656]
  41a8a0:	add	x0, x0, #0x8
  41a8a4:	str	x0, [sp, #656]
  41a8a8:	ldr	x0, [sp, #656]
  41a8ac:	ldr	x0, [x0]
  41a8b0:	cmp	x0, #0x0
  41a8b4:	b.ne	41a814 <child_execute_job@@Base+0x27c>  // b.any
  41a8b8:	ldr	x0, [sp, #40]
  41a8bc:	ldr	x0, [x0]
  41a8c0:	mov	w2, #0x0                   	// #0
  41a8c4:	ldr	x1, [sp, #664]
  41a8c8:	bl	4360d8 <find_in_given_path@@Base>
  41a8cc:	str	x0, [sp, #624]
  41a8d0:	ldr	x0, [sp, #624]
  41a8d4:	cmp	x0, #0x0
  41a8d8:	b.ne	41a8ec <child_execute_job@@Base+0x354>  // b.any
  41a8dc:	bl	406dd0 <__errno_location@plt>
  41a8e0:	ldr	w0, [x0]
  41a8e4:	str	w0, [sp, #676]
  41a8e8:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41a8ec:	nop
  41a8f0:	ldr	x0, [sp, #56]
  41a8f4:	ldr	x3, [x0, #8]
  41a8f8:	add	x2, sp, #0x110
  41a8fc:	add	x1, sp, #0xc0
  41a900:	add	x0, sp, #0x264
  41a904:	mov	x5, x3
  41a908:	ldr	x4, [sp, #40]
  41a90c:	mov	x3, x2
  41a910:	mov	x2, x1
  41a914:	ldr	x1, [sp, #624]
  41a918:	bl	406cb0 <posix_spawn@plt>
  41a91c:	str	w0, [sp, #676]
  41a920:	ldr	w0, [sp, #676]
  41a924:	cmp	w0, #0x4
  41a928:	b.eq	41a8f0 <child_execute_job@@Base+0x358>  // b.none
  41a92c:	ldr	w0, [sp, #676]
  41a930:	cmp	w0, #0x8
  41a934:	b.ne	41aa10 <child_execute_job@@Base+0x478>  // b.any
  41a938:	str	xzr, [sp, #640]
  41a93c:	ldr	x0, [sp, #40]
  41a940:	str	x0, [sp, #648]
  41a944:	b	41a960 <child_execute_job@@Base+0x3c8>
  41a948:	ldr	x0, [sp, #640]
  41a94c:	add	x0, x0, #0x1
  41a950:	str	x0, [sp, #640]
  41a954:	ldr	x0, [sp, #648]
  41a958:	add	x0, x0, #0x8
  41a95c:	str	x0, [sp, #648]
  41a960:	ldr	x0, [sp, #648]
  41a964:	ldr	x0, [x0]
  41a968:	cmp	x0, #0x0
  41a96c:	b.ne	41a948 <child_execute_job@@Base+0x3b0>  // b.any
  41a970:	ldr	x0, [sp, #640]
  41a974:	add	x0, x0, #0x3
  41a978:	lsl	x0, x0, #3
  41a97c:	bl	42268c <xmalloc@@Base>
  41a980:	str	x0, [sp, #616]
  41a984:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41a988:	add	x0, x0, #0x48
  41a98c:	ldr	x1, [x0]
  41a990:	ldr	x0, [sp, #616]
  41a994:	str	x1, [x0]
  41a998:	ldr	x0, [sp, #616]
  41a99c:	add	x0, x0, #0x8
  41a9a0:	ldr	x1, [sp, #624]
  41a9a4:	str	x1, [x0]
  41a9a8:	ldr	x0, [sp, #616]
  41a9ac:	add	x3, x0, #0x10
  41a9b0:	ldr	x0, [sp, #40]
  41a9b4:	add	x1, x0, #0x8
  41a9b8:	ldr	x0, [sp, #640]
  41a9bc:	lsl	x0, x0, #3
  41a9c0:	mov	x2, x0
  41a9c4:	mov	x0, x3
  41a9c8:	bl	4066b0 <memcpy@plt>
  41a9cc:	nop
  41a9d0:	ldr	x0, [sp, #616]
  41a9d4:	ldr	x1, [x0]
  41a9d8:	ldr	x0, [sp, #56]
  41a9dc:	ldr	x4, [x0, #8]
  41a9e0:	add	x3, sp, #0x110
  41a9e4:	add	x2, sp, #0xc0
  41a9e8:	add	x0, sp, #0x264
  41a9ec:	mov	x5, x4
  41a9f0:	ldr	x4, [sp, #616]
  41a9f4:	bl	406cb0 <posix_spawn@plt>
  41a9f8:	str	w0, [sp, #676]
  41a9fc:	ldr	w0, [sp, #676]
  41aa00:	cmp	w0, #0x4
  41aa04:	b.eq	41a9d0 <child_execute_job@@Base+0x438>  // b.none
  41aa08:	ldr	x0, [sp, #616]
  41aa0c:	bl	406c00 <free@plt>
  41aa10:	ldr	w0, [sp, #676]
  41aa14:	cmp	w0, #0x0
  41aa18:	b.ne	41aa8c <child_execute_job@@Base+0x4f4>  // b.any
  41aa1c:	ldr	x0, [sp, #56]
  41aa20:	ldr	x0, [x0]
  41aa24:	bl	406c00 <free@plt>
  41aa28:	ldr	x0, [sp, #40]
  41aa2c:	ldr	x0, [x0]
  41aa30:	ldr	x1, [sp, #624]
  41aa34:	cmp	x1, x0
  41aa38:	b.eq	41aa4c <child_execute_job@@Base+0x4b4>  // b.none
  41aa3c:	ldr	x0, [sp, #56]
  41aa40:	ldr	x1, [sp, #624]
  41aa44:	str	x1, [x0]
  41aa48:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa4c:	ldr	x0, [sp, #624]
  41aa50:	bl	422788 <xstrdup@@Base>
  41aa54:	mov	x1, x0
  41aa58:	ldr	x0, [sp, #56]
  41aa5c:	str	x1, [x0]
  41aa60:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa64:	nop
  41aa68:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa6c:	nop
  41aa70:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa74:	nop
  41aa78:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa7c:	nop
  41aa80:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa84:	nop
  41aa88:	b	41aa90 <child_execute_job@@Base+0x4f8>
  41aa8c:	nop
  41aa90:	add	x0, sp, #0xc0
  41aa94:	bl	406a50 <posix_spawn_file_actions_destroy@plt>
  41aa98:	add	x0, sp, #0x110
  41aa9c:	bl	406980 <posix_spawnattr_destroy@plt>
  41aaa0:	b	41aaa8 <child_execute_job@@Base+0x510>
  41aaa4:	nop
  41aaa8:	ldr	w0, [sp, #676]
  41aaac:	cmp	w0, #0x0
  41aab0:	b.eq	41aabc <child_execute_job@@Base+0x524>  // b.none
  41aab4:	mov	w0, #0xffffffff            	// #-1
  41aab8:	str	w0, [sp, #612]
  41aabc:	ldr	w0, [sp, #612]
  41aac0:	cmp	w0, #0x0
  41aac4:	b.ge	41ab14 <child_execute_job@@Base+0x57c>  // b.tcont
  41aac8:	ldr	x0, [sp, #40]
  41aacc:	ldr	x0, [x0]
  41aad0:	bl	4066f0 <strlen@plt>
  41aad4:	mov	x19, x0
  41aad8:	ldr	w0, [sp, #676]
  41aadc:	bl	406ab0 <strerror@plt>
  41aae0:	bl	4066f0 <strlen@plt>
  41aae4:	add	x19, x19, x0
  41aae8:	ldr	x0, [sp, #40]
  41aaec:	ldr	x20, [x0]
  41aaf0:	ldr	w0, [sp, #676]
  41aaf4:	bl	406ab0 <strerror@plt>
  41aaf8:	mov	x4, x0
  41aafc:	mov	x3, x20
  41ab00:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41ab04:	add	x2, x0, #0x3b0
  41ab08:	mov	x1, x19
  41ab0c:	mov	x0, #0x0                   	// #0
  41ab10:	bl	423e74 <error@@Base>
  41ab14:	ldr	w0, [sp, #612]
  41ab18:	ldp	x19, x20, [sp, #16]
  41ab1c:	ldp	x29, x30, [sp]
  41ab20:	add	sp, sp, #0x2b0
  41ab24:	ret

000000000041ab28 <exec_command@@Base>:
  41ab28:	stp	x29, x30, [sp, #-80]!
  41ab2c:	mov	x29, sp
  41ab30:	stp	x19, x20, [sp, #16]
  41ab34:	str	x0, [x29, #40]
  41ab38:	str	x1, [x29, #32]
  41ab3c:	bl	422ca4 <child_access@@Base>
  41ab40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ab44:	add	x0, x0, #0x410
  41ab48:	ldr	x1, [x29, #32]
  41ab4c:	str	x1, [x0]
  41ab50:	ldr	x0, [x29, #40]
  41ab54:	ldr	x0, [x0]
  41ab58:	ldr	x1, [x29, #40]
  41ab5c:	bl	406bb0 <execvp@plt>
  41ab60:	bl	406dd0 <__errno_location@plt>
  41ab64:	ldr	w0, [x0]
  41ab68:	cmp	w0, #0x2
  41ab6c:	b.eq	41ab7c <exec_command@@Base+0x54>  // b.none
  41ab70:	cmp	w0, #0x8
  41ab74:	b.eq	41abd4 <exec_command@@Base+0xac>  // b.none
  41ab78:	b	41ad4c <exec_command@@Base+0x224>
  41ab7c:	ldr	x0, [x29, #40]
  41ab80:	ldr	x0, [x0]
  41ab84:	bl	4066f0 <strlen@plt>
  41ab88:	mov	x19, x0
  41ab8c:	bl	406dd0 <__errno_location@plt>
  41ab90:	ldr	w0, [x0]
  41ab94:	bl	406ab0 <strerror@plt>
  41ab98:	bl	4066f0 <strlen@plt>
  41ab9c:	add	x19, x19, x0
  41aba0:	ldr	x0, [x29, #40]
  41aba4:	ldr	x20, [x0]
  41aba8:	bl	406dd0 <__errno_location@plt>
  41abac:	ldr	w0, [x0]
  41abb0:	bl	406ab0 <strerror@plt>
  41abb4:	mov	x4, x0
  41abb8:	mov	x3, x20
  41abbc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41abc0:	add	x2, x0, #0x3b0
  41abc4:	mov	x1, x19
  41abc8:	mov	x0, #0x0                   	// #0
  41abcc:	bl	423e74 <error@@Base>
  41abd0:	b	41ada4 <exec_command@@Base+0x27c>
  41abd4:	mov	w0, #0x1                   	// #1
  41abd8:	str	w0, [x29, #64]
  41abdc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41abe0:	add	x0, x0, #0x758
  41abe4:	bl	406df0 <getenv@plt>
  41abe8:	str	x0, [x29, #72]
  41abec:	ldr	x0, [x29, #72]
  41abf0:	cmp	x0, #0x0
  41abf4:	b.ne	41ac08 <exec_command@@Base+0xe0>  // b.any
  41abf8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41abfc:	add	x0, x0, #0x48
  41ac00:	ldr	x0, [x0]
  41ac04:	str	x0, [x29, #72]
  41ac08:	mov	w0, #0x1                   	// #1
  41ac0c:	str	w0, [x29, #68]
  41ac10:	b	41ac20 <exec_command@@Base+0xf8>
  41ac14:	ldr	w0, [x29, #68]
  41ac18:	add	w0, w0, #0x1
  41ac1c:	str	w0, [x29, #68]
  41ac20:	ldrsw	x0, [x29, #68]
  41ac24:	lsl	x0, x0, #3
  41ac28:	ldr	x1, [x29, #40]
  41ac2c:	add	x0, x1, x0
  41ac30:	ldr	x0, [x0]
  41ac34:	cmp	x0, #0x0
  41ac38:	b.ne	41ac14 <exec_command@@Base+0xec>  // b.any
  41ac3c:	ldr	w0, [x29, #68]
  41ac40:	add	w0, w0, #0x2
  41ac44:	sxtw	x0, w0
  41ac48:	lsl	x0, x0, #3
  41ac4c:	add	x0, x0, #0xf
  41ac50:	lsr	x0, x0, #4
  41ac54:	lsl	x0, x0, #4
  41ac58:	sub	sp, sp, x0
  41ac5c:	mov	x0, sp
  41ac60:	add	x0, x0, #0xf
  41ac64:	lsr	x0, x0, #4
  41ac68:	lsl	x0, x0, #4
  41ac6c:	str	x0, [x29, #56]
  41ac70:	ldr	x0, [x29, #56]
  41ac74:	ldr	x1, [x29, #72]
  41ac78:	str	x1, [x0]
  41ac7c:	ldrsw	x0, [x29, #64]
  41ac80:	lsl	x0, x0, #3
  41ac84:	ldr	x1, [x29, #56]
  41ac88:	add	x0, x1, x0
  41ac8c:	ldr	x1, [x29, #40]
  41ac90:	ldr	x1, [x1]
  41ac94:	str	x1, [x0]
  41ac98:	b	41acdc <exec_command@@Base+0x1b4>
  41ac9c:	ldrsw	x0, [x29, #68]
  41aca0:	lsl	x0, x0, #3
  41aca4:	ldr	x1, [x29, #40]
  41aca8:	add	x1, x1, x0
  41acac:	ldr	w2, [x29, #64]
  41acb0:	ldr	w0, [x29, #68]
  41acb4:	add	w0, w2, w0
  41acb8:	sxtw	x0, w0
  41acbc:	lsl	x0, x0, #3
  41acc0:	ldr	x2, [x29, #56]
  41acc4:	add	x0, x2, x0
  41acc8:	ldr	x1, [x1]
  41accc:	str	x1, [x0]
  41acd0:	ldr	w0, [x29, #68]
  41acd4:	sub	w0, w0, #0x1
  41acd8:	str	w0, [x29, #68]
  41acdc:	ldr	w0, [x29, #68]
  41ace0:	cmp	w0, #0x0
  41ace4:	b.gt	41ac9c <exec_command@@Base+0x174>
  41ace8:	ldr	x1, [x29, #56]
  41acec:	ldr	x0, [x29, #72]
  41acf0:	bl	406bb0 <execvp@plt>
  41acf4:	ldr	x0, [x29, #56]
  41acf8:	ldr	x0, [x0]
  41acfc:	bl	4066f0 <strlen@plt>
  41ad00:	mov	x19, x0
  41ad04:	bl	406dd0 <__errno_location@plt>
  41ad08:	ldr	w0, [x0]
  41ad0c:	bl	406ab0 <strerror@plt>
  41ad10:	bl	4066f0 <strlen@plt>
  41ad14:	add	x19, x19, x0
  41ad18:	ldr	x0, [x29, #56]
  41ad1c:	ldr	x20, [x0]
  41ad20:	bl	406dd0 <__errno_location@plt>
  41ad24:	ldr	w0, [x0]
  41ad28:	bl	406ab0 <strerror@plt>
  41ad2c:	mov	x4, x0
  41ad30:	mov	x3, x20
  41ad34:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41ad38:	add	x2, x0, #0x3b0
  41ad3c:	mov	x1, x19
  41ad40:	mov	x0, #0x0                   	// #0
  41ad44:	bl	423e74 <error@@Base>
  41ad48:	b	41ada4 <exec_command@@Base+0x27c>
  41ad4c:	ldr	x0, [x29, #40]
  41ad50:	ldr	x0, [x0]
  41ad54:	bl	4066f0 <strlen@plt>
  41ad58:	mov	x19, x0
  41ad5c:	bl	406dd0 <__errno_location@plt>
  41ad60:	ldr	w0, [x0]
  41ad64:	bl	406ab0 <strerror@plt>
  41ad68:	bl	4066f0 <strlen@plt>
  41ad6c:	add	x19, x19, x0
  41ad70:	ldr	x0, [x29, #40]
  41ad74:	ldr	x20, [x0]
  41ad78:	bl	406dd0 <__errno_location@plt>
  41ad7c:	ldr	w0, [x0]
  41ad80:	bl	406ab0 <strerror@plt>
  41ad84:	mov	x4, x0
  41ad88:	mov	x3, x20
  41ad8c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41ad90:	add	x2, x0, #0x3b0
  41ad94:	mov	x1, x19
  41ad98:	mov	x0, #0x0                   	// #0
  41ad9c:	bl	423e74 <error@@Base>
  41ada0:	nop
  41ada4:	mov	w0, #0x7f                  	// #127
  41ada8:	bl	4066d0 <_exit@plt>
  41adac:	stp	x29, x30, [sp, #-256]!
  41adb0:	mov	x29, sp
  41adb4:	str	x19, [sp, #16]
  41adb8:	str	x0, [sp, #88]
  41adbc:	str	x1, [sp, #80]
  41adc0:	str	x2, [sp, #72]
  41adc4:	str	x3, [sp, #64]
  41adc8:	str	x4, [sp, #56]
  41adcc:	str	w5, [sp, #52]
  41add0:	str	x6, [sp, #40]
  41add4:	str	xzr, [sp, #192]
  41add8:	str	xzr, [sp, #184]
  41addc:	ldr	x0, [sp, #80]
  41ade0:	cmp	x0, #0x0
  41ade4:	b.eq	41ae00 <exec_command@@Base+0x2d8>  // b.none
  41ade8:	ldr	x0, [sp, #80]
  41adec:	str	xzr, [x0]
  41adf0:	b	41ae00 <exec_command@@Base+0x2d8>
  41adf4:	ldr	x0, [sp, #88]
  41adf8:	add	x0, x0, #0x1
  41adfc:	str	x0, [sp, #88]
  41ae00:	ldr	x0, [sp, #88]
  41ae04:	ldrb	w0, [x0]
  41ae08:	mov	w1, w0
  41ae0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ae10:	add	x0, x0, #0x728
  41ae14:	sxtw	x1, w1
  41ae18:	ldrh	w0, [x0, x1, lsl #1]
  41ae1c:	and	w0, w0, #0x2
  41ae20:	cmp	w0, #0x0
  41ae24:	b.ne	41adf4 <exec_command@@Base+0x2cc>  // b.any
  41ae28:	ldr	x0, [sp, #88]
  41ae2c:	ldrb	w0, [x0]
  41ae30:	cmp	w0, #0x0
  41ae34:	b.ne	41ae40 <exec_command@@Base+0x318>  // b.any
  41ae38:	mov	x0, #0x0                   	// #0
  41ae3c:	b	41bcf4 <exec_command@@Base+0x11cc>
  41ae40:	ldr	x0, [sp, #64]
  41ae44:	cmp	x0, #0x0
  41ae48:	b.ne	41ae78 <exec_command@@Base+0x350>  // b.any
  41ae4c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41ae50:	add	x0, x0, #0xa58
  41ae54:	ldr	w0, [x0]
  41ae58:	cmp	w0, #0x0
  41ae5c:	b.eq	41ae6c <exec_command@@Base+0x344>  // b.none
  41ae60:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41ae64:	add	x0, x0, #0x760
  41ae68:	b	41ae74 <exec_command@@Base+0x34c>
  41ae6c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41ae70:	add	x0, x0, #0x768
  41ae74:	str	x0, [sp, #64]
  41ae78:	ldr	x0, [sp, #72]
  41ae7c:	cmp	x0, #0x0
  41ae80:	b.ne	41ae98 <exec_command@@Base+0x370>  // b.any
  41ae84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ae88:	add	x0, x0, #0x48
  41ae8c:	ldr	x0, [x0]
  41ae90:	str	x0, [sp, #72]
  41ae94:	b	41aeb8 <exec_command@@Base+0x390>
  41ae98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ae9c:	add	x0, x0, #0x48
  41aea0:	ldr	x0, [x0]
  41aea4:	mov	x1, x0
  41aea8:	ldr	x0, [sp, #72]
  41aeac:	bl	406bc0 <strcmp@plt>
  41aeb0:	cmp	w0, #0x0
  41aeb4:	b.ne	41b688 <exec_command@@Base+0xb60>  // b.any
  41aeb8:	ldr	x0, [sp, #56]
  41aebc:	cmp	x0, #0x0
  41aec0:	b.eq	41af1c <exec_command@@Base+0x3f4>  // b.none
  41aec4:	ldr	x0, [sp, #56]
  41aec8:	str	x0, [sp, #224]
  41aecc:	b	41af0c <exec_command@@Base+0x3e4>
  41aed0:	ldr	x0, [sp, #224]
  41aed4:	ldrb	w0, [x0]
  41aed8:	cmp	w0, #0x20
  41aedc:	b.eq	41af00 <exec_command@@Base+0x3d8>  // b.none
  41aee0:	ldr	x0, [sp, #224]
  41aee4:	ldrb	w0, [x0]
  41aee8:	cmp	w0, #0x9
  41aeec:	b.eq	41af00 <exec_command@@Base+0x3d8>  // b.none
  41aef0:	ldr	x0, [sp, #224]
  41aef4:	ldrb	w0, [x0]
  41aef8:	cmp	w0, #0xa
  41aefc:	b.ne	41b690 <exec_command@@Base+0xb68>  // b.any
  41af00:	ldr	x0, [sp, #224]
  41af04:	add	x0, x0, #0x1
  41af08:	str	x0, [sp, #224]
  41af0c:	ldr	x0, [sp, #224]
  41af10:	ldrb	w0, [x0]
  41af14:	cmp	w0, #0x0
  41af18:	b.ne	41aed0 <exec_command@@Base+0x3a8>  // b.any
  41af1c:	ldr	x0, [sp, #64]
  41af20:	cmp	x0, #0x0
  41af24:	b.eq	41af9c <exec_command@@Base+0x474>  // b.none
  41af28:	ldr	x0, [sp, #64]
  41af2c:	ldrb	w0, [x0]
  41af30:	cmp	w0, #0x2d
  41af34:	b.ne	41b698 <exec_command@@Base+0xb70>  // b.any
  41af38:	ldr	x0, [sp, #64]
  41af3c:	add	x0, x0, #0x1
  41af40:	ldrb	w0, [x0]
  41af44:	cmp	w0, #0x63
  41af48:	b.ne	41af60 <exec_command@@Base+0x438>  // b.any
  41af4c:	ldr	x0, [sp, #64]
  41af50:	add	x0, x0, #0x2
  41af54:	ldrb	w0, [x0]
  41af58:	cmp	w0, #0x0
  41af5c:	b.eq	41af9c <exec_command@@Base+0x474>  // b.none
  41af60:	ldr	x0, [sp, #64]
  41af64:	add	x0, x0, #0x1
  41af68:	ldrb	w0, [x0]
  41af6c:	cmp	w0, #0x65
  41af70:	b.ne	41b698 <exec_command@@Base+0xb70>  // b.any
  41af74:	ldr	x0, [sp, #64]
  41af78:	add	x0, x0, #0x2
  41af7c:	ldrb	w0, [x0]
  41af80:	cmp	w0, #0x63
  41af84:	b.ne	41b698 <exec_command@@Base+0xb70>  // b.any
  41af88:	ldr	x0, [sp, #64]
  41af8c:	add	x0, x0, #0x3
  41af90:	ldrb	w0, [x0]
  41af94:	cmp	w0, #0x0
  41af98:	b.ne	41b698 <exec_command@@Base+0xb70>  // b.any
  41af9c:	ldr	x0, [sp, #88]
  41afa0:	bl	4066f0 <strlen@plt>
  41afa4:	add	x0, x0, #0x1
  41afa8:	str	x0, [sp, #248]
  41afac:	ldr	x0, [sp, #248]
  41afb0:	lsl	x0, x0, #3
  41afb4:	bl	42268c <xmalloc@@Base>
  41afb8:	str	x0, [sp, #192]
  41afbc:	ldr	x0, [sp, #248]
  41afc0:	bl	42268c <xmalloc@@Base>
  41afc4:	str	x0, [sp, #184]
  41afc8:	ldr	x0, [sp, #192]
  41afcc:	ldr	x1, [sp, #184]
  41afd0:	str	x1, [x0]
  41afd4:	ldr	x0, [sp, #192]
  41afd8:	ldr	x0, [x0]
  41afdc:	str	x0, [sp, #232]
  41afe0:	str	xzr, [sp, #248]
  41afe4:	str	wzr, [sp, #200]
  41afe8:	ldr	w0, [sp, #200]
  41afec:	str	w0, [sp, #204]
  41aff0:	ldr	w0, [sp, #204]
  41aff4:	str	w0, [sp, #208]
  41aff8:	ldr	w0, [sp, #208]
  41affc:	str	w0, [sp, #212]
  41b000:	ldr	x0, [sp, #88]
  41b004:	str	x0, [sp, #240]
  41b008:	b	41b514 <exec_command@@Base+0x9ec>
  41b00c:	ldr	w0, [sp, #212]
  41b010:	cmp	w0, #0x0
  41b014:	b.eq	41b16c <exec_command@@Base+0x644>  // b.none
  41b018:	ldr	x0, [sp, #240]
  41b01c:	ldrb	w0, [x0]
  41b020:	mov	w1, w0
  41b024:	ldr	w0, [sp, #212]
  41b028:	cmp	w0, w1
  41b02c:	b.ne	41b068 <exec_command@@Base+0x540>  // b.any
  41b030:	str	wzr, [sp, #212]
  41b034:	ldr	x0, [sp, #192]
  41b038:	ldr	x0, [x0]
  41b03c:	ldr	x1, [sp, #232]
  41b040:	cmp	x1, x0
  41b044:	b.eq	41b05c <exec_command@@Base+0x534>  // b.none
  41b048:	ldr	x0, [sp, #232]
  41b04c:	sub	x0, x0, #0x1
  41b050:	ldrb	w0, [x0]
  41b054:	cmp	w0, #0x0
  41b058:	b.ne	41b508 <exec_command@@Base+0x9e0>  // b.any
  41b05c:	mov	w0, #0x1                   	// #1
  41b060:	str	w0, [sp, #200]
  41b064:	b	41b508 <exec_command@@Base+0x9e0>
  41b068:	ldr	x0, [sp, #240]
  41b06c:	ldrb	w0, [x0]
  41b070:	cmp	w0, #0x5c
  41b074:	b.ne	41b0e4 <exec_command@@Base+0x5bc>  // b.any
  41b078:	ldr	x0, [sp, #240]
  41b07c:	add	x0, x0, #0x1
  41b080:	ldrb	w0, [x0]
  41b084:	cmp	w0, #0xa
  41b088:	b.ne	41b0e4 <exec_command@@Base+0x5bc>  // b.any
  41b08c:	ldr	w0, [sp, #212]
  41b090:	cmp	w0, #0x22
  41b094:	b.ne	41b0a8 <exec_command@@Base+0x580>  // b.any
  41b098:	ldr	x0, [sp, #240]
  41b09c:	add	x0, x0, #0x1
  41b0a0:	str	x0, [sp, #240]
  41b0a4:	b	41b508 <exec_command@@Base+0x9e0>
  41b0a8:	ldr	x1, [sp, #240]
  41b0ac:	add	x0, x1, #0x1
  41b0b0:	str	x0, [sp, #240]
  41b0b4:	ldr	x0, [sp, #232]
  41b0b8:	add	x2, x0, #0x1
  41b0bc:	str	x2, [sp, #232]
  41b0c0:	ldrb	w1, [x1]
  41b0c4:	strb	w1, [x0]
  41b0c8:	ldr	x0, [sp, #232]
  41b0cc:	add	x1, x0, #0x1
  41b0d0:	str	x1, [sp, #232]
  41b0d4:	ldr	x1, [sp, #240]
  41b0d8:	ldrb	w1, [x1]
  41b0dc:	strb	w1, [x0]
  41b0e0:	b	41b508 <exec_command@@Base+0x9e0>
  41b0e4:	ldr	x0, [sp, #240]
  41b0e8:	ldrb	w0, [x0]
  41b0ec:	cmp	w0, #0xa
  41b0f0:	b.ne	41b110 <exec_command@@Base+0x5e8>  // b.any
  41b0f4:	ldr	x0, [sp, #80]
  41b0f8:	cmp	x0, #0x0
  41b0fc:	b.eq	41b110 <exec_command@@Base+0x5e8>  // b.none
  41b100:	ldr	x0, [sp, #80]
  41b104:	ldr	x1, [sp, #240]
  41b108:	str	x1, [x0]
  41b10c:	b	41b528 <exec_command@@Base+0xa00>
  41b110:	ldr	w0, [sp, #212]
  41b114:	cmp	w0, #0x22
  41b118:	b.ne	41b150 <exec_command@@Base+0x628>  // b.any
  41b11c:	ldr	x0, [sp, #240]
  41b120:	ldrb	w0, [x0]
  41b124:	mov	w1, w0
  41b128:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41b12c:	add	x0, x0, #0x770
  41b130:	bl	406c20 <strchr@plt>
  41b134:	cmp	x0, #0x0
  41b138:	b.eq	41b150 <exec_command@@Base+0x628>  // b.none
  41b13c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b140:	add	x0, x0, #0x50
  41b144:	ldr	w0, [x0]
  41b148:	cmp	w0, #0x0
  41b14c:	b.ne	41b6a0 <exec_command@@Base+0xb78>  // b.any
  41b150:	ldr	x0, [sp, #232]
  41b154:	add	x1, x0, #0x1
  41b158:	str	x1, [sp, #232]
  41b15c:	ldr	x1, [sp, #240]
  41b160:	ldrb	w1, [x1]
  41b164:	strb	w1, [x0]
  41b168:	b	41b508 <exec_command@@Base+0x9e0>
  41b16c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b170:	add	x0, x0, #0xa8
  41b174:	ldr	x2, [x0]
  41b178:	ldr	x0, [sp, #240]
  41b17c:	ldrb	w0, [x0]
  41b180:	mov	w1, w0
  41b184:	mov	x0, x2
  41b188:	bl	406c20 <strchr@plt>
  41b18c:	cmp	x0, #0x0
  41b190:	b.ne	41b6a8 <exec_command@@Base+0xb80>  // b.any
  41b194:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41b198:	add	x0, x0, #0xa8c
  41b19c:	ldr	w0, [x0]
  41b1a0:	cmp	w0, #0x0
  41b1a4:	b.eq	41b1b8 <exec_command@@Base+0x690>  // b.none
  41b1a8:	ldr	x0, [sp, #240]
  41b1ac:	ldrb	w0, [x0]
  41b1b0:	cmp	w0, #0xa
  41b1b4:	b.eq	41b6b0 <exec_command@@Base+0xb88>  // b.none
  41b1b8:	ldr	x0, [sp, #240]
  41b1bc:	ldrb	w0, [x0]
  41b1c0:	cmp	w0, #0x5c
  41b1c4:	b.eq	41b264 <exec_command@@Base+0x73c>  // b.none
  41b1c8:	cmp	w0, #0x5c
  41b1cc:	b.gt	41b4e8 <exec_command@@Base+0x9c0>
  41b1d0:	cmp	w0, #0x3d
  41b1d4:	b.eq	41b224 <exec_command@@Base+0x6fc>  // b.none
  41b1d8:	cmp	w0, #0x3d
  41b1dc:	b.gt	41b4e8 <exec_command@@Base+0x9c0>
  41b1e0:	cmp	w0, #0x27
  41b1e4:	b.eq	41b320 <exec_command@@Base+0x7f8>  // b.none
  41b1e8:	cmp	w0, #0x27
  41b1ec:	b.gt	41b4e8 <exec_command@@Base+0x9c0>
  41b1f0:	cmp	w0, #0x22
  41b1f4:	b.eq	41b320 <exec_command@@Base+0x7f8>  // b.none
  41b1f8:	cmp	w0, #0x22
  41b1fc:	b.gt	41b4e8 <exec_command@@Base+0x9c0>
  41b200:	cmp	w0, #0x20
  41b204:	b.eq	41b364 <exec_command@@Base+0x83c>  // b.none
  41b208:	cmp	w0, #0x20
  41b20c:	b.gt	41b4e8 <exec_command@@Base+0x9c0>
  41b210:	cmp	w0, #0x9
  41b214:	b.eq	41b364 <exec_command@@Base+0x83c>  // b.none
  41b218:	cmp	w0, #0xa
  41b21c:	b.eq	41b330 <exec_command@@Base+0x808>  // b.none
  41b220:	b	41b4e8 <exec_command@@Base+0x9c0>
  41b224:	ldr	w0, [sp, #204]
  41b228:	cmp	w0, #0x0
  41b22c:	b.ne	41b244 <exec_command@@Base+0x71c>  // b.any
  41b230:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b234:	add	x0, x0, #0x50
  41b238:	ldr	w0, [x0]
  41b23c:	cmp	w0, #0x0
  41b240:	b.ne	41b6b8 <exec_command@@Base+0xb90>  // b.any
  41b244:	mov	w0, #0x1                   	// #1
  41b248:	str	w0, [sp, #208]
  41b24c:	ldr	x0, [sp, #232]
  41b250:	add	x1, x0, #0x1
  41b254:	str	x1, [sp, #232]
  41b258:	mov	w1, #0x3d                  	// #61
  41b25c:	strb	w1, [x0]
  41b260:	b	41b508 <exec_command@@Base+0x9e0>
  41b264:	ldr	x0, [sp, #240]
  41b268:	add	x0, x0, #0x1
  41b26c:	ldrb	w0, [x0]
  41b270:	cmp	w0, #0xa
  41b274:	b.ne	41b2e4 <exec_command@@Base+0x7bc>  // b.any
  41b278:	ldr	x0, [sp, #240]
  41b27c:	add	x0, x0, #0x1
  41b280:	str	x0, [sp, #240]
  41b284:	ldr	x0, [sp, #248]
  41b288:	lsl	x0, x0, #3
  41b28c:	ldr	x1, [sp, #192]
  41b290:	add	x0, x1, x0
  41b294:	ldr	x0, [x0]
  41b298:	ldr	x1, [sp, #232]
  41b29c:	cmp	x1, x0
  41b2a0:	b.ne	41b504 <exec_command@@Base+0x9dc>  // b.any
  41b2a4:	b	41b2b4 <exec_command@@Base+0x78c>
  41b2a8:	ldr	x0, [sp, #240]
  41b2ac:	add	x0, x0, #0x1
  41b2b0:	str	x0, [sp, #240]
  41b2b4:	ldr	x0, [sp, #240]
  41b2b8:	add	x0, x0, #0x1
  41b2bc:	ldrb	w0, [x0]
  41b2c0:	mov	w1, w0
  41b2c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b2c8:	add	x0, x0, #0x728
  41b2cc:	sxtw	x1, w1
  41b2d0:	ldrh	w0, [x0, x1, lsl #1]
  41b2d4:	and	w0, w0, #0x2
  41b2d8:	cmp	w0, #0x0
  41b2dc:	b.ne	41b2a8 <exec_command@@Base+0x780>  // b.any
  41b2e0:	b	41b504 <exec_command@@Base+0x9dc>
  41b2e4:	ldr	x0, [sp, #240]
  41b2e8:	add	x0, x0, #0x1
  41b2ec:	ldrb	w0, [x0]
  41b2f0:	cmp	w0, #0x0
  41b2f4:	b.eq	41b504 <exec_command@@Base+0x9dc>  // b.none
  41b2f8:	ldr	x0, [sp, #240]
  41b2fc:	add	x0, x0, #0x1
  41b300:	str	x0, [sp, #240]
  41b304:	ldr	x0, [sp, #232]
  41b308:	add	x1, x0, #0x1
  41b30c:	str	x1, [sp, #232]
  41b310:	ldr	x1, [sp, #240]
  41b314:	ldrb	w1, [x1]
  41b318:	strb	w1, [x0]
  41b31c:	b	41b504 <exec_command@@Base+0x9dc>
  41b320:	ldr	x0, [sp, #240]
  41b324:	ldrb	w0, [x0]
  41b328:	str	w0, [sp, #212]
  41b32c:	b	41b508 <exec_command@@Base+0x9e0>
  41b330:	ldr	x0, [sp, #80]
  41b334:	cmp	x0, #0x0
  41b338:	b.eq	41b34c <exec_command@@Base+0x824>  // b.none
  41b33c:	ldr	x0, [sp, #80]
  41b340:	ldr	x1, [sp, #240]
  41b344:	str	x1, [x0]
  41b348:	b	41b528 <exec_command@@Base+0xa00>
  41b34c:	ldr	x0, [sp, #232]
  41b350:	add	x1, x0, #0x1
  41b354:	str	x1, [sp, #232]
  41b358:	mov	w1, #0xa                   	// #10
  41b35c:	strb	w1, [x0]
  41b360:	b	41b508 <exec_command@@Base+0x9e0>
  41b364:	ldr	x0, [sp, #232]
  41b368:	add	x1, x0, #0x1
  41b36c:	str	x1, [sp, #232]
  41b370:	strb	wzr, [x0]
  41b374:	ldr	x0, [sp, #248]
  41b378:	add	x0, x0, #0x1
  41b37c:	str	x0, [sp, #248]
  41b380:	ldr	x0, [sp, #248]
  41b384:	lsl	x0, x0, #3
  41b388:	ldr	x1, [sp, #192]
  41b38c:	add	x0, x1, x0
  41b390:	ldr	x1, [sp, #232]
  41b394:	str	x1, [x0]
  41b398:	str	wzr, [sp, #200]
  41b39c:	ldr	w0, [sp, #208]
  41b3a0:	cmp	w0, #0x0
  41b3a4:	cset	w0, eq  // eq = none
  41b3a8:	and	w0, w0, #0xff
  41b3ac:	mov	w1, w0
  41b3b0:	ldr	w0, [sp, #204]
  41b3b4:	orr	w0, w0, w1
  41b3b8:	str	w0, [sp, #204]
  41b3bc:	ldr	w0, [sp, #208]
  41b3c0:	cmp	w0, #0x0
  41b3c4:	b.eq	41b3d4 <exec_command@@Base+0x8ac>  // b.none
  41b3c8:	ldr	w0, [sp, #204]
  41b3cc:	cmp	w0, #0x0
  41b3d0:	b.eq	41b6c0 <exec_command@@Base+0xb98>  // b.none
  41b3d4:	str	wzr, [sp, #208]
  41b3d8:	ldr	x0, [sp, #248]
  41b3dc:	cmp	x0, #0x1
  41b3e0:	b.ne	41b4b8 <exec_command@@Base+0x990>  // b.any
  41b3e4:	str	wzr, [sp, #180]
  41b3e8:	b	41b490 <exec_command@@Base+0x968>
  41b3ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b3f0:	add	x0, x0, #0xb0
  41b3f4:	ldrsw	x1, [sp, #180]
  41b3f8:	ldr	x1, [x0, x1, lsl #3]
  41b3fc:	ldr	x0, [sp, #192]
  41b400:	ldr	x0, [x0]
  41b404:	cmp	x1, x0
  41b408:	b.eq	41b6c8 <exec_command@@Base+0xba0>  // b.none
  41b40c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b410:	add	x0, x0, #0xb0
  41b414:	ldrsw	x1, [sp, #180]
  41b418:	ldr	x0, [x0, x1, lsl #3]
  41b41c:	ldrb	w1, [x0]
  41b420:	ldr	x0, [sp, #192]
  41b424:	ldr	x0, [x0]
  41b428:	ldrb	w0, [x0]
  41b42c:	cmp	w1, w0
  41b430:	b.ne	41b484 <exec_command@@Base+0x95c>  // b.any
  41b434:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b438:	add	x0, x0, #0xb0
  41b43c:	ldrsw	x1, [sp, #180]
  41b440:	ldr	x0, [x0, x1, lsl #3]
  41b444:	ldrb	w0, [x0]
  41b448:	cmp	w0, #0x0
  41b44c:	b.eq	41b6c8 <exec_command@@Base+0xba0>  // b.none
  41b450:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b454:	add	x0, x0, #0xb0
  41b458:	ldrsw	x1, [sp, #180]
  41b45c:	ldr	x0, [x0, x1, lsl #3]
  41b460:	add	x2, x0, #0x1
  41b464:	ldr	x0, [sp, #192]
  41b468:	ldr	x0, [x0]
  41b46c:	add	x0, x0, #0x1
  41b470:	mov	x1, x0
  41b474:	mov	x0, x2
  41b478:	bl	406bc0 <strcmp@plt>
  41b47c:	cmp	w0, #0x0
  41b480:	b.eq	41b6c8 <exec_command@@Base+0xba0>  // b.none
  41b484:	ldr	w0, [sp, #180]
  41b488:	add	w0, w0, #0x1
  41b48c:	str	w0, [sp, #180]
  41b490:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b494:	add	x0, x0, #0xb0
  41b498:	ldrsw	x1, [sp, #180]
  41b49c:	ldr	x0, [x0, x1, lsl #3]
  41b4a0:	cmp	x0, #0x0
  41b4a4:	b.ne	41b3ec <exec_command@@Base+0x8c4>  // b.any
  41b4a8:	b	41b4b8 <exec_command@@Base+0x990>
  41b4ac:	ldr	x0, [sp, #240]
  41b4b0:	add	x0, x0, #0x1
  41b4b4:	str	x0, [sp, #240]
  41b4b8:	ldr	x0, [sp, #240]
  41b4bc:	add	x0, x0, #0x1
  41b4c0:	ldrb	w0, [x0]
  41b4c4:	mov	w1, w0
  41b4c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b4cc:	add	x0, x0, #0x728
  41b4d0:	sxtw	x1, w1
  41b4d4:	ldrh	w0, [x0, x1, lsl #1]
  41b4d8:	and	w0, w0, #0x2
  41b4dc:	cmp	w0, #0x0
  41b4e0:	b.ne	41b4ac <exec_command@@Base+0x984>  // b.any
  41b4e4:	b	41b508 <exec_command@@Base+0x9e0>
  41b4e8:	ldr	x0, [sp, #232]
  41b4ec:	add	x1, x0, #0x1
  41b4f0:	str	x1, [sp, #232]
  41b4f4:	ldr	x1, [sp, #240]
  41b4f8:	ldrb	w1, [x1]
  41b4fc:	strb	w1, [x0]
  41b500:	b	41b508 <exec_command@@Base+0x9e0>
  41b504:	nop
  41b508:	ldr	x0, [sp, #240]
  41b50c:	add	x0, x0, #0x1
  41b510:	str	x0, [sp, #240]
  41b514:	ldr	x0, [sp, #240]
  41b518:	ldrb	w0, [x0]
  41b51c:	cmp	w0, #0x0
  41b520:	b.ne	41b00c <exec_command@@Base+0x4e4>  // b.any
  41b524:	nop
  41b528:	ldr	w0, [sp, #212]
  41b52c:	cmp	w0, #0x0
  41b530:	b.ne	41b6d0 <exec_command@@Base+0xba8>  // b.any
  41b534:	ldr	x0, [sp, #232]
  41b538:	strb	wzr, [x0]
  41b53c:	ldr	x0, [sp, #248]
  41b540:	lsl	x0, x0, #3
  41b544:	ldr	x1, [sp, #192]
  41b548:	add	x0, x1, x0
  41b54c:	ldr	x0, [x0]
  41b550:	ldrb	w0, [x0]
  41b554:	cmp	w0, #0x0
  41b558:	b.ne	41b568 <exec_command@@Base+0xa40>  // b.any
  41b55c:	ldr	w0, [sp, #200]
  41b560:	cmp	w0, #0x0
  41b564:	b.eq	41b574 <exec_command@@Base+0xa4c>  // b.none
  41b568:	ldr	x0, [sp, #248]
  41b56c:	add	x0, x0, #0x1
  41b570:	str	x0, [sp, #248]
  41b574:	ldr	x0, [sp, #248]
  41b578:	lsl	x0, x0, #3
  41b57c:	ldr	x1, [sp, #192]
  41b580:	add	x0, x1, x0
  41b584:	str	xzr, [x0]
  41b588:	ldr	x0, [sp, #248]
  41b58c:	cmp	x0, #0x1
  41b590:	b.ne	41b658 <exec_command@@Base+0xb30>  // b.any
  41b594:	str	wzr, [sp, #176]
  41b598:	b	41b640 <exec_command@@Base+0xb18>
  41b59c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b5a0:	add	x0, x0, #0xb0
  41b5a4:	ldrsw	x1, [sp, #176]
  41b5a8:	ldr	x1, [x0, x1, lsl #3]
  41b5ac:	ldr	x0, [sp, #192]
  41b5b0:	ldr	x0, [x0]
  41b5b4:	cmp	x1, x0
  41b5b8:	b.eq	41b6d8 <exec_command@@Base+0xbb0>  // b.none
  41b5bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b5c0:	add	x0, x0, #0xb0
  41b5c4:	ldrsw	x1, [sp, #176]
  41b5c8:	ldr	x0, [x0, x1, lsl #3]
  41b5cc:	ldrb	w1, [x0]
  41b5d0:	ldr	x0, [sp, #192]
  41b5d4:	ldr	x0, [x0]
  41b5d8:	ldrb	w0, [x0]
  41b5dc:	cmp	w1, w0
  41b5e0:	b.ne	41b634 <exec_command@@Base+0xb0c>  // b.any
  41b5e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b5e8:	add	x0, x0, #0xb0
  41b5ec:	ldrsw	x1, [sp, #176]
  41b5f0:	ldr	x0, [x0, x1, lsl #3]
  41b5f4:	ldrb	w0, [x0]
  41b5f8:	cmp	w0, #0x0
  41b5fc:	b.eq	41b6d8 <exec_command@@Base+0xbb0>  // b.none
  41b600:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b604:	add	x0, x0, #0xb0
  41b608:	ldrsw	x1, [sp, #176]
  41b60c:	ldr	x0, [x0, x1, lsl #3]
  41b610:	add	x2, x0, #0x1
  41b614:	ldr	x0, [sp, #192]
  41b618:	ldr	x0, [x0]
  41b61c:	add	x0, x0, #0x1
  41b620:	mov	x1, x0
  41b624:	mov	x0, x2
  41b628:	bl	406bc0 <strcmp@plt>
  41b62c:	cmp	w0, #0x0
  41b630:	b.eq	41b6d8 <exec_command@@Base+0xbb0>  // b.none
  41b634:	ldr	w0, [sp, #176]
  41b638:	add	w0, w0, #0x1
  41b63c:	str	w0, [sp, #176]
  41b640:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b644:	add	x0, x0, #0xb0
  41b648:	ldrsw	x1, [sp, #176]
  41b64c:	ldr	x0, [x0, x1, lsl #3]
  41b650:	cmp	x0, #0x0
  41b654:	b.ne	41b59c <exec_command@@Base+0xa74>  // b.any
  41b658:	ldr	x0, [sp, #192]
  41b65c:	ldr	x0, [x0]
  41b660:	cmp	x0, #0x0
  41b664:	b.ne	41b680 <exec_command@@Base+0xb58>  // b.any
  41b668:	ldr	x0, [sp, #184]
  41b66c:	bl	406c00 <free@plt>
  41b670:	ldr	x0, [sp, #192]
  41b674:	bl	406c00 <free@plt>
  41b678:	mov	x0, #0x0                   	// #0
  41b67c:	b	41bcf4 <exec_command@@Base+0x11cc>
  41b680:	ldr	x0, [sp, #192]
  41b684:	b	41bcf4 <exec_command@@Base+0x11cc>
  41b688:	nop
  41b68c:	b	41b6dc <exec_command@@Base+0xbb4>
  41b690:	nop
  41b694:	b	41b6dc <exec_command@@Base+0xbb4>
  41b698:	nop
  41b69c:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6a0:	nop
  41b6a4:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6a8:	nop
  41b6ac:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6b0:	nop
  41b6b4:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6b8:	nop
  41b6bc:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6c0:	nop
  41b6c4:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6c8:	nop
  41b6cc:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6d0:	nop
  41b6d4:	b	41b6dc <exec_command@@Base+0xbb4>
  41b6d8:	nop
  41b6dc:	ldr	x0, [sp, #192]
  41b6e0:	cmp	x0, #0x0
  41b6e4:	b.eq	41b6f8 <exec_command@@Base+0xbd0>  // b.none
  41b6e8:	ldr	x0, [sp, #184]
  41b6ec:	bl	406c00 <free@plt>
  41b6f0:	ldr	x0, [sp, #192]
  41b6f4:	bl	406c00 <free@plt>
  41b6f8:	ldr	x0, [sp, #72]
  41b6fc:	bl	4066f0 <strlen@plt>
  41b700:	str	x0, [sp, #144]
  41b704:	ldr	x0, [sp, #88]
  41b708:	bl	4066f0 <strlen@plt>
  41b70c:	str	x0, [sp, #136]
  41b710:	ldr	x0, [sp, #64]
  41b714:	cmp	x0, #0x0
  41b718:	b.eq	41b728 <exec_command@@Base+0xc00>  // b.none
  41b71c:	ldr	x0, [sp, #64]
  41b720:	bl	4066f0 <strlen@plt>
  41b724:	b	41b72c <exec_command@@Base+0xc04>
  41b728:	mov	x0, #0x0                   	// #0
  41b72c:	str	x0, [sp, #128]
  41b730:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41b734:	add	x0, x0, #0xa8c
  41b738:	ldr	w0, [x0]
  41b73c:	cmp	w0, #0x0
  41b740:	b.eq	41b998 <exec_command@@Base+0xe70>  // b.none
  41b744:	ldr	x0, [sp, #72]
  41b748:	bl	41780c <is_bourne_compatible_shell@@Base>
  41b74c:	cmp	w0, #0x0
  41b750:	b.eq	41b874 <exec_command@@Base+0xd4c>  // b.none
  41b754:	ldr	x0, [sp, #88]
  41b758:	str	x0, [sp, #168]
  41b75c:	ldr	x0, [sp, #88]
  41b760:	str	x0, [sp, #160]
  41b764:	b	41b85c <exec_command@@Base+0xd34>
  41b768:	str	wzr, [sp, #156]
  41b76c:	b	41b77c <exec_command@@Base+0xc54>
  41b770:	ldr	x0, [sp, #168]
  41b774:	add	x0, x0, #0x1
  41b778:	str	x0, [sp, #168]
  41b77c:	ldr	x0, [sp, #168]
  41b780:	ldrb	w0, [x0]
  41b784:	mov	w1, w0
  41b788:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b78c:	add	x0, x0, #0x728
  41b790:	sxtw	x1, w1
  41b794:	ldrh	w0, [x0, x1, lsl #1]
  41b798:	and	w0, w0, #0x2
  41b79c:	cmp	w0, #0x0
  41b7a0:	b.ne	41b770 <exec_command@@Base+0xc48>  // b.any
  41b7a4:	ldr	x0, [sp, #168]
  41b7a8:	ldrb	w0, [x0]
  41b7ac:	cmp	w0, #0x2d
  41b7b0:	b.eq	41b770 <exec_command@@Base+0xc48>  // b.none
  41b7b4:	ldr	x0, [sp, #168]
  41b7b8:	ldrb	w0, [x0]
  41b7bc:	cmp	w0, #0x40
  41b7c0:	b.eq	41b770 <exec_command@@Base+0xc48>  // b.none
  41b7c4:	ldr	x0, [sp, #168]
  41b7c8:	ldrb	w0, [x0]
  41b7cc:	cmp	w0, #0x2b
  41b7d0:	b.eq	41b770 <exec_command@@Base+0xc48>  // b.none
  41b7d4:	b	41b84c <exec_command@@Base+0xd24>
  41b7d8:	ldr	x1, [sp, #168]
  41b7dc:	add	x0, x1, #0x1
  41b7e0:	str	x0, [sp, #168]
  41b7e4:	ldr	x0, [sp, #160]
  41b7e8:	add	x2, x0, #0x1
  41b7ec:	str	x2, [sp, #160]
  41b7f0:	ldrb	w1, [x1]
  41b7f4:	strb	w1, [x0]
  41b7f8:	ldr	x0, [sp, #168]
  41b7fc:	sub	x0, x0, #0x1
  41b800:	ldrb	w0, [x0]
  41b804:	cmp	w0, #0x5c
  41b808:	b.ne	41b824 <exec_command@@Base+0xcfc>  // b.any
  41b80c:	ldr	w0, [sp, #156]
  41b810:	cmp	w0, #0x0
  41b814:	cset	w0, eq  // eq = none
  41b818:	and	w0, w0, #0xff
  41b81c:	str	w0, [sp, #156]
  41b820:	b	41b84c <exec_command@@Base+0xd24>
  41b824:	ldr	x0, [sp, #168]
  41b828:	sub	x0, x0, #0x1
  41b82c:	ldrb	w0, [x0]
  41b830:	cmp	w0, #0xa
  41b834:	b.ne	41b848 <exec_command@@Base+0xd20>  // b.any
  41b838:	ldr	w0, [sp, #156]
  41b83c:	cmp	w0, #0x0
  41b840:	b.ne	41b848 <exec_command@@Base+0xd20>  // b.any
  41b844:	b	41b85c <exec_command@@Base+0xd34>
  41b848:	str	wzr, [sp, #156]
  41b84c:	ldr	x0, [sp, #168]
  41b850:	ldrb	w0, [x0]
  41b854:	cmp	w0, #0x0
  41b858:	b.ne	41b7d8 <exec_command@@Base+0xcb0>  // b.any
  41b85c:	ldr	x0, [sp, #168]
  41b860:	ldrb	w0, [x0]
  41b864:	cmp	w0, #0x0
  41b868:	b.ne	41b768 <exec_command@@Base+0xc40>  // b.any
  41b86c:	ldr	x0, [sp, #160]
  41b870:	strb	wzr, [x0]
  41b874:	str	wzr, [sp, #152]
  41b878:	ldr	x0, [sp, #128]
  41b87c:	lsr	x0, x0, #1
  41b880:	add	x0, x0, #0x4
  41b884:	lsl	x0, x0, #3
  41b888:	bl	42268c <xmalloc@@Base>
  41b88c:	str	x0, [sp, #192]
  41b890:	ldr	w0, [sp, #152]
  41b894:	add	w1, w0, #0x1
  41b898:	str	w1, [sp, #152]
  41b89c:	sxtw	x0, w0
  41b8a0:	lsl	x0, x0, #3
  41b8a4:	ldr	x1, [sp, #192]
  41b8a8:	add	x19, x1, x0
  41b8ac:	ldr	x0, [sp, #72]
  41b8b0:	bl	422788 <xstrdup@@Base>
  41b8b4:	str	x0, [x19]
  41b8b8:	ldr	x0, [sp, #64]
  41b8bc:	cmp	x0, #0x0
  41b8c0:	b.ne	41b8f4 <exec_command@@Base+0xdcc>  // b.any
  41b8c4:	ldr	w0, [sp, #152]
  41b8c8:	add	w1, w0, #0x1
  41b8cc:	str	w1, [sp, #152]
  41b8d0:	sxtw	x0, w0
  41b8d4:	lsl	x0, x0, #3
  41b8d8:	ldr	x1, [sp, #192]
  41b8dc:	add	x19, x1, x0
  41b8e0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41b8e4:	add	x0, x0, #0x280
  41b8e8:	bl	422788 <xstrdup@@Base>
  41b8ec:	str	x0, [x19]
  41b8f0:	b	41b94c <exec_command@@Base+0xe24>
  41b8f4:	ldr	x0, [sp, #64]
  41b8f8:	str	x0, [sp, #104]
  41b8fc:	b	41b930 <exec_command@@Base+0xe08>
  41b900:	ldr	x2, [sp, #96]
  41b904:	ldr	w0, [sp, #152]
  41b908:	add	w1, w0, #0x1
  41b90c:	str	w1, [sp, #152]
  41b910:	sxtw	x0, w0
  41b914:	lsl	x0, x0, #3
  41b918:	ldr	x1, [sp, #192]
  41b91c:	add	x19, x1, x0
  41b920:	mov	x1, x2
  41b924:	ldr	x0, [sp, #112]
  41b928:	bl	4227bc <xstrndup@@Base>
  41b92c:	str	x0, [x19]
  41b930:	add	x1, sp, #0x60
  41b934:	add	x0, sp, #0x68
  41b938:	bl	4228ec <find_next_token@@Base>
  41b93c:	str	x0, [sp, #112]
  41b940:	ldr	x0, [sp, #112]
  41b944:	cmp	x0, #0x0
  41b948:	b.ne	41b900 <exec_command@@Base+0xdd8>  // b.any
  41b94c:	ldr	w0, [sp, #152]
  41b950:	add	w1, w0, #0x1
  41b954:	str	w1, [sp, #152]
  41b958:	sxtw	x0, w0
  41b95c:	lsl	x0, x0, #3
  41b960:	ldr	x1, [sp, #192]
  41b964:	add	x0, x1, x0
  41b968:	ldr	x1, [sp, #88]
  41b96c:	str	x1, [x0]
  41b970:	ldr	w0, [sp, #152]
  41b974:	add	w1, w0, #0x1
  41b978:	str	w1, [sp, #152]
  41b97c:	sxtw	x0, w0
  41b980:	lsl	x0, x0, #3
  41b984:	ldr	x1, [sp, #192]
  41b988:	add	x0, x1, x0
  41b98c:	str	xzr, [x0]
  41b990:	ldr	x0, [sp, #192]
  41b994:	b	41bcf4 <exec_command@@Base+0x11cc>
  41b998:	ldr	x0, [sp, #144]
  41b99c:	lsl	x1, x0, #1
  41b9a0:	ldr	x0, [sp, #128]
  41b9a4:	add	x1, x1, x0
  41b9a8:	ldr	x0, [sp, #136]
  41b9ac:	lsl	x0, x0, #1
  41b9b0:	add	x0, x1, x0
  41b9b4:	add	x0, x0, #0x3
  41b9b8:	bl	42268c <xmalloc@@Base>
  41b9bc:	str	x0, [sp, #120]
  41b9c0:	ldr	x0, [sp, #120]
  41b9c4:	str	x0, [sp, #232]
  41b9c8:	ldr	x0, [sp, #72]
  41b9cc:	str	x0, [sp, #216]
  41b9d0:	b	41ba34 <exec_command@@Base+0xf0c>
  41b9d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41b9d8:	add	x0, x0, #0xa8
  41b9dc:	ldr	x2, [x0]
  41b9e0:	ldr	x0, [sp, #216]
  41b9e4:	ldrb	w0, [x0]
  41b9e8:	mov	w1, w0
  41b9ec:	mov	x0, x2
  41b9f0:	bl	406c20 <strchr@plt>
  41b9f4:	cmp	x0, #0x0
  41b9f8:	b.eq	41ba10 <exec_command@@Base+0xee8>  // b.none
  41b9fc:	ldr	x0, [sp, #232]
  41ba00:	add	x1, x0, #0x1
  41ba04:	str	x1, [sp, #232]
  41ba08:	mov	w1, #0x5c                  	// #92
  41ba0c:	strb	w1, [x0]
  41ba10:	ldr	x0, [sp, #232]
  41ba14:	add	x1, x0, #0x1
  41ba18:	str	x1, [sp, #232]
  41ba1c:	ldr	x1, [sp, #216]
  41ba20:	ldrb	w1, [x1]
  41ba24:	strb	w1, [x0]
  41ba28:	ldr	x0, [sp, #216]
  41ba2c:	add	x0, x0, #0x1
  41ba30:	str	x0, [sp, #216]
  41ba34:	ldr	x0, [sp, #216]
  41ba38:	ldrb	w0, [x0]
  41ba3c:	cmp	w0, #0x0
  41ba40:	b.ne	41b9d4 <exec_command@@Base+0xeac>  // b.any
  41ba44:	ldr	x0, [sp, #232]
  41ba48:	add	x1, x0, #0x1
  41ba4c:	str	x1, [sp, #232]
  41ba50:	mov	w1, #0x20                  	// #32
  41ba54:	strb	w1, [x0]
  41ba58:	ldr	x0, [sp, #64]
  41ba5c:	cmp	x0, #0x0
  41ba60:	b.eq	41ba74 <exec_command@@Base+0xf4c>  // b.none
  41ba64:	ldr	x2, [sp, #128]
  41ba68:	ldr	x1, [sp, #64]
  41ba6c:	ldr	x0, [sp, #232]
  41ba70:	bl	4066b0 <memcpy@plt>
  41ba74:	ldr	x1, [sp, #232]
  41ba78:	ldr	x0, [sp, #128]
  41ba7c:	add	x0, x1, x0
  41ba80:	str	x0, [sp, #232]
  41ba84:	ldr	x0, [sp, #232]
  41ba88:	add	x1, x0, #0x1
  41ba8c:	str	x1, [sp, #232]
  41ba90:	mov	w1, #0x20                  	// #32
  41ba94:	strb	w1, [x0]
  41ba98:	ldr	x0, [sp, #88]
  41ba9c:	str	x0, [sp, #240]
  41baa0:	b	41bc34 <exec_command@@Base+0x110c>
  41baa4:	ldr	x0, [sp, #80]
  41baa8:	cmp	x0, #0x0
  41baac:	b.eq	41bad0 <exec_command@@Base+0xfa8>  // b.none
  41bab0:	ldr	x0, [sp, #240]
  41bab4:	ldrb	w0, [x0]
  41bab8:	cmp	w0, #0xa
  41babc:	b.ne	41bad0 <exec_command@@Base+0xfa8>  // b.any
  41bac0:	ldr	x0, [sp, #80]
  41bac4:	ldr	x1, [sp, #240]
  41bac8:	str	x1, [x0]
  41bacc:	b	41bc44 <exec_command@@Base+0x111c>
  41bad0:	ldr	x0, [sp, #240]
  41bad4:	ldrb	w0, [x0]
  41bad8:	cmp	w0, #0x5c
  41badc:	b.ne	41bb54 <exec_command@@Base+0x102c>  // b.any
  41bae0:	ldr	x0, [sp, #240]
  41bae4:	add	x0, x0, #0x1
  41bae8:	ldrb	w0, [x0]
  41baec:	cmp	w0, #0xa
  41baf0:	b.ne	41bb54 <exec_command@@Base+0x102c>  // b.any
  41baf4:	ldr	x0, [sp, #232]
  41baf8:	add	x1, x0, #0x1
  41bafc:	str	x1, [sp, #232]
  41bb00:	mov	w1, #0x5c                  	// #92
  41bb04:	strb	w1, [x0]
  41bb08:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bb0c:	add	x0, x0, #0x618
  41bb10:	ldr	w0, [x0]
  41bb14:	cmp	w0, #0x0
  41bb18:	b.ne	41bb30 <exec_command@@Base+0x1008>  // b.any
  41bb1c:	ldr	x0, [sp, #232]
  41bb20:	add	x1, x0, #0x1
  41bb24:	str	x1, [sp, #232]
  41bb28:	mov	w1, #0x5c                  	// #92
  41bb2c:	strb	w1, [x0]
  41bb30:	ldr	x0, [sp, #232]
  41bb34:	add	x1, x0, #0x1
  41bb38:	str	x1, [sp, #232]
  41bb3c:	mov	w1, #0xa                   	// #10
  41bb40:	strb	w1, [x0]
  41bb44:	ldr	x0, [sp, #240]
  41bb48:	add	x0, x0, #0x1
  41bb4c:	str	x0, [sp, #240]
  41bb50:	b	41bc28 <exec_command@@Base+0x1100>
  41bb54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bb58:	add	x0, x0, #0x50
  41bb5c:	ldr	w0, [x0]
  41bb60:	cmp	w0, #0x0
  41bb64:	b.eq	41bc10 <exec_command@@Base+0x10e8>  // b.none
  41bb68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bb6c:	add	x0, x0, #0x618
  41bb70:	ldr	w0, [x0]
  41bb74:	cmp	w0, #0x0
  41bb78:	b.ne	41bc10 <exec_command@@Base+0x10e8>  // b.any
  41bb7c:	ldr	x0, [sp, #240]
  41bb80:	ldrb	w0, [x0]
  41bb84:	cmp	w0, #0x5c
  41bb88:	b.eq	41bbfc <exec_command@@Base+0x10d4>  // b.none
  41bb8c:	ldr	x0, [sp, #240]
  41bb90:	ldrb	w0, [x0]
  41bb94:	cmp	w0, #0x27
  41bb98:	b.eq	41bbfc <exec_command@@Base+0x10d4>  // b.none
  41bb9c:	ldr	x0, [sp, #240]
  41bba0:	ldrb	w0, [x0]
  41bba4:	cmp	w0, #0x22
  41bba8:	b.eq	41bbfc <exec_command@@Base+0x10d4>  // b.none
  41bbac:	ldr	x0, [sp, #240]
  41bbb0:	ldrb	w0, [x0]
  41bbb4:	mov	w1, w0
  41bbb8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bbbc:	add	x0, x0, #0x728
  41bbc0:	sxtw	x1, w1
  41bbc4:	ldrh	w0, [x0, x1, lsl #1]
  41bbc8:	and	w0, w0, #0x6
  41bbcc:	cmp	w0, #0x0
  41bbd0:	b.ne	41bbfc <exec_command@@Base+0x10d4>  // b.any
  41bbd4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bbd8:	add	x0, x0, #0xa8
  41bbdc:	ldr	x2, [x0]
  41bbe0:	ldr	x0, [sp, #240]
  41bbe4:	ldrb	w0, [x0]
  41bbe8:	mov	w1, w0
  41bbec:	mov	x0, x2
  41bbf0:	bl	406c20 <strchr@plt>
  41bbf4:	cmp	x0, #0x0
  41bbf8:	b.eq	41bc10 <exec_command@@Base+0x10e8>  // b.none
  41bbfc:	ldr	x0, [sp, #232]
  41bc00:	add	x1, x0, #0x1
  41bc04:	str	x1, [sp, #232]
  41bc08:	mov	w1, #0x5c                  	// #92
  41bc0c:	strb	w1, [x0]
  41bc10:	ldr	x0, [sp, #232]
  41bc14:	add	x1, x0, #0x1
  41bc18:	str	x1, [sp, #232]
  41bc1c:	ldr	x1, [sp, #240]
  41bc20:	ldrb	w1, [x1]
  41bc24:	strb	w1, [x0]
  41bc28:	ldr	x0, [sp, #240]
  41bc2c:	add	x0, x0, #0x1
  41bc30:	str	x0, [sp, #240]
  41bc34:	ldr	x0, [sp, #240]
  41bc38:	ldrb	w0, [x0]
  41bc3c:	cmp	w0, #0x0
  41bc40:	b.ne	41baa4 <exec_command@@Base+0xf7c>  // b.any
  41bc44:	ldr	x1, [sp, #144]
  41bc48:	ldr	x0, [sp, #128]
  41bc4c:	add	x0, x1, x0
  41bc50:	add	x0, x0, #0x2
  41bc54:	ldr	x1, [sp, #120]
  41bc58:	add	x0, x1, x0
  41bc5c:	ldr	x1, [sp, #232]
  41bc60:	cmp	x1, x0
  41bc64:	b.ne	41bc78 <exec_command@@Base+0x1150>  // b.any
  41bc68:	ldr	x0, [sp, #120]
  41bc6c:	bl	406c00 <free@plt>
  41bc70:	mov	x0, #0x0                   	// #0
  41bc74:	b	41bcf4 <exec_command@@Base+0x11cc>
  41bc78:	ldr	x0, [sp, #232]
  41bc7c:	strb	wzr, [x0]
  41bc80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bc84:	add	x0, x0, #0x50
  41bc88:	ldr	w0, [x0]
  41bc8c:	cmp	w0, #0x0
  41bc90:	b.eq	41bcc8 <exec_command@@Base+0x11a0>  // b.none
  41bc94:	mov	x6, #0x0                   	// #0
  41bc98:	ldr	w5, [sp, #52]
  41bc9c:	mov	x4, #0x0                   	// #0
  41bca0:	mov	x3, #0x0                   	// #0
  41bca4:	mov	x2, #0x0                   	// #0
  41bca8:	mov	x1, #0x0                   	// #0
  41bcac:	ldr	x0, [sp, #120]
  41bcb0:	bl	41adac <exec_command@@Base+0x284>
  41bcb4:	str	x0, [sp, #192]
  41bcb8:	ldr	x0, [sp, #120]
  41bcbc:	bl	406c00 <free@plt>
  41bcc0:	ldr	x0, [sp, #192]
  41bcc4:	b	41bcf4 <exec_command@@Base+0x11cc>
  41bcc8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bccc:	add	x0, x0, #0x778
  41bcd0:	bl	406e40 <gettext@plt>
  41bcd4:	mov	x1, x0
  41bcd8:	mov	w4, #0xe16                 	// #3606
  41bcdc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bce0:	add	x3, x0, #0x7b8
  41bce4:	mov	x2, x1
  41bce8:	mov	x1, #0x1d                  	// #29
  41bcec:	mov	x0, #0x0                   	// #0
  41bcf0:	bl	424098 <fatal@@Base>
  41bcf4:	ldr	x19, [sp, #16]
  41bcf8:	ldp	x29, x30, [sp], #256
  41bcfc:	ret

000000000041bd00 <construct_command_argv@@Base>:
  41bd00:	stp	x29, x30, [sp, #-112]!
  41bd04:	mov	x29, sp
  41bd08:	str	x0, [sp, #56]
  41bd0c:	str	x1, [sp, #48]
  41bd10:	str	x2, [sp, #40]
  41bd14:	str	w3, [sp, #36]
  41bd18:	str	x4, [sp, #24]
  41bd1c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41bd20:	add	x0, x0, #0xa90
  41bd24:	ldr	w0, [x0]
  41bd28:	str	w0, [sp, #108]
  41bd2c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41bd30:	add	x0, x0, #0xa90
  41bd34:	str	wzr, [x0]
  41bd38:	ldr	x1, [sp, #40]
  41bd3c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bd40:	add	x0, x0, #0x7c8
  41bd44:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  41bd48:	str	x0, [sp, #96]
  41bd4c:	ldr	x1, [sp, #40]
  41bd50:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bd54:	add	x0, x0, #0x7d8
  41bd58:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  41bd5c:	str	x0, [sp, #88]
  41bd60:	ldr	x1, [sp, #40]
  41bd64:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bd68:	add	x0, x0, #0x7e8
  41bd6c:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  41bd70:	str	x0, [sp, #80]
  41bd74:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41bd78:	add	x0, x0, #0xa90
  41bd7c:	ldr	w1, [sp, #108]
  41bd80:	str	w1, [x0]
  41bd84:	ldr	x6, [sp, #24]
  41bd88:	ldr	w5, [sp, #36]
  41bd8c:	ldr	x4, [sp, #80]
  41bd90:	ldr	x3, [sp, #88]
  41bd94:	ldr	x2, [sp, #96]
  41bd98:	ldr	x1, [sp, #48]
  41bd9c:	ldr	x0, [sp, #56]
  41bda0:	bl	41adac <exec_command@@Base+0x284>
  41bda4:	str	x0, [sp, #72]
  41bda8:	ldr	x0, [sp, #96]
  41bdac:	bl	406c00 <free@plt>
  41bdb0:	ldr	x0, [sp, #88]
  41bdb4:	bl	406c00 <free@plt>
  41bdb8:	ldr	x0, [sp, #80]
  41bdbc:	bl	406c00 <free@plt>
  41bdc0:	ldr	x0, [sp, #72]
  41bdc4:	ldp	x29, x30, [sp], #112
  41bdc8:	ret
  41bdcc:	stp	x29, x30, [sp, #-112]!
  41bdd0:	mov	x29, sp
  41bdd4:	str	x19, [sp, #16]
  41bdd8:	str	x0, [sp, #56]
  41bddc:	str	w1, [sp, #52]
  41bde0:	str	x2, [sp, #40]
  41bde4:	str	x3, [sp, #32]
  41bde8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bdec:	add	x0, x0, #0x6d0
  41bdf0:	ldr	x0, [x0]
  41bdf4:	cmp	x0, #0x0
  41bdf8:	b.ne	41be60 <construct_command_argv@@Base+0x160>  // b.any
  41bdfc:	mov	w1, #0x102                 	// #258
  41be00:	mov	x0, #0x0                   	// #0
  41be04:	bl	406880 <dlopen@plt>
  41be08:	mov	x1, x0
  41be0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41be10:	add	x0, x0, #0x6d0
  41be14:	str	x1, [x0]
  41be18:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41be1c:	add	x0, x0, #0x6d0
  41be20:	ldr	x0, [x0]
  41be24:	cmp	x0, #0x0
  41be28:	b.ne	41be60 <construct_command_argv@@Base+0x160>  // b.any
  41be2c:	bl	406940 <dlerror@plt>
  41be30:	str	x0, [sp, #88]
  41be34:	ldr	x0, [sp, #88]
  41be38:	bl	4066f0 <strlen@plt>
  41be3c:	mov	x19, x0
  41be40:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41be44:	add	x0, x0, #0x970
  41be48:	bl	406e40 <gettext@plt>
  41be4c:	ldr	x3, [sp, #88]
  41be50:	mov	x2, x0
  41be54:	mov	x1, x19
  41be58:	ldr	x0, [sp, #56]
  41be5c:	bl	424098 <fatal@@Base>
  41be60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41be64:	add	x0, x0, #0x6d0
  41be68:	ldr	x0, [x0]
  41be6c:	ldr	x1, [sp, #32]
  41be70:	bl	406950 <dlsym@plt>
  41be74:	str	x0, [sp, #104]
  41be78:	ldr	x0, [sp, #104]
  41be7c:	cmp	x0, #0x0
  41be80:	b.ne	41c068 <construct_command_argv@@Base+0x368>  // b.any
  41be84:	str	xzr, [sp, #96]
  41be88:	mov	w1, #0x2f                  	// #47
  41be8c:	ldr	x0, [sp, #40]
  41be90:	bl	406c20 <strchr@plt>
  41be94:	cmp	x0, #0x0
  41be98:	b.ne	41bebc <construct_command_argv@@Base+0x1bc>  // b.any
  41be9c:	ldr	x2, [sp, #40]
  41bea0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bea4:	add	x1, x0, #0x998
  41bea8:	mov	w0, #0x2                   	// #2
  41beac:	bl	422404 <concat@@Base>
  41beb0:	mov	w1, #0x101                 	// #257
  41beb4:	bl	406880 <dlopen@plt>
  41beb8:	str	x0, [sp, #96]
  41bebc:	ldr	x0, [sp, #96]
  41bec0:	cmp	x0, #0x0
  41bec4:	b.ne	41bed8 <construct_command_argv@@Base+0x1d8>  // b.any
  41bec8:	mov	w1, #0x101                 	// #257
  41becc:	ldr	x0, [sp, #40]
  41bed0:	bl	406880 <dlopen@plt>
  41bed4:	str	x0, [sp, #96]
  41bed8:	ldr	x0, [sp, #96]
  41bedc:	cmp	x0, #0x0
  41bee0:	b.ne	41bf5c <construct_command_argv@@Base+0x25c>  // b.any
  41bee4:	bl	406940 <dlerror@plt>
  41bee8:	str	x0, [sp, #64]
  41beec:	ldr	w0, [sp, #52]
  41bef0:	cmp	w0, #0x0
  41bef4:	b.eq	41bf34 <construct_command_argv@@Base+0x234>  // b.none
  41bef8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41befc:	add	x0, x0, #0x6dc
  41bf00:	ldr	w0, [x0]
  41bf04:	and	w0, w0, #0x1
  41bf08:	cmp	w0, #0x0
  41bf0c:	b.eq	41bf54 <construct_command_argv@@Base+0x254>  // b.none
  41bf10:	ldr	x1, [sp, #64]
  41bf14:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bf18:	add	x0, x0, #0x9a0
  41bf1c:	bl	406dc0 <printf@plt>
  41bf20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41bf24:	add	x0, x0, #0x400
  41bf28:	ldr	x0, [x0]
  41bf2c:	bl	406c90 <fflush@plt>
  41bf30:	b	41bf54 <construct_command_argv@@Base+0x254>
  41bf34:	ldr	x0, [sp, #64]
  41bf38:	bl	4066f0 <strlen@plt>
  41bf3c:	mov	x1, x0
  41bf40:	ldr	x3, [sp, #64]
  41bf44:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bf48:	add	x2, x0, #0x9a0
  41bf4c:	ldr	x0, [sp, #56]
  41bf50:	bl	423e74 <error@@Base>
  41bf54:	mov	x0, #0x0                   	// #0
  41bf58:	b	41c06c <construct_command_argv@@Base+0x36c>
  41bf5c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bf60:	add	x1, x0, #0x9a8
  41bf64:	ldr	x0, [sp, #96]
  41bf68:	bl	406950 <dlsym@plt>
  41bf6c:	str	x0, [sp, #104]
  41bf70:	ldr	x0, [sp, #104]
  41bf74:	cmp	x0, #0x0
  41bf78:	b.ne	41bfa8 <construct_command_argv@@Base+0x2a8>  // b.any
  41bf7c:	ldr	x0, [sp, #40]
  41bf80:	bl	4066f0 <strlen@plt>
  41bf84:	mov	x19, x0
  41bf88:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bf8c:	add	x0, x0, #0x9c8
  41bf90:	bl	406e40 <gettext@plt>
  41bf94:	ldr	x3, [sp, #40]
  41bf98:	mov	x2, x0
  41bf9c:	mov	x1, x19
  41bfa0:	ldr	x0, [sp, #56]
  41bfa4:	bl	424098 <fatal@@Base>
  41bfa8:	ldr	x1, [sp, #32]
  41bfac:	ldr	x0, [sp, #96]
  41bfb0:	bl	406950 <dlsym@plt>
  41bfb4:	str	x0, [sp, #104]
  41bfb8:	ldr	x0, [sp, #104]
  41bfbc:	cmp	x0, #0x0
  41bfc0:	b.ne	41c018 <construct_command_argv@@Base+0x318>  // b.any
  41bfc4:	bl	406940 <dlerror@plt>
  41bfc8:	str	x0, [sp, #72]
  41bfcc:	ldr	x0, [sp, #32]
  41bfd0:	bl	4066f0 <strlen@plt>
  41bfd4:	mov	x19, x0
  41bfd8:	ldr	x0, [sp, #40]
  41bfdc:	bl	4066f0 <strlen@plt>
  41bfe0:	add	x19, x19, x0
  41bfe4:	ldr	x0, [sp, #72]
  41bfe8:	bl	4066f0 <strlen@plt>
  41bfec:	add	x19, x19, x0
  41bff0:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41bff4:	add	x0, x0, #0xa00
  41bff8:	bl	406e40 <gettext@plt>
  41bffc:	ldr	x5, [sp, #72]
  41c000:	ldr	x4, [sp, #40]
  41c004:	ldr	x3, [sp, #32]
  41c008:	mov	x2, x0
  41c00c:	mov	x1, x19
  41c010:	ldr	x0, [sp, #56]
  41c014:	bl	424098 <fatal@@Base>
  41c018:	mov	x0, #0x18                  	// #24
  41c01c:	bl	42268c <xmalloc@@Base>
  41c020:	str	x0, [sp, #80]
  41c024:	ldr	x0, [sp, #40]
  41c028:	bl	422788 <xstrdup@@Base>
  41c02c:	mov	x1, x0
  41c030:	ldr	x0, [sp, #80]
  41c034:	str	x1, [x0, #8]
  41c038:	ldr	x0, [sp, #80]
  41c03c:	ldr	x1, [sp, #96]
  41c040:	str	x1, [x0, #16]
  41c044:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c048:	add	x0, x0, #0x6c8
  41c04c:	ldr	x1, [x0]
  41c050:	ldr	x0, [sp, #80]
  41c054:	str	x1, [x0]
  41c058:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c05c:	add	x0, x0, #0x6c8
  41c060:	ldr	x1, [sp, #80]
  41c064:	str	x1, [x0]
  41c068:	ldr	x0, [sp, #104]
  41c06c:	ldr	x19, [sp, #16]
  41c070:	ldp	x29, x30, [sp], #112
  41c074:	ret

000000000041c078 <load_file@@Base>:
  41c078:	stp	x29, x30, [sp, #-160]!
  41c07c:	mov	x29, sp
  41c080:	str	x19, [sp, #16]
  41c084:	str	x0, [x29, #56]
  41c088:	str	x1, [x29, #48]
  41c08c:	str	w2, [x29, #44]
  41c090:	ldr	x0, [x29, #48]
  41c094:	ldr	x0, [x0]
  41c098:	bl	4066f0 <strlen@plt>
  41c09c:	str	x0, [x29, #152]
  41c0a0:	ldr	x0, [x29, #152]
  41c0a4:	add	x0, x0, #0xb
  41c0a8:	add	x0, x0, #0xf
  41c0ac:	lsr	x0, x0, #4
  41c0b0:	lsl	x0, x0, #4
  41c0b4:	sub	sp, sp, x0
  41c0b8:	mov	x0, sp
  41c0bc:	add	x0, x0, #0xf
  41c0c0:	lsr	x0, x0, #4
  41c0c4:	lsl	x0, x0, #4
  41c0c8:	str	x0, [x29, #104]
  41c0cc:	str	xzr, [x29, #144]
  41c0d0:	ldr	x0, [x29, #48]
  41c0d4:	ldr	x0, [x0]
  41c0d8:	mov	w1, #0x28                  	// #40
  41c0dc:	bl	406c20 <strchr@plt>
  41c0e0:	str	x0, [x29, #136]
  41c0e4:	ldr	x0, [x29, #136]
  41c0e8:	cmp	x0, #0x0
  41c0ec:	b.eq	41c218 <load_file@@Base+0x1a0>  // b.none
  41c0f0:	ldr	x0, [x29, #136]
  41c0f4:	add	x0, x0, #0x1
  41c0f8:	mov	w1, #0x29                  	// #41
  41c0fc:	bl	406c20 <strchr@plt>
  41c100:	str	x0, [x29, #96]
  41c104:	ldr	x0, [x29, #96]
  41c108:	cmp	x0, #0x0
  41c10c:	b.eq	41c218 <load_file@@Base+0x1a0>  // b.none
  41c110:	ldr	x0, [x29, #96]
  41c114:	add	x0, x0, #0x1
  41c118:	ldrb	w0, [x0]
  41c11c:	cmp	w0, #0x0
  41c120:	b.ne	41c218 <load_file@@Base+0x1a0>  // b.any
  41c124:	ldr	x0, [x29, #48]
  41c128:	ldr	x0, [x0]
  41c12c:	ldr	x1, [x29, #136]
  41c130:	sub	x0, x1, x0
  41c134:	str	x0, [x29, #88]
  41c138:	ldr	x0, [x29, #136]
  41c13c:	add	x0, x0, #0x1
  41c140:	str	x0, [x29, #136]
  41c144:	ldr	x1, [x29, #136]
  41c148:	ldr	x0, [x29, #96]
  41c14c:	cmp	x1, x0
  41c150:	b.ne	41c190 <load_file@@Base+0x118>  // b.any
  41c154:	ldr	x0, [x29, #48]
  41c158:	ldr	x0, [x0]
  41c15c:	bl	4066f0 <strlen@plt>
  41c160:	mov	x19, x0
  41c164:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c168:	add	x0, x0, #0xa28
  41c16c:	bl	406e40 <gettext@plt>
  41c170:	mov	x1, x0
  41c174:	ldr	x0, [x29, #48]
  41c178:	ldr	x0, [x0]
  41c17c:	mov	x3, x0
  41c180:	mov	x2, x1
  41c184:	mov	x1, x19
  41c188:	ldr	x0, [x29, #56]
  41c18c:	bl	424098 <fatal@@Base>
  41c190:	ldr	x0, [x29, #48]
  41c194:	ldr	x0, [x0]
  41c198:	ldr	x2, [x29, #88]
  41c19c:	mov	x1, x0
  41c1a0:	ldr	x0, [x29, #104]
  41c1a4:	bl	4066b0 <memcpy@plt>
  41c1a8:	ldr	x1, [x29, #104]
  41c1ac:	ldr	x0, [x29, #88]
  41c1b0:	add	x0, x1, x0
  41c1b4:	strb	wzr, [x0]
  41c1b8:	ldr	x0, [x29, #48]
  41c1bc:	ldr	x1, [x29, #104]
  41c1c0:	str	x1, [x0]
  41c1c4:	ldr	x0, [x29, #88]
  41c1c8:	str	x0, [x29, #152]
  41c1cc:	ldr	x0, [x29, #88]
  41c1d0:	add	x0, x0, #0x1
  41c1d4:	ldr	x1, [x29, #104]
  41c1d8:	add	x0, x1, x0
  41c1dc:	str	x0, [x29, #144]
  41c1e0:	ldr	x1, [x29, #96]
  41c1e4:	ldr	x0, [x29, #136]
  41c1e8:	sub	x0, x1, x0
  41c1ec:	mov	x2, x0
  41c1f0:	ldr	x1, [x29, #136]
  41c1f4:	ldr	x0, [x29, #144]
  41c1f8:	bl	4066b0 <memcpy@plt>
  41c1fc:	ldr	x1, [x29, #96]
  41c200:	ldr	x0, [x29, #136]
  41c204:	sub	x0, x1, x0
  41c208:	mov	x1, x0
  41c20c:	ldr	x0, [x29, #144]
  41c210:	add	x0, x0, x1
  41c214:	strb	wzr, [x0]
  41c218:	ldr	x0, [x29, #48]
  41c21c:	ldr	x0, [x0]
  41c220:	bl	430d78 <strcache_add@@Base>
  41c224:	mov	x1, x0
  41c228:	ldr	x0, [x29, #48]
  41c22c:	str	x1, [x0]
  41c230:	mov	x1, #0x0                   	// #0
  41c234:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c238:	add	x0, x0, #0xa48
  41c23c:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  41c240:	str	x0, [x29, #80]
  41c244:	ldr	x0, [x29, #48]
  41c248:	ldr	x0, [x0]
  41c24c:	mov	x1, x0
  41c250:	ldr	x0, [x29, #80]
  41c254:	bl	406d30 <strstr@plt>
  41c258:	str	x0, [x29, #136]
  41c25c:	ldr	x0, [x29, #136]
  41c260:	cmp	x0, #0x0
  41c264:	b.eq	41c2c4 <load_file@@Base+0x24c>  // b.none
  41c268:	ldr	x1, [x29, #136]
  41c26c:	ldr	x0, [x29, #80]
  41c270:	cmp	x1, x0
  41c274:	b.eq	41c28c <load_file@@Base+0x214>  // b.none
  41c278:	ldr	x0, [x29, #136]
  41c27c:	sub	x0, x0, #0x1
  41c280:	ldrb	w0, [x0]
  41c284:	cmp	w0, #0x20
  41c288:	b.ne	41c2c4 <load_file@@Base+0x24c>  // b.any
  41c28c:	ldr	x1, [x29, #136]
  41c290:	ldr	x0, [x29, #152]
  41c294:	add	x0, x1, x0
  41c298:	ldrb	w0, [x0]
  41c29c:	cmp	w0, #0x0
  41c2a0:	b.eq	41c2bc <load_file@@Base+0x244>  // b.none
  41c2a4:	ldr	x1, [x29, #136]
  41c2a8:	ldr	x0, [x29, #152]
  41c2ac:	add	x0, x1, x0
  41c2b0:	ldrb	w0, [x0]
  41c2b4:	cmp	w0, #0x20
  41c2b8:	b.ne	41c2c4 <load_file@@Base+0x24c>  // b.any
  41c2bc:	mov	w0, #0x1                   	// #1
  41c2c0:	b	41c2c8 <load_file@@Base+0x250>
  41c2c4:	mov	w0, #0x0                   	// #0
  41c2c8:	str	w0, [x29, #132]
  41c2cc:	ldr	w0, [x29, #132]
  41c2d0:	cmp	w0, #0x0
  41c2d4:	b.ne	41c518 <load_file@@Base+0x4a0>  // b.any
  41c2d8:	ldr	x0, [x29, #144]
  41c2dc:	cmp	x0, #0x0
  41c2e0:	b.ne	41c3b0 <load_file@@Base+0x338>  // b.any
  41c2e4:	ldr	x0, [x29, #104]
  41c2e8:	str	x0, [x29, #120]
  41c2ec:	ldr	x0, [x29, #48]
  41c2f0:	ldr	x0, [x0]
  41c2f4:	mov	w1, #0x2f                  	// #47
  41c2f8:	bl	406ae0 <strrchr@plt>
  41c2fc:	str	x0, [x29, #136]
  41c300:	ldr	x0, [x29, #136]
  41c304:	cmp	x0, #0x0
  41c308:	b.ne	41c31c <load_file@@Base+0x2a4>  // b.any
  41c30c:	ldr	x0, [x29, #48]
  41c310:	ldr	x0, [x0]
  41c314:	str	x0, [x29, #136]
  41c318:	b	41c34c <load_file@@Base+0x2d4>
  41c31c:	ldr	x0, [x29, #136]
  41c320:	add	x0, x0, #0x1
  41c324:	str	x0, [x29, #136]
  41c328:	b	41c34c <load_file@@Base+0x2d4>
  41c32c:	ldr	x1, [x29, #136]
  41c330:	add	x0, x1, #0x1
  41c334:	str	x0, [x29, #136]
  41c338:	ldr	x0, [x29, #120]
  41c33c:	add	x2, x0, #0x1
  41c340:	str	x2, [x29, #120]
  41c344:	ldrb	w1, [x1]
  41c348:	strb	w1, [x0]
  41c34c:	bl	406bd0 <__ctype_b_loc@plt>
  41c350:	ldr	x1, [x0]
  41c354:	ldr	x0, [x29, #136]
  41c358:	ldrb	w0, [x0]
  41c35c:	and	x0, x0, #0xff
  41c360:	lsl	x0, x0, #1
  41c364:	add	x0, x1, x0
  41c368:	ldrh	w0, [x0]
  41c36c:	and	w0, w0, #0x8
  41c370:	cmp	w0, #0x0
  41c374:	b.ne	41c32c <load_file@@Base+0x2b4>  // b.any
  41c378:	ldr	x0, [x29, #136]
  41c37c:	ldrb	w0, [x0]
  41c380:	cmp	w0, #0x5f
  41c384:	b.eq	41c32c <load_file@@Base+0x2b4>  // b.none
  41c388:	ldr	x2, [x29, #120]
  41c38c:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c390:	add	x1, x0, #0xa58
  41c394:	mov	x0, x2
  41c398:	ldr	x2, [x1]
  41c39c:	str	x2, [x0]
  41c3a0:	ldur	w1, [x1, #7]
  41c3a4:	stur	w1, [x0, #7]
  41c3a8:	ldr	x0, [x29, #104]
  41c3ac:	str	x0, [x29, #144]
  41c3b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c3b4:	add	x0, x0, #0x6dc
  41c3b8:	ldr	w0, [x0]
  41c3bc:	and	w0, w0, #0x2
  41c3c0:	cmp	w0, #0x0
  41c3c4:	b.eq	41c400 <load_file@@Base+0x388>  // b.none
  41c3c8:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c3cc:	add	x0, x0, #0xa68
  41c3d0:	bl	406e40 <gettext@plt>
  41c3d4:	mov	x3, x0
  41c3d8:	ldr	x0, [x29, #48]
  41c3dc:	ldr	x0, [x0]
  41c3e0:	mov	x2, x0
  41c3e4:	ldr	x1, [x29, #144]
  41c3e8:	mov	x0, x3
  41c3ec:	bl	406dc0 <printf@plt>
  41c3f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c3f4:	add	x0, x0, #0x400
  41c3f8:	ldr	x0, [x0]
  41c3fc:	bl	406c90 <fflush@plt>
  41c400:	ldr	x0, [x29, #48]
  41c404:	ldr	x0, [x0]
  41c408:	ldr	x3, [x29, #144]
  41c40c:	mov	x2, x0
  41c410:	ldr	w1, [x29, #44]
  41c414:	ldr	x0, [x29, #56]
  41c418:	bl	41bdcc <construct_command_argv@@Base+0xcc>
  41c41c:	str	x0, [x29, #72]
  41c420:	ldr	x0, [x29, #72]
  41c424:	cmp	x0, #0x0
  41c428:	b.ne	41c434 <load_file@@Base+0x3bc>  // b.any
  41c42c:	mov	w0, #0x0                   	// #0
  41c430:	b	41c530 <load_file@@Base+0x4b8>
  41c434:	ldr	x1, [x29, #72]
  41c438:	ldr	x0, [x29, #56]
  41c43c:	blr	x1
  41c440:	str	w0, [x29, #132]
  41c444:	ldr	w0, [x29, #132]
  41c448:	cmp	w0, #0x0
  41c44c:	b.le	41c520 <load_file@@Base+0x4a8>
  41c450:	ldr	x0, [x29, #80]
  41c454:	bl	4066f0 <strlen@plt>
  41c458:	str	x0, [x29, #112]
  41c45c:	ldr	x0, [x29, #48]
  41c460:	ldr	x0, [x0]
  41c464:	bl	4066f0 <strlen@plt>
  41c468:	mov	x1, x0
  41c46c:	ldr	x0, [x29, #112]
  41c470:	add	x0, x1, x0
  41c474:	add	x0, x0, #0x2
  41c478:	add	x0, x0, #0xf
  41c47c:	lsr	x0, x0, #4
  41c480:	lsl	x0, x0, #4
  41c484:	sub	sp, sp, x0
  41c488:	mov	x0, sp
  41c48c:	add	x0, x0, #0xf
  41c490:	lsr	x0, x0, #4
  41c494:	lsl	x0, x0, #4
  41c498:	str	x0, [x29, #64]
  41c49c:	ldr	x0, [x29, #112]
  41c4a0:	cmp	x0, #0x0
  41c4a4:	b.eq	41c4d4 <load_file@@Base+0x45c>  // b.none
  41c4a8:	ldr	x2, [x29, #112]
  41c4ac:	ldr	x1, [x29, #80]
  41c4b0:	ldr	x0, [x29, #64]
  41c4b4:	bl	4066b0 <memcpy@plt>
  41c4b8:	ldr	x0, [x29, #112]
  41c4bc:	add	x1, x0, #0x1
  41c4c0:	str	x1, [x29, #112]
  41c4c4:	ldr	x1, [x29, #64]
  41c4c8:	add	x0, x1, x0
  41c4cc:	mov	w1, #0x20                  	// #32
  41c4d0:	strb	w1, [x0]
  41c4d4:	ldr	x1, [x29, #64]
  41c4d8:	ldr	x0, [x29, #112]
  41c4dc:	add	x2, x1, x0
  41c4e0:	ldr	x0, [x29, #48]
  41c4e4:	ldr	x0, [x0]
  41c4e8:	mov	x1, x0
  41c4ec:	mov	x0, x2
  41c4f0:	bl	406ca0 <strcpy@plt>
  41c4f4:	mov	w5, #0x0                   	// #0
  41c4f8:	mov	w4, #0x1                   	// #1
  41c4fc:	mov	w3, #0x0                   	// #0
  41c500:	ldr	x2, [x29, #64]
  41c504:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c508:	add	x1, x0, #0xa88
  41c50c:	ldr	x0, [x29, #56]
  41c510:	bl	433588 <do_variable_definition@@Base>
  41c514:	b	41c524 <load_file@@Base+0x4ac>
  41c518:	nop
  41c51c:	b	41c524 <load_file@@Base+0x4ac>
  41c520:	nop
  41c524:	ldr	x0, [x29, #80]
  41c528:	bl	406c00 <free@plt>
  41c52c:	ldr	w0, [x29, #132]
  41c530:	mov	sp, x29
  41c534:	ldr	x19, [sp, #16]
  41c538:	ldp	x29, x30, [sp], #160
  41c53c:	ret

000000000041c540 <unload_file@@Base>:
  41c540:	stp	x29, x30, [sp, #-48]!
  41c544:	mov	x29, sp
  41c548:	str	x0, [sp, #24]
  41c54c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c550:	add	x0, x0, #0x6c8
  41c554:	ldr	x0, [x0]
  41c558:	str	x0, [sp, #40]
  41c55c:	b	41c620 <unload_file@@Base+0xe0>
  41c560:	ldr	x0, [sp, #40]
  41c564:	ldr	x0, [x0, #8]
  41c568:	ldr	x1, [sp, #24]
  41c56c:	cmp	x1, x0
  41c570:	b.eq	41c5cc <unload_file@@Base+0x8c>  // b.none
  41c574:	ldr	x0, [sp, #40]
  41c578:	ldr	x0, [x0, #8]
  41c57c:	ldrb	w1, [x0]
  41c580:	ldr	x0, [sp, #24]
  41c584:	ldrb	w0, [x0]
  41c588:	cmp	w1, w0
  41c58c:	b.ne	41c614 <unload_file@@Base+0xd4>  // b.any
  41c590:	ldr	x0, [sp, #40]
  41c594:	ldr	x0, [x0, #8]
  41c598:	ldrb	w0, [x0]
  41c59c:	cmp	w0, #0x0
  41c5a0:	b.eq	41c5cc <unload_file@@Base+0x8c>  // b.none
  41c5a4:	ldr	x0, [sp, #40]
  41c5a8:	ldr	x0, [x0, #8]
  41c5ac:	add	x2, x0, #0x1
  41c5b0:	ldr	x0, [sp, #24]
  41c5b4:	add	x0, x0, #0x1
  41c5b8:	mov	x1, x0
  41c5bc:	mov	x0, x2
  41c5c0:	bl	406bc0 <strcmp@plt>
  41c5c4:	cmp	w0, #0x0
  41c5c8:	b.ne	41c614 <unload_file@@Base+0xd4>  // b.any
  41c5cc:	ldr	x0, [sp, #40]
  41c5d0:	ldr	x0, [x0, #16]
  41c5d4:	cmp	x0, #0x0
  41c5d8:	b.eq	41c614 <unload_file@@Base+0xd4>  // b.none
  41c5dc:	ldr	x0, [sp, #40]
  41c5e0:	ldr	x0, [x0, #16]
  41c5e4:	bl	406820 <dlclose@plt>
  41c5e8:	cmp	w0, #0x0
  41c5ec:	b.eq	41c608 <unload_file@@Base+0xc8>  // b.none
  41c5f0:	ldr	x0, [sp, #40]
  41c5f4:	ldr	x0, [x0, #8]
  41c5f8:	mov	x1, x0
  41c5fc:	adrp	x0, 439000 <_IO_stdin_used@@Base+0x2450>
  41c600:	add	x0, x0, #0xa90
  41c604:	bl	4242c0 <perror_with_name@@Base>
  41c608:	ldr	x0, [sp, #40]
  41c60c:	str	xzr, [x0, #16]
  41c610:	b	41c630 <unload_file@@Base+0xf0>
  41c614:	ldr	x0, [sp, #40]
  41c618:	ldr	x0, [x0]
  41c61c:	str	x0, [sp, #40]
  41c620:	ldr	x0, [sp, #40]
  41c624:	cmp	x0, #0x0
  41c628:	b.ne	41c560 <unload_file@@Base+0x20>  // b.any
  41c62c:	nop
  41c630:	nop
  41c634:	ldp	x29, x30, [sp], #48
  41c638:	ret

000000000041c63c <gmk_alloc@@Base>:
  41c63c:	stp	x29, x30, [sp, #-32]!
  41c640:	mov	x29, sp
  41c644:	str	w0, [sp, #28]
  41c648:	ldr	w0, [sp, #28]
  41c64c:	bl	42268c <xmalloc@@Base>
  41c650:	ldp	x29, x30, [sp], #32
  41c654:	ret

000000000041c658 <gmk_free@@Base>:
  41c658:	stp	x29, x30, [sp, #-32]!
  41c65c:	mov	x29, sp
  41c660:	str	x0, [sp, #24]
  41c664:	ldr	x0, [sp, #24]
  41c668:	bl	406c00 <free@plt>
  41c66c:	nop
  41c670:	ldp	x29, x30, [sp], #32
  41c674:	ret

000000000041c678 <gmk_eval@@Base>:
  41c678:	stp	x29, x30, [sp, #-96]!
  41c67c:	mov	x29, sp
  41c680:	str	x0, [sp, #24]
  41c684:	str	x1, [sp, #16]
  41c688:	ldr	x0, [sp, #16]
  41c68c:	cmp	x0, #0x0
  41c690:	b.eq	41c6bc <gmk_eval@@Base+0x44>  // b.none
  41c694:	ldr	x0, [sp, #16]
  41c698:	ldr	x0, [x0]
  41c69c:	str	x0, [sp, #40]
  41c6a0:	ldr	x0, [sp, #16]
  41c6a4:	ldr	x0, [x0, #8]
  41c6a8:	str	x0, [sp, #48]
  41c6ac:	str	xzr, [sp, #56]
  41c6b0:	add	x0, sp, #0x28
  41c6b4:	str	x0, [sp, #88]
  41c6b8:	b	41c6c0 <gmk_eval@@Base+0x48>
  41c6bc:	str	xzr, [sp, #88]
  41c6c0:	add	x1, sp, #0x40
  41c6c4:	add	x0, sp, #0x48
  41c6c8:	bl	40c470 <install_variable_buffer@@Base>
  41c6cc:	ldr	x0, [sp, #24]
  41c6d0:	bl	422788 <xstrdup@@Base>
  41c6d4:	str	x0, [sp, #80]
  41c6d8:	ldr	x1, [sp, #88]
  41c6dc:	ldr	x0, [sp, #80]
  41c6e0:	bl	424c50 <eval_buffer@@Base>
  41c6e4:	ldr	x0, [sp, #80]
  41c6e8:	bl	406c00 <free@plt>
  41c6ec:	ldr	x0, [sp, #72]
  41c6f0:	ldr	x1, [sp, #64]
  41c6f4:	bl	40c4c4 <restore_variable_buffer@@Base>
  41c6f8:	nop
  41c6fc:	ldp	x29, x30, [sp], #96
  41c700:	ret

000000000041c704 <gmk_expand@@Base>:
  41c704:	stp	x29, x30, [sp, #-32]!
  41c708:	mov	x29, sp
  41c70c:	str	x0, [sp, #24]
  41c710:	mov	x1, #0x0                   	// #0
  41c714:	ldr	x0, [sp, #24]
  41c718:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  41c71c:	ldp	x29, x30, [sp], #32
  41c720:	ret

000000000041c724 <gmk_add_function@@Base>:
  41c724:	stp	x29, x30, [sp, #-48]!
  41c728:	mov	x29, sp
  41c72c:	str	x0, [sp, #40]
  41c730:	str	x1, [sp, #32]
  41c734:	str	w2, [sp, #28]
  41c738:	str	w3, [sp, #24]
  41c73c:	str	w4, [sp, #20]
  41c740:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41c744:	add	x0, x0, #0x40
  41c748:	ldr	x0, [x0]
  41c74c:	ldr	x5, [sp, #32]
  41c750:	ldr	w4, [sp, #20]
  41c754:	ldr	w3, [sp, #24]
  41c758:	ldr	w2, [sp, #28]
  41c75c:	ldr	x1, [sp, #40]
  41c760:	bl	413de0 <define_new_function@@Base>
  41c764:	nop
  41c768:	ldp	x29, x30, [sp], #48
  41c76c:	ret
  41c770:	stp	x29, x30, [sp, #-336]!
  41c774:	mov	x29, sp
  41c778:	str	w0, [sp, #28]
  41c77c:	str	x1, [sp, #16]
  41c780:	ldr	x0, [sp, #16]
  41c784:	str	x0, [sp, #184]
  41c788:	mov	w0, #0x10000000            	// #268435456
  41c78c:	str	w0, [sp, #320]
  41c790:	add	x0, sp, #0xb8
  41c794:	add	x0, x0, #0x8
  41c798:	bl	406970 <sigemptyset@plt>
  41c79c:	add	x0, sp, #0xb8
  41c7a0:	add	x0, x0, #0x8
  41c7a4:	ldr	w1, [sp, #28]
  41c7a8:	bl	406da0 <sigaddset@plt>
  41c7ac:	add	x1, sp, #0x20
  41c7b0:	add	x0, sp, #0xb8
  41c7b4:	mov	x2, x1
  41c7b8:	mov	x1, x0
  41c7bc:	ldr	w0, [sp, #28]
  41c7c0:	bl	406ad0 <sigaction@plt>
  41c7c4:	cmp	w0, #0x0
  41c7c8:	b.eq	41c7d4 <gmk_add_function@@Base+0xb0>  // b.none
  41c7cc:	mov	x0, #0xffffffffffffffff    	// #-1
  41c7d0:	b	41c7d8 <gmk_add_function@@Base+0xb4>
  41c7d4:	ldr	x0, [sp, #32]
  41c7d8:	ldp	x29, x30, [sp], #336
  41c7dc:	ret
  41c7e0:	stp	x29, x30, [sp, #-16]!
  41c7e4:	mov	x29, sp
  41c7e8:	bl	43169c <init_hash_global_variable_set@@Base>
  41c7ec:	bl	430e34 <strcache_init@@Base>
  41c7f0:	bl	40f45c <init_hash_files@@Base>
  41c7f4:	bl	40b324 <hash_init_directories@@Base>
  41c7f8:	bl	41403c <hash_init_function_table@@Base>
  41c7fc:	nop
  41c800:	ldp	x29, x30, [sp], #16
  41c804:	ret
  41c808:	stp	x29, x30, [sp, #-32]!
  41c80c:	mov	x29, sp
  41c810:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c814:	add	x0, x0, #0x728
  41c818:	mov	w1, #0x1                   	// #1
  41c81c:	strh	w1, [x0]
  41c820:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c824:	add	x0, x0, #0x728
  41c828:	mov	w1, #0x8                   	// #8
  41c82c:	strh	w1, [x0, #70]
  41c830:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c834:	add	x0, x0, #0x728
  41c838:	mov	w1, #0x10                  	// #16
  41c83c:	strh	w1, [x0, #118]
  41c840:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c844:	add	x0, x0, #0x728
  41c848:	mov	w1, #0x20                  	// #32
  41c84c:	strh	w1, [x0, #122]
  41c850:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c854:	add	x0, x0, #0x728
  41c858:	mov	w1, #0x40                  	// #64
  41c85c:	strh	w1, [x0, #116]
  41c860:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c864:	add	x0, x0, #0x728
  41c868:	mov	w1, #0x100                 	// #256
  41c86c:	strh	w1, [x0, #248]
  41c870:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c874:	add	x0, x0, #0x728
  41c878:	mov	w1, #0x2200                	// #8704
  41c87c:	strh	w1, [x0, #92]
  41c880:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c884:	add	x0, x0, #0x728
  41c888:	mov	w1, #0x400                 	// #1024
  41c88c:	strh	w1, [x0, #88]
  41c890:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c894:	add	x0, x0, #0x728
  41c898:	mov	w1, #0x80                  	// #128
  41c89c:	strh	w1, [x0, #80]
  41c8a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8a4:	add	x0, x0, #0x728
  41c8a8:	mov	w1, #0x80                  	// #128
  41c8ac:	strh	w1, [x0, #246]
  41c8b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8b4:	add	x0, x0, #0x728
  41c8b8:	mov	w1, #0x80                  	// #128
  41c8bc:	strh	w1, [x0, #250]
  41c8c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8c4:	add	x0, x0, #0x728
  41c8c8:	mov	w1, #0x80                  	// #128
  41c8cc:	strh	w1, [x0, #82]
  41c8d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8d4:	add	x0, x0, #0x728
  41c8d8:	mov	w1, #0x4000                	// #16384
  41c8dc:	strh	w1, [x0, #72]
  41c8e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8e4:	add	x0, x0, #0x728
  41c8e8:	mov	w1, #0x2000                	// #8192
  41c8ec:	strh	w1, [x0, #90]
  41c8f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c8f4:	add	x0, x0, #0x728
  41c8f8:	mov	w1, #0x2000                	// #8192
  41c8fc:	strh	w1, [x0, #190]
  41c900:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c904:	add	x0, x0, #0x728
  41c908:	mov	w1, #0x2                   	// #2
  41c90c:	strh	w1, [x0, #64]
  41c910:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c914:	add	x0, x0, #0x728
  41c918:	mov	w1, #0x2                   	// #2
  41c91c:	strh	w1, [x0, #18]
  41c920:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c924:	add	x0, x0, #0x728
  41c928:	mov	w1, #0xffff8000            	// #-32768
  41c92c:	strh	w1, [x0, #94]
  41c930:	mov	w0, #0x1                   	// #1
  41c934:	str	w0, [sp, #28]
  41c938:	b	41ca00 <gmk_add_function@@Base+0x2dc>
  41c93c:	bl	406bd0 <__ctype_b_loc@plt>
  41c940:	ldr	x1, [x0]
  41c944:	ldrsw	x0, [sp, #28]
  41c948:	lsl	x0, x0, #1
  41c94c:	add	x0, x1, x0
  41c950:	ldrh	w0, [x0]
  41c954:	and	w0, w0, #0x2000
  41c958:	cmp	w0, #0x0
  41c95c:	b.eq	41c9a8 <gmk_add_function@@Base+0x284>  // b.none
  41c960:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c964:	add	x0, x0, #0x728
  41c968:	ldrsw	x1, [sp, #28]
  41c96c:	ldrh	w0, [x0, x1, lsl #1]
  41c970:	and	w0, w0, #0x2
  41c974:	cmp	w0, #0x0
  41c978:	b.ne	41c9a8 <gmk_add_function@@Base+0x284>  // b.any
  41c97c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c980:	add	x0, x0, #0x728
  41c984:	ldrsw	x1, [sp, #28]
  41c988:	ldrh	w0, [x0, x1, lsl #1]
  41c98c:	orr	w0, w0, #0x4
  41c990:	and	w2, w0, #0xffff
  41c994:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c998:	add	x0, x0, #0x728
  41c99c:	ldrsw	x1, [sp, #28]
  41c9a0:	strh	w2, [x0, x1, lsl #1]
  41c9a4:	b	41c9f4 <gmk_add_function@@Base+0x2d0>
  41c9a8:	bl	406bd0 <__ctype_b_loc@plt>
  41c9ac:	ldr	x1, [x0]
  41c9b0:	ldrsw	x0, [sp, #28]
  41c9b4:	lsl	x0, x0, #1
  41c9b8:	add	x0, x1, x0
  41c9bc:	ldrh	w0, [x0]
  41c9c0:	and	w0, w0, #0x8
  41c9c4:	cmp	w0, #0x0
  41c9c8:	b.eq	41c9f4 <gmk_add_function@@Base+0x2d0>  // b.none
  41c9cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c9d0:	add	x0, x0, #0x728
  41c9d4:	ldrsw	x1, [sp, #28]
  41c9d8:	ldrh	w0, [x0, x1, lsl #1]
  41c9dc:	orr	w0, w0, #0x2000
  41c9e0:	and	w2, w0, #0xffff
  41c9e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41c9e8:	add	x0, x0, #0x728
  41c9ec:	ldrsw	x1, [sp, #28]
  41c9f0:	strh	w2, [x0, x1, lsl #1]
  41c9f4:	ldr	w0, [sp, #28]
  41c9f8:	add	w0, w0, #0x1
  41c9fc:	str	w0, [sp, #28]
  41ca00:	ldr	w0, [sp, #28]
  41ca04:	cmp	w0, #0xff
  41ca08:	b.le	41c93c <gmk_add_function@@Base+0x218>
  41ca0c:	nop
  41ca10:	nop
  41ca14:	ldp	x29, x30, [sp], #32
  41ca18:	ret
  41ca1c:	stp	x29, x30, [sp, #-48]!
  41ca20:	mov	x29, sp
  41ca24:	str	x0, [sp, #24]
  41ca28:	str	xzr, [sp, #40]
  41ca2c:	ldr	x0, [sp, #24]
  41ca30:	ldrb	w0, [x0]
  41ca34:	cmp	w0, #0x0
  41ca38:	b.ne	41ca58 <gmk_add_function@@Base+0x334>  // b.any
  41ca3c:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41ca40:	add	x0, x0, #0xfe0
  41ca44:	bl	406e40 <gettext@plt>
  41ca48:	mov	x2, x0
  41ca4c:	mov	x1, #0x0                   	// #0
  41ca50:	mov	x0, #0x0                   	// #0
  41ca54:	bl	424098 <fatal@@Base>
  41ca58:	ldr	x0, [sp, #24]
  41ca5c:	ldrb	w0, [x0]
  41ca60:	cmp	w0, #0x7e
  41ca64:	b.ne	41cac8 <gmk_add_function@@Base+0x3a4>  // b.any
  41ca68:	ldr	x0, [sp, #24]
  41ca6c:	bl	42a3d8 <tilde_expand@@Base>
  41ca70:	str	x0, [sp, #40]
  41ca74:	ldr	x0, [sp, #40]
  41ca78:	cmp	x0, #0x0
  41ca7c:	b.eq	41cac8 <gmk_add_function@@Base+0x3a4>  // b.none
  41ca80:	ldr	x0, [sp, #40]
  41ca84:	ldrb	w0, [x0]
  41ca88:	cmp	w0, #0x0
  41ca8c:	b.eq	41cac8 <gmk_add_function@@Base+0x3a4>  // b.none
  41ca90:	ldr	x0, [sp, #40]
  41ca94:	str	x0, [sp, #24]
  41ca98:	b	41cac8 <gmk_add_function@@Base+0x3a4>
  41ca9c:	ldr	x0, [sp, #24]
  41caa0:	add	x0, x0, #0x2
  41caa4:	str	x0, [sp, #24]
  41caa8:	b	41cab8 <gmk_add_function@@Base+0x394>
  41caac:	ldr	x0, [sp, #24]
  41cab0:	add	x0, x0, #0x1
  41cab4:	str	x0, [sp, #24]
  41cab8:	ldr	x0, [sp, #24]
  41cabc:	ldrb	w0, [x0]
  41cac0:	cmp	w0, #0x2f
  41cac4:	b.eq	41caac <gmk_add_function@@Base+0x388>  // b.none
  41cac8:	ldr	x0, [sp, #24]
  41cacc:	ldrb	w0, [x0]
  41cad0:	cmp	w0, #0x2e
  41cad4:	b.ne	41caec <gmk_add_function@@Base+0x3c8>  // b.any
  41cad8:	ldr	x0, [sp, #24]
  41cadc:	add	x0, x0, #0x1
  41cae0:	ldrb	w0, [x0]
  41cae4:	cmp	w0, #0x2f
  41cae8:	b.eq	41ca9c <gmk_add_function@@Base+0x378>  // b.none
  41caec:	ldr	x0, [sp, #24]
  41caf0:	ldrb	w0, [x0]
  41caf4:	cmp	w0, #0x0
  41caf8:	b.ne	41cb08 <gmk_add_function@@Base+0x3e4>  // b.any
  41cafc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41cb00:	add	x0, x0, #0x8
  41cb04:	str	x0, [sp, #24]
  41cb08:	ldr	x0, [sp, #24]
  41cb0c:	bl	430d78 <strcache_add@@Base>
  41cb10:	str	x0, [sp, #32]
  41cb14:	ldr	x0, [sp, #40]
  41cb18:	bl	406c00 <free@plt>
  41cb1c:	ldr	x0, [sp, #32]
  41cb20:	ldp	x29, x30, [sp], #48
  41cb24:	ret
  41cb28:	sub	sp, sp, #0x10
  41cb2c:	str	w0, [sp, #12]
  41cb30:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cb34:	add	x0, x0, #0x6dc
  41cb38:	ldr	w0, [x0]
  41cb3c:	cmp	w0, #0x0
  41cb40:	cset	w0, eq  // eq = none
  41cb44:	and	w0, w0, #0xff
  41cb48:	mov	w1, w0
  41cb4c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cb50:	add	x0, x0, #0x6dc
  41cb54:	str	w1, [x0]
  41cb58:	nop
  41cb5c:	add	sp, sp, #0x10
  41cb60:	ret
  41cb64:	stp	x29, x30, [sp, #-48]!
  41cb68:	mov	x29, sp
  41cb6c:	str	x19, [sp, #16]
  41cb70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cb74:	add	x0, x0, #0x938
  41cb78:	ldr	w0, [x0]
  41cb7c:	cmp	w0, #0x0
  41cb80:	b.eq	41cb94 <gmk_add_function@@Base+0x470>  // b.none
  41cb84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cb88:	add	x0, x0, #0x6dc
  41cb8c:	mov	w1, #0xfff                 	// #4095
  41cb90:	str	w1, [x0]
  41cb94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cb98:	add	x0, x0, #0x930
  41cb9c:	ldr	x0, [x0]
  41cba0:	cmp	x0, #0x0
  41cba4:	b.eq	41cdc4 <gmk_add_function@@Base+0x6a0>  // b.none
  41cba8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cbac:	add	x0, x0, #0x930
  41cbb0:	ldr	x0, [x0]
  41cbb4:	ldr	x0, [x0]
  41cbb8:	str	x0, [sp, #40]
  41cbbc:	b	41cdb4 <gmk_add_function@@Base+0x690>
  41cbc0:	ldr	x0, [sp, #40]
  41cbc4:	ldr	x0, [x0]
  41cbc8:	str	x0, [sp, #32]
  41cbcc:	ldr	x0, [sp, #32]
  41cbd0:	ldrb	w0, [x0]
  41cbd4:	bl	406de0 <tolower@plt>
  41cbd8:	cmp	w0, #0x76
  41cbdc:	b.eq	41ccf4 <gmk_add_function@@Base+0x5d0>  // b.none
  41cbe0:	cmp	w0, #0x76
  41cbe4:	b.gt	41cd14 <gmk_add_function@@Base+0x5f0>
  41cbe8:	cmp	w0, #0x6e
  41cbec:	b.eq	41cce4 <gmk_add_function@@Base+0x5c0>  // b.none
  41cbf0:	cmp	w0, #0x6e
  41cbf4:	b.gt	41cd14 <gmk_add_function@@Base+0x5f0>
  41cbf8:	cmp	w0, #0x6d
  41cbfc:	b.eq	41ccc0 <gmk_add_function@@Base+0x59c>  // b.none
  41cc00:	cmp	w0, #0x6d
  41cc04:	b.gt	41cd14 <gmk_add_function@@Base+0x5f0>
  41cc08:	cmp	w0, #0x6a
  41cc0c:	b.eq	41cca0 <gmk_add_function@@Base+0x57c>  // b.none
  41cc10:	cmp	w0, #0x6a
  41cc14:	b.gt	41cd14 <gmk_add_function@@Base+0x5f0>
  41cc18:	cmp	w0, #0x69
  41cc1c:	b.eq	41cc7c <gmk_add_function@@Base+0x558>  // b.none
  41cc20:	cmp	w0, #0x69
  41cc24:	b.gt	41cd14 <gmk_add_function@@Base+0x5f0>
  41cc28:	cmp	w0, #0x61
  41cc2c:	b.eq	41cc3c <gmk_add_function@@Base+0x518>  // b.none
  41cc30:	cmp	w0, #0x62
  41cc34:	b.eq	41cc5c <gmk_add_function@@Base+0x538>  // b.none
  41cc38:	b	41cd14 <gmk_add_function@@Base+0x5f0>
  41cc3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc40:	add	x0, x0, #0x6dc
  41cc44:	ldr	w0, [x0]
  41cc48:	orr	w1, w0, #0xfff
  41cc4c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc50:	add	x0, x0, #0x6dc
  41cc54:	str	w1, [x0]
  41cc58:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41cc5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc60:	add	x0, x0, #0x6dc
  41cc64:	ldr	w0, [x0]
  41cc68:	orr	w1, w0, #0x1
  41cc6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc70:	add	x0, x0, #0x6dc
  41cc74:	str	w1, [x0]
  41cc78:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41cc7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc80:	add	x0, x0, #0x6dc
  41cc84:	ldr	w1, [x0]
  41cc88:	mov	w0, #0x9                   	// #9
  41cc8c:	orr	w1, w1, w0
  41cc90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cc94:	add	x0, x0, #0x6dc
  41cc98:	str	w1, [x0]
  41cc9c:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41cca0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cca4:	add	x0, x0, #0x6dc
  41cca8:	ldr	w0, [x0]
  41ccac:	orr	w1, w0, #0x4
  41ccb0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ccb4:	add	x0, x0, #0x6dc
  41ccb8:	str	w1, [x0]
  41ccbc:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41ccc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ccc4:	add	x0, x0, #0x6dc
  41ccc8:	ldr	w1, [x0]
  41cccc:	mov	w0, #0x101                 	// #257
  41ccd0:	orr	w1, w1, w0
  41ccd4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ccd8:	add	x0, x0, #0x6dc
  41ccdc:	str	w1, [x0]
  41cce0:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41cce4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cce8:	add	x0, x0, #0x6dc
  41ccec:	str	wzr, [x0]
  41ccf0:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41ccf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ccf8:	add	x0, x0, #0x6dc
  41ccfc:	ldr	w0, [x0]
  41cd00:	orr	w1, w0, #0x3
  41cd04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cd08:	add	x0, x0, #0x6dc
  41cd0c:	str	w1, [x0]
  41cd10:	b	41cd40 <gmk_add_function@@Base+0x61c>
  41cd14:	ldr	x0, [sp, #32]
  41cd18:	bl	4066f0 <strlen@plt>
  41cd1c:	mov	x19, x0
  41cd20:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41cd24:	add	x0, x0, #0x10
  41cd28:	bl	406e40 <gettext@plt>
  41cd2c:	ldr	x3, [sp, #32]
  41cd30:	mov	x2, x0
  41cd34:	mov	x1, x19
  41cd38:	mov	x0, #0x0                   	// #0
  41cd3c:	bl	424098 <fatal@@Base>
  41cd40:	b	41cd74 <gmk_add_function@@Base+0x650>
  41cd44:	ldr	x0, [sp, #32]
  41cd48:	ldrb	w0, [x0]
  41cd4c:	cmp	w0, #0x2c
  41cd50:	b.eq	41cd64 <gmk_add_function@@Base+0x640>  // b.none
  41cd54:	ldr	x0, [sp, #32]
  41cd58:	ldrb	w0, [x0]
  41cd5c:	cmp	w0, #0x20
  41cd60:	b.ne	41cd74 <gmk_add_function@@Base+0x650>  // b.any
  41cd64:	ldr	x0, [sp, #32]
  41cd68:	add	x0, x0, #0x1
  41cd6c:	str	x0, [sp, #32]
  41cd70:	b	41cd90 <gmk_add_function@@Base+0x66c>
  41cd74:	ldr	x0, [sp, #32]
  41cd78:	add	x0, x0, #0x1
  41cd7c:	str	x0, [sp, #32]
  41cd80:	ldr	x0, [sp, #32]
  41cd84:	ldrb	w0, [x0]
  41cd88:	cmp	w0, #0x0
  41cd8c:	b.ne	41cd44 <gmk_add_function@@Base+0x620>  // b.any
  41cd90:	ldr	x0, [sp, #32]
  41cd94:	ldrb	w0, [x0]
  41cd98:	cmp	w0, #0x0
  41cd9c:	b.eq	41cda4 <gmk_add_function@@Base+0x680>  // b.none
  41cda0:	b	41cbcc <gmk_add_function@@Base+0x4a8>
  41cda4:	nop
  41cda8:	ldr	x0, [sp, #40]
  41cdac:	add	x0, x0, #0x8
  41cdb0:	str	x0, [sp, #40]
  41cdb4:	ldr	x0, [sp, #40]
  41cdb8:	ldr	x0, [x0]
  41cdbc:	cmp	x0, #0x0
  41cdc0:	b.ne	41cbc0 <gmk_add_function@@Base+0x49c>  // b.any
  41cdc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cdc8:	add	x0, x0, #0x6dc
  41cdcc:	ldr	w0, [x0]
  41cdd0:	cmp	w0, #0x0
  41cdd4:	b.eq	41cde8 <gmk_add_function@@Base+0x6c4>  // b.none
  41cdd8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41cddc:	add	x0, x0, #0xa10
  41cde0:	mov	w1, #0x1                   	// #1
  41cde4:	str	w1, [x0]
  41cde8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cdec:	add	x0, x0, #0x6dc
  41cdf0:	ldr	w0, [x0]
  41cdf4:	cmp	w0, #0x0
  41cdf8:	b.ne	41ce08 <gmk_add_function@@Base+0x6e4>  // b.any
  41cdfc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce00:	add	x0, x0, #0x938
  41ce04:	str	wzr, [x0]
  41ce08:	nop
  41ce0c:	ldr	x19, [sp, #16]
  41ce10:	ldp	x29, x30, [sp], #48
  41ce14:	ret
  41ce18:	stp	x29, x30, [sp, #-32]!
  41ce1c:	mov	x29, sp
  41ce20:	str	x19, [sp, #16]
  41ce24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce28:	add	x0, x0, #0x6e0
  41ce2c:	ldr	x0, [x0]
  41ce30:	cmp	x0, #0x0
  41ce34:	b.eq	41d0b8 <gmk_add_function@@Base+0x994>  // b.none
  41ce38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce3c:	add	x0, x0, #0x6e0
  41ce40:	ldr	x1, [x0]
  41ce44:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41ce48:	add	x0, x0, #0x38
  41ce4c:	cmp	x1, x0
  41ce50:	b.eq	41ceb4 <gmk_add_function@@Base+0x790>  // b.none
  41ce54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce58:	add	x0, x0, #0x6e0
  41ce5c:	ldr	x0, [x0]
  41ce60:	ldrb	w1, [x0]
  41ce64:	mov	w0, #0x6e                  	// #110
  41ce68:	cmp	w1, w0
  41ce6c:	b.ne	41cec4 <gmk_add_function@@Base+0x7a0>  // b.any
  41ce70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce74:	add	x0, x0, #0x6e0
  41ce78:	ldr	x0, [x0]
  41ce7c:	ldrb	w0, [x0]
  41ce80:	cmp	w0, #0x0
  41ce84:	b.eq	41ceb4 <gmk_add_function@@Base+0x790>  // b.none
  41ce88:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ce8c:	add	x0, x0, #0x6e0
  41ce90:	ldr	x0, [x0]
  41ce94:	add	x2, x0, #0x1
  41ce98:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41ce9c:	add	x0, x0, #0x39
  41cea0:	mov	x1, x0
  41cea4:	mov	x0, x2
  41cea8:	bl	406bc0 <strcmp@plt>
  41ceac:	cmp	w0, #0x0
  41ceb0:	b.ne	41cec4 <gmk_add_function@@Base+0x7a0>  // b.any
  41ceb4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ceb8:	add	x0, x0, #0x720
  41cebc:	str	wzr, [x0]
  41cec0:	b	41d0b8 <gmk_add_function@@Base+0x994>
  41cec4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cec8:	add	x0, x0, #0x6e0
  41cecc:	ldr	x1, [x0]
  41ced0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41ced4:	add	x0, x0, #0x40
  41ced8:	cmp	x1, x0
  41cedc:	b.eq	41cf40 <gmk_add_function@@Base+0x81c>  // b.none
  41cee0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cee4:	add	x0, x0, #0x6e0
  41cee8:	ldr	x0, [x0]
  41ceec:	ldrb	w1, [x0]
  41cef0:	mov	w0, #0x6c                  	// #108
  41cef4:	cmp	w1, w0
  41cef8:	b.ne	41cf54 <gmk_add_function@@Base+0x830>  // b.any
  41cefc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf00:	add	x0, x0, #0x6e0
  41cf04:	ldr	x0, [x0]
  41cf08:	ldrb	w0, [x0]
  41cf0c:	cmp	w0, #0x0
  41cf10:	b.eq	41cf40 <gmk_add_function@@Base+0x81c>  // b.none
  41cf14:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf18:	add	x0, x0, #0x6e0
  41cf1c:	ldr	x0, [x0]
  41cf20:	add	x2, x0, #0x1
  41cf24:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41cf28:	add	x0, x0, #0x41
  41cf2c:	mov	x1, x0
  41cf30:	mov	x0, x2
  41cf34:	bl	406bc0 <strcmp@plt>
  41cf38:	cmp	w0, #0x0
  41cf3c:	b.ne	41cf54 <gmk_add_function@@Base+0x830>  // b.any
  41cf40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf44:	add	x0, x0, #0x720
  41cf48:	mov	w1, #0x1                   	// #1
  41cf4c:	str	w1, [x0]
  41cf50:	b	41d0b8 <gmk_add_function@@Base+0x994>
  41cf54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf58:	add	x0, x0, #0x6e0
  41cf5c:	ldr	x1, [x0]
  41cf60:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41cf64:	add	x0, x0, #0x7d0
  41cf68:	cmp	x1, x0
  41cf6c:	b.eq	41cfd0 <gmk_add_function@@Base+0x8ac>  // b.none
  41cf70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf74:	add	x0, x0, #0x6e0
  41cf78:	ldr	x0, [x0]
  41cf7c:	ldrb	w1, [x0]
  41cf80:	mov	w0, #0x74                  	// #116
  41cf84:	cmp	w1, w0
  41cf88:	b.ne	41cfe4 <gmk_add_function@@Base+0x8c0>  // b.any
  41cf8c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cf90:	add	x0, x0, #0x6e0
  41cf94:	ldr	x0, [x0]
  41cf98:	ldrb	w0, [x0]
  41cf9c:	cmp	w0, #0x0
  41cfa0:	b.eq	41cfd0 <gmk_add_function@@Base+0x8ac>  // b.none
  41cfa4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cfa8:	add	x0, x0, #0x6e0
  41cfac:	ldr	x0, [x0]
  41cfb0:	add	x2, x0, #0x1
  41cfb4:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41cfb8:	add	x0, x0, #0x7d1
  41cfbc:	mov	x1, x0
  41cfc0:	mov	x0, x2
  41cfc4:	bl	406bc0 <strcmp@plt>
  41cfc8:	cmp	w0, #0x0
  41cfcc:	b.ne	41cfe4 <gmk_add_function@@Base+0x8c0>  // b.any
  41cfd0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cfd4:	add	x0, x0, #0x720
  41cfd8:	mov	w1, #0x2                   	// #2
  41cfdc:	str	w1, [x0]
  41cfe0:	b	41d0b8 <gmk_add_function@@Base+0x994>
  41cfe4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41cfe8:	add	x0, x0, #0x6e0
  41cfec:	ldr	x1, [x0]
  41cff0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41cff4:	add	x0, x0, #0x48
  41cff8:	cmp	x1, x0
  41cffc:	b.eq	41d060 <gmk_add_function@@Base+0x93c>  // b.none
  41d000:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d004:	add	x0, x0, #0x6e0
  41d008:	ldr	x0, [x0]
  41d00c:	ldrb	w1, [x0]
  41d010:	mov	w0, #0x72                  	// #114
  41d014:	cmp	w1, w0
  41d018:	b.ne	41d074 <gmk_add_function@@Base+0x950>  // b.any
  41d01c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d020:	add	x0, x0, #0x6e0
  41d024:	ldr	x0, [x0]
  41d028:	ldrb	w0, [x0]
  41d02c:	cmp	w0, #0x0
  41d030:	b.eq	41d060 <gmk_add_function@@Base+0x93c>  // b.none
  41d034:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d038:	add	x0, x0, #0x6e0
  41d03c:	ldr	x0, [x0]
  41d040:	add	x2, x0, #0x1
  41d044:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d048:	add	x0, x0, #0x49
  41d04c:	mov	x1, x0
  41d050:	mov	x0, x2
  41d054:	bl	406bc0 <strcmp@plt>
  41d058:	cmp	w0, #0x0
  41d05c:	b.ne	41d074 <gmk_add_function@@Base+0x950>  // b.any
  41d060:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d064:	add	x0, x0, #0x720
  41d068:	mov	w1, #0x3                   	// #3
  41d06c:	str	w1, [x0]
  41d070:	b	41d0b8 <gmk_add_function@@Base+0x994>
  41d074:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d078:	add	x0, x0, #0x6e0
  41d07c:	ldr	x0, [x0]
  41d080:	bl	4066f0 <strlen@plt>
  41d084:	mov	x19, x0
  41d088:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d08c:	add	x0, x0, #0x50
  41d090:	bl	406e40 <gettext@plt>
  41d094:	mov	x1, x0
  41d098:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d09c:	add	x0, x0, #0x6e0
  41d0a0:	ldr	x0, [x0]
  41d0a4:	mov	x3, x0
  41d0a8:	mov	x2, x1
  41d0ac:	mov	x1, x19
  41d0b0:	mov	x0, #0x0                   	// #0
  41d0b4:	bl	424098 <fatal@@Base>
  41d0b8:	nop
  41d0bc:	ldr	x19, [sp, #16]
  41d0c0:	ldp	x29, x30, [sp], #32
  41d0c4:	ret
  41d0c8:	stp	x29, x30, [sp, #-16]!
  41d0cc:	mov	x29, sp
  41d0d0:	bl	435958 <jobserver_clear@@Base>
  41d0d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d0d8:	add	x0, x0, #0x950
  41d0dc:	ldr	x0, [x0]
  41d0e0:	bl	406c00 <free@plt>
  41d0e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d0e8:	add	x0, x0, #0x950
  41d0ec:	str	xzr, [x0]
  41d0f0:	nop
  41d0f4:	ldp	x29, x30, [sp], #16
  41d0f8:	ret

000000000041d0fc <main@@Base>:
  41d0fc:	mov	x12, #0x1a50                	// #6736
  41d100:	sub	sp, sp, x12
  41d104:	stp	x29, x30, [sp]
  41d108:	mov	x29, sp
  41d10c:	stp	x19, x20, [sp, #16]
  41d110:	str	w0, [x29, #60]
  41d114:	str	x1, [x29, #48]
  41d118:	str	x2, [x29, #40]
  41d11c:	str	wzr, [x29, #6732]
  41d120:	str	wzr, [x29, #6716]
  41d124:	str	wzr, [x29, #6484]
  41d128:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d12c:	add	x0, x0, #0xa80
  41d130:	bl	423944 <output_init@@Base>
  41d134:	bl	41c808 <gmk_add_function@@Base+0xe4>
  41d138:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d13c:	add	x1, x0, #0x70
  41d140:	mov	w0, #0x6                   	// #6
  41d144:	bl	406e80 <setlocale@plt>
  41d148:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d14c:	add	x1, x0, #0x78
  41d150:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d154:	add	x0, x0, #0x90
  41d158:	bl	4069a0 <bindtextdomain@plt>
  41d15c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d160:	add	x0, x0, #0x90
  41d164:	bl	406b90 <textdomain@plt>
  41d168:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d16c:	add	x0, x0, #0xa98
  41d170:	bl	406970 <sigemptyset@plt>
  41d174:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d178:	add	x1, x0, #0x4c8
  41d17c:	mov	w0, #0x1                   	// #1
  41d180:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d184:	cmp	x0, #0x1
  41d188:	b.ne	41d19c <main@@Base+0xa0>  // b.any
  41d18c:	mov	x1, #0x1                   	// #1
  41d190:	mov	w0, #0x1                   	// #1
  41d194:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d198:	b	41d1ac <main@@Base+0xb0>
  41d19c:	mov	w1, #0x1                   	// #1
  41d1a0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d1a4:	add	x0, x0, #0xa98
  41d1a8:	bl	406da0 <sigaddset@plt>
  41d1ac:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d1b0:	add	x1, x0, #0x4c8
  41d1b4:	mov	w0, #0x3                   	// #3
  41d1b8:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d1bc:	cmp	x0, #0x1
  41d1c0:	b.ne	41d1d4 <main@@Base+0xd8>  // b.any
  41d1c4:	mov	x1, #0x1                   	// #1
  41d1c8:	mov	w0, #0x3                   	// #3
  41d1cc:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d1d0:	b	41d1e4 <main@@Base+0xe8>
  41d1d4:	mov	w1, #0x3                   	// #3
  41d1d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d1dc:	add	x0, x0, #0xa98
  41d1e0:	bl	406da0 <sigaddset@plt>
  41d1e4:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d1e8:	add	x1, x0, #0x4c8
  41d1ec:	mov	w0, #0x2                   	// #2
  41d1f0:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d1f4:	cmp	x0, #0x1
  41d1f8:	b.ne	41d20c <main@@Base+0x110>  // b.any
  41d1fc:	mov	x1, #0x1                   	// #1
  41d200:	mov	w0, #0x2                   	// #2
  41d204:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d208:	b	41d21c <main@@Base+0x120>
  41d20c:	mov	w1, #0x2                   	// #2
  41d210:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d214:	add	x0, x0, #0xa98
  41d218:	bl	406da0 <sigaddset@plt>
  41d21c:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d220:	add	x1, x0, #0x4c8
  41d224:	mov	w0, #0xf                   	// #15
  41d228:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d22c:	cmp	x0, #0x1
  41d230:	b.ne	41d244 <main@@Base+0x148>  // b.any
  41d234:	mov	x1, #0x1                   	// #1
  41d238:	mov	w0, #0xf                   	// #15
  41d23c:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d240:	b	41d254 <main@@Base+0x158>
  41d244:	mov	w1, #0xf                   	// #15
  41d248:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d24c:	add	x0, x0, #0xa98
  41d250:	bl	406da0 <sigaddset@plt>
  41d254:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d258:	add	x1, x0, #0x4c8
  41d25c:	mov	w0, #0x18                  	// #24
  41d260:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d264:	cmp	x0, #0x1
  41d268:	b.ne	41d27c <main@@Base+0x180>  // b.any
  41d26c:	mov	x1, #0x1                   	// #1
  41d270:	mov	w0, #0x18                  	// #24
  41d274:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d278:	b	41d28c <main@@Base+0x190>
  41d27c:	mov	w1, #0x18                  	// #24
  41d280:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d284:	add	x0, x0, #0xa98
  41d288:	bl	406da0 <sigaddset@plt>
  41d28c:	adrp	x0, 409000 <chop_commands@@Base+0x120>
  41d290:	add	x1, x0, #0x4c8
  41d294:	mov	w0, #0x19                  	// #25
  41d298:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d29c:	cmp	x0, #0x1
  41d2a0:	b.ne	41d2b4 <main@@Base+0x1b8>  // b.any
  41d2a4:	mov	x1, #0x1                   	// #1
  41d2a8:	mov	w0, #0x19                  	// #25
  41d2ac:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d2b0:	b	41d2c4 <main@@Base+0x1c8>
  41d2b4:	mov	w1, #0x19                  	// #25
  41d2b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d2bc:	add	x0, x0, #0xa98
  41d2c0:	bl	406da0 <sigaddset@plt>
  41d2c4:	mov	x1, #0x0                   	// #0
  41d2c8:	mov	w0, #0x11                  	// #17
  41d2cc:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41d2d0:	mov	x0, #0x0                   	// #0
  41d2d4:	bl	423944 <output_init@@Base>
  41d2d8:	ldr	x0, [x29, #48]
  41d2dc:	ldr	x0, [x0]
  41d2e0:	cmp	x0, #0x0
  41d2e4:	b.ne	41d2f8 <main@@Base+0x1fc>  // b.any
  41d2e8:	ldr	x0, [x29, #48]
  41d2ec:	adrp	x1, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d2f0:	add	x1, x1, #0x70
  41d2f4:	str	x1, [x0]
  41d2f8:	ldr	x0, [x29, #48]
  41d2fc:	ldr	x0, [x0]
  41d300:	ldrb	w0, [x0]
  41d304:	cmp	w0, #0x0
  41d308:	b.ne	41d324 <main@@Base+0x228>  // b.any
  41d30c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d310:	add	x0, x0, #0xa60
  41d314:	adrp	x1, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d318:	add	x1, x1, #0x90
  41d31c:	str	x1, [x0]
  41d320:	b	41d38c <main@@Base+0x290>
  41d324:	ldr	x0, [x29, #48]
  41d328:	ldr	x0, [x0]
  41d32c:	mov	w1, #0x2f                  	// #47
  41d330:	bl	406ae0 <strrchr@plt>
  41d334:	mov	x1, x0
  41d338:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d33c:	add	x0, x0, #0xa60
  41d340:	str	x1, [x0]
  41d344:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d348:	add	x0, x0, #0xa60
  41d34c:	ldr	x0, [x0]
  41d350:	cmp	x0, #0x0
  41d354:	b.ne	41d370 <main@@Base+0x274>  // b.any
  41d358:	ldr	x0, [x29, #48]
  41d35c:	ldr	x1, [x0]
  41d360:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d364:	add	x0, x0, #0xa60
  41d368:	str	x1, [x0]
  41d36c:	b	41d38c <main@@Base+0x290>
  41d370:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d374:	add	x0, x0, #0xa60
  41d378:	ldr	x0, [x0]
  41d37c:	add	x1, x0, #0x1
  41d380:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d384:	add	x0, x0, #0xa60
  41d388:	str	x1, [x0]
  41d38c:	bl	422c94 <user_access@@Base>
  41d390:	bl	41c7e0 <gmk_add_function@@Base+0xbc>
  41d394:	add	x0, x29, #0x850
  41d398:	mov	x1, #0x1000                	// #4096
  41d39c:	bl	4066e0 <getcwd@plt>
  41d3a0:	cmp	x0, #0x0
  41d3a4:	b.ne	41d3d0 <main@@Base+0x2d4>  // b.any
  41d3a8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d3ac:	add	x1, x0, #0x70
  41d3b0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d3b4:	add	x0, x0, #0x98
  41d3b8:	bl	4242c0 <perror_with_name@@Base>
  41d3bc:	strb	wzr, [x29, #2128]
  41d3c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d3c4:	add	x0, x0, #0xa08
  41d3c8:	str	xzr, [x0]
  41d3cc:	b	41d3e8 <main@@Base+0x2ec>
  41d3d0:	add	x0, x29, #0x850
  41d3d4:	bl	422788 <xstrdup@@Base>
  41d3d8:	mov	x1, x0
  41d3dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d3e0:	add	x0, x0, #0xa08
  41d3e4:	str	x1, [x0]
  41d3e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d3ec:	add	x0, x0, #0x3b8
  41d3f0:	ldr	x0, [x0]
  41d3f4:	ldr	x0, [x0, #8]
  41d3f8:	mov	x6, #0x0                   	// #0
  41d3fc:	mov	x5, x0
  41d400:	mov	w4, #0x0                   	// #0
  41d404:	mov	w3, #0x0                   	// #0
  41d408:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d40c:	add	x2, x0, #0x70
  41d410:	mov	x1, #0xa                   	// #10
  41d414:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d418:	add	x0, x0, #0xa0
  41d41c:	bl	4316d8 <define_variable_in_set@@Base>
  41d420:	ldrb	w1, [x0, #44]
  41d424:	orr	w1, w1, #0x10
  41d428:	strb	w1, [x0, #44]
  41d42c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d430:	add	x0, x0, #0x3b8
  41d434:	ldr	x0, [x0]
  41d438:	ldr	x0, [x0, #8]
  41d43c:	mov	x6, #0x0                   	// #0
  41d440:	mov	x5, x0
  41d444:	mov	w4, #0x0                   	// #0
  41d448:	mov	w3, #0x0                   	// #0
  41d44c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d450:	add	x2, x0, #0x70
  41d454:	mov	x1, #0xd                   	// #13
  41d458:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d45c:	add	x0, x0, #0xb0
  41d460:	bl	4316d8 <define_variable_in_set@@Base>
  41d464:	ldrb	w1, [x0, #44]
  41d468:	orr	w1, w1, #0x10
  41d46c:	strb	w1, [x0, #44]
  41d470:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d474:	add	x0, x0, #0x3b8
  41d478:	ldr	x0, [x0]
  41d47c:	ldr	x0, [x0, #8]
  41d480:	mov	x6, #0x0                   	// #0
  41d484:	mov	x5, x0
  41d488:	mov	w4, #0x0                   	// #0
  41d48c:	mov	w3, #0x0                   	// #0
  41d490:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d494:	add	x2, x0, #0xc0
  41d498:	mov	x1, #0xb                   	// #11
  41d49c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d4a0:	add	x0, x0, #0xc8
  41d4a4:	bl	4316d8 <define_variable_in_set@@Base>
  41d4a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d4ac:	add	x0, x0, #0x3b8
  41d4b0:	ldr	x0, [x0]
  41d4b4:	ldr	x0, [x0, #8]
  41d4b8:	mov	x6, #0x0                   	// #0
  41d4bc:	mov	x5, x0
  41d4c0:	mov	w4, #0x0                   	// #0
  41d4c4:	mov	w3, #0x0                   	// #0
  41d4c8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d4cc:	add	x2, x0, #0x70
  41d4d0:	mov	x1, #0x7                   	// #7
  41d4d4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d4d8:	add	x0, x0, #0xd8
  41d4dc:	bl	4316d8 <define_variable_in_set@@Base>
  41d4e0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d4e4:	add	x0, x0, #0xe0
  41d4e8:	str	x0, [x29, #6472]
  41d4ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d4f0:	add	x0, x0, #0x3b8
  41d4f4:	ldr	x0, [x0]
  41d4f8:	ldr	x0, [x0, #8]
  41d4fc:	mov	x6, #0x0                   	// #0
  41d500:	mov	x5, x0
  41d504:	mov	w4, #0x0                   	// #0
  41d508:	mov	w3, #0x0                   	// #0
  41d50c:	ldr	x2, [x29, #6472]
  41d510:	mov	x1, #0x9                   	// #9
  41d514:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d518:	add	x0, x0, #0x190
  41d51c:	bl	4316d8 <define_variable_in_set@@Base>
  41d520:	mov	x0, #0x0                   	// #0
  41d524:	bl	414094 <guile_gmake_setup@@Base>
  41d528:	str	wzr, [x29, #6712]
  41d52c:	b	41d768 <main@@Base+0x66c>
  41d530:	ldr	w0, [x29, #6712]
  41d534:	lsl	x0, x0, #3
  41d538:	ldr	x1, [x29, #40]
  41d53c:	add	x0, x1, x0
  41d540:	ldr	x0, [x0]
  41d544:	str	x0, [x29, #6704]
  41d548:	str	wzr, [x29, #6700]
  41d54c:	b	41d55c <main@@Base+0x460>
  41d550:	ldr	x0, [x29, #6704]
  41d554:	add	x0, x0, #0x1
  41d558:	str	x0, [x29, #6704]
  41d55c:	ldr	x0, [x29, #6704]
  41d560:	ldrb	w0, [x0]
  41d564:	mov	w1, w0
  41d568:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d56c:	add	x0, x0, #0x728
  41d570:	sxtw	x1, w1
  41d574:	ldrh	w0, [x0, x1, lsl #1]
  41d578:	and	w0, w0, #0x20
  41d57c:	cmp	w0, #0x0
  41d580:	b.eq	41d550 <main@@Base+0x454>  // b.none
  41d584:	ldr	x0, [x29, #6704]
  41d588:	ldrb	w0, [x0]
  41d58c:	cmp	w0, #0x0
  41d590:	b.eq	41d758 <main@@Base+0x65c>  // b.none
  41d594:	ldr	x0, [x29, #6704]
  41d598:	add	x1, x0, #0x1
  41d59c:	str	x1, [x29, #6704]
  41d5a0:	ldr	w1, [x29, #6712]
  41d5a4:	lsl	x1, x1, #3
  41d5a8:	ldr	x2, [x29, #40]
  41d5ac:	add	x1, x2, x1
  41d5b0:	ldr	x1, [x1]
  41d5b4:	sub	x0, x0, x1
  41d5b8:	str	x0, [x29, #6240]
  41d5bc:	ldr	x0, [x29, #6240]
  41d5c0:	cmp	x0, #0xd
  41d5c4:	b.ne	41d638 <main@@Base+0x53c>  // b.any
  41d5c8:	ldr	w0, [x29, #6712]
  41d5cc:	lsl	x0, x0, #3
  41d5d0:	ldr	x1, [x29, #40]
  41d5d4:	add	x0, x1, x0
  41d5d8:	ldr	x3, [x0]
  41d5dc:	mov	x2, #0xd                   	// #13
  41d5e0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d5e4:	add	x1, x0, #0x1a0
  41d5e8:	mov	x0, x3
  41d5ec:	bl	406990 <strncmp@plt>
  41d5f0:	cmp	w0, #0x0
  41d5f4:	b.ne	41d638 <main@@Base+0x53c>  // b.any
  41d5f8:	ldr	x0, [x29, #6704]
  41d5fc:	ldrb	w0, [x0]
  41d600:	cmp	w0, #0x2d
  41d604:	b.ne	41d624 <main@@Base+0x528>  // b.any
  41d608:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d60c:	add	x0, x0, #0xff8
  41d610:	mov	w1, #0x1                   	// #1
  41d614:	str	w1, [x0]
  41d618:	ldr	x0, [x29, #6704]
  41d61c:	add	x0, x0, #0x1
  41d620:	str	x0, [x29, #6704]
  41d624:	ldr	x0, [x29, #6704]
  41d628:	bl	4068f0 <atoi@plt>
  41d62c:	str	w0, [x29, #6716]
  41d630:	mov	w0, #0x1                   	// #1
  41d634:	str	w0, [x29, #6700]
  41d638:	ldr	w0, [x29, #6712]
  41d63c:	lsl	x0, x0, #3
  41d640:	ldr	x1, [x29, #40]
  41d644:	add	x0, x1, x0
  41d648:	ldr	x7, [x0]
  41d64c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d650:	add	x0, x0, #0x3b8
  41d654:	ldr	x0, [x0]
  41d658:	ldr	x0, [x0, #8]
  41d65c:	mov	x6, #0x0                   	// #0
  41d660:	mov	x5, x0
  41d664:	mov	w4, #0x1                   	// #1
  41d668:	mov	w3, #0x1                   	// #1
  41d66c:	ldr	x2, [x29, #6704]
  41d670:	ldr	x1, [x29, #6240]
  41d674:	mov	x0, x7
  41d678:	bl	4316d8 <define_variable_in_set@@Base>
  41d67c:	str	x0, [x29, #6232]
  41d680:	ldr	x0, [x29, #6232]
  41d684:	ldr	x1, [x0]
  41d688:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d68c:	add	x0, x0, #0x1b0
  41d690:	cmp	x1, x0
  41d694:	b.eq	41d6ec <main@@Base+0x5f0>  // b.none
  41d698:	ldr	x0, [x29, #6232]
  41d69c:	ldr	x0, [x0]
  41d6a0:	ldrb	w1, [x0]
  41d6a4:	mov	w0, #0x53                  	// #83
  41d6a8:	cmp	w1, w0
  41d6ac:	b.ne	41d738 <main@@Base+0x63c>  // b.any
  41d6b0:	ldr	x0, [x29, #6232]
  41d6b4:	ldr	x0, [x0]
  41d6b8:	ldrb	w0, [x0]
  41d6bc:	cmp	w0, #0x0
  41d6c0:	b.eq	41d6ec <main@@Base+0x5f0>  // b.none
  41d6c4:	ldr	x0, [x29, #6232]
  41d6c8:	ldr	x0, [x0]
  41d6cc:	add	x2, x0, #0x1
  41d6d0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d6d4:	add	x0, x0, #0x1b1
  41d6d8:	mov	x1, x0
  41d6dc:	mov	x0, x2
  41d6e0:	bl	406bc0 <strcmp@plt>
  41d6e4:	cmp	w0, #0x0
  41d6e8:	b.ne	41d738 <main@@Base+0x63c>  // b.any
  41d6ec:	mov	w0, #0x1                   	// #1
  41d6f0:	str	w0, [x29, #6700]
  41d6f4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d6f8:	add	x0, x0, #0x1b0
  41d6fc:	bl	422788 <xstrdup@@Base>
  41d700:	mov	x1, x0
  41d704:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d708:	add	x0, x0, #0xa18
  41d70c:	str	x1, [x0]
  41d710:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d714:	add	x0, x0, #0xa18
  41d718:	mov	w1, #0x5                   	// #5
  41d71c:	str	w1, [x0, #40]
  41d720:	ldr	x0, [x29, #6704]
  41d724:	bl	422788 <xstrdup@@Base>
  41d728:	mov	x1, x0
  41d72c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d730:	add	x0, x0, #0xa18
  41d734:	str	x1, [x0, #8]
  41d738:	ldr	w0, [x29, #6700]
  41d73c:	and	w0, w0, #0x3
  41d740:	and	w2, w0, #0xff
  41d744:	ldr	x1, [x29, #6232]
  41d748:	ldrb	w0, [x1, #47]
  41d74c:	bfi	w0, w2, #5, #2
  41d750:	strb	w0, [x1, #47]
  41d754:	b	41d75c <main@@Base+0x660>
  41d758:	nop
  41d75c:	ldr	w0, [x29, #6712]
  41d760:	add	w0, w0, #0x1
  41d764:	str	w0, [x29, #6712]
  41d768:	ldr	w0, [x29, #6712]
  41d76c:	lsl	x0, x0, #3
  41d770:	ldr	x1, [x29, #40]
  41d774:	add	x0, x1, x0
  41d778:	ldr	x0, [x0]
  41d77c:	cmp	x0, #0x0
  41d780:	b.ne	41d530 <main@@Base+0x434>  // b.any
  41d784:	mov	x1, #0xc                   	// #12
  41d788:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d78c:	add	x0, x0, #0x1b8
  41d790:	bl	420b00 <main@@Base+0x3a04>
  41d794:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d798:	add	x0, x0, #0x3b8
  41d79c:	ldr	x0, [x0]
  41d7a0:	ldr	x0, [x0, #8]
  41d7a4:	mov	x6, #0x0                   	// #0
  41d7a8:	mov	x5, x0
  41d7ac:	mov	w4, #0x0                   	// #0
  41d7b0:	mov	w3, #0x1                   	// #1
  41d7b4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d7b8:	add	x2, x0, #0x70
  41d7bc:	mov	x1, #0xc                   	// #12
  41d7c0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d7c4:	add	x0, x0, #0x1b8
  41d7c8:	bl	4316d8 <define_variable_in_set@@Base>
  41d7cc:	mov	x1, #0x9                   	// #9
  41d7d0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d7d4:	add	x0, x0, #0x1c8
  41d7d8:	bl	420b00 <main@@Base+0x3a04>
  41d7dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d7e0:	add	x0, x0, #0x720
  41d7e4:	ldr	w0, [x0]
  41d7e8:	cmp	w0, #0x1
  41d7ec:	b.eq	41d804 <main@@Base+0x708>  // b.none
  41d7f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d7f4:	add	x0, x0, #0x720
  41d7f8:	ldr	w0, [x0]
  41d7fc:	cmp	w0, #0x2
  41d800:	b.ne	41d80c <main@@Base+0x710>  // b.any
  41d804:	mov	w0, #0x1                   	// #1
  41d808:	b	41d810 <main@@Base+0x714>
  41d80c:	mov	w0, #0x0                   	// #0
  41d810:	and	w0, w0, #0x1
  41d814:	and	w2, w0, #0xff
  41d818:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d81c:	add	x1, x0, #0xa80
  41d820:	ldrb	w0, [x1, #8]
  41d824:	bfxil	w0, w2, #0, #1
  41d828:	strb	w0, [x1, #8]
  41d82c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d830:	add	x0, x0, #0xa80
  41d834:	ldrb	w0, [x0, #8]
  41d838:	ubfx	x0, x0, #0, #1
  41d83c:	and	w0, w0, #0xff
  41d840:	str	w0, [x29, #6484]
  41d844:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d848:	add	x0, x0, #0xa80
  41d84c:	ldrb	w0, [x0, #8]
  41d850:	and	w0, w0, #0x1
  41d854:	and	w0, w0, #0xff
  41d858:	cmp	w0, #0x0
  41d85c:	b.eq	41d86c <main@@Base+0x770>  // b.none
  41d860:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41d864:	add	x0, x0, #0xa80
  41d868:	b	41d870 <main@@Base+0x774>
  41d86c:	mov	x0, #0x0                   	// #0
  41d870:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41d874:	add	x1, x1, #0xff0
  41d878:	str	x0, [x1]
  41d87c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d880:	add	x0, x0, #0x1e0
  41d884:	ldr	w0, [x0]
  41d888:	str	w0, [x29, #6468]
  41d88c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d890:	add	x0, x0, #0x1e0
  41d894:	mov	w1, #0xffffffff            	// #-1
  41d898:	str	w1, [x0]
  41d89c:	mov	w2, #0x0                   	// #0
  41d8a0:	ldr	x1, [x29, #48]
  41d8a4:	ldr	w0, [x29, #60]
  41d8a8:	bl	420330 <main@@Base+0x3234>
  41d8ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d8b0:	add	x0, x0, #0x1e0
  41d8b4:	ldr	w0, [x0]
  41d8b8:	str	w0, [x29, #6464]
  41d8bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d8c0:	add	x0, x0, #0x1e0
  41d8c4:	ldr	w0, [x0]
  41d8c8:	cmn	w0, #0x1
  41d8cc:	b.ne	41d8e0 <main@@Base+0x7e4>  // b.any
  41d8d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d8d4:	add	x0, x0, #0x1e0
  41d8d8:	ldr	w1, [x29, #6468]
  41d8dc:	str	w1, [x0]
  41d8e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d8e4:	add	x0, x0, #0x400
  41d8e8:	ldr	x0, [x0]
  41d8ec:	bl	4068a0 <fileno@plt>
  41d8f0:	bl	406d10 <isatty@plt>
  41d8f4:	cmp	w0, #0x0
  41d8f8:	b.eq	41d988 <main@@Base+0x88c>  // b.none
  41d8fc:	mov	x1, #0xc                   	// #12
  41d900:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d904:	add	x0, x0, #0x1d8
  41d908:	bl	431f68 <lookup_variable@@Base>
  41d90c:	cmp	x0, #0x0
  41d910:	b.ne	41d988 <main@@Base+0x88c>  // b.any
  41d914:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d918:	add	x0, x0, #0x400
  41d91c:	ldr	x0, [x0]
  41d920:	bl	4068a0 <fileno@plt>
  41d924:	bl	406770 <ttyname@plt>
  41d928:	str	x0, [x29, #6456]
  41d92c:	ldr	x0, [x29, #6456]
  41d930:	cmp	x0, #0x0
  41d934:	b.eq	41d940 <main@@Base+0x844>  // b.none
  41d938:	ldr	x0, [x29, #6456]
  41d93c:	b	41d948 <main@@Base+0x84c>
  41d940:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d944:	add	x0, x0, #0x1e8
  41d948:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41d94c:	add	x1, x1, #0x3b8
  41d950:	ldr	x1, [x1]
  41d954:	ldr	x1, [x1, #8]
  41d958:	mov	x6, #0x0                   	// #0
  41d95c:	mov	x5, x1
  41d960:	mov	w4, #0x0                   	// #0
  41d964:	mov	w3, #0x0                   	// #0
  41d968:	mov	x2, x0
  41d96c:	mov	x1, #0xc                   	// #12
  41d970:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d974:	add	x0, x0, #0x1d8
  41d978:	bl	4316d8 <define_variable_in_set@@Base>
  41d97c:	ldrb	w1, [x0, #47]
  41d980:	and	w1, w1, #0xffffff9f
  41d984:	strb	w1, [x0, #47]
  41d988:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d98c:	add	x0, x0, #0x3e8
  41d990:	ldr	x0, [x0]
  41d994:	bl	4068a0 <fileno@plt>
  41d998:	bl	406d10 <isatty@plt>
  41d99c:	cmp	w0, #0x0
  41d9a0:	b.eq	41da30 <main@@Base+0x934>  // b.none
  41d9a4:	mov	x1, #0xc                   	// #12
  41d9a8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d9ac:	add	x0, x0, #0x1f0
  41d9b0:	bl	431f68 <lookup_variable@@Base>
  41d9b4:	cmp	x0, #0x0
  41d9b8:	b.ne	41da30 <main@@Base+0x934>  // b.any
  41d9bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41d9c0:	add	x0, x0, #0x3e8
  41d9c4:	ldr	x0, [x0]
  41d9c8:	bl	4068a0 <fileno@plt>
  41d9cc:	bl	406770 <ttyname@plt>
  41d9d0:	str	x0, [x29, #6448]
  41d9d4:	ldr	x0, [x29, #6448]
  41d9d8:	cmp	x0, #0x0
  41d9dc:	b.eq	41d9e8 <main@@Base+0x8ec>  // b.none
  41d9e0:	ldr	x0, [x29, #6448]
  41d9e4:	b	41d9f0 <main@@Base+0x8f4>
  41d9e8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41d9ec:	add	x0, x0, #0x1e8
  41d9f0:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41d9f4:	add	x1, x1, #0x3b8
  41d9f8:	ldr	x1, [x1]
  41d9fc:	ldr	x1, [x1, #8]
  41da00:	mov	x6, #0x0                   	// #0
  41da04:	mov	x5, x1
  41da08:	mov	w4, #0x0                   	// #0
  41da0c:	mov	w3, #0x0                   	// #0
  41da10:	mov	x2, x0
  41da14:	mov	x1, #0xc                   	// #12
  41da18:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41da1c:	add	x0, x0, #0x1f0
  41da20:	bl	4316d8 <define_variable_in_set@@Base>
  41da24:	ldrb	w1, [x0, #47]
  41da28:	and	w1, w1, #0xffffff9f
  41da2c:	strb	w1, [x0, #47]
  41da30:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41da34:	add	x0, x0, #0x720
  41da38:	ldr	w0, [x0]
  41da3c:	cmp	w0, #0x1
  41da40:	b.eq	41da58 <main@@Base+0x95c>  // b.none
  41da44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41da48:	add	x0, x0, #0x720
  41da4c:	ldr	w0, [x0]
  41da50:	cmp	w0, #0x2
  41da54:	b.ne	41da60 <main@@Base+0x964>  // b.any
  41da58:	mov	w0, #0x1                   	// #1
  41da5c:	b	41da64 <main@@Base+0x968>
  41da60:	mov	w0, #0x0                   	// #0
  41da64:	str	w0, [x29, #6484]
  41da68:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41da6c:	add	x0, x0, #0xa80
  41da70:	ldrb	w0, [x0, #8]
  41da74:	and	w0, w0, #0x1
  41da78:	and	w0, w0, #0xff
  41da7c:	cmp	w0, #0x0
  41da80:	b.eq	41da9c <main@@Base+0x9a0>  // b.none
  41da84:	ldr	w0, [x29, #6484]
  41da88:	cmp	w0, #0x0
  41da8c:	b.ne	41da9c <main@@Base+0x9a0>  // b.any
  41da90:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41da94:	add	x0, x0, #0xa80
  41da98:	bl	423a2c <output_close@@Base>
  41da9c:	ldr	w0, [x29, #6484]
  41daa0:	and	w0, w0, #0x1
  41daa4:	and	w2, w0, #0xff
  41daa8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41daac:	add	x1, x0, #0xa80
  41dab0:	ldrb	w0, [x1, #8]
  41dab4:	bfxil	w0, w2, #0, #1
  41dab8:	strb	w0, [x1, #8]
  41dabc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41dac0:	add	x0, x0, #0xa80
  41dac4:	ldrb	w0, [x0, #8]
  41dac8:	and	w0, w0, #0x1
  41dacc:	and	w0, w0, #0xff
  41dad0:	cmp	w0, #0x0
  41dad4:	b.eq	41dae4 <main@@Base+0x9e8>  // b.none
  41dad8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41dadc:	add	x0, x0, #0xa80
  41dae0:	b	41dae8 <main@@Base+0x9ec>
  41dae4:	mov	x0, #0x0                   	// #0
  41dae8:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41daec:	add	x1, x1, #0xff0
  41daf0:	str	x0, [x1]
  41daf4:	mov	x1, #0x9                   	// #9
  41daf8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dafc:	add	x0, x0, #0x200
  41db00:	bl	431f68 <lookup_variable@@Base>
  41db04:	str	x0, [x29, #6440]
  41db08:	ldr	x0, [x29, #6440]
  41db0c:	cmp	x0, #0x0
  41db10:	b.eq	41db5c <main@@Base+0xa60>  // b.none
  41db14:	ldr	x0, [x29, #6440]
  41db18:	ldr	x0, [x0, #8]
  41db1c:	ldrb	w0, [x0]
  41db20:	cmp	w0, #0x0
  41db24:	b.eq	41db5c <main@@Base+0xa60>  // b.none
  41db28:	ldr	x0, [x29, #6440]
  41db2c:	ldr	x0, [x0, #8]
  41db30:	ldrb	w0, [x0]
  41db34:	cmp	w0, #0x2d
  41db38:	b.eq	41db5c <main@@Base+0xa60>  // b.none
  41db3c:	ldr	x0, [x29, #6440]
  41db40:	ldr	x0, [x0, #8]
  41db44:	bl	4068f0 <atoi@plt>
  41db48:	mov	w1, w0
  41db4c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41db50:	add	x0, x0, #0xa70
  41db54:	str	w1, [x0]
  41db58:	b	41db68 <main@@Base+0xa6c>
  41db5c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41db60:	add	x0, x0, #0xa70
  41db64:	str	wzr, [x0]
  41db68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41db6c:	add	x0, x0, #0x984
  41db70:	ldr	w0, [x0]
  41db74:	cmp	w0, #0x0
  41db78:	b.eq	41db90 <main@@Base+0xa94>  // b.none
  41db7c:	ldr	w0, [x29, #6716]
  41db80:	cmp	w0, #0x0
  41db84:	b.ne	41db90 <main@@Base+0xa94>  // b.any
  41db88:	mov	w0, #0x1                   	// #1
  41db8c:	b	41db94 <main@@Base+0xa98>
  41db90:	mov	w0, #0x0                   	// #0
  41db94:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41db98:	add	x1, x1, #0x718
  41db9c:	str	w0, [x1]
  41dba0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dba4:	add	x0, x0, #0x70c
  41dba8:	ldr	w0, [x0]
  41dbac:	cmp	w0, #0x0
  41dbb0:	b.eq	41dbc0 <main@@Base+0xac4>  // b.none
  41dbb4:	bl	421cb8 <main@@Base+0x4bbc>
  41dbb8:	mov	w0, #0x0                   	// #0
  41dbbc:	bl	421fbc <die@@Base>
  41dbc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dbc4:	add	x0, x0, #0x6dc
  41dbc8:	ldr	w0, [x0]
  41dbcc:	and	w0, w0, #0x1
  41dbd0:	cmp	w0, #0x0
  41dbd4:	b.eq	41dbdc <main@@Base+0xae0>  // b.none
  41dbd8:	bl	421cb8 <main@@Base+0x4bbc>
  41dbdc:	ldrb	w0, [x29, #2128]
  41dbe0:	cmp	w0, #0x0
  41dbe4:	b.eq	41dc54 <main@@Base+0xb58>  // b.none
  41dbe8:	ldr	x0, [x29, #48]
  41dbec:	ldr	x0, [x0]
  41dbf0:	cmp	x0, #0x0
  41dbf4:	b.eq	41dc54 <main@@Base+0xb58>  // b.none
  41dbf8:	ldr	x0, [x29, #48]
  41dbfc:	ldr	x0, [x0]
  41dc00:	ldrb	w0, [x0]
  41dc04:	cmp	w0, #0x2f
  41dc08:	b.eq	41dc54 <main@@Base+0xb58>  // b.none
  41dc0c:	ldr	x0, [x29, #48]
  41dc10:	ldr	x0, [x0]
  41dc14:	mov	w1, #0x2f                  	// #47
  41dc18:	bl	406c20 <strchr@plt>
  41dc1c:	cmp	x0, #0x0
  41dc20:	b.eq	41dc54 <main@@Base+0xb58>  // b.none
  41dc24:	ldr	x0, [x29, #48]
  41dc28:	ldr	x0, [x0]
  41dc2c:	add	x1, x29, #0x850
  41dc30:	mov	x3, x0
  41dc34:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dc38:	add	x2, x0, #0x210
  41dc3c:	mov	w0, #0x3                   	// #3
  41dc40:	bl	422404 <concat@@Base>
  41dc44:	bl	422788 <xstrdup@@Base>
  41dc48:	mov	x1, x0
  41dc4c:	ldr	x0, [x29, #48]
  41dc50:	str	x1, [x0]
  41dc54:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41dc58:	add	x0, x0, #0xa48
  41dc5c:	add	x1, x29, #0x850
  41dc60:	str	x1, [x0]
  41dc64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dc68:	add	x0, x0, #0x950
  41dc6c:	ldr	x0, [x0]
  41dc70:	cmp	x0, #0x0
  41dc74:	b.eq	41dd00 <main@@Base+0xc04>  // b.none
  41dc78:	ldr	w0, [x29, #6464]
  41dc7c:	cmn	w0, #0x1
  41dc80:	b.ne	41dccc <main@@Base+0xbd0>  // b.any
  41dc84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dc88:	add	x0, x0, #0x950
  41dc8c:	ldr	x0, [x0]
  41dc90:	bl	435774 <jobserver_parse_auth@@Base>
  41dc94:	cmp	w0, #0x0
  41dc98:	b.ne	41dd08 <main@@Base+0xc0c>  // b.any
  41dc9c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dca0:	add	x0, x0, #0x218
  41dca4:	bl	406e40 <gettext@plt>
  41dca8:	mov	x2, x0
  41dcac:	mov	x1, #0x0                   	// #0
  41dcb0:	mov	x0, #0x0                   	// #0
  41dcb4:	bl	423e74 <error@@Base>
  41dcb8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dcbc:	add	x0, x0, #0x1e0
  41dcc0:	mov	w1, #0x1                   	// #1
  41dcc4:	str	w1, [x0]
  41dcc8:	b	41dcf8 <main@@Base+0xbfc>
  41dccc:	ldr	w0, [x29, #6716]
  41dcd0:	cmp	w0, #0x0
  41dcd4:	b.ne	41dcf8 <main@@Base+0xbfc>  // b.any
  41dcd8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dcdc:	add	x0, x0, #0x268
  41dce0:	bl	406e40 <gettext@plt>
  41dce4:	ldr	w3, [x29, #6464]
  41dce8:	mov	x2, x0
  41dcec:	mov	x1, #0x14                  	// #20
  41dcf0:	mov	x0, #0x0                   	// #0
  41dcf4:	bl	423e74 <error@@Base>
  41dcf8:	bl	41d0c8 <gmk_add_function@@Base+0x9a4>
  41dcfc:	b	41dd0c <main@@Base+0xc10>
  41dd00:	nop
  41dd04:	b	41dd0c <main@@Base+0xc10>
  41dd08:	nop
  41dd0c:	ldr	x0, [x29, #48]
  41dd10:	ldr	x1, [x0]
  41dd14:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dd18:	add	x0, x0, #0x3b8
  41dd1c:	ldr	x0, [x0]
  41dd20:	ldr	x0, [x0, #8]
  41dd24:	mov	x6, #0x0                   	// #0
  41dd28:	mov	x5, x0
  41dd2c:	mov	w4, #0x0                   	// #0
  41dd30:	mov	w3, #0x0                   	// #0
  41dd34:	mov	x2, x1
  41dd38:	mov	x1, #0xc                   	// #12
  41dd3c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dd40:	add	x0, x0, #0x2a8
  41dd44:	bl	4316d8 <define_variable_in_set@@Base>
  41dd48:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dd4c:	add	x0, x0, #0x3b8
  41dd50:	ldr	x0, [x0]
  41dd54:	ldr	x0, [x0, #8]
  41dd58:	mov	x6, #0x0                   	// #0
  41dd5c:	mov	x5, x0
  41dd60:	mov	w4, #0x1                   	// #1
  41dd64:	mov	w3, #0x0                   	// #0
  41dd68:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dd6c:	add	x2, x0, #0x2b8
  41dd70:	mov	x1, #0x4                   	// #4
  41dd74:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dd78:	add	x0, x0, #0x2c8
  41dd7c:	bl	4316d8 <define_variable_in_set@@Base>
  41dd80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dd84:	add	x0, x0, #0x998
  41dd88:	ldr	x0, [x0]
  41dd8c:	cmp	x0, #0x0
  41dd90:	b.eq	41dfa8 <main@@Base+0xeac>  // b.none
  41dd94:	str	xzr, [x29, #6680]
  41dd98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dd9c:	add	x0, x0, #0x998
  41dda0:	ldr	x0, [x0]
  41dda4:	str	x0, [x29, #6688]
  41dda8:	b	41de38 <main@@Base+0xd3c>
  41ddac:	ldr	x0, [x29, #6688]
  41ddb0:	ldr	x0, [x0, #8]
  41ddb4:	str	x0, [x29, #6424]
  41ddb8:	ldr	x0, [x29, #6424]
  41ddbc:	ldr	x0, [x0]
  41ddc0:	bl	4066f0 <strlen@plt>
  41ddc4:	lsl	x0, x0, #1
  41ddc8:	ldr	x1, [x29, #6680]
  41ddcc:	add	x0, x1, x0
  41ddd0:	str	x0, [x29, #6680]
  41ddd4:	ldr	x0, [x29, #6424]
  41ddd8:	ldrb	w0, [x0, #44]
  41dddc:	and	w0, w0, #0x1
  41dde0:	and	w0, w0, #0xff
  41dde4:	cmp	w0, #0x0
  41dde8:	b.ne	41ddf8 <main@@Base+0xcfc>  // b.any
  41ddec:	ldr	x0, [x29, #6680]
  41ddf0:	add	x0, x0, #0x1
  41ddf4:	str	x0, [x29, #6680]
  41ddf8:	ldr	x0, [x29, #6680]
  41ddfc:	add	x0, x0, #0x1
  41de00:	str	x0, [x29, #6680]
  41de04:	ldr	x0, [x29, #6424]
  41de08:	ldr	x0, [x0, #8]
  41de0c:	bl	4066f0 <strlen@plt>
  41de10:	lsl	x0, x0, #1
  41de14:	ldr	x1, [x29, #6680]
  41de18:	add	x0, x1, x0
  41de1c:	str	x0, [x29, #6680]
  41de20:	ldr	x0, [x29, #6680]
  41de24:	add	x0, x0, #0x1
  41de28:	str	x0, [x29, #6680]
  41de2c:	ldr	x0, [x29, #6688]
  41de30:	ldr	x0, [x0]
  41de34:	str	x0, [x29, #6688]
  41de38:	ldr	x0, [x29, #6688]
  41de3c:	cmp	x0, #0x0
  41de40:	b.ne	41ddac <main@@Base+0xcb0>  // b.any
  41de44:	ldr	x0, [x29, #6680]
  41de48:	add	x0, x0, #0xf
  41de4c:	lsr	x0, x0, #4
  41de50:	lsl	x0, x0, #4
  41de54:	sub	sp, sp, x0
  41de58:	mov	x0, sp
  41de5c:	add	x0, x0, #0xf
  41de60:	lsr	x0, x0, #4
  41de64:	lsl	x0, x0, #4
  41de68:	str	x0, [x29, #6432]
  41de6c:	ldr	x0, [x29, #6432]
  41de70:	str	x0, [x29, #6672]
  41de74:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41de78:	add	x0, x0, #0x998
  41de7c:	ldr	x0, [x0]
  41de80:	str	x0, [x29, #6688]
  41de84:	b	41df24 <main@@Base+0xe28>
  41de88:	ldr	x0, [x29, #6688]
  41de8c:	ldr	x0, [x0, #8]
  41de90:	str	x0, [x29, #6424]
  41de94:	ldr	x0, [x29, #6424]
  41de98:	ldr	x0, [x0]
  41de9c:	mov	x1, x0
  41dea0:	ldr	x0, [x29, #6672]
  41dea4:	bl	420e1c <main@@Base+0x3d20>
  41dea8:	str	x0, [x29, #6672]
  41deac:	ldr	x0, [x29, #6424]
  41deb0:	ldrb	w0, [x0, #44]
  41deb4:	and	w0, w0, #0x1
  41deb8:	and	w0, w0, #0xff
  41debc:	cmp	w0, #0x0
  41dec0:	b.ne	41ded8 <main@@Base+0xddc>  // b.any
  41dec4:	ldr	x0, [x29, #6672]
  41dec8:	add	x1, x0, #0x1
  41decc:	str	x1, [x29, #6672]
  41ded0:	mov	w1, #0x3a                  	// #58
  41ded4:	strb	w1, [x0]
  41ded8:	ldr	x0, [x29, #6672]
  41dedc:	add	x1, x0, #0x1
  41dee0:	str	x1, [x29, #6672]
  41dee4:	mov	w1, #0x3d                  	// #61
  41dee8:	strb	w1, [x0]
  41deec:	ldr	x0, [x29, #6424]
  41def0:	ldr	x0, [x0, #8]
  41def4:	mov	x1, x0
  41def8:	ldr	x0, [x29, #6672]
  41defc:	bl	420e1c <main@@Base+0x3d20>
  41df00:	str	x0, [x29, #6672]
  41df04:	ldr	x0, [x29, #6672]
  41df08:	add	x1, x0, #0x1
  41df0c:	str	x1, [x29, #6672]
  41df10:	mov	w1, #0x20                  	// #32
  41df14:	strb	w1, [x0]
  41df18:	ldr	x0, [x29, #6688]
  41df1c:	ldr	x0, [x0]
  41df20:	str	x0, [x29, #6688]
  41df24:	ldr	x0, [x29, #6688]
  41df28:	cmp	x0, #0x0
  41df2c:	b.ne	41de88 <main@@Base+0xd8c>  // b.any
  41df30:	ldr	x0, [x29, #6672]
  41df34:	sub	x0, x0, #0x1
  41df38:	strb	wzr, [x0]
  41df3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41df40:	add	x0, x0, #0x3b8
  41df44:	ldr	x0, [x0]
  41df48:	ldr	x0, [x0, #8]
  41df4c:	mov	x6, #0x0                   	// #0
  41df50:	mov	x5, x0
  41df54:	mov	w4, #0x0                   	// #0
  41df58:	mov	w3, #0x6                   	// #6
  41df5c:	ldr	x2, [x29, #6432]
  41df60:	mov	x1, #0x17                  	// #23
  41df64:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41df68:	add	x0, x0, #0x2d0
  41df6c:	bl	4316d8 <define_variable_in_set@@Base>
  41df70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41df74:	add	x0, x0, #0x3b8
  41df78:	ldr	x0, [x0]
  41df7c:	ldr	x0, [x0, #8]
  41df80:	mov	x6, #0x0                   	// #0
  41df84:	mov	x5, x0
  41df88:	mov	w4, #0x1                   	// #1
  41df8c:	mov	w3, #0x1                   	// #1
  41df90:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41df94:	add	x2, x0, #0x2e8
  41df98:	mov	x1, #0xd                   	// #13
  41df9c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41dfa0:	add	x0, x0, #0x308
  41dfa4:	bl	4316d8 <define_variable_in_set@@Base>
  41dfa8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dfac:	add	x0, x0, #0x958
  41dfb0:	ldr	x0, [x0]
  41dfb4:	cmp	x0, #0x0
  41dfb8:	b.eq	41e034 <main@@Base+0xf38>  // b.none
  41dfbc:	str	wzr, [x29, #6668]
  41dfc0:	b	41e00c <main@@Base+0xf10>
  41dfc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41dfc8:	add	x0, x0, #0x958
  41dfcc:	ldr	x0, [x0]
  41dfd0:	ldr	x1, [x0]
  41dfd4:	ldr	w0, [x29, #6668]
  41dfd8:	lsl	x0, x0, #3
  41dfdc:	add	x0, x1, x0
  41dfe0:	ldr	x0, [x0]
  41dfe4:	str	x0, [x29, #6416]
  41dfe8:	ldr	x0, [x29, #6416]
  41dfec:	bl	406bf0 <chdir@plt>
  41dff0:	cmp	w0, #0x0
  41dff4:	b.ge	41e000 <main@@Base+0xf04>  // b.tcont
  41dff8:	ldr	x0, [x29, #6416]
  41dffc:	bl	424340 <pfatal_with_name@@Base>
  41e000:	ldr	w0, [x29, #6668]
  41e004:	add	w0, w0, #0x1
  41e008:	str	w0, [x29, #6668]
  41e00c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e010:	add	x0, x0, #0x958
  41e014:	ldr	x0, [x0]
  41e018:	ldr	x1, [x0]
  41e01c:	ldr	w0, [x29, #6668]
  41e020:	lsl	x0, x0, #3
  41e024:	add	x0, x1, x0
  41e028:	ldr	x0, [x0]
  41e02c:	cmp	x0, #0x0
  41e030:	b.ne	41dfc4 <main@@Base+0xec8>  // b.any
  41e034:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e038:	add	x0, x0, #0x928
  41e03c:	ldr	w0, [x0]
  41e040:	cmp	w0, #0x0
  41e044:	b.ne	41e080 <main@@Base+0xf84>  // b.any
  41e048:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e04c:	add	x0, x0, #0x958
  41e050:	ldr	x0, [x0]
  41e054:	cmp	x0, #0x0
  41e058:	b.ne	41e070 <main@@Base+0xf74>  // b.any
  41e05c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e060:	add	x0, x0, #0xa70
  41e064:	ldr	w0, [x0]
  41e068:	cmp	w0, #0x0
  41e06c:	b.eq	41e080 <main@@Base+0xf84>  // b.none
  41e070:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e074:	add	x0, x0, #0x704
  41e078:	mov	w1, #0x1                   	// #1
  41e07c:	str	w1, [x0]
  41e080:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e084:	add	x0, x0, #0x708
  41e088:	ldr	w0, [x0]
  41e08c:	cmp	w0, #0x0
  41e090:	b.eq	41e0a0 <main@@Base+0xfa4>  // b.none
  41e094:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e098:	add	x0, x0, #0x704
  41e09c:	str	wzr, [x0]
  41e0a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e0a4:	add	x0, x0, #0x6fc
  41e0a8:	ldr	w0, [x0]
  41e0ac:	cmp	w0, #0x0
  41e0b0:	b.eq	41e0c4 <main@@Base+0xfc8>  // b.none
  41e0b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e0b8:	add	x0, x0, #0x6f8
  41e0bc:	mov	w1, #0x1                   	// #1
  41e0c0:	str	w1, [x0]
  41e0c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e0c8:	add	x0, x0, #0x960
  41e0cc:	ldr	x0, [x0]
  41e0d0:	cmp	x0, #0x0
  41e0d4:	b.eq	41e0ec <main@@Base+0xff0>  // b.none
  41e0d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e0dc:	add	x0, x0, #0x960
  41e0e0:	ldr	x0, [x0]
  41e0e4:	ldr	x0, [x0]
  41e0e8:	b	41e0f0 <main@@Base+0xff4>
  41e0ec:	mov	x0, #0x0                   	// #0
  41e0f0:	bl	42a068 <construct_include_path@@Base>
  41e0f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e0f8:	add	x0, x0, #0x958
  41e0fc:	ldr	x0, [x0]
  41e100:	cmp	x0, #0x0
  41e104:	b.eq	41e150 <main@@Base+0x1054>  // b.none
  41e108:	add	x0, x29, #0x850
  41e10c:	mov	x1, #0x1000                	// #4096
  41e110:	bl	4066e0 <getcwd@plt>
  41e114:	cmp	x0, #0x0
  41e118:	b.ne	41e140 <main@@Base+0x1044>  // b.any
  41e11c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e120:	add	x1, x0, #0x70
  41e124:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e128:	add	x0, x0, #0x98
  41e12c:	bl	4242c0 <perror_with_name@@Base>
  41e130:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e134:	add	x0, x0, #0xa48
  41e138:	str	xzr, [x0]
  41e13c:	b	41e150 <main@@Base+0x1054>
  41e140:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e144:	add	x0, x0, #0xa48
  41e148:	add	x1, x29, #0x850
  41e14c:	str	x1, [x0]
  41e150:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e154:	add	x0, x0, #0x3b8
  41e158:	ldr	x0, [x0]
  41e15c:	ldr	x1, [x0, #8]
  41e160:	add	x0, x29, #0x850
  41e164:	mov	x6, #0x0                   	// #0
  41e168:	mov	x5, x1
  41e16c:	mov	w4, #0x0                   	// #0
  41e170:	mov	w3, #0x2                   	// #2
  41e174:	mov	x2, x0
  41e178:	mov	x1, #0x6                   	// #6
  41e17c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e180:	add	x0, x0, #0x318
  41e184:	bl	4316d8 <define_variable_in_set@@Base>
  41e188:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e18c:	add	x0, x0, #0x940
  41e190:	ldr	x0, [x0]
  41e194:	cmp	x0, #0x0
  41e198:	b.eq	41e4a0 <main@@Base+0x13a4>  // b.none
  41e19c:	str	wzr, [x29, #6664]
  41e1a0:	b	41e484 <main@@Base+0x1388>
  41e1a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e1a8:	add	x0, x0, #0x940
  41e1ac:	ldr	x0, [x0]
  41e1b0:	ldr	x1, [x0]
  41e1b4:	ldr	w0, [x29, #6664]
  41e1b8:	lsl	x0, x0, #3
  41e1bc:	add	x0, x1, x0
  41e1c0:	ldr	x0, [x0]
  41e1c4:	ldrb	w0, [x0]
  41e1c8:	cmp	w0, #0x2d
  41e1cc:	b.ne	41e478 <main@@Base+0x137c>  // b.any
  41e1d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e1d4:	add	x0, x0, #0x940
  41e1d8:	ldr	x0, [x0]
  41e1dc:	ldr	x1, [x0]
  41e1e0:	ldr	w0, [x29, #6664]
  41e1e4:	lsl	x0, x0, #3
  41e1e8:	add	x0, x1, x0
  41e1ec:	ldr	x0, [x0]
  41e1f0:	add	x0, x0, #0x1
  41e1f4:	ldrb	w0, [x0]
  41e1f8:	cmp	w0, #0x0
  41e1fc:	b.ne	41e478 <main@@Base+0x137c>  // b.any
  41e200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e204:	add	x0, x0, #0xfd0
  41e208:	ldr	x0, [x0]
  41e20c:	cmp	x0, #0x0
  41e210:	b.eq	41e230 <main@@Base+0x1134>  // b.none
  41e214:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e218:	add	x0, x0, #0x320
  41e21c:	bl	406e40 <gettext@plt>
  41e220:	mov	x2, x0
  41e224:	mov	x1, #0x0                   	// #0
  41e228:	mov	x0, #0x0                   	// #0
  41e22c:	bl	424098 <fatal@@Base>
  41e230:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e234:	add	x0, x0, #0x350
  41e238:	bl	406df0 <getenv@plt>
  41e23c:	str	x0, [x29, #6656]
  41e240:	ldr	x0, [x29, #6656]
  41e244:	cmp	x0, #0x0
  41e248:	b.eq	41e25c <main@@Base+0x1160>  // b.none
  41e24c:	ldr	x0, [x29, #6656]
  41e250:	ldrb	w0, [x0]
  41e254:	cmp	w0, #0x0
  41e258:	b.ne	41e268 <main@@Base+0x116c>  // b.any
  41e25c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e260:	add	x0, x0, #0x358
  41e264:	str	x0, [x29, #6656]
  41e268:	ldr	x0, [x29, #6656]
  41e26c:	bl	4066f0 <strlen@plt>
  41e270:	add	x0, x0, #0xa
  41e274:	add	x0, x0, #0xf
  41e278:	lsr	x0, x0, #4
  41e27c:	lsl	x0, x0, #4
  41e280:	sub	sp, sp, x0
  41e284:	mov	x0, sp
  41e288:	add	x0, x0, #0xf
  41e28c:	lsr	x0, x0, #4
  41e290:	lsl	x0, x0, #4
  41e294:	str	x0, [x29, #6408]
  41e298:	ldr	x1, [x29, #6656]
  41e29c:	ldr	x0, [x29, #6408]
  41e2a0:	bl	406ca0 <strcpy@plt>
  41e2a4:	ldr	x0, [x29, #6408]
  41e2a8:	bl	4066f0 <strlen@plt>
  41e2ac:	sub	x0, x0, #0x1
  41e2b0:	ldr	x1, [x29, #6408]
  41e2b4:	add	x0, x1, x0
  41e2b8:	ldrb	w0, [x0]
  41e2bc:	cmp	w0, #0x2f
  41e2c0:	b.eq	41e2e0 <main@@Base+0x11e4>  // b.none
  41e2c4:	ldr	x0, [x29, #6408]
  41e2c8:	bl	4066f0 <strlen@plt>
  41e2cc:	mov	x1, x0
  41e2d0:	ldr	x0, [x29, #6408]
  41e2d4:	add	x0, x0, x1
  41e2d8:	mov	w1, #0x2f                  	// #47
  41e2dc:	strh	w1, [x0]
  41e2e0:	ldr	x0, [x29, #6408]
  41e2e4:	bl	4066f0 <strlen@plt>
  41e2e8:	mov	x1, x0
  41e2ec:	ldr	x0, [x29, #6408]
  41e2f0:	add	x2, x0, x1
  41e2f4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e2f8:	add	x1, x0, #0x360
  41e2fc:	mov	x0, x2
  41e300:	ldr	x2, [x1]
  41e304:	str	x2, [x0]
  41e308:	ldrb	w1, [x1, #8]
  41e30c:	strb	w1, [x0, #8]
  41e310:	ldr	x1, [x29, #6408]
  41e314:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e318:	add	x0, x0, #0xfd0
  41e31c:	bl	422be0 <get_tmpfile@@Base>
  41e320:	str	x0, [x29, #6400]
  41e324:	ldr	x0, [x29, #6400]
  41e328:	cmp	x0, #0x0
  41e32c:	b.ne	41e3a4 <main@@Base+0x12a8>  // b.any
  41e330:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e334:	add	x0, x0, #0x370
  41e338:	bl	406e40 <gettext@plt>
  41e33c:	bl	424340 <pfatal_with_name@@Base>
  41e340:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e344:	add	x0, x0, #0x408
  41e348:	ldr	x1, [x0]
  41e34c:	add	x0, x29, #0x48
  41e350:	mov	x3, x1
  41e354:	mov	x2, #0x800                 	// #2048
  41e358:	mov	x1, #0x1                   	// #1
  41e35c:	bl	406be0 <fread@plt>
  41e360:	str	x0, [x29, #6392]
  41e364:	ldr	x0, [x29, #6392]
  41e368:	cmp	x0, #0x0
  41e36c:	b.eq	41e3a4 <main@@Base+0x12a8>  // b.none
  41e370:	add	x0, x29, #0x48
  41e374:	ldr	x3, [x29, #6400]
  41e378:	ldr	x2, [x29, #6392]
  41e37c:	mov	x1, #0x1                   	// #1
  41e380:	bl	406c50 <fwrite@plt>
  41e384:	mov	x1, x0
  41e388:	ldr	x0, [x29, #6392]
  41e38c:	cmp	x0, x1
  41e390:	b.eq	41e3a4 <main@@Base+0x12a8>  // b.none
  41e394:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e398:	add	x0, x0, #0x388
  41e39c:	bl	406e40 <gettext@plt>
  41e3a0:	bl	424340 <pfatal_with_name@@Base>
  41e3a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e3a8:	add	x0, x0, #0x408
  41e3ac:	ldr	x0, [x0]
  41e3b0:	bl	406b50 <feof@plt>
  41e3b4:	cmp	w0, #0x0
  41e3b8:	b.ne	41e3d4 <main@@Base+0x12d8>  // b.any
  41e3bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e3c0:	add	x0, x0, #0x408
  41e3c4:	ldr	x0, [x0]
  41e3c8:	bl	406e90 <ferror@plt>
  41e3cc:	cmp	w0, #0x0
  41e3d0:	b.eq	41e340 <main@@Base+0x1244>  // b.none
  41e3d4:	ldr	x0, [x29, #6400]
  41e3d8:	bl	4068e0 <fclose@plt>
  41e3dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e3e0:	add	x0, x0, #0xfd0
  41e3e4:	ldr	x2, [x0]
  41e3e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e3ec:	add	x0, x0, #0x940
  41e3f0:	ldr	x0, [x0]
  41e3f4:	ldr	x1, [x0]
  41e3f8:	ldr	w0, [x29, #6664]
  41e3fc:	lsl	x0, x0, #3
  41e400:	add	x19, x1, x0
  41e404:	mov	x0, x2
  41e408:	bl	430d78 <strcache_add@@Base>
  41e40c:	str	x0, [x19]
  41e410:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e414:	add	x0, x0, #0xfd0
  41e418:	ldr	x0, [x0]
  41e41c:	bl	430d78 <strcache_add@@Base>
  41e420:	bl	40c678 <enter_file@@Base>
  41e424:	str	x0, [x29, #6384]
  41e428:	ldr	x0, [x29, #6384]
  41e42c:	ldrb	w1, [x0, #137]
  41e430:	orr	w1, w1, #0x4
  41e434:	strb	w1, [x0, #137]
  41e438:	ldr	x0, [x29, #6384]
  41e43c:	ldrb	w1, [x0, #136]
  41e440:	and	w1, w1, #0xfffffffc
  41e444:	strb	w1, [x0, #136]
  41e448:	ldr	x0, [x29, #6384]
  41e44c:	ldrb	w1, [x0, #136]
  41e450:	orr	w1, w1, #0xc
  41e454:	strb	w1, [x0, #136]
  41e458:	ldr	x0, [x29, #6384]
  41e45c:	ldrb	w1, [x0, #137]
  41e460:	and	w1, w1, #0xffffffbf
  41e464:	strb	w1, [x0, #137]
  41e468:	ldr	x0, [x29, #6384]
  41e46c:	ldrb	w1, [x0, #138]
  41e470:	and	w1, w1, #0xfffffffe
  41e474:	strb	w1, [x0, #138]
  41e478:	ldr	w0, [x29, #6664]
  41e47c:	add	w0, w0, #0x1
  41e480:	str	w0, [x29, #6664]
  41e484:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e488:	add	x0, x0, #0x940
  41e48c:	ldr	x0, [x0]
  41e490:	ldr	w0, [x0, #8]
  41e494:	ldr	w1, [x29, #6664]
  41e498:	cmp	w1, w0
  41e49c:	b.cc	41e1a4 <main@@Base+0x10a8>  // b.lo, b.ul, b.last
  41e4a0:	adrp	x0, 417000 <stemlen_compare@@Base+0x15fc>
  41e4a4:	add	x1, x0, #0xc48
  41e4a8:	mov	w0, #0x11                  	// #17
  41e4ac:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41e4b0:	add	x0, x29, #0x48
  41e4b4:	bl	406970 <sigemptyset@plt>
  41e4b8:	add	x0, x29, #0x48
  41e4bc:	mov	w1, #0x11                  	// #17
  41e4c0:	bl	406da0 <sigaddset@plt>
  41e4c4:	add	x0, x29, #0x48
  41e4c8:	mov	x2, #0x0                   	// #0
  41e4cc:	mov	x1, x0
  41e4d0:	mov	w0, #0x2                   	// #2
  41e4d4:	bl	406750 <sigprocmask@plt>
  41e4d8:	cmp	w0, #0x0
  41e4dc:	b.ge	41e4ec <main@@Base+0x13f0>  // b.tcont
  41e4e0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e4e4:	add	x0, x0, #0x3a0
  41e4e8:	bl	424340 <pfatal_with_name@@Base>
  41e4ec:	adrp	x0, 41c000 <construct_command_argv@@Base+0x300>
  41e4f0:	add	x1, x0, #0xb28
  41e4f4:	mov	w0, #0xa                   	// #10
  41e4f8:	bl	41c770 <gmk_add_function@@Base+0x4c>
  41e4fc:	bl	409b94 <set_default_suffixes@@Base>
  41e500:	bl	409cf8 <install_default_suffix_rules@@Base>
  41e504:	bl	4328fc <define_automatic_variables@@Base>
  41e508:	mov	w1, #0x0                   	// #0
  41e50c:	mov	w0, #0x0                   	// #0
  41e510:	bl	420edc <main@@Base+0x3de0>
  41e514:	ldrb	w1, [x0, #47]
  41e518:	and	w1, w1, #0xffffff9f
  41e51c:	strb	w1, [x0, #47]
  41e520:	bl	409e74 <define_default_variables@@Base>
  41e524:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e528:	add	x0, x0, #0x3c8
  41e52c:	bl	430d78 <strcache_add@@Base>
  41e530:	bl	40c678 <enter_file@@Base>
  41e534:	mov	x1, x0
  41e538:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e53c:	add	x0, x0, #0xa78
  41e540:	str	x1, [x0]
  41e544:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e548:	add	x0, x0, #0x3b8
  41e54c:	ldr	x0, [x0]
  41e550:	ldr	x0, [x0, #8]
  41e554:	mov	x6, #0x0                   	// #0
  41e558:	mov	x5, x0
  41e55c:	mov	w4, #0x0                   	// #0
  41e560:	mov	w3, #0x2                   	// #2
  41e564:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e568:	add	x2, x0, #0x70
  41e56c:	mov	x1, #0xd                   	// #13
  41e570:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e574:	add	x0, x0, #0x3d8
  41e578:	bl	4316d8 <define_variable_in_set@@Base>
  41e57c:	mov	x1, x0
  41e580:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e584:	add	x0, x0, #0xa68
  41e588:	str	x1, [x0]
  41e58c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e590:	add	x0, x0, #0x978
  41e594:	ldr	x0, [x0]
  41e598:	cmp	x0, #0x0
  41e59c:	b.eq	41e748 <main@@Base+0x164c>  // b.none
  41e5a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e5a4:	add	x0, x0, #0x978
  41e5a8:	ldr	x0, [x0]
  41e5ac:	ldr	w0, [x0, #8]
  41e5b0:	mov	w0, w0
  41e5b4:	lsl	x0, x0, #3
  41e5b8:	str	x0, [x29, #6632]
  41e5bc:	str	wzr, [x29, #6644]
  41e5c0:	b	41e624 <main@@Base+0x1528>
  41e5c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e5c8:	add	x0, x0, #0x978
  41e5cc:	ldr	x0, [x0]
  41e5d0:	ldr	x1, [x0]
  41e5d4:	ldr	w0, [x29, #6644]
  41e5d8:	lsl	x0, x0, #3
  41e5dc:	add	x0, x1, x0
  41e5e0:	ldr	x0, [x0]
  41e5e4:	bl	422788 <xstrdup@@Base>
  41e5e8:	str	x0, [x29, #6648]
  41e5ec:	ldr	x0, [x29, #6648]
  41e5f0:	bl	4066f0 <strlen@plt>
  41e5f4:	lsl	x0, x0, #1
  41e5f8:	ldr	x1, [x29, #6632]
  41e5fc:	add	x0, x1, x0
  41e600:	str	x0, [x29, #6632]
  41e604:	mov	x1, #0x0                   	// #0
  41e608:	ldr	x0, [x29, #6648]
  41e60c:	bl	424c50 <eval_buffer@@Base>
  41e610:	ldr	x0, [x29, #6648]
  41e614:	bl	406c00 <free@plt>
  41e618:	ldr	w0, [x29, #6644]
  41e61c:	add	w0, w0, #0x1
  41e620:	str	w0, [x29, #6644]
  41e624:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e628:	add	x0, x0, #0x978
  41e62c:	ldr	x0, [x0]
  41e630:	ldr	w0, [x0, #8]
  41e634:	ldr	w1, [x29, #6644]
  41e638:	cmp	w1, w0
  41e63c:	b.cc	41e5c4 <main@@Base+0x14c8>  // b.lo, b.ul, b.last
  41e640:	ldr	x0, [x29, #6632]
  41e644:	add	x0, x0, #0xf
  41e648:	lsr	x0, x0, #4
  41e64c:	lsl	x0, x0, #4
  41e650:	sub	sp, sp, x0
  41e654:	mov	x0, sp
  41e658:	add	x0, x0, #0xf
  41e65c:	lsr	x0, x0, #4
  41e660:	lsl	x0, x0, #4
  41e664:	str	x0, [x29, #6376]
  41e668:	ldr	x0, [x29, #6376]
  41e66c:	str	x0, [x29, #6648]
  41e670:	str	wzr, [x29, #6644]
  41e674:	b	41e6ec <main@@Base+0x15f0>
  41e678:	ldr	x0, [x29, #6648]
  41e67c:	mov	x1, #0x2d2d                	// #11565
  41e680:	movk	x1, #0x7665, lsl #16
  41e684:	movk	x1, #0x6c61, lsl #32
  41e688:	movk	x1, #0x3d, lsl #48
  41e68c:	str	x1, [x0]
  41e690:	ldr	x0, [x29, #6648]
  41e694:	add	x0, x0, #0x7
  41e698:	str	x0, [x29, #6648]
  41e69c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e6a0:	add	x0, x0, #0x978
  41e6a4:	ldr	x0, [x0]
  41e6a8:	ldr	x1, [x0]
  41e6ac:	ldr	w0, [x29, #6644]
  41e6b0:	lsl	x0, x0, #3
  41e6b4:	add	x0, x1, x0
  41e6b8:	ldr	x0, [x0]
  41e6bc:	mov	x1, x0
  41e6c0:	ldr	x0, [x29, #6648]
  41e6c4:	bl	420e1c <main@@Base+0x3d20>
  41e6c8:	str	x0, [x29, #6648]
  41e6cc:	ldr	x0, [x29, #6648]
  41e6d0:	add	x1, x0, #0x1
  41e6d4:	str	x1, [x29, #6648]
  41e6d8:	mov	w1, #0x20                  	// #32
  41e6dc:	strb	w1, [x0]
  41e6e0:	ldr	w0, [x29, #6644]
  41e6e4:	add	w0, w0, #0x1
  41e6e8:	str	w0, [x29, #6644]
  41e6ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e6f0:	add	x0, x0, #0x978
  41e6f4:	ldr	x0, [x0]
  41e6f8:	ldr	w0, [x0, #8]
  41e6fc:	ldr	w1, [x29, #6644]
  41e700:	cmp	w1, w0
  41e704:	b.cc	41e678 <main@@Base+0x157c>  // b.lo, b.ul, b.last
  41e708:	ldr	x0, [x29, #6648]
  41e70c:	sub	x0, x0, #0x1
  41e710:	strb	wzr, [x0]
  41e714:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e718:	add	x0, x0, #0x3b8
  41e71c:	ldr	x0, [x0]
  41e720:	ldr	x0, [x0, #8]
  41e724:	mov	x6, #0x0                   	// #0
  41e728:	mov	x5, x0
  41e72c:	mov	w4, #0x0                   	// #0
  41e730:	mov	w3, #0x6                   	// #6
  41e734:	ldr	x2, [x29, #6376]
  41e738:	mov	x1, #0x10                  	// #16
  41e73c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e740:	add	x0, x0, #0x3e8
  41e744:	bl	4316d8 <define_variable_in_set@@Base>
  41e748:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e74c:	add	x0, x0, #0x940
  41e750:	ldr	x0, [x0]
  41e754:	cmp	x0, #0x0
  41e758:	b.eq	41e770 <main@@Base+0x1674>  // b.none
  41e75c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e760:	add	x0, x0, #0x940
  41e764:	ldr	x0, [x0]
  41e768:	ldr	x0, [x0]
  41e76c:	b	41e774 <main@@Base+0x1678>
  41e770:	mov	x0, #0x0                   	// #0
  41e774:	bl	424418 <read_all_makefiles@@Base>
  41e778:	str	x0, [x29, #6720]
  41e77c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e780:	add	x0, x0, #0x6f8
  41e784:	ldr	w0, [x0]
  41e788:	str	w0, [x29, #6372]
  41e78c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e790:	add	x0, x0, #0x6fc
  41e794:	ldr	w0, [x0]
  41e798:	str	w0, [x29, #6368]
  41e79c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e7a0:	add	x0, x0, #0x1e0
  41e7a4:	ldr	w0, [x0]
  41e7a8:	str	w0, [x29, #6364]
  41e7ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e7b0:	add	x0, x0, #0x1e0
  41e7b4:	mov	w1, #0xffffffff            	// #-1
  41e7b8:	str	w1, [x0]
  41e7bc:	mov	x1, #0xc                   	// #12
  41e7c0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e7c4:	add	x0, x0, #0x1b8
  41e7c8:	bl	420b00 <main@@Base+0x3a04>
  41e7cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e7d0:	add	x0, x0, #0x3b8
  41e7d4:	ldr	x0, [x0]
  41e7d8:	ldr	x0, [x0, #8]
  41e7dc:	mov	x6, #0x0                   	// #0
  41e7e0:	mov	x5, x0
  41e7e4:	mov	w4, #0x0                   	// #0
  41e7e8:	mov	w3, #0x5                   	// #5
  41e7ec:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e7f0:	add	x2, x0, #0x70
  41e7f4:	mov	x1, #0xc                   	// #12
  41e7f8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e7fc:	add	x0, x0, #0x1b8
  41e800:	bl	4316d8 <define_variable_in_set@@Base>
  41e804:	mov	x1, #0x9                   	// #9
  41e808:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e80c:	add	x0, x0, #0x1c8
  41e810:	bl	420b00 <main@@Base+0x3a04>
  41e814:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e818:	add	x0, x0, #0x1e0
  41e81c:	ldr	w0, [x0]
  41e820:	cmn	w0, #0x1
  41e824:	b.eq	41e834 <main@@Base+0x1738>  // b.none
  41e828:	ldr	w0, [x29, #6464]
  41e82c:	cmn	w0, #0x1
  41e830:	b.eq	41e848 <main@@Base+0x174c>  // b.none
  41e834:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e838:	add	x0, x0, #0x1e0
  41e83c:	ldr	w1, [x29, #6364]
  41e840:	str	w1, [x0]
  41e844:	b	41e89c <main@@Base+0x17a0>
  41e848:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e84c:	add	x0, x0, #0x950
  41e850:	ldr	x0, [x0]
  41e854:	cmp	x0, #0x0
  41e858:	b.eq	41e89c <main@@Base+0x17a0>  // b.none
  41e85c:	ldr	w0, [x29, #6716]
  41e860:	cmp	w0, #0x0
  41e864:	b.ne	41e898 <main@@Base+0x179c>  // b.any
  41e868:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e86c:	add	x0, x0, #0x400
  41e870:	bl	406e40 <gettext@plt>
  41e874:	mov	x1, x0
  41e878:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e87c:	add	x0, x0, #0x1e0
  41e880:	ldr	w0, [x0]
  41e884:	mov	w3, w0
  41e888:	mov	x2, x1
  41e88c:	mov	x1, #0x14                  	// #20
  41e890:	mov	x0, #0x0                   	// #0
  41e894:	bl	423e74 <error@@Base>
  41e898:	bl	41d0c8 <gmk_add_function@@Base+0x9a4>
  41e89c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e8a0:	add	x0, x0, #0x720
  41e8a4:	ldr	w0, [x0]
  41e8a8:	cmp	w0, #0x1
  41e8ac:	b.eq	41e8c4 <main@@Base+0x17c8>  // b.none
  41e8b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e8b4:	add	x0, x0, #0x720
  41e8b8:	ldr	w0, [x0]
  41e8bc:	cmp	w0, #0x2
  41e8c0:	b.ne	41e8cc <main@@Base+0x17d0>  // b.any
  41e8c4:	mov	w0, #0x1                   	// #1
  41e8c8:	b	41e8d0 <main@@Base+0x17d4>
  41e8cc:	mov	w0, #0x0                   	// #0
  41e8d0:	str	w0, [x29, #6484]
  41e8d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e8d8:	add	x0, x0, #0xa80
  41e8dc:	ldrb	w0, [x0, #8]
  41e8e0:	and	w0, w0, #0x1
  41e8e4:	and	w0, w0, #0xff
  41e8e8:	cmp	w0, #0x0
  41e8ec:	b.eq	41e908 <main@@Base+0x180c>  // b.none
  41e8f0:	ldr	w0, [x29, #6484]
  41e8f4:	cmp	w0, #0x0
  41e8f8:	b.ne	41e908 <main@@Base+0x180c>  // b.any
  41e8fc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e900:	add	x0, x0, #0xa80
  41e904:	bl	423a2c <output_close@@Base>
  41e908:	ldr	w0, [x29, #6484]
  41e90c:	and	w0, w0, #0x1
  41e910:	and	w2, w0, #0xff
  41e914:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e918:	add	x1, x0, #0xa80
  41e91c:	ldrb	w0, [x1, #8]
  41e920:	bfxil	w0, w2, #0, #1
  41e924:	strb	w0, [x1, #8]
  41e928:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e92c:	add	x0, x0, #0xa80
  41e930:	ldrb	w0, [x0, #8]
  41e934:	and	w0, w0, #0x1
  41e938:	and	w0, w0, #0xff
  41e93c:	cmp	w0, #0x0
  41e940:	b.eq	41e950 <main@@Base+0x1854>  // b.none
  41e944:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e948:	add	x0, x0, #0xa80
  41e94c:	b	41e954 <main@@Base+0x1858>
  41e950:	mov	x0, #0x0                   	// #0
  41e954:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41e958:	add	x1, x1, #0xff0
  41e95c:	str	x0, [x1]
  41e960:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e964:	add	x0, x0, #0x6f8
  41e968:	ldr	w0, [x0]
  41e96c:	cmp	w0, #0x0
  41e970:	b.eq	41e9fc <main@@Base+0x1900>  // b.none
  41e974:	ldr	w0, [x29, #6372]
  41e978:	cmp	w0, #0x0
  41e97c:	b.ne	41e9fc <main@@Base+0x1900>  // b.any
  41e980:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e984:	add	x0, x0, #0xb28
  41e988:	ldr	x0, [x0]
  41e98c:	ldrb	w0, [x0, #136]
  41e990:	and	w0, w0, #0x10
  41e994:	and	w0, w0, #0xff
  41e998:	cmp	w0, #0x0
  41e99c:	b.eq	41e9c4 <main@@Base+0x18c8>  // b.none
  41e9a0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e9a4:	add	x0, x0, #0xb28
  41e9a8:	ldr	x0, [x0]
  41e9ac:	ldr	x0, [x0, #24]
  41e9b0:	bl	422b98 <free_ns_chain@@Base>
  41e9b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41e9b8:	add	x0, x0, #0xb28
  41e9bc:	ldr	x0, [x0]
  41e9c0:	str	xzr, [x0, #24]
  41e9c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41e9c8:	add	x0, x0, #0x3b8
  41e9cc:	ldr	x0, [x0]
  41e9d0:	ldr	x0, [x0, #8]
  41e9d4:	mov	x6, #0x0                   	// #0
  41e9d8:	mov	x5, x0
  41e9dc:	mov	w4, #0x0                   	// #0
  41e9e0:	mov	w3, #0x0                   	// #0
  41e9e4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e9e8:	add	x2, x0, #0x70
  41e9ec:	mov	x1, #0x8                   	// #8
  41e9f0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41e9f4:	add	x0, x0, #0x440
  41e9f8:	bl	4316d8 <define_variable_in_set@@Base>
  41e9fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ea00:	add	x0, x0, #0x6fc
  41ea04:	ldr	w0, [x0]
  41ea08:	cmp	w0, #0x0
  41ea0c:	b.eq	41ea20 <main@@Base+0x1924>  // b.none
  41ea10:	ldr	w0, [x29, #6368]
  41ea14:	cmp	w0, #0x0
  41ea18:	b.ne	41ea20 <main@@Base+0x1924>  // b.any
  41ea1c:	bl	409f28 <undefine_default_variables@@Base>
  41ea20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ea24:	add	x0, x0, #0x950
  41ea28:	ldr	x0, [x0]
  41ea2c:	cmp	x0, #0x0
  41ea30:	b.eq	41ea44 <main@@Base+0x1948>  // b.none
  41ea34:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41ea38:	add	x0, x0, #0xb20
  41ea3c:	str	wzr, [x0]
  41ea40:	b	41ea88 <main@@Base+0x198c>
  41ea44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ea48:	add	x0, x0, #0x1e0
  41ea4c:	ldr	w0, [x0]
  41ea50:	cmn	w0, #0x1
  41ea54:	b.ne	41ea6c <main@@Base+0x1970>  // b.any
  41ea58:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41ea5c:	add	x0, x0, #0xb20
  41ea60:	mov	w1, #0x1                   	// #1
  41ea64:	str	w1, [x0]
  41ea68:	b	41ea88 <main@@Base+0x198c>
  41ea6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ea70:	add	x0, x0, #0x1e0
  41ea74:	ldr	w0, [x0]
  41ea78:	mov	w1, w0
  41ea7c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41ea80:	add	x0, x0, #0xb20
  41ea84:	str	w1, [x0]
  41ea88:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41ea8c:	add	x0, x0, #0xb20
  41ea90:	ldr	w0, [x0]
  41ea94:	cmp	w0, #0x1
  41ea98:	b.ls	41eb04 <main@@Base+0x1a08>  // b.plast
  41ea9c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eaa0:	add	x0, x0, #0xb20
  41eaa4:	ldr	w0, [x0]
  41eaa8:	sub	w0, w0, #0x1
  41eaac:	bl	43564c <jobserver_setup@@Base>
  41eab0:	cmp	w0, #0x0
  41eab4:	b.eq	41eb04 <main@@Base+0x1a08>  // b.none
  41eab8:	bl	4358ec <jobserver_get_auth@@Base>
  41eabc:	mov	x1, x0
  41eac0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eac4:	add	x0, x0, #0x950
  41eac8:	str	x1, [x0]
  41eacc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ead0:	add	x0, x0, #0x950
  41ead4:	ldr	x0, [x0]
  41ead8:	cmp	x0, #0x0
  41eadc:	b.eq	41eb04 <main@@Base+0x1a08>  // b.none
  41eae0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eae4:	add	x0, x0, #0xb20
  41eae8:	ldr	w1, [x0]
  41eaec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eaf0:	add	x0, x0, #0x948
  41eaf4:	str	w1, [x0]
  41eaf8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eafc:	add	x0, x0, #0xb20
  41eb00:	str	wzr, [x0]
  41eb04:	ldr	w0, [x29, #6484]
  41eb08:	cmp	w0, #0x0
  41eb0c:	b.eq	41eb4c <main@@Base+0x1a50>  // b.none
  41eb10:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eb14:	add	x0, x0, #0xb20
  41eb18:	ldr	w0, [x0]
  41eb1c:	cmp	w0, #0x1
  41eb20:	b.ne	41eb4c <main@@Base+0x1a50>  // b.any
  41eb24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eb28:	add	x0, x0, #0xff0
  41eb2c:	str	xzr, [x0]
  41eb30:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eb34:	add	x0, x0, #0xa80
  41eb38:	bl	423a2c <output_close@@Base>
  41eb3c:	str	wzr, [x29, #6484]
  41eb40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eb44:	add	x0, x0, #0x720
  41eb48:	str	wzr, [x0]
  41eb4c:	mov	w1, #0x0                   	// #0
  41eb50:	mov	w0, #0x1                   	// #1
  41eb54:	bl	420edc <main@@Base+0x3de0>
  41eb58:	bl	40dbc4 <snap_deps@@Base>
  41eb5c:	bl	42f7a8 <convert_to_pattern@@Base>
  41eb60:	bl	409dd8 <install_default_implicit_rules@@Base>
  41eb64:	bl	42f200 <snap_implicit_rules@@Base>
  41eb68:	bl	434684 <build_vpath_lists@@Base>
  41eb6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eb70:	add	x0, x0, #0x968
  41eb74:	ldr	x0, [x0]
  41eb78:	cmp	x0, #0x0
  41eb7c:	b.eq	41ec10 <main@@Base+0x1b14>  // b.none
  41eb80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eb84:	add	x0, x0, #0x968
  41eb88:	ldr	x0, [x0]
  41eb8c:	ldr	x0, [x0]
  41eb90:	str	x0, [x29, #6624]
  41eb94:	b	41ec00 <main@@Base+0x1b04>
  41eb98:	ldr	x0, [x29, #6624]
  41eb9c:	ldr	x0, [x0]
  41eba0:	bl	40c678 <enter_file@@Base>
  41eba4:	str	x0, [x29, #6352]
  41eba8:	ldr	x0, [x29, #6352]
  41ebac:	mov	x1, #0x2                   	// #2
  41ebb0:	str	x1, [x0, #120]
  41ebb4:	ldr	x0, [x29, #6352]
  41ebb8:	ldr	x1, [x0, #120]
  41ebbc:	ldr	x0, [x29, #6352]
  41ebc0:	str	x1, [x0, #112]
  41ebc4:	ldr	x0, [x29, #6352]
  41ebc8:	ldrb	w1, [x0, #137]
  41ebcc:	orr	w1, w1, #0x4
  41ebd0:	strb	w1, [x0, #137]
  41ebd4:	ldr	x0, [x29, #6352]
  41ebd8:	ldrb	w1, [x0, #136]
  41ebdc:	and	w1, w1, #0xfffffffc
  41ebe0:	strb	w1, [x0, #136]
  41ebe4:	ldr	x0, [x29, #6352]
  41ebe8:	ldrb	w1, [x0, #136]
  41ebec:	orr	w1, w1, #0xc
  41ebf0:	strb	w1, [x0, #136]
  41ebf4:	ldr	x0, [x29, #6624]
  41ebf8:	add	x0, x0, #0x8
  41ebfc:	str	x0, [x29, #6624]
  41ec00:	ldr	x0, [x29, #6624]
  41ec04:	ldr	x0, [x0]
  41ec08:	cmp	x0, #0x0
  41ec0c:	b.ne	41eb98 <main@@Base+0x1a9c>  // b.any
  41ec10:	ldr	w0, [x29, #6716]
  41ec14:	cmp	w0, #0x0
  41ec18:	b.ne	41ec90 <main@@Base+0x1b94>  // b.any
  41ec1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ec20:	add	x0, x0, #0x970
  41ec24:	ldr	x0, [x0]
  41ec28:	cmp	x0, #0x0
  41ec2c:	b.eq	41ec90 <main@@Base+0x1b94>  // b.none
  41ec30:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ec34:	add	x0, x0, #0x970
  41ec38:	ldr	x0, [x0]
  41ec3c:	ldr	x0, [x0]
  41ec40:	str	x0, [x29, #6616]
  41ec44:	b	41ec80 <main@@Base+0x1b84>
  41ec48:	ldr	x0, [x29, #6616]
  41ec4c:	ldr	x0, [x0]
  41ec50:	bl	40c678 <enter_file@@Base>
  41ec54:	str	x0, [x29, #6344]
  41ec58:	ldr	x0, [x29, #6344]
  41ec5c:	mov	x1, #0xffffffffffffffff    	// #-1
  41ec60:	str	x1, [x0, #120]
  41ec64:	ldr	x0, [x29, #6344]
  41ec68:	ldr	x1, [x0, #120]
  41ec6c:	ldr	x0, [x29, #6344]
  41ec70:	str	x1, [x0, #112]
  41ec74:	ldr	x0, [x29, #6616]
  41ec78:	add	x0, x0, #0x8
  41ec7c:	str	x0, [x29, #6616]
  41ec80:	ldr	x0, [x29, #6616]
  41ec84:	ldr	x0, [x0]
  41ec88:	cmp	x0, #0x0
  41ec8c:	b.ne	41ec48 <main@@Base+0x1b4c>  // b.any
  41ec90:	bl	436030 <remote_setup@@Base>
  41ec94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ec98:	add	x0, x0, #0xff0
  41ec9c:	str	xzr, [x0]
  41eca0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41eca4:	add	x0, x0, #0xa80
  41eca8:	bl	423a2c <output_close@@Base>
  41ecac:	ldr	x0, [x29, #6720]
  41ecb0:	cmp	x0, #0x0
  41ecb4:	b.eq	41f758 <main@@Base+0x265c>  // b.none
  41ecb8:	str	xzr, [x29, #6336]
  41ecbc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ecc0:	add	x0, x0, #0x6dc
  41ecc4:	ldr	w0, [x0]
  41ecc8:	and	w0, w0, #0x1
  41eccc:	cmp	w0, #0x0
  41ecd0:	b.eq	41ecf4 <main@@Base+0x1bf8>  // b.none
  41ecd4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41ecd8:	add	x0, x0, #0x450
  41ecdc:	bl	406e40 <gettext@plt>
  41ece0:	bl	406dc0 <printf@plt>
  41ece4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ece8:	add	x0, x0, #0x400
  41ecec:	ldr	x0, [x0]
  41ecf0:	bl	406c90 <fflush@plt>
  41ecf4:	str	wzr, [x29, #6596]
  41ecf8:	ldr	x0, [x29, #6720]
  41ecfc:	str	x0, [x29, #6600]
  41ed00:	b	41ed1c <main@@Base+0x1c20>
  41ed04:	ldr	w0, [x29, #6596]
  41ed08:	add	w0, w0, #0x1
  41ed0c:	str	w0, [x29, #6596]
  41ed10:	ldr	x0, [x29, #6600]
  41ed14:	ldr	x0, [x0]
  41ed18:	str	x0, [x29, #6600]
  41ed1c:	ldr	x0, [x29, #6600]
  41ed20:	cmp	x0, #0x0
  41ed24:	b.ne	41ed04 <main@@Base+0x1c08>  // b.any
  41ed28:	ldr	w0, [x29, #6596]
  41ed2c:	lsl	x0, x0, #3
  41ed30:	add	x0, x0, #0xf
  41ed34:	lsr	x0, x0, #4
  41ed38:	lsl	x0, x0, #4
  41ed3c:	sub	sp, sp, x0
  41ed40:	mov	x0, sp
  41ed44:	add	x0, x0, #0xf
  41ed48:	lsr	x0, x0, #4
  41ed4c:	lsl	x0, x0, #4
  41ed50:	str	x0, [x29, #6328]
  41ed54:	ldr	x0, [x29, #6720]
  41ed58:	str	x0, [x29, #6584]
  41ed5c:	str	xzr, [x29, #6576]
  41ed60:	str	wzr, [x29, #6572]
  41ed64:	b	41eed4 <main@@Base+0x1dd8>
  41ed68:	ldr	x0, [x29, #6584]
  41ed6c:	ldr	x0, [x0, #16]
  41ed70:	ldr	x0, [x0, #104]
  41ed74:	str	x0, [x29, #6560]
  41ed78:	b	41eda8 <main@@Base+0x1cac>
  41ed7c:	ldr	x0, [x29, #6560]
  41ed80:	ldr	x0, [x0, #24]
  41ed84:	cmp	x0, #0x0
  41ed88:	b.ne	41ed9c <main@@Base+0x1ca0>  // b.any
  41ed8c:	ldr	x0, [x29, #6560]
  41ed90:	ldr	x0, [x0, #32]
  41ed94:	cmp	x0, #0x0
  41ed98:	b.ne	41edb8 <main@@Base+0x1cbc>  // b.any
  41ed9c:	ldr	x0, [x29, #6560]
  41eda0:	ldr	x0, [x0, #56]
  41eda4:	str	x0, [x29, #6560]
  41eda8:	ldr	x0, [x29, #6560]
  41edac:	cmp	x0, #0x0
  41edb0:	b.ne	41ed7c <main@@Base+0x1c80>  // b.any
  41edb4:	b	41edbc <main@@Base+0x1cc0>
  41edb8:	nop
  41edbc:	ldr	x0, [x29, #6560]
  41edc0:	cmp	x0, #0x0
  41edc4:	b.eq	41ee6c <main@@Base+0x1d70>  // b.none
  41edc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41edcc:	add	x0, x0, #0x6dc
  41edd0:	ldr	w0, [x0]
  41edd4:	and	w0, w0, #0x2
  41edd8:	cmp	w0, #0x0
  41eddc:	b.eq	41ee14 <main@@Base+0x1d18>  // b.none
  41ede0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41ede4:	add	x0, x0, #0x468
  41ede8:	bl	406e40 <gettext@plt>
  41edec:	mov	x2, x0
  41edf0:	ldr	x0, [x29, #6560]
  41edf4:	ldr	x0, [x0]
  41edf8:	mov	x1, x0
  41edfc:	mov	x0, x2
  41ee00:	bl	406dc0 <printf@plt>
  41ee04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ee08:	add	x0, x0, #0x400
  41ee0c:	ldr	x0, [x0]
  41ee10:	bl	406c90 <fflush@plt>
  41ee14:	ldr	x0, [x29, #6576]
  41ee18:	cmp	x0, #0x0
  41ee1c:	b.eq	41ee34 <main@@Base+0x1d38>  // b.none
  41ee20:	ldr	x0, [x29, #6584]
  41ee24:	ldr	x1, [x0]
  41ee28:	ldr	x0, [x29, #6576]
  41ee2c:	str	x1, [x0]
  41ee30:	b	41ee40 <main@@Base+0x1d44>
  41ee34:	ldr	x0, [x29, #6584]
  41ee38:	ldr	x0, [x0]
  41ee3c:	str	x0, [x29, #6720]
  41ee40:	ldr	x0, [x29, #6584]
  41ee44:	bl	406c00 <free@plt>
  41ee48:	ldr	x0, [x29, #6576]
  41ee4c:	cmp	x0, #0x0
  41ee50:	b.eq	41ee60 <main@@Base+0x1d64>  // b.none
  41ee54:	ldr	x0, [x29, #6576]
  41ee58:	ldr	x0, [x0]
  41ee5c:	b	41ee64 <main@@Base+0x1d68>
  41ee60:	ldr	x0, [x29, #6720]
  41ee64:	str	x0, [x29, #6584]
  41ee68:	b	41eed4 <main@@Base+0x1dd8>
  41ee6c:	ldr	x0, [x29, #6584]
  41ee70:	ldr	x0, [x0, #16]
  41ee74:	ldr	x0, [x0, #112]
  41ee78:	cmp	x0, #0x0
  41ee7c:	b.ne	41ee94 <main@@Base+0x1d98>  // b.any
  41ee80:	ldr	x0, [x29, #6584]
  41ee84:	ldr	x0, [x0, #16]
  41ee88:	mov	w1, #0x0                   	// #0
  41ee8c:	bl	42e3cc <f_mtime@@Base>
  41ee90:	b	41eea0 <main@@Base+0x1da4>
  41ee94:	ldr	x0, [x29, #6584]
  41ee98:	ldr	x0, [x0, #16]
  41ee9c:	ldr	x0, [x0, #112]
  41eea0:	ldr	w1, [x29, #6572]
  41eea4:	add	w2, w1, #0x1
  41eea8:	str	w2, [x29, #6572]
  41eeac:	mov	w1, w1
  41eeb0:	lsl	x1, x1, #3
  41eeb4:	ldr	x2, [x29, #6328]
  41eeb8:	add	x1, x2, x1
  41eebc:	str	x0, [x1]
  41eec0:	ldr	x0, [x29, #6584]
  41eec4:	str	x0, [x29, #6576]
  41eec8:	ldr	x0, [x29, #6584]
  41eecc:	ldr	x0, [x0]
  41eed0:	str	x0, [x29, #6584]
  41eed4:	ldr	x0, [x29, #6584]
  41eed8:	cmp	x0, #0x0
  41eedc:	b.ne	41ed68 <main@@Base+0x1c6c>  // b.any
  41eee0:	mov	w1, #0x1                   	// #1
  41eee4:	mov	w0, #0x1                   	// #1
  41eee8:	bl	420edc <main@@Base+0x3de0>
  41eeec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41eef0:	add	x0, x0, #0x6dc
  41eef4:	ldr	w0, [x0]
  41eef8:	str	w0, [x29, #6324]
  41eefc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ef00:	add	x0, x0, #0x6dc
  41ef04:	ldr	w0, [x0]
  41ef08:	and	w0, w0, #0x100
  41ef0c:	cmp	w0, #0x0
  41ef10:	b.ne	41ef20 <main@@Base+0x1e24>  // b.any
  41ef14:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ef18:	add	x0, x0, #0x6dc
  41ef1c:	str	wzr, [x0]
  41ef20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ef24:	add	x0, x0, #0x71c
  41ef28:	mov	w1, #0x1                   	// #1
  41ef2c:	str	w1, [x0]
  41ef30:	ldr	x0, [x29, #6720]
  41ef34:	bl	42aed0 <update_goal_chain@@Base>
  41ef38:	str	w0, [x29, #6320]
  41ef3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ef40:	add	x0, x0, #0x71c
  41ef44:	str	wzr, [x0]
  41ef48:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ef4c:	add	x0, x0, #0x6dc
  41ef50:	ldr	w1, [x29, #6324]
  41ef54:	str	w1, [x0]
  41ef58:	ldr	w0, [x29, #6320]
  41ef5c:	cmp	w0, #0x3
  41ef60:	b.eq	41ef8c <main@@Base+0x1e90>  // b.none
  41ef64:	ldr	w0, [x29, #6320]
  41ef68:	cmp	w0, #0x3
  41ef6c:	b.hi	41f764 <main@@Base+0x2668>  // b.pmore
  41ef70:	ldr	w0, [x29, #6320]
  41ef74:	cmp	w0, #0x0
  41ef78:	b.eq	41f218 <main@@Base+0x211c>  // b.none
  41ef7c:	ldr	w0, [x29, #6320]
  41ef80:	sub	w0, w0, #0x1
  41ef84:	cmp	w0, #0x1
  41ef88:	b	41f764 <main@@Base+0x2668>
  41ef8c:	str	wzr, [x29, #6556]
  41ef90:	str	wzr, [x29, #6552]
  41ef94:	str	wzr, [x29, #6548]
  41ef98:	ldr	x0, [x29, #6720]
  41ef9c:	str	x0, [x29, #6536]
  41efa0:	b	41f1e8 <main@@Base+0x20ec>
  41efa4:	ldr	x0, [x29, #6536]
  41efa8:	ldr	x0, [x0, #16]
  41efac:	ldrb	w0, [x0, #137]
  41efb0:	and	w0, w0, #0x4
  41efb4:	and	w0, w0, #0xff
  41efb8:	cmp	w0, #0x0
  41efbc:	b.eq	41f124 <main@@Base+0x2028>  // b.none
  41efc0:	ldr	x0, [x29, #6536]
  41efc4:	ldr	x0, [x0, #16]
  41efc8:	ldrb	w0, [x0, #136]
  41efcc:	and	w0, w0, #0x3
  41efd0:	and	w0, w0, #0xff
  41efd4:	cmp	w0, #0x0
  41efd8:	b.ne	41f044 <main@@Base+0x1f48>  // b.any
  41efdc:	ldr	x0, [x29, #6536]
  41efe0:	ldr	x0, [x0, #16]
  41efe4:	ldr	x0, [x0, #112]
  41efe8:	cmp	x0, #0x0
  41efec:	b.ne	41f004 <main@@Base+0x1f08>  // b.any
  41eff0:	ldr	x0, [x29, #6536]
  41eff4:	ldr	x0, [x0, #16]
  41eff8:	mov	w1, #0x0                   	// #0
  41effc:	bl	42e3cc <f_mtime@@Base>
  41f000:	b	41f010 <main@@Base+0x1f14>
  41f004:	ldr	x0, [x29, #6536]
  41f008:	ldr	x0, [x0, #16]
  41f00c:	ldr	x0, [x0, #112]
  41f010:	ldr	w1, [x29, #6548]
  41f014:	lsl	x1, x1, #3
  41f018:	ldr	x2, [x29, #6328]
  41f01c:	add	x1, x2, x1
  41f020:	ldr	x1, [x1]
  41f024:	cmp	x0, x1
  41f028:	cset	w0, ne  // ne = any
  41f02c:	and	w0, w0, #0xff
  41f030:	mov	w1, w0
  41f034:	ldr	w0, [x29, #6556]
  41f038:	orr	w0, w0, w1
  41f03c:	str	w0, [x29, #6556]
  41f040:	b	41f1d0 <main@@Base+0x20d4>
  41f044:	ldr	x0, [x29, #6536]
  41f048:	ldrb	w0, [x0, #32]
  41f04c:	and	w0, w0, #0x4
  41f050:	cmp	w0, #0x0
  41f054:	b.ne	41f1d0 <main@@Base+0x20d4>  // b.any
  41f058:	ldr	x0, [x29, #6536]
  41f05c:	ldr	x0, [x0, #16]
  41f060:	ldr	x0, [x0]
  41f064:	bl	4066f0 <strlen@plt>
  41f068:	mov	x19, x0
  41f06c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f070:	add	x0, x0, #0x498
  41f074:	bl	406e40 <gettext@plt>
  41f078:	mov	x1, x0
  41f07c:	ldr	x0, [x29, #6536]
  41f080:	ldr	x0, [x0, #16]
  41f084:	ldr	x0, [x0]
  41f088:	mov	x3, x0
  41f08c:	mov	x2, x1
  41f090:	mov	x1, x19
  41f094:	mov	x0, #0x0                   	// #0
  41f098:	bl	423e74 <error@@Base>
  41f09c:	ldr	x0, [x29, #6536]
  41f0a0:	ldr	x0, [x0, #16]
  41f0a4:	ldr	x0, [x0, #112]
  41f0a8:	cmp	x0, #0x0
  41f0ac:	b.ne	41f0c4 <main@@Base+0x1fc8>  // b.any
  41f0b0:	ldr	x0, [x29, #6536]
  41f0b4:	ldr	x0, [x0, #16]
  41f0b8:	mov	w1, #0x0                   	// #0
  41f0bc:	bl	42e3cc <f_mtime@@Base>
  41f0c0:	b	41f0d0 <main@@Base+0x1fd4>
  41f0c4:	ldr	x0, [x29, #6536]
  41f0c8:	ldr	x0, [x0, #16]
  41f0cc:	ldr	x0, [x0, #112]
  41f0d0:	str	x0, [x29, #6296]
  41f0d4:	ldr	x0, [x29, #6296]
  41f0d8:	cmp	x0, #0x1
  41f0dc:	b.eq	41f108 <main@@Base+0x200c>  // b.none
  41f0e0:	ldr	w0, [x29, #6548]
  41f0e4:	lsl	x0, x0, #3
  41f0e8:	ldr	x1, [x29, #6328]
  41f0ec:	add	x0, x1, x0
  41f0f0:	ldr	x0, [x0]
  41f0f4:	ldr	x1, [x29, #6296]
  41f0f8:	cmp	x1, x0
  41f0fc:	b.eq	41f108 <main@@Base+0x200c>  // b.none
  41f100:	mov	w0, #0x1                   	// #1
  41f104:	b	41f10c <main@@Base+0x2010>
  41f108:	mov	w0, #0x0                   	// #0
  41f10c:	ldr	w1, [x29, #6556]
  41f110:	orr	w0, w1, w0
  41f114:	str	w0, [x29, #6556]
  41f118:	mov	w0, #0x2                   	// #2
  41f11c:	str	w0, [x29, #6732]
  41f120:	b	41f1d0 <main@@Base+0x20d4>
  41f124:	ldr	x0, [x29, #6536]
  41f128:	ldrb	w0, [x0, #32]
  41f12c:	and	w0, w0, #0x4
  41f130:	cmp	w0, #0x0
  41f134:	b.ne	41f1d0 <main@@Base+0x20d4>  // b.any
  41f138:	ldr	x0, [x29, #6536]
  41f13c:	ldr	x0, [x0, #8]
  41f140:	cmp	x0, #0x0
  41f144:	b.eq	41f154 <main@@Base+0x2058>  // b.none
  41f148:	ldr	x0, [x29, #6536]
  41f14c:	ldr	x0, [x0, #8]
  41f150:	b	41f160 <main@@Base+0x2064>
  41f154:	ldr	x0, [x29, #6536]
  41f158:	ldr	x0, [x0, #16]
  41f15c:	ldr	x0, [x0]
  41f160:	str	x0, [x29, #6312]
  41f164:	ldr	x0, [x29, #6312]
  41f168:	bl	4066f0 <strlen@plt>
  41f16c:	str	x0, [x29, #6304]
  41f170:	ldr	x0, [x29, #6536]
  41f174:	ldrb	w0, [x0, #32]
  41f178:	and	w0, w0, #0x2
  41f17c:	cmp	w0, #0x0
  41f180:	b.eq	41f1a8 <main@@Base+0x20ac>  // b.none
  41f184:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f188:	add	x0, x0, #0x4b8
  41f18c:	bl	406e40 <gettext@plt>
  41f190:	ldr	x3, [x29, #6312]
  41f194:	mov	x2, x0
  41f198:	ldr	x1, [x29, #6304]
  41f19c:	mov	x0, #0x0                   	// #0
  41f1a0:	bl	423e74 <error@@Base>
  41f1a4:	b	41f1d0 <main@@Base+0x20d4>
  41f1a8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f1ac:	add	x0, x0, #0x4e0
  41f1b0:	bl	406e40 <gettext@plt>
  41f1b4:	ldr	x3, [x29, #6312]
  41f1b8:	mov	x2, x0
  41f1bc:	ldr	x1, [x29, #6304]
  41f1c0:	mov	x0, #0x0                   	// #0
  41f1c4:	bl	423e74 <error@@Base>
  41f1c8:	mov	w0, #0x1                   	// #1
  41f1cc:	str	w0, [x29, #6552]
  41f1d0:	ldr	w0, [x29, #6548]
  41f1d4:	add	w0, w0, #0x1
  41f1d8:	str	w0, [x29, #6548]
  41f1dc:	ldr	x0, [x29, #6536]
  41f1e0:	ldr	x0, [x0]
  41f1e4:	str	x0, [x29, #6536]
  41f1e8:	ldr	x0, [x29, #6536]
  41f1ec:	cmp	x0, #0x0
  41f1f0:	b.ne	41efa4 <main@@Base+0x1ea8>  // b.any
  41f1f4:	ldr	w0, [x29, #6556]
  41f1f8:	cmp	w0, #0x0
  41f1fc:	b.ne	41f214 <main@@Base+0x2118>  // b.any
  41f200:	ldr	w0, [x29, #6552]
  41f204:	cmp	w0, #0x0
  41f208:	b.eq	41f760 <main@@Base+0x2664>  // b.none
  41f20c:	mov	w0, #0x2                   	// #2
  41f210:	bl	421fbc <die@@Base>
  41f214:	nop
  41f218:	mov	w0, #0x0                   	// #0
  41f21c:	bl	40cf10 <remove_intermediates@@Base>
  41f220:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f224:	add	x0, x0, #0x6f0
  41f228:	ldr	w0, [x0]
  41f22c:	cmp	w0, #0x0
  41f230:	b.eq	41f238 <main@@Base+0x213c>  // b.none
  41f234:	bl	421e14 <main@@Base+0x4d18>
  41f238:	mov	w0, #0x0                   	// #0
  41f23c:	bl	421eb4 <main@@Base+0x4db8>
  41f240:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f244:	add	x0, x0, #0x940
  41f248:	ldr	x0, [x0]
  41f24c:	cmp	x0, #0x0
  41f250:	b.eq	41f378 <main@@Base+0x227c>  // b.none
  41f254:	str	wzr, [x29, #6528]
  41f258:	mov	w0, #0x1                   	// #1
  41f25c:	str	w0, [x29, #6532]
  41f260:	b	41f368 <main@@Base+0x226c>
  41f264:	ldrsw	x0, [x29, #6532]
  41f268:	lsl	x0, x0, #3
  41f26c:	ldr	x1, [x29, #48]
  41f270:	add	x0, x1, x0
  41f274:	ldr	x3, [x0]
  41f278:	mov	x2, #0x2                   	// #2
  41f27c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f280:	add	x1, x0, #0x500
  41f284:	mov	x0, x3
  41f288:	bl	406990 <strncmp@plt>
  41f28c:	cmp	w0, #0x0
  41f290:	b.ne	41f35c <main@@Base+0x2260>  // b.any
  41f294:	ldrsw	x0, [x29, #6532]
  41f298:	lsl	x0, x0, #3
  41f29c:	ldr	x1, [x29, #48]
  41f2a0:	add	x0, x1, x0
  41f2a4:	ldr	x0, [x0]
  41f2a8:	add	x0, x0, #0x2
  41f2ac:	ldrb	w0, [x0]
  41f2b0:	cmp	w0, #0x0
  41f2b4:	b.ne	41f2fc <main@@Base+0x2200>  // b.any
  41f2b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f2bc:	add	x0, x0, #0x940
  41f2c0:	ldr	x0, [x0]
  41f2c4:	ldr	x1, [x0]
  41f2c8:	ldrsw	x0, [x29, #6528]
  41f2cc:	lsl	x0, x0, #3
  41f2d0:	add	x1, x1, x0
  41f2d4:	ldr	w0, [x29, #6532]
  41f2d8:	add	w0, w0, #0x1
  41f2dc:	str	w0, [x29, #6532]
  41f2e0:	ldrsw	x0, [x29, #6532]
  41f2e4:	lsl	x0, x0, #3
  41f2e8:	ldr	x2, [x29, #48]
  41f2ec:	add	x0, x2, x0
  41f2f0:	ldr	x1, [x1]
  41f2f4:	str	x1, [x0]
  41f2f8:	b	41f350 <main@@Base+0x2254>
  41f2fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f300:	add	x0, x0, #0x940
  41f304:	ldr	x0, [x0]
  41f308:	ldr	x1, [x0]
  41f30c:	ldrsw	x0, [x29, #6528]
  41f310:	lsl	x0, x0, #3
  41f314:	add	x0, x1, x0
  41f318:	ldr	x0, [x0]
  41f31c:	mov	x2, x0
  41f320:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f324:	add	x1, x0, #0x500
  41f328:	mov	w0, #0x2                   	// #2
  41f32c:	bl	422404 <concat@@Base>
  41f330:	mov	x2, x0
  41f334:	ldrsw	x0, [x29, #6532]
  41f338:	lsl	x0, x0, #3
  41f33c:	ldr	x1, [x29, #48]
  41f340:	add	x19, x1, x0
  41f344:	mov	x0, x2
  41f348:	bl	422788 <xstrdup@@Base>
  41f34c:	str	x0, [x19]
  41f350:	ldr	w0, [x29, #6528]
  41f354:	add	w0, w0, #0x1
  41f358:	str	w0, [x29, #6528]
  41f35c:	ldr	w0, [x29, #6532]
  41f360:	add	w0, w0, #0x1
  41f364:	str	w0, [x29, #6532]
  41f368:	ldr	w1, [x29, #6532]
  41f36c:	ldr	w0, [x29, #60]
  41f370:	cmp	w1, w0
  41f374:	b.lt	41f264 <main@@Base+0x2168>  // b.tstop
  41f378:	ldr	w0, [x29, #60]
  41f37c:	str	w0, [x29, #6292]
  41f380:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f384:	add	x0, x0, #0xfd0
  41f388:	ldr	x0, [x0]
  41f38c:	cmp	x0, #0x0
  41f390:	b.eq	41f438 <main@@Base+0x233c>  // b.none
  41f394:	ldr	w0, [x29, #6292]
  41f398:	add	w0, w0, #0x2
  41f39c:	sxtw	x0, w0
  41f3a0:	lsl	x0, x0, #3
  41f3a4:	bl	42268c <xmalloc@@Base>
  41f3a8:	str	x0, [x29, #6280]
  41f3ac:	ldr	x0, [x29, #6280]
  41f3b0:	str	x0, [x29, #6336]
  41f3b4:	ldrsw	x0, [x29, #60]
  41f3b8:	lsl	x0, x0, #3
  41f3bc:	mov	x2, x0
  41f3c0:	ldr	x1, [x29, #48]
  41f3c4:	ldr	x0, [x29, #6336]
  41f3c8:	bl	4066b0 <memcpy@plt>
  41f3cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f3d0:	add	x0, x0, #0xfd0
  41f3d4:	ldr	x0, [x0]
  41f3d8:	mov	x2, x0
  41f3dc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f3e0:	add	x1, x0, #0x508
  41f3e4:	mov	w0, #0x2                   	// #2
  41f3e8:	bl	422404 <concat@@Base>
  41f3ec:	mov	x2, x0
  41f3f0:	ldr	w0, [x29, #6292]
  41f3f4:	add	w1, w0, #0x1
  41f3f8:	str	w1, [x29, #6292]
  41f3fc:	sxtw	x0, w0
  41f400:	lsl	x0, x0, #3
  41f404:	ldr	x1, [x29, #6336]
  41f408:	add	x19, x1, x0
  41f40c:	mov	x0, x2
  41f410:	bl	422788 <xstrdup@@Base>
  41f414:	str	x0, [x19]
  41f418:	ldrsw	x0, [x29, #6292]
  41f41c:	lsl	x0, x0, #3
  41f420:	ldr	x1, [x29, #6336]
  41f424:	add	x0, x1, x0
  41f428:	str	xzr, [x0]
  41f42c:	ldr	x0, [x29, #6280]
  41f430:	str	x0, [x29, #6608]
  41f434:	b	41f440 <main@@Base+0x2344>
  41f438:	ldr	x0, [x29, #48]
  41f43c:	str	x0, [x29, #6608]
  41f440:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f444:	add	x0, x0, #0x958
  41f448:	ldr	x0, [x0]
  41f44c:	cmp	x0, #0x0
  41f450:	b.eq	41f4e4 <main@@Base+0x23e8>  // b.none
  41f454:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f458:	add	x0, x0, #0x958
  41f45c:	ldr	x0, [x0]
  41f460:	ldr	w0, [x0, #8]
  41f464:	cmp	w0, #0x0
  41f468:	b.eq	41f4e4 <main@@Base+0x23e8>  // b.none
  41f46c:	mov	w0, #0x1                   	// #1
  41f470:	str	w0, [x29, #6524]
  41f474:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f478:	add	x0, x0, #0xa08
  41f47c:	ldr	x0, [x0]
  41f480:	cmp	x0, #0x0
  41f484:	b.eq	41f4bc <main@@Base+0x23c0>  // b.none
  41f488:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f48c:	add	x0, x0, #0xa08
  41f490:	ldr	x0, [x0]
  41f494:	bl	406bf0 <chdir@plt>
  41f498:	cmp	w0, #0x0
  41f49c:	b.ge	41f4b8 <main@@Base+0x23bc>  // b.tcont
  41f4a0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f4a4:	add	x1, x0, #0x70
  41f4a8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f4ac:	add	x0, x0, #0x510
  41f4b0:	bl	4242c0 <perror_with_name@@Base>
  41f4b4:	b	41f4bc <main@@Base+0x23c0>
  41f4b8:	str	wzr, [x29, #6524]
  41f4bc:	ldr	w0, [x29, #6524]
  41f4c0:	cmp	w0, #0x0
  41f4c4:	b.eq	41f4e4 <main@@Base+0x23e8>  // b.none
  41f4c8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f4cc:	add	x0, x0, #0x518
  41f4d0:	bl	406e40 <gettext@plt>
  41f4d4:	mov	x2, x0
  41f4d8:	mov	x1, #0x0                   	// #0
  41f4dc:	mov	x0, #0x0                   	// #0
  41f4e0:	bl	424098 <fatal@@Base>
  41f4e4:	ldr	w0, [x29, #6716]
  41f4e8:	add	w0, w0, #0x1
  41f4ec:	str	w0, [x29, #6716]
  41f4f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f4f4:	add	x0, x0, #0x6dc
  41f4f8:	ldr	w0, [x0]
  41f4fc:	and	w0, w0, #0x1
  41f500:	cmp	w0, #0x0
  41f504:	b.eq	41f574 <main@@Base+0x2478>  // b.none
  41f508:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f50c:	add	x0, x0, #0x548
  41f510:	bl	406e40 <gettext@plt>
  41f514:	ldr	w1, [x29, #6716]
  41f518:	bl	406dc0 <printf@plt>
  41f51c:	ldr	x0, [x29, #6608]
  41f520:	str	x0, [x29, #6512]
  41f524:	b	41f54c <main@@Base+0x2450>
  41f528:	ldr	x0, [x29, #6512]
  41f52c:	ldr	x0, [x0]
  41f530:	mov	x1, x0
  41f534:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f538:	add	x0, x0, #0x560
  41f53c:	bl	406dc0 <printf@plt>
  41f540:	ldr	x0, [x29, #6512]
  41f544:	add	x0, x0, #0x8
  41f548:	str	x0, [x29, #6512]
  41f54c:	ldr	x0, [x29, #6512]
  41f550:	ldr	x0, [x0]
  41f554:	cmp	x0, #0x0
  41f558:	b.ne	41f528 <main@@Base+0x242c>  // b.any
  41f55c:	mov	w0, #0xa                   	// #10
  41f560:	bl	406e00 <putchar@plt>
  41f564:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f568:	add	x0, x0, #0x400
  41f56c:	ldr	x0, [x0]
  41f570:	bl	406c90 <fflush@plt>
  41f574:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f578:	add	x0, x0, #0x410
  41f57c:	ldr	x0, [x0]
  41f580:	str	x0, [x29, #6504]
  41f584:	b	41f69c <main@@Base+0x25a0>
  41f588:	ldr	x0, [x29, #6504]
  41f58c:	ldr	x3, [x0]
  41f590:	mov	x2, #0xa                   	// #10
  41f594:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f598:	add	x1, x0, #0x568
  41f59c:	mov	x0, x3
  41f5a0:	bl	406990 <strncmp@plt>
  41f5a4:	cmp	w0, #0x0
  41f5a8:	b.ne	41f600 <main@@Base+0x2504>  // b.any
  41f5ac:	sub	sp, sp, #0x30
  41f5b0:	mov	x0, sp
  41f5b4:	add	x0, x0, #0xf
  41f5b8:	lsr	x0, x0, #4
  41f5bc:	lsl	x0, x0, #4
  41f5c0:	mov	x1, x0
  41f5c4:	ldr	x0, [x29, #6504]
  41f5c8:	str	x1, [x0]
  41f5cc:	ldr	x0, [x29, #6504]
  41f5d0:	ldr	x4, [x0]
  41f5d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f5d8:	add	x0, x0, #0xa70
  41f5dc:	ldr	w0, [x0]
  41f5e0:	mov	w3, w0
  41f5e4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f5e8:	add	x2, x0, #0x200
  41f5ec:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f5f0:	add	x1, x0, #0x578
  41f5f4:	mov	x0, x4
  41f5f8:	bl	406790 <sprintf@plt>
  41f5fc:	b	41f690 <main@@Base+0x2594>
  41f600:	ldr	x0, [x29, #6504]
  41f604:	ldr	x3, [x0]
  41f608:	mov	x2, #0xe                   	// #14
  41f60c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f610:	add	x1, x0, #0x580
  41f614:	mov	x0, x3
  41f618:	bl	406990 <strncmp@plt>
  41f61c:	cmp	w0, #0x0
  41f620:	b.ne	41f690 <main@@Base+0x2594>  // b.any
  41f624:	sub	sp, sp, #0x30
  41f628:	mov	x0, sp
  41f62c:	add	x0, x0, #0xf
  41f630:	lsr	x0, x0, #4
  41f634:	lsl	x0, x0, #4
  41f638:	mov	x1, x0
  41f63c:	ldr	x0, [x29, #6504]
  41f640:	str	x1, [x0]
  41f644:	ldr	x0, [x29, #6504]
  41f648:	ldr	x4, [x0]
  41f64c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f650:	add	x0, x0, #0xff8
  41f654:	ldr	w0, [x0]
  41f658:	cmp	w0, #0x0
  41f65c:	b.eq	41f66c <main@@Base+0x2570>  // b.none
  41f660:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f664:	add	x0, x0, #0x590
  41f668:	b	41f674 <main@@Base+0x2578>
  41f66c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f670:	add	x0, x0, #0x70
  41f674:	ldr	w3, [x29, #6716]
  41f678:	mov	x2, x0
  41f67c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f680:	add	x1, x0, #0x598
  41f684:	mov	x0, x4
  41f688:	bl	406790 <sprintf@plt>
  41f68c:	str	wzr, [x29, #6716]
  41f690:	ldr	x0, [x29, #6504]
  41f694:	add	x0, x0, #0x8
  41f698:	str	x0, [x29, #6504]
  41f69c:	ldr	x0, [x29, #6504]
  41f6a0:	ldr	x0, [x0]
  41f6a4:	cmp	x0, #0x0
  41f6a8:	b.ne	41f588 <main@@Base+0x248c>  // b.any
  41f6ac:	ldr	w0, [x29, #6716]
  41f6b0:	cmp	w0, #0x0
  41f6b4:	b.eq	41f718 <main@@Base+0x261c>  // b.none
  41f6b8:	sub	sp, sp, #0x30
  41f6bc:	mov	x0, sp
  41f6c0:	add	x0, x0, #0xf
  41f6c4:	lsr	x0, x0, #4
  41f6c8:	lsl	x0, x0, #4
  41f6cc:	str	x0, [x29, #6272]
  41f6d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f6d4:	add	x0, x0, #0xff8
  41f6d8:	ldr	w0, [x0]
  41f6dc:	cmp	w0, #0x0
  41f6e0:	b.eq	41f6f0 <main@@Base+0x25f4>  // b.none
  41f6e4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f6e8:	add	x0, x0, #0x590
  41f6ec:	b	41f6f8 <main@@Base+0x25fc>
  41f6f0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f6f4:	add	x0, x0, #0x70
  41f6f8:	ldr	w3, [x29, #6716]
  41f6fc:	mov	x2, x0
  41f700:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f704:	add	x1, x0, #0x598
  41f708:	ldr	x0, [x29, #6272]
  41f70c:	bl	406790 <sprintf@plt>
  41f710:	ldr	x0, [x29, #6272]
  41f714:	bl	406a80 <putenv@plt>
  41f718:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f71c:	add	x0, x0, #0x400
  41f720:	ldr	x0, [x0]
  41f724:	bl	406c90 <fflush@plt>
  41f728:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f72c:	add	x0, x0, #0x3e8
  41f730:	ldr	x0, [x0]
  41f734:	bl	406c90 <fflush@plt>
  41f738:	mov	w0, #0x1                   	// #1
  41f73c:	bl	435b58 <jobserver_pre_child@@Base>
  41f740:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f744:	add	x0, x0, #0x410
  41f748:	ldr	x0, [x0]
  41f74c:	mov	x1, x0
  41f750:	ldr	x0, [x29, #6608]
  41f754:	bl	41ab28 <exec_command@@Base>
  41f758:	nop
  41f75c:	b	41f764 <main@@Base+0x2668>
  41f760:	nop
  41f764:	mov	w1, #0x0                   	// #0
  41f768:	mov	w0, #0x1                   	// #1
  41f76c:	bl	420edc <main@@Base+0x3de0>
  41f770:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f774:	add	x0, x0, #0x984
  41f778:	ldr	w1, [x0]
  41f77c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f780:	add	x0, x0, #0x718
  41f784:	str	w1, [x0]
  41f788:	ldr	w0, [x29, #6716]
  41f78c:	cmp	w0, #0x0
  41f790:	b.eq	41f808 <main@@Base+0x270c>  // b.none
  41f794:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f798:	add	x0, x0, #0x970
  41f79c:	ldr	x0, [x0]
  41f7a0:	cmp	x0, #0x0
  41f7a4:	b.eq	41f808 <main@@Base+0x270c>  // b.none
  41f7a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f7ac:	add	x0, x0, #0x970
  41f7b0:	ldr	x0, [x0]
  41f7b4:	ldr	x0, [x0]
  41f7b8:	str	x0, [x29, #6496]
  41f7bc:	b	41f7f8 <main@@Base+0x26fc>
  41f7c0:	ldr	x0, [x29, #6496]
  41f7c4:	ldr	x0, [x0]
  41f7c8:	bl	40c678 <enter_file@@Base>
  41f7cc:	str	x0, [x29, #6264]
  41f7d0:	ldr	x0, [x29, #6264]
  41f7d4:	mov	x1, #0xffffffffffffffff    	// #-1
  41f7d8:	str	x1, [x0, #120]
  41f7dc:	ldr	x0, [x29, #6264]
  41f7e0:	ldr	x1, [x0, #120]
  41f7e4:	ldr	x0, [x29, #6264]
  41f7e8:	str	x1, [x0, #112]
  41f7ec:	ldr	x0, [x29, #6496]
  41f7f0:	add	x0, x0, #0x8
  41f7f4:	str	x0, [x29, #6496]
  41f7f8:	ldr	x0, [x29, #6496]
  41f7fc:	ldr	x0, [x0]
  41f800:	cmp	x0, #0x0
  41f804:	b.ne	41f7c0 <main@@Base+0x26c4>  // b.any
  41f808:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f80c:	add	x0, x0, #0xfd0
  41f810:	ldr	x0, [x0]
  41f814:	cmp	x0, #0x0
  41f818:	b.eq	41f86c <main@@Base+0x2770>  // b.none
  41f81c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f820:	add	x0, x0, #0xfd0
  41f824:	ldr	x0, [x0]
  41f828:	bl	406e30 <unlink@plt>
  41f82c:	cmp	w0, #0x0
  41f830:	b.ge	41f86c <main@@Base+0x2770>  // b.tcont
  41f834:	bl	406dd0 <__errno_location@plt>
  41f838:	ldr	w0, [x0]
  41f83c:	cmp	w0, #0x2
  41f840:	b.eq	41f86c <main@@Base+0x2770>  // b.none
  41f844:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f848:	add	x0, x0, #0x5b0
  41f84c:	bl	406e40 <gettext@plt>
  41f850:	mov	x2, x0
  41f854:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f858:	add	x0, x0, #0xfd0
  41f85c:	ldr	x0, [x0]
  41f860:	mov	x1, x0
  41f864:	mov	x0, x2
  41f868:	bl	4242c0 <perror_with_name@@Base>
  41f86c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f870:	add	x0, x0, #0x988
  41f874:	ldr	x0, [x0]
  41f878:	cmp	x0, #0x0
  41f87c:	b.ne	41f9f4 <main@@Base+0x28f8>  // b.any
  41f880:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f884:	add	x0, x0, #0xa68
  41f888:	ldr	x0, [x0]
  41f88c:	ldrb	w0, [x0, #44]
  41f890:	and	w0, w0, #0x1
  41f894:	and	w0, w0, #0xff
  41f898:	cmp	w0, #0x0
  41f89c:	b.eq	41f8bc <main@@Base+0x27c0>  // b.none
  41f8a0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f8a4:	add	x0, x0, #0xa68
  41f8a8:	ldr	x0, [x0]
  41f8ac:	ldr	x0, [x0, #8]
  41f8b0:	bl	40bf38 <variable_expand@@Base>
  41f8b4:	str	x0, [x29, #2120]
  41f8b8:	b	41f918 <main@@Base+0x281c>
  41f8bc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f8c0:	add	x0, x0, #0xa00
  41f8c4:	ldr	x19, [x0]
  41f8c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f8cc:	add	x0, x0, #0xa68
  41f8d0:	ldr	x0, [x0]
  41f8d4:	ldr	x20, [x0, #8]
  41f8d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f8dc:	add	x0, x0, #0xa68
  41f8e0:	ldr	x0, [x0]
  41f8e4:	ldr	x0, [x0, #8]
  41f8e8:	bl	4066f0 <strlen@plt>
  41f8ec:	mov	x2, x0
  41f8f0:	mov	x1, x20
  41f8f4:	mov	x0, x19
  41f8f8:	bl	40b388 <variable_buffer_output@@Base>
  41f8fc:	str	x0, [x29, #2120]
  41f900:	ldr	x0, [x29, #2120]
  41f904:	strb	wzr, [x0]
  41f908:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41f90c:	add	x0, x0, #0xa00
  41f910:	ldr	x0, [x0]
  41f914:	str	x0, [x29, #2120]
  41f918:	ldr	x0, [x29, #2120]
  41f91c:	ldrb	w0, [x0]
  41f920:	cmp	w0, #0x0
  41f924:	b.eq	41fa04 <main@@Base+0x2908>  // b.none
  41f928:	ldr	x0, [x29, #2120]
  41f92c:	bl	40c5bc <lookup_file@@Base>
  41f930:	str	x0, [x29, #6488]
  41f934:	ldr	x0, [x29, #6488]
  41f938:	cmp	x0, #0x0
  41f93c:	b.ne	41f9b8 <main@@Base+0x28bc>  // b.any
  41f940:	add	x0, x29, #0x848
  41f944:	mov	w4, #0x0                   	// #0
  41f948:	mov	x3, #0x0                   	// #0
  41f94c:	mov	w2, #0x1                   	// #1
  41f950:	mov	x1, #0x10                  	// #16
  41f954:	bl	42a5e0 <parse_file_seq@@Base>
  41f958:	str	x0, [x29, #6256]
  41f95c:	ldr	x0, [x29, #6256]
  41f960:	cmp	x0, #0x0
  41f964:	b.eq	41f9b8 <main@@Base+0x28bc>  // b.none
  41f968:	ldr	x0, [x29, #6256]
  41f96c:	ldr	x0, [x0]
  41f970:	cmp	x0, #0x0
  41f974:	b.eq	41f994 <main@@Base+0x2898>  // b.none
  41f978:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41f97c:	add	x0, x0, #0x5d0
  41f980:	bl	406e40 <gettext@plt>
  41f984:	mov	x2, x0
  41f988:	mov	x1, #0x0                   	// #0
  41f98c:	mov	x0, #0x0                   	// #0
  41f990:	bl	424098 <fatal@@Base>
  41f994:	ldr	x0, [x29, #6256]
  41f998:	ldr	x0, [x0, #8]
  41f99c:	bl	430d78 <strcache_add@@Base>
  41f9a0:	bl	40c678 <enter_file@@Base>
  41f9a4:	str	x0, [x29, #6488]
  41f9a8:	ldr	x0, [x29, #6256]
  41f9ac:	str	xzr, [x0, #8]
  41f9b0:	ldr	x0, [x29, #6256]
  41f9b4:	bl	422b98 <free_ns_chain@@Base>
  41f9b8:	ldr	x0, [x29, #6488]
  41f9bc:	cmp	x0, #0x0
  41f9c0:	b.eq	41fa04 <main@@Base+0x2908>  // b.none
  41f9c4:	mov	x0, #0x40                  	// #64
  41f9c8:	bl	4226d4 <xcalloc@@Base>
  41f9cc:	mov	x1, x0
  41f9d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f9d4:	add	x0, x0, #0x988
  41f9d8:	str	x1, [x0]
  41f9dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f9e0:	add	x0, x0, #0x988
  41f9e4:	ldr	x0, [x0]
  41f9e8:	ldr	x1, [x29, #6488]
  41f9ec:	str	x1, [x0, #16]
  41f9f0:	b	41fa04 <main@@Base+0x2908>
  41f9f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41f9f8:	add	x0, x0, #0x990
  41f9fc:	ldr	x0, [x0]
  41fa00:	str	xzr, [x0]
  41fa04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fa08:	add	x0, x0, #0x988
  41fa0c:	ldr	x0, [x0]
  41fa10:	cmp	x0, #0x0
  41fa14:	b.ne	41fa94 <main@@Base+0x2998>  // b.any
  41fa18:	mov	x1, #0xd                   	// #13
  41fa1c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fa20:	add	x0, x0, #0x600
  41fa24:	bl	431f68 <lookup_variable@@Base>
  41fa28:	str	x0, [x29, #6248]
  41fa2c:	ldr	x0, [x29, #6248]
  41fa30:	cmp	x0, #0x0
  41fa34:	b.eq	41fa78 <main@@Base+0x297c>  // b.none
  41fa38:	ldr	x0, [x29, #6248]
  41fa3c:	ldr	x0, [x0, #8]
  41fa40:	cmp	x0, #0x0
  41fa44:	b.eq	41fa78 <main@@Base+0x297c>  // b.none
  41fa48:	ldr	x0, [x29, #6248]
  41fa4c:	ldr	x0, [x0, #8]
  41fa50:	ldrb	w0, [x0]
  41fa54:	cmp	w0, #0x0
  41fa58:	b.eq	41fa78 <main@@Base+0x297c>  // b.none
  41fa5c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fa60:	add	x0, x0, #0x610
  41fa64:	bl	406e40 <gettext@plt>
  41fa68:	mov	x2, x0
  41fa6c:	mov	x1, #0x0                   	// #0
  41fa70:	mov	x0, #0x0                   	// #0
  41fa74:	bl	424098 <fatal@@Base>
  41fa78:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fa7c:	add	x0, x0, #0x620
  41fa80:	bl	406e40 <gettext@plt>
  41fa84:	mov	x2, x0
  41fa88:	mov	x1, #0x0                   	// #0
  41fa8c:	mov	x0, #0x0                   	// #0
  41fa90:	bl	424098 <fatal@@Base>
  41fa94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fa98:	add	x0, x0, #0x6dc
  41fa9c:	ldr	w0, [x0]
  41faa0:	and	w0, w0, #0x1
  41faa4:	cmp	w0, #0x0
  41faa8:	b.eq	41facc <main@@Base+0x29d0>  // b.none
  41faac:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fab0:	add	x0, x0, #0x650
  41fab4:	bl	406e40 <gettext@plt>
  41fab8:	bl	406dc0 <printf@plt>
  41fabc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fac0:	add	x0, x0, #0x400
  41fac4:	ldr	x0, [x0]
  41fac8:	bl	406c90 <fflush@plt>
  41facc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fad0:	add	x0, x0, #0x988
  41fad4:	ldr	x0, [x0]
  41fad8:	bl	42aed0 <update_goal_chain@@Base>
  41fadc:	cmp	w0, #0x3
  41fae0:	b.eq	41fb08 <main@@Base+0x2a0c>  // b.none
  41fae4:	cmp	w0, #0x3
  41fae8:	b.hi	41fb18 <main@@Base+0x2a1c>  // b.pmore
  41faec:	cmp	w0, #0x1
  41faf0:	b.ls	41fb14 <main@@Base+0x2a18>  // b.plast
  41faf4:	cmp	w0, #0x2
  41faf8:	b.ne	41fb18 <main@@Base+0x2a1c>  // b.any
  41fafc:	mov	w0, #0x1                   	// #1
  41fb00:	str	w0, [x29, #6732]
  41fb04:	b	41fb18 <main@@Base+0x2a1c>
  41fb08:	mov	w0, #0x2                   	// #2
  41fb0c:	str	w0, [x29, #6732]
  41fb10:	b	41fb18 <main@@Base+0x2a1c>
  41fb14:	nop
  41fb18:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  41fb1c:	add	x0, x0, #0xb18
  41fb20:	ldr	w0, [x0]
  41fb24:	cmp	w0, #0x0
  41fb28:	b.eq	41fb48 <main@@Base+0x2a4c>  // b.none
  41fb2c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fb30:	add	x0, x0, #0x670
  41fb34:	bl	406e40 <gettext@plt>
  41fb38:	mov	x2, x0
  41fb3c:	mov	x1, #0x0                   	// #0
  41fb40:	mov	x0, #0x0                   	// #0
  41fb44:	bl	423e74 <error@@Base>
  41fb48:	ldr	w0, [x29, #6732]
  41fb4c:	bl	421fbc <die@@Base>
  41fb50:	sub	sp, sp, #0x10
  41fb54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fb58:	add	x0, x0, #0x9a0
  41fb5c:	ldrb	w0, [x0]
  41fb60:	cmp	w0, #0x0
  41fb64:	b.ne	41fed4 <main@@Base+0x2dd8>  // b.any
  41fb68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fb6c:	add	x0, x0, #0x9a0
  41fb70:	str	x0, [sp, #8]
  41fb74:	ldr	x0, [sp, #8]
  41fb78:	add	x1, x0, #0x1
  41fb7c:	str	x1, [sp, #8]
  41fb80:	mov	w1, #0x2d                  	// #45
  41fb84:	strb	w1, [x0]
  41fb88:	str	wzr, [sp]
  41fb8c:	b	41fe1c <main@@Base+0x2d20>
  41fb90:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fb94:	add	x2, x0, #0x880
  41fb98:	ldr	w1, [sp]
  41fb9c:	mov	x0, x1
  41fba0:	lsl	x0, x0, #1
  41fba4:	add	x0, x0, x1
  41fba8:	lsl	x0, x0, #4
  41fbac:	add	x0, x2, x0
  41fbb0:	ldr	x0, [x0, #40]
  41fbb4:	cmp	x0, #0x0
  41fbb8:	b.eq	41fbe4 <main@@Base+0x2ae8>  // b.none
  41fbbc:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fbc0:	add	x2, x0, #0x880
  41fbc4:	ldr	w1, [sp]
  41fbc8:	mov	x0, x1
  41fbcc:	lsl	x0, x0, #1
  41fbd0:	add	x0, x0, x1
  41fbd4:	lsl	x0, x0, #4
  41fbd8:	add	x0, x2, x0
  41fbdc:	ldr	x0, [x0, #40]
  41fbe0:	b	41fbec <main@@Base+0x2af0>
  41fbe4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  41fbe8:	add	x0, x0, #0x70
  41fbec:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41fbf0:	add	x2, x1, #0xa10
  41fbf4:	ldr	w1, [sp]
  41fbf8:	lsl	x1, x1, #5
  41fbfc:	add	x1, x2, x1
  41fc00:	str	x0, [x1]
  41fc04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fc08:	add	x1, x0, #0xa10
  41fc0c:	ldr	w0, [sp]
  41fc10:	lsl	x0, x0, #5
  41fc14:	add	x0, x1, x0
  41fc18:	str	xzr, [x0, #16]
  41fc1c:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fc20:	add	x2, x0, #0x880
  41fc24:	ldr	w1, [sp]
  41fc28:	mov	x0, x1
  41fc2c:	lsl	x0, x0, #1
  41fc30:	add	x0, x0, x1
  41fc34:	lsl	x0, x0, #4
  41fc38:	add	x0, x2, x0
  41fc3c:	ldr	w1, [x0]
  41fc40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fc44:	add	x2, x0, #0xa10
  41fc48:	ldr	w0, [sp]
  41fc4c:	lsl	x0, x0, #5
  41fc50:	add	x0, x2, x0
  41fc54:	str	w1, [x0, #24]
  41fc58:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fc5c:	add	x2, x0, #0x880
  41fc60:	ldr	w1, [sp]
  41fc64:	mov	x0, x1
  41fc68:	lsl	x0, x0, #1
  41fc6c:	add	x0, x0, x1
  41fc70:	lsl	x0, x0, #4
  41fc74:	add	x0, x2, x0
  41fc78:	ldr	w0, [x0]
  41fc7c:	cmp	w0, #0xff
  41fc80:	b.gt	41fcbc <main@@Base+0x2bc0>
  41fc84:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fc88:	add	x2, x0, #0x880
  41fc8c:	ldr	w1, [sp]
  41fc90:	mov	x0, x1
  41fc94:	lsl	x0, x0, #1
  41fc98:	add	x0, x0, x1
  41fc9c:	lsl	x0, x0, #4
  41fca0:	add	x0, x2, x0
  41fca4:	ldr	w2, [x0]
  41fca8:	ldr	x0, [sp, #8]
  41fcac:	add	x1, x0, #0x1
  41fcb0:	str	x1, [sp, #8]
  41fcb4:	and	w1, w2, #0xff
  41fcb8:	strb	w1, [x0]
  41fcbc:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fcc0:	add	x2, x0, #0x880
  41fcc4:	ldr	w1, [sp]
  41fcc8:	mov	x0, x1
  41fccc:	lsl	x0, x0, #1
  41fcd0:	add	x0, x0, x1
  41fcd4:	lsl	x0, x0, #4
  41fcd8:	add	x0, x2, x0
  41fcdc:	ldr	w0, [x0, #4]
  41fce0:	cmp	w0, #0x7
  41fce4:	b.eq	41fd08 <main@@Base+0x2c0c>  // b.none
  41fce8:	cmp	w0, #0x7
  41fcec:	b.hi	41fe10 <main@@Base+0x2d14>  // b.pmore
  41fcf0:	cmp	w0, #0x1
  41fcf4:	b.ls	41fd08 <main@@Base+0x2c0c>  // b.plast
  41fcf8:	sub	w0, w0, #0x2
  41fcfc:	cmp	w0, #0x4
  41fd00:	b.hi	41fe10 <main@@Base+0x2d14>  // b.pmore
  41fd04:	b	41fd24 <main@@Base+0x2c28>
  41fd08:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fd0c:	add	x1, x0, #0xa10
  41fd10:	ldr	w0, [sp]
  41fd14:	lsl	x0, x0, #5
  41fd18:	add	x0, x1, x0
  41fd1c:	str	wzr, [x0, #8]
  41fd20:	b	41fe10 <main@@Base+0x2d14>
  41fd24:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fd28:	add	x2, x0, #0x880
  41fd2c:	ldr	w1, [sp]
  41fd30:	mov	x0, x1
  41fd34:	lsl	x0, x0, #1
  41fd38:	add	x0, x0, x1
  41fd3c:	lsl	x0, x0, #4
  41fd40:	add	x0, x2, x0
  41fd44:	ldr	w0, [x0]
  41fd48:	cmp	w0, #0xff
  41fd4c:	b.gt	41fd64 <main@@Base+0x2c68>
  41fd50:	ldr	x0, [sp, #8]
  41fd54:	add	x1, x0, #0x1
  41fd58:	str	x1, [sp, #8]
  41fd5c:	mov	w1, #0x3a                  	// #58
  41fd60:	strb	w1, [x0]
  41fd64:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fd68:	add	x2, x0, #0x880
  41fd6c:	ldr	w1, [sp]
  41fd70:	mov	x0, x1
  41fd74:	lsl	x0, x0, #1
  41fd78:	add	x0, x0, x1
  41fd7c:	lsl	x0, x0, #4
  41fd80:	add	x0, x2, x0
  41fd84:	ldr	x0, [x0, #24]
  41fd88:	cmp	x0, #0x0
  41fd8c:	b.eq	41fdf0 <main@@Base+0x2cf4>  // b.none
  41fd90:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fd94:	add	x2, x0, #0x880
  41fd98:	ldr	w1, [sp]
  41fd9c:	mov	x0, x1
  41fda0:	lsl	x0, x0, #1
  41fda4:	add	x0, x0, x1
  41fda8:	lsl	x0, x0, #4
  41fdac:	add	x0, x2, x0
  41fdb0:	ldr	w0, [x0]
  41fdb4:	cmp	w0, #0xff
  41fdb8:	b.gt	41fdd0 <main@@Base+0x2cd4>
  41fdbc:	ldr	x0, [sp, #8]
  41fdc0:	add	x1, x0, #0x1
  41fdc4:	str	x1, [sp, #8]
  41fdc8:	mov	w1, #0x3a                  	// #58
  41fdcc:	strb	w1, [x0]
  41fdd0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fdd4:	add	x1, x0, #0xa10
  41fdd8:	ldr	w0, [sp]
  41fddc:	lsl	x0, x0, #5
  41fde0:	add	x0, x1, x0
  41fde4:	mov	w1, #0x2                   	// #2
  41fde8:	str	w1, [x0, #8]
  41fdec:	b	41fe0c <main@@Base+0x2d10>
  41fdf0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fdf4:	add	x1, x0, #0xa10
  41fdf8:	ldr	w0, [sp]
  41fdfc:	lsl	x0, x0, #5
  41fe00:	add	x0, x1, x0
  41fe04:	mov	w1, #0x1                   	// #1
  41fe08:	str	w1, [x0, #8]
  41fe0c:	nop
  41fe10:	ldr	w0, [sp]
  41fe14:	add	w0, w0, #0x1
  41fe18:	str	w0, [sp]
  41fe1c:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  41fe20:	add	x2, x0, #0x880
  41fe24:	ldr	w1, [sp]
  41fe28:	mov	x0, x1
  41fe2c:	lsl	x0, x0, #1
  41fe30:	add	x0, x0, x1
  41fe34:	lsl	x0, x0, #4
  41fe38:	add	x0, x2, x0
  41fe3c:	ldr	w0, [x0]
  41fe40:	cmp	w0, #0x0
  41fe44:	b.ne	41fb90 <main@@Base+0x2a94>  // b.any
  41fe48:	ldr	x0, [sp, #8]
  41fe4c:	strb	wzr, [x0]
  41fe50:	str	wzr, [sp, #4]
  41fe54:	b	41feac <main@@Base+0x2db0>
  41fe58:	ldr	w0, [sp]
  41fe5c:	add	w1, w0, #0x1
  41fe60:	str	w1, [sp]
  41fe64:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  41fe68:	add	x1, x1, #0xa10
  41fe6c:	mov	w0, w0
  41fe70:	lsl	x0, x0, #5
  41fe74:	add	x2, x1, x0
  41fe78:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41fe7c:	add	x1, x0, #0x200
  41fe80:	ldr	w0, [sp, #4]
  41fe84:	lsl	x0, x0, #5
  41fe88:	add	x0, x1, x0
  41fe8c:	mov	x3, x0
  41fe90:	ldp	x0, x1, [x3]
  41fe94:	stp	x0, x1, [x2]
  41fe98:	ldp	x0, x1, [x3, #16]
  41fe9c:	stp	x0, x1, [x2, #16]
  41fea0:	ldr	w0, [sp, #4]
  41fea4:	add	w0, w0, #0x1
  41fea8:	str	w0, [sp, #4]
  41feac:	ldr	w0, [sp, #4]
  41feb0:	cmp	w0, #0x8
  41feb4:	b.ls	41fe58 <main@@Base+0x2d5c>  // b.plast
  41feb8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41febc:	add	x1, x0, #0xa10
  41fec0:	ldr	w0, [sp]
  41fec4:	lsl	x0, x0, #5
  41fec8:	add	x0, x1, x0
  41fecc:	str	xzr, [x0]
  41fed0:	b	41fed8 <main@@Base+0x2ddc>
  41fed4:	nop
  41fed8:	add	sp, sp, #0x10
  41fedc:	ret
  41fee0:	stp	x29, x30, [sp, #-112]!
  41fee4:	mov	x29, sp
  41fee8:	str	x19, [sp, #16]
  41feec:	str	x0, [x29, #40]
  41fef0:	str	w1, [x29, #36]
  41fef4:	ldr	x0, [x29, #40]
  41fef8:	ldrb	w0, [x0]
  41fefc:	cmp	w0, #0x2d
  41ff00:	b.ne	41ff18 <main@@Base+0x2e1c>  // b.any
  41ff04:	ldr	x0, [x29, #40]
  41ff08:	add	x0, x0, #0x1
  41ff0c:	ldrb	w0, [x0]
  41ff10:	cmp	w0, #0x0
  41ff14:	b.eq	4201ac <main@@Base+0x30b0>  // b.none
  41ff18:	mov	w3, #0x0                   	// #0
  41ff1c:	mov	w2, #0x4                   	// #4
  41ff20:	ldr	x1, [x29, #40]
  41ff24:	mov	x0, #0x0                   	// #0
  41ff28:	bl	433eb0 <try_variable_definition@@Base>
  41ff2c:	str	x0, [x29, #88]
  41ff30:	ldr	x0, [x29, #88]
  41ff34:	cmp	x0, #0x0
  41ff38:	b.eq	41ffd0 <main@@Base+0x2ed4>  // b.none
  41ff3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ff40:	add	x0, x0, #0x998
  41ff44:	ldr	x0, [x0]
  41ff48:	str	x0, [x29, #104]
  41ff4c:	b	41ff70 <main@@Base+0x2e74>
  41ff50:	ldr	x0, [x29, #104]
  41ff54:	ldr	x0, [x0, #8]
  41ff58:	ldr	x1, [x29, #88]
  41ff5c:	cmp	x1, x0
  41ff60:	b.eq	41ff80 <main@@Base+0x2e84>  // b.none
  41ff64:	ldr	x0, [x29, #104]
  41ff68:	ldr	x0, [x0]
  41ff6c:	str	x0, [x29, #104]
  41ff70:	ldr	x0, [x29, #104]
  41ff74:	cmp	x0, #0x0
  41ff78:	b.ne	41ff50 <main@@Base+0x2e54>  // b.any
  41ff7c:	b	41ff84 <main@@Base+0x2e88>
  41ff80:	nop
  41ff84:	ldr	x0, [x29, #104]
  41ff88:	cmp	x0, #0x0
  41ff8c:	b.ne	4201b0 <main@@Base+0x30b4>  // b.any
  41ff90:	mov	x0, #0x10                  	// #16
  41ff94:	bl	42268c <xmalloc@@Base>
  41ff98:	str	x0, [x29, #104]
  41ff9c:	ldr	x0, [x29, #104]
  41ffa0:	ldr	x1, [x29, #88]
  41ffa4:	str	x1, [x0, #8]
  41ffa8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ffac:	add	x0, x0, #0x998
  41ffb0:	ldr	x1, [x0]
  41ffb4:	ldr	x0, [x29, #104]
  41ffb8:	str	x1, [x0]
  41ffbc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  41ffc0:	add	x0, x0, #0x998
  41ffc4:	ldr	x1, [x29, #104]
  41ffc8:	str	x1, [x0]
  41ffcc:	b	4201b0 <main@@Base+0x30b4>
  41ffd0:	ldr	w0, [x29, #36]
  41ffd4:	cmp	w0, #0x0
  41ffd8:	b.ne	4201b0 <main@@Base+0x30b4>  // b.any
  41ffdc:	ldr	x0, [x29, #40]
  41ffe0:	bl	41ca1c <gmk_add_function@@Base+0x2f8>
  41ffe4:	bl	430d78 <strcache_add@@Base>
  41ffe8:	bl	40c678 <enter_file@@Base>
  41ffec:	str	x0, [x29, #80]
  41fff0:	ldr	x0, [x29, #80]
  41fff4:	ldrb	w1, [x0, #137]
  41fff8:	orr	w1, w1, #0x10
  41fffc:	strb	w1, [x0, #137]
  420000:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420004:	add	x0, x0, #0x988
  420008:	ldr	x0, [x0]
  42000c:	cmp	x0, #0x0
  420010:	b.ne	420048 <main@@Base+0x2f4c>  // b.any
  420014:	mov	x0, #0x40                  	// #64
  420018:	bl	4226d4 <xcalloc@@Base>
  42001c:	mov	x1, x0
  420020:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420024:	add	x0, x0, #0x988
  420028:	str	x1, [x0]
  42002c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420030:	add	x0, x0, #0x988
  420034:	ldr	x1, [x0]
  420038:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42003c:	add	x0, x0, #0x990
  420040:	str	x1, [x0]
  420044:	b	42007c <main@@Base+0x2f80>
  420048:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42004c:	add	x0, x0, #0x990
  420050:	ldr	x19, [x0]
  420054:	mov	x0, #0x40                  	// #64
  420058:	bl	4226d4 <xcalloc@@Base>
  42005c:	str	x0, [x19]
  420060:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420064:	add	x0, x0, #0x990
  420068:	ldr	x0, [x0]
  42006c:	ldr	x1, [x0]
  420070:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420074:	add	x0, x0, #0x990
  420078:	str	x1, [x0]
  42007c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420080:	add	x0, x0, #0x990
  420084:	ldr	x0, [x0]
  420088:	ldr	x1, [x29, #80]
  42008c:	str	x1, [x0, #16]
  420090:	mov	x1, #0xc                   	// #12
  420094:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420098:	add	x0, x0, #0x6b0
  42009c:	bl	431f68 <lookup_variable@@Base>
  4200a0:	str	x0, [x29, #72]
  4200a4:	ldr	x0, [x29, #72]
  4200a8:	cmp	x0, #0x0
  4200ac:	b.ne	4200c0 <main@@Base+0x2fc4>  // b.any
  4200b0:	ldr	x0, [x29, #80]
  4200b4:	ldr	x0, [x0]
  4200b8:	str	x0, [x29, #96]
  4200bc:	b	420174 <main@@Base+0x3078>
  4200c0:	ldr	x0, [x29, #72]
  4200c4:	ldr	x0, [x0, #8]
  4200c8:	bl	4066f0 <strlen@plt>
  4200cc:	str	x0, [x29, #64]
  4200d0:	ldr	x0, [x29, #80]
  4200d4:	ldr	x0, [x0]
  4200d8:	bl	4066f0 <strlen@plt>
  4200dc:	str	x0, [x29, #56]
  4200e0:	ldr	x1, [x29, #64]
  4200e4:	ldr	x0, [x29, #56]
  4200e8:	add	x0, x1, x0
  4200ec:	add	x0, x0, #0x2
  4200f0:	add	x0, x0, #0xf
  4200f4:	lsr	x0, x0, #4
  4200f8:	lsl	x0, x0, #4
  4200fc:	sub	sp, sp, x0
  420100:	mov	x0, sp
  420104:	add	x0, x0, #0xf
  420108:	lsr	x0, x0, #4
  42010c:	lsl	x0, x0, #4
  420110:	str	x0, [x29, #48]
  420114:	ldr	x0, [x29, #72]
  420118:	ldr	x0, [x0, #8]
  42011c:	ldr	x2, [x29, #64]
  420120:	mov	x1, x0
  420124:	ldr	x0, [x29, #48]
  420128:	bl	4066b0 <memcpy@plt>
  42012c:	ldr	x1, [x29, #48]
  420130:	ldr	x0, [x29, #64]
  420134:	add	x0, x1, x0
  420138:	mov	w1, #0x20                  	// #32
  42013c:	strb	w1, [x0]
  420140:	ldr	x0, [x29, #64]
  420144:	add	x0, x0, #0x1
  420148:	ldr	x1, [x29, #48]
  42014c:	add	x3, x1, x0
  420150:	ldr	x0, [x29, #80]
  420154:	ldr	x1, [x0]
  420158:	ldr	x0, [x29, #56]
  42015c:	add	x0, x0, #0x1
  420160:	mov	x2, x0
  420164:	mov	x0, x3
  420168:	bl	4066b0 <memcpy@plt>
  42016c:	ldr	x0, [x29, #48]
  420170:	str	x0, [x29, #96]
  420174:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420178:	add	x0, x0, #0x3b8
  42017c:	ldr	x0, [x0]
  420180:	ldr	x0, [x0, #8]
  420184:	mov	x6, #0x0                   	// #0
  420188:	mov	x5, x0
  42018c:	mov	w4, #0x0                   	// #0
  420190:	mov	w3, #0x0                   	// #0
  420194:	ldr	x2, [x29, #96]
  420198:	mov	x1, #0xc                   	// #12
  42019c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4201a0:	add	x0, x0, #0x6b0
  4201a4:	bl	4316d8 <define_variable_in_set@@Base>
  4201a8:	b	4201b0 <main@@Base+0x30b4>
  4201ac:	nop
  4201b0:	mov	sp, x29
  4201b4:	ldr	x19, [sp, #16]
  4201b8:	ldp	x29, x30, [sp], #112
  4201bc:	ret
  4201c0:	stp	x29, x30, [sp, #-48]!
  4201c4:	mov	x29, sp
  4201c8:	str	w0, [sp, #28]
  4201cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4201d0:	add	x0, x0, #0x70c
  4201d4:	ldr	w0, [x0]
  4201d8:	cmp	w0, #0x0
  4201dc:	b.eq	4201e4 <main@@Base+0x30e8>  // b.none
  4201e0:	bl	421cb8 <main@@Base+0x4bbc>
  4201e4:	ldr	w0, [sp, #28]
  4201e8:	cmp	w0, #0x0
  4201ec:	b.eq	420200 <main@@Base+0x3104>  // b.none
  4201f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4201f4:	add	x0, x0, #0x3e8
  4201f8:	ldr	x0, [x0]
  4201fc:	b	42020c <main@@Base+0x3110>
  420200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420204:	add	x0, x0, #0x400
  420208:	ldr	x0, [x0]
  42020c:	str	x0, [sp, #32]
  420210:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420214:	add	x0, x0, #0x6c0
  420218:	bl	406e40 <gettext@plt>
  42021c:	mov	x1, x0
  420220:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  420224:	add	x0, x0, #0xa60
  420228:	ldr	x0, [x0]
  42022c:	mov	x2, x0
  420230:	ldr	x0, [sp, #32]
  420234:	bl	406e60 <fprintf@plt>
  420238:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  42023c:	add	x0, x0, #0x568
  420240:	str	x0, [sp, #40]
  420244:	b	420268 <main@@Base+0x316c>
  420248:	ldr	x0, [sp, #40]
  42024c:	ldr	x0, [x0]
  420250:	bl	406e40 <gettext@plt>
  420254:	ldr	x1, [sp, #32]
  420258:	bl	406700 <fputs@plt>
  42025c:	ldr	x0, [sp, #40]
  420260:	add	x0, x0, #0x8
  420264:	str	x0, [sp, #40]
  420268:	ldr	x0, [sp, #40]
  42026c:	ldr	x0, [x0]
  420270:	cmp	x0, #0x0
  420274:	b.ne	420248 <main@@Base+0x314c>  // b.any
  420278:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42027c:	add	x0, x0, #0x9f0
  420280:	ldr	x0, [x0]
  420284:	cmp	x0, #0x0
  420288:	b.eq	4202a4 <main@@Base+0x31a8>  // b.none
  42028c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  420290:	add	x0, x0, #0x9f0
  420294:	ldr	x0, [x0]
  420298:	ldrb	w0, [x0]
  42029c:	cmp	w0, #0x0
  4202a0:	b.ne	4202d0 <main@@Base+0x31d4>  // b.any
  4202a4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4202a8:	add	x0, x0, #0x6e8
  4202ac:	bl	406e40 <gettext@plt>
  4202b0:	mov	x1, x0
  4202b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4202b8:	add	x0, x0, #0x3c8
  4202bc:	ldr	x0, [x0]
  4202c0:	mov	x2, x0
  4202c4:	ldr	x0, [sp, #32]
  4202c8:	bl	406e60 <fprintf@plt>
  4202cc:	b	42030c <main@@Base+0x3210>
  4202d0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4202d4:	add	x0, x0, #0x708
  4202d8:	bl	406e40 <gettext@plt>
  4202dc:	mov	x4, x0
  4202e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4202e4:	add	x0, x0, #0x3c8
  4202e8:	ldr	x1, [x0]
  4202ec:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4202f0:	add	x0, x0, #0x9f0
  4202f4:	ldr	x0, [x0]
  4202f8:	mov	x3, x0
  4202fc:	mov	x2, x1
  420300:	mov	x1, x4
  420304:	ldr	x0, [sp, #32]
  420308:	bl	406e60 <fprintf@plt>
  42030c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420310:	add	x0, x0, #0x730
  420314:	bl	406e40 <gettext@plt>
  420318:	mov	x1, x0
  42031c:	ldr	x0, [sp, #32]
  420320:	bl	406e60 <fprintf@plt>
  420324:	nop
  420328:	ldp	x29, x30, [sp], #48
  42032c:	ret
  420330:	stp	x29, x30, [sp, #-144]!
  420334:	mov	x29, sp
  420338:	str	x19, [sp, #16]
  42033c:	str	w0, [sp, #44]
  420340:	str	x1, [sp, #32]
  420344:	str	w2, [sp, #40]
  420348:	str	wzr, [sp, #140]
  42034c:	bl	41fb50 <main@@Base+0x2a54>
  420350:	ldr	w0, [sp, #40]
  420354:	cmp	w0, #0x0
  420358:	cset	w0, eq  // eq = none
  42035c:	and	w0, w0, #0xff
  420360:	mov	w1, w0
  420364:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420368:	add	x0, x0, #0x418
  42036c:	str	w1, [x0]
  420370:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420374:	add	x0, x0, #0x3f8
  420378:	str	wzr, [x0]
  42037c:	b	420a0c <main@@Base+0x3910>
  420380:	mov	x4, #0x0                   	// #0
  420384:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420388:	add	x3, x0, #0xa10
  42038c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420390:	add	x2, x0, #0x9a0
  420394:	ldr	x1, [sp, #32]
  420398:	ldr	w0, [sp, #44]
  42039c:	bl	406ba0 <getopt_long@plt>
  4203a0:	str	w0, [sp, #84]
  4203a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4203a8:	add	x0, x0, #0x3f0
  4203ac:	ldr	x0, [x0]
  4203b0:	str	x0, [sp, #112]
  4203b4:	ldr	w0, [sp, #84]
  4203b8:	cmn	w0, #0x1
  4203bc:	b.eq	420a28 <main@@Base+0x392c>  // b.none
  4203c0:	ldr	w0, [sp, #84]
  4203c4:	cmp	w0, #0x1
  4203c8:	b.ne	4203dc <main@@Base+0x32e0>  // b.any
  4203cc:	ldr	w1, [sp, #40]
  4203d0:	ldr	x0, [sp, #112]
  4203d4:	bl	41fee0 <main@@Base+0x2de4>
  4203d8:	b	420a0c <main@@Base+0x3910>
  4203dc:	ldr	w0, [sp, #84]
  4203e0:	cmp	w0, #0x3f
  4203e4:	b.ne	4203f4 <main@@Base+0x32f8>  // b.any
  4203e8:	mov	w0, #0x1                   	// #1
  4203ec:	str	w0, [sp, #140]
  4203f0:	b	420a0c <main@@Base+0x3910>
  4203f4:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  4203f8:	add	x0, x0, #0x880
  4203fc:	str	x0, [sp, #128]
  420400:	b	4209fc <main@@Base+0x3900>
  420404:	ldr	x0, [sp, #128]
  420408:	ldr	w0, [x0]
  42040c:	ldr	w1, [sp, #84]
  420410:	cmp	w1, w0
  420414:	b.ne	4209f0 <main@@Base+0x38f4>  // b.any
  420418:	ldr	w0, [sp, #40]
  42041c:	cmp	w0, #0x0
  420420:	b.eq	42043c <main@@Base+0x3340>  // b.none
  420424:	ldr	x0, [sp, #128]
  420428:	ldrb	w0, [x0, #16]
  42042c:	and	w0, w0, #0x1
  420430:	and	w0, w0, #0xff
  420434:	cmp	w0, #0x0
  420438:	b.eq	420444 <main@@Base+0x3348>  // b.none
  42043c:	mov	w0, #0x1                   	// #1
  420440:	b	420448 <main@@Base+0x334c>
  420444:	mov	w0, #0x0                   	// #0
  420448:	str	w0, [sp, #80]
  42044c:	ldr	x0, [sp, #128]
  420450:	ldr	w0, [x0, #4]
  420454:	cmp	w0, #0x7
  420458:	b.eq	4209c8 <main@@Base+0x38cc>  // b.none
  42045c:	cmp	w0, #0x7
  420460:	b.hi	420498 <main@@Base+0x339c>  // b.pmore
  420464:	cmp	w0, #0x6
  420468:	b.eq	4208d4 <main@@Base+0x37d8>  // b.none
  42046c:	cmp	w0, #0x6
  420470:	b.hi	420498 <main@@Base+0x339c>  // b.pmore
  420474:	cmp	w0, #0x5
  420478:	b.eq	420750 <main@@Base+0x3654>  // b.none
  42047c:	cmp	w0, #0x5
  420480:	b.hi	420498 <main@@Base+0x339c>  // b.pmore
  420484:	cmp	w0, #0x1
  420488:	b.ls	42049c <main@@Base+0x33a0>  // b.plast
  42048c:	sub	w0, w0, #0x2
  420490:	cmp	w0, #0x2
  420494:	b.ls	4204cc <main@@Base+0x33d0>  // b.plast
  420498:	bl	406b30 <abort@plt>
  42049c:	ldr	w0, [sp, #80]
  4204a0:	cmp	w0, #0x0
  4204a4:	b.eq	4209d0 <main@@Base+0x38d4>  // b.none
  4204a8:	ldr	x0, [sp, #128]
  4204ac:	ldr	w0, [x0, #4]
  4204b0:	cmp	w0, #0x0
  4204b4:	cset	w0, eq  // eq = none
  4204b8:	and	w1, w0, #0xff
  4204bc:	ldr	x0, [sp, #128]
  4204c0:	ldr	x0, [x0, #8]
  4204c4:	str	w1, [x0]
  4204c8:	b	4209d0 <main@@Base+0x38d4>
  4204cc:	ldr	w0, [sp, #80]
  4204d0:	cmp	w0, #0x0
  4204d4:	b.eq	4209d8 <main@@Base+0x38dc>  // b.none
  4204d8:	ldr	x0, [sp, #112]
  4204dc:	cmp	x0, #0x0
  4204e0:	b.ne	4204f8 <main@@Base+0x33fc>  // b.any
  4204e4:	ldr	x0, [sp, #128]
  4204e8:	ldr	x0, [x0, #24]
  4204ec:	bl	422788 <xstrdup@@Base>
  4204f0:	str	x0, [sp, #112]
  4204f4:	b	4205ac <main@@Base+0x34b0>
  4204f8:	ldr	x0, [sp, #112]
  4204fc:	ldrb	w0, [x0]
  420500:	cmp	w0, #0x0
  420504:	b.ne	4205ac <main@@Base+0x34b0>  // b.any
  420508:	mov	w0, #0x63                  	// #99
  42050c:	strh	w0, [sp, #56]
  420510:	add	x0, sp, #0x38
  420514:	str	x0, [sp, #104]
  420518:	ldr	x0, [sp, #128]
  42051c:	ldr	w0, [x0]
  420520:	cmp	w0, #0xff
  420524:	b.gt	42053c <main@@Base+0x3440>
  420528:	ldr	x0, [sp, #128]
  42052c:	ldr	w0, [x0]
  420530:	and	w0, w0, #0xff
  420534:	strb	w0, [sp, #56]
  420538:	b	420548 <main@@Base+0x344c>
  42053c:	ldr	x0, [sp, #128]
  420540:	ldr	x0, [x0, #40]
  420544:	str	x0, [sp, #104]
  420548:	ldr	x0, [sp, #104]
  42054c:	bl	4066f0 <strlen@plt>
  420550:	mov	x19, x0
  420554:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420558:	add	x0, x0, #0x758
  42055c:	bl	406e40 <gettext@plt>
  420560:	mov	x1, x0
  420564:	ldr	x0, [sp, #128]
  420568:	ldr	w0, [x0]
  42056c:	cmp	w0, #0xff
  420570:	b.gt	420580 <main@@Base+0x3484>
  420574:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420578:	add	x0, x0, #0x590
  42057c:	b	420588 <main@@Base+0x348c>
  420580:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420584:	add	x0, x0, #0x790
  420588:	ldr	x4, [sp, #104]
  42058c:	mov	x3, x0
  420590:	mov	x2, x1
  420594:	mov	x1, x19
  420598:	mov	x0, #0x0                   	// #0
  42059c:	bl	423e74 <error@@Base>
  4205a0:	mov	w0, #0x1                   	// #1
  4205a4:	str	w0, [sp, #140]
  4205a8:	b	4209ec <main@@Base+0x38f0>
  4205ac:	ldr	x0, [sp, #128]
  4205b0:	ldr	w0, [x0, #4]
  4205b4:	cmp	w0, #0x2
  4205b8:	b.ne	4205ec <main@@Base+0x34f0>  // b.any
  4205bc:	ldr	x0, [sp, #128]
  4205c0:	ldr	x0, [x0, #8]
  4205c4:	str	x0, [sp, #64]
  4205c8:	ldr	x0, [sp, #64]
  4205cc:	ldr	x0, [x0]
  4205d0:	bl	406c00 <free@plt>
  4205d4:	ldr	x0, [sp, #112]
  4205d8:	bl	422788 <xstrdup@@Base>
  4205dc:	mov	x1, x0
  4205e0:	ldr	x0, [sp, #64]
  4205e4:	str	x1, [x0]
  4205e8:	b	4209ec <main@@Base+0x38f0>
  4205ec:	ldr	x0, [sp, #128]
  4205f0:	ldr	x0, [x0, #8]
  4205f4:	ldr	x0, [x0]
  4205f8:	str	x0, [sp, #120]
  4205fc:	ldr	x0, [sp, #120]
  420600:	cmp	x0, #0x0
  420604:	b.ne	420650 <main@@Base+0x3554>  // b.any
  420608:	mov	x0, #0x10                  	// #16
  42060c:	bl	42268c <xmalloc@@Base>
  420610:	str	x0, [sp, #120]
  420614:	ldr	x0, [sp, #120]
  420618:	mov	w1, #0x5                   	// #5
  42061c:	str	w1, [x0, #12]
  420620:	ldr	x0, [sp, #120]
  420624:	str	wzr, [x0, #8]
  420628:	mov	x0, #0x28                  	// #40
  42062c:	bl	42268c <xmalloc@@Base>
  420630:	mov	x1, x0
  420634:	ldr	x0, [sp, #120]
  420638:	str	x1, [x0]
  42063c:	ldr	x0, [sp, #128]
  420640:	ldr	x0, [x0, #8]
  420644:	ldr	x1, [sp, #120]
  420648:	str	x1, [x0]
  42064c:	b	4206b0 <main@@Base+0x35b4>
  420650:	ldr	x0, [sp, #120]
  420654:	ldr	w1, [x0, #8]
  420658:	ldr	x0, [sp, #120]
  42065c:	ldr	w0, [x0, #12]
  420660:	sub	w0, w0, #0x1
  420664:	cmp	w1, w0
  420668:	b.ne	4206b0 <main@@Base+0x35b4>  // b.any
  42066c:	ldr	x0, [sp, #120]
  420670:	ldr	w0, [x0, #12]
  420674:	add	w1, w0, #0x5
  420678:	ldr	x0, [sp, #120]
  42067c:	str	w1, [x0, #12]
  420680:	ldr	x0, [sp, #120]
  420684:	ldr	x2, [x0]
  420688:	ldr	x0, [sp, #120]
  42068c:	ldr	w0, [x0, #12]
  420690:	mov	w0, w0
  420694:	lsl	x0, x0, #3
  420698:	mov	x1, x0
  42069c:	mov	x0, x2
  4206a0:	bl	422720 <xrealloc@@Base>
  4206a4:	mov	x1, x0
  4206a8:	ldr	x0, [sp, #120]
  4206ac:	str	x1, [x0]
  4206b0:	ldr	x0, [sp, #128]
  4206b4:	ldr	w0, [x0, #4]
  4206b8:	cmp	w0, #0x4
  4206bc:	b.ne	4206f8 <main@@Base+0x35fc>  // b.any
  4206c0:	ldr	x0, [sp, #120]
  4206c4:	ldr	x1, [x0]
  4206c8:	ldr	x0, [sp, #120]
  4206cc:	ldr	w0, [x0, #8]
  4206d0:	add	w3, w0, #0x1
  4206d4:	ldr	x2, [sp, #120]
  4206d8:	str	w3, [x2, #8]
  4206dc:	mov	w0, w0
  4206e0:	lsl	x0, x0, #3
  4206e4:	add	x19, x1, x0
  4206e8:	ldr	x0, [sp, #112]
  4206ec:	bl	41ca1c <gmk_add_function@@Base+0x2f8>
  4206f0:	str	x0, [x19]
  4206f4:	b	42072c <main@@Base+0x3630>
  4206f8:	ldr	x0, [sp, #120]
  4206fc:	ldr	x1, [x0]
  420700:	ldr	x0, [sp, #120]
  420704:	ldr	w0, [x0, #8]
  420708:	add	w3, w0, #0x1
  42070c:	ldr	x2, [sp, #120]
  420710:	str	w3, [x2, #8]
  420714:	mov	w0, w0
  420718:	lsl	x0, x0, #3
  42071c:	add	x19, x1, x0
  420720:	ldr	x0, [sp, #112]
  420724:	bl	422788 <xstrdup@@Base>
  420728:	str	x0, [x19]
  42072c:	ldr	x0, [sp, #120]
  420730:	ldr	x1, [x0]
  420734:	ldr	x0, [sp, #120]
  420738:	ldr	w0, [x0, #8]
  42073c:	mov	w0, w0
  420740:	lsl	x0, x0, #3
  420744:	add	x0, x1, x0
  420748:	str	xzr, [x0]
  42074c:	b	4209ec <main@@Base+0x38f0>
  420750:	ldr	x0, [sp, #112]
  420754:	cmp	x0, #0x0
  420758:	b.ne	420800 <main@@Base+0x3704>  // b.any
  42075c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420760:	add	x0, x0, #0x3f8
  420764:	ldr	w0, [x0]
  420768:	ldr	w1, [sp, #44]
  42076c:	cmp	w1, w0
  420770:	b.le	420800 <main@@Base+0x3704>
  420774:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420778:	add	x0, x0, #0x3f8
  42077c:	ldr	w0, [x0]
  420780:	sxtw	x0, w0
  420784:	lsl	x0, x0, #3
  420788:	ldr	x1, [sp, #32]
  42078c:	add	x0, x1, x0
  420790:	ldr	x0, [x0]
  420794:	str	x0, [sp, #96]
  420798:	b	4207a8 <main@@Base+0x36ac>
  42079c:	ldr	x0, [sp, #96]
  4207a0:	add	x0, x0, #0x1
  4207a4:	str	x0, [sp, #96]
  4207a8:	ldr	x0, [sp, #96]
  4207ac:	ldrb	w0, [x0]
  4207b0:	sub	w0, w0, #0x30
  4207b4:	cmp	w0, #0x9
  4207b8:	b.ls	42079c <main@@Base+0x36a0>  // b.plast
  4207bc:	ldr	x0, [sp, #96]
  4207c0:	ldrb	w0, [x0]
  4207c4:	cmp	w0, #0x0
  4207c8:	b.ne	420800 <main@@Base+0x3704>  // b.any
  4207cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4207d0:	add	x0, x0, #0x3f8
  4207d4:	ldr	w0, [x0]
  4207d8:	add	w2, w0, #0x1
  4207dc:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  4207e0:	add	x1, x1, #0x3f8
  4207e4:	str	w2, [x1]
  4207e8:	sxtw	x0, w0
  4207ec:	lsl	x0, x0, #3
  4207f0:	ldr	x1, [sp, #32]
  4207f4:	add	x0, x1, x0
  4207f8:	ldr	x0, [x0]
  4207fc:	str	x0, [sp, #112]
  420800:	ldr	w0, [sp, #80]
  420804:	cmp	w0, #0x0
  420808:	b.eq	4209e0 <main@@Base+0x38e4>  // b.none
  42080c:	ldr	x0, [sp, #112]
  420810:	cmp	x0, #0x0
  420814:	b.eq	4208b8 <main@@Base+0x37bc>  // b.none
  420818:	ldr	x0, [sp, #112]
  42081c:	bl	4068f0 <atoi@plt>
  420820:	str	w0, [sp, #76]
  420824:	ldr	x0, [sp, #112]
  420828:	str	x0, [sp, #88]
  42082c:	b	42083c <main@@Base+0x3740>
  420830:	ldr	x0, [sp, #88]
  420834:	add	x0, x0, #0x1
  420838:	str	x0, [sp, #88]
  42083c:	ldr	x0, [sp, #88]
  420840:	ldrb	w0, [x0]
  420844:	sub	w0, w0, #0x30
  420848:	cmp	w0, #0x9
  42084c:	b.ls	420830 <main@@Base+0x3734>  // b.plast
  420850:	ldr	w0, [sp, #76]
  420854:	cmp	w0, #0x0
  420858:	b.le	42086c <main@@Base+0x3770>
  42085c:	ldr	x0, [sp, #88]
  420860:	ldrb	w0, [x0]
  420864:	cmp	w0, #0x0
  420868:	b.eq	4208a4 <main@@Base+0x37a8>  // b.none
  42086c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420870:	add	x0, x0, #0x798
  420874:	bl	406e40 <gettext@plt>
  420878:	mov	x1, x0
  42087c:	ldr	x0, [sp, #128]
  420880:	ldr	w0, [x0]
  420884:	mov	w3, w0
  420888:	mov	x2, x1
  42088c:	mov	x1, #0x0                   	// #0
  420890:	mov	x0, #0x0                   	// #0
  420894:	bl	423e74 <error@@Base>
  420898:	mov	w0, #0x1                   	// #1
  42089c:	str	w0, [sp, #140]
  4208a0:	b	4209ec <main@@Base+0x38f0>
  4208a4:	ldr	x0, [sp, #128]
  4208a8:	ldr	x0, [x0, #8]
  4208ac:	ldr	w1, [sp, #76]
  4208b0:	str	w1, [x0]
  4208b4:	b	4209ec <main@@Base+0x38f0>
  4208b8:	ldr	x0, [sp, #128]
  4208bc:	ldr	x1, [x0, #24]
  4208c0:	ldr	x0, [sp, #128]
  4208c4:	ldr	x0, [x0, #8]
  4208c8:	ldr	w1, [x1]
  4208cc:	str	w1, [x0]
  4208d0:	b	4209ec <main@@Base+0x38f0>
  4208d4:	ldr	x0, [sp, #112]
  4208d8:	cmp	x0, #0x0
  4208dc:	b.ne	420988 <main@@Base+0x388c>  // b.any
  4208e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4208e4:	add	x0, x0, #0x3f8
  4208e8:	ldr	w0, [x0]
  4208ec:	ldr	w1, [sp, #44]
  4208f0:	cmp	w1, w0
  4208f4:	b.le	420988 <main@@Base+0x388c>
  4208f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4208fc:	add	x0, x0, #0x3f8
  420900:	ldr	w0, [x0]
  420904:	sxtw	x0, w0
  420908:	lsl	x0, x0, #3
  42090c:	ldr	x1, [sp, #32]
  420910:	add	x0, x1, x0
  420914:	ldr	x0, [x0]
  420918:	ldrb	w0, [x0]
  42091c:	sub	w0, w0, #0x30
  420920:	cmp	w0, #0x9
  420924:	b.ls	420954 <main@@Base+0x3858>  // b.plast
  420928:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42092c:	add	x0, x0, #0x3f8
  420930:	ldr	w0, [x0]
  420934:	sxtw	x0, w0
  420938:	lsl	x0, x0, #3
  42093c:	ldr	x1, [sp, #32]
  420940:	add	x0, x1, x0
  420944:	ldr	x0, [x0]
  420948:	ldrb	w0, [x0]
  42094c:	cmp	w0, #0x2e
  420950:	b.ne	420988 <main@@Base+0x388c>  // b.any
  420954:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420958:	add	x0, x0, #0x3f8
  42095c:	ldr	w0, [x0]
  420960:	add	w2, w0, #0x1
  420964:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  420968:	add	x1, x1, #0x3f8
  42096c:	str	w2, [x1]
  420970:	sxtw	x0, w0
  420974:	lsl	x0, x0, #3
  420978:	ldr	x1, [sp, #32]
  42097c:	add	x0, x1, x0
  420980:	ldr	x0, [x0]
  420984:	str	x0, [sp, #112]
  420988:	ldr	w0, [sp, #80]
  42098c:	cmp	w0, #0x0
  420990:	b.eq	4209e8 <main@@Base+0x38ec>  // b.none
  420994:	ldr	x0, [sp, #112]
  420998:	cmp	x0, #0x0
  42099c:	b.eq	4209ac <main@@Base+0x38b0>  // b.none
  4209a0:	ldr	x0, [sp, #112]
  4209a4:	bl	406a20 <atof@plt>
  4209a8:	b	4209b8 <main@@Base+0x38bc>
  4209ac:	ldr	x0, [sp, #128]
  4209b0:	ldr	x0, [x0, #24]
  4209b4:	ldr	d0, [x0]
  4209b8:	ldr	x0, [sp, #128]
  4209bc:	ldr	x0, [x0, #8]
  4209c0:	str	d0, [x0]
  4209c4:	b	4209e8 <main@@Base+0x38ec>
  4209c8:	nop
  4209cc:	b	420a0c <main@@Base+0x3910>
  4209d0:	nop
  4209d4:	b	420a0c <main@@Base+0x3910>
  4209d8:	nop
  4209dc:	b	420a0c <main@@Base+0x3910>
  4209e0:	nop
  4209e4:	b	420a0c <main@@Base+0x3910>
  4209e8:	nop
  4209ec:	b	420a0c <main@@Base+0x3910>
  4209f0:	ldr	x0, [sp, #128]
  4209f4:	add	x0, x0, #0x30
  4209f8:	str	x0, [sp, #128]
  4209fc:	ldr	x0, [sp, #128]
  420a00:	ldr	w0, [x0]
  420a04:	cmp	w0, #0x0
  420a08:	b.ne	420404 <main@@Base+0x3308>  // b.any
  420a0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420a10:	add	x0, x0, #0x3f8
  420a14:	ldr	w0, [x0]
  420a18:	ldr	w1, [sp, #44]
  420a1c:	cmp	w1, w0
  420a20:	b.gt	420380 <main@@Base+0x3284>
  420a24:	b	420a68 <main@@Base+0x396c>
  420a28:	nop
  420a2c:	b	420a68 <main@@Base+0x396c>
  420a30:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420a34:	add	x0, x0, #0x3f8
  420a38:	ldr	w0, [x0]
  420a3c:	add	w2, w0, #0x1
  420a40:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  420a44:	add	x1, x1, #0x3f8
  420a48:	str	w2, [x1]
  420a4c:	sxtw	x0, w0
  420a50:	lsl	x0, x0, #3
  420a54:	ldr	x1, [sp, #32]
  420a58:	add	x0, x1, x0
  420a5c:	ldr	x0, [x0]
  420a60:	ldr	w1, [sp, #40]
  420a64:	bl	41fee0 <main@@Base+0x2de4>
  420a68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420a6c:	add	x0, x0, #0x3f8
  420a70:	ldr	w0, [x0]
  420a74:	ldr	w1, [sp, #44]
  420a78:	cmp	w1, w0
  420a7c:	b.gt	420a30 <main@@Base+0x3934>
  420a80:	ldr	w0, [sp, #40]
  420a84:	cmp	w0, #0x0
  420a88:	b.ne	420ad0 <main@@Base+0x39d4>  // b.any
  420a8c:	ldr	w0, [sp, #140]
  420a90:	cmp	w0, #0x0
  420a94:	b.ne	420aac <main@@Base+0x39b0>  // b.any
  420a98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420a9c:	add	x0, x0, #0x980
  420aa0:	ldr	w0, [x0]
  420aa4:	cmp	w0, #0x0
  420aa8:	b.eq	420ad0 <main@@Base+0x39d4>  // b.none
  420aac:	ldr	w0, [sp, #140]
  420ab0:	bl	4201c0 <main@@Base+0x30c4>
  420ab4:	ldr	w0, [sp, #140]
  420ab8:	cmp	w0, #0x0
  420abc:	b.eq	420ac8 <main@@Base+0x39cc>  // b.none
  420ac0:	mov	w0, #0x2                   	// #2
  420ac4:	b	420acc <main@@Base+0x39d0>
  420ac8:	mov	w0, #0x0                   	// #0
  420acc:	bl	421fbc <die@@Base>
  420ad0:	bl	41cb64 <gmk_add_function@@Base+0x440>
  420ad4:	bl	41ce18 <gmk_add_function@@Base+0x6f4>
  420ad8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420adc:	add	x0, x0, #0x928
  420ae0:	ldr	w1, [x0]
  420ae4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420ae8:	add	x0, x0, #0x6d8
  420aec:	str	w1, [x0]
  420af0:	nop
  420af4:	ldr	x19, [sp, #16]
  420af8:	ldp	x29, x30, [sp], #144
  420afc:	ret
  420b00:	stp	x29, x30, [sp, #-80]!
  420b04:	mov	x29, sp
  420b08:	str	x0, [x29, #24]
  420b0c:	str	x1, [x29, #16]
  420b10:	ldr	x0, [x29, #16]
  420b14:	add	x0, x0, #0x4
  420b18:	add	x0, x0, #0xf
  420b1c:	lsr	x0, x0, #4
  420b20:	lsl	x0, x0, #4
  420b24:	sub	sp, sp, x0
  420b28:	mov	x0, sp
  420b2c:	add	x0, x0, #0xf
  420b30:	lsr	x0, x0, #4
  420b34:	lsl	x0, x0, #4
  420b38:	str	x0, [x29, #48]
  420b3c:	ldr	x0, [x29, #48]
  420b40:	mov	w1, #0x24                  	// #36
  420b44:	strb	w1, [x0]
  420b48:	ldr	x0, [x29, #48]
  420b4c:	add	x0, x0, #0x1
  420b50:	mov	w1, #0x28                  	// #40
  420b54:	strb	w1, [x0]
  420b58:	ldr	x0, [x29, #48]
  420b5c:	add	x0, x0, #0x2
  420b60:	ldr	x2, [x29, #16]
  420b64:	ldr	x1, [x29, #24]
  420b68:	bl	4066b0 <memcpy@plt>
  420b6c:	ldr	x0, [x29, #16]
  420b70:	add	x0, x0, #0x2
  420b74:	ldr	x1, [x29, #48]
  420b78:	add	x0, x1, x0
  420b7c:	mov	w1, #0x29                  	// #41
  420b80:	strb	w1, [x0]
  420b84:	ldr	x0, [x29, #16]
  420b88:	add	x0, x0, #0x3
  420b8c:	ldr	x1, [x29, #48]
  420b90:	add	x0, x1, x0
  420b94:	strb	wzr, [x0]
  420b98:	ldr	x0, [x29, #48]
  420b9c:	bl	40bf38 <variable_expand@@Base>
  420ba0:	str	x0, [x29, #72]
  420ba4:	b	420bb4 <main@@Base+0x3ab8>
  420ba8:	ldr	x0, [x29, #72]
  420bac:	add	x0, x0, #0x1
  420bb0:	str	x0, [x29, #72]
  420bb4:	ldr	x0, [x29, #72]
  420bb8:	ldrb	w0, [x0]
  420bbc:	mov	w1, w0
  420bc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420bc4:	add	x0, x0, #0x728
  420bc8:	sxtw	x1, w1
  420bcc:	ldrh	w0, [x0, x1, lsl #1]
  420bd0:	and	w0, w0, #0x6
  420bd4:	cmp	w0, #0x0
  420bd8:	b.ne	420ba8 <main@@Base+0x3aac>  // b.any
  420bdc:	ldr	x0, [x29, #72]
  420be0:	bl	4066f0 <strlen@plt>
  420be4:	str	x0, [x29, #16]
  420be8:	ldr	x0, [x29, #16]
  420bec:	cmp	x0, #0x0
  420bf0:	b.eq	420e0c <main@@Base+0x3d10>  // b.none
  420bf4:	ldr	x0, [x29, #16]
  420bf8:	add	x0, x0, #0x2
  420bfc:	lsl	x0, x0, #3
  420c00:	add	x0, x0, #0xf
  420c04:	lsr	x0, x0, #4
  420c08:	lsl	x0, x0, #4
  420c0c:	sub	sp, sp, x0
  420c10:	mov	x0, sp
  420c14:	add	x0, x0, #0xf
  420c18:	lsr	x0, x0, #4
  420c1c:	lsl	x0, x0, #4
  420c20:	str	x0, [x29, #40]
  420c24:	ldr	x0, [x29, #40]
  420c28:	str	xzr, [x0]
  420c2c:	mov	w0, #0x1                   	// #1
  420c30:	str	w0, [x29, #60]
  420c34:	ldr	x0, [x29, #16]
  420c38:	add	x0, x0, #0x2
  420c3c:	add	x0, x0, #0xf
  420c40:	lsr	x0, x0, #4
  420c44:	lsl	x0, x0, #4
  420c48:	sub	sp, sp, x0
  420c4c:	mov	x0, sp
  420c50:	add	x0, x0, #0xf
  420c54:	lsr	x0, x0, #4
  420c58:	lsl	x0, x0, #4
  420c5c:	str	x0, [x29, #32]
  420c60:	ldr	x0, [x29, #32]
  420c64:	mov	w1, #0x2d                  	// #45
  420c68:	strb	w1, [x0]
  420c6c:	ldr	x0, [x29, #32]
  420c70:	add	x0, x0, #0x1
  420c74:	str	x0, [x29, #64]
  420c78:	ldrsw	x0, [x29, #60]
  420c7c:	lsl	x0, x0, #3
  420c80:	ldr	x1, [x29, #40]
  420c84:	add	x0, x1, x0
  420c88:	ldr	x1, [x29, #64]
  420c8c:	str	x1, [x0]
  420c90:	b	420d7c <main@@Base+0x3c80>
  420c94:	ldr	x0, [x29, #72]
  420c98:	ldrb	w0, [x0]
  420c9c:	cmp	w0, #0x5c
  420ca0:	b.ne	420cc8 <main@@Base+0x3bcc>  // b.any
  420ca4:	ldr	x0, [x29, #72]
  420ca8:	add	x0, x0, #0x1
  420cac:	ldrb	w0, [x0]
  420cb0:	cmp	w0, #0x0
  420cb4:	b.eq	420cc8 <main@@Base+0x3bcc>  // b.none
  420cb8:	ldr	x0, [x29, #72]
  420cbc:	add	x0, x0, #0x1
  420cc0:	str	x0, [x29, #72]
  420cc4:	b	420d5c <main@@Base+0x3c60>
  420cc8:	ldr	x0, [x29, #72]
  420ccc:	ldrb	w0, [x0]
  420cd0:	mov	w1, w0
  420cd4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420cd8:	add	x0, x0, #0x728
  420cdc:	sxtw	x1, w1
  420ce0:	ldrh	w0, [x0, x1, lsl #1]
  420ce4:	and	w0, w0, #0x2
  420ce8:	cmp	w0, #0x0
  420cec:	b.eq	420d5c <main@@Base+0x3c60>  // b.none
  420cf0:	ldr	x0, [x29, #64]
  420cf4:	add	x1, x0, #0x1
  420cf8:	str	x1, [x29, #64]
  420cfc:	strb	wzr, [x0]
  420d00:	ldr	w0, [x29, #60]
  420d04:	add	w0, w0, #0x1
  420d08:	str	w0, [x29, #60]
  420d0c:	ldrsw	x0, [x29, #60]
  420d10:	lsl	x0, x0, #3
  420d14:	ldr	x1, [x29, #40]
  420d18:	add	x0, x1, x0
  420d1c:	ldr	x1, [x29, #64]
  420d20:	str	x1, [x0]
  420d24:	ldr	x0, [x29, #72]
  420d28:	add	x0, x0, #0x1
  420d2c:	str	x0, [x29, #72]
  420d30:	ldr	x0, [x29, #72]
  420d34:	ldrb	w0, [x0]
  420d38:	mov	w1, w0
  420d3c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420d40:	add	x0, x0, #0x728
  420d44:	sxtw	x1, w1
  420d48:	ldrh	w0, [x0, x1, lsl #1]
  420d4c:	and	w0, w0, #0x2
  420d50:	cmp	w0, #0x0
  420d54:	b.ne	420d24 <main@@Base+0x3c28>  // b.any
  420d58:	b	420d7c <main@@Base+0x3c80>
  420d5c:	ldr	x1, [x29, #72]
  420d60:	add	x0, x1, #0x1
  420d64:	str	x0, [x29, #72]
  420d68:	ldr	x0, [x29, #64]
  420d6c:	add	x2, x0, #0x1
  420d70:	str	x2, [x29, #64]
  420d74:	ldrb	w1, [x1]
  420d78:	strb	w1, [x0]
  420d7c:	ldr	x0, [x29, #72]
  420d80:	ldrb	w0, [x0]
  420d84:	cmp	w0, #0x0
  420d88:	b.ne	420c94 <main@@Base+0x3b98>  // b.any
  420d8c:	ldr	x0, [x29, #64]
  420d90:	strb	wzr, [x0]
  420d94:	ldr	w0, [x29, #60]
  420d98:	add	w0, w0, #0x1
  420d9c:	str	w0, [x29, #60]
  420da0:	ldrsw	x0, [x29, #60]
  420da4:	lsl	x0, x0, #3
  420da8:	ldr	x1, [x29, #40]
  420dac:	add	x0, x1, x0
  420db0:	str	xzr, [x0]
  420db4:	ldr	x0, [x29, #40]
  420db8:	add	x0, x0, #0x8
  420dbc:	ldr	x0, [x0]
  420dc0:	ldrb	w0, [x0]
  420dc4:	cmp	w0, #0x2d
  420dc8:	b.eq	420df8 <main@@Base+0x3cfc>  // b.none
  420dcc:	ldr	x0, [x29, #40]
  420dd0:	add	x0, x0, #0x8
  420dd4:	ldr	x0, [x0]
  420dd8:	mov	w1, #0x3d                  	// #61
  420ddc:	bl	406c20 <strchr@plt>
  420de0:	cmp	x0, #0x0
  420de4:	b.ne	420df8 <main@@Base+0x3cfc>  // b.any
  420de8:	ldr	x0, [x29, #40]
  420dec:	add	x0, x0, #0x8
  420df0:	ldr	x1, [x29, #32]
  420df4:	str	x1, [x0]
  420df8:	mov	w2, #0x1                   	// #1
  420dfc:	ldr	x1, [x29, #40]
  420e00:	ldr	w0, [x29, #60]
  420e04:	bl	420330 <main@@Base+0x3234>
  420e08:	b	420e10 <main@@Base+0x3d14>
  420e0c:	nop
  420e10:	mov	sp, x29
  420e14:	ldp	x29, x30, [sp], #80
  420e18:	ret
  420e1c:	sub	sp, sp, #0x10
  420e20:	str	x0, [sp, #8]
  420e24:	str	x1, [sp]
  420e28:	b	420ec0 <main@@Base+0x3dc4>
  420e2c:	ldr	x0, [sp]
  420e30:	ldrb	w0, [x0]
  420e34:	cmp	w0, #0x24
  420e38:	b.ne	420e54 <main@@Base+0x3d58>  // b.any
  420e3c:	ldr	x0, [sp, #8]
  420e40:	add	x1, x0, #0x1
  420e44:	str	x1, [sp, #8]
  420e48:	mov	w1, #0x24                  	// #36
  420e4c:	strb	w1, [x0]
  420e50:	b	420ea0 <main@@Base+0x3da4>
  420e54:	ldr	x0, [sp]
  420e58:	ldrb	w0, [x0]
  420e5c:	mov	w1, w0
  420e60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  420e64:	add	x0, x0, #0x728
  420e68:	sxtw	x1, w1
  420e6c:	ldrh	w0, [x0, x1, lsl #1]
  420e70:	and	w0, w0, #0x2
  420e74:	cmp	w0, #0x0
  420e78:	b.ne	420e8c <main@@Base+0x3d90>  // b.any
  420e7c:	ldr	x0, [sp]
  420e80:	ldrb	w0, [x0]
  420e84:	cmp	w0, #0x5c
  420e88:	b.ne	420ea0 <main@@Base+0x3da4>  // b.any
  420e8c:	ldr	x0, [sp, #8]
  420e90:	add	x1, x0, #0x1
  420e94:	str	x1, [sp, #8]
  420e98:	mov	w1, #0x5c                  	// #92
  420e9c:	strb	w1, [x0]
  420ea0:	ldr	x1, [sp]
  420ea4:	add	x0, x1, #0x1
  420ea8:	str	x0, [sp]
  420eac:	ldr	x0, [sp, #8]
  420eb0:	add	x2, x0, #0x1
  420eb4:	str	x2, [sp, #8]
  420eb8:	ldrb	w1, [x1]
  420ebc:	strb	w1, [x0]
  420ec0:	ldr	x0, [sp]
  420ec4:	ldrb	w0, [x0]
  420ec8:	cmp	w0, #0x0
  420ecc:	b.ne	420e2c <main@@Base+0x3d30>  // b.any
  420ed0:	ldr	x0, [sp, #8]
  420ed4:	add	sp, sp, #0x10
  420ed8:	ret
  420edc:	stp	x29, x30, [sp, #-256]!
  420ee0:	mov	x29, sp
  420ee4:	str	w0, [x29, #28]
  420ee8:	str	w1, [x29, #24]
  420eec:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420ef0:	add	x1, x0, #0x308
  420ef4:	add	x0, x29, #0x50
  420ef8:	ldr	x2, [x1]
  420efc:	str	x2, [x0]
  420f00:	ldur	x1, [x1, #6]
  420f04:	stur	x1, [x0, #6]
  420f08:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420f0c:	add	x0, x0, #0x2d0
  420f10:	add	x2, x29, #0x38
  420f14:	mov	x3, x0
  420f18:	ldp	x0, x1, [x3]
  420f1c:	stp	x0, x1, [x2]
  420f20:	ldr	x0, [x3, #16]
  420f24:	str	x0, [x2, #16]
  420f28:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  420f2c:	add	x0, x0, #0x7f0
  420f30:	add	x2, x29, #0x20
  420f34:	mov	x3, x0
  420f38:	ldp	x0, x1, [x3]
  420f3c:	stp	x0, x1, [x2]
  420f40:	ldr	w0, [x3, #16]
  420f44:	str	w0, [x2, #16]
  420f48:	str	xzr, [x29, #224]
  420f4c:	str	xzr, [x29, #216]
  420f50:	str	xzr, [x29, #208]
  420f54:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x3450>
  420f58:	add	x0, x0, #0x880
  420f5c:	str	x0, [x29, #248]
  420f60:	b	421860 <main@@Base+0x4764>
  420f64:	ldr	x0, [x29, #248]
  420f68:	ldrb	w0, [x0, #16]
  420f6c:	and	w0, w0, #0x2
  420f70:	and	w0, w0, #0xff
  420f74:	cmp	w0, #0x0
  420f78:	b.eq	421820 <main@@Base+0x4724>  // b.none
  420f7c:	ldr	w0, [x29, #24]
  420f80:	cmp	w0, #0x0
  420f84:	b.eq	420fa0 <main@@Base+0x3ea4>  // b.none
  420f88:	ldr	x0, [x29, #248]
  420f8c:	ldrb	w0, [x0, #16]
  420f90:	and	w0, w0, #0x4
  420f94:	and	w0, w0, #0xff
  420f98:	cmp	w0, #0x0
  420f9c:	b.ne	421820 <main@@Base+0x4724>  // b.any
  420fa0:	ldr	x0, [x29, #248]
  420fa4:	ldr	w0, [x0, #4]
  420fa8:	cmp	w0, #0x7
  420fac:	b.eq	421828 <main@@Base+0x472c>  // b.none
  420fb0:	cmp	w0, #0x7
  420fb4:	b.hi	42181c <main@@Base+0x4720>  // b.pmore
  420fb8:	cmp	w0, #0x6
  420fbc:	b.eq	421378 <main@@Base+0x427c>  // b.none
  420fc0:	cmp	w0, #0x6
  420fc4:	b.hi	42181c <main@@Base+0x4720>  // b.pmore
  420fc8:	cmp	w0, #0x5
  420fcc:	b.eq	421128 <main@@Base+0x402c>  // b.none
  420fd0:	cmp	w0, #0x5
  420fd4:	b.hi	42181c <main@@Base+0x4720>  // b.pmore
  420fd8:	cmp	w0, #0x4
  420fdc:	b.hi	42181c <main@@Base+0x4720>  // b.pmore
  420fe0:	cmp	w0, #0x3
  420fe4:	b.cs	4216c8 <main@@Base+0x45cc>  // b.hs, b.nlast
  420fe8:	cmp	w0, #0x1
  420fec:	b.ls	420ffc <main@@Base+0x3f00>  // b.plast
  420ff0:	cmp	w0, #0x2
  420ff4:	b.eq	4215c4 <main@@Base+0x44c8>  // b.none
  420ff8:	b	42181c <main@@Base+0x4720>
  420ffc:	ldr	x0, [x29, #248]
  421000:	ldr	x0, [x0, #8]
  421004:	ldr	w0, [x0]
  421008:	cmp	w0, #0x0
  42100c:	cset	w0, ne  // ne = any
  421010:	and	w1, w0, #0xff
  421014:	ldr	x0, [x29, #248]
  421018:	ldr	w0, [x0, #4]
  42101c:	cmp	w0, #0x1
  421020:	cset	w0, eq  // eq = none
  421024:	and	w0, w0, #0xff
  421028:	eor	w0, w1, w0
  42102c:	and	w0, w0, #0xff
  421030:	cmp	w0, #0x0
  421034:	b.eq	421830 <main@@Base+0x4734>  // b.none
  421038:	ldr	x0, [x29, #248]
  42103c:	ldr	x0, [x0, #32]
  421040:	cmp	x0, #0x0
  421044:	b.eq	421068 <main@@Base+0x3f6c>  // b.none
  421048:	ldr	x0, [x29, #248]
  42104c:	ldr	x0, [x0, #8]
  421050:	ldr	w1, [x0]
  421054:	ldr	x0, [x29, #248]
  421058:	ldr	x0, [x0, #32]
  42105c:	ldr	w0, [x0]
  421060:	cmp	w1, w0
  421064:	b.eq	421830 <main@@Base+0x4734>  // b.none
  421068:	sub	sp, sp, #0x20
  42106c:	mov	x0, sp
  421070:	add	x0, x0, #0xf
  421074:	lsr	x0, x0, #4
  421078:	lsl	x0, x0, #4
  42107c:	str	x0, [x29, #96]
  421080:	ldr	x0, [x29, #96]
  421084:	ldr	x1, [x29, #248]
  421088:	str	x1, [x0, #8]
  42108c:	ldr	x0, [x29, #96]
  421090:	str	xzr, [x0, #16]
  421094:	ldr	x0, [x29, #96]
  421098:	str	xzr, [x0]
  42109c:	ldr	x0, [x29, #224]
  4210a0:	cmp	x0, #0x0
  4210a4:	b.ne	4210b4 <main@@Base+0x3fb8>  // b.any
  4210a8:	ldr	x0, [x29, #96]
  4210ac:	str	x0, [x29, #224]
  4210b0:	b	4210c0 <main@@Base+0x3fc4>
  4210b4:	ldr	x0, [x29, #216]
  4210b8:	ldr	x1, [x29, #96]
  4210bc:	str	x1, [x0]
  4210c0:	ldr	x0, [x29, #96]
  4210c4:	str	x0, [x29, #216]
  4210c8:	ldr	x0, [x29, #96]
  4210cc:	ldr	x0, [x0, #16]
  4210d0:	cmp	x0, #0x0
  4210d4:	b.ne	4210e8 <main@@Base+0x3fec>  // b.any
  4210d8:	ldr	x0, [x29, #208]
  4210dc:	add	x0, x0, #0x3
  4210e0:	str	x0, [x29, #208]
  4210e4:	b	4210f4 <main@@Base+0x3ff8>
  4210e8:	ldr	x0, [x29, #208]
  4210ec:	add	x0, x0, #0x3
  4210f0:	str	x0, [x29, #208]
  4210f4:	ldr	x0, [x29, #248]
  4210f8:	ldr	w0, [x0]
  4210fc:	cmp	w0, #0xff
  421100:	b.le	421830 <main@@Base+0x4734>
  421104:	ldr	x0, [x29, #248]
  421108:	ldr	x0, [x0, #40]
  42110c:	bl	4066f0 <strlen@plt>
  421110:	mov	x1, x0
  421114:	ldr	x0, [x29, #208]
  421118:	add	x0, x1, x0
  42111c:	add	x0, x0, #0x2
  421120:	str	x0, [x29, #208]
  421124:	b	421830 <main@@Base+0x4734>
  421128:	ldr	w0, [x29, #28]
  42112c:	cmp	w0, #0x0
  421130:	b.eq	421838 <main@@Base+0x473c>  // b.none
  421134:	ldr	x0, [x29, #248]
  421138:	ldr	x0, [x0, #32]
  42113c:	cmp	x0, #0x0
  421140:	b.eq	421164 <main@@Base+0x4068>  // b.none
  421144:	ldr	x0, [x29, #248]
  421148:	ldr	x0, [x0, #8]
  42114c:	ldr	w1, [x0]
  421150:	ldr	x0, [x29, #248]
  421154:	ldr	x0, [x0, #32]
  421158:	ldr	w0, [x0]
  42115c:	cmp	w1, w0
  421160:	b.eq	421820 <main@@Base+0x4724>  // b.none
  421164:	ldr	x0, [x29, #248]
  421168:	ldr	x0, [x0, #24]
  42116c:	cmp	x0, #0x0
  421170:	b.eq	42125c <main@@Base+0x4160>  // b.none
  421174:	ldr	x0, [x29, #248]
  421178:	ldr	x0, [x0, #8]
  42117c:	ldr	w1, [x0]
  421180:	ldr	x0, [x29, #248]
  421184:	ldr	x0, [x0, #24]
  421188:	ldr	w0, [x0]
  42118c:	cmp	w1, w0
  421190:	b.ne	42125c <main@@Base+0x4160>  // b.any
  421194:	sub	sp, sp, #0x20
  421198:	mov	x0, sp
  42119c:	add	x0, x0, #0xf
  4211a0:	lsr	x0, x0, #4
  4211a4:	lsl	x0, x0, #4
  4211a8:	str	x0, [x29, #144]
  4211ac:	ldr	x0, [x29, #144]
  4211b0:	ldr	x1, [x29, #248]
  4211b4:	str	x1, [x0, #8]
  4211b8:	ldr	x0, [x29, #144]
  4211bc:	adrp	x1, 43b000 <_IO_stdin_used@@Base+0x4450>
  4211c0:	add	x1, x1, #0x70
  4211c4:	str	x1, [x0, #16]
  4211c8:	ldr	x0, [x29, #144]
  4211cc:	str	xzr, [x0]
  4211d0:	ldr	x0, [x29, #224]
  4211d4:	cmp	x0, #0x0
  4211d8:	b.ne	4211e8 <main@@Base+0x40ec>  // b.any
  4211dc:	ldr	x0, [x29, #144]
  4211e0:	str	x0, [x29, #224]
  4211e4:	b	4211f4 <main@@Base+0x40f8>
  4211e8:	ldr	x0, [x29, #216]
  4211ec:	ldr	x1, [x29, #144]
  4211f0:	str	x1, [x0]
  4211f4:	ldr	x0, [x29, #144]
  4211f8:	str	x0, [x29, #216]
  4211fc:	ldr	x0, [x29, #144]
  421200:	ldr	x0, [x0, #16]
  421204:	cmp	x0, #0x0
  421208:	b.ne	42121c <main@@Base+0x4120>  // b.any
  42120c:	ldr	x0, [x29, #208]
  421210:	add	x0, x0, #0x3
  421214:	str	x0, [x29, #208]
  421218:	b	421228 <main@@Base+0x412c>
  42121c:	ldr	x0, [x29, #208]
  421220:	add	x0, x0, #0x3
  421224:	str	x0, [x29, #208]
  421228:	ldr	x0, [x29, #248]
  42122c:	ldr	w0, [x0]
  421230:	cmp	w0, #0xff
  421234:	b.le	421370 <main@@Base+0x4274>
  421238:	ldr	x0, [x29, #248]
  42123c:	ldr	x0, [x0, #40]
  421240:	bl	4066f0 <strlen@plt>
  421244:	mov	x1, x0
  421248:	ldr	x0, [x29, #208]
  42124c:	add	x0, x1, x0
  421250:	add	x0, x0, #0x2
  421254:	str	x0, [x29, #208]
  421258:	b	421370 <main@@Base+0x4274>
  42125c:	sub	sp, sp, #0x20
  421260:	mov	x0, sp
  421264:	add	x0, x0, #0xf
  421268:	lsr	x0, x0, #4
  42126c:	lsl	x0, x0, #4
  421270:	str	x0, [x29, #136]
  421274:	ldr	x0, [x29, #248]
  421278:	ldr	x0, [x0, #8]
  42127c:	ldr	w0, [x0]
  421280:	mov	w2, w0
  421284:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421288:	add	x1, x0, #0x7d0
  42128c:	ldr	x0, [x29, #136]
  421290:	bl	406790 <sprintf@plt>
  421294:	sub	sp, sp, #0x20
  421298:	mov	x0, sp
  42129c:	add	x0, x0, #0xf
  4212a0:	lsr	x0, x0, #4
  4212a4:	lsl	x0, x0, #4
  4212a8:	str	x0, [x29, #128]
  4212ac:	ldr	x0, [x29, #128]
  4212b0:	ldr	x1, [x29, #248]
  4212b4:	str	x1, [x0, #8]
  4212b8:	ldr	x0, [x29, #128]
  4212bc:	ldr	x1, [x29, #136]
  4212c0:	str	x1, [x0, #16]
  4212c4:	ldr	x0, [x29, #128]
  4212c8:	str	xzr, [x0]
  4212cc:	ldr	x0, [x29, #224]
  4212d0:	cmp	x0, #0x0
  4212d4:	b.ne	4212e4 <main@@Base+0x41e8>  // b.any
  4212d8:	ldr	x0, [x29, #128]
  4212dc:	str	x0, [x29, #224]
  4212e0:	b	4212f0 <main@@Base+0x41f4>
  4212e4:	ldr	x0, [x29, #216]
  4212e8:	ldr	x1, [x29, #128]
  4212ec:	str	x1, [x0]
  4212f0:	ldr	x0, [x29, #128]
  4212f4:	str	x0, [x29, #216]
  4212f8:	ldr	x0, [x29, #128]
  4212fc:	ldr	x0, [x0, #16]
  421300:	cmp	x0, #0x0
  421304:	b.ne	421318 <main@@Base+0x421c>  // b.any
  421308:	ldr	x0, [x29, #208]
  42130c:	add	x0, x0, #0x3
  421310:	str	x0, [x29, #208]
  421314:	b	42133c <main@@Base+0x4240>
  421318:	ldr	x0, [x29, #136]
  42131c:	bl	4066f0 <strlen@plt>
  421320:	add	x1, x0, #0x1
  421324:	mov	x0, x1
  421328:	lsl	x0, x0, #1
  42132c:	add	x0, x0, x1
  421330:	ldr	x1, [x29, #208]
  421334:	add	x0, x1, x0
  421338:	str	x0, [x29, #208]
  42133c:	ldr	x0, [x29, #248]
  421340:	ldr	w0, [x0]
  421344:	cmp	w0, #0xff
  421348:	b.le	421838 <main@@Base+0x473c>
  42134c:	ldr	x0, [x29, #248]
  421350:	ldr	x0, [x0, #40]
  421354:	bl	4066f0 <strlen@plt>
  421358:	mov	x1, x0
  42135c:	ldr	x0, [x29, #208]
  421360:	add	x0, x1, x0
  421364:	add	x0, x0, #0x2
  421368:	str	x0, [x29, #208]
  42136c:	b	421838 <main@@Base+0x473c>
  421370:	nop
  421374:	b	421838 <main@@Base+0x473c>
  421378:	ldr	w0, [x29, #28]
  42137c:	cmp	w0, #0x0
  421380:	b.eq	421840 <main@@Base+0x4744>  // b.none
  421384:	ldr	x0, [x29, #248]
  421388:	ldr	x0, [x0, #32]
  42138c:	cmp	x0, #0x0
  421390:	b.eq	4213b4 <main@@Base+0x42b8>  // b.none
  421394:	ldr	x0, [x29, #248]
  421398:	ldr	x0, [x0, #8]
  42139c:	ldr	d1, [x0]
  4213a0:	ldr	x0, [x29, #248]
  4213a4:	ldr	x0, [x0, #32]
  4213a8:	ldr	d0, [x0]
  4213ac:	fcmp	d1, d0
  4213b0:	b.eq	421820 <main@@Base+0x4724>  // b.none
  4213b4:	ldr	x0, [x29, #248]
  4213b8:	ldr	x0, [x0, #24]
  4213bc:	cmp	x0, #0x0
  4213c0:	b.eq	4214ac <main@@Base+0x43b0>  // b.none
  4213c4:	ldr	x0, [x29, #248]
  4213c8:	ldr	x0, [x0, #8]
  4213cc:	ldr	d1, [x0]
  4213d0:	ldr	x0, [x29, #248]
  4213d4:	ldr	x0, [x0, #24]
  4213d8:	ldr	d0, [x0]
  4213dc:	fcmp	d1, d0
  4213e0:	b.ne	4214ac <main@@Base+0x43b0>  // b.any
  4213e4:	sub	sp, sp, #0x20
  4213e8:	mov	x0, sp
  4213ec:	add	x0, x0, #0xf
  4213f0:	lsr	x0, x0, #4
  4213f4:	lsl	x0, x0, #4
  4213f8:	str	x0, [x29, #168]
  4213fc:	ldr	x0, [x29, #168]
  421400:	ldr	x1, [x29, #248]
  421404:	str	x1, [x0, #8]
  421408:	ldr	x0, [x29, #168]
  42140c:	adrp	x1, 43b000 <_IO_stdin_used@@Base+0x4450>
  421410:	add	x1, x1, #0x70
  421414:	str	x1, [x0, #16]
  421418:	ldr	x0, [x29, #168]
  42141c:	str	xzr, [x0]
  421420:	ldr	x0, [x29, #224]
  421424:	cmp	x0, #0x0
  421428:	b.ne	421438 <main@@Base+0x433c>  // b.any
  42142c:	ldr	x0, [x29, #168]
  421430:	str	x0, [x29, #224]
  421434:	b	421444 <main@@Base+0x4348>
  421438:	ldr	x0, [x29, #216]
  42143c:	ldr	x1, [x29, #168]
  421440:	str	x1, [x0]
  421444:	ldr	x0, [x29, #168]
  421448:	str	x0, [x29, #216]
  42144c:	ldr	x0, [x29, #168]
  421450:	ldr	x0, [x0, #16]
  421454:	cmp	x0, #0x0
  421458:	b.ne	42146c <main@@Base+0x4370>  // b.any
  42145c:	ldr	x0, [x29, #208]
  421460:	add	x0, x0, #0x3
  421464:	str	x0, [x29, #208]
  421468:	b	421478 <main@@Base+0x437c>
  42146c:	ldr	x0, [x29, #208]
  421470:	add	x0, x0, #0x3
  421474:	str	x0, [x29, #208]
  421478:	ldr	x0, [x29, #248]
  42147c:	ldr	w0, [x0]
  421480:	cmp	w0, #0xff
  421484:	b.le	4215bc <main@@Base+0x44c0>
  421488:	ldr	x0, [x29, #248]
  42148c:	ldr	x0, [x0, #40]
  421490:	bl	4066f0 <strlen@plt>
  421494:	mov	x1, x0
  421498:	ldr	x0, [x29, #208]
  42149c:	add	x0, x1, x0
  4214a0:	add	x0, x0, #0x2
  4214a4:	str	x0, [x29, #208]
  4214a8:	b	4215bc <main@@Base+0x44c0>
  4214ac:	sub	sp, sp, #0x70
  4214b0:	mov	x0, sp
  4214b4:	add	x0, x0, #0xf
  4214b8:	lsr	x0, x0, #4
  4214bc:	lsl	x0, x0, #4
  4214c0:	str	x0, [x29, #160]
  4214c4:	ldr	x0, [x29, #248]
  4214c8:	ldr	x0, [x0, #8]
  4214cc:	ldr	d0, [x0]
  4214d0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4214d4:	add	x1, x0, #0x7d8
  4214d8:	ldr	x0, [x29, #160]
  4214dc:	bl	406790 <sprintf@plt>
  4214e0:	sub	sp, sp, #0x20
  4214e4:	mov	x0, sp
  4214e8:	add	x0, x0, #0xf
  4214ec:	lsr	x0, x0, #4
  4214f0:	lsl	x0, x0, #4
  4214f4:	str	x0, [x29, #152]
  4214f8:	ldr	x0, [x29, #152]
  4214fc:	ldr	x1, [x29, #248]
  421500:	str	x1, [x0, #8]
  421504:	ldr	x0, [x29, #152]
  421508:	ldr	x1, [x29, #160]
  42150c:	str	x1, [x0, #16]
  421510:	ldr	x0, [x29, #152]
  421514:	str	xzr, [x0]
  421518:	ldr	x0, [x29, #224]
  42151c:	cmp	x0, #0x0
  421520:	b.ne	421530 <main@@Base+0x4434>  // b.any
  421524:	ldr	x0, [x29, #152]
  421528:	str	x0, [x29, #224]
  42152c:	b	42153c <main@@Base+0x4440>
  421530:	ldr	x0, [x29, #216]
  421534:	ldr	x1, [x29, #152]
  421538:	str	x1, [x0]
  42153c:	ldr	x0, [x29, #152]
  421540:	str	x0, [x29, #216]
  421544:	ldr	x0, [x29, #152]
  421548:	ldr	x0, [x0, #16]
  42154c:	cmp	x0, #0x0
  421550:	b.ne	421564 <main@@Base+0x4468>  // b.any
  421554:	ldr	x0, [x29, #208]
  421558:	add	x0, x0, #0x3
  42155c:	str	x0, [x29, #208]
  421560:	b	421588 <main@@Base+0x448c>
  421564:	ldr	x0, [x29, #160]
  421568:	bl	4066f0 <strlen@plt>
  42156c:	add	x1, x0, #0x1
  421570:	mov	x0, x1
  421574:	lsl	x0, x0, #1
  421578:	add	x0, x0, x1
  42157c:	ldr	x1, [x29, #208]
  421580:	add	x0, x1, x0
  421584:	str	x0, [x29, #208]
  421588:	ldr	x0, [x29, #248]
  42158c:	ldr	w0, [x0]
  421590:	cmp	w0, #0xff
  421594:	b.le	421840 <main@@Base+0x4744>
  421598:	ldr	x0, [x29, #248]
  42159c:	ldr	x0, [x0, #40]
  4215a0:	bl	4066f0 <strlen@plt>
  4215a4:	mov	x1, x0
  4215a8:	ldr	x0, [x29, #208]
  4215ac:	add	x0, x1, x0
  4215b0:	add	x0, x0, #0x2
  4215b4:	str	x0, [x29, #208]
  4215b8:	b	421840 <main@@Base+0x4744>
  4215bc:	nop
  4215c0:	b	421840 <main@@Base+0x4744>
  4215c4:	ldr	w0, [x29, #28]
  4215c8:	cmp	w0, #0x0
  4215cc:	b.eq	421848 <main@@Base+0x474c>  // b.none
  4215d0:	ldr	x0, [x29, #248]
  4215d4:	ldr	x0, [x0, #8]
  4215d8:	ldr	x0, [x0]
  4215dc:	str	x0, [x29, #232]
  4215e0:	ldr	x0, [x29, #232]
  4215e4:	cmp	x0, #0x0
  4215e8:	b.eq	421848 <main@@Base+0x474c>  // b.none
  4215ec:	sub	sp, sp, #0x20
  4215f0:	mov	x0, sp
  4215f4:	add	x0, x0, #0xf
  4215f8:	lsr	x0, x0, #4
  4215fc:	lsl	x0, x0, #4
  421600:	str	x0, [x29, #104]
  421604:	ldr	x0, [x29, #104]
  421608:	ldr	x1, [x29, #248]
  42160c:	str	x1, [x0, #8]
  421610:	ldr	x0, [x29, #104]
  421614:	ldr	x1, [x29, #232]
  421618:	str	x1, [x0, #16]
  42161c:	ldr	x0, [x29, #104]
  421620:	str	xzr, [x0]
  421624:	ldr	x0, [x29, #224]
  421628:	cmp	x0, #0x0
  42162c:	b.ne	42163c <main@@Base+0x4540>  // b.any
  421630:	ldr	x0, [x29, #104]
  421634:	str	x0, [x29, #224]
  421638:	b	421648 <main@@Base+0x454c>
  42163c:	ldr	x0, [x29, #216]
  421640:	ldr	x1, [x29, #104]
  421644:	str	x1, [x0]
  421648:	ldr	x0, [x29, #104]
  42164c:	str	x0, [x29, #216]
  421650:	ldr	x0, [x29, #104]
  421654:	ldr	x0, [x0, #16]
  421658:	cmp	x0, #0x0
  42165c:	b.ne	421670 <main@@Base+0x4574>  // b.any
  421660:	ldr	x0, [x29, #208]
  421664:	add	x0, x0, #0x3
  421668:	str	x0, [x29, #208]
  42166c:	b	421694 <main@@Base+0x4598>
  421670:	ldr	x0, [x29, #232]
  421674:	bl	4066f0 <strlen@plt>
  421678:	add	x1, x0, #0x1
  42167c:	mov	x0, x1
  421680:	lsl	x0, x0, #1
  421684:	add	x0, x0, x1
  421688:	ldr	x1, [x29, #208]
  42168c:	add	x0, x1, x0
  421690:	str	x0, [x29, #208]
  421694:	ldr	x0, [x29, #248]
  421698:	ldr	w0, [x0]
  42169c:	cmp	w0, #0xff
  4216a0:	b.le	421848 <main@@Base+0x474c>
  4216a4:	ldr	x0, [x29, #248]
  4216a8:	ldr	x0, [x0, #40]
  4216ac:	bl	4066f0 <strlen@plt>
  4216b0:	mov	x1, x0
  4216b4:	ldr	x0, [x29, #208]
  4216b8:	add	x0, x1, x0
  4216bc:	add	x0, x0, #0x2
  4216c0:	str	x0, [x29, #208]
  4216c4:	b	421848 <main@@Base+0x474c>
  4216c8:	ldr	w0, [x29, #28]
  4216cc:	cmp	w0, #0x0
  4216d0:	b.eq	421850 <main@@Base+0x4754>  // b.none
  4216d4:	ldr	x0, [x29, #248]
  4216d8:	ldr	x0, [x0, #8]
  4216dc:	ldr	x0, [x0]
  4216e0:	str	x0, [x29, #120]
  4216e4:	ldr	x0, [x29, #120]
  4216e8:	cmp	x0, #0x0
  4216ec:	b.eq	421850 <main@@Base+0x4754>  // b.none
  4216f0:	str	wzr, [x29, #204]
  4216f4:	b	421804 <main@@Base+0x4708>
  4216f8:	sub	sp, sp, #0x20
  4216fc:	mov	x0, sp
  421700:	add	x0, x0, #0xf
  421704:	lsr	x0, x0, #4
  421708:	lsl	x0, x0, #4
  42170c:	str	x0, [x29, #112]
  421710:	ldr	x0, [x29, #112]
  421714:	ldr	x1, [x29, #248]
  421718:	str	x1, [x0, #8]
  42171c:	ldr	x0, [x29, #120]
  421720:	ldr	x1, [x0]
  421724:	ldr	w0, [x29, #204]
  421728:	lsl	x0, x0, #3
  42172c:	add	x0, x1, x0
  421730:	ldr	x1, [x0]
  421734:	ldr	x0, [x29, #112]
  421738:	str	x1, [x0, #16]
  42173c:	ldr	x0, [x29, #112]
  421740:	str	xzr, [x0]
  421744:	ldr	x0, [x29, #224]
  421748:	cmp	x0, #0x0
  42174c:	b.ne	42175c <main@@Base+0x4660>  // b.any
  421750:	ldr	x0, [x29, #112]
  421754:	str	x0, [x29, #224]
  421758:	b	421768 <main@@Base+0x466c>
  42175c:	ldr	x0, [x29, #216]
  421760:	ldr	x1, [x29, #112]
  421764:	str	x1, [x0]
  421768:	ldr	x0, [x29, #112]
  42176c:	str	x0, [x29, #216]
  421770:	ldr	x0, [x29, #112]
  421774:	ldr	x0, [x0, #16]
  421778:	cmp	x0, #0x0
  42177c:	b.ne	421790 <main@@Base+0x4694>  // b.any
  421780:	ldr	x0, [x29, #208]
  421784:	add	x0, x0, #0x3
  421788:	str	x0, [x29, #208]
  42178c:	b	4217c8 <main@@Base+0x46cc>
  421790:	ldr	x0, [x29, #120]
  421794:	ldr	x1, [x0]
  421798:	ldr	w0, [x29, #204]
  42179c:	lsl	x0, x0, #3
  4217a0:	add	x0, x1, x0
  4217a4:	ldr	x0, [x0]
  4217a8:	bl	4066f0 <strlen@plt>
  4217ac:	add	x1, x0, #0x1
  4217b0:	mov	x0, x1
  4217b4:	lsl	x0, x0, #1
  4217b8:	add	x0, x0, x1
  4217bc:	ldr	x1, [x29, #208]
  4217c0:	add	x0, x1, x0
  4217c4:	str	x0, [x29, #208]
  4217c8:	ldr	x0, [x29, #248]
  4217cc:	ldr	w0, [x0]
  4217d0:	cmp	w0, #0xff
  4217d4:	b.le	4217f8 <main@@Base+0x46fc>
  4217d8:	ldr	x0, [x29, #248]
  4217dc:	ldr	x0, [x0, #40]
  4217e0:	bl	4066f0 <strlen@plt>
  4217e4:	mov	x1, x0
  4217e8:	ldr	x0, [x29, #208]
  4217ec:	add	x0, x1, x0
  4217f0:	add	x0, x0, #0x2
  4217f4:	str	x0, [x29, #208]
  4217f8:	ldr	w0, [x29, #204]
  4217fc:	add	w0, w0, #0x1
  421800:	str	w0, [x29, #204]
  421804:	ldr	x0, [x29, #120]
  421808:	ldr	w0, [x0, #8]
  42180c:	ldr	w1, [x29, #204]
  421810:	cmp	w1, w0
  421814:	b.cc	4216f8 <main@@Base+0x45fc>  // b.lo, b.ul, b.last
  421818:	b	421850 <main@@Base+0x4754>
  42181c:	bl	406b30 <abort@plt>
  421820:	nop
  421824:	b	421854 <main@@Base+0x4758>
  421828:	nop
  42182c:	b	421854 <main@@Base+0x4758>
  421830:	nop
  421834:	b	421854 <main@@Base+0x4758>
  421838:	nop
  42183c:	b	421854 <main@@Base+0x4758>
  421840:	nop
  421844:	b	421854 <main@@Base+0x4758>
  421848:	nop
  42184c:	b	421854 <main@@Base+0x4758>
  421850:	nop
  421854:	ldr	x0, [x29, #248]
  421858:	add	x0, x0, #0x30
  42185c:	str	x0, [x29, #248]
  421860:	ldr	x0, [x29, #248]
  421864:	ldr	w0, [x0]
  421868:	cmp	w0, #0x0
  42186c:	b.ne	420f64 <main@@Base+0x3e68>  // b.any
  421870:	ldr	x0, [x29, #208]
  421874:	add	x0, x0, #0x36
  421878:	str	x0, [x29, #208]
  42187c:	ldr	x0, [x29, #208]
  421880:	add	x0, x0, #0x2
  421884:	add	x0, x0, #0xf
  421888:	lsr	x0, x0, #4
  42188c:	lsl	x0, x0, #4
  421890:	sub	sp, sp, x0
  421894:	mov	x0, sp
  421898:	add	x0, x0, #0xf
  42189c:	lsr	x0, x0, #4
  4218a0:	lsl	x0, x0, #4
  4218a4:	str	x0, [x29, #240]
  4218a8:	ldr	x0, [x29, #208]
  4218ac:	add	x0, x0, #0x2
  4218b0:	mov	x2, x0
  4218b4:	mov	w1, #0x0                   	// #0
  4218b8:	ldr	x0, [x29, #240]
  4218bc:	bl	4069d0 <memset@plt>
  4218c0:	ldr	x0, [x29, #240]
  4218c4:	str	x0, [x29, #232]
  4218c8:	ldr	x0, [x29, #232]
  4218cc:	add	x1, x0, #0x1
  4218d0:	str	x1, [x29, #232]
  4218d4:	mov	w1, #0x2d                  	// #45
  4218d8:	strb	w1, [x0]
  4218dc:	b	42190c <main@@Base+0x4810>
  4218e0:	ldr	x0, [x29, #224]
  4218e4:	ldr	x0, [x0, #8]
  4218e8:	ldr	w2, [x0]
  4218ec:	ldr	x0, [x29, #232]
  4218f0:	add	x1, x0, #0x1
  4218f4:	str	x1, [x29, #232]
  4218f8:	and	w1, w2, #0xff
  4218fc:	strb	w1, [x0]
  421900:	ldr	x0, [x29, #224]
  421904:	ldr	x0, [x0]
  421908:	str	x0, [x29, #224]
  42190c:	ldr	x0, [x29, #224]
  421910:	cmp	x0, #0x0
  421914:	b.eq	421a54 <main@@Base+0x4958>  // b.none
  421918:	ldr	x0, [x29, #224]
  42191c:	ldr	x0, [x0, #16]
  421920:	cmp	x0, #0x0
  421924:	b.ne	421a54 <main@@Base+0x4958>  // b.any
  421928:	ldr	x0, [x29, #224]
  42192c:	ldr	x0, [x0, #8]
  421930:	ldr	w0, [x0]
  421934:	cmp	w0, #0xff
  421938:	b.le	4218e0 <main@@Base+0x47e4>
  42193c:	b	421a54 <main@@Base+0x4958>
  421940:	ldr	x0, [x29, #232]
  421944:	add	x1, x0, #0x1
  421948:	str	x1, [x29, #232]
  42194c:	mov	w1, #0x20                  	// #32
  421950:	strb	w1, [x0]
  421954:	ldr	x0, [x29, #232]
  421958:	add	x1, x0, #0x1
  42195c:	str	x1, [x29, #232]
  421960:	mov	w1, #0x2d                  	// #45
  421964:	strb	w1, [x0]
  421968:	ldr	x0, [x29, #224]
  42196c:	ldr	x0, [x0, #8]
  421970:	ldr	w0, [x0]
  421974:	cmp	w0, #0xff
  421978:	b.gt	4219a0 <main@@Base+0x48a4>
  42197c:	ldr	x0, [x29, #224]
  421980:	ldr	x0, [x0, #8]
  421984:	ldr	w2, [x0]
  421988:	ldr	x0, [x29, #232]
  42198c:	add	x1, x0, #0x1
  421990:	str	x1, [x29, #232]
  421994:	and	w1, w2, #0xff
  421998:	strb	w1, [x0]
  42199c:	b	4219e4 <main@@Base+0x48e8>
  4219a0:	ldr	x0, [x29, #232]
  4219a4:	add	x1, x0, #0x1
  4219a8:	str	x1, [x29, #232]
  4219ac:	mov	w1, #0x2d                  	// #45
  4219b0:	strb	w1, [x0]
  4219b4:	ldr	x0, [x29, #224]
  4219b8:	ldr	x0, [x0, #8]
  4219bc:	ldr	x0, [x0, #40]
  4219c0:	mov	x1, x0
  4219c4:	ldr	x0, [x29, #232]
  4219c8:	bl	406ca0 <strcpy@plt>
  4219cc:	ldr	x0, [x29, #232]
  4219d0:	bl	4066f0 <strlen@plt>
  4219d4:	mov	x1, x0
  4219d8:	ldr	x0, [x29, #232]
  4219dc:	add	x0, x0, x1
  4219e0:	str	x0, [x29, #232]
  4219e4:	ldr	x0, [x29, #224]
  4219e8:	ldr	x0, [x0, #16]
  4219ec:	cmp	x0, #0x0
  4219f0:	b.eq	421a48 <main@@Base+0x494c>  // b.none
  4219f4:	ldr	x0, [x29, #224]
  4219f8:	ldr	x0, [x0, #16]
  4219fc:	ldrb	w0, [x0]
  421a00:	cmp	w0, #0x0
  421a04:	b.eq	421a48 <main@@Base+0x494c>  // b.none
  421a08:	ldr	x0, [x29, #224]
  421a0c:	ldr	x0, [x0, #8]
  421a10:	ldr	w0, [x0]
  421a14:	cmp	w0, #0xff
  421a18:	b.le	421a30 <main@@Base+0x4934>
  421a1c:	ldr	x0, [x29, #232]
  421a20:	add	x1, x0, #0x1
  421a24:	str	x1, [x29, #232]
  421a28:	mov	w1, #0x3d                  	// #61
  421a2c:	strb	w1, [x0]
  421a30:	ldr	x0, [x29, #224]
  421a34:	ldr	x0, [x0, #16]
  421a38:	mov	x1, x0
  421a3c:	ldr	x0, [x29, #232]
  421a40:	bl	420e1c <main@@Base+0x3d20>
  421a44:	str	x0, [x29, #232]
  421a48:	ldr	x0, [x29, #224]
  421a4c:	ldr	x0, [x0]
  421a50:	str	x0, [x29, #224]
  421a54:	ldr	x0, [x29, #224]
  421a58:	cmp	x0, #0x0
  421a5c:	b.ne	421940 <main@@Base+0x4844>  // b.any
  421a60:	ldr	x0, [x29, #240]
  421a64:	add	x0, x0, #0x1
  421a68:	ldr	x1, [x29, #232]
  421a6c:	cmp	x1, x0
  421a70:	b.ne	421a84 <main@@Base+0x4988>  // b.any
  421a74:	ldr	x0, [x29, #240]
  421a78:	strb	wzr, [x0]
  421a7c:	ldr	x0, [x29, #240]
  421a80:	str	x0, [x29, #232]
  421a84:	ldr	x0, [x29, #240]
  421a88:	ldrb	w0, [x0]
  421a8c:	cmp	w0, #0x2d
  421a90:	b.ne	421ab0 <main@@Base+0x49b4>  // b.any
  421a94:	ldr	x0, [x29, #240]
  421a98:	add	x0, x0, #0x1
  421a9c:	ldrb	w0, [x0]
  421aa0:	cmp	w0, #0x20
  421aa4:	b.ne	421ab0 <main@@Base+0x49b4>  // b.any
  421aa8:	mov	x0, #0x2                   	// #2
  421aac:	b	421ab4 <main@@Base+0x49b8>
  421ab0:	mov	x0, #0x0                   	// #0
  421ab4:	ldr	x1, [x29, #240]
  421ab8:	add	x1, x1, x0
  421abc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421ac0:	add	x0, x0, #0x3b8
  421ac4:	ldr	x0, [x0]
  421ac8:	ldr	x0, [x0, #8]
  421acc:	mov	x6, #0x0                   	// #0
  421ad0:	mov	x5, x0
  421ad4:	mov	w4, #0x1                   	// #1
  421ad8:	mov	w3, #0x1                   	// #1
  421adc:	mov	x2, x1
  421ae0:	mov	x1, #0x6                   	// #6
  421ae4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421ae8:	add	x0, x0, #0x7e0
  421aec:	bl	4316d8 <define_variable_in_set@@Base>
  421af0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421af4:	add	x0, x0, #0x978
  421af8:	ldr	x0, [x0]
  421afc:	cmp	x0, #0x0
  421b00:	b.eq	421b38 <main@@Base+0x4a3c>  // b.none
  421b04:	ldr	x0, [x29, #232]
  421b08:	add	x1, x0, #0x1
  421b0c:	str	x1, [x29, #232]
  421b10:	mov	w1, #0x20                  	// #32
  421b14:	strb	w1, [x0]
  421b18:	add	x0, x29, #0x20
  421b1c:	mov	x2, #0x13                  	// #19
  421b20:	mov	x1, x0
  421b24:	ldr	x0, [x29, #232]
  421b28:	bl	4066b0 <memcpy@plt>
  421b2c:	ldr	x0, [x29, #232]
  421b30:	add	x0, x0, #0x13
  421b34:	str	x0, [x29, #232]
  421b38:	ldr	w0, [x29, #28]
  421b3c:	cmp	w0, #0x0
  421b40:	b.eq	421c3c <main@@Base+0x4b40>  // b.none
  421b44:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  421b48:	add	x0, x0, #0xa58
  421b4c:	ldr	w0, [x0]
  421b50:	cmp	w0, #0x0
  421b54:	b.eq	421b60 <main@@Base+0x4a64>  // b.none
  421b58:	add	x0, x29, #0x38
  421b5c:	b	421b64 <main@@Base+0x4a68>
  421b60:	add	x0, x29, #0x50
  421b64:	str	x0, [x29, #192]
  421b68:	ldr	x0, [x29, #192]
  421b6c:	bl	4066f0 <strlen@plt>
  421b70:	str	x0, [x29, #184]
  421b74:	ldr	x1, [x29, #184]
  421b78:	ldr	x0, [x29, #192]
  421b7c:	bl	431f68 <lookup_variable@@Base>
  421b80:	str	x0, [x29, #176]
  421b84:	ldr	x0, [x29, #176]
  421b88:	cmp	x0, #0x0
  421b8c:	b.eq	421c3c <main@@Base+0x4b40>  // b.none
  421b90:	ldr	x0, [x29, #176]
  421b94:	ldr	x0, [x0, #8]
  421b98:	cmp	x0, #0x0
  421b9c:	b.eq	421c3c <main@@Base+0x4b40>  // b.none
  421ba0:	ldr	x0, [x29, #176]
  421ba4:	ldr	x0, [x0, #8]
  421ba8:	ldrb	w0, [x0]
  421bac:	cmp	w0, #0x0
  421bb0:	b.eq	421c3c <main@@Base+0x4b40>  // b.none
  421bb4:	ldr	x2, [x29, #232]
  421bb8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421bbc:	add	x1, x0, #0x7e8
  421bc0:	mov	x0, x2
  421bc4:	ldr	w2, [x1]
  421bc8:	str	w2, [x0]
  421bcc:	ldrb	w1, [x1, #4]
  421bd0:	strb	w1, [x0, #4]
  421bd4:	ldr	x0, [x29, #232]
  421bd8:	add	x0, x0, #0x4
  421bdc:	str	x0, [x29, #232]
  421be0:	ldr	x0, [x29, #232]
  421be4:	add	x1, x0, #0x1
  421be8:	str	x1, [x29, #232]
  421bec:	mov	w1, #0x24                  	// #36
  421bf0:	strb	w1, [x0]
  421bf4:	ldr	x0, [x29, #232]
  421bf8:	add	x1, x0, #0x1
  421bfc:	str	x1, [x29, #232]
  421c00:	mov	w1, #0x28                  	// #40
  421c04:	strb	w1, [x0]
  421c08:	ldr	x2, [x29, #184]
  421c0c:	ldr	x1, [x29, #192]
  421c10:	ldr	x0, [x29, #232]
  421c14:	bl	4066b0 <memcpy@plt>
  421c18:	ldr	x1, [x29, #232]
  421c1c:	ldr	x0, [x29, #184]
  421c20:	add	x0, x1, x0
  421c24:	str	x0, [x29, #232]
  421c28:	ldr	x0, [x29, #232]
  421c2c:	add	x1, x0, #0x1
  421c30:	str	x1, [x29, #232]
  421c34:	mov	w1, #0x29                  	// #41
  421c38:	strb	w1, [x0]
  421c3c:	ldr	x0, [x29, #240]
  421c40:	ldrb	w0, [x0]
  421c44:	cmp	w0, #0x2d
  421c48:	b.ne	421c58 <main@@Base+0x4b5c>  // b.any
  421c4c:	ldr	x0, [x29, #240]
  421c50:	add	x0, x0, #0x1
  421c54:	str	x0, [x29, #240]
  421c58:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421c5c:	add	x0, x0, #0x6e8
  421c60:	ldr	w0, [x0]
  421c64:	cmp	w0, #0x0
  421c68:	b.eq	421c74 <main@@Base+0x4b78>  // b.none
  421c6c:	mov	w0, #0x3                   	// #3
  421c70:	b	421c78 <main@@Base+0x4b7c>
  421c74:	mov	w0, #0x2                   	// #2
  421c78:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  421c7c:	add	x1, x1, #0x3b8
  421c80:	ldr	x1, [x1]
  421c84:	ldr	x1, [x1, #8]
  421c88:	mov	x6, #0x0                   	// #0
  421c8c:	mov	x5, x1
  421c90:	mov	w4, #0x1                   	// #1
  421c94:	mov	w3, w0
  421c98:	ldr	x2, [x29, #240]
  421c9c:	mov	x1, #0x9                   	// #9
  421ca0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421ca4:	add	x0, x0, #0x1c8
  421ca8:	bl	4316d8 <define_variable_in_set@@Base>
  421cac:	mov	sp, x29
  421cb0:	ldp	x29, x30, [sp], #256
  421cb4:	ret
  421cb8:	stp	x29, x30, [sp, #-32]!
  421cbc:	mov	x29, sp
  421cc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421cc4:	add	x0, x0, #0x6f0
  421cc8:	ldr	w0, [x0]
  421ccc:	cmp	w0, #0x0
  421cd0:	b.eq	421ce0 <main@@Base+0x4be4>  // b.none
  421cd4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421cd8:	add	x0, x0, #0x808
  421cdc:	b	421ce8 <main@@Base+0x4bec>
  421ce0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421ce4:	add	x0, x0, #0x70
  421ce8:	str	x0, [sp, #24]
  421cec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421cf0:	add	x0, x0, #0xfd8
  421cf4:	ldr	w0, [x0]
  421cf8:	cmp	w0, #0x0
  421cfc:	b.ne	421e08 <main@@Base+0x4d0c>  // b.any
  421d00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421d04:	add	x0, x0, #0x3c0
  421d08:	ldr	x0, [x0]
  421d0c:	mov	x2, x0
  421d10:	ldr	x1, [sp, #24]
  421d14:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421d18:	add	x0, x0, #0x810
  421d1c:	bl	406dc0 <printf@plt>
  421d20:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  421d24:	add	x0, x0, #0x9f0
  421d28:	ldr	x0, [x0]
  421d2c:	cmp	x0, #0x0
  421d30:	b.eq	421d4c <main@@Base+0x4c50>  // b.none
  421d34:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  421d38:	add	x0, x0, #0x9f0
  421d3c:	ldr	x0, [x0]
  421d40:	ldrb	w0, [x0]
  421d44:	cmp	w0, #0x0
  421d48:	b.ne	421d7c <main@@Base+0x4c80>  // b.any
  421d4c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421d50:	add	x0, x0, #0x820
  421d54:	bl	406e40 <gettext@plt>
  421d58:	mov	x3, x0
  421d5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421d60:	add	x0, x0, #0x3c8
  421d64:	ldr	x0, [x0]
  421d68:	mov	x2, x0
  421d6c:	ldr	x1, [sp, #24]
  421d70:	mov	x0, x3
  421d74:	bl	406dc0 <printf@plt>
  421d78:	b	421db8 <main@@Base+0x4cbc>
  421d7c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421d80:	add	x0, x0, #0x830
  421d84:	bl	406e40 <gettext@plt>
  421d88:	mov	x4, x0
  421d8c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421d90:	add	x0, x0, #0x3c8
  421d94:	ldr	x1, [x0]
  421d98:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  421d9c:	add	x0, x0, #0x9f0
  421da0:	ldr	x0, [x0]
  421da4:	mov	x3, x0
  421da8:	mov	x2, x1
  421dac:	ldr	x1, [sp, #24]
  421db0:	mov	x0, x4
  421db4:	bl	406dc0 <printf@plt>
  421db8:	ldr	x1, [sp, #24]
  421dbc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421dc0:	add	x0, x0, #0x848
  421dc4:	bl	406dc0 <printf@plt>
  421dc8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421dcc:	add	x0, x0, #0x888
  421dd0:	bl	406e40 <gettext@plt>
  421dd4:	ldr	x3, [sp, #24]
  421dd8:	ldr	x2, [sp, #24]
  421ddc:	ldr	x1, [sp, #24]
  421de0:	bl	406dc0 <printf@plt>
  421de4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421de8:	add	x0, x0, #0xfd8
  421dec:	mov	w1, #0x1                   	// #1
  421df0:	str	w1, [x0]
  421df4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421df8:	add	x0, x0, #0x400
  421dfc:	ldr	x0, [x0]
  421e00:	bl	406c90 <fflush@plt>
  421e04:	b	421e0c <main@@Base+0x4d10>
  421e08:	nop
  421e0c:	ldp	x29, x30, [sp], #32
  421e10:	ret
  421e14:	stp	x29, x30, [sp, #-48]!
  421e18:	mov	x29, sp
  421e1c:	str	x19, [sp, #16]
  421e20:	mov	x0, #0x0                   	// #0
  421e24:	bl	406920 <time@plt>
  421e28:	str	x0, [sp, #40]
  421e2c:	bl	421cb8 <main@@Base+0x4bbc>
  421e30:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421e34:	add	x0, x0, #0x958
  421e38:	bl	406e40 <gettext@plt>
  421e3c:	mov	x19, x0
  421e40:	add	x0, sp, #0x28
  421e44:	bl	406830 <ctime@plt>
  421e48:	mov	x1, x0
  421e4c:	mov	x0, x19
  421e50:	bl	406dc0 <printf@plt>
  421e54:	bl	434470 <print_variable_data_base@@Base>
  421e58:	bl	40ac14 <print_dir_data_base@@Base>
  421e5c:	bl	430630 <print_rule_data_base@@Base>
  421e60:	bl	40ed70 <print_file_data_base@@Base>
  421e64:	bl	435348 <print_vpath_data_base@@Base>
  421e68:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421e6c:	add	x0, x0, #0x980
  421e70:	bl	430e70 <strcache_print_stats@@Base>
  421e74:	mov	x0, #0x0                   	// #0
  421e78:	bl	406920 <time@plt>
  421e7c:	str	x0, [sp, #40]
  421e80:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421e84:	add	x0, x0, #0x988
  421e88:	bl	406e40 <gettext@plt>
  421e8c:	mov	x19, x0
  421e90:	add	x0, sp, #0x28
  421e94:	bl	406830 <ctime@plt>
  421e98:	mov	x1, x0
  421e9c:	mov	x0, x19
  421ea0:	bl	406dc0 <printf@plt>
  421ea4:	nop
  421ea8:	ldr	x19, [sp, #16]
  421eac:	ldp	x29, x30, [sp], #48
  421eb0:	ret
  421eb4:	stp	x29, x30, [sp, #-48]!
  421eb8:	mov	x29, sp
  421ebc:	str	w0, [sp, #28]
  421ec0:	bl	43593c <jobserver_enabled@@Base>
  421ec4:	cmp	w0, #0x0
  421ec8:	b.eq	421f4c <main@@Base+0x4e50>  // b.none
  421ecc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421ed0:	add	x0, x0, #0x638
  421ed4:	ldr	w0, [x0]
  421ed8:	cmp	w0, #0x0
  421edc:	b.eq	421f4c <main@@Base+0x4e50>  // b.none
  421ee0:	ldr	w0, [sp, #28]
  421ee4:	cmp	w0, #0x2
  421ee8:	b.eq	421f1c <main@@Base+0x4e20>  // b.none
  421eec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421ef0:	add	x0, x0, #0x638
  421ef4:	ldr	w0, [x0]
  421ef8:	mov	w3, w0
  421efc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421f00:	add	x2, x0, #0x9b0
  421f04:	mov	x1, #0x14                  	// #20
  421f08:	mov	x0, #0x0                   	// #0
  421f0c:	bl	423e74 <error@@Base>
  421f10:	b	421f4c <main@@Base+0x4e50>
  421f14:	mov	w0, #0x0                   	// #0
  421f18:	bl	435a18 <jobserver_release@@Base>
  421f1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f20:	add	x0, x0, #0x638
  421f24:	ldr	w0, [x0]
  421f28:	sub	w1, w0, #0x1
  421f2c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f30:	add	x0, x0, #0x638
  421f34:	str	w1, [x0]
  421f38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f3c:	add	x0, x0, #0x638
  421f40:	ldr	w0, [x0]
  421f44:	cmp	w0, #0x0
  421f48:	b.ne	421f14 <main@@Base+0x4e18>  // b.any
  421f4c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f50:	add	x0, x0, #0x948
  421f54:	ldr	w0, [x0]
  421f58:	cmp	w0, #0x0
  421f5c:	b.eq	421fb0 <main@@Base+0x4eb4>  // b.none
  421f60:	bl	435ab0 <jobserver_acquire_all@@Base>
  421f64:	add	w0, w0, #0x1
  421f68:	str	w0, [sp, #44]
  421f6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f70:	add	x0, x0, #0x948
  421f74:	ldr	w0, [x0]
  421f78:	ldr	w1, [sp, #44]
  421f7c:	cmp	w1, w0
  421f80:	b.eq	421fac <main@@Base+0x4eb0>  // b.none
  421f84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421f88:	add	x0, x0, #0x948
  421f8c:	ldr	w0, [x0]
  421f90:	mov	w4, w0
  421f94:	ldr	w3, [sp, #44]
  421f98:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  421f9c:	add	x2, x0, #0x9f0
  421fa0:	mov	x1, #0x28                  	// #40
  421fa4:	mov	x0, #0x0                   	// #0
  421fa8:	bl	423e74 <error@@Base>
  421fac:	bl	41d0c8 <gmk_add_function@@Base+0x9a4>
  421fb0:	nop
  421fb4:	ldp	x29, x30, [sp], #48
  421fb8:	ret

0000000000421fbc <die@@Base>:
  421fbc:	stp	x29, x30, [sp, #-48]!
  421fc0:	mov	x29, sp
  421fc4:	str	w0, [sp, #28]
  421fc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421fcc:	add	x0, x0, #0xfdc
  421fd0:	ldrb	w0, [x0]
  421fd4:	cmp	w0, #0x0
  421fd8:	b.ne	422108 <die@@Base+0x14c>  // b.any
  421fdc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421fe0:	add	x0, x0, #0xfdc
  421fe4:	mov	w1, #0x1                   	// #1
  421fe8:	strb	w1, [x0]
  421fec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  421ff0:	add	x0, x0, #0x70c
  421ff4:	ldr	w0, [x0]
  421ff8:	cmp	w0, #0x0
  421ffc:	b.eq	422004 <die@@Base+0x48>  // b.none
  422000:	bl	421cb8 <main@@Base+0x4bbc>
  422004:	ldr	w0, [sp, #28]
  422008:	cmp	w0, #0x0
  42200c:	cset	w0, ne  // ne = any
  422010:	and	w0, w0, #0xff
  422014:	str	w0, [sp, #44]
  422018:	b	422028 <die@@Base+0x6c>
  42201c:	ldr	w1, [sp, #44]
  422020:	mov	w0, #0x1                   	// #1
  422024:	bl	417c80 <reap_children@@Base>
  422028:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42202c:	add	x0, x0, #0x628
  422030:	ldr	w0, [x0]
  422034:	cmp	w0, #0x0
  422038:	b.ne	42201c <die@@Base+0x60>  // b.any
  42203c:	bl	436038 <remote_cleanup@@Base>
  422040:	mov	w0, #0x0                   	// #0
  422044:	bl	40cf10 <remove_intermediates@@Base>
  422048:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42204c:	add	x0, x0, #0x6f0
  422050:	ldr	w0, [x0]
  422054:	cmp	w0, #0x0
  422058:	b.eq	422060 <die@@Base+0xa4>  // b.none
  42205c:	bl	421e14 <main@@Base+0x4d18>
  422060:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422064:	add	x0, x0, #0xa10
  422068:	ldr	w0, [x0]
  42206c:	cmp	w0, #0x0
  422070:	b.eq	422078 <die@@Base+0xbc>  // b.none
  422074:	bl	40f1e8 <verify_file_data_base@@Base>
  422078:	ldr	w0, [sp, #28]
  42207c:	bl	421eb4 <main@@Base+0x4db8>
  422080:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422084:	add	x0, x0, #0xff0
  422088:	ldr	x0, [x0]
  42208c:	cmp	x0, #0x0
  422090:	b.eq	4220d8 <die@@Base+0x11c>  // b.none
  422094:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422098:	add	x0, x0, #0xff0
  42209c:	ldr	x0, [x0]
  4220a0:	bl	423a2c <output_close@@Base>
  4220a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4220a8:	add	x0, x0, #0xff0
  4220ac:	ldr	x1, [x0]
  4220b0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4220b4:	add	x0, x0, #0xa80
  4220b8:	cmp	x1, x0
  4220bc:	b.eq	4220cc <die@@Base+0x110>  // b.none
  4220c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4220c4:	add	x0, x0, #0xa80
  4220c8:	bl	423a2c <output_close@@Base>
  4220cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4220d0:	add	x0, x0, #0xff0
  4220d4:	str	xzr, [x0]
  4220d8:	mov	x0, #0x0                   	// #0
  4220dc:	bl	423a2c <output_close@@Base>
  4220e0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4220e4:	add	x0, x0, #0xa08
  4220e8:	ldr	x0, [x0]
  4220ec:	cmp	x0, #0x0
  4220f0:	b.eq	422108 <die@@Base+0x14c>  // b.none
  4220f4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4220f8:	add	x0, x0, #0xa08
  4220fc:	ldr	x0, [x0]
  422100:	bl	406bf0 <chdir@plt>
  422104:	str	w0, [sp, #40]
  422108:	ldr	w0, [sp, #28]
  42210c:	bl	406710 <exit@plt>

0000000000422110 <alpha_compare@@Base>:
  422110:	stp	x29, x30, [sp, #-48]!
  422114:	mov	x29, sp
  422118:	str	x0, [sp, #24]
  42211c:	str	x1, [sp, #16]
  422120:	ldr	x0, [sp, #24]
  422124:	ldr	x0, [x0]
  422128:	str	x0, [sp, #40]
  42212c:	ldr	x0, [sp, #16]
  422130:	ldr	x0, [x0]
  422134:	str	x0, [sp, #32]
  422138:	ldr	x0, [sp, #40]
  42213c:	ldrb	w1, [x0]
  422140:	ldr	x0, [sp, #32]
  422144:	ldrb	w0, [x0]
  422148:	cmp	w1, w0
  42214c:	b.eq	42216c <alpha_compare@@Base+0x5c>  // b.none
  422150:	ldr	x0, [sp, #40]
  422154:	ldrb	w0, [x0]
  422158:	mov	w1, w0
  42215c:	ldr	x0, [sp, #32]
  422160:	ldrb	w0, [x0]
  422164:	sub	w0, w1, w0
  422168:	b	422178 <alpha_compare@@Base+0x68>
  42216c:	ldr	x1, [sp, #32]
  422170:	ldr	x0, [sp, #40]
  422174:	bl	406bc0 <strcmp@plt>
  422178:	ldp	x29, x30, [sp], #48
  42217c:	ret

0000000000422180 <collapse_continuations@@Base>:
  422180:	stp	x29, x30, [sp, #-80]!
  422184:	mov	x29, sp
  422188:	str	x0, [sp, #24]
  42218c:	ldr	x0, [sp, #24]
  422190:	str	x0, [sp, #72]
  422194:	ldr	x0, [sp, #24]
  422198:	str	x0, [sp, #64]
  42219c:	mov	w1, #0xa                   	// #10
  4221a0:	ldr	x0, [sp, #64]
  4221a4:	bl	406c20 <strchr@plt>
  4221a8:	str	x0, [sp, #56]
  4221ac:	ldr	x0, [sp, #56]
  4221b0:	cmp	x0, #0x0
  4221b4:	b.eq	4223bc <collapse_continuations@@Base+0x23c>  // b.none
  4221b8:	ldr	x0, [sp, #56]
  4221bc:	str	x0, [sp, #40]
  4221c0:	ldr	x1, [sp, #56]
  4221c4:	ldr	x0, [sp, #24]
  4221c8:	cmp	x1, x0
  4221cc:	b.ls	42223c <collapse_continuations@@Base+0xbc>  // b.plast
  4221d0:	ldr	x0, [sp, #56]
  4221d4:	sub	x0, x0, #0x1
  4221d8:	ldrb	w0, [x0]
  4221dc:	cmp	w0, #0x5c
  4221e0:	b.ne	42223c <collapse_continuations@@Base+0xbc>  // b.any
  4221e4:	mov	w0, #0xfffffffe            	// #-2
  4221e8:	str	w0, [sp, #52]
  4221ec:	b	4221fc <collapse_continuations@@Base+0x7c>
  4221f0:	ldr	w0, [sp, #52]
  4221f4:	sub	w0, w0, #0x1
  4221f8:	str	w0, [sp, #52]
  4221fc:	ldrsw	x0, [sp, #52]
  422200:	ldr	x1, [sp, #40]
  422204:	add	x0, x1, x0
  422208:	ldr	x1, [sp, #24]
  42220c:	cmp	x1, x0
  422210:	b.hi	42222c <collapse_continuations@@Base+0xac>  // b.pmore
  422214:	ldrsw	x0, [sp, #52]
  422218:	ldr	x1, [sp, #40]
  42221c:	add	x0, x1, x0
  422220:	ldrb	w0, [x0]
  422224:	cmp	w0, #0x5c
  422228:	b.eq	4221f0 <collapse_continuations@@Base+0x70>  // b.none
  42222c:	ldr	w0, [sp, #52]
  422230:	add	w0, w0, #0x1
  422234:	str	w0, [sp, #52]
  422238:	b	422240 <collapse_continuations@@Base+0xc0>
  42223c:	str	wzr, [sp, #52]
  422240:	ldr	x1, [sp, #40]
  422244:	ldr	x0, [sp, #64]
  422248:	sub	x1, x1, x0
  42224c:	ldrsw	x0, [sp, #52]
  422250:	add	x1, x1, x0
  422254:	ldr	w0, [sp, #52]
  422258:	lsr	w2, w0, #31
  42225c:	add	w0, w2, w0
  422260:	asr	w0, w0, #1
  422264:	sxtw	x0, w0
  422268:	sub	x0, x1, x0
  42226c:	str	x0, [sp, #32]
  422270:	ldr	x1, [sp, #72]
  422274:	ldr	x0, [sp, #64]
  422278:	cmp	x1, x0
  42227c:	b.eq	422290 <collapse_continuations@@Base+0x110>  // b.none
  422280:	ldr	x2, [sp, #32]
  422284:	ldr	x1, [sp, #64]
  422288:	ldr	x0, [sp, #72]
  42228c:	bl	4066c0 <memmove@plt>
  422290:	ldr	x1, [sp, #72]
  422294:	ldr	x0, [sp, #32]
  422298:	add	x0, x1, x0
  42229c:	str	x0, [sp, #72]
  4222a0:	ldr	x0, [sp, #56]
  4222a4:	add	x0, x0, #0x1
  4222a8:	str	x0, [sp, #64]
  4222ac:	ldr	w0, [sp, #52]
  4222b0:	and	w0, w0, #0x1
  4222b4:	cmp	w0, #0x0
  4222b8:	b.eq	42236c <collapse_continuations@@Base+0x1ec>  // b.none
  4222bc:	b	4222cc <collapse_continuations@@Base+0x14c>
  4222c0:	ldr	x0, [sp, #64]
  4222c4:	add	x0, x0, #0x1
  4222c8:	str	x0, [sp, #64]
  4222cc:	ldr	x0, [sp, #64]
  4222d0:	ldrb	w0, [x0]
  4222d4:	mov	w1, w0
  4222d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4222dc:	add	x0, x0, #0x728
  4222e0:	sxtw	x1, w1
  4222e4:	ldrh	w0, [x0, x1, lsl #1]
  4222e8:	and	w0, w0, #0x2
  4222ec:	cmp	w0, #0x0
  4222f0:	b.ne	4222c0 <collapse_continuations@@Base+0x140>  // b.any
  4222f4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4222f8:	add	x0, x0, #0xa58
  4222fc:	ldr	w0, [x0]
  422300:	cmp	w0, #0x0
  422304:	b.ne	422354 <collapse_continuations@@Base+0x1d4>  // b.any
  422308:	b	422318 <collapse_continuations@@Base+0x198>
  42230c:	ldr	x0, [sp, #72]
  422310:	sub	x0, x0, #0x1
  422314:	str	x0, [sp, #72]
  422318:	ldr	x1, [sp, #72]
  42231c:	ldr	x0, [sp, #24]
  422320:	cmp	x1, x0
  422324:	b.ls	422354 <collapse_continuations@@Base+0x1d4>  // b.plast
  422328:	ldr	x0, [sp, #72]
  42232c:	sub	x0, x0, #0x1
  422330:	ldrb	w0, [x0]
  422334:	mov	w1, w0
  422338:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42233c:	add	x0, x0, #0x728
  422340:	sxtw	x1, w1
  422344:	ldrh	w0, [x0, x1, lsl #1]
  422348:	and	w0, w0, #0x2
  42234c:	cmp	w0, #0x0
  422350:	b.ne	42230c <collapse_continuations@@Base+0x18c>  // b.any
  422354:	ldr	x0, [sp, #72]
  422358:	add	x1, x0, #0x1
  42235c:	str	x1, [sp, #72]
  422360:	mov	w1, #0x20                  	// #32
  422364:	strb	w1, [x0]
  422368:	b	422380 <collapse_continuations@@Base+0x200>
  42236c:	ldr	x0, [sp, #72]
  422370:	add	x1, x0, #0x1
  422374:	str	x1, [sp, #72]
  422378:	mov	w1, #0xa                   	// #10
  42237c:	strb	w1, [x0]
  422380:	mov	w1, #0xa                   	// #10
  422384:	ldr	x0, [sp, #64]
  422388:	bl	406c20 <strchr@plt>
  42238c:	str	x0, [sp, #56]
  422390:	ldr	x0, [sp, #56]
  422394:	cmp	x0, #0x0
  422398:	b.ne	4221b8 <collapse_continuations@@Base+0x38>  // b.any
  42239c:	ldr	x0, [sp, #64]
  4223a0:	bl	4066f0 <strlen@plt>
  4223a4:	add	x0, x0, #0x1
  4223a8:	mov	x2, x0
  4223ac:	ldr	x1, [sp, #64]
  4223b0:	ldr	x0, [sp, #72]
  4223b4:	bl	4066c0 <memmove@plt>
  4223b8:	b	4223c0 <collapse_continuations@@Base+0x240>
  4223bc:	nop
  4223c0:	ldp	x29, x30, [sp], #80
  4223c4:	ret

00000000004223c8 <print_spaces@@Base>:
  4223c8:	stp	x29, x30, [sp, #-32]!
  4223cc:	mov	x29, sp
  4223d0:	str	w0, [sp, #28]
  4223d4:	b	4223e0 <print_spaces@@Base+0x18>
  4223d8:	mov	w0, #0x20                  	// #32
  4223dc:	bl	406e00 <putchar@plt>
  4223e0:	ldr	w0, [sp, #28]
  4223e4:	sub	w1, w0, #0x1
  4223e8:	str	w1, [sp, #28]
  4223ec:	cmp	w0, #0x0
  4223f0:	b.ne	4223d8 <print_spaces@@Base+0x10>  // b.any
  4223f4:	nop
  4223f8:	nop
  4223fc:	ldp	x29, x30, [sp], #32
  422400:	ret

0000000000422404 <concat@@Base>:
  422404:	stp	x29, x30, [sp, #-288]!
  422408:	mov	x29, sp
  42240c:	str	w0, [sp, #28]
  422410:	str	x1, [sp, #232]
  422414:	str	x2, [sp, #240]
  422418:	str	x3, [sp, #248]
  42241c:	str	x4, [sp, #256]
  422420:	str	x5, [sp, #264]
  422424:	str	x6, [sp, #272]
  422428:	str	x7, [sp, #280]
  42242c:	str	q0, [sp, #96]
  422430:	str	q1, [sp, #112]
  422434:	str	q2, [sp, #128]
  422438:	str	q3, [sp, #144]
  42243c:	str	q4, [sp, #160]
  422440:	str	q5, [sp, #176]
  422444:	str	q6, [sp, #192]
  422448:	str	q7, [sp, #208]
  42244c:	str	xzr, [sp, #88]
  422450:	add	x0, sp, #0x120
  422454:	str	x0, [sp, #40]
  422458:	add	x0, sp, #0x120
  42245c:	str	x0, [sp, #48]
  422460:	add	x0, sp, #0xe0
  422464:	str	x0, [sp, #56]
  422468:	mov	w0, #0xffffffc8            	// #-56
  42246c:	str	w0, [sp, #64]
  422470:	mov	w0, #0xffffff80            	// #-128
  422474:	str	w0, [sp, #68]
  422478:	b	4225c8 <concat@@Base+0x1c4>
  42247c:	ldr	w1, [sp, #64]
  422480:	ldr	x0, [sp, #40]
  422484:	cmp	w1, #0x0
  422488:	b.lt	42249c <concat@@Base+0x98>  // b.tstop
  42248c:	add	x1, x0, #0xf
  422490:	and	x1, x1, #0xfffffffffffffff8
  422494:	str	x1, [sp, #40]
  422498:	b	4224cc <concat@@Base+0xc8>
  42249c:	add	w2, w1, #0x8
  4224a0:	str	w2, [sp, #64]
  4224a4:	ldr	w2, [sp, #64]
  4224a8:	cmp	w2, #0x0
  4224ac:	b.le	4224c0 <concat@@Base+0xbc>
  4224b0:	add	x1, x0, #0xf
  4224b4:	and	x1, x1, #0xfffffffffffffff8
  4224b8:	str	x1, [sp, #40]
  4224bc:	b	4224cc <concat@@Base+0xc8>
  4224c0:	ldr	x2, [sp, #48]
  4224c4:	sxtw	x0, w1
  4224c8:	add	x0, x2, x0
  4224cc:	ldr	x0, [x0]
  4224d0:	str	x0, [sp, #80]
  4224d4:	ldr	x0, [sp, #80]
  4224d8:	cmp	x0, #0x0
  4224dc:	b.eq	4224ec <concat@@Base+0xe8>  // b.none
  4224e0:	ldr	x0, [sp, #80]
  4224e4:	bl	4066f0 <strlen@plt>
  4224e8:	b	4224f0 <concat@@Base+0xec>
  4224ec:	mov	x0, #0x0                   	// #0
  4224f0:	str	x0, [sp, #72]
  4224f4:	ldr	x0, [sp, #72]
  4224f8:	cmp	x0, #0x0
  4224fc:	b.ne	422504 <concat@@Base+0x100>  // b.any
  422500:	b	4225c8 <concat@@Base+0x1c4>
  422504:	ldr	x1, [sp, #88]
  422508:	ldr	x0, [sp, #72]
  42250c:	add	x1, x1, x0
  422510:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422514:	add	x0, x0, #0xfe0
  422518:	ldr	x0, [x0]
  42251c:	cmp	x1, x0
  422520:	b.ls	422598 <concat@@Base+0x194>  // b.plast
  422524:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422528:	add	x0, x0, #0xfe0
  42252c:	ldr	x0, [x0]
  422530:	cmp	x0, #0x0
  422534:	b.eq	422548 <concat@@Base+0x144>  // b.none
  422538:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42253c:	add	x0, x0, #0xfe0
  422540:	ldr	x0, [x0]
  422544:	b	42254c <concat@@Base+0x148>
  422548:	mov	x0, #0x3c                  	// #60
  42254c:	ldr	x1, [sp, #72]
  422550:	add	x0, x0, x1
  422554:	lsl	x1, x0, #1
  422558:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42255c:	add	x0, x0, #0xfe0
  422560:	str	x1, [x0]
  422564:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422568:	add	x0, x0, #0xfe8
  42256c:	ldr	x2, [x0]
  422570:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422574:	add	x0, x0, #0xfe0
  422578:	ldr	x0, [x0]
  42257c:	mov	x1, x0
  422580:	mov	x0, x2
  422584:	bl	422720 <xrealloc@@Base>
  422588:	mov	x1, x0
  42258c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422590:	add	x0, x0, #0xfe8
  422594:	str	x1, [x0]
  422598:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42259c:	add	x0, x0, #0xfe8
  4225a0:	ldr	x1, [x0]
  4225a4:	ldr	x0, [sp, #88]
  4225a8:	add	x0, x1, x0
  4225ac:	ldr	x2, [sp, #72]
  4225b0:	ldr	x1, [sp, #80]
  4225b4:	bl	4066b0 <memcpy@plt>
  4225b8:	ldr	x1, [sp, #88]
  4225bc:	ldr	x0, [sp, #72]
  4225c0:	add	x0, x1, x0
  4225c4:	str	x0, [sp, #88]
  4225c8:	ldr	w0, [sp, #28]
  4225cc:	sub	w1, w0, #0x1
  4225d0:	str	w1, [sp, #28]
  4225d4:	cmp	w0, #0x0
  4225d8:	b.ne	42247c <concat@@Base+0x78>  // b.any
  4225dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4225e0:	add	x0, x0, #0xfe0
  4225e4:	ldr	x0, [x0]
  4225e8:	ldr	x1, [sp, #88]
  4225ec:	cmp	x1, x0
  4225f0:	b.ne	422660 <concat@@Base+0x25c>  // b.any
  4225f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4225f8:	add	x0, x0, #0xfe0
  4225fc:	ldr	x0, [x0]
  422600:	cmp	x0, #0x0
  422604:	b.eq	42261c <concat@@Base+0x218>  // b.none
  422608:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42260c:	add	x0, x0, #0xfe0
  422610:	ldr	x0, [x0]
  422614:	lsl	x0, x0, #1
  422618:	b	422620 <concat@@Base+0x21c>
  42261c:	mov	x0, #0x78                  	// #120
  422620:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  422624:	add	x1, x1, #0xfe0
  422628:	str	x0, [x1]
  42262c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422630:	add	x0, x0, #0xfe8
  422634:	ldr	x2, [x0]
  422638:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42263c:	add	x0, x0, #0xfe0
  422640:	ldr	x0, [x0]
  422644:	mov	x1, x0
  422648:	mov	x0, x2
  42264c:	bl	422720 <xrealloc@@Base>
  422650:	mov	x1, x0
  422654:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422658:	add	x0, x0, #0xfe8
  42265c:	str	x1, [x0]
  422660:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422664:	add	x0, x0, #0xfe8
  422668:	ldr	x1, [x0]
  42266c:	ldr	x0, [sp, #88]
  422670:	add	x0, x1, x0
  422674:	strb	wzr, [x0]
  422678:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42267c:	add	x0, x0, #0xfe8
  422680:	ldr	x0, [x0]
  422684:	ldp	x29, x30, [sp], #288
  422688:	ret

000000000042268c <xmalloc@@Base>:
  42268c:	stp	x29, x30, [sp, #-48]!
  422690:	mov	x29, sp
  422694:	str	x0, [sp, #24]
  422698:	ldr	x0, [sp, #24]
  42269c:	cmp	x0, #0x0
  4226a0:	b.eq	4226ac <xmalloc@@Base+0x20>  // b.none
  4226a4:	ldr	x0, [sp, #24]
  4226a8:	b	4226b0 <xmalloc@@Base+0x24>
  4226ac:	mov	x0, #0x1                   	// #1
  4226b0:	bl	406930 <malloc@plt>
  4226b4:	str	x0, [sp, #40]
  4226b8:	ldr	x0, [sp, #40]
  4226bc:	cmp	x0, #0x0
  4226c0:	b.ne	4226c8 <xmalloc@@Base+0x3c>  // b.any
  4226c4:	bl	42439c <out_of_memory@@Base>
  4226c8:	ldr	x0, [sp, #40]
  4226cc:	ldp	x29, x30, [sp], #48
  4226d0:	ret

00000000004226d4 <xcalloc@@Base>:
  4226d4:	stp	x29, x30, [sp, #-48]!
  4226d8:	mov	x29, sp
  4226dc:	str	x0, [sp, #24]
  4226e0:	ldr	x0, [sp, #24]
  4226e4:	cmp	x0, #0x0
  4226e8:	b.eq	4226f4 <xcalloc@@Base+0x20>  // b.none
  4226ec:	ldr	x0, [sp, #24]
  4226f0:	b	4226f8 <xcalloc@@Base+0x24>
  4226f4:	mov	x0, #0x1                   	// #1
  4226f8:	mov	x1, #0x1                   	// #1
  4226fc:	bl	406a40 <calloc@plt>
  422700:	str	x0, [sp, #40]
  422704:	ldr	x0, [sp, #40]
  422708:	cmp	x0, #0x0
  42270c:	b.ne	422714 <xcalloc@@Base+0x40>  // b.any
  422710:	bl	42439c <out_of_memory@@Base>
  422714:	ldr	x0, [sp, #40]
  422718:	ldp	x29, x30, [sp], #48
  42271c:	ret

0000000000422720 <xrealloc@@Base>:
  422720:	stp	x29, x30, [sp, #-48]!
  422724:	mov	x29, sp
  422728:	str	x0, [sp, #24]
  42272c:	str	x1, [sp, #16]
  422730:	ldr	x0, [sp, #16]
  422734:	cmp	x0, #0x0
  422738:	b.ne	422744 <xrealloc@@Base+0x24>  // b.any
  42273c:	mov	x0, #0x1                   	// #1
  422740:	str	x0, [sp, #16]
  422744:	ldr	x0, [sp, #24]
  422748:	cmp	x0, #0x0
  42274c:	b.eq	422760 <xrealloc@@Base+0x40>  // b.none
  422750:	ldr	x1, [sp, #16]
  422754:	ldr	x0, [sp, #24]
  422758:	bl	406a70 <realloc@plt>
  42275c:	b	422768 <xrealloc@@Base+0x48>
  422760:	ldr	x0, [sp, #16]
  422764:	bl	406930 <malloc@plt>
  422768:	str	x0, [sp, #40]
  42276c:	ldr	x0, [sp, #40]
  422770:	cmp	x0, #0x0
  422774:	b.ne	42277c <xrealloc@@Base+0x5c>  // b.any
  422778:	bl	42439c <out_of_memory@@Base>
  42277c:	ldr	x0, [sp, #40]
  422780:	ldp	x29, x30, [sp], #48
  422784:	ret

0000000000422788 <xstrdup@@Base>:
  422788:	stp	x29, x30, [sp, #-48]!
  42278c:	mov	x29, sp
  422790:	str	x0, [sp, #24]
  422794:	ldr	x0, [sp, #24]
  422798:	bl	406a90 <strdup@plt>
  42279c:	str	x0, [sp, #40]
  4227a0:	ldr	x0, [sp, #40]
  4227a4:	cmp	x0, #0x0
  4227a8:	b.ne	4227b0 <xstrdup@@Base+0x28>  // b.any
  4227ac:	bl	42439c <out_of_memory@@Base>
  4227b0:	ldr	x0, [sp, #40]
  4227b4:	ldp	x29, x30, [sp], #48
  4227b8:	ret

00000000004227bc <xstrndup@@Base>:
  4227bc:	stp	x29, x30, [sp, #-48]!
  4227c0:	mov	x29, sp
  4227c4:	str	x0, [sp, #24]
  4227c8:	str	x1, [sp, #16]
  4227cc:	ldr	x1, [sp, #16]
  4227d0:	ldr	x0, [sp, #24]
  4227d4:	bl	406c10 <strndup@plt>
  4227d8:	str	x0, [sp, #40]
  4227dc:	ldr	x0, [sp, #40]
  4227e0:	cmp	x0, #0x0
  4227e4:	b.ne	4227ec <xstrndup@@Base+0x30>  // b.any
  4227e8:	bl	42439c <out_of_memory@@Base>
  4227ec:	ldr	x0, [sp, #40]
  4227f0:	ldp	x29, x30, [sp], #48
  4227f4:	ret

00000000004227f8 <lindex@@Base>:
  4227f8:	sub	sp, sp, #0x20
  4227fc:	str	x0, [sp, #24]
  422800:	str	x1, [sp, #16]
  422804:	str	w2, [sp, #12]
  422808:	b	422838 <lindex@@Base+0x40>
  42280c:	ldr	x0, [sp, #24]
  422810:	add	x1, x0, #0x1
  422814:	str	x1, [sp, #24]
  422818:	ldrb	w0, [x0]
  42281c:	mov	w1, w0
  422820:	ldr	w0, [sp, #12]
  422824:	cmp	w0, w1
  422828:	b.ne	422838 <lindex@@Base+0x40>  // b.any
  42282c:	ldr	x0, [sp, #24]
  422830:	sub	x0, x0, #0x1
  422834:	b	42284c <lindex@@Base+0x54>
  422838:	ldr	x1, [sp, #24]
  42283c:	ldr	x0, [sp, #16]
  422840:	cmp	x1, x0
  422844:	b.cc	42280c <lindex@@Base+0x14>  // b.lo, b.ul, b.last
  422848:	mov	x0, #0x0                   	// #0
  42284c:	add	sp, sp, #0x20
  422850:	ret

0000000000422854 <end_of_token@@Base>:
  422854:	sub	sp, sp, #0x10
  422858:	str	x0, [sp, #8]
  42285c:	b	42286c <end_of_token@@Base+0x18>
  422860:	ldr	x0, [sp, #8]
  422864:	add	x0, x0, #0x1
  422868:	str	x0, [sp, #8]
  42286c:	ldr	x0, [sp, #8]
  422870:	ldrb	w0, [x0]
  422874:	mov	w1, w0
  422878:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42287c:	add	x0, x0, #0x728
  422880:	sxtw	x1, w1
  422884:	ldrh	w0, [x0, x1, lsl #1]
  422888:	and	w0, w0, #0x7
  42288c:	cmp	w0, #0x0
  422890:	b.eq	422860 <end_of_token@@Base+0xc>  // b.none
  422894:	ldr	x0, [sp, #8]
  422898:	add	sp, sp, #0x10
  42289c:	ret

00000000004228a0 <next_token@@Base>:
  4228a0:	sub	sp, sp, #0x10
  4228a4:	str	x0, [sp, #8]
  4228a8:	b	4228b8 <next_token@@Base+0x18>
  4228ac:	ldr	x0, [sp, #8]
  4228b0:	add	x0, x0, #0x1
  4228b4:	str	x0, [sp, #8]
  4228b8:	ldr	x0, [sp, #8]
  4228bc:	ldrb	w0, [x0]
  4228c0:	mov	w1, w0
  4228c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4228c8:	add	x0, x0, #0x728
  4228cc:	sxtw	x1, w1
  4228d0:	ldrh	w0, [x0, x1, lsl #1]
  4228d4:	and	w0, w0, #0x6
  4228d8:	cmp	w0, #0x0
  4228dc:	b.ne	4228ac <next_token@@Base+0xc>  // b.any
  4228e0:	ldr	x0, [sp, #8]
  4228e4:	add	sp, sp, #0x10
  4228e8:	ret

00000000004228ec <find_next_token@@Base>:
  4228ec:	stp	x29, x30, [sp, #-48]!
  4228f0:	mov	x29, sp
  4228f4:	str	x0, [sp, #24]
  4228f8:	str	x1, [sp, #16]
  4228fc:	ldr	x0, [sp, #24]
  422900:	ldr	x0, [x0]
  422904:	bl	4228a0 <next_token@@Base>
  422908:	str	x0, [sp, #40]
  42290c:	ldr	x0, [sp, #40]
  422910:	ldrb	w0, [x0]
  422914:	cmp	w0, #0x0
  422918:	b.ne	422924 <find_next_token@@Base+0x38>  // b.any
  42291c:	mov	x0, #0x0                   	// #0
  422920:	b	422964 <find_next_token@@Base+0x78>
  422924:	ldr	x0, [sp, #40]
  422928:	bl	422854 <end_of_token@@Base>
  42292c:	mov	x1, x0
  422930:	ldr	x0, [sp, #24]
  422934:	str	x1, [x0]
  422938:	ldr	x0, [sp, #16]
  42293c:	cmp	x0, #0x0
  422940:	b.eq	422960 <find_next_token@@Base+0x74>  // b.none
  422944:	ldr	x0, [sp, #24]
  422948:	ldr	x1, [x0]
  42294c:	ldr	x0, [sp, #40]
  422950:	sub	x0, x1, x0
  422954:	mov	x1, x0
  422958:	ldr	x0, [sp, #16]
  42295c:	str	x1, [x0]
  422960:	ldr	x0, [sp, #40]
  422964:	ldp	x29, x30, [sp], #48
  422968:	ret

000000000042296c <writebuf@@Base>:
  42296c:	stp	x29, x30, [sp, #-80]!
  422970:	mov	x29, sp
  422974:	str	w0, [sp, #44]
  422978:	str	x1, [sp, #32]
  42297c:	str	x2, [sp, #24]
  422980:	ldr	x0, [sp, #32]
  422984:	str	x0, [sp, #72]
  422988:	ldr	x0, [sp, #24]
  42298c:	str	x0, [sp, #64]
  422990:	b	4229fc <writebuf@@Base+0x90>
  422994:	nop
  422998:	ldr	x2, [sp, #64]
  42299c:	ldr	x1, [sp, #72]
  4229a0:	ldr	w0, [sp, #44]
  4229a4:	bl	406b10 <write@plt>
  4229a8:	str	x0, [sp, #56]
  4229ac:	ldr	x0, [sp, #56]
  4229b0:	cmn	x0, #0x1
  4229b4:	b.ne	4229c8 <writebuf@@Base+0x5c>  // b.any
  4229b8:	bl	406dd0 <__errno_location@plt>
  4229bc:	ldr	w0, [x0]
  4229c0:	cmp	w0, #0x4
  4229c4:	b.eq	422998 <writebuf@@Base+0x2c>  // b.none
  4229c8:	ldr	x0, [sp, #56]
  4229cc:	cmp	x0, #0x0
  4229d0:	b.ge	4229dc <writebuf@@Base+0x70>  // b.tcont
  4229d4:	ldr	x0, [sp, #56]
  4229d8:	b	422a0c <writebuf@@Base+0xa0>
  4229dc:	ldr	x0, [sp, #56]
  4229e0:	ldr	x1, [sp, #64]
  4229e4:	sub	x0, x1, x0
  4229e8:	str	x0, [sp, #64]
  4229ec:	ldr	x0, [sp, #56]
  4229f0:	ldr	x1, [sp, #72]
  4229f4:	add	x0, x1, x0
  4229f8:	str	x0, [sp, #72]
  4229fc:	ldr	x0, [sp, #64]
  422a00:	cmp	x0, #0x0
  422a04:	b.ne	422994 <writebuf@@Base+0x28>  // b.any
  422a08:	ldr	x0, [sp, #24]
  422a0c:	ldp	x29, x30, [sp], #80
  422a10:	ret

0000000000422a14 <readbuf@@Base>:
  422a14:	stp	x29, x30, [sp, #-64]!
  422a18:	mov	x29, sp
  422a1c:	str	w0, [sp, #44]
  422a20:	str	x1, [sp, #32]
  422a24:	str	x2, [sp, #24]
  422a28:	ldr	x0, [sp, #32]
  422a2c:	str	x0, [sp, #56]
  422a30:	b	422aa8 <readbuf@@Base+0x94>
  422a34:	nop
  422a38:	ldr	x2, [sp, #24]
  422a3c:	ldr	x1, [sp, #56]
  422a40:	ldr	w0, [sp, #44]
  422a44:	bl	406cf0 <read@plt>
  422a48:	str	x0, [sp, #48]
  422a4c:	ldr	x0, [sp, #48]
  422a50:	cmn	x0, #0x1
  422a54:	b.ne	422a68 <readbuf@@Base+0x54>  // b.any
  422a58:	bl	406dd0 <__errno_location@plt>
  422a5c:	ldr	w0, [x0]
  422a60:	cmp	w0, #0x4
  422a64:	b.eq	422a38 <readbuf@@Base+0x24>  // b.none
  422a68:	ldr	x0, [sp, #48]
  422a6c:	cmp	x0, #0x0
  422a70:	b.ge	422a7c <readbuf@@Base+0x68>  // b.tcont
  422a74:	ldr	x0, [sp, #48]
  422a78:	b	422ac8 <readbuf@@Base+0xb4>
  422a7c:	ldr	x0, [sp, #48]
  422a80:	cmp	x0, #0x0
  422a84:	b.eq	422ab8 <readbuf@@Base+0xa4>  // b.none
  422a88:	ldr	x0, [sp, #48]
  422a8c:	ldr	x1, [sp, #24]
  422a90:	sub	x0, x1, x0
  422a94:	str	x0, [sp, #24]
  422a98:	ldr	x0, [sp, #48]
  422a9c:	ldr	x1, [sp, #56]
  422aa0:	add	x0, x1, x0
  422aa4:	str	x0, [sp, #56]
  422aa8:	ldr	x0, [sp, #24]
  422aac:	cmp	x0, #0x0
  422ab0:	b.ne	422a34 <readbuf@@Base+0x20>  // b.any
  422ab4:	b	422abc <readbuf@@Base+0xa8>
  422ab8:	nop
  422abc:	ldr	x1, [sp, #56]
  422ac0:	ldr	x0, [sp, #32]
  422ac4:	sub	x0, x1, x0
  422ac8:	ldp	x29, x30, [sp], #64
  422acc:	ret

0000000000422ad0 <copy_dep_chain@@Base>:
  422ad0:	stp	x29, x30, [sp, #-64]!
  422ad4:	mov	x29, sp
  422ad8:	str	x0, [sp, #24]
  422adc:	str	xzr, [sp, #56]
  422ae0:	str	xzr, [sp, #48]
  422ae4:	b	422b80 <copy_dep_chain@@Base+0xb0>
  422ae8:	mov	x0, #0x28                  	// #40
  422aec:	bl	42268c <xmalloc@@Base>
  422af0:	str	x0, [sp, #40]
  422af4:	mov	x2, #0x28                  	// #40
  422af8:	ldr	x1, [sp, #24]
  422afc:	ldr	x0, [sp, #40]
  422b00:	bl	4066b0 <memcpy@plt>
  422b04:	ldr	x0, [sp, #40]
  422b08:	ldrb	w0, [x0, #33]
  422b0c:	and	w0, w0, #0x8
  422b10:	and	w0, w0, #0xff
  422b14:	cmp	w0, #0x0
  422b18:	b.eq	422b34 <copy_dep_chain@@Base+0x64>  // b.none
  422b1c:	ldr	x0, [sp, #40]
  422b20:	ldr	x0, [x0, #8]
  422b24:	bl	422788 <xstrdup@@Base>
  422b28:	mov	x1, x0
  422b2c:	ldr	x0, [sp, #40]
  422b30:	str	x1, [x0, #8]
  422b34:	ldr	x0, [sp, #40]
  422b38:	str	xzr, [x0]
  422b3c:	ldr	x0, [sp, #56]
  422b40:	cmp	x0, #0x0
  422b44:	b.ne	422b5c <copy_dep_chain@@Base+0x8c>  // b.any
  422b48:	ldr	x0, [sp, #40]
  422b4c:	str	x0, [sp, #48]
  422b50:	ldr	x0, [sp, #48]
  422b54:	str	x0, [sp, #56]
  422b58:	b	422b74 <copy_dep_chain@@Base+0xa4>
  422b5c:	ldr	x0, [sp, #48]
  422b60:	ldr	x1, [sp, #40]
  422b64:	str	x1, [x0]
  422b68:	ldr	x0, [sp, #48]
  422b6c:	ldr	x0, [x0]
  422b70:	str	x0, [sp, #48]
  422b74:	ldr	x0, [sp, #24]
  422b78:	ldr	x0, [x0]
  422b7c:	str	x0, [sp, #24]
  422b80:	ldr	x0, [sp, #24]
  422b84:	cmp	x0, #0x0
  422b88:	b.ne	422ae8 <copy_dep_chain@@Base+0x18>  // b.any
  422b8c:	ldr	x0, [sp, #56]
  422b90:	ldp	x29, x30, [sp], #64
  422b94:	ret

0000000000422b98 <free_ns_chain@@Base>:
  422b98:	stp	x29, x30, [sp, #-48]!
  422b9c:	mov	x29, sp
  422ba0:	str	x0, [sp, #24]
  422ba4:	b	422bc4 <free_ns_chain@@Base+0x2c>
  422ba8:	ldr	x0, [sp, #24]
  422bac:	str	x0, [sp, #40]
  422bb0:	ldr	x0, [sp, #24]
  422bb4:	ldr	x0, [x0]
  422bb8:	str	x0, [sp, #24]
  422bbc:	ldr	x0, [sp, #40]
  422bc0:	bl	406c00 <free@plt>
  422bc4:	ldr	x0, [sp, #24]
  422bc8:	cmp	x0, #0x0
  422bcc:	b.ne	422ba8 <free_ns_chain@@Base+0x10>  // b.any
  422bd0:	nop
  422bd4:	nop
  422bd8:	ldp	x29, x30, [sp], #48
  422bdc:	ret

0000000000422be0 <get_tmpfile@@Base>:
  422be0:	stp	x29, x30, [sp, #-48]!
  422be4:	mov	x29, sp
  422be8:	str	x0, [sp, #24]
  422bec:	str	x1, [sp, #16]
  422bf0:	mov	w0, #0x3f                  	// #63
  422bf4:	bl	406db0 <umask@plt>
  422bf8:	str	w0, [sp, #36]
  422bfc:	ldr	x0, [sp, #16]
  422c00:	bl	4066f0 <strlen@plt>
  422c04:	add	x0, x0, #0x1
  422c08:	bl	42268c <xmalloc@@Base>
  422c0c:	mov	x1, x0
  422c10:	ldr	x0, [sp, #24]
  422c14:	str	x1, [x0]
  422c18:	ldr	x0, [sp, #24]
  422c1c:	ldr	x0, [x0]
  422c20:	ldr	x1, [sp, #16]
  422c24:	bl	406ca0 <strcpy@plt>
  422c28:	nop
  422c2c:	ldr	x0, [sp, #24]
  422c30:	ldr	x0, [x0]
  422c34:	bl	406d00 <mkstemp@plt>
  422c38:	str	w0, [sp, #32]
  422c3c:	ldr	w0, [sp, #32]
  422c40:	cmn	w0, #0x1
  422c44:	b.ne	422c58 <get_tmpfile@@Base+0x78>  // b.any
  422c48:	bl	406dd0 <__errno_location@plt>
  422c4c:	ldr	w0, [x0]
  422c50:	cmp	w0, #0x4
  422c54:	b.eq	422c2c <get_tmpfile@@Base+0x4c>  // b.none
  422c58:	ldr	w0, [sp, #32]
  422c5c:	cmn	w0, #0x1
  422c60:	b.ne	422c6c <get_tmpfile@@Base+0x8c>  // b.any
  422c64:	str	xzr, [sp, #40]
  422c68:	b	422c80 <get_tmpfile@@Base+0xa0>
  422c6c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422c70:	add	x1, x0, #0xa38
  422c74:	ldr	w0, [sp, #32]
  422c78:	bl	4069e0 <fdopen@plt>
  422c7c:	str	x0, [sp, #40]
  422c80:	ldr	w0, [sp, #36]
  422c84:	bl	406db0 <umask@plt>
  422c88:	ldr	x0, [sp, #40]
  422c8c:	ldp	x29, x30, [sp], #48
  422c90:	ret

0000000000422c94 <user_access@@Base>:
  422c94:	nop
  422c98:	ret

0000000000422c9c <make_access@@Base>:
  422c9c:	nop
  422ca0:	ret

0000000000422ca4 <child_access@@Base>:
  422ca4:	nop
  422ca8:	ret
  422cac:	stp	x29, x30, [sp, #-80]!
  422cb0:	mov	x29, sp
  422cb4:	str	x0, [sp, #40]
  422cb8:	str	w1, [sp, #36]
  422cbc:	str	x2, [sp, #24]
  422cc0:	ldr	x0, [sp, #40]
  422cc4:	cmp	x0, #0x0
  422cc8:	b.eq	422ce4 <child_access@@Base+0x40>  // b.none
  422ccc:	ldr	x0, [sp, #40]
  422cd0:	ldrb	w0, [x0, #8]
  422cd4:	and	w0, w0, #0x1
  422cd8:	and	w0, w0, #0xff
  422cdc:	cmp	w0, #0x0
  422ce0:	b.ne	422d28 <child_access@@Base+0x84>  // b.any
  422ce4:	ldr	w0, [sp, #36]
  422ce8:	cmp	w0, #0x0
  422cec:	b.eq	422d00 <child_access@@Base+0x5c>  // b.none
  422cf0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422cf4:	add	x0, x0, #0x3e8
  422cf8:	ldr	x0, [x0]
  422cfc:	b	422d0c <child_access@@Base+0x68>
  422d00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422d04:	add	x0, x0, #0x400
  422d08:	ldr	x0, [x0]
  422d0c:	str	x0, [sp, #48]
  422d10:	ldr	x1, [sp, #48]
  422d14:	ldr	x0, [sp, #24]
  422d18:	bl	406700 <fputs@plt>
  422d1c:	ldr	x0, [sp, #48]
  422d20:	bl	406c90 <fflush@plt>
  422d24:	b	422da0 <child_access@@Base+0xfc>
  422d28:	ldr	w0, [sp, #36]
  422d2c:	cmp	w0, #0x0
  422d30:	b.eq	422d40 <child_access@@Base+0x9c>  // b.none
  422d34:	ldr	x0, [sp, #40]
  422d38:	ldr	w0, [x0, #4]
  422d3c:	b	422d48 <child_access@@Base+0xa4>
  422d40:	ldr	x0, [sp, #40]
  422d44:	ldr	w0, [x0]
  422d48:	str	w0, [sp, #76]
  422d4c:	ldr	x0, [sp, #24]
  422d50:	bl	4066f0 <strlen@plt>
  422d54:	str	x0, [sp, #64]
  422d58:	nop
  422d5c:	mov	w2, #0x2                   	// #2
  422d60:	mov	x1, #0x0                   	// #0
  422d64:	ldr	w0, [sp, #76]
  422d68:	bl	406860 <lseek@plt>
  422d6c:	str	w0, [sp, #60]
  422d70:	ldr	w0, [sp, #60]
  422d74:	cmn	w0, #0x1
  422d78:	b.ne	422d8c <child_access@@Base+0xe8>  // b.any
  422d7c:	bl	406dd0 <__errno_location@plt>
  422d80:	ldr	w0, [x0]
  422d84:	cmp	w0, #0x4
  422d88:	b.eq	422d5c <child_access@@Base+0xb8>  // b.none
  422d8c:	ldr	x2, [sp, #64]
  422d90:	ldr	x1, [sp, #24]
  422d94:	ldr	w0, [sp, #76]
  422d98:	bl	42296c <writebuf@@Base>
  422d9c:	nop
  422da0:	nop
  422da4:	ldp	x29, x30, [sp], #80
  422da8:	ret
  422dac:	stp	x29, x30, [sp, #-64]!
  422db0:	mov	x29, sp
  422db4:	str	w0, [sp, #28]
  422db8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422dbc:	add	x0, x0, #0xa60
  422dc0:	ldr	x0, [x0]
  422dc4:	bl	4066f0 <strlen@plt>
  422dc8:	add	x0, x0, #0x17
  422dcc:	str	x0, [sp, #56]
  422dd0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422dd4:	add	x0, x0, #0xa48
  422dd8:	ldr	x0, [x0]
  422ddc:	cmp	x0, #0x0
  422de0:	b.eq	422e04 <child_access@@Base+0x160>  // b.none
  422de4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422de8:	add	x0, x0, #0xa48
  422dec:	ldr	x0, [x0]
  422df0:	bl	4066f0 <strlen@plt>
  422df4:	mov	x1, x0
  422df8:	ldr	x0, [sp, #56]
  422dfc:	add	x0, x0, x1
  422e00:	str	x0, [sp, #56]
  422e04:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422e08:	add	x0, x0, #0xa70
  422e0c:	ldr	w0, [x0]
  422e10:	cmp	w0, #0x0
  422e14:	b.ne	422e94 <child_access@@Base+0x1f0>  // b.any
  422e18:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422e1c:	add	x0, x0, #0xa48
  422e20:	ldr	x0, [x0]
  422e24:	cmp	x0, #0x0
  422e28:	b.ne	422e60 <child_access@@Base+0x1bc>  // b.any
  422e2c:	ldr	w0, [sp, #28]
  422e30:	cmp	w0, #0x0
  422e34:	b.eq	422e4c <child_access@@Base+0x1a8>  // b.none
  422e38:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422e3c:	add	x0, x0, #0xa40
  422e40:	bl	406e40 <gettext@plt>
  422e44:	str	x0, [sp, #48]
  422e48:	b	422f0c <child_access@@Base+0x268>
  422e4c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422e50:	add	x0, x0, #0xa68
  422e54:	bl	406e40 <gettext@plt>
  422e58:	str	x0, [sp, #48]
  422e5c:	b	422f0c <child_access@@Base+0x268>
  422e60:	ldr	w0, [sp, #28]
  422e64:	cmp	w0, #0x0
  422e68:	b.eq	422e80 <child_access@@Base+0x1dc>  // b.none
  422e6c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422e70:	add	x0, x0, #0xa90
  422e74:	bl	406e40 <gettext@plt>
  422e78:	str	x0, [sp, #48]
  422e7c:	b	422f0c <child_access@@Base+0x268>
  422e80:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422e84:	add	x0, x0, #0xab0
  422e88:	bl	406e40 <gettext@plt>
  422e8c:	str	x0, [sp, #48]
  422e90:	b	422f0c <child_access@@Base+0x268>
  422e94:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422e98:	add	x0, x0, #0xa48
  422e9c:	ldr	x0, [x0]
  422ea0:	cmp	x0, #0x0
  422ea4:	b.ne	422edc <child_access@@Base+0x238>  // b.any
  422ea8:	ldr	w0, [sp, #28]
  422eac:	cmp	w0, #0x0
  422eb0:	b.eq	422ec8 <child_access@@Base+0x224>  // b.none
  422eb4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422eb8:	add	x0, x0, #0xad0
  422ebc:	bl	406e40 <gettext@plt>
  422ec0:	str	x0, [sp, #48]
  422ec4:	b	422f0c <child_access@@Base+0x268>
  422ec8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422ecc:	add	x0, x0, #0xaf8
  422ed0:	bl	406e40 <gettext@plt>
  422ed4:	str	x0, [sp, #48]
  422ed8:	b	422f0c <child_access@@Base+0x268>
  422edc:	ldr	w0, [sp, #28]
  422ee0:	cmp	w0, #0x0
  422ee4:	b.eq	422efc <child_access@@Base+0x258>  // b.none
  422ee8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422eec:	add	x0, x0, #0xb20
  422ef0:	bl	406e40 <gettext@plt>
  422ef4:	str	x0, [sp, #48]
  422ef8:	b	422f0c <child_access@@Base+0x268>
  422efc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  422f00:	add	x0, x0, #0xb48
  422f04:	bl	406e40 <gettext@plt>
  422f08:	str	x0, [sp, #48]
  422f0c:	ldr	x0, [sp, #48]
  422f10:	bl	4066f0 <strlen@plt>
  422f14:	mov	x1, x0
  422f18:	ldr	x0, [sp, #56]
  422f1c:	add	x0, x0, x1
  422f20:	str	x0, [sp, #56]
  422f24:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  422f28:	add	x0, x0, #0x10
  422f2c:	ldr	x0, [x0]
  422f30:	ldr	x1, [sp, #56]
  422f34:	cmp	x1, x0
  422f38:	b.ls	422f70 <child_access@@Base+0x2cc>  // b.plast
  422f3c:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  422f40:	add	x0, x0, #0x18
  422f44:	ldr	x0, [x0]
  422f48:	ldr	x1, [sp, #56]
  422f4c:	bl	422720 <xrealloc@@Base>
  422f50:	mov	x1, x0
  422f54:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  422f58:	add	x0, x0, #0x18
  422f5c:	str	x1, [x0]
  422f60:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  422f64:	add	x0, x0, #0x10
  422f68:	ldr	x1, [sp, #56]
  422f6c:	str	x1, [x0]
  422f70:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  422f74:	add	x0, x0, #0x18
  422f78:	ldr	x0, [x0]
  422f7c:	str	x0, [sp, #40]
  422f80:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  422f84:	add	x0, x0, #0x6f0
  422f88:	ldr	w0, [x0]
  422f8c:	cmp	w0, #0x0
  422f90:	b.eq	422fbc <child_access@@Base+0x318>  // b.none
  422f94:	ldr	x0, [sp, #40]
  422f98:	add	x1, x0, #0x1
  422f9c:	str	x1, [sp, #40]
  422fa0:	mov	w1, #0x23                  	// #35
  422fa4:	strb	w1, [x0]
  422fa8:	ldr	x0, [sp, #40]
  422fac:	add	x1, x0, #0x1
  422fb0:	str	x1, [sp, #40]
  422fb4:	mov	w1, #0x20                  	// #32
  422fb8:	strb	w1, [x0]
  422fbc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422fc0:	add	x0, x0, #0xa70
  422fc4:	ldr	w0, [x0]
  422fc8:	cmp	w0, #0x0
  422fcc:	b.ne	423034 <child_access@@Base+0x390>  // b.any
  422fd0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422fd4:	add	x0, x0, #0xa48
  422fd8:	ldr	x0, [x0]
  422fdc:	cmp	x0, #0x0
  422fe0:	b.ne	423004 <child_access@@Base+0x360>  // b.any
  422fe4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  422fe8:	add	x0, x0, #0xa60
  422fec:	ldr	x0, [x0]
  422ff0:	mov	x2, x0
  422ff4:	ldr	x1, [sp, #48]
  422ff8:	ldr	x0, [sp, #40]
  422ffc:	bl	406790 <sprintf@plt>
  423000:	b	4230b4 <child_access@@Base+0x410>
  423004:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423008:	add	x0, x0, #0xa60
  42300c:	ldr	x1, [x0]
  423010:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423014:	add	x0, x0, #0xa48
  423018:	ldr	x0, [x0]
  42301c:	mov	x3, x0
  423020:	mov	x2, x1
  423024:	ldr	x1, [sp, #48]
  423028:	ldr	x0, [sp, #40]
  42302c:	bl	406790 <sprintf@plt>
  423030:	b	4230b4 <child_access@@Base+0x410>
  423034:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423038:	add	x0, x0, #0xa48
  42303c:	ldr	x0, [x0]
  423040:	cmp	x0, #0x0
  423044:	b.ne	423078 <child_access@@Base+0x3d4>  // b.any
  423048:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42304c:	add	x0, x0, #0xa60
  423050:	ldr	x1, [x0]
  423054:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423058:	add	x0, x0, #0xa70
  42305c:	ldr	w0, [x0]
  423060:	mov	w3, w0
  423064:	mov	x2, x1
  423068:	ldr	x1, [sp, #48]
  42306c:	ldr	x0, [sp, #40]
  423070:	bl	406790 <sprintf@plt>
  423074:	b	4230b4 <child_access@@Base+0x410>
  423078:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42307c:	add	x0, x0, #0xa60
  423080:	ldr	x1, [x0]
  423084:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423088:	add	x0, x0, #0xa70
  42308c:	ldr	w2, [x0]
  423090:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423094:	add	x0, x0, #0xa48
  423098:	ldr	x0, [x0]
  42309c:	mov	x4, x0
  4230a0:	mov	w3, w2
  4230a4:	mov	x2, x1
  4230a8:	ldr	x1, [sp, #48]
  4230ac:	ldr	x0, [sp, #40]
  4230b0:	bl	406790 <sprintf@plt>
  4230b4:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  4230b8:	add	x0, x0, #0x18
  4230bc:	ldr	x0, [x0]
  4230c0:	mov	x2, x0
  4230c4:	mov	w1, #0x0                   	// #0
  4230c8:	mov	x0, #0x0                   	// #0
  4230cc:	bl	422cac <child_access@@Base+0x8>
  4230d0:	mov	w0, #0x1                   	// #1
  4230d4:	ldp	x29, x30, [sp], #64
  4230d8:	ret
  4230dc:	stp	x29, x30, [sp, #-48]!
  4230e0:	mov	x29, sp
  4230e4:	str	w0, [sp, #28]
  4230e8:	mov	w2, #0x0                   	// #0
  4230ec:	mov	w1, #0x3                   	// #3
  4230f0:	ldr	w0, [sp, #28]
  4230f4:	bl	436450 <rpl_fcntl@@Base>
  4230f8:	str	w0, [sp, #44]
  4230fc:	ldr	w0, [sp, #44]
  423100:	cmp	w0, #0x0
  423104:	b.lt	423144 <child_access@@Base+0x4a0>  // b.tstop
  423108:	nop
  42310c:	ldr	w0, [sp, #44]
  423110:	orr	w0, w0, #0x400
  423114:	mov	w2, w0
  423118:	mov	w1, #0x4                   	// #4
  42311c:	ldr	w0, [sp, #28]
  423120:	bl	436450 <rpl_fcntl@@Base>
  423124:	str	w0, [sp, #40]
  423128:	ldr	w0, [sp, #40]
  42312c:	cmn	w0, #0x1
  423130:	b.ne	423144 <child_access@@Base+0x4a0>  // b.any
  423134:	bl	406dd0 <__errno_location@plt>
  423138:	ldr	w0, [x0]
  42313c:	cmp	w0, #0x4
  423140:	b.eq	42310c <child_access@@Base+0x468>  // b.none
  423144:	nop
  423148:	ldp	x29, x30, [sp], #48
  42314c:	ret
  423150:	stp	x29, x30, [sp, #-288]!
  423154:	mov	x29, sp
  423158:	str	wzr, [sp, #284]
  42315c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423160:	add	x0, x0, #0x400
  423164:	ldr	x0, [x0]
  423168:	bl	4068a0 <fileno@plt>
  42316c:	mov	w1, #0x1                   	// #1
  423170:	bl	436450 <rpl_fcntl@@Base>
  423174:	cmn	w0, #0x1
  423178:	b.ne	42318c <child_access@@Base+0x4e8>  // b.any
  42317c:	bl	406dd0 <__errno_location@plt>
  423180:	ldr	w0, [x0]
  423184:	cmp	w0, #0x9
  423188:	b.eq	423238 <child_access@@Base+0x594>  // b.none
  42318c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423190:	add	x0, x0, #0x400
  423194:	ldr	x0, [x0]
  423198:	bl	4068a0 <fileno@plt>
  42319c:	mov	w1, w0
  4231a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4231a4:	add	x0, x0, #0x320
  4231a8:	str	w1, [x0]
  4231ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4231b0:	add	x0, x0, #0x400
  4231b4:	ldr	x0, [x0]
  4231b8:	bl	4068a0 <fileno@plt>
  4231bc:	mov	w2, w0
  4231c0:	add	x0, sp, #0x18
  4231c4:	mov	x1, x0
  4231c8:	mov	w0, w2
  4231cc:	bl	436b80 <__libc_csu_fini@@Base+0x28>
  4231d0:	cmp	w0, #0x0
  4231d4:	b.ne	42322c <child_access@@Base+0x588>  // b.any
  4231d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4231dc:	add	x0, x0, #0x3e8
  4231e0:	ldr	x0, [x0]
  4231e4:	bl	4068a0 <fileno@plt>
  4231e8:	mov	w2, w0
  4231ec:	add	x0, sp, #0x98
  4231f0:	mov	x1, x0
  4231f4:	mov	w0, w2
  4231f8:	bl	436b80 <__libc_csu_fini@@Base+0x28>
  4231fc:	cmp	w0, #0x0
  423200:	b.ne	42322c <child_access@@Base+0x588>  // b.any
  423204:	ldr	x1, [sp, #24]
  423208:	ldr	x0, [sp, #152]
  42320c:	cmp	x1, x0
  423210:	b.ne	42322c <child_access@@Base+0x588>  // b.any
  423214:	ldr	x1, [sp, #32]
  423218:	ldr	x0, [sp, #160]
  42321c:	cmp	x1, x0
  423220:	b.ne	42322c <child_access@@Base+0x588>  // b.any
  423224:	mov	w0, #0x1                   	// #1
  423228:	b	423230 <child_access@@Base+0x58c>
  42322c:	mov	w0, #0x0                   	// #0
  423230:	str	w0, [sp, #284]
  423234:	b	4232ac <child_access@@Base+0x608>
  423238:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42323c:	add	x0, x0, #0x3e8
  423240:	ldr	x0, [x0]
  423244:	bl	4068a0 <fileno@plt>
  423248:	mov	w1, #0x1                   	// #1
  42324c:	bl	436450 <rpl_fcntl@@Base>
  423250:	cmn	w0, #0x1
  423254:	b.ne	423268 <child_access@@Base+0x5c4>  // b.any
  423258:	bl	406dd0 <__errno_location@plt>
  42325c:	ldr	w0, [x0]
  423260:	cmp	w0, #0x9
  423264:	b.eq	42328c <child_access@@Base+0x5e8>  // b.none
  423268:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42326c:	add	x0, x0, #0x3e8
  423270:	ldr	x0, [x0]
  423274:	bl	4068a0 <fileno@plt>
  423278:	mov	w1, w0
  42327c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423280:	add	x0, x0, #0x320
  423284:	str	w1, [x0]
  423288:	b	4232ac <child_access@@Base+0x608>
  42328c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423290:	add	x1, x0, #0xb68
  423294:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423298:	add	x0, x0, #0xb70
  42329c:	bl	4242c0 <perror_with_name@@Base>
  4232a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4232a4:	add	x0, x0, #0x720
  4232a8:	str	wzr, [x0]
  4232ac:	ldr	w0, [sp, #284]
  4232b0:	ldp	x29, x30, [sp], #288
  4232b4:	ret
  4232b8:	stp	x29, x30, [sp, #-48]!
  4232bc:	mov	x29, sp
  4232c0:	str	w0, [sp, #28]
  4232c4:	str	x1, [sp, #16]
  4232c8:	mov	w2, #0x0                   	// #0
  4232cc:	mov	x1, #0x0                   	// #0
  4232d0:	ldr	w0, [sp, #28]
  4232d4:	bl	406860 <lseek@plt>
  4232d8:	cmn	x0, #0x1
  4232dc:	b.ne	4232ec <child_access@@Base+0x648>  // b.any
  4232e0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4232e4:	add	x0, x0, #0xb90
  4232e8:	bl	406730 <perror@plt>
  4232ec:	nop
  4232f0:	mov	x2, #0x2000                	// #8192
  4232f4:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  4232f8:	add	x1, x0, #0x20
  4232fc:	ldr	w0, [sp, #28]
  423300:	bl	406cf0 <read@plt>
  423304:	str	w0, [sp, #44]
  423308:	ldr	w0, [sp, #44]
  42330c:	cmn	w0, #0x1
  423310:	b.ne	423324 <child_access@@Base+0x680>  // b.any
  423314:	bl	406dd0 <__errno_location@plt>
  423318:	ldr	w0, [x0]
  42331c:	cmp	w0, #0x4
  423320:	b.eq	4232f0 <child_access@@Base+0x64c>  // b.none
  423324:	ldr	w0, [sp, #44]
  423328:	cmp	w0, #0x0
  42332c:	b.ge	42333c <child_access@@Base+0x698>  // b.tcont
  423330:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423334:	add	x0, x0, #0xb98
  423338:	bl	406730 <perror@plt>
  42333c:	ldr	w0, [sp, #44]
  423340:	cmp	w0, #0x0
  423344:	b.le	423388 <child_access@@Base+0x6e4>
  423348:	ldrsw	x0, [sp, #44]
  42334c:	ldr	x3, [sp, #16]
  423350:	mov	x2, #0x1                   	// #1
  423354:	mov	x1, x0
  423358:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  42335c:	add	x0, x0, #0x20
  423360:	bl	406c50 <fwrite@plt>
  423364:	cmp	x0, #0x0
  423368:	b.ne	42337c <child_access@@Base+0x6d8>  // b.any
  42336c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423370:	add	x0, x0, #0xba0
  423374:	bl	406730 <perror@plt>
  423378:	b	42338c <child_access@@Base+0x6e8>
  42337c:	ldr	x0, [sp, #16]
  423380:	bl	406c90 <fflush@plt>
  423384:	b	4232ec <child_access@@Base+0x648>
  423388:	nop
  42338c:	nop
  423390:	ldp	x29, x30, [sp], #48
  423394:	ret
  423398:	stp	x29, x30, [sp, #-16]!
  42339c:	mov	x29, sp
  4233a0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4233a4:	add	x0, x0, #0x20
  4233a8:	mov	w1, #0x1                   	// #1
  4233ac:	strh	w1, [x0]
  4233b0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4233b4:	add	x0, x0, #0x20
  4233b8:	strh	wzr, [x0, #2]
  4233bc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4233c0:	add	x0, x0, #0x20
  4233c4:	str	xzr, [x0, #8]
  4233c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4233cc:	add	x0, x0, #0x20
  4233d0:	mov	x1, #0x1                   	// #1
  4233d4:	str	x1, [x0, #16]
  4233d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4233dc:	add	x0, x0, #0x320
  4233e0:	ldr	w3, [x0]
  4233e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4233e8:	add	x2, x0, #0x20
  4233ec:	mov	w1, #0x7                   	// #7
  4233f0:	mov	w0, w3
  4233f4:	bl	436450 <rpl_fcntl@@Base>
  4233f8:	cmn	w0, #0x1
  4233fc:	b.eq	42340c <child_access@@Base+0x768>  // b.none
  423400:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423404:	add	x0, x0, #0x20
  423408:	b	42341c <child_access@@Base+0x778>
  42340c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423410:	add	x0, x0, #0xbb0
  423414:	bl	406730 <perror@plt>
  423418:	mov	x0, #0x0                   	// #0
  42341c:	ldp	x29, x30, [sp], #16
  423420:	ret
  423424:	stp	x29, x30, [sp, #-48]!
  423428:	mov	x29, sp
  42342c:	str	x0, [sp, #24]
  423430:	ldr	x0, [sp, #24]
  423434:	str	x0, [sp, #40]
  423438:	ldr	x0, [sp, #40]
  42343c:	mov	w1, #0x2                   	// #2
  423440:	strh	w1, [x0]
  423444:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423448:	add	x0, x0, #0x320
  42344c:	ldr	w0, [x0]
  423450:	ldr	x2, [sp, #40]
  423454:	mov	w1, #0x7                   	// #7
  423458:	bl	436450 <rpl_fcntl@@Base>
  42345c:	cmn	w0, #0x1
  423460:	b.ne	423470 <child_access@@Base+0x7cc>  // b.any
  423464:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423468:	add	x0, x0, #0xbb0
  42346c:	bl	406730 <perror@plt>
  423470:	nop
  423474:	ldp	x29, x30, [sp], #48
  423478:	ret

000000000042347c <output_tmpfd@@Base>:
  42347c:	stp	x29, x30, [sp, #-32]!
  423480:	mov	x29, sp
  423484:	mov	w0, #0x3f                  	// #63
  423488:	bl	406db0 <umask@plt>
  42348c:	str	w0, [sp, #28]
  423490:	mov	w0, #0xffffffff            	// #-1
  423494:	str	w0, [sp, #24]
  423498:	bl	406740 <tmpfile@plt>
  42349c:	str	x0, [sp, #16]
  4234a0:	ldr	x0, [sp, #16]
  4234a4:	cmp	x0, #0x0
  4234a8:	b.ne	4234b8 <output_tmpfd@@Base+0x3c>  // b.any
  4234ac:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4234b0:	add	x0, x0, #0xbb8
  4234b4:	bl	424340 <pfatal_with_name@@Base>
  4234b8:	ldr	x0, [sp, #16]
  4234bc:	bl	4068a0 <fileno@plt>
  4234c0:	bl	406720 <dup@plt>
  4234c4:	str	w0, [sp, #24]
  4234c8:	ldr	w0, [sp, #24]
  4234cc:	cmp	w0, #0x0
  4234d0:	b.ge	4234e0 <output_tmpfd@@Base+0x64>  // b.tcont
  4234d4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4234d8:	add	x0, x0, #0xbc0
  4234dc:	bl	424340 <pfatal_with_name@@Base>
  4234e0:	ldr	x0, [sp, #16]
  4234e4:	bl	4068e0 <fclose@plt>
  4234e8:	ldr	w0, [sp, #24]
  4234ec:	bl	4230dc <child_access@@Base+0x438>
  4234f0:	ldr	w0, [sp, #28]
  4234f4:	bl	406db0 <umask@plt>
  4234f8:	ldr	w0, [sp, #24]
  4234fc:	ldp	x29, x30, [sp], #32
  423500:	ret
  423504:	stp	x29, x30, [sp, #-48]!
  423508:	mov	x29, sp
  42350c:	str	x0, [sp, #24]
  423510:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423514:	add	x0, x0, #0x324
  423518:	ldr	w0, [x0]
  42351c:	cmp	w0, #0x0
  423520:	b.ge	423538 <output_tmpfd@@Base+0xbc>  // b.tcont
  423524:	bl	423150 <child_access@@Base+0x4ac>
  423528:	mov	w1, w0
  42352c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423530:	add	x0, x0, #0x324
  423534:	str	w1, [x0]
  423538:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42353c:	add	x0, x0, #0x400
  423540:	ldr	x0, [x0]
  423544:	bl	4068a0 <fileno@plt>
  423548:	mov	w1, #0x1                   	// #1
  42354c:	bl	436450 <rpl_fcntl@@Base>
  423550:	cmn	w0, #0x1
  423554:	b.ne	423568 <output_tmpfd@@Base+0xec>  // b.any
  423558:	bl	406dd0 <__errno_location@plt>
  42355c:	ldr	w0, [x0]
  423560:	cmp	w0, #0x9
  423564:	b.eq	423590 <output_tmpfd@@Base+0x114>  // b.none
  423568:	bl	42347c <output_tmpfd@@Base>
  42356c:	str	w0, [sp, #44]
  423570:	ldr	w0, [sp, #44]
  423574:	cmp	w0, #0x0
  423578:	b.lt	423624 <output_tmpfd@@Base+0x1a8>  // b.tstop
  42357c:	ldr	w0, [sp, #44]
  423580:	bl	435f9c <fd_noinherit@@Base>
  423584:	ldr	x0, [sp, #24]
  423588:	ldr	w1, [sp, #44]
  42358c:	str	w1, [x0]
  423590:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423594:	add	x0, x0, #0x3e8
  423598:	ldr	x0, [x0]
  42359c:	bl	4068a0 <fileno@plt>
  4235a0:	mov	w1, #0x1                   	// #1
  4235a4:	bl	436450 <rpl_fcntl@@Base>
  4235a8:	cmn	w0, #0x1
  4235ac:	b.ne	4235c0 <output_tmpfd@@Base+0x144>  // b.any
  4235b0:	bl	406dd0 <__errno_location@plt>
  4235b4:	ldr	w0, [x0]
  4235b8:	cmp	w0, #0x9
  4235bc:	b.eq	423648 <output_tmpfd@@Base+0x1cc>  // b.none
  4235c0:	ldr	x0, [sp, #24]
  4235c4:	ldr	w0, [x0]
  4235c8:	cmn	w0, #0x1
  4235cc:	b.eq	4235f8 <output_tmpfd@@Base+0x17c>  // b.none
  4235d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4235d4:	add	x0, x0, #0x324
  4235d8:	ldr	w0, [x0]
  4235dc:	cmp	w0, #0x0
  4235e0:	b.eq	4235f8 <output_tmpfd@@Base+0x17c>  // b.none
  4235e4:	ldr	x0, [sp, #24]
  4235e8:	ldr	w1, [x0]
  4235ec:	ldr	x0, [sp, #24]
  4235f0:	str	w1, [x0, #4]
  4235f4:	b	423648 <output_tmpfd@@Base+0x1cc>
  4235f8:	bl	42347c <output_tmpfd@@Base>
  4235fc:	str	w0, [sp, #40]
  423600:	ldr	w0, [sp, #40]
  423604:	cmp	w0, #0x0
  423608:	b.lt	42362c <output_tmpfd@@Base+0x1b0>  // b.tstop
  42360c:	ldr	w0, [sp, #40]
  423610:	bl	435f9c <fd_noinherit@@Base>
  423614:	ldr	x0, [sp, #24]
  423618:	ldr	w1, [sp, #40]
  42361c:	str	w1, [x0, #4]
  423620:	b	423648 <output_tmpfd@@Base+0x1cc>
  423624:	nop
  423628:	b	423630 <output_tmpfd@@Base+0x1b4>
  42362c:	nop
  423630:	ldr	x0, [sp, #24]
  423634:	bl	423a2c <output_close@@Base>
  423638:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42363c:	add	x0, x0, #0x720
  423640:	str	wzr, [x0]
  423644:	b	42364c <output_tmpfd@@Base+0x1d0>
  423648:	nop
  42364c:	ldp	x29, x30, [sp], #48
  423650:	ret

0000000000423654 <output_dump@@Base>:
  423654:	stp	x29, x30, [sp, #-64]!
  423658:	mov	x29, sp
  42365c:	str	x0, [sp, #24]
  423660:	ldr	x0, [sp, #24]
  423664:	ldr	w0, [x0]
  423668:	cmn	w0, #0x1
  42366c:	b.eq	423694 <output_dump@@Base+0x40>  // b.none
  423670:	ldr	x0, [sp, #24]
  423674:	ldr	w0, [x0]
  423678:	mov	w2, #0x2                   	// #2
  42367c:	mov	x1, #0x0                   	// #0
  423680:	bl	406860 <lseek@plt>
  423684:	cmp	x0, #0x0
  423688:	b.le	423694 <output_dump@@Base+0x40>
  42368c:	mov	w0, #0x1                   	// #1
  423690:	b	423698 <output_dump@@Base+0x44>
  423694:	mov	w0, #0x0                   	// #0
  423698:	str	w0, [sp, #56]
  42369c:	ldr	x0, [sp, #24]
  4236a0:	ldr	w0, [x0, #4]
  4236a4:	cmn	w0, #0x1
  4236a8:	b.eq	4236d0 <output_dump@@Base+0x7c>  // b.none
  4236ac:	ldr	x0, [sp, #24]
  4236b0:	ldr	w0, [x0, #4]
  4236b4:	mov	w2, #0x2                   	// #2
  4236b8:	mov	x1, #0x0                   	// #0
  4236bc:	bl	406860 <lseek@plt>
  4236c0:	cmp	x0, #0x0
  4236c4:	b.le	4236d0 <output_dump@@Base+0x7c>
  4236c8:	mov	w0, #0x1                   	// #1
  4236cc:	b	4236d4 <output_dump@@Base+0x80>
  4236d0:	mov	w0, #0x0                   	// #0
  4236d4:	str	w0, [sp, #52]
  4236d8:	ldr	w0, [sp, #56]
  4236dc:	cmp	w0, #0x0
  4236e0:	b.ne	4236f0 <output_dump@@Base+0x9c>  // b.any
  4236e4:	ldr	w0, [sp, #52]
  4236e8:	cmp	w0, #0x0
  4236ec:	b.eq	423890 <output_dump@@Base+0x23c>  // b.none
  4236f0:	str	wzr, [sp, #60]
  4236f4:	bl	423398 <child_access@@Base+0x6f4>
  4236f8:	str	x0, [sp, #40]
  4236fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423700:	add	x0, x0, #0x704
  423704:	ldr	w0, [x0]
  423708:	cmp	w0, #0x0
  42370c:	b.eq	423730 <output_dump@@Base+0xdc>  // b.none
  423710:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423714:	add	x0, x0, #0x720
  423718:	ldr	w0, [x0]
  42371c:	cmp	w0, #0x3
  423720:	b.eq	423730 <output_dump@@Base+0xdc>  // b.none
  423724:	mov	w0, #0x1                   	// #1
  423728:	bl	422dac <child_access@@Base+0x108>
  42372c:	str	w0, [sp, #60]
  423730:	ldr	w0, [sp, #56]
  423734:	cmp	w0, #0x0
  423738:	b.eq	42375c <output_dump@@Base+0x108>  // b.none
  42373c:	ldr	x0, [sp, #24]
  423740:	ldr	w2, [x0]
  423744:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423748:	add	x0, x0, #0x400
  42374c:	ldr	x0, [x0]
  423750:	mov	x1, x0
  423754:	mov	w0, w2
  423758:	bl	4232b8 <child_access@@Base+0x614>
  42375c:	ldr	w0, [sp, #52]
  423760:	cmp	w0, #0x0
  423764:	b.eq	4237a0 <output_dump@@Base+0x14c>  // b.none
  423768:	ldr	x0, [sp, #24]
  42376c:	ldr	w1, [x0, #4]
  423770:	ldr	x0, [sp, #24]
  423774:	ldr	w0, [x0]
  423778:	cmp	w1, w0
  42377c:	b.eq	4237a0 <output_dump@@Base+0x14c>  // b.none
  423780:	ldr	x0, [sp, #24]
  423784:	ldr	w2, [x0, #4]
  423788:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42378c:	add	x0, x0, #0x3e8
  423790:	ldr	x0, [x0]
  423794:	mov	x1, x0
  423798:	mov	w0, w2
  42379c:	bl	4232b8 <child_access@@Base+0x614>
  4237a0:	ldr	w0, [sp, #60]
  4237a4:	cmp	w0, #0x0
  4237a8:	b.eq	4237b4 <output_dump@@Base+0x160>  // b.none
  4237ac:	mov	w0, #0x0                   	// #0
  4237b0:	bl	422dac <child_access@@Base+0x108>
  4237b4:	ldr	x0, [sp, #40]
  4237b8:	cmp	x0, #0x0
  4237bc:	b.eq	4237c8 <output_dump@@Base+0x174>  // b.none
  4237c0:	ldr	x0, [sp, #40]
  4237c4:	bl	423424 <child_access@@Base+0x780>
  4237c8:	ldr	x0, [sp, #24]
  4237cc:	ldr	w0, [x0]
  4237d0:	cmn	w0, #0x1
  4237d4:	b.eq	423820 <output_dump@@Base+0x1cc>  // b.none
  4237d8:	ldr	x0, [sp, #24]
  4237dc:	ldr	w0, [x0]
  4237e0:	mov	w2, #0x0                   	// #0
  4237e4:	mov	x1, #0x0                   	// #0
  4237e8:	bl	406860 <lseek@plt>
  4237ec:	nop
  4237f0:	ldr	x0, [sp, #24]
  4237f4:	ldr	w0, [x0]
  4237f8:	mov	x1, #0x0                   	// #0
  4237fc:	bl	406d70 <ftruncate@plt>
  423800:	str	w0, [sp, #36]
  423804:	ldr	w0, [sp, #36]
  423808:	cmn	w0, #0x1
  42380c:	b.ne	423820 <output_dump@@Base+0x1cc>  // b.any
  423810:	bl	406dd0 <__errno_location@plt>
  423814:	ldr	w0, [x0]
  423818:	cmp	w0, #0x4
  42381c:	b.eq	4237f0 <output_dump@@Base+0x19c>  // b.none
  423820:	ldr	x0, [sp, #24]
  423824:	ldr	w0, [x0, #4]
  423828:	cmn	w0, #0x1
  42382c:	b.eq	423890 <output_dump@@Base+0x23c>  // b.none
  423830:	ldr	x0, [sp, #24]
  423834:	ldr	w1, [x0, #4]
  423838:	ldr	x0, [sp, #24]
  42383c:	ldr	w0, [x0]
  423840:	cmp	w1, w0
  423844:	b.eq	423890 <output_dump@@Base+0x23c>  // b.none
  423848:	ldr	x0, [sp, #24]
  42384c:	ldr	w0, [x0, #4]
  423850:	mov	w2, #0x0                   	// #0
  423854:	mov	x1, #0x0                   	// #0
  423858:	bl	406860 <lseek@plt>
  42385c:	nop
  423860:	ldr	x0, [sp, #24]
  423864:	ldr	w0, [x0, #4]
  423868:	mov	x1, #0x0                   	// #0
  42386c:	bl	406d70 <ftruncate@plt>
  423870:	str	w0, [sp, #32]
  423874:	ldr	w0, [sp, #32]
  423878:	cmn	w0, #0x1
  42387c:	b.ne	423890 <output_dump@@Base+0x23c>  // b.any
  423880:	bl	406dd0 <__errno_location@plt>
  423884:	ldr	w0, [x0]
  423888:	cmp	w0, #0x4
  42388c:	b.eq	423860 <output_dump@@Base+0x20c>  // b.none
  423890:	nop
  423894:	ldp	x29, x30, [sp], #64
  423898:	ret
  42389c:	stp	x29, x30, [sp, #-32]!
  4238a0:	mov	x29, sp
  4238a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4238a8:	add	x0, x0, #0x400
  4238ac:	ldr	x0, [x0]
  4238b0:	bl	406e90 <ferror@plt>
  4238b4:	str	w0, [sp, #28]
  4238b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4238bc:	add	x0, x0, #0x400
  4238c0:	ldr	x0, [x0]
  4238c4:	bl	4068e0 <fclose@plt>
  4238c8:	str	w0, [sp, #24]
  4238cc:	ldr	w0, [sp, #28]
  4238d0:	cmp	w0, #0x0
  4238d4:	b.ne	4238e4 <output_dump@@Base+0x290>  // b.any
  4238d8:	ldr	w0, [sp, #24]
  4238dc:	cmp	w0, #0x0
  4238e0:	b.eq	423938 <output_dump@@Base+0x2e4>  // b.none
  4238e4:	ldr	w0, [sp, #24]
  4238e8:	cmp	w0, #0x0
  4238ec:	b.eq	423914 <output_dump@@Base+0x2c0>  // b.none
  4238f0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4238f4:	add	x0, x0, #0xbc8
  4238f8:	bl	406e40 <gettext@plt>
  4238fc:	mov	x2, x0
  423900:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423904:	add	x1, x0, #0xbe0
  423908:	mov	x0, x2
  42390c:	bl	4242c0 <perror_with_name@@Base>
  423910:	b	423930 <output_dump@@Base+0x2dc>
  423914:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423918:	add	x0, x0, #0xbc8
  42391c:	bl	406e40 <gettext@plt>
  423920:	mov	x2, x0
  423924:	mov	x1, #0x0                   	// #0
  423928:	mov	x0, #0x0                   	// #0
  42392c:	bl	423e74 <error@@Base>
  423930:	mov	w0, #0x1                   	// #1
  423934:	bl	406710 <exit@plt>
  423938:	nop
  42393c:	ldp	x29, x30, [sp], #32
  423940:	ret

0000000000423944 <output_init@@Base>:
  423944:	stp	x29, x30, [sp, #-32]!
  423948:	mov	x29, sp
  42394c:	str	x0, [sp, #24]
  423950:	ldr	x0, [sp, #24]
  423954:	cmp	x0, #0x0
  423958:	b.eq	4239a4 <output_init@@Base+0x60>  // b.none
  42395c:	ldr	x0, [sp, #24]
  423960:	mov	w1, #0xffffffff            	// #-1
  423964:	str	w1, [x0, #4]
  423968:	ldr	x0, [sp, #24]
  42396c:	ldr	w1, [x0, #4]
  423970:	ldr	x0, [sp, #24]
  423974:	str	w1, [x0]
  423978:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42397c:	add	x0, x0, #0x720
  423980:	ldr	w0, [x0]
  423984:	cmp	w0, #0x0
  423988:	cset	w0, ne  // ne = any
  42398c:	and	w2, w0, #0xff
  423990:	ldr	x1, [sp, #24]
  423994:	ldrb	w0, [x1, #8]
  423998:	bfxil	w0, w2, #0, #1
  42399c:	strb	w0, [x1, #8]
  4239a0:	b	423a24 <output_init@@Base+0xe0>
  4239a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4239a8:	add	x0, x0, #0x400
  4239ac:	ldr	x0, [x0]
  4239b0:	mov	x3, #0x2000                	// #8192
  4239b4:	mov	w2, #0x1                   	// #1
  4239b8:	mov	x1, #0x0                   	// #0
  4239bc:	bl	406850 <setvbuf@plt>
  4239c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4239c4:	add	x0, x0, #0x400
  4239c8:	ldr	x0, [x0]
  4239cc:	bl	4068a0 <fileno@plt>
  4239d0:	bl	4230dc <child_access@@Base+0x438>
  4239d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4239d8:	add	x0, x0, #0x3e8
  4239dc:	ldr	x0, [x0]
  4239e0:	bl	4068a0 <fileno@plt>
  4239e4:	bl	4230dc <child_access@@Base+0x438>
  4239e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4239ec:	add	x0, x0, #0x400
  4239f0:	ldr	x0, [x0]
  4239f4:	bl	4068a0 <fileno@plt>
  4239f8:	mov	w1, #0x1                   	// #1
  4239fc:	bl	436450 <rpl_fcntl@@Base>
  423a00:	cmn	w0, #0x1
  423a04:	b.ne	423a18 <output_init@@Base+0xd4>  // b.any
  423a08:	bl	406dd0 <__errno_location@plt>
  423a0c:	ldr	w0, [x0]
  423a10:	cmp	w0, #0x9
  423a14:	b.eq	423a24 <output_init@@Base+0xe0>  // b.none
  423a18:	adrp	x0, 423000 <child_access@@Base+0x35c>
  423a1c:	add	x0, x0, #0x89c
  423a20:	bl	436b60 <__libc_csu_fini@@Base+0x8>
  423a24:	ldp	x29, x30, [sp], #32
  423a28:	ret

0000000000423a2c <output_close@@Base>:
  423a2c:	stp	x29, x30, [sp, #-32]!
  423a30:	mov	x29, sp
  423a34:	str	x0, [sp, #24]
  423a38:	ldr	x0, [sp, #24]
  423a3c:	cmp	x0, #0x0
  423a40:	b.ne	423a64 <output_close@@Base+0x38>  // b.any
  423a44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423a48:	add	x0, x0, #0xff8
  423a4c:	ldr	w0, [x0]
  423a50:	cmp	w0, #0x0
  423a54:	b.eq	423ac8 <output_close@@Base+0x9c>  // b.none
  423a58:	mov	w0, #0x0                   	// #0
  423a5c:	bl	422dac <child_access@@Base+0x108>
  423a60:	b	423ac8 <output_close@@Base+0x9c>
  423a64:	ldr	x0, [sp, #24]
  423a68:	bl	423654 <output_dump@@Base>
  423a6c:	ldr	x0, [sp, #24]
  423a70:	ldr	w0, [x0]
  423a74:	cmp	w0, #0x0
  423a78:	b.lt	423a88 <output_close@@Base+0x5c>  // b.tstop
  423a7c:	ldr	x0, [sp, #24]
  423a80:	ldr	w0, [x0]
  423a84:	bl	406ac0 <close@plt>
  423a88:	ldr	x0, [sp, #24]
  423a8c:	ldr	w0, [x0, #4]
  423a90:	cmp	w0, #0x0
  423a94:	b.lt	423abc <output_close@@Base+0x90>  // b.tstop
  423a98:	ldr	x0, [sp, #24]
  423a9c:	ldr	w1, [x0, #4]
  423aa0:	ldr	x0, [sp, #24]
  423aa4:	ldr	w0, [x0]
  423aa8:	cmp	w1, w0
  423aac:	b.eq	423abc <output_close@@Base+0x90>  // b.none
  423ab0:	ldr	x0, [sp, #24]
  423ab4:	ldr	w0, [x0, #4]
  423ab8:	bl	406ac0 <close@plt>
  423abc:	ldr	x0, [sp, #24]
  423ac0:	bl	423944 <output_init@@Base>
  423ac4:	b	423acc <output_close@@Base+0xa0>
  423ac8:	nop
  423acc:	ldp	x29, x30, [sp], #32
  423ad0:	ret

0000000000423ad4 <output_start@@Base>:
  423ad4:	stp	x29, x30, [sp, #-16]!
  423ad8:	mov	x29, sp
  423adc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423ae0:	add	x0, x0, #0xff0
  423ae4:	ldr	x0, [x0]
  423ae8:	cmp	x0, #0x0
  423aec:	b.eq	423b50 <output_start@@Base+0x7c>  // b.none
  423af0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423af4:	add	x0, x0, #0xff0
  423af8:	ldr	x0, [x0]
  423afc:	ldrb	w0, [x0, #8]
  423b00:	and	w0, w0, #0x1
  423b04:	and	w0, w0, #0xff
  423b08:	cmp	w0, #0x0
  423b0c:	b.eq	423b50 <output_start@@Base+0x7c>  // b.none
  423b10:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b14:	add	x0, x0, #0xff0
  423b18:	ldr	x0, [x0]
  423b1c:	ldr	w0, [x0]
  423b20:	cmp	w0, #0x0
  423b24:	b.ge	423b50 <output_start@@Base+0x7c>  // b.tcont
  423b28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b2c:	add	x0, x0, #0xff0
  423b30:	ldr	x0, [x0]
  423b34:	ldr	w0, [x0, #4]
  423b38:	cmp	w0, #0x0
  423b3c:	b.ge	423b50 <output_start@@Base+0x7c>  // b.tcont
  423b40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b44:	add	x0, x0, #0xff0
  423b48:	ldr	x0, [x0]
  423b4c:	bl	423504 <output_tmpfd@@Base+0x88>
  423b50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b54:	add	x0, x0, #0x720
  423b58:	ldr	w0, [x0]
  423b5c:	cmp	w0, #0x0
  423b60:	b.eq	423b78 <output_start@@Base+0xa4>  // b.none
  423b64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b68:	add	x0, x0, #0x720
  423b6c:	ldr	w0, [x0]
  423b70:	cmp	w0, #0x3
  423b74:	b.ne	423bb8 <output_start@@Base+0xe4>  // b.any
  423b78:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b7c:	add	x0, x0, #0xff8
  423b80:	ldr	w0, [x0]
  423b84:	cmp	w0, #0x0
  423b88:	b.ne	423bb8 <output_start@@Base+0xe4>  // b.any
  423b8c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423b90:	add	x0, x0, #0x704
  423b94:	ldr	w0, [x0]
  423b98:	cmp	w0, #0x0
  423b9c:	b.eq	423bb8 <output_start@@Base+0xe4>  // b.none
  423ba0:	mov	w0, #0x1                   	// #1
  423ba4:	bl	422dac <child_access@@Base+0x108>
  423ba8:	mov	w1, w0
  423bac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423bb0:	add	x0, x0, #0xff8
  423bb4:	str	w1, [x0]
  423bb8:	nop
  423bbc:	ldp	x29, x30, [sp], #16
  423bc0:	ret

0000000000423bc4 <outputs@@Base>:
  423bc4:	stp	x29, x30, [sp, #-32]!
  423bc8:	mov	x29, sp
  423bcc:	str	w0, [sp, #28]
  423bd0:	str	x1, [sp, #16]
  423bd4:	ldr	x0, [sp, #16]
  423bd8:	cmp	x0, #0x0
  423bdc:	b.eq	423c10 <outputs@@Base+0x4c>  // b.none
  423be0:	ldr	x0, [sp, #16]
  423be4:	ldrb	w0, [x0]
  423be8:	cmp	w0, #0x0
  423bec:	b.eq	423c10 <outputs@@Base+0x4c>  // b.none
  423bf0:	bl	423ad4 <output_start@@Base>
  423bf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  423bf8:	add	x0, x0, #0xff0
  423bfc:	ldr	x0, [x0]
  423c00:	ldr	x2, [sp, #16]
  423c04:	ldr	w1, [sp, #28]
  423c08:	bl	422cac <child_access@@Base+0x8>
  423c0c:	b	423c14 <outputs@@Base+0x50>
  423c10:	nop
  423c14:	ldp	x29, x30, [sp], #32
  423c18:	ret
  423c1c:	stp	x29, x30, [sp, #-32]!
  423c20:	mov	x29, sp
  423c24:	str	x0, [sp, #24]
  423c28:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c2c:	add	x0, x0, #0x0
  423c30:	ldr	x0, [x0, #8]
  423c34:	ldr	x1, [sp, #24]
  423c38:	cmp	x1, x0
  423c3c:	b.ls	423c98 <outputs@@Base+0xd4>  // b.plast
  423c40:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c44:	add	x0, x0, #0x0
  423c48:	ldr	x1, [x0, #8]
  423c4c:	ldr	x0, [sp, #24]
  423c50:	lsl	x0, x0, #1
  423c54:	add	x1, x1, x0
  423c58:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c5c:	add	x0, x0, #0x0
  423c60:	str	x1, [x0, #8]
  423c64:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c68:	add	x0, x0, #0x0
  423c6c:	ldr	x2, [x0]
  423c70:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c74:	add	x0, x0, #0x0
  423c78:	ldr	x0, [x0, #8]
  423c7c:	mov	x1, x0
  423c80:	mov	x0, x2
  423c84:	bl	422720 <xrealloc@@Base>
  423c88:	mov	x1, x0
  423c8c:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c90:	add	x0, x0, #0x0
  423c94:	str	x1, [x0]
  423c98:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423c9c:	add	x0, x0, #0x0
  423ca0:	ldr	x1, [x0]
  423ca4:	ldr	x0, [sp, #24]
  423ca8:	sub	x0, x0, #0x1
  423cac:	add	x0, x1, x0
  423cb0:	strb	wzr, [x0]
  423cb4:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423cb8:	add	x0, x0, #0x0
  423cbc:	ldr	x0, [x0]
  423cc0:	ldp	x29, x30, [sp], #32
  423cc4:	ret

0000000000423cc8 <message@@Base>:
  423cc8:	stp	x29, x30, [sp, #-320]!
  423ccc:	mov	x29, sp
  423cd0:	str	x19, [sp, #16]
  423cd4:	str	w0, [sp, #92]
  423cd8:	str	x1, [sp, #80]
  423cdc:	str	x2, [sp, #72]
  423ce0:	str	x3, [sp, #280]
  423ce4:	str	x4, [sp, #288]
  423ce8:	str	x5, [sp, #296]
  423cec:	str	x6, [sp, #304]
  423cf0:	str	x7, [sp, #312]
  423cf4:	str	q0, [sp, #144]
  423cf8:	str	q1, [sp, #160]
  423cfc:	str	q2, [sp, #176]
  423d00:	str	q3, [sp, #192]
  423d04:	str	q4, [sp, #208]
  423d08:	str	q5, [sp, #224]
  423d0c:	str	q6, [sp, #240]
  423d10:	str	q7, [sp, #256]
  423d14:	ldr	x0, [sp, #72]
  423d18:	bl	4066f0 <strlen@plt>
  423d1c:	mov	x19, x0
  423d20:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423d24:	add	x0, x0, #0xa60
  423d28:	ldr	x0, [x0]
  423d2c:	bl	4066f0 <strlen@plt>
  423d30:	add	x1, x19, x0
  423d34:	ldr	x0, [sp, #80]
  423d38:	add	x0, x1, x0
  423d3c:	add	x0, x0, #0x1a
  423d40:	str	x0, [sp, #80]
  423d44:	ldr	x0, [sp, #80]
  423d48:	bl	423c1c <outputs@@Base+0x58>
  423d4c:	str	x0, [sp, #136]
  423d50:	ldr	w0, [sp, #92]
  423d54:	cmp	w0, #0x0
  423d58:	b.eq	423ddc <message@@Base+0x114>  // b.none
  423d5c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423d60:	add	x0, x0, #0xa70
  423d64:	ldr	w0, [x0]
  423d68:	cmp	w0, #0x0
  423d6c:	b.ne	423d94 <message@@Base+0xcc>  // b.any
  423d70:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423d74:	add	x0, x0, #0xa60
  423d78:	ldr	x0, [x0]
  423d7c:	mov	x2, x0
  423d80:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423d84:	add	x1, x0, #0xbe8
  423d88:	ldr	x0, [sp, #136]
  423d8c:	bl	406790 <sprintf@plt>
  423d90:	b	423dc4 <message@@Base+0xfc>
  423d94:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423d98:	add	x0, x0, #0xa60
  423d9c:	ldr	x1, [x0]
  423da0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423da4:	add	x0, x0, #0xa70
  423da8:	ldr	w0, [x0]
  423dac:	mov	w3, w0
  423db0:	mov	x2, x1
  423db4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423db8:	add	x1, x0, #0xbf0
  423dbc:	ldr	x0, [sp, #136]
  423dc0:	bl	406790 <sprintf@plt>
  423dc4:	ldr	x0, [sp, #136]
  423dc8:	bl	4066f0 <strlen@plt>
  423dcc:	mov	x1, x0
  423dd0:	ldr	x0, [sp, #136]
  423dd4:	add	x0, x0, x1
  423dd8:	str	x0, [sp, #136]
  423ddc:	add	x0, sp, #0x140
  423de0:	str	x0, [sp, #104]
  423de4:	add	x0, sp, #0x140
  423de8:	str	x0, [sp, #112]
  423dec:	add	x0, sp, #0x110
  423df0:	str	x0, [sp, #120]
  423df4:	mov	w0, #0xffffffd8            	// #-40
  423df8:	str	w0, [sp, #128]
  423dfc:	mov	w0, #0xffffff80            	// #-128
  423e00:	str	w0, [sp, #132]
  423e04:	add	x2, sp, #0x20
  423e08:	add	x3, sp, #0x68
  423e0c:	ldp	x0, x1, [x3]
  423e10:	stp	x0, x1, [x2]
  423e14:	ldp	x0, x1, [x3, #16]
  423e18:	stp	x0, x1, [x2, #16]
  423e1c:	add	x0, sp, #0x20
  423e20:	mov	x2, x0
  423e24:	ldr	x1, [sp, #72]
  423e28:	ldr	x0, [sp, #136]
  423e2c:	bl	406cc0 <vsprintf@plt>
  423e30:	ldr	x0, [sp, #136]
  423e34:	bl	4066f0 <strlen@plt>
  423e38:	mov	x1, x0
  423e3c:	ldr	x0, [sp, #136]
  423e40:	add	x0, x0, x1
  423e44:	mov	w1, #0xa                   	// #10
  423e48:	strh	w1, [x0]
  423e4c:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  423e50:	add	x0, x0, #0x0
  423e54:	ldr	x0, [x0]
  423e58:	mov	x1, x0
  423e5c:	mov	w0, #0x0                   	// #0
  423e60:	bl	423bc4 <outputs@@Base>
  423e64:	nop
  423e68:	ldr	x19, [sp, #16]
  423e6c:	ldp	x29, x30, [sp], #320
  423e70:	ret

0000000000423e74 <error@@Base>:
  423e74:	stp	x29, x30, [sp, #-320]!
  423e78:	mov	x29, sp
  423e7c:	str	x19, [sp, #16]
  423e80:	str	x0, [sp, #88]
  423e84:	str	x1, [sp, #80]
  423e88:	str	x2, [sp, #72]
  423e8c:	str	x3, [sp, #280]
  423e90:	str	x4, [sp, #288]
  423e94:	str	x5, [sp, #296]
  423e98:	str	x6, [sp, #304]
  423e9c:	str	x7, [sp, #312]
  423ea0:	str	q0, [sp, #144]
  423ea4:	str	q1, [sp, #160]
  423ea8:	str	q2, [sp, #176]
  423eac:	str	q3, [sp, #192]
  423eb0:	str	q4, [sp, #208]
  423eb4:	str	q5, [sp, #224]
  423eb8:	str	q6, [sp, #240]
  423ebc:	str	q7, [sp, #256]
  423ec0:	ldr	x0, [sp, #72]
  423ec4:	bl	4066f0 <strlen@plt>
  423ec8:	mov	x19, x0
  423ecc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423ed0:	add	x0, x0, #0xa60
  423ed4:	ldr	x0, [x0]
  423ed8:	bl	4066f0 <strlen@plt>
  423edc:	add	x19, x19, x0
  423ee0:	ldr	x0, [sp, #88]
  423ee4:	cmp	x0, #0x0
  423ee8:	b.eq	423f0c <error@@Base+0x98>  // b.none
  423eec:	ldr	x0, [sp, #88]
  423ef0:	ldr	x0, [x0]
  423ef4:	cmp	x0, #0x0
  423ef8:	b.eq	423f0c <error@@Base+0x98>  // b.none
  423efc:	ldr	x0, [sp, #88]
  423f00:	ldr	x0, [x0]
  423f04:	bl	4066f0 <strlen@plt>
  423f08:	b	423f10 <error@@Base+0x9c>
  423f0c:	mov	x0, #0x0                   	// #0
  423f10:	add	x1, x0, x19
  423f14:	ldr	x0, [sp, #80]
  423f18:	add	x0, x1, x0
  423f1c:	add	x0, x0, #0x1a
  423f20:	str	x0, [sp, #80]
  423f24:	ldr	x0, [sp, #80]
  423f28:	bl	423c1c <outputs@@Base+0x58>
  423f2c:	str	x0, [sp, #136]
  423f30:	ldr	x0, [sp, #88]
  423f34:	cmp	x0, #0x0
  423f38:	b.eq	423f80 <error@@Base+0x10c>  // b.none
  423f3c:	ldr	x0, [sp, #88]
  423f40:	ldr	x0, [x0]
  423f44:	cmp	x0, #0x0
  423f48:	b.eq	423f80 <error@@Base+0x10c>  // b.none
  423f4c:	ldr	x0, [sp, #88]
  423f50:	ldr	x2, [x0]
  423f54:	ldr	x0, [sp, #88]
  423f58:	ldr	x1, [x0, #8]
  423f5c:	ldr	x0, [sp, #88]
  423f60:	ldr	x0, [x0, #16]
  423f64:	add	x0, x1, x0
  423f68:	mov	x3, x0
  423f6c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423f70:	add	x1, x0, #0xc00
  423f74:	ldr	x0, [sp, #136]
  423f78:	bl	406790 <sprintf@plt>
  423f7c:	b	423fe8 <error@@Base+0x174>
  423f80:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423f84:	add	x0, x0, #0xa70
  423f88:	ldr	w0, [x0]
  423f8c:	cmp	w0, #0x0
  423f90:	b.ne	423fb8 <error@@Base+0x144>  // b.any
  423f94:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423f98:	add	x0, x0, #0xa60
  423f9c:	ldr	x0, [x0]
  423fa0:	mov	x2, x0
  423fa4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423fa8:	add	x1, x0, #0xbe8
  423fac:	ldr	x0, [sp, #136]
  423fb0:	bl	406790 <sprintf@plt>
  423fb4:	b	423fe8 <error@@Base+0x174>
  423fb8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423fbc:	add	x0, x0, #0xa60
  423fc0:	ldr	x1, [x0]
  423fc4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  423fc8:	add	x0, x0, #0xa70
  423fcc:	ldr	w0, [x0]
  423fd0:	mov	w3, w0
  423fd4:	mov	x2, x1
  423fd8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  423fdc:	add	x1, x0, #0xbf0
  423fe0:	ldr	x0, [sp, #136]
  423fe4:	bl	406790 <sprintf@plt>
  423fe8:	ldr	x0, [sp, #136]
  423fec:	bl	4066f0 <strlen@plt>
  423ff0:	mov	x1, x0
  423ff4:	ldr	x0, [sp, #136]
  423ff8:	add	x0, x0, x1
  423ffc:	str	x0, [sp, #136]
  424000:	add	x0, sp, #0x140
  424004:	str	x0, [sp, #104]
  424008:	add	x0, sp, #0x140
  42400c:	str	x0, [sp, #112]
  424010:	add	x0, sp, #0x110
  424014:	str	x0, [sp, #120]
  424018:	mov	w0, #0xffffffd8            	// #-40
  42401c:	str	w0, [sp, #128]
  424020:	mov	w0, #0xffffff80            	// #-128
  424024:	str	w0, [sp, #132]
  424028:	add	x2, sp, #0x20
  42402c:	add	x3, sp, #0x68
  424030:	ldp	x0, x1, [x3]
  424034:	stp	x0, x1, [x2]
  424038:	ldp	x0, x1, [x3, #16]
  42403c:	stp	x0, x1, [x2, #16]
  424040:	add	x0, sp, #0x20
  424044:	mov	x2, x0
  424048:	ldr	x1, [sp, #72]
  42404c:	ldr	x0, [sp, #136]
  424050:	bl	406cc0 <vsprintf@plt>
  424054:	ldr	x0, [sp, #136]
  424058:	bl	4066f0 <strlen@plt>
  42405c:	mov	x1, x0
  424060:	ldr	x0, [sp, #136]
  424064:	add	x0, x0, x1
  424068:	mov	w1, #0xa                   	// #10
  42406c:	strh	w1, [x0]
  424070:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  424074:	add	x0, x0, #0x0
  424078:	ldr	x0, [x0]
  42407c:	mov	x1, x0
  424080:	mov	w0, #0x1                   	// #1
  424084:	bl	423bc4 <outputs@@Base>
  424088:	nop
  42408c:	ldr	x19, [sp, #16]
  424090:	ldp	x29, x30, [sp], #320
  424094:	ret

0000000000424098 <fatal@@Base>:
  424098:	stp	x29, x30, [sp, #-320]!
  42409c:	mov	x29, sp
  4240a0:	str	x19, [sp, #16]
  4240a4:	str	x0, [sp, #88]
  4240a8:	str	x1, [sp, #80]
  4240ac:	str	x2, [sp, #72]
  4240b0:	str	x3, [sp, #280]
  4240b4:	str	x4, [sp, #288]
  4240b8:	str	x5, [sp, #296]
  4240bc:	str	x6, [sp, #304]
  4240c0:	str	x7, [sp, #312]
  4240c4:	str	q0, [sp, #144]
  4240c8:	str	q1, [sp, #160]
  4240cc:	str	q2, [sp, #176]
  4240d0:	str	q3, [sp, #192]
  4240d4:	str	q4, [sp, #208]
  4240d8:	str	q5, [sp, #224]
  4240dc:	str	q6, [sp, #240]
  4240e0:	str	q7, [sp, #256]
  4240e4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4240e8:	add	x0, x0, #0xc10
  4240ec:	bl	406e40 <gettext@plt>
  4240f0:	str	x0, [sp, #136]
  4240f4:	ldr	x0, [sp, #72]
  4240f8:	bl	4066f0 <strlen@plt>
  4240fc:	mov	x19, x0
  424100:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424104:	add	x0, x0, #0xa60
  424108:	ldr	x0, [x0]
  42410c:	bl	4066f0 <strlen@plt>
  424110:	add	x19, x19, x0
  424114:	ldr	x0, [sp, #88]
  424118:	cmp	x0, #0x0
  42411c:	b.eq	424140 <fatal@@Base+0xa8>  // b.none
  424120:	ldr	x0, [sp, #88]
  424124:	ldr	x0, [x0]
  424128:	cmp	x0, #0x0
  42412c:	b.eq	424140 <fatal@@Base+0xa8>  // b.none
  424130:	ldr	x0, [sp, #88]
  424134:	ldr	x0, [x0]
  424138:	bl	4066f0 <strlen@plt>
  42413c:	b	424144 <fatal@@Base+0xac>
  424140:	mov	x0, #0x0                   	// #0
  424144:	add	x19, x0, x19
  424148:	ldr	x0, [sp, #136]
  42414c:	bl	4066f0 <strlen@plt>
  424150:	add	x1, x19, x0
  424154:	ldr	x0, [sp, #80]
  424158:	add	x0, x1, x0
  42415c:	add	x0, x0, #0x1d
  424160:	str	x0, [sp, #80]
  424164:	ldr	x0, [sp, #80]
  424168:	bl	423c1c <outputs@@Base+0x58>
  42416c:	str	x0, [sp, #128]
  424170:	ldr	x0, [sp, #88]
  424174:	cmp	x0, #0x0
  424178:	b.eq	4241c0 <fatal@@Base+0x128>  // b.none
  42417c:	ldr	x0, [sp, #88]
  424180:	ldr	x0, [x0]
  424184:	cmp	x0, #0x0
  424188:	b.eq	4241c0 <fatal@@Base+0x128>  // b.none
  42418c:	ldr	x0, [sp, #88]
  424190:	ldr	x2, [x0]
  424194:	ldr	x0, [sp, #88]
  424198:	ldr	x1, [x0, #8]
  42419c:	ldr	x0, [sp, #88]
  4241a0:	ldr	x0, [x0, #16]
  4241a4:	add	x0, x1, x0
  4241a8:	mov	x3, x0
  4241ac:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4241b0:	add	x1, x0, #0xc20
  4241b4:	ldr	x0, [sp, #128]
  4241b8:	bl	406790 <sprintf@plt>
  4241bc:	b	424228 <fatal@@Base+0x190>
  4241c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4241c4:	add	x0, x0, #0xa70
  4241c8:	ldr	w0, [x0]
  4241cc:	cmp	w0, #0x0
  4241d0:	b.ne	4241f8 <fatal@@Base+0x160>  // b.any
  4241d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4241d8:	add	x0, x0, #0xa60
  4241dc:	ldr	x0, [x0]
  4241e0:	mov	x2, x0
  4241e4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4241e8:	add	x1, x0, #0xc30
  4241ec:	ldr	x0, [sp, #128]
  4241f0:	bl	406790 <sprintf@plt>
  4241f4:	b	424228 <fatal@@Base+0x190>
  4241f8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4241fc:	add	x0, x0, #0xa60
  424200:	ldr	x1, [x0]
  424204:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424208:	add	x0, x0, #0xa70
  42420c:	ldr	w0, [x0]
  424210:	mov	w3, w0
  424214:	mov	x2, x1
  424218:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42421c:	add	x1, x0, #0xc40
  424220:	ldr	x0, [sp, #128]
  424224:	bl	406790 <sprintf@plt>
  424228:	ldr	x0, [sp, #128]
  42422c:	bl	4066f0 <strlen@plt>
  424230:	mov	x1, x0
  424234:	ldr	x0, [sp, #128]
  424238:	add	x0, x0, x1
  42423c:	str	x0, [sp, #128]
  424240:	add	x0, sp, #0x140
  424244:	str	x0, [sp, #96]
  424248:	add	x0, sp, #0x140
  42424c:	str	x0, [sp, #104]
  424250:	add	x0, sp, #0x110
  424254:	str	x0, [sp, #112]
  424258:	mov	w0, #0xffffffd8            	// #-40
  42425c:	str	w0, [sp, #120]
  424260:	mov	w0, #0xffffff80            	// #-128
  424264:	str	w0, [sp, #124]
  424268:	add	x2, sp, #0x20
  42426c:	add	x3, sp, #0x60
  424270:	ldp	x0, x1, [x3]
  424274:	stp	x0, x1, [x2]
  424278:	ldp	x0, x1, [x3, #16]
  42427c:	stp	x0, x1, [x2, #16]
  424280:	add	x0, sp, #0x20
  424284:	mov	x2, x0
  424288:	ldr	x1, [sp, #72]
  42428c:	ldr	x0, [sp, #128]
  424290:	bl	406cc0 <vsprintf@plt>
  424294:	ldr	x1, [sp, #136]
  424298:	ldr	x0, [sp, #128]
  42429c:	bl	4069c0 <strcat@plt>
  4242a0:	adrp	x0, 454000 <stdio_traced@@Base+0x8>
  4242a4:	add	x0, x0, #0x0
  4242a8:	ldr	x0, [x0]
  4242ac:	mov	x1, x0
  4242b0:	mov	w0, #0x1                   	// #1
  4242b4:	bl	423bc4 <outputs@@Base>
  4242b8:	mov	w0, #0x2                   	// #2
  4242bc:	bl	421fbc <die@@Base>

00000000004242c0 <perror_with_name@@Base>:
  4242c0:	stp	x29, x30, [sp, #-64]!
  4242c4:	mov	x29, sp
  4242c8:	str	x19, [sp, #16]
  4242cc:	str	x0, [sp, #40]
  4242d0:	str	x1, [sp, #32]
  4242d4:	bl	406dd0 <__errno_location@plt>
  4242d8:	ldr	w0, [x0]
  4242dc:	bl	406ab0 <strerror@plt>
  4242e0:	str	x0, [sp, #56]
  4242e4:	ldr	x0, [sp, #40]
  4242e8:	bl	4066f0 <strlen@plt>
  4242ec:	mov	x19, x0
  4242f0:	ldr	x0, [sp, #32]
  4242f4:	bl	4066f0 <strlen@plt>
  4242f8:	add	x19, x19, x0
  4242fc:	ldr	x0, [sp, #56]
  424300:	bl	4066f0 <strlen@plt>
  424304:	add	x19, x19, x0
  424308:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42430c:	add	x0, x0, #0xc50
  424310:	bl	406e40 <gettext@plt>
  424314:	ldr	x5, [sp, #56]
  424318:	ldr	x4, [sp, #32]
  42431c:	ldr	x3, [sp, #40]
  424320:	mov	x2, x0
  424324:	mov	x1, x19
  424328:	mov	x0, #0x0                   	// #0
  42432c:	bl	423e74 <error@@Base>
  424330:	nop
  424334:	ldr	x19, [sp, #16]
  424338:	ldp	x29, x30, [sp], #64
  42433c:	ret

0000000000424340 <pfatal_with_name@@Base>:
  424340:	stp	x29, x30, [sp, #-64]!
  424344:	mov	x29, sp
  424348:	str	x19, [sp, #16]
  42434c:	str	x0, [sp, #40]
  424350:	bl	406dd0 <__errno_location@plt>
  424354:	ldr	w0, [x0]
  424358:	bl	406ab0 <strerror@plt>
  42435c:	str	x0, [sp, #56]
  424360:	ldr	x0, [sp, #40]
  424364:	bl	4066f0 <strlen@plt>
  424368:	mov	x19, x0
  42436c:	ldr	x0, [sp, #56]
  424370:	bl	4066f0 <strlen@plt>
  424374:	add	x19, x19, x0
  424378:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42437c:	add	x0, x0, #0xc60
  424380:	bl	406e40 <gettext@plt>
  424384:	ldr	x4, [sp, #56]
  424388:	ldr	x3, [sp, #40]
  42438c:	mov	x2, x0
  424390:	mov	x1, x19
  424394:	mov	x0, #0x0                   	// #0
  424398:	bl	424098 <fatal@@Base>

000000000042439c <out_of_memory@@Base>:
  42439c:	stp	x29, x30, [sp, #-32]!
  4243a0:	mov	x29, sp
  4243a4:	stp	x19, x20, [sp, #16]
  4243a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4243ac:	add	x0, x0, #0x400
  4243b0:	ldr	x0, [x0]
  4243b4:	bl	4068a0 <fileno@plt>
  4243b8:	mov	w20, w0
  4243bc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4243c0:	add	x0, x0, #0xa60
  4243c4:	ldr	x19, [x0]
  4243c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4243cc:	add	x0, x0, #0xa60
  4243d0:	ldr	x0, [x0]
  4243d4:	bl	4066f0 <strlen@plt>
  4243d8:	mov	x2, x0
  4243dc:	mov	x1, x19
  4243e0:	mov	w0, w20
  4243e4:	bl	42296c <writebuf@@Base>
  4243e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4243ec:	add	x0, x0, #0x400
  4243f0:	ldr	x0, [x0]
  4243f4:	bl	4068a0 <fileno@plt>
  4243f8:	mov	w3, w0
  4243fc:	mov	x2, #0x1f                  	// #31
  424400:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424404:	add	x1, x0, #0xc68
  424408:	mov	w0, w3
  42440c:	bl	42296c <writebuf@@Base>
  424410:	mov	w0, #0x2                   	// #2
  424414:	bl	406710 <exit@plt>

0000000000424418 <read_all_makefiles@@Base>:
  424418:	stp	x29, x30, [sp, #-112]!
  42441c:	mov	x29, sp
  424420:	str	x0, [sp, #24]
  424424:	str	wzr, [sp, #108]
  424428:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42442c:	add	x0, x0, #0x3b8
  424430:	ldr	x0, [x0]
  424434:	ldr	x0, [x0, #8]
  424438:	mov	x6, #0x0                   	// #0
  42443c:	mov	x5, x0
  424440:	mov	w4, #0x0                   	// #0
  424444:	mov	w3, #0x2                   	// #2
  424448:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42444c:	add	x2, x0, #0xcc8
  424450:	mov	x1, #0xd                   	// #13
  424454:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424458:	add	x0, x0, #0xcd0
  42445c:	bl	4316d8 <define_variable_in_set@@Base>
  424460:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  424464:	add	x0, x0, #0x6dc
  424468:	ldr	w0, [x0]
  42446c:	and	w0, w0, #0x1
  424470:	cmp	w0, #0x0
  424474:	b.eq	424498 <read_all_makefiles@@Base+0x80>  // b.none
  424478:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42447c:	add	x0, x0, #0xce0
  424480:	bl	406e40 <gettext@plt>
  424484:	bl	406dc0 <printf@plt>
  424488:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42448c:	add	x0, x0, #0x400
  424490:	ldr	x0, [x0]
  424494:	bl	406c90 <fflush@plt>
  424498:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42449c:	add	x0, x0, #0xa90
  4244a0:	ldr	w0, [x0]
  4244a4:	str	w0, [sp, #84]
  4244a8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4244ac:	add	x0, x0, #0xa90
  4244b0:	str	wzr, [x0]
  4244b4:	mov	x1, #0x0                   	// #0
  4244b8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4244bc:	add	x0, x0, #0xcf8
  4244c0:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  4244c4:	str	x0, [sp, #72]
  4244c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4244cc:	add	x0, x0, #0xa90
  4244d0:	ldr	w1, [sp, #84]
  4244d4:	str	w1, [x0]
  4244d8:	ldr	x0, [sp, #72]
  4244dc:	str	x0, [sp, #40]
  4244e0:	b	424514 <read_all_makefiles@@Base+0xfc>
  4244e4:	ldr	x0, [sp, #40]
  4244e8:	ldrb	w0, [x0]
  4244ec:	cmp	w0, #0x0
  4244f0:	b.eq	424504 <read_all_makefiles@@Base+0xec>  // b.none
  4244f4:	ldr	x0, [sp, #40]
  4244f8:	add	x1, x0, #0x1
  4244fc:	str	x1, [sp, #40]
  424500:	strb	wzr, [x0]
  424504:	ldr	x0, [sp, #64]
  424508:	bl	430d78 <strcache_add@@Base>
  42450c:	mov	w1, #0x7                   	// #7
  424510:	bl	424804 <read_all_makefiles@@Base+0x3ec>
  424514:	add	x1, sp, #0x20
  424518:	add	x0, sp, #0x28
  42451c:	bl	4228ec <find_next_token@@Base>
  424520:	str	x0, [sp, #64]
  424524:	ldr	x0, [sp, #64]
  424528:	cmp	x0, #0x0
  42452c:	b.ne	4244e4 <read_all_makefiles@@Base+0xcc>  // b.any
  424530:	ldr	x0, [sp, #72]
  424534:	bl	406c00 <free@plt>
  424538:	ldr	x0, [sp, #24]
  42453c:	cmp	x0, #0x0
  424540:	b.eq	4245dc <read_all_makefiles@@Base+0x1c4>  // b.none
  424544:	b	4245cc <read_all_makefiles@@Base+0x1b4>
  424548:	ldr	x0, [sp, #24]
  42454c:	ldr	x0, [x0]
  424550:	mov	w1, #0x0                   	// #0
  424554:	bl	424804 <read_all_makefiles@@Base+0x3ec>
  424558:	str	x0, [sp, #56]
  42455c:	bl	406dd0 <__errno_location@plt>
  424560:	ldr	w0, [x0]
  424564:	cmp	w0, #0x0
  424568:	b.eq	424584 <read_all_makefiles@@Base+0x16c>  // b.none
  42456c:	ldr	x0, [sp, #24]
  424570:	ldr	x0, [x0]
  424574:	mov	x1, x0
  424578:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42457c:	add	x0, x0, #0xcc8
  424580:	bl	4242c0 <perror_with_name@@Base>
  424584:	ldr	x0, [sp, #56]
  424588:	ldr	x0, [x0, #8]
  42458c:	cmp	x0, #0x0
  424590:	b.eq	4245a0 <read_all_makefiles@@Base+0x188>  // b.none
  424594:	ldr	x0, [sp, #56]
  424598:	ldr	x0, [x0, #8]
  42459c:	b	4245ac <read_all_makefiles@@Base+0x194>
  4245a0:	ldr	x0, [sp, #56]
  4245a4:	ldr	x0, [x0, #16]
  4245a8:	ldr	x0, [x0]
  4245ac:	ldr	x1, [sp, #24]
  4245b0:	str	x0, [x1]
  4245b4:	ldr	w0, [sp, #108]
  4245b8:	add	w0, w0, #0x1
  4245bc:	str	w0, [sp, #108]
  4245c0:	ldr	x0, [sp, #24]
  4245c4:	add	x0, x0, #0x8
  4245c8:	str	x0, [sp, #24]
  4245cc:	ldr	x0, [sp, #24]
  4245d0:	ldr	x0, [x0]
  4245d4:	cmp	x0, #0x0
  4245d8:	b.ne	424548 <read_all_makefiles@@Base+0x130>  // b.any
  4245dc:	ldr	w0, [sp, #108]
  4245e0:	cmp	w0, #0x0
  4245e4:	b.ne	424758 <read_all_makefiles@@Base+0x340>  // b.any
  4245e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4245ec:	add	x0, x0, #0x358
  4245f0:	str	x0, [sp, #96]
  4245f4:	b	424604 <read_all_makefiles@@Base+0x1ec>
  4245f8:	ldr	x0, [sp, #96]
  4245fc:	add	x0, x0, #0x8
  424600:	str	x0, [sp, #96]
  424604:	ldr	x0, [sp, #96]
  424608:	ldr	x0, [x0]
  42460c:	cmp	x0, #0x0
  424610:	b.eq	424628 <read_all_makefiles@@Base+0x210>  // b.none
  424614:	ldr	x0, [sp, #96]
  424618:	ldr	x0, [x0]
  42461c:	bl	40a78c <file_exists_p@@Base>
  424620:	cmp	w0, #0x0
  424624:	b.eq	4245f8 <read_all_makefiles@@Base+0x1e0>  // b.none
  424628:	ldr	x0, [sp, #96]
  42462c:	ldr	x0, [x0]
  424630:	cmp	x0, #0x0
  424634:	b.eq	424674 <read_all_makefiles@@Base+0x25c>  // b.none
  424638:	ldr	x0, [sp, #96]
  42463c:	ldr	x0, [x0]
  424640:	mov	w1, #0x0                   	// #0
  424644:	bl	424804 <read_all_makefiles@@Base+0x3ec>
  424648:	bl	406dd0 <__errno_location@plt>
  42464c:	ldr	w0, [x0]
  424650:	cmp	w0, #0x0
  424654:	b.eq	424758 <read_all_makefiles@@Base+0x340>  // b.none
  424658:	ldr	x0, [sp, #96]
  42465c:	ldr	x0, [x0]
  424660:	mov	x1, x0
  424664:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424668:	add	x0, x0, #0xcc8
  42466c:	bl	4242c0 <perror_with_name@@Base>
  424670:	b	424758 <read_all_makefiles@@Base+0x340>
  424674:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424678:	add	x0, x0, #0x70
  42467c:	ldr	x0, [x0]
  424680:	str	x0, [sp, #88]
  424684:	b	424694 <read_all_makefiles@@Base+0x27c>
  424688:	ldr	x0, [sp, #88]
  42468c:	ldr	x0, [x0]
  424690:	str	x0, [sp, #88]
  424694:	ldr	x0, [sp, #88]
  424698:	cmp	x0, #0x0
  42469c:	b.eq	4246b0 <read_all_makefiles@@Base+0x298>  // b.none
  4246a0:	ldr	x0, [sp, #88]
  4246a4:	ldr	x0, [x0]
  4246a8:	cmp	x0, #0x0
  4246ac:	b.ne	424688 <read_all_makefiles@@Base+0x270>  // b.any
  4246b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4246b4:	add	x0, x0, #0x358
  4246b8:	str	x0, [sp, #96]
  4246bc:	b	424734 <read_all_makefiles@@Base+0x31c>
  4246c0:	mov	x0, #0x40                  	// #64
  4246c4:	bl	4226d4 <xcalloc@@Base>
  4246c8:	str	x0, [sp, #48]
  4246cc:	ldr	x0, [sp, #96]
  4246d0:	ldr	x0, [x0]
  4246d4:	bl	430d78 <strcache_add@@Base>
  4246d8:	bl	40c678 <enter_file@@Base>
  4246dc:	mov	x1, x0
  4246e0:	ldr	x0, [sp, #48]
  4246e4:	str	x1, [x0, #16]
  4246e8:	ldr	x0, [sp, #48]
  4246ec:	mov	w1, #0x4                   	// #4
  4246f0:	strb	w1, [x0, #32]
  4246f4:	ldr	x0, [sp, #88]
  4246f8:	cmp	x0, #0x0
  4246fc:	b.ne	424714 <read_all_makefiles@@Base+0x2fc>  // b.any
  424700:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424704:	add	x0, x0, #0x70
  424708:	ldr	x1, [sp, #48]
  42470c:	str	x1, [x0]
  424710:	b	424720 <read_all_makefiles@@Base+0x308>
  424714:	ldr	x0, [sp, #88]
  424718:	ldr	x1, [sp, #48]
  42471c:	str	x1, [x0]
  424720:	ldr	x0, [sp, #48]
  424724:	str	x0, [sp, #88]
  424728:	ldr	x0, [sp, #96]
  42472c:	add	x0, x0, #0x8
  424730:	str	x0, [sp, #96]
  424734:	ldr	x0, [sp, #96]
  424738:	ldr	x0, [x0]
  42473c:	cmp	x0, #0x0
  424740:	b.ne	4246c0 <read_all_makefiles@@Base+0x2a8>  // b.any
  424744:	ldr	x0, [sp, #88]
  424748:	cmp	x0, #0x0
  42474c:	b.eq	424758 <read_all_makefiles@@Base+0x340>  // b.none
  424750:	ldr	x0, [sp, #88]
  424754:	str	xzr, [x0]
  424758:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42475c:	add	x0, x0, #0x70
  424760:	ldr	x0, [x0]
  424764:	ldp	x29, x30, [sp], #112
  424768:	ret
  42476c:	stp	x29, x30, [sp, #-48]!
  424770:	mov	x29, sp
  424774:	str	x0, [sp, #24]
  424778:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42477c:	add	x0, x0, #0x328
  424780:	ldr	x0, [x0]
  424784:	str	x0, [sp, #40]
  424788:	mov	x2, #0x18                  	// #24
  42478c:	mov	w1, #0x0                   	// #0
  424790:	ldr	x0, [sp, #24]
  424794:	bl	4069d0 <memset@plt>
  424798:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42479c:	add	x0, x0, #0x328
  4247a0:	ldr	x1, [sp, #24]
  4247a4:	str	x1, [x0]
  4247a8:	ldr	x0, [sp, #40]
  4247ac:	ldp	x29, x30, [sp], #48
  4247b0:	ret
  4247b4:	stp	x29, x30, [sp, #-32]!
  4247b8:	mov	x29, sp
  4247bc:	str	x0, [sp, #24]
  4247c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4247c4:	add	x0, x0, #0x328
  4247c8:	ldr	x0, [x0]
  4247cc:	ldr	x0, [x0, #8]
  4247d0:	bl	406c00 <free@plt>
  4247d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4247d8:	add	x0, x0, #0x328
  4247dc:	ldr	x0, [x0]
  4247e0:	ldr	x0, [x0, #16]
  4247e4:	bl	406c00 <free@plt>
  4247e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4247ec:	add	x0, x0, #0x328
  4247f0:	ldr	x1, [sp, #24]
  4247f4:	str	x1, [x0]
  4247f8:	nop
  4247fc:	ldp	x29, x30, [sp], #32
  424800:	ret
  424804:	stp	x29, x30, [sp, #-160]!
  424808:	mov	x29, sp
  42480c:	str	x19, [sp, #16]
  424810:	str	x0, [x29, #40]
  424814:	strh	w1, [x29, #38]
  424818:	str	xzr, [x29, #152]
  42481c:	mov	x0, #0x40                  	// #64
  424820:	bl	4226d4 <xcalloc@@Base>
  424824:	str	x0, [x29, #136]
  424828:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42482c:	add	x0, x0, #0x70
  424830:	ldr	x1, [x0]
  424834:	ldr	x0, [x29, #136]
  424838:	str	x1, [x0]
  42483c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424840:	add	x0, x0, #0x70
  424844:	ldr	x1, [x29, #136]
  424848:	str	x1, [x0]
  42484c:	ldr	x0, [x29, #40]
  424850:	str	x0, [x29, #88]
  424854:	mov	x0, #0x1                   	// #1
  424858:	str	x0, [x29, #96]
  42485c:	str	xzr, [x29, #104]
  424860:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  424864:	add	x0, x0, #0x6dc
  424868:	ldr	w0, [x0]
  42486c:	and	w0, w0, #0x2
  424870:	cmp	w0, #0x0
  424874:	b.eq	424918 <read_all_makefiles@@Base+0x500>  // b.none
  424878:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42487c:	add	x0, x0, #0xd08
  424880:	bl	406e40 <gettext@plt>
  424884:	ldr	x1, [x29, #40]
  424888:	bl	406dc0 <printf@plt>
  42488c:	ldrh	w0, [x29, #38]
  424890:	and	w0, w0, #0x1
  424894:	cmp	w0, #0x0
  424898:	b.eq	4248ac <read_all_makefiles@@Base+0x494>  // b.none
  42489c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4248a0:	add	x0, x0, #0xd20
  4248a4:	bl	406e40 <gettext@plt>
  4248a8:	bl	406dc0 <printf@plt>
  4248ac:	ldrh	w0, [x29, #38]
  4248b0:	and	w0, w0, #0x2
  4248b4:	cmp	w0, #0x0
  4248b8:	b.eq	4248cc <read_all_makefiles@@Base+0x4b4>  // b.none
  4248bc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4248c0:	add	x0, x0, #0xd38
  4248c4:	bl	406e40 <gettext@plt>
  4248c8:	bl	406dc0 <printf@plt>
  4248cc:	ldrh	w0, [x29, #38]
  4248d0:	and	w0, w0, #0x4
  4248d4:	cmp	w0, #0x0
  4248d8:	b.eq	4248ec <read_all_makefiles@@Base+0x4d4>  // b.none
  4248dc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4248e0:	add	x0, x0, #0xd48
  4248e4:	bl	406e40 <gettext@plt>
  4248e8:	bl	406dc0 <printf@plt>
  4248ec:	ldrh	w0, [x29, #38]
  4248f0:	and	w0, w0, #0x8
  4248f4:	cmp	w0, #0x0
  4248f8:	b.eq	42490c <read_all_makefiles@@Base+0x4f4>  // b.none
  4248fc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424900:	add	x0, x0, #0xd58
  424904:	bl	406e40 <gettext@plt>
  424908:	bl	406dc0 <printf@plt>
  42490c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424910:	add	x0, x0, #0xd70
  424914:	bl	406b60 <puts@plt>
  424918:	ldrh	w0, [x29, #38]
  42491c:	and	w0, w0, #0x8
  424920:	cmp	w0, #0x0
  424924:	b.ne	424958 <read_all_makefiles@@Base+0x540>  // b.any
  424928:	ldr	x0, [x29, #40]
  42492c:	ldrb	w0, [x0]
  424930:	cmp	w0, #0x7e
  424934:	b.ne	424958 <read_all_makefiles@@Base+0x540>  // b.any
  424938:	ldr	x0, [x29, #40]
  42493c:	bl	42a3d8 <tilde_expand@@Base>
  424940:	str	x0, [x29, #152]
  424944:	ldr	x0, [x29, #152]
  424948:	cmp	x0, #0x0
  42494c:	b.eq	424958 <read_all_makefiles@@Base+0x540>  // b.none
  424950:	ldr	x0, [x29, #152]
  424954:	str	x0, [x29, #40]
  424958:	bl	406dd0 <__errno_location@plt>
  42495c:	str	wzr, [x0]
  424960:	bl	406dd0 <__errno_location@plt>
  424964:	str	wzr, [x0]
  424968:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42496c:	add	x1, x0, #0xd78
  424970:	ldr	x0, [x29, #40]
  424974:	bl	406910 <fopen@plt>
  424978:	str	x0, [x29, #80]
  42497c:	ldr	x0, [x29, #80]
  424980:	cmp	x0, #0x0
  424984:	b.ne	424998 <read_all_makefiles@@Base+0x580>  // b.any
  424988:	bl	406dd0 <__errno_location@plt>
  42498c:	ldr	w0, [x0]
  424990:	cmp	w0, #0x4
  424994:	b.eq	424960 <read_all_makefiles@@Base+0x548>  // b.none
  424998:	bl	406dd0 <__errno_location@plt>
  42499c:	ldr	w1, [x0]
  4249a0:	ldr	x0, [x29, #136]
  4249a4:	str	w1, [x0, #36]
  4249a8:	ldr	x0, [x29, #136]
  4249ac:	ldr	w0, [x0, #36]
  4249b0:	cmp	w0, #0xc
  4249b4:	b.eq	4249cc <read_all_makefiles@@Base+0x5b4>  // b.none
  4249b8:	cmp	w0, #0xc
  4249bc:	b.lt	424a08 <read_all_makefiles@@Base+0x5f0>  // b.tstop
  4249c0:	sub	w0, w0, #0x17
  4249c4:	cmp	w0, #0x1
  4249c8:	b.hi	424a08 <read_all_makefiles@@Base+0x5f0>  // b.pmore
  4249cc:	ldr	x0, [x29, #136]
  4249d0:	ldr	w0, [x0, #36]
  4249d4:	bl	406ab0 <strerror@plt>
  4249d8:	str	x0, [x29, #128]
  4249dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4249e0:	add	x0, x0, #0x40
  4249e4:	ldr	x19, [x0]
  4249e8:	ldr	x0, [x29, #128]
  4249ec:	bl	4066f0 <strlen@plt>
  4249f0:	mov	x1, x0
  4249f4:	ldr	x3, [x29, #128]
  4249f8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4249fc:	add	x2, x0, #0xd80
  424a00:	mov	x0, x19
  424a04:	bl	424098 <fatal@@Base>
  424a08:	ldr	x0, [x29, #80]
  424a0c:	cmp	x0, #0x0
  424a10:	b.ne	424acc <read_all_makefiles@@Base+0x6b4>  // b.any
  424a14:	ldrh	w0, [x29, #38]
  424a18:	and	w0, w0, #0x2
  424a1c:	cmp	w0, #0x0
  424a20:	b.eq	424acc <read_all_makefiles@@Base+0x6b4>  // b.none
  424a24:	ldr	x0, [x29, #40]
  424a28:	ldrb	w0, [x0]
  424a2c:	cmp	w0, #0x2f
  424a30:	b.eq	424acc <read_all_makefiles@@Base+0x6b4>  // b.none
  424a34:	str	wzr, [x29, #148]
  424a38:	b	424aa8 <read_all_makefiles@@Base+0x690>
  424a3c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424a40:	add	x0, x0, #0x60
  424a44:	ldr	x1, [x0]
  424a48:	ldr	w0, [x29, #148]
  424a4c:	lsl	x0, x0, #3
  424a50:	add	x0, x1, x0
  424a54:	ldr	x1, [x0]
  424a58:	ldr	x3, [x29, #40]
  424a5c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424a60:	add	x2, x0, #0xd88
  424a64:	mov	w0, #0x3                   	// #3
  424a68:	bl	422404 <concat@@Base>
  424a6c:	str	x0, [x29, #120]
  424a70:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424a74:	add	x1, x0, #0xd78
  424a78:	ldr	x0, [x29, #120]
  424a7c:	bl	406910 <fopen@plt>
  424a80:	str	x0, [x29, #80]
  424a84:	ldr	x0, [x29, #80]
  424a88:	cmp	x0, #0x0
  424a8c:	b.eq	424a9c <read_all_makefiles@@Base+0x684>  // b.none
  424a90:	ldr	x0, [x29, #120]
  424a94:	str	x0, [x29, #40]
  424a98:	b	424acc <read_all_makefiles@@Base+0x6b4>
  424a9c:	ldr	w0, [x29, #148]
  424aa0:	add	w0, w0, #0x1
  424aa4:	str	w0, [x29, #148]
  424aa8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424aac:	add	x0, x0, #0x60
  424ab0:	ldr	x1, [x0]
  424ab4:	ldr	w0, [x29, #148]
  424ab8:	lsl	x0, x0, #3
  424abc:	add	x0, x1, x0
  424ac0:	ldr	x0, [x0]
  424ac4:	cmp	x0, #0x0
  424ac8:	b.ne	424a3c <read_all_makefiles@@Base+0x624>  // b.any
  424acc:	ldr	x0, [x29, #40]
  424ad0:	bl	430d78 <strcache_add@@Base>
  424ad4:	str	x0, [x29, #40]
  424ad8:	ldr	x0, [x29, #40]
  424adc:	bl	40c5bc <lookup_file@@Base>
  424ae0:	mov	x1, x0
  424ae4:	ldr	x0, [x29, #136]
  424ae8:	str	x1, [x0, #16]
  424aec:	ldr	x0, [x29, #136]
  424af0:	ldr	x0, [x0, #16]
  424af4:	cmp	x0, #0x0
  424af8:	b.ne	424b10 <read_all_makefiles@@Base+0x6f8>  // b.any
  424afc:	ldr	x0, [x29, #40]
  424b00:	bl	40c678 <enter_file@@Base>
  424b04:	mov	x1, x0
  424b08:	ldr	x0, [x29, #136]
  424b0c:	str	x1, [x0, #16]
  424b10:	ldr	x0, [x29, #136]
  424b14:	ldr	x0, [x0, #16]
  424b18:	ldr	x0, [x0]
  424b1c:	str	x0, [x29, #40]
  424b20:	ldrh	w0, [x29, #38]
  424b24:	and	w1, w0, #0xff
  424b28:	ldr	x0, [x29, #136]
  424b2c:	strb	w1, [x0, #32]
  424b30:	ldr	x0, [x29, #152]
  424b34:	bl	406c00 <free@plt>
  424b38:	ldr	x0, [x29, #80]
  424b3c:	cmp	x0, #0x0
  424b40:	b.ne	424b70 <read_all_makefiles@@Base+0x758>  // b.any
  424b44:	bl	406dd0 <__errno_location@plt>
  424b48:	mov	x1, x0
  424b4c:	ldr	x0, [x29, #136]
  424b50:	ldr	w0, [x0, #36]
  424b54:	str	w0, [x1]
  424b58:	ldr	x0, [x29, #136]
  424b5c:	ldr	x0, [x0, #16]
  424b60:	mov	x1, #0x1                   	// #1
  424b64:	str	x1, [x0, #112]
  424b68:	ldr	x0, [x29, #136]
  424b6c:	b	424c40 <read_all_makefiles@@Base+0x828>
  424b70:	ldr	x0, [x29, #136]
  424b74:	str	wzr, [x0, #36]
  424b78:	ldr	x0, [x29, #80]
  424b7c:	bl	4068a0 <fileno@plt>
  424b80:	bl	435f9c <fd_noinherit@@Base>
  424b84:	add	x0, x29, #0x30
  424b88:	add	x6, x0, #0x28
  424b8c:	mov	w5, #0x0                   	// #0
  424b90:	mov	w4, #0x6                   	// #6
  424b94:	mov	w3, #0x2                   	// #2
  424b98:	ldr	x2, [x29, #40]
  424b9c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424ba0:	add	x1, x0, #0xcd0
  424ba4:	mov	x0, x6
  424ba8:	bl	433588 <do_variable_definition@@Base>
  424bac:	mov	x0, #0xc8                  	// #200
  424bb0:	str	x0, [x29, #72]
  424bb4:	ldr	x0, [x29, #72]
  424bb8:	bl	42268c <xmalloc@@Base>
  424bbc:	str	x0, [x29, #64]
  424bc0:	ldr	x0, [x29, #64]
  424bc4:	str	x0, [x29, #56]
  424bc8:	ldr	x0, [x29, #56]
  424bcc:	str	x0, [x29, #48]
  424bd0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424bd4:	add	x0, x0, #0x40
  424bd8:	ldr	x0, [x0]
  424bdc:	str	x0, [x29, #112]
  424be0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424be4:	add	x0, x0, #0x40
  424be8:	add	x1, x29, #0x30
  424bec:	add	x1, x1, #0x28
  424bf0:	str	x1, [x0]
  424bf4:	ldrh	w0, [x29, #38]
  424bf8:	and	w0, w0, #0x1
  424bfc:	cmp	w0, #0x0
  424c00:	cset	w0, eq  // eq = none
  424c04:	and	w0, w0, #0xff
  424c08:	mov	w1, w0
  424c0c:	add	x0, x29, #0x30
  424c10:	bl	424fa8 <eval_buffer@@Base+0x358>
  424c14:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424c18:	add	x0, x0, #0x40
  424c1c:	ldr	x1, [x29, #112]
  424c20:	str	x1, [x0]
  424c24:	ldr	x0, [x29, #80]
  424c28:	bl	4068e0 <fclose@plt>
  424c2c:	ldr	x0, [x29, #64]
  424c30:	bl	406c00 <free@plt>
  424c34:	bl	406dd0 <__errno_location@plt>
  424c38:	str	wzr, [x0]
  424c3c:	ldr	x0, [x29, #136]
  424c40:	mov	sp, x29
  424c44:	ldr	x19, [sp, #16]
  424c48:	ldp	x29, x30, [sp], #160
  424c4c:	ret

0000000000424c50 <eval_buffer@@Base>:
  424c50:	stp	x29, x30, [sp, #-144]!
  424c54:	mov	x29, sp
  424c58:	str	x0, [x29, #24]
  424c5c:	str	x1, [x29, #16]
  424c60:	ldr	x0, [x29, #24]
  424c64:	bl	4066f0 <strlen@plt>
  424c68:	str	x0, [x29, #88]
  424c6c:	ldr	x0, [x29, #24]
  424c70:	str	x0, [x29, #80]
  424c74:	ldr	x0, [x29, #80]
  424c78:	str	x0, [x29, #72]
  424c7c:	ldr	x0, [x29, #72]
  424c80:	str	x0, [x29, #64]
  424c84:	str	xzr, [x29, #96]
  424c88:	ldr	x0, [x29, #16]
  424c8c:	cmp	x0, #0x0
  424c90:	b.eq	424cb4 <eval_buffer@@Base+0x64>  // b.none
  424c94:	ldr	x0, [x29, #16]
  424c98:	add	x2, x29, #0x68
  424c9c:	mov	x3, x0
  424ca0:	ldp	x0, x1, [x3]
  424ca4:	stp	x0, x1, [x2]
  424ca8:	ldr	x0, [x3, #16]
  424cac:	str	x0, [x2, #16]
  424cb0:	b	424d00 <eval_buffer@@Base+0xb0>
  424cb4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424cb8:	add	x0, x0, #0x40
  424cbc:	ldr	x0, [x0]
  424cc0:	cmp	x0, #0x0
  424cc4:	b.eq	424cf0 <eval_buffer@@Base+0xa0>  // b.none
  424cc8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424ccc:	add	x0, x0, #0x40
  424cd0:	ldr	x0, [x0]
  424cd4:	add	x2, x29, #0x68
  424cd8:	mov	x3, x0
  424cdc:	ldp	x0, x1, [x3]
  424ce0:	stp	x0, x1, [x2]
  424ce4:	ldr	x0, [x3, #16]
  424ce8:	str	x0, [x2, #16]
  424cec:	b	424d00 <eval_buffer@@Base+0xb0>
  424cf0:	str	xzr, [x29, #104]
  424cf4:	mov	x0, #0x1                   	// #1
  424cf8:	str	x0, [x29, #112]
  424cfc:	str	xzr, [x29, #120]
  424d00:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424d04:	add	x0, x0, #0x40
  424d08:	ldr	x0, [x0]
  424d0c:	str	x0, [x29, #136]
  424d10:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424d14:	add	x0, x0, #0x40
  424d18:	add	x1, x29, #0x40
  424d1c:	add	x1, x1, #0x28
  424d20:	str	x1, [x0]
  424d24:	add	x0, x29, #0x28
  424d28:	bl	42476c <read_all_makefiles@@Base+0x354>
  424d2c:	str	x0, [x29, #128]
  424d30:	add	x0, x29, #0x40
  424d34:	mov	w1, #0x1                   	// #1
  424d38:	bl	424fa8 <eval_buffer@@Base+0x358>
  424d3c:	ldr	x0, [x29, #128]
  424d40:	bl	4247b4 <read_all_makefiles@@Base+0x39c>
  424d44:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  424d48:	add	x0, x0, #0x40
  424d4c:	ldr	x1, [x29, #136]
  424d50:	str	x1, [x0]
  424d54:	nop
  424d58:	mov	sp, x29
  424d5c:	ldp	x29, x30, [sp], #144
  424d60:	ret
  424d64:	stp	x29, x30, [sp, #-112]!
  424d68:	mov	x29, sp
  424d6c:	str	x0, [sp, #24]
  424d70:	str	x1, [sp, #16]
  424d74:	mov	x2, #0x4                   	// #4
  424d78:	mov	w1, #0x0                   	// #0
  424d7c:	ldr	x0, [sp, #16]
  424d80:	bl	4069d0 <memset@plt>
  424d84:	b	424d94 <eval_buffer@@Base+0x144>
  424d88:	ldr	x0, [sp, #24]
  424d8c:	add	x0, x0, #0x1
  424d90:	str	x0, [sp, #24]
  424d94:	ldr	x0, [sp, #24]
  424d98:	ldrb	w0, [x0]
  424d9c:	mov	w1, w0
  424da0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  424da4:	add	x0, x0, #0x728
  424da8:	sxtw	x1, w1
  424dac:	ldrh	w0, [x0, x1, lsl #1]
  424db0:	and	w0, w0, #0x6
  424db4:	cmp	w0, #0x0
  424db8:	b.ne	424d88 <eval_buffer@@Base+0x138>  // b.any
  424dbc:	ldr	x0, [sp, #24]
  424dc0:	ldrb	w0, [x0]
  424dc4:	cmp	w0, #0x0
  424dc8:	b.ne	424dd4 <eval_buffer@@Base+0x184>  // b.any
  424dcc:	ldr	x0, [sp, #24]
  424dd0:	b	424fa0 <eval_buffer@@Base+0x350>
  424dd4:	ldr	x0, [sp, #24]
  424dd8:	str	x0, [sp, #104]
  424ddc:	add	x0, sp, #0x28
  424de0:	mov	x1, x0
  424de4:	ldr	x0, [sp, #104]
  424de8:	bl	433960 <parse_variable_definition@@Base>
  424dec:	str	x0, [sp, #96]
  424df0:	ldr	x0, [sp, #96]
  424df4:	cmp	x0, #0x0
  424df8:	b.ne	424f88 <eval_buffer@@Base+0x338>  // b.any
  424dfc:	ldr	x0, [sp, #104]
  424e00:	bl	422854 <end_of_token@@Base>
  424e04:	str	x0, [sp, #96]
  424e08:	ldr	x1, [sp, #96]
  424e0c:	ldr	x0, [sp, #104]
  424e10:	sub	x0, x1, x0
  424e14:	str	x0, [sp, #88]
  424e18:	ldr	x0, [sp, #88]
  424e1c:	cmp	x0, #0x6
  424e20:	b.ne	424e54 <eval_buffer@@Base+0x204>  // b.any
  424e24:	mov	x2, #0x6                   	// #6
  424e28:	ldr	x1, [sp, #104]
  424e2c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424e30:	add	x0, x0, #0xd90
  424e34:	bl	406990 <strncmp@plt>
  424e38:	cmp	w0, #0x0
  424e3c:	b.ne	424e54 <eval_buffer@@Base+0x204>  // b.any
  424e40:	ldr	x0, [sp, #16]
  424e44:	ldrb	w1, [x0]
  424e48:	orr	w1, w1, #0x8
  424e4c:	strb	w1, [x0]
  424e50:	b	424f64 <eval_buffer@@Base+0x314>
  424e54:	ldr	x0, [sp, #88]
  424e58:	cmp	x0, #0x8
  424e5c:	b.ne	424e90 <eval_buffer@@Base+0x240>  // b.any
  424e60:	mov	x2, #0x8                   	// #8
  424e64:	ldr	x1, [sp, #104]
  424e68:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424e6c:	add	x0, x0, #0xd98
  424e70:	bl	406990 <strncmp@plt>
  424e74:	cmp	w0, #0x0
  424e78:	b.ne	424e90 <eval_buffer@@Base+0x240>  // b.any
  424e7c:	ldr	x0, [sp, #16]
  424e80:	ldrb	w1, [x0]
  424e84:	orr	w1, w1, #0x10
  424e88:	strb	w1, [x0]
  424e8c:	b	424f64 <eval_buffer@@Base+0x314>
  424e90:	ldr	x0, [sp, #88]
  424e94:	cmp	x0, #0x7
  424e98:	b.ne	424ecc <eval_buffer@@Base+0x27c>  // b.any
  424e9c:	mov	x2, #0x7                   	// #7
  424ea0:	ldr	x1, [sp, #104]
  424ea4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424ea8:	add	x0, x0, #0xda8
  424eac:	bl	406990 <strncmp@plt>
  424eb0:	cmp	w0, #0x0
  424eb4:	b.ne	424ecc <eval_buffer@@Base+0x27c>  // b.any
  424eb8:	ldr	x0, [sp, #16]
  424ebc:	ldrb	w1, [x0]
  424ec0:	orr	w1, w1, #0x20
  424ec4:	strb	w1, [x0]
  424ec8:	b	424f64 <eval_buffer@@Base+0x314>
  424ecc:	ldr	x0, [sp, #88]
  424ed0:	cmp	x0, #0x6
  424ed4:	b.ne	424f14 <eval_buffer@@Base+0x2c4>  // b.any
  424ed8:	mov	x2, #0x6                   	// #6
  424edc:	ldr	x1, [sp, #104]
  424ee0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424ee4:	add	x0, x0, #0xdb0
  424ee8:	bl	406990 <strncmp@plt>
  424eec:	cmp	w0, #0x0
  424ef0:	b.ne	424f14 <eval_buffer@@Base+0x2c4>  // b.any
  424ef4:	ldr	x0, [sp, #16]
  424ef8:	ldrb	w1, [x0]
  424efc:	orr	w1, w1, #0x2
  424f00:	strb	w1, [x0]
  424f04:	ldr	x0, [sp, #96]
  424f08:	bl	4228a0 <next_token@@Base>
  424f0c:	str	x0, [sp, #104]
  424f10:	b	424f8c <eval_buffer@@Base+0x33c>
  424f14:	ldr	x0, [sp, #88]
  424f18:	cmp	x0, #0x8
  424f1c:	b.ne	424f5c <eval_buffer@@Base+0x30c>  // b.any
  424f20:	mov	x2, #0x8                   	// #8
  424f24:	ldr	x1, [sp, #104]
  424f28:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  424f2c:	add	x0, x0, #0xdb8
  424f30:	bl	406990 <strncmp@plt>
  424f34:	cmp	w0, #0x0
  424f38:	b.ne	424f5c <eval_buffer@@Base+0x30c>  // b.any
  424f3c:	ldr	x0, [sp, #16]
  424f40:	ldrb	w1, [x0]
  424f44:	orr	w1, w1, #0x4
  424f48:	strb	w1, [x0]
  424f4c:	ldr	x0, [sp, #96]
  424f50:	bl	4228a0 <next_token@@Base>
  424f54:	str	x0, [sp, #104]
  424f58:	b	424f8c <eval_buffer@@Base+0x33c>
  424f5c:	ldr	x0, [sp, #24]
  424f60:	b	424fa0 <eval_buffer@@Base+0x350>
  424f64:	ldr	x0, [sp, #96]
  424f68:	bl	4228a0 <next_token@@Base>
  424f6c:	str	x0, [sp, #104]
  424f70:	ldr	x0, [sp, #104]
  424f74:	ldrb	w0, [x0]
  424f78:	cmp	w0, #0x0
  424f7c:	b.ne	424ddc <eval_buffer@@Base+0x18c>  // b.any
  424f80:	ldr	x0, [sp, #24]
  424f84:	b	424fa0 <eval_buffer@@Base+0x350>
  424f88:	nop
  424f8c:	ldr	x0, [sp, #16]
  424f90:	ldrb	w1, [x0]
  424f94:	orr	w1, w1, #0x1
  424f98:	strb	w1, [x0]
  424f9c:	ldr	x0, [sp, #104]
  424fa0:	ldp	x29, x30, [sp], #112
  424fa4:	ret
  424fa8:	sub	sp, sp, #0x2b0
  424fac:	stp	x29, x30, [sp, #32]
  424fb0:	add	x29, sp, #0x20
  424fb4:	stp	x19, x20, [sp, #48]
  424fb8:	str	x0, [sp, #72]
  424fbc:	str	w1, [sp, #68]
  424fc0:	str	xzr, [sp, #680]
  424fc4:	str	xzr, [sp, #672]
  424fc8:	mov	x0, #0xc8                  	// #200
  424fcc:	str	x0, [sp, #664]
  424fd0:	str	xzr, [sp, #648]
  424fd4:	str	wzr, [sp, #636]
  424fd8:	str	wzr, [sp, #632]
  424fdc:	str	wzr, [sp, #628]
  424fe0:	str	wzr, [sp, #624]
  424fe4:	str	xzr, [sp, #616]
  424fe8:	str	xzr, [sp, #608]
  424fec:	str	xzr, [sp, #600]
  424ff0:	str	wzr, [sp, #596]
  424ff4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  424ff8:	add	x0, x0, #0x1f8
  424ffc:	ldrb	w0, [x0]
  425000:	strb	w0, [sp, #595]
  425004:	str	xzr, [sp, #584]
  425008:	str	xzr, [sp, #576]
  42500c:	mov	w0, #0x1                   	// #1
  425010:	str	w0, [sp, #640]
  425014:	ldr	w0, [sp, #640]
  425018:	str	w0, [sp, #644]
  42501c:	ldr	x0, [sp, #72]
  425020:	add	x0, x0, #0x28
  425024:	str	x0, [sp, #432]
  425028:	ldr	x0, [sp, #72]
  42502c:	ldr	x0, [x0, #40]
  425030:	str	x0, [sp, #192]
  425034:	mov	x0, #0xc8                  	// #200
  425038:	bl	42268c <xmalloc@@Base>
  42503c:	str	x0, [sp, #656]
  425040:	ldr	x0, [sp, #72]
  425044:	ldr	x1, [x0, #48]
  425048:	ldr	x0, [sp, #600]
  42504c:	add	x1, x1, x0
  425050:	ldr	x0, [sp, #72]
  425054:	str	x1, [x0, #48]
  425058:	ldr	x0, [sp, #72]
  42505c:	bl	4298a0 <find_percent_cached@@Base+0x3b0>
  425060:	str	x0, [sp, #600]
  425064:	ldr	x0, [sp, #600]
  425068:	cmp	x0, #0x0
  42506c:	b.ge	42508c <eval_buffer@@Base+0x43c>  // b.tcont
  425070:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  425074:	add	x0, x0, #0x328
  425078:	ldr	x0, [x0]
  42507c:	ldr	w0, [x0]
  425080:	cmp	w0, #0x0
  425084:	b.ne	426ac8 <eval_buffer@@Base+0x1e78>  // b.any
  425088:	b	426ae4 <eval_buffer@@Base+0x1e94>
  42508c:	ldr	x0, [sp, #72]
  425090:	ldr	x0, [x0]
  425094:	str	x0, [sp, #568]
  425098:	ldr	x0, [sp, #72]
  42509c:	ldr	x0, [x0, #48]
  4250a0:	cmp	x0, #0x1
  4250a4:	b.ne	425154 <eval_buffer@@Base+0x504>  // b.any
  4250a8:	ldr	x0, [sp, #568]
  4250ac:	str	x0, [sp, #424]
  4250b0:	ldr	x0, [sp, #424]
  4250b4:	ldrb	w0, [x0]
  4250b8:	cmp	w0, #0xef
  4250bc:	b.ne	425154 <eval_buffer@@Base+0x504>  // b.any
  4250c0:	ldr	x0, [sp, #424]
  4250c4:	add	x0, x0, #0x1
  4250c8:	ldrb	w0, [x0]
  4250cc:	cmp	w0, #0xbb
  4250d0:	b.ne	425154 <eval_buffer@@Base+0x504>  // b.any
  4250d4:	ldr	x0, [sp, #424]
  4250d8:	add	x0, x0, #0x2
  4250dc:	ldrb	w0, [x0]
  4250e0:	cmp	w0, #0xbf
  4250e4:	b.ne	425154 <eval_buffer@@Base+0x504>  // b.any
  4250e8:	ldr	x0, [sp, #568]
  4250ec:	add	x0, x0, #0x3
  4250f0:	str	x0, [sp, #568]
  4250f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4250f8:	add	x0, x0, #0x6dc
  4250fc:	ldr	w0, [x0]
  425100:	and	w0, w0, #0x1
  425104:	cmp	w0, #0x0
  425108:	b.eq	425154 <eval_buffer@@Base+0x504>  // b.none
  42510c:	ldr	x0, [sp, #72]
  425110:	ldr	x0, [x0, #40]
  425114:	cmp	x0, #0x0
  425118:	b.eq	425144 <eval_buffer@@Base+0x4f4>  // b.none
  42511c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425120:	add	x0, x0, #0xdc8
  425124:	bl	406e40 <gettext@plt>
  425128:	mov	x2, x0
  42512c:	ldr	x0, [sp, #72]
  425130:	ldr	x0, [x0, #40]
  425134:	mov	x1, x0
  425138:	mov	x0, x2
  42513c:	bl	406dc0 <printf@plt>
  425140:	b	425154 <eval_buffer@@Base+0x504>
  425144:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425148:	add	x0, x0, #0xdf0
  42514c:	bl	406e40 <gettext@plt>
  425150:	bl	406dc0 <printf@plt>
  425154:	ldr	x0, [sp, #568]
  425158:	ldrb	w0, [x0]
  42515c:	cmp	w0, #0x0
  425160:	b.eq	426a70 <eval_buffer@@Base+0x1e20>  // b.none
  425164:	ldr	x0, [sp, #568]
  425168:	bl	4066f0 <strlen@plt>
  42516c:	str	x0, [sp, #416]
  425170:	ldr	x0, [sp, #568]
  425174:	ldrb	w1, [x0]
  425178:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42517c:	add	x0, x0, #0x1f8
  425180:	ldrb	w0, [x0]
  425184:	cmp	w1, w0
  425188:	b.ne	425260 <eval_buffer@@Base+0x610>  // b.any
  42518c:	ldr	w0, [sp, #628]
  425190:	cmp	w0, #0x0
  425194:	b.ne	426a78 <eval_buffer@@Base+0x1e28>  // b.any
  425198:	ldr	x0, [sp, #616]
  42519c:	cmp	x0, #0x0
  4251a0:	b.eq	425260 <eval_buffer@@Base+0x610>  // b.none
  4251a4:	ldr	w0, [sp, #636]
  4251a8:	cmp	w0, #0x0
  4251ac:	b.ne	426a80 <eval_buffer@@Base+0x1e30>  // b.any
  4251b0:	ldr	x0, [sp, #648]
  4251b4:	cmp	x0, #0x0
  4251b8:	b.ne	4251c8 <eval_buffer@@Base+0x578>  // b.any
  4251bc:	ldr	x0, [sp, #72]
  4251c0:	ldr	x0, [x0, #48]
  4251c4:	str	w0, [sp, #644]
  4251c8:	ldr	x1, [sp, #416]
  4251cc:	ldr	x0, [sp, #648]
  4251d0:	add	x0, x1, x0
  4251d4:	ldr	x1, [sp, #664]
  4251d8:	cmp	x1, x0
  4251dc:	b.cs	425204 <eval_buffer@@Base+0x5b4>  // b.hs, b.nlast
  4251e0:	ldr	x1, [sp, #416]
  4251e4:	ldr	x0, [sp, #648]
  4251e8:	add	x0, x1, x0
  4251ec:	lsl	x0, x0, #1
  4251f0:	str	x0, [sp, #664]
  4251f4:	ldr	x1, [sp, #664]
  4251f8:	ldr	x0, [sp, #656]
  4251fc:	bl	422720 <xrealloc@@Base>
  425200:	str	x0, [sp, #656]
  425204:	ldr	x1, [sp, #656]
  425208:	ldr	x0, [sp, #648]
  42520c:	add	x3, x1, x0
  425210:	ldr	x0, [sp, #568]
  425214:	add	x1, x0, #0x1
  425218:	ldr	x0, [sp, #416]
  42521c:	sub	x0, x0, #0x1
  425220:	mov	x2, x0
  425224:	mov	x0, x3
  425228:	bl	4066b0 <memcpy@plt>
  42522c:	ldr	x1, [sp, #416]
  425230:	ldr	x0, [sp, #648]
  425234:	add	x0, x1, x0
  425238:	sub	x0, x0, #0x1
  42523c:	str	x0, [sp, #648]
  425240:	ldr	x0, [sp, #648]
  425244:	add	x1, x0, #0x1
  425248:	str	x1, [sp, #648]
  42524c:	ldr	x1, [sp, #656]
  425250:	add	x0, x1, x0
  425254:	mov	w1, #0xa                   	// #10
  425258:	strb	w1, [x0]
  42525c:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425260:	ldr	x0, [sp, #416]
  425264:	add	x0, x0, #0x1
  425268:	ldr	x1, [sp, #672]
  42526c:	cmp	x1, x0
  425270:	b.cs	425294 <eval_buffer@@Base+0x644>  // b.hs, b.nlast
  425274:	ldr	x0, [sp, #416]
  425278:	add	x0, x0, #0x1
  42527c:	str	x0, [sp, #672]
  425280:	ldr	x0, [sp, #680]
  425284:	bl	406c00 <free@plt>
  425288:	ldr	x0, [sp, #672]
  42528c:	bl	42268c <xmalloc@@Base>
  425290:	str	x0, [sp, #680]
  425294:	ldr	x1, [sp, #568]
  425298:	ldr	x0, [sp, #680]
  42529c:	bl	406ca0 <strcpy@plt>
  4252a0:	ldr	x0, [sp, #680]
  4252a4:	bl	422180 <collapse_continuations@@Base>
  4252a8:	ldr	x0, [sp, #680]
  4252ac:	bl	426b70 <eval_buffer@@Base+0x1f20>
  4252b0:	ldr	x0, [sp, #680]
  4252b4:	str	x0, [sp, #560]
  4252b8:	b	4252c8 <eval_buffer@@Base+0x678>
  4252bc:	ldr	x0, [sp, #560]
  4252c0:	add	x0, x0, #0x1
  4252c4:	str	x0, [sp, #560]
  4252c8:	ldr	x0, [sp, #560]
  4252cc:	ldrb	w0, [x0]
  4252d0:	mov	w1, w0
  4252d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4252d8:	add	x0, x0, #0x728
  4252dc:	sxtw	x1, w1
  4252e0:	ldrh	w0, [x0, x1, lsl #1]
  4252e4:	and	w0, w0, #0x6
  4252e8:	cmp	w0, #0x0
  4252ec:	b.ne	4252bc <eval_buffer@@Base+0x66c>  // b.any
  4252f0:	add	x0, sp, #0xa8
  4252f4:	mov	x1, x0
  4252f8:	ldr	x0, [sp, #560]
  4252fc:	bl	424d64 <eval_buffer@@Base+0x114>
  425300:	str	x0, [sp, #560]
  425304:	ldrb	w0, [sp, #168]
  425308:	and	w0, w0, #0x1
  42530c:	and	w0, w0, #0xff
  425310:	cmp	w0, #0x0
  425314:	b.eq	425488 <eval_buffer@@Base+0x838>  // b.none
  425318:	ldrb	w0, [sp, #168]
  42531c:	and	w0, w0, #0x10
  425320:	and	w0, w0, #0xff
  425324:	cmp	w0, #0x0
  425328:	b.eq	425334 <eval_buffer@@Base+0x6e4>  // b.none
  42532c:	mov	w0, #0x5                   	// #5
  425330:	b	425338 <eval_buffer@@Base+0x6e8>
  425334:	mov	w0, #0x2                   	// #2
  425338:	str	w0, [sp, #220]
  42533c:	ldr	w0, [sp, #636]
  425340:	cmp	w0, #0x0
  425344:	b.eq	425368 <eval_buffer@@Base+0x718>  // b.none
  425348:	ldrb	w0, [sp, #168]
  42534c:	and	w0, w0, #0x2
  425350:	and	w0, w0, #0xff
  425354:	cmp	w0, #0x0
  425358:	b.eq	426a88 <eval_buffer@@Base+0x1e38>  // b.none
  42535c:	mov	w0, #0x1                   	// #1
  425360:	str	w0, [sp, #632]
  425364:	b	426a88 <eval_buffer@@Base+0x1e38>
  425368:	ldr	x0, [sp, #616]
  42536c:	cmp	x0, #0x0
  425370:	b.eq	4253c0 <eval_buffer@@Base+0x770>  // b.none
  425374:	ldr	w0, [sp, #640]
  425378:	str	x0, [sp, #200]
  42537c:	str	xzr, [sp, #208]
  425380:	add	x0, sp, #0xc0
  425384:	str	x0, [sp, #16]
  425388:	ldrb	w0, [sp, #595]
  42538c:	strb	w0, [sp, #8]
  425390:	ldr	w0, [sp, #596]
  425394:	str	w0, [sp]
  425398:	ldr	x7, [sp, #648]
  42539c:	ldr	x6, [sp, #656]
  4253a0:	ldr	w5, [sp, #644]
  4253a4:	ldr	x4, [sp, #608]
  4253a8:	ldr	x3, [sp, #576]
  4253ac:	ldr	x2, [sp, #584]
  4253b0:	ldr	w1, [sp, #624]
  4253b4:	ldr	x0, [sp, #616]
  4253b8:	bl	428240 <eval_buffer@@Base+0x35f0>
  4253bc:	str	xzr, [sp, #616]
  4253c0:	str	xzr, [sp, #648]
  4253c4:	str	wzr, [sp, #628]
  4253c8:	str	xzr, [sp, #584]
  4253cc:	str	wzr, [sp, #624]
  4253d0:	ldrb	w0, [sp, #168]
  4253d4:	and	w0, w0, #0x4
  4253d8:	and	w0, w0, #0xff
  4253dc:	cmp	w0, #0x0
  4253e0:	b.eq	4253f8 <eval_buffer@@Base+0x7a8>  // b.none
  4253e4:	ldr	x2, [sp, #72]
  4253e8:	ldr	w1, [sp, #220]
  4253ec:	ldr	x0, [sp, #560]
  4253f0:	bl	426bac <eval_buffer@@Base+0x1f5c>
  4253f4:	b	426ac4 <eval_buffer@@Base+0x1e74>
  4253f8:	ldrb	w0, [sp, #168]
  4253fc:	and	w0, w0, #0x2
  425400:	and	w0, w0, #0xff
  425404:	cmp	w0, #0x0
  425408:	b.eq	425424 <eval_buffer@@Base+0x7d4>  // b.none
  42540c:	ldr	x2, [sp, #72]
  425410:	ldr	w1, [sp, #220]
  425414:	ldr	x0, [sp, #560]
  425418:	bl	426cbc <eval_buffer@@Base+0x206c>
  42541c:	str	x0, [sp, #552]
  425420:	b	42543c <eval_buffer@@Base+0x7ec>
  425424:	mov	w3, #0x0                   	// #0
  425428:	ldr	w2, [sp, #220]
  42542c:	ldr	x1, [sp, #560]
  425430:	ldr	x0, [sp, #432]
  425434:	bl	433eb0 <try_variable_definition@@Base>
  425438:	str	x0, [sp, #552]
  42543c:	ldrb	w0, [sp, #168]
  425440:	and	w0, w0, #0x8
  425444:	and	w0, w0, #0xff
  425448:	cmp	w0, #0x0
  42544c:	b.eq	425460 <eval_buffer@@Base+0x810>  // b.none
  425450:	ldr	x0, [sp, #552]
  425454:	ldrb	w1, [x0, #47]
  425458:	and	w1, w1, #0xffffff9f
  42545c:	strb	w1, [x0, #47]
  425460:	ldrb	w0, [sp, #168]
  425464:	and	w0, w0, #0x20
  425468:	and	w0, w0, #0xff
  42546c:	cmp	w0, #0x0
  425470:	b.eq	426a90 <eval_buffer@@Base+0x1e40>  // b.none
  425474:	ldr	x0, [sp, #552]
  425478:	ldrb	w1, [x0, #44]
  42547c:	orr	w1, w1, #0xffffff80
  425480:	strb	w1, [x0, #44]
  425484:	b	426a90 <eval_buffer@@Base+0x1e40>
  425488:	ldr	x0, [sp, #560]
  42548c:	ldrb	w0, [x0]
  425490:	cmp	w0, #0x0
  425494:	b.eq	426a98 <eval_buffer@@Base+0x1e48>  // b.none
  425498:	ldr	x0, [sp, #560]
  42549c:	bl	422854 <end_of_token@@Base>
  4254a0:	str	x0, [sp, #176]
  4254a4:	ldr	x1, [sp, #176]
  4254a8:	ldr	x0, [sp, #560]
  4254ac:	sub	x0, x1, x0
  4254b0:	str	x0, [sp, #184]
  4254b4:	b	4254c4 <eval_buffer@@Base+0x874>
  4254b8:	ldr	x0, [sp, #176]
  4254bc:	add	x0, x0, #0x1
  4254c0:	str	x0, [sp, #176]
  4254c4:	ldr	x0, [sp, #176]
  4254c8:	ldrb	w0, [x0]
  4254cc:	mov	w1, w0
  4254d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4254d4:	add	x0, x0, #0x728
  4254d8:	sxtw	x1, w1
  4254dc:	ldrh	w0, [x0, x1, lsl #1]
  4254e0:	and	w0, w0, #0x6
  4254e4:	cmp	w0, #0x0
  4254e8:	b.ne	4254b8 <eval_buffer@@Base+0x868>  // b.any
  4254ec:	ldr	w0, [sp, #632]
  4254f0:	cmp	w0, #0x0
  4254f4:	b.eq	425558 <eval_buffer@@Base+0x908>  // b.none
  4254f8:	ldr	x0, [sp, #184]
  4254fc:	cmp	x0, #0x5
  425500:	b.ne	426aa0 <eval_buffer@@Base+0x1e50>  // b.any
  425504:	mov	x2, #0x5                   	// #5
  425508:	ldr	x1, [sp, #560]
  42550c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425510:	add	x0, x0, #0xe18
  425514:	bl	406990 <strncmp@plt>
  425518:	cmp	w0, #0x0
  42551c:	b.ne	426aa0 <eval_buffer@@Base+0x1e50>  // b.any
  425520:	ldr	x0, [sp, #176]
  425524:	ldrb	w0, [x0]
  425528:	mov	w1, w0
  42552c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  425530:	add	x0, x0, #0x728
  425534:	sxtw	x1, w1
  425538:	ldrh	w0, [x0, x1, lsl #1]
  42553c:	mov	w1, w0
  425540:	mov	w0, #0x9                   	// #9
  425544:	and	w0, w1, w0
  425548:	cmp	w0, #0x0
  42554c:	b.eq	426aa0 <eval_buffer@@Base+0x1e50>  // b.none
  425550:	str	wzr, [sp, #632]
  425554:	b	426aa0 <eval_buffer@@Base+0x1e50>
  425558:	ldr	x0, [sp, #184]
  42555c:	ldr	x2, [sp, #432]
  425560:	mov	x1, x0
  425564:	ldr	x0, [sp, #560]
  425568:	bl	42712c <eval_buffer@@Base+0x24dc>
  42556c:	str	w0, [sp, #412]
  425570:	ldr	w0, [sp, #412]
  425574:	cmn	w0, #0x2
  425578:	b.eq	4255b0 <eval_buffer@@Base+0x960>  // b.none
  42557c:	ldr	w0, [sp, #412]
  425580:	cmn	w0, #0x1
  425584:	b.ne	4255a4 <eval_buffer@@Base+0x954>  // b.any
  425588:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42558c:	add	x0, x0, #0xe20
  425590:	bl	406e40 <gettext@plt>
  425594:	mov	x2, x0
  425598:	mov	x1, #0x0                   	// #0
  42559c:	ldr	x0, [sp, #432]
  4255a0:	bl	424098 <fatal@@Base>
  4255a4:	ldr	w0, [sp, #412]
  4255a8:	str	w0, [sp, #636]
  4255ac:	b	426ac4 <eval_buffer@@Base+0x1e74>
  4255b0:	ldr	w0, [sp, #636]
  4255b4:	cmp	w0, #0x0
  4255b8:	b.ne	426aa8 <eval_buffer@@Base+0x1e58>  // b.any
  4255bc:	ldr	x0, [sp, #184]
  4255c0:	cmp	x0, #0x6
  4255c4:	b.ne	4255e4 <eval_buffer@@Base+0x994>  // b.any
  4255c8:	mov	x2, #0x6                   	// #6
  4255cc:	ldr	x1, [sp, #560]
  4255d0:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4255d4:	add	x0, x0, #0xd90
  4255d8:	bl	406990 <strncmp@plt>
  4255dc:	cmp	w0, #0x0
  4255e0:	b.eq	42560c <eval_buffer@@Base+0x9bc>  // b.none
  4255e4:	ldr	x0, [sp, #184]
  4255e8:	cmp	x0, #0x8
  4255ec:	b.ne	425774 <eval_buffer@@Base+0xb24>  // b.any
  4255f0:	mov	x2, #0x8                   	// #8
  4255f4:	ldr	x1, [sp, #560]
  4255f8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4255fc:	add	x0, x0, #0xe40
  425600:	bl	406990 <strncmp@plt>
  425604:	cmp	w0, #0x0
  425608:	b.ne	425774 <eval_buffer@@Base+0xb24>  // b.any
  42560c:	ldr	x0, [sp, #560]
  425610:	ldrb	w0, [x0]
  425614:	cmp	w0, #0x75
  425618:	cset	w0, ne  // ne = any
  42561c:	and	w0, w0, #0xff
  425620:	str	w0, [sp, #236]
  425624:	ldr	x0, [sp, #616]
  425628:	cmp	x0, #0x0
  42562c:	b.eq	42567c <eval_buffer@@Base+0xa2c>  // b.none
  425630:	ldr	w0, [sp, #640]
  425634:	str	x0, [sp, #200]
  425638:	str	xzr, [sp, #208]
  42563c:	add	x0, sp, #0xc0
  425640:	str	x0, [sp, #16]
  425644:	ldrb	w0, [sp, #595]
  425648:	strb	w0, [sp, #8]
  42564c:	ldr	w0, [sp, #596]
  425650:	str	w0, [sp]
  425654:	ldr	x7, [sp, #648]
  425658:	ldr	x6, [sp, #656]
  42565c:	ldr	w5, [sp, #644]
  425660:	ldr	x4, [sp, #608]
  425664:	ldr	x3, [sp, #576]
  425668:	ldr	x2, [sp, #584]
  42566c:	ldr	w1, [sp, #624]
  425670:	ldr	x0, [sp, #616]
  425674:	bl	428240 <eval_buffer@@Base+0x35f0>
  425678:	str	xzr, [sp, #616]
  42567c:	str	xzr, [sp, #648]
  425680:	str	wzr, [sp, #628]
  425684:	str	xzr, [sp, #584]
  425688:	str	wzr, [sp, #624]
  42568c:	ldr	x0, [sp, #176]
  425690:	ldrb	w0, [x0]
  425694:	cmp	w0, #0x0
  425698:	b.ne	4256b0 <eval_buffer@@Base+0xa60>  // b.any
  42569c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4256a0:	add	x0, x0, #0xb54
  4256a4:	ldr	w1, [sp, #236]
  4256a8:	str	w1, [x0]
  4256ac:	b	426ac4 <eval_buffer@@Base+0x1e74>
  4256b0:	ldr	x0, [sp, #176]
  4256b4:	mov	x1, #0x0                   	// #0
  4256b8:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  4256bc:	str	x0, [sp, #224]
  4256c0:	ldr	x0, [sp, #224]
  4256c4:	str	x0, [sp, #152]
  4256c8:	add	x1, sp, #0xa0
  4256cc:	add	x0, sp, #0x98
  4256d0:	bl	4228ec <find_next_token@@Base>
  4256d4:	str	x0, [sp, #560]
  4256d8:	b	42575c <eval_buffer@@Base+0xb0c>
  4256dc:	ldr	x0, [sp, #160]
  4256e0:	mov	x1, x0
  4256e4:	ldr	x0, [sp, #560]
  4256e8:	bl	431f68 <lookup_variable@@Base>
  4256ec:	str	x0, [sp, #544]
  4256f0:	ldr	x0, [sp, #544]
  4256f4:	cmp	x0, #0x0
  4256f8:	b.ne	425724 <eval_buffer@@Base+0xad4>  // b.any
  4256fc:	ldr	x1, [sp, #160]
  425700:	ldr	x6, [sp, #432]
  425704:	mov	x5, #0x0                   	// #0
  425708:	mov	w4, #0x0                   	// #0
  42570c:	mov	w3, #0x2                   	// #2
  425710:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425714:	add	x2, x0, #0xcc8
  425718:	ldr	x0, [sp, #560]
  42571c:	bl	4316d8 <define_variable_in_set@@Base>
  425720:	str	x0, [sp, #544]
  425724:	ldr	w0, [sp, #236]
  425728:	cmp	w0, #0x0
  42572c:	cset	w0, eq  // eq = none
  425730:	and	w0, w0, #0xff
  425734:	and	w0, w0, #0x3
  425738:	and	w2, w0, #0xff
  42573c:	ldr	x1, [sp, #544]
  425740:	ldrb	w0, [x1, #47]
  425744:	bfi	w0, w2, #5, #2
  425748:	strb	w0, [x1, #47]
  42574c:	add	x1, sp, #0xa0
  425750:	add	x0, sp, #0x98
  425754:	bl	4228ec <find_next_token@@Base>
  425758:	str	x0, [sp, #560]
  42575c:	ldr	x0, [sp, #560]
  425760:	cmp	x0, #0x0
  425764:	b.ne	4256dc <eval_buffer@@Base+0xa8c>  // b.any
  425768:	ldr	x0, [sp, #224]
  42576c:	bl	406c00 <free@plt>
  425770:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425774:	ldr	x0, [sp, #184]
  425778:	cmp	x0, #0x5
  42577c:	b.ne	425870 <eval_buffer@@Base+0xc20>  // b.any
  425780:	mov	x2, #0x5                   	// #5
  425784:	ldr	x1, [sp, #560]
  425788:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42578c:	add	x0, x0, #0xe50
  425790:	bl	406990 <strncmp@plt>
  425794:	cmp	w0, #0x0
  425798:	b.ne	425870 <eval_buffer@@Base+0xc20>  // b.any
  42579c:	ldr	x0, [sp, #616]
  4257a0:	cmp	x0, #0x0
  4257a4:	b.eq	4257f4 <eval_buffer@@Base+0xba4>  // b.none
  4257a8:	ldr	w0, [sp, #640]
  4257ac:	str	x0, [sp, #200]
  4257b0:	str	xzr, [sp, #208]
  4257b4:	add	x0, sp, #0xc0
  4257b8:	str	x0, [sp, #16]
  4257bc:	ldrb	w0, [sp, #595]
  4257c0:	strb	w0, [sp, #8]
  4257c4:	ldr	w0, [sp, #596]
  4257c8:	str	w0, [sp]
  4257cc:	ldr	x7, [sp, #648]
  4257d0:	ldr	x6, [sp, #656]
  4257d4:	ldr	w5, [sp, #644]
  4257d8:	ldr	x4, [sp, #608]
  4257dc:	ldr	x3, [sp, #576]
  4257e0:	ldr	x2, [sp, #584]
  4257e4:	ldr	w1, [sp, #624]
  4257e8:	ldr	x0, [sp, #616]
  4257ec:	bl	428240 <eval_buffer@@Base+0x35f0>
  4257f0:	str	xzr, [sp, #616]
  4257f4:	str	xzr, [sp, #648]
  4257f8:	str	wzr, [sp, #628]
  4257fc:	str	xzr, [sp, #584]
  425800:	str	wzr, [sp, #624]
  425804:	ldr	x0, [sp, #176]
  425808:	bl	40bf38 <variable_expand@@Base>
  42580c:	str	x0, [sp, #144]
  425810:	add	x1, sp, #0x88
  425814:	add	x0, sp, #0x90
  425818:	bl	4228ec <find_next_token@@Base>
  42581c:	str	x0, [sp, #560]
  425820:	ldr	x0, [sp, #560]
  425824:	cmp	x0, #0x0
  425828:	b.eq	425854 <eval_buffer@@Base+0xc04>  // b.none
  42582c:	ldr	x0, [sp, #136]
  425830:	mov	x1, x0
  425834:	ldr	x0, [sp, #560]
  425838:	bl	4227bc <xstrndup@@Base>
  42583c:	str	x0, [sp, #536]
  425840:	add	x1, sp, #0x88
  425844:	add	x0, sp, #0x90
  425848:	bl	4228ec <find_next_token@@Base>
  42584c:	str	x0, [sp, #560]
  425850:	b	425858 <eval_buffer@@Base+0xc08>
  425854:	str	xzr, [sp, #536]
  425858:	ldr	x1, [sp, #560]
  42585c:	ldr	x0, [sp, #536]
  425860:	bl	43483c <construct_vpath_list@@Base>
  425864:	ldr	x0, [sp, #536]
  425868:	bl	406c00 <free@plt>
  42586c:	b	425040 <eval_buffer@@Base+0x3f0>
  425870:	ldr	x0, [sp, #184]
  425874:	cmp	x0, #0x7
  425878:	b.ne	425898 <eval_buffer@@Base+0xc48>  // b.any
  42587c:	mov	x2, #0x7                   	// #7
  425880:	ldr	x1, [sp, #560]
  425884:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425888:	add	x0, x0, #0xe58
  42588c:	bl	406990 <strncmp@plt>
  425890:	cmp	w0, #0x0
  425894:	b.eq	4258e8 <eval_buffer@@Base+0xc98>  // b.none
  425898:	ldr	x0, [sp, #184]
  42589c:	cmp	x0, #0x8
  4258a0:	b.ne	4258c0 <eval_buffer@@Base+0xc70>  // b.any
  4258a4:	mov	x2, #0x8                   	// #8
  4258a8:	ldr	x1, [sp, #560]
  4258ac:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4258b0:	add	x0, x0, #0xe60
  4258b4:	bl	406990 <strncmp@plt>
  4258b8:	cmp	w0, #0x0
  4258bc:	b.eq	4258e8 <eval_buffer@@Base+0xc98>  // b.none
  4258c0:	ldr	x0, [sp, #184]
  4258c4:	cmp	x0, #0x8
  4258c8:	b.ne	425aec <eval_buffer@@Base+0xe9c>  // b.any
  4258cc:	mov	x2, #0x8                   	// #8
  4258d0:	ldr	x1, [sp, #560]
  4258d4:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4258d8:	add	x0, x0, #0xe70
  4258dc:	bl	406990 <strncmp@plt>
  4258e0:	cmp	w0, #0x0
  4258e4:	b.ne	425aec <eval_buffer@@Base+0xe9c>  // b.any
  4258e8:	ldr	x0, [sp, #560]
  4258ec:	ldrb	w0, [x0]
  4258f0:	cmp	w0, #0x69
  4258f4:	cset	w0, ne  // ne = any
  4258f8:	and	w0, w0, #0xff
  4258fc:	str	w0, [sp, #276]
  425900:	ldr	x0, [sp, #616]
  425904:	cmp	x0, #0x0
  425908:	b.eq	425958 <eval_buffer@@Base+0xd08>  // b.none
  42590c:	ldr	w0, [sp, #640]
  425910:	str	x0, [sp, #200]
  425914:	str	xzr, [sp, #208]
  425918:	add	x0, sp, #0xc0
  42591c:	str	x0, [sp, #16]
  425920:	ldrb	w0, [sp, #595]
  425924:	strb	w0, [sp, #8]
  425928:	ldr	w0, [sp, #596]
  42592c:	str	w0, [sp]
  425930:	ldr	x7, [sp, #648]
  425934:	ldr	x6, [sp, #656]
  425938:	ldr	w5, [sp, #644]
  42593c:	ldr	x4, [sp, #608]
  425940:	ldr	x3, [sp, #576]
  425944:	ldr	x2, [sp, #584]
  425948:	ldr	w1, [sp, #624]
  42594c:	ldr	x0, [sp, #616]
  425950:	bl	428240 <eval_buffer@@Base+0x35f0>
  425954:	str	xzr, [sp, #616]
  425958:	str	xzr, [sp, #648]
  42595c:	str	wzr, [sp, #628]
  425960:	str	xzr, [sp, #584]
  425964:	str	wzr, [sp, #624]
  425968:	ldr	x0, [sp, #176]
  42596c:	mov	x1, #0x0                   	// #0
  425970:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  425974:	str	x0, [sp, #560]
  425978:	ldr	x0, [sp, #560]
  42597c:	ldrb	w0, [x0]
  425980:	cmp	w0, #0x0
  425984:	b.ne	425994 <eval_buffer@@Base+0xd44>  // b.any
  425988:	ldr	x0, [sp, #560]
  42598c:	bl	406c00 <free@plt>
  425990:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425994:	ldr	x0, [sp, #560]
  425998:	str	x0, [sp, #176]
  42599c:	add	x0, sp, #0xb0
  4259a0:	mov	w4, #0x2                   	// #2
  4259a4:	mov	x3, #0x0                   	// #0
  4259a8:	mov	w2, #0x1                   	// #1
  4259ac:	mov	x1, #0x10                  	// #16
  4259b0:	bl	42a5e0 <parse_file_seq@@Base>
  4259b4:	str	x0, [sp, #528]
  4259b8:	ldr	x0, [sp, #560]
  4259bc:	bl	406c00 <free@plt>
  4259c0:	add	x0, sp, #0x70
  4259c4:	bl	42476c <read_all_makefiles@@Base+0x354>
  4259c8:	str	x0, [sp, #264]
  4259cc:	ldr	x0, [sp, #616]
  4259d0:	cmp	x0, #0x0
  4259d4:	b.eq	425a24 <eval_buffer@@Base+0xdd4>  // b.none
  4259d8:	ldr	w0, [sp, #640]
  4259dc:	str	x0, [sp, #200]
  4259e0:	str	xzr, [sp, #208]
  4259e4:	add	x0, sp, #0xc0
  4259e8:	str	x0, [sp, #16]
  4259ec:	ldrb	w0, [sp, #595]
  4259f0:	strb	w0, [sp, #8]
  4259f4:	ldr	w0, [sp, #596]
  4259f8:	str	w0, [sp]
  4259fc:	ldr	x7, [sp, #648]
  425a00:	ldr	x6, [sp, #656]
  425a04:	ldr	w5, [sp, #644]
  425a08:	ldr	x4, [sp, #608]
  425a0c:	ldr	x3, [sp, #576]
  425a10:	ldr	x2, [sp, #584]
  425a14:	ldr	w1, [sp, #624]
  425a18:	ldr	x0, [sp, #616]
  425a1c:	bl	428240 <eval_buffer@@Base+0x35f0>
  425a20:	str	xzr, [sp, #616]
  425a24:	str	xzr, [sp, #648]
  425a28:	str	wzr, [sp, #628]
  425a2c:	str	xzr, [sp, #584]
  425a30:	str	wzr, [sp, #624]
  425a34:	b	425ad4 <eval_buffer@@Base+0xe84>
  425a38:	ldr	x0, [sp, #528]
  425a3c:	ldr	x0, [x0]
  425a40:	str	x0, [sp, #256]
  425a44:	ldr	w0, [sp, #276]
  425a48:	cmp	w0, #0x0
  425a4c:	b.eq	425a58 <eval_buffer@@Base+0xe08>  // b.none
  425a50:	mov	w0, #0xe                   	// #14
  425a54:	b	425a5c <eval_buffer@@Base+0xe0c>
  425a58:	mov	w0, #0xa                   	// #10
  425a5c:	ldr	w1, [sp, #68]
  425a60:	cmp	w1, #0x0
  425a64:	cset	w1, eq  // eq = none
  425a68:	and	w1, w1, #0xff
  425a6c:	sxth	w1, w1
  425a70:	orr	w0, w0, w1
  425a74:	sxth	w0, w0
  425a78:	strh	w0, [sp, #254]
  425a7c:	ldr	x0, [sp, #528]
  425a80:	ldr	x0, [x0, #8]
  425a84:	ldrh	w1, [sp, #254]
  425a88:	bl	424804 <read_all_makefiles@@Base+0x3ec>
  425a8c:	str	x0, [sp, #240]
  425a90:	bl	406dd0 <__errno_location@plt>
  425a94:	ldr	w0, [x0]
  425a98:	cmp	w0, #0x0
  425a9c:	b.eq	425ac4 <eval_buffer@@Base+0xe74>  // b.none
  425aa0:	ldr	x0, [sp, #240]
  425aa4:	add	x1, x0, #0x28
  425aa8:	ldr	x0, [sp, #432]
  425aac:	mov	x2, x1
  425ab0:	mov	x3, x0
  425ab4:	ldp	x0, x1, [x3]
  425ab8:	stp	x0, x1, [x2]
  425abc:	ldr	x0, [x3, #16]
  425ac0:	str	x0, [x2, #16]
  425ac4:	ldr	x0, [sp, #528]
  425ac8:	bl	406c00 <free@plt>
  425acc:	ldr	x0, [sp, #256]
  425ad0:	str	x0, [sp, #528]
  425ad4:	ldr	x0, [sp, #528]
  425ad8:	cmp	x0, #0x0
  425adc:	b.ne	425a38 <eval_buffer@@Base+0xde8>  // b.any
  425ae0:	ldr	x0, [sp, #264]
  425ae4:	bl	4247b4 <read_all_makefiles@@Base+0x39c>
  425ae8:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425aec:	ldr	x0, [sp, #184]
  425af0:	cmp	x0, #0x4
  425af4:	b.ne	425b14 <eval_buffer@@Base+0xec4>  // b.any
  425af8:	mov	x2, #0x4                   	// #4
  425afc:	ldr	x1, [sp, #560]
  425b00:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425b04:	add	x0, x0, #0xe80
  425b08:	bl	406990 <strncmp@plt>
  425b0c:	cmp	w0, #0x0
  425b10:	b.eq	425b3c <eval_buffer@@Base+0xeec>  // b.none
  425b14:	ldr	x0, [sp, #184]
  425b18:	cmp	x0, #0x5
  425b1c:	b.ne	425d48 <eval_buffer@@Base+0x10f8>  // b.any
  425b20:	mov	x2, #0x5                   	// #5
  425b24:	ldr	x1, [sp, #560]
  425b28:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425b2c:	add	x0, x0, #0xe88
  425b30:	bl	406990 <strncmp@plt>
  425b34:	cmp	w0, #0x0
  425b38:	b.ne	425d48 <eval_buffer@@Base+0x10f8>  // b.any
  425b3c:	ldr	x0, [sp, #560]
  425b40:	ldrb	w0, [x0]
  425b44:	cmp	w0, #0x2d
  425b48:	cset	w0, eq  // eq = none
  425b4c:	and	w0, w0, #0xff
  425b50:	str	w0, [sp, #308]
  425b54:	ldr	x0, [sp, #616]
  425b58:	cmp	x0, #0x0
  425b5c:	b.eq	425bac <eval_buffer@@Base+0xf5c>  // b.none
  425b60:	ldr	w0, [sp, #640]
  425b64:	str	x0, [sp, #200]
  425b68:	str	xzr, [sp, #208]
  425b6c:	add	x0, sp, #0xc0
  425b70:	str	x0, [sp, #16]
  425b74:	ldrb	w0, [sp, #595]
  425b78:	strb	w0, [sp, #8]
  425b7c:	ldr	w0, [sp, #596]
  425b80:	str	w0, [sp]
  425b84:	ldr	x7, [sp, #648]
  425b88:	ldr	x6, [sp, #656]
  425b8c:	ldr	w5, [sp, #644]
  425b90:	ldr	x4, [sp, #608]
  425b94:	ldr	x3, [sp, #576]
  425b98:	ldr	x2, [sp, #584]
  425b9c:	ldr	w1, [sp, #624]
  425ba0:	ldr	x0, [sp, #616]
  425ba4:	bl	428240 <eval_buffer@@Base+0x35f0>
  425ba8:	str	xzr, [sp, #616]
  425bac:	str	xzr, [sp, #648]
  425bb0:	str	wzr, [sp, #628]
  425bb4:	str	xzr, [sp, #584]
  425bb8:	str	wzr, [sp, #624]
  425bbc:	ldr	x0, [sp, #176]
  425bc0:	mov	x1, #0x0                   	// #0
  425bc4:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  425bc8:	str	x0, [sp, #560]
  425bcc:	ldr	x0, [sp, #560]
  425bd0:	ldrb	w0, [x0]
  425bd4:	cmp	w0, #0x0
  425bd8:	b.ne	425be8 <eval_buffer@@Base+0xf98>  // b.any
  425bdc:	ldr	x0, [sp, #560]
  425be0:	bl	406c00 <free@plt>
  425be4:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425be8:	ldr	x0, [sp, #560]
  425bec:	str	x0, [sp, #176]
  425bf0:	add	x0, sp, #0xb0
  425bf4:	mov	w4, #0x2                   	// #2
  425bf8:	mov	x3, #0x0                   	// #0
  425bfc:	mov	w2, #0x1                   	// #1
  425c00:	mov	x1, #0x10                  	// #16
  425c04:	bl	42a5e0 <parse_file_seq@@Base>
  425c08:	str	x0, [sp, #520]
  425c0c:	ldr	x0, [sp, #560]
  425c10:	bl	406c00 <free@plt>
  425c14:	b	425d38 <eval_buffer@@Base+0x10e8>
  425c18:	ldr	x0, [sp, #520]
  425c1c:	ldr	x0, [x0]
  425c20:	str	x0, [sp, #296]
  425c24:	ldr	x0, [sp, #520]
  425c28:	ldr	x0, [x0, #8]
  425c2c:	str	x0, [sp, #104]
  425c30:	ldr	x0, [sp, #72]
  425c34:	add	x0, x0, #0x28
  425c38:	add	x1, sp, #0x68
  425c3c:	ldr	w2, [sp, #308]
  425c40:	bl	41c078 <load_file@@Base>
  425c44:	str	w0, [sp, #292]
  425c48:	ldr	w0, [sp, #292]
  425c4c:	cmp	w0, #0x0
  425c50:	b.ne	425c9c <eval_buffer@@Base+0x104c>  // b.any
  425c54:	ldr	w0, [sp, #308]
  425c58:	cmp	w0, #0x0
  425c5c:	b.ne	425c9c <eval_buffer@@Base+0x104c>  // b.any
  425c60:	ldr	x0, [sp, #72]
  425c64:	add	x19, x0, #0x28
  425c68:	ldr	x0, [sp, #104]
  425c6c:	bl	4066f0 <strlen@plt>
  425c70:	mov	x20, x0
  425c74:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425c78:	add	x0, x0, #0xe90
  425c7c:	bl	406e40 <gettext@plt>
  425c80:	mov	x1, x0
  425c84:	ldr	x0, [sp, #104]
  425c88:	mov	x3, x0
  425c8c:	mov	x2, x1
  425c90:	mov	x1, x20
  425c94:	mov	x0, x19
  425c98:	bl	424098 <fatal@@Base>
  425c9c:	ldr	x0, [sp, #520]
  425ca0:	bl	406c00 <free@plt>
  425ca4:	ldr	x0, [sp, #296]
  425ca8:	str	x0, [sp, #520]
  425cac:	ldr	w0, [sp, #292]
  425cb0:	cmn	w0, #0x1
  425cb4:	b.ne	425cbc <eval_buffer@@Base+0x106c>  // b.any
  425cb8:	b	425d38 <eval_buffer@@Base+0x10e8>
  425cbc:	mov	x0, #0x40                  	// #64
  425cc0:	bl	4226d4 <xcalloc@@Base>
  425cc4:	str	x0, [sp, #280]
  425cc8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425ccc:	add	x0, x0, #0x70
  425cd0:	ldr	x1, [x0]
  425cd4:	ldr	x0, [sp, #280]
  425cd8:	str	x1, [x0]
  425cdc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425ce0:	add	x0, x0, #0x70
  425ce4:	ldr	x1, [sp, #280]
  425ce8:	str	x1, [x0]
  425cec:	ldr	x0, [sp, #104]
  425cf0:	bl	40c5bc <lookup_file@@Base>
  425cf4:	mov	x1, x0
  425cf8:	ldr	x0, [sp, #280]
  425cfc:	str	x1, [x0, #16]
  425d00:	ldr	x0, [sp, #280]
  425d04:	ldr	x0, [x0, #16]
  425d08:	cmp	x0, #0x0
  425d0c:	b.ne	425d24 <eval_buffer@@Base+0x10d4>  // b.any
  425d10:	ldr	x0, [sp, #104]
  425d14:	bl	40c678 <enter_file@@Base>
  425d18:	mov	x1, x0
  425d1c:	ldr	x0, [sp, #280]
  425d20:	str	x1, [x0, #16]
  425d24:	ldr	x0, [sp, #280]
  425d28:	ldr	x0, [x0, #16]
  425d2c:	ldrb	w1, [x0, #136]
  425d30:	orr	w1, w1, #0x40
  425d34:	strb	w1, [x0, #136]
  425d38:	ldr	x0, [sp, #520]
  425d3c:	cmp	x0, #0x0
  425d40:	b.ne	425c18 <eval_buffer@@Base+0xfc8>  // b.any
  425d44:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425d48:	ldr	x0, [sp, #568]
  425d4c:	ldrb	w1, [x0]
  425d50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  425d54:	add	x0, x0, #0x1f8
  425d58:	ldrb	w0, [x0]
  425d5c:	cmp	w1, w0
  425d60:	b.ne	425d80 <eval_buffer@@Base+0x1130>  // b.any
  425d64:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425d68:	add	x0, x0, #0xea8
  425d6c:	bl	406e40 <gettext@plt>
  425d70:	mov	x2, x0
  425d74:	mov	x1, #0x0                   	// #0
  425d78:	ldr	x0, [sp, #432]
  425d7c:	bl	424098 <fatal@@Base>
  425d80:	str	xzr, [sp, #496]
  425d84:	ldr	x0, [sp, #616]
  425d88:	cmp	x0, #0x0
  425d8c:	b.eq	425ddc <eval_buffer@@Base+0x118c>  // b.none
  425d90:	ldr	w0, [sp, #640]
  425d94:	str	x0, [sp, #200]
  425d98:	str	xzr, [sp, #208]
  425d9c:	add	x0, sp, #0xc0
  425da0:	str	x0, [sp, #16]
  425da4:	ldrb	w0, [sp, #595]
  425da8:	strb	w0, [sp, #8]
  425dac:	ldr	w0, [sp, #596]
  425db0:	str	w0, [sp]
  425db4:	ldr	x7, [sp, #648]
  425db8:	ldr	x6, [sp, #656]
  425dbc:	ldr	w5, [sp, #644]
  425dc0:	ldr	x4, [sp, #608]
  425dc4:	ldr	x3, [sp, #576]
  425dc8:	ldr	x2, [sp, #584]
  425dcc:	ldr	w1, [sp, #624]
  425dd0:	ldr	x0, [sp, #616]
  425dd4:	bl	428240 <eval_buffer@@Base+0x35f0>
  425dd8:	str	xzr, [sp, #616]
  425ddc:	str	xzr, [sp, #648]
  425de0:	str	wzr, [sp, #628]
  425de4:	str	xzr, [sp, #584]
  425de8:	str	wzr, [sp, #624]
  425dec:	ldr	x0, [sp, #432]
  425df0:	ldr	x0, [x0, #8]
  425df4:	str	w0, [sp, #640]
  425df8:	mov	w1, #0x4018                	// #16408
  425dfc:	ldr	x0, [sp, #568]
  425e00:	bl	428f24 <eval_buffer@@Base+0x42d4>
  425e04:	str	x0, [sp, #504]
  425e08:	ldr	x0, [sp, #504]
  425e0c:	cmp	x0, #0x0
  425e10:	b.eq	425e34 <eval_buffer@@Base+0x11e4>  // b.none
  425e14:	ldr	x0, [sp, #504]
  425e18:	ldrb	w0, [x0]
  425e1c:	cmp	w0, #0x23
  425e20:	b.ne	425e34 <eval_buffer@@Base+0x11e4>  // b.any
  425e24:	ldr	x0, [sp, #504]
  425e28:	strb	wzr, [x0]
  425e2c:	str	xzr, [sp, #504]
  425e30:	b	425e50 <eval_buffer@@Base+0x1200>
  425e34:	ldr	x0, [sp, #504]
  425e38:	cmp	x0, #0x0
  425e3c:	b.eq	425e50 <eval_buffer@@Base+0x1200>  // b.none
  425e40:	ldr	x0, [sp, #504]
  425e44:	add	x1, x0, #0x1
  425e48:	str	x1, [sp, #504]
  425e4c:	strb	wzr, [x0]
  425e50:	ldr	x0, [sp, #504]
  425e54:	str	x0, [sp, #400]
  425e58:	ldr	x0, [sp, #568]
  425e5c:	bl	422180 <collapse_continuations@@Base>
  425e60:	add	x1, sp, #0xb8
  425e64:	add	x0, sp, #0x60
  425e68:	mov	x2, x1
  425e6c:	mov	x1, x0
  425e70:	ldr	x0, [sp, #568]
  425e74:	bl	429b90 <find_percent_cached@@Base+0x6a0>
  425e78:	str	w0, [sp, #516]
  425e7c:	ldr	w0, [sp, #516]
  425e80:	cmp	w0, #0x9
  425e84:	b.hi	425ef4 <eval_buffer@@Base+0x12a4>  // b.pmore
  425e88:	ldr	w0, [sp, #516]
  425e8c:	cmp	w0, #0x8
  425e90:	b.cs	425ee8 <eval_buffer@@Base+0x1298>  // b.hs, b.nlast
  425e94:	ldr	w0, [sp, #516]
  425e98:	cmp	w0, #0x1
  425e9c:	b.eq	425ec0 <eval_buffer@@Base+0x1270>  // b.none
  425ea0:	ldr	w0, [sp, #516]
  425ea4:	cmp	w0, #0x0
  425ea8:	b.eq	425ef4 <eval_buffer@@Base+0x12a4>  // b.none
  425eac:	ldr	w0, [sp, #516]
  425eb0:	sub	w0, w0, #0x4
  425eb4:	cmp	w0, #0x1
  425eb8:	b.hi	425ef4 <eval_buffer@@Base+0x12a4>  // b.pmore
  425ebc:	b	425ee8 <eval_buffer@@Base+0x1298>
  425ec0:	ldr	x0, [sp, #504]
  425ec4:	cmp	x0, #0x0
  425ec8:	b.eq	426ab0 <eval_buffer@@Base+0x1e60>  // b.none
  425ecc:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  425ed0:	add	x0, x0, #0xed0
  425ed4:	bl	406e40 <gettext@plt>
  425ed8:	mov	x2, x0
  425edc:	mov	x1, #0x0                   	// #0
  425ee0:	ldr	x0, [sp, #432]
  425ee4:	bl	424098 <fatal@@Base>
  425ee8:	mov	w0, #0x1                   	// #1
  425eec:	str	w0, [sp, #628]
  425ef0:	b	426ac4 <eval_buffer@@Base+0x1e74>
  425ef4:	nop
  425ef8:	ldr	x0, [sp, #96]
  425efc:	ldr	x1, [sp, #184]
  425f00:	mov	x2, x1
  425f04:	mov	x1, x0
  425f08:	mov	x0, #0x0                   	// #0
  425f0c:	bl	40b84c <variable_expand_string@@Base>
  425f10:	str	x0, [sp, #176]
  425f14:	ldr	x1, [sp, #96]
  425f18:	ldr	x0, [sp, #184]
  425f1c:	add	x0, x1, x0
  425f20:	str	x0, [sp, #96]
  425f24:	ldr	x0, [sp, #504]
  425f28:	cmp	x0, #0x0
  425f2c:	b.ne	425ff4 <eval_buffer@@Base+0x13a4>  // b.any
  425f30:	ldr	x0, [sp, #176]
  425f34:	mov	w1, #0x3b                  	// #59
  425f38:	bl	4291f8 <eval_buffer@@Base+0x45a8>
  425f3c:	str	x0, [sp, #504]
  425f40:	ldr	x0, [sp, #504]
  425f44:	cmp	x0, #0x0
  425f48:	b.eq	425ff4 <eval_buffer@@Base+0x13a4>  // b.none
  425f4c:	ldr	x1, [sp, #176]
  425f50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425f54:	add	x0, x0, #0xa00
  425f58:	ldr	x0, [x0]
  425f5c:	sub	x0, x1, x0
  425f60:	str	x0, [sp, #392]
  425f64:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425f68:	add	x0, x0, #0xa00
  425f6c:	ldr	x0, [x0]
  425f70:	ldr	x1, [sp, #504]
  425f74:	sub	x0, x1, x0
  425f78:	str	x0, [sp, #384]
  425f7c:	ldr	x19, [sp, #176]
  425f80:	ldr	x0, [sp, #176]
  425f84:	bl	4066f0 <strlen@plt>
  425f88:	add	x0, x19, x0
  425f8c:	str	x0, [sp, #376]
  425f90:	ldr	x0, [sp, #504]
  425f94:	strb	wzr, [x0]
  425f98:	ldr	x0, [sp, #96]
  425f9c:	mov	x2, #0xffffffffffffffff    	// #-1
  425fa0:	mov	x1, x0
  425fa4:	ldr	x0, [sp, #376]
  425fa8:	bl	40b84c <variable_expand_string@@Base>
  425fac:	ldr	x19, [sp, #96]
  425fb0:	ldr	x0, [sp, #96]
  425fb4:	bl	4066f0 <strlen@plt>
  425fb8:	add	x0, x19, x0
  425fbc:	str	x0, [sp, #96]
  425fc0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425fc4:	add	x0, x0, #0xa00
  425fc8:	ldr	x1, [x0]
  425fcc:	ldr	x0, [sp, #392]
  425fd0:	add	x0, x1, x0
  425fd4:	str	x0, [sp, #176]
  425fd8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  425fdc:	add	x0, x0, #0xa00
  425fe0:	ldr	x1, [x0]
  425fe4:	ldr	x0, [sp, #384]
  425fe8:	add	x0, x0, #0x1
  425fec:	add	x0, x1, x0
  425ff0:	str	x0, [sp, #504]
  425ff4:	ldr	x0, [sp, #176]
  425ff8:	mov	w1, #0x3a                  	// #58
  425ffc:	bl	4291f8 <eval_buffer@@Base+0x45a8>
  426000:	str	x0, [sp, #488]
  426004:	ldr	x0, [sp, #488]
  426008:	cmp	x0, #0x0
  42600c:	b.eq	426044 <eval_buffer@@Base+0x13f4>  // b.none
  426010:	ldr	x0, [sp, #176]
  426014:	ldr	x1, [sp, #488]
  426018:	cmp	x1, x0
  42601c:	b.ls	4260a4 <eval_buffer@@Base+0x1454>  // b.plast
  426020:	ldr	x0, [sp, #488]
  426024:	sub	x0, x0, #0x1
  426028:	ldrb	w0, [x0]
  42602c:	cmp	w0, #0x26
  426030:	b.ne	4260a4 <eval_buffer@@Base+0x1454>  // b.any
  426034:	ldr	x0, [sp, #488]
  426038:	sub	x0, x0, #0x1
  42603c:	str	x0, [sp, #488]
  426040:	b	4260a4 <eval_buffer@@Base+0x1454>
  426044:	ldr	x0, [sp, #96]
  426048:	add	x2, sp, #0xb8
  42604c:	add	x1, sp, #0x60
  426050:	bl	429b90 <find_percent_cached@@Base+0x6a0>
  426054:	str	w0, [sp, #516]
  426058:	ldr	w0, [sp, #516]
  42605c:	cmp	w0, #0x1
  426060:	b.eq	4260ac <eval_buffer@@Base+0x145c>  // b.none
  426064:	ldr	x19, [sp, #176]
  426068:	ldr	x0, [sp, #176]
  42606c:	bl	4066f0 <strlen@plt>
  426070:	add	x0, x19, x0
  426074:	str	x0, [sp, #176]
  426078:	ldr	x0, [sp, #176]
  42607c:	add	x1, x0, #0x1
  426080:	str	x1, [sp, #176]
  426084:	mov	w1, #0x20                  	// #32
  426088:	strb	w1, [x0]
  42608c:	ldr	x0, [sp, #176]
  426090:	ldr	x1, [sp, #96]
  426094:	ldr	x2, [sp, #184]
  426098:	bl	40b84c <variable_expand_string@@Base>
  42609c:	str	x0, [sp, #176]
  4260a0:	b	425f14 <eval_buffer@@Base+0x12c4>
  4260a4:	nop
  4260a8:	b	4260b0 <eval_buffer@@Base+0x1460>
  4260ac:	nop
  4260b0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4260b4:	add	x0, x0, #0xa00
  4260b8:	ldr	x0, [x0]
  4260bc:	bl	4228a0 <next_token@@Base>
  4260c0:	str	x0, [sp, #176]
  4260c4:	ldr	w0, [sp, #516]
  4260c8:	cmp	w0, #0x1
  4260cc:	b.ne	426148 <eval_buffer@@Base+0x14f8>  // b.any
  4260d0:	ldr	x0, [sp, #176]
  4260d4:	ldrb	w0, [x0]
  4260d8:	cmp	w0, #0x0
  4260dc:	b.eq	426ab8 <eval_buffer@@Base+0x1e68>  // b.none
  4260e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4260e4:	add	x0, x0, #0x1f8
  4260e8:	ldrb	w0, [x0]
  4260ec:	cmp	w0, #0x9
  4260f0:	b.ne	42612c <eval_buffer@@Base+0x14dc>  // b.any
  4260f4:	mov	x2, #0x8                   	// #8
  4260f8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  4260fc:	add	x1, x0, #0xef0
  426100:	ldr	x0, [sp, #568]
  426104:	bl	406990 <strncmp@plt>
  426108:	cmp	w0, #0x0
  42610c:	b.ne	42612c <eval_buffer@@Base+0x14dc>  // b.any
  426110:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426114:	add	x0, x0, #0xf00
  426118:	bl	406e40 <gettext@plt>
  42611c:	mov	x2, x0
  426120:	mov	x1, #0x0                   	// #0
  426124:	ldr	x0, [sp, #432]
  426128:	bl	424098 <fatal@@Base>
  42612c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426130:	add	x0, x0, #0xf40
  426134:	bl	406e40 <gettext@plt>
  426138:	mov	x2, x0
  42613c:	mov	x1, #0x0                   	// #0
  426140:	ldr	x0, [sp, #432]
  426144:	bl	424098 <fatal@@Base>
  426148:	ldr	x0, [sp, #488]
  42614c:	ldrb	w0, [x0]
  426150:	strb	w0, [sp, #375]
  426154:	ldrb	w0, [sp, #375]
  426158:	cmp	w0, #0x26
  42615c:	b.ne	426168 <eval_buffer@@Base+0x1518>  // b.any
  426160:	mov	w0, #0x1                   	// #1
  426164:	str	w0, [sp, #624]
  426168:	ldr	x0, [sp, #488]
  42616c:	strb	wzr, [x0]
  426170:	add	x0, sp, #0xb0
  426174:	mov	w4, #0x0                   	// #0
  426178:	mov	x3, #0x0                   	// #0
  42617c:	mov	w2, #0x1                   	// #1
  426180:	mov	x1, #0x10                  	// #16
  426184:	bl	42a5e0 <parse_file_seq@@Base>
  426188:	str	x0, [sp, #616]
  42618c:	ldr	x0, [sp, #488]
  426190:	ldrb	w1, [sp, #375]
  426194:	strb	w1, [x0]
  426198:	ldrb	w0, [sp, #375]
  42619c:	cmp	w0, #0x26
  4261a0:	cset	w0, eq  // eq = none
  4261a4:	and	w0, w0, #0xff
  4261a8:	and	x0, x0, #0xff
  4261ac:	ldr	x1, [sp, #488]
  4261b0:	add	x0, x1, x0
  4261b4:	str	x0, [sp, #176]
  4261b8:	ldr	x0, [sp, #616]
  4261bc:	cmp	x0, #0x0
  4261c0:	b.ne	4261d0 <eval_buffer@@Base+0x1580>  // b.any
  4261c4:	mov	w0, #0x1                   	// #1
  4261c8:	str	w0, [sp, #628]
  4261cc:	b	426ac4 <eval_buffer@@Base+0x1e74>
  4261d0:	ldr	x0, [sp, #176]
  4261d4:	add	x0, x0, #0x1
  4261d8:	str	x0, [sp, #176]
  4261dc:	ldr	x0, [sp, #176]
  4261e0:	ldrb	w0, [x0]
  4261e4:	cmp	w0, #0x3a
  4261e8:	cset	w0, eq  // eq = none
  4261ec:	and	w0, w0, #0xff
  4261f0:	str	w0, [sp, #596]
  4261f4:	ldr	w0, [sp, #596]
  4261f8:	cmp	w0, #0x0
  4261fc:	b.eq	42620c <eval_buffer@@Base+0x15bc>  // b.none
  426200:	ldr	x0, [sp, #176]
  426204:	add	x0, x0, #0x1
  426208:	str	x0, [sp, #176]
  42620c:	ldr	x0, [sp, #96]
  426210:	ldrb	w0, [x0]
  426214:	cmp	w0, #0x0
  426218:	b.eq	426284 <eval_buffer@@Base+0x1634>  // b.none
  42621c:	ldr	x1, [sp, #176]
  426220:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  426224:	add	x0, x0, #0xa00
  426228:	ldr	x0, [x0]
  42622c:	sub	x0, x1, x0
  426230:	str	x0, [sp, #360]
  426234:	ldr	x0, [sp, #176]
  426238:	bl	4066f0 <strlen@plt>
  42623c:	str	x0, [sp, #496]
  426240:	ldr	x1, [sp, #176]
  426244:	ldr	x0, [sp, #496]
  426248:	add	x19, x1, x0
  42624c:	ldr	x20, [sp, #96]
  426250:	ldr	x0, [sp, #96]
  426254:	bl	4066f0 <strlen@plt>
  426258:	add	x0, x0, #0x1
  42625c:	mov	x2, x0
  426260:	mov	x1, x20
  426264:	mov	x0, x19
  426268:	bl	40b388 <variable_buffer_output@@Base>
  42626c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  426270:	add	x0, x0, #0xa00
  426274:	ldr	x1, [x0]
  426278:	ldr	x0, [sp, #360]
  42627c:	add	x0, x1, x0
  426280:	str	x0, [sp, #176]
  426284:	ldr	x0, [sp, #176]
  426288:	add	x1, sp, #0xa8
  42628c:	bl	424d64 <eval_buffer@@Base+0x114>
  426290:	str	x0, [sp, #176]
  426294:	ldrb	w0, [sp, #168]
  426298:	and	w0, w0, #0x1
  42629c:	and	w0, w0, #0xff
  4262a0:	cmp	w0, #0x0
  4262a4:	b.eq	426374 <eval_buffer@@Base+0x1724>  // b.none
  4262a8:	ldr	x0, [sp, #400]
  4262ac:	cmp	x0, #0x0
  4262b0:	b.eq	426330 <eval_buffer@@Base+0x16e0>  // b.none
  4262b4:	ldr	x1, [sp, #176]
  4262b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4262bc:	add	x0, x0, #0xa00
  4262c0:	ldr	x0, [x0]
  4262c4:	sub	x0, x1, x0
  4262c8:	str	x0, [sp, #312]
  4262cc:	ldr	x0, [sp, #400]
  4262d0:	sub	x0, x0, #0x1
  4262d4:	str	x0, [sp, #400]
  4262d8:	ldr	x0, [sp, #400]
  4262dc:	mov	w1, #0x3b                  	// #59
  4262e0:	strb	w1, [x0]
  4262e4:	ldr	x0, [sp, #400]
  4262e8:	bl	422180 <collapse_continuations@@Base>
  4262ec:	ldr	x19, [sp, #176]
  4262f0:	ldr	x0, [sp, #176]
  4262f4:	bl	4066f0 <strlen@plt>
  4262f8:	add	x19, x19, x0
  4262fc:	ldr	x0, [sp, #400]
  426300:	bl	4066f0 <strlen@plt>
  426304:	add	x0, x0, #0x1
  426308:	mov	x2, x0
  42630c:	ldr	x1, [sp, #400]
  426310:	mov	x0, x19
  426314:	bl	40b388 <variable_buffer_output@@Base>
  426318:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42631c:	add	x0, x0, #0xa00
  426320:	ldr	x1, [x0]
  426324:	ldr	x0, [sp, #312]
  426328:	add	x0, x1, x0
  42632c:	str	x0, [sp, #176]
  426330:	ldr	x1, [sp, #176]
  426334:	ldrb	w0, [sp, #168]
  426338:	and	w0, w0, #0x10
  42633c:	and	w0, w0, #0xff
  426340:	cmp	w0, #0x0
  426344:	b.eq	426350 <eval_buffer@@Base+0x1700>  // b.none
  426348:	mov	w0, #0x5                   	// #5
  42634c:	b	426354 <eval_buffer@@Base+0x1704>
  426350:	mov	w0, #0x2                   	// #2
  426354:	add	x2, sp, #0xa8
  426358:	ldr	x4, [sp, #432]
  42635c:	mov	x3, x2
  426360:	mov	w2, w0
  426364:	ldr	x0, [sp, #616]
  426368:	bl	427ee4 <eval_buffer@@Base+0x3294>
  42636c:	str	xzr, [sp, #616]
  426370:	b	426ac4 <eval_buffer@@Base+0x1e74>
  426374:	ldr	x0, [sp, #96]
  426378:	mov	w1, #0x3d                  	// #61
  42637c:	bl	4291f8 <eval_buffer@@Base+0x45a8>
  426380:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426384:	add	x0, x0, #0x1f8
  426388:	ldrb	w0, [x0]
  42638c:	strb	w0, [sp, #595]
  426390:	str	wzr, [sp, #628]
  426394:	ldr	x0, [sp, #96]
  426398:	ldrb	w0, [x0]
  42639c:	cmp	w0, #0x0
  4263a0:	b.eq	426424 <eval_buffer@@Base+0x17d4>  // b.none
  4263a4:	ldr	x1, [sp, #176]
  4263a8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4263ac:	add	x0, x0, #0xa00
  4263b0:	ldr	x0, [x0]
  4263b4:	sub	x0, x1, x0
  4263b8:	str	x0, [sp, #352]
  4263bc:	ldr	x1, [sp, #176]
  4263c0:	ldr	x0, [sp, #496]
  4263c4:	add	x0, x1, x0
  4263c8:	ldr	x1, [sp, #96]
  4263cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4263d0:	bl	40b84c <variable_expand_string@@Base>
  4263d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4263d8:	add	x0, x0, #0xa00
  4263dc:	ldr	x1, [x0]
  4263e0:	ldr	x0, [sp, #352]
  4263e4:	add	x0, x1, x0
  4263e8:	str	x0, [sp, #176]
  4263ec:	ldr	x0, [sp, #504]
  4263f0:	cmp	x0, #0x0
  4263f4:	b.ne	426424 <eval_buffer@@Base+0x17d4>  // b.any
  4263f8:	ldr	x0, [sp, #176]
  4263fc:	mov	w1, #0x3b                  	// #59
  426400:	bl	4291f8 <eval_buffer@@Base+0x45a8>
  426404:	str	x0, [sp, #504]
  426408:	ldr	x0, [sp, #504]
  42640c:	cmp	x0, #0x0
  426410:	b.eq	426424 <eval_buffer@@Base+0x17d4>  // b.none
  426414:	ldr	x0, [sp, #504]
  426418:	add	x1, x0, #0x1
  42641c:	str	x1, [sp, #504]
  426420:	strb	wzr, [x0]
  426424:	ldr	x0, [sp, #176]
  426428:	mov	w1, #0x3a                  	// #58
  42642c:	bl	406c20 <strchr@plt>
  426430:	str	x0, [sp, #560]
  426434:	b	426498 <eval_buffer@@Base+0x1848>
  426438:	ldr	x0, [sp, #560]
  42643c:	sub	x0, x0, #0x1
  426440:	str	x0, [sp, #480]
  426444:	str	wzr, [sp, #476]
  426448:	b	426460 <eval_buffer@@Base+0x1810>
  42644c:	ldr	w0, [sp, #476]
  426450:	cmp	w0, #0x0
  426454:	cset	w0, eq  // eq = none
  426458:	and	w0, w0, #0xff
  42645c:	str	w0, [sp, #476]
  426460:	ldr	x0, [sp, #480]
  426464:	sub	x1, x0, #0x1
  426468:	str	x1, [sp, #480]
  42646c:	ldrb	w0, [x0]
  426470:	cmp	w0, #0x5c
  426474:	b.eq	42644c <eval_buffer@@Base+0x17fc>  // b.none
  426478:	ldr	w0, [sp, #476]
  42647c:	cmp	w0, #0x0
  426480:	b.eq	4264bc <eval_buffer@@Base+0x186c>  // b.none
  426484:	ldr	x0, [sp, #560]
  426488:	add	x0, x0, #0x1
  42648c:	mov	w1, #0x3a                  	// #58
  426490:	bl	406c20 <strchr@plt>
  426494:	str	x0, [sp, #560]
  426498:	ldr	x0, [sp, #560]
  42649c:	cmp	x0, #0x0
  4264a0:	b.eq	4264c0 <eval_buffer@@Base+0x1870>  // b.none
  4264a4:	ldr	x0, [sp, #560]
  4264a8:	sub	x0, x0, #0x1
  4264ac:	ldrb	w0, [x0]
  4264b0:	cmp	w0, #0x5c
  4264b4:	b.eq	426438 <eval_buffer@@Base+0x17e8>  // b.none
  4264b8:	b	4264c0 <eval_buffer@@Base+0x1870>
  4264bc:	nop
  4264c0:	ldr	x0, [sp, #560]
  4264c4:	cmp	x0, #0x0
  4264c8:	b.eq	426598 <eval_buffer@@Base+0x1948>  // b.none
  4264cc:	add	x0, sp, #0xb0
  4264d0:	mov	w4, #0x4                   	// #4
  4264d4:	mov	x3, #0x0                   	// #0
  4264d8:	mov	w2, #0x40                  	// #64
  4264dc:	mov	x1, #0x10                  	// #16
  4264e0:	bl	42a5e0 <parse_file_seq@@Base>
  4264e4:	str	x0, [sp, #344]
  4264e8:	ldr	x0, [sp, #176]
  4264ec:	add	x0, x0, #0x1
  4264f0:	str	x0, [sp, #176]
  4264f4:	ldr	x0, [sp, #344]
  4264f8:	cmp	x0, #0x0
  4264fc:	b.ne	42651c <eval_buffer@@Base+0x18cc>  // b.any
  426500:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426504:	add	x0, x0, #0xf58
  426508:	bl	406e40 <gettext@plt>
  42650c:	mov	x2, x0
  426510:	mov	x1, #0x0                   	// #0
  426514:	ldr	x0, [sp, #432]
  426518:	bl	424098 <fatal@@Base>
  42651c:	ldr	x0, [sp, #344]
  426520:	ldr	x0, [x0]
  426524:	cmp	x0, #0x0
  426528:	b.eq	426548 <eval_buffer@@Base+0x18f8>  // b.none
  42652c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426530:	add	x0, x0, #0xf70
  426534:	bl	406e40 <gettext@plt>
  426538:	mov	x2, x0
  42653c:	mov	x1, #0x0                   	// #0
  426540:	ldr	x0, [sp, #432]
  426544:	bl	424098 <fatal@@Base>
  426548:	ldr	x0, [sp, #344]
  42654c:	add	x0, x0, #0x8
  426550:	bl	4294f0 <find_percent_cached@@Base>
  426554:	str	x0, [sp, #576]
  426558:	ldr	x0, [sp, #344]
  42655c:	ldr	x0, [x0, #8]
  426560:	str	x0, [sp, #584]
  426564:	ldr	x0, [sp, #576]
  426568:	cmp	x0, #0x0
  42656c:	b.ne	42658c <eval_buffer@@Base+0x193c>  // b.any
  426570:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426574:	add	x0, x0, #0xf90
  426578:	bl	406e40 <gettext@plt>
  42657c:	mov	x2, x0
  426580:	mov	x1, #0x0                   	// #0
  426584:	ldr	x0, [sp, #432]
  426588:	bl	424098 <fatal@@Base>
  42658c:	ldr	x0, [sp, #344]
  426590:	bl	406c00 <free@plt>
  426594:	b	42659c <eval_buffer@@Base+0x194c>
  426598:	str	xzr, [sp, #584]
  42659c:	ldr	x0, [sp, #176]
  4265a0:	str	x0, [sp, #80]
  4265a4:	ldr	x19, [sp, #80]
  4265a8:	ldr	x0, [sp, #80]
  4265ac:	bl	4066f0 <strlen@plt>
  4265b0:	sub	x0, x0, #0x1
  4265b4:	add	x0, x19, x0
  4265b8:	str	x0, [sp, #88]
  4265bc:	add	x1, sp, #0x58
  4265c0:	add	x0, sp, #0x50
  4265c4:	bl	410ba8 <strip_whitespace@@Base>
  4265c8:	ldr	x1, [sp, #80]
  4265cc:	ldr	x0, [sp, #88]
  4265d0:	cmp	x1, x0
  4265d4:	b.hi	426610 <eval_buffer@@Base+0x19c0>  // b.pmore
  4265d8:	ldr	x0, [sp, #80]
  4265dc:	ldrb	w0, [x0]
  4265e0:	cmp	w0, #0x0
  4265e4:	b.eq	426610 <eval_buffer@@Base+0x19c0>  // b.none
  4265e8:	ldr	x2, [sp, #80]
  4265ec:	ldr	x1, [sp, #88]
  4265f0:	ldr	x0, [sp, #80]
  4265f4:	sub	x0, x1, x0
  4265f8:	add	x0, x0, #0x1
  4265fc:	mov	x1, x0
  426600:	mov	x0, x2
  426604:	bl	4227bc <xstrndup@@Base>
  426608:	str	x0, [sp, #608]
  42660c:	b	426614 <eval_buffer@@Base+0x19c4>
  426610:	str	xzr, [sp, #608]
  426614:	str	xzr, [sp, #648]
  426618:	ldr	x0, [sp, #504]
  42661c:	cmp	x0, #0x0
  426620:	b.eq	4266ac <eval_buffer@@Base+0x1a5c>  // b.none
  426624:	ldr	x0, [sp, #504]
  426628:	bl	4066f0 <strlen@plt>
  42662c:	str	x0, [sp, #336]
  426630:	ldr	x0, [sp, #432]
  426634:	ldr	x0, [x0, #8]
  426638:	str	w0, [sp, #644]
  42663c:	ldr	x0, [sp, #336]
  426640:	add	x0, x0, #0x2
  426644:	ldr	x1, [sp, #664]
  426648:	cmp	x1, x0
  42664c:	b.cs	426670 <eval_buffer@@Base+0x1a20>  // b.hs, b.nlast
  426650:	ldr	x0, [sp, #336]
  426654:	add	x0, x0, #0x2
  426658:	lsl	x0, x0, #1
  42665c:	str	x0, [sp, #664]
  426660:	ldr	x1, [sp, #664]
  426664:	ldr	x0, [sp, #656]
  426668:	bl	422720 <xrealloc@@Base>
  42666c:	str	x0, [sp, #656]
  426670:	ldr	x2, [sp, #336]
  426674:	ldr	x1, [sp, #504]
  426678:	ldr	x0, [sp, #656]
  42667c:	bl	4066b0 <memcpy@plt>
  426680:	ldr	x1, [sp, #648]
  426684:	ldr	x0, [sp, #336]
  426688:	add	x0, x1, x0
  42668c:	str	x0, [sp, #648]
  426690:	ldr	x0, [sp, #648]
  426694:	add	x1, x0, #0x1
  426698:	str	x1, [sp, #648]
  42669c:	ldr	x1, [sp, #656]
  4266a0:	add	x0, x1, x0
  4266a4:	mov	w1, #0xa                   	// #10
  4266a8:	strb	w1, [x0]
  4266ac:	ldr	w0, [sp, #68]
  4266b0:	cmp	w0, #0x0
  4266b4:	b.eq	425040 <eval_buffer@@Base+0x3f0>  // b.none
  4266b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4266bc:	add	x0, x0, #0xa68
  4266c0:	ldr	x0, [x0]
  4266c4:	ldr	x0, [x0, #8]
  4266c8:	ldrb	w0, [x0]
  4266cc:	cmp	w0, #0x0
  4266d0:	b.ne	425040 <eval_buffer@@Base+0x3f0>  // b.any
  4266d4:	ldr	x0, [sp, #616]
  4266d8:	str	x0, [sp, #456]
  4266dc:	b	426a60 <eval_buffer@@Base+0x1e10>
  4266e0:	str	wzr, [sp, #452]
  4266e4:	ldr	x0, [sp, #456]
  4266e8:	ldr	x0, [x0, #8]
  4266ec:	str	x0, [sp, #328]
  4266f0:	mov	w1, #0x25                  	// #37
  4266f4:	ldr	x0, [sp, #328]
  4266f8:	bl	406c20 <strchr@plt>
  4266fc:	cmp	x0, #0x0
  426700:	b.ne	426ac0 <eval_buffer@@Base+0x1e70>  // b.any
  426704:	ldr	x0, [sp, #328]
  426708:	ldrb	w0, [x0]
  42670c:	cmp	w0, #0x2e
  426710:	b.ne	426728 <eval_buffer@@Base+0x1ad8>  // b.any
  426714:	mov	w1, #0x2f                  	// #47
  426718:	ldr	x0, [sp, #328]
  42671c:	bl	406c20 <strchr@plt>
  426720:	cmp	x0, #0x0
  426724:	b.eq	426a50 <eval_buffer@@Base+0x1e00>  // b.none
  426728:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42672c:	add	x0, x0, #0xb28
  426730:	ldr	x0, [x0]
  426734:	ldr	x0, [x0, #24]
  426738:	str	x0, [sp, #464]
  42673c:	b	426a00 <eval_buffer@@Base+0x1db0>
  426740:	ldr	x0, [sp, #464]
  426744:	ldr	x0, [x0, #8]
  426748:	cmp	x0, #0x0
  42674c:	b.eq	42675c <eval_buffer@@Base+0x1b0c>  // b.none
  426750:	ldr	x0, [sp, #464]
  426754:	ldr	x0, [x0, #8]
  426758:	b	426768 <eval_buffer@@Base+0x1b18>
  42675c:	ldr	x0, [sp, #464]
  426760:	ldr	x0, [x0, #16]
  426764:	ldr	x0, [x0]
  426768:	ldrb	w0, [x0]
  42676c:	cmp	w0, #0x2e
  426770:	b.eq	42684c <eval_buffer@@Base+0x1bfc>  // b.none
  426774:	ldr	x0, [sp, #464]
  426778:	ldr	x0, [x0, #8]
  42677c:	cmp	x0, #0x0
  426780:	b.eq	426790 <eval_buffer@@Base+0x1b40>  // b.none
  426784:	ldr	x0, [sp, #464]
  426788:	ldr	x0, [x0, #8]
  42678c:	b	42679c <eval_buffer@@Base+0x1b4c>
  426790:	ldr	x0, [sp, #464]
  426794:	ldr	x0, [x0, #16]
  426798:	ldr	x0, [x0]
  42679c:	ldr	x1, [sp, #328]
  4267a0:	cmp	x0, x1
  4267a4:	b.eq	426840 <eval_buffer@@Base+0x1bf0>  // b.none
  4267a8:	ldr	x0, [sp, #328]
  4267ac:	ldrb	w1, [x0]
  4267b0:	ldr	x0, [sp, #464]
  4267b4:	ldr	x0, [x0, #8]
  4267b8:	cmp	x0, #0x0
  4267bc:	b.eq	4267cc <eval_buffer@@Base+0x1b7c>  // b.none
  4267c0:	ldr	x0, [sp, #464]
  4267c4:	ldr	x0, [x0, #8]
  4267c8:	b	4267d8 <eval_buffer@@Base+0x1b88>
  4267cc:	ldr	x0, [sp, #464]
  4267d0:	ldr	x0, [x0, #16]
  4267d4:	ldr	x0, [x0]
  4267d8:	ldrb	w0, [x0]
  4267dc:	cmp	w1, w0
  4267e0:	b.ne	42684c <eval_buffer@@Base+0x1bfc>  // b.any
  4267e4:	ldr	x0, [sp, #328]
  4267e8:	ldrb	w0, [x0]
  4267ec:	cmp	w0, #0x0
  4267f0:	b.eq	426840 <eval_buffer@@Base+0x1bf0>  // b.none
  4267f4:	ldr	x0, [sp, #328]
  4267f8:	add	x2, x0, #0x1
  4267fc:	ldr	x0, [sp, #464]
  426800:	ldr	x0, [x0, #8]
  426804:	cmp	x0, #0x0
  426808:	b.eq	42681c <eval_buffer@@Base+0x1bcc>  // b.none
  42680c:	ldr	x0, [sp, #464]
  426810:	ldr	x0, [x0, #8]
  426814:	add	x0, x0, #0x1
  426818:	b	42682c <eval_buffer@@Base+0x1bdc>
  42681c:	ldr	x0, [sp, #464]
  426820:	ldr	x0, [x0, #16]
  426824:	ldr	x0, [x0]
  426828:	add	x0, x0, #0x1
  42682c:	mov	x1, x0
  426830:	mov	x0, x2
  426834:	bl	406bc0 <strcmp@plt>
  426838:	cmp	w0, #0x0
  42683c:	b.ne	42684c <eval_buffer@@Base+0x1bfc>  // b.any
  426840:	mov	w0, #0x1                   	// #1
  426844:	str	w0, [sp, #452]
  426848:	b	426a14 <eval_buffer@@Base+0x1dc4>
  42684c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  426850:	add	x0, x0, #0xb28
  426854:	ldr	x0, [x0]
  426858:	ldr	x0, [x0, #24]
  42685c:	str	x0, [sp, #440]
  426860:	b	4269dc <eval_buffer@@Base+0x1d8c>
  426864:	ldr	x0, [sp, #440]
  426868:	ldr	x0, [x0, #8]
  42686c:	cmp	x0, #0x0
  426870:	b.eq	426880 <eval_buffer@@Base+0x1c30>  // b.none
  426874:	ldr	x0, [sp, #440]
  426878:	ldr	x0, [x0, #8]
  42687c:	b	42688c <eval_buffer@@Base+0x1c3c>
  426880:	ldr	x0, [sp, #440]
  426884:	ldr	x0, [x0, #16]
  426888:	ldr	x0, [x0]
  42688c:	bl	4066f0 <strlen@plt>
  426890:	str	x0, [sp, #320]
  426894:	ldr	x0, [sp, #440]
  426898:	ldr	x0, [x0, #8]
  42689c:	cmp	x0, #0x0
  4268a0:	b.eq	4268b0 <eval_buffer@@Base+0x1c60>  // b.none
  4268a4:	ldr	x0, [sp, #440]
  4268a8:	ldr	x0, [x0, #8]
  4268ac:	b	4268bc <eval_buffer@@Base+0x1c6c>
  4268b0:	ldr	x0, [sp, #440]
  4268b4:	ldr	x0, [x0, #16]
  4268b8:	ldr	x0, [x0]
  4268bc:	ldr	x2, [sp, #320]
  4268c0:	mov	x1, x0
  4268c4:	ldr	x0, [sp, #328]
  4268c8:	bl	406990 <strncmp@plt>
  4268cc:	cmp	w0, #0x0
  4268d0:	b.ne	4269cc <eval_buffer@@Base+0x1d7c>  // b.any
  4268d4:	ldr	x1, [sp, #328]
  4268d8:	ldr	x0, [sp, #320]
  4268dc:	add	x1, x1, x0
  4268e0:	ldr	x0, [sp, #464]
  4268e4:	ldr	x0, [x0, #8]
  4268e8:	cmp	x0, #0x0
  4268ec:	b.eq	4268fc <eval_buffer@@Base+0x1cac>  // b.none
  4268f0:	ldr	x0, [sp, #464]
  4268f4:	ldr	x0, [x0, #8]
  4268f8:	b	426908 <eval_buffer@@Base+0x1cb8>
  4268fc:	ldr	x0, [sp, #464]
  426900:	ldr	x0, [x0, #16]
  426904:	ldr	x0, [x0]
  426908:	cmp	x0, x1
  42690c:	b.eq	4269c0 <eval_buffer@@Base+0x1d70>  // b.none
  426910:	ldr	x1, [sp, #328]
  426914:	ldr	x0, [sp, #320]
  426918:	add	x0, x1, x0
  42691c:	ldrb	w1, [x0]
  426920:	ldr	x0, [sp, #464]
  426924:	ldr	x0, [x0, #8]
  426928:	cmp	x0, #0x0
  42692c:	b.eq	42693c <eval_buffer@@Base+0x1cec>  // b.none
  426930:	ldr	x0, [sp, #464]
  426934:	ldr	x0, [x0, #8]
  426938:	b	426948 <eval_buffer@@Base+0x1cf8>
  42693c:	ldr	x0, [sp, #464]
  426940:	ldr	x0, [x0, #16]
  426944:	ldr	x0, [x0]
  426948:	ldrb	w0, [x0]
  42694c:	cmp	w1, w0
  426950:	b.ne	4269d0 <eval_buffer@@Base+0x1d80>  // b.any
  426954:	ldr	x1, [sp, #328]
  426958:	ldr	x0, [sp, #320]
  42695c:	add	x0, x1, x0
  426960:	ldrb	w0, [x0]
  426964:	cmp	w0, #0x0
  426968:	b.eq	4269c0 <eval_buffer@@Base+0x1d70>  // b.none
  42696c:	ldr	x0, [sp, #320]
  426970:	add	x0, x0, #0x1
  426974:	ldr	x1, [sp, #328]
  426978:	add	x2, x1, x0
  42697c:	ldr	x0, [sp, #464]
  426980:	ldr	x0, [x0, #8]
  426984:	cmp	x0, #0x0
  426988:	b.eq	42699c <eval_buffer@@Base+0x1d4c>  // b.none
  42698c:	ldr	x0, [sp, #464]
  426990:	ldr	x0, [x0, #8]
  426994:	add	x0, x0, #0x1
  426998:	b	4269ac <eval_buffer@@Base+0x1d5c>
  42699c:	ldr	x0, [sp, #464]
  4269a0:	ldr	x0, [x0, #16]
  4269a4:	ldr	x0, [x0]
  4269a8:	add	x0, x0, #0x1
  4269ac:	mov	x1, x0
  4269b0:	mov	x0, x2
  4269b4:	bl	406bc0 <strcmp@plt>
  4269b8:	cmp	w0, #0x0
  4269bc:	b.ne	4269d0 <eval_buffer@@Base+0x1d80>  // b.any
  4269c0:	mov	w0, #0x1                   	// #1
  4269c4:	str	w0, [sp, #452]
  4269c8:	b	4269e8 <eval_buffer@@Base+0x1d98>
  4269cc:	nop
  4269d0:	ldr	x0, [sp, #440]
  4269d4:	ldr	x0, [x0]
  4269d8:	str	x0, [sp, #440]
  4269dc:	ldr	x0, [sp, #440]
  4269e0:	cmp	x0, #0x0
  4269e4:	b.ne	426864 <eval_buffer@@Base+0x1c14>  // b.any
  4269e8:	ldr	w0, [sp, #452]
  4269ec:	cmp	w0, #0x0
  4269f0:	b.ne	426a10 <eval_buffer@@Base+0x1dc0>  // b.any
  4269f4:	ldr	x0, [sp, #464]
  4269f8:	ldr	x0, [x0]
  4269fc:	str	x0, [sp, #464]
  426a00:	ldr	x0, [sp, #464]
  426a04:	cmp	x0, #0x0
  426a08:	b.ne	426740 <eval_buffer@@Base+0x1af0>  // b.any
  426a0c:	b	426a14 <eval_buffer@@Base+0x1dc4>
  426a10:	nop
  426a14:	ldr	w0, [sp, #452]
  426a18:	cmp	w0, #0x0
  426a1c:	b.ne	426a54 <eval_buffer@@Base+0x1e04>  // b.any
  426a20:	ldr	x0, [sp, #456]
  426a24:	ldr	x0, [x0, #8]
  426a28:	mov	x6, #0x0                   	// #0
  426a2c:	mov	x5, #0x0                   	// #0
  426a30:	mov	w4, #0x0                   	// #0
  426a34:	mov	w3, #0x2                   	// #2
  426a38:	mov	x2, x0
  426a3c:	mov	x1, #0xd                   	// #13
  426a40:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426a44:	add	x0, x0, #0xfb0
  426a48:	bl	4316d8 <define_variable_in_set@@Base>
  426a4c:	b	426ac4 <eval_buffer@@Base+0x1e74>
  426a50:	nop
  426a54:	ldr	x0, [sp, #456]
  426a58:	ldr	x0, [x0]
  426a5c:	str	x0, [sp, #456]
  426a60:	ldr	x0, [sp, #456]
  426a64:	cmp	x0, #0x0
  426a68:	b.ne	4266e0 <eval_buffer@@Base+0x1a90>  // b.any
  426a6c:	b	425040 <eval_buffer@@Base+0x3f0>
  426a70:	nop
  426a74:	b	425040 <eval_buffer@@Base+0x3f0>
  426a78:	nop
  426a7c:	b	425040 <eval_buffer@@Base+0x3f0>
  426a80:	nop
  426a84:	b	425040 <eval_buffer@@Base+0x3f0>
  426a88:	nop
  426a8c:	b	425040 <eval_buffer@@Base+0x3f0>
  426a90:	nop
  426a94:	b	425040 <eval_buffer@@Base+0x3f0>
  426a98:	nop
  426a9c:	b	425040 <eval_buffer@@Base+0x3f0>
  426aa0:	nop
  426aa4:	b	425040 <eval_buffer@@Base+0x3f0>
  426aa8:	nop
  426aac:	b	425040 <eval_buffer@@Base+0x3f0>
  426ab0:	nop
  426ab4:	b	425040 <eval_buffer@@Base+0x3f0>
  426ab8:	nop
  426abc:	b	425040 <eval_buffer@@Base+0x3f0>
  426ac0:	nop
  426ac4:	b	425040 <eval_buffer@@Base+0x3f0>
  426ac8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426acc:	add	x0, x0, #0xfc0
  426ad0:	bl	406e40 <gettext@plt>
  426ad4:	mov	x2, x0
  426ad8:	mov	x1, #0x0                   	// #0
  426adc:	ldr	x0, [sp, #432]
  426ae0:	bl	424098 <fatal@@Base>
  426ae4:	ldr	x0, [sp, #616]
  426ae8:	cmp	x0, #0x0
  426aec:	b.eq	426b3c <eval_buffer@@Base+0x1eec>  // b.none
  426af0:	ldr	w0, [sp, #640]
  426af4:	str	x0, [sp, #200]
  426af8:	str	xzr, [sp, #208]
  426afc:	add	x0, sp, #0xc0
  426b00:	str	x0, [sp, #16]
  426b04:	ldrb	w0, [sp, #595]
  426b08:	strb	w0, [sp, #8]
  426b0c:	ldr	w0, [sp, #596]
  426b10:	str	w0, [sp]
  426b14:	ldr	x7, [sp, #648]
  426b18:	ldr	x6, [sp, #656]
  426b1c:	ldr	w5, [sp, #644]
  426b20:	ldr	x4, [sp, #608]
  426b24:	ldr	x3, [sp, #576]
  426b28:	ldr	x2, [sp, #584]
  426b2c:	ldr	w1, [sp, #624]
  426b30:	ldr	x0, [sp, #616]
  426b34:	bl	428240 <eval_buffer@@Base+0x35f0>
  426b38:	str	xzr, [sp, #616]
  426b3c:	str	xzr, [sp, #648]
  426b40:	str	wzr, [sp, #628]
  426b44:	str	xzr, [sp, #584]
  426b48:	str	wzr, [sp, #624]
  426b4c:	ldr	x0, [sp, #680]
  426b50:	bl	406c00 <free@plt>
  426b54:	ldr	x0, [sp, #656]
  426b58:	bl	406c00 <free@plt>
  426b5c:	nop
  426b60:	ldp	x19, x20, [sp, #48]
  426b64:	ldp	x29, x30, [sp, #32]
  426b68:	add	sp, sp, #0x2b0
  426b6c:	ret
  426b70:	stp	x29, x30, [sp, #-48]!
  426b74:	mov	x29, sp
  426b78:	str	x0, [sp, #24]
  426b7c:	mov	w1, #0x4008                	// #16392
  426b80:	ldr	x0, [sp, #24]
  426b84:	bl	428f24 <eval_buffer@@Base+0x42d4>
  426b88:	str	x0, [sp, #40]
  426b8c:	ldr	x0, [sp, #40]
  426b90:	cmp	x0, #0x0
  426b94:	b.eq	426ba0 <eval_buffer@@Base+0x1f50>  // b.none
  426b98:	ldr	x0, [sp, #40]
  426b9c:	strb	wzr, [x0]
  426ba0:	nop
  426ba4:	ldp	x29, x30, [sp], #48
  426ba8:	ret
  426bac:	stp	x29, x30, [sp, #-80]!
  426bb0:	mov	x29, sp
  426bb4:	str	x19, [sp, #16]
  426bb8:	str	x0, [sp, #56]
  426bbc:	str	w1, [sp, #52]
  426bc0:	str	x2, [sp, #40]
  426bc4:	mov	x1, #0x0                   	// #0
  426bc8:	ldr	x0, [sp, #56]
  426bcc:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  426bd0:	str	x0, [sp, #64]
  426bd4:	ldr	x0, [sp, #64]
  426bd8:	bl	4228a0 <next_token@@Base>
  426bdc:	str	x0, [sp, #56]
  426be0:	ldr	x0, [sp, #56]
  426be4:	ldrb	w0, [x0]
  426be8:	cmp	w0, #0x0
  426bec:	b.ne	426c14 <eval_buffer@@Base+0x1fc4>  // b.any
  426bf0:	ldr	x0, [sp, #40]
  426bf4:	add	x19, x0, #0x28
  426bf8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426bfc:	add	x0, x0, #0xfd0
  426c00:	bl	406e40 <gettext@plt>
  426c04:	mov	x2, x0
  426c08:	mov	x1, #0x0                   	// #0
  426c0c:	mov	x0, x19
  426c10:	bl	424098 <fatal@@Base>
  426c14:	ldr	x0, [sp, #56]
  426c18:	bl	4066f0 <strlen@plt>
  426c1c:	sub	x0, x0, #0x1
  426c20:	ldr	x1, [sp, #56]
  426c24:	add	x0, x1, x0
  426c28:	str	x0, [sp, #72]
  426c2c:	b	426c3c <eval_buffer@@Base+0x1fec>
  426c30:	ldr	x0, [sp, #72]
  426c34:	sub	x0, x0, #0x1
  426c38:	str	x0, [sp, #72]
  426c3c:	ldr	x1, [sp, #72]
  426c40:	ldr	x0, [sp, #56]
  426c44:	cmp	x1, x0
  426c48:	b.ls	426c74 <eval_buffer@@Base+0x2024>  // b.plast
  426c4c:	ldr	x0, [sp, #72]
  426c50:	ldrb	w0, [x0]
  426c54:	mov	w1, w0
  426c58:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426c5c:	add	x0, x0, #0x728
  426c60:	sxtw	x1, w1
  426c64:	ldrh	w0, [x0, x1, lsl #1]
  426c68:	and	w0, w0, #0x2
  426c6c:	cmp	w0, #0x0
  426c70:	b.ne	426c30 <eval_buffer@@Base+0x1fe0>  // b.any
  426c74:	ldr	x0, [sp, #72]
  426c78:	add	x0, x0, #0x1
  426c7c:	strb	wzr, [x0]
  426c80:	ldr	x1, [sp, #72]
  426c84:	ldr	x0, [sp, #56]
  426c88:	sub	x0, x1, x0
  426c8c:	add	x0, x0, #0x1
  426c90:	mov	x3, #0x0                   	// #0
  426c94:	ldr	w2, [sp, #52]
  426c98:	mov	x1, x0
  426c9c:	ldr	x0, [sp, #56]
  426ca0:	bl	431b50 <undefine_variable_in_set@@Base>
  426ca4:	ldr	x0, [sp, #64]
  426ca8:	bl	406c00 <free@plt>
  426cac:	nop
  426cb0:	ldr	x19, [sp, #16]
  426cb4:	ldp	x29, x30, [sp], #80
  426cb8:	ret
  426cbc:	stp	x29, x30, [sp, #-224]!
  426cc0:	mov	x29, sp
  426cc4:	str	x19, [sp, #16]
  426cc8:	str	x0, [sp, #56]
  426ccc:	str	w1, [sp, #52]
  426cd0:	str	x2, [sp, #40]
  426cd4:	mov	w0, #0x1                   	// #1
  426cd8:	str	w0, [sp, #220]
  426cdc:	mov	x0, #0x64                  	// #100
  426ce0:	str	x0, [sp, #208]
  426ce4:	ldr	x0, [sp, #208]
  426ce8:	bl	42268c <xmalloc@@Base>
  426cec:	str	x0, [sp, #200]
  426cf0:	str	xzr, [sp, #192]
  426cf4:	ldr	x0, [sp, #40]
  426cf8:	add	x0, x0, #0x28
  426cfc:	add	x2, sp, #0x48
  426d00:	mov	x3, x0
  426d04:	ldp	x0, x1, [x3]
  426d08:	stp	x0, x1, [x2]
  426d0c:	ldr	x0, [x3, #16]
  426d10:	str	x0, [x2, #16]
  426d14:	add	x0, sp, #0x60
  426d18:	mov	x1, x0
  426d1c:	ldr	x0, [sp, #56]
  426d20:	bl	433960 <parse_variable_definition@@Base>
  426d24:	str	x0, [sp, #184]
  426d28:	ldr	x0, [sp, #184]
  426d2c:	cmp	x0, #0x0
  426d30:	b.ne	426d48 <eval_buffer@@Base+0x20f8>  // b.any
  426d34:	ldrh	w0, [sp, #142]
  426d38:	mov	w1, #0x2                   	// #2
  426d3c:	bfi	w0, w1, #7, #3
  426d40:	strh	w0, [sp, #142]
  426d44:	b	426d8c <eval_buffer@@Base+0x213c>
  426d48:	ldr	x0, [sp, #104]
  426d4c:	ldrb	w0, [x0]
  426d50:	cmp	w0, #0x0
  426d54:	b.eq	426d78 <eval_buffer@@Base+0x2128>  // b.none
  426d58:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426d5c:	add	x0, x0, #0xfe8
  426d60:	bl	406e40 <gettext@plt>
  426d64:	mov	x1, x0
  426d68:	add	x0, sp, #0x48
  426d6c:	mov	x2, x1
  426d70:	mov	x1, #0x0                   	// #0
  426d74:	bl	423e74 <error@@Base>
  426d78:	ldr	x1, [sp, #96]
  426d7c:	ldr	w0, [sp, #136]
  426d80:	mov	w0, w0
  426d84:	add	x0, x1, x0
  426d88:	strb	wzr, [x0]
  426d8c:	mov	x1, #0x0                   	// #0
  426d90:	ldr	x0, [sp, #56]
  426d94:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  426d98:	str	x0, [sp, #176]
  426d9c:	ldr	x0, [sp, #176]
  426da0:	bl	4228a0 <next_token@@Base>
  426da4:	str	x0, [sp, #56]
  426da8:	ldr	x0, [sp, #56]
  426dac:	ldrb	w0, [x0]
  426db0:	cmp	w0, #0x0
  426db4:	b.ne	426dd8 <eval_buffer@@Base+0x2188>  // b.any
  426db8:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426dbc:	add	x0, x0, #0xfd0
  426dc0:	bl	406e40 <gettext@plt>
  426dc4:	mov	x1, x0
  426dc8:	add	x0, sp, #0x48
  426dcc:	mov	x2, x1
  426dd0:	mov	x1, #0x0                   	// #0
  426dd4:	bl	424098 <fatal@@Base>
  426dd8:	ldr	x0, [sp, #56]
  426ddc:	bl	4066f0 <strlen@plt>
  426de0:	sub	x0, x0, #0x1
  426de4:	ldr	x1, [sp, #56]
  426de8:	add	x0, x1, x0
  426dec:	str	x0, [sp, #184]
  426df0:	b	426e00 <eval_buffer@@Base+0x21b0>
  426df4:	ldr	x0, [sp, #184]
  426df8:	sub	x0, x0, #0x1
  426dfc:	str	x0, [sp, #184]
  426e00:	ldr	x1, [sp, #184]
  426e04:	ldr	x0, [sp, #56]
  426e08:	cmp	x1, x0
  426e0c:	b.ls	426e38 <eval_buffer@@Base+0x21e8>  // b.plast
  426e10:	ldr	x0, [sp, #184]
  426e14:	ldrb	w0, [x0]
  426e18:	mov	w1, w0
  426e1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426e20:	add	x0, x0, #0x728
  426e24:	sxtw	x1, w1
  426e28:	ldrh	w0, [x0, x1, lsl #1]
  426e2c:	and	w0, w0, #0x2
  426e30:	cmp	w0, #0x0
  426e34:	b.ne	426df4 <eval_buffer@@Base+0x21a4>  // b.any
  426e38:	ldr	x0, [sp, #184]
  426e3c:	add	x0, x0, #0x1
  426e40:	strb	wzr, [x0]
  426e44:	ldr	x0, [sp, #40]
  426e48:	bl	4298a0 <find_percent_cached@@Base+0x3b0>
  426e4c:	str	x0, [sp, #168]
  426e50:	ldr	x0, [sp, #168]
  426e54:	cmp	x0, #0x0
  426e58:	b.ge	426e7c <eval_buffer@@Base+0x222c>  // b.tcont
  426e5c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  426e60:	add	x0, x0, #0x18
  426e64:	bl	406e40 <gettext@plt>
  426e68:	mov	x1, x0
  426e6c:	add	x0, sp, #0x48
  426e70:	mov	x2, x1
  426e74:	mov	x1, #0x0                   	// #0
  426e78:	bl	424098 <fatal@@Base>
  426e7c:	ldr	x0, [sp, #40]
  426e80:	ldr	x1, [x0, #48]
  426e84:	ldr	x0, [sp, #168]
  426e88:	add	x1, x1, x0
  426e8c:	ldr	x0, [sp, #40]
  426e90:	str	x1, [x0, #48]
  426e94:	ldr	x0, [sp, #40]
  426e98:	ldr	x0, [x0]
  426e9c:	str	x0, [sp, #160]
  426ea0:	ldr	x0, [sp, #160]
  426ea4:	bl	422180 <collapse_continuations@@Base>
  426ea8:	ldr	x0, [sp, #160]
  426eac:	ldrb	w1, [x0]
  426eb0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426eb4:	add	x0, x0, #0x1f8
  426eb8:	ldrb	w0, [x0]
  426ebc:	cmp	w1, w0
  426ec0:	b.eq	427010 <eval_buffer@@Base+0x23c0>  // b.none
  426ec4:	ldr	x0, [sp, #160]
  426ec8:	bl	4228a0 <next_token@@Base>
  426ecc:	str	x0, [sp, #184]
  426ed0:	ldr	x0, [sp, #184]
  426ed4:	bl	4066f0 <strlen@plt>
  426ed8:	str	x0, [sp, #152]
  426edc:	ldr	x0, [sp, #152]
  426ee0:	cmp	x0, #0x6
  426ee4:	b.eq	426f20 <eval_buffer@@Base+0x22d0>  // b.none
  426ee8:	ldr	x0, [sp, #152]
  426eec:	cmp	x0, #0x6
  426ef0:	b.ls	426f4c <eval_buffer@@Base+0x22fc>  // b.plast
  426ef4:	ldr	x0, [sp, #184]
  426ef8:	add	x0, x0, #0x6
  426efc:	ldrb	w0, [x0]
  426f00:	mov	w1, w0
  426f04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426f08:	add	x0, x0, #0x728
  426f0c:	sxtw	x1, w1
  426f10:	ldrh	w0, [x0, x1, lsl #1]
  426f14:	and	w0, w0, #0x2
  426f18:	cmp	w0, #0x0
  426f1c:	b.eq	426f4c <eval_buffer@@Base+0x22fc>  // b.none
  426f20:	mov	x2, #0x6                   	// #6
  426f24:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426f28:	add	x1, x0, #0xdb0
  426f2c:	ldr	x0, [sp, #184]
  426f30:	bl	406990 <strncmp@plt>
  426f34:	cmp	w0, #0x0
  426f38:	b.ne	426f4c <eval_buffer@@Base+0x22fc>  // b.any
  426f3c:	ldr	w0, [sp, #220]
  426f40:	add	w0, w0, #0x1
  426f44:	str	w0, [sp, #220]
  426f48:	b	427010 <eval_buffer@@Base+0x23c0>
  426f4c:	ldr	x0, [sp, #152]
  426f50:	cmp	x0, #0x5
  426f54:	b.eq	426f90 <eval_buffer@@Base+0x2340>  // b.none
  426f58:	ldr	x0, [sp, #152]
  426f5c:	cmp	x0, #0x5
  426f60:	b.ls	427010 <eval_buffer@@Base+0x23c0>  // b.plast
  426f64:	ldr	x0, [sp, #184]
  426f68:	add	x0, x0, #0x5
  426f6c:	ldrb	w0, [x0]
  426f70:	mov	w1, w0
  426f74:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  426f78:	add	x0, x0, #0x728
  426f7c:	sxtw	x1, w1
  426f80:	ldrh	w0, [x0, x1, lsl #1]
  426f84:	and	w0, w0, #0x2
  426f88:	cmp	w0, #0x0
  426f8c:	b.eq	427010 <eval_buffer@@Base+0x23c0>  // b.none
  426f90:	mov	x2, #0x5                   	// #5
  426f94:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  426f98:	add	x1, x0, #0xe18
  426f9c:	ldr	x0, [sp, #184]
  426fa0:	bl	406990 <strncmp@plt>
  426fa4:	cmp	w0, #0x0
  426fa8:	b.ne	427010 <eval_buffer@@Base+0x23c0>  // b.any
  426fac:	ldr	x0, [sp, #184]
  426fb0:	add	x0, x0, #0x5
  426fb4:	str	x0, [sp, #184]
  426fb8:	ldr	x0, [sp, #184]
  426fbc:	bl	426b70 <eval_buffer@@Base+0x1f20>
  426fc0:	ldr	x0, [sp, #184]
  426fc4:	bl	4228a0 <next_token@@Base>
  426fc8:	ldrb	w0, [x0]
  426fcc:	cmp	w0, #0x0
  426fd0:	b.eq	426ff8 <eval_buffer@@Base+0x23a8>  // b.none
  426fd4:	ldr	x0, [sp, #40]
  426fd8:	add	x19, x0, #0x28
  426fdc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  426fe0:	add	x0, x0, #0x40
  426fe4:	bl	406e40 <gettext@plt>
  426fe8:	mov	x2, x0
  426fec:	mov	x1, #0x0                   	// #0
  426ff0:	mov	x0, x19
  426ff4:	bl	423e74 <error@@Base>
  426ff8:	ldr	w0, [sp, #220]
  426ffc:	sub	w0, w0, #0x1
  427000:	str	w0, [sp, #220]
  427004:	ldr	w0, [sp, #220]
  427008:	cmp	w0, #0x0
  42700c:	b.eq	4270ac <eval_buffer@@Base+0x245c>  // b.none
  427010:	ldr	x0, [sp, #160]
  427014:	bl	4066f0 <strlen@plt>
  427018:	str	x0, [sp, #152]
  42701c:	ldr	x1, [sp, #192]
  427020:	ldr	x0, [sp, #152]
  427024:	add	x0, x1, x0
  427028:	add	x0, x0, #0x1
  42702c:	ldr	x1, [sp, #208]
  427030:	cmp	x1, x0
  427034:	b.cs	427064 <eval_buffer@@Base+0x2414>  // b.hs, b.nlast
  427038:	ldr	x1, [sp, #192]
  42703c:	ldr	x0, [sp, #152]
  427040:	add	x0, x1, x0
  427044:	lsl	x0, x0, #1
  427048:	str	x0, [sp, #208]
  42704c:	ldr	x0, [sp, #208]
  427050:	add	x0, x0, #0x1
  427054:	mov	x1, x0
  427058:	ldr	x0, [sp, #200]
  42705c:	bl	422720 <xrealloc@@Base>
  427060:	str	x0, [sp, #200]
  427064:	ldr	x1, [sp, #200]
  427068:	ldr	x0, [sp, #192]
  42706c:	add	x0, x1, x0
  427070:	ldr	x2, [sp, #152]
  427074:	ldr	x1, [sp, #160]
  427078:	bl	4066b0 <memcpy@plt>
  42707c:	ldr	x1, [sp, #192]
  427080:	ldr	x0, [sp, #152]
  427084:	add	x0, x1, x0
  427088:	str	x0, [sp, #192]
  42708c:	ldr	x0, [sp, #192]
  427090:	add	x1, x0, #0x1
  427094:	str	x1, [sp, #192]
  427098:	ldr	x1, [sp, #200]
  42709c:	add	x0, x1, x0
  4270a0:	mov	w1, #0xa                   	// #10
  4270a4:	strb	w1, [x0]
  4270a8:	b	426e44 <eval_buffer@@Base+0x21f4>
  4270ac:	nop
  4270b0:	ldr	x0, [sp, #192]
  4270b4:	cmp	x0, #0x0
  4270b8:	b.ne	4270c8 <eval_buffer@@Base+0x2478>  // b.any
  4270bc:	ldr	x0, [sp, #200]
  4270c0:	strb	wzr, [x0]
  4270c4:	b	4270dc <eval_buffer@@Base+0x248c>
  4270c8:	ldr	x0, [sp, #192]
  4270cc:	sub	x0, x0, #0x1
  4270d0:	ldr	x1, [sp, #200]
  4270d4:	add	x0, x1, x0
  4270d8:	strb	wzr, [x0]
  4270dc:	ldrh	w0, [sp, #142]
  4270e0:	ubfx	x0, x0, #7, #3
  4270e4:	and	w0, w0, #0xff
  4270e8:	mov	w1, w0
  4270ec:	add	x0, sp, #0x48
  4270f0:	mov	w5, #0x0                   	// #0
  4270f4:	mov	w4, w1
  4270f8:	ldr	w3, [sp, #52]
  4270fc:	ldr	x2, [sp, #200]
  427100:	ldr	x1, [sp, #56]
  427104:	bl	433588 <do_variable_definition@@Base>
  427108:	str	x0, [sp, #144]
  42710c:	ldr	x0, [sp, #200]
  427110:	bl	406c00 <free@plt>
  427114:	ldr	x0, [sp, #176]
  427118:	bl	406c00 <free@plt>
  42711c:	ldr	x0, [sp, #144]
  427120:	ldr	x19, [sp, #16]
  427124:	ldp	x29, x30, [sp], #224
  427128:	ret
  42712c:	stp	x29, x30, [sp, #-176]!
  427130:	mov	x29, sp
  427134:	str	x19, [sp, #16]
  427138:	str	x0, [x29, #56]
  42713c:	str	x1, [x29, #48]
  427140:	str	x2, [x29, #40]
  427144:	ldr	x0, [x29, #48]
  427148:	cmp	x0, #0x5
  42714c:	b.ne	427180 <eval_buffer@@Base+0x2530>  // b.any
  427150:	mov	x2, #0x5                   	// #5
  427154:	ldr	x1, [x29, #56]
  427158:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42715c:	add	x0, x0, #0x68
  427160:	bl	406990 <strncmp@plt>
  427164:	cmp	w0, #0x0
  427168:	b.ne	427180 <eval_buffer@@Base+0x2530>  // b.any
  42716c:	str	wzr, [x29, #164]
  427170:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427174:	add	x0, x0, #0x68
  427178:	str	x0, [x29, #168]
  42717c:	b	4272c8 <eval_buffer@@Base+0x2678>
  427180:	ldr	x0, [x29, #48]
  427184:	cmp	x0, #0x6
  427188:	b.ne	4271c0 <eval_buffer@@Base+0x2570>  // b.any
  42718c:	mov	x2, #0x6                   	// #6
  427190:	ldr	x1, [x29, #56]
  427194:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427198:	add	x0, x0, #0x70
  42719c:	bl	406990 <strncmp@plt>
  4271a0:	cmp	w0, #0x0
  4271a4:	b.ne	4271c0 <eval_buffer@@Base+0x2570>  // b.any
  4271a8:	mov	w0, #0x1                   	// #1
  4271ac:	str	w0, [x29, #164]
  4271b0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4271b4:	add	x0, x0, #0x70
  4271b8:	str	x0, [x29, #168]
  4271bc:	b	4272c8 <eval_buffer@@Base+0x2678>
  4271c0:	ldr	x0, [x29, #48]
  4271c4:	cmp	x0, #0x4
  4271c8:	b.ne	427200 <eval_buffer@@Base+0x25b0>  // b.any
  4271cc:	mov	x2, #0x4                   	// #4
  4271d0:	ldr	x1, [x29, #56]
  4271d4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4271d8:	add	x0, x0, #0x78
  4271dc:	bl	406990 <strncmp@plt>
  4271e0:	cmp	w0, #0x0
  4271e4:	b.ne	427200 <eval_buffer@@Base+0x25b0>  // b.any
  4271e8:	mov	w0, #0x2                   	// #2
  4271ec:	str	w0, [x29, #164]
  4271f0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4271f4:	add	x0, x0, #0x78
  4271f8:	str	x0, [x29, #168]
  4271fc:	b	4272c8 <eval_buffer@@Base+0x2678>
  427200:	ldr	x0, [x29, #48]
  427204:	cmp	x0, #0x5
  427208:	b.ne	427240 <eval_buffer@@Base+0x25f0>  // b.any
  42720c:	mov	x2, #0x5                   	// #5
  427210:	ldr	x1, [x29, #56]
  427214:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427218:	add	x0, x0, #0x80
  42721c:	bl	406990 <strncmp@plt>
  427220:	cmp	w0, #0x0
  427224:	b.ne	427240 <eval_buffer@@Base+0x25f0>  // b.any
  427228:	mov	w0, #0x3                   	// #3
  42722c:	str	w0, [x29, #164]
  427230:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427234:	add	x0, x0, #0x80
  427238:	str	x0, [x29, #168]
  42723c:	b	4272c8 <eval_buffer@@Base+0x2678>
  427240:	ldr	x0, [x29, #48]
  427244:	cmp	x0, #0x4
  427248:	b.ne	427280 <eval_buffer@@Base+0x2630>  // b.any
  42724c:	mov	x2, #0x4                   	// #4
  427250:	ldr	x1, [x29, #56]
  427254:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427258:	add	x0, x0, #0x88
  42725c:	bl	406990 <strncmp@plt>
  427260:	cmp	w0, #0x0
  427264:	b.ne	427280 <eval_buffer@@Base+0x2630>  // b.any
  427268:	mov	w0, #0x4                   	// #4
  42726c:	str	w0, [x29, #164]
  427270:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427274:	add	x0, x0, #0x88
  427278:	str	x0, [x29, #168]
  42727c:	b	4272c8 <eval_buffer@@Base+0x2678>
  427280:	ldr	x0, [x29, #48]
  427284:	cmp	x0, #0x5
  427288:	b.ne	4272c0 <eval_buffer@@Base+0x2670>  // b.any
  42728c:	mov	x2, #0x5                   	// #5
  427290:	ldr	x1, [x29, #56]
  427294:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427298:	add	x0, x0, #0x90
  42729c:	bl	406990 <strncmp@plt>
  4272a0:	cmp	w0, #0x0
  4272a4:	b.ne	4272c0 <eval_buffer@@Base+0x2670>  // b.any
  4272a8:	mov	w0, #0x5                   	// #5
  4272ac:	str	w0, [x29, #164]
  4272b0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4272b4:	add	x0, x0, #0x90
  4272b8:	str	x0, [x29, #168]
  4272bc:	b	4272c8 <eval_buffer@@Base+0x2678>
  4272c0:	mov	w0, #0xfffffffe            	// #-2
  4272c4:	b	427ed4 <eval_buffer@@Base+0x3284>
  4272c8:	ldr	x1, [x29, #56]
  4272cc:	ldr	x0, [x29, #48]
  4272d0:	add	x0, x1, x0
  4272d4:	str	x0, [x29, #56]
  4272d8:	b	4272e8 <eval_buffer@@Base+0x2698>
  4272dc:	ldr	x0, [x29, #56]
  4272e0:	add	x0, x0, #0x1
  4272e4:	str	x0, [x29, #56]
  4272e8:	ldr	x0, [x29, #56]
  4272ec:	ldrb	w0, [x0]
  4272f0:	mov	w1, w0
  4272f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4272f8:	add	x0, x0, #0x728
  4272fc:	sxtw	x1, w1
  427300:	ldrh	w0, [x0, x1, lsl #1]
  427304:	and	w0, w0, #0x6
  427308:	cmp	w0, #0x0
  42730c:	b.ne	4272dc <eval_buffer@@Base+0x268c>  // b.any
  427310:	ldr	w0, [x29, #164]
  427314:	cmp	w0, #0x5
  427318:	b.ne	4273b8 <eval_buffer@@Base+0x2768>  // b.any
  42731c:	ldr	x0, [x29, #56]
  427320:	ldrb	w0, [x0]
  427324:	cmp	w0, #0x0
  427328:	b.eq	427358 <eval_buffer@@Base+0x2708>  // b.none
  42732c:	ldr	x0, [x29, #168]
  427330:	bl	4066f0 <strlen@plt>
  427334:	mov	x19, x0
  427338:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42733c:	add	x0, x0, #0x98
  427340:	bl	406e40 <gettext@plt>
  427344:	ldr	x3, [x29, #168]
  427348:	mov	x2, x0
  42734c:	mov	x1, x19
  427350:	ldr	x0, [x29, #40]
  427354:	bl	423e74 <error@@Base>
  427358:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42735c:	add	x0, x0, #0x328
  427360:	ldr	x0, [x0]
  427364:	ldr	w0, [x0]
  427368:	cmp	w0, #0x0
  42736c:	b.ne	42739c <eval_buffer@@Base+0x274c>  // b.any
  427370:	ldr	x0, [x29, #168]
  427374:	bl	4066f0 <strlen@plt>
  427378:	mov	x19, x0
  42737c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427380:	add	x0, x0, #0xc0
  427384:	bl	406e40 <gettext@plt>
  427388:	ldr	x3, [x29, #168]
  42738c:	mov	x2, x0
  427390:	mov	x1, x19
  427394:	ldr	x0, [x29, #40]
  427398:	bl	424098 <fatal@@Base>
  42739c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4273a0:	add	x0, x0, #0x328
  4273a4:	ldr	x0, [x0]
  4273a8:	ldr	w1, [x0]
  4273ac:	sub	w1, w1, #0x1
  4273b0:	str	w1, [x0]
  4273b4:	b	427e74 <eval_buffer@@Base+0x3224>
  4273b8:	ldr	w0, [x29, #164]
  4273bc:	cmp	w0, #0x4
  4273c0:	b.ne	427674 <eval_buffer@@Base+0x2a24>  // b.any
  4273c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4273c8:	add	x0, x0, #0x328
  4273cc:	ldr	x0, [x0]
  4273d0:	ldr	w0, [x0]
  4273d4:	cmp	w0, #0x0
  4273d8:	b.ne	427408 <eval_buffer@@Base+0x27b8>  // b.any
  4273dc:	ldr	x0, [x29, #168]
  4273e0:	bl	4066f0 <strlen@plt>
  4273e4:	mov	x19, x0
  4273e8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4273ec:	add	x0, x0, #0xc0
  4273f0:	bl	406e40 <gettext@plt>
  4273f4:	ldr	x3, [x29, #168]
  4273f8:	mov	x2, x0
  4273fc:	mov	x1, x19
  427400:	ldr	x0, [x29, #40]
  427404:	bl	424098 <fatal@@Base>
  427408:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42740c:	add	x0, x0, #0x328
  427410:	ldr	x0, [x0]
  427414:	ldr	w0, [x0]
  427418:	sub	w0, w0, #0x1
  42741c:	str	w0, [x29, #112]
  427420:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427424:	add	x0, x0, #0x328
  427428:	ldr	x0, [x0]
  42742c:	ldr	x1, [x0, #16]
  427430:	ldr	w0, [x29, #112]
  427434:	add	x0, x1, x0
  427438:	ldrb	w0, [x0]
  42743c:	cmp	w0, #0x0
  427440:	b.eq	427460 <eval_buffer@@Base+0x2810>  // b.none
  427444:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427448:	add	x0, x0, #0xd0
  42744c:	bl	406e40 <gettext@plt>
  427450:	mov	x2, x0
  427454:	mov	x1, #0x0                   	// #0
  427458:	ldr	x0, [x29, #40]
  42745c:	bl	424098 <fatal@@Base>
  427460:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427464:	add	x0, x0, #0x328
  427468:	ldr	x0, [x0]
  42746c:	ldr	x1, [x0, #8]
  427470:	ldr	w0, [x29, #112]
  427474:	add	x0, x1, x0
  427478:	ldrb	w0, [x0]
  42747c:	cmp	w0, #0x0
  427480:	b.eq	427490 <eval_buffer@@Base+0x2840>  // b.none
  427484:	cmp	w0, #0x1
  427488:	b.eq	4274b4 <eval_buffer@@Base+0x2864>  // b.none
  42748c:	b	4274d4 <eval_buffer@@Base+0x2884>
  427490:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427494:	add	x0, x0, #0x328
  427498:	ldr	x0, [x0]
  42749c:	ldr	x1, [x0, #8]
  4274a0:	ldr	w0, [x29, #112]
  4274a4:	add	x0, x1, x0
  4274a8:	mov	w1, #0x2                   	// #2
  4274ac:	strb	w1, [x0]
  4274b0:	b	4274d4 <eval_buffer@@Base+0x2884>
  4274b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4274b8:	add	x0, x0, #0x328
  4274bc:	ldr	x0, [x0]
  4274c0:	ldr	x1, [x0, #8]
  4274c4:	ldr	w0, [x29, #112]
  4274c8:	add	x0, x1, x0
  4274cc:	strb	wzr, [x0]
  4274d0:	nop
  4274d4:	ldr	x0, [x29, #56]
  4274d8:	ldrb	w0, [x0]
  4274dc:	cmp	w0, #0x0
  4274e0:	b.ne	427508 <eval_buffer@@Base+0x28b8>  // b.any
  4274e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4274e8:	add	x0, x0, #0x328
  4274ec:	ldr	x0, [x0]
  4274f0:	ldr	x1, [x0, #16]
  4274f4:	ldr	w0, [x29, #112]
  4274f8:	add	x0, x1, x0
  4274fc:	mov	w1, #0x1                   	// #1
  427500:	strb	w1, [x0]
  427504:	b	427e74 <eval_buffer@@Base+0x3224>
  427508:	ldr	x0, [x29, #56]
  42750c:	add	x0, x0, #0x1
  427510:	str	x0, [x29, #152]
  427514:	b	427524 <eval_buffer@@Base+0x28d4>
  427518:	ldr	x0, [x29, #152]
  42751c:	add	x0, x0, #0x1
  427520:	str	x0, [x29, #152]
  427524:	ldr	x0, [x29, #152]
  427528:	ldrb	w0, [x0]
  42752c:	mov	w1, w0
  427530:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427534:	add	x0, x0, #0x728
  427538:	sxtw	x1, w1
  42753c:	ldrh	w0, [x0, x1, lsl #1]
  427540:	and	w0, w0, #0x7
  427544:	cmp	w0, #0x0
  427548:	b.eq	427518 <eval_buffer@@Base+0x28c8>  // b.none
  42754c:	ldr	x1, [x29, #152]
  427550:	ldr	x0, [x29, #56]
  427554:	sub	x0, x1, x0
  427558:	str	x0, [x29, #48]
  42755c:	ldr	x0, [x29, #48]
  427560:	cmp	x0, #0x4
  427564:	b.ne	427584 <eval_buffer@@Base+0x2934>  // b.any
  427568:	mov	x2, #0x4                   	// #4
  42756c:	ldr	x1, [x29, #56]
  427570:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427574:	add	x0, x0, #0x88
  427578:	bl	406990 <strncmp@plt>
  42757c:	cmp	w0, #0x0
  427580:	b.eq	4275c4 <eval_buffer@@Base+0x2974>  // b.none
  427584:	ldr	x0, [x29, #48]
  427588:	cmp	x0, #0x5
  42758c:	b.ne	4275ac <eval_buffer@@Base+0x295c>  // b.any
  427590:	mov	x2, #0x5                   	// #5
  427594:	ldr	x1, [x29, #56]
  427598:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42759c:	add	x0, x0, #0x90
  4275a0:	bl	406990 <strncmp@plt>
  4275a4:	cmp	w0, #0x0
  4275a8:	b.eq	4275c4 <eval_buffer@@Base+0x2974>  // b.none
  4275ac:	ldr	x2, [x29, #40]
  4275b0:	ldr	x1, [x29, #48]
  4275b4:	ldr	x0, [x29, #56]
  4275b8:	bl	42712c <eval_buffer@@Base+0x24dc>
  4275bc:	cmp	w0, #0x0
  4275c0:	b.ge	4275f4 <eval_buffer@@Base+0x29a4>  // b.tcont
  4275c4:	ldr	x0, [x29, #168]
  4275c8:	bl	4066f0 <strlen@plt>
  4275cc:	mov	x19, x0
  4275d0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4275d4:	add	x0, x0, #0x98
  4275d8:	bl	406e40 <gettext@plt>
  4275dc:	ldr	x3, [x29, #168]
  4275e0:	mov	x2, x0
  4275e4:	mov	x1, x19
  4275e8:	ldr	x0, [x29, #40]
  4275ec:	bl	423e74 <error@@Base>
  4275f0:	b	427e74 <eval_buffer@@Base+0x3224>
  4275f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4275f8:	add	x0, x0, #0x328
  4275fc:	ldr	x0, [x0]
  427600:	ldr	x1, [x0, #8]
  427604:	ldr	w0, [x29, #112]
  427608:	add	x0, x1, x0
  42760c:	ldrb	w0, [x0]
  427610:	cmp	w0, #0x1
  427614:	b.hi	427658 <eval_buffer@@Base+0x2a08>  // b.pmore
  427618:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42761c:	add	x0, x0, #0x328
  427620:	ldr	x0, [x0]
  427624:	ldr	x1, [x0, #8]
  427628:	ldr	w0, [x29, #112]
  42762c:	add	w0, w0, #0x1
  427630:	mov	w0, w0
  427634:	add	x1, x1, x0
  427638:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42763c:	add	x0, x0, #0x328
  427640:	ldr	x0, [x0]
  427644:	ldr	x2, [x0, #8]
  427648:	ldr	w0, [x29, #112]
  42764c:	add	x0, x2, x0
  427650:	ldrb	w1, [x1]
  427654:	strb	w1, [x0]
  427658:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42765c:	add	x0, x0, #0x328
  427660:	ldr	x0, [x0]
  427664:	ldr	w1, [x0]
  427668:	sub	w1, w1, #0x1
  42766c:	str	w1, [x0]
  427670:	b	427e74 <eval_buffer@@Base+0x3224>
  427674:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427678:	add	x0, x0, #0x328
  42767c:	ldr	x0, [x0]
  427680:	ldr	w0, [x0, #4]
  427684:	cmp	w0, #0x0
  427688:	b.ne	4276f8 <eval_buffer@@Base+0x2aa8>  // b.any
  42768c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427690:	add	x0, x0, #0x328
  427694:	ldr	x0, [x0]
  427698:	mov	w1, #0x5                   	// #5
  42769c:	str	w1, [x0, #4]
  4276a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4276a4:	add	x0, x0, #0x328
  4276a8:	ldr	x0, [x0]
  4276ac:	ldr	w0, [x0, #4]
  4276b0:	mov	w1, w0
  4276b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4276b8:	add	x0, x0, #0x328
  4276bc:	ldr	x19, [x0]
  4276c0:	mov	x0, x1
  4276c4:	bl	42268c <xmalloc@@Base>
  4276c8:	str	x0, [x19, #8]
  4276cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4276d0:	add	x0, x0, #0x328
  4276d4:	ldr	x0, [x0]
  4276d8:	ldr	w0, [x0, #4]
  4276dc:	mov	w1, w0
  4276e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4276e4:	add	x0, x0, #0x328
  4276e8:	ldr	x19, [x0]
  4276ec:	mov	x0, x1
  4276f0:	bl	42268c <xmalloc@@Base>
  4276f4:	str	x0, [x19, #16]
  4276f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4276fc:	add	x0, x0, #0x328
  427700:	ldr	x1, [x0]
  427704:	ldr	w0, [x1]
  427708:	add	w2, w0, #0x1
  42770c:	str	w2, [x1]
  427710:	str	w0, [x29, #112]
  427714:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427718:	add	x0, x0, #0x328
  42771c:	ldr	x0, [x0]
  427720:	ldr	w1, [x0]
  427724:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427728:	add	x0, x0, #0x328
  42772c:	ldr	x0, [x0]
  427730:	ldr	w0, [x0, #4]
  427734:	cmp	w1, w0
  427738:	b.ls	4277d8 <eval_buffer@@Base+0x2b88>  // b.plast
  42773c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427740:	add	x0, x0, #0x328
  427744:	ldr	x0, [x0]
  427748:	ldr	w1, [x0, #4]
  42774c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427750:	add	x0, x0, #0x328
  427754:	ldr	x0, [x0]
  427758:	add	w1, w1, #0x5
  42775c:	str	w1, [x0, #4]
  427760:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427764:	add	x0, x0, #0x328
  427768:	ldr	x0, [x0]
  42776c:	ldr	x2, [x0, #8]
  427770:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427774:	add	x0, x0, #0x328
  427778:	ldr	x0, [x0]
  42777c:	ldr	w0, [x0, #4]
  427780:	mov	w1, w0
  427784:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427788:	add	x0, x0, #0x328
  42778c:	ldr	x19, [x0]
  427790:	mov	x0, x2
  427794:	bl	422720 <xrealloc@@Base>
  427798:	str	x0, [x19, #8]
  42779c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4277a0:	add	x0, x0, #0x328
  4277a4:	ldr	x0, [x0]
  4277a8:	ldr	x2, [x0, #16]
  4277ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4277b0:	add	x0, x0, #0x328
  4277b4:	ldr	x0, [x0]
  4277b8:	ldr	w0, [x0, #4]
  4277bc:	mov	w1, w0
  4277c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4277c4:	add	x0, x0, #0x328
  4277c8:	ldr	x19, [x0]
  4277cc:	mov	x0, x2
  4277d0:	bl	422720 <xrealloc@@Base>
  4277d4:	str	x0, [x19, #16]
  4277d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4277dc:	add	x0, x0, #0x328
  4277e0:	ldr	x0, [x0]
  4277e4:	ldr	x1, [x0, #16]
  4277e8:	ldr	w0, [x29, #112]
  4277ec:	add	x0, x1, x0
  4277f0:	strb	wzr, [x0]
  4277f4:	str	wzr, [x29, #160]
  4277f8:	b	427854 <eval_buffer@@Base+0x2c04>
  4277fc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427800:	add	x0, x0, #0x328
  427804:	ldr	x0, [x0]
  427808:	ldr	x1, [x0, #8]
  42780c:	ldr	w0, [x29, #160]
  427810:	add	x0, x1, x0
  427814:	ldrb	w0, [x0]
  427818:	cmp	w0, #0x0
  42781c:	b.eq	427848 <eval_buffer@@Base+0x2bf8>  // b.none
  427820:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427824:	add	x0, x0, #0x328
  427828:	ldr	x0, [x0]
  42782c:	ldr	x1, [x0, #8]
  427830:	ldr	w0, [x29, #112]
  427834:	add	x0, x1, x0
  427838:	mov	w1, #0x1                   	// #1
  42783c:	strb	w1, [x0]
  427840:	mov	w0, #0x1                   	// #1
  427844:	b	427ed4 <eval_buffer@@Base+0x3284>
  427848:	ldr	w0, [x29, #160]
  42784c:	add	w0, w0, #0x1
  427850:	str	w0, [x29, #160]
  427854:	ldr	w1, [x29, #160]
  427858:	ldr	w0, [x29, #112]
  42785c:	cmp	w1, w0
  427860:	b.cc	4277fc <eval_buffer@@Base+0x2bac>  // b.lo, b.ul, b.last
  427864:	ldr	w0, [x29, #164]
  427868:	cmp	w0, #0x0
  42786c:	b.eq	42787c <eval_buffer@@Base+0x2c2c>  // b.none
  427870:	ldr	w0, [x29, #164]
  427874:	cmp	w0, #0x1
  427878:	b.ne	427998 <eval_buffer@@Base+0x2d48>  // b.any
  42787c:	mov	x1, #0x0                   	// #0
  427880:	ldr	x0, [x29, #56]
  427884:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  427888:	str	x0, [x29, #80]
  42788c:	ldr	x0, [x29, #80]
  427890:	bl	422854 <end_of_token@@Base>
  427894:	str	x0, [x29, #144]
  427898:	ldr	x1, [x29, #144]
  42789c:	ldr	x0, [x29, #80]
  4278a0:	sub	x0, x1, x0
  4278a4:	str	x0, [x29, #72]
  4278a8:	b	4278b8 <eval_buffer@@Base+0x2c68>
  4278ac:	ldr	x0, [x29, #144]
  4278b0:	add	x0, x0, #0x1
  4278b4:	str	x0, [x29, #144]
  4278b8:	ldr	x0, [x29, #144]
  4278bc:	ldrb	w0, [x0]
  4278c0:	mov	w1, w0
  4278c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4278c8:	add	x0, x0, #0x728
  4278cc:	sxtw	x1, w1
  4278d0:	ldrh	w0, [x0, x1, lsl #1]
  4278d4:	and	w0, w0, #0x6
  4278d8:	cmp	w0, #0x0
  4278dc:	b.ne	4278ac <eval_buffer@@Base+0x2c5c>  // b.any
  4278e0:	ldr	x0, [x29, #144]
  4278e4:	ldrb	w0, [x0]
  4278e8:	cmp	w0, #0x0
  4278ec:	b.eq	4278f8 <eval_buffer@@Base+0x2ca8>  // b.none
  4278f0:	mov	w0, #0xffffffff            	// #-1
  4278f4:	b	427ed4 <eval_buffer@@Base+0x3284>
  4278f8:	ldr	x1, [x29, #80]
  4278fc:	ldr	x0, [x29, #72]
  427900:	add	x0, x1, x0
  427904:	strb	wzr, [x0]
  427908:	ldr	x1, [x29, #72]
  42790c:	ldr	x0, [x29, #80]
  427910:	bl	431f68 <lookup_variable@@Base>
  427914:	str	x0, [x29, #64]
  427918:	ldr	x0, [x29, #64]
  42791c:	cmp	x0, #0x0
  427920:	b.eq	427940 <eval_buffer@@Base+0x2cf0>  // b.none
  427924:	ldr	x0, [x29, #64]
  427928:	ldr	x0, [x0, #8]
  42792c:	ldrb	w0, [x0]
  427930:	cmp	w0, #0x0
  427934:	b.eq	427940 <eval_buffer@@Base+0x2cf0>  // b.none
  427938:	mov	w0, #0x1                   	// #1
  42793c:	b	427944 <eval_buffer@@Base+0x2cf4>
  427940:	mov	w0, #0x0                   	// #0
  427944:	and	w0, w0, #0x1
  427948:	and	w0, w0, #0xff
  42794c:	eor	w0, w0, #0x1
  427950:	and	w1, w0, #0xff
  427954:	ldr	w0, [x29, #164]
  427958:	cmp	w0, #0x1
  42795c:	cset	w0, eq  // eq = none
  427960:	and	w0, w0, #0xff
  427964:	eor	w0, w1, w0
  427968:	and	w2, w0, #0xff
  42796c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427970:	add	x0, x0, #0x328
  427974:	ldr	x0, [x0]
  427978:	ldr	x1, [x0, #8]
  42797c:	ldr	w0, [x29, #112]
  427980:	add	x0, x1, x0
  427984:	mov	w1, w2
  427988:	strb	w1, [x0]
  42798c:	ldr	x0, [x29, #80]
  427990:	bl	406c00 <free@plt>
  427994:	b	427e74 <eval_buffer@@Base+0x3224>
  427998:	ldr	x0, [x29, #56]
  42799c:	ldrb	w0, [x0]
  4279a0:	cmp	w0, #0x28
  4279a4:	b.eq	4279b4 <eval_buffer@@Base+0x2d64>  // b.none
  4279a8:	ldr	x0, [x29, #56]
  4279ac:	ldrb	w0, [x0]
  4279b0:	b	4279b8 <eval_buffer@@Base+0x2d68>
  4279b4:	mov	w0, #0x2c                  	// #44
  4279b8:	strb	w0, [x29, #111]
  4279bc:	ldrb	w0, [x29, #111]
  4279c0:	cmp	w0, #0x2c
  4279c4:	b.eq	4279e8 <eval_buffer@@Base+0x2d98>  // b.none
  4279c8:	ldrb	w0, [x29, #111]
  4279cc:	cmp	w0, #0x22
  4279d0:	b.eq	4279e8 <eval_buffer@@Base+0x2d98>  // b.none
  4279d4:	ldrb	w0, [x29, #111]
  4279d8:	cmp	w0, #0x27
  4279dc:	b.eq	4279e8 <eval_buffer@@Base+0x2d98>  // b.none
  4279e0:	mov	w0, #0xffffffff            	// #-1
  4279e4:	b	427ed4 <eval_buffer@@Base+0x3284>
  4279e8:	ldr	x0, [x29, #56]
  4279ec:	add	x0, x0, #0x1
  4279f0:	str	x0, [x29, #56]
  4279f4:	ldr	x0, [x29, #56]
  4279f8:	str	x0, [x29, #96]
  4279fc:	ldrb	w0, [x29, #111]
  427a00:	cmp	w0, #0x2c
  427a04:	b.ne	427a98 <eval_buffer@@Base+0x2e48>  // b.any
  427a08:	str	wzr, [x29, #132]
  427a0c:	b	427a78 <eval_buffer@@Base+0x2e28>
  427a10:	ldr	x0, [x29, #56]
  427a14:	ldrb	w0, [x0]
  427a18:	cmp	w0, #0x28
  427a1c:	b.ne	427a30 <eval_buffer@@Base+0x2de0>  // b.any
  427a20:	ldr	w0, [x29, #132]
  427a24:	add	w0, w0, #0x1
  427a28:	str	w0, [x29, #132]
  427a2c:	b	427a6c <eval_buffer@@Base+0x2e1c>
  427a30:	ldr	x0, [x29, #56]
  427a34:	ldrb	w0, [x0]
  427a38:	cmp	w0, #0x29
  427a3c:	b.ne	427a50 <eval_buffer@@Base+0x2e00>  // b.any
  427a40:	ldr	w0, [x29, #132]
  427a44:	sub	w0, w0, #0x1
  427a48:	str	w0, [x29, #132]
  427a4c:	b	427a6c <eval_buffer@@Base+0x2e1c>
  427a50:	ldr	x0, [x29, #56]
  427a54:	ldrb	w0, [x0]
  427a58:	cmp	w0, #0x2c
  427a5c:	b.ne	427a6c <eval_buffer@@Base+0x2e1c>  // b.any
  427a60:	ldr	w0, [x29, #132]
  427a64:	cmp	w0, #0x0
  427a68:	b.le	427ac0 <eval_buffer@@Base+0x2e70>
  427a6c:	ldr	x0, [x29, #56]
  427a70:	add	x0, x0, #0x1
  427a74:	str	x0, [x29, #56]
  427a78:	ldr	x0, [x29, #56]
  427a7c:	ldrb	w0, [x0]
  427a80:	cmp	w0, #0x0
  427a84:	b.ne	427a10 <eval_buffer@@Base+0x2dc0>  // b.any
  427a88:	b	427ac4 <eval_buffer@@Base+0x2e74>
  427a8c:	ldr	x0, [x29, #56]
  427a90:	add	x0, x0, #0x1
  427a94:	str	x0, [x29, #56]
  427a98:	ldr	x0, [x29, #56]
  427a9c:	ldrb	w0, [x0]
  427aa0:	cmp	w0, #0x0
  427aa4:	b.eq	427ac4 <eval_buffer@@Base+0x2e74>  // b.none
  427aa8:	ldr	x0, [x29, #56]
  427aac:	ldrb	w0, [x0]
  427ab0:	ldrb	w1, [x29, #111]
  427ab4:	cmp	w1, w0
  427ab8:	b.ne	427a8c <eval_buffer@@Base+0x2e3c>  // b.any
  427abc:	b	427ac4 <eval_buffer@@Base+0x2e74>
  427ac0:	nop
  427ac4:	ldr	x0, [x29, #56]
  427ac8:	ldrb	w0, [x0]
  427acc:	cmp	w0, #0x0
  427ad0:	b.ne	427adc <eval_buffer@@Base+0x2e8c>  // b.any
  427ad4:	mov	w0, #0xffffffff            	// #-1
  427ad8:	b	427ed4 <eval_buffer@@Base+0x3284>
  427adc:	ldrb	w0, [x29, #111]
  427ae0:	cmp	w0, #0x2c
  427ae4:	b.ne	427b40 <eval_buffer@@Base+0x2ef0>  // b.any
  427ae8:	ldr	x0, [x29, #56]
  427aec:	add	x1, x0, #0x1
  427af0:	str	x1, [x29, #56]
  427af4:	str	x0, [x29, #120]
  427af8:	b	427b08 <eval_buffer@@Base+0x2eb8>
  427afc:	ldr	x0, [x29, #120]
  427b00:	sub	x0, x0, #0x1
  427b04:	str	x0, [x29, #120]
  427b08:	ldr	x0, [x29, #120]
  427b0c:	sub	x0, x0, #0x1
  427b10:	ldrb	w0, [x0]
  427b14:	mov	w1, w0
  427b18:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427b1c:	add	x0, x0, #0x728
  427b20:	sxtw	x1, w1
  427b24:	ldrh	w0, [x0, x1, lsl #1]
  427b28:	and	w0, w0, #0x2
  427b2c:	cmp	w0, #0x0
  427b30:	b.ne	427afc <eval_buffer@@Base+0x2eac>  // b.any
  427b34:	ldr	x0, [x29, #120]
  427b38:	strb	wzr, [x0]
  427b3c:	b	427b50 <eval_buffer@@Base+0x2f00>
  427b40:	ldr	x0, [x29, #56]
  427b44:	add	x1, x0, #0x1
  427b48:	str	x1, [x29, #56]
  427b4c:	strb	wzr, [x0]
  427b50:	ldr	x0, [x29, #96]
  427b54:	bl	40bf38 <variable_expand@@Base>
  427b58:	str	x0, [x29, #136]
  427b5c:	ldr	x0, [x29, #136]
  427b60:	bl	4066f0 <strlen@plt>
  427b64:	str	x0, [x29, #88]
  427b68:	ldr	x0, [x29, #88]
  427b6c:	add	x0, x0, #0x1
  427b70:	add	x0, x0, #0xf
  427b74:	lsr	x0, x0, #4
  427b78:	lsl	x0, x0, #4
  427b7c:	sub	sp, sp, x0
  427b80:	mov	x0, sp
  427b84:	add	x0, x0, #0xf
  427b88:	lsr	x0, x0, #4
  427b8c:	lsl	x0, x0, #4
  427b90:	str	x0, [x29, #96]
  427b94:	ldr	x0, [x29, #88]
  427b98:	add	x0, x0, #0x1
  427b9c:	mov	x2, x0
  427ba0:	ldr	x1, [x29, #136]
  427ba4:	ldr	x0, [x29, #96]
  427ba8:	bl	4066b0 <memcpy@plt>
  427bac:	ldrb	w0, [x29, #111]
  427bb0:	cmp	w0, #0x2c
  427bb4:	b.eq	427bf0 <eval_buffer@@Base+0x2fa0>  // b.none
  427bb8:	b	427bc8 <eval_buffer@@Base+0x2f78>
  427bbc:	ldr	x0, [x29, #56]
  427bc0:	add	x0, x0, #0x1
  427bc4:	str	x0, [x29, #56]
  427bc8:	ldr	x0, [x29, #56]
  427bcc:	ldrb	w0, [x0]
  427bd0:	mov	w1, w0
  427bd4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427bd8:	add	x0, x0, #0x728
  427bdc:	sxtw	x1, w1
  427be0:	ldrh	w0, [x0, x1, lsl #1]
  427be4:	and	w0, w0, #0x6
  427be8:	cmp	w0, #0x0
  427bec:	b.ne	427bbc <eval_buffer@@Base+0x2f6c>  // b.any
  427bf0:	ldrb	w0, [x29, #111]
  427bf4:	cmp	w0, #0x2c
  427bf8:	b.eq	427c08 <eval_buffer@@Base+0x2fb8>  // b.none
  427bfc:	ldr	x0, [x29, #56]
  427c00:	ldrb	w0, [x0]
  427c04:	b	427c0c <eval_buffer@@Base+0x2fbc>
  427c08:	mov	w0, #0x29                  	// #41
  427c0c:	strb	w0, [x29, #111]
  427c10:	ldrb	w0, [x29, #111]
  427c14:	cmp	w0, #0x29
  427c18:	b.eq	427c3c <eval_buffer@@Base+0x2fec>  // b.none
  427c1c:	ldrb	w0, [x29, #111]
  427c20:	cmp	w0, #0x22
  427c24:	b.eq	427c3c <eval_buffer@@Base+0x2fec>  // b.none
  427c28:	ldrb	w0, [x29, #111]
  427c2c:	cmp	w0, #0x27
  427c30:	b.eq	427c3c <eval_buffer@@Base+0x2fec>  // b.none
  427c34:	mov	w0, #0xffffffff            	// #-1
  427c38:	b	427ed4 <eval_buffer@@Base+0x3284>
  427c3c:	ldrb	w0, [x29, #111]
  427c40:	cmp	w0, #0x29
  427c44:	b.ne	427ccc <eval_buffer@@Base+0x307c>  // b.any
  427c48:	str	wzr, [x29, #116]
  427c4c:	ldr	x0, [x29, #56]
  427c50:	bl	4228a0 <next_token@@Base>
  427c54:	str	x0, [x29, #136]
  427c58:	ldr	x0, [x29, #136]
  427c5c:	str	x0, [x29, #56]
  427c60:	b	427cb8 <eval_buffer@@Base+0x3068>
  427c64:	ldr	x0, [x29, #56]
  427c68:	ldrb	w0, [x0]
  427c6c:	cmp	w0, #0x28
  427c70:	b.ne	427c84 <eval_buffer@@Base+0x3034>  // b.any
  427c74:	ldr	w0, [x29, #116]
  427c78:	add	w0, w0, #0x1
  427c7c:	str	w0, [x29, #116]
  427c80:	b	427cac <eval_buffer@@Base+0x305c>
  427c84:	ldr	x0, [x29, #56]
  427c88:	ldrb	w0, [x0]
  427c8c:	cmp	w0, #0x29
  427c90:	b.ne	427cac <eval_buffer@@Base+0x305c>  // b.any
  427c94:	ldr	w0, [x29, #116]
  427c98:	cmp	w0, #0x0
  427c9c:	b.le	427d18 <eval_buffer@@Base+0x30c8>
  427ca0:	ldr	w0, [x29, #116]
  427ca4:	sub	w0, w0, #0x1
  427ca8:	str	w0, [x29, #116]
  427cac:	ldr	x0, [x29, #56]
  427cb0:	add	x0, x0, #0x1
  427cb4:	str	x0, [x29, #56]
  427cb8:	ldr	x0, [x29, #56]
  427cbc:	ldrb	w0, [x0]
  427cc0:	cmp	w0, #0x0
  427cc4:	b.ne	427c64 <eval_buffer@@Base+0x3014>  // b.any
  427cc8:	b	427d1c <eval_buffer@@Base+0x30cc>
  427ccc:	ldr	x0, [x29, #56]
  427cd0:	add	x0, x0, #0x1
  427cd4:	str	x0, [x29, #56]
  427cd8:	ldr	x0, [x29, #56]
  427cdc:	str	x0, [x29, #136]
  427ce0:	b	427cf0 <eval_buffer@@Base+0x30a0>
  427ce4:	ldr	x0, [x29, #56]
  427ce8:	add	x0, x0, #0x1
  427cec:	str	x0, [x29, #56]
  427cf0:	ldr	x0, [x29, #56]
  427cf4:	ldrb	w0, [x0]
  427cf8:	cmp	w0, #0x0
  427cfc:	b.eq	427d1c <eval_buffer@@Base+0x30cc>  // b.none
  427d00:	ldr	x0, [x29, #56]
  427d04:	ldrb	w0, [x0]
  427d08:	ldrb	w1, [x29, #111]
  427d0c:	cmp	w1, w0
  427d10:	b.ne	427ce4 <eval_buffer@@Base+0x3094>  // b.any
  427d14:	b	427d1c <eval_buffer@@Base+0x30cc>
  427d18:	nop
  427d1c:	ldr	x0, [x29, #56]
  427d20:	ldrb	w0, [x0]
  427d24:	cmp	w0, #0x0
  427d28:	b.ne	427d34 <eval_buffer@@Base+0x30e4>  // b.any
  427d2c:	mov	w0, #0xffffffff            	// #-1
  427d30:	b	427ed4 <eval_buffer@@Base+0x3284>
  427d34:	ldr	x0, [x29, #56]
  427d38:	add	x1, x0, #0x1
  427d3c:	str	x1, [x29, #56]
  427d40:	strb	wzr, [x0]
  427d44:	b	427d54 <eval_buffer@@Base+0x3104>
  427d48:	ldr	x0, [x29, #56]
  427d4c:	add	x0, x0, #0x1
  427d50:	str	x0, [x29, #56]
  427d54:	ldr	x0, [x29, #56]
  427d58:	ldrb	w0, [x0]
  427d5c:	mov	w1, w0
  427d60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427d64:	add	x0, x0, #0x728
  427d68:	sxtw	x1, w1
  427d6c:	ldrh	w0, [x0, x1, lsl #1]
  427d70:	and	w0, w0, #0x6
  427d74:	cmp	w0, #0x0
  427d78:	b.ne	427d48 <eval_buffer@@Base+0x30f8>  // b.any
  427d7c:	ldr	x0, [x29, #56]
  427d80:	ldrb	w0, [x0]
  427d84:	cmp	w0, #0x0
  427d88:	b.eq	427db8 <eval_buffer@@Base+0x3168>  // b.none
  427d8c:	ldr	x0, [x29, #168]
  427d90:	bl	4066f0 <strlen@plt>
  427d94:	mov	x19, x0
  427d98:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  427d9c:	add	x0, x0, #0x98
  427da0:	bl	406e40 <gettext@plt>
  427da4:	ldr	x3, [x29, #168]
  427da8:	mov	x2, x0
  427dac:	mov	x1, x19
  427db0:	ldr	x0, [x29, #40]
  427db4:	bl	423e74 <error@@Base>
  427db8:	ldr	x0, [x29, #136]
  427dbc:	bl	40bf38 <variable_expand@@Base>
  427dc0:	str	x0, [x29, #136]
  427dc4:	ldr	x1, [x29, #96]
  427dc8:	ldr	x0, [x29, #136]
  427dcc:	cmp	x1, x0
  427dd0:	b.eq	427e20 <eval_buffer@@Base+0x31d0>  // b.none
  427dd4:	ldr	x0, [x29, #96]
  427dd8:	ldrb	w1, [x0]
  427ddc:	ldr	x0, [x29, #136]
  427de0:	ldrb	w0, [x0]
  427de4:	cmp	w1, w0
  427de8:	b.ne	427e28 <eval_buffer@@Base+0x31d8>  // b.any
  427dec:	ldr	x0, [x29, #96]
  427df0:	ldrb	w0, [x0]
  427df4:	cmp	w0, #0x0
  427df8:	b.eq	427e20 <eval_buffer@@Base+0x31d0>  // b.none
  427dfc:	ldr	x0, [x29, #96]
  427e00:	add	x2, x0, #0x1
  427e04:	ldr	x0, [x29, #136]
  427e08:	add	x0, x0, #0x1
  427e0c:	mov	x1, x0
  427e10:	mov	x0, x2
  427e14:	bl	406bc0 <strcmp@plt>
  427e18:	cmp	w0, #0x0
  427e1c:	b.ne	427e28 <eval_buffer@@Base+0x31d8>  // b.any
  427e20:	mov	w0, #0x1                   	// #1
  427e24:	b	427e2c <eval_buffer@@Base+0x31dc>
  427e28:	mov	w0, #0x0                   	// #0
  427e2c:	and	w0, w0, #0x1
  427e30:	and	w0, w0, #0xff
  427e34:	eor	w0, w0, #0x1
  427e38:	and	w1, w0, #0xff
  427e3c:	ldr	w0, [x29, #164]
  427e40:	cmp	w0, #0x3
  427e44:	cset	w0, eq  // eq = none
  427e48:	and	w0, w0, #0xff
  427e4c:	eor	w0, w1, w0
  427e50:	and	w2, w0, #0xff
  427e54:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427e58:	add	x0, x0, #0x328
  427e5c:	ldr	x0, [x0]
  427e60:	ldr	x1, [x0, #8]
  427e64:	ldr	w0, [x29, #112]
  427e68:	add	x0, x1, x0
  427e6c:	mov	w1, w2
  427e70:	strb	w1, [x0]
  427e74:	str	wzr, [x29, #160]
  427e78:	b	427eb4 <eval_buffer@@Base+0x3264>
  427e7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427e80:	add	x0, x0, #0x328
  427e84:	ldr	x0, [x0]
  427e88:	ldr	x1, [x0, #8]
  427e8c:	ldr	w0, [x29, #160]
  427e90:	add	x0, x1, x0
  427e94:	ldrb	w0, [x0]
  427e98:	cmp	w0, #0x0
  427e9c:	b.eq	427ea8 <eval_buffer@@Base+0x3258>  // b.none
  427ea0:	mov	w0, #0x1                   	// #1
  427ea4:	b	427ed4 <eval_buffer@@Base+0x3284>
  427ea8:	ldr	w0, [x29, #160]
  427eac:	add	w0, w0, #0x1
  427eb0:	str	w0, [x29, #160]
  427eb4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427eb8:	add	x0, x0, #0x328
  427ebc:	ldr	x0, [x0]
  427ec0:	ldr	w0, [x0]
  427ec4:	ldr	w1, [x29, #160]
  427ec8:	cmp	w1, w0
  427ecc:	b.cc	427e7c <eval_buffer@@Base+0x322c>  // b.lo, b.ul, b.last
  427ed0:	mov	w0, #0x0                   	// #0
  427ed4:	mov	sp, x29
  427ed8:	ldr	x19, [sp, #16]
  427edc:	ldp	x29, x30, [sp], #176
  427ee0:	ret
  427ee4:	stp	x29, x30, [sp, #-144]!
  427ee8:	mov	x29, sp
  427eec:	str	x0, [sp, #56]
  427ef0:	str	x1, [sp, #48]
  427ef4:	str	w2, [sp, #44]
  427ef8:	str	x3, [sp, #32]
  427efc:	str	x4, [sp, #24]
  427f00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  427f04:	add	x0, x0, #0x3b8
  427f08:	ldr	x0, [x0]
  427f0c:	str	x0, [sp, #120]
  427f10:	b	428224 <eval_buffer@@Base+0x35d4>
  427f14:	ldr	x0, [sp, #56]
  427f18:	ldr	x0, [x0, #8]
  427f1c:	str	x0, [sp, #72]
  427f20:	ldr	x0, [sp, #56]
  427f24:	ldr	x0, [x0]
  427f28:	str	x0, [sp, #112]
  427f2c:	ldr	x0, [sp, #56]
  427f30:	bl	406c00 <free@plt>
  427f34:	add	x0, sp, #0x48
  427f38:	bl	4294f0 <find_percent_cached@@Base>
  427f3c:	str	x0, [sp, #104]
  427f40:	ldr	x0, [sp, #104]
  427f44:	cmp	x0, #0x0
  427f48:	b.eq	428004 <eval_buffer@@Base+0x33b4>  // b.none
  427f4c:	ldr	x0, [sp, #72]
  427f50:	ldr	x1, [sp, #104]
  427f54:	bl	43124c <create_pattern_var@@Base>
  427f58:	str	x0, [sp, #96]
  427f5c:	ldr	x0, [sp, #96]
  427f60:	add	x1, x0, #0x30
  427f64:	ldr	x0, [sp, #24]
  427f68:	mov	x2, x1
  427f6c:	mov	x3, x0
  427f70:	ldp	x0, x1, [x3]
  427f74:	stp	x0, x1, [x2]
  427f78:	ldr	x0, [x3, #16]
  427f7c:	str	x0, [x2, #16]
  427f80:	ldr	x0, [sp, #96]
  427f84:	add	x0, x0, #0x20
  427f88:	ldr	x1, [sp, #48]
  427f8c:	bl	433db0 <assign_variable_definition@@Base>
  427f90:	str	x0, [sp, #136]
  427f94:	ldr	w0, [sp, #44]
  427f98:	and	w0, w0, #0x7
  427f9c:	and	w2, w0, #0xff
  427fa0:	ldr	x1, [sp, #136]
  427fa4:	ldrb	w0, [x1, #47]
  427fa8:	bfi	w0, w2, #2, #3
  427fac:	strb	w0, [x1, #47]
  427fb0:	ldr	x0, [sp, #136]
  427fb4:	ldrh	w0, [x0, #46]
  427fb8:	and	w0, w0, #0x380
  427fbc:	and	w0, w0, #0xffff
  427fc0:	cmp	w0, #0x80
  427fc4:	b.ne	427fe8 <eval_buffer@@Base+0x3398>  // b.any
  427fc8:	ldr	x0, [sp, #136]
  427fcc:	ldr	x0, [x0, #8]
  427fd0:	mov	x1, #0x0                   	// #0
  427fd4:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  427fd8:	mov	x1, x0
  427fdc:	ldr	x0, [sp, #136]
  427fe0:	str	x1, [x0, #8]
  427fe4:	b	4280bc <eval_buffer@@Base+0x346c>
  427fe8:	ldr	x0, [sp, #136]
  427fec:	ldr	x0, [x0, #8]
  427ff0:	bl	422788 <xstrdup@@Base>
  427ff4:	mov	x1, x0
  427ff8:	ldr	x0, [sp, #136]
  427ffc:	str	x1, [x0, #8]
  428000:	b	4280bc <eval_buffer@@Base+0x346c>
  428004:	ldr	x0, [sp, #72]
  428008:	bl	40c5bc <lookup_file@@Base>
  42800c:	str	x0, [sp, #128]
  428010:	ldr	x0, [sp, #128]
  428014:	cmp	x0, #0x0
  428018:	b.ne	428030 <eval_buffer@@Base+0x33e0>  // b.any
  42801c:	ldr	x0, [sp, #72]
  428020:	bl	430d78 <strcache_add@@Base>
  428024:	bl	40c678 <enter_file@@Base>
  428028:	str	x0, [sp, #128]
  42802c:	b	42804c <eval_buffer@@Base+0x33fc>
  428030:	ldr	x0, [sp, #128]
  428034:	ldr	x0, [x0, #104]
  428038:	cmp	x0, #0x0
  42803c:	b.eq	42804c <eval_buffer@@Base+0x33fc>  // b.none
  428040:	ldr	x0, [sp, #128]
  428044:	ldr	x0, [x0, #104]
  428048:	str	x0, [sp, #128]
  42804c:	mov	w1, #0x1                   	// #1
  428050:	ldr	x0, [sp, #128]
  428054:	bl	432088 <initialize_file_variables@@Base>
  428058:	ldr	x0, [sp, #128]
  42805c:	ldr	x1, [x0, #80]
  428060:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428064:	add	x0, x0, #0x3b8
  428068:	str	x1, [x0]
  42806c:	mov	w3, #0x1                   	// #1
  428070:	ldr	w2, [sp, #44]
  428074:	ldr	x1, [sp, #48]
  428078:	ldr	x0, [sp, #24]
  42807c:	bl	433eb0 <try_variable_definition@@Base>
  428080:	str	x0, [sp, #136]
  428084:	ldr	x0, [sp, #136]
  428088:	cmp	x0, #0x0
  42808c:	b.ne	4280ac <eval_buffer@@Base+0x345c>  // b.any
  428090:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428094:	add	x0, x0, #0xf0
  428098:	bl	406e40 <gettext@plt>
  42809c:	mov	x2, x0
  4280a0:	mov	x1, #0x0                   	// #0
  4280a4:	ldr	x0, [sp, #24]
  4280a8:	bl	424098 <fatal@@Base>
  4280ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4280b0:	add	x0, x0, #0x3b8
  4280b4:	ldr	x1, [sp, #120]
  4280b8:	str	x1, [x0]
  4280bc:	ldr	x0, [sp, #136]
  4280c0:	ldrb	w1, [x0, #44]
  4280c4:	orr	w1, w1, #0x8
  4280c8:	strb	w1, [x0, #44]
  4280cc:	ldr	x0, [sp, #32]
  4280d0:	ldrb	w0, [x0]
  4280d4:	ubfx	x0, x0, #5, #1
  4280d8:	and	w2, w0, #0xff
  4280dc:	ldr	x1, [sp, #136]
  4280e0:	ldrb	w0, [x1, #44]
  4280e4:	bfi	w0, w2, #7, #1
  4280e8:	strb	w0, [x1, #44]
  4280ec:	ldr	x0, [sp, #32]
  4280f0:	ldrb	w0, [x0]
  4280f4:	and	w0, w0, #0x8
  4280f8:	and	w0, w0, #0xff
  4280fc:	cmp	w0, #0x0
  428100:	b.eq	42810c <eval_buffer@@Base+0x34bc>  // b.none
  428104:	mov	w2, #0x0                   	// #0
  428108:	b	428110 <eval_buffer@@Base+0x34c0>
  42810c:	mov	w2, #0x3                   	// #3
  428110:	ldr	x1, [sp, #136]
  428114:	ldrb	w0, [x1, #47]
  428118:	bfi	w0, w2, #5, #2
  42811c:	strb	w0, [x1, #47]
  428120:	ldr	x0, [sp, #136]
  428124:	ldrb	w0, [x0, #47]
  428128:	and	w0, w0, #0x1c
  42812c:	and	w0, w0, #0xff
  428130:	cmp	w0, #0x14
  428134:	b.eq	42821c <eval_buffer@@Base+0x35cc>  // b.none
  428138:	ldr	x0, [sp, #136]
  42813c:	ldr	x0, [x0]
  428140:	bl	4066f0 <strlen@plt>
  428144:	str	x0, [sp, #88]
  428148:	ldr	x0, [sp, #136]
  42814c:	ldr	x0, [x0]
  428150:	ldr	x1, [sp, #88]
  428154:	bl	431f68 <lookup_variable@@Base>
  428158:	str	x0, [sp, #80]
  42815c:	ldr	x0, [sp, #80]
  428160:	cmp	x0, #0x0
  428164:	b.eq	42821c <eval_buffer@@Base+0x35cc>  // b.none
  428168:	ldr	x1, [sp, #136]
  42816c:	ldr	x0, [sp, #80]
  428170:	cmp	x1, x0
  428174:	b.eq	42821c <eval_buffer@@Base+0x35cc>  // b.none
  428178:	ldr	x0, [sp, #80]
  42817c:	ldrb	w0, [x0, #47]
  428180:	and	w0, w0, #0x1c
  428184:	and	w0, w0, #0xff
  428188:	cmp	w0, #0xc
  42818c:	b.eq	4281a8 <eval_buffer@@Base+0x3558>  // b.none
  428190:	ldr	x0, [sp, #80]
  428194:	ldrb	w0, [x0, #47]
  428198:	and	w0, w0, #0x1c
  42819c:	and	w0, w0, #0xff
  4281a0:	cmp	w0, #0x10
  4281a4:	b.ne	42821c <eval_buffer@@Base+0x35cc>  // b.any
  4281a8:	ldr	x0, [sp, #136]
  4281ac:	ldr	x0, [x0, #8]
  4281b0:	bl	406c00 <free@plt>
  4281b4:	ldr	x0, [sp, #80]
  4281b8:	ldr	x0, [x0, #8]
  4281bc:	bl	422788 <xstrdup@@Base>
  4281c0:	mov	x1, x0
  4281c4:	ldr	x0, [sp, #136]
  4281c8:	str	x1, [x0, #8]
  4281cc:	ldr	x0, [sp, #80]
  4281d0:	ldrb	w0, [x0, #47]
  4281d4:	ubfx	x0, x0, #2, #3
  4281d8:	and	w2, w0, #0xff
  4281dc:	ldr	x1, [sp, #136]
  4281e0:	ldrb	w0, [x1, #47]
  4281e4:	bfi	w0, w2, #2, #3
  4281e8:	strb	w0, [x1, #47]
  4281ec:	ldr	x0, [sp, #80]
  4281f0:	ldrb	w0, [x0, #44]
  4281f4:	ubfx	x0, x0, #0, #1
  4281f8:	and	w2, w0, #0xff
  4281fc:	ldr	x1, [sp, #136]
  428200:	ldrb	w0, [x1, #44]
  428204:	bfxil	w0, w2, #0, #1
  428208:	strb	w0, [x1, #44]
  42820c:	ldr	x0, [sp, #136]
  428210:	ldrb	w1, [x0, #44]
  428214:	and	w1, w1, #0xfffffffd
  428218:	strb	w1, [x0, #44]
  42821c:	ldr	x0, [sp, #112]
  428220:	str	x0, [sp, #56]
  428224:	ldr	x0, [sp, #56]
  428228:	cmp	x0, #0x0
  42822c:	b.ne	427f14 <eval_buffer@@Base+0x32c4>  // b.any
  428230:	nop
  428234:	nop
  428238:	ldp	x29, x30, [sp], #144
  42823c:	ret
  428240:	stp	x29, x30, [sp, #-272]!
  428244:	mov	x29, sp
  428248:	stp	x19, x20, [sp, #16]
  42824c:	str	x0, [sp, #88]
  428250:	str	w1, [sp, #84]
  428254:	str	x2, [sp, #72]
  428258:	str	x3, [sp, #64]
  42825c:	str	x4, [sp, #56]
  428260:	str	w5, [sp, #80]
  428264:	str	x6, [sp, #48]
  428268:	str	x7, [sp, #40]
  42826c:	str	xzr, [sp, #248]
  428270:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428274:	add	x0, x0, #0x528
  428278:	ldr	w0, [x0]
  42827c:	cmp	w0, #0x0
  428280:	b.eq	4282a0 <eval_buffer@@Base+0x3650>  // b.none
  428284:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428288:	add	x0, x0, #0x120
  42828c:	bl	406e40 <gettext@plt>
  428290:	mov	x2, x0
  428294:	mov	x1, #0x0                   	// #0
  428298:	ldr	x0, [sp, #288]
  42829c:	bl	424098 <fatal@@Base>
  4282a0:	ldr	x0, [sp, #88]
  4282a4:	ldr	x0, [x0, #8]
  4282a8:	str	x0, [sp, #104]
  4282ac:	add	x0, sp, #0x68
  4282b0:	bl	4294f0 <find_percent_cached@@Base>
  4282b4:	str	x0, [sp, #184]
  4282b8:	ldr	x0, [sp, #40]
  4282bc:	cmp	x0, #0x0
  4282c0:	b.eq	428324 <eval_buffer@@Base+0x36d4>  // b.none
  4282c4:	mov	x0, #0x38                  	// #56
  4282c8:	bl	42268c <xmalloc@@Base>
  4282cc:	str	x0, [sp, #264]
  4282d0:	ldr	x0, [sp, #288]
  4282d4:	ldr	x1, [x0]
  4282d8:	ldr	x0, [sp, #264]
  4282dc:	str	x1, [x0]
  4282e0:	ldr	w1, [sp, #80]
  4282e4:	ldr	x0, [sp, #264]
  4282e8:	str	x1, [x0, #8]
  4282ec:	ldr	x0, [sp, #264]
  4282f0:	str	xzr, [x0, #16]
  4282f4:	ldr	x1, [sp, #40]
  4282f8:	ldr	x0, [sp, #48]
  4282fc:	bl	4227bc <xstrndup@@Base>
  428300:	mov	x1, x0
  428304:	ldr	x0, [sp, #264]
  428308:	str	x1, [x0, #24]
  42830c:	ldr	x0, [sp, #264]
  428310:	str	xzr, [x0, #32]
  428314:	ldr	x0, [sp, #264]
  428318:	ldrb	w1, [sp, #280]
  42831c:	strb	w1, [x0, #50]
  428320:	b	428350 <eval_buffer@@Base+0x3700>
  428324:	ldr	w0, [sp, #84]
  428328:	cmp	w0, #0x0
  42832c:	b.eq	42834c <eval_buffer@@Base+0x36fc>  // b.none
  428330:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428334:	add	x0, x0, #0x150
  428338:	bl	406e40 <gettext@plt>
  42833c:	mov	x2, x0
  428340:	mov	x1, #0x0                   	// #0
  428344:	ldr	x0, [sp, #288]
  428348:	bl	424098 <fatal@@Base>
  42834c:	str	xzr, [sp, #264]
  428350:	ldr	x0, [sp, #56]
  428354:	cmp	x0, #0x0
  428358:	b.ne	428364 <eval_buffer@@Base+0x3714>  // b.any
  42835c:	str	xzr, [sp, #256]
  428360:	b	428424 <eval_buffer@@Base+0x37d4>
  428364:	mov	w1, #0x3a                  	// #58
  428368:	ldr	x0, [sp, #56]
  42836c:	bl	429384 <eval_buffer@@Base+0x4734>
  428370:	str	x0, [sp, #56]
  428374:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  428378:	add	x0, x0, #0xa5c
  42837c:	ldr	w0, [x0]
  428380:	cmp	w0, #0x0
  428384:	b.eq	4283e8 <eval_buffer@@Base+0x3798>  // b.none
  428388:	mov	w1, #0x24                  	// #36
  42838c:	ldr	x0, [sp, #56]
  428390:	bl	406c20 <strchr@plt>
  428394:	cmp	x0, #0x0
  428398:	b.eq	4283e8 <eval_buffer@@Base+0x3798>  // b.none
  42839c:	mov	x0, #0x28                  	// #40
  4283a0:	bl	4226d4 <xcalloc@@Base>
  4283a4:	str	x0, [sp, #256]
  4283a8:	ldr	x0, [sp, #256]
  4283ac:	ldr	x1, [sp, #56]
  4283b0:	str	x1, [x0, #8]
  4283b4:	ldr	x0, [sp, #256]
  4283b8:	ldrb	w1, [x0, #33]
  4283bc:	orr	w1, w1, #0x8
  4283c0:	strb	w1, [x0, #33]
  4283c4:	ldr	x0, [sp, #72]
  4283c8:	cmp	x0, #0x0
  4283cc:	cset	w0, ne  // ne = any
  4283d0:	and	w2, w0, #0xff
  4283d4:	ldr	x1, [sp, #256]
  4283d8:	ldrb	w0, [x1, #33]
  4283dc:	bfi	w0, w2, #2, #1
  4283e0:	strb	w0, [x1, #33]
  4283e4:	b	428424 <eval_buffer@@Base+0x37d4>
  4283e8:	ldr	x0, [sp, #56]
  4283ec:	bl	40d28c <split_prereqs@@Base>
  4283f0:	str	x0, [sp, #256]
  4283f4:	ldr	x0, [sp, #56]
  4283f8:	bl	406c00 <free@plt>
  4283fc:	ldr	x0, [sp, #72]
  428400:	cmp	x0, #0x0
  428404:	b.ne	428424 <eval_buffer@@Base+0x37d4>  // b.any
  428408:	ldr	x0, [sp, #184]
  42840c:	cmp	x0, #0x0
  428410:	b.ne	428424 <eval_buffer@@Base+0x37d4>  // b.any
  428414:	mov	x1, #0x0                   	// #0
  428418:	ldr	x0, [sp, #256]
  42841c:	bl	40d370 <enter_prereqs@@Base>
  428420:	str	x0, [sp, #256]
  428424:	ldr	x0, [sp, #184]
  428428:	cmp	x0, #0x0
  42842c:	b.eq	4285b0 <eval_buffer@@Base+0x3960>  // b.none
  428430:	ldr	x0, [sp, #72]
  428434:	cmp	x0, #0x0
  428438:	b.eq	428458 <eval_buffer@@Base+0x3808>  // b.none
  42843c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428440:	add	x0, x0, #0x178
  428444:	bl	406e40 <gettext@plt>
  428448:	mov	x2, x0
  42844c:	mov	x1, #0x0                   	// #0
  428450:	ldr	x0, [sp, #288]
  428454:	bl	424098 <fatal@@Base>
  428458:	ldr	x0, [sp, #88]
  42845c:	ldr	x0, [x0]
  428460:	str	x0, [sp, #240]
  428464:	ldr	x0, [sp, #88]
  428468:	bl	406c00 <free@plt>
  42846c:	ldr	x0, [sp, #240]
  428470:	str	x0, [sp, #88]
  428474:	mov	w0, #0x1                   	// #1
  428478:	strh	w0, [sp, #238]
  42847c:	b	428498 <eval_buffer@@Base+0x3848>
  428480:	ldrh	w0, [sp, #238]
  428484:	add	w0, w0, #0x1
  428488:	strh	w0, [sp, #238]
  42848c:	ldr	x0, [sp, #240]
  428490:	ldr	x0, [x0]
  428494:	str	x0, [sp, #240]
  428498:	ldr	x0, [sp, #240]
  42849c:	cmp	x0, #0x0
  4284a0:	b.ne	428480 <eval_buffer@@Base+0x3830>  // b.any
  4284a4:	ldrh	w0, [sp, #238]
  4284a8:	lsl	x0, x0, #3
  4284ac:	bl	42268c <xmalloc@@Base>
  4284b0:	str	x0, [sp, #120]
  4284b4:	ldrh	w0, [sp, #238]
  4284b8:	lsl	x0, x0, #3
  4284bc:	bl	42268c <xmalloc@@Base>
  4284c0:	str	x0, [sp, #112]
  4284c4:	ldr	x1, [sp, #104]
  4284c8:	ldr	x0, [sp, #120]
  4284cc:	str	x1, [x0]
  4284d0:	ldr	x0, [sp, #112]
  4284d4:	ldr	x1, [sp, #184]
  4284d8:	str	x1, [x0]
  4284dc:	mov	w0, #0x1                   	// #1
  4284e0:	strh	w0, [sp, #238]
  4284e4:	b	428580 <eval_buffer@@Base+0x3930>
  4284e8:	ldr	x0, [sp, #88]
  4284ec:	ldr	x0, [x0, #8]
  4284f0:	str	x0, [sp, #104]
  4284f4:	add	x0, sp, #0x68
  4284f8:	bl	4294f0 <find_percent_cached@@Base>
  4284fc:	str	x0, [sp, #184]
  428500:	ldr	x0, [sp, #184]
  428504:	cmp	x0, #0x0
  428508:	b.ne	428528 <eval_buffer@@Base+0x38d8>  // b.any
  42850c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428510:	add	x0, x0, #0x1a0
  428514:	bl	406e40 <gettext@plt>
  428518:	mov	x2, x0
  42851c:	mov	x1, #0x0                   	// #0
  428520:	ldr	x0, [sp, #288]
  428524:	bl	424098 <fatal@@Base>
  428528:	ldrh	w0, [sp, #238]
  42852c:	lsl	x0, x0, #3
  428530:	ldr	x1, [sp, #120]
  428534:	add	x0, x1, x0
  428538:	ldr	x1, [sp, #104]
  42853c:	str	x1, [x0]
  428540:	ldrh	w0, [sp, #238]
  428544:	lsl	x0, x0, #3
  428548:	ldr	x1, [sp, #112]
  42854c:	add	x0, x1, x0
  428550:	ldr	x1, [sp, #184]
  428554:	str	x1, [x0]
  428558:	ldrh	w0, [sp, #238]
  42855c:	add	w0, w0, #0x1
  428560:	strh	w0, [sp, #238]
  428564:	ldr	x0, [sp, #88]
  428568:	ldr	x0, [x0]
  42856c:	str	x0, [sp, #240]
  428570:	ldr	x0, [sp, #88]
  428574:	bl	406c00 <free@plt>
  428578:	ldr	x0, [sp, #240]
  42857c:	str	x0, [sp, #88]
  428580:	ldr	x0, [sp, #88]
  428584:	cmp	x0, #0x0
  428588:	b.ne	4284e8 <eval_buffer@@Base+0x3898>  // b.any
  42858c:	mov	w6, #0x1                   	// #1
  428590:	ldr	x5, [sp, #264]
  428594:	ldr	x4, [sp, #256]
  428598:	ldr	w3, [sp, #272]
  42859c:	ldrh	w2, [sp, #238]
  4285a0:	ldr	x1, [sp, #112]
  4285a4:	ldr	x0, [sp, #120]
  4285a8:	bl	430418 <create_pattern_rule@@Base>
  4285ac:	b	428f18 <eval_buffer@@Base+0x42c8>
  4285b0:	ldr	x0, [sp, #88]
  4285b4:	ldr	x0, [x0]
  4285b8:	str	x0, [sp, #176]
  4285bc:	str	xzr, [sp, #216]
  4285c0:	ldr	x0, [sp, #88]
  4285c4:	bl	406c00 <free@plt>
  4285c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4285cc:	add	x0, x0, #0xa58
  4285d0:	ldr	w0, [x0]
  4285d4:	cmp	w0, #0x0
  4285d8:	b.ne	4287d4 <eval_buffer@@Base+0x3b84>  // b.any
  4285dc:	ldr	x1, [sp, #104]
  4285e0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4285e4:	add	x0, x0, #0x1c0
  4285e8:	cmp	x1, x0
  4285ec:	b.eq	428638 <eval_buffer@@Base+0x39e8>  // b.none
  4285f0:	ldr	x0, [sp, #104]
  4285f4:	ldrb	w1, [x0]
  4285f8:	mov	w0, #0x2e                  	// #46
  4285fc:	cmp	w1, w0
  428600:	b.ne	4287d4 <eval_buffer@@Base+0x3b84>  // b.any
  428604:	ldr	x0, [sp, #104]
  428608:	ldrb	w0, [x0]
  42860c:	cmp	w0, #0x0
  428610:	b.eq	428638 <eval_buffer@@Base+0x39e8>  // b.none
  428614:	ldr	x0, [sp, #104]
  428618:	add	x2, x0, #0x1
  42861c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428620:	add	x0, x0, #0x1c1
  428624:	mov	x1, x0
  428628:	mov	x0, x2
  42862c:	bl	406bc0 <strcmp@plt>
  428630:	cmp	w0, #0x0
  428634:	b.ne	4287d4 <eval_buffer@@Base+0x3b84>  // b.any
  428638:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42863c:	add	x0, x0, #0xa58
  428640:	mov	w1, #0x1                   	// #1
  428644:	str	w1, [x0]
  428648:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42864c:	add	x0, x0, #0x3b8
  428650:	ldr	x0, [x0]
  428654:	ldr	x0, [x0, #8]
  428658:	mov	x6, #0x0                   	// #0
  42865c:	mov	x5, x0
  428660:	mov	w4, #0x0                   	// #0
  428664:	mov	w3, #0x0                   	// #0
  428668:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42866c:	add	x2, x0, #0x1c8
  428670:	mov	x1, #0xb                   	// #11
  428674:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428678:	add	x0, x0, #0x1d0
  42867c:	bl	4316d8 <define_variable_in_set@@Base>
  428680:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428684:	add	x0, x0, #0x3b8
  428688:	ldr	x0, [x0]
  42868c:	ldr	x0, [x0, #8]
  428690:	mov	x6, #0x0                   	// #0
  428694:	mov	x5, x0
  428698:	mov	w4, #0x0                   	// #0
  42869c:	mov	w3, #0x0                   	// #0
  4286a0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4286a4:	add	x2, x0, #0x1e0
  4286a8:	mov	x1, #0x7                   	// #7
  4286ac:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4286b0:	add	x0, x0, #0x1e8
  4286b4:	bl	4316d8 <define_variable_in_set@@Base>
  4286b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4286bc:	add	x0, x0, #0x3b8
  4286c0:	ldr	x0, [x0]
  4286c4:	ldr	x0, [x0, #8]
  4286c8:	mov	x6, #0x0                   	// #0
  4286cc:	mov	x5, x0
  4286d0:	mov	w4, #0x0                   	// #0
  4286d4:	mov	w3, #0x0                   	// #0
  4286d8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4286dc:	add	x2, x0, #0x1f0
  4286e0:	mov	x1, #0x2                   	// #2
  4286e4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4286e8:	add	x0, x0, #0x1f8
  4286ec:	bl	4316d8 <define_variable_in_set@@Base>
  4286f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4286f4:	add	x0, x0, #0x3b8
  4286f8:	ldr	x0, [x0]
  4286fc:	ldr	x0, [x0, #8]
  428700:	mov	x6, #0x0                   	// #0
  428704:	mov	x5, x0
  428708:	mov	w4, #0x0                   	// #0
  42870c:	mov	w3, #0x0                   	// #0
  428710:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428714:	add	x2, x0, #0x200
  428718:	mov	x1, #0x6                   	// #6
  42871c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428720:	add	x0, x0, #0x208
  428724:	bl	4316d8 <define_variable_in_set@@Base>
  428728:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42872c:	add	x0, x0, #0x3b8
  428730:	ldr	x0, [x0]
  428734:	ldr	x0, [x0, #8]
  428738:	mov	x6, #0x0                   	// #0
  42873c:	mov	x5, x0
  428740:	mov	w4, #0x0                   	// #0
  428744:	mov	w3, #0x0                   	// #0
  428748:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42874c:	add	x2, x0, #0x210
  428750:	mov	x1, #0x2                   	// #2
  428754:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428758:	add	x0, x0, #0x218
  42875c:	bl	4316d8 <define_variable_in_set@@Base>
  428760:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428764:	add	x0, x0, #0x3b8
  428768:	ldr	x0, [x0]
  42876c:	ldr	x0, [x0, #8]
  428770:	mov	x6, #0x0                   	// #0
  428774:	mov	x5, x0
  428778:	mov	w4, #0x0                   	// #0
  42877c:	mov	w3, #0x0                   	// #0
  428780:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428784:	add	x2, x0, #0x200
  428788:	mov	x1, #0x6                   	// #6
  42878c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428790:	add	x0, x0, #0x220
  428794:	bl	4316d8 <define_variable_in_set@@Base>
  428798:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42879c:	add	x0, x0, #0x3b8
  4287a0:	ldr	x0, [x0]
  4287a4:	ldr	x0, [x0, #8]
  4287a8:	mov	x6, #0x0                   	// #0
  4287ac:	mov	x5, x0
  4287b0:	mov	w4, #0x0                   	// #0
  4287b4:	mov	w3, #0x0                   	// #0
  4287b8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4287bc:	add	x2, x0, #0x228
  4287c0:	mov	x1, #0xc                   	// #12
  4287c4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4287c8:	add	x0, x0, #0x230
  4287cc:	bl	4316d8 <define_variable_in_set@@Base>
  4287d0:	b	4288d8 <eval_buffer@@Base+0x3c88>
  4287d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4287d8:	add	x0, x0, #0xa5c
  4287dc:	ldr	w0, [x0]
  4287e0:	cmp	w0, #0x0
  4287e4:	b.ne	428858 <eval_buffer@@Base+0x3c08>  // b.any
  4287e8:	ldr	x1, [sp, #104]
  4287ec:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4287f0:	add	x0, x0, #0x240
  4287f4:	cmp	x1, x0
  4287f8:	b.eq	428844 <eval_buffer@@Base+0x3bf4>  // b.none
  4287fc:	ldr	x0, [sp, #104]
  428800:	ldrb	w1, [x0]
  428804:	mov	w0, #0x2e                  	// #46
  428808:	cmp	w1, w0
  42880c:	b.ne	428858 <eval_buffer@@Base+0x3c08>  // b.any
  428810:	ldr	x0, [sp, #104]
  428814:	ldrb	w0, [x0]
  428818:	cmp	w0, #0x0
  42881c:	b.eq	428844 <eval_buffer@@Base+0x3bf4>  // b.none
  428820:	ldr	x0, [sp, #104]
  428824:	add	x2, x0, #0x1
  428828:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42882c:	add	x0, x0, #0x241
  428830:	mov	x1, x0
  428834:	mov	x0, x2
  428838:	bl	406bc0 <strcmp@plt>
  42883c:	cmp	w0, #0x0
  428840:	b.ne	428858 <eval_buffer@@Base+0x3c08>  // b.any
  428844:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  428848:	add	x0, x0, #0xa5c
  42884c:	mov	w1, #0x1                   	// #1
  428850:	str	w1, [x0]
  428854:	b	4288d8 <eval_buffer@@Base+0x3c88>
  428858:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42885c:	add	x0, x0, #0xa8c
  428860:	ldr	w0, [x0]
  428864:	cmp	w0, #0x0
  428868:	b.ne	4288d8 <eval_buffer@@Base+0x3c88>  // b.any
  42886c:	ldr	x1, [sp, #104]
  428870:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428874:	add	x0, x0, #0x258
  428878:	cmp	x1, x0
  42887c:	b.eq	4288c8 <eval_buffer@@Base+0x3c78>  // b.none
  428880:	ldr	x0, [sp, #104]
  428884:	ldrb	w1, [x0]
  428888:	mov	w0, #0x2e                  	// #46
  42888c:	cmp	w1, w0
  428890:	b.ne	4288d8 <eval_buffer@@Base+0x3c88>  // b.any
  428894:	ldr	x0, [sp, #104]
  428898:	ldrb	w0, [x0]
  42889c:	cmp	w0, #0x0
  4288a0:	b.eq	4288c8 <eval_buffer@@Base+0x3c78>  // b.none
  4288a4:	ldr	x0, [sp, #104]
  4288a8:	add	x2, x0, #0x1
  4288ac:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4288b0:	add	x0, x0, #0x259
  4288b4:	mov	x1, x0
  4288b8:	mov	x0, x2
  4288bc:	bl	406bc0 <strcmp@plt>
  4288c0:	cmp	w0, #0x0
  4288c4:	b.ne	4288d8 <eval_buffer@@Base+0x3c88>  // b.any
  4288c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4288cc:	add	x0, x0, #0xa8c
  4288d0:	mov	w1, #0x1                   	// #1
  4288d4:	str	w1, [x0]
  4288d8:	ldr	x0, [sp, #72]
  4288dc:	cmp	x0, #0x0
  4288e0:	b.eq	428938 <eval_buffer@@Base+0x3ce8>  // b.none
  4288e4:	ldr	x0, [sp, #104]
  4288e8:	mov	x2, x0
  4288ec:	ldr	x1, [sp, #64]
  4288f0:	ldr	x0, [sp, #72]
  4288f4:	bl	40fc50 <pattern_matches@@Base>
  4288f8:	cmp	w0, #0x0
  4288fc:	b.ne	428938 <eval_buffer@@Base+0x3ce8>  // b.any
  428900:	ldr	x0, [sp, #104]
  428904:	bl	4066f0 <strlen@plt>
  428908:	mov	x19, x0
  42890c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428910:	add	x0, x0, #0x268
  428914:	bl	406e40 <gettext@plt>
  428918:	mov	x1, x0
  42891c:	ldr	x0, [sp, #104]
  428920:	mov	x3, x0
  428924:	mov	x2, x1
  428928:	mov	x1, x19
  42892c:	ldr	x0, [sp, #288]
  428930:	bl	423e74 <error@@Base>
  428934:	b	428964 <eval_buffer@@Base+0x3d14>
  428938:	ldr	x0, [sp, #256]
  42893c:	cmp	x0, #0x0
  428940:	b.eq	428964 <eval_buffer@@Base+0x3d14>  // b.none
  428944:	ldr	x0, [sp, #176]
  428948:	cmp	x0, #0x0
  42894c:	b.eq	42895c <eval_buffer@@Base+0x3d0c>  // b.none
  428950:	ldr	x0, [sp, #256]
  428954:	bl	422ad0 <copy_dep_chain@@Base>
  428958:	b	428960 <eval_buffer@@Base+0x3d10>
  42895c:	ldr	x0, [sp, #256]
  428960:	str	x0, [sp, #216]
  428964:	ldr	w0, [sp, #272]
  428968:	cmp	w0, #0x0
  42896c:	b.ne	428b64 <eval_buffer@@Base+0x3f14>  // b.any
  428970:	ldr	x0, [sp, #104]
  428974:	bl	430d78 <strcache_add@@Base>
  428978:	bl	40c678 <enter_file@@Base>
  42897c:	str	x0, [sp, #224]
  428980:	ldr	x0, [sp, #224]
  428984:	ldr	x0, [x0, #104]
  428988:	cmp	x0, #0x0
  42898c:	b.eq	4289cc <eval_buffer@@Base+0x3d7c>  // b.none
  428990:	ldr	x0, [sp, #224]
  428994:	ldr	x0, [x0]
  428998:	bl	4066f0 <strlen@plt>
  42899c:	mov	x19, x0
  4289a0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4289a4:	add	x0, x0, #0x298
  4289a8:	bl	406e40 <gettext@plt>
  4289ac:	mov	x1, x0
  4289b0:	ldr	x0, [sp, #224]
  4289b4:	ldr	x0, [x0]
  4289b8:	mov	x3, x0
  4289bc:	mov	x2, x1
  4289c0:	mov	x1, x19
  4289c4:	ldr	x0, [sp, #288]
  4289c8:	bl	424098 <fatal@@Base>
  4289cc:	ldr	x0, [sp, #264]
  4289d0:	cmp	x0, #0x0
  4289d4:	b.eq	428a2c <eval_buffer@@Base+0x3ddc>  // b.none
  4289d8:	ldr	x0, [sp, #224]
  4289dc:	ldr	x0, [x0, #32]
  4289e0:	ldr	x1, [sp, #264]
  4289e4:	cmp	x1, x0
  4289e8:	b.ne	428a2c <eval_buffer@@Base+0x3ddc>  // b.any
  4289ec:	ldr	x0, [sp, #224]
  4289f0:	ldr	x0, [x0]
  4289f4:	bl	4066f0 <strlen@plt>
  4289f8:	mov	x19, x0
  4289fc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428a00:	add	x0, x0, #0x2c8
  428a04:	bl	406e40 <gettext@plt>
  428a08:	mov	x1, x0
  428a0c:	ldr	x0, [sp, #224]
  428a10:	ldr	x0, [x0]
  428a14:	mov	x3, x0
  428a18:	mov	x2, x1
  428a1c:	mov	x1, x19
  428a20:	ldr	x0, [sp, #288]
  428a24:	bl	423e74 <error@@Base>
  428a28:	b	428ad8 <eval_buffer@@Base+0x3e88>
  428a2c:	ldr	x0, [sp, #264]
  428a30:	cmp	x0, #0x0
  428a34:	b.eq	428ad8 <eval_buffer@@Base+0x3e88>  // b.none
  428a38:	ldr	x0, [sp, #224]
  428a3c:	ldr	x0, [x0, #32]
  428a40:	cmp	x0, #0x0
  428a44:	b.eq	428ad8 <eval_buffer@@Base+0x3e88>  // b.none
  428a48:	ldr	x0, [sp, #224]
  428a4c:	ldrb	w0, [x0, #137]
  428a50:	and	w0, w0, #0x8
  428a54:	and	w0, w0, #0xff
  428a58:	cmp	w0, #0x0
  428a5c:	b.eq	428ad8 <eval_buffer@@Base+0x3e88>  // b.none
  428a60:	ldr	x0, [sp, #224]
  428a64:	ldr	x0, [x0]
  428a68:	bl	4066f0 <strlen@plt>
  428a6c:	str	x0, [sp, #168]
  428a70:	ldr	x19, [sp, #264]
  428a74:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428a78:	add	x0, x0, #0x300
  428a7c:	bl	406e40 <gettext@plt>
  428a80:	mov	x1, x0
  428a84:	ldr	x0, [sp, #224]
  428a88:	ldr	x0, [x0]
  428a8c:	mov	x3, x0
  428a90:	mov	x2, x1
  428a94:	ldr	x1, [sp, #168]
  428a98:	mov	x0, x19
  428a9c:	bl	423e74 <error@@Base>
  428aa0:	ldr	x0, [sp, #224]
  428aa4:	ldr	x0, [x0, #32]
  428aa8:	mov	x19, x0
  428aac:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428ab0:	add	x0, x0, #0x330
  428ab4:	bl	406e40 <gettext@plt>
  428ab8:	mov	x1, x0
  428abc:	ldr	x0, [sp, #224]
  428ac0:	ldr	x0, [x0]
  428ac4:	mov	x3, x0
  428ac8:	mov	x2, x1
  428acc:	ldr	x1, [sp, #168]
  428ad0:	mov	x0, x19
  428ad4:	bl	423e74 <error@@Base>
  428ad8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  428adc:	add	x0, x0, #0xa78
  428ae0:	ldr	x0, [x0]
  428ae4:	ldr	x1, [sp, #224]
  428ae8:	cmp	x1, x0
  428aec:	b.ne	428b10 <eval_buffer@@Base+0x3ec0>  // b.any
  428af0:	ldr	x0, [sp, #216]
  428af4:	cmp	x0, #0x0
  428af8:	b.ne	428b10 <eval_buffer@@Base+0x3ec0>  // b.any
  428afc:	ldr	x0, [sp, #264]
  428b00:	cmp	x0, #0x0
  428b04:	b.ne	428b10 <eval_buffer@@Base+0x3ec0>  // b.any
  428b08:	ldr	x0, [sp, #224]
  428b0c:	str	xzr, [x0, #32]
  428b10:	ldr	x0, [sp, #264]
  428b14:	cmp	x0, #0x0
  428b18:	b.eq	428b28 <eval_buffer@@Base+0x3ed8>  // b.none
  428b1c:	ldr	x0, [sp, #224]
  428b20:	ldr	x1, [sp, #264]
  428b24:	str	x1, [x0, #32]
  428b28:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  428b2c:	add	x0, x0, #0xb28
  428b30:	ldr	x0, [x0]
  428b34:	ldr	x1, [sp, #224]
  428b38:	cmp	x1, x0
  428b3c:	b.ne	428c18 <eval_buffer@@Base+0x3fc8>  // b.any
  428b40:	ldr	x0, [sp, #216]
  428b44:	cmp	x0, #0x0
  428b48:	b.ne	428c18 <eval_buffer@@Base+0x3fc8>  // b.any
  428b4c:	ldr	x0, [sp, #224]
  428b50:	ldr	x0, [x0, #24]
  428b54:	bl	422b98 <free_ns_chain@@Base>
  428b58:	ldr	x0, [sp, #224]
  428b5c:	str	xzr, [x0, #24]
  428b60:	b	428c18 <eval_buffer@@Base+0x3fc8>
  428b64:	ldr	x0, [sp, #104]
  428b68:	bl	40c5bc <lookup_file@@Base>
  428b6c:	str	x0, [sp, #224]
  428b70:	ldr	x0, [sp, #224]
  428b74:	cmp	x0, #0x0
  428b78:	b.eq	428be0 <eval_buffer@@Base+0x3f90>  // b.none
  428b7c:	ldr	x0, [sp, #224]
  428b80:	ldrb	w0, [x0, #137]
  428b84:	and	w0, w0, #0x8
  428b88:	and	w0, w0, #0xff
  428b8c:	cmp	w0, #0x0
  428b90:	b.eq	428be0 <eval_buffer@@Base+0x3f90>  // b.none
  428b94:	ldr	x0, [sp, #224]
  428b98:	ldr	x0, [x0, #104]
  428b9c:	cmp	x0, #0x0
  428ba0:	b.ne	428be0 <eval_buffer@@Base+0x3f90>  // b.any
  428ba4:	ldr	x0, [sp, #224]
  428ba8:	ldr	x0, [x0]
  428bac:	bl	4066f0 <strlen@plt>
  428bb0:	mov	x19, x0
  428bb4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428bb8:	add	x0, x0, #0x298
  428bbc:	bl	406e40 <gettext@plt>
  428bc0:	mov	x1, x0
  428bc4:	ldr	x0, [sp, #224]
  428bc8:	ldr	x0, [x0]
  428bcc:	mov	x3, x0
  428bd0:	mov	x2, x1
  428bd4:	mov	x1, x19
  428bd8:	ldr	x0, [sp, #288]
  428bdc:	bl	424098 <fatal@@Base>
  428be0:	ldr	x0, [sp, #104]
  428be4:	bl	430d78 <strcache_add@@Base>
  428be8:	bl	40c678 <enter_file@@Base>
  428bec:	str	x0, [sp, #224]
  428bf0:	ldr	x0, [sp, #224]
  428bf4:	ldr	x0, [x0, #104]
  428bf8:	cmp	x0, #0x0
  428bfc:	b.ne	428c0c <eval_buffer@@Base+0x3fbc>  // b.any
  428c00:	ldr	x0, [sp, #224]
  428c04:	ldr	x1, [sp, #224]
  428c08:	str	x1, [x0, #104]
  428c0c:	ldr	x0, [sp, #224]
  428c10:	ldr	x1, [sp, #264]
  428c14:	str	x1, [x0, #32]
  428c18:	ldr	w0, [sp, #84]
  428c1c:	cmp	w0, #0x0
  428c20:	b.eq	428c60 <eval_buffer@@Base+0x4010>  // b.none
  428c24:	mov	x0, #0x28                  	// #40
  428c28:	bl	4226d4 <xcalloc@@Base>
  428c2c:	str	x0, [sp, #160]
  428c30:	ldr	x0, [sp, #224]
  428c34:	ldr	x1, [x0]
  428c38:	ldr	x0, [sp, #160]
  428c3c:	str	x1, [x0, #8]
  428c40:	ldr	x0, [sp, #160]
  428c44:	ldr	x1, [sp, #224]
  428c48:	str	x1, [x0, #16]
  428c4c:	ldr	x0, [sp, #160]
  428c50:	ldr	x1, [sp, #248]
  428c54:	str	x1, [x0]
  428c58:	ldr	x0, [sp, #160]
  428c5c:	str	x0, [sp, #248]
  428c60:	ldr	x0, [sp, #224]
  428c64:	ldrb	w1, [x0, #137]
  428c68:	orr	w1, w1, #0x8
  428c6c:	strb	w1, [x0, #137]
  428c70:	ldr	x0, [sp, #72]
  428c74:	cmp	x0, #0x0
  428c78:	b.eq	428d44 <eval_buffer@@Base+0x40f4>  // b.none
  428c7c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  428c80:	add	x0, x0, #0xcc8
  428c84:	bl	40bf38 <variable_expand@@Base>
  428c88:	str	x0, [sp, #152]
  428c8c:	ldr	x1, [sp, #104]
  428c90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428c94:	add	x0, x0, #0x378
  428c98:	ldr	x2, [x0]
  428c9c:	ldr	x0, [sp, #64]
  428ca0:	add	x3, x0, #0x1
  428ca4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428ca8:	add	x0, x0, #0x378
  428cac:	ldr	x0, [x0]
  428cb0:	add	x0, x0, #0x1
  428cb4:	mov	x5, x0
  428cb8:	mov	x4, x3
  428cbc:	mov	x3, x2
  428cc0:	ldr	x2, [sp, #72]
  428cc4:	ldr	x0, [sp, #152]
  428cc8:	bl	40f7ac <patsubst_expand_pat@@Base>
  428ccc:	str	x0, [sp, #144]
  428cd0:	ldr	x1, [sp, #144]
  428cd4:	ldr	x0, [sp, #152]
  428cd8:	sub	x0, x1, x0
  428cdc:	mov	x1, x0
  428ce0:	ldr	x0, [sp, #152]
  428ce4:	bl	430da0 <strcache_add_len@@Base>
  428ce8:	mov	x1, x0
  428cec:	ldr	x0, [sp, #224]
  428cf0:	str	x1, [x0, #40]
  428cf4:	ldr	x0, [sp, #216]
  428cf8:	cmp	x0, #0x0
  428cfc:	b.eq	428d44 <eval_buffer@@Base+0x40f4>  // b.none
  428d00:	ldr	x0, [sp, #216]
  428d04:	ldrb	w0, [x0, #33]
  428d08:	and	w0, w0, #0x8
  428d0c:	and	w0, w0, #0xff
  428d10:	cmp	w0, #0x0
  428d14:	b.ne	428d34 <eval_buffer@@Base+0x40e4>  // b.any
  428d18:	ldr	x0, [sp, #224]
  428d1c:	ldr	x0, [x0, #40]
  428d20:	mov	x1, x0
  428d24:	ldr	x0, [sp, #216]
  428d28:	bl	40d370 <enter_prereqs@@Base>
  428d2c:	str	x0, [sp, #216]
  428d30:	b	428d44 <eval_buffer@@Base+0x40f4>
  428d34:	ldr	x0, [sp, #224]
  428d38:	ldr	x1, [x0, #40]
  428d3c:	ldr	x0, [sp, #216]
  428d40:	str	x1, [x0, #24]
  428d44:	ldr	x0, [sp, #216]
  428d48:	cmp	x0, #0x0
  428d4c:	b.eq	428dfc <eval_buffer@@Base+0x41ac>  // b.none
  428d50:	ldr	x0, [sp, #224]
  428d54:	ldr	x0, [x0, #24]
  428d58:	cmp	x0, #0x0
  428d5c:	b.ne	428d70 <eval_buffer@@Base+0x4120>  // b.any
  428d60:	ldr	x0, [sp, #224]
  428d64:	ldr	x1, [sp, #216]
  428d68:	str	x1, [x0, #24]
  428d6c:	b	428dfc <eval_buffer@@Base+0x41ac>
  428d70:	ldr	x0, [sp, #264]
  428d74:	cmp	x0, #0x0
  428d78:	b.eq	428dc4 <eval_buffer@@Base+0x4174>  // b.none
  428d7c:	ldr	x0, [sp, #216]
  428d80:	str	x0, [sp, #208]
  428d84:	b	428d94 <eval_buffer@@Base+0x4144>
  428d88:	ldr	x0, [sp, #208]
  428d8c:	ldr	x0, [x0]
  428d90:	str	x0, [sp, #208]
  428d94:	ldr	x0, [sp, #208]
  428d98:	ldr	x0, [x0]
  428d9c:	cmp	x0, #0x0
  428da0:	b.ne	428d88 <eval_buffer@@Base+0x4138>  // b.any
  428da4:	ldr	x0, [sp, #224]
  428da8:	ldr	x1, [x0, #24]
  428dac:	ldr	x0, [sp, #208]
  428db0:	str	x1, [x0]
  428db4:	ldr	x0, [sp, #224]
  428db8:	ldr	x1, [sp, #216]
  428dbc:	str	x1, [x0, #24]
  428dc0:	b	428dfc <eval_buffer@@Base+0x41ac>
  428dc4:	ldr	x0, [sp, #224]
  428dc8:	ldr	x0, [x0, #24]
  428dcc:	str	x0, [sp, #200]
  428dd0:	b	428de0 <eval_buffer@@Base+0x4190>
  428dd4:	ldr	x0, [sp, #200]
  428dd8:	ldr	x0, [x0]
  428ddc:	str	x0, [sp, #200]
  428de0:	ldr	x0, [sp, #200]
  428de4:	ldr	x0, [x0]
  428de8:	cmp	x0, #0x0
  428dec:	b.ne	428dd4 <eval_buffer@@Base+0x4184>  // b.any
  428df0:	ldr	x0, [sp, #200]
  428df4:	ldr	x1, [sp, #216]
  428df8:	str	x1, [x0]
  428dfc:	ldr	x0, [sp, #224]
  428e00:	ldr	x0, [x0]
  428e04:	str	x0, [sp, #104]
  428e08:	ldr	x0, [sp, #176]
  428e0c:	cmp	x0, #0x0
  428e10:	b.eq	428e58 <eval_buffer@@Base+0x4208>  // b.none
  428e14:	ldr	x0, [sp, #176]
  428e18:	str	x0, [sp, #88]
  428e1c:	ldr	x0, [sp, #88]
  428e20:	ldr	x0, [x0, #8]
  428e24:	str	x0, [sp, #104]
  428e28:	add	x0, sp, #0x68
  428e2c:	bl	4294f0 <find_percent_cached@@Base>
  428e30:	cmp	x0, #0x0
  428e34:	b.eq	4285b0 <eval_buffer@@Base+0x3960>  // b.none
  428e38:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428e3c:	add	x0, x0, #0x360
  428e40:	bl	406e40 <gettext@plt>
  428e44:	mov	x2, x0
  428e48:	mov	x1, #0x0                   	// #0
  428e4c:	ldr	x0, [sp, #288]
  428e50:	bl	423e74 <error@@Base>
  428e54:	b	4285b0 <eval_buffer@@Base+0x3960>
  428e58:	nop
  428e5c:	ldr	x0, [sp, #248]
  428e60:	str	x0, [sp, #192]
  428e64:	b	428f0c <eval_buffer@@Base+0x42bc>
  428e68:	ldr	x0, [sp, #192]
  428e6c:	ldr	x0, [x0, #16]
  428e70:	str	x0, [sp, #136]
  428e74:	ldr	x0, [sp, #192]
  428e78:	ldr	x0, [x0]
  428e7c:	cmp	x0, #0x0
  428e80:	b.eq	428e90 <eval_buffer@@Base+0x4240>  // b.none
  428e84:	ldr	x0, [sp, #248]
  428e88:	bl	422ad0 <copy_dep_chain@@Base>
  428e8c:	b	428e94 <eval_buffer@@Base+0x4244>
  428e90:	ldr	x0, [sp, #248]
  428e94:	str	x0, [sp, #128]
  428e98:	ldr	x0, [sp, #136]
  428e9c:	ldr	x0, [x0, #48]
  428ea0:	cmp	x0, #0x0
  428ea4:	b.eq	428ef4 <eval_buffer@@Base+0x42a4>  // b.none
  428ea8:	ldr	x19, [sp, #264]
  428eac:	ldr	x0, [sp, #136]
  428eb0:	ldr	x0, [x0]
  428eb4:	bl	4066f0 <strlen@plt>
  428eb8:	mov	x20, x0
  428ebc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  428ec0:	add	x0, x0, #0x398
  428ec4:	bl	406e40 <gettext@plt>
  428ec8:	mov	x1, x0
  428ecc:	ldr	x0, [sp, #136]
  428ed0:	ldr	x0, [x0]
  428ed4:	mov	x3, x0
  428ed8:	mov	x2, x1
  428edc:	mov	x1, x20
  428ee0:	mov	x0, x19
  428ee4:	bl	423e74 <error@@Base>
  428ee8:	ldr	x0, [sp, #136]
  428eec:	ldr	x0, [x0, #48]
  428ef0:	bl	422b98 <free_ns_chain@@Base>
  428ef4:	ldr	x0, [sp, #136]
  428ef8:	ldr	x1, [sp, #128]
  428efc:	str	x1, [x0, #48]
  428f00:	ldr	x0, [sp, #192]
  428f04:	ldr	x0, [x0]
  428f08:	str	x0, [sp, #192]
  428f0c:	ldr	x0, [sp, #192]
  428f10:	cmp	x0, #0x0
  428f14:	b.ne	428e68 <eval_buffer@@Base+0x4218>  // b.any
  428f18:	ldp	x19, x20, [sp, #16]
  428f1c:	ldp	x29, x30, [sp], #272
  428f20:	ret
  428f24:	stp	x29, x30, [sp, #-64]!
  428f28:	mov	x29, sp
  428f2c:	str	x0, [sp, #24]
  428f30:	str	w1, [sp, #20]
  428f34:	str	xzr, [sp, #56]
  428f38:	ldr	x0, [sp, #24]
  428f3c:	str	x0, [sp, #48]
  428f40:	ldr	w0, [sp, #20]
  428f44:	orr	w0, w0, #0x1
  428f48:	str	w0, [sp, #20]
  428f4c:	b	428f5c <eval_buffer@@Base+0x430c>
  428f50:	ldr	x0, [sp, #48]
  428f54:	add	x0, x0, #0x1
  428f58:	str	x0, [sp, #48]
  428f5c:	ldr	x0, [sp, #48]
  428f60:	ldrb	w0, [x0]
  428f64:	mov	w1, w0
  428f68:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  428f6c:	add	x0, x0, #0x728
  428f70:	sxtw	x1, w1
  428f74:	ldrh	w0, [x0, x1, lsl #1]
  428f78:	mov	w1, w0
  428f7c:	ldr	w0, [sp, #20]
  428f80:	and	w0, w1, w0
  428f84:	cmp	w0, #0x0
  428f88:	b.eq	428f50 <eval_buffer@@Base+0x4300>  // b.none
  428f8c:	ldr	x0, [sp, #48]
  428f90:	ldrb	w0, [x0]
  428f94:	cmp	w0, #0x0
  428f98:	b.eq	4291e0 <eval_buffer@@Base+0x4590>  // b.none
  428f9c:	ldr	x0, [sp, #48]
  428fa0:	ldrb	w0, [x0]
  428fa4:	cmp	w0, #0x24
  428fa8:	b.ne	429094 <eval_buffer@@Base+0x4444>  // b.any
  428fac:	ldr	x0, [sp, #48]
  428fb0:	ldrb	w0, [x0, #1]
  428fb4:	strb	w0, [sp, #39]
  428fb8:	ldrb	w0, [sp, #39]
  428fbc:	cmp	w0, #0x0
  428fc0:	b.eq	4291e8 <eval_buffer@@Base+0x4598>  // b.none
  428fc4:	ldr	x0, [sp, #48]
  428fc8:	add	x0, x0, #0x2
  428fcc:	str	x0, [sp, #48]
  428fd0:	ldrb	w0, [sp, #39]
  428fd4:	cmp	w0, #0x28
  428fd8:	b.eq	428fe8 <eval_buffer@@Base+0x4398>  // b.none
  428fdc:	ldrb	w0, [sp, #39]
  428fe0:	cmp	w0, #0x7b
  428fe4:	b.ne	4291d0 <eval_buffer@@Base+0x4580>  // b.any
  428fe8:	mov	w0, #0x1                   	// #1
  428fec:	str	w0, [sp, #44]
  428ff0:	ldrb	w0, [sp, #39]
  428ff4:	cmp	w0, #0x28
  428ff8:	b.ne	429004 <eval_buffer@@Base+0x43b4>  // b.any
  428ffc:	mov	w0, #0x29                  	// #41
  429000:	b	429008 <eval_buffer@@Base+0x43b8>
  429004:	mov	w0, #0x7d                  	// #125
  429008:	strb	w0, [sp, #38]
  42900c:	b	429080 <eval_buffer@@Base+0x4430>
  429010:	ldr	x0, [sp, #48]
  429014:	ldrb	w0, [x0]
  429018:	ldrb	w1, [sp, #39]
  42901c:	cmp	w1, w0
  429020:	b.ne	429034 <eval_buffer@@Base+0x43e4>  // b.any
  429024:	ldr	w0, [sp, #44]
  429028:	add	w0, w0, #0x1
  42902c:	str	w0, [sp, #44]
  429030:	b	429074 <eval_buffer@@Base+0x4424>
  429034:	ldr	x0, [sp, #48]
  429038:	ldrb	w0, [x0]
  42903c:	ldrb	w1, [sp, #38]
  429040:	cmp	w1, w0
  429044:	b.ne	429074 <eval_buffer@@Base+0x4424>  // b.any
  429048:	ldr	w0, [sp, #44]
  42904c:	sub	w0, w0, #0x1
  429050:	str	w0, [sp, #44]
  429054:	ldr	w0, [sp, #44]
  429058:	cmp	w0, #0x0
  42905c:	b.ne	429074 <eval_buffer@@Base+0x4424>  // b.any
  429060:	ldr	x0, [sp, #48]
  429064:	add	x0, x0, #0x1
  429068:	str	x0, [sp, #48]
  42906c:	nop
  429070:	b	4291d0 <eval_buffer@@Base+0x4580>
  429074:	ldr	x0, [sp, #48]
  429078:	add	x0, x0, #0x1
  42907c:	str	x0, [sp, #48]
  429080:	ldr	x0, [sp, #48]
  429084:	ldrb	w0, [x0]
  429088:	cmp	w0, #0x0
  42908c:	b.ne	429010 <eval_buffer@@Base+0x43c0>  // b.any
  429090:	b	4291d0 <eval_buffer@@Base+0x4580>
  429094:	ldr	x1, [sp, #48]
  429098:	ldr	x0, [sp, #24]
  42909c:	cmp	x1, x0
  4290a0:	b.ls	4291c8 <eval_buffer@@Base+0x4578>  // b.plast
  4290a4:	ldr	x0, [sp, #48]
  4290a8:	sub	x0, x0, #0x1
  4290ac:	ldrb	w0, [x0]
  4290b0:	cmp	w0, #0x5c
  4290b4:	b.ne	4291c8 <eval_buffer@@Base+0x4578>  // b.any
  4290b8:	mov	w0, #0xfffffffe            	// #-2
  4290bc:	str	w0, [sp, #40]
  4290c0:	b	4290d0 <eval_buffer@@Base+0x4480>
  4290c4:	ldr	w0, [sp, #40]
  4290c8:	sub	w0, w0, #0x1
  4290cc:	str	w0, [sp, #40]
  4290d0:	ldrsw	x0, [sp, #40]
  4290d4:	ldr	x1, [sp, #48]
  4290d8:	add	x0, x1, x0
  4290dc:	ldr	x1, [sp, #24]
  4290e0:	cmp	x1, x0
  4290e4:	b.hi	429100 <eval_buffer@@Base+0x44b0>  // b.pmore
  4290e8:	ldrsw	x0, [sp, #40]
  4290ec:	ldr	x1, [sp, #48]
  4290f0:	add	x0, x1, x0
  4290f4:	ldrb	w0, [x0]
  4290f8:	cmp	w0, #0x5c
  4290fc:	b.eq	4290c4 <eval_buffer@@Base+0x4474>  // b.none
  429100:	ldr	w0, [sp, #40]
  429104:	add	w0, w0, #0x1
  429108:	str	w0, [sp, #40]
  42910c:	ldr	x0, [sp, #56]
  429110:	cmp	x0, #0x0
  429114:	b.ne	429124 <eval_buffer@@Base+0x44d4>  // b.any
  429118:	ldr	x0, [sp, #24]
  42911c:	bl	4066f0 <strlen@plt>
  429120:	str	x0, [sp, #56]
  429124:	ldrsw	x0, [sp, #40]
  429128:	ldr	x1, [sp, #48]
  42912c:	add	x3, x1, x0
  429130:	ldr	w0, [sp, #40]
  429134:	lsr	w1, w0, #31
  429138:	add	w0, w1, w0
  42913c:	asr	w0, w0, #1
  429140:	sxtw	x0, w0
  429144:	ldr	x1, [sp, #48]
  429148:	add	x4, x1, x0
  42914c:	ldr	x1, [sp, #48]
  429150:	ldr	x0, [sp, #24]
  429154:	sub	x0, x1, x0
  429158:	mov	x1, x0
  42915c:	ldr	x0, [sp, #56]
  429160:	sub	x1, x0, x1
  429164:	ldr	w0, [sp, #40]
  429168:	lsr	w2, w0, #31
  42916c:	add	w0, w2, w0
  429170:	asr	w0, w0, #1
  429174:	sxtw	x0, w0
  429178:	sub	x0, x1, x0
  42917c:	add	x0, x0, #0x1
  429180:	mov	x2, x0
  429184:	mov	x1, x4
  429188:	mov	x0, x3
  42918c:	bl	4066c0 <memmove@plt>
  429190:	ldr	w0, [sp, #40]
  429194:	lsr	w1, w0, #31
  429198:	add	w0, w1, w0
  42919c:	asr	w0, w0, #1
  4291a0:	sxtw	x0, w0
  4291a4:	ldr	x1, [sp, #48]
  4291a8:	add	x0, x1, x0
  4291ac:	str	x0, [sp, #48]
  4291b0:	ldr	w0, [sp, #40]
  4291b4:	and	w0, w0, #0x1
  4291b8:	cmp	w0, #0x0
  4291bc:	b.ne	4291d8 <eval_buffer@@Base+0x4588>  // b.any
  4291c0:	ldr	x0, [sp, #48]
  4291c4:	b	4291f0 <eval_buffer@@Base+0x45a0>
  4291c8:	ldr	x0, [sp, #48]
  4291cc:	b	4291f0 <eval_buffer@@Base+0x45a0>
  4291d0:	nop
  4291d4:	b	428f5c <eval_buffer@@Base+0x430c>
  4291d8:	nop
  4291dc:	b	428f5c <eval_buffer@@Base+0x430c>
  4291e0:	nop
  4291e4:	b	4291ec <eval_buffer@@Base+0x459c>
  4291e8:	nop
  4291ec:	mov	x0, #0x0                   	// #0
  4291f0:	ldp	x29, x30, [sp], #64
  4291f4:	ret
  4291f8:	stp	x29, x30, [sp, #-64]!
  4291fc:	mov	x29, sp
  429200:	str	x0, [sp, #24]
  429204:	str	w1, [sp, #20]
  429208:	str	xzr, [sp, #56]
  42920c:	ldr	x0, [sp, #24]
  429210:	str	x0, [sp, #48]
  429214:	ldr	w1, [sp, #20]
  429218:	ldr	x0, [sp, #48]
  42921c:	bl	406c20 <strchr@plt>
  429220:	str	x0, [sp, #48]
  429224:	ldr	x0, [sp, #48]
  429228:	cmp	x0, #0x0
  42922c:	b.ne	429238 <eval_buffer@@Base+0x45e8>  // b.any
  429230:	mov	x0, #0x0                   	// #0
  429234:	b	42937c <eval_buffer@@Base+0x472c>
  429238:	ldr	x1, [sp, #48]
  42923c:	ldr	x0, [sp, #24]
  429240:	cmp	x1, x0
  429244:	b.ls	42936c <eval_buffer@@Base+0x471c>  // b.plast
  429248:	ldr	x0, [sp, #48]
  42924c:	sub	x0, x0, #0x1
  429250:	ldrb	w0, [x0]
  429254:	cmp	w0, #0x5c
  429258:	b.ne	42936c <eval_buffer@@Base+0x471c>  // b.any
  42925c:	mov	w0, #0xfffffffe            	// #-2
  429260:	str	w0, [sp, #44]
  429264:	b	429274 <eval_buffer@@Base+0x4624>
  429268:	ldr	w0, [sp, #44]
  42926c:	sub	w0, w0, #0x1
  429270:	str	w0, [sp, #44]
  429274:	ldrsw	x0, [sp, #44]
  429278:	ldr	x1, [sp, #48]
  42927c:	add	x0, x1, x0
  429280:	ldr	x1, [sp, #24]
  429284:	cmp	x1, x0
  429288:	b.hi	4292a4 <eval_buffer@@Base+0x4654>  // b.pmore
  42928c:	ldrsw	x0, [sp, #44]
  429290:	ldr	x1, [sp, #48]
  429294:	add	x0, x1, x0
  429298:	ldrb	w0, [x0]
  42929c:	cmp	w0, #0x5c
  4292a0:	b.eq	429268 <eval_buffer@@Base+0x4618>  // b.none
  4292a4:	ldr	w0, [sp, #44]
  4292a8:	add	w0, w0, #0x1
  4292ac:	str	w0, [sp, #44]
  4292b0:	ldr	x0, [sp, #56]
  4292b4:	cmp	x0, #0x0
  4292b8:	b.ne	4292c8 <eval_buffer@@Base+0x4678>  // b.any
  4292bc:	ldr	x0, [sp, #24]
  4292c0:	bl	4066f0 <strlen@plt>
  4292c4:	str	x0, [sp, #56]
  4292c8:	ldrsw	x0, [sp, #44]
  4292cc:	ldr	x1, [sp, #48]
  4292d0:	add	x3, x1, x0
  4292d4:	ldr	w0, [sp, #44]
  4292d8:	lsr	w1, w0, #31
  4292dc:	add	w0, w1, w0
  4292e0:	asr	w0, w0, #1
  4292e4:	sxtw	x0, w0
  4292e8:	ldr	x1, [sp, #48]
  4292ec:	add	x4, x1, x0
  4292f0:	ldr	x1, [sp, #48]
  4292f4:	ldr	x0, [sp, #24]
  4292f8:	sub	x0, x1, x0
  4292fc:	mov	x1, x0
  429300:	ldr	x0, [sp, #56]
  429304:	sub	x1, x0, x1
  429308:	ldr	w0, [sp, #44]
  42930c:	lsr	w2, w0, #31
  429310:	add	w0, w2, w0
  429314:	asr	w0, w0, #1
  429318:	sxtw	x0, w0
  42931c:	sub	x0, x1, x0
  429320:	add	x0, x0, #0x1
  429324:	mov	x2, x0
  429328:	mov	x1, x4
  42932c:	mov	x0, x3
  429330:	bl	4066c0 <memmove@plt>
  429334:	ldr	w0, [sp, #44]
  429338:	lsr	w1, w0, #31
  42933c:	add	w0, w1, w0
  429340:	asr	w0, w0, #1
  429344:	sxtw	x0, w0
  429348:	ldr	x1, [sp, #48]
  42934c:	add	x0, x1, x0
  429350:	str	x0, [sp, #48]
  429354:	ldr	w0, [sp, #44]
  429358:	and	w0, w0, #0x1
  42935c:	cmp	w0, #0x0
  429360:	b.ne	429374 <eval_buffer@@Base+0x4724>  // b.any
  429364:	ldr	x0, [sp, #48]
  429368:	b	42937c <eval_buffer@@Base+0x472c>
  42936c:	ldr	x0, [sp, #48]
  429370:	b	42937c <eval_buffer@@Base+0x472c>
  429374:	nop
  429378:	b	429214 <eval_buffer@@Base+0x45c4>
  42937c:	ldp	x29, x30, [sp], #64
  429380:	ret
  429384:	stp	x29, x30, [sp, #-64]!
  429388:	mov	x29, sp
  42938c:	str	x0, [sp, #24]
  429390:	str	w1, [sp, #20]
  429394:	ldr	x0, [sp, #24]
  429398:	str	x0, [sp, #56]
  42939c:	ldr	x0, [sp, #24]
  4293a0:	str	x0, [sp, #48]
  4293a4:	b	4294ac <eval_buffer@@Base+0x485c>
  4293a8:	ldr	x0, [sp, #48]
  4293ac:	ldrb	w0, [x0]
  4293b0:	cmp	w0, #0x5c
  4293b4:	b.ne	42948c <eval_buffer@@Base+0x483c>  // b.any
  4293b8:	ldr	x0, [sp, #48]
  4293bc:	str	x0, [sp, #40]
  4293c0:	b	4293d0 <eval_buffer@@Base+0x4780>
  4293c4:	ldr	x0, [sp, #40]
  4293c8:	add	x0, x0, #0x1
  4293cc:	str	x0, [sp, #40]
  4293d0:	ldr	x0, [sp, #40]
  4293d4:	ldrb	w0, [x0]
  4293d8:	cmp	w0, #0x5c
  4293dc:	b.eq	4293c4 <eval_buffer@@Base+0x4774>  // b.none
  4293e0:	ldr	x1, [sp, #40]
  4293e4:	ldr	x0, [sp, #48]
  4293e8:	sub	x0, x1, x0
  4293ec:	str	x0, [sp, #32]
  4293f0:	ldr	x0, [sp, #40]
  4293f4:	ldrb	w0, [x0]
  4293f8:	mov	w1, w0
  4293fc:	ldr	w0, [sp, #20]
  429400:	cmp	w0, w1
  429404:	b.ne	429418 <eval_buffer@@Base+0x47c8>  // b.any
  429408:	ldr	x0, [sp, #32]
  42940c:	and	x0, x0, #0x1
  429410:	cmp	x0, #0x0
  429414:	b.ne	42944c <eval_buffer@@Base+0x47fc>  // b.any
  429418:	ldr	x2, [sp, #32]
  42941c:	ldr	x1, [sp, #48]
  429420:	ldr	x0, [sp, #56]
  429424:	bl	4066c0 <memmove@plt>
  429428:	ldr	x1, [sp, #56]
  42942c:	ldr	x0, [sp, #32]
  429430:	add	x0, x1, x0
  429434:	str	x0, [sp, #56]
  429438:	ldr	x0, [sp, #40]
  42943c:	ldrb	w0, [x0]
  429440:	cmp	w0, #0x0
  429444:	b.ne	429484 <eval_buffer@@Base+0x4834>  // b.any
  429448:	b	4294bc <eval_buffer@@Base+0x486c>
  42944c:	ldr	x0, [sp, #32]
  429450:	cmp	x0, #0x1
  429454:	b.ls	429484 <eval_buffer@@Base+0x4834>  // b.plast
  429458:	ldr	x0, [sp, #32]
  42945c:	lsr	x0, x0, #1
  429460:	str	x0, [sp, #32]
  429464:	ldr	x2, [sp, #32]
  429468:	ldr	x1, [sp, #48]
  42946c:	ldr	x0, [sp, #56]
  429470:	bl	4066c0 <memmove@plt>
  429474:	ldr	x1, [sp, #56]
  429478:	ldr	x0, [sp, #32]
  42947c:	add	x0, x1, x0
  429480:	str	x0, [sp, #56]
  429484:	ldr	x0, [sp, #40]
  429488:	str	x0, [sp, #48]
  42948c:	ldr	x1, [sp, #48]
  429490:	add	x0, x1, #0x1
  429494:	str	x0, [sp, #48]
  429498:	ldr	x0, [sp, #56]
  42949c:	add	x2, x0, #0x1
  4294a0:	str	x2, [sp, #56]
  4294a4:	ldrb	w1, [x1]
  4294a8:	strb	w1, [x0]
  4294ac:	ldr	x0, [sp, #48]
  4294b0:	ldrb	w0, [x0]
  4294b4:	cmp	w0, #0x0
  4294b8:	b.ne	4293a8 <eval_buffer@@Base+0x4758>  // b.any
  4294bc:	ldr	x0, [sp, #56]
  4294c0:	strb	wzr, [x0]
  4294c4:	ldr	x0, [sp, #24]
  4294c8:	ldp	x29, x30, [sp], #64
  4294cc:	ret

00000000004294d0 <find_percent@@Base>:
  4294d0:	stp	x29, x30, [sp, #-32]!
  4294d4:	mov	x29, sp
  4294d8:	str	x0, [sp, #24]
  4294dc:	mov	w1, #0x25                  	// #37
  4294e0:	ldr	x0, [sp, #24]
  4294e4:	bl	4291f8 <eval_buffer@@Base+0x45a8>
  4294e8:	ldp	x29, x30, [sp], #32
  4294ec:	ret

00000000004294f0 <find_percent_cached@@Base>:
  4294f0:	stp	x29, x30, [sp, #-80]!
  4294f4:	mov	x29, sp
  4294f8:	str	x0, [x29, #24]
  4294fc:	ldr	x0, [x29, #24]
  429500:	ldr	x0, [x0]
  429504:	str	x0, [x29, #72]
  429508:	str	xzr, [x29, #64]
  42950c:	str	xzr, [x29, #56]
  429510:	ldr	x0, [x29, #72]
  429514:	ldrb	w0, [x0]
  429518:	cmp	w0, #0x25
  42951c:	b.ne	429528 <find_percent_cached@@Base+0x38>  // b.any
  429520:	ldr	x0, [x29, #72]
  429524:	b	429764 <find_percent_cached@@Base+0x274>
  429528:	mov	w1, #0x25                  	// #37
  42952c:	ldr	x0, [x29, #72]
  429530:	bl	406c20 <strchr@plt>
  429534:	str	x0, [x29, #72]
  429538:	ldr	x0, [x29, #72]
  42953c:	cmp	x0, #0x0
  429540:	b.eq	429700 <find_percent_cached@@Base+0x210>  // b.none
  429544:	ldr	x0, [x29, #72]
  429548:	sub	x0, x0, #0x1
  42954c:	ldrb	w0, [x0]
  429550:	cmp	w0, #0x5c
  429554:	b.ne	429708 <find_percent_cached@@Base+0x218>  // b.any
  429558:	mov	w0, #0xfffffffe            	// #-2
  42955c:	str	w0, [x29, #52]
  429560:	b	429570 <find_percent_cached@@Base+0x80>
  429564:	ldr	w0, [x29, #52]
  429568:	sub	w0, w0, #0x1
  42956c:	str	w0, [x29, #52]
  429570:	ldrsw	x0, [x29, #52]
  429574:	ldr	x1, [x29, #72]
  429578:	add	x1, x1, x0
  42957c:	ldr	x0, [x29, #24]
  429580:	ldr	x0, [x0]
  429584:	cmp	x1, x0
  429588:	b.cc	4295a4 <find_percent_cached@@Base+0xb4>  // b.lo, b.ul, b.last
  42958c:	ldrsw	x0, [x29, #52]
  429590:	ldr	x1, [x29, #72]
  429594:	add	x0, x1, x0
  429598:	ldrb	w0, [x0]
  42959c:	cmp	w0, #0x5c
  4295a0:	b.eq	429564 <find_percent_cached@@Base+0x74>  // b.none
  4295a4:	ldr	w0, [x29, #52]
  4295a8:	add	w0, w0, #0x1
  4295ac:	str	w0, [x29, #52]
  4295b0:	ldr	x0, [x29, #64]
  4295b4:	cmp	x0, #0x0
  4295b8:	b.ne	429640 <find_percent_cached@@Base+0x150>  // b.any
  4295bc:	ldr	x0, [x29, #24]
  4295c0:	ldr	x0, [x0]
  4295c4:	bl	4066f0 <strlen@plt>
  4295c8:	str	x0, [x29, #56]
  4295cc:	ldr	x0, [x29, #56]
  4295d0:	add	x0, x0, #0x1
  4295d4:	add	x0, x0, #0xf
  4295d8:	lsr	x0, x0, #4
  4295dc:	lsl	x0, x0, #4
  4295e0:	sub	sp, sp, x0
  4295e4:	mov	x0, sp
  4295e8:	add	x0, x0, #0xf
  4295ec:	lsr	x0, x0, #4
  4295f0:	lsl	x0, x0, #4
  4295f4:	str	x0, [x29, #64]
  4295f8:	ldr	x0, [x29, #24]
  4295fc:	ldr	x1, [x0]
  429600:	ldr	x0, [x29, #56]
  429604:	add	x0, x0, #0x1
  429608:	mov	x2, x0
  42960c:	ldr	x0, [x29, #64]
  429610:	bl	4066b0 <memcpy@plt>
  429614:	ldr	x0, [x29, #24]
  429618:	ldr	x0, [x0]
  42961c:	ldr	x1, [x29, #72]
  429620:	sub	x0, x1, x0
  429624:	mov	x1, x0
  429628:	ldr	x0, [x29, #64]
  42962c:	add	x0, x0, x1
  429630:	str	x0, [x29, #72]
  429634:	ldr	x0, [x29, #24]
  429638:	ldr	x1, [x29, #64]
  42963c:	str	x1, [x0]
  429640:	ldr	x0, [x29, #24]
  429644:	ldr	x0, [x0]
  429648:	ldr	x1, [x29, #72]
  42964c:	sub	x0, x1, x0
  429650:	mov	x1, x0
  429654:	ldr	x0, [x29, #64]
  429658:	add	x0, x0, x1
  42965c:	str	x0, [x29, #40]
  429660:	ldrsw	x0, [x29, #52]
  429664:	ldr	x1, [x29, #40]
  429668:	add	x3, x1, x0
  42966c:	ldr	w0, [x29, #52]
  429670:	lsr	w1, w0, #31
  429674:	add	w0, w1, w0
  429678:	asr	w0, w0, #1
  42967c:	sxtw	x0, w0
  429680:	ldr	x1, [x29, #40]
  429684:	add	x4, x1, x0
  429688:	ldr	x1, [x29, #40]
  42968c:	ldr	x0, [x29, #64]
  429690:	sub	x0, x1, x0
  429694:	mov	x1, x0
  429698:	ldr	x0, [x29, #56]
  42969c:	sub	x1, x0, x1
  4296a0:	ldr	w0, [x29, #52]
  4296a4:	lsr	w2, w0, #31
  4296a8:	add	w0, w2, w0
  4296ac:	asr	w0, w0, #1
  4296b0:	sxtw	x0, w0
  4296b4:	sub	x0, x1, x0
  4296b8:	add	x0, x0, #0x1
  4296bc:	mov	x2, x0
  4296c0:	mov	x1, x4
  4296c4:	mov	x0, x3
  4296c8:	bl	4066c0 <memmove@plt>
  4296cc:	ldr	w0, [x29, #52]
  4296d0:	lsr	w1, w0, #31
  4296d4:	add	w0, w1, w0
  4296d8:	asr	w0, w0, #1
  4296dc:	sxtw	x0, w0
  4296e0:	ldr	x1, [x29, #72]
  4296e4:	add	x0, x1, x0
  4296e8:	str	x0, [x29, #72]
  4296ec:	ldr	w0, [x29, #52]
  4296f0:	and	w0, w0, #0x1
  4296f4:	cmp	w0, #0x0
  4296f8:	b.eq	429710 <find_percent_cached@@Base+0x220>  // b.none
  4296fc:	b	429528 <find_percent_cached@@Base+0x38>
  429700:	nop
  429704:	b	429714 <find_percent_cached@@Base+0x224>
  429708:	nop
  42970c:	b	429714 <find_percent_cached@@Base+0x224>
  429710:	nop
  429714:	ldr	x0, [x29, #64]
  429718:	cmp	x0, #0x0
  42971c:	b.eq	429760 <find_percent_cached@@Base+0x270>  // b.none
  429720:	ldr	x0, [x29, #24]
  429724:	ldr	x0, [x0]
  429728:	bl	430d78 <strcache_add@@Base>
  42972c:	mov	x1, x0
  429730:	ldr	x0, [x29, #24]
  429734:	str	x1, [x0]
  429738:	ldr	x0, [x29, #72]
  42973c:	cmp	x0, #0x0
  429740:	b.eq	429760 <find_percent_cached@@Base+0x270>  // b.none
  429744:	ldr	x0, [x29, #24]
  429748:	ldr	x0, [x0]
  42974c:	ldr	x2, [x29, #72]
  429750:	ldr	x1, [x29, #64]
  429754:	sub	x1, x2, x1
  429758:	add	x0, x0, x1
  42975c:	str	x0, [x29, #72]
  429760:	ldr	x0, [x29, #72]
  429764:	mov	sp, x29
  429768:	ldp	x29, x30, [sp], #80
  42976c:	ret
  429770:	stp	x29, x30, [sp, #-64]!
  429774:	mov	x29, sp
  429778:	str	x0, [sp, #24]
  42977c:	ldr	x0, [sp, #24]
  429780:	ldr	x1, [x0, #8]
  429784:	ldr	x0, [sp, #24]
  429788:	ldr	x2, [x0, #16]
  42978c:	ldr	x0, [sp, #24]
  429790:	ldr	x0, [x0, #24]
  429794:	add	x0, x2, x0
  429798:	cmp	x1, x0
  42979c:	b.cc	4297a8 <find_percent_cached@@Base+0x2b8>  // b.lo, b.ul, b.last
  4297a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4297a4:	b	429898 <find_percent_cached@@Base+0x3a8>
  4297a8:	ldr	x0, [sp, #24]
  4297ac:	ldr	x1, [x0, #8]
  4297b0:	ldr	x0, [sp, #24]
  4297b4:	str	x1, [x0]
  4297b8:	ldr	x0, [sp, #24]
  4297bc:	ldr	x0, [x0]
  4297c0:	str	x0, [sp, #56]
  4297c4:	str	wzr, [sp, #52]
  4297c8:	ldr	x0, [sp, #56]
  4297cc:	str	x0, [sp, #32]
  4297d0:	mov	w1, #0xa                   	// #10
  4297d4:	ldr	x0, [sp, #56]
  4297d8:	bl	406c20 <strchr@plt>
  4297dc:	str	x0, [sp, #56]
  4297e0:	ldr	x0, [sp, #56]
  4297e4:	str	x0, [sp, #40]
  4297e8:	ldr	x0, [sp, #56]
  4297ec:	cmp	x0, #0x0
  4297f0:	b.ne	429830 <find_percent_cached@@Base+0x340>  // b.any
  4297f4:	ldr	x0, [sp, #24]
  4297f8:	ldr	x1, [x0, #16]
  4297fc:	ldr	x0, [sp, #24]
  429800:	ldr	x0, [x0, #24]
  429804:	add	x0, x0, #0x1
  429808:	add	x1, x1, x0
  42980c:	ldr	x0, [sp, #24]
  429810:	str	x1, [x0, #8]
  429814:	mov	x0, #0x0                   	// #0
  429818:	b	429898 <find_percent_cached@@Base+0x3a8>
  42981c:	ldr	w0, [sp, #52]
  429820:	cmp	w0, #0x0
  429824:	cset	w0, eq  // eq = none
  429828:	and	w0, w0, #0xff
  42982c:	str	w0, [sp, #52]
  429830:	ldr	x1, [sp, #40]
  429834:	ldr	x0, [sp, #32]
  429838:	cmp	x1, x0
  42983c:	b.ls	42985c <find_percent_cached@@Base+0x36c>  // b.plast
  429840:	ldr	x0, [sp, #40]
  429844:	sub	x0, x0, #0x1
  429848:	str	x0, [sp, #40]
  42984c:	ldr	x0, [sp, #40]
  429850:	ldrb	w0, [x0]
  429854:	cmp	w0, #0x5c
  429858:	b.eq	42981c <find_percent_cached@@Base+0x32c>  // b.none
  42985c:	ldr	w0, [sp, #52]
  429860:	cmp	w0, #0x0
  429864:	b.eq	429878 <find_percent_cached@@Base+0x388>  // b.none
  429868:	ldr	x0, [sp, #56]
  42986c:	add	x0, x0, #0x1
  429870:	str	x0, [sp, #56]
  429874:	b	4297c4 <find_percent_cached@@Base+0x2d4>
  429878:	nop
  42987c:	ldr	x0, [sp, #56]
  429880:	strb	wzr, [x0]
  429884:	ldr	x0, [sp, #56]
  429888:	add	x1, x0, #0x1
  42988c:	ldr	x0, [sp, #24]
  429890:	str	x1, [x0, #8]
  429894:	mov	x0, #0x0                   	// #0
  429898:	ldp	x29, x30, [sp], #64
  42989c:	ret
  4298a0:	stp	x29, x30, [sp, #-112]!
  4298a4:	mov	x29, sp
  4298a8:	str	x19, [sp, #16]
  4298ac:	str	x0, [sp, #40]
  4298b0:	str	xzr, [sp, #80]
  4298b4:	ldr	x0, [sp, #40]
  4298b8:	ldr	x0, [x0, #32]
  4298bc:	cmp	x0, #0x0
  4298c0:	b.ne	4298d0 <find_percent_cached@@Base+0x3e0>  // b.any
  4298c4:	ldr	x0, [sp, #40]
  4298c8:	bl	429770 <find_percent_cached@@Base+0x280>
  4298cc:	b	429b84 <find_percent_cached@@Base+0x694>
  4298d0:	ldr	x0, [sp, #40]
  4298d4:	ldr	x0, [x0, #16]
  4298d8:	str	x0, [sp, #88]
  4298dc:	ldr	x0, [sp, #88]
  4298e0:	str	x0, [sp, #104]
  4298e4:	ldr	x0, [sp, #40]
  4298e8:	ldr	x0, [x0, #24]
  4298ec:	ldr	x1, [sp, #104]
  4298f0:	add	x0, x1, x0
  4298f4:	str	x0, [sp, #96]
  4298f8:	ldr	x0, [sp, #104]
  4298fc:	strb	wzr, [x0]
  429900:	b	429b04 <find_percent_cached@@Base+0x614>
  429904:	ldr	x0, [sp, #104]
  429908:	bl	4066f0 <strlen@plt>
  42990c:	str	x0, [sp, #64]
  429910:	ldr	x0, [sp, #64]
  429914:	cmp	x0, #0x0
  429918:	b.ne	429954 <find_percent_cached@@Base+0x464>  // b.any
  42991c:	ldr	x0, [sp, #40]
  429920:	add	x19, x0, #0x28
  429924:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  429928:	add	x0, x0, #0x3d0
  42992c:	bl	406e40 <gettext@plt>
  429930:	mov	x2, x0
  429934:	mov	x1, #0x0                   	// #0
  429938:	mov	x0, x19
  42993c:	bl	423e74 <error@@Base>
  429940:	ldr	x0, [sp, #104]
  429944:	mov	w1, #0xa                   	// #10
  429948:	strb	w1, [x0]
  42994c:	mov	x0, #0x1                   	// #1
  429950:	str	x0, [sp, #64]
  429954:	ldr	x1, [sp, #104]
  429958:	ldr	x0, [sp, #64]
  42995c:	add	x0, x1, x0
  429960:	str	x0, [sp, #104]
  429964:	ldr	x0, [sp, #104]
  429968:	sub	x0, x0, #0x1
  42996c:	ldrb	w0, [x0]
  429970:	cmp	w0, #0xa
  429974:	b.ne	429a6c <find_percent_cached@@Base+0x57c>  // b.any
  429978:	ldr	x0, [sp, #80]
  42997c:	add	x0, x0, #0x1
  429980:	str	x0, [sp, #80]
  429984:	ldr	x1, [sp, #104]
  429988:	ldr	x0, [sp, #88]
  42998c:	sub	x0, x1, x0
  429990:	cmp	x0, #0x1
  429994:	b.le	4299dc <find_percent_cached@@Base+0x4ec>
  429998:	ldr	x0, [sp, #104]
  42999c:	sub	x0, x0, #0x2
  4299a0:	ldrb	w0, [x0]
  4299a4:	cmp	w0, #0xd
  4299a8:	b.ne	4299dc <find_percent_cached@@Base+0x4ec>  // b.any
  4299ac:	ldr	x0, [sp, #104]
  4299b0:	sub	x0, x0, #0x1
  4299b4:	str	x0, [sp, #104]
  4299b8:	ldr	x0, [sp, #104]
  4299bc:	sub	x19, x0, #0x1
  4299c0:	ldr	x0, [sp, #104]
  4299c4:	bl	4066f0 <strlen@plt>
  4299c8:	add	x0, x0, #0x1
  4299cc:	mov	x2, x0
  4299d0:	ldr	x1, [sp, #104]
  4299d4:	mov	x0, x19
  4299d8:	bl	4066c0 <memmove@plt>
  4299dc:	str	wzr, [sp, #60]
  4299e0:	ldr	x0, [sp, #104]
  4299e4:	sub	x0, x0, #0x2
  4299e8:	str	x0, [sp, #72]
  4299ec:	b	429a20 <find_percent_cached@@Base+0x530>
  4299f0:	ldr	x0, [sp, #72]
  4299f4:	ldrb	w0, [x0]
  4299f8:	cmp	w0, #0x5c
  4299fc:	b.ne	429a34 <find_percent_cached@@Base+0x544>  // b.any
  429a00:	ldr	w0, [sp, #60]
  429a04:	cmp	w0, #0x0
  429a08:	cset	w0, eq  // eq = none
  429a0c:	and	w0, w0, #0xff
  429a10:	str	w0, [sp, #60]
  429a14:	ldr	x0, [sp, #72]
  429a18:	sub	x0, x0, #0x1
  429a1c:	str	x0, [sp, #72]
  429a20:	ldr	x1, [sp, #72]
  429a24:	ldr	x0, [sp, #88]
  429a28:	cmp	x1, x0
  429a2c:	b.cs	4299f0 <find_percent_cached@@Base+0x500>  // b.hs, b.nlast
  429a30:	b	429a38 <find_percent_cached@@Base+0x548>
  429a34:	nop
  429a38:	ldr	w0, [sp, #60]
  429a3c:	cmp	w0, #0x0
  429a40:	b.ne	429a54 <find_percent_cached@@Base+0x564>  // b.any
  429a44:	ldr	x0, [sp, #104]
  429a48:	sub	x0, x0, #0x1
  429a4c:	strb	wzr, [x0]
  429a50:	b	429b30 <find_percent_cached@@Base+0x640>
  429a54:	ldr	x1, [sp, #96]
  429a58:	ldr	x0, [sp, #104]
  429a5c:	sub	x0, x1, x0
  429a60:	cmp	x0, #0x4f
  429a64:	b.le	429a74 <find_percent_cached@@Base+0x584>
  429a68:	b	429b04 <find_percent_cached@@Base+0x614>
  429a6c:	nop
  429a70:	b	429a78 <find_percent_cached@@Base+0x588>
  429a74:	nop
  429a78:	ldr	x1, [sp, #104]
  429a7c:	ldr	x0, [sp, #88]
  429a80:	sub	x0, x1, x0
  429a84:	str	x0, [sp, #48]
  429a88:	ldr	x0, [sp, #40]
  429a8c:	ldr	x0, [x0, #24]
  429a90:	lsl	x1, x0, #1
  429a94:	ldr	x0, [sp, #40]
  429a98:	str	x1, [x0, #24]
  429a9c:	ldr	x0, [sp, #40]
  429aa0:	ldr	x0, [x0, #24]
  429aa4:	mov	x1, x0
  429aa8:	ldr	x0, [sp, #88]
  429aac:	bl	422720 <xrealloc@@Base>
  429ab0:	mov	x1, x0
  429ab4:	ldr	x0, [sp, #40]
  429ab8:	str	x1, [x0, #16]
  429abc:	ldr	x0, [sp, #40]
  429ac0:	ldr	x1, [x0, #16]
  429ac4:	ldr	x0, [sp, #40]
  429ac8:	str	x1, [x0]
  429acc:	ldr	x0, [sp, #40]
  429ad0:	ldr	x0, [x0]
  429ad4:	str	x0, [sp, #88]
  429ad8:	ldr	x1, [sp, #88]
  429adc:	ldr	x0, [sp, #48]
  429ae0:	add	x0, x1, x0
  429ae4:	str	x0, [sp, #104]
  429ae8:	ldr	x0, [sp, #40]
  429aec:	ldr	x0, [x0, #24]
  429af0:	ldr	x1, [sp, #88]
  429af4:	add	x0, x1, x0
  429af8:	str	x0, [sp, #96]
  429afc:	ldr	x0, [sp, #104]
  429b00:	strb	wzr, [x0]
  429b04:	ldr	x1, [sp, #96]
  429b08:	ldr	x0, [sp, #104]
  429b0c:	sub	x0, x1, x0
  429b10:	mov	w1, w0
  429b14:	ldr	x0, [sp, #40]
  429b18:	ldr	x0, [x0, #32]
  429b1c:	mov	x2, x0
  429b20:	ldr	x0, [sp, #104]
  429b24:	bl	406e70 <fgets@plt>
  429b28:	cmp	x0, #0x0
  429b2c:	b.ne	429904 <find_percent_cached@@Base+0x414>  // b.any
  429b30:	ldr	x0, [sp, #40]
  429b34:	ldr	x0, [x0, #32]
  429b38:	bl	406e90 <ferror@plt>
  429b3c:	cmp	w0, #0x0
  429b40:	b.eq	429b50 <find_percent_cached@@Base+0x660>  // b.none
  429b44:	ldr	x0, [sp, #40]
  429b48:	ldr	x0, [x0, #40]
  429b4c:	bl	424340 <pfatal_with_name@@Base>
  429b50:	ldr	x0, [sp, #80]
  429b54:	cmp	x0, #0x0
  429b58:	b.ne	429b80 <find_percent_cached@@Base+0x690>  // b.any
  429b5c:	ldr	x0, [sp, #40]
  429b60:	ldr	x0, [x0, #16]
  429b64:	ldr	x1, [sp, #104]
  429b68:	cmp	x1, x0
  429b6c:	b.ne	429b78 <find_percent_cached@@Base+0x688>  // b.any
  429b70:	mov	x0, #0xffffffffffffffff    	// #-1
  429b74:	b	429b84 <find_percent_cached@@Base+0x694>
  429b78:	mov	x0, #0x1                   	// #1
  429b7c:	b	429b84 <find_percent_cached@@Base+0x694>
  429b80:	ldr	x0, [sp, #80]
  429b84:	ldr	x19, [sp, #16]
  429b88:	ldp	x29, x30, [sp], #112
  429b8c:	ret
  429b90:	sub	sp, sp, #0x40
  429b94:	str	x0, [sp, #24]
  429b98:	str	x1, [sp, #16]
  429b9c:	str	x2, [sp, #8]
  429ba0:	ldr	x0, [sp, #24]
  429ba4:	str	x0, [sp, #48]
  429ba8:	b	429bb8 <find_percent_cached@@Base+0x6c8>
  429bac:	ldr	x0, [sp, #48]
  429bb0:	add	x0, x0, #0x1
  429bb4:	str	x0, [sp, #48]
  429bb8:	ldr	x0, [sp, #48]
  429bbc:	ldrb	w0, [x0]
  429bc0:	mov	w1, w0
  429bc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  429bc8:	add	x0, x0, #0x728
  429bcc:	sxtw	x1, w1
  429bd0:	ldrh	w0, [x0, x1, lsl #1]
  429bd4:	and	w0, w0, #0x2
  429bd8:	cmp	w0, #0x0
  429bdc:	b.ne	429bac <find_percent_cached@@Base+0x6bc>  // b.any
  429be0:	ldr	x0, [sp, #48]
  429be4:	str	x0, [sp, #32]
  429be8:	ldr	x0, [sp, #48]
  429bec:	add	x1, x0, #0x1
  429bf0:	str	x1, [sp, #48]
  429bf4:	ldrb	w0, [x0]
  429bf8:	strb	w0, [sp, #47]
  429bfc:	ldrb	w0, [sp, #47]
  429c00:	cmp	w0, #0x3f
  429c04:	b.eq	429d70 <find_percent_cached@@Base+0x880>  // b.none
  429c08:	cmp	w0, #0x3f
  429c0c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c10:	cmp	w0, #0x3d
  429c14:	b.eq	429c8c <find_percent_cached@@Base+0x79c>  // b.none
  429c18:	cmp	w0, #0x3d
  429c1c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c20:	cmp	w0, #0x3b
  429c24:	b.eq	429c80 <find_percent_cached@@Base+0x790>  // b.none
  429c28:	cmp	w0, #0x3b
  429c2c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c30:	cmp	w0, #0x3a
  429c34:	b.eq	429c98 <find_percent_cached@@Base+0x7a8>  // b.none
  429c38:	cmp	w0, #0x3a
  429c3c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c40:	cmp	w0, #0x2b
  429c44:	b.eq	429d70 <find_percent_cached@@Base+0x880>  // b.none
  429c48:	cmp	w0, #0x2b
  429c4c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c50:	cmp	w0, #0x26
  429c54:	b.eq	429d20 <find_percent_cached@@Base+0x830>  // b.none
  429c58:	cmp	w0, #0x26
  429c5c:	b.gt	429d98 <find_percent_cached@@Base+0x8a8>
  429c60:	cmp	w0, #0x0
  429c64:	b.eq	429c74 <find_percent_cached@@Base+0x784>  // b.none
  429c68:	cmp	w0, #0x21
  429c6c:	b.eq	429d70 <find_percent_cached@@Base+0x880>  // b.none
  429c70:	b	429d98 <find_percent_cached@@Base+0x8a8>
  429c74:	mov	w0, #0x1                   	// #1
  429c78:	str	w0, [sp, #60]
  429c7c:	b	42a020 <find_percent_cached@@Base+0xb30>
  429c80:	mov	w0, #0x6                   	// #6
  429c84:	str	w0, [sp, #60]
  429c88:	b	42a020 <find_percent_cached@@Base+0xb30>
  429c8c:	mov	w0, #0x7                   	// #7
  429c90:	str	w0, [sp, #60]
  429c94:	b	42a020 <find_percent_cached@@Base+0xb30>
  429c98:	ldr	x0, [sp, #48]
  429c9c:	ldrb	w0, [x0]
  429ca0:	cmp	w0, #0x3d
  429ca4:	b.ne	429cc0 <find_percent_cached@@Base+0x7d0>  // b.any
  429ca8:	ldr	x0, [sp, #48]
  429cac:	add	x0, x0, #0x1
  429cb0:	str	x0, [sp, #48]
  429cb4:	mov	w0, #0x7                   	// #7
  429cb8:	str	w0, [sp, #60]
  429cbc:	b	42a020 <find_percent_cached@@Base+0xb30>
  429cc0:	ldr	x0, [sp, #48]
  429cc4:	ldrb	w0, [x0]
  429cc8:	cmp	w0, #0x3a
  429ccc:	b.ne	429d14 <find_percent_cached@@Base+0x824>  // b.any
  429cd0:	ldr	x0, [sp, #48]
  429cd4:	add	x0, x0, #0x1
  429cd8:	str	x0, [sp, #48]
  429cdc:	ldr	x0, [sp, #48]
  429ce0:	add	x0, x0, #0x1
  429ce4:	ldrb	w0, [x0]
  429ce8:	cmp	w0, #0x3d
  429cec:	b.ne	429d08 <find_percent_cached@@Base+0x818>  // b.any
  429cf0:	ldr	x0, [sp, #48]
  429cf4:	add	x0, x0, #0x1
  429cf8:	str	x0, [sp, #48]
  429cfc:	mov	w0, #0x7                   	// #7
  429d00:	str	w0, [sp, #60]
  429d04:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d08:	mov	w0, #0x5                   	// #5
  429d0c:	str	w0, [sp, #60]
  429d10:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d14:	mov	w0, #0x4                   	// #4
  429d18:	str	w0, [sp, #60]
  429d1c:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d20:	ldr	x0, [sp, #48]
  429d24:	ldrb	w0, [x0]
  429d28:	cmp	w0, #0x3a
  429d2c:	b.ne	429da0 <find_percent_cached@@Base+0x8b0>  // b.any
  429d30:	ldr	x0, [sp, #48]
  429d34:	add	x0, x0, #0x1
  429d38:	str	x0, [sp, #48]
  429d3c:	ldr	x0, [sp, #48]
  429d40:	ldrb	w0, [x0]
  429d44:	cmp	w0, #0x3a
  429d48:	b.eq	429d58 <find_percent_cached@@Base+0x868>  // b.none
  429d4c:	mov	w0, #0x8                   	// #8
  429d50:	str	w0, [sp, #60]
  429d54:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d58:	ldr	x0, [sp, #48]
  429d5c:	add	x0, x0, #0x1
  429d60:	str	x0, [sp, #48]
  429d64:	mov	w0, #0x9                   	// #9
  429d68:	str	w0, [sp, #60]
  429d6c:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d70:	ldr	x0, [sp, #48]
  429d74:	ldrb	w0, [x0]
  429d78:	cmp	w0, #0x3d
  429d7c:	b.ne	429da8 <find_percent_cached@@Base+0x8b8>  // b.any
  429d80:	ldr	x0, [sp, #48]
  429d84:	add	x0, x0, #0x1
  429d88:	str	x0, [sp, #48]
  429d8c:	mov	w0, #0x7                   	// #7
  429d90:	str	w0, [sp, #60]
  429d94:	b	42a020 <find_percent_cached@@Base+0xb30>
  429d98:	nop
  429d9c:	b	429dac <find_percent_cached@@Base+0x8bc>
  429da0:	nop
  429da4:	b	429dac <find_percent_cached@@Base+0x8bc>
  429da8:	nop
  429dac:	mov	w0, #0x2                   	// #2
  429db0:	str	w0, [sp, #60]
  429db4:	ldrb	w0, [sp, #47]
  429db8:	cmp	w0, #0x5c
  429dbc:	b.eq	429f4c <find_percent_cached@@Base+0xa5c>  // b.none
  429dc0:	cmp	w0, #0x5c
  429dc4:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429dc8:	cmp	w0, #0x3f
  429dcc:	b.eq	429f38 <find_percent_cached@@Base+0xa48>  // b.none
  429dd0:	cmp	w0, #0x3f
  429dd4:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429dd8:	cmp	w0, #0x3d
  429ddc:	b.eq	429ff8 <find_percent_cached@@Base+0xb08>  // b.none
  429de0:	cmp	w0, #0x3d
  429de4:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429de8:	cmp	w0, #0x3a
  429dec:	b.eq	42a000 <find_percent_cached@@Base+0xb10>  // b.none
  429df0:	cmp	w0, #0x3a
  429df4:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429df8:	cmp	w0, #0x2b
  429dfc:	b.eq	429f38 <find_percent_cached@@Base+0xa48>  // b.none
  429e00:	cmp	w0, #0x2b
  429e04:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429e08:	cmp	w0, #0x26
  429e0c:	b.eq	429fa8 <find_percent_cached@@Base+0xab8>  // b.none
  429e10:	cmp	w0, #0x26
  429e14:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429e18:	cmp	w0, #0x24
  429e1c:	b.eq	429e4c <find_percent_cached@@Base+0x95c>  // b.none
  429e20:	cmp	w0, #0x24
  429e24:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429e28:	cmp	w0, #0x20
  429e2c:	b.eq	429ff8 <find_percent_cached@@Base+0xb08>  // b.none
  429e30:	cmp	w0, #0x20
  429e34:	b.gt	429fbc <find_percent_cached@@Base+0xacc>
  429e38:	cmp	w0, #0x0
  429e3c:	b.eq	429ff8 <find_percent_cached@@Base+0xb08>  // b.none
  429e40:	cmp	w0, #0x9
  429e44:	b.ne	429fbc <find_percent_cached@@Base+0xacc>  // b.any
  429e48:	b	429ff8 <find_percent_cached@@Base+0xb08>
  429e4c:	ldr	x0, [sp, #48]
  429e50:	add	x1, x0, #0x1
  429e54:	str	x1, [sp, #48]
  429e58:	ldrb	w0, [x0]
  429e5c:	strb	w0, [sp, #47]
  429e60:	ldrb	w0, [sp, #47]
  429e64:	cmp	w0, #0x24
  429e68:	b.eq	429fc4 <find_percent_cached@@Base+0xad4>  // b.none
  429e6c:	ldrb	w0, [sp, #47]
  429e70:	cmp	w0, #0x0
  429e74:	b.eq	42a008 <find_percent_cached@@Base+0xb18>  // b.none
  429e78:	mov	w0, #0x3                   	// #3
  429e7c:	str	w0, [sp, #60]
  429e80:	ldrb	w0, [sp, #47]
  429e84:	cmp	w0, #0x28
  429e88:	b.ne	429e98 <find_percent_cached@@Base+0x9a8>  // b.any
  429e8c:	mov	w0, #0x29                  	// #41
  429e90:	strb	w0, [sp, #46]
  429e94:	b	429eac <find_percent_cached@@Base+0x9bc>
  429e98:	ldrb	w0, [sp, #47]
  429e9c:	cmp	w0, #0x7b
  429ea0:	b.ne	429fcc <find_percent_cached@@Base+0xadc>  // b.any
  429ea4:	mov	w0, #0x7d                  	// #125
  429ea8:	strb	w0, [sp, #46]
  429eac:	str	wzr, [sp, #40]
  429eb0:	b	429f24 <find_percent_cached@@Base+0xa34>
  429eb4:	ldr	x0, [sp, #48]
  429eb8:	ldrb	w0, [x0]
  429ebc:	ldrb	w1, [sp, #47]
  429ec0:	cmp	w1, w0
  429ec4:	b.ne	429ed8 <find_percent_cached@@Base+0x9e8>  // b.any
  429ec8:	ldr	w0, [sp, #40]
  429ecc:	add	w0, w0, #0x1
  429ed0:	str	w0, [sp, #40]
  429ed4:	b	429f18 <find_percent_cached@@Base+0xa28>
  429ed8:	ldr	x0, [sp, #48]
  429edc:	ldrb	w0, [x0]
  429ee0:	ldrb	w1, [sp, #46]
  429ee4:	cmp	w1, w0
  429ee8:	b.ne	429f18 <find_percent_cached@@Base+0xa28>  // b.any
  429eec:	ldr	w0, [sp, #40]
  429ef0:	sub	w0, w0, #0x1
  429ef4:	str	w0, [sp, #40]
  429ef8:	ldr	w0, [sp, #40]
  429efc:	cmp	w0, #0x0
  429f00:	b.ge	429f18 <find_percent_cached@@Base+0xa28>  // b.tcont
  429f04:	ldr	x0, [sp, #48]
  429f08:	add	x0, x0, #0x1
  429f0c:	str	x0, [sp, #48]
  429f10:	nop
  429f14:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429f18:	ldr	x0, [sp, #48]
  429f1c:	add	x0, x0, #0x1
  429f20:	str	x0, [sp, #48]
  429f24:	ldr	x0, [sp, #48]
  429f28:	ldrb	w0, [x0]
  429f2c:	cmp	w0, #0x0
  429f30:	b.ne	429eb4 <find_percent_cached@@Base+0x9c4>  // b.any
  429f34:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429f38:	ldr	x0, [sp, #48]
  429f3c:	ldrb	w0, [x0]
  429f40:	cmp	w0, #0x3d
  429f44:	b.ne	429fd4 <find_percent_cached@@Base+0xae4>  // b.any
  429f48:	b	42a014 <find_percent_cached@@Base+0xb24>
  429f4c:	ldr	x0, [sp, #48]
  429f50:	ldrb	w0, [x0]
  429f54:	sub	w0, w0, #0x3a
  429f58:	cmp	w0, #0x22
  429f5c:	cset	w1, hi  // hi = pmore
  429f60:	and	w1, w1, #0xff
  429f64:	cmp	w1, #0x0
  429f68:	b.ne	429fdc <find_percent_cached@@Base+0xaec>  // b.any
  429f6c:	mov	x1, #0x1                   	// #1
  429f70:	lsl	x1, x1, x0
  429f74:	mov	x0, #0xb                   	// #11
  429f78:	movk	x0, #0x4, lsl #32
  429f7c:	and	x0, x1, x0
  429f80:	cmp	x0, #0x0
  429f84:	cset	w0, ne  // ne = any
  429f88:	and	w0, w0, #0xff
  429f8c:	cmp	w0, #0x0
  429f90:	b.eq	429fdc <find_percent_cached@@Base+0xaec>  // b.none
  429f94:	ldr	x0, [sp, #48]
  429f98:	add	x0, x0, #0x1
  429f9c:	str	x0, [sp, #48]
  429fa0:	nop
  429fa4:	b	429fdc <find_percent_cached@@Base+0xaec>
  429fa8:	ldr	x0, [sp, #48]
  429fac:	ldrb	w0, [x0]
  429fb0:	cmp	w0, #0x3a
  429fb4:	b.eq	42a010 <find_percent_cached@@Base+0xb20>  // b.none
  429fb8:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429fbc:	nop
  429fc0:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429fc4:	nop
  429fc8:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429fcc:	nop
  429fd0:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429fd4:	nop
  429fd8:	b	429fe0 <find_percent_cached@@Base+0xaf0>
  429fdc:	nop
  429fe0:	ldr	x0, [sp, #48]
  429fe4:	add	x1, x0, #0x1
  429fe8:	str	x1, [sp, #48]
  429fec:	ldrb	w0, [x0]
  429ff0:	strb	w0, [sp, #47]
  429ff4:	b	429db4 <find_percent_cached@@Base+0x8c4>
  429ff8:	nop
  429ffc:	b	42a014 <find_percent_cached@@Base+0xb24>
  42a000:	nop
  42a004:	b	42a014 <find_percent_cached@@Base+0xb24>
  42a008:	nop
  42a00c:	b	42a014 <find_percent_cached@@Base+0xb24>
  42a010:	nop
  42a014:	ldr	x0, [sp, #48]
  42a018:	sub	x0, x0, #0x1
  42a01c:	str	x0, [sp, #48]
  42a020:	ldr	x0, [sp, #16]
  42a024:	cmp	x0, #0x0
  42a028:	b.eq	42a038 <find_percent_cached@@Base+0xb48>  // b.none
  42a02c:	ldr	x0, [sp, #16]
  42a030:	ldr	x1, [sp, #32]
  42a034:	str	x1, [x0]
  42a038:	ldr	x0, [sp, #8]
  42a03c:	cmp	x0, #0x0
  42a040:	b.eq	42a05c <find_percent_cached@@Base+0xb6c>  // b.none
  42a044:	ldr	x1, [sp, #48]
  42a048:	ldr	x0, [sp, #32]
  42a04c:	sub	x0, x1, x0
  42a050:	mov	x1, x0
  42a054:	ldr	x0, [sp, #8]
  42a058:	str	x1, [x0]
  42a05c:	ldr	w0, [sp, #60]
  42a060:	add	sp, sp, #0x40
  42a064:	ret

000000000042a068 <construct_include_path@@Base>:
  42a068:	stp	x29, x30, [sp, #-240]!
  42a06c:	mov	x29, sp
  42a070:	str	x19, [sp, #16]
  42a074:	str	x0, [sp, #40]
  42a078:	mov	x0, #0x5                   	// #5
  42a07c:	str	x0, [sp, #224]
  42a080:	ldr	x0, [sp, #40]
  42a084:	cmp	x0, #0x0
  42a088:	b.eq	42a0c0 <construct_include_path@@Base+0x58>  // b.none
  42a08c:	ldr	x0, [sp, #40]
  42a090:	str	x0, [sp, #232]
  42a094:	b	42a0b0 <construct_include_path@@Base+0x48>
  42a098:	ldr	x0, [sp, #224]
  42a09c:	add	x0, x0, #0x1
  42a0a0:	str	x0, [sp, #224]
  42a0a4:	ldr	x0, [sp, #232]
  42a0a8:	add	x0, x0, #0x8
  42a0ac:	str	x0, [sp, #232]
  42a0b0:	ldr	x0, [sp, #232]
  42a0b4:	ldr	x0, [x0]
  42a0b8:	cmp	x0, #0x0
  42a0bc:	b.ne	42a098 <construct_include_path@@Base+0x30>  // b.any
  42a0c0:	ldr	x0, [sp, #224]
  42a0c4:	lsl	x0, x0, #3
  42a0c8:	bl	42268c <xmalloc@@Base>
  42a0cc:	str	x0, [sp, #184]
  42a0d0:	str	xzr, [sp, #224]
  42a0d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a0d8:	add	x0, x0, #0x68
  42a0dc:	str	xzr, [x0]
  42a0e0:	ldr	x0, [sp, #40]
  42a0e4:	cmp	x0, #0x0
  42a0e8:	b.eq	42a234 <construct_include_path@@Base+0x1cc>  // b.none
  42a0ec:	b	42a224 <construct_include_path@@Base+0x1bc>
  42a0f0:	ldr	x0, [sp, #40]
  42a0f4:	add	x1, x0, #0x8
  42a0f8:	str	x1, [sp, #40]
  42a0fc:	ldr	x0, [x0]
  42a100:	str	x0, [sp, #216]
  42a104:	str	xzr, [sp, #208]
  42a108:	ldr	x0, [sp, #216]
  42a10c:	ldrb	w0, [x0]
  42a110:	cmp	w0, #0x7e
  42a114:	b.ne	42a138 <construct_include_path@@Base+0xd0>  // b.any
  42a118:	ldr	x0, [sp, #216]
  42a11c:	bl	42a3d8 <tilde_expand@@Base>
  42a120:	str	x0, [sp, #208]
  42a124:	ldr	x0, [sp, #208]
  42a128:	cmp	x0, #0x0
  42a12c:	b.eq	42a138 <construct_include_path@@Base+0xd0>  // b.none
  42a130:	ldr	x0, [sp, #208]
  42a134:	str	x0, [sp, #216]
  42a138:	nop
  42a13c:	add	x0, sp, #0x30
  42a140:	mov	x1, x0
  42a144:	ldr	x0, [sp, #216]
  42a148:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  42a14c:	str	w0, [sp, #180]
  42a150:	ldr	w0, [sp, #180]
  42a154:	cmn	w0, #0x1
  42a158:	b.ne	42a16c <construct_include_path@@Base+0x104>  // b.any
  42a15c:	bl	406dd0 <__errno_location@plt>
  42a160:	ldr	w0, [x0]
  42a164:	cmp	w0, #0x4
  42a168:	b.eq	42a13c <construct_include_path@@Base+0xd4>  // b.none
  42a16c:	ldr	w0, [sp, #180]
  42a170:	cmp	w0, #0x0
  42a174:	b.ne	42a21c <construct_include_path@@Base+0x1b4>  // b.any
  42a178:	ldr	w0, [sp, #64]
  42a17c:	and	w0, w0, #0xf000
  42a180:	cmp	w0, #0x4, lsl #12
  42a184:	b.ne	42a21c <construct_include_path@@Base+0x1b4>  // b.any
  42a188:	ldr	x0, [sp, #216]
  42a18c:	bl	4066f0 <strlen@plt>
  42a190:	str	x0, [sp, #200]
  42a194:	b	42a1a4 <construct_include_path@@Base+0x13c>
  42a198:	ldr	x0, [sp, #200]
  42a19c:	sub	x0, x0, #0x1
  42a1a0:	str	x0, [sp, #200]
  42a1a4:	ldr	x0, [sp, #200]
  42a1a8:	cmp	x0, #0x1
  42a1ac:	b.ls	42a1cc <construct_include_path@@Base+0x164>  // b.plast
  42a1b0:	ldr	x0, [sp, #200]
  42a1b4:	sub	x0, x0, #0x1
  42a1b8:	ldr	x1, [sp, #216]
  42a1bc:	add	x0, x1, x0
  42a1c0:	ldrb	w0, [x0]
  42a1c4:	cmp	w0, #0x2f
  42a1c8:	b.eq	42a198 <construct_include_path@@Base+0x130>  // b.none
  42a1cc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a1d0:	add	x0, x0, #0x68
  42a1d4:	ldr	x0, [x0]
  42a1d8:	ldr	x1, [sp, #200]
  42a1dc:	cmp	x1, x0
  42a1e0:	b.ls	42a1f4 <construct_include_path@@Base+0x18c>  // b.plast
  42a1e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a1e8:	add	x0, x0, #0x68
  42a1ec:	ldr	x1, [sp, #200]
  42a1f0:	str	x1, [x0]
  42a1f4:	ldr	x0, [sp, #224]
  42a1f8:	add	x1, x0, #0x1
  42a1fc:	str	x1, [sp, #224]
  42a200:	lsl	x0, x0, #3
  42a204:	ldr	x1, [sp, #184]
  42a208:	add	x19, x1, x0
  42a20c:	ldr	x1, [sp, #200]
  42a210:	ldr	x0, [sp, #216]
  42a214:	bl	430da0 <strcache_add_len@@Base>
  42a218:	str	x0, [x19]
  42a21c:	ldr	x0, [sp, #208]
  42a220:	bl	406c00 <free@plt>
  42a224:	ldr	x0, [sp, #40]
  42a228:	ldr	x0, [x0]
  42a22c:	cmp	x0, #0x0
  42a230:	b.ne	42a0f0 <construct_include_path@@Base+0x88>  // b.any
  42a234:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42a238:	add	x0, x0, #0x330
  42a23c:	str	x0, [sp, #232]
  42a240:	b	42a344 <construct_include_path@@Base+0x2dc>
  42a244:	nop
  42a248:	ldr	x0, [sp, #232]
  42a24c:	ldr	x0, [x0]
  42a250:	add	x1, sp, #0x30
  42a254:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  42a258:	str	w0, [sp, #176]
  42a25c:	ldr	w0, [sp, #176]
  42a260:	cmn	w0, #0x1
  42a264:	b.ne	42a278 <construct_include_path@@Base+0x210>  // b.any
  42a268:	bl	406dd0 <__errno_location@plt>
  42a26c:	ldr	w0, [x0]
  42a270:	cmp	w0, #0x4
  42a274:	b.eq	42a248 <construct_include_path@@Base+0x1e0>  // b.none
  42a278:	ldr	w0, [sp, #176]
  42a27c:	cmp	w0, #0x0
  42a280:	b.ne	42a338 <construct_include_path@@Base+0x2d0>  // b.any
  42a284:	ldr	w0, [sp, #64]
  42a288:	and	w0, w0, #0xf000
  42a28c:	cmp	w0, #0x4, lsl #12
  42a290:	b.ne	42a338 <construct_include_path@@Base+0x2d0>  // b.any
  42a294:	ldr	x0, [sp, #232]
  42a298:	ldr	x0, [x0]
  42a29c:	bl	4066f0 <strlen@plt>
  42a2a0:	str	x0, [sp, #192]
  42a2a4:	b	42a2b4 <construct_include_path@@Base+0x24c>
  42a2a8:	ldr	x0, [sp, #192]
  42a2ac:	sub	x0, x0, #0x1
  42a2b0:	str	x0, [sp, #192]
  42a2b4:	ldr	x0, [sp, #192]
  42a2b8:	cmp	x0, #0x1
  42a2bc:	b.ls	42a2e0 <construct_include_path@@Base+0x278>  // b.plast
  42a2c0:	ldr	x0, [sp, #232]
  42a2c4:	ldr	x1, [x0]
  42a2c8:	ldr	x0, [sp, #192]
  42a2cc:	sub	x0, x0, #0x1
  42a2d0:	add	x0, x1, x0
  42a2d4:	ldrb	w0, [x0]
  42a2d8:	cmp	w0, #0x2f
  42a2dc:	b.eq	42a2a8 <construct_include_path@@Base+0x240>  // b.none
  42a2e0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a2e4:	add	x0, x0, #0x68
  42a2e8:	ldr	x0, [x0]
  42a2ec:	ldr	x1, [sp, #192]
  42a2f0:	cmp	x1, x0
  42a2f4:	b.ls	42a308 <construct_include_path@@Base+0x2a0>  // b.plast
  42a2f8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a2fc:	add	x0, x0, #0x68
  42a300:	ldr	x1, [sp, #192]
  42a304:	str	x1, [x0]
  42a308:	ldr	x0, [sp, #232]
  42a30c:	ldr	x2, [x0]
  42a310:	ldr	x0, [sp, #224]
  42a314:	add	x1, x0, #0x1
  42a318:	str	x1, [sp, #224]
  42a31c:	lsl	x0, x0, #3
  42a320:	ldr	x1, [sp, #184]
  42a324:	add	x19, x1, x0
  42a328:	ldr	x1, [sp, #192]
  42a32c:	mov	x0, x2
  42a330:	bl	430da0 <strcache_add_len@@Base>
  42a334:	str	x0, [x19]
  42a338:	ldr	x0, [sp, #232]
  42a33c:	add	x0, x0, #0x8
  42a340:	str	x0, [sp, #232]
  42a344:	ldr	x0, [sp, #232]
  42a348:	ldr	x0, [x0]
  42a34c:	cmp	x0, #0x0
  42a350:	b.ne	42a244 <construct_include_path@@Base+0x1dc>  // b.any
  42a354:	ldr	x0, [sp, #224]
  42a358:	lsl	x0, x0, #3
  42a35c:	ldr	x1, [sp, #184]
  42a360:	add	x0, x1, x0
  42a364:	str	xzr, [x0]
  42a368:	ldr	x0, [sp, #184]
  42a36c:	str	x0, [sp, #232]
  42a370:	b	42a3a8 <construct_include_path@@Base+0x340>
  42a374:	ldr	x0, [sp, #232]
  42a378:	ldr	x0, [x0]
  42a37c:	mov	w5, #0x0                   	// #0
  42a380:	mov	w4, #0x3                   	// #3
  42a384:	mov	w3, #0x0                   	// #0
  42a388:	mov	x2, x0
  42a38c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42a390:	add	x1, x0, #0x408
  42a394:	mov	x0, #0x0                   	// #0
  42a398:	bl	433588 <do_variable_definition@@Base>
  42a39c:	ldr	x0, [sp, #232]
  42a3a0:	add	x0, x0, #0x8
  42a3a4:	str	x0, [sp, #232]
  42a3a8:	ldr	x0, [sp, #232]
  42a3ac:	ldr	x0, [x0]
  42a3b0:	cmp	x0, #0x0
  42a3b4:	b.ne	42a374 <construct_include_path@@Base+0x30c>  // b.any
  42a3b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a3bc:	add	x0, x0, #0x60
  42a3c0:	ldr	x1, [sp, #184]
  42a3c4:	str	x1, [x0]
  42a3c8:	nop
  42a3cc:	ldr	x19, [sp, #16]
  42a3d0:	ldp	x29, x30, [sp], #240
  42a3d4:	ret

000000000042a3d8 <tilde_expand@@Base>:
  42a3d8:	stp	x29, x30, [sp, #-96]!
  42a3dc:	mov	x29, sp
  42a3e0:	str	x0, [sp, #24]
  42a3e4:	ldr	x0, [sp, #24]
  42a3e8:	add	x0, x0, #0x1
  42a3ec:	ldrb	w0, [x0]
  42a3f0:	cmp	w0, #0x2f
  42a3f4:	b.eq	42a40c <tilde_expand@@Base+0x34>  // b.none
  42a3f8:	ldr	x0, [sp, #24]
  42a3fc:	add	x0, x0, #0x1
  42a400:	ldrb	w0, [x0]
  42a404:	cmp	w0, #0x0
  42a408:	b.ne	42a528 <tilde_expand@@Base+0x150>  // b.any
  42a40c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a410:	add	x0, x0, #0xa90
  42a414:	ldr	w0, [x0]
  42a418:	str	w0, [sp, #68]
  42a41c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a420:	add	x0, x0, #0xa90
  42a424:	str	wzr, [x0]
  42a428:	mov	x1, #0x0                   	// #0
  42a42c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42a430:	add	x0, x0, #0x418
  42a434:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  42a438:	str	x0, [sp, #88]
  42a43c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a440:	add	x0, x0, #0xa90
  42a444:	ldr	w1, [sp, #68]
  42a448:	str	w1, [x0]
  42a44c:	ldr	x0, [sp, #88]
  42a450:	ldrb	w0, [x0]
  42a454:	cmp	w0, #0x0
  42a458:	cset	w0, ne  // ne = any
  42a45c:	and	w0, w0, #0xff
  42a460:	str	w0, [sp, #64]
  42a464:	ldr	w0, [sp, #64]
  42a468:	cmp	w0, #0x0
  42a46c:	b.ne	42a488 <tilde_expand@@Base+0xb0>  // b.any
  42a470:	ldr	x0, [sp, #88]
  42a474:	bl	406c00 <free@plt>
  42a478:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42a47c:	add	x0, x0, #0x420
  42a480:	bl	406df0 <getenv@plt>
  42a484:	str	x0, [sp, #88]
  42a488:	ldr	x0, [sp, #88]
  42a48c:	cmp	x0, #0x0
  42a490:	b.eq	42a4a4 <tilde_expand@@Base+0xcc>  // b.none
  42a494:	ldr	x0, [sp, #88]
  42a498:	ldrb	w0, [x0]
  42a49c:	cmp	w0, #0x0
  42a4a0:	b.ne	42a4e0 <tilde_expand@@Base+0x108>  // b.any
  42a4a4:	bl	406e50 <getlogin@plt>
  42a4a8:	str	x0, [sp, #56]
  42a4ac:	str	xzr, [sp, #88]
  42a4b0:	ldr	x0, [sp, #56]
  42a4b4:	cmp	x0, #0x0
  42a4b8:	b.eq	42a4e0 <tilde_expand@@Base+0x108>  // b.none
  42a4bc:	ldr	x0, [sp, #56]
  42a4c0:	bl	406a10 <getpwnam@plt>
  42a4c4:	str	x0, [sp, #48]
  42a4c8:	ldr	x0, [sp, #48]
  42a4cc:	cmp	x0, #0x0
  42a4d0:	b.eq	42a4e0 <tilde_expand@@Base+0x108>  // b.none
  42a4d4:	ldr	x0, [sp, #48]
  42a4d8:	ldr	x0, [x0, #32]
  42a4dc:	str	x0, [sp, #88]
  42a4e0:	ldr	x0, [sp, #88]
  42a4e4:	cmp	x0, #0x0
  42a4e8:	b.eq	42a5d0 <tilde_expand@@Base+0x1f8>  // b.none
  42a4ec:	ldr	x0, [sp, #24]
  42a4f0:	add	x0, x0, #0x1
  42a4f4:	mov	x2, x0
  42a4f8:	ldr	x1, [sp, #88]
  42a4fc:	mov	w0, #0x2                   	// #2
  42a500:	bl	422404 <concat@@Base>
  42a504:	bl	422788 <xstrdup@@Base>
  42a508:	str	x0, [sp, #40]
  42a50c:	ldr	w0, [sp, #64]
  42a510:	cmp	w0, #0x0
  42a514:	b.eq	42a520 <tilde_expand@@Base+0x148>  // b.none
  42a518:	ldr	x0, [sp, #88]
  42a51c:	bl	406c00 <free@plt>
  42a520:	ldr	x0, [sp, #40]
  42a524:	b	42a5d8 <tilde_expand@@Base+0x200>
  42a528:	ldr	x0, [sp, #24]
  42a52c:	add	x0, x0, #0x1
  42a530:	mov	w1, #0x2f                  	// #47
  42a534:	bl	406c20 <strchr@plt>
  42a538:	str	x0, [sp, #80]
  42a53c:	ldr	x0, [sp, #80]
  42a540:	cmp	x0, #0x0
  42a544:	b.eq	42a550 <tilde_expand@@Base+0x178>  // b.none
  42a548:	ldr	x0, [sp, #80]
  42a54c:	strb	wzr, [x0]
  42a550:	ldr	x0, [sp, #24]
  42a554:	add	x0, x0, #0x1
  42a558:	bl	406a10 <getpwnam@plt>
  42a55c:	str	x0, [sp, #72]
  42a560:	ldr	x0, [sp, #72]
  42a564:	cmp	x0, #0x0
  42a568:	b.eq	42a5b4 <tilde_expand@@Base+0x1dc>  // b.none
  42a56c:	ldr	x0, [sp, #80]
  42a570:	cmp	x0, #0x0
  42a574:	b.ne	42a588 <tilde_expand@@Base+0x1b0>  // b.any
  42a578:	ldr	x0, [sp, #72]
  42a57c:	ldr	x0, [x0, #32]
  42a580:	bl	422788 <xstrdup@@Base>
  42a584:	b	42a5d8 <tilde_expand@@Base+0x200>
  42a588:	ldr	x0, [sp, #72]
  42a58c:	ldr	x1, [x0, #32]
  42a590:	ldr	x0, [sp, #80]
  42a594:	add	x0, x0, #0x1
  42a598:	mov	x3, x0
  42a59c:	adrp	x0, 43b000 <_IO_stdin_used@@Base+0x4450>
  42a5a0:	add	x2, x0, #0xd88
  42a5a4:	mov	w0, #0x3                   	// #3
  42a5a8:	bl	422404 <concat@@Base>
  42a5ac:	bl	422788 <xstrdup@@Base>
  42a5b0:	b	42a5d8 <tilde_expand@@Base+0x200>
  42a5b4:	ldr	x0, [sp, #80]
  42a5b8:	cmp	x0, #0x0
  42a5bc:	b.eq	42a5d4 <tilde_expand@@Base+0x1fc>  // b.none
  42a5c0:	ldr	x0, [sp, #80]
  42a5c4:	mov	w1, #0x2f                  	// #47
  42a5c8:	strb	w1, [x0]
  42a5cc:	b	42a5d4 <tilde_expand@@Base+0x1fc>
  42a5d0:	nop
  42a5d4:	mov	x0, #0x0                   	// #0
  42a5d8:	ldp	x29, x30, [sp], #96
  42a5dc:	ret

000000000042a5e0 <parse_file_seq@@Base>:
  42a5e0:	stp	x29, x30, [sp, #-304]!
  42a5e4:	mov	x29, sp
  42a5e8:	str	x0, [sp, #40]
  42a5ec:	str	x1, [sp, #32]
  42a5f0:	str	w2, [sp, #28]
  42a5f4:	str	x3, [sp, #16]
  42a5f8:	str	w4, [sp, #24]
  42a5fc:	ldr	w0, [sp, #24]
  42a600:	and	w0, w0, #0x10
  42a604:	cmp	w0, #0x0
  42a608:	cset	w0, eq  // eq = none
  42a60c:	and	w0, w0, #0xff
  42a610:	str	w0, [sp, #204]
  42a614:	str	xzr, [sp, #144]
  42a618:	add	x0, sp, #0x90
  42a61c:	str	x0, [sp, #296]
  42a620:	ldr	w0, [sp, #28]
  42a624:	orr	w0, w0, #0x1
  42a628:	str	w0, [sp, #276]
  42a62c:	ldr	w0, [sp, #24]
  42a630:	and	w0, w0, #0x20
  42a634:	cmp	w0, #0x0
  42a638:	b.ne	42a648 <parse_file_seq@@Base+0x68>  // b.any
  42a63c:	ldr	w0, [sp, #276]
  42a640:	orr	w0, w0, #0x2
  42a644:	str	w0, [sp, #276]
  42a648:	ldr	w0, [sp, #28]
  42a64c:	orr	w0, w0, #0x1
  42a650:	str	w0, [sp, #28]
  42a654:	ldr	x0, [sp, #32]
  42a658:	cmp	x0, #0xf
  42a65c:	b.hi	42a668 <parse_file_seq@@Base+0x88>  // b.pmore
  42a660:	mov	x0, #0x10                  	// #16
  42a664:	str	x0, [sp, #32]
  42a668:	ldr	w0, [sp, #24]
  42a66c:	and	w0, w0, #0x4
  42a670:	cmp	w0, #0x0
  42a674:	b.ne	42a680 <parse_file_seq@@Base+0xa0>  // b.any
  42a678:	add	x0, sp, #0x48
  42a67c:	bl	40b2b8 <dir_setup_glob@@Base>
  42a680:	ldr	x0, [sp, #40]
  42a684:	ldr	x0, [x0]
  42a688:	bl	4066f0 <strlen@plt>
  42a68c:	add	x0, x0, #0x1
  42a690:	str	x0, [sp, #192]
  42a694:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a698:	add	x0, x0, #0x78
  42a69c:	ldr	x0, [x0]
  42a6a0:	ldr	x1, [sp, #192]
  42a6a4:	cmp	x1, x0
  42a6a8:	b.ls	42a6e0 <parse_file_seq@@Base+0x100>  // b.plast
  42a6ac:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a6b0:	add	x0, x0, #0x80
  42a6b4:	ldr	x0, [x0]
  42a6b8:	ldr	x1, [sp, #192]
  42a6bc:	bl	422720 <xrealloc@@Base>
  42a6c0:	mov	x1, x0
  42a6c4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a6c8:	add	x0, x0, #0x80
  42a6cc:	str	x1, [x0]
  42a6d0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a6d4:	add	x0, x0, #0x78
  42a6d8:	ldr	x1, [sp, #192]
  42a6dc:	str	x1, [x0]
  42a6e0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a6e4:	add	x0, x0, #0x80
  42a6e8:	ldr	x0, [x0]
  42a6ec:	str	x0, [sp, #280]
  42a6f0:	ldr	x0, [sp, #40]
  42a6f4:	ldr	x0, [x0]
  42a6f8:	str	x0, [sp, #288]
  42a6fc:	str	xzr, [sp, #264]
  42a700:	str	xzr, [sp, #256]
  42a704:	mov	w0, #0x1                   	// #1
  42a708:	str	w0, [sp, #252]
  42a70c:	str	xzr, [sp, #56]
  42a710:	str	xzr, [sp, #48]
  42a714:	b	42a724 <parse_file_seq@@Base+0x144>
  42a718:	ldr	x0, [sp, #288]
  42a71c:	add	x0, x0, #0x1
  42a720:	str	x0, [sp, #288]
  42a724:	ldr	x0, [sp, #288]
  42a728:	ldrb	w0, [x0]
  42a72c:	mov	w1, w0
  42a730:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42a734:	add	x0, x0, #0x728
  42a738:	sxtw	x1, w1
  42a73c:	ldrh	w0, [x0, x1, lsl #1]
  42a740:	and	w0, w0, #0x6
  42a744:	cmp	w0, #0x0
  42a748:	b.ne	42a718 <parse_file_seq@@Base+0x138>  // b.any
  42a74c:	ldr	x0, [sp, #288]
  42a750:	ldrb	w0, [x0]
  42a754:	mov	w1, w0
  42a758:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42a75c:	add	x0, x0, #0x728
  42a760:	sxtw	x1, w1
  42a764:	ldrh	w0, [x0, x1, lsl #1]
  42a768:	mov	w1, w0
  42a76c:	ldr	w0, [sp, #28]
  42a770:	and	w0, w1, w0
  42a774:	cmp	w0, #0x0
  42a778:	b.eq	42a790 <parse_file_seq@@Base+0x1b0>  // b.none
  42a77c:	ldr	x0, [sp, #40]
  42a780:	ldr	x1, [sp, #288]
  42a784:	str	x1, [x0]
  42a788:	ldr	x0, [sp, #144]
  42a78c:	b	42aec8 <parse_file_seq@@Base+0x8e8>
  42a790:	ldr	x0, [sp, #288]
  42a794:	str	x0, [sp, #240]
  42a798:	ldr	w1, [sp, #276]
  42a79c:	ldr	x0, [sp, #288]
  42a7a0:	bl	428f24 <eval_buffer@@Base+0x42d4>
  42a7a4:	str	x0, [sp, #288]
  42a7a8:	ldr	x0, [sp, #288]
  42a7ac:	cmp	x0, #0x0
  42a7b0:	b.ne	42a7cc <parse_file_seq@@Base+0x1ec>  // b.any
  42a7b4:	ldr	x0, [sp, #240]
  42a7b8:	bl	4066f0 <strlen@plt>
  42a7bc:	mov	x1, x0
  42a7c0:	ldr	x0, [sp, #240]
  42a7c4:	add	x0, x0, x1
  42a7c8:	str	x0, [sp, #288]
  42a7cc:	ldr	w0, [sp, #24]
  42a7d0:	and	w0, w0, #0x1
  42a7d4:	cmp	w0, #0x0
  42a7d8:	b.ne	42a844 <parse_file_seq@@Base+0x264>  // b.any
  42a7dc:	b	42a80c <parse_file_seq@@Base+0x22c>
  42a7e0:	ldr	x0, [sp, #240]
  42a7e4:	add	x0, x0, #0x2
  42a7e8:	str	x0, [sp, #240]
  42a7ec:	b	42a7fc <parse_file_seq@@Base+0x21c>
  42a7f0:	ldr	x0, [sp, #240]
  42a7f4:	add	x0, x0, #0x1
  42a7f8:	str	x0, [sp, #240]
  42a7fc:	ldr	x0, [sp, #240]
  42a800:	ldrb	w0, [x0]
  42a804:	cmp	w0, #0x2f
  42a808:	b.eq	42a7f0 <parse_file_seq@@Base+0x210>  // b.none
  42a80c:	ldr	x1, [sp, #288]
  42a810:	ldr	x0, [sp, #240]
  42a814:	sub	x0, x1, x0
  42a818:	cmp	x0, #0x2
  42a81c:	b.le	42a844 <parse_file_seq@@Base+0x264>
  42a820:	ldr	x0, [sp, #240]
  42a824:	ldrb	w0, [x0]
  42a828:	cmp	w0, #0x2e
  42a82c:	b.ne	42a844 <parse_file_seq@@Base+0x264>  // b.any
  42a830:	ldr	x0, [sp, #240]
  42a834:	add	x0, x0, #0x1
  42a838:	ldrb	w0, [x0]
  42a83c:	cmp	w0, #0x2f
  42a840:	b.eq	42a7e0 <parse_file_seq@@Base+0x200>  // b.none
  42a844:	ldr	x1, [sp, #240]
  42a848:	ldr	x0, [sp, #288]
  42a84c:	cmp	x1, x0
  42a850:	b.ne	42a888 <parse_file_seq@@Base+0x2a8>  // b.any
  42a854:	ldr	x0, [sp, #280]
  42a858:	mov	w1, #0x2e                  	// #46
  42a85c:	strb	w1, [x0]
  42a860:	ldr	x0, [sp, #280]
  42a864:	add	x0, x0, #0x1
  42a868:	mov	w1, #0x2f                  	// #47
  42a86c:	strb	w1, [x0]
  42a870:	ldr	x0, [sp, #280]
  42a874:	add	x0, x0, #0x2
  42a878:	strb	wzr, [x0]
  42a87c:	mov	x0, #0x2                   	// #2
  42a880:	str	x0, [sp, #232]
  42a884:	b	42a8b8 <parse_file_seq@@Base+0x2d8>
  42a888:	ldr	x1, [sp, #288]
  42a88c:	ldr	x0, [sp, #240]
  42a890:	sub	x0, x1, x0
  42a894:	str	x0, [sp, #232]
  42a898:	ldr	x2, [sp, #232]
  42a89c:	ldr	x1, [sp, #240]
  42a8a0:	ldr	x0, [sp, #280]
  42a8a4:	bl	4066b0 <memcpy@plt>
  42a8a8:	ldr	x1, [sp, #280]
  42a8ac:	ldr	x0, [sp, #232]
  42a8b0:	add	x0, x1, x0
  42a8b4:	strb	wzr, [x0]
  42a8b8:	ldr	w0, [sp, #24]
  42a8bc:	and	w0, w0, #0x2
  42a8c0:	cmp	w0, #0x0
  42a8c4:	b.ne	42aa28 <parse_file_seq@@Base+0x448>  // b.any
  42a8c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42a8cc:	add	x0, x0, #0x80
  42a8d0:	ldr	x0, [x0]
  42a8d4:	ldr	x1, [sp, #280]
  42a8d8:	cmp	x1, x0
  42a8dc:	b.ne	42aa28 <parse_file_seq@@Base+0x448>  // b.any
  42a8e0:	ldr	x0, [sp, #280]
  42a8e4:	ldrb	w0, [x0]
  42a8e8:	cmp	w0, #0x28
  42a8ec:	b.eq	42aa28 <parse_file_seq@@Base+0x448>  // b.none
  42a8f0:	ldr	x0, [sp, #232]
  42a8f4:	sub	x0, x0, #0x1
  42a8f8:	ldr	x1, [sp, #280]
  42a8fc:	add	x0, x1, x0
  42a900:	ldrb	w0, [x0]
  42a904:	cmp	w0, #0x29
  42a908:	b.eq	42aa28 <parse_file_seq@@Base+0x448>  // b.none
  42a90c:	mov	w1, #0x28                  	// #40
  42a910:	ldr	x0, [sp, #280]
  42a914:	bl	406c20 <strchr@plt>
  42a918:	str	x0, [sp, #184]
  42a91c:	ldr	x0, [sp, #184]
  42a920:	cmp	x0, #0x0
  42a924:	b.eq	42aa28 <parse_file_seq@@Base+0x448>  // b.none
  42a928:	ldr	x0, [sp, #288]
  42a92c:	str	x0, [sp, #216]
  42a930:	ldr	x0, [sp, #216]
  42a934:	str	x0, [sp, #176]
  42a938:	b	42a948 <parse_file_seq@@Base+0x368>
  42a93c:	ldr	x0, [sp, #216]
  42a940:	add	x0, x0, #0x1
  42a944:	str	x0, [sp, #216]
  42a948:	ldr	x0, [sp, #216]
  42a94c:	ldrb	w0, [x0]
  42a950:	mov	w1, w0
  42a954:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42a958:	add	x0, x0, #0x728
  42a95c:	sxtw	x1, w1
  42a960:	ldrh	w0, [x0, x1, lsl #1]
  42a964:	and	w0, w0, #0x6
  42a968:	cmp	w0, #0x0
  42a96c:	b.ne	42a93c <parse_file_seq@@Base+0x35c>  // b.any
  42a970:	b	42a980 <parse_file_seq@@Base+0x3a0>
  42a974:	ldr	x0, [sp, #216]
  42a978:	add	x0, x0, #0x1
  42a97c:	str	x0, [sp, #216]
  42a980:	ldr	x0, [sp, #216]
  42a984:	ldrb	w0, [x0]
  42a988:	mov	w1, w0
  42a98c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42a990:	add	x0, x0, #0x728
  42a994:	sxtw	x1, w1
  42a998:	ldrh	w0, [x0, x1, lsl #1]
  42a99c:	mov	w1, w0
  42a9a0:	ldr	w0, [sp, #276]
  42a9a4:	and	w0, w1, w0
  42a9a8:	cmp	w0, #0x0
  42a9ac:	b.eq	42a974 <parse_file_seq@@Base+0x394>  // b.none
  42a9b0:	ldr	x1, [sp, #216]
  42a9b4:	ldr	x0, [sp, #176]
  42a9b8:	cmp	x1, x0
  42a9bc:	b.eq	42aa18 <parse_file_seq@@Base+0x438>  // b.none
  42a9c0:	ldr	x0, [sp, #216]
  42a9c4:	sub	x0, x0, #0x1
  42a9c8:	ldrb	w0, [x0]
  42a9cc:	cmp	w0, #0x29
  42a9d0:	b.ne	42aa04 <parse_file_seq@@Base+0x424>  // b.any
  42a9d4:	ldr	x0, [sp, #184]
  42a9d8:	add	x1, x0, #0x1
  42a9dc:	ldr	x0, [sp, #280]
  42a9e0:	sub	x0, x1, x0
  42a9e4:	mov	x1, x0
  42a9e8:	ldr	x0, [sp, #232]
  42a9ec:	sub	x0, x0, x1
  42a9f0:	str	x0, [sp, #232]
  42a9f4:	ldr	x0, [sp, #184]
  42a9f8:	add	x0, x0, #0x1
  42a9fc:	str	x0, [sp, #280]
  42aa00:	b	42aa1c <parse_file_seq@@Base+0x43c>
  42aa04:	ldr	x0, [sp, #216]
  42aa08:	ldrb	w0, [x0]
  42aa0c:	cmp	w0, #0x0
  42aa10:	b.ne	42a930 <parse_file_seq@@Base+0x350>  // b.any
  42aa14:	b	42aa1c <parse_file_seq@@Base+0x43c>
  42aa18:	nop
  42aa1c:	ldr	x0, [sp, #232]
  42aa20:	cmp	x0, #0x0
  42aa24:	b.eq	42aec0 <parse_file_seq@@Base+0x8e0>  // b.none
  42aa28:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42aa2c:	add	x0, x0, #0x80
  42aa30:	ldr	x0, [x0]
  42aa34:	ldr	x1, [sp, #280]
  42aa38:	cmp	x1, x0
  42aa3c:	b.ls	42aaa8 <parse_file_seq@@Base+0x4c8>  // b.plast
  42aa40:	ldr	x0, [sp, #232]
  42aa44:	sub	x0, x0, #0x1
  42aa48:	ldr	x1, [sp, #280]
  42aa4c:	add	x0, x1, x0
  42aa50:	ldrb	w0, [x0]
  42aa54:	cmp	w0, #0x29
  42aa58:	b.ne	42aa7c <parse_file_seq@@Base+0x49c>  // b.any
  42aa5c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42aa60:	add	x0, x0, #0x80
  42aa64:	ldr	x0, [x0]
  42aa68:	str	x0, [sp, #280]
  42aa6c:	ldr	x0, [sp, #232]
  42aa70:	cmp	x0, #0x1
  42aa74:	b.ne	42aaa8 <parse_file_seq@@Base+0x4c8>  // b.any
  42aa78:	b	42aec4 <parse_file_seq@@Base+0x8e4>
  42aa7c:	ldr	x0, [sp, #232]
  42aa80:	add	x1, x0, #0x1
  42aa84:	str	x1, [sp, #232]
  42aa88:	ldr	x1, [sp, #280]
  42aa8c:	add	x0, x1, x0
  42aa90:	mov	w1, #0x29                  	// #41
  42aa94:	strb	w1, [x0]
  42aa98:	ldr	x1, [sp, #280]
  42aa9c:	ldr	x0, [sp, #232]
  42aaa0:	add	x0, x1, x0
  42aaa4:	strb	wzr, [x0]
  42aaa8:	ldr	w0, [sp, #24]
  42aaac:	and	w0, w0, #0x4
  42aab0:	cmp	w0, #0x0
  42aab4:	b.eq	42ab28 <parse_file_seq@@Base+0x548>  // b.none
  42aab8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42aabc:	add	x0, x0, #0x80
  42aac0:	ldr	x0, [x0]
  42aac4:	mov	x2, x0
  42aac8:	ldr	x1, [sp, #16]
  42aacc:	mov	w0, #0x2                   	// #2
  42aad0:	bl	422404 <concat@@Base>
  42aad4:	str	x0, [sp, #152]
  42aad8:	ldr	x0, [sp, #32]
  42aadc:	bl	4226d4 <xcalloc@@Base>
  42aae0:	mov	x1, x0
  42aae4:	ldr	x0, [sp, #296]
  42aae8:	str	x1, [x0]
  42aaec:	ldr	w0, [sp, #204]
  42aaf0:	cmp	w0, #0x0
  42aaf4:	b.eq	42ab04 <parse_file_seq@@Base+0x524>  // b.none
  42aaf8:	ldr	x0, [sp, #152]
  42aafc:	bl	430d78 <strcache_add@@Base>
  42ab00:	b	42ab0c <parse_file_seq@@Base+0x52c>
  42ab04:	ldr	x0, [sp, #152]
  42ab08:	bl	422788 <xstrdup@@Base>
  42ab0c:	ldr	x1, [sp, #296]
  42ab10:	ldr	x1, [x1]
  42ab14:	str	x0, [x1, #8]
  42ab18:	ldr	x0, [sp, #296]
  42ab1c:	ldr	x0, [x0]
  42ab20:	str	x0, [sp, #296]
  42ab24:	b	42aec4 <parse_file_seq@@Base+0x8e4>
  42ab28:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ab2c:	add	x0, x0, #0x80
  42ab30:	ldr	x0, [x0]
  42ab34:	str	x0, [sp, #64]
  42ab38:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ab3c:	add	x0, x0, #0x80
  42ab40:	ldr	x0, [x0]
  42ab44:	ldrb	w0, [x0]
  42ab48:	cmp	w0, #0x7e
  42ab4c:	b.ne	42ab78 <parse_file_seq@@Base+0x598>  // b.any
  42ab50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ab54:	add	x0, x0, #0x80
  42ab58:	ldr	x0, [x0]
  42ab5c:	bl	42a3d8 <tilde_expand@@Base>
  42ab60:	str	x0, [sp, #256]
  42ab64:	ldr	x0, [sp, #256]
  42ab68:	cmp	x0, #0x0
  42ab6c:	b.eq	42ab78 <parse_file_seq@@Base+0x598>  // b.none
  42ab70:	ldr	x0, [sp, #256]
  42ab74:	str	x0, [sp, #64]
  42ab78:	ldr	w0, [sp, #24]
  42ab7c:	and	w0, w0, #0x2
  42ab80:	cmp	w0, #0x0
  42ab84:	b.ne	42abb0 <parse_file_seq@@Base+0x5d0>  // b.any
  42ab88:	ldr	x0, [sp, #64]
  42ab8c:	bl	407068 <ar_name@@Base>
  42ab90:	cmp	w0, #0x0
  42ab94:	b.eq	42abb0 <parse_file_seq@@Base+0x5d0>  // b.none
  42ab98:	ldr	x0, [sp, #64]
  42ab9c:	add	x2, sp, #0x30
  42aba0:	add	x1, sp, #0x38
  42aba4:	bl	407154 <ar_parse_name@@Base>
  42aba8:	ldr	x0, [sp, #56]
  42abac:	str	x0, [sp, #64]
  42abb0:	ldr	w0, [sp, #24]
  42abb4:	and	w0, w0, #0x8
  42abb8:	cmp	w0, #0x0
  42abbc:	b.ne	42abf4 <parse_file_seq@@Base+0x614>  // b.any
  42abc0:	ldr	x2, [sp, #64]
  42abc4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42abc8:	add	x1, x0, #0x428
  42abcc:	mov	x0, x2
  42abd0:	bl	4069f0 <strpbrk@plt>
  42abd4:	cmp	x0, #0x0
  42abd8:	b.ne	42abf4 <parse_file_seq@@Base+0x614>  // b.any
  42abdc:	str	wzr, [sp, #252]
  42abe0:	mov	w0, #0x1                   	// #1
  42abe4:	str	w0, [sp, #228]
  42abe8:	add	x0, sp, #0x40
  42abec:	str	x0, [sp, #264]
  42abf0:	b	42ac70 <parse_file_seq@@Base+0x690>
  42abf4:	ldr	x0, [sp, #64]
  42abf8:	add	x1, sp, #0x48
  42abfc:	mov	x3, x1
  42ac00:	mov	x2, #0x0                   	// #0
  42ac04:	mov	w1, #0x200                 	// #512
  42ac08:	bl	406d60 <glob@plt>
  42ac0c:	cmp	w0, #0x3
  42ac10:	b.eq	42ac44 <parse_file_seq@@Base+0x664>  // b.none
  42ac14:	cmp	w0, #0x3
  42ac18:	b.gt	42ac5c <parse_file_seq@@Base+0x67c>
  42ac1c:	cmp	w0, #0x0
  42ac20:	b.eq	42ac30 <parse_file_seq@@Base+0x650>  // b.none
  42ac24:	cmp	w0, #0x1
  42ac28:	b.ne	42ac5c <parse_file_seq@@Base+0x67c>  // b.any
  42ac2c:	bl	42439c <out_of_memory@@Base>
  42ac30:	ldr	x0, [sp, #72]
  42ac34:	str	w0, [sp, #228]
  42ac38:	ldr	x0, [sp, #80]
  42ac3c:	str	x0, [sp, #264]
  42ac40:	b	42ac70 <parse_file_seq@@Base+0x690>
  42ac44:	ldr	w0, [sp, #24]
  42ac48:	and	w0, w0, #0x8
  42ac4c:	cmp	w0, #0x0
  42ac50:	b.eq	42ac5c <parse_file_seq@@Base+0x67c>  // b.none
  42ac54:	str	wzr, [sp, #228]
  42ac58:	b	42ac70 <parse_file_seq@@Base+0x690>
  42ac5c:	mov	w0, #0x1                   	// #1
  42ac60:	str	w0, [sp, #228]
  42ac64:	add	x0, sp, #0x40
  42ac68:	str	x0, [sp, #264]
  42ac6c:	nop
  42ac70:	str	wzr, [sp, #224]
  42ac74:	b	42ae88 <parse_file_seq@@Base+0x8a8>
  42ac78:	ldr	x0, [sp, #48]
  42ac7c:	cmp	x0, #0x0
  42ac80:	b.eq	42ae08 <parse_file_seq@@Base+0x828>  // b.none
  42ac84:	ldrsw	x0, [sp, #224]
  42ac88:	lsl	x0, x0, #3
  42ac8c:	ldr	x1, [sp, #264]
  42ac90:	add	x0, x1, x0
  42ac94:	ldr	x0, [x0]
  42ac98:	ldr	x1, [sp, #48]
  42ac9c:	ldr	x2, [sp, #32]
  42aca0:	bl	407640 <ar_glob@@Base>
  42aca4:	str	x0, [sp, #208]
  42aca8:	ldr	x0, [sp, #208]
  42acac:	cmp	x0, #0x0
  42acb0:	b.ne	42ad44 <parse_file_seq@@Base+0x764>  // b.any
  42acb4:	ldrsw	x0, [sp, #224]
  42acb8:	lsl	x0, x0, #3
  42acbc:	ldr	x1, [sp, #264]
  42acc0:	add	x0, x1, x0
  42acc4:	ldr	x1, [x0]
  42acc8:	ldr	x2, [sp, #48]
  42accc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42acd0:	add	x5, x0, #0x430
  42acd4:	mov	x4, x2
  42acd8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42acdc:	add	x3, x0, #0x438
  42ace0:	mov	x2, x1
  42ace4:	ldr	x1, [sp, #16]
  42ace8:	mov	w0, #0x5                   	// #5
  42acec:	bl	422404 <concat@@Base>
  42acf0:	str	x0, [sp, #160]
  42acf4:	ldr	x0, [sp, #32]
  42acf8:	bl	4226d4 <xcalloc@@Base>
  42acfc:	mov	x1, x0
  42ad00:	ldr	x0, [sp, #296]
  42ad04:	str	x1, [x0]
  42ad08:	ldr	w0, [sp, #204]
  42ad0c:	cmp	w0, #0x0
  42ad10:	b.eq	42ad20 <parse_file_seq@@Base+0x740>  // b.none
  42ad14:	ldr	x0, [sp, #160]
  42ad18:	bl	430d78 <strcache_add@@Base>
  42ad1c:	b	42ad28 <parse_file_seq@@Base+0x748>
  42ad20:	ldr	x0, [sp, #160]
  42ad24:	bl	422788 <xstrdup@@Base>
  42ad28:	ldr	x1, [sp, #296]
  42ad2c:	ldr	x1, [x1]
  42ad30:	str	x0, [x1, #8]
  42ad34:	ldr	x0, [sp, #296]
  42ad38:	ldr	x0, [x0]
  42ad3c:	str	x0, [sp, #296]
  42ad40:	b	42ae7c <parse_file_seq@@Base+0x89c>
  42ad44:	ldr	x0, [sp, #296]
  42ad48:	ldr	x0, [x0]
  42ad4c:	cmp	x0, #0x0
  42ad50:	b.eq	42ad68 <parse_file_seq@@Base+0x788>  // b.none
  42ad54:	ldr	x0, [sp, #296]
  42ad58:	ldr	x0, [x0]
  42ad5c:	ldr	x1, [sp, #208]
  42ad60:	str	x1, [x0]
  42ad64:	b	42ad74 <parse_file_seq@@Base+0x794>
  42ad68:	ldr	x0, [sp, #296]
  42ad6c:	ldr	x1, [sp, #208]
  42ad70:	str	x1, [x0]
  42ad74:	ldr	w0, [sp, #204]
  42ad78:	cmp	w0, #0x0
  42ad7c:	b.ne	42ada8 <parse_file_seq@@Base+0x7c8>  // b.any
  42ad80:	ldr	x0, [sp, #64]
  42ad84:	mov	x2, x0
  42ad88:	ldr	x1, [sp, #16]
  42ad8c:	mov	w0, #0x2                   	// #2
  42ad90:	bl	422404 <concat@@Base>
  42ad94:	bl	422788 <xstrdup@@Base>
  42ad98:	mov	x1, x0
  42ad9c:	ldr	x0, [sp, #208]
  42ada0:	str	x1, [x0, #8]
  42ada4:	b	42add8 <parse_file_seq@@Base+0x7f8>
  42ada8:	ldr	x0, [sp, #16]
  42adac:	cmp	x0, #0x0
  42adb0:	b.eq	42add8 <parse_file_seq@@Base+0x7f8>  // b.none
  42adb4:	ldr	x0, [sp, #64]
  42adb8:	mov	x2, x0
  42adbc:	ldr	x1, [sp, #16]
  42adc0:	mov	w0, #0x2                   	// #2
  42adc4:	bl	422404 <concat@@Base>
  42adc8:	bl	430d78 <strcache_add@@Base>
  42adcc:	mov	x1, x0
  42add0:	ldr	x0, [sp, #208]
  42add4:	str	x1, [x0, #8]
  42add8:	ldr	x0, [sp, #208]
  42addc:	ldr	x0, [x0]
  42ade0:	cmp	x0, #0x0
  42ade4:	b.eq	42adf8 <parse_file_seq@@Base+0x818>  // b.none
  42ade8:	ldr	x0, [sp, #208]
  42adec:	ldr	x0, [x0]
  42adf0:	str	x0, [sp, #208]
  42adf4:	b	42ad74 <parse_file_seq@@Base+0x794>
  42adf8:	nop
  42adfc:	ldr	x0, [sp, #208]
  42ae00:	str	x0, [sp, #296]
  42ae04:	b	42ae7c <parse_file_seq@@Base+0x89c>
  42ae08:	ldrsw	x0, [sp, #224]
  42ae0c:	lsl	x0, x0, #3
  42ae10:	ldr	x1, [sp, #264]
  42ae14:	add	x0, x1, x0
  42ae18:	ldr	x0, [x0]
  42ae1c:	mov	x2, x0
  42ae20:	ldr	x1, [sp, #16]
  42ae24:	mov	w0, #0x2                   	// #2
  42ae28:	bl	422404 <concat@@Base>
  42ae2c:	str	x0, [sp, #168]
  42ae30:	ldr	x0, [sp, #32]
  42ae34:	bl	4226d4 <xcalloc@@Base>
  42ae38:	mov	x1, x0
  42ae3c:	ldr	x0, [sp, #296]
  42ae40:	str	x1, [x0]
  42ae44:	ldr	w0, [sp, #204]
  42ae48:	cmp	w0, #0x0
  42ae4c:	b.eq	42ae5c <parse_file_seq@@Base+0x87c>  // b.none
  42ae50:	ldr	x0, [sp, #168]
  42ae54:	bl	430d78 <strcache_add@@Base>
  42ae58:	b	42ae64 <parse_file_seq@@Base+0x884>
  42ae5c:	ldr	x0, [sp, #168]
  42ae60:	bl	422788 <xstrdup@@Base>
  42ae64:	ldr	x1, [sp, #296]
  42ae68:	ldr	x1, [x1]
  42ae6c:	str	x0, [x1, #8]
  42ae70:	ldr	x0, [sp, #296]
  42ae74:	ldr	x0, [x0]
  42ae78:	str	x0, [sp, #296]
  42ae7c:	ldr	w0, [sp, #224]
  42ae80:	add	w0, w0, #0x1
  42ae84:	str	w0, [sp, #224]
  42ae88:	ldr	w1, [sp, #224]
  42ae8c:	ldr	w0, [sp, #228]
  42ae90:	cmp	w1, w0
  42ae94:	b.lt	42ac78 <parse_file_seq@@Base+0x698>  // b.tstop
  42ae98:	ldr	w0, [sp, #252]
  42ae9c:	cmp	w0, #0x0
  42aea0:	b.eq	42aeac <parse_file_seq@@Base+0x8cc>  // b.none
  42aea4:	add	x0, sp, #0x48
  42aea8:	bl	406c30 <globfree@plt>
  42aeac:	ldr	x0, [sp, #56]
  42aeb0:	bl	406c00 <free@plt>
  42aeb4:	ldr	x0, [sp, #256]
  42aeb8:	bl	406c00 <free@plt>
  42aebc:	b	42a6fc <parse_file_seq@@Base+0x11c>
  42aec0:	nop
  42aec4:	b	42a6fc <parse_file_seq@@Base+0x11c>
  42aec8:	ldp	x29, x30, [sp], #304
  42aecc:	ret

000000000042aed0 <update_goal_chain@@Base>:
  42aed0:	stp	x29, x30, [sp, #-128]!
  42aed4:	mov	x29, sp
  42aed8:	str	x19, [sp, #16]
  42aedc:	str	x0, [sp, #40]
  42aee0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42aee4:	add	x0, x0, #0xb1c
  42aee8:	ldr	w0, [x0]
  42aeec:	str	w0, [sp, #76]
  42aef0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42aef4:	add	x0, x0, #0x6f4
  42aef8:	ldr	w0, [x0]
  42aefc:	str	w0, [sp, #72]
  42af00:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42af04:	add	x0, x0, #0xa50
  42af08:	ldr	w0, [x0]
  42af0c:	str	w0, [sp, #68]
  42af10:	mov	w0, #0x1                   	// #1
  42af14:	str	w0, [sp, #124]
  42af18:	ldr	x0, [sp, #40]
  42af1c:	bl	422ad0 <copy_dep_chain@@Base>
  42af20:	str	x0, [sp, #112]
  42af24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42af28:	add	x0, x0, #0x71c
  42af2c:	ldr	w0, [x0]
  42af30:	cmp	w0, #0x0
  42af34:	b.eq	42af40 <update_goal_chain@@Base+0x70>  // b.none
  42af38:	ldr	x0, [sp, #40]
  42af3c:	b	42af44 <update_goal_chain@@Base+0x74>
  42af40:	mov	x0, #0x0                   	// #0
  42af44:	adrp	x1, 456000 <stdio_traced@@Base+0x2008>
  42af48:	add	x1, x1, #0x90
  42af4c:	str	x0, [x1]
  42af50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42af54:	add	x0, x0, #0xa0
  42af58:	ldr	w0, [x0]
  42af5c:	add	w1, w0, #0x1
  42af60:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42af64:	add	x0, x0, #0xa0
  42af68:	str	w1, [x0]
  42af6c:	b	42b550 <update_goal_chain@@Base+0x680>
  42af70:	bl	41a510 <start_waiting_jobs@@Base>
  42af74:	mov	w1, #0x0                   	// #0
  42af78:	mov	w0, #0x1                   	// #1
  42af7c:	bl	417c80 <reap_children@@Base>
  42af80:	str	xzr, [sp, #96]
  42af84:	ldr	x0, [sp, #112]
  42af88:	str	x0, [sp, #104]
  42af8c:	b	42b514 <update_goal_chain@@Base+0x644>
  42af90:	str	wzr, [sp, #84]
  42af94:	str	wzr, [sp, #80]
  42af98:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42af9c:	add	x0, x0, #0x98
  42afa0:	ldr	x1, [sp, #104]
  42afa4:	str	x1, [x0]
  42afa8:	ldr	x0, [sp, #104]
  42afac:	ldr	x0, [x0, #16]
  42afb0:	ldr	x0, [x0, #104]
  42afb4:	cmp	x0, #0x0
  42afb8:	b.eq	42afcc <update_goal_chain@@Base+0xfc>  // b.none
  42afbc:	ldr	x0, [sp, #104]
  42afc0:	ldr	x0, [x0, #16]
  42afc4:	ldr	x0, [x0, #104]
  42afc8:	b	42afd4 <update_goal_chain@@Base+0x104>
  42afcc:	ldr	x0, [sp, #104]
  42afd0:	ldr	x0, [x0, #16]
  42afd4:	str	x0, [sp, #88]
  42afd8:	b	42b388 <update_goal_chain@@Base+0x4b8>
  42afdc:	ldr	x0, [sp, #104]
  42afe0:	ldrb	w0, [x0, #32]
  42afe4:	and	w0, w0, #0x4
  42afe8:	cmp	w0, #0x0
  42afec:	cset	w0, ne  // ne = any
  42aff0:	and	w2, w0, #0xff
  42aff4:	ldr	x1, [sp, #88]
  42aff8:	ldrb	w0, [x1, #138]
  42affc:	bfxil	w0, w2, #0, #1
  42b000:	strb	w0, [x1, #138]
  42b004:	b	42b014 <update_goal_chain@@Base+0x144>
  42b008:	ldr	x0, [sp, #88]
  42b00c:	ldr	x0, [x0, #72]
  42b010:	str	x0, [sp, #88]
  42b014:	ldr	x0, [sp, #88]
  42b018:	ldr	x0, [x0, #72]
  42b01c:	cmp	x0, #0x0
  42b020:	b.ne	42b008 <update_goal_chain@@Base+0x138>  // b.any
  42b024:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b028:	add	x0, x0, #0x71c
  42b02c:	ldr	w0, [x0]
  42b030:	cmp	w0, #0x0
  42b034:	b.eq	42b0c0 <update_goal_chain@@Base+0x1f0>  // b.none
  42b038:	ldr	x0, [sp, #88]
  42b03c:	ldrb	w0, [x0, #137]
  42b040:	and	w0, w0, #0x10
  42b044:	and	w0, w0, #0xff
  42b048:	cmp	w0, #0x0
  42b04c:	b.eq	42b084 <update_goal_chain@@Base+0x1b4>  // b.none
  42b050:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b054:	add	x0, x0, #0xb1c
  42b058:	ldr	w1, [sp, #76]
  42b05c:	str	w1, [x0]
  42b060:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b064:	add	x0, x0, #0x6f4
  42b068:	ldr	w1, [sp, #72]
  42b06c:	str	w1, [x0]
  42b070:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b074:	add	x0, x0, #0xa50
  42b078:	ldr	w1, [sp, #68]
  42b07c:	str	w1, [x0]
  42b080:	b	42b0c0 <update_goal_chain@@Base+0x1f0>
  42b084:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b088:	add	x0, x0, #0xa50
  42b08c:	str	wzr, [x0]
  42b090:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b094:	add	x0, x0, #0xa50
  42b098:	ldr	w1, [x0]
  42b09c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b0a0:	add	x0, x0, #0x6f4
  42b0a4:	str	w1, [x0]
  42b0a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b0ac:	add	x0, x0, #0x6f4
  42b0b0:	ldr	w1, [x0]
  42b0b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b0b8:	add	x0, x0, #0xb1c
  42b0bc:	str	w1, [x0]
  42b0c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b0c4:	add	x0, x0, #0x88
  42b0c8:	ldr	w0, [x0]
  42b0cc:	str	w0, [sp, #64]
  42b0d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b0d4:	add	x0, x0, #0x71c
  42b0d8:	ldr	w0, [x0]
  42b0dc:	cmp	w0, #0x0
  42b0e0:	cset	w0, ne  // ne = any
  42b0e4:	and	w0, w0, #0xff
  42b0e8:	mov	w1, w0
  42b0ec:	ldr	x0, [sp, #88]
  42b0f0:	bl	42b6c8 <show_goal_error@@Base+0x118>
  42b0f4:	str	w0, [sp, #60]
  42b0f8:	b	42b108 <update_goal_chain@@Base+0x238>
  42b0fc:	ldr	x0, [sp, #88]
  42b100:	ldr	x0, [x0, #72]
  42b104:	str	x0, [sp, #88]
  42b108:	ldr	x0, [sp, #88]
  42b10c:	ldr	x0, [x0, #72]
  42b110:	cmp	x0, #0x0
  42b114:	b.ne	42b0fc <update_goal_chain@@Base+0x22c>  // b.any
  42b118:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b11c:	add	x0, x0, #0x88
  42b120:	ldr	w0, [x0]
  42b124:	ldr	w1, [sp, #64]
  42b128:	cmp	w1, w0
  42b12c:	b.cs	42b140 <update_goal_chain@@Base+0x270>  // b.hs, b.nlast
  42b130:	ldr	x0, [sp, #104]
  42b134:	ldrb	w1, [x0, #33]
  42b138:	orr	w1, w1, #0x1
  42b13c:	strb	w1, [x0, #33]
  42b140:	str	wzr, [sp, #84]
  42b144:	ldr	w0, [sp, #60]
  42b148:	cmp	w0, #0x0
  42b14c:	b.ne	42b168 <update_goal_chain@@Base+0x298>  // b.any
  42b150:	ldr	x0, [sp, #88]
  42b154:	ldrb	w0, [x0, #137]
  42b158:	and	w0, w0, #0x4
  42b15c:	and	w0, w0, #0xff
  42b160:	cmp	w0, #0x0
  42b164:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b168:	ldr	w0, [sp, #124]
  42b16c:	cmp	w0, #0x1
  42b170:	b.hi	42b334 <update_goal_chain@@Base+0x464>  // b.pmore
  42b174:	ldr	x0, [sp, #88]
  42b178:	ldrb	w0, [x0, #136]
  42b17c:	and	w0, w0, #0x3
  42b180:	and	w0, w0, #0xff
  42b184:	cmp	w0, #0x0
  42b188:	b.eq	42b1f0 <update_goal_chain@@Base+0x320>  // b.none
  42b18c:	ldr	x0, [sp, #88]
  42b190:	ldrb	w0, [x0, #136]
  42b194:	ubfx	x0, x0, #0, #2
  42b198:	and	w0, w0, #0xff
  42b19c:	str	w0, [sp, #124]
  42b1a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b1a4:	add	x0, x0, #0x6f4
  42b1a8:	ldr	w0, [x0]
  42b1ac:	cmp	w0, #0x0
  42b1b0:	b.eq	42b1e4 <update_goal_chain@@Base+0x314>  // b.none
  42b1b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b1b8:	add	x0, x0, #0xa54
  42b1bc:	ldr	w0, [x0]
  42b1c0:	cmp	w0, #0x0
  42b1c4:	b.ne	42b1e4 <update_goal_chain@@Base+0x314>  // b.any
  42b1c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b1cc:	add	x0, x0, #0x71c
  42b1d0:	ldr	w0, [x0]
  42b1d4:	cmp	w0, #0x0
  42b1d8:	b.ne	42b1e4 <update_goal_chain@@Base+0x314>  // b.any
  42b1dc:	mov	w0, #0x1                   	// #1
  42b1e0:	b	42b1e8 <update_goal_chain@@Base+0x318>
  42b1e4:	mov	w0, #0x0                   	// #0
  42b1e8:	str	w0, [sp, #84]
  42b1ec:	b	42b334 <update_goal_chain@@Base+0x464>
  42b1f0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b1f4:	add	x0, x0, #0x71c
  42b1f8:	ldr	w0, [x0]
  42b1fc:	cmp	w0, #0x0
  42b200:	b.eq	42b230 <update_goal_chain@@Base+0x360>  // b.none
  42b204:	ldr	x0, [sp, #88]
  42b208:	ldr	x0, [x0, #112]
  42b20c:	cmp	x0, #0x0
  42b210:	b.ne	42b224 <update_goal_chain@@Base+0x354>  // b.any
  42b214:	mov	w1, #0x0                   	// #0
  42b218:	ldr	x0, [sp, #88]
  42b21c:	bl	42e3cc <f_mtime@@Base>
  42b220:	b	42b258 <update_goal_chain@@Base+0x388>
  42b224:	ldr	x0, [sp, #88]
  42b228:	ldr	x0, [x0, #112]
  42b22c:	b	42b258 <update_goal_chain@@Base+0x388>
  42b230:	ldr	x0, [sp, #88]
  42b234:	ldr	x0, [x0, #112]
  42b238:	cmp	x0, #0x0
  42b23c:	b.ne	42b250 <update_goal_chain@@Base+0x380>  // b.any
  42b240:	mov	w1, #0x1                   	// #1
  42b244:	ldr	x0, [sp, #88]
  42b248:	bl	42e3cc <f_mtime@@Base>
  42b24c:	b	42b258 <update_goal_chain@@Base+0x388>
  42b250:	ldr	x0, [sp, #88]
  42b254:	ldr	x0, [x0, #112]
  42b258:	str	x0, [sp, #48]
  42b25c:	b	42b26c <update_goal_chain@@Base+0x39c>
  42b260:	ldr	x0, [sp, #88]
  42b264:	ldr	x0, [x0, #72]
  42b268:	str	x0, [sp, #88]
  42b26c:	ldr	x0, [sp, #88]
  42b270:	ldr	x0, [x0, #72]
  42b274:	cmp	x0, #0x0
  42b278:	b.ne	42b260 <update_goal_chain@@Base+0x390>  // b.any
  42b27c:	ldr	x0, [sp, #88]
  42b280:	ldrb	w0, [x0, #137]
  42b284:	and	w0, w0, #0x4
  42b288:	and	w0, w0, #0xff
  42b28c:	cmp	w0, #0x0
  42b290:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b294:	ldr	x0, [sp, #104]
  42b298:	ldrb	w0, [x0, #33]
  42b29c:	and	w0, w0, #0x1
  42b2a0:	and	w0, w0, #0xff
  42b2a4:	cmp	w0, #0x0
  42b2a8:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b2ac:	ldr	x0, [sp, #88]
  42b2b0:	ldr	x0, [x0, #120]
  42b2b4:	ldr	x1, [sp, #48]
  42b2b8:	cmp	x1, x0
  42b2bc:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b2c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b2c4:	add	x0, x0, #0x71c
  42b2c8:	ldr	w0, [x0]
  42b2cc:	cmp	w0, #0x0
  42b2d0:	b.eq	42b2fc <update_goal_chain@@Base+0x42c>  // b.none
  42b2d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b2d8:	add	x0, x0, #0xa50
  42b2dc:	ldr	w0, [x0]
  42b2e0:	cmp	w0, #0x0
  42b2e4:	b.ne	42b300 <update_goal_chain@@Base+0x430>  // b.any
  42b2e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b2ec:	add	x0, x0, #0x6f4
  42b2f0:	ldr	w0, [x0]
  42b2f4:	cmp	w0, #0x0
  42b2f8:	b.ne	42b300 <update_goal_chain@@Base+0x430>  // b.any
  42b2fc:	str	wzr, [sp, #124]
  42b300:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b304:	add	x0, x0, #0x71c
  42b308:	ldr	w0, [x0]
  42b30c:	cmp	w0, #0x0
  42b310:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b314:	ldr	x0, [sp, #88]
  42b318:	ldrb	w0, [x0, #138]
  42b31c:	and	w0, w0, #0x1
  42b320:	and	w0, w0, #0xff
  42b324:	cmp	w0, #0x0
  42b328:	b.eq	42b334 <update_goal_chain@@Base+0x464>  // b.none
  42b32c:	mov	w0, #0x1                   	// #1
  42b330:	str	w0, [sp, #84]
  42b334:	ldr	x0, [sp, #88]
  42b338:	ldrb	w0, [x0, #137]
  42b33c:	and	w0, w0, #0x4
  42b340:	and	w0, w0, #0xff
  42b344:	cmp	w0, #0x0
  42b348:	cset	w0, eq  // eq = none
  42b34c:	and	w0, w0, #0xff
  42b350:	mov	w1, w0
  42b354:	ldr	w0, [sp, #80]
  42b358:	orr	w0, w0, w1
  42b35c:	str	w0, [sp, #80]
  42b360:	ldr	x0, [sp, #88]
  42b364:	ldrb	w1, [x0, #138]
  42b368:	and	w1, w1, #0xfffffffe
  42b36c:	strb	w1, [x0, #138]
  42b370:	ldr	w0, [sp, #84]
  42b374:	cmp	w0, #0x0
  42b378:	b.ne	42b398 <update_goal_chain@@Base+0x4c8>  // b.any
  42b37c:	ldr	x0, [sp, #88]
  42b380:	ldr	x0, [x0, #56]
  42b384:	str	x0, [sp, #88]
  42b388:	ldr	x0, [sp, #88]
  42b38c:	cmp	x0, #0x0
  42b390:	b.ne	42afdc <update_goal_chain@@Base+0x10c>  // b.any
  42b394:	b	42b39c <update_goal_chain@@Base+0x4cc>
  42b398:	nop
  42b39c:	ldr	x0, [sp, #104]
  42b3a0:	ldr	x0, [x0, #16]
  42b3a4:	str	x0, [sp, #88]
  42b3a8:	ldr	w0, [sp, #84]
  42b3ac:	cmp	w0, #0x0
  42b3b0:	b.ne	42b3c0 <update_goal_chain@@Base+0x4f0>  // b.any
  42b3b4:	ldr	w0, [sp, #80]
  42b3b8:	cmp	w0, #0x0
  42b3bc:	b.ne	42b500 <update_goal_chain@@Base+0x630>  // b.any
  42b3c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b3c4:	add	x0, x0, #0x71c
  42b3c8:	ldr	w0, [x0]
  42b3cc:	cmp	w0, #0x0
  42b3d0:	b.ne	42b49c <update_goal_chain@@Base+0x5cc>  // b.any
  42b3d4:	ldr	x0, [sp, #88]
  42b3d8:	ldrb	w0, [x0, #136]
  42b3dc:	and	w0, w0, #0x3
  42b3e0:	and	w0, w0, #0xff
  42b3e4:	cmp	w0, #0x0
  42b3e8:	b.ne	42b49c <update_goal_chain@@Base+0x5cc>  // b.any
  42b3ec:	ldr	x0, [sp, #104]
  42b3f0:	ldrb	w0, [x0, #33]
  42b3f4:	and	w0, w0, #0x1
  42b3f8:	and	w0, w0, #0xff
  42b3fc:	cmp	w0, #0x0
  42b400:	b.ne	42b49c <update_goal_chain@@Base+0x5cc>  // b.any
  42b404:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b408:	add	x0, x0, #0x6d8
  42b40c:	ldr	w0, [x0]
  42b410:	cmp	w0, #0x0
  42b414:	b.ne	42b49c <update_goal_chain@@Base+0x5cc>  // b.any
  42b418:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b41c:	add	x0, x0, #0x6f4
  42b420:	ldr	w0, [x0]
  42b424:	cmp	w0, #0x0
  42b428:	b.ne	42b49c <update_goal_chain@@Base+0x5cc>  // b.any
  42b42c:	ldr	x0, [sp, #88]
  42b430:	ldr	x0, [x0]
  42b434:	bl	4066f0 <strlen@plt>
  42b438:	mov	x19, x0
  42b43c:	ldr	x0, [sp, #88]
  42b440:	ldrb	w0, [x0, #137]
  42b444:	and	w0, w0, #0x20
  42b448:	and	w0, w0, #0xff
  42b44c:	cmp	w0, #0x0
  42b450:	b.ne	42b464 <update_goal_chain@@Base+0x594>  // b.any
  42b454:	ldr	x0, [sp, #88]
  42b458:	ldr	x0, [x0, #32]
  42b45c:	cmp	x0, #0x0
  42b460:	b.ne	42b474 <update_goal_chain@@Base+0x5a4>  // b.any
  42b464:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42b468:	add	x0, x0, #0x478
  42b46c:	bl	406e40 <gettext@plt>
  42b470:	b	42b480 <update_goal_chain@@Base+0x5b0>
  42b474:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42b478:	add	x0, x0, #0x498
  42b47c:	bl	406e40 <gettext@plt>
  42b480:	ldr	x1, [sp, #88]
  42b484:	ldr	x1, [x1]
  42b488:	mov	x3, x1
  42b48c:	mov	x2, x0
  42b490:	mov	x1, x19
  42b494:	mov	w0, #0x1                   	// #1
  42b498:	bl	423cc8 <message@@Base>
  42b49c:	ldr	x0, [sp, #96]
  42b4a0:	cmp	x0, #0x0
  42b4a4:	b.ne	42b4b8 <update_goal_chain@@Base+0x5e8>  // b.any
  42b4a8:	ldr	x0, [sp, #104]
  42b4ac:	ldr	x0, [x0]
  42b4b0:	str	x0, [sp, #112]
  42b4b4:	b	42b4c8 <update_goal_chain@@Base+0x5f8>
  42b4b8:	ldr	x0, [sp, #104]
  42b4bc:	ldr	x1, [x0]
  42b4c0:	ldr	x0, [sp, #96]
  42b4c4:	str	x1, [x0]
  42b4c8:	ldr	x0, [sp, #104]
  42b4cc:	bl	406c00 <free@plt>
  42b4d0:	ldr	x0, [sp, #96]
  42b4d4:	cmp	x0, #0x0
  42b4d8:	b.eq	42b4e8 <update_goal_chain@@Base+0x618>  // b.none
  42b4dc:	ldr	x0, [sp, #96]
  42b4e0:	ldr	x0, [x0]
  42b4e4:	b	42b4ec <update_goal_chain@@Base+0x61c>
  42b4e8:	ldr	x0, [sp, #112]
  42b4ec:	str	x0, [sp, #104]
  42b4f0:	ldr	w0, [sp, #84]
  42b4f4:	cmp	w0, #0x0
  42b4f8:	b.ne	42b524 <update_goal_chain@@Base+0x654>  // b.any
  42b4fc:	b	42b514 <update_goal_chain@@Base+0x644>
  42b500:	ldr	x0, [sp, #104]
  42b504:	str	x0, [sp, #96]
  42b508:	ldr	x0, [sp, #104]
  42b50c:	ldr	x0, [x0]
  42b510:	str	x0, [sp, #104]
  42b514:	ldr	x0, [sp, #104]
  42b518:	cmp	x0, #0x0
  42b51c:	b.ne	42af90 <update_goal_chain@@Base+0xc0>  // b.any
  42b520:	b	42b528 <update_goal_chain@@Base+0x658>
  42b524:	nop
  42b528:	ldr	x0, [sp, #104]
  42b52c:	cmp	x0, #0x0
  42b530:	b.ne	42b550 <update_goal_chain@@Base+0x680>  // b.any
  42b534:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b538:	add	x0, x0, #0xa0
  42b53c:	ldr	w0, [x0]
  42b540:	add	w1, w0, #0x1
  42b544:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b548:	add	x0, x0, #0xa0
  42b54c:	str	w1, [x0]
  42b550:	ldr	x0, [sp, #112]
  42b554:	cmp	x0, #0x0
  42b558:	b.ne	42af70 <update_goal_chain@@Base+0xa0>  // b.any
  42b55c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b560:	add	x0, x0, #0x71c
  42b564:	ldr	w0, [x0]
  42b568:	cmp	w0, #0x0
  42b56c:	b.eq	42b5a0 <update_goal_chain@@Base+0x6d0>  // b.none
  42b570:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b574:	add	x0, x0, #0xb1c
  42b578:	ldr	w1, [sp, #76]
  42b57c:	str	w1, [x0]
  42b580:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b584:	add	x0, x0, #0x6f4
  42b588:	ldr	w1, [sp, #72]
  42b58c:	str	w1, [x0]
  42b590:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b594:	add	x0, x0, #0xa50
  42b598:	ldr	w1, [sp, #68]
  42b59c:	str	w1, [x0]
  42b5a0:	ldr	w0, [sp, #124]
  42b5a4:	ldr	x19, [sp, #16]
  42b5a8:	ldp	x29, x30, [sp], #128
  42b5ac:	ret

000000000042b5b0 <show_goal_error@@Base>:
  42b5b0:	stp	x29, x30, [sp, #-64]!
  42b5b4:	mov	x29, sp
  42b5b8:	stp	x19, x20, [sp, #16]
  42b5bc:	str	x21, [sp, #32]
  42b5c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b5c4:	add	x0, x0, #0x98
  42b5c8:	ldr	x0, [x0]
  42b5cc:	ldrb	w0, [x0, #32]
  42b5d0:	and	w0, w0, #0x6
  42b5d4:	cmp	w0, #0x2
  42b5d8:	b.ne	42b6ac <show_goal_error@@Base+0xfc>  // b.any
  42b5dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b5e0:	add	x0, x0, #0x90
  42b5e4:	ldr	x0, [x0]
  42b5e8:	str	x0, [sp, #56]
  42b5ec:	b	42b69c <show_goal_error@@Base+0xec>
  42b5f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b5f4:	add	x0, x0, #0x98
  42b5f8:	ldr	x0, [x0]
  42b5fc:	ldr	x1, [x0, #16]
  42b600:	ldr	x0, [sp, #56]
  42b604:	ldr	x0, [x0, #16]
  42b608:	cmp	x1, x0
  42b60c:	b.ne	42b690 <show_goal_error@@Base+0xe0>  // b.any
  42b610:	ldr	x0, [sp, #56]
  42b614:	ldr	w0, [x0, #36]
  42b618:	cmp	w0, #0x0
  42b61c:	b.eq	42b6b4 <show_goal_error@@Base+0x104>  // b.none
  42b620:	ldr	x0, [sp, #56]
  42b624:	add	x19, x0, #0x28
  42b628:	ldr	x0, [sp, #56]
  42b62c:	ldr	x0, [x0, #16]
  42b630:	ldr	x0, [x0]
  42b634:	bl	4066f0 <strlen@plt>
  42b638:	mov	x20, x0
  42b63c:	ldr	x0, [sp, #56]
  42b640:	ldr	w0, [x0, #36]
  42b644:	bl	406ab0 <strerror@plt>
  42b648:	bl	4066f0 <strlen@plt>
  42b64c:	add	x20, x20, x0
  42b650:	ldr	x0, [sp, #56]
  42b654:	ldr	x0, [x0, #16]
  42b658:	ldr	x21, [x0]
  42b65c:	ldr	x0, [sp, #56]
  42b660:	ldr	w0, [x0, #36]
  42b664:	bl	406ab0 <strerror@plt>
  42b668:	mov	x4, x0
  42b66c:	mov	x3, x21
  42b670:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42b674:	add	x2, x0, #0x4b0
  42b678:	mov	x1, x20
  42b67c:	mov	x0, x19
  42b680:	bl	423e74 <error@@Base>
  42b684:	ldr	x0, [sp, #56]
  42b688:	str	wzr, [x0, #36]
  42b68c:	b	42b6b4 <show_goal_error@@Base+0x104>
  42b690:	ldr	x0, [sp, #56]
  42b694:	ldr	x0, [x0]
  42b698:	str	x0, [sp, #56]
  42b69c:	ldr	x0, [sp, #56]
  42b6a0:	cmp	x0, #0x0
  42b6a4:	b.ne	42b5f0 <show_goal_error@@Base+0x40>  // b.any
  42b6a8:	b	42b6b8 <show_goal_error@@Base+0x108>
  42b6ac:	nop
  42b6b0:	b	42b6b8 <show_goal_error@@Base+0x108>
  42b6b4:	nop
  42b6b8:	ldp	x19, x20, [sp, #16]
  42b6bc:	ldr	x21, [sp, #32]
  42b6c0:	ldp	x29, x30, [sp], #64
  42b6c4:	ret
  42b6c8:	stp	x29, x30, [sp, #-64]!
  42b6cc:	mov	x29, sp
  42b6d0:	str	x0, [x29, #24]
  42b6d4:	str	w1, [x29, #20]
  42b6d8:	str	wzr, [x29, #60]
  42b6dc:	ldr	x0, [x29, #24]
  42b6e0:	ldr	x0, [x0, #104]
  42b6e4:	cmp	x0, #0x0
  42b6e8:	b.eq	42b6f8 <show_goal_error@@Base+0x148>  // b.none
  42b6ec:	ldr	x0, [x29, #24]
  42b6f0:	ldr	x0, [x0, #104]
  42b6f4:	b	42b6fc <show_goal_error@@Base+0x14c>
  42b6f8:	ldr	x0, [x29, #24]
  42b6fc:	str	x0, [x29, #48]
  42b700:	ldr	x0, [x29, #48]
  42b704:	ldr	w1, [x0, #128]
  42b708:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b70c:	add	x0, x0, #0xa0
  42b710:	ldr	w0, [x0]
  42b714:	cmp	w1, w0
  42b718:	b.ne	42b8cc <show_goal_error@@Base+0x31c>  // b.any
  42b71c:	ldr	x0, [x29, #48]
  42b720:	ldrb	w0, [x0, #137]
  42b724:	and	w0, w0, #0x4
  42b728:	and	w0, w0, #0xff
  42b72c:	cmp	w0, #0x0
  42b730:	b.eq	42b77c <show_goal_error@@Base+0x1cc>  // b.none
  42b734:	ldr	x0, [x29, #48]
  42b738:	ldrb	w0, [x0, #136]
  42b73c:	ubfx	x0, x0, #0, #2
  42b740:	and	w0, w0, #0xff
  42b744:	cmp	w0, #0x1
  42b748:	b.ls	42b77c <show_goal_error@@Base+0x1cc>  // b.plast
  42b74c:	ldr	x0, [x29, #48]
  42b750:	ldrb	w0, [x0, #138]
  42b754:	and	w0, w0, #0x1
  42b758:	and	w0, w0, #0xff
  42b75c:	cmp	w0, #0x0
  42b760:	b.ne	42b77c <show_goal_error@@Base+0x1cc>  // b.any
  42b764:	ldr	x0, [x29, #48]
  42b768:	ldrb	w0, [x0, #138]
  42b76c:	and	w0, w0, #0x8
  42b770:	and	w0, w0, #0xff
  42b774:	cmp	w0, #0x0
  42b778:	b.ne	42b8cc <show_goal_error@@Base+0x31c>  // b.any
  42b77c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b780:	add	x0, x0, #0x6dc
  42b784:	ldr	w0, [x0]
  42b788:	and	w0, w0, #0x2
  42b78c:	cmp	w0, #0x0
  42b790:	b.eq	42b7d0 <show_goal_error@@Base+0x220>  // b.none
  42b794:	ldr	w0, [x29, #20]
  42b798:	bl	4223c8 <print_spaces@@Base>
  42b79c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42b7a0:	add	x0, x0, #0x4b8
  42b7a4:	bl	406e40 <gettext@plt>
  42b7a8:	mov	x2, x0
  42b7ac:	ldr	x0, [x29, #24]
  42b7b0:	ldr	x0, [x0]
  42b7b4:	mov	x1, x0
  42b7b8:	mov	x0, x2
  42b7bc:	bl	406dc0 <printf@plt>
  42b7c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42b7c4:	add	x0, x0, #0x400
  42b7c8:	ldr	x0, [x0]
  42b7cc:	bl	406c90 <fflush@plt>
  42b7d0:	ldr	x0, [x29, #48]
  42b7d4:	ldrb	w0, [x0, #136]
  42b7d8:	and	w0, w0, #0xc
  42b7dc:	and	w0, w0, #0xff
  42b7e0:	cmp	w0, #0xc
  42b7e4:	b.ne	42b7fc <show_goal_error@@Base+0x24c>  // b.any
  42b7e8:	ldr	x0, [x29, #48]
  42b7ec:	ldrb	w0, [x0, #136]
  42b7f0:	ubfx	x0, x0, #0, #2
  42b7f4:	and	w0, w0, #0xff
  42b7f8:	b	42b8dc <show_goal_error@@Base+0x32c>
  42b7fc:	mov	w0, #0x0                   	// #0
  42b800:	b	42b8dc <show_goal_error@@Base+0x32c>
  42b804:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b808:	add	x0, x0, #0xa0
  42b80c:	ldr	w1, [x0]
  42b810:	ldr	x0, [x29, #48]
  42b814:	str	w1, [x0, #128]
  42b818:	ldr	w1, [x29, #20]
  42b81c:	ldr	x0, [x29, #48]
  42b820:	bl	42bb1c <show_goal_error@@Base+0x56c>
  42b824:	str	w0, [x29, #44]
  42b828:	b	42b838 <show_goal_error@@Base+0x288>
  42b82c:	ldr	x0, [x29, #48]
  42b830:	ldr	x0, [x0, #72]
  42b834:	str	x0, [x29, #48]
  42b838:	ldr	x0, [x29, #48]
  42b83c:	ldr	x0, [x0, #72]
  42b840:	cmp	x0, #0x0
  42b844:	b.ne	42b82c <show_goal_error@@Base+0x27c>  // b.any
  42b848:	ldr	w0, [x29, #44]
  42b84c:	cmp	w0, #0x0
  42b850:	b.eq	42b870 <show_goal_error@@Base+0x2c0>  // b.none
  42b854:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b858:	add	x0, x0, #0xa54
  42b85c:	ldr	w0, [x0]
  42b860:	cmp	w0, #0x0
  42b864:	b.ne	42b870 <show_goal_error@@Base+0x2c0>  // b.any
  42b868:	ldr	w0, [x29, #44]
  42b86c:	b	42b8dc <show_goal_error@@Base+0x32c>
  42b870:	ldr	x0, [x29, #48]
  42b874:	ldrb	w0, [x0, #136]
  42b878:	and	w0, w0, #0xc
  42b87c:	and	w0, w0, #0xff
  42b880:	cmp	w0, #0x8
  42b884:	b.eq	42b8a0 <show_goal_error@@Base+0x2f0>  // b.none
  42b888:	ldr	x0, [x29, #48]
  42b88c:	ldrb	w0, [x0, #136]
  42b890:	and	w0, w0, #0xc
  42b894:	and	w0, w0, #0xff
  42b898:	cmp	w0, #0x4
  42b89c:	b.ne	42b8a8 <show_goal_error@@Base+0x2f8>  // b.any
  42b8a0:	mov	w0, #0x0                   	// #0
  42b8a4:	b	42b8dc <show_goal_error@@Base+0x32c>
  42b8a8:	ldr	w1, [x29, #44]
  42b8ac:	ldr	w0, [x29, #60]
  42b8b0:	cmp	w1, w0
  42b8b4:	b.ls	42b8c0 <show_goal_error@@Base+0x310>  // b.plast
  42b8b8:	ldr	w0, [x29, #44]
  42b8bc:	str	w0, [x29, #60]
  42b8c0:	ldr	x0, [x29, #48]
  42b8c4:	ldr	x0, [x0, #56]
  42b8c8:	str	x0, [x29, #48]
  42b8cc:	ldr	x0, [x29, #48]
  42b8d0:	cmp	x0, #0x0
  42b8d4:	b.ne	42b804 <show_goal_error@@Base+0x254>  // b.any
  42b8d8:	ldr	w0, [x29, #60]
  42b8dc:	mov	sp, x29
  42b8e0:	ldp	x29, x30, [sp], #64
  42b8e4:	ret
  42b8e8:	stp	x29, x30, [sp, #-96]!
  42b8ec:	mov	x29, sp
  42b8f0:	str	x19, [sp, #16]
  42b8f4:	str	x0, [sp, #40]
  42b8f8:	ldr	x0, [sp, #40]
  42b8fc:	ldr	x0, [x0, #24]
  42b900:	str	x0, [sp, #88]
  42b904:	b	42b974 <show_goal_error@@Base+0x3c4>
  42b908:	ldr	x0, [sp, #88]
  42b90c:	ldr	x0, [x0, #16]
  42b910:	ldrb	w0, [x0, #137]
  42b914:	and	w0, w0, #0x4
  42b918:	and	w0, w0, #0xff
  42b91c:	cmp	w0, #0x0
  42b920:	b.eq	42b968 <show_goal_error@@Base+0x3b8>  // b.none
  42b924:	ldr	x0, [sp, #88]
  42b928:	ldr	x0, [x0, #16]
  42b92c:	ldrb	w0, [x0, #136]
  42b930:	ubfx	x0, x0, #0, #2
  42b934:	and	w0, w0, #0xff
  42b938:	cmp	w0, #0x1
  42b93c:	b.ls	42b968 <show_goal_error@@Base+0x3b8>  // b.plast
  42b940:	ldr	x0, [sp, #40]
  42b944:	ldrb	w0, [x0, #138]
  42b948:	and	w0, w0, #0x8
  42b94c:	and	w0, w0, #0xff
  42b950:	cmp	w0, #0x0
  42b954:	b.eq	42b968 <show_goal_error@@Base+0x3b8>  // b.none
  42b958:	ldr	x0, [sp, #88]
  42b95c:	ldr	x0, [x0, #16]
  42b960:	bl	42b8e8 <show_goal_error@@Base+0x338>
  42b964:	b	42b980 <show_goal_error@@Base+0x3d0>
  42b968:	ldr	x0, [sp, #88]
  42b96c:	ldr	x0, [x0]
  42b970:	str	x0, [sp, #88]
  42b974:	ldr	x0, [sp, #88]
  42b978:	cmp	x0, #0x0
  42b97c:	b.ne	42b908 <show_goal_error@@Base+0x358>  // b.any
  42b980:	ldr	x0, [sp, #88]
  42b984:	cmp	x0, #0x0
  42b988:	b.ne	42bb0c <show_goal_error@@Base+0x55c>  // b.any
  42b98c:	bl	42b5b0 <show_goal_error@@Base>
  42b990:	ldr	x0, [sp, #40]
  42b994:	ldr	x0, [x0, #96]
  42b998:	cmp	x0, #0x0
  42b99c:	b.eq	42ba6c <show_goal_error@@Base+0x4bc>  // b.none
  42b9a0:	ldr	x0, [sp, #40]
  42b9a4:	ldr	x0, [x0]
  42b9a8:	bl	4066f0 <strlen@plt>
  42b9ac:	mov	x19, x0
  42b9b0:	ldr	x0, [sp, #40]
  42b9b4:	ldr	x0, [x0, #96]
  42b9b8:	ldr	x0, [x0]
  42b9bc:	bl	4066f0 <strlen@plt>
  42b9c0:	add	x0, x19, x0
  42b9c4:	add	x0, x0, #0x4
  42b9c8:	str	x0, [sp, #64]
  42b9cc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42b9d0:	add	x0, x0, #0x4d0
  42b9d4:	bl	406e40 <gettext@plt>
  42b9d8:	str	x0, [sp, #56]
  42b9dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42b9e0:	add	x0, x0, #0xa54
  42b9e4:	ldr	w0, [x0]
  42b9e8:	cmp	w0, #0x0
  42b9ec:	b.ne	42ba2c <show_goal_error@@Base+0x47c>  // b.any
  42b9f0:	ldr	x0, [sp, #40]
  42b9f4:	ldr	x1, [x0]
  42b9f8:	ldr	x0, [sp, #40]
  42b9fc:	ldr	x0, [x0, #96]
  42ba00:	ldr	x2, [x0]
  42ba04:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ba08:	add	x6, x0, #0x500
  42ba0c:	mov	x5, x2
  42ba10:	mov	x4, x1
  42ba14:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ba18:	add	x3, x0, #0x500
  42ba1c:	ldr	x2, [sp, #56]
  42ba20:	ldr	x1, [sp, #64]
  42ba24:	mov	x0, #0x0                   	// #0
  42ba28:	bl	424098 <fatal@@Base>
  42ba2c:	ldr	x0, [sp, #40]
  42ba30:	ldr	x1, [x0]
  42ba34:	ldr	x0, [sp, #40]
  42ba38:	ldr	x0, [x0, #96]
  42ba3c:	ldr	x2, [x0]
  42ba40:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ba44:	add	x6, x0, #0x508
  42ba48:	mov	x5, x2
  42ba4c:	mov	x4, x1
  42ba50:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ba54:	add	x3, x0, #0x510
  42ba58:	ldr	x2, [sp, #56]
  42ba5c:	ldr	x1, [sp, #64]
  42ba60:	mov	x0, #0x0                   	// #0
  42ba64:	bl	423e74 <error@@Base>
  42ba68:	b	42bafc <show_goal_error@@Base+0x54c>
  42ba6c:	ldr	x0, [sp, #40]
  42ba70:	ldr	x0, [x0]
  42ba74:	bl	4066f0 <strlen@plt>
  42ba78:	add	x0, x0, #0x4
  42ba7c:	str	x0, [sp, #80]
  42ba80:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ba84:	add	x0, x0, #0x518
  42ba88:	bl	406e40 <gettext@plt>
  42ba8c:	str	x0, [sp, #72]
  42ba90:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ba94:	add	x0, x0, #0xa54
  42ba98:	ldr	w0, [x0]
  42ba9c:	cmp	w0, #0x0
  42baa0:	b.ne	42bad0 <show_goal_error@@Base+0x520>  // b.any
  42baa4:	ldr	x0, [sp, #40]
  42baa8:	ldr	x1, [x0]
  42baac:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bab0:	add	x5, x0, #0x500
  42bab4:	mov	x4, x1
  42bab8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42babc:	add	x3, x0, #0x500
  42bac0:	ldr	x2, [sp, #72]
  42bac4:	ldr	x1, [sp, #80]
  42bac8:	mov	x0, #0x0                   	// #0
  42bacc:	bl	424098 <fatal@@Base>
  42bad0:	ldr	x0, [sp, #40]
  42bad4:	ldr	x1, [x0]
  42bad8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42badc:	add	x5, x0, #0x508
  42bae0:	mov	x4, x1
  42bae4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bae8:	add	x3, x0, #0x510
  42baec:	ldr	x2, [sp, #72]
  42baf0:	ldr	x1, [sp, #80]
  42baf4:	mov	x0, #0x0                   	// #0
  42baf8:	bl	423e74 <error@@Base>
  42bafc:	ldr	x0, [sp, #40]
  42bb00:	ldrb	w1, [x0, #138]
  42bb04:	and	w1, w1, #0xfffffff7
  42bb08:	strb	w1, [x0, #138]
  42bb0c:	nop
  42bb10:	ldr	x19, [sp, #16]
  42bb14:	ldp	x29, x30, [sp], #96
  42bb18:	ret
  42bb1c:	stp	x29, x30, [sp, #-256]!
  42bb20:	mov	x29, sp
  42bb24:	str	x19, [sp, #16]
  42bb28:	str	x0, [sp, #40]
  42bb2c:	str	w1, [sp, #36]
  42bb30:	str	wzr, [sp, #252]
  42bb34:	str	wzr, [sp, #212]
  42bb38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bb3c:	add	x0, x0, #0x6dc
  42bb40:	ldr	w0, [x0]
  42bb44:	and	w0, w0, #0x2
  42bb48:	cmp	w0, #0x0
  42bb4c:	b.eq	42bb8c <show_goal_error@@Base+0x5dc>  // b.none
  42bb50:	ldr	w0, [sp, #36]
  42bb54:	bl	4223c8 <print_spaces@@Base>
  42bb58:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bb5c:	add	x0, x0, #0x538
  42bb60:	bl	406e40 <gettext@plt>
  42bb64:	mov	x2, x0
  42bb68:	ldr	x0, [sp, #40]
  42bb6c:	ldr	x0, [x0]
  42bb70:	mov	x1, x0
  42bb74:	mov	x0, x2
  42bb78:	bl	406dc0 <printf@plt>
  42bb7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bb80:	add	x0, x0, #0x400
  42bb84:	ldr	x0, [x0]
  42bb88:	bl	406c90 <fflush@plt>
  42bb8c:	ldr	x0, [sp, #40]
  42bb90:	ldrb	w0, [x0, #137]
  42bb94:	and	w0, w0, #0x4
  42bb98:	and	w0, w0, #0xff
  42bb9c:	cmp	w0, #0x0
  42bba0:	b.eq	42bcb8 <show_goal_error@@Base+0x708>  // b.none
  42bba4:	ldr	x0, [sp, #40]
  42bba8:	ldrb	w0, [x0, #136]
  42bbac:	ubfx	x0, x0, #0, #2
  42bbb0:	and	w0, w0, #0xff
  42bbb4:	cmp	w0, #0x1
  42bbb8:	b.ls	42bc5c <show_goal_error@@Base+0x6ac>  // b.plast
  42bbbc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bbc0:	add	x0, x0, #0x6dc
  42bbc4:	ldr	w0, [x0]
  42bbc8:	and	w0, w0, #0x2
  42bbcc:	cmp	w0, #0x0
  42bbd0:	b.eq	42bc10 <show_goal_error@@Base+0x660>  // b.none
  42bbd4:	ldr	w0, [sp, #36]
  42bbd8:	bl	4223c8 <print_spaces@@Base>
  42bbdc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bbe0:	add	x0, x0, #0x558
  42bbe4:	bl	406e40 <gettext@plt>
  42bbe8:	mov	x2, x0
  42bbec:	ldr	x0, [sp, #40]
  42bbf0:	ldr	x0, [x0]
  42bbf4:	mov	x1, x0
  42bbf8:	mov	x0, x2
  42bbfc:	bl	406dc0 <printf@plt>
  42bc00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bc04:	add	x0, x0, #0x400
  42bc08:	ldr	x0, [x0]
  42bc0c:	bl	406c90 <fflush@plt>
  42bc10:	ldr	x0, [sp, #40]
  42bc14:	ldrb	w0, [x0, #138]
  42bc18:	and	w0, w0, #0x8
  42bc1c:	and	w0, w0, #0xff
  42bc20:	cmp	w0, #0x0
  42bc24:	b.eq	42bc48 <show_goal_error@@Base+0x698>  // b.none
  42bc28:	ldr	x0, [sp, #40]
  42bc2c:	ldrb	w0, [x0, #138]
  42bc30:	and	w0, w0, #0x1
  42bc34:	and	w0, w0, #0xff
  42bc38:	cmp	w0, #0x0
  42bc3c:	b.ne	42bc48 <show_goal_error@@Base+0x698>  // b.any
  42bc40:	ldr	x0, [sp, #40]
  42bc44:	bl	42b8e8 <show_goal_error@@Base+0x338>
  42bc48:	ldr	x0, [sp, #40]
  42bc4c:	ldrb	w0, [x0, #136]
  42bc50:	ubfx	x0, x0, #0, #2
  42bc54:	and	w0, w0, #0xff
  42bc58:	b	42d414 <show_goal_error@@Base+0x1e64>
  42bc5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bc60:	add	x0, x0, #0x6dc
  42bc64:	ldr	w0, [x0]
  42bc68:	and	w0, w0, #0x2
  42bc6c:	cmp	w0, #0x0
  42bc70:	b.eq	42bcb0 <show_goal_error@@Base+0x700>  // b.none
  42bc74:	ldr	w0, [sp, #36]
  42bc78:	bl	4223c8 <print_spaces@@Base>
  42bc7c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bc80:	add	x0, x0, #0x588
  42bc84:	bl	406e40 <gettext@plt>
  42bc88:	mov	x2, x0
  42bc8c:	ldr	x0, [sp, #40]
  42bc90:	ldr	x0, [x0]
  42bc94:	mov	x1, x0
  42bc98:	mov	x0, x2
  42bc9c:	bl	406dc0 <printf@plt>
  42bca0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bca4:	add	x0, x0, #0x400
  42bca8:	ldr	x0, [x0]
  42bcac:	bl	406c90 <fflush@plt>
  42bcb0:	mov	w0, #0x0                   	// #0
  42bcb4:	b	42d414 <show_goal_error@@Base+0x1e64>
  42bcb8:	ldr	x0, [sp, #40]
  42bcbc:	ldrb	w0, [x0, #136]
  42bcc0:	ubfx	x0, x0, #2, #2
  42bcc4:	and	w0, w0, #0xff
  42bcc8:	cmp	w0, #0x3
  42bccc:	b.eq	42bd50 <show_goal_error@@Base+0x7a0>  // b.none
  42bcd0:	cmp	w0, #0x3
  42bcd4:	b.gt	42bdb8 <show_goal_error@@Base+0x808>
  42bcd8:	cmp	w0, #0x1
  42bcdc:	b.gt	42bcec <show_goal_error@@Base+0x73c>
  42bce0:	cmp	w0, #0x0
  42bce4:	b.ge	42bdbc <show_goal_error@@Base+0x80c>  // b.tcont
  42bce8:	b	42bdb8 <show_goal_error@@Base+0x808>
  42bcec:	cmp	w0, #0x2
  42bcf0:	b.ne	42bdb8 <show_goal_error@@Base+0x808>  // b.any
  42bcf4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bcf8:	add	x0, x0, #0x6dc
  42bcfc:	ldr	w0, [x0]
  42bd00:	and	w0, w0, #0x2
  42bd04:	cmp	w0, #0x0
  42bd08:	b.eq	42bd48 <show_goal_error@@Base+0x798>  // b.none
  42bd0c:	ldr	w0, [sp, #36]
  42bd10:	bl	4223c8 <print_spaces@@Base>
  42bd14:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bd18:	add	x0, x0, #0x5b0
  42bd1c:	bl	406e40 <gettext@plt>
  42bd20:	mov	x2, x0
  42bd24:	ldr	x0, [sp, #40]
  42bd28:	ldr	x0, [x0]
  42bd2c:	mov	x1, x0
  42bd30:	mov	x0, x2
  42bd34:	bl	406dc0 <printf@plt>
  42bd38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bd3c:	add	x0, x0, #0x400
  42bd40:	ldr	x0, [x0]
  42bd44:	bl	406c90 <fflush@plt>
  42bd48:	mov	w0, #0x0                   	// #0
  42bd4c:	b	42d414 <show_goal_error@@Base+0x1e64>
  42bd50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bd54:	add	x0, x0, #0x6dc
  42bd58:	ldr	w0, [x0]
  42bd5c:	and	w0, w0, #0x2
  42bd60:	cmp	w0, #0x0
  42bd64:	b.eq	42bda4 <show_goal_error@@Base+0x7f4>  // b.none
  42bd68:	ldr	w0, [sp, #36]
  42bd6c:	bl	4223c8 <print_spaces@@Base>
  42bd70:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bd74:	add	x0, x0, #0x5d0
  42bd78:	bl	406e40 <gettext@plt>
  42bd7c:	mov	x2, x0
  42bd80:	ldr	x0, [sp, #40]
  42bd84:	ldr	x0, [x0]
  42bd88:	mov	x1, x0
  42bd8c:	mov	x0, x2
  42bd90:	bl	406dc0 <printf@plt>
  42bd94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bd98:	add	x0, x0, #0x400
  42bd9c:	ldr	x0, [x0]
  42bda0:	bl	406c90 <fflush@plt>
  42bda4:	ldr	x0, [sp, #40]
  42bda8:	ldrb	w0, [x0, #136]
  42bdac:	ubfx	x0, x0, #0, #2
  42bdb0:	and	w0, w0, #0xff
  42bdb4:	b	42d414 <show_goal_error@@Base+0x1e64>
  42bdb8:	bl	406b30 <abort@plt>
  42bdbc:	nop
  42bdc0:	ldr	x0, [sp, #40]
  42bdc4:	ldrb	w0, [x0, #138]
  42bdc8:	ubfx	x0, x0, #0, #1
  42bdcc:	and	w2, w0, #0xff
  42bdd0:	ldr	x1, [sp, #40]
  42bdd4:	ldrb	w0, [x1, #138]
  42bdd8:	bfi	w0, w2, #3, #1
  42bddc:	strb	w0, [x1, #138]
  42bde0:	ldr	w0, [sp, #36]
  42bde4:	add	w0, w0, #0x1
  42bde8:	str	w0, [sp, #36]
  42bdec:	ldr	x0, [sp, #40]
  42bdf0:	ldr	x0, [x0, #104]
  42bdf4:	cmp	x0, #0x0
  42bdf8:	b.eq	42be08 <show_goal_error@@Base+0x858>  // b.none
  42bdfc:	ldr	x0, [sp, #40]
  42be00:	ldr	x0, [x0, #104]
  42be04:	b	42be0c <show_goal_error@@Base+0x85c>
  42be08:	ldr	x0, [sp, #40]
  42be0c:	ldrb	w1, [x0, #137]
  42be10:	orr	w1, w1, #0x2
  42be14:	strb	w1, [x0, #137]
  42be18:	ldr	x0, [sp, #40]
  42be1c:	str	x0, [sp, #152]
  42be20:	ldr	x0, [sp, #40]
  42be24:	ldr	x0, [x0, #112]
  42be28:	cmp	x0, #0x0
  42be2c:	b.ne	42be40 <show_goal_error@@Base+0x890>  // b.any
  42be30:	mov	w1, #0x1                   	// #1
  42be34:	ldr	x0, [sp, #40]
  42be38:	bl	42e3cc <f_mtime@@Base>
  42be3c:	b	42be48 <show_goal_error@@Base+0x898>
  42be40:	ldr	x0, [sp, #40]
  42be44:	ldr	x0, [x0, #112]
  42be48:	str	x0, [sp, #240]
  42be4c:	b	42be5c <show_goal_error@@Base+0x8ac>
  42be50:	ldr	x0, [sp, #40]
  42be54:	ldr	x0, [x0, #72]
  42be58:	str	x0, [sp, #40]
  42be5c:	ldr	x0, [sp, #40]
  42be60:	ldr	x0, [x0, #72]
  42be64:	cmp	x0, #0x0
  42be68:	b.ne	42be50 <show_goal_error@@Base+0x8a0>  // b.any
  42be6c:	ldr	x0, [sp, #240]
  42be70:	cmp	x0, #0x1
  42be74:	cset	w0, eq  // eq = none
  42be78:	and	w0, w0, #0xff
  42be7c:	str	w0, [sp, #148]
  42be80:	ldr	w0, [sp, #148]
  42be84:	cmp	w0, #0x0
  42be88:	b.eq	42bee4 <show_goal_error@@Base+0x934>  // b.none
  42be8c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42be90:	add	x0, x0, #0x6dc
  42be94:	ldr	w0, [x0]
  42be98:	and	w0, w0, #0x1
  42be9c:	cmp	w0, #0x0
  42bea0:	b.eq	42bf94 <show_goal_error@@Base+0x9e4>  // b.none
  42bea4:	ldr	w0, [sp, #36]
  42bea8:	bl	4223c8 <print_spaces@@Base>
  42beac:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42beb0:	add	x0, x0, #0x5f0
  42beb4:	bl	406e40 <gettext@plt>
  42beb8:	mov	x2, x0
  42bebc:	ldr	x0, [sp, #40]
  42bec0:	ldr	x0, [x0]
  42bec4:	mov	x1, x0
  42bec8:	mov	x0, x2
  42becc:	bl	406dc0 <printf@plt>
  42bed0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bed4:	add	x0, x0, #0x400
  42bed8:	ldr	x0, [x0]
  42bedc:	bl	406c90 <fflush@plt>
  42bee0:	b	42bf94 <show_goal_error@@Base+0x9e4>
  42bee4:	ldr	x0, [sp, #240]
  42bee8:	cmp	x0, #0x2
  42beec:	b.ls	42bf94 <show_goal_error@@Base+0x9e4>  // b.plast
  42bef0:	ldr	x1, [sp, #240]
  42bef4:	mov	x0, #0xffffffffffffca02    	// #-13822
  42bef8:	movk	x0, #0xfb9a, lsl #16
  42befc:	cmp	x1, x0
  42bf00:	b.hi	42bf94 <show_goal_error@@Base+0x9e4>  // b.pmore
  42bf04:	ldr	x0, [sp, #40]
  42bf08:	ldrb	w0, [x0, #136]
  42bf0c:	and	w0, w0, #0xffffff80
  42bf10:	and	w0, w0, #0xff
  42bf14:	cmp	w0, #0x0
  42bf18:	b.eq	42bf94 <show_goal_error@@Base+0x9e4>  // b.none
  42bf1c:	ldr	x0, [sp, #240]
  42bf20:	sub	w0, w0, #0x3
  42bf24:	and	w0, w0, #0x3fffffff
  42bf28:	str	w0, [sp, #144]
  42bf2c:	ldr	w0, [sp, #144]
  42bf30:	cmp	w0, #0x0
  42bf34:	b.eq	42bf74 <show_goal_error@@Base+0x9c4>  // b.none
  42bf38:	ldr	x0, [sp, #40]
  42bf3c:	ldr	x0, [x0]
  42bf40:	bl	4066f0 <strlen@plt>
  42bf44:	mov	x19, x0
  42bf48:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42bf4c:	add	x0, x0, #0x610
  42bf50:	bl	406e40 <gettext@plt>
  42bf54:	mov	x1, x0
  42bf58:	ldr	x0, [sp, #40]
  42bf5c:	ldr	x0, [x0]
  42bf60:	mov	x3, x0
  42bf64:	mov	x2, x1
  42bf68:	mov	x1, x19
  42bf6c:	mov	x0, #0x0                   	// #0
  42bf70:	bl	423e74 <error@@Base>
  42bf74:	mov	w1, #0xc9ff                	// #51711
  42bf78:	movk	w1, #0x3b9a, lsl #16
  42bf7c:	ldr	w0, [sp, #144]
  42bf80:	sub	w0, w1, w0
  42bf84:	sxtw	x0, w0
  42bf88:	ldr	x1, [sp, #240]
  42bf8c:	add	x0, x1, x0
  42bf90:	str	x0, [sp, #240]
  42bf94:	ldr	w0, [sp, #148]
  42bf98:	str	w0, [sp, #236]
  42bf9c:	ldr	x0, [sp, #40]
  42bfa0:	ldrb	w0, [x0, #137]
  42bfa4:	and	w0, w0, #0x20
  42bfa8:	and	w0, w0, #0xff
  42bfac:	cmp	w0, #0x0
  42bfb0:	b.ne	42c0ac <show_goal_error@@Base+0xafc>  // b.any
  42bfb4:	ldr	x0, [sp, #40]
  42bfb8:	ldr	x0, [x0, #32]
  42bfbc:	cmp	x0, #0x0
  42bfc0:	b.ne	42c0ac <show_goal_error@@Base+0xafc>  // b.any
  42bfc4:	ldr	x0, [sp, #40]
  42bfc8:	ldrb	w0, [x0, #137]
  42bfcc:	and	w0, w0, #0x1
  42bfd0:	and	w0, w0, #0xff
  42bfd4:	cmp	w0, #0x0
  42bfd8:	b.ne	42c0ac <show_goal_error@@Base+0xafc>  // b.any
  42bfdc:	ldr	w1, [sp, #36]
  42bfe0:	ldr	x0, [sp, #40]
  42bfe4:	bl	4156d4 <try_implicit_rule@@Base>
  42bfe8:	cmp	w0, #0x0
  42bfec:	b.eq	42c048 <show_goal_error@@Base+0xa98>  // b.none
  42bff0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42bff4:	add	x0, x0, #0x6dc
  42bff8:	ldr	w0, [x0]
  42bffc:	and	w0, w0, #0x8
  42c000:	cmp	w0, #0x0
  42c004:	b.eq	42c09c <show_goal_error@@Base+0xaec>  // b.none
  42c008:	ldr	w0, [sp, #36]
  42c00c:	bl	4223c8 <print_spaces@@Base>
  42c010:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c014:	add	x0, x0, #0x660
  42c018:	bl	406e40 <gettext@plt>
  42c01c:	mov	x2, x0
  42c020:	ldr	x0, [sp, #40]
  42c024:	ldr	x0, [x0]
  42c028:	mov	x1, x0
  42c02c:	mov	x0, x2
  42c030:	bl	406dc0 <printf@plt>
  42c034:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c038:	add	x0, x0, #0x400
  42c03c:	ldr	x0, [x0]
  42c040:	bl	406c90 <fflush@plt>
  42c044:	b	42c09c <show_goal_error@@Base+0xaec>
  42c048:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c04c:	add	x0, x0, #0x6dc
  42c050:	ldr	w0, [x0]
  42c054:	and	w0, w0, #0x8
  42c058:	cmp	w0, #0x0
  42c05c:	b.eq	42c09c <show_goal_error@@Base+0xaec>  // b.none
  42c060:	ldr	w0, [sp, #36]
  42c064:	bl	4223c8 <print_spaces@@Base>
  42c068:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c06c:	add	x0, x0, #0x688
  42c070:	bl	406e40 <gettext@plt>
  42c074:	mov	x2, x0
  42c078:	ldr	x0, [sp, #40]
  42c07c:	ldr	x0, [x0]
  42c080:	mov	x1, x0
  42c084:	mov	x0, x2
  42c088:	bl	406dc0 <printf@plt>
  42c08c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c090:	add	x0, x0, #0x400
  42c094:	ldr	x0, [x0]
  42c098:	bl	406c90 <fflush@plt>
  42c09c:	ldr	x0, [sp, #40]
  42c0a0:	ldrb	w1, [x0, #137]
  42c0a4:	orr	w1, w1, #0x1
  42c0a8:	strb	w1, [x0, #137]
  42c0ac:	ldr	x0, [sp, #40]
  42c0b0:	ldr	x0, [x0, #32]
  42c0b4:	cmp	x0, #0x0
  42c0b8:	b.ne	42c16c <show_goal_error@@Base+0xbbc>  // b.any
  42c0bc:	ldr	x0, [sp, #40]
  42c0c0:	ldrb	w0, [x0, #137]
  42c0c4:	and	w0, w0, #0x8
  42c0c8:	and	w0, w0, #0xff
  42c0cc:	cmp	w0, #0x0
  42c0d0:	b.ne	42c16c <show_goal_error@@Base+0xbbc>  // b.any
  42c0d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42c0d8:	add	x0, x0, #0xa78
  42c0dc:	ldr	x0, [x0]
  42c0e0:	cmp	x0, #0x0
  42c0e4:	b.eq	42c16c <show_goal_error@@Base+0xbbc>  // b.none
  42c0e8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42c0ec:	add	x0, x0, #0xa78
  42c0f0:	ldr	x0, [x0]
  42c0f4:	ldr	x0, [x0, #32]
  42c0f8:	cmp	x0, #0x0
  42c0fc:	b.eq	42c16c <show_goal_error@@Base+0xbbc>  // b.none
  42c100:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c104:	add	x0, x0, #0x6dc
  42c108:	ldr	w0, [x0]
  42c10c:	and	w0, w0, #0x8
  42c110:	cmp	w0, #0x0
  42c114:	b.eq	42c154 <show_goal_error@@Base+0xba4>  // b.none
  42c118:	ldr	w0, [sp, #36]
  42c11c:	bl	4223c8 <print_spaces@@Base>
  42c120:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c124:	add	x0, x0, #0x6b0
  42c128:	bl	406e40 <gettext@plt>
  42c12c:	mov	x2, x0
  42c130:	ldr	x0, [sp, #40]
  42c134:	ldr	x0, [x0]
  42c138:	mov	x1, x0
  42c13c:	mov	x0, x2
  42c140:	bl	406dc0 <printf@plt>
  42c144:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c148:	add	x0, x0, #0x400
  42c14c:	ldr	x0, [x0]
  42c150:	bl	406c90 <fflush@plt>
  42c154:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42c158:	add	x0, x0, #0xa78
  42c15c:	ldr	x0, [x0]
  42c160:	ldr	x1, [x0, #32]
  42c164:	ldr	x0, [sp, #40]
  42c168:	str	x1, [x0, #32]
  42c16c:	ldr	x0, [sp, #40]
  42c170:	str	x0, [sp, #80]
  42c174:	ldr	x0, [sp, #40]
  42c178:	ldr	x0, [x0, #48]
  42c17c:	str	x0, [sp, #64]
  42c180:	add	x0, sp, #0x40
  42c184:	str	x0, [sp, #216]
  42c188:	b	42c588 <show_goal_error@@Base+0xfd8>
  42c18c:	str	xzr, [sp, #200]
  42c190:	ldr	x0, [sp, #216]
  42c194:	ldr	x0, [x0, #16]
  42c198:	ldr	x0, [x0, #24]
  42c19c:	str	x0, [sp, #224]
  42c1a0:	ldr	x0, [sp, #216]
  42c1a4:	ldr	x0, [x0]
  42c1a8:	str	x0, [sp, #216]
  42c1ac:	b	42c57c <show_goal_error@@Base+0xfcc>
  42c1b0:	str	wzr, [sp, #196]
  42c1b4:	b	42c1cc <show_goal_error@@Base+0xc1c>
  42c1b8:	ldr	x0, [sp, #224]
  42c1bc:	ldr	x0, [x0, #16]
  42c1c0:	ldr	x1, [x0, #72]
  42c1c4:	ldr	x0, [sp, #224]
  42c1c8:	str	x1, [x0, #16]
  42c1cc:	ldr	x0, [sp, #224]
  42c1d0:	ldr	x0, [x0, #16]
  42c1d4:	ldr	x0, [x0, #72]
  42c1d8:	cmp	x0, #0x0
  42c1dc:	b.ne	42c1b8 <show_goal_error@@Base+0xc08>  // b.any
  42c1e0:	ldr	x0, [sp, #224]
  42c1e4:	ldr	x0, [x0, #16]
  42c1e8:	ldr	x0, [x0, #112]
  42c1ec:	cmp	x0, #0x0
  42c1f0:	b.ne	42c208 <show_goal_error@@Base+0xc58>  // b.any
  42c1f4:	ldr	x0, [sp, #224]
  42c1f8:	ldr	x0, [x0, #16]
  42c1fc:	mov	w1, #0x1                   	// #1
  42c200:	bl	42e3cc <f_mtime@@Base>
  42c204:	b	42c214 <show_goal_error@@Base+0xc64>
  42c208:	ldr	x0, [sp, #224]
  42c20c:	ldr	x0, [x0, #16]
  42c210:	ldr	x0, [x0, #112]
  42c214:	str	x0, [sp, #112]
  42c218:	b	42c230 <show_goal_error@@Base+0xc80>
  42c21c:	ldr	x0, [sp, #224]
  42c220:	ldr	x0, [x0, #16]
  42c224:	ldr	x1, [x0, #72]
  42c228:	ldr	x0, [sp, #224]
  42c22c:	str	x1, [x0, #16]
  42c230:	ldr	x0, [sp, #224]
  42c234:	ldr	x0, [x0, #16]
  42c238:	ldr	x0, [x0, #72]
  42c23c:	cmp	x0, #0x0
  42c240:	b.ne	42c21c <show_goal_error@@Base+0xc6c>  // b.any
  42c244:	ldr	x0, [sp, #224]
  42c248:	ldr	x0, [x0, #16]
  42c24c:	ldr	x0, [x0, #104]
  42c250:	cmp	x0, #0x0
  42c254:	b.eq	42c268 <show_goal_error@@Base+0xcb8>  // b.none
  42c258:	ldr	x0, [sp, #224]
  42c25c:	ldr	x0, [x0, #16]
  42c260:	ldr	x0, [x0, #104]
  42c264:	b	42c270 <show_goal_error@@Base+0xcc0>
  42c268:	ldr	x0, [sp, #224]
  42c26c:	ldr	x0, [x0, #16]
  42c270:	ldrb	w0, [x0, #137]
  42c274:	and	w0, w0, #0x2
  42c278:	and	w0, w0, #0xff
  42c27c:	cmp	w0, #0x0
  42c280:	b.eq	42c320 <show_goal_error@@Base+0xd70>  // b.none
  42c284:	ldr	x0, [sp, #40]
  42c288:	ldr	x0, [x0]
  42c28c:	bl	4066f0 <strlen@plt>
  42c290:	mov	x19, x0
  42c294:	ldr	x0, [sp, #224]
  42c298:	ldr	x0, [x0, #16]
  42c29c:	ldr	x0, [x0]
  42c2a0:	bl	4066f0 <strlen@plt>
  42c2a4:	add	x19, x19, x0
  42c2a8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c2ac:	add	x0, x0, #0x6d0
  42c2b0:	bl	406e40 <gettext@plt>
  42c2b4:	mov	x2, x0
  42c2b8:	ldr	x0, [sp, #40]
  42c2bc:	ldr	x1, [x0]
  42c2c0:	ldr	x0, [sp, #224]
  42c2c4:	ldr	x0, [x0, #16]
  42c2c8:	ldr	x0, [x0]
  42c2cc:	mov	x4, x0
  42c2d0:	mov	x3, x1
  42c2d4:	mov	x1, x19
  42c2d8:	mov	x0, #0x0                   	// #0
  42c2dc:	bl	423e74 <error@@Base>
  42c2e0:	ldr	x0, [sp, #200]
  42c2e4:	cmp	x0, #0x0
  42c2e8:	b.ne	42c300 <show_goal_error@@Base+0xd50>  // b.any
  42c2ec:	ldr	x0, [sp, #224]
  42c2f0:	ldr	x1, [x0]
  42c2f4:	ldr	x0, [sp, #40]
  42c2f8:	str	x1, [x0, #24]
  42c2fc:	b	42c310 <show_goal_error@@Base+0xd60>
  42c300:	ldr	x0, [sp, #224]
  42c304:	ldr	x1, [x0]
  42c308:	ldr	x0, [sp, #200]
  42c30c:	str	x1, [x0]
  42c310:	ldr	x0, [sp, #224]
  42c314:	ldr	x0, [x0]
  42c318:	str	x0, [sp, #224]
  42c31c:	b	42c57c <show_goal_error@@Base+0xfcc>
  42c320:	ldr	x0, [sp, #224]
  42c324:	ldr	x0, [x0, #16]
  42c328:	ldr	x1, [sp, #40]
  42c32c:	str	x1, [x0, #96]
  42c330:	ldr	w0, [sp, #236]
  42c334:	str	w0, [sp, #60]
  42c338:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c33c:	add	x0, x0, #0x71c
  42c340:	ldr	w0, [x0]
  42c344:	cmp	w0, #0x0
  42c348:	b.eq	42c388 <show_goal_error@@Base+0xdd8>  // b.none
  42c34c:	ldr	x0, [sp, #224]
  42c350:	ldr	x0, [x0, #16]
  42c354:	ldrb	w0, [x0, #138]
  42c358:	ubfx	x0, x0, #0, #1
  42c35c:	and	w0, w0, #0xff
  42c360:	str	w0, [sp, #196]
  42c364:	ldr	x0, [sp, #224]
  42c368:	ldr	x1, [x0, #16]
  42c36c:	ldr	x0, [sp, #40]
  42c370:	ldrb	w0, [x0, #138]
  42c374:	ubfx	x0, x0, #0, #1
  42c378:	and	w2, w0, #0xff
  42c37c:	ldrb	w0, [x1, #138]
  42c380:	bfxil	w0, w2, #0, #1
  42c384:	strb	w0, [x1, #138]
  42c388:	ldr	x0, [sp, #224]
  42c38c:	ldr	x0, [x0, #16]
  42c390:	add	x1, sp, #0x3c
  42c394:	mov	x3, x1
  42c398:	ldr	x2, [sp, #240]
  42c39c:	ldr	w1, [sp, #36]
  42c3a0:	bl	42d8e0 <notice_finished_file@@Base+0x4c0>
  42c3a4:	str	w0, [sp, #108]
  42c3a8:	ldr	w1, [sp, #108]
  42c3ac:	ldr	w0, [sp, #252]
  42c3b0:	cmp	w1, w0
  42c3b4:	b.ls	42c3c0 <show_goal_error@@Base+0xe10>  // b.plast
  42c3b8:	ldr	w0, [sp, #108]
  42c3bc:	str	w0, [sp, #252]
  42c3c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c3c4:	add	x0, x0, #0x71c
  42c3c8:	ldr	w0, [x0]
  42c3cc:	cmp	w0, #0x0
  42c3d0:	b.eq	42c3f4 <show_goal_error@@Base+0xe44>  // b.none
  42c3d4:	ldr	x0, [sp, #224]
  42c3d8:	ldr	x1, [x0, #16]
  42c3dc:	ldr	w0, [sp, #196]
  42c3e0:	and	w0, w0, #0x1
  42c3e4:	and	w2, w0, #0xff
  42c3e8:	ldrb	w0, [x1, #138]
  42c3ec:	bfxil	w0, w2, #0, #1
  42c3f0:	strb	w0, [x1, #138]
  42c3f4:	ldr	x0, [sp, #224]
  42c3f8:	ldrb	w0, [x0, #33]
  42c3fc:	and	w0, w0, #0x2
  42c400:	and	w0, w0, #0xff
  42c404:	cmp	w0, #0x0
  42c408:	b.ne	42c42c <show_goal_error@@Base+0xe7c>  // b.any
  42c40c:	ldr	w0, [sp, #60]
  42c410:	str	w0, [sp, #236]
  42c414:	b	42c42c <show_goal_error@@Base+0xe7c>
  42c418:	ldr	x0, [sp, #224]
  42c41c:	ldr	x0, [x0, #16]
  42c420:	ldr	x1, [x0, #72]
  42c424:	ldr	x0, [sp, #224]
  42c428:	str	x1, [x0, #16]
  42c42c:	ldr	x0, [sp, #224]
  42c430:	ldr	x0, [x0, #16]
  42c434:	ldr	x0, [x0, #72]
  42c438:	cmp	x0, #0x0
  42c43c:	b.ne	42c418 <show_goal_error@@Base+0xe68>  // b.any
  42c440:	ldr	x0, [sp, #224]
  42c444:	ldr	x0, [x0, #16]
  42c448:	str	x0, [sp, #184]
  42c44c:	ldr	x0, [sp, #184]
  42c450:	ldr	x0, [x0, #104]
  42c454:	cmp	x0, #0x0
  42c458:	b.eq	42c468 <show_goal_error@@Base+0xeb8>  // b.none
  42c45c:	ldr	x0, [sp, #184]
  42c460:	ldr	x0, [x0, #104]
  42c464:	str	x0, [sp, #184]
  42c468:	ldr	x0, [sp, #184]
  42c46c:	ldrb	w0, [x0, #136]
  42c470:	and	w0, w0, #0xc
  42c474:	and	w0, w0, #0xff
  42c478:	cmp	w0, #0x8
  42c47c:	b.eq	42c498 <show_goal_error@@Base+0xee8>  // b.none
  42c480:	ldr	x0, [sp, #184]
  42c484:	ldrb	w0, [x0, #136]
  42c488:	and	w0, w0, #0xc
  42c48c:	and	w0, w0, #0xff
  42c490:	cmp	w0, #0x4
  42c494:	b.ne	42c4a0 <show_goal_error@@Base+0xef0>  // b.any
  42c498:	mov	w0, #0x1                   	// #1
  42c49c:	b	42c4a4 <show_goal_error@@Base+0xef4>
  42c4a0:	mov	w0, #0x0                   	// #0
  42c4a4:	ldr	w1, [sp, #212]
  42c4a8:	orr	w0, w1, w0
  42c4ac:	str	w0, [sp, #212]
  42c4b0:	ldr	x0, [sp, #184]
  42c4b4:	ldr	x0, [x0, #56]
  42c4b8:	str	x0, [sp, #184]
  42c4bc:	ldr	x0, [sp, #184]
  42c4c0:	cmp	x0, #0x0
  42c4c4:	b.ne	42c468 <show_goal_error@@Base+0xeb8>  // b.any
  42c4c8:	ldr	w0, [sp, #252]
  42c4cc:	cmp	w0, #0x0
  42c4d0:	b.eq	42c4ec <show_goal_error@@Base+0xf3c>  // b.none
  42c4d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42c4d8:	add	x0, x0, #0xa54
  42c4dc:	ldr	w0, [x0]
  42c4e0:	cmp	w0, #0x0
  42c4e4:	b.ne	42c4ec <show_goal_error@@Base+0xf3c>  // b.any
  42c4e8:	b	42c588 <show_goal_error@@Base+0xfd8>
  42c4ec:	ldr	w0, [sp, #212]
  42c4f0:	cmp	w0, #0x0
  42c4f4:	b.ne	42c568 <show_goal_error@@Base+0xfb8>  // b.any
  42c4f8:	ldr	x0, [sp, #224]
  42c4fc:	ldr	x0, [x0, #16]
  42c500:	ldr	x0, [x0, #112]
  42c504:	cmp	x0, #0x0
  42c508:	b.ne	42c520 <show_goal_error@@Base+0xf70>  // b.any
  42c50c:	ldr	x0, [sp, #224]
  42c510:	ldr	x0, [x0, #16]
  42c514:	mov	w1, #0x1                   	// #1
  42c518:	bl	42e3cc <f_mtime@@Base>
  42c51c:	b	42c52c <show_goal_error@@Base+0xf7c>
  42c520:	ldr	x0, [sp, #224]
  42c524:	ldr	x0, [x0, #16]
  42c528:	ldr	x0, [x0, #112]
  42c52c:	ldr	x1, [sp, #112]
  42c530:	cmp	x0, x1
  42c534:	b.ne	42c544 <show_goal_error@@Base+0xf94>  // b.any
  42c538:	ldr	x0, [sp, #112]
  42c53c:	cmp	x0, #0x1
  42c540:	b.ne	42c54c <show_goal_error@@Base+0xf9c>  // b.any
  42c544:	mov	w0, #0x1                   	// #1
  42c548:	b	42c550 <show_goal_error@@Base+0xfa0>
  42c54c:	mov	w0, #0x0                   	// #0
  42c550:	and	w0, w0, #0x1
  42c554:	and	w2, w0, #0xff
  42c558:	ldr	x1, [sp, #224]
  42c55c:	ldrb	w0, [x1, #33]
  42c560:	bfxil	w0, w2, #0, #1
  42c564:	strb	w0, [x1, #33]
  42c568:	ldr	x0, [sp, #224]
  42c56c:	str	x0, [sp, #200]
  42c570:	ldr	x0, [sp, #224]
  42c574:	ldr	x0, [x0]
  42c578:	str	x0, [sp, #224]
  42c57c:	ldr	x0, [sp, #224]
  42c580:	cmp	x0, #0x0
  42c584:	b.ne	42c1b0 <show_goal_error@@Base+0xc00>  // b.any
  42c588:	ldr	x0, [sp, #216]
  42c58c:	cmp	x0, #0x0
  42c590:	b.ne	42c18c <show_goal_error@@Base+0xbdc>  // b.any
  42c594:	ldr	w0, [sp, #236]
  42c598:	cmp	w0, #0x0
  42c59c:	b.ne	42c5b4 <show_goal_error@@Base+0x1004>  // b.any
  42c5a0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c5a4:	add	x0, x0, #0x718
  42c5a8:	ldr	w0, [x0]
  42c5ac:	cmp	w0, #0x0
  42c5b0:	b.eq	42c8a0 <show_goal_error@@Base+0x12f0>  // b.none
  42c5b4:	ldr	x0, [sp, #40]
  42c5b8:	ldr	x0, [x0, #24]
  42c5bc:	str	x0, [sp, #224]
  42c5c0:	b	42c88c <show_goal_error@@Base+0x12dc>
  42c5c4:	ldr	x0, [sp, #224]
  42c5c8:	ldr	x0, [x0, #16]
  42c5cc:	ldrb	w0, [x0, #137]
  42c5d0:	and	w0, w0, #0x40
  42c5d4:	and	w0, w0, #0xff
  42c5d8:	cmp	w0, #0x0
  42c5dc:	b.eq	42c880 <show_goal_error@@Base+0x12d0>  // b.none
  42c5e0:	str	wzr, [sp, #180]
  42c5e4:	ldr	x0, [sp, #224]
  42c5e8:	ldr	x0, [x0, #16]
  42c5ec:	ldr	x0, [x0, #112]
  42c5f0:	cmp	x0, #0x0
  42c5f4:	b.ne	42c60c <show_goal_error@@Base+0x105c>  // b.any
  42c5f8:	ldr	x0, [sp, #224]
  42c5fc:	ldr	x0, [x0, #16]
  42c600:	mov	w1, #0x1                   	// #1
  42c604:	bl	42e3cc <f_mtime@@Base>
  42c608:	b	42c618 <show_goal_error@@Base+0x1068>
  42c60c:	ldr	x0, [sp, #224]
  42c610:	ldr	x0, [x0, #16]
  42c614:	ldr	x0, [x0, #112]
  42c618:	str	x0, [sp, #136]
  42c61c:	b	42c634 <show_goal_error@@Base+0x1084>
  42c620:	ldr	x0, [sp, #224]
  42c624:	ldr	x0, [x0, #16]
  42c628:	ldr	x1, [x0, #72]
  42c62c:	ldr	x0, [sp, #224]
  42c630:	str	x1, [x0, #16]
  42c634:	ldr	x0, [sp, #224]
  42c638:	ldr	x0, [x0, #16]
  42c63c:	ldr	x0, [x0, #72]
  42c640:	cmp	x0, #0x0
  42c644:	b.ne	42c620 <show_goal_error@@Base+0x1070>  // b.any
  42c648:	ldr	x0, [sp, #224]
  42c64c:	ldr	x0, [x0, #16]
  42c650:	ldr	x1, [sp, #40]
  42c654:	str	x1, [x0, #96]
  42c658:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c65c:	add	x0, x0, #0x71c
  42c660:	ldr	w0, [x0]
  42c664:	cmp	w0, #0x0
  42c668:	b.eq	42c6a8 <show_goal_error@@Base+0x10f8>  // b.none
  42c66c:	ldr	x0, [sp, #224]
  42c670:	ldr	x0, [x0, #16]
  42c674:	ldrb	w0, [x0, #138]
  42c678:	ubfx	x0, x0, #0, #1
  42c67c:	and	w0, w0, #0xff
  42c680:	str	w0, [sp, #180]
  42c684:	ldr	x0, [sp, #224]
  42c688:	ldr	x1, [x0, #16]
  42c68c:	ldr	x0, [sp, #40]
  42c690:	ldrb	w0, [x0, #138]
  42c694:	ubfx	x0, x0, #0, #1
  42c698:	and	w2, w0, #0xff
  42c69c:	ldrb	w0, [x1, #138]
  42c6a0:	bfxil	w0, w2, #0, #1
  42c6a4:	strb	w0, [x1, #138]
  42c6a8:	ldr	x0, [sp, #224]
  42c6ac:	ldr	x0, [x0, #16]
  42c6b0:	str	wzr, [x0, #128]
  42c6b4:	ldr	x0, [sp, #224]
  42c6b8:	ldr	x0, [x0, #16]
  42c6bc:	ldr	w1, [sp, #36]
  42c6c0:	bl	42b6c8 <show_goal_error@@Base+0x118>
  42c6c4:	str	w0, [sp, #132]
  42c6c8:	ldr	w1, [sp, #132]
  42c6cc:	ldr	w0, [sp, #252]
  42c6d0:	cmp	w1, w0
  42c6d4:	b.ls	42c6e0 <show_goal_error@@Base+0x1130>  // b.plast
  42c6d8:	ldr	w0, [sp, #132]
  42c6dc:	str	w0, [sp, #252]
  42c6e0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c6e4:	add	x0, x0, #0x71c
  42c6e8:	ldr	w0, [x0]
  42c6ec:	cmp	w0, #0x0
  42c6f0:	b.eq	42c72c <show_goal_error@@Base+0x117c>  // b.none
  42c6f4:	ldr	x0, [sp, #224]
  42c6f8:	ldr	x1, [x0, #16]
  42c6fc:	ldr	w0, [sp, #180]
  42c700:	and	w0, w0, #0x1
  42c704:	and	w2, w0, #0xff
  42c708:	ldrb	w0, [x1, #138]
  42c70c:	bfxil	w0, w2, #0, #1
  42c710:	strb	w0, [x1, #138]
  42c714:	b	42c72c <show_goal_error@@Base+0x117c>
  42c718:	ldr	x0, [sp, #224]
  42c71c:	ldr	x0, [x0, #16]
  42c720:	ldr	x1, [x0, #72]
  42c724:	ldr	x0, [sp, #224]
  42c728:	str	x1, [x0, #16]
  42c72c:	ldr	x0, [sp, #224]
  42c730:	ldr	x0, [x0, #16]
  42c734:	ldr	x0, [x0, #72]
  42c738:	cmp	x0, #0x0
  42c73c:	b.ne	42c718 <show_goal_error@@Base+0x1168>  // b.any
  42c740:	ldr	x0, [sp, #224]
  42c744:	ldr	x0, [x0, #16]
  42c748:	str	x0, [sp, #168]
  42c74c:	ldr	x0, [sp, #168]
  42c750:	ldr	x0, [x0, #104]
  42c754:	cmp	x0, #0x0
  42c758:	b.eq	42c768 <show_goal_error@@Base+0x11b8>  // b.none
  42c75c:	ldr	x0, [sp, #168]
  42c760:	ldr	x0, [x0, #104]
  42c764:	str	x0, [sp, #168]
  42c768:	ldr	x0, [sp, #168]
  42c76c:	ldrb	w0, [x0, #136]
  42c770:	and	w0, w0, #0xc
  42c774:	and	w0, w0, #0xff
  42c778:	cmp	w0, #0x8
  42c77c:	b.eq	42c798 <show_goal_error@@Base+0x11e8>  // b.none
  42c780:	ldr	x0, [sp, #168]
  42c784:	ldrb	w0, [x0, #136]
  42c788:	and	w0, w0, #0xc
  42c78c:	and	w0, w0, #0xff
  42c790:	cmp	w0, #0x4
  42c794:	b.ne	42c7a0 <show_goal_error@@Base+0x11f0>  // b.any
  42c798:	mov	w0, #0x1                   	// #1
  42c79c:	b	42c7a4 <show_goal_error@@Base+0x11f4>
  42c7a0:	mov	w0, #0x0                   	// #0
  42c7a4:	ldr	w1, [sp, #212]
  42c7a8:	orr	w0, w1, w0
  42c7ac:	str	w0, [sp, #212]
  42c7b0:	ldr	x0, [sp, #168]
  42c7b4:	ldr	x0, [x0, #56]
  42c7b8:	str	x0, [sp, #168]
  42c7bc:	ldr	x0, [sp, #168]
  42c7c0:	cmp	x0, #0x0
  42c7c4:	b.ne	42c768 <show_goal_error@@Base+0x11b8>  // b.any
  42c7c8:	ldr	w0, [sp, #252]
  42c7cc:	cmp	w0, #0x0
  42c7d0:	b.eq	42c7e8 <show_goal_error@@Base+0x1238>  // b.none
  42c7d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42c7d8:	add	x0, x0, #0xa54
  42c7dc:	ldr	w0, [x0]
  42c7e0:	cmp	w0, #0x0
  42c7e4:	b.eq	42c89c <show_goal_error@@Base+0x12ec>  // b.none
  42c7e8:	ldr	w0, [sp, #212]
  42c7ec:	cmp	w0, #0x0
  42c7f0:	b.ne	42c880 <show_goal_error@@Base+0x12d0>  // b.any
  42c7f4:	ldr	x0, [sp, #40]
  42c7f8:	ldrb	w0, [x0, #137]
  42c7fc:	and	w0, w0, #0x20
  42c800:	and	w0, w0, #0xff
  42c804:	cmp	w0, #0x0
  42c808:	b.eq	42c81c <show_goal_error@@Base+0x126c>  // b.none
  42c80c:	ldr	x0, [sp, #40]
  42c810:	ldr	x0, [x0, #32]
  42c814:	cmp	x0, #0x0
  42c818:	b.ne	42c85c <show_goal_error@@Base+0x12ac>  // b.any
  42c81c:	ldr	x0, [sp, #224]
  42c820:	ldr	x0, [x0, #16]
  42c824:	ldr	x0, [x0, #112]
  42c828:	cmp	x0, #0x0
  42c82c:	b.ne	42c844 <show_goal_error@@Base+0x1294>  // b.any
  42c830:	ldr	x0, [sp, #224]
  42c834:	ldr	x0, [x0, #16]
  42c838:	mov	w1, #0x1                   	// #1
  42c83c:	bl	42e3cc <f_mtime@@Base>
  42c840:	b	42c850 <show_goal_error@@Base+0x12a0>
  42c844:	ldr	x0, [sp, #224]
  42c848:	ldr	x0, [x0, #16]
  42c84c:	ldr	x0, [x0, #112]
  42c850:	ldr	x1, [sp, #136]
  42c854:	cmp	x0, x1
  42c858:	b.eq	42c864 <show_goal_error@@Base+0x12b4>  // b.none
  42c85c:	mov	w0, #0x1                   	// #1
  42c860:	b	42c868 <show_goal_error@@Base+0x12b8>
  42c864:	mov	w0, #0x0                   	// #0
  42c868:	and	w0, w0, #0x1
  42c86c:	and	w2, w0, #0xff
  42c870:	ldr	x1, [sp, #224]
  42c874:	ldrb	w0, [x1, #33]
  42c878:	bfxil	w0, w2, #0, #1
  42c87c:	strb	w0, [x1, #33]
  42c880:	ldr	x0, [sp, #224]
  42c884:	ldr	x0, [x0]
  42c888:	str	x0, [sp, #224]
  42c88c:	ldr	x0, [sp, #224]
  42c890:	cmp	x0, #0x0
  42c894:	b.ne	42c5c4 <show_goal_error@@Base+0x1014>  // b.any
  42c898:	b	42c8a0 <show_goal_error@@Base+0x12f0>
  42c89c:	nop
  42c8a0:	ldr	x0, [sp, #40]
  42c8a4:	ldr	x0, [x0, #104]
  42c8a8:	cmp	x0, #0x0
  42c8ac:	b.eq	42c8bc <show_goal_error@@Base+0x130c>  // b.none
  42c8b0:	ldr	x0, [sp, #40]
  42c8b4:	ldr	x0, [x0, #104]
  42c8b8:	b	42c8c0 <show_goal_error@@Base+0x1310>
  42c8bc:	ldr	x0, [sp, #40]
  42c8c0:	ldrb	w1, [x0, #137]
  42c8c4:	and	w1, w1, #0xfffffffd
  42c8c8:	strb	w1, [x0, #137]
  42c8cc:	ldr	x0, [sp, #152]
  42c8d0:	ldr	x0, [x0, #104]
  42c8d4:	cmp	x0, #0x0
  42c8d8:	b.eq	42c8e8 <show_goal_error@@Base+0x1338>  // b.none
  42c8dc:	ldr	x0, [sp, #152]
  42c8e0:	ldr	x0, [x0, #104]
  42c8e4:	b	42c8ec <show_goal_error@@Base+0x133c>
  42c8e8:	ldr	x0, [sp, #152]
  42c8ec:	ldrb	w1, [x0, #137]
  42c8f0:	and	w1, w1, #0xfffffffd
  42c8f4:	strb	w1, [x0, #137]
  42c8f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c8fc:	add	x0, x0, #0x6dc
  42c900:	ldr	w0, [x0]
  42c904:	and	w0, w0, #0x2
  42c908:	cmp	w0, #0x0
  42c90c:	b.eq	42c94c <show_goal_error@@Base+0x139c>  // b.none
  42c910:	ldr	w0, [sp, #36]
  42c914:	bl	4223c8 <print_spaces@@Base>
  42c918:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c91c:	add	x0, x0, #0x6f8
  42c920:	bl	406e40 <gettext@plt>
  42c924:	mov	x2, x0
  42c928:	ldr	x0, [sp, #40]
  42c92c:	ldr	x0, [x0]
  42c930:	mov	x1, x0
  42c934:	mov	x0, x2
  42c938:	bl	406dc0 <printf@plt>
  42c93c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c940:	add	x0, x0, #0x400
  42c944:	ldr	x0, [x0]
  42c948:	bl	406c90 <fflush@plt>
  42c94c:	ldr	w0, [sp, #212]
  42c950:	cmp	w0, #0x0
  42c954:	b.eq	42c9cc <show_goal_error@@Base+0x141c>  // b.none
  42c958:	mov	w1, #0x1                   	// #1
  42c95c:	ldr	x0, [sp, #40]
  42c960:	bl	40e258 <set_command_state@@Base>
  42c964:	ldr	w0, [sp, #36]
  42c968:	sub	w0, w0, #0x1
  42c96c:	str	w0, [sp, #36]
  42c970:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c974:	add	x0, x0, #0x6dc
  42c978:	ldr	w0, [x0]
  42c97c:	and	w0, w0, #0x2
  42c980:	cmp	w0, #0x0
  42c984:	b.eq	42c9c4 <show_goal_error@@Base+0x1414>  // b.none
  42c988:	ldr	w0, [sp, #36]
  42c98c:	bl	4223c8 <print_spaces@@Base>
  42c990:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42c994:	add	x0, x0, #0x728
  42c998:	bl	406e40 <gettext@plt>
  42c99c:	mov	x2, x0
  42c9a0:	ldr	x0, [sp, #40]
  42c9a4:	ldr	x0, [x0]
  42c9a8:	mov	x1, x0
  42c9ac:	mov	x0, x2
  42c9b0:	bl	406dc0 <printf@plt>
  42c9b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42c9b8:	add	x0, x0, #0x400
  42c9bc:	ldr	x0, [x0]
  42c9c0:	bl	406c90 <fflush@plt>
  42c9c4:	mov	w0, #0x0                   	// #0
  42c9c8:	b	42d414 <show_goal_error@@Base+0x1e64>
  42c9cc:	ldr	w0, [sp, #252]
  42c9d0:	cmp	w0, #0x0
  42c9d4:	b.eq	42cafc <show_goal_error@@Base+0x154c>  // b.none
  42c9d8:	ldr	w0, [sp, #252]
  42c9dc:	cmp	w0, #0x1
  42c9e0:	b.eq	42c9f4 <show_goal_error@@Base+0x1444>  // b.none
  42c9e4:	ldr	w0, [sp, #252]
  42c9e8:	and	w0, w0, #0x3
  42c9ec:	and	w2, w0, #0xff
  42c9f0:	b	42c9f8 <show_goal_error@@Base+0x1448>
  42c9f4:	mov	w2, #0x3                   	// #3
  42c9f8:	ldr	x1, [sp, #40]
  42c9fc:	ldrb	w0, [x1, #136]
  42ca00:	bfxil	w0, w2, #0, #2
  42ca04:	strb	w0, [x1, #136]
  42ca08:	ldr	x0, [sp, #40]
  42ca0c:	bl	42d420 <notice_finished_file@@Base>
  42ca10:	ldr	w0, [sp, #36]
  42ca14:	sub	w0, w0, #0x1
  42ca18:	str	w0, [sp, #36]
  42ca1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ca20:	add	x0, x0, #0x6dc
  42ca24:	ldr	w0, [x0]
  42ca28:	and	w0, w0, #0x2
  42ca2c:	cmp	w0, #0x0
  42ca30:	b.eq	42ca70 <show_goal_error@@Base+0x14c0>  // b.none
  42ca34:	ldr	w0, [sp, #36]
  42ca38:	bl	4223c8 <print_spaces@@Base>
  42ca3c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ca40:	add	x0, x0, #0x758
  42ca44:	bl	406e40 <gettext@plt>
  42ca48:	mov	x2, x0
  42ca4c:	ldr	x0, [sp, #40]
  42ca50:	ldr	x0, [x0]
  42ca54:	mov	x1, x0
  42ca58:	mov	x0, x2
  42ca5c:	bl	406dc0 <printf@plt>
  42ca60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ca64:	add	x0, x0, #0x400
  42ca68:	ldr	x0, [x0]
  42ca6c:	bl	406c90 <fflush@plt>
  42ca70:	ldr	w0, [sp, #36]
  42ca74:	cmp	w0, #0x0
  42ca78:	b.ne	42caf4 <show_goal_error@@Base+0x1544>  // b.any
  42ca7c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ca80:	add	x0, x0, #0xa54
  42ca84:	ldr	w0, [x0]
  42ca88:	cmp	w0, #0x0
  42ca8c:	b.eq	42caf4 <show_goal_error@@Base+0x1544>  // b.none
  42ca90:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ca94:	add	x0, x0, #0xa50
  42ca98:	ldr	w0, [x0]
  42ca9c:	cmp	w0, #0x0
  42caa0:	b.ne	42caf4 <show_goal_error@@Base+0x1544>  // b.any
  42caa4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42caa8:	add	x0, x0, #0x6f4
  42caac:	ldr	w0, [x0]
  42cab0:	cmp	w0, #0x0
  42cab4:	b.ne	42caf4 <show_goal_error@@Base+0x1544>  // b.any
  42cab8:	ldr	x0, [sp, #40]
  42cabc:	ldr	x0, [x0]
  42cac0:	bl	4066f0 <strlen@plt>
  42cac4:	mov	x19, x0
  42cac8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cacc:	add	x0, x0, #0x778
  42cad0:	bl	406e40 <gettext@plt>
  42cad4:	mov	x1, x0
  42cad8:	ldr	x0, [sp, #40]
  42cadc:	ldr	x0, [x0]
  42cae0:	mov	x3, x0
  42cae4:	mov	x2, x1
  42cae8:	mov	x1, x19
  42caec:	mov	x0, #0x0                   	// #0
  42caf0:	bl	423e74 <error@@Base>
  42caf4:	ldr	w0, [sp, #252]
  42caf8:	b	42d414 <show_goal_error@@Base+0x1e64>
  42cafc:	ldr	x0, [sp, #40]
  42cb00:	ldrb	w0, [x0, #136]
  42cb04:	and	w0, w0, #0xc
  42cb08:	and	w0, w0, #0xff
  42cb0c:	cmp	w0, #0x4
  42cb10:	b.ne	42cb20 <show_goal_error@@Base+0x1570>  // b.any
  42cb14:	mov	w1, #0x0                   	// #0
  42cb18:	ldr	x0, [sp, #40]
  42cb1c:	bl	40e258 <set_command_state@@Base>
  42cb20:	str	wzr, [sp, #232]
  42cb24:	ldr	x0, [sp, #40]
  42cb28:	ldr	x0, [x0, #24]
  42cb2c:	str	x0, [sp, #224]
  42cb30:	b	42cde0 <show_goal_error@@Base+0x1830>
  42cb34:	ldr	x0, [sp, #224]
  42cb38:	ldr	x0, [x0, #16]
  42cb3c:	ldr	x0, [x0, #112]
  42cb40:	cmp	x0, #0x0
  42cb44:	b.ne	42cb5c <show_goal_error@@Base+0x15ac>  // b.any
  42cb48:	ldr	x0, [sp, #224]
  42cb4c:	ldr	x0, [x0, #16]
  42cb50:	mov	w1, #0x1                   	// #1
  42cb54:	bl	42e3cc <f_mtime@@Base>
  42cb58:	b	42cb68 <show_goal_error@@Base+0x15b8>
  42cb5c:	ldr	x0, [sp, #224]
  42cb60:	ldr	x0, [x0, #16]
  42cb64:	ldr	x0, [x0, #112]
  42cb68:	str	x0, [sp, #120]
  42cb6c:	b	42cb84 <show_goal_error@@Base+0x15d4>
  42cb70:	ldr	x0, [sp, #224]
  42cb74:	ldr	x0, [x0, #16]
  42cb78:	ldr	x1, [x0, #72]
  42cb7c:	ldr	x0, [sp, #224]
  42cb80:	str	x1, [x0, #16]
  42cb84:	ldr	x0, [sp, #224]
  42cb88:	ldr	x0, [x0, #16]
  42cb8c:	ldr	x0, [x0, #72]
  42cb90:	cmp	x0, #0x0
  42cb94:	b.ne	42cb70 <show_goal_error@@Base+0x15c0>  // b.any
  42cb98:	ldr	x0, [sp, #224]
  42cb9c:	ldrb	w0, [x0, #33]
  42cba0:	and	w0, w0, #0x2
  42cba4:	and	w0, w0, #0xff
  42cba8:	cmp	w0, #0x0
  42cbac:	b.ne	42cc00 <show_goal_error@@Base+0x1650>  // b.any
  42cbb0:	ldr	x0, [sp, #120]
  42cbb4:	cmp	x0, #0x1
  42cbb8:	b.ne	42cbe0 <show_goal_error@@Base+0x1630>  // b.any
  42cbbc:	ldr	x0, [sp, #224]
  42cbc0:	ldr	x0, [x0, #16]
  42cbc4:	ldrb	w0, [x0, #137]
  42cbc8:	and	w0, w0, #0x40
  42cbcc:	and	w0, w0, #0xff
  42cbd0:	cmp	w0, #0x0
  42cbd4:	b.ne	42cbe0 <show_goal_error@@Base+0x1630>  // b.any
  42cbd8:	mov	w0, #0x1                   	// #1
  42cbdc:	str	w0, [sp, #236]
  42cbe0:	ldr	x0, [sp, #224]
  42cbe4:	ldrb	w0, [x0, #33]
  42cbe8:	ubfx	x0, x0, #0, #1
  42cbec:	and	w0, w0, #0xff
  42cbf0:	mov	w1, w0
  42cbf4:	ldr	w0, [sp, #232]
  42cbf8:	orr	w0, w0, w1
  42cbfc:	str	w0, [sp, #232]
  42cc00:	ldr	x0, [sp, #224]
  42cc04:	ldrb	w0, [x0, #33]
  42cc08:	ubfx	x0, x0, #0, #1
  42cc0c:	and	w0, w0, #0xff
  42cc10:	sxtb	w1, w0
  42cc14:	ldr	w0, [sp, #148]
  42cc18:	cmp	w0, #0x0
  42cc1c:	b.ne	42cc30 <show_goal_error@@Base+0x1680>  // b.any
  42cc20:	ldr	x2, [sp, #120]
  42cc24:	ldr	x0, [sp, #240]
  42cc28:	cmp	x2, x0
  42cc2c:	b.ls	42cc38 <show_goal_error@@Base+0x1688>  // b.plast
  42cc30:	mov	w0, #0x1                   	// #1
  42cc34:	b	42cc3c <show_goal_error@@Base+0x168c>
  42cc38:	mov	w0, #0x0                   	// #0
  42cc3c:	sxtb	w0, w0
  42cc40:	orr	w0, w1, w0
  42cc44:	sxtb	w0, w0
  42cc48:	and	w0, w0, #0x1
  42cc4c:	and	w2, w0, #0xff
  42cc50:	ldr	x1, [sp, #224]
  42cc54:	ldrb	w0, [x1, #33]
  42cc58:	bfxil	w0, w2, #0, #1
  42cc5c:	strb	w0, [x1, #33]
  42cc60:	ldr	w0, [sp, #148]
  42cc64:	cmp	w0, #0x0
  42cc68:	b.ne	42cdd4 <show_goal_error@@Base+0x1824>  // b.any
  42cc6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cc70:	add	x0, x0, #0x6dc
  42cc74:	ldr	w0, [x0]
  42cc78:	and	w0, w0, #0x3
  42cc7c:	cmp	w0, #0x0
  42cc80:	b.eq	42cdd4 <show_goal_error@@Base+0x1824>  // b.none
  42cc84:	str	xzr, [sp, #160]
  42cc88:	ldr	x0, [sp, #224]
  42cc8c:	ldrb	w0, [x0, #33]
  42cc90:	and	w0, w0, #0x2
  42cc94:	and	w0, w0, #0xff
  42cc98:	cmp	w0, #0x0
  42cc9c:	b.eq	42cccc <show_goal_error@@Base+0x171c>  // b.none
  42cca0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cca4:	add	x0, x0, #0x6dc
  42cca8:	ldr	w0, [x0]
  42ccac:	and	w0, w0, #0x2
  42ccb0:	cmp	w0, #0x0
  42ccb4:	b.eq	42cd70 <show_goal_error@@Base+0x17c0>  // b.none
  42ccb8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ccbc:	add	x0, x0, #0x7a8
  42ccc0:	bl	406e40 <gettext@plt>
  42ccc4:	str	x0, [sp, #160]
  42ccc8:	b	42cd70 <show_goal_error@@Base+0x17c0>
  42cccc:	ldr	x0, [sp, #120]
  42ccd0:	cmp	x0, #0x1
  42ccd4:	b.ne	42cd04 <show_goal_error@@Base+0x1754>  // b.any
  42ccd8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ccdc:	add	x0, x0, #0x6dc
  42cce0:	ldr	w0, [x0]
  42cce4:	and	w0, w0, #0x1
  42cce8:	cmp	w0, #0x0
  42ccec:	b.eq	42cd70 <show_goal_error@@Base+0x17c0>  // b.none
  42ccf0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ccf4:	add	x0, x0, #0x7e0
  42ccf8:	bl	406e40 <gettext@plt>
  42ccfc:	str	x0, [sp, #160]
  42cd00:	b	42cd70 <show_goal_error@@Base+0x17c0>
  42cd04:	ldr	x0, [sp, #224]
  42cd08:	ldrb	w0, [x0, #33]
  42cd0c:	and	w0, w0, #0x1
  42cd10:	and	w0, w0, #0xff
  42cd14:	cmp	w0, #0x0
  42cd18:	b.eq	42cd48 <show_goal_error@@Base+0x1798>  // b.none
  42cd1c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cd20:	add	x0, x0, #0x6dc
  42cd24:	ldr	w0, [x0]
  42cd28:	and	w0, w0, #0x1
  42cd2c:	cmp	w0, #0x0
  42cd30:	b.eq	42cd70 <show_goal_error@@Base+0x17c0>  // b.none
  42cd34:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cd38:	add	x0, x0, #0x818
  42cd3c:	bl	406e40 <gettext@plt>
  42cd40:	str	x0, [sp, #160]
  42cd44:	b	42cd70 <show_goal_error@@Base+0x17c0>
  42cd48:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cd4c:	add	x0, x0, #0x6dc
  42cd50:	ldr	w0, [x0]
  42cd54:	and	w0, w0, #0x2
  42cd58:	cmp	w0, #0x0
  42cd5c:	b.eq	42cd70 <show_goal_error@@Base+0x17c0>  // b.none
  42cd60:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cd64:	add	x0, x0, #0x848
  42cd68:	bl	406e40 <gettext@plt>
  42cd6c:	str	x0, [sp, #160]
  42cd70:	ldr	x0, [sp, #160]
  42cd74:	cmp	x0, #0x0
  42cd78:	b.eq	42cdd4 <show_goal_error@@Base+0x1824>  // b.none
  42cd7c:	ldr	w0, [sp, #36]
  42cd80:	bl	4223c8 <print_spaces@@Base>
  42cd84:	ldr	x0, [sp, #224]
  42cd88:	ldr	x0, [x0, #8]
  42cd8c:	cmp	x0, #0x0
  42cd90:	b.eq	42cda0 <show_goal_error@@Base+0x17f0>  // b.none
  42cd94:	ldr	x0, [sp, #224]
  42cd98:	ldr	x0, [x0, #8]
  42cd9c:	b	42cdac <show_goal_error@@Base+0x17fc>
  42cda0:	ldr	x0, [sp, #224]
  42cda4:	ldr	x0, [x0, #16]
  42cda8:	ldr	x0, [x0]
  42cdac:	ldr	x1, [sp, #40]
  42cdb0:	ldr	x1, [x1]
  42cdb4:	mov	x2, x1
  42cdb8:	mov	x1, x0
  42cdbc:	ldr	x0, [sp, #160]
  42cdc0:	bl	406dc0 <printf@plt>
  42cdc4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cdc8:	add	x0, x0, #0x400
  42cdcc:	ldr	x0, [x0]
  42cdd0:	bl	406c90 <fflush@plt>
  42cdd4:	ldr	x0, [sp, #224]
  42cdd8:	ldr	x0, [x0]
  42cddc:	str	x0, [sp, #224]
  42cde0:	ldr	x0, [sp, #224]
  42cde4:	cmp	x0, #0x0
  42cde8:	b.ne	42cb34 <show_goal_error@@Base+0x1584>  // b.any
  42cdec:	ldr	w0, [sp, #36]
  42cdf0:	sub	w0, w0, #0x1
  42cdf4:	str	w0, [sp, #36]
  42cdf8:	ldr	x0, [sp, #40]
  42cdfc:	ldr	x0, [x0, #104]
  42ce00:	cmp	x0, #0x0
  42ce04:	b.eq	42ce78 <show_goal_error@@Base+0x18c8>  // b.none
  42ce08:	ldr	x0, [sp, #40]
  42ce0c:	ldr	x0, [x0, #24]
  42ce10:	cmp	x0, #0x0
  42ce14:	b.ne	42ce78 <show_goal_error@@Base+0x18c8>  // b.any
  42ce18:	mov	w0, #0x1                   	// #1
  42ce1c:	str	w0, [sp, #236]
  42ce20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ce24:	add	x0, x0, #0x6dc
  42ce28:	ldr	w0, [x0]
  42ce2c:	and	w0, w0, #0x1
  42ce30:	cmp	w0, #0x0
  42ce34:	b.eq	42cfb4 <show_goal_error@@Base+0x1a04>  // b.none
  42ce38:	ldr	w0, [sp, #36]
  42ce3c:	bl	4223c8 <print_spaces@@Base>
  42ce40:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ce44:	add	x0, x0, #0x878
  42ce48:	bl	406e40 <gettext@plt>
  42ce4c:	mov	x2, x0
  42ce50:	ldr	x0, [sp, #40]
  42ce54:	ldr	x0, [x0]
  42ce58:	mov	x1, x0
  42ce5c:	mov	x0, x2
  42ce60:	bl	406dc0 <printf@plt>
  42ce64:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ce68:	add	x0, x0, #0x400
  42ce6c:	ldr	x0, [x0]
  42ce70:	bl	406c90 <fflush@plt>
  42ce74:	b	42cfb4 <show_goal_error@@Base+0x1a04>
  42ce78:	ldr	w0, [sp, #148]
  42ce7c:	cmp	w0, #0x0
  42ce80:	b.ne	42cf28 <show_goal_error@@Base+0x1978>  // b.any
  42ce84:	ldr	x0, [sp, #40]
  42ce88:	ldrb	w0, [x0, #137]
  42ce8c:	and	w0, w0, #0x8
  42ce90:	and	w0, w0, #0xff
  42ce94:	cmp	w0, #0x0
  42ce98:	b.eq	42cf28 <show_goal_error@@Base+0x1978>  // b.none
  42ce9c:	ldr	w0, [sp, #232]
  42cea0:	cmp	w0, #0x0
  42cea4:	b.ne	42cf28 <show_goal_error@@Base+0x1978>  // b.any
  42cea8:	ldr	x0, [sp, #40]
  42ceac:	ldr	x0, [x0, #32]
  42ceb0:	cmp	x0, #0x0
  42ceb4:	b.ne	42cf28 <show_goal_error@@Base+0x1978>  // b.any
  42ceb8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cebc:	add	x0, x0, #0x718
  42cec0:	ldr	w0, [x0]
  42cec4:	cmp	w0, #0x0
  42cec8:	b.ne	42cf28 <show_goal_error@@Base+0x1978>  // b.any
  42cecc:	str	wzr, [sp, #236]
  42ced0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ced4:	add	x0, x0, #0x6dc
  42ced8:	ldr	w0, [x0]
  42cedc:	and	w0, w0, #0x2
  42cee0:	cmp	w0, #0x0
  42cee4:	b.eq	42cfb4 <show_goal_error@@Base+0x1a04>  // b.none
  42cee8:	ldr	w0, [sp, #36]
  42ceec:	bl	4223c8 <print_spaces@@Base>
  42cef0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cef4:	add	x0, x0, #0x8b0
  42cef8:	bl	406e40 <gettext@plt>
  42cefc:	mov	x2, x0
  42cf00:	ldr	x0, [sp, #40]
  42cf04:	ldr	x0, [x0]
  42cf08:	mov	x1, x0
  42cf0c:	mov	x0, x2
  42cf10:	bl	406dc0 <printf@plt>
  42cf14:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cf18:	add	x0, x0, #0x400
  42cf1c:	ldr	x0, [x0]
  42cf20:	bl	406c90 <fflush@plt>
  42cf24:	b	42cfb4 <show_goal_error@@Base+0x1a04>
  42cf28:	ldr	w0, [sp, #236]
  42cf2c:	cmp	w0, #0x0
  42cf30:	b.ne	42cfb4 <show_goal_error@@Base+0x1a04>  // b.any
  42cf34:	ldr	x0, [sp, #40]
  42cf38:	ldr	x0, [x0, #32]
  42cf3c:	cmp	x0, #0x0
  42cf40:	b.eq	42cfb4 <show_goal_error@@Base+0x1a04>  // b.none
  42cf44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cf48:	add	x0, x0, #0x718
  42cf4c:	ldr	w0, [x0]
  42cf50:	cmp	w0, #0x0
  42cf54:	b.eq	42cfb4 <show_goal_error@@Base+0x1a04>  // b.none
  42cf58:	mov	w0, #0x1                   	// #1
  42cf5c:	str	w0, [sp, #236]
  42cf60:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cf64:	add	x0, x0, #0x6dc
  42cf68:	ldr	w0, [x0]
  42cf6c:	and	w0, w0, #0x2
  42cf70:	cmp	w0, #0x0
  42cf74:	b.eq	42cfb4 <show_goal_error@@Base+0x1a04>  // b.none
  42cf78:	ldr	w0, [sp, #36]
  42cf7c:	bl	4223c8 <print_spaces@@Base>
  42cf80:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cf84:	add	x0, x0, #0x8f0
  42cf88:	bl	406e40 <gettext@plt>
  42cf8c:	mov	x2, x0
  42cf90:	ldr	x0, [sp, #40]
  42cf94:	ldr	x0, [x0]
  42cf98:	mov	x1, x0
  42cf9c:	mov	x0, x2
  42cfa0:	bl	406dc0 <printf@plt>
  42cfa4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cfa8:	add	x0, x0, #0x400
  42cfac:	ldr	x0, [x0]
  42cfb0:	bl	406c90 <fflush@plt>
  42cfb4:	ldr	w0, [sp, #236]
  42cfb8:	cmp	w0, #0x0
  42cfbc:	b.ne	42d0f8 <show_goal_error@@Base+0x1b48>  // b.any
  42cfc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42cfc4:	add	x0, x0, #0x6dc
  42cfc8:	ldr	w0, [x0]
  42cfcc:	and	w0, w0, #0x2
  42cfd0:	cmp	w0, #0x0
  42cfd4:	b.eq	42d0bc <show_goal_error@@Base+0x1b0c>  // b.none
  42cfd8:	ldr	w0, [sp, #36]
  42cfdc:	bl	4223c8 <print_spaces@@Base>
  42cfe0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42cfe4:	add	x0, x0, #0x918
  42cfe8:	bl	406e40 <gettext@plt>
  42cfec:	mov	x2, x0
  42cff0:	ldr	x0, [sp, #40]
  42cff4:	ldr	x0, [x0]
  42cff8:	mov	x1, x0
  42cffc:	mov	x0, x2
  42d000:	bl	406dc0 <printf@plt>
  42d004:	ldr	x0, [sp, #40]
  42d008:	ldr	x1, [x0]
  42d00c:	ldr	x0, [sp, #40]
  42d010:	ldr	x0, [x0, #8]
  42d014:	cmp	x1, x0
  42d018:	b.eq	42d0a0 <show_goal_error@@Base+0x1af0>  // b.none
  42d01c:	ldr	x0, [sp, #40]
  42d020:	ldr	x0, [x0]
  42d024:	ldrb	w1, [x0]
  42d028:	ldr	x0, [sp, #40]
  42d02c:	ldr	x0, [x0, #8]
  42d030:	ldrb	w0, [x0]
  42d034:	cmp	w1, w0
  42d038:	b.ne	42d07c <show_goal_error@@Base+0x1acc>  // b.any
  42d03c:	ldr	x0, [sp, #40]
  42d040:	ldr	x0, [x0]
  42d044:	ldrb	w0, [x0]
  42d048:	cmp	w0, #0x0
  42d04c:	b.eq	42d0a0 <show_goal_error@@Base+0x1af0>  // b.none
  42d050:	ldr	x0, [sp, #40]
  42d054:	ldr	x0, [x0]
  42d058:	add	x2, x0, #0x1
  42d05c:	ldr	x0, [sp, #40]
  42d060:	ldr	x0, [x0, #8]
  42d064:	add	x0, x0, #0x1
  42d068:	mov	x1, x0
  42d06c:	mov	x0, x2
  42d070:	bl	406bc0 <strcmp@plt>
  42d074:	cmp	w0, #0x0
  42d078:	b.eq	42d0a0 <show_goal_error@@Base+0x1af0>  // b.none
  42d07c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d080:	add	x0, x0, #0x938
  42d084:	bl	406e40 <gettext@plt>
  42d088:	mov	x2, x0
  42d08c:	ldr	x0, [sp, #40]
  42d090:	ldr	x0, [x0, #8]
  42d094:	mov	x1, x0
  42d098:	mov	x0, x2
  42d09c:	bl	406dc0 <printf@plt>
  42d0a0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d0a4:	add	x0, x0, #0x508
  42d0a8:	bl	406b60 <puts@plt>
  42d0ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d0b0:	add	x0, x0, #0x400
  42d0b4:	ldr	x0, [x0]
  42d0b8:	bl	406c90 <fflush@plt>
  42d0bc:	ldr	x0, [sp, #40]
  42d0c0:	bl	42d420 <notice_finished_file@@Base>
  42d0c4:	b	42d0e4 <show_goal_error@@Base+0x1b34>
  42d0c8:	ldr	x0, [sp, #40]
  42d0cc:	ldr	x1, [x0, #8]
  42d0d0:	ldr	x0, [sp, #40]
  42d0d4:	str	x1, [x0]
  42d0d8:	ldr	x0, [sp, #40]
  42d0dc:	ldr	x0, [x0, #56]
  42d0e0:	str	x0, [sp, #40]
  42d0e4:	ldr	x0, [sp, #40]
  42d0e8:	cmp	x0, #0x0
  42d0ec:	b.ne	42d0c8 <show_goal_error@@Base+0x1b18>  // b.any
  42d0f0:	mov	w0, #0x0                   	// #0
  42d0f4:	b	42d414 <show_goal_error@@Base+0x1e64>
  42d0f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d0fc:	add	x0, x0, #0x6dc
  42d100:	ldr	w0, [x0]
  42d104:	and	w0, w0, #0x1
  42d108:	cmp	w0, #0x0
  42d10c:	b.eq	42d14c <show_goal_error@@Base+0x1b9c>  // b.none
  42d110:	ldr	w0, [sp, #36]
  42d114:	bl	4223c8 <print_spaces@@Base>
  42d118:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d11c:	add	x0, x0, #0x950
  42d120:	bl	406e40 <gettext@plt>
  42d124:	mov	x2, x0
  42d128:	ldr	x0, [sp, #40]
  42d12c:	ldr	x0, [x0]
  42d130:	mov	x1, x0
  42d134:	mov	x0, x2
  42d138:	bl	406dc0 <printf@plt>
  42d13c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d140:	add	x0, x0, #0x400
  42d144:	ldr	x0, [x0]
  42d148:	bl	406c90 <fflush@plt>
  42d14c:	ldr	x0, [sp, #40]
  42d150:	ldr	x1, [x0]
  42d154:	ldr	x0, [sp, #40]
  42d158:	ldr	x0, [x0, #8]
  42d15c:	cmp	x1, x0
  42d160:	b.eq	42d220 <show_goal_error@@Base+0x1c70>  // b.none
  42d164:	ldr	x0, [sp, #40]
  42d168:	ldr	x0, [x0]
  42d16c:	ldrb	w1, [x0]
  42d170:	ldr	x0, [sp, #40]
  42d174:	ldr	x0, [x0, #8]
  42d178:	ldrb	w0, [x0]
  42d17c:	cmp	w1, w0
  42d180:	b.ne	42d1c4 <show_goal_error@@Base+0x1c14>  // b.any
  42d184:	ldr	x0, [sp, #40]
  42d188:	ldr	x0, [x0]
  42d18c:	ldrb	w0, [x0]
  42d190:	cmp	w0, #0x0
  42d194:	b.eq	42d220 <show_goal_error@@Base+0x1c70>  // b.none
  42d198:	ldr	x0, [sp, #40]
  42d19c:	ldr	x0, [x0]
  42d1a0:	add	x2, x0, #0x1
  42d1a4:	ldr	x0, [sp, #40]
  42d1a8:	ldr	x0, [x0, #8]
  42d1ac:	add	x0, x0, #0x1
  42d1b0:	mov	x1, x0
  42d1b4:	mov	x0, x2
  42d1b8:	bl	406bc0 <strcmp@plt>
  42d1bc:	cmp	w0, #0x0
  42d1c0:	b.eq	42d220 <show_goal_error@@Base+0x1c70>  // b.none
  42d1c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d1c8:	add	x0, x0, #0x6dc
  42d1cc:	ldr	w0, [x0]
  42d1d0:	and	w0, w0, #0x1
  42d1d4:	cmp	w0, #0x0
  42d1d8:	b.eq	42d210 <show_goal_error@@Base+0x1c60>  // b.none
  42d1dc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d1e0:	add	x0, x0, #0x970
  42d1e4:	bl	406e40 <gettext@plt>
  42d1e8:	mov	x2, x0
  42d1ec:	ldr	x0, [sp, #40]
  42d1f0:	ldr	x0, [x0, #8]
  42d1f4:	mov	x1, x0
  42d1f8:	mov	x0, x2
  42d1fc:	bl	406dc0 <printf@plt>
  42d200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d204:	add	x0, x0, #0x400
  42d208:	ldr	x0, [x0]
  42d20c:	bl	406c90 <fflush@plt>
  42d210:	ldr	x0, [sp, #40]
  42d214:	ldrb	w1, [x0, #138]
  42d218:	orr	w1, w1, #0x2
  42d21c:	strb	w1, [x0, #138]
  42d220:	ldr	x0, [sp, #40]
  42d224:	bl	42e2a8 <notice_finished_file@@Base+0xe88>
  42d228:	ldr	x0, [sp, #40]
  42d22c:	ldrb	w0, [x0, #136]
  42d230:	and	w0, w0, #0xc
  42d234:	and	w0, w0, #0xff
  42d238:	cmp	w0, #0xc
  42d23c:	b.eq	42d29c <show_goal_error@@Base+0x1cec>  // b.none
  42d240:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d244:	add	x0, x0, #0x6dc
  42d248:	ldr	w0, [x0]
  42d24c:	and	w0, w0, #0x2
  42d250:	cmp	w0, #0x0
  42d254:	b.eq	42d294 <show_goal_error@@Base+0x1ce4>  // b.none
  42d258:	ldr	w0, [sp, #36]
  42d25c:	bl	4223c8 <print_spaces@@Base>
  42d260:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d264:	add	x0, x0, #0x990
  42d268:	bl	406e40 <gettext@plt>
  42d26c:	mov	x2, x0
  42d270:	ldr	x0, [sp, #40]
  42d274:	ldr	x0, [x0]
  42d278:	mov	x1, x0
  42d27c:	mov	x0, x2
  42d280:	bl	406dc0 <printf@plt>
  42d284:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d288:	add	x0, x0, #0x400
  42d28c:	ldr	x0, [x0]
  42d290:	bl	406c90 <fflush@plt>
  42d294:	mov	w0, #0x0                   	// #0
  42d298:	b	42d414 <show_goal_error@@Base+0x1e64>
  42d29c:	ldr	x0, [sp, #40]
  42d2a0:	ldrb	w0, [x0, #136]
  42d2a4:	ubfx	x0, x0, #0, #2
  42d2a8:	and	w0, w0, #0xff
  42d2ac:	cmp	w0, #0x3
  42d2b0:	b.eq	42d2d0 <show_goal_error@@Base+0x1d20>  // b.none
  42d2b4:	cmp	w0, #0x3
  42d2b8:	b.gt	42d328 <show_goal_error@@Base+0x1d78>
  42d2bc:	cmp	w0, #0x1
  42d2c0:	b.eq	42d3d8 <show_goal_error@@Base+0x1e28>  // b.none
  42d2c4:	cmp	w0, #0x2
  42d2c8:	b.eq	42d380 <show_goal_error@@Base+0x1dd0>  // b.none
  42d2cc:	b	42d328 <show_goal_error@@Base+0x1d78>
  42d2d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d2d4:	add	x0, x0, #0x6dc
  42d2d8:	ldr	w0, [x0]
  42d2dc:	and	w0, w0, #0x1
  42d2e0:	cmp	w0, #0x0
  42d2e4:	b.eq	42d3e0 <show_goal_error@@Base+0x1e30>  // b.none
  42d2e8:	ldr	w0, [sp, #36]
  42d2ec:	bl	4223c8 <print_spaces@@Base>
  42d2f0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d2f4:	add	x0, x0, #0x9b0
  42d2f8:	bl	406e40 <gettext@plt>
  42d2fc:	mov	x2, x0
  42d300:	ldr	x0, [sp, #40]
  42d304:	ldr	x0, [x0]
  42d308:	mov	x1, x0
  42d30c:	mov	x0, x2
  42d310:	bl	406dc0 <printf@plt>
  42d314:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d318:	add	x0, x0, #0x400
  42d31c:	ldr	x0, [x0]
  42d320:	bl	406c90 <fflush@plt>
  42d324:	b	42d3e0 <show_goal_error@@Base+0x1e30>
  42d328:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d32c:	add	x0, x0, #0x6dc
  42d330:	ldr	w0, [x0]
  42d334:	and	w0, w0, #0x1
  42d338:	cmp	w0, #0x0
  42d33c:	b.eq	42d3e8 <show_goal_error@@Base+0x1e38>  // b.none
  42d340:	ldr	w0, [sp, #36]
  42d344:	bl	4223c8 <print_spaces@@Base>
  42d348:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d34c:	add	x0, x0, #0x9d8
  42d350:	bl	406e40 <gettext@plt>
  42d354:	mov	x2, x0
  42d358:	ldr	x0, [sp, #40]
  42d35c:	ldr	x0, [x0]
  42d360:	mov	x1, x0
  42d364:	mov	x0, x2
  42d368:	bl	406dc0 <printf@plt>
  42d36c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d370:	add	x0, x0, #0x400
  42d374:	ldr	x0, [x0]
  42d378:	bl	406c90 <fflush@plt>
  42d37c:	b	42d3e8 <show_goal_error@@Base+0x1e38>
  42d380:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d384:	add	x0, x0, #0x6dc
  42d388:	ldr	w0, [x0]
  42d38c:	and	w0, w0, #0x1
  42d390:	cmp	w0, #0x0
  42d394:	b.eq	42d3f0 <show_goal_error@@Base+0x1e40>  // b.none
  42d398:	ldr	w0, [sp, #36]
  42d39c:	bl	4223c8 <print_spaces@@Base>
  42d3a0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42d3a4:	add	x0, x0, #0xa00
  42d3a8:	bl	406e40 <gettext@plt>
  42d3ac:	mov	x2, x0
  42d3b0:	ldr	x0, [sp, #40]
  42d3b4:	ldr	x0, [x0]
  42d3b8:	mov	x1, x0
  42d3bc:	mov	x0, x2
  42d3c0:	bl	406dc0 <printf@plt>
  42d3c4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d3c8:	add	x0, x0, #0x400
  42d3cc:	ldr	x0, [x0]
  42d3d0:	bl	406c90 <fflush@plt>
  42d3d4:	b	42d3f0 <show_goal_error@@Base+0x1e40>
  42d3d8:	nop
  42d3dc:	b	42d3f4 <show_goal_error@@Base+0x1e44>
  42d3e0:	nop
  42d3e4:	b	42d3f4 <show_goal_error@@Base+0x1e44>
  42d3e8:	nop
  42d3ec:	b	42d3f4 <show_goal_error@@Base+0x1e44>
  42d3f0:	nop
  42d3f4:	ldr	x0, [sp, #40]
  42d3f8:	ldrb	w1, [x0, #137]
  42d3fc:	orr	w1, w1, #0x4
  42d400:	strb	w1, [x0, #137]
  42d404:	ldr	x0, [sp, #40]
  42d408:	ldrb	w0, [x0, #136]
  42d40c:	ubfx	x0, x0, #0, #2
  42d410:	and	w0, w0, #0xff
  42d414:	ldr	x19, [sp, #16]
  42d418:	ldp	x29, x30, [sp], #256
  42d41c:	ret

000000000042d420 <notice_finished_file@@Base>:
  42d420:	stp	x29, x30, [sp, #-80]!
  42d424:	mov	x29, sp
  42d428:	str	x0, [sp, #24]
  42d42c:	ldr	x0, [sp, #24]
  42d430:	ldrb	w0, [x0, #136]
  42d434:	and	w0, w0, #0xc
  42d438:	and	w0, w0, #0xff
  42d43c:	cmp	w0, #0x8
  42d440:	cset	w0, eq  // eq = none
  42d444:	and	w0, w0, #0xff
  42d448:	str	w0, [sp, #36]
  42d44c:	str	wzr, [sp, #68]
  42d450:	ldr	x0, [sp, #24]
  42d454:	ldrb	w1, [x0, #136]
  42d458:	orr	w1, w1, #0xc
  42d45c:	strb	w1, [x0, #136]
  42d460:	ldr	x0, [sp, #24]
  42d464:	ldrb	w1, [x0, #137]
  42d468:	orr	w1, w1, #0x4
  42d46c:	strb	w1, [x0, #137]
  42d470:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42d474:	add	x0, x0, #0xb1c
  42d478:	ldr	w0, [x0]
  42d47c:	cmp	w0, #0x0
  42d480:	b.eq	42d5ac <notice_finished_file@@Base+0x18c>  // b.none
  42d484:	ldr	x0, [sp, #24]
  42d488:	ldrb	w0, [x0, #136]
  42d48c:	and	w0, w0, #0x3
  42d490:	and	w0, w0, #0xff
  42d494:	cmp	w0, #0x0
  42d498:	b.ne	42d5ac <notice_finished_file@@Base+0x18c>  // b.any
  42d49c:	ldr	x0, [sp, #24]
  42d4a0:	ldr	x0, [x0, #32]
  42d4a4:	cmp	x0, #0x0
  42d4a8:	b.eq	42d520 <notice_finished_file@@Base+0x100>  // b.none
  42d4ac:	ldr	x0, [sp, #24]
  42d4b0:	ldr	x0, [x0, #32]
  42d4b4:	ldrb	w0, [x0, #51]
  42d4b8:	and	w0, w0, #0x1
  42d4bc:	and	w0, w0, #0xff
  42d4c0:	cmp	w0, #0x0
  42d4c4:	b.eq	42d520 <notice_finished_file@@Base+0x100>  // b.none
  42d4c8:	str	wzr, [sp, #64]
  42d4cc:	b	42d500 <notice_finished_file@@Base+0xe0>
  42d4d0:	ldr	x0, [sp, #24]
  42d4d4:	ldr	x0, [x0, #32]
  42d4d8:	ldr	x1, [x0, #40]
  42d4dc:	ldr	w0, [sp, #64]
  42d4e0:	add	x0, x1, x0
  42d4e4:	ldrb	w0, [x0]
  42d4e8:	and	w0, w0, #0x1
  42d4ec:	cmp	w0, #0x0
  42d4f0:	b.eq	42d528 <notice_finished_file@@Base+0x108>  // b.none
  42d4f4:	ldr	w0, [sp, #64]
  42d4f8:	add	w0, w0, #0x1
  42d4fc:	str	w0, [sp, #64]
  42d500:	ldr	x0, [sp, #24]
  42d504:	ldr	x0, [x0, #32]
  42d508:	ldrh	w0, [x0, #48]
  42d50c:	mov	w1, w0
  42d510:	ldr	w0, [sp, #64]
  42d514:	cmp	w0, w1
  42d518:	b.cc	42d4d0 <notice_finished_file@@Base+0xb0>  // b.lo, b.ul, b.last
  42d51c:	b	42d5ac <notice_finished_file@@Base+0x18c>
  42d520:	nop
  42d524:	b	42d52c <notice_finished_file@@Base+0x10c>
  42d528:	nop
  42d52c:	ldr	x0, [sp, #24]
  42d530:	ldrb	w0, [x0, #137]
  42d534:	and	w0, w0, #0x20
  42d538:	and	w0, w0, #0xff
  42d53c:	cmp	w0, #0x0
  42d540:	b.eq	42d558 <notice_finished_file@@Base+0x138>  // b.none
  42d544:	ldr	x0, [sp, #24]
  42d548:	ldrb	w1, [x0, #136]
  42d54c:	and	w1, w1, #0xfffffffc
  42d550:	strb	w1, [x0, #136]
  42d554:	b	42d5ac <notice_finished_file@@Base+0x18c>
  42d558:	ldr	x0, [sp, #24]
  42d55c:	ldr	x0, [x0, #32]
  42d560:	cmp	x0, #0x0
  42d564:	b.eq	42d5ac <notice_finished_file@@Base+0x18c>  // b.none
  42d568:	ldr	x0, [sp, #24]
  42d56c:	bl	42df88 <notice_finished_file@@Base+0xb68>
  42d570:	and	w0, w0, #0x3
  42d574:	and	w2, w0, #0xff
  42d578:	ldr	x1, [sp, #24]
  42d57c:	ldrb	w0, [x1, #136]
  42d580:	bfxil	w0, w2, #0, #2
  42d584:	strb	w0, [x1, #136]
  42d588:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42d58c:	add	x0, x0, #0x88
  42d590:	ldr	w0, [x0]
  42d594:	add	w1, w0, #0x1
  42d598:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42d59c:	add	x0, x0, #0x88
  42d5a0:	str	w1, [x0]
  42d5a4:	mov	w0, #0x1                   	// #1
  42d5a8:	str	w0, [sp, #68]
  42d5ac:	ldr	x0, [sp, #24]
  42d5b0:	ldr	x0, [x0, #120]
  42d5b4:	cmp	x0, #0x0
  42d5b8:	b.ne	42d5cc <notice_finished_file@@Base+0x1ac>  // b.any
  42d5bc:	ldr	x0, [sp, #24]
  42d5c0:	ldr	x1, [x0, #112]
  42d5c4:	ldr	x0, [sp, #24]
  42d5c8:	str	x1, [x0, #120]
  42d5cc:	ldr	w0, [sp, #36]
  42d5d0:	cmp	w0, #0x0
  42d5d4:	b.eq	42d5f0 <notice_finished_file@@Base+0x1d0>  // b.none
  42d5d8:	ldr	x0, [sp, #24]
  42d5dc:	ldrb	w0, [x0, #137]
  42d5e0:	and	w0, w0, #0x20
  42d5e4:	and	w0, w0, #0xff
  42d5e8:	cmp	w0, #0x0
  42d5ec:	b.eq	42d5fc <notice_finished_file@@Base+0x1dc>  // b.none
  42d5f0:	ldr	w0, [sp, #68]
  42d5f4:	cmp	w0, #0x0
  42d5f8:	b.eq	42d6fc <notice_finished_file@@Base+0x2dc>  // b.none
  42d5fc:	str	wzr, [sp, #60]
  42d600:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42d604:	add	x0, x0, #0x6f4
  42d608:	ldr	w0, [x0]
  42d60c:	cmp	w0, #0x0
  42d610:	b.ne	42d63c <notice_finished_file@@Base+0x21c>  // b.any
  42d614:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42d618:	add	x0, x0, #0xa50
  42d61c:	ldr	w0, [x0]
  42d620:	cmp	w0, #0x0
  42d624:	b.ne	42d63c <notice_finished_file@@Base+0x21c>  // b.any
  42d628:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42d62c:	add	x0, x0, #0xb1c
  42d630:	ldr	w0, [x0]
  42d634:	cmp	w0, #0x0
  42d638:	b.eq	42d6ac <notice_finished_file@@Base+0x28c>  // b.none
  42d63c:	ldr	x0, [sp, #24]
  42d640:	ldr	x0, [x0, #32]
  42d644:	cmp	x0, #0x0
  42d648:	b.eq	42d6ac <notice_finished_file@@Base+0x28c>  // b.none
  42d64c:	ldr	x0, [sp, #24]
  42d650:	ldr	x0, [x0, #32]
  42d654:	ldrh	w0, [x0, #48]
  42d658:	str	w0, [sp, #60]
  42d65c:	b	42d694 <notice_finished_file@@Base+0x274>
  42d660:	ldr	x0, [sp, #24]
  42d664:	ldr	x0, [x0, #32]
  42d668:	ldr	x1, [x0, #40]
  42d66c:	ldrsw	x0, [sp, #60]
  42d670:	sub	x0, x0, #0x1
  42d674:	add	x0, x1, x0
  42d678:	ldrb	w0, [x0]
  42d67c:	and	w0, w0, #0x1
  42d680:	cmp	w0, #0x0
  42d684:	b.eq	42d6a4 <notice_finished_file@@Base+0x284>  // b.none
  42d688:	ldr	w0, [sp, #60]
  42d68c:	sub	w0, w0, #0x1
  42d690:	str	w0, [sp, #60]
  42d694:	ldr	w0, [sp, #60]
  42d698:	cmp	w0, #0x0
  42d69c:	b.gt	42d660 <notice_finished_file@@Base+0x240>
  42d6a0:	b	42d6dc <notice_finished_file@@Base+0x2bc>
  42d6a4:	nop
  42d6a8:	b	42d6dc <notice_finished_file@@Base+0x2bc>
  42d6ac:	ldr	x0, [sp, #24]
  42d6b0:	ldrb	w0, [x0, #137]
  42d6b4:	and	w0, w0, #0x8
  42d6b8:	and	w0, w0, #0xff
  42d6bc:	cmp	w0, #0x0
  42d6c0:	b.eq	42d6dc <notice_finished_file@@Base+0x2bc>  // b.none
  42d6c4:	ldr	x0, [sp, #24]
  42d6c8:	ldr	x0, [x0, #32]
  42d6cc:	cmp	x0, #0x0
  42d6d0:	b.ne	42d6dc <notice_finished_file@@Base+0x2bc>  // b.any
  42d6d4:	mov	w0, #0x1                   	// #1
  42d6d8:	str	w0, [sp, #60]
  42d6dc:	ldr	w0, [sp, #60]
  42d6e0:	cmp	w0, #0x0
  42d6e4:	b.ne	42d6f0 <notice_finished_file@@Base+0x2d0>  // b.any
  42d6e8:	mov	x0, #0x0                   	// #0
  42d6ec:	b	42d6f4 <notice_finished_file@@Base+0x2d4>
  42d6f0:	mov	x0, #0xffffffffffffffff    	// #-1
  42d6f4:	ldr	x1, [sp, #24]
  42d6f8:	str	x0, [x1, #112]
  42d6fc:	ldr	x0, [sp, #24]
  42d700:	ldr	x0, [x0, #104]
  42d704:	cmp	x0, #0x0
  42d708:	b.eq	42d7d4 <notice_finished_file@@Base+0x3b4>  // b.none
  42d70c:	ldr	x0, [sp, #24]
  42d710:	ldr	x0, [x0, #112]
  42d714:	str	x0, [sp, #40]
  42d718:	ldr	x0, [sp, #24]
  42d71c:	ldr	x0, [x0, #104]
  42d720:	str	x0, [sp, #48]
  42d724:	b	42d770 <notice_finished_file@@Base+0x350>
  42d728:	ldr	x0, [sp, #40]
  42d72c:	cmp	x0, #0x0
  42d730:	b.eq	42d764 <notice_finished_file@@Base+0x344>  // b.none
  42d734:	ldr	x0, [sp, #48]
  42d738:	ldr	x0, [x0, #112]
  42d73c:	cmp	x0, #0x0
  42d740:	b.eq	42d758 <notice_finished_file@@Base+0x338>  // b.none
  42d744:	ldr	x0, [sp, #48]
  42d748:	ldr	x0, [x0, #112]
  42d74c:	ldr	x1, [sp, #40]
  42d750:	cmp	x1, x0
  42d754:	b.cs	42d764 <notice_finished_file@@Base+0x344>  // b.hs, b.nlast
  42d758:	ldr	x0, [sp, #48]
  42d75c:	ldr	x0, [x0, #112]
  42d760:	str	x0, [sp, #40]
  42d764:	ldr	x0, [sp, #48]
  42d768:	ldr	x0, [x0, #56]
  42d76c:	str	x0, [sp, #48]
  42d770:	ldr	x0, [sp, #48]
  42d774:	cmp	x0, #0x0
  42d778:	b.eq	42d794 <notice_finished_file@@Base+0x374>  // b.none
  42d77c:	ldr	x0, [sp, #48]
  42d780:	ldrb	w0, [x0, #137]
  42d784:	and	w0, w0, #0x4
  42d788:	and	w0, w0, #0xff
  42d78c:	cmp	w0, #0x0
  42d790:	b.ne	42d728 <notice_finished_file@@Base+0x308>  // b.any
  42d794:	ldr	x0, [sp, #48]
  42d798:	cmp	x0, #0x0
  42d79c:	b.ne	42d7d4 <notice_finished_file@@Base+0x3b4>  // b.any
  42d7a0:	ldr	x0, [sp, #24]
  42d7a4:	ldr	x0, [x0, #104]
  42d7a8:	str	x0, [sp, #48]
  42d7ac:	b	42d7c8 <notice_finished_file@@Base+0x3a8>
  42d7b0:	ldr	x0, [sp, #48]
  42d7b4:	ldr	x1, [sp, #40]
  42d7b8:	str	x1, [x0, #112]
  42d7bc:	ldr	x0, [sp, #48]
  42d7c0:	ldr	x0, [x0, #56]
  42d7c4:	str	x0, [sp, #48]
  42d7c8:	ldr	x0, [sp, #48]
  42d7cc:	cmp	x0, #0x0
  42d7d0:	b.ne	42d7b0 <notice_finished_file@@Base+0x390>  // b.any
  42d7d4:	ldr	w0, [sp, #36]
  42d7d8:	cmp	w0, #0x0
  42d7dc:	b.eq	42d8a8 <notice_finished_file@@Base+0x488>  // b.none
  42d7e0:	ldr	x0, [sp, #24]
  42d7e4:	ldrb	w0, [x0, #136]
  42d7e8:	and	w0, w0, #0x3
  42d7ec:	and	w0, w0, #0xff
  42d7f0:	cmp	w0, #0x1
  42d7f4:	b.eq	42d8a8 <notice_finished_file@@Base+0x488>  // b.none
  42d7f8:	ldr	x0, [sp, #24]
  42d7fc:	ldr	x0, [x0, #48]
  42d800:	str	x0, [sp, #72]
  42d804:	b	42d898 <notice_finished_file@@Base+0x478>
  42d808:	ldr	x0, [sp, #72]
  42d80c:	ldr	x0, [x0, #16]
  42d810:	ldrb	w1, [x0, #136]
  42d814:	orr	w1, w1, #0xc
  42d818:	strb	w1, [x0, #136]
  42d81c:	ldr	x0, [sp, #72]
  42d820:	ldr	x0, [x0, #16]
  42d824:	ldrb	w1, [x0, #137]
  42d828:	orr	w1, w1, #0x4
  42d82c:	strb	w1, [x0, #137]
  42d830:	ldr	x0, [sp, #72]
  42d834:	ldr	x1, [x0, #16]
  42d838:	ldr	x0, [sp, #24]
  42d83c:	ldrb	w0, [x0, #136]
  42d840:	ubfx	x0, x0, #0, #2
  42d844:	and	w2, w0, #0xff
  42d848:	ldrb	w0, [x1, #136]
  42d84c:	bfxil	w0, w2, #0, #2
  42d850:	strb	w0, [x1, #136]
  42d854:	ldr	w0, [sp, #36]
  42d858:	cmp	w0, #0x0
  42d85c:	b.eq	42d88c <notice_finished_file@@Base+0x46c>  // b.none
  42d860:	ldr	x0, [sp, #72]
  42d864:	ldr	x0, [x0, #16]
  42d868:	ldrb	w0, [x0, #137]
  42d86c:	and	w0, w0, #0x20
  42d870:	and	w0, w0, #0xff
  42d874:	cmp	w0, #0x0
  42d878:	b.ne	42d88c <notice_finished_file@@Base+0x46c>  // b.any
  42d87c:	ldr	x0, [sp, #72]
  42d880:	ldr	x0, [x0, #16]
  42d884:	mov	w1, #0x0                   	// #0
  42d888:	bl	42e3cc <f_mtime@@Base>
  42d88c:	ldr	x0, [sp, #72]
  42d890:	ldr	x0, [x0]
  42d894:	str	x0, [sp, #72]
  42d898:	ldr	x0, [sp, #72]
  42d89c:	cmp	x0, #0x0
  42d8a0:	b.ne	42d808 <notice_finished_file@@Base+0x3e8>  // b.any
  42d8a4:	b	42d8d4 <notice_finished_file@@Base+0x4b4>
  42d8a8:	ldr	x0, [sp, #24]
  42d8ac:	ldrb	w0, [x0, #136]
  42d8b0:	and	w0, w0, #0x3
  42d8b4:	and	w0, w0, #0xff
  42d8b8:	cmp	w0, #0x1
  42d8bc:	b.ne	42d8d4 <notice_finished_file@@Base+0x4b4>  // b.any
  42d8c0:	ldr	x0, [sp, #24]
  42d8c4:	ldrb	w1, [x0, #136]
  42d8c8:	and	w1, w1, #0xfffffffc
  42d8cc:	strb	w1, [x0, #136]
  42d8d0:	b	42d8d4 <notice_finished_file@@Base+0x4b4>
  42d8d4:	nop
  42d8d8:	ldp	x29, x30, [sp], #80
  42d8dc:	ret
  42d8e0:	stp	x29, x30, [sp, #-144]!
  42d8e4:	mov	x29, sp
  42d8e8:	str	x19, [sp, #16]
  42d8ec:	str	x0, [sp, #56]
  42d8f0:	str	w1, [sp, #52]
  42d8f4:	str	x2, [sp, #40]
  42d8f8:	str	x3, [sp, #32]
  42d8fc:	str	wzr, [sp, #132]
  42d900:	ldr	w0, [sp, #52]
  42d904:	add	w0, w0, #0x1
  42d908:	str	w0, [sp, #52]
  42d90c:	ldr	x0, [sp, #56]
  42d910:	ldr	x0, [x0, #104]
  42d914:	cmp	x0, #0x0
  42d918:	b.eq	42d928 <notice_finished_file@@Base+0x508>  // b.none
  42d91c:	ldr	x0, [sp, #56]
  42d920:	ldr	x0, [x0, #104]
  42d924:	b	42d92c <notice_finished_file@@Base+0x50c>
  42d928:	ldr	x0, [sp, #56]
  42d92c:	ldrb	w1, [x0, #137]
  42d930:	orr	w1, w1, #0x2
  42d934:	strb	w1, [x0, #137]
  42d938:	ldr	x0, [sp, #56]
  42d93c:	str	x0, [sp, #104]
  42d940:	ldr	x0, [sp, #56]
  42d944:	ldrb	w0, [x0, #137]
  42d948:	and	w0, w0, #0x20
  42d94c:	and	w0, w0, #0xff
  42d950:	cmp	w0, #0x0
  42d954:	b.ne	42d970 <notice_finished_file@@Base+0x550>  // b.any
  42d958:	ldr	x0, [sp, #56]
  42d95c:	ldrb	w0, [x0, #137]
  42d960:	and	w0, w0, #0x40
  42d964:	and	w0, w0, #0xff
  42d968:	cmp	w0, #0x0
  42d96c:	b.ne	42da18 <notice_finished_file@@Base+0x5f8>  // b.any
  42d970:	ldr	w1, [sp, #52]
  42d974:	ldr	x0, [sp, #56]
  42d978:	bl	42b6c8 <show_goal_error@@Base+0x118>
  42d97c:	str	w0, [sp, #132]
  42d980:	b	42d990 <notice_finished_file@@Base+0x570>
  42d984:	ldr	x0, [sp, #56]
  42d988:	ldr	x0, [x0, #72]
  42d98c:	str	x0, [sp, #56]
  42d990:	ldr	x0, [sp, #56]
  42d994:	ldr	x0, [x0, #72]
  42d998:	cmp	x0, #0x0
  42d99c:	b.ne	42d984 <notice_finished_file@@Base+0x564>  // b.any
  42d9a0:	ldr	x0, [sp, #56]
  42d9a4:	ldr	x0, [x0, #112]
  42d9a8:	cmp	x0, #0x0
  42d9ac:	b.ne	42d9c0 <notice_finished_file@@Base+0x5a0>  // b.any
  42d9b0:	mov	w1, #0x1                   	// #1
  42d9b4:	ldr	x0, [sp, #56]
  42d9b8:	bl	42e3cc <f_mtime@@Base>
  42d9bc:	b	42d9c8 <notice_finished_file@@Base+0x5a8>
  42d9c0:	ldr	x0, [sp, #56]
  42d9c4:	ldr	x0, [x0, #112]
  42d9c8:	str	x0, [sp, #80]
  42d9cc:	b	42d9dc <notice_finished_file@@Base+0x5bc>
  42d9d0:	ldr	x0, [sp, #56]
  42d9d4:	ldr	x0, [x0, #72]
  42d9d8:	str	x0, [sp, #56]
  42d9dc:	ldr	x0, [sp, #56]
  42d9e0:	ldr	x0, [x0, #72]
  42d9e4:	cmp	x0, #0x0
  42d9e8:	b.ne	42d9d0 <notice_finished_file@@Base+0x5b0>  // b.any
  42d9ec:	ldr	x0, [sp, #80]
  42d9f0:	cmp	x0, #0x1
  42d9f4:	b.eq	42da08 <notice_finished_file@@Base+0x5e8>  // b.none
  42d9f8:	ldr	x1, [sp, #80]
  42d9fc:	ldr	x0, [sp, #40]
  42da00:	cmp	x1, x0
  42da04:	b.ls	42df1c <notice_finished_file@@Base+0xafc>  // b.plast
  42da08:	ldr	x0, [sp, #32]
  42da0c:	mov	w1, #0x1                   	// #1
  42da10:	str	w1, [x0]
  42da14:	b	42df1c <notice_finished_file@@Base+0xafc>
  42da18:	ldr	x0, [sp, #56]
  42da1c:	ldrb	w0, [x0, #137]
  42da20:	and	w0, w0, #0x20
  42da24:	and	w0, w0, #0xff
  42da28:	cmp	w0, #0x0
  42da2c:	b.ne	42db28 <notice_finished_file@@Base+0x708>  // b.any
  42da30:	ldr	x0, [sp, #56]
  42da34:	ldr	x0, [x0, #32]
  42da38:	cmp	x0, #0x0
  42da3c:	b.ne	42db28 <notice_finished_file@@Base+0x708>  // b.any
  42da40:	ldr	x0, [sp, #56]
  42da44:	ldrb	w0, [x0, #137]
  42da48:	and	w0, w0, #0x1
  42da4c:	and	w0, w0, #0xff
  42da50:	cmp	w0, #0x0
  42da54:	b.ne	42db28 <notice_finished_file@@Base+0x708>  // b.any
  42da58:	ldr	w1, [sp, #52]
  42da5c:	ldr	x0, [sp, #56]
  42da60:	bl	4156d4 <try_implicit_rule@@Base>
  42da64:	cmp	w0, #0x0
  42da68:	b.eq	42dac4 <notice_finished_file@@Base+0x6a4>  // b.none
  42da6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42da70:	add	x0, x0, #0x6dc
  42da74:	ldr	w0, [x0]
  42da78:	and	w0, w0, #0x8
  42da7c:	cmp	w0, #0x0
  42da80:	b.eq	42db18 <notice_finished_file@@Base+0x6f8>  // b.none
  42da84:	ldr	w0, [sp, #52]
  42da88:	bl	4223c8 <print_spaces@@Base>
  42da8c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42da90:	add	x0, x0, #0x660
  42da94:	bl	406e40 <gettext@plt>
  42da98:	mov	x2, x0
  42da9c:	ldr	x0, [sp, #56]
  42daa0:	ldr	x0, [x0]
  42daa4:	mov	x1, x0
  42daa8:	mov	x0, x2
  42daac:	bl	406dc0 <printf@plt>
  42dab0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42dab4:	add	x0, x0, #0x400
  42dab8:	ldr	x0, [x0]
  42dabc:	bl	406c90 <fflush@plt>
  42dac0:	b	42db18 <notice_finished_file@@Base+0x6f8>
  42dac4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42dac8:	add	x0, x0, #0x6dc
  42dacc:	ldr	w0, [x0]
  42dad0:	and	w0, w0, #0x8
  42dad4:	cmp	w0, #0x0
  42dad8:	b.eq	42db18 <notice_finished_file@@Base+0x6f8>  // b.none
  42dadc:	ldr	w0, [sp, #52]
  42dae0:	bl	4223c8 <print_spaces@@Base>
  42dae4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42dae8:	add	x0, x0, #0x688
  42daec:	bl	406e40 <gettext@plt>
  42daf0:	mov	x2, x0
  42daf4:	ldr	x0, [sp, #56]
  42daf8:	ldr	x0, [x0]
  42dafc:	mov	x1, x0
  42db00:	mov	x0, x2
  42db04:	bl	406dc0 <printf@plt>
  42db08:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42db0c:	add	x0, x0, #0x400
  42db10:	ldr	x0, [x0]
  42db14:	bl	406c90 <fflush@plt>
  42db18:	ldr	x0, [sp, #56]
  42db1c:	ldrb	w1, [x0, #137]
  42db20:	orr	w1, w1, #0x1
  42db24:	strb	w1, [x0, #137]
  42db28:	ldr	x0, [sp, #56]
  42db2c:	ldr	x0, [x0, #32]
  42db30:	cmp	x0, #0x0
  42db34:	b.ne	42dbf8 <notice_finished_file@@Base+0x7d8>  // b.any
  42db38:	ldr	x0, [sp, #56]
  42db3c:	ldrb	w0, [x0, #137]
  42db40:	and	w0, w0, #0x8
  42db44:	and	w0, w0, #0xff
  42db48:	cmp	w0, #0x0
  42db4c:	b.ne	42dbf8 <notice_finished_file@@Base+0x7d8>  // b.any
  42db50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42db54:	add	x0, x0, #0xa78
  42db58:	ldr	x0, [x0]
  42db5c:	cmp	x0, #0x0
  42db60:	b.eq	42dbf8 <notice_finished_file@@Base+0x7d8>  // b.none
  42db64:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42db68:	add	x0, x0, #0xa78
  42db6c:	ldr	x0, [x0]
  42db70:	ldr	x0, [x0, #32]
  42db74:	cmp	x0, #0x0
  42db78:	b.eq	42dbf8 <notice_finished_file@@Base+0x7d8>  // b.none
  42db7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42db80:	add	x0, x0, #0x6dc
  42db84:	ldr	w0, [x0]
  42db88:	and	w0, w0, #0x8
  42db8c:	cmp	w0, #0x0
  42db90:	b.eq	42dbd0 <notice_finished_file@@Base+0x7b0>  // b.none
  42db94:	ldr	w0, [sp, #52]
  42db98:	bl	4223c8 <print_spaces@@Base>
  42db9c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42dba0:	add	x0, x0, #0xa30
  42dba4:	bl	406e40 <gettext@plt>
  42dba8:	mov	x2, x0
  42dbac:	ldr	x0, [sp, #56]
  42dbb0:	ldr	x0, [x0]
  42dbb4:	mov	x1, x0
  42dbb8:	mov	x0, x2
  42dbbc:	bl	406dc0 <printf@plt>
  42dbc0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42dbc4:	add	x0, x0, #0x400
  42dbc8:	ldr	x0, [x0]
  42dbcc:	bl	406c90 <fflush@plt>
  42dbd0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42dbd4:	add	x0, x0, #0xa78
  42dbd8:	ldr	x0, [x0]
  42dbdc:	ldr	x1, [x0, #32]
  42dbe0:	ldr	x0, [sp, #56]
  42dbe4:	str	x1, [x0, #32]
  42dbe8:	b	42dbf8 <notice_finished_file@@Base+0x7d8>
  42dbec:	ldr	x0, [sp, #56]
  42dbf0:	ldr	x0, [x0, #72]
  42dbf4:	str	x0, [sp, #56]
  42dbf8:	ldr	x0, [sp, #56]
  42dbfc:	ldr	x0, [x0, #72]
  42dc00:	cmp	x0, #0x0
  42dc04:	b.ne	42dbec <notice_finished_file@@Base+0x7cc>  // b.any
  42dc08:	ldr	x0, [sp, #56]
  42dc0c:	ldr	x0, [x0, #112]
  42dc10:	cmp	x0, #0x0
  42dc14:	b.ne	42dc28 <notice_finished_file@@Base+0x808>  // b.any
  42dc18:	mov	w1, #0x1                   	// #1
  42dc1c:	ldr	x0, [sp, #56]
  42dc20:	bl	42e3cc <f_mtime@@Base>
  42dc24:	b	42dc30 <notice_finished_file@@Base+0x810>
  42dc28:	ldr	x0, [sp, #56]
  42dc2c:	ldr	x0, [x0, #112]
  42dc30:	str	x0, [sp, #96]
  42dc34:	b	42dc44 <notice_finished_file@@Base+0x824>
  42dc38:	ldr	x0, [sp, #56]
  42dc3c:	ldr	x0, [x0, #72]
  42dc40:	str	x0, [sp, #56]
  42dc44:	ldr	x0, [sp, #56]
  42dc48:	ldr	x0, [x0, #72]
  42dc4c:	cmp	x0, #0x0
  42dc50:	b.ne	42dc38 <notice_finished_file@@Base+0x818>  // b.any
  42dc54:	ldr	x0, [sp, #96]
  42dc58:	cmp	x0, #0x1
  42dc5c:	b.eq	42dc80 <notice_finished_file@@Base+0x860>  // b.none
  42dc60:	ldr	x1, [sp, #96]
  42dc64:	ldr	x0, [sp, #40]
  42dc68:	cmp	x1, x0
  42dc6c:	b.ls	42dc80 <notice_finished_file@@Base+0x860>  // b.plast
  42dc70:	ldr	x0, [sp, #32]
  42dc74:	mov	w1, #0x1                   	// #1
  42dc78:	str	w1, [x0]
  42dc7c:	b	42df20 <notice_finished_file@@Base+0xb00>
  42dc80:	str	wzr, [sp, #116]
  42dc84:	ldr	x0, [sp, #56]
  42dc88:	ldrb	w0, [x0, #136]
  42dc8c:	and	w0, w0, #0xc
  42dc90:	and	w0, w0, #0xff
  42dc94:	cmp	w0, #0x8
  42dc98:	b.eq	42dcc8 <notice_finished_file@@Base+0x8a8>  // b.none
  42dc9c:	ldr	x0, [sp, #56]
  42dca0:	ldrb	w0, [x0, #136]
  42dca4:	and	w0, w0, #0xc
  42dca8:	and	w0, w0, #0xff
  42dcac:	cmp	w0, #0x4
  42dcb0:	b.ne	42dcbc <notice_finished_file@@Base+0x89c>  // b.any
  42dcb4:	ldr	x0, [sp, #56]
  42dcb8:	str	wzr, [x0, #128]
  42dcbc:	mov	w1, #0x0                   	// #0
  42dcc0:	ldr	x0, [sp, #56]
  42dcc4:	bl	40e258 <set_command_state@@Base>
  42dcc8:	str	xzr, [sp, #120]
  42dccc:	ldr	x0, [sp, #56]
  42dcd0:	ldr	x0, [x0, #24]
  42dcd4:	str	x0, [sp, #136]
  42dcd8:	b	42deec <notice_finished_file@@Base+0xacc>
  42dcdc:	ldr	x0, [sp, #136]
  42dce0:	ldr	x0, [x0, #16]
  42dce4:	ldr	x0, [x0, #104]
  42dce8:	cmp	x0, #0x0
  42dcec:	b.eq	42dd00 <notice_finished_file@@Base+0x8e0>  // b.none
  42dcf0:	ldr	x0, [sp, #136]
  42dcf4:	ldr	x0, [x0, #16]
  42dcf8:	ldr	x0, [x0, #104]
  42dcfc:	b	42dd08 <notice_finished_file@@Base+0x8e8>
  42dd00:	ldr	x0, [sp, #136]
  42dd04:	ldr	x0, [x0, #16]
  42dd08:	ldrb	w0, [x0, #137]
  42dd0c:	and	w0, w0, #0x2
  42dd10:	and	w0, w0, #0xff
  42dd14:	cmp	w0, #0x0
  42dd18:	b.eq	42ddd4 <notice_finished_file@@Base+0x9b4>  // b.none
  42dd1c:	ldr	x0, [sp, #56]
  42dd20:	ldr	x0, [x0]
  42dd24:	bl	4066f0 <strlen@plt>
  42dd28:	mov	x19, x0
  42dd2c:	ldr	x0, [sp, #136]
  42dd30:	ldr	x0, [x0, #16]
  42dd34:	ldr	x0, [x0]
  42dd38:	bl	4066f0 <strlen@plt>
  42dd3c:	add	x19, x19, x0
  42dd40:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42dd44:	add	x0, x0, #0x6d0
  42dd48:	bl	406e40 <gettext@plt>
  42dd4c:	mov	x2, x0
  42dd50:	ldr	x0, [sp, #56]
  42dd54:	ldr	x1, [x0]
  42dd58:	ldr	x0, [sp, #136]
  42dd5c:	ldr	x0, [x0, #16]
  42dd60:	ldr	x0, [x0]
  42dd64:	mov	x4, x0
  42dd68:	mov	x3, x1
  42dd6c:	mov	x1, x19
  42dd70:	mov	x0, #0x0                   	// #0
  42dd74:	bl	423e74 <error@@Base>
  42dd78:	ldr	x0, [sp, #120]
  42dd7c:	cmp	x0, #0x0
  42dd80:	b.ne	42ddac <notice_finished_file@@Base+0x98c>  // b.any
  42dd84:	ldr	x0, [sp, #136]
  42dd88:	ldr	x1, [x0]
  42dd8c:	ldr	x0, [sp, #56]
  42dd90:	str	x1, [x0, #24]
  42dd94:	ldr	x0, [sp, #136]
  42dd98:	bl	406c00 <free@plt>
  42dd9c:	ldr	x0, [sp, #56]
  42dda0:	ldr	x0, [x0, #24]
  42dda4:	str	x0, [sp, #136]
  42dda8:	b	42deec <notice_finished_file@@Base+0xacc>
  42ddac:	ldr	x0, [sp, #136]
  42ddb0:	ldr	x1, [x0]
  42ddb4:	ldr	x0, [sp, #120]
  42ddb8:	str	x1, [x0]
  42ddbc:	ldr	x0, [sp, #136]
  42ddc0:	bl	406c00 <free@plt>
  42ddc4:	ldr	x0, [sp, #120]
  42ddc8:	ldr	x0, [x0]
  42ddcc:	str	x0, [sp, #136]
  42ddd0:	b	42deec <notice_finished_file@@Base+0xacc>
  42ddd4:	ldr	x0, [sp, #136]
  42ddd8:	ldr	x0, [x0, #16]
  42dddc:	ldr	x1, [sp, #56]
  42dde0:	str	x1, [x0, #96]
  42dde4:	ldr	x0, [sp, #32]
  42dde8:	ldr	w0, [x0]
  42ddec:	str	w0, [sp, #76]
  42ddf0:	ldr	x0, [sp, #136]
  42ddf4:	ldr	x0, [x0, #16]
  42ddf8:	add	x1, sp, #0x4c
  42ddfc:	mov	x3, x1
  42de00:	ldr	x2, [sp, #40]
  42de04:	ldr	w1, [sp, #52]
  42de08:	bl	42d8e0 <notice_finished_file@@Base+0x4c0>
  42de0c:	str	w0, [sp, #92]
  42de10:	ldr	w1, [sp, #92]
  42de14:	ldr	w0, [sp, #132]
  42de18:	cmp	w1, w0
  42de1c:	b.ls	42de28 <notice_finished_file@@Base+0xa08>  // b.plast
  42de20:	ldr	w0, [sp, #92]
  42de24:	str	w0, [sp, #132]
  42de28:	ldr	x0, [sp, #136]
  42de2c:	ldrb	w0, [x0, #33]
  42de30:	and	w0, w0, #0x2
  42de34:	and	w0, w0, #0xff
  42de38:	cmp	w0, #0x0
  42de3c:	b.ne	42de64 <notice_finished_file@@Base+0xa44>  // b.any
  42de40:	ldr	w1, [sp, #76]
  42de44:	ldr	x0, [sp, #32]
  42de48:	str	w1, [x0]
  42de4c:	b	42de64 <notice_finished_file@@Base+0xa44>
  42de50:	ldr	x0, [sp, #136]
  42de54:	ldr	x0, [x0, #16]
  42de58:	ldr	x1, [x0, #72]
  42de5c:	ldr	x0, [sp, #136]
  42de60:	str	x1, [x0, #16]
  42de64:	ldr	x0, [sp, #136]
  42de68:	ldr	x0, [x0, #16]
  42de6c:	ldr	x0, [x0, #72]
  42de70:	cmp	x0, #0x0
  42de74:	b.ne	42de50 <notice_finished_file@@Base+0xa30>  // b.any
  42de78:	ldr	w0, [sp, #132]
  42de7c:	cmp	w0, #0x0
  42de80:	b.eq	42de98 <notice_finished_file@@Base+0xa78>  // b.none
  42de84:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42de88:	add	x0, x0, #0xa54
  42de8c:	ldr	w0, [x0]
  42de90:	cmp	w0, #0x0
  42de94:	b.eq	42defc <notice_finished_file@@Base+0xadc>  // b.none
  42de98:	ldr	x0, [sp, #136]
  42de9c:	ldr	x0, [x0, #16]
  42dea0:	ldrb	w0, [x0, #136]
  42dea4:	and	w0, w0, #0xc
  42dea8:	and	w0, w0, #0xff
  42deac:	cmp	w0, #0x8
  42deb0:	b.eq	42ded0 <notice_finished_file@@Base+0xab0>  // b.none
  42deb4:	ldr	x0, [sp, #136]
  42deb8:	ldr	x0, [x0, #16]
  42debc:	ldrb	w0, [x0, #136]
  42dec0:	and	w0, w0, #0xc
  42dec4:	and	w0, w0, #0xff
  42dec8:	cmp	w0, #0x4
  42decc:	b.ne	42ded8 <notice_finished_file@@Base+0xab8>  // b.any
  42ded0:	mov	w0, #0x1                   	// #1
  42ded4:	str	w0, [sp, #116]
  42ded8:	ldr	x0, [sp, #136]
  42dedc:	str	x0, [sp, #120]
  42dee0:	ldr	x0, [sp, #136]
  42dee4:	ldr	x0, [x0]
  42dee8:	str	x0, [sp, #136]
  42deec:	ldr	x0, [sp, #136]
  42def0:	cmp	x0, #0x0
  42def4:	b.ne	42dcdc <notice_finished_file@@Base+0x8bc>  // b.any
  42def8:	b	42df00 <notice_finished_file@@Base+0xae0>
  42defc:	nop
  42df00:	ldr	w0, [sp, #116]
  42df04:	cmp	w0, #0x0
  42df08:	b.eq	42df20 <notice_finished_file@@Base+0xb00>  // b.none
  42df0c:	mov	w1, #0x1                   	// #1
  42df10:	ldr	x0, [sp, #56]
  42df14:	bl	40e258 <set_command_state@@Base>
  42df18:	b	42df20 <notice_finished_file@@Base+0xb00>
  42df1c:	nop
  42df20:	ldr	x0, [sp, #56]
  42df24:	ldr	x0, [x0, #104]
  42df28:	cmp	x0, #0x0
  42df2c:	b.eq	42df3c <notice_finished_file@@Base+0xb1c>  // b.none
  42df30:	ldr	x0, [sp, #56]
  42df34:	ldr	x0, [x0, #104]
  42df38:	b	42df40 <notice_finished_file@@Base+0xb20>
  42df3c:	ldr	x0, [sp, #56]
  42df40:	ldrb	w1, [x0, #137]
  42df44:	and	w1, w1, #0xfffffffd
  42df48:	strb	w1, [x0, #137]
  42df4c:	ldr	x0, [sp, #104]
  42df50:	ldr	x0, [x0, #104]
  42df54:	cmp	x0, #0x0
  42df58:	b.eq	42df68 <notice_finished_file@@Base+0xb48>  // b.none
  42df5c:	ldr	x0, [sp, #104]
  42df60:	ldr	x0, [x0, #104]
  42df64:	b	42df6c <notice_finished_file@@Base+0xb4c>
  42df68:	ldr	x0, [sp, #104]
  42df6c:	ldrb	w1, [x0, #137]
  42df70:	and	w1, w1, #0xfffffffd
  42df74:	strb	w1, [x0, #137]
  42df78:	ldr	w0, [sp, #132]
  42df7c:	ldr	x19, [sp, #16]
  42df80:	ldp	x29, x30, [sp], #144
  42df84:	ret
  42df88:	stp	x29, x30, [sp, #-192]!
  42df8c:	mov	x29, sp
  42df90:	str	x0, [sp, #24]
  42df94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42df98:	add	x0, x0, #0x6d8
  42df9c:	ldr	w0, [x0]
  42dfa0:	cmp	w0, #0x0
  42dfa4:	b.ne	42dfd4 <notice_finished_file@@Base+0xbb4>  // b.any
  42dfa8:	ldr	x0, [sp, #24]
  42dfac:	ldr	x0, [x0]
  42dfb0:	bl	4066f0 <strlen@plt>
  42dfb4:	mov	x1, x0
  42dfb8:	ldr	x0, [sp, #24]
  42dfbc:	ldr	x0, [x0]
  42dfc0:	mov	x3, x0
  42dfc4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42dfc8:	add	x2, x0, #0xa58
  42dfcc:	mov	w0, #0x0                   	// #0
  42dfd0:	bl	423cc8 <message@@Base>
  42dfd4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42dfd8:	add	x0, x0, #0xa50
  42dfdc:	ldr	w0, [x0]
  42dfe0:	cmp	w0, #0x0
  42dfe4:	b.eq	42dff0 <notice_finished_file@@Base+0xbd0>  // b.none
  42dfe8:	mov	w0, #0x0                   	// #0
  42dfec:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42dff0:	ldr	x0, [sp, #24]
  42dff4:	ldr	x0, [x0]
  42dff8:	bl	407068 <ar_name@@Base>
  42dffc:	cmp	w0, #0x0
  42e000:	b.eq	42e028 <notice_finished_file@@Base+0xc08>  // b.none
  42e004:	ldr	x0, [sp, #24]
  42e008:	ldr	x0, [x0]
  42e00c:	bl	4072e0 <ar_touch@@Base>
  42e010:	cmp	w0, #0x0
  42e014:	b.eq	42e020 <notice_finished_file@@Base+0xc00>  // b.none
  42e018:	mov	w0, #0x3                   	// #3
  42e01c:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e020:	mov	w0, #0x0                   	// #0
  42e024:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e028:	nop
  42e02c:	ldr	x0, [sp, #24]
  42e030:	ldr	x0, [x0]
  42e034:	mov	w2, #0x1b6                 	// #438
  42e038:	mov	w1, #0x42                  	// #66
  42e03c:	bl	406960 <open@plt>
  42e040:	str	w0, [sp, #188]
  42e044:	ldr	w0, [sp, #188]
  42e048:	cmn	w0, #0x1
  42e04c:	b.ne	42e060 <notice_finished_file@@Base+0xc40>  // b.any
  42e050:	bl	406dd0 <__errno_location@plt>
  42e054:	ldr	w0, [x0]
  42e058:	cmp	w0, #0x4
  42e05c:	b.eq	42e02c <notice_finished_file@@Base+0xc0c>  // b.none
  42e060:	ldr	w0, [sp, #188]
  42e064:	cmp	w0, #0x0
  42e068:	b.ge	42e08c <notice_finished_file@@Base+0xc6c>  // b.tcont
  42e06c:	ldr	x0, [sp, #24]
  42e070:	ldr	x0, [x0]
  42e074:	mov	x1, x0
  42e078:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e07c:	add	x0, x0, #0xa68
  42e080:	bl	4242c0 <perror_with_name@@Base>
  42e084:	mov	w0, #0x3                   	// #3
  42e088:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e08c:	mov	w0, #0x78                  	// #120
  42e090:	strb	w0, [sp, #175]
  42e094:	nop
  42e098:	add	x0, sp, #0x28
  42e09c:	mov	x1, x0
  42e0a0:	ldr	w0, [sp, #188]
  42e0a4:	bl	436b80 <__libc_csu_fini@@Base+0x28>
  42e0a8:	str	w0, [sp, #184]
  42e0ac:	ldr	w0, [sp, #184]
  42e0b0:	cmn	w0, #0x1
  42e0b4:	b.ne	42e0c8 <notice_finished_file@@Base+0xca8>  // b.any
  42e0b8:	bl	406dd0 <__errno_location@plt>
  42e0bc:	ldr	w0, [x0]
  42e0c0:	cmp	w0, #0x4
  42e0c4:	b.eq	42e098 <notice_finished_file@@Base+0xc78>  // b.none
  42e0c8:	ldr	w0, [sp, #184]
  42e0cc:	cmp	w0, #0x0
  42e0d0:	b.ge	42e0f4 <notice_finished_file@@Base+0xcd4>  // b.tcont
  42e0d4:	ldr	x0, [sp, #24]
  42e0d8:	ldr	x0, [x0]
  42e0dc:	mov	x1, x0
  42e0e0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e0e4:	add	x0, x0, #0xa78
  42e0e8:	bl	4242c0 <perror_with_name@@Base>
  42e0ec:	mov	w0, #0x3                   	// #3
  42e0f0:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e0f4:	nop
  42e0f8:	add	x0, sp, #0xaf
  42e0fc:	mov	x2, #0x1                   	// #1
  42e100:	mov	x1, x0
  42e104:	ldr	w0, [sp, #188]
  42e108:	bl	406cf0 <read@plt>
  42e10c:	str	w0, [sp, #184]
  42e110:	ldr	w0, [sp, #184]
  42e114:	cmn	w0, #0x1
  42e118:	b.ne	42e12c <notice_finished_file@@Base+0xd0c>  // b.any
  42e11c:	bl	406dd0 <__errno_location@plt>
  42e120:	ldr	w0, [x0]
  42e124:	cmp	w0, #0x4
  42e128:	b.eq	42e0f8 <notice_finished_file@@Base+0xcd8>  // b.none
  42e12c:	ldr	w0, [sp, #184]
  42e130:	cmp	w0, #0x0
  42e134:	b.ge	42e158 <notice_finished_file@@Base+0xd38>  // b.tcont
  42e138:	ldr	x0, [sp, #24]
  42e13c:	ldr	x0, [x0]
  42e140:	mov	x1, x0
  42e144:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e148:	add	x0, x0, #0xa88
  42e14c:	bl	4242c0 <perror_with_name@@Base>
  42e150:	mov	w0, #0x3                   	// #3
  42e154:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e158:	nop
  42e15c:	mov	w2, #0x0                   	// #0
  42e160:	mov	x1, #0x0                   	// #0
  42e164:	ldr	w0, [sp, #188]
  42e168:	bl	406860 <lseek@plt>
  42e16c:	str	x0, [sp, #176]
  42e170:	ldr	x0, [sp, #176]
  42e174:	cmn	x0, #0x1
  42e178:	b.ne	42e18c <notice_finished_file@@Base+0xd6c>  // b.any
  42e17c:	bl	406dd0 <__errno_location@plt>
  42e180:	ldr	w0, [x0]
  42e184:	cmp	w0, #0x4
  42e188:	b.eq	42e15c <notice_finished_file@@Base+0xd3c>  // b.none
  42e18c:	ldr	x0, [sp, #176]
  42e190:	cmp	x0, #0x0
  42e194:	b.ge	42e1b8 <notice_finished_file@@Base+0xd98>  // b.tcont
  42e198:	ldr	x0, [sp, #24]
  42e19c:	ldr	x0, [x0]
  42e1a0:	mov	x1, x0
  42e1a4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e1a8:	add	x0, x0, #0xa98
  42e1ac:	bl	4242c0 <perror_with_name@@Base>
  42e1b0:	mov	w0, #0x3                   	// #3
  42e1b4:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e1b8:	nop
  42e1bc:	add	x0, sp, #0xaf
  42e1c0:	mov	x2, #0x1                   	// #1
  42e1c4:	mov	x1, x0
  42e1c8:	ldr	w0, [sp, #188]
  42e1cc:	bl	406b10 <write@plt>
  42e1d0:	str	w0, [sp, #184]
  42e1d4:	ldr	w0, [sp, #184]
  42e1d8:	cmn	w0, #0x1
  42e1dc:	b.ne	42e1f0 <notice_finished_file@@Base+0xdd0>  // b.any
  42e1e0:	bl	406dd0 <__errno_location@plt>
  42e1e4:	ldr	w0, [x0]
  42e1e8:	cmp	w0, #0x4
  42e1ec:	b.eq	42e1bc <notice_finished_file@@Base+0xd9c>  // b.none
  42e1f0:	ldr	w0, [sp, #184]
  42e1f4:	cmp	w0, #0x0
  42e1f8:	b.ge	42e21c <notice_finished_file@@Base+0xdfc>  // b.tcont
  42e1fc:	ldr	x0, [sp, #24]
  42e200:	ldr	x0, [x0]
  42e204:	mov	x1, x0
  42e208:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e20c:	add	x0, x0, #0xaa8
  42e210:	bl	4242c0 <perror_with_name@@Base>
  42e214:	mov	w0, #0x3                   	// #3
  42e218:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e21c:	ldr	x0, [sp, #88]
  42e220:	cmp	x0, #0x0
  42e224:	b.ne	42e294 <notice_finished_file@@Base+0xe74>  // b.any
  42e228:	ldr	w0, [sp, #188]
  42e22c:	bl	406ac0 <close@plt>
  42e230:	nop
  42e234:	ldr	x0, [sp, #24]
  42e238:	ldr	x0, [x0]
  42e23c:	mov	w2, #0x1b6                 	// #438
  42e240:	mov	w1, #0x202                 	// #514
  42e244:	bl	406960 <open@plt>
  42e248:	str	w0, [sp, #188]
  42e24c:	ldr	w0, [sp, #188]
  42e250:	cmn	w0, #0x1
  42e254:	b.ne	42e268 <notice_finished_file@@Base+0xe48>  // b.any
  42e258:	bl	406dd0 <__errno_location@plt>
  42e25c:	ldr	w0, [x0]
  42e260:	cmp	w0, #0x4
  42e264:	b.eq	42e234 <notice_finished_file@@Base+0xe14>  // b.none
  42e268:	ldr	w0, [sp, #188]
  42e26c:	cmp	w0, #0x0
  42e270:	b.ge	42e294 <notice_finished_file@@Base+0xe74>  // b.tcont
  42e274:	ldr	x0, [sp, #24]
  42e278:	ldr	x0, [x0]
  42e27c:	mov	x1, x0
  42e280:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e284:	add	x0, x0, #0xa68
  42e288:	bl	4242c0 <perror_with_name@@Base>
  42e28c:	mov	w0, #0x3                   	// #3
  42e290:	b	42e2a0 <notice_finished_file@@Base+0xe80>
  42e294:	ldr	w0, [sp, #188]
  42e298:	bl	406ac0 <close@plt>
  42e29c:	mov	w0, #0x0                   	// #0
  42e2a0:	ldp	x29, x30, [sp], #192
  42e2a4:	ret
  42e2a8:	stp	x29, x30, [sp, #-32]!
  42e2ac:	mov	x29, sp
  42e2b0:	str	x0, [sp, #24]
  42e2b4:	ldr	x0, [sp, #24]
  42e2b8:	ldr	x0, [x0, #32]
  42e2bc:	cmp	x0, #0x0
  42e2c0:	b.ne	42e364 <notice_finished_file@@Base+0xf44>  // b.any
  42e2c4:	ldr	x0, [sp, #24]
  42e2c8:	ldrb	w0, [x0, #137]
  42e2cc:	and	w0, w0, #0x20
  42e2d0:	and	w0, w0, #0xff
  42e2d4:	cmp	w0, #0x0
  42e2d8:	b.eq	42e2f0 <notice_finished_file@@Base+0xed0>  // b.none
  42e2dc:	ldr	x0, [sp, #24]
  42e2e0:	ldrb	w1, [x0, #136]
  42e2e4:	and	w1, w1, #0xfffffffc
  42e2e8:	strb	w1, [x0, #136]
  42e2ec:	b	42e3bc <notice_finished_file@@Base+0xf9c>
  42e2f0:	ldr	x0, [sp, #24]
  42e2f4:	ldrb	w0, [x0, #137]
  42e2f8:	and	w0, w0, #0x8
  42e2fc:	and	w0, w0, #0xff
  42e300:	cmp	w0, #0x0
  42e304:	b.eq	42e31c <notice_finished_file@@Base+0xefc>  // b.none
  42e308:	ldr	x0, [sp, #24]
  42e30c:	ldrb	w1, [x0, #136]
  42e310:	and	w1, w1, #0xfffffffc
  42e314:	strb	w1, [x0, #136]
  42e318:	b	42e3bc <notice_finished_file@@Base+0xf9c>
  42e31c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42e320:	add	x0, x0, #0x71c
  42e324:	ldr	w0, [x0]
  42e328:	cmp	w0, #0x0
  42e32c:	b.eq	42e348 <notice_finished_file@@Base+0xf28>  // b.none
  42e330:	ldr	x0, [sp, #24]
  42e334:	ldrb	w0, [x0, #138]
  42e338:	and	w0, w0, #0x1
  42e33c:	and	w0, w0, #0xff
  42e340:	cmp	w0, #0x0
  42e344:	b.ne	42e350 <notice_finished_file@@Base+0xf30>  // b.any
  42e348:	ldr	x0, [sp, #24]
  42e34c:	bl	42b8e8 <show_goal_error@@Base+0x338>
  42e350:	ldr	x0, [sp, #24]
  42e354:	ldrb	w1, [x0, #136]
  42e358:	orr	w1, w1, #0x3
  42e35c:	strb	w1, [x0, #136]
  42e360:	b	42e3bc <notice_finished_file@@Base+0xf9c>
  42e364:	ldr	x0, [sp, #24]
  42e368:	ldr	x0, [x0, #32]
  42e36c:	bl	408ee0 <chop_commands@@Base>
  42e370:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e374:	add	x0, x0, #0xb1c
  42e378:	ldr	w0, [x0]
  42e37c:	cmp	w0, #0x0
  42e380:	b.eq	42e3a0 <notice_finished_file@@Base+0xf80>  // b.none
  42e384:	ldr	x0, [sp, #24]
  42e388:	ldr	x0, [x0, #32]
  42e38c:	ldrb	w0, [x0, #51]
  42e390:	and	w0, w0, #0x1
  42e394:	and	w0, w0, #0xff
  42e398:	cmp	w0, #0x0
  42e39c:	b.eq	42e3ac <notice_finished_file@@Base+0xf8c>  // b.none
  42e3a0:	ldr	x0, [sp, #24]
  42e3a4:	bl	4093ac <execute_file_commands@@Base>
  42e3a8:	b	42e3c4 <notice_finished_file@@Base+0xfa4>
  42e3ac:	ldr	x0, [sp, #24]
  42e3b0:	ldrb	w1, [x0, #136]
  42e3b4:	and	w1, w1, #0xfffffffc
  42e3b8:	strb	w1, [x0, #136]
  42e3bc:	ldr	x0, [sp, #24]
  42e3c0:	bl	42d420 <notice_finished_file@@Base>
  42e3c4:	ldp	x29, x30, [sp], #32
  42e3c8:	ret

000000000042e3cc <f_mtime@@Base>:
  42e3cc:	stp	x29, x30, [sp, #-272]!
  42e3d0:	mov	x29, sp
  42e3d4:	str	x19, [sp, #16]
  42e3d8:	str	x0, [x29, #40]
  42e3dc:	str	w1, [x29, #36]
  42e3e0:	ldr	x0, [x29, #40]
  42e3e4:	ldr	x0, [x0]
  42e3e8:	bl	407068 <ar_name@@Base>
  42e3ec:	cmp	w0, #0x0
  42e3f0:	b.eq	42e628 <f_mtime@@Base+0x25c>  // b.none
  42e3f4:	ldr	x0, [x29, #40]
  42e3f8:	ldr	x0, [x0]
  42e3fc:	add	x2, x29, #0xa0
  42e400:	add	x1, x29, #0xa8
  42e404:	bl	407154 <ar_parse_name@@Base>
  42e408:	ldr	x0, [x29, #168]
  42e40c:	bl	40c5bc <lookup_file@@Base>
  42e410:	str	x0, [x29, #264]
  42e414:	ldr	x0, [x29, #264]
  42e418:	cmp	x0, #0x0
  42e41c:	b.ne	42e430 <f_mtime@@Base+0x64>  // b.any
  42e420:	ldr	x0, [x29, #168]
  42e424:	bl	430d78 <strcache_add@@Base>
  42e428:	bl	40c678 <enter_file@@Base>
  42e42c:	str	x0, [x29, #264]
  42e430:	ldr	w1, [x29, #36]
  42e434:	ldr	x0, [x29, #264]
  42e438:	bl	42e3cc <f_mtime@@Base>
  42e43c:	str	x0, [x29, #176]
  42e440:	b	42e450 <f_mtime@@Base+0x84>
  42e444:	ldr	x0, [x29, #264]
  42e448:	ldr	x0, [x0, #72]
  42e44c:	str	x0, [x29, #264]
  42e450:	ldr	x0, [x29, #264]
  42e454:	ldr	x0, [x0, #72]
  42e458:	cmp	x0, #0x0
  42e45c:	b.ne	42e444 <f_mtime@@Base+0x78>  // b.any
  42e460:	ldr	w0, [x29, #36]
  42e464:	cmp	w0, #0x0
  42e468:	b.eq	42e5bc <f_mtime@@Base+0x1f0>  // b.none
  42e46c:	ldr	x0, [x29, #264]
  42e470:	ldr	x0, [x0, #8]
  42e474:	ldr	x1, [x29, #168]
  42e478:	bl	406bc0 <strcmp@plt>
  42e47c:	cmp	w0, #0x0
  42e480:	b.eq	42e5bc <f_mtime@@Base+0x1f0>  // b.none
  42e484:	ldr	x0, [x29, #264]
  42e488:	ldr	x0, [x0, #8]
  42e48c:	bl	4066f0 <strlen@plt>
  42e490:	str	x0, [x29, #240]
  42e494:	ldr	x0, [x29, #160]
  42e498:	bl	4066f0 <strlen@plt>
  42e49c:	str	x0, [x29, #232]
  42e4a0:	ldr	x1, [x29, #240]
  42e4a4:	ldr	x0, [x29, #232]
  42e4a8:	add	x0, x1, x0
  42e4ac:	add	x0, x0, #0x3
  42e4b0:	add	x0, x0, #0xf
  42e4b4:	lsr	x0, x0, #4
  42e4b8:	lsl	x0, x0, #4
  42e4bc:	sub	sp, sp, x0
  42e4c0:	mov	x0, sp
  42e4c4:	add	x0, x0, #0xf
  42e4c8:	lsr	x0, x0, #4
  42e4cc:	lsl	x0, x0, #4
  42e4d0:	str	x0, [x29, #224]
  42e4d4:	ldr	x0, [x29, #264]
  42e4d8:	ldr	x0, [x0, #8]
  42e4dc:	ldr	x2, [x29, #240]
  42e4e0:	mov	x1, x0
  42e4e4:	ldr	x0, [x29, #224]
  42e4e8:	bl	4066b0 <memcpy@plt>
  42e4ec:	ldr	x1, [x29, #224]
  42e4f0:	ldr	x0, [x29, #240]
  42e4f4:	add	x0, x1, x0
  42e4f8:	mov	w1, #0x28                  	// #40
  42e4fc:	strb	w1, [x0]
  42e500:	ldr	x0, [x29, #240]
  42e504:	add	x0, x0, #0x1
  42e508:	ldr	x1, [x29, #224]
  42e50c:	add	x0, x1, x0
  42e510:	ldr	x1, [x29, #160]
  42e514:	ldr	x2, [x29, #232]
  42e518:	bl	4066b0 <memcpy@plt>
  42e51c:	ldr	x1, [x29, #240]
  42e520:	ldr	x0, [x29, #232]
  42e524:	add	x0, x1, x0
  42e528:	add	x0, x0, #0x1
  42e52c:	ldr	x1, [x29, #224]
  42e530:	add	x0, x1, x0
  42e534:	mov	w1, #0x29                  	// #41
  42e538:	strb	w1, [x0]
  42e53c:	ldr	x1, [x29, #240]
  42e540:	ldr	x0, [x29, #232]
  42e544:	add	x0, x1, x0
  42e548:	add	x0, x0, #0x2
  42e54c:	ldr	x1, [x29, #224]
  42e550:	add	x0, x1, x0
  42e554:	strb	wzr, [x0]
  42e558:	ldr	x0, [x29, #264]
  42e55c:	ldr	x1, [x0]
  42e560:	ldr	x0, [x29, #264]
  42e564:	ldr	x0, [x0, #8]
  42e568:	cmp	x1, x0
  42e56c:	b.ne	42e588 <f_mtime@@Base+0x1bc>  // b.any
  42e570:	ldr	x0, [x29, #224]
  42e574:	bl	430d78 <strcache_add@@Base>
  42e578:	mov	x1, x0
  42e57c:	ldr	x0, [x29, #40]
  42e580:	bl	40ceb8 <rename_file@@Base>
  42e584:	b	42e5ac <f_mtime@@Base+0x1e0>
  42e588:	ldr	x0, [x29, #224]
  42e58c:	bl	430d78 <strcache_add@@Base>
  42e590:	mov	x1, x0
  42e594:	ldr	x0, [x29, #40]
  42e598:	bl	40c7b4 <rehash_file@@Base>
  42e59c:	b	42e5ac <f_mtime@@Base+0x1e0>
  42e5a0:	ldr	x0, [x29, #40]
  42e5a4:	ldr	x0, [x0, #72]
  42e5a8:	str	x0, [x29, #40]
  42e5ac:	ldr	x0, [x29, #40]
  42e5b0:	ldr	x0, [x0, #72]
  42e5b4:	cmp	x0, #0x0
  42e5b8:	b.ne	42e5a0 <f_mtime@@Base+0x1d4>  // b.any
  42e5bc:	ldr	x0, [x29, #168]
  42e5c0:	bl	406c00 <free@plt>
  42e5c4:	ldr	x0, [x29, #40]
  42e5c8:	ldrb	w1, [x0, #136]
  42e5cc:	orr	w1, w1, #0xffffff80
  42e5d0:	strb	w1, [x0, #136]
  42e5d4:	ldr	x0, [x29, #176]
  42e5d8:	cmp	x0, #0x1
  42e5dc:	b.ne	42e5e8 <f_mtime@@Base+0x21c>  // b.any
  42e5e0:	mov	x0, #0x1                   	// #1
  42e5e4:	b	42ea78 <f_mtime@@Base+0x6ac>
  42e5e8:	ldr	x0, [x29, #40]
  42e5ec:	ldr	x0, [x0, #8]
  42e5f0:	bl	407224 <ar_member_date@@Base>
  42e5f4:	str	x0, [x29, #216]
  42e5f8:	ldr	x0, [x29, #216]
  42e5fc:	cmn	x0, #0x1
  42e600:	b.eq	42e61c <f_mtime@@Base+0x250>  // b.none
  42e604:	ldr	x0, [x29, #40]
  42e608:	ldr	x0, [x0, #8]
  42e60c:	mov	x2, #0x0                   	// #0
  42e610:	ldr	x1, [x29, #216]
  42e614:	bl	40e2fc <file_timestamp_cons@@Base>
  42e618:	b	42e620 <f_mtime@@Base+0x254>
  42e61c:	mov	x0, #0x1                   	// #1
  42e620:	str	x0, [x29, #176]
  42e624:	b	42e7d4 <f_mtime@@Base+0x408>
  42e628:	ldr	x0, [x29, #40]
  42e62c:	ldr	x0, [x0]
  42e630:	bl	42ea88 <f_mtime@@Base+0x6bc>
  42e634:	str	x0, [x29, #176]
  42e638:	ldr	x0, [x29, #176]
  42e63c:	cmp	x0, #0x1
  42e640:	b.ne	42e7d4 <f_mtime@@Base+0x408>  // b.any
  42e644:	ldr	w0, [x29, #36]
  42e648:	cmp	w0, #0x0
  42e64c:	b.eq	42e7d4 <f_mtime@@Base+0x408>  // b.none
  42e650:	ldr	x0, [x29, #40]
  42e654:	ldrb	w0, [x0, #138]
  42e658:	and	w0, w0, #0x2
  42e65c:	and	w0, w0, #0xff
  42e660:	cmp	w0, #0x0
  42e664:	b.ne	42e7d4 <f_mtime@@Base+0x408>  // b.any
  42e668:	ldr	x0, [x29, #40]
  42e66c:	ldr	x0, [x0]
  42e670:	add	x1, x29, #0xb0
  42e674:	mov	x3, #0x0                   	// #0
  42e678:	mov	x2, #0x0                   	// #0
  42e67c:	bl	4351e0 <vpath_search@@Base>
  42e680:	str	x0, [x29, #256]
  42e684:	ldr	x0, [x29, #256]
  42e688:	cmp	x0, #0x0
  42e68c:	b.ne	42e6dc <f_mtime@@Base+0x310>  // b.any
  42e690:	ldr	x0, [x29, #40]
  42e694:	ldr	x0, [x0]
  42e698:	ldrb	w0, [x0]
  42e69c:	cmp	w0, #0x2d
  42e6a0:	b.ne	42e7d4 <f_mtime@@Base+0x408>  // b.any
  42e6a4:	ldr	x0, [x29, #40]
  42e6a8:	ldr	x0, [x0]
  42e6ac:	add	x0, x0, #0x1
  42e6b0:	ldrb	w0, [x0]
  42e6b4:	cmp	w0, #0x6c
  42e6b8:	b.ne	42e7d4 <f_mtime@@Base+0x408>  // b.any
  42e6bc:	ldr	x0, [x29, #40]
  42e6c0:	ldr	x0, [x0]
  42e6c4:	add	x1, x29, #0xb0
  42e6c8:	bl	42ed30 <f_mtime@@Base+0x964>
  42e6cc:	str	x0, [x29, #256]
  42e6d0:	ldr	x0, [x29, #256]
  42e6d4:	cmp	x0, #0x0
  42e6d8:	b.eq	42e7d4 <f_mtime@@Base+0x408>  // b.none
  42e6dc:	ldr	x0, [x29, #176]
  42e6e0:	cmp	x0, #0x0
  42e6e4:	b.eq	42e6f4 <f_mtime@@Base+0x328>  // b.none
  42e6e8:	ldr	x1, [x29, #176]
  42e6ec:	ldr	x0, [x29, #40]
  42e6f0:	str	x1, [x0, #112]
  42e6f4:	ldr	x0, [x29, #256]
  42e6f8:	bl	4066f0 <strlen@plt>
  42e6fc:	mov	x19, x0
  42e700:	ldr	x0, [x29, #40]
  42e704:	ldr	x0, [x0]
  42e708:	bl	4066f0 <strlen@plt>
  42e70c:	sub	x0, x19, x0
  42e710:	sub	x0, x0, #0x1
  42e714:	str	x0, [x29, #248]
  42e718:	ldr	x1, [x29, #248]
  42e71c:	ldr	x0, [x29, #256]
  42e720:	bl	434cec <gpath_search@@Base>
  42e724:	cmp	w0, #0x0
  42e728:	b.eq	42e784 <f_mtime@@Base+0x3b8>  // b.none
  42e72c:	ldr	x1, [x29, #256]
  42e730:	ldr	x0, [x29, #40]
  42e734:	bl	40ceb8 <rename_file@@Base>
  42e738:	b	42e748 <f_mtime@@Base+0x37c>
  42e73c:	ldr	x0, [x29, #40]
  42e740:	ldr	x0, [x0, #72]
  42e744:	str	x0, [x29, #40]
  42e748:	ldr	x0, [x29, #40]
  42e74c:	ldr	x0, [x0, #72]
  42e750:	cmp	x0, #0x0
  42e754:	b.ne	42e73c <f_mtime@@Base+0x370>  // b.any
  42e758:	ldr	x0, [x29, #40]
  42e75c:	ldr	x0, [x0, #112]
  42e760:	cmp	x0, #0x0
  42e764:	b.ne	42e778 <f_mtime@@Base+0x3ac>  // b.any
  42e768:	mov	w1, #0x1                   	// #1
  42e76c:	ldr	x0, [x29, #40]
  42e770:	bl	42e3cc <f_mtime@@Base>
  42e774:	b	42ea78 <f_mtime@@Base+0x6ac>
  42e778:	ldr	x0, [x29, #40]
  42e77c:	ldr	x0, [x0, #112]
  42e780:	b	42ea78 <f_mtime@@Base+0x6ac>
  42e784:	ldr	x1, [x29, #256]
  42e788:	ldr	x0, [x29, #40]
  42e78c:	bl	40c7b4 <rehash_file@@Base>
  42e790:	b	42e7a0 <f_mtime@@Base+0x3d4>
  42e794:	ldr	x0, [x29, #40]
  42e798:	ldr	x0, [x0, #72]
  42e79c:	str	x0, [x29, #40]
  42e7a0:	ldr	x0, [x29, #40]
  42e7a4:	ldr	x0, [x0, #72]
  42e7a8:	cmp	x0, #0x0
  42e7ac:	b.ne	42e794 <f_mtime@@Base+0x3c8>  // b.any
  42e7b0:	ldr	x0, [x29, #176]
  42e7b4:	cmp	x0, #0x2
  42e7b8:	b.eq	42e7d4 <f_mtime@@Base+0x408>  // b.none
  42e7bc:	ldr	x0, [x29, #176]
  42e7c0:	cmn	x0, #0x1
  42e7c4:	b.eq	42e7d4 <f_mtime@@Base+0x408>  // b.none
  42e7c8:	ldr	x0, [x29, #256]
  42e7cc:	bl	42ea88 <f_mtime@@Base+0x6bc>
  42e7d0:	str	x0, [x29, #176]
  42e7d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e7d8:	add	x0, x0, #0xb18
  42e7dc:	ldr	w0, [x0]
  42e7e0:	cmp	w0, #0x0
  42e7e4:	b.ne	42e99c <f_mtime@@Base+0x5d0>  // b.any
  42e7e8:	ldr	x0, [x29, #176]
  42e7ec:	cmp	x0, #0x1
  42e7f0:	b.eq	42e99c <f_mtime@@Base+0x5d0>  // b.none
  42e7f4:	ldr	x0, [x29, #176]
  42e7f8:	cmn	x0, #0x1
  42e7fc:	b.eq	42e99c <f_mtime@@Base+0x5d0>  // b.none
  42e800:	ldr	x0, [x29, #40]
  42e804:	ldrb	w0, [x0, #137]
  42e808:	and	w0, w0, #0x4
  42e80c:	and	w0, w0, #0xff
  42e810:	cmp	w0, #0x0
  42e814:	b.ne	42e99c <f_mtime@@Base+0x5d0>  // b.any
  42e818:	ldr	x0, [x29, #176]
  42e81c:	str	x0, [x29, #208]
  42e820:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e824:	add	x0, x0, #0xa8
  42e828:	ldr	x0, [x0]
  42e82c:	ldr	x1, [x29, #208]
  42e830:	cmp	x1, x0
  42e834:	b.ls	42e99c <f_mtime@@Base+0x5d0>  // b.plast
  42e838:	add	x0, x29, #0x9c
  42e83c:	bl	40e41c <file_timestamp_now@@Base>
  42e840:	str	x0, [x29, #200]
  42e844:	ldr	w0, [x29, #156]
  42e848:	sub	w0, w0, #0x1
  42e84c:	sxtw	x1, w0
  42e850:	ldr	x0, [x29, #200]
  42e854:	add	x1, x1, x0
  42e858:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e85c:	add	x0, x0, #0xa8
  42e860:	str	x1, [x0]
  42e864:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e868:	add	x0, x0, #0xa8
  42e86c:	ldr	x0, [x0]
  42e870:	ldr	x1, [x29, #208]
  42e874:	cmp	x1, x0
  42e878:	b.ls	42e99c <f_mtime@@Base+0x5d0>  // b.plast
  42e87c:	ldr	x0, [x29, #176]
  42e880:	sub	x0, x0, #0x3
  42e884:	lsr	x1, x0, #30
  42e888:	ldr	x0, [x29, #200]
  42e88c:	sub	x0, x0, #0x3
  42e890:	lsr	x0, x0, #30
  42e894:	sub	x0, x1, x0
  42e898:	fmov	d0, x0
  42e89c:	ucvtf	d1, d0
  42e8a0:	ldr	x0, [x29, #176]
  42e8a4:	sub	w0, w0, #0x3
  42e8a8:	and	w1, w0, #0x3fffffff
  42e8ac:	ldr	x0, [x29, #200]
  42e8b0:	sub	w0, w0, #0x3
  42e8b4:	and	w0, w0, #0x3fffffff
  42e8b8:	sub	w0, w1, w0
  42e8bc:	scvtf	d0, w0
  42e8c0:	mov	x0, #0xcd6500000000        	// #225833675390976
  42e8c4:	movk	x0, #0x41cd, lsl #48
  42e8c8:	fmov	d2, x0
  42e8cc:	fdiv	d0, d0, d2
  42e8d0:	fadd	d0, d1, d0
  42e8d4:	str	d0, [x29, #192]
  42e8d8:	ldr	d0, [x29, #192]
  42e8dc:	mov	x0, #0xc00000000000        	// #211106232532992
  42e8e0:	movk	x0, #0x4058, lsl #48
  42e8e4:	fmov	d1, x0
  42e8e8:	fcmpe	d0, d1
  42e8ec:	b.lt	42e928 <f_mtime@@Base+0x55c>  // b.tstop
  42e8f0:	ldr	d0, [x29, #192]
  42e8f4:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  42e8f8:	fmov	d1, x0
  42e8fc:	fcmpe	d0, d1
  42e900:	b.hi	42e928 <f_mtime@@Base+0x55c>  // b.pmore
  42e904:	ldr	d0, [x29, #192]
  42e908:	fcvtzu	x0, d0
  42e90c:	add	x3, x29, #0x38
  42e910:	mov	x2, x0
  42e914:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e918:	add	x1, x0, #0xab8
  42e91c:	mov	x0, x3
  42e920:	bl	406790 <sprintf@plt>
  42e924:	b	42e940 <f_mtime@@Base+0x574>
  42e928:	add	x2, x29, #0x38
  42e92c:	ldr	d0, [x29, #192]
  42e930:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e934:	add	x1, x0, #0xac0
  42e938:	mov	x0, x2
  42e93c:	bl	406790 <sprintf@plt>
  42e940:	ldr	x0, [x29, #40]
  42e944:	ldr	x0, [x0]
  42e948:	bl	4066f0 <strlen@plt>
  42e94c:	mov	x19, x0
  42e950:	add	x0, x29, #0x38
  42e954:	bl	4066f0 <strlen@plt>
  42e958:	add	x19, x19, x0
  42e95c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42e960:	add	x0, x0, #0xac8
  42e964:	bl	406e40 <gettext@plt>
  42e968:	mov	x2, x0
  42e96c:	ldr	x0, [x29, #40]
  42e970:	ldr	x0, [x0]
  42e974:	add	x1, x29, #0x38
  42e978:	mov	x4, x1
  42e97c:	mov	x3, x0
  42e980:	mov	x1, x19
  42e984:	mov	x0, #0x0                   	// #0
  42e988:	bl	423e74 <error@@Base>
  42e98c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42e990:	add	x0, x0, #0xb18
  42e994:	mov	w1, #0x1                   	// #1
  42e998:	str	w1, [x0]
  42e99c:	ldr	x0, [x29, #40]
  42e9a0:	ldr	x0, [x0, #104]
  42e9a4:	cmp	x0, #0x0
  42e9a8:	b.eq	42e9b8 <f_mtime@@Base+0x5ec>  // b.none
  42e9ac:	ldr	x0, [x29, #40]
  42e9b0:	ldr	x0, [x0, #104]
  42e9b4:	str	x0, [x29, #40]
  42e9b8:	ldr	x0, [x29, #40]
  42e9bc:	ldrb	w0, [x0, #137]
  42e9c0:	ubfx	x0, x0, #2, #1
  42e9c4:	and	w0, w0, #0xff
  42e9c8:	str	w0, [x29, #188]
  42e9cc:	ldr	x0, [x29, #176]
  42e9d0:	cmp	x0, #0x1
  42e9d4:	b.eq	42ea30 <f_mtime@@Base+0x664>  // b.none
  42e9d8:	ldr	x0, [x29, #40]
  42e9dc:	ldrb	w0, [x0, #136]
  42e9e0:	and	w0, w0, #0xc
  42e9e4:	and	w0, w0, #0xff
  42e9e8:	cmp	w0, #0x0
  42e9ec:	b.ne	42ea30 <f_mtime@@Base+0x664>  // b.any
  42e9f0:	ldr	x0, [x29, #40]
  42e9f4:	ldrb	w0, [x0, #137]
  42e9f8:	and	w0, w0, #0x1
  42e9fc:	and	w0, w0, #0xff
  42ea00:	cmp	w0, #0x0
  42ea04:	b.ne	42ea30 <f_mtime@@Base+0x664>  // b.any
  42ea08:	ldr	x0, [x29, #40]
  42ea0c:	ldrb	w0, [x0, #137]
  42ea10:	and	w0, w0, #0x40
  42ea14:	and	w0, w0, #0xff
  42ea18:	cmp	w0, #0x0
  42ea1c:	b.eq	42ea30 <f_mtime@@Base+0x664>  // b.none
  42ea20:	ldr	x0, [x29, #40]
  42ea24:	ldrb	w1, [x0, #137]
  42ea28:	and	w1, w1, #0xffffffbf
  42ea2c:	strb	w1, [x0, #137]
  42ea30:	ldr	x0, [x29, #40]
  42ea34:	ldrb	w0, [x0, #137]
  42ea38:	ubfx	x0, x0, #2, #1
  42ea3c:	and	w0, w0, #0xff
  42ea40:	mov	w1, w0
  42ea44:	ldr	w0, [x29, #188]
  42ea48:	cmp	w0, w1
  42ea4c:	b.ne	42ea5c <f_mtime@@Base+0x690>  // b.any
  42ea50:	ldr	x1, [x29, #176]
  42ea54:	ldr	x0, [x29, #40]
  42ea58:	str	x1, [x0, #112]
  42ea5c:	ldr	x0, [x29, #40]
  42ea60:	ldr	x0, [x0, #56]
  42ea64:	str	x0, [x29, #40]
  42ea68:	ldr	x0, [x29, #40]
  42ea6c:	cmp	x0, #0x0
  42ea70:	b.ne	42e9cc <f_mtime@@Base+0x600>  // b.any
  42ea74:	ldr	x0, [x29, #176]
  42ea78:	mov	sp, x29
  42ea7c:	ldr	x19, [sp, #16]
  42ea80:	ldp	x29, x30, [sp], #272
  42ea84:	ret
  42ea88:	mov	x12, #0x20e0                	// #8416
  42ea8c:	sub	sp, sp, x12
  42ea90:	stp	x29, x30, [sp]
  42ea94:	mov	x29, sp
  42ea98:	str	x0, [sp, #24]
  42ea9c:	nop
  42eaa0:	add	x0, sp, #0x2, lsl #12
  42eaa4:	add	x0, x0, #0x38
  42eaa8:	mov	x1, x0
  42eaac:	ldr	x0, [sp, #24]
  42eab0:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  42eab4:	str	w0, [sp, #8404]
  42eab8:	ldr	w0, [sp, #8404]
  42eabc:	cmn	w0, #0x1
  42eac0:	b.ne	42ead4 <f_mtime@@Base+0x708>  // b.any
  42eac4:	bl	406dd0 <__errno_location@plt>
  42eac8:	ldr	w0, [x0]
  42eacc:	cmp	w0, #0x4
  42ead0:	b.eq	42eaa0 <f_mtime@@Base+0x6d4>  // b.none
  42ead4:	ldr	w0, [sp, #8404]
  42ead8:	cmp	w0, #0x0
  42eadc:	b.ne	42eb00 <f_mtime@@Base+0x734>  // b.any
  42eae0:	ldr	x0, [sp, #8336]
  42eae4:	ldr	x1, [sp, #8344]
  42eae8:	mov	x2, x1
  42eaec:	mov	x1, x0
  42eaf0:	ldr	x0, [sp, #24]
  42eaf4:	bl	40e2fc <file_timestamp_cons@@Base>
  42eaf8:	str	x0, [sp, #8408]
  42eafc:	b	42eb44 <f_mtime@@Base+0x778>
  42eb00:	bl	406dd0 <__errno_location@plt>
  42eb04:	ldr	w0, [x0]
  42eb08:	cmp	w0, #0x2
  42eb0c:	b.eq	42eb20 <f_mtime@@Base+0x754>  // b.none
  42eb10:	bl	406dd0 <__errno_location@plt>
  42eb14:	ldr	w0, [x0]
  42eb18:	cmp	w0, #0x14
  42eb1c:	b.ne	42eb2c <f_mtime@@Base+0x760>  // b.any
  42eb20:	mov	x0, #0x1                   	// #1
  42eb24:	str	x0, [sp, #8408]
  42eb28:	b	42eb44 <f_mtime@@Base+0x778>
  42eb2c:	ldr	x1, [sp, #24]
  42eb30:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42eb34:	add	x0, x0, #0xb08
  42eb38:	bl	4242c0 <perror_with_name@@Base>
  42eb3c:	mov	x0, #0x1                   	// #1
  42eb40:	b	42ed20 <f_mtime@@Base+0x954>
  42eb44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42eb48:	add	x0, x0, #0x700
  42eb4c:	ldr	w0, [x0]
  42eb50:	cmp	w0, #0x0
  42eb54:	b.eq	42ed1c <f_mtime@@Base+0x950>  // b.none
  42eb58:	ldr	x0, [sp, #24]
  42eb5c:	bl	4066f0 <strlen@plt>
  42eb60:	cmp	x0, #0x1, lsl #12
  42eb64:	b.hi	42ed1c <f_mtime@@Base+0x950>  // b.pmore
  42eb68:	add	x0, sp, #0x28
  42eb6c:	ldr	x1, [sp, #24]
  42eb70:	bl	406ca0 <strcpy@plt>
  42eb74:	nop
  42eb78:	add	x1, sp, #0x2, lsl #12
  42eb7c:	add	x1, x1, #0x38
  42eb80:	add	x0, sp, #0x28
  42eb84:	bl	436b90 <__libc_csu_fini@@Base+0x38>
  42eb88:	str	w0, [sp, #8404]
  42eb8c:	ldr	w0, [sp, #8404]
  42eb90:	cmn	w0, #0x1
  42eb94:	b.ne	42eba8 <f_mtime@@Base+0x7dc>  // b.any
  42eb98:	bl	406dd0 <__errno_location@plt>
  42eb9c:	ldr	w0, [x0]
  42eba0:	cmp	w0, #0x4
  42eba4:	b.eq	42eb78 <f_mtime@@Base+0x7ac>  // b.none
  42eba8:	ldr	w0, [sp, #8404]
  42ebac:	cmp	w0, #0x0
  42ebb0:	b.eq	42ebec <f_mtime@@Base+0x820>  // b.none
  42ebb4:	bl	406dd0 <__errno_location@plt>
  42ebb8:	ldr	w0, [x0]
  42ebbc:	cmp	w0, #0x2
  42ebc0:	b.eq	42ed08 <f_mtime@@Base+0x93c>  // b.none
  42ebc4:	bl	406dd0 <__errno_location@plt>
  42ebc8:	ldr	w0, [x0]
  42ebcc:	cmp	w0, #0x14
  42ebd0:	b.eq	42ed08 <f_mtime@@Base+0x93c>  // b.none
  42ebd4:	add	x0, sp, #0x28
  42ebd8:	mov	x1, x0
  42ebdc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ebe0:	add	x0, x0, #0xb10
  42ebe4:	bl	4242c0 <perror_with_name@@Base>
  42ebe8:	b	42ed08 <f_mtime@@Base+0x93c>
  42ebec:	ldr	w0, [sp, #8264]
  42ebf0:	and	w0, w0, #0xf000
  42ebf4:	cmp	w0, #0xa, lsl #12
  42ebf8:	b.ne	42ed10 <f_mtime@@Base+0x944>  // b.any
  42ebfc:	ldr	x1, [sp, #8336]
  42ec00:	ldr	x2, [sp, #8344]
  42ec04:	add	x0, sp, #0x28
  42ec08:	bl	40e2fc <file_timestamp_cons@@Base>
  42ec0c:	str	x0, [sp, #8392]
  42ec10:	ldr	x1, [sp, #8392]
  42ec14:	ldr	x0, [sp, #8408]
  42ec18:	cmp	x1, x0
  42ec1c:	b.ls	42ec28 <f_mtime@@Base+0x85c>  // b.plast
  42ec20:	ldr	x0, [sp, #8392]
  42ec24:	str	x0, [sp, #8408]
  42ec28:	nop
  42ec2c:	add	x1, sp, #0x1, lsl #12
  42ec30:	add	x1, x1, #0x30
  42ec34:	add	x0, sp, #0x28
  42ec38:	mov	x2, #0x1000                	// #4096
  42ec3c:	bl	406780 <readlink@plt>
  42ec40:	str	x0, [sp, #8384]
  42ec44:	ldr	x0, [sp, #8384]
  42ec48:	cmn	x0, #0x1
  42ec4c:	b.ne	42ec60 <f_mtime@@Base+0x894>  // b.any
  42ec50:	bl	406dd0 <__errno_location@plt>
  42ec54:	ldr	w0, [x0]
  42ec58:	cmp	w0, #0x4
  42ec5c:	b.eq	42ec2c <f_mtime@@Base+0x860>  // b.none
  42ec60:	ldr	x0, [sp, #8384]
  42ec64:	cmp	x0, #0x0
  42ec68:	b.ge	42ec84 <f_mtime@@Base+0x8b8>  // b.tcont
  42ec6c:	add	x0, sp, #0x28
  42ec70:	mov	x1, x0
  42ec74:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ec78:	add	x0, x0, #0xb18
  42ec7c:	bl	4242c0 <perror_with_name@@Base>
  42ec80:	b	42ed1c <f_mtime@@Base+0x950>
  42ec84:	ldr	x0, [sp, #8384]
  42ec88:	add	x1, sp, #0x1, lsl #12
  42ec8c:	add	x1, x1, #0x30
  42ec90:	strb	wzr, [x1, x0]
  42ec94:	add	x0, sp, #0x1, lsl #12
  42ec98:	ldrb	w0, [x0, #48]
  42ec9c:	cmp	w0, #0x2f
  42eca0:	b.eq	42ecc0 <f_mtime@@Base+0x8f4>  // b.none
  42eca4:	add	x0, sp, #0x28
  42eca8:	mov	w1, #0x2f                  	// #47
  42ecac:	bl	406ae0 <strrchr@plt>
  42ecb0:	str	x0, [sp, #8376]
  42ecb4:	ldr	x0, [sp, #8376]
  42ecb8:	cmp	x0, #0x0
  42ecbc:	b.ne	42ecd4 <f_mtime@@Base+0x908>  // b.any
  42ecc0:	add	x1, sp, #0x1, lsl #12
  42ecc4:	add	x1, x1, #0x30
  42ecc8:	add	x0, sp, #0x28
  42eccc:	bl	406ca0 <strcpy@plt>
  42ecd0:	b	42ed04 <f_mtime@@Base+0x938>
  42ecd4:	add	x0, sp, #0x28
  42ecd8:	ldr	x1, [sp, #8376]
  42ecdc:	sub	x1, x1, x0
  42ece0:	ldr	x0, [sp, #8384]
  42ece4:	add	x0, x1, x0
  42ece8:	cmp	x0, #0xffe
  42ecec:	b.gt	42ed18 <f_mtime@@Base+0x94c>
  42ecf0:	ldr	x0, [sp, #8376]
  42ecf4:	add	x0, x0, #0x1
  42ecf8:	add	x1, sp, #0x1, lsl #12
  42ecfc:	add	x1, x1, #0x30
  42ed00:	bl	406ca0 <strcpy@plt>
  42ed04:	b	42eb74 <f_mtime@@Base+0x7a8>
  42ed08:	nop
  42ed0c:	b	42ed1c <f_mtime@@Base+0x950>
  42ed10:	nop
  42ed14:	b	42ed1c <f_mtime@@Base+0x950>
  42ed18:	nop
  42ed1c:	ldr	x0, [sp, #8408]
  42ed20:	ldp	x29, x30, [sp]
  42ed24:	mov	x12, #0x20e0                	// #8416
  42ed28:	add	sp, sp, x12
  42ed2c:	ret
  42ed30:	stp	x29, x30, [sp, #-192]!
  42ed34:	mov	x29, sp
  42ed38:	str	x19, [sp, #16]
  42ed3c:	str	x0, [sp, #40]
  42ed40:	str	x1, [sp, #32]
  42ed44:	str	xzr, [sp, #184]
  42ed48:	str	wzr, [sp, #180]
  42ed4c:	str	wzr, [sp, #176]
  42ed50:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ed54:	add	x0, x0, #0xb28
  42ed58:	bl	40bf38 <variable_expand@@Base>
  42ed5c:	bl	422788 <xstrdup@@Base>
  42ed60:	str	x0, [sp, #152]
  42ed64:	ldr	x0, [sp, #40]
  42ed68:	add	x0, x0, #0x2
  42ed6c:	str	x0, [sp, #40]
  42ed70:	ldr	x0, [sp, #40]
  42ed74:	bl	4066f0 <strlen@plt>
  42ed78:	str	x0, [sp, #144]
  42ed7c:	ldr	x0, [sp, #152]
  42ed80:	str	x0, [sp, #72]
  42ed84:	b	42f1cc <f_mtime@@Base+0xe00>
  42ed88:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ed8c:	add	x0, x0, #0x500
  42ed90:	bl	40bf38 <variable_expand@@Base>
  42ed94:	str	x0, [sp, #128]
  42ed98:	ldr	x0, [sp, #64]
  42ed9c:	ldr	x1, [sp, #136]
  42eda0:	add	x0, x1, x0
  42eda4:	ldrb	w0, [x0]
  42eda8:	strb	w0, [sp, #127]
  42edac:	ldr	x0, [sp, #64]
  42edb0:	ldr	x1, [sp, #136]
  42edb4:	add	x0, x1, x0
  42edb8:	strb	wzr, [x0]
  42edbc:	ldr	x0, [sp, #136]
  42edc0:	bl	4294d0 <find_percent@@Base>
  42edc4:	str	x0, [sp, #112]
  42edc8:	ldr	x0, [sp, #112]
  42edcc:	cmp	x0, #0x0
  42edd0:	b.ne	42ee18 <f_mtime@@Base+0xa4c>  // b.any
  42edd4:	ldr	x0, [sp, #136]
  42edd8:	bl	4066f0 <strlen@plt>
  42eddc:	mov	x19, x0
  42ede0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42ede4:	add	x0, x0, #0xb38
  42ede8:	bl	406e40 <gettext@plt>
  42edec:	ldr	x3, [sp, #136]
  42edf0:	mov	x2, x0
  42edf4:	mov	x1, x19
  42edf8:	mov	x0, #0x0                   	// #0
  42edfc:	bl	423e74 <error@@Base>
  42ee00:	ldr	x0, [sp, #64]
  42ee04:	ldr	x1, [sp, #136]
  42ee08:	add	x0, x1, x0
  42ee0c:	ldrb	w1, [sp, #127]
  42ee10:	strb	w1, [x0]
  42ee14:	b	42f1cc <f_mtime@@Base+0xe00>
  42ee18:	ldr	x1, [sp, #112]
  42ee1c:	ldr	x0, [sp, #136]
  42ee20:	sub	x0, x1, x0
  42ee24:	mov	x2, x0
  42ee28:	ldr	x1, [sp, #136]
  42ee2c:	ldr	x0, [sp, #128]
  42ee30:	bl	40b388 <variable_buffer_output@@Base>
  42ee34:	str	x0, [sp, #104]
  42ee38:	ldr	x2, [sp, #144]
  42ee3c:	ldr	x1, [sp, #40]
  42ee40:	ldr	x0, [sp, #104]
  42ee44:	bl	40b388 <variable_buffer_output@@Base>
  42ee48:	str	x0, [sp, #104]
  42ee4c:	ldr	x0, [sp, #112]
  42ee50:	add	x3, x0, #0x1
  42ee54:	ldr	x0, [sp, #64]
  42ee58:	ldr	x2, [sp, #112]
  42ee5c:	ldr	x1, [sp, #136]
  42ee60:	sub	x1, x2, x1
  42ee64:	sub	x0, x0, x1
  42ee68:	mov	x2, x0
  42ee6c:	mov	x1, x3
  42ee70:	ldr	x0, [sp, #104]
  42ee74:	bl	40b388 <variable_buffer_output@@Base>
  42ee78:	str	x0, [sp, #104]
  42ee7c:	ldr	x0, [sp, #64]
  42ee80:	ldr	x1, [sp, #136]
  42ee84:	add	x0, x1, x0
  42ee88:	ldrb	w1, [sp, #127]
  42ee8c:	strb	w1, [x0]
  42ee90:	ldr	x0, [sp, #128]
  42ee94:	bl	42ea88 <f_mtime@@Base+0x6bc>
  42ee98:	str	x0, [sp, #80]
  42ee9c:	ldr	x0, [sp, #80]
  42eea0:	cmp	x0, #0x1
  42eea4:	b.eq	42eed0 <f_mtime@@Base+0xb04>  // b.none
  42eea8:	ldr	x0, [sp, #32]
  42eeac:	cmp	x0, #0x0
  42eeb0:	b.eq	42eec0 <f_mtime@@Base+0xaf4>  // b.none
  42eeb4:	ldr	x1, [sp, #80]
  42eeb8:	ldr	x0, [sp, #32]
  42eebc:	str	x1, [x0]
  42eec0:	ldr	x0, [sp, #128]
  42eec4:	bl	430d78 <strcache_add@@Base>
  42eec8:	str	x0, [sp, #184]
  42eecc:	b	42f1e8 <f_mtime@@Base+0xe1c>
  42eed0:	ldr	x0, [sp, #32]
  42eed4:	cmp	x0, #0x0
  42eed8:	b.eq	42eee4 <f_mtime@@Base+0xb18>  // b.none
  42eedc:	add	x0, sp, #0x50
  42eee0:	b	42eee8 <f_mtime@@Base+0xb1c>
  42eee4:	mov	x0, #0x0                   	// #0
  42eee8:	add	x2, sp, #0x38
  42eeec:	add	x1, sp, #0x3c
  42eef0:	mov	x3, x2
  42eef4:	mov	x2, x1
  42eef8:	mov	x1, x0
  42eefc:	ldr	x0, [sp, #128]
  42ef00:	bl	4351e0 <vpath_search@@Base>
  42ef04:	str	x0, [sp, #96]
  42ef08:	ldr	x0, [sp, #96]
  42ef0c:	cmp	x0, #0x0
  42ef10:	b.eq	42ef80 <f_mtime@@Base+0xbb4>  // b.none
  42ef14:	ldr	x0, [sp, #184]
  42ef18:	cmp	x0, #0x0
  42ef1c:	b.eq	42ef50 <f_mtime@@Base+0xb84>  // b.none
  42ef20:	ldr	w0, [sp, #60]
  42ef24:	ldr	w1, [sp, #180]
  42ef28:	cmp	w1, w0
  42ef2c:	b.hi	42ef50 <f_mtime@@Base+0xb84>  // b.pmore
  42ef30:	ldr	w0, [sp, #60]
  42ef34:	ldr	w1, [sp, #180]
  42ef38:	cmp	w1, w0
  42ef3c:	b.ne	42ef80 <f_mtime@@Base+0xbb4>  // b.any
  42ef40:	ldr	w0, [sp, #56]
  42ef44:	ldr	w1, [sp, #176]
  42ef48:	cmp	w1, w0
  42ef4c:	b.ls	42ef80 <f_mtime@@Base+0xbb4>  // b.plast
  42ef50:	ldr	x0, [sp, #96]
  42ef54:	str	x0, [sp, #184]
  42ef58:	ldr	w0, [sp, #60]
  42ef5c:	str	w0, [sp, #180]
  42ef60:	ldr	w0, [sp, #56]
  42ef64:	str	w0, [sp, #176]
  42ef68:	ldr	x0, [sp, #32]
  42ef6c:	cmp	x0, #0x0
  42ef70:	b.eq	42ef80 <f_mtime@@Base+0xbb4>  // b.none
  42ef74:	ldr	x1, [sp, #80]
  42ef78:	ldr	x0, [sp, #32]
  42ef7c:	str	x1, [x0]
  42ef80:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42ef84:	add	x0, x0, #0xb0
  42ef88:	ldr	x0, [x0]
  42ef8c:	cmp	x0, #0x0
  42ef90:	b.ne	42f064 <f_mtime@@Base+0xc98>  // b.any
  42ef94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42ef98:	add	x0, x0, #0x380
  42ef9c:	str	x0, [sp, #168]
  42efa0:	b	42f004 <f_mtime@@Base+0xc38>
  42efa4:	ldr	x0, [sp, #168]
  42efa8:	ldr	x0, [x0]
  42efac:	bl	4066f0 <strlen@plt>
  42efb0:	str	x0, [sp, #88]
  42efb4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42efb8:	add	x0, x0, #0xb8
  42efbc:	ldr	x0, [x0]
  42efc0:	ldr	x1, [sp, #88]
  42efc4:	cmp	x1, x0
  42efc8:	b.ls	42efdc <f_mtime@@Base+0xc10>  // b.plast
  42efcc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42efd0:	add	x0, x0, #0xb8
  42efd4:	ldr	x1, [sp, #88]
  42efd8:	str	x1, [x0]
  42efdc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42efe0:	add	x0, x0, #0xc0
  42efe4:	ldr	w0, [x0]
  42efe8:	add	w1, w0, #0x1
  42efec:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42eff0:	add	x0, x0, #0xc0
  42eff4:	str	w1, [x0]
  42eff8:	ldr	x0, [sp, #168]
  42effc:	add	x0, x0, #0x8
  42f000:	str	x0, [sp, #168]
  42f004:	ldr	x0, [sp, #168]
  42f008:	ldr	x0, [x0]
  42f00c:	cmp	x0, #0x0
  42f010:	b.ne	42efa4 <f_mtime@@Base+0xbd8>  // b.any
  42f014:	ldr	x0, [sp, #128]
  42f018:	bl	4066f0 <strlen@plt>
  42f01c:	mov	x1, x0
  42f020:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f024:	add	x0, x0, #0xb0
  42f028:	str	x1, [x0]
  42f02c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f030:	add	x0, x0, #0xb8
  42f034:	ldr	x1, [x0]
  42f038:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f03c:	add	x0, x0, #0xb0
  42f040:	ldr	x0, [x0]
  42f044:	add	x0, x1, x0
  42f048:	add	x0, x0, #0x2
  42f04c:	bl	42268c <xmalloc@@Base>
  42f050:	mov	x1, x0
  42f054:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f058:	add	x0, x0, #0xc8
  42f05c:	str	x1, [x0]
  42f060:	b	42f0e4 <f_mtime@@Base+0xd18>
  42f064:	ldr	x0, [sp, #128]
  42f068:	bl	4066f0 <strlen@plt>
  42f06c:	mov	x1, x0
  42f070:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f074:	add	x0, x0, #0xb0
  42f078:	ldr	x0, [x0]
  42f07c:	cmp	x1, x0
  42f080:	b.ls	42f0e4 <f_mtime@@Base+0xd18>  // b.plast
  42f084:	ldr	x0, [sp, #128]
  42f088:	bl	4066f0 <strlen@plt>
  42f08c:	mov	x1, x0
  42f090:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f094:	add	x0, x0, #0xb0
  42f098:	str	x1, [x0]
  42f09c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f0a0:	add	x0, x0, #0xc8
  42f0a4:	ldr	x2, [x0]
  42f0a8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f0ac:	add	x0, x0, #0xb8
  42f0b0:	ldr	x1, [x0]
  42f0b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f0b8:	add	x0, x0, #0xb0
  42f0bc:	ldr	x0, [x0]
  42f0c0:	add	x0, x1, x0
  42f0c4:	add	x0, x0, #0x2
  42f0c8:	mov	x1, x0
  42f0cc:	mov	x0, x2
  42f0d0:	bl	422720 <xrealloc@@Base>
  42f0d4:	mov	x1, x0
  42f0d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f0dc:	add	x0, x0, #0xc8
  42f0e0:	str	x1, [x0]
  42f0e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f0e8:	add	x0, x0, #0xc0
  42f0ec:	ldr	w0, [x0]
  42f0f0:	mvn	w0, w0
  42f0f4:	str	w0, [sp, #164]
  42f0f8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  42f0fc:	add	x0, x0, #0x380
  42f100:	str	x0, [sp, #168]
  42f104:	b	42f1bc <f_mtime@@Base+0xdf0>
  42f108:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f10c:	add	x0, x0, #0xc8
  42f110:	ldr	x4, [x0]
  42f114:	ldr	x0, [sp, #168]
  42f118:	ldr	x0, [x0]
  42f11c:	ldr	x3, [sp, #128]
  42f120:	mov	x2, x0
  42f124:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42f128:	add	x1, x0, #0xb68
  42f12c:	mov	x0, x4
  42f130:	bl	406790 <sprintf@plt>
  42f134:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f138:	add	x0, x0, #0xc8
  42f13c:	ldr	x0, [x0]
  42f140:	bl	42ea88 <f_mtime@@Base+0x6bc>
  42f144:	str	x0, [sp, #80]
  42f148:	ldr	x0, [sp, #80]
  42f14c:	cmp	x0, #0x1
  42f150:	b.eq	42f1a4 <f_mtime@@Base+0xdd8>  // b.none
  42f154:	ldr	x0, [sp, #184]
  42f158:	cmp	x0, #0x0
  42f15c:	b.eq	42f170 <f_mtime@@Base+0xda4>  // b.none
  42f160:	ldr	w1, [sp, #164]
  42f164:	ldr	w0, [sp, #180]
  42f168:	cmp	w1, w0
  42f16c:	b.cs	42f1a4 <f_mtime@@Base+0xdd8>  // b.hs, b.nlast
  42f170:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f174:	add	x0, x0, #0xc8
  42f178:	ldr	x0, [x0]
  42f17c:	bl	430d78 <strcache_add@@Base>
  42f180:	str	x0, [sp, #184]
  42f184:	ldr	w0, [sp, #164]
  42f188:	str	w0, [sp, #180]
  42f18c:	ldr	x0, [sp, #32]
  42f190:	cmp	x0, #0x0
  42f194:	b.eq	42f1a4 <f_mtime@@Base+0xdd8>  // b.none
  42f198:	ldr	x1, [sp, #80]
  42f19c:	ldr	x0, [sp, #32]
  42f1a0:	str	x1, [x0]
  42f1a4:	ldr	w0, [sp, #164]
  42f1a8:	add	w0, w0, #0x1
  42f1ac:	str	w0, [sp, #164]
  42f1b0:	ldr	x0, [sp, #168]
  42f1b4:	add	x0, x0, #0x8
  42f1b8:	str	x0, [sp, #168]
  42f1bc:	ldr	x0, [sp, #168]
  42f1c0:	ldr	x0, [x0]
  42f1c4:	cmp	x0, #0x0
  42f1c8:	b.ne	42f108 <f_mtime@@Base+0xd3c>  // b.any
  42f1cc:	add	x1, sp, #0x40
  42f1d0:	add	x0, sp, #0x48
  42f1d4:	bl	4228ec <find_next_token@@Base>
  42f1d8:	str	x0, [sp, #136]
  42f1dc:	ldr	x0, [sp, #136]
  42f1e0:	cmp	x0, #0x0
  42f1e4:	b.ne	42ed88 <f_mtime@@Base+0x9bc>  // b.any
  42f1e8:	ldr	x0, [sp, #152]
  42f1ec:	bl	406c00 <free@plt>
  42f1f0:	ldr	x0, [sp, #184]
  42f1f4:	ldr	x19, [sp, #16]
  42f1f8:	ldp	x29, x30, [sp], #192
  42f1fc:	ret

000000000042f200 <snap_implicit_rules@@Base>:
  42f200:	stp	x29, x30, [sp, #-112]!
  42f204:	mov	x29, sp
  42f208:	str	xzr, [sp, #104]
  42f20c:	str	xzr, [sp, #96]
  42f210:	mov	x1, #0xe                   	// #14
  42f214:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42f218:	add	x0, x0, #0xb88
  42f21c:	bl	431f68 <lookup_variable@@Base>
  42f220:	bl	40d8bc <expand_extra_prereqs@@Base>
  42f224:	str	x0, [sp, #48]
  42f228:	str	wzr, [sp, #76]
  42f22c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f230:	add	x0, x0, #0xb38
  42f234:	str	xzr, [x0]
  42f238:	ldr	x0, [sp, #48]
  42f23c:	str	x0, [sp, #80]
  42f240:	b	42f2b4 <snap_implicit_rules@@Base+0xb4>
  42f244:	ldr	x0, [sp, #80]
  42f248:	ldr	x0, [x0, #8]
  42f24c:	cmp	x0, #0x0
  42f250:	b.eq	42f260 <snap_implicit_rules@@Base+0x60>  // b.none
  42f254:	ldr	x0, [sp, #80]
  42f258:	ldr	x0, [x0, #8]
  42f25c:	b	42f26c <snap_implicit_rules@@Base+0x6c>
  42f260:	ldr	x0, [sp, #80]
  42f264:	ldr	x0, [x0, #16]
  42f268:	ldr	x0, [x0]
  42f26c:	bl	4066f0 <strlen@plt>
  42f270:	str	x0, [sp, #16]
  42f274:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f278:	add	x0, x0, #0xb38
  42f27c:	ldr	x0, [x0]
  42f280:	ldr	x1, [sp, #16]
  42f284:	cmp	x1, x0
  42f288:	b.ls	42f29c <snap_implicit_rules@@Base+0x9c>  // b.plast
  42f28c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f290:	add	x0, x0, #0xb38
  42f294:	ldr	x1, [sp, #16]
  42f298:	str	x1, [x0]
  42f29c:	ldr	w0, [sp, #76]
  42f2a0:	add	w0, w0, #0x1
  42f2a4:	str	w0, [sp, #76]
  42f2a8:	ldr	x0, [sp, #80]
  42f2ac:	ldr	x0, [x0]
  42f2b0:	str	x0, [sp, #80]
  42f2b4:	ldr	x0, [sp, #80]
  42f2b8:	cmp	x0, #0x0
  42f2bc:	b.ne	42f244 <snap_implicit_rules@@Base+0x44>  // b.any
  42f2c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f2c4:	add	x0, x0, #0xb44
  42f2c8:	str	wzr, [x0]
  42f2cc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f2d0:	add	x0, x0, #0xb44
  42f2d4:	ldr	w1, [x0]
  42f2d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f2dc:	add	x0, x0, #0xb40
  42f2e0:	str	w1, [x0]
  42f2e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f2e8:	add	x0, x0, #0xb40
  42f2ec:	ldr	w1, [x0]
  42f2f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f2f4:	add	x0, x0, #0xb50
  42f2f8:	str	w1, [x0]
  42f2fc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f300:	add	x0, x0, #0xb30
  42f304:	ldr	x0, [x0]
  42f308:	str	x0, [sp, #88]
  42f30c:	b	42f5ac <snap_implicit_rules@@Base+0x3ac>
  42f310:	ldr	w0, [sp, #76]
  42f314:	str	w0, [sp, #72]
  42f318:	str	xzr, [sp, #64]
  42f31c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f320:	add	x0, x0, #0xb50
  42f324:	ldr	w0, [x0]
  42f328:	add	w1, w0, #0x1
  42f32c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f330:	add	x0, x0, #0xb50
  42f334:	str	w1, [x0]
  42f338:	ldr	x0, [sp, #88]
  42f33c:	ldrh	w0, [x0, #48]
  42f340:	mov	w1, w0
  42f344:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f348:	add	x0, x0, #0xb40
  42f34c:	ldr	w0, [x0]
  42f350:	cmp	w1, w0
  42f354:	b.ls	42f370 <snap_implicit_rules@@Base+0x170>  // b.plast
  42f358:	ldr	x0, [sp, #88]
  42f35c:	ldrh	w0, [x0, #48]
  42f360:	mov	w1, w0
  42f364:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f368:	add	x0, x0, #0xb40
  42f36c:	str	w1, [x0]
  42f370:	ldr	x0, [sp, #88]
  42f374:	ldr	x0, [x0, #32]
  42f378:	str	x0, [sp, #80]
  42f37c:	b	42f528 <snap_implicit_rules@@Base+0x328>
  42f380:	ldr	x0, [sp, #80]
  42f384:	ldr	x0, [x0, #8]
  42f388:	cmp	x0, #0x0
  42f38c:	b.eq	42f39c <snap_implicit_rules@@Base+0x19c>  // b.none
  42f390:	ldr	x0, [sp, #80]
  42f394:	ldr	x0, [x0, #8]
  42f398:	b	42f3a8 <snap_implicit_rules@@Base+0x1a8>
  42f39c:	ldr	x0, [sp, #80]
  42f3a0:	ldr	x0, [x0, #16]
  42f3a4:	ldr	x0, [x0]
  42f3a8:	str	x0, [sp, #40]
  42f3ac:	ldr	x0, [sp, #40]
  42f3b0:	bl	4066f0 <strlen@plt>
  42f3b4:	str	x0, [sp, #32]
  42f3b8:	mov	w1, #0x2f                  	// #47
  42f3bc:	ldr	x0, [sp, #40]
  42f3c0:	bl	406ae0 <strrchr@plt>
  42f3c4:	str	x0, [sp, #56]
  42f3c8:	ldr	x0, [sp, #56]
  42f3cc:	cmp	x0, #0x0
  42f3d0:	b.eq	42f3e4 <snap_implicit_rules@@Base+0x1e4>  // b.none
  42f3d4:	mov	w1, #0x25                  	// #37
  42f3d8:	ldr	x0, [sp, #56]
  42f3dc:	bl	406c20 <strchr@plt>
  42f3e0:	b	42f3e8 <snap_implicit_rules@@Base+0x1e8>
  42f3e4:	mov	x0, #0x0                   	// #0
  42f3e8:	str	x0, [sp, #24]
  42f3ec:	ldr	w0, [sp, #72]
  42f3f0:	add	w0, w0, #0x1
  42f3f4:	str	w0, [sp, #72]
  42f3f8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f3fc:	add	x0, x0, #0xb38
  42f400:	ldr	x0, [x0]
  42f404:	ldr	x1, [sp, #32]
  42f408:	cmp	x1, x0
  42f40c:	b.ls	42f420 <snap_implicit_rules@@Base+0x220>  // b.plast
  42f410:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f414:	add	x0, x0, #0xb38
  42f418:	ldr	x1, [sp, #32]
  42f41c:	str	x1, [x0]
  42f420:	ldr	x0, [sp, #80]
  42f424:	ldr	x0, [x0]
  42f428:	cmp	x0, #0x0
  42f42c:	b.ne	42f438 <snap_implicit_rules@@Base+0x238>  // b.any
  42f430:	ldr	x0, [sp, #80]
  42f434:	str	x0, [sp, #64]
  42f438:	ldr	x0, [sp, #24]
  42f43c:	cmp	x0, #0x0
  42f440:	b.eq	42f50c <snap_implicit_rules@@Base+0x30c>  // b.none
  42f444:	ldr	x1, [sp, #56]
  42f448:	ldr	x0, [sp, #40]
  42f44c:	cmp	x1, x0
  42f450:	b.ne	42f460 <snap_implicit_rules@@Base+0x260>  // b.any
  42f454:	ldr	x0, [sp, #56]
  42f458:	add	x0, x0, #0x1
  42f45c:	str	x0, [sp, #56]
  42f460:	ldr	x1, [sp, #56]
  42f464:	ldr	x0, [sp, #40]
  42f468:	sub	x0, x1, x0
  42f46c:	mov	x1, x0
  42f470:	ldr	x0, [sp, #96]
  42f474:	cmp	x0, x1
  42f478:	b.cs	42f4a4 <snap_implicit_rules@@Base+0x2a4>  // b.hs, b.nlast
  42f47c:	ldr	x1, [sp, #56]
  42f480:	ldr	x0, [sp, #40]
  42f484:	sub	x0, x1, x0
  42f488:	str	x0, [sp, #96]
  42f48c:	ldr	x0, [sp, #96]
  42f490:	add	x0, x0, #0x1
  42f494:	mov	x1, x0
  42f498:	ldr	x0, [sp, #104]
  42f49c:	bl	422720 <xrealloc@@Base>
  42f4a0:	str	x0, [sp, #104]
  42f4a4:	ldr	x1, [sp, #56]
  42f4a8:	ldr	x0, [sp, #40]
  42f4ac:	sub	x0, x1, x0
  42f4b0:	mov	x2, x0
  42f4b4:	ldr	x1, [sp, #40]
  42f4b8:	ldr	x0, [sp, #104]
  42f4bc:	bl	4066b0 <memcpy@plt>
  42f4c0:	ldr	x1, [sp, #56]
  42f4c4:	ldr	x0, [sp, #40]
  42f4c8:	sub	x0, x1, x0
  42f4cc:	mov	x1, x0
  42f4d0:	ldr	x0, [sp, #104]
  42f4d4:	add	x0, x0, x1
  42f4d8:	strb	wzr, [x0]
  42f4dc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42f4e0:	add	x1, x0, #0xb98
  42f4e4:	ldr	x0, [sp, #104]
  42f4e8:	bl	40a760 <dir_file_exists_p@@Base>
  42f4ec:	cmp	w0, #0x0
  42f4f0:	cset	w0, eq  // eq = none
  42f4f4:	and	w2, w0, #0xff
  42f4f8:	ldr	x1, [sp, #80]
  42f4fc:	ldrb	w0, [x1, #33]
  42f500:	bfxil	w0, w2, #0, #1
  42f504:	strb	w0, [x1, #33]
  42f508:	b	42f51c <snap_implicit_rules@@Base+0x31c>
  42f50c:	ldr	x0, [sp, #80]
  42f510:	ldrb	w1, [x0, #33]
  42f514:	and	w1, w1, #0xfffffffe
  42f518:	strb	w1, [x0, #33]
  42f51c:	ldr	x0, [sp, #80]
  42f520:	ldr	x0, [x0]
  42f524:	str	x0, [sp, #80]
  42f528:	ldr	x0, [sp, #80]
  42f52c:	cmp	x0, #0x0
  42f530:	b.ne	42f380 <snap_implicit_rules@@Base+0x180>  // b.any
  42f534:	ldr	x0, [sp, #48]
  42f538:	cmp	x0, #0x0
  42f53c:	b.eq	42f578 <snap_implicit_rules@@Base+0x378>  // b.none
  42f540:	ldr	x0, [sp, #64]
  42f544:	cmp	x0, #0x0
  42f548:	b.eq	42f564 <snap_implicit_rules@@Base+0x364>  // b.none
  42f54c:	ldr	x0, [sp, #48]
  42f550:	bl	422ad0 <copy_dep_chain@@Base>
  42f554:	mov	x1, x0
  42f558:	ldr	x0, [sp, #64]
  42f55c:	str	x1, [x0]
  42f560:	b	42f578 <snap_implicit_rules@@Base+0x378>
  42f564:	ldr	x0, [sp, #48]
  42f568:	bl	422ad0 <copy_dep_chain@@Base>
  42f56c:	mov	x1, x0
  42f570:	ldr	x0, [sp, #88]
  42f574:	str	x1, [x0, #32]
  42f578:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f57c:	add	x0, x0, #0xb44
  42f580:	ldr	w0, [x0]
  42f584:	ldr	w1, [sp, #72]
  42f588:	cmp	w1, w0
  42f58c:	b.ls	42f5a0 <snap_implicit_rules@@Base+0x3a0>  // b.plast
  42f590:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f594:	add	x0, x0, #0xb44
  42f598:	ldr	w1, [sp, #72]
  42f59c:	str	w1, [x0]
  42f5a0:	ldr	x0, [sp, #88]
  42f5a4:	ldr	x0, [x0]
  42f5a8:	str	x0, [sp, #88]
  42f5ac:	ldr	x0, [sp, #88]
  42f5b0:	cmp	x0, #0x0
  42f5b4:	b.ne	42f310 <snap_implicit_rules@@Base+0x110>  // b.any
  42f5b8:	ldr	x0, [sp, #104]
  42f5bc:	bl	406c00 <free@plt>
  42f5c0:	ldr	x0, [sp, #48]
  42f5c4:	bl	422b98 <free_ns_chain@@Base>
  42f5c8:	nop
  42f5cc:	ldp	x29, x30, [sp], #112
  42f5d0:	ret
  42f5d4:	stp	x29, x30, [sp, #-112]!
  42f5d8:	mov	x29, sp
  42f5dc:	str	x0, [x29, #40]
  42f5e0:	str	x1, [x29, #32]
  42f5e4:	str	x2, [x29, #24]
  42f5e8:	mov	x0, #0x8                   	// #8
  42f5ec:	bl	42268c <xmalloc@@Base>
  42f5f0:	str	x0, [x29, #96]
  42f5f4:	mov	x0, #0x8                   	// #8
  42f5f8:	bl	42268c <xmalloc@@Base>
  42f5fc:	str	x0, [x29, #88]
  42f600:	ldr	x0, [x29, #40]
  42f604:	cmp	x0, #0x0
  42f608:	b.ne	42f640 <snap_implicit_rules@@Base+0x440>  // b.any
  42f60c:	mov	x1, #0x5                   	// #5
  42f610:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42f614:	add	x0, x0, #0xba0
  42f618:	bl	430da0 <strcache_add_len@@Base>
  42f61c:	mov	x1, x0
  42f620:	ldr	x0, [x29, #96]
  42f624:	str	x1, [x0]
  42f628:	ldr	x0, [x29, #96]
  42f62c:	ldr	x0, [x0]
  42f630:	add	x1, x0, #0x1
  42f634:	ldr	x0, [x29, #88]
  42f638:	str	x1, [x0]
  42f63c:	b	42f6d4 <snap_implicit_rules@@Base+0x4d4>
  42f640:	ldr	x0, [x29, #40]
  42f644:	bl	4066f0 <strlen@plt>
  42f648:	str	x0, [x29, #80]
  42f64c:	ldr	x0, [x29, #80]
  42f650:	add	x0, x0, #0x2
  42f654:	add	x0, x0, #0xf
  42f658:	lsr	x0, x0, #4
  42f65c:	lsl	x0, x0, #4
  42f660:	sub	sp, sp, x0
  42f664:	mov	x0, sp
  42f668:	add	x0, x0, #0xf
  42f66c:	lsr	x0, x0, #4
  42f670:	lsl	x0, x0, #4
  42f674:	str	x0, [x29, #72]
  42f678:	ldr	x0, [x29, #72]
  42f67c:	mov	w1, #0x25                  	// #37
  42f680:	strb	w1, [x0]
  42f684:	ldr	x0, [x29, #72]
  42f688:	add	x3, x0, #0x1
  42f68c:	ldr	x0, [x29, #80]
  42f690:	add	x0, x0, #0x1
  42f694:	mov	x2, x0
  42f698:	ldr	x1, [x29, #40]
  42f69c:	mov	x0, x3
  42f6a0:	bl	4066b0 <memcpy@plt>
  42f6a4:	ldr	x0, [x29, #80]
  42f6a8:	add	x0, x0, #0x1
  42f6ac:	mov	x1, x0
  42f6b0:	ldr	x0, [x29, #72]
  42f6b4:	bl	430da0 <strcache_add_len@@Base>
  42f6b8:	mov	x1, x0
  42f6bc:	ldr	x0, [x29, #96]
  42f6c0:	str	x1, [x0]
  42f6c4:	ldr	x0, [x29, #96]
  42f6c8:	ldr	x1, [x0]
  42f6cc:	ldr	x0, [x29, #88]
  42f6d0:	str	x1, [x0]
  42f6d4:	ldr	x0, [x29, #32]
  42f6d8:	cmp	x0, #0x0
  42f6dc:	b.ne	42f6e8 <snap_implicit_rules@@Base+0x4e8>  // b.any
  42f6e0:	str	xzr, [x29, #104]
  42f6e4:	b	42f778 <snap_implicit_rules@@Base+0x578>
  42f6e8:	ldr	x0, [x29, #32]
  42f6ec:	bl	4066f0 <strlen@plt>
  42f6f0:	str	x0, [x29, #64]
  42f6f4:	ldr	x0, [x29, #64]
  42f6f8:	add	x0, x0, #0x2
  42f6fc:	add	x0, x0, #0xf
  42f700:	lsr	x0, x0, #4
  42f704:	lsl	x0, x0, #4
  42f708:	sub	sp, sp, x0
  42f70c:	mov	x0, sp
  42f710:	add	x0, x0, #0xf
  42f714:	lsr	x0, x0, #4
  42f718:	lsl	x0, x0, #4
  42f71c:	str	x0, [x29, #56]
  42f720:	ldr	x0, [x29, #56]
  42f724:	mov	w1, #0x25                  	// #37
  42f728:	strb	w1, [x0]
  42f72c:	ldr	x0, [x29, #56]
  42f730:	add	x3, x0, #0x1
  42f734:	ldr	x0, [x29, #64]
  42f738:	add	x0, x0, #0x1
  42f73c:	mov	x2, x0
  42f740:	ldr	x1, [x29, #32]
  42f744:	mov	x0, x3
  42f748:	bl	4066b0 <memcpy@plt>
  42f74c:	mov	x0, #0x28                  	// #40
  42f750:	bl	4226d4 <xcalloc@@Base>
  42f754:	str	x0, [x29, #104]
  42f758:	ldr	x0, [x29, #64]
  42f75c:	add	x0, x0, #0x1
  42f760:	mov	x1, x0
  42f764:	ldr	x0, [x29, #56]
  42f768:	bl	430da0 <strcache_add_len@@Base>
  42f76c:	mov	x1, x0
  42f770:	ldr	x0, [x29, #104]
  42f774:	str	x1, [x0, #8]
  42f778:	mov	w6, #0x0                   	// #0
  42f77c:	ldr	x5, [x29, #24]
  42f780:	ldr	x4, [x29, #104]
  42f784:	mov	w3, #0x0                   	// #0
  42f788:	mov	w2, #0x1                   	// #1
  42f78c:	ldr	x1, [x29, #88]
  42f790:	ldr	x0, [x29, #96]
  42f794:	bl	430418 <create_pattern_rule@@Base>
  42f798:	nop
  42f79c:	mov	sp, x29
  42f7a0:	ldp	x29, x30, [sp], #112
  42f7a4:	ret

000000000042f7a8 <convert_to_pattern@@Base>:
  42f7a8:	stp	x29, x30, [sp, #-96]!
  42f7ac:	mov	x29, sp
  42f7b0:	str	x19, [sp, #16]
  42f7b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f7b8:	add	x0, x0, #0xd0
  42f7bc:	str	xzr, [x0]
  42f7c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f7c4:	add	x0, x0, #0xb28
  42f7c8:	ldr	x0, [x0]
  42f7cc:	ldr	x0, [x0, #24]
  42f7d0:	str	x0, [x29, #88]
  42f7d4:	b	42f83c <convert_to_pattern@@Base+0x94>
  42f7d8:	ldr	x0, [x29, #88]
  42f7dc:	ldr	x0, [x0, #8]
  42f7e0:	cmp	x0, #0x0
  42f7e4:	b.eq	42f7f4 <convert_to_pattern@@Base+0x4c>  // b.none
  42f7e8:	ldr	x0, [x29, #88]
  42f7ec:	ldr	x0, [x0, #8]
  42f7f0:	b	42f800 <convert_to_pattern@@Base+0x58>
  42f7f4:	ldr	x0, [x29, #88]
  42f7f8:	ldr	x0, [x0, #16]
  42f7fc:	ldr	x0, [x0]
  42f800:	bl	4066f0 <strlen@plt>
  42f804:	str	x0, [x29, #40]
  42f808:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f80c:	add	x0, x0, #0xd0
  42f810:	ldr	x0, [x0]
  42f814:	ldr	x1, [x29, #40]
  42f818:	cmp	x1, x0
  42f81c:	b.ls	42f830 <convert_to_pattern@@Base+0x88>  // b.plast
  42f820:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f824:	add	x0, x0, #0xd0
  42f828:	ldr	x1, [x29, #40]
  42f82c:	str	x1, [x0]
  42f830:	ldr	x0, [x29, #88]
  42f834:	ldr	x0, [x0]
  42f838:	str	x0, [x29, #88]
  42f83c:	ldr	x0, [x29, #88]
  42f840:	cmp	x0, #0x0
  42f844:	b.ne	42f7d8 <convert_to_pattern@@Base+0x30>  // b.any
  42f848:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f84c:	add	x0, x0, #0xd0
  42f850:	ldr	x0, [x0]
  42f854:	lsl	x0, x0, #1
  42f858:	add	x0, x0, #0x1
  42f85c:	add	x0, x0, #0xf
  42f860:	lsr	x0, x0, #4
  42f864:	lsl	x0, x0, #4
  42f868:	sub	sp, sp, x0
  42f86c:	mov	x0, sp
  42f870:	add	x0, x0, #0xf
  42f874:	lsr	x0, x0, #4
  42f878:	lsl	x0, x0, #4
  42f87c:	str	x0, [x29, #72]
  42f880:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f884:	add	x0, x0, #0xb28
  42f888:	ldr	x0, [x0]
  42f88c:	ldr	x0, [x0, #24]
  42f890:	str	x0, [x29, #88]
  42f894:	b	42fd18 <convert_to_pattern@@Base+0x570>
  42f898:	ldr	x0, [x29, #88]
  42f89c:	ldr	x0, [x0, #8]
  42f8a0:	cmp	x0, #0x0
  42f8a4:	b.eq	42f8b4 <convert_to_pattern@@Base+0x10c>  // b.none
  42f8a8:	ldr	x0, [x29, #88]
  42f8ac:	ldr	x0, [x0, #8]
  42f8b0:	b	42f8c0 <convert_to_pattern@@Base+0x118>
  42f8b4:	ldr	x0, [x29, #88]
  42f8b8:	ldr	x0, [x0, #16]
  42f8bc:	ldr	x0, [x0]
  42f8c0:	mov	x2, #0x0                   	// #0
  42f8c4:	mov	x1, #0x0                   	// #0
  42f8c8:	bl	42f5d4 <snap_implicit_rules@@Base+0x3d4>
  42f8cc:	ldr	x0, [x29, #88]
  42f8d0:	ldr	x0, [x0, #16]
  42f8d4:	ldr	x0, [x0, #32]
  42f8d8:	cmp	x0, #0x0
  42f8dc:	b.eq	42f928 <convert_to_pattern@@Base+0x180>  // b.none
  42f8e0:	ldr	x0, [x29, #88]
  42f8e4:	ldr	x0, [x0, #8]
  42f8e8:	cmp	x0, #0x0
  42f8ec:	b.eq	42f8fc <convert_to_pattern@@Base+0x154>  // b.none
  42f8f0:	ldr	x0, [x29, #88]
  42f8f4:	ldr	x0, [x0, #8]
  42f8f8:	b	42f908 <convert_to_pattern@@Base+0x160>
  42f8fc:	ldr	x0, [x29, #88]
  42f900:	ldr	x0, [x0, #16]
  42f904:	ldr	x0, [x0]
  42f908:	ldr	x1, [x29, #88]
  42f90c:	ldr	x1, [x1, #16]
  42f910:	ldr	x1, [x1, #32]
  42f914:	mov	x2, x1
  42f918:	mov	x1, x0
  42f91c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42f920:	add	x0, x0, #0xb98
  42f924:	bl	42f5d4 <snap_implicit_rules@@Base+0x3d4>
  42f928:	ldr	x0, [x29, #88]
  42f92c:	ldr	x0, [x0, #8]
  42f930:	cmp	x0, #0x0
  42f934:	b.eq	42f944 <convert_to_pattern@@Base+0x19c>  // b.none
  42f938:	ldr	x0, [x29, #88]
  42f93c:	ldr	x0, [x0, #8]
  42f940:	b	42f950 <convert_to_pattern@@Base+0x1a8>
  42f944:	ldr	x0, [x29, #88]
  42f948:	ldr	x0, [x0, #16]
  42f94c:	ldr	x0, [x0]
  42f950:	bl	4066f0 <strlen@plt>
  42f954:	str	x0, [x29, #64]
  42f958:	ldr	x0, [x29, #88]
  42f95c:	ldr	x0, [x0, #8]
  42f960:	cmp	x0, #0x0
  42f964:	b.eq	42f974 <convert_to_pattern@@Base+0x1cc>  // b.none
  42f968:	ldr	x0, [x29, #88]
  42f96c:	ldr	x0, [x0, #8]
  42f970:	b	42f980 <convert_to_pattern@@Base+0x1d8>
  42f974:	ldr	x0, [x29, #88]
  42f978:	ldr	x0, [x0, #16]
  42f97c:	ldr	x0, [x0]
  42f980:	ldr	x2, [x29, #64]
  42f984:	mov	x1, x0
  42f988:	ldr	x0, [x29, #72]
  42f98c:	bl	4066b0 <memcpy@plt>
  42f990:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42f994:	add	x0, x0, #0xb28
  42f998:	ldr	x0, [x0]
  42f99c:	ldr	x0, [x0, #24]
  42f9a0:	str	x0, [x29, #80]
  42f9a4:	b	42fd00 <convert_to_pattern@@Base+0x558>
  42f9a8:	ldr	x0, [x29, #80]
  42f9ac:	ldr	x0, [x0, #8]
  42f9b0:	cmp	x0, #0x0
  42f9b4:	b.eq	42f9c4 <convert_to_pattern@@Base+0x21c>  // b.none
  42f9b8:	ldr	x0, [x29, #80]
  42f9bc:	ldr	x0, [x0, #8]
  42f9c0:	b	42f9d0 <convert_to_pattern@@Base+0x228>
  42f9c4:	ldr	x0, [x29, #80]
  42f9c8:	ldr	x0, [x0, #16]
  42f9cc:	ldr	x0, [x0]
  42f9d0:	bl	4066f0 <strlen@plt>
  42f9d4:	str	x0, [x29, #56]
  42f9d8:	ldr	x1, [x29, #64]
  42f9dc:	ldr	x0, [x29, #56]
  42f9e0:	cmp	x1, x0
  42f9e4:	b.ne	42fb40 <convert_to_pattern@@Base+0x398>  // b.any
  42f9e8:	ldr	x0, [x29, #88]
  42f9ec:	ldr	x0, [x0, #8]
  42f9f0:	cmp	x0, #0x0
  42f9f4:	b.eq	42fa04 <convert_to_pattern@@Base+0x25c>  // b.none
  42f9f8:	ldr	x0, [x29, #88]
  42f9fc:	ldr	x1, [x0, #8]
  42fa00:	b	42fa10 <convert_to_pattern@@Base+0x268>
  42fa04:	ldr	x0, [x29, #88]
  42fa08:	ldr	x0, [x0, #16]
  42fa0c:	ldr	x1, [x0]
  42fa10:	ldr	x0, [x29, #80]
  42fa14:	ldr	x0, [x0, #8]
  42fa18:	cmp	x0, #0x0
  42fa1c:	b.eq	42fa2c <convert_to_pattern@@Base+0x284>  // b.none
  42fa20:	ldr	x0, [x29, #80]
  42fa24:	ldr	x0, [x0, #8]
  42fa28:	b	42fa38 <convert_to_pattern@@Base+0x290>
  42fa2c:	ldr	x0, [x29, #80]
  42fa30:	ldr	x0, [x0, #16]
  42fa34:	ldr	x0, [x0]
  42fa38:	cmp	x1, x0
  42fa3c:	b.eq	42fce0 <convert_to_pattern@@Base+0x538>  // b.none
  42fa40:	ldr	x0, [x29, #88]
  42fa44:	ldr	x0, [x0, #8]
  42fa48:	cmp	x0, #0x0
  42fa4c:	b.eq	42fa5c <convert_to_pattern@@Base+0x2b4>  // b.none
  42fa50:	ldr	x0, [x29, #88]
  42fa54:	ldr	x0, [x0, #8]
  42fa58:	b	42fa68 <convert_to_pattern@@Base+0x2c0>
  42fa5c:	ldr	x0, [x29, #88]
  42fa60:	ldr	x0, [x0, #16]
  42fa64:	ldr	x0, [x0]
  42fa68:	ldrb	w1, [x0]
  42fa6c:	ldr	x0, [x29, #80]
  42fa70:	ldr	x0, [x0, #8]
  42fa74:	cmp	x0, #0x0
  42fa78:	b.eq	42fa88 <convert_to_pattern@@Base+0x2e0>  // b.none
  42fa7c:	ldr	x0, [x29, #80]
  42fa80:	ldr	x0, [x0, #8]
  42fa84:	b	42fa94 <convert_to_pattern@@Base+0x2ec>
  42fa88:	ldr	x0, [x29, #80]
  42fa8c:	ldr	x0, [x0, #16]
  42fa90:	ldr	x0, [x0]
  42fa94:	ldrb	w0, [x0]
  42fa98:	cmp	w1, w0
  42fa9c:	b.ne	42fb40 <convert_to_pattern@@Base+0x398>  // b.any
  42faa0:	ldr	x0, [x29, #88]
  42faa4:	ldr	x0, [x0, #8]
  42faa8:	cmp	x0, #0x0
  42faac:	b.eq	42fabc <convert_to_pattern@@Base+0x314>  // b.none
  42fab0:	ldr	x0, [x29, #88]
  42fab4:	ldr	x0, [x0, #8]
  42fab8:	b	42fac8 <convert_to_pattern@@Base+0x320>
  42fabc:	ldr	x0, [x29, #88]
  42fac0:	ldr	x0, [x0, #16]
  42fac4:	ldr	x0, [x0]
  42fac8:	ldrb	w0, [x0]
  42facc:	cmp	w0, #0x0
  42fad0:	b.eq	42fce0 <convert_to_pattern@@Base+0x538>  // b.none
  42fad4:	ldr	x0, [x29, #88]
  42fad8:	ldr	x0, [x0, #8]
  42fadc:	cmp	x0, #0x0
  42fae0:	b.eq	42faf4 <convert_to_pattern@@Base+0x34c>  // b.none
  42fae4:	ldr	x0, [x29, #88]
  42fae8:	ldr	x0, [x0, #8]
  42faec:	add	x0, x0, #0x1
  42faf0:	b	42fb04 <convert_to_pattern@@Base+0x35c>
  42faf4:	ldr	x0, [x29, #88]
  42faf8:	ldr	x0, [x0, #16]
  42fafc:	ldr	x0, [x0]
  42fb00:	add	x0, x0, #0x1
  42fb04:	ldr	x1, [x29, #80]
  42fb08:	ldr	x1, [x1, #8]
  42fb0c:	cmp	x1, #0x0
  42fb10:	b.eq	42fb24 <convert_to_pattern@@Base+0x37c>  // b.none
  42fb14:	ldr	x1, [x29, #80]
  42fb18:	ldr	x1, [x1, #8]
  42fb1c:	add	x1, x1, #0x1
  42fb20:	b	42fb34 <convert_to_pattern@@Base+0x38c>
  42fb24:	ldr	x1, [x29, #80]
  42fb28:	ldr	x1, [x1, #16]
  42fb2c:	ldr	x1, [x1]
  42fb30:	add	x1, x1, #0x1
  42fb34:	bl	406bc0 <strcmp@plt>
  42fb38:	cmp	w0, #0x0
  42fb3c:	b.eq	42fce0 <convert_to_pattern@@Base+0x538>  // b.none
  42fb40:	ldr	x1, [x29, #72]
  42fb44:	ldr	x0, [x29, #64]
  42fb48:	add	x3, x1, x0
  42fb4c:	ldr	x0, [x29, #80]
  42fb50:	ldr	x0, [x0, #8]
  42fb54:	cmp	x0, #0x0
  42fb58:	b.eq	42fb68 <convert_to_pattern@@Base+0x3c0>  // b.none
  42fb5c:	ldr	x0, [x29, #80]
  42fb60:	ldr	x0, [x0, #8]
  42fb64:	b	42fb74 <convert_to_pattern@@Base+0x3cc>
  42fb68:	ldr	x0, [x29, #80]
  42fb6c:	ldr	x0, [x0, #16]
  42fb70:	ldr	x0, [x0]
  42fb74:	ldr	x1, [x29, #56]
  42fb78:	add	x1, x1, #0x1
  42fb7c:	mov	x2, x1
  42fb80:	mov	x1, x0
  42fb84:	mov	x0, x3
  42fb88:	bl	4066b0 <memcpy@plt>
  42fb8c:	ldr	x0, [x29, #72]
  42fb90:	bl	40c5bc <lookup_file@@Base>
  42fb94:	str	x0, [x29, #48]
  42fb98:	ldr	x0, [x29, #48]
  42fb9c:	cmp	x0, #0x0
  42fba0:	b.eq	42fce8 <convert_to_pattern@@Base+0x540>  // b.none
  42fba4:	ldr	x0, [x29, #48]
  42fba8:	ldr	x0, [x0, #32]
  42fbac:	cmp	x0, #0x0
  42fbb0:	b.eq	42fce8 <convert_to_pattern@@Base+0x540>  // b.none
  42fbb4:	ldr	x0, [x29, #48]
  42fbb8:	ldr	x0, [x0, #24]
  42fbbc:	cmp	x0, #0x0
  42fbc0:	b.eq	42fc00 <convert_to_pattern@@Base+0x458>  // b.none
  42fbc4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42fbc8:	add	x0, x0, #0xa58
  42fbcc:	ldr	w0, [x0]
  42fbd0:	cmp	w0, #0x0
  42fbd4:	b.ne	42fcf0 <convert_to_pattern@@Base+0x548>  // b.any
  42fbd8:	ldr	x0, [x29, #48]
  42fbdc:	ldr	x0, [x0, #32]
  42fbe0:	mov	x19, x0
  42fbe4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  42fbe8:	add	x0, x0, #0xba8
  42fbec:	bl	406e40 <gettext@plt>
  42fbf0:	mov	x2, x0
  42fbf4:	mov	x1, #0x0                   	// #0
  42fbf8:	mov	x0, x19
  42fbfc:	bl	423e74 <error@@Base>
  42fc00:	ldr	x0, [x29, #56]
  42fc04:	cmp	x0, #0x2
  42fc08:	b.ne	42fc80 <convert_to_pattern@@Base+0x4d8>  // b.any
  42fc0c:	ldr	x1, [x29, #72]
  42fc10:	ldr	x0, [x29, #64]
  42fc14:	add	x0, x1, x0
  42fc18:	ldrb	w0, [x0]
  42fc1c:	cmp	w0, #0x2e
  42fc20:	b.ne	42fc80 <convert_to_pattern@@Base+0x4d8>  // b.any
  42fc24:	ldr	x0, [x29, #64]
  42fc28:	add	x0, x0, #0x1
  42fc2c:	ldr	x1, [x29, #72]
  42fc30:	add	x0, x1, x0
  42fc34:	ldrb	w0, [x0]
  42fc38:	cmp	w0, #0x61
  42fc3c:	b.ne	42fc80 <convert_to_pattern@@Base+0x4d8>  // b.any
  42fc40:	ldr	x0, [x29, #88]
  42fc44:	ldr	x0, [x0, #8]
  42fc48:	cmp	x0, #0x0
  42fc4c:	b.eq	42fc5c <convert_to_pattern@@Base+0x4b4>  // b.none
  42fc50:	ldr	x0, [x29, #88]
  42fc54:	ldr	x0, [x0, #8]
  42fc58:	b	42fc68 <convert_to_pattern@@Base+0x4c0>
  42fc5c:	ldr	x0, [x29, #88]
  42fc60:	ldr	x0, [x0, #16]
  42fc64:	ldr	x0, [x0]
  42fc68:	ldr	x1, [x29, #48]
  42fc6c:	ldr	x1, [x1, #32]
  42fc70:	mov	x2, x1
  42fc74:	mov	x1, x0
  42fc78:	mov	x0, #0x0                   	// #0
  42fc7c:	bl	42f5d4 <snap_implicit_rules@@Base+0x3d4>
  42fc80:	ldr	x0, [x29, #80]
  42fc84:	ldr	x0, [x0, #8]
  42fc88:	cmp	x0, #0x0
  42fc8c:	b.eq	42fc9c <convert_to_pattern@@Base+0x4f4>  // b.none
  42fc90:	ldr	x0, [x29, #80]
  42fc94:	ldr	x0, [x0, #8]
  42fc98:	b	42fca8 <convert_to_pattern@@Base+0x500>
  42fc9c:	ldr	x0, [x29, #80]
  42fca0:	ldr	x0, [x0, #16]
  42fca4:	ldr	x0, [x0]
  42fca8:	ldr	x1, [x29, #88]
  42fcac:	ldr	x1, [x1, #8]
  42fcb0:	cmp	x1, #0x0
  42fcb4:	b.eq	42fcc4 <convert_to_pattern@@Base+0x51c>  // b.none
  42fcb8:	ldr	x1, [x29, #88]
  42fcbc:	ldr	x1, [x1, #8]
  42fcc0:	b	42fcd0 <convert_to_pattern@@Base+0x528>
  42fcc4:	ldr	x1, [x29, #88]
  42fcc8:	ldr	x1, [x1, #16]
  42fccc:	ldr	x1, [x1]
  42fcd0:	ldr	x2, [x29, #48]
  42fcd4:	ldr	x2, [x2, #32]
  42fcd8:	bl	42f5d4 <snap_implicit_rules@@Base+0x3d4>
  42fcdc:	b	42fcf4 <convert_to_pattern@@Base+0x54c>
  42fce0:	nop
  42fce4:	b	42fcf4 <convert_to_pattern@@Base+0x54c>
  42fce8:	nop
  42fcec:	b	42fcf4 <convert_to_pattern@@Base+0x54c>
  42fcf0:	nop
  42fcf4:	ldr	x0, [x29, #80]
  42fcf8:	ldr	x0, [x0]
  42fcfc:	str	x0, [x29, #80]
  42fd00:	ldr	x0, [x29, #80]
  42fd04:	cmp	x0, #0x0
  42fd08:	b.ne	42f9a8 <convert_to_pattern@@Base+0x200>  // b.any
  42fd0c:	ldr	x0, [x29, #88]
  42fd10:	ldr	x0, [x0]
  42fd14:	str	x0, [x29, #88]
  42fd18:	ldr	x0, [x29, #88]
  42fd1c:	cmp	x0, #0x0
  42fd20:	b.ne	42f898 <convert_to_pattern@@Base+0xf0>  // b.any
  42fd24:	nop
  42fd28:	nop
  42fd2c:	mov	sp, x29
  42fd30:	ldr	x19, [sp, #16]
  42fd34:	ldp	x29, x30, [sp], #96
  42fd38:	ret
  42fd3c:	stp	x29, x30, [sp, #-80]!
  42fd40:	mov	x29, sp
  42fd44:	str	x0, [sp, #24]
  42fd48:	str	w1, [sp, #20]
  42fd4c:	ldr	x0, [sp, #24]
  42fd50:	strb	wzr, [x0, #51]
  42fd54:	ldr	x0, [sp, #24]
  42fd58:	strb	wzr, [x0, #50]
  42fd5c:	ldr	x0, [sp, #24]
  42fd60:	str	xzr, [x0]
  42fd64:	str	xzr, [sp, #64]
  42fd68:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  42fd6c:	add	x0, x0, #0xb30
  42fd70:	ldr	x0, [x0]
  42fd74:	str	x0, [sp, #72]
  42fd78:	b	430120 <convert_to_pattern@@Base+0x978>
  42fd7c:	str	wzr, [sp, #60]
  42fd80:	b	4300f4 <convert_to_pattern@@Base+0x94c>
  42fd84:	str	wzr, [sp, #56]
  42fd88:	b	42fe80 <convert_to_pattern@@Base+0x6d8>
  42fd8c:	ldr	x0, [sp, #24]
  42fd90:	ldr	x1, [x0, #8]
  42fd94:	ldr	w0, [sp, #60]
  42fd98:	lsl	x0, x0, #3
  42fd9c:	add	x0, x1, x0
  42fda0:	ldr	x1, [x0]
  42fda4:	ldr	x0, [sp, #72]
  42fda8:	ldr	x2, [x0, #8]
  42fdac:	ldr	w0, [sp, #56]
  42fdb0:	lsl	x0, x0, #3
  42fdb4:	add	x0, x2, x0
  42fdb8:	ldr	x0, [x0]
  42fdbc:	cmp	x1, x0
  42fdc0:	b.eq	42fe74 <convert_to_pattern@@Base+0x6cc>  // b.none
  42fdc4:	ldr	x0, [sp, #24]
  42fdc8:	ldr	x1, [x0, #8]
  42fdcc:	ldr	w0, [sp, #60]
  42fdd0:	lsl	x0, x0, #3
  42fdd4:	add	x0, x1, x0
  42fdd8:	ldr	x0, [x0]
  42fddc:	ldrb	w1, [x0]
  42fde0:	ldr	x0, [sp, #72]
  42fde4:	ldr	x2, [x0, #8]
  42fde8:	ldr	w0, [sp, #56]
  42fdec:	lsl	x0, x0, #3
  42fdf0:	add	x0, x2, x0
  42fdf4:	ldr	x0, [x0]
  42fdf8:	ldrb	w0, [x0]
  42fdfc:	cmp	w1, w0
  42fe00:	b.ne	42fe98 <convert_to_pattern@@Base+0x6f0>  // b.any
  42fe04:	ldr	x0, [sp, #24]
  42fe08:	ldr	x1, [x0, #8]
  42fe0c:	ldr	w0, [sp, #60]
  42fe10:	lsl	x0, x0, #3
  42fe14:	add	x0, x1, x0
  42fe18:	ldr	x0, [x0]
  42fe1c:	ldrb	w0, [x0]
  42fe20:	cmp	w0, #0x0
  42fe24:	b.eq	42fe74 <convert_to_pattern@@Base+0x6cc>  // b.none
  42fe28:	ldr	x0, [sp, #24]
  42fe2c:	ldr	x1, [x0, #8]
  42fe30:	ldr	w0, [sp, #60]
  42fe34:	lsl	x0, x0, #3
  42fe38:	add	x0, x1, x0
  42fe3c:	ldr	x0, [x0]
  42fe40:	add	x2, x0, #0x1
  42fe44:	ldr	x0, [sp, #72]
  42fe48:	ldr	x1, [x0, #8]
  42fe4c:	ldr	w0, [sp, #56]
  42fe50:	lsl	x0, x0, #3
  42fe54:	add	x0, x1, x0
  42fe58:	ldr	x0, [x0]
  42fe5c:	add	x0, x0, #0x1
  42fe60:	mov	x1, x0
  42fe64:	mov	x0, x2
  42fe68:	bl	406bc0 <strcmp@plt>
  42fe6c:	cmp	w0, #0x0
  42fe70:	b.ne	42fe98 <convert_to_pattern@@Base+0x6f0>  // b.any
  42fe74:	ldr	w0, [sp, #56]
  42fe78:	add	w0, w0, #0x1
  42fe7c:	str	w0, [sp, #56]
  42fe80:	ldr	x0, [sp, #72]
  42fe84:	ldrh	w0, [x0, #48]
  42fe88:	mov	w1, w0
  42fe8c:	ldr	w0, [sp, #56]
  42fe90:	cmp	w0, w1
  42fe94:	b.cc	42fd8c <convert_to_pattern@@Base+0x5e4>  // b.lo, b.ul, b.last
  42fe98:	ldr	x0, [sp, #72]
  42fe9c:	ldrh	w0, [x0, #48]
  42fea0:	mov	w1, w0
  42fea4:	ldr	w0, [sp, #56]
  42fea8:	cmp	w0, w1
  42feac:	b.ne	4300e8 <convert_to_pattern@@Base+0x940>  // b.any
  42feb0:	ldr	x0, [sp, #24]
  42feb4:	ldr	x0, [x0, #32]
  42feb8:	str	x0, [sp, #48]
  42febc:	ldr	x0, [sp, #72]
  42fec0:	ldr	x0, [x0, #32]
  42fec4:	str	x0, [sp, #40]
  42fec8:	b	43003c <convert_to_pattern@@Base+0x894>
  42fecc:	ldr	x0, [sp, #48]
  42fed0:	ldr	x0, [x0, #8]
  42fed4:	cmp	x0, #0x0
  42fed8:	b.eq	42fee8 <convert_to_pattern@@Base+0x740>  // b.none
  42fedc:	ldr	x0, [sp, #48]
  42fee0:	ldr	x1, [x0, #8]
  42fee4:	b	42fef4 <convert_to_pattern@@Base+0x74c>
  42fee8:	ldr	x0, [sp, #48]
  42feec:	ldr	x0, [x0, #16]
  42fef0:	ldr	x1, [x0]
  42fef4:	ldr	x0, [sp, #40]
  42fef8:	ldr	x0, [x0, #8]
  42fefc:	cmp	x0, #0x0
  42ff00:	b.eq	42ff10 <convert_to_pattern@@Base+0x768>  // b.none
  42ff04:	ldr	x0, [sp, #40]
  42ff08:	ldr	x0, [x0, #8]
  42ff0c:	b	42ff1c <convert_to_pattern@@Base+0x774>
  42ff10:	ldr	x0, [sp, #40]
  42ff14:	ldr	x0, [x0, #16]
  42ff18:	ldr	x0, [x0]
  42ff1c:	cmp	x1, x0
  42ff20:	b.eq	430024 <convert_to_pattern@@Base+0x87c>  // b.none
  42ff24:	ldr	x0, [sp, #48]
  42ff28:	ldr	x0, [x0, #8]
  42ff2c:	cmp	x0, #0x0
  42ff30:	b.eq	42ff40 <convert_to_pattern@@Base+0x798>  // b.none
  42ff34:	ldr	x0, [sp, #48]
  42ff38:	ldr	x0, [x0, #8]
  42ff3c:	b	42ff4c <convert_to_pattern@@Base+0x7a4>
  42ff40:	ldr	x0, [sp, #48]
  42ff44:	ldr	x0, [x0, #16]
  42ff48:	ldr	x0, [x0]
  42ff4c:	ldrb	w1, [x0]
  42ff50:	ldr	x0, [sp, #40]
  42ff54:	ldr	x0, [x0, #8]
  42ff58:	cmp	x0, #0x0
  42ff5c:	b.eq	42ff6c <convert_to_pattern@@Base+0x7c4>  // b.none
  42ff60:	ldr	x0, [sp, #40]
  42ff64:	ldr	x0, [x0, #8]
  42ff68:	b	42ff78 <convert_to_pattern@@Base+0x7d0>
  42ff6c:	ldr	x0, [sp, #40]
  42ff70:	ldr	x0, [x0, #16]
  42ff74:	ldr	x0, [x0]
  42ff78:	ldrb	w0, [x0]
  42ff7c:	cmp	w1, w0
  42ff80:	b.ne	430054 <convert_to_pattern@@Base+0x8ac>  // b.any
  42ff84:	ldr	x0, [sp, #48]
  42ff88:	ldr	x0, [x0, #8]
  42ff8c:	cmp	x0, #0x0
  42ff90:	b.eq	42ffa0 <convert_to_pattern@@Base+0x7f8>  // b.none
  42ff94:	ldr	x0, [sp, #48]
  42ff98:	ldr	x0, [x0, #8]
  42ff9c:	b	42ffac <convert_to_pattern@@Base+0x804>
  42ffa0:	ldr	x0, [sp, #48]
  42ffa4:	ldr	x0, [x0, #16]
  42ffa8:	ldr	x0, [x0]
  42ffac:	ldrb	w0, [x0]
  42ffb0:	cmp	w0, #0x0
  42ffb4:	b.eq	430024 <convert_to_pattern@@Base+0x87c>  // b.none
  42ffb8:	ldr	x0, [sp, #48]
  42ffbc:	ldr	x0, [x0, #8]
  42ffc0:	cmp	x0, #0x0
  42ffc4:	b.eq	42ffd8 <convert_to_pattern@@Base+0x830>  // b.none
  42ffc8:	ldr	x0, [sp, #48]
  42ffcc:	ldr	x0, [x0, #8]
  42ffd0:	add	x0, x0, #0x1
  42ffd4:	b	42ffe8 <convert_to_pattern@@Base+0x840>
  42ffd8:	ldr	x0, [sp, #48]
  42ffdc:	ldr	x0, [x0, #16]
  42ffe0:	ldr	x0, [x0]
  42ffe4:	add	x0, x0, #0x1
  42ffe8:	ldr	x1, [sp, #40]
  42ffec:	ldr	x1, [x1, #8]
  42fff0:	cmp	x1, #0x0
  42fff4:	b.eq	430008 <convert_to_pattern@@Base+0x860>  // b.none
  42fff8:	ldr	x1, [sp, #40]
  42fffc:	ldr	x1, [x1, #8]
  430000:	add	x1, x1, #0x1
  430004:	b	430018 <convert_to_pattern@@Base+0x870>
  430008:	ldr	x1, [sp, #40]
  43000c:	ldr	x1, [x1, #16]
  430010:	ldr	x1, [x1]
  430014:	add	x1, x1, #0x1
  430018:	bl	406bc0 <strcmp@plt>
  43001c:	cmp	w0, #0x0
  430020:	b.ne	430054 <convert_to_pattern@@Base+0x8ac>  // b.any
  430024:	ldr	x0, [sp, #48]
  430028:	ldr	x0, [x0]
  43002c:	str	x0, [sp, #48]
  430030:	ldr	x0, [sp, #40]
  430034:	ldr	x0, [x0]
  430038:	str	x0, [sp, #40]
  43003c:	ldr	x0, [sp, #48]
  430040:	cmp	x0, #0x0
  430044:	b.eq	430054 <convert_to_pattern@@Base+0x8ac>  // b.none
  430048:	ldr	x0, [sp, #40]
  43004c:	cmp	x0, #0x0
  430050:	b.ne	42fecc <convert_to_pattern@@Base+0x724>  // b.any
  430054:	ldr	x0, [sp, #48]
  430058:	cmp	x0, #0x0
  43005c:	b.ne	4300e8 <convert_to_pattern@@Base+0x940>  // b.any
  430060:	ldr	x0, [sp, #40]
  430064:	cmp	x0, #0x0
  430068:	b.ne	4300e8 <convert_to_pattern@@Base+0x940>  // b.any
  43006c:	ldr	w0, [sp, #20]
  430070:	cmp	w0, #0x0
  430074:	b.eq	4300d4 <convert_to_pattern@@Base+0x92c>  // b.none
  430078:	ldr	x1, [sp, #64]
  43007c:	ldr	x0, [sp, #72]
  430080:	bl	43033c <install_pattern_rule@@Base+0x1a8>
  430084:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430088:	add	x0, x0, #0xb30
  43008c:	ldr	x0, [x0]
  430090:	cmp	x0, #0x0
  430094:	b.ne	4300ac <convert_to_pattern@@Base+0x904>  // b.any
  430098:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43009c:	add	x0, x0, #0xb30
  4300a0:	ldr	x1, [sp, #24]
  4300a4:	str	x1, [x0]
  4300a8:	b	4300c0 <convert_to_pattern@@Base+0x918>
  4300ac:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4300b0:	add	x0, x0, #0xb48
  4300b4:	ldr	x0, [x0]
  4300b8:	ldr	x1, [sp, #24]
  4300bc:	str	x1, [x0]
  4300c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4300c4:	add	x0, x0, #0xb48
  4300c8:	ldr	x1, [sp, #24]
  4300cc:	str	x1, [x0]
  4300d0:	b	430130 <convert_to_pattern@@Base+0x988>
  4300d4:	mov	x1, #0x0                   	// #0
  4300d8:	ldr	x0, [sp, #24]
  4300dc:	bl	43033c <install_pattern_rule@@Base+0x1a8>
  4300e0:	mov	w0, #0x0                   	// #0
  4300e4:	b	43018c <convert_to_pattern@@Base+0x9e4>
  4300e8:	ldr	w0, [sp, #60]
  4300ec:	add	w0, w0, #0x1
  4300f0:	str	w0, [sp, #60]
  4300f4:	ldr	x0, [sp, #24]
  4300f8:	ldrh	w0, [x0, #48]
  4300fc:	mov	w1, w0
  430100:	ldr	w0, [sp, #60]
  430104:	cmp	w0, w1
  430108:	b.cc	42fd84 <convert_to_pattern@@Base+0x5dc>  // b.lo, b.ul, b.last
  43010c:	ldr	x0, [sp, #72]
  430110:	str	x0, [sp, #64]
  430114:	ldr	x0, [sp, #72]
  430118:	ldr	x0, [x0]
  43011c:	str	x0, [sp, #72]
  430120:	ldr	x0, [sp, #72]
  430124:	cmp	x0, #0x0
  430128:	b.ne	42fd7c <convert_to_pattern@@Base+0x5d4>  // b.any
  43012c:	nop
  430130:	ldr	x0, [sp, #72]
  430134:	cmp	x0, #0x0
  430138:	b.ne	430188 <convert_to_pattern@@Base+0x9e0>  // b.any
  43013c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430140:	add	x0, x0, #0xb30
  430144:	ldr	x0, [x0]
  430148:	cmp	x0, #0x0
  43014c:	b.ne	430164 <convert_to_pattern@@Base+0x9bc>  // b.any
  430150:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430154:	add	x0, x0, #0xb30
  430158:	ldr	x1, [sp, #24]
  43015c:	str	x1, [x0]
  430160:	b	430178 <convert_to_pattern@@Base+0x9d0>
  430164:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430168:	add	x0, x0, #0xb48
  43016c:	ldr	x0, [x0]
  430170:	ldr	x1, [sp, #24]
  430174:	str	x1, [x0]
  430178:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43017c:	add	x0, x0, #0xb48
  430180:	ldr	x1, [sp, #24]
  430184:	str	x1, [x0]
  430188:	mov	w0, #0x1                   	// #1
  43018c:	ldp	x29, x30, [sp], #80
  430190:	ret

0000000000430194 <install_pattern_rule@@Base>:
  430194:	stp	x29, x30, [sp, #-64]!
  430198:	mov	x29, sp
  43019c:	str	x19, [sp, #16]
  4301a0:	str	x0, [sp, #40]
  4301a4:	str	w1, [sp, #36]
  4301a8:	mov	x0, #0x38                  	// #56
  4301ac:	bl	42268c <xmalloc@@Base>
  4301b0:	str	x0, [sp, #56]
  4301b4:	ldr	x0, [sp, #56]
  4301b8:	mov	w1, #0x1                   	// #1
  4301bc:	strh	w1, [x0, #48]
  4301c0:	mov	x0, #0x8                   	// #8
  4301c4:	bl	42268c <xmalloc@@Base>
  4301c8:	mov	x1, x0
  4301cc:	ldr	x0, [sp, #56]
  4301d0:	str	x1, [x0, #8]
  4301d4:	mov	x0, #0x8                   	// #8
  4301d8:	bl	42268c <xmalloc@@Base>
  4301dc:	mov	x1, x0
  4301e0:	ldr	x0, [sp, #56]
  4301e4:	str	x1, [x0, #24]
  4301e8:	mov	x0, #0x4                   	// #4
  4301ec:	bl	42268c <xmalloc@@Base>
  4301f0:	mov	x1, x0
  4301f4:	ldr	x0, [sp, #56]
  4301f8:	str	x1, [x0, #16]
  4301fc:	ldr	x0, [sp, #40]
  430200:	ldr	x0, [x0]
  430204:	bl	4066f0 <strlen@plt>
  430208:	mov	x1, x0
  43020c:	ldr	x0, [sp, #56]
  430210:	ldr	x0, [x0, #16]
  430214:	str	w1, [x0]
  430218:	ldr	x0, [sp, #56]
  43021c:	ldr	x0, [x0, #8]
  430220:	ldr	x1, [sp, #40]
  430224:	ldr	x1, [x1]
  430228:	str	x1, [x0]
  43022c:	ldr	x0, [sp, #56]
  430230:	ldr	x1, [x0, #8]
  430234:	ldr	x0, [sp, #56]
  430238:	ldr	x19, [x0, #24]
  43023c:	mov	x0, x1
  430240:	bl	4294f0 <find_percent_cached@@Base>
  430244:	str	x0, [x19]
  430248:	ldr	x0, [sp, #56]
  43024c:	ldr	x0, [x0, #24]
  430250:	ldr	x1, [x0]
  430254:	add	x1, x1, #0x1
  430258:	str	x1, [x0]
  43025c:	ldr	x0, [sp, #40]
  430260:	ldr	x0, [x0, #8]
  430264:	str	x0, [sp, #48]
  430268:	add	x0, sp, #0x30
  43026c:	mov	w4, #0x0                   	// #0
  430270:	mov	x3, #0x0                   	// #0
  430274:	mov	w2, #0x1                   	// #1
  430278:	mov	x1, #0x28                  	// #40
  43027c:	bl	42a5e0 <parse_file_seq@@Base>
  430280:	mov	x1, x0
  430284:	ldr	x0, [sp, #56]
  430288:	str	x1, [x0, #32]
  43028c:	mov	w1, #0x0                   	// #0
  430290:	ldr	x0, [sp, #56]
  430294:	bl	42fd3c <convert_to_pattern@@Base+0x594>
  430298:	cmp	w0, #0x0
  43029c:	b.eq	43032c <install_pattern_rule@@Base+0x198>  // b.none
  4302a0:	ldr	w0, [sp, #36]
  4302a4:	cmp	w0, #0x0
  4302a8:	cset	w0, ne  // ne = any
  4302ac:	and	w0, w0, #0xff
  4302b0:	mov	w1, w0
  4302b4:	ldr	x0, [sp, #56]
  4302b8:	strb	w1, [x0, #50]
  4302bc:	mov	x0, #0x38                  	// #56
  4302c0:	bl	42268c <xmalloc@@Base>
  4302c4:	mov	x1, x0
  4302c8:	ldr	x0, [sp, #56]
  4302cc:	str	x1, [x0, #40]
  4302d0:	ldr	x0, [sp, #56]
  4302d4:	ldr	x0, [x0, #40]
  4302d8:	str	xzr, [x0]
  4302dc:	ldr	x0, [sp, #56]
  4302e0:	ldr	x0, [x0, #40]
  4302e4:	str	xzr, [x0, #8]
  4302e8:	ldr	x0, [sp, #56]
  4302ec:	ldr	x0, [x0, #40]
  4302f0:	str	xzr, [x0, #16]
  4302f4:	ldr	x0, [sp, #40]
  4302f8:	ldr	x1, [x0, #16]
  4302fc:	ldr	x0, [sp, #56]
  430300:	ldr	x19, [x0, #40]
  430304:	mov	x0, x1
  430308:	bl	422788 <xstrdup@@Base>
  43030c:	str	x0, [x19, #24]
  430310:	ldr	x0, [sp, #56]
  430314:	ldr	x0, [x0, #40]
  430318:	str	xzr, [x0, #32]
  43031c:	ldr	x0, [sp, #56]
  430320:	ldr	x0, [x0, #40]
  430324:	mov	w1, #0x9                   	// #9
  430328:	strb	w1, [x0, #50]
  43032c:	nop
  430330:	ldr	x19, [sp, #16]
  430334:	ldp	x29, x30, [sp], #64
  430338:	ret
  43033c:	stp	x29, x30, [sp, #-48]!
  430340:	mov	x29, sp
  430344:	str	x0, [sp, #24]
  430348:	str	x1, [sp, #16]
  43034c:	ldr	x0, [sp, #24]
  430350:	ldr	x0, [x0]
  430354:	str	x0, [sp, #40]
  430358:	ldr	x0, [sp, #24]
  43035c:	ldr	x0, [x0, #32]
  430360:	bl	422b98 <free_ns_chain@@Base>
  430364:	ldr	x0, [sp, #24]
  430368:	ldr	x0, [x0, #8]
  43036c:	bl	406c00 <free@plt>
  430370:	ldr	x0, [sp, #24]
  430374:	ldr	x0, [x0, #24]
  430378:	bl	406c00 <free@plt>
  43037c:	ldr	x0, [sp, #24]
  430380:	ldr	x0, [x0, #16]
  430384:	bl	406c00 <free@plt>
  430388:	ldr	x0, [sp, #24]
  43038c:	bl	406c00 <free@plt>
  430390:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430394:	add	x0, x0, #0xb30
  430398:	ldr	x0, [x0]
  43039c:	ldr	x1, [sp, #24]
  4303a0:	cmp	x1, x0
  4303a4:	b.ne	4303cc <install_pattern_rule@@Base+0x238>  // b.any
  4303a8:	ldr	x0, [sp, #16]
  4303ac:	cmp	x0, #0x0
  4303b0:	b.eq	4303b8 <install_pattern_rule@@Base+0x224>  // b.none
  4303b4:	bl	406b30 <abort@plt>
  4303b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4303bc:	add	x0, x0, #0xb30
  4303c0:	ldr	x1, [sp, #40]
  4303c4:	str	x1, [x0]
  4303c8:	b	4303e4 <install_pattern_rule@@Base+0x250>
  4303cc:	ldr	x0, [sp, #16]
  4303d0:	cmp	x0, #0x0
  4303d4:	b.eq	4303e4 <install_pattern_rule@@Base+0x250>  // b.none
  4303d8:	ldr	x0, [sp, #16]
  4303dc:	ldr	x1, [sp, #40]
  4303e0:	str	x1, [x0]
  4303e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4303e8:	add	x0, x0, #0xb48
  4303ec:	ldr	x0, [x0]
  4303f0:	ldr	x1, [sp, #24]
  4303f4:	cmp	x1, x0
  4303f8:	b.ne	43040c <install_pattern_rule@@Base+0x278>  // b.any
  4303fc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430400:	add	x0, x0, #0xb48
  430404:	ldr	x1, [sp, #16]
  430408:	str	x1, [x0]
  43040c:	nop
  430410:	ldp	x29, x30, [sp], #48
  430414:	ret

0000000000430418 <create_pattern_rule@@Base>:
  430418:	stp	x29, x30, [sp, #-80]!
  43041c:	mov	x29, sp
  430420:	str	x0, [sp, #56]
  430424:	str	x1, [sp, #48]
  430428:	strh	w2, [sp, #46]
  43042c:	str	w3, [sp, #40]
  430430:	str	x4, [sp, #32]
  430434:	str	x5, [sp, #24]
  430438:	str	w6, [sp, #20]
  43043c:	mov	x0, #0x38                  	// #56
  430440:	bl	42268c <xmalloc@@Base>
  430444:	str	x0, [sp, #64]
  430448:	ldr	x0, [sp, #64]
  43044c:	ldrh	w1, [sp, #46]
  430450:	strh	w1, [x0, #48]
  430454:	ldr	x0, [sp, #64]
  430458:	ldr	x1, [sp, #24]
  43045c:	str	x1, [x0, #40]
  430460:	ldr	x0, [sp, #64]
  430464:	ldr	x1, [sp, #32]
  430468:	str	x1, [x0, #32]
  43046c:	ldr	x0, [sp, #64]
  430470:	ldr	x1, [sp, #56]
  430474:	str	x1, [x0, #8]
  430478:	ldr	x0, [sp, #64]
  43047c:	ldr	x1, [sp, #48]
  430480:	str	x1, [x0, #24]
  430484:	ldrh	w0, [sp, #46]
  430488:	lsl	x0, x0, #2
  43048c:	bl	42268c <xmalloc@@Base>
  430490:	mov	x1, x0
  430494:	ldr	x0, [sp, #64]
  430498:	str	x1, [x0, #16]
  43049c:	str	wzr, [sp, #76]
  4304a0:	b	430508 <create_pattern_rule@@Base+0xf0>
  4304a4:	ldr	w0, [sp, #76]
  4304a8:	lsl	x0, x0, #3
  4304ac:	ldr	x1, [sp, #56]
  4304b0:	add	x0, x1, x0
  4304b4:	ldr	x0, [x0]
  4304b8:	bl	4066f0 <strlen@plt>
  4304bc:	mov	x2, x0
  4304c0:	ldr	x0, [sp, #64]
  4304c4:	ldr	x1, [x0, #16]
  4304c8:	ldr	w0, [sp, #76]
  4304cc:	lsl	x0, x0, #2
  4304d0:	add	x0, x1, x0
  4304d4:	mov	w1, w2
  4304d8:	str	w1, [x0]
  4304dc:	ldr	x0, [sp, #64]
  4304e0:	ldr	x1, [x0, #24]
  4304e4:	ldr	w0, [sp, #76]
  4304e8:	lsl	x0, x0, #3
  4304ec:	add	x0, x1, x0
  4304f0:	ldr	x1, [x0]
  4304f4:	add	x1, x1, #0x1
  4304f8:	str	x1, [x0]
  4304fc:	ldr	w0, [sp, #76]
  430500:	add	w0, w0, #0x1
  430504:	str	w0, [sp, #76]
  430508:	ldrh	w0, [sp, #46]
  43050c:	ldr	w1, [sp, #76]
  430510:	cmp	w1, w0
  430514:	b.cc	4304a4 <create_pattern_rule@@Base+0x8c>  // b.lo, b.ul, b.last
  430518:	ldr	w1, [sp, #20]
  43051c:	ldr	x0, [sp, #64]
  430520:	bl	42fd3c <convert_to_pattern@@Base+0x594>
  430524:	cmp	w0, #0x0
  430528:	b.eq	430548 <create_pattern_rule@@Base+0x130>  // b.none
  43052c:	ldr	w0, [sp, #40]
  430530:	cmp	w0, #0x0
  430534:	cset	w0, ne  // ne = any
  430538:	and	w0, w0, #0xff
  43053c:	mov	w1, w0
  430540:	ldr	x0, [sp, #64]
  430544:	strb	w1, [x0, #50]
  430548:	nop
  43054c:	ldp	x29, x30, [sp], #80
  430550:	ret
  430554:	stp	x29, x30, [sp, #-48]!
  430558:	mov	x29, sp
  43055c:	str	x0, [sp, #24]
  430560:	str	wzr, [sp, #44]
  430564:	b	4305cc <create_pattern_rule@@Base+0x1b4>
  430568:	ldr	x0, [sp, #24]
  43056c:	ldr	x1, [x0, #8]
  430570:	ldr	w0, [sp, #44]
  430574:	lsl	x0, x0, #3
  430578:	add	x0, x1, x0
  43057c:	ldr	x2, [x0]
  430580:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  430584:	add	x0, x0, #0x400
  430588:	ldr	x0, [x0]
  43058c:	mov	x1, x0
  430590:	mov	x0, x2
  430594:	bl	406700 <fputs@plt>
  430598:	ldr	w0, [sp, #44]
  43059c:	add	w0, w0, #0x1
  4305a0:	ldr	x1, [sp, #24]
  4305a4:	ldrh	w1, [x1, #48]
  4305a8:	cmp	w0, w1
  4305ac:	b.ne	4305b8 <create_pattern_rule@@Base+0x1a0>  // b.any
  4305b0:	mov	w0, #0x3a                  	// #58
  4305b4:	b	4305bc <create_pattern_rule@@Base+0x1a4>
  4305b8:	mov	w0, #0x20                  	// #32
  4305bc:	bl	406e00 <putchar@plt>
  4305c0:	ldr	w0, [sp, #44]
  4305c4:	add	w0, w0, #0x1
  4305c8:	str	w0, [sp, #44]
  4305cc:	ldr	x0, [sp, #24]
  4305d0:	ldrh	w0, [x0, #48]
  4305d4:	mov	w1, w0
  4305d8:	ldr	w0, [sp, #44]
  4305dc:	cmp	w0, w1
  4305e0:	b.cc	430568 <create_pattern_rule@@Base+0x150>  // b.lo, b.ul, b.last
  4305e4:	ldr	x0, [sp, #24]
  4305e8:	ldrb	w0, [x0, #50]
  4305ec:	cmp	w0, #0x0
  4305f0:	b.eq	4305fc <create_pattern_rule@@Base+0x1e4>  // b.none
  4305f4:	mov	w0, #0x3a                  	// #58
  4305f8:	bl	406e00 <putchar@plt>
  4305fc:	ldr	x0, [sp, #24]
  430600:	ldr	x0, [x0, #32]
  430604:	bl	40e660 <print_prereqs@@Base>
  430608:	ldr	x0, [sp, #24]
  43060c:	ldr	x0, [x0, #40]
  430610:	cmp	x0, #0x0
  430614:	b.eq	430624 <create_pattern_rule@@Base+0x20c>  // b.none
  430618:	ldr	x0, [sp, #24]
  43061c:	ldr	x0, [x0, #40]
  430620:	bl	409a0c <print_commands@@Base>
  430624:	nop
  430628:	ldp	x29, x30, [sp], #48
  43062c:	ret

0000000000430630 <print_rule_data_base@@Base>:
  430630:	stp	x29, x30, [sp, #-32]!
  430634:	mov	x29, sp
  430638:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  43063c:	add	x0, x0, #0xbe8
  430640:	bl	406e40 <gettext@plt>
  430644:	bl	406b60 <puts@plt>
  430648:	str	wzr, [sp, #24]
  43064c:	ldr	w0, [sp, #24]
  430650:	str	w0, [sp, #28]
  430654:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430658:	add	x0, x0, #0xb30
  43065c:	ldr	x0, [x0]
  430660:	str	x0, [sp, #16]
  430664:	b	4306ac <print_rule_data_base@@Base+0x7c>
  430668:	ldr	w0, [sp, #28]
  43066c:	add	w0, w0, #0x1
  430670:	str	w0, [sp, #28]
  430674:	mov	w0, #0xa                   	// #10
  430678:	bl	406e00 <putchar@plt>
  43067c:	ldr	x0, [sp, #16]
  430680:	bl	430554 <create_pattern_rule@@Base+0x13c>
  430684:	ldr	x0, [sp, #16]
  430688:	ldrb	w0, [x0, #50]
  43068c:	cmp	w0, #0x0
  430690:	b.eq	4306a0 <print_rule_data_base@@Base+0x70>  // b.none
  430694:	ldr	w0, [sp, #24]
  430698:	add	w0, w0, #0x1
  43069c:	str	w0, [sp, #24]
  4306a0:	ldr	x0, [sp, #16]
  4306a4:	ldr	x0, [x0]
  4306a8:	str	x0, [sp, #16]
  4306ac:	ldr	x0, [sp, #16]
  4306b0:	cmp	x0, #0x0
  4306b4:	b.ne	430668 <print_rule_data_base@@Base+0x38>  // b.any
  4306b8:	ldr	w0, [sp, #28]
  4306bc:	cmp	w0, #0x0
  4306c0:	b.ne	4306d8 <print_rule_data_base@@Base+0xa8>  // b.any
  4306c4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4306c8:	add	x0, x0, #0xc00
  4306cc:	bl	406e40 <gettext@plt>
  4306d0:	bl	406b60 <puts@plt>
  4306d4:	b	430718 <print_rule_data_base@@Base+0xe8>
  4306d8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4306dc:	add	x0, x0, #0xc18
  4306e0:	bl	406e40 <gettext@plt>
  4306e4:	mov	x3, x0
  4306e8:	ldr	w0, [sp, #24]
  4306ec:	ucvtf	d1, w0
  4306f0:	ldr	w0, [sp, #28]
  4306f4:	ucvtf	d0, w0
  4306f8:	fdiv	d0, d1, d0
  4306fc:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  430700:	fmov	d1, x0
  430704:	fmul	d0, d0, d1
  430708:	ldr	w2, [sp, #24]
  43070c:	ldr	w1, [sp, #28]
  430710:	mov	x0, x3
  430714:	bl	406dc0 <printf@plt>
  430718:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43071c:	add	x0, x0, #0xb50
  430720:	ldr	w0, [x0]
  430724:	ldr	w1, [sp, #28]
  430728:	cmp	w1, w0
  43072c:	b.eq	430778 <print_rule_data_base@@Base+0x148>  // b.none
  430730:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430734:	add	x0, x0, #0xb50
  430738:	ldr	w0, [x0]
  43073c:	cmp	w0, #0x0
  430740:	b.eq	430778 <print_rule_data_base@@Base+0x148>  // b.none
  430744:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  430748:	add	x0, x0, #0xc48
  43074c:	bl	406e40 <gettext@plt>
  430750:	mov	x1, x0
  430754:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430758:	add	x0, x0, #0xb50
  43075c:	ldr	w0, [x0]
  430760:	ldr	w4, [sp, #28]
  430764:	mov	w3, w0
  430768:	mov	x2, x1
  43076c:	mov	x1, #0x28                  	// #40
  430770:	mov	x0, #0x0                   	// #0
  430774:	bl	424098 <fatal@@Base>
  430778:	nop
  43077c:	ldp	x29, x30, [sp], #32
  430780:	ret
  430784:	stp	x29, x30, [sp, #-48]!
  430788:	mov	x29, sp
  43078c:	str	x0, [sp, #24]
  430790:	strh	w1, [sp, #22]
  430794:	ldrh	w0, [sp, #22]
  430798:	add	x0, x0, #0xe
  43079c:	bl	42268c <xmalloc@@Base>
  4307a0:	str	x0, [sp, #40]
  4307a4:	ldr	x0, [sp, #40]
  4307a8:	strh	wzr, [x0, #8]
  4307ac:	ldr	x0, [sp, #40]
  4307b0:	strh	wzr, [x0, #12]
  4307b4:	ldr	x0, [sp, #40]
  4307b8:	ldrh	w1, [sp, #22]
  4307bc:	strh	w1, [x0, #10]
  4307c0:	ldr	x0, [sp, #24]
  4307c4:	ldr	x1, [x0]
  4307c8:	ldr	x0, [sp, #40]
  4307cc:	str	x1, [x0]
  4307d0:	ldr	x0, [sp, #24]
  4307d4:	ldr	x1, [sp, #40]
  4307d8:	str	x1, [x0]
  4307dc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4307e0:	add	x0, x0, #0xe8
  4307e4:	ldr	x0, [x0]
  4307e8:	add	x1, x0, #0x1
  4307ec:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4307f0:	add	x0, x0, #0xe8
  4307f4:	str	x1, [x0]
  4307f8:	ldr	x0, [sp, #40]
  4307fc:	ldp	x29, x30, [sp], #48
  430800:	ret
  430804:	stp	x29, x30, [sp, #-64]!
  430808:	mov	x29, sp
  43080c:	str	x0, [sp, #40]
  430810:	str	x1, [sp, #32]
  430814:	strh	w2, [sp, #30]
  430818:	ldr	x0, [sp, #40]
  43081c:	ldrh	w0, [x0, #8]
  430820:	sxtw	x0, w0
  430824:	ldr	x1, [sp, #40]
  430828:	add	x0, x1, x0
  43082c:	add	x0, x0, #0xe
  430830:	str	x0, [sp, #56]
  430834:	ldrh	w0, [sp, #30]
  430838:	mov	x2, x0
  43083c:	ldr	x1, [sp, #32]
  430840:	ldr	x0, [sp, #56]
  430844:	bl	4066c0 <memmove@plt>
  430848:	ldrh	w0, [sp, #30]
  43084c:	add	w1, w0, #0x1
  430850:	strh	w1, [sp, #30]
  430854:	and	x0, x0, #0xffff
  430858:	ldr	x1, [sp, #56]
  43085c:	add	x0, x1, x0
  430860:	strb	wzr, [x0]
  430864:	ldr	x0, [sp, #40]
  430868:	ldrh	w0, [x0, #8]
  43086c:	ldrh	w1, [sp, #30]
  430870:	add	w0, w0, w1
  430874:	and	w1, w0, #0xffff
  430878:	ldr	x0, [sp, #40]
  43087c:	strh	w1, [x0, #8]
  430880:	ldr	x0, [sp, #40]
  430884:	ldrh	w1, [x0, #10]
  430888:	ldrh	w0, [sp, #30]
  43088c:	sub	w0, w1, w0
  430890:	and	w1, w0, #0xffff
  430894:	ldr	x0, [sp, #40]
  430898:	strh	w1, [x0, #10]
  43089c:	ldr	x0, [sp, #40]
  4308a0:	ldrh	w0, [x0, #12]
  4308a4:	add	w0, w0, #0x1
  4308a8:	and	w1, w0, #0xffff
  4308ac:	ldr	x0, [sp, #40]
  4308b0:	strh	w1, [x0, #12]
  4308b4:	ldr	x0, [sp, #56]
  4308b8:	ldp	x29, x30, [sp], #64
  4308bc:	ret
  4308c0:	stp	x29, x30, [sp, #-64]!
  4308c4:	mov	x29, sp
  4308c8:	str	x0, [sp, #24]
  4308cc:	strh	w1, [sp, #22]
  4308d0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4308d4:	add	x0, x0, #0xd8
  4308d8:	str	x0, [sp, #48]
  4308dc:	ldrh	w0, [sp, #22]
  4308e0:	add	w0, w0, #0x1
  4308e4:	strh	w0, [sp, #46]
  4308e8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4308ec:	add	x0, x0, #0xf0
  4308f0:	ldr	x0, [x0]
  4308f4:	add	x1, x0, #0x1
  4308f8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4308fc:	add	x0, x0, #0xf0
  430900:	str	x1, [x0]
  430904:	ldrh	w1, [sp, #46]
  430908:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43090c:	add	x0, x0, #0xf8
  430910:	ldr	x0, [x0]
  430914:	add	x1, x1, x0
  430918:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43091c:	add	x0, x0, #0xf8
  430920:	str	x1, [x0]
  430924:	ldrh	w1, [sp, #46]
  430928:	mov	w0, #0x1fe2                	// #8162
  43092c:	cmp	w1, w0
  430930:	b.ls	430980 <print_rule_data_base@@Base+0x350>  // b.plast
  430934:	ldrh	w1, [sp, #46]
  430938:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43093c:	add	x0, x0, #0xe0
  430940:	bl	430784 <print_rule_data_base@@Base+0x154>
  430944:	str	x0, [sp, #56]
  430948:	ldrh	w2, [sp, #22]
  43094c:	ldr	x1, [sp, #24]
  430950:	ldr	x0, [sp, #56]
  430954:	bl	430804 <print_rule_data_base@@Base+0x1d4>
  430958:	b	430a64 <print_rule_data_base@@Base+0x434>
  43095c:	ldr	x0, [sp, #48]
  430960:	ldr	x0, [x0]
  430964:	ldrh	w0, [x0, #10]
  430968:	ldrh	w1, [sp, #46]
  43096c:	cmp	w1, w0
  430970:	b.cc	430994 <print_rule_data_base@@Base+0x364>  // b.lo, b.ul, b.last
  430974:	ldr	x0, [sp, #48]
  430978:	ldr	x0, [x0]
  43097c:	str	x0, [sp, #48]
  430980:	ldr	x0, [sp, #48]
  430984:	ldr	x0, [x0]
  430988:	cmp	x0, #0x0
  43098c:	b.ne	43095c <print_rule_data_base@@Base+0x32c>  // b.any
  430990:	b	430998 <print_rule_data_base@@Base+0x368>
  430994:	nop
  430998:	ldr	x0, [sp, #48]
  43099c:	ldr	x0, [x0]
  4309a0:	str	x0, [sp, #56]
  4309a4:	ldr	x0, [sp, #56]
  4309a8:	cmp	x0, #0x0
  4309ac:	b.ne	4309d0 <print_rule_data_base@@Base+0x3a0>  // b.any
  4309b0:	mov	w1, #0x1fe2                	// #8162
  4309b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4309b8:	add	x0, x0, #0xd8
  4309bc:	bl	430784 <print_rule_data_base@@Base+0x154>
  4309c0:	str	x0, [sp, #56]
  4309c4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4309c8:	add	x0, x0, #0xd8
  4309cc:	str	x0, [sp, #48]
  4309d0:	ldrh	w2, [sp, #22]
  4309d4:	ldr	x1, [sp, #24]
  4309d8:	ldr	x0, [sp, #56]
  4309dc:	bl	430804 <print_rule_data_base@@Base+0x1d4>
  4309e0:	str	x0, [sp, #32]
  4309e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4309e8:	add	x0, x0, #0xf0
  4309ec:	ldr	x0, [x0]
  4309f0:	cmp	x0, #0x14
  4309f4:	b.ls	430a60 <print_rule_data_base@@Base+0x430>  // b.plast
  4309f8:	ldr	x0, [sp, #56]
  4309fc:	ldrh	w0, [x0, #10]
  430a00:	and	x1, x0, #0xffff
  430a04:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430a08:	add	x0, x0, #0xf8
  430a0c:	ldr	x2, [x0]
  430a10:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430a14:	add	x0, x0, #0xf0
  430a18:	ldr	x0, [x0]
  430a1c:	udiv	x0, x2, x0
  430a20:	add	x0, x0, #0x1
  430a24:	cmp	x1, x0
  430a28:	b.cs	430a60 <print_rule_data_base@@Base+0x430>  // b.hs, b.nlast
  430a2c:	ldr	x0, [sp, #56]
  430a30:	ldr	x1, [x0]
  430a34:	ldr	x0, [sp, #48]
  430a38:	str	x1, [x0]
  430a3c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430a40:	add	x0, x0, #0xe0
  430a44:	ldr	x1, [x0]
  430a48:	ldr	x0, [sp, #56]
  430a4c:	str	x1, [x0]
  430a50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430a54:	add	x0, x0, #0xe0
  430a58:	ldr	x1, [sp, #56]
  430a5c:	str	x1, [x0]
  430a60:	ldr	x0, [sp, #32]
  430a64:	ldp	x29, x30, [sp], #64
  430a68:	ret
  430a6c:	stp	x29, x30, [sp, #-48]!
  430a70:	mov	x29, sp
  430a74:	str	x0, [sp, #24]
  430a78:	str	x1, [sp, #16]
  430a7c:	ldr	x0, [sp, #16]
  430a80:	add	x0, x0, #0x10
  430a84:	bl	42268c <xmalloc@@Base>
  430a88:	str	x0, [sp, #40]
  430a8c:	ldr	x0, [sp, #40]
  430a90:	add	x0, x0, #0x8
  430a94:	ldr	x2, [sp, #16]
  430a98:	ldr	x1, [sp, #24]
  430a9c:	bl	4066b0 <memcpy@plt>
  430aa0:	ldr	x1, [sp, #40]
  430aa4:	ldr	x0, [sp, #16]
  430aa8:	add	x0, x1, x0
  430aac:	strb	wzr, [x0, #8]
  430ab0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430ab4:	add	x0, x0, #0x100
  430ab8:	ldr	x1, [x0]
  430abc:	ldr	x0, [sp, #40]
  430ac0:	str	x1, [x0]
  430ac4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430ac8:	add	x0, x0, #0x100
  430acc:	ldr	x1, [sp, #40]
  430ad0:	str	x1, [x0]
  430ad4:	ldr	x0, [sp, #40]
  430ad8:	add	x0, x0, #0x8
  430adc:	ldp	x29, x30, [sp], #48
  430ae0:	ret
  430ae4:	stp	x29, x30, [sp, #-48]!
  430ae8:	mov	x29, sp
  430aec:	str	x0, [sp, #24]
  430af0:	str	xzr, [sp, #40]
  430af4:	ldr	x0, [sp, #24]
  430af8:	str	x0, [sp, #32]
  430afc:	ldr	x0, [sp, #32]
  430b00:	bl	415104 <jhash_string@@Base>
  430b04:	mov	w0, w0
  430b08:	ldr	x1, [sp, #40]
  430b0c:	add	x0, x1, x0
  430b10:	str	x0, [sp, #40]
  430b14:	ldr	x0, [sp, #40]
  430b18:	ldp	x29, x30, [sp], #48
  430b1c:	ret
  430b20:	sub	sp, sp, #0x20
  430b24:	str	x0, [sp, #8]
  430b28:	str	xzr, [sp, #24]
  430b2c:	ldr	x0, [sp, #24]
  430b30:	add	sp, sp, #0x20
  430b34:	ret
  430b38:	stp	x29, x30, [sp, #-32]!
  430b3c:	mov	x29, sp
  430b40:	str	x0, [sp, #24]
  430b44:	str	x1, [sp, #16]
  430b48:	ldr	x1, [sp, #24]
  430b4c:	ldr	x0, [sp, #16]
  430b50:	cmp	x1, x0
  430b54:	b.eq	430b68 <print_rule_data_base@@Base+0x538>  // b.none
  430b58:	ldr	x1, [sp, #16]
  430b5c:	ldr	x0, [sp, #24]
  430b60:	bl	406bc0 <strcmp@plt>
  430b64:	b	430b6c <print_rule_data_base@@Base+0x53c>
  430b68:	mov	w0, #0x0                   	// #0
  430b6c:	ldp	x29, x30, [sp], #32
  430b70:	ret
  430b74:	stp	x29, x30, [sp, #-48]!
  430b78:	mov	x29, sp
  430b7c:	str	x0, [sp, #24]
  430b80:	str	x1, [sp, #16]
  430b84:	ldr	x1, [sp, #16]
  430b88:	mov	x0, #0xfffe                	// #65534
  430b8c:	cmp	x1, x0
  430b90:	b.ls	430ba4 <print_rule_data_base@@Base+0x574>  // b.plast
  430b94:	ldr	x1, [sp, #16]
  430b98:	ldr	x0, [sp, #24]
  430b9c:	bl	430a6c <print_rule_data_base@@Base+0x43c>
  430ba0:	b	430c3c <print_rule_data_base@@Base+0x60c>
  430ba4:	ldr	x1, [sp, #24]
  430ba8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430bac:	add	x0, x0, #0x108
  430bb0:	bl	41422c <hash_find_slot@@Base>
  430bb4:	str	x0, [sp, #40]
  430bb8:	ldr	x0, [sp, #40]
  430bbc:	ldr	x0, [x0]
  430bc0:	str	x0, [sp, #32]
  430bc4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430bc8:	add	x0, x0, #0x160
  430bcc:	ldr	x0, [x0]
  430bd0:	add	x1, x0, #0x1
  430bd4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430bd8:	add	x0, x0, #0x160
  430bdc:	str	x1, [x0]
  430be0:	ldr	x0, [sp, #32]
  430be4:	cmp	x0, #0x0
  430be8:	b.eq	430c0c <print_rule_data_base@@Base+0x5dc>  // b.none
  430bec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  430bf0:	add	x0, x0, #0x40
  430bf4:	ldr	x0, [x0]
  430bf8:	ldr	x1, [sp, #32]
  430bfc:	cmp	x1, x0
  430c00:	b.eq	430c0c <print_rule_data_base@@Base+0x5dc>  // b.none
  430c04:	ldr	x0, [sp, #32]
  430c08:	b	430c3c <print_rule_data_base@@Base+0x60c>
  430c0c:	ldr	x0, [sp, #16]
  430c10:	and	w0, w0, #0xffff
  430c14:	mov	w1, w0
  430c18:	ldr	x0, [sp, #24]
  430c1c:	bl	4308c0 <print_rule_data_base@@Base+0x290>
  430c20:	str	x0, [sp, #32]
  430c24:	ldr	x2, [sp, #40]
  430c28:	ldr	x1, [sp, #32]
  430c2c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430c30:	add	x0, x0, #0x108
  430c34:	bl	414470 <hash_insert_at@@Base>
  430c38:	ldr	x0, [sp, #32]
  430c3c:	ldp	x29, x30, [sp], #48
  430c40:	ret

0000000000430c44 <strcache_iscached@@Base>:
  430c44:	sub	sp, sp, #0x20
  430c48:	str	x0, [sp, #8]
  430c4c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430c50:	add	x0, x0, #0xd8
  430c54:	ldr	x0, [x0]
  430c58:	str	x0, [sp, #24]
  430c5c:	b	430cac <strcache_iscached@@Base+0x68>
  430c60:	ldr	x0, [sp, #24]
  430c64:	add	x0, x0, #0xe
  430c68:	ldr	x1, [sp, #8]
  430c6c:	cmp	x1, x0
  430c70:	b.cc	430ca0 <strcache_iscached@@Base+0x5c>  // b.lo, b.ul, b.last
  430c74:	ldr	x0, [sp, #24]
  430c78:	add	x1, x0, #0xe
  430c7c:	ldr	x0, [sp, #24]
  430c80:	ldrh	w0, [x0, #8]
  430c84:	and	x0, x0, #0xffff
  430c88:	add	x0, x1, x0
  430c8c:	ldr	x1, [sp, #8]
  430c90:	cmp	x1, x0
  430c94:	b.cs	430ca0 <strcache_iscached@@Base+0x5c>  // b.hs, b.nlast
  430c98:	mov	w0, #0x1                   	// #1
  430c9c:	b	430d70 <strcache_iscached@@Base+0x12c>
  430ca0:	ldr	x0, [sp, #24]
  430ca4:	ldr	x0, [x0]
  430ca8:	str	x0, [sp, #24]
  430cac:	ldr	x0, [sp, #24]
  430cb0:	cmp	x0, #0x0
  430cb4:	b.ne	430c60 <strcache_iscached@@Base+0x1c>  // b.any
  430cb8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430cbc:	add	x0, x0, #0xe0
  430cc0:	ldr	x0, [x0]
  430cc4:	str	x0, [sp, #24]
  430cc8:	b	430d18 <strcache_iscached@@Base+0xd4>
  430ccc:	ldr	x0, [sp, #24]
  430cd0:	add	x0, x0, #0xe
  430cd4:	ldr	x1, [sp, #8]
  430cd8:	cmp	x1, x0
  430cdc:	b.cc	430d0c <strcache_iscached@@Base+0xc8>  // b.lo, b.ul, b.last
  430ce0:	ldr	x0, [sp, #24]
  430ce4:	add	x1, x0, #0xe
  430ce8:	ldr	x0, [sp, #24]
  430cec:	ldrh	w0, [x0, #8]
  430cf0:	and	x0, x0, #0xffff
  430cf4:	add	x0, x1, x0
  430cf8:	ldr	x1, [sp, #8]
  430cfc:	cmp	x1, x0
  430d00:	b.cs	430d0c <strcache_iscached@@Base+0xc8>  // b.hs, b.nlast
  430d04:	mov	w0, #0x1                   	// #1
  430d08:	b	430d70 <strcache_iscached@@Base+0x12c>
  430d0c:	ldr	x0, [sp, #24]
  430d10:	ldr	x0, [x0]
  430d14:	str	x0, [sp, #24]
  430d18:	ldr	x0, [sp, #24]
  430d1c:	cmp	x0, #0x0
  430d20:	b.ne	430ccc <strcache_iscached@@Base+0x88>  // b.any
  430d24:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430d28:	add	x0, x0, #0x100
  430d2c:	ldr	x0, [x0]
  430d30:	str	x0, [sp, #16]
  430d34:	b	430d60 <strcache_iscached@@Base+0x11c>
  430d38:	ldr	x0, [sp, #16]
  430d3c:	add	x0, x0, #0x8
  430d40:	ldr	x1, [sp, #8]
  430d44:	cmp	x1, x0
  430d48:	b.ne	430d54 <strcache_iscached@@Base+0x110>  // b.any
  430d4c:	mov	w0, #0x1                   	// #1
  430d50:	b	430d70 <strcache_iscached@@Base+0x12c>
  430d54:	ldr	x0, [sp, #16]
  430d58:	ldr	x0, [x0]
  430d5c:	str	x0, [sp, #16]
  430d60:	ldr	x0, [sp, #16]
  430d64:	cmp	x0, #0x0
  430d68:	b.ne	430d38 <strcache_iscached@@Base+0xf4>  // b.any
  430d6c:	mov	w0, #0x0                   	// #0
  430d70:	add	sp, sp, #0x20
  430d74:	ret

0000000000430d78 <strcache_add@@Base>:
  430d78:	stp	x29, x30, [sp, #-32]!
  430d7c:	mov	x29, sp
  430d80:	str	x0, [sp, #24]
  430d84:	ldr	x0, [sp, #24]
  430d88:	bl	4066f0 <strlen@plt>
  430d8c:	mov	x1, x0
  430d90:	ldr	x0, [sp, #24]
  430d94:	bl	430b74 <print_rule_data_base@@Base+0x544>
  430d98:	ldp	x29, x30, [sp], #32
  430d9c:	ret

0000000000430da0 <strcache_add_len@@Base>:
  430da0:	stp	x29, x30, [sp, #-48]!
  430da4:	mov	x29, sp
  430da8:	str	x0, [x29, #24]
  430dac:	str	x1, [x29, #16]
  430db0:	ldr	x1, [x29, #24]
  430db4:	ldr	x0, [x29, #16]
  430db8:	add	x0, x1, x0
  430dbc:	ldrb	w0, [x0]
  430dc0:	cmp	w0, #0x0
  430dc4:	b.eq	430e1c <strcache_add_len@@Base+0x7c>  // b.none
  430dc8:	ldr	x0, [x29, #16]
  430dcc:	add	x0, x0, #0x1
  430dd0:	add	x0, x0, #0xf
  430dd4:	lsr	x0, x0, #4
  430dd8:	lsl	x0, x0, #4
  430ddc:	sub	sp, sp, x0
  430de0:	mov	x0, sp
  430de4:	add	x0, x0, #0xf
  430de8:	lsr	x0, x0, #4
  430dec:	lsl	x0, x0, #4
  430df0:	str	x0, [x29, #40]
  430df4:	ldr	x2, [x29, #16]
  430df8:	ldr	x1, [x29, #24]
  430dfc:	ldr	x0, [x29, #40]
  430e00:	bl	4066b0 <memcpy@plt>
  430e04:	ldr	x1, [x29, #40]
  430e08:	ldr	x0, [x29, #16]
  430e0c:	add	x0, x1, x0
  430e10:	strb	wzr, [x0]
  430e14:	ldr	x0, [x29, #40]
  430e18:	str	x0, [x29, #24]
  430e1c:	ldr	x1, [x29, #16]
  430e20:	ldr	x0, [x29, #24]
  430e24:	bl	430b74 <print_rule_data_base@@Base+0x544>
  430e28:	mov	sp, x29
  430e2c:	ldp	x29, x30, [sp], #48
  430e30:	ret

0000000000430e34 <strcache_init@@Base>:
  430e34:	stp	x29, x30, [sp, #-16]!
  430e38:	mov	x29, sp
  430e3c:	adrp	x0, 430000 <convert_to_pattern@@Base+0x858>
  430e40:	add	x4, x0, #0xb38
  430e44:	adrp	x0, 430000 <convert_to_pattern@@Base+0x858>
  430e48:	add	x3, x0, #0xb20
  430e4c:	adrp	x0, 430000 <convert_to_pattern@@Base+0x858>
  430e50:	add	x2, x0, #0xae4
  430e54:	mov	x1, #0x1f40                	// #8000
  430e58:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430e5c:	add	x0, x0, #0x108
  430e60:	bl	4140a8 <hash_init@@Base>
  430e64:	nop
  430e68:	ldp	x29, x30, [sp], #16
  430e6c:	ret

0000000000430e70 <strcache_print_stats@@Base>:
  430e70:	stp	x29, x30, [sp, #-112]!
  430e74:	mov	x29, sp
  430e78:	str	x0, [sp, #24]
  430e7c:	str	xzr, [sp, #96]
  430e80:	str	xzr, [sp, #88]
  430e84:	str	xzr, [sp, #80]
  430e88:	str	xzr, [sp, #72]
  430e8c:	mov	x0, #0x1fe2                	// #8162
  430e90:	str	x0, [sp, #64]
  430e94:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430e98:	add	x0, x0, #0xd8
  430e9c:	ldr	x0, [x0]
  430ea0:	cmp	x0, #0x0
  430ea4:	b.ne	430ec0 <strcache_print_stats@@Base+0x50>  // b.any
  430ea8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  430eac:	add	x0, x0, #0xc78
  430eb0:	bl	406e40 <gettext@plt>
  430eb4:	ldr	x1, [sp, #24]
  430eb8:	bl	406dc0 <printf@plt>
  430ebc:	b	431244 <strcache_print_stats@@Base+0x3d4>
  430ec0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430ec4:	add	x0, x0, #0xd8
  430ec8:	ldr	x0, [x0]
  430ecc:	ldr	x0, [x0]
  430ed0:	str	x0, [sp, #104]
  430ed4:	b	430f3c <strcache_print_stats@@Base+0xcc>
  430ed8:	ldr	x0, [sp, #104]
  430edc:	ldrh	w0, [x0, #10]
  430ee0:	strh	w0, [sp, #42]
  430ee4:	ldrh	w0, [sp, #42]
  430ee8:	ldr	x1, [sp, #80]
  430eec:	add	x0, x1, x0
  430ef0:	str	x0, [sp, #80]
  430ef4:	ldrh	w0, [sp, #42]
  430ef8:	ldr	x2, [sp, #72]
  430efc:	ldr	x1, [sp, #72]
  430f00:	cmp	x2, x0
  430f04:	csel	x0, x1, x0, cs  // cs = hs, nlast
  430f08:	str	x0, [sp, #72]
  430f0c:	ldrh	w0, [sp, #42]
  430f10:	ldr	x2, [sp, #64]
  430f14:	ldr	x1, [sp, #64]
  430f18:	cmp	x2, x0
  430f1c:	csel	x0, x1, x0, ls  // ls = plast
  430f20:	str	x0, [sp, #64]
  430f24:	ldr	x0, [sp, #96]
  430f28:	add	x0, x0, #0x1
  430f2c:	str	x0, [sp, #96]
  430f30:	ldr	x0, [sp, #104]
  430f34:	ldr	x0, [x0]
  430f38:	str	x0, [sp, #104]
  430f3c:	ldr	x0, [sp, #104]
  430f40:	cmp	x0, #0x0
  430f44:	b.ne	430ed8 <strcache_print_stats@@Base+0x68>  // b.any
  430f48:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430f4c:	add	x0, x0, #0xe0
  430f50:	ldr	x0, [x0]
  430f54:	str	x0, [sp, #104]
  430f58:	b	430fcc <strcache_print_stats@@Base+0x15c>
  430f5c:	ldr	x0, [sp, #104]
  430f60:	ldrh	w0, [x0, #10]
  430f64:	strh	w0, [sp, #44]
  430f68:	ldrh	w0, [sp, #44]
  430f6c:	ldr	x1, [sp, #80]
  430f70:	add	x0, x1, x0
  430f74:	str	x0, [sp, #80]
  430f78:	ldrh	w0, [sp, #44]
  430f7c:	ldr	x2, [sp, #72]
  430f80:	ldr	x1, [sp, #72]
  430f84:	cmp	x2, x0
  430f88:	csel	x0, x1, x0, cs  // cs = hs, nlast
  430f8c:	str	x0, [sp, #72]
  430f90:	ldrh	w0, [sp, #44]
  430f94:	ldr	x2, [sp, #64]
  430f98:	ldr	x1, [sp, #64]
  430f9c:	cmp	x2, x0
  430fa0:	csel	x0, x1, x0, ls  // ls = plast
  430fa4:	str	x0, [sp, #64]
  430fa8:	ldr	x0, [sp, #96]
  430fac:	add	x0, x0, #0x1
  430fb0:	str	x0, [sp, #96]
  430fb4:	ldr	x0, [sp, #88]
  430fb8:	add	x0, x0, #0x1
  430fbc:	str	x0, [sp, #88]
  430fc0:	ldr	x0, [sp, #104]
  430fc4:	ldr	x0, [x0]
  430fc8:	str	x0, [sp, #104]
  430fcc:	ldr	x0, [sp, #104]
  430fd0:	cmp	x0, #0x0
  430fd4:	b.ne	430f5c <strcache_print_stats@@Base+0xec>  // b.any
  430fd8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  430fdc:	add	x0, x0, #0xc98
  430fe0:	bl	406e40 <gettext@plt>
  430fe4:	mov	x7, x0
  430fe8:	ldr	x0, [sp, #96]
  430fec:	add	x2, x0, #0x1
  430ff0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  430ff4:	add	x0, x0, #0xf0
  430ff8:	ldr	x3, [x0]
  430ffc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431000:	add	x0, x0, #0xf8
  431004:	ldr	x4, [x0]
  431008:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43100c:	add	x0, x0, #0xf8
  431010:	ldr	x1, [x0]
  431014:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431018:	add	x0, x0, #0xf0
  43101c:	ldr	x0, [x0]
  431020:	udiv	x0, x1, x0
  431024:	mov	x6, x0
  431028:	mov	x5, x4
  43102c:	mov	x4, x3
  431030:	ldr	x3, [sp, #88]
  431034:	ldr	x1, [sp, #24]
  431038:	mov	x0, x7
  43103c:	bl	406dc0 <printf@plt>
  431040:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431044:	add	x0, x0, #0xcf0
  431048:	bl	406e40 <gettext@plt>
  43104c:	mov	x6, x0
  431050:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431054:	add	x0, x0, #0xd8
  431058:	ldr	x0, [x0]
  43105c:	ldrh	w0, [x0, #8]
  431060:	mov	w2, w0
  431064:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431068:	add	x0, x0, #0xd8
  43106c:	ldr	x0, [x0]
  431070:	ldrh	w0, [x0, #12]
  431074:	mov	w3, w0
  431078:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43107c:	add	x0, x0, #0xd8
  431080:	ldr	x0, [x0]
  431084:	ldrh	w1, [x0, #8]
  431088:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43108c:	add	x0, x0, #0xd8
  431090:	ldr	x0, [x0]
  431094:	ldrh	w0, [x0, #12]
  431098:	udiv	w0, w1, w0
  43109c:	and	w0, w0, #0xffff
  4310a0:	mov	w5, w0
  4310a4:	mov	w4, w3
  4310a8:	mov	w3, w2
  4310ac:	mov	w2, #0x1fe2                	// #8162
  4310b0:	ldr	x1, [sp, #24]
  4310b4:	mov	x0, x6
  4310b8:	bl	406dc0 <printf@plt>
  4310bc:	ldr	x0, [sp, #96]
  4310c0:	cmp	x0, #0x0
  4310c4:	b.eq	43118c <strcache_print_stats@@Base+0x31c>  // b.none
  4310c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4310cc:	add	x0, x0, #0xf8
  4310d0:	ldr	x1, [x0]
  4310d4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4310d8:	add	x0, x0, #0xd8
  4310dc:	ldr	x0, [x0]
  4310e0:	ldrh	w0, [x0, #8]
  4310e4:	and	x0, x0, #0xffff
  4310e8:	sub	x0, x1, x0
  4310ec:	str	x0, [sp, #56]
  4310f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4310f4:	add	x0, x0, #0xf0
  4310f8:	ldr	x1, [x0]
  4310fc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431100:	add	x0, x0, #0xd8
  431104:	ldr	x0, [x0]
  431108:	ldrh	w0, [x0, #12]
  43110c:	and	x0, x0, #0xffff
  431110:	sub	x0, x1, x0
  431114:	str	x0, [sp, #48]
  431118:	ldr	x1, [sp, #80]
  43111c:	ldr	x0, [sp, #96]
  431120:	udiv	x0, x1, x0
  431124:	strh	w0, [sp, #46]
  431128:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  43112c:	add	x0, x0, #0xd38
  431130:	bl	406e40 <gettext@plt>
  431134:	mov	x5, x0
  431138:	ldr	x1, [sp, #56]
  43113c:	ldr	x0, [sp, #48]
  431140:	udiv	x0, x1, x0
  431144:	mov	x4, x0
  431148:	ldr	x3, [sp, #48]
  43114c:	ldr	x2, [sp, #56]
  431150:	ldr	x1, [sp, #24]
  431154:	mov	x0, x5
  431158:	bl	406dc0 <printf@plt>
  43115c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431160:	add	x0, x0, #0xd78
  431164:	bl	406e40 <gettext@plt>
  431168:	mov	x6, x0
  43116c:	ldrh	w0, [sp, #46]
  431170:	mov	w5, w0
  431174:	ldr	x4, [sp, #64]
  431178:	ldr	x3, [sp, #72]
  43117c:	ldr	x2, [sp, #80]
  431180:	ldr	x1, [sp, #24]
  431184:	mov	x0, x6
  431188:	bl	406dc0 <printf@plt>
  43118c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431190:	add	x0, x0, #0xdc0
  431194:	bl	406e40 <gettext@plt>
  431198:	mov	x4, x0
  43119c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4311a0:	add	x0, x0, #0x160
  4311a4:	ldr	x2, [x0]
  4311a8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4311ac:	add	x0, x0, #0x160
  4311b0:	ldr	x1, [x0]
  4311b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4311b8:	add	x0, x0, #0xf0
  4311bc:	ldr	x0, [x0]
  4311c0:	sub	x0, x1, x0
  4311c4:	fmov	d0, x0
  4311c8:	ucvtf	d0, d0
  4311cc:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4311d0:	fmov	d1, x0
  4311d4:	fmul	d1, d0, d1
  4311d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4311dc:	add	x0, x0, #0x160
  4311e0:	ldr	d0, [x0]
  4311e4:	ucvtf	d0, d0
  4311e8:	fdiv	d0, d1, d0
  4311ec:	fcvtzu	x0, d0
  4311f0:	mov	x3, x0
  4311f4:	ldr	x1, [sp, #24]
  4311f8:	mov	x0, x4
  4311fc:	bl	406dc0 <printf@plt>
  431200:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431204:	add	x0, x0, #0xe00
  431208:	bl	406e40 <gettext@plt>
  43120c:	mov	x2, x0
  431210:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431214:	add	x0, x0, #0x400
  431218:	ldr	x0, [x0]
  43121c:	mov	x1, x0
  431220:	mov	x0, x2
  431224:	bl	406700 <fputs@plt>
  431228:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43122c:	add	x0, x0, #0x400
  431230:	ldr	x0, [x0]
  431234:	mov	x1, x0
  431238:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43123c:	add	x0, x0, #0x108
  431240:	bl	414a44 <hash_print_stats@@Base>
  431244:	ldp	x29, x30, [sp], #112
  431248:	ret

000000000043124c <create_pattern_var@@Base>:
  43124c:	stp	x29, x30, [sp, #-64]!
  431250:	mov	x29, sp
  431254:	str	x0, [sp, #24]
  431258:	str	x1, [sp, #16]
  43125c:	ldr	x0, [sp, #24]
  431260:	bl	4066f0 <strlen@plt>
  431264:	str	x0, [sp, #48]
  431268:	mov	x0, #0x50                  	// #80
  43126c:	bl	4226d4 <xcalloc@@Base>
  431270:	str	x0, [sp, #40]
  431274:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431278:	add	x0, x0, #0x170
  43127c:	ldr	x0, [x0]
  431280:	cmp	x0, #0x0
  431284:	b.eq	431348 <create_pattern_var@@Base+0xfc>  // b.none
  431288:	ldr	x0, [sp, #48]
  43128c:	cmp	x0, #0xff
  431290:	b.hi	4312e4 <create_pattern_var@@Base+0x98>  // b.pmore
  431294:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431298:	add	x0, x0, #0x178
  43129c:	ldr	x1, [sp, #48]
  4312a0:	ldr	x0, [x0, x1, lsl #3]
  4312a4:	cmp	x0, #0x0
  4312a8:	b.eq	4312e4 <create_pattern_var@@Base+0x98>  // b.none
  4312ac:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4312b0:	add	x0, x0, #0x178
  4312b4:	ldr	x1, [sp, #48]
  4312b8:	ldr	x0, [x0, x1, lsl #3]
  4312bc:	ldr	x1, [x0]
  4312c0:	ldr	x0, [sp, #40]
  4312c4:	str	x1, [x0]
  4312c8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4312cc:	add	x0, x0, #0x178
  4312d0:	ldr	x1, [sp, #48]
  4312d4:	ldr	x0, [x0, x1, lsl #3]
  4312d8:	ldr	x1, [sp, #40]
  4312dc:	str	x1, [x0]
  4312e0:	b	431360 <create_pattern_var@@Base+0x114>
  4312e4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4312e8:	add	x0, x0, #0x170
  4312ec:	str	x0, [sp, #56]
  4312f0:	ldr	x0, [sp, #56]
  4312f4:	ldr	x0, [x0]
  4312f8:	cmp	x0, #0x0
  4312fc:	b.eq	431318 <create_pattern_var@@Base+0xcc>  // b.none
  431300:	ldr	x0, [sp, #56]
  431304:	ldr	x0, [x0]
  431308:	ldr	x0, [x0, #24]
  43130c:	ldr	x1, [sp, #48]
  431310:	cmp	x1, x0
  431314:	b.cs	431338 <create_pattern_var@@Base+0xec>  // b.hs, b.nlast
  431318:	ldr	x0, [sp, #56]
  43131c:	ldr	x1, [x0]
  431320:	ldr	x0, [sp, #40]
  431324:	str	x1, [x0]
  431328:	ldr	x0, [sp, #56]
  43132c:	ldr	x1, [sp, #40]
  431330:	str	x1, [x0]
  431334:	b	431360 <create_pattern_var@@Base+0x114>
  431338:	ldr	x0, [sp, #56]
  43133c:	ldr	x0, [x0]
  431340:	str	x0, [sp, #56]
  431344:	b	4312f0 <create_pattern_var@@Base+0xa4>
  431348:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43134c:	add	x0, x0, #0x170
  431350:	ldr	x1, [sp, #40]
  431354:	str	x1, [x0]
  431358:	ldr	x0, [sp, #40]
  43135c:	str	xzr, [x0]
  431360:	ldr	x0, [sp, #40]
  431364:	ldr	x1, [sp, #24]
  431368:	str	x1, [x0, #16]
  43136c:	ldr	x0, [sp, #40]
  431370:	ldr	x1, [sp, #48]
  431374:	str	x1, [x0, #24]
  431378:	ldr	x0, [sp, #16]
  43137c:	add	x1, x0, #0x1
  431380:	ldr	x0, [sp, #40]
  431384:	str	x1, [x0, #8]
  431388:	ldr	x0, [sp, #48]
  43138c:	cmp	x0, #0xff
  431390:	b.hi	4313a8 <create_pattern_var@@Base+0x15c>  // b.pmore
  431394:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431398:	add	x0, x0, #0x178
  43139c:	ldr	x1, [sp, #48]
  4313a0:	ldr	x2, [sp, #40]
  4313a4:	str	x2, [x0, x1, lsl #3]
  4313a8:	ldr	x0, [sp, #40]
  4313ac:	ldp	x29, x30, [sp], #64
  4313b0:	ret
  4313b4:	stp	x29, x30, [sp, #-64]!
  4313b8:	mov	x29, sp
  4313bc:	str	x0, [sp, #24]
  4313c0:	str	x1, [sp, #16]
  4313c4:	ldr	x0, [sp, #16]
  4313c8:	bl	4066f0 <strlen@plt>
  4313cc:	str	x0, [sp, #48]
  4313d0:	ldr	x0, [sp, #24]
  4313d4:	cmp	x0, #0x0
  4313d8:	b.eq	4313e8 <create_pattern_var@@Base+0x19c>  // b.none
  4313dc:	ldr	x0, [sp, #24]
  4313e0:	ldr	x0, [x0]
  4313e4:	b	4313f4 <create_pattern_var@@Base+0x1a8>
  4313e8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4313ec:	add	x0, x0, #0x170
  4313f0:	ldr	x0, [x0]
  4313f4:	str	x0, [sp, #56]
  4313f8:	b	431574 <create_pattern_var@@Base+0x328>
  4313fc:	ldr	x0, [sp, #56]
  431400:	ldr	x0, [x0, #24]
  431404:	ldr	x1, [sp, #48]
  431408:	cmp	x1, x0
  43140c:	b.cc	43155c <create_pattern_var@@Base+0x310>  // b.lo, b.ul, b.last
  431410:	ldr	x0, [sp, #56]
  431414:	ldr	x1, [x0, #8]
  431418:	ldr	x0, [sp, #56]
  43141c:	ldr	x0, [x0, #16]
  431420:	sub	x0, x1, x0
  431424:	sub	x0, x0, #0x1
  431428:	ldr	x1, [sp, #16]
  43142c:	add	x0, x1, x0
  431430:	str	x0, [sp, #40]
  431434:	ldr	x0, [sp, #56]
  431438:	ldr	x0, [x0, #24]
  43143c:	ldr	x1, [sp, #48]
  431440:	sub	x0, x1, x0
  431444:	add	x0, x0, #0x1
  431448:	str	x0, [sp, #32]
  43144c:	ldr	x1, [sp, #40]
  431450:	ldr	x0, [sp, #16]
  431454:	cmp	x1, x0
  431458:	b.ls	431488 <create_pattern_var@@Base+0x23c>  // b.plast
  43145c:	ldr	x0, [sp, #56]
  431460:	ldr	x3, [x0, #16]
  431464:	ldr	x1, [sp, #40]
  431468:	ldr	x0, [sp, #16]
  43146c:	sub	x0, x1, x0
  431470:	mov	x2, x0
  431474:	ldr	x1, [sp, #16]
  431478:	mov	x0, x3
  43147c:	bl	406990 <strncmp@plt>
  431480:	cmp	w0, #0x0
  431484:	b.ne	431564 <create_pattern_var@@Base+0x318>  // b.any
  431488:	ldr	x0, [sp, #56]
  43148c:	ldr	x0, [x0, #8]
  431490:	ldrb	w1, [x0]
  431494:	ldr	x2, [sp, #40]
  431498:	ldr	x0, [sp, #32]
  43149c:	add	x0, x2, x0
  4314a0:	ldrb	w0, [x0]
  4314a4:	cmp	w1, w0
  4314a8:	b.ne	431568 <create_pattern_var@@Base+0x31c>  // b.any
  4314ac:	ldr	x0, [sp, #56]
  4314b0:	ldr	x0, [x0, #8]
  4314b4:	ldrb	w0, [x0]
  4314b8:	cmp	w0, #0x0
  4314bc:	b.eq	431580 <create_pattern_var@@Base+0x334>  // b.none
  4314c0:	ldr	x0, [sp, #56]
  4314c4:	ldr	x0, [x0, #8]
  4314c8:	add	x1, x0, #0x1
  4314cc:	ldr	x0, [sp, #32]
  4314d0:	add	x0, x0, #0x1
  4314d4:	ldr	x2, [sp, #40]
  4314d8:	add	x0, x2, x0
  4314dc:	cmp	x1, x0
  4314e0:	b.eq	431580 <create_pattern_var@@Base+0x334>  // b.none
  4314e4:	ldr	x0, [sp, #56]
  4314e8:	ldr	x0, [x0, #8]
  4314ec:	add	x0, x0, #0x1
  4314f0:	ldrb	w1, [x0]
  4314f4:	ldr	x0, [sp, #32]
  4314f8:	add	x0, x0, #0x1
  4314fc:	ldr	x2, [sp, #40]
  431500:	add	x0, x2, x0
  431504:	ldrb	w0, [x0]
  431508:	cmp	w1, w0
  43150c:	b.ne	431568 <create_pattern_var@@Base+0x31c>  // b.any
  431510:	ldr	x0, [sp, #56]
  431514:	ldr	x0, [x0, #8]
  431518:	add	x0, x0, #0x1
  43151c:	ldrb	w0, [x0]
  431520:	cmp	w0, #0x0
  431524:	b.eq	431580 <create_pattern_var@@Base+0x334>  // b.none
  431528:	ldr	x0, [sp, #56]
  43152c:	ldr	x0, [x0, #8]
  431530:	add	x2, x0, #0x2
  431534:	ldr	x0, [sp, #32]
  431538:	add	x0, x0, #0x2
  43153c:	ldr	x1, [sp, #40]
  431540:	add	x0, x1, x0
  431544:	mov	x1, x0
  431548:	mov	x0, x2
  43154c:	bl	406bc0 <strcmp@plt>
  431550:	cmp	w0, #0x0
  431554:	b.eq	431580 <create_pattern_var@@Base+0x334>  // b.none
  431558:	b	431568 <create_pattern_var@@Base+0x31c>
  43155c:	nop
  431560:	b	431568 <create_pattern_var@@Base+0x31c>
  431564:	nop
  431568:	ldr	x0, [sp, #56]
  43156c:	ldr	x0, [x0]
  431570:	str	x0, [sp, #56]
  431574:	ldr	x0, [sp, #56]
  431578:	cmp	x0, #0x0
  43157c:	b.ne	4313fc <create_pattern_var@@Base+0x1b0>  // b.any
  431580:	ldr	x0, [sp, #56]
  431584:	ldp	x29, x30, [sp], #64
  431588:	ret
  43158c:	stp	x29, x30, [sp, #-64]!
  431590:	mov	x29, sp
  431594:	str	x0, [sp, #24]
  431598:	ldr	x0, [sp, #24]
  43159c:	str	x0, [sp, #56]
  4315a0:	str	xzr, [sp, #48]
  4315a4:	ldr	x0, [sp, #56]
  4315a8:	ldr	x0, [x0]
  4315ac:	str	x0, [sp, #40]
  4315b0:	ldr	x0, [sp, #56]
  4315b4:	ldr	w0, [x0, #40]
  4315b8:	mov	w1, w0
  4315bc:	ldr	x0, [sp, #40]
  4315c0:	bl	414cec <jhash@@Base>
  4315c4:	mov	w0, w0
  4315c8:	ldr	x1, [sp, #48]
  4315cc:	add	x0, x1, x0
  4315d0:	str	x0, [sp, #48]
  4315d4:	ldr	x0, [sp, #48]
  4315d8:	ldp	x29, x30, [sp], #64
  4315dc:	ret
  4315e0:	sub	sp, sp, #0x20
  4315e4:	str	x0, [sp, #8]
  4315e8:	ldr	x0, [sp, #8]
  4315ec:	str	x0, [sp, #24]
  4315f0:	str	xzr, [sp, #16]
  4315f4:	ldr	x0, [sp, #16]
  4315f8:	add	sp, sp, #0x20
  4315fc:	ret
  431600:	stp	x29, x30, [sp, #-64]!
  431604:	mov	x29, sp
  431608:	str	x0, [sp, #24]
  43160c:	str	x1, [sp, #16]
  431610:	ldr	x0, [sp, #24]
  431614:	str	x0, [sp, #56]
  431618:	ldr	x0, [sp, #16]
  43161c:	str	x0, [sp, #48]
  431620:	ldr	x0, [sp, #56]
  431624:	ldr	w1, [x0, #40]
  431628:	ldr	x0, [sp, #48]
  43162c:	ldr	w0, [x0, #40]
  431630:	sub	w0, w1, w0
  431634:	str	w0, [sp, #44]
  431638:	ldr	w0, [sp, #44]
  43163c:	cmp	w0, #0x0
  431640:	b.eq	43164c <create_pattern_var@@Base+0x400>  // b.none
  431644:	ldr	w0, [sp, #44]
  431648:	b	431694 <create_pattern_var@@Base+0x448>
  43164c:	ldr	x0, [sp, #56]
  431650:	ldr	x1, [x0]
  431654:	ldr	x0, [sp, #48]
  431658:	ldr	x0, [x0]
  43165c:	cmp	x1, x0
  431660:	b.eq	431690 <create_pattern_var@@Base+0x444>  // b.none
  431664:	ldr	x0, [sp, #56]
  431668:	ldr	x3, [x0]
  43166c:	ldr	x0, [sp, #48]
  431670:	ldr	x1, [x0]
  431674:	ldr	x0, [sp, #56]
  431678:	ldr	w0, [x0, #40]
  43167c:	mov	w0, w0
  431680:	mov	x2, x0
  431684:	mov	x0, x3
  431688:	bl	406b80 <memcmp@plt>
  43168c:	b	431694 <create_pattern_var@@Base+0x448>
  431690:	mov	w0, #0x0                   	// #0
  431694:	ldp	x29, x30, [sp], #64
  431698:	ret

000000000043169c <init_hash_global_variable_set@@Base>:
  43169c:	stp	x29, x30, [sp, #-16]!
  4316a0:	mov	x29, sp
  4316a4:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4316a8:	add	x4, x0, #0x600
  4316ac:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4316b0:	add	x3, x0, #0x5e0
  4316b4:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4316b8:	add	x2, x0, #0x58c
  4316bc:	mov	x1, #0x20b                 	// #523
  4316c0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4316c4:	add	x0, x0, #0x978
  4316c8:	bl	4140a8 <hash_init@@Base>
  4316cc:	nop
  4316d0:	ldp	x29, x30, [sp], #16
  4316d4:	ret

00000000004316d8 <define_variable_in_set@@Base>:
  4316d8:	stp	x29, x30, [sp, #-128]!
  4316dc:	mov	x29, sp
  4316e0:	str	x0, [sp, #56]
  4316e4:	str	x1, [sp, #48]
  4316e8:	str	x2, [sp, #40]
  4316ec:	str	w3, [sp, #36]
  4316f0:	str	w4, [sp, #32]
  4316f4:	str	x5, [sp, #24]
  4316f8:	str	x6, [sp, #16]
  4316fc:	ldr	x0, [sp, #24]
  431700:	cmp	x0, #0x0
  431704:	b.ne	431714 <define_variable_in_set@@Base+0x3c>  // b.any
  431708:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43170c:	add	x0, x0, #0x978
  431710:	str	x0, [sp, #24]
  431714:	ldr	x0, [sp, #56]
  431718:	str	x0, [sp, #64]
  43171c:	ldr	x0, [sp, #48]
  431720:	str	w0, [sp, #104]
  431724:	ldr	x0, [sp, #24]
  431728:	add	x1, sp, #0x40
  43172c:	bl	41422c <hash_find_slot@@Base>
  431730:	str	x0, [sp, #120]
  431734:	ldr	x0, [sp, #120]
  431738:	ldr	x0, [x0]
  43173c:	str	x0, [sp, #112]
  431740:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431744:	add	x0, x0, #0x6e8
  431748:	ldr	w0, [x0]
  43174c:	cmp	w0, #0x0
  431750:	b.eq	431768 <define_variable_in_set@@Base+0x90>  // b.none
  431754:	ldr	w0, [sp, #36]
  431758:	cmp	w0, #0x1
  43175c:	b.ne	431768 <define_variable_in_set@@Base+0x90>  // b.any
  431760:	mov	w0, #0x3                   	// #3
  431764:	str	w0, [sp, #36]
  431768:	ldr	x0, [sp, #112]
  43176c:	cmp	x0, #0x0
  431770:	b.eq	431888 <define_variable_in_set@@Base+0x1b0>  // b.none
  431774:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431778:	add	x0, x0, #0x40
  43177c:	ldr	x0, [x0]
  431780:	ldr	x1, [sp, #112]
  431784:	cmp	x1, x0
  431788:	b.eq	431888 <define_variable_in_set@@Base+0x1b0>  // b.none
  43178c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431790:	add	x0, x0, #0x6e8
  431794:	ldr	w0, [x0]
  431798:	cmp	w0, #0x0
  43179c:	b.eq	4317cc <define_variable_in_set@@Base+0xf4>  // b.none
  4317a0:	ldr	x0, [sp, #112]
  4317a4:	ldrb	w0, [x0, #47]
  4317a8:	and	w0, w0, #0x1c
  4317ac:	and	w0, w0, #0xff
  4317b0:	cmp	w0, #0x4
  4317b4:	b.ne	4317cc <define_variable_in_set@@Base+0xf4>  // b.any
  4317b8:	ldr	x1, [sp, #112]
  4317bc:	ldrb	w0, [x1, #47]
  4317c0:	mov	w2, #0x3                   	// #3
  4317c4:	bfi	w0, w2, #2, #3
  4317c8:	strb	w0, [x1, #47]
  4317cc:	ldr	x0, [sp, #112]
  4317d0:	ldrb	w0, [x0, #47]
  4317d4:	ubfx	x0, x0, #2, #3
  4317d8:	and	w0, w0, #0xff
  4317dc:	mov	w1, w0
  4317e0:	ldr	w0, [sp, #36]
  4317e4:	cmp	w1, w0
  4317e8:	b.gt	431880 <define_variable_in_set@@Base+0x1a8>
  4317ec:	ldr	x0, [sp, #112]
  4317f0:	ldr	x0, [x0, #8]
  4317f4:	bl	406c00 <free@plt>
  4317f8:	ldr	x0, [sp, #40]
  4317fc:	bl	422788 <xstrdup@@Base>
  431800:	mov	x1, x0
  431804:	ldr	x0, [sp, #112]
  431808:	str	x1, [x0, #8]
  43180c:	ldr	x0, [sp, #16]
  431810:	cmp	x0, #0x0
  431814:	b.eq	431840 <define_variable_in_set@@Base+0x168>  // b.none
  431818:	ldr	x0, [sp, #112]
  43181c:	add	x1, x0, #0x10
  431820:	ldr	x0, [sp, #16]
  431824:	mov	x2, x1
  431828:	mov	x3, x0
  43182c:	ldp	x0, x1, [x3]
  431830:	stp	x0, x1, [x2]
  431834:	ldr	x0, [x3, #16]
  431838:	str	x0, [x2, #16]
  43183c:	b	431848 <define_variable_in_set@@Base+0x170>
  431840:	ldr	x0, [sp, #112]
  431844:	str	xzr, [x0, #16]
  431848:	ldr	w0, [sp, #36]
  43184c:	and	w0, w0, #0x7
  431850:	and	w2, w0, #0xff
  431854:	ldr	x1, [sp, #112]
  431858:	ldrb	w0, [x1, #47]
  43185c:	bfi	w0, w2, #2, #3
  431860:	strb	w0, [x1, #47]
  431864:	ldr	w0, [sp, #32]
  431868:	and	w0, w0, #0x1
  43186c:	and	w2, w0, #0xff
  431870:	ldr	x1, [sp, #112]
  431874:	ldrb	w0, [x1, #44]
  431878:	bfxil	w0, w2, #0, #1
  43187c:	strb	w0, [x1, #44]
  431880:	ldr	x0, [sp, #112]
  431884:	b	431ab8 <define_variable_in_set@@Base+0x3e0>
  431888:	mov	x0, #0x30                  	// #48
  43188c:	bl	4226d4 <xcalloc@@Base>
  431890:	str	x0, [sp, #112]
  431894:	ldr	x1, [sp, #48]
  431898:	ldr	x0, [sp, #56]
  43189c:	bl	4227bc <xstrndup@@Base>
  4318a0:	mov	x1, x0
  4318a4:	ldr	x0, [sp, #112]
  4318a8:	str	x1, [x0]
  4318ac:	ldr	x0, [sp, #48]
  4318b0:	mov	w1, w0
  4318b4:	ldr	x0, [sp, #112]
  4318b8:	str	w1, [x0, #40]
  4318bc:	ldr	x0, [sp, #24]
  4318c0:	ldr	x2, [sp, #120]
  4318c4:	ldr	x1, [sp, #112]
  4318c8:	bl	414470 <hash_insert_at@@Base>
  4318cc:	ldr	x1, [sp, #24]
  4318d0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4318d4:	add	x0, x0, #0x978
  4318d8:	cmp	x1, x0
  4318dc:	b.ne	4318fc <define_variable_in_set@@Base+0x224>  // b.any
  4318e0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4318e4:	add	x0, x0, #0x168
  4318e8:	ldr	x0, [x0]
  4318ec:	add	x1, x0, #0x1
  4318f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4318f4:	add	x0, x0, #0x168
  4318f8:	str	x1, [x0]
  4318fc:	ldr	x0, [sp, #40]
  431900:	bl	422788 <xstrdup@@Base>
  431904:	mov	x1, x0
  431908:	ldr	x0, [sp, #112]
  43190c:	str	x1, [x0, #8]
  431910:	ldr	x0, [sp, #16]
  431914:	cmp	x0, #0x0
  431918:	b.eq	431940 <define_variable_in_set@@Base+0x268>  // b.none
  43191c:	ldr	x0, [sp, #112]
  431920:	add	x1, x0, #0x10
  431924:	ldr	x0, [sp, #16]
  431928:	mov	x2, x1
  43192c:	mov	x3, x0
  431930:	ldp	x0, x1, [x3]
  431934:	stp	x0, x1, [x2]
  431938:	ldr	x0, [x3, #16]
  43193c:	str	x0, [x2, #16]
  431940:	ldr	w0, [sp, #36]
  431944:	and	w0, w0, #0x7
  431948:	and	w2, w0, #0xff
  43194c:	ldr	x1, [sp, #112]
  431950:	ldrb	w0, [x1, #47]
  431954:	bfi	w0, w2, #2, #3
  431958:	strb	w0, [x1, #47]
  43195c:	ldr	w0, [sp, #32]
  431960:	and	w0, w0, #0x1
  431964:	and	w2, w0, #0xff
  431968:	ldr	x1, [sp, #112]
  43196c:	ldrb	w0, [x1, #44]
  431970:	bfxil	w0, w2, #0, #1
  431974:	strb	w0, [x1, #44]
  431978:	ldr	x0, [sp, #112]
  43197c:	ldrb	w1, [x0, #47]
  431980:	orr	w1, w1, #0x60
  431984:	strb	w1, [x0, #47]
  431988:	ldr	x0, [sp, #112]
  43198c:	ldrb	w1, [x0, #44]
  431990:	orr	w1, w1, #0x20
  431994:	strb	w1, [x0, #44]
  431998:	ldr	x0, [sp, #56]
  43199c:	ldrb	w0, [x0]
  4319a0:	cmp	w0, #0x5f
  4319a4:	b.eq	4319fc <define_variable_in_set@@Base+0x324>  // b.none
  4319a8:	ldr	x0, [sp, #56]
  4319ac:	ldrb	w0, [x0]
  4319b0:	cmp	w0, #0x40
  4319b4:	b.ls	4319c8 <define_variable_in_set@@Base+0x2f0>  // b.plast
  4319b8:	ldr	x0, [sp, #56]
  4319bc:	ldrb	w0, [x0]
  4319c0:	cmp	w0, #0x5a
  4319c4:	b.ls	4319fc <define_variable_in_set@@Base+0x324>  // b.plast
  4319c8:	ldr	x0, [sp, #56]
  4319cc:	ldrb	w0, [x0]
  4319d0:	cmp	w0, #0x60
  4319d4:	b.ls	4319e8 <define_variable_in_set@@Base+0x310>  // b.plast
  4319d8:	ldr	x0, [sp, #56]
  4319dc:	ldrb	w0, [x0]
  4319e0:	cmp	w0, #0x7a
  4319e4:	b.ls	4319fc <define_variable_in_set@@Base+0x324>  // b.plast
  4319e8:	ldr	x0, [sp, #112]
  4319ec:	ldrb	w1, [x0, #44]
  4319f0:	and	w1, w1, #0xffffffdf
  4319f4:	strb	w1, [x0, #44]
  4319f8:	b	431ab4 <define_variable_in_set@@Base+0x3dc>
  4319fc:	ldr	x0, [sp, #56]
  431a00:	add	x0, x0, #0x1
  431a04:	str	x0, [sp, #56]
  431a08:	b	431a7c <define_variable_in_set@@Base+0x3a4>
  431a0c:	ldr	x0, [sp, #56]
  431a10:	ldrb	w0, [x0]
  431a14:	cmp	w0, #0x5f
  431a18:	b.eq	431a70 <define_variable_in_set@@Base+0x398>  // b.none
  431a1c:	ldr	x0, [sp, #56]
  431a20:	ldrb	w0, [x0]
  431a24:	cmp	w0, #0x60
  431a28:	b.ls	431a3c <define_variable_in_set@@Base+0x364>  // b.plast
  431a2c:	ldr	x0, [sp, #56]
  431a30:	ldrb	w0, [x0]
  431a34:	cmp	w0, #0x7a
  431a38:	b.ls	431a70 <define_variable_in_set@@Base+0x398>  // b.plast
  431a3c:	ldr	x0, [sp, #56]
  431a40:	ldrb	w0, [x0]
  431a44:	cmp	w0, #0x40
  431a48:	b.ls	431a5c <define_variable_in_set@@Base+0x384>  // b.plast
  431a4c:	ldr	x0, [sp, #56]
  431a50:	ldrb	w0, [x0]
  431a54:	cmp	w0, #0x5a
  431a58:	b.ls	431a70 <define_variable_in_set@@Base+0x398>  // b.plast
  431a5c:	ldr	x0, [sp, #56]
  431a60:	ldrb	w0, [x0]
  431a64:	sub	w0, w0, #0x30
  431a68:	cmp	w0, #0x9
  431a6c:	b.hi	431a90 <define_variable_in_set@@Base+0x3b8>  // b.pmore
  431a70:	ldr	x0, [sp, #56]
  431a74:	add	x0, x0, #0x1
  431a78:	str	x0, [sp, #56]
  431a7c:	ldr	x0, [sp, #56]
  431a80:	ldrb	w0, [x0]
  431a84:	cmp	w0, #0x0
  431a88:	b.ne	431a0c <define_variable_in_set@@Base+0x334>  // b.any
  431a8c:	b	431a94 <define_variable_in_set@@Base+0x3bc>
  431a90:	nop
  431a94:	ldr	x0, [sp, #56]
  431a98:	ldrb	w0, [x0]
  431a9c:	cmp	w0, #0x0
  431aa0:	b.eq	431ab4 <define_variable_in_set@@Base+0x3dc>  // b.none
  431aa4:	ldr	x0, [sp, #112]
  431aa8:	ldrb	w1, [x0, #44]
  431aac:	and	w1, w1, #0xffffffdf
  431ab0:	strb	w1, [x0, #44]
  431ab4:	ldr	x0, [sp, #112]
  431ab8:	ldp	x29, x30, [sp], #128
  431abc:	ret
  431ac0:	stp	x29, x30, [sp, #-48]!
  431ac4:	mov	x29, sp
  431ac8:	str	x0, [sp, #24]
  431acc:	ldr	x0, [sp, #24]
  431ad0:	str	x0, [sp, #40]
  431ad4:	ldr	x0, [sp, #40]
  431ad8:	ldr	x0, [x0]
  431adc:	bl	406c00 <free@plt>
  431ae0:	ldr	x0, [sp, #40]
  431ae4:	ldr	x0, [x0, #8]
  431ae8:	bl	406c00 <free@plt>
  431aec:	nop
  431af0:	ldp	x29, x30, [sp], #48
  431af4:	ret

0000000000431af8 <free_variable_set@@Base>:
  431af8:	stp	x29, x30, [sp, #-32]!
  431afc:	mov	x29, sp
  431b00:	str	x0, [sp, #24]
  431b04:	ldr	x0, [sp, #24]
  431b08:	ldr	x0, [x0, #8]
  431b0c:	mov	x2, x0
  431b10:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  431b14:	add	x1, x0, #0xac0
  431b18:	mov	x0, x2
  431b1c:	bl	41479c <hash_map@@Base>
  431b20:	ldr	x0, [sp, #24]
  431b24:	ldr	x0, [x0, #8]
  431b28:	mov	w1, #0x1                   	// #1
  431b2c:	bl	414734 <hash_free@@Base>
  431b30:	ldr	x0, [sp, #24]
  431b34:	ldr	x0, [x0, #8]
  431b38:	bl	406c00 <free@plt>
  431b3c:	ldr	x0, [sp, #24]
  431b40:	bl	406c00 <free@plt>
  431b44:	nop
  431b48:	ldp	x29, x30, [sp], #32
  431b4c:	ret

0000000000431b50 <undefine_variable_in_set@@Base>:
  431b50:	stp	x29, x30, [sp, #-112]!
  431b54:	mov	x29, sp
  431b58:	str	x0, [sp, #40]
  431b5c:	str	x1, [sp, #32]
  431b60:	str	w2, [sp, #28]
  431b64:	str	x3, [sp, #16]
  431b68:	ldr	x0, [sp, #16]
  431b6c:	cmp	x0, #0x0
  431b70:	b.ne	431b80 <undefine_variable_in_set@@Base+0x30>  // b.any
  431b74:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431b78:	add	x0, x0, #0x978
  431b7c:	str	x0, [sp, #16]
  431b80:	ldr	x0, [sp, #40]
  431b84:	str	x0, [sp, #48]
  431b88:	ldr	x0, [sp, #32]
  431b8c:	str	w0, [sp, #88]
  431b90:	ldr	x0, [sp, #16]
  431b94:	add	x1, sp, #0x30
  431b98:	bl	41422c <hash_find_slot@@Base>
  431b9c:	str	x0, [sp, #104]
  431ba0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431ba4:	add	x0, x0, #0x6e8
  431ba8:	ldr	w0, [x0]
  431bac:	cmp	w0, #0x0
  431bb0:	b.eq	431bc8 <undefine_variable_in_set@@Base+0x78>  // b.none
  431bb4:	ldr	w0, [sp, #28]
  431bb8:	cmp	w0, #0x1
  431bbc:	b.ne	431bc8 <undefine_variable_in_set@@Base+0x78>  // b.any
  431bc0:	mov	w0, #0x3                   	// #3
  431bc4:	str	w0, [sp, #28]
  431bc8:	ldr	x0, [sp, #104]
  431bcc:	ldr	x0, [x0]
  431bd0:	str	x0, [sp, #96]
  431bd4:	ldr	x0, [sp, #96]
  431bd8:	cmp	x0, #0x0
  431bdc:	b.eq	431ca4 <undefine_variable_in_set@@Base+0x154>  // b.none
  431be0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431be4:	add	x0, x0, #0x40
  431be8:	ldr	x0, [x0]
  431bec:	ldr	x1, [sp, #96]
  431bf0:	cmp	x1, x0
  431bf4:	b.eq	431ca4 <undefine_variable_in_set@@Base+0x154>  // b.none
  431bf8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431bfc:	add	x0, x0, #0x6e8
  431c00:	ldr	w0, [x0]
  431c04:	cmp	w0, #0x0
  431c08:	b.eq	431c38 <undefine_variable_in_set@@Base+0xe8>  // b.none
  431c0c:	ldr	x0, [sp, #96]
  431c10:	ldrb	w0, [x0, #47]
  431c14:	and	w0, w0, #0x1c
  431c18:	and	w0, w0, #0xff
  431c1c:	cmp	w0, #0x4
  431c20:	b.ne	431c38 <undefine_variable_in_set@@Base+0xe8>  // b.any
  431c24:	ldr	x1, [sp, #96]
  431c28:	ldrb	w0, [x1, #47]
  431c2c:	mov	w2, #0x3                   	// #3
  431c30:	bfi	w0, w2, #2, #3
  431c34:	strb	w0, [x1, #47]
  431c38:	ldr	x0, [sp, #96]
  431c3c:	ldrb	w0, [x0, #47]
  431c40:	ubfx	x0, x0, #2, #3
  431c44:	and	w0, w0, #0xff
  431c48:	mov	w1, w0
  431c4c:	ldr	w0, [sp, #28]
  431c50:	cmp	w1, w0
  431c54:	b.gt	431ca4 <undefine_variable_in_set@@Base+0x154>
  431c58:	ldr	x0, [sp, #16]
  431c5c:	ldr	x1, [sp, #104]
  431c60:	bl	414578 <hash_delete_at@@Base>
  431c64:	ldr	x0, [sp, #96]
  431c68:	bl	431ac0 <define_variable_in_set@@Base+0x3e8>
  431c6c:	ldr	x0, [sp, #96]
  431c70:	bl	406c00 <free@plt>
  431c74:	ldr	x1, [sp, #16]
  431c78:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431c7c:	add	x0, x0, #0x978
  431c80:	cmp	x1, x0
  431c84:	b.ne	431ca4 <undefine_variable_in_set@@Base+0x154>  // b.any
  431c88:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431c8c:	add	x0, x0, #0x168
  431c90:	ldr	x0, [x0]
  431c94:	add	x1, x0, #0x1
  431c98:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431c9c:	add	x0, x0, #0x168
  431ca0:	str	x1, [x0]
  431ca4:	nop
  431ca8:	ldp	x29, x30, [sp], #112
  431cac:	ret
  431cb0:	stp	x29, x30, [sp, #-96]!
  431cb4:	mov	x29, sp
  431cb8:	str	x0, [sp, #24]
  431cbc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431cc0:	add	x0, x0, #0x168
  431cc4:	ldr	x1, [x0]
  431cc8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431ccc:	add	x0, x0, #0x9d0
  431cd0:	ldr	x0, [x0]
  431cd4:	cmp	x1, x0
  431cd8:	b.eq	431f5c <undefine_variable_in_set@@Base+0x40c>  // b.none
  431cdc:	ldr	x0, [sp, #24]
  431ce0:	ldr	x1, [x0]
  431ce4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431ce8:	add	x0, x0, #0xe18
  431cec:	cmp	x1, x0
  431cf0:	b.eq	431d48 <undefine_variable_in_set@@Base+0x1f8>  // b.none
  431cf4:	ldr	x0, [sp, #24]
  431cf8:	ldr	x0, [x0]
  431cfc:	ldrb	w1, [x0]
  431d00:	mov	w0, #0x2e                  	// #46
  431d04:	cmp	w1, w0
  431d08:	b.ne	431f5c <undefine_variable_in_set@@Base+0x40c>  // b.any
  431d0c:	ldr	x0, [sp, #24]
  431d10:	ldr	x0, [x0]
  431d14:	ldrb	w0, [x0]
  431d18:	cmp	w0, #0x0
  431d1c:	b.eq	431d48 <undefine_variable_in_set@@Base+0x1f8>  // b.none
  431d20:	ldr	x0, [sp, #24]
  431d24:	ldr	x0, [x0]
  431d28:	add	x2, x0, #0x1
  431d2c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  431d30:	add	x0, x0, #0xe19
  431d34:	mov	x1, x0
  431d38:	mov	x0, x2
  431d3c:	bl	406bc0 <strcmp@plt>
  431d40:	cmp	w0, #0x0
  431d44:	b.ne	431f5c <undefine_variable_in_set@@Base+0x40c>  // b.any
  431d48:	ldr	x0, [sp, #24]
  431d4c:	ldr	x0, [x0, #8]
  431d50:	bl	4066f0 <strlen@plt>
  431d54:	lsr	x1, x0, #2
  431d58:	mov	x0, #0xf7cf                	// #63439
  431d5c:	movk	x0, #0xe353, lsl #16
  431d60:	movk	x0, #0x9ba5, lsl #32
  431d64:	movk	x0, #0x20c4, lsl #48
  431d68:	umulh	x0, x1, x0
  431d6c:	lsr	x0, x0, #4
  431d70:	add	x1, x0, #0x1
  431d74:	mov	x0, x1
  431d78:	lsl	x0, x0, #5
  431d7c:	sub	x0, x0, x1
  431d80:	lsl	x0, x0, #2
  431d84:	add	x0, x0, x1
  431d88:	lsl	x0, x0, #2
  431d8c:	str	x0, [sp, #88]
  431d90:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431d94:	add	x0, x0, #0x978
  431d98:	ldr	x0, [x0]
  431d9c:	str	x0, [sp, #64]
  431da0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431da4:	add	x0, x0, #0x978
  431da8:	ldr	x0, [x0, #32]
  431dac:	lsl	x0, x0, #3
  431db0:	ldr	x1, [sp, #64]
  431db4:	add	x0, x1, x0
  431db8:	str	x0, [sp, #56]
  431dbc:	ldr	x0, [sp, #24]
  431dc0:	ldr	x0, [x0, #8]
  431dc4:	ldr	x1, [sp, #88]
  431dc8:	bl	422720 <xrealloc@@Base>
  431dcc:	mov	x1, x0
  431dd0:	ldr	x0, [sp, #24]
  431dd4:	str	x1, [x0, #8]
  431dd8:	ldr	x0, [sp, #24]
  431ddc:	ldr	x0, [x0, #8]
  431de0:	str	x0, [sp, #72]
  431de4:	str	xzr, [sp, #80]
  431de8:	b	431f28 <undefine_variable_in_set@@Base+0x3d8>
  431dec:	ldr	x0, [sp, #64]
  431df0:	ldr	x0, [x0]
  431df4:	cmp	x0, #0x0
  431df8:	b.eq	431f1c <undefine_variable_in_set@@Base+0x3cc>  // b.none
  431dfc:	ldr	x0, [sp, #64]
  431e00:	ldr	x1, [x0]
  431e04:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431e08:	add	x0, x0, #0x40
  431e0c:	ldr	x0, [x0]
  431e10:	cmp	x1, x0
  431e14:	b.eq	431f1c <undefine_variable_in_set@@Base+0x3cc>  // b.none
  431e18:	ldr	x0, [sp, #64]
  431e1c:	ldr	x0, [x0]
  431e20:	str	x0, [sp, #48]
  431e24:	ldr	x0, [sp, #48]
  431e28:	ldr	w0, [x0, #40]
  431e2c:	str	w0, [sp, #44]
  431e30:	ldr	w0, [sp, #44]
  431e34:	add	w0, w0, #0x1
  431e38:	sxtw	x0, w0
  431e3c:	ldr	x1, [sp, #80]
  431e40:	add	x0, x1, x0
  431e44:	str	x0, [sp, #80]
  431e48:	ldr	x1, [sp, #80]
  431e4c:	ldr	x0, [sp, #88]
  431e50:	cmp	x1, x0
  431e54:	b.ls	431edc <undefine_variable_in_set@@Base+0x38c>  // b.plast
  431e58:	ldr	x0, [sp, #24]
  431e5c:	ldr	x0, [x0, #8]
  431e60:	ldr	x1, [sp, #72]
  431e64:	sub	x0, x1, x0
  431e68:	str	x0, [sp, #32]
  431e6c:	ldr	w0, [sp, #44]
  431e70:	add	w0, w0, #0x1
  431e74:	mov	w1, #0x4dd3                	// #19923
  431e78:	movk	w1, #0x1062, lsl #16
  431e7c:	smull	x1, w0, w1
  431e80:	lsr	x1, x1, #32
  431e84:	asr	w1, w1, #5
  431e88:	asr	w0, w0, #31
  431e8c:	sub	w0, w1, w0
  431e90:	add	w1, w0, #0x1
  431e94:	mov	w0, #0x1f4                 	// #500
  431e98:	mul	w0, w1, w0
  431e9c:	sxtw	x0, w0
  431ea0:	ldr	x1, [sp, #88]
  431ea4:	add	x0, x1, x0
  431ea8:	str	x0, [sp, #88]
  431eac:	ldr	x0, [sp, #24]
  431eb0:	ldr	x0, [x0, #8]
  431eb4:	ldr	x1, [sp, #88]
  431eb8:	bl	422720 <xrealloc@@Base>
  431ebc:	mov	x1, x0
  431ec0:	ldr	x0, [sp, #24]
  431ec4:	str	x1, [x0, #8]
  431ec8:	ldr	x0, [sp, #24]
  431ecc:	ldr	x1, [x0, #8]
  431ed0:	ldr	x0, [sp, #32]
  431ed4:	add	x0, x1, x0
  431ed8:	str	x0, [sp, #72]
  431edc:	ldr	x0, [sp, #48]
  431ee0:	ldr	x0, [x0]
  431ee4:	ldrsw	x1, [sp, #44]
  431ee8:	mov	x2, x1
  431eec:	mov	x1, x0
  431ef0:	ldr	x0, [sp, #72]
  431ef4:	bl	4066b0 <memcpy@plt>
  431ef8:	ldrsw	x0, [sp, #44]
  431efc:	ldr	x1, [sp, #72]
  431f00:	add	x0, x1, x0
  431f04:	str	x0, [sp, #72]
  431f08:	ldr	x0, [sp, #72]
  431f0c:	add	x1, x0, #0x1
  431f10:	str	x1, [sp, #72]
  431f14:	mov	w1, #0x20                  	// #32
  431f18:	strb	w1, [x0]
  431f1c:	ldr	x0, [sp, #64]
  431f20:	add	x0, x0, #0x8
  431f24:	str	x0, [sp, #64]
  431f28:	ldr	x1, [sp, #64]
  431f2c:	ldr	x0, [sp, #56]
  431f30:	cmp	x1, x0
  431f34:	b.cc	431dec <undefine_variable_in_set@@Base+0x29c>  // b.lo, b.ul, b.last
  431f38:	ldr	x0, [sp, #72]
  431f3c:	sub	x0, x0, #0x1
  431f40:	strb	wzr, [x0]
  431f44:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431f48:	add	x0, x0, #0x168
  431f4c:	ldr	x1, [x0]
  431f50:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  431f54:	add	x0, x0, #0x9d0
  431f58:	str	x1, [x0]
  431f5c:	ldr	x0, [sp, #24]
  431f60:	ldp	x29, x30, [sp], #96
  431f64:	ret

0000000000431f68 <lookup_variable@@Base>:
  431f68:	stp	x29, x30, [sp, #-112]!
  431f6c:	mov	x29, sp
  431f70:	str	x0, [sp, #24]
  431f74:	str	x1, [sp, #16]
  431f78:	str	wzr, [sp, #100]
  431f7c:	ldr	x0, [sp, #24]
  431f80:	str	x0, [sp, #32]
  431f84:	ldr	x0, [sp, #16]
  431f88:	str	w0, [sp, #72]
  431f8c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  431f90:	add	x0, x0, #0x3b8
  431f94:	ldr	x0, [x0]
  431f98:	str	x0, [sp, #104]
  431f9c:	b	432038 <lookup_variable@@Base+0xd0>
  431fa0:	ldr	x0, [sp, #104]
  431fa4:	ldr	x0, [x0, #8]
  431fa8:	str	x0, [sp, #88]
  431fac:	ldr	x0, [sp, #88]
  431fb0:	add	x1, sp, #0x20
  431fb4:	bl	414398 <hash_find_item@@Base>
  431fb8:	str	x0, [sp, #80]
  431fbc:	ldr	x0, [sp, #80]
  431fc0:	cmp	x0, #0x0
  431fc4:	b.eq	432018 <lookup_variable@@Base+0xb0>  // b.none
  431fc8:	ldr	w0, [sp, #100]
  431fcc:	cmp	w0, #0x0
  431fd0:	b.eq	431fec <lookup_variable@@Base+0x84>  // b.none
  431fd4:	ldr	x0, [sp, #80]
  431fd8:	ldrb	w0, [x0, #44]
  431fdc:	and	w0, w0, #0xffffff80
  431fe0:	and	w0, w0, #0xff
  431fe4:	cmp	w0, #0x0
  431fe8:	b.ne	432018 <lookup_variable@@Base+0xb0>  // b.any
  431fec:	ldr	x0, [sp, #80]
  431ff0:	ldrb	w0, [x0, #44]
  431ff4:	and	w0, w0, #0x10
  431ff8:	and	w0, w0, #0xff
  431ffc:	cmp	w0, #0x0
  432000:	b.eq	432010 <lookup_variable@@Base+0xa8>  // b.none
  432004:	ldr	x0, [sp, #80]
  432008:	bl	431cb0 <undefine_variable_in_set@@Base+0x160>
  43200c:	b	432048 <lookup_variable@@Base+0xe0>
  432010:	ldr	x0, [sp, #80]
  432014:	b	432048 <lookup_variable@@Base+0xe0>
  432018:	ldr	x0, [sp, #104]
  43201c:	ldr	w0, [x0, #16]
  432020:	ldr	w1, [sp, #100]
  432024:	orr	w0, w1, w0
  432028:	str	w0, [sp, #100]
  43202c:	ldr	x0, [sp, #104]
  432030:	ldr	x0, [x0]
  432034:	str	x0, [sp, #104]
  432038:	ldr	x0, [sp, #104]
  43203c:	cmp	x0, #0x0
  432040:	b.ne	431fa0 <lookup_variable@@Base+0x38>  // b.any
  432044:	mov	x0, #0x0                   	// #0
  432048:	ldp	x29, x30, [sp], #112
  43204c:	ret

0000000000432050 <lookup_variable_in_set@@Base>:
  432050:	stp	x29, x30, [sp, #-96]!
  432054:	mov	x29, sp
  432058:	str	x0, [sp, #40]
  43205c:	str	x1, [sp, #32]
  432060:	str	x2, [sp, #24]
  432064:	ldr	x0, [sp, #40]
  432068:	str	x0, [sp, #48]
  43206c:	ldr	x0, [sp, #32]
  432070:	str	w0, [sp, #88]
  432074:	ldr	x0, [sp, #24]
  432078:	add	x1, sp, #0x30
  43207c:	bl	414398 <hash_find_item@@Base>
  432080:	ldp	x29, x30, [sp], #96
  432084:	ret

0000000000432088 <initialize_file_variables@@Base>:
  432088:	stp	x29, x30, [sp, #-80]!
  43208c:	mov	x29, sp
  432090:	str	x19, [sp, #16]
  432094:	str	x0, [sp, #40]
  432098:	str	w1, [sp, #36]
  43209c:	ldr	x0, [sp, #40]
  4320a0:	ldr	x0, [x0, #80]
  4320a4:	str	x0, [sp, #72]
  4320a8:	ldr	x0, [sp, #72]
  4320ac:	cmp	x0, #0x0
  4320b0:	b.ne	432110 <initialize_file_variables@@Base+0x88>  // b.any
  4320b4:	mov	x0, #0x18                  	// #24
  4320b8:	bl	42268c <xmalloc@@Base>
  4320bc:	str	x0, [sp, #72]
  4320c0:	mov	x0, #0x58                  	// #88
  4320c4:	bl	42268c <xmalloc@@Base>
  4320c8:	mov	x1, x0
  4320cc:	ldr	x0, [sp, #72]
  4320d0:	str	x1, [x0, #8]
  4320d4:	ldr	x0, [sp, #72]
  4320d8:	ldr	x0, [x0, #8]
  4320dc:	mov	x5, x0
  4320e0:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4320e4:	add	x4, x0, #0x600
  4320e8:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4320ec:	add	x3, x0, #0x5e0
  4320f0:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  4320f4:	add	x2, x0, #0x58c
  4320f8:	mov	x1, #0x17                  	// #23
  4320fc:	mov	x0, x5
  432100:	bl	4140a8 <hash_init@@Base>
  432104:	ldr	x0, [sp, #40]
  432108:	ldr	x1, [sp, #72]
  43210c:	str	x1, [x0, #80]
  432110:	ldr	x0, [sp, #40]
  432114:	ldr	x0, [x0, #104]
  432118:	cmp	x0, #0x0
  43211c:	b.eq	432164 <initialize_file_variables@@Base+0xdc>  // b.none
  432120:	ldr	x0, [sp, #40]
  432124:	ldr	x0, [x0, #104]
  432128:	ldr	x1, [sp, #40]
  43212c:	cmp	x1, x0
  432130:	b.eq	432164 <initialize_file_variables@@Base+0xdc>  // b.none
  432134:	ldr	x0, [sp, #40]
  432138:	ldr	x0, [x0, #104]
  43213c:	ldr	w1, [sp, #36]
  432140:	bl	432088 <initialize_file_variables@@Base>
  432144:	ldr	x0, [sp, #40]
  432148:	ldr	x0, [x0, #104]
  43214c:	ldr	x1, [x0, #80]
  432150:	ldr	x0, [sp, #72]
  432154:	str	x1, [x0]
  432158:	ldr	x0, [sp, #72]
  43215c:	str	wzr, [x0, #16]
  432160:	b	432414 <initialize_file_variables@@Base+0x38c>
  432164:	ldr	x0, [sp, #40]
  432168:	ldr	x0, [x0, #96]
  43216c:	cmp	x0, #0x0
  432170:	b.ne	432188 <initialize_file_variables@@Base+0x100>  // b.any
  432174:	ldr	x0, [sp, #72]
  432178:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  43217c:	add	x1, x1, #0x3a0
  432180:	str	x1, [x0]
  432184:	b	4321ac <initialize_file_variables@@Base+0x124>
  432188:	ldr	x0, [sp, #40]
  43218c:	ldr	x0, [x0, #96]
  432190:	ldr	w1, [sp, #36]
  432194:	bl	432088 <initialize_file_variables@@Base>
  432198:	ldr	x0, [sp, #40]
  43219c:	ldr	x0, [x0, #96]
  4321a0:	ldr	x1, [x0, #80]
  4321a4:	ldr	x0, [sp, #72]
  4321a8:	str	x1, [x0]
  4321ac:	ldr	x0, [sp, #72]
  4321b0:	mov	w1, #0x1                   	// #1
  4321b4:	str	w1, [x0, #16]
  4321b8:	ldr	w0, [sp, #36]
  4321bc:	cmp	w0, #0x0
  4321c0:	b.ne	4323c4 <initialize_file_variables@@Base+0x33c>  // b.any
  4321c4:	ldr	x0, [sp, #40]
  4321c8:	ldrb	w0, [x0, #138]
  4321cc:	and	w0, w0, #0x4
  4321d0:	and	w0, w0, #0xff
  4321d4:	cmp	w0, #0x0
  4321d8:	b.ne	4323c4 <initialize_file_variables@@Base+0x33c>  // b.any
  4321dc:	ldr	x0, [sp, #40]
  4321e0:	ldr	x0, [x0]
  4321e4:	mov	x1, x0
  4321e8:	mov	x0, #0x0                   	// #0
  4321ec:	bl	4313b4 <create_pattern_var@@Base+0x168>
  4321f0:	str	x0, [sp, #64]
  4321f4:	ldr	x0, [sp, #64]
  4321f8:	cmp	x0, #0x0
  4321fc:	b.eq	4323b4 <initialize_file_variables@@Base+0x32c>  // b.none
  432200:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432204:	add	x0, x0, #0x3b8
  432208:	ldr	x0, [x0]
  43220c:	str	x0, [sp, #48]
  432210:	bl	432420 <create_new_variable_set@@Base>
  432214:	mov	x1, x0
  432218:	ldr	x0, [sp, #40]
  43221c:	str	x1, [x0, #88]
  432220:	ldr	x0, [sp, #40]
  432224:	ldr	x1, [x0, #88]
  432228:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43222c:	add	x0, x0, #0x3b8
  432230:	str	x1, [x0]
  432234:	ldr	x0, [sp, #64]
  432238:	ldrh	w0, [x0, #78]
  43223c:	and	w0, w0, #0x380
  432240:	and	w0, w0, #0xffff
  432244:	cmp	w0, #0x80
  432248:	b.ne	4322d0 <initialize_file_variables@@Base+0x248>  // b.any
  43224c:	ldr	x0, [sp, #64]
  432250:	ldr	x19, [x0, #32]
  432254:	ldr	x0, [sp, #64]
  432258:	ldr	x0, [x0, #32]
  43225c:	bl	4066f0 <strlen@plt>
  432260:	mov	x7, x0
  432264:	ldr	x0, [sp, #64]
  432268:	ldr	x1, [x0, #40]
  43226c:	ldr	x0, [sp, #64]
  432270:	ldrb	w0, [x0, #79]
  432274:	ubfx	x0, x0, #2, #3
  432278:	and	w0, w0, #0xff
  43227c:	mov	w3, w0
  432280:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432284:	add	x0, x0, #0x3b8
  432288:	ldr	x0, [x0]
  43228c:	ldr	x2, [x0, #8]
  432290:	ldr	x0, [sp, #64]
  432294:	add	x0, x0, #0x30
  432298:	mov	x6, x0
  43229c:	mov	x5, x2
  4322a0:	mov	w4, #0x0                   	// #0
  4322a4:	mov	x2, x1
  4322a8:	mov	x1, x7
  4322ac:	mov	x0, x19
  4322b0:	bl	4316d8 <define_variable_in_set@@Base>
  4322b4:	str	x0, [sp, #56]
  4322b8:	ldr	x1, [sp, #56]
  4322bc:	ldrh	w0, [x1, #46]
  4322c0:	mov	w2, #0x1                   	// #1
  4322c4:	bfi	w0, w2, #7, #3
  4322c8:	strh	w0, [x1, #46]
  4322cc:	b	432320 <initialize_file_variables@@Base+0x298>
  4322d0:	ldr	x0, [sp, #64]
  4322d4:	add	x6, x0, #0x30
  4322d8:	ldr	x0, [sp, #64]
  4322dc:	ldr	x1, [x0, #32]
  4322e0:	ldr	x0, [sp, #64]
  4322e4:	ldr	x2, [x0, #40]
  4322e8:	ldr	x0, [sp, #64]
  4322ec:	ldrb	w0, [x0, #79]
  4322f0:	ubfx	x0, x0, #2, #3
  4322f4:	and	w0, w0, #0xff
  4322f8:	mov	w3, w0
  4322fc:	ldr	x0, [sp, #64]
  432300:	ldrh	w0, [x0, #78]
  432304:	ubfx	x0, x0, #7, #3
  432308:	and	w0, w0, #0xff
  43230c:	mov	w5, #0x1                   	// #1
  432310:	mov	w4, w0
  432314:	mov	x0, x6
  432318:	bl	433588 <do_variable_definition@@Base>
  43231c:	str	x0, [sp, #56]
  432320:	ldr	x0, [sp, #64]
  432324:	ldrb	w0, [x0, #76]
  432328:	ubfx	x0, x0, #3, #1
  43232c:	and	w2, w0, #0xff
  432330:	ldr	x1, [sp, #56]
  432334:	ldrb	w0, [x1, #44]
  432338:	bfi	w0, w2, #3, #1
  43233c:	strb	w0, [x1, #44]
  432340:	ldr	x0, [sp, #64]
  432344:	ldrb	w0, [x0, #79]
  432348:	ubfx	x0, x0, #5, #2
  43234c:	and	w2, w0, #0xff
  432350:	ldr	x1, [sp, #56]
  432354:	ldrb	w0, [x1, #47]
  432358:	bfi	w0, w2, #5, #2
  43235c:	strb	w0, [x1, #47]
  432360:	ldr	x0, [sp, #64]
  432364:	ldrb	w0, [x0, #76]
  432368:	ubfx	x0, x0, #7, #1
  43236c:	and	w2, w0, #0xff
  432370:	ldr	x1, [sp, #56]
  432374:	ldrb	w0, [x1, #44]
  432378:	bfi	w0, w2, #7, #1
  43237c:	strb	w0, [x1, #44]
  432380:	ldr	x0, [sp, #40]
  432384:	ldr	x0, [x0]
  432388:	mov	x1, x0
  43238c:	ldr	x0, [sp, #64]
  432390:	bl	4313b4 <create_pattern_var@@Base+0x168>
  432394:	str	x0, [sp, #64]
  432398:	ldr	x0, [sp, #64]
  43239c:	cmp	x0, #0x0
  4323a0:	b.ne	432234 <initialize_file_variables@@Base+0x1ac>  // b.any
  4323a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4323a8:	add	x0, x0, #0x3b8
  4323ac:	ldr	x1, [sp, #48]
  4323b0:	str	x1, [x0]
  4323b4:	ldr	x0, [sp, #40]
  4323b8:	ldrb	w1, [x0, #138]
  4323bc:	orr	w1, w1, #0x4
  4323c0:	strb	w1, [x0, #138]
  4323c4:	ldr	x0, [sp, #40]
  4323c8:	ldr	x0, [x0, #88]
  4323cc:	cmp	x0, #0x0
  4323d0:	b.eq	432414 <initialize_file_variables@@Base+0x38c>  // b.none
  4323d4:	ldr	x0, [sp, #40]
  4323d8:	ldr	x0, [x0, #88]
  4323dc:	ldr	x1, [sp, #72]
  4323e0:	ldr	x1, [x1]
  4323e4:	str	x1, [x0]
  4323e8:	ldr	x0, [sp, #40]
  4323ec:	ldr	x0, [x0, #88]
  4323f0:	ldr	x1, [sp, #72]
  4323f4:	ldr	w1, [x1, #16]
  4323f8:	str	w1, [x0, #16]
  4323fc:	ldr	x0, [sp, #40]
  432400:	ldr	x1, [x0, #88]
  432404:	ldr	x0, [sp, #72]
  432408:	str	x1, [x0]
  43240c:	ldr	x0, [sp, #72]
  432410:	str	wzr, [x0, #16]
  432414:	ldr	x19, [sp, #16]
  432418:	ldp	x29, x30, [sp], #80
  43241c:	ret

0000000000432420 <create_new_variable_set@@Base>:
  432420:	stp	x29, x30, [sp, #-32]!
  432424:	mov	x29, sp
  432428:	mov	x0, #0x58                  	// #88
  43242c:	bl	42268c <xmalloc@@Base>
  432430:	str	x0, [sp, #24]
  432434:	ldr	x5, [sp, #24]
  432438:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  43243c:	add	x4, x0, #0x600
  432440:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  432444:	add	x3, x0, #0x5e0
  432448:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  43244c:	add	x2, x0, #0x58c
  432450:	mov	x1, #0xd                   	// #13
  432454:	mov	x0, x5
  432458:	bl	4140a8 <hash_init@@Base>
  43245c:	mov	x0, #0x18                  	// #24
  432460:	bl	42268c <xmalloc@@Base>
  432464:	str	x0, [sp, #16]
  432468:	ldr	x0, [sp, #16]
  43246c:	ldr	x1, [sp, #24]
  432470:	str	x1, [x0, #8]
  432474:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432478:	add	x0, x0, #0x3b8
  43247c:	ldr	x1, [x0]
  432480:	ldr	x0, [sp, #16]
  432484:	str	x1, [x0]
  432488:	ldr	x0, [sp, #16]
  43248c:	str	wzr, [x0, #16]
  432490:	ldr	x0, [sp, #16]
  432494:	ldp	x29, x30, [sp], #32
  432498:	ret

000000000043249c <push_new_variable_scope@@Base>:
  43249c:	stp	x29, x30, [sp, #-32]!
  4324a0:	mov	x29, sp
  4324a4:	bl	432420 <create_new_variable_set@@Base>
  4324a8:	mov	x1, x0
  4324ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4324b0:	add	x0, x0, #0x3b8
  4324b4:	str	x1, [x0]
  4324b8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4324bc:	add	x0, x0, #0x3b8
  4324c0:	ldr	x0, [x0]
  4324c4:	ldr	x1, [x0]
  4324c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4324cc:	add	x0, x0, #0x3a0
  4324d0:	cmp	x1, x0
  4324d4:	b.ne	432560 <push_new_variable_scope@@Base+0xc4>  // b.any
  4324d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4324dc:	add	x0, x0, #0x3b8
  4324e0:	ldr	x0, [x0]
  4324e4:	ldr	x0, [x0, #8]
  4324e8:	str	x0, [sp, #24]
  4324ec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4324f0:	add	x0, x0, #0x3b8
  4324f4:	ldr	x0, [x0]
  4324f8:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  4324fc:	add	x1, x1, #0x3a0
  432500:	ldr	x1, [x1, #8]
  432504:	str	x1, [x0, #8]
  432508:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43250c:	add	x0, x0, #0x3a0
  432510:	ldr	x1, [sp, #24]
  432514:	str	x1, [x0, #8]
  432518:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43251c:	add	x0, x0, #0x3b8
  432520:	ldr	x0, [x0]
  432524:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  432528:	add	x1, x1, #0x3a0
  43252c:	ldr	x1, [x1]
  432530:	str	x1, [x0]
  432534:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432538:	add	x0, x0, #0x3b8
  43253c:	ldr	x1, [x0]
  432540:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432544:	add	x0, x0, #0x3a0
  432548:	str	x1, [x0]
  43254c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432550:	add	x0, x0, #0x3b8
  432554:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  432558:	add	x1, x1, #0x3a0
  43255c:	str	x1, [x0]
  432560:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432564:	add	x0, x0, #0x3b8
  432568:	ldr	x0, [x0]
  43256c:	ldp	x29, x30, [sp], #32
  432570:	ret

0000000000432574 <pop_variable_scope@@Base>:
  432574:	stp	x29, x30, [sp, #-32]!
  432578:	mov	x29, sp
  43257c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432580:	add	x0, x0, #0x3b8
  432584:	ldr	x1, [x0]
  432588:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43258c:	add	x0, x0, #0x3a0
  432590:	cmp	x1, x0
  432594:	b.eq	4325cc <pop_variable_scope@@Base+0x58>  // b.none
  432598:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43259c:	add	x0, x0, #0x3b8
  4325a0:	ldr	x0, [x0]
  4325a4:	str	x0, [sp, #24]
  4325a8:	ldr	x0, [sp, #24]
  4325ac:	ldr	x0, [x0, #8]
  4325b0:	str	x0, [sp, #16]
  4325b4:	ldr	x0, [sp, #24]
  4325b8:	ldr	x1, [x0]
  4325bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4325c0:	add	x0, x0, #0x3b8
  4325c4:	str	x1, [x0]
  4325c8:	b	432628 <pop_variable_scope@@Base+0xb4>
  4325cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4325d0:	add	x0, x0, #0x3a0
  4325d4:	ldr	x0, [x0]
  4325d8:	str	x0, [sp, #24]
  4325dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4325e0:	add	x0, x0, #0x3a0
  4325e4:	ldr	x0, [x0, #8]
  4325e8:	str	x0, [sp, #16]
  4325ec:	ldr	x0, [sp, #24]
  4325f0:	ldr	x1, [x0, #8]
  4325f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4325f8:	add	x0, x0, #0x3a0
  4325fc:	str	x1, [x0, #8]
  432600:	ldr	x0, [sp, #24]
  432604:	ldr	x1, [x0]
  432608:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43260c:	add	x0, x0, #0x3a0
  432610:	str	x1, [x0]
  432614:	ldr	x0, [sp, #24]
  432618:	ldr	w1, [x0, #16]
  43261c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432620:	add	x0, x0, #0x3a0
  432624:	str	w1, [x0, #16]
  432628:	ldr	x0, [sp, #24]
  43262c:	bl	406c00 <free@plt>
  432630:	ldr	x2, [sp, #16]
  432634:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  432638:	add	x1, x0, #0xac0
  43263c:	mov	x0, x2
  432640:	bl	41479c <hash_map@@Base>
  432644:	ldr	x0, [sp, #16]
  432648:	mov	w1, #0x1                   	// #1
  43264c:	bl	414734 <hash_free@@Base>
  432650:	ldr	x0, [sp, #16]
  432654:	bl	406c00 <free@plt>
  432658:	nop
  43265c:	ldp	x29, x30, [sp], #32
  432660:	ret
  432664:	stp	x29, x30, [sp, #-80]!
  432668:	mov	x29, sp
  43266c:	str	x0, [sp, #24]
  432670:	str	x1, [sp, #16]
  432674:	ldr	x0, [sp, #16]
  432678:	ldr	x0, [x0]
  43267c:	str	x0, [sp, #72]
  432680:	ldr	x0, [sp, #16]
  432684:	ldr	x0, [x0, #32]
  432688:	lsl	x0, x0, #3
  43268c:	ldr	x1, [sp, #72]
  432690:	add	x0, x1, x0
  432694:	str	x0, [sp, #64]
  432698:	ldr	x1, [sp, #24]
  43269c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4326a0:	add	x0, x0, #0x978
  4326a4:	cmp	x1, x0
  4326a8:	cset	w0, eq  // eq = none
  4326ac:	and	w0, w0, #0xff
  4326b0:	str	w0, [sp, #60]
  4326b4:	b	43278c <pop_variable_scope@@Base+0x218>
  4326b8:	ldr	x0, [sp, #72]
  4326bc:	ldr	x0, [x0]
  4326c0:	cmp	x0, #0x0
  4326c4:	b.eq	432780 <pop_variable_scope@@Base+0x20c>  // b.none
  4326c8:	ldr	x0, [sp, #72]
  4326cc:	ldr	x1, [x0]
  4326d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4326d4:	add	x0, x0, #0x40
  4326d8:	ldr	x0, [x0]
  4326dc:	cmp	x1, x0
  4326e0:	b.eq	432780 <pop_variable_scope@@Base+0x20c>  // b.none
  4326e4:	ldr	x0, [sp, #72]
  4326e8:	ldr	x0, [x0]
  4326ec:	str	x0, [sp, #48]
  4326f0:	ldr	x2, [sp, #24]
  4326f4:	ldr	x0, [sp, #72]
  4326f8:	ldr	x0, [x0]
  4326fc:	mov	x1, x0
  432700:	mov	x0, x2
  432704:	bl	41422c <hash_find_slot@@Base>
  432708:	str	x0, [sp, #40]
  43270c:	ldr	x0, [sp, #40]
  432710:	ldr	x0, [x0]
  432714:	cmp	x0, #0x0
  432718:	b.eq	432738 <pop_variable_scope@@Base+0x1c4>  // b.none
  43271c:	ldr	x0, [sp, #40]
  432720:	ldr	x1, [x0]
  432724:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432728:	add	x0, x0, #0x40
  43272c:	ldr	x0, [x0]
  432730:	cmp	x1, x0
  432734:	b.ne	43276c <pop_variable_scope@@Base+0x1f8>  // b.any
  432738:	ldr	x0, [sp, #24]
  43273c:	ldr	x2, [sp, #40]
  432740:	ldr	x1, [sp, #48]
  432744:	bl	414470 <hash_insert_at@@Base>
  432748:	ldrsw	x1, [sp, #60]
  43274c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432750:	add	x0, x0, #0x168
  432754:	ldr	x0, [x0]
  432758:	add	x1, x1, x0
  43275c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432760:	add	x0, x0, #0x168
  432764:	str	x1, [x0]
  432768:	b	432780 <pop_variable_scope@@Base+0x20c>
  43276c:	ldr	x0, [sp, #48]
  432770:	ldr	x0, [x0, #8]
  432774:	bl	406c00 <free@plt>
  432778:	ldr	x0, [sp, #48]
  43277c:	bl	406c00 <free@plt>
  432780:	ldr	x0, [sp, #72]
  432784:	add	x0, x0, #0x8
  432788:	str	x0, [sp, #72]
  43278c:	ldr	x1, [sp, #72]
  432790:	ldr	x0, [sp, #64]
  432794:	cmp	x1, x0
  432798:	b.cc	4326b8 <pop_variable_scope@@Base+0x144>  // b.lo, b.ul, b.last
  43279c:	nop
  4327a0:	nop
  4327a4:	ldp	x29, x30, [sp], #80
  4327a8:	ret

00000000004327ac <merge_variable_set_lists@@Base>:
  4327ac:	stp	x29, x30, [sp, #-64]!
  4327b0:	mov	x29, sp
  4327b4:	str	x0, [sp, #24]
  4327b8:	str	x1, [sp, #16]
  4327bc:	ldr	x0, [sp, #24]
  4327c0:	ldr	x0, [x0]
  4327c4:	str	x0, [sp, #56]
  4327c8:	str	xzr, [sp, #48]
  4327cc:	ldr	x0, [sp, #16]
  4327d0:	cmp	x0, #0x0
  4327d4:	b.eq	4328e8 <merge_variable_set_lists@@Base+0x13c>  // b.none
  4327d8:	ldr	x1, [sp, #16]
  4327dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4327e0:	add	x0, x0, #0x3a0
  4327e4:	cmp	x1, x0
  4327e8:	b.eq	4328e8 <merge_variable_set_lists@@Base+0x13c>  // b.none
  4327ec:	ldr	x0, [sp, #56]
  4327f0:	cmp	x0, #0x0
  4327f4:	b.eq	4328a8 <merge_variable_set_lists@@Base+0xfc>  // b.none
  4327f8:	b	432818 <merge_variable_set_lists@@Base+0x6c>
  4327fc:	ldr	x1, [sp, #56]
  432800:	ldr	x0, [sp, #16]
  432804:	cmp	x1, x0
  432808:	b.eq	4328f0 <merge_variable_set_lists@@Base+0x144>  // b.none
  43280c:	ldr	x0, [sp, #56]
  432810:	ldr	x0, [x0]
  432814:	str	x0, [sp, #56]
  432818:	ldr	x1, [sp, #56]
  43281c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432820:	add	x0, x0, #0x3a0
  432824:	cmp	x1, x0
  432828:	b.ne	4327fc <merge_variable_set_lists@@Base+0x50>  // b.any
  43282c:	ldr	x0, [sp, #24]
  432830:	ldr	x0, [x0]
  432834:	str	x0, [sp, #56]
  432838:	b	432880 <merge_variable_set_lists@@Base+0xd4>
  43283c:	ldr	x0, [sp, #16]
  432840:	str	x0, [sp, #40]
  432844:	ldr	x0, [sp, #16]
  432848:	ldr	x0, [x0]
  43284c:	str	x0, [sp, #16]
  432850:	ldr	x0, [sp, #56]
  432854:	ldr	x2, [x0, #8]
  432858:	ldr	x0, [sp, #40]
  43285c:	ldr	x0, [x0, #8]
  432860:	mov	x1, x0
  432864:	mov	x0, x2
  432868:	bl	432664 <pop_variable_scope@@Base+0xf0>
  43286c:	ldr	x0, [sp, #56]
  432870:	str	x0, [sp, #48]
  432874:	ldr	x0, [sp, #56]
  432878:	ldr	x0, [x0]
  43287c:	str	x0, [sp, #56]
  432880:	ldr	x1, [sp, #16]
  432884:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432888:	add	x0, x0, #0x3a0
  43288c:	cmp	x1, x0
  432890:	b.eq	4328a8 <merge_variable_set_lists@@Base+0xfc>  // b.none
  432894:	ldr	x1, [sp, #56]
  432898:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43289c:	add	x0, x0, #0x3a0
  4328a0:	cmp	x1, x0
  4328a4:	b.ne	43283c <merge_variable_set_lists@@Base+0x90>  // b.any
  4328a8:	ldr	x1, [sp, #16]
  4328ac:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4328b0:	add	x0, x0, #0x3a0
  4328b4:	cmp	x1, x0
  4328b8:	b.eq	4328f4 <merge_variable_set_lists@@Base+0x148>  // b.none
  4328bc:	ldr	x0, [sp, #48]
  4328c0:	cmp	x0, #0x0
  4328c4:	b.ne	4328d8 <merge_variable_set_lists@@Base+0x12c>  // b.any
  4328c8:	ldr	x0, [sp, #24]
  4328cc:	ldr	x1, [sp, #16]
  4328d0:	str	x1, [x0]
  4328d4:	b	4328f4 <merge_variable_set_lists@@Base+0x148>
  4328d8:	ldr	x0, [sp, #48]
  4328dc:	ldr	x1, [sp, #16]
  4328e0:	str	x1, [x0]
  4328e4:	b	4328f4 <merge_variable_set_lists@@Base+0x148>
  4328e8:	nop
  4328ec:	b	4328f4 <merge_variable_set_lists@@Base+0x148>
  4328f0:	nop
  4328f4:	ldp	x29, x30, [sp], #64
  4328f8:	ret

00000000004328fc <define_automatic_variables@@Base>:
  4328fc:	stp	x29, x30, [sp, #-224]!
  432900:	mov	x29, sp
  432904:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432908:	add	x0, x0, #0xa70
  43290c:	ldr	w0, [x0]
  432910:	add	x3, sp, #0x10
  432914:	mov	w2, w0
  432918:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  43291c:	add	x1, x0, #0xe28
  432920:	mov	x0, x3
  432924:	bl	406790 <sprintf@plt>
  432928:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43292c:	add	x0, x0, #0x3b8
  432930:	ldr	x0, [x0]
  432934:	ldr	x1, [x0, #8]
  432938:	add	x0, sp, #0x10
  43293c:	mov	x6, #0x0                   	// #0
  432940:	mov	x5, x1
  432944:	mov	w4, #0x0                   	// #0
  432948:	mov	w3, #0x1                   	// #1
  43294c:	mov	x2, x0
  432950:	mov	x1, #0x9                   	// #9
  432954:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432958:	add	x0, x0, #0xe30
  43295c:	bl	4316d8 <define_variable_in_set@@Base>
  432960:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432964:	add	x0, x0, #0x3c0
  432968:	ldr	x2, [x0]
  43296c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432970:	add	x0, x0, #0x9f0
  432974:	ldr	x0, [x0]
  432978:	cmp	x0, #0x0
  43297c:	b.eq	432998 <define_automatic_variables@@Base+0x9c>  // b.none
  432980:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432984:	add	x0, x0, #0x9f0
  432988:	ldr	x0, [x0]
  43298c:	ldrb	w0, [x0]
  432990:	cmp	w0, #0x0
  432994:	b.ne	4329a4 <define_automatic_variables@@Base+0xa8>  // b.any
  432998:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  43299c:	add	x0, x0, #0xe40
  4329a0:	b	4329ac <define_automatic_variables@@Base+0xb0>
  4329a4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4329a8:	add	x0, x0, #0xe48
  4329ac:	adrp	x1, 456000 <stdio_traced@@Base+0x2008>
  4329b0:	add	x1, x1, #0x9f0
  4329b4:	ldr	x1, [x1]
  4329b8:	cmp	x1, #0x0
  4329bc:	b.eq	4329e8 <define_automatic_variables@@Base+0xec>  // b.none
  4329c0:	adrp	x1, 456000 <stdio_traced@@Base+0x2008>
  4329c4:	add	x1, x1, #0x9f0
  4329c8:	ldr	x1, [x1]
  4329cc:	ldrb	w1, [x1]
  4329d0:	cmp	w1, #0x0
  4329d4:	b.eq	4329e8 <define_automatic_variables@@Base+0xec>  // b.none
  4329d8:	adrp	x1, 456000 <stdio_traced@@Base+0x2008>
  4329dc:	add	x1, x1, #0x9f0
  4329e0:	ldr	x1, [x1]
  4329e4:	b	4329f0 <define_automatic_variables@@Base+0xf4>
  4329e8:	adrp	x1, 43c000 <_IO_stdin_used@@Base+0x5450>
  4329ec:	add	x1, x1, #0xe40
  4329f0:	add	x5, sp, #0x10
  4329f4:	mov	x4, x1
  4329f8:	mov	x3, x0
  4329fc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432a00:	add	x1, x0, #0xe50
  432a04:	mov	x0, x5
  432a08:	bl	406790 <sprintf@plt>
  432a0c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432a10:	add	x0, x0, #0x3b8
  432a14:	ldr	x0, [x0]
  432a18:	ldr	x1, [x0, #8]
  432a1c:	add	x0, sp, #0x10
  432a20:	mov	x6, #0x0                   	// #0
  432a24:	mov	x5, x1
  432a28:	mov	w4, #0x0                   	// #0
  432a2c:	mov	w3, #0x0                   	// #0
  432a30:	mov	x2, x0
  432a34:	mov	x1, #0xc                   	// #12
  432a38:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432a3c:	add	x0, x0, #0xe58
  432a40:	bl	4316d8 <define_variable_in_set@@Base>
  432a44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432a48:	add	x0, x0, #0x3c8
  432a4c:	ldr	x1, [x0]
  432a50:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432a54:	add	x0, x0, #0x3b8
  432a58:	ldr	x0, [x0]
  432a5c:	ldr	x0, [x0, #8]
  432a60:	mov	x6, #0x0                   	// #0
  432a64:	mov	x5, x0
  432a68:	mov	w4, #0x0                   	// #0
  432a6c:	mov	w3, #0x0                   	// #0
  432a70:	mov	x2, x1
  432a74:	mov	x1, #0x9                   	// #9
  432a78:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432a7c:	add	x0, x0, #0xe68
  432a80:	bl	4316d8 <define_variable_in_set@@Base>
  432a84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432a88:	add	x0, x0, #0x48
  432a8c:	ldr	x1, [x0]
  432a90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432a94:	add	x0, x0, #0x3b8
  432a98:	ldr	x0, [x0]
  432a9c:	ldr	x0, [x0, #8]
  432aa0:	mov	x6, #0x0                   	// #0
  432aa4:	mov	x5, x0
  432aa8:	mov	w4, #0x0                   	// #0
  432aac:	mov	w3, #0x0                   	// #0
  432ab0:	mov	x2, x1
  432ab4:	mov	x1, #0x5                   	// #5
  432ab8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432abc:	add	x0, x0, #0xe78
  432ac0:	bl	4316d8 <define_variable_in_set@@Base>
  432ac4:	str	x0, [sp, #216]
  432ac8:	ldr	x0, [sp, #216]
  432acc:	ldr	x0, [x0, #8]
  432ad0:	ldrb	w0, [x0]
  432ad4:	cmp	w0, #0x0
  432ad8:	b.eq	432b0c <define_automatic_variables@@Base+0x210>  // b.none
  432adc:	ldr	x0, [sp, #216]
  432ae0:	ldrb	w0, [x0, #47]
  432ae4:	and	w0, w0, #0x1c
  432ae8:	and	w0, w0, #0xff
  432aec:	cmp	w0, #0x4
  432af0:	b.eq	432b0c <define_automatic_variables@@Base+0x210>  // b.none
  432af4:	ldr	x0, [sp, #216]
  432af8:	ldrb	w0, [x0, #47]
  432afc:	and	w0, w0, #0x1c
  432b00:	and	w0, w0, #0xff
  432b04:	cmp	w0, #0xc
  432b08:	b.ne	432b48 <define_automatic_variables@@Base+0x24c>  // b.any
  432b0c:	ldr	x0, [sp, #216]
  432b10:	ldr	x0, [x0, #8]
  432b14:	bl	406c00 <free@plt>
  432b18:	ldr	x1, [sp, #216]
  432b1c:	ldrb	w0, [x1, #47]
  432b20:	mov	w2, #0x2                   	// #2
  432b24:	bfi	w0, w2, #2, #3
  432b28:	strb	w0, [x1, #47]
  432b2c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432b30:	add	x0, x0, #0x48
  432b34:	ldr	x0, [x0]
  432b38:	bl	422788 <xstrdup@@Base>
  432b3c:	mov	x1, x0
  432b40:	ldr	x0, [sp, #216]
  432b44:	str	x1, [x0, #8]
  432b48:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432b4c:	add	x0, x0, #0x3b8
  432b50:	ldr	x0, [x0]
  432b54:	ldr	x0, [x0, #8]
  432b58:	mov	x6, #0x0                   	// #0
  432b5c:	mov	x5, x0
  432b60:	mov	w4, #0x0                   	// #0
  432b64:	mov	w3, #0x0                   	// #0
  432b68:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432b6c:	add	x2, x0, #0xe40
  432b70:	mov	x1, #0x9                   	// #9
  432b74:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432b78:	add	x0, x0, #0xe80
  432b7c:	bl	4316d8 <define_variable_in_set@@Base>
  432b80:	str	x0, [sp, #216]
  432b84:	ldr	x1, [sp, #216]
  432b88:	ldrb	w0, [x1, #47]
  432b8c:	mov	w2, #0x2                   	// #2
  432b90:	bfi	w0, w2, #5, #2
  432b94:	strb	w0, [x1, #47]
  432b98:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432b9c:	add	x0, x0, #0x3b8
  432ba0:	ldr	x0, [x0]
  432ba4:	ldr	x0, [x0, #8]
  432ba8:	mov	x6, #0x0                   	// #0
  432bac:	mov	x5, x0
  432bb0:	mov	w4, #0x1                   	// #1
  432bb4:	mov	w3, #0x6                   	// #6
  432bb8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432bbc:	add	x2, x0, #0xe90
  432bc0:	mov	x1, #0x2                   	// #2
  432bc4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432bc8:	add	x0, x0, #0xeb0
  432bcc:	bl	4316d8 <define_variable_in_set@@Base>
  432bd0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432bd4:	add	x0, x0, #0x3b8
  432bd8:	ldr	x0, [x0]
  432bdc:	ldr	x0, [x0, #8]
  432be0:	mov	x6, #0x0                   	// #0
  432be4:	mov	x5, x0
  432be8:	mov	w4, #0x1                   	// #1
  432bec:	mov	w3, #0x6                   	// #6
  432bf0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432bf4:	add	x2, x0, #0xeb8
  432bf8:	mov	x1, #0x2                   	// #2
  432bfc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c00:	add	x0, x0, #0xed8
  432c04:	bl	4316d8 <define_variable_in_set@@Base>
  432c08:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432c0c:	add	x0, x0, #0x3b8
  432c10:	ldr	x0, [x0]
  432c14:	ldr	x0, [x0, #8]
  432c18:	mov	x6, #0x0                   	// #0
  432c1c:	mov	x5, x0
  432c20:	mov	w4, #0x1                   	// #1
  432c24:	mov	w3, #0x6                   	// #6
  432c28:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c2c:	add	x2, x0, #0xee0
  432c30:	mov	x1, #0x2                   	// #2
  432c34:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c38:	add	x0, x0, #0xf00
  432c3c:	bl	4316d8 <define_variable_in_set@@Base>
  432c40:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432c44:	add	x0, x0, #0x3b8
  432c48:	ldr	x0, [x0]
  432c4c:	ldr	x0, [x0, #8]
  432c50:	mov	x6, #0x0                   	// #0
  432c54:	mov	x5, x0
  432c58:	mov	w4, #0x1                   	// #1
  432c5c:	mov	w3, #0x6                   	// #6
  432c60:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c64:	add	x2, x0, #0xf08
  432c68:	mov	x1, #0x2                   	// #2
  432c6c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c70:	add	x0, x0, #0xf28
  432c74:	bl	4316d8 <define_variable_in_set@@Base>
  432c78:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432c7c:	add	x0, x0, #0x3b8
  432c80:	ldr	x0, [x0]
  432c84:	ldr	x0, [x0, #8]
  432c88:	mov	x6, #0x0                   	// #0
  432c8c:	mov	x5, x0
  432c90:	mov	w4, #0x1                   	// #1
  432c94:	mov	w3, #0x6                   	// #6
  432c98:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432c9c:	add	x2, x0, #0xf30
  432ca0:	mov	x1, #0x2                   	// #2
  432ca4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432ca8:	add	x0, x0, #0xf50
  432cac:	bl	4316d8 <define_variable_in_set@@Base>
  432cb0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432cb4:	add	x0, x0, #0x3b8
  432cb8:	ldr	x0, [x0]
  432cbc:	ldr	x0, [x0, #8]
  432cc0:	mov	x6, #0x0                   	// #0
  432cc4:	mov	x5, x0
  432cc8:	mov	w4, #0x1                   	// #1
  432ccc:	mov	w3, #0x6                   	// #6
  432cd0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432cd4:	add	x2, x0, #0xf58
  432cd8:	mov	x1, #0x2                   	// #2
  432cdc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432ce0:	add	x0, x0, #0xf78
  432ce4:	bl	4316d8 <define_variable_in_set@@Base>
  432ce8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432cec:	add	x0, x0, #0x3b8
  432cf0:	ldr	x0, [x0]
  432cf4:	ldr	x0, [x0, #8]
  432cf8:	mov	x6, #0x0                   	// #0
  432cfc:	mov	x5, x0
  432d00:	mov	w4, #0x1                   	// #1
  432d04:	mov	w3, #0x6                   	// #6
  432d08:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d0c:	add	x2, x0, #0xf80
  432d10:	mov	x1, #0x2                   	// #2
  432d14:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d18:	add	x0, x0, #0xfa0
  432d1c:	bl	4316d8 <define_variable_in_set@@Base>
  432d20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432d24:	add	x0, x0, #0x3b8
  432d28:	ldr	x0, [x0]
  432d2c:	ldr	x0, [x0, #8]
  432d30:	mov	x6, #0x0                   	// #0
  432d34:	mov	x5, x0
  432d38:	mov	w4, #0x1                   	// #1
  432d3c:	mov	w3, #0x6                   	// #6
  432d40:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d44:	add	x2, x0, #0xfa8
  432d48:	mov	x1, #0x2                   	// #2
  432d4c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d50:	add	x0, x0, #0xfb8
  432d54:	bl	4316d8 <define_variable_in_set@@Base>
  432d58:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432d5c:	add	x0, x0, #0x3b8
  432d60:	ldr	x0, [x0]
  432d64:	ldr	x0, [x0, #8]
  432d68:	mov	x6, #0x0                   	// #0
  432d6c:	mov	x5, x0
  432d70:	mov	w4, #0x1                   	// #1
  432d74:	mov	w3, #0x6                   	// #6
  432d78:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d7c:	add	x2, x0, #0xfc0
  432d80:	mov	x1, #0x2                   	// #2
  432d84:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432d88:	add	x0, x0, #0xfd0
  432d8c:	bl	4316d8 <define_variable_in_set@@Base>
  432d90:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432d94:	add	x0, x0, #0x3b8
  432d98:	ldr	x0, [x0]
  432d9c:	ldr	x0, [x0, #8]
  432da0:	mov	x6, #0x0                   	// #0
  432da4:	mov	x5, x0
  432da8:	mov	w4, #0x1                   	// #1
  432dac:	mov	w3, #0x6                   	// #6
  432db0:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432db4:	add	x2, x0, #0xfd8
  432db8:	mov	x1, #0x2                   	// #2
  432dbc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432dc0:	add	x0, x0, #0xfe8
  432dc4:	bl	4316d8 <define_variable_in_set@@Base>
  432dc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432dcc:	add	x0, x0, #0x3b8
  432dd0:	ldr	x0, [x0]
  432dd4:	ldr	x0, [x0, #8]
  432dd8:	mov	x6, #0x0                   	// #0
  432ddc:	mov	x5, x0
  432de0:	mov	w4, #0x1                   	// #1
  432de4:	mov	w3, #0x6                   	// #6
  432de8:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  432dec:	add	x2, x0, #0xff0
  432df0:	mov	x1, #0x2                   	// #2
  432df4:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432df8:	add	x0, x0, #0x0
  432dfc:	bl	4316d8 <define_variable_in_set@@Base>
  432e00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432e04:	add	x0, x0, #0x3b8
  432e08:	ldr	x0, [x0]
  432e0c:	ldr	x0, [x0, #8]
  432e10:	mov	x6, #0x0                   	// #0
  432e14:	mov	x5, x0
  432e18:	mov	w4, #0x1                   	// #1
  432e1c:	mov	w3, #0x6                   	// #6
  432e20:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432e24:	add	x2, x0, #0x8
  432e28:	mov	x1, #0x2                   	// #2
  432e2c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432e30:	add	x0, x0, #0x18
  432e34:	bl	4316d8 <define_variable_in_set@@Base>
  432e38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432e3c:	add	x0, x0, #0x3b8
  432e40:	ldr	x0, [x0]
  432e44:	ldr	x0, [x0, #8]
  432e48:	mov	x6, #0x0                   	// #0
  432e4c:	mov	x5, x0
  432e50:	mov	w4, #0x1                   	// #1
  432e54:	mov	w3, #0x6                   	// #6
  432e58:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432e5c:	add	x2, x0, #0x20
  432e60:	mov	x1, #0x2                   	// #2
  432e64:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432e68:	add	x0, x0, #0x30
  432e6c:	bl	4316d8 <define_variable_in_set@@Base>
  432e70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432e74:	add	x0, x0, #0x3b8
  432e78:	ldr	x0, [x0]
  432e7c:	ldr	x0, [x0, #8]
  432e80:	mov	x6, #0x0                   	// #0
  432e84:	mov	x5, x0
  432e88:	mov	w4, #0x1                   	// #1
  432e8c:	mov	w3, #0x6                   	// #6
  432e90:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432e94:	add	x2, x0, #0x38
  432e98:	mov	x1, #0x2                   	// #2
  432e9c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  432ea0:	add	x0, x0, #0x48
  432ea4:	bl	4316d8 <define_variable_in_set@@Base>
  432ea8:	nop
  432eac:	ldp	x29, x30, [sp], #224
  432eb0:	ret

0000000000432eb4 <target_environment@@Base>:
  432eb4:	stp	x29, x30, [sp, #-288]!
  432eb8:	mov	x29, sp
  432ebc:	str	x19, [sp, #16]
  432ec0:	str	x0, [sp, #40]
  432ec4:	ldr	x0, [sp, #40]
  432ec8:	cmp	x0, #0x0
  432ecc:	b.ne	432ee4 <target_environment@@Base+0x30>  // b.any
  432ed0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432ed4:	add	x0, x0, #0x3b8
  432ed8:	ldr	x0, [x0]
  432edc:	str	x0, [sp, #280]
  432ee0:	b	432ef0 <target_environment@@Base+0x3c>
  432ee4:	ldr	x0, [sp, #40]
  432ee8:	ldr	x0, [x0, #80]
  432eec:	str	x0, [sp, #280]
  432ef0:	add	x5, sp, #0x68
  432ef4:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  432ef8:	add	x4, x0, #0x600
  432efc:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  432f00:	add	x3, x0, #0x5e0
  432f04:	adrp	x0, 431000 <strcache_print_stats@@Base+0x190>
  432f08:	add	x2, x0, #0x58c
  432f0c:	mov	x1, #0x20b                 	// #523
  432f10:	mov	x0, x5
  432f14:	bl	4140a8 <hash_init@@Base>
  432f18:	ldr	x0, [sp, #280]
  432f1c:	str	x0, [sp, #272]
  432f20:	b	433240 <target_environment@@Base+0x38c>
  432f24:	ldr	x0, [sp, #272]
  432f28:	ldr	x0, [x0, #8]
  432f2c:	str	x0, [sp, #208]
  432f30:	ldr	x0, [sp, #208]
  432f34:	ldr	x0, [x0]
  432f38:	str	x0, [sp, #264]
  432f3c:	ldr	x0, [sp, #208]
  432f40:	ldr	x0, [x0, #32]
  432f44:	lsl	x0, x0, #3
  432f48:	ldr	x1, [sp, #264]
  432f4c:	add	x0, x1, x0
  432f50:	str	x0, [sp, #232]
  432f54:	b	433224 <target_environment@@Base+0x370>
  432f58:	ldr	x0, [sp, #264]
  432f5c:	ldr	x0, [x0]
  432f60:	cmp	x0, #0x0
  432f64:	b.eq	433218 <target_environment@@Base+0x364>  // b.none
  432f68:	ldr	x0, [sp, #264]
  432f6c:	ldr	x1, [x0]
  432f70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  432f74:	add	x0, x0, #0x40
  432f78:	ldr	x0, [x0]
  432f7c:	cmp	x1, x0
  432f80:	b.eq	433218 <target_environment@@Base+0x364>  // b.none
  432f84:	ldr	x0, [sp, #264]
  432f88:	ldr	x0, [x0]
  432f8c:	str	x0, [sp, #248]
  432f90:	ldr	x0, [sp, #248]
  432f94:	ldrb	w0, [x0, #44]
  432f98:	and	w0, w0, #0x8
  432f9c:	and	w0, w0, #0xff
  432fa0:	cmp	w0, #0x0
  432fa4:	b.eq	433018 <target_environment@@Base+0x164>  // b.none
  432fa8:	ldr	x0, [sp, #248]
  432fac:	ldrb	w0, [x0, #47]
  432fb0:	and	w0, w0, #0x60
  432fb4:	and	w0, w0, #0xff
  432fb8:	cmp	w0, #0x60
  432fbc:	b.ne	433018 <target_environment@@Base+0x164>  // b.any
  432fc0:	ldr	x0, [sp, #248]
  432fc4:	ldr	x19, [x0]
  432fc8:	ldr	x0, [sp, #248]
  432fcc:	ldr	x0, [x0]
  432fd0:	bl	4066f0 <strlen@plt>
  432fd4:	mov	x1, x0
  432fd8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  432fdc:	add	x2, x0, #0x978
  432fe0:	mov	x0, x19
  432fe4:	bl	432050 <lookup_variable_in_set@@Base>
  432fe8:	str	x0, [sp, #200]
  432fec:	ldr	x0, [sp, #200]
  432ff0:	cmp	x0, #0x0
  432ff4:	b.eq	433018 <target_environment@@Base+0x164>  // b.none
  432ff8:	ldr	x0, [sp, #200]
  432ffc:	ldrb	w0, [x0, #47]
  433000:	ubfx	x0, x0, #5, #2
  433004:	and	w2, w0, #0xff
  433008:	ldr	x1, [sp, #248]
  43300c:	ldrb	w0, [x1, #47]
  433010:	bfi	w0, w2, #5, #2
  433014:	strb	w0, [x1, #47]
  433018:	ldr	x0, [sp, #248]
  43301c:	ldrb	w0, [x0, #47]
  433020:	ubfx	x0, x0, #5, #2
  433024:	and	w0, w0, #0xff
  433028:	cmp	w0, #0x3
  43302c:	b.eq	43304c <target_environment@@Base+0x198>  // b.none
  433030:	cmp	w0, #0x3
  433034:	b.gt	4331a0 <target_environment@@Base+0x2ec>
  433038:	cmp	w0, #0x1
  43303c:	b.eq	4330f4 <target_environment@@Base+0x240>  // b.none
  433040:	cmp	w0, #0x2
  433044:	b.eq	433184 <target_environment@@Base+0x2d0>  // b.none
  433048:	b	4331a0 <target_environment@@Base+0x2ec>
  43304c:	ldr	x0, [sp, #248]
  433050:	ldrb	w0, [x0, #47]
  433054:	and	w0, w0, #0x1c
  433058:	and	w0, w0, #0xff
  43305c:	cmp	w0, #0x0
  433060:	b.eq	4331fc <target_environment@@Base+0x348>  // b.none
  433064:	ldr	x0, [sp, #248]
  433068:	ldrb	w0, [x0, #47]
  43306c:	and	w0, w0, #0x1c
  433070:	and	w0, w0, #0xff
  433074:	cmp	w0, #0x18
  433078:	b.eq	4331fc <target_environment@@Base+0x348>  // b.none
  43307c:	ldr	x0, [sp, #248]
  433080:	ldrb	w0, [x0, #44]
  433084:	and	w0, w0, #0x20
  433088:	and	w0, w0, #0xff
  43308c:	cmp	w0, #0x0
  433090:	b.eq	433204 <target_environment@@Base+0x350>  // b.none
  433094:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  433098:	add	x0, x0, #0xb54
  43309c:	ldr	w0, [x0]
  4330a0:	cmp	w0, #0x0
  4330a4:	b.ne	4331a8 <target_environment@@Base+0x2f4>  // b.any
  4330a8:	ldr	x0, [sp, #248]
  4330ac:	ldrb	w0, [x0, #47]
  4330b0:	and	w0, w0, #0x1c
  4330b4:	and	w0, w0, #0xff
  4330b8:	cmp	w0, #0x10
  4330bc:	b.eq	4331a8 <target_environment@@Base+0x2f4>  // b.none
  4330c0:	ldr	x0, [sp, #248]
  4330c4:	ldrb	w0, [x0, #47]
  4330c8:	and	w0, w0, #0x1c
  4330cc:	and	w0, w0, #0xff
  4330d0:	cmp	w0, #0x4
  4330d4:	b.eq	4331a8 <target_environment@@Base+0x2f4>  // b.none
  4330d8:	ldr	x0, [sp, #248]
  4330dc:	ldrb	w0, [x0, #47]
  4330e0:	and	w0, w0, #0x1c
  4330e4:	and	w0, w0, #0xff
  4330e8:	cmp	w0, #0xc
  4330ec:	b.eq	4331a8 <target_environment@@Base+0x2f4>  // b.none
  4330f0:	b	433218 <target_environment@@Base+0x364>
  4330f4:	ldr	x0, [sp, #248]
  4330f8:	ldr	x1, [x0]
  4330fc:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  433100:	add	x0, x0, #0xe78
  433104:	cmp	x1, x0
  433108:	b.eq	433160 <target_environment@@Base+0x2ac>  // b.none
  43310c:	ldr	x0, [sp, #248]
  433110:	ldr	x0, [x0]
  433114:	ldrb	w1, [x0]
  433118:	mov	w0, #0x53                  	// #83
  43311c:	cmp	w1, w0
  433120:	b.ne	43320c <target_environment@@Base+0x358>  // b.any
  433124:	ldr	x0, [sp, #248]
  433128:	ldr	x0, [x0]
  43312c:	ldrb	w0, [x0]
  433130:	cmp	w0, #0x0
  433134:	b.eq	433160 <target_environment@@Base+0x2ac>  // b.none
  433138:	ldr	x0, [sp, #248]
  43313c:	ldr	x0, [x0]
  433140:	add	x2, x0, #0x1
  433144:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  433148:	add	x0, x0, #0xe79
  43314c:	mov	x1, x0
  433150:	mov	x0, x2
  433154:	bl	406bc0 <strcmp@plt>
  433158:	cmp	w0, #0x0
  43315c:	b.ne	43320c <target_environment@@Base+0x358>  // b.any
  433160:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  433164:	add	x0, x0, #0xa18
  433168:	ldr	x0, [x0, #8]
  43316c:	cmp	x0, #0x0
  433170:	b.eq	43320c <target_environment@@Base+0x358>  // b.none
  433174:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  433178:	add	x0, x0, #0xa18
  43317c:	str	x0, [sp, #248]
  433180:	b	4331ac <target_environment@@Base+0x2f8>
  433184:	ldr	x0, [sp, #248]
  433188:	ldrb	w0, [x0, #47]
  43318c:	and	w0, w0, #0x1c
  433190:	and	w0, w0, #0xff
  433194:	cmp	w0, #0x0
  433198:	b.eq	433214 <target_environment@@Base+0x360>  // b.none
  43319c:	b	4331ac <target_environment@@Base+0x2f8>
  4331a0:	nop
  4331a4:	b	4331ac <target_environment@@Base+0x2f8>
  4331a8:	nop
  4331ac:	add	x0, sp, #0x68
  4331b0:	ldr	x1, [sp, #248]
  4331b4:	bl	41422c <hash_find_slot@@Base>
  4331b8:	str	x0, [sp, #192]
  4331bc:	ldr	x0, [sp, #192]
  4331c0:	ldr	x0, [x0]
  4331c4:	cmp	x0, #0x0
  4331c8:	b.eq	4331e8 <target_environment@@Base+0x334>  // b.none
  4331cc:	ldr	x0, [sp, #192]
  4331d0:	ldr	x1, [x0]
  4331d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4331d8:	add	x0, x0, #0x40
  4331dc:	ldr	x0, [x0]
  4331e0:	cmp	x1, x0
  4331e4:	b.ne	433218 <target_environment@@Base+0x364>  // b.any
  4331e8:	add	x0, sp, #0x68
  4331ec:	ldr	x2, [sp, #192]
  4331f0:	ldr	x1, [sp, #248]
  4331f4:	bl	414470 <hash_insert_at@@Base>
  4331f8:	b	433218 <target_environment@@Base+0x364>
  4331fc:	nop
  433200:	b	433218 <target_environment@@Base+0x364>
  433204:	nop
  433208:	b	433218 <target_environment@@Base+0x364>
  43320c:	nop
  433210:	b	433218 <target_environment@@Base+0x364>
  433214:	nop
  433218:	ldr	x0, [sp, #264]
  43321c:	add	x0, x0, #0x8
  433220:	str	x0, [sp, #264]
  433224:	ldr	x1, [sp, #264]
  433228:	ldr	x0, [sp, #232]
  43322c:	cmp	x1, x0
  433230:	b.cc	432f58 <target_environment@@Base+0xa4>  // b.lo, b.ul, b.last
  433234:	ldr	x0, [sp, #272]
  433238:	ldr	x0, [x0]
  43323c:	str	x0, [sp, #272]
  433240:	ldr	x0, [sp, #272]
  433244:	cmp	x0, #0x0
  433248:	b.ne	432f24 <target_environment@@Base+0x70>  // b.any
  43324c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  433250:	add	x0, x0, #0xe30
  433254:	str	x0, [sp, #56]
  433258:	mov	w0, #0x9                   	// #9
  43325c:	str	w0, [sp, #96]
  433260:	add	x1, sp, #0x38
  433264:	add	x0, sp, #0x68
  433268:	bl	414544 <hash_delete@@Base>
  43326c:	ldr	x0, [sp, #152]
  433270:	add	x0, x0, #0x2
  433274:	lsl	x0, x0, #3
  433278:	bl	42268c <xmalloc@@Base>
  43327c:	str	x0, [sp, #240]
  433280:	ldr	x0, [sp, #240]
  433284:	str	x0, [sp, #256]
  433288:	ldr	x0, [sp, #104]
  43328c:	str	x0, [sp, #264]
  433290:	ldr	x0, [sp, #136]
  433294:	lsl	x0, x0, #3
  433298:	ldr	x1, [sp, #264]
  43329c:	add	x0, x1, x0
  4332a0:	str	x0, [sp, #232]
  4332a4:	b	4333c8 <target_environment@@Base+0x514>
  4332a8:	ldr	x0, [sp, #264]
  4332ac:	ldr	x0, [x0]
  4332b0:	cmp	x0, #0x0
  4332b4:	b.eq	4333bc <target_environment@@Base+0x508>  // b.none
  4332b8:	ldr	x0, [sp, #264]
  4332bc:	ldr	x1, [x0]
  4332c0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4332c4:	add	x0, x0, #0x40
  4332c8:	ldr	x0, [x0]
  4332cc:	cmp	x1, x0
  4332d0:	b.eq	4333bc <target_environment@@Base+0x508>  // b.none
  4332d4:	ldr	x0, [sp, #264]
  4332d8:	ldr	x0, [x0]
  4332dc:	str	x0, [sp, #224]
  4332e0:	ldr	x0, [sp, #224]
  4332e4:	ldrb	w0, [x0, #44]
  4332e8:	and	w0, w0, #0x1
  4332ec:	and	w0, w0, #0xff
  4332f0:	cmp	w0, #0x0
  4332f4:	b.eq	43337c <target_environment@@Base+0x4c8>  // b.none
  4332f8:	ldr	x0, [sp, #224]
  4332fc:	ldrb	w0, [x0, #47]
  433300:	and	w0, w0, #0x1c
  433304:	and	w0, w0, #0xff
  433308:	cmp	w0, #0x4
  43330c:	b.eq	43337c <target_environment@@Base+0x4c8>  // b.none
  433310:	ldr	x0, [sp, #224]
  433314:	ldrb	w0, [x0, #47]
  433318:	and	w0, w0, #0x1c
  43331c:	and	w0, w0, #0xff
  433320:	cmp	w0, #0xc
  433324:	b.eq	43337c <target_environment@@Base+0x4c8>  // b.none
  433328:	ldr	x1, [sp, #40]
  43332c:	ldr	x0, [sp, #224]
  433330:	bl	40b500 <recursively_expand_for_file@@Base>
  433334:	str	x0, [sp, #216]
  433338:	ldr	x0, [sp, #224]
  43333c:	ldr	x1, [x0]
  433340:	ldr	x3, [sp, #216]
  433344:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433348:	add	x2, x0, #0x50
  43334c:	mov	w0, #0x3                   	// #3
  433350:	bl	422404 <concat@@Base>
  433354:	mov	x1, x0
  433358:	ldr	x19, [sp, #256]
  43335c:	add	x0, x19, #0x8
  433360:	str	x0, [sp, #256]
  433364:	mov	x0, x1
  433368:	bl	422788 <xstrdup@@Base>
  43336c:	str	x0, [x19]
  433370:	ldr	x0, [sp, #216]
  433374:	bl	406c00 <free@plt>
  433378:	b	4333bc <target_environment@@Base+0x508>
  43337c:	ldr	x0, [sp, #224]
  433380:	ldr	x1, [x0]
  433384:	ldr	x0, [sp, #224]
  433388:	ldr	x0, [x0, #8]
  43338c:	mov	x3, x0
  433390:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433394:	add	x2, x0, #0x50
  433398:	mov	w0, #0x3                   	// #3
  43339c:	bl	422404 <concat@@Base>
  4333a0:	mov	x1, x0
  4333a4:	ldr	x19, [sp, #256]
  4333a8:	add	x0, x19, #0x8
  4333ac:	str	x0, [sp, #256]
  4333b0:	mov	x0, x1
  4333b4:	bl	422788 <xstrdup@@Base>
  4333b8:	str	x0, [x19]
  4333bc:	ldr	x0, [sp, #264]
  4333c0:	add	x0, x0, #0x8
  4333c4:	str	x0, [sp, #264]
  4333c8:	ldr	x1, [sp, #264]
  4333cc:	ldr	x0, [sp, #232]
  4333d0:	cmp	x1, x0
  4333d4:	b.cc	4332a8 <target_environment@@Base+0x3f4>  // b.lo, b.ul, b.last
  4333d8:	mov	x0, #0x64                  	// #100
  4333dc:	bl	42268c <xmalloc@@Base>
  4333e0:	mov	x1, x0
  4333e4:	ldr	x0, [sp, #256]
  4333e8:	str	x1, [x0]
  4333ec:	ldr	x0, [sp, #256]
  4333f0:	ldr	x4, [x0]
  4333f4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4333f8:	add	x0, x0, #0xa70
  4333fc:	ldr	w0, [x0]
  433400:	add	w0, w0, #0x1
  433404:	mov	w3, w0
  433408:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  43340c:	add	x2, x0, #0xe30
  433410:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433414:	add	x1, x0, #0x58
  433418:	mov	x0, x4
  43341c:	bl	406790 <sprintf@plt>
  433420:	ldr	x0, [sp, #256]
  433424:	add	x0, x0, #0x8
  433428:	str	x0, [sp, #256]
  43342c:	ldr	x0, [sp, #256]
  433430:	str	xzr, [x0]
  433434:	add	x0, sp, #0x68
  433438:	mov	w1, #0x0                   	// #0
  43343c:	bl	414734 <hash_free@@Base>
  433440:	ldr	x0, [sp, #240]
  433444:	ldr	x19, [sp, #16]
  433448:	ldp	x29, x30, [sp], #288
  43344c:	ret
  433450:	stp	x29, x30, [sp, #-32]!
  433454:	mov	x29, sp
  433458:	str	x0, [sp, #24]
  43345c:	ldr	x0, [sp, #24]
  433460:	ldr	x1, [x0]
  433464:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433468:	add	x0, x0, #0x60
  43346c:	cmp	x1, x0
  433470:	b.eq	4334c8 <target_environment@@Base+0x614>  // b.none
  433474:	ldr	x0, [sp, #24]
  433478:	ldr	x0, [x0]
  43347c:	ldrb	w1, [x0]
  433480:	mov	w0, #0x2e                  	// #46
  433484:	cmp	w1, w0
  433488:	b.ne	4334fc <target_environment@@Base+0x648>  // b.any
  43348c:	ldr	x0, [sp, #24]
  433490:	ldr	x0, [x0]
  433494:	ldrb	w0, [x0]
  433498:	cmp	w0, #0x0
  43349c:	b.eq	4334c8 <target_environment@@Base+0x614>  // b.none
  4334a0:	ldr	x0, [sp, #24]
  4334a4:	ldr	x0, [x0]
  4334a8:	add	x2, x0, #0x1
  4334ac:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4334b0:	add	x0, x0, #0x61
  4334b4:	mov	x1, x0
  4334b8:	mov	x0, x2
  4334bc:	bl	406bc0 <strcmp@plt>
  4334c0:	cmp	w0, #0x0
  4334c4:	b.ne	4334fc <target_environment@@Base+0x648>  // b.any
  4334c8:	ldr	x0, [sp, #24]
  4334cc:	ldr	x0, [x0, #8]
  4334d0:	ldrb	w0, [x0]
  4334d4:	cmp	w0, #0x0
  4334d8:	b.eq	4334ec <target_environment@@Base+0x638>  // b.none
  4334dc:	ldr	x0, [sp, #24]
  4334e0:	ldr	x0, [x0, #8]
  4334e4:	ldrb	w0, [x0]
  4334e8:	b	4334f0 <target_environment@@Base+0x63c>
  4334ec:	mov	w0, #0x9                   	// #9
  4334f0:	adrp	x1, 453000 <expanding_var@@Base+0x328>
  4334f4:	add	x1, x1, #0x1f8
  4334f8:	strb	w0, [x1]
  4334fc:	ldr	x0, [sp, #24]
  433500:	ldp	x29, x30, [sp], #32
  433504:	ret
  433508:	stp	x29, x30, [sp, #-80]!
  43350c:	mov	x29, sp
  433510:	str	x0, [sp, #24]
  433514:	add	x1, sp, #0x38
  433518:	add	x0, sp, #0x40
  43351c:	bl	40c470 <install_variable_buffer@@Base>
  433520:	ldr	x0, [sp, #24]
  433524:	str	x0, [sp, #40]
  433528:	str	xzr, [sp, #48]
  43352c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  433530:	add	x0, x0, #0xa00
  433534:	ldr	x0, [x0]
  433538:	add	x1, sp, #0x28
  43353c:	mov	w2, #0x0                   	// #0
  433540:	bl	4123bc <func_shell_base@@Base>
  433544:	mov	x3, x0
  433548:	mov	x2, #0x1                   	// #1
  43354c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433550:	add	x1, x0, #0x70
  433554:	mov	x0, x3
  433558:	bl	40b388 <variable_buffer_output@@Base>
  43355c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  433560:	add	x0, x0, #0xa00
  433564:	ldr	x0, [x0]
  433568:	bl	406a90 <strdup@plt>
  43356c:	str	x0, [sp, #72]
  433570:	ldr	x0, [sp, #64]
  433574:	ldr	x1, [sp, #56]
  433578:	bl	40c4c4 <restore_variable_buffer@@Base>
  43357c:	ldr	x0, [sp, #72]
  433580:	ldp	x29, x30, [sp], #80
  433584:	ret

0000000000433588 <do_variable_definition@@Base>:
  433588:	stp	x29, x30, [sp, #-144]!
  43358c:	mov	x29, sp
  433590:	str	x0, [sp, #56]
  433594:	str	x1, [sp, #48]
  433598:	str	x2, [sp, #40]
  43359c:	str	w3, [sp, #36]
  4335a0:	str	w4, [sp, #32]
  4335a4:	str	w5, [sp, #28]
  4335a8:	str	xzr, [sp, #128]
  4335ac:	str	wzr, [sp, #116]
  4335b0:	str	wzr, [sp, #112]
  4335b4:	ldr	w0, [sp, #32]
  4335b8:	cmp	w0, #0x6
  4335bc:	b.eq	4336c4 <do_variable_definition@@Base+0x13c>  // b.none
  4335c0:	ldr	w0, [sp, #32]
  4335c4:	cmp	w0, #0x6
  4335c8:	b.hi	43362c <do_variable_definition@@Base+0xa4>  // b.pmore
  4335cc:	ldr	w0, [sp, #32]
  4335d0:	cmp	w0, #0x5
  4335d4:	b.eq	43364c <do_variable_definition@@Base+0xc4>  // b.none
  4335d8:	ldr	w0, [sp, #32]
  4335dc:	cmp	w0, #0x5
  4335e0:	b.hi	43362c <do_variable_definition@@Base+0xa4>  // b.pmore
  4335e4:	ldr	w0, [sp, #32]
  4335e8:	cmp	w0, #0x4
  4335ec:	b.eq	433684 <do_variable_definition@@Base+0xfc>  // b.none
  4335f0:	ldr	w0, [sp, #32]
  4335f4:	cmp	w0, #0x4
  4335f8:	b.hi	43362c <do_variable_definition@@Base+0xa4>  // b.pmore
  4335fc:	ldr	w0, [sp, #32]
  433600:	cmp	w0, #0x3
  433604:	b.eq	4336c4 <do_variable_definition@@Base+0x13c>  // b.none
  433608:	ldr	w0, [sp, #32]
  43360c:	cmp	w0, #0x3
  433610:	b.hi	43362c <do_variable_definition@@Base+0xa4>  // b.pmore
  433614:	ldr	w0, [sp, #32]
  433618:	cmp	w0, #0x1
  43361c:	b.eq	433630 <do_variable_definition@@Base+0xa8>  // b.none
  433620:	ldr	w0, [sp, #32]
  433624:	cmp	w0, #0x2
  433628:	b.eq	4336b8 <do_variable_definition@@Base+0x130>  // b.none
  43362c:	bl	406b30 <abort@plt>
  433630:	mov	x1, #0x0                   	// #0
  433634:	ldr	x0, [sp, #40]
  433638:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  43363c:	str	x0, [sp, #128]
  433640:	ldr	x0, [sp, #128]
  433644:	str	x0, [sp, #136]
  433648:	b	433884 <do_variable_definition@@Base+0x2fc>
  43364c:	mov	x1, #0x0                   	// #0
  433650:	ldr	x0, [sp, #40]
  433654:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  433658:	str	x0, [sp, #80]
  43365c:	ldr	x0, [sp, #80]
  433660:	bl	433508 <target_environment@@Base+0x654>
  433664:	str	x0, [sp, #128]
  433668:	ldr	x0, [sp, #128]
  43366c:	str	x0, [sp, #136]
  433670:	ldr	x0, [sp, #80]
  433674:	bl	406c00 <free@plt>
  433678:	mov	w0, #0x2                   	// #2
  43367c:	str	w0, [sp, #32]
  433680:	b	433884 <do_variable_definition@@Base+0x2fc>
  433684:	ldr	x0, [sp, #48]
  433688:	bl	4066f0 <strlen@plt>
  43368c:	mov	x1, x0
  433690:	ldr	x0, [sp, #48]
  433694:	bl	431f68 <lookup_variable@@Base>
  433698:	str	x0, [sp, #120]
  43369c:	ldr	x0, [sp, #120]
  4336a0:	cmp	x0, #0x0
  4336a4:	b.ne	433924 <do_variable_definition@@Base+0x39c>  // b.any
  4336a8:	mov	w0, #0x1                   	// #1
  4336ac:	str	w0, [sp, #112]
  4336b0:	mov	w0, #0x2                   	// #2
  4336b4:	str	w0, [sp, #32]
  4336b8:	ldr	x0, [sp, #40]
  4336bc:	str	x0, [sp, #136]
  4336c0:	b	433884 <do_variable_definition@@Base+0x2fc>
  4336c4:	ldr	w0, [sp, #28]
  4336c8:	cmp	w0, #0x0
  4336cc:	b.eq	433730 <do_variable_definition@@Base+0x1a8>  // b.none
  4336d0:	mov	w0, #0x1                   	// #1
  4336d4:	str	w0, [sp, #116]
  4336d8:	ldr	x0, [sp, #48]
  4336dc:	bl	4066f0 <strlen@plt>
  4336e0:	mov	x1, x0
  4336e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4336e8:	add	x0, x0, #0x3b8
  4336ec:	ldr	x0, [x0]
  4336f0:	ldr	x0, [x0, #8]
  4336f4:	mov	x2, x0
  4336f8:	ldr	x0, [sp, #48]
  4336fc:	bl	432050 <lookup_variable_in_set@@Base>
  433700:	str	x0, [sp, #120]
  433704:	ldr	x0, [sp, #120]
  433708:	cmp	x0, #0x0
  43370c:	b.eq	433748 <do_variable_definition@@Base+0x1c0>  // b.none
  433710:	ldr	x0, [sp, #120]
  433714:	ldrb	w0, [x0, #44]
  433718:	and	w0, w0, #0x2
  43371c:	and	w0, w0, #0xff
  433720:	cmp	w0, #0x0
  433724:	b.ne	433748 <do_variable_definition@@Base+0x1c0>  // b.any
  433728:	str	wzr, [sp, #116]
  43372c:	b	433748 <do_variable_definition@@Base+0x1c0>
  433730:	ldr	x0, [sp, #48]
  433734:	bl	4066f0 <strlen@plt>
  433738:	mov	x1, x0
  43373c:	ldr	x0, [sp, #48]
  433740:	bl	431f68 <lookup_variable@@Base>
  433744:	str	x0, [sp, #120]
  433748:	ldr	x0, [sp, #120]
  43374c:	cmp	x0, #0x0
  433750:	b.ne	433768 <do_variable_definition@@Base+0x1e0>  // b.any
  433754:	ldr	x0, [sp, #40]
  433758:	str	x0, [sp, #136]
  43375c:	mov	w0, #0x2                   	// #2
  433760:	str	w0, [sp, #32]
  433764:	b	433880 <do_variable_definition@@Base+0x2f8>
  433768:	str	xzr, [sp, #88]
  43376c:	ldr	x0, [sp, #40]
  433770:	str	x0, [sp, #96]
  433774:	ldr	x0, [sp, #120]
  433778:	ldrb	w0, [x0, #44]
  43377c:	and	w0, w0, #0x1
  433780:	and	w0, w0, #0xff
  433784:	cmp	w0, #0x0
  433788:	b.eq	433798 <do_variable_definition@@Base+0x210>  // b.none
  43378c:	mov	w0, #0x2                   	// #2
  433790:	str	w0, [sp, #32]
  433794:	b	4337bc <do_variable_definition@@Base+0x234>
  433798:	ldr	w0, [sp, #32]
  43379c:	cmp	w0, #0x6
  4337a0:	b.eq	4337bc <do_variable_definition@@Base+0x234>  // b.none
  4337a4:	mov	x1, #0x0                   	// #0
  4337a8:	ldr	x0, [sp, #96]
  4337ac:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  4337b0:	str	x0, [sp, #88]
  4337b4:	ldr	x0, [sp, #88]
  4337b8:	str	x0, [sp, #96]
  4337bc:	ldr	x0, [sp, #96]
  4337c0:	bl	4066f0 <strlen@plt>
  4337c4:	str	x0, [sp, #72]
  4337c8:	ldr	x0, [sp, #72]
  4337cc:	cmp	x0, #0x0
  4337d0:	b.ne	4337e0 <do_variable_definition@@Base+0x258>  // b.any
  4337d4:	ldr	x0, [sp, #88]
  4337d8:	str	x0, [sp, #128]
  4337dc:	b	433928 <do_variable_definition@@Base+0x3a0>
  4337e0:	ldr	x0, [sp, #120]
  4337e4:	ldr	x0, [x0, #8]
  4337e8:	bl	4066f0 <strlen@plt>
  4337ec:	str	x0, [sp, #104]
  4337f0:	ldr	x1, [sp, #104]
  4337f4:	ldr	x0, [sp, #72]
  4337f8:	add	x0, x1, x0
  4337fc:	add	x0, x0, #0x2
  433800:	bl	42268c <xmalloc@@Base>
  433804:	str	x0, [sp, #128]
  433808:	ldr	x0, [sp, #128]
  43380c:	str	x0, [sp, #136]
  433810:	ldr	x0, [sp, #104]
  433814:	cmp	x0, #0x0
  433818:	b.eq	433854 <do_variable_definition@@Base+0x2cc>  // b.none
  43381c:	ldr	x0, [sp, #120]
  433820:	ldr	x0, [x0, #8]
  433824:	ldr	x2, [sp, #104]
  433828:	mov	x1, x0
  43382c:	ldr	x0, [sp, #128]
  433830:	bl	4066b0 <memcpy@plt>
  433834:	ldr	x1, [sp, #128]
  433838:	ldr	x0, [sp, #104]
  43383c:	add	x0, x1, x0
  433840:	mov	w1, #0x20                  	// #32
  433844:	strb	w1, [x0]
  433848:	ldr	x0, [sp, #104]
  43384c:	add	x0, x0, #0x1
  433850:	str	x0, [sp, #104]
  433854:	ldr	x1, [sp, #128]
  433858:	ldr	x0, [sp, #104]
  43385c:	add	x3, x1, x0
  433860:	ldr	x0, [sp, #72]
  433864:	add	x0, x0, #0x1
  433868:	mov	x2, x0
  43386c:	ldr	x1, [sp, #96]
  433870:	mov	x0, x3
  433874:	bl	4066b0 <memcpy@plt>
  433878:	ldr	x0, [sp, #88]
  43387c:	bl	406c00 <free@plt>
  433880:	nop
  433884:	ldr	x0, [sp, #48]
  433888:	bl	4066f0 <strlen@plt>
  43388c:	mov	x1, x0
  433890:	ldr	w0, [sp, #32]
  433894:	cmp	w0, #0x2
  433898:	cset	w0, eq  // eq = none
  43389c:	and	w0, w0, #0xff
  4338a0:	mov	w2, w0
  4338a4:	ldr	w0, [sp, #28]
  4338a8:	cmp	w0, #0x0
  4338ac:	b.eq	4338c4 <do_variable_definition@@Base+0x33c>  // b.none
  4338b0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4338b4:	add	x0, x0, #0x3b8
  4338b8:	ldr	x0, [x0]
  4338bc:	ldr	x0, [x0, #8]
  4338c0:	b	4338c8 <do_variable_definition@@Base+0x340>
  4338c4:	mov	x0, #0x0                   	// #0
  4338c8:	ldr	x6, [sp, #56]
  4338cc:	mov	x5, x0
  4338d0:	mov	w4, w2
  4338d4:	ldr	w3, [sp, #36]
  4338d8:	ldr	x2, [sp, #136]
  4338dc:	ldr	x0, [sp, #48]
  4338e0:	bl	4316d8 <define_variable_in_set@@Base>
  4338e4:	str	x0, [sp, #120]
  4338e8:	ldr	w0, [sp, #116]
  4338ec:	and	w0, w0, #0x1
  4338f0:	and	w2, w0, #0xff
  4338f4:	ldr	x1, [sp, #120]
  4338f8:	ldrb	w0, [x1, #44]
  4338fc:	bfi	w0, w2, #1, #1
  433900:	strb	w0, [x1, #44]
  433904:	ldr	w0, [sp, #112]
  433908:	and	w0, w0, #0x1
  43390c:	and	w2, w0, #0xff
  433910:	ldr	x1, [sp, #120]
  433914:	ldrb	w0, [x1, #44]
  433918:	bfi	w0, w2, #2, #1
  43391c:	strb	w0, [x1, #44]
  433920:	b	433928 <do_variable_definition@@Base+0x3a0>
  433924:	nop
  433928:	ldr	x0, [sp, #128]
  43392c:	bl	406c00 <free@plt>
  433930:	ldr	x0, [sp, #120]
  433934:	ldrb	w0, [x0, #44]
  433938:	and	w0, w0, #0x10
  43393c:	and	w0, w0, #0xff
  433940:	cmp	w0, #0x0
  433944:	b.eq	433954 <do_variable_definition@@Base+0x3cc>  // b.none
  433948:	ldr	x0, [sp, #120]
  43394c:	bl	433450 <target_environment@@Base+0x59c>
  433950:	b	433958 <do_variable_definition@@Base+0x3d0>
  433954:	ldr	x0, [sp, #120]
  433958:	ldp	x29, x30, [sp], #144
  43395c:	ret

0000000000433960 <parse_variable_definition@@Base>:
  433960:	stp	x29, x30, [sp, #-64]!
  433964:	mov	x29, sp
  433968:	str	x0, [sp, #24]
  43396c:	str	x1, [sp, #16]
  433970:	str	wzr, [sp, #60]
  433974:	str	xzr, [sp, #48]
  433978:	b	433988 <parse_variable_definition@@Base+0x28>
  43397c:	ldr	x0, [sp, #24]
  433980:	add	x0, x0, #0x1
  433984:	str	x0, [sp, #24]
  433988:	ldr	x0, [sp, #24]
  43398c:	ldrb	w0, [x0]
  433990:	mov	w1, w0
  433994:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  433998:	add	x0, x0, #0x728
  43399c:	sxtw	x1, w1
  4339a0:	ldrh	w0, [x0, x1, lsl #1]
  4339a4:	and	w0, w0, #0x6
  4339a8:	cmp	w0, #0x0
  4339ac:	b.ne	43397c <parse_variable_definition@@Base+0x1c>  // b.any
  4339b0:	ldr	x0, [sp, #16]
  4339b4:	ldr	x1, [sp, #24]
  4339b8:	str	x1, [x0]
  4339bc:	ldr	x0, [sp, #16]
  4339c0:	str	wzr, [x0, #40]
  4339c4:	ldr	x0, [sp, #24]
  4339c8:	add	x1, x0, #0x1
  4339cc:	str	x1, [sp, #24]
  4339d0:	ldrb	w0, [x0]
  4339d4:	str	w0, [sp, #44]
  4339d8:	ldr	w0, [sp, #44]
  4339dc:	and	w0, w0, #0xff
  4339e0:	mov	w1, w0
  4339e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4339e8:	add	x0, x0, #0x728
  4339ec:	sxtw	x1, w1
  4339f0:	ldrh	w0, [x0, x1, lsl #1]
  4339f4:	mov	w1, w0
  4339f8:	mov	w0, #0x9                   	// #9
  4339fc:	and	w0, w1, w0
  433a00:	cmp	w0, #0x0
  433a04:	b.eq	433a10 <parse_variable_definition@@Base+0xb0>  // b.none
  433a08:	mov	x0, #0x0                   	// #0
  433a0c:	b	433da8 <parse_variable_definition@@Base+0x448>
  433a10:	ldr	w0, [sp, #44]
  433a14:	cmp	w0, #0x24
  433a18:	b.ne	433b04 <parse_variable_definition@@Base+0x1a4>  // b.any
  433a1c:	ldr	x0, [sp, #24]
  433a20:	add	x1, x0, #0x1
  433a24:	str	x1, [sp, #24]
  433a28:	ldrb	w0, [x0]
  433a2c:	str	w0, [sp, #44]
  433a30:	ldr	w0, [sp, #44]
  433a34:	cmp	w0, #0x28
  433a38:	b.ne	433a48 <parse_variable_definition@@Base+0xe8>  // b.any
  433a3c:	mov	w0, #0x29                  	// #41
  433a40:	strb	w0, [sp, #43]
  433a44:	b	433a74 <parse_variable_definition@@Base+0x114>
  433a48:	ldr	w0, [sp, #44]
  433a4c:	cmp	w0, #0x7b
  433a50:	b.ne	433a60 <parse_variable_definition@@Base+0x100>  // b.any
  433a54:	mov	w0, #0x7d                  	// #125
  433a58:	strb	w0, [sp, #43]
  433a5c:	b	433a74 <parse_variable_definition@@Base+0x114>
  433a60:	ldr	w0, [sp, #44]
  433a64:	cmp	w0, #0x0
  433a68:	b.ne	433d60 <parse_variable_definition@@Base+0x400>  // b.any
  433a6c:	mov	x0, #0x0                   	// #0
  433a70:	b	433da8 <parse_variable_definition@@Base+0x448>
  433a74:	mov	w0, #0x1                   	// #1
  433a78:	str	w0, [sp, #36]
  433a7c:	b	433af0 <parse_variable_definition@@Base+0x190>
  433a80:	ldr	x0, [sp, #24]
  433a84:	ldrb	w0, [x0]
  433a88:	ldrb	w1, [sp, #43]
  433a8c:	cmp	w1, w0
  433a90:	b.ne	433ac0 <parse_variable_definition@@Base+0x160>  // b.any
  433a94:	ldr	w0, [sp, #36]
  433a98:	sub	w0, w0, #0x1
  433a9c:	str	w0, [sp, #36]
  433aa0:	ldr	w0, [sp, #36]
  433aa4:	cmp	w0, #0x0
  433aa8:	b.ne	433ac0 <parse_variable_definition@@Base+0x160>  // b.any
  433aac:	ldr	x0, [sp, #24]
  433ab0:	add	x0, x0, #0x1
  433ab4:	str	x0, [sp, #24]
  433ab8:	nop
  433abc:	b	433d6c <parse_variable_definition@@Base+0x40c>
  433ac0:	ldr	x0, [sp, #24]
  433ac4:	ldrb	w0, [x0]
  433ac8:	mov	w1, w0
  433acc:	ldr	w0, [sp, #44]
  433ad0:	cmp	w0, w1
  433ad4:	b.ne	433ae4 <parse_variable_definition@@Base+0x184>  // b.any
  433ad8:	ldr	w0, [sp, #36]
  433adc:	add	w0, w0, #0x1
  433ae0:	str	w0, [sp, #36]
  433ae4:	ldr	x0, [sp, #24]
  433ae8:	add	x0, x0, #0x1
  433aec:	str	x0, [sp, #24]
  433af0:	ldr	x0, [sp, #24]
  433af4:	ldrb	w0, [x0]
  433af8:	cmp	w0, #0x0
  433afc:	b.ne	433a80 <parse_variable_definition@@Base+0x120>  // b.any
  433b00:	b	433d6c <parse_variable_definition@@Base+0x40c>
  433b04:	ldr	w0, [sp, #44]
  433b08:	and	w0, w0, #0xff
  433b0c:	mov	w1, w0
  433b10:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  433b14:	add	x0, x0, #0x728
  433b18:	sxtw	x1, w1
  433b1c:	ldrh	w0, [x0, x1, lsl #1]
  433b20:	and	w0, w0, #0x2
  433b24:	cmp	w0, #0x0
  433b28:	b.eq	433ba4 <parse_variable_definition@@Base+0x244>  // b.none
  433b2c:	mov	w0, #0x1                   	// #1
  433b30:	str	w0, [sp, #60]
  433b34:	ldr	x0, [sp, #24]
  433b38:	sub	x0, x0, #0x1
  433b3c:	str	x0, [sp, #48]
  433b40:	b	433b50 <parse_variable_definition@@Base+0x1f0>
  433b44:	ldr	x0, [sp, #24]
  433b48:	add	x0, x0, #0x1
  433b4c:	str	x0, [sp, #24]
  433b50:	ldr	x0, [sp, #24]
  433b54:	ldrb	w0, [x0]
  433b58:	mov	w1, w0
  433b5c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  433b60:	add	x0, x0, #0x728
  433b64:	sxtw	x1, w1
  433b68:	ldrh	w0, [x0, x1, lsl #1]
  433b6c:	and	w0, w0, #0x6
  433b70:	cmp	w0, #0x0
  433b74:	b.ne	433b44 <parse_variable_definition@@Base+0x1e4>  // b.any
  433b78:	ldr	x0, [sp, #24]
  433b7c:	ldrb	w0, [x0]
  433b80:	str	w0, [sp, #44]
  433b84:	ldr	w0, [sp, #44]
  433b88:	cmp	w0, #0x0
  433b8c:	b.ne	433b98 <parse_variable_definition@@Base+0x238>  // b.any
  433b90:	mov	x0, #0x0                   	// #0
  433b94:	b	433da8 <parse_variable_definition@@Base+0x448>
  433b98:	ldr	x0, [sp, #24]
  433b9c:	add	x0, x0, #0x1
  433ba0:	str	x0, [sp, #24]
  433ba4:	ldr	w0, [sp, #44]
  433ba8:	cmp	w0, #0x3d
  433bac:	b.ne	433be0 <parse_variable_definition@@Base+0x280>  // b.any
  433bb0:	ldr	x1, [sp, #16]
  433bb4:	ldrh	w0, [x1, #46]
  433bb8:	mov	w2, #0x2                   	// #2
  433bbc:	bfi	w0, w2, #7, #3
  433bc0:	strh	w0, [x1, #46]
  433bc4:	ldr	x0, [sp, #48]
  433bc8:	cmp	x0, #0x0
  433bcc:	b.ne	433d70 <parse_variable_definition@@Base+0x410>  // b.any
  433bd0:	ldr	x0, [sp, #24]
  433bd4:	sub	x0, x0, #0x1
  433bd8:	str	x0, [sp, #48]
  433bdc:	b	433d70 <parse_variable_definition@@Base+0x410>
  433be0:	ldr	x0, [sp, #24]
  433be4:	ldrb	w0, [x0]
  433be8:	cmp	w0, #0x3d
  433bec:	b.ne	433cd8 <parse_variable_definition@@Base+0x378>  // b.any
  433bf0:	ldr	w0, [sp, #44]
  433bf4:	cmp	w0, #0x3f
  433bf8:	b.eq	433c6c <parse_variable_definition@@Base+0x30c>  // b.none
  433bfc:	ldr	w0, [sp, #44]
  433c00:	cmp	w0, #0x3f
  433c04:	b.gt	433c9c <parse_variable_definition@@Base+0x33c>
  433c08:	ldr	w0, [sp, #44]
  433c0c:	cmp	w0, #0x3a
  433c10:	b.eq	433c3c <parse_variable_definition@@Base+0x2dc>  // b.none
  433c14:	ldr	w0, [sp, #44]
  433c18:	cmp	w0, #0x3a
  433c1c:	b.gt	433c9c <parse_variable_definition@@Base+0x33c>
  433c20:	ldr	w0, [sp, #44]
  433c24:	cmp	w0, #0x21
  433c28:	b.eq	433c84 <parse_variable_definition@@Base+0x324>  // b.none
  433c2c:	ldr	w0, [sp, #44]
  433c30:	cmp	w0, #0x2b
  433c34:	b.eq	433c54 <parse_variable_definition@@Base+0x2f4>  // b.none
  433c38:	b	433c9c <parse_variable_definition@@Base+0x33c>
  433c3c:	ldr	x1, [sp, #16]
  433c40:	ldrh	w0, [x1, #46]
  433c44:	mov	w2, #0x1                   	// #1
  433c48:	bfi	w0, w2, #7, #3
  433c4c:	strh	w0, [x1, #46]
  433c50:	b	433cb0 <parse_variable_definition@@Base+0x350>
  433c54:	ldr	x1, [sp, #16]
  433c58:	ldrh	w0, [x1, #46]
  433c5c:	mov	w2, #0x3                   	// #3
  433c60:	bfi	w0, w2, #7, #3
  433c64:	strh	w0, [x1, #46]
  433c68:	b	433cb0 <parse_variable_definition@@Base+0x350>
  433c6c:	ldr	x1, [sp, #16]
  433c70:	ldrh	w0, [x1, #46]
  433c74:	mov	w2, #0x4                   	// #4
  433c78:	bfi	w0, w2, #7, #3
  433c7c:	strh	w0, [x1, #46]
  433c80:	b	433cb0 <parse_variable_definition@@Base+0x350>
  433c84:	ldr	x1, [sp, #16]
  433c88:	ldrh	w0, [x1, #46]
  433c8c:	mov	w2, #0x5                   	// #5
  433c90:	bfi	w0, w2, #7, #3
  433c94:	strh	w0, [x1, #46]
  433c98:	b	433cb0 <parse_variable_definition@@Base+0x350>
  433c9c:	ldr	w0, [sp, #60]
  433ca0:	cmp	w0, #0x0
  433ca4:	b.eq	433d68 <parse_variable_definition@@Base+0x408>  // b.none
  433ca8:	mov	x0, #0x0                   	// #0
  433cac:	b	433da8 <parse_variable_definition@@Base+0x448>
  433cb0:	ldr	x0, [sp, #48]
  433cb4:	cmp	x0, #0x0
  433cb8:	b.ne	433cc8 <parse_variable_definition@@Base+0x368>  // b.any
  433cbc:	ldr	x0, [sp, #24]
  433cc0:	sub	x0, x0, #0x1
  433cc4:	str	x0, [sp, #48]
  433cc8:	ldr	x0, [sp, #24]
  433ccc:	add	x0, x0, #0x1
  433cd0:	str	x0, [sp, #24]
  433cd4:	b	433d74 <parse_variable_definition@@Base+0x414>
  433cd8:	ldr	w0, [sp, #44]
  433cdc:	cmp	w0, #0x3a
  433ce0:	b.ne	433d4c <parse_variable_definition@@Base+0x3ec>  // b.any
  433ce4:	ldr	x0, [sp, #24]
  433ce8:	ldrb	w0, [x0]
  433cec:	cmp	w0, #0x3a
  433cf0:	b.ne	433d08 <parse_variable_definition@@Base+0x3a8>  // b.any
  433cf4:	ldr	x0, [sp, #24]
  433cf8:	add	x0, x0, #0x1
  433cfc:	ldrb	w0, [x0]
  433d00:	cmp	w0, #0x3d
  433d04:	b.eq	433d10 <parse_variable_definition@@Base+0x3b0>  // b.none
  433d08:	mov	x0, #0x0                   	// #0
  433d0c:	b	433da8 <parse_variable_definition@@Base+0x448>
  433d10:	ldr	x1, [sp, #16]
  433d14:	ldrh	w0, [x1, #46]
  433d18:	mov	w2, #0x1                   	// #1
  433d1c:	bfi	w0, w2, #7, #3
  433d20:	strh	w0, [x1, #46]
  433d24:	ldr	x0, [sp, #48]
  433d28:	cmp	x0, #0x0
  433d2c:	b.ne	433d3c <parse_variable_definition@@Base+0x3dc>  // b.any
  433d30:	ldr	x0, [sp, #24]
  433d34:	sub	x0, x0, #0x1
  433d38:	str	x0, [sp, #48]
  433d3c:	ldr	x0, [sp, #24]
  433d40:	add	x0, x0, #0x2
  433d44:	str	x0, [sp, #24]
  433d48:	b	433d74 <parse_variable_definition@@Base+0x414>
  433d4c:	ldr	w0, [sp, #60]
  433d50:	cmp	w0, #0x0
  433d54:	b.eq	4339c4 <parse_variable_definition@@Base+0x64>  // b.none
  433d58:	mov	x0, #0x0                   	// #0
  433d5c:	b	433da8 <parse_variable_definition@@Base+0x448>
  433d60:	nop
  433d64:	b	4339c4 <parse_variable_definition@@Base+0x64>
  433d68:	nop
  433d6c:	b	4339c4 <parse_variable_definition@@Base+0x64>
  433d70:	nop
  433d74:	ldr	x0, [sp, #16]
  433d78:	ldr	x0, [x0]
  433d7c:	ldr	x1, [sp, #48]
  433d80:	sub	x0, x1, x0
  433d84:	mov	w1, w0
  433d88:	ldr	x0, [sp, #16]
  433d8c:	str	w1, [x0, #40]
  433d90:	ldr	x0, [sp, #24]
  433d94:	bl	4228a0 <next_token@@Base>
  433d98:	mov	x1, x0
  433d9c:	ldr	x0, [sp, #16]
  433da0:	str	x1, [x0, #8]
  433da4:	ldr	x0, [sp, #24]
  433da8:	ldp	x29, x30, [sp], #64
  433dac:	ret

0000000000433db0 <assign_variable_definition@@Base>:
  433db0:	stp	x29, x30, [sp, #-64]!
  433db4:	mov	x29, sp
  433db8:	str	x19, [sp, #16]
  433dbc:	str	x0, [x29, #40]
  433dc0:	str	x1, [x29, #32]
  433dc4:	ldr	x1, [x29, #40]
  433dc8:	ldr	x0, [x29, #32]
  433dcc:	bl	433960 <parse_variable_definition@@Base>
  433dd0:	cmp	x0, #0x0
  433dd4:	b.ne	433de0 <assign_variable_definition@@Base+0x30>  // b.any
  433dd8:	mov	x0, #0x0                   	// #0
  433ddc:	b	433ea0 <assign_variable_definition@@Base+0xf0>
  433de0:	ldr	x0, [x29, #40]
  433de4:	ldr	w0, [x0, #40]
  433de8:	add	w0, w0, #0x1
  433dec:	mov	w0, w0
  433df0:	add	x0, x0, #0xf
  433df4:	lsr	x0, x0, #4
  433df8:	lsl	x0, x0, #4
  433dfc:	sub	sp, sp, x0
  433e00:	mov	x0, sp
  433e04:	add	x0, x0, #0xf
  433e08:	lsr	x0, x0, #4
  433e0c:	lsl	x0, x0, #4
  433e10:	str	x0, [x29, #56]
  433e14:	ldr	x0, [x29, #40]
  433e18:	ldr	x1, [x0]
  433e1c:	ldr	x0, [x29, #40]
  433e20:	ldr	w0, [x0, #40]
  433e24:	mov	w0, w0
  433e28:	mov	x2, x0
  433e2c:	ldr	x0, [x29, #56]
  433e30:	bl	4066b0 <memcpy@plt>
  433e34:	ldr	x0, [x29, #40]
  433e38:	ldr	w0, [x0, #40]
  433e3c:	mov	w0, w0
  433e40:	ldr	x1, [x29, #56]
  433e44:	add	x0, x1, x0
  433e48:	strb	wzr, [x0]
  433e4c:	mov	x1, #0x0                   	// #0
  433e50:	ldr	x0, [x29, #56]
  433e54:	bl	40c3f8 <allocated_variable_expand_for_file@@Base>
  433e58:	mov	x1, x0
  433e5c:	ldr	x0, [x29, #40]
  433e60:	str	x1, [x0]
  433e64:	ldr	x0, [x29, #40]
  433e68:	ldr	x0, [x0]
  433e6c:	ldrb	w0, [x0]
  433e70:	cmp	w0, #0x0
  433e74:	b.ne	433e9c <assign_variable_definition@@Base+0xec>  // b.any
  433e78:	ldr	x0, [x29, #40]
  433e7c:	add	x19, x0, #0x10
  433e80:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433e84:	add	x0, x0, #0x78
  433e88:	bl	406e40 <gettext@plt>
  433e8c:	mov	x2, x0
  433e90:	mov	x1, #0x0                   	// #0
  433e94:	mov	x0, x19
  433e98:	bl	424098 <fatal@@Base>
  433e9c:	ldr	x0, [x29, #40]
  433ea0:	mov	sp, x29
  433ea4:	ldr	x19, [sp, #16]
  433ea8:	ldp	x29, x30, [sp], #64
  433eac:	ret

0000000000433eb0 <try_variable_definition@@Base>:
  433eb0:	stp	x29, x30, [sp, #-112]!
  433eb4:	mov	x29, sp
  433eb8:	str	x0, [sp, #40]
  433ebc:	str	x1, [sp, #32]
  433ec0:	str	w2, [sp, #28]
  433ec4:	str	w3, [sp, #24]
  433ec8:	ldr	x0, [sp, #40]
  433ecc:	cmp	x0, #0x0
  433ed0:	b.eq	433ef4 <try_variable_definition@@Base+0x44>  // b.none
  433ed4:	ldr	x0, [sp, #40]
  433ed8:	add	x2, sp, #0x48
  433edc:	mov	x3, x0
  433ee0:	ldp	x0, x1, [x3]
  433ee4:	stp	x0, x1, [x2]
  433ee8:	ldr	x0, [x3, #16]
  433eec:	str	x0, [x2, #16]
  433ef0:	b	433ef8 <try_variable_definition@@Base+0x48>
  433ef4:	str	xzr, [sp, #72]
  433ef8:	add	x0, sp, #0x38
  433efc:	ldr	x1, [sp, #32]
  433f00:	bl	433db0 <assign_variable_definition@@Base>
  433f04:	cmp	x0, #0x0
  433f08:	b.ne	433f14 <try_variable_definition@@Base+0x64>  // b.any
  433f0c:	mov	x0, #0x0                   	// #0
  433f10:	b	433f4c <try_variable_definition@@Base+0x9c>
  433f14:	ldr	x1, [sp, #56]
  433f18:	ldr	x2, [sp, #64]
  433f1c:	ldrh	w0, [sp, #102]
  433f20:	ubfx	x0, x0, #7, #3
  433f24:	and	w0, w0, #0xff
  433f28:	ldr	w5, [sp, #24]
  433f2c:	mov	w4, w0
  433f30:	ldr	w3, [sp, #28]
  433f34:	ldr	x0, [sp, #40]
  433f38:	bl	433588 <do_variable_definition@@Base>
  433f3c:	str	x0, [sp, #104]
  433f40:	ldr	x0, [sp, #56]
  433f44:	bl	406c00 <free@plt>
  433f48:	ldr	x0, [sp, #104]
  433f4c:	ldp	x29, x30, [sp], #112
  433f50:	ret
  433f54:	stp	x29, x30, [sp, #-64]!
  433f58:	mov	x29, sp
  433f5c:	str	x0, [sp, #24]
  433f60:	str	x1, [sp, #16]
  433f64:	ldr	x0, [sp, #24]
  433f68:	str	x0, [sp, #40]
  433f6c:	ldr	x0, [sp, #16]
  433f70:	str	x0, [sp, #32]
  433f74:	ldr	x0, [sp, #40]
  433f78:	ldrb	w0, [x0, #47]
  433f7c:	ubfx	x0, x0, #2, #3
  433f80:	and	w0, w0, #0xff
  433f84:	cmp	w0, #0x6
  433f88:	b.eq	433fe8 <try_variable_definition@@Base+0x138>  // b.none
  433f8c:	cmp	w0, #0x6
  433f90:	b.gt	434074 <try_variable_definition@@Base+0x1c4>
  433f94:	cmp	w0, #0x5
  433f98:	b.eq	434060 <try_variable_definition@@Base+0x1b0>  // b.none
  433f9c:	cmp	w0, #0x5
  433fa0:	b.gt	434074 <try_variable_definition@@Base+0x1c4>
  433fa4:	cmp	w0, #0x4
  433fa8:	b.eq	43404c <try_variable_definition@@Base+0x19c>  // b.none
  433fac:	cmp	w0, #0x4
  433fb0:	b.gt	434074 <try_variable_definition@@Base+0x1c4>
  433fb4:	cmp	w0, #0x3
  433fb8:	b.eq	434038 <try_variable_definition@@Base+0x188>  // b.none
  433fbc:	cmp	w0, #0x3
  433fc0:	b.gt	434074 <try_variable_definition@@Base+0x1c4>
  433fc4:	cmp	w0, #0x2
  433fc8:	b.eq	434024 <try_variable_definition@@Base+0x174>  // b.none
  433fcc:	cmp	w0, #0x2
  433fd0:	b.gt	434074 <try_variable_definition@@Base+0x1c4>
  433fd4:	cmp	w0, #0x0
  433fd8:	b.eq	433ffc <try_variable_definition@@Base+0x14c>  // b.none
  433fdc:	cmp	w0, #0x1
  433fe0:	b.eq	434010 <try_variable_definition@@Base+0x160>  // b.none
  433fe4:	b	434074 <try_variable_definition@@Base+0x1c4>
  433fe8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  433fec:	add	x0, x0, #0x90
  433ff0:	bl	406e40 <gettext@plt>
  433ff4:	str	x0, [sp, #56]
  433ff8:	b	434078 <try_variable_definition@@Base+0x1c8>
  433ffc:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434000:	add	x0, x0, #0xa0
  434004:	bl	406e40 <gettext@plt>
  434008:	str	x0, [sp, #56]
  43400c:	b	434078 <try_variable_definition@@Base+0x1c8>
  434010:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434014:	add	x0, x0, #0xa8
  434018:	bl	406e40 <gettext@plt>
  43401c:	str	x0, [sp, #56]
  434020:	b	434078 <try_variable_definition@@Base+0x1c8>
  434024:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434028:	add	x0, x0, #0xb8
  43402c:	bl	406e40 <gettext@plt>
  434030:	str	x0, [sp, #56]
  434034:	b	434078 <try_variable_definition@@Base+0x1c8>
  434038:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43403c:	add	x0, x0, #0xc8
  434040:	bl	406e40 <gettext@plt>
  434044:	str	x0, [sp, #56]
  434048:	b	434078 <try_variable_definition@@Base+0x1c8>
  43404c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434050:	add	x0, x0, #0xe0
  434054:	bl	406e40 <gettext@plt>
  434058:	str	x0, [sp, #56]
  43405c:	b	434078 <try_variable_definition@@Base+0x1c8>
  434060:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434064:	add	x0, x0, #0xf0
  434068:	bl	406e40 <gettext@plt>
  43406c:	str	x0, [sp, #56]
  434070:	b	434078 <try_variable_definition@@Base+0x1c8>
  434074:	bl	406b30 <abort@plt>
  434078:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43407c:	add	x0, x0, #0x400
  434080:	ldr	x0, [x0]
  434084:	mov	x3, x0
  434088:	mov	x2, #0x2                   	// #2
  43408c:	mov	x1, #0x1                   	// #1
  434090:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434094:	add	x0, x0, #0x108
  434098:	bl	406c50 <fwrite@plt>
  43409c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4340a0:	add	x0, x0, #0x400
  4340a4:	ldr	x0, [x0]
  4340a8:	mov	x1, x0
  4340ac:	ldr	x0, [sp, #56]
  4340b0:	bl	406700 <fputs@plt>
  4340b4:	ldr	x0, [sp, #40]
  4340b8:	ldrb	w0, [x0, #44]
  4340bc:	and	w0, w0, #0xffffff80
  4340c0:	and	w0, w0, #0xff
  4340c4:	cmp	w0, #0x0
  4340c8:	b.eq	4340f0 <try_variable_definition@@Base+0x240>  // b.none
  4340cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4340d0:	add	x0, x0, #0x400
  4340d4:	ldr	x0, [x0]
  4340d8:	mov	x3, x0
  4340dc:	mov	x2, #0x8                   	// #8
  4340e0:	mov	x1, #0x1                   	// #1
  4340e4:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4340e8:	add	x0, x0, #0x110
  4340ec:	bl	406c50 <fwrite@plt>
  4340f0:	ldr	x0, [sp, #40]
  4340f4:	ldr	x0, [x0, #16]
  4340f8:	cmp	x0, #0x0
  4340fc:	b.eq	43413c <try_variable_definition@@Base+0x28c>  // b.none
  434100:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434104:	add	x0, x0, #0x120
  434108:	bl	406e40 <gettext@plt>
  43410c:	mov	x4, x0
  434110:	ldr	x0, [sp, #40]
  434114:	ldr	x3, [x0, #16]
  434118:	ldr	x0, [sp, #40]
  43411c:	ldr	x1, [x0, #24]
  434120:	ldr	x0, [sp, #40]
  434124:	ldr	x0, [x0, #32]
  434128:	add	x0, x1, x0
  43412c:	mov	x2, x0
  434130:	mov	x1, x3
  434134:	mov	x0, x4
  434138:	bl	406dc0 <printf@plt>
  43413c:	mov	w0, #0xa                   	// #10
  434140:	bl	406e00 <putchar@plt>
  434144:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434148:	add	x0, x0, #0x400
  43414c:	ldr	x0, [x0]
  434150:	mov	x1, x0
  434154:	ldr	x0, [sp, #32]
  434158:	bl	406700 <fputs@plt>
  43415c:	ldr	x0, [sp, #40]
  434160:	ldrb	w0, [x0, #44]
  434164:	and	w0, w0, #0x1
  434168:	and	w0, w0, #0xff
  43416c:	cmp	w0, #0x0
  434170:	b.eq	4341b0 <try_variable_definition@@Base+0x300>  // b.none
  434174:	ldr	x0, [sp, #40]
  434178:	ldr	x0, [x0, #8]
  43417c:	mov	w1, #0xa                   	// #10
  434180:	bl	406c20 <strchr@plt>
  434184:	cmp	x0, #0x0
  434188:	b.eq	4341b0 <try_variable_definition@@Base+0x300>  // b.none
  43418c:	ldr	x0, [sp, #40]
  434190:	ldr	x1, [x0]
  434194:	ldr	x0, [sp, #40]
  434198:	ldr	x0, [x0, #8]
  43419c:	mov	x2, x0
  4341a0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4341a4:	add	x0, x0, #0x138
  4341a8:	bl	406dc0 <printf@plt>
  4341ac:	b	434300 <try_variable_definition@@Base+0x450>
  4341b0:	ldr	x0, [sp, #40]
  4341b4:	ldr	x1, [x0]
  4341b8:	ldr	x0, [sp, #40]
  4341bc:	ldrb	w0, [x0, #44]
  4341c0:	and	w0, w0, #0x1
  4341c4:	and	w0, w0, #0xff
  4341c8:	cmp	w0, #0x0
  4341cc:	b.eq	434200 <try_variable_definition@@Base+0x350>  // b.none
  4341d0:	ldr	x0, [sp, #40]
  4341d4:	ldrb	w0, [x0, #44]
  4341d8:	and	w0, w0, #0x2
  4341dc:	and	w0, w0, #0xff
  4341e0:	cmp	w0, #0x0
  4341e4:	b.eq	4341f4 <try_variable_definition@@Base+0x344>  // b.none
  4341e8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4341ec:	add	x0, x0, #0x150
  4341f0:	b	434208 <try_variable_definition@@Base+0x358>
  4341f4:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  4341f8:	add	x0, x0, #0xe40
  4341fc:	b	434208 <try_variable_definition@@Base+0x358>
  434200:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434204:	add	x0, x0, #0x158
  434208:	mov	x2, x0
  43420c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434210:	add	x0, x0, #0x160
  434214:	bl	406dc0 <printf@plt>
  434218:	ldr	x0, [sp, #40]
  43421c:	ldr	x0, [x0, #8]
  434220:	bl	4228a0 <next_token@@Base>
  434224:	str	x0, [sp, #48]
  434228:	ldr	x0, [sp, #40]
  43422c:	ldr	x0, [x0, #8]
  434230:	ldr	x1, [sp, #48]
  434234:	cmp	x1, x0
  434238:	b.eq	434268 <try_variable_definition@@Base+0x3b8>  // b.none
  43423c:	ldr	x0, [sp, #48]
  434240:	ldrb	w0, [x0]
  434244:	cmp	w0, #0x0
  434248:	b.ne	434268 <try_variable_definition@@Base+0x3b8>  // b.any
  43424c:	ldr	x0, [sp, #40]
  434250:	ldr	x0, [x0, #8]
  434254:	mov	x1, x0
  434258:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43425c:	add	x0, x0, #0x168
  434260:	bl	406dc0 <printf@plt>
  434264:	b	4342f4 <try_variable_definition@@Base+0x444>
  434268:	ldr	x0, [sp, #40]
  43426c:	ldrb	w0, [x0, #44]
  434270:	and	w0, w0, #0x1
  434274:	and	w0, w0, #0xff
  434278:	cmp	w0, #0x0
  43427c:	b.eq	4342a4 <try_variable_definition@@Base+0x3f4>  // b.none
  434280:	ldr	x0, [sp, #40]
  434284:	ldr	x2, [x0, #8]
  434288:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43428c:	add	x0, x0, #0x400
  434290:	ldr	x0, [x0]
  434294:	mov	x1, x0
  434298:	mov	x0, x2
  43429c:	bl	406700 <fputs@plt>
  4342a0:	b	4342f4 <try_variable_definition@@Base+0x444>
  4342a4:	ldr	x0, [sp, #40]
  4342a8:	ldr	x0, [x0, #8]
  4342ac:	str	x0, [sp, #48]
  4342b0:	b	4342e4 <try_variable_definition@@Base+0x434>
  4342b4:	ldr	x0, [sp, #48]
  4342b8:	ldrb	w0, [x0]
  4342bc:	cmp	w0, #0x24
  4342c0:	b.ne	4342cc <try_variable_definition@@Base+0x41c>  // b.any
  4342c4:	mov	w0, #0x24                  	// #36
  4342c8:	bl	406e00 <putchar@plt>
  4342cc:	ldr	x0, [sp, #48]
  4342d0:	ldrb	w0, [x0]
  4342d4:	bl	406e00 <putchar@plt>
  4342d8:	ldr	x0, [sp, #48]
  4342dc:	add	x0, x0, #0x1
  4342e0:	str	x0, [sp, #48]
  4342e4:	ldr	x0, [sp, #48]
  4342e8:	ldrb	w0, [x0]
  4342ec:	cmp	w0, #0x0
  4342f0:	b.ne	4342b4 <try_variable_definition@@Base+0x404>  // b.any
  4342f4:	mov	w0, #0xa                   	// #10
  4342f8:	bl	406e00 <putchar@plt>
  4342fc:	nop
  434300:	nop
  434304:	ldp	x29, x30, [sp], #64
  434308:	ret
  43430c:	stp	x29, x30, [sp, #-48]!
  434310:	mov	x29, sp
  434314:	str	x0, [sp, #24]
  434318:	str	x1, [sp, #16]
  43431c:	ldr	x0, [sp, #24]
  434320:	str	x0, [sp, #40]
  434324:	ldr	x0, [sp, #40]
  434328:	ldrb	w0, [x0, #47]
  43432c:	and	w0, w0, #0x1c
  434330:	and	w0, w0, #0xff
  434334:	cmp	w0, #0x18
  434338:	b.ne	434348 <try_variable_definition@@Base+0x498>  // b.any
  43433c:	ldr	x1, [sp, #16]
  434340:	ldr	x0, [sp, #24]
  434344:	bl	433f54 <try_variable_definition@@Base+0xa4>
  434348:	nop
  43434c:	ldp	x29, x30, [sp], #48
  434350:	ret
  434354:	stp	x29, x30, [sp, #-48]!
  434358:	mov	x29, sp
  43435c:	str	x0, [sp, #24]
  434360:	str	x1, [sp, #16]
  434364:	ldr	x0, [sp, #24]
  434368:	str	x0, [sp, #40]
  43436c:	ldr	x0, [sp, #40]
  434370:	ldrb	w0, [x0, #47]
  434374:	and	w0, w0, #0x1c
  434378:	and	w0, w0, #0xff
  43437c:	cmp	w0, #0x18
  434380:	b.eq	434390 <try_variable_definition@@Base+0x4e0>  // b.none
  434384:	ldr	x1, [sp, #16]
  434388:	ldr	x0, [sp, #24]
  43438c:	bl	433f54 <try_variable_definition@@Base+0xa4>
  434390:	nop
  434394:	ldp	x29, x30, [sp], #48
  434398:	ret
  43439c:	stp	x29, x30, [sp, #-48]!
  4343a0:	mov	x29, sp
  4343a4:	str	x0, [sp, #40]
  4343a8:	str	x1, [sp, #32]
  4343ac:	str	w2, [sp, #28]
  4343b0:	ldr	x3, [sp, #40]
  4343b4:	ldr	w0, [sp, #28]
  4343b8:	cmp	w0, #0x0
  4343bc:	b.eq	4343cc <try_variable_definition@@Base+0x51c>  // b.none
  4343c0:	adrp	x0, 434000 <try_variable_definition@@Base+0x150>
  4343c4:	add	x0, x0, #0x30c
  4343c8:	b	4343d4 <try_variable_definition@@Base+0x524>
  4343cc:	adrp	x0, 433000 <target_environment@@Base+0x14c>
  4343d0:	add	x0, x0, #0xf54
  4343d4:	ldr	x2, [sp, #32]
  4343d8:	mov	x1, x0
  4343dc:	mov	x0, x3
  4343e0:	bl	414840 <hash_map_arg@@Base>
  4343e4:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4343e8:	add	x0, x0, #0x178
  4343ec:	bl	406e40 <gettext@plt>
  4343f0:	mov	x2, x0
  4343f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4343f8:	add	x0, x0, #0x400
  4343fc:	ldr	x0, [x0]
  434400:	mov	x1, x0
  434404:	mov	x0, x2
  434408:	bl	406700 <fputs@plt>
  43440c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434410:	add	x0, x0, #0x400
  434414:	ldr	x0, [x0]
  434418:	mov	x3, x0
  43441c:	mov	x2, #0x2                   	// #2
  434420:	mov	x1, #0x1                   	// #1
  434424:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434428:	add	x0, x0, #0x108
  43442c:	bl	406c50 <fwrite@plt>
  434430:	ldr	x2, [sp, #40]
  434434:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434438:	add	x0, x0, #0x400
  43443c:	ldr	x0, [x0]
  434440:	mov	x1, x0
  434444:	mov	x0, x2
  434448:	bl	414a44 <hash_print_stats@@Base>
  43444c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434450:	add	x0, x0, #0x400
  434454:	ldr	x0, [x0]
  434458:	mov	x1, x0
  43445c:	mov	w0, #0xa                   	// #10
  434460:	bl	4067a0 <putc@plt>
  434464:	nop
  434468:	ldp	x29, x30, [sp], #48
  43446c:	ret

0000000000434470 <print_variable_data_base@@Base>:
  434470:	stp	x29, x30, [sp, #-32]!
  434474:	mov	x29, sp
  434478:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43447c:	add	x0, x0, #0x1a0
  434480:	bl	406e40 <gettext@plt>
  434484:	bl	406b60 <puts@plt>
  434488:	mov	w2, #0x0                   	// #0
  43448c:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x5450>
  434490:	add	x1, x0, #0xe40
  434494:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434498:	add	x0, x0, #0x978
  43449c:	bl	43439c <try_variable_definition@@Base+0x4ec>
  4344a0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4344a4:	add	x0, x0, #0x1b0
  4344a8:	bl	406e40 <gettext@plt>
  4344ac:	bl	406b60 <puts@plt>
  4344b0:	str	wzr, [sp, #20]
  4344b4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4344b8:	add	x0, x0, #0x170
  4344bc:	ldr	x0, [x0]
  4344c0:	str	x0, [sp, #24]
  4344c4:	b	434510 <print_variable_data_base@@Base+0xa0>
  4344c8:	ldr	w0, [sp, #20]
  4344cc:	add	w0, w0, #0x1
  4344d0:	str	w0, [sp, #20]
  4344d4:	ldr	x0, [sp, #24]
  4344d8:	ldr	x0, [x0, #16]
  4344dc:	mov	x1, x0
  4344e0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4344e4:	add	x0, x0, #0x1d8
  4344e8:	bl	406dc0 <printf@plt>
  4344ec:	ldr	x0, [sp, #24]
  4344f0:	add	x2, x0, #0x20
  4344f4:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4344f8:	add	x1, x0, #0x108
  4344fc:	mov	x0, x2
  434500:	bl	433f54 <try_variable_definition@@Base+0xa4>
  434504:	ldr	x0, [sp, #24]
  434508:	ldr	x0, [x0]
  43450c:	str	x0, [sp, #24]
  434510:	ldr	x0, [sp, #24]
  434514:	cmp	x0, #0x0
  434518:	b.ne	4344c8 <print_variable_data_base@@Base+0x58>  // b.any
  43451c:	ldr	w0, [sp, #20]
  434520:	cmp	w0, #0x0
  434524:	b.ne	43453c <print_variable_data_base@@Base+0xcc>  // b.any
  434528:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43452c:	add	x0, x0, #0x1e0
  434530:	bl	406e40 <gettext@plt>
  434534:	bl	406b60 <puts@plt>
  434538:	b	434550 <print_variable_data_base@@Base+0xe0>
  43453c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434540:	add	x0, x0, #0x208
  434544:	bl	406e40 <gettext@plt>
  434548:	ldr	w1, [sp, #20]
  43454c:	bl	406dc0 <printf@plt>
  434550:	nop
  434554:	ldp	x29, x30, [sp], #32
  434558:	ret

000000000043455c <print_file_variables@@Base>:
  43455c:	stp	x29, x30, [sp, #-32]!
  434560:	mov	x29, sp
  434564:	str	x0, [sp, #24]
  434568:	ldr	x0, [sp, #24]
  43456c:	ldr	x0, [x0, #80]
  434570:	cmp	x0, #0x0
  434574:	b.eq	434598 <print_file_variables@@Base+0x3c>  // b.none
  434578:	ldr	x0, [sp, #24]
  43457c:	ldr	x0, [x0, #80]
  434580:	ldr	x3, [x0, #8]
  434584:	mov	w2, #0x1                   	// #1
  434588:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43458c:	add	x1, x0, #0x108
  434590:	mov	x0, x3
  434594:	bl	43439c <try_variable_definition@@Base+0x4ec>
  434598:	nop
  43459c:	ldp	x29, x30, [sp], #32
  4345a0:	ret

00000000004345a4 <print_target_variables@@Base>:
  4345a4:	stp	x29, x30, [sp, #-48]!
  4345a8:	mov	x29, sp
  4345ac:	str	x0, [x29, #24]
  4345b0:	ldr	x0, [x29, #24]
  4345b4:	ldr	x0, [x0, #80]
  4345b8:	cmp	x0, #0x0
  4345bc:	b.eq	434674 <print_target_variables@@Base+0xd0>  // b.none
  4345c0:	ldr	x0, [x29, #24]
  4345c4:	ldr	x0, [x0]
  4345c8:	bl	4066f0 <strlen@plt>
  4345cc:	str	x0, [x29, #40]
  4345d0:	ldr	x0, [x29, #40]
  4345d4:	add	x0, x0, #0x3
  4345d8:	add	x0, x0, #0xf
  4345dc:	lsr	x0, x0, #4
  4345e0:	lsl	x0, x0, #4
  4345e4:	sub	sp, sp, x0
  4345e8:	mov	x0, sp
  4345ec:	add	x0, x0, #0xf
  4345f0:	lsr	x0, x0, #4
  4345f4:	lsl	x0, x0, #4
  4345f8:	str	x0, [x29, #32]
  4345fc:	ldr	x0, [x29, #24]
  434600:	ldr	x0, [x0]
  434604:	mov	x1, x0
  434608:	ldr	x0, [x29, #32]
  43460c:	bl	406ca0 <strcpy@plt>
  434610:	ldr	x1, [x29, #32]
  434614:	ldr	x0, [x29, #40]
  434618:	add	x0, x1, x0
  43461c:	mov	w1, #0x3a                  	// #58
  434620:	strb	w1, [x0]
  434624:	ldr	x0, [x29, #40]
  434628:	add	x0, x0, #0x1
  43462c:	ldr	x1, [x29, #32]
  434630:	add	x0, x1, x0
  434634:	mov	w1, #0x20                  	// #32
  434638:	strb	w1, [x0]
  43463c:	ldr	x0, [x29, #40]
  434640:	add	x0, x0, #0x2
  434644:	ldr	x1, [x29, #32]
  434648:	add	x0, x1, x0
  43464c:	strb	wzr, [x0]
  434650:	ldr	x0, [x29, #24]
  434654:	ldr	x0, [x0, #80]
  434658:	ldr	x0, [x0, #8]
  43465c:	mov	x3, x0
  434660:	ldr	x2, [x29, #32]
  434664:	adrp	x0, 434000 <try_variable_definition@@Base+0x150>
  434668:	add	x1, x0, #0x354
  43466c:	mov	x0, x3
  434670:	bl	414840 <hash_map_arg@@Base>
  434674:	nop
  434678:	mov	sp, x29
  43467c:	ldp	x29, x30, [sp], #48
  434680:	ret

0000000000434684 <build_vpath_lists@@Base>:
  434684:	stp	x29, x30, [sp, #-96]!
  434688:	mov	x29, sp
  43468c:	str	xzr, [sp, #88]
  434690:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434694:	add	x0, x0, #0x9d8
  434698:	ldr	x0, [x0]
  43469c:	str	x0, [sp, #80]
  4346a0:	b	4346cc <build_vpath_lists@@Base+0x48>
  4346a4:	ldr	x0, [sp, #80]
  4346a8:	ldr	x0, [x0]
  4346ac:	str	x0, [sp, #32]
  4346b0:	ldr	x0, [sp, #80]
  4346b4:	ldr	x1, [sp, #88]
  4346b8:	str	x1, [x0]
  4346bc:	ldr	x0, [sp, #80]
  4346c0:	str	x0, [sp, #88]
  4346c4:	ldr	x0, [sp, #32]
  4346c8:	str	x0, [sp, #80]
  4346cc:	ldr	x0, [sp, #80]
  4346d0:	cmp	x0, #0x0
  4346d4:	b.ne	4346a4 <build_vpath_lists@@Base+0x20>  // b.any
  4346d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4346dc:	add	x0, x0, #0x9d8
  4346e0:	ldr	x1, [sp, #88]
  4346e4:	str	x1, [x0]
  4346e8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4346ec:	add	x0, x0, #0xa90
  4346f0:	ldr	w0, [x0]
  4346f4:	str	w0, [sp, #76]
  4346f8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4346fc:	add	x0, x0, #0xa90
  434700:	str	wzr, [x0]
  434704:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  434708:	add	x0, x0, #0x258
  43470c:	bl	40bf38 <variable_expand@@Base>
  434710:	str	x0, [sp, #64]
  434714:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434718:	add	x0, x0, #0xa90
  43471c:	ldr	w1, [sp, #76]
  434720:	str	w1, [x0]
  434724:	ldr	x0, [sp, #64]
  434728:	ldrb	w0, [x0]
  43472c:	cmp	w0, #0x0
  434730:	b.eq	43478c <build_vpath_lists@@Base+0x108>  // b.none
  434734:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434738:	add	x0, x0, #0x9d8
  43473c:	ldr	x0, [x0]
  434740:	str	x0, [sp, #56]
  434744:	mov	w0, #0x25                  	// #37
  434748:	strh	w0, [sp, #24]
  43474c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434750:	add	x0, x0, #0x9d8
  434754:	str	xzr, [x0]
  434758:	add	x0, sp, #0x18
  43475c:	ldr	x1, [sp, #64]
  434760:	bl	43483c <construct_vpath_list@@Base>
  434764:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434768:	add	x0, x0, #0x9d8
  43476c:	ldr	x1, [x0]
  434770:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434774:	add	x0, x0, #0x9e0
  434778:	str	x1, [x0]
  43477c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434780:	add	x0, x0, #0x9d8
  434784:	ldr	x1, [sp, #56]
  434788:	str	x1, [x0]
  43478c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434790:	add	x0, x0, #0xa90
  434794:	ldr	w0, [x0]
  434798:	str	w0, [sp, #52]
  43479c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4347a0:	add	x0, x0, #0xa90
  4347a4:	str	wzr, [x0]
  4347a8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4347ac:	add	x0, x0, #0x270
  4347b0:	bl	40bf38 <variable_expand@@Base>
  4347b4:	str	x0, [sp, #64]
  4347b8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4347bc:	add	x0, x0, #0xa90
  4347c0:	ldr	w1, [sp, #52]
  4347c4:	str	w1, [x0]
  4347c8:	ldr	x0, [sp, #64]
  4347cc:	ldrb	w0, [x0]
  4347d0:	cmp	w0, #0x0
  4347d4:	b.eq	434830 <build_vpath_lists@@Base+0x1ac>  // b.none
  4347d8:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4347dc:	add	x0, x0, #0x9d8
  4347e0:	ldr	x0, [x0]
  4347e4:	str	x0, [sp, #40]
  4347e8:	mov	w0, #0x25                  	// #37
  4347ec:	strh	w0, [sp, #16]
  4347f0:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4347f4:	add	x0, x0, #0x9d8
  4347f8:	str	xzr, [x0]
  4347fc:	add	x0, sp, #0x10
  434800:	ldr	x1, [sp, #64]
  434804:	bl	43483c <construct_vpath_list@@Base>
  434808:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43480c:	add	x0, x0, #0x9d8
  434810:	ldr	x1, [x0]
  434814:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434818:	add	x0, x0, #0x9e8
  43481c:	str	x1, [x0]
  434820:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434824:	add	x0, x0, #0x9d8
  434828:	ldr	x1, [sp, #40]
  43482c:	str	x1, [x0]
  434830:	nop
  434834:	ldp	x29, x30, [sp], #96
  434838:	ret

000000000043483c <construct_vpath_list@@Base>:
  43483c:	stp	x29, x30, [sp, #-144]!
  434840:	mov	x29, sp
  434844:	str	x19, [sp, #16]
  434848:	str	x0, [sp, #40]
  43484c:	str	x1, [sp, #32]
  434850:	str	xzr, [sp, #96]
  434854:	ldr	x0, [sp, #40]
  434858:	cmp	x0, #0x0
  43485c:	b.eq	43486c <construct_vpath_list@@Base+0x30>  // b.none
  434860:	ldr	x0, [sp, #40]
  434864:	bl	4294d0 <find_percent@@Base>
  434868:	str	x0, [sp, #96]
  43486c:	ldr	x0, [sp, #32]
  434870:	cmp	x0, #0x0
  434874:	b.ne	4349c8 <construct_vpath_list@@Base+0x18c>  // b.any
  434878:	str	xzr, [sp, #80]
  43487c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434880:	add	x0, x0, #0x9d8
  434884:	ldr	x0, [x0]
  434888:	str	x0, [sp, #88]
  43488c:	b	4349ac <construct_vpath_list@@Base+0x170>
  434890:	ldr	x0, [sp, #88]
  434894:	ldr	x0, [x0]
  434898:	str	x0, [sp, #48]
  43489c:	ldr	x0, [sp, #40]
  4348a0:	cmp	x0, #0x0
  4348a4:	b.eq	434954 <construct_vpath_list@@Base+0x118>  // b.none
  4348a8:	ldr	x0, [sp, #96]
  4348ac:	cmp	x0, #0x0
  4348b0:	b.ne	4348c4 <construct_vpath_list@@Base+0x88>  // b.any
  4348b4:	ldr	x0, [sp, #88]
  4348b8:	ldr	x0, [x0, #16]
  4348bc:	cmp	x0, #0x0
  4348c0:	b.eq	4348ec <construct_vpath_list@@Base+0xb0>  // b.none
  4348c4:	ldr	x1, [sp, #96]
  4348c8:	ldr	x0, [sp, #40]
  4348cc:	sub	x1, x1, x0
  4348d0:	ldr	x0, [sp, #88]
  4348d4:	ldr	x2, [x0, #16]
  4348d8:	ldr	x0, [sp, #88]
  4348dc:	ldr	x0, [x0, #8]
  4348e0:	sub	x0, x2, x0
  4348e4:	cmp	x1, x0
  4348e8:	b.ne	43499c <construct_vpath_list@@Base+0x160>  // b.any
  4348ec:	ldr	x0, [sp, #88]
  4348f0:	ldr	x0, [x0, #8]
  4348f4:	ldr	x1, [sp, #40]
  4348f8:	cmp	x1, x0
  4348fc:	b.eq	434954 <construct_vpath_list@@Base+0x118>  // b.none
  434900:	ldr	x0, [sp, #40]
  434904:	ldrb	w1, [x0]
  434908:	ldr	x0, [sp, #88]
  43490c:	ldr	x0, [x0, #8]
  434910:	ldrb	w0, [x0]
  434914:	cmp	w1, w0
  434918:	b.ne	43499c <construct_vpath_list@@Base+0x160>  // b.any
  43491c:	ldr	x0, [sp, #40]
  434920:	ldrb	w0, [x0]
  434924:	cmp	w0, #0x0
  434928:	b.eq	434954 <construct_vpath_list@@Base+0x118>  // b.none
  43492c:	ldr	x0, [sp, #40]
  434930:	add	x2, x0, #0x1
  434934:	ldr	x0, [sp, #88]
  434938:	ldr	x0, [x0, #8]
  43493c:	add	x0, x0, #0x1
  434940:	mov	x1, x0
  434944:	mov	x0, x2
  434948:	bl	406bc0 <strcmp@plt>
  43494c:	cmp	w0, #0x0
  434950:	b.ne	43499c <construct_vpath_list@@Base+0x160>  // b.any
  434954:	ldr	x0, [sp, #80]
  434958:	cmp	x0, #0x0
  43495c:	b.ne	434978 <construct_vpath_list@@Base+0x13c>  // b.any
  434960:	ldr	x0, [sp, #88]
  434964:	ldr	x1, [x0]
  434968:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43496c:	add	x0, x0, #0x9d8
  434970:	str	x1, [x0]
  434974:	b	434984 <construct_vpath_list@@Base+0x148>
  434978:	ldr	x0, [sp, #80]
  43497c:	ldr	x1, [sp, #48]
  434980:	str	x1, [x0]
  434984:	ldr	x0, [sp, #88]
  434988:	ldr	x0, [x0, #32]
  43498c:	bl	406c00 <free@plt>
  434990:	ldr	x0, [sp, #88]
  434994:	bl	406c00 <free@plt>
  434998:	b	4349a4 <construct_vpath_list@@Base+0x168>
  43499c:	ldr	x0, [sp, #88]
  4349a0:	str	x0, [sp, #80]
  4349a4:	ldr	x0, [sp, #48]
  4349a8:	str	x0, [sp, #88]
  4349ac:	ldr	x0, [sp, #88]
  4349b0:	cmp	x0, #0x0
  4349b4:	b.ne	434890 <construct_vpath_list@@Base+0x54>  // b.any
  4349b8:	b	434ce0 <construct_vpath_list@@Base+0x4a4>
  4349bc:	ldr	x0, [sp, #32]
  4349c0:	add	x0, x0, #0x1
  4349c4:	str	x0, [sp, #32]
  4349c8:	ldr	x0, [sp, #32]
  4349cc:	ldrb	w0, [x0]
  4349d0:	mov	w1, w0
  4349d4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4349d8:	add	x0, x0, #0x728
  4349dc:	sxtw	x1, w1
  4349e0:	ldrh	w0, [x0, x1, lsl #1]
  4349e4:	mov	w1, w0
  4349e8:	mov	w0, #0x42                  	// #66
  4349ec:	and	w0, w1, w0
  4349f0:	cmp	w0, #0x0
  4349f4:	b.ne	4349bc <construct_vpath_list@@Base+0x180>  // b.any
  4349f8:	mov	w0, #0x2                   	// #2
  4349fc:	str	w0, [sp, #108]
  434a00:	ldr	x0, [sp, #32]
  434a04:	str	x0, [sp, #128]
  434a08:	b	434a50 <construct_vpath_list@@Base+0x214>
  434a0c:	ldr	x0, [sp, #128]
  434a10:	add	x1, x0, #0x1
  434a14:	str	x1, [sp, #128]
  434a18:	ldrb	w0, [x0]
  434a1c:	mov	w1, w0
  434a20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434a24:	add	x0, x0, #0x728
  434a28:	sxtw	x1, w1
  434a2c:	ldrh	w0, [x0, x1, lsl #1]
  434a30:	mov	w1, w0
  434a34:	mov	w0, #0x42                  	// #66
  434a38:	and	w0, w1, w0
  434a3c:	cmp	w0, #0x0
  434a40:	b.eq	434a50 <construct_vpath_list@@Base+0x214>  // b.none
  434a44:	ldr	w0, [sp, #108]
  434a48:	add	w0, w0, #0x1
  434a4c:	str	w0, [sp, #108]
  434a50:	ldr	x0, [sp, #128]
  434a54:	ldrb	w0, [x0]
  434a58:	cmp	w0, #0x0
  434a5c:	b.ne	434a0c <construct_vpath_list@@Base+0x1d0>  // b.any
  434a60:	ldr	w0, [sp, #108]
  434a64:	lsl	x0, x0, #3
  434a68:	bl	42268c <xmalloc@@Base>
  434a6c:	str	x0, [sp, #120]
  434a70:	str	xzr, [sp, #112]
  434a74:	str	wzr, [sp, #140]
  434a78:	ldr	x0, [sp, #32]
  434a7c:	str	x0, [sp, #128]
  434a80:	b	434bcc <construct_vpath_list@@Base+0x390>
  434a84:	ldr	x0, [sp, #128]
  434a88:	str	x0, [sp, #56]
  434a8c:	b	434a9c <construct_vpath_list@@Base+0x260>
  434a90:	ldr	x0, [sp, #128]
  434a94:	add	x0, x0, #0x1
  434a98:	str	x0, [sp, #128]
  434a9c:	ldr	x0, [sp, #128]
  434aa0:	ldrb	w0, [x0]
  434aa4:	cmp	w0, #0x0
  434aa8:	b.eq	434ae4 <construct_vpath_list@@Base+0x2a8>  // b.none
  434aac:	ldr	x0, [sp, #128]
  434ab0:	ldrb	w0, [x0]
  434ab4:	cmp	w0, #0x3a
  434ab8:	b.eq	434ae4 <construct_vpath_list@@Base+0x2a8>  // b.none
  434abc:	ldr	x0, [sp, #128]
  434ac0:	ldrb	w0, [x0]
  434ac4:	mov	w1, w0
  434ac8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434acc:	add	x0, x0, #0x728
  434ad0:	sxtw	x1, w1
  434ad4:	ldrh	w0, [x0, x1, lsl #1]
  434ad8:	and	w0, w0, #0x2
  434adc:	cmp	w0, #0x0
  434ae0:	b.eq	434a90 <construct_vpath_list@@Base+0x254>  // b.none
  434ae4:	ldr	x1, [sp, #128]
  434ae8:	ldr	x0, [sp, #56]
  434aec:	sub	x0, x1, x0
  434af0:	str	x0, [sp, #72]
  434af4:	ldr	x0, [sp, #72]
  434af8:	cmp	x0, #0x1
  434afc:	b.ls	434b20 <construct_vpath_list@@Base+0x2e4>  // b.plast
  434b00:	ldr	x0, [sp, #128]
  434b04:	sub	x0, x0, #0x1
  434b08:	ldrb	w0, [x0]
  434b0c:	cmp	w0, #0x2f
  434b10:	b.ne	434b20 <construct_vpath_list@@Base+0x2e4>  // b.any
  434b14:	ldr	x0, [sp, #72]
  434b18:	sub	x0, x0, #0x1
  434b1c:	str	x0, [sp, #72]
  434b20:	ldr	x0, [sp, #72]
  434b24:	cmp	x0, #0x1
  434b28:	b.hi	434b3c <construct_vpath_list@@Base+0x300>  // b.pmore
  434b2c:	ldr	x0, [sp, #56]
  434b30:	ldrb	w0, [x0]
  434b34:	cmp	w0, #0x2e
  434b38:	b.eq	434b9c <construct_vpath_list@@Base+0x360>  // b.none
  434b3c:	ldr	x1, [sp, #72]
  434b40:	ldr	x0, [sp, #56]
  434b44:	bl	430da0 <strcache_add_len@@Base>
  434b48:	mov	x2, x0
  434b4c:	ldr	w0, [sp, #140]
  434b50:	add	w1, w0, #0x1
  434b54:	str	w1, [sp, #140]
  434b58:	mov	w0, w0
  434b5c:	lsl	x0, x0, #3
  434b60:	ldr	x1, [sp, #120]
  434b64:	add	x19, x1, x0
  434b68:	mov	x0, x2
  434b6c:	bl	40abf4 <dir_name@@Base>
  434b70:	str	x0, [x19]
  434b74:	ldr	x1, [sp, #72]
  434b78:	ldr	x0, [sp, #112]
  434b7c:	cmp	x1, x0
  434b80:	b.ls	434b9c <construct_vpath_list@@Base+0x360>  // b.plast
  434b84:	ldr	x0, [sp, #72]
  434b88:	str	x0, [sp, #112]
  434b8c:	b	434b9c <construct_vpath_list@@Base+0x360>
  434b90:	ldr	x0, [sp, #128]
  434b94:	add	x0, x0, #0x1
  434b98:	str	x0, [sp, #128]
  434b9c:	ldr	x0, [sp, #128]
  434ba0:	ldrb	w0, [x0]
  434ba4:	mov	w1, w0
  434ba8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  434bac:	add	x0, x0, #0x728
  434bb0:	sxtw	x1, w1
  434bb4:	ldrh	w0, [x0, x1, lsl #1]
  434bb8:	mov	w1, w0
  434bbc:	mov	w0, #0x42                  	// #66
  434bc0:	and	w0, w1, w0
  434bc4:	cmp	w0, #0x0
  434bc8:	b.ne	434b90 <construct_vpath_list@@Base+0x354>  // b.any
  434bcc:	ldr	x0, [sp, #128]
  434bd0:	ldrb	w0, [x0]
  434bd4:	cmp	w0, #0x0
  434bd8:	b.ne	434a84 <construct_vpath_list@@Base+0x248>  // b.any
  434bdc:	ldr	w0, [sp, #140]
  434be0:	cmp	w0, #0x0
  434be4:	b.eq	434cd8 <construct_vpath_list@@Base+0x49c>  // b.none
  434be8:	ldr	w0, [sp, #108]
  434bec:	sub	w0, w0, #0x1
  434bf0:	ldr	w1, [sp, #140]
  434bf4:	cmp	w1, w0
  434bf8:	b.cs	434c1c <construct_vpath_list@@Base+0x3e0>  // b.hs, b.nlast
  434bfc:	ldr	w0, [sp, #140]
  434c00:	add	w0, w0, #0x1
  434c04:	mov	w0, w0
  434c08:	lsl	x0, x0, #3
  434c0c:	mov	x1, x0
  434c10:	ldr	x0, [sp, #120]
  434c14:	bl	422720 <xrealloc@@Base>
  434c18:	str	x0, [sp, #120]
  434c1c:	ldr	w0, [sp, #140]
  434c20:	lsl	x0, x0, #3
  434c24:	ldr	x1, [sp, #120]
  434c28:	add	x0, x1, x0
  434c2c:	str	xzr, [x0]
  434c30:	mov	x0, #0x30                  	// #48
  434c34:	bl	42268c <xmalloc@@Base>
  434c38:	str	x0, [sp, #64]
  434c3c:	ldr	x0, [sp, #64]
  434c40:	ldr	x1, [sp, #120]
  434c44:	str	x1, [x0, #32]
  434c48:	ldr	x0, [sp, #64]
  434c4c:	ldr	x1, [sp, #112]
  434c50:	str	x1, [x0, #40]
  434c54:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434c58:	add	x0, x0, #0x9d8
  434c5c:	ldr	x1, [x0]
  434c60:	ldr	x0, [sp, #64]
  434c64:	str	x1, [x0]
  434c68:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434c6c:	add	x0, x0, #0x9d8
  434c70:	ldr	x1, [sp, #64]
  434c74:	str	x1, [x0]
  434c78:	ldr	x0, [sp, #40]
  434c7c:	bl	430d78 <strcache_add@@Base>
  434c80:	mov	x1, x0
  434c84:	ldr	x0, [sp, #64]
  434c88:	str	x1, [x0, #8]
  434c8c:	ldr	x0, [sp, #40]
  434c90:	bl	4066f0 <strlen@plt>
  434c94:	mov	x1, x0
  434c98:	ldr	x0, [sp, #64]
  434c9c:	str	x1, [x0, #24]
  434ca0:	ldr	x0, [sp, #96]
  434ca4:	cmp	x0, #0x0
  434ca8:	b.eq	434cc8 <construct_vpath_list@@Base+0x48c>  // b.none
  434cac:	ldr	x0, [sp, #64]
  434cb0:	ldr	x0, [x0, #8]
  434cb4:	ldr	x2, [sp, #96]
  434cb8:	ldr	x1, [sp, #40]
  434cbc:	sub	x1, x2, x1
  434cc0:	add	x0, x0, x1
  434cc4:	b	434ccc <construct_vpath_list@@Base+0x490>
  434cc8:	mov	x0, #0x0                   	// #0
  434ccc:	ldr	x1, [sp, #64]
  434cd0:	str	x0, [x1, #16]
  434cd4:	b	434ce0 <construct_vpath_list@@Base+0x4a4>
  434cd8:	ldr	x0, [sp, #120]
  434cdc:	bl	406c00 <free@plt>
  434ce0:	ldr	x19, [sp, #16]
  434ce4:	ldp	x29, x30, [sp], #144
  434ce8:	ret

0000000000434cec <gpath_search@@Base>:
  434cec:	stp	x29, x30, [sp, #-48]!
  434cf0:	mov	x29, sp
  434cf4:	str	x0, [sp, #24]
  434cf8:	str	x1, [sp, #16]
  434cfc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434d00:	add	x0, x0, #0x9e8
  434d04:	ldr	x0, [x0]
  434d08:	cmp	x0, #0x0
  434d0c:	b.eq	434da0 <gpath_search@@Base+0xb4>  // b.none
  434d10:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434d14:	add	x0, x0, #0x9e8
  434d18:	ldr	x0, [x0]
  434d1c:	ldr	x0, [x0, #40]
  434d20:	ldr	x1, [sp, #16]
  434d24:	cmp	x1, x0
  434d28:	b.hi	434da0 <gpath_search@@Base+0xb4>  // b.pmore
  434d2c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  434d30:	add	x0, x0, #0x9e8
  434d34:	ldr	x0, [x0]
  434d38:	ldr	x0, [x0, #32]
  434d3c:	str	x0, [sp, #40]
  434d40:	b	434d90 <gpath_search@@Base+0xa4>
  434d44:	ldr	x0, [sp, #40]
  434d48:	ldr	x0, [x0]
  434d4c:	ldr	x2, [sp, #16]
  434d50:	ldr	x1, [sp, #24]
  434d54:	bl	406990 <strncmp@plt>
  434d58:	cmp	w0, #0x0
  434d5c:	b.ne	434d84 <gpath_search@@Base+0x98>  // b.any
  434d60:	ldr	x0, [sp, #40]
  434d64:	ldr	x1, [x0]
  434d68:	ldr	x0, [sp, #16]
  434d6c:	add	x0, x1, x0
  434d70:	ldrb	w0, [x0]
  434d74:	cmp	w0, #0x0
  434d78:	b.ne	434d84 <gpath_search@@Base+0x98>  // b.any
  434d7c:	mov	w0, #0x1                   	// #1
  434d80:	b	434da4 <gpath_search@@Base+0xb8>
  434d84:	ldr	x0, [sp, #40]
  434d88:	add	x0, x0, #0x8
  434d8c:	str	x0, [sp, #40]
  434d90:	ldr	x0, [sp, #40]
  434d94:	ldr	x0, [x0]
  434d98:	cmp	x0, #0x0
  434d9c:	b.ne	434d44 <gpath_search@@Base+0x58>  // b.any
  434da0:	mov	w0, #0x0                   	// #0
  434da4:	ldp	x29, x30, [sp], #48
  434da8:	ret
  434dac:	stp	x29, x30, [sp, #-304]!
  434db0:	mov	x29, sp
  434db4:	str	x0, [x29, #40]
  434db8:	str	x1, [x29, #32]
  434dbc:	str	x2, [x29, #24]
  434dc0:	str	x3, [x29, #16]
  434dc4:	ldr	x0, [x29, #40]
  434dc8:	ldr	x0, [x0, #32]
  434dcc:	str	x0, [x29, #264]
  434dd0:	ldr	x0, [x29, #40]
  434dd4:	ldr	x0, [x0, #40]
  434dd8:	str	x0, [x29, #256]
  434ddc:	str	wzr, [x29, #284]
  434de0:	ldr	x0, [x29, #32]
  434de4:	bl	40c5bc <lookup_file@@Base>
  434de8:	str	x0, [x29, #248]
  434dec:	ldr	x0, [x29, #248]
  434df0:	cmp	x0, #0x0
  434df4:	b.eq	434e10 <gpath_search@@Base+0x124>  // b.none
  434df8:	ldr	x0, [x29, #248]
  434dfc:	ldrb	w0, [x0, #137]
  434e00:	and	w0, w0, #0x8
  434e04:	and	w0, w0, #0xff
  434e08:	cmp	w0, #0x0
  434e0c:	b.ne	434e18 <gpath_search@@Base+0x12c>  // b.any
  434e10:	mov	w0, #0x1                   	// #1
  434e14:	b	434e1c <gpath_search@@Base+0x130>
  434e18:	mov	w0, #0x0                   	// #0
  434e1c:	str	w0, [x29, #244]
  434e20:	ldr	x0, [x29, #32]
  434e24:	bl	4066f0 <strlen@plt>
  434e28:	str	x0, [x29, #288]
  434e2c:	mov	w1, #0x2f                  	// #47
  434e30:	ldr	x0, [x29, #32]
  434e34:	bl	406ae0 <strrchr@plt>
  434e38:	str	x0, [x29, #232]
  434e3c:	ldr	x0, [x29, #232]
  434e40:	cmp	x0, #0x0
  434e44:	b.eq	434e58 <gpath_search@@Base+0x16c>  // b.none
  434e48:	ldr	x1, [x29, #232]
  434e4c:	ldr	x0, [x29, #32]
  434e50:	sub	x0, x1, x0
  434e54:	b	434e5c <gpath_search@@Base+0x170>
  434e58:	mov	x0, #0x0                   	// #0
  434e5c:	str	x0, [x29, #224]
  434e60:	ldr	x0, [x29, #224]
  434e64:	cmp	x0, #0x0
  434e68:	b.eq	434e78 <gpath_search@@Base+0x18c>  // b.none
  434e6c:	ldr	x0, [x29, #232]
  434e70:	add	x0, x0, #0x1
  434e74:	b	434e7c <gpath_search@@Base+0x190>
  434e78:	ldr	x0, [x29, #32]
  434e7c:	str	x0, [x29, #216]
  434e80:	ldr	x0, [x29, #224]
  434e84:	cmp	x0, #0x0
  434e88:	b.eq	434ea0 <gpath_search@@Base+0x1b4>  // b.none
  434e8c:	ldr	x1, [x29, #288]
  434e90:	ldr	x0, [x29, #224]
  434e94:	sub	x0, x1, x0
  434e98:	sub	x0, x0, #0x1
  434e9c:	str	x0, [x29, #288]
  434ea0:	ldr	x1, [x29, #256]
  434ea4:	ldr	x0, [x29, #224]
  434ea8:	add	x1, x1, x0
  434eac:	ldr	x0, [x29, #288]
  434eb0:	add	x0, x1, x0
  434eb4:	add	x0, x0, #0x3
  434eb8:	add	x0, x0, #0xf
  434ebc:	lsr	x0, x0, #4
  434ec0:	lsl	x0, x0, #4
  434ec4:	sub	sp, sp, x0
  434ec8:	mov	x0, sp
  434ecc:	add	x0, x0, #0xf
  434ed0:	lsr	x0, x0, #4
  434ed4:	lsl	x0, x0, #4
  434ed8:	str	x0, [x29, #208]
  434edc:	str	wzr, [x29, #300]
  434ee0:	b	4351b4 <gpath_search@@Base+0x4c8>
  434ee4:	str	wzr, [x29, #280]
  434ee8:	ldr	x0, [x29, #208]
  434eec:	str	x0, [x29, #272]
  434ef0:	ldr	w0, [x29, #300]
  434ef4:	lsl	x0, x0, #3
  434ef8:	ldr	x1, [x29, #264]
  434efc:	add	x0, x1, x0
  434f00:	ldr	x0, [x0]
  434f04:	bl	4066f0 <strlen@plt>
  434f08:	str	x0, [x29, #200]
  434f0c:	ldr	w0, [x29, #300]
  434f10:	lsl	x0, x0, #3
  434f14:	ldr	x1, [x29, #264]
  434f18:	add	x0, x1, x0
  434f1c:	ldr	x0, [x0]
  434f20:	ldr	x2, [x29, #200]
  434f24:	mov	x1, x0
  434f28:	ldr	x0, [x29, #272]
  434f2c:	bl	4066b0 <memcpy@plt>
  434f30:	ldr	x1, [x29, #272]
  434f34:	ldr	x0, [x29, #200]
  434f38:	add	x0, x1, x0
  434f3c:	str	x0, [x29, #272]
  434f40:	ldr	x0, [x29, #224]
  434f44:	cmp	x0, #0x0
  434f48:	b.eq	434f80 <gpath_search@@Base+0x294>  // b.none
  434f4c:	ldr	x0, [x29, #272]
  434f50:	add	x1, x0, #0x1
  434f54:	str	x1, [x29, #272]
  434f58:	mov	w1, #0x2f                  	// #47
  434f5c:	strb	w1, [x0]
  434f60:	ldr	x2, [x29, #224]
  434f64:	ldr	x1, [x29, #32]
  434f68:	ldr	x0, [x29, #272]
  434f6c:	bl	4066b0 <memcpy@plt>
  434f70:	ldr	x1, [x29, #272]
  434f74:	ldr	x0, [x29, #224]
  434f78:	add	x0, x1, x0
  434f7c:	str	x0, [x29, #272]
  434f80:	ldr	x1, [x29, #272]
  434f84:	ldr	x0, [x29, #208]
  434f88:	cmp	x1, x0
  434f8c:	b.eq	434fd4 <gpath_search@@Base+0x2e8>  // b.none
  434f90:	ldr	x0, [x29, #272]
  434f94:	sub	x0, x0, #0x1
  434f98:	ldrb	w0, [x0]
  434f9c:	cmp	w0, #0x2f
  434fa0:	b.eq	434fd4 <gpath_search@@Base+0x2e8>  // b.none
  434fa4:	ldr	x0, [x29, #272]
  434fa8:	mov	w1, #0x2f                  	// #47
  434fac:	strb	w1, [x0]
  434fb0:	ldr	x0, [x29, #272]
  434fb4:	add	x3, x0, #0x1
  434fb8:	ldr	x0, [x29, #288]
  434fbc:	add	x0, x0, #0x1
  434fc0:	mov	x2, x0
  434fc4:	ldr	x1, [x29, #216]
  434fc8:	mov	x0, x3
  434fcc:	bl	4066b0 <memcpy@plt>
  434fd0:	b	434fec <gpath_search@@Base+0x300>
  434fd4:	ldr	x0, [x29, #288]
  434fd8:	add	x0, x0, #0x1
  434fdc:	mov	x2, x0
  434fe0:	ldr	x1, [x29, #216]
  434fe4:	ldr	x0, [x29, #272]
  434fe8:	bl	4066b0 <memcpy@plt>
  434fec:	ldr	x0, [x29, #208]
  434ff0:	bl	40c5bc <lookup_file@@Base>
  434ff4:	str	x0, [x29, #192]
  434ff8:	ldr	x0, [x29, #192]
  434ffc:	cmp	x0, #0x0
  435000:	b.eq	435084 <gpath_search@@Base+0x398>  // b.none
  435004:	ldr	w0, [x29, #244]
  435008:	cmp	w0, #0x0
  43500c:	b.ne	435028 <gpath_search@@Base+0x33c>  // b.any
  435010:	ldr	x0, [x29, #192]
  435014:	ldrb	w0, [x0, #137]
  435018:	and	w0, w0, #0x8
  43501c:	and	w0, w0, #0xff
  435020:	cmp	w0, #0x0
  435024:	b.eq	435030 <gpath_search@@Base+0x344>  // b.none
  435028:	mov	w0, #0x1                   	// #1
  43502c:	b	435034 <gpath_search@@Base+0x348>
  435030:	mov	w0, #0x0                   	// #0
  435034:	str	w0, [x29, #284]
  435038:	ldr	w0, [x29, #284]
  43503c:	cmp	w0, #0x0
  435040:	b.eq	435084 <gpath_search@@Base+0x398>  // b.none
  435044:	ldr	x0, [x29, #24]
  435048:	cmp	x0, #0x0
  43504c:	b.eq	435084 <gpath_search@@Base+0x398>  // b.none
  435050:	ldr	x0, [x29, #192]
  435054:	ldr	x0, [x0, #112]
  435058:	cmp	x0, #0x2
  43505c:	b.eq	435070 <gpath_search@@Base+0x384>  // b.none
  435060:	ldr	x0, [x29, #192]
  435064:	ldr	x0, [x0, #112]
  435068:	cmn	x0, #0x1
  43506c:	b.ne	435084 <gpath_search@@Base+0x398>  // b.any
  435070:	ldr	x0, [x29, #192]
  435074:	ldr	x1, [x0, #112]
  435078:	ldr	x0, [x29, #24]
  43507c:	str	x1, [x0]
  435080:	str	xzr, [x29, #24]
  435084:	ldr	w0, [x29, #284]
  435088:	cmp	w0, #0x0
  43508c:	b.ne	4350b0 <gpath_search@@Base+0x3c4>  // b.any
  435090:	ldr	x0, [x29, #272]
  435094:	strb	wzr, [x0]
  435098:	ldr	x1, [x29, #216]
  43509c:	ldr	x0, [x29, #208]
  4350a0:	bl	40a760 <dir_file_exists_p@@Base>
  4350a4:	str	w0, [x29, #284]
  4350a8:	ldr	w0, [x29, #284]
  4350ac:	str	w0, [x29, #280]
  4350b0:	ldr	w0, [x29, #284]
  4350b4:	cmp	w0, #0x0
  4350b8:	b.eq	4351a8 <gpath_search@@Base+0x4bc>  // b.none
  4350bc:	ldr	x0, [x29, #272]
  4350c0:	mov	w1, #0x2f                  	// #47
  4350c4:	strb	w1, [x0]
  4350c8:	ldr	w0, [x29, #280]
  4350cc:	cmp	w0, #0x0
  4350d0:	b.eq	435150 <gpath_search@@Base+0x464>  // b.none
  4350d4:	nop
  4350d8:	add	x0, x29, #0x38
  4350dc:	mov	x1, x0
  4350e0:	ldr	x0, [x29, #208]
  4350e4:	bl	436b70 <__libc_csu_fini@@Base+0x18>
  4350e8:	str	w0, [x29, #188]
  4350ec:	ldr	w0, [x29, #188]
  4350f0:	cmn	w0, #0x1
  4350f4:	b.ne	435108 <gpath_search@@Base+0x41c>  // b.any
  4350f8:	bl	406dd0 <__errno_location@plt>
  4350fc:	ldr	w0, [x0]
  435100:	cmp	w0, #0x4
  435104:	b.eq	4350d8 <gpath_search@@Base+0x3ec>  // b.none
  435108:	ldr	w0, [x29, #188]
  43510c:	cmp	w0, #0x0
  435110:	b.eq	43511c <gpath_search@@Base+0x430>  // b.none
  435114:	str	wzr, [x29, #284]
  435118:	b	4351a8 <gpath_search@@Base+0x4bc>
  43511c:	ldr	x0, [x29, #24]
  435120:	cmp	x0, #0x0
  435124:	b.eq	435150 <gpath_search@@Base+0x464>  // b.none
  435128:	ldr	x0, [x29, #144]
  43512c:	ldr	x1, [x29, #152]
  435130:	mov	x2, x1
  435134:	mov	x1, x0
  435138:	ldr	x0, [x29, #208]
  43513c:	bl	40e2fc <file_timestamp_cons@@Base>
  435140:	mov	x1, x0
  435144:	ldr	x0, [x29, #24]
  435148:	str	x1, [x0]
  43514c:	str	xzr, [x29, #24]
  435150:	ldr	x0, [x29, #24]
  435154:	cmp	x0, #0x0
  435158:	b.eq	435164 <gpath_search@@Base+0x478>  // b.none
  43515c:	ldr	x0, [x29, #24]
  435160:	str	xzr, [x0]
  435164:	ldr	x0, [x29, #16]
  435168:	cmp	x0, #0x0
  43516c:	b.eq	43517c <gpath_search@@Base+0x490>  // b.none
  435170:	ldr	x0, [x29, #16]
  435174:	ldr	w1, [x29, #300]
  435178:	str	w1, [x0]
  43517c:	ldr	x0, [x29, #272]
  435180:	add	x1, x0, #0x1
  435184:	ldr	x0, [x29, #208]
  435188:	sub	x0, x1, x0
  43518c:	mov	x1, x0
  435190:	ldr	x0, [x29, #288]
  435194:	add	x0, x1, x0
  435198:	mov	x1, x0
  43519c:	ldr	x0, [x29, #208]
  4351a0:	bl	430da0 <strcache_add_len@@Base>
  4351a4:	b	4351d4 <gpath_search@@Base+0x4e8>
  4351a8:	ldr	w0, [x29, #300]
  4351ac:	add	w0, w0, #0x1
  4351b0:	str	w0, [x29, #300]
  4351b4:	ldr	w0, [x29, #300]
  4351b8:	lsl	x0, x0, #3
  4351bc:	ldr	x1, [x29, #264]
  4351c0:	add	x0, x1, x0
  4351c4:	ldr	x0, [x0]
  4351c8:	cmp	x0, #0x0
  4351cc:	b.ne	434ee4 <gpath_search@@Base+0x1f8>  // b.any
  4351d0:	mov	x0, #0x0                   	// #0
  4351d4:	mov	sp, x29
  4351d8:	ldp	x29, x30, [sp], #304
  4351dc:	ret

00000000004351e0 <vpath_search@@Base>:
  4351e0:	stp	x29, x30, [sp, #-80]!
  4351e4:	mov	x29, sp
  4351e8:	str	x0, [sp, #40]
  4351ec:	str	x1, [sp, #32]
  4351f0:	str	x2, [sp, #24]
  4351f4:	str	x3, [sp, #16]
  4351f8:	ldr	x0, [sp, #40]
  4351fc:	ldrb	w0, [x0]
  435200:	cmp	w0, #0x2f
  435204:	b.eq	435230 <vpath_search@@Base+0x50>  // b.none
  435208:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43520c:	add	x0, x0, #0x9d8
  435210:	ldr	x0, [x0]
  435214:	cmp	x0, #0x0
  435218:	b.ne	435238 <vpath_search@@Base+0x58>  // b.any
  43521c:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  435220:	add	x0, x0, #0x9e0
  435224:	ldr	x0, [x0]
  435228:	cmp	x0, #0x0
  43522c:	b.ne	435238 <vpath_search@@Base+0x58>  // b.any
  435230:	mov	x0, #0x0                   	// #0
  435234:	b	435340 <vpath_search@@Base+0x160>
  435238:	ldr	x0, [sp, #24]
  43523c:	cmp	x0, #0x0
  435240:	b.eq	435254 <vpath_search@@Base+0x74>  // b.none
  435244:	ldr	x0, [sp, #24]
  435248:	str	wzr, [x0]
  43524c:	ldr	x0, [sp, #16]
  435250:	str	wzr, [x0]
  435254:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  435258:	add	x0, x0, #0x9d8
  43525c:	ldr	x0, [x0]
  435260:	str	x0, [sp, #72]
  435264:	b	4352e8 <vpath_search@@Base+0x108>
  435268:	ldr	x0, [sp, #72]
  43526c:	ldr	x3, [x0, #8]
  435270:	ldr	x0, [sp, #72]
  435274:	ldr	x0, [x0, #16]
  435278:	ldr	x2, [sp, #40]
  43527c:	mov	x1, x0
  435280:	mov	x0, x3
  435284:	bl	40fc50 <pattern_matches@@Base>
  435288:	cmp	w0, #0x0
  43528c:	b.eq	4352bc <vpath_search@@Base+0xdc>  // b.none
  435290:	ldr	x3, [sp, #16]
  435294:	ldr	x2, [sp, #32]
  435298:	ldr	x1, [sp, #40]
  43529c:	ldr	x0, [sp, #72]
  4352a0:	bl	434dac <gpath_search@@Base+0xc0>
  4352a4:	str	x0, [sp, #56]
  4352a8:	ldr	x0, [sp, #56]
  4352ac:	cmp	x0, #0x0
  4352b0:	b.eq	4352bc <vpath_search@@Base+0xdc>  // b.none
  4352b4:	ldr	x0, [sp, #56]
  4352b8:	b	435340 <vpath_search@@Base+0x160>
  4352bc:	ldr	x0, [sp, #24]
  4352c0:	cmp	x0, #0x0
  4352c4:	b.eq	4352dc <vpath_search@@Base+0xfc>  // b.none
  4352c8:	ldr	x0, [sp, #24]
  4352cc:	ldr	w0, [x0]
  4352d0:	add	w1, w0, #0x1
  4352d4:	ldr	x0, [sp, #24]
  4352d8:	str	w1, [x0]
  4352dc:	ldr	x0, [sp, #72]
  4352e0:	ldr	x0, [x0]
  4352e4:	str	x0, [sp, #72]
  4352e8:	ldr	x0, [sp, #72]
  4352ec:	cmp	x0, #0x0
  4352f0:	b.ne	435268 <vpath_search@@Base+0x88>  // b.any
  4352f4:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4352f8:	add	x0, x0, #0x9e0
  4352fc:	ldr	x0, [x0]
  435300:	cmp	x0, #0x0
  435304:	b.eq	43533c <vpath_search@@Base+0x15c>  // b.none
  435308:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43530c:	add	x0, x0, #0x9e0
  435310:	ldr	x0, [x0]
  435314:	ldr	x3, [sp, #16]
  435318:	ldr	x2, [sp, #32]
  43531c:	ldr	x1, [sp, #40]
  435320:	bl	434dac <gpath_search@@Base+0xc0>
  435324:	str	x0, [sp, #64]
  435328:	ldr	x0, [sp, #64]
  43532c:	cmp	x0, #0x0
  435330:	b.eq	43533c <vpath_search@@Base+0x15c>  // b.none
  435334:	ldr	x0, [sp, #64]
  435338:	b	435340 <vpath_search@@Base+0x160>
  43533c:	mov	x0, #0x0                   	// #0
  435340:	ldp	x29, x30, [sp], #80
  435344:	ret

0000000000435348 <print_vpath_data_base@@Base>:
  435348:	stp	x29, x30, [sp, #-48]!
  43534c:	mov	x29, sp
  435350:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435354:	add	x0, x0, #0x288
  435358:	bl	406e40 <gettext@plt>
  43535c:	bl	406b60 <puts@plt>
  435360:	str	wzr, [sp, #44]
  435364:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  435368:	add	x0, x0, #0x9d8
  43536c:	ldr	x0, [x0]
  435370:	str	x0, [sp, #32]
  435374:	b	43543c <print_vpath_data_base@@Base+0xf4>
  435378:	ldr	w0, [sp, #44]
  43537c:	add	w0, w0, #0x1
  435380:	str	w0, [sp, #44]
  435384:	ldr	x0, [sp, #32]
  435388:	ldr	x0, [x0, #8]
  43538c:	mov	x1, x0
  435390:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435394:	add	x0, x0, #0x2a0
  435398:	bl	406dc0 <printf@plt>
  43539c:	str	wzr, [sp, #28]
  4353a0:	b	435410 <print_vpath_data_base@@Base+0xc8>
  4353a4:	ldr	x0, [sp, #32]
  4353a8:	ldr	x1, [x0, #32]
  4353ac:	ldr	w0, [sp, #28]
  4353b0:	lsl	x0, x0, #3
  4353b4:	add	x0, x1, x0
  4353b8:	ldr	x3, [x0]
  4353bc:	ldr	x0, [sp, #32]
  4353c0:	ldr	x1, [x0, #32]
  4353c4:	ldr	w0, [sp, #28]
  4353c8:	add	w0, w0, #0x1
  4353cc:	mov	w0, w0
  4353d0:	lsl	x0, x0, #3
  4353d4:	add	x0, x1, x0
  4353d8:	ldr	x0, [x0]
  4353dc:	cmp	x0, #0x0
  4353e0:	b.ne	4353ec <print_vpath_data_base@@Base+0xa4>  // b.any
  4353e4:	mov	w0, #0xa                   	// #10
  4353e8:	b	4353f0 <print_vpath_data_base@@Base+0xa8>
  4353ec:	mov	w0, #0x3a                  	// #58
  4353f0:	mov	w2, w0
  4353f4:	mov	x1, x3
  4353f8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4353fc:	add	x0, x0, #0x2b0
  435400:	bl	406dc0 <printf@plt>
  435404:	ldr	w0, [sp, #28]
  435408:	add	w0, w0, #0x1
  43540c:	str	w0, [sp, #28]
  435410:	ldr	x0, [sp, #32]
  435414:	ldr	x1, [x0, #32]
  435418:	ldr	w0, [sp, #28]
  43541c:	lsl	x0, x0, #3
  435420:	add	x0, x1, x0
  435424:	ldr	x0, [x0]
  435428:	cmp	x0, #0x0
  43542c:	b.ne	4353a4 <print_vpath_data_base@@Base+0x5c>  // b.any
  435430:	ldr	x0, [sp, #32]
  435434:	ldr	x0, [x0]
  435438:	str	x0, [sp, #32]
  43543c:	ldr	x0, [sp, #32]
  435440:	cmp	x0, #0x0
  435444:	b.ne	435378 <print_vpath_data_base@@Base+0x30>  // b.any
  435448:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  43544c:	add	x0, x0, #0x9d8
  435450:	ldr	x0, [x0]
  435454:	cmp	x0, #0x0
  435458:	b.ne	435470 <print_vpath_data_base@@Base+0x128>  // b.any
  43545c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435460:	add	x0, x0, #0x2b8
  435464:	bl	406e40 <gettext@plt>
  435468:	bl	406b60 <puts@plt>
  43546c:	b	435484 <print_vpath_data_base@@Base+0x13c>
  435470:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435474:	add	x0, x0, #0x2d8
  435478:	bl	406e40 <gettext@plt>
  43547c:	ldr	w1, [sp, #44]
  435480:	bl	406dc0 <printf@plt>
  435484:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  435488:	add	x0, x0, #0x9e0
  43548c:	ldr	x0, [x0]
  435490:	cmp	x0, #0x0
  435494:	b.ne	4354ac <print_vpath_data_base@@Base+0x164>  // b.any
  435498:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43549c:	add	x0, x0, #0x2f8
  4354a0:	bl	406e40 <gettext@plt>
  4354a4:	bl	406b60 <puts@plt>
  4354a8:	b	435570 <print_vpath_data_base@@Base+0x228>
  4354ac:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4354b0:	add	x0, x0, #0x9e0
  4354b4:	ldr	x0, [x0]
  4354b8:	ldr	x0, [x0, #32]
  4354bc:	str	x0, [sp, #16]
  4354c0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4354c4:	add	x0, x0, #0x328
  4354c8:	bl	406e40 <gettext@plt>
  4354cc:	mov	x2, x0
  4354d0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4354d4:	add	x0, x0, #0x400
  4354d8:	ldr	x0, [x0]
  4354dc:	mov	x1, x0
  4354e0:	mov	x0, x2
  4354e4:	bl	406700 <fputs@plt>
  4354e8:	str	wzr, [sp, #24]
  4354ec:	b	435554 <print_vpath_data_base@@Base+0x20c>
  4354f0:	ldr	w0, [sp, #24]
  4354f4:	lsl	x0, x0, #3
  4354f8:	ldr	x1, [sp, #16]
  4354fc:	add	x0, x1, x0
  435500:	ldr	x3, [x0]
  435504:	ldr	w0, [sp, #24]
  435508:	add	w0, w0, #0x1
  43550c:	mov	w0, w0
  435510:	lsl	x0, x0, #3
  435514:	ldr	x1, [sp, #16]
  435518:	add	x0, x1, x0
  43551c:	ldr	x0, [x0]
  435520:	cmp	x0, #0x0
  435524:	b.ne	435530 <print_vpath_data_base@@Base+0x1e8>  // b.any
  435528:	mov	w0, #0xa                   	// #10
  43552c:	b	435534 <print_vpath_data_base@@Base+0x1ec>
  435530:	mov	w0, #0x3a                  	// #58
  435534:	mov	w2, w0
  435538:	mov	x1, x3
  43553c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435540:	add	x0, x0, #0x2b0
  435544:	bl	406dc0 <printf@plt>
  435548:	ldr	w0, [sp, #24]
  43554c:	add	w0, w0, #0x1
  435550:	str	w0, [sp, #24]
  435554:	ldr	w0, [sp, #24]
  435558:	lsl	x0, x0, #3
  43555c:	ldr	x1, [sp, #16]
  435560:	add	x0, x1, x0
  435564:	ldr	x0, [x0]
  435568:	cmp	x0, #0x0
  43556c:	b.ne	4354f0 <print_vpath_data_base@@Base+0x1a8>  // b.any
  435570:	nop
  435574:	ldp	x29, x30, [sp], #48
  435578:	ret
  43557c:	mov	w0, #0x0                   	// #0
  435580:	ret
  435584:	stp	x29, x30, [sp, #-48]!
  435588:	mov	x29, sp
  43558c:	str	w0, [sp, #28]
  435590:	str	w1, [sp, #24]
  435594:	nop
  435598:	mov	w1, #0x3                   	// #3
  43559c:	ldr	w0, [sp, #28]
  4355a0:	bl	436450 <rpl_fcntl@@Base>
  4355a4:	str	w0, [sp, #44]
  4355a8:	ldr	w0, [sp, #44]
  4355ac:	cmn	w0, #0x1
  4355b0:	b.ne	4355c4 <print_vpath_data_base@@Base+0x27c>  // b.any
  4355b4:	bl	406dd0 <__errno_location@plt>
  4355b8:	ldr	w0, [x0]
  4355bc:	cmp	w0, #0x4
  4355c0:	b.eq	435598 <print_vpath_data_base@@Base+0x250>  // b.none
  4355c4:	ldr	w0, [sp, #44]
  4355c8:	cmp	w0, #0x0
  4355cc:	b.lt	435640 <print_vpath_data_base@@Base+0x2f8>  // b.tstop
  4355d0:	ldr	w0, [sp, #24]
  4355d4:	cmp	w0, #0x0
  4355d8:	b.eq	4355e8 <print_vpath_data_base@@Base+0x2a0>  // b.none
  4355dc:	ldr	w0, [sp, #44]
  4355e0:	and	w0, w0, #0xfffff7ff
  4355e4:	b	4355f0 <print_vpath_data_base@@Base+0x2a8>
  4355e8:	ldr	w0, [sp, #44]
  4355ec:	orr	w0, w0, #0x800
  4355f0:	str	w0, [sp, #44]
  4355f4:	nop
  4355f8:	ldr	w2, [sp, #44]
  4355fc:	mov	w1, #0x4                   	// #4
  435600:	ldr	w0, [sp, #28]
  435604:	bl	436450 <rpl_fcntl@@Base>
  435608:	str	w0, [sp, #40]
  43560c:	ldr	w0, [sp, #40]
  435610:	cmn	w0, #0x1
  435614:	b.ne	435628 <print_vpath_data_base@@Base+0x2e0>  // b.any
  435618:	bl	406dd0 <__errno_location@plt>
  43561c:	ldr	w0, [x0]
  435620:	cmp	w0, #0x4
  435624:	b.eq	4355f8 <print_vpath_data_base@@Base+0x2b0>  // b.none
  435628:	ldr	w0, [sp, #40]
  43562c:	cmp	w0, #0x0
  435630:	b.ge	435640 <print_vpath_data_base@@Base+0x2f8>  // b.tcont
  435634:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435638:	add	x0, x0, #0x358
  43563c:	bl	424340 <pfatal_with_name@@Base>
  435640:	nop
  435644:	ldp	x29, x30, [sp], #48
  435648:	ret

000000000043564c <jobserver_setup@@Base>:
  43564c:	stp	x29, x30, [sp, #-48]!
  435650:	mov	x29, sp
  435654:	str	w0, [sp, #28]
  435658:	nop
  43565c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435660:	add	x0, x0, #0x3d0
  435664:	bl	4067b0 <pipe@plt>
  435668:	str	w0, [sp, #44]
  43566c:	ldr	w0, [sp, #44]
  435670:	cmn	w0, #0x1
  435674:	b.ne	435688 <jobserver_setup@@Base+0x3c>  // b.any
  435678:	bl	406dd0 <__errno_location@plt>
  43567c:	ldr	w0, [x0]
  435680:	cmp	w0, #0x4
  435684:	b.eq	43565c <jobserver_setup@@Base+0x10>  // b.none
  435688:	ldr	w0, [sp, #44]
  43568c:	cmp	w0, #0x0
  435690:	b.ge	4356a4 <jobserver_setup@@Base+0x58>  // b.tcont
  435694:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435698:	add	x0, x0, #0x370
  43569c:	bl	406e40 <gettext@plt>
  4356a0:	bl	424340 <pfatal_with_name@@Base>
  4356a4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4356a8:	add	x0, x0, #0x3d0
  4356ac:	ldr	w0, [x0]
  4356b0:	bl	435f9c <fd_noinherit@@Base>
  4356b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4356b8:	add	x0, x0, #0x3d0
  4356bc:	ldr	w0, [x0, #4]
  4356c0:	bl	435f9c <fd_noinherit@@Base>
  4356c4:	bl	43557c <print_vpath_data_base@@Base+0x234>
  4356c8:	cmp	w0, #0x0
  4356cc:	b.ge	435740 <jobserver_setup@@Base+0xf4>  // b.tcont
  4356d0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4356d4:	add	x0, x0, #0x388
  4356d8:	bl	406e40 <gettext@plt>
  4356dc:	bl	424340 <pfatal_with_name@@Base>
  4356e0:	nop
  4356e4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4356e8:	add	x0, x0, #0x3d0
  4356ec:	ldr	w3, [x0, #4]
  4356f0:	mov	x2, #0x1                   	// #1
  4356f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4356f8:	add	x1, x0, #0x3dc
  4356fc:	mov	w0, w3
  435700:	bl	406b10 <write@plt>
  435704:	str	w0, [sp, #44]
  435708:	ldr	w0, [sp, #44]
  43570c:	cmn	w0, #0x1
  435710:	b.ne	435724 <jobserver_setup@@Base+0xd8>  // b.any
  435714:	bl	406dd0 <__errno_location@plt>
  435718:	ldr	w0, [x0]
  43571c:	cmp	w0, #0x4
  435720:	b.eq	4356e4 <jobserver_setup@@Base+0x98>  // b.none
  435724:	ldr	w0, [sp, #44]
  435728:	cmp	w0, #0x1
  43572c:	b.eq	435740 <jobserver_setup@@Base+0xf4>  // b.none
  435730:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435734:	add	x0, x0, #0x3a0
  435738:	bl	406e40 <gettext@plt>
  43573c:	bl	424340 <pfatal_with_name@@Base>
  435740:	ldr	w0, [sp, #28]
  435744:	sub	w1, w0, #0x1
  435748:	str	w1, [sp, #28]
  43574c:	cmp	w0, #0x0
  435750:	b.ne	4356e0 <jobserver_setup@@Base+0x94>  // b.any
  435754:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435758:	add	x0, x0, #0x3d0
  43575c:	ldr	w0, [x0]
  435760:	mov	w1, #0x0                   	// #0
  435764:	bl	435584 <print_vpath_data_base@@Base+0x23c>
  435768:	mov	w0, #0x1                   	// #1
  43576c:	ldp	x29, x30, [sp], #48
  435770:	ret

0000000000435774 <jobserver_parse_auth@@Base>:
  435774:	stp	x29, x30, [sp, #-48]!
  435778:	mov	x29, sp
  43577c:	str	x19, [sp, #16]
  435780:	str	x0, [sp, #40]
  435784:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435788:	add	x3, x0, #0x3d4
  43578c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435790:	add	x2, x0, #0x3d0
  435794:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435798:	add	x1, x0, #0x3b8
  43579c:	ldr	x0, [sp, #40]
  4357a0:	bl	406d50 <__isoc99_sscanf@plt>
  4357a4:	cmp	w0, #0x2
  4357a8:	b.eq	4357d8 <jobserver_parse_auth@@Base+0x64>  // b.none
  4357ac:	ldr	x0, [sp, #40]
  4357b0:	bl	4066f0 <strlen@plt>
  4357b4:	mov	x19, x0
  4357b8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4357bc:	add	x0, x0, #0x3c0
  4357c0:	bl	406e40 <gettext@plt>
  4357c4:	ldr	x3, [sp, #40]
  4357c8:	mov	x2, x0
  4357cc:	mov	x1, x19
  4357d0:	mov	x0, #0x0                   	// #0
  4357d4:	bl	424098 <fatal@@Base>
  4357d8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4357dc:	add	x0, x0, #0x6dc
  4357e0:	ldr	w0, [x0]
  4357e4:	and	w0, w0, #0x4
  4357e8:	cmp	w0, #0x0
  4357ec:	b.eq	435834 <jobserver_parse_auth@@Base+0xc0>  // b.none
  4357f0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4357f4:	add	x0, x0, #0x3f8
  4357f8:	bl	406e40 <gettext@plt>
  4357fc:	mov	x3, x0
  435800:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435804:	add	x0, x0, #0x3d0
  435808:	ldr	w1, [x0]
  43580c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435810:	add	x0, x0, #0x3d0
  435814:	ldr	w0, [x0, #4]
  435818:	mov	w2, w0
  43581c:	mov	x0, x3
  435820:	bl	406dc0 <printf@plt>
  435824:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435828:	add	x0, x0, #0x400
  43582c:	ldr	x0, [x0]
  435830:	bl	406c90 <fflush@plt>
  435834:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435838:	add	x0, x0, #0x3d0
  43583c:	ldr	w0, [x0]
  435840:	mov	w1, #0x1                   	// #1
  435844:	bl	436450 <rpl_fcntl@@Base>
  435848:	cmn	w0, #0x1
  43584c:	b.eq	435878 <jobserver_parse_auth@@Base+0x104>  // b.none
  435850:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435854:	add	x0, x0, #0x3d0
  435858:	ldr	w0, [x0, #4]
  43585c:	mov	w1, #0x1                   	// #1
  435860:	bl	436450 <rpl_fcntl@@Base>
  435864:	cmn	w0, #0x1
  435868:	b.eq	435878 <jobserver_parse_auth@@Base+0x104>  // b.none
  43586c:	bl	43557c <print_vpath_data_base@@Base+0x234>
  435870:	cmp	w0, #0x0
  435874:	b.ge	4358c8 <jobserver_parse_auth@@Base+0x154>  // b.tcont
  435878:	bl	406dd0 <__errno_location@plt>
  43587c:	ldr	w0, [x0]
  435880:	cmp	w0, #0x9
  435884:	b.eq	435898 <jobserver_parse_auth@@Base+0x124>  // b.none
  435888:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43588c:	add	x0, x0, #0x418
  435890:	bl	406e40 <gettext@plt>
  435894:	bl	424340 <pfatal_with_name@@Base>
  435898:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43589c:	add	x0, x0, #0x3d0
  4358a0:	mov	w1, #0xffffffff            	// #-1
  4358a4:	str	w1, [x0, #4]
  4358a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4358ac:	add	x0, x0, #0x3d0
  4358b0:	ldr	w1, [x0, #4]
  4358b4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4358b8:	add	x0, x0, #0x3d0
  4358bc:	str	w1, [x0]
  4358c0:	mov	w0, #0x0                   	// #0
  4358c4:	b	4358e0 <jobserver_parse_auth@@Base+0x16c>
  4358c8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4358cc:	add	x0, x0, #0x3d0
  4358d0:	ldr	w0, [x0]
  4358d4:	mov	w1, #0x0                   	// #0
  4358d8:	bl	435584 <print_vpath_data_base@@Base+0x23c>
  4358dc:	mov	w0, #0x1                   	// #1
  4358e0:	ldr	x19, [sp, #16]
  4358e4:	ldp	x29, x30, [sp], #48
  4358e8:	ret

00000000004358ec <jobserver_get_auth@@Base>:
  4358ec:	stp	x29, x30, [sp, #-32]!
  4358f0:	mov	x29, sp
  4358f4:	mov	x0, #0x2a                  	// #42
  4358f8:	bl	42268c <xmalloc@@Base>
  4358fc:	str	x0, [sp, #24]
  435900:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435904:	add	x0, x0, #0x3d0
  435908:	ldr	w1, [x0]
  43590c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435910:	add	x0, x0, #0x3d0
  435914:	ldr	w0, [x0, #4]
  435918:	mov	w3, w0
  43591c:	mov	w2, w1
  435920:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435924:	add	x1, x0, #0x3b8
  435928:	ldr	x0, [sp, #24]
  43592c:	bl	406790 <sprintf@plt>
  435930:	ldr	x0, [sp, #24]
  435934:	ldp	x29, x30, [sp], #32
  435938:	ret

000000000043593c <jobserver_enabled@@Base>:
  43593c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435940:	add	x0, x0, #0x3d0
  435944:	ldr	w0, [x0]
  435948:	mvn	w0, w0
  43594c:	lsr	w0, w0, #31
  435950:	and	w0, w0, #0xff
  435954:	ret

0000000000435958 <jobserver_clear@@Base>:
  435958:	stp	x29, x30, [sp, #-16]!
  43595c:	mov	x29, sp
  435960:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435964:	add	x0, x0, #0x3d0
  435968:	ldr	w0, [x0]
  43596c:	cmp	w0, #0x0
  435970:	b.lt	435984 <jobserver_clear@@Base+0x2c>  // b.tstop
  435974:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435978:	add	x0, x0, #0x3d0
  43597c:	ldr	w0, [x0]
  435980:	bl	406ac0 <close@plt>
  435984:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435988:	add	x0, x0, #0x3d0
  43598c:	ldr	w0, [x0, #4]
  435990:	cmp	w0, #0x0
  435994:	b.lt	4359a8 <jobserver_clear@@Base+0x50>  // b.tstop
  435998:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  43599c:	add	x0, x0, #0x3d0
  4359a0:	ldr	w0, [x0, #4]
  4359a4:	bl	406ac0 <close@plt>
  4359a8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359ac:	add	x0, x0, #0x3d8
  4359b0:	ldr	w0, [x0]
  4359b4:	cmp	w0, #0x0
  4359b8:	b.lt	4359cc <jobserver_clear@@Base+0x74>  // b.tstop
  4359bc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359c0:	add	x0, x0, #0x3d8
  4359c4:	ldr	w0, [x0]
  4359c8:	bl	406ac0 <close@plt>
  4359cc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359d0:	add	x0, x0, #0x3d8
  4359d4:	mov	w1, #0xffffffff            	// #-1
  4359d8:	str	w1, [x0]
  4359dc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359e0:	add	x0, x0, #0x3d8
  4359e4:	ldr	w1, [x0]
  4359e8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359ec:	add	x0, x0, #0x3d0
  4359f0:	str	w1, [x0, #4]
  4359f4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  4359f8:	add	x0, x0, #0x3d0
  4359fc:	ldr	w1, [x0, #4]
  435a00:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435a04:	add	x0, x0, #0x3d0
  435a08:	str	w1, [x0]
  435a0c:	nop
  435a10:	ldp	x29, x30, [sp], #16
  435a14:	ret

0000000000435a18 <jobserver_release@@Base>:
  435a18:	stp	x29, x30, [sp, #-48]!
  435a1c:	mov	x29, sp
  435a20:	str	w0, [sp, #28]
  435a24:	nop
  435a28:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435a2c:	add	x0, x0, #0x3d0
  435a30:	ldr	w3, [x0, #4]
  435a34:	mov	x2, #0x1                   	// #1
  435a38:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435a3c:	add	x1, x0, #0x3dc
  435a40:	mov	w0, w3
  435a44:	bl	406b10 <write@plt>
  435a48:	str	w0, [sp, #44]
  435a4c:	ldr	w0, [sp, #44]
  435a50:	cmn	w0, #0x1
  435a54:	b.ne	435a68 <jobserver_release@@Base+0x50>  // b.any
  435a58:	bl	406dd0 <__errno_location@plt>
  435a5c:	ldr	w0, [x0]
  435a60:	cmp	w0, #0x4
  435a64:	b.eq	435a28 <jobserver_release@@Base+0x10>  // b.none
  435a68:	ldr	w0, [sp, #44]
  435a6c:	cmp	w0, #0x1
  435a70:	b.eq	435aa4 <jobserver_release@@Base+0x8c>  // b.none
  435a74:	ldr	w0, [sp, #28]
  435a78:	cmp	w0, #0x0
  435a7c:	b.eq	435a90 <jobserver_release@@Base+0x78>  // b.none
  435a80:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435a84:	add	x0, x0, #0x430
  435a88:	bl	406e40 <gettext@plt>
  435a8c:	bl	424340 <pfatal_with_name@@Base>
  435a90:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435a94:	add	x1, x0, #0x440
  435a98:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435a9c:	add	x0, x0, #0x448
  435aa0:	bl	4242c0 <perror_with_name@@Base>
  435aa4:	nop
  435aa8:	ldp	x29, x30, [sp], #48
  435aac:	ret

0000000000435ab0 <jobserver_acquire_all@@Base>:
  435ab0:	stp	x29, x30, [sp, #-32]!
  435ab4:	mov	x29, sp
  435ab8:	str	wzr, [sp, #28]
  435abc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435ac0:	add	x0, x0, #0x3d0
  435ac4:	ldr	w0, [x0]
  435ac8:	mov	w1, #0x1                   	// #1
  435acc:	bl	435584 <print_vpath_data_base@@Base+0x23c>
  435ad0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435ad4:	add	x0, x0, #0x3d0
  435ad8:	ldr	w0, [x0, #4]
  435adc:	bl	406ac0 <close@plt>
  435ae0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435ae4:	add	x0, x0, #0x3d0
  435ae8:	mov	w1, #0xffffffff            	// #-1
  435aec:	str	w1, [x0, #4]
  435af0:	nop
  435af4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435af8:	add	x0, x0, #0x3d0
  435afc:	ldr	w0, [x0]
  435b00:	add	x1, sp, #0x17
  435b04:	mov	x2, #0x1                   	// #1
  435b08:	bl	406cf0 <read@plt>
  435b0c:	str	w0, [sp, #24]
  435b10:	ldr	w0, [sp, #24]
  435b14:	cmn	w0, #0x1
  435b18:	b.ne	435b2c <jobserver_acquire_all@@Base+0x7c>  // b.any
  435b1c:	bl	406dd0 <__errno_location@plt>
  435b20:	ldr	w0, [x0]
  435b24:	cmp	w0, #0x4
  435b28:	b.eq	435af4 <jobserver_acquire_all@@Base+0x44>  // b.none
  435b2c:	ldr	w0, [sp, #24]
  435b30:	cmp	w0, #0x1
  435b34:	b.eq	435b40 <jobserver_acquire_all@@Base+0x90>  // b.none
  435b38:	ldr	w0, [sp, #28]
  435b3c:	b	435b50 <jobserver_acquire_all@@Base+0xa0>
  435b40:	ldr	w0, [sp, #28]
  435b44:	add	w0, w0, #0x1
  435b48:	str	w0, [sp, #28]
  435b4c:	b	435af0 <jobserver_acquire_all@@Base+0x40>
  435b50:	ldp	x29, x30, [sp], #32
  435b54:	ret

0000000000435b58 <jobserver_pre_child@@Base>:
  435b58:	stp	x29, x30, [sp, #-32]!
  435b5c:	mov	x29, sp
  435b60:	str	w0, [sp, #28]
  435b64:	ldr	w0, [sp, #28]
  435b68:	cmp	w0, #0x0
  435b6c:	b.eq	435ba4 <jobserver_pre_child@@Base+0x4c>  // b.none
  435b70:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435b74:	add	x0, x0, #0x3d0
  435b78:	ldr	w0, [x0]
  435b7c:	cmp	w0, #0x0
  435b80:	b.lt	435ba4 <jobserver_pre_child@@Base+0x4c>  // b.tstop
  435b84:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435b88:	add	x0, x0, #0x3d0
  435b8c:	ldr	w0, [x0]
  435b90:	bl	435f08 <fd_inherit@@Base>
  435b94:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435b98:	add	x0, x0, #0x3d0
  435b9c:	ldr	w0, [x0, #4]
  435ba0:	bl	435f08 <fd_inherit@@Base>
  435ba4:	nop
  435ba8:	ldp	x29, x30, [sp], #32
  435bac:	ret

0000000000435bb0 <jobserver_post_child@@Base>:
  435bb0:	stp	x29, x30, [sp, #-32]!
  435bb4:	mov	x29, sp
  435bb8:	str	w0, [sp, #28]
  435bbc:	ldr	w0, [sp, #28]
  435bc0:	cmp	w0, #0x0
  435bc4:	b.eq	435bfc <jobserver_post_child@@Base+0x4c>  // b.none
  435bc8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435bcc:	add	x0, x0, #0x3d0
  435bd0:	ldr	w0, [x0]
  435bd4:	cmp	w0, #0x0
  435bd8:	b.lt	435bfc <jobserver_post_child@@Base+0x4c>  // b.tstop
  435bdc:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435be0:	add	x0, x0, #0x3d0
  435be4:	ldr	w0, [x0]
  435be8:	bl	435f9c <fd_noinherit@@Base>
  435bec:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435bf0:	add	x0, x0, #0x3d0
  435bf4:	ldr	w0, [x0, #4]
  435bf8:	bl	435f9c <fd_noinherit@@Base>
  435bfc:	nop
  435c00:	ldp	x29, x30, [sp], #32
  435c04:	ret

0000000000435c08 <jobserver_signal@@Base>:
  435c08:	stp	x29, x30, [sp, #-16]!
  435c0c:	mov	x29, sp
  435c10:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435c14:	add	x0, x0, #0x3d8
  435c18:	ldr	w0, [x0]
  435c1c:	cmp	w0, #0x0
  435c20:	b.lt	435c44 <jobserver_signal@@Base+0x3c>  // b.tstop
  435c24:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435c28:	add	x0, x0, #0x3d8
  435c2c:	ldr	w0, [x0]
  435c30:	bl	406ac0 <close@plt>
  435c34:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435c38:	add	x0, x0, #0x3d8
  435c3c:	mov	w1, #0xffffffff            	// #-1
  435c40:	str	w1, [x0]
  435c44:	nop
  435c48:	ldp	x29, x30, [sp], #16
  435c4c:	ret

0000000000435c50 <jobserver_pre_acquire@@Base>:
  435c50:	stp	x29, x30, [sp, #-16]!
  435c54:	mov	x29, sp
  435c58:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435c5c:	add	x0, x0, #0x3d8
  435c60:	ldr	w0, [x0]
  435c64:	cmp	w0, #0x0
  435c68:	b.ge	435c9c <jobserver_pre_acquire@@Base+0x4c>  // b.tcont
  435c6c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435c70:	add	x0, x0, #0x3d0
  435c74:	ldr	w0, [x0]
  435c78:	cmp	w0, #0x0
  435c7c:	b.lt	435c9c <jobserver_pre_acquire@@Base+0x4c>  // b.tstop
  435c80:	bl	43557c <print_vpath_data_base@@Base+0x234>
  435c84:	cmp	w0, #0x0
  435c88:	b.ge	435c9c <jobserver_pre_acquire@@Base+0x4c>  // b.tcont
  435c8c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435c90:	add	x0, x0, #0x388
  435c94:	bl	406e40 <gettext@plt>
  435c98:	bl	424340 <pfatal_with_name@@Base>
  435c9c:	nop
  435ca0:	ldp	x29, x30, [sp], #16
  435ca4:	ret

0000000000435ca8 <jobserver_acquire@@Base>:
  435ca8:	stp	x29, x30, [sp, #-352]!
  435cac:	mov	x29, sp
  435cb0:	str	w0, [sp, #28]
  435cb4:	str	xzr, [sp, #344]
  435cb8:	add	x0, sp, #0xb0
  435cbc:	bl	406970 <sigemptyset@plt>
  435cc0:	ldr	w0, [sp, #28]
  435cc4:	cmp	w0, #0x0
  435cc8:	b.eq	435ce0 <jobserver_acquire@@Base+0x38>  // b.none
  435ccc:	mov	x0, #0x1                   	// #1
  435cd0:	str	x0, [sp, #304]
  435cd4:	str	xzr, [sp, #312]
  435cd8:	add	x0, sp, #0x130
  435cdc:	str	x0, [sp, #344]
  435ce0:	add	x0, sp, #0x28
  435ce4:	str	x0, [sp, #328]
  435ce8:	str	wzr, [sp, #340]
  435cec:	b	435d08 <jobserver_acquire@@Base+0x60>
  435cf0:	ldr	x0, [sp, #328]
  435cf4:	ldr	w1, [sp, #340]
  435cf8:	str	xzr, [x0, x1, lsl #3]
  435cfc:	ldr	w0, [sp, #340]
  435d00:	add	w0, w0, #0x1
  435d04:	str	w0, [sp, #340]
  435d08:	ldr	w0, [sp, #340]
  435d0c:	cmp	w0, #0xf
  435d10:	b.ls	435cf0 <jobserver_acquire@@Base+0x48>  // b.plast
  435d14:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435d18:	add	x0, x0, #0x3d0
  435d1c:	ldr	w0, [x0]
  435d20:	add	w1, w0, #0x3f
  435d24:	cmp	w0, #0x0
  435d28:	csel	w0, w1, w0, lt  // lt = tstop
  435d2c:	asr	w0, w0, #6
  435d30:	mov	w3, w0
  435d34:	sxtw	x0, w3
  435d38:	lsl	x0, x0, #3
  435d3c:	add	x1, sp, #0x28
  435d40:	ldr	x1, [x1, x0]
  435d44:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435d48:	add	x0, x0, #0x3d0
  435d4c:	ldr	w0, [x0]
  435d50:	negs	w2, w0
  435d54:	and	w0, w0, #0x3f
  435d58:	and	w2, w2, #0x3f
  435d5c:	csneg	w0, w0, w2, mi  // mi = first
  435d60:	mov	x2, #0x1                   	// #1
  435d64:	lsl	x0, x2, x0
  435d68:	orr	x2, x1, x0
  435d6c:	sxtw	x0, w3
  435d70:	lsl	x0, x0, #3
  435d74:	add	x1, sp, #0x28
  435d78:	str	x2, [x1, x0]
  435d7c:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435d80:	add	x0, x0, #0x3d0
  435d84:	ldr	w0, [x0]
  435d88:	add	w0, w0, #0x1
  435d8c:	add	x2, sp, #0xb0
  435d90:	add	x1, sp, #0x28
  435d94:	mov	x5, x2
  435d98:	ldr	x4, [sp, #344]
  435d9c:	mov	x3, #0x0                   	// #0
  435da0:	mov	x2, #0x0                   	// #0
  435da4:	bl	406a30 <pselect@plt>
  435da8:	str	w0, [sp, #324]
  435dac:	ldr	w0, [sp, #324]
  435db0:	cmp	w0, #0x0
  435db4:	b.ge	435e08 <jobserver_acquire@@Base+0x160>  // b.tcont
  435db8:	bl	406dd0 <__errno_location@plt>
  435dbc:	ldr	w0, [x0]
  435dc0:	cmp	w0, #0x4
  435dc4:	b.eq	435dd4 <jobserver_acquire@@Base+0x12c>  // b.none
  435dc8:	cmp	w0, #0x9
  435dcc:	b.eq	435ddc <jobserver_acquire@@Base+0x134>  // b.none
  435dd0:	b	435df8 <jobserver_acquire@@Base+0x150>
  435dd4:	mov	w0, #0x0                   	// #0
  435dd8:	b	435e98 <jobserver_acquire@@Base+0x1f0>
  435ddc:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435de0:	add	x0, x0, #0x450
  435de4:	bl	406e40 <gettext@plt>
  435de8:	mov	x2, x0
  435dec:	mov	x1, #0x0                   	// #0
  435df0:	mov	x0, #0x0                   	// #0
  435df4:	bl	424098 <fatal@@Base>
  435df8:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435dfc:	add	x0, x0, #0x468
  435e00:	bl	406e40 <gettext@plt>
  435e04:	bl	424340 <pfatal_with_name@@Base>
  435e08:	ldr	w0, [sp, #324]
  435e0c:	cmp	w0, #0x0
  435e10:	b.ne	435e1c <jobserver_acquire@@Base+0x174>  // b.any
  435e14:	mov	w0, #0x0                   	// #0
  435e18:	b	435e98 <jobserver_acquire@@Base+0x1f0>
  435e1c:	nop
  435e20:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435e24:	add	x0, x0, #0x3d0
  435e28:	ldr	w0, [x0]
  435e2c:	add	x1, sp, #0xaf
  435e30:	mov	x2, #0x1                   	// #1
  435e34:	bl	406cf0 <read@plt>
  435e38:	str	w0, [sp, #324]
  435e3c:	ldr	w0, [sp, #324]
  435e40:	cmn	w0, #0x1
  435e44:	b.ne	435e58 <jobserver_acquire@@Base+0x1b0>  // b.any
  435e48:	bl	406dd0 <__errno_location@plt>
  435e4c:	ldr	w0, [x0]
  435e50:	cmp	w0, #0x4
  435e54:	b.eq	435e20 <jobserver_acquire@@Base+0x178>  // b.none
  435e58:	ldr	w0, [sp, #324]
  435e5c:	cmp	w0, #0x0
  435e60:	b.ge	435e88 <jobserver_acquire@@Base+0x1e0>  // b.tcont
  435e64:	bl	406dd0 <__errno_location@plt>
  435e68:	ldr	w0, [x0]
  435e6c:	cmp	w0, #0xb
  435e70:	b.ne	435e78 <jobserver_acquire@@Base+0x1d0>  // b.any
  435e74:	b	435ce0 <jobserver_acquire@@Base+0x38>
  435e78:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  435e7c:	add	x0, x0, #0x480
  435e80:	bl	406e40 <gettext@plt>
  435e84:	bl	424340 <pfatal_with_name@@Base>
  435e88:	ldr	w0, [sp, #324]
  435e8c:	cmp	w0, #0x0
  435e90:	cset	w0, gt
  435e94:	and	w0, w0, #0xff
  435e98:	ldp	x29, x30, [sp], #352
  435e9c:	ret

0000000000435ea0 <get_bad_stdin@@Base>:
  435ea0:	stp	x29, x30, [sp, #-32]!
  435ea4:	mov	x29, sp
  435ea8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435eac:	add	x0, x0, #0x3e0
  435eb0:	ldr	w0, [x0]
  435eb4:	cmn	w0, #0x1
  435eb8:	b.ne	435ef4 <get_bad_stdin@@Base+0x54>  // b.any
  435ebc:	add	x0, sp, #0x18
  435ec0:	bl	4067b0 <pipe@plt>
  435ec4:	cmp	w0, #0x0
  435ec8:	b.ne	435ef4 <get_bad_stdin@@Base+0x54>  // b.any
  435ecc:	ldr	w0, [sp, #28]
  435ed0:	bl	406ac0 <close@plt>
  435ed4:	ldr	w1, [sp, #24]
  435ed8:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435edc:	add	x0, x0, #0x3e0
  435ee0:	str	w1, [x0]
  435ee4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435ee8:	add	x0, x0, #0x3e0
  435eec:	ldr	w0, [x0]
  435ef0:	bl	435f9c <fd_noinherit@@Base>
  435ef4:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  435ef8:	add	x0, x0, #0x3e0
  435efc:	ldr	w0, [x0]
  435f00:	ldp	x29, x30, [sp], #32
  435f04:	ret

0000000000435f08 <fd_inherit@@Base>:
  435f08:	stp	x29, x30, [sp, #-48]!
  435f0c:	mov	x29, sp
  435f10:	str	w0, [sp, #28]
  435f14:	nop
  435f18:	mov	w1, #0x1                   	// #1
  435f1c:	ldr	w0, [sp, #28]
  435f20:	bl	436450 <rpl_fcntl@@Base>
  435f24:	str	w0, [sp, #44]
  435f28:	ldr	w0, [sp, #44]
  435f2c:	cmn	w0, #0x1
  435f30:	b.ne	435f44 <fd_inherit@@Base+0x3c>  // b.any
  435f34:	bl	406dd0 <__errno_location@plt>
  435f38:	ldr	w0, [x0]
  435f3c:	cmp	w0, #0x4
  435f40:	b.eq	435f18 <fd_inherit@@Base+0x10>  // b.none
  435f44:	ldr	w0, [sp, #44]
  435f48:	cmp	w0, #0x0
  435f4c:	b.lt	435f90 <fd_inherit@@Base+0x88>  // b.tstop
  435f50:	ldr	w0, [sp, #44]
  435f54:	and	w0, w0, #0xfffffffe
  435f58:	str	w0, [sp, #44]
  435f5c:	nop
  435f60:	ldr	w2, [sp, #44]
  435f64:	mov	w1, #0x2                   	// #2
  435f68:	ldr	w0, [sp, #28]
  435f6c:	bl	436450 <rpl_fcntl@@Base>
  435f70:	str	w0, [sp, #40]
  435f74:	ldr	w0, [sp, #40]
  435f78:	cmn	w0, #0x1
  435f7c:	b.ne	435f90 <fd_inherit@@Base+0x88>  // b.any
  435f80:	bl	406dd0 <__errno_location@plt>
  435f84:	ldr	w0, [x0]
  435f88:	cmp	w0, #0x4
  435f8c:	b.eq	435f60 <fd_inherit@@Base+0x58>  // b.none
  435f90:	nop
  435f94:	ldp	x29, x30, [sp], #48
  435f98:	ret

0000000000435f9c <fd_noinherit@@Base>:
  435f9c:	stp	x29, x30, [sp, #-48]!
  435fa0:	mov	x29, sp
  435fa4:	str	w0, [sp, #28]
  435fa8:	nop
  435fac:	mov	w1, #0x1                   	// #1
  435fb0:	ldr	w0, [sp, #28]
  435fb4:	bl	436450 <rpl_fcntl@@Base>
  435fb8:	str	w0, [sp, #44]
  435fbc:	ldr	w0, [sp, #44]
  435fc0:	cmn	w0, #0x1
  435fc4:	b.ne	435fd8 <fd_noinherit@@Base+0x3c>  // b.any
  435fc8:	bl	406dd0 <__errno_location@plt>
  435fcc:	ldr	w0, [x0]
  435fd0:	cmp	w0, #0x4
  435fd4:	b.eq	435fac <fd_noinherit@@Base+0x10>  // b.none
  435fd8:	ldr	w0, [sp, #44]
  435fdc:	cmp	w0, #0x0
  435fe0:	b.lt	436024 <fd_noinherit@@Base+0x88>  // b.tstop
  435fe4:	ldr	w0, [sp, #44]
  435fe8:	orr	w0, w0, #0x1
  435fec:	str	w0, [sp, #44]
  435ff0:	nop
  435ff4:	ldr	w2, [sp, #44]
  435ff8:	mov	w1, #0x2                   	// #2
  435ffc:	ldr	w0, [sp, #28]
  436000:	bl	436450 <rpl_fcntl@@Base>
  436004:	str	w0, [sp, #40]
  436008:	ldr	w0, [sp, #40]
  43600c:	cmn	w0, #0x1
  436010:	b.ne	436024 <fd_noinherit@@Base+0x88>  // b.any
  436014:	bl	406dd0 <__errno_location@plt>
  436018:	ldr	w0, [x0]
  43601c:	cmp	w0, #0x4
  436020:	b.eq	435ff4 <fd_noinherit@@Base+0x58>  // b.none
  436024:	nop
  436028:	ldp	x29, x30, [sp], #48
  43602c:	ret

0000000000436030 <remote_setup@@Base>:
  436030:	nop
  436034:	ret

0000000000436038 <remote_cleanup@@Base>:
  436038:	nop
  43603c:	ret

0000000000436040 <start_remote_job_p@@Base>:
  436040:	sub	sp, sp, #0x10
  436044:	str	w0, [sp, #12]
  436048:	mov	w0, #0x0                   	// #0
  43604c:	add	sp, sp, #0x10
  436050:	ret

0000000000436054 <start_remote_job@@Base>:
  436054:	sub	sp, sp, #0x30
  436058:	str	x0, [sp, #40]
  43605c:	str	x1, [sp, #32]
  436060:	str	w2, [sp, #28]
  436064:	str	x3, [sp, #16]
  436068:	str	x4, [sp, #8]
  43606c:	str	x5, [sp]
  436070:	mov	w0, #0xffffffff            	// #-1
  436074:	add	sp, sp, #0x30
  436078:	ret

000000000043607c <remote_status@@Base>:
  43607c:	stp	x29, x30, [sp, #-48]!
  436080:	mov	x29, sp
  436084:	str	x0, [sp, #40]
  436088:	str	x1, [sp, #32]
  43608c:	str	x2, [sp, #24]
  436090:	str	w3, [sp, #20]
  436094:	bl	406dd0 <__errno_location@plt>
  436098:	mov	x1, x0
  43609c:	mov	w0, #0xa                   	// #10
  4360a0:	str	w0, [x1]
  4360a4:	mov	w0, #0xffffffff            	// #-1
  4360a8:	ldp	x29, x30, [sp], #48
  4360ac:	ret

00000000004360b0 <block_remote_children@@Base>:
  4360b0:	nop
  4360b4:	ret

00000000004360b8 <unblock_remote_children@@Base>:
  4360b8:	nop
  4360bc:	ret

00000000004360c0 <remote_kill@@Base>:
  4360c0:	sub	sp, sp, #0x10
  4360c4:	str	w0, [sp, #12]
  4360c8:	str	w1, [sp, #8]
  4360cc:	mov	w0, #0xffffffff            	// #-1
  4360d0:	add	sp, sp, #0x10
  4360d4:	ret

00000000004360d8 <find_in_given_path@@Base>:
  4360d8:	stp	x29, x30, [sp, #-192]!
  4360dc:	mov	x29, sp
  4360e0:	str	x19, [sp, #16]
  4360e4:	str	x0, [sp, #56]
  4360e8:	str	x1, [sp, #48]
  4360ec:	strb	w2, [sp, #47]
  4360f0:	strb	wzr, [sp, #191]
  4360f4:	ldr	x0, [sp, #56]
  4360f8:	str	x0, [sp, #176]
  4360fc:	b	436128 <find_in_given_path@@Base+0x50>
  436100:	ldr	x0, [sp, #176]
  436104:	ldrb	w0, [x0]
  436108:	cmp	w0, #0x2f
  43610c:	b.ne	43611c <find_in_given_path@@Base+0x44>  // b.any
  436110:	mov	w0, #0x1                   	// #1
  436114:	strb	w0, [sp, #191]
  436118:	b	436138 <find_in_given_path@@Base+0x60>
  43611c:	ldr	x0, [sp, #176]
  436120:	add	x0, x0, #0x1
  436124:	str	x0, [sp, #176]
  436128:	ldr	x0, [sp, #176]
  43612c:	ldrb	w0, [x0]
  436130:	cmp	w0, #0x0
  436134:	b.ne	436100 <find_in_given_path@@Base+0x28>  // b.any
  436138:	ldrb	w0, [sp, #191]
  43613c:	cmp	w0, #0x0
  436140:	b.eq	436220 <find_in_given_path@@Base+0x148>  // b.none
  436144:	ldrb	w0, [sp, #47]
  436148:	cmp	w0, #0x0
  43614c:	b.eq	436158 <find_in_given_path@@Base+0x80>  // b.none
  436150:	ldr	x0, [sp, #56]
  436154:	b	436400 <find_in_given_path@@Base+0x328>
  436158:	mov	w0, #0x2                   	// #2
  43615c:	str	w0, [sp, #172]
  436160:	str	xzr, [sp, #160]
  436164:	b	4361fc <find_in_given_path@@Base+0x124>
  436168:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  43616c:	add	x0, x0, #0x490
  436170:	str	x0, [sp, #80]
  436174:	ldr	x2, [sp, #80]
  436178:	ldr	x1, [sp, #56]
  43617c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  436180:	add	x0, x0, #0x490
  436184:	bl	43640c <xconcatenated_filename@@Base>
  436188:	str	x0, [sp, #72]
  43618c:	mov	w1, #0x1                   	// #1
  436190:	ldr	x0, [sp, #72]
  436194:	bl	406870 <eaccess@plt>
  436198:	cmp	w0, #0x0
  43619c:	b.ne	4361cc <find_in_given_path@@Base+0xf4>  // b.any
  4361a0:	ldr	x1, [sp, #56]
  4361a4:	ldr	x0, [sp, #72]
  4361a8:	bl	406bc0 <strcmp@plt>
  4361ac:	cmp	w0, #0x0
  4361b0:	b.ne	4361c4 <find_in_given_path@@Base+0xec>  // b.any
  4361b4:	ldr	x0, [sp, #72]
  4361b8:	bl	406c00 <free@plt>
  4361bc:	ldr	x0, [sp, #56]
  4361c0:	b	436400 <find_in_given_path@@Base+0x328>
  4361c4:	ldr	x0, [sp, #72]
  4361c8:	b	436400 <find_in_given_path@@Base+0x328>
  4361cc:	bl	406dd0 <__errno_location@plt>
  4361d0:	ldr	w0, [x0]
  4361d4:	cmp	w0, #0x2
  4361d8:	b.eq	4361e8 <find_in_given_path@@Base+0x110>  // b.none
  4361dc:	bl	406dd0 <__errno_location@plt>
  4361e0:	ldr	w0, [x0]
  4361e4:	str	w0, [sp, #172]
  4361e8:	ldr	x0, [sp, #72]
  4361ec:	bl	406c00 <free@plt>
  4361f0:	ldr	x0, [sp, #160]
  4361f4:	add	x0, x0, #0x1
  4361f8:	str	x0, [sp, #160]
  4361fc:	ldr	x0, [sp, #160]
  436200:	cmp	x0, #0x0
  436204:	b.eq	436168 <find_in_given_path@@Base+0x90>  // b.none
  436208:	bl	406dd0 <__errno_location@plt>
  43620c:	mov	x1, x0
  436210:	ldr	w0, [sp, #172]
  436214:	str	w0, [x1]
  436218:	mov	x0, #0x0                   	// #0
  43621c:	b	436400 <find_in_given_path@@Base+0x328>
  436220:	ldr	x0, [sp, #48]
  436224:	cmp	x0, #0x0
  436228:	b.ne	436238 <find_in_given_path@@Base+0x160>  // b.any
  43622c:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  436230:	add	x0, x0, #0x490
  436234:	str	x0, [sp, #48]
  436238:	ldr	x0, [sp, #48]
  43623c:	bl	422788 <xstrdup@@Base>
  436240:	str	x0, [sp, #104]
  436244:	mov	w0, #0x2                   	// #2
  436248:	str	w0, [sp, #156]
  43624c:	ldr	x0, [sp, #104]
  436250:	str	x0, [sp, #144]
  436254:	ldr	x0, [sp, #144]
  436258:	str	x0, [sp, #128]
  43625c:	ldr	x0, [sp, #144]
  436260:	str	x0, [sp, #136]
  436264:	b	436274 <find_in_given_path@@Base+0x19c>
  436268:	ldr	x0, [sp, #136]
  43626c:	add	x0, x0, #0x1
  436270:	str	x0, [sp, #136]
  436274:	ldr	x0, [sp, #136]
  436278:	ldrb	w0, [x0]
  43627c:	cmp	w0, #0x0
  436280:	b.eq	436294 <find_in_given_path@@Base+0x1bc>  // b.none
  436284:	ldr	x0, [sp, #136]
  436288:	ldrb	w0, [x0]
  43628c:	cmp	w0, #0x3a
  436290:	b.ne	436268 <find_in_given_path@@Base+0x190>  // b.any
  436294:	ldr	x0, [sp, #136]
  436298:	ldrb	w0, [x0]
  43629c:	cmp	w0, #0x0
  4362a0:	cset	w0, eq  // eq = none
  4362a4:	strb	w0, [sp, #103]
  4362a8:	ldr	x0, [sp, #136]
  4362ac:	strb	wzr, [x0]
  4362b0:	ldr	x1, [sp, #128]
  4362b4:	ldr	x0, [sp, #136]
  4362b8:	cmp	x1, x0
  4362bc:	b.ne	4362cc <find_in_given_path@@Base+0x1f4>  // b.any
  4362c0:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4362c4:	add	x0, x0, #0x4a0
  4362c8:	str	x0, [sp, #128]
  4362cc:	str	xzr, [sp, #120]
  4362d0:	b	4363b8 <find_in_given_path@@Base+0x2e0>
  4362d4:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  4362d8:	add	x0, x0, #0x490
  4362dc:	str	x0, [sp, #88]
  4362e0:	ldr	x2, [sp, #88]
  4362e4:	ldr	x1, [sp, #56]
  4362e8:	ldr	x0, [sp, #128]
  4362ec:	bl	43640c <xconcatenated_filename@@Base>
  4362f0:	str	x0, [sp, #112]
  4362f4:	mov	w1, #0x1                   	// #1
  4362f8:	ldr	x0, [sp, #112]
  4362fc:	bl	406870 <eaccess@plt>
  436300:	cmp	w0, #0x0
  436304:	b.ne	436388 <find_in_given_path@@Base+0x2b0>  // b.any
  436308:	ldr	x1, [sp, #56]
  43630c:	ldr	x0, [sp, #112]
  436310:	bl	406bc0 <strcmp@plt>
  436314:	cmp	w0, #0x0
  436318:	b.ne	436378 <find_in_given_path@@Base+0x2a0>  // b.any
  43631c:	ldr	x0, [sp, #112]
  436320:	bl	406c00 <free@plt>
  436324:	ldr	x0, [sp, #56]
  436328:	bl	4066f0 <strlen@plt>
  43632c:	add	x0, x0, #0x3
  436330:	bl	42268c <xmalloc@@Base>
  436334:	str	x0, [sp, #112]
  436338:	ldr	x0, [sp, #112]
  43633c:	mov	w1, #0x2e                  	// #46
  436340:	strb	w1, [x0]
  436344:	ldr	x0, [sp, #112]
  436348:	add	x0, x0, #0x1
  43634c:	mov	w1, #0x2f                  	// #47
  436350:	strb	w1, [x0]
  436354:	ldr	x0, [sp, #112]
  436358:	add	x19, x0, #0x2
  43635c:	ldr	x0, [sp, #56]
  436360:	bl	4066f0 <strlen@plt>
  436364:	add	x0, x0, #0x1
  436368:	mov	x2, x0
  43636c:	ldr	x1, [sp, #56]
  436370:	mov	x0, x19
  436374:	bl	4066b0 <memcpy@plt>
  436378:	ldr	x0, [sp, #104]
  43637c:	bl	406c00 <free@plt>
  436380:	ldr	x0, [sp, #112]
  436384:	b	436400 <find_in_given_path@@Base+0x328>
  436388:	bl	406dd0 <__errno_location@plt>
  43638c:	ldr	w0, [x0]
  436390:	cmp	w0, #0x2
  436394:	b.eq	4363a4 <find_in_given_path@@Base+0x2cc>  // b.none
  436398:	bl	406dd0 <__errno_location@plt>
  43639c:	ldr	w0, [x0]
  4363a0:	str	w0, [sp, #156]
  4363a4:	ldr	x0, [sp, #112]
  4363a8:	bl	406c00 <free@plt>
  4363ac:	ldr	x0, [sp, #120]
  4363b0:	add	x0, x0, #0x1
  4363b4:	str	x0, [sp, #120]
  4363b8:	ldr	x0, [sp, #120]
  4363bc:	cmp	x0, #0x0
  4363c0:	b.eq	4362d4 <find_in_given_path@@Base+0x1fc>  // b.none
  4363c4:	ldrb	w0, [sp, #103]
  4363c8:	cmp	w0, #0x0
  4363cc:	b.ne	4363e0 <find_in_given_path@@Base+0x308>  // b.any
  4363d0:	ldr	x0, [sp, #136]
  4363d4:	add	x0, x0, #0x1
  4363d8:	str	x0, [sp, #144]
  4363dc:	b	436254 <find_in_given_path@@Base+0x17c>
  4363e0:	nop
  4363e4:	ldr	x0, [sp, #104]
  4363e8:	bl	406c00 <free@plt>
  4363ec:	bl	406dd0 <__errno_location@plt>
  4363f0:	mov	x1, x0
  4363f4:	ldr	w0, [sp, #156]
  4363f8:	str	w0, [x1]
  4363fc:	mov	x0, #0x0                   	// #0
  436400:	ldr	x19, [sp, #16]
  436404:	ldp	x29, x30, [sp], #192
  436408:	ret

000000000043640c <xconcatenated_filename@@Base>:
  43640c:	stp	x29, x30, [sp, #-64]!
  436410:	mov	x29, sp
  436414:	str	x0, [sp, #40]
  436418:	str	x1, [sp, #32]
  43641c:	str	x2, [sp, #24]
  436420:	ldr	x2, [sp, #24]
  436424:	ldr	x1, [sp, #32]
  436428:	ldr	x0, [sp, #40]
  43642c:	bl	4368f8 <concatenated_filename@@Base>
  436430:	str	x0, [sp, #56]
  436434:	ldr	x0, [sp, #56]
  436438:	cmp	x0, #0x0
  43643c:	b.ne	436444 <xconcatenated_filename@@Base+0x38>  // b.any
  436440:	bl	436a94 <xalloc_die@@Base>
  436444:	ldr	x0, [sp, #56]
  436448:	ldp	x29, x30, [sp], #64
  43644c:	ret

0000000000436450 <rpl_fcntl@@Base>:
  436450:	stp	x29, x30, [sp, #-272]!
  436454:	mov	x29, sp
  436458:	str	w0, [sp, #28]
  43645c:	str	w1, [sp, #24]
  436460:	str	x2, [sp, #224]
  436464:	str	x3, [sp, #232]
  436468:	str	x4, [sp, #240]
  43646c:	str	x5, [sp, #248]
  436470:	str	x6, [sp, #256]
  436474:	str	x7, [sp, #264]
  436478:	str	q0, [sp, #96]
  43647c:	str	q1, [sp, #112]
  436480:	str	q2, [sp, #128]
  436484:	str	q3, [sp, #144]
  436488:	str	q4, [sp, #160]
  43648c:	str	q5, [sp, #176]
  436490:	str	q6, [sp, #192]
  436494:	str	q7, [sp, #208]
  436498:	mov	w0, #0xffffffff            	// #-1
  43649c:	str	w0, [sp, #92]
  4364a0:	add	x0, sp, #0x110
  4364a4:	str	x0, [sp, #40]
  4364a8:	add	x0, sp, #0x110
  4364ac:	str	x0, [sp, #48]
  4364b0:	add	x0, sp, #0xe0
  4364b4:	str	x0, [sp, #56]
  4364b8:	mov	w0, #0xffffffd0            	// #-48
  4364bc:	str	w0, [sp, #64]
  4364c0:	mov	w0, #0xffffff80            	// #-128
  4364c4:	str	w0, [sp, #68]
  4364c8:	ldr	w0, [sp, #24]
  4364cc:	cmp	w0, #0x0
  4364d0:	b.eq	4364e4 <rpl_fcntl@@Base+0x94>  // b.none
  4364d4:	ldr	w0, [sp, #24]
  4364d8:	cmp	w0, #0x406
  4364dc:	b.eq	436550 <rpl_fcntl@@Base+0x100>  // b.none
  4364e0:	b	4365bc <rpl_fcntl@@Base+0x16c>
  4364e4:	ldr	w1, [sp, #64]
  4364e8:	ldr	x0, [sp, #40]
  4364ec:	cmp	w1, #0x0
  4364f0:	b.lt	436504 <rpl_fcntl@@Base+0xb4>  // b.tstop
  4364f4:	add	x1, x0, #0xb
  4364f8:	and	x1, x1, #0xfffffffffffffff8
  4364fc:	str	x1, [sp, #40]
  436500:	b	436534 <rpl_fcntl@@Base+0xe4>
  436504:	add	w2, w1, #0x8
  436508:	str	w2, [sp, #64]
  43650c:	ldr	w2, [sp, #64]
  436510:	cmp	w2, #0x0
  436514:	b.le	436528 <rpl_fcntl@@Base+0xd8>
  436518:	add	x1, x0, #0xb
  43651c:	and	x1, x1, #0xfffffffffffffff8
  436520:	str	x1, [sp, #40]
  436524:	b	436534 <rpl_fcntl@@Base+0xe4>
  436528:	ldr	x2, [sp, #48]
  43652c:	sxtw	x0, w1
  436530:	add	x0, x2, x0
  436534:	ldr	w0, [x0]
  436538:	str	w0, [sp, #84]
  43653c:	ldr	w1, [sp, #84]
  436540:	ldr	w0, [sp, #28]
  436544:	bl	43678c <rpl_fcntl@@Base+0x33c>
  436548:	str	w0, [sp, #92]
  43654c:	b	436780 <rpl_fcntl@@Base+0x330>
  436550:	ldr	w1, [sp, #64]
  436554:	ldr	x0, [sp, #40]
  436558:	cmp	w1, #0x0
  43655c:	b.lt	436570 <rpl_fcntl@@Base+0x120>  // b.tstop
  436560:	add	x1, x0, #0xb
  436564:	and	x1, x1, #0xfffffffffffffff8
  436568:	str	x1, [sp, #40]
  43656c:	b	4365a0 <rpl_fcntl@@Base+0x150>
  436570:	add	w2, w1, #0x8
  436574:	str	w2, [sp, #64]
  436578:	ldr	w2, [sp, #64]
  43657c:	cmp	w2, #0x0
  436580:	b.le	436594 <rpl_fcntl@@Base+0x144>
  436584:	add	x1, x0, #0xb
  436588:	and	x1, x1, #0xfffffffffffffff8
  43658c:	str	x1, [sp, #40]
  436590:	b	4365a0 <rpl_fcntl@@Base+0x150>
  436594:	ldr	x2, [sp, #48]
  436598:	sxtw	x0, w1
  43659c:	add	x0, x2, x0
  4365a0:	ldr	w0, [x0]
  4365a4:	str	w0, [sp, #88]
  4365a8:	ldr	w1, [sp, #88]
  4365ac:	ldr	w0, [sp, #28]
  4365b0:	bl	4367bc <rpl_fcntl@@Base+0x36c>
  4365b4:	str	w0, [sp, #92]
  4365b8:	b	436780 <rpl_fcntl@@Base+0x330>
  4365bc:	ldr	w0, [sp, #24]
  4365c0:	cmp	w0, #0xb
  4365c4:	b.gt	43666c <rpl_fcntl@@Base+0x21c>
  4365c8:	ldr	w0, [sp, #24]
  4365cc:	cmp	w0, #0x0
  4365d0:	b.ge	436624 <rpl_fcntl@@Base+0x1d4>  // b.tcont
  4365d4:	b	43670c <rpl_fcntl@@Base+0x2bc>
  4365d8:	ldr	w0, [sp, #24]
  4365dc:	sub	w0, w0, #0x400
  4365e0:	mov	x1, #0x1                   	// #1
  4365e4:	lsl	x0, x1, x0
  4365e8:	mov	x1, #0x2c5                 	// #709
  4365ec:	and	x1, x0, x1
  4365f0:	cmp	x1, #0x0
  4365f4:	cset	w1, ne  // ne = any
  4365f8:	and	w1, w1, #0xff
  4365fc:	cmp	w1, #0x0
  436600:	b.ne	43669c <rpl_fcntl@@Base+0x24c>  // b.any
  436604:	mov	x1, #0x502                 	// #1282
  436608:	and	x0, x0, x1
  43660c:	cmp	x0, #0x0
  436610:	cset	w0, ne  // ne = any
  436614:	and	w0, w0, #0xff
  436618:	cmp	w0, #0x0
  43661c:	b.ne	436688 <rpl_fcntl@@Base+0x238>  // b.any
  436620:	b	43670c <rpl_fcntl@@Base+0x2bc>
  436624:	ldr	w0, [sp, #24]
  436628:	mov	x1, #0x1                   	// #1
  43662c:	lsl	x0, x1, x0
  436630:	mov	x1, #0x515                 	// #1301
  436634:	and	x1, x0, x1
  436638:	cmp	x1, #0x0
  43663c:	cset	w1, ne  // ne = any
  436640:	and	w1, w1, #0xff
  436644:	cmp	w1, #0x0
  436648:	b.ne	43669c <rpl_fcntl@@Base+0x24c>  // b.any
  43664c:	mov	x1, #0xa0a                 	// #2570
  436650:	and	x0, x0, x1
  436654:	cmp	x0, #0x0
  436658:	cset	w0, ne  // ne = any
  43665c:	and	w0, w0, #0xff
  436660:	cmp	w0, #0x0
  436664:	b.ne	436688 <rpl_fcntl@@Base+0x238>  // b.any
  436668:	b	43670c <rpl_fcntl@@Base+0x2bc>
  43666c:	ldr	w0, [sp, #24]
  436670:	cmp	w0, #0x40a
  436674:	b.gt	43670c <rpl_fcntl@@Base+0x2bc>
  436678:	ldr	w0, [sp, #24]
  43667c:	cmp	w0, #0x400
  436680:	b.ge	4365d8 <rpl_fcntl@@Base+0x188>  // b.tcont
  436684:	b	43670c <rpl_fcntl@@Base+0x2bc>
  436688:	ldr	w1, [sp, #24]
  43668c:	ldr	w0, [sp, #28]
  436690:	bl	406c70 <fcntl@plt>
  436694:	str	w0, [sp, #92]
  436698:	b	43677c <rpl_fcntl@@Base+0x32c>
  43669c:	ldr	w1, [sp, #64]
  4366a0:	ldr	x0, [sp, #40]
  4366a4:	cmp	w1, #0x0
  4366a8:	b.lt	4366bc <rpl_fcntl@@Base+0x26c>  // b.tstop
  4366ac:	add	x1, x0, #0xb
  4366b0:	and	x1, x1, #0xfffffffffffffff8
  4366b4:	str	x1, [sp, #40]
  4366b8:	b	4366ec <rpl_fcntl@@Base+0x29c>
  4366bc:	add	w2, w1, #0x8
  4366c0:	str	w2, [sp, #64]
  4366c4:	ldr	w2, [sp, #64]
  4366c8:	cmp	w2, #0x0
  4366cc:	b.le	4366e0 <rpl_fcntl@@Base+0x290>
  4366d0:	add	x1, x0, #0xb
  4366d4:	and	x1, x1, #0xfffffffffffffff8
  4366d8:	str	x1, [sp, #40]
  4366dc:	b	4366ec <rpl_fcntl@@Base+0x29c>
  4366e0:	ldr	x2, [sp, #48]
  4366e4:	sxtw	x0, w1
  4366e8:	add	x0, x2, x0
  4366ec:	ldr	w0, [x0]
  4366f0:	str	w0, [sp, #80]
  4366f4:	ldr	w2, [sp, #80]
  4366f8:	ldr	w1, [sp, #24]
  4366fc:	ldr	w0, [sp, #28]
  436700:	bl	406c70 <fcntl@plt>
  436704:	str	w0, [sp, #92]
  436708:	b	43677c <rpl_fcntl@@Base+0x32c>
  43670c:	ldr	w1, [sp, #64]
  436710:	ldr	x0, [sp, #40]
  436714:	cmp	w1, #0x0
  436718:	b.lt	43672c <rpl_fcntl@@Base+0x2dc>  // b.tstop
  43671c:	add	x1, x0, #0xf
  436720:	and	x1, x1, #0xfffffffffffffff8
  436724:	str	x1, [sp, #40]
  436728:	b	43675c <rpl_fcntl@@Base+0x30c>
  43672c:	add	w2, w1, #0x8
  436730:	str	w2, [sp, #64]
  436734:	ldr	w2, [sp, #64]
  436738:	cmp	w2, #0x0
  43673c:	b.le	436750 <rpl_fcntl@@Base+0x300>
  436740:	add	x1, x0, #0xf
  436744:	and	x1, x1, #0xfffffffffffffff8
  436748:	str	x1, [sp, #40]
  43674c:	b	43675c <rpl_fcntl@@Base+0x30c>
  436750:	ldr	x2, [sp, #48]
  436754:	sxtw	x0, w1
  436758:	add	x0, x2, x0
  43675c:	ldr	x0, [x0]
  436760:	str	x0, [sp, #72]
  436764:	ldr	x2, [sp, #72]
  436768:	ldr	w1, [sp, #24]
  43676c:	ldr	w0, [sp, #28]
  436770:	bl	406c70 <fcntl@plt>
  436774:	str	w0, [sp, #92]
  436778:	nop
  43677c:	nop
  436780:	ldr	w0, [sp, #92]
  436784:	ldp	x29, x30, [sp], #272
  436788:	ret
  43678c:	stp	x29, x30, [sp, #-48]!
  436790:	mov	x29, sp
  436794:	str	w0, [sp, #28]
  436798:	str	w1, [sp, #24]
  43679c:	ldr	w2, [sp, #24]
  4367a0:	mov	w1, #0x0                   	// #0
  4367a4:	ldr	w0, [sp, #28]
  4367a8:	bl	406c70 <fcntl@plt>
  4367ac:	str	w0, [sp, #44]
  4367b0:	ldr	w0, [sp, #44]
  4367b4:	ldp	x29, x30, [sp], #48
  4367b8:	ret
  4367bc:	stp	x29, x30, [sp, #-48]!
  4367c0:	mov	x29, sp
  4367c4:	str	w0, [sp, #28]
  4367c8:	str	w1, [sp, #24]
  4367cc:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  4367d0:	add	x0, x0, #0x9f8
  4367d4:	ldr	w0, [x0]
  4367d8:	cmp	w0, #0x0
  4367dc:	b.lt	436854 <rpl_fcntl@@Base+0x404>  // b.tstop
  4367e0:	ldr	w2, [sp, #24]
  4367e4:	mov	w1, #0x406                 	// #1030
  4367e8:	ldr	w0, [sp, #28]
  4367ec:	bl	406c70 <fcntl@plt>
  4367f0:	str	w0, [sp, #44]
  4367f4:	ldr	w0, [sp, #44]
  4367f8:	cmp	w0, #0x0
  4367fc:	b.ge	436810 <rpl_fcntl@@Base+0x3c0>  // b.tcont
  436800:	bl	406dd0 <__errno_location@plt>
  436804:	ldr	w0, [x0]
  436808:	cmp	w0, #0x16
  43680c:	b.eq	436824 <rpl_fcntl@@Base+0x3d4>  // b.none
  436810:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  436814:	add	x0, x0, #0x9f8
  436818:	mov	w1, #0x1                   	// #1
  43681c:	str	w1, [x0]
  436820:	b	436864 <rpl_fcntl@@Base+0x414>
  436824:	ldr	w1, [sp, #24]
  436828:	ldr	w0, [sp, #28]
  43682c:	bl	43678c <rpl_fcntl@@Base+0x33c>
  436830:	str	w0, [sp, #44]
  436834:	ldr	w0, [sp, #44]
  436838:	cmp	w0, #0x0
  43683c:	b.lt	436864 <rpl_fcntl@@Base+0x414>  // b.tstop
  436840:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  436844:	add	x0, x0, #0x9f8
  436848:	mov	w1, #0xffffffff            	// #-1
  43684c:	str	w1, [x0]
  436850:	b	436864 <rpl_fcntl@@Base+0x414>
  436854:	ldr	w1, [sp, #24]
  436858:	ldr	w0, [sp, #28]
  43685c:	bl	43678c <rpl_fcntl@@Base+0x33c>
  436860:	str	w0, [sp, #44]
  436864:	ldr	w0, [sp, #44]
  436868:	cmp	w0, #0x0
  43686c:	b.lt	4368ec <rpl_fcntl@@Base+0x49c>  // b.tstop
  436870:	adrp	x0, 456000 <stdio_traced@@Base+0x2008>
  436874:	add	x0, x0, #0x9f8
  436878:	ldr	w0, [x0]
  43687c:	cmn	w0, #0x1
  436880:	b.ne	4368ec <rpl_fcntl@@Base+0x49c>  // b.any
  436884:	mov	w1, #0x1                   	// #1
  436888:	ldr	w0, [sp, #44]
  43688c:	bl	406c70 <fcntl@plt>
  436890:	str	w0, [sp, #40]
  436894:	ldr	w0, [sp, #40]
  436898:	cmp	w0, #0x0
  43689c:	b.lt	4368c0 <rpl_fcntl@@Base+0x470>  // b.tstop
  4368a0:	ldr	w0, [sp, #40]
  4368a4:	orr	w0, w0, #0x1
  4368a8:	mov	w2, w0
  4368ac:	mov	w1, #0x2                   	// #2
  4368b0:	ldr	w0, [sp, #44]
  4368b4:	bl	406c70 <fcntl@plt>
  4368b8:	cmn	w0, #0x1
  4368bc:	b.ne	4368ec <rpl_fcntl@@Base+0x49c>  // b.any
  4368c0:	bl	406dd0 <__errno_location@plt>
  4368c4:	ldr	w0, [x0]
  4368c8:	str	w0, [sp, #36]
  4368cc:	ldr	w0, [sp, #44]
  4368d0:	bl	406ac0 <close@plt>
  4368d4:	bl	406dd0 <__errno_location@plt>
  4368d8:	mov	x1, x0
  4368dc:	ldr	w0, [sp, #36]
  4368e0:	str	w0, [x1]
  4368e4:	mov	w0, #0xffffffff            	// #-1
  4368e8:	str	w0, [sp, #44]
  4368ec:	ldr	w0, [sp, #44]
  4368f0:	ldp	x29, x30, [sp], #48
  4368f4:	ret

00000000004368f8 <concatenated_filename@@Base>:
  4368f8:	stp	x29, x30, [sp, #-96]!
  4368fc:	mov	x29, sp
  436900:	str	x19, [sp, #16]
  436904:	str	x0, [sp, #56]
  436908:	str	x1, [sp, #48]
  43690c:	str	x2, [sp, #40]
  436910:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  436914:	add	x1, x0, #0x4a8
  436918:	ldr	x0, [sp, #56]
  43691c:	bl	406bc0 <strcmp@plt>
  436920:	cmp	w0, #0x0
  436924:	b.ne	436980 <concatenated_filename@@Base+0x88>  // b.any
  436928:	ldr	x0, [sp, #48]
  43692c:	bl	4066f0 <strlen@plt>
  436930:	mov	x19, x0
  436934:	ldr	x0, [sp, #40]
  436938:	cmp	x0, #0x0
  43693c:	b.eq	43694c <concatenated_filename@@Base+0x54>  // b.none
  436940:	ldr	x0, [sp, #40]
  436944:	bl	4066f0 <strlen@plt>
  436948:	b	436950 <concatenated_filename@@Base+0x58>
  43694c:	mov	x0, #0x0                   	// #0
  436950:	add	x0, x0, x19
  436954:	add	x0, x0, #0x1
  436958:	bl	406930 <malloc@plt>
  43695c:	str	x0, [sp, #88]
  436960:	ldr	x0, [sp, #88]
  436964:	cmp	x0, #0x0
  436968:	b.ne	436974 <concatenated_filename@@Base+0x7c>  // b.any
  43696c:	mov	x0, #0x0                   	// #0
  436970:	b	436a88 <concatenated_filename@@Base+0x190>
  436974:	ldr	x0, [sp, #88]
  436978:	str	x0, [sp, #80]
  43697c:	b	436a5c <concatenated_filename@@Base+0x164>
  436980:	ldr	x0, [sp, #56]
  436984:	bl	4066f0 <strlen@plt>
  436988:	str	x0, [sp, #72]
  43698c:	ldr	x0, [sp, #72]
  436990:	cmp	x0, #0x0
  436994:	b.eq	4369bc <concatenated_filename@@Base+0xc4>  // b.none
  436998:	ldr	x0, [sp, #72]
  43699c:	sub	x0, x0, #0x1
  4369a0:	ldr	x1, [sp, #56]
  4369a4:	add	x0, x1, x0
  4369a8:	ldrb	w0, [x0]
  4369ac:	cmp	w0, #0x2f
  4369b0:	b.eq	4369bc <concatenated_filename@@Base+0xc4>  // b.none
  4369b4:	mov	w0, #0x1                   	// #1
  4369b8:	b	4369c0 <concatenated_filename@@Base+0xc8>
  4369bc:	mov	w0, #0x0                   	// #0
  4369c0:	str	w0, [sp, #68]
  4369c4:	ldrsw	x1, [sp, #68]
  4369c8:	ldr	x0, [sp, #72]
  4369cc:	add	x19, x1, x0
  4369d0:	ldr	x0, [sp, #48]
  4369d4:	bl	4066f0 <strlen@plt>
  4369d8:	add	x19, x19, x0
  4369dc:	ldr	x0, [sp, #40]
  4369e0:	cmp	x0, #0x0
  4369e4:	b.eq	4369f4 <concatenated_filename@@Base+0xfc>  // b.none
  4369e8:	ldr	x0, [sp, #40]
  4369ec:	bl	4066f0 <strlen@plt>
  4369f0:	b	4369f8 <concatenated_filename@@Base+0x100>
  4369f4:	mov	x0, #0x0                   	// #0
  4369f8:	add	x0, x0, x19
  4369fc:	add	x0, x0, #0x1
  436a00:	bl	406930 <malloc@plt>
  436a04:	str	x0, [sp, #88]
  436a08:	ldr	x0, [sp, #88]
  436a0c:	cmp	x0, #0x0
  436a10:	b.ne	436a1c <concatenated_filename@@Base+0x124>  // b.any
  436a14:	mov	x0, #0x0                   	// #0
  436a18:	b	436a88 <concatenated_filename@@Base+0x190>
  436a1c:	ldr	x2, [sp, #72]
  436a20:	ldr	x1, [sp, #56]
  436a24:	ldr	x0, [sp, #88]
  436a28:	bl	4066b0 <memcpy@plt>
  436a2c:	ldr	x1, [sp, #88]
  436a30:	ldr	x0, [sp, #72]
  436a34:	add	x0, x1, x0
  436a38:	str	x0, [sp, #80]
  436a3c:	ldr	w0, [sp, #68]
  436a40:	cmp	w0, #0x0
  436a44:	b.eq	436a5c <concatenated_filename@@Base+0x164>  // b.none
  436a48:	ldr	x0, [sp, #80]
  436a4c:	add	x1, x0, #0x1
  436a50:	str	x1, [sp, #80]
  436a54:	mov	w1, #0x2f                  	// #47
  436a58:	strb	w1, [x0]
  436a5c:	ldr	x1, [sp, #48]
  436a60:	ldr	x0, [sp, #80]
  436a64:	bl	406890 <stpcpy@plt>
  436a68:	str	x0, [sp, #80]
  436a6c:	ldr	x0, [sp, #40]
  436a70:	cmp	x0, #0x0
  436a74:	b.eq	436a84 <concatenated_filename@@Base+0x18c>  // b.none
  436a78:	ldr	x1, [sp, #40]
  436a7c:	ldr	x0, [sp, #80]
  436a80:	bl	406ca0 <strcpy@plt>
  436a84:	ldr	x0, [sp, #88]
  436a88:	ldr	x19, [sp, #16]
  436a8c:	ldp	x29, x30, [sp], #96
  436a90:	ret

0000000000436a94 <xalloc_die@@Base>:
  436a94:	stp	x29, x30, [sp, #-32]!
  436a98:	mov	x29, sp
  436a9c:	str	x19, [sp, #16]
  436aa0:	adrp	x0, 453000 <expanding_var@@Base+0x328>
  436aa4:	add	x0, x0, #0x3e4
  436aa8:	ldr	w19, [x0]
  436aac:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  436ab0:	add	x0, x0, #0x4b0
  436ab4:	bl	406e40 <gettext@plt>
  436ab8:	mov	x3, x0
  436abc:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x6450>
  436ac0:	add	x2, x0, #0x4c8
  436ac4:	mov	w1, #0x0                   	// #0
  436ac8:	mov	w0, w19
  436acc:	bl	423e74 <error@@Base>
  436ad0:	bl	406b30 <abort@plt>
  436ad4:	nop

0000000000436ad8 <__libc_csu_init@@Base>:
  436ad8:	stp	x29, x30, [sp, #-64]!
  436adc:	mov	x29, sp
  436ae0:	stp	x19, x20, [sp, #16]
  436ae4:	adrp	x20, 451000 <_IO_stdin_used@@Base+0x1a450>
  436ae8:	add	x20, x20, #0xde0
  436aec:	stp	x21, x22, [sp, #32]
  436af0:	adrp	x21, 451000 <_IO_stdin_used@@Base+0x1a450>
  436af4:	add	x21, x21, #0xdd8
  436af8:	sub	x20, x20, x21
  436afc:	mov	w22, w0
  436b00:	stp	x23, x24, [sp, #48]
  436b04:	mov	x23, x1
  436b08:	mov	x24, x2
  436b0c:	bl	406670 <memcpy@plt-0x40>
  436b10:	cmp	xzr, x20, asr #3
  436b14:	b.eq	436b40 <__libc_csu_init@@Base+0x68>  // b.none
  436b18:	asr	x20, x20, #3
  436b1c:	mov	x19, #0x0                   	// #0
  436b20:	ldr	x3, [x21, x19, lsl #3]
  436b24:	mov	x2, x24
  436b28:	add	x19, x19, #0x1
  436b2c:	mov	x1, x23
  436b30:	mov	w0, w22
  436b34:	blr	x3
  436b38:	cmp	x20, x19
  436b3c:	b.ne	436b20 <__libc_csu_init@@Base+0x48>  // b.any
  436b40:	ldp	x19, x20, [sp, #16]
  436b44:	ldp	x21, x22, [sp, #32]
  436b48:	ldp	x23, x24, [sp, #48]
  436b4c:	ldp	x29, x30, [sp], #64
  436b50:	ret
  436b54:	nop

0000000000436b58 <__libc_csu_fini@@Base>:
  436b58:	ret
  436b5c:	nop
  436b60:	adrp	x2, 452000 <memcpy@GLIBC_2.17>
  436b64:	mov	x1, #0x0                   	// #0
  436b68:	ldr	x2, [x2, #1024]
  436b6c:	b	4067e0 <__cxa_atexit@plt>
  436b70:	mov	x2, x1
  436b74:	mov	x1, x0
  436b78:	mov	w0, #0x0                   	// #0
  436b7c:	b	406e10 <__xstat@plt>
  436b80:	mov	x2, x1
  436b84:	mov	w1, w0
  436b88:	mov	w0, #0x0                   	// #0
  436b8c:	b	406d20 <__fxstat@plt>
  436b90:	mov	x2, x1
  436b94:	mov	x1, x0
  436b98:	mov	w0, #0x0                   	// #0
  436b9c:	b	406cd0 <__lxstat@plt>

Disassembly of section .fini:

0000000000436ba0 <.fini>:
  436ba0:	stp	x29, x30, [sp, #-16]!
  436ba4:	mov	x29, sp
  436ba8:	ldp	x29, x30, [sp], #16
  436bac:	ret
