
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//column_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402218 <.init>:
  402218:	stp	x29, x30, [sp, #-16]!
  40221c:	mov	x29, sp
  402220:	bl	4038b4 <scols_reset_iter@plt+0x1014>
  402224:	ldp	x29, x30, [sp], #16
  402228:	ret

Disassembly of section .plt:

0000000000402230 <mbrtowc@plt-0x20>:
  402230:	stp	x16, x30, [sp, #-16]!
  402234:	adrp	x16, 419000 <scols_reset_iter@plt+0x16760>
  402238:	ldr	x17, [x16, #4088]
  40223c:	add	x16, x16, #0xff8
  402240:	br	x17
  402244:	nop
  402248:	nop
  40224c:	nop

0000000000402250 <mbrtowc@plt>:
  402250:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402254:	ldr	x17, [x16]
  402258:	add	x16, x16, #0x0
  40225c:	br	x17

0000000000402260 <memcpy@plt>:
  402260:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402264:	ldr	x17, [x16, #8]
  402268:	add	x16, x16, #0x8
  40226c:	br	x17

0000000000402270 <_exit@plt>:
  402270:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402274:	ldr	x17, [x16, #16]
  402278:	add	x16, x16, #0x10
  40227c:	br	x17

0000000000402280 <strtoul@plt>:
  402280:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402284:	ldr	x17, [x16, #24]
  402288:	add	x16, x16, #0x18
  40228c:	br	x17

0000000000402290 <strlen@plt>:
  402290:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402294:	ldr	x17, [x16, #32]
  402298:	add	x16, x16, #0x20
  40229c:	br	x17

00000000004022a0 <fputs@plt>:
  4022a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022a4:	ldr	x17, [x16, #40]
  4022a8:	add	x16, x16, #0x28
  4022ac:	br	x17

00000000004022b0 <mbstowcs@plt>:
  4022b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022b4:	ldr	x17, [x16, #48]
  4022b8:	add	x16, x16, #0x30
  4022bc:	br	x17

00000000004022c0 <exit@plt>:
  4022c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022c4:	ldr	x17, [x16, #56]
  4022c8:	add	x16, x16, #0x38
  4022cc:	br	x17

00000000004022d0 <dup@plt>:
  4022d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022d4:	ldr	x17, [x16, #64]
  4022d8:	add	x16, x16, #0x40
  4022dc:	br	x17

00000000004022e0 <scols_line_refer_data@plt>:
  4022e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022e4:	ldr	x17, [x16, #72]
  4022e8:	add	x16, x16, #0x48
  4022ec:	br	x17

00000000004022f0 <scols_line_get_column_cell@plt>:
  4022f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4022f4:	ldr	x17, [x16, #80]
  4022f8:	add	x16, x16, #0x50
  4022fc:	br	x17

0000000000402300 <scols_table_set_name@plt>:
  402300:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402304:	ldr	x17, [x16, #88]
  402308:	add	x16, x16, #0x58
  40230c:	br	x17

0000000000402310 <strtod@plt>:
  402310:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402314:	ldr	x17, [x16, #96]
  402318:	add	x16, x16, #0x60
  40231c:	br	x17

0000000000402320 <scols_table_enable_noheadings@plt>:
  402320:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402324:	ldr	x17, [x16, #104]
  402328:	add	x16, x16, #0x68
  40232c:	br	x17

0000000000402330 <scols_column_get_header@plt>:
  402330:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402334:	ldr	x17, [x16, #112]
  402338:	add	x16, x16, #0x70
  40233c:	br	x17

0000000000402340 <scols_table_new_column@plt>:
  402340:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402344:	ldr	x17, [x16, #120]
  402348:	add	x16, x16, #0x78
  40234c:	br	x17

0000000000402350 <scols_free_iter@plt>:
  402350:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402354:	ldr	x17, [x16, #128]
  402358:	add	x16, x16, #0x80
  40235c:	br	x17

0000000000402360 <ttyname@plt>:
  402360:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402364:	ldr	x17, [x16, #136]
  402368:	add	x16, x16, #0x88
  40236c:	br	x17

0000000000402370 <sprintf@plt>:
  402370:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402374:	ldr	x17, [x16, #144]
  402378:	add	x16, x16, #0x90
  40237c:	br	x17

0000000000402380 <__cxa_atexit@plt>:
  402380:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402384:	ldr	x17, [x16, #152]
  402388:	add	x16, x16, #0x98
  40238c:	br	x17

0000000000402390 <fputc@plt>:
  402390:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402394:	ldr	x17, [x16, #160]
  402398:	add	x16, x16, #0xa0
  40239c:	br	x17

00000000004023a0 <putwchar@plt>:
  4023a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023a4:	ldr	x17, [x16, #168]
  4023a8:	add	x16, x16, #0xa8
  4023ac:	br	x17

00000000004023b0 <scols_table_set_column_separator@plt>:
  4023b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023b4:	ldr	x17, [x16, #176]
  4023b8:	add	x16, x16, #0xb0
  4023bc:	br	x17

00000000004023c0 <snprintf@plt>:
  4023c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023c4:	ldr	x17, [x16, #184]
  4023c8:	add	x16, x16, #0xb8
  4023cc:	br	x17

00000000004023d0 <localeconv@plt>:
  4023d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023d4:	ldr	x17, [x16, #192]
  4023d8:	add	x16, x16, #0xc0
  4023dc:	br	x17

00000000004023e0 <stpcpy@plt>:
  4023e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023e4:	ldr	x17, [x16, #200]
  4023e8:	add	x16, x16, #0xc8
  4023ec:	br	x17

00000000004023f0 <fileno@plt>:
  4023f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4023f4:	ldr	x17, [x16, #208]
  4023f8:	add	x16, x16, #0xd0
  4023fc:	br	x17

0000000000402400 <wcspbrk@plt>:
  402400:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402404:	ldr	x17, [x16, #216]
  402408:	add	x16, x16, #0xd8
  40240c:	br	x17

0000000000402410 <fclose@plt>:
  402410:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402414:	ldr	x17, [x16, #224]
  402418:	add	x16, x16, #0xe0
  40241c:	br	x17

0000000000402420 <fopen@plt>:
  402420:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402424:	ldr	x17, [x16, #232]
  402428:	add	x16, x16, #0xe8
  40242c:	br	x17

0000000000402430 <malloc@plt>:
  402430:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402434:	ldr	x17, [x16, #240]
  402438:	add	x16, x16, #0xf0
  40243c:	br	x17

0000000000402440 <wcwidth@plt>:
  402440:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402444:	ldr	x17, [x16, #248]
  402448:	add	x16, x16, #0xf8
  40244c:	br	x17

0000000000402450 <scols_column_get_flags@plt>:
  402450:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402454:	ldr	x17, [x16, #256]
  402458:	add	x16, x16, #0x100
  40245c:	br	x17

0000000000402460 <__strtol_internal@plt>:
  402460:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402464:	ldr	x17, [x16, #264]
  402468:	add	x16, x16, #0x108
  40246c:	br	x17

0000000000402470 <strncmp@plt>:
  402470:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402474:	ldr	x17, [x16, #272]
  402478:	add	x16, x16, #0x110
  40247c:	br	x17

0000000000402480 <bindtextdomain@plt>:
  402480:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402484:	ldr	x17, [x16, #280]
  402488:	add	x16, x16, #0x118
  40248c:	br	x17

0000000000402490 <__libc_start_main@plt>:
  402490:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402494:	ldr	x17, [x16, #288]
  402498:	add	x16, x16, #0x120
  40249c:	br	x17

00000000004024a0 <fgetc@plt>:
  4024a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024a4:	ldr	x17, [x16, #296]
  4024a8:	add	x16, x16, #0x128
  4024ac:	br	x17

00000000004024b0 <scols_table_get_column@plt>:
  4024b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024b4:	ldr	x17, [x16, #304]
  4024b8:	add	x16, x16, #0x130
  4024bc:	br	x17

00000000004024c0 <scols_new_table@plt>:
  4024c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024c4:	ldr	x17, [x16, #312]
  4024c8:	add	x16, x16, #0x138
  4024cc:	br	x17

00000000004024d0 <scols_column_set_flags@plt>:
  4024d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024d4:	ldr	x17, [x16, #320]
  4024d8:	add	x16, x16, #0x140
  4024dc:	br	x17

00000000004024e0 <__strtoul_internal@plt>:
  4024e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024e4:	ldr	x17, [x16, #328]
  4024e8:	add	x16, x16, #0x148
  4024ec:	br	x17

00000000004024f0 <calloc@plt>:
  4024f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4024f4:	ldr	x17, [x16, #336]
  4024f8:	add	x16, x16, #0x150
  4024fc:	br	x17

0000000000402500 <strcasecmp@plt>:
  402500:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402504:	ldr	x17, [x16, #344]
  402508:	add	x16, x16, #0x158
  40250c:	br	x17

0000000000402510 <realloc@plt>:
  402510:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402514:	ldr	x17, [x16, #352]
  402518:	add	x16, x16, #0x160
  40251c:	br	x17

0000000000402520 <strdup@plt>:
  402520:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402524:	ldr	x17, [x16, #360]
  402528:	add	x16, x16, #0x168
  40252c:	br	x17

0000000000402530 <scols_table_new_line@plt>:
  402530:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402534:	ldr	x17, [x16, #368]
  402538:	add	x16, x16, #0x170
  40253c:	br	x17

0000000000402540 <wcstok@plt>:
  402540:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402544:	ldr	x17, [x16, #376]
  402548:	add	x16, x16, #0x178
  40254c:	br	x17

0000000000402550 <close@plt>:
  402550:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402554:	ldr	x17, [x16, #384]
  402558:	add	x16, x16, #0x180
  40255c:	br	x17

0000000000402560 <scols_table_is_json@plt>:
  402560:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402564:	ldr	x17, [x16, #392]
  402568:	add	x16, x16, #0x188
  40256c:	br	x17

0000000000402570 <__gmon_start__@plt>:
  402570:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402574:	ldr	x17, [x16, #400]
  402578:	add	x16, x16, #0x190
  40257c:	br	x17

0000000000402580 <abort@plt>:
  402580:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402584:	ldr	x17, [x16, #408]
  402588:	add	x16, x16, #0x198
  40258c:	br	x17

0000000000402590 <scols_table_set_termforce@plt>:
  402590:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402594:	ldr	x17, [x16, #416]
  402598:	add	x16, x16, #0x1a0
  40259c:	br	x17

00000000004025a0 <scols_table_get_ncols@plt>:
  4025a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025a4:	ldr	x17, [x16, #424]
  4025a8:	add	x16, x16, #0x1a8
  4025ac:	br	x17

00000000004025b0 <scols_table_enable_header_repeat@plt>:
  4025b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025b4:	ldr	x17, [x16, #432]
  4025b8:	add	x16, x16, #0x1b0
  4025bc:	br	x17

00000000004025c0 <scols_table_next_line@plt>:
  4025c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025c4:	ldr	x17, [x16, #440]
  4025c8:	add	x16, x16, #0x1b8
  4025cc:	br	x17

00000000004025d0 <feof@plt>:
  4025d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025d4:	ldr	x17, [x16, #448]
  4025d8:	add	x16, x16, #0x1c0
  4025dc:	br	x17

00000000004025e0 <textdomain@plt>:
  4025e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025e4:	ldr	x17, [x16, #456]
  4025e8:	add	x16, x16, #0x1c8
  4025ec:	br	x17

00000000004025f0 <getopt_long@plt>:
  4025f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4025f4:	ldr	x17, [x16, #464]
  4025f8:	add	x16, x16, #0x1d0
  4025fc:	br	x17

0000000000402600 <strcmp@plt>:
  402600:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402604:	ldr	x17, [x16, #472]
  402608:	add	x16, x16, #0x1d8
  40260c:	br	x17

0000000000402610 <warn@plt>:
  402610:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402614:	ldr	x17, [x16, #480]
  402618:	add	x16, x16, #0x1e0
  40261c:	br	x17

0000000000402620 <__ctype_b_loc@plt>:
  402620:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402624:	ldr	x17, [x16, #488]
  402628:	add	x16, x16, #0x1e8
  40262c:	br	x17

0000000000402630 <strtol@plt>:
  402630:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402634:	ldr	x17, [x16, #496]
  402638:	add	x16, x16, #0x1f0
  40263c:	br	x17

0000000000402640 <scols_table_next_column@plt>:
  402640:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402644:	ldr	x17, [x16, #504]
  402648:	add	x16, x16, #0x1f8
  40264c:	br	x17

0000000000402650 <scols_cell_get_data@plt>:
  402650:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402654:	ldr	x17, [x16, #512]
  402658:	add	x16, x16, #0x200
  40265c:	br	x17

0000000000402660 <free@plt>:
  402660:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402664:	ldr	x17, [x16, #520]
  402668:	add	x16, x16, #0x208
  40266c:	br	x17

0000000000402670 <scols_line_is_ancestor@plt>:
  402670:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402674:	ldr	x17, [x16, #528]
  402678:	add	x16, x16, #0x210
  40267c:	br	x17

0000000000402680 <__ctype_get_mb_cur_max@plt>:
  402680:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402684:	ldr	x17, [x16, #536]
  402688:	add	x16, x16, #0x218
  40268c:	br	x17

0000000000402690 <mempcpy@plt>:
  402690:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402694:	ldr	x17, [x16, #544]
  402698:	add	x16, x16, #0x220
  40269c:	br	x17

00000000004026a0 <scols_table_get_nlines@plt>:
  4026a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026a4:	ldr	x17, [x16, #552]
  4026a8:	add	x16, x16, #0x228
  4026ac:	br	x17

00000000004026b0 <scols_table_enable_json@plt>:
  4026b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026b4:	ldr	x17, [x16, #560]
  4026b8:	add	x16, x16, #0x230
  4026bc:	br	x17

00000000004026c0 <vasprintf@plt>:
  4026c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026c4:	ldr	x17, [x16, #568]
  4026c8:	add	x16, x16, #0x238
  4026cc:	br	x17

00000000004026d0 <scols_table_move_column@plt>:
  4026d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026d4:	ldr	x17, [x16, #576]
  4026d8:	add	x16, x16, #0x240
  4026dc:	br	x17

00000000004026e0 <scols_table_set_termwidth@plt>:
  4026e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026e4:	ldr	x17, [x16, #584]
  4026e8:	add	x16, x16, #0x248
  4026ec:	br	x17

00000000004026f0 <strndup@plt>:
  4026f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4026f4:	ldr	x17, [x16, #592]
  4026f8:	add	x16, x16, #0x250
  4026fc:	br	x17

0000000000402700 <strspn@plt>:
  402700:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402704:	ldr	x17, [x16, #600]
  402708:	add	x16, x16, #0x258
  40270c:	br	x17

0000000000402710 <strchr@plt>:
  402710:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402714:	ldr	x17, [x16, #608]
  402718:	add	x16, x16, #0x260
  40271c:	br	x17

0000000000402720 <fflush@plt>:
  402720:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402724:	ldr	x17, [x16, #616]
  402728:	add	x16, x16, #0x268
  40272c:	br	x17

0000000000402730 <scols_print_table@plt>:
  402730:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402734:	ldr	x17, [x16, #624]
  402738:	add	x16, x16, #0x270
  40273c:	br	x17

0000000000402740 <warnx@plt>:
  402740:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402744:	ldr	x17, [x16, #632]
  402748:	add	x16, x16, #0x278
  40274c:	br	x17

0000000000402750 <isatty@plt>:
  402750:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402754:	ldr	x17, [x16, #640]
  402758:	add	x16, x16, #0x280
  40275c:	br	x17

0000000000402760 <wcstombs@plt>:
  402760:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402764:	ldr	x17, [x16, #648]
  402768:	add	x16, x16, #0x288
  40276c:	br	x17

0000000000402770 <fputws@plt>:
  402770:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402774:	ldr	x17, [x16, #656]
  402778:	add	x16, x16, #0x290
  40277c:	br	x17

0000000000402780 <scols_new_iter@plt>:
  402780:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402784:	ldr	x17, [x16, #664]
  402788:	add	x16, x16, #0x298
  40278c:	br	x17

0000000000402790 <dcgettext@plt>:
  402790:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402794:	ldr	x17, [x16, #672]
  402798:	add	x16, x16, #0x2a0
  40279c:	br	x17

00000000004027a0 <scols_line_add_child@plt>:
  4027a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027a4:	ldr	x17, [x16, #680]
  4027a8:	add	x16, x16, #0x2a8
  4027ac:	br	x17

00000000004027b0 <errx@plt>:
  4027b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027b4:	ldr	x17, [x16, #688]
  4027b8:	add	x16, x16, #0x2b0
  4027bc:	br	x17

00000000004027c0 <iswprint@plt>:
  4027c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027c4:	ldr	x17, [x16, #696]
  4027c8:	add	x16, x16, #0x2b8
  4027cc:	br	x17

00000000004027d0 <strcspn@plt>:
  4027d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027d4:	ldr	x17, [x16, #704]
  4027d8:	add	x16, x16, #0x2c0
  4027dc:	br	x17

00000000004027e0 <printf@plt>:
  4027e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027e4:	ldr	x17, [x16, #712]
  4027e8:	add	x16, x16, #0x2c8
  4027ec:	br	x17

00000000004027f0 <__assert_fail@plt>:
  4027f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4027f4:	ldr	x17, [x16, #720]
  4027f8:	add	x16, x16, #0x2d0
  4027fc:	br	x17

0000000000402800 <__errno_location@plt>:
  402800:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402804:	ldr	x17, [x16, #728]
  402808:	add	x16, x16, #0x2d8
  40280c:	br	x17

0000000000402810 <getenv@plt>:
  402810:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402814:	ldr	x17, [x16, #736]
  402818:	add	x16, x16, #0x2e0
  40281c:	br	x17

0000000000402820 <scols_table_enable_noencoding@plt>:
  402820:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402824:	ldr	x17, [x16, #744]
  402828:	add	x16, x16, #0x2e8
  40282c:	br	x17

0000000000402830 <__getdelim@plt>:
  402830:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402834:	ldr	x17, [x16, #752]
  402838:	add	x16, x16, #0x2f0
  40283c:	br	x17

0000000000402840 <fprintf@plt>:
  402840:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402844:	ldr	x17, [x16, #760]
  402848:	add	x16, x16, #0x2f8
  40284c:	br	x17

0000000000402850 <scols_init_debug@plt>:
  402850:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402854:	ldr	x17, [x16, #768]
  402858:	add	x16, x16, #0x300
  40285c:	br	x17

0000000000402860 <err@plt>:
  402860:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402864:	ldr	x17, [x16, #776]
  402868:	add	x16, x16, #0x308
  40286c:	br	x17

0000000000402870 <ioctl@plt>:
  402870:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402874:	ldr	x17, [x16, #784]
  402878:	add	x16, x16, #0x310
  40287c:	br	x17

0000000000402880 <setlocale@plt>:
  402880:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402884:	ldr	x17, [x16, #792]
  402888:	add	x16, x16, #0x318
  40288c:	br	x17

0000000000402890 <ferror@plt>:
  402890:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402894:	ldr	x17, [x16, #800]
  402898:	add	x16, x16, #0x320
  40289c:	br	x17

00000000004028a0 <scols_reset_iter@plt>:
  4028a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  4028a4:	ldr	x17, [x16, #808]
  4028a8:	add	x16, x16, #0x328
  4028ac:	br	x17

Disassembly of section .text:

00000000004028b0 <.text>:
  4028b0:	stp	x29, x30, [sp, #-304]!
  4028b4:	mov	x3, #0xffffffffffffffff    	// #-1
  4028b8:	mov	x29, sp
  4028bc:	stp	xzr, xzr, [sp, #288]
  4028c0:	ldrb	w2, [sp, #296]
  4028c4:	stp	xzr, xzr, [sp, #144]
  4028c8:	orr	w2, w2, #0x1
  4028cc:	stp	x19, x20, [sp, #16]
  4028d0:	mov	x19, x1
  4028d4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4028d8:	add	x1, x1, #0x9b0
  4028dc:	stp	x21, x22, [sp, #32]
  4028e0:	mov	w21, w0
  4028e4:	mov	w0, #0x6                   	// #6
  4028e8:	stp	x23, x24, [sp, #48]
  4028ec:	adrp	x20, 407000 <scols_reset_iter@plt+0x4760>
  4028f0:	stp	x25, x26, [sp, #64]
  4028f4:	add	x20, x20, #0x918
  4028f8:	adrp	x25, 408000 <scols_reset_iter@plt+0x5760>
  4028fc:	str	xzr, [sp, #128]
  402900:	adrp	x22, 408000 <scols_reset_iter@plt+0x5760>
  402904:	str	wzr, [sp, #136]
  402908:	adrp	x23, 407000 <scols_reset_iter@plt+0x4760>
  40290c:	str	x3, [sp, #152]
  402910:	add	x25, x25, #0x408
  402914:	stp	xzr, xzr, [sp, #160]
  402918:	add	x22, x22, #0x3a0
  40291c:	add	x23, x23, #0x988
  402920:	stp	xzr, xzr, [sp, #176]
  402924:	stp	xzr, xzr, [sp, #192]
  402928:	stp	xzr, xzr, [sp, #208]
  40292c:	stp	xzr, xzr, [sp, #224]
  402930:	stp	xzr, xzr, [sp, #240]
  402934:	stp	xzr, xzr, [sp, #256]
  402938:	stp	xzr, xzr, [sp, #272]
  40293c:	strb	w2, [sp, #296]
  402940:	bl	402880 <setlocale@plt>
  402944:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402948:	add	x1, x1, #0x900
  40294c:	mov	x0, x20
  402950:	bl	402480 <bindtextdomain@plt>
  402954:	mov	x0, x20
  402958:	adrp	x20, 408000 <scols_reset_iter@plt+0x5760>
  40295c:	bl	4025e0 <textdomain@plt>
  402960:	add	x20, x20, #0x90
  402964:	adrp	x0, 404000 <scols_reset_iter@plt+0x1760>
  402968:	add	x0, x0, #0x1e8
  40296c:	bl	407730 <scols_reset_iter@plt+0x4e90>
  402970:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402974:	add	x1, x1, #0x928
  402978:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  40297c:	add	x0, x0, #0x930
  402980:	str	x1, [sp, #264]
  402984:	bl	403d28 <scols_reset_iter@plt+0x1488>
  402988:	str	x0, [sp, #256]
  40298c:	nop
  402990:	mov	x3, x25
  402994:	mov	x2, x20
  402998:	mov	x1, x19
  40299c:	mov	w0, w21
  4029a0:	mov	x4, #0x0                   	// #0
  4029a4:	bl	4025f0 <getopt_long@plt>
  4029a8:	cmn	w0, #0x1
  4029ac:	b.eq	402ce4 <scols_reset_iter@plt+0x444>  // b.none
  4029b0:	cmp	w0, #0x49
  4029b4:	b.le	402a08 <scols_reset_iter@plt+0x168>
  4029b8:	add	x4, sp, #0x80
  4029bc:	add	x24, x25, #0x300
  4029c0:	mov	w2, #0x4a                  	// #74
  4029c4:	nop
  4029c8:	cmp	w0, w2
  4029cc:	mov	x1, x24
  4029d0:	b.lt	4029f4 <scols_reset_iter@plt+0x154>  // b.tstop
  4029d4:	stp	x27, x28, [sp, #80]
  4029d8:	cmp	w0, w2
  4029dc:	b.eq	402a50 <scols_reset_iter@plt+0x1b0>  // b.none
  4029e0:	ldr	w2, [x1, #4]!
  4029e4:	cmp	w2, #0x0
  4029e8:	ccmp	w0, w2, #0x1, ne  // ne = any
  4029ec:	b.ge	4029d8 <scols_reset_iter@plt+0x138>  // b.tcont
  4029f0:	ldp	x27, x28, [sp, #80]
  4029f4:	add	x4, x4, #0x4
  4029f8:	ldr	w2, [x24, #64]!
  4029fc:	cmp	w2, #0x0
  402a00:	ccmp	w0, w2, #0x1, ne  // ne = any
  402a04:	b.ge	4029c8 <scols_reset_iter@plt+0x128>  // b.tcont
  402a08:	sub	w0, w0, #0x45
  402a0c:	cmp	w0, #0x33
  402a10:	b.ls	402b08 <scols_reset_iter@plt+0x268>  // b.plast
  402a14:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402a18:	mov	w2, #0x5                   	// #5
  402a1c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  402a20:	add	x1, x1, #0x68
  402a24:	ldr	x19, [x0, #840]
  402a28:	mov	x0, #0x0                   	// #0
  402a2c:	stp	x27, x28, [sp, #80]
  402a30:	bl	402790 <dcgettext@plt>
  402a34:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17760>
  402a38:	mov	x1, x0
  402a3c:	mov	x0, x19
  402a40:	ldr	x2, [x2, #880]
  402a44:	bl	402840 <fprintf@plt>
  402a48:	mov	w0, #0x1                   	// #1
  402a4c:	bl	4022c0 <exit@plt>
  402a50:	ldr	w1, [x4]
  402a54:	cbnz	w1, 402a64 <scols_reset_iter@plt+0x1c4>
  402a58:	ldp	x27, x28, [sp, #80]
  402a5c:	str	w0, [x4]
  402a60:	b	4029f4 <scols_reset_iter@plt+0x154>
  402a64:	cmp	w0, w1
  402a68:	b.eq	4029f0 <scols_reset_iter@plt+0x150>  // b.none
  402a6c:	adrp	x20, 41a000 <scols_reset_iter@plt+0x17760>
  402a70:	mov	w2, #0x5                   	// #5
  402a74:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402a78:	mov	x0, #0x0                   	// #0
  402a7c:	ldr	x19, [x20, #840]
  402a80:	add	x1, x1, #0x938
  402a84:	bl	402790 <dcgettext@plt>
  402a88:	adrp	x21, 408000 <scols_reset_iter@plt+0x5760>
  402a8c:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17760>
  402a90:	mov	x1, x0
  402a94:	add	x21, x21, #0x258
  402a98:	mov	x0, x19
  402a9c:	ldr	x2, [x2, #880]
  402aa0:	adrp	x19, 407000 <scols_reset_iter@plt+0x4760>
  402aa4:	add	x19, x19, #0x8f8
  402aa8:	mov	x23, #0x0                   	// #0
  402aac:	adrp	x22, 407000 <scols_reset_iter@plt+0x4760>
  402ab0:	bl	402840 <fprintf@plt>
  402ab4:	ldr	w3, [x24, x23]
  402ab8:	cbz	w3, 402af4 <scols_reset_iter@plt+0x254>
  402abc:	mov	x2, x19
  402ac0:	mov	x0, x25
  402ac4:	b	402ad0 <scols_reset_iter@plt+0x230>
  402ac8:	ldr	x2, [x0, #32]!
  402acc:	cbz	x2, 403644 <scols_reset_iter@plt+0xda4>
  402ad0:	ldr	w1, [x0, #24]
  402ad4:	cmp	w3, w1
  402ad8:	b.ne	402ac8 <scols_reset_iter@plt+0x228>  // b.any
  402adc:	ldr	x0, [x20, #840]
  402ae0:	mov	x1, x21
  402ae4:	bl	402840 <fprintf@plt>
  402ae8:	add	x23, x23, #0x4
  402aec:	cmp	x23, #0x3c
  402af0:	b.ne	402ab4 <scols_reset_iter@plt+0x214>  // b.any
  402af4:	ldr	x1, [x20, #840]
  402af8:	mov	w0, #0xa                   	// #10
  402afc:	bl	402390 <fputc@plt>
  402b00:	mov	w0, #0x1                   	// #1
  402b04:	bl	4022c0 <exit@plt>
  402b08:	ldrh	w0, [x22, w0, uxtw #1]
  402b0c:	adr	x1, 402b18 <scols_reset_iter@plt+0x278>
  402b10:	add	x0, x1, w0, sxth #2
  402b14:	br	x0
  402b18:	mov	w0, #0x1                   	// #1
  402b1c:	str	w0, [sp, #144]
  402b20:	b	402990 <scols_reset_iter@plt+0xf0>
  402b24:	mov	w0, #0x2                   	// #2
  402b28:	str	w0, [sp, #144]
  402b2c:	b	402990 <scols_reset_iter@plt+0xf0>
  402b30:	ldr	x0, [sp, #256]
  402b34:	bl	402660 <free@plt>
  402b38:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b3c:	ldr	x0, [x0, #848]
  402b40:	bl	403d28 <scols_reset_iter@plt+0x1488>
  402b44:	str	x0, [sp, #256]
  402b48:	ldrb	w1, [sp, #296]
  402b4c:	and	w1, w1, #0xfffffffe
  402b50:	strb	w1, [sp, #296]
  402b54:	b	402990 <scols_reset_iter@plt+0xf0>
  402b58:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b5c:	ldr	x0, [x0, #848]
  402b60:	str	x0, [sp, #232]
  402b64:	b	402990 <scols_reset_iter@plt+0xf0>
  402b68:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b6c:	ldr	x0, [x0, #848]
  402b70:	str	x0, [sp, #248]
  402b74:	b	402990 <scols_reset_iter@plt+0xf0>
  402b78:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b7c:	ldr	x0, [x0, #848]
  402b80:	str	x0, [sp, #264]
  402b84:	b	402990 <scols_reset_iter@plt+0xf0>
  402b88:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b8c:	ldr	x0, [x0, #848]
  402b90:	str	x0, [sp, #176]
  402b94:	b	402990 <scols_reset_iter@plt+0xf0>
  402b98:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402b9c:	ldr	x0, [x0, #848]
  402ba0:	str	x0, [sp, #240]
  402ba4:	b	402990 <scols_reset_iter@plt+0xf0>
  402ba8:	ldrb	w0, [sp, #296]
  402bac:	orr	w0, w0, #0x4
  402bb0:	strb	w0, [sp, #296]
  402bb4:	b	402990 <scols_reset_iter@plt+0xf0>
  402bb8:	ldrb	w0, [sp, #296]
  402bbc:	orr	w0, w0, #0x10
  402bc0:	strb	w0, [sp, #296]
  402bc4:	b	402990 <scols_reset_iter@plt+0xf0>
  402bc8:	adrp	x3, 41a000 <scols_reset_iter@plt+0x17760>
  402bcc:	mov	w2, #0x5                   	// #5
  402bd0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402bd4:	mov	x0, #0x0                   	// #0
  402bd8:	ldr	x24, [x3, #848]
  402bdc:	add	x1, x1, #0x968
  402be0:	bl	402790 <dcgettext@plt>
  402be4:	mov	x1, x0
  402be8:	mov	x0, x24
  402bec:	bl	405800 <scols_reset_iter@plt+0x2f60>
  402bf0:	mov	w0, w0
  402bf4:	str	x0, [sp, #152]
  402bf8:	b	402990 <scols_reset_iter@plt+0xf0>
  402bfc:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402c00:	ldr	x0, [x0, #848]
  402c04:	str	x0, [sp, #216]
  402c08:	b	402990 <scols_reset_iter@plt+0xf0>
  402c0c:	mov	w2, #0x5                   	// #5
  402c10:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  402c14:	mov	x0, #0x0                   	// #0
  402c18:	add	x1, x1, #0x40
  402c1c:	stp	x27, x28, [sp, #80]
  402c20:	bl	402790 <dcgettext@plt>
  402c24:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  402c28:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  402c2c:	add	x2, x2, #0x50
  402c30:	ldr	x1, [x1, #880]
  402c34:	bl	4027e0 <printf@plt>
  402c38:	mov	w0, #0x0                   	// #0
  402c3c:	bl	4022c0 <exit@plt>
  402c40:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402c44:	ldr	x0, [x0, #848]
  402c48:	str	x0, [sp, #200]
  402c4c:	b	402990 <scols_reset_iter@plt+0xf0>
  402c50:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402c54:	ldr	x0, [x0, #848]
  402c58:	str	x0, [sp, #192]
  402c5c:	b	402990 <scols_reset_iter@plt+0xf0>
  402c60:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402c64:	ldr	x0, [x0, #848]
  402c68:	str	x0, [sp, #184]
  402c6c:	b	402990 <scols_reset_iter@plt+0xf0>
  402c70:	adrp	x3, 41a000 <scols_reset_iter@plt+0x17760>
  402c74:	mov	w2, #0x5                   	// #5
  402c78:	mov	x1, x23
  402c7c:	mov	x0, #0x0                   	// #0
  402c80:	ldr	x24, [x3, #848]
  402c84:	bl	402790 <dcgettext@plt>
  402c88:	mov	x1, x0
  402c8c:	mov	x0, x24
  402c90:	bl	403b88 <scols_reset_iter@plt+0x12e8>
  402c94:	str	x0, [sp, #168]
  402c98:	b	402990 <scols_reset_iter@plt+0xf0>
  402c9c:	ldrb	w0, [sp, #296]
  402ca0:	orr	w0, w0, #0x8
  402ca4:	strb	w0, [sp, #296]
  402ca8:	b	402990 <scols_reset_iter@plt+0xf0>
  402cac:	ldrb	w0, [sp, #296]
  402cb0:	mov	w1, #0x2                   	// #2
  402cb4:	str	w1, [sp, #144]
  402cb8:	orr	w0, w0, w1
  402cbc:	strb	w0, [sp, #296]
  402cc0:	b	402990 <scols_reset_iter@plt+0xf0>
  402cc4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402cc8:	ldr	x0, [x0, #848]
  402ccc:	str	x0, [sp, #224]
  402cd0:	b	402990 <scols_reset_iter@plt+0xf0>
  402cd4:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402cd8:	ldr	x0, [x0, #848]
  402cdc:	str	x0, [sp, #208]
  402ce0:	b	402990 <scols_reset_iter@plt+0xf0>
  402ce4:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  402ce8:	ldr	x0, [sp, #152]
  402cec:	ldrsw	x20, [x1, #856]
  402cf0:	cmn	x0, #0x1
  402cf4:	lsl	x21, x20, #3
  402cf8:	add	x20, x19, x20, lsl #3
  402cfc:	b.eq	403074 <scols_reset_iter@plt+0x7d4>  // b.none
  402d00:	ldr	x0, [sp, #232]
  402d04:	cbz	x0, 402f20 <scols_reset_iter@plt+0x680>
  402d08:	ldr	x0, [sp, #248]
  402d0c:	mov	w1, #0x2                   	// #2
  402d10:	str	w1, [sp, #144]
  402d14:	cbz	x0, 403834 <scols_reset_iter@plt+0xf94>
  402d18:	ldr	x0, [sp, #240]
  402d1c:	cbz	x0, 403834 <scols_reset_iter@plt+0xf94>
  402d20:	ldr	x0, [sp, #168]
  402d24:	cbz	x0, 402f6c <scols_reset_iter@plt+0x6cc>
  402d28:	ldr	x0, [x19, x21]
  402d2c:	cbz	x0, 4032a4 <scols_reset_iter@plt+0xa04>
  402d30:	adrp	x21, 408000 <scols_reset_iter@plt+0x5760>
  402d34:	adrp	x22, 408000 <scols_reset_iter@plt+0x5760>
  402d38:	add	x21, x21, #0x2b0
  402d3c:	add	x22, x22, #0x160
  402d40:	mov	w26, #0x0                   	// #0
  402d44:	b	402d68 <scols_reset_iter@plt+0x4c8>
  402d48:	mov	x1, x0
  402d4c:	add	x0, sp, #0x90
  402d50:	bl	403dd8 <scols_reset_iter@plt+0x1538>
  402d54:	add	w26, w26, w0
  402d58:	mov	x0, x19
  402d5c:	bl	402410 <fclose@plt>
  402d60:	ldr	x0, [x20, #8]!
  402d64:	cbz	x0, 402d90 <scols_reset_iter@plt+0x4f0>
  402d68:	mov	x1, x21
  402d6c:	bl	402420 <fopen@plt>
  402d70:	mov	x19, x0
  402d74:	cbnz	x0, 402d48 <scols_reset_iter@plt+0x4a8>
  402d78:	ldr	x1, [x20]
  402d7c:	mov	x0, x22
  402d80:	add	w26, w26, #0x1
  402d84:	bl	402610 <warn@plt>
  402d88:	ldr	x0, [x20, #8]!
  402d8c:	cbnz	x0, 402d68 <scols_reset_iter@plt+0x4c8>
  402d90:	ldr	w20, [sp, #144]
  402d94:	cmp	w20, #0x2
  402d98:	b.eq	403094 <scols_reset_iter@plt+0x7f4>  // b.none
  402d9c:	ldr	x23, [sp, #280]
  402da0:	cbz	x23, 403858 <scols_reset_iter@plt+0xfb8>
  402da4:	ldr	x19, [sp, #152]
  402da8:	ldr	x0, [sp, #288]
  402dac:	cmp	x0, x19
  402db0:	b.cc	402e10 <scols_reset_iter@plt+0x570>  // b.lo, b.ul, b.last
  402db4:	mov	w0, #0x3                   	// #3
  402db8:	str	w0, [sp, #144]
  402dbc:	and	x23, x23, #0xffffffff
  402dc0:	mov	x19, #0x0                   	// #0
  402dc4:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17760>
  402dc8:	ldr	x20, [sp, #272]
  402dcc:	b	402de8 <scols_reset_iter@plt+0x548>
  402dd0:	ldr	x1, [x21, #864]
  402dd4:	ldr	x0, [x20, x19, lsl #3]
  402dd8:	add	x19, x19, #0x1
  402ddc:	bl	402770 <fputws@plt>
  402de0:	mov	w0, #0xa                   	// #10
  402de4:	bl	4023a0 <putwchar@plt>
  402de8:	cmp	x19, x23
  402dec:	b.ne	402dd0 <scols_reset_iter@plt+0x530>  // b.any
  402df0:	cmp	w26, #0x0
  402df4:	cset	w0, ne  // ne = any
  402df8:	ldp	x19, x20, [sp, #16]
  402dfc:	ldp	x21, x22, [sp, #32]
  402e00:	ldp	x23, x24, [sp, #48]
  402e04:	ldp	x25, x26, [sp, #64]
  402e08:	ldp	x29, x30, [sp], #304
  402e0c:	ret
  402e10:	cmp	w20, #0x1
  402e14:	b.eq	402f98 <scols_reset_iter@plt+0x6f8>  // b.none
  402e18:	b.gt	402f14 <scols_reset_iter@plt+0x674>
  402e1c:	cbnz	w20, 402df0 <scols_reset_iter@plt+0x550>
  402e20:	add	x24, x0, #0x8
  402e24:	stp	x27, x28, [sp, #80]
  402e28:	and	x24, x24, #0xfffffffffffffff8
  402e2c:	str	x24, [sp, #288]
  402e30:	cmp	x19, x24
  402e34:	b.cs	40361c <scols_reset_iter@plt+0xd7c>  // b.hs, b.nlast
  402e38:	mov	x24, #0x1                   	// #1
  402e3c:	str	xzr, [sp, #104]
  402e40:	ldr	x0, [sp, #104]
  402e44:	cmp	x23, x0
  402e48:	b.eq	40308c <scols_reset_iter@plt+0x7ec>  // b.none
  402e4c:	ldr	x20, [sp, #288]
  402e50:	cbz	x24, 402efc <scols_reset_iter@plt+0x65c>
  402e54:	ldr	x21, [sp, #104]
  402e58:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402e5c:	add	x25, x0, #0x360
  402e60:	mov	x22, #0x0                   	// #0
  402e64:	mov	x19, #0x0                   	// #0
  402e68:	ldr	x0, [sp, #272]
  402e6c:	mov	x28, #0x0                   	// #0
  402e70:	ldr	x1, [x25]
  402e74:	ldr	x0, [x0, x21, lsl #3]
  402e78:	bl	402770 <fputws@plt>
  402e7c:	ldr	x0, [sp, #272]
  402e80:	ldr	x27, [x0, x21, lsl #3]
  402e84:	ldr	w0, [x27]
  402e88:	cbz	w0, 402eac <scols_reset_iter@plt+0x60c>
  402e8c:	nop
  402e90:	bl	402440 <wcwidth@plt>
  402e94:	mov	w1, w0
  402e98:	ldr	w0, [x27, #4]!
  402e9c:	cmp	w1, #0x0
  402ea0:	add	x1, x28, w1, sxtw
  402ea4:	csel	x28, x1, x28, gt
  402ea8:	cbnz	w0, 402e90 <scols_reset_iter@plt+0x5f0>
  402eac:	ldr	x0, [sp, #280]
  402eb0:	add	x21, x21, x23
  402eb4:	add	x19, x19, x28
  402eb8:	cmp	x21, x0
  402ebc:	b.cs	402efc <scols_reset_iter@plt+0x65c>  // b.hs, b.nlast
  402ec0:	add	x1, x19, #0x8
  402ec4:	and	x28, x1, #0xfffffffffffffff8
  402ec8:	cmp	x20, x28
  402ecc:	b.cc	402ee8 <scols_reset_iter@plt+0x648>  // b.lo, b.ul, b.last
  402ed0:	mov	x19, x28
  402ed4:	mov	w0, #0x9                   	// #9
  402ed8:	add	x28, x28, #0x8
  402edc:	bl	4023a0 <putwchar@plt>
  402ee0:	cmp	x28, x20
  402ee4:	b.ls	402ed0 <scols_reset_iter@plt+0x630>  // b.plast
  402ee8:	ldr	x0, [sp, #288]
  402eec:	add	x22, x22, #0x1
  402ef0:	cmp	x22, x24
  402ef4:	add	x20, x20, x0
  402ef8:	b.ne	402e68 <scols_reset_iter@plt+0x5c8>  // b.any
  402efc:	ldr	x0, [sp, #104]
  402f00:	add	x0, x0, #0x1
  402f04:	str	x0, [sp, #104]
  402f08:	mov	w0, #0xa                   	// #10
  402f0c:	bl	4023a0 <putwchar@plt>
  402f10:	b	402e40 <scols_reset_iter@plt+0x5a0>
  402f14:	cmp	w20, #0x3
  402f18:	b.ne	402df0 <scols_reset_iter@plt+0x550>  // b.any
  402f1c:	b	402dbc <scols_reset_iter@plt+0x51c>
  402f20:	ldr	w0, [sp, #144]
  402f24:	cmp	w0, #0x2
  402f28:	b.eq	402d20 <scols_reset_iter@plt+0x480>  // b.none
  402f2c:	ldr	x0, [sp, #184]
  402f30:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f34:	ldr	x0, [sp, #176]
  402f38:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f3c:	ldr	x0, [sp, #216]
  402f40:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f44:	ldr	x0, [sp, #224]
  402f48:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f4c:	ldr	x0, [sp, #200]
  402f50:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f54:	ldr	x0, [sp, #208]
  402f58:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f5c:	ldr	x0, [sp, #192]
  402f60:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f64:	ldr	x0, [sp, #168]
  402f68:	cbnz	x0, 4037e0 <scols_reset_iter@plt+0xf40>
  402f6c:	ldrb	w0, [sp, #296]
  402f70:	tbz	w0, #1, 402d28 <scols_reset_iter@plt+0x488>
  402f74:	mov	w2, #0x5                   	// #5
  402f78:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  402f7c:	mov	x0, #0x0                   	// #0
  402f80:	add	x1, x1, #0x130
  402f84:	stp	x27, x28, [sp, #80]
  402f88:	bl	402790 <dcgettext@plt>
  402f8c:	mov	x1, x0
  402f90:	mov	w0, #0x1                   	// #1
  402f94:	bl	4027b0 <errx@plt>
  402f98:	add	x0, x0, #0x8
  402f9c:	adrp	x25, 41a000 <scols_reset_iter@plt+0x17760>
  402fa0:	and	x20, x0, #0xfffffffffffffff8
  402fa4:	add	x25, x25, #0x360
  402fa8:	ldr	x22, [sp, #272]
  402fac:	mov	x23, #0x0                   	// #0
  402fb0:	udiv	x19, x19, x20
  402fb4:	mov	x21, #0x0                   	// #0
  402fb8:	stp	x27, x28, [sp, #80]
  402fbc:	str	x20, [sp, #288]
  402fc0:	ldr	x0, [x22]
  402fc4:	mov	x24, #0x0                   	// #0
  402fc8:	ldr	x1, [x25]
  402fcc:	bl	402770 <fputws@plt>
  402fd0:	ldr	x27, [x22]
  402fd4:	ldr	w0, [x27]
  402fd8:	cbz	w0, 402ffc <scols_reset_iter@plt+0x75c>
  402fdc:	nop
  402fe0:	bl	402440 <wcwidth@plt>
  402fe4:	mov	w1, w0
  402fe8:	ldr	w0, [x27, #4]!
  402fec:	cmp	w1, #0x0
  402ff0:	add	x1, x24, w1, sxtw
  402ff4:	csel	x24, x1, x24, gt
  402ff8:	cbnz	w0, 402fe0 <scols_reset_iter@plt+0x740>
  402ffc:	ldr	x0, [sp, #280]
  403000:	add	x21, x21, x24
  403004:	sub	x0, x0, #0x1
  403008:	str	x0, [sp, #280]
  40300c:	cbz	x0, 403088 <scols_reset_iter@plt+0x7e8>
  403010:	add	x23, x23, #0x1
  403014:	cmp	x19, x23
  403018:	b.eq	403058 <scols_reset_iter@plt+0x7b8>  // b.none
  40301c:	add	x24, x21, #0x8
  403020:	and	x24, x24, #0xfffffffffffffff8
  403024:	cmp	x20, x24
  403028:	b.cc	403048 <scols_reset_iter@plt+0x7a8>  // b.lo, b.ul, b.last
  40302c:	nop
  403030:	mov	x21, x24
  403034:	mov	w0, #0x9                   	// #9
  403038:	add	x24, x24, #0x8
  40303c:	bl	4023a0 <putwchar@plt>
  403040:	cmp	x24, x20
  403044:	b.ls	403030 <scols_reset_iter@plt+0x790>  // b.plast
  403048:	ldr	x0, [sp, #288]
  40304c:	add	x22, x22, #0x8
  403050:	add	x20, x20, x0
  403054:	b	402fc0 <scols_reset_iter@plt+0x720>
  403058:	mov	w0, #0xa                   	// #10
  40305c:	add	x22, x22, #0x8
  403060:	mov	x23, #0x0                   	// #0
  403064:	mov	x21, #0x0                   	// #0
  403068:	ldr	x20, [sp, #288]
  40306c:	bl	4023a0 <putwchar@plt>
  403070:	b	402fc0 <scols_reset_iter@plt+0x720>
  403074:	mov	w0, #0x50                  	// #80
  403078:	bl	406a88 <scols_reset_iter@plt+0x41e8>
  40307c:	sxtw	x0, w0
  403080:	str	x0, [sp, #152]
  403084:	b	402d00 <scols_reset_iter@plt+0x460>
  403088:	cbnz	x21, 403634 <scols_reset_iter@plt+0xd94>
  40308c:	ldp	x27, x28, [sp, #80]
  403090:	b	402df0 <scols_reset_iter@plt+0x550>
  403094:	ldr	x0, [sp, #160]
  403098:	cbz	x0, 402df0 <scols_reset_iter@plt+0x550>
  40309c:	bl	4026a0 <scols_table_get_nlines@plt>
  4030a0:	cbz	x0, 402df0 <scols_reset_iter@plt+0x550>
  4030a4:	ldp	x1, x0, [sp, #152]
  4030a8:	bl	4026e0 <scols_table_set_termwidth@plt>
  4030ac:	ldr	x0, [sp, #160]
  4030b0:	mov	w1, w20
  4030b4:	bl	402590 <scols_table_set_termforce@plt>
  4030b8:	ldr	x19, [sp, #192]
  4030bc:	cbz	x19, 4030e8 <scols_reset_iter@plt+0x848>
  4030c0:	mov	w2, #0x5                   	// #5
  4030c4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4030c8:	mov	x0, #0x0                   	// #0
  4030cc:	add	x1, x1, #0x168
  4030d0:	bl	402790 <dcgettext@plt>
  4030d4:	mov	x3, x0
  4030d8:	mov	x1, x19
  4030dc:	add	x0, sp, #0x90
  4030e0:	mov	w2, #0x4                   	// #4
  4030e4:	bl	403be8 <scols_reset_iter@plt+0x1348>
  4030e8:	ldr	x19, [sp, #200]
  4030ec:	cbz	x19, 403118 <scols_reset_iter@plt+0x878>
  4030f0:	mov	w2, #0x5                   	// #5
  4030f4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4030f8:	mov	x0, #0x0                   	// #0
  4030fc:	add	x1, x1, #0x190
  403100:	bl	402790 <dcgettext@plt>
  403104:	mov	x3, x0
  403108:	mov	x1, x19
  40310c:	add	x0, sp, #0x90
  403110:	mov	w2, #0x1                   	// #1
  403114:	bl	403be8 <scols_reset_iter@plt+0x1348>
  403118:	ldr	x19, [sp, #208]
  40311c:	cbz	x19, 403148 <scols_reset_iter@plt+0x8a8>
  403120:	mov	w2, #0x5                   	// #5
  403124:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403128:	mov	x0, #0x0                   	// #0
  40312c:	add	x1, x1, #0x1b8
  403130:	bl	402790 <dcgettext@plt>
  403134:	mov	x3, x0
  403138:	mov	x1, x19
  40313c:	add	x0, sp, #0x90
  403140:	mov	w2, #0x10                  	// #16
  403144:	bl	403be8 <scols_reset_iter@plt+0x1348>
  403148:	ldr	x19, [sp, #216]
  40314c:	cbz	x19, 403178 <scols_reset_iter@plt+0x8d8>
  403150:	mov	w2, #0x5                   	// #5
  403154:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403158:	mov	x0, #0x0                   	// #0
  40315c:	add	x1, x1, #0x1e0
  403160:	bl	402790 <dcgettext@plt>
  403164:	mov	x3, x0
  403168:	mov	x1, x19
  40316c:	add	x0, sp, #0x90
  403170:	mov	w2, #0x40                  	// #64
  403174:	bl	403be8 <scols_reset_iter@plt+0x1348>
  403178:	ldr	x19, [sp, #224]
  40317c:	cbz	x19, 4031a8 <scols_reset_iter@plt+0x908>
  403180:	mov	w2, #0x5                   	// #5
  403184:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403188:	mov	x0, #0x0                   	// #0
  40318c:	add	x1, x1, #0x208
  403190:	bl	402790 <dcgettext@plt>
  403194:	mov	x3, x0
  403198:	mov	x1, x19
  40319c:	add	x0, sp, #0x90
  4031a0:	mov	w2, #0x20                  	// #32
  4031a4:	bl	403be8 <scols_reset_iter@plt+0x1348>
  4031a8:	ldr	x20, [sp, #208]
  4031ac:	cbz	x20, 4036b8 <scols_reset_iter@plt+0xe18>
  4031b0:	ldr	x2, [sp, #232]
  4031b4:	cbz	x2, 40320c <scols_reset_iter@plt+0x96c>
  4031b8:	add	x0, sp, #0x90
  4031bc:	add	x22, sp, #0xa8
  4031c0:	add	x19, x0, #0x10
  4031c4:	mov	x1, x22
  4031c8:	mov	x0, x19
  4031cc:	bl	403aa0 <scols_reset_iter@plt+0x1200>
  4031d0:	ldr	x2, [sp, #248]
  4031d4:	mov	x21, x0
  4031d8:	mov	x1, x22
  4031dc:	mov	x0, x19
  4031e0:	bl	403aa0 <scols_reset_iter@plt+0x1200>
  4031e4:	mov	x20, x0
  4031e8:	ldr	x2, [sp, #240]
  4031ec:	mov	x1, x22
  4031f0:	mov	x0, x19
  4031f4:	bl	403aa0 <scols_reset_iter@plt+0x1200>
  4031f8:	mov	x23, x0
  4031fc:	cmp	x20, #0x0
  403200:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  403204:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  403208:	b.ne	4036f0 <scols_reset_iter@plt+0xe50>  // b.any
  40320c:	ldr	x0, [sp, #184]
  403210:	cbz	x0, 40369c <scols_reset_iter@plt+0xdfc>
  403214:	ldr	x0, [sp, #160]
  403218:	bl	4025a0 <scols_table_get_ncols@plt>
  40321c:	mov	x19, x0
  403220:	ldr	x20, [sp, #184]
  403224:	mov	w2, #0x5                   	// #5
  403228:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  40322c:	mov	x0, #0x0                   	// #0
  403230:	add	x1, x1, #0x230
  403234:	bl	402790 <dcgettext@plt>
  403238:	mov	x1, x0
  40323c:	mov	x0, x20
  403240:	bl	403b88 <scols_reset_iter@plt+0x12e8>
  403244:	mov	x23, x0
  403248:	mov	x1, #0x8                   	// #8
  40324c:	mov	x0, x19
  403250:	bl	4024f0 <calloc@plt>
  403254:	cmp	x0, #0x0
  403258:	mov	x21, x0
  40325c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  403260:	b.ne	403810 <scols_reset_iter@plt+0xf70>  // b.any
  403264:	add	x0, sp, #0x90
  403268:	mov	x19, x23
  40326c:	add	x24, sp, #0xa8
  403270:	add	x20, x0, #0x10
  403274:	mov	x22, #0x0                   	// #0
  403278:	cbz	x19, 403664 <scols_reset_iter@plt+0xdc4>
  40327c:	ldr	x2, [x19]
  403280:	cbz	x2, 4036ac <scols_reset_iter@plt+0xe0c>
  403284:	mov	x1, x24
  403288:	mov	x0, x20
  40328c:	bl	403aa0 <scols_reset_iter@plt+0x1200>
  403290:	cbz	x0, 40329c <scols_reset_iter@plt+0x9fc>
  403294:	str	x0, [x21, x22, lsl #3]
  403298:	add	x22, x22, #0x1
  40329c:	add	x19, x19, #0x8
  4032a0:	b	403278 <scols_reset_iter@plt+0x9d8>
  4032a4:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  4032a8:	add	x0, sp, #0x90
  4032ac:	ldr	x1, [x1, #872]
  4032b0:	bl	403dd8 <scols_reset_iter@plt+0x1538>
  4032b4:	mov	w26, w0
  4032b8:	b	402d90 <scols_reset_iter@plt+0x4f0>
  4032bc:	adrp	x3, 41a000 <scols_reset_iter@plt+0x17760>
  4032c0:	mov	w2, #0x5                   	// #5
  4032c4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4032c8:	mov	x0, #0x0                   	// #0
  4032cc:	ldr	x19, [x3, #864]
  4032d0:	add	x1, x1, #0x9a8
  4032d4:	stp	x27, x28, [sp, #80]
  4032d8:	bl	402790 <dcgettext@plt>
  4032dc:	mov	x1, x19
  4032e0:	bl	4022a0 <fputs@plt>
  4032e4:	mov	w2, #0x5                   	// #5
  4032e8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4032ec:	mov	x0, #0x0                   	// #0
  4032f0:	add	x1, x1, #0x9b8
  4032f4:	bl	402790 <dcgettext@plt>
  4032f8:	mov	x1, x0
  4032fc:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17760>
  403300:	mov	x0, x19
  403304:	ldr	x2, [x2, #880]
  403308:	bl	402840 <fprintf@plt>
  40330c:	mov	x1, x19
  403310:	mov	w0, #0xa                   	// #10
  403314:	bl	402390 <fputc@plt>
  403318:	mov	w2, #0x5                   	// #5
  40331c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403320:	mov	x0, #0x0                   	// #0
  403324:	add	x1, x1, #0x9d8
  403328:	bl	402790 <dcgettext@plt>
  40332c:	mov	x1, x19
  403330:	bl	4022a0 <fputs@plt>
  403334:	mov	w2, #0x5                   	// #5
  403338:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40333c:	mov	x0, #0x0                   	// #0
  403340:	add	x1, x1, #0x9f0
  403344:	bl	402790 <dcgettext@plt>
  403348:	mov	x1, x19
  40334c:	bl	4022a0 <fputs@plt>
  403350:	mov	w2, #0x5                   	// #5
  403354:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403358:	mov	x0, #0x0                   	// #0
  40335c:	add	x1, x1, #0xa00
  403360:	bl	402790 <dcgettext@plt>
  403364:	mov	x1, x19
  403368:	bl	4022a0 <fputs@plt>
  40336c:	mov	w2, #0x5                   	// #5
  403370:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403374:	mov	x0, #0x0                   	// #0
  403378:	add	x1, x1, #0xa38
  40337c:	bl	402790 <dcgettext@plt>
  403380:	mov	x1, x19
  403384:	bl	4022a0 <fputs@plt>
  403388:	mov	w2, #0x5                   	// #5
  40338c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403390:	mov	x0, #0x0                   	// #0
  403394:	add	x1, x1, #0xa78
  403398:	bl	402790 <dcgettext@plt>
  40339c:	mov	x1, x19
  4033a0:	bl	4022a0 <fputs@plt>
  4033a4:	mov	w2, #0x5                   	// #5
  4033a8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4033ac:	mov	x0, #0x0                   	// #0
  4033b0:	add	x1, x1, #0xac0
  4033b4:	bl	402790 <dcgettext@plt>
  4033b8:	mov	x1, x19
  4033bc:	bl	4022a0 <fputs@plt>
  4033c0:	mov	w2, #0x5                   	// #5
  4033c4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4033c8:	mov	x0, #0x0                   	// #0
  4033cc:	add	x1, x1, #0xb08
  4033d0:	bl	402790 <dcgettext@plt>
  4033d4:	mov	x1, x19
  4033d8:	bl	4022a0 <fputs@plt>
  4033dc:	mov	w2, #0x5                   	// #5
  4033e0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4033e4:	mov	x0, #0x0                   	// #0
  4033e8:	add	x1, x1, #0xb68
  4033ec:	bl	402790 <dcgettext@plt>
  4033f0:	mov	x1, x19
  4033f4:	bl	4022a0 <fputs@plt>
  4033f8:	mov	w2, #0x5                   	// #5
  4033fc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403400:	mov	x0, #0x0                   	// #0
  403404:	add	x1, x1, #0xba0
  403408:	bl	402790 <dcgettext@plt>
  40340c:	mov	x1, x19
  403410:	bl	4022a0 <fputs@plt>
  403414:	mov	w2, #0x5                   	// #5
  403418:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40341c:	mov	x0, #0x0                   	// #0
  403420:	add	x1, x1, #0xbe0
  403424:	bl	402790 <dcgettext@plt>
  403428:	mov	x1, x19
  40342c:	bl	4022a0 <fputs@plt>
  403430:	mov	w2, #0x5                   	// #5
  403434:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403438:	mov	x0, #0x0                   	// #0
  40343c:	add	x1, x1, #0xc20
  403440:	bl	402790 <dcgettext@plt>
  403444:	mov	x1, x19
  403448:	bl	4022a0 <fputs@plt>
  40344c:	mov	w2, #0x5                   	// #5
  403450:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403454:	mov	x0, #0x0                   	// #0
  403458:	add	x1, x1, #0xc68
  40345c:	bl	402790 <dcgettext@plt>
  403460:	mov	x1, x19
  403464:	bl	4022a0 <fputs@plt>
  403468:	mov	w2, #0x5                   	// #5
  40346c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403470:	mov	x0, #0x0                   	// #0
  403474:	add	x1, x1, #0xcb8
  403478:	bl	402790 <dcgettext@plt>
  40347c:	mov	x1, x19
  403480:	bl	4022a0 <fputs@plt>
  403484:	mov	w2, #0x5                   	// #5
  403488:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40348c:	mov	x0, #0x0                   	// #0
  403490:	add	x1, x1, #0xd08
  403494:	bl	402790 <dcgettext@plt>
  403498:	mov	x1, x19
  40349c:	bl	4022a0 <fputs@plt>
  4034a0:	mov	w2, #0x5                   	// #5
  4034a4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4034a8:	mov	x0, #0x0                   	// #0
  4034ac:	add	x1, x1, #0xd48
  4034b0:	bl	402790 <dcgettext@plt>
  4034b4:	mov	x1, x19
  4034b8:	bl	4022a0 <fputs@plt>
  4034bc:	mov	x1, x19
  4034c0:	mov	w0, #0xa                   	// #10
  4034c4:	bl	402390 <fputc@plt>
  4034c8:	mov	w2, #0x5                   	// #5
  4034cc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4034d0:	mov	x0, #0x0                   	// #0
  4034d4:	add	x1, x1, #0xd90
  4034d8:	bl	402790 <dcgettext@plt>
  4034dc:	mov	x1, x19
  4034e0:	bl	4022a0 <fputs@plt>
  4034e4:	mov	w2, #0x5                   	// #5
  4034e8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4034ec:	mov	x0, #0x0                   	// #0
  4034f0:	add	x1, x1, #0xde0
  4034f4:	bl	402790 <dcgettext@plt>
  4034f8:	mov	x1, x19
  4034fc:	bl	4022a0 <fputs@plt>
  403500:	mov	w2, #0x5                   	// #5
  403504:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403508:	mov	x0, #0x0                   	// #0
  40350c:	add	x1, x1, #0xe30
  403510:	bl	402790 <dcgettext@plt>
  403514:	mov	x1, x19
  403518:	bl	4022a0 <fputs@plt>
  40351c:	mov	x1, x19
  403520:	mov	w0, #0xa                   	// #10
  403524:	bl	402390 <fputc@plt>
  403528:	mov	w2, #0x5                   	// #5
  40352c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403530:	mov	x0, #0x0                   	// #0
  403534:	add	x1, x1, #0xe80
  403538:	bl	402790 <dcgettext@plt>
  40353c:	mov	x1, x19
  403540:	bl	4022a0 <fputs@plt>
  403544:	mov	w2, #0x5                   	// #5
  403548:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40354c:	mov	x0, #0x0                   	// #0
  403550:	add	x1, x1, #0xed0
  403554:	bl	402790 <dcgettext@plt>
  403558:	mov	x1, x19
  40355c:	bl	4022a0 <fputs@plt>
  403560:	mov	w2, #0x5                   	// #5
  403564:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403568:	mov	x0, #0x0                   	// #0
  40356c:	add	x1, x1, #0xf30
  403570:	bl	402790 <dcgettext@plt>
  403574:	mov	x1, x19
  403578:	bl	4022a0 <fputs@plt>
  40357c:	mov	w2, #0x5                   	// #5
  403580:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403584:	mov	x0, #0x0                   	// #0
  403588:	add	x1, x1, #0xf70
  40358c:	bl	402790 <dcgettext@plt>
  403590:	mov	x1, x19
  403594:	bl	4022a0 <fputs@plt>
  403598:	mov	x1, x19
  40359c:	mov	w0, #0xa                   	// #10
  4035a0:	bl	402390 <fputc@plt>
  4035a4:	mov	w2, #0x5                   	// #5
  4035a8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4035ac:	mov	x0, #0x0                   	// #0
  4035b0:	add	x1, x1, #0xfb0
  4035b4:	bl	402790 <dcgettext@plt>
  4035b8:	mov	x19, x0
  4035bc:	mov	w2, #0x5                   	// #5
  4035c0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4035c4:	mov	x0, #0x0                   	// #0
  4035c8:	add	x1, x1, #0xfc8
  4035cc:	bl	402790 <dcgettext@plt>
  4035d0:	mov	x4, x0
  4035d4:	adrp	x3, 407000 <scols_reset_iter@plt+0x4760>
  4035d8:	add	x3, x3, #0xfd8
  4035dc:	mov	x2, x19
  4035e0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4035e4:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  4035e8:	add	x1, x1, #0xfe8
  4035ec:	add	x0, x0, #0xff8
  4035f0:	bl	4027e0 <printf@plt>
  4035f4:	mov	w2, #0x5                   	// #5
  4035f8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4035fc:	mov	x0, #0x0                   	// #0
  403600:	add	x1, x1, #0x10
  403604:	bl	402790 <dcgettext@plt>
  403608:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  40360c:	add	x1, x1, #0x30
  403610:	bl	4027e0 <printf@plt>
  403614:	mov	w0, #0x0                   	// #0
  403618:	bl	4022c0 <exit@plt>
  40361c:	udiv	x24, x19, x24
  403620:	udiv	x0, x23, x24
  403624:	msub	x23, x0, x24, x23
  403628:	cmp	x23, #0x0
  40362c:	cinc	x23, x0, ne  // ne = any
  403630:	b	402e3c <scols_reset_iter@plt+0x59c>
  403634:	mov	w0, #0xa                   	// #10
  403638:	bl	4023a0 <putwchar@plt>
  40363c:	ldp	x27, x28, [sp, #80]
  403640:	b	402df0 <scols_reset_iter@plt+0x550>
  403644:	sub	w0, w3, #0x21
  403648:	cmp	w0, #0x5d
  40364c:	b.hi	402ae8 <scols_reset_iter@plt+0x248>  // b.pmore
  403650:	ldr	x0, [x20, #840]
  403654:	mov	w2, w3
  403658:	add	x1, x22, #0x960
  40365c:	bl	402840 <fprintf@plt>
  403660:	b	402ae8 <scols_reset_iter@plt+0x248>
  403664:	mov	x20, #0x0                   	// #0
  403668:	b	403684 <scols_reset_iter@plt+0xde4>
  40366c:	ldr	x2, [x21, x20, lsl #3]
  403670:	mov	x1, x19
  403674:	ldr	x0, [sp, #160]
  403678:	add	x20, x20, #0x1
  40367c:	mov	x19, x2
  403680:	bl	4026d0 <scols_table_move_column@plt>
  403684:	cmp	x22, x20
  403688:	b.ne	40366c <scols_reset_iter@plt+0xdcc>  // b.any
  40368c:	mov	x0, x21
  403690:	bl	402660 <free@plt>
  403694:	mov	x0, x23
  403698:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  40369c:	ldr	x0, [sp, #160]
  4036a0:	bl	402730 <scols_print_table@plt>
  4036a4:	mov	w26, w0
  4036a8:	b	402df0 <scols_reset_iter@plt+0x550>
  4036ac:	mov	x19, #0x0                   	// #0
  4036b0:	mov	x20, #0x0                   	// #0
  4036b4:	b	403684 <scols_reset_iter@plt+0xde4>
  4036b8:	mov	w0, #0x0                   	// #0
  4036bc:	bl	402780 <scols_new_iter@plt>
  4036c0:	mov	x19, x0
  4036c4:	cbz	x0, 403828 <scols_reset_iter@plt+0xf88>
  4036c8:	ldr	x0, [sp, #160]
  4036cc:	add	x2, sp, #0x78
  4036d0:	mov	x1, x19
  4036d4:	bl	402640 <scols_table_next_column@plt>
  4036d8:	cbnz	w0, 4037c4 <scols_reset_iter@plt+0xf24>
  4036dc:	ldr	x0, [sp, #120]
  4036e0:	bl	402450 <scols_column_get_flags@plt>
  4036e4:	tbnz	w0, #5, 4036c8 <scols_reset_iter@plt+0xe28>
  4036e8:	ldr	x20, [sp, #120]
  4036ec:	b	4036c8 <scols_reset_iter@plt+0xe28>
  4036f0:	mov	w1, #0x2                   	// #2
  4036f4:	mov	x0, x21
  4036f8:	bl	403a70 <scols_reset_iter@plt+0x11d0>
  4036fc:	mov	w0, #0x0                   	// #0
  403700:	bl	402780 <scols_new_iter@plt>
  403704:	mov	x19, x0
  403708:	mov	w0, #0x0                   	// #0
  40370c:	bl	402780 <scols_new_iter@plt>
  403710:	mov	x21, x0
  403714:	cmp	x19, #0x0
  403718:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40371c:	b.eq	403804 <scols_reset_iter@plt+0xf64>  // b.none
  403720:	ldr	x0, [sp, #160]
  403724:	add	x2, sp, #0x70
  403728:	mov	x1, x21
  40372c:	bl	4025c0 <scols_table_next_line@plt>
  403730:	cbnz	w0, 4037b0 <scols_reset_iter@plt+0xf10>
  403734:	ldr	x0, [sp, #112]
  403738:	mov	x1, x23
  40373c:	bl	4022f0 <scols_line_get_column_cell@plt>
  403740:	cbz	x0, 403720 <scols_reset_iter@plt+0xe80>
  403744:	bl	402650 <scols_cell_get_data@plt>
  403748:	mov	x22, x0
  40374c:	cbz	x0, 403720 <scols_reset_iter@plt+0xe80>
  403750:	mov	x0, x19
  403754:	mov	w1, #0x0                   	// #0
  403758:	bl	4028a0 <scols_reset_iter@plt>
  40375c:	ldr	x0, [sp, #160]
  403760:	add	x2, sp, #0x78
  403764:	mov	x1, x19
  403768:	bl	4025c0 <scols_table_next_line@plt>
  40376c:	cbnz	w0, 403720 <scols_reset_iter@plt+0xe80>
  403770:	ldr	x0, [sp, #120]
  403774:	mov	x1, x20
  403778:	bl	4022f0 <scols_line_get_column_cell@plt>
  40377c:	cbz	x0, 40375c <scols_reset_iter@plt+0xebc>
  403780:	bl	402650 <scols_cell_get_data@plt>
  403784:	mov	x1, x0
  403788:	cbz	x0, 40375c <scols_reset_iter@plt+0xebc>
  40378c:	mov	x0, x22
  403790:	bl	402600 <strcmp@plt>
  403794:	cbnz	w0, 40375c <scols_reset_iter@plt+0xebc>
  403798:	ldp	x1, x0, [sp, #112]
  40379c:	bl	402670 <scols_line_is_ancestor@plt>
  4037a0:	cbnz	w0, 40375c <scols_reset_iter@plt+0xebc>
  4037a4:	ldp	x0, x1, [sp, #112]
  4037a8:	bl	4027a0 <scols_line_add_child@plt>
  4037ac:	b	40375c <scols_reset_iter@plt+0xebc>
  4037b0:	mov	x0, x19
  4037b4:	bl	402350 <scols_free_iter@plt>
  4037b8:	mov	x0, x21
  4037bc:	bl	402350 <scols_free_iter@plt>
  4037c0:	b	40320c <scols_reset_iter@plt+0x96c>
  4037c4:	mov	x0, x19
  4037c8:	bl	402350 <scols_free_iter@plt>
  4037cc:	cbz	x20, 4031b0 <scols_reset_iter@plt+0x910>
  4037d0:	mov	x0, x20
  4037d4:	mov	w1, #0x10                  	// #16
  4037d8:	bl	403a70 <scols_reset_iter@plt+0x11d0>
  4037dc:	b	4031b0 <scols_reset_iter@plt+0x910>
  4037e0:	mov	w2, #0x5                   	// #5
  4037e4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4037e8:	mov	x0, #0x0                   	// #0
  4037ec:	add	x1, x1, #0x100
  4037f0:	stp	x27, x28, [sp, #80]
  4037f4:	bl	402790 <dcgettext@plt>
  4037f8:	mov	x1, x0
  4037fc:	mov	w0, #0x1                   	// #1
  403800:	bl	4027b0 <errx@plt>
  403804:	mov	w0, #0x165                 	// #357
  403808:	stp	x27, x28, [sp, #80]
  40380c:	bl	403b60 <scols_reset_iter@plt+0x12c0>
  403810:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403814:	mov	x2, #0x8                   	// #8
  403818:	add	x1, x1, #0x818
  40381c:	mov	w0, #0x1                   	// #1
  403820:	stp	x27, x28, [sp, #80]
  403824:	bl	402860 <err@plt>
  403828:	mov	w0, #0x102                 	// #258
  40382c:	stp	x27, x28, [sp, #80]
  403830:	bl	403b60 <scols_reset_iter@plt+0x12c0>
  403834:	mov	w2, #0x5                   	// #5
  403838:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  40383c:	mov	x0, #0x0                   	// #0
  403840:	add	x1, x1, #0xb8
  403844:	stp	x27, x28, [sp, #80]
  403848:	bl	402790 <dcgettext@plt>
  40384c:	mov	x1, x0
  403850:	mov	w0, #0x1                   	// #1
  403854:	bl	4027b0 <errx@plt>
  403858:	mov	w0, w26
  40385c:	stp	x27, x28, [sp, #80]
  403860:	bl	4022c0 <exit@plt>
  403864:	mov	x29, #0x0                   	// #0
  403868:	mov	x30, #0x0                   	// #0
  40386c:	mov	x5, x0
  403870:	ldr	x1, [sp]
  403874:	add	x2, sp, #0x8
  403878:	mov	x6, sp
  40387c:	movz	x0, #0x0, lsl #48
  403880:	movk	x0, #0x0, lsl #32
  403884:	movk	x0, #0x40, lsl #16
  403888:	movk	x0, #0x28b0
  40388c:	movz	x3, #0x0, lsl #48
  403890:	movk	x3, #0x0, lsl #32
  403894:	movk	x3, #0x40, lsl #16
  403898:	movk	x3, #0x76a8
  40389c:	movz	x4, #0x0, lsl #48
  4038a0:	movk	x4, #0x0, lsl #32
  4038a4:	movk	x4, #0x40, lsl #16
  4038a8:	movk	x4, #0x7728
  4038ac:	bl	402490 <__libc_start_main@plt>
  4038b0:	bl	402580 <abort@plt>
  4038b4:	adrp	x0, 419000 <scols_reset_iter@plt+0x16760>
  4038b8:	ldr	x0, [x0, #4064]
  4038bc:	cbz	x0, 4038c4 <scols_reset_iter@plt+0x1024>
  4038c0:	b	402570 <__gmon_start__@plt>
  4038c4:	ret
  4038c8:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  4038cc:	add	x0, x0, #0x348
  4038d0:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  4038d4:	add	x1, x1, #0x348
  4038d8:	cmp	x1, x0
  4038dc:	b.eq	4038f4 <scols_reset_iter@plt+0x1054>  // b.none
  4038e0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4038e4:	ldr	x1, [x1, #1880]
  4038e8:	cbz	x1, 4038f4 <scols_reset_iter@plt+0x1054>
  4038ec:	mov	x16, x1
  4038f0:	br	x16
  4038f4:	ret
  4038f8:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  4038fc:	add	x0, x0, #0x348
  403900:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  403904:	add	x1, x1, #0x348
  403908:	sub	x1, x1, x0
  40390c:	lsr	x2, x1, #63
  403910:	add	x1, x2, x1, asr #3
  403914:	cmp	xzr, x1, asr #1
  403918:	asr	x1, x1, #1
  40391c:	b.eq	403934 <scols_reset_iter@plt+0x1094>  // b.none
  403920:	adrp	x2, 407000 <scols_reset_iter@plt+0x4760>
  403924:	ldr	x2, [x2, #1888]
  403928:	cbz	x2, 403934 <scols_reset_iter@plt+0x1094>
  40392c:	mov	x16, x2
  403930:	br	x16
  403934:	ret
  403938:	stp	x29, x30, [sp, #-32]!
  40393c:	mov	x29, sp
  403940:	str	x19, [sp, #16]
  403944:	adrp	x19, 41a000 <scols_reset_iter@plt+0x17760>
  403948:	ldrb	w0, [x19, #888]
  40394c:	cbnz	w0, 40395c <scols_reset_iter@plt+0x10bc>
  403950:	bl	4038c8 <scols_reset_iter@plt+0x1028>
  403954:	mov	w0, #0x1                   	// #1
  403958:	strb	w0, [x19, #888]
  40395c:	ldr	x19, [sp, #16]
  403960:	ldp	x29, x30, [sp], #32
  403964:	ret
  403968:	b	4038f8 <scols_reset_iter@plt+0x1058>
  40396c:	nop
  403970:	stp	x29, x30, [sp, #-32]!
  403974:	mov	x29, sp
  403978:	stp	x19, x20, [sp, #16]
  40397c:	mov	x19, x0
  403980:	mov	w0, #0x0                   	// #0
  403984:	bl	402850 <scols_init_debug@plt>
  403988:	bl	4024c0 <scols_new_table@plt>
  40398c:	str	x0, [x19, #16]
  403990:	cbz	x0, 403a50 <scols_reset_iter@plt+0x11b0>
  403994:	ldr	x1, [x19, #120]
  403998:	bl	4023b0 <scols_table_set_column_separator@plt>
  40399c:	ldrb	w0, [x19, #152]
  4039a0:	tbnz	w0, #1, 4039f0 <scols_reset_iter@plt+0x1150>
  4039a4:	ldr	x0, [x19, #16]
  4039a8:	mov	w1, #0x1                   	// #1
  4039ac:	bl	402820 <scols_table_enable_noencoding@plt>
  4039b0:	ldp	x0, x20, [x19, #16]
  4039b4:	cbz	x20, 403a20 <scols_reset_iter@plt+0x1180>
  4039b8:	ldr	x1, [x20]
  4039bc:	cbz	x1, 4039d8 <scols_reset_iter@plt+0x1138>
  4039c0:	movi	d0, #0x0
  4039c4:	mov	w2, #0x0                   	// #0
  4039c8:	bl	402340 <scols_table_new_column@plt>
  4039cc:	ldr	x1, [x20, #8]!
  4039d0:	ldr	x0, [x19, #16]
  4039d4:	cbnz	x1, 4039c0 <scols_reset_iter@plt+0x1120>
  4039d8:	ldrb	w1, [x19, #152]
  4039dc:	tbnz	w1, #2, 403a30 <scols_reset_iter@plt+0x1190>
  4039e0:	ldp	x19, x20, [sp, #16]
  4039e4:	ubfx	x1, x1, #4, #1
  4039e8:	ldp	x29, x30, [sp], #32
  4039ec:	b	402320 <scols_table_enable_noheadings@plt>
  4039f0:	ldr	x0, [x19, #16]
  4039f4:	mov	w1, #0x1                   	// #1
  4039f8:	bl	4026b0 <scols_table_enable_json@plt>
  4039fc:	ldr	x2, [x19, #32]
  403a00:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403a04:	ldr	x0, [x19, #16]
  403a08:	cmp	x2, #0x0
  403a0c:	add	x1, x1, #0x768
  403a10:	csel	x1, x1, x2, eq  // eq = none
  403a14:	bl	402300 <scols_table_set_name@plt>
  403a18:	ldp	x0, x20, [x19, #16]
  403a1c:	cbnz	x20, 4039b8 <scols_reset_iter@plt+0x1118>
  403a20:	ldp	x19, x20, [sp, #16]
  403a24:	mov	w1, #0x1                   	// #1
  403a28:	ldp	x29, x30, [sp], #32
  403a2c:	b	402320 <scols_table_enable_noheadings@plt>
  403a30:	mov	w1, #0x1                   	// #1
  403a34:	bl	4025b0 <scols_table_enable_header_repeat@plt>
  403a38:	ldrb	w1, [x19, #152]
  403a3c:	ldr	x0, [x19, #16]
  403a40:	ldp	x19, x20, [sp, #16]
  403a44:	ubfx	x1, x1, #4, #1
  403a48:	ldp	x29, x30, [sp], #32
  403a4c:	b	402320 <scols_table_enable_noheadings@plt>
  403a50:	mov	w2, #0x5                   	// #5
  403a54:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403a58:	add	x1, x1, #0x770
  403a5c:	bl	402790 <dcgettext@plt>
  403a60:	mov	x1, x0
  403a64:	mov	w0, #0x1                   	// #1
  403a68:	bl	402860 <err@plt>
  403a6c:	nop
  403a70:	stp	x29, x30, [sp, #-32]!
  403a74:	mov	x29, sp
  403a78:	stp	x19, x20, [sp, #16]
  403a7c:	mov	w20, w1
  403a80:	mov	x19, x0
  403a84:	bl	402450 <scols_column_get_flags@plt>
  403a88:	orr	w1, w0, w20
  403a8c:	mov	x0, x19
  403a90:	ldp	x19, x20, [sp, #16]
  403a94:	ldp	x29, x30, [sp], #32
  403a98:	b	4024d0 <scols_column_set_flags@plt>
  403a9c:	nop
  403aa0:	stp	x29, x30, [sp, #-64]!
  403aa4:	mov	x29, sp
  403aa8:	stp	x19, x20, [sp, #16]
  403aac:	mov	x19, x1
  403ab0:	mov	x20, x2
  403ab4:	mov	x1, #0x0                   	// #0
  403ab8:	stp	x21, x22, [sp, #32]
  403abc:	str	x23, [sp, #48]
  403ac0:	mov	x23, x0
  403ac4:	mov	x0, x2
  403ac8:	bl	405520 <scols_reset_iter@plt+0x2c80>
  403acc:	cbnz	w0, 403b20 <scols_reset_iter@plt+0x1280>
  403ad0:	ldr	x22, [x19]
  403ad4:	mov	x19, #0x0                   	// #0
  403ad8:	cbnz	x22, 403af0 <scols_reset_iter@plt+0x1250>
  403adc:	b	403afc <scols_reset_iter@plt+0x125c>
  403ae0:	add	x19, x19, #0x1
  403ae4:	mov	x1, x20
  403ae8:	bl	402500 <strcasecmp@plt>
  403aec:	cbz	w0, 403b44 <scols_reset_iter@plt+0x12a4>
  403af0:	ldr	x0, [x22, x19, lsl #3]
  403af4:	mov	w21, w19
  403af8:	cbnz	x0, 403ae0 <scols_reset_iter@plt+0x1240>
  403afc:	mov	w2, #0x5                   	// #5
  403b00:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403b04:	mov	x0, #0x0                   	// #0
  403b08:	add	x1, x1, #0x7a8
  403b0c:	bl	402790 <dcgettext@plt>
  403b10:	mov	x1, x0
  403b14:	mov	x2, x20
  403b18:	mov	w0, #0x1                   	// #1
  403b1c:	bl	4027b0 <errx@plt>
  403b20:	mov	w2, #0x5                   	// #5
  403b24:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403b28:	mov	x0, #0x0                   	// #0
  403b2c:	add	x1, x1, #0x790
  403b30:	bl	402790 <dcgettext@plt>
  403b34:	mov	x1, x0
  403b38:	mov	x0, x20
  403b3c:	bl	405800 <scols_reset_iter@plt+0x2f60>
  403b40:	sub	w21, w0, #0x1
  403b44:	mov	w1, w21
  403b48:	ldr	x0, [x23]
  403b4c:	ldp	x19, x20, [sp, #16]
  403b50:	ldp	x21, x22, [sp, #32]
  403b54:	ldr	x23, [sp, #48]
  403b58:	ldp	x29, x30, [sp], #64
  403b5c:	b	4024b0 <scols_table_get_column@plt>
  403b60:	stp	x29, x30, [sp, #-16]!
  403b64:	mov	w3, w0
  403b68:	adrp	x2, 407000 <scols_reset_iter@plt+0x4760>
  403b6c:	mov	x29, sp
  403b70:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403b74:	add	x2, x2, #0x7c8
  403b78:	add	x1, x1, #0x7e0
  403b7c:	mov	w0, #0x1                   	// #1
  403b80:	bl	402860 <err@plt>
  403b84:	nop
  403b88:	stp	x29, x30, [sp, #-32]!
  403b8c:	mov	x29, sp
  403b90:	stp	x19, x20, [sp, #16]
  403b94:	mov	x19, x1
  403b98:	mov	x20, x0
  403b9c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403ba0:	add	x1, x1, #0x800
  403ba4:	bl	406f90 <scols_reset_iter@plt+0x46f0>
  403ba8:	cbz	x0, 403bb8 <scols_reset_iter@plt+0x1318>
  403bac:	ldp	x19, x20, [sp, #16]
  403bb0:	ldp	x29, x30, [sp], #32
  403bb4:	ret
  403bb8:	bl	402800 <__errno_location@plt>
  403bbc:	ldr	w0, [x0]
  403bc0:	cmp	w0, #0xc
  403bc4:	b.eq	403be0 <scols_reset_iter@plt+0x1340>  // b.none
  403bc8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403bcc:	mov	x3, x20
  403bd0:	mov	x2, x19
  403bd4:	add	x1, x1, #0x808
  403bd8:	mov	w0, #0x1                   	// #1
  403bdc:	bl	4027b0 <errx@plt>
  403be0:	mov	w0, #0xc5                  	// #197
  403be4:	bl	403b60 <scols_reset_iter@plt+0x12c0>
  403be8:	stp	x29, x30, [sp, #-96]!
  403bec:	mov	x29, sp
  403bf0:	stp	x19, x20, [sp, #16]
  403bf4:	mov	w20, w2
  403bf8:	stp	x21, x22, [sp, #32]
  403bfc:	mov	x21, x0
  403c00:	mov	x0, x1
  403c04:	mov	x1, x3
  403c08:	bl	403b88 <scols_reset_iter@plt+0x12e8>
  403c0c:	cbz	x0, 403d14 <scols_reset_iter@plt+0x1474>
  403c10:	mov	x19, x0
  403c14:	stp	x23, x24, [sp, #48]
  403c18:	add	x22, x21, #0x10
  403c1c:	str	x25, [sp, #64]
  403c20:	mov	x24, x0
  403c24:	ldr	x2, [x19]
  403c28:	add	x23, x21, #0x18
  403c2c:	mov	w25, #0x0                   	// #0
  403c30:	cbz	x2, 403c64 <scols_reset_iter@plt+0x13c4>
  403c34:	nop
  403c38:	cmp	w20, #0x20
  403c3c:	b.ne	403c88 <scols_reset_iter@plt+0x13e8>  // b.any
  403c40:	ldrb	w1, [x2]
  403c44:	cmp	w1, #0x2d
  403c48:	b.ne	403c88 <scols_reset_iter@plt+0x13e8>  // b.any
  403c4c:	ldrb	w0, [x2, #1]
  403c50:	cbnz	w0, 403c88 <scols_reset_iter@plt+0x13e8>
  403c54:	mov	w25, #0x1                   	// #1
  403c58:	add	x19, x19, #0x8
  403c5c:	ldr	x2, [x19]
  403c60:	cbnz	x2, 403c38 <scols_reset_iter@plt+0x1398>
  403c64:	mov	x0, x24
  403c68:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  403c6c:	cbnz	w25, 403ca8 <scols_reset_iter@plt+0x1408>
  403c70:	ldp	x23, x24, [sp, #48]
  403c74:	ldr	x25, [sp, #64]
  403c78:	ldp	x19, x20, [sp, #16]
  403c7c:	ldp	x21, x22, [sp, #32]
  403c80:	ldp	x29, x30, [sp], #96
  403c84:	ret
  403c88:	mov	x1, x23
  403c8c:	mov	x0, x22
  403c90:	bl	403aa0 <scols_reset_iter@plt+0x1200>
  403c94:	cbz	x0, 403c58 <scols_reset_iter@plt+0x13b8>
  403c98:	mov	w1, w20
  403c9c:	add	x19, x19, #0x8
  403ca0:	bl	403a70 <scols_reset_iter@plt+0x11d0>
  403ca4:	b	403c5c <scols_reset_iter@plt+0x13bc>
  403ca8:	mov	w0, #0x0                   	// #0
  403cac:	bl	402780 <scols_new_iter@plt>
  403cb0:	mov	x19, x0
  403cb4:	cbz	x0, 403d1c <scols_reset_iter@plt+0x147c>
  403cb8:	ldr	x0, [x21, #16]
  403cbc:	add	x2, sp, #0x58
  403cc0:	mov	x1, x19
  403cc4:	bl	402640 <scols_table_next_column@plt>
  403cc8:	cbnz	w0, 403d00 <scols_reset_iter@plt+0x1460>
  403ccc:	ldr	x0, [sp, #88]
  403cd0:	bl	402330 <scols_column_get_header@plt>
  403cd4:	cbz	x0, 403ce0 <scols_reset_iter@plt+0x1440>
  403cd8:	bl	402650 <scols_cell_get_data@plt>
  403cdc:	cbnz	x0, 403cb8 <scols_reset_iter@plt+0x1418>
  403ce0:	ldr	x0, [sp, #88]
  403ce4:	mov	w1, w20
  403ce8:	bl	403a70 <scols_reset_iter@plt+0x11d0>
  403cec:	ldr	x0, [x21, #16]
  403cf0:	add	x2, sp, #0x58
  403cf4:	mov	x1, x19
  403cf8:	bl	402640 <scols_table_next_column@plt>
  403cfc:	cbz	w0, 403ccc <scols_reset_iter@plt+0x142c>
  403d00:	mov	x0, x19
  403d04:	bl	402350 <scols_free_iter@plt>
  403d08:	ldp	x23, x24, [sp, #48]
  403d0c:	ldr	x25, [sp, #64]
  403d10:	b	403c78 <scols_reset_iter@plt+0x13d8>
  403d14:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  403d18:	b	403c78 <scols_reset_iter@plt+0x13d8>
  403d1c:	mov	w0, #0x130                 	// #304
  403d20:	bl	403b60 <scols_reset_iter@plt+0x12c0>
  403d24:	nop
  403d28:	stp	x29, x30, [sp, #-48]!
  403d2c:	mov	x2, #0x0                   	// #0
  403d30:	mov	x29, sp
  403d34:	stp	x19, x20, [sp, #16]
  403d38:	mov	x20, x0
  403d3c:	mov	x1, x20
  403d40:	mov	x0, #0x0                   	// #0
  403d44:	stp	x21, x22, [sp, #32]
  403d48:	bl	4022b0 <mbstowcs@plt>
  403d4c:	tbnz	x0, #63, 403d98 <scols_reset_iter@plt+0x14f8>
  403d50:	add	x19, x0, #0x1
  403d54:	mov	x1, #0x1                   	// #1
  403d58:	lsl	x22, x19, #2
  403d5c:	mov	x0, x22
  403d60:	bl	4024f0 <calloc@plt>
  403d64:	cmp	x0, #0x0
  403d68:	mov	x21, x0
  403d6c:	ccmp	x22, #0x0, #0x4, eq  // eq = none
  403d70:	b.ne	403dc0 <scols_reset_iter@plt+0x1520>  // b.any
  403d74:	mov	x2, x19
  403d78:	mov	x1, x20
  403d7c:	bl	4022b0 <mbstowcs@plt>
  403d80:	tbnz	x0, #63, 403db0 <scols_reset_iter@plt+0x1510>
  403d84:	mov	x0, x21
  403d88:	ldp	x19, x20, [sp, #16]
  403d8c:	ldp	x21, x22, [sp, #32]
  403d90:	ldp	x29, x30, [sp], #48
  403d94:	ret
  403d98:	mov	x21, #0x0                   	// #0
  403d9c:	mov	x0, x21
  403da0:	ldp	x19, x20, [sp, #16]
  403da4:	ldp	x21, x22, [sp, #32]
  403da8:	ldp	x29, x30, [sp], #48
  403dac:	ret
  403db0:	mov	x0, x21
  403db4:	mov	x21, #0x0                   	// #0
  403db8:	bl	402660 <free@plt>
  403dbc:	b	403d84 <scols_reset_iter@plt+0x14e4>
  403dc0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403dc4:	mov	x2, #0x1                   	// #1
  403dc8:	add	x1, x1, #0x818
  403dcc:	mov	w0, w2
  403dd0:	bl	402860 <err@plt>
  403dd4:	nop
  403dd8:	stp	x29, x30, [sp, #-128]!
  403ddc:	mov	x29, sp
  403de0:	stp	x19, x20, [sp, #16]
  403de4:	mov	x20, x0
  403de8:	stp	x23, x24, [sp, #48]
  403dec:	mov	x24, x1
  403df0:	stp	x21, x22, [sp, #32]
  403df4:	stp	x25, x26, [sp, #64]
  403df8:	mov	x25, #0x0                   	// #0
  403dfc:	stp	x27, x28, [sp, #80]
  403e00:	stp	xzr, xzr, [sp, #104]
  403e04:	nop
  403e08:	mov	x3, x24
  403e0c:	add	x1, sp, #0x70
  403e10:	add	x0, sp, #0x68
  403e14:	mov	w2, #0xa                   	// #10
  403e18:	bl	402830 <__getdelim@plt>
  403e1c:	tbnz	x0, #63, 403e9c <scols_reset_iter@plt+0x15fc>
  403e20:	bl	402620 <__ctype_b_loc@plt>
  403e24:	ldr	x1, [x0]
  403e28:	ldr	x19, [sp, #104]
  403e2c:	b	403e34 <scols_reset_iter@plt+0x1594>
  403e30:	add	x19, x19, #0x1
  403e34:	ldrsb	w21, [x19]
  403e38:	ldrh	w0, [x1, w21, sxtw #1]
  403e3c:	tbnz	w0, #13, 403e30 <scols_reset_iter@plt+0x1590>
  403e40:	mov	x0, x19
  403e44:	mov	w1, #0xa                   	// #10
  403e48:	bl	402710 <strchr@plt>
  403e4c:	cbz	x0, 403e58 <scols_reset_iter@plt+0x15b8>
  403e50:	strb	wzr, [x0]
  403e54:	ldrsb	w21, [x19]
  403e58:	cbz	w21, 403ec8 <scols_reset_iter@plt+0x1628>
  403e5c:	ldr	x0, [sp, #104]
  403e60:	bl	403d28 <scols_reset_iter@plt+0x1488>
  403e64:	mov	x22, x0
  403e68:	cbz	x0, 4040d8 <scols_reset_iter@plt+0x1838>
  403e6c:	ldr	w0, [x20]
  403e70:	cmp	w0, #0x1
  403e74:	b.gt	403f0c <scols_reset_iter@plt+0x166c>
  403e78:	tbz	w0, #31, 404080 <scols_reset_iter@plt+0x17e0>
  403e7c:	mov	x0, x22
  403e80:	bl	402660 <free@plt>
  403e84:	mov	x3, x24
  403e88:	add	x1, sp, #0x70
  403e8c:	add	x0, sp, #0x68
  403e90:	mov	w2, #0xa                   	// #10
  403e94:	bl	402830 <__getdelim@plt>
  403e98:	tbz	x0, #63, 403e20 <scols_reset_iter@plt+0x1580>
  403e9c:	mov	x0, x24
  403ea0:	bl	4025d0 <feof@plt>
  403ea4:	cbz	w0, 4041d4 <scols_reset_iter@plt+0x1934>
  403ea8:	mov	w0, #0x0                   	// #0
  403eac:	ldp	x19, x20, [sp, #16]
  403eb0:	ldp	x21, x22, [sp, #32]
  403eb4:	ldp	x23, x24, [sp, #48]
  403eb8:	ldp	x25, x26, [sp, #64]
  403ebc:	ldp	x27, x28, [sp, #80]
  403ec0:	ldp	x29, x30, [sp], #128
  403ec4:	ret
  403ec8:	ldr	w0, [x20]
  403ecc:	cmp	w0, #0x2
  403ed0:	b.ne	403e08 <scols_reset_iter@plt+0x1568>  // b.any
  403ed4:	ldrb	w0, [x20, #152]
  403ed8:	tbz	w0, #3, 403e08 <scols_reset_iter@plt+0x1568>
  403edc:	ldr	x0, [x20, #16]
  403ee0:	cbz	x0, 404140 <scols_reset_iter@plt+0x18a0>
  403ee4:	mov	x1, #0x0                   	// #0
  403ee8:	bl	402530 <scols_table_new_line@plt>
  403eec:	cbnz	x0, 403e08 <scols_reset_iter@plt+0x1568>
  403ef0:	mov	w2, #0x5                   	// #5
  403ef4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403ef8:	add	x1, x1, #0x848
  403efc:	bl	402790 <dcgettext@plt>
  403f00:	mov	x1, x0
  403f04:	mov	w0, #0x1                   	// #1
  403f08:	bl	402860 <err@plt>
  403f0c:	cmp	w0, #0x2
  403f10:	b.ne	403e7c <scols_reset_iter@plt+0x15dc>  // b.any
  403f14:	ldr	x0, [x20, #16]
  403f18:	str	xzr, [sp, #120]
  403f1c:	cbz	x0, 404134 <scols_reset_iter@plt+0x1894>
  403f20:	ldrb	w0, [x20, #152]
  403f24:	mov	x19, x22
  403f28:	mov	x21, #0x0                   	// #0
  403f2c:	mov	x23, #0x0                   	// #0
  403f30:	tbnz	w0, #0, 404030 <scols_reset_iter@plt+0x1790>
  403f34:	nop
  403f38:	cbz	x19, 40404c <scols_reset_iter@plt+0x17ac>
  403f3c:	ldr	x1, [x20, #112]
  403f40:	mov	x0, x19
  403f44:	bl	402400 <wcspbrk@plt>
  403f48:	mov	x2, x0
  403f4c:	cbz	x0, 403ff0 <scols_reset_iter@plt+0x1750>
  403f50:	str	wzr, [x2], #4
  403f54:	str	x2, [sp, #120]
  403f58:	ldr	x0, [x20, #16]
  403f5c:	add	x27, x23, #0x1
  403f60:	bl	4025a0 <scols_table_get_ncols@plt>
  403f64:	cmp	x0, x27
  403f68:	b.cc	403fb4 <scols_reset_iter@plt+0x1714>  // b.lo, b.ul, b.last
  403f6c:	cbz	x21, 403fd8 <scols_reset_iter@plt+0x1738>
  403f70:	mov	x1, x19
  403f74:	mov	x2, #0x0                   	// #0
  403f78:	mov	x0, #0x0                   	// #0
  403f7c:	bl	402760 <wcstombs@plt>
  403f80:	mov	x26, x0
  403f84:	cmn	x0, #0x1
  403f88:	b.eq	404060 <scols_reset_iter@plt+0x17c0>  // b.none
  403f8c:	mov	x1, #0x1                   	// #1
  403f90:	add	x0, x0, x1
  403f94:	bl	4024f0 <calloc@plt>
  403f98:	mov	x28, x0
  403f9c:	cbnz	x0, 403ff8 <scols_reset_iter@plt+0x1758>
  403fa0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403fa4:	mov	x2, #0x1                   	// #1
  403fa8:	add	x1, x1, #0x818
  403fac:	mov	w0, w2
  403fb0:	bl	402860 <err@plt>
  403fb4:	ldr	x0, [x20, #16]
  403fb8:	bl	402560 <scols_table_is_json@plt>
  403fbc:	cbnz	w0, 404170 <scols_reset_iter@plt+0x18d0>
  403fc0:	movi	d0, #0x0
  403fc4:	mov	w2, #0x0                   	// #0
  403fc8:	ldr	x0, [x20, #16]
  403fcc:	mov	x1, #0x0                   	// #0
  403fd0:	bl	402340 <scols_table_new_column@plt>
  403fd4:	cbnz	x21, 403f70 <scols_reset_iter@plt+0x16d0>
  403fd8:	ldr	x0, [x20, #16]
  403fdc:	mov	x1, #0x0                   	// #0
  403fe0:	bl	402530 <scols_table_new_line@plt>
  403fe4:	mov	x21, x0
  403fe8:	cbnz	x0, 403f70 <scols_reset_iter@plt+0x16d0>
  403fec:	b	403ef0 <scols_reset_iter@plt+0x1650>
  403ff0:	str	xzr, [sp, #120]
  403ff4:	b	403f58 <scols_reset_iter@plt+0x16b8>
  403ff8:	mov	x2, x26
  403ffc:	mov	x1, x19
  404000:	bl	402760 <wcstombs@plt>
  404004:	cmn	x0, #0x1
  404008:	b.eq	404058 <scols_reset_iter@plt+0x17b8>  // b.none
  40400c:	mov	x2, x28
  404010:	mov	x1, x23
  404014:	mov	x0, x21
  404018:	mov	x19, #0x0                   	// #0
  40401c:	bl	4022e0 <scols_line_refer_data@plt>
  404020:	cbnz	w0, 404150 <scols_reset_iter@plt+0x18b0>
  404024:	ldrb	w0, [x20, #152]
  404028:	mov	x23, x27
  40402c:	tbz	w0, #0, 403f38 <scols_reset_iter@plt+0x1698>
  404030:	ldr	x1, [x20, #112]
  404034:	mov	x0, x19
  404038:	add	x2, sp, #0x78
  40403c:	bl	402540 <wcstok@plt>
  404040:	mov	x19, x0
  404044:	cbnz	x0, 403f58 <scols_reset_iter@plt+0x16b8>
  404048:	b	403e7c <scols_reset_iter@plt+0x15dc>
  40404c:	ldr	x19, [sp, #120]
  404050:	cbnz	x19, 403f3c <scols_reset_iter@plt+0x169c>
  404054:	b	403e7c <scols_reset_iter@plt+0x15dc>
  404058:	mov	x0, x28
  40405c:	bl	402660 <free@plt>
  404060:	mov	w2, #0x5                   	// #5
  404064:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  404068:	mov	x0, #0x0                   	// #0
  40406c:	add	x1, x1, #0x8a8
  404070:	bl	402790 <dcgettext@plt>
  404074:	mov	x1, x0
  404078:	mov	w0, #0x1                   	// #1
  40407c:	bl	402860 <err@plt>
  404080:	ldp	x3, x1, [x20, #128]
  404084:	cmp	x1, x25
  404088:	b.ls	404104 <scols_reset_iter@plt+0x1864>  // b.plast
  40408c:	ldr	w0, [x22]
  404090:	str	x22, [x3, x1, lsl #3]
  404094:	cbz	w0, 4040cc <scols_reset_iter@plt+0x182c>
  404098:	mov	x19, #0x0                   	// #0
  40409c:	nop
  4040a0:	bl	402440 <wcwidth@plt>
  4040a4:	mov	w1, w0
  4040a8:	ldr	w0, [x22, #4]!
  4040ac:	cmp	w1, #0x0
  4040b0:	add	x1, x19, w1, sxtw
  4040b4:	csel	x19, x1, x19, gt
  4040b8:	cbnz	w0, 4040a0 <scols_reset_iter@plt+0x1800>
  4040bc:	ldp	x1, x0, [x20, #136]
  4040c0:	cmp	x0, x19
  4040c4:	b.cs	4040cc <scols_reset_iter@plt+0x182c>  // b.hs, b.nlast
  4040c8:	str	x19, [x20, #144]
  4040cc:	add	x1, x1, #0x1
  4040d0:	str	x1, [x20, #136]
  4040d4:	b	403e08 <scols_reset_iter@plt+0x1568>
  4040d8:	ldr	x0, [sp, #104]
  4040dc:	add	x1, sp, #0x78
  4040e0:	str	xzr, [sp, #120]
  4040e4:	bl	4049f0 <scols_reset_iter@plt+0x2150>
  4040e8:	mov	x19, x0
  4040ec:	cbz	x0, 4041b8 <scols_reset_iter@plt+0x1918>
  4040f0:	bl	403d28 <scols_reset_iter@plt+0x1488>
  4040f4:	mov	x22, x0
  4040f8:	mov	x0, x19
  4040fc:	bl	402660 <free@plt>
  404100:	b	403e6c <scols_reset_iter@plt+0x15cc>
  404104:	add	x25, x25, #0x3e8
  404108:	mov	x0, x3
  40410c:	lsl	x19, x25, #3
  404110:	mov	x1, x19
  404114:	bl	402510 <realloc@plt>
  404118:	cmp	x0, #0x0
  40411c:	mov	x3, x0
  404120:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  404124:	b.ne	4041a4 <scols_reset_iter@plt+0x1904>  // b.any
  404128:	str	x0, [x20, #128]
  40412c:	ldr	x1, [x20, #136]
  404130:	b	40408c <scols_reset_iter@plt+0x17ec>
  404134:	mov	x0, x20
  404138:	bl	403970 <scols_reset_iter@plt+0x10d0>
  40413c:	b	403f20 <scols_reset_iter@plt+0x1680>
  404140:	mov	x0, x20
  404144:	bl	403970 <scols_reset_iter@plt+0x10d0>
  404148:	ldr	x0, [x20, #16]
  40414c:	b	403ee4 <scols_reset_iter@plt+0x1644>
  404150:	mov	w2, #0x5                   	// #5
  404154:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  404158:	mov	x0, #0x0                   	// #0
  40415c:	add	x1, x1, #0x8c8
  404160:	bl	402790 <dcgettext@plt>
  404164:	mov	x1, x0
  404168:	mov	w0, #0x1                   	// #1
  40416c:	bl	402860 <err@plt>
  404170:	mov	w2, #0x5                   	// #5
  404174:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  404178:	mov	x0, #0x0                   	// #0
  40417c:	add	x1, x1, #0x868
  404180:	bl	402790 <dcgettext@plt>
  404184:	mov	x19, x0
  404188:	ldr	x0, [x20, #16]
  40418c:	bl	4026a0 <scols_table_get_nlines@plt>
  404190:	add	x2, x0, #0x1
  404194:	mov	x3, x27
  404198:	mov	x1, x19
  40419c:	mov	w0, #0x1                   	// #1
  4041a0:	bl	4027b0 <errx@plt>
  4041a4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4041a8:	mov	x2, x19
  4041ac:	add	x1, x1, #0x818
  4041b0:	mov	w0, #0x1                   	// #1
  4041b4:	bl	402860 <err@plt>
  4041b8:	mov	w2, #0x5                   	// #5
  4041bc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4041c0:	add	x1, x1, #0x838
  4041c4:	bl	402790 <dcgettext@plt>
  4041c8:	mov	x1, x0
  4041cc:	mov	w0, #0x1                   	// #1
  4041d0:	bl	402860 <err@plt>
  4041d4:	mov	w2, #0x5                   	// #5
  4041d8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4041dc:	mov	x0, #0x0                   	// #0
  4041e0:	b	4041c0 <scols_reset_iter@plt+0x1920>
  4041e4:	nop
  4041e8:	stp	x29, x30, [sp, #-32]!
  4041ec:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  4041f0:	mov	x29, sp
  4041f4:	stp	x19, x20, [sp, #16]
  4041f8:	ldr	x20, [x0, #864]
  4041fc:	bl	402800 <__errno_location@plt>
  404200:	mov	x19, x0
  404204:	mov	x0, x20
  404208:	str	wzr, [x19]
  40420c:	bl	402890 <ferror@plt>
  404210:	cbz	w0, 4042b0 <scols_reset_iter@plt+0x1a10>
  404214:	ldr	w0, [x19]
  404218:	cmp	w0, #0x9
  40421c:	b.ne	404260 <scols_reset_iter@plt+0x19c0>  // b.any
  404220:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  404224:	ldr	x20, [x0, #840]
  404228:	str	wzr, [x19]
  40422c:	mov	x0, x20
  404230:	bl	402890 <ferror@plt>
  404234:	cbnz	w0, 404248 <scols_reset_iter@plt+0x19a8>
  404238:	mov	x0, x20
  40423c:	bl	402720 <fflush@plt>
  404240:	cbz	w0, 404290 <scols_reset_iter@plt+0x19f0>
  404244:	nop
  404248:	ldr	w0, [x19]
  40424c:	cmp	w0, #0x9
  404250:	b.ne	404288 <scols_reset_iter@plt+0x19e8>  // b.any
  404254:	ldp	x19, x20, [sp, #16]
  404258:	ldp	x29, x30, [sp], #32
  40425c:	ret
  404260:	cmp	w0, #0x20
  404264:	b.eq	404220 <scols_reset_iter@plt+0x1980>  // b.none
  404268:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40426c:	mov	w2, #0x5                   	// #5
  404270:	add	x1, x1, #0x8e8
  404274:	cbz	w0, 4042dc <scols_reset_iter@plt+0x1a3c>
  404278:	mov	x0, #0x0                   	// #0
  40427c:	bl	402790 <dcgettext@plt>
  404280:	bl	402610 <warn@plt>
  404284:	nop
  404288:	mov	w0, #0x1                   	// #1
  40428c:	bl	402270 <_exit@plt>
  404290:	mov	x0, x20
  404294:	bl	4023f0 <fileno@plt>
  404298:	tbnz	w0, #31, 404248 <scols_reset_iter@plt+0x19a8>
  40429c:	bl	4022d0 <dup@plt>
  4042a0:	tbnz	w0, #31, 404248 <scols_reset_iter@plt+0x19a8>
  4042a4:	bl	402550 <close@plt>
  4042a8:	cbz	w0, 404254 <scols_reset_iter@plt+0x19b4>
  4042ac:	b	404248 <scols_reset_iter@plt+0x19a8>
  4042b0:	mov	x0, x20
  4042b4:	bl	402720 <fflush@plt>
  4042b8:	cbnz	w0, 404214 <scols_reset_iter@plt+0x1974>
  4042bc:	mov	x0, x20
  4042c0:	bl	4023f0 <fileno@plt>
  4042c4:	tbnz	w0, #31, 404214 <scols_reset_iter@plt+0x1974>
  4042c8:	bl	4022d0 <dup@plt>
  4042cc:	tbnz	w0, #31, 404214 <scols_reset_iter@plt+0x1974>
  4042d0:	bl	402550 <close@plt>
  4042d4:	cbz	w0, 404220 <scols_reset_iter@plt+0x1980>
  4042d8:	b	404214 <scols_reset_iter@plt+0x1974>
  4042dc:	mov	x0, #0x0                   	// #0
  4042e0:	bl	402790 <dcgettext@plt>
  4042e4:	bl	402740 <warnx@plt>
  4042e8:	b	404288 <scols_reset_iter@plt+0x19e8>
  4042ec:	nop
  4042f0:	stp	x29, x30, [sp, #-48]!
  4042f4:	mov	x29, sp
  4042f8:	stp	x19, x20, [sp, #16]
  4042fc:	mov	x19, x0
  404300:	ldr	w0, [x0]
  404304:	cbz	w0, 404364 <scols_reset_iter@plt+0x1ac4>
  404308:	mov	x20, #0x0                   	// #0
  40430c:	stp	x21, x22, [sp, #32]
  404310:	mov	x21, x1
  404314:	mov	w22, #0xfffd                	// #65533
  404318:	b	404328 <scols_reset_iter@plt+0x1a88>
  40431c:	ldr	w0, [x19, #4]!
  404320:	mov	x20, x2
  404324:	cbz	w0, 40434c <scols_reset_iter@plt+0x1aac>
  404328:	bl	402440 <wcwidth@plt>
  40432c:	sxtw	x2, w0
  404330:	cmn	w0, #0x1
  404334:	b.ne	404340 <scols_reset_iter@plt+0x1aa0>  // b.any
  404338:	mov	x2, #0x1                   	// #1
  40433c:	str	w22, [x19]
  404340:	add	x2, x2, x20
  404344:	cmp	x2, x21
  404348:	b.ls	40431c <scols_reset_iter@plt+0x1a7c>  // b.plast
  40434c:	ldp	x21, x22, [sp, #32]
  404350:	str	wzr, [x19]
  404354:	mov	x0, x20
  404358:	ldp	x19, x20, [sp, #16]
  40435c:	ldp	x29, x30, [sp], #48
  404360:	ret
  404364:	mov	x20, #0x0                   	// #0
  404368:	b	404350 <scols_reset_iter@plt+0x1ab0>
  40436c:	nop
  404370:	stp	x29, x30, [sp, #-112]!
  404374:	mov	x29, sp
  404378:	stp	x21, x22, [sp, #32]
  40437c:	stp	x23, x24, [sp, #48]
  404380:	stp	x25, x26, [sp, #64]
  404384:	mov	x25, x2
  404388:	str	xzr, [sp, #104]
  40438c:	cbz	x0, 4044e8 <scols_reset_iter@plt+0x1c48>
  404390:	stp	x19, x20, [sp, #16]
  404394:	mov	x24, x0
  404398:	mov	x19, x0
  40439c:	ldrsb	w20, [x0]
  4043a0:	cmp	w20, #0x0
  4043a4:	cset	w0, ne  // ne = any
  4043a8:	cmp	x1, #0x0
  4043ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4043b0:	b.ne	4044f4 <scols_reset_iter@plt+0x1c54>  // b.any
  4043b4:	mov	x23, #0x0                   	// #0
  4043b8:	mov	x22, #0x0                   	// #0
  4043bc:	cbz	w0, 404504 <scols_reset_iter@plt+0x1c64>
  4043c0:	add	x26, sp, #0x64
  4043c4:	str	x27, [sp, #80]
  4043c8:	add	x27, sp, #0x68
  4043cc:	b	4043ec <scols_reset_iter@plt+0x1b4c>
  4043d0:	ldrsb	w20, [x19, #1]
  4043d4:	add	x19, x19, #0x1
  4043d8:	cmp	w20, #0x0
  4043dc:	add	x22, x22, #0x4
  4043e0:	add	x23, x23, #0x4
  4043e4:	ccmp	x19, x24, #0x2, ne  // ne = any
  4043e8:	b.hi	404468 <scols_reset_iter@plt+0x1bc8>  // b.pmore
  4043ec:	cmp	w20, #0x5c
  4043f0:	ccmp	x24, x19, #0x0, eq  // eq = none
  4043f4:	b.hi	404490 <scols_reset_iter@plt+0x1bf0>  // b.pmore
  4043f8:	bl	402620 <__ctype_b_loc@plt>
  4043fc:	mov	x21, x0
  404400:	ldr	x0, [x0]
  404404:	ubfiz	x20, x20, #1, #8
  404408:	ldrh	w0, [x0, x20]
  40440c:	tbnz	w0, #1, 4043d0 <scols_reset_iter@plt+0x1b30>
  404410:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404414:	mov	x2, x0
  404418:	mov	x3, x27
  40441c:	mov	x1, x19
  404420:	mov	x0, x26
  404424:	bl	402250 <mbrtowc@plt>
  404428:	mov	x20, x0
  40442c:	cbz	x0, 404468 <scols_reset_iter@plt+0x1bc8>
  404430:	cmn	x0, #0x3
  404434:	b.ls	4044a4 <scols_reset_iter@plt+0x1c04>  // b.plast
  404438:	ldrb	w1, [x19]
  40443c:	ldr	x0, [x21]
  404440:	ldrh	w0, [x0, x1, lsl #1]
  404444:	tbz	w0, #14, 4044c4 <scols_reset_iter@plt+0x1c24>
  404448:	add	x22, x22, #0x1
  40444c:	add	x23, x23, #0x1
  404450:	mov	x20, #0x1                   	// #1
  404454:	add	x19, x19, x20
  404458:	ldrsb	w20, [x19]
  40445c:	cmp	w20, #0x0
  404460:	ccmp	x19, x24, #0x2, ne  // ne = any
  404464:	b.ls	4043ec <scols_reset_iter@plt+0x1b4c>  // b.plast
  404468:	ldp	x19, x20, [sp, #16]
  40446c:	ldr	x27, [sp, #80]
  404470:	cbz	x25, 404478 <scols_reset_iter@plt+0x1bd8>
  404474:	str	x23, [x25]
  404478:	mov	x0, x22
  40447c:	ldp	x21, x22, [sp, #32]
  404480:	ldp	x23, x24, [sp, #48]
  404484:	ldp	x25, x26, [sp, #64]
  404488:	ldp	x29, x30, [sp], #112
  40448c:	ret
  404490:	ldrsb	w0, [x19, #1]
  404494:	cmp	w0, #0x78
  404498:	b.ne	4043f8 <scols_reset_iter@plt+0x1b58>  // b.any
  40449c:	mov	w20, w0
  4044a0:	b	4043d4 <scols_reset_iter@plt+0x1b34>
  4044a4:	ldr	w21, [sp, #100]
  4044a8:	mov	w0, w21
  4044ac:	bl	4027c0 <iswprint@plt>
  4044b0:	cbnz	w0, 4044d4 <scols_reset_iter@plt+0x1c34>
  4044b4:	lsl	x0, x20, #2
  4044b8:	add	x22, x22, x0
  4044bc:	add	x23, x23, x0
  4044c0:	b	404454 <scols_reset_iter@plt+0x1bb4>
  4044c4:	add	x22, x22, #0x4
  4044c8:	add	x23, x23, #0x4
  4044cc:	mov	x20, #0x1                   	// #1
  4044d0:	b	404454 <scols_reset_iter@plt+0x1bb4>
  4044d4:	mov	w0, w21
  4044d8:	add	x23, x23, x20
  4044dc:	bl	402440 <wcwidth@plt>
  4044e0:	add	x22, x22, w0, sxtw
  4044e4:	b	404454 <scols_reset_iter@plt+0x1bb4>
  4044e8:	mov	x23, #0x0                   	// #0
  4044ec:	mov	x22, #0x0                   	// #0
  4044f0:	b	404470 <scols_reset_iter@plt+0x1bd0>
  4044f4:	sub	x1, x1, #0x1
  4044f8:	adds	x24, x19, x1
  4044fc:	cset	w0, cc  // cc = lo, ul, last
  404500:	b	4043b4 <scols_reset_iter@plt+0x1b14>
  404504:	ldp	x19, x20, [sp, #16]
  404508:	b	404470 <scols_reset_iter@plt+0x1bd0>
  40450c:	nop
  404510:	cbz	x0, 404558 <scols_reset_iter@plt+0x1cb8>
  404514:	stp	x29, x30, [sp, #-32]!
  404518:	mov	x29, sp
  40451c:	str	x19, [sp, #16]
  404520:	mov	x19, x0
  404524:	ldrsb	w1, [x0]
  404528:	cbnz	w1, 40453c <scols_reset_iter@plt+0x1c9c>
  40452c:	mov	x0, #0x0                   	// #0
  404530:	ldr	x19, [sp, #16]
  404534:	ldp	x29, x30, [sp], #32
  404538:	ret
  40453c:	bl	402290 <strlen@plt>
  404540:	mov	x1, x0
  404544:	mov	x0, x19
  404548:	mov	x2, #0x0                   	// #0
  40454c:	ldr	x19, [sp, #16]
  404550:	ldp	x29, x30, [sp], #32
  404554:	b	404370 <scols_reset_iter@plt+0x1ad0>
  404558:	mov	x0, #0x0                   	// #0
  40455c:	ret
  404560:	stp	x29, x30, [sp, #-128]!
  404564:	mov	x29, sp
  404568:	str	x2, [sp, #104]
  40456c:	cbz	x0, 404770 <scols_reset_iter@plt+0x1ed0>
  404570:	stp	x19, x20, [sp, #16]
  404574:	mov	x20, x0
  404578:	stp	x21, x22, [sp, #32]
  40457c:	mov	x22, x1
  404580:	stp	x23, x24, [sp, #48]
  404584:	mov	x23, x3
  404588:	bl	402290 <strlen@plt>
  40458c:	ldr	x21, [sp, #104]
  404590:	str	xzr, [sp, #120]
  404594:	cmp	x0, #0x0
  404598:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  40459c:	b.eq	404764 <scols_reset_iter@plt+0x1ec4>  // b.none
  4045a0:	adrp	x24, 408000 <scols_reset_iter@plt+0x5760>
  4045a4:	add	x24, x24, #0x7c8
  4045a8:	stp	x25, x26, [sp, #64]
  4045ac:	add	x26, sp, #0x74
  4045b0:	stp	x27, x28, [sp, #80]
  4045b4:	add	x27, sp, #0x78
  4045b8:	str	xzr, [x22]
  4045bc:	nop
  4045c0:	ldrsb	w19, [x20]
  4045c4:	cbz	w19, 4045ec <scols_reset_iter@plt+0x1d4c>
  4045c8:	cbz	x23, 404610 <scols_reset_iter@plt+0x1d70>
  4045cc:	mov	w1, w19
  4045d0:	mov	x0, x23
  4045d4:	bl	402710 <strchr@plt>
  4045d8:	cbz	x0, 404610 <scols_reset_iter@plt+0x1d70>
  4045dc:	add	x20, x20, #0x1
  4045e0:	strb	w19, [x21], #1
  4045e4:	ldrsb	w19, [x20]
  4045e8:	cbnz	w19, 4045c8 <scols_reset_iter@plt+0x1d28>
  4045ec:	strb	wzr, [x21]
  4045f0:	ldr	x0, [sp, #104]
  4045f4:	ldp	x19, x20, [sp, #16]
  4045f8:	ldp	x21, x22, [sp, #32]
  4045fc:	ldp	x23, x24, [sp, #48]
  404600:	ldp	x25, x26, [sp, #64]
  404604:	ldp	x27, x28, [sp, #80]
  404608:	ldp	x29, x30, [sp], #128
  40460c:	ret
  404610:	cmp	w19, #0x5c
  404614:	and	w19, w19, #0xff
  404618:	b.eq	40465c <scols_reset_iter@plt+0x1dbc>  // b.none
  40461c:	bl	402620 <__ctype_b_loc@plt>
  404620:	mov	x28, x0
  404624:	ubfiz	x0, x19, #1, #8
  404628:	ldr	x1, [x28]
  40462c:	ldrh	w0, [x1, x0]
  404630:	tbz	w0, #1, 404680 <scols_reset_iter@plt+0x1de0>
  404634:	mov	x0, x21
  404638:	mov	w2, w19
  40463c:	mov	x1, x24
  404640:	bl	402370 <sprintf@plt>
  404644:	ldr	x0, [x22]
  404648:	add	x20, x20, #0x1
  40464c:	add	x21, x21, #0x4
  404650:	add	x0, x0, #0x4
  404654:	str	x0, [x22]
  404658:	b	4045c0 <scols_reset_iter@plt+0x1d20>
  40465c:	ldrsb	w0, [x20, #1]
  404660:	cmp	w0, #0x78
  404664:	b.eq	404634 <scols_reset_iter@plt+0x1d94>  // b.none
  404668:	bl	402620 <__ctype_b_loc@plt>
  40466c:	mov	x28, x0
  404670:	ubfiz	x0, x19, #1, #8
  404674:	ldr	x1, [x28]
  404678:	ldrh	w0, [x1, x0]
  40467c:	tbnz	w0, #1, 404634 <scols_reset_iter@plt+0x1d94>
  404680:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404684:	mov	x2, x0
  404688:	mov	x3, x27
  40468c:	mov	x1, x20
  404690:	mov	x0, x26
  404694:	bl	402250 <mbrtowc@plt>
  404698:	mov	x19, x0
  40469c:	cbz	x0, 4045ec <scols_reset_iter@plt+0x1d4c>
  4046a0:	cmn	x0, #0x3
  4046a4:	b.ls	4046dc <scols_reset_iter@plt+0x1e3c>  // b.plast
  4046a8:	ldrb	w2, [x20]
  4046ac:	ldr	x1, [x28]
  4046b0:	ubfiz	x0, x2, #1, #8
  4046b4:	ldrh	w0, [x1, x0]
  4046b8:	tbz	w0, #14, 40477c <scols_reset_iter@plt+0x1edc>
  4046bc:	ldr	x0, [x22]
  4046c0:	mov	x25, x20
  4046c4:	add	x0, x0, #0x1
  4046c8:	str	x0, [x22]
  4046cc:	ldrsb	w0, [x25], #1
  4046d0:	strb	w0, [x21], #1
  4046d4:	mov	x20, x25
  4046d8:	b	4045c0 <scols_reset_iter@plt+0x1d20>
  4046dc:	ldr	w28, [sp, #116]
  4046e0:	mov	w0, w28
  4046e4:	bl	4027c0 <iswprint@plt>
  4046e8:	cbz	w0, 404720 <scols_reset_iter@plt+0x1e80>
  4046ec:	mov	x1, x20
  4046f0:	mov	x2, x19
  4046f4:	mov	x0, x21
  4046f8:	bl	402260 <memcpy@plt>
  4046fc:	mov	w0, w28
  404700:	add	x25, x20, x19
  404704:	bl	402440 <wcwidth@plt>
  404708:	add	x21, x21, x19
  40470c:	ldr	x1, [x22]
  404710:	mov	x20, x25
  404714:	add	x0, x1, w0, sxtw
  404718:	str	x0, [x22]
  40471c:	b	4045c0 <scols_reset_iter@plt+0x1d20>
  404720:	mov	x28, x20
  404724:	mov	x20, x21
  404728:	add	x25, x28, x19
  40472c:	nop
  404730:	ldrb	w2, [x28], #1
  404734:	mov	x0, x20
  404738:	mov	x1, x24
  40473c:	add	x20, x20, #0x4
  404740:	bl	402370 <sprintf@plt>
  404744:	ldr	x0, [x22]
  404748:	cmp	x25, x28
  40474c:	add	x0, x0, #0x4
  404750:	str	x0, [x22]
  404754:	b.ne	404730 <scols_reset_iter@plt+0x1e90>  // b.any
  404758:	add	x21, x21, x19, lsl #2
  40475c:	mov	x20, x25
  404760:	b	4045c0 <scols_reset_iter@plt+0x1d20>
  404764:	ldp	x19, x20, [sp, #16]
  404768:	ldp	x21, x22, [sp, #32]
  40476c:	ldp	x23, x24, [sp, #48]
  404770:	mov	x0, #0x0                   	// #0
  404774:	ldp	x29, x30, [sp], #128
  404778:	ret
  40477c:	mov	x0, x21
  404780:	mov	x1, x24
  404784:	bl	402370 <sprintf@plt>
  404788:	add	x25, x20, #0x1
  40478c:	ldr	x0, [x22]
  404790:	add	x21, x21, #0x4
  404794:	mov	x20, x25
  404798:	add	x0, x0, #0x4
  40479c:	str	x0, [x22]
  4047a0:	b	4045c0 <scols_reset_iter@plt+0x1d20>
  4047a4:	nop
  4047a8:	cbz	x0, 404940 <scols_reset_iter@plt+0x20a0>
  4047ac:	stp	x29, x30, [sp, #-112]!
  4047b0:	mov	x29, sp
  4047b4:	stp	x19, x20, [sp, #16]
  4047b8:	mov	x20, x0
  4047bc:	stp	x23, x24, [sp, #48]
  4047c0:	mov	x23, x1
  4047c4:	stp	x25, x26, [sp, #64]
  4047c8:	mov	x26, x2
  4047cc:	bl	402290 <strlen@plt>
  4047d0:	str	xzr, [sp, #104]
  4047d4:	cmp	x0, #0x0
  4047d8:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  4047dc:	b.eq	404928 <scols_reset_iter@plt+0x2088>  // b.none
  4047e0:	stp	x21, x22, [sp, #32]
  4047e4:	add	x25, sp, #0x68
  4047e8:	mov	x21, x26
  4047ec:	str	x27, [sp, #80]
  4047f0:	add	x24, sp, #0x64
  4047f4:	str	xzr, [x23]
  4047f8:	adrp	x27, 408000 <scols_reset_iter@plt+0x5760>
  4047fc:	add	x27, x27, #0x7c8
  404800:	ldrsb	w0, [x20]
  404804:	cbz	w0, 404870 <scols_reset_iter@plt+0x1fd0>
  404808:	bl	402680 <__ctype_get_mb_cur_max@plt>
  40480c:	mov	x2, x0
  404810:	mov	x3, x25
  404814:	mov	x1, x20
  404818:	mov	x0, x24
  40481c:	bl	402250 <mbrtowc@plt>
  404820:	mov	x19, x0
  404824:	cbz	x0, 404870 <scols_reset_iter@plt+0x1fd0>
  404828:	ldrsb	w22, [x20]
  40482c:	cmn	x0, #0x3
  404830:	b.ls	404894 <scols_reset_iter@plt+0x1ff4>  // b.plast
  404834:	bl	402620 <__ctype_b_loc@plt>
  404838:	ldr	x0, [x0]
  40483c:	ubfiz	x1, x22, #1, #8
  404840:	and	w2, w22, #0xff
  404844:	ldrh	w0, [x0, x1]
  404848:	tbz	w0, #14, 4048d8 <scols_reset_iter@plt+0x2038>
  40484c:	ldr	x0, [x23]
  404850:	mov	x19, #0x1                   	// #1
  404854:	add	x0, x0, x19
  404858:	str	x0, [x23]
  40485c:	ldrsb	w0, [x20]
  404860:	add	x20, x20, x19
  404864:	strb	w0, [x21], #1
  404868:	ldrsb	w0, [x20]
  40486c:	cbnz	w0, 404808 <scols_reset_iter@plt+0x1f68>
  404870:	strb	wzr, [x21]
  404874:	mov	x0, x26
  404878:	ldp	x19, x20, [sp, #16]
  40487c:	ldp	x21, x22, [sp, #32]
  404880:	ldp	x23, x24, [sp, #48]
  404884:	ldp	x25, x26, [sp, #64]
  404888:	ldr	x27, [sp, #80]
  40488c:	ldp	x29, x30, [sp], #112
  404890:	ret
  404894:	cmp	w22, #0x5c
  404898:	b.ne	4048a8 <scols_reset_iter@plt+0x2008>  // b.any
  40489c:	ldrsb	w0, [x20, #1]
  4048a0:	cmp	w0, #0x78
  4048a4:	b.eq	404900 <scols_reset_iter@plt+0x2060>  // b.none
  4048a8:	mov	x1, x20
  4048ac:	mov	x2, x19
  4048b0:	mov	x0, x21
  4048b4:	bl	402260 <memcpy@plt>
  4048b8:	ldr	w0, [sp, #100]
  4048bc:	add	x21, x21, x19
  4048c0:	add	x20, x20, x19
  4048c4:	bl	402440 <wcwidth@plt>
  4048c8:	ldr	x1, [x23]
  4048cc:	add	x0, x1, w0, sxtw
  4048d0:	str	x0, [x23]
  4048d4:	b	404868 <scols_reset_iter@plt+0x1fc8>
  4048d8:	mov	x0, x21
  4048dc:	mov	x1, x27
  4048e0:	bl	402370 <sprintf@plt>
  4048e4:	mov	x19, #0x1                   	// #1
  4048e8:	ldr	x0, [x23]
  4048ec:	add	x21, x21, #0x4
  4048f0:	add	x20, x20, x19
  4048f4:	add	x0, x0, #0x4
  4048f8:	str	x0, [x23]
  4048fc:	b	404868 <scols_reset_iter@plt+0x1fc8>
  404900:	mov	x0, x21
  404904:	mov	w2, w22
  404908:	mov	x1, x27
  40490c:	bl	402370 <sprintf@plt>
  404910:	ldr	x0, [x23]
  404914:	add	x21, x21, #0x4
  404918:	add	x20, x20, x19
  40491c:	add	x0, x0, #0x4
  404920:	str	x0, [x23]
  404924:	b	404868 <scols_reset_iter@plt+0x1fc8>
  404928:	mov	x0, #0x0                   	// #0
  40492c:	ldp	x19, x20, [sp, #16]
  404930:	ldp	x23, x24, [sp, #48]
  404934:	ldp	x25, x26, [sp, #64]
  404938:	ldp	x29, x30, [sp], #112
  40493c:	ret
  404940:	mov	x0, #0x0                   	// #0
  404944:	ret
  404948:	lsl	x0, x0, #2
  40494c:	add	x0, x0, #0x1
  404950:	ret
  404954:	nop
  404958:	cbz	x0, 4049e0 <scols_reset_iter@plt+0x2140>
  40495c:	stp	x29, x30, [sp, #-48]!
  404960:	mov	x29, sp
  404964:	stp	x19, x20, [sp, #16]
  404968:	mov	x20, x1
  40496c:	mov	x19, x0
  404970:	bl	402290 <strlen@plt>
  404974:	mov	x3, #0x0                   	// #0
  404978:	cbz	x0, 4049b0 <scols_reset_iter@plt+0x2110>
  40497c:	str	x21, [sp, #32]
  404980:	bl	404948 <scols_reset_iter@plt+0x20a8>
  404984:	bl	402430 <malloc@plt>
  404988:	mov	x21, x0
  40498c:	cbz	x0, 4049c0 <scols_reset_iter@plt+0x2120>
  404990:	mov	x3, #0x0                   	// #0
  404994:	mov	x1, x20
  404998:	mov	x0, x19
  40499c:	mov	x2, x21
  4049a0:	bl	404560 <scols_reset_iter@plt+0x1cc0>
  4049a4:	mov	x3, x0
  4049a8:	cbz	x0, 4049c0 <scols_reset_iter@plt+0x2120>
  4049ac:	ldr	x21, [sp, #32]
  4049b0:	mov	x0, x3
  4049b4:	ldp	x19, x20, [sp, #16]
  4049b8:	ldp	x29, x30, [sp], #48
  4049bc:	ret
  4049c0:	mov	x0, x21
  4049c4:	bl	402660 <free@plt>
  4049c8:	mov	x3, #0x0                   	// #0
  4049cc:	mov	x0, x3
  4049d0:	ldp	x19, x20, [sp, #16]
  4049d4:	ldr	x21, [sp, #32]
  4049d8:	ldp	x29, x30, [sp], #48
  4049dc:	ret
  4049e0:	mov	x3, #0x0                   	// #0
  4049e4:	mov	x0, x3
  4049e8:	ret
  4049ec:	nop
  4049f0:	cbz	x0, 404a74 <scols_reset_iter@plt+0x21d4>
  4049f4:	stp	x29, x30, [sp, #-48]!
  4049f8:	mov	x29, sp
  4049fc:	stp	x19, x20, [sp, #16]
  404a00:	mov	x20, x1
  404a04:	mov	x19, x0
  404a08:	bl	402290 <strlen@plt>
  404a0c:	mov	x3, #0x0                   	// #0
  404a10:	cbz	x0, 404a44 <scols_reset_iter@plt+0x21a4>
  404a14:	str	x21, [sp, #32]
  404a18:	bl	404948 <scols_reset_iter@plt+0x20a8>
  404a1c:	bl	402430 <malloc@plt>
  404a20:	mov	x21, x0
  404a24:	cbz	x0, 404a54 <scols_reset_iter@plt+0x21b4>
  404a28:	mov	x1, x20
  404a2c:	mov	x0, x19
  404a30:	mov	x2, x21
  404a34:	bl	4047a8 <scols_reset_iter@plt+0x1f08>
  404a38:	mov	x3, x0
  404a3c:	cbz	x0, 404a54 <scols_reset_iter@plt+0x21b4>
  404a40:	ldr	x21, [sp, #32]
  404a44:	mov	x0, x3
  404a48:	ldp	x19, x20, [sp, #16]
  404a4c:	ldp	x29, x30, [sp], #48
  404a50:	ret
  404a54:	mov	x0, x21
  404a58:	bl	402660 <free@plt>
  404a5c:	mov	x3, #0x0                   	// #0
  404a60:	mov	x0, x3
  404a64:	ldp	x19, x20, [sp, #16]
  404a68:	ldr	x21, [sp, #32]
  404a6c:	ldp	x29, x30, [sp], #48
  404a70:	ret
  404a74:	mov	x3, #0x0                   	// #0
  404a78:	mov	x0, x3
  404a7c:	ret
  404a80:	stp	x29, x30, [sp, #-64]!
  404a84:	mov	x29, sp
  404a88:	stp	x19, x20, [sp, #16]
  404a8c:	stp	x21, x22, [sp, #32]
  404a90:	mov	x22, x0
  404a94:	stp	x23, x24, [sp, #48]
  404a98:	mov	x23, x1
  404a9c:	bl	402290 <strlen@plt>
  404aa0:	mov	x1, x22
  404aa4:	mov	x19, x0
  404aa8:	mov	x2, #0x0                   	// #0
  404aac:	mov	x0, #0x0                   	// #0
  404ab0:	bl	4022b0 <mbstowcs@plt>
  404ab4:	cmn	x0, #0x1
  404ab8:	b.eq	404b58 <scols_reset_iter@plt+0x22b8>  // b.none
  404abc:	add	x2, x0, #0x1
  404ac0:	mov	x20, x0
  404ac4:	mov	x0, #0x1                   	// #1
  404ac8:	lsl	x1, x2, #2
  404acc:	bl	4024f0 <calloc@plt>
  404ad0:	mov	x21, x0
  404ad4:	mov	x24, x0
  404ad8:	cbz	x0, 404b58 <scols_reset_iter@plt+0x22b8>
  404adc:	mov	x2, x20
  404ae0:	mov	x1, x22
  404ae4:	bl	4022b0 <mbstowcs@plt>
  404ae8:	cbnz	x0, 404b10 <scols_reset_iter@plt+0x2270>
  404aec:	mov	x0, x24
  404af0:	bl	402660 <free@plt>
  404af4:	strb	wzr, [x22, x19]
  404af8:	mov	x0, x19
  404afc:	ldp	x19, x20, [sp, #16]
  404b00:	ldp	x21, x22, [sp, #32]
  404b04:	ldp	x23, x24, [sp, #48]
  404b08:	ldp	x29, x30, [sp], #64
  404b0c:	ret
  404b10:	ldr	x1, [x23]
  404b14:	mov	x0, x21
  404b18:	bl	4042f0 <scols_reset_iter@plt+0x1a50>
  404b1c:	str	x0, [x23]
  404b20:	mov	x2, x19
  404b24:	mov	x1, x21
  404b28:	mov	x0, x22
  404b2c:	bl	402760 <wcstombs@plt>
  404b30:	mov	x19, x0
  404b34:	mov	x0, x21
  404b38:	bl	402660 <free@plt>
  404b3c:	tbz	x19, #63, 404af4 <scols_reset_iter@plt+0x2254>
  404b40:	mov	x0, x19
  404b44:	ldp	x19, x20, [sp, #16]
  404b48:	ldp	x21, x22, [sp, #32]
  404b4c:	ldp	x23, x24, [sp, #48]
  404b50:	ldp	x29, x30, [sp], #64
  404b54:	ret
  404b58:	mov	x24, #0x0                   	// #0
  404b5c:	mov	x0, x24
  404b60:	bl	402660 <free@plt>
  404b64:	b	404af4 <scols_reset_iter@plt+0x2254>
  404b68:	stp	x29, x30, [sp, #-128]!
  404b6c:	mov	x29, sp
  404b70:	stp	x19, x20, [sp, #16]
  404b74:	mov	x19, x1
  404b78:	mov	w20, w6
  404b7c:	stp	x21, x22, [sp, #32]
  404b80:	mov	x22, x2
  404b84:	stp	x23, x24, [sp, #48]
  404b88:	mov	x23, x3
  404b8c:	mov	x24, x0
  404b90:	stp	x25, x26, [sp, #64]
  404b94:	mov	w25, w4
  404b98:	mov	w26, w5
  404b9c:	stp	x27, x28, [sp, #80]
  404ba0:	str	x0, [sp, #104]
  404ba4:	str	w5, [sp, #112]
  404ba8:	bl	402290 <strlen@plt>
  404bac:	mov	x21, x0
  404bb0:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404bb4:	cmp	x0, #0x1
  404bb8:	b.hi	404cd4 <scols_reset_iter@plt+0x2434>  // b.pmore
  404bbc:	mov	x28, x21
  404bc0:	mov	x24, #0x0                   	// #0
  404bc4:	mov	x26, #0x0                   	// #0
  404bc8:	ldr	x1, [x23]
  404bcc:	cmp	x1, x28
  404bd0:	b.cs	404cb4 <scols_reset_iter@plt+0x2414>  // b.hs, b.nlast
  404bd4:	mov	x27, x1
  404bd8:	mov	x21, x1
  404bdc:	mov	x3, #0x0                   	// #0
  404be0:	str	x1, [x23]
  404be4:	cbz	x22, 404c80 <scols_reset_iter@plt+0x23e0>
  404be8:	sub	x22, x22, #0x1
  404bec:	cmp	w25, #0x1
  404bf0:	add	x23, x19, x22
  404bf4:	b.eq	404dcc <scols_reset_iter@plt+0x252c>  // b.none
  404bf8:	cmp	w25, #0x2
  404bfc:	b.ne	404ccc <scols_reset_iter@plt+0x242c>  // b.any
  404c00:	lsr	x25, x3, #1
  404c04:	and	x3, x3, #0x1
  404c08:	cmp	x25, #0x0
  404c0c:	mov	x0, x19
  404c10:	cset	w28, ne  // ne = any
  404c14:	adds	x3, x3, x25
  404c18:	ccmp	x19, x23, #0x2, ne  // ne = any
  404c1c:	b.cs	404c3c <scols_reset_iter@plt+0x239c>  // b.hs, b.nlast
  404c20:	sxtb	w2, w20
  404c24:	mov	x0, x19
  404c28:	strb	w2, [x0], #1
  404c2c:	sub	x1, x19, x0
  404c30:	cmn	x1, x3
  404c34:	ccmp	x23, x0, #0x0, ne  // ne = any
  404c38:	b.hi	404c28 <scols_reset_iter@plt+0x2388>  // b.pmore
  404c3c:	sub	x2, x23, x0
  404c40:	strb	wzr, [x0]
  404c44:	ldr	x1, [sp, #104]
  404c48:	cmp	x2, x21
  404c4c:	csel	x2, x2, x21, ls  // ls = plast
  404c50:	bl	402690 <mempcpy@plt>
  404c54:	cmp	w28, #0x0
  404c58:	ccmp	x23, x0, #0x0, ne  // ne = any
  404c5c:	b.ls	404e94 <scols_reset_iter@plt+0x25f4>  // b.plast
  404c60:	sxtb	w20, w20
  404c64:	mov	x1, x0
  404c68:	strb	w20, [x1], #1
  404c6c:	sub	x2, x25, x1
  404c70:	cmn	x0, x2
  404c74:	ccmp	x23, x1, #0x0, ne  // ne = any
  404c78:	b.hi	404c68 <scols_reset_iter@plt+0x23c8>  // b.pmore
  404c7c:	strb	wzr, [x1]
  404c80:	mov	x0, x24
  404c84:	bl	402660 <free@plt>
  404c88:	mov	x0, x26
  404c8c:	bl	402660 <free@plt>
  404c90:	mov	x0, x27
  404c94:	ldp	x19, x20, [sp, #16]
  404c98:	ldp	x21, x22, [sp, #32]
  404c9c:	ldp	x23, x24, [sp, #48]
  404ca0:	ldp	x25, x26, [sp, #64]
  404ca4:	ldp	x27, x28, [sp, #80]
  404ca8:	ldp	x29, x30, [sp], #128
  404cac:	ret
  404cb0:	mov	x26, #0x0                   	// #0
  404cb4:	cmp	x28, x1
  404cb8:	b.cs	404ea4 <scols_reset_iter@plt+0x2604>  // b.hs, b.nlast
  404cbc:	sub	x3, x1, x28
  404cc0:	mov	x1, x28
  404cc4:	add	x27, x3, x21
  404cc8:	b	404be0 <scols_reset_iter@plt+0x2340>
  404ccc:	cbz	w25, 404e00 <scols_reset_iter@plt+0x2560>
  404cd0:	bl	402580 <abort@plt>
  404cd4:	mov	x1, x24
  404cd8:	mov	x2, #0x0                   	// #0
  404cdc:	mov	x0, #0x0                   	// #0
  404ce0:	bl	4022b0 <mbstowcs@plt>
  404ce4:	mov	x28, x0
  404ce8:	cmn	x0, #0x1
  404cec:	b.ne	404d08 <scols_reset_iter@plt+0x2468>  // b.any
  404cf0:	mov	x0, x26
  404cf4:	tbnz	w0, #0, 404bbc <scols_reset_iter@plt+0x231c>
  404cf8:	mov	x24, #0x0                   	// #0
  404cfc:	mov	x26, #0x0                   	// #0
  404d00:	mov	x27, #0xffffffffffffffff    	// #-1
  404d04:	b	404c80 <scols_reset_iter@plt+0x23e0>
  404d08:	add	x27, x0, #0x1
  404d0c:	lsl	x26, x27, #2
  404d10:	mov	x0, x26
  404d14:	bl	402430 <malloc@plt>
  404d18:	mov	x24, x0
  404d1c:	cbz	x0, 404db4 <scols_reset_iter@plt+0x2514>
  404d20:	ldr	x1, [sp, #104]
  404d24:	mov	x2, x27
  404d28:	bl	4022b0 <mbstowcs@plt>
  404d2c:	cbz	x0, 404dc0 <scols_reset_iter@plt+0x2520>
  404d30:	add	x0, x24, x26
  404d34:	stur	wzr, [x0, #-4]
  404d38:	ldr	w0, [x24]
  404d3c:	cbz	w0, 404e9c <scols_reset_iter@plt+0x25fc>
  404d40:	mov	x27, x24
  404d44:	mov	w26, #0xfffd                	// #65533
  404d48:	str	wzr, [sp, #120]
  404d4c:	nop
  404d50:	bl	4027c0 <iswprint@plt>
  404d54:	cbnz	w0, 404d64 <scols_reset_iter@plt+0x24c4>
  404d58:	mov	w0, #0x1                   	// #1
  404d5c:	str	w26, [x27]
  404d60:	str	w0, [sp, #120]
  404d64:	ldr	w0, [x27, #4]!
  404d68:	cbnz	w0, 404d50 <scols_reset_iter@plt+0x24b0>
  404d6c:	ldr	w0, [x24]
  404d70:	mov	x27, #0x0                   	// #0
  404d74:	mov	w26, #0x0                   	// #0
  404d78:	cbz	w0, 404e8c <scols_reset_iter@plt+0x25ec>
  404d7c:	bl	402440 <wcwidth@plt>
  404d80:	cmn	w0, #0x1
  404d84:	b.eq	404e14 <scols_reset_iter@plt+0x2574>  // b.none
  404d88:	mov	w1, #0x7fffffff            	// #2147483647
  404d8c:	sub	w3, w1, w0
  404d90:	cmp	w26, w3
  404d94:	b.gt	404e14 <scols_reset_iter@plt+0x2574>
  404d98:	add	w26, w26, w0
  404d9c:	cmp	x28, x27
  404da0:	add	x2, x27, #0x1
  404da4:	b.eq	404e8c <scols_reset_iter@plt+0x25ec>  // b.none
  404da8:	ldr	w0, [x24, x2, lsl #2]
  404dac:	mov	x27, x2
  404db0:	b	404d78 <scols_reset_iter@plt+0x24d8>
  404db4:	ldr	x0, [sp, #112]
  404db8:	tbz	w0, #0, 404cf8 <scols_reset_iter@plt+0x2458>
  404dbc:	nop
  404dc0:	mov	x28, x21
  404dc4:	mov	x26, #0x0                   	// #0
  404dc8:	b	404bc8 <scols_reset_iter@plt+0x2328>
  404dcc:	cmp	x3, #0x0
  404dd0:	mov	w28, #0x0                   	// #0
  404dd4:	ccmp	x19, x23, #0x2, ne  // ne = any
  404dd8:	mov	x25, #0x0                   	// #0
  404ddc:	b.cc	404c20 <scols_reset_iter@plt+0x2380>  // b.lo, b.ul, b.last
  404de0:	ldr	x1, [sp, #104]
  404de4:	cmp	x22, x21
  404de8:	strb	wzr, [x19]
  404dec:	csel	x2, x22, x21, ls  // ls = plast
  404df0:	mov	x0, x19
  404df4:	bl	402690 <mempcpy@plt>
  404df8:	mov	x1, x0
  404dfc:	b	404c7c <scols_reset_iter@plt+0x23dc>
  404e00:	cmp	x3, #0x0
  404e04:	mov	x25, x3
  404e08:	mov	x0, x19
  404e0c:	cset	w28, ne  // ne = any
  404e10:	b	404c3c <scols_reset_iter@plt+0x239c>
  404e14:	mov	x28, #0xffffffffffffffff    	// #-1
  404e18:	ldr	w0, [sp, #120]
  404e1c:	cbz	w0, 404e78 <scols_reset_iter@plt+0x25d8>
  404e20:	mov	x2, #0x0                   	// #0
  404e24:	mov	x1, x24
  404e28:	mov	x0, #0x0                   	// #0
  404e2c:	bl	402760 <wcstombs@plt>
  404e30:	add	x2, x0, #0x1
  404e34:	mov	x0, x2
  404e38:	str	x2, [sp, #120]
  404e3c:	bl	402430 <malloc@plt>
  404e40:	mov	x26, x0
  404e44:	ldr	x2, [sp, #120]
  404e48:	cbz	x0, 404eb4 <scols_reset_iter@plt+0x2614>
  404e4c:	ldr	x1, [x23]
  404e50:	mov	x0, x24
  404e54:	stp	x26, x2, [sp, #104]
  404e58:	bl	4042f0 <scols_reset_iter@plt+0x1a50>
  404e5c:	mov	x28, x0
  404e60:	ldr	x2, [sp, #112]
  404e64:	mov	x1, x24
  404e68:	mov	x0, x26
  404e6c:	bl	402760 <wcstombs@plt>
  404e70:	mov	x21, x0
  404e74:	b	404bc8 <scols_reset_iter@plt+0x2328>
  404e78:	ldr	x1, [x23]
  404e7c:	cmp	x1, x28
  404e80:	b.cs	404cb0 <scols_reset_iter@plt+0x2410>  // b.hs, b.nlast
  404e84:	add	x2, x21, #0x1
  404e88:	b	404e34 <scols_reset_iter@plt+0x2594>
  404e8c:	sxtw	x28, w26
  404e90:	b	404e18 <scols_reset_iter@plt+0x2578>
  404e94:	mov	x1, x0
  404e98:	b	404c7c <scols_reset_iter@plt+0x23dc>
  404e9c:	str	wzr, [sp, #120]
  404ea0:	b	404d70 <scols_reset_iter@plt+0x24d0>
  404ea4:	mov	x1, x28
  404ea8:	mov	x27, x21
  404eac:	mov	x3, #0x0                   	// #0
  404eb0:	b	404be0 <scols_reset_iter@plt+0x2340>
  404eb4:	ldr	x0, [sp, #112]
  404eb8:	tbnz	w0, #0, 404bc8 <scols_reset_iter@plt+0x2328>
  404ebc:	mov	x27, #0xffffffffffffffff    	// #-1
  404ec0:	b	404c80 <scols_reset_iter@plt+0x23e0>
  404ec4:	nop
  404ec8:	mov	w6, #0x20                  	// #32
  404ecc:	b	404b68 <scols_reset_iter@plt+0x22c8>
  404ed0:	str	xzr, [x1]
  404ed4:	mov	x2, x0
  404ed8:	cbz	x0, 404f50 <scols_reset_iter@plt+0x26b0>
  404edc:	ldrsb	w3, [x0]
  404ee0:	cmp	w3, #0x2f
  404ee4:	b.ne	404f3c <scols_reset_iter@plt+0x269c>  // b.any
  404ee8:	ldrsb	w3, [x2, #1]
  404eec:	mov	x0, x2
  404ef0:	add	x2, x2, #0x1
  404ef4:	cmp	w3, #0x2f
  404ef8:	b.eq	404ee8 <scols_reset_iter@plt+0x2648>  // b.none
  404efc:	mov	x3, #0x1                   	// #1
  404f00:	str	x3, [x1]
  404f04:	ldrsb	w3, [x0, #1]
  404f08:	cmp	w3, #0x2f
  404f0c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  404f10:	b.eq	404f38 <scols_reset_iter@plt+0x2698>  // b.none
  404f14:	sub	x2, x2, #0x1
  404f18:	mov	x3, #0x2                   	// #2
  404f1c:	nop
  404f20:	str	x3, [x1]
  404f24:	ldrsb	w4, [x2, x3]
  404f28:	add	x3, x3, #0x1
  404f2c:	cmp	w4, #0x2f
  404f30:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  404f34:	b.ne	404f20 <scols_reset_iter@plt+0x2680>  // b.any
  404f38:	ret
  404f3c:	mov	x0, #0x0                   	// #0
  404f40:	cbz	w3, 404f38 <scols_reset_iter@plt+0x2698>
  404f44:	mov	x0, x2
  404f48:	add	x2, x2, #0x1
  404f4c:	b	404efc <scols_reset_iter@plt+0x265c>
  404f50:	mov	x0, #0x0                   	// #0
  404f54:	ret
  404f58:	stp	x29, x30, [sp, #-48]!
  404f5c:	mov	x29, sp
  404f60:	stp	x19, x20, [sp, #16]
  404f64:	mov	x20, x0
  404f68:	mov	w19, #0x0                   	// #0
  404f6c:	str	x21, [sp, #32]
  404f70:	mov	x21, x1
  404f74:	ldrsb	w1, [x0]
  404f78:	mov	x0, #0x0                   	// #0
  404f7c:	cbz	w1, 404fa4 <scols_reset_iter@plt+0x2704>
  404f80:	cmp	w1, #0x5c
  404f84:	b.eq	404fb4 <scols_reset_iter@plt+0x2714>  // b.none
  404f88:	mov	x0, x21
  404f8c:	bl	402710 <strchr@plt>
  404f90:	cbnz	x0, 404fe0 <scols_reset_iter@plt+0x2740>
  404f94:	add	w19, w19, #0x1
  404f98:	sxtw	x0, w19
  404f9c:	ldrsb	w1, [x20, w19, sxtw]
  404fa0:	cbnz	w1, 404f80 <scols_reset_iter@plt+0x26e0>
  404fa4:	ldp	x19, x20, [sp, #16]
  404fa8:	ldr	x21, [sp, #32]
  404fac:	ldp	x29, x30, [sp], #48
  404fb0:	ret
  404fb4:	add	w0, w19, #0x1
  404fb8:	ldrsb	w0, [x20, w0, sxtw]
  404fbc:	cbz	w0, 404fe0 <scols_reset_iter@plt+0x2740>
  404fc0:	add	w19, w19, #0x2
  404fc4:	sxtw	x0, w19
  404fc8:	ldrsb	w1, [x20, w19, sxtw]
  404fcc:	cbnz	w1, 404f80 <scols_reset_iter@plt+0x26e0>
  404fd0:	ldp	x19, x20, [sp, #16]
  404fd4:	ldr	x21, [sp, #32]
  404fd8:	ldp	x29, x30, [sp], #48
  404fdc:	ret
  404fe0:	sxtw	x0, w19
  404fe4:	ldp	x19, x20, [sp, #16]
  404fe8:	ldr	x21, [sp, #32]
  404fec:	ldp	x29, x30, [sp], #48
  404ff0:	ret
  404ff4:	nop
  404ff8:	stp	x29, x30, [sp, #-80]!
  404ffc:	mov	x29, sp
  405000:	stp	x19, x20, [sp, #16]
  405004:	mov	x19, x0
  405008:	stp	x21, x22, [sp, #32]
  40500c:	mov	x22, x1
  405010:	mov	w21, w2
  405014:	str	x23, [sp, #48]
  405018:	adrp	x23, 41a000 <scols_reset_iter@plt+0x17760>
  40501c:	str	xzr, [sp, #72]
  405020:	bl	402800 <__errno_location@plt>
  405024:	str	wzr, [x0]
  405028:	cbz	x19, 40503c <scols_reset_iter@plt+0x279c>
  40502c:	mov	x20, x0
  405030:	ldrsb	w0, [x19]
  405034:	adrp	x23, 41a000 <scols_reset_iter@plt+0x17760>
  405038:	cbnz	w0, 405054 <scols_reset_iter@plt+0x27b4>
  40503c:	ldr	w0, [x23, #832]
  405040:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405044:	mov	x3, x19
  405048:	mov	x2, x22
  40504c:	add	x1, x1, #0x808
  405050:	bl	4027b0 <errx@plt>
  405054:	add	x1, sp, #0x48
  405058:	mov	w2, w21
  40505c:	mov	x0, x19
  405060:	mov	w3, #0x0                   	// #0
  405064:	bl	4024e0 <__strtoul_internal@plt>
  405068:	ldr	w1, [x20]
  40506c:	cbnz	w1, 40509c <scols_reset_iter@plt+0x27fc>
  405070:	ldr	x1, [sp, #72]
  405074:	cmp	x1, x19
  405078:	b.eq	40503c <scols_reset_iter@plt+0x279c>  // b.none
  40507c:	cbz	x1, 405088 <scols_reset_iter@plt+0x27e8>
  405080:	ldrsb	w1, [x1]
  405084:	cbnz	w1, 40503c <scols_reset_iter@plt+0x279c>
  405088:	ldp	x19, x20, [sp, #16]
  40508c:	ldp	x21, x22, [sp, #32]
  405090:	ldr	x23, [sp, #48]
  405094:	ldp	x29, x30, [sp], #80
  405098:	ret
  40509c:	ldr	w0, [x23, #832]
  4050a0:	cmp	w1, #0x22
  4050a4:	b.ne	40503c <scols_reset_iter@plt+0x279c>  // b.any
  4050a8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4050ac:	mov	x3, x19
  4050b0:	mov	x2, x22
  4050b4:	add	x1, x1, #0x808
  4050b8:	bl	402860 <err@plt>
  4050bc:	nop
  4050c0:	stp	x29, x30, [sp, #-32]!
  4050c4:	mov	x29, sp
  4050c8:	stp	x19, x20, [sp, #16]
  4050cc:	mov	x19, x1
  4050d0:	mov	x20, x0
  4050d4:	bl	402800 <__errno_location@plt>
  4050d8:	mov	x4, x0
  4050dc:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  4050e0:	mov	w5, #0x22                  	// #34
  4050e4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4050e8:	mov	x3, x20
  4050ec:	ldr	w0, [x0, #832]
  4050f0:	mov	x2, x19
  4050f4:	str	w5, [x4]
  4050f8:	add	x1, x1, #0x808
  4050fc:	bl	402860 <err@plt>
  405100:	stp	x29, x30, [sp, #-32]!
  405104:	mov	x29, sp
  405108:	stp	x19, x20, [sp, #16]
  40510c:	mov	x20, x1
  405110:	mov	x19, x0
  405114:	bl	404ff8 <scols_reset_iter@plt+0x2758>
  405118:	mov	x1, #0xffffffff            	// #4294967295
  40511c:	cmp	x0, x1
  405120:	b.hi	405130 <scols_reset_iter@plt+0x2890>  // b.pmore
  405124:	ldp	x19, x20, [sp, #16]
  405128:	ldp	x29, x30, [sp], #32
  40512c:	ret
  405130:	mov	x1, x20
  405134:	mov	x0, x19
  405138:	bl	4050c0 <scols_reset_iter@plt+0x2820>
  40513c:	nop
  405140:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17760>
  405144:	str	w0, [x1, #832]
  405148:	ret
  40514c:	nop
  405150:	stp	x29, x30, [sp, #-128]!
  405154:	mov	x29, sp
  405158:	stp	x19, x20, [sp, #16]
  40515c:	mov	x20, x0
  405160:	stp	x21, x22, [sp, #32]
  405164:	mov	x22, x1
  405168:	stp	x23, x24, [sp, #48]
  40516c:	mov	x23, x2
  405170:	str	xzr, [x1]
  405174:	bl	402800 <__errno_location@plt>
  405178:	mov	x21, x0
  40517c:	cbz	x20, 405410 <scols_reset_iter@plt+0x2b70>
  405180:	ldrsb	w19, [x20]
  405184:	cbz	w19, 405410 <scols_reset_iter@plt+0x2b70>
  405188:	bl	402620 <__ctype_b_loc@plt>
  40518c:	mov	x24, x0
  405190:	mov	x2, x20
  405194:	ldr	x0, [x0]
  405198:	b	4051a0 <scols_reset_iter@plt+0x2900>
  40519c:	ldrsb	w19, [x2, #1]!
  4051a0:	ubfiz	x1, x19, #1, #8
  4051a4:	ldrh	w1, [x0, x1]
  4051a8:	tbnz	w1, #13, 40519c <scols_reset_iter@plt+0x28fc>
  4051ac:	cmp	w19, #0x2d
  4051b0:	b.eq	405410 <scols_reset_iter@plt+0x2b70>  // b.none
  4051b4:	stp	x25, x26, [sp, #64]
  4051b8:	mov	x0, x20
  4051bc:	mov	w3, #0x0                   	// #0
  4051c0:	stp	x27, x28, [sp, #80]
  4051c4:	add	x27, sp, #0x78
  4051c8:	mov	x1, x27
  4051cc:	str	wzr, [x21]
  4051d0:	mov	w2, #0x0                   	// #0
  4051d4:	str	xzr, [sp, #120]
  4051d8:	bl	4024e0 <__strtoul_internal@plt>
  4051dc:	mov	x25, x0
  4051e0:	ldr	x28, [sp, #120]
  4051e4:	ldr	w0, [x21]
  4051e8:	cmp	x28, x20
  4051ec:	b.eq	405400 <scols_reset_iter@plt+0x2b60>  // b.none
  4051f0:	cbnz	w0, 405430 <scols_reset_iter@plt+0x2b90>
  4051f4:	cbz	x28, 4054a4 <scols_reset_iter@plt+0x2c04>
  4051f8:	ldrsb	w0, [x28]
  4051fc:	mov	w20, #0x0                   	// #0
  405200:	mov	x26, #0x0                   	// #0
  405204:	cbz	w0, 4054a4 <scols_reset_iter@plt+0x2c04>
  405208:	ldrsb	w0, [x28, #1]
  40520c:	cmp	w0, #0x69
  405210:	b.eq	4052bc <scols_reset_iter@plt+0x2a1c>  // b.none
  405214:	and	w1, w0, #0xffffffdf
  405218:	cmp	w1, #0x42
  40521c:	b.ne	405494 <scols_reset_iter@plt+0x2bf4>  // b.any
  405220:	ldrsb	w0, [x28, #2]
  405224:	cbz	w0, 4054dc <scols_reset_iter@plt+0x2c3c>
  405228:	bl	4023d0 <localeconv@plt>
  40522c:	cbz	x0, 405408 <scols_reset_iter@plt+0x2b68>
  405230:	ldr	x1, [x0]
  405234:	cbz	x1, 405408 <scols_reset_iter@plt+0x2b68>
  405238:	mov	x0, x1
  40523c:	str	x1, [sp, #104]
  405240:	bl	402290 <strlen@plt>
  405244:	mov	x19, x0
  405248:	cbnz	x26, 405408 <scols_reset_iter@plt+0x2b68>
  40524c:	ldrsb	w0, [x28]
  405250:	cbz	w0, 405408 <scols_reset_iter@plt+0x2b68>
  405254:	ldr	x1, [sp, #104]
  405258:	mov	x2, x19
  40525c:	mov	x0, x1
  405260:	mov	x1, x28
  405264:	bl	402470 <strncmp@plt>
  405268:	cbnz	w0, 405408 <scols_reset_iter@plt+0x2b68>
  40526c:	ldrsb	w4, [x28, x19]
  405270:	add	x1, x28, x19
  405274:	cmp	w4, #0x30
  405278:	b.ne	4054b8 <scols_reset_iter@plt+0x2c18>  // b.any
  40527c:	add	w0, w20, #0x1
  405280:	mov	x19, x1
  405284:	nop
  405288:	sub	w3, w19, w1
  40528c:	ldrsb	w4, [x19, #1]!
  405290:	add	w20, w3, w0
  405294:	cmp	w4, #0x30
  405298:	b.eq	405288 <scols_reset_iter@plt+0x29e8>  // b.none
  40529c:	ldr	x0, [x24]
  4052a0:	ldrh	w0, [x0, w4, sxtw #1]
  4052a4:	tbnz	w0, #11, 405444 <scols_reset_iter@plt+0x2ba4>
  4052a8:	mov	x28, x19
  4052ac:	str	x19, [sp, #120]
  4052b0:	ldrsb	w0, [x28, #1]
  4052b4:	cmp	w0, #0x69
  4052b8:	b.ne	405214 <scols_reset_iter@plt+0x2974>  // b.any
  4052bc:	ldrsb	w0, [x28, #2]
  4052c0:	and	w0, w0, #0xffffffdf
  4052c4:	cmp	w0, #0x42
  4052c8:	b.ne	405228 <scols_reset_iter@plt+0x2988>  // b.any
  4052cc:	ldrsb	w0, [x28, #3]
  4052d0:	cbnz	w0, 405228 <scols_reset_iter@plt+0x2988>
  4052d4:	mov	x19, #0x400                 	// #1024
  4052d8:	ldrsb	w27, [x28]
  4052dc:	adrp	x24, 408000 <scols_reset_iter@plt+0x5760>
  4052e0:	add	x24, x24, #0x7d0
  4052e4:	mov	x0, x24
  4052e8:	mov	w1, w27
  4052ec:	bl	402710 <strchr@plt>
  4052f0:	cbz	x0, 4054e4 <scols_reset_iter@plt+0x2c44>
  4052f4:	sub	x1, x0, x24
  4052f8:	add	w1, w1, #0x1
  4052fc:	cbz	w1, 405500 <scols_reset_iter@plt+0x2c60>
  405300:	sxtw	x2, w19
  405304:	umulh	x0, x25, x2
  405308:	cbnz	x0, 4054d0 <scols_reset_iter@plt+0x2c30>
  40530c:	sub	w0, w1, #0x2
  405310:	b	405320 <scols_reset_iter@plt+0x2a80>
  405314:	umulh	x3, x25, x2
  405318:	sub	w0, w0, #0x1
  40531c:	cbnz	x3, 4054d0 <scols_reset_iter@plt+0x2c30>
  405320:	mul	x25, x25, x2
  405324:	cmn	w0, #0x1
  405328:	b.ne	405314 <scols_reset_iter@plt+0x2a74>  // b.any
  40532c:	mov	w0, #0x0                   	// #0
  405330:	cbz	x23, 405338 <scols_reset_iter@plt+0x2a98>
  405334:	str	w1, [x23]
  405338:	cmp	x26, #0x0
  40533c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  405340:	b.eq	4053ec <scols_reset_iter@plt+0x2b4c>  // b.none
  405344:	sub	w1, w1, #0x2
  405348:	mov	x5, #0x1                   	// #1
  40534c:	b	40535c <scols_reset_iter@plt+0x2abc>
  405350:	umulh	x2, x5, x19
  405354:	sub	w1, w1, #0x1
  405358:	cbnz	x2, 405368 <scols_reset_iter@plt+0x2ac8>
  40535c:	mul	x5, x5, x19
  405360:	cmn	w1, #0x1
  405364:	b.ne	405350 <scols_reset_iter@plt+0x2ab0>  // b.any
  405368:	cmp	x26, #0xa
  40536c:	mov	x1, #0xa                   	// #10
  405370:	b.ls	405388 <scols_reset_iter@plt+0x2ae8>  // b.plast
  405374:	nop
  405378:	add	x1, x1, x1, lsl #2
  40537c:	cmp	x26, x1, lsl #1
  405380:	lsl	x1, x1, #1
  405384:	b.hi	405378 <scols_reset_iter@plt+0x2ad8>  // b.pmore
  405388:	cbz	w20, 4053a4 <scols_reset_iter@plt+0x2b04>
  40538c:	mov	w2, #0x0                   	// #0
  405390:	add	x1, x1, x1, lsl #2
  405394:	add	w2, w2, #0x1
  405398:	cmp	w20, w2
  40539c:	lsl	x1, x1, #1
  4053a0:	b.ne	405390 <scols_reset_iter@plt+0x2af0>  // b.any
  4053a4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  4053a8:	mov	x4, #0x1                   	// #1
  4053ac:	movk	x8, #0xcccd
  4053b0:	umulh	x6, x26, x8
  4053b4:	add	x7, x4, x4, lsl #2
  4053b8:	mov	x3, x4
  4053bc:	cmp	x26, #0x9
  4053c0:	lsl	x4, x7, #1
  4053c4:	lsr	x2, x6, #3
  4053c8:	add	x2, x2, x2, lsl #2
  4053cc:	sub	x2, x26, x2, lsl #1
  4053d0:	lsr	x26, x6, #3
  4053d4:	cbz	x2, 4053e8 <scols_reset_iter@plt+0x2b48>
  4053d8:	udiv	x3, x1, x3
  4053dc:	udiv	x2, x3, x2
  4053e0:	udiv	x2, x5, x2
  4053e4:	add	x25, x25, x2
  4053e8:	b.hi	4053b0 <scols_reset_iter@plt+0x2b10>  // b.pmore
  4053ec:	str	x25, [x22]
  4053f0:	tbnz	w0, #31, 4054c0 <scols_reset_iter@plt+0x2c20>
  4053f4:	ldp	x25, x26, [sp, #64]
  4053f8:	ldp	x27, x28, [sp, #80]
  4053fc:	b	40541c <scols_reset_iter@plt+0x2b7c>
  405400:	cbnz	w0, 40543c <scols_reset_iter@plt+0x2b9c>
  405404:	nop
  405408:	ldp	x25, x26, [sp, #64]
  40540c:	ldp	x27, x28, [sp, #80]
  405410:	mov	w1, #0x16                  	// #22
  405414:	mov	w0, #0xffffffea            	// #-22
  405418:	str	w1, [x21]
  40541c:	ldp	x19, x20, [sp, #16]
  405420:	ldp	x21, x22, [sp, #32]
  405424:	ldp	x23, x24, [sp, #48]
  405428:	ldp	x29, x30, [sp], #128
  40542c:	ret
  405430:	sub	x1, x25, #0x1
  405434:	cmn	x1, #0x3
  405438:	b.ls	4051f4 <scols_reset_iter@plt+0x2954>  // b.plast
  40543c:	neg	w0, w0
  405440:	b	4053f0 <scols_reset_iter@plt+0x2b50>
  405444:	str	wzr, [x21]
  405448:	mov	x1, x27
  40544c:	mov	x0, x19
  405450:	mov	w3, #0x0                   	// #0
  405454:	mov	w2, #0x0                   	// #0
  405458:	str	xzr, [sp, #120]
  40545c:	bl	4024e0 <__strtoul_internal@plt>
  405460:	mov	x26, x0
  405464:	ldr	x28, [sp, #120]
  405468:	ldr	w0, [x21]
  40546c:	cmp	x28, x19
  405470:	b.eq	405400 <scols_reset_iter@plt+0x2b60>  // b.none
  405474:	cbz	w0, 40549c <scols_reset_iter@plt+0x2bfc>
  405478:	sub	x1, x26, #0x1
  40547c:	cmn	x1, #0x3
  405480:	b.hi	40543c <scols_reset_iter@plt+0x2b9c>  // b.pmore
  405484:	cbz	x28, 405408 <scols_reset_iter@plt+0x2b68>
  405488:	ldrsb	w0, [x28]
  40548c:	cbnz	w0, 405208 <scols_reset_iter@plt+0x2968>
  405490:	b	405408 <scols_reset_iter@plt+0x2b68>
  405494:	cbnz	w0, 405228 <scols_reset_iter@plt+0x2988>
  405498:	b	4052d4 <scols_reset_iter@plt+0x2a34>
  40549c:	cbnz	x26, 405484 <scols_reset_iter@plt+0x2be4>
  4054a0:	b	405208 <scols_reset_iter@plt+0x2968>
  4054a4:	mov	w0, #0x0                   	// #0
  4054a8:	ldp	x27, x28, [sp, #80]
  4054ac:	str	x25, [x22]
  4054b0:	ldp	x25, x26, [sp, #64]
  4054b4:	b	40541c <scols_reset_iter@plt+0x2b7c>
  4054b8:	mov	x19, x1
  4054bc:	b	40529c <scols_reset_iter@plt+0x29fc>
  4054c0:	neg	w1, w0
  4054c4:	ldp	x25, x26, [sp, #64]
  4054c8:	ldp	x27, x28, [sp, #80]
  4054cc:	b	405418 <scols_reset_iter@plt+0x2b78>
  4054d0:	mov	w0, #0xffffffde            	// #-34
  4054d4:	cbnz	x23, 405334 <scols_reset_iter@plt+0x2a94>
  4054d8:	b	405338 <scols_reset_iter@plt+0x2a98>
  4054dc:	mov	x19, #0x3e8                 	// #1000
  4054e0:	b	4052d8 <scols_reset_iter@plt+0x2a38>
  4054e4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4054e8:	add	x24, x1, #0x7e0
  4054ec:	mov	x0, x24
  4054f0:	mov	w1, w27
  4054f4:	bl	402710 <strchr@plt>
  4054f8:	cbnz	x0, 4052f4 <scols_reset_iter@plt+0x2a54>
  4054fc:	b	405408 <scols_reset_iter@plt+0x2b68>
  405500:	mov	w0, #0x0                   	// #0
  405504:	cbnz	x23, 405334 <scols_reset_iter@plt+0x2a94>
  405508:	ldp	x27, x28, [sp, #80]
  40550c:	str	x25, [x22]
  405510:	ldp	x25, x26, [sp, #64]
  405514:	b	40541c <scols_reset_iter@plt+0x2b7c>
  405518:	mov	x2, #0x0                   	// #0
  40551c:	b	405150 <scols_reset_iter@plt+0x28b0>
  405520:	stp	x29, x30, [sp, #-48]!
  405524:	mov	x29, sp
  405528:	stp	x21, x22, [sp, #32]
  40552c:	mov	x22, x1
  405530:	cbz	x0, 405590 <scols_reset_iter@plt+0x2cf0>
  405534:	mov	x21, x0
  405538:	stp	x19, x20, [sp, #16]
  40553c:	mov	x20, x0
  405540:	b	40555c <scols_reset_iter@plt+0x2cbc>
  405544:	bl	402620 <__ctype_b_loc@plt>
  405548:	ubfiz	x19, x19, #1, #8
  40554c:	ldr	x2, [x0]
  405550:	ldrh	w2, [x2, x19]
  405554:	tbz	w2, #11, 405564 <scols_reset_iter@plt+0x2cc4>
  405558:	add	x20, x20, #0x1
  40555c:	ldrsb	w19, [x20]
  405560:	cbnz	w19, 405544 <scols_reset_iter@plt+0x2ca4>
  405564:	cbz	x22, 40556c <scols_reset_iter@plt+0x2ccc>
  405568:	str	x20, [x22]
  40556c:	cmp	x20, x21
  405570:	b.ls	4055a8 <scols_reset_iter@plt+0x2d08>  // b.plast
  405574:	ldrsb	w1, [x20]
  405578:	mov	w0, #0x1                   	// #1
  40557c:	ldp	x19, x20, [sp, #16]
  405580:	cbnz	w1, 405598 <scols_reset_iter@plt+0x2cf8>
  405584:	ldp	x21, x22, [sp, #32]
  405588:	ldp	x29, x30, [sp], #48
  40558c:	ret
  405590:	cbz	x1, 405598 <scols_reset_iter@plt+0x2cf8>
  405594:	str	xzr, [x1]
  405598:	mov	w0, #0x0                   	// #0
  40559c:	ldp	x21, x22, [sp, #32]
  4055a0:	ldp	x29, x30, [sp], #48
  4055a4:	ret
  4055a8:	mov	w0, #0x0                   	// #0
  4055ac:	ldp	x19, x20, [sp, #16]
  4055b0:	b	40559c <scols_reset_iter@plt+0x2cfc>
  4055b4:	nop
  4055b8:	stp	x29, x30, [sp, #-48]!
  4055bc:	mov	x29, sp
  4055c0:	stp	x21, x22, [sp, #32]
  4055c4:	mov	x22, x1
  4055c8:	cbz	x0, 405628 <scols_reset_iter@plt+0x2d88>
  4055cc:	mov	x21, x0
  4055d0:	stp	x19, x20, [sp, #16]
  4055d4:	mov	x20, x0
  4055d8:	b	4055f4 <scols_reset_iter@plt+0x2d54>
  4055dc:	bl	402620 <__ctype_b_loc@plt>
  4055e0:	ubfiz	x19, x19, #1, #8
  4055e4:	ldr	x2, [x0]
  4055e8:	ldrh	w2, [x2, x19]
  4055ec:	tbz	w2, #12, 4055fc <scols_reset_iter@plt+0x2d5c>
  4055f0:	add	x20, x20, #0x1
  4055f4:	ldrsb	w19, [x20]
  4055f8:	cbnz	w19, 4055dc <scols_reset_iter@plt+0x2d3c>
  4055fc:	cbz	x22, 405604 <scols_reset_iter@plt+0x2d64>
  405600:	str	x20, [x22]
  405604:	cmp	x20, x21
  405608:	b.ls	405640 <scols_reset_iter@plt+0x2da0>  // b.plast
  40560c:	ldrsb	w1, [x20]
  405610:	mov	w0, #0x1                   	// #1
  405614:	ldp	x19, x20, [sp, #16]
  405618:	cbnz	w1, 405630 <scols_reset_iter@plt+0x2d90>
  40561c:	ldp	x21, x22, [sp, #32]
  405620:	ldp	x29, x30, [sp], #48
  405624:	ret
  405628:	cbz	x1, 405630 <scols_reset_iter@plt+0x2d90>
  40562c:	str	xzr, [x1]
  405630:	mov	w0, #0x0                   	// #0
  405634:	ldp	x21, x22, [sp, #32]
  405638:	ldp	x29, x30, [sp], #48
  40563c:	ret
  405640:	mov	w0, #0x0                   	// #0
  405644:	ldp	x19, x20, [sp, #16]
  405648:	b	405634 <scols_reset_iter@plt+0x2d94>
  40564c:	nop
  405650:	stp	x29, x30, [sp, #-128]!
  405654:	mov	x29, sp
  405658:	stp	x19, x20, [sp, #16]
  40565c:	mov	x20, x0
  405660:	mov	w0, #0xffffffd0            	// #-48
  405664:	stp	x21, x22, [sp, #32]
  405668:	mov	x21, x1
  40566c:	add	x22, sp, #0x80
  405670:	add	x1, sp, #0x50
  405674:	stp	x22, x22, [sp, #48]
  405678:	str	x1, [sp, #64]
  40567c:	stp	w0, wzr, [sp, #72]
  405680:	stp	x2, x3, [sp, #80]
  405684:	stp	x4, x5, [sp, #96]
  405688:	stp	x6, x7, [sp, #112]
  40568c:	b	4056d8 <scols_reset_iter@plt+0x2e38>
  405690:	ldr	x1, [x2]
  405694:	add	x0, x2, #0xf
  405698:	and	x0, x0, #0xfffffffffffffff8
  40569c:	str	x0, [sp, #48]
  4056a0:	cbz	x1, 405718 <scols_reset_iter@plt+0x2e78>
  4056a4:	ldr	x2, [sp, #48]
  4056a8:	add	x0, x2, #0xf
  4056ac:	and	x0, x0, #0xfffffffffffffff8
  4056b0:	str	x0, [sp, #48]
  4056b4:	ldr	x19, [x2]
  4056b8:	cbz	x19, 405718 <scols_reset_iter@plt+0x2e78>
  4056bc:	mov	x0, x20
  4056c0:	bl	402600 <strcmp@plt>
  4056c4:	cbz	w0, 405734 <scols_reset_iter@plt+0x2e94>
  4056c8:	mov	x1, x19
  4056cc:	mov	x0, x20
  4056d0:	bl	402600 <strcmp@plt>
  4056d4:	cbz	w0, 405738 <scols_reset_iter@plt+0x2e98>
  4056d8:	ldr	w3, [sp, #72]
  4056dc:	ldr	x2, [sp, #48]
  4056e0:	tbz	w3, #31, 405690 <scols_reset_iter@plt+0x2df0>
  4056e4:	add	w0, w3, #0x8
  4056e8:	str	w0, [sp, #72]
  4056ec:	cmp	w0, #0x0
  4056f0:	b.gt	405690 <scols_reset_iter@plt+0x2df0>
  4056f4:	ldr	x1, [x22, w3, sxtw]
  4056f8:	cbz	x1, 405718 <scols_reset_iter@plt+0x2e78>
  4056fc:	cbz	w0, 4056a8 <scols_reset_iter@plt+0x2e08>
  405700:	add	w3, w3, #0x10
  405704:	str	w3, [sp, #72]
  405708:	cmp	w3, #0x0
  40570c:	b.gt	4056a8 <scols_reset_iter@plt+0x2e08>
  405710:	add	x2, x22, w0, sxtw
  405714:	b	4056b4 <scols_reset_iter@plt+0x2e14>
  405718:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  40571c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405720:	mov	x3, x20
  405724:	mov	x2, x21
  405728:	ldr	w0, [x0, #832]
  40572c:	add	x1, x1, #0x808
  405730:	bl	4027b0 <errx@plt>
  405734:	mov	w0, #0x1                   	// #1
  405738:	ldp	x19, x20, [sp, #16]
  40573c:	ldp	x21, x22, [sp, #32]
  405740:	ldp	x29, x30, [sp], #128
  405744:	ret
  405748:	cbz	x1, 405774 <scols_reset_iter@plt+0x2ed4>
  40574c:	add	x3, x0, x1
  405750:	sxtb	w2, w2
  405754:	b	405768 <scols_reset_iter@plt+0x2ec8>
  405758:	b.eq	405778 <scols_reset_iter@plt+0x2ed8>  // b.none
  40575c:	add	x0, x0, #0x1
  405760:	cmp	x3, x0
  405764:	b.eq	405774 <scols_reset_iter@plt+0x2ed4>  // b.none
  405768:	ldrsb	w1, [x0]
  40576c:	cmp	w2, w1
  405770:	cbnz	w1, 405758 <scols_reset_iter@plt+0x2eb8>
  405774:	mov	x0, #0x0                   	// #0
  405778:	ret
  40577c:	nop
  405780:	stp	x29, x30, [sp, #-32]!
  405784:	mov	w2, #0xa                   	// #10
  405788:	mov	x29, sp
  40578c:	stp	x19, x20, [sp, #16]
  405790:	mov	x20, x1
  405794:	mov	x19, x0
  405798:	bl	405100 <scols_reset_iter@plt+0x2860>
  40579c:	mov	w1, #0xffff                	// #65535
  4057a0:	cmp	w0, w1
  4057a4:	b.hi	4057b4 <scols_reset_iter@plt+0x2f14>  // b.pmore
  4057a8:	ldp	x19, x20, [sp, #16]
  4057ac:	ldp	x29, x30, [sp], #32
  4057b0:	ret
  4057b4:	mov	x1, x20
  4057b8:	mov	x0, x19
  4057bc:	bl	4050c0 <scols_reset_iter@plt+0x2820>
  4057c0:	stp	x29, x30, [sp, #-32]!
  4057c4:	mov	w2, #0x10                  	// #16
  4057c8:	mov	x29, sp
  4057cc:	stp	x19, x20, [sp, #16]
  4057d0:	mov	x20, x1
  4057d4:	mov	x19, x0
  4057d8:	bl	405100 <scols_reset_iter@plt+0x2860>
  4057dc:	mov	w1, #0xffff                	// #65535
  4057e0:	cmp	w0, w1
  4057e4:	b.hi	4057f4 <scols_reset_iter@plt+0x2f54>  // b.pmore
  4057e8:	ldp	x19, x20, [sp, #16]
  4057ec:	ldp	x29, x30, [sp], #32
  4057f0:	ret
  4057f4:	mov	x1, x20
  4057f8:	mov	x0, x19
  4057fc:	bl	4050c0 <scols_reset_iter@plt+0x2820>
  405800:	mov	w2, #0xa                   	// #10
  405804:	b	405100 <scols_reset_iter@plt+0x2860>
  405808:	mov	w2, #0x10                  	// #16
  40580c:	b	405100 <scols_reset_iter@plt+0x2860>
  405810:	stp	x29, x30, [sp, #-64]!
  405814:	mov	x29, sp
  405818:	stp	x19, x20, [sp, #16]
  40581c:	mov	x19, x0
  405820:	stp	x21, x22, [sp, #32]
  405824:	mov	x21, x1
  405828:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  40582c:	str	xzr, [sp, #56]
  405830:	bl	402800 <__errno_location@plt>
  405834:	str	wzr, [x0]
  405838:	cbz	x19, 40584c <scols_reset_iter@plt+0x2fac>
  40583c:	mov	x20, x0
  405840:	ldrsb	w0, [x19]
  405844:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  405848:	cbnz	w0, 405864 <scols_reset_iter@plt+0x2fc4>
  40584c:	ldr	w0, [x22, #832]
  405850:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405854:	mov	x3, x19
  405858:	mov	x2, x21
  40585c:	add	x1, x1, #0x808
  405860:	bl	4027b0 <errx@plt>
  405864:	add	x1, sp, #0x38
  405868:	mov	x0, x19
  40586c:	mov	w3, #0x0                   	// #0
  405870:	mov	w2, #0xa                   	// #10
  405874:	bl	402460 <__strtol_internal@plt>
  405878:	ldr	w1, [x20]
  40587c:	cbnz	w1, 4058a8 <scols_reset_iter@plt+0x3008>
  405880:	ldr	x1, [sp, #56]
  405884:	cmp	x1, x19
  405888:	b.eq	40584c <scols_reset_iter@plt+0x2fac>  // b.none
  40588c:	cbz	x1, 405898 <scols_reset_iter@plt+0x2ff8>
  405890:	ldrsb	w1, [x1]
  405894:	cbnz	w1, 40584c <scols_reset_iter@plt+0x2fac>
  405898:	ldp	x19, x20, [sp, #16]
  40589c:	ldp	x21, x22, [sp, #32]
  4058a0:	ldp	x29, x30, [sp], #64
  4058a4:	ret
  4058a8:	ldr	w0, [x22, #832]
  4058ac:	cmp	w1, #0x22
  4058b0:	b.ne	40584c <scols_reset_iter@plt+0x2fac>  // b.any
  4058b4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4058b8:	mov	x3, x19
  4058bc:	mov	x2, x21
  4058c0:	add	x1, x1, #0x808
  4058c4:	bl	402860 <err@plt>
  4058c8:	stp	x29, x30, [sp, #-32]!
  4058cc:	mov	x29, sp
  4058d0:	stp	x19, x20, [sp, #16]
  4058d4:	mov	x19, x1
  4058d8:	mov	x20, x0
  4058dc:	bl	405810 <scols_reset_iter@plt+0x2f70>
  4058e0:	mov	x2, #0x80000000            	// #2147483648
  4058e4:	add	x2, x0, x2
  4058e8:	mov	x1, #0xffffffff            	// #4294967295
  4058ec:	cmp	x2, x1
  4058f0:	b.hi	405900 <scols_reset_iter@plt+0x3060>  // b.pmore
  4058f4:	ldp	x19, x20, [sp, #16]
  4058f8:	ldp	x29, x30, [sp], #32
  4058fc:	ret
  405900:	bl	402800 <__errno_location@plt>
  405904:	mov	x4, x0
  405908:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  40590c:	mov	w5, #0x22                  	// #34
  405910:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405914:	mov	x3, x20
  405918:	ldr	w0, [x0, #832]
  40591c:	mov	x2, x19
  405920:	str	w5, [x4]
  405924:	add	x1, x1, #0x808
  405928:	bl	402860 <err@plt>
  40592c:	nop
  405930:	stp	x29, x30, [sp, #-32]!
  405934:	mov	x29, sp
  405938:	stp	x19, x20, [sp, #16]
  40593c:	mov	x19, x1
  405940:	mov	x20, x0
  405944:	bl	4058c8 <scols_reset_iter@plt+0x3028>
  405948:	add	w2, w0, #0x8, lsl #12
  40594c:	mov	w1, #0xffff                	// #65535
  405950:	cmp	w2, w1
  405954:	b.hi	405964 <scols_reset_iter@plt+0x30c4>  // b.pmore
  405958:	ldp	x19, x20, [sp, #16]
  40595c:	ldp	x29, x30, [sp], #32
  405960:	ret
  405964:	bl	402800 <__errno_location@plt>
  405968:	mov	x4, x0
  40596c:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  405970:	mov	w5, #0x22                  	// #34
  405974:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405978:	mov	x3, x20
  40597c:	ldr	w0, [x0, #832]
  405980:	mov	x2, x19
  405984:	str	w5, [x4]
  405988:	add	x1, x1, #0x808
  40598c:	bl	402860 <err@plt>
  405990:	mov	w2, #0xa                   	// #10
  405994:	b	404ff8 <scols_reset_iter@plt+0x2758>
  405998:	mov	w2, #0x10                  	// #16
  40599c:	b	404ff8 <scols_reset_iter@plt+0x2758>
  4059a0:	stp	x29, x30, [sp, #-64]!
  4059a4:	mov	x29, sp
  4059a8:	stp	x19, x20, [sp, #16]
  4059ac:	mov	x19, x0
  4059b0:	stp	x21, x22, [sp, #32]
  4059b4:	mov	x21, x1
  4059b8:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  4059bc:	str	xzr, [sp, #56]
  4059c0:	bl	402800 <__errno_location@plt>
  4059c4:	str	wzr, [x0]
  4059c8:	cbz	x19, 4059dc <scols_reset_iter@plt+0x313c>
  4059cc:	mov	x20, x0
  4059d0:	ldrsb	w0, [x19]
  4059d4:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  4059d8:	cbnz	w0, 4059f4 <scols_reset_iter@plt+0x3154>
  4059dc:	ldr	w0, [x22, #832]
  4059e0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4059e4:	mov	x3, x19
  4059e8:	mov	x2, x21
  4059ec:	add	x1, x1, #0x808
  4059f0:	bl	4027b0 <errx@plt>
  4059f4:	mov	x0, x19
  4059f8:	add	x1, sp, #0x38
  4059fc:	bl	402310 <strtod@plt>
  405a00:	ldr	w0, [x20]
  405a04:	cbnz	w0, 405a30 <scols_reset_iter@plt+0x3190>
  405a08:	ldr	x0, [sp, #56]
  405a0c:	cmp	x0, x19
  405a10:	b.eq	4059dc <scols_reset_iter@plt+0x313c>  // b.none
  405a14:	cbz	x0, 405a20 <scols_reset_iter@plt+0x3180>
  405a18:	ldrsb	w0, [x0]
  405a1c:	cbnz	w0, 4059dc <scols_reset_iter@plt+0x313c>
  405a20:	ldp	x19, x20, [sp, #16]
  405a24:	ldp	x21, x22, [sp, #32]
  405a28:	ldp	x29, x30, [sp], #64
  405a2c:	ret
  405a30:	cmp	w0, #0x22
  405a34:	ldr	w0, [x22, #832]
  405a38:	b.ne	4059dc <scols_reset_iter@plt+0x313c>  // b.any
  405a3c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405a40:	mov	x3, x19
  405a44:	mov	x2, x21
  405a48:	add	x1, x1, #0x808
  405a4c:	bl	402860 <err@plt>
  405a50:	stp	x29, x30, [sp, #-64]!
  405a54:	mov	x29, sp
  405a58:	stp	x19, x20, [sp, #16]
  405a5c:	mov	x19, x0
  405a60:	stp	x21, x22, [sp, #32]
  405a64:	mov	x21, x1
  405a68:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  405a6c:	str	xzr, [sp, #56]
  405a70:	bl	402800 <__errno_location@plt>
  405a74:	str	wzr, [x0]
  405a78:	cbz	x19, 405a8c <scols_reset_iter@plt+0x31ec>
  405a7c:	mov	x20, x0
  405a80:	ldrsb	w0, [x19]
  405a84:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  405a88:	cbnz	w0, 405aa4 <scols_reset_iter@plt+0x3204>
  405a8c:	ldr	w0, [x22, #832]
  405a90:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405a94:	mov	x3, x19
  405a98:	mov	x2, x21
  405a9c:	add	x1, x1, #0x808
  405aa0:	bl	4027b0 <errx@plt>
  405aa4:	add	x1, sp, #0x38
  405aa8:	mov	x0, x19
  405aac:	mov	w2, #0xa                   	// #10
  405ab0:	bl	402630 <strtol@plt>
  405ab4:	ldr	w1, [x20]
  405ab8:	cbnz	w1, 405ae4 <scols_reset_iter@plt+0x3244>
  405abc:	ldr	x1, [sp, #56]
  405ac0:	cmp	x1, x19
  405ac4:	b.eq	405a8c <scols_reset_iter@plt+0x31ec>  // b.none
  405ac8:	cbz	x1, 405ad4 <scols_reset_iter@plt+0x3234>
  405acc:	ldrsb	w1, [x1]
  405ad0:	cbnz	w1, 405a8c <scols_reset_iter@plt+0x31ec>
  405ad4:	ldp	x19, x20, [sp, #16]
  405ad8:	ldp	x21, x22, [sp, #32]
  405adc:	ldp	x29, x30, [sp], #64
  405ae0:	ret
  405ae4:	ldr	w0, [x22, #832]
  405ae8:	cmp	w1, #0x22
  405aec:	b.ne	405a8c <scols_reset_iter@plt+0x31ec>  // b.any
  405af0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405af4:	mov	x3, x19
  405af8:	mov	x2, x21
  405afc:	add	x1, x1, #0x808
  405b00:	bl	402860 <err@plt>
  405b04:	nop
  405b08:	stp	x29, x30, [sp, #-64]!
  405b0c:	mov	x29, sp
  405b10:	stp	x19, x20, [sp, #16]
  405b14:	mov	x19, x0
  405b18:	stp	x21, x22, [sp, #32]
  405b1c:	mov	x21, x1
  405b20:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  405b24:	str	xzr, [sp, #56]
  405b28:	bl	402800 <__errno_location@plt>
  405b2c:	str	wzr, [x0]
  405b30:	cbz	x19, 405b44 <scols_reset_iter@plt+0x32a4>
  405b34:	mov	x20, x0
  405b38:	ldrsb	w0, [x19]
  405b3c:	adrp	x22, 41a000 <scols_reset_iter@plt+0x17760>
  405b40:	cbnz	w0, 405b5c <scols_reset_iter@plt+0x32bc>
  405b44:	ldr	w0, [x22, #832]
  405b48:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405b4c:	mov	x3, x19
  405b50:	mov	x2, x21
  405b54:	add	x1, x1, #0x808
  405b58:	bl	4027b0 <errx@plt>
  405b5c:	add	x1, sp, #0x38
  405b60:	mov	x0, x19
  405b64:	mov	w2, #0xa                   	// #10
  405b68:	bl	402280 <strtoul@plt>
  405b6c:	ldr	w1, [x20]
  405b70:	cbnz	w1, 405b9c <scols_reset_iter@plt+0x32fc>
  405b74:	ldr	x1, [sp, #56]
  405b78:	cmp	x1, x19
  405b7c:	b.eq	405b44 <scols_reset_iter@plt+0x32a4>  // b.none
  405b80:	cbz	x1, 405b8c <scols_reset_iter@plt+0x32ec>
  405b84:	ldrsb	w1, [x1]
  405b88:	cbnz	w1, 405b44 <scols_reset_iter@plt+0x32a4>
  405b8c:	ldp	x19, x20, [sp, #16]
  405b90:	ldp	x21, x22, [sp, #32]
  405b94:	ldp	x29, x30, [sp], #64
  405b98:	ret
  405b9c:	ldr	w0, [x22, #832]
  405ba0:	cmp	w1, #0x22
  405ba4:	b.ne	405b44 <scols_reset_iter@plt+0x32a4>  // b.any
  405ba8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405bac:	mov	x3, x19
  405bb0:	mov	x2, x21
  405bb4:	add	x1, x1, #0x808
  405bb8:	bl	402860 <err@plt>
  405bbc:	nop
  405bc0:	stp	x29, x30, [sp, #-48]!
  405bc4:	mov	x29, sp
  405bc8:	stp	x19, x20, [sp, #16]
  405bcc:	mov	x19, x1
  405bd0:	mov	x20, x0
  405bd4:	add	x1, sp, #0x28
  405bd8:	bl	405518 <scols_reset_iter@plt+0x2c78>
  405bdc:	cbz	w0, 405c14 <scols_reset_iter@plt+0x3374>
  405be0:	bl	402800 <__errno_location@plt>
  405be4:	ldr	w1, [x0]
  405be8:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17760>
  405bec:	mov	x3, x20
  405bf0:	ldr	w0, [x2, #832]
  405bf4:	mov	x2, x19
  405bf8:	cbz	w1, 405c08 <scols_reset_iter@plt+0x3368>
  405bfc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405c00:	add	x1, x1, #0x808
  405c04:	bl	402860 <err@plt>
  405c08:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405c0c:	add	x1, x1, #0x808
  405c10:	bl	4027b0 <errx@plt>
  405c14:	ldp	x19, x20, [sp, #16]
  405c18:	ldr	x0, [sp, #40]
  405c1c:	ldp	x29, x30, [sp], #48
  405c20:	ret
  405c24:	nop
  405c28:	stp	x29, x30, [sp, #-32]!
  405c2c:	mov	x29, sp
  405c30:	str	x19, [sp, #16]
  405c34:	mov	x19, x1
  405c38:	mov	x1, x2
  405c3c:	bl	4059a0 <scols_reset_iter@plt+0x3100>
  405c40:	fcvtzs	d2, d0
  405c44:	mov	x0, #0x848000000000        	// #145685290680320
  405c48:	movk	x0, #0x412e, lsl #48
  405c4c:	fmov	d1, x0
  405c50:	scvtf	d3, d2
  405c54:	fsub	d0, d0, d3
  405c58:	fmul	d0, d0, d1
  405c5c:	fcvtzs	d0, d0
  405c60:	stp	d2, d0, [x19]
  405c64:	ldr	x19, [sp, #16]
  405c68:	ldp	x29, x30, [sp], #32
  405c6c:	ret
  405c70:	mov	w2, w0
  405c74:	mov	x0, x1
  405c78:	and	w1, w2, #0xf000
  405c7c:	add	x14, x0, #0x1
  405c80:	cmp	w1, #0x4, lsl #12
  405c84:	add	x13, x0, #0x2
  405c88:	add	x12, x0, #0x3
  405c8c:	add	x11, x0, #0x4
  405c90:	add	x10, x0, #0x5
  405c94:	add	x9, x0, #0x6
  405c98:	add	x8, x0, #0x7
  405c9c:	add	x7, x0, #0x8
  405ca0:	add	x6, x0, #0x9
  405ca4:	b.eq	405e10 <scols_reset_iter@plt+0x3570>  // b.none
  405ca8:	cmp	w1, #0xa, lsl #12
  405cac:	b.eq	405d04 <scols_reset_iter@plt+0x3464>  // b.none
  405cb0:	cmp	w1, #0x2, lsl #12
  405cb4:	b.eq	405e30 <scols_reset_iter@plt+0x3590>  // b.none
  405cb8:	cmp	w1, #0x6, lsl #12
  405cbc:	b.eq	405e20 <scols_reset_iter@plt+0x3580>  // b.none
  405cc0:	cmp	w1, #0xc, lsl #12
  405cc4:	b.eq	405e40 <scols_reset_iter@plt+0x35a0>  // b.none
  405cc8:	cmp	w1, #0x1, lsl #12
  405ccc:	b.eq	405e50 <scols_reset_iter@plt+0x35b0>  // b.none
  405cd0:	cmp	w1, #0x8, lsl #12
  405cd4:	b.eq	405e60 <scols_reset_iter@plt+0x35c0>  // b.none
  405cd8:	mov	x4, x6
  405cdc:	mov	x6, x7
  405ce0:	mov	x7, x8
  405ce4:	mov	x8, x9
  405ce8:	mov	x9, x10
  405cec:	mov	x10, x11
  405cf0:	mov	x11, x12
  405cf4:	mov	x12, x13
  405cf8:	mov	x13, x14
  405cfc:	mov	x14, x0
  405d00:	b	405d10 <scols_reset_iter@plt+0x3470>
  405d04:	mov	x4, x0
  405d08:	mov	w1, #0x6c                  	// #108
  405d0c:	strb	w1, [x4], #10
  405d10:	tst	x2, #0x100
  405d14:	mov	w5, #0x2d                  	// #45
  405d18:	mov	w3, #0x72                  	// #114
  405d1c:	csel	w3, w3, w5, ne  // ne = any
  405d20:	tst	x2, #0x80
  405d24:	strb	w3, [x14]
  405d28:	mov	w3, #0x77                  	// #119
  405d2c:	csel	w3, w3, w5, ne  // ne = any
  405d30:	strb	w3, [x13]
  405d34:	and	w1, w2, #0x40
  405d38:	tbz	w2, #11, 405dd8 <scols_reset_iter@plt+0x3538>
  405d3c:	cmp	w1, #0x0
  405d40:	mov	w3, #0x53                  	// #83
  405d44:	mov	w1, #0x73                  	// #115
  405d48:	csel	w1, w1, w3, ne  // ne = any
  405d4c:	tst	x2, #0x20
  405d50:	strb	w1, [x12]
  405d54:	mov	w5, #0x2d                  	// #45
  405d58:	mov	w3, #0x72                  	// #114
  405d5c:	csel	w3, w3, w5, ne  // ne = any
  405d60:	tst	x2, #0x10
  405d64:	strb	w3, [x11]
  405d68:	mov	w3, #0x77                  	// #119
  405d6c:	csel	w3, w3, w5, ne  // ne = any
  405d70:	strb	w3, [x10]
  405d74:	and	w1, w2, #0x8
  405d78:	tbz	w2, #10, 405e00 <scols_reset_iter@plt+0x3560>
  405d7c:	cmp	w1, #0x0
  405d80:	mov	w3, #0x53                  	// #83
  405d84:	mov	w1, #0x73                  	// #115
  405d88:	csel	w1, w1, w3, ne  // ne = any
  405d8c:	tst	x2, #0x4
  405d90:	strb	w1, [x9]
  405d94:	mov	w5, #0x2d                  	// #45
  405d98:	mov	w3, #0x72                  	// #114
  405d9c:	csel	w3, w3, w5, ne  // ne = any
  405da0:	tst	x2, #0x2
  405da4:	strb	w3, [x8]
  405da8:	mov	w3, #0x77                  	// #119
  405dac:	csel	w3, w3, w5, ne  // ne = any
  405db0:	strb	w3, [x7]
  405db4:	and	w1, w2, #0x1
  405db8:	tbz	w2, #9, 405de8 <scols_reset_iter@plt+0x3548>
  405dbc:	cmp	w1, #0x0
  405dc0:	mov	w2, #0x54                  	// #84
  405dc4:	mov	w1, #0x74                  	// #116
  405dc8:	csel	w1, w1, w2, ne  // ne = any
  405dcc:	strb	w1, [x6]
  405dd0:	strb	wzr, [x4]
  405dd4:	ret
  405dd8:	cmp	w1, #0x0
  405ddc:	mov	w1, #0x78                  	// #120
  405de0:	csel	w1, w1, w5, ne  // ne = any
  405de4:	b	405d4c <scols_reset_iter@plt+0x34ac>
  405de8:	cmp	w1, #0x0
  405dec:	mov	w1, #0x78                  	// #120
  405df0:	csel	w1, w1, w5, ne  // ne = any
  405df4:	strb	w1, [x6]
  405df8:	strb	wzr, [x4]
  405dfc:	ret
  405e00:	cmp	w1, #0x0
  405e04:	mov	w1, #0x78                  	// #120
  405e08:	csel	w1, w1, w5, ne  // ne = any
  405e0c:	b	405d8c <scols_reset_iter@plt+0x34ec>
  405e10:	mov	x4, x0
  405e14:	mov	w1, #0x64                  	// #100
  405e18:	strb	w1, [x4], #10
  405e1c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e20:	mov	x4, x0
  405e24:	mov	w1, #0x62                  	// #98
  405e28:	strb	w1, [x4], #10
  405e2c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e30:	mov	x4, x0
  405e34:	mov	w1, #0x63                  	// #99
  405e38:	strb	w1, [x4], #10
  405e3c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e40:	mov	x4, x0
  405e44:	mov	w1, #0x73                  	// #115
  405e48:	strb	w1, [x4], #10
  405e4c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e50:	mov	x4, x0
  405e54:	mov	w1, #0x70                  	// #112
  405e58:	strb	w1, [x4], #10
  405e5c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e60:	mov	x4, x0
  405e64:	mov	w1, #0x2d                  	// #45
  405e68:	strb	w1, [x4], #10
  405e6c:	b	405d10 <scols_reset_iter@plt+0x3470>
  405e70:	stp	x29, x30, [sp, #-96]!
  405e74:	mov	x29, sp
  405e78:	stp	x19, x20, [sp, #16]
  405e7c:	stp	x21, x22, [sp, #32]
  405e80:	add	x21, sp, #0x38
  405e84:	mov	x4, x21
  405e88:	tbz	w0, #1, 405e98 <scols_reset_iter@plt+0x35f8>
  405e8c:	add	x4, x21, #0x1
  405e90:	mov	w2, #0x20                  	// #32
  405e94:	strb	w2, [sp, #56]
  405e98:	mov	w2, #0xa                   	// #10
  405e9c:	mov	x5, #0x1                   	// #1
  405ea0:	lsl	x3, x5, x2
  405ea4:	cmp	x1, x3
  405ea8:	b.cc	405fbc <scols_reset_iter@plt+0x371c>  // b.lo, b.ul, b.last
  405eac:	add	w2, w2, #0xa
  405eb0:	cmp	w2, #0x46
  405eb4:	b.ne	405ea0 <scols_reset_iter@plt+0x3600>  // b.any
  405eb8:	mov	w19, #0x3c                  	// #60
  405ebc:	mov	w8, #0xcccd                	// #52429
  405ec0:	adrp	x6, 408000 <scols_reset_iter@plt+0x5760>
  405ec4:	movk	w8, #0xcccc, lsl #16
  405ec8:	add	x6, x6, #0x7f8
  405ecc:	mov	x5, #0xffffffffffffffff    	// #-1
  405ed0:	and	w7, w0, #0x1
  405ed4:	umull	x8, w19, w8
  405ed8:	lsl	x5, x5, x19
  405edc:	lsr	x19, x1, x19
  405ee0:	bic	x5, x1, x5
  405ee4:	mov	w3, w19
  405ee8:	lsr	x8, x8, #35
  405eec:	ldrsb	w1, [x6, w8, sxtw]
  405ef0:	strb	w1, [x4]
  405ef4:	cmp	w1, #0x42
  405ef8:	add	x1, x4, #0x1
  405efc:	csel	w7, w7, wzr, ne  // ne = any
  405f00:	cbz	w7, 405f10 <scols_reset_iter@plt+0x3670>
  405f04:	add	x1, x4, #0x3
  405f08:	mov	w6, #0x4269                	// #17001
  405f0c:	sturh	w6, [x4, #1]
  405f10:	strb	wzr, [x1]
  405f14:	cbz	x5, 405fd0 <scols_reset_iter@plt+0x3730>
  405f18:	sub	w2, w2, #0x14
  405f1c:	lsr	x2, x5, x2
  405f20:	tbz	w0, #2, 406004 <scols_reset_iter@plt+0x3764>
  405f24:	add	x2, x2, #0x5
  405f28:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  405f2c:	movk	x0, #0xcccd
  405f30:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
  405f34:	movk	x4, #0x1999, lsl #48
  405f38:	umulh	x20, x2, x0
  405f3c:	lsr	x20, x20, #3
  405f40:	mul	x1, x20, x0
  405f44:	umulh	x0, x20, x0
  405f48:	ror	x1, x1, #1
  405f4c:	lsr	x0, x0, #3
  405f50:	cmp	x1, x4
  405f54:	csel	x20, x20, x0, hi  // hi = pmore
  405f58:	cbz	x20, 405fd0 <scols_reset_iter@plt+0x3730>
  405f5c:	bl	4023d0 <localeconv@plt>
  405f60:	cbz	x0, 406034 <scols_reset_iter@plt+0x3794>
  405f64:	ldr	x4, [x0]
  405f68:	cbz	x4, 406034 <scols_reset_iter@plt+0x3794>
  405f6c:	ldrsb	w1, [x4]
  405f70:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  405f74:	add	x0, x0, #0x7f0
  405f78:	cmp	w1, #0x0
  405f7c:	csel	x4, x0, x4, eq  // eq = none
  405f80:	mov	x6, x21
  405f84:	mov	x5, x20
  405f88:	mov	w3, w19
  405f8c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  405f90:	add	x2, x2, #0x800
  405f94:	add	x22, sp, #0x40
  405f98:	mov	x1, #0x20                  	// #32
  405f9c:	mov	x0, x22
  405fa0:	bl	4023c0 <snprintf@plt>
  405fa4:	mov	x0, x22
  405fa8:	bl	402520 <strdup@plt>
  405fac:	ldp	x19, x20, [sp, #16]
  405fb0:	ldp	x21, x22, [sp, #32]
  405fb4:	ldp	x29, x30, [sp], #96
  405fb8:	ret
  405fbc:	subs	w19, w2, #0xa
  405fc0:	b.ne	405ebc <scols_reset_iter@plt+0x361c>  // b.any
  405fc4:	mov	w3, w1
  405fc8:	mov	w0, #0x42                  	// #66
  405fcc:	strh	w0, [x4]
  405fd0:	mov	x4, x21
  405fd4:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  405fd8:	add	x2, x2, #0x810
  405fdc:	add	x22, sp, #0x40
  405fe0:	mov	x1, #0x20                  	// #32
  405fe4:	mov	x0, x22
  405fe8:	bl	4023c0 <snprintf@plt>
  405fec:	mov	x0, x22
  405ff0:	bl	402520 <strdup@plt>
  405ff4:	ldp	x19, x20, [sp, #16]
  405ff8:	ldp	x21, x22, [sp, #32]
  405ffc:	ldp	x29, x30, [sp], #96
  406000:	ret
  406004:	add	x2, x2, #0x32
  406008:	mov	x5, #0xf5c3                	// #62915
  40600c:	movk	x5, #0x5c28, lsl #16
  406010:	lsr	x20, x2, #2
  406014:	movk	x5, #0xc28f, lsl #32
  406018:	movk	x5, #0x28f5, lsl #48
  40601c:	umulh	x20, x20, x5
  406020:	lsr	x20, x20, #2
  406024:	cmp	x20, #0xa
  406028:	b.ne	405f58 <scols_reset_iter@plt+0x36b8>  // b.any
  40602c:	add	w3, w19, #0x1
  406030:	b	405fd0 <scols_reset_iter@plt+0x3730>
  406034:	adrp	x4, 408000 <scols_reset_iter@plt+0x5760>
  406038:	add	x4, x4, #0x7f0
  40603c:	b	405f80 <scols_reset_iter@plt+0x36e0>
  406040:	cbz	x0, 40613c <scols_reset_iter@plt+0x389c>
  406044:	stp	x29, x30, [sp, #-64]!
  406048:	mov	x29, sp
  40604c:	stp	x19, x20, [sp, #16]
  406050:	mov	x20, x0
  406054:	ldrsb	w4, [x0]
  406058:	cbz	w4, 40612c <scols_reset_iter@plt+0x388c>
  40605c:	cmp	x1, #0x0
  406060:	stp	x21, x22, [sp, #32]
  406064:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  406068:	stp	x23, x24, [sp, #48]
  40606c:	mov	x21, x2
  406070:	mov	x23, x1
  406074:	mov	x22, x3
  406078:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  40607c:	b.eq	406124 <scols_reset_iter@plt+0x3884>  // b.none
  406080:	mov	x19, #0x0                   	// #0
  406084:	nop
  406088:	cmp	w4, #0x2c
  40608c:	ldrsb	w4, [x20, #1]
  406090:	b.eq	4060bc <scols_reset_iter@plt+0x381c>  // b.none
  406094:	cbz	w4, 4060c4 <scols_reset_iter@plt+0x3824>
  406098:	add	x20, x20, #0x1
  40609c:	cmp	x21, x19
  4060a0:	b.hi	406088 <scols_reset_iter@plt+0x37e8>  // b.pmore
  4060a4:	mov	w0, #0xfffffffe            	// #-2
  4060a8:	ldp	x19, x20, [sp, #16]
  4060ac:	ldp	x21, x22, [sp, #32]
  4060b0:	ldp	x23, x24, [sp, #48]
  4060b4:	ldp	x29, x30, [sp], #64
  4060b8:	ret
  4060bc:	mov	x24, x20
  4060c0:	cbnz	w4, 4060c8 <scols_reset_iter@plt+0x3828>
  4060c4:	add	x24, x20, #0x1
  4060c8:	cmp	x0, x24
  4060cc:	b.cs	406124 <scols_reset_iter@plt+0x3884>  // b.hs, b.nlast
  4060d0:	sub	x1, x24, x0
  4060d4:	blr	x22
  4060d8:	cmn	w0, #0x1
  4060dc:	b.eq	406124 <scols_reset_iter@plt+0x3884>  // b.none
  4060e0:	str	w0, [x23, x19, lsl #2]
  4060e4:	add	x19, x19, #0x1
  4060e8:	ldrsb	w0, [x24]
  4060ec:	cbz	w0, 40610c <scols_reset_iter@plt+0x386c>
  4060f0:	mov	x0, x20
  4060f4:	ldrsb	w4, [x0, #1]!
  4060f8:	cbz	w4, 40610c <scols_reset_iter@plt+0x386c>
  4060fc:	cmp	x21, x19
  406100:	b.ls	4060a4 <scols_reset_iter@plt+0x3804>  // b.plast
  406104:	mov	x20, x0
  406108:	b	406088 <scols_reset_iter@plt+0x37e8>
  40610c:	mov	w0, w19
  406110:	ldp	x19, x20, [sp, #16]
  406114:	ldp	x21, x22, [sp, #32]
  406118:	ldp	x23, x24, [sp, #48]
  40611c:	ldp	x29, x30, [sp], #64
  406120:	ret
  406124:	ldp	x21, x22, [sp, #32]
  406128:	ldp	x23, x24, [sp, #48]
  40612c:	mov	w0, #0xffffffff            	// #-1
  406130:	ldp	x19, x20, [sp, #16]
  406134:	ldp	x29, x30, [sp], #64
  406138:	ret
  40613c:	mov	w0, #0xffffffff            	// #-1
  406140:	ret
  406144:	nop
  406148:	cbz	x0, 4061c4 <scols_reset_iter@plt+0x3924>
  40614c:	stp	x29, x30, [sp, #-32]!
  406150:	mov	x29, sp
  406154:	str	x19, [sp, #16]
  406158:	mov	x19, x3
  40615c:	mov	x3, x4
  406160:	cmp	x19, #0x0
  406164:	ldrsb	w4, [x0]
  406168:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40616c:	b.eq	4061bc <scols_reset_iter@plt+0x391c>  // b.none
  406170:	ldr	x5, [x19]
  406174:	cmp	x5, x2
  406178:	b.hi	4061bc <scols_reset_iter@plt+0x391c>  // b.pmore
  40617c:	cmp	w4, #0x2b
  406180:	b.eq	4061ac <scols_reset_iter@plt+0x390c>  // b.none
  406184:	str	xzr, [x19]
  406188:	bl	406040 <scols_reset_iter@plt+0x37a0>
  40618c:	cmp	w0, #0x0
  406190:	b.le	4061a0 <scols_reset_iter@plt+0x3900>
  406194:	ldr	x1, [x19]
  406198:	add	x1, x1, w0, sxtw
  40619c:	str	x1, [x19]
  4061a0:	ldr	x19, [sp, #16]
  4061a4:	ldp	x29, x30, [sp], #32
  4061a8:	ret
  4061ac:	add	x0, x0, #0x1
  4061b0:	add	x1, x1, x5, lsl #2
  4061b4:	sub	x2, x2, x5
  4061b8:	b	406188 <scols_reset_iter@plt+0x38e8>
  4061bc:	mov	w0, #0xffffffff            	// #-1
  4061c0:	b	4061a0 <scols_reset_iter@plt+0x3900>
  4061c4:	mov	w0, #0xffffffff            	// #-1
  4061c8:	ret
  4061cc:	nop
  4061d0:	cmp	x2, #0x0
  4061d4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4061d8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4061dc:	b.eq	4062b8 <scols_reset_iter@plt+0x3a18>  // b.none
  4061e0:	stp	x29, x30, [sp, #-64]!
  4061e4:	mov	x29, sp
  4061e8:	stp	x19, x20, [sp, #16]
  4061ec:	mov	x20, x2
  4061f0:	mov	x19, x0
  4061f4:	stp	x21, x22, [sp, #32]
  4061f8:	mov	w21, #0x1                   	// #1
  4061fc:	str	x23, [sp, #48]
  406200:	mov	x23, x1
  406204:	ldrsb	w3, [x0]
  406208:	cbz	w3, 4062a0 <scols_reset_iter@plt+0x3a00>
  40620c:	nop
  406210:	cmp	w3, #0x2c
  406214:	ldrsb	w3, [x19, #1]
  406218:	b.eq	406230 <scols_reset_iter@plt+0x3990>  // b.none
  40621c:	cbz	w3, 40627c <scols_reset_iter@plt+0x39dc>
  406220:	add	x19, x19, #0x1
  406224:	cmp	w3, #0x2c
  406228:	ldrsb	w3, [x19, #1]
  40622c:	b.ne	40621c <scols_reset_iter@plt+0x397c>  // b.any
  406230:	mov	x22, x19
  406234:	cbz	w3, 40627c <scols_reset_iter@plt+0x39dc>
  406238:	cmp	x0, x22
  40623c:	b.cs	406288 <scols_reset_iter@plt+0x39e8>  // b.hs, b.nlast
  406240:	sub	x1, x22, x0
  406244:	blr	x20
  406248:	tbnz	w0, #31, 40628c <scols_reset_iter@plt+0x39ec>
  40624c:	asr	w2, w0, #3
  406250:	and	w0, w0, #0x7
  406254:	lsl	w0, w21, w0
  406258:	ldrb	w1, [x23, w2, sxtw]
  40625c:	orr	w0, w0, w1
  406260:	strb	w0, [x23, w2, sxtw]
  406264:	ldrsb	w0, [x22]
  406268:	cbz	w0, 4062a0 <scols_reset_iter@plt+0x3a00>
  40626c:	ldrsb	w3, [x19, #1]!
  406270:	cbz	w3, 4062a0 <scols_reset_iter@plt+0x3a00>
  406274:	mov	x0, x19
  406278:	b	406210 <scols_reset_iter@plt+0x3970>
  40627c:	add	x22, x19, #0x1
  406280:	cmp	x0, x22
  406284:	b.cc	406240 <scols_reset_iter@plt+0x39a0>  // b.lo, b.ul, b.last
  406288:	mov	w0, #0xffffffff            	// #-1
  40628c:	ldp	x19, x20, [sp, #16]
  406290:	ldp	x21, x22, [sp, #32]
  406294:	ldr	x23, [sp, #48]
  406298:	ldp	x29, x30, [sp], #64
  40629c:	ret
  4062a0:	mov	w0, #0x0                   	// #0
  4062a4:	ldp	x19, x20, [sp, #16]
  4062a8:	ldp	x21, x22, [sp, #32]
  4062ac:	ldr	x23, [sp, #48]
  4062b0:	ldp	x29, x30, [sp], #64
  4062b4:	ret
  4062b8:	mov	w0, #0xffffffea            	// #-22
  4062bc:	ret
  4062c0:	cmp	x2, #0x0
  4062c4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4062c8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4062cc:	b.eq	40638c <scols_reset_iter@plt+0x3aec>  // b.none
  4062d0:	stp	x29, x30, [sp, #-48]!
  4062d4:	mov	x29, sp
  4062d8:	stp	x19, x20, [sp, #16]
  4062dc:	mov	x19, x0
  4062e0:	stp	x21, x22, [sp, #32]
  4062e4:	mov	x21, x2
  4062e8:	mov	x22, x1
  4062ec:	ldrsb	w3, [x0]
  4062f0:	cbz	w3, 406378 <scols_reset_iter@plt+0x3ad8>
  4062f4:	nop
  4062f8:	cmp	w3, #0x2c
  4062fc:	ldrsb	w3, [x19, #1]
  406300:	b.eq	406318 <scols_reset_iter@plt+0x3a78>  // b.none
  406304:	cbz	w3, 406358 <scols_reset_iter@plt+0x3ab8>
  406308:	add	x19, x19, #0x1
  40630c:	cmp	w3, #0x2c
  406310:	ldrsb	w3, [x19, #1]
  406314:	b.ne	406304 <scols_reset_iter@plt+0x3a64>  // b.any
  406318:	mov	x20, x19
  40631c:	cbz	w3, 406358 <scols_reset_iter@plt+0x3ab8>
  406320:	cmp	x0, x20
  406324:	b.cs	406364 <scols_reset_iter@plt+0x3ac4>  // b.hs, b.nlast
  406328:	sub	x1, x20, x0
  40632c:	blr	x21
  406330:	tbnz	x0, #63, 406368 <scols_reset_iter@plt+0x3ac8>
  406334:	ldr	x2, [x22]
  406338:	orr	x0, x2, x0
  40633c:	str	x0, [x22]
  406340:	ldrsb	w0, [x20]
  406344:	cbz	w0, 406378 <scols_reset_iter@plt+0x3ad8>
  406348:	ldrsb	w3, [x19, #1]!
  40634c:	cbz	w3, 406378 <scols_reset_iter@plt+0x3ad8>
  406350:	mov	x0, x19
  406354:	b	4062f8 <scols_reset_iter@plt+0x3a58>
  406358:	add	x20, x19, #0x1
  40635c:	cmp	x0, x20
  406360:	b.cc	406328 <scols_reset_iter@plt+0x3a88>  // b.lo, b.ul, b.last
  406364:	mov	w0, #0xffffffff            	// #-1
  406368:	ldp	x19, x20, [sp, #16]
  40636c:	ldp	x21, x22, [sp, #32]
  406370:	ldp	x29, x30, [sp], #48
  406374:	ret
  406378:	mov	w0, #0x0                   	// #0
  40637c:	ldp	x19, x20, [sp, #16]
  406380:	ldp	x21, x22, [sp, #32]
  406384:	ldp	x29, x30, [sp], #48
  406388:	ret
  40638c:	mov	w0, #0xffffffea            	// #-22
  406390:	ret
  406394:	nop
  406398:	stp	x29, x30, [sp, #-80]!
  40639c:	mov	x29, sp
  4063a0:	str	xzr, [sp, #72]
  4063a4:	cbz	x0, 406438 <scols_reset_iter@plt+0x3b98>
  4063a8:	stp	x19, x20, [sp, #16]
  4063ac:	mov	x19, x0
  4063b0:	mov	x20, x2
  4063b4:	stp	x21, x22, [sp, #32]
  4063b8:	mov	w21, w3
  4063bc:	stp	x23, x24, [sp, #48]
  4063c0:	mov	x23, x1
  4063c4:	str	w3, [x1]
  4063c8:	str	w3, [x2]
  4063cc:	bl	402800 <__errno_location@plt>
  4063d0:	str	wzr, [x0]
  4063d4:	mov	x22, x0
  4063d8:	ldrsb	w0, [x19]
  4063dc:	cmp	w0, #0x3a
  4063e0:	b.eq	406444 <scols_reset_iter@plt+0x3ba4>  // b.none
  4063e4:	add	x24, sp, #0x48
  4063e8:	mov	x0, x19
  4063ec:	mov	x1, x24
  4063f0:	mov	w2, #0xa                   	// #10
  4063f4:	bl	402630 <strtol@plt>
  4063f8:	str	w0, [x23]
  4063fc:	str	w0, [x20]
  406400:	ldr	w0, [x22]
  406404:	cbnz	w0, 40647c <scols_reset_iter@plt+0x3bdc>
  406408:	ldr	x2, [sp, #72]
  40640c:	cmp	x2, #0x0
  406410:	ccmp	x2, x19, #0x4, ne  // ne = any
  406414:	b.eq	40647c <scols_reset_iter@plt+0x3bdc>  // b.none
  406418:	ldrsb	w3, [x2]
  40641c:	cmp	w3, #0x3a
  406420:	b.eq	406490 <scols_reset_iter@plt+0x3bf0>  // b.none
  406424:	cmp	w3, #0x2d
  406428:	b.eq	4064ac <scols_reset_iter@plt+0x3c0c>  // b.none
  40642c:	ldp	x19, x20, [sp, #16]
  406430:	ldp	x21, x22, [sp, #32]
  406434:	ldp	x23, x24, [sp, #48]
  406438:	mov	w0, #0x0                   	// #0
  40643c:	ldp	x29, x30, [sp], #80
  406440:	ret
  406444:	add	x19, x19, #0x1
  406448:	add	x1, sp, #0x48
  40644c:	mov	x0, x19
  406450:	mov	w2, #0xa                   	// #10
  406454:	bl	402630 <strtol@plt>
  406458:	str	w0, [x20]
  40645c:	ldr	w0, [x22]
  406460:	cbnz	w0, 40647c <scols_reset_iter@plt+0x3bdc>
  406464:	ldr	x0, [sp, #72]
  406468:	cbz	x0, 40647c <scols_reset_iter@plt+0x3bdc>
  40646c:	ldrsb	w1, [x0]
  406470:	cmp	w1, #0x0
  406474:	ccmp	x0, x19, #0x4, eq  // eq = none
  406478:	b.ne	40642c <scols_reset_iter@plt+0x3b8c>  // b.any
  40647c:	mov	w0, #0xffffffff            	// #-1
  406480:	ldp	x19, x20, [sp, #16]
  406484:	ldp	x21, x22, [sp, #32]
  406488:	ldp	x23, x24, [sp, #48]
  40648c:	b	40643c <scols_reset_iter@plt+0x3b9c>
  406490:	ldrsb	w1, [x2, #1]
  406494:	cbnz	w1, 4064ac <scols_reset_iter@plt+0x3c0c>
  406498:	ldp	x23, x24, [sp, #48]
  40649c:	str	w21, [x20]
  4064a0:	ldp	x19, x20, [sp, #16]
  4064a4:	ldp	x21, x22, [sp, #32]
  4064a8:	b	40643c <scols_reset_iter@plt+0x3b9c>
  4064ac:	str	wzr, [x22]
  4064b0:	add	x19, x2, #0x1
  4064b4:	mov	x1, x24
  4064b8:	mov	x0, x19
  4064bc:	mov	w2, #0xa                   	// #10
  4064c0:	str	xzr, [sp, #72]
  4064c4:	bl	402630 <strtol@plt>
  4064c8:	str	w0, [x20]
  4064cc:	ldr	w0, [x22]
  4064d0:	cbz	w0, 406464 <scols_reset_iter@plt+0x3bc4>
  4064d4:	b	40647c <scols_reset_iter@plt+0x3bdc>
  4064d8:	cmp	x1, #0x0
  4064dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4064e0:	b.eq	4065b4 <scols_reset_iter@plt+0x3d14>  // b.none
  4064e4:	stp	x29, x30, [sp, #-80]!
  4064e8:	mov	x29, sp
  4064ec:	stp	x19, x20, [sp, #16]
  4064f0:	mov	x19, x1
  4064f4:	stp	x21, x22, [sp, #32]
  4064f8:	add	x22, sp, #0x48
  4064fc:	str	x23, [sp, #48]
  406500:	add	x23, sp, #0x40
  406504:	b	406528 <scols_reset_iter@plt+0x3c88>
  406508:	cmp	x20, #0x0
  40650c:	add	x19, x3, x4
  406510:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  406514:	ccmp	x21, x4, #0x0, ne  // ne = any
  406518:	b.ne	40659c <scols_reset_iter@plt+0x3cfc>  // b.any
  40651c:	bl	402470 <strncmp@plt>
  406520:	cbnz	w0, 40659c <scols_reset_iter@plt+0x3cfc>
  406524:	add	x0, x20, x21
  406528:	mov	x1, x23
  40652c:	bl	404ed0 <scols_reset_iter@plt+0x2630>
  406530:	mov	x1, x22
  406534:	mov	x20, x0
  406538:	mov	x0, x19
  40653c:	bl	404ed0 <scols_reset_iter@plt+0x2630>
  406540:	ldp	x21, x4, [sp, #64]
  406544:	mov	x3, x0
  406548:	mov	x1, x3
  40654c:	mov	x0, x20
  406550:	mov	x2, x21
  406554:	adds	x5, x21, x4
  406558:	b.eq	406584 <scols_reset_iter@plt+0x3ce4>  // b.none
  40655c:	cmp	x5, #0x1
  406560:	b.ne	406508 <scols_reset_iter@plt+0x3c68>  // b.any
  406564:	cbz	x20, 406574 <scols_reset_iter@plt+0x3cd4>
  406568:	ldrsb	w5, [x20]
  40656c:	cmp	w5, #0x2f
  406570:	b.eq	406584 <scols_reset_iter@plt+0x3ce4>  // b.none
  406574:	cbz	x3, 40659c <scols_reset_iter@plt+0x3cfc>
  406578:	ldrsb	w5, [x3]
  40657c:	cmp	w5, #0x2f
  406580:	b.ne	406508 <scols_reset_iter@plt+0x3c68>  // b.any
  406584:	mov	w0, #0x1                   	// #1
  406588:	ldp	x19, x20, [sp, #16]
  40658c:	ldp	x21, x22, [sp, #32]
  406590:	ldr	x23, [sp, #48]
  406594:	ldp	x29, x30, [sp], #80
  406598:	ret
  40659c:	mov	w0, #0x0                   	// #0
  4065a0:	ldp	x19, x20, [sp, #16]
  4065a4:	ldp	x21, x22, [sp, #32]
  4065a8:	ldr	x23, [sp, #48]
  4065ac:	ldp	x29, x30, [sp], #80
  4065b0:	ret
  4065b4:	mov	w0, #0x0                   	// #0
  4065b8:	ret
  4065bc:	nop
  4065c0:	stp	x29, x30, [sp, #-64]!
  4065c4:	mov	x29, sp
  4065c8:	stp	x19, x20, [sp, #16]
  4065cc:	mov	x19, x1
  4065d0:	orr	x1, x0, x1
  4065d4:	cbz	x1, 406654 <scols_reset_iter@plt+0x3db4>
  4065d8:	stp	x21, x22, [sp, #32]
  4065dc:	mov	x20, x0
  4065e0:	mov	x21, x2
  4065e4:	cbz	x0, 406668 <scols_reset_iter@plt+0x3dc8>
  4065e8:	cbz	x19, 406680 <scols_reset_iter@plt+0x3de0>
  4065ec:	stp	x23, x24, [sp, #48]
  4065f0:	bl	402290 <strlen@plt>
  4065f4:	mov	x23, x0
  4065f8:	mvn	x0, x0
  4065fc:	mov	x22, #0x0                   	// #0
  406600:	cmp	x21, x0
  406604:	b.hi	40663c <scols_reset_iter@plt+0x3d9c>  // b.pmore
  406608:	add	x24, x21, x23
  40660c:	add	x0, x24, #0x1
  406610:	bl	402430 <malloc@plt>
  406614:	mov	x22, x0
  406618:	cbz	x0, 40663c <scols_reset_iter@plt+0x3d9c>
  40661c:	mov	x1, x20
  406620:	mov	x2, x23
  406624:	bl	402260 <memcpy@plt>
  406628:	mov	x2, x21
  40662c:	mov	x1, x19
  406630:	add	x0, x22, x23
  406634:	bl	402260 <memcpy@plt>
  406638:	strb	wzr, [x22, x24]
  40663c:	mov	x0, x22
  406640:	ldp	x19, x20, [sp, #16]
  406644:	ldp	x21, x22, [sp, #32]
  406648:	ldp	x23, x24, [sp, #48]
  40664c:	ldp	x29, x30, [sp], #64
  406650:	ret
  406654:	ldp	x19, x20, [sp, #16]
  406658:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  40665c:	ldp	x29, x30, [sp], #64
  406660:	add	x0, x0, #0x9b0
  406664:	b	402520 <strdup@plt>
  406668:	mov	x0, x19
  40666c:	mov	x1, x2
  406670:	ldp	x19, x20, [sp, #16]
  406674:	ldp	x21, x22, [sp, #32]
  406678:	ldp	x29, x30, [sp], #64
  40667c:	b	4026f0 <strndup@plt>
  406680:	ldp	x19, x20, [sp, #16]
  406684:	ldp	x21, x22, [sp, #32]
  406688:	ldp	x29, x30, [sp], #64
  40668c:	b	402520 <strdup@plt>
  406690:	stp	x29, x30, [sp, #-32]!
  406694:	mov	x2, #0x0                   	// #0
  406698:	mov	x29, sp
  40669c:	stp	x19, x20, [sp, #16]
  4066a0:	mov	x20, x0
  4066a4:	mov	x19, x1
  4066a8:	cbz	x1, 4066b8 <scols_reset_iter@plt+0x3e18>
  4066ac:	mov	x0, x1
  4066b0:	bl	402290 <strlen@plt>
  4066b4:	mov	x2, x0
  4066b8:	mov	x1, x19
  4066bc:	mov	x0, x20
  4066c0:	ldp	x19, x20, [sp, #16]
  4066c4:	ldp	x29, x30, [sp], #32
  4066c8:	b	4065c0 <scols_reset_iter@plt+0x3d20>
  4066cc:	nop
  4066d0:	stp	x29, x30, [sp, #-288]!
  4066d4:	mov	w9, #0xffffffd0            	// #-48
  4066d8:	mov	w8, #0xffffff80            	// #-128
  4066dc:	mov	x29, sp
  4066e0:	add	x10, sp, #0xf0
  4066e4:	add	x11, sp, #0x120
  4066e8:	stp	x11, x11, [sp, #80]
  4066ec:	str	x10, [sp, #96]
  4066f0:	stp	w9, w8, [sp, #104]
  4066f4:	ldp	x10, x11, [sp, #80]
  4066f8:	str	x19, [sp, #16]
  4066fc:	ldp	x8, x9, [sp, #96]
  406700:	mov	x19, x0
  406704:	add	x0, sp, #0x48
  406708:	stp	x10, x11, [sp, #32]
  40670c:	stp	x8, x9, [sp, #48]
  406710:	str	q0, [sp, #112]
  406714:	str	q1, [sp, #128]
  406718:	str	q2, [sp, #144]
  40671c:	str	q3, [sp, #160]
  406720:	str	q4, [sp, #176]
  406724:	str	q5, [sp, #192]
  406728:	str	q6, [sp, #208]
  40672c:	str	q7, [sp, #224]
  406730:	stp	x2, x3, [sp, #240]
  406734:	add	x2, sp, #0x20
  406738:	stp	x4, x5, [sp, #256]
  40673c:	stp	x6, x7, [sp, #272]
  406740:	bl	4026c0 <vasprintf@plt>
  406744:	tbnz	w0, #31, 406774 <scols_reset_iter@plt+0x3ed4>
  406748:	ldr	x1, [sp, #72]
  40674c:	sxtw	x2, w0
  406750:	mov	x0, x19
  406754:	bl	4065c0 <scols_reset_iter@plt+0x3d20>
  406758:	mov	x19, x0
  40675c:	ldr	x0, [sp, #72]
  406760:	bl	402660 <free@plt>
  406764:	mov	x0, x19
  406768:	ldr	x19, [sp, #16]
  40676c:	ldp	x29, x30, [sp], #288
  406770:	ret
  406774:	mov	x19, #0x0                   	// #0
  406778:	mov	x0, x19
  40677c:	ldr	x19, [sp, #16]
  406780:	ldp	x29, x30, [sp], #288
  406784:	ret
  406788:	stp	x29, x30, [sp, #-80]!
  40678c:	mov	x29, sp
  406790:	stp	x21, x22, [sp, #32]
  406794:	ldr	x21, [x0]
  406798:	stp	x19, x20, [sp, #16]
  40679c:	mov	x19, x0
  4067a0:	ldrsb	w0, [x21]
  4067a4:	cbz	w0, 4068e8 <scols_reset_iter@plt+0x4048>
  4067a8:	mov	x0, x21
  4067ac:	mov	x22, x2
  4067b0:	stp	x23, x24, [sp, #48]
  4067b4:	mov	x24, x1
  4067b8:	mov	w23, w3
  4067bc:	mov	x1, x2
  4067c0:	bl	402700 <strspn@plt>
  4067c4:	add	x20, x21, x0
  4067c8:	ldrsb	w21, [x21, x0]
  4067cc:	cbz	w21, 4068ac <scols_reset_iter@plt+0x400c>
  4067d0:	cbz	w23, 406854 <scols_reset_iter@plt+0x3fb4>
  4067d4:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  4067d8:	mov	w1, w21
  4067dc:	add	x0, x0, #0x818
  4067e0:	bl	402710 <strchr@plt>
  4067e4:	cbz	x0, 406884 <scols_reset_iter@plt+0x3fe4>
  4067e8:	add	x1, sp, #0x48
  4067ec:	add	x23, x20, #0x1
  4067f0:	mov	x0, x23
  4067f4:	strb	w21, [sp, #72]
  4067f8:	strb	wzr, [sp, #73]
  4067fc:	bl	404f58 <scols_reset_iter@plt+0x26b8>
  406800:	add	x1, x20, x0
  406804:	str	x0, [x24]
  406808:	ldrsb	w1, [x1, #1]
  40680c:	cmp	w1, #0x0
  406810:	ccmp	w21, w1, #0x0, ne  // ne = any
  406814:	b.ne	4068ac <scols_reset_iter@plt+0x400c>  // b.any
  406818:	add	x0, x0, #0x2
  40681c:	add	x21, x20, x0
  406820:	ldrsb	w1, [x20, x0]
  406824:	cbz	w1, 406834 <scols_reset_iter@plt+0x3f94>
  406828:	mov	x0, x22
  40682c:	bl	402710 <strchr@plt>
  406830:	cbz	x0, 4068ac <scols_reset_iter@plt+0x400c>
  406834:	mov	x20, x23
  406838:	ldp	x23, x24, [sp, #48]
  40683c:	str	x21, [x19]
  406840:	mov	x0, x20
  406844:	ldp	x19, x20, [sp, #16]
  406848:	ldp	x21, x22, [sp, #32]
  40684c:	ldp	x29, x30, [sp], #80
  406850:	ret
  406854:	mov	x1, x22
  406858:	mov	x0, x20
  40685c:	bl	4027d0 <strcspn@plt>
  406860:	str	x0, [x24]
  406864:	add	x0, x20, x0
  406868:	ldp	x23, x24, [sp, #48]
  40686c:	str	x0, [x19]
  406870:	mov	x0, x20
  406874:	ldp	x19, x20, [sp, #16]
  406878:	ldp	x21, x22, [sp, #32]
  40687c:	ldp	x29, x30, [sp], #80
  406880:	ret
  406884:	mov	x1, x22
  406888:	mov	x0, x20
  40688c:	bl	404f58 <scols_reset_iter@plt+0x26b8>
  406890:	str	x0, [x24]
  406894:	add	x21, x20, x0
  406898:	ldrsb	w1, [x20, x0]
  40689c:	cbz	w1, 4068cc <scols_reset_iter@plt+0x402c>
  4068a0:	mov	x0, x22
  4068a4:	bl	402710 <strchr@plt>
  4068a8:	cbnz	x0, 4068cc <scols_reset_iter@plt+0x402c>
  4068ac:	ldp	x23, x24, [sp, #48]
  4068b0:	str	x20, [x19]
  4068b4:	mov	x20, #0x0                   	// #0
  4068b8:	mov	x0, x20
  4068bc:	ldp	x19, x20, [sp, #16]
  4068c0:	ldp	x21, x22, [sp, #32]
  4068c4:	ldp	x29, x30, [sp], #80
  4068c8:	ret
  4068cc:	ldp	x23, x24, [sp, #48]
  4068d0:	str	x21, [x19]
  4068d4:	mov	x0, x20
  4068d8:	ldp	x19, x20, [sp, #16]
  4068dc:	ldp	x21, x22, [sp, #32]
  4068e0:	ldp	x29, x30, [sp], #80
  4068e4:	ret
  4068e8:	mov	x20, #0x0                   	// #0
  4068ec:	mov	x0, x20
  4068f0:	ldp	x19, x20, [sp, #16]
  4068f4:	ldp	x21, x22, [sp, #32]
  4068f8:	ldp	x29, x30, [sp], #80
  4068fc:	ret
  406900:	stp	x29, x30, [sp, #-32]!
  406904:	mov	x29, sp
  406908:	str	x19, [sp, #16]
  40690c:	mov	x19, x0
  406910:	b	40691c <scols_reset_iter@plt+0x407c>
  406914:	cmp	w0, #0xa
  406918:	b.eq	40693c <scols_reset_iter@plt+0x409c>  // b.none
  40691c:	mov	x0, x19
  406920:	bl	4024a0 <fgetc@plt>
  406924:	cmn	w0, #0x1
  406928:	b.ne	406914 <scols_reset_iter@plt+0x4074>  // b.any
  40692c:	mov	w0, #0x1                   	// #1
  406930:	ldr	x19, [sp, #16]
  406934:	ldp	x29, x30, [sp], #32
  406938:	ret
  40693c:	mov	w0, #0x0                   	// #0
  406940:	ldr	x19, [sp, #16]
  406944:	ldp	x29, x30, [sp], #32
  406948:	ret
  40694c:	nop
  406950:	stp	x29, x30, [sp, #-48]!
  406954:	mov	x29, sp
  406958:	bl	402810 <getenv@plt>
  40695c:	cbz	x0, 4069d4 <scols_reset_iter@plt+0x4134>
  406960:	stp	x19, x20, [sp, #16]
  406964:	mov	x19, x0
  406968:	str	xzr, [sp, #40]
  40696c:	bl	402800 <__errno_location@plt>
  406970:	mov	x20, x0
  406974:	add	x1, sp, #0x28
  406978:	mov	x0, x19
  40697c:	mov	w2, #0xa                   	// #10
  406980:	str	wzr, [x20]
  406984:	bl	402630 <strtol@plt>
  406988:	ldr	w1, [x20]
  40698c:	cbnz	w1, 4069c4 <scols_reset_iter@plt+0x4124>
  406990:	ldr	x1, [sp, #40]
  406994:	cbz	x1, 4069c4 <scols_reset_iter@plt+0x4124>
  406998:	ldrsb	w2, [x1]
  40699c:	cmp	w2, #0x0
  4069a0:	ccmp	x1, x19, #0x0, eq  // eq = none
  4069a4:	b.ls	4069c4 <scols_reset_iter@plt+0x4124>  // b.plast
  4069a8:	sub	x2, x0, #0x1
  4069ac:	mov	x1, #0x7ffffffe            	// #2147483646
  4069b0:	cmp	x2, x1
  4069b4:	b.hi	4069c4 <scols_reset_iter@plt+0x4124>  // b.pmore
  4069b8:	ldp	x19, x20, [sp, #16]
  4069bc:	ldp	x29, x30, [sp], #48
  4069c0:	ret
  4069c4:	mov	w0, #0xffffffff            	// #-1
  4069c8:	ldp	x19, x20, [sp, #16]
  4069cc:	ldp	x29, x30, [sp], #48
  4069d0:	ret
  4069d4:	mov	w0, #0xffffffff            	// #-1
  4069d8:	b	4069bc <scols_reset_iter@plt+0x411c>
  4069dc:	nop
  4069e0:	stp	x29, x30, [sp, #-64]!
  4069e4:	mov	x29, sp
  4069e8:	add	x2, sp, #0x38
  4069ec:	stp	x19, x20, [sp, #16]
  4069f0:	mov	x20, x0
  4069f4:	mov	x19, x1
  4069f8:	mov	w0, #0x1                   	// #1
  4069fc:	mov	x1, #0x5413                	// #21523
  406a00:	str	x21, [sp, #32]
  406a04:	bl	402870 <ioctl@plt>
  406a08:	cbz	w0, 406a4c <scols_reset_iter@plt+0x41ac>
  406a0c:	cbz	x20, 406a20 <scols_reset_iter@plt+0x4180>
  406a10:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406a14:	add	x0, x0, #0x820
  406a18:	bl	406950 <scols_reset_iter@plt+0x40b0>
  406a1c:	str	w0, [x20]
  406a20:	cbz	x19, 406a38 <scols_reset_iter@plt+0x4198>
  406a24:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406a28:	add	x0, x0, #0x828
  406a2c:	bl	406950 <scols_reset_iter@plt+0x40b0>
  406a30:	mov	w21, w0
  406a34:	str	w21, [x19]
  406a38:	mov	w0, #0x0                   	// #0
  406a3c:	ldp	x19, x20, [sp, #16]
  406a40:	ldr	x21, [sp, #32]
  406a44:	ldp	x29, x30, [sp], #64
  406a48:	ret
  406a4c:	ldrh	w21, [sp, #56]
  406a50:	cbz	x20, 406a60 <scols_reset_iter@plt+0x41c0>
  406a54:	ldrh	w0, [sp, #58]
  406a58:	cbz	w0, 406a70 <scols_reset_iter@plt+0x41d0>
  406a5c:	str	w0, [x20]
  406a60:	cbz	x19, 406a38 <scols_reset_iter@plt+0x4198>
  406a64:	cbz	w21, 406a24 <scols_reset_iter@plt+0x4184>
  406a68:	str	w21, [x19]
  406a6c:	b	406a38 <scols_reset_iter@plt+0x4198>
  406a70:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406a74:	add	x0, x0, #0x820
  406a78:	bl	406950 <scols_reset_iter@plt+0x40b0>
  406a7c:	str	w0, [x20]
  406a80:	b	406a60 <scols_reset_iter@plt+0x41c0>
  406a84:	nop
  406a88:	stp	x29, x30, [sp, #-48]!
  406a8c:	mov	x1, #0x0                   	// #0
  406a90:	mov	x29, sp
  406a94:	str	x19, [sp, #16]
  406a98:	mov	w19, w0
  406a9c:	add	x0, sp, #0x2c
  406aa0:	str	wzr, [sp, #44]
  406aa4:	bl	4069e0 <scols_reset_iter@plt+0x4140>
  406aa8:	ldr	w0, [sp, #44]
  406aac:	cmp	w0, #0x0
  406ab0:	csel	w0, w0, w19, gt
  406ab4:	ldr	x19, [sp, #16]
  406ab8:	ldp	x29, x30, [sp], #48
  406abc:	ret
  406ac0:	stp	x29, x30, [sp, #-16]!
  406ac4:	mov	w0, #0x0                   	// #0
  406ac8:	mov	x29, sp
  406acc:	bl	402750 <isatty@plt>
  406ad0:	mov	w1, #0x0                   	// #0
  406ad4:	cbz	w0, 406ae4 <scols_reset_iter@plt+0x4244>
  406ad8:	mov	w0, w1
  406adc:	ldp	x29, x30, [sp], #16
  406ae0:	ret
  406ae4:	mov	w0, #0x1                   	// #1
  406ae8:	bl	402750 <isatty@plt>
  406aec:	mov	w1, #0x1                   	// #1
  406af0:	cbnz	w0, 406ad8 <scols_reset_iter@plt+0x4238>
  406af4:	mov	w0, #0x2                   	// #2
  406af8:	bl	402750 <isatty@plt>
  406afc:	cmp	w0, #0x0
  406b00:	mov	w1, #0xffffffea            	// #-22
  406b04:	mov	w0, #0x2                   	// #2
  406b08:	csel	w1, w1, w0, eq  // eq = none
  406b0c:	mov	w0, w1
  406b10:	ldp	x29, x30, [sp], #16
  406b14:	ret
  406b18:	stp	x29, x30, [sp, #-48]!
  406b1c:	mov	x29, sp
  406b20:	stp	x19, x20, [sp, #16]
  406b24:	mov	x20, x1
  406b28:	stp	x21, x22, [sp, #32]
  406b2c:	mov	x22, x0
  406b30:	mov	x21, x2
  406b34:	cbz	x1, 406b3c <scols_reset_iter@plt+0x429c>
  406b38:	str	xzr, [x1]
  406b3c:	cbz	x22, 406b44 <scols_reset_iter@plt+0x42a4>
  406b40:	str	xzr, [x22]
  406b44:	cbz	x21, 406b4c <scols_reset_iter@plt+0x42ac>
  406b48:	str	xzr, [x21]
  406b4c:	bl	406ac0 <scols_reset_iter@plt+0x4220>
  406b50:	mov	w1, w0
  406b54:	tbnz	w0, #31, 406bcc <scols_reset_iter@plt+0x432c>
  406b58:	bl	402360 <ttyname@plt>
  406b5c:	mov	x19, x0
  406b60:	cbz	x0, 406bf8 <scols_reset_iter@plt+0x4358>
  406b64:	cbz	x22, 406b6c <scols_reset_iter@plt+0x42cc>
  406b68:	str	x0, [x22]
  406b6c:	orr	x0, x20, x21
  406b70:	cbz	x0, 406be0 <scols_reset_iter@plt+0x4340>
  406b74:	mov	x0, x19
  406b78:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  406b7c:	mov	x2, #0x5                   	// #5
  406b80:	add	x1, x1, #0x830
  406b84:	bl	402470 <strncmp@plt>
  406b88:	cmp	w0, #0x0
  406b8c:	add	x0, x19, #0x5
  406b90:	csel	x19, x0, x19, eq  // eq = none
  406b94:	cbz	x20, 406ba0 <scols_reset_iter@plt+0x4300>
  406b98:	str	x19, [x20]
  406b9c:	cbz	x21, 406be0 <scols_reset_iter@plt+0x4340>
  406ba0:	ldrsb	w20, [x19]
  406ba4:	cbz	w20, 406be0 <scols_reset_iter@plt+0x4340>
  406ba8:	bl	402620 <__ctype_b_loc@plt>
  406bac:	ldr	x1, [x0]
  406bb0:	b	406bbc <scols_reset_iter@plt+0x431c>
  406bb4:	ldrsb	w20, [x19, #1]!
  406bb8:	cbz	w20, 406be0 <scols_reset_iter@plt+0x4340>
  406bbc:	ldrh	w0, [x1, w20, sxtw #1]
  406bc0:	tbz	w0, #11, 406bb4 <scols_reset_iter@plt+0x4314>
  406bc4:	mov	w1, #0x0                   	// #0
  406bc8:	str	x19, [x21]
  406bcc:	mov	w0, w1
  406bd0:	ldp	x19, x20, [sp, #16]
  406bd4:	ldp	x21, x22, [sp, #32]
  406bd8:	ldp	x29, x30, [sp], #48
  406bdc:	ret
  406be0:	mov	w1, #0x0                   	// #0
  406be4:	mov	w0, w1
  406be8:	ldp	x19, x20, [sp, #16]
  406bec:	ldp	x21, x22, [sp, #32]
  406bf0:	ldp	x29, x30, [sp], #48
  406bf4:	ret
  406bf8:	mov	w1, #0xffffffff            	// #-1
  406bfc:	b	406bcc <scols_reset_iter@plt+0x432c>
  406c00:	stp	x29, x30, [sp, #-32]!
  406c04:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  406c08:	mov	x29, sp
  406c0c:	str	x19, [sp, #16]
  406c10:	mov	x19, x0
  406c14:	add	x0, x1, #0x838
  406c18:	bl	402810 <getenv@plt>
  406c1c:	cmp	x0, #0x0
  406c20:	mov	w1, #0xffffffea            	// #-22
  406c24:	str	x0, [x19]
  406c28:	csel	w0, w1, wzr, ne  // ne = any
  406c2c:	ldr	x19, [sp, #16]
  406c30:	ldp	x29, x30, [sp], #32
  406c34:	ret
  406c38:	cbz	x0, 406c74 <scols_reset_iter@plt+0x43d4>
  406c3c:	stp	x29, x30, [sp, #-32]!
  406c40:	mov	x29, sp
  406c44:	stp	x19, x20, [sp, #16]
  406c48:	mov	x20, x0
  406c4c:	ldr	x0, [x0]
  406c50:	cbz	x0, 406c64 <scols_reset_iter@plt+0x43c4>
  406c54:	mov	x19, x20
  406c58:	bl	402660 <free@plt>
  406c5c:	ldr	x0, [x19, #8]!
  406c60:	cbnz	x0, 406c58 <scols_reset_iter@plt+0x43b8>
  406c64:	str	xzr, [x20]
  406c68:	ldp	x19, x20, [sp, #16]
  406c6c:	ldp	x29, x30, [sp], #32
  406c70:	ret
  406c74:	ret
  406c78:	stp	x29, x30, [sp, #-32]!
  406c7c:	mov	x29, sp
  406c80:	str	x19, [sp, #16]
  406c84:	mov	x19, x0
  406c88:	bl	406c38 <scols_reset_iter@plt+0x4398>
  406c8c:	mov	x0, x19
  406c90:	bl	402660 <free@plt>
  406c94:	mov	x0, #0x0                   	// #0
  406c98:	ldr	x19, [sp, #16]
  406c9c:	ldp	x29, x30, [sp], #32
  406ca0:	ret
  406ca4:	nop
  406ca8:	mov	x1, x0
  406cac:	cbz	x0, 406cd0 <scols_reset_iter@plt+0x4430>
  406cb0:	ldr	x0, [x0]
  406cb4:	cbz	x0, 406cd0 <scols_reset_iter@plt+0x4430>
  406cb8:	mov	w0, #0x0                   	// #0
  406cbc:	nop
  406cc0:	ldr	x2, [x1, #8]!
  406cc4:	add	w0, w0, #0x1
  406cc8:	cbnz	x2, 406cc0 <scols_reset_iter@plt+0x4420>
  406ccc:	ret
  406cd0:	mov	w0, #0x0                   	// #0
  406cd4:	ret
  406cd8:	stp	x29, x30, [sp, #-48]!
  406cdc:	mov	x29, sp
  406ce0:	stp	x19, x20, [sp, #16]
  406ce4:	mov	x20, x0
  406ce8:	str	x21, [sp, #32]
  406cec:	bl	406ca8 <scols_reset_iter@plt+0x4408>
  406cf0:	add	w0, w0, #0x1
  406cf4:	lsl	x0, x0, #3
  406cf8:	bl	402430 <malloc@plt>
  406cfc:	mov	x21, x0
  406d00:	cbz	x0, 406d34 <scols_reset_iter@plt+0x4494>
  406d04:	cbz	x20, 406d48 <scols_reset_iter@plt+0x44a8>
  406d08:	mov	x19, x0
  406d0c:	ldr	x0, [x20]
  406d10:	cbz	x0, 406d30 <scols_reset_iter@plt+0x4490>
  406d14:	nop
  406d18:	bl	402520 <strdup@plt>
  406d1c:	str	x0, [x19]
  406d20:	add	x19, x19, #0x8
  406d24:	cbz	x0, 406d50 <scols_reset_iter@plt+0x44b0>
  406d28:	ldr	x0, [x20, #8]!
  406d2c:	cbnz	x0, 406d18 <scols_reset_iter@plt+0x4478>
  406d30:	str	xzr, [x19]
  406d34:	mov	x0, x21
  406d38:	ldp	x19, x20, [sp, #16]
  406d3c:	ldr	x21, [sp, #32]
  406d40:	ldp	x29, x30, [sp], #48
  406d44:	ret
  406d48:	mov	x19, x0
  406d4c:	b	406d30 <scols_reset_iter@plt+0x4490>
  406d50:	mov	x0, x21
  406d54:	mov	x21, #0x0                   	// #0
  406d58:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  406d5c:	b	406d34 <scols_reset_iter@plt+0x4494>
  406d60:	stp	x29, x30, [sp, #-96]!
  406d64:	mov	x29, sp
  406d68:	stp	x21, x22, [sp, #32]
  406d6c:	cbz	x0, 406eec <scols_reset_iter@plt+0x464c>
  406d70:	cmn	x0, #0x1
  406d74:	mov	x21, x0
  406d78:	str	x23, [sp, #48]
  406d7c:	mov	x23, x1
  406d80:	ldp	x2, x3, [x1]
  406d84:	stp	x2, x3, [sp, #64]
  406d88:	cset	w5, ne  // ne = any
  406d8c:	ldp	x0, x1, [x1, #16]
  406d90:	stp	x0, x1, [sp, #80]
  406d94:	add	w5, w5, #0x1
  406d98:	ldr	w3, [sp, #88]
  406d9c:	stp	x19, x20, [sp, #16]
  406da0:	ldr	w20, [x23, #24]
  406da4:	ldr	x19, [x23]
  406da8:	ldr	x0, [sp, #72]
  406dac:	b	406dcc <scols_reset_iter@plt+0x452c>
  406db0:	add	x4, x2, #0xf
  406db4:	and	x4, x4, #0xfffffffffffffff8
  406db8:	str	x4, [sp, #64]
  406dbc:	ldr	x2, [x2]
  406dc0:	cmn	x2, #0x1
  406dc4:	cbz	x2, 406dfc <scols_reset_iter@plt+0x455c>
  406dc8:	cinc	w5, w5, ne  // ne = any
  406dcc:	add	w4, w3, #0x8
  406dd0:	ldr	x2, [sp, #64]
  406dd4:	tbz	w3, #31, 406db0 <scols_reset_iter@plt+0x4510>
  406dd8:	cmp	w4, #0x0
  406ddc:	b.le	406e7c <scols_reset_iter@plt+0x45dc>
  406de0:	add	x1, x2, #0xf
  406de4:	mov	w3, w4
  406de8:	and	x1, x1, #0xfffffffffffffff8
  406dec:	str	x1, [sp, #64]
  406df0:	ldr	x2, [x2]
  406df4:	cmn	x2, #0x1
  406df8:	cbnz	x2, 406dc8 <scols_reset_iter@plt+0x4528>
  406dfc:	ubfiz	x0, x5, #3, #32
  406e00:	bl	402430 <malloc@plt>
  406e04:	mov	x22, x0
  406e08:	cbz	x0, 406f04 <scols_reset_iter@plt+0x4664>
  406e0c:	cmn	x21, #0x1
  406e10:	b.eq	406e88 <scols_reset_iter@plt+0x45e8>  // b.none
  406e14:	mov	x0, x21
  406e18:	bl	402520 <strdup@plt>
  406e1c:	str	x0, [x22]
  406e20:	cbz	x0, 406e64 <scols_reset_iter@plt+0x45c4>
  406e24:	mov	w21, #0x1                   	// #1
  406e28:	ldr	x23, [x23, #8]
  406e2c:	nop
  406e30:	add	x1, x19, #0xf
  406e34:	add	w0, w20, #0x8
  406e38:	and	x1, x1, #0xfffffffffffffff8
  406e3c:	tbnz	w20, #31, 406e90 <scols_reset_iter@plt+0x45f0>
  406e40:	ldr	x0, [x19]
  406e44:	mov	x19, x1
  406e48:	cmn	x0, #0x1
  406e4c:	cbz	x0, 406ebc <scols_reset_iter@plt+0x461c>
  406e50:	b.eq	406edc <scols_reset_iter@plt+0x463c>  // b.none
  406e54:	bl	402520 <strdup@plt>
  406e58:	str	x0, [x22, w21, uxtw #3]
  406e5c:	add	w21, w21, #0x1
  406e60:	cbnz	x0, 406e30 <scols_reset_iter@plt+0x4590>
  406e64:	mov	x0, x22
  406e68:	mov	x22, #0x0                   	// #0
  406e6c:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  406e70:	ldp	x19, x20, [sp, #16]
  406e74:	ldr	x23, [sp, #48]
  406e78:	b	406ecc <scols_reset_iter@plt+0x462c>
  406e7c:	add	x2, x0, w3, sxtw
  406e80:	mov	w3, w4
  406e84:	b	406dbc <scols_reset_iter@plt+0x451c>
  406e88:	mov	w21, #0x0                   	// #0
  406e8c:	b	406e28 <scols_reset_iter@plt+0x4588>
  406e90:	add	x3, x23, w20, sxtw
  406e94:	mov	x1, x19
  406e98:	mov	w20, w0
  406e9c:	add	x2, x19, #0xf
  406ea0:	cmp	w0, #0x0
  406ea4:	b.le	406ee4 <scols_reset_iter@plt+0x4644>
  406ea8:	ldr	x0, [x19]
  406eac:	and	x1, x2, #0xfffffffffffffff8
  406eb0:	mov	x19, x1
  406eb4:	cmn	x0, #0x1
  406eb8:	cbnz	x0, 406e50 <scols_reset_iter@plt+0x45b0>
  406ebc:	ldp	x19, x20, [sp, #16]
  406ec0:	add	x21, x22, w21, uxtw #3
  406ec4:	ldr	x23, [sp, #48]
  406ec8:	str	xzr, [x21]
  406ecc:	mov	x0, x22
  406ed0:	ldp	x21, x22, [sp, #32]
  406ed4:	ldp	x29, x30, [sp], #96
  406ed8:	ret
  406edc:	mov	x19, x1
  406ee0:	b	406e30 <scols_reset_iter@plt+0x4590>
  406ee4:	mov	x19, x3
  406ee8:	b	406e40 <scols_reset_iter@plt+0x45a0>
  406eec:	mov	x0, #0x8                   	// #8
  406ef0:	bl	402430 <malloc@plt>
  406ef4:	mov	x22, x0
  406ef8:	cbz	x0, 406f0c <scols_reset_iter@plt+0x466c>
  406efc:	mov	x21, x0
  406f00:	b	406ec8 <scols_reset_iter@plt+0x4628>
  406f04:	ldp	x19, x20, [sp, #16]
  406f08:	ldr	x23, [sp, #48]
  406f0c:	mov	x22, #0x0                   	// #0
  406f10:	b	406ecc <scols_reset_iter@plt+0x462c>
  406f14:	nop
  406f18:	stp	x29, x30, [sp, #-272]!
  406f1c:	mov	w9, #0xffffffc8            	// #-56
  406f20:	mov	w8, #0xffffff80            	// #-128
  406f24:	mov	x29, sp
  406f28:	add	x10, sp, #0xd0
  406f2c:	add	x11, sp, #0x110
  406f30:	stp	x11, x11, [sp, #48]
  406f34:	str	x10, [sp, #64]
  406f38:	stp	w9, w8, [sp, #72]
  406f3c:	ldp	x10, x11, [sp, #48]
  406f40:	stp	x10, x11, [sp, #16]
  406f44:	ldp	x8, x9, [sp, #64]
  406f48:	stp	x8, x9, [sp, #32]
  406f4c:	str	q0, [sp, #80]
  406f50:	str	q1, [sp, #96]
  406f54:	str	q2, [sp, #112]
  406f58:	str	q3, [sp, #128]
  406f5c:	str	q4, [sp, #144]
  406f60:	str	q5, [sp, #160]
  406f64:	str	q6, [sp, #176]
  406f68:	str	q7, [sp, #192]
  406f6c:	stp	x1, x2, [sp, #216]
  406f70:	add	x1, sp, #0x10
  406f74:	stp	x3, x4, [sp, #232]
  406f78:	stp	x5, x6, [sp, #248]
  406f7c:	str	x7, [sp, #264]
  406f80:	bl	406d60 <scols_reset_iter@plt+0x44c0>
  406f84:	ldp	x29, x30, [sp], #272
  406f88:	ret
  406f8c:	nop
  406f90:	stp	x29, x30, [sp, #-80]!
  406f94:	mov	x29, sp
  406f98:	stp	x19, x20, [sp, #16]
  406f9c:	stp	x21, x22, [sp, #32]
  406fa0:	stp	x23, x24, [sp, #48]
  406fa4:	cbz	x0, 40709c <scols_reset_iter@plt+0x47fc>
  406fa8:	mov	x20, x1
  406fac:	add	x23, sp, #0x48
  406fb0:	add	x21, sp, #0x40
  406fb4:	mov	x24, x0
  406fb8:	mov	x1, x23
  406fbc:	mov	x0, x21
  406fc0:	mov	x2, x20
  406fc4:	mov	w3, #0x0                   	// #0
  406fc8:	str	x24, [sp, #64]
  406fcc:	bl	406788 <scols_reset_iter@plt+0x3ee8>
  406fd0:	cbz	x0, 40707c <scols_reset_iter@plt+0x47dc>
  406fd4:	mov	w19, #0x0                   	// #0
  406fd8:	mov	x2, x20
  406fdc:	mov	x1, x23
  406fe0:	mov	x0, x21
  406fe4:	mov	w22, w19
  406fe8:	mov	w3, #0x0                   	// #0
  406fec:	add	w19, w19, #0x1
  406ff0:	bl	406788 <scols_reset_iter@plt+0x3ee8>
  406ff4:	cbnz	x0, 406fd8 <scols_reset_iter@plt+0x4738>
  406ff8:	add	w22, w22, #0x2
  406ffc:	lsl	x0, x22, #3
  407000:	bl	402430 <malloc@plt>
  407004:	mov	x22, x0
  407008:	cbz	x0, 407064 <scols_reset_iter@plt+0x47c4>
  40700c:	mov	x2, x20
  407010:	mov	x1, x23
  407014:	mov	x0, x21
  407018:	mov	w3, #0x0                   	// #0
  40701c:	str	x24, [sp, #64]
  407020:	bl	406788 <scols_reset_iter@plt+0x3ee8>
  407024:	cbz	x0, 407084 <scols_reset_iter@plt+0x47e4>
  407028:	mov	w19, #0x0                   	// #0
  40702c:	nop
  407030:	ldr	x1, [sp, #72]
  407034:	bl	4026f0 <strndup@plt>
  407038:	str	x0, [x22, w19, uxtw #3]
  40703c:	cbz	x0, 40708c <scols_reset_iter@plt+0x47ec>
  407040:	mov	x2, x20
  407044:	mov	x1, x23
  407048:	mov	x0, x21
  40704c:	mov	w3, #0x0                   	// #0
  407050:	add	w19, w19, #0x1
  407054:	bl	406788 <scols_reset_iter@plt+0x3ee8>
  407058:	cbnz	x0, 407030 <scols_reset_iter@plt+0x4790>
  40705c:	add	x19, x22, w19, uxtw #3
  407060:	str	xzr, [x19]
  407064:	mov	x0, x22
  407068:	ldp	x19, x20, [sp, #16]
  40706c:	ldp	x21, x22, [sp, #32]
  407070:	ldp	x23, x24, [sp, #48]
  407074:	ldp	x29, x30, [sp], #80
  407078:	ret
  40707c:	mov	x0, #0x8                   	// #8
  407080:	b	407000 <scols_reset_iter@plt+0x4760>
  407084:	mov	x19, x22
  407088:	b	407060 <scols_reset_iter@plt+0x47c0>
  40708c:	mov	x0, x22
  407090:	mov	x22, #0x0                   	// #0
  407094:	bl	406c78 <scols_reset_iter@plt+0x43d8>
  407098:	b	407064 <scols_reset_iter@plt+0x47c4>
  40709c:	adrp	x3, 408000 <scols_reset_iter@plt+0x5760>
  4070a0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4070a4:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  4070a8:	add	x3, x3, #0x858
  4070ac:	add	x1, x1, #0x840
  4070b0:	add	x0, x0, #0x808
  4070b4:	mov	w2, #0xc1                  	// #193
  4070b8:	bl	4027f0 <__assert_fail@plt>
  4070bc:	nop
  4070c0:	stp	x29, x30, [sp, #-64]!
  4070c4:	mov	x29, sp
  4070c8:	stp	x19, x20, [sp, #16]
  4070cc:	mov	x20, x0
  4070d0:	stp	x21, x22, [sp, #32]
  4070d4:	str	x23, [sp, #48]
  4070d8:	cbz	x1, 407184 <scols_reset_iter@plt+0x48e4>
  4070dc:	mov	x22, x1
  4070e0:	mov	x0, x1
  4070e4:	bl	402290 <strlen@plt>
  4070e8:	mov	x23, x0
  4070ec:	mov	x21, x20
  4070f0:	mov	x19, #0x0                   	// #0
  4070f4:	cbnz	x20, 407108 <scols_reset_iter@plt+0x4868>
  4070f8:	b	407194 <scols_reset_iter@plt+0x48f4>
  4070fc:	csel	x19, x2, x19, ne  // ne = any
  407100:	bl	402290 <strlen@plt>
  407104:	add	x19, x19, x0
  407108:	ldr	x0, [x21]
  40710c:	cmp	x19, #0x0
  407110:	add	x2, x19, x23
  407114:	add	x21, x21, #0x8
  407118:	cbnz	x0, 4070fc <scols_reset_iter@plt+0x485c>
  40711c:	add	x0, x19, #0x1
  407120:	bl	402430 <malloc@plt>
  407124:	mov	x21, x0
  407128:	mov	x2, x0
  40712c:	cbnz	x0, 407150 <scols_reset_iter@plt+0x48b0>
  407130:	b	4071ac <scols_reset_iter@plt+0x490c>
  407134:	b.eq	407140 <scols_reset_iter@plt+0x48a0>  // b.none
  407138:	bl	4023e0 <stpcpy@plt>
  40713c:	mov	x2, x0
  407140:	mov	x0, x2
  407144:	mov	x1, x19
  407148:	bl	4023e0 <stpcpy@plt>
  40714c:	mov	x2, x0
  407150:	ldr	x19, [x20]
  407154:	mov	x1, x22
  407158:	mov	x0, x2
  40715c:	cmp	x21, x2
  407160:	add	x20, x20, #0x8
  407164:	cbnz	x19, 407134 <scols_reset_iter@plt+0x4894>
  407168:	strb	wzr, [x2]
  40716c:	mov	x0, x21
  407170:	ldp	x19, x20, [sp, #16]
  407174:	ldp	x21, x22, [sp, #32]
  407178:	ldr	x23, [sp, #48]
  40717c:	ldp	x29, x30, [sp], #64
  407180:	ret
  407184:	adrp	x22, 408000 <scols_reset_iter@plt+0x5760>
  407188:	mov	x23, #0x1                   	// #1
  40718c:	add	x22, x22, #0x850
  407190:	b	4070ec <scols_reset_iter@plt+0x484c>
  407194:	mov	x0, #0x1                   	// #1
  407198:	bl	402430 <malloc@plt>
  40719c:	mov	x2, x0
  4071a0:	cbz	x0, 4071ac <scols_reset_iter@plt+0x490c>
  4071a4:	mov	x21, x0
  4071a8:	b	407168 <scols_reset_iter@plt+0x48c8>
  4071ac:	mov	x21, #0x0                   	// #0
  4071b0:	b	40716c <scols_reset_iter@plt+0x48cc>
  4071b4:	nop
  4071b8:	cbz	x1, 407220 <scols_reset_iter@plt+0x4980>
  4071bc:	stp	x29, x30, [sp, #-48]!
  4071c0:	mov	x29, sp
  4071c4:	stp	x19, x20, [sp, #16]
  4071c8:	mov	x20, x0
  4071cc:	ldr	x0, [x0]
  4071d0:	str	x21, [sp, #32]
  4071d4:	mov	x21, x1
  4071d8:	bl	406ca8 <scols_reset_iter@plt+0x4408>
  4071dc:	mov	w19, w0
  4071e0:	adds	w1, w0, #0x2
  4071e4:	b.cs	407228 <scols_reset_iter@plt+0x4988>  // b.hs, b.nlast
  4071e8:	ldr	x0, [x20]
  4071ec:	ubfiz	x1, x1, #3, #32
  4071f0:	bl	402510 <realloc@plt>
  4071f4:	mov	x2, x0
  4071f8:	cbz	x0, 407228 <scols_reset_iter@plt+0x4988>
  4071fc:	add	w1, w19, #0x1
  407200:	str	x21, [x0, w19, uxtw #3]
  407204:	mov	w0, #0x0                   	// #0
  407208:	str	xzr, [x2, x1, lsl #3]
  40720c:	str	x2, [x20]
  407210:	ldp	x19, x20, [sp, #16]
  407214:	ldr	x21, [sp, #32]
  407218:	ldp	x29, x30, [sp], #48
  40721c:	ret
  407220:	mov	w0, #0x0                   	// #0
  407224:	ret
  407228:	mov	w0, #0xfffffff4            	// #-12
  40722c:	b	407210 <scols_reset_iter@plt+0x4970>
  407230:	stp	x29, x30, [sp, #-64]!
  407234:	mov	x29, sp
  407238:	stp	x19, x20, [sp, #16]
  40723c:	cbz	x1, 407290 <scols_reset_iter@plt+0x49f0>
  407240:	stp	x21, x22, [sp, #32]
  407244:	mov	x21, x1
  407248:	mov	x22, x2
  40724c:	str	x23, [sp, #48]
  407250:	mov	x23, x0
  407254:	b	407278 <scols_reset_iter@plt+0x49d8>
  407258:	bl	406690 <scols_reset_iter@plt+0x3df0>
  40725c:	mov	x19, x0
  407260:	mov	x1, x19
  407264:	mov	x0, x23
  407268:	cbz	x19, 4072a4 <scols_reset_iter@plt+0x4a04>
  40726c:	bl	4071b8 <scols_reset_iter@plt+0x4918>
  407270:	mov	w20, w0
  407274:	tbnz	w0, #31, 4072c0 <scols_reset_iter@plt+0x4a20>
  407278:	ldr	x0, [x21]
  40727c:	mov	x1, x22
  407280:	add	x21, x21, #0x8
  407284:	cbnz	x0, 407258 <scols_reset_iter@plt+0x49b8>
  407288:	ldp	x21, x22, [sp, #32]
  40728c:	ldr	x23, [sp, #48]
  407290:	mov	w20, #0x0                   	// #0
  407294:	mov	w0, w20
  407298:	ldp	x19, x20, [sp, #16]
  40729c:	ldp	x29, x30, [sp], #64
  4072a0:	ret
  4072a4:	mov	w20, #0xfffffff4            	// #-12
  4072a8:	mov	w0, w20
  4072ac:	ldp	x19, x20, [sp, #16]
  4072b0:	ldp	x21, x22, [sp, #32]
  4072b4:	ldr	x23, [sp, #48]
  4072b8:	ldp	x29, x30, [sp], #64
  4072bc:	ret
  4072c0:	mov	x0, x19
  4072c4:	bl	402660 <free@plt>
  4072c8:	mov	w0, w20
  4072cc:	ldp	x19, x20, [sp, #16]
  4072d0:	ldp	x21, x22, [sp, #32]
  4072d4:	ldr	x23, [sp, #48]
  4072d8:	ldp	x29, x30, [sp], #64
  4072dc:	ret
  4072e0:	cbz	x1, 40736c <scols_reset_iter@plt+0x4acc>
  4072e4:	stp	x29, x30, [sp, #-48]!
  4072e8:	mov	x29, sp
  4072ec:	stp	x21, x22, [sp, #32]
  4072f0:	mov	x21, x0
  4072f4:	mov	x22, x1
  4072f8:	ldr	x0, [x0]
  4072fc:	stp	x19, x20, [sp, #16]
  407300:	bl	406ca8 <scols_reset_iter@plt+0x4408>
  407304:	mov	w19, w0
  407308:	adds	w0, w0, #0x2
  40730c:	b.cs	407374 <scols_reset_iter@plt+0x4ad4>  // b.hs, b.nlast
  407310:	ubfiz	x0, x0, #3, #32
  407314:	bl	402430 <malloc@plt>
  407318:	mov	x20, x0
  40731c:	cbz	x0, 407374 <scols_reset_iter@plt+0x4ad4>
  407320:	add	x4, x0, #0x8
  407324:	mov	x2, #0x0                   	// #0
  407328:	ldr	x0, [x21]
  40732c:	cbz	w19, 407344 <scols_reset_iter@plt+0x4aa4>
  407330:	ldr	x3, [x0, x2, lsl #3]
  407334:	str	x3, [x4, x2, lsl #3]
  407338:	add	x2, x2, #0x1
  40733c:	cmp	w19, w2
  407340:	b.hi	407330 <scols_reset_iter@plt+0x4a90>  // b.pmore
  407344:	add	w19, w19, #0x1
  407348:	str	x22, [x20]
  40734c:	str	xzr, [x20, x19, lsl #3]
  407350:	bl	402660 <free@plt>
  407354:	mov	w0, #0x0                   	// #0
  407358:	str	x20, [x21]
  40735c:	ldp	x19, x20, [sp, #16]
  407360:	ldp	x21, x22, [sp, #32]
  407364:	ldp	x29, x30, [sp], #48
  407368:	ret
  40736c:	mov	w0, #0x0                   	// #0
  407370:	ret
  407374:	mov	w0, #0xfffffff4            	// #-12
  407378:	b	40735c <scols_reset_iter@plt+0x4abc>
  40737c:	nop
  407380:	stp	x29, x30, [sp, #-32]!
  407384:	mov	x29, sp
  407388:	stp	x19, x20, [sp, #16]
  40738c:	mov	x20, x1
  407390:	bl	4071b8 <scols_reset_iter@plt+0x4918>
  407394:	mov	w19, w0
  407398:	tbnz	w0, #31, 4073ac <scols_reset_iter@plt+0x4b0c>
  40739c:	mov	w0, w19
  4073a0:	ldp	x19, x20, [sp, #16]
  4073a4:	ldp	x29, x30, [sp], #32
  4073a8:	ret
  4073ac:	mov	x0, x20
  4073b0:	bl	402660 <free@plt>
  4073b4:	mov	w0, w19
  4073b8:	ldp	x19, x20, [sp, #16]
  4073bc:	ldp	x29, x30, [sp], #32
  4073c0:	ret
  4073c4:	nop
  4073c8:	stp	x29, x30, [sp, #-32]!
  4073cc:	mov	x29, sp
  4073d0:	stp	x19, x20, [sp, #16]
  4073d4:	mov	x20, x1
  4073d8:	bl	4072e0 <scols_reset_iter@plt+0x4a40>
  4073dc:	mov	w19, w0
  4073e0:	tbnz	w0, #31, 4073f4 <scols_reset_iter@plt+0x4b54>
  4073e4:	mov	w0, w19
  4073e8:	ldp	x19, x20, [sp, #16]
  4073ec:	ldp	x29, x30, [sp], #32
  4073f0:	ret
  4073f4:	mov	x0, x20
  4073f8:	bl	402660 <free@plt>
  4073fc:	mov	w0, w19
  407400:	ldp	x19, x20, [sp, #16]
  407404:	ldp	x29, x30, [sp], #32
  407408:	ret
  40740c:	nop
  407410:	cbz	x1, 407444 <scols_reset_iter@plt+0x4ba4>
  407414:	stp	x29, x30, [sp, #-32]!
  407418:	mov	x29, sp
  40741c:	str	x19, [sp, #16]
  407420:	mov	x19, x0
  407424:	mov	x0, x1
  407428:	bl	402520 <strdup@plt>
  40742c:	mov	x1, x0
  407430:	cbz	x0, 40744c <scols_reset_iter@plt+0x4bac>
  407434:	mov	x0, x19
  407438:	ldr	x19, [sp, #16]
  40743c:	ldp	x29, x30, [sp], #32
  407440:	b	407380 <scols_reset_iter@plt+0x4ae0>
  407444:	mov	w0, #0x0                   	// #0
  407448:	ret
  40744c:	mov	w0, #0xfffffff4            	// #-12
  407450:	ldr	x19, [sp, #16]
  407454:	ldp	x29, x30, [sp], #32
  407458:	ret
  40745c:	nop
  407460:	cbz	x1, 4074a4 <scols_reset_iter@plt+0x4c04>
  407464:	stp	x29, x30, [sp, #-32]!
  407468:	mov	x29, sp
  40746c:	stp	x19, x20, [sp, #16]
  407470:	mov	x20, x0
  407474:	mov	x19, x1
  407478:	b	407484 <scols_reset_iter@plt+0x4be4>
  40747c:	bl	407410 <scols_reset_iter@plt+0x4b70>
  407480:	tbnz	w0, #31, 407498 <scols_reset_iter@plt+0x4bf8>
  407484:	ldr	x1, [x19]
  407488:	mov	x0, x20
  40748c:	add	x19, x19, #0x8
  407490:	cbnz	x1, 40747c <scols_reset_iter@plt+0x4bdc>
  407494:	mov	w0, #0x0                   	// #0
  407498:	ldp	x19, x20, [sp, #16]
  40749c:	ldp	x29, x30, [sp], #32
  4074a0:	ret
  4074a4:	mov	w0, #0x0                   	// #0
  4074a8:	ret
  4074ac:	nop
  4074b0:	stp	x29, x30, [sp, #-64]!
  4074b4:	mov	x29, sp
  4074b8:	str	x23, [sp, #48]
  4074bc:	mov	x23, x0
  4074c0:	cbz	x0, 407528 <scols_reset_iter@plt+0x4c88>
  4074c4:	stp	x19, x20, [sp, #16]
  4074c8:	stp	x21, x22, [sp, #32]
  4074cc:	mov	x22, x1
  4074d0:	cbz	x1, 407538 <scols_reset_iter@plt+0x4c98>
  4074d4:	ldr	x20, [x0]
  4074d8:	mov	x19, x0
  4074dc:	mov	x21, x0
  4074e0:	cbnz	x20, 4074fc <scols_reset_iter@plt+0x4c5c>
  4074e4:	b	40751c <scols_reset_iter@plt+0x4c7c>
  4074e8:	mov	x2, x19
  4074ec:	str	x20, [x2], #8
  4074f0:	ldr	x20, [x21, #8]!
  4074f4:	mov	x19, x2
  4074f8:	cbz	x20, 40751c <scols_reset_iter@plt+0x4c7c>
  4074fc:	mov	x1, x22
  407500:	mov	x0, x20
  407504:	bl	402600 <strcmp@plt>
  407508:	cbnz	w0, 4074e8 <scols_reset_iter@plt+0x4c48>
  40750c:	mov	x0, x20
  407510:	bl	402660 <free@plt>
  407514:	ldr	x20, [x21, #8]!
  407518:	cbnz	x20, 4074fc <scols_reset_iter@plt+0x4c5c>
  40751c:	ldp	x21, x22, [sp, #32]
  407520:	str	xzr, [x19]
  407524:	ldp	x19, x20, [sp, #16]
  407528:	mov	x0, x23
  40752c:	ldr	x23, [sp, #48]
  407530:	ldp	x29, x30, [sp], #64
  407534:	ret
  407538:	adrp	x3, 408000 <scols_reset_iter@plt+0x5760>
  40753c:	add	x3, x3, #0x858
  407540:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  407544:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  407548:	add	x3, x3, #0x10
  40754c:	add	x1, x1, #0x840
  407550:	add	x0, x0, #0x808
  407554:	mov	w2, #0x15a                 	// #346
  407558:	bl	4027f0 <__assert_fail@plt>
  40755c:	nop
  407560:	stp	x29, x30, [sp, #-288]!
  407564:	mov	w9, #0xffffffd0            	// #-48
  407568:	mov	w8, #0xffffff80            	// #-128
  40756c:	mov	x29, sp
  407570:	add	x10, sp, #0xf0
  407574:	add	x11, sp, #0x120
  407578:	stp	x11, x11, [sp, #80]
  40757c:	str	x10, [sp, #96]
  407580:	stp	w9, w8, [sp, #104]
  407584:	ldp	x10, x11, [sp, #80]
  407588:	str	x19, [sp, #16]
  40758c:	ldp	x8, x9, [sp, #96]
  407590:	mov	x19, x0
  407594:	add	x0, sp, #0x48
  407598:	stp	x10, x11, [sp, #32]
  40759c:	stp	x8, x9, [sp, #48]
  4075a0:	str	q0, [sp, #112]
  4075a4:	str	q1, [sp, #128]
  4075a8:	str	q2, [sp, #144]
  4075ac:	str	q3, [sp, #160]
  4075b0:	str	q4, [sp, #176]
  4075b4:	str	q5, [sp, #192]
  4075b8:	str	q6, [sp, #208]
  4075bc:	str	q7, [sp, #224]
  4075c0:	stp	x2, x3, [sp, #240]
  4075c4:	add	x2, sp, #0x20
  4075c8:	stp	x4, x5, [sp, #256]
  4075cc:	stp	x6, x7, [sp, #272]
  4075d0:	bl	4026c0 <vasprintf@plt>
  4075d4:	tbnz	w0, #31, 4075f0 <scols_reset_iter@plt+0x4d50>
  4075d8:	ldr	x1, [sp, #72]
  4075dc:	mov	x0, x19
  4075e0:	bl	407380 <scols_reset_iter@plt+0x4ae0>
  4075e4:	ldr	x19, [sp, #16]
  4075e8:	ldp	x29, x30, [sp], #288
  4075ec:	ret
  4075f0:	mov	w0, #0xfffffff4            	// #-12
  4075f4:	b	4075e4 <scols_reset_iter@plt+0x4d44>
  4075f8:	mov	x3, x2
  4075fc:	stp	x29, x30, [sp, #-80]!
  407600:	mov	x29, sp
  407604:	ldp	x4, x5, [x3]
  407608:	stp	x4, x5, [sp, #32]
  40760c:	add	x2, sp, #0x20
  407610:	ldp	x4, x5, [x3, #16]
  407614:	str	x19, [sp, #16]
  407618:	mov	x19, x0
  40761c:	add	x0, sp, #0x48
  407620:	stp	x4, x5, [sp, #48]
  407624:	bl	4026c0 <vasprintf@plt>
  407628:	tbnz	w0, #31, 407644 <scols_reset_iter@plt+0x4da4>
  40762c:	ldr	x1, [sp, #72]
  407630:	mov	x0, x19
  407634:	bl	407380 <scols_reset_iter@plt+0x4ae0>
  407638:	ldr	x19, [sp, #16]
  40763c:	ldp	x29, x30, [sp], #80
  407640:	ret
  407644:	mov	w0, #0xfffffff4            	// #-12
  407648:	b	407638 <scols_reset_iter@plt+0x4d98>
  40764c:	nop
  407650:	stp	x29, x30, [sp, #-32]!
  407654:	mov	x29, sp
  407658:	str	x19, [sp, #16]
  40765c:	mov	x19, x0
  407660:	bl	406ca8 <scols_reset_iter@plt+0x4408>
  407664:	cmp	w0, #0x1
  407668:	b.ls	407698 <scols_reset_iter@plt+0x4df8>  // b.plast
  40766c:	sub	w5, w0, #0x1
  407670:	lsr	w2, w0, #1
  407674:	mov	x1, #0x0                   	// #0
  407678:	sub	w0, w5, w1
  40767c:	ldr	x3, [x19, x1, lsl #3]
  407680:	ldr	x4, [x19, x0, lsl #3]
  407684:	str	x4, [x19, x1, lsl #3]
  407688:	str	x3, [x19, x0, lsl #3]
  40768c:	add	x1, x1, #0x1
  407690:	cmp	x2, x1
  407694:	b.ne	407678 <scols_reset_iter@plt+0x4dd8>  // b.any
  407698:	mov	x0, x19
  40769c:	ldr	x19, [sp, #16]
  4076a0:	ldp	x29, x30, [sp], #32
  4076a4:	ret
  4076a8:	stp	x29, x30, [sp, #-64]!
  4076ac:	mov	x29, sp
  4076b0:	stp	x19, x20, [sp, #16]
  4076b4:	adrp	x20, 419000 <scols_reset_iter@plt+0x16760>
  4076b8:	add	x20, x20, #0xde0
  4076bc:	stp	x21, x22, [sp, #32]
  4076c0:	adrp	x21, 419000 <scols_reset_iter@plt+0x16760>
  4076c4:	add	x21, x21, #0xdd8
  4076c8:	sub	x20, x20, x21
  4076cc:	mov	w22, w0
  4076d0:	stp	x23, x24, [sp, #48]
  4076d4:	mov	x23, x1
  4076d8:	mov	x24, x2
  4076dc:	bl	402218 <mbrtowc@plt-0x38>
  4076e0:	cmp	xzr, x20, asr #3
  4076e4:	b.eq	407710 <scols_reset_iter@plt+0x4e70>  // b.none
  4076e8:	asr	x20, x20, #3
  4076ec:	mov	x19, #0x0                   	// #0
  4076f0:	ldr	x3, [x21, x19, lsl #3]
  4076f4:	mov	x2, x24
  4076f8:	add	x19, x19, #0x1
  4076fc:	mov	x1, x23
  407700:	mov	w0, w22
  407704:	blr	x3
  407708:	cmp	x20, x19
  40770c:	b.ne	4076f0 <scols_reset_iter@plt+0x4e50>  // b.any
  407710:	ldp	x19, x20, [sp, #16]
  407714:	ldp	x21, x22, [sp, #32]
  407718:	ldp	x23, x24, [sp, #48]
  40771c:	ldp	x29, x30, [sp], #64
  407720:	ret
  407724:	nop
  407728:	ret
  40772c:	nop
  407730:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17760>
  407734:	mov	x1, #0x0                   	// #0
  407738:	ldr	x2, [x2, #824]
  40773c:	b	402380 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000407740 <.fini>:
  407740:	stp	x29, x30, [sp, #-16]!
  407744:	mov	x29, sp
  407748:	ldp	x29, x30, [sp], #16
  40774c:	ret
