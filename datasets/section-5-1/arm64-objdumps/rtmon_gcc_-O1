
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404b30 <.init>:
  404b30:	stp	x29, x30, [sp, #-16]!
  404b34:	mov	x29, sp
  404b38:	bl	405100 <_start@@Base+0x50>
  404b3c:	ldp	x29, x30, [sp], #16
  404b40:	ret

Disassembly of section .plt:

0000000000404b50 <memcpy@plt-0x20>:
  404b50:	stp	x16, x30, [sp, #-16]!
  404b54:	adrp	x16, 420000 <_IO_stdin_used@@Base+0x13258>
  404b58:	ldr	x17, [x16, #4088]
  404b5c:	add	x16, x16, #0xff8
  404b60:	br	x17
  404b64:	nop
  404b68:	nop
  404b6c:	nop

0000000000404b70 <memcpy@plt>:
  404b70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b74:	ldr	x17, [x16]
  404b78:	add	x16, x16, #0x0
  404b7c:	br	x17

0000000000404b80 <recvmsg@plt>:
  404b80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #8]
  404b88:	add	x16, x16, #0x8
  404b8c:	br	x17

0000000000404b90 <strtoul@plt>:
  404b90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #16]
  404b98:	add	x16, x16, #0x10
  404b9c:	br	x17

0000000000404ba0 <strlen@plt>:
  404ba0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #24]
  404ba8:	add	x16, x16, #0x18
  404bac:	br	x17

0000000000404bb0 <exit@plt>:
  404bb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #32]
  404bb8:	add	x16, x16, #0x20
  404bbc:	br	x17

0000000000404bc0 <perror@plt>:
  404bc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #40]
  404bc8:	add	x16, x16, #0x28
  404bcc:	br	x17

0000000000404bd0 <strtoll@plt>:
  404bd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #48]
  404bd8:	add	x16, x16, #0x30
  404bdc:	br	x17

0000000000404be0 <strtod@plt>:
  404be0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #56]
  404be8:	add	x16, x16, #0x38
  404bec:	br	x17

0000000000404bf0 <geteuid@plt>:
  404bf0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #64]
  404bf8:	add	x16, x16, #0x40
  404bfc:	br	x17

0000000000404c00 <sethostent@plt>:
  404c00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #72]
  404c08:	add	x16, x16, #0x48
  404c0c:	br	x17

0000000000404c10 <bind@plt>:
  404c10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #80]
  404c18:	add	x16, x16, #0x50
  404c1c:	br	x17

0000000000404c20 <ftell@plt>:
  404c20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #88]
  404c28:	add	x16, x16, #0x58
  404c2c:	br	x17

0000000000404c30 <sprintf@plt>:
  404c30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #96]
  404c38:	add	x16, x16, #0x60
  404c3c:	br	x17

0000000000404c40 <getuid@plt>:
  404c40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #104]
  404c48:	add	x16, x16, #0x68
  404c4c:	br	x17

0000000000404c50 <putc@plt>:
  404c50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #112]
  404c58:	add	x16, x16, #0x70
  404c5c:	br	x17

0000000000404c60 <strftime@plt>:
  404c60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #120]
  404c68:	add	x16, x16, #0x78
  404c6c:	br	x17

0000000000404c70 <fputc@plt>:
  404c70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #128]
  404c78:	add	x16, x16, #0x80
  404c7c:	br	x17

0000000000404c80 <snprintf@plt>:
  404c80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #136]
  404c88:	add	x16, x16, #0x88
  404c8c:	br	x17

0000000000404c90 <fileno@plt>:
  404c90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #144]
  404c98:	add	x16, x16, #0x90
  404c9c:	br	x17

0000000000404ca0 <localtime@plt>:
  404ca0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #152]
  404ca8:	add	x16, x16, #0x98
  404cac:	br	x17

0000000000404cb0 <fclose@plt>:
  404cb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #160]
  404cb8:	add	x16, x16, #0xa0
  404cbc:	br	x17

0000000000404cc0 <time@plt>:
  404cc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #168]
  404cc8:	add	x16, x16, #0xa8
  404ccc:	br	x17

0000000000404cd0 <malloc@plt>:
  404cd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #176]
  404cd8:	add	x16, x16, #0xb0
  404cdc:	br	x17

0000000000404ce0 <setsockopt@plt>:
  404ce0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #184]
  404ce8:	add	x16, x16, #0xb8
  404cec:	br	x17

0000000000404cf0 <__isoc99_fscanf@plt>:
  404cf0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #192]
  404cf8:	add	x16, x16, #0xc0
  404cfc:	br	x17

0000000000404d00 <__libc_start_main@plt>:
  404d00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #200]
  404d08:	add	x16, x16, #0xc8
  404d0c:	br	x17

0000000000404d10 <strcat@plt>:
  404d10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #208]
  404d18:	add	x16, x16, #0xd0
  404d1c:	br	x17

0000000000404d20 <if_indextoname@plt>:
  404d20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #216]
  404d28:	add	x16, x16, #0xd8
  404d2c:	br	x17

0000000000404d30 <memset@plt>:
  404d30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #224]
  404d38:	add	x16, x16, #0xe0
  404d3c:	br	x17

0000000000404d40 <gettimeofday@plt>:
  404d40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #232]
  404d48:	add	x16, x16, #0xe8
  404d4c:	br	x17

0000000000404d50 <sendmsg@plt>:
  404d50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #240]
  404d58:	add	x16, x16, #0xf0
  404d5c:	br	x17

0000000000404d60 <cap_get_flag@plt>:
  404d60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #248]
  404d68:	add	x16, x16, #0xf8
  404d6c:	br	x17

0000000000404d70 <strcasecmp@plt>:
  404d70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #256]
  404d78:	add	x16, x16, #0x100
  404d7c:	br	x17

0000000000404d80 <realloc@plt>:
  404d80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #264]
  404d88:	add	x16, x16, #0x108
  404d8c:	br	x17

0000000000404d90 <cap_set_proc@plt>:
  404d90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #272]
  404d98:	add	x16, x16, #0x110
  404d9c:	br	x17

0000000000404da0 <strdup@plt>:
  404da0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #280]
  404da8:	add	x16, x16, #0x118
  404dac:	br	x17

0000000000404db0 <strerror@plt>:
  404db0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #288]
  404db8:	add	x16, x16, #0x120
  404dbc:	br	x17

0000000000404dc0 <close@plt>:
  404dc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #296]
  404dc8:	add	x16, x16, #0x128
  404dcc:	br	x17

0000000000404dd0 <strrchr@plt>:
  404dd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #304]
  404dd8:	add	x16, x16, #0x130
  404ddc:	br	x17

0000000000404de0 <recv@plt>:
  404de0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #312]
  404de8:	add	x16, x16, #0x138
  404dec:	br	x17

0000000000404df0 <__gmon_start__@plt>:
  404df0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #320]
  404df8:	add	x16, x16, #0x140
  404dfc:	br	x17

0000000000404e00 <abort@plt>:
  404e00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #328]
  404e08:	add	x16, x16, #0x148
  404e0c:	br	x17

0000000000404e10 <feof@plt>:
  404e10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #336]
  404e18:	add	x16, x16, #0x150
  404e1c:	br	x17

0000000000404e20 <memcmp@plt>:
  404e20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #344]
  404e28:	add	x16, x16, #0x158
  404e2c:	br	x17

0000000000404e30 <strcmp@plt>:
  404e30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #352]
  404e38:	add	x16, x16, #0x160
  404e3c:	br	x17

0000000000404e40 <__ctype_b_loc@plt>:
  404e40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #360]
  404e48:	add	x16, x16, #0x168
  404e4c:	br	x17

0000000000404e50 <strtol@plt>:
  404e50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #368]
  404e58:	add	x16, x16, #0x170
  404e5c:	br	x17

0000000000404e60 <cap_get_proc@plt>:
  404e60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #376]
  404e68:	add	x16, x16, #0x178
  404e6c:	br	x17

0000000000404e70 <fread@plt>:
  404e70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #384]
  404e78:	add	x16, x16, #0x180
  404e7c:	br	x17

0000000000404e80 <gethostbyaddr@plt>:
  404e80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #392]
  404e88:	add	x16, x16, #0x188
  404e8c:	br	x17

0000000000404e90 <free@plt>:
  404e90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #400]
  404e98:	add	x16, x16, #0x190
  404e9c:	br	x17

0000000000404ea0 <inet_pton@plt>:
  404ea0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #408]
  404ea8:	add	x16, x16, #0x198
  404eac:	br	x17

0000000000404eb0 <send@plt>:
  404eb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #416]
  404eb8:	add	x16, x16, #0x1a0
  404ebc:	br	x17

0000000000404ec0 <strspn@plt>:
  404ec0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #424]
  404ec8:	add	x16, x16, #0x1a8
  404ecc:	br	x17

0000000000404ed0 <strchr@plt>:
  404ed0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #432]
  404ed8:	add	x16, x16, #0x1b0
  404edc:	br	x17

0000000000404ee0 <strtoull@plt>:
  404ee0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #440]
  404ee8:	add	x16, x16, #0x1b8
  404eec:	br	x17

0000000000404ef0 <fwrite@plt>:
  404ef0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #448]
  404ef8:	add	x16, x16, #0x1c0
  404efc:	br	x17

0000000000404f00 <socket@plt>:
  404f00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #456]
  404f08:	add	x16, x16, #0x1c8
  404f0c:	br	x17

0000000000404f10 <fflush@plt>:
  404f10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #464]
  404f18:	add	x16, x16, #0x1d0
  404f1c:	br	x17

0000000000404f20 <strcpy@plt>:
  404f20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #472]
  404f28:	add	x16, x16, #0x1d8
  404f2c:	br	x17

0000000000404f30 <fopen64@plt>:
  404f30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #480]
  404f38:	add	x16, x16, #0x1e0
  404f3c:	br	x17

0000000000404f40 <cap_clear@plt>:
  404f40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #488]
  404f48:	add	x16, x16, #0x1e8
  404f4c:	br	x17

0000000000404f50 <isatty@plt>:
  404f50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #496]
  404f58:	add	x16, x16, #0x1f0
  404f5c:	br	x17

0000000000404f60 <sysconf@plt>:
  404f60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #504]
  404f68:	add	x16, x16, #0x1f8
  404f6c:	br	x17

0000000000404f70 <asctime@plt>:
  404f70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #512]
  404f78:	add	x16, x16, #0x200
  404f7c:	br	x17

0000000000404f80 <cap_free@plt>:
  404f80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #520]
  404f88:	add	x16, x16, #0x208
  404f8c:	br	x17

0000000000404f90 <if_nametoindex@plt>:
  404f90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #528]
  404f98:	add	x16, x16, #0x210
  404f9c:	br	x17

0000000000404fa0 <strchrnul@plt>:
  404fa0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #536]
  404fa8:	add	x16, x16, #0x218
  404fac:	br	x17

0000000000404fb0 <strstr@plt>:
  404fb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #544]
  404fb8:	add	x16, x16, #0x220
  404fbc:	br	x17

0000000000404fc0 <__isoc99_sscanf@plt>:
  404fc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #552]
  404fc8:	add	x16, x16, #0x228
  404fcc:	br	x17

0000000000404fd0 <strncpy@plt>:
  404fd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #560]
  404fd8:	add	x16, x16, #0x230
  404fdc:	br	x17

0000000000404fe0 <strcspn@plt>:
  404fe0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #568]
  404fe8:	add	x16, x16, #0x238
  404fec:	br	x17

0000000000404ff0 <vfprintf@plt>:
  404ff0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #576]
  404ff8:	add	x16, x16, #0x240
  404ffc:	br	x17

0000000000405000 <printf@plt>:
  405000:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #584]
  405008:	add	x16, x16, #0x248
  40500c:	br	x17

0000000000405010 <__assert_fail@plt>:
  405010:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #592]
  405018:	add	x16, x16, #0x250
  40501c:	br	x17

0000000000405020 <__errno_location@plt>:
  405020:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #600]
  405028:	add	x16, x16, #0x258
  40502c:	br	x17

0000000000405030 <getenv@plt>:
  405030:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #608]
  405038:	add	x16, x16, #0x260
  40503c:	br	x17

0000000000405040 <putchar@plt>:
  405040:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #616]
  405048:	add	x16, x16, #0x268
  40504c:	br	x17

0000000000405050 <__getdelim@plt>:
  405050:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #624]
  405058:	add	x16, x16, #0x270
  40505c:	br	x17

0000000000405060 <getsockname@plt>:
  405060:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #632]
  405068:	add	x16, x16, #0x278
  40506c:	br	x17

0000000000405070 <fprintf@plt>:
  405070:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #640]
  405078:	add	x16, x16, #0x280
  40507c:	br	x17

0000000000405080 <fgets@plt>:
  405080:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #648]
  405088:	add	x16, x16, #0x288
  40508c:	br	x17

0000000000405090 <inet_ntop@plt>:
  405090:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #656]
  405098:	add	x16, x16, #0x290
  40509c:	br	x17

00000000004050a0 <ferror@plt>:
  4050a0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #664]
  4050a8:	add	x16, x16, #0x298
  4050ac:	br	x17

Disassembly of section .text:

00000000004050b0 <_start@@Base>:
  4050b0:	mov	x29, #0x0                   	// #0
  4050b4:	mov	x30, #0x0                   	// #0
  4050b8:	mov	x5, x0
  4050bc:	ldr	x1, [sp]
  4050c0:	add	x2, sp, #0x8
  4050c4:	mov	x6, sp
  4050c8:	movz	x0, #0x0, lsl #48
  4050cc:	movk	x0, #0x0, lsl #32
  4050d0:	movk	x0, #0x40, lsl #16
  4050d4:	movk	x0, #0x531c
  4050d8:	movz	x3, #0x0, lsl #48
  4050dc:	movk	x3, #0x0, lsl #32
  4050e0:	movk	x3, #0x40, lsl #16
  4050e4:	movk	x3, #0xcd10
  4050e8:	movz	x4, #0x0, lsl #48
  4050ec:	movk	x4, #0x0, lsl #32
  4050f0:	movk	x4, #0x40, lsl #16
  4050f4:	movk	x4, #0xcd90
  4050f8:	bl	404d00 <__libc_start_main@plt>
  4050fc:	bl	404e00 <abort@plt>
  405100:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  405104:	ldr	x0, [x0, #4040]
  405108:	cbz	x0, 405110 <_start@@Base+0x60>
  40510c:	b	404df0 <__gmon_start__@plt>
  405110:	ret
  405114:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405118:	add	x0, x0, #0x2c8
  40511c:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  405120:	add	x1, x1, #0x2c8
  405124:	cmp	x0, x1
  405128:	b.eq	40515c <_start@@Base+0xac>  // b.none
  40512c:	stp	x29, x30, [sp, #-32]!
  405130:	mov	x29, sp
  405134:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  405138:	ldr	x0, [x0, #3504]
  40513c:	str	x0, [sp, #24]
  405140:	mov	x1, x0
  405144:	cbz	x1, 405154 <_start@@Base+0xa4>
  405148:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  40514c:	add	x0, x0, #0x2c8
  405150:	blr	x1
  405154:	ldp	x29, x30, [sp], #32
  405158:	ret
  40515c:	ret
  405160:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405164:	add	x0, x0, #0x2c8
  405168:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  40516c:	add	x1, x1, #0x2c8
  405170:	sub	x0, x0, x1
  405174:	lsr	x1, x0, #63
  405178:	add	x0, x1, x0, asr #3
  40517c:	cmp	xzr, x0, asr #1
  405180:	b.eq	4051b8 <_start@@Base+0x108>  // b.none
  405184:	stp	x29, x30, [sp, #-32]!
  405188:	mov	x29, sp
  40518c:	asr	x1, x0, #1
  405190:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  405194:	ldr	x0, [x0, #3512]
  405198:	str	x0, [sp, #24]
  40519c:	mov	x2, x0
  4051a0:	cbz	x2, 4051b0 <_start@@Base+0x100>
  4051a4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4051a8:	add	x0, x0, #0x2c8
  4051ac:	blr	x2
  4051b0:	ldp	x29, x30, [sp], #32
  4051b4:	ret
  4051b8:	ret
  4051bc:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4051c0:	ldrb	w0, [x0, #720]
  4051c4:	cbnz	w0, 4051e8 <_start@@Base+0x138>
  4051c8:	stp	x29, x30, [sp, #-16]!
  4051cc:	mov	x29, sp
  4051d0:	bl	405114 <_start@@Base+0x64>
  4051d4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4051d8:	mov	w1, #0x1                   	// #1
  4051dc:	strb	w1, [x0, #720]
  4051e0:	ldp	x29, x30, [sp], #16
  4051e4:	ret
  4051e8:	ret
  4051ec:	stp	x29, x30, [sp, #-16]!
  4051f0:	mov	x29, sp
  4051f4:	bl	405160 <_start@@Base+0xb0>
  4051f8:	ldp	x29, x30, [sp], #16
  4051fc:	ret
  405200:	stp	x29, x30, [sp, #-16]!
  405204:	mov	x29, sp
  405208:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  40520c:	ldr	x3, [x0, #712]
  405210:	mov	x2, #0xc5                  	// #197
  405214:	mov	x1, #0x1                   	// #1
  405218:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  40521c:	add	x0, x0, #0xdc0
  405220:	bl	404ef0 <fwrite@plt>
  405224:	mov	w0, #0xffffffff            	// #-1
  405228:	bl	404bb0 <exit@plt>
  40522c:	stp	x29, x30, [sp, #-176]!
  405230:	mov	x29, sp
  405234:	str	x19, [sp, #16]
  405238:	mov	x19, x0
  40523c:	mov	w0, #0xf                   	// #15
  405240:	strh	w0, [sp, #52]
  405244:	strh	wzr, [sp, #54]
  405248:	str	wzr, [sp, #56]
  40524c:	str	wzr, [sp, #60]
  405250:	mov	w0, #0x18                  	// #24
  405254:	str	w0, [sp, #48]
  405258:	mov	x1, #0x0                   	// #0
  40525c:	add	x0, sp, #0x20
  405260:	bl	404d40 <gettimeofday@plt>
  405264:	ldr	x0, [sp, #32]
  405268:	str	w0, [sp, #64]
  40526c:	ldr	x0, [sp, #40]
  405270:	str	w0, [sp, #68]
  405274:	ldr	w2, [sp, #48]
  405278:	add	w2, w2, #0x3
  40527c:	mov	x3, x19
  405280:	and	x2, x2, #0xfffffffc
  405284:	mov	x1, #0x1                   	// #1
  405288:	add	x0, sp, #0x30
  40528c:	bl	404ef0 <fwrite@plt>
  405290:	ldr	x19, [sp, #16]
  405294:	ldp	x29, x30, [sp], #176
  405298:	ret
  40529c:	stp	x29, x30, [sp, #-32]!
  4052a0:	mov	x29, sp
  4052a4:	stp	x19, x20, [sp, #16]
  4052a8:	mov	x20, x1
  4052ac:	mov	x19, x2
  4052b0:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4052b4:	ldr	w0, [x0, #688]
  4052b8:	cbz	w0, 4052f0 <_start@@Base+0x240>
  4052bc:	ldr	w2, [x20]
  4052c0:	add	w2, w2, #0x3
  4052c4:	mov	x3, x19
  4052c8:	and	x2, x2, #0xfffffffc
  4052cc:	mov	x1, #0x1                   	// #1
  4052d0:	mov	x0, x20
  4052d4:	bl	404ef0 <fwrite@plt>
  4052d8:	mov	x0, x19
  4052dc:	bl	404f10 <fflush@plt>
  4052e0:	mov	w0, #0x0                   	// #0
  4052e4:	ldp	x19, x20, [sp, #16]
  4052e8:	ldp	x29, x30, [sp], #32
  4052ec:	ret
  4052f0:	mov	x0, x2
  4052f4:	bl	40522c <_start@@Base+0x17c>
  4052f8:	b	4052bc <_start@@Base+0x20c>
  4052fc:	stp	x29, x30, [sp, #-16]!
  405300:	mov	x29, sp
  405304:	mov	x2, x1
  405308:	mov	x1, x0
  40530c:	mov	x0, #0x0                   	// #0
  405310:	bl	40529c <_start@@Base+0x1ec>
  405314:	ldp	x29, x30, [sp], #16
  405318:	ret

000000000040531c <main@@Base>:
  40531c:	stp	x29, x30, [sp, #-176]!
  405320:	mov	x29, sp
  405324:	stp	x19, x20, [sp, #16]
  405328:	stp	x21, x22, [sp, #32]
  40532c:	stp	x23, x24, [sp, #48]
  405330:	stp	x25, x26, [sp, #64]
  405334:	stp	x27, x28, [sp, #80]
  405338:	cmp	w0, #0x1
  40533c:	b.le	4056d0 <main@@Base+0x3b4>
  405340:	mov	w19, w0
  405344:	mov	x20, x1
  405348:	mov	x27, #0x0                   	// #0
  40534c:	str	wzr, [sp, #108]
  405350:	str	wzr, [sp, #104]
  405354:	mov	w28, #0x0                   	// #0
  405358:	mov	w26, #0xffffffff            	// #-1
  40535c:	mov	w23, #0x0                   	// #0
  405360:	adrp	x22, 40c000 <rtnl_talk@@Base+0x24>
  405364:	add	x22, x22, #0xe88
  405368:	adrp	x24, 40c000 <rtnl_talk@@Base+0x24>
  40536c:	add	x24, x24, #0xee0
  405370:	adrp	x25, 40c000 <rtnl_talk@@Base+0x24>
  405374:	add	x25, x25, #0xee8
  405378:	b	405558 <main@@Base+0x23c>
  40537c:	bl	405200 <_start@@Base+0x150>
  405380:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405384:	add	x1, x1, #0xea8
  405388:	mov	x0, x20
  40538c:	bl	404e30 <strcmp@plt>
  405390:	cbnz	w0, 405398 <main@@Base+0x7c>
  405394:	bl	405200 <_start@@Base+0x150>
  405398:	mov	x2, x20
  40539c:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4053a0:	add	x1, x1, #0xeb0
  4053a4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4053a8:	ldr	x0, [x0, #712]
  4053ac:	bl	405070 <fprintf@plt>
  4053b0:	mov	w0, #0xffffffff            	// #-1
  4053b4:	bl	404bb0 <exit@plt>
  4053b8:	ldr	x21, [x20, #8]
  4053bc:	mov	x1, x24
  4053c0:	mov	x0, x21
  4053c4:	bl	404e30 <strcmp@plt>
  4053c8:	cbz	w0, 405540 <main@@Base+0x224>
  4053cc:	mov	x1, x25
  4053d0:	mov	x0, x21
  4053d4:	bl	404e30 <strcmp@plt>
  4053d8:	cbz	w0, 4055c4 <main@@Base+0x2a8>
  4053dc:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4053e0:	add	x1, x1, #0xef0
  4053e4:	mov	x0, x21
  4053e8:	bl	404e30 <strcmp@plt>
  4053ec:	cbnz	w0, 4053fc <main@@Base+0xe0>
  4053f0:	mov	x21, x20
  4053f4:	mov	w23, #0x11                  	// #17
  4053f8:	b	405548 <main@@Base+0x22c>
  4053fc:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405400:	add	x1, x1, #0xef8
  405404:	mov	x0, x21
  405408:	bl	406aa4 <matches@@Base>
  40540c:	and	w0, w0, #0xff
  405410:	cbz	w0, 405444 <main@@Base+0x128>
  405414:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405418:	add	x1, x1, #0xf28
  40541c:	ldr	x0, [x20, #8]
  405420:	bl	406aa4 <matches@@Base>
  405424:	and	w0, w0, #0xff
  405428:	cbnz	w0, 405464 <main@@Base+0x148>
  40542c:	sub	w19, w19, #0x1
  405430:	add	x21, x20, #0x8
  405434:	cmp	w19, #0x1
  405438:	b.le	405460 <main@@Base+0x144>
  40543c:	ldr	x27, [x20, #16]
  405440:	b	405548 <main@@Base+0x22c>
  405444:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405448:	add	x1, x1, #0x0
  40544c:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  405450:	add	x0, x0, #0xf08
  405454:	bl	405000 <printf@plt>
  405458:	mov	w0, #0x0                   	// #0
  40545c:	bl	404bb0 <exit@plt>
  405460:	bl	405200 <_start@@Base+0x150>
  405464:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405468:	add	x1, x1, #0xea0
  40546c:	ldr	x0, [x20, #8]
  405470:	bl	406aa4 <matches@@Base>
  405474:	and	w0, w0, #0xff
  405478:	cbnz	w0, 40548c <main@@Base+0x170>
  40547c:	mov	x21, x20
  405480:	mov	w28, #0x1                   	// #1
  405484:	mov	w26, #0x0                   	// #0
  405488:	b	405548 <main@@Base+0x22c>
  40548c:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405490:	add	x1, x1, #0xf30
  405494:	ldr	x0, [x20, #8]
  405498:	bl	406aa4 <matches@@Base>
  40549c:	and	w0, w0, #0xff
  4054a0:	cbnz	w0, 4054b8 <main@@Base+0x19c>
  4054a4:	mov	x21, x20
  4054a8:	mov	w0, #0x1                   	// #1
  4054ac:	str	w0, [sp, #104]
  4054b0:	mov	w26, #0x0                   	// #0
  4054b4:	b	405548 <main@@Base+0x22c>
  4054b8:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4054bc:	add	x1, x1, #0xf38
  4054c0:	ldr	x0, [x20, #8]
  4054c4:	bl	406aa4 <matches@@Base>
  4054c8:	and	w0, w0, #0xff
  4054cc:	cbz	w0, 4055d0 <main@@Base+0x2b4>
  4054d0:	ldr	x21, [x20, #8]
  4054d4:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4054d8:	add	x1, x1, #0xf40
  4054dc:	mov	x0, x21
  4054e0:	bl	404e30 <strcmp@plt>
  4054e4:	cbnz	w0, 4054f4 <main@@Base+0x1d8>
  4054e8:	mov	x21, x20
  4054ec:	mov	w26, #0xffffffff            	// #-1
  4054f0:	b	405548 <main@@Base+0x22c>
  4054f4:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4054f8:	add	x1, x1, #0xea8
  4054fc:	mov	x0, x21
  405500:	bl	406aa4 <matches@@Base>
  405504:	and	w0, w0, #0xff
  405508:	cbnz	w0, 405510 <main@@Base+0x1f4>
  40550c:	bl	405200 <_start@@Base+0x150>
  405510:	ldr	x2, [x20, #8]
  405514:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405518:	add	x1, x1, #0xf48
  40551c:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405520:	ldr	x0, [x0, #712]
  405524:	bl	405070 <fprintf@plt>
  405528:	mov	w0, #0xffffffff            	// #-1
  40552c:	bl	404bb0 <exit@plt>
  405530:	mov	w23, #0x2                   	// #2
  405534:	b	405548 <main@@Base+0x22c>
  405538:	mov	w23, #0xa                   	// #10
  40553c:	b	405548 <main@@Base+0x22c>
  405540:	mov	x21, x20
  405544:	mov	w23, #0x2                   	// #2
  405548:	sub	w19, w19, #0x1
  40554c:	add	x20, x21, #0x8
  405550:	cmp	w19, #0x1
  405554:	b.le	4055e4 <main@@Base+0x2c8>
  405558:	mov	x1, x22
  40555c:	ldr	x0, [x20, #8]
  405560:	bl	406aa4 <matches@@Base>
  405564:	and	w0, w0, #0xff
  405568:	cbnz	w0, 4053b8 <main@@Base+0x9c>
  40556c:	sub	w19, w19, #0x1
  405570:	add	x21, x20, #0x8
  405574:	cmp	w19, #0x1
  405578:	b.le	40537c <main@@Base+0x60>
  40557c:	ldr	x20, [x20, #16]
  405580:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405584:	add	x1, x1, #0xe90
  405588:	mov	x0, x20
  40558c:	bl	404e30 <strcmp@plt>
  405590:	cbz	w0, 405530 <main@@Base+0x214>
  405594:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405598:	add	x1, x1, #0xe98
  40559c:	mov	x0, x20
  4055a0:	bl	404e30 <strcmp@plt>
  4055a4:	cbz	w0, 405538 <main@@Base+0x21c>
  4055a8:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4055ac:	add	x1, x1, #0xea0
  4055b0:	mov	x0, x20
  4055b4:	bl	404e30 <strcmp@plt>
  4055b8:	cbnz	w0, 405380 <main@@Base+0x64>
  4055bc:	mov	w23, #0xa                   	// #10
  4055c0:	b	405548 <main@@Base+0x22c>
  4055c4:	mov	x21, x20
  4055c8:	mov	w23, #0xa                   	// #10
  4055cc:	b	405548 <main@@Base+0x22c>
  4055d0:	mov	x21, x20
  4055d4:	mov	w0, #0x1                   	// #1
  4055d8:	str	w0, [sp, #108]
  4055dc:	mov	w26, #0x0                   	// #0
  4055e0:	b	405548 <main@@Base+0x22c>
  4055e4:	cbz	x27, 4056d0 <main@@Base+0x3b4>
  4055e8:	orr	w26, w26, w28
  4055ec:	ldr	w0, [sp, #104]
  4055f0:	cbz	w0, 40561c <main@@Base+0x300>
  4055f4:	cmp	w23, #0x0
  4055f8:	cset	w0, eq  // eq = none
  4055fc:	tst	w23, #0xfffffffd
  405600:	b.ne	405608 <main@@Base+0x2ec>  // b.any
  405604:	orr	w26, w26, #0x10
  405608:	cmp	w0, #0x0
  40560c:	ccmp	w23, #0xa, #0x4, eq  // eq = none
  405610:	mov	w0, w26
  405614:	orr	w26, w26, #0x100
  405618:	csel	w26, w26, w0, eq  // eq = none
  40561c:	ldr	w0, [sp, #108]
  405620:	cbz	w0, 40564c <main@@Base+0x330>
  405624:	cmp	w23, #0x0
  405628:	cset	w0, eq  // eq = none
  40562c:	tst	w23, #0xfffffffd
  405630:	b.ne	405638 <main@@Base+0x31c>  // b.any
  405634:	orr	w26, w26, #0x40
  405638:	cmp	w0, #0x0
  40563c:	ccmp	w23, #0xa, #0x4, eq  // eq = none
  405640:	mov	w0, w26
  405644:	orr	w26, w26, #0x400
  405648:	csel	w26, w26, w0, eq  // eq = none
  40564c:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  405650:	add	x1, x1, #0xfb0
  405654:	mov	x0, x27
  405658:	bl	404f30 <fopen64@plt>
  40565c:	mov	x19, x0
  405660:	cbz	x0, 4056f4 <main@@Base+0x3d8>
  405664:	mov	w1, w26
  405668:	add	x0, sp, #0x78
  40566c:	bl	40b268 <rtnl_open@@Base>
  405670:	tbnz	w0, #31, 405708 <main@@Base+0x3ec>
  405674:	mov	w1, #0x0                   	// #0
  405678:	add	x0, sp, #0x78
  40567c:	bl	40b7cc <rtnl_linkdump_req@@Base>
  405680:	tbnz	w0, #31, 405710 <main@@Base+0x3f4>
  405684:	mov	x0, x19
  405688:	bl	40522c <_start@@Base+0x17c>
  40568c:	mov	w3, #0x0                   	// #0
  405690:	mov	x2, x19
  405694:	adrp	x1, 405000 <printf@plt>
  405698:	add	x1, x1, #0x2fc
  40569c:	add	x0, sp, #0x78
  4056a0:	bl	40bc14 <rtnl_dump_filter_nc@@Base>
  4056a4:	tbnz	w0, #31, 40572c <main@@Base+0x410>
  4056a8:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4056ac:	str	wzr, [x0, #688]
  4056b0:	mov	x2, x19
  4056b4:	adrp	x1, 405000 <printf@plt>
  4056b8:	add	x1, x1, #0x29c
  4056bc:	add	x0, sp, #0x78
  4056c0:	bl	40c0c4 <rtnl_listen@@Base>
  4056c4:	tbnz	w0, #31, 405724 <main@@Base+0x408>
  4056c8:	mov	w0, #0x0                   	// #0
  4056cc:	bl	404bb0 <exit@plt>
  4056d0:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4056d4:	ldr	x3, [x0, #712]
  4056d8:	mov	x2, #0x34                  	// #52
  4056dc:	mov	x1, #0x1                   	// #1
  4056e0:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  4056e4:	add	x0, x0, #0xf78
  4056e8:	bl	404ef0 <fwrite@plt>
  4056ec:	mov	w0, #0xffffffff            	// #-1
  4056f0:	bl	404bb0 <exit@plt>
  4056f4:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  4056f8:	add	x0, x0, #0xfb8
  4056fc:	bl	404bc0 <perror@plt>
  405700:	mov	w0, #0xffffffff            	// #-1
  405704:	bl	404bb0 <exit@plt>
  405708:	mov	w0, #0x1                   	// #1
  40570c:	bl	404bb0 <exit@plt>
  405710:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  405714:	add	x0, x0, #0xfc8
  405718:	bl	404bc0 <perror@plt>
  40571c:	mov	w0, #0x1                   	// #1
  405720:	bl	404bb0 <exit@plt>
  405724:	mov	w0, #0x2                   	// #2
  405728:	bl	404bb0 <exit@plt>
  40572c:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405730:	ldr	x3, [x0, #712]
  405734:	mov	x2, #0x10                  	// #16
  405738:	mov	x1, #0x1                   	// #1
  40573c:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  405740:	add	x0, x0, #0xfe8
  405744:	bl	404ef0 <fwrite@plt>
  405748:	mov	w0, #0x1                   	// #1
  40574c:	ldp	x19, x20, [sp, #16]
  405750:	ldp	x21, x22, [sp, #32]
  405754:	ldp	x23, x24, [sp, #48]
  405758:	ldp	x25, x26, [sp, #64]
  40575c:	ldp	x27, x28, [sp, #80]
  405760:	ldp	x29, x30, [sp], #176
  405764:	ret
  405768:	ldrh	w1, [x0, #6]
  40576c:	cmp	w1, #0x2
  405770:	b.eq	405780 <main@@Base+0x464>  // b.none
  405774:	cmp	w1, #0xa
  405778:	b.eq	4057d0 <main@@Base+0x4b4>  // b.none
  40577c:	ret
  405780:	ldr	w1, [x0, #8]
  405784:	cbnz	w1, 405798 <main@@Base+0x47c>
  405788:	ldrh	w1, [x0]
  40578c:	orr	w1, w1, #0x6
  405790:	strh	w1, [x0]
  405794:	b	40577c <main@@Base+0x460>
  405798:	rev	w1, w1
  40579c:	and	w1, w1, #0xf0000000
  4057a0:	mov	w2, #0xe0000000            	// #-536870912
  4057a4:	cmp	w1, w2
  4057a8:	b.eq	4057bc <main@@Base+0x4a0>  // b.none
  4057ac:	ldrh	w1, [x0]
  4057b0:	orr	w1, w1, #0x2
  4057b4:	strh	w1, [x0]
  4057b8:	b	40577c <main@@Base+0x460>
  4057bc:	ldrh	w1, [x0]
  4057c0:	mov	w2, #0xa                   	// #10
  4057c4:	orr	w1, w1, w2
  4057c8:	strh	w1, [x0]
  4057cc:	b	40577c <main@@Base+0x460>
  4057d0:	ldr	w1, [x0, #8]
  4057d4:	cbnz	w1, 405800 <main@@Base+0x4e4>
  4057d8:	ldr	w1, [x0, #12]
  4057dc:	cbnz	w1, 405800 <main@@Base+0x4e4>
  4057e0:	ldr	w1, [x0, #16]
  4057e4:	cbnz	w1, 405800 <main@@Base+0x4e4>
  4057e8:	ldr	w1, [x0, #20]
  4057ec:	cbnz	w1, 405800 <main@@Base+0x4e4>
  4057f0:	ldrh	w1, [x0]
  4057f4:	orr	w1, w1, #0x6
  4057f8:	strh	w1, [x0]
  4057fc:	b	40577c <main@@Base+0x460>
  405800:	ldrb	w1, [x0, #8]
  405804:	cmp	w1, #0xff
  405808:	b.eq	40581c <main@@Base+0x500>  // b.none
  40580c:	ldrh	w1, [x0]
  405810:	orr	w1, w1, #0x2
  405814:	strh	w1, [x0]
  405818:	b	40577c <main@@Base+0x460>
  40581c:	ldrh	w1, [x0]
  405820:	mov	w2, #0xa                   	// #10
  405824:	orr	w1, w1, w2
  405828:	strh	w1, [x0]
  40582c:	b	40577c <main@@Base+0x460>
  405830:	stp	x29, x30, [sp, #-32]!
  405834:	mov	x29, sp
  405838:	stp	x19, x20, [sp, #16]
  40583c:	mov	x20, x0
  405840:	ldrb	w19, [x0]
  405844:	cbz	w19, 405874 <main@@Base+0x558>
  405848:	cmp	w19, #0x2f
  40584c:	b.eq	40587c <main@@Base+0x560>  // b.none
  405850:	bl	404e40 <__ctype_b_loc@plt>
  405854:	and	x19, x19, #0xff
  405858:	ldr	x0, [x0]
  40585c:	ldrh	w0, [x0, x19, lsl #1]
  405860:	tbnz	w0, #13, 40588c <main@@Base+0x570>
  405864:	ldrb	w19, [x20, #1]!
  405868:	cbnz	w19, 405848 <main@@Base+0x52c>
  40586c:	mov	w0, #0x0                   	// #0
  405870:	b	405880 <main@@Base+0x564>
  405874:	mov	w0, #0xffffffff            	// #-1
  405878:	b	405880 <main@@Base+0x564>
  40587c:	mov	w0, #0xffffffff            	// #-1
  405880:	ldp	x19, x20, [sp, #16]
  405884:	ldp	x29, x30, [sp], #32
  405888:	ret
  40588c:	mov	w0, #0xffffffff            	// #-1
  405890:	b	405880 <main@@Base+0x564>

0000000000405894 <read_prop@@Base>:
  405894:	stp	x29, x30, [sp, #-272]!
  405898:	mov	x29, sp
  40589c:	stp	x19, x20, [sp, #16]
  4058a0:	str	x21, [sp, #32]
  4058a4:	mov	x20, x1
  4058a8:	mov	x21, x2
  4058ac:	mov	x4, x1
  4058b0:	mov	x3, x0
  4058b4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4058b8:	add	x2, x2, #0x8
  4058bc:	mov	x1, #0x80                  	// #128
  4058c0:	add	x0, sp, #0x90
  4058c4:	bl	404c80 <snprintf@plt>
  4058c8:	sub	w0, w0, #0x1
  4058cc:	cmp	w0, #0x7e
  4058d0:	b.hi	405980 <read_prop@@Base+0xec>  // b.pmore
  4058d4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4058d8:	add	x1, x1, #0x48
  4058dc:	add	x0, sp, #0x90
  4058e0:	bl	404f30 <fopen64@plt>
  4058e4:	mov	x19, x0
  4058e8:	cbz	x0, 4059a8 <read_prop@@Base+0x114>
  4058ec:	mov	x2, x0
  4058f0:	mov	w1, #0x50                  	// #80
  4058f4:	add	x0, sp, #0x40
  4058f8:	bl	405080 <fgets@plt>
  4058fc:	cbz	x0, 4059e0 <read_prop@@Base+0x14c>
  405900:	mov	w1, #0xa                   	// #10
  405904:	add	x0, sp, #0x40
  405908:	bl	404ed0 <strchr@plt>
  40590c:	cbz	x0, 405914 <read_prop@@Base+0x80>
  405910:	strb	wzr, [x0]
  405914:	mov	x0, x19
  405918:	bl	404cb0 <fclose@plt>
  40591c:	add	x19, sp, #0x40
  405920:	mov	w2, #0x0                   	// #0
  405924:	add	x1, sp, #0x38
  405928:	mov	x0, x19
  40592c:	bl	404e50 <strtol@plt>
  405930:	mov	x20, x0
  405934:	ldr	x0, [sp, #56]
  405938:	ldrb	w1, [x0]
  40593c:	cmp	w1, #0x0
  405940:	ccmp	x19, x0, #0x4, eq  // eq = none
  405944:	b.eq	405a0c <read_prop@@Base+0x178>  // b.none
  405948:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40594c:	add	x0, x20, x0
  405950:	cmn	x0, #0x3
  405954:	b.ls	405968 <read_prop@@Base+0xd4>  // b.plast
  405958:	bl	405020 <__errno_location@plt>
  40595c:	ldr	w0, [x0]
  405960:	cmp	w0, #0x22
  405964:	b.eq	405a50 <read_prop@@Base+0x1bc>  // b.none
  405968:	str	x20, [x21]
  40596c:	mov	w0, #0x0                   	// #0
  405970:	ldp	x19, x20, [sp, #16]
  405974:	ldr	x21, [sp, #32]
  405978:	ldp	x29, x30, [sp], #272
  40597c:	ret
  405980:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  405984:	ldr	x0, [x0, #3992]
  405988:	ldr	x3, [x0]
  40598c:	mov	x2, #0x26                  	// #38
  405990:	mov	x1, #0x1                   	// #1
  405994:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  405998:	add	x0, x0, #0x20
  40599c:	bl	404ef0 <fwrite@plt>
  4059a0:	mov	w0, #0xffffffff            	// #-1
  4059a4:	b	405970 <read_prop@@Base+0xdc>
  4059a8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4059ac:	ldr	x0, [x0, #3992]
  4059b0:	ldr	x19, [x0]
  4059b4:	bl	405020 <__errno_location@plt>
  4059b8:	ldr	w0, [x0]
  4059bc:	bl	404db0 <strerror@plt>
  4059c0:	mov	x3, x0
  4059c4:	add	x2, sp, #0x90
  4059c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4059cc:	add	x1, x1, #0x50
  4059d0:	mov	x0, x19
  4059d4:	bl	405070 <fprintf@plt>
  4059d8:	mov	w0, #0xffffffff            	// #-1
  4059dc:	b	405970 <read_prop@@Base+0xdc>
  4059e0:	add	x3, sp, #0x90
  4059e4:	mov	x2, x20
  4059e8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4059ec:	add	x1, x1, #0x60
  4059f0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4059f4:	ldr	x0, [x0, #3992]
  4059f8:	ldr	x0, [x0]
  4059fc:	bl	405070 <fprintf@plt>
  405a00:	mov	x0, x19
  405a04:	bl	404cb0 <fclose@plt>
  405a08:	b	405a2c <read_prop@@Base+0x198>
  405a0c:	add	x3, sp, #0x90
  405a10:	add	x2, sp, #0x40
  405a14:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405a18:	add	x1, x1, #0x90
  405a1c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  405a20:	ldr	x0, [x0, #3992]
  405a24:	ldr	x0, [x0]
  405a28:	bl	405070 <fprintf@plt>
  405a2c:	add	x2, sp, #0x90
  405a30:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405a34:	add	x1, x1, #0xc8
  405a38:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  405a3c:	ldr	x0, [x0, #3992]
  405a40:	ldr	x0, [x0]
  405a44:	bl	405070 <fprintf@plt>
  405a48:	mov	w0, #0xffffffff            	// #-1
  405a4c:	b	405970 <read_prop@@Base+0xdc>
  405a50:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  405a54:	ldr	x0, [x0, #3992]
  405a58:	ldr	x19, [x0]
  405a5c:	mov	w0, #0x22                  	// #34
  405a60:	bl	404db0 <strerror@plt>
  405a64:	mov	x3, x0
  405a68:	add	x2, sp, #0x90
  405a6c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405a70:	add	x1, x1, #0xb8
  405a74:	mov	x0, x19
  405a78:	bl	405070 <fprintf@plt>
  405a7c:	b	405a2c <read_prop@@Base+0x198>

0000000000405a80 <get_hex@@Base>:
  405a80:	and	w0, w0, #0xff
  405a84:	sub	w1, w0, #0x41
  405a88:	and	w1, w1, #0xff
  405a8c:	cmp	w1, #0x5
  405a90:	b.ls	405abc <get_hex@@Base+0x3c>  // b.plast
  405a94:	sub	w1, w0, #0x61
  405a98:	and	w1, w1, #0xff
  405a9c:	cmp	w1, #0x5
  405aa0:	b.ls	405ac4 <get_hex@@Base+0x44>  // b.plast
  405aa4:	sub	w1, w0, #0x30
  405aa8:	and	w1, w1, #0xff
  405aac:	sub	w0, w0, #0x30
  405ab0:	cmp	w1, #0xa
  405ab4:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
  405ab8:	ret
  405abc:	sub	w0, w0, #0x37
  405ac0:	b	405ab8 <get_hex@@Base+0x38>
  405ac4:	sub	w0, w0, #0x57
  405ac8:	b	405ab8 <get_hex@@Base+0x38>

0000000000405acc <get_integer@@Base>:
  405acc:	cbz	x1, 405b38 <get_integer@@Base+0x6c>
  405ad0:	stp	x29, x30, [sp, #-48]!
  405ad4:	mov	x29, sp
  405ad8:	stp	x19, x20, [sp, #16]
  405adc:	mov	x20, x0
  405ae0:	mov	x19, x1
  405ae4:	ldrb	w0, [x1]
  405ae8:	cbz	w0, 405b40 <get_integer@@Base+0x74>
  405aec:	add	x1, sp, #0x28
  405af0:	mov	x0, x19
  405af4:	bl	404e50 <strtol@plt>
  405af8:	ldr	x1, [sp, #40]
  405afc:	cmp	x1, #0x0
  405b00:	ccmp	x1, x19, #0x4, ne  // ne = any
  405b04:	b.eq	405b48 <get_integer@@Base+0x7c>  // b.none
  405b08:	ldrb	w1, [x1]
  405b0c:	cbnz	w1, 405b50 <get_integer@@Base+0x84>
  405b10:	mov	x1, #0xffffffff80000000    	// #-2147483648
  405b14:	add	x1, x0, x1
  405b18:	mov	x2, #0xfffffffeffffffff    	// #-4294967297
  405b1c:	cmp	x1, x2
  405b20:	b.ls	405b58 <get_integer@@Base+0x8c>  // b.plast
  405b24:	str	w0, [x20]
  405b28:	mov	w0, #0x0                   	// #0
  405b2c:	ldp	x19, x20, [sp, #16]
  405b30:	ldp	x29, x30, [sp], #48
  405b34:	ret
  405b38:	mov	w0, #0xffffffff            	// #-1
  405b3c:	ret
  405b40:	mov	w0, #0xffffffff            	// #-1
  405b44:	b	405b2c <get_integer@@Base+0x60>
  405b48:	mov	w0, #0xffffffff            	// #-1
  405b4c:	b	405b2c <get_integer@@Base+0x60>
  405b50:	mov	w0, #0xffffffff            	// #-1
  405b54:	b	405b2c <get_integer@@Base+0x60>
  405b58:	mov	w0, #0xffffffff            	// #-1
  405b5c:	b	405b2c <get_integer@@Base+0x60>

0000000000405b60 <mask2bits@@Base>:
  405b60:	rev	w1, w0
  405b64:	neg	w0, w1
  405b68:	bics	w0, w0, w1
  405b6c:	b.ne	405b8c <mask2bits@@Base+0x2c>  // b.any
  405b70:	cbz	w1, 405b84 <mask2bits@@Base+0x24>
  405b74:	add	w0, w0, #0x1
  405b78:	lsl	w1, w1, #1
  405b7c:	cbnz	w1, 405b74 <mask2bits@@Base+0x14>
  405b80:	ret
  405b84:	mov	w0, w1
  405b88:	b	405b80 <mask2bits@@Base+0x20>
  405b8c:	mov	w0, #0xffffffff            	// #-1
  405b90:	b	405b80 <mask2bits@@Base+0x20>

0000000000405b94 <get_unsigned@@Base>:
  405b94:	cbz	x1, 405bf8 <get_unsigned@@Base+0x64>
  405b98:	stp	x29, x30, [sp, #-48]!
  405b9c:	mov	x29, sp
  405ba0:	stp	x19, x20, [sp, #16]
  405ba4:	mov	x20, x0
  405ba8:	mov	x19, x1
  405bac:	ldrb	w0, [x1]
  405bb0:	cbz	w0, 405c00 <get_unsigned@@Base+0x6c>
  405bb4:	add	x1, sp, #0x28
  405bb8:	mov	x0, x19
  405bbc:	bl	404b90 <strtoul@plt>
  405bc0:	ldr	x1, [sp, #40]
  405bc4:	cmp	x1, #0x0
  405bc8:	ccmp	x1, x19, #0x4, ne  // ne = any
  405bcc:	b.eq	405c08 <get_unsigned@@Base+0x74>  // b.none
  405bd0:	ldrb	w1, [x1]
  405bd4:	cbnz	w1, 405c10 <get_unsigned@@Base+0x7c>
  405bd8:	mov	x1, #0xffffffff            	// #4294967295
  405bdc:	cmp	x0, x1
  405be0:	b.hi	405c18 <get_unsigned@@Base+0x84>  // b.pmore
  405be4:	str	w0, [x20]
  405be8:	mov	w0, #0x0                   	// #0
  405bec:	ldp	x19, x20, [sp, #16]
  405bf0:	ldp	x29, x30, [sp], #48
  405bf4:	ret
  405bf8:	mov	w0, #0xffffffff            	// #-1
  405bfc:	ret
  405c00:	mov	w0, #0xffffffff            	// #-1
  405c04:	b	405bec <get_unsigned@@Base+0x58>
  405c08:	mov	w0, #0xffffffff            	// #-1
  405c0c:	b	405bec <get_unsigned@@Base+0x58>
  405c10:	mov	w0, #0xffffffff            	// #-1
  405c14:	b	405bec <get_unsigned@@Base+0x58>
  405c18:	mov	w0, #0xffffffff            	// #-1
  405c1c:	b	405bec <get_unsigned@@Base+0x58>

0000000000405c20 <get_time_rtt@@Base>:
  405c20:	stp	x29, x30, [sp, #-80]!
  405c24:	mov	x29, sp
  405c28:	stp	x19, x20, [sp, #16]
  405c2c:	stp	x21, x22, [sp, #32]
  405c30:	str	d8, [sp, #48]
  405c34:	mov	x22, x0
  405c38:	mov	x20, x1
  405c3c:	mov	x21, x2
  405c40:	mov	w1, #0x2e                  	// #46
  405c44:	mov	x0, x20
  405c48:	bl	404ed0 <strchr@plt>
  405c4c:	cbz	x0, 405cc0 <get_time_rtt@@Base+0xa0>
  405c50:	add	x1, sp, #0x48
  405c54:	mov	x0, x20
  405c58:	bl	404be0 <strtod@plt>
  405c5c:	fmov	d8, d0
  405c60:	fcmpe	d0, #0.0
  405c64:	b.mi	405ddc <get_time_rtt@@Base+0x1bc>  // b.first
  405c68:	ldr	x0, [sp, #72]
  405c6c:	cmp	x0, #0x0
  405c70:	ccmp	x0, x20, #0x4, ne  // ne = any
  405c74:	b.eq	405de4 <get_time_rtt@@Base+0x1c4>  // b.none
  405c78:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  405c7c:	fmov	d0, x0
  405c80:	fcmp	d8, d0
  405c84:	b.ne	405cf0 <get_time_rtt@@Base+0xd0>  // b.any
  405c88:	bl	405020 <__errno_location@plt>
  405c8c:	ldr	w0, [x0]
  405c90:	cmp	w0, #0x22
  405c94:	b.eq	405dec <get_time_rtt@@Base+0x1cc>  // b.none
  405c98:	ldr	x19, [sp, #72]
  405c9c:	mov	w0, #0x1                   	// #1
  405ca0:	str	w0, [x21]
  405ca4:	ldrb	w0, [x19]
  405ca8:	cbnz	w0, 405d04 <get_time_rtt@@Base+0xe4>
  405cac:	mov	w0, #0xffffffff            	// #-1
  405cb0:	add	w0, w0, #0x1
  405cb4:	str	w0, [x22]
  405cb8:	mov	w0, #0x0                   	// #0
  405cbc:	b	405d6c <get_time_rtt@@Base+0x14c>
  405cc0:	mov	w2, #0x0                   	// #0
  405cc4:	add	x1, sp, #0x48
  405cc8:	mov	x0, x20
  405ccc:	bl	404b90 <strtoul@plt>
  405cd0:	mov	x19, x0
  405cd4:	ldr	x0, [sp, #72]
  405cd8:	cmp	x0, #0x0
  405cdc:	ccmp	x0, x20, #0x4, ne  // ne = any
  405ce0:	b.eq	405df4 <get_time_rtt@@Base+0x1d4>  // b.none
  405ce4:	cmn	x19, #0x1
  405ce8:	b.eq	405d80 <get_time_rtt@@Base+0x160>  // b.none
  405cec:	ucvtf	d8, x19
  405cf0:	ldr	x19, [sp, #72]
  405cf4:	mov	w0, #0x1                   	// #1
  405cf8:	str	w0, [x21]
  405cfc:	ldrb	w0, [x19]
  405d00:	cbz	w0, 405d54 <get_time_rtt@@Base+0x134>
  405d04:	str	wzr, [x21]
  405d08:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405d0c:	add	x1, x1, #0xa28
  405d10:	mov	x0, x19
  405d14:	bl	404d70 <strcasecmp@plt>
  405d18:	cbz	w0, 405d44 <get_time_rtt@@Base+0x124>
  405d1c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405d20:	add	x1, x1, #0xe0
  405d24:	mov	x0, x19
  405d28:	bl	404d70 <strcasecmp@plt>
  405d2c:	cbz	w0, 405d44 <get_time_rtt@@Base+0x124>
  405d30:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405d34:	add	x1, x1, #0xe8
  405d38:	mov	x0, x19
  405d3c:	bl	404d70 <strcasecmp@plt>
  405d40:	cbnz	w0, 405d98 <get_time_rtt@@Base+0x178>
  405d44:	mov	x0, #0x400000000000        	// #70368744177664
  405d48:	movk	x0, #0x408f, lsl #48
  405d4c:	fmov	d0, x0
  405d50:	fmul	d8, d8, d0
  405d54:	fcvtzu	w0, d8
  405d58:	ucvtf	d0, w0
  405d5c:	fcmpe	d0, d8
  405d60:	b.mi	405cb0 <get_time_rtt@@Base+0x90>  // b.first
  405d64:	str	w0, [x22]
  405d68:	mov	w0, #0x0                   	// #0
  405d6c:	ldp	x19, x20, [sp, #16]
  405d70:	ldp	x21, x22, [sp, #32]
  405d74:	ldr	d8, [sp, #48]
  405d78:	ldp	x29, x30, [sp], #80
  405d7c:	ret
  405d80:	bl	405020 <__errno_location@plt>
  405d84:	ldr	w0, [x0]
  405d88:	cmp	w0, #0x22
  405d8c:	b.ne	405cec <get_time_rtt@@Base+0xcc>  // b.any
  405d90:	mov	w0, #0xffffffff            	// #-1
  405d94:	b	405d6c <get_time_rtt@@Base+0x14c>
  405d98:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405d9c:	add	x1, x1, #0xf0
  405da0:	mov	x0, x19
  405da4:	bl	404d70 <strcasecmp@plt>
  405da8:	cbz	w0, 405d54 <get_time_rtt@@Base+0x134>
  405dac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405db0:	add	x1, x1, #0xf8
  405db4:	mov	x0, x19
  405db8:	bl	404d70 <strcasecmp@plt>
  405dbc:	cbz	w0, 405d54 <get_time_rtt@@Base+0x134>
  405dc0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  405dc4:	add	x1, x1, #0x100
  405dc8:	mov	x0, x19
  405dcc:	bl	404d70 <strcasecmp@plt>
  405dd0:	cbz	w0, 405d54 <get_time_rtt@@Base+0x134>
  405dd4:	mov	w0, #0xffffffff            	// #-1
  405dd8:	b	405d6c <get_time_rtt@@Base+0x14c>
  405ddc:	mov	w0, #0xffffffff            	// #-1
  405de0:	b	405d6c <get_time_rtt@@Base+0x14c>
  405de4:	mov	w0, #0xffffffff            	// #-1
  405de8:	b	405d6c <get_time_rtt@@Base+0x14c>
  405dec:	mov	w0, #0xffffffff            	// #-1
  405df0:	b	405d6c <get_time_rtt@@Base+0x14c>
  405df4:	mov	w0, #0xffffffff            	// #-1
  405df8:	b	405d6c <get_time_rtt@@Base+0x14c>

0000000000405dfc <get_u64@@Base>:
  405dfc:	cbz	x1, 405e80 <get_u64@@Base+0x84>
  405e00:	stp	x29, x30, [sp, #-64]!
  405e04:	mov	x29, sp
  405e08:	stp	x19, x20, [sp, #16]
  405e0c:	str	x21, [sp, #32]
  405e10:	mov	x21, x0
  405e14:	mov	x19, x1
  405e18:	ldrb	w0, [x1]
  405e1c:	cbz	w0, 405e88 <get_u64@@Base+0x8c>
  405e20:	add	x1, sp, #0x38
  405e24:	mov	x0, x19
  405e28:	bl	404ee0 <strtoull@plt>
  405e2c:	mov	x20, x0
  405e30:	ldr	x1, [sp, #56]
  405e34:	cmp	x1, #0x0
  405e38:	ccmp	x1, x19, #0x4, ne  // ne = any
  405e3c:	b.eq	405e90 <get_u64@@Base+0x94>  // b.none
  405e40:	ldrb	w0, [x1]
  405e44:	cbnz	w0, 405e98 <get_u64@@Base+0x9c>
  405e48:	cmn	x20, #0x1
  405e4c:	b.eq	405e68 <get_u64@@Base+0x6c>  // b.none
  405e50:	str	x20, [x21]
  405e54:	mov	w0, #0x0                   	// #0
  405e58:	ldp	x19, x20, [sp, #16]
  405e5c:	ldr	x21, [sp, #32]
  405e60:	ldp	x29, x30, [sp], #64
  405e64:	ret
  405e68:	bl	405020 <__errno_location@plt>
  405e6c:	ldr	w0, [x0]
  405e70:	cmp	w0, #0x22
  405e74:	b.ne	405e50 <get_u64@@Base+0x54>  // b.any
  405e78:	mov	w0, #0xffffffff            	// #-1
  405e7c:	b	405e58 <get_u64@@Base+0x5c>
  405e80:	mov	w0, #0xffffffff            	// #-1
  405e84:	ret
  405e88:	mov	w0, #0xffffffff            	// #-1
  405e8c:	b	405e58 <get_u64@@Base+0x5c>
  405e90:	mov	w0, #0xffffffff            	// #-1
  405e94:	b	405e58 <get_u64@@Base+0x5c>
  405e98:	mov	w0, #0xffffffff            	// #-1
  405e9c:	b	405e58 <get_u64@@Base+0x5c>

0000000000405ea0 <get_u32@@Base>:
  405ea0:	cbz	x1, 405f04 <get_u32@@Base+0x64>
  405ea4:	stp	x29, x30, [sp, #-48]!
  405ea8:	mov	x29, sp
  405eac:	stp	x19, x20, [sp, #16]
  405eb0:	mov	x20, x0
  405eb4:	mov	x19, x1
  405eb8:	ldrb	w0, [x1]
  405ebc:	cbz	w0, 405f0c <get_u32@@Base+0x6c>
  405ec0:	add	x1, sp, #0x28
  405ec4:	mov	x0, x19
  405ec8:	bl	404b90 <strtoul@plt>
  405ecc:	ldr	x1, [sp, #40]
  405ed0:	cmp	x1, #0x0
  405ed4:	ccmp	x1, x19, #0x4, ne  // ne = any
  405ed8:	b.eq	405f14 <get_u32@@Base+0x74>  // b.none
  405edc:	ldrb	w1, [x1]
  405ee0:	cbnz	w1, 405f1c <get_u32@@Base+0x7c>
  405ee4:	mov	x1, #0xffffffff            	// #4294967295
  405ee8:	cmp	x0, x1
  405eec:	b.hi	405f24 <get_u32@@Base+0x84>  // b.pmore
  405ef0:	str	w0, [x20]
  405ef4:	mov	w0, #0x0                   	// #0
  405ef8:	ldp	x19, x20, [sp, #16]
  405efc:	ldp	x29, x30, [sp], #48
  405f00:	ret
  405f04:	mov	w0, #0xffffffff            	// #-1
  405f08:	ret
  405f0c:	mov	w0, #0xffffffff            	// #-1
  405f10:	b	405ef8 <get_u32@@Base+0x58>
  405f14:	mov	w0, #0xffffffff            	// #-1
  405f18:	b	405ef8 <get_u32@@Base+0x58>
  405f1c:	mov	w0, #0xffffffff            	// #-1
  405f20:	b	405ef8 <get_u32@@Base+0x58>
  405f24:	mov	w0, #0xffffffff            	// #-1
  405f28:	b	405ef8 <get_u32@@Base+0x58>

0000000000405f2c <get_u16@@Base>:
  405f2c:	cbz	x1, 405f90 <get_u16@@Base+0x64>
  405f30:	stp	x29, x30, [sp, #-48]!
  405f34:	mov	x29, sp
  405f38:	stp	x19, x20, [sp, #16]
  405f3c:	mov	x20, x0
  405f40:	mov	x19, x1
  405f44:	ldrb	w0, [x1]
  405f48:	cbz	w0, 405f98 <get_u16@@Base+0x6c>
  405f4c:	add	x1, sp, #0x28
  405f50:	mov	x0, x19
  405f54:	bl	404b90 <strtoul@plt>
  405f58:	ldr	x1, [sp, #40]
  405f5c:	cmp	x1, #0x0
  405f60:	ccmp	x1, x19, #0x4, ne  // ne = any
  405f64:	b.eq	405fa0 <get_u16@@Base+0x74>  // b.none
  405f68:	ldrb	w1, [x1]
  405f6c:	cbnz	w1, 405fa8 <get_u16@@Base+0x7c>
  405f70:	mov	x1, #0xffff                	// #65535
  405f74:	cmp	x0, x1
  405f78:	b.hi	405fb0 <get_u16@@Base+0x84>  // b.pmore
  405f7c:	strh	w0, [x20]
  405f80:	mov	w0, #0x0                   	// #0
  405f84:	ldp	x19, x20, [sp, #16]
  405f88:	ldp	x29, x30, [sp], #48
  405f8c:	ret
  405f90:	mov	w0, #0xffffffff            	// #-1
  405f94:	ret
  405f98:	mov	w0, #0xffffffff            	// #-1
  405f9c:	b	405f84 <get_u16@@Base+0x58>
  405fa0:	mov	w0, #0xffffffff            	// #-1
  405fa4:	b	405f84 <get_u16@@Base+0x58>
  405fa8:	mov	w0, #0xffffffff            	// #-1
  405fac:	b	405f84 <get_u16@@Base+0x58>
  405fb0:	mov	w0, #0xffffffff            	// #-1
  405fb4:	b	405f84 <get_u16@@Base+0x58>

0000000000405fb8 <get_u8@@Base>:
  405fb8:	cbz	x1, 406018 <get_u8@@Base+0x60>
  405fbc:	stp	x29, x30, [sp, #-48]!
  405fc0:	mov	x29, sp
  405fc4:	stp	x19, x20, [sp, #16]
  405fc8:	mov	x20, x0
  405fcc:	mov	x19, x1
  405fd0:	ldrb	w0, [x1]
  405fd4:	cbz	w0, 406020 <get_u8@@Base+0x68>
  405fd8:	add	x1, sp, #0x28
  405fdc:	mov	x0, x19
  405fe0:	bl	404b90 <strtoul@plt>
  405fe4:	ldr	x1, [sp, #40]
  405fe8:	cmp	x1, #0x0
  405fec:	ccmp	x1, x19, #0x4, ne  // ne = any
  405ff0:	b.eq	406028 <get_u8@@Base+0x70>  // b.none
  405ff4:	ldrb	w1, [x1]
  405ff8:	cbnz	w1, 406030 <get_u8@@Base+0x78>
  405ffc:	cmp	x0, #0xff
  406000:	b.hi	406038 <get_u8@@Base+0x80>  // b.pmore
  406004:	strb	w0, [x20]
  406008:	mov	w0, #0x0                   	// #0
  40600c:	ldp	x19, x20, [sp, #16]
  406010:	ldp	x29, x30, [sp], #48
  406014:	ret
  406018:	mov	w0, #0xffffffff            	// #-1
  40601c:	ret
  406020:	mov	w0, #0xffffffff            	// #-1
  406024:	b	40600c <get_u8@@Base+0x54>
  406028:	mov	w0, #0xffffffff            	// #-1
  40602c:	b	40600c <get_u8@@Base+0x54>
  406030:	mov	w0, #0xffffffff            	// #-1
  406034:	b	40600c <get_u8@@Base+0x54>
  406038:	mov	w0, #0xffffffff            	// #-1
  40603c:	b	40600c <get_u8@@Base+0x54>

0000000000406040 <get_s64@@Base>:
  406040:	stp	x29, x30, [sp, #-64]!
  406044:	mov	x29, sp
  406048:	stp	x19, x20, [sp, #16]
  40604c:	stp	x21, x22, [sp, #32]
  406050:	mov	x22, x0
  406054:	mov	x19, x1
  406058:	mov	w21, w2
  40605c:	bl	405020 <__errno_location@plt>
  406060:	str	wzr, [x0]
  406064:	cbz	x19, 4060d4 <get_s64@@Base+0x94>
  406068:	mov	x20, x0
  40606c:	ldrb	w0, [x19]
  406070:	cbz	w0, 4060dc <get_s64@@Base+0x9c>
  406074:	mov	w2, w21
  406078:	add	x1, sp, #0x38
  40607c:	mov	x0, x19
  406080:	bl	404bd0 <strtoll@plt>
  406084:	mov	x1, x0
  406088:	ldr	x0, [sp, #56]
  40608c:	cmp	x0, #0x0
  406090:	ccmp	x0, x19, #0x4, ne  // ne = any
  406094:	b.eq	4060e4 <get_s64@@Base+0xa4>  // b.none
  406098:	ldrb	w0, [x0]
  40609c:	cbnz	w0, 4060ec <get_s64@@Base+0xac>
  4060a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4060a4:	add	x0, x1, x0
  4060a8:	cmn	x0, #0x3
  4060ac:	b.ls	4060bc <get_s64@@Base+0x7c>  // b.plast
  4060b0:	ldr	w0, [x20]
  4060b4:	cmp	w0, #0x22
  4060b8:	b.eq	4060f4 <get_s64@@Base+0xb4>  // b.none
  4060bc:	str	x1, [x22]
  4060c0:	mov	w0, #0x0                   	// #0
  4060c4:	ldp	x19, x20, [sp, #16]
  4060c8:	ldp	x21, x22, [sp, #32]
  4060cc:	ldp	x29, x30, [sp], #64
  4060d0:	ret
  4060d4:	mov	w0, #0xffffffff            	// #-1
  4060d8:	b	4060c4 <get_s64@@Base+0x84>
  4060dc:	mov	w0, #0xffffffff            	// #-1
  4060e0:	b	4060c4 <get_s64@@Base+0x84>
  4060e4:	mov	w0, #0xffffffff            	// #-1
  4060e8:	b	4060c4 <get_s64@@Base+0x84>
  4060ec:	mov	w0, #0xffffffff            	// #-1
  4060f0:	b	4060c4 <get_s64@@Base+0x84>
  4060f4:	mov	w0, #0xffffffff            	// #-1
  4060f8:	b	4060c4 <get_s64@@Base+0x84>

00000000004060fc <get_s32@@Base>:
  4060fc:	stp	x29, x30, [sp, #-64]!
  406100:	mov	x29, sp
  406104:	stp	x19, x20, [sp, #16]
  406108:	str	x21, [sp, #32]
  40610c:	mov	x21, x0
  406110:	mov	x19, x1
  406114:	mov	w20, w2
  406118:	bl	405020 <__errno_location@plt>
  40611c:	str	wzr, [x0]
  406120:	cbz	x19, 406180 <get_s32@@Base+0x84>
  406124:	ldrb	w0, [x19]
  406128:	cbz	w0, 406188 <get_s32@@Base+0x8c>
  40612c:	mov	w2, w20
  406130:	add	x1, sp, #0x38
  406134:	mov	x0, x19
  406138:	bl	404e50 <strtol@plt>
  40613c:	ldr	x1, [sp, #56]
  406140:	cmp	x1, #0x0
  406144:	ccmp	x1, x19, #0x4, ne  // ne = any
  406148:	b.eq	406190 <get_s32@@Base+0x94>  // b.none
  40614c:	ldrb	w1, [x1]
  406150:	cbnz	w1, 406198 <get_s32@@Base+0x9c>
  406154:	mov	x1, #0xffffffff80000000    	// #-2147483648
  406158:	add	x1, x0, x1
  40615c:	mov	x2, #0xfffffffeffffffff    	// #-4294967297
  406160:	cmp	x1, x2
  406164:	b.ls	4061a0 <get_s32@@Base+0xa4>  // b.plast
  406168:	str	w0, [x21]
  40616c:	mov	w0, #0x0                   	// #0
  406170:	ldp	x19, x20, [sp, #16]
  406174:	ldr	x21, [sp, #32]
  406178:	ldp	x29, x30, [sp], #64
  40617c:	ret
  406180:	mov	w0, #0xffffffff            	// #-1
  406184:	b	406170 <get_s32@@Base+0x74>
  406188:	mov	w0, #0xffffffff            	// #-1
  40618c:	b	406170 <get_s32@@Base+0x74>
  406190:	mov	w0, #0xffffffff            	// #-1
  406194:	b	406170 <get_s32@@Base+0x74>
  406198:	mov	w0, #0xffffffff            	// #-1
  40619c:	b	406170 <get_s32@@Base+0x74>
  4061a0:	mov	w0, #0xffffffff            	// #-1
  4061a4:	b	406170 <get_s32@@Base+0x74>

00000000004061a8 <get_be64@@Base>:
  4061a8:	stp	x29, x30, [sp, #-48]!
  4061ac:	mov	x29, sp
  4061b0:	str	x19, [sp, #16]
  4061b4:	mov	x19, x0
  4061b8:	add	x0, sp, #0x28
  4061bc:	bl	405dfc <get_u64@@Base>
  4061c0:	cbnz	w0, 4061dc <get_be64@@Base+0x34>
  4061c4:	ldr	x1, [sp, #40]
  4061c8:	lsr	x2, x1, #32
  4061cc:	rev	w1, w1
  4061d0:	rev	w2, w2
  4061d4:	orr	x1, x2, x1, lsl #32
  4061d8:	str	x1, [x19]
  4061dc:	ldr	x19, [sp, #16]
  4061e0:	ldp	x29, x30, [sp], #48
  4061e4:	ret

00000000004061e8 <get_be32@@Base>:
  4061e8:	stp	x29, x30, [sp, #-48]!
  4061ec:	mov	x29, sp
  4061f0:	str	x19, [sp, #16]
  4061f4:	mov	x19, x0
  4061f8:	add	x0, sp, #0x2c
  4061fc:	bl	405ea0 <get_u32@@Base>
  406200:	cbnz	w0, 406210 <get_be32@@Base+0x28>
  406204:	ldr	w1, [sp, #44]
  406208:	rev	w1, w1
  40620c:	str	w1, [x19]
  406210:	ldr	x19, [sp, #16]
  406214:	ldp	x29, x30, [sp], #48
  406218:	ret

000000000040621c <get_be16@@Base>:
  40621c:	stp	x29, x30, [sp, #-48]!
  406220:	mov	x29, sp
  406224:	str	x19, [sp, #16]
  406228:	mov	x19, x0
  40622c:	add	x0, sp, #0x2e
  406230:	bl	405f2c <get_u16@@Base>
  406234:	cbnz	w0, 406244 <get_be16@@Base+0x28>
  406238:	ldrh	w1, [sp, #46]
  40623c:	rev16	w1, w1
  406240:	strh	w1, [x19]
  406244:	ldr	x19, [sp, #16]
  406248:	ldp	x29, x30, [sp], #48
  40624c:	ret

0000000000406250 <get_addr64@@Base>:
  406250:	stp	x29, x30, [sp, #-96]!
  406254:	mov	x29, sp
  406258:	stp	x19, x20, [sp, #16]
  40625c:	stp	x21, x22, [sp, #32]
  406260:	stp	x23, x24, [sp, #48]
  406264:	str	x25, [sp, #64]
  406268:	mov	x22, x0
  40626c:	mov	x19, x1
  406270:	add	x21, sp, #0x58
  406274:	mov	w20, #0x0                   	// #0
  406278:	add	x25, sp, #0x50
  40627c:	mov	w24, #0x10                  	// #16
  406280:	mov	x23, #0xffff                	// #65535
  406284:	mov	w2, w24
  406288:	mov	x1, x25
  40628c:	mov	x0, x19
  406290:	bl	404b90 <strtoul@plt>
  406294:	cmp	x0, x23
  406298:	b.hi	4062e8 <get_addr64@@Base+0x98>  // b.pmore
  40629c:	ldr	x1, [sp, #80]
  4062a0:	cmp	x1, x19
  4062a4:	b.eq	4062e8 <get_addr64@@Base+0x98>  // b.none
  4062a8:	rev16	w0, w0
  4062ac:	strh	w0, [x21]
  4062b0:	ldrb	w0, [x1]
  4062b4:	cbz	w0, 4062d8 <get_addr64@@Base+0x88>
  4062b8:	cmp	w0, #0x3a
  4062bc:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  4062c0:	b.eq	4062e8 <get_addr64@@Base+0x98>  // b.none
  4062c4:	add	x19, x1, #0x1
  4062c8:	add	w20, w20, #0x1
  4062cc:	add	x21, x21, #0x2
  4062d0:	cmp	w20, #0x4
  4062d4:	b.ne	406284 <get_addr64@@Base+0x34>  // b.any
  4062d8:	ldr	x0, [sp, #88]
  4062dc:	str	x0, [x22]
  4062e0:	mov	w0, #0x1                   	// #1
  4062e4:	b	4062ec <get_addr64@@Base+0x9c>
  4062e8:	mov	w0, #0xffffffff            	// #-1
  4062ec:	ldp	x19, x20, [sp, #16]
  4062f0:	ldp	x21, x22, [sp, #32]
  4062f4:	ldp	x23, x24, [sp, #48]
  4062f8:	ldr	x25, [sp, #64]
  4062fc:	ldp	x29, x30, [sp], #96
  406300:	ret

0000000000406304 <af_bit_len@@Base>:
  406304:	mov	w1, w0
  406308:	cmp	w0, #0xa
  40630c:	b.eq	40634c <af_bit_len@@Base+0x48>  // b.none
  406310:	b.le	406330 <af_bit_len@@Base+0x2c>
  406314:	mov	w0, #0x10                  	// #16
  406318:	cmp	w1, #0xc
  40631c:	b.eq	406348 <af_bit_len@@Base+0x44>  // b.none
  406320:	cmp	w1, #0x1c
  406324:	mov	w0, #0x14                  	// #20
  406328:	csel	w0, w0, wzr, eq  // eq = none
  40632c:	b	406348 <af_bit_len@@Base+0x44>
  406330:	mov	w0, #0x20                  	// #32
  406334:	cmp	w1, #0x2
  406338:	b.eq	406348 <af_bit_len@@Base+0x44>  // b.none
  40633c:	cmp	w1, #0x4
  406340:	mov	w0, #0x50                  	// #80
  406344:	csel	w0, w0, wzr, eq  // eq = none
  406348:	ret
  40634c:	mov	w0, #0x80                  	// #128
  406350:	b	406348 <af_bit_len@@Base+0x44>

0000000000406354 <get_addr_1@@Base>:
  406354:	stp	x29, x30, [sp, #-80]!
  406358:	mov	x29, sp
  40635c:	stp	x19, x20, [sp, #16]
  406360:	stp	x21, x22, [sp, #32]
  406364:	mov	x19, x0
  406368:	mov	x21, x1
  40636c:	mov	w20, w2
  406370:	mov	x2, #0x108                 	// #264
  406374:	mov	w1, #0x0                   	// #0
  406378:	bl	404d30 <memset@plt>
  40637c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406380:	add	x1, x1, #0x108
  406384:	mov	x0, x21
  406388:	bl	404e30 <strcmp@plt>
  40638c:	cbnz	w0, 4063ec <get_addr_1@@Base+0x98>
  406390:	and	w0, w20, #0xffffffef
  406394:	cmp	w0, #0xc
  406398:	b.eq	4065c0 <get_addr_1@@Base+0x26c>  // b.none
  40639c:	strh	w20, [x19, #6]
  4063a0:	and	w0, w20, #0xffff
  4063a4:	bl	406304 <af_bit_len@@Base>
  4063a8:	add	w1, w0, #0x7
  4063ac:	cmp	w0, #0x0
  4063b0:	csel	w0, w1, w0, lt  // lt = tstop
  4063b4:	asr	w0, w0, #3
  4063b8:	strh	w0, [x19, #2]
  4063bc:	mov	w0, #0xfffffffe            	// #-2
  4063c0:	strh	w0, [x19, #4]
  4063c4:	ldrh	w0, [x19]
  4063c8:	orr	w0, w0, #0x1
  4063cc:	strh	w0, [x19]
  4063d0:	mov	x0, x19
  4063d4:	bl	405768 <main@@Base+0x44c>
  4063d8:	mov	w0, #0x0                   	// #0
  4063dc:	ldp	x19, x20, [sp, #16]
  4063e0:	ldp	x21, x22, [sp, #32]
  4063e4:	ldp	x29, x30, [sp], #80
  4063e8:	ret
  4063ec:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  4063f0:	add	x1, x1, #0xf40
  4063f4:	mov	x0, x21
  4063f8:	bl	404e30 <strcmp@plt>
  4063fc:	cbz	w0, 406414 <get_addr_1@@Base+0xc0>
  406400:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406404:	add	x1, x1, #0x110
  406408:	mov	x0, x21
  40640c:	bl	404e30 <strcmp@plt>
  406410:	cbnz	w0, 406430 <get_addr_1@@Base+0xdc>
  406414:	and	w0, w20, #0xffffffef
  406418:	cmp	w0, #0xc
  40641c:	b.eq	4065c0 <get_addr_1@@Base+0x26c>  // b.none
  406420:	strh	w20, [x19, #6]
  406424:	mov	w0, #0xfffffffe            	// #-2
  406428:	strh	w0, [x19, #4]
  40642c:	b	4063d0 <get_addr_1@@Base+0x7c>
  406430:	cmp	w20, #0x11
  406434:	b.eq	406488 <get_addr_1@@Base+0x134>  // b.none
  406438:	mov	w1, #0x3a                  	// #58
  40643c:	mov	x0, x21
  406440:	bl	404ed0 <strchr@plt>
  406444:	cbz	x0, 4064b8 <get_addr_1@@Base+0x164>
  406448:	mov	w0, #0xa                   	// #10
  40644c:	strh	w0, [x19, #6]
  406450:	cmp	w20, #0x0
  406454:	ccmp	w20, #0xa, #0x4, ne  // ne = any
  406458:	b.ne	4065c0 <get_addr_1@@Base+0x26c>  // b.any
  40645c:	add	x2, x19, #0x8
  406460:	mov	x1, x21
  406464:	mov	w0, #0xa                   	// #10
  406468:	bl	404ea0 <inet_pton@plt>
  40646c:	cmp	w0, #0x0
  406470:	b.le	4065c0 <get_addr_1@@Base+0x26c>
  406474:	mov	w0, #0x10                  	// #16
  406478:	strh	w0, [x19, #2]
  40647c:	mov	w0, #0xffffffff            	// #-1
  406480:	strh	w0, [x19, #4]
  406484:	b	4063d0 <get_addr_1@@Base+0x7c>
  406488:	mov	x2, x21
  40648c:	mov	w1, #0x100                 	// #256
  406490:	add	x0, x19, #0x8
  406494:	bl	408e70 <ll_addr_a2n@@Base>
  406498:	tbnz	w0, #31, 4065c0 <get_addr_1@@Base+0x26c>
  40649c:	mov	w1, #0x11                  	// #17
  4064a0:	strh	w1, [x19, #6]
  4064a4:	and	w0, w0, #0xffff
  4064a8:	strh	w0, [x19, #2]
  4064ac:	ubfiz	w0, w0, #3, #13
  4064b0:	strh	w0, [x19, #4]
  4064b4:	b	4063d0 <get_addr_1@@Base+0x7c>
  4064b8:	cmp	w20, #0x1c
  4064bc:	b.eq	406544 <get_addr_1@@Base+0x1f0>  // b.none
  4064c0:	mov	w0, #0x2                   	// #2
  4064c4:	strh	w0, [x19, #6]
  4064c8:	tst	w20, #0xfffffffd
  4064cc:	b.ne	4065c0 <get_addr_1@@Base+0x26c>  // b.any
  4064d0:	str	x23, [sp, #48]
  4064d4:	mov	x20, #0x0                   	// #0
  4064d8:	add	x22, sp, #0x48
  4064dc:	add	x23, x19, #0x8
  4064e0:	mov	w2, #0x0                   	// #0
  4064e4:	mov	x1, x22
  4064e8:	mov	x0, x21
  4064ec:	bl	404b90 <strtoul@plt>
  4064f0:	cmp	x0, #0xff
  4064f4:	b.hi	4065ac <get_addr_1@@Base+0x258>  // b.pmore
  4064f8:	ldr	x1, [sp, #72]
  4064fc:	cmp	x1, x21
  406500:	b.eq	4065b4 <get_addr_1@@Base+0x260>  // b.none
  406504:	strb	w0, [x23, x20]
  406508:	ldrb	w0, [x1]
  40650c:	cbz	w0, 40652c <get_addr_1@@Base+0x1d8>
  406510:	cmp	w0, #0x2e
  406514:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  406518:	b.eq	4065bc <get_addr_1@@Base+0x268>  // b.none
  40651c:	add	x21, x1, #0x1
  406520:	add	x20, x20, #0x1
  406524:	cmp	x20, #0x4
  406528:	b.ne	4064e0 <get_addr_1@@Base+0x18c>  // b.any
  40652c:	mov	w0, #0x4                   	// #4
  406530:	strh	w0, [x19, #2]
  406534:	mov	w0, #0xffffffff            	// #-1
  406538:	strh	w0, [x19, #4]
  40653c:	ldr	x23, [sp, #48]
  406540:	b	4063d0 <get_addr_1@@Base+0x7c>
  406544:	mov	w0, #0x1c                  	// #28
  406548:	strh	w0, [x19, #6]
  40654c:	mov	x3, #0x100                 	// #256
  406550:	add	x2, x19, #0x8
  406554:	mov	x1, x21
  406558:	mov	w0, #0x1c                  	// #28
  40655c:	bl	409ee8 <mpls_pton@@Base>
  406560:	cmp	w0, #0x0
  406564:	b.le	4065c0 <get_addr_1@@Base+0x26c>
  406568:	mov	w0, #0x4                   	// #4
  40656c:	strh	w0, [x19, #2]
  406570:	mov	w0, #0x14                  	// #20
  406574:	strh	w0, [x19, #4]
  406578:	mov	x0, #0x0                   	// #0
  40657c:	add	x3, x19, #0x8
  406580:	ldr	w1, [x3, x0, lsl #2]
  406584:	rev	w1, w1
  406588:	tbnz	w1, #8, 40659c <get_addr_1@@Base+0x248>
  40658c:	add	x0, x0, #0x1
  406590:	cmp	x0, #0x40
  406594:	b.ne	406580 <get_addr_1@@Base+0x22c>  // b.any
  406598:	b	4063d0 <get_addr_1@@Base+0x7c>
  40659c:	add	w0, w0, #0x1
  4065a0:	ubfiz	w0, w0, #2, #14
  4065a4:	strh	w0, [x19, #2]
  4065a8:	b	4063d0 <get_addr_1@@Base+0x7c>
  4065ac:	ldr	x23, [sp, #48]
  4065b0:	b	4065c0 <get_addr_1@@Base+0x26c>
  4065b4:	ldr	x23, [sp, #48]
  4065b8:	b	4065c0 <get_addr_1@@Base+0x26c>
  4065bc:	ldr	x23, [sp, #48]
  4065c0:	mov	w0, #0xffffffff            	// #-1
  4065c4:	b	4063dc <get_addr_1@@Base+0x88>
  4065c8:	stp	x29, x30, [sp, #-320]!
  4065cc:	mov	x29, sp
  4065d0:	stp	x19, x20, [sp, #16]
  4065d4:	str	x21, [sp, #32]
  4065d8:	mov	x21, x0
  4065dc:	mov	x20, x1
  4065e0:	bl	405b94 <get_unsigned@@Base>
  4065e4:	mov	w19, w0
  4065e8:	cbnz	w0, 406600 <get_addr_1@@Base+0x2ac>
  4065ec:	mov	w0, w19
  4065f0:	ldp	x19, x20, [sp, #16]
  4065f4:	ldr	x21, [sp, #32]
  4065f8:	ldp	x29, x30, [sp], #320
  4065fc:	ret
  406600:	mov	w2, #0x2                   	// #2
  406604:	mov	x1, x20
  406608:	add	x0, sp, #0x38
  40660c:	bl	406354 <get_addr_1@@Base>
  406610:	mov	w19, w0
  406614:	cbnz	w0, 406638 <get_addr_1@@Base+0x2e4>
  406618:	ldrh	w0, [sp, #62]
  40661c:	cmp	w0, #0x2
  406620:	b.ne	406640 <get_addr_1@@Base+0x2ec>  // b.any
  406624:	ldr	w0, [sp, #64]
  406628:	bl	405b60 <mask2bits@@Base>
  40662c:	tbnz	w0, #31, 406648 <get_addr_1@@Base+0x2f4>
  406630:	str	w0, [x21]
  406634:	b	4065ec <get_addr_1@@Base+0x298>
  406638:	mov	w19, #0xffffffff            	// #-1
  40663c:	b	4065ec <get_addr_1@@Base+0x298>
  406640:	mov	w19, #0xffffffff            	// #-1
  406644:	b	4065ec <get_addr_1@@Base+0x298>
  406648:	mov	w19, #0xffffffff            	// #-1
  40664c:	b	4065ec <get_addr_1@@Base+0x298>

0000000000406650 <get_prefix_1@@Base>:
  406650:	stp	x29, x30, [sp, #-64]!
  406654:	mov	x29, sp
  406658:	stp	x19, x20, [sp, #16]
  40665c:	stp	x21, x22, [sp, #32]
  406660:	mov	x20, x0
  406664:	mov	x19, x1
  406668:	mov	w22, w2
  40666c:	mov	w1, #0x2f                  	// #47
  406670:	mov	x0, x19
  406674:	bl	404ed0 <strchr@plt>
  406678:	cbz	x0, 406710 <get_prefix_1@@Base+0xc0>
  40667c:	mov	x21, x0
  406680:	strb	wzr, [x0]
  406684:	mov	w2, w22
  406688:	mov	x1, x19
  40668c:	mov	x0, x20
  406690:	bl	406354 <get_addr_1@@Base>
  406694:	mov	w19, w0
  406698:	mov	w0, #0x2f                  	// #47
  40669c:	strb	w0, [x21]
  4066a0:	cbnz	w19, 4066f4 <get_prefix_1@@Base+0xa4>
  4066a4:	ldrh	w0, [x20, #6]
  4066a8:	bl	406304 <af_bit_len@@Base>
  4066ac:	mov	w19, w0
  4066b0:	ldrsh	w0, [x20, #4]
  4066b4:	cmn	w0, #0x2
  4066b8:	b.eq	406708 <get_prefix_1@@Base+0xb8>  // b.none
  4066bc:	mov	w2, #0x0                   	// #0
  4066c0:	add	x1, x21, #0x1
  4066c4:	add	x0, sp, #0x3c
  4066c8:	bl	4065c8 <get_addr_1@@Base+0x274>
  4066cc:	cbnz	w0, 406708 <get_prefix_1@@Base+0xb8>
  4066d0:	ldr	w1, [sp, #60]
  4066d4:	cmp	w1, w19
  4066d8:	b.hi	406708 <get_prefix_1@@Base+0xb8>  // b.pmore
  4066dc:	mov	w19, #0x1                   	// #1
  4066e0:	ldrh	w0, [x20]
  4066e4:	orr	w19, w19, w0
  4066e8:	strh	w19, [x20]
  4066ec:	strh	w1, [x20, #4]
  4066f0:	mov	w19, #0x0                   	// #0
  4066f4:	mov	w0, w19
  4066f8:	ldp	x19, x20, [sp, #16]
  4066fc:	ldp	x21, x22, [sp, #32]
  406700:	ldp	x29, x30, [sp], #64
  406704:	ret
  406708:	mov	w19, #0xffffffff            	// #-1
  40670c:	b	4066f4 <get_prefix_1@@Base+0xa4>
  406710:	mov	w2, w22
  406714:	mov	x1, x19
  406718:	mov	x0, x20
  40671c:	bl	406354 <get_addr_1@@Base>
  406720:	mov	w19, w0
  406724:	cbnz	w0, 4066f4 <get_prefix_1@@Base+0xa4>
  406728:	ldrh	w0, [x20, #6]
  40672c:	bl	406304 <af_bit_len@@Base>
  406730:	ldrsh	w1, [x20, #4]
  406734:	cmn	w1, #0x2
  406738:	csel	w1, w0, w19, ne  // ne = any
  40673c:	b	4066e0 <get_prefix_1@@Base+0x90>

0000000000406740 <get_addr_rta@@Base>:
  406740:	ldrh	w4, [x1]
  406744:	cmp	w4, #0xe
  406748:	b.eq	406808 <get_addr_rta@@Base+0xc8>  // b.none
  40674c:	sub	w3, w4, #0x4
  406750:	cmp	w3, #0xa
  406754:	b.hi	4067bc <get_addr_rta@@Base+0x7c>  // b.pmore
  406758:	cmp	w3, #0x2
  40675c:	b.eq	4067ec <get_addr_rta@@Base+0xac>  // b.none
  406760:	cmp	w3, #0x4
  406764:	b.ne	4067b4 <get_addr_rta@@Base+0x74>  // b.any
  406768:	mov	w3, #0x2                   	// #2
  40676c:	strh	w3, [x0, #6]
  406770:	mov	w3, #0x4                   	// #4
  406774:	strh	w3, [x0, #2]
  406778:	ldr	w1, [x1, #4]
  40677c:	str	w1, [x0, #8]
  406780:	cbz	w2, 406790 <get_addr_rta@@Base+0x50>
  406784:	ldrh	w1, [x0, #6]
  406788:	cmp	w1, w2
  40678c:	b.ne	40682c <get_addr_rta@@Base+0xec>  // b.any
  406790:	stp	x29, x30, [sp, #-16]!
  406794:	mov	x29, sp
  406798:	mov	w1, #0xffffffff            	// #-1
  40679c:	strh	w1, [x0, #4]
  4067a0:	strh	wzr, [x0]
  4067a4:	bl	405768 <main@@Base+0x44c>
  4067a8:	mov	w0, #0x0                   	// #0
  4067ac:	ldp	x29, x30, [sp], #16
  4067b0:	ret
  4067b4:	mov	w0, #0xffffffff            	// #-1
  4067b8:	ret
  4067bc:	cmp	w3, #0x10
  4067c0:	b.ne	4067e4 <get_addr_rta@@Base+0xa4>  // b.any
  4067c4:	mov	w3, #0xa                   	// #10
  4067c8:	strh	w3, [x0, #6]
  4067cc:	mov	w3, #0x10                  	// #16
  4067d0:	strh	w3, [x0, #2]
  4067d4:	add	x1, x1, #0x4
  4067d8:	ldp	x4, x5, [x1]
  4067dc:	stp	x4, x5, [x0, #8]
  4067e0:	b	406780 <get_addr_rta@@Base+0x40>
  4067e4:	mov	w0, #0xffffffff            	// #-1
  4067e8:	ret
  4067ec:	mov	w3, #0xc                   	// #12
  4067f0:	strh	w3, [x0, #6]
  4067f4:	mov	w3, #0x2                   	// #2
  4067f8:	strh	w3, [x0, #2]
  4067fc:	ldrh	w1, [x1, #4]
  406800:	strh	w1, [x0, #8]
  406804:	b	406780 <get_addr_rta@@Base+0x40>
  406808:	mov	w3, #0x4                   	// #4
  40680c:	strh	w3, [x0, #6]
  406810:	mov	w3, #0xa                   	// #10
  406814:	strh	w3, [x0, #2]
  406818:	ldur	x3, [x1, #4]
  40681c:	str	x3, [x0, #8]
  406820:	ldrh	w1, [x1, #12]
  406824:	strh	w1, [x0, #16]
  406828:	b	406780 <get_addr_rta@@Base+0x40>
  40682c:	mov	w0, #0xfffffffe            	// #-2
  406830:	ret

0000000000406834 <get_addr32@@Base>:
  406834:	stp	x29, x30, [sp, #-304]!
  406838:	mov	x29, sp
  40683c:	str	x19, [sp, #16]
  406840:	mov	x19, x0
  406844:	mov	w2, #0x2                   	// #2
  406848:	mov	x1, x0
  40684c:	add	x0, sp, #0x28
  406850:	bl	406354 <get_addr_1@@Base>
  406854:	cbnz	w0, 406868 <get_addr32@@Base+0x34>
  406858:	ldr	w0, [sp, #48]
  40685c:	ldr	x19, [sp, #16]
  406860:	ldp	x29, x30, [sp], #304
  406864:	ret
  406868:	mov	x2, x19
  40686c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406870:	add	x1, x1, #0x118
  406874:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406878:	ldr	x0, [x0, #3992]
  40687c:	ldr	x0, [x0]
  406880:	bl	405070 <fprintf@plt>
  406884:	mov	w0, #0x1                   	// #1
  406888:	bl	404bb0 <exit@plt>

000000000040688c <incomplete_command@@Base>:
  40688c:	stp	x29, x30, [sp, #-16]!
  406890:	mov	x29, sp
  406894:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406898:	ldr	x0, [x0, #3992]
  40689c:	ldr	x3, [x0]
  4068a0:	mov	x2, #0x30                  	// #48
  4068a4:	mov	x1, #0x1                   	// #1
  4068a8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  4068ac:	add	x0, x0, #0x150
  4068b0:	bl	404ef0 <fwrite@plt>
  4068b4:	mov	w0, #0xffffffff            	// #-1
  4068b8:	bl	404bb0 <exit@plt>

00000000004068bc <missarg@@Base>:
  4068bc:	stp	x29, x30, [sp, #-16]!
  4068c0:	mov	x29, sp
  4068c4:	mov	x2, x0
  4068c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4068cc:	add	x1, x1, #0x188
  4068d0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4068d4:	ldr	x0, [x0, #3992]
  4068d8:	ldr	x0, [x0]
  4068dc:	bl	405070 <fprintf@plt>
  4068e0:	mov	w0, #0xffffffff            	// #-1
  4068e4:	bl	404bb0 <exit@plt>

00000000004068e8 <invarg@@Base>:
  4068e8:	stp	x29, x30, [sp, #-16]!
  4068ec:	mov	x29, sp
  4068f0:	mov	x3, x0
  4068f4:	mov	x2, x1
  4068f8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4068fc:	add	x1, x1, #0x1b0
  406900:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406904:	ldr	x0, [x0, #3992]
  406908:	ldr	x0, [x0]
  40690c:	bl	405070 <fprintf@plt>
  406910:	mov	w0, #0xffffffff            	// #-1
  406914:	bl	404bb0 <exit@plt>

0000000000406918 <duparg@@Base>:
  406918:	stp	x29, x30, [sp, #-16]!
  40691c:	mov	x29, sp
  406920:	mov	x3, x1
  406924:	mov	x2, x0
  406928:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40692c:	add	x1, x1, #0x1d8
  406930:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406934:	ldr	x0, [x0, #3992]
  406938:	ldr	x0, [x0]
  40693c:	bl	405070 <fprintf@plt>
  406940:	mov	w0, #0xffffffff            	// #-1
  406944:	bl	404bb0 <exit@plt>

0000000000406948 <duparg2@@Base>:
  406948:	stp	x29, x30, [sp, #-16]!
  40694c:	mov	x29, sp
  406950:	mov	x3, x1
  406954:	mov	x2, x0
  406958:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40695c:	add	x1, x1, #0x210
  406960:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406964:	ldr	x0, [x0, #3992]
  406968:	ldr	x0, [x0]
  40696c:	bl	405070 <fprintf@plt>
  406970:	mov	w0, #0xffffffff            	// #-1
  406974:	bl	404bb0 <exit@plt>

0000000000406978 <nodev@@Base>:
  406978:	stp	x29, x30, [sp, #-16]!
  40697c:	mov	x29, sp
  406980:	mov	x2, x0
  406984:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406988:	add	x1, x1, #0x248
  40698c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406990:	ldr	x0, [x0, #3992]
  406994:	ldr	x0, [x0]
  406998:	bl	405070 <fprintf@plt>
  40699c:	mov	w0, #0xffffffff            	// #-1
  4069a0:	ldp	x29, x30, [sp], #16
  4069a4:	ret

00000000004069a8 <check_ifname@@Base>:
  4069a8:	stp	x29, x30, [sp, #-32]!
  4069ac:	mov	x29, sp
  4069b0:	str	x19, [sp, #16]
  4069b4:	mov	x19, x0
  4069b8:	bl	404ba0 <strlen@plt>
  4069bc:	cmp	x0, #0xf
  4069c0:	b.hi	4069d8 <check_ifname@@Base+0x30>  // b.pmore
  4069c4:	mov	x0, x19
  4069c8:	bl	405830 <main@@Base+0x514>
  4069cc:	ldr	x19, [sp, #16]
  4069d0:	ldp	x29, x30, [sp], #32
  4069d4:	ret
  4069d8:	mov	w0, #0xffffffff            	// #-1
  4069dc:	b	4069cc <check_ifname@@Base+0x24>

00000000004069e0 <check_altifname@@Base>:
  4069e0:	stp	x29, x30, [sp, #-16]!
  4069e4:	mov	x29, sp
  4069e8:	bl	405830 <main@@Base+0x514>
  4069ec:	ldp	x29, x30, [sp], #16
  4069f0:	ret

00000000004069f4 <get_ifname@@Base>:
  4069f4:	stp	x29, x30, [sp, #-48]!
  4069f8:	mov	x29, sp
  4069fc:	stp	x19, x20, [sp, #16]
  406a00:	str	x21, [sp, #32]
  406a04:	mov	x21, x0
  406a08:	mov	x20, x1
  406a0c:	mov	x0, x1
  406a10:	bl	4069a8 <check_ifname@@Base>
  406a14:	mov	w19, w0
  406a18:	cbz	w0, 406a30 <get_ifname@@Base+0x3c>
  406a1c:	mov	w0, w19
  406a20:	ldp	x19, x20, [sp, #16]
  406a24:	ldr	x21, [sp, #32]
  406a28:	ldp	x29, x30, [sp], #48
  406a2c:	ret
  406a30:	mov	x2, #0x10                  	// #16
  406a34:	mov	x1, x20
  406a38:	mov	x0, x21
  406a3c:	bl	404fd0 <strncpy@plt>
  406a40:	b	406a1c <get_ifname@@Base+0x28>

0000000000406a44 <get_ifname_rta@@Base>:
  406a44:	stp	x29, x30, [sp, #-32]!
  406a48:	mov	x29, sp
  406a4c:	str	x19, [sp, #16]
  406a50:	cbz	x1, 406a74 <get_ifname_rta@@Base+0x30>
  406a54:	add	x19, x1, #0x4
  406a58:	mov	x0, x19
  406a5c:	bl	4069a8 <check_ifname@@Base>
  406a60:	cmp	w0, #0x0
  406a64:	csel	x0, x19, xzr, eq  // eq = none
  406a68:	ldr	x19, [sp, #16]
  406a6c:	ldp	x29, x30, [sp], #32
  406a70:	ret
  406a74:	mov	w19, w0
  406a78:	mov	w2, w0
  406a7c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406a80:	add	x1, x1, #0x268
  406a84:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406a88:	ldr	x0, [x0, #3992]
  406a8c:	ldr	x0, [x0]
  406a90:	bl	405070 <fprintf@plt>
  406a94:	mov	w0, w19
  406a98:	bl	408a68 <ll_idx_n2a@@Base>
  406a9c:	mov	x19, x0
  406aa0:	b	406a58 <get_ifname_rta@@Base+0x14>

0000000000406aa4 <matches@@Base>:
  406aa4:	ldrb	w2, [x0]
  406aa8:	cbz	w2, 406adc <matches@@Base+0x38>
  406aac:	ldrb	w2, [x1]
  406ab0:	cbz	w2, 406acc <matches@@Base+0x28>
  406ab4:	ldrb	w3, [x0]
  406ab8:	cmp	w3, w2
  406abc:	b.ne	406acc <matches@@Base+0x28>  // b.any
  406ac0:	add	x0, x0, #0x1
  406ac4:	ldrb	w2, [x1, #1]!
  406ac8:	cbnz	w2, 406ab4 <matches@@Base+0x10>
  406acc:	ldrb	w0, [x0]
  406ad0:	cmp	w0, #0x0
  406ad4:	cset	w0, ne  // ne = any
  406ad8:	ret
  406adc:	mov	w0, #0x1                   	// #1
  406ae0:	b	406ad8 <matches@@Base+0x34>

0000000000406ae4 <inet_addr_match@@Base>:
  406ae4:	stp	x29, x30, [sp, #-48]!
  406ae8:	mov	x29, sp
  406aec:	stp	x19, x20, [sp, #16]
  406af0:	stp	x21, x22, [sp, #32]
  406af4:	add	x21, x0, #0x8
  406af8:	add	x22, x1, #0x8
  406afc:	asr	w20, w2, #5
  406b00:	and	w19, w2, #0x1f
  406b04:	cmp	wzr, w2, asr #5
  406b08:	b.eq	406b24 <inet_addr_match@@Base+0x40>  // b.none
  406b0c:	lsl	w2, w20, #2
  406b10:	sxtw	x2, w2
  406b14:	mov	x1, x22
  406b18:	mov	x0, x21
  406b1c:	bl	404e20 <memcmp@plt>
  406b20:	cbnz	w0, 406b64 <inet_addr_match@@Base+0x80>
  406b24:	cbz	w19, 406b50 <inet_addr_match@@Base+0x6c>
  406b28:	sxtw	x20, w20
  406b2c:	neg	w19, w19
  406b30:	mov	w2, #0xffffffff            	// #-1
  406b34:	lsl	w19, w2, w19
  406b38:	rev	w19, w19
  406b3c:	ldr	w0, [x21, x20, lsl #2]
  406b40:	ldr	w1, [x22, x20, lsl #2]
  406b44:	eor	w0, w0, w1
  406b48:	tst	w0, w19
  406b4c:	cset	w19, ne  // ne = any
  406b50:	mov	w0, w19
  406b54:	ldp	x19, x20, [sp, #16]
  406b58:	ldp	x21, x22, [sp, #32]
  406b5c:	ldp	x29, x30, [sp], #48
  406b60:	ret
  406b64:	mov	w19, #0xffffffff            	// #-1
  406b68:	b	406b50 <inet_addr_match@@Base+0x6c>

0000000000406b6c <inet_addr_match_rta@@Base>:
  406b6c:	cbz	x1, 406bc0 <inet_addr_match_rta@@Base+0x54>
  406b70:	stp	x29, x30, [sp, #-304]!
  406b74:	mov	x29, sp
  406b78:	str	x19, [sp, #16]
  406b7c:	mov	x19, x0
  406b80:	ldrh	w2, [x0, #6]
  406b84:	mov	w0, #0x0                   	// #0
  406b88:	cbz	w2, 406bb4 <inet_addr_match_rta@@Base+0x48>
  406b8c:	ldrsh	w3, [x19, #4]
  406b90:	cmp	w3, #0x0
  406b94:	b.le	406bb4 <inet_addr_match_rta@@Base+0x48>
  406b98:	add	x0, sp, #0x28
  406b9c:	bl	406740 <get_addr_rta@@Base>
  406ba0:	cbnz	w0, 406bc8 <inet_addr_match_rta@@Base+0x5c>
  406ba4:	ldrsh	w2, [x19, #4]
  406ba8:	mov	x1, x19
  406bac:	add	x0, sp, #0x28
  406bb0:	bl	406ae4 <inet_addr_match@@Base>
  406bb4:	ldr	x19, [sp, #16]
  406bb8:	ldp	x29, x30, [sp], #304
  406bbc:	ret
  406bc0:	mov	w0, #0x0                   	// #0
  406bc4:	ret
  406bc8:	mov	w0, #0xffffffff            	// #-1
  406bcc:	b	406bb4 <inet_addr_match_rta@@Base+0x48>

0000000000406bd0 <__get_hz@@Base>:
  406bd0:	sub	sp, sp, #0x430
  406bd4:	stp	x29, x30, [sp]
  406bd8:	mov	x29, sp
  406bdc:	stp	x19, x20, [sp, #16]
  406be0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406be4:	add	x0, x0, #0x298
  406be8:	bl	405030 <getenv@plt>
  406bec:	cbz	x0, 406c28 <__get_hz@@Base+0x58>
  406bf0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406bf4:	add	x0, x0, #0x298
  406bf8:	bl	405030 <getenv@plt>
  406bfc:	mov	w2, #0xa                   	// #10
  406c00:	mov	x1, #0x0                   	// #0
  406c04:	bl	404e50 <strtol@plt>
  406c08:	cmp	w0, #0x0
  406c0c:	mov	w19, #0x64                  	// #100
  406c10:	csel	w19, w0, w19, ne  // ne = any
  406c14:	mov	w0, w19
  406c18:	ldp	x19, x20, [sp, #16]
  406c1c:	ldp	x29, x30, [sp]
  406c20:	add	sp, sp, #0x430
  406c24:	ret
  406c28:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406c2c:	add	x0, x0, #0x2a0
  406c30:	bl	405030 <getenv@plt>
  406c34:	cbz	x0, 406ca4 <__get_hz@@Base+0xd4>
  406c38:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406c3c:	add	x0, x0, #0x2a0
  406c40:	bl	405030 <getenv@plt>
  406c44:	mov	x3, x0
  406c48:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  406c4c:	add	x2, x2, #0x2b0
  406c50:	mov	x1, #0x3ff                 	// #1023
  406c54:	add	x0, sp, #0x30
  406c58:	bl	404c80 <snprintf@plt>
  406c5c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406c60:	add	x1, x1, #0x48
  406c64:	add	x0, sp, #0x30
  406c68:	bl	404f30 <fopen64@plt>
  406c6c:	mov	x20, x0
  406c70:	mov	w19, #0x64                  	// #100
  406c74:	cbz	x0, 406c14 <__get_hz@@Base+0x44>
  406c78:	add	x3, sp, #0x2c
  406c7c:	add	x2, sp, #0x28
  406c80:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406c84:	add	x1, x1, #0x2f0
  406c88:	bl	404cf0 <__isoc99_fscanf@plt>
  406c8c:	cmp	w0, #0x2
  406c90:	b.eq	406cf8 <__get_hz@@Base+0x128>  // b.none
  406c94:	mov	x0, x20
  406c98:	bl	404cb0 <fclose@plt>
  406c9c:	mov	w19, #0x64                  	// #100
  406ca0:	b	406c14 <__get_hz@@Base+0x44>
  406ca4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406ca8:	add	x0, x0, #0x2b8
  406cac:	bl	405030 <getenv@plt>
  406cb0:	cbz	x0, 406cdc <__get_hz@@Base+0x10c>
  406cb4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406cb8:	add	x0, x0, #0x2b8
  406cbc:	bl	405030 <getenv@plt>
  406cc0:	mov	x3, x0
  406cc4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  406cc8:	add	x2, x2, #0x2c8
  406ccc:	mov	x1, #0x3ff                 	// #1023
  406cd0:	add	x0, sp, #0x30
  406cd4:	bl	404c80 <snprintf@plt>
  406cd8:	b	406c5c <__get_hz@@Base+0x8c>
  406cdc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406ce0:	add	x0, x0, #0x2d8
  406ce4:	ldp	x2, x3, [x0]
  406ce8:	stp	x2, x3, [sp, #48]
  406cec:	ldrb	w0, [x0, #16]
  406cf0:	strb	w0, [sp, #64]
  406cf4:	b	406c5c <__get_hz@@Base+0x8c>
  406cf8:	mov	w0, #0x4240                	// #16960
  406cfc:	movk	w0, #0xf, lsl #16
  406d00:	ldr	w1, [sp, #40]
  406d04:	cmp	w1, w0
  406d08:	b.ne	406c94 <__get_hz@@Base+0xc4>  // b.any
  406d0c:	ldr	w19, [sp, #44]
  406d10:	mov	x0, x20
  406d14:	bl	404cb0 <fclose@plt>
  406d18:	cmp	w19, #0x0
  406d1c:	mov	w0, #0x64                  	// #100
  406d20:	csel	w19, w19, w0, ne  // ne = any
  406d24:	b	406c14 <__get_hz@@Base+0x44>

0000000000406d28 <__get_user_hz@@Base>:
  406d28:	stp	x29, x30, [sp, #-16]!
  406d2c:	mov	x29, sp
  406d30:	mov	w0, #0x2                   	// #2
  406d34:	bl	404f60 <sysconf@plt>
  406d38:	ldp	x29, x30, [sp], #16
  406d3c:	ret

0000000000406d40 <rt_addr_n2a_r@@Base>:
  406d40:	stp	x29, x30, [sp, #-16]!
  406d44:	mov	x29, sp
  406d48:	mov	x5, x2
  406d4c:	mov	x2, x3
  406d50:	cmp	w0, #0x11
  406d54:	b.eq	406db8 <rt_addr_n2a_r@@Base+0x78>  // b.none
  406d58:	b.gt	406d8c <rt_addr_n2a_r@@Base+0x4c>
  406d5c:	cmp	w0, #0x7
  406d60:	b.eq	406dc8 <rt_addr_n2a_r@@Base+0x88>  // b.none
  406d64:	and	w1, w0, #0xfffffff7
  406d68:	cmp	w1, #0x2
  406d6c:	b.ne	406d80 <rt_addr_n2a_r@@Base+0x40>  // b.any
  406d70:	mov	w3, w4
  406d74:	mov	x1, x5
  406d78:	bl	405090 <inet_ntop@plt>
  406d7c:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406d80:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406d84:	add	x0, x0, #0x308
  406d88:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406d8c:	cmp	w0, #0x1c
  406d90:	b.ne	406da8 <rt_addr_n2a_r@@Base+0x68>  // b.any
  406d94:	sxtw	x3, w4
  406d98:	mov	x1, x5
  406d9c:	mov	w0, #0x1c                  	// #28
  406da0:	bl	409e08 <mpls_ntop@@Base>
  406da4:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406da8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406dac:	add	x0, x0, #0x308
  406db0:	ldp	x29, x30, [sp], #16
  406db4:	ret
  406db8:	mov	w2, #0xffff                	// #65535
  406dbc:	mov	x0, x5
  406dc0:	bl	408d44 <ll_addr_n2a@@Base>
  406dc4:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406dc8:	ldrh	w0, [x5]
  406dcc:	cmp	w0, #0x2
  406dd0:	b.eq	406de8 <rt_addr_n2a_r@@Base+0xa8>  // b.none
  406dd4:	cmp	w0, #0xa
  406dd8:	b.eq	406dfc <rt_addr_n2a_r@@Base+0xbc>  // b.none
  406ddc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406de0:	add	x0, x0, #0x308
  406de4:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406de8:	mov	w3, w4
  406dec:	add	x1, x5, #0x4
  406df0:	mov	w0, #0x2                   	// #2
  406df4:	bl	405090 <inet_ntop@plt>
  406df8:	b	406db0 <rt_addr_n2a_r@@Base+0x70>
  406dfc:	mov	w3, w4
  406e00:	add	x1, x5, #0x8
  406e04:	mov	w0, #0xa                   	// #10
  406e08:	bl	405090 <inet_ntop@plt>
  406e0c:	b	406db0 <rt_addr_n2a_r@@Base+0x70>

0000000000406e10 <rt_addr_n2a@@Base>:
  406e10:	stp	x29, x30, [sp, #-16]!
  406e14:	mov	x29, sp
  406e18:	mov	w4, #0x100                 	// #256
  406e1c:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  406e20:	add	x3, x3, #0x2d8
  406e24:	bl	406d40 <rt_addr_n2a_r@@Base>
  406e28:	ldp	x29, x30, [sp], #16
  406e2c:	ret

0000000000406e30 <read_family@@Base>:
  406e30:	stp	x29, x30, [sp, #-32]!
  406e34:	mov	x29, sp
  406e38:	str	x19, [sp, #16]
  406e3c:	mov	x19, x0
  406e40:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  406e44:	add	x1, x1, #0xe90
  406e48:	bl	404e30 <strcmp@plt>
  406e4c:	mov	w1, #0x2                   	// #2
  406e50:	cbz	w0, 406ed0 <read_family@@Base+0xa0>
  406e54:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  406e58:	add	x1, x1, #0xe98
  406e5c:	mov	x0, x19
  406e60:	bl	404e30 <strcmp@plt>
  406e64:	mov	w1, #0xa                   	// #10
  406e68:	cbz	w0, 406ed0 <read_family@@Base+0xa0>
  406e6c:	adrp	x1, 40c000 <rtnl_talk@@Base+0x24>
  406e70:	add	x1, x1, #0xea0
  406e74:	mov	x0, x19
  406e78:	bl	404e30 <strcmp@plt>
  406e7c:	mov	w1, #0x11                  	// #17
  406e80:	cbz	w0, 406ed0 <read_family@@Base+0xa0>
  406e84:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406e88:	add	x1, x1, #0x310
  406e8c:	mov	x0, x19
  406e90:	bl	404e30 <strcmp@plt>
  406e94:	mov	w1, #0x4                   	// #4
  406e98:	cbz	w0, 406ed0 <read_family@@Base+0xa0>
  406e9c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406ea0:	add	x1, x1, #0x318
  406ea4:	mov	x0, x19
  406ea8:	bl	404e30 <strcmp@plt>
  406eac:	mov	w1, #0x1c                  	// #28
  406eb0:	cbz	w0, 406ed0 <read_family@@Base+0xa0>
  406eb4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406eb8:	add	x1, x1, #0x320
  406ebc:	mov	x0, x19
  406ec0:	bl	404e30 <strcmp@plt>
  406ec4:	cmp	w0, #0x0
  406ec8:	mov	w1, #0x7                   	// #7
  406ecc:	csel	w1, w1, wzr, eq  // eq = none
  406ed0:	mov	w0, w1
  406ed4:	ldr	x19, [sp, #16]
  406ed8:	ldp	x29, x30, [sp], #32
  406edc:	ret

0000000000406ee0 <family_name@@Base>:
  406ee0:	cmp	w0, #0x2
  406ee4:	b.eq	406f24 <family_name@@Base+0x44>  // b.none
  406ee8:	cmp	w0, #0xa
  406eec:	b.eq	406f30 <family_name@@Base+0x50>  // b.none
  406ef0:	cmp	w0, #0x11
  406ef4:	b.eq	406f3c <family_name@@Base+0x5c>  // b.none
  406ef8:	cmp	w0, #0x4
  406efc:	b.eq	406f48 <family_name@@Base+0x68>  // b.none
  406f00:	cmp	w0, #0x1c
  406f04:	b.eq	406f54 <family_name@@Base+0x74>  // b.none
  406f08:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  406f0c:	add	x2, x2, #0x320
  406f10:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406f14:	add	x1, x1, #0x308
  406f18:	cmp	w0, #0x7
  406f1c:	csel	x0, x1, x2, ne  // ne = any
  406f20:	ret
  406f24:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  406f28:	add	x0, x0, #0xe90
  406f2c:	b	406f20 <family_name@@Base+0x40>
  406f30:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  406f34:	add	x0, x0, #0xe98
  406f38:	b	406f20 <family_name@@Base+0x40>
  406f3c:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  406f40:	add	x0, x0, #0xea0
  406f44:	b	406f20 <family_name@@Base+0x40>
  406f48:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406f4c:	add	x0, x0, #0x310
  406f50:	b	406f20 <family_name@@Base+0x40>
  406f54:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  406f58:	add	x0, x0, #0x318
  406f5c:	b	406f20 <family_name@@Base+0x40>

0000000000406f60 <get_addr@@Base>:
  406f60:	stp	x29, x30, [sp, #-48]!
  406f64:	mov	x29, sp
  406f68:	stp	x19, x20, [sp, #16]
  406f6c:	mov	x20, x1
  406f70:	mov	w19, w2
  406f74:	bl	406354 <get_addr_1@@Base>
  406f78:	cbnz	w0, 406f8c <get_addr@@Base+0x2c>
  406f7c:	mov	w0, #0x0                   	// #0
  406f80:	ldp	x19, x20, [sp, #16]
  406f84:	ldp	x29, x30, [sp], #48
  406f88:	ret
  406f8c:	str	x21, [sp, #32]
  406f90:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  406f94:	ldr	x0, [x0, #3992]
  406f98:	ldr	x21, [x0]
  406f9c:	cbnz	w19, 406fc4 <get_addr@@Base+0x64>
  406fa0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  406fa4:	add	x2, x2, #0x328
  406fa8:	mov	x3, x20
  406fac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  406fb0:	add	x1, x1, #0x338
  406fb4:	mov	x0, x21
  406fb8:	bl	405070 <fprintf@plt>
  406fbc:	mov	w0, #0x1                   	// #1
  406fc0:	bl	404bb0 <exit@plt>
  406fc4:	mov	w0, w19
  406fc8:	bl	406ee0 <family_name@@Base>
  406fcc:	mov	x2, x0
  406fd0:	b	406fa8 <get_addr@@Base+0x48>

0000000000406fd4 <get_prefix@@Base>:
  406fd4:	stp	x29, x30, [sp, #-48]!
  406fd8:	mov	x29, sp
  406fdc:	stp	x19, x20, [sp, #16]
  406fe0:	mov	x20, x1
  406fe4:	cmp	w2, #0x11
  406fe8:	b.eq	407008 <get_prefix@@Base+0x34>  // b.none
  406fec:	mov	w19, w2
  406ff0:	bl	406650 <get_prefix_1@@Base>
  406ff4:	cbnz	w0, 407030 <get_prefix@@Base+0x5c>
  406ff8:	mov	w0, #0x0                   	// #0
  406ffc:	ldp	x19, x20, [sp, #16]
  407000:	ldp	x29, x30, [sp], #48
  407004:	ret
  407008:	str	x21, [sp, #32]
  40700c:	mov	x2, x1
  407010:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  407014:	add	x1, x1, #0x370
  407018:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40701c:	ldr	x0, [x0, #3992]
  407020:	ldr	x0, [x0]
  407024:	bl	405070 <fprintf@plt>
  407028:	mov	w0, #0x1                   	// #1
  40702c:	bl	404bb0 <exit@plt>
  407030:	str	x21, [sp, #32]
  407034:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  407038:	ldr	x0, [x0, #3992]
  40703c:	ldr	x21, [x0]
  407040:	cbnz	w19, 407068 <get_prefix@@Base+0x94>
  407044:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  407048:	add	x2, x2, #0x328
  40704c:	mov	x3, x20
  407050:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  407054:	add	x1, x1, #0x3b8
  407058:	mov	x0, x21
  40705c:	bl	405070 <fprintf@plt>
  407060:	mov	w0, #0x1                   	// #1
  407064:	bl	404bb0 <exit@plt>
  407068:	mov	w0, w19
  40706c:	bl	406ee0 <family_name@@Base>
  407070:	mov	x2, x0
  407074:	b	40704c <get_prefix@@Base+0x78>

0000000000407078 <format_host_r@@Base>:
  407078:	stp	x29, x30, [sp, #-112]!
  40707c:	mov	x29, sp
  407080:	stp	x19, x20, [sp, #16]
  407084:	stp	x21, x22, [sp, #32]
  407088:	stp	x23, x24, [sp, #48]
  40708c:	mov	w21, w0
  407090:	mov	w19, w1
  407094:	mov	x22, x2
  407098:	str	x3, [sp, #96]
  40709c:	mov	w23, w4
  4070a0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4070a4:	ldr	x0, [x0, #4064]
  4070a8:	ldr	w0, [x0]
  4070ac:	cbz	w0, 40713c <format_host_r@@Base+0xc4>
  4070b0:	cmp	w1, #0x0
  4070b4:	b.le	40711c <format_host_r@@Base+0xa4>
  4070b8:	stp	x25, x26, [sp, #64]
  4070bc:	stp	x27, x28, [sp, #80]
  4070c0:	cmp	w21, #0xa
  4070c4:	b.eq	407168 <format_host_r@@Base+0xf0>  // b.none
  4070c8:	mov	w26, w21
  4070cc:	mov	w25, w19
  4070d0:	mov	x27, x22
  4070d4:	sxtw	x28, w25
  4070d8:	add	x0, x27, x28
  4070dc:	ldur	w1, [x0, #-4]
  4070e0:	mov	w24, #0xff01                	// #65281
  4070e4:	movk	w24, #0xff00, lsl #16
  4070e8:	umull	x24, w1, w24
  4070ec:	lsr	x24, x24, #40
  4070f0:	add	w2, w24, w24, lsl #8
  4070f4:	sub	w24, w1, w2
  4070f8:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4070fc:	add	x0, x0, #0x2d8
  407100:	sub	w1, w1, w2
  407104:	add	x0, x0, #0x100
  407108:	ldr	x0, [x0, x1, lsl #3]
  40710c:	str	x0, [sp, #104]
  407110:	cbz	x0, 407200 <format_host_r@@Base+0x188>
  407114:	mov	x20, x0
  407118:	b	4071cc <format_host_r@@Base+0x154>
  40711c:	mov	w0, w21
  407120:	bl	406304 <af_bit_len@@Base>
  407124:	add	w19, w0, #0x7
  407128:	cmp	w0, #0x0
  40712c:	csel	w19, w19, w0, lt  // lt = tstop
  407130:	asr	w19, w19, #3
  407134:	cmp	w0, #0x7
  407138:	b.gt	4070b8 <format_host_r@@Base+0x40>
  40713c:	mov	w4, w23
  407140:	ldr	x3, [sp, #96]
  407144:	mov	x2, x22
  407148:	mov	w1, w19
  40714c:	mov	w0, w21
  407150:	bl	406d40 <rt_addr_n2a_r@@Base>
  407154:	ldp	x19, x20, [sp, #16]
  407158:	ldp	x21, x22, [sp, #32]
  40715c:	ldp	x23, x24, [sp, #48]
  407160:	ldp	x29, x30, [sp], #112
  407164:	ret
  407168:	ldr	w0, [x22]
  40716c:	cbnz	w0, 4071a4 <format_host_r@@Base+0x12c>
  407170:	ldr	w0, [x22, #4]
  407174:	cbnz	w0, 4071b4 <format_host_r@@Base+0x13c>
  407178:	ldr	w0, [x22, #8]
  40717c:	cmn	w0, #0x10, lsl #12
  407180:	b.eq	407194 <format_host_r@@Base+0x11c>  // b.none
  407184:	mov	w26, w21
  407188:	mov	w25, w19
  40718c:	mov	x27, x22
  407190:	b	4070d4 <format_host_r@@Base+0x5c>
  407194:	add	x27, x22, #0xc
  407198:	mov	w26, #0x2                   	// #2
  40719c:	mov	w25, #0x4                   	// #4
  4071a0:	b	4070d4 <format_host_r@@Base+0x5c>
  4071a4:	mov	w26, w21
  4071a8:	mov	w25, w19
  4071ac:	mov	x27, x22
  4071b0:	b	4070d4 <format_host_r@@Base+0x5c>
  4071b4:	mov	w26, w21
  4071b8:	mov	w25, w19
  4071bc:	mov	x27, x22
  4071c0:	b	4070d4 <format_host_r@@Base+0x5c>
  4071c4:	ldr	x20, [x20]
  4071c8:	cbz	x20, 407200 <format_host_r@@Base+0x188>
  4071cc:	ldrh	w0, [x20, #22]
  4071d0:	cmp	w0, w26
  4071d4:	b.ne	4071c4 <format_host_r@@Base+0x14c>  // b.any
  4071d8:	ldrh	w0, [x20, #18]
  4071dc:	cmp	w25, w0
  4071e0:	b.ne	4071c4 <format_host_r@@Base+0x14c>  // b.any
  4071e4:	mov	x2, x28
  4071e8:	mov	x1, x27
  4071ec:	add	x0, x20, #0x18
  4071f0:	bl	404e20 <memcmp@plt>
  4071f4:	cbnz	w0, 4071c4 <format_host_r@@Base+0x14c>
  4071f8:	ldr	x0, [x20, #8]
  4071fc:	b	40728c <format_host_r@@Base+0x214>
  407200:	mov	x0, #0x118                 	// #280
  407204:	bl	404cd0 <malloc@plt>
  407208:	mov	x20, x0
  40720c:	cbz	x0, 4072b4 <format_host_r@@Base+0x23c>
  407210:	strh	w26, [x0, #22]
  407214:	strh	w25, [x0, #18]
  407218:	str	xzr, [x0, #8]
  40721c:	mov	x2, x28
  407220:	mov	x1, x27
  407224:	add	x0, x0, #0x18
  407228:	bl	404b70 <memcpy@plt>
  40722c:	ldr	x0, [sp, #104]
  407230:	str	x0, [x20]
  407234:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  407238:	add	x0, x0, #0x2d8
  40723c:	add	x1, x0, #0x100
  407240:	str	x20, [x1, w24, uxtw #3]
  407244:	ldr	w1, [x0, #2312]
  407248:	add	w1, w1, #0x1
  40724c:	str	w1, [x0, #2312]
  407250:	cmp	w1, #0x1
  407254:	b.eq	40729c <format_host_r@@Base+0x224>  // b.none
  407258:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40725c:	ldr	x0, [x0, #4016]
  407260:	ldr	x0, [x0]
  407264:	bl	404f10 <fflush@plt>
  407268:	mov	w2, w26
  40726c:	mov	w1, w25
  407270:	mov	x0, x27
  407274:	bl	404e80 <gethostbyaddr@plt>
  407278:	cbz	x0, 407288 <format_host_r@@Base+0x210>
  40727c:	ldr	x0, [x0]
  407280:	bl	404da0 <strdup@plt>
  407284:	str	x0, [x20, #8]
  407288:	ldr	x0, [x20, #8]
  40728c:	cbz	x0, 4072a8 <format_host_r@@Base+0x230>
  407290:	ldp	x25, x26, [sp, #64]
  407294:	ldp	x27, x28, [sp, #80]
  407298:	b	407154 <format_host_r@@Base+0xdc>
  40729c:	mov	w0, #0x1                   	// #1
  4072a0:	bl	404c00 <sethostent@plt>
  4072a4:	b	407258 <format_host_r@@Base+0x1e0>
  4072a8:	ldp	x25, x26, [sp, #64]
  4072ac:	ldp	x27, x28, [sp, #80]
  4072b0:	b	40713c <format_host_r@@Base+0xc4>
  4072b4:	ldp	x25, x26, [sp, #64]
  4072b8:	ldp	x27, x28, [sp, #80]
  4072bc:	b	40713c <format_host_r@@Base+0xc4>

00000000004072c0 <format_host@@Base>:
  4072c0:	stp	x29, x30, [sp, #-16]!
  4072c4:	mov	x29, sp
  4072c8:	mov	w4, #0x100                 	// #256
  4072cc:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  4072d0:	add	x3, x3, #0x2d8
  4072d4:	add	x3, x3, #0x910
  4072d8:	bl	407078 <format_host_r@@Base>
  4072dc:	ldp	x29, x30, [sp], #16
  4072e0:	ret

00000000004072e4 <hexstring_n2a@@Base>:
  4072e4:	stp	x29, x30, [sp, #-80]!
  4072e8:	mov	x29, sp
  4072ec:	str	x25, [sp, #64]
  4072f0:	mov	x25, x2
  4072f4:	cmp	w1, #0x0
  4072f8:	ccmp	w3, #0x2, #0x4, gt
  4072fc:	b.le	407368 <hexstring_n2a@@Base+0x84>
  407300:	stp	x19, x20, [sp, #16]
  407304:	stp	x21, x22, [sp, #32]
  407308:	stp	x23, x24, [sp, #48]
  40730c:	mov	w23, w1
  407310:	mov	x20, x2
  407314:	mov	x19, #0x1                   	// #1
  407318:	sub	x22, x0, #0x1
  40731c:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x258>
  407320:	add	x24, x24, #0x3e8
  407324:	add	w21, w3, w2
  407328:	ldrb	w2, [x22, x19]
  40732c:	mov	x1, x24
  407330:	mov	x0, x20
  407334:	bl	404c30 <sprintf@plt>
  407338:	add	x20, x20, #0x2
  40733c:	sub	w0, w21, w20
  407340:	cmp	w0, #0x2
  407344:	cset	w0, le
  407348:	cmp	w23, w19
  40734c:	cset	w3, le
  407350:	orr	w0, w0, w3
  407354:	add	x19, x19, #0x1
  407358:	cbz	w0, 407328 <hexstring_n2a@@Base+0x44>
  40735c:	ldp	x19, x20, [sp, #16]
  407360:	ldp	x21, x22, [sp, #32]
  407364:	ldp	x23, x24, [sp, #48]
  407368:	mov	x0, x25
  40736c:	ldr	x25, [sp, #64]
  407370:	ldp	x29, x30, [sp], #80
  407374:	ret

0000000000407378 <hexstring_a2n@@Base>:
  407378:	stp	x29, x30, [sp, #-128]!
  40737c:	mov	x29, sp
  407380:	stp	x19, x20, [sp, #16]
  407384:	stp	x23, x24, [sp, #48]
  407388:	stp	x27, x28, [sp, #80]
  40738c:	mov	x20, x0
  407390:	mov	x23, x1
  407394:	str	x1, [sp, #104]
  407398:	mov	w19, w2
  40739c:	mov	x28, x3
  4073a0:	bl	404ba0 <strlen@plt>
  4073a4:	tbnz	w0, #0, 407488 <hexstring_a2n@@Base+0x110>
  4073a8:	mov	w27, w19
  4073ac:	cbz	w19, 407474 <hexstring_a2n@@Base+0xfc>
  4073b0:	stp	x21, x22, [sp, #32]
  4073b4:	stp	x25, x26, [sp, #64]
  4073b8:	mov	w21, #0x0                   	// #0
  4073bc:	add	x22, sp, #0x70
  4073c0:	mov	x26, #0x2                   	// #2
  4073c4:	add	x25, sp, #0x78
  4073c8:	mov	w24, #0x10                  	// #16
  4073cc:	mov	x0, x20
  4073d0:	bl	404ba0 <strlen@plt>
  4073d4:	cmp	x0, #0x1
  4073d8:	b.ls	407468 <hexstring_a2n@@Base+0xf0>  // b.plast
  4073dc:	mov	x2, x26
  4073e0:	mov	x1, x20
  4073e4:	mov	x0, x22
  4073e8:	bl	404fd0 <strncpy@plt>
  4073ec:	strb	wzr, [sp, #114]
  4073f0:	bl	405020 <__errno_location@plt>
  4073f4:	mov	x19, x0
  4073f8:	str	wzr, [x0]
  4073fc:	mov	w2, w24
  407400:	mov	x1, x25
  407404:	mov	x0, x22
  407408:	bl	404b90 <strtoul@plt>
  40740c:	ldr	w1, [x19]
  407410:	cmp	w0, #0xff
  407414:	ccmp	w1, #0x0, #0x0, ls  // ls = plast
  407418:	b.ne	407448 <hexstring_a2n@@Base+0xd0>  // b.any
  40741c:	ldr	x1, [sp, #120]
  407420:	ldrb	w1, [x1]
  407424:	cbnz	w1, 407448 <hexstring_a2n@@Base+0xd0>
  407428:	add	w21, w21, #0x1
  40742c:	strb	w0, [x23], #1
  407430:	add	x20, x20, #0x2
  407434:	cmp	w21, w27
  407438:	b.ne	4073cc <hexstring_a2n@@Base+0x54>  // b.any
  40743c:	ldp	x21, x22, [sp, #32]
  407440:	ldp	x25, x26, [sp, #64]
  407444:	b	407474 <hexstring_a2n@@Base+0xfc>
  407448:	mov	x0, #0x0                   	// #0
  40744c:	ldp	x21, x22, [sp, #32]
  407450:	ldp	x25, x26, [sp, #64]
  407454:	ldp	x19, x20, [sp, #16]
  407458:	ldp	x23, x24, [sp, #48]
  40745c:	ldp	x27, x28, [sp, #80]
  407460:	ldp	x29, x30, [sp], #128
  407464:	ret
  407468:	mov	w27, w21
  40746c:	ldp	x21, x22, [sp, #32]
  407470:	ldp	x25, x26, [sp, #64]
  407474:	ldr	x1, [sp, #104]
  407478:	mov	x0, x1
  40747c:	cbz	x28, 407454 <hexstring_a2n@@Base+0xdc>
  407480:	str	w27, [x28]
  407484:	b	407454 <hexstring_a2n@@Base+0xdc>
  407488:	mov	x0, #0x0                   	// #0
  40748c:	b	407454 <hexstring_a2n@@Base+0xdc>

0000000000407490 <hex2mem@@Base>:
  407490:	cmp	w2, #0x0
  407494:	b.le	4074fc <hex2mem@@Base+0x6c>
  407498:	stp	x29, x30, [sp, #-48]!
  40749c:	mov	x29, sp
  4074a0:	stp	x19, x20, [sp, #16]
  4074a4:	str	x21, [sp, #32]
  4074a8:	mov	x19, x1
  4074ac:	add	x20, x0, #0x1
  4074b0:	add	x1, x1, #0x1
  4074b4:	sub	w2, w2, #0x1
  4074b8:	add	x21, x1, x2
  4074bc:	ldurb	w0, [x20, #-1]
  4074c0:	bl	405a80 <get_hex@@Base>
  4074c4:	tbnz	w0, #31, 407504 <hex2mem@@Base+0x74>
  4074c8:	ubfiz	w0, w0, #4, #4
  4074cc:	strb	w0, [x19]
  4074d0:	ldrb	w0, [x20]
  4074d4:	bl	405a80 <get_hex@@Base>
  4074d8:	tbnz	w0, #31, 407518 <hex2mem@@Base+0x88>
  4074dc:	ldrb	w1, [x19]
  4074e0:	orr	w0, w0, w1
  4074e4:	strb	w0, [x19], #1
  4074e8:	add	x20, x20, #0x2
  4074ec:	cmp	x19, x21
  4074f0:	b.ne	4074bc <hex2mem@@Base+0x2c>  // b.any
  4074f4:	mov	w0, #0x0                   	// #0
  4074f8:	b	407508 <hex2mem@@Base+0x78>
  4074fc:	mov	w0, #0x0                   	// #0
  407500:	ret
  407504:	mov	w0, #0xffffffff            	// #-1
  407508:	ldp	x19, x20, [sp, #16]
  40750c:	ldr	x21, [sp, #32]
  407510:	ldp	x29, x30, [sp], #48
  407514:	ret
  407518:	mov	w0, #0xffffffff            	// #-1
  40751c:	b	407508 <hex2mem@@Base+0x78>

0000000000407520 <addr64_n2a@@Base>:
  407520:	stp	x29, x30, [sp, #-96]!
  407524:	mov	x29, sp
  407528:	stp	x19, x20, [sp, #16]
  40752c:	stp	x21, x22, [sp, #32]
  407530:	stp	x23, x24, [sp, #48]
  407534:	str	x25, [sp, #64]
  407538:	str	x0, [sp, #88]
  40753c:	mov	x21, x1
  407540:	mov	x22, x2
  407544:	rev16	w3, w0
  407548:	and	w3, w3, #0xffff
  40754c:	add	x20, sp, #0x58
  407550:	add	x25, x20, #0x6
  407554:	mov	x19, #0x0                   	// #0
  407558:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x258>
  40755c:	add	x24, x24, #0x3f0
  407560:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x258>
  407564:	add	x23, x23, #0x3f8
  407568:	mov	x4, x24
  40756c:	mov	x2, x23
  407570:	sub	x1, x22, x19
  407574:	add	x0, x21, x19
  407578:	bl	404c80 <snprintf@plt>
  40757c:	tbnz	w0, #31, 4075c0 <addr64_n2a@@Base+0xa0>
  407580:	add	x19, x19, w0, sxtw
  407584:	ldrh	w3, [x20, #2]!
  407588:	rev16	w3, w3
  40758c:	and	w3, w3, #0xffff
  407590:	cmp	x25, x20
  407594:	b.ne	407568 <addr64_n2a@@Base+0x48>  // b.any
  407598:	adrp	x4, 40d000 <_IO_stdin_used@@Base+0x258>
  40759c:	add	x4, x4, #0x180
  4075a0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4075a4:	add	x2, x2, #0x3f8
  4075a8:	sub	x1, x22, x19
  4075ac:	add	x0, x21, x19
  4075b0:	bl	404c80 <snprintf@plt>
  4075b4:	add	x19, x19, w0, sxtw
  4075b8:	cmp	w0, #0x0
  4075bc:	csel	w0, w19, w0, ge  // ge = tcont
  4075c0:	ldp	x19, x20, [sp, #16]
  4075c4:	ldp	x21, x22, [sp, #32]
  4075c8:	ldp	x23, x24, [sp, #48]
  4075cc:	ldr	x25, [sp, #64]
  4075d0:	ldp	x29, x30, [sp], #96
  4075d4:	ret

00000000004075d8 <print_escape_buf@@Base>:
  4075d8:	cbz	x1, 407680 <print_escape_buf@@Base+0xa8>
  4075dc:	stp	x29, x30, [sp, #-64]!
  4075e0:	mov	x29, sp
  4075e4:	stp	x19, x20, [sp, #16]
  4075e8:	stp	x21, x22, [sp, #32]
  4075ec:	stp	x23, x24, [sp, #48]
  4075f0:	mov	x21, x0
  4075f4:	mov	x19, x1
  4075f8:	mov	x24, x2
  4075fc:	bl	404e40 <__ctype_b_loc@plt>
  407600:	mov	x22, x0
  407604:	mov	x20, x21
  407608:	add	x21, x21, x19
  40760c:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x258>
  407610:	add	x23, x23, #0x400
  407614:	b	407630 <print_escape_buf@@Base+0x58>
  407618:	mov	w1, w19
  40761c:	mov	x0, x23
  407620:	bl	405000 <printf@plt>
  407624:	add	x20, x20, #0x1
  407628:	cmp	x20, x21
  40762c:	b.eq	40766c <print_escape_buf@@Base+0x94>  // b.none
  407630:	ldrb	w19, [x20]
  407634:	and	x3, x19, #0xff
  407638:	ldr	x1, [x22]
  40763c:	ldrh	w1, [x1, x3, lsl #1]
  407640:	and	w1, w1, #0x4000
  407644:	cmp	w19, #0x5c
  407648:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40764c:	b.eq	407618 <print_escape_buf@@Base+0x40>  // b.none
  407650:	mov	w1, w19
  407654:	mov	x0, x24
  407658:	bl	404ed0 <strchr@plt>
  40765c:	cbnz	x0, 407618 <print_escape_buf@@Base+0x40>
  407660:	mov	w0, w19
  407664:	bl	405040 <putchar@plt>
  407668:	b	407624 <print_escape_buf@@Base+0x4c>
  40766c:	ldp	x19, x20, [sp, #16]
  407670:	ldp	x21, x22, [sp, #32]
  407674:	ldp	x23, x24, [sp, #48]
  407678:	ldp	x29, x30, [sp], #64
  40767c:	ret
  407680:	ret

0000000000407684 <print_timestamp@@Base>:
  407684:	stp	x29, x30, [sp, #-96]!
  407688:	mov	x29, sp
  40768c:	stp	x19, x20, [sp, #16]
  407690:	mov	x20, x0
  407694:	add	x19, sp, #0x50
  407698:	mov	x1, #0x0                   	// #0
  40769c:	mov	x0, x19
  4076a0:	bl	404d40 <gettimeofday@plt>
  4076a4:	mov	x0, x19
  4076a8:	bl	404ca0 <localtime@plt>
  4076ac:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x13258>
  4076b0:	ldr	x1, [x1, #4032]
  4076b4:	ldr	w1, [x1]
  4076b8:	cbz	w1, 407700 <print_timestamp@@Base+0x7c>
  4076bc:	add	x19, sp, #0x28
  4076c0:	mov	x3, x0
  4076c4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4076c8:	add	x2, x2, #0x408
  4076cc:	mov	x1, #0x28                  	// #40
  4076d0:	mov	x0, x19
  4076d4:	bl	404c60 <strftime@plt>
  4076d8:	ldr	x3, [sp, #88]
  4076dc:	mov	x2, x19
  4076e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4076e4:	add	x1, x1, #0x420
  4076e8:	mov	x0, x20
  4076ec:	bl	405070 <fprintf@plt>
  4076f0:	mov	w0, #0x0                   	// #0
  4076f4:	ldp	x19, x20, [sp, #16]
  4076f8:	ldp	x29, x30, [sp], #96
  4076fc:	ret
  407700:	bl	404f70 <asctime@plt>
  407704:	mov	x19, x0
  407708:	bl	404ba0 <strlen@plt>
  40770c:	add	x0, x19, x0
  407710:	sturb	wzr, [x0, #-1]
  407714:	ldr	x3, [sp, #88]
  407718:	mov	x2, x19
  40771c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  407720:	add	x1, x1, #0x430
  407724:	mov	x0, x20
  407728:	bl	405070 <fprintf@plt>
  40772c:	b	4076f0 <print_timestamp@@Base+0x6c>

0000000000407730 <print_name_and_link@@Base>:
  407730:	stp	x29, x30, [sp, #-128]!
  407734:	mov	x29, sp
  407738:	stp	x19, x20, [sp, #16]
  40773c:	stp	x21, x22, [sp, #32]
  407740:	mov	x20, x0
  407744:	mov	x19, x1
  407748:	ldr	x0, [x2, #40]
  40774c:	mov	w21, #0x0                   	// #0
  407750:	cbz	x0, 407840 <print_name_and_link@@Base+0x110>
  407754:	ldr	w21, [x0, #4]
  407758:	cbz	w21, 407808 <print_name_and_link@@Base+0xd8>
  40775c:	str	x23, [sp, #48]
  407760:	ldr	x23, [x2, #296]
  407764:	cbz	x23, 4077b8 <print_name_and_link@@Base+0x88>
  407768:	bl	409114 <is_json_context@@Base>
  40776c:	and	w0, w0, #0xff
  407770:	cbz	w0, 40779c <print_name_and_link@@Base+0x6c>
  407774:	mov	w4, w21
  407778:	mov	x3, #0x0                   	// #0
  40777c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  407780:	add	x2, x2, #0x450
  407784:	mov	w1, #0x6                   	// #6
  407788:	mov	w0, #0x2                   	// #2
  40778c:	bl	409250 <print_color_int@@Base>
  407790:	mov	w21, #0x0                   	// #0
  407794:	ldr	x23, [sp, #48]
  407798:	b	407840 <print_name_and_link@@Base+0x110>
  40779c:	mov	w0, w21
  4077a0:	bl	408a68 <ll_idx_n2a@@Base>
  4077a4:	mov	x22, x0
  4077a8:	mov	w21, #0x0                   	// #0
  4077ac:	cbnz	x22, 407894 <print_name_and_link@@Base+0x164>
  4077b0:	ldr	x23, [sp, #48]
  4077b4:	b	407840 <print_name_and_link@@Base+0x110>
  4077b8:	mov	w0, w21
  4077bc:	bl	408aa4 <ll_index_to_name@@Base>
  4077c0:	mov	x22, x0
  4077c4:	bl	409114 <is_json_context@@Base>
  4077c8:	and	w0, w0, #0xff
  4077cc:	cbnz	w0, 4077e4 <print_name_and_link@@Base+0xb4>
  4077d0:	mov	w0, w21
  4077d4:	bl	408b8c <ll_index_to_flags@@Base>
  4077d8:	eor	w21, w0, #0x1
  4077dc:	and	w21, w21, #0x1
  4077e0:	b	4077ac <print_name_and_link@@Base+0x7c>
  4077e4:	mov	x4, x22
  4077e8:	mov	x3, #0x0                   	// #0
  4077ec:	adrp	x2, 40c000 <rtnl_talk@@Base+0x24>
  4077f0:	add	x2, x2, #0xea0
  4077f4:	mov	w1, #0x6                   	// #6
  4077f8:	mov	w0, #0x2                   	// #2
  4077fc:	bl	409724 <print_color_string@@Base>
  407800:	mov	x22, x23
  407804:	b	4077d0 <print_name_and_link@@Base+0xa0>
  407808:	bl	409114 <is_json_context@@Base>
  40780c:	and	w0, w0, #0xff
  407810:	cbnz	w0, 407870 <print_name_and_link@@Base+0x140>
  407814:	mov	w21, #0x0                   	// #0
  407818:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x258>
  40781c:	add	x22, x22, #0x448
  407820:	add	x0, sp, #0x40
  407824:	mov	x4, x22
  407828:	mov	x3, x19
  40782c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  407830:	add	x2, x2, #0x460
  407834:	mov	x1, #0x40                  	// #64
  407838:	mov	x19, x0
  40783c:	bl	404c80 <snprintf@plt>
  407840:	mov	x4, x19
  407844:	mov	x3, x20
  407848:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  40784c:	add	x2, x2, #0x468
  407850:	mov	w1, #0x0                   	// #0
  407854:	mov	w0, #0x4                   	// #4
  407858:	bl	409724 <print_color_string@@Base>
  40785c:	mov	w0, w21
  407860:	ldp	x19, x20, [sp, #16]
  407864:	ldp	x21, x22, [sp, #32]
  407868:	ldp	x29, x30, [sp], #128
  40786c:	ret
  407870:	mov	x4, #0x0                   	// #0
  407874:	mov	x3, #0x0                   	// #0
  407878:	adrp	x2, 40c000 <rtnl_talk@@Base+0x24>
  40787c:	add	x2, x2, #0xea0
  407880:	mov	w1, #0x6                   	// #6
  407884:	mov	w0, #0x2                   	// #2
  407888:	bl	409a04 <print_color_null@@Base>
  40788c:	mov	w21, #0x0                   	// #0
  407890:	b	407840 <print_name_and_link@@Base+0x110>
  407894:	ldr	x23, [sp, #48]
  407898:	b	407820 <print_name_and_link@@Base+0xf0>

000000000040789c <getcmdline@@Base>:
  40789c:	stp	x29, x30, [sp, #-112]!
  4078a0:	mov	x29, sp
  4078a4:	stp	x19, x20, [sp, #16]
  4078a8:	stp	x21, x22, [sp, #32]
  4078ac:	stp	x23, x24, [sp, #48]
  4078b0:	mov	x20, x0
  4078b4:	mov	x24, x1
  4078b8:	mov	x23, x2
  4078bc:	mov	x3, x2
  4078c0:	mov	w2, #0xa                   	// #10
  4078c4:	bl	405050 <__getdelim@plt>
  4078c8:	mov	x21, x0
  4078cc:	tbnz	x0, #63, 407a30 <getcmdline@@Base+0x194>
  4078d0:	stp	x25, x26, [sp, #64]
  4078d4:	stp	x27, x28, [sp, #80]
  4078d8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4078dc:	ldr	x0, [x0, #4000]
  4078e0:	ldr	w1, [x0]
  4078e4:	add	w1, w1, #0x1
  4078e8:	str	w1, [x0]
  4078ec:	mov	w1, #0x23                  	// #35
  4078f0:	ldr	x0, [x20]
  4078f4:	bl	404ed0 <strchr@plt>
  4078f8:	cbz	x0, 407900 <getcmdline@@Base+0x64>
  4078fc:	strb	wzr, [x0]
  407900:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x258>
  407904:	add	x25, x25, #0x4a0
  407908:	add	x27, sp, #0x68
  40790c:	add	x26, sp, #0x60
  407910:	adrp	x22, 420000 <_IO_stdin_used@@Base+0x13258>
  407914:	ldr	x22, [x22, #4000]
  407918:	b	407994 <getcmdline@@Base+0xf8>
  40791c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  407920:	ldr	x0, [x0, #3992]
  407924:	ldr	x3, [x0]
  407928:	mov	x2, #0x1a                  	// #26
  40792c:	mov	x1, #0x1                   	// #1
  407930:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  407934:	add	x0, x0, #0x470
  407938:	bl	404ef0 <fwrite@plt>
  40793c:	mov	x21, x19
  407940:	ldp	x25, x26, [sp, #64]
  407944:	ldp	x27, x28, [sp, #80]
  407948:	b	407a30 <getcmdline@@Base+0x194>
  40794c:	ldr	x0, [x20]
  407950:	bl	404ba0 <strlen@plt>
  407954:	mov	x28, x0
  407958:	ldr	x0, [sp, #96]
  40795c:	bl	404ba0 <strlen@plt>
  407960:	add	x1, x28, x0
  407964:	add	x1, x1, #0x1
  407968:	str	x1, [x24]
  40796c:	ldr	x0, [x20]
  407970:	bl	404d80 <realloc@plt>
  407974:	str	x0, [x20]
  407978:	cbz	x0, 4079f4 <getcmdline@@Base+0x158>
  40797c:	sub	x19, x19, #0x2
  407980:	add	x21, x21, x19
  407984:	ldr	x1, [sp, #96]
  407988:	bl	404d10 <strcat@plt>
  40798c:	ldr	x0, [sp, #96]
  407990:	bl	404e90 <free@plt>
  407994:	mov	x1, x25
  407998:	ldr	x0, [x20]
  40799c:	bl	404fb0 <strstr@plt>
  4079a0:	mov	x28, x0
  4079a4:	cbz	x0, 407a28 <getcmdline@@Base+0x18c>
  4079a8:	str	xzr, [sp, #96]
  4079ac:	str	xzr, [sp, #104]
  4079b0:	mov	x3, x23
  4079b4:	mov	w2, #0xa                   	// #10
  4079b8:	mov	x1, x27
  4079bc:	mov	x0, x26
  4079c0:	bl	405050 <__getdelim@plt>
  4079c4:	mov	x19, x0
  4079c8:	tbnz	x0, #63, 40791c <getcmdline@@Base+0x80>
  4079cc:	ldr	w0, [x22]
  4079d0:	add	w0, w0, #0x1
  4079d4:	str	w0, [x22]
  4079d8:	strb	wzr, [x28]
  4079dc:	mov	w1, #0x23                  	// #35
  4079e0:	ldr	x0, [sp, #96]
  4079e4:	bl	404ed0 <strchr@plt>
  4079e8:	cbz	x0, 40794c <getcmdline@@Base+0xb0>
  4079ec:	strb	wzr, [x0]
  4079f0:	b	40794c <getcmdline@@Base+0xb0>
  4079f4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4079f8:	ldr	x0, [x0, #3992]
  4079fc:	ldr	x3, [x0]
  407a00:	mov	x2, #0xe                   	// #14
  407a04:	mov	x1, #0x1                   	// #1
  407a08:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  407a0c:	add	x0, x0, #0x490
  407a10:	bl	404ef0 <fwrite@plt>
  407a14:	str	xzr, [x24]
  407a18:	mov	x21, #0xffffffffffffffff    	// #-1
  407a1c:	ldp	x25, x26, [sp, #64]
  407a20:	ldp	x27, x28, [sp, #80]
  407a24:	b	407a30 <getcmdline@@Base+0x194>
  407a28:	ldp	x25, x26, [sp, #64]
  407a2c:	ldp	x27, x28, [sp, #80]
  407a30:	mov	x0, x21
  407a34:	ldp	x19, x20, [sp, #16]
  407a38:	ldp	x21, x22, [sp, #32]
  407a3c:	ldp	x23, x24, [sp, #48]
  407a40:	ldp	x29, x30, [sp], #112
  407a44:	ret

0000000000407a48 <makeargs@@Base>:
  407a48:	stp	x29, x30, [sp, #-96]!
  407a4c:	mov	x29, sp
  407a50:	stp	x19, x20, [sp, #16]
  407a54:	stp	x21, x22, [sp, #32]
  407a58:	stp	x25, x26, [sp, #64]
  407a5c:	mov	x19, x0
  407a60:	mov	x25, x1
  407a64:	ldrb	w0, [x0]
  407a68:	cbz	w0, 407b64 <makeargs@@Base+0x11c>
  407a6c:	stp	x23, x24, [sp, #48]
  407a70:	str	x27, [sp, #80]
  407a74:	mov	x20, #0x0                   	// #0
  407a78:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x258>
  407a7c:	add	x23, x23, #0x570
  407a80:	sub	w24, w2, #0x1
  407a84:	mov	w26, #0x22                  	// #34
  407a88:	b	407aec <makeargs@@Base+0xa4>
  407a8c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  407a90:	ldr	x0, [x0, #3992]
  407a94:	ldr	x3, [x0]
  407a98:	mov	x2, #0x1e                  	// #30
  407a9c:	mov	x1, #0x1                   	// #1
  407aa0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  407aa4:	add	x0, x0, #0x4a8
  407aa8:	bl	404ef0 <fwrite@plt>
  407aac:	mov	w0, #0x1                   	// #1
  407ab0:	bl	404bb0 <exit@plt>
  407ab4:	add	w21, w20, #0x1
  407ab8:	str	x27, [x25, x20, lsl #3]
  407abc:	mov	x1, x23
  407ac0:	mov	x0, x27
  407ac4:	bl	404fe0 <strcspn@plt>
  407ac8:	mov	x1, x0
  407acc:	add	x0, x27, x0
  407ad0:	ldrb	w1, [x27, x1]
  407ad4:	cbz	w1, 407b90 <makeargs@@Base+0x148>
  407ad8:	mov	x19, x0
  407adc:	strb	wzr, [x19], #1
  407ae0:	add	x20, x20, #0x1
  407ae4:	ldrb	w0, [x0, #1]
  407ae8:	cbz	w0, 407b58 <makeargs@@Base+0x110>
  407aec:	mov	w21, w20
  407af0:	mov	x1, x23
  407af4:	mov	x0, x19
  407af8:	bl	404ec0 <strspn@plt>
  407afc:	add	x27, x19, x0
  407b00:	ldrb	w1, [x19, x0]
  407b04:	cbz	w1, 407b6c <makeargs@@Base+0x124>
  407b08:	cmp	w24, w20
  407b0c:	b.le	407a8c <makeargs@@Base+0x44>
  407b10:	cmp	w1, #0x27
  407b14:	ccmp	w1, w26, #0x4, ne  // ne = any
  407b18:	b.ne	407ab4 <makeargs@@Base+0x6c>  // b.any
  407b1c:	add	x0, x27, #0x1
  407b20:	add	w21, w20, #0x1
  407b24:	str	x0, [x25, x20, lsl #3]
  407b28:	bl	404ed0 <strchr@plt>
  407b2c:	cbnz	x0, 407ad8 <makeargs@@Base+0x90>
  407b30:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  407b34:	ldr	x0, [x0, #3992]
  407b38:	ldr	x3, [x0]
  407b3c:	mov	x2, #0x1b                  	// #27
  407b40:	mov	x1, #0x1                   	// #1
  407b44:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  407b48:	add	x0, x0, #0x4c8
  407b4c:	bl	404ef0 <fwrite@plt>
  407b50:	mov	w0, #0x1                   	// #1
  407b54:	bl	404bb0 <exit@plt>
  407b58:	ldp	x23, x24, [sp, #48]
  407b5c:	ldr	x27, [sp, #80]
  407b60:	b	407b74 <makeargs@@Base+0x12c>
  407b64:	mov	w21, #0x0                   	// #0
  407b68:	b	407b74 <makeargs@@Base+0x12c>
  407b6c:	ldp	x23, x24, [sp, #48]
  407b70:	ldr	x27, [sp, #80]
  407b74:	str	xzr, [x25, w21, sxtw #3]
  407b78:	mov	w0, w21
  407b7c:	ldp	x19, x20, [sp, #16]
  407b80:	ldp	x21, x22, [sp, #32]
  407b84:	ldp	x25, x26, [sp, #64]
  407b88:	ldp	x29, x30, [sp], #96
  407b8c:	ret
  407b90:	ldp	x23, x24, [sp, #48]
  407b94:	ldr	x27, [sp, #80]
  407b98:	b	407b74 <makeargs@@Base+0x12c>

0000000000407b9c <print_nlmsg_timestamp@@Base>:
  407b9c:	stp	x29, x30, [sp, #-64]!
  407ba0:	mov	x29, sp
  407ba4:	stp	x19, x20, [sp, #16]
  407ba8:	str	x21, [sp, #32]
  407bac:	mov	x20, x0
  407bb0:	ldr	w0, [x1, #16]
  407bb4:	str	x0, [sp, #56]
  407bb8:	ldr	w21, [x1, #20]
  407bbc:	add	x0, sp, #0x38
  407bc0:	bl	404ca0 <localtime@plt>
  407bc4:	bl	404f70 <asctime@plt>
  407bc8:	mov	x19, x0
  407bcc:	bl	404ba0 <strlen@plt>
  407bd0:	add	x0, x19, x0
  407bd4:	sturb	wzr, [x0, #-1]
  407bd8:	mov	x3, x21
  407bdc:	mov	x2, x19
  407be0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  407be4:	add	x1, x1, #0x4e8
  407be8:	mov	x0, x20
  407bec:	bl	405070 <fprintf@plt>
  407bf0:	ldp	x19, x20, [sp, #16]
  407bf4:	ldr	x21, [sp, #32]
  407bf8:	ldp	x29, x30, [sp], #64
  407bfc:	ret

0000000000407c00 <int_to_str@@Base>:
  407c00:	stp	x29, x30, [sp, #-32]!
  407c04:	mov	x29, sp
  407c08:	str	x19, [sp, #16]
  407c0c:	mov	x19, x1
  407c10:	mov	w2, w0
  407c14:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  407c18:	add	x1, x1, #0x500
  407c1c:	mov	x0, x19
  407c20:	bl	404c30 <sprintf@plt>
  407c24:	mov	x0, x19
  407c28:	ldr	x19, [sp, #16]
  407c2c:	ldp	x29, x30, [sp], #32
  407c30:	ret

0000000000407c34 <get_guid@@Base>:
  407c34:	stp	x29, x30, [sp, #-80]!
  407c38:	mov	x29, sp
  407c3c:	stp	x19, x20, [sp, #16]
  407c40:	stp	x21, x22, [sp, #32]
  407c44:	mov	x21, x0
  407c48:	mov	x20, x1
  407c4c:	mov	x0, x1
  407c50:	bl	404ba0 <strlen@plt>
  407c54:	cmp	x0, #0x17
  407c58:	b.ne	407cec <get_guid@@Base+0xb8>  // b.any
  407c5c:	add	x19, x20, #0x2
  407c60:	add	x1, x20, #0x17
  407c64:	mov	x2, x19
  407c68:	ldrb	w0, [x2]
  407c6c:	cmp	w0, #0x3a
  407c70:	b.ne	407cf4 <get_guid@@Base+0xc0>  // b.any
  407c74:	add	x2, x2, #0x3
  407c78:	cmp	x2, x1
  407c7c:	b.ne	407c68 <get_guid@@Base+0x34>  // b.any
  407c80:	str	x23, [sp, #48]
  407c84:	str	xzr, [x21]
  407c88:	mov	w20, #0x38                  	// #56
  407c8c:	add	x23, sp, #0x48
  407c90:	mov	w22, #0x10                  	// #16
  407c94:	mov	w2, w22
  407c98:	mov	x1, x23
  407c9c:	sub	x0, x19, #0x2
  407ca0:	bl	404b90 <strtoul@plt>
  407ca4:	cmp	x0, #0xff
  407ca8:	ldr	x1, [sp, #72]
  407cac:	ccmp	x1, x19, #0x0, ls  // ls = plast
  407cb0:	b.ne	407cfc <get_guid@@Base+0xc8>  // b.any
  407cb4:	lsl	x0, x0, x20
  407cb8:	ldr	x1, [x21]
  407cbc:	orr	x0, x1, x0
  407cc0:	str	x0, [x21]
  407cc4:	add	x19, x19, #0x3
  407cc8:	sub	w20, w20, #0x8
  407ccc:	cmn	w20, #0x8
  407cd0:	b.ne	407c94 <get_guid@@Base+0x60>  // b.any
  407cd4:	mov	w0, #0x0                   	// #0
  407cd8:	ldr	x23, [sp, #48]
  407cdc:	ldp	x19, x20, [sp, #16]
  407ce0:	ldp	x21, x22, [sp, #32]
  407ce4:	ldp	x29, x30, [sp], #80
  407ce8:	ret
  407cec:	mov	w0, #0xffffffff            	// #-1
  407cf0:	b	407cdc <get_guid@@Base+0xa8>
  407cf4:	mov	w0, #0xffffffff            	// #-1
  407cf8:	b	407cdc <get_guid@@Base+0xa8>
  407cfc:	mov	w0, #0xffffffff            	// #-1
  407d00:	ldr	x23, [sp, #48]
  407d04:	b	407cdc <get_guid@@Base+0xa8>

0000000000407d08 <get_real_family@@Base>:
  407d08:	cmp	w0, #0x5
  407d0c:	b.ne	407d24 <get_real_family@@Base+0x1c>  // b.any
  407d10:	cmp	w1, #0x80
  407d14:	b.eq	407d2c <get_real_family@@Base+0x24>  // b.none
  407d18:	cmp	w1, #0x81
  407d1c:	mov	w0, #0xa                   	// #10
  407d20:	csel	w1, w1, w0, ne  // ne = any
  407d24:	mov	w0, w1
  407d28:	ret
  407d2c:	mov	w1, #0x2                   	// #2
  407d30:	b	407d24 <get_real_family@@Base+0x1c>

0000000000407d34 <get_rtnl_link_stats_rta@@Base>:
  407d34:	sub	sp, sp, #0x9f0
  407d38:	stp	x29, x30, [sp]
  407d3c:	mov	x29, sp
  407d40:	stp	x19, x20, [sp, #16]
  407d44:	stp	x21, x22, [sp, #32]
  407d48:	str	x23, [sp, #48]
  407d4c:	mov	x19, x0
  407d50:	ldr	x21, [x1, #184]
  407d54:	mov	x22, x0
  407d58:	mov	w23, #0xc0                  	// #192
  407d5c:	cbz	x21, 407dc0 <get_rtnl_link_stats_rta@@Base+0x8c>
  407d60:	ldrh	w20, [x21]
  407d64:	sub	w20, w20, #0x4
  407d68:	cmp	w23, w20
  407d6c:	b.gt	407e6c <get_rtnl_link_stats_rta@@Base+0x138>
  407d70:	mov	w20, w23
  407d74:	sxtw	x2, w20
  407d78:	add	x1, x21, #0x4
  407d7c:	mov	x0, x22
  407d80:	bl	404b70 <memcpy@plt>
  407d84:	cmp	x22, x19
  407d88:	b.eq	407da4 <get_rtnl_link_stats_rta@@Base+0x70>  // b.none
  407d8c:	mov	x0, #0x0                   	// #0
  407d90:	ldr	w1, [x22, x0, lsl #2]
  407d94:	str	x1, [x19, x0, lsl #3]
  407d98:	add	x0, x0, #0x1
  407d9c:	cmp	x0, #0x18
  407da0:	b.ne	407d90 <get_rtnl_link_stats_rta@@Base+0x5c>  // b.any
  407da4:	mov	w0, w23
  407da8:	ldp	x19, x20, [sp, #16]
  407dac:	ldp	x21, x22, [sp, #32]
  407db0:	ldr	x23, [sp, #48]
  407db4:	ldp	x29, x30, [sp]
  407db8:	add	sp, sp, #0x9f0
  407dbc:	ret
  407dc0:	ldr	x21, [x1, #56]
  407dc4:	mov	w23, #0x60                  	// #96
  407dc8:	add	x22, sp, #0x990
  407dcc:	cbnz	x21, 407d60 <get_rtnl_link_stats_rta@@Base+0x2c>
  407dd0:	ldr	x2, [x1, #96]
  407dd4:	cbz	x2, 407e84 <get_rtnl_link_stats_rta@@Base+0x150>
  407dd8:	ldrh	w3, [x2], #4
  407ddc:	sub	w3, w3, #0x4
  407de0:	mov	w1, #0x128                 	// #296
  407de4:	add	x0, sp, #0x48
  407de8:	bl	40cc08 <parse_rtattr@@Base>
  407dec:	ldr	x0, [sp, #96]
  407df0:	cbz	x0, 407e64 <get_rtnl_link_stats_rta@@Base+0x130>
  407df4:	stp	xzr, xzr, [x19]
  407df8:	stp	xzr, xzr, [x19, #16]
  407dfc:	stp	xzr, xzr, [x19, #32]
  407e00:	stp	xzr, xzr, [x19, #48]
  407e04:	stp	xzr, xzr, [x19, #64]
  407e08:	stp	xzr, xzr, [x19, #80]
  407e0c:	stp	xzr, xzr, [x19, #96]
  407e10:	stp	xzr, xzr, [x19, #112]
  407e14:	stp	xzr, xzr, [x19, #128]
  407e18:	stp	xzr, xzr, [x19, #144]
  407e1c:	stp	xzr, xzr, [x19, #160]
  407e20:	stp	xzr, xzr, [x19, #176]
  407e24:	ldur	x1, [x0, #12]
  407e28:	str	x1, [x19]
  407e2c:	ldur	x1, [x0, #20]
  407e30:	str	x1, [x19, #16]
  407e34:	ldur	x1, [x0, #44]
  407e38:	str	x1, [x19, #8]
  407e3c:	ldur	x1, [x0, #52]
  407e40:	str	x1, [x19, #24]
  407e44:	ldur	x1, [x0, #108]
  407e48:	str	x1, [x19, #32]
  407e4c:	ldur	x1, [x0, #116]
  407e50:	str	x1, [x19, #40]
  407e54:	ldur	x1, [x0, #188]
  407e58:	str	x1, [x19, #64]
  407e5c:	ldur	x0, [x0, #252]
  407e60:	str	x0, [x19, #104]
  407e64:	mov	w23, #0xc0                  	// #192
  407e68:	b	407da4 <get_rtnl_link_stats_rta@@Base+0x70>
  407e6c:	sub	w2, w23, w20
  407e70:	sxtw	x2, w2
  407e74:	mov	w1, #0x0                   	// #0
  407e78:	add	x0, x22, w20, sxtw
  407e7c:	bl	404d30 <memset@plt>
  407e80:	b	407d74 <get_rtnl_link_stats_rta@@Base+0x40>
  407e84:	mov	w23, #0xffffffff            	// #-1
  407e88:	b	407da4 <get_rtnl_link_stats_rta@@Base+0x70>

0000000000407e8c <strlcpy@@Base>:
  407e8c:	stp	x29, x30, [sp, #-48]!
  407e90:	mov	x29, sp
  407e94:	stp	x19, x20, [sp, #16]
  407e98:	stp	x21, x22, [sp, #32]
  407e9c:	mov	x22, x0
  407ea0:	mov	x21, x1
  407ea4:	mov	x19, x2
  407ea8:	mov	x0, x1
  407eac:	bl	404ba0 <strlen@plt>
  407eb0:	mov	x20, x0
  407eb4:	cbnz	x19, 407ecc <strlcpy@@Base+0x40>
  407eb8:	mov	x0, x20
  407ebc:	ldp	x19, x20, [sp, #16]
  407ec0:	ldp	x21, x22, [sp, #32]
  407ec4:	ldp	x29, x30, [sp], #48
  407ec8:	ret
  407ecc:	sub	x19, x19, #0x1
  407ed0:	cmp	x19, x0
  407ed4:	csel	x19, x19, x0, ls  // ls = plast
  407ed8:	mov	x2, x19
  407edc:	mov	x1, x21
  407ee0:	mov	x0, x22
  407ee4:	bl	404b70 <memcpy@plt>
  407ee8:	strb	wzr, [x22, x19]
  407eec:	b	407eb8 <strlcpy@@Base+0x2c>

0000000000407ef0 <strlcat@@Base>:
  407ef0:	stp	x29, x30, [sp, #-48]!
  407ef4:	mov	x29, sp
  407ef8:	stp	x19, x20, [sp, #16]
  407efc:	stp	x21, x22, [sp, #32]
  407f00:	mov	x22, x0
  407f04:	mov	x21, x1
  407f08:	mov	x20, x2
  407f0c:	bl	404ba0 <strlen@plt>
  407f10:	mov	x19, x0
  407f14:	cmp	x0, x20
  407f18:	b.cc	407f38 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  407f1c:	mov	x0, x21
  407f20:	bl	404ba0 <strlen@plt>
  407f24:	add	x0, x0, x19
  407f28:	ldp	x19, x20, [sp, #16]
  407f2c:	ldp	x21, x22, [sp, #32]
  407f30:	ldp	x29, x30, [sp], #48
  407f34:	ret
  407f38:	sub	x2, x20, x0
  407f3c:	mov	x1, x21
  407f40:	add	x0, x22, x0
  407f44:	bl	407e8c <strlcpy@@Base>
  407f48:	add	x0, x0, x19
  407f4c:	b	407f28 <strlcat@@Base+0x38>

0000000000407f50 <drop_cap@@Base>:
  407f50:	stp	x29, x30, [sp, #-48]!
  407f54:	mov	x29, sp
  407f58:	bl	404c40 <getuid@plt>
  407f5c:	cbnz	w0, 407f68 <drop_cap@@Base+0x18>
  407f60:	ldp	x29, x30, [sp], #48
  407f64:	ret
  407f68:	bl	404bf0 <geteuid@plt>
  407f6c:	cbz	w0, 407f60 <drop_cap@@Base+0x10>
  407f70:	str	x19, [sp, #16]
  407f74:	bl	404e60 <cap_get_proc@plt>
  407f78:	mov	x19, x0
  407f7c:	cbz	x0, 407fc4 <drop_cap@@Base+0x74>
  407f80:	add	x3, sp, #0x2c
  407f84:	mov	w2, #0x2                   	// #2
  407f88:	mov	w1, #0xc                   	// #12
  407f8c:	bl	404d60 <cap_get_flag@plt>
  407f90:	cbnz	w0, 407fcc <drop_cap@@Base+0x7c>
  407f94:	ldr	w0, [sp, #44]
  407f98:	cbnz	w0, 407fb4 <drop_cap@@Base+0x64>
  407f9c:	mov	x0, x19
  407fa0:	bl	404f40 <cap_clear@plt>
  407fa4:	cbnz	w0, 407fd4 <drop_cap@@Base+0x84>
  407fa8:	mov	x0, x19
  407fac:	bl	404d90 <cap_set_proc@plt>
  407fb0:	cbnz	w0, 407fdc <drop_cap@@Base+0x8c>
  407fb4:	mov	x0, x19
  407fb8:	bl	404f80 <cap_free@plt>
  407fbc:	ldr	x19, [sp, #16]
  407fc0:	b	407f60 <drop_cap@@Base+0x10>
  407fc4:	mov	w0, #0x1                   	// #1
  407fc8:	bl	404bb0 <exit@plt>
  407fcc:	mov	w0, #0x1                   	// #1
  407fd0:	bl	404bb0 <exit@plt>
  407fd4:	mov	w0, #0x1                   	// #1
  407fd8:	bl	404bb0 <exit@plt>
  407fdc:	mov	w0, #0x1                   	// #1
  407fe0:	bl	404bb0 <exit@plt>

0000000000407fe4 <get_time@@Base>:
  407fe4:	stp	x29, x30, [sp, #-64]!
  407fe8:	mov	x29, sp
  407fec:	stp	x19, x20, [sp, #16]
  407ff0:	str	x21, [sp, #32]
  407ff4:	mov	x21, x0
  407ff8:	mov	x19, x1
  407ffc:	add	x1, sp, #0x38
  408000:	mov	x0, x19
  408004:	bl	404be0 <strtod@plt>
  408008:	ldr	x20, [sp, #56]
  40800c:	cmp	x20, x19
  408010:	b.eq	408128 <get_time@@Base+0x144>  // b.none
  408014:	str	d8, [sp, #40]
  408018:	fmov	d8, d0
  40801c:	ldrb	w0, [x20]
  408020:	cbz	w0, 408070 <get_time@@Base+0x8c>
  408024:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408028:	add	x1, x1, #0xa28
  40802c:	mov	x0, x20
  408030:	bl	404d70 <strcasecmp@plt>
  408034:	cbz	w0, 408060 <get_time@@Base+0x7c>
  408038:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40803c:	add	x1, x1, #0xe0
  408040:	mov	x0, x20
  408044:	bl	404d70 <strcasecmp@plt>
  408048:	cbz	w0, 408060 <get_time@@Base+0x7c>
  40804c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408050:	add	x1, x1, #0xe8
  408054:	mov	x0, x20
  408058:	bl	404d70 <strcasecmp@plt>
  40805c:	cbnz	w0, 408090 <get_time@@Base+0xac>
  408060:	mov	x0, #0x848000000000        	// #145685290680320
  408064:	movk	x0, #0x412e, lsl #48
  408068:	fmov	d0, x0
  40806c:	fmul	d8, d8, d0
  408070:	fcvtzu	w1, d8
  408074:	str	w1, [x21]
  408078:	mov	w0, #0x0                   	// #0
  40807c:	ldr	d8, [sp, #40]
  408080:	ldp	x19, x20, [sp, #16]
  408084:	ldr	x21, [sp, #32]
  408088:	ldp	x29, x30, [sp], #64
  40808c:	ret
  408090:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408094:	add	x1, x1, #0xf0
  408098:	mov	x0, x20
  40809c:	bl	404d70 <strcasecmp@plt>
  4080a0:	cbz	w0, 4080cc <get_time@@Base+0xe8>
  4080a4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4080a8:	add	x1, x1, #0xf8
  4080ac:	mov	x0, x20
  4080b0:	bl	404d70 <strcasecmp@plt>
  4080b4:	cbz	w0, 4080cc <get_time@@Base+0xe8>
  4080b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4080bc:	add	x1, x1, #0x100
  4080c0:	mov	x0, x20
  4080c4:	bl	404d70 <strcasecmp@plt>
  4080c8:	cbnz	w0, 4080e0 <get_time@@Base+0xfc>
  4080cc:	mov	x0, #0x400000000000        	// #70368744177664
  4080d0:	movk	x0, #0x408f, lsl #48
  4080d4:	fmov	d0, x0
  4080d8:	fmul	d8, d8, d0
  4080dc:	b	408070 <get_time@@Base+0x8c>
  4080e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4080e4:	add	x1, x1, #0x508
  4080e8:	mov	x0, x20
  4080ec:	bl	404d70 <strcasecmp@plt>
  4080f0:	cbz	w0, 408070 <get_time@@Base+0x8c>
  4080f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4080f8:	add	x1, x1, #0x510
  4080fc:	mov	x0, x20
  408100:	bl	404d70 <strcasecmp@plt>
  408104:	cbz	w0, 408070 <get_time@@Base+0x8c>
  408108:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40810c:	add	x1, x1, #0x518
  408110:	mov	x0, x20
  408114:	bl	404d70 <strcasecmp@plt>
  408118:	cbz	w0, 408070 <get_time@@Base+0x8c>
  40811c:	mov	w0, #0xffffffff            	// #-1
  408120:	ldr	d8, [sp, #40]
  408124:	b	408080 <get_time@@Base+0x9c>
  408128:	mov	w0, #0xffffffff            	// #-1
  40812c:	b	408080 <get_time@@Base+0x9c>

0000000000408130 <sprint_time@@Base>:
  408130:	stp	x29, x30, [sp, #-32]!
  408134:	mov	x29, sp
  408138:	str	x19, [sp, #16]
  40813c:	mov	w3, w0
  408140:	mov	x19, x1
  408144:	ucvtf	d0, w0
  408148:	mov	w0, #0x423f                	// #16959
  40814c:	movk	w0, #0xf, lsl #16
  408150:	cmp	w3, w0
  408154:	b.hi	408194 <sprint_time@@Base+0x64>  // b.pmore
  408158:	cmp	w3, #0x3e7
  40815c:	b.ls	4081bc <sprint_time@@Base+0x8c>  // b.plast
  408160:	mov	x0, #0x400000000000        	// #70368744177664
  408164:	movk	x0, #0x408f, lsl #48
  408168:	fmov	d1, x0
  40816c:	fdiv	d0, d0, d1
  408170:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408174:	add	x2, x2, #0x528
  408178:	mov	x1, #0x3f                  	// #63
  40817c:	mov	x0, x19
  408180:	bl	404c80 <snprintf@plt>
  408184:	mov	x0, x19
  408188:	ldr	x19, [sp, #16]
  40818c:	ldp	x29, x30, [sp], #32
  408190:	ret
  408194:	mov	x0, #0x848000000000        	// #145685290680320
  408198:	movk	x0, #0x412e, lsl #48
  40819c:	fmov	d1, x0
  4081a0:	fdiv	d0, d0, d1
  4081a4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4081a8:	add	x2, x2, #0x520
  4081ac:	mov	x1, #0x3f                  	// #63
  4081b0:	mov	x0, x19
  4081b4:	bl	404c80 <snprintf@plt>
  4081b8:	b	408184 <sprint_time@@Base+0x54>
  4081bc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4081c0:	add	x2, x2, #0x530
  4081c4:	mov	x1, #0x3f                  	// #63
  4081c8:	mov	x0, x19
  4081cc:	bl	404c80 <snprintf@plt>
  4081d0:	b	408184 <sprint_time@@Base+0x54>

00000000004081d4 <get_time64@@Base>:
  4081d4:	stp	x29, x30, [sp, #-64]!
  4081d8:	mov	x29, sp
  4081dc:	stp	x19, x20, [sp, #16]
  4081e0:	str	x21, [sp, #32]
  4081e4:	mov	x21, x0
  4081e8:	mov	x19, x1
  4081ec:	add	x1, sp, #0x38
  4081f0:	mov	x0, x19
  4081f4:	bl	404be0 <strtod@plt>
  4081f8:	ldr	x20, [sp, #56]
  4081fc:	cmp	x20, x19
  408200:	b.eq	408368 <get_time64@@Base+0x194>  // b.none
  408204:	str	d8, [sp, #40]
  408208:	fmov	d8, d0
  40820c:	ldrb	w0, [x20]
  408210:	cbz	w0, 408260 <get_time64@@Base+0x8c>
  408214:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408218:	add	x1, x1, #0xa28
  40821c:	mov	x0, x20
  408220:	bl	404d70 <strcasecmp@plt>
  408224:	cbz	w0, 408250 <get_time64@@Base+0x7c>
  408228:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40822c:	add	x1, x1, #0xe0
  408230:	mov	x0, x20
  408234:	bl	404d70 <strcasecmp@plt>
  408238:	cbz	w0, 408250 <get_time64@@Base+0x7c>
  40823c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408240:	add	x1, x1, #0xe8
  408244:	mov	x0, x20
  408248:	bl	404d70 <strcasecmp@plt>
  40824c:	cbnz	w0, 408280 <get_time64@@Base+0xac>
  408250:	mov	x0, #0xcd6500000000        	// #225833675390976
  408254:	movk	x0, #0x41cd, lsl #48
  408258:	fmov	d0, x0
  40825c:	fmul	d8, d8, d0
  408260:	fcvtzs	d8, d8
  408264:	str	d8, [x21]
  408268:	mov	w0, #0x0                   	// #0
  40826c:	ldr	d8, [sp, #40]
  408270:	ldp	x19, x20, [sp, #16]
  408274:	ldr	x21, [sp, #32]
  408278:	ldp	x29, x30, [sp], #64
  40827c:	ret
  408280:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408284:	add	x1, x1, #0xf0
  408288:	mov	x0, x20
  40828c:	bl	404d70 <strcasecmp@plt>
  408290:	cbz	w0, 4082bc <get_time64@@Base+0xe8>
  408294:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408298:	add	x1, x1, #0xf8
  40829c:	mov	x0, x20
  4082a0:	bl	404d70 <strcasecmp@plt>
  4082a4:	cbz	w0, 4082bc <get_time64@@Base+0xe8>
  4082a8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4082ac:	add	x1, x1, #0x100
  4082b0:	mov	x0, x20
  4082b4:	bl	404d70 <strcasecmp@plt>
  4082b8:	cbnz	w0, 4082d0 <get_time64@@Base+0xfc>
  4082bc:	mov	x0, #0x848000000000        	// #145685290680320
  4082c0:	movk	x0, #0x412e, lsl #48
  4082c4:	fmov	d0, x0
  4082c8:	fmul	d8, d8, d0
  4082cc:	b	408260 <get_time64@@Base+0x8c>
  4082d0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4082d4:	add	x1, x1, #0x508
  4082d8:	mov	x0, x20
  4082dc:	bl	404d70 <strcasecmp@plt>
  4082e0:	cbz	w0, 40830c <get_time64@@Base+0x138>
  4082e4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4082e8:	add	x1, x1, #0x510
  4082ec:	mov	x0, x20
  4082f0:	bl	404d70 <strcasecmp@plt>
  4082f4:	cbz	w0, 40830c <get_time64@@Base+0x138>
  4082f8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  4082fc:	add	x1, x1, #0x518
  408300:	mov	x0, x20
  408304:	bl	404d70 <strcasecmp@plt>
  408308:	cbnz	w0, 408320 <get_time64@@Base+0x14c>
  40830c:	mov	x0, #0x400000000000        	// #70368744177664
  408310:	movk	x0, #0x408f, lsl #48
  408314:	fmov	d0, x0
  408318:	fmul	d8, d8, d0
  40831c:	b	408260 <get_time64@@Base+0x8c>
  408320:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408324:	add	x1, x1, #0x538
  408328:	mov	x0, x20
  40832c:	bl	404d70 <strcasecmp@plt>
  408330:	cbz	w0, 408260 <get_time64@@Base+0x8c>
  408334:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408338:	add	x1, x1, #0x540
  40833c:	mov	x0, x20
  408340:	bl	404d70 <strcasecmp@plt>
  408344:	cbz	w0, 408260 <get_time64@@Base+0x8c>
  408348:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40834c:	add	x1, x1, #0x548
  408350:	mov	x0, x20
  408354:	bl	404d70 <strcasecmp@plt>
  408358:	cbz	w0, 408260 <get_time64@@Base+0x8c>
  40835c:	mov	w0, #0xffffffff            	// #-1
  408360:	ldr	d8, [sp, #40]
  408364:	b	408270 <get_time64@@Base+0x9c>
  408368:	mov	w0, #0xffffffff            	// #-1
  40836c:	b	408270 <get_time64@@Base+0x9c>

0000000000408370 <sprint_time64@@Base>:
  408370:	stp	x29, x30, [sp, #-32]!
  408374:	mov	x29, sp
  408378:	str	x19, [sp, #16]
  40837c:	mov	x3, x0
  408380:	mov	x19, x1
  408384:	scvtf	d0, x0
  408388:	mov	x0, #0xc9ff                	// #51711
  40838c:	movk	x0, #0x3b9a, lsl #16
  408390:	cmp	x3, x0
  408394:	b.gt	4083d8 <sprint_time64@@Base+0x68>
  408398:	mov	x0, #0x423f                	// #16959
  40839c:	movk	x0, #0xf, lsl #16
  4083a0:	cmp	x3, x0
  4083a4:	b.gt	40840c <sprint_time64@@Base+0x9c>
  4083a8:	cmp	x3, #0x3e7
  4083ac:	b.le	408434 <sprint_time64@@Base+0xc4>
  4083b0:	mov	x0, #0x400000000000        	// #70368744177664
  4083b4:	movk	x0, #0x408f, lsl #48
  4083b8:	fmov	d1, x0
  4083bc:	fdiv	d0, d0, d1
  4083c0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4083c4:	add	x2, x2, #0x560
  4083c8:	mov	x1, #0x3f                  	// #63
  4083cc:	mov	x0, x19
  4083d0:	bl	404c80 <snprintf@plt>
  4083d4:	b	4083fc <sprint_time64@@Base+0x8c>
  4083d8:	mov	x0, #0xcd6500000000        	// #225833675390976
  4083dc:	movk	x0, #0x41cd, lsl #48
  4083e0:	fmov	d1, x0
  4083e4:	fdiv	d0, d0, d1
  4083e8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4083ec:	add	x2, x2, #0x550
  4083f0:	mov	x1, #0x3f                  	// #63
  4083f4:	mov	x0, x19
  4083f8:	bl	404c80 <snprintf@plt>
  4083fc:	mov	x0, x19
  408400:	ldr	x19, [sp, #16]
  408404:	ldp	x29, x30, [sp], #32
  408408:	ret
  40840c:	mov	x0, #0x848000000000        	// #145685290680320
  408410:	movk	x0, #0x412e, lsl #48
  408414:	fmov	d1, x0
  408418:	fdiv	d0, d0, d1
  40841c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408420:	add	x2, x2, #0x558
  408424:	mov	x1, #0x3f                  	// #63
  408428:	mov	x0, x19
  40842c:	bl	404c80 <snprintf@plt>
  408430:	b	4083fc <sprint_time64@@Base+0x8c>
  408434:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408438:	add	x2, x2, #0x568
  40843c:	mov	x1, #0x3f                  	// #63
  408440:	mov	x0, x19
  408444:	bl	404c80 <snprintf@plt>
  408448:	b	4083fc <sprint_time64@@Base+0x8c>
  40844c:	mov	w2, w0
  408450:	and	x1, x2, #0x3ff
  408454:	adrp	x0, 423000 <stderr@@GLIBC_2.17+0x1d38>
  408458:	add	x0, x0, #0xd10
  40845c:	ldr	x0, [x0, x1, lsl #3]
  408460:	cbz	x0, 408478 <sprint_time64@@Base+0x108>
  408464:	ldr	w1, [x0, #36]
  408468:	cmp	w1, w2
  40846c:	b.eq	408478 <sprint_time64@@Base+0x108>  // b.none
  408470:	ldr	x0, [x0]
  408474:	cbnz	x0, 408464 <sprint_time64@@Base+0xf4>
  408478:	ret
  40847c:	stp	x29, x30, [sp, #-32]!
  408480:	mov	x29, sp
  408484:	stp	x19, x20, [sp, #16]
  408488:	mov	x20, x0
  40848c:	ldr	x0, [x0, #48]
  408490:	ldr	x19, [x0], #-48
  408494:	sub	x19, x19, #0x30
  408498:	cmp	x20, x0
  40849c:	b.ne	4084d8 <sprint_time64@@Base+0x168>  // b.any
  4084a0:	ldp	x19, x20, [sp, #16]
  4084a4:	ldp	x29, x30, [sp], #32
  4084a8:	ret
  4084ac:	ldr	x1, [x0, #56]
  4084b0:	ldr	x2, [x0, #48]
  4084b4:	str	x1, [x2, #8]
  4084b8:	str	x2, [x1]
  4084bc:	bl	404e90 <free@plt>
  4084c0:	ldr	x1, [x19, #48]
  4084c4:	sub	x1, x1, #0x30
  4084c8:	mov	x0, x19
  4084cc:	cmp	x20, x19
  4084d0:	b.eq	4084a0 <sprint_time64@@Base+0x130>  // b.none
  4084d4:	mov	x19, x1
  4084d8:	ldr	x1, [x0, #16]
  4084dc:	ldr	x2, [x0, #24]
  4084e0:	str	x1, [x2]
  4084e4:	cbz	x1, 4084ac <sprint_time64@@Base+0x13c>
  4084e8:	str	x2, [x1, #8]
  4084ec:	b	4084ac <sprint_time64@@Base+0x13c>

00000000004084f0 <namehash@@Base>:
  4084f0:	mov	x2, x0
  4084f4:	ldrb	w1, [x0]
  4084f8:	cbz	w1, 408514 <namehash@@Base+0x24>
  4084fc:	mov	w0, #0x1505                	// #5381
  408500:	add	w1, w1, w0, lsl #5
  408504:	add	w0, w0, w1
  408508:	ldrb	w1, [x2, #1]!
  40850c:	cbnz	w1, 408500 <namehash@@Base+0x10>
  408510:	ret
  408514:	mov	w0, #0x1505                	// #5381
  408518:	b	408510 <namehash@@Base+0x20>
  40851c:	stp	x29, x30, [sp, #-64]!
  408520:	mov	x29, sp
  408524:	stp	x19, x20, [sp, #16]
  408528:	stp	x21, x22, [sp, #32]
  40852c:	mov	x21, x0
  408530:	mov	x22, x1
  408534:	mov	x20, x2
  408538:	mov	x0, x1
  40853c:	bl	404ba0 <strlen@plt>
  408540:	add	x0, x0, #0x41
  408544:	bl	404cd0 <malloc@plt>
  408548:	mov	x19, x0
  40854c:	cbz	x0, 4085e0 <namehash@@Base+0xf0>
  408550:	str	x23, [sp, #48]
  408554:	ldr	w23, [x21, #4]
  408558:	str	w23, [x0, #36]
  40855c:	mov	x1, x22
  408560:	add	x0, x0, #0x40
  408564:	bl	404f20 <strcpy@plt>
  408568:	ldrh	w0, [x21, #2]
  40856c:	strh	w0, [x19, #40]
  408570:	ldr	w0, [x21, #8]
  408574:	str	w0, [x19, #32]
  408578:	cbz	x20, 4085f4 <namehash@@Base+0x104>
  40857c:	add	x0, x19, #0x30
  408580:	ldr	x1, [x20, #56]
  408584:	str	x0, [x20, #56]
  408588:	add	x20, x20, #0x30
  40858c:	str	x20, [x19, #48]
  408590:	str	x1, [x19, #56]
  408594:	str	x0, [x1]
  408598:	mov	x0, x22
  40859c:	bl	4084f0 <namehash@@Base>
  4085a0:	and	w1, w0, #0x3ff
  4085a4:	add	x3, x19, #0x10
  4085a8:	and	x0, x0, #0x3ff
  4085ac:	adrp	x2, 421000 <memcpy@GLIBC_2.17>
  4085b0:	add	x2, x2, #0xd10
  4085b4:	ldr	x0, [x2, x0, lsl #3]
  4085b8:	str	x0, [x19, #16]
  4085bc:	cbz	x0, 4085c4 <namehash@@Base+0xd4>
  4085c0:	str	x3, [x0, #8]
  4085c4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4085c8:	add	x2, x0, #0xd10
  4085cc:	mov	w0, w1
  4085d0:	str	x3, [x2, x0, lsl #3]
  4085d4:	add	x0, x2, x0, lsl #3
  4085d8:	str	x0, [x19, #24]
  4085dc:	ldr	x23, [sp, #48]
  4085e0:	mov	x0, x19
  4085e4:	ldp	x19, x20, [sp, #16]
  4085e8:	ldp	x21, x22, [sp, #32]
  4085ec:	ldp	x29, x30, [sp], #64
  4085f0:	ret
  4085f4:	and	w1, w23, #0x3ff
  4085f8:	and	x23, x23, #0x3ff
  4085fc:	adrp	x0, 423000 <stderr@@GLIBC_2.17+0x1d38>
  408600:	add	x0, x0, #0xd10
  408604:	ldr	x0, [x0, x23, lsl #3]
  408608:	str	x0, [x19]
  40860c:	cbz	x0, 408614 <namehash@@Base+0x124>
  408610:	str	x19, [x0, #8]
  408614:	adrp	x0, 423000 <stderr@@GLIBC_2.17+0x1d38>
  408618:	add	x2, x0, #0xd10
  40861c:	mov	w0, w1
  408620:	str	x19, [x2, x0, lsl #3]
  408624:	add	x0, x2, x0, lsl #3
  408628:	str	x0, [x19, #8]
  40862c:	add	x0, x19, #0x30
  408630:	str	x0, [x19, #48]
  408634:	str	x0, [x19, #56]
  408638:	b	408598 <namehash@@Base+0xa8>
  40863c:	stp	x29, x30, [sp, #-48]!
  408640:	mov	x29, sp
  408644:	stp	x19, x20, [sp, #16]
  408648:	ldr	x19, [x2, #416]
  40864c:	cbz	x19, 4086d8 <namehash@@Base+0x1e8>
  408650:	stp	x21, x22, [sp, #32]
  408654:	mov	x21, x0
  408658:	mov	x22, x1
  40865c:	ldrh	w20, [x19], #4
  408660:	sub	w20, w20, #0x4
  408664:	cmp	w20, #0x3
  408668:	b.gt	408690 <namehash@@Base+0x1a0>
  40866c:	ldp	x21, x22, [sp, #32]
  408670:	b	4086d8 <namehash@@Base+0x1e8>
  408674:	ldrh	w2, [x19]
  408678:	add	w2, w2, #0x3
  40867c:	and	w2, w2, #0xfffffffc
  408680:	sub	w20, w20, w2
  408684:	add	x19, x19, w2, uxtw
  408688:	cmp	w20, #0x3
  40868c:	b.le	4086cc <namehash@@Base+0x1dc>
  408690:	ldrh	w2, [x19]
  408694:	cmp	w2, #0x3
  408698:	b.ls	4086d4 <namehash@@Base+0x1e4>  // b.plast
  40869c:	cmp	w2, w20
  4086a0:	b.gt	4086c4 <namehash@@Base+0x1d4>
  4086a4:	ldrh	w0, [x19, #2]
  4086a8:	cmp	w0, #0x35
  4086ac:	b.ne	408674 <namehash@@Base+0x184>  // b.any
  4086b0:	mov	x2, x21
  4086b4:	add	x1, x19, #0x4
  4086b8:	mov	x0, x22
  4086bc:	bl	40851c <namehash@@Base+0x2c>
  4086c0:	b	408674 <namehash@@Base+0x184>
  4086c4:	ldp	x21, x22, [sp, #32]
  4086c8:	b	4086d8 <namehash@@Base+0x1e8>
  4086cc:	ldp	x21, x22, [sp, #32]
  4086d0:	b	4086d8 <namehash@@Base+0x1e8>
  4086d4:	ldp	x21, x22, [sp, #32]
  4086d8:	ldp	x19, x20, [sp, #16]
  4086dc:	ldp	x29, x30, [sp], #48
  4086e0:	ret

00000000004086e4 <ll_remember_index@@Base>:
  4086e4:	stp	x29, x30, [sp, #-496]!
  4086e8:	mov	x29, sp
  4086ec:	stp	x19, x20, [sp, #16]
  4086f0:	mov	x19, x0
  4086f4:	ldrh	w20, [x0, #4]
  4086f8:	sub	w0, w20, #0x10
  4086fc:	and	w0, w0, #0xffff
  408700:	cmp	w0, #0x1
  408704:	b.hi	408918 <ll_remember_index@@Base+0x234>  // b.pmore
  408708:	stp	x21, x22, [sp, #32]
  40870c:	ldr	w21, [x19]
  408710:	cmp	w21, #0x1f
  408714:	b.ls	408928 <ll_remember_index@@Base+0x244>  // b.plast
  408718:	ldr	w0, [x19, #20]
  40871c:	bl	40844c <sprint_time64@@Base+0xdc>
  408720:	mov	x22, x0
  408724:	cmp	w20, #0x11
  408728:	b.eq	408814 <ll_remember_index@@Base+0x130>  // b.none
  40872c:	stp	x23, x24, [sp, #48]
  408730:	add	x23, x19, #0x10
  408734:	mov	w4, #0xffff8000            	// #-32768
  408738:	sub	w3, w21, #0x20
  40873c:	add	x2, x19, #0x20
  408740:	mov	w1, #0x35                  	// #53
  408744:	add	x0, sp, #0x40
  408748:	bl	40cb2c <parse_rtattr_flags@@Base>
  40874c:	cbz	x22, 4088d0 <ll_remember_index@@Base+0x1ec>
  408750:	ldr	x0, [sp, #88]
  408754:	cbz	x0, 4087cc <ll_remember_index@@Base+0xe8>
  408758:	add	x20, x0, #0x4
  40875c:	ldr	w0, [x19, #24]
  408760:	str	w0, [x22, #32]
  408764:	mov	x1, x20
  408768:	add	x0, x22, #0x40
  40876c:	bl	404e30 <strcmp@plt>
  408770:	cbz	w0, 4087cc <ll_remember_index@@Base+0xe8>
  408774:	ldr	x0, [x22, #16]
  408778:	ldr	x1, [x22, #24]
  40877c:	str	x0, [x1]
  408780:	cbz	x0, 408788 <ll_remember_index@@Base+0xa4>
  408784:	str	x1, [x0, #8]
  408788:	mov	x0, x20
  40878c:	bl	4084f0 <namehash@@Base>
  408790:	and	w1, w0, #0x3ff
  408794:	add	x3, x22, #0x10
  408798:	and	x0, x0, #0x3ff
  40879c:	adrp	x2, 421000 <memcpy@GLIBC_2.17>
  4087a0:	add	x2, x2, #0xd10
  4087a4:	ldr	x0, [x2, x0, lsl #3]
  4087a8:	str	x0, [x22, #16]
  4087ac:	cbz	x0, 4087b4 <ll_remember_index@@Base+0xd0>
  4087b0:	str	x3, [x0, #8]
  4087b4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  4087b8:	add	x2, x0, #0xd10
  4087bc:	mov	w0, w1
  4087c0:	str	x3, [x2, x0, lsl #3]
  4087c4:	add	x0, x2, x0, lsl #3
  4087c8:	str	x0, [x22, #24]
  4087cc:	ldr	x21, [sp, #480]
  4087d0:	cbz	x21, 408860 <ll_remember_index@@Base+0x17c>
  4087d4:	ldr	x20, [x22, #48]
  4087d8:	sub	x20, x20, #0x30
  4087dc:	ldrh	w24, [x21], #4
  4087e0:	sub	w24, w24, #0x4
  4087e4:	cmp	w24, #0x3
  4087e8:	b.gt	408890 <ll_remember_index@@Base+0x1ac>
  4087ec:	mov	x0, x22
  4087f0:	bl	40847c <sprint_time64@@Base+0x10c>
  4087f4:	add	x2, sp, #0x40
  4087f8:	mov	x1, x23
  4087fc:	mov	x0, x22
  408800:	bl	40863c <namehash@@Base+0x14c>
  408804:	mov	w0, #0x0                   	// #0
  408808:	ldp	x21, x22, [sp, #32]
  40880c:	ldp	x23, x24, [sp, #48]
  408810:	b	40891c <ll_remember_index@@Base+0x238>
  408814:	mov	w0, #0x0                   	// #0
  408818:	cbz	x22, 408934 <ll_remember_index@@Base+0x250>
  40881c:	mov	x0, x22
  408820:	bl	40847c <sprint_time64@@Base+0x10c>
  408824:	ldr	x0, [x22, #16]
  408828:	ldr	x1, [x22, #24]
  40882c:	str	x0, [x1]
  408830:	cbz	x0, 408838 <ll_remember_index@@Base+0x154>
  408834:	str	x1, [x0, #8]
  408838:	ldr	x0, [x22]
  40883c:	ldr	x1, [x22, #8]
  408840:	str	x0, [x1]
  408844:	cbz	x0, 40884c <ll_remember_index@@Base+0x168>
  408848:	str	x1, [x0, #8]
  40884c:	mov	x0, x22
  408850:	bl	404e90 <free@plt>
  408854:	mov	w0, #0x0                   	// #0
  408858:	ldp	x21, x22, [sp, #32]
  40885c:	b	40891c <ll_remember_index@@Base+0x238>
  408860:	mov	x0, x22
  408864:	bl	40847c <sprint_time64@@Base+0x10c>
  408868:	mov	w0, #0x0                   	// #0
  40886c:	ldp	x21, x22, [sp, #32]
  408870:	ldp	x23, x24, [sp, #48]
  408874:	b	40891c <ll_remember_index@@Base+0x238>
  408878:	add	w19, w19, #0x3
  40887c:	and	w19, w19, #0xfffffffc
  408880:	sub	w24, w24, w19
  408884:	add	x21, x21, w19, uxtw
  408888:	cmp	w24, #0x3
  40888c:	b.le	4087ec <ll_remember_index@@Base+0x108>
  408890:	ldrh	w19, [x21]
  408894:	cmp	w19, #0x3
  408898:	b.ls	4087ec <ll_remember_index@@Base+0x108>  // b.plast
  40889c:	cmp	w24, w19
  4088a0:	b.lt	4087ec <ll_remember_index@@Base+0x108>  // b.tstop
  4088a4:	ldrh	w0, [x21, #2]
  4088a8:	cmp	w0, #0x35
  4088ac:	b.ne	408878 <ll_remember_index@@Base+0x194>  // b.any
  4088b0:	cbz	x20, 4087ec <ll_remember_index@@Base+0x108>
  4088b4:	add	x1, x20, #0x40
  4088b8:	add	x0, x21, #0x4
  4088bc:	bl	404e30 <strcmp@plt>
  4088c0:	cbnz	w0, 4087ec <ll_remember_index@@Base+0x108>
  4088c4:	ldr	x20, [x20, #48]
  4088c8:	sub	x20, x20, #0x30
  4088cc:	b	408878 <ll_remember_index@@Base+0x194>
  4088d0:	ldr	x1, [sp, #88]
  4088d4:	mov	w0, #0x0                   	// #0
  4088d8:	cbz	x1, 40893c <ll_remember_index@@Base+0x258>
  4088dc:	mov	x2, #0x0                   	// #0
  4088e0:	add	x1, x1, #0x4
  4088e4:	mov	x0, x23
  4088e8:	bl	40851c <namehash@@Base+0x2c>
  4088ec:	mov	x3, x0
  4088f0:	mov	w0, #0x0                   	// #0
  4088f4:	cbz	x3, 408948 <ll_remember_index@@Base+0x264>
  4088f8:	add	x2, sp, #0x40
  4088fc:	mov	x1, x23
  408900:	mov	x0, x3
  408904:	bl	40863c <namehash@@Base+0x14c>
  408908:	mov	w0, #0x0                   	// #0
  40890c:	ldp	x21, x22, [sp, #32]
  408910:	ldp	x23, x24, [sp, #48]
  408914:	b	40891c <ll_remember_index@@Base+0x238>
  408918:	mov	w0, #0x0                   	// #0
  40891c:	ldp	x19, x20, [sp, #16]
  408920:	ldp	x29, x30, [sp], #496
  408924:	ret
  408928:	mov	w0, #0xffffffff            	// #-1
  40892c:	ldp	x21, x22, [sp, #32]
  408930:	b	40891c <ll_remember_index@@Base+0x238>
  408934:	ldp	x21, x22, [sp, #32]
  408938:	b	40891c <ll_remember_index@@Base+0x238>
  40893c:	ldp	x21, x22, [sp, #32]
  408940:	ldp	x23, x24, [sp, #48]
  408944:	b	40891c <ll_remember_index@@Base+0x238>
  408948:	ldp	x21, x22, [sp, #32]
  40894c:	ldp	x23, x24, [sp, #48]
  408950:	b	40891c <ll_remember_index@@Base+0x238>
  408954:	sub	sp, sp, #0x480
  408958:	stp	x29, x30, [sp]
  40895c:	mov	x29, sp
  408960:	stp	x19, x20, [sp, #16]
  408964:	mov	x19, x0
  408968:	mov	w20, w1
  40896c:	mov	x2, #0x420                 	// #1056
  408970:	mov	w1, #0x0                   	// #0
  408974:	add	x0, sp, #0x60
  408978:	bl	404d30 <memset@plt>
  40897c:	mov	w0, #0x20                  	// #32
  408980:	str	w0, [sp, #96]
  408984:	mov	w0, #0x12                  	// #18
  408988:	strh	w0, [sp, #100]
  40898c:	mov	w0, #0x1                   	// #1
  408990:	strh	w0, [sp, #102]
  408994:	str	w20, [sp, #116]
  408998:	stp	xzr, xzr, [sp, #40]
  40899c:	stp	xzr, xzr, [sp, #56]
  4089a0:	stp	xzr, xzr, [sp, #72]
  4089a4:	str	xzr, [sp, #88]
  4089a8:	mov	w1, #0x0                   	// #0
  4089ac:	add	x0, sp, #0x28
  4089b0:	bl	40b268 <rtnl_open@@Base>
  4089b4:	tbnz	w0, #31, 408a60 <ll_remember_index@@Base+0x37c>
  4089b8:	mov	w3, #0x9                   	// #9
  4089bc:	mov	w2, #0x1d                  	// #29
  4089c0:	mov	w1, #0x420                 	// #1056
  4089c4:	add	x0, sp, #0x60
  4089c8:	bl	40c700 <addattr32@@Base>
  4089cc:	cbz	x19, 408a08 <ll_remember_index@@Base+0x324>
  4089d0:	mov	x0, x19
  4089d4:	bl	4069a8 <check_ifname@@Base>
  4089d8:	cmp	w0, #0x0
  4089dc:	mov	w20, #0x3                   	// #3
  4089e0:	mov	w0, #0x35                  	// #53
  4089e4:	csel	w20, w20, w0, eq  // eq = none
  4089e8:	mov	x0, x19
  4089ec:	bl	404ba0 <strlen@plt>
  4089f0:	add	w4, w0, #0x1
  4089f4:	mov	x3, x19
  4089f8:	mov	w2, w20
  4089fc:	mov	w1, #0x420                 	// #1056
  408a00:	add	x0, sp, #0x60
  408a04:	bl	40c604 <addattr_l@@Base>
  408a08:	add	x2, sp, #0x20
  408a0c:	add	x1, sp, #0x60
  408a10:	add	x0, sp, #0x28
  408a14:	bl	40c02c <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408a18:	mov	w19, #0x0                   	// #0
  408a1c:	tbnz	w0, #31, 408a44 <ll_remember_index@@Base+0x360>
  408a20:	mov	x1, #0x0                   	// #0
  408a24:	ldr	x0, [sp, #32]
  408a28:	bl	4086e4 <ll_remember_index@@Base>
  408a2c:	mov	w19, w0
  408a30:	cbnz	w0, 408a3c <ll_remember_index@@Base+0x358>
  408a34:	ldr	x0, [sp, #32]
  408a38:	ldr	w19, [x0, #20]
  408a3c:	ldr	x0, [sp, #32]
  408a40:	bl	404e90 <free@plt>
  408a44:	add	x0, sp, #0x28
  408a48:	bl	40b06c <rtnl_close@@Base>
  408a4c:	mov	w0, w19
  408a50:	ldp	x19, x20, [sp, #16]
  408a54:	ldp	x29, x30, [sp]
  408a58:	add	sp, sp, #0x480
  408a5c:	ret
  408a60:	mov	w19, #0x0                   	// #0
  408a64:	b	408a4c <ll_remember_index@@Base+0x368>

0000000000408a68 <ll_idx_n2a@@Base>:
  408a68:	stp	x29, x30, [sp, #-32]!
  408a6c:	mov	x29, sp
  408a70:	str	x19, [sp, #16]
  408a74:	adrp	x19, 421000 <memcpy@GLIBC_2.17>
  408a78:	add	x19, x19, #0xce8
  408a7c:	mov	w3, w0
  408a80:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408a84:	add	x2, x2, #0x578
  408a88:	mov	x1, #0x10                  	// #16
  408a8c:	mov	x0, x19
  408a90:	bl	404c80 <snprintf@plt>
  408a94:	mov	x0, x19
  408a98:	ldr	x19, [sp, #16]
  408a9c:	ldp	x29, x30, [sp], #32
  408aa0:	ret

0000000000408aa4 <ll_index_to_name@@Base>:
  408aa4:	cbnz	w0, 408ab4 <ll_index_to_name@@Base+0x10>
  408aa8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  408aac:	add	x0, x0, #0x580
  408ab0:	ret
  408ab4:	stp	x29, x30, [sp, #-32]!
  408ab8:	mov	x29, sp
  408abc:	stp	x19, x20, [sp, #16]
  408ac0:	mov	w20, w0
  408ac4:	bl	40844c <sprint_time64@@Base+0xdc>
  408ac8:	cbz	x0, 408adc <ll_index_to_name@@Base+0x38>
  408acc:	add	x0, x0, #0x40
  408ad0:	ldp	x19, x20, [sp, #16]
  408ad4:	ldp	x29, x30, [sp], #32
  408ad8:	ret
  408adc:	mov	w1, w20
  408ae0:	mov	x0, #0x0                   	// #0
  408ae4:	bl	408954 <ll_remember_index@@Base+0x270>
  408ae8:	cmp	w0, w20
  408aec:	b.eq	408b18 <ll_index_to_name@@Base+0x74>  // b.none
  408af0:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  408af4:	add	x1, x1, #0xce8
  408af8:	add	x1, x1, #0x10
  408afc:	mov	w0, w20
  408b00:	bl	404d20 <if_indextoname@plt>
  408b04:	cbz	x0, 408b30 <ll_index_to_name@@Base+0x8c>
  408b08:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  408b0c:	add	x0, x0, #0xce8
  408b10:	add	x0, x0, #0x10
  408b14:	b	408ad0 <ll_index_to_name@@Base+0x2c>
  408b18:	mov	w0, w20
  408b1c:	bl	40844c <sprint_time64@@Base+0xdc>
  408b20:	mov	x1, x0
  408b24:	add	x0, x0, #0x40
  408b28:	cbnz	x1, 408ad0 <ll_index_to_name@@Base+0x2c>
  408b2c:	b	408af0 <ll_index_to_name@@Base+0x4c>
  408b30:	adrp	x19, 421000 <memcpy@GLIBC_2.17>
  408b34:	add	x19, x19, #0xce8
  408b38:	add	x19, x19, #0x10
  408b3c:	mov	w3, w20
  408b40:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408b44:	add	x2, x2, #0x578
  408b48:	mov	x1, #0x10                  	// #16
  408b4c:	mov	x0, x19
  408b50:	bl	404c80 <snprintf@plt>
  408b54:	mov	x0, x19
  408b58:	b	408ad0 <ll_index_to_name@@Base+0x2c>

0000000000408b5c <ll_index_to_type@@Base>:
  408b5c:	cbz	w0, 408b7c <ll_index_to_type@@Base+0x20>
  408b60:	stp	x29, x30, [sp, #-16]!
  408b64:	mov	x29, sp
  408b68:	bl	40844c <sprint_time64@@Base+0xdc>
  408b6c:	cbz	x0, 408b84 <ll_index_to_type@@Base+0x28>
  408b70:	ldrh	w0, [x0, #40]
  408b74:	ldp	x29, x30, [sp], #16
  408b78:	ret
  408b7c:	mov	w0, #0xffffffff            	// #-1
  408b80:	ret
  408b84:	mov	w0, #0xffffffff            	// #-1
  408b88:	b	408b74 <ll_index_to_type@@Base+0x18>

0000000000408b8c <ll_index_to_flags@@Base>:
  408b8c:	cbnz	w0, 408b98 <ll_index_to_flags@@Base+0xc>
  408b90:	mov	w0, #0x0                   	// #0
  408b94:	ret
  408b98:	stp	x29, x30, [sp, #-16]!
  408b9c:	mov	x29, sp
  408ba0:	bl	40844c <sprint_time64@@Base+0xdc>
  408ba4:	cbz	x0, 408bb4 <ll_index_to_flags@@Base+0x28>
  408ba8:	ldr	w0, [x0, #32]
  408bac:	ldp	x29, x30, [sp], #16
  408bb0:	ret
  408bb4:	mov	w0, #0xffffffff            	// #-1
  408bb8:	b	408bac <ll_index_to_flags@@Base+0x20>

0000000000408bbc <ll_name_to_index@@Base>:
  408bbc:	stp	x29, x30, [sp, #-48]!
  408bc0:	mov	x29, sp
  408bc4:	stp	x19, x20, [sp, #16]
  408bc8:	mov	w20, #0x0                   	// #0
  408bcc:	cbz	x0, 408c50 <ll_name_to_index@@Base+0x94>
  408bd0:	mov	x19, x0
  408bd4:	bl	4084f0 <namehash@@Base>
  408bd8:	and	x0, x0, #0x3ff
  408bdc:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  408be0:	add	x1, x1, #0xd10
  408be4:	ldr	x20, [x1, x0, lsl #3]
  408be8:	cbz	x20, 408c04 <ll_name_to_index@@Base+0x48>
  408bec:	mov	x1, x19
  408bf0:	add	x0, x20, #0x30
  408bf4:	bl	404e30 <strcmp@plt>
  408bf8:	cbz	w0, 408c4c <ll_name_to_index@@Base+0x90>
  408bfc:	ldr	x20, [x20]
  408c00:	cbnz	x20, 408bec <ll_name_to_index@@Base+0x30>
  408c04:	mov	w1, #0x0                   	// #0
  408c08:	mov	x0, x19
  408c0c:	bl	408954 <ll_remember_index@@Base+0x270>
  408c10:	mov	w20, w0
  408c14:	cbnz	w0, 408c50 <ll_name_to_index@@Base+0x94>
  408c18:	mov	x0, x19
  408c1c:	bl	404f90 <if_nametoindex@plt>
  408c20:	mov	w20, w0
  408c24:	cbnz	w0, 408c50 <ll_name_to_index@@Base+0x94>
  408c28:	add	x2, sp, #0x2c
  408c2c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408c30:	add	x1, x1, #0x578
  408c34:	mov	x0, x19
  408c38:	bl	404fc0 <__isoc99_sscanf@plt>
  408c3c:	cmp	w0, #0x1
  408c40:	ldr	w0, [sp, #44]
  408c44:	csel	w20, w0, w20, eq  // eq = none
  408c48:	b	408c50 <ll_name_to_index@@Base+0x94>
  408c4c:	ldr	w20, [x20, #20]
  408c50:	mov	w0, w20
  408c54:	ldp	x19, x20, [sp, #16]
  408c58:	ldp	x29, x30, [sp], #48
  408c5c:	ret

0000000000408c60 <ll_drop_by_index@@Base>:
  408c60:	stp	x29, x30, [sp, #-16]!
  408c64:	mov	x29, sp
  408c68:	bl	40844c <sprint_time64@@Base+0xdc>
  408c6c:	cbz	x0, 408c9c <ll_drop_by_index@@Base+0x3c>
  408c70:	ldr	x1, [x0]
  408c74:	ldr	x2, [x0, #8]
  408c78:	str	x1, [x2]
  408c7c:	cbz	x1, 408c84 <ll_drop_by_index@@Base+0x24>
  408c80:	str	x2, [x1, #8]
  408c84:	ldr	x1, [x0, #16]
  408c88:	ldr	x2, [x0, #24]
  408c8c:	str	x1, [x2]
  408c90:	cbz	x1, 408c98 <ll_drop_by_index@@Base+0x38>
  408c94:	str	x2, [x1, #8]
  408c98:	bl	404e90 <free@plt>
  408c9c:	ldp	x29, x30, [sp], #16
  408ca0:	ret

0000000000408ca4 <ll_init_map@@Base>:
  408ca4:	stp	x29, x30, [sp, #-32]!
  408ca8:	mov	x29, sp
  408cac:	str	x19, [sp, #16]
  408cb0:	mov	x19, x0
  408cb4:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  408cb8:	ldr	w0, [x0, #3336]
  408cbc:	cbz	w0, 408ccc <ll_init_map@@Base+0x28>
  408cc0:	ldr	x19, [sp, #16]
  408cc4:	ldp	x29, x30, [sp], #32
  408cc8:	ret
  408ccc:	mov	w1, #0x0                   	// #0
  408cd0:	mov	x0, x19
  408cd4:	bl	40b7cc <rtnl_linkdump_req@@Base>
  408cd8:	tbnz	w0, #31, 408d08 <ll_init_map@@Base+0x64>
  408cdc:	mov	w3, #0x0                   	// #0
  408ce0:	mov	x2, #0x0                   	// #0
  408ce4:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x13258>
  408ce8:	ldr	x1, [x1, #4008]
  408cec:	mov	x0, x19
  408cf0:	bl	40bc14 <rtnl_dump_filter_nc@@Base>
  408cf4:	tbnz	w0, #31, 408d1c <ll_init_map@@Base+0x78>
  408cf8:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  408cfc:	mov	w1, #0x1                   	// #1
  408d00:	str	w1, [x0, #3336]
  408d04:	b	408cc0 <ll_init_map@@Base+0x1c>
  408d08:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  408d0c:	add	x0, x0, #0xfc8
  408d10:	bl	404bc0 <perror@plt>
  408d14:	mov	w0, #0x1                   	// #1
  408d18:	bl	404bb0 <exit@plt>
  408d1c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  408d20:	ldr	x0, [x0, #3992]
  408d24:	ldr	x3, [x0]
  408d28:	mov	x2, #0x10                  	// #16
  408d2c:	mov	x1, #0x1                   	// #1
  408d30:	adrp	x0, 40c000 <rtnl_talk@@Base+0x24>
  408d34:	add	x0, x0, #0xfe8
  408d38:	bl	404ef0 <fwrite@plt>
  408d3c:	mov	w0, #0x1                   	// #1
  408d40:	bl	404bb0 <exit@plt>

0000000000408d44 <ll_addr_n2a@@Base>:
  408d44:	stp	x29, x30, [sp, #-80]!
  408d48:	mov	x29, sp
  408d4c:	stp	x21, x22, [sp, #32]
  408d50:	stp	x23, x24, [sp, #48]
  408d54:	stp	x25, x26, [sp, #64]
  408d58:	mov	x22, x0
  408d5c:	mov	w21, w1
  408d60:	mov	x26, x3
  408d64:	mov	w23, w4
  408d68:	cmp	w1, #0x4
  408d6c:	b.eq	408e24 <ll_addr_n2a@@Base+0xe0>  // b.none
  408d70:	cmp	w1, #0x10
  408d74:	b.ne	408d88 <ll_addr_n2a@@Base+0x44>  // b.any
  408d78:	cmp	w2, #0x301
  408d7c:	mov	w0, #0x337                 	// #823
  408d80:	ccmp	w2, w0, #0x4, ne  // ne = any
  408d84:	b.eq	408e54 <ll_addr_n2a@@Base+0x110>  // b.none
  408d88:	sxtw	x24, w23
  408d8c:	ldrb	w3, [x22]
  408d90:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  408d94:	add	x2, x2, #0x3e8
  408d98:	mov	x1, x24
  408d9c:	mov	x0, x26
  408da0:	bl	404c80 <snprintf@plt>
  408da4:	cmp	w21, #0x1
  408da8:	ccmp	w23, #0x2, #0x4, gt
  408dac:	b.le	408e0c <ll_addr_n2a@@Base+0xc8>
  408db0:	stp	x19, x20, [sp, #16]
  408db4:	add	x20, x26, #0x2
  408db8:	mov	x19, #0x2                   	// #2
  408dbc:	sub	x22, x22, #0x1
  408dc0:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x258>
  408dc4:	add	x25, x25, #0x588
  408dc8:	add	x24, x26, x24
  408dcc:	ldrb	w3, [x22, x19]
  408dd0:	mov	x2, x25
  408dd4:	sub	x1, x24, x20
  408dd8:	mov	x0, x20
  408ddc:	bl	404c80 <snprintf@plt>
  408de0:	add	w2, w19, w19, lsl #1
  408de4:	sub	w2, w2, #0x1
  408de8:	cmp	w23, w2
  408dec:	cset	w1, gt
  408df0:	cmp	w21, w19
  408df4:	cset	w0, gt
  408df8:	add	x19, x19, #0x1
  408dfc:	add	x20, x20, #0x3
  408e00:	tst	w1, w0
  408e04:	b.ne	408dcc <ll_addr_n2a@@Base+0x88>  // b.any
  408e08:	ldp	x19, x20, [sp, #16]
  408e0c:	mov	x0, x26
  408e10:	ldp	x21, x22, [sp, #32]
  408e14:	ldp	x23, x24, [sp, #48]
  408e18:	ldp	x25, x26, [sp, #64]
  408e1c:	ldp	x29, x30, [sp], #80
  408e20:	ret
  408e24:	and	w0, w2, #0xfffffff7
  408e28:	cmp	w0, #0x300
  408e2c:	mov	w0, #0x30a                 	// #778
  408e30:	ccmp	w2, w0, #0x4, ne  // ne = any
  408e34:	b.ne	408d88 <ll_addr_n2a@@Base+0x44>  // b.any
  408e38:	mov	w3, w4
  408e3c:	mov	x2, x26
  408e40:	mov	x1, x22
  408e44:	mov	w0, #0x2                   	// #2
  408e48:	bl	405090 <inet_ntop@plt>
  408e4c:	mov	x26, x0
  408e50:	b	408e0c <ll_addr_n2a@@Base+0xc8>
  408e54:	mov	w3, w4
  408e58:	mov	x2, x26
  408e5c:	mov	x1, x22
  408e60:	mov	w0, #0xa                   	// #10
  408e64:	bl	405090 <inet_ntop@plt>
  408e68:	mov	x26, x0
  408e6c:	b	408e0c <ll_addr_n2a@@Base+0xc8>

0000000000408e70 <ll_addr_a2n@@Base>:
  408e70:	stp	x29, x30, [sp, #-368]!
  408e74:	mov	x29, sp
  408e78:	stp	x21, x22, [sp, #32]
  408e7c:	stp	x23, x24, [sp, #48]
  408e80:	stp	x25, x26, [sp, #64]
  408e84:	mov	x25, x0
  408e88:	mov	w23, w1
  408e8c:	mov	x21, x2
  408e90:	mov	w1, #0x2e                  	// #46
  408e94:	mov	x0, x2
  408e98:	bl	404ed0 <strchr@plt>
  408e9c:	cbz	x0, 408fb4 <ll_addr_a2n@@Base+0x144>
  408ea0:	mov	w2, #0x2                   	// #2
  408ea4:	mov	x1, x21
  408ea8:	add	x0, sp, #0x68
  408eac:	bl	406354 <get_addr_1@@Base>
  408eb0:	cbnz	w0, 408ed0 <ll_addr_a2n@@Base+0x60>
  408eb4:	mov	w0, #0xffffffff            	// #-1
  408eb8:	cmp	w23, #0x3
  408ebc:	b.le	408ff0 <ll_addr_a2n@@Base+0x180>
  408ec0:	ldr	w0, [sp, #112]
  408ec4:	str	w0, [x25]
  408ec8:	mov	w0, #0x4                   	// #4
  408ecc:	b	408ff0 <ll_addr_a2n@@Base+0x180>
  408ed0:	mov	x2, x21
  408ed4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408ed8:	add	x1, x1, #0x590
  408edc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  408ee0:	ldr	x0, [x0, #3992]
  408ee4:	ldr	x0, [x0]
  408ee8:	bl	405070 <fprintf@plt>
  408eec:	mov	w0, #0xffffffff            	// #-1
  408ef0:	b	408ff0 <ll_addr_a2n@@Base+0x180>
  408ef4:	mov	x2, x27
  408ef8:	mov	x1, x26
  408efc:	mov	x0, x21
  408f00:	bl	404fc0 <__isoc99_sscanf@plt>
  408f04:	cmp	w0, #0x1
  408f08:	b.ne	408f5c <ll_addr_a2n@@Base+0xec>  // b.any
  408f0c:	ldr	w0, [sp, #104]
  408f10:	cmp	w0, #0xff
  408f14:	b.hi	408f88 <ll_addr_a2n@@Base+0x118>  // b.pmore
  408f18:	strb	w0, [x25, x20]
  408f1c:	cbz	x19, 408fe4 <ll_addr_a2n@@Base+0x174>
  408f20:	add	w22, w24, #0x1
  408f24:	add	x0, x20, #0x1
  408f28:	cmp	x20, x23
  408f2c:	b.eq	408fa8 <ll_addr_a2n@@Base+0x138>  // b.none
  408f30:	mov	x20, x0
  408f34:	mov	x21, x19
  408f38:	mov	w24, w20
  408f3c:	mov	w22, w20
  408f40:	mov	w1, w28
  408f44:	mov	x0, x21
  408f48:	bl	404ed0 <strchr@plt>
  408f4c:	mov	x19, x0
  408f50:	cbz	x0, 408ef4 <ll_addr_a2n@@Base+0x84>
  408f54:	strb	wzr, [x19], #1
  408f58:	b	408ef4 <ll_addr_a2n@@Base+0x84>
  408f5c:	mov	x2, x21
  408f60:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408f64:	add	x1, x1, #0x590
  408f68:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  408f6c:	ldr	x0, [x0, #3992]
  408f70:	ldr	x0, [x0]
  408f74:	bl	405070 <fprintf@plt>
  408f78:	mov	w0, #0xffffffff            	// #-1
  408f7c:	ldp	x19, x20, [sp, #16]
  408f80:	ldp	x27, x28, [sp, #80]
  408f84:	b	408ff0 <ll_addr_a2n@@Base+0x180>
  408f88:	mov	x2, x21
  408f8c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  408f90:	add	x1, x1, #0x590
  408f94:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  408f98:	ldr	x0, [x0, #3992]
  408f9c:	ldr	x0, [x0]
  408fa0:	bl	405070 <fprintf@plt>
  408fa4:	b	408f78 <ll_addr_a2n@@Base+0x108>
  408fa8:	ldp	x19, x20, [sp, #16]
  408fac:	ldp	x27, x28, [sp, #80]
  408fb0:	b	408fec <ll_addr_a2n@@Base+0x17c>
  408fb4:	mov	w22, #0x0                   	// #0
  408fb8:	cmp	w23, #0x0
  408fbc:	b.le	408fec <ll_addr_a2n@@Base+0x17c>
  408fc0:	stp	x19, x20, [sp, #16]
  408fc4:	stp	x27, x28, [sp, #80]
  408fc8:	sub	w23, w23, #0x1
  408fcc:	mov	x20, #0x0                   	// #0
  408fd0:	mov	w28, #0x3a                  	// #58
  408fd4:	add	x27, sp, #0x68
  408fd8:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x258>
  408fdc:	add	x26, x26, #0x5b0
  408fe0:	b	408f38 <ll_addr_a2n@@Base+0xc8>
  408fe4:	ldp	x19, x20, [sp, #16]
  408fe8:	ldp	x27, x28, [sp, #80]
  408fec:	add	w0, w22, #0x1
  408ff0:	ldp	x21, x22, [sp, #32]
  408ff4:	ldp	x23, x24, [sp, #48]
  408ff8:	ldp	x25, x26, [sp, #64]
  408ffc:	ldp	x29, x30, [sp], #368
  409000:	ret
  409004:	cbnz	w0, 40900c <ll_addr_a2n@@Base+0x19c>
  409008:	ret
  40900c:	stp	x29, x30, [sp, #-32]!
  409010:	mov	x29, sp
  409014:	str	x19, [sp, #16]
  409018:	and	w19, w1, #0xff
  40901c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409020:	ldr	x0, [x0, #4016]
  409024:	ldr	x0, [x0]
  409028:	bl	40a2ec <jsonw_new@@Base>
  40902c:	adrp	x1, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409030:	str	x0, [x1, #3344]
  409034:	cbz	x0, 409058 <ll_addr_a2n@@Base+0x1e8>
  409038:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x13258>
  40903c:	ldr	x1, [x1, #4056]
  409040:	ldr	w1, [x1]
  409044:	cbnz	w1, 40906c <ll_addr_a2n@@Base+0x1fc>
  409048:	cbnz	w19, 409078 <ll_addr_a2n@@Base+0x208>
  40904c:	ldr	x19, [sp, #16]
  409050:	ldp	x29, x30, [sp], #32
  409054:	ret
  409058:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40905c:	add	x0, x0, #0x5b8
  409060:	bl	404bc0 <perror@plt>
  409064:	mov	w0, #0x1                   	// #1
  409068:	bl	404bb0 <exit@plt>
  40906c:	mov	w1, #0x1                   	// #1
  409070:	bl	40a390 <jsonw_pretty@@Base>
  409074:	b	409048 <ll_addr_a2n@@Base+0x1d8>
  409078:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40907c:	ldr	x0, [x0, #3344]
  409080:	bl	40a504 <jsonw_start_array@@Base>
  409084:	b	40904c <ll_addr_a2n@@Base+0x1dc>

0000000000409088 <new_json_obj@@Base>:
  409088:	stp	x29, x30, [sp, #-16]!
  40908c:	mov	x29, sp
  409090:	mov	w1, #0x1                   	// #1
  409094:	bl	409004 <ll_addr_a2n@@Base+0x194>
  409098:	ldp	x29, x30, [sp], #16
  40909c:	ret

00000000004090a0 <delete_json_obj@@Base>:
  4090a0:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4090a4:	ldr	x0, [x0, #3344]
  4090a8:	cbz	x0, 4090cc <delete_json_obj@@Base+0x2c>
  4090ac:	stp	x29, x30, [sp, #-16]!
  4090b0:	mov	x29, sp
  4090b4:	bl	40a558 <jsonw_end_array@@Base>
  4090b8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4090bc:	add	x0, x0, #0xd10
  4090c0:	bl	40a324 <jsonw_destroy@@Base>
  4090c4:	ldp	x29, x30, [sp], #16
  4090c8:	ret
  4090cc:	ret

00000000004090d0 <new_json_obj_plain@@Base>:
  4090d0:	stp	x29, x30, [sp, #-16]!
  4090d4:	mov	x29, sp
  4090d8:	mov	w1, #0x0                   	// #0
  4090dc:	bl	409004 <ll_addr_a2n@@Base+0x194>
  4090e0:	ldp	x29, x30, [sp], #16
  4090e4:	ret

00000000004090e8 <delete_json_obj_plain@@Base>:
  4090e8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4090ec:	ldr	x0, [x0, #3344]
  4090f0:	cbz	x0, 409110 <delete_json_obj_plain@@Base+0x28>
  4090f4:	stp	x29, x30, [sp, #-16]!
  4090f8:	mov	x29, sp
  4090fc:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409100:	add	x0, x0, #0xd10
  409104:	bl	40a324 <jsonw_destroy@@Base>
  409108:	ldp	x29, x30, [sp], #16
  40910c:	ret
  409110:	ret

0000000000409114 <is_json_context@@Base>:
  409114:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409118:	ldr	x0, [x0, #3344]
  40911c:	cmp	x0, #0x0
  409120:	cset	w0, ne  // ne = any
  409124:	ret

0000000000409128 <get_json_writer@@Base>:
  409128:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40912c:	ldr	x0, [x0, #3344]
  409130:	ret

0000000000409134 <open_json_object@@Base>:
  409134:	mov	x1, x0
  409138:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40913c:	ldr	x0, [x0, #3344]
  409140:	cbz	x0, 409168 <open_json_object@@Base+0x34>
  409144:	stp	x29, x30, [sp, #-16]!
  409148:	mov	x29, sp
  40914c:	cbz	x1, 409154 <open_json_object@@Base+0x20>
  409150:	bl	40a398 <jsonw_name@@Base>
  409154:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409158:	ldr	x0, [x0, #3344]
  40915c:	bl	40a4b0 <jsonw_start_object@@Base>
  409160:	ldp	x29, x30, [sp], #16
  409164:	ret
  409168:	ret

000000000040916c <close_json_object@@Base>:
  40916c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409170:	ldr	x0, [x0, #3344]
  409174:	cbz	x0, 40918c <close_json_object@@Base+0x20>
  409178:	stp	x29, x30, [sp, #-16]!
  40917c:	mov	x29, sp
  409180:	bl	40a4ec <jsonw_end_object@@Base>
  409184:	ldp	x29, x30, [sp], #16
  409188:	ret
  40918c:	ret

0000000000409190 <open_json_array@@Base>:
  409190:	stp	x29, x30, [sp, #-16]!
  409194:	mov	x29, sp
  409198:	tst	w0, #0x6
  40919c:	b.eq	4091c8 <open_json_array@@Base+0x38>  // b.none
  4091a0:	adrp	x2, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4091a4:	ldr	x2, [x2, #3344]
  4091a8:	cbz	x2, 4091dc <open_json_array@@Base+0x4c>
  4091ac:	cbz	x1, 4091b8 <open_json_array@@Base+0x28>
  4091b0:	mov	x0, x2
  4091b4:	bl	40a398 <jsonw_name@@Base>
  4091b8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4091bc:	ldr	x0, [x0, #3344]
  4091c0:	bl	40a504 <jsonw_start_array@@Base>
  4091c4:	b	4091d4 <open_json_array@@Base+0x44>
  4091c8:	adrp	x2, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4091cc:	ldr	x2, [x2, #3344]
  4091d0:	cbz	x2, 4091dc <open_json_array@@Base+0x4c>
  4091d4:	ldp	x29, x30, [sp], #16
  4091d8:	ret
  4091dc:	mov	w2, #0x5                   	// #5
  4091e0:	tst	w0, w2
  4091e4:	b.eq	4091d4 <open_json_array@@Base+0x44>  // b.none
  4091e8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  4091ec:	add	x0, x0, #0x2b0
  4091f0:	bl	405000 <printf@plt>
  4091f4:	b	4091d4 <open_json_array@@Base+0x44>

00000000004091f8 <close_json_array@@Base>:
  4091f8:	stp	x29, x30, [sp, #-16]!
  4091fc:	mov	x29, sp
  409200:	mov	w2, w0
  409204:	tst	w0, #0x6
  409208:	b.eq	409220 <close_json_array@@Base+0x28>  // b.none
  40920c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409210:	ldr	x0, [x0, #3344]
  409214:	cbz	x0, 409234 <close_json_array@@Base+0x3c>
  409218:	bl	40a558 <jsonw_end_array@@Base>
  40921c:	b	40922c <close_json_array@@Base+0x34>
  409220:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409224:	ldr	x0, [x0, #3344]
  409228:	cbz	x0, 409234 <close_json_array@@Base+0x3c>
  40922c:	ldp	x29, x30, [sp], #16
  409230:	ret
  409234:	mov	w0, #0x5                   	// #5
  409238:	tst	w2, w0
  40923c:	b.eq	40922c <close_json_array@@Base+0x34>  // b.none
  409240:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409244:	add	x0, x0, #0x2b0
  409248:	bl	405000 <printf@plt>
  40924c:	b	40922c <close_json_array@@Base+0x34>

0000000000409250 <print_color_int@@Base>:
  409250:	stp	x29, x30, [sp, #-16]!
  409254:	mov	x29, sp
  409258:	mov	w5, w0
  40925c:	mov	x6, x2
  409260:	mov	x2, x3
  409264:	tst	w0, #0x6
  409268:	b.eq	409298 <print_color_int@@Base+0x48>  // b.none
  40926c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409270:	ldr	x0, [x0, #3344]
  409274:	cbz	x0, 4092ac <print_color_int@@Base+0x5c>
  409278:	cbz	x6, 40928c <print_color_int@@Base+0x3c>
  40927c:	mov	w2, w4
  409280:	mov	x1, x6
  409284:	bl	40a948 <jsonw_int_field@@Base>
  409288:	b	4092a4 <print_color_int@@Base+0x54>
  40928c:	mov	w1, w4
  409290:	bl	40a720 <jsonw_int@@Base>
  409294:	b	4092a4 <print_color_int@@Base+0x54>
  409298:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40929c:	ldr	x0, [x0, #3344]
  4092a0:	cbz	x0, 4092ac <print_color_int@@Base+0x5c>
  4092a4:	ldp	x29, x30, [sp], #16
  4092a8:	ret
  4092ac:	mov	w0, #0x5                   	// #5
  4092b0:	tst	w5, w0
  4092b4:	b.eq	4092a4 <print_color_int@@Base+0x54>  // b.none
  4092b8:	mov	w3, w4
  4092bc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4092c0:	ldr	x0, [x0, #4016]
  4092c4:	ldr	x0, [x0]
  4092c8:	bl	409c74 <color_fprintf@@Base>
  4092cc:	b	4092a4 <print_color_int@@Base+0x54>

00000000004092d0 <print_color_s64@@Base>:
  4092d0:	stp	x29, x30, [sp, #-16]!
  4092d4:	mov	x29, sp
  4092d8:	mov	w5, w0
  4092dc:	mov	x6, x2
  4092e0:	mov	x2, x3
  4092e4:	tst	w0, #0x6
  4092e8:	b.eq	409318 <print_color_s64@@Base+0x48>  // b.none
  4092ec:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4092f0:	ldr	x0, [x0, #3344]
  4092f4:	cbz	x0, 40932c <print_color_s64@@Base+0x5c>
  4092f8:	cbz	x6, 40930c <print_color_s64@@Base+0x3c>
  4092fc:	mov	x2, x4
  409300:	mov	x1, x6
  409304:	bl	40a978 <jsonw_s64_field@@Base>
  409308:	b	409324 <print_color_s64@@Base+0x54>
  40930c:	mov	x1, x4
  409310:	bl	40a740 <jsonw_s64@@Base>
  409314:	b	409324 <print_color_s64@@Base+0x54>
  409318:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40931c:	ldr	x0, [x0, #3344]
  409320:	cbz	x0, 40932c <print_color_s64@@Base+0x5c>
  409324:	ldp	x29, x30, [sp], #16
  409328:	ret
  40932c:	mov	w0, #0x5                   	// #5
  409330:	tst	w5, w0
  409334:	b.eq	409324 <print_color_s64@@Base+0x54>  // b.none
  409338:	mov	x3, x4
  40933c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409340:	ldr	x0, [x0, #4016]
  409344:	ldr	x0, [x0]
  409348:	bl	409c74 <color_fprintf@@Base>
  40934c:	b	409324 <print_color_s64@@Base+0x54>

0000000000409350 <print_color_hhu@@Base>:
  409350:	stp	x29, x30, [sp, #-16]!
  409354:	mov	x29, sp
  409358:	mov	w5, w0
  40935c:	mov	w6, w1
  409360:	mov	x1, x2
  409364:	mov	x2, x3
  409368:	and	w3, w4, #0xff
  40936c:	tst	w0, #0x6
  409370:	b.eq	40939c <print_color_hhu@@Base+0x4c>  // b.none
  409374:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409378:	ldr	x0, [x0, #3344]
  40937c:	cbz	x0, 4093b0 <print_color_hhu@@Base+0x60>
  409380:	cbz	x1, 409390 <print_color_hhu@@Base+0x40>
  409384:	mov	w2, w3
  409388:	bl	40a888 <jsonw_hhu_field@@Base>
  40938c:	b	4093a8 <print_color_hhu@@Base+0x58>
  409390:	mov	w1, w3
  409394:	bl	40a640 <jsonw_hhu@@Base>
  409398:	b	4093a8 <print_color_hhu@@Base+0x58>
  40939c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4093a0:	ldr	x0, [x0, #3344]
  4093a4:	cbz	x0, 4093b0 <print_color_hhu@@Base+0x60>
  4093a8:	ldp	x29, x30, [sp], #16
  4093ac:	ret
  4093b0:	mov	w0, #0x5                   	// #5
  4093b4:	tst	w5, w0
  4093b8:	b.eq	4093a8 <print_color_hhu@@Base+0x58>  // b.none
  4093bc:	mov	w1, w6
  4093c0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4093c4:	ldr	x0, [x0, #4016]
  4093c8:	ldr	x0, [x0]
  4093cc:	bl	409c74 <color_fprintf@@Base>
  4093d0:	b	4093a8 <print_color_hhu@@Base+0x58>

00000000004093d4 <print_color_hu@@Base>:
  4093d4:	stp	x29, x30, [sp, #-16]!
  4093d8:	mov	x29, sp
  4093dc:	mov	w5, w0
  4093e0:	mov	w6, w1
  4093e4:	mov	x1, x2
  4093e8:	mov	x2, x3
  4093ec:	and	w3, w4, #0xffff
  4093f0:	tst	w0, #0x6
  4093f4:	b.eq	409420 <print_color_hu@@Base+0x4c>  // b.none
  4093f8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4093fc:	ldr	x0, [x0, #3344]
  409400:	cbz	x0, 409434 <print_color_hu@@Base+0x60>
  409404:	cbz	x1, 409414 <print_color_hu@@Base+0x40>
  409408:	mov	w2, w3
  40940c:	bl	40a8b8 <jsonw_hu_field@@Base>
  409410:	b	40942c <print_color_hu@@Base+0x58>
  409414:	mov	w1, w3
  409418:	bl	40a660 <jsonw_hu@@Base>
  40941c:	b	40942c <print_color_hu@@Base+0x58>
  409420:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409424:	ldr	x0, [x0, #3344]
  409428:	cbz	x0, 409434 <print_color_hu@@Base+0x60>
  40942c:	ldp	x29, x30, [sp], #16
  409430:	ret
  409434:	mov	w0, #0x5                   	// #5
  409438:	tst	w5, w0
  40943c:	b.eq	40942c <print_color_hu@@Base+0x58>  // b.none
  409440:	mov	w1, w6
  409444:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409448:	ldr	x0, [x0, #4016]
  40944c:	ldr	x0, [x0]
  409450:	bl	409c74 <color_fprintf@@Base>
  409454:	b	40942c <print_color_hu@@Base+0x58>

0000000000409458 <print_color_uint@@Base>:
  409458:	stp	x29, x30, [sp, #-16]!
  40945c:	mov	x29, sp
  409460:	mov	w5, w0
  409464:	mov	x6, x2
  409468:	mov	x2, x3
  40946c:	tst	w0, #0x6
  409470:	b.eq	4094a0 <print_color_uint@@Base+0x48>  // b.none
  409474:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409478:	ldr	x0, [x0, #3344]
  40947c:	cbz	x0, 4094b4 <print_color_uint@@Base+0x5c>
  409480:	cbz	x6, 409494 <print_color_uint@@Base+0x3c>
  409484:	mov	w2, w4
  409488:	mov	x1, x6
  40948c:	bl	40a7f8 <jsonw_uint_field@@Base>
  409490:	b	4094ac <print_color_uint@@Base+0x54>
  409494:	mov	w1, w4
  409498:	bl	40a680 <jsonw_uint@@Base>
  40949c:	b	4094ac <print_color_uint@@Base+0x54>
  4094a0:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4094a4:	ldr	x0, [x0, #3344]
  4094a8:	cbz	x0, 4094b4 <print_color_uint@@Base+0x5c>
  4094ac:	ldp	x29, x30, [sp], #16
  4094b0:	ret
  4094b4:	mov	w0, #0x5                   	// #5
  4094b8:	tst	w5, w0
  4094bc:	b.eq	4094ac <print_color_uint@@Base+0x54>  // b.none
  4094c0:	mov	w3, w4
  4094c4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4094c8:	ldr	x0, [x0, #4016]
  4094cc:	ldr	x0, [x0]
  4094d0:	bl	409c74 <color_fprintf@@Base>
  4094d4:	b	4094ac <print_color_uint@@Base+0x54>

00000000004094d8 <print_color_u64@@Base>:
  4094d8:	stp	x29, x30, [sp, #-16]!
  4094dc:	mov	x29, sp
  4094e0:	mov	w5, w0
  4094e4:	mov	x6, x2
  4094e8:	mov	x2, x3
  4094ec:	tst	w0, #0x6
  4094f0:	b.eq	409520 <print_color_u64@@Base+0x48>  // b.none
  4094f4:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4094f8:	ldr	x0, [x0, #3344]
  4094fc:	cbz	x0, 409534 <print_color_u64@@Base+0x5c>
  409500:	cbz	x6, 409514 <print_color_u64@@Base+0x3c>
  409504:	mov	x2, x4
  409508:	mov	x1, x6
  40950c:	bl	40a828 <jsonw_u64_field@@Base>
  409510:	b	40952c <print_color_u64@@Base+0x54>
  409514:	mov	x1, x4
  409518:	bl	40a6a0 <jsonw_u64@@Base>
  40951c:	b	40952c <print_color_u64@@Base+0x54>
  409520:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409524:	ldr	x0, [x0, #3344]
  409528:	cbz	x0, 409534 <print_color_u64@@Base+0x5c>
  40952c:	ldp	x29, x30, [sp], #16
  409530:	ret
  409534:	mov	w0, #0x5                   	// #5
  409538:	tst	w5, w0
  40953c:	b.eq	40952c <print_color_u64@@Base+0x54>  // b.none
  409540:	mov	x3, x4
  409544:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409548:	ldr	x0, [x0, #4016]
  40954c:	ldr	x0, [x0]
  409550:	bl	409c74 <color_fprintf@@Base>
  409554:	b	40952c <print_color_u64@@Base+0x54>

0000000000409558 <print_color_luint@@Base>:
  409558:	stp	x29, x30, [sp, #-16]!
  40955c:	mov	x29, sp
  409560:	mov	w5, w0
  409564:	mov	x6, x2
  409568:	mov	x2, x3
  40956c:	tst	w0, #0x6
  409570:	b.eq	4095a0 <print_color_luint@@Base+0x48>  // b.none
  409574:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409578:	ldr	x0, [x0, #3344]
  40957c:	cbz	x0, 4095b4 <print_color_luint@@Base+0x5c>
  409580:	cbz	x6, 409594 <print_color_luint@@Base+0x3c>
  409584:	mov	x2, x4
  409588:	mov	x1, x6
  40958c:	bl	40a8e8 <jsonw_luint_field@@Base>
  409590:	b	4095ac <print_color_luint@@Base+0x54>
  409594:	mov	x1, x4
  409598:	bl	40a6e0 <jsonw_luint@@Base>
  40959c:	b	4095ac <print_color_luint@@Base+0x54>
  4095a0:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4095a4:	ldr	x0, [x0, #3344]
  4095a8:	cbz	x0, 4095b4 <print_color_luint@@Base+0x5c>
  4095ac:	ldp	x29, x30, [sp], #16
  4095b0:	ret
  4095b4:	mov	w0, #0x5                   	// #5
  4095b8:	tst	w5, w0
  4095bc:	b.eq	4095ac <print_color_luint@@Base+0x54>  // b.none
  4095c0:	mov	x3, x4
  4095c4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4095c8:	ldr	x0, [x0, #4016]
  4095cc:	ldr	x0, [x0]
  4095d0:	bl	409c74 <color_fprintf@@Base>
  4095d4:	b	4095ac <print_color_luint@@Base+0x54>

00000000004095d8 <print_color_lluint@@Base>:
  4095d8:	stp	x29, x30, [sp, #-16]!
  4095dc:	mov	x29, sp
  4095e0:	mov	w5, w0
  4095e4:	mov	x6, x2
  4095e8:	mov	x2, x3
  4095ec:	tst	w0, #0x6
  4095f0:	b.eq	409620 <print_color_lluint@@Base+0x48>  // b.none
  4095f4:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4095f8:	ldr	x0, [x0, #3344]
  4095fc:	cbz	x0, 409634 <print_color_lluint@@Base+0x5c>
  409600:	cbz	x6, 409614 <print_color_lluint@@Base+0x3c>
  409604:	mov	x2, x4
  409608:	mov	x1, x6
  40960c:	bl	40a918 <jsonw_lluint_field@@Base>
  409610:	b	40962c <print_color_lluint@@Base+0x54>
  409614:	mov	x1, x4
  409618:	bl	40a700 <jsonw_lluint@@Base>
  40961c:	b	40962c <print_color_lluint@@Base+0x54>
  409620:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409624:	ldr	x0, [x0, #3344]
  409628:	cbz	x0, 409634 <print_color_lluint@@Base+0x5c>
  40962c:	ldp	x29, x30, [sp], #16
  409630:	ret
  409634:	mov	w0, #0x5                   	// #5
  409638:	tst	w5, w0
  40963c:	b.eq	40962c <print_color_lluint@@Base+0x54>  // b.none
  409640:	mov	x3, x4
  409644:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409648:	ldr	x0, [x0, #4016]
  40964c:	ldr	x0, [x0]
  409650:	bl	409c74 <color_fprintf@@Base>
  409654:	b	40962c <print_color_lluint@@Base+0x54>

0000000000409658 <print_color_float@@Base>:
  409658:	stp	x29, x30, [sp, #-16]!
  40965c:	mov	x29, sp
  409660:	mov	w4, w0
  409664:	tst	w0, #0x6
  409668:	b.eq	409690 <print_color_float@@Base+0x38>  // b.none
  40966c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409670:	ldr	x0, [x0, #3344]
  409674:	cbz	x0, 4096a4 <print_color_float@@Base+0x4c>
  409678:	cbz	x2, 409688 <print_color_float@@Base+0x30>
  40967c:	mov	x1, x2
  409680:	bl	40a7c0 <jsonw_float_field@@Base>
  409684:	b	40969c <print_color_float@@Base+0x44>
  409688:	bl	40a624 <jsonw_float@@Base>
  40968c:	b	40969c <print_color_float@@Base+0x44>
  409690:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409694:	ldr	x0, [x0, #3344]
  409698:	cbz	x0, 4096a4 <print_color_float@@Base+0x4c>
  40969c:	ldp	x29, x30, [sp], #16
  4096a0:	ret
  4096a4:	mov	w0, #0x5                   	// #5
  4096a8:	tst	w4, w0
  4096ac:	b.eq	40969c <print_color_float@@Base+0x44>  // b.none
  4096b0:	mov	x2, x3
  4096b4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4096b8:	ldr	x0, [x0, #4016]
  4096bc:	ldr	x0, [x0]
  4096c0:	bl	409c74 <color_fprintf@@Base>
  4096c4:	b	40969c <print_color_float@@Base+0x44>

00000000004096c8 <print_uint_name_value@@Base>:
  4096c8:	stp	x29, x30, [sp, #-112]!
  4096cc:	mov	x29, sp
  4096d0:	stp	x19, x20, [sp, #16]
  4096d4:	str	x21, [sp, #32]
  4096d8:	mov	x19, x0
  4096dc:	mov	w21, w1
  4096e0:	add	x20, sp, #0x30
  4096e4:	mov	x3, x0
  4096e8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4096ec:	add	x2, x2, #0x5c8
  4096f0:	mov	x1, #0x40                  	// #64
  4096f4:	mov	x0, x20
  4096f8:	bl	404c80 <snprintf@plt>
  4096fc:	mov	w4, w21
  409700:	mov	x3, x20
  409704:	mov	x2, x19
  409708:	mov	w1, #0x6                   	// #6
  40970c:	mov	w0, #0x4                   	// #4
  409710:	bl	409458 <print_color_uint@@Base>
  409714:	ldp	x19, x20, [sp, #16]
  409718:	ldr	x21, [sp, #32]
  40971c:	ldp	x29, x30, [sp], #112
  409720:	ret

0000000000409724 <print_color_string@@Base>:
  409724:	stp	x29, x30, [sp, #-16]!
  409728:	mov	x29, sp
  40972c:	mov	w5, w0
  409730:	mov	w6, w1
  409734:	mov	x1, x2
  409738:	mov	x2, x3
  40973c:	tst	w0, #0x6
  409740:	b.eq	409788 <print_color_string@@Base+0x64>  // b.none
  409744:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409748:	ldr	x0, [x0, #3344]
  40974c:	cbz	x0, 40979c <print_color_string@@Base+0x78>
  409750:	cmp	x1, #0x0
  409754:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  409758:	b.eq	409774 <print_color_string@@Base+0x50>  // b.none
  40975c:	cmp	x1, #0x0
  409760:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  409764:	b.eq	40977c <print_color_string@@Base+0x58>  // b.none
  409768:	mov	x1, x4
  40976c:	bl	40a5a4 <jsonw_string@@Base>
  409770:	b	409794 <print_color_string@@Base+0x70>
  409774:	bl	40a398 <jsonw_name@@Base>
  409778:	b	409794 <print_color_string@@Base+0x70>
  40977c:	mov	x2, x4
  409780:	bl	40a760 <jsonw_string_field@@Base>
  409784:	b	409794 <print_color_string@@Base+0x70>
  409788:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  40978c:	ldr	x0, [x0, #3344]
  409790:	cbz	x0, 40979c <print_color_string@@Base+0x78>
  409794:	ldp	x29, x30, [sp], #16
  409798:	ret
  40979c:	mov	w0, #0x5                   	// #5
  4097a0:	tst	w5, w0
  4097a4:	b.eq	409794 <print_color_string@@Base+0x70>  // b.none
  4097a8:	mov	x3, x4
  4097ac:	mov	w1, w6
  4097b0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4097b4:	ldr	x0, [x0, #4016]
  4097b8:	ldr	x0, [x0]
  4097bc:	bl	409c74 <color_fprintf@@Base>
  4097c0:	b	409794 <print_color_string@@Base+0x70>

00000000004097c4 <print_string_name_value@@Base>:
  4097c4:	stp	x29, x30, [sp, #-112]!
  4097c8:	mov	x29, sp
  4097cc:	stp	x19, x20, [sp, #16]
  4097d0:	str	x21, [sp, #32]
  4097d4:	mov	x19, x0
  4097d8:	mov	x21, x1
  4097dc:	add	x20, sp, #0x30
  4097e0:	mov	x3, x0
  4097e4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4097e8:	add	x2, x2, #0x5d0
  4097ec:	mov	x1, #0x40                  	// #64
  4097f0:	mov	x0, x20
  4097f4:	bl	404c80 <snprintf@plt>
  4097f8:	mov	x4, x21
  4097fc:	mov	x3, x20
  409800:	mov	x2, x19
  409804:	mov	w1, #0x6                   	// #6
  409808:	mov	w0, #0x4                   	// #4
  40980c:	bl	409724 <print_color_string@@Base>
  409810:	ldp	x19, x20, [sp, #16]
  409814:	ldr	x21, [sp, #32]
  409818:	ldp	x29, x30, [sp], #112
  40981c:	ret

0000000000409820 <print_color_bool@@Base>:
  409820:	stp	x29, x30, [sp, #-16]!
  409824:	mov	x29, sp
  409828:	mov	w5, w0
  40982c:	mov	w6, w1
  409830:	mov	x1, x2
  409834:	mov	x2, x3
  409838:	and	w4, w4, #0xff
  40983c:	tst	w0, #0x6
  409840:	b.eq	40986c <print_color_bool@@Base+0x4c>  // b.none
  409844:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409848:	ldr	x0, [x0, #3344]
  40984c:	cbz	x0, 409880 <print_color_bool@@Base+0x60>
  409850:	cbz	x1, 409860 <print_color_bool@@Base+0x40>
  409854:	mov	w2, w4
  409858:	bl	40a790 <jsonw_bool_field@@Base>
  40985c:	b	409878 <print_color_bool@@Base+0x58>
  409860:	mov	w1, w4
  409864:	bl	40a5d4 <jsonw_bool@@Base>
  409868:	b	409878 <print_color_bool@@Base+0x58>
  40986c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409870:	ldr	x0, [x0, #3344]
  409874:	cbz	x0, 409880 <print_color_bool@@Base+0x60>
  409878:	ldp	x29, x30, [sp], #16
  40987c:	ret
  409880:	mov	w0, #0x5                   	// #5
  409884:	tst	w5, w0
  409888:	b.eq	409878 <print_color_bool@@Base+0x58>  // b.none
  40988c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409890:	add	x0, x0, #0x5e0
  409894:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x258>
  409898:	add	x3, x3, #0x5d8
  40989c:	cmp	w4, #0x0
  4098a0:	csel	x3, x3, x0, ne  // ne = any
  4098a4:	mov	w1, w6
  4098a8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4098ac:	ldr	x0, [x0, #4016]
  4098b0:	ldr	x0, [x0]
  4098b4:	bl	409c74 <color_fprintf@@Base>
  4098b8:	b	409878 <print_color_bool@@Base+0x58>

00000000004098bc <print_color_0xhex@@Base>:
  4098bc:	stp	x29, x30, [sp, #-96]!
  4098c0:	mov	x29, sp
  4098c4:	stp	x19, x20, [sp, #16]
  4098c8:	mov	x19, x2
  4098cc:	mov	x2, x3
  4098d0:	tst	w0, #0x6
  4098d4:	b.eq	40991c <print_color_0xhex@@Base+0x60>  // b.none
  4098d8:	adrp	x3, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4098dc:	ldr	x3, [x3, #3344]
  4098e0:	cbz	x3, 409934 <print_color_0xhex@@Base+0x78>
  4098e4:	add	x20, sp, #0x20
  4098e8:	mov	x3, x4
  4098ec:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  4098f0:	add	x2, x2, #0x5e8
  4098f4:	mov	x1, #0x40                  	// #64
  4098f8:	mov	x0, x20
  4098fc:	bl	404c80 <snprintf@plt>
  409900:	mov	x4, x20
  409904:	mov	x3, #0x0                   	// #0
  409908:	mov	x2, x19
  40990c:	mov	w1, #0x6                   	// #6
  409910:	mov	w0, #0x2                   	// #2
  409914:	bl	409724 <print_color_string@@Base>
  409918:	b	409928 <print_color_0xhex@@Base+0x6c>
  40991c:	adrp	x3, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409920:	ldr	x3, [x3, #3344]
  409924:	cbz	x3, 409934 <print_color_0xhex@@Base+0x78>
  409928:	ldp	x19, x20, [sp, #16]
  40992c:	ldp	x29, x30, [sp], #96
  409930:	ret
  409934:	mov	w3, #0x5                   	// #5
  409938:	tst	w0, w3
  40993c:	b.eq	409928 <print_color_0xhex@@Base+0x6c>  // b.none
  409940:	mov	x3, x4
  409944:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409948:	ldr	x0, [x0, #4016]
  40994c:	ldr	x0, [x0]
  409950:	bl	409c74 <color_fprintf@@Base>
  409954:	b	409928 <print_color_0xhex@@Base+0x6c>

0000000000409958 <print_color_hex@@Base>:
  409958:	stp	x29, x30, [sp, #-96]!
  40995c:	mov	x29, sp
  409960:	str	x19, [sp, #16]
  409964:	mov	x19, x2
  409968:	mov	x2, x3
  40996c:	tst	w0, #0x6
  409970:	b.eq	4099c8 <print_color_hex@@Base+0x70>  // b.none
  409974:	adrp	x3, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409978:	ldr	x3, [x3, #3344]
  40997c:	cbz	x3, 4099e0 <print_color_hex@@Base+0x88>
  409980:	mov	w3, w4
  409984:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  409988:	add	x2, x2, #0x5b0
  40998c:	mov	x1, #0x40                  	// #64
  409990:	add	x0, sp, #0x20
  409994:	bl	404c80 <snprintf@plt>
  409998:	cbz	x19, 4099b4 <print_color_hex@@Base+0x5c>
  40999c:	add	x2, sp, #0x20
  4099a0:	mov	x1, x19
  4099a4:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4099a8:	ldr	x0, [x0, #3344]
  4099ac:	bl	40a760 <jsonw_string_field@@Base>
  4099b0:	b	4099d4 <print_color_hex@@Base+0x7c>
  4099b4:	add	x1, sp, #0x20
  4099b8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4099bc:	ldr	x0, [x0, #3344]
  4099c0:	bl	40a5a4 <jsonw_string@@Base>
  4099c4:	b	4099d4 <print_color_hex@@Base+0x7c>
  4099c8:	adrp	x3, 425000 <stderr@@GLIBC_2.17+0x3d38>
  4099cc:	ldr	x3, [x3, #3344]
  4099d0:	cbz	x3, 4099e0 <print_color_hex@@Base+0x88>
  4099d4:	ldr	x19, [sp, #16]
  4099d8:	ldp	x29, x30, [sp], #96
  4099dc:	ret
  4099e0:	mov	w3, #0x5                   	// #5
  4099e4:	tst	w0, w3
  4099e8:	b.eq	4099d4 <print_color_hex@@Base+0x7c>  // b.none
  4099ec:	mov	w3, w4
  4099f0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  4099f4:	ldr	x0, [x0, #4016]
  4099f8:	ldr	x0, [x0]
  4099fc:	bl	409c74 <color_fprintf@@Base>
  409a00:	b	4099d4 <print_color_hex@@Base+0x7c>

0000000000409a04 <print_color_null@@Base>:
  409a04:	stp	x29, x30, [sp, #-16]!
  409a08:	mov	x29, sp
  409a0c:	mov	w5, w0
  409a10:	mov	x6, x3
  409a14:	tst	w0, #0x6
  409a18:	b.eq	409a40 <print_color_null@@Base+0x3c>  // b.none
  409a1c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409a20:	ldr	x0, [x0, #3344]
  409a24:	cbz	x0, 409a54 <print_color_null@@Base+0x50>
  409a28:	cbz	x2, 409a38 <print_color_null@@Base+0x34>
  409a2c:	mov	x1, x2
  409a30:	bl	40a9a8 <jsonw_null_field@@Base>
  409a34:	b	409a4c <print_color_null@@Base+0x48>
  409a38:	bl	40a608 <jsonw_null@@Base>
  409a3c:	b	409a4c <print_color_null@@Base+0x48>
  409a40:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409a44:	ldr	x0, [x0, #3344]
  409a48:	cbz	x0, 409a54 <print_color_null@@Base+0x50>
  409a4c:	ldp	x29, x30, [sp], #16
  409a50:	ret
  409a54:	mov	w0, #0x5                   	// #5
  409a58:	tst	w5, w0
  409a5c:	b.eq	409a4c <print_color_null@@Base+0x48>  // b.none
  409a60:	mov	x3, x4
  409a64:	mov	x2, x6
  409a68:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409a6c:	ldr	x0, [x0, #4016]
  409a70:	ldr	x0, [x0]
  409a74:	bl	409c74 <color_fprintf@@Base>
  409a78:	b	409a4c <print_color_null@@Base+0x48>

0000000000409a7c <print_nl@@Base>:
  409a7c:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409a80:	ldr	x0, [x0, #3344]
  409a84:	cbz	x0, 409a8c <print_nl@@Base+0x10>
  409a88:	ret
  409a8c:	stp	x29, x30, [sp, #-16]!
  409a90:	mov	x29, sp
  409a94:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409a98:	ldr	x0, [x0, #4048]
  409a9c:	ldr	x1, [x0]
  409aa0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409aa4:	add	x0, x0, #0x2b0
  409aa8:	bl	405000 <printf@plt>
  409aac:	ldp	x29, x30, [sp], #16
  409ab0:	ret

0000000000409ab4 <check_enable_color@@Base>:
  409ab4:	stp	x29, x30, [sp, #-32]!
  409ab8:	mov	x29, sp
  409abc:	str	x19, [sp, #16]
  409ac0:	cmp	w1, #0x0
  409ac4:	cset	w19, ne  // ne = any
  409ac8:	cmp	w0, #0x0
  409acc:	csinc	w19, w19, wzr, ne  // ne = any
  409ad0:	cbnz	w19, 409b68 <check_enable_color@@Base+0xb4>
  409ad4:	cmp	w0, #0x2
  409ad8:	b.eq	409b04 <check_enable_color@@Base+0x50>  // b.none
  409adc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409ae0:	ldr	x0, [x0, #4016]
  409ae4:	ldr	x0, [x0]
  409ae8:	bl	404c90 <fileno@plt>
  409aec:	bl	404f50 <isatty@plt>
  409af0:	cbnz	w0, 409b04 <check_enable_color@@Base+0x50>
  409af4:	mov	w0, w19
  409af8:	ldr	x19, [sp, #16]
  409afc:	ldp	x29, x30, [sp], #32
  409b00:	ret
  409b04:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409b08:	mov	w1, #0x1                   	// #1
  409b0c:	str	w1, [x0, #3352]
  409b10:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409b14:	add	x0, x0, #0x5f0
  409b18:	bl	405030 <getenv@plt>
  409b1c:	mov	w19, #0x1                   	// #1
  409b20:	cbz	x0, 409af4 <check_enable_color@@Base+0x40>
  409b24:	mov	w1, #0x3b                  	// #59
  409b28:	bl	404dd0 <strrchr@plt>
  409b2c:	cbz	x0, 409af4 <check_enable_color@@Base+0x40>
  409b30:	ldrb	w2, [x0, #1]
  409b34:	sub	w1, w2, #0x30
  409b38:	and	w1, w1, #0xff
  409b3c:	cmp	w1, #0x6
  409b40:	cset	w19, ls  // ls = plast
  409b44:	cmp	w2, #0x38
  409b48:	csinc	w19, w19, wzr, ne  // ne = any
  409b4c:	cbz	w19, 409b70 <check_enable_color@@Base+0xbc>
  409b50:	ldrb	w0, [x0, #2]
  409b54:	cbnz	w0, 409af4 <check_enable_color@@Base+0x40>
  409b58:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409b5c:	mov	w1, #0x1                   	// #1
  409b60:	str	w1, [x0, #3356]
  409b64:	b	409af4 <check_enable_color@@Base+0x40>
  409b68:	mov	w19, #0x0                   	// #0
  409b6c:	b	409af4 <check_enable_color@@Base+0x40>
  409b70:	mov	w19, #0x1                   	// #1
  409b74:	b	409af4 <check_enable_color@@Base+0x40>

0000000000409b78 <matches_color@@Base>:
  409b78:	stp	x29, x30, [sp, #-48]!
  409b7c:	mov	x29, sp
  409b80:	stp	x19, x20, [sp, #16]
  409b84:	str	x21, [sp, #32]
  409b88:	mov	w20, #0x0                   	// #0
  409b8c:	cbz	x1, 409c14 <matches_color@@Base+0x9c>
  409b90:	mov	x19, x0
  409b94:	mov	x21, x1
  409b98:	bl	404ba0 <strlen@plt>
  409b9c:	add	x1, x0, #0x10
  409ba0:	and	x1, x1, #0xfffffffffffffff0
  409ba4:	sub	sp, sp, x1
  409ba8:	add	x2, x0, #0x1
  409bac:	mov	x1, x19
  409bb0:	mov	x0, sp
  409bb4:	bl	404b70 <memcpy@plt>
  409bb8:	mov	x20, x0
  409bbc:	mov	w1, #0x3d                  	// #61
  409bc0:	bl	404fa0 <strchrnul@plt>
  409bc4:	mov	x19, x0
  409bc8:	ldrb	w0, [x0]
  409bcc:	cbz	w0, 409bd4 <matches_color@@Base+0x5c>
  409bd0:	strb	wzr, [x19], #1
  409bd4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  409bd8:	add	x1, x1, #0x600
  409bdc:	mov	x0, x20
  409be0:	bl	406aa4 <matches@@Base>
  409be4:	ands	w20, w0, #0xff
  409be8:	b.ne	409c6c <matches_color@@Base+0xf4>  // b.any
  409bec:	ldrb	w0, [x19]
  409bf0:	cbz	w0, 409c08 <matches_color@@Base+0x90>
  409bf4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  409bf8:	add	x1, x1, #0x608
  409bfc:	mov	x0, x19
  409c00:	bl	404e30 <strcmp@plt>
  409c04:	cbnz	w0, 409c2c <matches_color@@Base+0xb4>
  409c08:	mov	w0, #0x2                   	// #2
  409c0c:	str	w0, [x21]
  409c10:	mov	w20, #0x1                   	// #1
  409c14:	mov	w0, w20
  409c18:	mov	sp, x29
  409c1c:	ldp	x19, x20, [sp, #16]
  409c20:	ldr	x21, [sp, #32]
  409c24:	ldp	x29, x30, [sp], #48
  409c28:	ret
  409c2c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  409c30:	add	x1, x1, #0x610
  409c34:	mov	x0, x19
  409c38:	bl	404e30 <strcmp@plt>
  409c3c:	cbnz	w0, 409c4c <matches_color@@Base+0xd4>
  409c40:	mov	w20, #0x1                   	// #1
  409c44:	str	w20, [x21]
  409c48:	b	409c14 <matches_color@@Base+0x9c>
  409c4c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  409c50:	add	x1, x1, #0x618
  409c54:	mov	x0, x19
  409c58:	bl	404e30 <strcmp@plt>
  409c5c:	cbnz	w0, 409c14 <matches_color@@Base+0x9c>
  409c60:	str	wzr, [x21]
  409c64:	mov	w20, #0x1                   	// #1
  409c68:	b	409c14 <matches_color@@Base+0x9c>
  409c6c:	mov	w20, #0x0                   	// #0
  409c70:	b	409c14 <matches_color@@Base+0x9c>

0000000000409c74 <color_fprintf@@Base>:
  409c74:	stp	x29, x30, [sp, #-288]!
  409c78:	mov	x29, sp
  409c7c:	stp	x19, x20, [sp, #16]
  409c80:	stp	x21, x22, [sp, #32]
  409c84:	mov	x20, x0
  409c88:	mov	x21, x2
  409c8c:	str	x3, [sp, #248]
  409c90:	str	x4, [sp, #256]
  409c94:	str	x5, [sp, #264]
  409c98:	str	x6, [sp, #272]
  409c9c:	str	x7, [sp, #280]
  409ca0:	str	q0, [sp, #112]
  409ca4:	str	q1, [sp, #128]
  409ca8:	str	q2, [sp, #144]
  409cac:	str	q3, [sp, #160]
  409cb0:	str	q4, [sp, #176]
  409cb4:	str	q5, [sp, #192]
  409cb8:	str	q6, [sp, #208]
  409cbc:	str	q7, [sp, #224]
  409cc0:	add	x0, sp, #0x120
  409cc4:	str	x0, [sp, #80]
  409cc8:	str	x0, [sp, #88]
  409ccc:	add	x0, sp, #0xf0
  409cd0:	str	x0, [sp, #96]
  409cd4:	mov	w0, #0xffffffd8            	// #-40
  409cd8:	str	w0, [sp, #104]
  409cdc:	mov	w0, #0xffffff80            	// #-128
  409ce0:	str	w0, [sp, #108]
  409ce4:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409ce8:	ldr	w0, [x0, #3352]
  409cec:	cmp	w0, #0x0
  409cf0:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  409cf4:	b.eq	409d80 <color_fprintf@@Base+0x10c>  // b.none
  409cf8:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d38>
  409cfc:	ldr	w0, [x0, #3356]
  409d00:	cbz	w0, 409da4 <color_fprintf@@Base+0x130>
  409d04:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409d08:	add	x0, x0, #0x698
  409d0c:	ldr	w1, [x0, w1, uxtw #2]
  409d10:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x258>
  409d14:	add	x22, x22, #0x2b0
  409d18:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409d1c:	add	x0, x0, #0xd00
  409d20:	ldr	x2, [x0, w1, uxtw #3]
  409d24:	mov	x1, x22
  409d28:	mov	x0, x20
  409d2c:	bl	405070 <fprintf@plt>
  409d30:	mov	w19, w0
  409d34:	ldp	x0, x1, [sp, #80]
  409d38:	stp	x0, x1, [sp, #48]
  409d3c:	ldp	x0, x1, [sp, #96]
  409d40:	stp	x0, x1, [sp, #64]
  409d44:	add	x2, sp, #0x30
  409d48:	mov	x1, x21
  409d4c:	mov	x0, x20
  409d50:	bl	404ff0 <vfprintf@plt>
  409d54:	add	w19, w19, w0
  409d58:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  409d5c:	add	x2, x2, #0x620
  409d60:	mov	x1, x22
  409d64:	mov	x0, x20
  409d68:	bl	405070 <fprintf@plt>
  409d6c:	add	w0, w19, w0
  409d70:	ldp	x19, x20, [sp, #16]
  409d74:	ldp	x21, x22, [sp, #32]
  409d78:	ldp	x29, x30, [sp], #288
  409d7c:	ret
  409d80:	ldp	x0, x1, [sp, #80]
  409d84:	stp	x0, x1, [sp, #48]
  409d88:	ldp	x0, x1, [sp, #96]
  409d8c:	stp	x0, x1, [sp, #64]
  409d90:	add	x2, sp, #0x30
  409d94:	mov	x1, x21
  409d98:	mov	x0, x20
  409d9c:	bl	404ff0 <vfprintf@plt>
  409da0:	b	409d70 <color_fprintf@@Base+0xfc>
  409da4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409da8:	add	x0, x0, #0x698
  409dac:	add	x0, x0, #0x20
  409db0:	ldr	w1, [x0, w1, uxtw #2]
  409db4:	b	409d10 <color_fprintf@@Base+0x9c>

0000000000409db8 <ifa_family_color@@Base>:
  409db8:	and	w0, w0, #0xff
  409dbc:	cmp	w0, #0x2
  409dc0:	b.eq	409dd8 <ifa_family_color@@Base+0x20>  // b.none
  409dc4:	cmp	w0, #0xa
  409dc8:	mov	w0, #0x6                   	// #6
  409dcc:	mov	w1, #0x3                   	// #3
  409dd0:	csel	w0, w0, w1, ne  // ne = any
  409dd4:	ret
  409dd8:	mov	w0, #0x2                   	// #2
  409ddc:	b	409dd4 <ifa_family_color@@Base+0x1c>

0000000000409de0 <oper_state_color@@Base>:
  409de0:	and	w0, w0, #0xff
  409de4:	cmp	w0, #0x2
  409de8:	b.eq	409e00 <oper_state_color@@Base+0x20>  // b.none
  409dec:	cmp	w0, #0x6
  409df0:	mov	w0, #0x6                   	// #6
  409df4:	mov	w1, #0x4                   	// #4
  409df8:	csel	w0, w0, w1, ne  // ne = any
  409dfc:	ret
  409e00:	mov	w0, #0x5                   	// #5
  409e04:	b	409dfc <oper_state_color@@Base+0x1c>

0000000000409e08 <mpls_ntop@@Base>:
  409e08:	stp	x29, x30, [sp, #-80]!
  409e0c:	mov	x29, sp
  409e10:	cmp	w0, #0x1c
  409e14:	b.eq	409e30 <mpls_ntop@@Base+0x28>  // b.none
  409e18:	bl	405020 <__errno_location@plt>
  409e1c:	mov	w1, #0x61                  	// #97
  409e20:	str	w1, [x0]
  409e24:	mov	x0, #0x0                   	// #0
  409e28:	ldp	x29, x30, [sp], #80
  409e2c:	ret
  409e30:	stp	x19, x20, [sp, #16]
  409e34:	stp	x21, x22, [sp, #32]
  409e38:	stp	x23, x24, [sp, #48]
  409e3c:	stp	x25, x26, [sp, #64]
  409e40:	mov	x20, x1
  409e44:	mov	x21, x2
  409e48:	mov	x19, x3
  409e4c:	bl	405020 <__errno_location@plt>
  409e50:	mov	x25, x0
  409e54:	str	wzr, [x0]
  409e58:	mov	x23, x21
  409e5c:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x258>
  409e60:	add	x24, x24, #0x6d8
  409e64:	mov	w26, #0x2f                  	// #47
  409e68:	ldr	w22, [x20]
  409e6c:	rev	w22, w22
  409e70:	lsr	w3, w22, #12
  409e74:	mov	x2, x24
  409e78:	mov	x1, x19
  409e7c:	mov	x0, x23
  409e80:	bl	404c80 <snprintf@plt>
  409e84:	sxtw	x1, w0
  409e88:	cmp	x19, w0, sxtw
  409e8c:	b.ls	409eb0 <mpls_ntop@@Base+0xa8>  // b.plast
  409e90:	add	x20, x20, #0x4
  409e94:	tbnz	w22, #8, 409ed0 <mpls_ntop@@Base+0xc8>
  409e98:	add	x2, x23, x1
  409e9c:	strb	w26, [x23, w0, sxtw]
  409ea0:	add	x23, x2, #0x1
  409ea4:	mvn	x1, x1
  409ea8:	add	x19, x19, x1
  409eac:	b	409e68 <mpls_ntop@@Base+0x60>
  409eb0:	mov	w0, #0xfffffff9            	// #-7
  409eb4:	str	w0, [x25]
  409eb8:	mov	x0, #0x0                   	// #0
  409ebc:	ldp	x19, x20, [sp, #16]
  409ec0:	ldp	x21, x22, [sp, #32]
  409ec4:	ldp	x23, x24, [sp, #48]
  409ec8:	ldp	x25, x26, [sp, #64]
  409ecc:	b	409e28 <mpls_ntop@@Base+0x20>
  409ed0:	mov	x0, x21
  409ed4:	ldp	x19, x20, [sp, #16]
  409ed8:	ldp	x21, x22, [sp, #32]
  409edc:	ldp	x23, x24, [sp, #48]
  409ee0:	ldp	x25, x26, [sp, #64]
  409ee4:	b	409e28 <mpls_ntop@@Base+0x20>

0000000000409ee8 <mpls_pton@@Base>:
  409ee8:	stp	x29, x30, [sp, #-80]!
  409eec:	mov	x29, sp
  409ef0:	cmp	w0, #0x1c
  409ef4:	b.ne	40a010 <mpls_pton@@Base+0x128>  // b.any
  409ef8:	stp	x19, x20, [sp, #16]
  409efc:	stp	x21, x22, [sp, #32]
  409f00:	mov	x21, x1
  409f04:	mov	x20, x2
  409f08:	lsr	x19, x3, #2
  409f0c:	bl	405020 <__errno_location@plt>
  409f10:	str	wzr, [x0]
  409f14:	cbz	w19, 409f84 <mpls_pton@@Base+0x9c>
  409f18:	str	x23, [sp, #48]
  409f1c:	sub	w19, w19, #0x1
  409f20:	add	x19, x19, #0x1
  409f24:	add	x19, x20, x19, lsl #2
  409f28:	add	x23, sp, #0x48
  409f2c:	mov	x22, #0xfffff               	// #1048575
  409f30:	mov	w2, #0x0                   	// #0
  409f34:	mov	x1, x23
  409f38:	mov	x0, x21
  409f3c:	bl	404b90 <strtoul@plt>
  409f40:	cmp	x0, x22
  409f44:	b.hi	409fd4 <mpls_pton@@Base+0xec>  // b.pmore
  409f48:	ldr	x1, [sp, #72]
  409f4c:	cmp	x1, x21
  409f50:	b.eq	409fe8 <mpls_pton@@Base+0x100>  // b.none
  409f54:	lsl	w0, w0, #12
  409f58:	rev	w0, w0
  409f5c:	str	w0, [x20]
  409f60:	ldrb	w2, [x1]
  409f64:	cbz	w2, 409fb8 <mpls_pton@@Base+0xd0>
  409f68:	cmp	w2, #0x2f
  409f6c:	b.ne	409ffc <mpls_pton@@Base+0x114>  // b.any
  409f70:	add	x21, x1, #0x1
  409f74:	add	x20, x20, #0x4
  409f78:	cmp	x19, x20
  409f7c:	b.ne	409f30 <mpls_pton@@Base+0x48>  // b.any
  409f80:	ldr	x23, [sp, #48]
  409f84:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  409f88:	ldr	x0, [x0, #3992]
  409f8c:	ldr	x3, [x0]
  409f90:	mov	x2, #0x18                  	// #24
  409f94:	mov	x1, #0x1                   	// #1
  409f98:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  409f9c:	add	x0, x0, #0x6e0
  409fa0:	bl	404ef0 <fwrite@plt>
  409fa4:	mov	w0, #0x0                   	// #0
  409fa8:	ldp	x19, x20, [sp, #16]
  409fac:	ldp	x21, x22, [sp, #32]
  409fb0:	ldp	x29, x30, [sp], #80
  409fb4:	ret
  409fb8:	orr	w0, w0, #0x10000
  409fbc:	str	w0, [x20]
  409fc0:	mov	w0, #0x1                   	// #1
  409fc4:	ldp	x19, x20, [sp, #16]
  409fc8:	ldp	x21, x22, [sp, #32]
  409fcc:	ldr	x23, [sp, #48]
  409fd0:	b	409fb0 <mpls_pton@@Base+0xc8>
  409fd4:	mov	w0, #0x0                   	// #0
  409fd8:	ldp	x19, x20, [sp, #16]
  409fdc:	ldp	x21, x22, [sp, #32]
  409fe0:	ldr	x23, [sp, #48]
  409fe4:	b	409fb0 <mpls_pton@@Base+0xc8>
  409fe8:	mov	w0, #0x0                   	// #0
  409fec:	ldp	x19, x20, [sp, #16]
  409ff0:	ldp	x21, x22, [sp, #32]
  409ff4:	ldr	x23, [sp, #48]
  409ff8:	b	409fb0 <mpls_pton@@Base+0xc8>
  409ffc:	mov	w0, #0x0                   	// #0
  40a000:	ldp	x19, x20, [sp, #16]
  40a004:	ldp	x21, x22, [sp, #32]
  40a008:	ldr	x23, [sp, #48]
  40a00c:	b	409fb0 <mpls_pton@@Base+0xc8>
  40a010:	bl	405020 <__errno_location@plt>
  40a014:	mov	w1, #0x61                  	// #97
  40a018:	str	w1, [x0]
  40a01c:	mov	w0, #0xffffffff            	// #-1
  40a020:	b	409fb0 <mpls_pton@@Base+0xc8>
  40a024:	stp	x29, x30, [sp, #-32]!
  40a028:	mov	x29, sp
  40a02c:	str	x19, [sp, #16]
  40a030:	mov	x19, x0
  40a034:	ldrb	w0, [x0, #13]
  40a038:	cbnz	w0, 40a050 <mpls_pton@@Base+0x168>
  40a03c:	mov	w0, #0x2c                  	// #44
  40a040:	strb	w0, [x19, #13]
  40a044:	ldr	x19, [sp, #16]
  40a048:	ldp	x29, x30, [sp], #32
  40a04c:	ret
  40a050:	ldr	x1, [x19]
  40a054:	bl	404c50 <putc@plt>
  40a058:	b	40a03c <mpls_pton@@Base+0x154>
  40a05c:	stp	x29, x30, [sp, #-64]!
  40a060:	mov	x29, sp
  40a064:	stp	x19, x20, [sp, #16]
  40a068:	mov	x20, x0
  40a06c:	ldr	w0, [x0, #8]
  40a070:	cbz	w0, 40a0bc <mpls_pton@@Base+0x1d4>
  40a074:	stp	x21, x22, [sp, #32]
  40a078:	str	x23, [sp, #48]
  40a07c:	mov	w19, #0x0                   	// #0
  40a080:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x258>
  40a084:	add	x21, x21, #0x700
  40a088:	mov	x23, #0x4                   	// #4
  40a08c:	mov	x22, #0x1                   	// #1
  40a090:	ldr	x3, [x20]
  40a094:	mov	x2, x23
  40a098:	mov	x1, x22
  40a09c:	mov	x0, x21
  40a0a0:	bl	404ef0 <fwrite@plt>
  40a0a4:	add	w19, w19, #0x1
  40a0a8:	ldr	w0, [x20, #8]
  40a0ac:	cmp	w0, w19
  40a0b0:	b.hi	40a090 <mpls_pton@@Base+0x1a8>  // b.pmore
  40a0b4:	ldp	x21, x22, [sp, #32]
  40a0b8:	ldr	x23, [sp, #48]
  40a0bc:	ldp	x19, x20, [sp, #16]
  40a0c0:	ldp	x29, x30, [sp], #64
  40a0c4:	ret
  40a0c8:	stp	x29, x30, [sp, #-32]!
  40a0cc:	mov	x29, sp
  40a0d0:	stp	x19, x20, [sp, #16]
  40a0d4:	mov	x19, x0
  40a0d8:	ldr	w0, [x0, #8]
  40a0dc:	cbz	w0, 40a114 <mpls_pton@@Base+0x22c>
  40a0e0:	mov	w20, w1
  40a0e4:	sub	w0, w0, #0x1
  40a0e8:	str	w0, [x19, #8]
  40a0ec:	ldrb	w0, [x19, #13]
  40a0f0:	cbnz	w0, 40a134 <mpls_pton@@Base+0x24c>
  40a0f4:	ldr	x1, [x19]
  40a0f8:	mov	w0, w20
  40a0fc:	bl	404c50 <putc@plt>
  40a100:	mov	w0, #0x2c                  	// #44
  40a104:	strb	w0, [x19, #13]
  40a108:	ldp	x19, x20, [sp, #16]
  40a10c:	ldp	x29, x30, [sp], #32
  40a110:	ret
  40a114:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x258>
  40a118:	add	x3, x3, #0x7c0
  40a11c:	mov	w2, #0x85                  	// #133
  40a120:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a124:	add	x1, x1, #0x708
  40a128:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a12c:	add	x0, x0, #0x718
  40a130:	bl	405010 <__assert_fail@plt>
  40a134:	ldrb	w0, [x19, #12]
  40a138:	cbz	w0, 40a0f4 <mpls_pton@@Base+0x20c>
  40a13c:	ldr	x1, [x19]
  40a140:	mov	w0, #0xa                   	// #10
  40a144:	bl	404c50 <putc@plt>
  40a148:	mov	x0, x19
  40a14c:	bl	40a05c <mpls_pton@@Base+0x174>
  40a150:	b	40a0f4 <mpls_pton@@Base+0x20c>
  40a154:	stp	x29, x30, [sp, #-64]!
  40a158:	mov	x29, sp
  40a15c:	stp	x19, x20, [sp, #16]
  40a160:	stp	x21, x22, [sp, #32]
  40a164:	mov	x22, x0
  40a168:	mov	x19, x1
  40a16c:	ldr	x1, [x0]
  40a170:	mov	w0, #0x22                  	// #34
  40a174:	bl	404c50 <putc@plt>
  40a178:	ldrb	w0, [x19]
  40a17c:	cbz	w0, 40a2d0 <mpls_pton@@Base+0x3e8>
  40a180:	str	x23, [sp, #48]
  40a184:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x258>
  40a188:	add	x23, x23, #0x738
  40a18c:	mov	x20, #0x2                   	// #2
  40a190:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x258>
  40a194:	add	x21, x21, #0x760
  40a198:	b	40a1cc <mpls_pton@@Base+0x2e4>
  40a19c:	cmp	w0, #0x8
  40a1a0:	b.eq	40a28c <mpls_pton@@Base+0x3a4>  // b.none
  40a1a4:	cmp	w0, #0x9
  40a1a8:	b.ne	40a2c0 <mpls_pton@@Base+0x3d8>  // b.any
  40a1ac:	ldr	x3, [x22]
  40a1b0:	mov	x2, x20
  40a1b4:	mov	x1, #0x1                   	// #1
  40a1b8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a1bc:	add	x0, x0, #0x728
  40a1c0:	bl	404ef0 <fwrite@plt>
  40a1c4:	ldrb	w0, [x19, #1]!
  40a1c8:	cbz	w0, 40a2cc <mpls_pton@@Base+0x3e4>
  40a1cc:	cmp	w0, #0xd
  40a1d0:	b.eq	40a274 <mpls_pton@@Base+0x38c>  // b.none
  40a1d4:	b.hi	40a208 <mpls_pton@@Base+0x320>  // b.pmore
  40a1d8:	cmp	w0, #0xa
  40a1dc:	b.eq	40a258 <mpls_pton@@Base+0x370>  // b.none
  40a1e0:	b.ls	40a19c <mpls_pton@@Base+0x2b4>  // b.plast
  40a1e4:	cmp	w0, #0xc
  40a1e8:	b.ne	40a2c0 <mpls_pton@@Base+0x3d8>  // b.any
  40a1ec:	ldr	x3, [x22]
  40a1f0:	mov	x2, x20
  40a1f4:	mov	x1, #0x1                   	// #1
  40a1f8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a1fc:	add	x0, x0, #0x740
  40a200:	bl	404ef0 <fwrite@plt>
  40a204:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a208:	cmp	w0, #0x27
  40a20c:	b.eq	40a2a8 <mpls_pton@@Base+0x3c0>  // b.none
  40a210:	cmp	w0, #0x5c
  40a214:	b.ne	40a234 <mpls_pton@@Base+0x34c>  // b.any
  40a218:	ldr	x3, [x22]
  40a21c:	mov	x2, x20
  40a220:	mov	x1, #0x1                   	// #1
  40a224:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a228:	add	x0, x0, #0x750
  40a22c:	bl	404ef0 <fwrite@plt>
  40a230:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a234:	cmp	w0, #0x22
  40a238:	b.ne	40a2c0 <mpls_pton@@Base+0x3d8>  // b.any
  40a23c:	ldr	x3, [x22]
  40a240:	mov	x2, x20
  40a244:	mov	x1, #0x1                   	// #1
  40a248:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a24c:	add	x0, x0, #0x758
  40a250:	bl	404ef0 <fwrite@plt>
  40a254:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a258:	ldr	x3, [x22]
  40a25c:	mov	x2, x20
  40a260:	mov	x1, #0x1                   	// #1
  40a264:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a268:	add	x0, x0, #0x730
  40a26c:	bl	404ef0 <fwrite@plt>
  40a270:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a274:	ldr	x3, [x22]
  40a278:	mov	x2, x20
  40a27c:	mov	x1, #0x1                   	// #1
  40a280:	mov	x0, x23
  40a284:	bl	404ef0 <fwrite@plt>
  40a288:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a28c:	ldr	x3, [x22]
  40a290:	mov	x2, x20
  40a294:	mov	x1, #0x1                   	// #1
  40a298:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a29c:	add	x0, x0, #0x748
  40a2a0:	bl	404ef0 <fwrite@plt>
  40a2a4:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a2a8:	ldr	x3, [x22]
  40a2ac:	mov	x2, x20
  40a2b0:	mov	x1, #0x1                   	// #1
  40a2b4:	mov	x0, x21
  40a2b8:	bl	404ef0 <fwrite@plt>
  40a2bc:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a2c0:	ldr	x1, [x22]
  40a2c4:	bl	404c50 <putc@plt>
  40a2c8:	b	40a1c4 <mpls_pton@@Base+0x2dc>
  40a2cc:	ldr	x23, [sp, #48]
  40a2d0:	ldr	x1, [x22]
  40a2d4:	mov	w0, #0x22                  	// #34
  40a2d8:	bl	404c50 <putc@plt>
  40a2dc:	ldp	x19, x20, [sp, #16]
  40a2e0:	ldp	x21, x22, [sp, #32]
  40a2e4:	ldp	x29, x30, [sp], #64
  40a2e8:	ret

000000000040a2ec <jsonw_new@@Base>:
  40a2ec:	stp	x29, x30, [sp, #-32]!
  40a2f0:	mov	x29, sp
  40a2f4:	str	x19, [sp, #16]
  40a2f8:	mov	x19, x0
  40a2fc:	mov	x0, #0x10                  	// #16
  40a300:	bl	404cd0 <malloc@plt>
  40a304:	cbz	x0, 40a318 <jsonw_new@@Base+0x2c>
  40a308:	str	x19, [x0]
  40a30c:	str	wzr, [x0, #8]
  40a310:	strb	wzr, [x0, #12]
  40a314:	strb	wzr, [x0, #13]
  40a318:	ldr	x19, [sp, #16]
  40a31c:	ldp	x29, x30, [sp], #32
  40a320:	ret

000000000040a324 <jsonw_destroy@@Base>:
  40a324:	stp	x29, x30, [sp, #-32]!
  40a328:	mov	x29, sp
  40a32c:	stp	x19, x20, [sp, #16]
  40a330:	mov	x19, x0
  40a334:	ldr	x20, [x0]
  40a338:	ldr	w0, [x20, #8]
  40a33c:	cbnz	w0, 40a36c <jsonw_destroy@@Base+0x48>
  40a340:	ldr	x1, [x20]
  40a344:	mov	w0, #0xa                   	// #10
  40a348:	bl	404c70 <fputc@plt>
  40a34c:	ldr	x0, [x20]
  40a350:	bl	404f10 <fflush@plt>
  40a354:	mov	x0, x20
  40a358:	bl	404e90 <free@plt>
  40a35c:	str	xzr, [x19]
  40a360:	ldp	x19, x20, [sp, #16]
  40a364:	ldp	x29, x30, [sp], #32
  40a368:	ret
  40a36c:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x258>
  40a370:	add	x3, x3, #0x7c0
  40a374:	add	x3, x3, #0x10
  40a378:	mov	w2, #0x6e                  	// #110
  40a37c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a380:	add	x1, x1, #0x708
  40a384:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40a388:	add	x0, x0, #0x768
  40a38c:	bl	405010 <__assert_fail@plt>

000000000040a390 <jsonw_pretty@@Base>:
  40a390:	strb	w1, [x0, #12]
  40a394:	ret

000000000040a398 <jsonw_name@@Base>:
  40a398:	stp	x29, x30, [sp, #-32]!
  40a39c:	mov	x29, sp
  40a3a0:	stp	x19, x20, [sp, #16]
  40a3a4:	mov	x19, x0
  40a3a8:	mov	x20, x1
  40a3ac:	bl	40a024 <mpls_pton@@Base+0x13c>
  40a3b0:	ldrb	w0, [x19, #12]
  40a3b4:	cbnz	w0, 40a3e8 <jsonw_name@@Base+0x50>
  40a3b8:	strb	wzr, [x19, #13]
  40a3bc:	mov	x1, x20
  40a3c0:	mov	x0, x19
  40a3c4:	bl	40a154 <mpls_pton@@Base+0x26c>
  40a3c8:	ldr	x1, [x19]
  40a3cc:	mov	w0, #0x3a                  	// #58
  40a3d0:	bl	404c50 <putc@plt>
  40a3d4:	ldrb	w0, [x19, #12]
  40a3d8:	cbnz	w0, 40a400 <jsonw_name@@Base+0x68>
  40a3dc:	ldp	x19, x20, [sp, #16]
  40a3e0:	ldp	x29, x30, [sp], #32
  40a3e4:	ret
  40a3e8:	ldr	x1, [x19]
  40a3ec:	mov	w0, #0xa                   	// #10
  40a3f0:	bl	404c50 <putc@plt>
  40a3f4:	mov	x0, x19
  40a3f8:	bl	40a05c <mpls_pton@@Base+0x174>
  40a3fc:	b	40a3b8 <jsonw_name@@Base+0x20>
  40a400:	ldr	x1, [x19]
  40a404:	mov	w0, #0x20                  	// #32
  40a408:	bl	404c50 <putc@plt>
  40a40c:	b	40a3dc <jsonw_name@@Base+0x44>

000000000040a410 <jsonw_printf@@Base>:
  40a410:	stp	x29, x30, [sp, #-272]!
  40a414:	mov	x29, sp
  40a418:	stp	x19, x20, [sp, #16]
  40a41c:	mov	x19, x0
  40a420:	mov	x20, x1
  40a424:	str	x2, [sp, #224]
  40a428:	str	x3, [sp, #232]
  40a42c:	str	x4, [sp, #240]
  40a430:	str	x5, [sp, #248]
  40a434:	str	x6, [sp, #256]
  40a438:	str	x7, [sp, #264]
  40a43c:	str	q0, [sp, #96]
  40a440:	str	q1, [sp, #112]
  40a444:	str	q2, [sp, #128]
  40a448:	str	q3, [sp, #144]
  40a44c:	str	q4, [sp, #160]
  40a450:	str	q5, [sp, #176]
  40a454:	str	q6, [sp, #192]
  40a458:	str	q7, [sp, #208]
  40a45c:	add	x1, sp, #0x110
  40a460:	str	x1, [sp, #64]
  40a464:	str	x1, [sp, #72]
  40a468:	add	x1, sp, #0xe0
  40a46c:	str	x1, [sp, #80]
  40a470:	mov	w1, #0xffffffd0            	// #-48
  40a474:	str	w1, [sp, #88]
  40a478:	mov	w1, #0xffffff80            	// #-128
  40a47c:	str	w1, [sp, #92]
  40a480:	bl	40a024 <mpls_pton@@Base+0x13c>
  40a484:	ldp	x0, x1, [sp, #64]
  40a488:	stp	x0, x1, [sp, #32]
  40a48c:	ldp	x0, x1, [sp, #80]
  40a490:	stp	x0, x1, [sp, #48]
  40a494:	add	x2, sp, #0x20
  40a498:	mov	x1, x20
  40a49c:	ldr	x0, [x19]
  40a4a0:	bl	404ff0 <vfprintf@plt>
  40a4a4:	ldp	x19, x20, [sp, #16]
  40a4a8:	ldp	x29, x30, [sp], #272
  40a4ac:	ret

000000000040a4b0 <jsonw_start_object@@Base>:
  40a4b0:	stp	x29, x30, [sp, #-32]!
  40a4b4:	mov	x29, sp
  40a4b8:	str	x19, [sp, #16]
  40a4bc:	mov	x19, x0
  40a4c0:	bl	40a024 <mpls_pton@@Base+0x13c>
  40a4c4:	ldr	x1, [x19]
  40a4c8:	mov	w0, #0x7b                  	// #123
  40a4cc:	bl	404c50 <putc@plt>
  40a4d0:	ldr	w0, [x19, #8]
  40a4d4:	add	w0, w0, #0x1
  40a4d8:	str	w0, [x19, #8]
  40a4dc:	strb	wzr, [x19, #13]
  40a4e0:	ldr	x19, [sp, #16]
  40a4e4:	ldp	x29, x30, [sp], #32
  40a4e8:	ret

000000000040a4ec <jsonw_end_object@@Base>:
  40a4ec:	stp	x29, x30, [sp, #-16]!
  40a4f0:	mov	x29, sp
  40a4f4:	mov	w1, #0x7d                  	// #125
  40a4f8:	bl	40a0c8 <mpls_pton@@Base+0x1e0>
  40a4fc:	ldp	x29, x30, [sp], #16
  40a500:	ret

000000000040a504 <jsonw_start_array@@Base>:
  40a504:	stp	x29, x30, [sp, #-32]!
  40a508:	mov	x29, sp
  40a50c:	str	x19, [sp, #16]
  40a510:	mov	x19, x0
  40a514:	bl	40a024 <mpls_pton@@Base+0x13c>
  40a518:	ldr	x1, [x19]
  40a51c:	mov	w0, #0x5b                  	// #91
  40a520:	bl	404c50 <putc@plt>
  40a524:	ldr	w0, [x19, #8]
  40a528:	add	w0, w0, #0x1
  40a52c:	str	w0, [x19, #8]
  40a530:	strb	wzr, [x19, #13]
  40a534:	ldrb	w0, [x19, #12]
  40a538:	cbnz	w0, 40a548 <jsonw_start_array@@Base+0x44>
  40a53c:	ldr	x19, [sp, #16]
  40a540:	ldp	x29, x30, [sp], #32
  40a544:	ret
  40a548:	ldr	x1, [x19]
  40a54c:	mov	w0, #0x20                  	// #32
  40a550:	bl	404c50 <putc@plt>
  40a554:	b	40a53c <jsonw_start_array@@Base+0x38>

000000000040a558 <jsonw_end_array@@Base>:
  40a558:	stp	x29, x30, [sp, #-32]!
  40a55c:	mov	x29, sp
  40a560:	str	x19, [sp, #16]
  40a564:	mov	x19, x0
  40a568:	ldrb	w0, [x0, #12]
  40a56c:	cbz	w0, 40a578 <jsonw_end_array@@Base+0x20>
  40a570:	ldrb	w0, [x19, #13]
  40a574:	cbnz	w0, 40a594 <jsonw_end_array@@Base+0x3c>
  40a578:	strb	wzr, [x19, #13]
  40a57c:	mov	w1, #0x5d                  	// #93
  40a580:	mov	x0, x19
  40a584:	bl	40a0c8 <mpls_pton@@Base+0x1e0>
  40a588:	ldr	x19, [sp, #16]
  40a58c:	ldp	x29, x30, [sp], #32
  40a590:	ret
  40a594:	ldr	x1, [x19]
  40a598:	mov	w0, #0x20                  	// #32
  40a59c:	bl	404c50 <putc@plt>
  40a5a0:	b	40a578 <jsonw_end_array@@Base+0x20>

000000000040a5a4 <jsonw_string@@Base>:
  40a5a4:	stp	x29, x30, [sp, #-32]!
  40a5a8:	mov	x29, sp
  40a5ac:	stp	x19, x20, [sp, #16]
  40a5b0:	mov	x19, x0
  40a5b4:	mov	x20, x1
  40a5b8:	bl	40a024 <mpls_pton@@Base+0x13c>
  40a5bc:	mov	x1, x20
  40a5c0:	mov	x0, x19
  40a5c4:	bl	40a154 <mpls_pton@@Base+0x26c>
  40a5c8:	ldp	x19, x20, [sp, #16]
  40a5cc:	ldp	x29, x30, [sp], #32
  40a5d0:	ret

000000000040a5d4 <jsonw_bool@@Base>:
  40a5d4:	stp	x29, x30, [sp, #-16]!
  40a5d8:	mov	x29, sp
  40a5dc:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x258>
  40a5e0:	add	x3, x3, #0x5e0
  40a5e4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x258>
  40a5e8:	add	x2, x2, #0x5d8
  40a5ec:	tst	w1, #0xff
  40a5f0:	csel	x2, x2, x3, ne  // ne = any
  40a5f4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a5f8:	add	x1, x1, #0x2b0
  40a5fc:	bl	40a410 <jsonw_printf@@Base>
  40a600:	ldp	x29, x30, [sp], #16
  40a604:	ret

000000000040a608 <jsonw_null@@Base>:
  40a608:	stp	x29, x30, [sp, #-16]!
  40a60c:	mov	x29, sp
  40a610:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a614:	add	x1, x1, #0x780
  40a618:	bl	40a410 <jsonw_printf@@Base>
  40a61c:	ldp	x29, x30, [sp], #16
  40a620:	ret

000000000040a624 <jsonw_float@@Base>:
  40a624:	stp	x29, x30, [sp, #-16]!
  40a628:	mov	x29, sp
  40a62c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a630:	add	x1, x1, #0x788
  40a634:	bl	40a410 <jsonw_printf@@Base>
  40a638:	ldp	x29, x30, [sp], #16
  40a63c:	ret

000000000040a640 <jsonw_hhu@@Base>:
  40a640:	stp	x29, x30, [sp, #-16]!
  40a644:	mov	x29, sp
  40a648:	and	w2, w1, #0xff
  40a64c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a650:	add	x1, x1, #0x790
  40a654:	bl	40a410 <jsonw_printf@@Base>
  40a658:	ldp	x29, x30, [sp], #16
  40a65c:	ret

000000000040a660 <jsonw_hu@@Base>:
  40a660:	stp	x29, x30, [sp, #-16]!
  40a664:	mov	x29, sp
  40a668:	and	w2, w1, #0xffff
  40a66c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a670:	add	x1, x1, #0x798
  40a674:	bl	40a410 <jsonw_printf@@Base>
  40a678:	ldp	x29, x30, [sp], #16
  40a67c:	ret

000000000040a680 <jsonw_uint@@Base>:
  40a680:	stp	x29, x30, [sp, #-16]!
  40a684:	mov	x29, sp
  40a688:	mov	w2, w1
  40a68c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a690:	add	x1, x1, #0x6d8
  40a694:	bl	40a410 <jsonw_printf@@Base>
  40a698:	ldp	x29, x30, [sp], #16
  40a69c:	ret

000000000040a6a0 <jsonw_u64@@Base>:
  40a6a0:	stp	x29, x30, [sp, #-16]!
  40a6a4:	mov	x29, sp
  40a6a8:	mov	x2, x1
  40a6ac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a6b0:	add	x1, x1, #0x7a0
  40a6b4:	bl	40a410 <jsonw_printf@@Base>
  40a6b8:	ldp	x29, x30, [sp], #16
  40a6bc:	ret

000000000040a6c0 <jsonw_xint@@Base>:
  40a6c0:	stp	x29, x30, [sp, #-16]!
  40a6c4:	mov	x29, sp
  40a6c8:	mov	x2, x1
  40a6cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a6d0:	add	x1, x1, #0x7a8
  40a6d4:	bl	40a410 <jsonw_printf@@Base>
  40a6d8:	ldp	x29, x30, [sp], #16
  40a6dc:	ret

000000000040a6e0 <jsonw_luint@@Base>:
  40a6e0:	stp	x29, x30, [sp, #-16]!
  40a6e4:	mov	x29, sp
  40a6e8:	mov	x2, x1
  40a6ec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a6f0:	add	x1, x1, #0x7a0
  40a6f4:	bl	40a410 <jsonw_printf@@Base>
  40a6f8:	ldp	x29, x30, [sp], #16
  40a6fc:	ret

000000000040a700 <jsonw_lluint@@Base>:
  40a700:	stp	x29, x30, [sp, #-16]!
  40a704:	mov	x29, sp
  40a708:	mov	x2, x1
  40a70c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a710:	add	x1, x1, #0x7b0
  40a714:	bl	40a410 <jsonw_printf@@Base>
  40a718:	ldp	x29, x30, [sp], #16
  40a71c:	ret

000000000040a720 <jsonw_int@@Base>:
  40a720:	stp	x29, x30, [sp, #-16]!
  40a724:	mov	x29, sp
  40a728:	mov	w2, w1
  40a72c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a730:	add	x1, x1, #0x500
  40a734:	bl	40a410 <jsonw_printf@@Base>
  40a738:	ldp	x29, x30, [sp], #16
  40a73c:	ret

000000000040a740 <jsonw_s64@@Base>:
  40a740:	stp	x29, x30, [sp, #-16]!
  40a744:	mov	x29, sp
  40a748:	mov	x2, x1
  40a74c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40a750:	add	x1, x1, #0x7b8
  40a754:	bl	40a410 <jsonw_printf@@Base>
  40a758:	ldp	x29, x30, [sp], #16
  40a75c:	ret

000000000040a760 <jsonw_string_field@@Base>:
  40a760:	stp	x29, x30, [sp, #-32]!
  40a764:	mov	x29, sp
  40a768:	stp	x19, x20, [sp, #16]
  40a76c:	mov	x19, x0
  40a770:	mov	x20, x2
  40a774:	bl	40a398 <jsonw_name@@Base>
  40a778:	mov	x1, x20
  40a77c:	mov	x0, x19
  40a780:	bl	40a5a4 <jsonw_string@@Base>
  40a784:	ldp	x19, x20, [sp, #16]
  40a788:	ldp	x29, x30, [sp], #32
  40a78c:	ret

000000000040a790 <jsonw_bool_field@@Base>:
  40a790:	stp	x29, x30, [sp, #-32]!
  40a794:	mov	x29, sp
  40a798:	stp	x19, x20, [sp, #16]
  40a79c:	mov	x19, x0
  40a7a0:	and	w20, w2, #0xff
  40a7a4:	bl	40a398 <jsonw_name@@Base>
  40a7a8:	mov	w1, w20
  40a7ac:	mov	x0, x19
  40a7b0:	bl	40a5d4 <jsonw_bool@@Base>
  40a7b4:	ldp	x19, x20, [sp, #16]
  40a7b8:	ldp	x29, x30, [sp], #32
  40a7bc:	ret

000000000040a7c0 <jsonw_float_field@@Base>:
  40a7c0:	stp	x29, x30, [sp, #-32]!
  40a7c4:	mov	x29, sp
  40a7c8:	str	x19, [sp, #16]
  40a7cc:	str	d8, [sp, #24]
  40a7d0:	mov	x19, x0
  40a7d4:	fmov	d8, d0
  40a7d8:	bl	40a398 <jsonw_name@@Base>
  40a7dc:	fmov	d0, d8
  40a7e0:	mov	x0, x19
  40a7e4:	bl	40a624 <jsonw_float@@Base>
  40a7e8:	ldr	x19, [sp, #16]
  40a7ec:	ldr	d8, [sp, #24]
  40a7f0:	ldp	x29, x30, [sp], #32
  40a7f4:	ret

000000000040a7f8 <jsonw_uint_field@@Base>:
  40a7f8:	stp	x29, x30, [sp, #-32]!
  40a7fc:	mov	x29, sp
  40a800:	stp	x19, x20, [sp, #16]
  40a804:	mov	x19, x0
  40a808:	mov	w20, w2
  40a80c:	bl	40a398 <jsonw_name@@Base>
  40a810:	mov	w1, w20
  40a814:	mov	x0, x19
  40a818:	bl	40a680 <jsonw_uint@@Base>
  40a81c:	ldp	x19, x20, [sp, #16]
  40a820:	ldp	x29, x30, [sp], #32
  40a824:	ret

000000000040a828 <jsonw_u64_field@@Base>:
  40a828:	stp	x29, x30, [sp, #-32]!
  40a82c:	mov	x29, sp
  40a830:	stp	x19, x20, [sp, #16]
  40a834:	mov	x19, x0
  40a838:	mov	x20, x2
  40a83c:	bl	40a398 <jsonw_name@@Base>
  40a840:	mov	x1, x20
  40a844:	mov	x0, x19
  40a848:	bl	40a6a0 <jsonw_u64@@Base>
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldp	x29, x30, [sp], #32
  40a854:	ret

000000000040a858 <jsonw_xint_field@@Base>:
  40a858:	stp	x29, x30, [sp, #-32]!
  40a85c:	mov	x29, sp
  40a860:	stp	x19, x20, [sp, #16]
  40a864:	mov	x19, x0
  40a868:	mov	x20, x2
  40a86c:	bl	40a398 <jsonw_name@@Base>
  40a870:	mov	x1, x20
  40a874:	mov	x0, x19
  40a878:	bl	40a6c0 <jsonw_xint@@Base>
  40a87c:	ldp	x19, x20, [sp, #16]
  40a880:	ldp	x29, x30, [sp], #32
  40a884:	ret

000000000040a888 <jsonw_hhu_field@@Base>:
  40a888:	stp	x29, x30, [sp, #-32]!
  40a88c:	mov	x29, sp
  40a890:	stp	x19, x20, [sp, #16]
  40a894:	mov	x19, x0
  40a898:	and	w20, w2, #0xff
  40a89c:	bl	40a398 <jsonw_name@@Base>
  40a8a0:	mov	w1, w20
  40a8a4:	mov	x0, x19
  40a8a8:	bl	40a640 <jsonw_hhu@@Base>
  40a8ac:	ldp	x19, x20, [sp, #16]
  40a8b0:	ldp	x29, x30, [sp], #32
  40a8b4:	ret

000000000040a8b8 <jsonw_hu_field@@Base>:
  40a8b8:	stp	x29, x30, [sp, #-32]!
  40a8bc:	mov	x29, sp
  40a8c0:	stp	x19, x20, [sp, #16]
  40a8c4:	mov	x19, x0
  40a8c8:	and	w20, w2, #0xffff
  40a8cc:	bl	40a398 <jsonw_name@@Base>
  40a8d0:	mov	w1, w20
  40a8d4:	mov	x0, x19
  40a8d8:	bl	40a660 <jsonw_hu@@Base>
  40a8dc:	ldp	x19, x20, [sp, #16]
  40a8e0:	ldp	x29, x30, [sp], #32
  40a8e4:	ret

000000000040a8e8 <jsonw_luint_field@@Base>:
  40a8e8:	stp	x29, x30, [sp, #-32]!
  40a8ec:	mov	x29, sp
  40a8f0:	stp	x19, x20, [sp, #16]
  40a8f4:	mov	x19, x0
  40a8f8:	mov	x20, x2
  40a8fc:	bl	40a398 <jsonw_name@@Base>
  40a900:	mov	x1, x20
  40a904:	mov	x0, x19
  40a908:	bl	40a6e0 <jsonw_luint@@Base>
  40a90c:	ldp	x19, x20, [sp, #16]
  40a910:	ldp	x29, x30, [sp], #32
  40a914:	ret

000000000040a918 <jsonw_lluint_field@@Base>:
  40a918:	stp	x29, x30, [sp, #-32]!
  40a91c:	mov	x29, sp
  40a920:	stp	x19, x20, [sp, #16]
  40a924:	mov	x19, x0
  40a928:	mov	x20, x2
  40a92c:	bl	40a398 <jsonw_name@@Base>
  40a930:	mov	x1, x20
  40a934:	mov	x0, x19
  40a938:	bl	40a700 <jsonw_lluint@@Base>
  40a93c:	ldp	x19, x20, [sp, #16]
  40a940:	ldp	x29, x30, [sp], #32
  40a944:	ret

000000000040a948 <jsonw_int_field@@Base>:
  40a948:	stp	x29, x30, [sp, #-32]!
  40a94c:	mov	x29, sp
  40a950:	stp	x19, x20, [sp, #16]
  40a954:	mov	x19, x0
  40a958:	mov	w20, w2
  40a95c:	bl	40a398 <jsonw_name@@Base>
  40a960:	mov	w1, w20
  40a964:	mov	x0, x19
  40a968:	bl	40a720 <jsonw_int@@Base>
  40a96c:	ldp	x19, x20, [sp, #16]
  40a970:	ldp	x29, x30, [sp], #32
  40a974:	ret

000000000040a978 <jsonw_s64_field@@Base>:
  40a978:	stp	x29, x30, [sp, #-32]!
  40a97c:	mov	x29, sp
  40a980:	stp	x19, x20, [sp, #16]
  40a984:	mov	x19, x0
  40a988:	mov	x20, x2
  40a98c:	bl	40a398 <jsonw_name@@Base>
  40a990:	mov	x1, x20
  40a994:	mov	x0, x19
  40a998:	bl	40a740 <jsonw_s64@@Base>
  40a99c:	ldp	x19, x20, [sp, #16]
  40a9a0:	ldp	x29, x30, [sp], #32
  40a9a4:	ret

000000000040a9a8 <jsonw_null_field@@Base>:
  40a9a8:	stp	x29, x30, [sp, #-32]!
  40a9ac:	mov	x29, sp
  40a9b0:	str	x19, [sp, #16]
  40a9b4:	mov	x19, x0
  40a9b8:	bl	40a398 <jsonw_name@@Base>
  40a9bc:	mov	x0, x19
  40a9c0:	bl	40a608 <jsonw_null@@Base>
  40a9c4:	ldr	x19, [sp, #16]
  40a9c8:	ldp	x29, x30, [sp], #32
  40a9cc:	ret
  40a9d0:	stp	x29, x30, [sp, #-48]!
  40a9d4:	mov	x29, sp
  40a9d8:	stp	xzr, xzr, [sp, #24]
  40a9dc:	str	xzr, [sp, #40]
  40a9e0:	mov	w2, #0x20                  	// #32
  40a9e4:	str	w2, [sp, #16]
  40a9e8:	mov	w2, #0x12                  	// #18
  40a9ec:	strh	w2, [sp, #20]
  40a9f0:	mov	w2, #0x301                 	// #769
  40a9f4:	strh	w2, [sp, #22]
  40a9f8:	ldr	w2, [x0, #28]
  40a9fc:	add	w2, w2, #0x1
  40aa00:	str	w2, [x0, #28]
  40aa04:	str	w2, [x0, #32]
  40aa08:	str	w2, [sp, #24]
  40aa0c:	strb	w1, [sp, #32]
  40aa10:	mov	w3, #0x0                   	// #0
  40aa14:	mov	x2, #0x20                  	// #32
  40aa18:	add	x1, sp, #0x10
  40aa1c:	ldr	w0, [x0]
  40aa20:	bl	404eb0 <send@plt>
  40aa24:	ldp	x29, x30, [sp], #48
  40aa28:	ret
  40aa2c:	stp	x29, x30, [sp, #-48]!
  40aa30:	mov	x29, sp
  40aa34:	stp	x19, x20, [sp, #16]
  40aa38:	stp	x21, x22, [sp, #32]
  40aa3c:	mov	w22, w0
  40aa40:	mov	x21, x1
  40aa44:	mov	w20, w2
  40aa48:	mov	w2, w20
  40aa4c:	mov	x1, x21
  40aa50:	mov	w0, w22
  40aa54:	bl	404b80 <recvmsg@plt>
  40aa58:	mov	w1, w0
  40aa5c:	tbz	w0, #31, 40aaac <jsonw_null_field@@Base+0x104>
  40aa60:	bl	405020 <__errno_location@plt>
  40aa64:	mov	x19, x0
  40aa68:	ldr	w0, [x0]
  40aa6c:	cmp	w0, #0x4
  40aa70:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40aa74:	b.eq	40aa48 <jsonw_null_field@@Base+0xa0>  // b.none
  40aa78:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x13258>
  40aa7c:	ldr	x1, [x1, #3992]
  40aa80:	ldr	x20, [x1]
  40aa84:	bl	404db0 <strerror@plt>
  40aa88:	ldr	w3, [x19]
  40aa8c:	mov	x2, x0
  40aa90:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40aa94:	add	x1, x1, #0x7e0
  40aa98:	mov	x0, x20
  40aa9c:	bl	405070 <fprintf@plt>
  40aaa0:	ldr	w1, [x19]
  40aaa4:	neg	w1, w1
  40aaa8:	b	40aab0 <jsonw_null_field@@Base+0x108>
  40aaac:	cbz	w0, 40aac4 <jsonw_null_field@@Base+0x11c>
  40aab0:	mov	w0, w1
  40aab4:	ldp	x19, x20, [sp, #16]
  40aab8:	ldp	x21, x22, [sp, #32]
  40aabc:	ldp	x29, x30, [sp], #48
  40aac0:	ret
  40aac4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40aac8:	ldr	x0, [x0, #3992]
  40aacc:	ldr	x3, [x0]
  40aad0:	mov	x2, #0xf                   	// #15
  40aad4:	mov	x1, #0x1                   	// #1
  40aad8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40aadc:	add	x0, x0, #0x800
  40aae0:	bl	404ef0 <fwrite@plt>
  40aae4:	mov	w1, #0xffffffc3            	// #-61
  40aae8:	b	40aab0 <jsonw_null_field@@Base+0x108>
  40aaec:	stp	x29, x30, [sp, #-64]!
  40aaf0:	mov	x29, sp
  40aaf4:	stp	x19, x20, [sp, #16]
  40aaf8:	stp	x21, x22, [sp, #32]
  40aafc:	stp	x23, x24, [sp, #48]
  40ab00:	mov	w23, w0
  40ab04:	mov	x20, x1
  40ab08:	mov	x22, x2
  40ab0c:	ldr	x21, [x1, #16]
  40ab10:	str	xzr, [x21]
  40ab14:	str	xzr, [x21, #8]
  40ab18:	mov	w2, #0x22                  	// #34
  40ab1c:	bl	40aa2c <jsonw_null_field@@Base+0x84>
  40ab20:	mov	w19, w0
  40ab24:	tbnz	w0, #31, 40ab70 <jsonw_null_field@@Base+0x1c8>
  40ab28:	cmp	w0, #0x8, lsl #12
  40ab2c:	mov	w0, #0x8000                	// #32768
  40ab30:	csel	w19, w19, w0, ge  // ge = tcont
  40ab34:	sxtw	x19, w19
  40ab38:	mov	x0, x19
  40ab3c:	bl	404cd0 <malloc@plt>
  40ab40:	mov	x24, x0
  40ab44:	cbz	x0, 40ab88 <jsonw_null_field@@Base+0x1e0>
  40ab48:	str	x0, [x21]
  40ab4c:	str	x19, [x21, #8]
  40ab50:	mov	w2, #0x0                   	// #0
  40ab54:	mov	x1, x20
  40ab58:	mov	w0, w23
  40ab5c:	bl	40aa2c <jsonw_null_field@@Base+0x84>
  40ab60:	mov	w19, w0
  40ab64:	tbnz	w0, #31, 40abb0 <jsonw_null_field@@Base+0x208>
  40ab68:	cbz	x22, 40abbc <jsonw_null_field@@Base+0x214>
  40ab6c:	str	x24, [x22]
  40ab70:	mov	w0, w19
  40ab74:	ldp	x19, x20, [sp, #16]
  40ab78:	ldp	x21, x22, [sp, #32]
  40ab7c:	ldp	x23, x24, [sp, #48]
  40ab80:	ldp	x29, x30, [sp], #64
  40ab84:	ret
  40ab88:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40ab8c:	ldr	x0, [x0, #3992]
  40ab90:	ldr	x3, [x0]
  40ab94:	mov	x2, #0x20                  	// #32
  40ab98:	mov	x1, #0x1                   	// #1
  40ab9c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40aba0:	add	x0, x0, #0x810
  40aba4:	bl	404ef0 <fwrite@plt>
  40aba8:	mov	w19, #0xfffffff4            	// #-12
  40abac:	b	40ab70 <jsonw_null_field@@Base+0x1c8>
  40abb0:	mov	x0, x24
  40abb4:	bl	404e90 <free@plt>
  40abb8:	b	40ab70 <jsonw_null_field@@Base+0x1c8>
  40abbc:	mov	x0, x24
  40abc0:	bl	404e90 <free@plt>
  40abc4:	b	40ab70 <jsonw_null_field@@Base+0x1c8>

000000000040abc8 <nl_dump_ext_ack@@Base>:
  40abc8:	mov	w0, #0x0                   	// #0
  40abcc:	ret
  40abd0:	stp	x29, x30, [sp, #-240]!
  40abd4:	mov	x29, sp
  40abd8:	stp	x19, x20, [sp, #16]
  40abdc:	stp	x23, x24, [sp, #48]
  40abe0:	stp	x25, x26, [sp, #64]
  40abe4:	mov	x24, x0
  40abe8:	str	x2, [sp, #120]
  40abec:	mov	x25, x3
  40abf0:	and	w0, w4, #0xff
  40abf4:	str	w0, [sp, #132]
  40abf8:	str	x5, [sp, #136]
  40abfc:	str	xzr, [sp, #224]
  40ac00:	str	wzr, [sp, #232]
  40ac04:	mov	w0, #0x10                  	// #16
  40ac08:	strh	w0, [sp, #224]
  40ac0c:	stp	xzr, xzr, [sp, #160]
  40ac10:	stp	xzr, xzr, [sp, #176]
  40ac14:	stp	xzr, xzr, [sp, #192]
  40ac18:	add	x0, sp, #0xe0
  40ac1c:	str	x0, [sp, #152]
  40ac20:	mov	w0, #0xc                   	// #12
  40ac24:	str	w0, [sp, #160]
  40ac28:	str	x1, [sp, #168]
  40ac2c:	str	x2, [sp, #176]
  40ac30:	cbz	x2, 40ac74 <nl_dump_ext_ack@@Base+0xac>
  40ac34:	mov	x0, x1
  40ac38:	add	x2, x1, x2, lsl #4
  40ac3c:	b	40ac4c <nl_dump_ext_ack@@Base+0x84>
  40ac40:	add	x0, x0, #0x10
  40ac44:	cmp	x0, x2
  40ac48:	b.eq	40ac78 <nl_dump_ext_ack@@Base+0xb0>  // b.none
  40ac4c:	ldr	x1, [x0]
  40ac50:	ldr	w23, [x24, #28]
  40ac54:	add	w23, w23, #0x1
  40ac58:	str	w23, [x24, #28]
  40ac5c:	str	w23, [x1, #8]
  40ac60:	cbnz	x25, 40ac40 <nl_dump_ext_ack@@Base+0x78>
  40ac64:	ldrh	w3, [x1, #6]
  40ac68:	orr	w3, w3, #0x4
  40ac6c:	strh	w3, [x1, #6]
  40ac70:	b	40ac40 <nl_dump_ext_ack@@Base+0x78>
  40ac74:	mov	w23, #0x0                   	// #0
  40ac78:	mov	w2, #0x0                   	// #0
  40ac7c:	add	x1, sp, #0x98
  40ac80:	ldr	w0, [x24]
  40ac84:	bl	404d50 <sendmsg@plt>
  40ac88:	tbnz	w0, #31, 40ad24 <nl_dump_ext_ack@@Base+0x15c>
  40ac8c:	stp	x21, x22, [sp, #32]
  40ac90:	stp	x27, x28, [sp, #80]
  40ac94:	add	x0, sp, #0xd0
  40ac98:	str	x0, [sp, #168]
  40ac9c:	mov	x0, #0x1                   	// #1
  40aca0:	str	x0, [sp, #176]
  40aca4:	str	xzr, [sp, #96]
  40aca8:	add	x0, sp, #0x90
  40acac:	str	x0, [sp, #104]
  40acb0:	add	x0, sp, #0x98
  40acb4:	str	x0, [sp, #112]
  40acb8:	mov	w26, w23
  40acbc:	ldr	x0, [sp, #120]
  40acc0:	sub	x26, x26, x0
  40acc4:	ldr	w0, [sp, #96]
  40acc8:	str	w0, [sp, #128]
  40accc:	ldr	x2, [sp, #104]
  40acd0:	ldr	x1, [sp, #112]
  40acd4:	ldr	w0, [x24]
  40acd8:	bl	40aaec <jsonw_null_field@@Base+0x144>
  40acdc:	mov	w20, w0
  40ace0:	tbnz	w0, #31, 40afe0 <nl_dump_ext_ack@@Base+0x418>
  40ace4:	ldr	w2, [sp, #160]
  40ace8:	cmp	w2, #0xc
  40acec:	b.ne	40ad38 <nl_dump_ext_ack@@Base+0x170>  // b.any
  40acf0:	ldr	x21, [sp, #144]
  40acf4:	mov	w22, w0
  40acf8:	cmp	w0, #0xf
  40acfc:	b.ls	40af74 <nl_dump_ext_ack@@Base+0x3ac>  // b.plast
  40ad00:	ldr	w19, [x21]
  40ad04:	mov	w2, w19
  40ad08:	subs	w3, w19, #0x10
  40ad0c:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40ad10:	b.lt	40ad58 <nl_dump_ext_ack@@Base+0x190>  // b.tstop
  40ad14:	adrp	x27, 420000 <_IO_stdin_used@@Base+0x13258>
  40ad18:	ldr	x27, [x27, #3992]
  40ad1c:	adrp	x28, 40d000 <_IO_stdin_used@@Base+0x258>
  40ad20:	b	40adfc <nl_dump_ext_ack@@Base+0x234>
  40ad24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40ad28:	add	x0, x0, #0x838
  40ad2c:	bl	404bc0 <perror@plt>
  40ad30:	mov	w20, #0xffffffff            	// #-1
  40ad34:	b	40ad94 <nl_dump_ext_ack@@Base+0x1cc>
  40ad38:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40ad3c:	add	x1, x1, #0x858
  40ad40:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40ad44:	ldr	x0, [x0, #3992]
  40ad48:	ldr	x0, [x0]
  40ad4c:	bl	405070 <fprintf@plt>
  40ad50:	mov	w0, #0x1                   	// #1
  40ad54:	bl	404bb0 <exit@plt>
  40ad58:	ldr	w0, [sp, #200]
  40ad5c:	tbz	w0, #5, 40adac <nl_dump_ext_ack@@Base+0x1e4>
  40ad60:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40ad64:	ldr	x0, [x0, #3992]
  40ad68:	ldr	x3, [x0]
  40ad6c:	mov	x2, #0x12                  	// #18
  40ad70:	mov	x1, #0x1                   	// #1
  40ad74:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40ad78:	add	x0, x0, #0x878
  40ad7c:	bl	404ef0 <fwrite@plt>
  40ad80:	ldr	x0, [sp, #144]
  40ad84:	bl	404e90 <free@plt>
  40ad88:	mov	w20, #0xffffffff            	// #-1
  40ad8c:	ldp	x21, x22, [sp, #32]
  40ad90:	ldp	x27, x28, [sp, #80]
  40ad94:	mov	w0, w20
  40ad98:	ldp	x19, x20, [sp, #16]
  40ad9c:	ldp	x23, x24, [sp, #48]
  40ada0:	ldp	x25, x26, [sp, #64]
  40ada4:	ldp	x29, x30, [sp], #240
  40ada8:	ret
  40adac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40adb0:	add	x1, x1, #0x890
  40adb4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40adb8:	ldr	x0, [x0, #3992]
  40adbc:	ldr	x0, [x0]
  40adc0:	bl	405070 <fprintf@plt>
  40adc4:	mov	w0, #0x1                   	// #1
  40adc8:	bl	404bb0 <exit@plt>
  40adcc:	add	w19, w19, #0x3
  40add0:	and	w19, w19, #0xfffffffc
  40add4:	sub	w20, w22, w19
  40add8:	add	x21, x21, w19, uxtw
  40addc:	mov	w22, w20
  40ade0:	cmp	w20, #0xf
  40ade4:	b.ls	40af74 <nl_dump_ext_ack@@Base+0x3ac>  // b.plast
  40ade8:	ldr	w19, [x21]
  40adec:	mov	w2, w19
  40adf0:	subs	w3, w19, #0x10
  40adf4:	ccmp	w20, w19, #0x1, pl  // pl = nfrst
  40adf8:	b.lt	40ad58 <nl_dump_ext_ack@@Base+0x190>  // b.tstop
  40adfc:	ldr	w0, [sp, #228]
  40ae00:	cbnz	w0, 40adcc <nl_dump_ext_ack@@Base+0x204>
  40ae04:	ldr	w1, [x21, #12]
  40ae08:	ldr	w0, [x24, #8]
  40ae0c:	cmp	w1, w0
  40ae10:	b.ne	40adcc <nl_dump_ext_ack@@Base+0x204>  // b.any
  40ae14:	ldr	w0, [x21, #8]
  40ae18:	cmp	w0, w23
  40ae1c:	b.hi	40adcc <nl_dump_ext_ack@@Base+0x204>  // b.pmore
  40ae20:	cmp	x26, w0, uxtw
  40ae24:	b.hi	40adcc <nl_dump_ext_ack@@Base+0x204>  // b.pmore
  40ae28:	ldrh	w0, [x21, #4]
  40ae2c:	cmp	w0, #0x2
  40ae30:	b.eq	40ae60 <nl_dump_ext_ack@@Base+0x298>  // b.none
  40ae34:	cbnz	x25, 40af5c <nl_dump_ext_ack@@Base+0x394>
  40ae38:	ldr	x3, [x27]
  40ae3c:	mov	x2, #0x14                  	// #20
  40ae40:	mov	x1, #0x1                   	// #1
  40ae44:	add	x0, x28, #0x8e0
  40ae48:	bl	404ef0 <fwrite@plt>
  40ae4c:	add	w19, w19, #0x3
  40ae50:	and	w19, w19, #0xfffffffc
  40ae54:	sub	w20, w22, w19
  40ae58:	add	x21, x21, w19, uxtw
  40ae5c:	b	40addc <nl_dump_ext_ack@@Base+0x214>
  40ae60:	ldr	w20, [x21, #16]
  40ae64:	cmp	w3, #0x13
  40ae68:	b.ls	40aec8 <nl_dump_ext_ack@@Base+0x300>  // b.plast
  40ae6c:	cbz	w20, 40af00 <nl_dump_ext_ack@@Base+0x338>
  40ae70:	bl	405020 <__errno_location@plt>
  40ae74:	neg	w1, w20
  40ae78:	str	w1, [x0]
  40ae7c:	ldr	w0, [x24, #36]
  40ae80:	ldr	w1, [sp, #132]
  40ae84:	cmp	w1, #0x0
  40ae88:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  40ae8c:	b.ne	40af10 <nl_dump_ext_ack@@Base+0x348>  // b.any
  40ae90:	cbz	x25, 40af50 <nl_dump_ext_ack@@Base+0x388>
  40ae94:	ldr	x0, [sp, #144]
  40ae98:	str	x0, [x25]
  40ae9c:	ldr	x0, [sp, #96]
  40aea0:	add	x0, x0, #0x1
  40aea4:	ldr	x1, [sp, #120]
  40aea8:	cmp	x1, x0
  40aeac:	b.hi	40af88 <nl_dump_ext_ack@@Base+0x3c0>  // b.pmore
  40aeb0:	cmp	w20, #0x0
  40aeb4:	ldr	w0, [sp, #128]
  40aeb8:	csinv	w20, w20, w0, eq  // eq = none
  40aebc:	ldp	x21, x22, [sp, #32]
  40aec0:	ldp	x27, x28, [sp, #80]
  40aec4:	b	40ad94 <nl_dump_ext_ack@@Base+0x1cc>
  40aec8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40aecc:	ldr	x0, [x0, #3992]
  40aed0:	ldr	x3, [x0]
  40aed4:	mov	x2, #0x10                  	// #16
  40aed8:	mov	x1, #0x1                   	// #1
  40aedc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40aee0:	add	x0, x0, #0x8b0
  40aee4:	bl	404ef0 <fwrite@plt>
  40aee8:	ldr	x0, [sp, #144]
  40aeec:	bl	404e90 <free@plt>
  40aef0:	mov	w20, #0xffffffff            	// #-1
  40aef4:	ldp	x21, x22, [sp, #32]
  40aef8:	ldp	x27, x28, [sp, #80]
  40aefc:	b	40ad94 <nl_dump_ext_ack@@Base+0x1cc>
  40af00:	ldr	x1, [sp, #136]
  40af04:	mov	x0, x21
  40af08:	bl	40abc8 <nl_dump_ext_ack@@Base>
  40af0c:	b	40ae90 <nl_dump_ext_ack@@Base+0x2c8>
  40af10:	ldr	x1, [sp, #136]
  40af14:	mov	x0, x21
  40af18:	bl	40abc8 <nl_dump_ext_ack@@Base>
  40af1c:	cbnz	w0, 40ae90 <nl_dump_ext_ack@@Base+0x2c8>
  40af20:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40af24:	ldr	x0, [x0, #3992]
  40af28:	ldr	x19, [x0]
  40af2c:	ldr	w0, [x21, #16]
  40af30:	neg	w0, w0
  40af34:	bl	404db0 <strerror@plt>
  40af38:	mov	x2, x0
  40af3c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40af40:	add	x1, x1, #0x8c8
  40af44:	mov	x0, x19
  40af48:	bl	405070 <fprintf@plt>
  40af4c:	b	40ae90 <nl_dump_ext_ack@@Base+0x2c8>
  40af50:	ldr	x0, [sp, #144]
  40af54:	bl	404e90 <free@plt>
  40af58:	b	40ae9c <nl_dump_ext_ack@@Base+0x2d4>
  40af5c:	ldr	x0, [sp, #144]
  40af60:	str	x0, [x25]
  40af64:	mov	w20, #0x0                   	// #0
  40af68:	ldp	x21, x22, [sp, #32]
  40af6c:	ldp	x27, x28, [sp, #80]
  40af70:	b	40ad94 <nl_dump_ext_ack@@Base+0x1cc>
  40af74:	ldr	x0, [sp, #144]
  40af78:	bl	404e90 <free@plt>
  40af7c:	ldr	w0, [sp, #200]
  40af80:	tbnz	w0, #5, 40af98 <nl_dump_ext_ack@@Base+0x3d0>
  40af84:	cbnz	w20, 40afbc <nl_dump_ext_ack@@Base+0x3f4>
  40af88:	ldr	x0, [sp, #96]
  40af8c:	add	x0, x0, #0x1
  40af90:	str	x0, [sp, #96]
  40af94:	b	40acc4 <nl_dump_ext_ack@@Base+0xfc>
  40af98:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40af9c:	ldr	x0, [x0, #3992]
  40afa0:	ldr	x3, [x0]
  40afa4:	mov	x2, #0x12                  	// #18
  40afa8:	mov	x1, #0x1                   	// #1
  40afac:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40afb0:	add	x0, x0, #0x8f8
  40afb4:	bl	404ef0 <fwrite@plt>
  40afb8:	b	40af88 <nl_dump_ext_ack@@Base+0x3c0>
  40afbc:	mov	w2, w20
  40afc0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40afc4:	add	x1, x1, #0x910
  40afc8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40afcc:	ldr	x0, [x0, #3992]
  40afd0:	ldr	x0, [x0]
  40afd4:	bl	405070 <fprintf@plt>
  40afd8:	mov	w0, #0x1                   	// #1
  40afdc:	bl	404bb0 <exit@plt>
  40afe0:	ldp	x21, x22, [sp, #32]
  40afe4:	ldp	x27, x28, [sp, #80]
  40afe8:	b	40ad94 <nl_dump_ext_ack@@Base+0x1cc>

000000000040afec <nl_dump_ext_ack_done@@Base>:
  40afec:	mov	w0, #0x0                   	// #0
  40aff0:	ret

000000000040aff4 <rtnl_set_strict_dump@@Base>:
  40aff4:	stp	x29, x30, [sp, #-48]!
  40aff8:	mov	x29, sp
  40affc:	str	x19, [sp, #16]
  40b000:	mov	x19, x0
  40b004:	mov	w0, #0x1                   	// #1
  40b008:	str	w0, [sp, #44]
  40b00c:	mov	w4, #0x4                   	// #4
  40b010:	add	x3, sp, #0x2c
  40b014:	mov	w2, #0xc                   	// #12
  40b018:	mov	w1, #0x10e                 	// #270
  40b01c:	ldr	w0, [x19]
  40b020:	bl	404ce0 <setsockopt@plt>
  40b024:	tbnz	w0, #31, 40b034 <rtnl_set_strict_dump@@Base+0x40>
  40b028:	ldr	w0, [x19, #48]
  40b02c:	orr	w0, w0, #0x4
  40b030:	str	w0, [x19, #48]
  40b034:	ldr	x19, [sp, #16]
  40b038:	ldp	x29, x30, [sp], #48
  40b03c:	ret

000000000040b040 <rtnl_add_nl_group@@Base>:
  40b040:	stp	x29, x30, [sp, #-32]!
  40b044:	mov	x29, sp
  40b048:	str	w1, [sp, #28]
  40b04c:	mov	w4, #0x4                   	// #4
  40b050:	add	x3, sp, #0x1c
  40b054:	mov	w2, #0x1                   	// #1
  40b058:	mov	w1, #0x10e                 	// #270
  40b05c:	ldr	w0, [x0]
  40b060:	bl	404ce0 <setsockopt@plt>
  40b064:	ldp	x29, x30, [sp], #32
  40b068:	ret

000000000040b06c <rtnl_close@@Base>:
  40b06c:	stp	x29, x30, [sp, #-32]!
  40b070:	mov	x29, sp
  40b074:	str	x19, [sp, #16]
  40b078:	mov	x19, x0
  40b07c:	ldr	w0, [x0]
  40b080:	tbz	w0, #31, 40b090 <rtnl_close@@Base+0x24>
  40b084:	ldr	x19, [sp, #16]
  40b088:	ldp	x29, x30, [sp], #32
  40b08c:	ret
  40b090:	bl	404dc0 <close@plt>
  40b094:	mov	w0, #0xffffffff            	// #-1
  40b098:	str	w0, [x19]
  40b09c:	b	40b084 <rtnl_close@@Base+0x18>

000000000040b0a0 <rtnl_open_byproto@@Base>:
  40b0a0:	stp	x29, x30, [sp, #-64]!
  40b0a4:	mov	x29, sp
  40b0a8:	stp	x19, x20, [sp, #16]
  40b0ac:	str	x21, [sp, #32]
  40b0b0:	mov	x19, x0
  40b0b4:	mov	w21, w1
  40b0b8:	mov	w0, #0x8000                	// #32768
  40b0bc:	str	w0, [sp, #56]
  40b0c0:	mov	w0, #0x1                   	// #1
  40b0c4:	str	w0, [sp, #52]
  40b0c8:	stp	xzr, xzr, [x19]
  40b0cc:	stp	xzr, xzr, [x19, #16]
  40b0d0:	stp	xzr, xzr, [x19, #32]
  40b0d4:	str	xzr, [x19, #48]
  40b0d8:	str	w2, [x19, #36]
  40b0dc:	mov	w1, #0x3                   	// #3
  40b0e0:	movk	w1, #0x8, lsl #16
  40b0e4:	mov	w0, #0x10                  	// #16
  40b0e8:	bl	404f00 <socket@plt>
  40b0ec:	str	w0, [x19]
  40b0f0:	tbnz	w0, #31, 40b1c4 <rtnl_open_byproto@@Base+0x124>
  40b0f4:	mov	w4, #0x4                   	// #4
  40b0f8:	add	x3, sp, #0x38
  40b0fc:	mov	w2, #0x7                   	// #7
  40b100:	mov	w1, #0x1                   	// #1
  40b104:	bl	404ce0 <setsockopt@plt>
  40b108:	tbnz	w0, #31, 40b1d8 <rtnl_open_byproto@@Base+0x138>
  40b10c:	mov	w4, #0x4                   	// #4
  40b110:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x13258>
  40b114:	ldr	x3, [x3, #4024]
  40b118:	mov	w2, #0x8                   	// #8
  40b11c:	mov	w1, #0x1                   	// #1
  40b120:	ldr	w0, [x19]
  40b124:	bl	404ce0 <setsockopt@plt>
  40b128:	tbnz	w0, #31, 40b1ec <rtnl_open_byproto@@Base+0x14c>
  40b12c:	mov	x20, x19
  40b130:	mov	w4, #0x4                   	// #4
  40b134:	add	x3, sp, #0x34
  40b138:	mov	w2, #0xb                   	// #11
  40b13c:	mov	w1, #0x10e                 	// #270
  40b140:	ldr	w0, [x20], #4
  40b144:	bl	404ce0 <setsockopt@plt>
  40b148:	stur	wzr, [x19, #6]
  40b14c:	strh	wzr, [x19, #10]
  40b150:	mov	w0, #0x10                  	// #16
  40b154:	strh	w0, [x19, #4]
  40b158:	str	w21, [x19, #12]
  40b15c:	mov	w2, #0xc                   	// #12
  40b160:	mov	x1, x20
  40b164:	ldr	w0, [x19]
  40b168:	bl	404c10 <bind@plt>
  40b16c:	tbnz	w0, #31, 40b200 <rtnl_open_byproto@@Base+0x160>
  40b170:	mov	w0, #0xc                   	// #12
  40b174:	str	w0, [sp, #60]
  40b178:	add	x2, sp, #0x3c
  40b17c:	mov	x1, x20
  40b180:	ldr	w0, [x19]
  40b184:	bl	405060 <getsockname@plt>
  40b188:	tbnz	w0, #31, 40b214 <rtnl_open_byproto@@Base+0x174>
  40b18c:	ldr	w2, [sp, #60]
  40b190:	cmp	w2, #0xc
  40b194:	b.ne	40b228 <rtnl_open_byproto@@Base+0x188>  // b.any
  40b198:	ldrh	w2, [x19, #4]
  40b19c:	cmp	w2, #0x10
  40b1a0:	b.ne	40b248 <rtnl_open_byproto@@Base+0x1a8>  // b.any
  40b1a4:	mov	x0, #0x0                   	// #0
  40b1a8:	bl	404cc0 <time@plt>
  40b1ac:	str	w0, [x19, #28]
  40b1b0:	mov	w0, #0x0                   	// #0
  40b1b4:	ldp	x19, x20, [sp, #16]
  40b1b8:	ldr	x21, [sp, #32]
  40b1bc:	ldp	x29, x30, [sp], #64
  40b1c0:	ret
  40b1c4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40b1c8:	add	x0, x0, #0x928
  40b1cc:	bl	404bc0 <perror@plt>
  40b1d0:	mov	w0, #0xffffffff            	// #-1
  40b1d4:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b1d8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40b1dc:	add	x0, x0, #0x948
  40b1e0:	bl	404bc0 <perror@plt>
  40b1e4:	mov	w0, #0xffffffff            	// #-1
  40b1e8:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b1ec:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40b1f0:	add	x0, x0, #0x958
  40b1f4:	bl	404bc0 <perror@plt>
  40b1f8:	mov	w0, #0xffffffff            	// #-1
  40b1fc:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b200:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40b204:	add	x0, x0, #0x968
  40b208:	bl	404bc0 <perror@plt>
  40b20c:	mov	w0, #0xffffffff            	// #-1
  40b210:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b214:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40b218:	add	x0, x0, #0x988
  40b21c:	bl	404bc0 <perror@plt>
  40b220:	mov	w0, #0xffffffff            	// #-1
  40b224:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b228:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40b22c:	add	x1, x1, #0x9a0
  40b230:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40b234:	ldr	x0, [x0, #3992]
  40b238:	ldr	x0, [x0]
  40b23c:	bl	405070 <fprintf@plt>
  40b240:	mov	w0, #0xffffffff            	// #-1
  40b244:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>
  40b248:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40b24c:	add	x1, x1, #0x9c0
  40b250:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40b254:	ldr	x0, [x0, #3992]
  40b258:	ldr	x0, [x0]
  40b25c:	bl	405070 <fprintf@plt>
  40b260:	mov	w0, #0xffffffff            	// #-1
  40b264:	b	40b1b4 <rtnl_open_byproto@@Base+0x114>

000000000040b268 <rtnl_open@@Base>:
  40b268:	stp	x29, x30, [sp, #-16]!
  40b26c:	mov	x29, sp
  40b270:	mov	w2, #0x0                   	// #0
  40b274:	bl	40b0a0 <rtnl_open_byproto@@Base>
  40b278:	ldp	x29, x30, [sp], #16
  40b27c:	ret

000000000040b280 <rtnl_nexthopdump_req@@Base>:
  40b280:	stp	x29, x30, [sp, #-192]!
  40b284:	mov	x29, sp
  40b288:	str	x19, [sp, #16]
  40b28c:	mov	x19, x0
  40b290:	stp	xzr, xzr, [sp, #48]
  40b294:	stp	xzr, xzr, [sp, #64]
  40b298:	stp	xzr, xzr, [sp, #80]
  40b29c:	stp	xzr, xzr, [sp, #96]
  40b2a0:	stp	xzr, xzr, [sp, #112]
  40b2a4:	stp	xzr, xzr, [sp, #128]
  40b2a8:	stp	xzr, xzr, [sp, #144]
  40b2ac:	stp	xzr, xzr, [sp, #160]
  40b2b0:	stp	xzr, xzr, [sp, #176]
  40b2b4:	mov	w0, #0x18                  	// #24
  40b2b8:	str	w0, [sp, #40]
  40b2bc:	mov	w0, #0x6a                  	// #106
  40b2c0:	strh	w0, [sp, #44]
  40b2c4:	mov	w0, #0x301                 	// #769
  40b2c8:	strh	w0, [sp, #46]
  40b2cc:	ldr	w0, [x19, #28]
  40b2d0:	add	w0, w0, #0x1
  40b2d4:	str	w0, [x19, #28]
  40b2d8:	str	w0, [x19, #32]
  40b2dc:	str	w0, [sp, #48]
  40b2e0:	strb	w1, [sp, #56]
  40b2e4:	cbz	x2, 40b2f8 <rtnl_nexthopdump_req@@Base+0x78>
  40b2e8:	mov	w1, #0x98                  	// #152
  40b2ec:	add	x0, sp, #0x28
  40b2f0:	blr	x2
  40b2f4:	cbnz	w0, 40b30c <rtnl_nexthopdump_req@@Base+0x8c>
  40b2f8:	mov	w3, #0x0                   	// #0
  40b2fc:	mov	x2, #0x98                  	// #152
  40b300:	add	x1, sp, #0x28
  40b304:	ldr	w0, [x19]
  40b308:	bl	404eb0 <send@plt>
  40b30c:	ldr	x19, [sp, #16]
  40b310:	ldp	x29, x30, [sp], #192
  40b314:	ret

000000000040b318 <rtnl_addrdump_req@@Base>:
  40b318:	stp	x29, x30, [sp, #-192]!
  40b31c:	mov	x29, sp
  40b320:	str	x19, [sp, #16]
  40b324:	mov	x19, x0
  40b328:	stp	xzr, xzr, [sp, #48]
  40b32c:	stp	xzr, xzr, [sp, #64]
  40b330:	stp	xzr, xzr, [sp, #80]
  40b334:	stp	xzr, xzr, [sp, #96]
  40b338:	stp	xzr, xzr, [sp, #112]
  40b33c:	stp	xzr, xzr, [sp, #128]
  40b340:	stp	xzr, xzr, [sp, #144]
  40b344:	stp	xzr, xzr, [sp, #160]
  40b348:	stp	xzr, xzr, [sp, #176]
  40b34c:	mov	w0, #0x18                  	// #24
  40b350:	str	w0, [sp, #40]
  40b354:	mov	w0, #0x16                  	// #22
  40b358:	strh	w0, [sp, #44]
  40b35c:	mov	w0, #0x301                 	// #769
  40b360:	strh	w0, [sp, #46]
  40b364:	ldr	w0, [x19, #28]
  40b368:	add	w0, w0, #0x1
  40b36c:	str	w0, [x19, #28]
  40b370:	str	w0, [x19, #32]
  40b374:	str	w0, [sp, #48]
  40b378:	strb	w1, [sp, #56]
  40b37c:	cbz	x2, 40b390 <rtnl_addrdump_req@@Base+0x78>
  40b380:	mov	w1, #0x98                  	// #152
  40b384:	add	x0, sp, #0x28
  40b388:	blr	x2
  40b38c:	cbnz	w0, 40b3a4 <rtnl_addrdump_req@@Base+0x8c>
  40b390:	mov	w3, #0x0                   	// #0
  40b394:	mov	x2, #0x98                  	// #152
  40b398:	add	x1, sp, #0x28
  40b39c:	ldr	w0, [x19]
  40b3a0:	bl	404eb0 <send@plt>
  40b3a4:	ldr	x19, [sp, #16]
  40b3a8:	ldp	x29, x30, [sp], #192
  40b3ac:	ret

000000000040b3b0 <rtnl_addrlbldump_req@@Base>:
  40b3b0:	stp	x29, x30, [sp, #-48]!
  40b3b4:	mov	x29, sp
  40b3b8:	stp	xzr, xzr, [sp, #24]
  40b3bc:	str	wzr, [sp, #40]
  40b3c0:	mov	w2, #0x1c                  	// #28
  40b3c4:	str	w2, [sp, #16]
  40b3c8:	mov	w2, #0x4a                  	// #74
  40b3cc:	strh	w2, [sp, #20]
  40b3d0:	mov	w2, #0x301                 	// #769
  40b3d4:	strh	w2, [sp, #22]
  40b3d8:	ldr	w2, [x0, #28]
  40b3dc:	add	w2, w2, #0x1
  40b3e0:	str	w2, [x0, #28]
  40b3e4:	str	w2, [x0, #32]
  40b3e8:	str	w2, [sp, #24]
  40b3ec:	strb	w1, [sp, #32]
  40b3f0:	mov	w3, #0x0                   	// #0
  40b3f4:	mov	x2, #0x1c                  	// #28
  40b3f8:	add	x1, sp, #0x10
  40b3fc:	ldr	w0, [x0]
  40b400:	bl	404eb0 <send@plt>
  40b404:	ldp	x29, x30, [sp], #48
  40b408:	ret

000000000040b40c <rtnl_routedump_req@@Base>:
  40b40c:	stp	x29, x30, [sp, #-192]!
  40b410:	mov	x29, sp
  40b414:	str	x19, [sp, #16]
  40b418:	mov	x19, x0
  40b41c:	stp	xzr, xzr, [sp, #40]
  40b420:	stp	xzr, xzr, [sp, #56]
  40b424:	stp	xzr, xzr, [sp, #72]
  40b428:	stp	xzr, xzr, [sp, #88]
  40b42c:	stp	xzr, xzr, [sp, #104]
  40b430:	stp	xzr, xzr, [sp, #120]
  40b434:	stp	xzr, xzr, [sp, #136]
  40b438:	stp	xzr, xzr, [sp, #152]
  40b43c:	stp	xzr, xzr, [sp, #168]
  40b440:	str	wzr, [sp, #184]
  40b444:	mov	w0, #0x1c                  	// #28
  40b448:	str	w0, [sp, #32]
  40b44c:	mov	w0, #0x1a                  	// #26
  40b450:	strh	w0, [sp, #36]
  40b454:	mov	w0, #0x301                 	// #769
  40b458:	strh	w0, [sp, #38]
  40b45c:	ldr	w0, [x19, #28]
  40b460:	add	w0, w0, #0x1
  40b464:	str	w0, [x19, #28]
  40b468:	str	w0, [x19, #32]
  40b46c:	str	w0, [sp, #40]
  40b470:	strb	w1, [sp, #48]
  40b474:	cbz	x2, 40b488 <rtnl_routedump_req@@Base+0x7c>
  40b478:	mov	w1, #0x9c                  	// #156
  40b47c:	add	x0, sp, #0x20
  40b480:	blr	x2
  40b484:	cbnz	w0, 40b49c <rtnl_routedump_req@@Base+0x90>
  40b488:	mov	w3, #0x0                   	// #0
  40b48c:	mov	x2, #0x9c                  	// #156
  40b490:	add	x1, sp, #0x20
  40b494:	ldr	w0, [x19]
  40b498:	bl	404eb0 <send@plt>
  40b49c:	ldr	x19, [sp, #16]
  40b4a0:	ldp	x29, x30, [sp], #192
  40b4a4:	ret

000000000040b4a8 <rtnl_ruledump_req@@Base>:
  40b4a8:	stp	x29, x30, [sp, #-48]!
  40b4ac:	mov	x29, sp
  40b4b0:	stp	xzr, xzr, [sp, #24]
  40b4b4:	str	wzr, [sp, #40]
  40b4b8:	mov	w2, #0x1c                  	// #28
  40b4bc:	str	w2, [sp, #16]
  40b4c0:	mov	w2, #0x22                  	// #34
  40b4c4:	strh	w2, [sp, #20]
  40b4c8:	mov	w2, #0x301                 	// #769
  40b4cc:	strh	w2, [sp, #22]
  40b4d0:	ldr	w2, [x0, #28]
  40b4d4:	add	w2, w2, #0x1
  40b4d8:	str	w2, [x0, #28]
  40b4dc:	str	w2, [x0, #32]
  40b4e0:	str	w2, [sp, #24]
  40b4e4:	strb	w1, [sp, #32]
  40b4e8:	mov	w3, #0x0                   	// #0
  40b4ec:	mov	x2, #0x1c                  	// #28
  40b4f0:	add	x1, sp, #0x10
  40b4f4:	ldr	w0, [x0]
  40b4f8:	bl	404eb0 <send@plt>
  40b4fc:	ldp	x29, x30, [sp], #48
  40b500:	ret

000000000040b504 <rtnl_neighdump_req@@Base>:
  40b504:	stp	x29, x30, [sp, #-336]!
  40b508:	mov	x29, sp
  40b50c:	stp	x19, x20, [sp, #16]
  40b510:	str	x21, [sp, #32]
  40b514:	mov	x19, x0
  40b518:	mov	w21, w1
  40b51c:	mov	x20, x2
  40b520:	mov	x2, #0x11c                 	// #284
  40b524:	mov	w1, #0x0                   	// #0
  40b528:	add	x0, sp, #0x30
  40b52c:	bl	404d30 <memset@plt>
  40b530:	mov	w0, #0x1c                  	// #28
  40b534:	str	w0, [sp, #48]
  40b538:	mov	w0, #0x1e                  	// #30
  40b53c:	strh	w0, [sp, #52]
  40b540:	mov	w0, #0x301                 	// #769
  40b544:	strh	w0, [sp, #54]
  40b548:	ldr	w0, [x19, #28]
  40b54c:	add	w0, w0, #0x1
  40b550:	str	w0, [x19, #28]
  40b554:	str	w0, [x19, #32]
  40b558:	str	w0, [sp, #56]
  40b55c:	strb	w21, [sp, #64]
  40b560:	cbz	x20, 40b574 <rtnl_neighdump_req@@Base+0x70>
  40b564:	mov	w1, #0x11c                 	// #284
  40b568:	add	x0, sp, #0x30
  40b56c:	blr	x20
  40b570:	cbnz	w0, 40b588 <rtnl_neighdump_req@@Base+0x84>
  40b574:	mov	w3, #0x0                   	// #0
  40b578:	mov	x2, #0x11c                 	// #284
  40b57c:	add	x1, sp, #0x30
  40b580:	ldr	w0, [x19]
  40b584:	bl	404eb0 <send@plt>
  40b588:	ldp	x19, x20, [sp, #16]
  40b58c:	ldr	x21, [sp, #32]
  40b590:	ldp	x29, x30, [sp], #336
  40b594:	ret

000000000040b598 <rtnl_neightbldump_req@@Base>:
  40b598:	stp	x29, x30, [sp, #-48]!
  40b59c:	mov	x29, sp
  40b5a0:	stur	xzr, [sp, #36]
  40b5a4:	mov	w2, #0x14                  	// #20
  40b5a8:	str	w2, [sp, #24]
  40b5ac:	mov	w2, #0x42                  	// #66
  40b5b0:	strh	w2, [sp, #28]
  40b5b4:	mov	w2, #0x301                 	// #769
  40b5b8:	strh	w2, [sp, #30]
  40b5bc:	ldr	w2, [x0, #28]
  40b5c0:	add	w2, w2, #0x1
  40b5c4:	str	w2, [x0, #28]
  40b5c8:	str	w2, [x0, #32]
  40b5cc:	str	w2, [sp, #32]
  40b5d0:	strb	w1, [sp, #40]
  40b5d4:	mov	w3, #0x0                   	// #0
  40b5d8:	mov	x2, #0x14                  	// #20
  40b5dc:	add	x1, sp, #0x18
  40b5e0:	ldr	w0, [x0]
  40b5e4:	bl	404eb0 <send@plt>
  40b5e8:	ldp	x29, x30, [sp], #48
  40b5ec:	ret

000000000040b5f0 <rtnl_mdbdump_req@@Base>:
  40b5f0:	stp	x29, x30, [sp, #-48]!
  40b5f4:	mov	x29, sp
  40b5f8:	stp	xzr, xzr, [sp, #32]
  40b5fc:	mov	w2, #0x18                  	// #24
  40b600:	str	w2, [sp, #24]
  40b604:	mov	w2, #0x56                  	// #86
  40b608:	strh	w2, [sp, #28]
  40b60c:	mov	w2, #0x301                 	// #769
  40b610:	strh	w2, [sp, #30]
  40b614:	ldr	w2, [x0, #28]
  40b618:	add	w2, w2, #0x1
  40b61c:	str	w2, [x0, #28]
  40b620:	str	w2, [x0, #32]
  40b624:	str	w2, [sp, #32]
  40b628:	strb	w1, [sp, #40]
  40b62c:	mov	w3, #0x0                   	// #0
  40b630:	mov	x2, #0x18                  	// #24
  40b634:	add	x1, sp, x2
  40b638:	ldr	w0, [x0]
  40b63c:	bl	404eb0 <send@plt>
  40b640:	ldp	x29, x30, [sp], #48
  40b644:	ret

000000000040b648 <rtnl_netconfdump_req@@Base>:
  40b648:	stp	x29, x30, [sp, #-48]!
  40b64c:	mov	x29, sp
  40b650:	stur	xzr, [sp, #36]
  40b654:	mov	w2, #0x14                  	// #20
  40b658:	str	w2, [sp, #24]
  40b65c:	mov	w2, #0x52                  	// #82
  40b660:	strh	w2, [sp, #28]
  40b664:	mov	w2, #0x301                 	// #769
  40b668:	strh	w2, [sp, #30]
  40b66c:	ldr	w2, [x0, #28]
  40b670:	add	w2, w2, #0x1
  40b674:	str	w2, [x0, #28]
  40b678:	str	w2, [x0, #32]
  40b67c:	str	w2, [sp, #32]
  40b680:	strb	w1, [sp, #40]
  40b684:	mov	w3, #0x0                   	// #0
  40b688:	mov	x2, #0x14                  	// #20
  40b68c:	add	x1, sp, #0x18
  40b690:	ldr	w0, [x0]
  40b694:	bl	404eb0 <send@plt>
  40b698:	ldp	x29, x30, [sp], #48
  40b69c:	ret

000000000040b6a0 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b6a0:	sub	sp, sp, #0x450
  40b6a4:	stp	x29, x30, [sp]
  40b6a8:	mov	x29, sp
  40b6ac:	stp	x19, x20, [sp, #16]
  40b6b0:	str	x21, [sp, #32]
  40b6b4:	mov	x19, x0
  40b6b8:	mov	w21, w1
  40b6bc:	mov	x20, x2
  40b6c0:	mov	x2, #0x414                 	// #1044
  40b6c4:	mov	w1, #0x0                   	// #0
  40b6c8:	add	x0, sp, #0x38
  40b6cc:	bl	404d30 <memset@plt>
  40b6d0:	mov	w0, #0x14                  	// #20
  40b6d4:	str	w0, [sp, #56]
  40b6d8:	mov	w0, #0x5a                  	// #90
  40b6dc:	strh	w0, [sp, #60]
  40b6e0:	mov	w0, #0x301                 	// #769
  40b6e4:	strh	w0, [sp, #62]
  40b6e8:	ldr	w0, [x19, #28]
  40b6ec:	add	w0, w0, #0x1
  40b6f0:	str	w0, [x19, #28]
  40b6f4:	str	w0, [x19, #32]
  40b6f8:	str	w0, [sp, #64]
  40b6fc:	strb	w21, [sp, #72]
  40b700:	cbz	x20, 40b740 <rtnl_nsiddump_req_filter_fn@@Base+0xa0>
  40b704:	mov	w1, #0x414                 	// #1044
  40b708:	add	x0, sp, #0x38
  40b70c:	blr	x20
  40b710:	cbz	w0, 40b728 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40b714:	ldp	x19, x20, [sp, #16]
  40b718:	ldr	x21, [sp, #32]
  40b71c:	ldp	x29, x30, [sp]
  40b720:	add	sp, sp, #0x450
  40b724:	ret
  40b728:	mov	w3, #0x0                   	// #0
  40b72c:	ldr	w2, [sp, #56]
  40b730:	add	x1, sp, #0x38
  40b734:	ldr	w0, [x19]
  40b738:	bl	404eb0 <send@plt>
  40b73c:	b	40b714 <rtnl_nsiddump_req_filter_fn@@Base+0x74>
  40b740:	mov	w0, #0xffffffea            	// #-22
  40b744:	b	40b714 <rtnl_nsiddump_req_filter_fn@@Base+0x74>

000000000040b748 <rtnl_linkdump_req_filter@@Base>:
  40b748:	stp	x29, x30, [sp, #-64]!
  40b74c:	mov	x29, sp
  40b750:	cmp	w1, #0x0
  40b754:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40b758:	b.eq	40b768 <rtnl_linkdump_req_filter@@Base+0x20>  // b.none
  40b75c:	bl	40a9d0 <jsonw_null_field@@Base+0x28>
  40b760:	ldp	x29, x30, [sp], #64
  40b764:	ret
  40b768:	stp	xzr, xzr, [sp, #32]
  40b76c:	str	xzr, [sp, #48]
  40b770:	mov	w3, #0x28                  	// #40
  40b774:	str	w3, [sp, #24]
  40b778:	mov	w3, #0x12                  	// #18
  40b77c:	strh	w3, [sp, #28]
  40b780:	mov	w3, #0x301                 	// #769
  40b784:	strh	w3, [sp, #30]
  40b788:	ldr	w3, [x0, #28]
  40b78c:	add	w3, w3, #0x1
  40b790:	str	w3, [x0, #28]
  40b794:	str	w3, [x0, #32]
  40b798:	str	w3, [sp, #32]
  40b79c:	strb	w1, [sp, #40]
  40b7a0:	mov	w1, #0x8                   	// #8
  40b7a4:	strh	w1, [sp, #56]
  40b7a8:	mov	w1, #0x1d                  	// #29
  40b7ac:	strh	w1, [sp, #58]
  40b7b0:	str	w2, [sp, #60]
  40b7b4:	mov	w3, #0x0                   	// #0
  40b7b8:	mov	x2, #0x28                  	// #40
  40b7bc:	add	x1, sp, #0x18
  40b7c0:	ldr	w0, [x0]
  40b7c4:	bl	404eb0 <send@plt>
  40b7c8:	b	40b760 <rtnl_linkdump_req_filter@@Base+0x18>

000000000040b7cc <rtnl_linkdump_req@@Base>:
  40b7cc:	stp	x29, x30, [sp, #-16]!
  40b7d0:	mov	x29, sp
  40b7d4:	cbz	w1, 40b7e4 <rtnl_linkdump_req@@Base+0x18>
  40b7d8:	bl	40a9d0 <jsonw_null_field@@Base+0x28>
  40b7dc:	ldp	x29, x30, [sp], #16
  40b7e0:	ret
  40b7e4:	mov	w2, #0x1                   	// #1
  40b7e8:	bl	40b748 <rtnl_linkdump_req_filter@@Base>
  40b7ec:	b	40b7dc <rtnl_linkdump_req@@Base+0x10>

000000000040b7f0 <rtnl_linkdump_req_filter_fn@@Base>:
  40b7f0:	sub	sp, sp, #0x450
  40b7f4:	stp	x29, x30, [sp]
  40b7f8:	mov	x29, sp
  40b7fc:	stp	x19, x20, [sp, #16]
  40b800:	mov	x20, x0
  40b804:	mov	w19, w1
  40b808:	cmp	w1, #0x0
  40b80c:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40b810:	b.ne	40b8ac <rtnl_linkdump_req_filter_fn@@Base+0xbc>  // b.any
  40b814:	str	x21, [sp, #32]
  40b818:	mov	x21, x2
  40b81c:	mov	x2, #0x420                 	// #1056
  40b820:	mov	w1, #0x0                   	// #0
  40b824:	add	x0, sp, #0x30
  40b828:	bl	404d30 <memset@plt>
  40b82c:	mov	w0, #0x20                  	// #32
  40b830:	str	w0, [sp, #48]
  40b834:	mov	w0, #0x12                  	// #18
  40b838:	strh	w0, [sp, #52]
  40b83c:	mov	w0, #0x301                 	// #769
  40b840:	strh	w0, [sp, #54]
  40b844:	ldr	w0, [x20, #28]
  40b848:	add	w0, w0, #0x1
  40b84c:	str	w0, [x20, #28]
  40b850:	str	w0, [x20, #32]
  40b854:	str	w0, [sp, #56]
  40b858:	strb	w19, [sp, #64]
  40b85c:	cbz	x21, 40b8a0 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40b860:	mov	w1, #0x420                 	// #1056
  40b864:	add	x0, sp, #0x30
  40b868:	blr	x21
  40b86c:	cbz	w0, 40b884 <rtnl_linkdump_req_filter_fn@@Base+0x94>
  40b870:	ldr	x21, [sp, #32]
  40b874:	ldp	x19, x20, [sp, #16]
  40b878:	ldp	x29, x30, [sp]
  40b87c:	add	sp, sp, #0x450
  40b880:	ret
  40b884:	mov	w3, #0x0                   	// #0
  40b888:	ldr	w2, [sp, #48]
  40b88c:	add	x1, sp, #0x30
  40b890:	ldr	w0, [x20]
  40b894:	bl	404eb0 <send@plt>
  40b898:	ldr	x21, [sp, #32]
  40b89c:	b	40b874 <rtnl_linkdump_req_filter_fn@@Base+0x84>
  40b8a0:	mov	w0, #0xffffffea            	// #-22
  40b8a4:	ldr	x21, [sp, #32]
  40b8a8:	b	40b874 <rtnl_linkdump_req_filter_fn@@Base+0x84>
  40b8ac:	bl	40a9d0 <jsonw_null_field@@Base+0x28>
  40b8b0:	b	40b874 <rtnl_linkdump_req_filter_fn@@Base+0x84>

000000000040b8b4 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b8b4:	stp	x29, x30, [sp, #-192]!
  40b8b8:	mov	x29, sp
  40b8bc:	str	x19, [sp, #16]
  40b8c0:	mov	x19, x0
  40b8c4:	mov	x2, x1
  40b8c8:	stp	xzr, xzr, [sp, #40]
  40b8cc:	stp	xzr, xzr, [sp, #56]
  40b8d0:	stp	xzr, xzr, [sp, #72]
  40b8d4:	stp	xzr, xzr, [sp, #88]
  40b8d8:	stp	xzr, xzr, [sp, #104]
  40b8dc:	stp	xzr, xzr, [sp, #120]
  40b8e0:	stp	xzr, xzr, [sp, #136]
  40b8e4:	stp	xzr, xzr, [sp, #152]
  40b8e8:	stp	xzr, xzr, [sp, #168]
  40b8ec:	str	xzr, [sp, #184]
  40b8f0:	mov	w0, #0x20                  	// #32
  40b8f4:	str	w0, [sp, #32]
  40b8f8:	mov	w0, #0x1e                  	// #30
  40b8fc:	strh	w0, [sp, #36]
  40b900:	mov	w0, #0x301                 	// #769
  40b904:	strh	w0, [sp, #38]
  40b908:	ldr	w0, [x19, #28]
  40b90c:	add	w0, w0, #0x1
  40b910:	str	w0, [x19, #28]
  40b914:	str	w0, [x19, #32]
  40b918:	str	w0, [sp, #40]
  40b91c:	mov	w0, #0x7                   	// #7
  40b920:	strb	w0, [sp, #48]
  40b924:	mov	w1, #0xa0                  	// #160
  40b928:	add	x0, sp, #0x20
  40b92c:	blr	x2
  40b930:	cbz	w0, 40b940 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x8c>
  40b934:	ldr	x19, [sp, #16]
  40b938:	ldp	x29, x30, [sp], #192
  40b93c:	ret
  40b940:	mov	w3, #0x0                   	// #0
  40b944:	mov	x2, #0xa0                  	// #160
  40b948:	add	x1, sp, #0x20
  40b94c:	ldr	w0, [x19]
  40b950:	bl	404eb0 <send@plt>
  40b954:	b	40b934 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x80>

000000000040b958 <rtnl_statsdump_req_filter@@Base>:
  40b958:	stp	x29, x30, [sp, #-48]!
  40b95c:	mov	x29, sp
  40b960:	stp	xzr, xzr, [sp, #24]
  40b964:	mov	w3, #0x1c                  	// #28
  40b968:	str	w3, [sp, #16]
  40b96c:	mov	w3, #0x5e                  	// #94
  40b970:	strh	w3, [sp, #20]
  40b974:	mov	w3, #0x301                 	// #769
  40b978:	strh	w3, [sp, #22]
  40b97c:	ldr	w3, [x0, #28]
  40b980:	add	w3, w3, #0x1
  40b984:	str	w3, [x0, #28]
  40b988:	str	w3, [x0, #32]
  40b98c:	str	w3, [sp, #24]
  40b990:	strb	w1, [sp, #32]
  40b994:	str	w2, [sp, #40]
  40b998:	mov	w3, #0x0                   	// #0
  40b99c:	mov	x2, #0x1c                  	// #28
  40b9a0:	add	x1, sp, #0x10
  40b9a4:	ldr	w0, [x0]
  40b9a8:	bl	404eb0 <send@plt>
  40b9ac:	ldp	x29, x30, [sp], #48
  40b9b0:	ret

000000000040b9b4 <rtnl_send@@Base>:
  40b9b4:	stp	x29, x30, [sp, #-16]!
  40b9b8:	mov	x29, sp
  40b9bc:	mov	w3, #0x0                   	// #0
  40b9c0:	sxtw	x2, w2
  40b9c4:	ldr	w0, [x0]
  40b9c8:	bl	404eb0 <send@plt>
  40b9cc:	ldp	x29, x30, [sp], #16
  40b9d0:	ret

000000000040b9d4 <rtnl_send_check@@Base>:
  40b9d4:	sub	sp, sp, #0x420
  40b9d8:	stp	x29, x30, [sp]
  40b9dc:	mov	x29, sp
  40b9e0:	str	x19, [sp, #16]
  40b9e4:	mov	x19, x0
  40b9e8:	mov	w3, #0x0                   	// #0
  40b9ec:	sxtw	x2, w2
  40b9f0:	ldr	w0, [x0]
  40b9f4:	bl	404eb0 <send@plt>
  40b9f8:	tbnz	w0, #31, 40ba80 <rtnl_send_check@@Base+0xac>
  40b9fc:	mov	w3, #0x42                  	// #66
  40ba00:	mov	x2, #0x400                 	// #1024
  40ba04:	add	x1, sp, #0x20
  40ba08:	ldr	w0, [x19]
  40ba0c:	bl	404de0 <recv@plt>
  40ba10:	mov	w1, w0
  40ba14:	tbnz	w0, #31, 40ba70 <rtnl_send_check@@Base+0x9c>
  40ba18:	add	x19, sp, #0x20
  40ba1c:	cmp	w0, #0xf
  40ba20:	b.le	40ba68 <rtnl_send_check@@Base+0x94>
  40ba24:	ldr	w0, [x19]
  40ba28:	cmp	w0, #0xf
  40ba2c:	b.ls	40bae0 <rtnl_send_check@@Base+0x10c>  // b.plast
  40ba30:	mov	w2, w1
  40ba34:	cmp	w0, w1
  40ba38:	b.hi	40bad8 <rtnl_send_check@@Base+0x104>  // b.pmore
  40ba3c:	ldrh	w1, [x19, #4]
  40ba40:	cmp	w1, #0x2
  40ba44:	b.eq	40ba90 <rtnl_send_check@@Base+0xbc>  // b.none
  40ba48:	add	w0, w0, #0x3
  40ba4c:	and	w0, w0, #0xfffffffc
  40ba50:	sub	w1, w2, w0
  40ba54:	add	x19, x19, w0, uxtw
  40ba58:	cmp	w1, #0xf
  40ba5c:	b.gt	40ba24 <rtnl_send_check@@Base+0x50>
  40ba60:	mov	w0, #0x0                   	// #0
  40ba64:	b	40ba80 <rtnl_send_check@@Base+0xac>
  40ba68:	mov	w0, #0x0                   	// #0
  40ba6c:	b	40ba80 <rtnl_send_check@@Base+0xac>
  40ba70:	bl	405020 <__errno_location@plt>
  40ba74:	ldr	w0, [x0]
  40ba78:	cmp	w0, #0xb
  40ba7c:	csetm	w0, ne  // ne = any
  40ba80:	ldr	x19, [sp, #16]
  40ba84:	ldp	x29, x30, [sp]
  40ba88:	add	sp, sp, #0x420
  40ba8c:	ret
  40ba90:	cmp	w0, #0x23
  40ba94:	b.ls	40bab0 <rtnl_send_check@@Base+0xdc>  // b.plast
  40ba98:	bl	405020 <__errno_location@plt>
  40ba9c:	ldr	w1, [x19, #16]
  40baa0:	neg	w1, w1
  40baa4:	str	w1, [x0]
  40baa8:	mov	w0, #0xffffffff            	// #-1
  40baac:	b	40ba80 <rtnl_send_check@@Base+0xac>
  40bab0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bab4:	ldr	x0, [x0, #3992]
  40bab8:	ldr	x3, [x0]
  40babc:	mov	x2, #0x10                  	// #16
  40bac0:	mov	x1, #0x1                   	// #1
  40bac4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bac8:	add	x0, x0, #0x8b0
  40bacc:	bl	404ef0 <fwrite@plt>
  40bad0:	mov	w0, #0xffffffff            	// #-1
  40bad4:	b	40ba80 <rtnl_send_check@@Base+0xac>
  40bad8:	mov	w0, #0x0                   	// #0
  40badc:	b	40ba80 <rtnl_send_check@@Base+0xac>
  40bae0:	mov	w0, #0x0                   	// #0
  40bae4:	b	40ba80 <rtnl_send_check@@Base+0xac>

000000000040bae8 <rtnl_dump_request@@Base>:
  40bae8:	stp	x29, x30, [sp, #-144]!
  40baec:	mov	x29, sp
  40baf0:	str	wzr, [sp, #140]
  40baf4:	add	w4, w3, #0x10
  40baf8:	str	w4, [sp, #128]
  40bafc:	strh	w1, [sp, #132]
  40bb00:	mov	w1, #0x301                 	// #769
  40bb04:	strh	w1, [sp, #134]
  40bb08:	ldr	w1, [x0, #28]
  40bb0c:	add	w1, w1, #0x1
  40bb10:	str	w1, [x0, #28]
  40bb14:	str	w1, [x0, #32]
  40bb18:	str	w1, [sp, #136]
  40bb1c:	str	xzr, [sp, #112]
  40bb20:	str	wzr, [sp, #120]
  40bb24:	mov	w1, #0x10                  	// #16
  40bb28:	strh	w1, [sp, #112]
  40bb2c:	add	x1, sp, #0x80
  40bb30:	str	x1, [sp, #80]
  40bb34:	mov	x1, #0x10                  	// #16
  40bb38:	str	x1, [sp, #88]
  40bb3c:	str	x2, [sp, #96]
  40bb40:	sxtw	x3, w3
  40bb44:	str	x3, [sp, #104]
  40bb48:	stp	xzr, xzr, [sp, #32]
  40bb4c:	stp	xzr, xzr, [sp, #48]
  40bb50:	stp	xzr, xzr, [sp, #64]
  40bb54:	add	x1, sp, #0x70
  40bb58:	str	x1, [sp, #24]
  40bb5c:	mov	w1, #0xc                   	// #12
  40bb60:	str	w1, [sp, #32]
  40bb64:	add	x1, sp, #0x50
  40bb68:	str	x1, [sp, #40]
  40bb6c:	mov	x1, #0x2                   	// #2
  40bb70:	str	x1, [sp, #48]
  40bb74:	mov	w2, #0x0                   	// #0
  40bb78:	add	x1, sp, #0x18
  40bb7c:	ldr	w0, [x0]
  40bb80:	bl	404d50 <sendmsg@plt>
  40bb84:	ldp	x29, x30, [sp], #144
  40bb88:	ret

000000000040bb8c <rtnl_dump_request_n@@Base>:
  40bb8c:	stp	x29, x30, [sp, #-112]!
  40bb90:	mov	x29, sp
  40bb94:	str	xzr, [sp, #96]
  40bb98:	str	wzr, [sp, #104]
  40bb9c:	mov	w2, #0x10                  	// #16
  40bba0:	strh	w2, [sp, #96]
  40bba4:	str	x1, [sp, #80]
  40bba8:	ldr	w2, [x1]
  40bbac:	str	x2, [sp, #88]
  40bbb0:	stp	xzr, xzr, [sp, #32]
  40bbb4:	stp	xzr, xzr, [sp, #48]
  40bbb8:	stp	xzr, xzr, [sp, #64]
  40bbbc:	add	x2, sp, #0x60
  40bbc0:	str	x2, [sp, #24]
  40bbc4:	mov	w2, #0xc                   	// #12
  40bbc8:	str	w2, [sp, #32]
  40bbcc:	add	x2, sp, #0x50
  40bbd0:	str	x2, [sp, #40]
  40bbd4:	mov	x2, #0x1                   	// #1
  40bbd8:	str	x2, [sp, #48]
  40bbdc:	mov	w2, #0x301                 	// #769
  40bbe0:	strh	w2, [x1, #6]
  40bbe4:	str	wzr, [x1, #12]
  40bbe8:	ldr	w2, [x0, #28]
  40bbec:	add	w2, w2, #0x1
  40bbf0:	str	w2, [x0, #28]
  40bbf4:	str	w2, [x0, #32]
  40bbf8:	str	w2, [x1, #8]
  40bbfc:	mov	w2, #0x0                   	// #0
  40bc00:	add	x1, sp, #0x18
  40bc04:	ldr	w0, [x0]
  40bc08:	bl	404d50 <sendmsg@plt>
  40bc0c:	ldp	x29, x30, [sp], #112
  40bc10:	ret

000000000040bc14 <rtnl_dump_filter_nc@@Base>:
  40bc14:	stp	x29, x30, [sp, #-272]!
  40bc18:	mov	x29, sp
  40bc1c:	stp	x19, x20, [sp, #16]
  40bc20:	stp	x21, x22, [sp, #32]
  40bc24:	stp	x23, x24, [sp, #48]
  40bc28:	stp	x25, x26, [sp, #64]
  40bc2c:	stp	x27, x28, [sp, #80]
  40bc30:	mov	x20, x0
  40bc34:	mov	x22, x1
  40bc38:	str	x1, [sp, #224]
  40bc3c:	str	x2, [sp, #232]
  40bc40:	strh	w3, [sp, #240]
  40bc44:	str	xzr, [sp, #248]
  40bc48:	str	xzr, [sp, #256]
  40bc4c:	strh	wzr, [sp, #264]
  40bc50:	stp	xzr, xzr, [sp, #176]
  40bc54:	stp	xzr, xzr, [sp, #192]
  40bc58:	stp	xzr, xzr, [sp, #208]
  40bc5c:	add	x0, sp, #0x88
  40bc60:	str	x0, [sp, #168]
  40bc64:	mov	w0, #0xc                   	// #12
  40bc68:	str	w0, [sp, #176]
  40bc6c:	add	x0, sp, #0x98
  40bc70:	str	x0, [sp, #184]
  40bc74:	mov	x0, #0x1                   	// #1
  40bc78:	str	x0, [sp, #192]
  40bc7c:	mov	w26, #0x0                   	// #0
  40bc80:	add	x28, sp, #0x80
  40bc84:	add	x0, sp, #0xa8
  40bc88:	str	x0, [sp, #112]
  40bc8c:	mov	w27, #0x1                   	// #1
  40bc90:	str	w27, [sp, #124]
  40bc94:	mov	x2, x28
  40bc98:	ldr	x1, [sp, #112]
  40bc9c:	ldr	w0, [x20]
  40bca0:	bl	40aaec <jsonw_null_field@@Base+0x144>
  40bca4:	mov	w21, w0
  40bca8:	tbnz	w0, #31, 40bf68 <rtnl_dump_filter_nc@@Base+0x354>
  40bcac:	ldr	x3, [x20, #40]
  40bcb0:	cbz	x3, 40bcc8 <rtnl_dump_filter_nc@@Base+0xb4>
  40bcb4:	add	w2, w0, #0x3
  40bcb8:	and	x2, x2, #0xfffffffc
  40bcbc:	mov	x1, #0x1                   	// #1
  40bcc0:	ldr	x0, [sp, #128]
  40bcc4:	bl	404ef0 <fwrite@plt>
  40bcc8:	cbz	x22, 40bf70 <rtnl_dump_filter_nc@@Base+0x35c>
  40bccc:	add	x23, sp, #0xf8
  40bcd0:	mov	x25, x22
  40bcd4:	str	wzr, [sp, #108]
  40bcd8:	str	w21, [sp, #104]
  40bcdc:	b	40bf08 <rtnl_dump_filter_nc@@Base+0x2f4>
  40bce0:	ldr	w25, [x19, #16]
  40bce4:	cmp	w1, #0x13
  40bce8:	b.ls	40bd10 <rtnl_dump_filter_nc@@Base+0xfc>  // b.plast
  40bcec:	tbnz	w25, #31, 40bd34 <rtnl_dump_filter_nc@@Base+0x120>
  40bcf0:	mov	x1, #0x0                   	// #0
  40bcf4:	mov	x0, x19
  40bcf8:	bl	40abc8 <nl_dump_ext_ack@@Base>
  40bcfc:	ldr	x25, [x23]
  40bd00:	cbz	x25, 40bfa4 <rtnl_dump_filter_nc@@Base+0x390>
  40bd04:	ldr	w0, [sp, #124]
  40bd08:	str	w0, [sp, #108]
  40bd0c:	b	40bf04 <rtnl_dump_filter_nc@@Base+0x2f0>
  40bd10:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bd14:	ldr	x0, [x0, #3992]
  40bd18:	ldr	x3, [x0]
  40bd1c:	mov	x2, #0xf                   	// #15
  40bd20:	mov	x1, #0x1                   	// #1
  40bd24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bd28:	add	x0, x0, #0x9e0
  40bd2c:	bl	404ef0 <fwrite@plt>
  40bd30:	b	40bd98 <rtnl_dump_filter_nc@@Base+0x184>
  40bd34:	mov	w1, w25
  40bd38:	mov	x0, x19
  40bd3c:	bl	40afec <nl_dump_ext_ack_done@@Base>
  40bd40:	cbnz	w0, 40bd98 <rtnl_dump_filter_nc@@Base+0x184>
  40bd44:	bl	405020 <__errno_location@plt>
  40bd48:	neg	w1, w25
  40bd4c:	str	w1, [x0]
  40bd50:	cmn	w25, #0x5a
  40bd54:	b.eq	40bd78 <rtnl_dump_filter_nc@@Base+0x164>  // b.none
  40bd58:	cmn	w25, #0x5f
  40bd5c:	b.eq	40bd98 <rtnl_dump_filter_nc@@Base+0x184>  // b.none
  40bd60:	cmn	w25, #0x2
  40bd64:	b.eq	40bd98 <rtnl_dump_filter_nc@@Base+0x184>  // b.none
  40bd68:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bd6c:	add	x0, x0, #0xa18
  40bd70:	bl	404bc0 <perror@plt>
  40bd74:	b	40bd98 <rtnl_dump_filter_nc@@Base+0x184>
  40bd78:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bd7c:	ldr	x0, [x0, #3992]
  40bd80:	ldr	x3, [x0]
  40bd84:	mov	x2, #0x24                  	// #36
  40bd88:	mov	x1, #0x1                   	// #1
  40bd8c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bd90:	add	x0, x0, #0x9f0
  40bd94:	bl	404ef0 <fwrite@plt>
  40bd98:	ldr	x0, [sp, #128]
  40bd9c:	bl	404e90 <free@plt>
  40bda0:	mov	w24, #0xffffffff            	// #-1
  40bda4:	b	40bde0 <rtnl_dump_filter_nc@@Base+0x1cc>
  40bda8:	cmp	w1, #0x23
  40bdac:	b.ls	40be00 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.plast
  40bdb0:	ldr	w19, [x19, #16]
  40bdb4:	bl	405020 <__errno_location@plt>
  40bdb8:	neg	w1, w19
  40bdbc:	str	w1, [x0]
  40bdc0:	ldr	w0, [x20, #36]
  40bdc4:	cmp	w0, #0x4
  40bdc8:	b.eq	40be24 <rtnl_dump_filter_nc@@Base+0x210>  // b.none
  40bdcc:	ldr	w0, [x20, #48]
  40bdd0:	tbz	w0, #1, 40be34 <rtnl_dump_filter_nc@@Base+0x220>
  40bdd4:	ldr	x0, [sp, #128]
  40bdd8:	bl	404e90 <free@plt>
  40bddc:	mov	w24, #0xffffffff            	// #-1
  40bde0:	mov	w0, w24
  40bde4:	ldp	x19, x20, [sp, #16]
  40bde8:	ldp	x21, x22, [sp, #32]
  40bdec:	ldp	x23, x24, [sp, #48]
  40bdf0:	ldp	x25, x26, [sp, #64]
  40bdf4:	ldp	x27, x28, [sp, #80]
  40bdf8:	ldp	x29, x30, [sp], #272
  40bdfc:	ret
  40be00:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40be04:	ldr	x0, [x0, #3992]
  40be08:	ldr	x3, [x0]
  40be0c:	mov	x2, #0x10                  	// #16
  40be10:	mov	x1, #0x1                   	// #1
  40be14:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40be18:	add	x0, x0, #0x8b0
  40be1c:	bl	404ef0 <fwrite@plt>
  40be20:	b	40bdd4 <rtnl_dump_filter_nc@@Base+0x1c0>
  40be24:	cmn	w19, #0x5f
  40be28:	ccmn	w19, #0x2, #0x4, ne  // ne = any
  40be2c:	b.ne	40bdcc <rtnl_dump_filter_nc@@Base+0x1b8>  // b.any
  40be30:	b	40bdd4 <rtnl_dump_filter_nc@@Base+0x1c0>
  40be34:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40be38:	add	x0, x0, #0xa18
  40be3c:	bl	404bc0 <perror@plt>
  40be40:	b	40bdd4 <rtnl_dump_filter_nc@@Base+0x1c0>
  40be44:	ldr	w0, [x19]
  40be48:	add	w0, w0, #0x3
  40be4c:	and	w0, w0, #0xfffffffc
  40be50:	ldr	w1, [sp, #120]
  40be54:	sub	w24, w1, w0
  40be58:	add	x19, x19, w0, uxtw
  40be5c:	cmp	w24, #0xf
  40be60:	b.le	40befc <rtnl_dump_filter_nc@@Base+0x2e8>
  40be64:	ldr	w1, [x19]
  40be68:	cmp	w1, #0xf
  40be6c:	b.ls	40befc <rtnl_dump_filter_nc@@Base+0x2e8>  // b.plast
  40be70:	str	w24, [sp, #120]
  40be74:	cmp	w24, w1
  40be78:	b.cc	40befc <rtnl_dump_filter_nc@@Base+0x2e8>  // b.lo, b.ul, b.last
  40be7c:	ldurh	w0, [x23, #-8]
  40be80:	ldrh	w2, [x19, #6]
  40be84:	bic	w0, w2, w0
  40be88:	and	w0, w0, #0xffff
  40be8c:	strh	w0, [x19, #6]
  40be90:	ldr	w2, [sp, #140]
  40be94:	cbnz	w2, 40be44 <rtnl_dump_filter_nc@@Base+0x230>
  40be98:	ldr	w3, [x19, #12]
  40be9c:	ldr	w2, [x20, #8]
  40bea0:	cmp	w3, w2
  40bea4:	b.ne	40be44 <rtnl_dump_filter_nc@@Base+0x230>  // b.any
  40bea8:	ldr	w3, [x19, #8]
  40beac:	ldr	w2, [x20, #32]
  40beb0:	cmp	w3, w2
  40beb4:	b.ne	40be44 <rtnl_dump_filter_nc@@Base+0x230>  // b.any
  40beb8:	tst	x0, #0x10
  40bebc:	csel	w26, w26, w27, eq  // eq = none
  40bec0:	ldrh	w0, [x19, #4]
  40bec4:	cmp	w0, #0x3
  40bec8:	b.eq	40bce0 <rtnl_dump_filter_nc@@Base+0xcc>  // b.none
  40becc:	cmp	w0, #0x2
  40bed0:	b.eq	40bda8 <rtnl_dump_filter_nc@@Base+0x194>  // b.none
  40bed4:	ldr	x0, [x20, #40]
  40bed8:	cbnz	x0, 40be44 <rtnl_dump_filter_nc@@Base+0x230>
  40bedc:	ldur	x1, [x23, #-16]
  40bee0:	mov	x0, x19
  40bee4:	blr	x25
  40bee8:	mov	w24, w0
  40beec:	tbz	w0, #31, 40be44 <rtnl_dump_filter_nc@@Base+0x230>
  40bef0:	ldr	x0, [sp, #128]
  40bef4:	bl	404e90 <free@plt>
  40bef8:	b	40bde0 <rtnl_dump_filter_nc@@Base+0x1cc>
  40befc:	ldr	x25, [x23]
  40bf00:	cbz	x25, 40bf20 <rtnl_dump_filter_nc@@Base+0x30c>
  40bf04:	add	x23, x23, #0x18
  40bf08:	ldr	x19, [sp, #128]
  40bf0c:	ldr	w24, [sp, #104]
  40bf10:	cmp	w21, #0xf
  40bf14:	b.gt	40be64 <rtnl_dump_filter_nc@@Base+0x250>
  40bf18:	ldr	w24, [sp, #104]
  40bf1c:	b	40befc <rtnl_dump_filter_nc@@Base+0x2e8>
  40bf20:	ldr	x0, [sp, #128]
  40bf24:	bl	404e90 <free@plt>
  40bf28:	ldr	w0, [sp, #108]
  40bf2c:	cbnz	w0, 40bf60 <rtnl_dump_filter_nc@@Base+0x34c>
  40bf30:	ldr	w0, [sp, #216]
  40bf34:	tbnz	w0, #5, 40bf80 <rtnl_dump_filter_nc@@Base+0x36c>
  40bf38:	cbz	w24, 40bc94 <rtnl_dump_filter_nc@@Base+0x80>
  40bf3c:	mov	w2, w24
  40bf40:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40bf44:	add	x1, x1, #0x910
  40bf48:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bf4c:	ldr	x0, [x0, #3992]
  40bf50:	ldr	x0, [x0]
  40bf54:	bl	405070 <fprintf@plt>
  40bf58:	mov	w0, #0x1                   	// #1
  40bf5c:	bl	404bb0 <exit@plt>
  40bf60:	mov	w24, w26
  40bf64:	b	40bfb0 <rtnl_dump_filter_nc@@Base+0x39c>
  40bf68:	mov	w24, w0
  40bf6c:	b	40bde0 <rtnl_dump_filter_nc@@Base+0x1cc>
  40bf70:	ldr	x0, [sp, #128]
  40bf74:	bl	404e90 <free@plt>
  40bf78:	ldr	w0, [sp, #216]
  40bf7c:	tbz	w0, #5, 40bc94 <rtnl_dump_filter_nc@@Base+0x80>
  40bf80:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bf84:	ldr	x0, [x0, #3992]
  40bf88:	ldr	x3, [x0]
  40bf8c:	mov	x2, #0x12                  	// #18
  40bf90:	mov	x1, #0x1                   	// #1
  40bf94:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bf98:	add	x0, x0, #0x8f8
  40bf9c:	bl	404ef0 <fwrite@plt>
  40bfa0:	b	40bc94 <rtnl_dump_filter_nc@@Base+0x80>
  40bfa4:	ldr	x0, [sp, #128]
  40bfa8:	bl	404e90 <free@plt>
  40bfac:	mov	w24, w26
  40bfb0:	cbz	w24, 40bde0 <rtnl_dump_filter_nc@@Base+0x1cc>
  40bfb4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40bfb8:	ldr	x0, [x0, #3992]
  40bfbc:	ldr	x3, [x0]
  40bfc0:	mov	x2, #0x2e                  	// #46
  40bfc4:	mov	x1, #0x1                   	// #1
  40bfc8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40bfcc:	add	x0, x0, #0xa30
  40bfd0:	bl	404ef0 <fwrite@plt>
  40bfd4:	mov	w24, #0x0                   	// #0
  40bfd8:	b	40bde0 <rtnl_dump_filter_nc@@Base+0x1cc>

000000000040bfdc <rtnl_talk@@Base>:
  40bfdc:	stp	x29, x30, [sp, #-32]!
  40bfe0:	mov	x29, sp
  40bfe4:	str	x1, [sp, #16]
  40bfe8:	ldr	w1, [x1]
  40bfec:	str	x1, [sp, #24]
  40bff0:	mov	x5, #0x0                   	// #0
  40bff4:	mov	w4, #0x1                   	// #1
  40bff8:	mov	x3, x2
  40bffc:	mov	x2, #0x1                   	// #1
  40c000:	add	x1, sp, #0x10
  40c004:	bl	40abd0 <nl_dump_ext_ack@@Base+0x8>
  40c008:	ldp	x29, x30, [sp], #32
  40c00c:	ret

000000000040c010 <rtnl_talk_iov@@Base>:
  40c010:	stp	x29, x30, [sp, #-16]!
  40c014:	mov	x29, sp
  40c018:	mov	x5, #0x0                   	// #0
  40c01c:	mov	w4, #0x1                   	// #1
  40c020:	bl	40abd0 <nl_dump_ext_ack@@Base+0x8>
  40c024:	ldp	x29, x30, [sp], #16
  40c028:	ret

000000000040c02c <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c02c:	stp	x29, x30, [sp, #-32]!
  40c030:	mov	x29, sp
  40c034:	str	x1, [sp, #16]
  40c038:	ldr	w1, [x1]
  40c03c:	str	x1, [sp, #24]
  40c040:	mov	x5, #0x0                   	// #0
  40c044:	mov	w4, #0x0                   	// #0
  40c048:	mov	x3, x2
  40c04c:	mov	x2, #0x1                   	// #1
  40c050:	add	x1, sp, #0x10
  40c054:	bl	40abd0 <nl_dump_ext_ack@@Base+0x8>
  40c058:	ldp	x29, x30, [sp], #32
  40c05c:	ret

000000000040c060 <rtnl_listen_all_nsid@@Base>:
  40c060:	stp	x29, x30, [sp, #-48]!
  40c064:	mov	x29, sp
  40c068:	str	x19, [sp, #16]
  40c06c:	mov	x19, x0
  40c070:	mov	w0, #0x1                   	// #1
  40c074:	str	w0, [sp, #44]
  40c078:	mov	w4, #0x4                   	// #4
  40c07c:	add	x3, sp, #0x2c
  40c080:	mov	w2, #0x8                   	// #8
  40c084:	mov	w1, #0x10e                 	// #270
  40c088:	ldr	w0, [x19]
  40c08c:	bl	404ce0 <setsockopt@plt>
  40c090:	tbnz	w0, #31, 40c0b0 <rtnl_listen_all_nsid@@Base+0x50>
  40c094:	ldr	w0, [x19, #48]
  40c098:	orr	w0, w0, #0x1
  40c09c:	str	w0, [x19, #48]
  40c0a0:	mov	w0, #0x0                   	// #0
  40c0a4:	ldr	x19, [sp, #16]
  40c0a8:	ldp	x29, x30, [sp], #48
  40c0ac:	ret
  40c0b0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c0b4:	add	x0, x0, #0xa60
  40c0b8:	bl	404bc0 <perror@plt>
  40c0bc:	mov	w0, #0xffffffff            	// #-1
  40c0c0:	b	40c0a4 <rtnl_listen_all_nsid@@Base+0x44>

000000000040c0c4 <rtnl_listen@@Base>:
  40c0c4:	mov	x12, #0x60d0                	// #24784
  40c0c8:	sub	sp, sp, x12
  40c0cc:	stp	x29, x30, [sp]
  40c0d0:	mov	x29, sp
  40c0d4:	stp	x19, x20, [sp, #16]
  40c0d8:	stp	x21, x22, [sp, #32]
  40c0dc:	stp	x23, x24, [sp, #48]
  40c0e0:	stp	x25, x26, [sp, #64]
  40c0e4:	stp	x27, x28, [sp, #80]
  40c0e8:	mov	x25, x0
  40c0ec:	mov	x22, x1
  40c0f0:	mov	x23, x2
  40c0f4:	str	xzr, [sp, #24768]
  40c0f8:	add	x0, sp, #0x4, lsl #12
  40c0fc:	add	x0, x0, #0x10
  40c100:	str	wzr, [x0, #8376]
  40c104:	mov	w0, #0x10                  	// #16
  40c108:	add	x1, sp, #0x6, lsl #12
  40c10c:	add	x1, x1, #0x10
  40c110:	strh	w0, [x1, #176]
  40c114:	stp	xzr, xzr, [x1, #112]
  40c118:	stp	xzr, xzr, [x1, #128]
  40c11c:	stp	xzr, xzr, [x1, #144]
  40c120:	add	x0, sp, #0x6, lsl #12
  40c124:	add	x0, x0, #0xc0
  40c128:	str	x0, [sp, #24696]
  40c12c:	mov	w0, #0xc                   	// #12
  40c130:	add	x1, sp, #0x4, lsl #12
  40c134:	add	x1, x1, #0x10
  40c138:	str	w0, [x1, #8304]
  40c13c:	add	x0, sp, #0x6, lsl #12
  40c140:	add	x0, x0, #0xb0
  40c144:	str	x0, [sp, #24712]
  40c148:	mov	x0, #0x1                   	// #1
  40c14c:	str	x0, [sp, #24720]
  40c150:	ldr	w0, [x25, #48]
  40c154:	tbz	w0, #0, 40c168 <rtnl_listen@@Base+0xa4>
  40c158:	add	x0, sp, #0x78
  40c15c:	str	x0, [sp, #24728]
  40c160:	mov	x0, #0x2000                	// #8192
  40c164:	str	x0, [sp, #24736]
  40c168:	add	x0, sp, #0x2, lsl #12
  40c16c:	add	x0, x0, #0x78
  40c170:	str	x0, [sp, #24752]
  40c174:	add	x26, sp, #0x6, lsl #12
  40c178:	add	x26, x26, #0x78
  40c17c:	mov	x28, #0x10e                 	// #270
  40c180:	movk	x28, #0x8, lsl #32
  40c184:	adrp	x27, 420000 <_IO_stdin_used@@Base+0x13258>
  40c188:	ldr	x0, [x27, #3992]
  40c18c:	str	x0, [sp, #104]
  40c190:	mov	x0, #0x4000                	// #16384
  40c194:	str	x0, [sp, #24760]
  40c198:	mov	w2, #0x0                   	// #0
  40c19c:	mov	x1, x26
  40c1a0:	ldr	w0, [x25]
  40c1a4:	bl	404b80 <recvmsg@plt>
  40c1a8:	mov	w1, w0
  40c1ac:	tbz	w0, #31, 40c200 <rtnl_listen@@Base+0x13c>
  40c1b0:	bl	405020 <__errno_location@plt>
  40c1b4:	mov	x19, x0
  40c1b8:	ldr	w0, [x0]
  40c1bc:	cmp	w0, #0x4
  40c1c0:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40c1c4:	b.eq	40c190 <rtnl_listen@@Base+0xcc>  // b.none
  40c1c8:	ldr	x1, [x27, #3992]
  40c1cc:	ldr	x20, [x1]
  40c1d0:	bl	404db0 <strerror@plt>
  40c1d4:	ldr	w3, [x19]
  40c1d8:	mov	x2, x0
  40c1dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c1e0:	add	x1, x1, #0x7e0
  40c1e4:	mov	x0, x20
  40c1e8:	bl	405070 <fprintf@plt>
  40c1ec:	ldr	w0, [x19]
  40c1f0:	cmp	w0, #0x69
  40c1f4:	b.eq	40c190 <rtnl_listen@@Base+0xcc>  // b.none
  40c1f8:	mov	w0, #0xffffffff            	// #-1
  40c1fc:	b	40c2c4 <rtnl_listen@@Base+0x200>
  40c200:	cbz	w0, 40c2e8 <rtnl_listen@@Base+0x224>
  40c204:	add	x2, sp, #0x4, lsl #12
  40c208:	add	x2, x2, #0x10
  40c20c:	ldr	w2, [x2, #8304]
  40c210:	cmp	w2, #0xc
  40c214:	b.ne	40c310 <rtnl_listen@@Base+0x24c>  // b.any
  40c218:	ldr	w2, [x25, #48]
  40c21c:	tbnz	w2, #0, 40c330 <rtnl_listen@@Base+0x26c>
  40c220:	mov	w20, w0
  40c224:	cmp	w0, #0xf
  40c228:	b.ls	40c40c <rtnl_listen@@Base+0x348>  // b.plast
  40c22c:	ldr	w19, [sp, #8312]
  40c230:	mov	w2, w19
  40c234:	cmp	w19, #0x10
  40c238:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40c23c:	b.lt	40c290 <rtnl_listen@@Base+0x1cc>  // b.tstop
  40c240:	add	x21, sp, #0x2, lsl #12
  40c244:	add	x21, x21, #0x78
  40c248:	add	x24, sp, #0x70
  40c24c:	mov	x2, x23
  40c250:	mov	x1, x21
  40c254:	mov	x0, x24
  40c258:	blr	x22
  40c25c:	tbnz	w0, #31, 40c2c4 <rtnl_listen@@Base+0x200>
  40c260:	add	w19, w19, #0x3
  40c264:	and	w19, w19, #0xfffffffc
  40c268:	sub	w20, w20, w19
  40c26c:	mov	w1, w20
  40c270:	add	x21, x21, w19, uxtw
  40c274:	cmp	w20, #0xf
  40c278:	b.ls	40c3d4 <rtnl_listen@@Base+0x310>  // b.plast
  40c27c:	ldr	w19, [x21]
  40c280:	mov	w2, w19
  40c284:	cmp	w19, #0x10
  40c288:	ccmp	w19, w20, #0x0, pl  // pl = nfrst
  40c28c:	b.le	40c24c <rtnl_listen@@Base+0x188>
  40c290:	add	x0, sp, #0x4, lsl #12
  40c294:	add	x0, x0, #0x10
  40c298:	ldr	w0, [x0, #8344]
  40c29c:	tbz	w0, #5, 40c3b4 <rtnl_listen@@Base+0x2f0>
  40c2a0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c2a4:	ldr	x0, [x0, #3992]
  40c2a8:	ldr	x3, [x0]
  40c2ac:	mov	x2, #0x12                  	// #18
  40c2b0:	mov	x1, #0x1                   	// #1
  40c2b4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c2b8:	add	x0, x0, #0x878
  40c2bc:	bl	404ef0 <fwrite@plt>
  40c2c0:	mov	w0, #0xffffffff            	// #-1
  40c2c4:	ldp	x19, x20, [sp, #16]
  40c2c8:	ldp	x21, x22, [sp, #32]
  40c2cc:	ldp	x23, x24, [sp, #48]
  40c2d0:	ldp	x25, x26, [sp, #64]
  40c2d4:	ldp	x27, x28, [sp, #80]
  40c2d8:	ldp	x29, x30, [sp]
  40c2dc:	mov	x12, #0x60d0                	// #24784
  40c2e0:	add	sp, sp, x12
  40c2e4:	ret
  40c2e8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c2ec:	ldr	x0, [x0, #3992]
  40c2f0:	ldr	x3, [x0]
  40c2f4:	mov	x2, #0xf                   	// #15
  40c2f8:	mov	x1, #0x1                   	// #1
  40c2fc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c300:	add	x0, x0, #0x800
  40c304:	bl	404ef0 <fwrite@plt>
  40c308:	mov	w0, #0xffffffff            	// #-1
  40c30c:	b	40c2c4 <rtnl_listen@@Base+0x200>
  40c310:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c314:	add	x1, x1, #0xa78
  40c318:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c31c:	ldr	x0, [x0, #3992]
  40c320:	ldr	x0, [x0]
  40c324:	bl	405070 <fprintf@plt>
  40c328:	mov	w0, #0x1                   	// #1
  40c32c:	bl	404bb0 <exit@plt>
  40c330:	mov	w2, #0xffffffff            	// #-1
  40c334:	str	w2, [sp, #112]
  40c338:	ldr	x4, [sp, #24736]
  40c33c:	cmp	x4, #0xf
  40c340:	b.ls	40c220 <rtnl_listen@@Base+0x15c>  // b.plast
  40c344:	ldr	x2, [sp, #24728]
  40c348:	add	x4, x2, x4
  40c34c:	cbz	x2, 40c220 <rtnl_listen@@Base+0x15c>
  40c350:	ldr	x3, [x2, #8]
  40c354:	cmp	x3, x28
  40c358:	b.eq	40c39c <rtnl_listen@@Base+0x2d8>  // b.none
  40c35c:	ldr	x3, [x2]
  40c360:	cmp	x3, #0xf
  40c364:	b.ls	40c220 <rtnl_listen@@Base+0x15c>  // b.plast
  40c368:	add	x3, x3, #0x7
  40c36c:	and	x3, x3, #0xfffffffffffffff8
  40c370:	add	x2, x2, x3
  40c374:	add	x3, x2, #0x10
  40c378:	cmp	x4, x3
  40c37c:	b.cc	40c220 <rtnl_listen@@Base+0x15c>  // b.lo, b.ul, b.last
  40c380:	ldr	x3, [x2]
  40c384:	add	x3, x3, #0x7
  40c388:	and	x3, x3, #0xfffffffffffffff8
  40c38c:	add	x3, x2, x3
  40c390:	cmp	x4, x3
  40c394:	b.cs	40c34c <rtnl_listen@@Base+0x288>  // b.hs, b.nlast
  40c398:	b	40c220 <rtnl_listen@@Base+0x15c>
  40c39c:	ldr	x3, [x2]
  40c3a0:	cmp	x3, #0x14
  40c3a4:	b.ne	40c35c <rtnl_listen@@Base+0x298>  // b.any
  40c3a8:	ldr	w3, [x2, #16]
  40c3ac:	str	w3, [sp, #112]
  40c3b0:	b	40c35c <rtnl_listen@@Base+0x298>
  40c3b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c3b8:	add	x1, x1, #0x890
  40c3bc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c3c0:	ldr	x0, [x0, #3992]
  40c3c4:	ldr	x0, [x0]
  40c3c8:	bl	405070 <fprintf@plt>
  40c3cc:	mov	w0, #0x1                   	// #1
  40c3d0:	bl	404bb0 <exit@plt>
  40c3d4:	add	x0, sp, #0x4, lsl #12
  40c3d8:	add	x0, x0, #0x10
  40c3dc:	ldr	w0, [x0, #8344]
  40c3e0:	tbnz	w0, #5, 40c41c <rtnl_listen@@Base+0x358>
  40c3e4:	cbz	w20, 40c190 <rtnl_listen@@Base+0xcc>
  40c3e8:	mov	w2, w1
  40c3ec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c3f0:	add	x1, x1, #0x910
  40c3f4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c3f8:	ldr	x0, [x0, #3992]
  40c3fc:	ldr	x0, [x0]
  40c400:	bl	405070 <fprintf@plt>
  40c404:	mov	w0, #0x1                   	// #1
  40c408:	bl	404bb0 <exit@plt>
  40c40c:	add	x0, sp, #0x4, lsl #12
  40c410:	add	x0, x0, #0x10
  40c414:	ldr	w0, [x0, #8344]
  40c418:	tbz	w0, #5, 40c3e8 <rtnl_listen@@Base+0x324>
  40c41c:	ldr	x0, [sp, #104]
  40c420:	ldr	x3, [x0]
  40c424:	mov	x2, #0x12                  	// #18
  40c428:	mov	x1, #0x1                   	// #1
  40c42c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c430:	add	x0, x0, #0x8f8
  40c434:	bl	404ef0 <fwrite@plt>
  40c438:	b	40c190 <rtnl_listen@@Base+0xcc>

000000000040c43c <rtnl_from_file@@Base>:
  40c43c:	mov	x12, #0x4060                	// #16480
  40c440:	sub	sp, sp, x12
  40c444:	stp	x29, x30, [sp]
  40c448:	mov	x29, sp
  40c44c:	stp	x19, x20, [sp, #16]
  40c450:	stp	x21, x22, [sp, #32]
  40c454:	stp	x23, x24, [sp, #48]
  40c458:	stp	x25, x26, [sp, #64]
  40c45c:	str	x27, [sp, #80]
  40c460:	mov	x20, x0
  40c464:	mov	x24, x1
  40c468:	mov	x23, x2
  40c46c:	add	x21, sp, #0x60
  40c470:	mov	x25, #0x10                  	// #16
  40c474:	mov	x22, #0x1                   	// #1
  40c478:	mov	w26, #0x3ff0                	// #16368
  40c47c:	add	x27, x21, x25
  40c480:	b	40c4d4 <rtnl_from_file@@Base+0x98>
  40c484:	cmp	x0, #0x10
  40c488:	b.ne	40c4f8 <rtnl_from_file@@Base+0xbc>  // b.any
  40c48c:	ldr	w19, [sp, #96]
  40c490:	sub	w0, w19, #0x10
  40c494:	cmp	w0, w26
  40c498:	b.hi	40c550 <rtnl_from_file@@Base+0x114>  // b.pmore
  40c49c:	sub	w19, w19, #0xd
  40c4a0:	and	x19, x19, #0xfffffffc
  40c4a4:	mov	x3, x20
  40c4a8:	mov	x2, x19
  40c4ac:	mov	x1, x22
  40c4b0:	mov	x0, x27
  40c4b4:	bl	404e70 <fread@plt>
  40c4b8:	cmp	x19, x0
  40c4bc:	b.ne	40c5a4 <rtnl_from_file@@Base+0x168>  // b.any
  40c4c0:	mov	x2, x23
  40c4c4:	mov	x1, x21
  40c4c8:	mov	x0, #0x0                   	// #0
  40c4cc:	blr	x24
  40c4d0:	tbnz	w0, #31, 40c580 <rtnl_from_file@@Base+0x144>
  40c4d4:	mov	x3, x20
  40c4d8:	mov	x2, x25
  40c4dc:	mov	x1, x22
  40c4e0:	mov	x0, x21
  40c4e4:	bl	404e70 <fread@plt>
  40c4e8:	cbnz	x0, 40c484 <rtnl_from_file@@Base+0x48>
  40c4ec:	mov	x0, x20
  40c4f0:	bl	404e10 <feof@plt>
  40c4f4:	cbnz	w0, 40c5fc <rtnl_from_file@@Base+0x1c0>
  40c4f8:	mov	x0, x20
  40c4fc:	bl	4050a0 <ferror@plt>
  40c500:	cbnz	w0, 40c540 <rtnl_from_file@@Base+0x104>
  40c504:	mov	x0, x20
  40c508:	bl	404e10 <feof@plt>
  40c50c:	mov	w1, w0
  40c510:	mov	w0, #0xffffffff            	// #-1
  40c514:	cbz	w1, 40c580 <rtnl_from_file@@Base+0x144>
  40c518:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c51c:	ldr	x0, [x0, #3992]
  40c520:	ldr	x3, [x0]
  40c524:	mov	x2, #0x22                  	// #34
  40c528:	mov	x1, #0x1                   	// #1
  40c52c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c530:	add	x0, x0, #0xab0
  40c534:	bl	404ef0 <fwrite@plt>
  40c538:	mov	w0, #0xffffffff            	// #-1
  40c53c:	b	40c580 <rtnl_from_file@@Base+0x144>
  40c540:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c544:	add	x0, x0, #0xa98
  40c548:	bl	404bc0 <perror@plt>
  40c54c:	b	40c504 <rtnl_from_file@@Base+0xc8>
  40c550:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c554:	ldr	x0, [x0, #3992]
  40c558:	ldr	x21, [x0]
  40c55c:	mov	x0, x20
  40c560:	bl	404c20 <ftell@plt>
  40c564:	mov	x3, x0
  40c568:	mov	w2, w19
  40c56c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c570:	add	x1, x1, #0xad8
  40c574:	mov	x0, x21
  40c578:	bl	405070 <fprintf@plt>
  40c57c:	mov	w0, #0xffffffff            	// #-1
  40c580:	ldp	x19, x20, [sp, #16]
  40c584:	ldp	x21, x22, [sp, #32]
  40c588:	ldp	x23, x24, [sp, #48]
  40c58c:	ldp	x25, x26, [sp, #64]
  40c590:	ldr	x27, [sp, #80]
  40c594:	ldp	x29, x30, [sp]
  40c598:	mov	x12, #0x4060                	// #16480
  40c59c:	add	sp, sp, x12
  40c5a0:	ret
  40c5a4:	mov	x0, x20
  40c5a8:	bl	4050a0 <ferror@plt>
  40c5ac:	cbnz	w0, 40c5ec <rtnl_from_file@@Base+0x1b0>
  40c5b0:	mov	x0, x20
  40c5b4:	bl	404e10 <feof@plt>
  40c5b8:	mov	w1, w0
  40c5bc:	mov	w0, #0xffffffff            	// #-1
  40c5c0:	cbz	w1, 40c580 <rtnl_from_file@@Base+0x144>
  40c5c4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c5c8:	ldr	x0, [x0, #3992]
  40c5cc:	ldr	x3, [x0]
  40c5d0:	mov	x2, #0x22                  	// #34
  40c5d4:	mov	x1, #0x1                   	// #1
  40c5d8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c5dc:	add	x0, x0, #0xab0
  40c5e0:	bl	404ef0 <fwrite@plt>
  40c5e4:	mov	w0, #0xffffffff            	// #-1
  40c5e8:	b	40c580 <rtnl_from_file@@Base+0x144>
  40c5ec:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x258>
  40c5f0:	add	x0, x0, #0xa98
  40c5f4:	bl	404bc0 <perror@plt>
  40c5f8:	b	40c5b0 <rtnl_from_file@@Base+0x174>
  40c5fc:	mov	w0, #0x0                   	// #0
  40c600:	b	40c580 <rtnl_from_file@@Base+0x144>

000000000040c604 <addattr_l@@Base>:
  40c604:	stp	x29, x30, [sp, #-32]!
  40c608:	mov	x29, sp
  40c60c:	stp	x19, x20, [sp, #16]
  40c610:	mov	x19, x0
  40c614:	ldr	w5, [x0]
  40c618:	add	w5, w5, #0x3
  40c61c:	and	w5, w5, #0xfffffffc
  40c620:	add	w0, w4, #0x7
  40c624:	and	w20, w0, #0xfffffffc
  40c628:	add	w0, w5, w20
  40c62c:	cmp	w0, w1
  40c630:	b.hi	40c66c <addattr_l@@Base+0x68>  // b.pmore
  40c634:	add	w1, w4, #0x4
  40c638:	add	x0, x19, w5, uxtw
  40c63c:	strh	w2, [x0, #2]
  40c640:	strh	w1, [x19, w5, uxtw]
  40c644:	cbnz	w4, 40c690 <addattr_l@@Base+0x8c>
  40c648:	ldr	w0, [x19]
  40c64c:	add	w0, w0, #0x3
  40c650:	and	w0, w0, #0xfffffffc
  40c654:	add	w0, w0, w20
  40c658:	str	w0, [x19]
  40c65c:	mov	w0, #0x0                   	// #0
  40c660:	ldp	x19, x20, [sp, #16]
  40c664:	ldp	x29, x30, [sp], #32
  40c668:	ret
  40c66c:	mov	w2, w1
  40c670:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c674:	add	x1, x1, #0xb00
  40c678:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c67c:	ldr	x0, [x0, #3992]
  40c680:	ldr	x0, [x0]
  40c684:	bl	405070 <fprintf@plt>
  40c688:	mov	w0, #0xffffffff            	// #-1
  40c68c:	b	40c660 <addattr_l@@Base+0x5c>
  40c690:	sxtw	x2, w4
  40c694:	mov	x1, x3
  40c698:	add	x0, x0, #0x4
  40c69c:	bl	404b70 <memcpy@plt>
  40c6a0:	b	40c648 <addattr_l@@Base+0x44>

000000000040c6a4 <addattr@@Base>:
  40c6a4:	stp	x29, x30, [sp, #-16]!
  40c6a8:	mov	x29, sp
  40c6ac:	mov	w4, #0x0                   	// #0
  40c6b0:	mov	x3, #0x0                   	// #0
  40c6b4:	bl	40c604 <addattr_l@@Base>
  40c6b8:	ldp	x29, x30, [sp], #16
  40c6bc:	ret

000000000040c6c0 <addattr8@@Base>:
  40c6c0:	stp	x29, x30, [sp, #-32]!
  40c6c4:	mov	x29, sp
  40c6c8:	strb	w3, [sp, #31]
  40c6cc:	mov	w4, #0x1                   	// #1
  40c6d0:	add	x3, sp, #0x1f
  40c6d4:	bl	40c604 <addattr_l@@Base>
  40c6d8:	ldp	x29, x30, [sp], #32
  40c6dc:	ret

000000000040c6e0 <addattr16@@Base>:
  40c6e0:	stp	x29, x30, [sp, #-32]!
  40c6e4:	mov	x29, sp
  40c6e8:	strh	w3, [sp, #30]
  40c6ec:	mov	w4, #0x2                   	// #2
  40c6f0:	add	x3, sp, #0x1e
  40c6f4:	bl	40c604 <addattr_l@@Base>
  40c6f8:	ldp	x29, x30, [sp], #32
  40c6fc:	ret

000000000040c700 <addattr32@@Base>:
  40c700:	stp	x29, x30, [sp, #-32]!
  40c704:	mov	x29, sp
  40c708:	str	w3, [sp, #28]
  40c70c:	mov	w4, #0x4                   	// #4
  40c710:	add	x3, sp, #0x1c
  40c714:	bl	40c604 <addattr_l@@Base>
  40c718:	ldp	x29, x30, [sp], #32
  40c71c:	ret

000000000040c720 <addattr64@@Base>:
  40c720:	stp	x29, x30, [sp, #-32]!
  40c724:	mov	x29, sp
  40c728:	str	x3, [sp, #24]
  40c72c:	mov	w4, #0x8                   	// #8
  40c730:	add	x3, sp, #0x18
  40c734:	bl	40c604 <addattr_l@@Base>
  40c738:	ldp	x29, x30, [sp], #32
  40c73c:	ret

000000000040c740 <addattrstrz@@Base>:
  40c740:	stp	x29, x30, [sp, #-48]!
  40c744:	mov	x29, sp
  40c748:	stp	x19, x20, [sp, #16]
  40c74c:	stp	x21, x22, [sp, #32]
  40c750:	mov	x20, x0
  40c754:	mov	w21, w1
  40c758:	mov	w22, w2
  40c75c:	mov	x19, x3
  40c760:	mov	x0, x3
  40c764:	bl	404ba0 <strlen@plt>
  40c768:	add	w4, w0, #0x1
  40c76c:	mov	x3, x19
  40c770:	mov	w2, w22
  40c774:	mov	w1, w21
  40c778:	mov	x0, x20
  40c77c:	bl	40c604 <addattr_l@@Base>
  40c780:	ldp	x19, x20, [sp, #16]
  40c784:	ldp	x21, x22, [sp, #32]
  40c788:	ldp	x29, x30, [sp], #48
  40c78c:	ret

000000000040c790 <addraw_l@@Base>:
  40c790:	stp	x29, x30, [sp, #-48]!
  40c794:	mov	x29, sp
  40c798:	stp	x19, x20, [sp, #16]
  40c79c:	mov	x19, x0
  40c7a0:	mov	w4, w1
  40c7a4:	mov	x1, x2
  40c7a8:	ldr	w0, [x0]
  40c7ac:	add	w0, w0, #0x3
  40c7b0:	and	w0, w0, #0xfffffffc
  40c7b4:	add	w20, w3, #0x3
  40c7b8:	and	w20, w20, #0xfffffffc
  40c7bc:	add	w2, w0, w20
  40c7c0:	cmp	w2, w4
  40c7c4:	b.hi	40c828 <addraw_l@@Base+0x98>  // b.pmore
  40c7c8:	stp	x21, x22, [sp, #32]
  40c7cc:	mov	w21, w3
  40c7d0:	sxtw	x22, w3
  40c7d4:	mov	x2, x22
  40c7d8:	add	x0, x19, w0, uxtw
  40c7dc:	bl	404b70 <memcpy@plt>
  40c7e0:	ldr	w0, [x19]
  40c7e4:	add	w0, w0, #0x3
  40c7e8:	and	x0, x0, #0xfffffffc
  40c7ec:	add	x0, x0, x22
  40c7f0:	sub	w2, w20, w21
  40c7f4:	mov	w1, #0x0                   	// #0
  40c7f8:	add	x0, x19, x0
  40c7fc:	bl	404d30 <memset@plt>
  40c800:	ldr	w0, [x19]
  40c804:	add	w0, w0, #0x3
  40c808:	and	w0, w0, #0xfffffffc
  40c80c:	add	w0, w0, w20
  40c810:	str	w0, [x19]
  40c814:	mov	w0, #0x0                   	// #0
  40c818:	ldp	x21, x22, [sp, #32]
  40c81c:	ldp	x19, x20, [sp, #16]
  40c820:	ldp	x29, x30, [sp], #48
  40c824:	ret
  40c828:	mov	w2, w4
  40c82c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c830:	add	x1, x1, #0xb30
  40c834:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c838:	ldr	x0, [x0, #3992]
  40c83c:	ldr	x0, [x0]
  40c840:	bl	405070 <fprintf@plt>
  40c844:	mov	w0, #0xffffffff            	// #-1
  40c848:	b	40c81c <addraw_l@@Base+0x8c>

000000000040c84c <addattr_nest@@Base>:
  40c84c:	stp	x29, x30, [sp, #-32]!
  40c850:	mov	x29, sp
  40c854:	str	x19, [sp, #16]
  40c858:	ldr	w19, [x0]
  40c85c:	add	w19, w19, #0x3
  40c860:	and	x19, x19, #0xfffffffc
  40c864:	add	x19, x0, x19
  40c868:	mov	w4, #0x0                   	// #0
  40c86c:	mov	x3, #0x0                   	// #0
  40c870:	bl	40c604 <addattr_l@@Base>
  40c874:	mov	x0, x19
  40c878:	ldr	x19, [sp, #16]
  40c87c:	ldp	x29, x30, [sp], #32
  40c880:	ret

000000000040c884 <addattr_nest_end@@Base>:
  40c884:	ldr	w2, [x0]
  40c888:	add	w2, w2, #0x3
  40c88c:	and	x2, x2, #0xfffffffc
  40c890:	add	x2, x0, x2
  40c894:	sub	x2, x2, x1
  40c898:	strh	w2, [x1]
  40c89c:	ldr	w0, [x0]
  40c8a0:	ret

000000000040c8a4 <addattr_nest_compat@@Base>:
  40c8a4:	stp	x29, x30, [sp, #-48]!
  40c8a8:	mov	x29, sp
  40c8ac:	stp	x19, x20, [sp, #16]
  40c8b0:	stp	x21, x22, [sp, #32]
  40c8b4:	mov	x20, x0
  40c8b8:	mov	w21, w1
  40c8bc:	mov	w22, w2
  40c8c0:	ldr	w19, [x0]
  40c8c4:	add	w19, w19, #0x3
  40c8c8:	and	x19, x19, #0xfffffffc
  40c8cc:	add	x19, x0, x19
  40c8d0:	bl	40c604 <addattr_l@@Base>
  40c8d4:	mov	w2, w22
  40c8d8:	mov	w1, w21
  40c8dc:	mov	x0, x20
  40c8e0:	bl	40c84c <addattr_nest@@Base>
  40c8e4:	mov	x0, x19
  40c8e8:	ldp	x19, x20, [sp, #16]
  40c8ec:	ldp	x21, x22, [sp, #32]
  40c8f0:	ldp	x29, x30, [sp], #48
  40c8f4:	ret

000000000040c8f8 <addattr_nest_compat_end@@Base>:
  40c8f8:	stp	x29, x30, [sp, #-32]!
  40c8fc:	mov	x29, sp
  40c900:	str	x19, [sp, #16]
  40c904:	mov	x19, x0
  40c908:	ldrh	w3, [x1]
  40c90c:	add	w3, w3, #0x3
  40c910:	and	x3, x3, #0x1fffc
  40c914:	ldr	w2, [x0]
  40c918:	add	w2, w2, #0x3
  40c91c:	and	x2, x2, #0xfffffffc
  40c920:	add	x2, x0, x2
  40c924:	sub	x2, x2, x1
  40c928:	strh	w2, [x1]
  40c92c:	add	x1, x1, x3
  40c930:	bl	40c884 <addattr_nest_end@@Base>
  40c934:	ldr	w0, [x19]
  40c938:	ldr	x19, [sp, #16]
  40c93c:	ldp	x29, x30, [sp], #32
  40c940:	ret

000000000040c944 <rta_addattr32@@Base>:
  40c944:	ldrh	w4, [x0]
  40c948:	add	w4, w4, #0x3
  40c94c:	and	w4, w4, #0xfffffffc
  40c950:	add	w5, w4, #0x8
  40c954:	cmp	w5, w1
  40c958:	b.hi	40c98c <rta_addattr32@@Base+0x48>  // b.pmore
  40c95c:	add	x1, x0, w4, uxtw
  40c960:	strh	w2, [x1, #2]
  40c964:	mov	w2, #0x8                   	// #8
  40c968:	strh	w2, [x0, w4, uxtw]
  40c96c:	str	w3, [x1, #4]
  40c970:	ldrh	w1, [x0]
  40c974:	add	w1, w1, #0x3
  40c978:	and	w1, w1, #0xfffffffc
  40c97c:	add	w1, w1, #0x8
  40c980:	strh	w1, [x0]
  40c984:	mov	w0, #0x0                   	// #0
  40c988:	ret
  40c98c:	stp	x29, x30, [sp, #-16]!
  40c990:	mov	x29, sp
  40c994:	mov	w2, w1
  40c998:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40c99c:	add	x1, x1, #0xb60
  40c9a0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40c9a4:	ldr	x0, [x0, #3992]
  40c9a8:	ldr	x0, [x0]
  40c9ac:	bl	405070 <fprintf@plt>
  40c9b0:	mov	w0, #0xffffffff            	// #-1
  40c9b4:	ldp	x29, x30, [sp], #16
  40c9b8:	ret

000000000040c9bc <rta_addattr_l@@Base>:
  40c9bc:	stp	x29, x30, [sp, #-32]!
  40c9c0:	mov	x29, sp
  40c9c4:	stp	x19, x20, [sp, #16]
  40c9c8:	mov	x20, x0
  40c9cc:	ldrh	w5, [x0]
  40c9d0:	add	w5, w5, #0x3
  40c9d4:	and	w5, w5, #0xfffffffc
  40c9d8:	add	w0, w4, #0x7
  40c9dc:	and	w0, w0, #0xfffffffc
  40c9e0:	add	w0, w0, w5
  40c9e4:	cmp	w0, w1
  40c9e8:	b.hi	40ca30 <rta_addattr_l@@Base+0x74>  // b.pmore
  40c9ec:	add	w19, w4, #0x4
  40c9f0:	add	x0, x20, w5, uxtw
  40c9f4:	strh	w2, [x0, #2]
  40c9f8:	and	w19, w19, #0xffff
  40c9fc:	strh	w19, [x20, w5, uxtw]
  40ca00:	cbnz	w4, 40ca54 <rta_addattr_l@@Base+0x98>
  40ca04:	ldrh	w0, [x20]
  40ca08:	add	w0, w0, #0x3
  40ca0c:	and	w0, w0, #0xfffffffc
  40ca10:	add	w19, w19, #0x3
  40ca14:	and	w19, w19, #0xfffffffc
  40ca18:	add	w19, w0, w19
  40ca1c:	strh	w19, [x20]
  40ca20:	mov	w0, #0x0                   	// #0
  40ca24:	ldp	x19, x20, [sp, #16]
  40ca28:	ldp	x29, x30, [sp], #32
  40ca2c:	ret
  40ca30:	mov	w2, w1
  40ca34:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40ca38:	add	x1, x1, #0xb98
  40ca3c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40ca40:	ldr	x0, [x0, #3992]
  40ca44:	ldr	x0, [x0]
  40ca48:	bl	405070 <fprintf@plt>
  40ca4c:	mov	w0, #0xffffffff            	// #-1
  40ca50:	b	40ca24 <rta_addattr_l@@Base+0x68>
  40ca54:	sxtw	x2, w4
  40ca58:	mov	x1, x3
  40ca5c:	add	x0, x0, #0x4
  40ca60:	bl	404b70 <memcpy@plt>
  40ca64:	b	40ca04 <rta_addattr_l@@Base+0x48>

000000000040ca68 <rta_addattr8@@Base>:
  40ca68:	stp	x29, x30, [sp, #-32]!
  40ca6c:	mov	x29, sp
  40ca70:	strb	w3, [sp, #31]
  40ca74:	mov	w4, #0x1                   	// #1
  40ca78:	add	x3, sp, #0x1f
  40ca7c:	bl	40c9bc <rta_addattr_l@@Base>
  40ca80:	ldp	x29, x30, [sp], #32
  40ca84:	ret

000000000040ca88 <rta_addattr16@@Base>:
  40ca88:	stp	x29, x30, [sp, #-32]!
  40ca8c:	mov	x29, sp
  40ca90:	strh	w3, [sp, #30]
  40ca94:	mov	w4, #0x2                   	// #2
  40ca98:	add	x3, sp, #0x1e
  40ca9c:	bl	40c9bc <rta_addattr_l@@Base>
  40caa0:	ldp	x29, x30, [sp], #32
  40caa4:	ret

000000000040caa8 <rta_addattr64@@Base>:
  40caa8:	stp	x29, x30, [sp, #-32]!
  40caac:	mov	x29, sp
  40cab0:	str	x3, [sp, #24]
  40cab4:	mov	w4, #0x8                   	// #8
  40cab8:	add	x3, sp, #0x18
  40cabc:	bl	40c9bc <rta_addattr_l@@Base>
  40cac0:	ldp	x29, x30, [sp], #32
  40cac4:	ret

000000000040cac8 <rta_nest@@Base>:
  40cac8:	stp	x29, x30, [sp, #-32]!
  40cacc:	mov	x29, sp
  40cad0:	str	x19, [sp, #16]
  40cad4:	ldrh	w3, [x0]
  40cad8:	add	w3, w3, #0x3
  40cadc:	and	x3, x3, #0x1fffc
  40cae0:	add	x19, x0, x3
  40cae4:	mov	w4, #0x0                   	// #0
  40cae8:	mov	x3, #0x0                   	// #0
  40caec:	bl	40c9bc <rta_addattr_l@@Base>
  40caf0:	ldrh	w0, [x19, #2]
  40caf4:	orr	w0, w0, #0xffff8000
  40caf8:	strh	w0, [x19, #2]
  40cafc:	mov	x0, x19
  40cb00:	ldr	x19, [sp, #16]
  40cb04:	ldp	x29, x30, [sp], #32
  40cb08:	ret

000000000040cb0c <rta_nest_end@@Base>:
  40cb0c:	ldrh	w2, [x0]
  40cb10:	add	w2, w2, #0x3
  40cb14:	and	x2, x2, #0x1fffc
  40cb18:	add	x2, x0, x2
  40cb1c:	sub	x2, x2, x1
  40cb20:	strh	w2, [x1]
  40cb24:	ldrh	w0, [x0]
  40cb28:	ret

000000000040cb2c <parse_rtattr_flags@@Base>:
  40cb2c:	stp	x29, x30, [sp, #-64]!
  40cb30:	mov	x29, sp
  40cb34:	stp	x19, x20, [sp, #16]
  40cb38:	stp	x21, x22, [sp, #32]
  40cb3c:	str	x23, [sp, #48]
  40cb40:	mov	x22, x0
  40cb44:	mov	w21, w1
  40cb48:	mov	x19, x2
  40cb4c:	mov	w20, w3
  40cb50:	and	w23, w4, #0xffff
  40cb54:	add	w2, w1, #0x1
  40cb58:	sbfiz	x2, x2, #3, #32
  40cb5c:	mov	w1, #0x0                   	// #0
  40cb60:	bl	404d30 <memset@plt>
  40cb64:	mvn	w1, w23
  40cb68:	cmp	w20, #0x3
  40cb6c:	b.gt	40cbac <parse_rtattr_flags@@Base+0x80>
  40cb70:	cbnz	w20, 40cbe4 <parse_rtattr_flags@@Base+0xb8>
  40cb74:	mov	w0, #0x0                   	// #0
  40cb78:	ldp	x19, x20, [sp, #16]
  40cb7c:	ldp	x21, x22, [sp, #32]
  40cb80:	ldr	x23, [sp, #48]
  40cb84:	ldp	x29, x30, [sp], #64
  40cb88:	ret
  40cb8c:	str	x19, [x22, x0, lsl #3]
  40cb90:	ldrh	w4, [x19]
  40cb94:	add	w4, w4, #0x3
  40cb98:	and	w4, w4, #0xfffffffc
  40cb9c:	sub	w20, w20, w4
  40cba0:	add	x19, x19, w4, uxtw
  40cba4:	cmp	w20, #0x3
  40cba8:	b.le	40cb70 <parse_rtattr_flags@@Base+0x44>
  40cbac:	ldrh	w2, [x19]
  40cbb0:	cmp	w2, #0x3
  40cbb4:	b.ls	40cb70 <parse_rtattr_flags@@Base+0x44>  // b.plast
  40cbb8:	cmp	w2, w20
  40cbbc:	b.gt	40cb70 <parse_rtattr_flags@@Base+0x44>
  40cbc0:	ldrh	w2, [x19, #2]
  40cbc4:	and	w2, w1, w2
  40cbc8:	and	w0, w2, #0xffff
  40cbcc:	cmp	w21, w2, uxth
  40cbd0:	b.lt	40cb90 <parse_rtattr_flags@@Base+0x64>  // b.tstop
  40cbd4:	and	x0, x0, #0xffff
  40cbd8:	ldr	x2, [x22, x0, lsl #3]
  40cbdc:	cbnz	x2, 40cb90 <parse_rtattr_flags@@Base+0x64>
  40cbe0:	b	40cb8c <parse_rtattr_flags@@Base+0x60>
  40cbe4:	ldrh	w3, [x19]
  40cbe8:	mov	w2, w20
  40cbec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40cbf0:	add	x1, x1, #0xbd0
  40cbf4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40cbf8:	ldr	x0, [x0, #3992]
  40cbfc:	ldr	x0, [x0]
  40cc00:	bl	405070 <fprintf@plt>
  40cc04:	b	40cb74 <parse_rtattr_flags@@Base+0x48>

000000000040cc08 <parse_rtattr@@Base>:
  40cc08:	stp	x29, x30, [sp, #-16]!
  40cc0c:	mov	x29, sp
  40cc10:	mov	w4, #0x0                   	// #0
  40cc14:	bl	40cb2c <parse_rtattr_flags@@Base>
  40cc18:	ldp	x29, x30, [sp], #16
  40cc1c:	ret

000000000040cc20 <parse_rtattr_one@@Base>:
  40cc20:	cmp	w2, #0x3
  40cc24:	b.le	40cc60 <parse_rtattr_one@@Base+0x40>
  40cc28:	ldrh	w3, [x1]
  40cc2c:	cmp	w3, #0x3
  40cc30:	b.ls	40cc60 <parse_rtattr_one@@Base+0x40>  // b.plast
  40cc34:	cmp	w3, w2
  40cc38:	b.gt	40cc60 <parse_rtattr_one@@Base+0x40>
  40cc3c:	ldrh	w4, [x1, #2]
  40cc40:	cmp	w4, w0
  40cc44:	b.eq	40cc9c <parse_rtattr_one@@Base+0x7c>  // b.none
  40cc48:	add	w3, w3, #0x3
  40cc4c:	and	w3, w3, #0xfffffffc
  40cc50:	sub	w2, w2, w3
  40cc54:	add	x1, x1, w3, uxtw
  40cc58:	cmp	w2, #0x3
  40cc5c:	b.gt	40cc28 <parse_rtattr_one@@Base+0x8>
  40cc60:	mov	x0, #0x0                   	// #0
  40cc64:	cbnz	w2, 40cc6c <parse_rtattr_one@@Base+0x4c>
  40cc68:	ret
  40cc6c:	stp	x29, x30, [sp, #-16]!
  40cc70:	mov	x29, sp
  40cc74:	ldrh	w3, [x1]
  40cc78:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x258>
  40cc7c:	add	x1, x1, #0xbd0
  40cc80:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x13258>
  40cc84:	ldr	x0, [x0, #3992]
  40cc88:	ldr	x0, [x0]
  40cc8c:	bl	405070 <fprintf@plt>
  40cc90:	mov	x0, #0x0                   	// #0
  40cc94:	ldp	x29, x30, [sp], #16
  40cc98:	ret
  40cc9c:	mov	x0, x1
  40cca0:	ret

000000000040cca4 <__parse_rtattr_nested_compat@@Base>:
  40cca4:	ldrh	w4, [x2]
  40cca8:	sub	x4, x4, #0x4
  40ccac:	cmp	x4, w3, sxtw
  40ccb0:	b.cc	40cd04 <__parse_rtattr_nested_compat@@Base+0x60>  // b.lo, b.ul, b.last
  40ccb4:	stp	x29, x30, [sp, #-16]!
  40ccb8:	mov	x29, sp
  40ccbc:	add	w3, w3, #0x3
  40ccc0:	and	x3, x3, #0xfffffffc
  40ccc4:	add	x3, x3, #0x4
  40ccc8:	cmp	x4, x3
  40cccc:	b.cs	40ccec <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40ccd0:	add	w1, w1, #0x1
  40ccd4:	sbfiz	x2, x1, #3, #32
  40ccd8:	mov	w1, #0x0                   	// #0
  40ccdc:	bl	404d30 <memset@plt>
  40cce0:	mov	w0, #0x0                   	// #0
  40cce4:	ldp	x29, x30, [sp], #16
  40cce8:	ret
  40ccec:	add	x4, x2, x3
  40ccf0:	ldrh	w3, [x2, x3]
  40ccf4:	sub	w3, w3, #0x4
  40ccf8:	add	x2, x4, #0x4
  40ccfc:	bl	40cc08 <parse_rtattr@@Base>
  40cd00:	b	40cce4 <__parse_rtattr_nested_compat@@Base+0x40>
  40cd04:	mov	w0, #0xffffffff            	// #-1
  40cd08:	ret
  40cd0c:	nop

000000000040cd10 <__libc_csu_init@@Base>:
  40cd10:	stp	x29, x30, [sp, #-64]!
  40cd14:	mov	x29, sp
  40cd18:	stp	x19, x20, [sp, #16]
  40cd1c:	adrp	x20, 420000 <_IO_stdin_used@@Base+0x13258>
  40cd20:	add	x20, x20, #0xcf8
  40cd24:	stp	x21, x22, [sp, #32]
  40cd28:	adrp	x21, 420000 <_IO_stdin_used@@Base+0x13258>
  40cd2c:	add	x21, x21, #0xcf0
  40cd30:	sub	x20, x20, x21
  40cd34:	mov	w22, w0
  40cd38:	stp	x23, x24, [sp, #48]
  40cd3c:	mov	x23, x1
  40cd40:	mov	x24, x2
  40cd44:	bl	404b30 <memcpy@plt-0x40>
  40cd48:	cmp	xzr, x20, asr #3
  40cd4c:	b.eq	40cd78 <__libc_csu_init@@Base+0x68>  // b.none
  40cd50:	asr	x20, x20, #3
  40cd54:	mov	x19, #0x0                   	// #0
  40cd58:	ldr	x3, [x21, x19, lsl #3]
  40cd5c:	mov	x2, x24
  40cd60:	add	x19, x19, #0x1
  40cd64:	mov	x1, x23
  40cd68:	mov	w0, w22
  40cd6c:	blr	x3
  40cd70:	cmp	x20, x19
  40cd74:	b.ne	40cd58 <__libc_csu_init@@Base+0x48>  // b.any
  40cd78:	ldp	x19, x20, [sp, #16]
  40cd7c:	ldp	x21, x22, [sp, #32]
  40cd80:	ldp	x23, x24, [sp, #48]
  40cd84:	ldp	x29, x30, [sp], #64
  40cd88:	ret
  40cd8c:	nop

000000000040cd90 <__libc_csu_fini@@Base>:
  40cd90:	ret

Disassembly of section .fini:

000000000040cd94 <.fini>:
  40cd94:	stp	x29, x30, [sp, #-16]!
  40cd98:	mov	x29, sp
  40cd9c:	ldp	x29, x30, [sp], #16
  40cda0:	ret
