
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//boot.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_loader_is_loaded-0x38>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	mov	w4, #0x0                   	// #0
  1c:	ldr	x3, [sp, #16]
  20:	ldr	x2, [sp, #24]
  24:	ldr	x1, [sp, #32]
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <grub_register_command_prio>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

0000000000000038 <grub_loader_is_loaded>:
  38:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
  3c:	add	x0, x0, #0x0
  40:	ldr	x0, [x0]
  44:	ldr	w0, [x0]
  48:	ret
  4c:	nop
	...

0000000000000058 <grub_loader_register_preboot_hook>:
  58:	stp	x29, x30, [sp, #-64]!
  5c:	mov	x29, sp
  60:	str	x0, [sp, #40]
  64:	str	x1, [sp, #32]
  68:	str	w2, [sp, #28]
  6c:	ldr	x0, [sp, #40]
  70:	cmp	x0, #0x0
  74:	b.ne	8c <grub_loader_register_preboot_hook+0x34>  // b.any
  78:	ldr	x0, [sp, #32]
  7c:	cmp	x0, #0x0
  80:	b.ne	8c <grub_loader_register_preboot_hook+0x34>  // b.any
  84:	mov	x0, #0x0                   	// #0
  88:	b	1bc <grub_loader_register_preboot_hook+0x164>
  8c:	mov	x0, #0x28                  	// #40
  90:	bl	0 <grub_malloc>
  94:	str	x0, [sp, #48]
  98:	ldr	x0, [sp, #48]
  9c:	cmp	x0, #0x0
  a0:	b.ne	ac <grub_loader_register_preboot_hook+0x54>  // b.any
  a4:	mov	x0, #0x0                   	// #0
  a8:	b	1bc <grub_loader_register_preboot_hook+0x164>
  ac:	ldr	x0, [sp, #48]
  b0:	ldr	x1, [sp, #40]
  b4:	str	x1, [x0]
  b8:	ldr	x0, [sp, #48]
  bc:	ldr	x1, [sp, #32]
  c0:	str	x1, [x0, #8]
  c4:	ldr	x0, [sp, #48]
  c8:	ldr	w1, [sp, #28]
  cc:	str	w1, [x0, #16]
  d0:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
  d4:	add	x0, x0, #0x0
  d8:	ldr	x0, [x0]
  dc:	ldr	x0, [x0]
  e0:	str	x0, [sp, #56]
  e4:	b	f4 <grub_loader_register_preboot_hook+0x9c>
  e8:	ldr	x0, [sp, #56]
  ec:	ldr	x0, [x0, #24]
  f0:	str	x0, [sp, #56]
  f4:	ldr	x0, [sp, #56]
  f8:	cmp	x0, #0x0
  fc:	b.eq	114 <grub_loader_register_preboot_hook+0xbc>  // b.none
 100:	ldr	x0, [sp, #56]
 104:	ldr	w0, [x0, #16]
 108:	ldr	w1, [sp, #28]
 10c:	cmp	w1, w0
 110:	b.cc	e8 <grub_loader_register_preboot_hook+0x90>  // b.lo, b.ul, b.last
 114:	ldr	x0, [sp, #56]
 118:	cmp	x0, #0x0
 11c:	b.eq	14c <grub_loader_register_preboot_hook+0xf4>  // b.none
 120:	ldr	x0, [sp, #48]
 124:	ldr	x1, [sp, #56]
 128:	str	x1, [x0, #24]
 12c:	ldr	x0, [sp, #56]
 130:	ldr	x1, [x0, #32]
 134:	ldr	x0, [sp, #48]
 138:	str	x1, [x0, #32]
 13c:	ldr	x0, [sp, #56]
 140:	ldr	x1, [sp, #48]
 144:	str	x1, [x0, #32]
 148:	b	180 <grub_loader_register_preboot_hook+0x128>
 14c:	ldr	x0, [sp, #48]
 150:	str	xzr, [x0, #24]
 154:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 158:	add	x0, x0, #0x0
 15c:	ldr	x0, [x0]
 160:	ldr	x1, [x0]
 164:	ldr	x0, [sp, #48]
 168:	str	x1, [x0, #32]
 16c:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 170:	add	x0, x0, #0x0
 174:	ldr	x0, [x0]
 178:	ldr	x1, [sp, #48]
 17c:	str	x1, [x0]
 180:	ldr	x0, [sp, #48]
 184:	ldr	x0, [x0, #32]
 188:	cmp	x0, #0x0
 18c:	b.eq	1a4 <grub_loader_register_preboot_hook+0x14c>  // b.none
 190:	ldr	x0, [sp, #48]
 194:	ldr	x0, [x0, #32]
 198:	ldr	x1, [sp, #48]
 19c:	str	x1, [x0, #24]
 1a0:	b	1b8 <grub_loader_register_preboot_hook+0x160>
 1a4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 1a8:	add	x0, x0, #0x0
 1ac:	ldr	x0, [x0]
 1b0:	ldr	x1, [sp, #48]
 1b4:	str	x1, [x0]
 1b8:	ldr	x0, [sp, #48]
 1bc:	ldp	x29, x30, [sp], #64
 1c0:	ret
 1c4:	nop
	...

00000000000001d8 <grub_loader_unregister_preboot_hook>:
 1d8:	stp	x29, x30, [sp, #-48]!
 1dc:	mov	x29, sp
 1e0:	str	x0, [sp, #24]
 1e4:	ldr	x0, [sp, #24]
 1e8:	str	x0, [sp, #40]
 1ec:	ldr	x0, [sp, #40]
 1f0:	ldr	x0, [x0, #24]
 1f4:	cmp	x0, #0x0
 1f8:	b.eq	214 <grub_loader_unregister_preboot_hook+0x3c>  // b.none
 1fc:	ldr	x0, [sp, #40]
 200:	ldr	x0, [x0, #24]
 204:	ldr	x1, [sp, #40]
 208:	ldr	x1, [x1, #32]
 20c:	str	x1, [x0, #32]
 210:	b	22c <grub_loader_unregister_preboot_hook+0x54>
 214:	ldr	x0, [sp, #40]
 218:	ldr	x1, [x0, #32]
 21c:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 220:	add	x0, x0, #0x0
 224:	ldr	x0, [x0]
 228:	str	x1, [x0]
 22c:	ldr	x0, [sp, #40]
 230:	ldr	x0, [x0, #32]
 234:	cmp	x0, #0x0
 238:	b.eq	254 <grub_loader_unregister_preboot_hook+0x7c>  // b.none
 23c:	ldr	x0, [sp, #40]
 240:	ldr	x0, [x0, #32]
 244:	ldr	x1, [sp, #40]
 248:	ldr	x1, [x1, #24]
 24c:	str	x1, [x0, #24]
 250:	b	26c <grub_loader_unregister_preboot_hook+0x94>
 254:	ldr	x0, [sp, #40]
 258:	ldr	x1, [x0, #24]
 25c:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 260:	add	x0, x0, #0x0
 264:	ldr	x0, [x0]
 268:	str	x1, [x0]
 26c:	ldr	x0, [sp, #40]
 270:	bl	0 <grub_free>
 274:	nop
 278:	ldp	x29, x30, [sp], #48
 27c:	ret
	...

0000000000000290 <grub_loader_set>:
 290:	stp	x29, x30, [sp, #-48]!
 294:	mov	x29, sp
 298:	str	x0, [sp, #40]
 29c:	str	x1, [sp, #32]
 2a0:	str	w2, [sp, #28]
 2a4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 2a8:	add	x0, x0, #0x0
 2ac:	ldr	x0, [x0]
 2b0:	ldr	w0, [x0]
 2b4:	cmp	w0, #0x0
 2b8:	b.eq	2e8 <grub_loader_set+0x58>  // b.none
 2bc:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 2c0:	add	x0, x0, #0x0
 2c4:	ldr	x0, [x0]
 2c8:	ldr	x0, [x0]
 2cc:	cmp	x0, #0x0
 2d0:	b.eq	2e8 <grub_loader_set+0x58>  // b.none
 2d4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 2d8:	add	x0, x0, #0x0
 2dc:	ldr	x0, [x0]
 2e0:	ldr	x0, [x0]
 2e4:	blr	x0
 2e8:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 2ec:	add	x0, x0, #0x0
 2f0:	ldr	x0, [x0]
 2f4:	ldr	x1, [sp, #40]
 2f8:	str	x1, [x0]
 2fc:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 300:	add	x0, x0, #0x0
 304:	ldr	x0, [x0]
 308:	ldr	x1, [sp, #32]
 30c:	str	x1, [x0]
 310:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 314:	add	x0, x0, #0x0
 318:	ldr	x0, [x0]
 31c:	ldr	w1, [sp, #28]
 320:	str	w1, [x0]
 324:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 328:	add	x0, x0, #0x0
 32c:	ldr	x0, [x0]
 330:	mov	w1, #0x1                   	// #1
 334:	str	w1, [x0]
 338:	nop
 33c:	ldp	x29, x30, [sp], #48
 340:	ret
 344:	nop
	...

0000000000000368 <grub_loader_unset>:
 368:	stp	x29, x30, [sp, #-16]!
 36c:	mov	x29, sp
 370:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 374:	add	x0, x0, #0x0
 378:	ldr	x0, [x0]
 37c:	ldr	w0, [x0]
 380:	cmp	w0, #0x0
 384:	b.eq	3b4 <grub_loader_unset+0x4c>  // b.none
 388:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 38c:	add	x0, x0, #0x0
 390:	ldr	x0, [x0]
 394:	ldr	x0, [x0]
 398:	cmp	x0, #0x0
 39c:	b.eq	3b4 <grub_loader_unset+0x4c>  // b.none
 3a0:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 3a4:	add	x0, x0, #0x0
 3a8:	ldr	x0, [x0]
 3ac:	ldr	x0, [x0]
 3b0:	blr	x0
 3b4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 3b8:	add	x0, x0, #0x0
 3bc:	ldr	x0, [x0]
 3c0:	str	xzr, [x0]
 3c4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 3c8:	add	x0, x0, #0x0
 3cc:	ldr	x0, [x0]
 3d0:	str	xzr, [x0]
 3d4:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 3d8:	add	x0, x0, #0x0
 3dc:	ldr	x0, [x0]
 3e0:	str	wzr, [x0]
 3e4:	nop
 3e8:	ldp	x29, x30, [sp], #16
 3ec:	ret
	...

0000000000000408 <grub_loader_boot>:
 408:	stp	x29, x30, [sp, #-32]!
 40c:	mov	x29, sp
 410:	str	wzr, [sp, #28]
 414:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 418:	add	x0, x0, #0x0
 41c:	ldr	x0, [x0]
 420:	ldr	w0, [x0]
 424:	cmp	w0, #0x0
 428:	b.ne	444 <grub_loader_boot+0x3c>  // b.any
 42c:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 430:	add	x0, x0, #0x0
 434:	ldr	x1, [x0]
 438:	mov	w0, #0x16                  	// #22
 43c:	bl	0 <grub_error>
 440:	b	568 <grub_loader_boot+0x160>
 444:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 448:	add	x0, x0, #0x0
 44c:	ldr	x0, [x0]
 450:	ldr	w0, [x0]
 454:	bl	0 <grub_machine_fini>
 458:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 45c:	add	x0, x0, #0x0
 460:	ldr	x0, [x0]
 464:	ldr	x0, [x0]
 468:	str	x0, [sp, #16]
 46c:	b	4e4 <grub_loader_boot+0xdc>
 470:	ldr	x0, [sp, #16]
 474:	ldr	x1, [x0]
 478:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 47c:	add	x0, x0, #0x0
 480:	ldr	x0, [x0]
 484:	ldr	w0, [x0]
 488:	blr	x1
 48c:	str	w0, [sp, #28]
 490:	ldr	w0, [sp, #28]
 494:	cmp	w0, #0x0
 498:	b.eq	4d8 <grub_loader_boot+0xd0>  // b.none
 49c:	ldr	x0, [sp, #16]
 4a0:	ldr	x0, [x0, #32]
 4a4:	str	x0, [sp, #16]
 4a8:	b	4c4 <grub_loader_boot+0xbc>
 4ac:	ldr	x0, [sp, #16]
 4b0:	ldr	x0, [x0, #8]
 4b4:	blr	x0
 4b8:	ldr	x0, [sp, #16]
 4bc:	ldr	x0, [x0, #32]
 4c0:	str	x0, [sp, #16]
 4c4:	ldr	x0, [sp, #16]
 4c8:	cmp	x0, #0x0
 4cc:	b.ne	4ac <grub_loader_boot+0xa4>  // b.any
 4d0:	ldr	w0, [sp, #28]
 4d4:	b	568 <grub_loader_boot+0x160>
 4d8:	ldr	x0, [sp, #16]
 4dc:	ldr	x0, [x0, #24]
 4e0:	str	x0, [sp, #16]
 4e4:	ldr	x0, [sp, #16]
 4e8:	cmp	x0, #0x0
 4ec:	b.ne	470 <grub_loader_boot+0x68>  // b.any
 4f0:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 4f4:	add	x0, x0, #0x0
 4f8:	ldr	x0, [x0]
 4fc:	ldr	x0, [x0]
 500:	blr	x0
 504:	str	w0, [sp, #28]
 508:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 50c:	add	x0, x0, #0x0
 510:	ldr	x0, [x0]
 514:	ldr	x0, [x0]
 518:	str	x0, [sp, #16]
 51c:	b	558 <grub_loader_boot+0x150>
 520:	ldr	w0, [sp, #28]
 524:	cmp	w0, #0x0
 528:	b.ne	540 <grub_loader_boot+0x138>  // b.any
 52c:	ldr	x0, [sp, #16]
 530:	ldr	x0, [x0, #8]
 534:	blr	x0
 538:	str	w0, [sp, #28]
 53c:	b	54c <grub_loader_boot+0x144>
 540:	ldr	x0, [sp, #16]
 544:	ldr	x0, [x0, #8]
 548:	blr	x0
 54c:	ldr	x0, [sp, #16]
 550:	ldr	x0, [x0, #32]
 554:	str	x0, [sp, #16]
 558:	ldr	x0, [sp, #16]
 55c:	cmp	x0, #0x0
 560:	b.ne	520 <grub_loader_boot+0x118>  // b.any
 564:	ldr	w0, [sp, #28]
 568:	ldp	x29, x30, [sp], #32
 56c:	ret
	...
 5a0:	stp	x29, x30, [sp, #-48]!
 5a4:	mov	x29, sp
 5a8:	str	x0, [sp, #40]
 5ac:	str	w1, [sp, #36]
 5b0:	str	x2, [sp, #24]
 5b4:	bl	408 <grub_loader_boot>
 5b8:	ldp	x29, x30, [sp], #48
 5bc:	ret

00000000000005c0 <grub_mod_init>:
 5c0:	stp	x29, x30, [sp, #-32]!
 5c4:	mov	x29, sp
 5c8:	str	x0, [sp, #24]
 5cc:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 5d0:	add	x0, x0, #0x0
 5d4:	ldr	x3, [x0]
 5d8:	mov	x2, #0x0                   	// #0
 5dc:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 5e0:	add	x0, x0, #0x0
 5e4:	ldr	x1, [x0]
 5e8:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 5ec:	add	x0, x0, #0x0
 5f0:	ldr	x0, [x0]
 5f4:	bl	0 <grub_loader_is_loaded-0x38>
 5f8:	mov	x1, x0
 5fc:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 600:	add	x0, x0, #0x0
 604:	ldr	x0, [x0]
 608:	str	x1, [x0]
 60c:	nop
 610:	ldp	x29, x30, [sp], #32
 614:	ret
	...

0000000000000638 <grub_mod_fini>:
 638:	stp	x29, x30, [sp, #-16]!
 63c:	mov	x29, sp
 640:	adrp	x0, 0 <grub_loader_is_loaded-0x38>
 644:	add	x0, x0, #0x0
 648:	ldr	x0, [x0]
 64c:	ldr	x0, [x0]
 650:	bl	0 <grub_unregister_command>
 654:	nop
 658:	ldp	x29, x30, [sp], #16
 65c:	ret
	...
