
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//intdiv.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000858 <.init>:
 858:	stp	x29, x30, [sp, #-16]!
 85c:	mov	x29, sp
 860:	bl	970 <fprintf@plt+0x10>
 864:	ldp	x29, x30, [sp], #16
 868:	ret

Disassembly of section .plt:

0000000000000870 <memcpy@plt-0x20>:
 870:	stp	x16, x30, [sp, #-16]!
 874:	adrp	x16, 11000 <dl_load@@Base+0x105bc>
 878:	ldr	x17, [x16, #4088]
 87c:	add	x16, x16, #0xff8
 880:	br	x17
 884:	nop
 888:	nop
 88c:	nop

0000000000000890 <memcpy@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16]
 898:	add	x16, x16, #0x0
 89c:	br	x17

00000000000008a0 <exit@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #8]
 8a8:	add	x16, x16, #0x8
 8ac:	br	x17

00000000000008b0 <__gmpz_tdiv_qr@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #16]
 8b8:	add	x16, x16, #0x10
 8bc:	br	x17

00000000000008c0 <__cxa_finalize@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #24]
 8c8:	add	x16, x16, #0x18
 8cc:	br	x17

00000000000008d0 <mpfr_get_z@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #32]
 8d8:	add	x16, x16, #0x20
 8dc:	br	x17

00000000000008e0 <__gmpz_set_d@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #40]
 8e8:	add	x16, x16, #0x28
 8ec:	br	x17

00000000000008f0 <__gmon_start__@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #48]
 8f8:	add	x16, x16, #0x30
 8fc:	br	x17

0000000000000900 <__gmpz_clear@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #56]
 908:	add	x16, x16, #0x38
 90c:	br	x17

0000000000000910 <fwrite@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #64]
 918:	add	x16, x16, #0x40
 91c:	br	x17

0000000000000920 <dcgettext@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #72]
 928:	add	x16, x16, #0x48
 92c:	br	x17

0000000000000930 <fmod@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #80]
 938:	add	x16, x16, #0x50
 93c:	br	x17

0000000000000940 <__gmpz_init@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #88]
 948:	add	x16, x16, #0x58
 94c:	br	x17

0000000000000950 <mpfr_number_p@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #96]
 958:	add	x16, x16, #0x60
 95c:	br	x17

0000000000000960 <fprintf@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #104]
 968:	add	x16, x16, #0x68
 96c:	br	x17

Disassembly of section .text:

0000000000000970 <dl_load@@Base-0xd4>:
     970:	adrp	x0, 11000 <dl_load@@Base+0x105bc>
     974:	ldr	x0, [x0, #4056]
     978:	cbz	x0, 980 <fprintf@plt+0x20>
     97c:	b	8f0 <__gmon_start__@plt>
     980:	ret
     984:	nop
     988:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     98c:	add	x0, x0, #0xa8
     990:	adrp	x1, 12000 <dl_load@@Base+0x115bc>
     994:	add	x1, x1, #0xa8
     998:	cmp	x1, x0
     99c:	b.eq	9b4 <fprintf@plt+0x54>  // b.none
     9a0:	adrp	x1, 11000 <dl_load@@Base+0x105bc>
     9a4:	ldr	x1, [x1, #4032]
     9a8:	cbz	x1, 9b4 <fprintf@plt+0x54>
     9ac:	mov	x16, x1
     9b0:	br	x16
     9b4:	ret
     9b8:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     9bc:	add	x0, x0, #0xa8
     9c0:	adrp	x1, 12000 <dl_load@@Base+0x115bc>
     9c4:	add	x1, x1, #0xa8
     9c8:	sub	x1, x1, x0
     9cc:	lsr	x2, x1, #63
     9d0:	add	x1, x2, x1, asr #3
     9d4:	cmp	xzr, x1, asr #1
     9d8:	asr	x1, x1, #1
     9dc:	b.eq	9f4 <fprintf@plt+0x94>  // b.none
     9e0:	adrp	x2, 11000 <dl_load@@Base+0x105bc>
     9e4:	ldr	x2, [x2, #4064]
     9e8:	cbz	x2, 9f4 <fprintf@plt+0x94>
     9ec:	mov	x16, x2
     9f0:	br	x16
     9f4:	ret
     9f8:	stp	x29, x30, [sp, #-32]!
     9fc:	mov	x29, sp
     a00:	str	x19, [sp, #16]
     a04:	adrp	x19, 12000 <dl_load@@Base+0x115bc>
     a08:	ldrb	w0, [x19, #168]
     a0c:	cbnz	w0, a34 <fprintf@plt+0xd4>
     a10:	adrp	x0, 11000 <dl_load@@Base+0x105bc>
     a14:	ldr	x0, [x0, #4040]
     a18:	cbz	x0, a28 <fprintf@plt+0xc8>
     a1c:	adrp	x0, 12000 <dl_load@@Base+0x115bc>
     a20:	ldr	x0, [x0, #112]
     a24:	bl	8c0 <__cxa_finalize@plt>
     a28:	bl	988 <fprintf@plt+0x28>
     a2c:	mov	w0, #0x1                   	// #1
     a30:	strb	w0, [x19, #168]
     a34:	ldr	x19, [sp, #16]
     a38:	ldp	x29, x30, [sp], #32
     a3c:	ret
     a40:	b	9b8 <fprintf@plt+0x58>

0000000000000a44 <dl_load@@Base>:
     a44:	stp	x29, x30, [sp, #-48]!
     a48:	str	x21, [sp, #16]
     a4c:	stp	x20, x19, [sp, #32]
     a50:	adrp	x20, 12000 <dl_load@@Base+0x115bc>
     a54:	adrp	x21, 12000 <dl_load@@Base+0x115bc>
     a58:	str	x0, [x20, #176]
     a5c:	str	x1, [x21, #184]
     a60:	ldr	w8, [x0]
     a64:	mov	x29, sp
     a68:	cmp	w8, #0x2
     a6c:	b.ne	afc <dl_load@@Base+0xb8>  // b.any
     a70:	ldr	w8, [x0, #4]
     a74:	tbnz	w8, #31, afc <dl_load@@Base+0xb8>
     a78:	adrp	x19, 12000 <dl_load@@Base+0x115bc>
     a7c:	ldr	x8, [x19, #120]
     a80:	cbz	x8, aa8 <dl_load@@Base+0x64>
     a84:	ldr	x9, [x0, #48]
     a88:	adrp	x8, 1000 <dl_load@@Base+0x5bc>
     a8c:	add	x8, x8, #0x1cc
     a90:	adrp	x2, 12000 <dl_load@@Base+0x115bc>
     a94:	add	x2, x2, #0x78
     a98:	mov	x0, x1
     a9c:	mov	x1, x8
     aa0:	blr	x9
     aa4:	cbz	w0, ab0 <dl_load@@Base+0x6c>
     aa8:	mov	w19, #0x1                   	// #1
     aac:	b	ad0 <dl_load@@Base+0x8c>
     ab0:	ldr	x8, [x20, #176]
     ab4:	ldr	x0, [x21, #184]
     ab8:	ldr	x2, [x19, #120]
     abc:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     ac0:	ldr	x8, [x8, #104]
     ac4:	add	x1, x1, #0x200
     ac8:	blr	x8
     acc:	mov	w19, wzr
     ad0:	ldr	x8, [x20, #176]
     ad4:	ldr	x0, [x21, #184]
     ad8:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     adc:	add	x1, x1, #0x35d
     ae0:	ldr	x8, [x8, #88]
     ae4:	blr	x8
     ae8:	mov	w0, w19
     aec:	ldp	x20, x19, [sp, #32]
     af0:	ldr	x21, [sp, #16]
     af4:	ldp	x29, x30, [sp], #48
     af8:	ret
     afc:	adrp	x19, 11000 <dl_load@@Base+0x105bc>
     b00:	ldr	x19, [x19, #4048]
     b04:	adrp	x0, 1000 <dl_load@@Base+0x5bc>
     b08:	add	x0, x0, #0x1a8
     b0c:	mov	w1, #0x24                  	// #36
     b10:	ldr	x3, [x19]
     b14:	mov	w2, #0x1                   	// #1
     b18:	bl	910 <fwrite@plt>
     b1c:	ldr	x8, [x20, #176]
     b20:	ldr	x0, [x19]
     b24:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     b28:	add	x1, x1, #0x1cd
     b2c:	ldp	w4, w5, [x8]
     b30:	mov	w2, #0x2                   	// #2
     b34:	mov	w3, wzr
     b38:	bl	960 <fprintf@plt>
     b3c:	mov	w0, #0x1                   	// #1
     b40:	bl	8a0 <exit@plt>
     b44:	sub	sp, sp, #0xd0
     b48:	stp	x24, x23, [sp, #160]
     b4c:	adrp	x24, 12000 <dl_load@@Base+0x115bc>
     b50:	ldr	x8, [x24, #176]
     b54:	stp	d9, d8, [sp, #128]
     b58:	stp	x29, x30, [sp, #144]
     b5c:	stp	x22, x21, [sp, #176]
     b60:	stp	x20, x19, [sp, #192]
     b64:	adrp	x23, 12000 <dl_load@@Base+0x115bc>
     b68:	ldr	x8, [x8, #152]
     b6c:	ldr	x0, [x23, #184]
     b70:	add	x29, sp, #0x80
     b74:	mov	x19, x1
     b78:	sub	x3, x29, #0x20
     b7c:	mov	w2, #0x1                   	// #1
     b80:	mov	x1, xzr
     b84:	mov	w21, #0x1                   	// #1
     b88:	blr	x8
     b8c:	ldr	x8, [x24, #176]
     b90:	cbz	w0, cc8 <dl_load@@Base+0x284>
     b94:	ldr	x8, [x8, #152]
     b98:	ldr	x0, [x23, #184]
     b9c:	add	x3, sp, #0x40
     ba0:	mov	w1, #0x1                   	// #1
     ba4:	mov	w2, #0x1                   	// #1
     ba8:	mov	w21, #0x1                   	// #1
     bac:	blr	x8
     bb0:	ldr	x8, [x24, #176]
     bb4:	cbz	w0, cf8 <dl_load@@Base+0x2b4>
     bb8:	ldr	x8, [x8, #152]
     bbc:	ldr	x0, [x23, #184]
     bc0:	add	x3, sp, #0x20
     bc4:	mov	w1, #0x2                   	// #2
     bc8:	mov	w2, #0x5                   	// #5
     bcc:	blr	x8
     bd0:	cbz	w0, d30 <dl_load@@Base+0x2ec>
     bd4:	ldr	x8, [x24, #176]
     bd8:	ldr	x20, [sp, #40]
     bdc:	ldr	x0, [x23, #184]
     be0:	ldr	x8, [x8, #256]
     be4:	mov	x1, x20
     be8:	blr	x8
     bec:	ldur	w8, [x29, #-16]
     bf0:	cbnz	w8, bfc <dl_load@@Base+0x1b8>
     bf4:	ldr	w8, [sp, #80]
     bf8:	cbz	w8, de8 <dl_load@@Base+0x3a4>
     bfc:	sub	x0, x29, #0x20
     c00:	add	x1, sp, #0x10
     c04:	bl	fd4 <dl_load@@Base+0x590>
     c08:	cbz	x0, d50 <dl_load@@Base+0x30c>
     c0c:	mov	x21, x0
     c10:	add	x0, sp, #0x40
     c14:	mov	x1, sp
     c18:	bl	fd4 <dl_load@@Base+0x590>
     c1c:	cbz	x0, dac <dl_load@@Base+0x368>
     c20:	ldr	w9, [x0, #4]
     c24:	ldr	x8, [x24, #176]
     c28:	mov	x22, x0
     c2c:	cbz	w9, e2c <dl_load@@Base+0x3e8>
     c30:	ldr	x8, [x8, #320]
     c34:	ldr	x0, [x23, #184]
     c38:	blr	x8
     c3c:	ldr	x8, [x24, #176]
     c40:	ldr	x9, [x8, #320]
     c44:	ldr	x8, [x23, #184]
     c48:	mov	x23, x0
     c4c:	mov	x0, x8
     c50:	blr	x9
     c54:	mov	x24, x0
     c58:	mov	x0, x23
     c5c:	mov	x1, x24
     c60:	mov	x2, x21
     c64:	mov	x3, x22
     c68:	bl	8b0 <__gmpz_tdiv_qr@plt>
     c6c:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     c70:	add	x1, x1, #0x2ba
     c74:	mov	w2, #0x8                   	// #8
     c78:	mov	x0, x20
     c7c:	mov	x3, x23
     c80:	bl	10ac <dl_load@@Base+0x668>
     c84:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     c88:	add	x1, x1, #0x2c3
     c8c:	mov	w2, #0x9                   	// #9
     c90:	mov	x0, x20
     c94:	mov	x3, x24
     c98:	bl	10ac <dl_load@@Base+0x668>
     c9c:	add	x8, sp, #0x10
     ca0:	cmp	x21, x8
     ca4:	b.ne	cb0 <dl_load@@Base+0x26c>  // b.any
     ca8:	add	x0, sp, #0x10
     cac:	bl	900 <__gmpz_clear@plt>
     cb0:	mov	x8, sp
     cb4:	cmp	x22, x8
     cb8:	b.ne	ed8 <dl_load@@Base+0x494>  // b.any
     cbc:	mov	x0, sp
     cc0:	bl	900 <__gmpz_clear@plt>
     cc4:	b	ed8 <dl_load@@Base+0x494>
     cc8:	ldr	x22, [x8, #104]
     ccc:	ldr	x20, [x23, #184]
     cd0:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     cd4:	add	x1, x1, #0x220
     cd8:	mov	w2, #0x5                   	// #5
     cdc:	mov	x0, xzr
     ce0:	bl	920 <dcgettext@plt>
     ce4:	mov	x1, x0
     ce8:	mov	x0, x20
     cec:	blr	x22
     cf0:	str	w21, [x19]
     cf4:	b	d24 <dl_load@@Base+0x2e0>
     cf8:	ldr	x22, [x8, #104]
     cfc:	ldr	x20, [x23, #184]
     d00:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     d04:	add	x1, x1, #0x247
     d08:	mov	w2, #0x5                   	// #5
     d0c:	mov	x0, xzr
     d10:	bl	920 <dcgettext@plt>
     d14:	mov	x1, x0
     d18:	mov	x0, x20
     d1c:	blr	x22
     d20:	str	w21, [x19]
     d24:	mov	x8, #0xbff0000000000000    	// #-4616189618054758400
     d28:	str	x8, [x19, #8]
     d2c:	b	d88 <dl_load@@Base+0x344>
     d30:	ldr	x8, [x24, #176]
     d34:	ldr	x20, [x23, #184]
     d38:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     d3c:	add	x1, x1, #0x26f
     d40:	ldr	x21, [x8, #104]
     d44:	mov	w2, #0x5                   	// #5
     d48:	mov	x0, xzr
     d4c:	b	d68 <dl_load@@Base+0x324>
     d50:	ldr	x8, [x24, #176]
     d54:	ldr	x20, [x23, #184]
     d58:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     d5c:	add	x1, x1, #0x2cd
     d60:	ldr	x21, [x8, #104]
     d64:	mov	w2, #0x5                   	// #5
     d68:	bl	920 <dcgettext@plt>
     d6c:	mov	x1, x0
     d70:	mov	x0, x20
     d74:	blr	x21
     d78:	mov	w8, #0x1                   	// #1
     d7c:	mov	x9, #0xbff0000000000000    	// #-4616189618054758400
     d80:	str	w8, [x19]
     d84:	str	x9, [x19, #8]
     d88:	str	wzr, [x19, #16]
     d8c:	mov	x0, x19
     d90:	ldp	x20, x19, [sp, #192]
     d94:	ldp	x22, x21, [sp, #176]
     d98:	ldp	x24, x23, [sp, #160]
     d9c:	ldp	x29, x30, [sp, #144]
     da0:	ldp	d9, d8, [sp, #128]
     da4:	add	sp, sp, #0xd0
     da8:	ret
     dac:	ldr	x8, [x24, #176]
     db0:	ldr	x20, [x23, #184]
     db4:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     db8:	add	x1, x1, #0x2ed
     dbc:	ldr	x22, [x8, #104]
     dc0:	mov	w2, #0x5                   	// #5
     dc4:	bl	920 <dcgettext@plt>
     dc8:	mov	x1, x0
     dcc:	mov	x0, x20
     dd0:	blr	x22
     dd4:	add	x8, sp, #0x10
     dd8:	cmp	x21, x8
     ddc:	b.ne	d78 <dl_load@@Base+0x334>  // b.any
     de0:	add	x0, sp, #0x10
     de4:	b	e78 <dl_load@@Base+0x434>
     de8:	ldur	d0, [x29, #-24]
     dec:	ldr	d1, [sp, #72]
     df0:	frintm	d2, d0
     df4:	frintp	d3, d0
     df8:	fcmp	d0, #0.0
     dfc:	frintm	d4, d1
     e00:	frintp	d5, d1
     e04:	fcsel	d0, d3, d2, lt  // lt = tstop
     e08:	fcmp	d1, #0.0
     e0c:	fcsel	d1, d5, d4, lt  // lt = tstop
     e10:	fcmp	d1, #0.0
     e14:	b.ne	e80 <dl_load@@Base+0x43c>  // b.any
     e18:	ldr	x8, [x24, #176]
     e1c:	ldr	x20, [x23, #184]
     e20:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     e24:	add	x1, x1, #0x297
     e28:	b	d40 <dl_load@@Base+0x2fc>
     e2c:	ldr	x24, [x8, #104]
     e30:	ldr	x20, [x23, #184]
     e34:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     e38:	add	x1, x1, #0x297
     e3c:	mov	w2, #0x5                   	// #5
     e40:	mov	x0, xzr
     e44:	bl	920 <dcgettext@plt>
     e48:	mov	x1, x0
     e4c:	mov	x0, x20
     e50:	blr	x24
     e54:	add	x8, sp, #0x10
     e58:	cmp	x21, x8
     e5c:	b.ne	e68 <dl_load@@Base+0x424>  // b.any
     e60:	add	x0, sp, #0x10
     e64:	bl	900 <__gmpz_clear@plt>
     e68:	mov	x8, sp
     e6c:	cmp	x22, x8
     e70:	b.ne	d78 <dl_load@@Base+0x334>  // b.any
     e74:	mov	x0, sp
     e78:	bl	900 <__gmpz_clear@plt>
     e7c:	b	d78 <dl_load@@Base+0x334>
     e80:	fdiv	d2, d0, d1
     e84:	frintm	d3, d2
     e88:	frintp	d4, d2
     e8c:	fcmp	d2, #0.0
     e90:	fcsel	d8, d4, d3, lt  // lt = tstop
     e94:	bl	930 <fmod@plt>
     e98:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     e9c:	frintm	d1, d0
     ea0:	frintp	d2, d0
     ea4:	fcmp	d0, #0.0
     ea8:	add	x1, x1, #0x2ba
     eac:	mov	w2, #0x8                   	// #8
     eb0:	mov	x0, x20
     eb4:	mov	v0.16b, v8.16b
     eb8:	fcsel	d9, d2, d1, lt  // lt = tstop
     ebc:	bl	ee8 <dl_load@@Base+0x4a4>
     ec0:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     ec4:	add	x1, x1, #0x2c3
     ec8:	mov	w2, #0x9                   	// #9
     ecc:	mov	x0, x20
     ed0:	mov	v0.16b, v9.16b
     ed4:	bl	ee8 <dl_load@@Base+0x4a4>
     ed8:	mov	w8, #0x1                   	// #1
     edc:	str	xzr, [x19, #8]
     ee0:	str	w8, [x19]
     ee4:	b	d88 <dl_load@@Base+0x344>
     ee8:	sub	sp, sp, #0xa0
     eec:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
     ef0:	stp	x26, x25, [sp, #96]
     ef4:	ldr	x26, [x8, #176]
     ef8:	str	d8, [sp, #64]
     efc:	stp	x29, x30, [sp, #80]
     f00:	stp	x24, x23, [sp, #112]
     f04:	stp	x22, x21, [sp, #128]
     f08:	stp	x20, x19, [sp, #144]
     f0c:	mov	v8.16b, v0.16b
     f10:	movi	v0.2d, #0x0
     f14:	mov	w8, #0x2                   	// #2
     f18:	ldr	x25, [x26, #232]
     f1c:	stp	q0, q0, [sp, #32]
     f20:	str	w8, [sp, #32]
     f24:	str	x2, [sp, #48]
     f28:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
     f2c:	ldr	x8, [x26, #280]
     f30:	ldr	x20, [x9, #184]
     f34:	add	x24, x2, #0x1
     f38:	mov	x19, x0
     f3c:	mov	x0, x24
     f40:	add	x29, sp, #0x40
     f44:	mov	x21, x2
     f48:	mov	x22, x1
     f4c:	blr	x8
     f50:	mov	x23, x0
     f54:	cbnz	x0, f78 <dl_load@@Base+0x534>
     f58:	ldr	x8, [x26, #96]
     f5c:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
     f60:	adrp	x2, 1000 <dl_load@@Base+0x5bc>
     f64:	add	x1, x1, #0x30f
     f68:	add	x2, x2, #0x32d
     f6c:	mov	x0, x20
     f70:	mov	x3, x24
     f74:	blr	x8
     f78:	mov	x0, x23
     f7c:	mov	x1, x22
     f80:	mov	x2, x21
     f84:	bl	890 <memcpy@plt>
     f88:	mov	w8, #0x1                   	// #1
     f8c:	add	x2, sp, #0x20
     f90:	mov	x3, sp
     f94:	mov	x0, x20
     f98:	mov	x1, x19
     f9c:	strb	wzr, [x23, x21]
     fa0:	str	x23, [sp, #40]
     fa4:	str	d8, [sp, #8]
     fa8:	str	w8, [sp]
     fac:	str	wzr, [sp, #16]
     fb0:	blr	x25
     fb4:	ldp	x20, x19, [sp, #144]
     fb8:	ldp	x22, x21, [sp, #128]
     fbc:	ldp	x24, x23, [sp, #112]
     fc0:	ldp	x26, x25, [sp, #96]
     fc4:	ldp	x29, x30, [sp, #80]
     fc8:	ldr	d8, [sp, #64]
     fcc:	add	sp, sp, #0xa0
     fd0:	ret
     fd4:	stp	x29, x30, [sp, #-48]!
     fd8:	stp	x20, x19, [sp, #32]
     fdc:	ldr	w8, [x0, #16]
     fe0:	mov	x20, x0
     fe4:	mov	x19, x1
     fe8:	str	x21, [sp, #16]
     fec:	mov	x29, sp
     ff0:	cbz	w8, 100c <dl_load@@Base+0x5c8>
     ff4:	cmp	w8, #0x1
     ff8:	b.eq	1034 <dl_load@@Base+0x5f0>  // b.none
     ffc:	cmp	w8, #0x2
    1000:	b.ne	105c <dl_load@@Base+0x618>  // b.any
    1004:	ldr	x19, [x20, #24]
    1008:	b	1098 <dl_load@@Base+0x654>
    100c:	mov	x0, x19
    1010:	bl	940 <__gmpz_init@plt>
    1014:	ldr	d0, [x20, #8]
    1018:	mov	x0, x19
    101c:	frintm	d1, d0
    1020:	frintp	d2, d0
    1024:	fcmp	d0, #0.0
    1028:	fcsel	d0, d2, d1, lt  // lt = tstop
    102c:	bl	8e0 <__gmpz_set_d@plt>
    1030:	b	1098 <dl_load@@Base+0x654>
    1034:	ldr	x0, [x20, #24]
    1038:	bl	950 <mpfr_number_p@plt>
    103c:	cbz	w0, 1094 <dl_load@@Base+0x650>
    1040:	mov	x0, x19
    1044:	bl	940 <__gmpz_init@plt>
    1048:	ldr	x1, [x20, #24]
    104c:	mov	w2, #0x1                   	// #1
    1050:	mov	x0, x19
    1054:	bl	8d0 <mpfr_get_z@plt>
    1058:	b	1098 <dl_load@@Base+0x654>
    105c:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
    1060:	ldr	x8, [x8, #176]
    1064:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
    1068:	ldr	x19, [x9, #184]
    106c:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
    1070:	ldr	x21, [x8, #96]
    1074:	add	x1, x1, #0x33b
    1078:	mov	w2, #0x5                   	// #5
    107c:	mov	x0, xzr
    1080:	bl	920 <dcgettext@plt>
    1084:	ldr	w2, [x20, #16]
    1088:	mov	x1, x0
    108c:	mov	x0, x19
    1090:	blr	x21
    1094:	mov	x19, xzr
    1098:	mov	x0, x19
    109c:	ldp	x20, x19, [sp, #32]
    10a0:	ldr	x21, [sp, #16]
    10a4:	ldp	x29, x30, [sp], #48
    10a8:	ret
    10ac:	sub	sp, sp, #0xa0
    10b0:	adrp	x8, 12000 <dl_load@@Base+0x115bc>
    10b4:	stp	x28, x27, [sp, #80]
    10b8:	ldr	x28, [x8, #176]
    10bc:	stp	x29, x30, [sp, #64]
    10c0:	stp	x26, x25, [sp, #96]
    10c4:	stp	x24, x23, [sp, #112]
    10c8:	stp	x22, x21, [sp, #128]
    10cc:	stp	x20, x19, [sp, #144]
    10d0:	movi	v0.2d, #0x0
    10d4:	mov	w27, #0x2                   	// #2
    10d8:	ldr	x26, [x28, #232]
    10dc:	stp	q0, q0, [sp, #32]
    10e0:	str	w27, [sp, #32]
    10e4:	str	x2, [sp, #48]
    10e8:	adrp	x9, 12000 <dl_load@@Base+0x115bc>
    10ec:	ldr	x8, [x28, #280]
    10f0:	ldr	x21, [x9, #184]
    10f4:	add	x25, x2, #0x1
    10f8:	mov	x19, x0
    10fc:	mov	x0, x25
    1100:	add	x29, sp, #0x40
    1104:	mov	x20, x3
    1108:	mov	x22, x2
    110c:	mov	x23, x1
    1110:	blr	x8
    1114:	mov	x24, x0
    1118:	cbnz	x0, 113c <dl_load@@Base+0x6f8>
    111c:	ldr	x8, [x28, #96]
    1120:	adrp	x1, 1000 <dl_load@@Base+0x5bc>
    1124:	adrp	x2, 1000 <dl_load@@Base+0x5bc>
    1128:	add	x1, x1, #0x30f
    112c:	add	x2, x2, #0x32d
    1130:	mov	x0, x21
    1134:	mov	x3, x25
    1138:	blr	x8
    113c:	mov	x0, x24
    1140:	mov	x1, x23
    1144:	mov	x2, x22
    1148:	bl	890 <memcpy@plt>
    114c:	mov	w8, #0x1                   	// #1
    1150:	add	x2, sp, #0x20
    1154:	mov	x3, sp
    1158:	mov	x0, x21
    115c:	mov	x1, x19
    1160:	strb	wzr, [x24, x22]
    1164:	str	x24, [sp, #40]
    1168:	str	w8, [sp]
    116c:	str	w27, [sp, #16]
    1170:	str	x20, [sp, #24]
    1174:	blr	x26
    1178:	ldp	x20, x19, [sp, #144]
    117c:	ldp	x22, x21, [sp, #128]
    1180:	ldp	x24, x23, [sp, #112]
    1184:	ldp	x26, x25, [sp, #96]
    1188:	ldp	x28, x27, [sp, #80]
    118c:	ldp	x29, x30, [sp, #64]
    1190:	add	sp, sp, #0xa0
    1194:	ret

Disassembly of section .fini:

0000000000001198 <.fini>:
    1198:	stp	x29, x30, [sp, #-16]!
    119c:	mov	x29, sp
    11a0:	ldp	x29, x30, [sp], #16
    11a4:	ret
