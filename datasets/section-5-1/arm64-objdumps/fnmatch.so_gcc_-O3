
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000720 <.init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	7f0 <fprintf@plt+0x10>
 72c:	ldp	x29, x30, [sp], #16
 730:	ret

Disassembly of section .plt:

0000000000000740 <memcpy@plt-0x20>:
 740:	stp	x16, x30, [sp, #-16]!
 744:	adrp	x16, 11000 <dl_load@@Base+0x10358>
 748:	ldr	x17, [x16, #4088]
 74c:	add	x16, x16, #0xff8
 750:	br	x17
 754:	nop
 758:	nop
 75c:	nop

0000000000000760 <memcpy@plt>:
 760:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 764:	ldr	x17, [x16]
 768:	add	x16, x16, #0x0
 76c:	br	x17

0000000000000770 <strlen@plt>:
 770:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 774:	ldr	x17, [x16, #8]
 778:	add	x16, x16, #0x8
 77c:	br	x17

0000000000000780 <exit@plt>:
 780:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 784:	ldr	x17, [x16, #16]
 788:	add	x16, x16, #0x10
 78c:	br	x17

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16, #24]
 798:	add	x16, x16, #0x18
 79c:	br	x17

00000000000007a0 <__gmon_start__@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #32]
 7a8:	add	x16, x16, #0x20
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #40]
 7b8:	add	x16, x16, #0x28
 7bc:	br	x17

00000000000007c0 <fnmatch@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #48]
 7c8:	add	x16, x16, #0x30
 7cc:	br	x17

00000000000007d0 <dcgettext@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #56]
 7d8:	add	x16, x16, #0x38
 7dc:	br	x17

00000000000007e0 <fprintf@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #64]
 7e8:	add	x16, x16, #0x40
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <dl_load@@Base-0x4b8>:
 7f0:	adrp	x0, 11000 <dl_load@@Base+0x10358>
 7f4:	ldr	x0, [x0, #4056]
 7f8:	cbz	x0, 800 <fprintf@plt+0x20>
 7fc:	b	7a0 <__gmon_start__@plt>
 800:	ret
 804:	nop
 808:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 80c:	add	x0, x0, #0x80
 810:	adrp	x1, 12000 <dl_load@@Base+0x11358>
 814:	add	x1, x1, #0x80
 818:	cmp	x1, x0
 81c:	b.eq	834 <fprintf@plt+0x54>  // b.none
 820:	adrp	x1, 11000 <dl_load@@Base+0x10358>
 824:	ldr	x1, [x1, #4032]
 828:	cbz	x1, 834 <fprintf@plt+0x54>
 82c:	mov	x16, x1
 830:	br	x16
 834:	ret
 838:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 83c:	add	x0, x0, #0x80
 840:	adrp	x1, 12000 <dl_load@@Base+0x11358>
 844:	add	x1, x1, #0x80
 848:	sub	x1, x1, x0
 84c:	lsr	x2, x1, #63
 850:	add	x1, x2, x1, asr #3
 854:	cmp	xzr, x1, asr #1
 858:	asr	x1, x1, #1
 85c:	b.eq	874 <fprintf@plt+0x94>  // b.none
 860:	adrp	x2, 11000 <dl_load@@Base+0x10358>
 864:	ldr	x2, [x2, #4064]
 868:	cbz	x2, 874 <fprintf@plt+0x94>
 86c:	mov	x16, x2
 870:	br	x16
 874:	ret
 878:	stp	x29, x30, [sp, #-32]!
 87c:	mov	x29, sp
 880:	str	x19, [sp, #16]
 884:	adrp	x19, 12000 <dl_load@@Base+0x11358>
 888:	ldrb	w0, [x19, #128]
 88c:	cbnz	w0, 8b4 <fprintf@plt+0xd4>
 890:	adrp	x0, 11000 <dl_load@@Base+0x10358>
 894:	ldr	x0, [x0, #4040]
 898:	cbz	x0, 8a8 <fprintf@plt+0xc8>
 89c:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 8a0:	ldr	x0, [x0, #72]
 8a4:	bl	790 <__cxa_finalize@plt>
 8a8:	bl	808 <fprintf@plt+0x28>
 8ac:	mov	w0, #0x1                   	// #1
 8b0:	strb	w0, [x19, #128]
 8b4:	ldr	x19, [sp, #16]
 8b8:	ldp	x29, x30, [sp], #32
 8bc:	ret
 8c0:	b	838 <fprintf@plt+0x58>
 8c4:	nop
 8c8:	stp	x29, x30, [sp, #-144]!
 8cc:	fmov	d0, #-1.000000000000000000e+00
 8d0:	mov	w2, #0x2                   	// #2
 8d4:	mov	x29, sp
 8d8:	stp	x19, x20, [sp, #16]
 8dc:	adrp	x20, 12000 <dl_load@@Base+0x11358>
 8e0:	mov	x19, x1
 8e4:	stp	x21, x22, [sp, #32]
 8e8:	add	x21, x20, #0x88
 8ec:	mov	w22, #0x1                   	// #1
 8f0:	ldr	x0, [x20, #136]
 8f4:	add	x3, sp, #0x30
 8f8:	ldr	x1, [x21, #8]
 8fc:	ldr	x4, [x1, #152]
 900:	str	w22, [x19]
 904:	str	wzr, [x19, #16]
 908:	mov	x1, #0x0                   	// #0
 90c:	str	d0, [x19, #8]
 910:	blr	x4
 914:	cbz	w0, 9d4 <fprintf@plt+0x1f4>
 918:	ldr	x1, [x21, #8]
 91c:	add	x3, sp, #0x50
 920:	ldr	x0, [x20, #136]
 924:	mov	w2, #0x2                   	// #2
 928:	ldr	x4, [x1, #152]
 92c:	mov	x1, #0x1                   	// #1
 930:	blr	x4
 934:	cbz	w0, 9f0 <fprintf@plt+0x210>
 938:	ldr	x1, [x21, #8]
 93c:	add	x3, sp, #0x70
 940:	ldr	x0, [x20, #136]
 944:	mov	w2, w22
 948:	ldr	x4, [x1, #152]
 94c:	mov	x1, #0x2                   	// #2
 950:	blr	x4
 954:	cbz	w0, 994 <fprintf@plt+0x1b4>
 958:	ldr	d0, [sp, #120]
 95c:	ldr	x0, [sp, #56]
 960:	fcvtzs	w2, d0
 964:	ldr	x1, [sp, #88]
 968:	and	w2, w2, #0x1f
 96c:	bl	7c0 <fnmatch@plt>
 970:	scvtf	d0, w0
 974:	str	w22, [x19]
 978:	str	wzr, [x19, #16]
 97c:	mov	x0, x19
 980:	ldp	x21, x22, [sp, #32]
 984:	str	d0, [x19, #8]
 988:	ldp	x19, x20, [sp, #16]
 98c:	ldp	x29, x30, [sp], #144
 990:	ret
 994:	ldr	x0, [x21, #8]
 998:	adrp	x1, 0 <memcpy@plt-0x760>
 99c:	ldr	x21, [x20, #136]
 9a0:	add	x1, x1, #0xe38
 9a4:	ldr	x20, [x0, #104]
 9a8:	mov	w2, #0x5                   	// #5
 9ac:	mov	x0, #0x0                   	// #0
 9b0:	bl	7d0 <dcgettext@plt>
 9b4:	mov	x1, x0
 9b8:	mov	x0, x21
 9bc:	blr	x20
 9c0:	mov	x0, x19
 9c4:	ldp	x19, x20, [sp, #16]
 9c8:	ldp	x21, x22, [sp, #32]
 9cc:	ldp	x29, x30, [sp], #144
 9d0:	ret
 9d4:	ldr	x0, [x21, #8]
 9d8:	adrp	x1, 0 <memcpy@plt-0x760>
 9dc:	ldr	x21, [x20, #136]
 9e0:	add	x1, x1, #0xde8
 9e4:	mov	w2, #0x5                   	// #5
 9e8:	ldr	x20, [x0, #104]
 9ec:	b	9ac <fprintf@plt+0x1cc>
 9f0:	ldr	x0, [x21, #8]
 9f4:	adrp	x1, 0 <memcpy@plt-0x760>
 9f8:	ldr	x21, [x20, #136]
 9fc:	add	x1, x1, #0xe10
 a00:	mov	w2, #0x5                   	// #5
 a04:	ldr	x20, [x0, #104]
 a08:	b	9ac <fprintf@plt+0x1cc>
 a0c:	nop
 a10:	stp	x29, x30, [sp, #-224]!
 a14:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 a18:	fmov	d0, #1.000000000000000000e+00
 a1c:	mov	x29, sp
 a20:	stp	x19, x20, [sp, #16]
 a24:	add	x20, x0, #0x88
 a28:	mov	w19, #0x1                   	// #1
 a2c:	ldr	x0, [x0, #136]
 a30:	stp	x21, x22, [sp, #32]
 a34:	adrp	x2, 0 <memcpy@plt-0x760>
 a38:	ldr	x1, [x20, #8]
 a3c:	stp	x23, x24, [sp, #48]
 a40:	add	x24, sp, #0xa0
 a44:	stp	x25, x26, [sp, #64]
 a48:	mov	x3, x24
 a4c:	add	x2, x2, #0xe70
 a50:	ldr	x4, [x1, #176]
 a54:	stp	x27, x28, [sp, #80]
 a58:	adrp	x1, 0 <memcpy@plt-0x760>
 a5c:	str	w19, [sp, #160]
 a60:	add	x1, x1, #0xe68
 a64:	str	wzr, [sp, #176]
 a68:	str	wzr, [sp, #108]
 a6c:	str	d0, [sp, #168]
 a70:	blr	x4
 a74:	cbz	w0, c20 <fprintf@plt+0x440>
 a78:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 a7c:	add	x1, x0, #0x88
 a80:	mov	x19, x1
 a84:	adrp	x21, 11000 <dl_load@@Base+0x10358>
 a88:	ldr	x0, [x0, #136]
 a8c:	adrp	x20, 0 <memcpy@plt-0x760>
 a90:	ldr	x1, [x1, #8]
 a94:	adrp	x28, 0 <memcpy@plt-0x760>
 a98:	add	x22, sp, #0x80
 a9c:	add	x21, x21, #0xd58
 aa0:	add	x20, x20, #0xe60
 aa4:	mov	x27, #0x8                   	// #8
 aa8:	ldr	x1, [x1, #248]
 aac:	blr	x1
 ab0:	mov	x23, x0
 ab4:	add	x1, x28, #0xeb8
 ab8:	adrp	x0, 0 <memcpy@plt-0x760>
 abc:	add	x0, x0, #0xec8
 ac0:	stp	x1, x0, [sp, #112]
 ac4:	b	adc <fprintf@plt+0x2fc>
 ac8:	ldr	x20, [x21, #16]!
 acc:	cbz	x20, b9c <fprintf@plt+0x3bc>
 ad0:	mov	x0, x20
 ad4:	bl	770 <strlen@plt>
 ad8:	mov	x27, x0
 adc:	ldp	x1, x25, [x19]
 ae0:	stp	xzr, xzr, [x22]
 ae4:	mov	w4, #0x2                   	// #2
 ae8:	stp	xzr, xzr, [x22, #16]
 aec:	add	x26, x27, #0x1
 af0:	mov	x0, x26
 af4:	str	w4, [sp, #128]
 af8:	ldr	x2, [x25, #280]
 afc:	str	x27, [sp, #144]
 b00:	str	x1, [sp, #96]
 b04:	blr	x2
 b08:	mov	x28, x0
 b0c:	cbz	x0, c08 <fprintf@plt+0x428>
 b10:	mov	x2, x27
 b14:	mov	x1, x20
 b18:	mov	x0, x28
 b1c:	bl	760 <memcpy@plt>
 b20:	ldp	x0, x2, [x19]
 b24:	strb	wzr, [x28, x27]
 b28:	mov	w5, #0x1                   	// #1
 b2c:	str	x28, [sp, #136]
 b30:	ldr	w1, [x21, #8]
 b34:	mov	x3, x24
 b38:	str	w5, [sp, #160]
 b3c:	str	wzr, [sp, #176]
 b40:	scvtf	d0, w1
 b44:	mov	x1, x23
 b48:	ldr	x4, [x2, #232]
 b4c:	mov	x2, x22
 b50:	str	d0, [sp, #168]
 b54:	blr	x4
 b58:	cbnz	w0, ac8 <fprintf@plt+0x2e8>
 b5c:	ldp	x27, x0, [x19]
 b60:	mov	w2, #0x5                   	// #5
 b64:	adrp	x1, 0 <memcpy@plt-0x760>
 b68:	add	x1, x1, #0xee8
 b6c:	ldr	x25, [x0, #104]
 b70:	mov	x0, #0x0                   	// #0
 b74:	bl	7d0 <dcgettext@plt>
 b78:	mov	x1, x0
 b7c:	mov	x2, x20
 b80:	mov	x0, x27
 b84:	blr	x25
 b88:	ldr	w0, [sp, #108]
 b8c:	ldr	x20, [x21, #16]!
 b90:	add	w0, w0, #0x1
 b94:	str	w0, [sp, #108]
 b98:	cbnz	x20, ad0 <fprintf@plt+0x2f0>
 b9c:	adrp	x0, 12000 <dl_load@@Base+0x11358>
 ba0:	add	x21, x0, #0x88
 ba4:	mov	w20, #0x5                   	// #5
 ba8:	str	w20, [sp, #192]
 bac:	ldr	x0, [x0, #136]
 bb0:	str	x23, [sp, #200]
 bb4:	ldr	x4, [x21, #8]
 bb8:	add	x3, sp, #0xc0
 bbc:	adrp	x1, 0 <memcpy@plt-0x760>
 bc0:	adrp	x2, 0 <memcpy@plt-0x760>
 bc4:	add	x1, x1, #0xe68
 bc8:	add	x2, x2, #0xf18
 bcc:	ldr	x4, [x4, #176]
 bd0:	blr	x4
 bd4:	mov	w19, w0
 bd8:	cbz	w0, c58 <fprintf@plt+0x478>
 bdc:	ldr	w0, [sp, #108]
 be0:	ldp	x21, x22, [sp, #32]
 be4:	cmp	w0, #0x0
 be8:	cset	w19, eq  // eq = none
 bec:	mov	w0, w19
 bf0:	ldp	x19, x20, [sp, #16]
 bf4:	ldp	x23, x24, [sp, #48]
 bf8:	ldp	x25, x26, [sp, #64]
 bfc:	ldp	x27, x28, [sp, #80]
 c00:	ldp	x29, x30, [sp], #224
 c04:	ret
 c08:	ldp	x2, x1, [sp, #112]
 c0c:	mov	x3, x26
 c10:	ldr	x6, [x25, #96]
 c14:	ldr	x0, [sp, #96]
 c18:	blr	x6
 c1c:	b	b10 <fprintf@plt+0x330>
 c20:	ldr	x0, [x20, #8]
 c24:	adrp	x1, 12000 <dl_load@@Base+0x11358>
 c28:	str	w19, [sp, #108]
 c2c:	mov	w2, #0x5                   	// #5
 c30:	ldr	x20, [x1, #136]
 c34:	adrp	x1, 0 <memcpy@plt-0x760>
 c38:	ldr	x19, [x0, #104]
 c3c:	add	x1, x1, #0xe80
 c40:	mov	x0, #0x0                   	// #0
 c44:	bl	7d0 <dcgettext@plt>
 c48:	mov	x1, x0
 c4c:	mov	x0, x20
 c50:	blr	x19
 c54:	b	a78 <fprintf@plt+0x298>
 c58:	ldr	x0, [x21, #8]
 c5c:	adrp	x1, 12000 <dl_load@@Base+0x11358>
 c60:	mov	w2, w20
 c64:	ldr	x21, [x1, #136]
 c68:	adrp	x1, 0 <memcpy@plt-0x760>
 c6c:	ldr	x20, [x0, #104]
 c70:	add	x1, x1, #0xf20
 c74:	mov	x0, #0x0                   	// #0
 c78:	bl	7d0 <dcgettext@plt>
 c7c:	mov	x1, x0
 c80:	mov	x0, x21
 c84:	blr	x20
 c88:	mov	w0, w19
 c8c:	ldp	x19, x20, [sp, #16]
 c90:	ldp	x21, x22, [sp, #32]
 c94:	ldp	x23, x24, [sp, #48]
 c98:	ldp	x25, x26, [sp, #64]
 c9c:	ldp	x27, x28, [sp, #80]
 ca0:	ldp	x29, x30, [sp], #224
 ca4:	ret

0000000000000ca8 <dl_load@@Base>:
 ca8:	stp	x29, x30, [sp, #-48]!
 cac:	mov	x3, x0
 cb0:	mov	x0, x1
 cb4:	mov	x29, sp
 cb8:	stp	x19, x20, [sp, #16]
 cbc:	adrp	x19, 12000 <dl_load@@Base+0x11358>
 cc0:	add	x20, x19, #0x88
 cc4:	str	x1, [x19, #136]
 cc8:	ldr	w1, [x3]
 ccc:	str	x21, [sp, #32]
 cd0:	str	x3, [x20, #8]
 cd4:	cmp	w1, #0x2
 cd8:	b.ne	d88 <dl_load@@Base+0xe0>  // b.any
 cdc:	ldr	w1, [x3, #4]
 ce0:	tbnz	w1, #31, d88 <dl_load@@Base+0xe0>
 ce4:	adrp	x21, 12000 <dl_load@@Base+0x11358>
 ce8:	add	x2, x21, #0x50
 cec:	ldr	x1, [x21, #80]
 cf0:	cbz	x1, d80 <dl_load@@Base+0xd8>
 cf4:	ldr	x3, [x3, #48]
 cf8:	adrp	x1, 0 <memcpy@plt-0x760>
 cfc:	add	x1, x1, #0xe68
 d00:	blr	x3
 d04:	cbnz	w0, d80 <dl_load@@Base+0xd8>
 d08:	ldr	x3, [x20, #8]
 d0c:	adrp	x1, 0 <memcpy@plt-0x760>
 d10:	ldr	x2, [x21, #80]
 d14:	add	x1, x1, #0xfb0
 d18:	ldr	x0, [x19, #136]
 d1c:	mov	w20, #0x0                   	// #0
 d20:	ldr	x3, [x3, #104]
 d24:	blr	x3
 d28:	bl	a10 <fprintf@plt+0x230>
 d2c:	cbnz	w0, d50 <dl_load@@Base+0xa8>
 d30:	add	x2, x19, #0x88
 d34:	adrp	x1, 0 <memcpy@plt-0x760>
 d38:	ldr	x0, [x19, #136]
 d3c:	add	x1, x1, #0xfd0
 d40:	ldr	x2, [x2, #8]
 d44:	mov	w20, #0x0                   	// #0
 d48:	ldr	x2, [x2, #104]
 d4c:	blr	x2
 d50:	add	x2, x19, #0x88
 d54:	adrp	x1, 0 <memcpy@plt-0x760>
 d58:	ldr	x0, [x19, #136]
 d5c:	add	x1, x1, #0xff8
 d60:	ldr	x2, [x2, #8]
 d64:	ldr	x2, [x2, #88]
 d68:	blr	x2
 d6c:	mov	w0, w20
 d70:	ldp	x19, x20, [sp, #16]
 d74:	ldr	x21, [sp, #32]
 d78:	ldp	x29, x30, [sp], #48
 d7c:	ret
 d80:	mov	w20, #0x1                   	// #1
 d84:	b	d28 <dl_load@@Base+0x80>
 d88:	adrp	x20, 11000 <dl_load@@Base+0x10358>
 d8c:	add	x19, x19, #0x88
 d90:	mov	x2, #0x25                  	// #37
 d94:	mov	x1, #0x1                   	// #1
 d98:	ldr	x20, [x20, #4048]
 d9c:	adrp	x0, 0 <memcpy@plt-0x760>
 da0:	add	x0, x0, #0xf50
 da4:	ldr	x3, [x20]
 da8:	bl	7b0 <fwrite@plt>
 dac:	ldr	x5, [x19, #8]
 db0:	adrp	x1, 0 <memcpy@plt-0x760>
 db4:	ldr	x0, [x20]
 db8:	add	x1, x1, #0xf78
 dbc:	ldp	w4, w5, [x5]
 dc0:	mov	w3, #0x0                   	// #0
 dc4:	mov	w2, #0x2                   	// #2
 dc8:	bl	7e0 <fprintf@plt>
 dcc:	mov	w0, #0x1                   	// #1
 dd0:	bl	780 <exit@plt>

Disassembly of section .fini:

0000000000000dd4 <.fini>:
 dd4:	stp	x29, x30, [sp, #-16]!
 dd8:	mov	x29, sp
 ddc:	ldp	x29, x30, [sp], #16
 de0:	ret
