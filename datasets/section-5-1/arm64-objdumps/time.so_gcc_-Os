
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//time.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006d0 <.init>:
 6d0:	stp	x29, x30, [sp, #-16]!
 6d4:	mov	x29, sp
 6d8:	bl	7a0 <fprintf@plt+0x10>
 6dc:	ldp	x29, x30, [sp], #16
 6e0:	ret

Disassembly of section .plt:

00000000000006f0 <fputs@plt-0x20>:
 6f0:	stp	x16, x30, [sp, #-16]!
 6f4:	adrp	x16, 10000 <dl_load@@Base+0xf60c>
 6f8:	ldr	x17, [x16, #4088]
 6fc:	add	x16, x16, #0xff8
 700:	br	x17
 704:	nop
 708:	nop
 70c:	nop

0000000000000710 <fputs@plt>:
 710:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 714:	ldr	x17, [x16]
 718:	add	x16, x16, #0x0
 71c:	br	x17

0000000000000720 <exit@plt>:
 720:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 724:	ldr	x17, [x16, #8]
 728:	add	x16, x16, #0x8
 72c:	br	x17

0000000000000730 <__cxa_finalize@plt>:
 730:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 734:	ldr	x17, [x16, #16]
 738:	add	x16, x16, #0x10
 73c:	br	x17

0000000000000740 <gettimeofday@plt>:
 740:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 744:	ldr	x17, [x16, #24]
 748:	add	x16, x16, #0x18
 74c:	br	x17

0000000000000750 <__gmon_start__@plt>:
 750:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 754:	ldr	x17, [x16, #32]
 758:	add	x16, x16, #0x20
 75c:	br	x17

0000000000000760 <nanosleep@plt>:
 760:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 764:	ldr	x17, [x16, #40]
 768:	add	x16, x16, #0x28
 76c:	br	x17

0000000000000770 <dcgettext@plt>:
 770:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 774:	ldr	x17, [x16, #48]
 778:	add	x16, x16, #0x30
 77c:	br	x17

0000000000000780 <__errno_location@plt>:
 780:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 784:	ldr	x17, [x16, #56]
 788:	add	x16, x16, #0x38
 78c:	br	x17

0000000000000790 <fprintf@plt>:
 790:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 794:	ldr	x17, [x16, #64]
 798:	add	x16, x16, #0x40
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <dl_load@@Base-0x254>:
 7a0:	adrp	x0, 10000 <dl_load@@Base+0xf60c>
 7a4:	ldr	x0, [x0, #4056]
 7a8:	cbz	x0, 7b0 <fprintf@plt+0x20>
 7ac:	b	750 <__gmon_start__@plt>
 7b0:	ret
 7b4:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
 7b8:	add	x0, x0, #0xb0
 7bc:	adrp	x1, 11000 <dl_load@@Base+0x1060c>
 7c0:	add	x1, x1, #0xb0
 7c4:	cmp	x1, x0
 7c8:	b.eq	7e0 <fprintf@plt+0x50>  // b.none
 7cc:	adrp	x1, 10000 <dl_load@@Base+0xf60c>
 7d0:	ldr	x1, [x1, #4032]
 7d4:	cbz	x1, 7e0 <fprintf@plt+0x50>
 7d8:	mov	x16, x1
 7dc:	br	x16
 7e0:	ret
 7e4:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
 7e8:	add	x0, x0, #0xb0
 7ec:	adrp	x1, 11000 <dl_load@@Base+0x1060c>
 7f0:	add	x1, x1, #0xb0
 7f4:	sub	x1, x1, x0
 7f8:	mov	x2, #0x2                   	// #2
 7fc:	asr	x1, x1, #3
 800:	sdiv	x1, x1, x2
 804:	cbz	x1, 81c <fprintf@plt+0x8c>
 808:	adrp	x2, 10000 <dl_load@@Base+0xf60c>
 80c:	ldr	x2, [x2, #4064]
 810:	cbz	x2, 81c <fprintf@plt+0x8c>
 814:	mov	x16, x2
 818:	br	x16
 81c:	ret
 820:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
 824:	ldrb	w1, [x0, #176]
 828:	cbnz	w1, 86c <fprintf@plt+0xdc>
 82c:	stp	x29, x30, [sp, #-32]!
 830:	mov	x29, sp
 834:	str	x19, [sp, #16]
 838:	mov	x19, x0
 83c:	adrp	x0, 10000 <dl_load@@Base+0xf60c>
 840:	ldr	x0, [x0, #4040]
 844:	cbz	x0, 854 <fprintf@plt+0xc4>
 848:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
 84c:	ldr	x0, [x0, #72]
 850:	bl	730 <__cxa_finalize@plt>
 854:	bl	7b4 <fprintf@plt+0x24>
 858:	mov	w0, #0x1                   	// #1
 85c:	strb	w0, [x19, #176]
 860:	ldr	x19, [sp, #16]
 864:	ldp	x29, x30, [sp], #32
 868:	ret
 86c:	ret
 870:	b	7e4 <fprintf@plt+0x54>
 874:	stp	x29, x30, [sp, #-96]!
 878:	mov	w2, #0x1                   	// #1
 87c:	mov	x29, sp
 880:	stp	x21, x22, [sp, #32]
 884:	adrp	x21, 11000 <dl_load@@Base+0x1060c>
 888:	add	x22, x21, #0xb8
 88c:	stp	x19, x20, [sp, #16]
 890:	add	x3, sp, #0x40
 894:	mov	x19, x1
 898:	ldr	x0, [x22, #8]
 89c:	mov	x1, #0x0                   	// #0
 8a0:	ldr	x4, [x0, #152]
 8a4:	ldr	x0, [x21, #184]
 8a8:	blr	x4
 8ac:	cbnz	w0, 904 <fprintf@plt+0x174>
 8b0:	ldr	x0, [x22, #8]
 8b4:	adrp	x1, 0 <fputs@plt-0x710>
 8b8:	ldr	x21, [x21, #184]
 8bc:	add	x1, x1, #0xb2c
 8c0:	ldr	x20, [x0, #136]
 8c4:	mov	w2, #0x5                   	// #5
 8c8:	mov	x0, #0x0                   	// #0
 8cc:	bl	770 <dcgettext@plt>
 8d0:	mov	x1, x0
 8d4:	mov	x0, x21
 8d8:	blr	x20
 8dc:	mov	w0, #0x1                   	// #1
 8e0:	fmov	d0, #-1.000000000000000000e+00
 8e4:	str	w0, [x19]
 8e8:	ldp	x21, x22, [sp, #32]
 8ec:	str	wzr, [x19, #16]
 8f0:	str	d0, [x19, #8]
 8f4:	mov	x0, x19
 8f8:	ldp	x19, x20, [sp, #16]
 8fc:	ldp	x29, x30, [sp], #96
 900:	ret
 904:	ldr	d0, [sp, #72]
 908:	fcmpe	d0, #0.0
 90c:	b.pl	92c <fprintf@plt+0x19c>  // b.nfrst
 910:	ldr	x0, [x22, #8]
 914:	adrp	x1, 0 <fputs@plt-0x710>
 918:	ldr	x21, [x21, #184]
 91c:	add	x1, x1, #0xb55
 920:	mov	w2, #0x5                   	// #5
 924:	ldr	x20, [x0, #136]
 928:	b	8c8 <fprintf@plt+0x138>
 92c:	fcvtzs	d1, d0
 930:	mov	x0, #0xcd6500000000        	// #225833675390976
 934:	movk	x0, #0x41cd, lsl #48
 938:	mov	x1, #0x0                   	// #0
 93c:	str	d1, [sp, #48]
 940:	scvtf	d1, d1
 944:	fsub	d0, d0, d1
 948:	fmov	d1, x0
 94c:	add	x0, sp, #0x30
 950:	fmul	d0, d0, d1
 954:	fcvtzs	d0, d0
 958:	str	d0, [sp, #56]
 95c:	bl	760 <nanosleep@plt>
 960:	mov	w20, w0
 964:	tbz	w0, #31, 984 <fprintf@plt+0x1f4>
 968:	bl	780 <__errno_location@plt>
 96c:	ldr	x1, [x22, #8]
 970:	ldr	x21, [x21, #184]
 974:	ldr	x2, [x1, #128]
 978:	ldr	w1, [x0]
 97c:	mov	x0, x21
 980:	blr	x2
 984:	mov	w0, #0x1                   	// #1
 988:	scvtf	d0, w20
 98c:	str	w0, [x19]
 990:	b	8e8 <fprintf@plt+0x158>
 994:	stp	x29, x30, [sp, #-48]!
 998:	mov	x29, sp
 99c:	add	x0, sp, #0x20
 9a0:	str	x19, [sp, #16]
 9a4:	mov	x19, x1
 9a8:	mov	x1, #0x0                   	// #0
 9ac:	bl	740 <gettimeofday@plt>
 9b0:	ldr	d0, [sp, #40]
 9b4:	mov	x0, #0x848000000000        	// #145685290680320
 9b8:	movk	x0, #0x412e, lsl #48
 9bc:	fmov	d1, x0
 9c0:	mov	w0, #0x1                   	// #1
 9c4:	str	w0, [x19]
 9c8:	scvtf	d0, d0
 9cc:	str	wzr, [x19, #16]
 9d0:	mov	x0, x19
 9d4:	fdiv	d0, d0, d1
 9d8:	ldr	d1, [sp, #32]
 9dc:	scvtf	d1, d1
 9e0:	fadd	d0, d0, d1
 9e4:	str	d0, [x19, #8]
 9e8:	ldr	x19, [sp, #16]
 9ec:	ldp	x29, x30, [sp], #48
 9f0:	ret

00000000000009f4 <dl_load@@Base>:
 9f4:	stp	x29, x30, [sp, #-80]!
 9f8:	mov	x29, sp
 9fc:	stp	x19, x20, [sp, #16]
 a00:	adrp	x19, 11000 <dl_load@@Base+0x1060c>
 a04:	stp	x21, x22, [sp, #32]
 a08:	add	x21, x19, #0xb8
 a0c:	str	x1, [x19, #184]
 a10:	ldr	w1, [x0]
 a14:	str	x0, [x21, #8]
 a18:	stp	x23, x24, [sp, #48]
 a1c:	cmp	w1, #0x2
 a20:	str	x25, [sp, #64]
 a24:	b.ne	a30 <dl_load@@Base+0x3c>  // b.any
 a28:	ldr	w0, [x0, #4]
 a2c:	tbz	w0, #31, a74 <dl_load@@Base+0x80>
 a30:	adrp	x20, 10000 <dl_load@@Base+0xf60c>
 a34:	add	x19, x19, #0xb8
 a38:	adrp	x0, 0 <fputs@plt-0x710>
 a3c:	add	x0, x0, #0xb71
 a40:	ldr	x20, [x20, #4048]
 a44:	ldr	x1, [x20]
 a48:	bl	710 <fputs@plt>
 a4c:	ldr	x0, [x19, #8]
 a50:	adrp	x1, 0 <fputs@plt-0x710>
 a54:	add	x1, x1, #0xb94
 a58:	mov	w3, #0x0                   	// #0
 a5c:	mov	w2, #0x2                   	// #2
 a60:	ldp	w4, w5, [x0]
 a64:	ldr	x0, [x20]
 a68:	bl	790 <fprintf@plt>
 a6c:	mov	w0, #0x1                   	// #1
 a70:	bl	720 <exit@plt>
 a74:	adrp	x20, 11000 <dl_load@@Base+0x1060c>
 a78:	adrp	x23, 0 <fputs@plt-0x710>
 a7c:	adrp	x24, 0 <fputs@plt-0x710>
 a80:	add	x20, x20, #0x50
 a84:	add	x23, x23, #0xb93
 a88:	add	x24, x24, #0xbc7
 a8c:	mov	w22, #0x0                   	// #0
 a90:	mov	x25, #0x0                   	// #0
 a94:	ldr	x2, [x20]
 a98:	ldp	x0, x1, [x21]
 a9c:	cbz	x2, ad8 <dl_load@@Base+0xe4>
 aa0:	ldr	x3, [x1, #48]
 aa4:	mov	x2, x20
 aa8:	mov	x1, x23
 aac:	blr	x3
 ab0:	cbnz	w0, ad0 <dl_load@@Base+0xdc>
 ab4:	ldr	x0, [x21, #8]
 ab8:	mov	x1, x24
 abc:	ldr	x2, [x20]
 ac0:	add	w22, w22, #0x1
 ac4:	ldr	x3, [x0, #104]
 ac8:	ldr	x0, [x21]
 acc:	blr	x3
 ad0:	add	x20, x20, #0x30
 ad4:	cbz	x25, b14 <dl_load@@Base+0x120>
 ad8:	add	x0, x19, #0xb8
 adc:	adrp	x1, 0 <fputs@plt-0x710>
 ae0:	add	x1, x1, #0xbde
 ae4:	ldr	x0, [x0, #8]
 ae8:	ldr	x2, [x0, #88]
 aec:	ldr	x0, [x19, #184]
 af0:	blr	x2
 af4:	cmp	w22, #0x0
 af8:	cset	w0, eq  // eq = none
 afc:	ldp	x19, x20, [sp, #16]
 b00:	ldp	x21, x22, [sp, #32]
 b04:	ldp	x23, x24, [sp, #48]
 b08:	ldr	x25, [sp, #64]
 b0c:	ldp	x29, x30, [sp], #80
 b10:	ret
 b14:	mov	x25, #0x1                   	// #1
 b18:	b	a94 <dl_load@@Base+0xa0>

Disassembly of section .fini:

0000000000000b1c <.fini>:
 b1c:	stp	x29, x30, [sp, #-16]!
 b20:	mov	x29, sp
 b24:	ldp	x29, x30, [sp], #16
 b28:	ret
