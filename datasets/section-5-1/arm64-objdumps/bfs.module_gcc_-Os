
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bfs.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <bfs_strcmp>:
       0:	sub	x6, x0, #0x1
       4:	mov	x3, #0x0                   	// #0
       8:	ldrb	w4, [x1, x3]
       c:	add	x5, x0, x3
      10:	cmp	x2, x3
      14:	cbz	w4, 40 <bfs_strcmp+0x40>
      18:	b.ne	24 <bfs_strcmp+0x24>  // b.any
      1c:	mov	w0, #0x0                   	// #0
      20:	b	38 <bfs_strcmp+0x38>
      24:	add	x3, x3, #0x1
      28:	ldrb	w7, [x6, x3]
      2c:	cmp	w7, w4
      30:	b.eq	8 <bfs_strcmp+0x8>  // b.none
      34:	ldrb	w0, [x5]
      38:	sub	w0, w0, w4
      3c:	ret
      40:	b.ne	34 <bfs_strcmp+0x34>  // b.any
      44:	b	1c <bfs_strcmp+0x1c>

0000000000000048 <grub_bfs_close>:
      48:	stp	x29, x30, [sp, #-16]!
      4c:	mov	x29, sp
      50:	ldr	x0, [x0, #80]
      54:	bl	0 <grub_free>
      58:	mov	w0, #0x0                   	// #0
      5c:	ldp	x29, x30, [sp], #16
      60:	ret

0000000000000064 <grub_bfs_dir_iter>:
      64:	stp	x29, x30, [sp, #-288]!
      68:	mov	x3, #0xe8                  	// #232
      6c:	mov	x29, sp
      70:	stp	x19, x20, [sp, #16]
      74:	mov	x20, x0
      78:	ldr	w0, [x2, #68]
      7c:	ldr	x5, [x2]
      80:	sub	w0, w0, #0x9
      84:	mov	x19, x2
      88:	add	x4, sp, #0x38
      8c:	lsl	x1, x1, x0
      90:	mov	x2, #0x0                   	// #0
      94:	ldr	x0, [x5]
      98:	bl	0 <grub_disk_read>
      9c:	cbz	w0, b4 <grub_bfs_dir_iter+0x50>
      a0:	bl	0 <grub_print_error>
      a4:	mov	w0, #0x0                   	// #0
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldp	x29, x30, [sp], #288
      b0:	ret
      b4:	ldur	x0, [sp, #92]
      b8:	ldp	x3, x2, [x19, #8]
      bc:	lsr	x0, x0, #16
      c0:	str	w0, [sp, #44]
      c4:	ldr	w0, [sp, #76]
      c8:	and	w0, w0, #0xe000
      cc:	cmp	w0, #0x4, lsl #12
      d0:	ldrb	w0, [sp, #40]
      d4:	cset	w1, eq  // eq = none
      d8:	and	w0, w0, #0xfffffffc
      dc:	orr	w1, w1, #0x2
      e0:	orr	w1, w1, w0
      e4:	strb	w1, [sp, #40]
      e8:	mov	x0, x20
      ec:	add	x1, sp, #0x28
      f0:	blr	x3
      f4:	b	a8 <grub_bfs_dir_iter+0x44>

00000000000000f8 <mount>:
      f8:	stp	x29, x30, [sp, #-32]!
      fc:	mov	x4, x1
     100:	mov	x3, #0x7c                  	// #124
     104:	mov	x29, sp
     108:	mov	x2, #0x0                   	// #0
     10c:	str	x19, [sp, #16]
     110:	mov	x19, x1
     114:	mov	x1, #0x1                   	// #1
     118:	bl	0 <grub_disk_read>
     11c:	cmp	w0, #0xb
     120:	b.ne	13c <mount+0x44>  // b.any
     124:	adrp	x0, 0 <bfs_strcmp>
     128:	ldr	x19, [sp, #16]
     12c:	ldp	x29, x30, [sp], #32
     130:	ldr	x1, [x0]
     134:	mov	w0, #0x9                   	// #9
     138:	b	0 <grub_error>
     13c:	cbnz	w0, 1a0 <mount+0xa8>
     140:	ldr	w2, [x19, #32]
     144:	mov	w1, #0x5331                	// #21297
     148:	movk	w1, #0x4246, lsl #16
     14c:	cmp	w2, w1
     150:	b.ne	124 <mount+0x2c>  // b.any
     154:	ldr	w2, [x19, #68]
     158:	mov	w1, #0x1031                	// #4145
     15c:	movk	w1, #0xdd12, lsl #16
     160:	cmp	w2, w1
     164:	b.ne	124 <mount+0x2c>  // b.any
     168:	ldr	w2, [x19, #112]
     16c:	mov	w1, #0x830e                	// #33550
     170:	movk	w1, #0x15b6, lsl #16
     174:	cmp	w2, w1
     178:	b.ne	124 <mount+0x2c>  // b.any
     17c:	ldr	w3, [x19, #40]
     180:	cbz	w3, 124 <mount+0x2c>
     184:	ldr	w2, [x19, #44]
     188:	mov	w1, #0x1                   	// #1
     18c:	lsl	w1, w1, w2
     190:	cmp	w3, w1
     194:	b.ne	124 <mount+0x2c>  // b.any
     198:	cmp	w2, #0x8
     19c:	b.ls	124 <mount+0x2c>  // b.plast
     1a0:	ldr	x19, [sp, #16]
     1a4:	ldp	x29, x30, [sp], #32
     1a8:	ret
     1ac:	nop
	...

00000000000001b8 <grub_bfs_label>:
     1b8:	stp	x29, x30, [sp, #-160]!
     1bc:	mov	x29, sp
     1c0:	ldr	x0, [x0]
     1c4:	stp	x19, x20, [sp, #16]
     1c8:	mov	x20, x1
     1cc:	str	xzr, [x1]
     1d0:	add	x1, sp, #0x20
     1d4:	bl	f8 <mount>
     1d8:	mov	w19, w0
     1dc:	cbnz	w0, 1f0 <grub_bfs_label+0x38>
     1e0:	mov	x1, #0x20                  	// #32
     1e4:	add	x0, sp, x1
     1e8:	bl	0 <grub_strndup>
     1ec:	str	x0, [x20]
     1f0:	mov	w0, w19
     1f4:	ldp	x19, x20, [sp, #16]
     1f8:	ldp	x29, x30, [sp], #160
     1fc:	ret

0000000000000200 <read_extent.constprop.0>:
     200:	mov	x7, x2
     204:	mov	x2, x3
     208:	mov	x3, x5
     20c:	ldr	w5, [x1, #76]
     210:	ldr	w1, [x1, #44]
     214:	ldr	w6, [x7]
     218:	sub	w1, w1, #0x9
     21c:	lsl	w6, w6, w5
     220:	ldrh	w5, [x7, #4]
     224:	add	w6, w6, w5
     228:	lsl	x1, x6, x1
     22c:	b	0 <grub_disk_read>

0000000000000230 <read_bfs_file>:
     230:	stp	x29, x30, [sp, #-144]!
     234:	mov	x29, sp
     238:	stp	x19, x20, [sp, #16]
     23c:	stp	x21, x22, [sp, #32]
     240:	stp	x23, x24, [sp, #48]
     244:	stp	x25, x26, [sp, #64]
     248:	stp	x27, x28, [sp, #80]
     24c:	stp	x6, x7, [sp, #96]
     250:	cbnz	x5, 278 <read_bfs_file+0x48>
     254:	mov	w19, #0x0                   	// #0
     258:	mov	w0, w19
     25c:	ldp	x19, x20, [sp, #16]
     260:	ldp	x21, x22, [sp, #32]
     264:	ldp	x23, x24, [sp, #48]
     268:	ldp	x25, x26, [sp, #64]
     26c:	ldp	x27, x28, [sp, #80]
     270:	ldp	x29, x30, [sp], #144
     274:	ret
     278:	mov	x22, x2
     27c:	mov	x24, x0
     280:	ldr	x2, [x2, #208]
     284:	add	x0, x5, x3
     288:	mov	x20, x3
     28c:	mov	x21, x5
     290:	cmp	x0, x2
     294:	b.ls	2c0 <read_bfs_file+0x90>  // b.plast
     298:	adrp	x0, 0 <bfs_strcmp>
     29c:	ldr	x1, [x0]
     2a0:	mov	w0, #0xb                   	// #11
     2a4:	ldp	x19, x20, [sp, #16]
     2a8:	ldp	x21, x22, [sp, #32]
     2ac:	ldp	x23, x24, [sp, #48]
     2b0:	ldp	x25, x26, [sp, #64]
     2b4:	ldp	x27, x28, [sp, #80]
     2b8:	ldp	x29, x30, [sp], #144
     2bc:	b	0 <grub_error>
     2c0:	ldr	x0, [x22, #168]
     2c4:	mov	x25, x1
     2c8:	mov	x23, x4
     2cc:	cmp	x3, x0
     2d0:	b.cs	364 <read_bfs_file+0x134>  // b.hs, b.nlast
     2d4:	add	x27, x22, #0x48
     2d8:	add	x6, x22, #0xa8
     2dc:	mov	x28, #0x0                   	// #0
     2e0:	ldrh	w0, [x27, #6]
     2e4:	mov	x3, x28
     2e8:	ldr	w2, [x25, #44]
     2ec:	lsl	x0, x0, x2
     2f0:	add	x28, x28, x0
     2f4:	cmp	x28, x20
     2f8:	b.ls	358 <read_bfs_file+0x128>  // b.plast
     2fc:	sub	x26, x28, x20
     300:	mov	x4, x23
     304:	ldr	x0, [sp, #96]
     308:	cmp	x26, x21
     30c:	str	x0, [x24, #48]
     310:	csel	x26, x26, x21, ls  // ls = plast
     314:	ldr	x0, [sp, #104]
     318:	str	x0, [x24, #56]
     31c:	mov	x5, x26
     320:	sub	x3, x20, x3
     324:	mov	x2, x27
     328:	mov	x1, x25
     32c:	mov	x0, x24
     330:	str	x6, [sp, #112]
     334:	bl	200 <read_extent.constprop.0>
     338:	str	xzr, [x24, #48]
     33c:	mov	w19, w0
     340:	cbnz	w0, 258 <read_bfs_file+0x28>
     344:	add	x20, x20, x26
     348:	add	x23, x23, x26
     34c:	subs	x21, x21, x26
     350:	ldr	x6, [sp, #112]
     354:	b.eq	254 <read_bfs_file+0x24>  // b.none
     358:	add	x27, x27, #0x8
     35c:	cmp	x6, x27
     360:	b.ne	2e0 <read_bfs_file+0xb0>  // b.any
     364:	ldr	x19, [x22, #168]
     368:	cmp	x19, x20
     36c:	b.ls	380 <read_bfs_file+0x150>  // b.plast
     370:	adrp	x0, 0 <bfs_strcmp>
     374:	ldr	x1, [x0]
     378:	mov	w0, #0x9                   	// #9
     37c:	b	2a4 <read_bfs_file+0x74>
     380:	ldr	x0, [x22, #184]
     384:	cmp	x20, x0
     388:	b.cs	4a0 <read_bfs_file+0x270>  // b.hs, b.nlast
     38c:	ldr	w0, [x25, #44]
     390:	ldrh	w26, [x22, #182]
     394:	sub	w0, w0, #0x3
     398:	lsl	x26, x26, x0
     39c:	lsl	x28, x26, #3
     3a0:	mov	x0, x28
     3a4:	bl	0 <grub_malloc>
     3a8:	mov	x27, x0
     3ac:	cbnz	x0, 3c0 <read_bfs_file+0x190>
     3b0:	adrp	x0, 0 <bfs_strcmp>
     3b4:	ldr	x0, [x0]
     3b8:	ldr	w19, [x0]
     3bc:	b	258 <read_bfs_file+0x28>
     3c0:	mov	x4, x0
     3c4:	mov	x5, x28
     3c8:	add	x2, x22, #0xb0
     3cc:	mov	x1, x25
     3d0:	mov	x0, x24
     3d4:	mov	x3, #0x0                   	// #0
     3d8:	bl	200 <read_extent.constprop.0>
     3dc:	mov	w7, #0x0                   	// #0
     3e0:	mov	w2, w7
     3e4:	cmp	x26, w7, uxtw
     3e8:	b.hi	40c <read_bfs_file+0x1dc>  // b.pmore
     3ec:	mov	x0, x27
     3f0:	bl	0 <grub_free>
     3f4:	ldr	x0, [x22, #184]
     3f8:	cmp	x20, x0
     3fc:	b.cs	4a0 <read_bfs_file+0x270>  // b.hs, b.nlast
     400:	adrp	x0, 0 <bfs_strcmp>
     404:	ldr	x1, [x0]
     408:	b	378 <read_bfs_file+0x148>
     40c:	add	x2, x27, x2, lsl #3
     410:	ldr	w0, [x25, #44]
     414:	ldrh	w6, [x2, #6]
     418:	lsl	x6, x6, x0
     41c:	add	x6, x6, x19
     420:	cmp	x6, x20
     424:	b.ls	494 <read_bfs_file+0x264>  // b.plast
     428:	sub	x28, x6, x20
     42c:	sub	x3, x20, x19
     430:	ldr	x0, [sp, #96]
     434:	cmp	x28, x21
     438:	str	x0, [x24, #48]
     43c:	csel	x28, x28, x21, ls  // ls = plast
     440:	ldr	x0, [sp, #104]
     444:	str	x0, [x24, #56]
     448:	mov	x5, x28
     44c:	mov	x4, x23
     450:	mov	x1, x25
     454:	mov	x0, x24
     458:	str	x6, [sp, #112]
     45c:	str	w7, [sp, #120]
     460:	bl	200 <read_extent.constprop.0>
     464:	str	xzr, [x24, #48]
     468:	mov	w19, w0
     46c:	ldr	w7, [sp, #120]
     470:	ldr	x6, [sp, #112]
     474:	cbz	w0, 484 <read_bfs_file+0x254>
     478:	mov	x0, x27
     47c:	bl	0 <grub_free>
     480:	b	258 <read_bfs_file+0x28>
     484:	add	x20, x20, x28
     488:	add	x23, x23, x28
     48c:	subs	x21, x21, x28
     490:	b.eq	478 <read_bfs_file+0x248>  // b.none
     494:	add	w7, w7, #0x1
     498:	mov	x19, x6
     49c:	b	3e0 <read_bfs_file+0x1b0>
     4a0:	ldr	w0, [x25, #44]
     4a4:	ldrh	w27, [x22, #198]
     4a8:	sub	w0, w0, #0x3
     4ac:	lsl	x0, x27, x0
     4b0:	str	x0, [sp, #112]
     4b4:	lsl	x19, x0, #3
     4b8:	mov	x0, x19
     4bc:	bl	0 <grub_malloc>
     4c0:	mov	x27, x0
     4c4:	cbz	x0, 3b0 <read_bfs_file+0x180>
     4c8:	ldr	w0, [x25, #44]
     4cc:	mov	w28, #0x1                   	// #1
     4d0:	add	w0, w0, #0x2
     4d4:	lsl	w0, w28, w0
     4d8:	sxtw	x0, w0
     4dc:	bl	0 <grub_malloc>
     4e0:	mov	x26, x0
     4e4:	cbnz	x0, 4f4 <read_bfs_file+0x2c4>
     4e8:	mov	x0, x27
     4ec:	bl	0 <grub_free>
     4f0:	b	3b0 <read_bfs_file+0x180>
     4f4:	mov	x5, x19
     4f8:	mov	x4, x27
     4fc:	add	x2, x22, #0xc0
     500:	mov	x1, x25
     504:	mov	x0, x24
     508:	mov	x3, #0x0                   	// #0
     50c:	bl	200 <read_extent.constprop.0>
     510:	mov	w19, w0
     514:	cbz	w0, 528 <read_bfs_file+0x2f8>
     518:	mov	x0, x27
     51c:	bl	0 <grub_free>
     520:	mov	x0, x26
     524:	b	47c <read_bfs_file+0x24c>
     528:	mov	w10, w28
     52c:	mov	x9, #0x0                   	// #0
     530:	mov	x11, #0xffffffffffffffff    	// #-1
     534:	ldr	w0, [x25, #44]
     538:	ldr	x28, [x22, #184]
     53c:	sub	w3, w0, #0x1
     540:	add	w12, w0, #0x2
     544:	lsl	w3, w10, w3
     548:	sub	w2, w3, #0x1
     54c:	sub	x28, x20, x28
     550:	lsl	w7, w10, w12
     554:	sxtw	x2, w2
     558:	sub	w7, w7, #0x1
     55c:	lsr	x12, x28, x12
     560:	and	x12, x12, x2
     564:	lsl	w2, w0, #1
     568:	sxtw	x7, w7
     56c:	ldr	x1, [sp, #112]
     570:	add	w2, w2, #0x1
     574:	and	x7, x7, x28
     578:	lsr	x28, x28, x2
     57c:	cmp	x1, x28
     580:	b.cs	5a0 <read_bfs_file+0x370>  // b.hs, b.nlast
     584:	mov	x0, x27
     588:	bl	0 <grub_free>
     58c:	mov	x0, x26
     590:	bl	0 <grub_free>
     594:	adrp	x0, 0 <bfs_strcmp>
     598:	ldr	x1, [x0]
     59c:	b	378 <read_bfs_file+0x148>
     5a0:	cmp	x28, x11
     5a4:	b.eq	5fc <read_bfs_file+0x3cc>  // b.none
     5a8:	add	x2, x27, x28, lsl #3
     5ac:	sub	w0, w0, #0x3
     5b0:	ldrh	w9, [x2, #6]
     5b4:	lsl	x9, x9, x0
     5b8:	cmp	x9, w3, uxtw
     5bc:	b.ls	5c4 <read_bfs_file+0x394>  // b.plast
     5c0:	sxtw	x9, w3
     5c4:	lsl	x5, x9, #3
     5c8:	mov	x4, x26
     5cc:	mov	x1, x25
     5d0:	mov	x0, x24
     5d4:	mov	x3, #0x0                   	// #0
     5d8:	stp	x9, x7, [sp, #120]
     5dc:	str	x12, [sp, #136]
     5e0:	bl	200 <read_extent.constprop.0>
     5e4:	mov	w10, #0x1                   	// #1
     5e8:	mov	w19, w0
     5ec:	ldp	x9, x7, [sp, #120]
     5f0:	ldr	x12, [sp, #136]
     5f4:	cbnz	w0, 518 <read_bfs_file+0x2e8>
     5f8:	mov	x11, x28
     5fc:	cmp	x12, x9
     600:	b.hi	584 <read_bfs_file+0x354>  // b.pmore
     604:	ldr	w5, [x25, #44]
     608:	mov	x4, x23
     60c:	ldr	x0, [sp, #96]
     610:	add	w5, w5, #0x2
     614:	str	x0, [x24, #48]
     618:	mov	x3, x7
     61c:	lsl	w5, w10, w5
     620:	add	x2, x26, x12, lsl #3
     624:	sxtw	x5, w5
     628:	mov	x1, x25
     62c:	sub	x5, x5, x7
     630:	stp	x9, x11, [sp, #120]
     634:	cmp	x5, x21
     638:	ldr	x0, [sp, #104]
     63c:	str	x0, [x24, #56]
     640:	csel	x28, x5, x21, ls  // ls = plast
     644:	mov	x0, x24
     648:	mov	x5, x28
     64c:	bl	200 <read_extent.constprop.0>
     650:	str	xzr, [x24, #48]
     654:	mov	w19, w0
     658:	mov	w10, #0x1                   	// #1
     65c:	ldp	x9, x11, [sp, #120]
     660:	cbnz	w0, 518 <read_bfs_file+0x2e8>
     664:	add	x20, x20, x28
     668:	add	x23, x23, x28
     66c:	subs	x21, x21, x28
     670:	b.ne	534 <read_bfs_file+0x304>  // b.any
     674:	b	254 <read_bfs_file+0x24>
	...

00000000000006a0 <read_b_node>:
     6a0:	stp	x29, x30, [sp, #-128]!
     6a4:	mov	x29, sp
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	mov	x20, x7
     6b0:	stp	x21, x22, [sp, #32]
     6b4:	mov	x22, x5
     6b8:	mov	x21, x6
     6bc:	stp	x23, x24, [sp, #48]
     6c0:	mov	x24, x0
     6c4:	mov	x23, x4
     6c8:	stp	x25, x26, [sp, #64]
     6cc:	mov	x25, x1
     6d0:	mov	x26, x2
     6d4:	stp	x27, x28, [sp, #80]
     6d8:	mov	x27, x3
     6dc:	str	xzr, [x4]
     6e0:	add	x4, sp, #0x60
     6e4:	str	xzr, [x5]
     6e8:	mov	x5, #0x1c                  	// #28
     6ec:	str	xzr, [x6]
     6f0:	mov	x6, #0x0                   	// #0
     6f4:	str	xzr, [x7]
     6f8:	mov	x7, #0x0                   	// #0
     6fc:	bl	230 <read_bfs_file>
     700:	mov	w28, w0
     704:	cbnz	w0, 73c <read_b_node+0x9c>
     708:	ldrh	w1, [sp, #122]
     70c:	mov	w28, #0xa                   	// #10
     710:	ldrh	w5, [sp, #120]
     714:	add	x1, x1, #0x23
     718:	and	x1, x1, #0xfffffffffffffff8
     71c:	umaddl	x28, w28, w5, x1
     720:	mov	x0, x28
     724:	bl	0 <grub_malloc>
     728:	mov	x19, x0
     72c:	cbnz	x0, 75c <read_b_node+0xbc>
     730:	adrp	x0, 0 <bfs_strcmp>
     734:	ldr	x0, [x0]
     738:	ldr	w28, [x0]
     73c:	mov	w0, w28
     740:	ldp	x19, x20, [sp, #16]
     744:	ldp	x21, x22, [sp, #32]
     748:	ldp	x23, x24, [sp, #48]
     74c:	ldp	x25, x26, [sp, #64]
     750:	ldp	x27, x28, [sp, #80]
     754:	ldp	x29, x30, [sp], #128
     758:	ret
     75c:	mov	x5, x28
     760:	mov	x4, x0
     764:	mov	x3, x27
     768:	mov	x2, x26
     76c:	mov	x1, x25
     770:	mov	x0, x24
     774:	mov	x7, #0x0                   	// #0
     778:	mov	x6, #0x0                   	// #0
     77c:	bl	230 <read_bfs_file>
     780:	mov	w28, w0
     784:	cbz	w0, 794 <read_b_node+0xf4>
     788:	mov	x0, x19
     78c:	bl	0 <grub_free>
     790:	b	73c <read_b_node+0x9c>
     794:	ldrh	w4, [sp, #122]
     798:	add	x0, x19, #0x1c
     79c:	str	x19, [x23]
     7a0:	add	x4, x4, #0x23
     7a4:	str	x0, [x22]
     7a8:	and	x4, x4, #0xfffffffffffffff8
     7ac:	add	x19, x19, x4
     7b0:	ldrh	w4, [sp, #120]
     7b4:	str	x19, [x21]
     7b8:	add	x19, x19, x4, lsl #1
     7bc:	str	x19, [x20]
     7c0:	b	73c <read_b_node+0x9c>
     7c4:	nop
	...

00000000000007d0 <grub_bfs_read>:
     7d0:	stp	x29, x30, [sp, #-32]!
     7d4:	mov	x4, x1
     7d8:	mov	x5, x2
     7dc:	mov	x29, sp
     7e0:	ldr	x8, [x0, #8]
     7e4:	ldp	x1, x6, [x0, #80]
     7e8:	ldr	x3, [x0, #24]
     7ec:	ldr	x7, [x0, #96]
     7f0:	ldr	x0, [x8]
     7f4:	str	x19, [sp, #16]
     7f8:	mov	x19, x2
     7fc:	add	x2, x1, #0x7c
     800:	bl	230 <read_bfs_file>
     804:	cmp	w0, #0x0
     808:	csinv	x0, x19, xzr, eq  // eq = none
     80c:	ldr	x19, [sp, #16]
     810:	ldp	x29, x30, [sp], #32
     814:	ret

0000000000000818 <find_in_b_tree>:
     818:	stp	x29, x30, [sp, #-144]!
     81c:	mov	x7, #0x0                   	// #0
     820:	mov	x6, #0x0                   	// #0
     824:	mov	x29, sp
     828:	mov	x5, #0x20                  	// #32
     82c:	stp	x19, x20, [sp, #16]
     830:	stp	x21, x22, [sp, #32]
     834:	mov	x21, x3
     838:	mov	x22, x4
     83c:	mov	x3, #0x0                   	// #0
     840:	add	x4, sp, #0x70
     844:	stp	x23, x24, [sp, #48]
     848:	mov	x23, x0
     84c:	mov	x24, x1
     850:	stp	x25, x26, [sp, #64]
     854:	mov	x25, x2
     858:	bl	230 <read_bfs_file>
     85c:	mov	w19, w0
     860:	cbnz	w0, 94c <find_in_b_tree+0x134>
     864:	ldr	w20, [sp, #120]
     868:	mov	w26, #0x1                   	// #1
     86c:	ldr	x19, [sp, #128]
     870:	sub	w20, w20, #0x1
     874:	mov	x3, x19
     878:	add	x7, sp, #0x68
     87c:	add	x6, sp, #0x60
     880:	add	x5, sp, #0x58
     884:	add	x4, sp, #0x50
     888:	mov	x2, x25
     88c:	mov	x1, x24
     890:	mov	x0, x23
     894:	bl	6a0 <read_b_node>
     898:	mov	w19, w0
     89c:	cbnz	w0, 94c <find_in_b_tree+0x134>
     8a0:	ldr	x8, [sp, #80]
     8a4:	ldrh	w11, [x8, #24]
     8a8:	cbnz	w11, 8d0 <find_in_b_tree+0xb8>
     8ac:	mov	x0, x8
     8b0:	bl	0 <grub_free>
     8b4:	adrp	x0, 0 <bfs_strcmp>
     8b8:	mov	x2, x21
     8bc:	ldr	x1, [x0]
     8c0:	mov	w0, #0x5                   	// #5
     8c4:	bl	0 <grub_error>
     8c8:	mov	w19, w0
     8cc:	b	94c <find_in_b_tree+0x134>
     8d0:	mov	w0, #0x0                   	// #0
     8d4:	mov	w12, w0
     8d8:	add	w0, w0, #0x1
     8dc:	asr	w1, w11, w0
     8e0:	cbnz	w1, 8d4 <find_in_b_tree+0xbc>
     8e4:	ldp	x14, x13, [sp, #88]
     8e8:	mov	w9, #0x0                   	// #0
     8ec:	lsl	w10, w26, w12
     8f0:	orr	w10, w10, w9
     8f4:	cmp	w10, w11
     8f8:	b.cs	970 <find_in_b_tree+0x158>  // b.hs, b.nlast
     8fc:	ldrh	w1, [x13, w10, uxtw #1]
     900:	sub	w0, w10, #0x1
     904:	ldrh	w2, [x8, #26]
     908:	mov	w15, w10
     90c:	cmp	w2, w1
     910:	ldrh	w0, [x13, x0, lsl #1]
     914:	csel	w2, w2, w1, ls  // ls = plast
     918:	mov	x1, x21
     91c:	and	w2, w2, #0xffff
     920:	sub	w2, w2, w0
     924:	add	x0, x14, w0, uxth
     928:	sxtw	x2, w2
     92c:	bl	0 <bfs_strcmp>
     930:	orr	w1, w20, w0
     934:	cbnz	w1, 968 <find_in_b_tree+0x150>
     938:	ldr	x0, [sp, #104]
     93c:	ldr	x0, [x0, x15, lsl #3]
     940:	str	x0, [x22]
     944:	mov	x0, x8
     948:	bl	0 <grub_free>
     94c:	mov	w0, w19
     950:	ldp	x19, x20, [sp, #16]
     954:	ldp	x21, x22, [sp, #32]
     958:	ldp	x23, x24, [sp, #48]
     95c:	ldp	x25, x26, [sp, #64]
     960:	ldp	x29, x30, [sp], #144
     964:	ret
     968:	cmp	w0, #0x0
     96c:	csel	w9, w9, w10, ge  // ge = tcont
     970:	sub	w12, w12, #0x1
     974:	cmn	w12, #0x1
     978:	b.ne	8ec <find_in_b_tree+0xd4>  // b.any
     97c:	cbnz	w9, a00 <find_in_b_tree+0x1e8>
     980:	ldrh	w0, [x13]
     984:	mov	x1, x21
     988:	ldrh	w2, [x8, #26]
     98c:	cmp	w2, w0
     990:	csel	w2, w2, w0, ls  // ls = plast
     994:	mov	x0, x14
     998:	and	x2, x2, #0xffff
     99c:	bl	0 <bfs_strcmp>
     9a0:	orr	w1, w20, w0
     9a4:	cbnz	w1, 9c4 <find_in_b_tree+0x1ac>
     9a8:	ldr	x0, [sp, #104]
     9ac:	mov	w19, #0x0                   	// #0
     9b0:	ldr	x0, [x0]
     9b4:	str	x0, [x22]
     9b8:	mov	x0, x8
     9bc:	bl	0 <grub_free>
     9c0:	b	94c <find_in_b_tree+0x134>
     9c4:	cmp	w0, #0x0
     9c8:	ccmp	w20, #0x0, #0x4, ge  // ge = tcont
     9cc:	b.eq	9e8 <find_in_b_tree+0x1d0>  // b.none
     9d0:	ldr	x0, [sp, #104]
     9d4:	ldr	x19, [x0]
     9d8:	mov	x0, x8
     9dc:	sub	w20, w20, #0x1
     9e0:	bl	0 <grub_free>
     9e4:	b	874 <find_in_b_tree+0x5c>
     9e8:	cbz	w20, a1c <find_in_b_tree+0x204>
     9ec:	cmp	w11, #0x1
     9f0:	b.ls	a1c <find_in_b_tree+0x204>  // b.plast
     9f4:	ldr	x0, [sp, #104]
     9f8:	ldr	x19, [x0, #8]
     9fc:	b	9d8 <find_in_b_tree+0x1c0>
     a00:	cbz	w20, a1c <find_in_b_tree+0x204>
     a04:	add	w9, w9, #0x1
     a08:	cmp	w9, w11
     a0c:	b.cs	a1c <find_in_b_tree+0x204>  // b.hs, b.nlast
     a10:	ldr	x0, [sp, #104]
     a14:	ldr	x19, [x0, w9, uxtw #3]
     a18:	b	9d8 <find_in_b_tree+0x1c0>
     a1c:	ldr	x19, [x8, #16]
     a20:	mov	x0, x8
     a24:	cmn	x19, #0x1
     a28:	b.eq	8b0 <find_in_b_tree+0x98>  // b.none
     a2c:	b	9dc <find_in_b_tree+0x1c4>
	...

0000000000000a38 <lookup_file>:
     a38:	stp	x29, x30, [sp, #-64]!
     a3c:	mov	x29, sp
     a40:	stp	x19, x20, [sp, #16]
     a44:	mov	x20, x0
     a48:	add	x4, sp, #0x38
     a4c:	stp	x21, x22, [sp, #32]
     a50:	mov	x22, x2
     a54:	mov	x21, x3
     a58:	add	x2, x0, #0x10
     a5c:	mov	x3, x1
     a60:	ldr	x1, [x0, #8]
     a64:	str	xzr, [sp, #56]
     a68:	ldr	x0, [x0]
     a6c:	bl	818 <find_in_b_tree>
     a70:	cbnz	w0, a90 <lookup_file+0x58>
     a74:	mov	x0, #0xf8                  	// #248
     a78:	bl	0 <grub_malloc>
     a7c:	str	x0, [x22]
     a80:	cbnz	x0, aa0 <lookup_file+0x68>
     a84:	adrp	x0, 0 <bfs_strcmp>
     a88:	ldr	x0, [x0]
     a8c:	ldr	w0, [x0]
     a90:	ldp	x19, x20, [sp, #16]
     a94:	ldp	x21, x22, [sp, #32]
     a98:	ldp	x29, x30, [sp], #64
     a9c:	ret
     aa0:	ldr	x1, [x20]
     aa4:	str	x1, [x0]
     aa8:	ldr	x1, [x20, #8]
     aac:	str	x1, [x0, #8]
     ab0:	add	x19, x0, #0x10
     ab4:	mov	x3, #0xe8                  	// #232
     ab8:	ldr	x0, [x20, #8]
     abc:	mov	x4, x19
     ac0:	ldr	x1, [sp, #56]
     ac4:	mov	x2, #0x0                   	// #0
     ac8:	ldr	w0, [x0, #44]
     acc:	sub	w0, w0, #0x9
     ad0:	lsl	x1, x1, x0
     ad4:	ldr	x0, [x20]
     ad8:	bl	0 <grub_disk_read>
     adc:	cbz	w0, aec <lookup_file+0xb4>
     ae0:	ldr	x0, [x22]
     ae4:	bl	0 <grub_free>
     ae8:	b	a84 <lookup_file+0x4c>
     aec:	ldr	w1, [x19, #20]
     af0:	and	w1, w1, #0xe000
     af4:	cmp	w1, #0x4, lsl #12
     af8:	b.eq	b10 <lookup_file+0xd8>  // b.none
     afc:	cmp	w1, #0xa, lsl #12
     b00:	mov	w1, #0x3                   	// #3
     b04:	csinc	w1, w1, wzr, eq  // eq = none
     b08:	str	w1, [x21]
     b0c:	b	a90 <lookup_file+0x58>
     b10:	mov	w1, #0x2                   	// #2
     b14:	b	b08 <lookup_file+0xd0>
	...

0000000000000b20 <grub_bfs_uuid>:
     b20:	stp	x29, x30, [sp, #-240]!
     b24:	mov	x29, sp
     b28:	stp	x19, x20, [sp, #16]
     b2c:	mov	x20, x0
     b30:	ldr	x0, [x0]
     b34:	stp	x21, x22, [sp, #32]
     b38:	stp	x23, x24, [sp, #48]
     b3c:	mov	x23, x1
     b40:	stp	x25, x26, [sp, #64]
     b44:	str	x27, [sp, #80]
     b48:	str	xzr, [x1]
     b4c:	add	x1, sp, #0x70
     b50:	bl	f8 <mount>
     b54:	mov	w21, w0
     b58:	cbnz	w0, b78 <grub_bfs_uuid+0x58>
     b5c:	ldr	w0, [sp, #152]
     b60:	bl	0 <grub_malloc>
     b64:	mov	x19, x0
     b68:	cbnz	x0, b98 <grub_bfs_uuid+0x78>
     b6c:	adrp	x0, 0 <bfs_strcmp>
     b70:	ldr	x0, [x0]
     b74:	ldr	w21, [x0]
     b78:	mov	w0, w21
     b7c:	ldp	x19, x20, [sp, #16]
     b80:	ldp	x21, x22, [sp, #32]
     b84:	ldp	x23, x24, [sp, #48]
     b88:	ldp	x25, x26, [sp, #64]
     b8c:	ldr	x27, [sp, #80]
     b90:	ldp	x29, x30, [sp], #240
     b94:	ret
     b98:	mov	x4, x0
     b9c:	add	x0, sp, #0x70
     ba0:	mov	x1, x0
     ba4:	ldr	w5, [sp, #152]
     ba8:	ldr	x0, [x20]
     bac:	add	x2, sp, #0xe4
     bb0:	mov	x3, #0x0                   	// #0
     bb4:	bl	200 <read_extent.constprop.0>
     bb8:	mov	w21, w0
     bbc:	cbz	w0, bcc <grub_bfs_uuid+0xac>
     bc0:	mov	x0, x19
     bc4:	bl	0 <grub_free>
     bc8:	b	b78 <grub_bfs_uuid+0x58>
     bcc:	ldr	w26, [sp, #152]
     bd0:	adrp	x27, 0 <bfs_strcmp>
     bd4:	ldr	x24, [x20]
     bd8:	add	x26, x19, x26
     bdc:	add	x20, x19, #0xe8
     be0:	add	x1, x20, #0x8
     be4:	cmp	x26, x1
     be8:	b.hi	c90 <grub_bfs_uuid+0x170>  // b.pmore
     bec:	ldrh	w0, [x19, #58]
     bf0:	cbz	w0, bc0 <grub_bfs_uuid+0xa0>
     bf4:	ldr	w5, [sp, #152]
     bf8:	mov	x4, x19
     bfc:	add	x2, x19, #0x34
     c00:	add	x1, sp, #0x70
     c04:	mov	x0, x24
     c08:	mov	x3, #0x0                   	// #0
     c0c:	bl	200 <read_extent.constprop.0>
     c10:	cbnz	w0, bc0 <grub_bfs_uuid+0xa0>
     c14:	adrp	x0, 0 <bfs_strcmp>
     c18:	add	x4, sp, #0x68
     c1c:	mov	x2, x19
     c20:	add	x1, sp, #0x70
     c24:	ldr	x3, [x0]
     c28:	mov	x0, x24
     c2c:	bl	818 <find_in_b_tree>
     c30:	cbnz	w0, bc0 <grub_bfs_uuid+0xa0>
     c34:	ldp	w3, w0, [sp, #152]
     c38:	mov	x4, x19
     c3c:	ldr	x1, [sp, #104]
     c40:	sub	w0, w0, #0x9
     c44:	mov	x2, #0x0                   	// #0
     c48:	lsl	x1, x1, x0
     c4c:	mov	x0, x24
     c50:	bl	0 <grub_disk_read>
     c54:	ldr	x20, [x19, #208]
     c58:	mov	x5, #0x8                   	// #8
     c5c:	add	x4, sp, #0x60
     c60:	mov	x2, x19
     c64:	cmp	x20, #0x8
     c68:	add	x1, sp, #0x70
     c6c:	csel	x20, x20, x5, ls  // ls = plast
     c70:	mov	x0, x24
     c74:	mov	x5, x20
     c78:	mov	x7, #0x0                   	// #0
     c7c:	mov	x6, #0x0                   	// #0
     c80:	mov	x3, #0x0                   	// #0
     c84:	bl	230 <read_bfs_file>
     c88:	cbnz	w0, bc0 <grub_bfs_uuid+0xa0>
     c8c:	b	cec <grub_bfs_uuid+0x1cc>
     c90:	ldrh	w2, [x20, #4]
     c94:	cbz	w2, bec <grub_bfs_uuid+0xcc>
     c98:	ldr	x0, [x27]
     c9c:	and	x2, x2, #0xffff
     ca0:	ldrh	w22, [x20, #6]
     ca4:	add	x25, x2, #0x3
     ca8:	add	x25, x1, x25
     cac:	add	x22, x22, #0x1
     cb0:	add	x22, x25, x22
     cb4:	bl	0 <grub_memcmp>
     cb8:	cbnz	w0, d0c <grub_bfs_uuid+0x1ec>
     cbc:	ldrh	w1, [x20, #4]
     cc0:	ldr	x0, [x27]
     cc4:	ldrb	w0, [x1, x0]
     cc8:	cbnz	w0, d0c <grub_bfs_uuid+0x1ec>
     ccc:	ldrh	w20, [x20, #6]
     cd0:	mov	x0, #0x8                   	// #8
     cd4:	mov	x1, x25
     cd8:	cmp	x20, #0x8
     cdc:	csel	x20, x20, x0, cs  // cs = hs, nlast
     ce0:	add	x0, sp, #0x60
     ce4:	mov	x2, x20
     ce8:	bl	0 <grub_memmove>
     cec:	cmp	x20, #0x8
     cf0:	b.ne	bc0 <grub_bfs_uuid+0xa0>  // b.any
     cf4:	adrp	x0, 0 <bfs_strcmp>
     cf8:	ldr	x1, [sp, #96]
     cfc:	ldr	x0, [x0]
     d00:	bl	0 <grub_xasprintf>
     d04:	str	x0, [x23]
     d08:	b	bc0 <grub_bfs_uuid+0xa0>
     d0c:	mov	x20, x22
     d10:	b	be0 <grub_bfs_uuid+0xc0>
     d14:	nop
	...

0000000000000d30 <read_symlink>:
     d30:	stp	x29, x30, [sp, #-48]!
     d34:	mov	x29, sp
     d38:	stp	x19, x20, [sp, #16]
     d3c:	mov	x20, x0
     d40:	ldr	w0, [x0, #40]
     d44:	str	x21, [sp, #32]
     d48:	tbnz	w0, #6, d80 <read_symlink+0x50>
     d4c:	mov	x0, #0x91                  	// #145
     d50:	bl	0 <grub_malloc>
     d54:	mov	x19, x0
     d58:	cbz	x0, d6c <read_symlink+0x3c>
     d5c:	add	x1, x20, #0x58
     d60:	mov	x2, #0x90                  	// #144
     d64:	bl	0 <grub_memmove>
     d68:	strb	wzr, [x19, #144]
     d6c:	mov	x0, x19
     d70:	ldp	x19, x20, [sp, #16]
     d74:	ldr	x21, [sp, #32]
     d78:	ldp	x29, x30, [sp], #48
     d7c:	ret
     d80:	ldr	x21, [x20, #224]
     d84:	add	x0, x21, #0x1
     d88:	bl	0 <grub_malloc>
     d8c:	mov	x19, x0
     d90:	cbz	x0, d6c <read_symlink+0x3c>
     d94:	mov	x4, x0
     d98:	mov	x5, x21
     d9c:	ldp	x0, x1, [x20]
     da0:	add	x2, x20, #0x10
     da4:	mov	x7, #0x0                   	// #0
     da8:	mov	x6, #0x0                   	// #0
     dac:	mov	x3, #0x0                   	// #0
     db0:	bl	230 <read_bfs_file>
     db4:	cbz	w0, dc8 <read_symlink+0x98>
     db8:	mov	x0, x19
     dbc:	mov	x19, #0x0                   	// #0
     dc0:	bl	0 <grub_free>
     dc4:	b	d6c <read_symlink+0x3c>
     dc8:	strb	wzr, [x19, x21]
     dcc:	b	d6c <read_symlink+0x3c>

0000000000000dd0 <find_file>:
     dd0:	stp	x29, x30, [sp, #-320]!
     dd4:	mov	x29, sp
     dd8:	stp	x19, x20, [sp, #16]
     ddc:	mov	x19, x2
     de0:	mov	x20, x1
     de4:	mov	x2, #0xe8                  	// #232
     de8:	mov	w1, #0x0                   	// #0
     dec:	stp	x21, x22, [sp, #32]
     df0:	mov	x22, x3
     df4:	add	x21, sp, #0x48
     df8:	stp	x23, x24, [sp, #48]
     dfc:	mov	w24, w4
     e00:	mov	x23, x0
     e04:	add	x0, sp, #0x58
     e08:	bl	0 <memset>
     e0c:	add	x2, x19, #0x74
     e10:	mov	x1, x19
     e14:	add	x4, x21, #0x10
     e18:	mov	x0, x20
     e1c:	mov	x5, #0xe8                  	// #232
     e20:	mov	x3, #0x0                   	// #0
     e24:	stp	x20, x19, [sp, #72]
     e28:	bl	200 <read_extent.constprop.0>
     e2c:	mov	w19, w0
     e30:	cbnz	w0, e84 <find_file+0xb4>
     e34:	adrp	x0, 0 <bfs_strcmp>
     e38:	mov	w5, w24
     e3c:	add	x2, sp, #0x40
     e40:	mov	x1, x21
     e44:	ldr	x4, [x0]
     e48:	adrp	x0, 0 <bfs_strcmp>
     e4c:	ldr	x3, [x0]
     e50:	mov	x0, x23
     e54:	bl	0 <grub_fshelp_find_file_lookup>
     e58:	mov	w19, w0
     e5c:	cbnz	w0, e74 <find_file+0xa4>
     e60:	ldr	x1, [sp, #64]
     e64:	mov	x0, x22
     e68:	mov	x2, #0xe8                  	// #232
     e6c:	add	x1, x1, #0x10
     e70:	bl	0 <grub_memmove>
     e74:	ldr	x0, [sp, #64]
     e78:	cmp	x0, x21
     e7c:	b.eq	e84 <find_file+0xb4>  // b.none
     e80:	bl	0 <grub_free>
     e84:	mov	w0, w19
     e88:	ldp	x19, x20, [sp, #16]
     e8c:	ldp	x21, x22, [sp, #32]
     e90:	ldp	x23, x24, [sp, #48]
     e94:	ldp	x29, x30, [sp], #320
     e98:	ret
     e9c:	nop
	...

0000000000000eb0 <grub_bfs_dir>:
     eb0:	sub	sp, sp, #0x220
     eb4:	stp	x29, x30, [sp]
     eb8:	mov	x29, sp
     ebc:	stp	x19, x20, [sp, #16]
     ec0:	mov	x20, x0
     ec4:	mov	x19, x3
     ec8:	add	x0, sp, #0xb8
     ecc:	stp	x21, x22, [sp, #32]
     ed0:	mov	x22, x2
     ed4:	mov	x21, x1
     ed8:	mov	x2, #0x80                  	// #128
     edc:	mov	w1, #0x0                   	// #0
     ee0:	stp	x23, x24, [sp, #48]
     ee4:	bl	0 <memset>
     ee8:	ldr	x0, [x20]
     eec:	str	x19, [sp, #176]
     ef0:	add	x19, sp, #0xb8
     ef4:	stp	x20, x22, [sp, #160]
     ef8:	mov	x1, x19
     efc:	bl	f8 <mount>
     f00:	cbnz	w0, 107c <grub_bfs_dir+0x1cc>
     f04:	ldr	x1, [x20]
     f08:	add	x3, sp, #0x138
     f0c:	mov	x2, x19
     f10:	mov	x0, x21
     f14:	mov	w4, #0x2                   	// #2
     f18:	bl	dd0 <find_file>
     f1c:	cbnz	w0, 107c <grub_bfs_dir+0x1cc>
     f20:	ldr	x22, [x20]
     f24:	add	x4, sp, #0x80
     f28:	add	x2, sp, #0x138
     f2c:	mov	x1, x19
     f30:	mov	x0, x22
     f34:	mov	x7, #0x0                   	// #0
     f38:	mov	x6, #0x0                   	// #0
     f3c:	mov	x5, #0x20                  	// #32
     f40:	mov	x3, #0x0                   	// #0
     f44:	bl	230 <read_bfs_file>
     f48:	cbnz	w0, 1070 <grub_bfs_dir+0x1c0>
     f4c:	ldr	w21, [sp, #136]
     f50:	ldr	x20, [sp, #144]
     f54:	sub	w21, w21, #0x1
     f58:	cbnz	w21, fb4 <grub_bfs_dir+0x104>
     f5c:	add	x21, sp, #0xb8
     f60:	add	x7, sp, #0x60
     f64:	add	x6, sp, #0x58
     f68:	add	x5, sp, #0x50
     f6c:	add	x4, sp, #0x48
     f70:	mov	x3, x20
     f74:	add	x2, sp, #0x138
     f78:	mov	x1, x21
     f7c:	mov	x0, x22
     f80:	bl	6a0 <read_b_node>
     f84:	cbnz	w0, 1070 <grub_bfs_dir+0x1c0>
     f88:	mov	x20, #0x0                   	// #0
     f8c:	mov	w3, #0x0                   	// #0
     f90:	ldr	x0, [sp, #72]
     f94:	ldrh	w1, [x0, #24]
     f98:	cmp	w1, w20
     f9c:	b.hi	1024 <grub_bfs_dir+0x174>  // b.pmore
     fa0:	ldr	x20, [x0, #8]
     fa4:	bl	0 <grub_free>
     fa8:	cmn	x20, #0x1
     fac:	b.ne	f60 <grub_bfs_dir+0xb0>  // b.any
     fb0:	b	1070 <grub_bfs_dir+0x1c0>
     fb4:	add	x4, sp, #0x60
     fb8:	mov	x3, x20
     fbc:	add	x2, sp, #0x138
     fc0:	mov	x1, x19
     fc4:	mov	x0, x22
     fc8:	mov	x7, #0x0                   	// #0
     fcc:	mov	x6, #0x0                   	// #0
     fd0:	mov	x5, #0x1c                  	// #28
     fd4:	bl	230 <read_bfs_file>
     fd8:	cbnz	w0, 1070 <grub_bfs_dir+0x1c0>
     fdc:	ldrh	w3, [sp, #122]
     fe0:	add	x4, sp, #0x58
     fe4:	ldrh	w0, [sp, #120]
     fe8:	add	x2, sp, #0x138
     fec:	add	x3, x3, #0x23
     ff0:	mov	x1, x19
     ff4:	and	x3, x3, #0xfffffffffffffff8
     ff8:	mov	x7, #0x0                   	// #0
     ffc:	add	x3, x3, w0, uxtw #1
    1000:	mov	x6, #0x0                   	// #0
    1004:	add	x3, x3, x20
    1008:	mov	x0, x22
    100c:	mov	x5, #0x8                   	// #8
    1010:	sub	w21, w21, #0x1
    1014:	bl	230 <read_bfs_file>
    1018:	cbnz	w0, 1070 <grub_bfs_dir+0x1c0>
    101c:	ldr	x20, [sp, #88]
    1020:	b	f58 <grub_bfs_dir+0xa8>
    1024:	ldrh	w19, [x0, #26]
    1028:	add	x2, sp, #0xa0
    102c:	ldp	x0, x1, [sp, #80]
    1030:	ldrh	w1, [x1, x20, lsl #1]
    1034:	cmp	w19, w1
    1038:	csel	w19, w19, w1, ls  // ls = plast
    103c:	and	w23, w19, #0xffff
    1040:	and	x19, x19, #0xffff
    1044:	ldrb	w24, [x0, x19]
    1048:	strb	wzr, [x0, x19]
    104c:	ldr	x0, [sp, #96]
    1050:	ldr	x1, [x0, x20, lsl #3]
    1054:	add	x20, x20, #0x1
    1058:	ldr	x0, [sp, #80]
    105c:	add	x0, x0, w3, uxth
    1060:	bl	64 <grub_bfs_dir_iter>
    1064:	cbz	w0, 1094 <grub_bfs_dir+0x1e4>
    1068:	ldr	x0, [sp, #72]
    106c:	bl	0 <grub_free>
    1070:	adrp	x0, 0 <bfs_strcmp>
    1074:	ldr	x0, [x0]
    1078:	ldr	w0, [x0]
    107c:	ldp	x29, x30, [sp]
    1080:	ldp	x19, x20, [sp, #16]
    1084:	ldp	x21, x22, [sp, #32]
    1088:	ldp	x23, x24, [sp, #48]
    108c:	add	sp, sp, #0x220
    1090:	ret
    1094:	ldr	x0, [sp, #80]
    1098:	mov	w3, w23
    109c:	strb	w24, [x0, x19]
    10a0:	b	f90 <grub_bfs_dir+0xe0>
    10a4:	nop
	...

00000000000010b0 <grub_bfs_open>:
    10b0:	stp	x29, x30, [sp, #-416]!
    10b4:	mov	x29, sp
    10b8:	stp	x19, x20, [sp, #16]
    10bc:	mov	x20, x0
    10c0:	ldr	x0, [x0, #8]
    10c4:	ldr	x0, [x0]
    10c8:	str	x21, [sp, #32]
    10cc:	mov	x21, x1
    10d0:	add	x1, sp, #0x38
    10d4:	bl	f8 <mount>
    10d8:	mov	w19, w0
    10dc:	cbnz	w0, 1120 <grub_bfs_open+0x70>
    10e0:	ldr	x0, [x20, #8]
    10e4:	add	x3, sp, #0xb8
    10e8:	add	x2, sp, #0x38
    10ec:	mov	w4, #0x1                   	// #1
    10f0:	ldr	x1, [x0]
    10f4:	mov	x0, x21
    10f8:	bl	dd0 <find_file>
    10fc:	mov	w19, w0
    1100:	cbnz	w0, 1120 <grub_bfs_open+0x70>
    1104:	mov	x0, #0x164                 	// #356
    1108:	bl	0 <grub_zalloc>
    110c:	mov	x21, x0
    1110:	cbnz	x0, 1134 <grub_bfs_open+0x84>
    1114:	adrp	x0, 0 <bfs_strcmp>
    1118:	ldr	x0, [x0]
    111c:	ldr	w19, [x0]
    1120:	mov	w0, w19
    1124:	ldp	x19, x20, [sp, #16]
    1128:	ldr	x21, [sp, #32]
    112c:	ldp	x29, x30, [sp], #416
    1130:	ret
    1134:	add	x1, sp, #0x38
    1138:	mov	x2, #0x7c                  	// #124
    113c:	bl	0 <memcpy>
    1140:	add	x1, sp, #0xb8
    1144:	add	x0, x21, #0x7c
    1148:	mov	x2, #0xe8                  	// #232
    114c:	bl	0 <grub_memmove>
    1150:	ldr	x0, [sp, #392]
    1154:	str	x0, [x20, #64]
    1158:	str	x21, [x20, #80]
    115c:	b	1120 <grub_bfs_open+0x70>
	...

0000000000001168 <grub_mod_init>:
    1168:	adrp	x0, 0 <bfs_strcmp>
    116c:	ldr	x1, [x0]
    1170:	adrp	x0, 0 <bfs_strcmp>
    1174:	ldr	x0, [x0]
    1178:	b	0 <grub_list_push>
    117c:	nop
	...

0000000000001190 <grub_mod_fini>:
    1190:	adrp	x0, 0 <bfs_strcmp>
    1194:	ldr	x0, [x0]
    1198:	b	0 <grub_list_remove>
    119c:	nop
	...
