
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_sha256.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sha256_init>:
       0:	sub	sp, sp, #0x20
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	str	x0, [sp, #24]
      10:	ldr	x0, [sp, #24]
      14:	mov	w1, #0xe667                	// #58983
      18:	movk	w1, #0x6a09, lsl #16
      1c:	str	w1, [x0]
      20:	ldr	x0, [sp, #24]
      24:	mov	w1, #0xae85                	// #44677
      28:	movk	w1, #0xbb67, lsl #16
      2c:	str	w1, [x0, #4]
      30:	ldr	x0, [sp, #24]
      34:	mov	w1, #0xf372                	// #62322
      38:	movk	w1, #0x3c6e, lsl #16
      3c:	str	w1, [x0, #8]
      40:	ldr	x0, [sp, #24]
      44:	mov	w1, #0xf53a                	// #62778
      48:	movk	w1, #0xa54f, lsl #16
      4c:	str	w1, [x0, #12]
      50:	ldr	x0, [sp, #24]
      54:	mov	w1, #0x527f                	// #21119
      58:	movk	w1, #0x510e, lsl #16
      5c:	str	w1, [x0, #16]
      60:	ldr	x0, [sp, #24]
      64:	mov	w1, #0x688c                	// #26764
      68:	movk	w1, #0x9b05, lsl #16
      6c:	str	w1, [x0, #20]
      70:	ldr	x0, [sp, #24]
      74:	mov	w1, #0xd9ab                	// #55723
      78:	movk	w1, #0x1f83, lsl #16
      7c:	str	w1, [x0, #24]
      80:	ldr	x0, [sp, #24]
      84:	mov	w1, #0xcd19                	// #52505
      88:	movk	w1, #0x5be0, lsl #16
      8c:	str	w1, [x0, #28]
      90:	ldr	x0, [sp, #24]
      94:	str	wzr, [x0, #32]
      98:	ldr	x0, [sp, #24]
      9c:	str	wzr, [x0, #100]
      a0:	nop
      a4:	add	sp, sp, #0x20
      a8:	ret

00000000000000ac <sha224_init>:
      ac:	sub	sp, sp, #0x20
      b0:	str	x0, [sp, #8]
      b4:	ldr	x0, [sp, #8]
      b8:	str	x0, [sp, #24]
      bc:	ldr	x0, [sp, #24]
      c0:	mov	w1, #0x9ed8                	// #40664
      c4:	movk	w1, #0xc105, lsl #16
      c8:	str	w1, [x0]
      cc:	ldr	x0, [sp, #24]
      d0:	mov	w1, #0xd507                	// #54535
      d4:	movk	w1, #0x367c, lsl #16
      d8:	str	w1, [x0, #4]
      dc:	ldr	x0, [sp, #24]
      e0:	mov	w1, #0xdd17                	// #56599
      e4:	movk	w1, #0x3070, lsl #16
      e8:	str	w1, [x0, #8]
      ec:	ldr	x0, [sp, #24]
      f0:	mov	w1, #0x5939                	// #22841
      f4:	movk	w1, #0xf70e, lsl #16
      f8:	str	w1, [x0, #12]
      fc:	ldr	x0, [sp, #24]
     100:	mov	w1, #0xb31                 	// #2865
     104:	movk	w1, #0xffc0, lsl #16
     108:	str	w1, [x0, #16]
     10c:	ldr	x0, [sp, #24]
     110:	mov	w1, #0x1511                	// #5393
     114:	movk	w1, #0x6858, lsl #16
     118:	str	w1, [x0, #20]
     11c:	ldr	x0, [sp, #24]
     120:	mov	w1, #0x8fa7                	// #36775
     124:	movk	w1, #0x64f9, lsl #16
     128:	str	w1, [x0, #24]
     12c:	ldr	x0, [sp, #24]
     130:	mov	w1, #0x4fa4                	// #20388
     134:	movk	w1, #0xbefa, lsl #16
     138:	str	w1, [x0, #28]
     13c:	ldr	x0, [sp, #24]
     140:	str	wzr, [x0, #32]
     144:	ldr	x0, [sp, #24]
     148:	str	wzr, [x0, #100]
     14c:	nop
     150:	add	sp, sp, #0x20
     154:	ret

0000000000000158 <Cho>:
     158:	sub	sp, sp, #0x10
     15c:	str	w0, [sp, #12]
     160:	str	w1, [sp, #8]
     164:	str	w2, [sp, #4]
     168:	ldr	w1, [sp, #8]
     16c:	ldr	w0, [sp, #4]
     170:	eor	w1, w1, w0
     174:	ldr	w0, [sp, #12]
     178:	and	w1, w1, w0
     17c:	ldr	w0, [sp, #4]
     180:	eor	w0, w1, w0
     184:	add	sp, sp, #0x10
     188:	ret

000000000000018c <Maj>:
     18c:	sub	sp, sp, #0x10
     190:	str	w0, [sp, #12]
     194:	str	w1, [sp, #8]
     198:	str	w2, [sp, #4]
     19c:	ldr	w1, [sp, #12]
     1a0:	ldr	w0, [sp, #8]
     1a4:	and	w1, w1, w0
     1a8:	ldr	w2, [sp, #12]
     1ac:	ldr	w0, [sp, #8]
     1b0:	orr	w2, w2, w0
     1b4:	ldr	w0, [sp, #4]
     1b8:	and	w0, w2, w0
     1bc:	orr	w0, w1, w0
     1c0:	add	sp, sp, #0x10
     1c4:	ret

00000000000001c8 <Sum0>:
     1c8:	sub	sp, sp, #0x10
     1cc:	str	w0, [sp, #12]
     1d0:	ldr	w0, [sp, #12]
     1d4:	ror	w1, w0, #2
     1d8:	ldr	w0, [sp, #12]
     1dc:	ror	w0, w0, #13
     1e0:	eor	w1, w1, w0
     1e4:	ldr	w0, [sp, #12]
     1e8:	ror	w0, w0, #22
     1ec:	eor	w0, w1, w0
     1f0:	add	sp, sp, #0x10
     1f4:	ret

00000000000001f8 <Sum1>:
     1f8:	sub	sp, sp, #0x10
     1fc:	str	w0, [sp, #12]
     200:	ldr	w0, [sp, #12]
     204:	ror	w1, w0, #6
     208:	ldr	w0, [sp, #12]
     20c:	ror	w0, w0, #11
     210:	eor	w1, w1, w0
     214:	ldr	w0, [sp, #12]
     218:	ror	w0, w0, #25
     21c:	eor	w0, w1, w0
     220:	add	sp, sp, #0x10
     224:	ret

0000000000000228 <transform>:
     228:	stp	x29, x30, [sp, #-432]!
     22c:	mov	x29, sp
     230:	str	x19, [sp, #16]
     234:	str	x0, [sp, #40]
     238:	str	x1, [sp, #32]
     23c:	ldr	x0, [sp, #40]
     240:	ldr	w0, [x0]
     244:	str	w0, [sp, #428]
     248:	ldr	x0, [sp, #40]
     24c:	ldr	w0, [x0, #4]
     250:	str	w0, [sp, #424]
     254:	ldr	x0, [sp, #40]
     258:	ldr	w0, [x0, #8]
     25c:	str	w0, [sp, #420]
     260:	ldr	x0, [sp, #40]
     264:	ldr	w0, [x0, #12]
     268:	str	w0, [sp, #416]
     26c:	ldr	x0, [sp, #40]
     270:	ldr	w0, [x0, #16]
     274:	str	w0, [sp, #412]
     278:	ldr	x0, [sp, #40]
     27c:	ldr	w0, [x0, #20]
     280:	str	w0, [sp, #408]
     284:	ldr	x0, [sp, #40]
     288:	ldr	w0, [x0, #24]
     28c:	str	w0, [sp, #404]
     290:	ldr	x0, [sp, #40]
     294:	ldr	w0, [x0, #28]
     298:	str	w0, [sp, #400]
     29c:	str	wzr, [sp, #396]
     2a0:	add	x0, sp, #0x138
     2a4:	str	x0, [sp, #384]
     2a8:	b	330 <transform+0x108>
     2ac:	ldr	x0, [sp, #32]
     2b0:	add	x1, x0, #0x1
     2b4:	str	x1, [sp, #32]
     2b8:	ldr	x1, [sp, #384]
     2bc:	add	x1, x1, #0x3
     2c0:	ldrb	w0, [x0]
     2c4:	strb	w0, [x1]
     2c8:	ldr	x0, [sp, #32]
     2cc:	add	x1, x0, #0x1
     2d0:	str	x1, [sp, #32]
     2d4:	ldr	x1, [sp, #384]
     2d8:	add	x1, x1, #0x2
     2dc:	ldrb	w0, [x0]
     2e0:	strb	w0, [x1]
     2e4:	ldr	x0, [sp, #32]
     2e8:	add	x1, x0, #0x1
     2ec:	str	x1, [sp, #32]
     2f0:	ldr	x1, [sp, #384]
     2f4:	add	x1, x1, #0x1
     2f8:	ldrb	w0, [x0]
     2fc:	strb	w0, [x1]
     300:	ldr	x0, [sp, #32]
     304:	add	x1, x0, #0x1
     308:	str	x1, [sp, #32]
     30c:	ldrb	w1, [x0]
     310:	ldr	x0, [sp, #384]
     314:	strb	w1, [x0]
     318:	ldr	w0, [sp, #396]
     31c:	add	w0, w0, #0x1
     320:	str	w0, [sp, #396]
     324:	ldr	x0, [sp, #384]
     328:	add	x0, x0, #0x4
     32c:	str	x0, [sp, #384]
     330:	ldr	w0, [sp, #396]
     334:	cmp	w0, #0xf
     338:	b.le	2ac <transform+0x84>
     33c:	str	wzr, [sp, #396]
     340:	b	370 <transform+0x148>
     344:	ldrsw	x0, [sp, #396]
     348:	lsl	x0, x0, #2
     34c:	add	x1, sp, #0x138
     350:	ldr	w2, [x1, x0]
     354:	ldrsw	x0, [sp, #396]
     358:	lsl	x0, x0, #2
     35c:	add	x1, sp, #0x38
     360:	str	w2, [x1, x0]
     364:	ldr	w0, [sp, #396]
     368:	add	w0, w0, #0x1
     36c:	str	w0, [sp, #396]
     370:	ldr	w0, [sp, #396]
     374:	cmp	w0, #0xf
     378:	b.le	344 <transform+0x11c>
     37c:	b	490 <transform+0x268>
     380:	ldr	w0, [sp, #396]
     384:	sub	w0, w0, #0x2
     388:	sxtw	x0, w0
     38c:	lsl	x0, x0, #2
     390:	add	x1, sp, #0x38
     394:	ldr	w0, [x1, x0]
     398:	ror	w1, w0, #17
     39c:	ldr	w0, [sp, #396]
     3a0:	sub	w0, w0, #0x2
     3a4:	sxtw	x0, w0
     3a8:	lsl	x0, x0, #2
     3ac:	add	x2, sp, #0x38
     3b0:	ldr	w0, [x2, x0]
     3b4:	ror	w0, w0, #19
     3b8:	eor	w1, w1, w0
     3bc:	ldr	w0, [sp, #396]
     3c0:	sub	w0, w0, #0x2
     3c4:	sxtw	x0, w0
     3c8:	lsl	x0, x0, #2
     3cc:	add	x2, sp, #0x38
     3d0:	ldr	w0, [x2, x0]
     3d4:	lsr	w0, w0, #10
     3d8:	eor	w1, w1, w0
     3dc:	ldr	w0, [sp, #396]
     3e0:	sub	w0, w0, #0x7
     3e4:	sxtw	x0, w0
     3e8:	lsl	x0, x0, #2
     3ec:	add	x2, sp, #0x38
     3f0:	ldr	w0, [x2, x0]
     3f4:	add	w1, w1, w0
     3f8:	ldr	w0, [sp, #396]
     3fc:	sub	w0, w0, #0xf
     400:	sxtw	x0, w0
     404:	lsl	x0, x0, #2
     408:	add	x2, sp, #0x38
     40c:	ldr	w0, [x2, x0]
     410:	ror	w2, w0, #7
     414:	ldr	w0, [sp, #396]
     418:	sub	w0, w0, #0xf
     41c:	sxtw	x0, w0
     420:	lsl	x0, x0, #2
     424:	add	x3, sp, #0x38
     428:	ldr	w0, [x3, x0]
     42c:	ror	w0, w0, #18
     430:	eor	w2, w2, w0
     434:	ldr	w0, [sp, #396]
     438:	sub	w0, w0, #0xf
     43c:	sxtw	x0, w0
     440:	lsl	x0, x0, #2
     444:	add	x3, sp, #0x38
     448:	ldr	w0, [x3, x0]
     44c:	lsr	w0, w0, #3
     450:	eor	w0, w2, w0
     454:	add	w1, w1, w0
     458:	ldr	w0, [sp, #396]
     45c:	sub	w0, w0, #0x10
     460:	sxtw	x0, w0
     464:	lsl	x0, x0, #2
     468:	add	x2, sp, #0x38
     46c:	ldr	w0, [x2, x0]
     470:	add	w2, w1, w0
     474:	ldrsw	x0, [sp, #396]
     478:	lsl	x0, x0, #2
     47c:	add	x1, sp, #0x38
     480:	str	w2, [x1, x0]
     484:	ldr	w0, [sp, #396]
     488:	add	w0, w0, #0x1
     48c:	str	w0, [sp, #396]
     490:	ldr	w0, [sp, #396]
     494:	cmp	w0, #0x3f
     498:	b.le	380 <transform+0x158>
     49c:	str	wzr, [sp, #396]
     4a0:	b	a00 <transform+0x7d8>
     4a4:	ldr	w0, [sp, #412]
     4a8:	bl	1f8 <Sum1>
     4ac:	mov	w1, w0
     4b0:	ldr	w0, [sp, #400]
     4b4:	add	w19, w1, w0
     4b8:	ldr	w2, [sp, #404]
     4bc:	ldr	w1, [sp, #408]
     4c0:	ldr	w0, [sp, #412]
     4c4:	bl	158 <Cho>
     4c8:	add	w1, w19, w0
     4cc:	adrp	x0, 0 <sha256_init>
     4d0:	add	x0, x0, #0x0
     4d4:	ldr	x0, [x0]
     4d8:	ldrsw	x2, [sp, #396]
     4dc:	ldr	w0, [x0, x2, lsl #2]
     4e0:	add	w1, w1, w0
     4e4:	ldrsw	x0, [sp, #396]
     4e8:	lsl	x0, x0, #2
     4ec:	add	x2, sp, #0x38
     4f0:	ldr	w0, [x2, x0]
     4f4:	add	w0, w1, w0
     4f8:	str	w0, [sp, #380]
     4fc:	ldr	w0, [sp, #428]
     500:	bl	1c8 <Sum0>
     504:	mov	w19, w0
     508:	ldr	w2, [sp, #420]
     50c:	ldr	w1, [sp, #424]
     510:	ldr	w0, [sp, #428]
     514:	bl	18c <Maj>
     518:	add	w0, w19, w0
     51c:	str	w0, [sp, #376]
     520:	ldr	w1, [sp, #416]
     524:	ldr	w0, [sp, #380]
     528:	add	w0, w1, w0
     52c:	str	w0, [sp, #416]
     530:	ldr	w1, [sp, #380]
     534:	ldr	w0, [sp, #376]
     538:	add	w0, w1, w0
     53c:	str	w0, [sp, #400]
     540:	ldr	w0, [sp, #416]
     544:	bl	1f8 <Sum1>
     548:	mov	w1, w0
     54c:	ldr	w0, [sp, #404]
     550:	add	w19, w1, w0
     554:	ldr	w2, [sp, #408]
     558:	ldr	w1, [sp, #412]
     55c:	ldr	w0, [sp, #416]
     560:	bl	158 <Cho>
     564:	add	w1, w19, w0
     568:	ldr	w0, [sp, #396]
     56c:	add	w2, w0, #0x1
     570:	adrp	x0, 0 <sha256_init>
     574:	add	x0, x0, #0x0
     578:	ldr	x0, [x0]
     57c:	sxtw	x2, w2
     580:	ldr	w0, [x0, x2, lsl #2]
     584:	add	w1, w1, w0
     588:	ldr	w0, [sp, #396]
     58c:	add	w0, w0, #0x1
     590:	sxtw	x0, w0
     594:	lsl	x0, x0, #2
     598:	add	x2, sp, #0x38
     59c:	ldr	w0, [x2, x0]
     5a0:	add	w0, w1, w0
     5a4:	str	w0, [sp, #380]
     5a8:	ldr	w0, [sp, #400]
     5ac:	bl	1c8 <Sum0>
     5b0:	mov	w19, w0
     5b4:	ldr	w2, [sp, #424]
     5b8:	ldr	w1, [sp, #428]
     5bc:	ldr	w0, [sp, #400]
     5c0:	bl	18c <Maj>
     5c4:	add	w0, w19, w0
     5c8:	str	w0, [sp, #376]
     5cc:	ldr	w1, [sp, #420]
     5d0:	ldr	w0, [sp, #380]
     5d4:	add	w0, w1, w0
     5d8:	str	w0, [sp, #420]
     5dc:	ldr	w1, [sp, #380]
     5e0:	ldr	w0, [sp, #376]
     5e4:	add	w0, w1, w0
     5e8:	str	w0, [sp, #404]
     5ec:	ldr	w0, [sp, #420]
     5f0:	bl	1f8 <Sum1>
     5f4:	mov	w1, w0
     5f8:	ldr	w0, [sp, #408]
     5fc:	add	w19, w1, w0
     600:	ldr	w2, [sp, #412]
     604:	ldr	w1, [sp, #416]
     608:	ldr	w0, [sp, #420]
     60c:	bl	158 <Cho>
     610:	add	w1, w19, w0
     614:	ldr	w0, [sp, #396]
     618:	add	w2, w0, #0x2
     61c:	adrp	x0, 0 <sha256_init>
     620:	add	x0, x0, #0x0
     624:	ldr	x0, [x0]
     628:	sxtw	x2, w2
     62c:	ldr	w0, [x0, x2, lsl #2]
     630:	add	w1, w1, w0
     634:	ldr	w0, [sp, #396]
     638:	add	w0, w0, #0x2
     63c:	sxtw	x0, w0
     640:	lsl	x0, x0, #2
     644:	add	x2, sp, #0x38
     648:	ldr	w0, [x2, x0]
     64c:	add	w0, w1, w0
     650:	str	w0, [sp, #380]
     654:	ldr	w0, [sp, #404]
     658:	bl	1c8 <Sum0>
     65c:	mov	w19, w0
     660:	ldr	w2, [sp, #428]
     664:	ldr	w1, [sp, #400]
     668:	ldr	w0, [sp, #404]
     66c:	bl	18c <Maj>
     670:	add	w0, w19, w0
     674:	str	w0, [sp, #376]
     678:	ldr	w1, [sp, #424]
     67c:	ldr	w0, [sp, #380]
     680:	add	w0, w1, w0
     684:	str	w0, [sp, #424]
     688:	ldr	w1, [sp, #380]
     68c:	ldr	w0, [sp, #376]
     690:	add	w0, w1, w0
     694:	str	w0, [sp, #408]
     698:	ldr	w0, [sp, #424]
     69c:	bl	1f8 <Sum1>
     6a0:	mov	w1, w0
     6a4:	ldr	w0, [sp, #412]
     6a8:	add	w19, w1, w0
     6ac:	ldr	w2, [sp, #416]
     6b0:	ldr	w1, [sp, #420]
     6b4:	ldr	w0, [sp, #424]
     6b8:	bl	158 <Cho>
     6bc:	add	w1, w19, w0
     6c0:	ldr	w0, [sp, #396]
     6c4:	add	w2, w0, #0x3
     6c8:	adrp	x0, 0 <sha256_init>
     6cc:	add	x0, x0, #0x0
     6d0:	ldr	x0, [x0]
     6d4:	sxtw	x2, w2
     6d8:	ldr	w0, [x0, x2, lsl #2]
     6dc:	add	w1, w1, w0
     6e0:	ldr	w0, [sp, #396]
     6e4:	add	w0, w0, #0x3
     6e8:	sxtw	x0, w0
     6ec:	lsl	x0, x0, #2
     6f0:	add	x2, sp, #0x38
     6f4:	ldr	w0, [x2, x0]
     6f8:	add	w0, w1, w0
     6fc:	str	w0, [sp, #380]
     700:	ldr	w0, [sp, #408]
     704:	bl	1c8 <Sum0>
     708:	mov	w19, w0
     70c:	ldr	w2, [sp, #400]
     710:	ldr	w1, [sp, #404]
     714:	ldr	w0, [sp, #408]
     718:	bl	18c <Maj>
     71c:	add	w0, w19, w0
     720:	str	w0, [sp, #376]
     724:	ldr	w1, [sp, #428]
     728:	ldr	w0, [sp, #380]
     72c:	add	w0, w1, w0
     730:	str	w0, [sp, #428]
     734:	ldr	w1, [sp, #380]
     738:	ldr	w0, [sp, #376]
     73c:	add	w0, w1, w0
     740:	str	w0, [sp, #412]
     744:	ldr	w0, [sp, #428]
     748:	bl	1f8 <Sum1>
     74c:	mov	w1, w0
     750:	ldr	w0, [sp, #416]
     754:	add	w19, w1, w0
     758:	ldr	w2, [sp, #420]
     75c:	ldr	w1, [sp, #424]
     760:	ldr	w0, [sp, #428]
     764:	bl	158 <Cho>
     768:	add	w1, w19, w0
     76c:	ldr	w0, [sp, #396]
     770:	add	w2, w0, #0x4
     774:	adrp	x0, 0 <sha256_init>
     778:	add	x0, x0, #0x0
     77c:	ldr	x0, [x0]
     780:	sxtw	x2, w2
     784:	ldr	w0, [x0, x2, lsl #2]
     788:	add	w1, w1, w0
     78c:	ldr	w0, [sp, #396]
     790:	add	w0, w0, #0x4
     794:	sxtw	x0, w0
     798:	lsl	x0, x0, #2
     79c:	add	x2, sp, #0x38
     7a0:	ldr	w0, [x2, x0]
     7a4:	add	w0, w1, w0
     7a8:	str	w0, [sp, #380]
     7ac:	ldr	w0, [sp, #412]
     7b0:	bl	1c8 <Sum0>
     7b4:	mov	w19, w0
     7b8:	ldr	w2, [sp, #404]
     7bc:	ldr	w1, [sp, #408]
     7c0:	ldr	w0, [sp, #412]
     7c4:	bl	18c <Maj>
     7c8:	add	w0, w19, w0
     7cc:	str	w0, [sp, #376]
     7d0:	ldr	w1, [sp, #400]
     7d4:	ldr	w0, [sp, #380]
     7d8:	add	w0, w1, w0
     7dc:	str	w0, [sp, #400]
     7e0:	ldr	w1, [sp, #380]
     7e4:	ldr	w0, [sp, #376]
     7e8:	add	w0, w1, w0
     7ec:	str	w0, [sp, #416]
     7f0:	ldr	w0, [sp, #400]
     7f4:	bl	1f8 <Sum1>
     7f8:	mov	w1, w0
     7fc:	ldr	w0, [sp, #420]
     800:	add	w19, w1, w0
     804:	ldr	w2, [sp, #424]
     808:	ldr	w1, [sp, #428]
     80c:	ldr	w0, [sp, #400]
     810:	bl	158 <Cho>
     814:	add	w1, w19, w0
     818:	ldr	w0, [sp, #396]
     81c:	add	w2, w0, #0x5
     820:	adrp	x0, 0 <sha256_init>
     824:	add	x0, x0, #0x0
     828:	ldr	x0, [x0]
     82c:	sxtw	x2, w2
     830:	ldr	w0, [x0, x2, lsl #2]
     834:	add	w1, w1, w0
     838:	ldr	w0, [sp, #396]
     83c:	add	w0, w0, #0x5
     840:	sxtw	x0, w0
     844:	lsl	x0, x0, #2
     848:	add	x2, sp, #0x38
     84c:	ldr	w0, [x2, x0]
     850:	add	w0, w1, w0
     854:	str	w0, [sp, #380]
     858:	ldr	w0, [sp, #416]
     85c:	bl	1c8 <Sum0>
     860:	mov	w19, w0
     864:	ldr	w2, [sp, #408]
     868:	ldr	w1, [sp, #412]
     86c:	ldr	w0, [sp, #416]
     870:	bl	18c <Maj>
     874:	add	w0, w19, w0
     878:	str	w0, [sp, #376]
     87c:	ldr	w1, [sp, #404]
     880:	ldr	w0, [sp, #380]
     884:	add	w0, w1, w0
     888:	str	w0, [sp, #404]
     88c:	ldr	w1, [sp, #380]
     890:	ldr	w0, [sp, #376]
     894:	add	w0, w1, w0
     898:	str	w0, [sp, #420]
     89c:	ldr	w0, [sp, #404]
     8a0:	bl	1f8 <Sum1>
     8a4:	mov	w1, w0
     8a8:	ldr	w0, [sp, #424]
     8ac:	add	w19, w1, w0
     8b0:	ldr	w2, [sp, #428]
     8b4:	ldr	w1, [sp, #400]
     8b8:	ldr	w0, [sp, #404]
     8bc:	bl	158 <Cho>
     8c0:	add	w1, w19, w0
     8c4:	ldr	w0, [sp, #396]
     8c8:	add	w2, w0, #0x6
     8cc:	adrp	x0, 0 <sha256_init>
     8d0:	add	x0, x0, #0x0
     8d4:	ldr	x0, [x0]
     8d8:	sxtw	x2, w2
     8dc:	ldr	w0, [x0, x2, lsl #2]
     8e0:	add	w1, w1, w0
     8e4:	ldr	w0, [sp, #396]
     8e8:	add	w0, w0, #0x6
     8ec:	sxtw	x0, w0
     8f0:	lsl	x0, x0, #2
     8f4:	add	x2, sp, #0x38
     8f8:	ldr	w0, [x2, x0]
     8fc:	add	w0, w1, w0
     900:	str	w0, [sp, #380]
     904:	ldr	w0, [sp, #420]
     908:	bl	1c8 <Sum0>
     90c:	mov	w19, w0
     910:	ldr	w2, [sp, #412]
     914:	ldr	w1, [sp, #416]
     918:	ldr	w0, [sp, #420]
     91c:	bl	18c <Maj>
     920:	add	w0, w19, w0
     924:	str	w0, [sp, #376]
     928:	ldr	w1, [sp, #408]
     92c:	ldr	w0, [sp, #380]
     930:	add	w0, w1, w0
     934:	str	w0, [sp, #408]
     938:	ldr	w1, [sp, #380]
     93c:	ldr	w0, [sp, #376]
     940:	add	w0, w1, w0
     944:	str	w0, [sp, #424]
     948:	ldr	w0, [sp, #408]
     94c:	bl	1f8 <Sum1>
     950:	mov	w1, w0
     954:	ldr	w0, [sp, #428]
     958:	add	w19, w1, w0
     95c:	ldr	w2, [sp, #400]
     960:	ldr	w1, [sp, #404]
     964:	ldr	w0, [sp, #408]
     968:	bl	158 <Cho>
     96c:	add	w1, w19, w0
     970:	ldr	w0, [sp, #396]
     974:	add	w2, w0, #0x7
     978:	adrp	x0, 0 <sha256_init>
     97c:	add	x0, x0, #0x0
     980:	ldr	x0, [x0]
     984:	sxtw	x2, w2
     988:	ldr	w0, [x0, x2, lsl #2]
     98c:	add	w1, w1, w0
     990:	ldr	w0, [sp, #396]
     994:	add	w0, w0, #0x7
     998:	sxtw	x0, w0
     99c:	lsl	x0, x0, #2
     9a0:	add	x2, sp, #0x38
     9a4:	ldr	w0, [x2, x0]
     9a8:	add	w0, w1, w0
     9ac:	str	w0, [sp, #380]
     9b0:	ldr	w0, [sp, #424]
     9b4:	bl	1c8 <Sum0>
     9b8:	mov	w19, w0
     9bc:	ldr	w2, [sp, #416]
     9c0:	ldr	w1, [sp, #420]
     9c4:	ldr	w0, [sp, #424]
     9c8:	bl	18c <Maj>
     9cc:	add	w0, w19, w0
     9d0:	str	w0, [sp, #376]
     9d4:	ldr	w1, [sp, #412]
     9d8:	ldr	w0, [sp, #380]
     9dc:	add	w0, w1, w0
     9e0:	str	w0, [sp, #412]
     9e4:	ldr	w1, [sp, #380]
     9e8:	ldr	w0, [sp, #376]
     9ec:	add	w0, w1, w0
     9f0:	str	w0, [sp, #428]
     9f4:	ldr	w0, [sp, #396]
     9f8:	add	w0, w0, #0x8
     9fc:	str	w0, [sp, #396]
     a00:	ldr	w0, [sp, #396]
     a04:	cmp	w0, #0x3f
     a08:	b.le	4a4 <transform+0x27c>
     a0c:	ldr	x0, [sp, #40]
     a10:	ldr	w1, [x0]
     a14:	ldr	w0, [sp, #428]
     a18:	add	w1, w1, w0
     a1c:	ldr	x0, [sp, #40]
     a20:	str	w1, [x0]
     a24:	ldr	x0, [sp, #40]
     a28:	ldr	w1, [x0, #4]
     a2c:	ldr	w0, [sp, #424]
     a30:	add	w1, w1, w0
     a34:	ldr	x0, [sp, #40]
     a38:	str	w1, [x0, #4]
     a3c:	ldr	x0, [sp, #40]
     a40:	ldr	w1, [x0, #8]
     a44:	ldr	w0, [sp, #420]
     a48:	add	w1, w1, w0
     a4c:	ldr	x0, [sp, #40]
     a50:	str	w1, [x0, #8]
     a54:	ldr	x0, [sp, #40]
     a58:	ldr	w1, [x0, #12]
     a5c:	ldr	w0, [sp, #416]
     a60:	add	w1, w1, w0
     a64:	ldr	x0, [sp, #40]
     a68:	str	w1, [x0, #12]
     a6c:	ldr	x0, [sp, #40]
     a70:	ldr	w1, [x0, #16]
     a74:	ldr	w0, [sp, #412]
     a78:	add	w1, w1, w0
     a7c:	ldr	x0, [sp, #40]
     a80:	str	w1, [x0, #16]
     a84:	ldr	x0, [sp, #40]
     a88:	ldr	w1, [x0, #20]
     a8c:	ldr	w0, [sp, #408]
     a90:	add	w1, w1, w0
     a94:	ldr	x0, [sp, #40]
     a98:	str	w1, [x0, #20]
     a9c:	ldr	x0, [sp, #40]
     aa0:	ldr	w1, [x0, #24]
     aa4:	ldr	w0, [sp, #404]
     aa8:	add	w1, w1, w0
     aac:	ldr	x0, [sp, #40]
     ab0:	str	w1, [x0, #24]
     ab4:	ldr	x0, [sp, #40]
     ab8:	ldr	w1, [x0, #28]
     abc:	ldr	w0, [sp, #400]
     ac0:	add	w1, w1, w0
     ac4:	ldr	x0, [sp, #40]
     ac8:	str	w1, [x0, #28]
     acc:	nop
     ad0:	ldr	x19, [sp, #16]
     ad4:	ldp	x29, x30, [sp], #432
     ad8:	ret
     adc:	nop
	...

0000000000000ae8 <sha256_write>:
     ae8:	stp	x29, x30, [sp, #-64]!
     aec:	mov	x29, sp
     af0:	str	x0, [sp, #40]
     af4:	str	x1, [sp, #32]
     af8:	str	x2, [sp, #24]
     afc:	ldr	x0, [sp, #32]
     b00:	str	x0, [sp, #56]
     b04:	ldr	x0, [sp, #40]
     b08:	str	x0, [sp, #48]
     b0c:	ldr	x0, [sp, #48]
     b10:	ldr	w0, [x0, #100]
     b14:	cmp	w0, #0x40
     b18:	b.ne	b54 <sha256_write+0x6c>  // b.any
     b1c:	ldr	x0, [sp, #48]
     b20:	add	x0, x0, #0x24
     b24:	mov	x1, x0
     b28:	ldr	x0, [sp, #48]
     b2c:	bl	228 <transform>
     b30:	mov	w0, #0x148                 	// #328
     b34:	bl	0 <_gcry_burn_stack>
     b38:	ldr	x0, [sp, #48]
     b3c:	str	wzr, [x0, #100]
     b40:	ldr	x0, [sp, #48]
     b44:	ldr	w0, [x0, #32]
     b48:	add	w1, w0, #0x1
     b4c:	ldr	x0, [sp, #48]
     b50:	str	w1, [x0, #32]
     b54:	ldr	x0, [sp, #56]
     b58:	cmp	x0, #0x0
     b5c:	b.eq	cb0 <sha256_write+0x1c8>  // b.none
     b60:	ldr	x0, [sp, #48]
     b64:	ldr	w0, [x0, #100]
     b68:	cmp	w0, #0x0
     b6c:	b.eq	c34 <sha256_write+0x14c>  // b.none
     b70:	b	bb8 <sha256_write+0xd0>
     b74:	ldr	x0, [sp, #56]
     b78:	add	x1, x0, #0x1
     b7c:	str	x1, [sp, #56]
     b80:	ldr	x1, [sp, #48]
     b84:	ldr	w1, [x1, #100]
     b88:	add	w3, w1, #0x1
     b8c:	ldr	x2, [sp, #48]
     b90:	str	w3, [x2, #100]
     b94:	ldrb	w3, [x0]
     b98:	ldr	x2, [sp, #48]
     b9c:	sxtw	x0, w1
     ba0:	add	x0, x2, x0
     ba4:	mov	w1, w3
     ba8:	strb	w1, [x0, #36]
     bac:	ldr	x0, [sp, #24]
     bb0:	sub	x0, x0, #0x1
     bb4:	str	x0, [sp, #24]
     bb8:	ldr	x0, [sp, #24]
     bbc:	cmp	x0, #0x0
     bc0:	b.eq	bd4 <sha256_write+0xec>  // b.none
     bc4:	ldr	x0, [sp, #48]
     bc8:	ldr	w0, [x0, #100]
     bcc:	cmp	w0, #0x3f
     bd0:	b.le	b74 <sha256_write+0x8c>
     bd4:	mov	x2, #0x0                   	// #0
     bd8:	mov	x1, #0x0                   	// #0
     bdc:	ldr	x0, [sp, #48]
     be0:	bl	ae8 <sha256_write>
     be4:	ldr	x0, [sp, #24]
     be8:	cmp	x0, #0x0
     bec:	b.eq	cb8 <sha256_write+0x1d0>  // b.none
     bf0:	b	c34 <sha256_write+0x14c>
     bf4:	ldr	x1, [sp, #56]
     bf8:	ldr	x0, [sp, #48]
     bfc:	bl	228 <transform>
     c00:	ldr	x0, [sp, #48]
     c04:	str	wzr, [x0, #100]
     c08:	ldr	x0, [sp, #48]
     c0c:	ldr	w0, [x0, #32]
     c10:	add	w1, w0, #0x1
     c14:	ldr	x0, [sp, #48]
     c18:	str	w1, [x0, #32]
     c1c:	ldr	x0, [sp, #24]
     c20:	sub	x0, x0, #0x40
     c24:	str	x0, [sp, #24]
     c28:	ldr	x0, [sp, #56]
     c2c:	add	x0, x0, #0x40
     c30:	str	x0, [sp, #56]
     c34:	ldr	x0, [sp, #24]
     c38:	cmp	x0, #0x3f
     c3c:	b.hi	bf4 <sha256_write+0x10c>  // b.pmore
     c40:	mov	w0, #0x148                 	// #328
     c44:	bl	0 <_gcry_burn_stack>
     c48:	b	c90 <sha256_write+0x1a8>
     c4c:	ldr	x0, [sp, #56]
     c50:	add	x1, x0, #0x1
     c54:	str	x1, [sp, #56]
     c58:	ldr	x1, [sp, #48]
     c5c:	ldr	w1, [x1, #100]
     c60:	add	w3, w1, #0x1
     c64:	ldr	x2, [sp, #48]
     c68:	str	w3, [x2, #100]
     c6c:	ldrb	w3, [x0]
     c70:	ldr	x2, [sp, #48]
     c74:	sxtw	x0, w1
     c78:	add	x0, x2, x0
     c7c:	mov	w1, w3
     c80:	strb	w1, [x0, #36]
     c84:	ldr	x0, [sp, #24]
     c88:	sub	x0, x0, #0x1
     c8c:	str	x0, [sp, #24]
     c90:	ldr	x0, [sp, #24]
     c94:	cmp	x0, #0x0
     c98:	b.eq	cbc <sha256_write+0x1d4>  // b.none
     c9c:	ldr	x0, [sp, #48]
     ca0:	ldr	w0, [x0, #100]
     ca4:	cmp	w0, #0x3f
     ca8:	b.le	c4c <sha256_write+0x164>
     cac:	b	cbc <sha256_write+0x1d4>
     cb0:	nop
     cb4:	b	cbc <sha256_write+0x1d4>
     cb8:	nop
     cbc:	ldp	x29, x30, [sp], #64
     cc0:	ret

0000000000000cc4 <sha256_final>:
     cc4:	stp	x29, x30, [sp, #-64]!
     cc8:	mov	x29, sp
     ccc:	str	x0, [sp, #24]
     cd0:	ldr	x0, [sp, #24]
     cd4:	str	x0, [sp, #48]
     cd8:	mov	x2, #0x0                   	// #0
     cdc:	mov	x1, #0x0                   	// #0
     ce0:	ldr	x0, [sp, #48]
     ce4:	bl	ae8 <sha256_write>
     ce8:	ldr	x0, [sp, #48]
     cec:	ldr	w0, [x0, #32]
     cf0:	str	w0, [sp, #44]
     cf4:	ldr	w0, [sp, #44]
     cf8:	lsl	w0, w0, #6
     cfc:	str	w0, [sp, #40]
     d00:	ldr	w0, [sp, #44]
     d04:	lsr	w0, w0, #26
     d08:	str	w0, [sp, #60]
     d0c:	ldr	w0, [sp, #40]
     d10:	str	w0, [sp, #44]
     d14:	ldr	x0, [sp, #48]
     d18:	ldr	w0, [x0, #100]
     d1c:	mov	w1, w0
     d20:	ldr	w0, [sp, #40]
     d24:	add	w0, w0, w1
     d28:	str	w0, [sp, #40]
     d2c:	ldr	w1, [sp, #40]
     d30:	ldr	w0, [sp, #44]
     d34:	cmp	w1, w0
     d38:	b.cs	d48 <sha256_final+0x84>  // b.hs, b.nlast
     d3c:	ldr	w0, [sp, #60]
     d40:	add	w0, w0, #0x1
     d44:	str	w0, [sp, #60]
     d48:	ldr	w0, [sp, #40]
     d4c:	str	w0, [sp, #44]
     d50:	ldr	w0, [sp, #40]
     d54:	lsl	w0, w0, #3
     d58:	str	w0, [sp, #40]
     d5c:	ldr	w0, [sp, #60]
     d60:	lsl	w0, w0, #3
     d64:	str	w0, [sp, #60]
     d68:	ldr	w0, [sp, #44]
     d6c:	lsr	w0, w0, #29
     d70:	ldr	w1, [sp, #60]
     d74:	orr	w0, w1, w0
     d78:	str	w0, [sp, #60]
     d7c:	ldr	x0, [sp, #48]
     d80:	ldr	w0, [x0, #100]
     d84:	cmp	w0, #0x37
     d88:	b.gt	df0 <sha256_final+0x12c>
     d8c:	ldr	x0, [sp, #48]
     d90:	ldr	w0, [x0, #100]
     d94:	add	w2, w0, #0x1
     d98:	ldr	x1, [sp, #48]
     d9c:	str	w2, [x1, #100]
     da0:	ldr	x1, [sp, #48]
     da4:	sxtw	x0, w0
     da8:	add	x0, x1, x0
     dac:	mov	w1, #0xffffff80            	// #-128
     db0:	strb	w1, [x0, #36]
     db4:	b	ddc <sha256_final+0x118>
     db8:	ldr	x0, [sp, #48]
     dbc:	ldr	w0, [x0, #100]
     dc0:	add	w2, w0, #0x1
     dc4:	ldr	x1, [sp, #48]
     dc8:	str	w2, [x1, #100]
     dcc:	ldr	x1, [sp, #48]
     dd0:	sxtw	x0, w0
     dd4:	add	x0, x1, x0
     dd8:	strb	wzr, [x0, #36]
     ddc:	ldr	x0, [sp, #48]
     de0:	ldr	w0, [x0, #100]
     de4:	cmp	w0, #0x37
     de8:	b.le	db8 <sha256_final+0xf4>
     dec:	b	e74 <sha256_final+0x1b0>
     df0:	ldr	x0, [sp, #48]
     df4:	ldr	w0, [x0, #100]
     df8:	add	w2, w0, #0x1
     dfc:	ldr	x1, [sp, #48]
     e00:	str	w2, [x1, #100]
     e04:	ldr	x1, [sp, #48]
     e08:	sxtw	x0, w0
     e0c:	add	x0, x1, x0
     e10:	mov	w1, #0xffffff80            	// #-128
     e14:	strb	w1, [x0, #36]
     e18:	b	e40 <sha256_final+0x17c>
     e1c:	ldr	x0, [sp, #48]
     e20:	ldr	w0, [x0, #100]
     e24:	add	w2, w0, #0x1
     e28:	ldr	x1, [sp, #48]
     e2c:	str	w2, [x1, #100]
     e30:	ldr	x1, [sp, #48]
     e34:	sxtw	x0, w0
     e38:	add	x0, x1, x0
     e3c:	strb	wzr, [x0, #36]
     e40:	ldr	x0, [sp, #48]
     e44:	ldr	w0, [x0, #100]
     e48:	cmp	w0, #0x3f
     e4c:	b.le	e1c <sha256_final+0x158>
     e50:	mov	x2, #0x0                   	// #0
     e54:	mov	x1, #0x0                   	// #0
     e58:	ldr	x0, [sp, #48]
     e5c:	bl	ae8 <sha256_write>
     e60:	ldr	x0, [sp, #48]
     e64:	add	x0, x0, #0x24
     e68:	mov	x2, #0x38                  	// #56
     e6c:	mov	w1, #0x0                   	// #0
     e70:	bl	0 <grub_memset>
     e74:	ldr	w0, [sp, #60]
     e78:	lsr	w0, w0, #24
     e7c:	and	w1, w0, #0xff
     e80:	ldr	x0, [sp, #48]
     e84:	strb	w1, [x0, #92]
     e88:	ldr	w0, [sp, #60]
     e8c:	lsr	w0, w0, #16
     e90:	and	w1, w0, #0xff
     e94:	ldr	x0, [sp, #48]
     e98:	strb	w1, [x0, #93]
     e9c:	ldr	w0, [sp, #60]
     ea0:	lsr	w0, w0, #8
     ea4:	and	w1, w0, #0xff
     ea8:	ldr	x0, [sp, #48]
     eac:	strb	w1, [x0, #94]
     eb0:	ldr	w0, [sp, #60]
     eb4:	and	w1, w0, #0xff
     eb8:	ldr	x0, [sp, #48]
     ebc:	strb	w1, [x0, #95]
     ec0:	ldr	w0, [sp, #40]
     ec4:	lsr	w0, w0, #24
     ec8:	and	w1, w0, #0xff
     ecc:	ldr	x0, [sp, #48]
     ed0:	strb	w1, [x0, #96]
     ed4:	ldr	w0, [sp, #40]
     ed8:	lsr	w0, w0, #16
     edc:	and	w1, w0, #0xff
     ee0:	ldr	x0, [sp, #48]
     ee4:	strb	w1, [x0, #97]
     ee8:	ldr	w0, [sp, #40]
     eec:	lsr	w0, w0, #8
     ef0:	and	w1, w0, #0xff
     ef4:	ldr	x0, [sp, #48]
     ef8:	strb	w1, [x0, #98]
     efc:	ldr	w0, [sp, #40]
     f00:	and	w1, w0, #0xff
     f04:	ldr	x0, [sp, #48]
     f08:	strb	w1, [x0, #99]
     f0c:	ldr	x0, [sp, #48]
     f10:	add	x0, x0, #0x24
     f14:	mov	x1, x0
     f18:	ldr	x0, [sp, #48]
     f1c:	bl	228 <transform>
     f20:	mov	w0, #0x148                 	// #328
     f24:	bl	0 <_gcry_burn_stack>
     f28:	ldr	x0, [sp, #48]
     f2c:	add	x0, x0, #0x24
     f30:	str	x0, [sp, #32]
     f34:	ldr	x0, [sp, #48]
     f38:	ldr	w0, [x0]
     f3c:	lsr	w2, w0, #24
     f40:	ldr	x0, [sp, #32]
     f44:	add	x1, x0, #0x1
     f48:	str	x1, [sp, #32]
     f4c:	and	w1, w2, #0xff
     f50:	strb	w1, [x0]
     f54:	ldr	x0, [sp, #48]
     f58:	ldr	w0, [x0]
     f5c:	lsr	w2, w0, #16
     f60:	ldr	x0, [sp, #32]
     f64:	add	x1, x0, #0x1
     f68:	str	x1, [sp, #32]
     f6c:	and	w1, w2, #0xff
     f70:	strb	w1, [x0]
     f74:	ldr	x0, [sp, #48]
     f78:	ldr	w0, [x0]
     f7c:	lsr	w2, w0, #8
     f80:	ldr	x0, [sp, #32]
     f84:	add	x1, x0, #0x1
     f88:	str	x1, [sp, #32]
     f8c:	and	w1, w2, #0xff
     f90:	strb	w1, [x0]
     f94:	ldr	x0, [sp, #48]
     f98:	ldr	w2, [x0]
     f9c:	ldr	x0, [sp, #32]
     fa0:	add	x1, x0, #0x1
     fa4:	str	x1, [sp, #32]
     fa8:	and	w1, w2, #0xff
     fac:	strb	w1, [x0]
     fb0:	ldr	x0, [sp, #48]
     fb4:	ldr	w0, [x0, #4]
     fb8:	lsr	w2, w0, #24
     fbc:	ldr	x0, [sp, #32]
     fc0:	add	x1, x0, #0x1
     fc4:	str	x1, [sp, #32]
     fc8:	and	w1, w2, #0xff
     fcc:	strb	w1, [x0]
     fd0:	ldr	x0, [sp, #48]
     fd4:	ldr	w0, [x0, #4]
     fd8:	lsr	w2, w0, #16
     fdc:	ldr	x0, [sp, #32]
     fe0:	add	x1, x0, #0x1
     fe4:	str	x1, [sp, #32]
     fe8:	and	w1, w2, #0xff
     fec:	strb	w1, [x0]
     ff0:	ldr	x0, [sp, #48]
     ff4:	ldr	w0, [x0, #4]
     ff8:	lsr	w2, w0, #8
     ffc:	ldr	x0, [sp, #32]
    1000:	add	x1, x0, #0x1
    1004:	str	x1, [sp, #32]
    1008:	and	w1, w2, #0xff
    100c:	strb	w1, [x0]
    1010:	ldr	x0, [sp, #48]
    1014:	ldr	w2, [x0, #4]
    1018:	ldr	x0, [sp, #32]
    101c:	add	x1, x0, #0x1
    1020:	str	x1, [sp, #32]
    1024:	and	w1, w2, #0xff
    1028:	strb	w1, [x0]
    102c:	ldr	x0, [sp, #48]
    1030:	ldr	w0, [x0, #8]
    1034:	lsr	w2, w0, #24
    1038:	ldr	x0, [sp, #32]
    103c:	add	x1, x0, #0x1
    1040:	str	x1, [sp, #32]
    1044:	and	w1, w2, #0xff
    1048:	strb	w1, [x0]
    104c:	ldr	x0, [sp, #48]
    1050:	ldr	w0, [x0, #8]
    1054:	lsr	w2, w0, #16
    1058:	ldr	x0, [sp, #32]
    105c:	add	x1, x0, #0x1
    1060:	str	x1, [sp, #32]
    1064:	and	w1, w2, #0xff
    1068:	strb	w1, [x0]
    106c:	ldr	x0, [sp, #48]
    1070:	ldr	w0, [x0, #8]
    1074:	lsr	w2, w0, #8
    1078:	ldr	x0, [sp, #32]
    107c:	add	x1, x0, #0x1
    1080:	str	x1, [sp, #32]
    1084:	and	w1, w2, #0xff
    1088:	strb	w1, [x0]
    108c:	ldr	x0, [sp, #48]
    1090:	ldr	w2, [x0, #8]
    1094:	ldr	x0, [sp, #32]
    1098:	add	x1, x0, #0x1
    109c:	str	x1, [sp, #32]
    10a0:	and	w1, w2, #0xff
    10a4:	strb	w1, [x0]
    10a8:	ldr	x0, [sp, #48]
    10ac:	ldr	w0, [x0, #12]
    10b0:	lsr	w2, w0, #24
    10b4:	ldr	x0, [sp, #32]
    10b8:	add	x1, x0, #0x1
    10bc:	str	x1, [sp, #32]
    10c0:	and	w1, w2, #0xff
    10c4:	strb	w1, [x0]
    10c8:	ldr	x0, [sp, #48]
    10cc:	ldr	w0, [x0, #12]
    10d0:	lsr	w2, w0, #16
    10d4:	ldr	x0, [sp, #32]
    10d8:	add	x1, x0, #0x1
    10dc:	str	x1, [sp, #32]
    10e0:	and	w1, w2, #0xff
    10e4:	strb	w1, [x0]
    10e8:	ldr	x0, [sp, #48]
    10ec:	ldr	w0, [x0, #12]
    10f0:	lsr	w2, w0, #8
    10f4:	ldr	x0, [sp, #32]
    10f8:	add	x1, x0, #0x1
    10fc:	str	x1, [sp, #32]
    1100:	and	w1, w2, #0xff
    1104:	strb	w1, [x0]
    1108:	ldr	x0, [sp, #48]
    110c:	ldr	w2, [x0, #12]
    1110:	ldr	x0, [sp, #32]
    1114:	add	x1, x0, #0x1
    1118:	str	x1, [sp, #32]
    111c:	and	w1, w2, #0xff
    1120:	strb	w1, [x0]
    1124:	ldr	x0, [sp, #48]
    1128:	ldr	w0, [x0, #16]
    112c:	lsr	w2, w0, #24
    1130:	ldr	x0, [sp, #32]
    1134:	add	x1, x0, #0x1
    1138:	str	x1, [sp, #32]
    113c:	and	w1, w2, #0xff
    1140:	strb	w1, [x0]
    1144:	ldr	x0, [sp, #48]
    1148:	ldr	w0, [x0, #16]
    114c:	lsr	w2, w0, #16
    1150:	ldr	x0, [sp, #32]
    1154:	add	x1, x0, #0x1
    1158:	str	x1, [sp, #32]
    115c:	and	w1, w2, #0xff
    1160:	strb	w1, [x0]
    1164:	ldr	x0, [sp, #48]
    1168:	ldr	w0, [x0, #16]
    116c:	lsr	w2, w0, #8
    1170:	ldr	x0, [sp, #32]
    1174:	add	x1, x0, #0x1
    1178:	str	x1, [sp, #32]
    117c:	and	w1, w2, #0xff
    1180:	strb	w1, [x0]
    1184:	ldr	x0, [sp, #48]
    1188:	ldr	w2, [x0, #16]
    118c:	ldr	x0, [sp, #32]
    1190:	add	x1, x0, #0x1
    1194:	str	x1, [sp, #32]
    1198:	and	w1, w2, #0xff
    119c:	strb	w1, [x0]
    11a0:	ldr	x0, [sp, #48]
    11a4:	ldr	w0, [x0, #20]
    11a8:	lsr	w2, w0, #24
    11ac:	ldr	x0, [sp, #32]
    11b0:	add	x1, x0, #0x1
    11b4:	str	x1, [sp, #32]
    11b8:	and	w1, w2, #0xff
    11bc:	strb	w1, [x0]
    11c0:	ldr	x0, [sp, #48]
    11c4:	ldr	w0, [x0, #20]
    11c8:	lsr	w2, w0, #16
    11cc:	ldr	x0, [sp, #32]
    11d0:	add	x1, x0, #0x1
    11d4:	str	x1, [sp, #32]
    11d8:	and	w1, w2, #0xff
    11dc:	strb	w1, [x0]
    11e0:	ldr	x0, [sp, #48]
    11e4:	ldr	w0, [x0, #20]
    11e8:	lsr	w2, w0, #8
    11ec:	ldr	x0, [sp, #32]
    11f0:	add	x1, x0, #0x1
    11f4:	str	x1, [sp, #32]
    11f8:	and	w1, w2, #0xff
    11fc:	strb	w1, [x0]
    1200:	ldr	x0, [sp, #48]
    1204:	ldr	w2, [x0, #20]
    1208:	ldr	x0, [sp, #32]
    120c:	add	x1, x0, #0x1
    1210:	str	x1, [sp, #32]
    1214:	and	w1, w2, #0xff
    1218:	strb	w1, [x0]
    121c:	ldr	x0, [sp, #48]
    1220:	ldr	w0, [x0, #24]
    1224:	lsr	w2, w0, #24
    1228:	ldr	x0, [sp, #32]
    122c:	add	x1, x0, #0x1
    1230:	str	x1, [sp, #32]
    1234:	and	w1, w2, #0xff
    1238:	strb	w1, [x0]
    123c:	ldr	x0, [sp, #48]
    1240:	ldr	w0, [x0, #24]
    1244:	lsr	w2, w0, #16
    1248:	ldr	x0, [sp, #32]
    124c:	add	x1, x0, #0x1
    1250:	str	x1, [sp, #32]
    1254:	and	w1, w2, #0xff
    1258:	strb	w1, [x0]
    125c:	ldr	x0, [sp, #48]
    1260:	ldr	w0, [x0, #24]
    1264:	lsr	w2, w0, #8
    1268:	ldr	x0, [sp, #32]
    126c:	add	x1, x0, #0x1
    1270:	str	x1, [sp, #32]
    1274:	and	w1, w2, #0xff
    1278:	strb	w1, [x0]
    127c:	ldr	x0, [sp, #48]
    1280:	ldr	w2, [x0, #24]
    1284:	ldr	x0, [sp, #32]
    1288:	add	x1, x0, #0x1
    128c:	str	x1, [sp, #32]
    1290:	and	w1, w2, #0xff
    1294:	strb	w1, [x0]
    1298:	ldr	x0, [sp, #48]
    129c:	ldr	w0, [x0, #28]
    12a0:	lsr	w2, w0, #24
    12a4:	ldr	x0, [sp, #32]
    12a8:	add	x1, x0, #0x1
    12ac:	str	x1, [sp, #32]
    12b0:	and	w1, w2, #0xff
    12b4:	strb	w1, [x0]
    12b8:	ldr	x0, [sp, #48]
    12bc:	ldr	w0, [x0, #28]
    12c0:	lsr	w2, w0, #16
    12c4:	ldr	x0, [sp, #32]
    12c8:	add	x1, x0, #0x1
    12cc:	str	x1, [sp, #32]
    12d0:	and	w1, w2, #0xff
    12d4:	strb	w1, [x0]
    12d8:	ldr	x0, [sp, #48]
    12dc:	ldr	w0, [x0, #28]
    12e0:	lsr	w2, w0, #8
    12e4:	ldr	x0, [sp, #32]
    12e8:	add	x1, x0, #0x1
    12ec:	str	x1, [sp, #32]
    12f0:	and	w1, w2, #0xff
    12f4:	strb	w1, [x0]
    12f8:	ldr	x0, [sp, #48]
    12fc:	ldr	w2, [x0, #28]
    1300:	ldr	x0, [sp, #32]
    1304:	add	x1, x0, #0x1
    1308:	str	x1, [sp, #32]
    130c:	and	w1, w2, #0xff
    1310:	strb	w1, [x0]
    1314:	nop
    1318:	ldp	x29, x30, [sp], #64
    131c:	ret

0000000000001320 <sha256_read>:
    1320:	sub	sp, sp, #0x20
    1324:	str	x0, [sp, #8]
    1328:	ldr	x0, [sp, #8]
    132c:	str	x0, [sp, #24]
    1330:	ldr	x0, [sp, #24]
    1334:	add	x0, x0, #0x24
    1338:	add	sp, sp, #0x20
    133c:	ret

0000000000001340 <grub_mod_init>:
    1340:	stp	x29, x30, [sp, #-32]!
    1344:	mov	x29, sp
    1348:	str	x0, [sp, #24]
    134c:	adrp	x0, 0 <sha256_init>
    1350:	add	x0, x0, #0x0
    1354:	ldr	x0, [x0]
    1358:	bl	0 <grub_md_register>
    135c:	adrp	x0, 0 <sha256_init>
    1360:	add	x0, x0, #0x0
    1364:	ldr	x0, [x0]
    1368:	bl	0 <grub_md_register>
    136c:	nop
    1370:	ldp	x29, x30, [sp], #32
    1374:	ret
	...

0000000000001388 <grub_mod_fini>:
    1388:	stp	x29, x30, [sp, #-16]!
    138c:	mov	x29, sp
    1390:	adrp	x0, 0 <sha256_init>
    1394:	add	x0, x0, #0x0
    1398:	ldr	x0, [x0]
    139c:	bl	0 <grub_md_unregister>
    13a0:	adrp	x0, 0 <sha256_init>
    13a4:	add	x0, x0, #0x0
    13a8:	ldr	x0, [x0]
    13ac:	bl	0 <grub_md_unregister>
    13b0:	nop
    13b4:	ldp	x29, x30, [sp], #16
    13b8:	ret
    13bc:	nop
	...
