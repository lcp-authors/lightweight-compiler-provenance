
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0xfbbc>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0x24c4>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
     f98:	add	x0, x0, #0x690
     f9c:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10bbc>
     fa0:	add	x1, x1, #0x690
     fa4:	cmp	x0, x1
     fa8:	b.eq	fd4 <_Py_strhex@plt+0x64>  // b.none
     fac:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfbbc>
     fb0:	ldr	x1, [x1, #4008]
     fb4:	cbz	x1, fd4 <_Py_strhex@plt+0x64>
     fb8:	stp	x29, x30, [sp, #-16]!
     fbc:	mov	x29, sp
     fc0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
     fc4:	add	x0, x0, #0x690
     fc8:	blr	x1
     fcc:	ldp	x29, x30, [sp], #16
     fd0:	ret
     fd4:	ret
     fd8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
     fdc:	add	x0, x0, #0x690
     fe0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10bbc>
     fe4:	add	x1, x1, #0x690
     fe8:	sub	x0, x0, x1
     fec:	lsr	x1, x0, #63
     ff0:	add	x0, x1, x0, asr #3
     ff4:	cmp	xzr, x0, asr #1
     ff8:	b.eq	1028 <_Py_strhex@plt+0xb8>  // b.none
     ffc:	asr	x1, x0, #1
    1000:	adrp	x2, 13000 <PyInit__sha256@@Base+0xfbbc>
    1004:	ldr	x2, [x2, #4064]
    1008:	cbz	x2, 1028 <_Py_strhex@plt+0xb8>
    100c:	stp	x29, x30, [sp, #-16]!
    1010:	mov	x29, sp
    1014:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    1018:	add	x0, x0, #0x690
    101c:	blr	x2
    1020:	ldp	x29, x30, [sp], #16
    1024:	ret
    1028:	ret
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    1030:	ldrb	w0, [x0, #1680]
    1034:	cbnz	w0, 1070 <_Py_strhex@plt+0x100>
    1038:	stp	x29, x30, [sp, #-16]!
    103c:	mov	x29, sp
    1040:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    1044:	ldr	x0, [x0, #4016]
    1048:	cbz	x0, 1058 <_Py_strhex@plt+0xe8>
    104c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    1050:	ldr	x0, [x0, #152]
    1054:	bl	e70 <__cxa_finalize@plt>
    1058:	bl	f94 <_Py_strhex@plt+0x24>
    105c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    1060:	mov	w1, #0x1                   	// #1
    1064:	strb	w1, [x0, #1680]
    1068:	ldp	x29, x30, [sp], #16
    106c:	ret
    1070:	ret
    1074:	stp	x29, x30, [sp, #-16]!
    1078:	mov	x29, sp
    107c:	bl	fd8 <_Py_strhex@plt+0x68>
    1080:	ldp	x29, x30, [sp], #16
    1084:	ret
    1088:	sub	sp, sp, #0x120
    108c:	ldp	x2, x3, [x0, #56]
    1090:	stp	x2, x3, [sp]
    1094:	ldp	x2, x3, [x0, #72]
    1098:	stp	x2, x3, [sp, #16]
    109c:	ldp	x2, x3, [x0, #88]
    10a0:	stp	x2, x3, [sp, #32]
    10a4:	ldp	x2, x3, [x0, #104]
    10a8:	stp	x2, x3, [sp, #48]
    10ac:	mov	x3, sp
    10b0:	add	x4, sp, #0x40
    10b4:	ldr	w2, [x3]
    10b8:	asr	x1, x2, #8
    10bc:	and	w1, w1, #0xff00ff
    10c0:	lsl	x2, x2, #8
    10c4:	and	w2, w2, #0xff00ff00
    10c8:	orr	w1, w1, w2
    10cc:	ror	w1, w1, #16
    10d0:	str	w1, [x3], #4
    10d4:	cmp	x3, x4
    10d8:	b.ne	10b4 <_Py_strhex@plt+0x144>  // b.any
    10dc:	mov	x2, sp
    10e0:	add	x5, x2, #0xc0
    10e4:	ldr	w1, [x2, #56]
    10e8:	ldr	w3, [x2, #4]
    10ec:	ror	w4, w1, #19
    10f0:	eor	w4, w4, w1, ror #17
    10f4:	eor	w1, w4, w1, lsr #10
    10f8:	ror	w4, w3, #18
    10fc:	eor	w4, w4, w3, ror #7
    1100:	eor	w3, w4, w3, lsr #3
    1104:	add	w1, w1, w3
    1108:	ldr	w3, [x2, #36]
    110c:	ldr	w4, [x2]
    1110:	add	w3, w3, w4
    1114:	add	w1, w1, w3
    1118:	str	w1, [x2, #64]
    111c:	add	x2, x2, #0x4
    1120:	cmp	x2, x5
    1124:	b.ne	10e4 <_Py_strhex@plt+0x174>  // b.any
    1128:	mov	x1, #0x1                   	// #1
    112c:	add	x2, x0, #0xc
    1130:	add	x4, sp, #0x100
    1134:	add	x0, x4, x1, lsl #2
    1138:	ldr	w3, [x2, x1, lsl #2]
    113c:	stur	w3, [x0, #-4]
    1140:	add	x1, x1, #0x1
    1144:	cmp	x1, #0x9
    1148:	b.ne	1134 <_Py_strhex@plt+0x1c4>  // b.any
    114c:	ldr	w10, [sp, #272]
    1150:	ldr	w4, [sp, #280]
    1154:	ldr	w3, [sp, #276]
    1158:	ror	w1, w10, #11
    115c:	eor	w1, w1, w10, ror #6
    1160:	eor	w1, w1, w10, ror #25
    1164:	eor	w0, w4, w3
    1168:	and	w0, w0, w10
    116c:	eor	w0, w0, w4
    1170:	add	w1, w1, w0
    1174:	ldr	w0, [sp, #284]
    1178:	ldr	w5, [sp]
    117c:	add	w0, w0, w5
    1180:	add	w1, w1, w0
    1184:	mov	w5, #0x2f98                	// #12184
    1188:	movk	w5, #0x428a, lsl #16
    118c:	add	w1, w1, w5
    1190:	ldr	w0, [sp, #256]
    1194:	ldr	w6, [sp, #260]
    1198:	ldr	w9, [sp, #264]
    119c:	ldr	w7, [sp, #268]
    11a0:	add	w8, w1, w7
    11a4:	ror	w5, w0, #13
    11a8:	eor	w5, w5, w0, ror #2
    11ac:	eor	w5, w5, w0, ror #22
    11b0:	orr	w11, w0, w6
    11b4:	and	w11, w11, w9
    11b8:	and	w7, w0, w6
    11bc:	orr	w11, w11, w7
    11c0:	add	w5, w5, w11
    11c4:	add	w5, w5, w1
    11c8:	eor	w1, w10, w3
    11cc:	and	w1, w1, w8
    11d0:	eor	w1, w1, w3
    11d4:	mov	w7, #0x4491                	// #17553
    11d8:	movk	w7, #0x7137, lsl #16
    11dc:	add	w1, w1, w7
    11e0:	ldr	w7, [sp, #4]
    11e4:	add	w4, w4, w7
    11e8:	add	w1, w1, w4
    11ec:	ror	w4, w8, #11
    11f0:	eor	w4, w4, w8, ror #6
    11f4:	eor	w4, w4, w8, ror #25
    11f8:	add	w1, w1, w4
    11fc:	add	w9, w9, w1
    1200:	ror	w4, w5, #13
    1204:	eor	w4, w4, w5, ror #2
    1208:	eor	w4, w4, w5, ror #22
    120c:	orr	w7, w0, w5
    1210:	and	w7, w7, w6
    1214:	and	w11, w0, w5
    1218:	orr	w7, w7, w11
    121c:	add	w4, w4, w7
    1220:	add	w4, w4, w1
    1224:	eor	w1, w10, w8
    1228:	and	w1, w1, w9
    122c:	eor	w1, w1, w10
    1230:	mov	w7, #0xfbcf                	// #64463
    1234:	movk	w7, #0xb5c0, lsl #16
    1238:	add	w1, w1, w7
    123c:	ldr	w7, [sp, #8]
    1240:	add	w3, w3, w7
    1244:	add	w1, w1, w3
    1248:	ror	w3, w9, #11
    124c:	eor	w3, w3, w9, ror #6
    1250:	eor	w3, w3, w9, ror #25
    1254:	add	w1, w1, w3
    1258:	add	w6, w6, w1
    125c:	ror	w3, w4, #13
    1260:	eor	w3, w3, w4, ror #2
    1264:	eor	w3, w3, w4, ror #22
    1268:	orr	w7, w5, w4
    126c:	and	w7, w7, w0
    1270:	and	w11, w5, w4
    1274:	orr	w7, w7, w11
    1278:	add	w3, w3, w7
    127c:	add	w3, w3, w1
    1280:	eor	w1, w8, w9
    1284:	and	w1, w1, w6
    1288:	eor	w1, w1, w8
    128c:	mov	w7, #0xdba5                	// #56229
    1290:	movk	w7, #0xe9b5, lsl #16
    1294:	add	w1, w1, w7
    1298:	ldr	w7, [sp, #12]
    129c:	add	w10, w10, w7
    12a0:	add	w1, w1, w10
    12a4:	ror	w7, w6, #11
    12a8:	eor	w7, w7, w6, ror #6
    12ac:	eor	w7, w7, w6, ror #25
    12b0:	add	w1, w1, w7
    12b4:	add	w0, w0, w1
    12b8:	ror	w7, w3, #13
    12bc:	eor	w7, w7, w3, ror #2
    12c0:	eor	w7, w7, w3, ror #22
    12c4:	orr	w10, w4, w3
    12c8:	and	w10, w10, w5
    12cc:	and	w11, w4, w3
    12d0:	orr	w10, w10, w11
    12d4:	add	w7, w7, w10
    12d8:	add	w1, w7, w1
    12dc:	eor	w7, w9, w6
    12e0:	and	w7, w7, w0
    12e4:	eor	w7, w7, w9
    12e8:	add	w7, w7, w8
    12ec:	ldr	w8, [sp, #16]
    12f0:	mov	w10, #0xc25b                	// #49755
    12f4:	movk	w10, #0x3956, lsl #16
    12f8:	add	w8, w8, w10
    12fc:	add	w7, w7, w8
    1300:	ror	w8, w0, #11
    1304:	eor	w8, w8, w0, ror #6
    1308:	eor	w8, w8, w0, ror #25
    130c:	add	w7, w7, w8
    1310:	add	w5, w5, w7
    1314:	ror	w8, w1, #13
    1318:	eor	w8, w8, w1, ror #2
    131c:	eor	w8, w8, w1, ror #22
    1320:	orr	w10, w3, w1
    1324:	and	w10, w10, w4
    1328:	and	w11, w3, w1
    132c:	orr	w10, w10, w11
    1330:	add	w8, w8, w10
    1334:	add	w8, w8, w7
    1338:	eor	w7, w6, w0
    133c:	and	w7, w7, w5
    1340:	eor	w7, w7, w6
    1344:	add	w7, w7, w9
    1348:	ldr	w9, [sp, #20]
    134c:	mov	w10, #0x11f1                	// #4593
    1350:	movk	w10, #0x59f1, lsl #16
    1354:	add	w9, w9, w10
    1358:	add	w7, w7, w9
    135c:	ror	w9, w5, #11
    1360:	eor	w9, w9, w5, ror #6
    1364:	eor	w9, w9, w5, ror #25
    1368:	add	w7, w7, w9
    136c:	add	w4, w4, w7
    1370:	ror	w9, w8, #13
    1374:	eor	w9, w9, w8, ror #2
    1378:	eor	w9, w9, w8, ror #22
    137c:	orr	w10, w1, w8
    1380:	and	w10, w10, w3
    1384:	and	w11, w1, w8
    1388:	orr	w10, w10, w11
    138c:	add	w9, w9, w10
    1390:	add	w7, w9, w7
    1394:	eor	w9, w0, w5
    1398:	and	w9, w9, w4
    139c:	eor	w9, w9, w0
    13a0:	add	w6, w9, w6
    13a4:	ldr	w9, [sp, #24]
    13a8:	mov	w10, #0x82a4                	// #33444
    13ac:	movk	w10, #0x923f, lsl #16
    13b0:	add	w9, w9, w10
    13b4:	add	w6, w6, w9
    13b8:	ror	w9, w4, #11
    13bc:	eor	w9, w9, w4, ror #6
    13c0:	eor	w9, w9, w4, ror #25
    13c4:	add	w6, w6, w9
    13c8:	add	w3, w3, w6
    13cc:	ror	w9, w7, #13
    13d0:	eor	w9, w9, w7, ror #2
    13d4:	eor	w9, w9, w7, ror #22
    13d8:	orr	w10, w8, w7
    13dc:	and	w10, w10, w1
    13e0:	and	w11, w8, w7
    13e4:	orr	w10, w10, w11
    13e8:	add	w9, w9, w10
    13ec:	add	w6, w9, w6
    13f0:	eor	w9, w5, w4
    13f4:	and	w9, w9, w3
    13f8:	eor	w9, w9, w5
    13fc:	add	w0, w9, w0
    1400:	ldr	w9, [sp, #28]
    1404:	mov	w10, #0x5ed5                	// #24277
    1408:	movk	w10, #0xab1c, lsl #16
    140c:	add	w9, w9, w10
    1410:	add	w0, w0, w9
    1414:	ror	w9, w3, #11
    1418:	eor	w9, w9, w3, ror #6
    141c:	eor	w9, w9, w3, ror #25
    1420:	add	w0, w0, w9
    1424:	add	w1, w1, w0
    1428:	ror	w9, w6, #13
    142c:	eor	w9, w9, w6, ror #2
    1430:	eor	w9, w9, w6, ror #22
    1434:	orr	w10, w7, w6
    1438:	and	w10, w10, w8
    143c:	and	w11, w7, w6
    1440:	orr	w10, w10, w11
    1444:	add	w9, w9, w10
    1448:	add	w0, w9, w0
    144c:	eor	w9, w4, w3
    1450:	and	w9, w9, w1
    1454:	eor	w9, w9, w4
    1458:	add	w5, w9, w5
    145c:	ldr	w9, [sp, #32]
    1460:	mov	w10, #0xaa98                	// #43672
    1464:	movk	w10, #0xd807, lsl #16
    1468:	add	w9, w9, w10
    146c:	add	w5, w5, w9
    1470:	ror	w9, w1, #11
    1474:	eor	w9, w9, w1, ror #6
    1478:	eor	w9, w9, w1, ror #25
    147c:	add	w5, w5, w9
    1480:	add	w8, w8, w5
    1484:	ror	w9, w0, #13
    1488:	eor	w9, w9, w0, ror #2
    148c:	eor	w9, w9, w0, ror #22
    1490:	orr	w10, w6, w0
    1494:	and	w10, w10, w7
    1498:	and	w11, w6, w0
    149c:	orr	w10, w10, w11
    14a0:	add	w9, w9, w10
    14a4:	add	w5, w9, w5
    14a8:	eor	w9, w3, w1
    14ac:	and	w9, w9, w8
    14b0:	eor	w9, w9, w3
    14b4:	add	w4, w9, w4
    14b8:	ldr	w9, [sp, #36]
    14bc:	mov	w10, #0x5b01                	// #23297
    14c0:	movk	w10, #0x1283, lsl #16
    14c4:	add	w9, w9, w10
    14c8:	add	w4, w4, w9
    14cc:	ror	w9, w8, #11
    14d0:	eor	w9, w9, w8, ror #6
    14d4:	eor	w9, w9, w8, ror #25
    14d8:	add	w4, w4, w9
    14dc:	add	w7, w7, w4
    14e0:	ror	w9, w5, #13
    14e4:	eor	w9, w9, w5, ror #2
    14e8:	eor	w9, w9, w5, ror #22
    14ec:	orr	w10, w0, w5
    14f0:	and	w10, w10, w6
    14f4:	and	w11, w0, w5
    14f8:	orr	w10, w10, w11
    14fc:	add	w9, w9, w10
    1500:	add	w4, w9, w4
    1504:	eor	w9, w1, w8
    1508:	and	w9, w9, w7
    150c:	eor	w9, w9, w1
    1510:	add	w3, w9, w3
    1514:	ldr	w9, [sp, #40]
    1518:	mov	w10, #0x85be                	// #34238
    151c:	movk	w10, #0x2431, lsl #16
    1520:	add	w9, w9, w10
    1524:	add	w3, w3, w9
    1528:	ror	w9, w7, #11
    152c:	eor	w9, w9, w7, ror #6
    1530:	eor	w9, w9, w7, ror #25
    1534:	add	w3, w3, w9
    1538:	add	w6, w6, w3
    153c:	ror	w9, w4, #13
    1540:	eor	w9, w9, w4, ror #2
    1544:	eor	w9, w9, w4, ror #22
    1548:	orr	w10, w5, w4
    154c:	and	w10, w10, w0
    1550:	and	w11, w5, w4
    1554:	orr	w10, w10, w11
    1558:	add	w9, w9, w10
    155c:	add	w3, w9, w3
    1560:	eor	w9, w8, w7
    1564:	and	w9, w9, w6
    1568:	eor	w9, w9, w8
    156c:	add	w1, w9, w1
    1570:	ldr	w9, [sp, #44]
    1574:	mov	w10, #0x7dc3                	// #32195
    1578:	movk	w10, #0x550c, lsl #16
    157c:	add	w9, w9, w10
    1580:	add	w1, w1, w9
    1584:	ror	w9, w6, #11
    1588:	eor	w9, w9, w6, ror #6
    158c:	eor	w9, w9, w6, ror #25
    1590:	add	w1, w1, w9
    1594:	add	w0, w0, w1
    1598:	ror	w9, w3, #13
    159c:	eor	w9, w9, w3, ror #2
    15a0:	eor	w9, w9, w3, ror #22
    15a4:	orr	w10, w4, w3
    15a8:	and	w10, w10, w5
    15ac:	and	w11, w4, w3
    15b0:	orr	w10, w10, w11
    15b4:	add	w9, w9, w10
    15b8:	add	w1, w9, w1
    15bc:	eor	w9, w7, w6
    15c0:	and	w9, w9, w0
    15c4:	eor	w9, w9, w7
    15c8:	add	w8, w9, w8
    15cc:	ldr	w9, [sp, #48]
    15d0:	mov	w10, #0x5d74                	// #23924
    15d4:	movk	w10, #0x72be, lsl #16
    15d8:	add	w9, w9, w10
    15dc:	add	w8, w8, w9
    15e0:	ror	w9, w0, #11
    15e4:	eor	w9, w9, w0, ror #6
    15e8:	eor	w9, w9, w0, ror #25
    15ec:	add	w8, w8, w9
    15f0:	add	w5, w5, w8
    15f4:	ror	w9, w1, #13
    15f8:	eor	w9, w9, w1, ror #2
    15fc:	eor	w9, w9, w1, ror #22
    1600:	orr	w10, w3, w1
    1604:	and	w10, w10, w4
    1608:	and	w11, w3, w1
    160c:	orr	w10, w10, w11
    1610:	add	w9, w9, w10
    1614:	add	w8, w9, w8
    1618:	eor	w9, w6, w0
    161c:	and	w9, w9, w5
    1620:	eor	w9, w9, w6
    1624:	add	w7, w9, w7
    1628:	ldr	w9, [sp, #52]
    162c:	mov	w10, #0xb1fe                	// #45566
    1630:	movk	w10, #0x80de, lsl #16
    1634:	add	w9, w9, w10
    1638:	add	w7, w7, w9
    163c:	ror	w9, w5, #11
    1640:	eor	w9, w9, w5, ror #6
    1644:	eor	w9, w9, w5, ror #25
    1648:	add	w7, w7, w9
    164c:	add	w4, w4, w7
    1650:	ror	w9, w8, #13
    1654:	eor	w9, w9, w8, ror #2
    1658:	eor	w9, w9, w8, ror #22
    165c:	orr	w10, w1, w8
    1660:	and	w10, w10, w3
    1664:	and	w11, w1, w8
    1668:	orr	w10, w10, w11
    166c:	add	w9, w9, w10
    1670:	add	w7, w9, w7
    1674:	eor	w9, w0, w5
    1678:	and	w9, w9, w4
    167c:	eor	w9, w9, w0
    1680:	add	w6, w9, w6
    1684:	ldr	w9, [sp, #56]
    1688:	mov	w10, #0x6a7                 	// #1703
    168c:	movk	w10, #0x9bdc, lsl #16
    1690:	add	w9, w9, w10
    1694:	add	w6, w6, w9
    1698:	ror	w9, w4, #11
    169c:	eor	w9, w9, w4, ror #6
    16a0:	eor	w9, w9, w4, ror #25
    16a4:	add	w6, w6, w9
    16a8:	add	w3, w3, w6
    16ac:	ror	w9, w7, #13
    16b0:	eor	w9, w9, w7, ror #2
    16b4:	eor	w9, w9, w7, ror #22
    16b8:	orr	w10, w8, w7
    16bc:	and	w10, w10, w1
    16c0:	and	w11, w8, w7
    16c4:	orr	w10, w10, w11
    16c8:	add	w9, w9, w10
    16cc:	add	w6, w9, w6
    16d0:	eor	w9, w5, w4
    16d4:	and	w9, w9, w3
    16d8:	eor	w9, w9, w5
    16dc:	add	w0, w9, w0
    16e0:	ldr	w9, [sp, #60]
    16e4:	mov	w10, #0xf174                	// #61812
    16e8:	movk	w10, #0xc19b, lsl #16
    16ec:	add	w9, w9, w10
    16f0:	add	w0, w0, w9
    16f4:	ror	w9, w3, #11
    16f8:	eor	w9, w9, w3, ror #6
    16fc:	eor	w9, w9, w3, ror #25
    1700:	add	w0, w0, w9
    1704:	add	w1, w1, w0
    1708:	ror	w9, w6, #13
    170c:	eor	w9, w9, w6, ror #2
    1710:	eor	w9, w9, w6, ror #22
    1714:	orr	w10, w7, w6
    1718:	and	w10, w10, w8
    171c:	and	w11, w7, w6
    1720:	orr	w10, w10, w11
    1724:	add	w9, w9, w10
    1728:	add	w0, w9, w0
    172c:	eor	w9, w4, w3
    1730:	and	w9, w9, w1
    1734:	eor	w9, w9, w4
    1738:	add	w5, w9, w5
    173c:	ldr	w9, [sp, #64]
    1740:	mov	w10, #0x69c1                	// #27073
    1744:	movk	w10, #0xe49b, lsl #16
    1748:	add	w9, w9, w10
    174c:	add	w5, w5, w9
    1750:	ror	w9, w1, #11
    1754:	eor	w9, w9, w1, ror #6
    1758:	eor	w9, w9, w1, ror #25
    175c:	add	w5, w5, w9
    1760:	add	w8, w8, w5
    1764:	ror	w9, w0, #13
    1768:	eor	w9, w9, w0, ror #2
    176c:	eor	w9, w9, w0, ror #22
    1770:	orr	w10, w6, w0
    1774:	and	w10, w10, w7
    1778:	and	w11, w6, w0
    177c:	orr	w10, w10, w11
    1780:	add	w9, w9, w10
    1784:	add	w5, w9, w5
    1788:	eor	w9, w3, w1
    178c:	and	w9, w9, w8
    1790:	eor	w9, w9, w3
    1794:	add	w4, w9, w4
    1798:	ldr	w9, [sp, #68]
    179c:	mov	w10, #0x4786                	// #18310
    17a0:	movk	w10, #0xefbe, lsl #16
    17a4:	add	w9, w9, w10
    17a8:	add	w4, w4, w9
    17ac:	ror	w9, w8, #11
    17b0:	eor	w9, w9, w8, ror #6
    17b4:	eor	w9, w9, w8, ror #25
    17b8:	add	w4, w4, w9
    17bc:	add	w7, w7, w4
    17c0:	ror	w9, w5, #13
    17c4:	eor	w9, w9, w5, ror #2
    17c8:	eor	w9, w9, w5, ror #22
    17cc:	orr	w10, w0, w5
    17d0:	and	w10, w10, w6
    17d4:	and	w11, w0, w5
    17d8:	orr	w10, w10, w11
    17dc:	add	w9, w9, w10
    17e0:	add	w4, w9, w4
    17e4:	eor	w9, w1, w8
    17e8:	and	w9, w9, w7
    17ec:	eor	w9, w9, w1
    17f0:	add	w3, w9, w3
    17f4:	ldr	w9, [sp, #72]
    17f8:	mov	w10, #0x9dc6                	// #40390
    17fc:	movk	w10, #0xfc1, lsl #16
    1800:	add	w9, w9, w10
    1804:	add	w3, w3, w9
    1808:	ror	w9, w7, #11
    180c:	eor	w9, w9, w7, ror #6
    1810:	eor	w9, w9, w7, ror #25
    1814:	add	w3, w3, w9
    1818:	add	w6, w6, w3
    181c:	ror	w9, w4, #13
    1820:	eor	w9, w9, w4, ror #2
    1824:	eor	w9, w9, w4, ror #22
    1828:	orr	w10, w5, w4
    182c:	and	w10, w10, w0
    1830:	and	w11, w5, w4
    1834:	orr	w10, w10, w11
    1838:	add	w9, w9, w10
    183c:	add	w3, w9, w3
    1840:	eor	w9, w8, w7
    1844:	and	w9, w9, w6
    1848:	eor	w9, w9, w8
    184c:	add	w1, w9, w1
    1850:	ldr	w9, [sp, #76]
    1854:	mov	w10, #0xa1cc                	// #41420
    1858:	movk	w10, #0x240c, lsl #16
    185c:	add	w9, w9, w10
    1860:	add	w1, w1, w9
    1864:	ror	w9, w6, #11
    1868:	eor	w9, w9, w6, ror #6
    186c:	eor	w9, w9, w6, ror #25
    1870:	add	w1, w1, w9
    1874:	add	w0, w0, w1
    1878:	ror	w9, w3, #13
    187c:	eor	w9, w9, w3, ror #2
    1880:	eor	w9, w9, w3, ror #22
    1884:	orr	w10, w4, w3
    1888:	and	w10, w10, w5
    188c:	and	w11, w4, w3
    1890:	orr	w10, w10, w11
    1894:	add	w9, w9, w10
    1898:	add	w1, w9, w1
    189c:	eor	w9, w7, w6
    18a0:	and	w9, w9, w0
    18a4:	eor	w9, w9, w7
    18a8:	add	w8, w9, w8
    18ac:	ldr	w9, [sp, #80]
    18b0:	mov	w10, #0x2c6f                	// #11375
    18b4:	movk	w10, #0x2de9, lsl #16
    18b8:	add	w9, w9, w10
    18bc:	add	w8, w8, w9
    18c0:	ror	w9, w0, #11
    18c4:	eor	w9, w9, w0, ror #6
    18c8:	eor	w9, w9, w0, ror #25
    18cc:	add	w8, w8, w9
    18d0:	add	w5, w5, w8
    18d4:	ror	w9, w1, #13
    18d8:	eor	w9, w9, w1, ror #2
    18dc:	eor	w9, w9, w1, ror #22
    18e0:	orr	w10, w3, w1
    18e4:	and	w10, w10, w4
    18e8:	and	w11, w3, w1
    18ec:	orr	w10, w10, w11
    18f0:	add	w9, w9, w10
    18f4:	add	w8, w9, w8
    18f8:	eor	w9, w6, w0
    18fc:	and	w9, w9, w5
    1900:	eor	w9, w9, w6
    1904:	add	w7, w9, w7
    1908:	ldr	w9, [sp, #84]
    190c:	mov	w10, #0x84aa                	// #33962
    1910:	movk	w10, #0x4a74, lsl #16
    1914:	add	w9, w9, w10
    1918:	add	w7, w7, w9
    191c:	ror	w9, w5, #11
    1920:	eor	w9, w9, w5, ror #6
    1924:	eor	w9, w9, w5, ror #25
    1928:	add	w7, w7, w9
    192c:	add	w4, w4, w7
    1930:	ror	w9, w8, #13
    1934:	eor	w9, w9, w8, ror #2
    1938:	eor	w9, w9, w8, ror #22
    193c:	orr	w10, w1, w8
    1940:	and	w10, w10, w3
    1944:	and	w11, w1, w8
    1948:	orr	w10, w10, w11
    194c:	add	w9, w9, w10
    1950:	add	w7, w9, w7
    1954:	eor	w9, w0, w5
    1958:	and	w9, w9, w4
    195c:	eor	w9, w9, w0
    1960:	add	w6, w9, w6
    1964:	ldr	w9, [sp, #88]
    1968:	mov	w10, #0xa9dc                	// #43484
    196c:	movk	w10, #0x5cb0, lsl #16
    1970:	add	w9, w9, w10
    1974:	add	w6, w6, w9
    1978:	ror	w9, w4, #11
    197c:	eor	w9, w9, w4, ror #6
    1980:	eor	w9, w9, w4, ror #25
    1984:	add	w6, w6, w9
    1988:	add	w3, w3, w6
    198c:	ror	w9, w7, #13
    1990:	eor	w9, w9, w7, ror #2
    1994:	eor	w9, w9, w7, ror #22
    1998:	orr	w10, w8, w7
    199c:	and	w10, w10, w1
    19a0:	and	w11, w8, w7
    19a4:	orr	w10, w10, w11
    19a8:	add	w9, w9, w10
    19ac:	add	w6, w9, w6
    19b0:	eor	w9, w5, w4
    19b4:	and	w9, w9, w3
    19b8:	eor	w9, w9, w5
    19bc:	add	w0, w9, w0
    19c0:	ldr	w9, [sp, #92]
    19c4:	mov	w10, #0x88da                	// #35034
    19c8:	movk	w10, #0x76f9, lsl #16
    19cc:	add	w9, w9, w10
    19d0:	add	w0, w0, w9
    19d4:	ror	w9, w3, #11
    19d8:	eor	w9, w9, w3, ror #6
    19dc:	eor	w9, w9, w3, ror #25
    19e0:	add	w0, w0, w9
    19e4:	add	w1, w1, w0
    19e8:	ror	w9, w6, #13
    19ec:	eor	w9, w9, w6, ror #2
    19f0:	eor	w9, w9, w6, ror #22
    19f4:	orr	w10, w7, w6
    19f8:	and	w10, w10, w8
    19fc:	and	w11, w7, w6
    1a00:	orr	w10, w10, w11
    1a04:	add	w9, w9, w10
    1a08:	add	w0, w9, w0
    1a0c:	eor	w9, w4, w3
    1a10:	and	w9, w9, w1
    1a14:	eor	w9, w9, w4
    1a18:	add	w5, w9, w5
    1a1c:	ldr	w9, [sp, #96]
    1a20:	mov	w10, #0x5152                	// #20818
    1a24:	movk	w10, #0x983e, lsl #16
    1a28:	add	w9, w9, w10
    1a2c:	add	w5, w5, w9
    1a30:	ror	w9, w1, #11
    1a34:	eor	w9, w9, w1, ror #6
    1a38:	eor	w9, w9, w1, ror #25
    1a3c:	add	w5, w5, w9
    1a40:	add	w8, w8, w5
    1a44:	ror	w9, w0, #13
    1a48:	eor	w9, w9, w0, ror #2
    1a4c:	eor	w9, w9, w0, ror #22
    1a50:	orr	w10, w6, w0
    1a54:	and	w10, w10, w7
    1a58:	and	w11, w6, w0
    1a5c:	orr	w10, w10, w11
    1a60:	add	w9, w9, w10
    1a64:	add	w5, w9, w5
    1a68:	eor	w9, w3, w1
    1a6c:	and	w9, w9, w8
    1a70:	eor	w9, w9, w3
    1a74:	add	w4, w9, w4
    1a78:	ldr	w9, [sp, #100]
    1a7c:	mov	w10, #0xc66d                	// #50797
    1a80:	movk	w10, #0xa831, lsl #16
    1a84:	add	w9, w9, w10
    1a88:	add	w4, w4, w9
    1a8c:	ror	w9, w8, #11
    1a90:	eor	w9, w9, w8, ror #6
    1a94:	eor	w9, w9, w8, ror #25
    1a98:	add	w4, w4, w9
    1a9c:	add	w7, w7, w4
    1aa0:	ror	w9, w5, #13
    1aa4:	eor	w9, w9, w5, ror #2
    1aa8:	eor	w9, w9, w5, ror #22
    1aac:	orr	w10, w0, w5
    1ab0:	and	w10, w10, w6
    1ab4:	and	w11, w0, w5
    1ab8:	orr	w10, w10, w11
    1abc:	add	w9, w9, w10
    1ac0:	add	w4, w9, w4
    1ac4:	eor	w9, w1, w8
    1ac8:	and	w9, w9, w7
    1acc:	eor	w9, w9, w1
    1ad0:	add	w3, w9, w3
    1ad4:	ldr	w9, [sp, #104]
    1ad8:	mov	w10, #0x27c8                	// #10184
    1adc:	movk	w10, #0xb003, lsl #16
    1ae0:	add	w9, w9, w10
    1ae4:	add	w3, w3, w9
    1ae8:	ror	w9, w7, #11
    1aec:	eor	w9, w9, w7, ror #6
    1af0:	eor	w9, w9, w7, ror #25
    1af4:	add	w3, w3, w9
    1af8:	add	w6, w6, w3
    1afc:	ror	w9, w4, #13
    1b00:	eor	w9, w9, w4, ror #2
    1b04:	eor	w9, w9, w4, ror #22
    1b08:	orr	w10, w5, w4
    1b0c:	and	w10, w10, w0
    1b10:	and	w11, w5, w4
    1b14:	orr	w10, w10, w11
    1b18:	add	w9, w9, w10
    1b1c:	add	w3, w9, w3
    1b20:	eor	w9, w8, w7
    1b24:	and	w9, w9, w6
    1b28:	eor	w9, w9, w8
    1b2c:	add	w1, w9, w1
    1b30:	ldr	w9, [sp, #108]
    1b34:	mov	w10, #0x7fc7                	// #32711
    1b38:	movk	w10, #0xbf59, lsl #16
    1b3c:	add	w9, w9, w10
    1b40:	add	w1, w1, w9
    1b44:	ror	w9, w6, #11
    1b48:	eor	w9, w9, w6, ror #6
    1b4c:	eor	w9, w9, w6, ror #25
    1b50:	add	w1, w1, w9
    1b54:	add	w0, w0, w1
    1b58:	ror	w9, w3, #13
    1b5c:	eor	w9, w9, w3, ror #2
    1b60:	eor	w9, w9, w3, ror #22
    1b64:	orr	w10, w4, w3
    1b68:	and	w10, w10, w5
    1b6c:	and	w11, w4, w3
    1b70:	orr	w10, w10, w11
    1b74:	add	w9, w9, w10
    1b78:	add	w1, w9, w1
    1b7c:	eor	w9, w7, w6
    1b80:	and	w9, w9, w0
    1b84:	eor	w9, w9, w7
    1b88:	add	w8, w9, w8
    1b8c:	ldr	w9, [sp, #112]
    1b90:	mov	w10, #0xbf3                 	// #3059
    1b94:	movk	w10, #0xc6e0, lsl #16
    1b98:	add	w9, w9, w10
    1b9c:	add	w8, w8, w9
    1ba0:	ror	w9, w0, #11
    1ba4:	eor	w9, w9, w0, ror #6
    1ba8:	eor	w9, w9, w0, ror #25
    1bac:	add	w8, w8, w9
    1bb0:	add	w5, w5, w8
    1bb4:	ror	w9, w1, #13
    1bb8:	eor	w9, w9, w1, ror #2
    1bbc:	eor	w9, w9, w1, ror #22
    1bc0:	orr	w10, w3, w1
    1bc4:	and	w10, w10, w4
    1bc8:	and	w11, w3, w1
    1bcc:	orr	w10, w10, w11
    1bd0:	add	w9, w9, w10
    1bd4:	add	w8, w9, w8
    1bd8:	eor	w9, w6, w0
    1bdc:	and	w9, w9, w5
    1be0:	eor	w9, w9, w6
    1be4:	add	w7, w9, w7
    1be8:	ldr	w9, [sp, #116]
    1bec:	mov	w10, #0x9147                	// #37191
    1bf0:	movk	w10, #0xd5a7, lsl #16
    1bf4:	add	w9, w9, w10
    1bf8:	add	w7, w7, w9
    1bfc:	ror	w9, w5, #11
    1c00:	eor	w9, w9, w5, ror #6
    1c04:	eor	w9, w9, w5, ror #25
    1c08:	add	w7, w7, w9
    1c0c:	add	w4, w4, w7
    1c10:	ror	w9, w8, #13
    1c14:	eor	w9, w9, w8, ror #2
    1c18:	eor	w9, w9, w8, ror #22
    1c1c:	orr	w10, w1, w8
    1c20:	and	w10, w10, w3
    1c24:	and	w11, w1, w8
    1c28:	orr	w10, w10, w11
    1c2c:	add	w9, w9, w10
    1c30:	add	w7, w9, w7
    1c34:	eor	w9, w0, w5
    1c38:	and	w9, w9, w4
    1c3c:	eor	w9, w9, w0
    1c40:	add	w6, w9, w6
    1c44:	ldr	w9, [sp, #120]
    1c48:	mov	w10, #0x6351                	// #25425
    1c4c:	movk	w10, #0x6ca, lsl #16
    1c50:	add	w9, w9, w10
    1c54:	add	w6, w6, w9
    1c58:	ror	w9, w4, #11
    1c5c:	eor	w9, w9, w4, ror #6
    1c60:	eor	w9, w9, w4, ror #25
    1c64:	add	w6, w6, w9
    1c68:	add	w3, w3, w6
    1c6c:	ror	w9, w7, #13
    1c70:	eor	w9, w9, w7, ror #2
    1c74:	eor	w9, w9, w7, ror #22
    1c78:	orr	w10, w8, w7
    1c7c:	and	w10, w10, w1
    1c80:	and	w11, w8, w7
    1c84:	orr	w10, w10, w11
    1c88:	add	w9, w9, w10
    1c8c:	add	w6, w9, w6
    1c90:	eor	w9, w5, w4
    1c94:	and	w9, w9, w3
    1c98:	eor	w9, w9, w5
    1c9c:	add	w0, w9, w0
    1ca0:	ldr	w9, [sp, #124]
    1ca4:	mov	w10, #0x2967                	// #10599
    1ca8:	movk	w10, #0x1429, lsl #16
    1cac:	add	w9, w9, w10
    1cb0:	add	w0, w0, w9
    1cb4:	ror	w9, w3, #11
    1cb8:	eor	w9, w9, w3, ror #6
    1cbc:	eor	w9, w9, w3, ror #25
    1cc0:	add	w0, w0, w9
    1cc4:	add	w1, w1, w0
    1cc8:	ror	w9, w6, #13
    1ccc:	eor	w9, w9, w6, ror #2
    1cd0:	eor	w9, w9, w6, ror #22
    1cd4:	orr	w10, w7, w6
    1cd8:	and	w10, w10, w8
    1cdc:	and	w11, w7, w6
    1ce0:	orr	w10, w10, w11
    1ce4:	add	w9, w9, w10
    1ce8:	add	w0, w9, w0
    1cec:	eor	w9, w4, w3
    1cf0:	and	w9, w9, w1
    1cf4:	eor	w9, w9, w4
    1cf8:	add	w5, w9, w5
    1cfc:	ldr	w9, [sp, #128]
    1d00:	mov	w10, #0xa85                 	// #2693
    1d04:	movk	w10, #0x27b7, lsl #16
    1d08:	add	w9, w9, w10
    1d0c:	add	w5, w5, w9
    1d10:	ror	w9, w1, #11
    1d14:	eor	w9, w9, w1, ror #6
    1d18:	eor	w9, w9, w1, ror #25
    1d1c:	add	w5, w5, w9
    1d20:	add	w8, w8, w5
    1d24:	ror	w9, w0, #13
    1d28:	eor	w9, w9, w0, ror #2
    1d2c:	eor	w9, w9, w0, ror #22
    1d30:	orr	w10, w6, w0
    1d34:	and	w10, w10, w7
    1d38:	and	w11, w6, w0
    1d3c:	orr	w10, w10, w11
    1d40:	add	w9, w9, w10
    1d44:	add	w5, w9, w5
    1d48:	eor	w9, w3, w1
    1d4c:	and	w9, w9, w8
    1d50:	eor	w9, w9, w3
    1d54:	add	w4, w9, w4
    1d58:	ldr	w9, [sp, #132]
    1d5c:	mov	w10, #0x2138                	// #8504
    1d60:	movk	w10, #0x2e1b, lsl #16
    1d64:	add	w9, w9, w10
    1d68:	add	w4, w4, w9
    1d6c:	ror	w9, w8, #11
    1d70:	eor	w9, w9, w8, ror #6
    1d74:	eor	w9, w9, w8, ror #25
    1d78:	add	w4, w4, w9
    1d7c:	add	w7, w7, w4
    1d80:	ror	w9, w5, #13
    1d84:	eor	w9, w9, w5, ror #2
    1d88:	eor	w9, w9, w5, ror #22
    1d8c:	orr	w10, w0, w5
    1d90:	and	w10, w10, w6
    1d94:	and	w11, w0, w5
    1d98:	orr	w10, w10, w11
    1d9c:	add	w9, w9, w10
    1da0:	add	w4, w9, w4
    1da4:	eor	w9, w1, w8
    1da8:	and	w9, w9, w7
    1dac:	eor	w9, w9, w1
    1db0:	add	w3, w9, w3
    1db4:	ldr	w9, [sp, #136]
    1db8:	mov	w10, #0x6dfc                	// #28156
    1dbc:	movk	w10, #0x4d2c, lsl #16
    1dc0:	add	w9, w9, w10
    1dc4:	add	w3, w3, w9
    1dc8:	ror	w9, w7, #11
    1dcc:	eor	w9, w9, w7, ror #6
    1dd0:	eor	w9, w9, w7, ror #25
    1dd4:	add	w3, w3, w9
    1dd8:	add	w6, w6, w3
    1ddc:	ror	w9, w4, #13
    1de0:	eor	w9, w9, w4, ror #2
    1de4:	eor	w9, w9, w4, ror #22
    1de8:	orr	w10, w5, w4
    1dec:	and	w10, w10, w0
    1df0:	and	w11, w5, w4
    1df4:	orr	w10, w10, w11
    1df8:	add	w9, w9, w10
    1dfc:	add	w3, w9, w3
    1e00:	eor	w9, w8, w7
    1e04:	and	w9, w9, w6
    1e08:	eor	w9, w9, w8
    1e0c:	add	w1, w9, w1
    1e10:	ldr	w9, [sp, #140]
    1e14:	mov	w10, #0xd13                 	// #3347
    1e18:	movk	w10, #0x5338, lsl #16
    1e1c:	add	w9, w9, w10
    1e20:	add	w1, w1, w9
    1e24:	ror	w9, w6, #11
    1e28:	eor	w9, w9, w6, ror #6
    1e2c:	eor	w9, w9, w6, ror #25
    1e30:	add	w1, w1, w9
    1e34:	add	w0, w0, w1
    1e38:	ror	w9, w3, #13
    1e3c:	eor	w9, w9, w3, ror #2
    1e40:	eor	w9, w9, w3, ror #22
    1e44:	orr	w10, w4, w3
    1e48:	and	w10, w10, w5
    1e4c:	and	w11, w4, w3
    1e50:	orr	w10, w10, w11
    1e54:	add	w9, w9, w10
    1e58:	add	w1, w9, w1
    1e5c:	eor	w9, w7, w6
    1e60:	and	w9, w9, w0
    1e64:	eor	w9, w9, w7
    1e68:	add	w8, w9, w8
    1e6c:	ldr	w9, [sp, #144]
    1e70:	mov	w10, #0x7354                	// #29524
    1e74:	movk	w10, #0x650a, lsl #16
    1e78:	add	w9, w9, w10
    1e7c:	add	w8, w8, w9
    1e80:	ror	w9, w0, #11
    1e84:	eor	w9, w9, w0, ror #6
    1e88:	eor	w9, w9, w0, ror #25
    1e8c:	add	w8, w8, w9
    1e90:	add	w5, w5, w8
    1e94:	ror	w9, w1, #13
    1e98:	eor	w9, w9, w1, ror #2
    1e9c:	eor	w9, w9, w1, ror #22
    1ea0:	orr	w10, w3, w1
    1ea4:	and	w10, w10, w4
    1ea8:	and	w11, w3, w1
    1eac:	orr	w10, w10, w11
    1eb0:	add	w9, w9, w10
    1eb4:	add	w8, w9, w8
    1eb8:	eor	w9, w6, w0
    1ebc:	and	w9, w9, w5
    1ec0:	eor	w9, w9, w6
    1ec4:	add	w7, w9, w7
    1ec8:	ldr	w9, [sp, #148]
    1ecc:	mov	w10, #0xabb                 	// #2747
    1ed0:	movk	w10, #0x766a, lsl #16
    1ed4:	add	w9, w9, w10
    1ed8:	add	w7, w7, w9
    1edc:	ror	w9, w5, #11
    1ee0:	eor	w9, w9, w5, ror #6
    1ee4:	eor	w9, w9, w5, ror #25
    1ee8:	add	w7, w7, w9
    1eec:	add	w4, w4, w7
    1ef0:	ror	w9, w8, #13
    1ef4:	eor	w9, w9, w8, ror #2
    1ef8:	eor	w9, w9, w8, ror #22
    1efc:	orr	w10, w1, w8
    1f00:	and	w10, w10, w3
    1f04:	and	w11, w1, w8
    1f08:	orr	w10, w10, w11
    1f0c:	add	w9, w9, w10
    1f10:	add	w7, w9, w7
    1f14:	eor	w9, w0, w5
    1f18:	and	w9, w9, w4
    1f1c:	eor	w9, w9, w0
    1f20:	add	w6, w9, w6
    1f24:	ldr	w9, [sp, #152]
    1f28:	mov	w10, #0xc92e                	// #51502
    1f2c:	movk	w10, #0x81c2, lsl #16
    1f30:	add	w9, w9, w10
    1f34:	add	w6, w6, w9
    1f38:	ror	w9, w4, #11
    1f3c:	eor	w9, w9, w4, ror #6
    1f40:	eor	w9, w9, w4, ror #25
    1f44:	add	w6, w6, w9
    1f48:	add	w3, w3, w6
    1f4c:	ror	w9, w7, #13
    1f50:	eor	w9, w9, w7, ror #2
    1f54:	eor	w9, w9, w7, ror #22
    1f58:	orr	w10, w8, w7
    1f5c:	and	w10, w10, w1
    1f60:	and	w11, w8, w7
    1f64:	orr	w10, w10, w11
    1f68:	add	w9, w9, w10
    1f6c:	add	w6, w9, w6
    1f70:	eor	w9, w5, w4
    1f74:	and	w9, w9, w3
    1f78:	eor	w9, w9, w5
    1f7c:	add	w0, w9, w0
    1f80:	ldr	w9, [sp, #156]
    1f84:	mov	w10, #0x2c85                	// #11397
    1f88:	movk	w10, #0x9272, lsl #16
    1f8c:	add	w9, w9, w10
    1f90:	add	w0, w0, w9
    1f94:	ror	w9, w3, #11
    1f98:	eor	w9, w9, w3, ror #6
    1f9c:	eor	w9, w9, w3, ror #25
    1fa0:	add	w0, w0, w9
    1fa4:	add	w1, w1, w0
    1fa8:	ror	w9, w6, #13
    1fac:	eor	w9, w9, w6, ror #2
    1fb0:	eor	w9, w9, w6, ror #22
    1fb4:	orr	w10, w7, w6
    1fb8:	and	w10, w10, w8
    1fbc:	and	w11, w7, w6
    1fc0:	orr	w10, w10, w11
    1fc4:	add	w9, w9, w10
    1fc8:	add	w0, w9, w0
    1fcc:	eor	w9, w4, w3
    1fd0:	and	w9, w9, w1
    1fd4:	eor	w9, w9, w4
    1fd8:	add	w5, w9, w5
    1fdc:	ldr	w9, [sp, #160]
    1fe0:	mov	w10, #0xe8a1                	// #59553
    1fe4:	movk	w10, #0xa2bf, lsl #16
    1fe8:	add	w9, w9, w10
    1fec:	add	w5, w5, w9
    1ff0:	ror	w9, w1, #11
    1ff4:	eor	w9, w9, w1, ror #6
    1ff8:	eor	w9, w9, w1, ror #25
    1ffc:	add	w5, w5, w9
    2000:	add	w8, w8, w5
    2004:	ror	w9, w0, #13
    2008:	eor	w9, w9, w0, ror #2
    200c:	eor	w9, w9, w0, ror #22
    2010:	orr	w10, w6, w0
    2014:	and	w10, w10, w7
    2018:	and	w11, w6, w0
    201c:	orr	w10, w10, w11
    2020:	add	w9, w9, w10
    2024:	add	w5, w9, w5
    2028:	eor	w9, w3, w1
    202c:	and	w9, w9, w8
    2030:	eor	w9, w9, w3
    2034:	add	w4, w9, w4
    2038:	ldr	w9, [sp, #164]
    203c:	mov	w10, #0x664b                	// #26187
    2040:	movk	w10, #0xa81a, lsl #16
    2044:	add	w9, w9, w10
    2048:	add	w4, w4, w9
    204c:	ror	w9, w8, #11
    2050:	eor	w9, w9, w8, ror #6
    2054:	eor	w9, w9, w8, ror #25
    2058:	add	w4, w4, w9
    205c:	add	w7, w7, w4
    2060:	ror	w9, w5, #13
    2064:	eor	w9, w9, w5, ror #2
    2068:	eor	w9, w9, w5, ror #22
    206c:	orr	w10, w0, w5
    2070:	and	w10, w10, w6
    2074:	and	w11, w0, w5
    2078:	orr	w10, w10, w11
    207c:	add	w9, w9, w10
    2080:	add	w4, w9, w4
    2084:	eor	w9, w1, w8
    2088:	and	w9, w9, w7
    208c:	eor	w9, w9, w1
    2090:	add	w3, w9, w3
    2094:	ldr	w9, [sp, #168]
    2098:	mov	w10, #0x8b70                	// #35696
    209c:	movk	w10, #0xc24b, lsl #16
    20a0:	add	w9, w9, w10
    20a4:	add	w3, w3, w9
    20a8:	ror	w9, w7, #11
    20ac:	eor	w9, w9, w7, ror #6
    20b0:	eor	w9, w9, w7, ror #25
    20b4:	add	w3, w3, w9
    20b8:	add	w6, w6, w3
    20bc:	ror	w9, w4, #13
    20c0:	eor	w9, w9, w4, ror #2
    20c4:	eor	w9, w9, w4, ror #22
    20c8:	orr	w10, w5, w4
    20cc:	and	w10, w10, w0
    20d0:	and	w11, w5, w4
    20d4:	orr	w10, w10, w11
    20d8:	add	w9, w9, w10
    20dc:	add	w3, w9, w3
    20e0:	eor	w9, w8, w7
    20e4:	and	w9, w9, w6
    20e8:	eor	w9, w9, w8
    20ec:	add	w1, w9, w1
    20f0:	ldr	w9, [sp, #172]
    20f4:	mov	w10, #0x51a3                	// #20899
    20f8:	movk	w10, #0xc76c, lsl #16
    20fc:	add	w9, w9, w10
    2100:	add	w1, w1, w9
    2104:	ror	w9, w6, #11
    2108:	eor	w9, w9, w6, ror #6
    210c:	eor	w9, w9, w6, ror #25
    2110:	add	w1, w1, w9
    2114:	add	w0, w0, w1
    2118:	ror	w9, w3, #13
    211c:	eor	w9, w9, w3, ror #2
    2120:	eor	w9, w9, w3, ror #22
    2124:	orr	w10, w4, w3
    2128:	and	w10, w10, w5
    212c:	and	w11, w4, w3
    2130:	orr	w10, w10, w11
    2134:	add	w9, w9, w10
    2138:	add	w1, w9, w1
    213c:	eor	w9, w7, w6
    2140:	and	w9, w9, w0
    2144:	eor	w9, w9, w7
    2148:	add	w8, w9, w8
    214c:	ldr	w9, [sp, #176]
    2150:	mov	w10, #0xe819                	// #59417
    2154:	movk	w10, #0xd192, lsl #16
    2158:	add	w9, w9, w10
    215c:	add	w8, w8, w9
    2160:	ror	w9, w0, #11
    2164:	eor	w9, w9, w0, ror #6
    2168:	eor	w9, w9, w0, ror #25
    216c:	add	w8, w8, w9
    2170:	add	w5, w5, w8
    2174:	ror	w9, w1, #13
    2178:	eor	w9, w9, w1, ror #2
    217c:	eor	w9, w9, w1, ror #22
    2180:	orr	w10, w3, w1
    2184:	and	w10, w10, w4
    2188:	and	w11, w3, w1
    218c:	orr	w10, w10, w11
    2190:	add	w9, w9, w10
    2194:	add	w8, w9, w8
    2198:	eor	w9, w6, w0
    219c:	and	w9, w9, w5
    21a0:	eor	w9, w9, w6
    21a4:	add	w7, w9, w7
    21a8:	ldr	w9, [sp, #180]
    21ac:	mov	w10, #0x624                 	// #1572
    21b0:	movk	w10, #0xd699, lsl #16
    21b4:	add	w9, w9, w10
    21b8:	add	w7, w7, w9
    21bc:	ror	w9, w5, #11
    21c0:	eor	w9, w9, w5, ror #6
    21c4:	eor	w9, w9, w5, ror #25
    21c8:	add	w7, w7, w9
    21cc:	add	w4, w4, w7
    21d0:	ror	w9, w8, #13
    21d4:	eor	w9, w9, w8, ror #2
    21d8:	eor	w9, w9, w8, ror #22
    21dc:	orr	w10, w1, w8
    21e0:	and	w10, w10, w3
    21e4:	and	w11, w1, w8
    21e8:	orr	w10, w10, w11
    21ec:	add	w9, w9, w10
    21f0:	add	w7, w9, w7
    21f4:	eor	w9, w0, w5
    21f8:	and	w9, w9, w4
    21fc:	eor	w9, w9, w0
    2200:	add	w6, w9, w6
    2204:	ldr	w9, [sp, #184]
    2208:	mov	w10, #0x3585                	// #13701
    220c:	movk	w10, #0xf40e, lsl #16
    2210:	add	w9, w9, w10
    2214:	add	w6, w6, w9
    2218:	ror	w9, w4, #11
    221c:	eor	w9, w9, w4, ror #6
    2220:	eor	w9, w9, w4, ror #25
    2224:	add	w6, w6, w9
    2228:	add	w3, w3, w6
    222c:	ror	w9, w7, #13
    2230:	eor	w9, w9, w7, ror #2
    2234:	eor	w9, w9, w7, ror #22
    2238:	orr	w10, w8, w7
    223c:	and	w10, w10, w1
    2240:	and	w11, w8, w7
    2244:	orr	w10, w10, w11
    2248:	add	w9, w9, w10
    224c:	add	w6, w9, w6
    2250:	eor	w9, w5, w4
    2254:	and	w9, w9, w3
    2258:	eor	w9, w9, w5
    225c:	add	w0, w9, w0
    2260:	ldr	w9, [sp, #188]
    2264:	mov	w10, #0xa070                	// #41072
    2268:	movk	w10, #0x106a, lsl #16
    226c:	add	w9, w9, w10
    2270:	add	w0, w0, w9
    2274:	ror	w9, w3, #11
    2278:	eor	w9, w9, w3, ror #6
    227c:	eor	w9, w9, w3, ror #25
    2280:	add	w0, w0, w9
    2284:	add	w1, w1, w0
    2288:	ror	w9, w6, #13
    228c:	eor	w9, w9, w6, ror #2
    2290:	eor	w9, w9, w6, ror #22
    2294:	orr	w10, w7, w6
    2298:	and	w10, w10, w8
    229c:	and	w11, w7, w6
    22a0:	orr	w10, w10, w11
    22a4:	add	w9, w9, w10
    22a8:	add	w0, w9, w0
    22ac:	eor	w9, w4, w3
    22b0:	and	w9, w9, w1
    22b4:	eor	w9, w9, w4
    22b8:	add	w5, w9, w5
    22bc:	ldr	w9, [sp, #192]
    22c0:	mov	w10, #0xc116                	// #49430
    22c4:	movk	w10, #0x19a4, lsl #16
    22c8:	add	w9, w9, w10
    22cc:	add	w5, w5, w9
    22d0:	ror	w9, w1, #11
    22d4:	eor	w9, w9, w1, ror #6
    22d8:	eor	w9, w9, w1, ror #25
    22dc:	add	w5, w5, w9
    22e0:	add	w8, w8, w5
    22e4:	ror	w9, w0, #13
    22e8:	eor	w9, w9, w0, ror #2
    22ec:	eor	w9, w9, w0, ror #22
    22f0:	orr	w10, w6, w0
    22f4:	and	w10, w10, w7
    22f8:	and	w11, w6, w0
    22fc:	orr	w10, w10, w11
    2300:	add	w9, w9, w10
    2304:	add	w5, w9, w5
    2308:	eor	w9, w3, w1
    230c:	and	w9, w9, w8
    2310:	eor	w9, w9, w3
    2314:	add	w4, w9, w4
    2318:	ldr	w9, [sp, #196]
    231c:	mov	w10, #0x6c08                	// #27656
    2320:	movk	w10, #0x1e37, lsl #16
    2324:	add	w9, w9, w10
    2328:	add	w4, w4, w9
    232c:	ror	w9, w8, #11
    2330:	eor	w9, w9, w8, ror #6
    2334:	eor	w9, w9, w8, ror #25
    2338:	add	w4, w4, w9
    233c:	add	w7, w7, w4
    2340:	ror	w9, w5, #13
    2344:	eor	w9, w9, w5, ror #2
    2348:	eor	w9, w9, w5, ror #22
    234c:	orr	w10, w0, w5
    2350:	and	w10, w10, w6
    2354:	and	w11, w0, w5
    2358:	orr	w10, w10, w11
    235c:	add	w9, w9, w10
    2360:	add	w4, w9, w4
    2364:	eor	w9, w1, w8
    2368:	and	w9, w9, w7
    236c:	eor	w9, w9, w1
    2370:	add	w3, w9, w3
    2374:	ldr	w9, [sp, #200]
    2378:	mov	w10, #0x774c                	// #30540
    237c:	movk	w10, #0x2748, lsl #16
    2380:	add	w9, w9, w10
    2384:	add	w3, w3, w9
    2388:	ror	w9, w7, #11
    238c:	eor	w9, w9, w7, ror #6
    2390:	eor	w9, w9, w7, ror #25
    2394:	add	w3, w3, w9
    2398:	add	w6, w6, w3
    239c:	ror	w9, w4, #13
    23a0:	eor	w9, w9, w4, ror #2
    23a4:	eor	w9, w9, w4, ror #22
    23a8:	orr	w10, w5, w4
    23ac:	and	w10, w10, w0
    23b0:	and	w11, w5, w4
    23b4:	orr	w10, w10, w11
    23b8:	add	w9, w9, w10
    23bc:	add	w3, w9, w3
    23c0:	eor	w9, w8, w7
    23c4:	and	w9, w9, w6
    23c8:	eor	w9, w9, w8
    23cc:	add	w1, w9, w1
    23d0:	ldr	w9, [sp, #204]
    23d4:	mov	w10, #0xbcb5                	// #48309
    23d8:	movk	w10, #0x34b0, lsl #16
    23dc:	add	w9, w9, w10
    23e0:	add	w1, w1, w9
    23e4:	ror	w9, w6, #11
    23e8:	eor	w9, w9, w6, ror #6
    23ec:	eor	w9, w9, w6, ror #25
    23f0:	add	w1, w1, w9
    23f4:	add	w0, w0, w1
    23f8:	ror	w9, w3, #13
    23fc:	eor	w9, w9, w3, ror #2
    2400:	eor	w9, w9, w3, ror #22
    2404:	orr	w10, w4, w3
    2408:	and	w10, w10, w5
    240c:	and	w11, w4, w3
    2410:	orr	w10, w10, w11
    2414:	add	w9, w9, w10
    2418:	add	w1, w9, w1
    241c:	eor	w9, w7, w6
    2420:	and	w9, w9, w0
    2424:	eor	w9, w9, w7
    2428:	add	w8, w9, w8
    242c:	ldr	w9, [sp, #208]
    2430:	mov	w10, #0xcb3                 	// #3251
    2434:	movk	w10, #0x391c, lsl #16
    2438:	add	w9, w9, w10
    243c:	add	w8, w8, w9
    2440:	ror	w9, w0, #11
    2444:	eor	w9, w9, w0, ror #6
    2448:	eor	w9, w9, w0, ror #25
    244c:	add	w8, w8, w9
    2450:	add	w5, w5, w8
    2454:	ror	w9, w1, #13
    2458:	eor	w9, w9, w1, ror #2
    245c:	eor	w9, w9, w1, ror #22
    2460:	orr	w10, w3, w1
    2464:	and	w10, w10, w4
    2468:	and	w11, w3, w1
    246c:	orr	w10, w10, w11
    2470:	add	w9, w9, w10
    2474:	add	w9, w9, w8
    2478:	eor	w8, w6, w0
    247c:	and	w8, w8, w5
    2480:	eor	w8, w8, w6
    2484:	add	w7, w8, w7
    2488:	ldr	w8, [sp, #212]
    248c:	mov	w10, #0xaa4a                	// #43594
    2490:	movk	w10, #0x4ed8, lsl #16
    2494:	add	w8, w8, w10
    2498:	add	w7, w7, w8
    249c:	ror	w8, w5, #11
    24a0:	eor	w8, w8, w5, ror #6
    24a4:	eor	w8, w8, w5, ror #25
    24a8:	add	w7, w7, w8
    24ac:	add	w4, w4, w7
    24b0:	ror	w8, w9, #13
    24b4:	eor	w8, w8, w9, ror #2
    24b8:	eor	w8, w8, w9, ror #22
    24bc:	orr	w10, w1, w9
    24c0:	and	w10, w10, w3
    24c4:	and	w11, w1, w9
    24c8:	orr	w10, w10, w11
    24cc:	add	w8, w8, w10
    24d0:	add	w8, w8, w7
    24d4:	eor	w7, w0, w5
    24d8:	and	w7, w7, w4
    24dc:	eor	w7, w7, w0
    24e0:	add	w6, w7, w6
    24e4:	ldr	w7, [sp, #216]
    24e8:	mov	w10, #0xca4f                	// #51791
    24ec:	movk	w10, #0x5b9c, lsl #16
    24f0:	add	w7, w7, w10
    24f4:	add	w6, w6, w7
    24f8:	ror	w7, w4, #11
    24fc:	eor	w7, w7, w4, ror #6
    2500:	eor	w7, w7, w4, ror #25
    2504:	add	w6, w6, w7
    2508:	add	w3, w3, w6
    250c:	ror	w7, w8, #13
    2510:	eor	w7, w7, w8, ror #2
    2514:	eor	w7, w7, w8, ror #22
    2518:	orr	w10, w9, w8
    251c:	and	w10, w10, w1
    2520:	and	w11, w9, w8
    2524:	orr	w10, w10, w11
    2528:	add	w7, w7, w10
    252c:	add	w7, w7, w6
    2530:	eor	w6, w5, w4
    2534:	and	w6, w6, w3
    2538:	eor	w6, w6, w5
    253c:	add	w0, w6, w0
    2540:	ldr	w6, [sp, #220]
    2544:	mov	w10, #0x6ff3                	// #28659
    2548:	movk	w10, #0x682e, lsl #16
    254c:	add	w6, w6, w10
    2550:	add	w0, w0, w6
    2554:	ror	w6, w3, #11
    2558:	eor	w6, w6, w3, ror #6
    255c:	eor	w6, w6, w3, ror #25
    2560:	add	w0, w0, w6
    2564:	add	w1, w1, w0
    2568:	ror	w6, w7, #13
    256c:	eor	w6, w6, w7, ror #2
    2570:	eor	w6, w6, w7, ror #22
    2574:	orr	w10, w8, w7
    2578:	and	w10, w10, w9
    257c:	and	w11, w8, w7
    2580:	orr	w10, w10, w11
    2584:	add	w6, w6, w10
    2588:	add	w6, w6, w0
    258c:	eor	w0, w4, w3
    2590:	and	w0, w0, w1
    2594:	eor	w0, w0, w4
    2598:	add	w0, w0, w5
    259c:	ldr	w5, [sp, #224]
    25a0:	mov	w10, #0x82ee                	// #33518
    25a4:	movk	w10, #0x748f, lsl #16
    25a8:	add	w5, w5, w10
    25ac:	add	w0, w0, w5
    25b0:	ror	w5, w1, #11
    25b4:	eor	w5, w5, w1, ror #6
    25b8:	eor	w5, w5, w1, ror #25
    25bc:	add	w0, w0, w5
    25c0:	add	w9, w9, w0
    25c4:	ror	w5, w6, #13
    25c8:	eor	w5, w5, w6, ror #2
    25cc:	eor	w5, w5, w6, ror #22
    25d0:	orr	w10, w7, w6
    25d4:	and	w10, w10, w8
    25d8:	and	w11, w7, w6
    25dc:	orr	w10, w10, w11
    25e0:	add	w5, w5, w10
    25e4:	add	w5, w5, w0
    25e8:	eor	w0, w3, w1
    25ec:	and	w0, w0, w9
    25f0:	eor	w0, w0, w3
    25f4:	add	w0, w0, w4
    25f8:	ldr	w4, [sp, #228]
    25fc:	mov	w10, #0x636f                	// #25455
    2600:	movk	w10, #0x78a5, lsl #16
    2604:	add	w4, w4, w10
    2608:	add	w0, w0, w4
    260c:	ror	w4, w9, #11
    2610:	eor	w4, w4, w9, ror #6
    2614:	eor	w4, w4, w9, ror #25
    2618:	add	w0, w0, w4
    261c:	add	w8, w8, w0
    2620:	ror	w4, w5, #13
    2624:	eor	w4, w4, w5, ror #2
    2628:	eor	w4, w4, w5, ror #22
    262c:	orr	w10, w6, w5
    2630:	and	w10, w10, w7
    2634:	and	w11, w6, w5
    2638:	orr	w10, w10, w11
    263c:	add	w4, w4, w10
    2640:	add	w0, w4, w0
    2644:	eor	w4, w1, w9
    2648:	and	w4, w4, w8
    264c:	eor	w4, w4, w1
    2650:	add	w3, w4, w3
    2654:	ldr	w4, [sp, #232]
    2658:	mov	w10, #0x7814                	// #30740
    265c:	movk	w10, #0x84c8, lsl #16
    2660:	add	w4, w4, w10
    2664:	add	w3, w3, w4
    2668:	ror	w4, w8, #11
    266c:	eor	w4, w4, w8, ror #6
    2670:	eor	w4, w4, w8, ror #25
    2674:	add	w3, w3, w4
    2678:	add	w7, w7, w3
    267c:	ror	w4, w0, #13
    2680:	eor	w4, w4, w0, ror #2
    2684:	eor	w4, w4, w0, ror #22
    2688:	orr	w10, w5, w0
    268c:	and	w10, w10, w6
    2690:	and	w11, w5, w0
    2694:	orr	w10, w10, w11
    2698:	add	w4, w4, w10
    269c:	add	w3, w4, w3
    26a0:	eor	w4, w9, w8
    26a4:	and	w4, w4, w7
    26a8:	eor	w4, w4, w9
    26ac:	add	w1, w4, w1
    26b0:	ldr	w4, [sp, #236]
    26b4:	mov	w10, #0x208                 	// #520
    26b8:	movk	w10, #0x8cc7, lsl #16
    26bc:	add	w4, w4, w10
    26c0:	add	w1, w1, w4
    26c4:	ror	w4, w7, #11
    26c8:	eor	w4, w4, w7, ror #6
    26cc:	eor	w4, w4, w7, ror #25
    26d0:	add	w1, w1, w4
    26d4:	add	w6, w6, w1
    26d8:	ror	w4, w3, #13
    26dc:	eor	w4, w4, w3, ror #2
    26e0:	eor	w4, w4, w3, ror #22
    26e4:	orr	w10, w0, w3
    26e8:	and	w10, w10, w5
    26ec:	and	w11, w0, w3
    26f0:	orr	w10, w10, w11
    26f4:	add	w4, w4, w10
    26f8:	add	w4, w4, w1
    26fc:	eor	w1, w8, w7
    2700:	and	w1, w1, w6
    2704:	eor	w1, w1, w8
    2708:	add	w1, w1, w9
    270c:	ldr	w9, [sp, #240]
    2710:	mov	w10, #0xfffa                	// #65530
    2714:	movk	w10, #0x90be, lsl #16
    2718:	add	w9, w9, w10
    271c:	add	w1, w1, w9
    2720:	ror	w9, w6, #11
    2724:	eor	w9, w9, w6, ror #6
    2728:	eor	w9, w9, w6, ror #25
    272c:	add	w1, w1, w9
    2730:	add	w5, w5, w1
    2734:	str	w5, [sp, #284]
    2738:	ror	w9, w4, #13
    273c:	eor	w9, w9, w4, ror #2
    2740:	eor	w9, w9, w4, ror #22
    2744:	orr	w10, w3, w4
    2748:	and	w10, w10, w0
    274c:	and	w11, w3, w4
    2750:	orr	w10, w10, w11
    2754:	add	w9, w9, w10
    2758:	add	w9, w9, w1
    275c:	str	w9, [sp, #268]
    2760:	eor	w1, w7, w6
    2764:	and	w1, w1, w5
    2768:	eor	w1, w1, w7
    276c:	add	w1, w1, w8
    2770:	ldr	w8, [sp, #244]
    2774:	mov	w10, #0x6ceb                	// #27883
    2778:	movk	w10, #0xa450, lsl #16
    277c:	add	w8, w8, w10
    2780:	add	w1, w1, w8
    2784:	ror	w8, w5, #11
    2788:	eor	w8, w8, w5, ror #6
    278c:	eor	w8, w8, w5, ror #25
    2790:	add	w1, w1, w8
    2794:	add	w0, w0, w1
    2798:	str	w0, [sp, #280]
    279c:	ror	w8, w9, #13
    27a0:	eor	w8, w8, w9, ror #2
    27a4:	eor	w8, w8, w9, ror #22
    27a8:	orr	w10, w4, w9
    27ac:	and	w10, w10, w3
    27b0:	and	w11, w4, w9
    27b4:	orr	w10, w10, w11
    27b8:	add	w8, w8, w10
    27bc:	add	w1, w8, w1
    27c0:	str	w1, [sp, #264]
    27c4:	eor	w8, w6, w5
    27c8:	and	w8, w8, w0
    27cc:	eor	w8, w8, w6
    27d0:	add	w7, w8, w7
    27d4:	ldr	w8, [sp, #248]
    27d8:	mov	w10, #0xa3f7                	// #41975
    27dc:	movk	w10, #0xbef9, lsl #16
    27e0:	add	w8, w8, w10
    27e4:	add	w7, w7, w8
    27e8:	ror	w8, w0, #11
    27ec:	eor	w8, w8, w0, ror #6
    27f0:	eor	w8, w8, w0, ror #25
    27f4:	add	w8, w7, w8
    27f8:	add	w3, w3, w8
    27fc:	str	w3, [sp, #276]
    2800:	ror	w7, w1, #13
    2804:	eor	w7, w7, w1, ror #2
    2808:	eor	w7, w7, w1, ror #22
    280c:	orr	w10, w9, w1
    2810:	and	w10, w10, w4
    2814:	and	w11, w9, w1
    2818:	orr	w10, w10, w11
    281c:	add	w7, w7, w10
    2820:	add	w7, w7, w8
    2824:	str	w7, [sp, #260]
    2828:	eor	w0, w5, w0
    282c:	and	w0, w0, w3
    2830:	eor	w0, w0, w5
    2834:	add	w0, w0, w6
    2838:	ldr	w5, [sp, #252]
    283c:	mov	w6, #0x78f2                	// #30962
    2840:	movk	w6, #0xc671, lsl #16
    2844:	add	w5, w5, w6
    2848:	add	w0, w0, w5
    284c:	ror	w5, w3, #11
    2850:	eor	w5, w5, w3, ror #6
    2854:	eor	w3, w5, w3, ror #25
    2858:	add	w0, w0, w3
    285c:	add	w4, w4, w0
    2860:	str	w4, [sp, #272]
    2864:	ror	w3, w7, #13
    2868:	eor	w3, w3, w7, ror #2
    286c:	eor	w3, w3, w7, ror #22
    2870:	orr	w4, w1, w7
    2874:	and	w9, w4, w9
    2878:	and	w1, w1, w7
    287c:	orr	w1, w9, w1
    2880:	add	w1, w3, w1
    2884:	add	w0, w1, w0
    2888:	str	w0, [sp, #256]
    288c:	mov	x0, #0x1                   	// #1
    2890:	add	x4, sp, #0x100
    2894:	add	x3, x4, x0, lsl #2
    2898:	ldr	w1, [x2, x0, lsl #2]
    289c:	ldur	w3, [x3, #-4]
    28a0:	add	w1, w1, w3
    28a4:	str	w1, [x2, x0, lsl #2]
    28a8:	add	x0, x0, #0x1
    28ac:	cmp	x0, #0x9
    28b0:	b.ne	2894 <_Py_strhex@plt+0x1924>  // b.any
    28b4:	add	sp, sp, #0x120
    28b8:	ret
    28bc:	stp	x29, x30, [sp, #-64]!
    28c0:	mov	x29, sp
    28c4:	stp	x19, x20, [sp, #16]
    28c8:	stp	x21, x22, [sp, #32]
    28cc:	mov	x20, x0
    28d0:	mov	x19, x1
    28d4:	mov	x21, x2
    28d8:	ldr	w2, [x0, #48]
    28dc:	mov	w0, w21
    28e0:	add	w1, w2, w21, lsl #3
    28e4:	cmp	w2, w1
    28e8:	b.ls	28f8 <_Py_strhex@plt+0x1988>  // b.plast
    28ec:	ldr	w2, [x20, #52]
    28f0:	add	w2, w2, #0x1
    28f4:	str	w2, [x20, #52]
    28f8:	str	w1, [x20, #48]
    28fc:	ldr	w1, [x20, #52]
    2900:	add	w0, w1, w0, lsr #29
    2904:	str	w0, [x20, #52]
    2908:	ldr	w3, [x20, #120]
    290c:	cbnz	w3, 2990 <_Py_strhex@plt+0x1a20>
    2910:	cmp	x21, #0x3f
    2914:	b.le	29e0 <_Py_strhex@plt+0x1a70>
    2918:	str	x23, [sp, #48]
    291c:	sub	x23, x21, #0x40
    2920:	lsr	x23, x23, #6
    2924:	add	x22, x23, #0x1
    2928:	add	x22, x19, x22, lsl #6
    292c:	ldp	x2, x3, [x19]
    2930:	stp	x2, x3, [x20, #56]
    2934:	ldp	x2, x3, [x19, #16]
    2938:	stp	x2, x3, [x20, #72]
    293c:	ldp	x2, x3, [x19, #32]
    2940:	stp	x2, x3, [x20, #88]
    2944:	ldp	x4, x5, [x19, #48]
    2948:	stp	x4, x5, [x20, #104]
    294c:	add	x19, x19, #0x40
    2950:	mov	x0, x20
    2954:	bl	1088 <_Py_strhex@plt+0x118>
    2958:	cmp	x19, x22
    295c:	b.ne	292c <_Py_strhex@plt+0x19bc>  // b.any
    2960:	sub	x21, x21, #0x40
    2964:	sub	x21, x21, x23, lsl #6
    2968:	ldr	x23, [sp, #48]
    296c:	mov	x2, x21
    2970:	mov	x1, x22
    2974:	add	x0, x20, #0x38
    2978:	bl	e50 <memcpy@plt>
    297c:	str	w21, [x20, #120]
    2980:	ldp	x19, x20, [sp, #16]
    2984:	ldp	x21, x22, [sp, #32]
    2988:	ldp	x29, x30, [sp], #64
    298c:	ret
    2990:	mov	w22, #0x40                  	// #64
    2994:	sub	w22, w22, w3
    2998:	sxtw	x22, w22
    299c:	cmp	x21, x22
    29a0:	csel	x22, x21, x22, le
    29a4:	add	x0, x20, #0x38
    29a8:	mov	x2, x22
    29ac:	mov	x1, x19
    29b0:	add	x0, x0, w3, sxtw
    29b4:	bl	e50 <memcpy@plt>
    29b8:	ldr	w0, [x20, #120]
    29bc:	add	w0, w0, w22
    29c0:	str	w0, [x20, #120]
    29c4:	cmp	w0, #0x40
    29c8:	b.ne	2980 <_Py_strhex@plt+0x1a10>  // b.any
    29cc:	sub	x21, x21, x22
    29d0:	add	x19, x19, x22
    29d4:	mov	x0, x20
    29d8:	bl	1088 <_Py_strhex@plt+0x118>
    29dc:	b	2910 <_Py_strhex@plt+0x19a0>
    29e0:	mov	x22, x19
    29e4:	b	296c <_Py_strhex@plt+0x19fc>
    29e8:	sub	sp, sp, #0x90
    29ec:	stp	x29, x30, [sp, #16]
    29f0:	add	x29, sp, #0x10
    29f4:	stp	x19, x20, [sp, #32]
    29f8:	mov	x0, x1
    29fc:	mov	x1, x2
    2a00:	cbz	x3, 2b3c <_Py_strhex@plt+0x1bcc>
    2a04:	ldr	x19, [x3, #16]
    2a08:	add	x19, x2, x19
    2a0c:	add	x2, sp, #0x88
    2a10:	str	x2, [sp]
    2a14:	mov	w7, #0x0                   	// #0
    2a18:	mov	w6, #0x1                   	// #1
    2a1c:	mov	w5, #0x0                   	// #0
    2a20:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10bbc>
    2a24:	add	x4, x4, #0xa0
    2a28:	mov	x2, #0x0                   	// #0
    2a2c:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2a30:	cbz	x0, 2c0c <_Py_strhex@plt+0x1c9c>
    2a34:	cbz	x19, 2c14 <_Py_strhex@plt+0x1ca4>
    2a38:	ldr	x20, [x0]
    2a3c:	cbz	x20, 2c14 <_Py_strhex@plt+0x1ca4>
    2a40:	ldr	x0, [x20, #8]
    2a44:	ldr	x1, [x0, #168]
    2a48:	tbnz	w1, #28, 2b58 <_Py_strhex@plt+0x1be8>
    2a4c:	ldr	x0, [x0, #160]
    2a50:	cbz	x0, 2b78 <_Py_strhex@plt+0x1c08>
    2a54:	ldr	x0, [x0]
    2a58:	cbz	x0, 2b78 <_Py_strhex@plt+0x1c08>
    2a5c:	mov	w2, #0x0                   	// #0
    2a60:	add	x1, sp, #0x38
    2a64:	mov	x0, x20
    2a68:	bl	f30 <PyObject_GetBuffer@plt>
    2a6c:	cmn	w0, #0x1
    2a70:	b.eq	2c04 <_Py_strhex@plt+0x1c94>  // b.none
    2a74:	ldr	w0, [sp, #92]
    2a78:	cmp	w0, #0x1
    2a7c:	b.gt	2b98 <_Py_strhex@plt+0x1c28>
    2a80:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    2a84:	add	x0, x0, #0xa0
    2a88:	add	x0, x0, #0x40
    2a8c:	bl	f40 <_PyObject_New@plt>
    2a90:	mov	x19, x0
    2a94:	cbz	x0, 2bc0 <_Py_strhex@plt+0x1c50>
    2a98:	mov	w0, #0x9ed8                	// #40664
    2a9c:	movk	w0, #0xc105, lsl #16
    2aa0:	str	w0, [x19, #16]
    2aa4:	mov	w0, #0xd507                	// #54535
    2aa8:	movk	w0, #0x367c, lsl #16
    2aac:	str	w0, [x19, #20]
    2ab0:	mov	w0, #0xdd17                	// #56599
    2ab4:	movk	w0, #0x3070, lsl #16
    2ab8:	str	w0, [x19, #24]
    2abc:	mov	w0, #0x5939                	// #22841
    2ac0:	movk	w0, #0xf70e, lsl #16
    2ac4:	str	w0, [x19, #28]
    2ac8:	mov	w0, #0xb31                 	// #2865
    2acc:	movk	w0, #0xffc0, lsl #16
    2ad0:	str	w0, [x19, #32]
    2ad4:	mov	w0, #0x1511                	// #5393
    2ad8:	movk	w0, #0x6858, lsl #16
    2adc:	str	w0, [x19, #36]
    2ae0:	mov	w0, #0x8fa7                	// #36775
    2ae4:	movk	w0, #0x64f9, lsl #16
    2ae8:	str	w0, [x19, #40]
    2aec:	mov	w0, #0x4fa4                	// #20388
    2af0:	movk	w0, #0xbefa, lsl #16
    2af4:	str	w0, [x19, #44]
    2af8:	str	wzr, [x19, #48]
    2afc:	str	wzr, [x19, #52]
    2b00:	str	wzr, [x19, #120]
    2b04:	mov	w0, #0x1c                  	// #28
    2b08:	str	w0, [x19, #124]
    2b0c:	bl	f10 <PyErr_Occurred@plt>
    2b10:	cbz	x0, 2bd8 <_Py_strhex@plt+0x1c68>
    2b14:	ldr	x0, [x19]
    2b18:	sub	x0, x0, #0x1
    2b1c:	str	x0, [x19]
    2b20:	cbz	x0, 2bcc <_Py_strhex@plt+0x1c5c>
    2b24:	mov	x19, x20
    2b28:	cbz	x20, 2bf0 <_Py_strhex@plt+0x1c80>
    2b2c:	add	x0, sp, #0x38
    2b30:	bl	e60 <PyBuffer_Release@plt>
    2b34:	mov	x19, #0x0                   	// #0
    2b38:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2b3c:	cmp	x0, #0x0
    2b40:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    2b44:	b.ls	2b50 <_Py_strhex@plt+0x1be0>  // b.plast
    2b48:	mov	x19, x2
    2b4c:	b	2a0c <_Py_strhex@plt+0x1a9c>
    2b50:	mov	x19, x2
    2b54:	b	2a34 <_Py_strhex@plt+0x1ac4>
    2b58:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2b5c:	add	x1, x1, #0x518
    2b60:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2b64:	ldr	x0, [x0, #4032]
    2b68:	ldr	x0, [x0]
    2b6c:	bl	eb0 <PyErr_SetString@plt>
    2b70:	mov	x19, #0x0                   	// #0
    2b74:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2b78:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2b7c:	add	x1, x1, #0x548
    2b80:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2b84:	ldr	x0, [x0, #4032]
    2b88:	ldr	x0, [x0]
    2b8c:	bl	eb0 <PyErr_SetString@plt>
    2b90:	mov	x19, #0x0                   	// #0
    2b94:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2b98:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2b9c:	add	x1, x1, #0x578
    2ba0:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2ba4:	ldr	x0, [x0, #4024]
    2ba8:	ldr	x0, [x0]
    2bac:	bl	eb0 <PyErr_SetString@plt>
    2bb0:	add	x0, sp, #0x38
    2bb4:	bl	e60 <PyBuffer_Release@plt>
    2bb8:	mov	x19, #0x0                   	// #0
    2bbc:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2bc0:	add	x0, sp, #0x38
    2bc4:	bl	e60 <PyBuffer_Release@plt>
    2bc8:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2bcc:	mov	x0, x19
    2bd0:	bl	e90 <_Py_Dealloc@plt>
    2bd4:	b	2b24 <_Py_strhex@plt+0x1bb4>
    2bd8:	ldr	x2, [sp, #72]
    2bdc:	ldr	x1, [sp, #56]
    2be0:	mov	x0, x19
    2be4:	bl	28bc <_Py_strhex@plt+0x194c>
    2be8:	add	x0, sp, #0x38
    2bec:	bl	e60 <PyBuffer_Release@plt>
    2bf0:	mov	x0, x19
    2bf4:	ldp	x19, x20, [sp, #32]
    2bf8:	ldp	x29, x30, [sp, #16]
    2bfc:	add	sp, sp, #0x90
    2c00:	ret
    2c04:	mov	x19, #0x0                   	// #0
    2c08:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2c0c:	mov	x19, x0
    2c10:	b	2bf0 <_Py_strhex@plt+0x1c80>
    2c14:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    2c18:	add	x0, x0, #0xa0
    2c1c:	add	x0, x0, #0x40
    2c20:	bl	f40 <_PyObject_New@plt>
    2c24:	mov	x19, x0
    2c28:	cbz	x0, 2bf0 <_Py_strhex@plt+0x1c80>
    2c2c:	mov	w0, #0x9ed8                	// #40664
    2c30:	movk	w0, #0xc105, lsl #16
    2c34:	str	w0, [x19, #16]
    2c38:	mov	w0, #0xd507                	// #54535
    2c3c:	movk	w0, #0x367c, lsl #16
    2c40:	str	w0, [x19, #20]
    2c44:	mov	w0, #0xdd17                	// #56599
    2c48:	movk	w0, #0x3070, lsl #16
    2c4c:	str	w0, [x19, #24]
    2c50:	mov	w0, #0x5939                	// #22841
    2c54:	movk	w0, #0xf70e, lsl #16
    2c58:	str	w0, [x19, #28]
    2c5c:	mov	w0, #0xb31                 	// #2865
    2c60:	movk	w0, #0xffc0, lsl #16
    2c64:	str	w0, [x19, #32]
    2c68:	mov	w0, #0x1511                	// #5393
    2c6c:	movk	w0, #0x6858, lsl #16
    2c70:	str	w0, [x19, #36]
    2c74:	mov	w0, #0x8fa7                	// #36775
    2c78:	movk	w0, #0x64f9, lsl #16
    2c7c:	str	w0, [x19, #40]
    2c80:	mov	w0, #0x4fa4                	// #20388
    2c84:	movk	w0, #0xbefa, lsl #16
    2c88:	str	w0, [x19, #44]
    2c8c:	str	wzr, [x19, #48]
    2c90:	str	wzr, [x19, #52]
    2c94:	str	wzr, [x19, #120]
    2c98:	mov	w0, #0x1c                  	// #28
    2c9c:	str	w0, [x19, #124]
    2ca0:	bl	f10 <PyErr_Occurred@plt>
    2ca4:	cbz	x0, 2bf0 <_Py_strhex@plt+0x1c80>
    2ca8:	mov	x20, #0x0                   	// #0
    2cac:	b	2b14 <_Py_strhex@plt+0x1ba4>
    2cb0:	sub	sp, sp, #0x90
    2cb4:	stp	x29, x30, [sp, #16]
    2cb8:	add	x29, sp, #0x10
    2cbc:	stp	x19, x20, [sp, #32]
    2cc0:	mov	x0, x1
    2cc4:	mov	x1, x2
    2cc8:	cbz	x3, 2e08 <_Py_strhex@plt+0x1e98>
    2ccc:	ldr	x19, [x3, #16]
    2cd0:	add	x19, x2, x19
    2cd4:	add	x2, sp, #0x88
    2cd8:	str	x2, [sp]
    2cdc:	mov	w7, #0x0                   	// #0
    2ce0:	mov	w6, #0x1                   	// #1
    2ce4:	mov	w5, #0x0                   	// #0
    2ce8:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10bbc>
    2cec:	add	x4, x4, #0xa0
    2cf0:	add	x4, x4, #0x1e0
    2cf4:	mov	x2, #0x0                   	// #0
    2cf8:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2cfc:	cbz	x0, 2ed8 <_Py_strhex@plt+0x1f68>
    2d00:	cbz	x19, 2ee0 <_Py_strhex@plt+0x1f70>
    2d04:	ldr	x20, [x0]
    2d08:	cbz	x20, 2ee0 <_Py_strhex@plt+0x1f70>
    2d0c:	ldr	x0, [x20, #8]
    2d10:	ldr	x1, [x0, #168]
    2d14:	tbnz	w1, #28, 2e24 <_Py_strhex@plt+0x1eb4>
    2d18:	ldr	x0, [x0, #160]
    2d1c:	cbz	x0, 2e44 <_Py_strhex@plt+0x1ed4>
    2d20:	ldr	x0, [x0]
    2d24:	cbz	x0, 2e44 <_Py_strhex@plt+0x1ed4>
    2d28:	mov	w2, #0x0                   	// #0
    2d2c:	add	x1, sp, #0x38
    2d30:	mov	x0, x20
    2d34:	bl	f30 <PyObject_GetBuffer@plt>
    2d38:	cmn	w0, #0x1
    2d3c:	b.eq	2ed0 <_Py_strhex@plt+0x1f60>  // b.none
    2d40:	ldr	w0, [sp, #92]
    2d44:	cmp	w0, #0x1
    2d48:	b.gt	2e64 <_Py_strhex@plt+0x1ef4>
    2d4c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    2d50:	add	x0, x0, #0xa0
    2d54:	add	x0, x0, #0x220
    2d58:	bl	f40 <_PyObject_New@plt>
    2d5c:	mov	x19, x0
    2d60:	cbz	x0, 2e8c <_Py_strhex@plt+0x1f1c>
    2d64:	mov	w0, #0xe667                	// #58983
    2d68:	movk	w0, #0x6a09, lsl #16
    2d6c:	str	w0, [x19, #16]
    2d70:	mov	w0, #0xae85                	// #44677
    2d74:	movk	w0, #0xbb67, lsl #16
    2d78:	str	w0, [x19, #20]
    2d7c:	mov	w0, #0xf372                	// #62322
    2d80:	movk	w0, #0x3c6e, lsl #16
    2d84:	str	w0, [x19, #24]
    2d88:	mov	w0, #0xf53a                	// #62778
    2d8c:	movk	w0, #0xa54f, lsl #16
    2d90:	str	w0, [x19, #28]
    2d94:	mov	w0, #0x527f                	// #21119
    2d98:	movk	w0, #0x510e, lsl #16
    2d9c:	str	w0, [x19, #32]
    2da0:	mov	w0, #0x688c                	// #26764
    2da4:	movk	w0, #0x9b05, lsl #16
    2da8:	str	w0, [x19, #36]
    2dac:	mov	w0, #0xd9ab                	// #55723
    2db0:	movk	w0, #0x1f83, lsl #16
    2db4:	str	w0, [x19, #40]
    2db8:	mov	w0, #0xcd19                	// #52505
    2dbc:	movk	w0, #0x5be0, lsl #16
    2dc0:	str	w0, [x19, #44]
    2dc4:	str	wzr, [x19, #48]
    2dc8:	str	wzr, [x19, #52]
    2dcc:	str	wzr, [x19, #120]
    2dd0:	mov	w0, #0x20                  	// #32
    2dd4:	str	w0, [x19, #124]
    2dd8:	bl	f10 <PyErr_Occurred@plt>
    2ddc:	cbz	x0, 2ea4 <_Py_strhex@plt+0x1f34>
    2de0:	ldr	x0, [x19]
    2de4:	sub	x0, x0, #0x1
    2de8:	str	x0, [x19]
    2dec:	cbz	x0, 2e98 <_Py_strhex@plt+0x1f28>
    2df0:	mov	x19, x20
    2df4:	cbz	x20, 2ebc <_Py_strhex@plt+0x1f4c>
    2df8:	add	x0, sp, #0x38
    2dfc:	bl	e60 <PyBuffer_Release@plt>
    2e00:	mov	x19, #0x0                   	// #0
    2e04:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2e08:	cmp	x0, #0x0
    2e0c:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    2e10:	b.ls	2e1c <_Py_strhex@plt+0x1eac>  // b.plast
    2e14:	mov	x19, x2
    2e18:	b	2cd4 <_Py_strhex@plt+0x1d64>
    2e1c:	mov	x19, x2
    2e20:	b	2d00 <_Py_strhex@plt+0x1d90>
    2e24:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2e28:	add	x1, x1, #0x518
    2e2c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2e30:	ldr	x0, [x0, #4032]
    2e34:	ldr	x0, [x0]
    2e38:	bl	eb0 <PyErr_SetString@plt>
    2e3c:	mov	x19, #0x0                   	// #0
    2e40:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2e44:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2e48:	add	x1, x1, #0x548
    2e4c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2e50:	ldr	x0, [x0, #4032]
    2e54:	ldr	x0, [x0]
    2e58:	bl	eb0 <PyErr_SetString@plt>
    2e5c:	mov	x19, #0x0                   	// #0
    2e60:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2e64:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2e68:	add	x1, x1, #0x578
    2e6c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2e70:	ldr	x0, [x0, #4024]
    2e74:	ldr	x0, [x0]
    2e78:	bl	eb0 <PyErr_SetString@plt>
    2e7c:	add	x0, sp, #0x38
    2e80:	bl	e60 <PyBuffer_Release@plt>
    2e84:	mov	x19, #0x0                   	// #0
    2e88:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2e8c:	add	x0, sp, #0x38
    2e90:	bl	e60 <PyBuffer_Release@plt>
    2e94:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2e98:	mov	x0, x19
    2e9c:	bl	e90 <_Py_Dealloc@plt>
    2ea0:	b	2df0 <_Py_strhex@plt+0x1e80>
    2ea4:	ldr	x2, [sp, #72]
    2ea8:	ldr	x1, [sp, #56]
    2eac:	mov	x0, x19
    2eb0:	bl	28bc <_Py_strhex@plt+0x194c>
    2eb4:	add	x0, sp, #0x38
    2eb8:	bl	e60 <PyBuffer_Release@plt>
    2ebc:	mov	x0, x19
    2ec0:	ldp	x19, x20, [sp, #32]
    2ec4:	ldp	x29, x30, [sp, #16]
    2ec8:	add	sp, sp, #0x90
    2ecc:	ret
    2ed0:	mov	x19, #0x0                   	// #0
    2ed4:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2ed8:	mov	x19, x0
    2edc:	b	2ebc <_Py_strhex@plt+0x1f4c>
    2ee0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    2ee4:	add	x0, x0, #0xa0
    2ee8:	add	x0, x0, #0x220
    2eec:	bl	f40 <_PyObject_New@plt>
    2ef0:	mov	x19, x0
    2ef4:	cbz	x0, 2ebc <_Py_strhex@plt+0x1f4c>
    2ef8:	mov	w0, #0xe667                	// #58983
    2efc:	movk	w0, #0x6a09, lsl #16
    2f00:	str	w0, [x19, #16]
    2f04:	mov	w0, #0xae85                	// #44677
    2f08:	movk	w0, #0xbb67, lsl #16
    2f0c:	str	w0, [x19, #20]
    2f10:	mov	w0, #0xf372                	// #62322
    2f14:	movk	w0, #0x3c6e, lsl #16
    2f18:	str	w0, [x19, #24]
    2f1c:	mov	w0, #0xf53a                	// #62778
    2f20:	movk	w0, #0xa54f, lsl #16
    2f24:	str	w0, [x19, #28]
    2f28:	mov	w0, #0x527f                	// #21119
    2f2c:	movk	w0, #0x510e, lsl #16
    2f30:	str	w0, [x19, #32]
    2f34:	mov	w0, #0x688c                	// #26764
    2f38:	movk	w0, #0x9b05, lsl #16
    2f3c:	str	w0, [x19, #36]
    2f40:	mov	w0, #0xd9ab                	// #55723
    2f44:	movk	w0, #0x1f83, lsl #16
    2f48:	str	w0, [x19, #40]
    2f4c:	mov	w0, #0xcd19                	// #52505
    2f50:	movk	w0, #0x5be0, lsl #16
    2f54:	str	w0, [x19, #44]
    2f58:	str	wzr, [x19, #48]
    2f5c:	str	wzr, [x19, #52]
    2f60:	str	wzr, [x19, #120]
    2f64:	mov	w0, #0x20                  	// #32
    2f68:	str	w0, [x19, #124]
    2f6c:	bl	f10 <PyErr_Occurred@plt>
    2f70:	cbz	x0, 2ebc <_Py_strhex@plt+0x1f4c>
    2f74:	mov	x20, #0x0                   	// #0
    2f78:	b	2de0 <_Py_strhex@plt+0x1e70>
    2f7c:	stp	x29, x30, [sp, #-112]!
    2f80:	mov	x29, sp
    2f84:	str	x19, [sp, #16]
    2f88:	mov	x19, x0
    2f8c:	mov	x0, x1
    2f90:	ldr	x1, [x1, #8]
    2f94:	ldr	x2, [x1, #168]
    2f98:	tbnz	w2, #28, 3004 <_Py_strhex@plt+0x2094>
    2f9c:	ldr	x1, [x1, #160]
    2fa0:	cbz	x1, 3024 <_Py_strhex@plt+0x20b4>
    2fa4:	ldr	x1, [x1]
    2fa8:	cbz	x1, 3024 <_Py_strhex@plt+0x20b4>
    2fac:	mov	w2, #0x0                   	// #0
    2fb0:	add	x1, sp, #0x20
    2fb4:	bl	f30 <PyObject_GetBuffer@plt>
    2fb8:	cmn	w0, #0x1
    2fbc:	b.eq	306c <_Py_strhex@plt+0x20fc>  // b.none
    2fc0:	ldr	w0, [sp, #68]
    2fc4:	cmp	w0, #0x1
    2fc8:	b.gt	3044 <_Py_strhex@plt+0x20d4>
    2fcc:	ldr	x2, [sp, #48]
    2fd0:	ldr	x1, [sp, #32]
    2fd4:	mov	x0, x19
    2fd8:	bl	28bc <_Py_strhex@plt+0x194c>
    2fdc:	add	x0, sp, #0x20
    2fe0:	bl	e60 <PyBuffer_Release@plt>
    2fe4:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    2fe8:	ldr	x0, [x0, #4056]
    2fec:	ldr	x1, [x0]
    2ff0:	add	x1, x1, #0x1
    2ff4:	str	x1, [x0]
    2ff8:	ldr	x19, [sp, #16]
    2ffc:	ldp	x29, x30, [sp], #112
    3000:	ret
    3004:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3008:	add	x1, x1, #0x518
    300c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    3010:	ldr	x0, [x0, #4032]
    3014:	ldr	x0, [x0]
    3018:	bl	eb0 <PyErr_SetString@plt>
    301c:	mov	x0, #0x0                   	// #0
    3020:	b	2ff8 <_Py_strhex@plt+0x2088>
    3024:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3028:	add	x1, x1, #0x548
    302c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    3030:	ldr	x0, [x0, #4032]
    3034:	ldr	x0, [x0]
    3038:	bl	eb0 <PyErr_SetString@plt>
    303c:	mov	x0, #0x0                   	// #0
    3040:	b	2ff8 <_Py_strhex@plt+0x2088>
    3044:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3048:	add	x1, x1, #0x578
    304c:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfbbc>
    3050:	ldr	x0, [x0, #4024]
    3054:	ldr	x0, [x0]
    3058:	bl	eb0 <PyErr_SetString@plt>
    305c:	add	x0, sp, #0x20
    3060:	bl	e60 <PyBuffer_Release@plt>
    3064:	mov	x0, #0x0                   	// #0
    3068:	b	2ff8 <_Py_strhex@plt+0x2088>
    306c:	mov	x0, #0x0                   	// #0
    3070:	b	2ff8 <_Py_strhex@plt+0x2088>
    3074:	ldr	w2, [x0, #120]
    3078:	str	w2, [x1, #120]
    307c:	ldr	w2, [x0, #124]
    3080:	str	w2, [x1, #124]
    3084:	ldr	w2, [x0, #48]
    3088:	str	w2, [x1, #48]
    308c:	ldr	w2, [x0, #52]
    3090:	str	w2, [x1, #52]
    3094:	ldp	x2, x3, [x0, #16]
    3098:	stp	x2, x3, [x1, #16]
    309c:	ldp	x2, x3, [x0, #32]
    30a0:	stp	x2, x3, [x1, #32]
    30a4:	add	x2, x1, #0x38
    30a8:	add	x3, x0, #0x38
    30ac:	ldp	x4, x5, [x0, #56]
    30b0:	stp	x4, x5, [x1, #56]
    30b4:	ldp	x0, x1, [x0, #72]
    30b8:	stp	x0, x1, [x2, #16]
    30bc:	ldp	x0, x1, [x3, #32]
    30c0:	stp	x0, x1, [x2, #32]
    30c4:	ldp	x0, x1, [x3, #48]
    30c8:	stp	x0, x1, [x2, #48]
    30cc:	ret
    30d0:	stp	x29, x30, [sp, #-16]!
    30d4:	mov	x29, sp
    30d8:	ldr	w0, [x0, #124]
    30dc:	cmp	w0, #0x20
    30e0:	b.eq	30fc <_Py_strhex@plt+0x218c>  // b.none
    30e4:	mov	x1, #0x6                   	// #6
    30e8:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    30ec:	add	x0, x0, #0x630
    30f0:	bl	f60 <PyUnicode_FromStringAndSize@plt>
    30f4:	ldp	x29, x30, [sp], #16
    30f8:	ret
    30fc:	mov	x1, #0x6                   	// #6
    3100:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    3104:	add	x0, x0, #0x620
    3108:	bl	f60 <PyUnicode_FromStringAndSize@plt>
    310c:	b	30f4 <_Py_strhex@plt+0x2184>
    3110:	stp	x29, x30, [sp, #-16]!
    3114:	mov	x29, sp
    3118:	mov	x0, #0x40                  	// #64
    311c:	bl	ef0 <PyLong_FromLong@plt>
    3120:	ldp	x29, x30, [sp], #16
    3124:	ret
    3128:	stp	x29, x30, [sp, #-64]!
    312c:	mov	x29, sp
    3130:	stp	x19, x20, [sp, #16]
    3134:	stp	x21, x22, [sp, #32]
    3138:	str	x23, [sp, #48]
    313c:	mov	x20, x0
    3140:	mov	x19, x1
    3144:	ldr	w21, [x1, #48]
    3148:	ldr	w22, [x1, #52]
    314c:	ubfx	x1, x21, #3, #6
    3150:	add	x23, x19, #0x38
    3154:	add	w0, w1, #0x1
    3158:	mov	w2, #0xffffff80            	// #-128
    315c:	strb	w2, [x23, w1, sxtw]
    3160:	cmp	w0, #0x38
    3164:	b.le	330c <_Py_strhex@plt+0x239c>
    3168:	mov	w2, #0x40                  	// #64
    316c:	sub	w2, w2, w0
    3170:	sxtw	x2, w2
    3174:	mov	w1, #0x0                   	// #0
    3178:	add	x0, x23, w0, sxtw
    317c:	bl	ec0 <memset@plt>
    3180:	mov	x0, x19
    3184:	bl	1088 <_Py_strhex@plt+0x118>
    3188:	stp	xzr, xzr, [x19, #56]
    318c:	stp	xzr, xzr, [x23, #16]
    3190:	stp	xzr, xzr, [x23, #32]
    3194:	str	xzr, [x23, #48]
    3198:	lsr	w0, w22, #24
    319c:	strb	w0, [x19, #112]
    31a0:	lsr	w0, w22, #16
    31a4:	strb	w0, [x19, #113]
    31a8:	lsr	w0, w22, #8
    31ac:	strb	w0, [x19, #114]
    31b0:	strb	w22, [x19, #115]
    31b4:	lsr	w0, w21, #24
    31b8:	strb	w0, [x19, #116]
    31bc:	lsr	w0, w21, #16
    31c0:	strb	w0, [x19, #117]
    31c4:	lsr	w0, w21, #8
    31c8:	strb	w0, [x19, #118]
    31cc:	strb	w21, [x19, #119]
    31d0:	mov	x0, x19
    31d4:	bl	1088 <_Py_strhex@plt+0x118>
    31d8:	ldrb	w0, [x19, #19]
    31dc:	strb	w0, [x20]
    31e0:	ldrh	w0, [x19, #18]
    31e4:	strb	w0, [x20, #1]
    31e8:	ldr	w0, [x19, #16]
    31ec:	lsr	w0, w0, #8
    31f0:	strb	w0, [x20, #2]
    31f4:	ldr	w0, [x19, #16]
    31f8:	strb	w0, [x20, #3]
    31fc:	ldrb	w0, [x19, #23]
    3200:	strb	w0, [x20, #4]
    3204:	ldrh	w0, [x19, #22]
    3208:	strb	w0, [x20, #5]
    320c:	ldr	w0, [x19, #20]
    3210:	lsr	w0, w0, #8
    3214:	strb	w0, [x20, #6]
    3218:	ldr	w0, [x19, #20]
    321c:	strb	w0, [x20, #7]
    3220:	ldrb	w0, [x19, #27]
    3224:	strb	w0, [x20, #8]
    3228:	ldrh	w0, [x19, #26]
    322c:	strb	w0, [x20, #9]
    3230:	ldr	w0, [x19, #24]
    3234:	lsr	w0, w0, #8
    3238:	strb	w0, [x20, #10]
    323c:	ldr	w0, [x19, #24]
    3240:	strb	w0, [x20, #11]
    3244:	ldrb	w0, [x19, #31]
    3248:	strb	w0, [x20, #12]
    324c:	ldrh	w0, [x19, #30]
    3250:	strb	w0, [x20, #13]
    3254:	ldr	w0, [x19, #28]
    3258:	lsr	w0, w0, #8
    325c:	strb	w0, [x20, #14]
    3260:	ldr	w0, [x19, #28]
    3264:	strb	w0, [x20, #15]
    3268:	ldrb	w0, [x19, #35]
    326c:	strb	w0, [x20, #16]
    3270:	ldrh	w0, [x19, #34]
    3274:	strb	w0, [x20, #17]
    3278:	ldr	w0, [x19, #32]
    327c:	lsr	w0, w0, #8
    3280:	strb	w0, [x20, #18]
    3284:	ldr	w0, [x19, #32]
    3288:	strb	w0, [x20, #19]
    328c:	ldrb	w0, [x19, #39]
    3290:	strb	w0, [x20, #20]
    3294:	ldrh	w0, [x19, #38]
    3298:	strb	w0, [x20, #21]
    329c:	ldr	w0, [x19, #36]
    32a0:	lsr	w0, w0, #8
    32a4:	strb	w0, [x20, #22]
    32a8:	ldr	w0, [x19, #36]
    32ac:	strb	w0, [x20, #23]
    32b0:	ldrb	w0, [x19, #43]
    32b4:	strb	w0, [x20, #24]
    32b8:	ldrh	w0, [x19, #42]
    32bc:	strb	w0, [x20, #25]
    32c0:	ldr	w0, [x19, #40]
    32c4:	lsr	w0, w0, #8
    32c8:	strb	w0, [x20, #26]
    32cc:	ldr	w0, [x19, #40]
    32d0:	strb	w0, [x20, #27]
    32d4:	ldrb	w0, [x19, #47]
    32d8:	strb	w0, [x20, #28]
    32dc:	ldrh	w0, [x19, #46]
    32e0:	strb	w0, [x20, #29]
    32e4:	ldr	w0, [x19, #44]
    32e8:	lsr	w0, w0, #8
    32ec:	strb	w0, [x20, #30]
    32f0:	ldr	w0, [x19, #44]
    32f4:	strb	w0, [x20, #31]
    32f8:	ldp	x19, x20, [sp, #16]
    32fc:	ldp	x21, x22, [sp, #32]
    3300:	ldr	x23, [sp, #48]
    3304:	ldp	x29, x30, [sp], #64
    3308:	ret
    330c:	mov	w2, #0x38                  	// #56
    3310:	sub	w2, w2, w0
    3314:	sxtw	x2, w2
    3318:	mov	w1, #0x0                   	// #0
    331c:	add	x0, x23, w0, sxtw
    3320:	bl	ec0 <memset@plt>
    3324:	b	3198 <_Py_strhex@plt+0x2228>
    3328:	stp	x29, x30, [sp, #-208]!
    332c:	mov	x29, sp
    3330:	stp	x19, x20, [sp, #16]
    3334:	str	x21, [sp, #32]
    3338:	mov	x20, x0
    333c:	add	x21, sp, #0x50
    3340:	mov	x1, x21
    3344:	bl	3074 <_Py_strhex@plt+0x2104>
    3348:	add	x19, sp, #0x30
    334c:	mov	x1, x21
    3350:	mov	x0, x19
    3354:	bl	3128 <_Py_strhex@plt+0x21b8>
    3358:	ldrsw	x1, [x20, #124]
    335c:	mov	x0, x19
    3360:	bl	f70 <_Py_strhex@plt>
    3364:	ldp	x19, x20, [sp, #16]
    3368:	ldr	x21, [sp, #32]
    336c:	ldp	x29, x30, [sp], #208
    3370:	ret
    3374:	stp	x29, x30, [sp, #-208]!
    3378:	mov	x29, sp
    337c:	stp	x19, x20, [sp, #16]
    3380:	str	x21, [sp, #32]
    3384:	mov	x20, x0
    3388:	add	x21, sp, #0x50
    338c:	mov	x1, x21
    3390:	bl	3074 <_Py_strhex@plt+0x2104>
    3394:	add	x19, sp, #0x30
    3398:	mov	x1, x21
    339c:	mov	x0, x19
    33a0:	bl	3128 <_Py_strhex@plt+0x21b8>
    33a4:	ldrsw	x1, [x20, #124]
    33a8:	mov	x0, x19
    33ac:	bl	e80 <PyBytes_FromStringAndSize@plt>
    33b0:	ldp	x19, x20, [sp, #16]
    33b4:	ldr	x21, [sp, #32]
    33b8:	ldp	x29, x30, [sp], #208
    33bc:	ret
    33c0:	stp	x29, x30, [sp, #-16]!
    33c4:	mov	x29, sp
    33c8:	bl	ed0 <PyObject_Free@plt>
    33cc:	ldp	x29, x30, [sp], #16
    33d0:	ret
    33d4:	stp	x29, x30, [sp, #-32]!
    33d8:	mov	x29, sp
    33dc:	stp	x19, x20, [sp, #16]
    33e0:	mov	x20, x0
    33e4:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10bbc>
    33e8:	add	x1, x1, #0xa0
    33ec:	add	x1, x1, #0x220
    33f0:	ldr	x0, [x0, #8]
    33f4:	cmp	x0, x1
    33f8:	b.eq	3430 <_Py_strhex@plt+0x24c0>  // b.none
    33fc:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    3400:	add	x0, x0, #0xa0
    3404:	add	x0, x0, #0x40
    3408:	bl	f40 <_PyObject_New@plt>
    340c:	mov	x19, x0
    3410:	cbz	x0, 3420 <_Py_strhex@plt+0x24b0>
    3414:	mov	x1, x19
    3418:	mov	x0, x20
    341c:	bl	3074 <_Py_strhex@plt+0x2104>
    3420:	mov	x0, x19
    3424:	ldp	x19, x20, [sp, #16]
    3428:	ldp	x29, x30, [sp], #32
    342c:	ret
    3430:	mov	x0, x1
    3434:	bl	f40 <_PyObject_New@plt>
    3438:	mov	x19, x0
    343c:	cbnz	x0, 3414 <_Py_strhex@plt+0x24a4>
    3440:	b	3420 <_Py_strhex@plt+0x24b0>

0000000000003444 <PyInit__sha256@@Base>:
    3444:	stp	x29, x30, [sp, #-32]!
    3448:	mov	x29, sp
    344c:	stp	x19, x20, [sp, #16]
    3450:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    3454:	add	x0, x0, #0xa0
    3458:	add	x0, x0, #0x40
    345c:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfbbc>
    3460:	ldr	x1, [x1, #4048]
    3464:	str	x1, [x0, #8]
    3468:	bl	ee0 <PyType_Ready@plt>
    346c:	mov	x19, #0x0                   	// #0
    3470:	tbnz	w0, #31, 34f8 <PyInit__sha256@@Base+0xb4>
    3474:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    3478:	add	x0, x0, #0xa0
    347c:	add	x0, x0, #0x220
    3480:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfbbc>
    3484:	ldr	x1, [x1, #4048]
    3488:	str	x1, [x0, #8]
    348c:	bl	ee0 <PyType_Ready@plt>
    3490:	tbnz	w0, #31, 34f8 <PyInit__sha256@@Base+0xb4>
    3494:	mov	w1, #0x3f5                 	// #1013
    3498:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10bbc>
    349c:	add	x0, x0, #0xa0
    34a0:	add	x0, x0, #0x3c0
    34a4:	bl	f20 <PyModule_Create2@plt>
    34a8:	mov	x19, x0
    34ac:	cbz	x0, 34f8 <PyInit__sha256@@Base+0xb4>
    34b0:	adrp	x20, 14000 <PyInit__sha256@@Base+0x10bbc>
    34b4:	add	x20, x20, #0xa0
    34b8:	ldr	x0, [x20, #64]
    34bc:	add	x0, x0, #0x1
    34c0:	str	x0, [x20, #64]
    34c4:	add	x2, x20, #0x40
    34c8:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    34cc:	add	x1, x1, #0x598
    34d0:	mov	x0, x19
    34d4:	bl	f50 <PyModule_AddObject@plt>
    34d8:	ldr	x0, [x20, #544]
    34dc:	add	x0, x0, #0x1
    34e0:	str	x0, [x20, #544]
    34e4:	add	x2, x20, #0x220
    34e8:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    34ec:	add	x1, x1, #0x5a8
    34f0:	mov	x0, x19
    34f4:	bl	f50 <PyModule_AddObject@plt>
    34f8:	mov	x0, x19
    34fc:	ldp	x19, x20, [sp, #16]
    3500:	ldp	x29, x30, [sp], #32
    3504:	ret

Disassembly of section .fini:

0000000000003508 <.fini>:
    3508:	stp	x29, x30, [sp, #-16]!
    350c:	mov	x29, sp
    3510:	ldp	x29, x30, [sp], #16
    3514:	ret
