
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//extcmd.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_extcmd_dispatcher>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #64]
  10:	stp	x19, xzr, [sp, #72]
  14:	ldr	x0, [x19, #16]
  18:	str	x3, [sp, #88]
  1c:	cbz	x0, c0 <grub_extcmd_dispatcher+0xc0>
  20:	mov	x20, x2
  24:	mov	x0, x19
  28:	str	x21, [sp, #32]
  2c:	mov	w21, w1
  30:	bl	cd8 <grub_arg_list_alloc>
  34:	mov	x3, x0
  38:	mov	x2, x20
  3c:	mov	w1, w21
  40:	mov	x20, x0
  44:	add	x5, sp, #0x3c
  48:	add	x4, sp, #0x40
  4c:	mov	x0, x19
  50:	bl	648 <grub_arg_parse>
  54:	cbz	w0, 98 <grub_extcmd_dispatcher+0x98>
  58:	ldr	w1, [sp, #60]
  5c:	add	x0, sp, #0x48
  60:	ldr	x3, [x19, #8]
  64:	str	x20, [sp, #80]
  68:	ldr	x2, [sp, #64]
  6c:	blr	x3
  70:	mov	w19, w0
  74:	ldr	x0, [sp, #64]
  78:	bl	0 <grub_free>
  7c:	mov	x0, x20
  80:	bl	0 <grub_free>
  84:	mov	w0, w19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #96
  94:	ret
  98:	mov	x0, x20
  9c:	bl	0 <grub_free>
  a0:	adrp	x0, 0 <grub_extcmd_dispatcher>
  a4:	ldr	x21, [sp, #32]
  a8:	ldr	x0, [x0]
  ac:	ldr	w19, [x0]
  b0:	mov	w0, w19
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x29, x30, [sp], #96
  bc:	ret
  c0:	ldr	x3, [x19, #8]
  c4:	add	x0, sp, #0x48
  c8:	blr	x3
  cc:	mov	w19, w0
  d0:	mov	w0, w19
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x29, x30, [sp], #96
  dc:	ret
	...

00000000000000e8 <grub_extcmd_dispatch>:
  e8:	mov	x3, #0x0                   	// #0
  ec:	b	0 <grub_extcmd_dispatcher>

00000000000000f0 <grub_register_extcmd_prio>:
  f0:	stp	x29, x30, [sp, #-80]!
  f4:	mov	x29, sp
  f8:	stp	x19, x20, [sp, #16]
  fc:	mov	w20, w2
 100:	stp	x21, x22, [sp, #32]
 104:	mov	x21, x0
 108:	mov	x22, x3
 10c:	mov	x0, #0x20                  	// #32
 110:	stp	x23, x24, [sp, #48]
 114:	mov	x23, x1
 118:	mov	x24, x4
 11c:	stp	x25, x26, [sp, #64]
 120:	mov	x25, x5
 124:	mov	w26, w6
 128:	bl	0 <grub_malloc>
 12c:	mov	x19, x0
 130:	cbz	x0, 168 <grub_register_extcmd_prio+0x78>
 134:	adrp	x0, 0 <grub_extcmd_dispatcher>
 138:	mov	w4, w26
 13c:	mov	x3, x24
 140:	mov	x2, x22
 144:	ldr	x1, [x0]
 148:	mov	x0, x21
 14c:	bl	0 <grub_register_command_prio>
 150:	cbz	x0, 184 <grub_register_extcmd_prio+0x94>
 154:	orr	w20, w20, #0x10
 158:	str	w20, [x0, #40]
 15c:	str	x19, [x0, #64]
 160:	stp	x0, x23, [x19]
 164:	stp	x25, xzr, [x19, #16]
 168:	mov	x0, x19
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x29, x30, [sp], #80
 180:	ret
 184:	mov	x0, x19
 188:	mov	x19, #0x0                   	// #0
 18c:	bl	0 <grub_free>
 190:	b	168 <grub_register_extcmd_prio+0x78>
 194:	nop
	...

00000000000001a0 <grub_register_extcmd>:
 1a0:	mov	w6, #0x1                   	// #1
 1a4:	b	f0 <grub_register_extcmd_prio>

00000000000001a8 <grub_unregister_extcmd>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	mov	x29, sp
 1b0:	str	x19, [sp, #16]
 1b4:	mov	x19, x0
 1b8:	ldr	x0, [x0]
 1bc:	bl	0 <grub_unregister_command>
 1c0:	mov	x0, x19
 1c4:	ldr	x19, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #32
 1cc:	b	0 <grub_free>

00000000000001d0 <showargs>:
 1d0:	stp	x29, x30, [sp, #-112]!
 1d4:	mov	x29, sp
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	mov	x19, x0
 1e0:	ldr	x0, [x0, #16]
 1e4:	stp	w2, w1, [sp, #104]
 1e8:	cbz	x0, 304 <showargs+0x134>
 1ec:	adrp	x3, 0 <grub_extcmd_dispatcher>
 1f0:	adrp	x2, 0 <grub_extcmd_dispatcher>
 1f4:	adrp	x1, 0 <grub_extcmd_dispatcher>
 1f8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 1fc:	ldr	x20, [x2]
 200:	stp	x21, x22, [sp, #32]
 204:	ldr	x21, [x3]
 208:	stp	x23, x24, [sp, #48]
 20c:	ldr	x22, [x0]
 210:	stp	x25, x26, [sp, #64]
 214:	mov	w26, #0x2                   	// #2
 218:	ldr	x23, [x1]
 21c:	adrp	x25, 0 <grub_extcmd_dispatcher>
 220:	stp	x27, x28, [sp, #80]
 224:	adrp	x28, 0 <grub_extcmd_dispatcher>
 228:	mov	w27, #0x14                  	// #20
 22c:	nop
 230:	ldr	w1, [x19, #8]
 234:	sub	w0, w1, #0x21
 238:	cmp	w0, #0x5d
 23c:	b.hi	310 <showargs+0x140>  // b.pmore
 240:	adrp	x0, 0 <grub_extcmd_dispatcher>
 244:	mov	w3, #0x2c                  	// #44
 248:	ldr	x2, [x19]
 24c:	ldr	x0, [x0]
 250:	cmp	x2, #0x0
 254:	mov	w2, #0x20                  	// #32
 258:	csel	w2, w3, w2, ne  // ne = any
 25c:	bl	0 <grub_printf>
 260:	ldr	x1, [x19]
 264:	mov	w24, #0x13                  	// #19
 268:	cbz	x1, 2b8 <showargs+0xe8>
 26c:	ldr	x0, [x28]
 270:	bl	0 <grub_printf>
 274:	ldr	x0, [x19]
 278:	bl	0 <grub_strlen>
 27c:	add	x2, x0, #0x2
 280:	ldr	x1, [x19, #24]
 284:	sub	w24, w27, w2
 288:	mov	w2, w24
 28c:	cbz	x1, 2ac <showargs+0xdc>
 290:	adrp	x0, 0 <grub_extcmd_dispatcher>
 294:	ldr	x0, [x0]
 298:	bl	0 <grub_printf>
 29c:	ldr	x0, [x19, #24]
 2a0:	bl	0 <grub_strlen>
 2a4:	add	x0, x0, #0x1
 2a8:	sub	w2, w24, w0
 2ac:	cmp	w2, #0x0
 2b0:	sub	w2, w2, #0x1
 2b4:	csel	w24, w2, w26, gt
 2b8:	ldr	x1, [x20]
 2bc:	sub	w24, w24, #0x1
 2c0:	mov	x0, x21
 2c4:	blr	x1
 2c8:	cmn	w24, #0x1
 2cc:	b.ne	2b8 <showargs+0xe8>  // b.any
 2d0:	ldr	x1, [x23]
 2d4:	add	x19, x19, #0x28
 2d8:	ldur	x0, [x19, #-24]
 2dc:	blr	x1
 2e0:	mov	x1, x0
 2e4:	mov	x0, x22
 2e8:	bl	0 <grub_printf>
 2ec:	ldr	x0, [x19, #16]
 2f0:	cbnz	x0, 230 <showargs+0x60>
 2f4:	ldp	x21, x22, [sp, #32]
 2f8:	ldp	x23, x24, [sp, #48]
 2fc:	ldp	x25, x26, [sp, #64]
 300:	ldp	x27, x28, [sp, #80]
 304:	ldp	x19, x20, [sp, #16]
 308:	ldp	x29, x30, [sp], #112
 30c:	ret
 310:	ldr	x0, [x25]
 314:	cmp	x19, x0
 318:	b.eq	340 <showargs+0x170>  // b.none
 31c:	ldr	w1, [sp, #104]
 320:	add	x0, x0, #0x28
 324:	cmp	w1, #0x0
 328:	ccmp	x19, x0, #0x0, eq  // eq = none
 32c:	b.eq	360 <showargs+0x190>  // b.none
 330:	adrp	x0, 0 <grub_extcmd_dispatcher>
 334:	ldr	x0, [x0]
 338:	bl	0 <grub_printf>
 33c:	b	260 <showargs+0x90>
 340:	ldr	w0, [sp, #108]
 344:	cbnz	w0, 330 <showargs+0x160>
 348:	adrp	x0, 0 <grub_extcmd_dispatcher>
 34c:	ldr	x0, [x0]
 350:	bl	0 <grub_printf>
 354:	adrp	x0, 0 <grub_extcmd_dispatcher>
 358:	ldr	x1, [x0]
 35c:	b	26c <showargs+0x9c>
 360:	adrp	x0, 0 <grub_extcmd_dispatcher>
 364:	ldr	x0, [x0]
 368:	bl	0 <grub_printf>
 36c:	b	260 <showargs+0x90>
	...

00000000000003d0 <fnd_long>:
 3d0:	stp	x29, x30, [sp, #-48]!
 3d4:	mov	x29, sp
 3d8:	stp	x19, x20, [sp, #16]
 3dc:	mov	x19, x0
 3e0:	ldr	x0, [x0, #16]
 3e4:	cbz	x0, 42c <fnd_long+0x5c>
 3e8:	sxtw	x20, w2
 3ec:	str	x21, [sp, #32]
 3f0:	mov	x21, x1
 3f4:	nop
 3f8:	ldr	x0, [x19]
 3fc:	mov	x2, x20
 400:	mov	x1, x21
 404:	cbz	x0, 41c <fnd_long+0x4c>
 408:	bl	0 <grub_strncmp>
 40c:	cbnz	w0, 41c <fnd_long+0x4c>
 410:	ldr	x0, [x19]
 414:	ldrb	w0, [x0, x20]
 418:	cbz	w0, 43c <fnd_long+0x6c>
 41c:	ldr	x0, [x19, #56]
 420:	add	x19, x19, #0x28
 424:	cbnz	x0, 3f8 <fnd_long+0x28>
 428:	ldr	x21, [sp, #32]
 42c:	mov	x0, #0x0                   	// #0
 430:	ldp	x19, x20, [sp, #16]
 434:	ldp	x29, x30, [sp], #48
 438:	ret
 43c:	mov	x0, x19
 440:	ldp	x19, x20, [sp, #16]
 444:	ldr	x21, [sp, #32]
 448:	ldp	x29, x30, [sp], #48
 44c:	ret

0000000000000450 <show_usage.isra.0>:
 450:	stp	x29, x30, [sp, #-32]!
 454:	adrp	x2, 0 <grub_extcmd_dispatcher>
 458:	adrp	x1, 0 <grub_extcmd_dispatcher>
 45c:	mov	x29, sp
 460:	stp	x19, x20, [sp, #16]
 464:	mov	x19, x0
 468:	ldr	x20, [x2]
 46c:	ldr	x0, [x1]
 470:	ldr	x1, [x20]
 474:	blr	x1
 478:	ldr	x1, [x19]
 47c:	mov	x19, x0
 480:	ldr	x2, [x20]
 484:	ldr	x0, [x1, #48]
 488:	ldr	x20, [x1, #16]
 48c:	blr	x2
 490:	mov	x3, x0
 494:	mov	x2, x20
 498:	mov	x1, x19
 49c:	adrp	x4, 0 <grub_extcmd_dispatcher>
 4a0:	ldp	x19, x20, [sp, #16]
 4a4:	ldp	x29, x30, [sp], #32
 4a8:	ldr	x0, [x4]
 4ac:	b	0 <grub_printf>
	...

00000000000004c8 <grub_arg_show_help>:
 4c8:	stp	x29, x30, [sp, #-48]!
 4cc:	mov	x29, sp
 4d0:	stp	x19, x20, [sp, #16]
 4d4:	mov	w19, #0x0                   	// #0
 4d8:	mov	w20, #0x0                   	// #0
 4dc:	str	x21, [sp, #32]
 4e0:	mov	x21, x0
 4e4:	bl	450 <show_usage.isra.0>
 4e8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 4ec:	ldr	x1, [x0]
 4f0:	ldr	x0, [x21]
 4f4:	ldr	x1, [x1]
 4f8:	ldr	x0, [x0, #56]
 4fc:	blr	x1
 500:	mov	x1, x0
 504:	adrp	x2, 0 <grub_extcmd_dispatcher>
 508:	ldr	x0, [x2]
 50c:	bl	0 <grub_printf>
 510:	ldr	x0, [x21, #16]
 514:	mov	w4, #0x1                   	// #1
 518:	mov	x1, x0
 51c:	cbz	x0, 554 <grub_arg_show_help+0x8c>
 520:	ldr	x2, [x1, #16]
 524:	cbz	x2, 548 <grub_arg_show_help+0x80>
 528:	ldr	w3, [x1, #8]
 52c:	cmp	w3, #0x68
 530:	b.eq	574 <grub_arg_show_help+0xac>  // b.none
 534:	cmp	w3, #0x75
 538:	add	x1, x1, #0x28
 53c:	csel	w19, w19, w4, ne  // ne = any
 540:	ldr	x2, [x1, #16]
 544:	cbnz	x2, 528 <grub_arg_show_help+0x60>
 548:	mov	w2, w19
 54c:	mov	w1, w20
 550:	bl	1d0 <showargs>
 554:	mov	w2, w19
 558:	mov	w1, w20
 55c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 560:	ldp	x19, x20, [sp, #16]
 564:	ldr	x21, [sp, #32]
 568:	ldp	x29, x30, [sp], #48
 56c:	ldr	x0, [x0]
 570:	b	1d0 <showargs>
 574:	add	x1, x1, #0x28
 578:	mov	w20, #0x1                   	// #1
 57c:	b	540 <grub_arg_show_help+0x78>
	...

0000000000000598 <parse_option>:
 598:	stp	x29, x30, [sp, #-16]!
 59c:	adrp	x4, 0 <grub_extcmd_dispatcher>
 5a0:	mov	x29, sp
 5a4:	ldr	x4, [x4]
 5a8:	cmp	x1, x4
 5ac:	b.eq	634 <parse_option+0x9c>  // b.none
 5b0:	add	x4, x4, #0x28
 5b4:	cmp	x1, x4
 5b8:	b.eq	628 <parse_option+0x90>  // b.none
 5bc:	ldr	x0, [x0, #16]
 5c0:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
 5c4:	ldr	w4, [x1, #12]
 5c8:	movk	x5, #0xcccd
 5cc:	sub	x1, x1, x0
 5d0:	and	w0, w4, #0x4
 5d4:	asr	x1, x1, #3
 5d8:	mul	x1, x1, x5
 5dc:	sbfiz	x1, x1, #4, #32
 5e0:	add	x5, x3, x1
 5e4:	tbnz	w4, #2, 5fc <parse_option+0x64>
 5e8:	mov	w4, #0x1                   	// #1
 5ec:	str	w4, [x3, x1]
 5f0:	str	x2, [x5, #8]
 5f4:	ldp	x29, x30, [sp], #16
 5f8:	ret
 5fc:	ldr	w4, [x3, x1]
 600:	mov	w0, #0x0                   	// #0
 604:	ldr	x6, [x5, #8]
 608:	add	w7, w4, #0x1
 60c:	str	w7, [x3, x1]
 610:	str	x2, [x6, w4, sxtw #3]
 614:	ldr	x1, [x5, #8]
 618:	add	x4, x1, w4, sxtw #3
 61c:	str	xzr, [x4, #8]
 620:	ldp	x29, x30, [sp], #16
 624:	ret
 628:	bl	450 <show_usage.isra.0>
 62c:	mov	w0, #0xffffffff            	// #-1
 630:	b	5f4 <parse_option+0x5c>
 634:	bl	4c8 <grub_arg_show_help>
 638:	mov	w0, #0xffffffff            	// #-1
 63c:	b	5f4 <parse_option+0x5c>
	...

0000000000000648 <grub_arg_parse>:
 648:	stp	x29, x30, [sp, #-144]!
 64c:	cmp	w1, #0x0
 650:	mov	x29, sp
 654:	stp	x25, x26, [sp, #64]
 658:	stp	x4, x5, [sp, #96]
 65c:	b.le	a44 <grub_arg_parse+0x3fc>
 660:	stp	x21, x22, [sp, #32]
 664:	mov	x22, x2
 668:	mov	w21, w1
 66c:	stp	x19, x20, [sp, #16]
 670:	mov	w26, #0x0                   	// #0
 674:	mov	x19, x0
 678:	stp	x23, x24, [sp, #48]
 67c:	mov	x23, x3
 680:	mov	x24, #0x0                   	// #0
 684:	stp	x27, x28, [sp, #80]
 688:	mov	w28, #0x0                   	// #0
 68c:	sbfiz	x27, x28, #3, #32
 690:	ldr	x20, [x22, w28, sxtw #3]
 694:	cbz	w26, 6e8 <grub_arg_parse+0xa0>
 698:	ldr	x0, [x19]
 69c:	ldr	w0, [x0, #40]
 6a0:	tbz	w0, #8, 6e8 <grub_arg_parse+0xa0>
 6a4:	add	w1, w26, #0x2
 6a8:	mov	x0, x24
 6ac:	add	w26, w26, #0x1
 6b0:	sbfiz	x27, x1, #3, #32
 6b4:	mov	x1, x27
 6b8:	bl	0 <grub_realloc>
 6bc:	mov	x25, x0
 6c0:	cbz	x0, 828 <grub_arg_parse+0x1e0>
 6c4:	add	x1, x0, x27
 6c8:	stp	x20, xzr, [x1, #-16]
 6cc:	add	w28, w28, #0x1
 6d0:	cmp	w21, w28
 6d4:	b.le	870 <grub_arg_parse+0x228>
 6d8:	mov	x24, x25
 6dc:	sbfiz	x27, x28, #3, #32
 6e0:	ldr	x20, [x22, w28, sxtw #3]
 6e4:	cbnz	w26, 698 <grub_arg_parse+0x50>
 6e8:	ldrb	w0, [x20]
 6ec:	cmp	w0, #0x2d
 6f0:	b.ne	6a4 <grub_arg_parse+0x5c>  // b.any
 6f4:	mov	x0, x20
 6f8:	bl	0 <grub_strlen>
 6fc:	cmp	x0, #0x1
 700:	b.eq	6a4 <grub_arg_parse+0x5c>  // b.none
 704:	ldrb	w1, [x20, #1]
 708:	cmp	w1, #0x2d
 70c:	b.eq	898 <grub_arg_parse+0x250>  // b.none
 710:	ldr	x0, [x19]
 714:	add	x25, x20, #0x1
 718:	ldr	x3, [x19, #16]
 71c:	ldr	w0, [x0, #40]
 720:	tbz	w0, #7, 764 <grub_arg_parse+0x11c>
 724:	cbz	w1, 764 <grub_arg_parse+0x11c>
 728:	mov	x8, x25
 72c:	mov	w6, w1
 730:	cbz	x3, 7e8 <grub_arg_parse+0x1a0>
 734:	ldr	x0, [x3, #16]
 738:	cbz	x0, 7e8 <grub_arg_parse+0x1a0>
 73c:	mov	x0, x3
 740:	b	74c <grub_arg_parse+0x104>
 744:	ldr	x2, [x0, #16]
 748:	cbz	x2, 7e8 <grub_arg_parse+0x1a0>
 74c:	ldr	w2, [x0, #8]
 750:	add	x0, x0, #0x28
 754:	cmp	w2, w6
 758:	b.ne	744 <grub_arg_parse+0xfc>  // b.any
 75c:	ldrb	w6, [x8, #1]!
 760:	cbnz	w6, 730 <grub_arg_parse+0xe8>
 764:	cbz	x3, 7c8 <grub_arg_parse+0x180>
 768:	ldr	x0, [x3, #16]
 76c:	cbnz	x0, 780 <grub_arg_parse+0x138>
 770:	b	7c8 <grub_arg_parse+0x180>
 774:	ldr	x0, [x3, #56]
 778:	add	x3, x3, #0x28
 77c:	cbz	x0, 7c8 <grub_arg_parse+0x180>
 780:	ldr	w0, [x3, #8]
 784:	cmp	w0, w1
 788:	b.ne	774 <grub_arg_parse+0x12c>  // b.any
 78c:	ldrb	w0, [x25, #1]!
 790:	cbz	w0, 964 <grub_arg_parse+0x31c>
 794:	mov	x1, x3
 798:	mov	x0, x19
 79c:	mov	x3, x23
 7a0:	mov	x2, #0x0                   	// #0
 7a4:	bl	598 <parse_option>
 7a8:	adrp	x1, 0 <grub_extcmd_dispatcher>
 7ac:	ldr	x6, [x1]
 7b0:	ldr	w1, [x6]
 7b4:	orr	w0, w0, w1
 7b8:	cbnz	w0, 840 <grub_arg_parse+0x1f8>
 7bc:	ldr	x3, [x19, #16]
 7c0:	ldrb	w1, [x25]
 7c4:	cbnz	x3, 768 <grub_arg_parse+0x120>
 7c8:	cmp	w1, #0x68
 7cc:	b.eq	864 <grub_arg_parse+0x21c>  // b.none
 7d0:	cmp	w1, #0x75
 7d4:	b.ne	934 <grub_arg_parse+0x2ec>  // b.any
 7d8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 7dc:	ldr	x3, [x0]
 7e0:	add	x3, x3, #0x28
 7e4:	b	78c <grub_arg_parse+0x144>
 7e8:	cmp	w6, #0x68
 7ec:	b.eq	75c <grub_arg_parse+0x114>  // b.none
 7f0:	cmp	w6, #0x75
 7f4:	b.eq	75c <grub_arg_parse+0x114>  // b.none
 7f8:	add	w1, w26, #0x2
 7fc:	mov	x0, x24
 800:	add	w26, w26, #0x1
 804:	sbfiz	x1, x1, #3, #32
 808:	str	x1, [sp, #112]
 80c:	bl	0 <grub_realloc>
 810:	mov	x25, x0
 814:	ldr	x1, [sp, #112]
 818:	cbz	x0, 828 <grub_arg_parse+0x1e0>
 81c:	add	x1, x25, x1
 820:	stp	x20, xzr, [x1, #-16]
 824:	b	6cc <grub_arg_parse+0x84>
 828:	mov	x0, x24
 82c:	bl	0 <grub_free>
 830:	adrp	x0, 0 <grub_extcmd_dispatcher>
 834:	ldr	x6, [x0]
 838:	ldr	w0, [x6]
 83c:	cbz	w0, 6cc <grub_arg_parse+0x84>
 840:	ldp	x19, x20, [sp, #16]
 844:	mov	w6, #0x0                   	// #0
 848:	ldp	x21, x22, [sp, #32]
 84c:	ldp	x23, x24, [sp, #48]
 850:	ldp	x27, x28, [sp, #80]
 854:	mov	w0, w6
 858:	ldp	x25, x26, [sp, #64]
 85c:	ldp	x29, x30, [sp], #144
 860:	ret
 864:	adrp	x0, 0 <grub_extcmd_dispatcher>
 868:	ldr	x3, [x0]
 86c:	b	78c <grub_arg_parse+0x144>
 870:	ldp	x19, x20, [sp, #16]
 874:	ldp	x21, x22, [sp, #32]
 878:	ldp	x23, x24, [sp, #48]
 87c:	ldp	x27, x28, [sp, #80]
 880:	mov	w6, #0x1                   	// #1
 884:	ldr	x0, [sp, #96]
 888:	str	x25, [x0]
 88c:	ldr	x0, [sp, #104]
 890:	str	w26, [x0]
 894:	b	854 <grub_arg_parse+0x20c>
 898:	mov	x0, x20
 89c:	bl	0 <grub_strlen>
 8a0:	cmp	x0, #0x2
 8a4:	b.eq	bc4 <grub_arg_parse+0x57c>  // b.none
 8a8:	mov	x0, x20
 8ac:	mov	w1, #0x3d                  	// #61
 8b0:	bl	0 <grub_strchr>
 8b4:	mov	x7, x0
 8b8:	cbz	x0, b7c <grub_arg_parse+0x534>
 8bc:	sub	x2, x0, x20
 8c0:	add	x7, x0, #0x1
 8c4:	ldr	x0, [x19, #16]
 8c8:	sub	w2, w2, #0x2
 8cc:	add	x25, x20, #0x2
 8d0:	cbz	x0, a88 <grub_arg_parse+0x440>
 8d4:	mov	x1, x25
 8d8:	str	w2, [sp, #112]
 8dc:	str	x7, [sp, #120]
 8e0:	bl	3d0 <fnd_long>
 8e4:	ldr	w2, [sp, #112]
 8e8:	mov	x3, x0
 8ec:	ldr	x7, [sp, #120]
 8f0:	cbz	x0, b30 <grub_arg_parse+0x4e8>
 8f4:	cbz	x7, a50 <grub_arg_parse+0x408>
 8f8:	ldr	w0, [x3, #32]
 8fc:	cbnz	w0, 994 <grub_arg_parse+0x34c>
 900:	adrp	x1, 0 <grub_extcmd_dispatcher>
 904:	mov	x2, x20
 908:	mov	w6, #0x0                   	// #0
 90c:	mov	w0, #0x12                  	// #18
 910:	ldr	x1, [x1]
 914:	str	w6, [sp, #96]
 918:	bl	0 <grub_error>
 91c:	ldr	w6, [sp, #96]
 920:	ldp	x19, x20, [sp, #16]
 924:	ldp	x21, x22, [sp, #32]
 928:	ldp	x23, x24, [sp, #48]
 92c:	ldp	x27, x28, [sp, #80]
 930:	b	854 <grub_arg_parse+0x20c>
 934:	mov	w1, #0x2d                  	// #45
 938:	strb	w1, [sp, #136]
 93c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 940:	mov	w6, #0x0                   	// #0
 944:	ldrb	w3, [x25]
 948:	add	x2, sp, #0x88
 94c:	ldr	x1, [x0]
 950:	mov	w0, #0x12                  	// #18
 954:	str	w6, [sp, #96]
 958:	strb	w3, [sp, #137]
 95c:	strb	wzr, [sp, #138]
 960:	b	918 <grub_arg_parse+0x2d0>
 964:	ldr	w0, [x3, #32]
 968:	cbz	w0, a14 <grub_arg_parse+0x3cc>
 96c:	ldr	w6, [x3, #12]
 970:	add	w25, w28, #0x1
 974:	cmp	w25, w21
 978:	and	w6, w6, #0x2
 97c:	b.ge	a6c <grub_arg_parse+0x424>  // b.tcont
 980:	cbnz	w6, 9d4 <grub_arg_parse+0x38c>
 984:	add	x1, x22, x27
 988:	ldr	x7, [x1, #8]
 98c:	mov	w28, w25
 990:	cbz	x7, a64 <grub_arg_parse+0x41c>
 994:	cmp	w0, #0x2
 998:	b.eq	ad0 <grub_arg_parse+0x488>  // b.none
 99c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 9a0:	ldr	x6, [x0]
 9a4:	mov	x1, x3
 9a8:	mov	x2, x7
 9ac:	mov	x3, x23
 9b0:	mov	x0, x19
 9b4:	str	x6, [sp, #112]
 9b8:	bl	598 <parse_option>
 9bc:	ldr	x6, [sp, #112]
 9c0:	ldr	w1, [x6]
 9c4:	orr	w0, w0, w1
 9c8:	cbnz	w0, 840 <grub_arg_parse+0x1f8>
 9cc:	mov	x25, x24
 9d0:	b	6cc <grub_arg_parse+0x84>
 9d4:	add	x27, x22, x27
 9d8:	ldr	x1, [x27, #8]
 9dc:	stp	x1, x3, [sp, #112]
 9e0:	mov	x0, x1
 9e4:	bl	0 <grub_strlen>
 9e8:	cmp	x0, #0x1
 9ec:	ldp	x1, x3, [sp, #112]
 9f0:	b.ls	bbc <grub_arg_parse+0x574>  // b.plast
 9f4:	ldrb	w1, [x1]
 9f8:	ldr	w0, [x3, #32]
 9fc:	cmp	w1, #0x2d
 a00:	b.eq	c54 <grub_arg_parse+0x60c>  // b.none
 a04:	ldr	x7, [x27, #8]
 a08:	cbnz	w0, 98c <grub_arg_parse+0x344>
 a0c:	cbnz	x7, 900 <grub_arg_parse+0x2b8>
 a10:	mov	w28, w25
 a14:	mov	x1, x3
 a18:	mov	x0, x19
 a1c:	mov	x3, x23
 a20:	mov	x2, #0x0                   	// #0
 a24:	bl	598 <parse_option>
 a28:	adrp	x1, 0 <grub_extcmd_dispatcher>
 a2c:	ldr	x6, [x1]
 a30:	ldr	w1, [x6]
 a34:	orr	w0, w0, w1
 a38:	cbnz	w0, 840 <grub_arg_parse+0x1f8>
 a3c:	mov	x25, x24
 a40:	b	6cc <grub_arg_parse+0x84>
 a44:	mov	w26, #0x0                   	// #0
 a48:	mov	x25, #0x0                   	// #0
 a4c:	b	880 <grub_arg_parse+0x238>
 a50:	add	x0, x22, x27
 a54:	ldr	x7, [x0, #8]
 a58:	cbnz	x7, b5c <grub_arg_parse+0x514>
 a5c:	ldr	w0, [x3, #32]
 a60:	cbz	w0, a14 <grub_arg_parse+0x3cc>
 a64:	ldr	w6, [x3, #12]
 a68:	and	w6, w6, #0x2
 a6c:	cbnz	w6, a14 <grub_arg_parse+0x3cc>
 a70:	adrp	x1, 0 <grub_extcmd_dispatcher>
 a74:	mov	w0, #0x12                  	// #18
 a78:	str	w6, [sp, #96]
 a7c:	ldr	x1, [x1]
 a80:	ldr	x2, [x3]
 a84:	b	918 <grub_arg_parse+0x2d0>
 a88:	adrp	x0, 0 <grub_extcmd_dispatcher>
 a8c:	mov	x1, x25
 a90:	str	x7, [sp, #112]
 a94:	ldr	x0, [x0]
 a98:	bl	3d0 <fnd_long>
 a9c:	mov	x3, x0
 aa0:	ldr	x7, [sp, #112]
 aa4:	cbnz	x3, 8f8 <grub_arg_parse+0x2b0>
 aa8:	ldr	x0, [x19]
 aac:	ldr	w0, [x0, #40]
 ab0:	tbnz	w0, #7, 7f8 <grub_arg_parse+0x1b0>
 ab4:	adrp	x1, 0 <grub_extcmd_dispatcher>
 ab8:	mov	w6, #0x0                   	// #0
 abc:	mov	x2, x20
 ac0:	mov	w0, #0x12                  	// #18
 ac4:	ldr	x1, [x1]
 ac8:	str	w6, [sp, #96]
 acc:	b	918 <grub_arg_parse+0x2d0>
 ad0:	mov	x0, x7
 ad4:	add	x1, sp, #0x88
 ad8:	mov	w2, #0x0                   	// #0
 adc:	stp	x7, x3, [sp, #112]
 ae0:	bl	0 <grub_strtoull>
 ae4:	ldr	x0, [sp, #136]
 ae8:	ldr	x7, [sp, #112]
 aec:	cmp	x0, #0x0
 af0:	ccmp	x0, x7, #0x4, ne  // ne = any
 af4:	b.eq	b14 <grub_arg_parse+0x4cc>  // b.none
 af8:	ldrb	w0, [x0]
 afc:	cbnz	w0, b14 <grub_arg_parse+0x4cc>
 b00:	adrp	x0, 0 <grub_extcmd_dispatcher>
 b04:	ldr	x3, [sp, #120]
 b08:	ldr	x6, [x0]
 b0c:	ldr	w0, [x6]
 b10:	cbz	w0, 9a4 <grub_arg_parse+0x35c>
 b14:	adrp	x1, 0 <grub_extcmd_dispatcher>
 b18:	mov	w6, #0x0                   	// #0
 b1c:	mov	x2, x20
 b20:	mov	w0, #0x12                  	// #18
 b24:	ldr	x1, [x1]
 b28:	str	w6, [sp, #96]
 b2c:	b	918 <grub_arg_parse+0x2d0>
 b30:	adrp	x0, 0 <grub_extcmd_dispatcher>
 b34:	mov	x1, x25
 b38:	str	x7, [sp, #112]
 b3c:	ldr	x0, [x0]
 b40:	bl	3d0 <fnd_long>
 b44:	mov	x3, x0
 b48:	ldr	x7, [sp, #112]
 b4c:	cbnz	x7, aa4 <grub_arg_parse+0x45c>
 b50:	add	x0, x22, x27
 b54:	ldr	x7, [x0, #8]
 b58:	cbz	x7, bb4 <grub_arg_parse+0x56c>
 b5c:	ldrb	w0, [x7]
 b60:	cmp	w0, #0x2d
 b64:	b.eq	bb4 <grub_arg_parse+0x56c>  // b.none
 b68:	cbz	x3, aa8 <grub_arg_parse+0x460>
 b6c:	ldr	w0, [x3, #32]
 b70:	cbz	w0, a14 <grub_arg_parse+0x3cc>
 b74:	add	w28, w28, #0x1
 b78:	b	994 <grub_arg_parse+0x34c>
 b7c:	mov	x0, x20
 b80:	str	x7, [sp, #112]
 b84:	bl	0 <grub_strlen>
 b88:	sub	w2, w0, #0x2
 b8c:	ldr	x0, [x19, #16]
 b90:	add	x25, x20, #0x2
 b94:	ldr	x7, [sp, #112]
 b98:	cbnz	x0, 8d4 <grub_arg_parse+0x28c>
 b9c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 ba0:	mov	x1, x25
 ba4:	ldr	x0, [x0]
 ba8:	bl	3d0 <fnd_long>
 bac:	mov	x3, x0
 bb0:	b	b50 <grub_arg_parse+0x508>
 bb4:	cbnz	x3, a5c <grub_arg_parse+0x414>
 bb8:	b	aa8 <grub_arg_parse+0x460>
 bbc:	ldr	w0, [x3, #32]
 bc0:	b	a04 <grub_arg_parse+0x3bc>
 bc4:	add	w0, w28, #0x1
 bc8:	cmp	w21, w0
 bcc:	b.le	c90 <grub_arg_parse+0x648>
 bd0:	sxtw	x0, w26
 bd4:	mov	x1, #0xfffffffffffffff8    	// #-8
 bd8:	add	x19, x0, #0x2
 bdc:	add	w21, w26, w21
 be0:	sub	w21, w21, w28
 be4:	mov	x25, x24
 be8:	madd	x0, x0, x1, x27
 bec:	add	w23, w26, #0x1
 bf0:	lsl	x19, x19, #3
 bf4:	adrp	x20, 0 <grub_extcmd_dispatcher>
 bf8:	add	x0, x0, x1
 bfc:	add	x22, x22, x0
 c00:	b	c18 <grub_arg_parse+0x5d0>
 c04:	add	x0, x1, x19
 c08:	stp	x24, xzr, [x0, #-16]
 c0c:	add	x19, x19, #0x8
 c10:	cmp	w21, w23
 c14:	b.eq	870 <grub_arg_parse+0x228>  // b.none
 c18:	mov	x1, x19
 c1c:	mov	x0, x25
 c20:	ldr	x24, [x22, x19]
 c24:	bl	0 <grub_realloc>
 c28:	mov	x1, x0
 c2c:	mov	w26, w23
 c30:	mov	x0, x25
 c34:	add	w23, w23, #0x1
 c38:	mov	x25, x1
 c3c:	cbnz	x1, c04 <grub_arg_parse+0x5bc>
 c40:	bl	0 <grub_free>
 c44:	ldr	x0, [x20]
 c48:	ldr	w0, [x0]
 c4c:	cbz	w0, c0c <grub_arg_parse+0x5c4>
 c50:	b	840 <grub_arg_parse+0x1f8>
 c54:	cbnz	w0, a64 <grub_arg_parse+0x41c>
 c58:	mov	x1, x3
 c5c:	mov	x0, x19
 c60:	mov	x3, x23
 c64:	mov	x2, #0x0                   	// #0
 c68:	bl	598 <parse_option>
 c6c:	adrp	x1, 0 <grub_extcmd_dispatcher>
 c70:	ldr	x6, [x1]
 c74:	ldr	w1, [x6]
 c78:	orr	w0, w0, w1
 c7c:	cbnz	w0, 840 <grub_arg_parse+0x1f8>
 c80:	mov	w28, w25
 c84:	mov	x25, x24
 c88:	mov	x24, x25
 c8c:	b	6dc <grub_arg_parse+0x94>
 c90:	mov	x25, x24
 c94:	ldp	x19, x20, [sp, #16]
 c98:	ldp	x21, x22, [sp, #32]
 c9c:	ldp	x23, x24, [sp, #48]
 ca0:	ldp	x27, x28, [sp, #80]
 ca4:	b	880 <grub_arg_parse+0x238>
	...

0000000000000cd8 <grub_arg_list_alloc>:
 cd8:	stp	x29, x30, [sp, #-48]!
 cdc:	mov	x29, sp
 ce0:	stp	x19, x20, [sp, #16]
 ce4:	ldr	x19, [x0, #16]
 ce8:	cbz	x19, db8 <grub_arg_list_alloc+0xe0>
 cec:	ldr	x0, [x19, #16]
 cf0:	str	x21, [sp, #32]
 cf4:	mov	w21, w1
 cf8:	cbz	x0, dc8 <grub_arg_list_alloc+0xf0>
 cfc:	sxtw	x6, w1
 d00:	mov	x20, #0x1                   	// #1
 d04:	add	x6, x6, #0x1
 d08:	add	x2, x19, #0xc
 d0c:	mov	x0, #0x0                   	// #0
 d10:	lsr	x6, x6, #1
 d14:	add	x6, x6, x20
 d18:	b	d20 <grub_arg_list_alloc+0x48>
 d1c:	mov	x20, x7
 d20:	mov	x3, x2
 d24:	ldr	w5, [x2], #40
 d28:	add	x4, x0, x6
 d2c:	add	x7, x20, #0x1
 d30:	ldur	x3, [x3, #44]
 d34:	tst	x5, #0x4
 d38:	csel	x0, x4, x0, ne  // ne = any
 d3c:	cbnz	x3, d1c <grub_arg_list_alloc+0x44>
 d40:	add	x0, x0, x20, lsl #1
 d44:	lsl	x0, x0, #3
 d48:	bl	0 <grub_zalloc>
 d4c:	cbz	x0, db4 <grub_arg_list_alloc+0xdc>
 d50:	ldr	x1, [x19, #16]
 d54:	add	x20, x0, x20, lsl #4
 d58:	cbz	x1, da4 <grub_arg_list_alloc+0xcc>
 d5c:	sxtw	x5, w21
 d60:	add	x1, x19, #0xc
 d64:	add	x2, x0, #0x8
 d68:	lsr	x5, x5, #1
 d6c:	add	x5, x5, #0x1
 d70:	lsl	x5, x5, #3
 d74:	nop
 d78:	stur	wzr, [x2, #-8]
 d7c:	mov	x3, x1
 d80:	str	xzr, [x2]
 d84:	add	x1, x1, #0x28
 d88:	ldur	w4, [x1, #-40]
 d8c:	tbz	w4, #2, d98 <grub_arg_list_alloc+0xc0>
 d90:	str	x20, [x2]
 d94:	add	x20, x20, x5
 d98:	ldur	x3, [x3, #44]
 d9c:	add	x2, x2, #0x10
 da0:	cbnz	x3, d78 <grub_arg_list_alloc+0xa0>
 da4:	ldp	x19, x20, [sp, #16]
 da8:	ldr	x21, [sp, #32]
 dac:	ldp	x29, x30, [sp], #48
 db0:	ret
 db4:	ldr	x21, [sp, #32]
 db8:	mov	x0, #0x0                   	// #0
 dbc:	ldp	x19, x20, [sp, #16]
 dc0:	ldp	x29, x30, [sp], #48
 dc4:	ret
 dc8:	mov	x0, #0x0                   	// #0
 dcc:	mov	x20, #0x0                   	// #0
 dd0:	b	d48 <grub_arg_list_alloc+0x70>
